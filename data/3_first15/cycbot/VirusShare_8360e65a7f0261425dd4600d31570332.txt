cmp
loopne
out
loopne
fbld
mov
movsl
loopne
out
movsb
loopne
xchg
movsl
loopne
test
loopne
jge
loopne
popf
cmpsb
loopne
xor
loopne
lea
loopne
mov
test
loopne
pop
cmpsl
loopne
xchg
mov
loopne
loopne
loopne
andb
mov
mov
loopne
cli
movsl
loopne
xor
loopne
pop
movsb
loopne
xor
mov
mov
loopne
lods
cmpsl
loopne
in
loopne
dec
test
loopne
mov
loopne
out
loopne
xchg
mov
mov
loopne
aad
loopne
add
loopne
cmp
loopne
sbb
movsl
loopne
mull
mov
mov
loopne
sbb
mov
loopne
fbld
mov
cmpsb
loopne
enter
pop
cmpsb
loopne
movsb
loopne
in
mov
loopne
xor
loopne
dec
mov
loopne
loope
loopne
pop
test
mov
movsb
loopne
popf
mov
loopne
xor
loopne
sub
loopne
cmpsl
loopne
sbb
cmpsl
loopne
dec
test
mov
mov
loopne
xor
loopne
jmp
cmpsl
loopne
cmpsb
loopne
imul
mov
cmpsl
loopne
out
movsl
loopne
mov
movsb
loopne
mov
loopne
inc
test
mov
test
mov
test
mov
movsl
loopne
push
test
loopne
repnz
mov
mov
loopne
sub
loopne
es
loopne
mov
mov
loopne
loopne
mov
loopne
pop
mov
loopne
lods
movsl
loopne
push
test
loopne
stc
mov
loopne
in
cmpsb
loopne
mov
test
mov
test
mov
mov
loopne
popa
movsb
loopne
cli
cmpsl
loopne
loopne
in
loopne
adc
loopne
fildll
loopne
cs
loopne
std
movsl
loopne
ret
mov
cmpsb
loopne
mov
loopne
shlb
mov
cmpsb
loopne
sbb
loopne
lret
mov
loopne
cmpsb
mov
loopne
lods
movsl
loopne
cld
cmpsl
loopne
movsb
loopne
mov
mov
test
mov
mov
loopne
mov
loopne
push
mov
loopne
xor
loopne
mov
loopne
rep
loopne
in
mov
loopne
mov
movsl
loopne
mov
cmpsl
loopne
dec
mov
loopne
loopne
jb
loopne
fsubs
loopne
in
loopne
push
test
mov
mov
loopne
cmp
loopne
dec
cmpsl
loopne
out
loopne
xchg
mov
loopne
push
test
loopne
shll
mov
mov
loopne
shll
loopne
push
mov
loopne
mov
loopne
mulb
loopne
lahf
cmpsl
loopne
push
cmpsb
loopne
adc
loopne
mov
test
loopne
pusha
cmpsb
loopne
pop
cmpsb
loopne
xchg
cmpsb
loopne
mov
loopne
outsl
mov
loopne
loopne
loopne
std
movsb
loopne
or
loopne
ja
loopne
lret
test
mov
cmpsl
loopne
cmpsl
loopne
int3
test
mov
mov
loopne
movsb
cmpsl
loopne
fsubl
loopne
mov
loopne
loope
loopne
push
movsb
loopne
std
mov
loopne
ja
loopne
mov
test
mov
test
mov
cmpsb
loopne
pop
mov
loopne
shll
mov
mov
loopne
es
mov
movsl
loopne
sub
mov
loopne
mov
movsl
loopne
test
loopne
sub
loopne
cmp
mov
loopne
xchg
test
mov
mov
loopne
js
loopne
or
loopne
xchg
movsb
loopne
or
loopne
repz
loopne
dec
mov
loopne
icebp
movsb
loopne
insb
mov
loopne
push
movsl
loopne
and
movsl
loopne
mov
loopne
pop
test
mov
cmpsl
loopne
mov
test
mov
test
loopne
stos
mov
loopne
out
loopne
mov
test
mov
mov
loopne
mov
loopne
pop
mov
loopne
movsb
test
mov
mov
loopne
adc
loopne
mov
loopne
cmp
cmpsb
loopne
mov
test
loopne
aaa
movsl
loopne
bound
mov
mov
loopne
adc
movsl
loopne
pop
cmpsl
loopne
enter
xchg
movsb
loopne
cmp
loopne
mov
movsl
loopne
push
cmpsb
loopne
mov
movsb
loopne
fbld
loopne
lods
movsb
loopne
and
loopne
call
movsl
loopne
dec
mov
loopne
push
cmpsl
loopne
sti
movsb
loopne
mulb
mov
mov
loopne
dec
movsl
loopne
cmp
movsb
loopne
mov
test
mov
mov
loopne
loope
loopne
jp
loopne
scas
mov
loopne
dec
movsb
loopne
mov
loopne
mov
test
mov
test
mov
movsl
loopne
and
loopne
aaa
cmpsb
loopne
sub
loopne
je
loopne
xchg
movsl
loopne
stc
movsb
loopne
popa
test
mov
movsb
loopne
or
loopne
adc
loopne
iret
movsl
loopne
xor
test
mov
test
mov
mov
loopne
enter
xchg
movsb
loopne
loope
loopne
push
cmpsb
loopne
movsb
test
mov
movsb
loopne
adc
loopne
jno
loopne
outsb
movsb
loopne
pop
cmpsl
loopne
arpl
loopne
xor
loopne
je
loopne
add
loopne
push
test
loopne
ret
mov
movsl
loopne
sbb
cmpsb
loopne
imull
loopne
in
loopne
fsubs
loopne
shll
mov
mov
loopne
cmp
loopne
push
cmpsl
loopne
mov
cmpsb
loopne
mov
test
mov
movsl
loopne
mov
cmpsb
loopne
pop
test
mov
test
mov
mov
loopne
inc
movsb
loopne
movsb
cmpsl
loopne
icebp
cmpsl
loopne
shll
loopne
imul
loopne
mov
loopne
inc
mov
loopne
shlb
loopne
jbe
loopne
jmp
loopne
push
mov
loopne
mov
loopne
sti
movsl
loopne
adc
mov
test
loopne
xor
cmpsb
loopne
mov
loopne
aad
loopne
jns
loopne
cltd
movsb
loopne
andb
mov
mov
loopne
mov
movsl
loopne
inc
test
mov
movsb
loopne
xchg
movsl
loopne
xor
loopne
sub
loopne
jl
loopne
movsl
loopne
jns
loopne
mov
loopne
mov
loopne
jb
loopne
ss
mov
movsl
loopne
jns
loopne
andb
mov
mov
loopne
bound
loopne
shlb
loopne
mov
loopne
enter
pop
mov
loopne
mov
loopne
mov
loopne
lea
loopne
add
cmpsl
loopne
inc
test
loopne
jne
loopne
test
loopne
frstor
mov
mov
loopne
xchg
cmpsb
loopne
movsl
mov
loopne
mov
loopne
or
loopne
xchg
mov
mov
loopne
pop
test
loopne
cmp
movsl
loopne
out
test
mov
test
loopne
subl
loopne
test
mov
movsl
loopne
sbb
loopne
lret
mov
mov
loopne
pop
test
mov
cmpsb
loopne
push
movsl
loopne
adc
loopne
xor
movsl
loopne
lods
mov
loopne
xchg
movsb
loopne
xor
test
mov
mov
loopne
cld
test
mov
mov
loopne
ljmp
mov
cmpsl
loopne
das
movsl
loopne
mov
loopne
popa
mov
loopne
pusha
cmpsl
loopne
xor
loopne
xchg
loopne
outsb
cmpsl
loopne
mov
loopne
fisubs
loopne
add
loopne
test
loopne
data16
mov
mov
loopne
inc
mov
loopne
xlat
test
mov
test
mov
mov
loopne
pop
mov
loopne
cmpsb
loopne
outsl
mov
loopne
xor
loopne
lcall
mov
movsl
loopne
frstor
loopne
outsl
mov
loopne
and
loopne
pop
cmpsl
loopne
or
loopne
push
movsb
loopne
popa
cmpsb
loopne
sub
loopne
je
loopne
enter
adc
mov
movsb
loopne
fsubl
loopne
mov
loopne
lcall
mov
cmpsl
loopne
sub
loopne
push
loopne
leave
cmpsb
loopne
leave
cmpsl
loopne
mov
mov
loopne
outsb
cmpsl
loopne
mov
mov
loopne
xor
loopne
mov
mov
test
loopne
lahf
cmpsb
loopne
push
cmpsb
loopne
out
loopne
repz
mov
mov
loopne
addr16
mov
cmpsb
loopne
aas
mov
loopne
scas
test
mov
mov
loopne
mov
loopne
enter
adc
loopne
sbb
loopne
out
mov
loopne
cmp
loopne
outsl
test
mov
cmpsl
loopne
shlb
loopne
fbld
loopne
cli
cmpsb
loopne
push
cmpsb
loopne
cmp
loopne
scas
mov
loopne
xchg
loopne
and
loopne
mov
movsb
loopne
push
test
mov
mov
loopne
in
cmpsb
loopne
out
cmpsb
loopne
cmpsw
loopne
cmp
loopne
mull
loopne
outsb
cmpsb
loopne
je
loopne
popf
mov
loopne
insl
cmpsl
loopne
and
loopne
push
test
mov
mov
loopne
bound
loopne
jle
loopne
jbe
loopne
ret
mov
loopne
mov
loopne
into
mov
loopne
mov
loopne
jno
loopne
jbe
loopne
in
cmpsl
loopne
popa
cmpsb
loopne
sub
loopne
inc
cmpsl
loopne
mov
loopne
lahf
mov
loopne
jmp
loopne
jmp
test
mov
movsl
loopne
xchg
cmpsb
loopne
mov
cmpsl
loopne
icebp
test
mov
movsl
loopne
in
movsb
loopne
cmp
loopne
jb
loopne
or
loopne
hlt
mov
loopne
dec
movsb
loopne
jns
loopne
aam
loopne
sub
loopne
xchg
mov
loopne
hlt
mov
loopne
ret
mov
test
mov
cmpsl
loopne
inc
movsb
loopne
cwtl
mov
loopne
xlat
mov
loopne
cmp
loopne
lods
mov
loopne
pop
mov
loopne
imulb
loopne
jno
loopne
xchg
loopne
add
loopne
push
loopne
ljmp
mov
mov
loopne
push
test
mov
mov
loopne
inc
mov
loopne
cmp
loopne
xor
movsl
loopne
lds
loopne
cmp
movsl
loopne
xchg
mov
loopne
dec
mov
loopne
xchg
mov
loopne
mov
test
loopne
fbld
loopne
mov
loopne
insb
mov
loopne
outsb
cmpsb
loopne
mulb
loopne
clc
mov
loopne
pop
cmpsl
loopne
cmpsl
loopne
enter
mov
loopne
arpl
loopne
mov
loopne
pop
movsb
loopne
xlat
mov
loopne
add
loopne
jns
loopne
fwait
movsb
loopne
pop
test
mov
movsb
loopne
out
movsl
loopne
mov
loopne
cmpsl
mov
loopne
cmp
loopne
fisubs
loopne
push
test
loopne
dec
mov
loopne
mov
loopne
nop
test
mov
mov
loopne
stos
mov
loopne
cmp
loopne
push
cmpsl
loopne
inc
test
loopne
fisubs
loopne
inc
cmpsb
loopne
mov
loopne
pop
mov
loopne
out
loopne
insb
mov
loopne
jnp
loopne
mov
loopne
sub
loopne
sbb
mov
loopne
mov
cmpsl
loopne
inc
test
mov
mov
loopne
inc
mov
loopne
inc
cmpsl
loopne
cwtl
mov
loopne
insl
movsl
loopne
xchg
mov
loopne
int3
test
mov
mov
loopne
imul
mov
mov
loopne
inc
movsl
loopne
pop
movsl
loopne
sbb
loopne
mov
loopne
outsb
movsl
loopne
cld
cmpsl
loopne
push
test
loopne
test
mov
loopne
pop
cmpsl
loopne
sahf
movsb
loopne
xor
loopne
cmp
mov
mov
loopne
mov
loopne
movsl
loopne
sbb
mov
loopne
inc
test
mov
mov
loopne
shll
loopne
fsubs
loopne
jmp
test
mov
test
loopne
daa
movsl
loopne
sbb
mov
movsl
loopne
scas
movsl
loopne
andb
cmp
loopne
sub
loopne
lcall
mov
movsl
loopne
pop
movsl
loopne
push
movsl
loopne
jno
loopne
sbb
loopne
lahf
movsl
loopne
or
loopne
cmp
movsl
loopne
scas
cmpsl
loopne
fsubl
loopne
mov
cmpsb
loopne
xor
loopne
cmp
mov
loopne
shll
loopne
sub
loopne
pop
cmpsb
loopne
test
mov
movsl
loopne
scas
mov
loopne
aas
movsl
loopne
stos
mov
loopne
out
loopne
stos
movsl
loopne
xchg
movsl
loopne
movsb
mov
loopne
inc
mov
loopne
xchg
mov
loopne
cmpsb
movsb
loopne
out
mov
loopne
loopne
loopne
ja
loopne
mov
cmpsb
loopne
imul
mov
mov
loopne
xchg
mov
loopne
xchg
movsl
loopne
and
mov
mov
loopne
push
test
mov
test
mov
cmpsb
loopne
adc
movsb
loopne
sub
loopne
mov
mov
loopne
cmpsl
cmpsl
loopne
sub
loopne
push
movsl
loopne
jmp
loopne
clc
cmpsb
loopne
je
loopne
mov
loopne
movsb
loopne
mov
cmpsl
loopne
lret
mov
mov
loopne
cltd
test
mov
movsl
loopne
xchg
test
mov
cmpsl
loopne
scas
movsl
loopne
loop
loopne
sub
loopne
push
movsb
loopne
shlb
loopne
sub
loopne
mulb
loopne
jecxz
loopne
mov
movsl
loopne
lahf
mov
loopne
sub
cmpsl
loopne
lea
loopne
fbld
loopne
mov
loopne
pop
cmpsl
loopne
sbb
loopne
stos
test
mov
cmpsb
loopne
mov
mov
loopne
mov
cmpsl
loopne
inc
test
mov
cmpsl
loopne
shll
mov
mov
loopne
dec
mov
loopne
cwtl
cmpsb
loopne
mov
loopne
and
loopne
inc
movsl
loopne
cwtl
mov
loopne
mulb
loopne
test
loopne
pop
mov
loopne
adc
loopne
pop
mov
loopne
adc
loopne
mov
loopne
cwtl
movsl
loopne
push
cmpsb
loopne
jmp
cmpsl
loopne
lcall
mov
mov
loopne
or
loopne
and
mov
cmpsl
loopne
sbb
cmpsl
loopne
pop
cmpsl
loopne
mov
test
mov
mov
loopne
aad
loopne
push
test
mov
test
mov
mov
loopne
loop
loopne
fwait
movsb
loopne
out
loopne
int
loopne
sub
loopne
mov
cmpsl
loopne
cmp
loopne
daa
mov
loopne
daa
movsb
loopne
inc
mov
loopne
test
mov
cmpsb
loopne
xor
movsb
loopne
jno
loopne
imul
mov
movsb
loopne
mov
loopne
mov
mov
loopne
std
movsl
loopne
xor
loopne
and
loopne
frstor
loopne
arpl
loopne
push
cmpsb
loopne
imul
mov
movsb
loopne
stos
movsl
loopne
pop
loopne
pushf
mov
loopne
cmp
loopne
mov
mov
loopne
andb
mov
movsb
loopne
mov
loopne
lret
mov
mov
loopne
xchg
cmpsb
loopne
dec
movsl
loopne
pop
test
mov
mov
loopne
in
loopne
jne
loopne
or
loopne
sbb
mov
test
mov
movsl
loopne
loope
loopne
push
loopne
in
test
mov
cmpsb
loopne
cmpsb
loopne
inc
cmpsb
loopne
adc
loopne
add
loopne
dec
test
loopne
cmp
loopne
adc
loopne
push
mov
loopne
call
cmpsb
loopne
fisubl
loopne
inc
mov
loopne
dec
mov
loopne
jo
loopne
pop
cmpsb
loopne
push
cmpsb
loopne
pop
test
mov
mov
loopne
and
loopne
or
loopne
add
movsb
loopne
dec
test
mov
mov
loopne
aas
movsb
loopne
shrl
loopne
aam
loopne
pop
cmpsl
loopne
jp
loopne
test
loopne
jl
loopne
sbb
loopne
push
mov
loopne
shlb
mov
cmpsl
loopne
les
loopne
lds
loopne
or
loopne
pop
cmpsl
loopne
or
loopne
mov
loopne
fisubs
loopne
or
loopne
or
loopne
fbld
loopne
lds
mov
cmpsb
loopne
push
mov
loopne
fsubl
mov
cmpsl
loopne
into
test
mov
test
loopne
lods
cmpsb
loopne
fwait
movsl
loopne
inc
cmpsb
loopne
push
test
loopne
jo
loopne
es
loopne
or
loopne
jns
loopne
ret
mov
loopne
ss
loopne
shlb
mov
cmpsl
loopne
data16
mov
test
mov
movsb
loopne
nop
test
mov
movsl
loopne
pop
test
mov
movsb
loopne
movsb
loopne
pushf
movsl
loopne
adc
movsb
loopne
push
test
mov
mov
loopne
icebp
cmpsl
loopne
mov
movsb
loopne
sub
loopne
xor
loopne
mov
loopne
dec
mov
loopne
out
mov
loopne
lds
loopne
out
test
mov
cmpsl
loopne
fsubrs
loopne
mov
loopne
movsb
movsl
loopne
cmpsb
movsb
loopne
mov
loopne
and
loopne
stc
mov
loopne
mov
mov
loopne
push
mov
loopne
sub
cmpsb
loopne
pop
cmpsb
loopne
cli
test
mov
cmpsb
loopne
jbe
loopne
ljmp
mov
movsb
loopne
xcrypt-cfb
mov
cmpsb
loopne
fbld
loopne
loop
loopne
shlb
loopne
mov
loopne
jae
loopne
cmpsl
loopne
movsl
loopne
shlb
mov
test
mov
movsb
loopne
out
cmpsb
loopne
popf
mov
loopne
iret
movsl
loopne
mov
movsl
loopne
stos
movsl
loopne
push
movsb
loopne
imul
mov
cmpsl
loopne
mov
loopne
lahf
cmpsl
loopne
cmp
loopne
loop
loopne
mov
test
loopne
or
loopne
push
cmpsl
loopne
sti
mov
loopne
int
loopne
adc
loopne
call
cmpsl
loopne
sbb
loopne
lahf
movsb
loopne
shrb
loopne
jno
loopne
sahf
cmpsl
loopne
sbb
loopne
subl
mov
movsl
loopne
outsl
cmpsl
loopne
push
movsb
loopne
cmp
mov
mov
loopne
jge
loopne
dec
test
loopne
dec
cmpsb
loopne
in
cmpsl
loopne
out
loopne
adc
mov
mov
loopne
inc
movsb
loopne
push
cmpsb
loopne
imul
loopne
shld
andl
mov
movsb
loopne
push
loopne
lret
mov
loopne
and
loopne
cmpsb
cmpsb
loopne
shll
mov
mov
loopne
mull
loopne
inc
movsb
loopne
xchg
cmpsl
loopne
push
loopne
pop
mov
loopne
add
mov
mov
loopne
dec
cmpsl
loopne
mov
test
mov
test
mov
cmpsb
loopne
or
mov
test
mov
cmpsb
loopne
out
loopne
shlb
mov
movsb
loopne
pop
movsb
loopne
sub
loopne
fldenv
loopne
addr16
and
mov
loopne
inc
cmpsl
loopne
xchg
movsb
loopne
xor
loopne
jo
loopne
andb
mov
cmpsl
loopne
mov
loopne
push
mov
loopne
aad
loopne
movsb
loopne
das
cmpsl
loopne
aad
loopne
xchg
mov
test
mov
movsl
loopne
mov
loopne
pusha
mov
loopne
lock
loopne
in
loopne
lret
movsb
loopne
in
loopne
mov
loopne
fildll
loopne
jge
loopne
jmp
mov
loopne
mov
loopne
inc
test
mov
cmpsl
loopne
add
loopne
mov
loopne
push
mov
loopne
sti
mov
loopne
jno
loopne
xor
loopne
movsb
cmpsl
loopne
adc
loopne
lcall
mov
movsl
loopne
xchg
mov
loopne
dec
test
loopne
xchg
movsb
loopne
outsl
mov
loopne
arpl
loopne
xchg
mov
loopne
xor
mov
movsl
loopne
popf
mov
loopne
loopne
sub
loopne
pop
movsb
loopne
shll
loopne
jno
loopne
xchg
cmpsb
loopne
mov
movsl
loopne
xchg
cmpsl
loopne
test
test
add
mov
add
je
lock
and
jbe
add
xchg
pop
add
add
add
jg
stos
sbb
add
xor
add
es
push
in
xchg
adc
add
clc
imul
mov
adc
add
cwtl
dec
lods
add
add
xor
add
jmp
add
xor
in
fnstsw
jge
clc
cmp
clc
cli
addr16
xchg
out
mov
xor
add
mov
pop
or
sbb
clc
gs
push
leave
mov
adc
jecxz
dec
inc
clc
fwait
icebp
xchg
in
jae
add
clc
loop
xchg
fxch
icebp
cmp
add
jl
dec
mov
jno
add
clc
xbegin
mov
add
mov
xor
add
gs
jl
dec
cmp
push
add
mov
add
clc
add
lea
add
out
mov
imul
clc
aas
mov
or
pop
sub
xchg
xchg
std
js
push
add
cmp
cmpsb
clc
cmp
add
std
clc
push
and
add
je
jl
clc
in
dec
pop
scas
pop
int3
mov
add
add
mov
shl
push
pop
jbe
aam
sti
stc
pop
mov
sub
insl
sti
push
sbb
add
push
fwait
js
add
sar
pusha
add
mov
dec
hlt
std
hlt
dec
or
std
fnstcw
test
sbb
clc
adc
add
loopne
xchg
sub
clc
ja
lcall
add
add
add
stos
xchg
jle
dec
sub
dec
out
cmp
add
std
sub
mov
add
dec
in
pop
push
xchg
cltd
mov
dec
sar
iret
aaa
xchg
xchg
iret
ljmp
jbe
mov
add
push
add
add
jmp
add
mov
push
outsl
test
jmp
clc
jl
or
add
add
imul
clc
fnsave
lods
cmp
add
sbb
ret
clc
or
clc
mov
sub
mov
clc
cmc
or
clc
cmpsb
clc
cwtl
xabort
clc
sub
mov
add
inc
clc
pop
cmp
or
add
dec
xor
add
push
cmp
outsb
xchg
and
add
clc
inc
add
test
push
or
clc
xor
add
inc
add
or
clc
ret
hlt
dec
jle
mov
aam
add
inc
add
add
add
add
add
and
add
inc
add
xor
add
add
add
mov
sub
inc
add
insb
test
in
inc
add
pushf
push
jg
push
adc
dec
and
add
clc
jg
add
or
add
decl
add
clc
scas
xchg
inc
clc
jbe
jnp
xchg
xchg
cmp
xchg
add
add
jnp
sub
xor
add
clc
cmp
sub
pop
pop
xlat
lods
xchg
je
add
sbb
fiadds
mov
mulb
add
fiadds
add
xor
add
insb
iret
mov
clc
add
add
push
add
stos
arpl
add
lcall
xchg
enter
out
jl
sti
push
sti
loope
cmp
clc
es
dec
std
pop
sbb
cmpsb
clc
iret
in
ds
or
clc
push
clc
adc
add
pop
clc
mov
insl
pop
mov
clc
xchg
out
cmpsb
clc
fdivrs
pop
imul
cli
xchg
cmp
add
cld
nop
sbb
clc
pop
xor
add
sahf
fadd
clc
cli
cvtdq2ps
push
das
or
mov
in
jmp
and
add
jecxz
add
add
add
jg
clc
sbb
and
scas
aaa
arpl
add
add
push
add
adc
clc
popl
clc
cltd
das
fdivs
and
add
push
add
sahf
and
add
clc
scas
ss
mov
mov
es
notl
loope
inc
clc
stos
or
sbb
xchg
data16
bound
add
aam
cld
clc
sar
add
add
mov
clc
clc
cmp
pop
mov
lock
clc
dec
into
fidivrs
daa
clc
cmp
stc
xor
add
je,pt
enter
clc
cmpsb
clc
fistpl
test
cmp
add
clc
sahf
xor
jbe
jns
add
das
adc
add
add
jns
lock
lret
add
ds
and
add
and
add
sbb
dec
enter
jo
add
xchg
inc
clc
push
adc
push
push
mov
scas
addr16
add
jns
pop
clc
fs
test
insl
or
add
jo
add
clc
add
data16
out
cmp
jo
add
fsubrp
dec
sbb
xor
add
clc
pop
xlat
cmp
clc
add
add
out
inc
clc
ret
clc
sub
jg
fstpt
or
outsb
sub
lods
cmpsb
clc
int
add
mov
clc
jmp
add
cwtl
xchg
dec
lock
jbe
dec
insl
insb
movsl
clc
cmp
in
sub
jns
add
imul
add
cmp
pusha
add
popf
xor
add
aam
mov
clc
or
scas
cmp
xchg
sub
and
insl
or
imul
add
add
adc
add
clc
shlb
jb
add
adc
stos
cmp
inc
clc
sub
bound
add
add
mov
push
xchg
cmpsb
clc
lret
add
add
out
lods
push
push
clc
add
add
arpl
add
clc
cmp
pop
mov
lea
add
jae
add
cmp
clc
cli
outsl
mov
add
or
fistpll
imul
add
in
add
mov
mov
scas
lock
add
mov
add
add
repnz
mov
add
das
push
aas
cmp
add
ds
int3
cltd
in
fildl
pop
imul
mov
clc
ljmp
add
sbb
int3
data16
imul
add
outsb
or
cmp
mov
mov
mov
push
js
mov
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
mov
add
cmp
cmp
in
rolb
add
sub
clc
push
add
enter
sar
inc
clc
mov
in
add
outsl
push
mov
add
mov
sub
sbb
clc
mov
jg
std
icebp
stos
insl
and
ja
and
fs
and
clc
push
add
xlat
inc
clc
jmp
push
add
sti
mov
sub
xor
xbegin
add
add
or
movsl
clc
or
xchg
xabort
add
push
jecxz
bound
add
clc
xchg
insl
push
add
int3
mov
clc
icebp
lahf
pop
adc
add
jp
mov
add
jmp
leave
pop
aaa
add
add
add
xchg
test
add
je
push
test
fstp
sbb
je
clc
mov
add
daa
clc
mov
jmp
push
or
pop
clc
bound
add
clc
xor
add
mov
lretw
ret
sub
or
or
cmp
sbb
dec
dec
bound
add
clc
sub
cmp
insl
insb
fwait
mov
clc
sbb
std
pop
clc
and
add
in
add
add
pop
cmp
jmp
add
and
add
clc
push
add
test
enter
inc
clc
add
rorl
jne
push
jo
add
push
clc
cs
add
add
out
inc
add
cmp
cmpsl
clc
mov
add
popf
push
add
jno
add
clc
dec
jmp
add
out
sar
add
xor
xchg
push
mov
and
add
push
clc
inc
clc
mov
add
fldt
jecxz
popf
daa
clc
inc
clc
dec
cmp
out
sbb
add
lea
clc
xchg
pop
clc
addr16
cmp
mov
outsb
xor
add
add
repnz
add
add
add
add
clc
mov
inc
lods
add
popa
mov
pop
addr16
inc
clc
pop
mov
push
jae
add
insl
cmp
fisubrl
fwait
insb
jb
add
cmp
add
clc
mov
aam
clc
xor
add
clc
fistl
cmovle
jmp
sub
and
test
add
pop
out
filds
add
fsubrp
insl
ljmp
push
mov
cld
jmp
aaa
sbb
clc
iret
sti
ds
jbe
popf
mov
clc
rolb
dec
mov
add
dec
inc
clc
xor
add
add
cmp
aas
fidivrs
clc
xor
add
add
push
ret
add
test
xlat
data16
mov
mov
jg
scas
movsl
clc
es
js
xchg
ret
and
daa
clc
icebp
loopne
jmp
std
clc
scas
jg
add
lods
cld
pop
outsl
in
daa
clc
std
cmp
clc
mov
add
add
jle
mov
or
adc
add
add
add
test
or
lcall
push
or
adc
add
es
scas
lcall
cmp
add
add
clc
incl
dec
mov
add
mov
add
xchg
mov
cmp
clc
aam
add
sar
jb
add
mov
jge
cld
jmp
sub
cs
dec
jg
push
into
mov
push
add
pop
dec
insl
xor
add
add
mov
mov
push
cwtl
add
adc
cwtl
pushf
mov
fxam
clc
adc
add
add
add
fistps
push
add
and
add
lahf
mov
inc
add
mov
add
aaa
push
jg
add
mov
mov
clc
add
add
sub
clc
std
data16
xor
iret
mov
mov
clc
xabort
pushl
cld
jmp
or
add
sbb
daa
clc
and
add
clc
inc
clc
pop
add
add
mov
jecxz
or
clc
pop
xor
add
adc
add
mov
shrl
or
cs
stc
push
lahf
sub
clc
inc
clc
ljmp
add
stc
lock
popa
add
cmp
add
test
mov
push
add
xchg
stc
add
clc
or
add
arpl
add
sti
lcall
cmp
cltd
sahf
es
iret
pop
in
dec
imul
xchg
data16
loopne
xbegin
aam
in
mov
push
add
cld
jmp
or
xchg
test
dec
xchg
stos
incb
add
jmp
test
sub
clc
fucomp
icebp
push
cmp
clc
outsl
inc
clc
dec
xor
repnz
adc
add
add
data16
push
add
stc
mov
clc
dec
pop
mov
ja
pusha
add
fisttpl
mov
clc
stc
push
mov
mov
clc
jnp
cmp
jl
jb
add
clc
or
lock
pop
push
fnstenv
es
mov
sbb
pop
int
clc
imul
lcall
inc
clc
movsl
clc
cmc
sti
mov
clc
out
ret
clc
pop
fwait
xor
add
push
pop
xchg
in
fisubrs
clc
roll
popa
add
fists
add
add
add
sbb
add
int3
mov
add
cld
dec
ja
into
in
ss
sbb
fstpt
and
add
push
ret
add
add
add
clc
jo
add
xor
add
sbb
cld
jmp
imul
cmp
cmp
clc
rorb
mov
clc
push
add
jno
add
cmp
add
leave
loop
in
fdivrs
add
clc
lcall
gs
jae
add
add
pop
ret
clc
xchg
inc
add
pop
or
add
lock
add
adc
add
push
inc
add
inc
add
cwtl
inc
add
in
fiadds
aad
or
fs
sbb
addr16
mov
clc
test
mov
clc
add
add
cmpb
add
jmp
pop
clc
lods
incl
in
bound
ret
inc
add
clc
imul
and
xor
add
clc
mov
clc
cwtl
dec
mov
inc
add
or
add
dec
dec
cmpsl
clc
outsb
loop
jg,pt
add
bound
add
mov
clc
adc
xor
add
pusha
cld
jmp
sub
sub
clc
and
dec
test
add
rcll
add
sub
mov
cmp
ret
ficoms
push
add
stc
lods
jge
fdecstp
add
test
inc
add
mov
add
hlt
pop
dec
add
add
lods
sbb
sub
pop
push
mov
xor
add
clc
out
mov
dec
push
add
dec
push
jle
clc
add
add
add
xchg
push
mov
cld
sar
xchg
jge
add
je
mov
add
test
and
inc
clc
jl
clc
or
pop
insb
icebp
iret
add
clc
cmp
stos
sbb
and
add
inc
or
jmp
cmp
adc
add
push
cmc
dec
push
or
test
ljmp
add
sub
test
add
mov
sar
cmpsb
clc
stos
dec
fidivs
add
mov
mov
add
inc
clc
ds
xlat
pop
fstps
add
cmc
sar
mov
das
cmp
add
add
mov
sti
pop
mov
insl
in
push
out
sub
repz
clc
test
add
xchg
jo
add
xchg
mov
add
xchg
cmc
sahf
movsb
clc
inc
clc
shll
loopne
test
pop
ds
loope
pop
clc
ficompl
add
clc
nop
mov
aad
rcl
ja
clc
clc
ficoml
pop
and
add
add
pushf
cmp
clc
mov
sldt
inc
scas
fwait
movsb
and
sbb
test
sarb
int
add
cmpsl
clc
paddsw
scas
lret
sbb
add
ds
repnz
test
and
xchg
lret
add
and
add
clc
or
add
xchg
ss
mov
cld
jmp
add
add
add
add
add
mov
add
mov
mov
cmp
cmpsb
clc
pop
leave
inc
clc
jns
insb
outsb
cli
xchg
inc
add
fs
sbb
inc
add
pop
push
mov
xor
lret
inc
clc
and
daa
clc
clc
lea
push
mov
and
add
and
lret
and
mov
dec
jmp
mov
add
xbegin
mov
clc
testl
cld
jmp
xor
sub
je
mov
arpl
add
add
jne
push
mov
sbb
xor
add
ja
xchg
addr16
mov
clc
stos
ss
jmp
push
xor
jg
xabort
clc
push
add
xchg
or
add
pop
xchg
push
clc
stos
insb
popa
add
fs
imul
xchg
add
add
add
add
pop
clc
xchg
xchg
cmp
adc
add
out
lcall
clc
jne
mov
add
imul
or
sub
clc
bound
add
mov
cmpsl
clc
jno
add
jo
add
jo
add
add
loop
js
cmpl
cld
jmp
sub
pop
movsb
clc
jnp
add
nop
pop
cmp
dec
jnp
clc
fbstp
add
es
popf
cmpsl
clc
in
imul
sub
mov
xchg
xchg
fiaddl
js
pop
xchg
test
lret
cmpsb
clc
enter
cmp
aaa
mov
clc
call
les
jmp
subb
jmp
jno
add
out
jae
add
add
xchg
stos
mov
fdivrl
mov
gs
jmp
adc
sbb
adc
add
iret
lret
inc
clc
ret
clc
and
cmc
imul
mov
dec
cmpsl
clc
jne
jbe
add
cmp
clc
and
add
clc
jecxz
sbb
lock
ret
xor
movsl
clc
lea
sbb
add
add
or
imul
add
add
add
movsb
clc
in
idivb
push
xor
clc
pop
dec
negb
enter
add
and
add
clc
mov
sbb
sarb
lcall
clc
mov
add
xor
add
clc
mov
pop
jnp
xlat
xor
add
sar
sbb
add
dec
int3
adc
add
clc
fwait
popf
sti
push
push
cld
jmp
scas
jns
clc
or
mov
data16
mov
jmp
clc
sub
clc
sahf
pop
clc
gs
out
ds
es
mov
cmp
clc
jmp
int
sbb
and
add
jb
add
clc
mov
add
cmpsl
clc
mov
arpl
add
clc
cmp
sahf
loop
jecxz
jmp
cmpsl
clc
lahf
xbegin
jg
mov
push
add
inc
clc
insl
mov
clc
cli
xchg
je
stos
cmp
jp
mov
cld
jmp
ja
insb
xchg
add
add
test
add
mov
add
rep
cld
jmp
sub
fwait
int3
test
int3
jbe
fidivrl
add
in
divl
nop
scas
outsl
sub
add
dec
mov
pop
and
add
clc
sbb
add
popf
dec
mov
clc
repnz
push
add
add
push
jmp
test
sub
add
inc
clc
shll
add
cs
clc
out
inc
add
xlat
in
mov
add
xor
add
clc
cmc
mov
aas
xor
add
dec
cltd
jecxz
cmc
aad
push
add
adc
add
clc
gs
jge
es
pop
cmc
inc
add
pushf
mov
xchg
add
add
lods
pop
xor
add
pop
out
mov
add
xchg
jecxz
mov
mov
and
add
imul
pusha
add
dec
or
clc
mov
test
inc
add
roll
clc
mov
add
clc
stos
ss
lahf
or
clc
dec
jp
mov
pop
and
add
sub
sbb
lahf
mov
cwtl
addr16
cmp
fimuls
inc
add
cmpsl
clc
push
aaa
mov
clc
push
test
cld
jmp
aaa
and
pop
test
xchg
dec
jg
clc
jle
aas
dec
shlb
push
cld
jmp
add
pop
sub
add
add
jl
es
adc
add
cmp
add
mov
add
fcomps
rcrl
dec
mov
and
add
imul
test
faddl
add
jmp
sahf
pop
add
mov
clc
out
nop
bound
add
sbb
ret
clc
mov
xchg
cs
dec
push
add
jmp
es
cmpsl
clc
cmp
clc
movsl
clc
or
clc
adc
add
clc
dec
out
mov
push
clc
and
icebp
xchg
mov
ss
ret
fs
mov
clc
sub
clc
inc
clc
movsb
clc
xchg
cmp
test
out
dec
dec
movsb
clc
fnsave
add
popa
add
cmc
stos
sar
clc
mov
or
clc
sub
add
add
and
add
add
aam
xor
add
das
aam
add
movsl
clc
js
int3
mov
add
pushf
sub
xchg
addr16
cltd
push
add
ss
ret
pop
xchg
sbb
shl
decl
lea
mov
add
mov
add
arpl
add
or
daa
clc
gs
xchg
pop
bnd
clc
jge
ret
clc
or
add
jae
add
sbb
jmp
lods
xor
xchg
popa
int
cmpsb
clc
popa
add
mov
jg
or
dec
xchg
mov
add
adc
add
test
add
mov
add
add
add
repnz
mov
mov
cld
jmp
sahf
in
xor
add
clc
pop
outsl
cmpsl
clc
mov
sbb
iret
ss
add
jnp
and
add
ja
adc
add
cld
xchg
dec
sar
cli
sbb
add
xabort
adc
clc
or
mov
jmp
add
fdiv
pop
cmp
clc
push
lea
cld
jmp
mov
cmp
cmpsb
clc
fadd
clc
aam
cli
imul
int3
ret
clc
push
add
lret
mov
clc
add
add
aaa
sub
cmpsl
clc
incl
xchg
add
xor
fs
push
and
add
xchg
imulb
clc
fs
cmp
clc
in
inc
add
call
lret
ret
clc
jbe
cli
or
mov
add
cld
jmp
aaa
dec
jne
leave
and
add
sub
loope
cli
mov
lods
divb
or
loop
sub
rolb
cmp
mov
clc
xchg
mov
add
push
pushf
movsb
clc
xor
add
aaa
sub
pop
clc
xor
add
rcrl
or
jne
xchg
rorb
add
xchg
loop
shlb
mov
outsb
jmp
add
outsl
imull
cmpsb
clc
cmpsl
clc
ret
ret
clc
flds
add
clc
ds
pop
clc
cmp
test
imul
add
js
jo
add
add
add
inc
clc
xchg
cmp
mov
ss
ret
ja
add
cmp
clc
adc
in
sub
sbb
aad
xchg
data16
inc
clc
cmpsb
clc
sar
inc
clc
fsts
add
mov
cld
jmp
xor
inc
add
or
call
sub
ja
pop
jbe
mov
add
cld
jmp
enter
add
cltd
call
push
ret
aaa
aas
movsb
movsb
popa
add
mov
add
clc
adc
add
aaa
and
clc
xor
add
fwait
clc
mov
jp
mov
add
movsb
clc
insb
sbb
sbb
add
mov
mov
sub
jle
cld
jmp
sub
clc
into
mov
cld
jmp
pop
push
ljmp
xchg
inc
add
push
jmp
scas
scas
sbb
add
clc
pop
imul
add
mov
clc
sar
push
sub
push
jg
clc
sbb
pop
lods
fcoms
push
add
xchg
inc
clc
cmp
aas
jnp
shl
add
add
xchg
repnz
add
mov
clc
in
mov
clc
mov
sub
clc
push
add
push
mov
jbe
add
aaa
in
out
insl
loope
jp
lahf
sarl
dec
sbb
xor
add
xor
xchg
mov
xor
out
add
pop
test
clc
mov
pushf
pop
or
mov
dec
in
or
push
clc
addr16
pop
xchg
push
clc
mov
clc
mov
ss
clc
out
es
imul
push
cli
jnp
sub
cmp
add
lcall
pop
inc
add
fwait
ret
add
mov
in
add
add
jmp
aas
popa
xor
sub
cmc
data16
jl
clc
loopne
sbb
pop
bound
add
and
add
add
add
clc
test
and
add
xlat
das
aas
and
add
xchg
adc
outsb
mov
push
add
xchg
mov
add
arpl
add
clc
cmp
add
jle
add
sbb
loope
daa
clc
add
add
jge
jbe
hlt
xabort
cmp
clc
divl
pop
clc
cmp
call
xor
add
and
add
fmull
and
add
push
inc
add
add
add
add
clc
call
dec
cmp
jmp
sub
cmp
dec
jle
call
mov
jge
clc
dec
test
add
jnp
loopne
cmp
add
mov
outsb
sub
add
sub
je
add
sub
clc
in
pop
and
add
rcll
add
push
clc
jecxz
int
cmp
stos
xor
add
ss
imul
clc
int3
jo
add
clc
int3
scas
shrl
jae
add
pop
xchg
lods
fstpt
clc
sti
outsb
insl
or
insb
add
xchg
cmpsl
clc
xchg
pushf
cmpsl
clc
mov
push
add
xadd
mov
das
lock
call
sub
and
add
fiaddl
push
jne
cld
jmp
cmp
clc
ret
or
out
repz
xchg
sub
sar
dec
push
add
cmpsl
clc
mov
insl
mov
cmp
jmp
or
clc
div
cmp
outsb
cltd
or
pop
cld
jmp
and
inc
sub
cmp
add
and
add
add
sar
inc
clc
xbegin
clc
inc
add
mov
cld
jmp
xchg
inc
cmp
add
sbb
jmp
sub
sub
fwait
cmp
xabort
pop
sar
xchg
movsl
clc
xabort
shlb
add
jae
add
lods
shl
sahf
ret
lea
sar
sub
xor
clc
jle
mov
cmp
xor
add
cmp
lods
cmc
push
sbb
movsb
clc
mov
std
cmp
clc
cmp
notl
cmp
add
cld
jmp
cmp
mov
mov
add
sub
and
add
add
test
sbb
cld
jmp
or
sub
mov
iret
into
repnz
add
add
xor
clc
adc
add
and
add
clc
mov
add
test
sahf
cmpsb
clc
repz
clc
xchg
out
outsl
std
or
clc
mov
addr16
adc
add
movsl
clc
mov
cmp
clc
sti
xchg
sbb
out
mov
clc
xor
push
imul
aad
sbb
jg
imul
pushf
mov
add
into
sar
xchg
dec
ret
clc
cmpsl
clc
adc
enter
ret
clc
jmp
js
xchg
std
jb
add
jp
jle
adc
cmp
clc
xor
clc
loop,pn
cmc
and
bound
add
add
sbb
shlb
outsb
bound
ret
sub
add
cmp
add
and
add
out
test
pop
clc
mov
add
jmp
outsl
cmp
mov
jne
clc
adc
add
add
inc
add
sbb
push
mov
cld
jmp
pop
lods
xchg
dec
out
loopne
mov
clc
icebp
in
pushf
repnz
inc
add
xor
and
add
add
mov
mov
add
sbb
xor
add
aad
jne,pt
sub
or
adc
xor
add
adc
add
add
add
mov
xchg
dec
mov
adc
add
add
inc
add
pop
scas
cmpsb
clc
cmp
add
int3
ficoml
add
xabort
aas
int3
mov
sti
adc
add
push
ret
push
push
xor
add
xor
add
mov
or
jmp
mov
jne
ss
ret
dec
mov
clc
fisubrl
xor
add
cmpsl
clc
mov
cld
jmp
sahf
sub
outsl
and
add
push
add
arpl
add
push
add
and
add
sbb
clc
xchg
pop
sar
cmp
lret
inc
add
and
add
mov
cld
jmp
and
imul
fdivs
cs
repz
add
add
lea
out
sub
clc
cmp
cmc
scas
imul
ss
ret
ja
sub
repz
xor
add
clc
push
lret
std
call
into
outsl
cmp
mov
inc
clc
dec
jg
clc
mov
add
push
idiv
call
daa
clc
notl
mov
add
inc
add
cli
mov
fisubs
mov
clc
sub
push
ret
and
push
jmp
add
sub
xor
dec
pop
sub
scas
sub
add
addr16
dec
pop
lahf
pop
inc
add
add
add
add
add
xor
add
dec
or
insb
decl
jmp
adc
or
flds
fnsave
add
pop
clc
adc
add
out
jmp
dec
push
add
dec
mov
dec
or
cmpsb
clc
cmpsb
clc
sahf
ds
out
loope
mov
ret
clc
mov
cmp
imull
fnstsw
cld
jmp
dec
cmpsb
nop
test
add
add
out
jmp
inc
clc
sub
jl
clc
pop
mov
add
bound
add
or
pop
xlat
into
int
add
add
clc
bnd
add
add
cmp
loop
jge
mov
clc
adc
add
repnz
xchg
mov
fdivr
pushf
stos
pop
pushf
imul
push
clc
xchg
out
std
push
xchg
mov
add
pop
movsl
clc
aaa
sub
pop
imul
add
add
add
pop
fs
clc
test
sub
es
fdivl
clc
addr16
cmp
jmp
adc
xlat
dec
addr16
pusha
add
sbb
clc
jo
add
push
push
call
ss
ret
jp
call
clc
loopne
push
ret
clc
mov
inc
clc
xor
add
xlat
mov
add
cmp
test
out
or
clc
xor
add
aam
stc
pop
clc
mov
clc
pop
inc
clc
push
add
push
mov
clc
push
xor
clc
mov
add
cld
jmp
pop
sahf
xchg
imul
sub
cmp
popa
xor
das
add
xchg
cmp
add
clc
lahf
jp
mov
addr16
and
add
notb
pop
mov
mov
xchg
ljmp
add
xor
add
add
out
int3
cmp
cld
pop
sarb
and
enter
mov
add
xchg
cmp
add
add
add
add
sub
jge
sub
lret
ss
mov
mov
out
movsb
clc
mov
arpl
add
pusha
add
cmc
rclb
mov
lret
dec
fs
inc
add
inc
clc
call
add
jmp
xchg
cmp
push
bound
add
add
xchg
mov
add
xchg
xor
add
add
sar
pusha
add
cmp
jno
add
pop
clc
cmp
add
add
sbb
sub
inc
add
sub
clc
pop
xor
add
gs
lcall
cwtl
inc
clc
sbb
mov
jecxz
ss
clc
pop
mov
add
data16
mov
push
test
imul
clc
mov
js
rorl
add
aam
lods
mov
sub
clc
push
add
incb
add
gs
loope
sbb
sbb
loop
enter
add
and
push
mov
arpl
add
adc
in
xchg
ret
clc
and
add
clc
lret
and
add
add
clc
loope
nop
sbb
call
outsl
dec
add
imul
push
bound
add
and
out
repnz
and
add
add
add
cmp
add
sarl
xchg
sbb
jb
add
cmc
sbb
or
repnz
je
xor
add
bts
add
and
cld
jmp
sub
sbb
add
sub
fcmovne
dec
cmp
out
int
push
or
clc
add
adc
add
fnstcw
mov
xor
aas
push
add
cmpsb
clc
out
xchg
loope
mov
push
dec
xchg
sbb
lcall
sbb
jmp
ja
sub
pop
add
add
clc
das
test
mov
clc
push
mov
mov
add
adc
add
shufps
clc
lock
ret
jl
clc
cmp
xchg
pop
stos
xchg
insl
std
into
cld
dec
mov
add
add
jne
add
xchg
adc
add
pop
clc
ja
insb
inc
clc
mov
clc
loopne
cli
pop
inc
add
mov
mov
cmp
clc
cmp
add
clc
push
clc
and
add
jg
add
cmp
scas
enter
ficompl
js
or
je
and
add
add
mov
cmp
xor
push
repnz
clc
mov
add
ret
clc
mov
cmpsb
clc
popf
inc
add
movsl
clc
sbb
jmp
add
or
xchg
dec
mov
xchg
movsl
clc
pop
sti
add
add
xchg
cmp
add
and
add
sub
clc
or
sub
mov
shll
add
js
dec
in
jmp
das
mov
clc
sbb
loopne
js
push
add
sub
add
or
xor
add
arpl
add
add
clc
fcomps
lcall
push
ret
add
push
pop
cld
jmp
cmp
fsubrs
jmp
xbegin
daa
clc
mov
clc
cmp
sub
xchg
arpl
add
clc
xlat
shll
xor
add
clc
fimuls
sbb
mov
add
das
push
inc
xbegin
fisubrl
ds
xchg
adc
add
xbegin
fs
and
add
clc
pop
xor
add
aaa
jb
add
adc
add
or
push
push
cld
jmp
scas
fwait
jp
test
mov
sub
xor
add
add
clc
jmp
mov
add
jmp
call
cld
jmp
cmp
clc
dec
adc
add
jp
clc
nop
lret
ret
clc
cmp
add
add
mov
ja
mov
add
scas
cmp
aas
aad
clc
and
add
int
add
cld
jmp
popa
scas
xchg
cmp
add
in
xor
add
sbb
jle
mov
jb
add
arpl
add
or
into
mov
sub
clc
push
add
or
popa
add
or
mov
clc
cmp
sti
loopne
test
lret
jnp
xabort
sbb
in
test
ror
aas
not
sahf
repz
fsubrl
cmp
lock
jecxz
mov
pop
lea
clc
ficoml
add
fs
xor
add
stos
mov
cltd
arpl
add
mov
clc
dec
mov
add
pop
bound
add
dec
xbegin
jmp
xchg
scas
cmp
add
add
sbb
clc
ficomps
clc
int
lods
sub
cmp
dec
cmp
push
movsb
clc
icebp
mov
aas
mov
push
sbb
add
into
icebp
mov
gs
xchg
pop
jnp
mov
clc
add
add
cli
cmpsb
clc
imul
aad
aam
loopne
rcll
arpl
add
xor
and
add
add
pop
clc
sub
out
cmp
add
add
fildl
push
push
cld
jmp
cmpsb
insb
inc
insb
mov
add
add
mov
iret
test
jae
add
fs
testl
sub
add
pop
repz
pop
loope
mov
add
in
mov
mov
xchg
dec
leave
xor
add
ja
pop
mov
and
add
mov
clc
ljmp
imul
add
adc
add
add
pop
rep
cld
jmp
inc
cmpsb
or
add
push
dec
cld
jmp
sub
pop
sub
cld
jmp
aas
sub
lret
or
mov
clc
stos
pusha
add
popa
add
sbb
add
cmp
mov
testb
add
push
clc
cld
cltd
inc
clc
and
add
clc
ret
clc
inc
add
scas
aad
clc
out
clc
add
pop
xabort
scas
test
pushf
aam
add
add
or
clc
sar
sub
lea
mov
add
dec
sbb
movsb
cld
jmp
sub
aaa
xlat
clc
sar
cmp
int
xchg
push
mov
cld
jmp
push
sub
add
cld
jmp
inc
inc
clc
aas
or
jns
clc
das
scas
and
add
imul
clc
dec
push
and
cld
jmp
scas
je
mov
incb
jge
in
xor
add
clc
jno
add
clc
stos
and
add
add
cmp
mov
and
add
cmpsl
clc
xchg
adc
add
std
sbb
add
add
add
pextrw
add
repz
mov
cmc
cmp
daa
clc
hlt
inc
add
cmp
cmp
push
add
and
add
inc
add
call
hlt
dec
jle
xchg
sbb
add
fmul
cmp
loopne
jo
add
aas
pop
and
and
add
clc
or
clc
xlat
xor
add
call
add
clc
inc
clc
aad
mov
out
cmp
add
mov
clc
js
clc
iret
pop
mov
add
push
call
clc
sahf
or
jnp
push
jmp
sub
pop
flds
and
add
clc
fmull
clc
out
inc
clc
fnstsw
adc
add
xchg
jle
test
inc
clc
pop
jo
add
push
clc
mov
cmp
xchg
jmp
icebp
imul
add
add
test
clc
pop
mov
cmpsl
clc
cmp
insb
sti
sbb
clc
xor
lahf
ss
clc
fcmovu
jecxz
sub
xbegin
add
aam
xchg
insl
jo
add
sbb
clc
in
xor
add
test
add
pop
fcom
sbb
pop
data16
add
add
add
add
add
adc
lret
xchg
out
xor
add
add
gs
sbb
push
cld
jmp
sbb
movsb
movsb
or
add
cmp
mov
out
gs
frstor
clc
clc
cmp
jle
insl
xchg
pop
mov
in
or
clc
inc
clc
sub
adc
adc
dec
dec
into
cltd
mov
lea
jp
arpl
add
add
mov
clc
fsubl
fs
outsl
cmp
inc
clc
sbb
mov
cmp
out
repnz
clc
push
add
cmp
lret
xchg
lcall
or
or
add
mov
push
pop
shrl
popf
cmp
stos
adc
add
pop
jb
add
in
adc
add
test
sti
je
jns
add
fstpt
cmp
add
inc
clc
sub
clc
out
test
xor
lods
or
clc
pop
push
add
ss
ret
cmp
clc
aad
clc
fdivs
sbb
not
cld
jmp
scas
outsl
das
sub
es
adc
addr16
in
lret
lock
add
clc
mov
push
cld
jmp
sub
sbb
add
add
shrl
or
clc
aaa
add
or
add
fnstenv
outsl
sbb
mov
clc
pop
and
add
add
movsb
clc
sbb
add
cmp
pop
cmp
in
sub
dec
int
pusha
add
repz
adc
add
cmp
aam
pop
lahf
call
sub
enter
sub
dec
lods
mov
aam
pop
dec
jp
mov
add
cld
jmp
inc
clc
mov
in
movsl
clc
cmpsl
clc
shll
add
shrb
clc
out
fidivl
out
fs
sub
add
add
movsb
clc
inc
clc
jbe
inc
add
pop
inc
clc
and
mov
cmc
pop
sub
clc
stos
and
ss
clc
and
add
clc
pop
add
add
push
add
mov
xbegin
cmp
clc
outsl
nop
loope
dec
cmp
addr16
sub
clc
xchg
or
movsb
clc
in
sar
das
lods
cmp
ret
push
cld
jmp
test
pusha
add
push
add
into
xchg
push
clc
mov
fdiv
sub
add
xbegin
mov
ss
ret
cmp
outsl
xbegin
jp
clc
dec
addr16
jbe
fwait
call
add
or
push
cmp
sbb
cld
jmp
jno
clc
cmc
cmp
xchg
pop
sar
clc
cmp
add
adc
add
fwait
jnp
clc
inc
add
ficompl
cmp
add
add
cli
push
xchg
jge
sbb
into
in
inc
add
xor
jb
add
clc
sbb
clc
cmp
clc
push
add
add
sub
cs
add
sbb
push
ret
mov
sahf
lods
insl
adc
add
add
xor
clc
pop
cwtl
mov
leave
call
ja
clc
and
add
lret
ret
push
stos
int3
cmp
clc
xor
add
pop
dec
sarb
clc
jns
clc
sbb
ja
fnsave
dec
jmp
fst
lods
dec
adc
stos
test
sbb
scas
cmc
sub
cmp
mov
add
dec
xor
add
add
add
clc
adc
adc
add
cli
adc
clc
mov
xchg
dec
lods
out
lea
mov
add
jmp
clc
aad
clc
mov
out
lcall
pop
aas
adc
add
add
clc
xor
add
add
sar
sbb
mov
jmp
jge
sub
xabort
clc
xor
add
es
shll
push
add
popa
add
mov
add
cmpsl
clc
mov
and
add
out
sub
clc
lods
and
add
xchg
mov
mov
add
add
add
mov
dec
mov
pusha
add
shr
repz
add
add
pop
leave
sarb
clc
out
and
jp
clc
or
popa
add
int3
mov
pop
scas
out
mov
shlb
clc
mov
leave
loopne
adc
add
imul
clc
loope
pop
daa
clc
inc
add
xabort
fadd
clc
iret
mov
inc
clc
lret
pop
lea
cld
repnz
cmp
clc
mov
clc
imul
add
xchg
push
add
hlt
push
add
jmp
mov
cld
jmp
je
push
xchg
mov
add
jae
add
mov
clc
xchg
and
add
or
out
and
mov
add
test
add
stos
xchg
pop
sub
clc
push
mov
cld
jmp
jno
pop
notb
push
js
jmp
sbb
ja
scas
cmp
sub
add
rcrb
inc
clc
jae
add
clc
fmuls
clc
shl
in
jp
jge
cmc
mov
gs
mov
and
add
shl
clc
adc
add
add
call
xabort
clc
clc
clc
fmuls
mov
dec
cmp
mov
jae
add
clc
mov
lret
cld
jmp
jno
scas
xchg
jmp
clc
or
add
enter
add
nop
stos
pop
mov
jp
call
mov
clc
push
mov
clc
xor
push
add
mov
jmp
clc
fsubs
add
clc
lret
pop
clc
or
lret
out
aas
sti
insl
es
iret
inc
clc
stos
imul
clc
out
mov
clc
out
out
out
lods
scas
insb
lea
clc
decl
arpl
add
sub
cmp
clc
mov
add
add
daa
clc
xor
clc
test
fistl
cld
jmp
sub
pop
xchg
add
add
sub
clc
pop
aas
sar
lea
inc
clc
jo
add
in
jge
inc
clc
push
add
clc
lods
adc
add
xor
add
xor
add
jns
clc
arpl
add
mov
add
vzeroupper
pop
lahf
sti
sar
test
mov
mov
adc
ja
clc
cmp
popa
cld
jmp
sub
sub
dec
push
clc
cmp
in
shrl
sbb
add
dec
pop
sub
clc
adc
clc
jo
add
pop
cld
jmp
adc
popa
test
inc
clc
mov
testb
outsb
xor
jl
inc
clc
sbb
xor
add
add
add
pushf
jae
add
jle
shll
pop
cli
xlat
outsl
stc
sahf
aad
jg
test
push
xchg
icebp
sbb
clc
cmp
or
cli
pop
xchg
or
add
outsl
pushf
insl
cmp
add
ljmp
add
rep
popf
sub
add
sbb
cmc
dec
insb
fnstsw
clc
jmp
clc
ss
jg
lock
clc
lret
das
push
add
and
add
add
add
nop
and
add
or
clc
push
jmp
test
ja
sbb
pop
add
add
add
pusha
add
mov
dec
iret
push
jmp
cld
jecxz
xor
add
and
push
jp
call
gs
add
pop
scas
sub
mov
jg
clc
fisubs
add
mulb
add
jae
add
add
clc
ljmp
mov
clc
mov
add
sahf
popf
add
xor
add
aas
push
add
mov
lcall
push
ret
cmp
dec
imul
add
icebp
mov
dec
shl
clc
and
add
jne
add
or
pop
loopne
push
outsb
xchg
ljmp
add
cld
jmp
sar
clc
push
push
loop
rcr
xchg
lcall
add
clc
aas
mov
in
xlat
cmp
dec
cmp
mov
add
icebp
lahf
call
pop
xor
sub
push
cld
jmp
sub
sub
add
icebp
and
add
add
clc
insb
sbb
addr16
mov
add
stc
clc
lahf
sti
inc
add
push
add
xor
add
clc
xor
add
add
cmp
mov
mov
add
xchg
int3
cmc
xabort
clc
adc
add
pushf
push
add
popf
cwtl
clc
cltd
push
cmp
add
in
xor
sar
xor
sbb
fcoml
jmp
fs
sub
dec
pcmpeqd
clc
insl
mov
clc
mov
mov
add
mov
clc
movsl
clc
jmp
clc
bound
add
add
lret
and
add
mov
push
aas
jl
clc
outsb
xchg
fiaddl
add
out
xbegin
push
pop
xchg
clc
dec
adc
add
ja
clc
adc
add
xor
clc
and
add
clc
es
ret
clc
fisttpl
loopne
add
add
dec
dec
and
add
cmp
add
ret
clc
in
in
jmp
clc
inc
add
pop
mov
dec
sar
scas
aam
cmp
clc
inc
add
jmp
mov
leave
cld
jmp
pop
je
fwait
xbegin
cmp
fadd
clc
mov
mov
cmovs
lods
fs
iret
stos
aas
shrl
clc
roll
leave
cmc
aas
or
push
cld
jmp
or
in
fwait
mov
clc
add
clc
push
iret
bound
add
leave
cmpsb
clc
sbb
jo
add
insb
jg
clc
je
sar
sub
clc
xor
add
sbb
push
decb
cmpsl
clc
das
dec
jmp
roll
add
mov
add
in
inc
add
iret
push
mov
mov
std
dec
fnsave
clc
cwtl
rol
clc
jle
inc
clc
push
pop
jmp
repz
aas
add
rcrb
add
cmc
mov
iret
sub
mov
fcoms
call
scas
lahf
leave
cmp
mov
cld
jmp
data16
jo
add
clc
xor
add
mov
clc
arpl
add
arpl
add
inc
add
clc
inc
add
mov
ljmp
jne
cmpsb
clc
add
add
add
clc
es
lock
add
bound
add
mov
mov
sbb
jmp
or
mov
ficoms
and
add
add
call
add
inc
add
cwtl
inc
add
jmp
lret
lods
jns
or
inc
add
cmpsl
clc
add
add
add
das
fcmovb
clc
xchg
xor
add
add
shrb
add
aad
cltd
fldl
sub
add
test
outsb
mov
add
add
clc
dec
fdiv
loope
push
and
add
add
gs
mov
sbb
lods
xchg
repnz
add
fistl
insb
or
sub
ret
fcmovnb
clc
in
adc
add
jge
clc
or
jg
sahf
movsl
clc
xchg
dec
icebp
loopne
fcomps
add
js
testl
out
mov
add
adc
add
ror
lock
mov
jge
clc
push
outsb
inc
add
sub
sub
leave
in
outsl
sar
and
add
fwait
and
add
push
leave
mov
sbb
clc
or
cld
fwait
imul
sti
ljmp
adc
imul
clc
push
sbbb
inc
cwtl
pop
sub
test
adc
add
fisttpll
xchg
pop
mov
cmp
add
add
add
add
dec
stos
push
mov
clc
mov
je
add
scas
push
push
clc
jnp
fwait
ja
clc
xchg
jbe
clc
test
sbb
cmp
clc
imul
clc
push
add
jae
add
rcrl
sbb
pushf
pop
data16
addr16
jl
add
movsl
clc
in
cmp
cmp
cmp
add
push
cmp
test
sar
mov
add
xor
add
mov
add
push
popa
add
in
xor
in
jp
pop
add
add
add
adc
add
push
inc
add
jg
add
flds
add
and
add
das
outsb
push
mov
mov
bound
add
add
sub
clc
inc
clc
adc
inc
add
xchg
sbb
test
sub
add
jmp
xor
xor
cld
jmp
or
dec
ljmp
cld
jmp
inc
or
add
lea
add
clc
pop
clc
adc
add
mov
add
leave
cmp
decl
cld
jmp
cmp
add
jmp
add
add
ret
clc
jbe
stos
loop
xor
add
clc
imul
es
in
push
add
loopne
jae
add
std
loope
xbegin
add
cmp
sub
jge
add
aaa
sbb
clc
ss
jecxz
data16
push
add
add
add
mov
jne
clc
aam
fs
dec
cmp
lods
add
add
sub
cltd
sahf
hlt
cmp
cmp
dec
cwtl
push
add
cmp
adc
add
clc
std
outsl
jl
xchg
enter
adc
clc
mov
cld
jmp
pop
cmp
inc
add
icebp
xchg
fcoms
nop
sarb
add
iret
sbb
popa
add
mov
jle
inc
clc
bound
add
inc
clc
data16
fstps
sbb
insb
inc
insb
insb
cld
jmp
pushw
push
ret
pop
sub
out
in
push
lahf
out
push
popl
cld
jmp
xor
loopne
lcall
xor
add
cmp
sub
gs
dec
sar
test
jg
sbb
stos
cld
jmp
adc
pop
xbegin
lret
cld
dec
lcall
add
mov
add
cmp
add
add
aas
loopne
movsb
clc
cs
gs
xchg
ss
pop
mov
or
inc
clc
push
into
xor
add
pop
fwait
movsl
clc
xor
add
adc
add
sahf
pcmpgtb
iret
ret
inc
add
addr16
jnp
add
xchg
mov
shr
icebp
mov
add
sub
dec
es
psrad
inc
add
xchg
movsb
clc
test
mov
push
pop
sub
push
cmp
xchg
xor
add
mull
clc
and
int3
mov
cld
xor
add
ret
fisubs
ja
add
jae
add
xchg
dec
sub
cld
fstpt
clc
mov
data16
sub
add
in
cmp
sub
xchg
ds
out
sub
push
ret
sub
fdivr
ret
inc
add
mov
lods
cmp
sar
clc
xchg
jle
mov
add
or
add
jl
sub
adc
aam
push
add
jbe
or
add
add
cmp
clc
fs
push
mov
ss
ret
inc
dec
out
ds
sar
jp
pop
pop
gs
mov
fwait
dec
pop
pop
mov
jle
add
and
add
clc
push
add
mov
and
add
and
add
add
lods
popf
and
add
add
jno
add
cmp
movsl
clc
repnz
add
mov
addl
mov
or
add
add
clc
imul
add
add
add
iret
xchg
iret
dec
cmp
test
bound
add
inc
clc
xabort
push
add
int
test
dec
adc
clc
xabort
cmp
cmp
jmp
sub
ja
add
jmp
stos
jp
jbe
cmp
add
add
add
aam
add
dec
ss
adc
add
add
inc
add
mov
clc
repz
lea
add
cli
xchg
test
cld
jmp
adc
and
mov
repz
push
pusha
add
sbb
ljmp
mov
lcall
clc
mov
sti
add
add
decl
dec
outsl
add
sub
int
out
pop
mov
push
icebp
loopne
loope
mov
cmp
pop
cld
out
push
add
pop
loop
jle
jl
add
sti
cltd
inc
clc
imul
push
pop
pop
add
mov
and
dec
outsb
cmc
jle
lahf
mov
mov
or
push
add
cwtl
xor
add
add
arpl
add
pop
xchg
outsb
movsb
clc
push
add
cld
jmp
aaa
dec
das
dec
cwtl
cmp
clc
clc
inc
clc
push
mov
add
inc
add
dec
mov
clc
mov
sti
push
clc
inc
add
mov
cld
jmp
sbb
clc
or
add
mov
add
clc
push
mov
ljmp
imul
adc
add
sar
add
push
add
add
add
pop
fs
push
jae
add
mov
jmp
aaa
pop
and
clc
add
add
pop
imul
popa
cld
jmp
sbb
inc
scas
sub
call
clc
clc
cli
pop
mov
clc
mov
inc
ss
ret
jge
and
ret
clc
push
or
clc
data16
pause
clc
push
sub
clc
and
add
nop
rep
clc
cmpsl
clc
cli
gs
sbb
push
ret
clc
push
add
ljmp
add
out
and
mov
add
xor
add
xbegin
aad
mov
pop
sub
in
stos
dec
loop
xchg
xchg
dec
jo
add
clc
popf
and
add
cmp
lods
cmpsb
clc
icebp
jo
add
mov
int3
cmp
mull
clc
lods
iret
ds
push
lods
xor
add
js
jns
call
add
sbb
add
bound
add
pop
add
add
dec
fisttps
push
add
leave
es
add
add
sub
add
js,pt
sub
clc
cmp
push
add
daa
clc
mov
mov
push
mov
cld
jmp
cmpsb
inc
lods
cmpsb
mov
insb
adc
add
inc
add
das
pandn
sbb
jl
sbb
pop
add
cld
jmp
test
je
dec
out
xchg
jns
mov
jb
add
add
sbb
pop
lods
push
clc
mov
insb
xlat
mov
add
movsb
clc
or
clc
inc
add
sub
mov
data16
xchg
cld
js
pop
dec
xchg
mov
test
fcoms
add
dec
push
inc
add
fldenv
clc
mov
enter
addr16
fldenv
xchg
cmpsb
clc
lret
lods
sbb
cmp
cmp
add
clc
insl
mov
clc
push
mov
add
ss
ret
adcb
add
push
jge
push
clc
in
or
test
dec
and
add
call
add
add
fs
jns
clc
pusha
add
inc
add
xchg
dec
mov
clc
and
clc
cmp
pop
mov
sub
jp
clc
mov
xchg
not
loop
popf
mov
js
xchg
mov
fs
push
add
adc
add
xchg
loope
mov
clc
movsb
clc
cmp
pop
fstpl
fldl2t
rorl
push
add
dec
jge
jle
push
push
clc
imul
push
mov
rorb
add
daa
add
push
add
lcall
stos
add
add
clc
jmp
jo
add
add
ret
clc
mov
dec
sahf
push
in
add
add
clc
xor
add
imul
leave
lods
lret
imul
clc
sub
pushf
sub
and
add
mov
cmp
popa
add
dec
xchg
jno
add
add
add
clc
mov
inc
jmp
add
cwtl
orb
cmp
lods
test
sar
mov
in
and
add
jecxz
xabort
js
dec
mov
add
out
sar
clc
pop
clc
outsl
push
push
cwtl
mov
das
push
lock
add
add
add
xor
add
cs
clc
mov
add
clc
cld
sti
je
or
add
add
add
icebp
movsb
clc
add
add
adc
add
add
incl
enter
jp
add
insb
ja
jecxz
stos
sbb
add
nop
cmp
clc
jb
add
clc
imul
loope
xchg
xchg
jmp
mov
clc
insb
mov
dec
mov
lcall
dec
idiv
jmp
sub
ja
stc
inc
clc
push
mov
cld
jmp
outsl
sub
add
add
lcall
add
scas
outsl
insl
xchg
in
arpl
add
clc
lret
or
loope
push
mov
clc
jp
clc
iret
clc
mov
jb
jmp
xor
clc
push
clc
test
clc
sub
mov
in
xabort
add
add
add
daa
clc
into
push
lea
cld
jmp
fwait
sub
cmp
clc
flds
cmp
add
lahf
jle
add
pop
stos
mov
ja
pop
mov
adc
mov
mov
std
or
add
fnstenv
add
icebp
sti
lcall
lea
divb
clc
loop
je
add
mov
jo
add
clc
dec
push
ret
ret
xor
xor
xchg
jl
in
push
xchg
sar
xor
add
cmp
test
popf
fidivl
add
sub
add
add
push
cld
hlt
jl
notl
clc
call
jmp
test
pop
jmp
or
jmp
xchg
sub
fistpll
jl
mov
cmp
clc
xchg
stos
aaa
std
test
pop
in
scas
dec
xbegin
fstpl
int3
sbb
movsb
clc
xor
vmovlps
add
sub
jb
add
nop
push
add
inc
clc
pop
fisubrs
inc
clc
lock
add
jmp
cld
jmp
test
scas
mov
fldl
clc
ljmp
push
add
add
xor
add
xchg
nop
mov
clc
ss
push
add
neg
cmp
push
mov
cld
jmp
add
push
bound
add
inc
clc
pop
pop
in
addr16
xor
add
ret
clc
cmp
add
clc
clc
rcl
in
inc
clc
in
aad
insb
inc
clc
sub
pusha
add
xchg
add
add
clc
fdivp
dec
mov
aas
pop
clc
inc
add
jne
fcmovne
in
je
add
nop
add
add
cld
push
push
add
test
test
adc
add
clc
call
xchg
movsb
clc
int
jne
clc
clc
cmpsl
clc
inc
add
mov
cmp
clc
das
sub
mov
negl
add
cmp
add
mov
clc
push
add
mov
and
add
add
push
add
push
add
jmp
lret
lods
fcoml
clc
push
clc
ljmp
data16
mov
clc
clc
scas
sbb
or
hlt
mov
test
shll
inc
clc
xor
stos
nopl
sbb
add
sub
jno
clc
push
add
mov
cmp
cmp
clc
sar
xlat
cmpsb
clc
xor
add
jle
add
add
leave
loop
jl
loope
cmp
clc
lahf
mov
mov
fiaddl
add
add
cli
fimull
sar
add
xbegin
sar
loopne
int3
mov
mov
movsl
add
add
aas
lea
jg
jmp
insb
push
clc
push
decb
rcll
or
xchg
xchg
in
sbb
add
xor
xor
add
shll
clc
in
clc
in
push
test
xlat
adc
add
inc
clc
lock
add
clc
out
cmp
jne
jae,pn
add
clc
fnstsw
xchg
xchg
mov
ja
inc
clc
xor
add
fwait
lods
xor
add
add
psllw
add
inc
add
xor
add
add
sar
clc
pop
clc
fwait
je
lret
aas
jl
clc
inc
clc
int
push
push
mov
mov
bound
cld
jmp
push
sub
pop
nop
push
add
jmp
clc
mov
add
sub
add
jne
in
pop
xchg
mov
clc
mov
mov
add
jne
cwtl
cmp
and
push
clc
push
cmpsb
clc
fcoms
dec
xchg
pop
pop
xchg
mov
out
adc
add
decb
add
add
adc
add
clc
push
push
int3
pop
rcrb
sbb
add
jecxz
popf
mov
dec
xor
lret
test
jmp
mov
iret
adc
add
or
fwait
jge
gs
jne
fs
rcrl
jmp
cld
jmp
xor
sbb
in
inc
add
popa
add
shlb
xor
add
clc
lret
lcall
xchg
es
jl
add
xchg
push
cmp
add
cmp
aad
xor
add
popf
sub
cld
jmp
dec
pop
adc
add
add
xchg
adc
add
mov
sahf
and
sub
sub
data16
mov
aam
adc
add
clc
add
add
add
add
repnz
cmp
clc
mov
outsb
je
clc
mov
add
add
inc
clc
xbegin
adc
add
sbb
mov
clc
xchg
clc
push
jae
add
pop
outsb
mov
mov
mov
clc
mov
clc
dec
out
push
shl
clc
mov
fs
loop
mov
add
mov
add
add
mov
cld
jmp
in
and
add
add
clc
xor
mov
fcoml
lahf
cmp
xor
cld
jmp
adc
mov
dec
nop
xor
add
es
sub
or
daa
clc
stos
daa
clc
jae
add
stc
ror
mov
xchg
add
sub
add
rclb
xor
cmp
data16
cmp
add
or
push
add
push
mov
xchg
xchg
jle
clc
cmp
dec
push
dec
leave
lods
jb
add
lods
ret
clc
mov
cmp
clc
cmp
pop
es
test
dec
dec
mov
push
in
in
cmp
in
lods
dec
adc
clc
adc
inc
clc
decl
test
add
cld
jmp
fidivl
clc
test
mov
cld
jmp
test
jle
mov
jge
push
add
add
inc
add
jns
add
push
and
add
mov
popf
adc
add
clc
cwtl
cmp
clc
pop
pop
adc
add
add
add
pop
test
stc
cmpsl
clc
mov
mov
clc
dec
int
clc
lods
iret
or
cmp
push
adc
add
jg
cwtl
mov
loop
mov
mov
clc
xchg
sbb
sar
clc
mov
sub
mov
add
fs
cmp
bound
add
clc
xchg
xor
add
cmpsb
clc
repz
add
cmp
cwtl
or
add
addr16
int
adc
mov
adc
add
clc
test
jne
cld
jmp
and
add
movsb
clc
sarl
add
icebp
loop
or
pop
xchg
cmp
addr16
mov
decl
mov
adc
jmp
lea
shll
add
clc
mov
push
add
add
add
add
or
mov
mov
cld
jmp
ja
push
imulb
out
jmp
addr16
push
add
cld
jmp
ja
subb
stc
jo
add
adc
add
mov
out
xchg
pop
js
mov
cld
jmp
push
xchg
inc
clc
loope
pop
iret
sti
lret
add
clc
push
call
cld
jmp
test
scas
xor
add
inc
add
imulb
sub
mov
cld
jmp
je
xchg
addr16
rorl
gs
js
clc
nop
add
add
inc
clc
jbe
lock
clc
cld
push
lods
cld
repz
js
shll
add
clc
pop
or
pop
add
add
add
dec
jmp
clc
jl
sar
sar
lcall
imul
add
jno
add
inc
add
mov
add
inc
add
bound
add
add
add
lods
nop
push
or
add
mov
sub
jb
add
lret
test
jmp
sbb
dec
cld
jmp
sub
sub
test
add
add
or
sub
add
neg
sbb
add
out
in
pop
jae
add
add
cld
jmp
sub
cmp
cmp
add
daa
clc
repnz
je
and
add
cmc
cmp
inc
clc
inc
add
cmp
cmp
cld
jmp
dec
and
add
clc
shl
fdivs
lret
push
je
cld
jmp
cmp
add
push
add
add
xabort
sbb
jmp
insb
cmp
movsb
clc
mov
add
pop
sbb
jg
pop
mov
add
cmp
push
add
ds
das
jae
add
dec
test
sub
sub
cmpsb
clc
adc
add
inc
add
push
ror
cld
jmp
addb
xchg
sbb
pop
clc
pop
inc
add
pop
in
bound
add
mov
xlat
mov
mov
int
cltd
jnp
clc
xor
fldcw
cmp
clc
lret
fbld
mov
clc
pminub
mov
inc
add
in
enter
lock
add
inc
add
out
pop
clc
jmp
fisubl
shrl
inc
add
cmovae
add
lret
add
loop
jns
stos
test
lods
outsb
lret
add
int
add
outsb
sti
mov
cmpsb
clc
push
add
cld
jmp
or
xor
add
xor
add
movsb
clc
ret
clc
addr16
fs
idivl
repnz
clc
ret
clc
lcall
add
clc
adc
push
sar
push
add
push
add
or
arpl
add
add
dec
inc
clc
cmp
inc
clc
out
test
insl
xchg
imul
clc
mov
adc
add
mov
lcall
sbb
jmp
push
sub
adc
clc
mov
push
jecxz
in
lret
addr16
pop
xor
add
pop
ret
clc
sub
clc
lret
xor
add
mov
sub
js
clc
bound
add
xchg
lea
add
jmp
sbb
add
clc
and
add
or
jg
out
stos
jecxz
and
add
lods
out
adc
add
cmp
adc
add
dec
xor
add
push
add
cld
jmp
subb
clc
jmp
clc
sbb
add
push
test
sbb
add
push
add
dec
loopne
in
mov
mov
stos
mov
add
stos
test
fwait
push
add
xchg
das
sbb
push
inc
cld
jmp
adc
mov
add
mov
div
ret
rorl
cmp
sub
mov
jmp
clc
addr16
sbb
clc
dec
dec
imul
add
pop
mov
add
add
add
pop
push
xabort
clc
jle
cli
adc
add
clc
fsubrs
cld
jmp
adc
jns
nop
movsb
clc
lret
mov
add
sbb
add
add
gs
pop
icebp
into
addr16
shl
clc
mov
clc
fstp
add
add
scas
movsl
clc
mov
bound
add
cmp
jmp
or
add
add
sub
add
adc
add
clc
or
jae
add
mov
addps
xor
add
clc
aad
fmuls
clc
repz
in
loop
xlat
lods
aam
clc
sti
pop
xor
add
fisubrl
ret
insb
in
sub
clc
lcall
arpl
add
out
inc
add
mov
insl
pop
clc
push
cmp
clc
xchg
outsl
faddl
add
clc
xor
add
clc
cwtl
mov
push
ret
sub
push
add
push
add
add
and
add
clc
inc
clc
cmpsl
clc
and
add
jb
add
push
add
je
add
lods
cs
push
add
mov
sub
push
mov
clc
mov
clc
mov
sbb
pop
sahf
xor
add
pop
clc
jno
add
pop
dec
cld
pushf
inc
add
in
dec
pop
jo
add
sbb
clc
fwait
push
add
xchg
repz
clc
xchg
js
loope
lcall
cld
jmp
movsb
je
sub
mov
adc
jmp
data16
out
or
clc
js
sbb
add
pop
dec
add
sub
add
cmp
test
insl
lcall
std
and
add
xor
add
cld
jmp
and
adc
add
inc
clc
push
and
add
pushf
into
movsl
clc
fisttpll
jo
add
clc
cmp
xchg
sub
add
aam
jmp
cmp
pop
pusha
add
test
inc
add
test
jnp
add
iret
pop
push
clc
pusha
add
inc
clc
sub
incl
clc
cld
jmp
sub
popw
xchg
loope
test
daa
clc
arpl
add
jo
add
cld
jmp
movsb
sub
fcmovb
clc
test
out
addr16
xor
or
jmp
jno
push
fisubl
add
jo
add
jl
clc
jge
cmp
and
add
add
cmp
cmpsl
clc
and
add
fdiv
enter
add
out
insb
sbb
add
icebp
xlat
jp
repz
jmp
cld
jmp
popa
pop
stos
fsubs
add
bound
add
sbb
add
sub
addb
mov
jbe
es
pop
fwait
jp
add
dec
fisttpl
push
dec
in
ljmp
scas
cmp
sar
clc
push
push
add
or
add
pop
add
add
add
mov
nop
xchg
jb
add
add
mov
add
clc
insb
addr16
mov
and
add
rorl
add
aas
jp
testl
add
add
mov
jne
cld
jmp
push
cmpsb
nop
lret
push
add
cld
jmp
push
jg
je
decl
test
iret
cld
jmp
mov
into
sar
and
add
adc
clc
push
add
loope
adc
add
in
cltd
sti
cmp
es
xchg
mov
xor
add
and
add
add
mov
add
dec
xchg
lods
inc
clc
cli
add
add
push
clc
inc
clc
je
fdivs
add
aas
gs
iret
pop
mov
clc
lret
pop
inc
add
adc
out
mov
cmp
clc
add
add
and
imul
clc
out
arpl
add
lock
mov
add
add
sub
xchg
pop
ja
ljmp
stos
xchg
enter
push
adc
push
ret
push
pop
pop
clc
xor
add
mov
clc
in
add
sub
cld
jmp
inc
dec
cwtl
mov
add
dec
mov
scas
sub
and
add
data16
sar
idivb
test
cld
jmp
sub
add
clc
dec
mov
clc
repz
clc
or
add
fwait
and
add
xchg
jnp
lret
add
jecxz
aad
clc
and
sar
je
push
data16
out
shrl
xchg
js
clc
ds
cmp
adc
add
clc
call
sar
and
add
add
clc
cmpsb
clc
push
loope
or
cmp
fbstp
or
adc
inc
add
lock
sar
mov
pop
cld
jmp
xor
push
adc
movsb
clc
daa
clc
stos
call
inc
add
lahf
jp
xor
add
ja
test
inc
add
sbb
sub
mov
push
jmp
sub
adc
inc
add
ror
stc
adc
add
out
pop
sbb
add
fmul
cmp
fs
cmp
clc
jnp
clc
repz
daa
clc
mov
gs
mov
add
clc
or
add
lret
scas
ret
add
sar
xor
cmp
lcall
mov
jp
clc
and
add
clc
cwtl
incl
add
jmp
pop
in
pop
sub
push
clc
aaa
and
add
shl
clc
test
xchg
inc
clc
jae
add
xor
add
pop
inc
clc
lret
clc
dec
out
cmpsb
clc
icebp
in
pop
clc
outsl
dec
mov
add
add
clc
inc
add
cmp
clc
sbb
sbb
jmp
or
outsl
movsb
lea
pop
mov
out
pop
into
cmp
clc
paddsw
sar
clc
cmp
add
in
js
add
jmp
add
add
jge
dec
push
dec
sar
xbegin
clc
pop
mov
out
in
je
inc
clc
dec
push
add
dec
call
clc
inc
clc
pusha
add
sar
add
cld
jmp
xchg
aaa
pop
ljmp
cld
jmp
ja
or
push
ret
data16
add
cli
add
add
ja
push
int3
mov
clc
int3
loopne
sbb
add
cmp
pop
ds
xchg
push
insb
xchg
lret
clc
and
add
cmp
clc
dec
inc
add
out
add
add
dec
lcall
push
ret
or
add
syscall
clc
ja
mov
dec
test
movsb
clc
mov
push
cld
jmp
cmp
fsts
add
push
add
cld
jmp
adc
popf
ja
dec
jp
xor
add
insl
bound
add
cmc
pop
cmp
add
scas
sbb
scas
enter
add
add
push
je
clc
mov
inc
clc
ret
das
cmp
xor
xchg
adc
add
xor
clc
mov
sar
lret
adc
add
loope
lret
add
xchg
dec
and
add
cld
cmp
mov
mov
jo
add
idivl
push
cld
jmp
lea
scas
jg
add
add
add
jb
add
add
clc
pop
je
adc
add
fisttpll
sbb
clc
or
fnstenv
add
int
jp
movsb
clc
sub
clc
enter
pop
clc
lret
lock
adc
pop
outsl
xbegin
add
add
data16
lret
add
clc
dec
jnp
mov
mov
add
add
jmp
clc
jle
sti
jne
dec
loopne
cmp
clc
sbb
es
push
clc
cmp
pop
add
cld
jmp
repz
add
add
out
sub
enter
cld
jmp
inc
push
test
push
mov
inc
add
aad
add
movsb
clc
mov
loopne
push
das
aas
adc
add
sub
clc
or
clc
cmpsl
clc
sub
mov
fbstp
clc
dec
js
pop
jmp
roll
add
add
clc
shlb
sub
pop
cld
jmp
mov
sub
das
insl
xbegin
add
cld
jmp
or
push
int3
xor
mov
sar
fnsetpm(287
clc
and
push
sahf
push
add
mov
clc
mov
sti
call
pop
mov
sub
jg
add
cltd
xchg
insl
jne
xchg
iret
push
add
and
add
shrb
mov
sar
add
call
or
aas
jbe
and
add
clc
ljmp
add
add
jecxz
js
add
cmp
clc
jns
dec
in
dec
pop
or
pop
jae
jmp
popa
mov
lea
add
or
add
rcrl
aam
clc
clc
push
xbegin
add
js
inc
clc
sub
inc
add
xor
pop
clc
iret
movsl
clc
je
repnz
add
ret
clc
mov
sub
scas
jne
aad
xbegin
add
xchg
adc
add
clc
jo
add
add
iret
rorl
xor
add
sub
adc
add
add
add
ret
in
loop
sub
push
add
mov
leave
adc
add
cmp
imul
xor
cmp
add
lods
xbegin
mov
add
add
cmpsb
clc
jle
pop
data16
sbb
movsl
clc
fld
clc
jne
loope
scas
dec
mov
inc
add
xchg
dec
adc
nop
cmp
jl
add
mov
clc
pop
jg
cmp
sub
add
clc
xchg
shl
test
shrb
inc
clc
scas
insl
arpl
add
clc
push
icebp
push
das
nop
adc
add
enter
in
push
add
jmp
dec
push
clc
adc
add
add
clc
aas
mov
icebp
sbb
clc
sarl
inc
add
hlt
pop
clc
arpl
add
pop
inc
add
cld
jmp
outsl
xor
add
clc
mov
clc
nop
test
outsb
sbb
clc
int3
movsl
clc
push
clc
lret
mov
add
xchg
add
add
insb
adc
add
out
adc
push
add
arpl
add
cld
xchg
push
mov
bound
add
push
add
xor
pop
fisttps
mov
mov
clc
xbegin
pop
mov
add
push
pop
add
fwait
xchg
aas
xchg
xchg
es
shrb
mov
icebp
mov
clc
inc
add
je
cmp
xlat
cmc
mov
add
into
dec
cmpsb
clc
hlt
jmp
movsl
clc
hlt
inc
clc
out
push
add
mov
add
mov
add
cli
xor
add
mov
mov
clc
pop
jno
add
stos
mov
pop
cld
jmp
xor
adc
clc
adc
cltd
sub
add
add
call
or
gs
mov
data16
popf
loope
inc
clc
fidivrl
clc
dec
ret
and
add
pop
into
lock
dec
mov
adc
jmp
cmp
add
clc
daa
clc
fwait
and
add
add
ss
pop
xor
clc
scas
sub
stc
mov
add
sar
imul
nop
dec
add
xchg
or
inc
clc
sub
fists
add
clc
mov
clc
ficoms
push
add
sub
xchg
insb
loope
xchg
sub
clc
fiaddl
add
into
pop
mov
adc
add
add
test
mov
xchg
inc
clc
xor
iret
cmp
push
call
cld
jmp
aas
dec
dec
mov
clc
jecxz
jl
test
push
xor
add
pusha
add
movsl
clc
xor
add
out
push
pop
cmp
sub
add
add
add
clc
and
add
stos
outsl
push
add
lock
fs
pop
clc
push
jbe
inc
clc
dec
jae
add
add
inc
clc
int
clc
in
pop
push
imul
add
fiadds
cld
cmp
insb
dec
stos
pusha
add
je
das
and
add
xchg
mov
inc
clc
mov
add
sub
mov
stc
pop
in
fstl
add
das
mov
push
mov
add
ret
jb
add
inc
add
pop
mov
push
clc
out
fadds
mov
adc
add
mov
add
or
clc
mov
adc
add
add
jge
push
pop
cld
jmp
sbb
sub
clc
push
add
or
push
scas
mov
clc
cmp
fstpt
das
and
add
clc
nop
inc
add
jb
add
add
mov
mov
in
mov
lcall
pop
lret
clc
or
out
ja
clc
lahf
and
fidivrs
cmp
add
mov
adc
add
or
clc
outsb
xbegin
dec
aad
clc
movsl
clc
push
cltd
sti
ljmp
add
clc
ret
clc
js
cmp
out
sub
and
add
jle
add
fnstenv
add
out
movsl
clc
mov
inc
clc
push
jne
cld
jmp
faddp
clc
cmp
clc
jl
cmpsl
clc
test
push
add
test
adc
or
clc
jmp
clc
sub
jae
add
cld
jmp
adc
add
popl
add
enter
xor
cmp
xor
xchg
cmp
clc
shlb
clc
dec
mov
push
pop
cld
jmp
jg
dec
mov
add
add
xchg
in
jo
add
pop
xor
add
add
int
clc
xchg
leave
outsl
aam
jns
add
cmp
lahf
lods
add
add
add
sub
aas
into
jnp
clc
pop
fprem
jns
test
adc
add
push
ret
cmp
and
add
add
sti
jae
add
and
jmp
dec
popa
push
clc
adc
add
clc
mov
push
mov
addr16
mov
ret
xor
add
clc
shrl
mov
loope
mov
clc
outsb
repz
or
sub
clc
mov
clc
cmpsl
clc
xbegin
icebp
sub
pop
mov
clc
adc
lahf
fs
in
je
pop
repnz
pop
cwtl
mov
add
fstps
in
dec
test
nop
sub
cmp
loop
mov
clc
movsb
clc
inc
add
sbb
mov
pusha
add
add
add
and
add
nop
maxps
push
clc
aaa
je
movsb
clc
pushf
inc
add
pop
push
push
mov
add
add
aaa
shll
clc
out
sahf
sbb
add
jecxz
jne
in
cli
lret
adc
adc
add
add
jp
fistpll
ror
jl
push
rcrl
fwait
adc
add
popf
cmp
clc
mov
lods
sub
iret
pop
in
int3
cmp
mov
cmovns
lea
ss
ret
or
add
ja
add
push
clc
loop
push
jmp
mov
dec
iret
test
dec
hlt
dec
dec
frstor
add
in
sbb
clc
adc
add
clc
dec
in
push
movzwl
cld
jmp
mov
xchg
add
add
pop
xlat
dec
dec
in
jno
add
clc
or
xchg
jg
mov
add
nop
push
add
imul
test
jecxz
jle
mov
pop
dec
jns
hlt
in
imul
add
mov
add
add
add
push
jmp
cld
jmp
push
imul
mov
add
pop
lret
push
fucomp
push
and
cs
leave
jl
mov
add
lea
add
xor
add
cltd
imul
sub
add
scas
add
add
add
add
test
pop
imul
or
clc
scas
pushf
xor
add
add
cmp
sub
add
je
mov
call
cld
jmp
jle
bound
add
daa
clc
push
jnp
insb
push
jmp
and
add
dec
fs
and
inc
clc
inc
add
pop
dec
ret
lcall
movsb
clc
cmp
lret
loop
jae
add
clc
mov
test
cmpsb
clc
inc
add
cmpsl
clc
cli
push
add
dec
clc
outsl
js
jo
add
add
add
call
clc
or
dec
and
add
mov
add
out
add
add
add
je
fistl
add
xor
add
add
fs
or
cmp
stos
mov
mov
cmp
bsr
cs
mov
jmp
mov
clc
iret
out
arpl
add
ja
sub
stc
fisttpl
clc
jne,pt
or
scas
mov
add
fsubrp
inc
add
cmp
clc
movsb
clc
insl
inc
add
fimuls
cld
xchg
or
mov
mov
mov
clc
fcomps
xchg
cmp
add
lret
clc
data16
pop
pop
insb
insb
xor
gs
es
mov
outsl
sub
sub
cld
jmp
movsb
das
fdivs
clc
lret
jge
push
push
adc
add
clc
into
test
add
push
aam
pop
clc
aaa
pop
adc
scas
clc
add
add
clc
mov
stos
outsl
das
ljmp
cmpsl
clc
iret
leave
rep
pop
jg
jecxz
and
add
cmp
add
out
in
cmp
push
icebp
pop
ja
repnz
add
mov
out
sar
sar
mov
xlat
push
add
add
push
mov
add
xor
lods
dec
filds
xchg
push
dec
mov
int
add
dec
jmp
add
push
add
add
gs
mov
add
xchg
pop
inc
clc
xbegin
cmp
push
ret
and
call
add
jp
clc
xor
add
sbb
clc
scas
movsl
clc
inc
add
das
dec
xor
jb
add
stos
int
cs
cmp
and
adc
add
add
pushf
mov
mov
ror
lahf
and
add
cld
out
fwait
ja
add
dec
push
add
or
jg
mov
out
mov
xchg
push
add
lahf
bswap
pop
clc
pop
mov
push
clc
or
ljmp
out
clc
gs
lret
add
sbb
or
and
add
xor
stos
ss
ret
pop
mov
inc
clc
jo
add
clc
or
js
fisubl
add
fcmovnbe
or
mov
xbegin
dec
push
or
inc
clc
mov
and
imul
pop
jmp
xor
add
clc
xlat
sbb
clc
xor
add
clc
xor
push
push
mov
std
mov
sub
push
mov
clc
dec
mov
icebp
inc
clc
cs
cmpsl
clc
push
out
mov
clc
push
loopne
stc
pop
stos
jp
cmp
sub
sub
mov
popa
add
stos
pop
jle
pop
jmp
cmp
in
jmp
pop
rolb
add
push
clc
data16
inc
clc
pop
insl
adc
add
add
fistl
add
arpl
add
mov
adc
clc
xor
add
movsb
clc
push
push
sub
add
xor
clc
ret
clc
gs
mov
add
sub
inc
clc
fdiv
rorl
clc
or
fstpt
clc
stc
push
xor
add
sbb
dec
sbb
sar
jo
add
inc
add
stos
mov
cltd
out
sub
cld
jmp
jge
sub
test
jge
xchg
jno
add
xor
add
add
mov
loop
lcall
and
movsb
clc
add
dec
inc
add
pop
je
mov
data16
jnp
clc
add
add
clc
sar
clc
mov
clc
pop
loopne
xchg
xor
aas
clc
add
add
push
ss
ret
sub
clc
xor
add
cmp
decl
test
cld
jmp
jl
clc
fnstenv
add
jmp
jp
add
add
sbb
clc
cmp
clc
push
dec
cld
jmp
sub
clc
jg
clc
scas
jnp
add
js
xchg
xchg
ret
clc
int3
dec
popa
add
shll
add
cmp
mov
imul
add
je
clc
push
dec
ljmp
jmp
and
add
add
adc
jmp
ss
ret
subb
lock
popa
add
pop
mov
inc
clc
aaa
sahf
pop
xlat
dec
clc
dec
xor
add
adc
add
xchg
push
icebp
into
pop
pop
mov
mov
xor
inc
clc
fstpl
and
add
adc
add
popa
add
sub
aam
clc
inc
clc
in
imul
push
add
scas
push
inc
clc
repnz
clc
sub
dec
leave
inc
clc
cmc
xbegin
add
addr16
jp
fildl
aad
add
repz
pop
aaa
xor
add
fsubrs
add
mov
clc
jmp
mov
mov
aas
push
dec
mov
lcall
xor
add
add
cmp
clc
movsl
clc
rorb
lcall
push
ret
jg
ja
lcall
push
filds
add
push
add
mov
add
push
sbb
inc
add
cltd
shr
insb
movsl
clc
dec
sbb
clc
loop
lcall
push
xor
add
sub
clc
xor
add
scas
inc
add
addr16
stos
cmp
movsl
clc
push
xor
add
add
jmp
insb
cli
mov
push
add
aaa
je
clc
in
cmp
xchg
and
add
clc
sub
clc
popf
push
rep
cld
jmp
pop
cmp
sar
pop
adc
add
add
insb
mov
rcrb
int
jno
add
clc
movsb
clc
dec
push
arpl
add
out
jp
add
push
loopne
push
sbb
orb
test
add
ret
enter
add
add
sti
insb
idivl
mov
cmpsl
clc
adc
add
add
push
popf
and
add
clc
cmp
dec
into
push
in
jg
je
aad
pop
jmp
add
add
add
pop
sub
adc
add
xchg
fincstp
add
add
xchg
jne
jb
add
sti
or
push
clc
movsb
clc
loopne
xchg
popa
add
cmpsl
clc
addr16
fcomi
mov
inc
clc
jno
add
clc
lock
add
add
testl
clc
fnstenv
add
addr16
popf
push
add
mov
add
add
imul
add
shl
mov
dec
add
cld
jmp
xabort
xchg
repz
stc
push
xchg
inc
add
cmp
add
clc
mov
jl
add
xlat
mov
dec
lods
outsb
inc
clc
mull
add
sbb
add
adc
jae
add
fistpl
add
iret
outsl
je
out
aam
push
add
test
cmpsb
clc
dec
or
jge
add
cmp
clc
and
aaa
push
jb
add
add
add
test
sub
xchg
pop
pusha
add
decl
mov
adc
jmp
jge
int3
jp
mov
add
fwait
bswap
mov
sti
xchg
jo
add
aaa
mov
fistpll
movsl
clc
setge
stmxcsr
add
add
clc
popa
add
jge
add
pop
clc
aam
loop
xor
add
loopne
lea
xchg
aad
cmp
jp
clc
stos
add
add
mov
jmp
cmpsb
nop
sub
push
rolb
jp
neg
mov
cmpsb
clc
fbstp
add
mov
pop
mov
out
sahf
inc
clc
adc
add
clc
and
add
das
add
mov
clc
je
mov
jmp
add
jo
add
fwait
jge
sar
dec
inc
add
into
aas
adc
add
pop
clc
xchg
icebp
stos
xor
and
add
rorb
or
clc
mov
clc
popf
mov
mov
add
add
data16
mov
or
ss
ret
sub
mov
rcrb
or
xchg
movsl
clc
pusha
add
je
das
out
jno
add
xchg
pop
xchg
daa
clc
iret
sar
xchg
addr16
int3
sbb
jp
mov
cld
jmp
insb
mov
sub
mov
add
push
into
adc
add
mov
xor
add
movzwl
cld
jmp
add
call
dec
mov
xchg
cld
jmp
or
nop
jp
jmp
cltd
inc
add
mov
xchg
mull
iret
adc
add
adc
add
clc
jno
add
mov
add
pop
clc
std
mov
dec
mov
clc
in
mov
divl
add
clc
mov
bound
add
add
add
inc
add
cmp
clc
and
add
clc
inc
clc
cli
dec
cld
out
xlat
cmpsb
clc
repz
add
add
jnp
lahf
movq
add
enter
adc
rolb
add
popa
add
mov
add
mov
inc
clc
clc
fistpl
add
ljmp
sbb
and
add
clc
xchg
mov
clc
fisubs
add
lret
test
in
fistl
mov
clc
int
lahf
dec
xor
add
and
aam
add
add
add
adc
add
dec
push
add
loope
hlt
xor
clc
xor
add
loopne
xor
add
out
scas
inc
loop
cld
jmp
cmp
dec
cmp
sti
mov
lods
fsubrl
sub
add
add
add
out
mov
mov
add
or
sar
clc
in
xlat
out
leave
in
and
dec
xbegin
inc
clc
pop
mov
clc
mov
clc
fistpl
add
es
data16
mov
rcl
clc
mov
add
fwait
xbegin
xor
add
movsb
clc
xor
ss
ret
sub
shll
add
fwait
mov
push
ret
or
and
add
jo
add
add
mov
and
faddl
dec
out
ret
clc
pop
clc
ficomps
add
pop
pop
clc
and
add
clc
push
add
aad
cmp
push
mov
add
test
iret
xchg
stc
add
inc
clc
xchg
mov
icebp
loop
stos
mov
mov
pusha
add
xor
add
clc
dec
mov
mov
or
clc
and
add
push
add
mov
add
pop
jle
fsubl
add
mov
shrb
xor
shl
cld
jmp
sahf
push
aaa
in
pop
mov
pop
aas
decl
test
cld
jmp
nop
add
add
add
inc
clc
cltd
add
add
jecxz
jp
sub
add
clc
mov
fistl
add
mov
cmp
cmp
jmp
cld
jmp
adc
mov
pavgb
ret
and
add
div
lock
clc
shl
sbb
cwtl
aas
and
add
pop
inc
clc
cmp
push
add
and
add
clc
movsb
clc
fidivrs
dec
and
xchg
inc
clc
nop
in
test
adc
add
sub
ss
ret
mov
nop
jbe
add
shll
or
adc
add
add
clc
jns
clc
call
hlt
adc
add
add
sub
das
sar
add
sar
pop
cld
repnz
cmp
das
xchg
lahf
jge
and
add
jno
add
clc
aaa
shrl
jp
fistps
clc
fwait
sbb
cld
jmp
pop
jg
inc
pop
pop
fnstcw
clc
jmp
cld
jmp
sub
push
jg
in
loop
or
cmp
out
repz
add
push
or
sbb
adc
add
jno
add
insl
dec
shr
data16
push
inc
clc
adc
add
mov
mov
xchg
scas
jecxz
inc
add
cmc
hlt
mov
jne
add
ror
sbb
repnz
clc
jmp
clc
pop
or
push
dec
inc
add
das
test
clc
jns
inc
clc
xabort
mov
lret
cli
pusha
add
mov
sahf
adc
add
pop
clc
pop
clc
in
clc
push
es
leave
push
add
dec
stc
in
dec
and
fwait
imul
push
ret
sub
movsb
clc
or
ret
clc
or
sub
and
add
or
arpl
add
add
cmp
popf
jle
test
mov
sbb
jbe
clc
aas
sti
adc
add
sbb
add
xchg
and
add
cmc
push
bnd
lock
add
dec
aaa
pop
jl
pop
loope
add
outsl
test
in
pop
clc
mov
or
ds
sarl
clc
rolb
add
push
cmp
add
clc
or
clc
adc
add
add
cli
lods
lret
sar
sub
loop
fwait
cmp
sar
mov
clc
lods
jo
add
add
fisttpll
int3
push
stos
into
push
jecxz
inc
clc
cmp
clc
clc
cltd
fwait
push
scas
in
push
and
add
cmp
xchg
enter
mov
add
inc
clc
pop
ficomps
inc
add
mov
add
pop
lret
add
rorl
clc
leave
pop
push
cld
jmp
lea
test
add
nop
sbb
clc
fcomi
minps
incl
jmp
or
addr16
xchg
stos
inc
clc
adc
add
add
sub
push
clc
in
movsb
clc
in
and
dec
or
inc
add
ret
clc
add
xor
add
clc
xchg
dec
fistpll
jl
xbegin
add
add
clc
mov
jmp
add
sbb
and
loop
insb
test
clc
repz
cld
jmp
outsl
and
popf
in
xchg
imul
int3
or
jne
xchg
cmp
lea
shlb
add
outsb
or
add
jmp
scas
and
add
clc
dec
add
add
bound
add
add
mov
jb
add
xor
xor
add
mov
clc
ret
clc
inc
add
cmc
mov
es
inc
clc
scas
xchg
rcl
mov
clc
mov
cmp
and
add
add
pop
out
hlt
dec
rcll
lcall
push
add
add
add
add
cld
cld
jmp
pop
fisubrs
cs
mov
cmp
mov
clc
in
xchg
cmp
add
add
push
cmp
add
popf
jge
popa
add
dec
cmpsl
clc
adc
add
add
clc
mov
xor
add
test
rclb
cmc
dec
ljmp
adc
add
movsl
clc
sahf
cld
int
push
add
fisubrl
add
lret
adc
ret
clc
test
add
insb
fwait
xor
add
add
clc
outsl
int3
and
inc
add
in
xor
dec
push
add
pop
clc
inc
clc
loop
imul
clc
ljmp
pusha
cld
jmp
mov
sub
clc
cld
dec
xor
add
add
clc
fisubs
xchg
inc
add
pop
push
xchg
xabort
ret
clc
cmpsb
clc
ljmp
call
in
xchg
cmc
pop
or
add
clc
push
xchg
mov
imul
jno
add
add
add
call
jmp
mov
or
stos
pop
aam
out
dec
clc
gs
jae
add
xor
add
add
mov
push
cld
jmp
popa
lods
adc
scas
fucomi
mov
inc
clc
rolb
xor
add
pop
inc
add
out
mov
cld
fldl
jmp
es
xabort
or
mov
add
xchg
incl
push
ret
add
or
inc
clc
lods
fcoms
jo
add
push
add
ljmp
loope
sub
clc
cld
lea
xchg
cmp
clc
and
mov
cld
jmp
push
dec
movsb
clc
sbb
jg
add
outsb
mov
add
add
dec
scas
sar
add
repnz
cli
sub
clc
jnp
popa
add
add
mov
aam
mov
adc
add
add
idiv
xchg
cmp
xor
leave
mov
clc
mov
push
add
data16
fs
outsl
push
add
jmp
mov
movsb
clc
mov
fdivl
add
aam
add
cwtl
add
add
push
jns
add
add
add
add
add
add
data16
and
inc
add
mov
cld
push
cmp
cld
jmp
xor
dec
or
dec
lcall
pop
ret
clc
jae
add
test
add
add
cmp
clc
pop
xchg
stos
push
call
ffreep
clc
xchg
loope
dec
enter
popa
add
fmull
clc
sar
push
add
mov
mov
clc
fcmovnbe
dec
pop
icebp
jle
ficoms
add
jnp
ds
sbb
add
add
push
rorb
pop
inc
add
dec
cli
fnstcw
xlat
sbb
dec
cld
jmp
orb
je
add
inc
add
dec
mov
mov
cld
jmp
and
xor
sar
clc
jl
mov
fdivl
incb
add
pop
sbb
in
lcall
dec
pop
jp
repnz
xbegin
or
inc
clc
out
cmp
mov
push
add
inc
clc
fs
lea
push
ret
clc
inc
clc
lods
cmp
icebp
and
add
sbb
cmpsb
clc
xchg
sbb
clc
mov
add
add
clc
aam
out
sbb
add
inc
clc
push
add
arpl
add
clc
xchg
inc
clc
dec
loop
lods
nop
repnz
add
shl
clc
dec
fcoml
jb
add
xor
mov
jbe
clc
ja
push
clc
stc
scas
popa
add
insb
stos
ret
clc
pop
insb
push
add
es
add
cld
push
add
dec
insb
fistpll
add
clc
or
loop
sar
push
add
or
fs
decl
test
jmp
push
add
hlt
jae
add
xor
add
mov
fdivrl
cmpsb
clc
sbb
mov
clc
insb
lods
jae
add
clc
fistl
add
pop
mov
xchg
fldcw
add
pop
ljmp
clc
jmp
mov
cld
jmp
sub
push
add
add
jbe
mov
mov
sahf
das
pop
pop
mov
clc
add
add
mov
clc
insl
pop
clc
sbb
scas
sub
call
clc
push
pop
clc
push
add
shlb
test
xchg
je
stos
xbegin
scas
inc
clc
jmp
mov
push
jo
add
clc
mov
clc
push
clc
jmp
dec
js
je
mov
int3
push
push
lods
cmp
sub
add
js
jbe
adc
add
daa
clc
dec
ficoms
add
cmp
xlat
and
add
das
sar
clc
fiadds
add
fidivs
pushf
jns
add
jb
add
clc
addr16
fsubl
clc
scas
cmp
jecxz
inc
add
pop
xor
fs
sbb
add
and
add
stos
ljmp
cmp
pop
scas
fadd
clc
cmp
clc
and
sbb
bound
add
cmp
mov
cmp
enter
movzwl
cld
jmp
add
lret
iret
jle
clc
jg
icebp
fwait
cld
jne
or
add
sbb
sahf
popa
add
ds
add
rorl
loopne
loopne
lock
add
fildll
add
xbegin
clc
setae
clc
add
add
jmp
pop
push
sub
cld
jmp
pop
dec
sar
addr16
mov
or
enter
mov
sbb
clc
cltd
negb
clc
xchg
data16
or
adc
add
add
add
test
ds
xchg
scas
clc
ss
test
negb
sub
add
mov
add
xchg
jmp
jmp
add
cmp
insl
inc
add
iret
gs
cmp
add
add
les
ret
sub
mov
inc
clc
pop
push
add
inc
clc
pop
iret
jge
loopne
imul
add
add
add
adc
add
lock
dec
inc
clc
pop
cmp
pop
gs
addr16
into
sub
add
add
aas
sub
ficoms
clc
in
stos
repnz
mov
ljmp
bnd
clc
push
add
test
cmp
add
inc
add
or
clc
ljmp
add
add
mov
lea
aaa
aas
or
fisttps
sub
push
aad
clc
xor
add
test
mov
or
add
inc
clc
inc
clc
pushl
sar
jmp
sub
outsl
movsb
clc
cmpsb
clc
mov
add
int3
or
clc
pop
sbb
xor
add
int3
repnz
dec
inc
add
mov
sbb
jmp
or
dec
lock
test
pop
jb
add
xor
add
clc
dec
test
pushf
jne
pop
stos
jae
add
cmp
dec
int3
shlb
clc
adc
add
and
add
lcall
pop
pop
and
add
pop
mov
stos
nop
loop
xchg
add
add
add
xbegin
insb
std
pop
pop
cmpsl
clc
xchg
in
nop
xor
add
push
pop
sub
clc
xchg
add
fsubl
filds
add
cmpsb
clc
in
mov
clc
rcrb
mov
adc
add
clc
jbe
ljmp
or
clc
call
stos
outsl
sbb
ret
clc
in
cltd
dec
in
mov
rcll
jne
xchg
jb
add
ds
cmp
add
es
inc
add
add
add
add
sub
mov
cld
jmp
popa
sub
add
add
outsl
pop
xor
sub
clc
push
clc
mulb
jmp
push
popa
sub
adc
clc
daa
clc
mov
push
add
jmp
mov
add
sbb
stc
or
into
mov
add
ljmp
cmp
cld
jmp
sub
jg
ljmp
or
sbb
data16
xchg
aam
add
mov
adc
add
add
clc
in
cmp
and
test
mov
cmp
cld
inc
clc
push
add
stos
test
add
jo
add
pop
xor
add
sahf
mov
lock
clc
mull
in
jne
and
dec
out
cmpsb
clc
aaa
adc
add
mov
mov
lock
add
clc
jg
add
inc
clc
subps
lret
aad
add
cmp
jl
dec
jne
inc
clc
adc
add
cmp
jp
mov
cld
jmp
pop
and
out
inc
clc
iret
out
sti
and
add
xchg
dec
outsb
jo
add
loop
xchg
icebp
push
push
ret
je
fdivp
or
sub
stc
addr16
pop
xbegin
out
outsl
xor
xchg
lods
mov
loopne
cmp
add
pusha
add
sahf
test
sahf
pushl
sub
xor
lock
dec
outsl
push
push
add
sub
add
add
insl
jnp
clc
lods
adc
add
add
int3
dec
call
clc
and
push
add
lods
mov
movsl
clc
ret
clc
jne
xchg
rolb
add
jno
add
pop
pop
clc
mov
xor
add
dec
mov
lock
add
pop
jg
inc
add
addr16
jecxz
mov
clc
arpl
add
push
add
or
add
addr16
pusha
add
rcr
jb
add
lods
and
cmp
clc
push
cmc
add
add
xor
add
clc
daa
clc
xor
add
clc
adc
mov
dec
jle
pop
in
cmp
enter
test
cli
mov
add
push
add
cltd
out
mov
clc
or
clc
inc
add
xbegin
loop
inc
clc
mov
xbegin
add
clc
stos
fs
cmp
loope
clc
aas
jmp
add
add
clc
and
add
add
out
mov
clc
sub
add
add
enter
loop
jmp
ss
add
or
clc
pop
mov
aad
add
inc
add
add
cld
jmp
cwtl
sub
daa
clc
and
add
pop
arpl
add
loopne
xchg
sbb
and
jmp
xchg
sub
arpl
add
imul
add
jmp
test
cmp
insb
cmp
add
clc
cmp
lahf
mov
jbe
inc
add
dec
sbb
xchg
gs
cmp
pop
inc
clc
cmp
clc
fcomps
add
fsubl
push
add
cmpsb
clc
repnz
enter
clc
push
push
add
add
inc
clc
movsl
clc
sub
maskmovq
idivl
add
cs
jbe
clc
adc
clc
jb
add
add
dec
jl
xchg
xchg
jecxz
iret
push
sti
aad
clc
lods
sbb
xor
add
pop
pop
scas
pop
clc
xor
add
div
cld
jmp
pop
push
ja
pusha
add
lahf
and
outsl
loop
cmp
ucomiss
add
cli
pop
mov
xor
add
incl
mov
jmp
xchg
push
mov
cs
daa
or
add
lods
cmpsl
clc
repnz
clc
mov
add
add
xor
add
add
popf
flds
xor
add
push
add
jmp
movzwl
cld
jmp
cwtl
sbb
jnp
mov
add
xchg
flds
sbb
add
add
pop
dec
mov
out
test
sbb
and
add
pop
mov
clc
push
add
test
mov
pop
ljmp
out
sbb
stc
cld
jmp
imul
sub
adc
clc
dec
rcrb
sub
adc
add
add
jno
add
sub
xlat
js
clc
int
cmp
movsl
clc
movsb
clc
push
add
jmp
test
cmp
test
xchg
mov
data16
jl
push
data16
push
xor
aad
clc
test
xor
add
add
mov
xor
add
add
stos
cmp
jmp
xabort
imul
push
fcoms
cmp
jp
pop
ss
ret
sbbb
aaa
shl
clc
cli
fs
lea
add
scas
cmp
test
add
jl
mov
clc
arpl
add
mov
sub
clc
jg
push
je
cld
jmp
cmp
cltd
dec
idivb
jg
clc
sar
ljmp
push
ret
scas
add
clc
mov
test
roll
enter
add
add
mov
jmp
push
mov
jecxz
adc
add
cmp
dec
mov
xor
add
clc
xor
add
add
inc
add
mov
add
add
mov
cmp
add
orb
push
add
push
lds
push
or
sar
lcall
mov
je
clc
fs
loopne
insl
mov
inc
add
sub
xchg
scas
sub
es
push
clc
cmp
xor
add
dec
aad
or
rcl
mov
test
xchg
rclb
rcll
mov
add
movsb
clc
out
dec
je
clc
xor
mov
clc
fwait
add
add
clc
cmp
add
push
icebp
xor
jg
clc
in
loope
cwtl
ja
imul
sbb
push
ret
or
sub
push
sub
push
mov
adc
add
ret
pop
dec
arpl
add
out
pop
lahf
fwait
imul
add
imul
push
push
add
in
or
pop
rdseed
flds
jae
add
inc
add
cmpsl
clc
jge
clc
lret
jge
mov
add
jns
cmp
clc
inc
clc
push
add
jle
out
pop
xor
clc
sbb
add
inc
clc
fisttps
insb
cmp
add
cli
enter
lcall
imul
push
cld
jmp
cmpsb
cmpsb
xor
sub
clc
push
out
repz
mov
add
das
and
add
int
jne
sub
add
add
clc
lret
ds
bound
add
adc
add
add
inc
add
in
fcmovb
clc
jp
bound
add
add
fimull
pop
sbb
insl
dec
sbb
test
jmp
inc
add
es
cli
cmp
pop
lea
mov
and
add
inc
clc
or
add
sub
pop
cmp
mov
sub
or
add
xor
add
add
adc
add
push
pop
cld
jmp
lods
mov
aam
leave
es
pop
push
xchg
aad
incl
nop
fwait
sub
add
add
je
cld
jmp
jo
add
dec
inc
add
int3
ds
mov
repz
add
outsb
test
pop
xor
add
pop
cmp
push
jnp
push
xbegin
clc
jp
movsl
clc
es
popf
push
test
pop
sbb
sar
push
adc
add
rorl
into
sbb
add
mov
cld
jmp
sub
jp
out
mov
outsl
jnp
adc
cwtl
push
mov
jg
cmpsb
outsl
inc
sbb
add
jmp
add
jne
add
clc
decl
test
xor
add
jmp
mov
add
mov
inc
adc
jmp
or
ds
push
mov
xchg
test
es
pop
adc
add
adc
add
xchg
jp
mov
xor
add
icebp
in
aam
add
out
xchg
jns
mov
in
stc
cmpsb
clc
call
add
out
flds
add
fwait
jecxz
sar
dec
mov
add
adc
add
clc
pop
daa
clc
fwait
dec
call
cld
xor
add
das
push
cmc
pusha
add
imul
sub
rclb
cmp
jmp
sub
outsb
pusha
add
push
pop
cmp
sar
movzwl
cld
jmp
sub
int
add
push
add
bound
add
add
cmp
add
addr16
out
mov
mov
add
mov
pop
jbe
or
add
js
add
jecxz
add
add
in
add
add
clc
pop
fidivrl
clc
xchg
inc
add
fnstenv
rcrl
mov
and
add
cmpsl
clc
cmp
or
mov
mov
clc
and
add
jge
fsubl
add
fists
clc
fisttpll
std
push
add
insl
inc
clc
sar
jmp
lret
stos
movsb
clc
out
xchg
repz
inc
clc
in
sahf
shl
outsl
cmp
mov
clc
fidivrl
pop
popa
add
in
add
add
clc
pop
clc
ss
ljmp
clc
inc
clc
into
lea
clc
scas
movsb
clc
push
push
ss
ret
sbb
cmp
and
add
clc
push
cs
jp
add
cld
jmp
sub
clc
fwait
mov
mov
and
xchg
sub
add
sbb
mov
insl
popa
add
mov
test
adc
add
add
push
add
pop
imul
outsl
fiaddl
add
push
jecxz
sti
dec
jnp
stos
mov
add
incb
add
imulb
pop
push
adc
add
clc
fdivp
imull
int3
rcrl
clc
or
push
clc
data16
adc
sub
add
xor
add
iret
fs
jnp
clc
inc
clc
aam
sar
mov
mov
mov
and
add
add
xchg
stc
call
popa
add
xbegin
sti
dec
adc
add
pop
jmp
mov
push
add
int3
ret
or
shll
add
clc
outsl
icebp
or
clc
je
sbb
clc
dec
push
add
rorb
add
sahf
jbe
ficoml
push
ret
sub
pop
ss
ret
adc
popf
cmp
ja
std
test
data16
mov
mov
clc
jecxz
repz
add
lods
addr16
mov
pop
arpl
add
in
cmpsb
clc
iret
pop
add
xchg
lods
bound
add
xchg
mov
sub
xchg
jmp
xchg
add
add
lcall
rcr
push
add
out
iret
xbegin
add
jbe
mov
mov
fwait
aam
add
add
sub
or
cmp
push
ret
cmpsb
pop
pop
sub
shl
clc
arpl
add
add
out
xchg
setns
mov
jae
add
test
and
add
rclb
add
cwtl
add
add
clc
pop
outsl
push
push
jmp
xor
push
add
pushf
add
add
clc
and
add
mov
call
test
cmp
int3
cmp
push
stos
add
sub
xchg
aad
add
stos
dec
imul
clc
sbb
jmp
add
clc
xchg
fiaddl
clc
push
add
mov
add
adc
add
jnp
clc
sti
pop
jecxz
lea
mov
xchg
std
mov
jae
add
jg
push
sub
add
rcr
popa
add
and
add
cld
aam
mov
sub
clc
arpl
add
add
pop
shr
sbb
ljmp
or
cmp
scas
push
inc
add
inc
add
and
add
mov
lret
add
lock
clc
in
push
add
pop
jns
clc
int
es
mov
pusha
add
cmp
add
push
clc
or
or
in
mov
add
or
clc
lods
hlt
ja
add
xor
add
imul
mov
add
call
lock
outsl
xchg
sbb
clc
cmpsl
clc
add
cmp
out
jmp
js
test
push
add
dec
pop
ja
push
jnp
decl
or
fildll
lock
add
pop
pop
xbegin
fmull
loopne
jmp
fwait
test
js
fidivl
add
rep
cld
jmp
jg
adc
pop
jl
pop
mov
cmp
push
clc
xchg
adc
add
mov
cld
jmp
adc
pop
push
imul
pushf
call
movd
add
xabort
repz
lock
add
add
clc
inc
clc
fbstp
jmp
cmpsl
clc
mov
iret
mov
xchg
pop
filds
sub
cmp
xchg
push
in
xchg
in
cld
pusha
add
loope
gs
lahf
mov
rol
clc
ljmp
jnp
out
ljmp
mov
stc
mov
sbb
sbb
test
sub
add
jmp
cmp
sbb
xchg
pop
leave
js
clc
xchg
fwait
fadds
dec
aad
icebp
insb
and
ret
add
xchg
jge
adc
add
add
clc
jnp
add
pop
stos
test
lcall
add
mov
add
mov
add
popa
add
loopne
ljmp
add
sar
adc
mov
push
add
xchg
cmp
add
popf
movsb
clc
sub
add
and
add
or
ljmp
aam
roll
pop
cmp
clc
xor
add
clc
insl
lods
add
add
add
aad
pop
add
cld
pop
pusha
add
pop
mov
add
xchg
out
rorl
or
notl
push
ret
lods
or
sub
dec
int3
out
out
and
ljmp
pop
sbb
hlt
cmp
clc
mov
cmpsl
clc
jb
add
pop
fwait
add
int
xlat
dec
scas
dec
mov
dec
mov
add
shr
repnz
dec
push
cld
jmp
push
cmp
clc
xchg
sbb
repz
add
or
add
cld
jg
dec
mov
clc
jle
inc
clc
dec
iret
xchg
addr16
fstpt
add
jge
clc
xchg
fisttpll
clc
aas
mov
add
sarl
jg
clc
popa
add
mov
inc
clc
call
aas
sbb
add
add
add
dec
mov
clc
adc
add
jg
enter
cld
jmp
pop
dec
xor
mov
add
jae
add
mov
dec
pop
clc
dec
ds
xchg
ss
test
je
out
into
add
add
mov
out
xchg
mov
sub
clc
or
sti
lock
nop
mov
or
ljmp
clc
cli
or
clc
pop
or
add
jecxz
xchg
push
add
push
mov
add
inc
clc
mov
mov
cld
jmp
or
pushf
cmpsb
clc
inc
clc
js
and
add
arpl
jmp
subb
add
mov
clc
jle
mov
je
add
jmp
das
mov
clc
ret
clc
sub
clc
iret
imul
pop
push
jmp
sbb
mov
bnd
clc
imulb
clc
jg
push
or
int3
add
add
sbb
add
add
adc
add
jmp
add
repz
rep
push
add
clc
and
aam
divl
leave
jno
add
add
hlt
clc
inc
add
pusha
add
je
mov
sbb
add
sbb
jno
cld
jmp
je
clc
xlat
shll
in
push
push
or
add
add
add
dec
sbb
add
xor
add
dec
push
adc
add
xor
add
rcrb
clc
js
jno
add
js
clc
cmp
ret
ss
ret
mov
bound
add
addr16
test
sar
clc
fnstsw
test
lea
add
dec
std
mov
or
movsl
clc
pop
add
add
add
call
xchg
js
pop
pop
std
xbegin
lods
xchg
add
add
int
out
movsl
clc
movsb
clc
fs
mov
mov
pop
pop
ficoml
add
push
clc
jmp
and
add
outsl
xchg
daa
clc
pop
pusha
add
ljmp
sub
jmp
test
popa
add
repz
clc
cmpsb
clc
sbb
jmp
push
je
test
clc
mulb
cmpsb
clc
loope
inc
add
push
push
add
cmp
test
addr16
cmp
ret
push
out
es
lock
es
psubd
add
xchg
ret
clc
mov
shr
or
lock
clc
add
add
clc
cmp
cmp
mov
sbb
add
cltd
push
add
add
out
int3
add
add
ds
sbb
arpl
add
clc
out
sbb
inc
add
decl
lahf
inc
add
test
notb
test
adc
add
add
sub
icebp
mov
data16
jae
add
clc
cmp
outsb
push
add
int
add
fwait
aas
pop
fwait
cs
clc
dec
mov
cmp
sbb
add
lcall
add
add
mov
pop
xlat
cmp
sub
jne
cld
jmp
and
mov
clc
dec
push
push
clc
insb
or
or
aad
mov
cld
jmp
add
add
loop
xabort
sub
xor
jne
cld
jmp
sub
cmp
mov
addr16
mov
jmp
sub
push
and
nop
mov
test
cmp
pop
ljmp
clc
mov
add
arpl
add
mov
loop
es
push
add
cmp
sub
shl
clc
add
lea
cli
inc
clc
ret
clc
jge
insl
fs
sarb
push
aam
sahf
cmpsl
clc
add
add
clc
xor
add
inc
clc
cmp
es
jo
add
das
pop
add
add
out
jnp
and
enter
cmp
lea
pusha
add
dec
sub
push
hlt
jmp
outsb
xor
add
add
fisubrl
mov
clc
and
add
mov
add
js
cs
adc
add
hlt
mov
out
sub
add
fwait
jecxz
hlt
clc
test
test
mov
sarl
data16
outsl
aam
clc
aaa
mov
lock
clc
pop
leave
push
adc
pop
push
dec
aam
decl
mov
push
add
sub
add
cld
jmp
mov
sub
scas
cmp
xor
add
clc
mov
add
pop
push
jmp
sub
sahf
dec
jne
and
add
add
push
decl
cld
jmp
mov
xor
add
add
push
clc
sub
push
popf
fs
push
sar
cmp
add
movsb
clc
imull
sar
pushf
ss
clc
jecxz
outsl
jns
add
stc
xor
int
mov
dec
sar
cmp
out
cmp
xor
add
rorl
mov
lods
and
add
push
add
dec
ljmp
add
pop
insb
pushf
sbb
add
add
add
add
add
jnp
inc
clc
mov
mov
jnp
dec
push
clc
mov
sbb
fistl
add
data16
imul
mov
cmp
in
jg
clc
cmp
clc
sar
clc
int3
test
popa
add
fdivrs
pop
js
add
rcr
sub
out
ror
or
cmp
into
push
mov
add
add
lock
mov
cld
jmp
test
dec
mov
data16
add
inc
clc
add
mov
add
scas
rorl
fstpt
jp
cmc
js
lock
add
imul
outsl
and
add
negl
xor
ss
ret
mov
cli
mov
add
jmp
outsl
xor
add
mov
jno
add
lods
jl
sub
fidivrs
vmovaps
jae
add
jl
es
add
add
fstl
add
cmp
add
or
add
add
add
xchg
push
jae
add
add
add
sar
js
ret
clc
imul
jns
outsl
xchg
or
clc
xor
clc
data16
jecxz
mov
add
mov
movsb
pushl
je
sub
add
ss
xlat
in
roll
clc
jno
add
clc
fildl
add
loop
sbb
jmp
insb
push
dec
adc
icebp
lcall
shrb
lahf
in
push
cs
aad
cwtl
adc
xchg
fidivrs
mov
clc
testl
cmp
out
xor
xchg
pop
inc
clc
loope
div
pusha
add
scas
daa
clc
sar
clc
sub
add
pop
xor
ss
push
add
cld
stos
xor
add
test
notb
add
push
clc
mov
xchg
clc
pop
mov
add
arpl
add
clc
clc
dec
in
shll
fcmovnb
clc
jge
clc
mov
movsl
clc
test
cld
jmp
xchg
cmp
cld
jmp
sub
push
movsb
nop
imul
dec
jnp
clc
jnp
add
add
push
xlat
xor
mov
clc
add
sub
clc
data16
loope
jle
lahf
cmp
xchg
loopne
call
add
lahf
out
fmul
cltd
sar
pop
mov
clc
inc
clc
sub
cmp
cmp
add
aad
cmp
add
imul
pop
mov
clc
add
add
clc
bound
add
cmp
jg
lock
clc
pusha
add
popf
xbegin
sar
insl
cmp
scas
lahf
lret
cmp
cld
jmp
cmp
clc
inc
clc
out
xabort
pop
pop
stc
jbe
clc
push
push
cld
jmp
das
or
out
inc
add
cmp
nop
aam
add
hlt
enter
add
inc
clc
pop
iret
xchg
clc
fists
nop
std
hlt
and
add
out
mov
add
mov
jnp
decl
xor
sub
add
or
add
add
sbb
cmc
int3
nop
cmp
incl
sar
jmp
inc
sub
lods
or
iret
imul
std
mov
ljmp
or
add
arpl
add
adc
sti
popa
add
dec
mov
sahf
ss
push
repz
add
cmp
bound
add
clc
divb
add
cmp
cmp
add
or
xor
add
cmp
add
mov
or
clc
cmp
clc
inc
add
mov
xor
add
dec
inc
clc
push
add
insb
fucomip
and
add
dec
nop
daa
clc
bound
add
ret
cld
jmp
fs
leave
push
dec
cld
jmp
or
sub
arpl
add
pop
inc
clc
imul
xchg
jne
shll
dec
into
xor
add
int3
mov
call
pop
lock
add
loope
add
cld
jmp
lea
add
jae
add
stc
sbb
add
clc
stos
jg
add
xabort
add
dec
dec
daa
clc
dec
pop
xor
add
add
ss
ds
xchg
inc
clc
lahf
adc
add
ret
clc
stos
cmp
cmp
push
add
dec
cmp
add
js
push
inc
clc
addr16
jmp
fisubrs
cld
jmp
test
je
inc
clc
push
fsubs
cmp
push
push
cld
jmp
sub
fisttpll
test
clc
sbb
ja
add
jae
add
mov
sub
clc
test
pop
es
aad
add
and
iret
cmp
clc
bound
add
stos
push
lods
addr16
sbb
out
in
cmp
add
add
stos
or
and
add
in
sbb
cmp
clc
decl
cmp
cwtl
jne
sar
sahf
ds
inc
add
dec
and
add
add
ss
and
xchg
and
add
arpl
add
jmp
cmp
movsb
clc
out
xbegin
aam
xor
cld
jmp
push
in
or
mov
pop
dec
ret
clc
addr16
clc
adc
add
add
xchg
sbb
push
or
jmp
das
movsb
or
dec
sahf
popf
push
add
popa
add
cmp
clc
push
sub
mov
mov
clc
cmp
add
add
clc
pop
clc
and
add
clc
fnstenv
add
add
add
add
es
pushf
repnz
inc
clc
es
mov
cmp
jns
jae
add
clc
jns
dec
mov
cld
jmp
pop
data16
lods
push
add
movsl
clc
out
jecxz
mov
add
clc
sub
xchg
xchg
data16
repz
add
add
add
add
enter
pusha
add
and
and
add
add
xchg
pusha
add
jno
add
sub
sahf
cmp
pmaddwd
mov
add
imul
mov
push
add
sub
or
add
cmp
data16
push
cmp
clc
xchg
inc
clc
inc
enter
sub
inc
add
adc
push
jp
fstl
add
clc
js
sbb
repz
jmp
and
sub
cmp
push
add
dec
in
ss
pop
jle
push
add
lret
es
jg
sbb
or
cld
jmp
sub
aas
cli
loop
or
add
test
iret
ds
add
cmp
repz
add
add
add
jno
add
clc
hlt
xchg
popa
add
lahf
fwait
mov
xchg
add
add
data16
stc
movsl
clc
movsb
clc
fs
dec
and
push
arpl
add
xchg
jle
clc
mov
rcrb
inc
cld
jmp
test
cmpsb
mov
mov
add
dec
fsubl
add
jg
push
ss
add
pop
icebp
and
add
testl
add
mov
cmp
add
push
clc
cmp
push
add
leave
ljmp
mov
cld
jmp
lea
mov
push
add
cmp
clc
mov
iret
dec
cli
inc
add
addr16
or
clc
or
add
mov
call
cld
jmp
push
das
popa
jae
add
sarl
add
sub
clc
pop
jg
add
mov
add
add
clc
lret
insb
ret
clc
lret
push
add
stos
movsb
clc
aaa
inc
clc
or
clc
jno
add
incl
jae
cmp
test
jns
clc
dec
das
jnp
adc
add
add
jl
add
add
pop
xor
add
cmc
fldenv
insb
into
xlat
lcall
add
xchg
jno
add
pop
clc
jae
add
xchg
mov
scas
mov
sbb
add
add
test
add
add
add
pop
cmp
stc
loope
mov
push
and
add
inc
cld
jmp
push
mov
fwait
pop
pop
push
and
pop
loop
pop
nop
das
sub
clc
aaa
mov
xchg
ret
add
clc
and
add
cmp
jmp
pop
xchg
inc
ret
jge
loop
leave
cmp
decl
jmp
mov
mov
imul
loope
cmp
add
jne
inc
clc
add
adc
insb
mov
clc
dec
lret
add
ja
test
pop
int
add
fnstcw
clc
cs
cltd
mov
mov
pop
mov
cmp
inc
clc
xchg
dec
mov
jmp
cld
jmp
xor
clc
xchg
pop
lods
lods
aam
mov
pop
and
add
adc
pop
adc
xor
and
add
iret
push
add
mov
clc
rsqrtps
add
add
jl
xor
out
cmpsb
clc
push
add
jnp
clc
stos
xor
adc
add
in
bound
add
clc
or
add
add
or
out
int3
sti
push
add
jmp
pop
dec
and
add
int
jmp
or
add
add
sbb
add
bound
add
pop
lock
add
repz
popf
cmp
add
clc
fdivr
cmpsl
clc
jecxz
out
inc
add
aad
jo
add
add
add
or
fildl
add
mov
clc
jnp
sub
clc
cli
outsl
mov
cs
adc
add
mov
clc
mov
push
add
dec
jnp
add
mov
mov
cmp
jmp
dec
sub
jge
mov
clc
and
add
mov
clc
bound
add
out
test
sti
push
int3
xchg
nop
mov
cmp
pop
ljmp
dec
jo
add
mov
clc
xchg
rclb
pop
inc
add
adc
add
fwait
je
clc
push
clc
loope
mov
cld
jmp
mov
jbe
add
imul
arpl
add
inc
clc
jge
dec
jo
add
clc
jmp
clc
leave
push
add
push
dec
decl
pop
inc
add
ja
sahf
adc
clc
cmpsl
clc
xor
inc
clc
insl
fidivs
push
sub
jae
add
lret
inc
clc
in
je
bound
add
push
and
add
enter
mov
clc
in
mov
pop
out
clc
pushf
aad
add
test
clc
jge
add
cld
jmp
dec
scas
sub
add
sbb
jmp
xor
mov
add
xchg
mov
and
ret
clc
lock
or
add
int3
mov
add
xbegin
add
sbb
js
xor
add
add
ss
ret
mov
sub
fimull
xchg
int
mov
mov
push
daa
clc
xchg
pusha
add
repz
clc
aaa
sbb
sbb
xchg
sbb
clc
cmp
add
and
add
aam
fstl
clc
pop
or
clc
push
add
inc
clc
cwtl
and
repz
mov
cmc
mov
mov
jne
clc
add
add
add
add
outsl
mul
clc
jmp
add
xchg
icebp
push
add
cmp
add
cmp
inc
add
sbb
inc
clc
inc
add
inc
clc
out
sbb
pop
clc
dec
repnz
add
clc
gs
or
rorl
shll
add
xchg
daa
clc
rcr
sub
dec
test
pushf
dec
dec
loopne
test
leave
mov
ds
push
cld
jmp
test
shrb
fstpt
pop
nop
fs
pop
mov
shr
cld
jmp
mov
pop
mov
clc
nop
ljmp
clc
push
add
push
clc
xlat
popf
jno
add
inc
add
inc
clc
xbegin
mov
clc
int3
bound
add
add
add
fisttps
jg
clc
into
add
add
das
ljmp
add
push
dec
std
xor
add
add
clc
cmp
add
clc
movsl
clc
push
jo
add
sar
mov
out
lcall
and
sub
fsub
clc
add
add
loop
jl
cltd
inc
add
ret
mov
dec
fs
leave
push
inc
clc
sahf
mov
mul
clc
filds
jb
add
cmp
clc
add
add
clc
dec
fdivr
rcl
test
adc
add
add
es
dec
push
add
jge
stc
jae
add
add
or
pop
mov
lods
sub
add
sar
lods
jmp
mov
push
add
or
clc
xor
add
lods
inc
add
jns
js
fisubrl
in
cmp
xbegin
test
and
add
out
cs
movsl
clc
jmp
clc
push
jae
add
add
pop
lcall
clc
mov
add
lods
fwait
pusha
add
test
cmc
repnz
push
add
aas
in
ss
jbe
add
scas
into
mov
clc
fwait
dec
xor
add
ficoml
add
movsb
clc
mov
clc
clc
insl
or
pop
add
aam
and
add
imul
aaa
movaps
int
clc
dec
cmp
jne
add
decl
ss
ret
xchg
adc
and
add
mov
mov
add
mov
mov
clc
mov
add
nop
and
xchg
xabort
cmp
insb
dec
incb
add
adc
add
cmp
addr16
fmull
clc
setns
or
add
clc
jecxz
inc
clc
std
enter
dec
add
add
lcall
data16
push
hlt
cmp
cmp
sbb
add
add
filds
clc
addr16
mov
xlat
inc
add
mov
xchg
insb
jae
add
add
sub
pop
pop
or
add
clc
pop
clc
xchg
cmp
sar
clc
add
add
add
popa
add
xor
dec
pop
inc
add
sbb
add
add
fnsave
add
testl
xchg
cmp
aad
sub
adc
add
addr16
fsqrt
cmp
in
daa
clc
inc
clc
in
sbb
add
sub
lret
sar
clc
icebp
mov
sar
clc
or
mov
add
pop
pop
mov
mov
add
add
js
adc
add
loope
inc
add
sbb
add
add
add
add
add
add
clc
inc
add
clc
incb
jecxz
enter
add
js
clc
or
inc
clc
je
clc
cmp
mov
lods
push
add
ret
clc
fidivs
clc
ss
mov
clc
jg
sub
jmp
adc
push
dec
inc
add
or
std
call
and
lock
mov
shll
add
fstl
add
add
add
xchg
add
push
jl
fiadds
add
sahf
mov
add
pop
mov
add
or
mov
notl
popa
cld
jmp
test
pop
or
cmp
clc
mov
ja
clc
push
cmp
add
mov
adc
add
or
clc
cmp
push
push
add
sbb
push
rep
cld
jmp
es
add
test
clc
mov
cmp
mov
jns
push
clc
sar
add
xchg
jge
bound
add
add
xbegin
clc
xor
lods
sbb
add
test
push
ret
fwait
sahf
push
insb
sub
add
add
mov
dec
adc
add
clc
loope
lcall
add
mov
cld
jmp
pop
addb
jge
scas
ja
icebp
in
neg
es
popf
mov
mov
xlat
mov
or
add
mov
js
cmp
jg
cmpsl
clc
mov
adc
add
fisubrs
cmp
inc
clc
shr
sub
nop
mov
cmp
clc
push
add
pop
fsubrl
add
out
dec
fistps
imul
add
out
imul
add
clc
jnp
clc
sbb
push
add
mov
mov
inc
add
mov
jmp
add
in
pop
fs
add
add
fdiv
and
add
sbb
clc
pop
jno
add
insl
enter
clc
aas
aaa
mov
cmp
push
xchg
push
mull
add
add
in
ret
clc
sbb
sub
clc
xabort
test
adc
cmpsl
clc
into
jae
add
cmp
int3
push
xor
cld
jmp
inc
aaa
nop
sub
inc
add
data16
fs
loop
rolb
xor
add
clc
mov
std
mov
add
add
imull
push
add
jmp
test
stc
jbe
add
in
inc
clc
dec
lret
dec
fdivp
mov
adc
add
or
clc
filds
roll
add
mov
clc
cli
pop
in
insl
xor
mov
inc
sldt
cld
jmp
inc
clc
test
and
add
add
pop
cmp
push
sub
add
filds
stos
inc
add
xchg
dec
je
clc
xbegin
rorb
test
add
mov
ss
ret
imul
xor
add
ljmp
clc
adc
ja
ret
clc
in
push
push
cld
jmp
mov
push
cld
jmp
sub
cmp
clc
cmp
add
imul
repz
daa
clc
fucomi
xabort
add
data16
iret
loope
ret
add
cli
cmp
je
add
lods
inc
add
movd
and
add
int3
dec
fs
sbb
jmp
or
aas
or
pop
clc
outsb
std
dec
fcomps
fcomps
rcrb
lahf
push
clc
cmp
cmp
mov
in
out
pop
xlat
mov
add
and
add
push
mov
jle
xor
add
lods
mov
xabort
xor
cld
jmp
add
pop
jno
add
xor
add
fiadds
add
push
add
test
add
push
movsb
clc
mov
add
jo
add
xor
pushf
jae
add
or
clc
imul
mov
sub
lcall
add
mov
push
or
push
jns
clc
clc
shr
xbegin
aam
xor
add
pushf
ljmp
add
add
pop
ljmp
add
ljmp
call
sub
xor
hlt
mov
mov
lcall
or
cmpsb
clc
out
cmp
add
and
add
inc
clc
xabort
push
add
cmp
and
xor
out
fcoms
popa
add
or
clc
sbb
add
clc
clc
push
clc
daa
clc
and
add
add
add
push
add
pop
push
test
fldcw
movsl
clc
into
js
add
mov
add
dec
jne
xor
clc
icebp
stos
pop
mov
push
add
jmp
sub
mov
lea
add
add
jo
int3
out
mov
clc
jmp
push
xor
sbb
jb,pt
cld
jmp
adc
call
clc
mov
cmp
sub
add
ds
clc
jb
add
add
jmp
clc
fs
clc
push
sbb
jb
ss
ret
mov
lea
add
clc
or
mov
add
sar
clc
jle
imul
imul
ret
clc
jl
repnz
add
mov
mov
push
jbe
add
movsl
clc
jae
add
ds
mulb
mov
sldt
add
cmp
dec
arpl
add
add
cltd
and
add
add
clc
jle
add
leave
mov
imull
clc
mov
cmc
xchg
lea
sbb
jno
add
xchg
cmp
jae
add
mov
clc
sar
add
cmp
aad
add
sar
sbb
add
xchg
xabort
clc
sbb
cwtl
sbb
adc
decl
cwtl
dec
and
add
add
dec
mov
into
cltd
dec
or
add
ret
clc
stos
push
cld
jmp
push
in
decl
lahf
mov
add
add
dec
in
dec
xor
aas
mov
add
xchg
mov
repnz
lahf
es
daa
clc
or
sahf
pop
push
add
leave
add
imul
mov
add
add
add
cmp
clc
xchg
inc
add
xabort
clc
stc
inc
add
loope
sub
dec
push
dec
inc
add
jo
add
sar
leave
pushf
fistl
add
test
inc
clc
sbb
cld
jmp
cmp
into
inc
add
add
or
dec
inc
clc
pushf
fimull
icebp
mov
mov
xor
ret
add
je
aad
add
pop
test
push
push
mov
aad
xbegin
add
lahf
sahf
lock
icebp
push
add
mov
jle
repnz
pop
stc
mov
inc
add
jno
add
xchg
jge
inc
clc
mov
int3
xor
nop
inc
clc
pop
or
add
xor
addr16
lret
adc
mov
mov
incl
fs
cmpsb
clc
push
lahf
inc
add
testl
add
push
clc
cmp
out
push
loop
dec
jle
add
cmp
xor
jno
add
sar
ja
cmpsb
clc
int3
pop
test
test
mov
mov
add
add
clc
sub
xchg
aad
jbe
clc
hlt
adc
call
cld
jmp
cmp
xabort
int3
xabort
add
inc
add
lea
add
clc
mov
cmp
add
ljmp
clc
in
cmp
loopne
inc
add
popa
add
ss
push
add
dec
fneni(8087
clc
ret
clc
test
add
cld
mov
mov
sbb
or
xchg
pop
popf
sahf
pop
popa
add
push
add
or
cmpsl
clc
ja
jge
ljmp
data16
jo
add
dec
adc
in
jmp
jmp
add
ret
clc
sub
fs
xor
add
add
ljmp
mov
cld
jmp
sub
and
in
js
clc
dec
stc
mov
das
mov
mov
mov
lods
mov
and
add
loop
jnp
mov
cld
jmp
adc
shl
inc
clc
daa
clc
mov
dec
or
jmp
push
into
scas
int
xor
add
iret
iret
aad
clc
out
popa
add
cmpsb
clc
push
add
enter
xchg
xabort
cmpsl
clc
mov
add
mov
clc
adc
add
clc
pop
pop
outsb
add
adc
add
ja
pushl
lea
and
add
add
mov
xlat
fnstcw
movsb
clc
sub
jno
add
jmp
add
and
add
add
add
add
xchg
jg
pop
jmp
dec
xor
clc
xabort
clc
sub
and
add
sbb
jne
ss
ret
cmp
clc
stos
ljmp
add
arpl
add
aaa
sub
in
pop
clc
cld
ss
adc
add
mov
pop
pop
cmc
out
jbe
add
xchg
sub
clc
adc
add
mov
mov
pushf
shll
add
aad
sbb
cld
jmp
sub
jp
insb
adc
add
cmpsl
clc
sar
xchg
jg
mov
xchg
mov
insl
xchg
pushf
and
add
mov
daa
clc
xabort
nop
xchg
stc
and
fsub
clc
mov
clc
stos
cmp
mov
push
add
add
mov
clc
cmp
add
addr16
adc
add
add
add
push
xabort
add
cld
jmp
das
sahf
push
xchg
es
add
add
scas
jg
test
rcrb
and
add
cli
stos
fmuls
pushf
sub
mov
cmp
out
push
clc
movsl
clc
adc
add
mov
mov
leave
or
jo
add
imul
jg
clc
pop
sub
add
add
xbegin
clc
add
add
iret
push
add
cmp
add
ret
clc
daa
clc
fldenv
clc
out
inc
clc
xlat
aad
clc
push
add
sti
pop
aam
clc
jae
add
inc
cld
jmp
pop
pop
push
or
clc
sub
clc
fcomps
add
clc
fstl
into
jmp
add
ret
loopne
sbb
add
int3
inc
add
mov
stos
lcall
clc
pusha
add
mov
add
neg
pop
clc
cmp
add
in
leave
ljmp
sbb
shrl
sar
jb
add
clc
sbb
add
pop
cmp
dec
inc
add
loopne
pop
aaa
jecxz
mov
jmp
jmp
sbb
xchg
pop
je
movsb
clc
dec
loopne
mov
clc
fistpll
imull
int3
xchg
mov
clc
xchg
sbb
or
clc
in
sbb
add
and
ret
bound
add
clc
in
jg
arpl
add
loop
add
add
clc
mov
movsl
clc
nop
sti
xchg
or
clc
cmpsl
clc
add
sbb
jg
xchg
push
mov
test
cld
jmp
shrl
clc
mov
xchg
movsl
clc
mov
cs
sub
add
or
clc
rcrb
clc
push
add
cld
jmp
xchg
cmp
add
adc
add
add
push
and
add
push
add
mov
pusha
add
jno
add
gs
arpl
add
jmp
cld
jmp
das
xchg
cmp
add
int3
mov
dec
ficoms
add
stos
test
clc
adc
add
mov
push
ret
push
push
jl
inc
clc
das
fcmovu
xchg
add
mov
jmp
or
add
push
add
and
add
add
aam
clc
push
and
cld
jmp
xor
sub
imul
pushf
add
add
inc
clc
bound
add
xor
add
pop
cld
xchg
xor
rol
clc
xbegin
inc
clc
out
pushf
adc
add
sub
pop
cmp
cld
jmp
jg
push
cmp
mov
clc
mov
clc
movsb
clc
push
jnp
dec
ss
clc
sbb
adc
js
dec
or
mov
rcrb
add
add
and
add
add
add
add
clc
insb
and
mov
add
adc
add
clc
insl
cmp
movsl
clc
sub
clc
ret
xchg
mov
cmp
scas
fdivs
add
sbb
out
arpl
add
hlt
pusha
add
cld
mov
add
push
clc
ja
clc
movntq
out
cmp
enter
add
cld
jmp
cmp
insl
fisttpl
ss
enter
inc
clc
out
jle
ss
arpl
add
sahf
mov
enter
out
gs
mov
mov
insb
adc
add
mov
clc
or
add
xor
add
clc
push
adc
add
add
dec
jmp
add
sbb
int3
ja
and
add
cld
jmp
sub
mov
add
cmp
out
repnz
je
pushl
sub
jp
cs
add
xchg
aam
or
clc
jno
add
mov
xor
add
add
xor
add
add
push
sbb
xor
sub
clc
popa
add
fs
outsb
jecxz
add
add
es
test
add
add
add
add
add
add
outsl
imul
add
lret
es
ds
jb
add
fwait
fwait
cmpsb
clc
fstl
add
repnz
adc
add
scas
outsb
sar
clc
sti
inc
clc
xchg
pop
jp
decl
scas
loopne
ljmp
and
stos
lods
lahf
and
add
xchg
popa
add
pushf
jb
add
popf
add
add
sbb
sub
shll
add
push
mov
cld
jmp
test
add
add
lret
ljmp
inc
clc
ds
add
jg
ss
sub
add
jne
cld
jmp
data16
jecxz
cwtl
leave
lock
sar
xor
add
xchg
jne
clc
jecxz
dec
mov
add
fstps
mov
jge
insb
cmp
xor
add
add
xchg
cld
jmp
outsl
int
clc
lock
and
add
clc
mov
fbstp
add
negl
movsl
clc
nop
inc
clc
dec
out
fwait
xabort
stos
aad
clc
loope
push
out
mov
je
mov
scas
arpl
add
mov
int3
add
add
inc
add
mov
add
idiv
and
and
cmp
add
add
pop
mov
mov
add
fucompp
xchg
jae
add
add
sar
clc
push
hlt
inc
add
ljmp
cltd
jnp
mov
mov
out
faddp
clc
imul
cmp
xor
cmp
clc
in
fisubl
in
pusha
add
mov
add
clc
bnd
clc
into
jmp
clc
bound
add
add
clc
popf
mov
push
cmp
add
sbb
add
and
add
cld
jmp
sub
and
sbb
jge
call
pop
clc
aaa
push
jo
add
clc
push
and
cld
jmp
sub
inc
clc
into
stos
cltd
xor
clc
xor
add
call
jb
add
clc
repnz
outsb
sub
scas
pop
stos
in
cli
std
xor
add
inc
add
enter
jae
add
bound
add
xor
clc
fnstcw
add
int3
aas
or
addr16
push
decb
bound
add
add
stos
jp
cmp
add
fsubrl
inc
clc
sub
aaa
sahf
add
xor
add
sti
lods
adc
dec
pop
adc
add
push
add
inc
clc
dec
push
add
cwtl
fcompl
add
lahf
pop
dec
and
mov
clc
loopne
into
stc
dec
xchg
cmp
add
clc
lea
add
pop
mov
leave
ljmp
jp
sub
cwtl
or
and
cmp
cld
imul
mov
add
pusha
add
popa
add
jmp
add
add
add
fcmovb
clc
xchg
loopne
jmp
jmp
sbb
mov
xor
push
sar
scas
xchg
in
nop
and
add
push
add
adc
add
jo
add
xor
clc
and
add
add
jb
add
lods
out
cld
scas
imul
mov
cld
jmp
test
add
add
loope
outsb
fcmovne
roll
add
sahf
xor
add
add
xabort
clc
push
add
sbb
add
mov
aaa
pop
xabort
ret
clc
xchg
frstor
daa
clc
jg
push
add
fmull
and
add
int
pusha
add
dec
push
add
cmp
je
sub
test
dec
in
cmp
clc
sbb
clc
rcll
add
add
add
iret
push
xabort
and
add
mov
inc
clc
add
add
clc
push
aaa
mul
clc
pop
clc
cwtl
std
cmp
jle
xbegin
dec
cmc
addps
dec
lret
lret
jmp
push
add
lret
in
inc
clc
mov
bound
add
inc
add
mov
xor
sbb
cmp
add
sub
add
insl
xchg
inc
add
test
pop
cmp
clc
fdivrs
sbb
add
and
add
clc
outsb
dec
mov
add
lret
test
out
xchg
mov
fistl
add
lods
arpl
add
add
loope
inc
add
push
xchg
add
add
clc
movsl
clc
xchg
jmp
jge
clc
movsb
clc
std
sahf
pop
xabort
clc
sbb
mov
or
add
add
add
or
add
test
mov
adc
add
ds
cmc
data16
sub
clc
sub
clc
sub
nop
sbb
add
movsl
clc
test
pop
xor
add
xor
add
clc
sub
push
cld
jmp
xor
mov
sub
clc
pop
mov
sahf
ljmp
cwtl
ja
sub
jns
add
sub
outsb
inc
add
sbb
add
add
add
mov
cld
jmp
aas
add
lret
outsb
push
add
jne
ret
mov
mov
into
add
imul
ret
leave
sbb
je
add
bound
add
dec
or
clc
push
xlat
push
xor
cld
jmp
add
movsb
in
lock
adc
add
lahf
cmp
add
clc
cmc
mov
clc
xor
add
clc
cmp
jl
xor
add
cld
jmp
mov
cltd
popa
add
mov
clc
gs
cmp
test
loop
rcr
push
pop
scas
in
xchg
jg
clc
ss
clc
sar
add
data16
lock
add
xor
add
mov
jbe
mov
inc
add
ljmp
add
lret
push
and
add
dec
push
and
add
add
mov
pop
mov
jle
clc
fwait
divl
clc
cmp
add
inc
clc
and
add
clc
sub
jmp
cmp
dec
pop
fwait
ds
daa
clc
cld
xor
add
add
nop
insb
add
add
clc
xchg
xbegin
nop
popf
sar
sbb
jmp
sub
add
jle
add
fistl
inc
add
fcomip
add
add
clc
push
movzwl
cld
jmp
mov
outsl
cmp
dec
loope
pop
jns
cmp
dec
and
add
enter
clc
pusha
add
jle
mov
cwtl
int
lret
add
sbb
jo
add
xchg
aaa
mov
insb
nop
sub
add
inc
clc
addr16
xor
add
outsl
stos
or
mov
fistpl
xchg
or
clc
popf
push
mov
cld
jmp
ja
jno
in
in
jmp
ffree
clc
sbb
adc
add
js
scas
cwtl
push
push
cld
jmp
add
push
clc
and
xor
add
jo
add
clc
xor
add
add
ss
clc
in
test
fsubs
jmp
jecxz
mov
inc
add
mov
in
jg
mov
dec
mov
arpl
add
fstpl
addr16
dec
fisubrl
clc
pop
lret
clc
sti
push
add
mov
xchg
insl
add
add
enter
ja
and
add
sub
add
fistl
add
clc
dec
push
jge
ljmp
scas
fs
dec
leave
fstps
cmp
jle
fwait
inc
add
movsb
clc
dec
fwait
or
cld
adc
add
add
aaa
int
daa
clc
sar
out
cmp
pop
push
clc
jp
mov
and
add
loop
nop
mov
add
sar
cmp
pop
xor
add
mov
mov
jmp
mov
add
inc
clc
cmp
mov
add
add
add
cmp
add
daa
clc
cmp
add
add
add
lahf
push
sbb
add
testb
jmp
add
mov
repnz
pushf
xor
add
add
or
push
jmp
adc
jp
add
add
xabort
dec
clc
jle
or
cmpsb
clc
pop
ss
add
pop
and
add
clc
adc
add
clc
fcomi
hlt
test
lods
es
dec
test
clc
dec
iret
jle
cmp
mov
aam
ss
test
cwtl
pop
clc
dec
xabort
mov
arpl
add
pop
imul
jns
jbe
clc
sti
shl
clc
lock
and
add
inc
clc
push
lock
sbb
outsl
sar
decl
sub
incl
sub
imul
add
aaa
xchg
push
clc
adc
ljmp
clc
adc
add
sar
xor
sarb
subb
ret
das
sahf
jp
add
shrl
cli
adc
add
clc
xor
add
jg
adc
add
mov
add
inc
clc
push
cmpsl
clc
rclb
fcoms
clc
pop
cmc
flds
clc
enter
or
add
add
jne
add
mov
mov
clc
sbb
int
clc
int
rep
ss
ret
sbb
adc
add
gs
mov
psrld
add
lods
jnp
stos
push
in
xchg
xor
clc
scas
mov
mov
clc
xor
repnz
clc
cmp
stos
ljmp
add
mov
ret
add
nop
mov
mov
cmp
sbb
sub
cmp
in
or
outsb
sbb
add
add
loop
inc
add
dec
lret
lods
lcall
adc
add
xor
add
add
and
add
pop
clc
popf
sti
nop
sbb
notl
clc
mov
clc
stos
add
add
mov
mov
cld
jmp
lea
push
mov
clc
popf
test
lods
jb
add
cmp
clc
imul
pop
mov
repnz
add
add
flds
add
mov
add
add
clc
cmp
imul
clc
clc
pop
xchg
cli
out
inc
add
insb
jle
add
xchg
sar
int3
xor
add
clc
popl
add
js
jg
and
add
adc
add
cmpsb
clc
lods
sub
clc
test
mov
call
in
cmpsl
clc
in
mov
clc
mov
movsb
clc
mov
in
or
xchg
repnz
cmp
cltd
bound
add
clc
arpl
add
inc
clc
jle
loope
xchg
in
lahf
adc
add
ret
jmp
mov
xor
add
add
movsl
clc
add
add
jmp
mov
test
and
add
je
pop
sahf
cmp
add
outsb
imul
mov
loop
lock
jbe
mov
or
add
mov
cmc
je
mov
clc
popa
add
fldcw
lcall
clc
js
sbb
out
xchg
stos
dec
je
add
add
sar
clc
jo
add
xlat
sub
add
push
ret
jmp
and
setp
add
cmpsl
clc
test
ret
clc
sahf
bound
add
or
add
jo
add
add
inc
add
mov
leave
bound
add
outsl
decl
iret
test
ljmp
lods
adc
clc
jg
dec
cmc
push
clc
and
add
cmp
mov
and
add
clc
enter
cmp
clc
fcompl
dec
xabort
clc
test
xbegin
aad
clc
push
add
pop
dec
inc
add
push
cmp
cld
jmp
pop
pop
sub
adc
cld
jmp
aaa
sub
loopne
imul
mov
out
push
cwtl
jle
xchg
sub
clc
dec
std
sbb
clc
xchg
loope
adc
addr16
xchg
sub
outsb
imul
nop
addr16
cmp
xchg
icebp
pop
mov
add
or
clc
aam
test
clc
loopne
into
pop
push
imul
push
add
cld
jmp
outsl
xchg
jg
ljmp
xor
add
add
push
mov
cld
jmp
sub
sub
clc
dec
je
cli
pop
push
dec
add
add
mov
cld
jmp
cmpsb
sub
cmp
sbb
cmc
sti
clc
stos
leave
push
jmp
sub
xchg
inc
add
sbb
dec
mov
es
add
add
cmp
clc
inc
add
mov
adc
add
fs
pop
mov
pop
mov
push
jg
sbb
xor
add
mov
call
mov
clc
xchg
xor
add
clc
mov
add
cld
push
clc
jmp
push
xchg
cmpsb
clc
jmp
add
add
sub
lahf
adc
add
add
dec
dec
in
ljmp
jne
stos
cwtl
push
jg
call
sbb
adc
clc
lret
bound
add
clc
rorb
shll
add
sar
lea
lods
dec
cmc
daa
clc
popa
add
imul
xchg
jbe
clc
stos
fildll
mov
add
add
add
add
add
test
add
test
dec
clc
test
pop
ds
aad
out
xor
movsb
clc
cmc
icebp
sti
jne
add
aas
mov
clc
mov
xchg
movsb
clc
xchg
stos
repnz
mov
clc
sar
push
add
decl
add
jmp
cmpsl
clc
mov
lret
icebp
xchg
jle
clc
int3
jne
clc
cmp
fldl
clc
mov
add
inc
add
out
dec
sub
lahf
cmp
clc
sbb
pop
repz
add
gs
xchg
imul
add
jmp
clc
cmp
call
cld
jmp
sahf
and
mov
xbegin
add
cmc
flds
mov
add
add
adc
add
xchg
insl
and
inc
add
pop
xlat
jbe
adc
add
lea
fbstp
add
lock
adc
add
inc
add
adc
add
notb
add
push
movsb
clc
cs
stos
pop
imul
sbb
jge
mov
sbb
test
cld
jmp
insl
xchg
and
add
push
scas
inc
add
add
add
add
dec
push
ds
test
jmp
push
je
loope
shrl
leave
mov
out
push
add
loop
xbegin
mov
clc
xchg
mov
jmp
cmp
arpl
add
adc
add
icebp
pop
pop
fs
jmp
and
add
adc
add
add
sbb
outsl
popa
fs
jmp
jge
pop
cmp
clc
cmp
clc
sti
test
fisubrl
sub
dec
cmpsl
clc
xor
add
clc
pop
inc
add
xchg
jae
add
add
mov
lock
push
xchg
pop
cmpsl
clc
jno
add
pop
sbb
jp
test
cmp
xchg
dec
int3
in
add
add
jno,pn
add
xchg
or
xor
add
in
movsl
clc
dec
xor
sar
out
and
add
add
adc
add
inc
add
jle
clc
mov
movsl
clc
mov
and
add
add
test
jle
clc
ds
jmp
fbstp
dec
adc
add
clc
adc
add
mov
add
clc
cmp
fmuls
cmp
scas
jecxz
dec
ret
mov
pop
mov
inc
add
imul
jo
add
add
add
add
add
sbb
ret
stc
sub
in
jmp
test
xor
add
push
add
cld
jmp
dec
mov
addr16
or
push
push
jg
clc
or
jl
cmpsl
clc
xchg
sub
cmp
add
cmpsl
clc
leave
stos
and
add
or
scas
jmp
clc
loop
adc
add
sbb
pop
lods
pop
mov
clc
adc
add
add
jp
nop
xchg
jbe
jle
clc
and
int
clc
jge
push
mov
or
es
inc
clc
lahf
and
rolb
push
pop
jb
add
xor
add
clc
xadd
cmp
xor
add
clc
ds
cmp
add
xor
jae
add
mov
clc
jb
add
clc
jae
add
add
cli
sti
and
insb
test
xor
clc
mov
sbb
add
or
mov
clc
in
pop
pop
mov
int
and
add
add
ret
clc
je
or
add
add
bound
add
push
push
ret
sub
clc
mov
add
fadd
clc
adc
add
add
cmp
add
xchg
dec
dec
inc
add
cwtl
cmpsl
clc
lock
add
cld
xchg
int
push
clc
xabort
clc
stos
jns
mov
mov
jo
add
clc
cmpsb
clc
sbb
jnp
rcr
add
jb
add
add
sahf
sbb
lock
add
and
add
inc
add
jmp
dec
daa
clc
adc
add
shll
add
mov
xchg
popa
add
stc
cmp
fwait
insb
stc
scas
pushf
jl
cmpsb
clc
sbb
clc
arpl
add
add
aas
insl
cmpsb
clc
cltd
loope
cmp
clc
sti
mov
cmp
int3
popa
add
int3
in
sarl
movsb
clc
xlat
cmp
add
in
std
out
mov
add
clc
inc
clc
scas
mov
sub
or
xor
add
add
dec
leave
inc
add
je
add
cld
jmp
and
mov
clc
xchg
inc
clc
cmp
mov
leave
xor
cmp
movsb
clc
pushf
xor
add
add
jbe
icebp
cld
shrl
mov
in
scas
arpl
add
add
mov
mov
cld
jmp
xchg
sub
inc
clc
pop
das
jbe
lcall
mov
mov
add
xabort
pop
inc
clc
sbb
mov
add
add
rcrl
push
add
sbb
ret
clc
aaa
sahf
aad
mov
dec
pop
sub
std
or
lods
dec
mov
xor
add
lock
clc
cmp
jno
add
mov
cmpsl
clc
movsb
clc
sar
xor
add
add
jne
sar
clc
cmp
stc
cwtl
and
add
push
mov
xchg
dec
test
inc
xchg
add
shl
clc
cld
clc
out
xchg
loopne
out
cmp
je
fists
out
gs
inc
clc
ljmp
add
xlat
push
fildll
fcoml
add
cmp
dec
cmp
cmp
pop
clc
jl
or
add
pop
mov
clc
jnp
clc
dec
ja
clc
sbb
add
push
sub
out
mov
lea
enter
add
clc
pmaddwd
clc
stos
xor
add
pop
xchg
push
clc
jecxz
ret
lcall
sub
ret
clc
es
jp
pop
pop
pop
xor
xchg
cmc
pop
popa
add
mov
or
add
rorl
test
sbb
jp
push
clc
sti
cmp
push
add
dec
imul
sahf
inc
clc
fcmovnb
clc
or
jo
add
clc
push
add
ja
ds
add
cmp
jnp
aas
push
fstl
add
mov
add
sub
add
aaa
mov
sub
loopne
jns
clc
loope
xchg
jnp,pn
sar
add
cmp
add
cli
test
inc
clc
and
add
stc
and
add
pop
clc
mov
mov
das
es
sar
add
in
xor
add
xchg
cmp
cmp
pop
or
fs
cmp
mov
inc
clc
enter
clc
add
int
add
cmp
xchg
add
add
push
clc
cmpsl
clc
adc
add
mov
clc
xchg
or
inc
clc
inc
add
mov
cs
add
fstl
add
add
mov
repz
stc
jle
leave
cmp
clc
sub
add
cmp
clc
es
push
cmp
add
pop
pop
fisttpll
lods
pop
jb
add
add
imull
das
dec
add
into
inc
clc
xchg
ret
clc
sbb
mov
repnz
adc
add
pop
xchg
ja
push
lods
repnz
cmp
lock
xor
add
pop
in
cmp
add
int
sarb
cmp
fstl
add
push
pop
popa
add
scas
xbegin
arpl
add
push
sub
clc
mov
and
add
clc
ljmp
adc
add
das
cwtl
pop
or
filds
adc
add
jp
sub
je
jo
add
imul
add
jo
add
sub
insl
and
add
sub
add
inc
clc
loopne
mov
loope
or
bound
add
pop
mov
jno
add
outsl
mov
clc
mov
mov
mov
in
pushf
lret
or
dec
mov
adc
add
add
add
mov
mov
clc
mov
add
mov
add
out
add
add
add
outsb
outsl
mov
xabort
mov
cmp
in
ss
clc
sbb
push
in
je
clc
push
mov
cmp
clc
jns
call
scas
xchg
sub
pop
mov
add
mov
clc
arpl
add
xchg
sbb
shl
dec
xlat
cmp
clc
shr
adc
add
loopne
sti
push
clc
xchg
inc
add
xor
add
xchg
add
cs
cmp
add
sti
in
repnz
push
add
and
dec
testl
repnz
sbb
add
push
add
ds
insb
mov
cwtl
adc
add
clc
xchg
fbld
add
popa
add
push
add
dec
cmp
xchg
mov
and
add
add
cmc
popf
jg
xchg
into
aaa
cmp
ljmp
mov
dec
lock
add
xor
add
add
data16
aaa
dec
ljmp
test
xlat
scas
sbb
xchg
mov
imul
in
repz
mov
inc
clc
popa
add
or
clc
in
xbegin
ss
flds
add
je
add
add
mov
mov
add
clc
cld
daa
clc
sti
scas
xbegin
clc
int
clc
leave
out
xor
add
clc
aaa
jp
aad
iret
outsb
cmc
mov
add
and
clc
lcall
add
lods
jecxz
push
xor
add
jl
add
shrl
lcall
data16
inc
clc
addr16
and
std
fsubp
clc
mov
dec
or
into
mov
pop
clc
js
adc
add
xor
add
clc
aas
notl
add
pop
mov
jne,pn
nop
jp
clc
pusha
add
ret
clc
lock
scas
out
jle
clc
xchg
sbb
xchg
dec
or
add
scas
inc
clc
sti
push
lock
and
add
add
add
add
add
add
cmp
clc
push
jo
add
push
add
jg
cmp
clc
xchg
stos
ficomps
add
clc
inc
clc
js
aaa
in
xlat
xor
add
daa
clc
sahf
aaa
inc
clc
jbe
clc
movsl
clc
es
or
mov
or
cli
cltd
out
dec
in
fisttps
repnz
sbb
add
dec
xchg
mov
pop
sub
clc
sar
dec
inc
clc
xlat
rcl
sti
push
and
add
xlat
xabort
clc
mov
ja
mov
test
gs
mov
adc
add
xchg
mov
das
out
or
clc
mov
pop
scas
xor
clc
stos
aaa
lods
xor
gs
jne
clc
jmp
cmpsl
clc
out
cmp
mov
add
xor
add
rorl
inc
add
je
enter
outsl
mov
clc
test
dec
call
lods
pushf
out
push
outsb
push
popa
add
push
clc
clc
xabort
clc
outsl
xchg
mov
xchg
jns
clc
lret
add
inc
add
mov
xbegin
or
add
add
clc
cmp
mov
clc
sbb
cmp
add
xor
add
sub
out
xbegin
add
sub
clc
cmp
add
xchg
cwtl
xlat
push
or
add
das
mov
adc
add
clc
add
add
iret
sar
mov
or
add
push
add
mov
vmovaps
push
pop
mov
cmp
dec
pop
adc
add
jg
clc
loopne
filds
add
dec
xchg
pop
clc
xor
add
add
push
jno
add
clc
incb
add
cli
fisubs
mov
cs
ss
sub
add
sbb
clc
hlt
cmp
jle
data16
or
xor
add
jmp
icebp
jnp
mov
add
jae
add
clc
dec
sarl
test
xchg
sub
clc
dec
sub
roll
enter
xbegin
and
add
mov
inc
add
jecxz,pt
addr16
inc
clc
leave
mov
dec
sar
add
sub
icebp
dec
xchg
push
add
out
insl
into
fwait
mov
out
movsl
clc
jecxz
inc
clc
jmp
inc
add
cmp
and
imul
xchg
mov
add
test
stos
js
clc
jo
add
mov
add
call
cmp
and
fwait
out
jo
add
clc
mov
inc
add
je
pop
or
xor
popa
add
mov
clc
jbe
dec
add
add
insb
cmp
add
inc
clc
test
inc
add
cmpsb
clc
loope
adc
add
negl
outsb
faddp
clc
inc
clc
out
xchg
lock
loope
mov
inc
clc
mov
clc
xor
add
add
pop
in
add
push
add
std
sar
push
pop
cli
ret
add
outsb
xchg
jg
imul
out
and
add
mov
add
movsl
clc
xabort
add
mov
jmp
add
outsb
mov
add
sti
push
clc
loopne
ret
fisubrl
add
push
clc
adc
add
cmp
mov
clc
adc
adc
add
xor
add
int
clc
jge
add
cmc
cmc
mov
push
push
add
push
cmp
lcall
insb
fiadds
xor
out
lods
das
aam
loope
sbb
clc
icebp
sbb
clc
add
push
jecxz
inc
add
xor
add
jnp
push
add
dec
sbb
add
in
xabort
mov
sub
add
mov
xchg
mov
add
push
jns
int
add
outsl
cmpsl
clc
sbb
add
add
jne
mov
clc
jp
pop
sar
mov
clc
sti
addr16
movsb
clc
cmp
dec
ret
clc
jg
xchg
fcmovb
clc
pop
jae
add
je,pt
cmp
mov
add
mov
add
clc
hlt
mov
push
ret
clc
sbb
rorb
clc
mov
data16
stos
mov
add
add
outsb
lret
in
add
add
iret
lret
ljmp
mov
outsl
je
add
mov
jne
jns
aam
sti
insl
aad
test
movsl
clc
and
add
lock
xor
push
xor
add
add
add
std
sbb
add
aas
mov
clc
mov
jmp
clc
pop
addr16
lods
mov
add
sbb
out
sub
mov
add
mov
xor
add
clc
cmpsb
clc
jnp
push
sar
clc
xchg
in
cmp
clc
jp
mov
sub
add
push
outsb
out
jae
add
daa
clc
jg
cmp
or
cmp
xchg
sub
add
stos
dec
scas
or
clc
jno
add
push
add
cmp
cmpsl
clc
push
add
sarl
mov
mov
add
xor
push
mov
add
cld
inc
clc
sbb
mov
shlb
add
mov
clc
inc
add
xchg
ret
add
flds
add
out
aad
faddp
clc
mov
inc
add
cli
pop
cs
mov
jmp
clc
ja
clc
cld
bound
add
xlat
xor
clc
ljmp
dec
xchg
xor
add
mov
xchg
lret
inc
add
push
add
ffree
clc
jmp
pop
xor
add
loopne
cmc
dec
push
clc
std
bound
add
add
movsb
clc
lret
movsl
clc
lods
mov
mov
movsb
clc
cli
mov
es
cmp
cld
xchg
xor
add
clc
aam
js
add
or
sbb
clc
mov
add
add
lret
add
add
inc
clc
cmp
add
and
add
add
mov
clc
jb
add
add
nop
std
pop
sbb
loop
jnp
clc
pop
movsb
clc
shrl
fs
aad
clc
lods
push
jbe
clc
imul
add
das
inc
clc
jnp
sub
adc
pop
and
add
add
add
mov
clc
push
loope
mov
clc
sbb
repz
pop
xchg
in
mov
clc
pop
fdivr
cmc
xor
add
xchg
lods
sbb
add
ret
xor
add
sbb
mov
sub
scas
daa
clc
sbb
aam
mov
loope
nop
mov
add
add
fidivrl
lods
and
jns
adc
icebp
inc
clc
add
add
clc
dec
xchg
fsubs
add
fildl
mov
add
int
clc
and
add
clc
icebp
inc
add
adc
add
out
add
add
add
clc
xor
add
ficoml
push
jmp
or
add
mov
bound
add
add
cwtl
xchg
pushf
pop
loopne
sar
add
fmuls
clc
pusha
add
out
dec
data16
xor
add
add
add
xabort
adc
add
add
clc
psrlq
std
dec
lret
add
data16
in
jns
clc
syscall
clc
lahf
cmp
add
push
add
lods
fbld
jne
mov
jecxz
cmp
clc
out
add
add
add
sti
sti
jnp
dec
and
add
leave
push
outsb
pop
clc
je
aaa
je
pop
test
sbb
xchg
mov
jne
clc
push
enter
sub
es
pop
cmpsb
clc
add
add
mov
js
stos
rcll
add
clc
inc
clc
cmpsb
clc
add
xchg
ret
fwait
cmp
xchg
sbb
sbb
add
add
add
into
xor
sbb
and
add
add
testl
or
je
jle
add
jns
stos
inc
add
dec
insl
insl
xchg
xchg
and
add
clc
popa
add
mov
dec
sti
push
add
mov
clc
lret
xchg
iret
xbegin
popl
add
shll
idivb
add
pop
shll
add
mov
mov
clc
out
cmc
cltd
inc
add
add
add
sub
fisubrs
add
xchg
add
aam
clc
fsubrl
xor
add
clc
icebp
sbb
cltd
stos
div
data16
xor
add
add
clc
imul
scas
xchg
data16
mov
clc
push
cmp
add
xabort
or
mov
mov
clc
aas
xchg
in
fisubl
mov
je
add
xbegin
clc
outsb
lret
add
clc
and
add
add
and
add
mov
cmp
or
sbb
clc
xchg
in
aaa
sub
clc
das
xor
add
in
outsl
stos
je
add
add
add
add
in
std
jbe
mov
jb
add
add
cwtl
push
or
aaa
jne
out
push
fists
add
add
xchg
jge
add
jmp
clc
adc
add
ret
clc
ret
clc
bound
add
mov
jge
test
push
jmp
add
push
xabort
inc
clc
sahf
pop
scas
rclb
fs
and
mov
jbe
mov
clc
or
xchg
insl
pop
xchg
or
add
push
adc
clc
iret
sahf
fildl
clc
das
pushf
popf
add
jo
add
add
jnp
clc
mov
push
add
inc
clc
imul
clc
mov
xchg
jns
clc
jge
sub
clc
ja
clc
aam
add
cmp
clc
sub
fistpl
dec
into
ret
clc
ljmp
leave
cmp
add
loope
lret
pop
xor
add
clc
mov
cmpsb
clc
xor
add
adc
add
add
push
xchg
dec
ljmp
pushf
xlat
add
add
add
movsl
clc
insl
mov
clc
xchg
fstps
sub
in
test
mov
add
pop
jl
clc
pop
loop
pop
mov
xchg
add
add
clc
data16
decb
cltd
js
clc
add
add
cmp
arpl
add
add
mov
clc
pop
push
add
or
jle
call
add
pop
aas
mov
add
adc
add
add
xlat
out
cwtl
lock
jo
add
clc
sbb
clc
push
add
mov
out
sub
ja
cmp
add
xor
clc
rorl
sar
clc
je
cwtl
cmp
sbb
cmpsb
clc
or
sub
xchg
fcoms
sub
add
clc
pop
lock
add
add
insb
test
add
cmp
clc
pop
adc
add
clc
jno
add
fdivrs
repz
aad
xlat
cmp
test
ljmp
sbb
mov
xor
add
sahf
das
popf
xchg
xor
add
lahf
loop
stos
es
xor
add
sbb
cmpsl
clc
mov
adc
jbe
jne
jnp
fidivs
inc
add
or
lods
mov
clc
clc
lods
insl
inc
add
jne
clc
adc
add
pop
mov
stos
mov
adc
adc
add
fsubs
aam
xlat
adc
int
mov
clc
push
add
es
mov
inc
clc
pop
imul
add
out
push
leave
filds
add
inc
add
push
adc
add
xchg
xor
test
sbb
cmp
add
loop
addr16
mov
add
add
mov
in
imul
push
cmp
clc
push
pop
call
enter
adc
add
cvtpi2ps
push
jno
add
ret
clc
dec
jp
add
add
add
clc
outsb
pop
mov
psubd
and
add
add
mov
cmp
mov
and
ret
clc
cmc
fdivrs
cli
pushf
dec
cltd
cmc
scas
fidivrl
jns
clc
mov
mov
fdivp
push
fwait
fs
or
clc
repz
and
add
add
add
add
clc
movsb
clc
sbb
test
add
lods
jg
mov
cmp
sub
clc
xor
add
in
mov
xbegin
clc
into
sub
dec
push
add
scas
loope
mov
outsl
mov
clc
jae
add
sar
cmp
add
jbe
push
push
jecxz
test
stos
bound
add
add
and
add
clc
lahf
xchg
lahf
fldl
add
xor
out
mov
push
clc
mov
cmc
add
add
sar
clc
rcrl
add
add
bound
add
out
pop
jecxz
idiv
lea
cwtl
jg
add
sar
clc
sar
clc
enter
loope
shr
cmp
sbb
loopne
push
add
stos
ror
sbb
push
addr16
dec
mov
or
add
add
fisubrl
sar
and
add
cmp
cmp
sbb
movsb
clc
js
xor
add
add
mov
lret
shr
mov
in
loopne
jno
add
pop
lock
imul
pop
mov
clc
outsl
rcrl
clc
ret
clc
xchg
xbegin
jge
clc
ret
clc
test
xchg
loop
or
add
fsubrp
mov
xchg
shr
mov
sub
add
popl
add
xbegin
mov
push
stos
or
pop
aas
and
add
clc
int3
aaa
fs
jp
clc
repnz
jns
adc
add
fwait
sti
into
jl
sahf
mov
clc
in
lock
test
ret
int
mov
jbe
clc
cmp
cmp
jo
add
add
add
outsb
mov
add
fs
jb
add
mov
clc
or
clc
mov
iret
arpl
add
adc
add
or
add
lret
adc
std
cmpsb
clc
aaa
and
mov
dec
adc
add
ffreep
clc
mov
imul
ljmp
add
sar
popa
add
jb
add
in
fs
xchg
xchg
jbe
clc
test
xlat
mov
inc
clc
ficompl
std
popl
add
repz
sbb
adc
mov
mov
add
pop
and
out
or
add
push
fs
lea
cmc
in
fnstsw
clc
xor
mov
or
loope
cltd
add
add
dec
shll
in
inc
clc
xor
add
clc
sbb
clc
jp
or
js
repnz
inc
add
jno
add
add
add
clc
test
jl
add
jle
inc
clc
inc
add
xchg
inc
add
or
add
and
cmp
add
pop
cmc
xchg
mov
stos
cmp
scas
mov
cmp
adc
xor
lods
insb
and
add
adc
add
clc
repnz
inc
add
xor
add
pop
mov
clc
or
fucomip
mov
mov
pop
daa
clc
cmpsb
clc
add
mov
clc
test
lods
xchg
cmp
xchg
push
mov
clc
adc
add
add
daa
clc
ljmp
add
clc
push
add
popa
add
xchg
popa
add
mov
add
add
pusha
add
jbe
xbegin
adc
add
negl
ljmp
lods
xor
add
idivl
cmp
dec
pushf
sbb
clc
pop
adc
add
clc
mov
add
sbb
xchg
out
scas
mov
loope
cwtl
lock
add
cvtpi2ps
push
add
aam
xchg
mov
add
lret
rcrb
cmp
dec
inc
add
xlat
mov
dec
cmp
mov
clc
out
xor
loop
mov
clc
test
adc
sar
jne
xor
add
add
and
loopne
or
add
inc
clc
ljmp
insb
testb
mov
mov
inc
clc
mov
jp
clc
loopne
insb
jne
add
ss
test
add
and
add
sub
clc
lret
loop
mov
mov
stos
jge
sub
cwtl
xchg
push
add
dec
arpl
add
sar
mov
add
or
fwait
not
ss
sub
add
js
popa
add
mov
ja
mov
lods
das
stos
in
arpl
add
add
dec
sub
or
stos
adc
add
xchg
fmul
int
xchg
mov
test
int
ficompl
pop
and
add
arpl
add
clc
popa
add
add
and
sub
jnp
clc
pop
clc
bound
add
adc
add
push
xor
mov
clc
mov
std
xchg
xchg
enter
in
movsb
clc
mov
clc
add
fists
jns
jle
clc
pop
mov
cmpsb
clc
dec
jns
jno
add
icebp
pop
hlt
and
add
add
dec
inc
clc
and
add
outsl
mov
xor
clc
pop
mov
clc
mov
xchg
std
xor
add
clc
fcomps
js
sti
leave
cmpsl
clc
cmp
sti
rcl
ret
jecxz
push
add
jmp
push
rorl
inc
add
cli
jl
pop
lock
leave
adc
add
cltd
xchg
in
icebp
xchg
out
xchg
dec
sbb
cmp
add
xor
add
scas
sbb
add
add
mov
dec
in
inc
clc
xchg
jle
mov
cli
loop
jl
repz
sub
stos
rorl
add
pop
sub
sbb
fcoms
add
mov
add
inc
clc
jle
jecxz
mov
mov
clc
inc
clc
mov
inc
clc
cwtl
xor
add
lods
movsl
clc
lret
adc
add
clc
or
inc
clc
lret
outsb
bound
add
loopne
xchg
or
or
jmp
clc
xchg
adc
movsb
clc
dec
lahf
sahf
in
add
add
movsl
clc
cmpsl
clc
cmp
jl
push
jns
shll
add
mov
fsts
add
clc
or
add
bound
add
xchg
cwtl
data16
cmpsl
clc
mov
cltd
adc
clc
fmull
pop
aaa
aad
clc
in
push
add
das
insb
aaa
fistps
lahf
push
mov
js
add
jae
add
add
mov
adc
cmp
add
mov
ds
clc
mov
clc
lret
imul
div
add
add
clc
and
loope,pt
push
add
std
cmp
clc
jno
add
clc
pop
ret
push
cmp
clc
sbb
and
das
loope
push
add
lods
cmp
add
call
clc
ret
push
add
in
or
mov
gs
out
lahf
arpl
add
add
xchg
mov
clc
int3
inc
add
mov
add
repnz
add
int
pop
imul
dec
push
arpl
add
add
dec
loop
push
clc
std
loopne
rorb
push
dec
mov
clc
fidivs
clc
sbb
add
pop
clc
dec
lahf
outsb
jmp
fdivrl
clc
sahf
int
sbb
add
add
sbb
add
sar
dec
push
lcall
in
pop
cwtl
int
fwait
mov
sbb
aas
aaa
sbb
je
xchg
xor
add
push
sub
ss
cmp
mov
add
int3
dec
xor
add
cltd
ret
push
movsb
clc
hlt
dec
sub
cmp
adc
add
mov
clc
pushf
into
scas
cmpsb
clc
in
mov
push
pop
or
add
cmp
pop
test
cmp
add
cmp
cltd
cmp
or
add
ljmp
sar
dec
cmp
sbb
add
mov
add
bound
add
add
add
clc
jg
xabort
test
xchg
dec
xchg
nop
sarb
jmp
add
clc
cwtl
dec
adc
repz
inc
add
cs
pop
or
xchg
rcrl
push
pop
negl
xor
add
clc
js
stos
loop
stos
xor
add
clc
xchg
fnstenv
add
insb
and
add
jl
clc
add
add
clc
mov
sbb
push
add
cmpsb
clc
or
add
xor
add
push
add
xchg
addr16
out
je
fnsave
add
and
clc
sub
clc
aas
stc
pop
incl
add
cmp
clc
dec
inc
clc
scas
push
es
adc
add
pop
cmp
add
push
inc
clc
scas
or
loopne
add
add
add
dec
mov
data16
addr16
push
pop
mov
add
test
push
cmp
mov
mov
mov
adc
add
mov
imul
sbb
lret
xor
add
add
jns
and
add
hlt
or
clc
xchg
mov
dec
sahf
mov
dec
push
test
cmp
clc
push
pop
test
add
lret
ss
popl
jbe
sbb
mov
out
pop
push
pop
dec
popa
add
push
add
add
test
mov
or
clc
push
nop
mov
pop
mov
negl
or
or
imul
mov
jns
cltd
sub
add
clc
hlt
jl
hlt
jmp
clc
sbb
mov
cmc
lock
loopne
enter
sub
push
neg
repnz
call
add
jb
add
clc
cmp
cmp
lahf
imul
xor
add
push
repnz
clc
cmc
mov
add
icebp
sub
add
xchg
in
vmread
in
xor
add
clc
adc
add
mov
mov
sar
xchg
xabort
cmp
add
dec
mov
clc
jecxz
push
add
out
int
add
fwait
cmp
xchg
mov
adc
add
ljmp
cmp
aad
clc
push
add
fcmovu
cmpsl
clc
dec
lcall
clc
nop
aaa
shll
add
icebp
pop
aad
mov
imul
sub
add
add
stos
mov
add
fistpll
mov
clc
ds
cmp
sar
add
sahf
mov
clc
stc
sub
hlt
ss
cmp
jne
mov
inc
add
dec
lock
outsl
int
pop
bound
add
cmp
jle
inc
add
repz
es
cmp
fadd
clc
xor
add
add
sub
add
push
add
sbb
sar
inc
add
pop
insb
xor
add
pushf
cwtl
nop
out
mov
mov
xchg
pop
pushf
ljmp
jl
xchg
pushf
and
add
add
xchg
mov
jmp
add
popf
pop
or
add
movsb
clc
test
inc
clc
sub
xor
add
mov
cmp
cmp
mov
add
clc
rcl
mov
or
add
add
ret
clc
mov
aas
jne
clc
je
test
add
mov
cmp
clc
sar
lock
add
sub
cwtl
jp
pop
dec
mov
inc
clc
dec
xor
add
or
lcall
xchg
push
loop
mov
clc
push
popa
add
xor
add
add
pusha
add
dec
push
xor
clc
fildl
add
clc
mov
clc
mov
add
fiaddl
add
add
clc
pop
clc
cmp
pop
test
or
add
mov
out
mov
clc
mov
hlt
into
popf
jne
sub
mov
mov
clc
jl
clc
movsb
clc
dec
add
icebp
mov
lock
add
jbe
clc
pop
int
push
xor
add
clc
dec
fidivs
clc
cmpsb
clc
aad
xchg
outsb
inc
add
xchg
dec
cmpsl
clc
loopne
loopne
inc
clc
xchg
jg
cwtl
inc
add
dec
adc
add
clc
lcall
nop
ficoml
into
enter
dec
mov
add
or
and
add
movsb
clc
mov
mov
jne
adc
add
push
clc
dec
sbb
jo
add
clc
push
or
and
add
and
pop
clc
fmuls
add
xor
add
add
inc
clc
mov
js
fs
pop
pop
jns
fdivp
cmp
fmuls
xchg
lea
and
add
push
clc
mov
add
cltd
lret
pop
jecxz
jb
add
mov
mov
clc
lret
roll
push
add
sti
loop
inc
add
xchg
int
popf
mov
add
push
add
or
aad
ffree
clc
loope
test
xor
mov
clc
lods
xchg
popf
sub
rcrb
pop
fcomp
pop
fisttps
push
fadds
add
xchg
or
add
xbegin
add
add
add
xlat
ljmp
add
clc
xor
add
pop
cmp
je
pop
mov
incl
cld
jl
ret
clc
test
pop
xabort
cmp
add
nop
xor
add
add
repz
leave
inc
add
adc
add
clc
or
add
pop
cmp
add
add
sbb
repnz
and
add
in
iret
aam
clc
pop
mov
adc
add
add
add
repz
clc
lods
clc
out
fptan
adc
add
add
out
lahf
lret
add
add
add
cld
mov
add
inc
add
pusha
add
xchg
push
sbb
cs
or
imul
add
dec
out
push
je
add
mov
add
or
add
std
nop
xchg
jp
clc
shll
and
add
daa
clc
mov
clc
rorb
ljmp
dec
cmp
clc
jp
clc
or
add
cwtl
ss
add
push
ja
clc
adc
clc
setle
xchg
loopne
sub
add
aam
shlb
sbb
mov
clc
popf
jl
add
repz
add
fdivp
xchg
sub
push
add
sub
inc
add
mov
sub
mov
int
add
add
adc
add
aaa
add
add
mov
jns
add
inc
add
lahf
add
and
mov
clc
arpl
add
loopne
push
push
clc
push
add
jb
add
clc
xchg
push
mov
clc
in
push
add
js
cltd
out
adc
add
clc
xchg
fistpl
js
xchg
es
cmpsb
clc
stc
push
xchg
mov
clc
and
cmp
add
push
add
ljmp
in
cmpsb
clc
mov
add
jo
add
xchg
mov
or
or
add
cltd
inc
add
pop
ret
psrld
leave
popf
clc
nop
xchg
test
mov
rcrl
rcr
pop
fucom
clc
adc
clc
and
add
call
xchg
or
and
add
pop
cwtl
mov
clc
mov
sbb
psubq
enter
and
add
fdivs
imul
mov
clc
pop
pop
aad
clc
mov
clc
dec
sub
inc
add
rol
clc
sub
jb
add
jl
fs
dec
je
in
inc
clc
and
mov
clc
aad
clc
cmpsb
clc
mov
mov
loop
add
add
add
pop
dec
xbegin
clc
jb
add
js
fstl
add
js
dec
push
in
adc
add
icebp
mov
add
xchg
dec
mov
clc
pop
or
clc
inc
add
popf
in
adc
add
xlat
out
es
jge
cmp
clc
ljmp
add
xbegin
add
pop
scas
ret
add
pop
pusha
add
sbb
pusha
add
dec
cmc
clc
aam
clc
dec
int3
sub
add
dec
aad
add
xlat
insl
adc
add
add
insb
test
jg
pop
fiaddl
clc
sub
xbegin
add
cld
cmpsl
clc
clc
jne
js
or
or
add
fimull
loop
mov
outsl
mov
sbb
adc
add
aam
add
cmp
fucomip
push
pop
mov
mov
add
add
clc
sub
insb
pop
clc
call
mov
add
push
add
and
or
push
out
lret
loop
jno
add
add
add
clc
loop
ret
add
add
daa
clc
cmp
clc
stc
inc
clc
xabort
dec
inc
add
jns
loop
add
add
inc
add
daa
clc
cmp
add
xchg
fistps
push
xor
add
shrb
clc
push
push
mov
add
inc
clc
pop
cmp
add
xchg
in
or
clc
popa
add
pop
xchg
mov
out
and
add
add
stc
insb
pop
dec
pop
lods
lock
mov
add
test
sar
dec
add
add
add
jbe
out
mov
add
inc
add
fcmovnb
clc
pop
fsub
clc
jns
and
add
xabort
clc
inc
clc
pop
pushf
pop
enter
add
xchg
daa
clc
loopne
mov
xchg
xor
add
cmc
push
loopne
shl
clc
push
add
push
aam
add
sar
loopne
push
add
push
jecxz
inc
add
push
ret
clc
jnp
scas
outsl
jge
add
add
xchg
add
add
mov
sub
cli
loopne
add
cmp
clc
lret
xchg
jge
xlat
imul
inc
clc
je
dec
filds
add
sub
test
in
xchg
fsubp
clc
outsl
aam
aad
xor
add
outsl
push
cmp
test
mov
das
xchg
outsb
insl
out
mov
add
sub
sahf
mulb
clc
scas
mov
movsl
clc
hlt
dec
jp
loope
jae
add
clc
popf
scas
push
int3
pop
out
adc
add
insb
push
scas
mov
clc
cs
bound
add
add
inc
clc
or
mov
inc
add
outsl
add
add
aad
dec
xchg
clc
inc
clc
and
add
add
add
add
out
jbe
sub
push
add
sbb
js
xabort
mov
add
stc
or
clc
in
mov
pop
xor
add
lock
decb
cmp
xchg
mov
add
cmp
inc
clc
cmp
clc
pop
decl
add
add
mov
clc
stos
mov
mov
bound
add
pop
clc
push
or
das
xchg
adc
add
jle,pt
ss
sub
add
push
fsub
clc
imul
clc
adc
add
repz
add
cltd
not
inc
clc
xor
add
jge
xchg
ret
fistps
push
adc
add
add
add
mov
mov
push
faddp
clc
fsts
add
js
sar
mov
sub
clc
jecxz
sbb
add
clc
xor
add
and
in
std
push
mov
clc
inc
add
mov
insl
mov
inc
clc
cli
popf
or
ret
data16
cwtl
icebp
fwait
dec
clc
or
add
xlat
out
imul
dec
mov
cmp
xor
add
jbe
mov
sbb
loop
xor
sar
clc
ja
stc
cmp
clc
add
add
xchg
adc
add
icebp
xor
add
mov
mov
leave
pop
clc
push
cmp
mov
clc
icebp
gs
mov
sbb
gs
xchg
cmp
mov
inc
clc
test
ret
clc
push
add
rcl
push
xchg
movsl
clc
scas
xbegin
std
arpl
add
dec
push
test
xchg
aas
movsb
clc
test
add
xabort
add
pop
data16
aas
pop
lods
or
add
cmp
clc
shll
aas
xchg
pop
push
add
jge
sub
jnp
clc
mov
sar
xor
add
clc
xchg
jle
add
fimuls
out
imul
cltd
pop
sub
clc
cmpsl
clc
jecxz
mulb
clc
cmp
xabort
mov
mov
add
fdivrp
or
add
add
cwtl
icebp
or
push
clc
ret
clc
ljmp
and
fistpll
jge
dec
clc
ljmp
clc
mov
cmc
xor
add
fs
mov
sub
sbb
clc
xor
add
inc
add
cs
inc
add
mov
add
add
add
add
sar
clc
mov
clc
xchg
xchg
divl
hlt
add
add
stc
adc
add
add
add
int
in
cmpsb
clc
sbb
mov
and
add
pushf
inc
add
mov
and
add
filds
add
xor
add
clc
fisubl
shl
ret
add
movsl
clc
ss
or
sbb
xlat
icebp
ja
add
lret
loopne
enter
clc
mov
clc
pop
loopne
mov
clc
pusha
add
cmp
add
push
cwtl
imul
clc
jmp
clc
imul
push
push
add
push
add
push
shr
lcall
push
shrb
push
clc
movsl
clc
cmp
pop
push
add
pop
mov
clc
lock
xchg
sti
xor
add
xor
add
jb
add
add
in
pop
fistpl
nop
mov
add
pop
mov
mov
xchg
sar
in
scas
sub
adc
add
ret
clc
adc
add
add
add
push
add
cltd
stos
push
rclb
add
sbb
pop
cmc
dec
pop
mov
bts
add
mov
add
adc
add
int3
jno
add
vucomiss
imul
test
add
add
add
scas
aam
add
add
stc
jns
es
cmp
xchg
mov
dec
inc
add
push
add
clc
sti
mov
clc
shll
add
in
sti
inc
clc
test
scas
mov
jl
std
cmp
cmp
hlt
push
mov
dec
jns
in
xchg
cmp
push
out
jne
std
cmp
fisttps
bound
add
jge
lret
gs
push
and
gs
out
mov
inc
clc
pop
and
xor
std
and
add
psraw
cmp
mov
lea
jo
add
or
mov
sub
clc
mov
cmp
mov
add
inc
add
lods
stos
imul
dec
jecxz
adc
add
sbb
clc
jp
xor
add
cmp
mov
clc
arpl
add
lret
jae
add
ljmp
xor
add
push
add
rcrb
stc
dec
or
add
adc
clc
jo
add
and
add
dec
in
popa
add
sar
bound
add
fdivr
pusha
add
xor
shr
out
inc
clc
sar
clc
lock
clc
or
sar
add
cmp
push
push
push
add
cmc
mov
incb
push
xor
add
push
mov
mov
push
xor
add
add
and
adc
add
add
cltd
divb
push
xchg
pop
jl
sti
jp
clc
sbb
adc
add
ret
xchg
cmp
cmp
loope
mov
sarl
add
outsb
outsl
pop
out
mull
scas
add
add
add
add
or
add
popf
adc
pop
push
mov
dec
push
add
jp
fcmovne
mov
mov
clc
movsl
clc
and
add
add
add
add
sahf
aam
cmc
inc
clc
dec
xor
mov
clc
sub
testl
imul
sub
clc
xchg
dec
or
clc
pop
clc
call
xchg
enter
add
mov
push
add
sub
clc
lahf
sub
add
sar
add
and
add
clc
imul
add
or
dec
jmp
cmpsl
clc
and
add
pop
xabort
sbb
fistpl
jge
push
dec
sar
clc
xor
add
rorb
xor
add
add
and
add
clc
push
clc
xabort
clc
es
jecxz
negl
std
outsl
ret
lahf
rol
clc
pop
pop
push
xor
add
outsb
xor
add
add
mov
sbb
clc
xchg
inc
clc
mov
push
add
push
data16
inc
clc
or
data16
cld
dec
and
add
jg
test
insl
adc
add
cmpsb
clc
stos
add
mov
aam
clc
int
mov
movsb
clc
add
add
sti
xor
add
lods
mov
clc
mov
test
pusha
add
fwait
aaa
xabort
sub
add
sbb
jo
add
add
fsubs
add
mov
sarl
sub
xchg
sar
jns
add
mov
leave
inc
add
out
hlt
xlat
leave
loopne
divb
mov
sbb
xlat
push
add
jae
add
add
sbb
cmp
stos
pop
pop
clc
sbb
clc
xor
sub
xlat
cltd
movsb
clc
mov
pusha
add
fsubrs
add
mov
test
stos
sar
clc
pop
int
clc
push
add
push
push
jno
add
pop
repz
mov
aam
rolb
adc
add
add
rol
clc
adc
clc
insl
pop
fs
iret
pushf
sub
add
loop
mov
loop
dec
sub
sbb
int
add
or
clc
dec
in
inc
clc
cmp
push
clc
push
add
and
add
pop
clc
nop
clc
inc
clc
movsl
clc
mov
jge
add
aaa
aad
add
je
add
adc
add
add
clc
xlat
repz
jae
add
mov
ficoml
sub
test
xor
add
mov
xchg
push
add
adc
add
cmp
add
out
insl
cmp
add
xor
add
clc
or
pop
and
add
dec
sbb
add
mov
add
mov
or
xchg
add
add
int3
mov
aas
addr16
cmpsl
clc
out
jno
add
add
dec
or
mov
clc
in
ds
test
add
jecxz
xbegin
jo
add
cmp
clc
ja
clc
popf
sbb
imul
add
add
xlat
hlt
xbegin
pushf
mov
repnz
mov
enter
int3
sub
popf
cmp
xor
push
pusha
add
lret
pop
clc
loopne
lock
push
arpl
add
into
ss
or
cmp
cmp
outsb
push
add
xor
add
add
cld
lock
add
ljmp
and
push
add
xor
add
clc
xor
add
stc
and
add
add
iret
repz
inc
clc
push
add
cltd
mov
pop
incl
push
call
popf
jl
pop
add
js
pusha
add
mov
dec
or
incl
sar
in
repz
insb
ficoml
sti
xchg
in
jge
sar
jae
add
pushf
pop
daa
clc
daa
clc
ljmp
sarl
jg
clc
hlt
jg
push
add
data16
insl
or
pop
std
and
add
jo
add
jae
add
lret
cmp
add
stc
faddp
clc
mov
fidivl
add
inc
clc
and
add
add
jg
scas
add
add
inc
clc
aas
ret
clc
and
add
jmp
shlb
sar
es
xchg
or
adc
add
add
and
fbld
add
fwait
xchg
clc
adc
add
add
add
add
insl
xchg
or
outsb
pop
sub
test
inc
clc
cwtl
xor
clc
pop
clc
xor
cmp
add
dec
jae
add
add
sub
add
sub
clc
mov
inc
add
xor
add
lea
add
lahf
outsl
shll
call
leave
pop
stos
dec
pop
cmp
add
flds
add
mov
clc
jge
clc
xchg
mov
lret
add
mov
jns
leave
cmp
xor
add
mov
sub
lret
push
sar
pop
or
clc
sbb
out
push
outsb
lea
setle
clc
dec
push
xchg
and
add
aam
pop
pop
add
jp
pop
xchg
mov
cmp
sbb
pop
cmc
dec
pop
call
lcall
jo
add
sub
add
add
sub
add
pop
lret
add
adc
add
mov
mov
clc
iret
je
sbb
clc
push
add
lods
outsb
mov
jecxz
dec
fisubrl
and
add
pop
testb
clc
into
mov
clc
sub
fwait
out
cmp
ret
clc
xor
add
cmp
add
mov
add
mov
sti
cmp
add
add
dec
jns
add
pop
push
clc
imul
clc
or
sbb
jbe
test
push
mov
cmp
iret
push
pop
jmp
clc
and
add
add
add
sub
cmp
sbb
ret
scas
xchg
ret
clc
push
out
fwait
dec
mov
cmc
mov
add
add
add
and
sbb
clc
repnz
clc
stos
mov
lods
xor
add
inc
clc
movsl
clc
fwait
out
pop
xchg
mov
outsb
xchg
xor
add
jge
loopne
sub
or
arpl
add
add
lock
imul
sub
clc
xor
sbb
clc
fimull
xlat
popa
add
ss
call
mov
mov
pop
add
add
aam
xor
fld
clc
icebp
cmc
sar
push
jle
clc
xabort
add
mov
xchg
outsl
jge
add
add
repnz
add
cli
and
add
add
clc
mov
push
or
add
add
cmp
cli
fstp
rolb
clc
mov
fiadds
add
jecxz
ja
jmp
clc
popf
cmp
aaa
shrl
fwait
push
add
xchg
out
inc
clc
and
add
clc
outsb
jnp
sbb
imul
data16
push
xchg
es
sbb
add
loope
mov
add
mov
dec
cmp
add
add
add
mull
clc
test
mov
add
clc
and
add
or
outsb
sbb
sub
clc
cmp
jbe
jns
cmpsb
clc
dec
std
enter
fs
nop
inc
add
sub
cmp
int
clc
push
add
mov
add
cmp
rcr
fsubrl
and
add
add
add
add
addr16
int
add
add
adc
loop
inc
add
or
mov
sbb
test
cmp
rcll
mov
pop
lcall
mov
and
add
lods
dec
stos
mov
mov
cmp
inc
clc
loopne
jecxz
mov
clc
leave
and
add
add
data16
xor
add
or
cmpsb
clc
data16
testb
fdivrs
sub
insb
aam
add
sbb
add
add
clc
stos
adc
add
mov
push
clc
xor
mov
adc
repnz
jo
add
xchg
in
outsl
jnp
cltd
and
and
add
inc
clc
or
add
fs
arpl
add
add
add
add
xbegin
add
bound
add
insl
ss
loop
addr16
test
lods
stc
int3
aam
stos
add
add
aad
lock
add
add
sub
cmp
adc
add
fisubs
jbe
add
pop
cmpsb
clc
sbb
add
add
add
shrl
daa
clc
popa
add
fxch
add
movsb
clc
jle
clc
clc
dec
inc
add
cmp
dec
cmp
mov
clc
fstl
add
add
add
add
inc
clc
inc
add
mov
mov
adc
add
repz
clc
or
sahf
addr16
aam
jns
inc
clc
in
xor
add
sbb
xchg
push
lock
mov
in
je
add
sti
cmp
sub
imul
cmp
movsl
clc
loopne
nop
shll
add
adc
and
add
clc
mov
clc
sub
push
add
add
aad
or
scas
int3
icebp
sbb
clc
aaa
mov
dec
out
adc
clc
ljmp
sbb
movsl
clc
or
clc
cmp
mov
inc
clc
push
add
cli
sarl
adc
jnp
sbb
or
aas
xchg
es
dec
insl
fdivrs
clc
pushl
add
add
push
lea
stc
sub
mov
clc
arpl
add
lret
xchg
mov
clc
fucom
clc
xchg
push
inc
add
cs
sbb
cmpsl
clc
data16
cmp
add
xor
add
mov
clc
sub
clc
lock
add
clc
xbegin
xbegin
and
ficomps
clc
sahf
iret
push
clc
cmp
mov
sub
and
dec
icebp
insl
std
scas
push
imul
clc
cmp
ret
cmp
add
pop
clc
add
add
clc
push
push
pop
adc
add
sbb
dec
sub
clc
push
xchg
adc
add
add
add
add
mov
mov
add
in
hlt
cmp
add
clc
scas
fdivrl
addr16
dec
push
add
movsb
clc
push
add
mov
jnp
jmp
insb
aam
cmp
add
fucom
clc
popf
insb
test
clc
int
ret
xbegin
add
add
add
add
add
add
fsubrs
cmp
add
call
xchg
data16
push
int3
xchg
pop
fidivrl
clc
jb
add
inc
clc
xor
add
clc
fildll
lahf
notl
rol
clc
push
pop
out
pop
jnp
clc
add
add
in
movsb
clc
push
add
and
add
add
clc
cmc
aas
or
cmp
clc
into
cmp
clc
ss
clc
adc
add
clc
jae
add
incl
xor
clc
pop
scas
in
ds
add
mov
add
mov
pop
dec
outsb
cmc
mov
mov
in
loope
xor
add
clc
addr16
pop
repz
movsb
clc
dec
fisubrl
mov
push
fildl
add
scas
es
adc
add
add
sbb
ret
clc
inc
add
sub
push
jp
xor
add
cmp
add
xchg
cmp
clc
dec
movsb
clc
cltd
pop
inc
clc
xchg
lret
add
or
stos
imul
clc
xor
test
pop
mov
mov
mov
test
adc
add
clc
daa
clc
jns
aad
sar
cltd
outsb
push
jmp
clc
inc
clc
jns
cli
xchg
gs
mov
clc
mov
fwait
add
add
mov
clc
ret
clc
pop
pop
dec
push
add
jecxz
add
add
aam
push
adc
add
aas
push
cmp
mov
iret
lods
fs
push
add
aaa
movsl
clc
mov
push
xchg
xchg
mov
data16
daa
clc
ret
clc
inc
add
and
add
add
lret
mov
scas
mov
imul
mov
xchg
repnz
add
jl
out
cmp
mov
insl
loopne
sarl
jmp
jo
add
inc
add
bound
add
jle
add
inc
clc
jecxz
outsl
scas
cwtl
cmp
clc
jl
jnp
add
mov
test
xor
dec
test
in
sub
clc
or
clc
jecxz
ljmp
push
add
in
inc
clc
mov
cs
xabort
inc
clc
cmc
inc
add
lea
push
clc
std
loopne
xor
add
rorl
mov
sahf
mov
cmp
add
jne
lret
mov
add
aam
add
out
jecxz
push
cmp
fistpll
clc
mov
sahf
jns
lret
mov
add
sbb
jae
add
and
movsb
clc
xchg
sar
dec
sahf
mov
and
add
sti
popf
push
or
es
xchg
ret
sbb
clc
adc
add
clc
dec
xor
push
jle
clc
dec
out
or
add
jbe
cld
push
push
bt
repnz
lahf
imul
enter
cmp
inc
clc
int3
call
clc
or
cmc
sub
insl
xbegin
js
call
clc
std
sbb
mov
pusha
add
test
mov
adc
clc
cmc
xchg
dec
insl
popa
add
cwtl
jbe
loopne
mov
add
adc
add
add
clc
pusha
add
cmp
clc
xchg
ja
xchg
pop
clc
push
lods
mov
add
clc
mov
add
leave
push
add
jecxz
pop
adc
add
clc
negl
clc
cmp
call
add
mov
inc
clc
adc
add
sub
fs
cmp
stos
arpl
add
clc
jl
mov
clc
cwtl
rorb
mov
xor
add
pusha
add
cmp
in
ljmp
stc
in
jmp
jne
testl
add
jo
add
mov
ds
mov
mov
mov
add
test
out
mov
out
into
mov
mov
jo
add
add
add
push
clc
inc
clc
sub
clc
inc
add
inc
clc
leave
int3
add
add
add
pushf
rcrl
xor
cmpsb
clc
pop
mov
iret
std
sbb
clc
jg
add
mov
dec
mov
clc
xabort
hlt
aam
xbegin
mov
cmp
add
clc
cmp
clc
sbb
out
js
and
add
aaa
mov
rcrb
xor
add
imul
clc
popf
or
xlat
sahf
pop
cmp
clc
insb
lahf
xor
jno
add
clc
add
add
pop
int
popa
add
xchg
cmp
and
add
dec
rolb
sahf
push
clc
loope
nop
mov
sbb
add
sbb
sub
mov
pop
mov
cli
mov
shlb
test
sar
clc
in
mov
fwait
mov
dec
outsb
lahf
or
sbb
stos
push
add
clc
imul
hlt
sub
addr16
sub
push
pop
mov
add
movsb
clc
mov
push
mov
push
dec
dec
sub
inc
clc
cwtl
test
mov
lea
add
mov
in
mov
or
pop
push
adc
ljmp
cmc
mov
add
lock
bound
add
clc
loopne,pt
outsb
aas
xor
add
clc
xor
add
or
loopne
jnp
lea
out
sub
clc
mov
inc
clc
sar
jbe
xchg
fsubrl
int
enter
pop
cmp
clc
adc
add
je
xor
clc
pop
adc
add
add
das
xchg
je
aas
adc
add
add
add
add
mov
inc
add
out
gs
push
add
mov
add
add
clc
push
add
stos
mov
loope
int
clc
lock
add
sti
ffreep
clc
xor
add
enter
add
inc
add
enter
xor
add
and
aaa
ret
xchg
dec
sub
clc
and
add
clc
xor
add
add
adc
add
clc
dec
and
add
jnp
mov
pop
adc
mov
jmp
cmpsl
clc
imul
cmp
xor
add
daa
clc
jmp
cli
sub
cmp
into
jl
clc
or
add
imul
fmuls
sub
adc
add
and
add
icebp
ds
das
stos
xchg
test
jecxz
mov
add
xchg
sub
loopne
jmp
jecxz
sar
add
cmp
lods
push
mov
icebp
sub
sbb
lods
cmc
pop
clc
into
mov
icebp
sti
int3
pop
clc
inc
add
int3
mov
sbb
add
out
dec
cwtl
mov
arpl
add
clc
add
add
add
xor
add
lcall
clc
and
ljmp
add
fsubl
inc
clc
pop
jne
jne
clc
or
rorl
sbb
add
cmp
inc
clc
imul
stos
push
lods
xchg
mov
clc
or
xchg
test
clc
jle
mov
bound
add
clc
sahf
inc
add
cmc
decb
in
fwait
mov
aas
std
mov
fcomi
xor
add
mov
and
add
clc
loopne
dec
adc
cmp
cmpsb
clc
or
clc
sub
icebp
in
aaa
push
add
daa
clc
movsl
clc
icebp
add
pop
and
add
add
insl
scas
add
add
clc
ret
clc
xor
add
out
mov
add
sub
or
add
in
aaa
mov
rol
clc
roll
add
lret
cmp
xchg
int3
call
add
pop
scas
mov
adc
add
sarl
je
pop
arpl
add
sub
int3
xchg
xor
add
mov
xor
add
add
and
add
clc
and
dec
scas
popa
add
lcall
push
add
in
lahf
cld
mov
frstor
faddp
clc
int3
xor
add
xor
add
fwait
popf
jg
pop
clc
adc
add
add
clc
push
clc
push
pushf
sbb
jo
add
mov
clc
pop
mov
add
int3
dec
dec
jb
add
add
clc
fs
loop
xchg
jb
add
xchg
xchg
scas
aam
pop
pop
enter
pop
adc
std
call
clc
xchg
mov
add
repnz
clc
mov
add
add
add
add
sub
inc
clc
add
clc
cmp
xchg
arpl
add
add
pop
sbb
add
pop
clc
add
add
or
test
mov
test
divl
add
inc
add
es
push
clc
sbb
movsl
clc
clc
mov
push
add
inc
clc
movsl
clc
pop
sti
aam
sbb
clc
test
inc
add
push
add
enter
stc
lret
adc
add
clc
mov
sti
insl
xor
add
add
add
mov
jp
clc
dec
lret
xor
mov
icebp
repz
jns
outsb
int3
cmp
mov
fs
aaa
fdivl
add
add
clc
ficomps
pop
jb
add
jb
add
aam
lcall
inc
clc
dec
lret
push
clc
icebp
stos
ficomps
push
mov
add
mov
pop
addr16
inc
add
push
adc
add
cmp
repz
add
jp
clc
shrb
add
jmp
cwtl
jmp
clc
jb
add
scas
pop
pusha
add
push
fistl
add
mov
mov
pop
in
jne
add
dec
sar
push
dec
shl
lock
add
imul
sub
add
clc
faddp
clc
adc
add
enter
sub
push
add
push
add
and
add
test
stos
fs
insl
adc
add
popf
mov
sbb
sbb
inc
add
mov
add
clc
push
hlt
sbb
clc
daa
clc
inc
clc
in
scas
outsl
jns
jmp
add
sbb
cli
add
add
clc
clc
loop
or
clc
adc
add
pop
push
sbb
jl
lods
rcrb
andps
clc
stc
mov
or
cwtl
pop
jne
push
insl
xchg
enter
jle
xlat
pop
repz
push
mov
add
loop
push
and
add
insl
xchg
mov
and
add
call
jo
add
cmp
xchg
ret
clc
test
mov
mov
pop
out
cmp
stos
sub
cli
repz
aas
sub
push
lret
and
add
add
sub
stc
pop
ss
pop
js
or
inc
clc
mov
jns
shll
add
pusha
add
out
loop
pop
sub
clc
sub
sar
pop
popa
add
lods
out
mov
cli
insl
or
and
xor
add
add
fs
out
sub
lock
cli
mov
aas
or
clc
mov
add
add
daa
clc
insb
sar
push
add
cmp
imul
mov
iret
testb
cmp
add
mov
fs
and
rclb
clc
repnz
clc
sbb
aas
mov
clc
rorb
push
ss
clc
sar
xchg
in
js
add
stc
mov
add
ficomps
push
dec
pop
or
push
lcall
inc
clc
or
or
mov
adc
add
jb
add
add
icebp
mov
clc
add
add
jns
xor
add
adc
add
pop
clc
mov
pop
sbb
add
add
ds
xchg
pusha
add
adc
add
bound
add
mov
add
cli
ret
clc
ss
add
pop
cmpsl
clc
mov
cli
sub
or
clc
mov
in
insl
imul
push
add
cmp
sbb
mov
jns
add
jge
outsb
in
ficomps
addr16
jl
cmp
clc
xlat
repnz
into
data16
aas
out
push
jg
inc
clc
jl
repz
add
jno
add
adc
add
clc
mov
lods
outsb
mov
fmuls
fisubrl
push
add
int
stc
dec
cmp
xchg
pop
push
arpl
add
fdivl
add
add
rcll
clc
popa
add
sub
div
out
push
add
mov
xchg
das
outsb
icebp
push
add
jnp
add
cld
mov
add
xbegin
add
loope
sbb
jg
add
in
add
add
mov
adc
add
push
cmpsl
clc
fsubs
add
sub
add
icebp
xchg
sub
clc
xabort
sahf
jo
add
pop
ret
add
xor
add
ret
clc
xor
clc
mov
add
inc
clc
mov
out
fldz
clc
lret
mov
and
add
add
mov
add
sar
clc
xchg
sar
sub
xlat
aaa
fldt
clc
sub
clc
or
clc
cmp
sub
clc
dec
cli
popa
add
push
fwait
scas
bound
add
dec
es
loop
xbegin
and
add
clc
outsb
cmp
clc
lcall
push
shlb
add
mov
pop
push
add
and
add
add
add
negb
popa
add
or
dec
clc
push
push
add
mov
ret
clc
in
add
ja
and
add
clc
bound
add
cli
add
add
push
out
mov
shll
test
push
add
cmp
clc
movsl
clc
cwtl
xchg
xchg
jecxz
jne,pn
insl
sub
dec
jle
clc
push
das
xor
add
mov
dec
bound
add
clc
fldenv
clc
outsl
sti
cmp
jns
icebp
add
jle
repz
clc
xbegin
sub
out
mov
add
add
lret
pusha
add
sub
adc
add
add
mov
clc
xbegin
int3
out
dec
mov
pop
jb
add
clc
aad
add
test
push
add
sarb
clc
hlt
adc
add
dec
and
lcall
xlat
int
pop
hlt
bswap
mov
imul
and
add
lea
gs
dec
push
cli
ja
inc
add
outsb
fildl
pop
cld
ljmp
ljmp
test
repnz
mov
adc
add
pop
push
add
sbb
add
stc
xchg
cld
sub
add
fidivs
add
mov
add
lret
mov
ret
clc
lea
jecxz
js
clc
push
clc
xchg
and
add
mov
mov
push
data16
out
out
mov
clc
scas
sbb
dec
sarl
push
clc
cmp
add
scas
das
sub
add
cmpsl
clc
lods
out
adc
lcall
xchg
out
pop
push
clc
sti
rep
mov
cmp
cs
sub
add
mov
insb
cmpsb
clc
mov
mov
push
add
ret
push
add
cmpsl
clc
cmpsl
clc
push
xor
add
clc
sar
add
pusha
add
ljmp
sbb
mov
sar
mov
pushf
aaa
fnstenv
add
add
faddl
add
mov
repz
add
sub
xchg
sti
icebp
and
rcr
xchg
pop
and
add
lahf
mov
add
add
clc
daa
clc
adc
sbb
clc
push
or
iret
cs
cld
xlat
ret
clc
or
pushf
loope
aad
add
and
aam
push
sahf
or
add
dec
cltd
jae
add
add
lret
adc
add
clc
fwait
test
clc
movsl
clc
cmpsb
clc
loopne
test
mov
sti
adc
clc
cmp
jb
add
lret
scas
cmc
rorb
jo
add
push
test
into
xchg
lock
in
fdivr
push
enter
lea
pop
jnp
sysret
clc
jno
add
pop
lods
and
sub
pop
lret
ret
clc
push
lods
out
not
dec
rcrl
and
add
clc
test
mov
lahf
sbb
clc
mov
clc
hlt
jl
add
mov
lock
loopne
adc
add
clc
loop
and
add
mov
clc
or
sbb
add
jg
int3
fsub
clc
mov
jmp
lcall
mov
bound
add
push
xbegin
cmp
add
xchg
or
mov
inc
add
ret
clc
cs
insl
insb
xchg
sub
pop
pop
icebp
sbb
jge
and
add
add
mov
add
sbb
add
clc
push
push
xchg
xchg
and
add
gs
add
add
adc
add
add
pop
in
pop
dec
pop
add
add
add
add
push
test
int3
fistpll
cmp
out
cmp
push
jb
add
add
and
notb
add
mov
add
leave
xchg
hlt
pop
outsl
fnsave
scas
sti
fisubrs
bound
add
inc
add
fdiv
jb
add
jle
mov
clc
lods
sar
and
enter
mov
dec
mov
sar
sbb
add
es
push
ret
clc
insb
mov
dec
cs
cmp
notl
sahf
cmp
xor
clc
kmovw
clc
popa
add
xchg
sub
mov
add
push
add
inc
clc
test
push
add
cli
cwtl
repz
add
or
clc
icebp
mulb
add
iret
dec
pop
sarb
add
insl
xchg
pop
cmp
xchg
mov
add
addr16
das
aam
adc
add
jnp
aas
stc
push
add
xor
add
into
in
sbb
cmp
jecxz
xchg
cmpsl
clc
int3
cwtl
ljmp
popf
xchg
xlat
xor
add
clc
das
add
add
lahf
ret
cmp
xor
add
js
loop
in
sbb
cmp
clc
bound
add
ret
clc
insb
popf
push
or
add
mov
mov
sti
fnstcw
add
stos
mov
push
aam
mov
mov
or
popf
adc
add
lods
sar
movsl
clc
fsubrl
add
mov
dec
ljmp
clc
shll
mov
sti
bound
add
add
fwait
adc
add
add
add
xor
add
pop
mov
mov
mov
push
push
add
ss
add
clc
rorb
repz
push
push
pop
mov
mov
enter
mov
push
add
mov
pop
shll
add
mov
hlt
lcall
fildll
add
mov
clc
stos
pushf
xor
fcmovnu
sub
enter
add
stc
sbb
rol
clc
cltd
mov
stc
negb
aad
icebp
dec
xabort
clc
jecxz
setns
xchg
sbb
cltd
jbe
cmp
add
mov
cmc
jge
clc
xchg
out
pop
mov
add
add
clc
xchg
and
scas
mov
adc
add
es
pop
push
add
xchg
pop
addr16
ds
roll
or
dec
lret
adc
add
jo
add
clc
jmp
clc
sub
add
add
cmpsl
clc
xor
add
insl
mov
clc
inc
add
adc
add
mov
daa
clc
cmp
clc
or
jecxz
and
cmpsb
clc
mov
std
cmpsb
clc
push
test
outsb
dec
or
pop
clc
xchg
addr16
iret
xor
add
inc
add
jo
add
sbb
xchg
mulps
int
sub
xchg
cmp
add
pop
inc
clc
lret
add
into
lret
clc
xor
add
in
lods
push
add
jno
add
add
clc
outsb
movsl
clc
daa
clc
push
add
dec
lret
gs
mov
add
add
xor
mov
clc
insl
gs
or
add
lea
add
add
sbb
inc
clc
cltd
inc
clc
xchg
cmc
jne
cld
push
sbb
pop
in
mov
inc
clc
and
mov
mov
mov
clc
xor
add
clc
es
sar
ret
clc
jp
clc
loope
test
jge
fwait
out
ret
test
push
pop
mov
add
adc
add
jae
add
add
clc
dec
add
xchg
daa
clc
inc
clc
enter
fsubr
aad
lock
clc
repnz
mov
add
jle
cmp
xchg
xabort
fcmovnu
scas
dec
fiaddl
lcall
clc
mov
add
or
add
xchg
adc
add
hlt
data16
imul
cmp
clc
ret
clc
loope
add
add
add
clc
and
add
outsl
push
scas
lods
or
xor
add
pop
or
cmpsl
clc
mov
or
adc
add
add
clc
int3
push
add
rclb
clc
inc
clc
sti
mov
sbb
push
jno
add
daa
clc
pop
mov
clc
xlat
xchg
out
mov
inc
clc
cs
xor
add
cmp
clc
sub
mov
and
add
add
mov
insl
xor
add
add
pop
xchg
jb
add
inc
clc
outsb
mov
outsb
stos
sbb
data16
mov
xabort
clc
addr16
jle
dec
aam
clc
mov
aad
int3
int3
inc
clc
jnp
xchg
fdivs
in
ljmp
xor
add
clc
mov
add
mov
shrb
test
add
mov
and
add
add
push
int3
sti
nop
stos
xor
clc
ljmp
bound
add
dec
add
js
add
stos
pop
mov
add
add
add
idivl
add
add
cmp
loopne
add
add
loop
aas
test
adc
add
add
sub
addr16
pop
sbb
fdivrs
xchg
cmp
clc
adc
add
or
and
add
add
iret
shll
int
xchg
mov
es
cmp
clc
cmp
hlt
mov
add
add
out
nop
hlt
scas
inc
add
in
shl
jns
fsub
clc
sbb
xchg
gs
sub
loopne
dec
sub
js
mov
add
xor
xor
add
pop
push
dec
push
add
out
sbb
add
xchg
mov
arpl
add
xlat
push
sar
clc
cltd
pop
sti
xchg
jge
clc
sarb
mov
add
jne
and
imull
fimull
add
and
imul
jbe
clc
add
add
iret
jne
add
add
in
lret
aam
clc
mov
clc
out
pop
loope
dec
roll
add
push
loop
cltd
ljmp
xchg
cmp
mov
mov
mov
clc
push
add
mov
shll
add
xchg
and
add
inc
add
loopne
outsl
mov
clc
es
inc
add
mov
pushf
pushf
out
loop
sbb
clc
fwait
sar
push
add
dec
aam
xchg
clc
ds
and
add
and
add
clc
mov
add
push
pusha
add
xchg
lods
cmp
clc
faddl
add
loop
push
stc
fistpl
xor
aad
jae
add
clc
cmp
loopne
pop
add
add
add
movsl
clc
push
push
add
mov
add
mov
sbb
or
clc
fs
inc
clc
flds
add
push
loopne
inc
clc
stc
mov
xchg
xor
clc
push
fcomps
test
sbb
loopne
or
cmp
and
add
aam
mov
adc
add
movsb
clc
lods
cmp
clc
std
cmp
clc
inc
add
cmp
call
add
sub
or
out
push
divl
jmp
add
xchg
fs
lock
cmp
popf
mov
clc
in
cmp
add
paddusw
stos
sbb
in
inc
clc
push
add
or
and
add
add
mov
mov
jae
add
bnd
fstpt
add
add
add
lea
add
ret
js
push
clc
push
add
jns
xchg
xchg
xchg
sar
clc
push
add
in
loope
mov
add
add
xchg
dec
jle
test
cwtl
sti
mov
mov
xchg
xchg
sbb
add
add
add
sar
xor
add
jmp
stc
in
sbb
add
xbegin
clc
cmp
clc
add
add
push
add
push
add
mov
lret
enter
add
enter
mov
add
jge
cmc
out
add
add
pop
in
das
xchg
push
fidivrs
clc
cmp
add
lret
imul
add
add
clc
test
ds
jbe
aam
dec
jns
clc
inc
add
cltd
clc
inc
add
push
insl
cmp
jnp
lods
dec
mov
fisubl
add
mov
add
or
cmp
clc
push
add
sub
stc
adc
add
clc
push
add
adc
add
sub
shlb
add
icebp
popf
sbb
dec
das
es
inc
add
and
add
std
inc
clc
xbegin
add
call
clc
lods
stc
xabort
clc
loope
std
push
push
add
mov
xbegin
mov
cmc
mov
loop
sar
ffreep
clc
xchg
imul
cli
test
clc
dec
push
and
add
add
xchg
jbe
add
push
pop
test
push
or
add
cmp
into
dec
mov
inc
clc
fcoms
add
imul
clc
inc
clc
je
jnp
or
and
in
or
mov
xor
add
in
sub
mov
clc
fstps
add
clc
arpl
add
clc
aas
adc
add
sti
adc
add
add
clc
cmpsl
clc
fs
mov
add
jp
xchg
jl
imul
cmc
test
add
mov
addr16
xchg
mov
jae
add
add
sbb
sub
je
sub
add
out
xor
add
clc
or
clc
xchg
dec
sub
and
add
jle
add
dec
fdivl
insb
adc
add
clc
enter
lcall
xchg
arpl
add
dec
cmc
sub
clc
clc
mov
clc
inc
add
out
xor
clc
and
add
imul
add
clc
mov
jmp
es
mov
dec
add
sbb
clc
aaa
cs
fdivs
outsb
or
add
fcomp
jae
add
xor
sub
int3
insb
xchg
outsl
mov
cmp
jae
add
jb
add
clc
jg
add
or
dec
push
add
pop
push
add
and
out
push
add
mov
jmp
clc
out
mov
jge
clc
inc
clc
mov
xor
add
sbb
or
push
sub
clc
in
adc
add
add
xchg
lods
mov
int3
and
add
dec
loop
js
clc
or
js
clc
int3
pop
das
push
add
pop
clc
push
add
out
sar
decb
sub
clc
cmp
out
jae
add
add
pushf
and
add
scas
outsl
jecxz
mov
inc
add
test
cmp
add
push
add
and
add
pop
clc
movsb
clc
int
cmp
addr16
xchg
jo
add
std
xchg
pop
push
xchg
repnz
pusha
add
push
cmp
cmp
add
sub
dec
jle
pop
clc
fstpt
pop
icebp
fwait
setg
clc
outsb
cltd
pop
mov
add
dec
icebp
pusha
add
push
clc
gs
pop
test
cmp
clc
nop
adc
mov
faddl
or
add
add
or
cmp
add
push
lods
push
add
cltd
into
lahf
cmp
add
pop
in
cmp
add
cmp
data16
pop
nop
xchg
pusha
add
or
movsl
clc
leave
cmp
sti
mov
xchg
inc
clc
mov
cmp
add
aad
cmp
add
jge
add
lock
add
clc
ret
add
jnp
push
add
mov
sbb
clc
adc
add
add
adc
add
dec
popf
mov
clc
mov
addr16
cmpsl
clc
cmp
inc
add
cmp
clc
jb
add
clc
add
or
repz
jmp
clc
jns
add
cmp
inc
add
and
add
add
add
add
pop
xor
add
jmp
mov
clc
adc
add
clc
xlat
adc
add
clc
addr16
inc
add
dec
ja
add
scas
mov
add
jmp
xbegin
mov
sub
stc
loope
push
add
xchg
gs
sbb
add
imul
add
cmp
jne
clc
adc
add
xor
add
add
add
fwait
dec
dec
pop
ret
clc
jae
add
mov
jne
clc
sti
pop
clc
xbegin
add
cmp
add
clc
lods
ds
mov
clc
jecxz
jmp
data16
sbb
add
pop
sar
ret
ja
clc
dec
fildll
clc
mov
fists
lods
xchg
lods
int
mov
in
ja
loope
dec
push
sub
cmp
xchg
inc
clc
xchg
arpl
add
mov
add
push
add
xchg
add
into
mov
xor
add
daa
clc
jae
add
add
push
clc
not
adc
add
clc
ja
xabort
push
clc
adc
add
cmc
jae
add
mov
insb
mov
das
js
fisttps
mov
jo
add
add
add
xchg
iret
xchg
gs
sbb
in
jle
or
pop
fmull
dec
and
add
pop
loopne
aaa
mov
sbb
clc
loopne
or
clc
pop
cmp
xlat
lods
aaa
call
sbb
clc
test
xchg
negl
add
mov
clc
xchg
jo
add
pop
js
add
or
add
addr16
mov
push
jle
inc
add
aas
ljmp
push
pop
sbb
mov
clc
cmp
clc
ljmp
clc
pop
sub
dec
loop
add
call
into
jmp
in
mov
inc
clc
call
fistpll
cmp
add
filds
add
mov
clc
inc
clc
je
out
xor
clc
cmp
clc
cmp
sub
adc
add
mov
add
sar
pop
mov
jmp
mov
mov
add
cmp
mov
mov
add
jo
add
je
clc
sub
dec
testl
mov
xchg
mov
nop
fsubrl
pop
add
add
fmulp
ljmp
add
xor
add
add
fdivl
repz
dec
cmp
or
clc
mov
add
ja
sbb
clc
push
repnz
add
add
add
push
mov
jg
mov
clc
jnp
dec
dec
xor
add
add
int3
push
shr
inc
clc
into
xchg
in
popf
clc
pop
xchg
push
add
mov
aaa
sub
dec
insb
jl
fdivl
mov
xchg
faddl
lods
pop
clc
dec
leave
hlt
pop
sub
add
inc
clc
fst
jae
add
add
add
jmp
mov
pop
push
add
cmp
in
arpl
add
in
pop
push
add
sar
and
add
clc
or
test
stc
and
cmp
mov
sub
mov
clc
int
cmc
int3
push
add
jb
add
jmp
pop
mov
and
add
jecxz
test
es
test
clc
stc
pinsrw
clc
ss
jb
add
pop
inc
add
pushf
aaa
ja
clc
lret
sub
cltd
div
movsb
clc
mov
clc
dec
into
mov
clc
xor
add
add
bound
add
clc
mov
test
cmpsb
clc
cmp
cmp
scas
rcll
add
pop
icebp
pop
sar
dec
pushf
add
add
and
clc
cmp
jl
out
xabort
lods
addr16
cmp
clc
sbb
clc
add
add
fs
pusha
add
jge
mov
pop
xchg
lcall
shrb
xchg
fstl
add
sbb
sti
imul
cmp
rcr
cmpsb
clc
repnz
clc
popf
out
iret
push
add
pop
xor
add
rcll
add
jle
stc
cmp
add
mov
add
add
jnp
add
cmc
jnp
fildl
pop
fldcw
shrl
and
xabort
nop
inc
add
dec
cmpsl
clc
into
fiadds
inc
add
bound
add
shll
adc
add
push
add
xchg
clc
push
add
fdivl
sub
and
add
push
stos
addr16
adc
add
clc
loope
imull
add
jnp
cmp
adc
sub
int3
nop
repnz
ljmp
not
sub
clc
mov
adc
loopne
xor
add
cmp
adc
add
into
xchg
dec
popa
add
mov
clc
or
add
mov
insb
xor
add
std
adc
add
lea
add
clc
fcomi
push
aaa
jmp
sub
xor
add
lock
xchg
divb
dec
lods
iret
inc
add
or
lahf
mov
clc
ret
add
dec
fs
aad
aad
cwtl
jae
add
clc
cld
pop
cmp
add
push
add
bound
add
clc
aad
clc
out
jnp
clc
repz
mov
and
add
or
xchg
out
jnp
lret
mov
inc
clc
leave
sar
fisubrl
movsl
clc
dec
movsb
clc
push
add
add
add
xchg
inc
clc
pop
pop
adc
mov
add
popa
add
jl
clc
call
bound
add
add
and
add
mov
mov
add
clc
dec
inc
add
or
add
add
add
jo
add
clc
push
sbb
cwtl
add
add
data16
mov
ss
xchg
mov
fldt
push
xor
add
push
gs
enter
push
inc
clc
arpl
add
and
add
jg
clc
jbe
clc
pusha
add
or
add
add
scas
lret
cltd
ja
clc
cmp
clc
aam
cmp
js
add
cmp
stos
lea
in
jecxz
call
cmp
push
add
maskmovq
divl
sub
add
jnp
lret
adc
push
pop
adc
add
bound
add
clc
jl
add
xchg
pop
test
inc
clc
data16
add
add
mov
clc
xchg
add
sub
mov
pop
rorl
gs
or
data16
xchg
and
add
rorl
in
test
add
or
cmp
popa
add
xor
add
cmp
add
scas
es
lret
clc
mov
js
dec
iret
jecxz
outsl
xchg
xbegin
add
clc
insl
sbb
mov
mov
clc
daa
clc
aaa
fistps
test
mov
or
in
inc
add
push
lea
sarl
mul
clc
pop
mov
clc
pop
sbb
add
sarl
add
xchg
out
gs
pop
add
cmc
in
arpl
add
add
clc
fsubs
add
insl
xabort
clc
push
add
add
add
clc
mov
push
mov
inc
clc
and
add
add
jnp
clc
mov
clc
add
add
add
sbb
test
mov
fistps
clc
stos
sar
mov
clc
push
cmp
jecxz
stc
out
out
mov
mov
clc
fldt
add
je
clc
jae
add
jae
add
add
in
mov
nop
cmp
clc
bound
add
sbb
stos
pushl
or
clc
mov
cmp
daa
clc
add
add
repnz
stos
dec
pop
mov
call
sbb
es
mov
dec
cmp
lock
add
mov
jg
fstpt
dec
icebp
loop
in
icebp
shll
leave
out
ds
pushf
adc
iret
xchg
lret
add
lods
mov
add
clc
sbb
frstor
fld
clc
clc
jae
add
sbb
push
ss
pop
pop
mov
jg
clc
rolb
push
add
cmp
add
fldl
clc
ljmp
mov
fsub
clc
in
cmpsl
clc
xchg
add
add
clc
data16
outsb
dec
inc
clc
in
lcall
mov
pop
pop
clc
mov
add
xor
add
add
pop
or
jne
sbb
xchg
mov
or
push
dec
movsb
clc
fisttpl
add
bound
add
clc
push
add
mov
ljmp
or
out
and
add
add
clc
pop
xor
add
add
push
sub
mov
roll
add
dec
int
js
mov
mov
add
push
cmp
clc
rcrb
aad
sub
clc
and
add
push
aaa
push
lret
pmaxsw
clc
stos
sub
shll
clc
bound
add
lcall
leave
inc
clc
jne
iret
xor
pop
sar
mov
shrb
out
sub
jl
clc
sahf
jo
add
xor
add
clc
jg
arpl
add
rol
clc
jns
fsubrp
jecxz
sub
ficoml
add
mov
clc
popa
add
shl
pop
addr16
mov
jbe
adc
and
add
gs
test
addr16
pop
pushf
jl
add
sub
inc
clc
loopne
mov
pop
sub
clc
add
add
add
adc
add
add
add
cmpsl
clc
nop
pop
incl
clc
bound
add
add
and
inc
add
insb
inc
clc
clc
decb
cmp
clc
daa
clc
into
adc
aam
add
add
fsubr
pusha
add
mov
outsb
loopne
xchg
inc
clc
dec
or
cmp
pop
fldenv
std
dec
inc
clc
mov
mov
enter
clc
and
add
add
clc
pop
inc
add
mov
clc
push
add
sub
aam
add
out
mov
cmp
movsb
clc
xor
add
add
mov
ds
int3
push
push
push
xlat
inc
clc
adc
add
inc
clc
sbb
clc
and
add
add
bound
add
adc
add
add
lcall
add
and
sbb
call
mov
cmp
clc
outsl
cmp
addr16
shrb
add
add
add
ljmp
cmp
lods
cmp
lods
cld
cmp
clc
ret
clc
cmp
push
jns
clc
cmp
clc
loop
out
jl
sar
clc
test
sbb
pop
push
add
add
clc
sub
repz
fildl
sbb
adc
add
clc
int3
imul
mov
add
clc
cs
cli
jmp
add
test
leave
lret
shll
add
aam
pop
sar
clc
xor
add
cld
sahf
jmp
add
into
data16
and
add
mov
clc
jl
mov
and
add
add
add
add
clc
add
sbb
mov
add
mov
and
add
cld
add
add
add
bound
add
pop
lock
aas
test
fisttpll
inc
add
mov
dec
lcall
inc
clc
lahf
push
lret
add
add
inc
clc
int3
test
push
xor
clc
out
daa
clc
inc
add
mull
add
mov
in
push
clc
sbb
clc
lods
mov
mov
mov
imul
xchg
aas
or
jns
or
loope
test
clc
xlat
jecxz
in
inc
clc
movsl
clc
out
out
mov
sar
xor
add
cmp
clc
pushf
sbb
xbegin
pop
loop
stos
jns
add
jle
clc
jno
add
add
pushf
loope
and
add
add
add
cmp
add
jecxz
cmp
clc
movsl
clc
xor
add
add
std
xabort
add
jp
add
dec
cmpsb
clc
sahf
push
add
repnz
stc
out
add
add
xchg
lret
icebp
lret
mov
xor
add
aad
add
jmp
add
xchg
mov
pop
lret
dec
cld
bound
add
push
cld
daa
clc
movsb
clc
inc
clc
cli
jnp
add
add
cmc
std
pop
adc
add
add
clc
mov
int3
out
mov
clc
xor
cmp
or
clc
data16
and
add
aaa
jle
add
scas
insl
out
push
loopne
push
add
lcall
fmulp
adc
add
insb
cwtl
mov
mov
add
or
rolb
clc
aaa
mov
clc
pushf
dec
jo
add
vrsqrtps
add
clc
xchg
cmp
clc
insl
mov
clc
push
push
clc
pop
clc
inc
add
insl
aaa
mov
add
mov
clc
cltd
gs
add
add
fmull
cmp
add
insl
into
loop
sbb
call
jno
add
js
clc
scas
psrlw
loopne
jge
clc
push
clc
or
jno
add
sub
out
inc
clc
push
add
inc
add
mov
add
cmpsl
clc
push
aaa
fs
xor
add
add
dec
js
clc
movsb
clc
xchg
lods
sbb
clc
movsb
clc
jae
add
push
add
rol
clc
sub
add
clc
mov
xchg
mov
clc
mov
lahf
movsb
clc
stos
cs
sub
das
xor
add
addr16
aaa
add
dec
adc
clc
and
add
sar
xchg
ret
clc
ror
jp
movsb
clc
xlat
lods
ret
or
xor
jge
add
es
aaa
sar
lret
imull
push
push
add
mov
clc
mov
iret
xchg
push
stos
mov
mov
out
sbb
movsl
clc
lcall
fidivl
jb
add
add
pop
mov
add
mov
add
lret
clc
pop
mov
add
daa
clc
or
cmp
xlat
enter
pop
push
add
sbb
icebp
or
in
xor
add
jo
add
or
sub
scas
or
daa
clc
nop
insb
fisttps
jecxz
ss
into
jns
fdivrl
repnz
add
nop
call
clc
in
push
add
arpl
add
mov
clc
das
dec
xor
add
sub
add
push
mov
pop
cmp
clc
repz
pop
clc
test
cmc
scas
sbb
inc
clc
ss
clc
aaa
lret
lret
add
add
clc
int
inc
add
dec
scas
xchg
mov
iret
push
xchg
cmp
sahf
jecxz
fmul
jb
add
clc
sahf
add
clc
pop
inc
clc
dec
fstps
clc
sbb
test
cmp
clc
add
add
arpl
add
or
into
ljmp
or
cmp
add
xor
add
sbb
pop
daa
clc
aaa
pusha
add
into
sbb
clc
and
add
ficomps
inc
add
add
not
cs
or
stos
clc
cmp
jnp
clc
test
clc
into
adc
add
cmp
xchg
cmp
imulb
pop
sti
dec
mov
pusha
add
sahf
fnstsw
clc
test
into
push
jecxz
mov
fcomps
dec
mov
cmpsb
clc
mov
arpl
add
mov
mov
and
add
dec
adc
cmp
add
jl
clc
add
add
mov
mov
sub
clc
pop
stos
lods
xor
add
xor
add
jae
add
movsb
clc
xabort
in
mov
add
or
add
bound
add
clc
adc
mov
cmp
add
inc
add
in
loope
pop
mov
clc
push
pop
clc
push
add
clc
icebp
rolb
add
repz
clc
inc
add
push
dec
out
pop
clc
push
add
add
add
add
add
add
mov
clc
jbe
clc
sub
add
adc
shrb
notb
add
add
addr16
mov
add
xchg
sbb
jne
mov
or
loope
cs
jg
clc
and
add
or
sub
clc
aad
adc
add
add
cli
mov
stos
mulb
add
xor
add
clc
sbb
repz
popf
or
xchg
sub
sarl
push
add
mov
pop
out
push
fwait
popa
add
add
add
add
add
fs
lock
in
push
cli
mov
lock
test
push
into
xchg
insl
inc
clc
add
add
push
adc
clc
adc
add
add
clc
clc
out
loopne
adc
add
clc
or
jge
ret
clc
fnstenv
cmp
cli
xchg
and
add
sub
loope
pop
clc
das
rcrl
inc
add
sub
clc
gs
bound
add
aaa
stc
lods
cmpsl
clc
icebp
jmp
or
clc
std
jo
add
xor
add
aas
push
or
pop
or
clc
push
clc
shrb
and
pop
nop
cwtl
push
sub
addr16
ret
clc
sar
clc
stos
aam
es
test
mov
mov
lock
pop
xchg
int3
cmp
clc
cmp
js
int3
mov
clc
insb
jecxz
movsb
clc
out
fwait
sub
jle
cmp
add
stc
sbb
jb
add
push
jbe
pop
pop
mov
jnp
clc
xchg
fwait
idivb
test
push
insl
mov
add
fbld
add
xchg
sbb
sti
fisubrs
lret
add
ljmp
push
and
loope
jge
pop
jne
leave
inc
clc
iret
stc
sbb
add
sub
cmp
push
imul
dec
lcall
jecxz
adc
add
bound
add
cltd
scas
outsb
push
add
aam
movsl
clc
mov
add
add
daa
clc
mov
add
add
scas
inc
add
dec
decl
int3
mov
pusha
add
push
add
in
call
insb
imul
jbe
pop
lods
test
sahf
sbb
jno
add
gs
nop
in
xchg
or
in
cmp
dec
insl
push
clc
or
fsubrl
dec
jno
add
add
fucomi
adc
icebp
xchg
fcomip
dec
iret
stc
inc
clc
dec
dec
cmp
xchg
es
cmp
cmc
jge
cmp
je
add
add
clc
dec
fiadds
add
sub
sub
pop
or
mov
add
xchg
mov
fdivrs
mov
out
xchg
and
add
clc
in
fdivl
inc
add
mov
fs
jns
aad
std
out
or
add
push
rclb
cmp
add
mov
gs
push
cmp
add
adc
push
push
push
out
adc
add
add
loop
sahf
sbb
cmp
clc
imul
fs
cld
sub
out
dec
push
mov
xor
add
xor
add
in
cwtl
hlt
push
add
add
scas
je
loopne
aam
xabort
mov
gs
xor
add
mov
add
clc
in
neg
mov
data16
hlt
fwait
ds
test
mov
sub
push
add
popf
pop
xchg
std
in
out
or
div
mov
add
inc
add
adc
add
clc
pop
adc
add
add
imul
add
add
and
add
clc
jg
addr16
mov
dec
mov
add
jge
clc
in
addr16
outsb
push
add
mov
fisubl
xor
or
and
add
sbb
clc
dec
push
add
sbb
mov
mov
xchg
test
pop
add
add
push
clc
cmp
fsubrl
add
rcrb
clc
xchg
sarb
pop
xor
push
das
jl
and
add
clc
ret
addr16
lock
push
add
aas
cwtl
hlt
js
loop
mov
jge
sub
xchg
cmp
cmpsb
clc
imul
and
cld
jg
clc
sbb
cltd
dec
enter
icebp
data16
add
dec
mov
clc
xchg
jnp
clc
or
clc
sub
push
mov
pop
push
push
xchg
ja
xchg
test
hlt
sub
add
das
into
popf
push
adc
pop
das
jecxz
outsl
dec
repz
popf
popf
xor
dec
jp
call
cmp
add
add
add
push
add
scas
or
cmp
add
push
clc
pusha
add
scas
ret
clc
sar
inc
clc
xchg
sbb
add
push
outsl
inc
add
mov
clc
add
add
lods
sbb
push
add
movsl
clc
nop
jbe
pushf
and
mov
or
cmp
pop
daa
clc
cmpsb
clc
xchg
pop
clc
out
push
adc
add
mov
jle
add
sbb
mov
and
add
add
push
iret
insb
call
clc
cmp
movsl
clc
sti
cli
fisubs
mov
add
and
add
clc
into
cs
and
add
pop
sti
add
imul
notb
add
clc
rol
clc
add
add
mov
clc
pop
int
add
outsb
dec
pop
xor
add
loop
jne
clc
or
and
add
sub
and
add
lret
in
pop
mov
xchg
test
add
add
xchg
mov
insb
push
add
sub
in
inc
clc
ljmp
bound
add
pushf
out
push
add
sarb
cmp
arpl
add
clc
iret
inc
clc
mov
clc
jge
add
lods
cmpsl
clc
jne
in
movsb
clc
dec
scas
xchg
dec
xchg
hlt
fmul
push
leave
dec
or
add
mov
clc
ljmp
add
add
pop
rep
dec
add
add
mov
clc
push
add
xor
add
clc
jg
jge
dec
out
out
testb
popa
add
fwait
mov
push
sbb
stos
mov
dec
ja
out
and
test
mulb
clc
into
popf
push
pop
in
into
and
add
push
pop
stos
aam
clc
data16
or
adc
add
mov
lahf
and
add
clc
out
sub
lret
sar
add
in
xchg
mov
or
scas
mov
lret
and
jbe
cmp
clc
sbb
cmp
imul
add
mov
fwait
dec
ljmp
leave
xor
xchg
and
add
test
cmp
xchg
nop
cmpsl
clc
out
int3
xchg
mov
jns
scas
test
rsm
xchg
clc
pop
xabort
clc
loope
nop
add
rcll
roll
clc
stc
in
jg
add
arpl
add
clc
jbe
clc
sub
shl
lret
push
xchg
mov
test
sahf
cmp
cs
add
dec
inc
add
test
cld
inc
add
adc
add
sbb
xor
or
cmp
adc
add
ss
sbb
dec
ja
or
add
loope
dec
js
or
int3
mov
xor
add
lods
into
mov
sar
inc
clc
adc
add
clc
testb
clc
mov
clc
cmp
add
clc
add
add
loop
pop
das
scas
iret
movsb
clc
and
add
jmp
add
mov
inc
clc
ds
clc
adc
add
add
frstor
add
loope
and
add
push
insb
xchg
xchg
xchg
xchg
xabort
inc
add
xor
add
sar
je
clc
cmp
xchg
pop
xbegin
clc
push
add
sub
xchg
inc
clc
clc
loop
bound
add
loope
and
clc
cmp
dec
pop
inc
clc
cmp
add
scas
and
sub
xchg
fadd
clc
fildl
add
gs
cmp
lret
stos
cmpsb
clc
lret
sub
repnz
cmp
add
outsb
cmp
add
add
in
paddusb
push
add
mov
pusha
add
jbe
add
xor
add
sub
sbb
dec
aad
mov
int3
adc
add
popf
sbb
clc
xchg
add
inc
clc
xchg
ljmp
clc
push
clc
or
rcrb
cmp
add
add
lea
inc
add
sahf
push
add
mov
xchg
mov
cmc
xbegin
push
clc
rcrb
add
sbb
sbb
add
dec
mov
cmp
add
add
in
test
mov
sahf
fs
ja
xor
add
clc
or
add
mov
clc
mov
in
pop
adc
add
mov
inc
clc
xchg
mov
clc
jecxz
fdivrs
add
stc
jmp
addr16
jns
fstl
add
clc
test
mov
in
xor
add
add
dec
jp
clc
push
clc
jl
pop
fstpl
cmpsb
clc
sub
clc
insl
cmpsl
clc
lods
or
xchg
ret
clc
insl
dec
lods
insl
scas
sub
int3
xlat
outsb
iret
sahf
fistps
movsl
clc
sub
clc
cmp
add
add
ret
clc
lahf
rorl
and
add
jp,pn
inc
clc
inc
add
xchg
mov
add
sub
inc
add
mov
cmp
clc
nop
inc
add
mov
push
add
popf
lods
test
shr
dec
pop
mov
push
xabort
add
es
mov
clc
or
pop
sbb
popa
add
push
lea
cli
mov
clc
ds
hlt
sub
add
or
clc
mov
mov
and
add
adc
add
clc
sti
cmp
adc
add
cmpsl
clc
mov
push
add
mov
add
lahf
clc
ret
clc
mov
int
sarb
lea
push
ret
clc
lcall
jbe
mov
mov
push
add
fildl
pushf
adc
add
clc
addr16
arpl
add
outsl
xchg
mov
repz
sar
enter
jns
fistl
add
dec
push
mov
dec
clc
jmp
out
or
add
or
loop
or
add
stc
cmp
sar
clc
jp
xchg
into
xor
add
clc
inc
add
lret
data16
ret
fucomi
sarl
repnz
imulb
mov
cmc
mov
push
add
jle
fcmovbe
pop
fldln2
inc
clc
xbegin
mov
clc
add
add
neg
repz
clc
add
js
ds
and
scas
xchg
dec
es
lret
sub
mov
fs
push
clc
mov
insb
sbb
arpl
add
jl
or
add
mov
clc
mov
jp
fidivl
add
clc
dec
lret
or
add
push
add
mov
clc
lret
xor
clc
mov
jge
add
out
jbe
popa
add
stc
lock
xchg
testl
add
lea
clc
outsb
sar
pop
cmp
pop
lahf
dec
gs
mov
pop
insb
pop
push
clc
js
bound
add
cmp
clc
test
addr16
mov
cmp
cmp
lret
stos
xor
incb
jne
add
mov
pop
std
mov
add
fcoms
add
jge
or
add
sub
push
add
stos
pop
xor
mov
popf
xchg
and
add
jbe
outsl
cmc
sarl
clc
jnp
push
pop
push
add
jp
cmp
add
test
sahf
jmp
add
test
mov
ds
data16
das
inc
clc
jno
add
clc
mov
and
add
cli
insl
xor
add
fs
or
lret
stos
mov
clc
out
pop
es
pop
pop
jns
stos
xchg
fs
push
addr16
and
add
add
sbb
into
push
sub
inc
add
enter
movsl
clc
nop
mov
clc
mov
loope
data16
dec
fldt
mov
rcr
cmp
fwait
dec
outsb
mov
jo
add
int
add
rolb
clc
xchg
sub
ss
jns
rcll
clc
scas
xchg
ljmp
jecxz
fcoms
shl
icebp
jmp
dec
mov
sar
rclb
add
add
add
iret
aam
popf
ret
clc
js
mov
add
out
test
clc
inc
clc
leave
sub
add
jge,pn
add
xchg
add
add
add
add
xor
add
clc
mov
push
test
loop
jae
add
gs
sbb
mov
std
sbb
bound
add
loop
mov
int
add
add
sar
mov
inc
clc
fistpl
stos
shl
cld
insb
stos
mov
clc
hlt
mov
add
push
into
inc
add
jge
clc
adc
add
push
nop
mov
xbegin
add
jbe
inc
add
pop
lods
rcr
jle
push
jmp
int3
je
pop
add
add
clc
punpckhdq
add
mov
cld
sub
scas
in
or
mov
pushf
adc
add
clc
mov
scas
or
add
cwtl
lods
dec
inc
clc
in
sub
add
add
inc
add
clc
xor
add
add
arpl
add
loop
sbb
clc
mov
push
int
xchg
xbegin
cmp
clc
loope
jno
add
and
lock
push
push
push
mov
enter
add
push
add
push
clc
mov
or
clc
pop
dec
test
cmp
cmp
in
and
xor
add
push
add
jle
popf
mov
add
cli
mov
mov
add
popa
add
sar
push
xchg
fs
inc
clc
pop
out
adc
add
fwait
cmp
pusha
add
test
pop
pop
lock
lods
cwtl
test
clc
jne
sub
cmp
cmp
mov
add
fsub
clc
or
xor
sti
fistpl
add
call
add
out
rorl
aaa
sbb
clc
inc
add
and
add
add
inc
clc
xchg
sbb
xchg
xor
add
pop
dec
or
xchg
call
das
int3
out
fldt
clc
pop
push
clc
cmp
xlat
xor
add
add
xchg
dec
jnp
test
inc
clc
xor
add
jmp
inc
add
fstpl
test
cmp
lods
testb
clc
adc
add
insb
inc
clc
fsubl
idivb
push
add
jns
push
insl
cmp
add
cmp
enter
nop
xor
add
or
add
add
rclb
add
jae
add
add
es
in
xbegin
clc
data16
popa
add
imul
clc
imul
clc
out
and
add
and
in
sahf
cmp
xchg
fsubrl
clc
mov
add
xchg
xor
add
add
inc
clc
sub
add
and
add
test
mov
add
add
sub
data16
mov
sub
xchg
imul
mov
aad
cmp
clc
xlat
or
clc
bound
add
add
fwait
inc
clc
xchg
cmp
mov
gs
cltd
gs
mov
add
mov
add
and
add
cmp
int3
loop
insb
lret
fadds
clc
or
clc
repz
into
jmp
jb
add
add
cmpsl
clc
dec
sti
push
clc
js
scas
push
add
jae
add
adc
add
call
add
add
clc
and
add
mov
mov
data16
lea
add
add
sar
mov
dec
addr16
pop
cmc
adc
xchg
xlat
push
add
cli
dec
dec
leave
cmp
clc
xchg
js
mov
mov
pushl
add
adc
clc
adc
add
push
cmp
add
pusha
add
clc
mov
fs
or
pop
jmp
pop
pusha
add
rol
clc
adc
add
int3
add
add
clc
ljmp
add
sub
mov
cmp
xchg
mov
jno
add
inc
clc
jno
add
jo
add
clc
ss
add
adc
xchg
lods
movsb
clc
cli
inc
add
iret
lret
xlat
leave
das
jbe
add
push
es
lcall
clc
xchg
fsts
clc
sar
add
add
dec
test
jmp
clc
rolb
sbb
shl
add
add
or
add
popf
mov
or
clc
fucomip
mov
inc
add
pop
clc
mov
into
ret
clc
mov
xlat
clc
in
xor
add
add
inc
add
jl
mov
pop
mov
push
add
mov
shll
mov
cmpsl
clc
xor
add
jecxz
arpl
add
clc
jae
add
dec
adc
add
clc
jmp
sbb
add
sahf
or
clc
outsl
sahf
sub
and
sar
xchg
xor
add
cmp
ds
push
add
int3
jl
add
xor
add
es
data16
inc
clc
mov
clc
mov
lea
xchg
out
xchg
inc
clc
add
aas
mov
clc
jae
add
out
xchg
sub
add
fsubl
in
pop
js
mov
mov
imul
ljmp
clc
js
and
add
pusha
add
push
add
add
add
clc
sbb
push
add
clc
mov
icebp
and
add
mov
add
test
fwait
clc
scas
push
shl
clc
cld
cmp
clc
dec
ret
clc
cs
inc
add
and
add
add
pop
lea
add
test
add
mov
aas
xor
add
jb
add
paddb
clc
repz
out
ja
sub
clc
pop
clc
xlat
and
sarl
sub
clc
pop
out
scas
cli
or
clc
loopne
dec
pop
mov
clc
sbb
jg
or
sti
data16
bound
add
jns
roll
clc
sub
add
add
sub
add
add
add
jecxz
ljmp
add
lock
in
pop
clc
scas
xchg
daa
clc
fsubr
jle
sbb
aam
dec
push
add
jmp
xor
add
or
es
cmc
lea
clc
out
pop
clc
fwait
mov
clc
addr16
aad
dec
add
add
in
sbb
add
cli
sahf
cmp
clc
out
mov
clc
stos
xchg
dec
nop
ja
clc
mov
mov
icebp
int3
pushf
inc
add
bound
add
clc
cmp
add
and
add
add
popf
data16
call
add
mov
test
sbb
clc
sti
inc
add
insl
cmp
jl
js
clc
adc
add
clc
or
pop
clc
jecxz
push
push
jns
mov
push
mov
add
add
add
outsl
clc
pusha
add
das
incl
dec
loop
push
and
sbb
cmp
clc
dec
pop
clc
lods
add
scas
inc
add
repnz
fbstp
add
sub
dec
dec
sbb
xor
clc
cmp
dec
xor
add
clc
xor
add
or
cmp
popa
add
push
test
in
fidivs
add
fdivs
lret
adc
iret
inc
add
fadds
stc
es
into
fcmovnb
clc
xlat
and
add
inc
clc
lods
xchg
gs
testl
jl
in
inc
clc
push
add
add
mov
loopne
pop
xor
clc
enter
adc
add
mov
mov
fcmove
sbb
repz
pop
pop
and
or
rol
clc
cmp
hlt
pop
clc
adc
add
add
add
add
sar
out
aam
push
negl
dec
rorb
clc
lods
jp
jns
dec
jg
clc
das
fs
jno
add
add
lea
aas
push
es
nop
aas
out
call
clc
push
add
sub
add
sub
clc
clc
insb
mov
or
add
lea
add
outsb
mov
xchg
xchg
aas
fwait
std
sbb
sbb
in
inc
add
outsl
and
stos
cmp
clc
cmp
clc
cmpsl
clc
jmp
clc
xor
add
add
xchg
adc
add
add
xlat
test
mov
clc
fwait
add
add
add
mov
xor
xor
lcall
out
mov
add
cs
xchg
mov
je
movsl
clc
clc
ret
pop
daa
clc
add
add
cmp
clc
inc
add
inc
add
sbb
test
fisubl
add
dec
mov
add
sbb
add
mov
scas
sub
clc
sub
xchg
pop
sbb
xchg
cmp
jp
clc
sub
jno
add
pop
push
add
pop
jg
xchg
aas
mov
push
mov
data16
push
inc
add
in
loopne
ds
cld
lret
stos
mov
insb
adc
add
add
cmp
add
clc
aaa
pushf
push
xlat
cltd
test
clc
pop
pop
sar
clc
sbb
clc
cwtl
aaa
out
stos
cs
fcoms
add
jo
add
fsubrl
add
or
in
xchg
repnz
repnz
clc
notb
pop
mov
jnp
clc
cwtl
adc
clc
push
add
xor
inc
clc
jb
add
add
cld
cmp
jg
xor
aas
repnz
lock
sbb
jg
add
xor
repz
in
test
incb
add
sub
loop
inc
add
mov
push
not
out
out
xlat
add
repz
in
out
xlat
push
jnp
clc
pop
mov
push
clc
test
clc
or
outsb
dec
sub
jae
add
dec
xor
add
cltd
xchg
pop
das
pushf
into
out
stos
inc
clc
fdivp
out
cmp
test
xchg
add
add
movsb
clc
adc
add
pop
xlat
mov
iret
sbb
clc
ds
maskmovq
negl
add
sti
pop
inc
add
dec
push
sub
ss
push
mov
mov
fldcw
push
add
dec
repz
xchg
mov
ret
clc
pusha
add
out
or
clc
cmpsl
clc
jo
add
pop
cmp
outsl
cwtl
adc
add
mov
add
push
ret
clc
fcomi
or
mov
lret
addr16
jmp
scas
mov
cltd
or
cmp
clc
cltd
test
add
icebp
mov
jmp
cmp
clc
shrb
add
loope
push
mov
clc
inc
add
cmp
es
movsb
clc
movsb
clc
sbb
sti
mov
int
clc
mov
out
fcomps
sar
add
mov
add
adc
mov
clc
dec
mov
outsb
cmp
outsl
sbb
clc
push
add
mov
add
imul
leave
and
outsb
test
pop
xchg
mov
and
add
test
gs
xlat
fwait
int
clc
mov
clc
stos
cmp
lret
test
stos
pop
xchg
test
clc
dec
stos
call
cmp
loopne
adc
add
imul
add
push
add
or
add
push
repz
mov
jo
add
cmp
add
jmp
pop
add
add
xor
inc
add
dec
cld
push
adc
add
add
sub
clc
sbb
clc
jns
call
add
insl
jnp
or
mov
pop
arpl
add
add
movsb
clc
mov
add
in
gs
sub
dec
add
add
clc
scas
pop
insb
pushf
sbb
clc
mov
push
fsts
clc
mov
dec
sub
clc
inc
add
dec
popa
add
cmovle
push
push
add
jns
jnp
clc
push
outsb
adc
add
mov
loope
test
int
add
cli
adc
add
cmp
xchg
push
out
loop
sub
mov
dec
es
sub
outsl
dec
jb
add
push
lods
je
mov
cmp
adc
add
scas
std
js
jnp
sar
and
dec
push
push
lret
add
push
std
or
lods
daa
clc
pop
sar
into
mov
mov
sbb
clc
insl
insb
jmp
test
stos
gs
add
mov
outsl
aaa
std
push
jmp
clc
xchg
xchg
int
stos
cmp
add
dec
aam
repnz
add
add
clc
stos
sub
mov
ja
leave
jp
adc
cmp
data16
adc
add
xor
and
add
aad
add
xor
add
or
clc
clc
bound
add
clc
imul
mov
sub
adc
add
sbb
clc
test
lods
inc
clc
aad
faddl
clc
popa
add
cmp
cmp
clc
add
xor
add
notl
clc
pop
jae
add
lea
fidivs
add
cli
xchg
inc
add
pop
je
lret
clc
fmuls
aas
dec
xabort
mov
push
dec
and
add
add
clc
add
add
or
mov
mov
mov
clc
test
fdivs
inc
add
push
scas
mov
add
adc
add
xchg
and
dec
cmp
adc
add
add
mov
lods
or
clc
pop
clc
pop
imul
add
sbb
fildl
add
mov
clc
and
add
pop
xlat
das
mov
clc
sahf
test
nop
jb
add
xor
add
xchg
jnp
clc
adc
add
test
aaa
or
push
add
mov
ret
xor
add
clc
mov
clc
adc
add
mov
add
cmp
sub
add
ljmp
sub
add
sar
jg
xor
xchg
lret
xchg
test
jecxz
add
xbegin
mov
mov
push
and
add
in
imul
clc
cltd
imul
xchg
adc
add
add
loop
cmp
clc
pop
xlat
push
add
add
inc
clc
xor
add
clc
dec
sarb
push
add
cs
fsubrs
ljmp
lock
clc
inc
clc
mov
cli
fldcw
fs
loop
pop
inc
clc
adc
add
int
or
pop
clc
rorb
in
roll
movsl
clc
das
hlt
mov
sub
jl
dec
mov
clc
negb
jle,pt
clc
inc
clc
jne
in
das
outsb
das
hlt
clc
mov
clc
fdivs
add
lock
dec
or
cmp
pop
clc
fcmove
pop
int
cmp
add
cli
xchg
fmuls
into
jg
xor
add
inc
add
cmp
jl
mov
add
in
pop
push
add
cmpsb
clc
sub
add
xbegin
cmp
sub
je
sbb
add
xor
lcall
dec
fsubrl
mov
add
ljmp
jle
popf
sti
int
cmp
xor
lock
mov
stc
es
inc
add
sahf
hlt
stos
push
add
cs
push
lahf
adc
add
clc
dec
cmpsl
clc
pop
inc
clc
mov
das
mov
add
add
cmp
add
mov
pushf
push
add
ja
clc
mov
add
add
clc
sar
imul
jg
sar
fisubrl
inc
clc
mov
clc
pop
jnp
mov
clc
loopne
int
add
jae
add
imul
call
xchg
cmpsl
clc
mov
mov
mov
js
fimuls
dec
jb
add
add
xlat
and
add
clc
bound
add
or
push
add
or
add
shlb
add
add
xor
add
add
xchg
cmpsb
clc
cmp
sar
maxps
xor
add
clc
push
clc
cli
or
add
clc
push
inc
clc
rcrb
inc
add
dec
hlt
mov
es
iret
xchg
loop
rorl
ret
jne
jbe
inc
add
addr16
insl
dec
or
dec
jno
add
or
push
xchg
cmpsb
clc
test
jnp
rcr
dec
lcall
add
add
add
cmpsb
clc
mov
and
add
add
add
add
clc
mov
or
clc
xlat
fidivs
add
pop
mov
xor
add
clc
jmp
dec
lret
pop
aaa
xor
add
aaa
pop
jl
add
jae
add
mov
clc
xchg
pusha
add
jnp
xbegin
inc
clc
stc
jo
add
imul
pop
repz
clc
xchg
jle
pop
xor
lret
add
outsb
cmp
and
add
stos
or
cmp
fstl
add
test
add
jns
clc
dec
and
add
int3
ss
inc
add
call
add
fcmovnb
clc
loopne
stc
pop
stc
movsl
clc
add
add
out
inc
add
xabort
push
xabort
mov
xchg
fmuls
cmp
pop
clc
dec
in
jle
clc
sub
nop
sub
cli
mov
mov
inc
add
xchg
jp
inc
clc
push
das
pop
clc
inc
clc
cli
fldcw
test
mov
add
inc
add
cmp
cmp
in
int3
icebp
std
xor
add
je
clc
mov
jmp
imul
add
sar
or
add
push
add
in
xor
add
add
or
sub
sbb
pop
adc
add
das
cmp
push
fiadds
add
mov
loop
cltd
jo
add
sar
or
add
clc
addr16
cmp
jo
add
fistpll
cmp
cmp
in
repz
enter
add
ds
clc
pop
clc
data16
xor
add
mov
mov
jo
add
add
ds
pop
sar
add
push
add
push
or
add
clc
mov
add
inc
clc
jbe
clc
adc
clc
pop
xchg
push
add
dec
clc
out
mov
cmp
clc
cld
add
sahf
push
sub
fstps
in
and
inc
add
pop
xor
add
js
push
stc
xchg
mov
jae
add
outsb
jp
adc
mov
clc
cld
neg
inc
clc
and
add
jnp
leave
sbb
clc
cli
xchg
std
push
jecxz
cli
cmpsb
clc
xchg
fldt
mov
add
gs
sar
inc
clc
je
scas
sbb
sub
pop
rol
clc
sbb
clc
loope
sub
clc
int3
test
ret
data16
in
xor
add
add
add
add
push
in
add
add
add
mov
add
and
clc
in
xchg
jecxz
sub
mov
outsl
adc
sub
add
dec
cmp
add
call
and
add
loop
sub
clc
jno
add
scas
arpl
add
sbb
mov
add
dec
sar
add
lods
jne
leave
add
add
jns
lcall
clc
loope
out
dec
daa
clc
inc
clc
mov
mov
clc
inc
add
xchg
push
pop
addr16
or
add
out
jno
add
bts
add
xor
add
add
push
dec
daa
clc
ret
mov
add
sub
sbb
clc
and
add
cltd
pop
clc
icebp
cmp
add
clc
lcall
in
popl
add
cmp
add
pop
pushf
xor
add
push
mov
clc
cmp
add
sbb
add
pop
pop
clc
in
aam
xchg
mov
clc
aam
leave
lahf
outsb
jecxz
es
push
fdivrp
sub
inc
clc
icebp
push
out
aas
pop
dec
out
lea
mov
sub
dec
push
clc
cmp
pop
jns
sar
or
mov
lret
push
add
dec
mov
add
add
mov
pop
clc
add
mov
add
shll
dec
idivb
lret
iret
mov
add
in
in
in
bound
add
push
add
add
add
lock
jl
shll
inc
clc
addr16
out
fs
mov
inc
add
dec
loope
jecxz
das
mov
lret
cmp
clc
cmc
inc
clc
xor
add
add
add
jg
cli
packssdw
pop
mov
add
xabort
or
add
add
add
mov
add
ret
imull
inc
add
cs
add
daa
clc
leave
xor
scas
imul
pushf
mov
add
or
clc
or
test
iret
add
out
dec
icebp
call
mov
mov
xchg
sub
or
cld
push
clc
rol
clc
jo
add
add
icebp
mov
adc
add
in
mov
clc
or
int
xchg
aam
clc
pop
cmp
inc
add
mov
clc
xor
add
add
xchg
pop
dec
xor
add
sub
add
popf
add
add
gs
xlat
outsl
iret
mov
push
pop
fistpll
lods
inc
add
fiadds
add
mov
add
dec
dec
rorl
add
dec
add
add
pop
xchg
mov
clc
cmp
adc
add
lret
ss
add
push
out
xor
add
mov
fcmovnb
clc
ret
clc
scas
and
add
add
add
add
adc
add
cmp
data16
prefetchw
sub
clc
sbb
add
sar
lret
add
add
mov
add
push
leave
cmp
imul
add
push
mov
clc
sbb
mov
add
ss
sbb
pop
inc
add
mov
add
test
and
add
jb
add
test
clc
push
clc
sbb
push
mov
add
add
pop
xchg
pop
and
add
lahf
aas
push
adc
add
add
add
push
out
xchg
lret
add
add
das
scas
fs
or
add
push
mov
daa
clc
push
clc
cs
add
add
clc
pop
push
push
std
push
fstps
clc
pop
sbb
outsl
fmuls
push
or
push
lret
push
pusha
add
fs
xchg
bnd
mov
movsl
clc
push
test
push
add
outsl
lea
clc
sub
aam
clc
jae
add
imul
clc
push
cmp
adc
xchg
cmp
add
shlb
add
cmp
push
daa
clc
add
add
ret
int
add
cmp
mov
add
lcall
clc
movsb
clc
in
sbb
repnz
add
cmp
add
cmp
clc
jle
add
xlat
inc
add
mov
dec
in
and
mov
imul
cmp
push
enter
mov
add
mov
add
clc
mov
mov
es
cmpsb
clc
or
clc
mov
dec
and
add
clc
xchg
push
sarl
pop
ss
call
clc
fdivrl
push
push
add
and
add
sub
into
mov
pushf
sbb
fwait
add
sarl
add
or
adc
add
sar
add
pop
outsl
scas
fldcw
add
xlat
jno
add
test
pop
dec
add
add
insb
in
xor
clc
mov
stc
sar
clc
adc
add
mov
clc
loop
outsb
test
xor
add
push
cmp
sbb
xor
add
clc
ret
sar
out
push
cld
mov
adc
add
add
fs
dec
jp
clc
xchg
lcall
imul
pop
lahf
bound
add
inc
clc
or
xor
add
gs
mov
adc
add
add
int3
push
sub
add
clc
cmp
dec
clc
mov
push
scas
push
sbb
xor
add
sar
clc
xchg
mov
sar
clc
pushl
stc
push
mov
adc
add
imul
clc
jae
add
test
into
dec
cmp
or
add
xchg
lods
aam
sbb
add
xor
add
gs
push
add
std
lods
pop
adc
add
enter
dec
mov
clc
pop
arpl
add
jl
mov
notl
clc
cmc
loope
nop
jne
cli
xbegin
lods
push
add
push
jmp
sti
push
add
imul
add
mov
xabort
xchg
test
clc
and
add
push
mov
imull
pop
clc
xchg
adc
add
call
das
ret
clc
and
pop
out
jne
sub
js
or
dec
pop
in
js
mov
clc
xlat
cmpsb
clc
cmp
clc
movsb
clc
dec
pop
push
dec
push
mov
inc
clc
outsb
xchg
jmp
lods
adc
add
add
mov
mov
add
jecxz
int3
mov
pop
inc
clc
xchg
mov
add
out
mov
clc
cld
call
cs
add
scas
mov
dec
insb
xor
add
add
xchg
jbe
rcll
daa
clc
pop
lahf
rcll
pop
movsb
clc
fdivrl
add
cmc
clc
sar
clc
adc
add
add
clc
sbb
add
clc
and
add
mov
add
add
cmp
clc
inc
clc
dec
cmp
clc
add
add
xchg
or
rol
clc
pop
pop
or
cmp
bound
add
cmpsl
clc
cmp
adc
add
add
add
clc
and
add
es
xor
sub
lea
add
sub
clc
push
cmpsb
clc
out
mov
sahf
mov
stc
hlt
stc
and
lods
aaa
lods
and
add
add
int3
scas
dec
dec
mov
clc
add
add
add
cmc
in
add
add
clc
xor
add
into
pop
inc
clc
rorb
inc
add
mov
clc
lods
or
clc
ja
clc
dec
cltd
pop
clc
inc
clc
movsl
clc
jns
clc
aam
hlt
inc
add
rcl
push
clc
and
add
lods
movsb
clc
mov
add
mov
adc
clc
sub
or
and
add
lock
pop
mov
add
mov
std
xchg
adc
add
pop
test
test
clc
cltd
sbb
clc
cmp
dec
push
loop
push
add
fiadds
add
cmpsl
clc
call
out
fdivrp
jp
xlat
pop
push
dec
bound
add
aad
cmp
add
add
add
add
jle
mov
jo
add
add
out
cmp
add
jne
mov
xor
add
add
add
add
cmp
clc
jle
hlt
inc
add
sub
js
clc
jae
add
insl
mov
pop
jp
add
mov
insl
ljmp
mov
add
mov
clc
xchg
or
add
adc
add
jge
clc
test
mov
push
jne
push
push
add
sbb
add
cs
clc
or
cltd
sbb
clc
mov
hlt
pop
inc
clc
ds
mov
loopne
add
add
add
pop
fucomip
outsb
and
add
add
xor
push
xchg
pop
clc
push
add
sub
add
sbb
cmp
sbb
add
inc
add
test
clc
sub
clc
fbld
mov
mov
add
push
add
jns
mov
dec
push
push
add
in
lahf
sti
xbegin
jl
clc
inc
add
jno
add
pusha
add
pop
adc
add
mov
nop
add
cmp
jns
clc
cmp
cltd
mul
clc
jae
add
mov
xchg
addr16
movsl
clc
jno
add
add
and
add
mov
mov
clc
loopne
push
clc
adc
add
xabort
add
sub
mov
add
sub
inc
clc
mov
lcall
iret
fidivrs
stc
or
add
mov
push
add
sbb
into
or
mov
jbe
dec
idivl
add
add
sahf
adc
cmp
and
add
clc
hlt
or
test
adc
add
adc
add
add
push
iret
jae
add
cmp
add
cmp
add
shlb
das
mov
or
add
sbb
nop
jno
add
push
cmc
xor
add
pop
dec
lods
xor
clc
xchg
out
dec
pop
or
adc
add
sbb
dec
outsb
rol
clc
insl
fstp
add
inc
add
xchg
xabort
push
cmp
stos
dec
mov
xabort
pop
aaa
daa
clc
xor
add
fdiv
cmp
clc
popa
add
lret
dec
data16
jle
clc
pop
mov
sub
clc
es
inc
add
push
add
inc
add
test
xbegin
daa
clc
stos
jmp
clc
in
sub
clc
add
add
mov
and
add
pusha
add
xor
adc
add
fcompl
add
mov
clc
pop
clc
nop
out
pop
xabort
xchg
push
add
sbb
or
add
test
clc
ret
clc
ja
clc
mov
cmc
imul
add
icebp
rolb
mov
clc
mov
add
xlat
dec
jmp
test
jmp
testb
add
inc
clc
rcl
movsb
clc
or
jecxz
sahf
or
add
add
pop
sbb
test
clc
sub
clc
mov
xor
add
mov
mov
test
test
lods
repz
clc
add
mov
fs
stc
xor
add
clc
mov
test
push
add
sahf
fsts
add
xor
mov
adc
test
lock
push
add
jge
fcomps
clc
jge
clc
and
arpl
add
hlt
add
rorl
push
add
test
mov
jp
clc
mov
mov
add
sar
xor
add
dec
repnz
add
clc
pop
mov
clc
outsb
fstpt
icebp
rcr
xor
add
jmp
clc
push
bound
add
sub
arpl
add
push
outsb
cmp
scas
add
add
sub
clc
loop
imul
std
js
scas
dec
lods
cmp
out
mov
add
cmp
clc
push
add
movsl
clc
gs
jl
leave
es
pop
mov
sbb
add
test
clc
or
or
add
in
icebp
rcrb
pop
mov
imul
std
sahf
mov
dec
lea
clc
mov
add
mov
lret
jnp
aam
ret
clc
sbb
adc
mov
dec
leave
jnp
es
push
lods
xor
add
add
popa
add
xabort
dec
xlat
mov
out
rorl
add
scas
jae
add
cmp
stos
jae
add
add
xchg
jecxz
in
notl
cmp
pusha
add
loopne
adc
add
xchg
out
pusha
add
lods
jle
push
pop
push
add
pop
cvtps2pi
sub
add
adc
sbb
clc
enter
leave
cmp
jg
mov
mov
clc
sub
das
notl
add
or
xor
add
xchg
sahf
lock
mov
insb
roll
out
inc
add
fstpt
clc
xor
mov
add
adc
add
sar
add
out
cmp
in
arpl
add
add
jbe
mov
fcom
lahf
sbb
cltd
jge
aam
inc
clc
popa
add
jb
add
ret
lods
mov
insb
xchg
or
aaa
jne
sbb
xchg
int3
mov
inc
add
or
add
outsl
loopne
mov
add
adc
add
and
adc
pop
inc
clc
lods
imul
clc
mov
jns
mov
mov
clc
divb
push
add
mov
clc
notl
add
inc
clc
inc
add
out
cld
adc
clc
add
add
dec
inc
clc
sbb
cmc
pop
xor
add
sar
cs
mov
stos
cmp
add
ret
and
jns
cmp
add
lock
clc
cltd
cli
cmpsb
clc
push
test
in
and
popf
dec
jg
sub
dec
pop
dec
das
xor
add
icebp
push
add
mov
add
shll
shll
add
clc
add
push
dec
jnp
push
ss
pop
mov
cwtl
movsl
clc
jg
hlt
imul
add
mov
adc
add
push
add
pop
aaa
push
jbe
aas
jle
clc
bound
add
add
clc
add
add
add
sbb
add
std
cwtl
or
add
loope
pop
cmp
inc
add
mov
adc
lret
test
and
add
pop
in
mov
mov
scas
cmp
test
clc
and
add
rcrl
clc
adc
inc
clc
sbb
sbb
add
clc
add
add
add
clc
sbb
clc
sub
add
bnd
in
xor
add
clc
mov
push
mov
std
stc
aam
cmp
ss
jmp
add
add
cmp
dec
loope
mov
nop
or
pop
fistps
add
mov
add
push
lods
cmp
clc
movsl
clc
inc
add
mov
stc
adc
add
imul
rcrb
outsb
cwtl
test
pop
clc
and
add
mov
xor
cmp
shlb
cmp
fists
add
sti
adc
add
add
bound
add
mov
test
adc
add
out
insl
stc
and
add
add
clc
mov
cmp
add
clc
jno
add
add
scas
cmp
mov
sbb
iret
daa
clc
or
je
addr16
mov
clc
ljmp
lahf
jae
add
xor
add
add
xor
clc
sbb
clc
add
add
sbb
ret
cmp
pop
sar
clc
pop
lods
clc
jg
inc
add
and
add
jns
lcall
sbb
add
loop
pop
int
xabort
add
sbb
mov
arpl
add
add
jecxz
dec
xchg
or
jno
add
pop
clc
and
add
leave
add
add
cli
rclb
add
dec
int
pop
xabort
clc
cmp
clc
sub
xchg
fs
data16
dec
out
in
mov
add
or
cmp
add
push
sar
pop
lahf
jno
add
je
sub
lods
push
add
mov
inc
add
lret
push
add
pop
out
jne
clc
and
add
sub
cmp
add
pop
fcoms
add
nop
sti
lahf
fadds
cmp
rol
clc
vaddps
stos
adc
add
clc
fnsave
repz
clc
sbb
clc
or
adc
daa
clc
rclb
clc
loope
and
add
or
add
sub
clc
aaa
pushf
scas
xchg
popa
add
cmc
ja
pop
inc
clc
jmp
clc
pop
bound
add
sbb
clc
jecxz
mov
add
out
imul
add
cmp
clc
cmp
clc
in
and
imul
scas
jmp
sbb
add
lcall
testl
xchg
dec
sub
add
clc
push
lods
jecxz
mov
clc
lods
or
mov
lret
clc
lahf
dec
aaa
loop
es
add
clc
xchg
je
jne
clc
hlt
test
jg
mov
clc
gs
sar
clc
fmuls
insb
mov
clc
lods
stc
cld
or
incb
add
add
cmp
or
clc
ljmp
in
scas
sbb
test
lods
jno
add
clc
push
or
mov
mov
xchg
mov
lahf
lret
data16
adc
add
sbb
add
jle
sub
clc
loope
cs
cmp
clc
push
dec
inc
add
xbegin
adc
add
std
jp
xchg
mov
jbe
clc
mov
add
mov
test
pushf
pop
in
mov
jae
add
clc
leave
xchg
or
clc
pop
clc
xchg
dec
fisttpll
adc
add
sub
add
fisttps
sub
clc
ret
add
jb
add
movsl
clc
jae
add
jecxz
mov
into
jae
add
cmp
fs
out
or
pushl
mov
clc
xlat
call
add
add
xchg
sbb
clc
aaa
xor
ret
clc
adc
add
clc
jb
add
add
ret
xchg
and
add
clc
jle
clc
jp
or
clc
pop
fiaddl
mov
movsb
clc
mov
clc
fstl
add
clc
daa
clc
adc
add
test
sbb
add
jne
push
add
clc
mov
clc
push
add
jno
add
clc
cmp
add
dec
and
mov
mov
sbb
test
add
push
xor
add
dec
lret
mov
jae
add
aam
add
cld
dec
popf
sub
mov
stos
pushf
cli
xabort
popf
fdivs
fisubrs
mov
mov
fs
inc
add
repnz
add
ja
fs
mov
push
shld
push
cmp
mov
clc
xchg
push
clc
add
add
mov
js
mov
in
sub
mov
stos
mov
push
sahf
and
add
add
jle
add
or
clc
dec
push
mov
push
clc
add
add
cmpsb
clc
popa
add
iret
movsl
clc
inc
add
fs
enter
lods
push
imul
clc
sbb
add
sub
fucomi
lret
mov
and
fisttps
fidivrl
dec
xor
add
add
scas
rcr
test
sar
jo
add
cmp
mov
add
fnstenv
clc
cmp
xor
add
cs
cmp
mov
jo
add
jle
add
popa
add
out
and
add
add
jb
add
xchg
mov
clc
mov
repz
add
pop
adc
add
clc
jb
add
clc
mov
call
clc
push
popa
add
mov
clc
mov
add
test
lods
outsl
roll
clc
push
sbb
inc
add
mov
or
out
sbb
cltd
jge
push
shll
add
xchg
sub
cmp
clc
je
or
nop
mov
clc
insb
fwait
or
add
mov
inc
clc
js
xchg
push
add
add
add
xchg
or
sub
add
jo
add
add
lret
add
cmp
push
out
cmpsl
clc
xlat
xchg
xchg
movsb
clc
mov
jecxz
sbb
insb
adc
add
dec
fadds
add
add
out
adc
add
clc
cmp
lcall
add
add
add
int
dec
jns
xchg
sti
repz
movsb
clc
outsb
aaa
add
shrb
scas
into
xor
add
clc
and
inc
clc
sbb
clc
lods
lods
xchg
popa
add
mull
add
or
stc
push
add
jbe
clc
and
clc
cmp
fisubs
mov
cmp
and
add
clc
scas
icebp
lea
clc
jl
lahf
push
push
cltd
xchg
xor
add
add
mov
add
adc
add
add
invd
es
dec
movsb
clc
dec
ret
mov
clc
call
jg
mov
jl
movups
add
clc
mov
rorb
clc
xor
add
add
cmpsb
clc
into
jb
add
rorb
and
add
mov
fildl
inc
add
cmp
pop
mov
and
add
pushf
int3
sar
clc
bswap
aam
inc
clc
fdivp
sbb
clc
mov
clc
movsb
clc
sub
clc
test
clc
enter
add
aas
hlt
int
add
mov
clc
dec
sbb
add
pop
xabort
adc
add
mov
clc
xor
add
imul
jmp
clc
adc
add
xabort
aas
jnp
add
loope
cwtl
test
clc
ret
clc
inc
add
pop
jg
clc
push
add
and
add
xor
add
mov
clc
in
add
add
bound
add
add
add
fs
jne
pop
cmp
repz
mov
popf
push
shll
inc
clc
insb
pop
clc
aam
or
call
xlat
test
add
xor
adc
add
xchg
divl
clc
mov
sub
clc
ljmp
lret
push
add
add
jge
add
xchg
mov
mov
outsl
pop
xor
add
and
add
loop
cmp
clc
and
add
dec
pusha
add
cmp
add
and
add
clc
inc
clc
jno
add
fcomps
enter
adc
add
scas
fs
lods
sar
jmp
add
dec
daa
clc
lret
add
cmp
fprem1
icebp
pop
push
xbegin
pusha
add
pop
int3
push
aaa
xchg
mov
cmp
add
mov
outsl
cltd
push
in
pusha
add
lock
pop
push
clc
pushf
mov
jp
inc
clc
hlt
mov
add
inc
clc
xor
add
popa
add
loopne
clc
lock
fs
push
pop
xchg
mov
push
add
movsl
clc
sbb
jo
add
add
idivl
idiv
jecxz
sbb
jae
add
mov
out
mov
jp
add
scas
xchg
sbb
fs
pop
adc
add
push
movsl
clc
insl
mov
pop
clc
cmp
clc
movsl
clc
sarb
add
pop
aaa
xchg
imul
add
add
pop
repnz
clc
dec
dec
mov
push
xchg
cwtl
xor
clc
inc
add
add
add
fwait
clc
pop
clc
push
add
lods
dec
mov
clc
aad
add
adc
add
loop
mov
movsl
clc
jle
stos
lahf
push
mov
pushf
dec
xchg
xchg
cmp
clc
mov
test
add
lret
dec
lret
cmp
fwait
push
add
cli
adc
add
clc
cmp
xchg
bound
add
cmp
clc
arpl
add
data16
loope
mov
clc
je
and
cld
fs
xchg
cmpsb
clc
fs
inc
add
mov
clc
imul
xchg
shr
pop
rclb
add
cli
int
add
pop
fbstp
cltd
out
push
xor
add
movsl
clc
or
or
pop
lahf
out
aad
clc
stc
mov
sub
inc
add
xchg
and
add
add
inc
clc
mov
xchg
ds
clc
and
add
repnz
clc
push
clc
movsb
clc
pop
xlat
stos
pop
cltd
movsb
clc
dec
in
in
cmp
outsb
fwait
adc
add
add
stc
xor
add
clc
and
jge
mov
fiadds
add
sbb
add
jle
clc
xbegin
clc
ljmp
add
or
ja
clc
add
dec
popa
add
lea
add
clc
call
add
mov
stc
aas
adc
add
add
ljmp
cmp
add
pushf
pop
arpl
add
add
add
jmp
add
cmp
add
xor
iret
mov
sbb
clc
dec
cmp
add
cld
sbb
add
mov
push
stc
fcmovnu
pop
in
insb
in
push
jne
clc
inc
add
test
pop
aaa
jl
add
adc
testl
clc
jae
add
test
mov
add
xbegin
popf
xchg
cli
jge
add
sar
push
and
add
add
add
ds
push
jle
imul
add
daa
clc
mov
clc
sub
xbegin
add
insb
fucomip
cld
push
add
cmp
in
sbb
clc
sub
xor
add
jp
pop
mov
clc
test
push
dec
gs
clc
jecxz
dec
xbegin
clc
aad
dec
dec
xor
add
fwait
jbe
addr16
int
cs
and
add
das
std
mov
clc
cmp
xor
add
add
push
add
push
dec
push
fdivl
add
in
fsubrs
xor
xchg
mov
dec
je
lods
loop
sub
mov
test
mov
cltd
xor
add
fucomip
jno
add
clc
jne
ret
clc
mov
pop
ret
clc
clc
add
add
add
xor
add
clc
popf
push
cmc
cmp
add
mov
in
pop
test
inc
add
jecxz
add
add
inc
add
mov
int
vrcpps
add
clc
rorb
rorl
clc
scas
in
push
add
cmp
movsb
clc
and
add
add
xchg
mov
popf
add
add
clc
popf
lret
clc
incb
sbb
add
sub
add
add
dec
mov
add
add
cwtl
dec
mov
sahf
cld
bound
add
xor
repnz
add
insl
ss
gs
add
add
clc
mov
icebp
inc
add
sahf
pop
mov
rcrl
inc
add
lods
je
das
push
cmp
adc
add
add
jmp
sar
add
push
je
clc
dec
xchg
xor
cmc
divb
add
nop
xchg
scas
pusha
add
sarl
add
add
out
cld
ja
push
add
or
add
pop
adc
add
add
add
jecxz
adc
add
add
pop
sbb
and
add
add
cmp
add
inc
add
pop
movsb
clc
sbb
clc
test
out
inc
clc
jae
add
clc
push
add
scas
cmp
cmc
insb
mov
test
lret
add
xchg
jae
add
pop
inc
add
clc
push
jnp
sub
add
push
clc
jp
mov
clc
aam
xchg
imul
mov
lods
aas
mov
add
vcomiss
or
add
pop
jae
add
add
clc
daa
clc
push
lock
js
push
insl
test
xor
clc
sti
jbe
clc
and
add
sti
mov
push
add
add
dec
and
add
push
and
add
loop
in
push
xor
add
add
fdivl
xchg
clc
adc
add
inc
add
lret
inc
clc
mov
data16
push
loope
ret
clc
mov
sub
xor
add
add
add
add
xchg
xchg
lea
add
mov
add
mov
pushf
mov
pusha
add
pop
or
add
clc
pop
and
xchg
lock
add
call
leave
mov
or
int
clc
call
push
jae
add
mov
test
add
fiaddl
cmp
rorl
add
pop
mov
es
xor
add
add
xchg
mov
std
stos
or
cmp
add
jae
add
mov
clc
repnz
clc
test
and
add
jno
add
clc
mov
add
add
add
and
add
add
cmpsl
clc
or
cli
nop
testl
dec
popf
outsl
dec
xchg
pop
sub
add
clc
xor
add
clc
cmpsb
clc
add
add
push
add
imul
pop
mov
in
lcall
clc
mov
add
pop
fstpt
aam
add
outsl
push
add
mov
test
ss
mov
std
and
add
xchg
xchg
call
lcall
add
cli
mov
add
add
add
xchg
pushf
das
adc
rolb
xor
adc
add
jl
hlt
sbb
mov
sar
pusha
add
ja
ljmp
mov
and
add
mov
test
push
leave
je
or
pop
and
rclb
jmp
add
inc
clc
loope
xchg
popa
add
cwtl
inc
clc
xchg
or
and
add
inc
clc
or
jbe
xor
add
out
dec
xor
and
adc
push
and
jg
jle
jg
clc
and
incb
add
sar
xchg
pop
cmp
int
test
popa
add
jl
lea
clc
or
negl
or
push
add
cltd
xchg
mov
clc
cld
jno
add
pushf
mov
push
push
jae
add
sar
xchg
dec
inc
add
out
aaa
clc
out
xor
add
cmp
pop
shr
pushf
add
add
add
test
je
mulb
add
sub
iret
cmc
mov
shlb
add
clc
into
lock
clc
pop
dec
js
test
clc
cmp
add
aad
mov
clc
insl
imul
lods
push
mov
push
xchg
jle
mov
clc
pop
lock
hlt
mov
add
push
clc
push
clc
stos
ljmp
imul
jmp
mov
add
jg
fmul
mov
lahf
mov
push
add
mov
clc
jge
add
gs
push
add
adc
add
cli
shll
sub
in
in
addr16
sar
arpl
add
clc
and
add
dec
dec
or
filds
add
in
jbe
ret
clc
mov
jbe
xor
xchg
and
add
xchg
sarb
sbb
das
outsl
sar
mov
inc
add
dec
mov
outsl
add
add
pop
sub
xchg
fs
lods
push
popa
add
inc
clc
movhps
dec
cmp
or
clc
cmpsl
clc
mov
add
dec
and
add
add
pop
movsb
clc
fs
scas
and
aam
add
pop
sub
clc
insl
xor
add
add
clc
mov
mulb
es
jb
add
out
cs
dec
push
add
jno,pt
add
stos
adc
add
and
add
cmp
cmp
cmc
pop
jp
ret
clc
mov
adc
add
jno
add
mov
and
add
clc
xor
add
clc
add
add
fs
pop
cmc
pop
mov
add
mov
add
add
clc
mov
add
cltd
std
pop
clc
mov
nop
pusha
add
ja
jmp
pop
push
gs
lret
clc
in
xlat
inc
add
iret
mov
add
and
add
ja
test
jg
clc
fnstsw
fwait
inc
clc
jo
add
add
sbb
out
out
lock
clc
cmpsl
clc
rolb
add
jp
clc
addr16
adc
add
in
cmp
fadd
clc
out
xchg
mov
and
add
sbb
add
sub
pop
xchg
cs
leave
stos
pushl
lods
fnsave
pusha
add
pop
outsb
mov
mov
mov
clc
int
rcr
mov
enter
add
add
push
and
add
cli
fdivrs
clc
es
and
pop
lahf
insl
push
cmpsl
clc
aas
cld
sahf
pop
std
xor
clc
jns
nop
mov
add
cli
or
cwtl
adc
add
dec
rep
pop
jne
mov
add
add
ffree
clc
sub
push
fwait
stos
add
add
add
add
add
inc
clc
pushf
rcll
jge
clc
mov
clc
xor
and
add
mov
clc
ljmp
aas
loop
inc
add
mov
mov
jo
add
aad
add
std
jge
sbb
mov
add
in
fucom
clc
lcall
push
add
sub
test
fmuls
icebp
scas
aad
clc
push
jg
sub
mov
stc
mov
mov
clc
sub
add
mov
cmc
call
jae
add
pusha
add
stos
mov
add
xchg
cmp
fisubrl
aaa
call
dec
in
pusha
add
mov
pop
add
add
add
clc
inc
add
out
adc
add
mov
jnp
aam
cltd
out
lods
cmp
adc
add
cmp
mov
clc
pop
mov
cmpsl
clc
flds
add
iret
mov
fstps
jb
add
clc
ret
add
jge
fs
cmp
pop
clc
cmp
xchg
jle
clc
nop
pop
add
lret
xor
add
insb
pop
inc
add
ret
clc
in
mov
mov
movsb
clc
jo
add
clc
out
mov
pop
repnz
push
pop
cmp
add
adc
add
clc
adc
cmp
scas
idiv
xor
clc
push
add
add
sub
ja
leave
push
sub
push
add
shlb
outsl
outsl
loope
in
aaa
cmp
clc
sahf
lea
add
pusha
add
sbb
dec
sub
add
stos
sub
filds
add
flds
xor
aam
fcompl
movsl
clc
std
mov
clc
sti
pusha
add
jo
add
clc
repnz
add
clc
clc
sub
rcpps
add
and
add
pop
dec
adc
add
add
add
add
or
sti
popa
add
xchg
mov
inc
add
cwtl
ret
cmp
add
add
das
ret
clc
dec
pop
xchg
mov
and
add
call
pop
push
xchg
xor
clc
outsb
addr16
mov
clc
dec
movsb
clc
push
add
mov
jo
add
addr16
xor
pushf
sub
add
mov
ljmp
add
clc
leave
sub
add
mov
add
cmp
loope
js
lea
scas
xchg
mov
inc
add
mov
add
jns
cmp
xor
add
icebp
ret
clc
scas
bnd
clc
icebp
add
mov
sar
xbegin
aaa
inc
add
and
inc
add
cmp
cmove
jecxz
dec
cmp
ljmp
gs
test
cmpsb
clc
pop
std
or
add
add
dec
jge
mov
add
mov
push
add
push
pop
dec
aas
xor
add
iret
iret
add
add
cmp
push
xchg
shl
mov
pusha
add
ljmp
adc
add
add
loope
push
add
sahf
bound
add
es
sbb
add
hlt
mov
stos
add
add
push
add
add
add
cmp
stos
mov
mov
cmpsl
clc
mov
xchg
cmp
inc
add
out
sub
dec
xchg
add
arpl
add
scas
push
add
popf
fwait
or
into
in
mov
clc
lods
call
jmp
add
add
push
add
push
add
mov
clc
inc
add
aas
decl
jae
add
add
add
clc
cmp
mov
into
jo
add
add
add
inc
clc
daa
clc
xchg
add
outsl
loop
push
adc
mov
test
repnz
mov
add
push
sub
jl
out
jns
pop
mov
clc
mov
add
jl
lea
add
cmpsl
clc
xchg
push
sub
sbb
js
adc
add
add
jb
add
lea
add
std
shl
dec
jae
add
clc
mov
push
add
inc
add
xor
add
test
pop
xchg
xor
add
clc
call
dec
adc
add
ret
clc
push
add
push
jg
add
xchg
insb
cld
fnsave
lea
cmpsb
clc
cmp
fmulp
mov
out
inc
clc
jno
add
inc
add
jae
add
add
add
jbe
clc
cmc
add
add
aas
ljmp
inc
clc
out
jl
or
add
cs
in
push
fldl
shll
pop
cmp
add
add
cmp
insl
dec
fimuls
add
jg
popa
add
and
add
clc
push
add
sub
add
fiaddl
push
add
xchg
call
add
clc
and
clc
and
add
pop
jns
sbb
clc
mov
clc
add
and
mov
mov
clc
mov
add
imul
and
add
add
insl
push
stos
jle
clc
outsb
daa
clc
cmp
adc
dec
in
mov
xchg
test
add
leave
in
out
pop
dec
jge
add
pop
fimull
mov
or
clc
pop
push
sub
push
bound
add
rorl
jo
add
adc
clc
push
and
ret
add
add
add
adc
add
add
lret
repnz
ret
js
clc
pop
sahf
cmp
add
movsb
clc
rorb
popa
add
adc
add
push
add
fs
mov
push
push
push
add
ss
add
add
clc
jg
push
xbegin
frstor
clc
mov
jle
adc
add
add
imul
cmp
add
es
jle
dec
lret
fsts
mov
xor
cmp
and
cmp
aas
lcall
cmp
sbb
cmp
aaa
mov
clc
out
jns
pop
mov
add
pop
lods
mov
jmp
xchg
xor
add
aas
pushf
dec
mov
stc
je
mov
add
cmp
push
add
test
mov
clc
js
ret
clc
sub
clc
in
lcall
jb
add
clc
addr16
mov
test
mov
sbb
sub
add
pusha
add
ja
lods
pop
and
add
clc
dec
fdivrs
inc
clc
xchg
mov
or
jmp
add
jl
decb
clc
in
jo
add
cmp
lret
fbld
clc
cmp
popa
add
xor
add
mov
dec
ficoml
add
movsl
clc
pop
repz
out
mov
mov
xor
add
sbb
adc
add
jo
add
mov
pop
pushl
sbb
add
add
add
or
jns
adc
add
add
add
cs
mov
clc
ss
jge
add
inc
add
lods
mov
clc
dec
mov
insb
inc
add
mov
push
sbb
xchg
movsl
clc
or
add
add
cmpsb
clc
dec
lret
notl
add
enter
pop
jb
add
pop
xor
add
aad
clc
stc
cmp
jno
add
je
mov
iret
inc
add
lret
fimuls
daa
clc
dec
inc
clc
movsb
clc
mov
fisttpll
outsb
push
inc
add
mov
add
push
outsl
mov
jecxz
out
mov
and
add
xchg
mov
pushf
inc
add
js
pavgb
and
outsl
into
cmc
and
and
add
push
add
out
mov
hlt
add
add
push
scas
aaa
iret
movsb
clc
cmp
clc
sbb
clc
loop
sti
adc
add
add
inc
add
hlt
cld
dec
fimull
ficoms
add
dec
fdiv
mov
into
sbb
in
push
pushf
push
clc
sbb
daa
clc
and
add
clc
sbb
clc
adc
add
jae
add
je
clc
stos
repz
iret
enter
test
mov
adc
add
add
and
add
dec
and
add
repnz
or
sub
pop
btc
dec
fcmovnb
clc
mov
clc
jno
add
add
add
clc
es
add
add
clc
cmp
xlat
push
add
jb
add
clc
xchg
es
fwait
lcall
and
add
add
jge
in
xor
add
push
add
aaa
inc
add
and
add
mov
xor
add
add
dec
sbb
xor
add
clc
adc
add
add
lret
pop
cmp
mov
out
pushf
jecxz
or
add
add
clc
ljmp
pop
aas
add
add
repnz
clc
scas
inc
add
and
add
or
xchg
sbb
dec
mov
clc
or
insb
jecxz
mov
add
fisttps
or
add
add
add
add
sbb
clc
outsb
insb
sub
xor
add
add
aas
mov
pop
pop
rclb
xor
vandnps
add
test
clc
or
inc
clc
pop
clc
cmp
into
test
inc
add
inc
clc
xor
outsl
lods
imul
clc
repz
es
mov
cmpsb
clc
ja
sahf
dec
pop
pusha
add
jbe
mov
add
add
fsubp
clc
in
gs
push
add
data16
arpl
add
add
cmp
clc
mov
add
lcall
data16
mov
aad
mulb
clc
test
int3
outsl
shlb
add
leave
xchg
mov
add
jmp
arpl
add
add
adc
dec
lahf
leave
notl
jl
push
enter
add
cmp
cli
lock
dec
jp
clc
mov
dec
push
clc
push
out
lret
dec
cmp
testb
clc
js
jno
add
mov
add
sbb
inc
clc
and
add
pop
arpl
add
dec
or
mov
in
cmc
adc
add
std
xlat
sbb
std
loopne
adc
je
stos
xchg
mov
clc
aam
cmp
pop
cmp
add
hlt
loopne
jo
add
cmp
jmp
popa
add
lods
nop
test
sub
pop
or
clc
ret
clc
lahf
xabort
mov
popf
jbe
clc
xchg
sub
add
outsb
mulb
mov
fisubrl
jns
mov
pop
add
cmp
ficoms
add
clc
sbb
cltd
add
add
pop
inc
add
adc
in
ja
clc
cmp
es
xor
add
cmp
hlt
xchg
pop
stos
scas
sar
mov
clc
jl
jb
add
and
add
clc
pop
push
add
or
clc
fcomip
push
clc
outsb
inc
add
nop
inc
clc
pop
lea
mov
add
aad
add
add
mov
add
add
cwtl
or
popf
pop
leave
xor
add
add
fwait
push
dec
xchg
test
inc
clc
sahf
aaa
jecxz
in
xchg
jle
inc
add
push
push
add
xchg
fimull
add
jg
das
or
add
xor
add
mov
clc
cmp
add
add
add
mov
out
add
lcall
leave
cs
dec
imul
fisubrl
mov
add
sti
sub
fidivrl
sub
scas
adc
add
mov
clc
popf
adc
add
jne
pop
dec
shll
add
jecxz
or
adc
add
pop
popa
add
and
add
and
push
add
add
push
add
xchg
sub
mov
clc
cli
js
sbb
add
add
pop
inc
clc
clc
icebp
repz
loopne
addr16
inc
clc
cs
sub
clc
lcall
jns
and
add
pop
xbegin
cmp
clc
iret
push
add
jg
mov
enter
mov
add
xchg
in
jmp
pop
pop
arpl
add
push
push
or
jne
clc
cld
das
loop
mov
add
aas
inc
add
mov
jmp
add
push
add
sub
add
push
gs
insl
jnp
shrb
clc
es
mov
popf
testb
add
out
sti
ret
add
xchg
fcom
decb
and
mov
cmc
aaa
adc
add
add
out
daa
clc
shl
clc
sbb
dec
pop
mov
gs
movsb
clc
add
add
jno
add
clc
push
push
popf
ret
clc
dec
gs
leave
pop
add
add
out
adc
add
clc
and
add
add
cmp
clc
clc
jno
add
mov
scas
mov
add
add
ss
or
cmpsb
clc
jg
aas
pushf
or
clc
xchg
mov
add
lahf
dec
or
mov
add
shrb
pop
cmp
cmp
and
add
add
clc
test
sub
cs
outsl
cltd
out
lahf
stc
jl
xor
lcall
push
and
add
das
daa
clc
sub
dec
loop
out
add
add
test
jne
jp
clc
test
mov
push
add
scas
add
add
je
add
add
clc
pop
shll
cmp
jbe
jns
fidivrl
add
in
push
add
nop
push
jg
jg
das
lods
nop
pop
sahf
pop
popf
add
add
cmc
mov
clc
mov
in
mov
jnp
pop
lea
xchg
adc
add
rclb
mov
add
pushl
add
add
lea
add
push
add
lock
jno
add
cmp
out
xchg
mov
cmp
loopne
ss
clc
xor
add
std
fwait
movsl
clc
aam
or
jnp
in
arpl
add
clc
xchg
popa
add
mov
add
scas
xchg
cmp
or
cmp
clc
add
mov
or
or
clc
pop
dec
jecxz
push
mov
clc
std
xlat
inc
add
scas
icebp
loopne
shl
jb
add
add
dec
cmp
xchg
and
test
int3
push
add
clc
lcall
cmp
clc
and
add
clc
rcr
xbegin
clc
sti
inc
clc
ljmp
cmp
add
push
clc
xor
call
push
outsb
add
fsubl
sbb
arpl
add
push
push
clc
cmp
stc
int3
add
xor
add
add
je
je
clc
jp
sub
clc
inc
clc
clc
mov
cmp
imul
add
loop
jmp
push
add
jmp
and
add
mov
add
add
clc
movsb
clc
ds
clc
push
add
push
ss
pusha
add
add
add
jecxz
xor
add
add
fldcw
mov
jo
add
and
xor
pusha
add
cmp
push
clc
pusha
add
mov
add
inc
add
adc
add
add
and
add
cmp
add
add
add
sub
mov
jecxz
mov
add
insb
jp
jmp
clc
lret
in
cmp
add
dec
bound
add
and
jmp
stos
sub
in
cmp
adc
add
adc
add
clc
movsl
clc
lods
dec
arpl
add
insl
pop
inc
clc
iret
dec
sahf
and
add
add
sbb
clc
cld
and
movsl
clc
pop
clc
cmp
xchg
dec
insl
add
add
add
mov
xor
add
clc
cmp
xor
gs
push
call
add
jo
add
sar
ficompl
mov
or
dec
mov
fcomps
mov
add
test
clc
mov
movsl
clc
add
add
pop
xchg
push
add
int
inc
clc
adc
add
xbegin
push
mov
je
push
xchg
cmp
mov
add
cmp
clc
xchg
sbb
sar
inc
add
fidivrl
clc
scas
or
pusha
add
mov
add
bound
add
iret
mov
dec
jge
clc
je
ret
add
sub
push
inc
clc
cltd
into
add
inc
add
addr16
inc
clc
inc
add
aad
cld
dec
push
xor
lock
cs
ret
push
add
inc
add
loope
sub
clc
stos
jg
fisubrl
ljmp
in
out
push
movsl
clc
and
adc
push
clc
sub
clc
pop
loope
stc
sub
add
or
add
inc
add
dec
and
add
packsswb
add
inc
clc
bound
add
sti
xlat
mov
xor
add
add
clc
xchg
sbb
clc
or
mov
pop
jle
pushf
fdiv
mov
pop
loope
mov
clc
mov
mov
into
cmpsb
clc
push
pop
out
xor
add
add
add
clc
cmpsl
clc
or
clc
push
sub
orps
add
xchg
fisttps
xor
add
cmp
push
inc
add
dec
push
add
sti
stc
dec
out
cmp
clc
es
push
add
out
test
lret
sbb
loope
push
mov
add
in
add
add
push
and
add
out
jge
xor
cmp
int3
ss
xor
add
clc
clc
jge
ret
push
cwtl
add
push
add
xor
pop
ljmp
add
clc
add
fistps
pop
sar
clc
fs
mov
inc
add
xchg
repz
call
test
cwtl
jmp
scas
adc
add
clc
sub
rolb
add
sahf
dec
mov
insb
jns
mov
test
jg
clc
in
and
add
in
nop
flds
add
dec
int
mov
add
and
mov
cmp
add
push
xor
add
in
incb
push
add
jns
cmp
and
add
add
lret
jg
add
add
and
add
mov
add
fnstenv
add
in
das
and
add
adc
sbb
clc
xchg
or
add
iret
jmp
inc
clc
or
jmp
fnstsw
xchg
pop
inc
clc
jmp
fs
mov
sar
fcompl
sahf
inc
add
mov
enter
enter
adc
and
add
clc
pushf
jnp
add
ja
add
clc
add
add
clc
popf
dec
std
sub
punpckhbw
add
add
inc
clc
mov
insl
dec
int3
mov
jo
add
push
xchg
cmp
push
mov
js
test
iret
mov
addr16
mov
add
add
fwait
stos
or
fwait
clc
hlt
neg
daa
clc
adc
add
add
add
mov
stos
ss
clc
jl
mov
push
add
dec
enter
pop
jb
add
add
sti
outsb
sar
scas
and
add
cmp
jne
xchg
push
add
dec
imul
and
add
cmp
add
add
test
cmp
pop
in
pop
cmp
lock
add
gs
xor
add
add
add
add
aas
or
in
or
rolb
add
and
add
aad
sub
aas
mov
add
data16
jg
mov
xchg
sbb
sbb
negl
jne
add
xor
add
push
sub
clc
mov
jmp
dec
and
add
add
adc
add
add
shlb
add
mov
icebp
out
loopne
inc
add
pop
clc
ficoml
fnstsw
clc
mov
add
cwtl
pop
repnz
add
adc
add
clc
mov
es
push
jb
add
clc
inc
add
outsl
sub
clc
push
sarl
mov
jno
add
or
add
out
mov
or
add
or
mov
cmc
or
dec
int3
in
test
xbegin
dec
repnz
or
clc
and
add
ss
add
mov
mov
push
test
dec
or
add
add
adc
add
push
add
loopne
xchg
or
ds
gs
xchg
sarb
jecxz
movsl
clc
adc
ret
ss
xabort
push
add
sarb
dec
cmp
jbe
jmp
add
add
add
mov
aam
roll
clc
and
add
clc
inc
add
mov
clc
jecxz
sbb
sub
jmp
clc
imul
add
insl
inc
clc
rcll
aas
xchg
jp
mov
test
xor
add
xchg
scas
add
add
and
add
xchg
repnz
xor
add
add
std
or
or
inc
clc
add
add
rorl
movsl
clc
sarb
cmp
clc
mov
add
add
add
clc
cmpsb
clc
scas
gs
inc
clc
das
dec
dec
mov
push
add
and
add
add
push
clc
jbe
int3
repnz
clc
adc
add
push
and
sarb
ja
pusha
add
outsb
cmp
inc
add
mov
loopne
xchg
xchg
lods
test
pop
pop
fstps
sub
test
pop
aaa
mov
sbb
add
push
add
xor
and
or
pop
xchg
push
add
aas
jae
add
clc
icebp
xchg
outsl
sarl
clc
out
daa
clc
cvttps2pi
pop
insl
mov
mov
add
in
ds
mov
clc
fldcw
and
mov
inc
add
je,pn
hlt
cmc
outsl
sbb
sbb
inc
clc
lret
cmc
xor
add
clc
add
rcr
or
clc
dec
nop
xchg
xor
test
adc
add
clc
jae
add
push
pop
out
jle
clc
adc
add
xor
clc
mov
or
clc
imul
in
in
imul
loope
loop
data16
fists
testl
mov
add
lret
xchg
mov
xor
push
outsl
cld
outsb
je
mov
add
hlt
test
clc
push
dec
cmp
dec
leave
cltd
std
js
clc
dec
mov
clc
sar
clc
mov
mov
add
cmp
jmp
clc
dec
arpl
add
add
push
clc
dec
xbegin
add
jmp
jbe
test
pop
clc
xchg
dec
out
fwait
adc
jno
add
daa
clc
loop
in
stos
dec
fwait
inc
add
dec
das
je
lret
add
mov
clc
iret
ret
clc
or
nop
dec
sar
dec
filds
add
lahf
and
add
ljmp
lods
mov
dec
ror
pop
clc
push
inc
clc
and
add
or
clc
mov
std
xchg
cmp
jge
clc
rorb
loope
sbb
imul
clc
dec
ljmp
push
ljmp
or
rcrl
mov
call
cmp
clc
jo
add
add
jnp
sbb
rclb
add
mov
aas
daa
clc
mov
add
repz
add
push
add
sbb
jge,pt
clc
cli
cmpsl
clc
jbe
clc
mov
clc
sbb
clc
testl
clc
sbb
icebp
pop
pop
or
jb
add
clc
clc
and
add
add
add
add
clc
fwait
movsb
clc
sub
bound
add
jbe
add
sub
bound
add
pushf
inc
add
xor
add
jmp
test
jg
inc
add
mov
add
hlt
cmp
jl
inc
clc
addr16
repnz
dec
std
pop
aam
sar
clc
cmp
movsb
clc
xlat
or
pop
loopne
mov
iret
stos
fcoms
add
in
xlat
sbb
add
das
enter
pop
clc
sarl
clc
xchg
icebp
mov
stos
cmp
add
cmp
add
xor
cmp
add
out
test
mov
clc
xchg
cmpsl
clc
mov
mov
add
loopne
push
add
or
xchg
in
xor
add
add
clc
out
xchg
movsb
clc
out
push
add
push
scas
push
inc
clc
out
push
add
aam
data16
fwait
in
daa
clc
mov
add
js
loope
and
jp
pop
lret
add
repnz
clc
movsl
clc
cmpsb
clc
and
add
jg
clc
mov
pop
lcall
clc
mov
in
clc
or
ss
add
jmp
in
add
add
sar
hlt
test
or
test
adc
add
clc
lcall
cmc
stos
cmp
sbb
add
aam
stos
adc
clc
loopne
das
in
and
add
pop
mov
clc
and
repnz
adc
add
add
test
data16
jns
aam
push
paddsw
add
add
mov
push
pop
movsl
clc
pop
ja
fildl
or
lcall
xchg
repnz
mov
pop
pop
cmp
mov
or
sahf
aas
ljmp
push
cmp
cli
je
loope
ret
js
clc
cmc
adc
add
clc
mov
ffreep
clc
das
sub
adc
add
add
and
clc
mov
push
clc
sub
push
scas
and
add
and
add
add
jno
add
scas
pop
cmc
add
add
xchg
sti
in
mov
clc
lea
mov
clc
dec
je
dec
cmp
push
addr16
add
mov
clc
aas
xchg
and
cmp
push
add
gs
pop
clc
lock
sub
push
push
pushf
and
add
add
mov
push
add
jp
add
gs
cmp
push
sbb
mov
add
cmpsl
clc
xor
add
add
push
movsl
clc
out
mov
icebp
xchg
test
js
lret
or
add
add
fisubs
repnz
mov
into
mov
leave
sub
cmpsl
clc
pusha
add
sub
test
mov
add
xor
add
add
add
add
xchg
adc
add
cmp
jmp
xchg
dec
cwtl
arpl
add
add
std
xor
stos
loop
clc
daa
clc
mov
clc
lahf
out
mov
add
mov
clc
movsl
clc
sub
clc
mov
cmp
push
clc
dec
cmp
add
lods
push
fisubrs
mov
add
clc
cmpsb
clc
push
add
scas
out
loopne
mov
movsl
clc
mov
fcomps
sbb
clc
pop
scas
cmp
jle
fcomp
out
mov
in
xbegin
pop
clc
sub
sub
add
mov
mov
jb
add
fsubrl
cmp
dec
mov
clc
xchg
test
out
inc
add
nop
and
add
mov
clc
jns
mov
divl
add
add
das
lret
xor
add
test
clc
cwtl
cmp
pop
xchg
sbb
mov
or
movsl
clc
arpl
add
push
inc
add
repnz
pop
jle
das
push
add
mov
test
xor
add
clc
jge
cmpsl
clc
in
pop
sbb
sub
gs
mov
adc
add
add
add
xabort
adc
add
fildl
clc
movsb
clc
jae
add
dec
fisubrs
ret
fs
pop
xor
add
insl
mov
cmp
int
rorb
stc
push
pop
clc
out
add
add
je
ds
add
add
mov
sub
clc
inc
clc
dec
outsl
in
or
add
enter
out
ja
ljmp
sub
or
lret
inc
add
loopne
call
sub
pop
clc
cmp
insb
lock
add
mov
cmp
inc
add
lahf
into
jno
add
clc
xor
add
add
ljmp
jg
cmp
clc
jle
sbb
into
ljmp
mov
movsb
clc
arpl
add
repz
dec
mov
fisubs
add
popf
push
clc
mov
xabort
jnp
dec
out
iret
inc
add
loop
out
sbb
mov
sub
in
sub
inc
add
jl
add
mov
adc
add
cmp
mov
mov
clc
adc
add
pop
clc
cmc
lret
adc
add
add
add
pop
dec
js
lcall
add
fisubrs
add
loope
mov
clc
mov
mov
clc
sbb
xor
xchg
out
xchg
jbe
hlt
insl
rcr
fwait
mov
push
pop
je
data16
jnp
add
add
clc
rcrb
clc
sahf
stc
rcll
pop
and
pop
cmp
add
mov
rorb
add
bound
add
and
add
add
imul
cltd
push
mov
pop
dec
lret
mov
jge
or
mov
repnz
data16
gs
inc
clc
lahf
imul
push
add
clc
dec
mov
mov
clc
cmp
add
cmovne
or
xor
das
inc
add
adc
xor
add
push
and
add
xchg
add
add
xchg
dec
lea
enter
sar
in
out
inc
clc
je
and
add
clc
dec
xchg
xlat
mov
add
add
sub
and
add
jg
add
pop
jmp
stc
cwtl
inc
clc
or
clc
xchg
nop
in
fisubrs
clc
inc
clc
cli
push
jmp
lret
scas
cmp
repz
pop
lret
loope
sar
sub
add
insl
mov
clc
adc
add
clc
jp
lcall
xchg
loop
dec
jl
add
pop
mov
add
mov
into
mov
mov
fisubrs
mov
out
push
add
adc
add
add
imul
add
add
mov
add
or
cs
add
xor
add
sub
jge
add
leave
push
bsf
lret
sub
clc
divl
add
std
in
ljmp
clc
or
add
sbb
xor
or
xor
add
mov
mov
aaa
clc
mov
clc
aam
add
mov
clc
push
clc
dec
jmp
adc
add
or
add
mov
clc
cmp
int
clc
cmc
sub
and
cwtl
xor
xor
add
add
ds
cvtdq2ps
inc
clc
out
xor
clc
mov
lret
xor
sti
pop
nop
xabort
mov
add
dec
sbb
add
sub
shlb
rorl
cmp
fcoml
mov
pop
clc
and
add
clc
pop
lea
add
fnstcw
add
cli
mov
lea
clc
or
add
clc
add
xchg
jg
cmp
clc
push
add
add
add
add
outsl
mov
sbb
mov
inc
clc
cmp
clc
out
scas
xlat
test
clc
stc
cmp
add
push
add
dec
movsl
clc
sub
in
stos
mov
mov
clc
inc
clc
adc
add
lods
int
hlt
pop
clc
and
add
cmp
clc
pop
push
mov
clc
in
sub
es
out
dec
jne
aam
push
mov
clc
rcl
call
psllw
add
push
sar
cmp
add
and
add
inc
clc
xabort
and
add
clc
in
jl
jp
jmp
fwait
jb
add
nop
sbb
push
mov
clc
pusha
add
adc
add
das
repnz
add
mov
clc
int
clc
fcompl
push
add
loopne
icebp
push
add
jle
bound
add
out
ljmp
and
sbb
mov
push
add
sar
nop
aad
gs
imul
clc
jle
ret
clc
push
add
or
jge
test
pop
sub
clc
jne
clc
xabort
mov
add
popa
add
cmp
je
in
pcmpgtd
dec
clc
jl
add
mov
test
mov
jnp
clc
in
push
clc
push
adc
inc
clc
cmp
sub
add
mov
test
or
sub
clc
in
xchg
addr16
movsl
clc
dec
and
or
int
add
jmp
inc
add
test
add
add
add
lods
bound
add
mov
adc
ret
clc
fsubr
adc
add
push
add
sar
clc
and
add
add
mov
clc
adc
lret
sahf
xchg
lret
mov
mov
and
add
pushl
enter
clc
and
lods
jb
add
clc
into
mov
dec
dec
push
add
inc
clc
add
add
movsb
clc
cs
xor
mov
clc
dec
loope
pusha
add
test
sub
rclb
enter
icebp
inc
clc
mov
in
out
push
clc
or
inc
add
aaa
rcrb
xabort
clc
jle
clc
jmp
data16
or
dec
inc
clc
pop
clc
in
cmpsb
clc
adc
add
clc
daa
clc
cmp
clc
lods
rcl
sbb
mov
add
pop
cmp
xchg
ja
js
loope
inc
clc
lock
add
or
add
jno
add
clc
push
stc
xchg
cmp
bound
add
insb
loopne
imul
add
add
mov
clc
rcrl
sar
push
pop
outsb
mov
cmp
xchg
clc
out
and
add
arpl
add
jae
js
daa
clc
cs
pop
loopne
mov
mov
xlat
xchg
loope
mov
or
add
fidivs
cs
clc
pop
cmp
clc
xabort
xchg
pop
dec
pop
or
push
and
add
xchg
fs
scas
cmp
add
add
clc
rcrl
lods
clc
mov
jecxz
je
lods
sbb
xor
add
add
inc
add
fdivrl
call
push
jge
add
inc
clc
mov
clc
popl
inc
clc
push
sbb
cld
mov
add
ret
in
adc
pop
lret
and
add
clc
call
ret
clc
jb
add
or
jo
add
add
add
mov
inc
add
mov
clc
add
add
add
pusha
add
inc
clc
dec
mov
xor
dec
sahf
cmp
data16
es
aad
dec
ja
xchg
mov
fisttpl
mov
cmp
inc
clc
jb
add
xchg
lahf
xchg
je
add
adc
add
xchg
or
add
add
xlat
loop
xchg
inc
clc
repz
clc
popa
add
sahf
push
add
cmp
pop
adc
add
add
cld
js
clc
adc
clc
in
add
add
pop
mov
fadds
add
clc
cmp
sar
xabort
clc
cmp
add
sbb
push
add
fs
cmp
clc
and
add
pop
push
add
loopne
push
xor
add
sarb
add
add
xor
add
pushl
addr16
test
xchg
jp
mov
testl
mov
or
mov
clc
mov
cmp
sbb
mov
add
jno
add
cld
iret
sahf
in
inc
add
out
pop
daa
clc
or
into
sub
movsl
clc
std
sar
mov
push
clc
ds
add
data16
in
testb
mov
sbb
std
int3
inc
clc
xor
fistpl
pop
loope
stc
in
jl
add
clc
adc
add
popa
add
cmp
testb
inc
clc
int
adc
leave
ja
data16
xor
add
add
mov
pop
push
add
dec
cwtl
or
xchg
xchg
adc
add
repz
mov
add
or
add
out
cmpsl
clc
ror
inc
add
fs
jge
clc
clc
xchg
sbb
add
clc
mov
clc
test
arpl
add
add
adc
push
cmp
inc
add
pusha
add
frstor
add
xor
add
outsl
sub
adc
add
loope
or
dec
cmp
xchg
mov
es
xor
add
data16
mov
outsl
jno
add
or
sub
add
jne
daa
clc
ret
jge
and
cmp
clc
js
dec
pop
gs
std
inc
clc
xor
mov
out
xchg
in
or
add
sbb
add
clc
cmp
clc
mov
jb
add
mov
ja
mov
adc
add
lock
clc
lea
clc
and
mov
add
icebp
cli
pop
xor
add
aad
inc
add
lock
pop
push
add
mov
test
push
dec
decb
clc
inc
clc
lods
movsl
clc
hlt
sbb
test
stos
mov
add
clc
jbe
xchg
mov
clc
dec
ret
cmp
clc
jbe
cltd
add
add
clc
push
jo
add
inc
add
xchg
sub
and
add
clc
xor
add
add
sub
das
fdivrs
or
loop
aas
and
add
and
sbb
pop
jp
aad
clc
gs
lock
add
sub
sar
out
mov
icebp
adc
add
add
divb
das
jb
add
dec
mov
clc
clc
jb
add
icebp
push
sbb
pop
sub
xlat
pusha
add
cmp
mov
repnz
add
add
add
clc
sar
add
xchg
jle
clc
push
pop
ss
pusha
add
call
xor
add
add
dec
mov
pop
mov
mov
clc
aaa
fisubrs
clc
movsb
clc
mov
in
add
add
jp
mov
pop
outsb
enter
add
push
add
gs
pop
mov
clc
mov
fcmovnbe
cmp
loopne
data16
sbb
mov
or
stos
hlt
cmp
out
fdivr
stos
sbb
clc
es
out
in
ret
clc
and
add
add
and
add
sbb
pushf
mov
add
xor
mov
or
mov
sahf
mov
xchg
cmp
into
push
dec
inc
add
mov
clc
fists
clc
pop
clc
out
leave
ljmp
jecxz
in
jno
add
clc
xchg
push
pop
xor
imul
xchg
lcall
pop
mov
mov
clc
push
add
sahf
push
fstpt
jne
clc
pop
popf
into
mov
clc
cmpsb
clc
mov
add
clc
lret
inc
add
and
cmp
add
cmp
clc
insb
push
fcoms
add
decb
test
jg
clc
test
aas
xchg
scas
and
add
test
ljmp
jmp
clc
rolb
push
add
clc
sub
clc
cli
ret
loope
shrl
mov
sarl
int
sahf
inc
clc
pop
xchg
add
add
insl
jne
sbb
lock
add
xor
clc
mov
lcall
clc
outsb
sub
lret
add
clc
or
clc
out
dec
and
add
sbb
movsb
clc
xor
js
clc
inc
clc
inc
clc
lret
ds
aad
or
loope
sub
sbb
jge
lods
xor
data16
loopne
insb
jmp
data16
mov
fmull
add
scas
lret
fisttps
clc
and
add
add
mov
add
adc
add
clc
jl
clc
arpl
add
xchg
adc
add
add
add
add
fwait
sub
clc
sti
jno
add
and
pusha
add
das
test
pop
outsb
enter
add
jns
mov
mov
jge
cmp
adc
add
add
clc
dec
mov
clc
push
sbb
clc
and
add
mov
add
push
mov
clc
mulb
push
add
aas
cmp
add
popa
add
lret
add
add
pushf
xchg
loop
or
pop
clc
pop
adc
add
in
or
cmp
clc
lock
add
clc
outsb
mov
sbb
add
pop
clc
je
add
dec
xchg
flds
add
cmp
adc
icebp
dec
test
fnstsw
dec
sar
repz
aas
js
push
data16
and
add
cmp
sub
clc
test
clc
push
add
loopne
mov
leave
ret
mov
sar
add
add
fimuls
sbb
popl
add
stc
inc
clc
inc
add
jnp
stos
notb
add
aaa
xchg
mov
add
ja
push
sub
add
loope
push
add
mov
adc
add
ds
jmp
or
add
imull
mov
adc
add
lahf
pop
lcall
clc
sub
shr
push
add
inc
add
mov
add
cmp
add
jge
add
jg
clc
shrb
clc
jmp
mov
jmp
dec
ficoms
add
in
pop
or
mov
ja
clc
shlb
add
cmp
pop
icebp
mov
jb
add
dec
add
add
and
add
enter
movsb
clc
push
dec
jg
push
scas
cltd
aam
fcompl
and
cmp
push
mov
clc
lcall
cmp
mov
enter
xor
add
add
add
clc
adc
add
add
lock
cmp
pop
mov
cli
call
stc
inc
clc
xbegin
xor
mov
add
add
mov
clc
mov
lock
clc
insl
adc
add
clc
loopne
gs
mov
add
clc
pop
sbb
mov
aad
add
mov
loope
xor
add
add
in
and
add
clc
dec
mov
add
dec
push
add
scas
inc
clc
cmc
das
jle
jl
mov
clc
cmp
enter
xabort
pop
scas
add
add
mov
mov
cmp
push
add
pushf
sub
xchg
jecxz
in
inc
add
nop
test
arpl
add
clc
test
cmp
cmp
clc
sar
test
lock
add
add
cmp
repnz
arpl
add
cmp
mov
jmp
clc
jge
mov
add
loop
cli
or
xchg
pusha
add
dec
xor
add
add
loopne
xor
add
adc
add
jge
arpl
add
sbb
xchg
pop
or
mov
clc
jb
add
xor
add
adc
mov
mov
cmp
clc
mov
sub
test
fucomip
pop
inc
clc
loop
adc
add
add
inc
add
insl
push
xchg
paddb
cmp
clc
in
adc
add
add
inc
add
enter
add
or
add
xor
stc
in
int
scas
cmpsb
clc
inc
clc
jno
add
in
clc
jns
mov
clc
adc
add
je
test
mov
adc
xchg
int
add
fwait
std
add
add
push
mov
sbb
add
jb
add
jns
clc
adc
test
mov
ficomps
fsubl
jo
pop
adc
fwait
cmpsb
clc
jecxz
mov
xor
add
dec
out
mov
xchg
cwtl
inc
clc
push
cmpsl
clc
fwait
stos
cmp
lods
sbb
cmpsb
clc
fs
xor
add
add
inc
add
inc
clc
adc
add
clc
jb
add
push
dec
ljmp
add
push
add
adc
lcall
add
scas
sar
int3
daa
clc
mov
fbstp
add
push
sub
add
cmpsl
clc
jb
add
test
dec
add
add
outsl
mov
popa
add
cmp
clc
push
clc
adc
add
add
jb
add
mov
clc
inc
clc
cmp
clc
xchg
pushf
sbb
sub
cmp
sub
clc
xor
add
or
sub
sub
loope
xchg
xor
aad
add
xor
clc
pop
nop
mov
testl
test
or
addr16
xor
jecxz
pop
cmp
into
add
dec
add
add
scas
mov
add
xchg
cwtl
mov
dec
movsl
clc
popf
mov
add
mov
add
xchg
ret
add
cmp
add
sbb
aas
lock
mov
pop
mov
add
and
clc
and
add
add
aam
xchg
mov
scas
fcoms
clc
mov
clc
inc
add
popf
push
or
das
call
mov
lret
iret
mov
je
cmp
in
insb
addr16
cld
pop
inc
clc
cmp
rorl
push
add
inc
add
lcall
add
push
cwtl
and
xabort
add
xor
add
clc
fldln2
addr16
mov
add
mov
add
add
lcall
fs
fwait
imul
pop
out
mov
and
push
add
mov
add
negb
adc
add
sbb
pop
clc
xor
push
dec
rcl
in
ss
nop
mov
cwtl
ja
push
push
add
sti
sub
clc
push
cmp
test
inc
clc
mov
clc
pop
cmp
inc
clc
mov
or
fnstcw
jbe
add
cmp
dec
out
aaa
in
gs
out
push
clc
popa
add
dec
mov
clc
iret
cli
ss
mov
xchg
stos
mov
add
xlat
dec
popf
mov
scas
shlb
add
jl
add
test
lea
add
or
xor
add
je
js
clc
frstor
add
add
stos
add
add
dec
mov
lods
je
fldt
clc
roll
add
mov
mov
fadds
add
test
sbb
clc
cmpsl
clc
jmp
clc
cli
aas
mov
fs
faddl
add
roll
inc
add
filds
add
push
push
int3
sar
bound
add
add
jg
push
push
clc
or
clc
jmp
jb
add
add
add
xor
add
in
loop
cltd
pop
std
inc
add
jmp
pop
inc
add
pop
data16
sarb
and
add
in
inc
clc
xchg
cltd
adc
add
movsl
clc
sub
clc
push
loopne
jmp
fldl
add
or
xchg
test
dec
push
hlt
mov
add
rolb
daa
clc
sbb
lahf
adc
add
test
jmp
or
add
seto
sbb
add
pop
pop
mov
add
pop
scas
cmp
add
test
clc
or
xor
add
clc
dec
cltd
mov
add
or
adc
mov
xchg
cmp
scas
aas
add
mov
add
stos
popa
add
cltd
pop
inc
clc
test
clc
fistl
cmp
in
sbb
mov
add
add
add
add
add
add
xchg
iret
or
mov
mov
add
cmp
popa
add
aas
or
scas
aam
mov
add
dec
aad
dec
add
add
push
jb
add
clc
or
dec
jbe
adc
add
add
push
add
lods
lcall
stos
lock
add
lock
xchg
in
sahf
ret
clc
mov
add
sbb
clc
lea
xor
outsl
jae
add
movsl
clc
sub
inc
clc
cmp
cmp
pop
sub
or
ret
clc
pop
mov
pop
mov
ret
dec
aam
mov
add
xor
add
jmp
addr16
pop
clc
add
add
sbb
clc
add
add
vcomiss
add
data16
cwtl
cmp
add
in
lcall
jle
clc
bound
add
cmp
fmull
push
add
leave
cmp
jmp
xor
add
add
ds
dec
ficoml
add
jp
clc
push
or
clc
hlt
jle
clc
scas
popf
xchg
pop
mov
adc
xchg
lea
aaa
jo
add
clc
pusha
add
xchg
or
or
bound
add
push
clc
cmp
add
pop
xbegin
sar
jmp
clc
flds
clc
maxps
clc
sbb
add
ret
clc
or
mov
xor
add
cmc
lods
shrb
mov
clc
adc
add
jg
in
cs
clc
mov
dec
jno
add
push
add
dec
hlt
cmp
add
leave
data16
or
pop
clc
sar
lods
sbb
and
add
clc
jp
clc
incl
add
add
pop
sahf
int3
cld
leave
int
lcall
xchg
pop
sbb
clc
insb
aad
pop
jb
add
mov
clc
jmp
mov
sub
adc
add
xchg
mov
jmp
xchg
fwait
pop
pop
xor
add
jl
jbe
clc
or
clc
push
lahf
sbb
jnp
insl
sti
hlt
dec
push
push
add
loope
push
fs
dec
dec
jmp
icebp
outsl
arpl
add
clc
out
popf
leave
jp
push
mov
out
sbb
pop
add
add
pop
out
daa
clc
out
frstor
add
xor
add
add
mov
add
sbb
xlat
jmp
hlt
mov
mov
cmp
dec
xbegin
aam
push
imul
add
lret
mov
add
jns
dec
es
jp
jp
movd
add
fstl
add
mov
push
stc
mov
add
push
clc
mov
out
push
add
sbb
mov
clc
and
add
sar
stos
call
lods
scas
mov
sahf
dec
shll
lahf
jmp
lock
clc
imul
jle
xchg
vrcpps
add
mov
pusha
add
push
add
repz
add
cmpsb
clc
cs
cltd
mov
add
clc
out
inc
clc
sti
sub
xchg
or
push
nop
daa
clc
in
test
hlt
pop
add
add
add
add
add
cwtl
jecxz
xor
add
test
clc
cmpsb
clc
mov
clc
inc
clc
fnstsw
clc
movsb
clc
sub
faddp
clc
jne
push
jecxz
mov
pop
mov
clc
pop
push
cmp
adc
add
ljmp
clc
jle
jg
jg
arpl
add
ja
clc
cmp
xchg
pop
out
inc
clc
adc
add
movsl
clc
xor
add
pushf
sar
push
push
incb
and
add
cli
mov
add
pushf
jo
add
sar
fcmovbe
adc
add
add
jecxz
adc
mov
test
clc
mov
repz
clc
dec
sti
jns
clc
xchg
mov
jge
clc
push
hlt
push
inc
add
or
jnp
clc
enter
clc
cmpsl
clc
fs
pop
enter
sub
clc
enter
movsl
clc
inc
clc
pop
and
popa
add
cmp
clc
jmp
add
roll
sti
mov
add
add
je
imulb
clc
jno
add
clc
clc
bound
add
or
clc
adc
add
clc
jg
je
xor
add
ja
jo
add
repnz
add
add
ss
int3
fs
mov
xor
sbb
xor
add
adc
add
xbegin
stc
in
push
clc
stc
pop
push
sar
incl
add
mov
dec
jnp
and
imul
dec
mov
pop
xor
add
add
repz
clc
shll
push
hlt
adc
add
pop
dec
adc
jne
add
jecxz
fadd
clc
aaa
in
pop
insb
and
dec
and
add
jae
add
pop
cwtl
or
data16
sar
dec
imul
inc
clc
cwtl
fdiv
dec
test
lock
in
arpl
add
clc
cmc
loope
xchg
push
add
adc
add
xor
jo
add
jno
add
mov
adc
add
add
add
test
sti
and
add
mov
add
clc
dec
cmp
imul
xor
add
dec
mov
add
xchg
mov
clc
lret
add
clc
in
dec
mov
or
xor
cmp
clc
cmp
xor
add
out
cmp
xor
jns
clc
add
add
cmp
clc
test
xchg
popf
mov
pop
xor
pushf
leave
icebp
je
push
cmpsb
clc
jbe
lock
xor
add
add
clc
jecxz
push
add
imul
xchg
scas
xchg
lods
ljmp
add
rcrl
scas
int
rolb
mov
clc
aas
fdivs
add
clc
dec
jno
add
fsubs
loopne
push
add
ss
add
lods
push
out
mov
clc
xchg
inc
add
sub
sbb
ficoml
or
sub
clc
loope
daa
clc
cs
mov
clc
adc
add
add
inc
add
loopne
mov
in
push
add
cmp
clc
sub
clc
sahf
pop
or
inc
add
ljmp
sub
clc
pop
cli
or
call
inc
clc
inc
clc
gs
push
add
mov
jbe
data16
mov
daa
clc
jl
clc
or
mov
and
add
mov
clc
mov
add
test
push
or
clc
xor
add
data16
int
clc
fnstenv
loop
cmpsb
clc
sbb
jo
add
xor
out
jecxz
jp
add
jmp
clc
push
icebp
mov
pop
or
jecxz
in
mov
nop
xor
add
clc
dec
aaa
adc
add
add
clc
movsl
clc
mov
daa
clc
mov
clc
and
add
adc
add
add
sbb
inc
clc
fldcw
gs
fstpl
clc
cltd
jmp
shlb
add
cmc
dec
push
jle
enter
outsl
push
addr16
pop
lods
std
daa
clc
clc
dec
pop
xchg
popa
add
pop
sub
clc
or
clc
xlat
xchg
jo
add
out
cmp
out
dec
out
mov
jmp
clc
lret
ret
clc
test
loope
cmp
xor
push
test
out
push
pop
imul
or
or
add
cmp
xchg
cs
push
or
add
aas
mov
sahf
out
es
sub
pop
mov
dec
arpl
add
clc
adc
sbb
clc
pop
inc
add
sar
dec
enter
sub
jle
loope
lahf
inc
add
mov
test
xor
add
clc
pushf
fimuls
clc
xor
add
test
clc
xor
cwtl
leave
push
add
xchg
sub
cli
fnsave
out
mov
je
add
cmpsl
clc
mov
add
ja
es
push
add
out
jne
or
add
stos
pop
jecxz
dec
xbegin
data16
fsts
add
add
insl
leave
jecxz
push
xlat
fildl
xor
add
add
clc
mov
sub
jbe
mov
clc
cmp
arpl
add
clc
shll
cmp
fdivrl
xor
add
jl
bound
add
clc
mov
add
pop
mov
sahf
push
clc
movsb
clc
out
inc
add
sar
mov
adc
add
int
mov
add
dec
mov
add
add
sbb
push
imul
test
mov
dec
testb
add
mov
add
add
add
adc
add
jb
add
lea
mov
xor
add
mov
dec
mov
xchg
pushf
rorl
mov
add
inc
clc
lahf
xor
add
psubq
clc
clc
jnp
clc
ss
add
or
clc
mov
fld
clc
pop
jmp
add
add
add
bnd
inc
clc
cmc
dec
jge
add
in
dec
push
aad
bound
add
pop
pop
shrb
out
hlt
mov
and
jecxz
insb
clc
iret
sbb
and
add
out
mov
into
mov
add
dec
in
aam
add
data16
mov
add
add
xchg
push
add
jbe
cmp
or
jnp
add
icebp
xchg
push
add
cmpsl
clc
aam
jns
inc
add
je
sbb
clc
ja
mov
add
add
test
fldlg2
lea
push
xor
add
add
add
clc
clc
add
add
add
or
adc
add
add
in
insl
sti
mov
add
loope
movsl
clc
push
cmc
lret
jp
add
or
js
xchg
iret
mov
add
add
cli
jae
add
mov
add
mov
decl
and
mov
ret
clc
popf
jecxz
sbb
jmp
cmpsl
clc
jns
clc
outsl
cmpsl
clc
sar
imul
clc
push
add
dec
add
add
jp
and
add
fwait
add
add
dec
pop
movsl
clc
insl
jns
scas
mov
add
sarb
add
add
clc
out
mov
jo
add
dec
push
add
push
push
add
sbb
add
add
lods
xor
add
pop
add
cmp
add
fs
sub
mov
mov
insl
jns
add
add
adc
add
sbb
add
mov
clc
out
in
dec
mov
add
arpl
add
sbb
inc
clc
xchg
in
popf
jg
clc
fldcw
fsubl
add
xchg
dec
pusha
add
inc
clc
xlat
or
add
clc
mov
pop
sahf
bnd
mov
push
push
mov
add
sub
add
xchg
iret
jae
add
pop
or
add
pop
inc
add
out
mov
hlt
fchs
clc
jbe
add
fcomp
fisubrs
adc
add
mov
clc
push
clc
fistpl
and
and
add
cli
sahf
cltd
jecxz
xchg
sub
add
add
lods
lahf
jl
leave
ret
in
push
cmp
clc
enter
clc
out
mov
enter
cmp
cmp
add
add
add
mov
add
addr16
arpl
add
cwtl
lret
call
fstps
enter
in
mov
mov
clc
movsb
clc
mov
mov
testl
and
add
adc
sbb
sbb
stc
hlt
fs
xchg
inc
clc
dec
inc
clc
pop
mov
inc
clc
or
add
stc
loopne
imul
fstl
clc
sub
aas
movsl
clc
sar
xor
add
add
mov
add
add
sub
adc
mov
add
nop
inc
add
xchg
out
xchg
cli
mov
clc
mov
sbb
dec
cmp
popa
add
hlt
je
xchg
ret
clc
dec
xchg
mov
clc
jne
add
add
cli
mov
add
fimull
rclb
add
xor
add
add
cmp
pop
clc
aaa
mov
cmp
cwtl
inc
add
in
push
in
dec
shrb
push
in
or
in
cmpsl
clc
cmpsl
clc
mov
jmp
add
push
lcall
jge
jmp
add
clc
cmpsb
clc
mov
dec
stos
or
add
add
stos
dec
sbb
push
mov
push
inc
add
mov
int
clc
push
sub
add
mov
clc
lahf
ficoms
inc
add
cmp
add
add
scas
mov
imul
stos
xchg
cmc
jg
jmp
cmp
add
inc
clc
je,pt
fsubs
add
xor
add
add
ret
clc
bnd
add
add
in
mov
clc
jge
out
xor
cmp
add
and
mov
clc
dec
cmpsl
clc
test
or
clc
xchg
pop
clc
jle
add
pop
inc
add
and
add
into
pop
mov
clc
js
sbb
jnp
add
sar
leave
out
cli
sub
xchg
das
lods
mov
add
lcall
add
cmp
rcrb
enter
inc
clc
aam
add
cmp
mov
cmp
inc
clc
push
add
jg
xlat
popa
add
in
xor
pusha
add
or
cli
add
add
clc
je
jmp
fdivs
mov
clc
outsl
cmp
call
push
mov
fdivrl
add
popf
aad
mov
cmp
clc
sub
jmp
pop
repnz
sub
add
clc
jl
movsb
clc
loop
xor
add
add
push
xlat
shrl
in
mov
add
clc
push
add
push
add
mov
pop
clc
data16
xchg
xchg
xchg
jbe
test
sub
in
mov
test
repnz
adc
inc
add
in
inc
clc
outsb
notb
add
lcall
cmp
clc
test
xlat
popf
cmc
ss
xor
add
jns
frstor
clc
push
add
stos
ds
add
pop
leave
lods
add
push
add
adc
add
mov
cmp
clc
cmp
clc
aad
insb
icebp
mov
xchg
popf
sahf
lods
mov
clc
pop
xor
clc
cs
xor
add
add
mov
or
add
ret
std
mov
pop
cltd
pop
clc
pop
sti
jae
add
add
in
imul
movsl
clc
fcomps
and
add
add
faddl
add
popa
add
dec
adc
add
clc
pusha
add
outsl
int3
shl
clc
sbb
push
add
rcll
add
sbb
clc
xchg
out
fildll
mov
clc
add
add
clc
inc
clc
out
sti
jne
flds
or
clc
nop
cmp
aas
fwait
jns
fistps
and
mov
or
fcompl
mov
add
add
dec
mov
pop
sahf
scas
jb
add
leave
cmpsl
clc
pop
fisttpll
push
sbb
clc
xchg
sbb
sub
int3
ljmp
insb
sahf
cmp
push
pop
loope
dec
sub
dec
hlt
and
mulb
add
push
or
clc
data16
in
stos
daa
clc
cmpsl
clc
int
adc
add
fsubp
clc
imul
xchg
lret
jno
add
push
clc
sti
and
add
add
lahf
sahf
sub
jb
add
add
stos
sbb
mov
and
add
js
add
mov
pop
pop
or
add
std
lods
in
jl
mov
sbb
das
cmpsb
clc
decb
add
add
int3
adc
adc
add
icebp
push
leave
enter
imul
xor
lahf
cltd
cld
adc
add
clc
repnz
add
add
add
pop
arpl
add
clc
mov
cmc
aas
push
leave
jne
or
add
gs
mov
add
add
lret
sar
clc
cmp
add
fcompl
mov
add
test
mov
js
add
lods
fists
repnz
cli
adc
jb
add
add
xor
add
add
pop
xor
add
or
je
xchg
std
sar
add
dec
outsl
sub
push
add
mov
clc
ss
clc
jae
add
xor
jo
add
cmpsb
clc
ret
clc
push
repz
sub
dec
dec
and
add
clc
jmp
lahf
enter
fs
in
imul
insb
dec
and
add
clc
test
mov
or
in
xchg
mov
clc
sti
jb
add
clc
xchg
adc
add
sbb
mov
sar
add
mov
outsb
into
ret
mov
add
iret
cmp
and
add
xchg
sti
mov
lods
sub
clc
shrb
clc
and
add
sub
push
cmp
cmp
push
add
out
jo
add
clc
pusha
add
fmulp
pop
add
pop
pop
sub
sub
add
loope
out
filds
add
fsubrl
sbb
std
mov
and
add
add
sbb
add
repz
scas
ficompl
pop
stc
mov
test
mov
loope
cmpsb
clc
xor
add
in
mov
in
repnz
pop
adc
mov
add
cmp
inc
add
outsl
add
add
nop
sbb
leave
rolb
clc
lcall
int
icebp
cmp
inc
add
mov
dec
jge
test
add
clc
out
fnstsw
clc
sti
inc
clc
rcrb
add
daa
clc
insb
and
add
clc
fnstsw
cmpxchg
clc
je
jb
add
add
add
push
clc
mov
dec
xor
add
out
jg
scas
stc
dec
jb
add
inc
clc
mov
add
add
and
in
jecxz
rorl
adc
add
insb
and
test
sti
aas
xchg
jp
add
loop
sbb
xor
add
mov
xlat
cmp
sub
popf
adc
add
add
adc
dec
imul
push
dec
push
mov
jno
add
push
je
clc
xor
pop
pop
outsl
add
add
inc
clc
idivb
je
add
stc
test
scas
leave
xchg
jo
add
clc
test
std
ret
clc
mov
cmp
inc
add
pop
ret
clc
mov
lock
clc
pop
dec
lcall
fcomip
mov
sub
test
add
stc
cmp
pop
lret
add
add
clc
filds
inc
clc
push
mov
clc
mov
add
push
in
mov
xor
add
clc
adc
add
cmp
ds
clc
adc
add
clc
ja
dec
xchg
mov
add
ja
clc
add
add
in
mov
jmp
sar
add
test
inc
add
iret
into
loopne
cmp
das
bound
add
inc
clc
or
add
or
clc
dec
pop
daa
clc
or
mov
pop
repz
inc
clc
lahf
fs
cmp
dec
pop
scas
data16
fcoms
add
adc
add
loopne
mov
aad
clc
sbb
negl
inc
clc
dec
xchg
sbb
jp
clc
xor
mov
cwtl
cltd
jecxz
rcrl
or
clc
push
lods
mov
ja
mov
loopne
dec
sub
adc
add
mov
je
pushf
cmp
fs
inc
clc
mov
xor
add
jo
add
add
pusha
add
imul
add
add
and
sbb
mov
or
cs
insb
jo
add
test
imul
cmpsb
clc
loop
push
add
mov
xchg
and
cmp
add
add
add
adc
or
add
xchg
lret
insl
inc
add
stc
push
add
inc
clc
fwait
cs
cs
fnsave
inc
clc
gs
aaa
std
insb
cwtl
jae
add
add
clc
or
clc
ja
clc
inc
add
mov
inc
clc
jns
clc
jecxz
jnp
lret
clc
or
or
into
add
add
xlat
xabort
pusha
add
cmp
add
mov
pop
cld
lahf
push
clc
int
es
es
sbb
clc
inc
clc
push
jnp
push
clc
fcmovbe
and
add
pop
pop
add
add
add
xor
add
fsubr
shrl
clc
sub
and
add
mov
out
dec
cwtl
sar
clc
repnz
enter
mov
fdivrs
pusha
add
sbb
add
insb
cltd
insl
insl
add
add
add
add
fistpll
lea
clc
fs
xchg
jb
add
out
call
jecxz
push
mov
adc
add
clc
aad
add
push
je
cmp
or
mov
sub
xor
add
add
leave
sar
pop
stc
insl
cmp
add
cwtl
xchg
mov
pop
int3
push
jbe
add
mov
xchg
jbe
and
add
add
out
adc
or
sub
add
add
dec
repz
add
sar
mov
cmp
hlt
gs
inc
clc
enter
rclb
add
sahf
outsl
iret
loop
xbegin
clc
aad
loop
test
add
xchg
out
inc
clc
pop
pusha
add
add
js
add
testl
xchg
imulb
push
data16
sbb
jb
add
pop
sub
clc
cmp
xchg
mov
and
add
add
ret
add
pop
enter
mov
jmp
add
pusha
add
inc
add
stos
mov
push
fstps
clc
stc
push
cmpsb
clc
insb
int
add
add
add
stc
and
add
jnp
clc
mov
sahf
cmpsl
clc
test
sbb
xabort
lret
jge
lods
or
push
push
inc
clc
add
stos
mov
jmp
bound
add
imul
clc
pop
mov
add
adc
add
cmp
shll
insb
xor
add
clc
lods
jmp
fsts
ljmp
jge
xchg
xlat
mov
test
add
push
add
push
testb
pop
push
adc
add
add
rcl
test
scas
icebp
push
add
add
clc
pusha
add
sbb
clc
icebp
out
add
add
add
gs
push
add
loope
aad
clc
out
add
add
clc
addr16
jg
push
clc
jecxz
sti
mov
out
loopne
inc
add
popl
ret
clc
stc
cmp
das
cld
fmuls
xchg
pop
cltd
pop
jnp
out
aad
mov
or
imul
aas
fisttps
sar
fdiv
xchg
jmp
sahf
lock
stc
fildll
sub
clc
pop
sahf
into
fcmovu
mov
mov
xchg
enter
add
xchg
imul
lods
push
stos
aaa
fsubrp
inc
clc
adc
add
add
add
add
sbb
add
and
add
clc
mov
add
jecxz
sbb
push
add
or
clc
jmp
inc
add
mov
sahf
or
add
dec
test
xlat
int3
sbb
pop
clc
cltd
shlb
add
cmp
clc
inc
clc
std
jns
xor
ds
cmp
fcmove
out
aad
push
inc
clc
xor
add
cltd
cmp
add
out
mulb
add
add
mov
test
jp
clc
cmp
cld
in
loop
jns
clc
dec
mov
cmp
clc
imul
mov
jne
xchg
inc
clc
mov
fistps
cld
add
add
xchg
in
or
clc
pop
sbb
in
int3
sbb
add
add
clc
enter
add
add
add
cmp
sub
test
in
mov
push
lret
sub
adc
add
stos
adc
add
add
pop
clc
cmp
cmpsl
clc
add
add
ss
clc
add
add
pop
dec
sub
push
inc
clc
adc
add
or
clc
xlat
sbb
add
lret
mov
add
and
sbb
or
aad
int3
add
add
mov
xor
add
xabort
and
add
clc
mov
mov
mov
pop
clc
cmp
cmp
clc
fs
push
data16
sbb
ja
add
stos
mov
add
add
int3
cmp
sbb
ja
mov
stos
je
inc
add
in
out
jns
add
out
js
stos
add
add
clc
pop
clc
sarl
mov
jb
add
clc
push
stc
add
add
add
mov
clc
jae
add
dec
mov
shll
clc
inc
clc
cmp
mov
mov
dec
jg
clc
cmp
mov
enter
cltd
ret
es
mov
mov
add
in
jge
cmp
sbb
add
outsb
adc
add
push
rorl
fstps
mov
inc
clc
add
add
bound
add
cwtl
pop
clc
shrl
stos
stos
int3
inc
clc
cmp
and
add
clc
mov
clc
repnz
add
clc
pop
bound
add
clc
test
jo
add
in
gs
jl
jbe
clc
push
dec
push
add
xlat
pop
clc
pusha
add
cmp
test
inc
add
mov
clc
int3
add
add
clc
aad
dec
int3
or
add
out
sbb
cltd
xor
jae
add
out
pop
adc
add
clc
mov
mov
xchg
pop
xor
add
sbb
clc
loopne
add
add
jecxz
push
notb
aad
insb
std
in
jecxz,pn
add
adc
add
add
int
jle
clc
pop
out
xchg
jno
add
clc
fiadds
gs
adc
add
jecxz
jno
add
add
add
add
add
jle
add
mov
inc
add
cli
push
push
fsub
clc
or
clc
std
popf
dec
daa
clc
mov
add
push
mov
lods
sbb
insl
mov
fstps
clc
xchg
rol
clc
inc
add
fnstcw
mov
xchg
fdivrs
add
loope
cmp
add
and
add
add
clc
es
push
push
sub
repnz
mov
stos
or
mov
in
lods
aaa
pop
mov
stc
pop
std
ds
xor
add
add
mov
clc
mov
adc
add
add
shlb
add
pop
test
hlt
fildll
cmp
clc
jns
hlt
insl
inc
clc
or
iret
cmp
add
add
inc
add
inc
clc
inc
clc
sub
clc
push
clc
dec
je
cmp
out
inc
add
push
sbb
pop
cs
add
testl
ret
ja
ja
in
pusha
add
pop
loopne
rorb
push
add
cmova
ss
mov
stos
in
outsb
or
aas
pushl
pop
pop
xchg
adc
add
or
cmovs
ja
mov
clc
cli
inc
add
jle
data16
int3
pop
maskmovq
imull
mov
imul
sar
mov
add
clc
pop
rcll
fs
jbe
xchg
xchg
xchg
dec
mov
xchg
adc
add
add
xbegin
paddq
add
sub
or
jl
clc
notl
add
and
add
and
add
lea
mov
nop
sbb
icebp
sub
xlat
decb
sbb
or
adc
add
insl
xor
add
cli
mov
jmp
repz
clc
loopne
dec
idiv
stos
pop
iret
inc
clc
jle
repnz
clc
mov
clc
je
mov
mull
clc
push
or
pop
mov
stc
xchg
or
sbb
roll
scas
nop
cmp
inc
clc
out
imul
hlt
in
add
add
in
std
mov
jle
sbb
lea
sahf
adc
xchg
add
add
clc
mov
mov
adc
add
iret
loope
ss
xor
add
adc
add
aas
rcll
xchg
div
ror
js
lret
bound
add
fsts
stos
movsl
clc
fsubl
clc
inc
clc
mov
addr16
js
cmp
jl
add
inc
clc
cmp
out
jp
fdivs
add
inc
clc
and
add
out
ret
push
cmp
add
bound
add
add
add
add
lea
cmp
or
xchg
mov
clc
test
mov
pop
jle
lods
ret
clc
and
add
sub
add
clc
inc
add
call
mulb
jmp
add
add
sub
std
mov
push
pusha
add
negl
mov
mov
pop
cmpsl
clc
jle
clc
arpl
add
push
add
leave
dec
xchg
jg
leave
or
pop
and
add
loope,pt
cwtl
adc
add
pop
jnp
gs
mov
add
xchg
cli
adc
and
add
add
and
add
lahf
mov
clc
pop
movsb
clc
sub
dec
mov
add
lods
push
add
psubusb
cmpsl
clc
pop
ljmp
clc
vrcpps
add
mov
mov
mulb
scas
fs
ja
cmp
add
insb
mov
test
add
clc
or
lret
dec
sti
scas
add
add
add
add
ret
clc
adc
add
mov
clc
bound
add
imul
fs
mov
clc
test
add
clc
mov
pop
mov
clc
testl
add
inc
clc
pop
fxch
call
clc
clc
mov
cwtl
mov
clc
and
cli
pop
xor
ljmp
ficoms
je
js
pop
outsb
imul
repnz
popa
add
cmp
clc
out
imul
add
xor
add
aad
push
sbb
clc
mov
pop
rorb
add
add
push
mov
loop
push
es
cmp
jns
insl
das
imul
or
xor
add
add
ljmp
add
dec
je
clc
adc
popa
add
push
mov
clc
mov
clc
mov
pop
xabort
scas
or
and
add
dec
push
data16
rcrb
clc
adc
mov
add
mov
jno
add
mov
lcall
adc
add
mov
clc
fs
mov
je
sub
cmp
clc
addr16
jge
clc
sub
ffreep
clc
cmp
loop
aad
add
mov
addr16
in
cmpsb
clc
std
int3
popf
fdivrs
mulb
add
add
lea
add
aam
and
add
and
add
add
mov
clc
mov
adc
add
insb
ficoml
scas
dec
adc
add
xor
add
int3
pop
sbb
xchg
shr
jmp
push
add
es
js
add
ja
pushf
shlb
rorb
xlat
jge
stc
xor
add
int3
popf
mov
xor
add
clc
adc
test
add
std
mov
mov
test
clc
adc
setns
add
and
add
mov
mov
imul
clc
sahf
mov
jmp
out
mov
clc
push
mov
add
sub
add
mov
mov
call
add
frndint
lock
rclb
add
push
mov
imul
cld
sar
cs
arpl
add
bound
add
mov
lcall
add
test
arpl
add
nop
cmp
out
sar
cmp
into
push
jge
add
mov
fs
fbstp
add
cmpsl
clc
add
add
scas
sbb
incb
clc
test
clc
movsb
clc
fcmovnb
clc
xor
add
add
add
cmp
push
imul
in
add
add
push
pusha
add
xor
add
inc
add
out
out
adc
dec
clc
cmc
mov
cmp
adc
add
leave
fsub
clc
in
push
repz
sarl
sar
sbb
jmp
clc
pushl
je
inc
clc
in
xor
add
add
dec
in
outsl
pop
or
icebp
imul
add
decb
out
rcrb
or
clc
test
add
pop
icebp
jb
add
xbegin
xchg
cmp
add
clc
mov
jno
add
add
iret
xbegin
add
cltd
test
movsb
clc
push
push
inc
clc
inc
add
ret
clc
or
lods
sub
cmp
jecxz
lahf
pop
aad
clc
push
mov
cmc
test
xchg
lods
jbe
xlat
sar
inc
add
scas
or
clc
imul
repnz
jmp
adc
leave
jo
add
add
mov
clc
popa
add
mov
clc
cs
add
sti
lcall
test
xchg
push
ficoms
add
fwait
xchg
xor
add
pusha
add
adc
add
clc
repz
clc
into
dec
ds
mov
or
clc
push
cmp
loop
insl
sub
fidivl
add
mov
cltd
out
push
cld
enter
mov
push
fldl
xchg
out
stos
adc
add
add
sub
shl
clc
cmp
clc
stos
pop
mov
nop
jns
add
call
pop
clc
out
icebp
jle
add
fsts
cmp
mov
mov
iret
stos
ss
cltd
push
add
mov
sbb
sub
clc
sbb
sub
loope
mov
inc
clc
sbb
xchg
je
clc
rclb
add
in
lea
inc
clc
xchg
in
aam
adc
leave
jp
in
imul
das
hlt
std
xor
add
clc
mov
add
icebp
xor
add
adc
add
clc
xor
or
inc
clc
inc
clc
mov
add
mov
add
jns
movsl
clc
and
add
mov
clc
scas
in
cli
flds
add
loop
loopne
je
repz
sub
inc
clc
clc
sbb
add
int
and
push
sub
push
add
sbb
stos
mov
clc
mov
sar
push
adc
add
mov
fisubl
pop
mov
xor
add
clc
push
clc
stos
and
add
jecxz
ja
int
adc
add
stos
and
add
fisubrl
lahf
mov
outsb
fmull
mov
leave
je
clc
aam
sar
add
sub
inc
clc
xor
in
add
add
sbb
ds
loop
xabort
push
cmpsb
clc
nop
fwait
mov
add
ss
imulb
pop
stos
xchg
pop
cmp
add
lods
ret
int3
rcl
fdivr
mov
dec
cmc
pop
clc
das
and
pushf
inc
clc
xchg
rol
clc
loop
mov
lcall
xchg
sbb
add
xlat
cmp
add
test
add
add
clc
xor
fdiv
xchg
test
cmp
clc
call
pop
cmpsl
clc
pop
and
add
clc
mov
pusha
add
mov
int3
adc
add
add
adc
add
mov
add
push
add
sbb
add
jle
sbb
or
and
add
mov
pop
enter
add
add
ss
gs
cs
clc
cld
outsb
and
add
lret
fsubrl
add
dec
jge
inc
add
add
add
add
fwait
clc
jge
clc
mov
push
ficompl
xchg
aam
sbb
mov
std
dec
cli
pop
pop
aas
sub
clc
mov
fsubs
clc
push
add
pop
stc
ljmp
add
push
push
daa
clc
cmpsl
clc
daa
clc
ret
mov
jno
add
in
repz
clc
decb
add
lret
add
clc
movsl
clc
mov
aaa
mov
push
test
clc
xor
add
xchg
mov
popf
adc
add
add
nop
mov
enter
clc
scas
sub
pusha
add
dec
or
cld
add
add
cltd
scas
lea
insl
add
add
call
inc
clc
shlb
clc
pushf
cwtl
sahf
xor
add
push
dec
mull
sti
data16
dec
cmp
cld
push
add
add
arpl
add
add
clc
nop
cmp
fld
clc
push
sbb
sub
add
clc
pop
clc
movsl
clc
scas
cmp
mov
add
lcall
xor
add
std
test
inc
add
xor
add
lods
popf
and
jmp
jbe
pop
xchg
aad
test
movsl
clc
mov
cmp
add
xchg
jge
aaa
inc
clc
adc
add
arpl
add
and
add
mov
pop
push
add
dec
mov
mov
add
dec
out
loope
xchg
mov
mov
jne
add
push
sub
add
inc
add
lods
mov
add
clc
xabort
leave
jp
ds
fldcw
inc
add
ss
cs
jb
add
ret
jp
xbegin
sub
sbb
ljmp
xchg
popf
mov
mov
clc
enter
add
loopne
repnz
test
jge
xbegin
ds
loop
ja
clc
and
cmp
neg
test
ret
ss
imul
clc
mov
sub
clc
sahf
aas
xchg
inc
clc
dec
pop
clc
mov
clc
aam
fstps
jno
add
jb
add
add
cmp
mov
movsb
clc
and
push
mov
inc
clc
sbb
stos
push
sbb
clc
popa
add
adc
add
ss
sub
clc
in
in
scas
add
jne
pop
out
jne
mov
dec
bnd
clc
sti
pop
pushf
cmp
push
fs
mov
or
test
lret
ja
pop
xor
add
clc
out
inc
add
cld
adc
clc
pop
lahf
xchg
adc
add
and
add
clc
stc
out
or
clc
push
add
pop
mov
clc
push
fistpll
scas
ret
clc
xchg
push
hlt
ljmp
add
mov
mov
sbb
clc
adc
add
xchg
sub
clc
outsl
push
clc
fsubp
clc
sahf
loop
inc
add
adc
scas
cmp
mov
clc
sbb
fwait
jge
aas
sahf
adc
sub
add
xchg
mov
sbb
in
loop
sbb
cwtl
ja
and
jp
shlb
add
mov
add
cmp
pop
add
add
mov
cmp
jge
int3
sbb
xchg
fildl
clc
test
loop
xor
add
in
fdivrp
mov
clc
ret
clc
scas
in
out
pop
clc
jmp
or
xchg
aaa
js
adc
xor
add
pop
imul
fldl
cmp
xor
or
add
xabort
add
pop
clc
jl
add
adc
add
add
add
adc
add
add
stc
test
cmc
cmp
cmp
clc
sti
cs
add
xor
sub
sbb
mov
jecxz
std
and
mov
xchg
int3
sti
fistl
clc
lret
mov
movsl
clc
add
add
cltd
sub
dec
cmp
mov
add
gs
xchg
xchg
xlat
inc
add
in
jno
add
clc
sbb
clc
pop
xor
add
add
scas
push
add
and
add
add
add
mov
clc
xor
daa
clc
fstps
cmp
cmp
aaa
xbegin
pusha
add
jae
add
add
pop
xchg
mov
add
cmp
jnp
clc
push
std
shl
mov
adc
add
add
xchg
scas
mov
pop
ret
jg
clc
js,pn
sahf
adc
sub
add
ljmp
xchg
sub
or
jge
cmp
mov
clc
lcall
add
lcall
mov
pop
and
clc
cmp
sub
add
popf
fs
sbb
add
adc
mov
sbb
mov
popa
add
sbb
cmpsb
clc
clc
popf
stc
push
add
cmpsl
clc
cmp
clc
and
js
clc
sub
add
mov
add
in
or
or
inc
clc
pop
sub
add
dec
pop
gs
rcrl
add
mov
sarl
or
fmuls
cmp
clc
sar
clc
movsl
clc
sbb
sub
out
fs
roll
add
add
add
and
add
add
jnp
aas
out
mov
sbb
mov
inc
add
lret
and
add
add
outsl
das
push
add
cmovno
add
mov
fs
or
inc
add
and
add
add
dec
xchg
add
add
inc
add
inc
clc
push
das
add
add
mov
jmp
add
fucom
clc
imul
add
mov
xchg
fcmovnbe
add
add
adc
clc
pop
data16
aad
clc
sahf
std
push
sub
add
mov
insl
mov
dec
test
add
sahf
xor
add
dec
gs
test
cmp
clc
scas
mov
jmp
add
cld
sbb
test
clc
cmp
dec
lret
jmp
jl
and
add
push
add
add
jge
push
pop
push
cltd
scas
cwtl
adc
clc
pop
fstpl
outsb
lret
sar
mov
add
or
and
add
add
movsb
clc
and
add
sub
and
add
sbb
add
sbb
stos
sar
add
jne
aad
adc
clc
cmc
xbegin
inc
add
data16
pop
xor
add
scas
push
pop
push
clc
leave
lea
loope
push
clc
scas
xor
add
test
clc
sar
add
add
add
xor
xor
clc
dec
and
add
clc
push
clc
pop
pop
aaa
mov
add
je
mov
sbb
jnp
aad
mov
add
mov
insb
sub
add
jns
jmp
sub
add
or
nop
lret
add
dec
in
aam
stos
cld
or
add
add
add
inc
clc
test
cmp
clc
sar
add
pop
pop
lods
div
mov
add
jno
add
lock
fistl
add
shlb
add
inc
add
dec
push
jb
add
sar
xbegin
jb
add
clc
lea
add
add
fists
add
push
add
inc
add
outsl
stos
test
pop
aaa
sbb
clc
xchg
or
clc
jo
add
add
rcll
enter
mov
fcmovnbe
hlt
icebp
adc
dec
out
stos
sbb
jle
adc
add
fsubs
adc
add
push
sub
in
insb
pop
and
testb
clc
cmc
popf
rolb
jmp
in
int3
xor
add
clc
dec
sbb
add
clc
mov
aad
push
cmp
aas
pop
cld
cmp
clc
cmp
cmp
add
ds
mov
add
pop
xchg
pop
pop
cmpsl
clc
mov
aad
xchg
out
test
clc
sub
or
and
adc
sub
add
clc
or
add
jmp
add
pop
or
sbb
clc
lret
mov
add
jge
imul
and
adc
add
add
cmp
add
xchg
jl
jge
out
jae
add
add
cs
jae
add
sbb
and
add
inc
add
in
loopne
ja
enter
push
gs
scas
and
add
add
gs
jo
add
clc
or
into
mov
inc
clc
add
add
clc
push
add
insl
dec
ret
clc
out
xchg
xor
add
add
jmp
clc
enter
add
and
add
insb
xchg
insb
and
clc
out
fisubs
outsl
es
sbb
add
mov
add
sub
sbb
add
xchg
das
daa
clc
mov
clc
sbb
xor
clc
aad
clc
mov
inc
clc
mov
cs
out
cli
outsb
shrb
clc
add
add
add
xbegin
mov
pop
and
add
addr16
xor
push
clc
stc
jg
clc
adc
add
add
lret
lods
mov
pop
pop
clc
add
add
clc
movsl
clc
outsb
xabort
ret
incl
add
idivl
cmp
jg
mov
pop
mov
loopne
mov
loop
cmpsl
clc
pop
fsubl
cmpsb
clc
sub
add
add
add
add
add
clc
lock
add
in
imul
add
leave
pop
cmc
xlat
scas
jecxz
int3
loop
jp,pn
or
clc
mov
clc
push
add
repnz
or
xor
xchg
pmaxsw
clc
xlat
push
add
and
clc
add
mov
test
lret
sbb
clc
or
clc
std
push
xchg
jbe
cmc
push
add
pusha
add
inc
clc
push
mov
leave
mov
xchg
cwtl
mov
add
cmp
clc
add
add
add
sar
mov
push
mov
mov
ljmp
cmp
jb
add
clc
push
clc
inc
add
leave
test
inc
add
stos
clc
add
cmp
mov
out
push
add
cmp
clc
fwait
sub
add
push
mov
clc
xchg
vcomiss
mov
mov
add
es
daa
clc
mov
int
push
add
and
lods
test
mov
push
addr16
nop
lcall
add
ret
out
mov
clc
popf
jl
add
pop
mov
cmc
cltd
jb
add
clc
mov
cs
cli
add
add
and
add
clc
fnstenv
inc
add
test
stos
add
mov
or
pop
clc
test
add
xchg
int
clc
int3
jge
fsubs
adc
push
or
add
adc
add
pop
add
add
add
aaa
push
aam
lea
mov
clc
imulb
push
fstl
add
dec
shll
add
add
ret
clc
mov
xchg
sub
add
clc
aas
jp
or
cmp
add
push
mov
pop
cmp
es
inc
add
scas
xor
add
add
test
inc
clc
cmp
outsb
adc
add
pop
mov
add
fnstcw
clc
movsb
clc
mov
clc
test
xbegin
jne
jb
add
sbb
out
xchg
out
pop
das
cmp
adc
sub
sbb
popa
add
cmp
clc
cmp
and
add
jp
out
gs
dec
pushl
sbb
dec
mov
mov
sbb
dec
in
jo
add
and
and
add
adc
add
cwtl
adc
add
pop
aad
and
add
or
sub
add
cwtl
inc
clc
sbb
add
mov
lret
pop
daa
clc
pop
jge
add
xchg
or
push
pusha
add
sub
clc
mov
clc
cmp
add
jne
jae
add
gs
mov
dec
fidivl
add
enter
lods
push
call
mov
data16
sub
iret
repnz
jp
hlt
sub
xchg
cmp
scas
push
icebp
cs
int3
jns
add
push
loope
xchg
in
or
sbb
and
add
aaa
sub
sub
push
rorb
add
add
mov
cmp
clc
loope
cmp
clc
out
sub
add
iret
arpl
add
dec
mov
jno
add
clc
sub
fisubs
popf
mov
sbb
add
add
mov
out
sub
mov
xlat
inc
add
push
lret
pop
ja
stos
add
inc
add
ret
pop
mov
sub
rcrb
pop
outsb
jecxz
cltd
in
scas
data16
mov
add
scas
mov
clc
xchg
jp
rol
clc
popa
add
loop
jb
add
add
mov
add
add
add
sbb
add
mov
cmp
lcall
clc
aad
jp
pushf
dec
mov
mov
or
aam
jne
or
dec
clc
mov
loopne
cmp
cs
mov
repz
leave
cmp
enter
xchg
in
mov
cli
jecxz
mov
xabort
jae
add
add
dec
cmp
add
es
sub
add
aaa
push
ret
clc
test
mov
push
dec
push
add
sub
ja
iret
aas
xor
add
das
xabort
ds
xabort
mov
clc
fcmovnu
push
add
shrl
clc
shll
add
xbegin
in
push
pmaxsw
add
xchg
jle
and
add
mov
into
dec
sub
add
mov
jae
add
xor
add
clc
or
add
lods
add
add
add
aam
fwait
xchg
sbb
clc
dec
cwtl
mov
push
or
xchg
pusha
add
cs
loopne
mov
clc
cmp
ss
push
sar
popa
add
cmp
loopne
sbb
out
jmp
gs
pop
dec
dec
dec
or
add
mov
out
pop
loopne
or
aad
mull
ds
shl
clc
int3
jb
add
adc
add
int
add
pop
clc
int
aas
and
add
jbe
clc
mov
es
sbb
add
fidivs
mov
loope
and
add
add
push
fsts
add
mov
pop
or
jle
add
add
dec
test
inc
add
dec
cs
dec
inc
clc
push
sahf
cld
or
xor
dec
mov
pushf
shlb
push
add
sub
in
scas
mov
stos
jo
add
add
daa
clc
xchg
dec
cli
and
jb
add
clc
xchg
sbb
or
gs
mov
add
es
pop
add
add
dec
xor
add
sbb
fnstcw
jnp
out
and
add
clc
push
cltd
xlat
aaa
fcomip
test
fwait
imul
sahf
mov
ds
lret
scas
jo
add
add
mov
mov
sar
clc
mov
or
add
sti
mov
clc
outsl
cmc
sar
mov
in
out
jle
mov
add
clc
jecxz
ljmp
add
add
aad
add
push
pop
addr16
cmc
or
push
add
mov
int
fwait
mov
add
popf
mov
xchg
adc
add
add
sub
push
insl
jmp
add
lcall
add
hlt
lcall
add
jae
add
pushl
add
insl
adc
add
add
add
std
add
add
cltd
inc
clc
mov
es
clc
stos
outsb
mov
ja
lods
nop
inc
add
xor
add
clc
aaa
add
add
testl
test
xor
add
add
sbb
add
clc
jg
add
push
clc
mov
leave
inc
clc
xor
add
out
xchg
mov
fstpl
pop
mov
clc
dec
imul
add
xchg
xor
aas
sbb
add
xor
add
sub
add
push
dec
popa
add
xor
add
leave
dec
inc
clc
ja
dec
cwtl
sbb
xchg
hlt
push
jmp
add
lock
inc
add
adc
add
clc
fucom
clc
loopne
scas
add
add
in
repnz
clc
mov
add
int3
push
add
inc
add
call
add
fwait
xchg
lahf
xor
clc
js
loop
std
and
add
clc
xchg
xor
add
sub
pop
or
inc
clc
pop
or
cmp
cs
mov
jl
pop
clc
sbb
mov
clc
jbe
clc
adc
add
clc
dec
dec
inc
clc
aaa
repnz
add
push
pop
xlat
dec
lods
pop
sbb
jle
loopne
xchg
cs
push
sbb
push
cld
xor
add
add
insl
pop
jb
add
clc
xor
add
clc
lcall
clc
or
enter
shlb
add
add
xor
add
add
sub
clc
outsb
or
clc
xor
add
es
rcll
add
add
mov
ss
popf
es
mov
xchg
pop
sbb
xor
mov
clc
pop
pop
testl
or
add
cmc
sbb
or
add
add
test
add
add
pushf
incb
jns
ror
addr16
jecxz
adc
add
dec
fwait
mov
or
ja
add
cmpsl
clc
sbb
movsb
clc
clc
mov
insb
mov
dec
add
cmpsb
clc
inc
add
cmp
add
and
add
xchg
in
jbe
clc
cmp
clc
mov
test
clc
movsl
clc
fisubl
mov
push
jne
icebp
clc
movsb
clc
sub
add
insl
out
sbb
add
add
inc
add
sbb
jae
add
std
cmc
or
testl
add
adc
sti
mov
xor
clc
and
add
clc
jnp
push
cld
ret
jg
push
out
dec
je
sti
xchg
fs
jp
cli
jns
pop
or
add
cwtl
push
push
add
pop
insb
mov
inc
add
test
mov
lret
jmp
mov
clc
test
or
add
ftst
clc
xor
add
sbb
cmp
mov
jbe
add
sbb
ljmp
add
sbb
and
add
lret
cmp
clc
dec
or
clc
mov
xchg
clc
push
ficompl
es
sbb
add
hlt
scas
jmp
clc
pop
and
add
filds
add
or
add
in
mov
sbb
cmp
clc
adc
add
push
inc
clc
pop
jnp
clc
stos
nop
jle
data16
pushf
jmp
add
xabort
clc
aad
add
cli
pop
imul
mov
adc
add
pop
add
add
add
push
add
insl
dec
and
outsl
inc
add
or
pop
cmc
imul
adc
add
mov
iret
and
add
test
clc
jmp
clc
sbb
clc
xor
add
pusha
add
cwtl
out
dec
lods
cld
aaa
inc
add
jb
add
jae
add
add
sub
jmp
or
lret
or
xlat
jo
add
div
sti
js
cmp
add
jmp
clc
mov
add
adc
add
pop
clc
sub
add
sarl
sub
das
or
add
push
clc
test
or
icebp
leave
pop
cmc
iret
cmp
add
add
popa
add
push
add
call
negb
add
lods
sbb
jbe
das
cmp
add
jge
lods
jno
add
adc
add
mov
jnp
daa
clc
or
repz
mov
clc
or
icebp
jmp
clc
std
pushf
fisttps
clc
mov
xchg
sub
jmp
adc
add
cmp
clc
add
add
movsl
clc
lret
inc
add
push
cld
cmp
xor
cld
lret
stos
dec
sub
jp
clc
addr16
cmp
clc
ret
clc
mov
push
pusha
add
fidivl
xchg
ja
fs
sub
clc
divl
mov
test
in
jns
clc
cmc
xor
sbb
lret
mov
clc
rcll
lock
add
in
enter
add
test
add
or
pop
movsl
clc
push
jl
mov
clc
pop
cmp
add
fbld
stos
mulb
testl
and
cli
fwait
ror
pop
clc
insb
loope
cli
lods
adc
add
add
push
mov
xor
xchg
test
push
mov
mov
add
clc
lret
lret
in
lret
sub
push
add
push
xchg
mov
clc
mov
clc
fcoml
fisttps
out
xchg
inc
clc
ret
clc
xchg
jge
fnstcw
outsb
clc
add
or
lahf
es
jp
add
js
lods
fidivrl
clc
mov
repnz
push
add
xchg
push
and
mov
shlb
lods
ljmp
adc
add
clc
cmp
add
clc
pop
stos
jb
add
clc
pop
lret
cld
cltd
mov
add
in
js
mov
test
in
imul
mov
add
add
clc
clc
or
jge
sbb
clc
add
add
add
pop
into
stos
jae
add
clc
in
jl
int3
adc
add
mov
inc
add
shrl
fwait
dec
popa
add
pop
ljmp
mov
movsb
clc
lock
repnz
cld
cld
in
mov
clc
jmp
clc
inc
clc
push
add
sbb
pop
dec
cld
jae
add
add
imul
mov
add
jmp
jecxz
test
or
xchg
add
sti
add
sti
sbb
and
add
lods
in
enter
imul
clc
in
pop
inc
clc
dec
mov
and
add
or
clc
addr16
cltd
mov
data16
mov
fadds
add
pop
pop
out
mov
jmp
clc
clc
jae
add
add
xchg
pushf
into
scas
sub
cmp
clc
sbb
mov
clc
mov
lea
dec
pop
add
add
clc
push
add
add
inc
clc
xor
add
xor
xchg
scas
xchg
jl
rcrb
add
clc
mov
in
je
xchg
push
fisttpl
ljmp
cmpsb
clc
adc
clc
lcall
clc
shrb
mov
imul
fnsave
in
divb
add
in
mov
add
loopne
daa
clc
mov
outsb
mov
cmp
jae
add
popa
add
mov
aas
inc
clc
mov
add
adc
add
add
mulb
add
xchg
adc
add
and
add
dec
repnz
cmp
inc
add
dec
fimuls
stos
es
cmp
clc
xchg
out
ds
xor
add
and
add
je
js
push
clc
and
add
cmp
or
pop
xchg
test
cwtl
cmp
testl
clc
or
add
add
add
leave
ret
mov
cs
or
and
lret
clc
pop
sbb
clc
sbb
add
xor
add
jp,pn
jno
add
divl
and
add
clc
insb
fsubr
movsb
clc
pop
das
ss
add
add
xchg
push
clc
or
decl
cmp
add
push
cmp
or
add
xor
add
clc
test
jne
add
inc
add
sub
dec
testl
movsb
clc
jno
add
clc
cmp
stc
xchg
jns
mov
adc
clc
xchg
sub
rcr
push
fsubrl
inc
add
movsb
clc
push
dec
or
add
seta
adc
add
inc
add
xabort
in
inc
clc
inc
add
cmp
add
iret
filds
add
mov
add
push
clc
fwait
test
mov
add
add
add
xchg
bound
add
int3
dec
arpl
add
add
push
add
outsl
aad
add
sub
enter
add
add
clc
or
xchg
inc
clc
lock
dec
icebp
fcompl
mov
add
inc
add
push
lcall
sub
push
je
xor
bound
add
bound
add
push
push
into
jle
pop
mov
clc
jmp
add
iret
stc
pop
outsb
aad
xchg
enter
pop
shl
clc
leave
aam
and
add
into
and
add
lcall
cmp
pop
cmp
pop
outsl
xchg
test
xor
add
fs
lahf
lahf
add
add
xchg
shlb
clc
flds
sbb
clc
outsl
push
sar
mov
clc
mov
add
mov
add
add
nop
testb
mov
xchg
xor
add
add
add
cmpsb
clc
lea
aas
fiadds
out
lea
cli
leave
cmp
out
js
ds
inc
clc
sahf
shl
vmovntps
popl
add
pushf
stos
sar
clc
and
add
add
sti
cwtl
daa
clc
dec
and
add
xor
add
fsubrl
xchg
inc
add
push
add
in
into
ljmp
add
fdivl
cmp
sahf
xchg
push
jecxz
mov
inc
add
cmp
add
xchg
dec
loope
add
sti
push
loopne
das
and
add
divb
loop
aam
adc
add
lcall
pushf
mov
cmp
add
add
and
add
add
das
mov
cmp
fcmovnb
clc
int3
or
and
mov
dec
int3
push
negl
jge
repz
xchg
outsb
cmpsb
clc
mov
loope
sbb
and
add
scas
jecxz
adc
pop
mov
add
xor
clc
pop
jno
add
js
cmp
clc
icebp
dec
xor
add
clc
push
sti
decb
fucomip
cld
jle
xor
clc
push
add
sar
nop
xchg
xabort
xlat
popa
add
pop
clc
imul
pop
je
push
add
fwait
addr16
dec
inc
add
nop
fwait
sbb
daa
clc
pop
clc
test
call
cltd
and
add
xchg
nop
mov
mov
clc
add
in
out
pusha
add
mov
repnz
clc
test
outsl
call
cwtl
ss
xabort
clc
xlat
mov
jno
add
test
clc
jo
add
mov
add
jl
cld
lret
fisubs
fildll
mov
mov
jg
clc
and
add
pop
pop
leave
pop
sub
add
pop
jbe
mull
add
add
mov
ss
add
jp
add
cmp
add
jno
add
cmp
insl
adc
add
add
mov
push
pop
lahf
lods
fstl
add
lods
cmp
clc
inc
add
push
add
jp
add
sub
mov
data16
jle
test
push
adc
add
add
clc
jle
push
mov
add
cmp
add
rclb
clc
jecxz
int3
ja
sbb
add
clc
lret
add
add
add
cmp
add
sar
enter
jge,pt
cld
xor
cltd
mov
jg
pusha
add
mov
pop
stc
mov
mov
nop
sub
cmp
mov
inc
clc
leave
pop
mov
add
clc
cmp
add
cmp
mov
clc
mov
clc
pop
pop
cmpsl
clc
dec
mov
add
xabort
push
daa
clc
jae
add
sub
je
push
jecxz
enter
xor
add
adc
add
add
stc
jo
add
sbb
in
sub
add
das
cmp
cmp
clc
or
add
fsts
push
jmp
or
jle
clc
gs
add
add
clc
xor
clc
test
push
add
ljmp
stos
inc
add
jo
add
jle
push
add
and
clc
mov
ds
aad
add
add
clc
shlb
add
inc
add
loope
push
pusha
add
outsb
cmp
pop
clc
mov
rol
clc
lret
out
pop
jne
add
clc
je
add
jno
add
or
add
add
out
sbb
or
and
pop
aaa
push
push
jl
mov
jmp
das
sbb
add
jl
clc
rolb
add
push
clc
or
add
sar
clc
lods
mov
and
add
scas
mov
and
add
add
add
clc
mov
add
add
call
lods
incb
xchg
pop
xchg
mov
je
mov
add
fisttpl
sbb
cmp
clc
xchg
cltd
ds
clc
or
arpl
add
fildll
add
cwtl
mov
mov
add
out
arpl
add
add
pushl
add
mov
clc
clc
scas
push
push
xlat
fwait
push
clc
pop
adc
pop
cmp
lahf
mov
clc
out
in
cmp
add
push
add
cmp
dec
mov
sahf
mov
add
bound
add
mov
or
clc
sub
xbegin
dec
movsl
clc
pusha
add
and
add
add
clc
mov
cmp
sbb
clc
jns
or
clc
mov
popf
aam
clc
daa
clc
call
cmc
jns
leave
mov
sti
out
cli
push
adc
add
add
adc
clc
cmp
adc
adc
add
xabort
sub
add
add
add
cmpsb
clc
icebp
test
lret
xor
add
adc
lea
add
in
xchg
icebp
adc
add
push
clc
fnstsw
int3
pop
clc
and
rolb
add
cmp
out
hlt
xlat
sbb
push
rorl
adc
add
add
ja
clc
cwtl
arpl
add
add
xchg
int
clc
arpl
add
clc
aam
add
push
das
xchg
inc
add
aam
clc
adc
add
icebp
mov
pop
push
add
mov
add
add
clc
das
cmc
xor
clc
outsl
leave
sbb
clc
dec
push
mov
ret
dec
adc
add
sub
clc
enter
daa
clc
ja
ja
clc
test
jno
add
jne
sub
push
add
inc
clc
add
jg
clc
sub
loop
xlat
adc
add
addr16
jnp
push
pop
mov
mov
add
and
add
mov
mov
add
imul
xabort
add
cwtl
push
in
adc
add
nop
inc
clc
push
add
cli
jb
add
into
loope
cmp
clc
gs
jge
clc
pushf
sbb
add
add
add
add
sbb
cmp
adc
add
leave
jbe
clc
add
add
add
hlt
shl
push
jge
fsubs
add
dec
lods
mov
add
in
test
cmc
out
into
mov
repnz
jle
clc
insb
adc
cmovbe
adc
out
outsb
cmp
add
pushf
push
add
jmp
imul
test
mov
add
ljmp
adc
sar
add
mov
sar
fbld
add
das
loope
imul
aad
clc
aaa
xchg
push
nop
cmp
addr16
jns
and
pop
add
add
mov
sub
jnp
pop
and
add
add
mov
jbe
xlat
daa
clc
adc
add
bound
add
dec
push
cmp
add
cwtl
cmp
clc
or
mov
pop
test
jecxz
insb
jb
add
clc
xor
add
add
jb
add
add
gs
out
jbe
jl
pop
stc
xbegin
mov
mov
clc
pop
ss
inc
clc
lods
adc
add
clc
and
add
clc
push
pusha
add
inc
clc
mov
jmp
dec
jp
clc
dec
cmp
fstpt
ja
add
xlat
jae
add
inc
add
out
clc
out
pop
clc
push
out
inc
add
imul
arpl
add
add
cwtl
lea
mov
add
into
mov
clc
or
jge
clc
lock
pop
cli
sub
inc
clc
lret
push
push
add
push
add
aas
cmp
clc
mov
out
push
add
xchg
jb
add
add
sti
jnp
ja
clc
xchg
jl
in
lcall
mov
lock
clc
sbb
add
nop
pop
imul
add
aad
add
clc
pop
push
add
dec
popf
mov
clc
jle
clc
push
hlt
out
push
xchg
push
add
or
push
out
ret
clc
inc
clc
push
mov
add
lock
clc
lock
pop
push
adc
add
add
xabort
cmp
clc
pop
mov
xchg
mov
clc
mul
clc
rol
clc
test
pop
cmp
sub
outsl
outsl
mov
or
in
sub
movsb
clc
cmc
push
clc
jmp
int
clc
sbb
stc
inc
clc
jnp
clc
jmp
cmp
bound
add
clc
movsb
clc
mov
add
imul
clc
sub
clc
or
or
add
decl
test
add
bnd
jg
mov
cmp
add
clc
sub
insl
sbb
xchg
xchg
add
mov
arpl
add
add
add
pop
sbb
add
clc
scas
mov
push
in
add
cld
fstps
clc
and
add
clc
daa
clc
dec
push
aas
stc
mov
fwait
aad
mov
clc
pop
lahf
imul
ret
clc
and
add
or
roll
add
mov
scas
pop
fildl
jno
add
xchg
xbegin
and
push
sahf
pop
inc
clc
mov
add
dec
clc
cmc
jne
lret
in
loope
cmp
das
data16
cmp
clc
xchg
lahf
inc
add
mov
add
clc
jo
add
pop
sarl
and
sub
lret
clc
mov
add
add
add
in
jo
add
popf
repz
cmp
clc
jae
add
xor
add
pop
pop
outsl
incl
add
add
sub
int
test
jle
dec
ljmp
push
call
sbb
add
clc
in
add
ret
pop
mov
and
add
or
add
mov
mov
aad
stos
insl
sub
dec
fmuls
insl
push
push
clc
fstl
clc
repz
push
add
testl
add
jg
clc
fcmovb
clc
scas
sbb
adc
clc
imul
repnz
pop
mov
add
insl
adc
add
clc
sub
mov
add
sub
add
xchg
cmp
clc
inc
add
out
jl
clc
xchg
push
clc
xor
add
iret
jmp
insb
push
add
sub
je
das
daa
clc
or
jg
add
mov
add
pop
push
clc
cwtl
in
push
adc
clc
popf
call
clc
dec
cmp
add
pop
xchg
repz
clc
xchg
jl
jbe
dec
and
clc
aad
aam
ds
lret
sbb
add
addr16
pop
xabort
pop
lahf
sar
mov
push
stc
adc
add
add
js
and
cmp
push
add
je
fs
sbb
add
shr
gs
lret
cs
dec
test
cmc
out
push
add
pusha
add
adc
add
out
aam
cmp
out
or
cmp
push
add
mov
and
add
jae
add
mov
divl
pop
adc
add
add
sbb
xor
mov
and
add
clc
or
loop
add
add
add
imul
clc
iret
cmp
mov
add
xchg
push
cli
in
sbb
add
add
clc
pushf
mov
ret
sar
mov
adc
sub
add
insb
dec
sub
add
hlt
sbb
fmull
inc
add
aas
inc
add
std
in
lods
hlt
sbb
add
pop
clc
xchg
mov
clc
cmp
add
add
testl
out
sbb
clc
jecxz
pop
gs
mov
icebp
push
incl
clc
add
add
jge
int
add
mov
sub
mov
clc
test
gs
jnp
clc
dec
cmp
add
add
lcall
mov
imul
clc
sar
dec
pop
loop
mov
add
and
add
sar
lret
lahf
push
lea
push
pop
int3
add
add
mov
clc
and
add
clc
lret
or
mov
ficoml
add
cmp
cmp
sub
cmp
clc
inc
add
mov
out
loopne
cmp
clc
mov
or
clc
fidivrl
clc
repz
sub
inc
add
cltd
mov
aad
add
repz
cmp
mov
xchg
mov
xor
clc
ds
clc
popf
and
add
fdiv
fdivrs
cmp
test
test
aaa
ret
add
add
mov
clc
gs
xor
add
clc
out
mov
insl
and
clc
ja
xchg
sahf
jp
add
push
sar
mov
cmpsb
clc
cmpsl
clc
adc
add
lahf
cmpsb
clc
jns
add
pop
fidivrs
xor
rcl
xor
add
clc
cmp
pop
iret
xchg
outsl
cmc
arpl
add
xor
nop
jp
clc
cmp
fdivrs
push
outsl
cmp
xchg
test
data16
jl
clc
push
hlt
dec
xchg
sub
in
adc
add
fisttpl
aas
sbb
insb
cmp
es
movsb
clc
inc
add
cmpsl
clc
dec
mov
add
clc
push
xchg
xchg
sub
add
or
cwtl
dec
lock
sti
lea
loopne
out
clc
cltd
inc
add
inc
clc
and
add
and
add
sub
xchg
ror
cwtl
mov
add
push
xor
add
clc
xabort
fsubs
add
add
enter
add
add
sar
movsl
clc
aam
add
hlt
int
mov
rcr
sbb
add
cmp
add
cmpsb
clc
sub
xor
add
add
fsubl
imul
inc
add
es
dec
mov
imul
sub
pop
cmp
imul
add
push
imul
out
sub
jmp
fcomps
add
xor
add
dec
pop
sub
pop
aas
imul
outsb
pop
fs
ret
dec
inc
clc
dec
stos
icebp
es
lock
add
add
clc
stos
jns
add
mov
push
clc
ja
xbegin
pop
cmpsl
clc
push
icebp
cmp
xor
add
add
inc
add
adc
add
inc
add
pop
add
add
add
add
add
jmp
add
sbb
add
lcall
lahf
jb
add
psubd
add
sbb
sbb
clc
fs
xbegin
std
cmp
cltd
test
adc
pop
loopne
sbb
clc
pop
clc
cmp
add
insb
mov
into
xchg
adc
add
roll
add
repnz
add
add
add
cmp
add
sbb
add
pop
test
cmp
add
mov
mov
scas
push
cmp
add
and
jecxz
mov
loope
xor
jno
add
push
add
xabort
clc
sbb
clc
fiaddl
lahf
adc
jae
add
add
clc
out
out
lods
cmp
inc
clc
imul
ljmp
out
stos
cmp
inc
add
pop
in
xchg
xchg
nop
int3
inc
clc
lea
clc
push
xchg
aam
fstpt
xor
add
add
int3
ror
fwait
outsb
js
and
and
add
add
bound
add
cmp
sbb
clc
mov
lret
push
adc
and
push
ds
sbb
jns
mov
ljmp
jmp
inc
clc
pusha
add
mov
add
add
dec
pop
in
lods
dec
mov
inc
clc
pop
cmp
mov
add
fbld
fisttpl
sbb
add
inc
add
pop
dec
mov
and
add
leave
jno
add
xchg
push
mov
clc
adc
add
cmp
and
add
js
lcall
pushf
pop
clc
lock
sub
clc
or
out
dec
scas
out
fs
outsb
push
inc
add
mov
clc
out
sub
out
xor
add
and
add
jne
lcall
aam
lret
test
gs
dec
mov
add
add
add
cmc
pusha
add
out
jno
add
in
mov
mov
clc
loop
data16
ljmp
add
testb
add
clc
gs
push
out
add
add
clc
push
add
in
test
jo
add
data16
clc
cmpsl
clc
pop
mov
outsb
and
dec
aam
add
sbb
clc
push
jp
dec
xchg
mov
clc
ss
add
repnz
std
jns
add
sub
xabort
add
dec
lret
popf
cmp
lcall
jg
adc
add
or
cmp
add
add
pop
jnp
addr16
or
inc
clc
mov
seta
inc
clc
lods
lock
test
ficomps
jo
add
add
push
clc
mov
jb
add
cmp
rorl
ret
add
popa
add
sbb
add
or
sbb
add
in
sub
add
mov
clc
and
add
mov
clc
mul
clc
in
xbegin
mov
sbb
insb
enter
fdivr
aam
clc
push
pop
cmp
pop
scas
iret
insb
mov
mov
mov
stos
nop
into
xchg
add
fstl
add
lods
sar
dec
add
push
aad
add
push
ja
add
jg
add
pop
inc
add
movsl
clc
movd
mov
add
rorl
popf
or
clc
ffree
clc
cmp
push
jnp
jp
add
pop
sbb
stos
push
sub
repnz
clc
dec
xchg
sbb
jp
or
xchg
pop
adc
add
dec
ficomps
cli
xchg
gs
cmp
adc
add
out
jge
clc
int3
aas
ljmp
cli
push
clc
sub
cld
pop
mov
and
add
fs
dec
mov
sarb
data16
imul
dec
pop
clc
mov
sar
out
push
lock
cmp
or
daa
clc
sar
add
add
clc
mov
jmp
inc
clc
dec
jns
cmp
fstpt
push
add
xchg
lahf
cmpsl
clc
xchg
mov
add
cmp
cmp
clc
sbb
add
xor
add
jmp
clc
inc
add
in
mov
clc
pop
xbegin
xchg
aas
inc
add
xlat
es
ja
pop
xchg
add
add
add
clc
xor
add
xchg
xabort
clc
jo
add
jns
inc
clc
and
inc
clc
cmp
mov
clc
and
add
xabort
pop
in
outsl
cmp
push
add
push
add
adc
add
lods
add
add
out
xlat
push
cmp
cmp
ficoml
clc
cmc
cltd
fdiv
cmp
fs
stc
mov
add
jnp
lods
mov
add
ja
xor
add
jmp
repz
jb
add
rcll
js
lcall
or
shll
outsb
aam
fstpt
jg
fwait
adc
add
mov
ficoml
add
ret
clc
push
or
adc
test
add
add
xor
add
mov
add
xchg
mov
clc
mov
dec
fnstcw
bound
add
or
hlt
sbb
ljmp
push
cmp
add
addr16
mov
jno
add
xor
add
adc
clc
jmp
testl
in
mov
push
inc
add
push
cmp
add
add
popf
sub
decl
mov
push
add
mov
gs
or
add
sti
frstor
add
jl
sbb
movsl
clc
jge
add
mov
jbe
adc
add
clc
gs
dec
fwait
pop
mov
clc
sub
mov
add
xor
dec
jb
add
jp
movsl
clc
jns
je
in
pop
or
push
push
test
fwait
in
mov
add
add
clc
sti
movsl
clc
std
cmp
mov
and
adc
add
add
mov
add
xchg
sub
lcall
clc
icebp
data16
add
add
sbb
mov
lock
cmp
add
rcr
arpl
add
mov
dec
inc
clc
mov
clc
or
clc
mov
repnz
add
ret
add
daa
clc
stos
daa
clc
sar
sbb
dec
or
add
add
out
and
add
test
push
push
add
xabort
clc
push
clc
fcoml
cltd
push
xor
lret
sahf
stc
out
dec
fidivl
add
push
add
ss
clc
add
add
lahf
lahf
pop
out
movsb
clc
cltd
icebp
mov
js
cmp
mov
cli
sub
aam
add
add
add
add
arpl
add
clc
or
cli
repnz
gs
jmp
add
and
add
jmp
xor
add
adc
add
xchg
leave
test
mov
aam
add
cmpsb
clc
ds
clc
shlb
pop
clc
cmp
add
cmp
clc
cmpsb
clc
jne
add
xchg
lods
pop
xchg
mov
add
push
add
xchg
sub
add
sar
clc
push
cmp
clc
push
repz
jns
cmp
pop
jbe
inc
add
adc
xlat
adc
add
inc
clc
xchg
xchg
outsl
shrd
fbld
xor
add
testl
clc
jg
add
jbe
clc
lahf
stc
jbe
clc
cmp
add
sbb
or
test
mov
mov
sub
clc
pop
lock
cmp
jbe
clc
aaa
push
std
sar
inc
clc
pusha
add
lods
xor
testl
add
push
add
pop
movsl
clc
cmp
incl
into
push
xchg
dec
push
add
sar
adc
bound
add
std
and
mov
clc
pop
sahf
cmp
xchg
mov
mov
out
cmc
neg
stos
popf
call
add
inc
add
inc
add
std
jmp
sub
dec
sahf
fmulp
push
add
mov
inc
clc
jns
jbe
data16
mov
clc
pop
iret
pop
mov
add
in
or
gs
pop
idivb
clc
insl
and
add
xabort
clc
aad
clc
leave
pop
pop
xchg
data16
lods
outsb
mov
add
loop
and
add
cmp
add
pop
dec
stos
adc
add
mov
fst
incl
clc
ret
clc
popf
mov
clc
xlat
iret
cmpsl
clc
data16
mov
add
int
cmpsb
clc
mov
add
movsb
clc
sbb
clc
cmp
clc
jno
add
clc
cltd
js
clc
mov
arpl
add
cs
cmp
mov
mov
leave
cmp
push
nop
fsubs
pop
push
repz
outsl
jg
add
add
in
push
dec
mov
push
sbb
clc
repnz
mov
sar
mov
or
sbb
fldln2
out
dec
mov
jle
add
xabort
add
xbegin
add
xchg
sbb
dec
sbb
clc
inc
add
in
imul
inc
add
in
loope
ja
mov
and
add
clc
push
mov
cmp
add
pop
sbb
add
or
cmp
fld
clc
jo
add
ja
add
es
enter
mov
sar
dec
jns
jb
add
add
insb
lcall
add
jmp
mov
jecxz
lahf
push
add
inc
add
mov
gs
or
jne
cmp
ja
add
inc
clc
ss
icebp
sbb
clc
xlat
cmp
enter
jae
add
add
add
enter
sbb
or
outsl
jnp
xchg
xchg
push
dec
nop
or
dec
test
pop
clc
loope
movsl
clc
fcmovnbe
mov
clc
pop
xor
add
push
stc
inc
clc
and
clc
xor
rclb
clc
test
dec
repz
cmp
scas
mov
xchg
pop
cmp
and
add
add
gs
test
clc
loope
mov
fs
adc
add
neg
arpl
add
add
sub
add
enter
push
add
data16
rorb
hlt
jp
xchg
xor
add
clc
pop
js
leave
cmp
in
push
add
loope
hlt
addr16
aad
leave
xchg
loopne
jb
add
clc
pop
adc
add
mov
push
mov
popa
add
cmp
push
fldenv
cli
cmp
js
clc
rcr
inc
clc
in
test
ja
sar
lret
push
add
dec
cwtl
pop
xor
add
clc
cmpsb
clc
pushf
gs
push
add
add
das
rcll
clc
push
push
jecxz
cmp
clc
jb
add
int3
addr16
lods
dec
xabort
jmp
clc
jle
jae
add
arpl
add
fucomip
xor
add
add
je
add
stos
push
lret
rcll
add
or
add
sbb
out
cmpsb
clc
mov
clc
inc
add
pop
arpl
add
clc
and
add
clc
xchg
call
xor
fsubr
movsl
clc
cmp
bound
add
cmpsb
clc
pop
int
clc
jg
jnp
out
xbegin
pop
ja
cmp
clc
loopne
mov
clc
mov
clc
jl
add
shll
add
add
clc
jno
add
mov
aas
push
add
jns
call
or
outsb
mov
repz
push
pop
sub
aas
push
add
xchg
test
jge
jp
jge
jb
add
out
and
cmp
shrb
push
cmpsb
clc
pop
and
test
sbb
add
sub
add
inc
add
cmp
cmpsl
clc
jp
xor
add
lea
dec
dec
jl
cmp
mov
xor
add
loop
ds
add
imul
mov
xchg
dec
fwait
data16
jl
sub
clc
sar
dec
xor
add
xor
add
mov
push
add
call
add
sub
faddl
add
mov
fs
mov
push
lcall
mov
clc
lock
cmp
clc
aaa
pop
adc
add
clc
cmp
lret
mov
push
add
mov
add
mov
mov
test
push
push
out
mov
clc
outsl
cmc
cld
mov
cmp
and
fsts
add
test
out
clc
mov
xor
add
add
pop
roll
ds
in
and
mov
pop
leave
sahf
cmp
add
clc
push
add
adc
add
imul
jae
add
lret
adc
add
inc
add
out
idivl
or
clc
data16
add
add
das
cltd
push
push
hlt
add
add
clc
cmp
stos
stos
adc
add
add
xchg
mov
add
dec
jmp
sti
shll
jns
cmp
and
imul
scas
ja
and
add
cld
pushl
add
mov
clc
sbb
decl
clc
scas
call
add
stos
popf
out
mov
in
mov
add
out
sar
jecxz
sbb
shlb
cmp
pusha
add
jne
adc
add
add
inc
add
outsl
xbegin
ss
lea
aam
loope
adc
add
xchg
jo
add
gs
lea
add
scas
fsub
clc
in
lret
xabort
lcall
dec
sbb
jns
xor
add
adc
add
incb
out
loope
mov
cmp
cmovns
and
add
lcall
sub
pop
repnz
mov
sbb
mov
data16
mov
clc
add
add
lods
test
inc
add
sbb
add
test
jmp
scas
mov
fwait
and
pop
sbb
push
sar
clc
and
mov
aad
clc
shl
in
lcall
clc
ljmp
push
add
inc
clc
ja
mov
icebp
jno
add
jge
push
add
fstpl
add
hlt
mov
jmp
jle
and
cmp
clc
and
add
hlt
popf
fcoms
add
cltd
push
add
stc
jb
add
cld
aad
inc
clc
sbb
insb
add
add
bound
add
add
fists
push
daa
clc
jge
xchg
and
add
clc
fwait
inc
clc
das
mov
insb
pop
repz
sub
push
add
pop
sub
stos
popf
and
add
clc
xchg
icebp
jae
add
cwtl
mov
test
pop
push
jb
add
add
cld
pop
pop
das
fmuls
clc
in
movsb
clc
add
add
clc
jno
add
out
das
pop
clc
sub
pop
lcall
mov
clc
mov
pop
sahf
jge
sub
mul
clc
add
inc
add
mov
fucomip
pop
clc
cmp
into
pop
push
cmpsl
clc
ret
bound
add
add
loopne
jnp
add
jmp
lahf
mov
add
icebp
cmp
push
lret
mov
aad
dec
jl
test
in
dec
insl
mov
add
add
sub
clc
ja
je
jae
add
int
and
add
add
cltd
lret
clc
repz
add
shl
clc
out
inc
clc
out
ja
clc
in
out
das
jnp
ljmp
clc
out
rcrl
add
cmp
adc
add
clc
jmp
sbb
pop
out
nop
add
add
clc
push
xor
add
jns
in
fstps
sub
add
movsl
clc
hlt
push
and
add
and
add
add
add
int
add
into
fs
leave
sbb
clc
cmp
test
inc
clc
cmp
test
jmp
dec
and
add
cmpsl
clc
pop
in
rorl
in
mov
and
add
in
push
pop
mov
inc
clc
fistps
js
fwait
aad
sbb
fsubp
clc
sar
sbb
stos
mov
clc
std
lahf
push
clc
aaa
fs
mov
add
jae
add
je
clc
loop
sti
ficoms
xchg
sbb
clc
cmp
popa
add
popa
add
fstpt
jae
add
clc
mov
out
mov
inc
add
cmp
clc
or
or
mov
add
xor
add
sbb
jns
or
add
add
mov
lret
clc
ffreep
clc
xchg
cmpsb
clc
lret
cli
push
clc
adc
add
clc
sar
outsl
push
or
or
add
sbb
add
xchg
inc
add
mov
out
mov
clc
jne
clc
call
sbb
clc
arpl
add
clc
xchg
aad
add
jmp
push
add
jo
add
add
enter
clc
pop
mov
test
neg
xabort
add
div
mov
add
add
clc
adc
add
clc
loop
jp,pt
dec
outsl
cwtl
push
pop
fisubs
add
popa
add
imul
fwait
jmp
clc
cmp
inc
clc
fiaddl
jbe
adc
add
sub
add
add
fldl2e
pop
add
inc
clc
nop
clc
cmpsb
clc
scas
cwtl
pop
xbegin
ds
push
xchg
jne
clc
in
cmp
jmp
or
sbb
fildll
clc
test
push
dec
inc
clc
arpl
add
sub
ds
add
mov
and
jp
add
mov
je
cs
push
adc
add
movsl
clc
or
cmp
out
xchg
rorb
and
add
add
dec
xchg
add
clc
push
add
imul
add
leave
fsubr
jecxz
add
xbegin
inc
clc
add
cmp
clc
in
cmp
inc
add
inc
clc
push
add
jae
add
clc
out
aaa
repz
shll
clc
ficoml
clc
push
es
cmp
add
inc
clc
add
add
add
pusha
add
lock
repnz
add
sub
add
clc
sbb
cmp
sbb
clc
xlat
cld
std
ret
stos
cwtl
sbb
jg
mov
test
clc
stos
test
push
lcall
sbb
jl
sbb
aas
mov
add
sbb
clc
repnz
mov
cmp
leave
loop
push
fadds
add
xlat
xchg
leave
mov
add
loope
stos
test
xchg
std
scas
mov
out
pop
sub
clc
cwtl
out
popf
add
mov
add
test
hlt
cmp
clc
stos
and
add
std
cmp
mov
sbb
add
cmpsb
clc
lea
inc
add
cmp
xor
shrl
cmp
clc
adc
inc
clc
push
repnz
push
add
xabort
sbb
stc
mov
clc
jg
sahf
mov
test
cmp
popf
shrb
clc
loop
dec
xchg
cld
cmp
clc
sub
test
std
push
sti
sahf
stos
pop
clc
fsubrs
and
add
cwtl
dec
mov
jae
add
add
add
clc
adc
pop
aas
xchg
gs
sar
add
sub
mov
fiadds
mov
mov
xlat
xchg
pushf
hlt
inc
clc
sbb
cmp
es
lock
add
mov
outsl
nop
xlat
sbb
clc
cmp
test
add
cmp
add
inc
add
or
sub
jecxz
out
pop
nop
push
add
or
clc
das
repnz
into
lea
mov
pop
sub
clc
daa
clc
sbb
nop
ss
clc
cmp
mov
add
mov
sbb
mov
add
clc
ja
add
pop
mov
jmp
xor
and
add
lret
clc
insl
or
enter
mov
and
add
or
and
add
pusha
add
daa
clc
adc
rorb
add
xchg
mulb
add
xchg
pusha
add
je
add
and
add
cmc
jbe
pop
test
push
add
movsb
clc
fiaddl
add
mov
push
add
xchg
lock
add
loopne
dec
jbe
cmc
movsl
clc
incl
clc
pusha
add
bound
add
add
div
popa
add
push
add
aam
sahf
mov
out
scas
and
add
pop
aam
ljmp
dec
pop
ret
clc
pop
sub
ret
add
mov
clc
jmp
jmp
clc
je
clc
xlat
jp
xchg
pop
leave
sub
ret
repnz
add
add
sbb
test
ret
stos
sar
or
arpl
add
add
scas
loope
jnp
mov
push
clc
add
add
stc
mov
stc
fadds
add
and
add
outsl
fsubrp
ss
inc
add
aas
sbb
clc
decb
cmp
cmp
and
add
sbb
or
out
movsl
clc
add
add
cmp
pop
clc
cmp
pop
pop
and
jne
bnd
push
cmp
dec
dec
sar
add
outsb
insb
es
xchg
xchg
leave
fiaddl
and
add
or
push
mov
cmp
ss
cmc
mov
add
clc
rcrl
clc
push
clc
dec
clc
roll
add
je
add
out
jle
or
adc
add
cmp
xchg
push
mov
mov
fwait
sbb
ljmp
clc
add
push
dec
cmp
fdivrs
add
clc
fwait
hlt
clc
adc
add
ja
add
shr
sub
decb
xchg
and
outsb
mov
icebp
test
pop
jg
addr16
jl
cmc
js
push
lods
push
cmpsb
clc
mov
inc
clc
mov
clc
in
sbb
lcall
adc
add
mov
add
mov
clc
mov
add
out
xor
add
jne
add
cmc
add
add
add
clc
rcl
xor
arpl
add
clc
ret
clc
mov
sub
inc
add
dec
ja
inc
add
imul
je
add
cmp
add
add
jp
add
add
pop
pop
clc
fcmovnb
clc
repz
add
adc
clc
cmp
mov
fnstsw
clc
mov
xchg
loop
mov
clc
mov
clc
mov
clc
cmp
mov
add
clc
sub
add
frstor
add
and
add
aad
clc
sub
add
outsl
sbb
add
add
inc
add
loopne,pn
xbegin
outsl
jg
inc
clc
adc
leave
js
jge
clc
mov
xabort
jle
fldt
mov
clc
lea
je
add
es
cmp
mov
xor
add
add
in
xlat
imul
push
clc
test
icebp
mov
mov
mov
test
aas
cmp
clc
es
xlat
out
ret
clc
sti
jp
xchg
outsl
ret
sbb
clc
inc
add
adc
add
mov
jge
aaa
xchg
jg
aas
pop
movsb
clc
cmp
call
add
clc
mul
clc
and
add
and
add
mov
pop
imul
loope
scas
rclb
add
add
add
add
xchg
inc
clc
clc
xchg
out
jmp
add
clc
outsl
scas
mov
addr16
clc
push
push
outsl
xor
add
mov
aam
clc
lods
pop
mov
add
xchg
and
add
repz
add
clc
cmp
clc
loopne
sbb
xor
add
jae
add
dec
pushf
mov
add
pusha
add
mov
clc
xchg
lods
mov
sbb
add
mov
mov
pusha
add
jb
add
add
aad
cmp
clc
adc
add
and
add
clc
clc
sbb
pop
clc
movsb
clc
lea
add
add
lcall
jae
add
sub
mov
outsb
cmc
out
xchg
imul
add
clc
out
test
add
xabort
repnz
or
std
inc
add
xchg
pop
sub
add
jp
add
mov
jge
add
mov
or
push
mov
dec
pop
jmp
cmp
jne
clc
mov
add
sti
dec
loope
out
push
add
loop
ja,pt
iret
sbb
cltd
xlat
aaa
pop
sub
cld
push
add
jae
add
clc
and
add
dec
lret
add
hlt
lea
inc
add
and
add
clc
shl
sub
cmp
dec
lods
inc
clc
or
add
pop
mov
clc
hlt
push
add
lock
sbb
add
cld
sbb
repnz
pop
insl
ret
add
dec
inc
clc
hlt
push
loop
xchg
jno
add
add
sbb
sub
movsb
clc
cmp
clc
mov
push
add
push
add
jmp
clc
jle
cmp
pop
lods
cmpsl
clc
cmpsl
clc
insb
mov
notb
add
gs
bswap
sbb
sbb
add
jne
or
jo
add
inc
add
in
jns
cmp
clc
mov
clc
vmovups
add
add
addr16
adc
add
rcrl
push
xchg
js
and
add
add
fs
inc
add
fstpt
sbb
jbe
nop
nop
scas
dec
pop
sbb
clc
push
jl
inc
clc
imul
and
add
jne
add
sar
sbb
add
popf
mov
clc
pop
push
xor
add
xchg
jp
std
imul
imul
xchg
ret
clc
mov
cmp
jecxz
xchg
ret
and
push
fisttps
adc
jns
clc
jmp
add
xor
out
hlt
mov
add
imul
clc
dec
mov
sub
add
sar
cmp
rcr
imul
push
lock
add
or
mov
clc
lcall
mov
clc
cmp
add
adc
add
and
add
pop
clc
pop
xchg
pop
push
sti
pop
call
clc
ljmp
jo
add
add
imul
sub
jo
add
cmp
clc
sbb
cmp
clc
jge
loop
lock
dec
stos
and
add
mov
add
popf
test
cmp
arpl
add
xchg
rcrl
idivl
mov
shr
scas
xor
add
in
pop
add
and
add
enter
push
clc
adc
push
xchg
cmp
repnz
daa
clc
gs
mull
push
pop
xchg
stos
jp
jae
add
xchg
mov
dec
sub
mov
clc
test
clc
rol
clc
bound
add
test
xchg
cmp
arpl
add
add
test
clc
sbb
clc
push
add
rol
clc
bound
add
enter
mov
add
jbe
iret
mov
data16
xchg
aam
clc
inc
add
sbb
add
clc
ljmp
imul
add
sub
clc
ja
clc
xchg
cmp
add
and
add
mov
xor
mov
add
add
jp
into
xchg
jle
fdivr
clc
or
add
scas
lret
jp
loop
jg
jl
adc
add
clc
fiadds
add
push
mov
inc
add
sub
clc
push
adc
inc
add
mov
xor
dec
sub
sub
pushf
dec
or
cmp
xor
clc
stc
inc
add
pop
addr16
lock
add
mov
mov
pop
dec
arpl
add
add
sbb
sar
mov
clc
adc
add
addr16
push
gs
out
add
ljmp
into
mov
xchg
mov
cmpsb
clc
shll
or
clc
leave
mov
add
sub
sub
add
cmp
jnp
inc
add
sbb
clc
add
add
insl
add
add
add
es
inc
clc
sbb
add
gs
push
add
test
or
fsubrl
mov
push
add
jo
add
out
push
add
shrb
add
loop
push
sbb
add
mov
clc
inc
add
xor
add
shrb
xchg
lods
sahf
jbe
lea
int
clc
in
push
add
adc
add
add
jmp
pop
clc
insb
mov
clc
dec
push
dec
xor
push
add
xor
add
clc
push
add
mov
push
add
and
inc
add
and
add
dec
popf
imul
add
add
xchg
popf
mov
jb
add
fldcw
push
inc
clc
xchg
jl
xchg
out
mov
clc
xchg
imul
add
test
clc
sub
clc
mov
hlt
xchg
bound
add
clc
lock
add
add
out
jae
add
incb
pop
clc
mov
cmpsb
clc
xchg
jne
xchg
fdivr
sarl
xabort
and
add
lods
rorb
fcom
clc
rorb
inc
clc
jge
push
add
xor
add
sar
adc
clc
imul
add
sar
out
xchg
lods
out
das
outsb
bound
add
add
add
add
test
mov
pop
inc
add
sub
push
push
icebp
cmp
add
xor
add
dec
repz
stc
fnsave
add
clc
test
pop
data16
aad
xor
sub
mov
add
add
add
test
cmp
clc
clc
jmp
adc
clc
clc
loop
xor
nop
mov
push
sar
clc
fstpt
insl
mov
push
clc
cmp
inc
add
sbb
clc
xchg
out
ret
fisttpl
movsb
clc
push
or
add
cmp
outsl
leave
mov
jmp
jle
adc
add
data16
pop
xchg
into
sbb
clc
jecxz
das
mov
xor
add
mov
and
add
push
pop
cmp
icebp
xchg
sar
int
rclb
add
xchg
mov
cltd
or
cmp
xchg
or
xor
mov
dec
imul
mov
add
jbe
push
jmp
test
cmp
mov
jmp
in
mov
shll
add
jb
add
add
stos
stc
or
clc
daa
clc
xchg
dec
clc
adc
add
mov
add
add
in
dec
xchg
xlat
mov
outsl
mov
pop
lret
pshufw
inc
clc
lret
or
clc
jg
push
clc
jne
ja
cmp
leave
sti
aad
icebp
test
mov
sbb
sti
dec
sub
add
push
cld
mov
xor
cmp
add
adc
add
add
add
jb
add
xor
add
add
add
hlt
fmull
dec
mov
adc
add
js
clc
js
clc
xchg
loopne
xor
add
mov
sub
popa
add
inc
clc
out
je
pushf
xor
clc
loopne
pop
cld
roll
add
add
and
add
lcall
push
ljmp
add
outsl
fldt
push
inc
clc
or
negb
push
jmp
sub
mov
add
in
data16
aas
add
pop
jo
add
insb
mov
jecxz
aaa
test
jno
add
repz
nop
dec
xlat
fs
pop
or
push
ja
mov
mov
stos
into
sbb
cmp
add
cld
mov
jmp
clc
fwait
fwait
gs
ret
jno
add
add
lret
clc
mov
dec
mov
push
or
add
mov
cmp
cli
in
add
xchg
adc
add
add
push
and
add
add
insl
fwait
sub
das
push
xor
add
adc
ljmp
shrl
aas
cltd
aad
cld
mov
clc
es
addr16
or
add
aaa
jb
add
clc
loope
repnz
add
jl
clc
cmc
xor
add
mov
cld
frstor
sar
sub
clc
inc
clc
je
add
enter
add
stc
pop
sbb
xchg
in
daa
clc
xor
add
ss
lahf
insb
hlt
cmp
mov
in
mov
sbb
adc
add
clc
loopne
sub
pushf
mov
gs
xchg
mov
pop
out
ret
clc
xchg
cmp
xchg
cmpsl
clc
aad
aad
push
mov
scas
notl
clc
or
lock
cmp
shlb
dec
call
imul
fdivr
and
std
scas
xchg
das
inc
clc
xor
add
jg
xor
out
adc
add
clc
int3
pop
sub
push
mov
lea
dec
sub
add
cmp
add
cwtl
jmp
decl
add
js
clc
push
inc
clc
fs
enter
clc
and
add
adc
add
repnz
pop
movsl
clc
cmpsl
clc
pop
clc
xchg
jle
add
lcall
clc
xlat
clc
mov
scas
and
add
lret
in
inc
add
push
mov
mov
in
add
test
pop
cmp
pop
insb
inc
clc
sete
add
rorl
or
ror
adc
add
out
lea
aam
jnp
xlat
jbe
cmp
xchg
cmp
sub
add
clc
iret
mov
loop
push
clc
pop
jns
cmp
ss
add
dec
xchg
popf
hlt
inc
clc
test
clc
fsubr
movsb
clc
outsb
inc
add
cmp
cli
jecxz
jbe
clc
aas
mov
inc
clc
sub
clc
cmp
add
not
push
clc
inc
add
imul
pop
in
xchg
and
add
js
cmp
inc
add
jne
add
push
sbb
mov
and
add
leave
mov
lcall
out
dec
cmc
xor
add
add
pop
bound
add
clc
cmc
jle
add
mov
inc
clc
mov
mov
add
lret
add
stos
stos
mov
insl
or
clc
add
xor
clc
mov
clc
test
or
xor
add
and
add
gs
ss
mov
inc
clc
dec
xlat
iret
scas
aad
mov
arpl
add
add
add
aam
clc
ret
add
insl
int3
test
mov
mov
fwait
jno
add
and
push
add
cmpsb
clc
and
add
add
test
pushf
imul
add
add
pop
sbb
test
adc
add
clc
dec
outsb
dec
out
pushf
ret
sbb
add
movsb
clc
call
dec
mov
cmp
cmp
or
clc
inc
add
mov
iret
out
addr16
sar
pusha
add
shll
add
inc
clc
fisubs
inc
add
imul
fnsave
cmp
add
push
mov
aam
fildl
add
fstpl
sub
rcll
add
in
data16
mov
clc
out
addr16
fs
mov
cmpsl
clc
push
mov
add
xlat
nop
jge
or
clc
and
add
pop
xor
add
into
cmp
mov
add
add
faddl
add
iret
push
lock
call
add
fmull
pop
test
xchg
push
add
fs
fs
mov
pop
mov
clc
icebp
into
cmp
test
lods
push
mov
flds
add
add
lods
push
clc
fisubrs
add
ss
outsl
ljmp
call
mov
sbb
dec
dec
jns
mov
clc
dec
push
mov
out
movsl
clc
adc
adc
add
xor
add
add
push
sbb
add
clc
xchg
or
pop
fs
cltd
cltd
cwtl
jo
add
js
jmp
clc
fs
cmp
xchg
and
mov
inc
clc
shl
or
and
add
push
fldl
clc
fs
cmpsl
clc
sub
mov
add
ds
jg
push
add
pop
inc
add
cmpsb
clc
mov
ficoms
jb
add
and
out
jns
ret
add
or
cwtl
insl
pusha
add
sbb
add
add
add
loopne
mov
movsl
clc
push
clc
iret
dec
mov
repz
add
pop
mov
pushf
enter
add
mov
psllq
clc
test
ds
cmp
sarl
popf
imul
clc
lahf
incl
add
inc
add
or
fs
pop
ficoml
add
clc
mov
add
ss
cmp
cmp
add
stc
push
add
sbb
aad
xchg
adc
jmp
clc
mov
iret
fdivrs
add
add
inc
add
xchg
pop
sub
push
pusha
add
mov
cmp
add
shrl
xchg
jmp
dec
jne
clc
fs
push
add
jg
pop
mov
fisubs
add
mov
inc
add
fwait
lods
or
mov
push
clc
xbegin
fnstcw
gs
icebp
into
jno
add
dec
xchg
mov
xor
add
out
mov
push
mov
test
loop
adc
je
xor
add
clc
insb
sbb
jle
ljmp
clc
test
xchg
xlat
push
loop
in
push
jp
and
clc
cli
aad
out
mov
das
mov
add
mov
sub
stos
mov
add
adc
add
add
in
mov
iret
inc
add
out
sub
jp
fnsave
sbb
clc
push
add
inc
add
stos
or
leave
sub
pop
clc
xlat
leave
cmp
pop
nop
repnz
clc
cmp
addr16
leave
mov
inc
add
lcall
data16
or
jmp
insl
lods
push
pop
lea
add
into
lods
imul
clc
insl
xchg
and
add
add
ret
clc
sti
pop
mov
stc
lret
test
sarb
add
clc
pop
clc
js
mov
add
sub
adc
add
std
es
mov
scas
int3
adc
add
push
add
jecxz
rcrb
xor
clc
ljmp
add
sub
jmp
cmp
add
pop
loop
aaa
jbe
adc
add
mov
mov
loop
mov
stos
cmp
jecxz
xor
add
test
mov
sub
mov
js
or
clc
int3
sub
es
cmp
pop
dec
xchg
mov
cmp
loopne
or
clc
sub
clc
fldcw
add
mov
clc
ja
enter
gs
mov
add
clc
stos
mov
jbe
clc
push
push
mov
push
push
clc
mov
inc
add
or
ret
mov
clc
ja
icebp
lods
sar
clc
lcall
push
add
xchg
xor
add
sbb
clc
and
iret
ss
add
add
pop
or
jbe
clc
dec
arpl
add
pop
inc
clc
cwtl
cmpsl
clc
inc
add
pushf
sub
add
ljmp
add
out
imul
cmp
dec
add
add
clc
ficomps
inc
add
lea
add
addr16
jae
add
add
mov
clc
insb
aam
in
adc
add
lcall
push
add
out
jmp
inc
add
mov
sub
clc
sub
adc
add
lock
clc
out
lcall
mov
add
int3
pop
or
add
add
and
add
xchg
ss
cld
rcl
addr16
imul
mov
je
int3
dec
jno
add
clc
leave
cs
cmp
shll
mov
mov
jp
push
jne
pop
clc
mov
stos
jnp
sbb
fs
loope
sbb
clc
pop
loop
inc
clc
movsb
clc
dec
mov
clc
push
pop
sar
scas
push
add
into
xor
add
insl
icebp
out
rcrl
mov
clc
mov
fwait
stos
ret
cmpsl
clc
cwtl
in
sbb
hlt
or
jne
add
gs
xchg
pusha
add
mov
clc
jge
ja
je
sub
ds
stos
mov
add
add
stc
clc
inc
add
cmc
enter
cmp
mov
add
mov
mul
clc
xor
add
add
pop
clc
mov
mov
or
add
clc
clc
pop
aam
out
mov
mov
mov
pop
push
iret
pop
std
ss
dec
gs
bound
add
outsb
pop
push
test
or
cmp
clc
faddp
clc
push
add
add
inc
clc
cwtl
cmp
jnp
clc
lcall
add
pop
clc
fcoml
insl
inc
add
push
movsl
clc
jl
cs
xchg
ja
pusha
add
jne
clc
scas
cs
jno
add
das
mov
add
or
add
cs
faddp
clc
ja
fsubp
clc
in
xor
add
cmp
add
sub
add
dec
movsl
clc
sar
lret
cmp
pop
clc
xbegin
pop
stc
clc
fisubrl
or
xchg
fmull
cmp
add
lret
js
aas
cmp
mov
add
out
scas
adc
clc
push
add
int3
into
fcompl
and
mov
cmpsl
clc
int
add
ja
xor
add
push
stos
cs
mov
sub
clc
xchg
inc
clc
rcrb
add
mov
imul
out
sub
mov
add
scas
dec
sbb
adc
outsb
xchg
cmp
lods
lcall
push
and
and
add
clc
xchg
mov
clc
mov
add
xlat
loope
push
add
inc
clc
clc
insl
sub
pop
fwait
mov
idivb
out
inc
add
in
lods
sbb
rcrl
clc
in
call
sub
adc
add
add
data16
inc
add
cmpsl
clc
stos
loopne
fstpt
mov
add
sub
pop
pop
into
ds
mov
add
add
test
mov
push
push
xor
add
add
add
sub
add
clc
insl
loopne
cmp
and
cmp
jge
add
push
clc
or
push
add
inc
clc
xchg
out
dec
cmp
aaa
fwait
sub
add
mov
popf
dec
push
add
int
out
xchg
fisttps
or
sar
or
dec
jmp
jecxz
mov
lock
out
pop
fisttpll
jecxz
add
sbb
add
clc
das
gs
push
pop
jle
add
or
rolb
add
and
and
add
clc
ficomps
add
add
and
add
add
pop
mov
add
int
je
jecxz
inc
add
push
add
movsl
clc
sbb
and
add
add
add
clc
mov
clc
mov
clc
xor
add
clc
cmp
add
nop
or
add
cld
cmpsb
clc
ss
into
cmp
clc
loopne
ss
fwait
mov
fstl
xchg
xchg
cmp
aas
jne
push
adc
add
and
add
jbe
sbb
cmp
add
jb
add
or
jg
clc
scas
push
add
xchg
bound
add
clc
or
add
cmp
adc
add
lock
add
ret
clc
idivb
jge
clc
in
jl
add
int
mov
add
sbb
outsb
stc
mov
clc
push
xchg
cwtl
cmp
test
iret
mov
xor
add
push
data16
insb
repnz
xbegin
add
stos
and
add
cmp
clc
mov
mov
xor
bound
add
nop
xabort
clc
mov
inc
add
lcall
add
arpl
add
adc
add
insl
repz
pop
mov
add
mov
add
pop
xchg
int
add
mov
xabort
es
ret
jecxz
call
iret
cmp
clc
hlt
adc
add
clc
pop
test
and
add
icebp
inc
add
xlat
popa
add
mov
add
push
add
decb
clc
add
add
clc
repz
lret
cltd
loop
lcall
cmp
icebp
inc
clc
cli
mov
inc
clc
xabort
pop
popf
push
add
dec
push
clc
mov
sub
imul
stos
adc
add
and
adc
test
das
xor
clc
es
jno
add
in
daa
clc
mov
pusha
add
sahf
fdivrs
sbb
xchg
jae
add
push
in
or
clc
stos
jne
in
inc
clc
xor
add
adc
out
out
mov
clc
negl
pop
mov
add
add
jb
add
clc
and
inc
add
or
cmp
cmp
mov
add
xchg
adc
mov
add
mov
add
int3
aad
sub
fwait
pushf
inc
clc
lea
lret
dec
addr16
mov
fs
popf
out
arpl
add
fidivrl
clc
push
add
cmp
inc
clc
jns
add
stos
xchg
xabort
imul
fmuls
bound
add
test
dec
xor
push
cmpsl
clc
inc
clc
cltd
sbb
clc
sub
clc
jnp
clc
jle
clc
int
insb
gs
mov
and
add
fwait
mov
movsb
clc
pop
adc
sbb
sbb
sar
sub
jno
add
clc
addr16
adc
jb
add
adc
add
sarl
clc
cmp
pop
movsb
clc
jns
sub
clc
push
add
jne
cmpsl
clc
sbb
cmp
fistl
fdivrl
lret
sbb
out
sub
clc
fadd
clc
pop
movsl
clc
fs
unpckhps
xchg
ret
lcall
sub
pop
push
xbegin
clc
or
loope
aam
bound
add
clc
dec
jmp
add
test
mov
sub
clc
std
data16
inc
add
cmp
test
lahf
fadd
clc
loopne
xchg
push
add
inc
add
mov
popf
jns
clc
inc
clc
push
clc
je
adc
add
add
test
push
lock
jp
das
or
clc
push
add
xbegin
inc
add
sub
clc
cmp
clc
adc
add
rcl
inc
clc
jg
jae
add
add
ret
clc
stc
lock
hlt
mov
and
add
push
clc
mov
clc
mov
add
icebp
jo
add
add
bound
add
clc
jbe
sar
out
mov
ja
inc
clc
clc
fisubs
xor
add
add
fucomip
inc
add
mov
fiaddl
lahf
fdivl
add
cmp
xor
add
cwtl
cmpsb
clc
push
add
inc
add
loope
popf
repnz
clc
mov
stos
movsl
clc
out
in
fildll
add
add
sar
jp
popa
add
pop
jmp
data16
es
clc
pop
clc
xor
add
add
mov
add
mov
add
scas
mov
repnz
add
aad
jbe
jno
add
jecxz
icebp
lods
shl
clc
mov
mov
adc
add
xchg
cmp
sbb
jg
clc
push
or
add
loop
stos
sbb
jo
add
jle
test
in
aad
out
imul
xor
scas
ss
and
add
jmp
cmp
adc
add
cmp
add
movsb
clc
jl
clc
out
in
sbb
int
mov
out
sbb
clc
jle
mov
dec
or
clc
cmp
popf
lret
negb
fucomp
cmp
dec
jne
clc
mov
push
inc
clc
ret
sub
sti
inc
add
stos
xchg
xchg
inc
add
ljmp
push
mov
clc
push
clc
popf
pushl
clc
jnp
xor
add
jo
add
clc
outsl
mov
loopne
adc
add
add
add
fs
cmp
pop
inc
add
mov
jae
add
clc
or
scas
movsl
clc
loopne
aam
gs
in
int
repz
cmp
jno
add
clc
fndisi(8087
clc
cmp
xchg
leave
mov
jnp
clc
or
jb
add
add
xor
xchg
xchg
or
mov
cmp
cmp
cmpsl
clc
push
lea
imul
pop
scas
popf
push
add
sub
mov
cmp
pop
sub
es
test
add
add
add
sti
xchg
or
add
repz
add
pop
pushf
fwait
sbb
add
push
add
fnsave
cmp
xchg
fwait
jle
iret
xchg
fsubl
clc
scas
mov
mov
inc
clc
add
lock
shlb
vcvtdq2ps
divb
add
ret
add
jle
clc
imul
and
add
sbb
mov
inc
add
mov
stc
xchg
frstor
jae
add
xchg
push
add
mov
mov
clc
pushf
sbb
loopne
xor
mov
iret
mov
push
daa
clc
sbb
mov
cmp
jge
mov
add
ror
jge
out
inc
clc
das
out
xchg
xor
add
mov
inc
add
test
clc
shll
inc
clc
sar
clc
sbb
out
sti
pop
sar
add
movsl
clc
pop
inc
clc
ja
mov
ds
push
addr16
inc
add
mov
data16
sub
add
xchg
jmp
stos
mov
sub
inc
clc
fistps
ss
in
or
clc
ljmp
clc
cmp
clc
cmpsb
clc
insl
add
add
clc
hlt
adc
add
adc
push
bnd
xlat
cld
push
push
clc
mov
test
popa
add
cmp
enter
ret
clc
stc
and
add
jg
cltd
dec
bound
add
mov
mov
cld
jmp
insl
sbb
clc
leave
mov
sub
stos
std
push
add
sub
clc
mov
adc
add
sub
clc
jmp
add
jne
popf
mov
mov
loop
or
inc
add
dec
and
mov
faddl
cmp
pop
adc
pop
cmp
clc
stos
xlat
or
add
sub
inc
add
lret
cld
notl
inc
add
jp
clc
add
xchg
pop
dec
xor
add
jge
ret
clc
fmuls
pushf
dec
xor
add
xchg
stc
fisubl
repnz
add
clc
int
clc
aaa
xchg
in
and
add
or
mov
or
clc
lods
aas
cwtl
xor
add
add
out
add
add
addr16
je
push
clc
test
fimull
mov
sbb
add
sub
shll
add
int3
or
clc
jbe
add
leave
jl
add
cmp
add
add
inc
add
or
clc
pop
xchg
out
or
jnp
clc
cmp
ljmp
cmp
lret
add
movsb
clc
int3
shr
jbe
add
in
lods
lock
inc
clc
sub
clc
es
pusha
add
push
sbb
sbb
clc
sub
sub
add
scas
jo
add
cmp
clc
xor
add
leave
pop
clc
mov
push
add
cmp
cmp
sahf
inc
add
pop
test
sub
and
negl
jl
cmp
js
add
jo
add
add
xabort
clc
mov
fbstp
add
push
in
dec
sub
add
popa
add
shlb
add
add
jl
xor
add
mov
int
push
add
aam
xchg
pusha
add
lock
add
push
sbb
add
cltd
lret
add
cmp
fsubrp
and
add
sub
iret
lea
add
cmp
pop
sub
in
lods
or
pop
in
xor
add
and
add
loop
das
dec
fisttpl
jae
add
push
add
pop
gs
xchg
outsb
outsb
adc
push
add
inc
add
pop
je
clc
int3
cmc
std
push
clc
shlb
inc
clc
ljmp
cmp
add
pop
fisttpll
clc
inc
add
inc
add
clc
aam
clc
mov
ja
inc
add
aaa
cmc
and
add
xchg
cmp
cmp
cmp
jo
add
clc
xchg
push
add
js
adc
add
call
push
add
outsb
inc
clc
jmp
dec
jbe
fnstcw
add
loop
test
clc
jns
arpl
add
push
imull
xchg
gs
dec
sub
clc
adc
add
clc
addr16
inc
clc
addr16
rorl
sub
add
clc
cld
mov
and
ficoms
or
aam
imul
clc
decl
repz
test
outsl
mov
test
add
pop
scas
fisubrs
cli
cmp
push
add
lret
inc
clc
inc
clc
leave
stos
pop
cmp
clc
dec
cli
mov
clc
sub
clc
cmp
cmp
add
cmp
clc
lret
mov
pop
sub
add
add
add
add
xchg
or
jg
clc
out
out
outsb
rol
clc
out
je
cwtl
inc
clc
push
pop
enter
xchg
je
clc
mov
cmp
stc
mov
movsb
clc
jne
ror
push
add
leave
enter
add
ret
clc
out
sbb
push
sbb
add
mov
sbb
das
scas
jmp
pusha
add
cmp
xabort
add
add
xor
pop
jns
nop
cltd
dec
ja
clc
fprem
fiadds
or
or
ret
clc
cld
jle
sti
push
add
call
jo
add
add
jle
clc
xor
add
int3
movsl
clc
or
xchg
xchg
movsl
clc
je
fcomps
clc
cmp
out
or
add
jmp
add
aaa
dec
jg
and
jno
add
jno
add
clc
in
out
sub
jbe
add
jo
add
xor
add
xor
add
pop
cmp
add
add
clc
shll
aaa
and
lcall
xchg
das
adc
jns
add
or
mov
add
ss
jle
add
jbe
imul
add
pop
dec
xchg
sub
insl
pop
sub
cmp
mov
jo
add
sbb
clc
clc
testl
fwait
push
add
cmp
dec
sub
mov
sbb
add
mov
add
clc
cmpsl
clc
mov
dec
mov
push
scas
sub
stc
add
add
stc
xchg
cmp
call
add
inc
clc
in
mov
jno
add
clc
dec
xor
add
enter
jb
add
ja
imul
pop
rorl
mov
mov
xchg
popa
add
jns
and
dec
and
add
add
js
cmp
sub
xbegin
clc
roll
add
xabort
es
jmp
je
adc
add
jne
add
or
clc
daa
clc
in
ret
repnz
add
xor
push
add
arpl
add
fldl
cmp
add
out
pop
add
add
dec
repz
clc
adc
clc
sbb
ss
mov
xlat
nop
addr16
mov
lea
adc
divl
lods
push
dec
gs
ja
dec
jp
clc
xchg
pop
jbe
sahf
adc
add
mov
icebp
mov
cmp
nop
ss
adc
add
clc
and
add
fnstcw
add
lcall
pop
sub
push
add
push
loopne
cmpsb
clc
addr16
cld
cmp
add
out
cmp
or
scas
sar
or
pop
xchg
jbe
add
out
std
jb
add
clc
mov
into
int3
inc
clc
jmp
clc
and
add
or
dec
pop
clc
mov
sar
shlb
stos
sbb
xchg
push
and
insl
dec
xchg
jb
add
imul
clc
push
xchg
lea
loop
divl
outsl
mov
add
add
mov
sbb
jp
add
xbegin
cmpsl
clc
lods
lret
sti
lcall
sub
pop
and
out
cmp
mov
add
ja
ret
lret
clc
jmp
iret
loope
ficoml
mov
add
or
imul
xchg
mov
sub
push
xchg
push
clc
jmp
lcall
mov
stos
ja
clc
jg
clc
mov
es
xbegin
clc
lret
aad
clc
sub
add
add
mov
add
aas
stos
lods
pushf
popf
mov
cmp
cmp
stos
mov
stc
mov
add
mov
outsb
sub
and
add
insb
cmp
clc
aam
xchg
aam
clc
sar
xchg
repnz
std
cmpsb
clc
sbb
cmpsb
clc
jle
add
sbb
and
add
xor
add
add
add
add
add
out
sub
dec
mov
inc
add
lahf
ljmp
add
add
gs
inc
add
jge
lods
icebp
push
add
popf
sub
imul
clc
in
cmpxchg
mov
add
add
add
sbb
cmp
dec
dec
mov
mov
test
push
pop
pop
xchg
mul
clc
pop
sbb
ret
and
add
dec
mov
pop
jne
inc
clc
jmp
loop
add
add
sbb
in
rcrb
push
sti
out
decb
dec
jmp
add
cmp
stos
insl
adc
add
mov
clc
adc
add
clc
fiadds
clc
mov
clc
pop
xchg
push
push
sahf
mov
jl
add
out
fbstp
clc
or
scas
mov
jbe
loopne
inc
clc
add
test
mov
or
add
stc
lret
inc
add
aaa
hlt
data16
call
add
clc
push
xor
psubd
inc
add
adc
add
sub
ds
clc
and
add
clc
mov
cmp
and
add
pop
jge
pushf
aad
clc
push
add
jnp
add
ret
clc
inc
clc
popa
add
aas
inc
clc
inc
clc
mov
jle
insl
int3
es
add
add
add
cmp
inc
add
pop
dec
xor
add
push
scas
aaa
or
bound
add
xchg
lea
bound
add
mov
add
xchg
test
and
add
loopne
jo
add
clc
cmpsl
clc
inc
add
arpl
add
add
lea
add
popf
dec
dec
loop
mov
clc
and
add
mov
in
fimull
std
enter
mov
add
jno
add
clc
out
sub
jno
add
add
push
inc
add
xor
clc
sbb
clc
mov
add
add
add
add
clc
std
test
xor
jg
arpl
add
sub
clc
ret
clc
sbb
ss
fnstcw
add
outsb
pop
mov
add
jnp
clc
rclb
push
add
addr16
cmp
clc
data16
nop
imul
add
imul
or
xor
add
add
jno
add
movsl
clc
lea
pop
ss
popa
add
adc
add
das
cmp
add
inc
clc
adc
push
pop
push
add
xlat
mov
scas
mov
add
add
jle
jg
sub
xabort
and
add
popf
sbb
add
mov
xchg
xor
data16
sar
add
addr16
pop
lods
push
dec
or
jge
clc
or
xor
add
into
inc
clc
aaa
jle
sbb
cmc
jae
add
mov
cmp
clc
pop
outsb
shlb
mov
adc
add
add
add
insb
or
pop
stos
ljmp
jb
add
rcrl
clc
or
add
add
gs
insl
inc
clc
outsl
mov
es
push
add
test
xor
add
clc
lods
sub
sub
add
adc
add
add
pop
xchg
ret
clc
xchg
rorb
fstl
clc
std
lret
jge
jns
clc
fwait
xbegin
inc
add
mov
clc
jns
jmp
pop
or
cwtl
cld
xchg
jnp
arpl
add
jns
vsubps
fcompl
dec
cli
aam
test
add
inc
clc
clc
fldcw
jmp
pop
mov
clc
mov
add
clc
xchg
scas
int3
mov
insl
jmp
aaa
xchg
or
jecxz
push
mov
add
std
jne
clc
test
mov
test
cmc
add
jle
xchg
pop
clc
jg
and
add
cmp
push
pop
or
sahf
leave
and
add
cld
sub
int
aas
out
lock
push
add
add
adc
add
sbb
clc
pop
xchg
in
cmp
nop
cmc
into
daa
clc
insb
jge
ficoms
loopne
pop
clc
cmp
add
xchg
clc
out
repnz
lcall
sub
xchg
idivl
cwtl
jle
xchg
inc
clc
and
add
clc
shll
add
stc
dec
call
sbb
pop
clc
ret
mov
or
pusha
add
fists
add
pop
clc
sbb
xchg
out
or
add
aaa
setp
sub
hlt
pop
xor
add
push
add
add
int3
adc
add
xabort
jno
add
add
lret
inc
clc
out
aaa
mov
or
add
push
clc
and
add
sub
clc
std
lods
inc
clc
push
add
in
je
add
pusha
add
xor
clc
int
into
cmp
clc
inc
add
or
clc
dec
add
add
and
add
bound
add
pushl
clc
sub
mov
sbb
add
clc
aaa
shr
stc
sub
add
xor
add
xor
jp
mov
pop
movsb
clc
mov
sysexit
stos
pop
es
pop
mov
cmp
or
add
sub
insl
and
add
mov
add
cmp
add
pop
pusha
add
push
dec
faddp
clc
xchg
shll
cmp
mov
clc
lcall
out
add
add
loope
and
add
add
out
cwtl
sub
mov
add
dec
xor
lods
inc
clc
or
and
add
dec
lods
mov
or
arpl
add
add
pushf
inc
add
loopne
test
pop
cmp
add
add
clc
inc
clc
sub
add
add
ds
lods
jmp
clc
cmp
popf
stc
push
decl
mov
push
add
fs
xchg
mov
clc
xchg
gs
push
cmp
es
mov
decl
clc
lods
lods
add
add
add
imul
clc
dec
mov
clc
test
sar
xabort
add
xchg
lock
and
add
movsl
clc
xor
add
jge
stos
aaa
cltd
stc
mov
sbb
mov
clc
push
inc
add
cmp
or
es
int3
cmp
pop
add
add
add
inc
add
adc
add
mov
push
in
popf
in
add
add
add
sar
cmp
sbb
add
nop
sub
cmpsb
clc
mov
xchg
pushf
arpl
add
dec
xor
add
mov
push
clc
jg
mov
clc
pop
imul
jecxz
or
rorl
push
mov
xchg
aas
cmpsl
clc
jo
add
dec
sar
test
ror
movsb
clc
push
add
loop
and
add
sahf
add
add
popa
add
push
and
add
leave
mov
mov
clc
dec
ret
clc
inc
add
add
test
mov
clc
sbb
mov
sahf
fistpll
cmovo
add
xchg
add
add
pmaddwd
in
xor
add
je
pop
adc
add
cs
push
adc
add
clc
or
add
mov
clc
cmp
clc
mov
mov
repz
mov
adc
add
int3
cmc
ret
sbb
in
or
clc
testb
int3
pop
cmp
clc
push
add
lock
or
shll
add
clc
mov
out
jle
fsubs
add
adc
xbegin
clc
xchg
xor
clc
in
pop
dec
vaddps
ljmp
xor
add
add
pop
in
jns
clc
adc
add
dec
outsl
push
movsl
clc
scas
call
push
data16
dec
pushf
dec
push
add
push
add
add
add
xor
add
xor
add
clc
sub
clc
mov
add
mov
pop
or
test
enter
enter
sbb
icebp
dec
or
add
outsb
out
xchg
test
cmp
add
popf
loopne
ret
clc
pop
add
add
xlat
gs
call
mov
add
add
add
clc
cmp
xor
clc
bound
add
cltd
int
add
xchg
push
lahf
add
sar
and
add
clc
pop
xbegin
cmp
clc
pop
outsl
sbb
clc
pop
inc
add
cmc
movsb
clc
stos
cmc
push
clc
mov
jae
add
clc
cmp
clc
push
add
inc
clc
push
dec
xor
add
add
sub
mov
mov
mov
jb
add
clc
imul
repnz
gs
popf
test
inc
add
mov
pop
cmp
inc
clc
add
add
add
insb
leave
lods
cmp
inc
clc
cli
lahf
add
add
clc
pop
jg
adc
add
std
add
add
nop
xbegin
adc
imull
outsl
pusha
add
sbb
clc
and
add
add
or
in
and
add
loopne
push
add
pushf
inc
clc
and
je
clc
in
jg
cmp
mov
add
js
clc
mov
add
add
add
clc
ffreep
clc
mov
call
std
push
add
sti
out
jp
fwait
sbb
xchg
fidivs
loop
sub
add
jp
clc
pop
clc
xor
add
jp
addr16
mov
adc
add
aas
mov
xbegin
cmp
add
clc
clc
cmp
add
xchg
jmp
add
aaa
mov
mov
clc
and
add
cs
cmc
in
cmp
add
xbegin
add
add
movsb
clc
push
ficoml
jno
add
add
in
imul
add
ret
clc
mov
clc
and
and
add
mov
mov
sub
xlat
push
icebp
test
inc
add
ljmp
inc
clc
add
pop
pop
push
add
mov
inc
clc
mov
sub
sbb
popf
fiaddl
data16
mov
es
cmp
sub
clc
xor
lcall
pop
sub
clc
xbegin
testb
cmp
int
bound
add
cmp
jnp
clc
or
add
add
aad
cmp
inc
add
sbb
add
leave
mov
clc
ja
add
clc
fdivrs
scas
movsl
clc
call
clc
xchg
aam
pop
sbb
pop
jmp
sbb
clc
hlt
adc
lock
bswap
push
add
popa
add
push
jmp
in
inc
add
test
mov
sar
mov
adc
add
clc
clc
inc
clc
xchg
push
add
mov
aad
iret
cmp
clc
pusha
add
imul
add
int3
inc
clc
das
je
ja
xbegin
cmp
mov
rep
aam
cmp
clc
shr
mov
mov
mov
jb
add
sbb
fwait
jmp
cli
xchg
inc
clc
sbb
add
xchg
mov
add
sbb
clc
mov
jmp
clc
lods
cmp
mov
pop
clc
imul
out
sbb
sar
call
add
pop
cmp
add
sbb
jmp
cmp
clc
push
clc
or
notb
add
clc
or
adc
clc
dec
icebp
adc
clc
push
add
xlat
inc
add
repz
popf
imul
pop
jns
clc
incl
add
out
jae
add
add
add
mov
pop
hlt
and
or
inc
clc
aam
xchg
xchg
cwtl
es
adc
add
repz
add
test
clc
jne
mov
xor
add
add
clc
pop
dec
ffreep
clc
movsb
clc
cltd
sbb
sub
add
imul
mov
add
shlb
add
adc
add
jmp
add
cmp
add
mov
add
xchg
cmp
mov
mov
add
pop
mov
lret
add
jae
add
pop
xor
add
aas
gs
lods
pop
jge
clc
aas
jmp
add
add
enter
lods
or
clc
cs
xor
add
add
adc
add
mov
addr16
aad
clc
xchg
jl
add
push
xchg
cmp
clc
jmp
mov
clc
sbb
add
add
cmp
arpl
add
add
inc
clc
jo
add
jge
insl
push
clc
xchg
cld
test
dec
jns
sbb
add
pop
mov
mov
or
test
adc
cs
clc
fstl
add
push
pusha
add
xchg
rcll
add
mov
add
xchg
sar
clc
mov
clc
enter
add
and
add
xchg
xchg
in
mov
add
add
push
sahf
test
sahf
mov
clc
mov
std
aam
clc
cmp
xabort
lahf
xchg
gs
jp
add
scas
pushf
sar
test
push
add
mov
je
ja
clc
xchg
dec
pop
or
popf
in
arpl
add
fistpll
out
lods
clc
mov
and
add
xchg
pop
xchg
xor
add
xchg
xchg
jnp
lods
jbe
clc
and
dec
push
into
mov
add
push
pop
rcr
ret
cmp
add
popf
in
cmp
and
mov
ja
clc
sbb
add
jnp
clc
stos
fiadds
add
add
dec
inc
clc
insl
or
mov
lcall
sub
clc
stos
jns
adc
add
je
clc
xchg
stos
sub
jp
and
clc
ret
clc
and
add
add
sub
add
out
iret
push
arpl
add
clc
fwait
mov
cwtl
inc
add
pop
ja
clc
mov
add
mov
add
jl
cmp
sar
pop
lcall
cs
repz
jmp
test
test
cmp
adc
add
add
testb
inc
clc
clc
in
enter
mov
clc
sub
mov
ficoml
push
clc
mov
clc
loope
out
and
add
sahf
cmp
add
add
add
inc
add
sbb
cmp
clc
test
pop
imull
clc
clc
add
inc
clc
sub
add
add
aad
inc
add
int
and
add
xchg
sti
test
lret
sub
sahf
xor
add
mov
mov
add
and
add
mov
mov
adc
or
inc
clc
pop
and
add
or
fsubl
clc
stos
movsl
clc
or
popf
js
lock
inc
add
bound
add
ret
clc
push
add
xchg
stos
inc
add
jne
pop
push
add
test
add
add
add
clc
cmp
sub
mov
mov
add
mov
and
add
mov
data16
test
cmpsl
clc
jns
xabort
ss
sar
fdivrl
mov
clc
test
dec
outsb
jo
add
add
and
add
jb
add
add
pusha
add
leave
lock
clc
adc
add
ja
push
clc
lahf
dec
push
add
sub
loope
push
mov
call
sti
push
clc
sbb
inc
add
lea
movsb
clc
jmp
clc
sbb
mov
add
add
add
clc
mov
cltd
outsb
mov
jne
and
frstor
clc
fidivs
jbe
add
ljmp
push
cmp
clc
dec
sub
shll
clc
popf
ljmp
mov
jecxz
repz
clc
jmp
clc
or
cmp
aaa
rorl
add
pop
nop
mov
stos
loope
cmpsb
clc
jle
clc
and
add
add
add
call
push
add
repnz
clc
repz
pop
push
push
loope
add
add
out
dec
mov
clc
out
mov
clc
cmp
add
movsl
clc
push
out
es
mov
clc
sar
dec
ja
add
ret
add
push
xchg
xchg
cmp
add
adc
add
add
jo
add
add
push
or
jo
add
xchg
xor
add
cmp
mov
pop
lret
lcall
pop
cmp
in
repnz
add
mov
adc
add
add
js
ficomps
clc
xchg
push
clc
mov
xor
add
clc
shll
das
push
xbegin
add
mov
xor
add
sbb
popa
add
fiaddl
clc
and
add
clc
pop
das
mov
mov
add
cmp
add
add
clc
mov
adc
add
daa
clc
push
ret
clc
sub
lcall
clc
sbb
clc
xchg
push
pop
incl
add
lret
jo
add
es
sti
fdivrl
loope
incl
clc
sub
adc
push
add
fs
cmp
into
clc
mov
clc
arpl
add
clc
push
add
add
add
outsb
int3
fdivrl
sbb
cmpsl
clc
xor
add
add
jns
add
and
add
loop
or
add
add
fidivl
add
xchg
or
add
in
lahf
mov
clc
cmp
fsubrl
scas
fdiv
add
add
mov
add
mov
or
ja
sbb
add
repz
add
push
add
inc
add
cli
cmp
xor
push
clc
hlt
xchg
pop
mov
add
push
add
add
pop
clc
pop
xchg
cmp
popf
fisubrs
add
cmp
xabort
push
clc
arpl
add
clc
xchg
sar
clc
sub
arpl
add
data16
gs
pushf
and
add
clc
rcll
add
dec
mov
je
xbegin
add
jb
add
lahf
mov
mov
fcmovb
clc
out
mov
and
jns
shufps
add
clc
dec
sbb
adc
add
sar
sub
cmp
add
aaa
insb
in
sub
clc
es
jo
add
cmpsb
clc
inc
clc
rorb
cmp
add
out
xor
add
outsl
inc
clc
xbegin
clc
lret
cltd
cmp
int
clc
pop
jg
loope
inc
clc
insl
dec
mov
mov
bound
add
adc
add
cli
cltd
sar
jp,pn
push
add
pop
cmpsb
clc
sbb
add
mov
add
out
mov
addr16
cmp
inc
add
add
add
clc
pop
out
adc
add
clc
push
insb
inc
add
jle
xor
add
dec
stc
pop
mov
mov
xor
add
jne
cmpsl
clc
push
jne
pop
aas
mov
clc
hlt
idivb
add
xor
add
add
cli
loop
mov
clc
pop
xor
add
clc
xor
clc
fidivrs
cmp
jl
clc
inc
clc
js
pop
sar
enter
inc
clc
movsl
clc
dec
and
add
push
lock
jle
mov
cltd
or
inc
clc
in
test
popf
cmp
dec
rorl
add
push
int
clc
and
add
clc
mov
out
test
adc
loop
pop
data16
mov
clc
cli
loop
fbld
add
mov
adc
xchg
cmpsl
clc
jb
add
imull
fsubrl
clc
test
xchg
cli
aaa
or
jns
xchg
push
add
or
loopne
add
add
xchg
mov
and
add
jle
das
loop
bound
add
fsubrl
clc
mov
add
popf
sarb
xchg
sbb
push
jb
add
scas
jmp
add
add
xchg
sub
xchg
jp
clc
lahf
test
cmpsb
clc
das
lock
std
jecxz
cmp
add
and
add
mov
add
mov
add
sbb
gs
iret
rcrl
hlt
cmc
data16
out
mov
xchg
inc
add
popl
add
add
jo
add
cmp
jnp
jb
add
int3
nop
hlt
push
add
mov
sar
and
add
add
clc
xor
cmp
dec
fidivl
mov
xchg
scas
mul
clc
cmp
aad
clc
sbb
cmp
push
loopne
xabort
push
sti
aad
cli
xbegin
add
outsb
mov
xchg
push
int
clc
push
add
add
add
dec
dec
and
add
mov
stos
ficomps
adc
add
fs
sbb
add
lahf
ret
fisubl
popa
add
bound
add
aas
pop
fdiv
xor
add
clc
ret
nop
and
add
in
dec
idivl
and
add
clc
and
mov
or
fdivrs
cs
sti
lcall
fs
pop
cwtl
hlt
xchg
push
and
add
add
in
jp
clc
scas
add
add
add
add
and
mov
add
out
sbb
roll
aam
xlat
cmp
jns
clc
lock
cmp
aam
clc
mov
add
add
add
pop
inc
clc
sbb
jns
mov
ds
mov
out
jns
cmp
clc
cmp
add
add
ret
ds
ds
mov
sbb
aam
pop
bound
add
clc
inc
add
fldt
inc
add
cmp
mov
add
and
add
scas
xbegin
lods
mov
clc
inc
add
shr
cmp
lret
es
test
enter
out
shr
push
add
xchg
lret
cmp
clc
jecxz
jnp
clc
adc
add
icebp
arpl
add
ret
pop
adc
add
test
xor
add
push
pop
pushf
mov
fsubs
inc
add
dec
jmp
dec
lret
pop
xchg
push
add
out
mov
ds
insb
scas
mov
clc
clc
mov
inc
add
pop
mov
mov
popa
add
mov
add
clc
cmp
add
lods
std
mov
sbb
bound
add
adc
or
inc
add
push
jne
mov
add
add
pushf
rcrb
add
repz
clc
mov
daa
clc
bnd
clc
loope
dec
lods
enter
jle
clc
cltd
dec
mov
clc
call
mov
mov
icebp
pop
clc
ljmp
clc
data16
xor
add
inc
add
lret
cmpsb
clc
loopne
or
add
test
cmpsb
clc
inc
clc
es
leave
inc
add
push
add
pop
out
test
arpl
add
add
clc
incl
add
jne
sar
clc
addr16
cmp
jl
push
cli
int3
imul
push
add
or
add
iret
pusha
add
cmp
add
cmp
mov
or
sub
bound
add
outsl
movsb
clc
stc
mov
jo
add
jp
pushf
pop
clc
inc
clc
or
add
loope
push
outsl
jo
add
jge
clc
push
add
xchg
mov
mov
xchg
add
add
add
adc
clc
jno
add
in
cwtl
shll
ja
mov
loop
pop
pop
clc
xchg
cmp
clc
cmp
add
cmpsl
clc
dec
pop
cmpsb
clc
xlat
and
nop
das
xbegin
clc
jnp
mov
mov
dec
lods
dec
pop
clc
cmc
sarl
test
clc
xchg
and
add
xor
clc
loopne
mov
clc
and
add
insl
adc
add
xabort
add
mov
jae
add
movaps
add
fiaddl
add
aad
lret
clc
lcall
add
push
clc
mov
mov
lods
pop
das
lcall
clc
mov
mov
add
xor
add
push
clc
xchg
repnz
xchg
xchg
je
rcll
add
xchg
sahf
fnstcw
jns
push
xor
add
clc
pop
aad
pop
sahf
dec
lret
lret
jle
add
dec
push
add
adc
add
clc
mulb
xchg
or
hlt
mov
iret
cwtl
and
add
clc
lods
leave
test
push
add
xchg
push
sub
clc
cltd
dec
push
clc
pop
xchg
scas
pop
push
int3
fs
mov
or
inc
clc
dec
mov
add
test
jns
inc
clc
add
add
mov
inc
add
sbb
cmpsl
clc
aaa
xor
add
clc
out
popa
add
mov
cmp
cli
hlt
fbld
clc
cmp
push
add
pusha
add
mov
clc
fwait
mov
xor
add
add
clc
lods
aam
clc
mov
ret
clc
mov
adc
popa
add
mov
mov
adc
clc
stos
pop
stos
mov
add
mov
fimuls
scas
jmp
clc
dec
ds
mov
sar
mov
add
clc
nop
ljmp
add
pop
int3
sub
sub
das
or
push
clc
fidivrs
clc
mov
jl
dec
popa
add
lcall
clc
inc
clc
mov
xor
cmp
jnp
clc
repz
das
mov
clc
mov
clc
sbb
pop
insb
xchg
ja
aam
pop
mov
clc
mov
mov
cmp
add
add
sub
out
fs
mov
clc
addr16
inc
add
rclb
into
xor
add
sub
cltd
adc
clc
cmpsb
clc
sub
stos
fnstenv
add
clc
mov
adc
in
leave
sub
jbe
add
enter
and
sub
daa
clc
or
clc
dec
sub
cmc
int
fwait
xchg
int
mov
ja
mov
mov
fstpt
jp
sbb
and
movsb
clc
xor
add
mov
enter
cmp
cmp
add
xchg
loop
push
clc
dec
aam
clc
push
fwait
imul
cmp
mov
cmpsl
clc
insl
pop
test
in
iret
test
cmpsl
clc
dec
inc
add
pop
fsubl
add
sub
in
xchg
sub
lret
cmp
add
cs
xchg
inc
add
addr16
in
cmp
clc
pop
cmp
add
lods
gs
fdivl
fidivl
std
clc
fs
fwait
aad
pop
jecxz
movsb
clc
shlb
add
cmp
decb
pop
test
cmp
movsb
clc
mov
mov
inc
add
inc
add
shrl
leave
ljmp
std
pop
cmpsl
clc
imul
add
inc
clc
pop
out
and
add
outsb
sar
jb
add
repz
scas
fstps
xabort
cld
fisttpl
mov
ss
dec
jmp
clc
xabort
jmp
add
cmpsl
clc
cltd
sub
clc
mov
inc
add
dec
lcall
mov
sar
mov
add
cmpsl
clc
leave
inc
clc
push
pop
fwait
test
push
ds
clc
sti
loopne
adc
add
clc
mov
xchg
jmp
push
add
jno
add
imul
mov
sub
add
add
inc
clc
cmp
mov
or
mov
clc
xlat
fisubrs
add
inc
clc
jle
lcall
mov
xchg
push
clc
xchg
dec
xchg
pusha
add
pop
sbb
push
test
cmp
mov
or
sbb
xbegin
sbb
insl
fisttpll
das
or
or
add
repz
add
clc
xlat
push
sar
out
in
daa
clc
or
mov
xlat
data16
inc
clc
mov
add
lahf
aam
mov
add
jg
dec
pusha
add
cli
cmp
arpl
add
je
int3
or
sub
and
adc
addr16
ja
clc
imul
add
or
adc
add
adc
add
mov
dec
dec
xchg
push
add
fwait
adc
pop
dec
inc
clc
xchg
ret
clc
into
mov
xchg
fimuls
xchg
mov
clc
or
clc
add
mov
gs
mov
add
clc
sbb
lods
lret
inc
add
push
out
cmp
push
xor
clc
arpl
add
push
add
pop
adc
mov
push
add
popf
sbb
cltd
sub
addr16
movsl
clc
and
xabort
jp
xchg
pop
jecxz
cmp
add
cmp
add
cli
cmp
clc
in
dec
cmp
cwtl
lea
dec
xchg
js
clc
insl
out
push
mov
xchg
insb
in
inc
clc
out
icebp
cwtl
inc
clc
leave
enter
clc
mov
js
push
clc
data16
push
sbb
pop
mov
xor
add
in
xor
push
arpl
add
icebp
xchg
aam
clc
rcll
clc
push
clc
lock
scas
popf
push
clc
clc
fbstp
add
sar
cmp
pop
fmull
clc
aad
fidivrs
shll
or
add
add
sarl
sub
xchg
fdivrs
clc
inc
add
and
add
jo
add
xlat
negb
dec
push
push
sbb
sbb
arpl
add
mov
ret
clc
dec
push
add
xchg
or
clc
insl
loope
lret
mov
add
jb
add
stos
cmp
clc
int
add
in
dec
sahf
addr16
mov
fistpll
sar
aad
xor
add
mov
popa
add
sbb
mov
cmp
mov
clc
mov
clc
loope
fildl
clc
hlt
mov
add
pop
pushf
cld
imul
xchg
in
pop
dec
and
std
cmc
shlb
mov
rorb
jns
add
cmp
add
ss
test
clc
xabort
add
shlb
add
jp
cmc
xchg
xchg
mov
jg
add
test
and
cli
loopne
cmp
add
test
pop
mov
cmp
mov
dec
pop
add
push
add
jmp
clc
lcall
xlat
iret
outsb
shl
push
mull
test
sub
push
mov
or
add
jnp
cmp
mov
cmp
cmp
dec
dec
xor
add
loopne
std
imul
sub
add
ret
clc
jnp
xor
add
in
push
add
es
push
clc
sarl
add
xchg
cmc
inc
add
call
sbb
push
add
adc
add
xor
add
add
cltd
adc
add
and
loop
cmp
lods
movsb
clc
and
shll
daa
clc
sar
out
pop
xchg
sbb
cmp
add
imul
sbb
out
cmp
pushf
enter
stos
sub
mov
add
inc
clc
push
push
icebp
insb
data16
mov
fisubl
xchg
cmpsb
clc
movsb
clc
push
add
mov
add
cmpsb
clc
mov
add
repz
push
sub
mov
inc
clc
jno
add
pop
test
sbb
push
dec
push
add
aas
aaa
jb
add
add
add
sub
mov
clc
ljmp
sub
add
or
outsl
dec
lods
push
clc
fmul
sar
sbb
clc
sahf
out
mov
clc
sarb
jo
add
clc
jb
add
add
in
pop
xlat
aam
add
cmp
add
push
add
dec
mov
add
cmpsl
clc
jb
add
test
fwait
and
ljmp
clc
pop
lcall
cmp
inc
add
scas
outsb
or
aad
insb
xor
add
inc
clc
in
test
rorl
out
insl
mov
aad
push
dec
leave
ljmp
clc
loope
lock
clc
fwait
loopne
lahf
adc
add
repz
xabort
cmp
ss
xor
dec
cld
jmp
xor
add
clc
add
add
test
xchg
add
out
xchg
movsl
clc
or
jle
pushf
loop
wrmsr
add
sar
clc
ds
decl
movsl
clc
mov
cmp
mov
mov
flds
add
hlt
cwtl
fcmovnu
add
adc
add
das
or
adc
push
jnp
int
clc
mov
dec
dec
mov
cmp
xchg
lahf
ret
pop
sbb
insb
cmp
popa
add
dec
dec
and
add
clc
jo
add
dec
jecxz
imul
mov
pop
and
add
add
push
add
sar
cmp
pop
sbb
cli
loopne
loopne
or
shrl
add
add
jns
push
add
out
jp
add
scas
sbb
pop
xchg
cmp
and
clc
mov
add
sti
mov
push
inc
add
sbb
inc
clc
xor
add
push
add
sbb
clc
adc
or
ds
scas
add
stos
test
sbb
lock
cld
dec
jge
jmp
add
and
cltd
shlb
lods
push
add
xor
push
add
call
adc
ljmp
mov
jle
add
jae
add
clc
popf
data16
ret
int
add
xchg
xor
pop
xor
add
adc
sar
pop
into
or
or
mov
mov
clc
dec
xlat
insb
pop
clc
scas
push
cs
icebp
cli
fs
dec
loop
mov
cmp
std
push
add
imul
sbb
cmp
test
add
sar
outsl
dec
stc
mov
add
gs
shrb
aam
mov
out
ficoml
mov
adc
clc
cmc
rclb
clc
sbb
mov
insb
lods
cmp
jne
ja
add
or
clc
xor
add
cmp
out
leave
cmp
clc
jo
add
add
loop
shll
clc
lret
pop
mov
clc
add
add
clc
adc
add
sbb
add
jae
add
sub
clc
iret
push
clc
in
in
scas
inc
clc
and
jb
add
add
add
add
cmp
dec
daa
clc
adc
add
add
ret
xchg
int
adc
add
add
rclb
jb
add
aas
lods
and
add
test
dec
in
push
add
in
sbb
push
scas
jbe
add
and
daa
clc
and
add
clc
sahf
mov
sahf
lret
add
out
jbe
outsb
xlat
push
dec
sub
mov
xbegin
jle
dec
leave
mov
clc
clc
sbb
clc
in
cmp
mov
pop
cwtl
rolb
add
testl
add
add
mov
add
repz
push
or
jmp
ja,pn
scas
bnd
outsb
nop
mov
hlt
in
push
push
lods
je
inc
add
inc
clc
daa
clc
jo
add
add
mov
fwait
cmpsl
clc
push
mov
clc
ret
pextrw
jae
add
add
icebp
mov
out
adc
add
dec
sbb
bound
add
sub
loopne
loopne
sbb
outsl
dec
push
and
jl
add
js
and
add
cmp
inc
add
xor
add
imulb
cmp
mov
in
inc
clc
or
mov
jmp
xchg
mov
clc
push
loopne
mov
push
clc
stos
dec
dec
pop
mov
clc
mov
stc
gs
push
add
xchg
sub
clc
jno
add
add
pop
xor
add
add
leave
inc
clc
mov
push
xchg
xor
ret
adc
add
mov
sbb
jp
cmp
clc
jbe
xlat
mov
fsub
clc
jecxz
sbb
in
fisubrl
inc
add
cs
clc
xbegin
add
pop
in
jbe
es
pop
xchg
push
lods
std
leave
push
mov
clc
outsb
jns
clc
cld
jne
add
mov
clc
pop
mov
loop
adc
add
loopne
pop
pop
fldenv
add
sub
mov
inc
add
mov
clc
cmp
clc
and
add
enter
repnz
shrl
mov
clc
mov
adc
aad
xor
add
pop
cltd
mov
cmp
clc
or
adc
loop
push
jo
add
add
or
cltd
fcmovnu
mov
movsl
clc
arpl
add
add
xor
add
loopne
insb
cli
ss
clc
jo
add
ss
xor
add
add
add
mov
add
sbb
add
add
clc
icebp
cmp
push
add
test
add
icebp
and
add
clc
xor
add
add
adc
add
sbb
add
add
add
mov
clc
sar
or
add
push
add
pusha
add
push
push
clc
fwait
stos
pop
fldl
add
fdivp
enter
add
clc
sar
bound
add
std
push
clc
mov
clc
mov
clc
test
das
xchg
filds
add
sub
push
pop
sub
clc
fdivl
cmp
iret
mov
dec
mov
bswap
cmp
cli
lods
out
sub
hlt
pusha
add
jns
add
dec
outsl
in
cmp
dec
cltd
cmp
add
gs
mov
xchg
data16
xchg
jl
clc
xchg
fsts
clc
push
add
ljmp
fs
inc
add
mov
push
jp
clc
sub
add
clc
stc
test
popf
in
inc
add
inc
add
jnp
clc
sbb
add
clc
insb
stos
mov
ja
jl
clc
cmp
clc
pop
je
push
add
jnp
fwait
ret
clc
push
cmp
lods
jg
test
xchg
sub
push
add
mov
add
add
sahf
jb
add
add
outsl
pop
mov
add
fcompl
and
popa
add
jne
data16
push
add
cmp
packuswb
xchg
cmp
divb
add
pop
icebp
dec
dec
mov
add
pop
testb
mov
sbb
pusha
add
inc
add
add
add
icebp
imul
neg
mov
cmp
add
add
mov
add
data16
jp
mov
clc
mov
mov
pop
add
add
or
add
jl
clc
or
mov
clc
fiaddl
add
cmpsl
clc
jecxz
pop
mov
std
movsl
clc
aas
push
ret
lea
add
bound
add
add
idiv
push
pop
inc
add
pop
pop
xbegin
mov
mov
sbb
push
data16
fs
inc
add
or
clc
aaa
inc
clc
aaa
xbegin
or
clc
mov
add
shll
mov
test
pop
and
repz
test
aas
stc
jmp
add
ja
jecxz
inc
clc
adc
add
add
jecxz
cmc
shr
cmc
xor
add
add
std
out
or
add
inc
add
mov
lret
lahf
in
sub
mov
push
inc
add
xor
inc
add
cmp
repz
div
sar
aas
scas
jns
sarl
aas
pop
cmp
adc
dec
mov
clc
in
lods
jb
add
clc
aam
jno
add
bound
add
xor
dec
cmp
clc
int
clc
mov
shlb
add
xor
add
clc
jo
add
lock
sub
clc
in
cmc
dec
gs
cltd
inc
clc
sbb
enter
mov
jle
rorl
add
sub
jg
rorl
or
clc
movsl
clc
jl
lret
or
jnp
add
scas
imul
push
clc
loopne
pop
clc
movsl
clc
mov
sbb
xabort
dec
push
add
and
jecxz
xchg
scas
xchg
cmp
loopne
push
sub
and
add
clc
jmp
dec
add
cmp
dec
call
mov
add
sar
clc
aaa
dec
mov
insl
stc
stos
aaa
outsb
pusha
add
bound
add
insl
cld
ljmp
cmc
cmpsl
clc
rcrl
push
inc
add
ret
clc
cmp
push
fs
or
pop
sbb
insb
inc
clc
jne
mov
add
adc
add
add
fcmovb
clc
stc
and
pop
dec
push
add
jbe
clc
sbb
add
adc
clc
in
aam
icebp
push
jmp
pop
or
clc
pop
roll
ljmp
mov
pop
push
sub
out
in
inc
add
leave
mov
mov
and
add
add
aad
inc
add
cmp
pop
out
jo
add
divl
add
sbb
jno
add
clc
dec
insl
jl
ja
clc
jb
add
add
sbb
mov
cmp
test
cmp
add
xor
add
int
add
add
es
mov
clc
decl
test
dec
cmp
add
add
cwtl
lcall
xor
add
clc
ret
clc
inc
clc
mov
add
rcrl
xchg
mov
add
int
sar
mov
add
inc
add
or
int
push
sbb
clc
pop
mov
xchg
in
push
cmp
add
or
adc
test
lret
add
dec
jnp
clc
es
lahf
mov
pop
mov
mov
dec
xor
add
mov
dec
sub
xchg
cltd
in
xor
pop
data16
leave
cmp
clc
lcall
xor
add
clc
cld
jne
std
cmc
pop
xbegin
outsl
or
add
jl
add
mov
clc
xchg
lods
mov
clc
sub
stos
cmpsl
clc
xchg
imul
add
jae
add
clc
cli
push
xchg
lret
push
add
mov
movsb
clc
stc
xchg
dec
pop
add
add
add
jg
add
insb
in
fisttps
sub
add
add
clc
adc
add
add
clc
fxch
int
clc
movsb
clc
fstpl
add
jge
clc
sbb
add
inc
add
dec
je
mov
xchg
idivl
add
lret
mov
xchg
sub
pop
out
cmpsl
clc
cmpsb
clc
xor
add
loopne
sub
es
sar
mov
ds
jnp
clc
inc
clc
mov
clc
sub
scas
mul
clc
scas
mov
fsubrs
imul
jne
mov
mov
clc
cmp
clc
mov
add
mov
clc
dec
dec
mov
add
test
add
nop
popf
test
jle
add
xchg
ja
cmp
out
push
add
pushl
add
mov
sbb
clc
xor
add
in
inc
add
insb
jle
arpl
add
inc
clc
mov
js
clc
push
add
leave
fldt
ja
ret
in
dec
jle
add
shr
in
repz
popf
int3
jmp
cmp
push
add
jnp
clc
mov
add
ret
rcl
sar
loop
dec
cli
mov
add
add
jae
add
je
jo
add
add
jne
add
repnz
add
imul
lret
add
jmp
mov
mov
aaa
dec
inc
add
insb
stos
test
xor
add
adc
add
or
fcomi
rcrb
xchg
scas
xchg
mov
negl
push
jo
add
movsb
clc
negl
inc
add
sub
add
leave
cmp
add
mov
add
cwtl
adc
add
push
mov
push
inc
add
push
clc
gs
add
push
clc
cmp
sarl
add
add
gs
pop
cmp
inc
add
sbb
and
inc
add
pop
movsl
clc
or
add
clc
call
sub
adc
add
int3
in
sub
add
shll
add
lods
mov
sar
bound
add
mov
iret
dec
push
pop
push
clc
and
add
out
sti
lahf
add
cmp
xor
add
add
sar
sub
clc
cmp
mov
mov
outsl
data16
or
clc
dec
sbb
mov
roll
add
popa
add
cmp
adc
add
clc
dec
mov
dec
mov
add
or
add
imul
xchg
cmp
clc
mov
movsl
clc
cmp
or
add
lcall
add
je
mov
mov
lock
mov
pop
in
push
clc
xbegin
xlat
sbb
mov
clc
jge
add
xchg
dec
scas
in
fstps
add
cmp
add
pop
clc
fcomp
ds
repnz
xchg
inc
add
sub
outsb
loope
jmp
mov
cs
add
adc
add
repz
clc
mov
pop
cmp
add
push
aam
adc
add
std
pop
popa
add
out
jmp
dec
jns
add
arpl
add
add
clc
jl
repnz
loopne
pop
in
aad
add
fidivl
add
clc
fdivr
pop
mov
testb
add
add
xchg
in
mov
ret
clc
xor
add
add
add
clc
gs
pushf
repnz
push
pop
icebp
mov
popa
add
scas
sbb
aam
data16
jle
clc
sahf
dec
add
add
add
add
mov
das
insl
shll
xchg
xor
add
jecxz
xlat
mov
in
pop
adc
add
xlat
fwait
cli
push
add
cltd
call
add
add
push
out
int3
or
clc
adc
add
icebp
push
clc
mov
clc
xor
clc
nop
mov
test
add
sbb
clc
mov
clc
nop
jmp
mov
arpl
add
pop
xchg
in
cmp
mov
clc
scas
pop
insb
cmp
pop
xor
add
add
cmpsl
clc
pop
xor
add
pop
in
mov
push
push
add
push
clc
push
add
mov
mov
and
and
cmpsl
clc
jp
add
push
add
mov
jecxz
mov
clc
bound
add
add
lcall
jbe
clc
es
das
xor
xchg
add
push
add
in
cmp
jge
cmp
inc
clc
pop
pusha
add
mov
adc
add
and
add
inc
add
mov
loope
lea
inc
clc
mov
xlat
ja
fisttps
icebp
jno
add
fmull
and
add
ljmp
xchg
mov
lret
or
fldenv
add
in
sbb
scas
xor
clc
mov
push
ret
inc
add
gs
inc
add
cmp
cmp
add
clc
cmp
inc
clc
pop
aad
movsl
clc
jne
pop
cmp
incb
clc
mov
push
or
mov
clc
jmp
scas
aas
push
pop
dec
mov
inc
add
loop
jbe
sti
cmpsb
clc
imul
fdivl
add
cmpsb
clc
sbb
clc
jb
add
clc
dec
and
popf
xchg
out
je
sbb
cmp
lret
out
mov
add
or
lret
sbb
testl
xchg
in
adc
pop
xor
add
mulb
add
sbb
clc
sub
idivb
in
test
rorb
add
mul
clc
decl
je
jmp
sar
or
je
add
clc
cmp
clc
pop
jmp
jb
add
cmp
add
inc
clc
and
pop
shll
adc
add
lahf
dec
xor
add
addr16
add
add
sub
add
clc
roll
repnz
clc
nop
or
in
mov
std
pushl
add
add
mov
clc
cmp
dec
xlat
cmp
add
xchg
leave
cmp
or
ret
add
ss
sarl
xchg
inc
add
sub
ret
clc
icebp
int
clc
and
add
push
add
lahf
mov
add
and
add
test
jg
fwait
insb
ljmp
xchg
mov
sbb
rcrl
ret
clc
mov
in
nop
sarb
stos
cmp
add
lock
rol
clc
push
add
sbb
adc
add
mov
inc
add
sub
inc
clc
cmp
add
inc
add
xlat
mov
cs
cmp
and
add
and
add
and
add
add
rolb
ss
xbegin
push
add
arpl
add
clc
xchg
gs
daa
clc
jg
out
sbb
mov
lods
cwtl
mov
cs
xchg
and
add
lcall
outsb
jmp
clc
push
popf
add
add
ja
clc
ret
clc
jb
add
repz
or
movsl
clc
shlb
das
pushf
pop
mov
xor
cmp
or
std
mov
clc
jecxz
dec
dec
dec
xabort
mov
int3
jl
cmp
arpl
add
imul
aas
xchg
sub
clc
xlat
xlat
imul
add
jecxz
cltd
dec
repz
add
clc
xchg
test
stos
data16
mov
pushf
jns
cmpsb
clc
mov
imul
shrl
cmpsb
clc
out
cld
adc
add
hlt
lods
inc
clc
cltd
add
add
negl
cmp
pushf
sub
mov
movsl
clc
sarb
xchg
xor
add
xor
clc
mov
dec
mov
clc
mov
jp
cmp
sub
mov
pushf
inc
add
jp
xor
sub
clc
push
add
leave
add
into
loopne
ficompl
xchg
sbb
clc
xchg
mov
clc
aaa
dec
jns
es
cmp
jae
add
adc
add
push
add
test
rorl
clc
pop
mov
stos
and
add
pop
pop
inc
add
pop
stos
fwait
movsl
clc
push
add
stos
mov
clc
enter
clc
js
jp
jnp
xchg
ds
sbb
ret
clc
clc
test
pop
nop
repnz
mov
clc
test
std
xor
jle
adc
add
push
clc
pusha
add
addr16
sbb
loope
iret
xor
sbb
scas
sub
jl
or
add
inc
clc
outsb
fcoml
cld
call
add
mov
lahf
pop
or
xchg
shll
add
adc
add
and
or
dec
mov
or
clc
das
leave
dec
das
stc
outsl
fcoml
popa
add
push
add
sbb
cld
clc
mov
add
and
add
inc
clc
cmp
add
fdivp
nop
cmp
adc
add
add
add
adc
add
sub
add
add
and
add
scas
jg
jno
add
clc
adc
add
mov
xchg
test
mov
jg
clc
daa
clc
cmp
add
jmp
das
movsl
clc
adc
xchg
adc
cwtl
lea
lods
xor
cmp
shr
or
push
pop
clc
cmp
add
xchg
push
loope
lea
add
leave
sar
icebp
data16
ret
clc
pusha
add
jmp
jg
jge
clc
mov
add
jmp
mov
clc
es
mov
mov
aad
push
or
cmpsb
clc
cmp
add
cwtl
cmp
add
inc
clc
dec
xor
clc
aad
adc
or
cmpsl
clc
inc
add
dec
lcall
clc
dec
addr16
cmpsb
clc
push
std
inc
clc
dec
add
add
push
call
add
dec
das
dec
cmc
push
outsl
out
insb
aas
pop
mov
cmp
clc
cmp
clc
cmp
ds
cmp
clc
inc
add
mov
jns
add
int3
push
mov
clc
mov
or
add
ja
jae
add
clc
pop
add
add
jl
imul
clc
or
mov
xchg
loop,pt
test
add
repnz
cmpsb
clc
pop
mov
mov
aad
and
jl
stos
rcrb
sar
sbb
incl
popf
pop
loopne
rorl
fcmovnbe
or
push
add
and
add
add
or
or
clc
xbegin
add
add
add
and
mov
adc
add
test
clc
out
jg
clc
je
add
insl
xor
add
add
pop
lods
sbb
pop
cmp
mov
mov
clc
out
cmp
movsb
clc
adc
add
add
add
sbb
ljmp
insb
sub
add
add
enter
scas
add
add
add
mov
mov
stc
outsl
and
add
mov
mov
add
push
add
hlt
lock
sub
loope
sub
in
scas
adc
add
addr16
mov
in
pop
add
add
lods
out
clc
into
push
clc
cld
or
dec
icebp
push
push
cld
es
rcll
shll
add
mov
xor
add
jmp
add
lret
cmp
clc
and
add
xbegin
xor
stc
pop
sahf
jne
f2xm1
mov
cli
mov
fbld
adc
clc
scas
aaa
arpl
add
add
add
rcl
push
add
inc
add
adc
add
pop
xor
add
and
add
add
sar
popa
add
mov
cmp
clc
movsb
clc
out
icebp
xchg
sbb
adc
add
clc
scas
outsl
cmp
jbe
pop
mov
popa
add
dec
push
xchg
int3
stos
xor
adc
add
jb
add
sar
mov
dec
aam
cmp
jge,pt
clc
inc
clc
outsb
xchg
jmp
add
pop
pop
clc
add
add
add
enter
popa
add
jno
add
xchg
inc
clc
cmp
stos
lcall
test
add
ret
clc
hlt
ljmp
clc
stos
mov
clc
push
clc
xor
add
sub
jns
scas
clc
dec
pop
fisttps
clc
in
out
mov
push
clc
cld
pop
clc
xbegin
xchg
ds
mov
mov
in
leave
cmp
add
xchg
int
clc
hlt
popf
cwtl
jno
add
rcrb
or
add
cmp
add
xor
add
xor
add
adc
clc
xchg
ljmp
clc
inc
add
adc
add
nop
dec
nop
mov
clc
mov
cmp
clc
dec
xor
add
add
sub
inc
add
adc
add
add
test
pop
fmuls
imul
clc
into
test
lret
clc
nop
std
ljmp
sub
jno
add
lret
jecxz
ss
out
mov
sbb
mov
dec
inc
add
and
add
add
scas
dec
or
test
sar
xor
insl
sar
sbb
add
ja
add
lret
add
add
xor
add
das
jecxz
xor
add
mov
loopne
mov
nop
or
clc
std
testb
mov
sub
clc
in
sub
fdivrl
inc
clc
pop
cmp
mov
mov
cmp
mov
lahf
jle
negb
clc
or
clc
xchg
sub
test
add
add
add
or
into
mov
clc
and
add
and
add
out
fdivr
imul
mov
sbb
insl
pop
mov
insl
inc
add
insl
scas
pop
adc
add
adc
add
mov
mov
inc
clc
cmp
sbb
clc
or
inc
add
and
add
out
pop
pop
add
add
push
sub
add
mov
add
out
jno
add
leave
and
add
or
std
testb
clc
insl
dec
mov
and
add
add
clc
mov
pop
sahf
pop
inc
clc
add
pop
std
dec
stos
mov
or
imul
adc
add
out
stos
and
add
test
test
mov
add
fucomip
sbb
pop
jns
clc
cmpsb
clc
pushf
mov
addr16
xchg
out
pop
data16
sub
xor
pop
pop
loopne
lods
cmp
std
or
out
xlat
sar
into
jl
sbb
pushf
outsl
pop
pop
imul
clc
or
add
es
sub
lret
clc
cmp
add
jnp
clc
adc
add
mov
xchg
xbegin
add
shl
clc
popf
pop
in
push
add
or
clc
js
test
inc
clc
fcmovnu
in
push
clc
cltd
mov
push
cltd
cmp
psubsw
icebp
es
into
arpl
add
add
sub
fcoms
xabort
punpckhwd
adc
clc
in
push
add
push
fmuls
loope
frstor
add
add
clc
jge
dec
mov
or
push
scas
pushf
es
mov
jns
mov
popf
inc
clc
inc
add
pop
movsl
clc
mov
add
add
push
add
cmpsl
clc
xor
push
add
or
fisubrs
scas
and
add
stc
sub
or
add
cltd
xchg
jne
push
add
std
mov
iret
cmp
insl
or
inc
clc
jmp
das
mov
inc
clc
sub
push
add
add
sub
mov
in
or
mov
ffreep
clc
or
add
jecxz
fcompl
push
add
add
dec
negl
ret
cmc
shlb
push
add
mov
clc
fsubrp
dec
push
xchg
ret
jns
fwait
ret
clc
pusha
add
addr16
mov
js
es
loopne
xor
add
sub
fistps
rcrb
cmp
xchg
jae
add
and
add
loopne
mov
test
jae
add
pop
lock
push
xlat
mov
mov
lock
push
clc
pop
dec
jae
add
cmp
clc
in
and
add
pop
kmovw
cmp
sti
jo
add
clc
int
add
lret
xor
mov
clc
xbegin
clc
clc
out
cwtl
cltd
cmp
clc
gs
aad
imul
shll
cltd
daa
clc
sbb
clc
dec
dec
cmp
fimuls
out
cmpsl
clc
shrl
arpl
add
gs
dec
add
add
add
add
sub
adc
add
popf
mov
clc
icebp
and
dec
xabort
clc
push
clc
fs
fists
sub
cmpsb
clc
lahf
cltd
arpl
add
pop
jle
mov
add
add
add
aad
clc
jmp
clc
dec
pop
dec
sti
loopne
aas
sysexit
test
sub
add
add
mov
sar
jae
add
rdpmc
add
ds
loope
xchg
xchg
movsl
clc
cmp
mov
clc
or
add
mov
movsl
clc
jmp
ret
clc
into
add
xchg
adc
add
clc
add
add
cs
add
loopne
data16
xchg
jecxz
fisubl
pop
sbb
add
push
jle
call
es
mov
shll
add
clc
jmp
clc
scas
sbb
add
adc
push
xchg
xbegin
or
add
pop
push
sub
dec
mov
clc
sbb
push
add
iret
mov
clc
cld
dec
pop
out
hlt
lret
add
test
mov
imul
mov
xor
add
scas
fstps
xor
add
add
xor
add
pop
lods
or
clc
or
add
sbb
inc
clc
or
cmp
or
mov
sub
popf
add
add
sti
aad
call
mov
sbb
dec
fisttps
sbb
xchg
dec
xor
add
xor
add
add
xchg
jnp
sub
clc
daa
clc
stc
movsb
clc
sbb
add
lock
add
clc
movsl
clc
pop
outsl
push
add
leave
test
cli
clc
sbb
scas
xlat
out
cmp
clc
dec
push
add
jle
jle
divl
test
mov
repnz
mov
push
clc
xchg
mov
push
add
xchg
inc
add
sub
repz
add
sbb
mov
ds
in
arpl
add
fsubs
or
clc
xor
add
outsb
in
imul
loopne
lock
clc
shll
adc
add
clc
mov
add
iret
adc
clc
push
add
inc
clc
int3
sbb
clc
fisttpl
clc
imul
pushf
in
aas
jbe
inc
add
cmp
sub
sar
mov
push
gs
cmp
cmp
inc
add
mov
add
test
or
add
repz
inc
clc
inc
add
pop
jnp
mov
test
xchg
sbb
stc
sbb
scas
notb
test
sbb
or
add
enter
add
cmp
add
xor
add
decl
add
add
jmp
ret
push
dec
dec
addr16
mov
add
inc
add
popf
stos
sub
ja
fdiv
push
scas
scas
mov
jnp
add
test
clc
fimull
loopne
sar
clc
mov
xor
add
clc
push
clc
pop
cmp
add
hlt
jle
clc
jns
clc
inc
clc
mov
add
lahf
fmull
jb
add
scas
and
add
shl
clc
aas
movsl
clc
sbb
clc
dec
jo
add
mov
sahf
lahf
cmpsl
clc
std
fadds
sbb
mov
add
ss
pop
xchg
and
lcall
fistpll
clc
push
add
adc
add
mov
out
xchg
pop
dec
es
loop
xchg
adc
mov
addr16
filds
cmp
mov
cs
add
mov
pop
imul
clc
cltd
inc
add
pop
popa
add
push
xchg
mov
mov
add
aas
mov
xor
add
add
pop
loope
ret
jmp
movsb
clc
xchg
movsl
clc
sub
sbb
hlt
or
xor
lret
clc
cmp
sub
mov
aas
pop
clc
adc
add
adc
add
add
and
add
add
lods
or
push
imul
dec
or
insb
pushf
jmp
repnz
mov
add
add
push
outsb
out
stc
std
mov
push
add
lock
dec
pop
jecxz
xor
add
jg
cmp
pop
dec
inc
clc
pushf
sub
cmp
clc
gs
lret
mov
mov
add
loope
lret
imull
add
clc
pushf
mov
xor
add
add
daa
clc
arpl
add
pop
clc
mov
clc
movsl
clc
mov
xor
add
pop
jg
imul
mov
add
ret
add
or
add
int
dec
pop
rclb
add
add
pushf
dec
and
add
sti
and
add
add
add
add
sbb
std
mov
mov
pop
pop
imul
adc
add
push
dec
sub
add
scas
gs
cmc
pop
sbb
add
rclb
clc
jnp
into
mov
push
add
mov
cmp
adc
xchg
aas
repnz
fsubs
faddp
clc
pop
mov
add
push
xlat
mov
add
xabort
mov
clc
and
cmp
xlat
ss
cmp
arpl
add
add
and
add
ss
lods
hlt
xchg
jnp
inc
clc
fs
pop
push
add
js
jno
add
clc
aam
add
ja
dec
push
data16
inc
add
dec
lock
push
sbb
sub
add
fwait
xor
add
loopne
xchg
dec
insl
ja
xsaveopt
dec
fiaddl
xchg
jmp
dec
aam
add
ret
add
add
inc
clc
mov
add
aad
xor
add
or
clc
cmp
sbb
clc
adc
add
lea
push
add
xlat
imul
clc
mov
notl
addr16
and
add
fidivl
add
xchg
mov
push
xbegin
divb
clc
and
pop
adc
add
cmp
test
int3
xchg
jecxz
jns
dec
xchg
jp
cmp
add
std
push
ja
out
adc
add
clc
adc
add
push
testl
add
mov
clc
mov
and
add
int
add
xchg
pop
imul
clc
xchg
jbe
mov
cmp
xor
add
add
add
mov
add
in
sub
add
iret
cmp
xbegin
and
add
add
dec
add
inc
add
into
adc
add
add
packuswb
sti
loopne
add
add
add
jnp
nop
and
add
cmp
xor
testl
dec
sub
enter
out
xchg
push
mov
xor
add
add
inc
clc
xor
add
xor
add
add
clc
pushf
and
add
dec
bound
add
xor
add
add
xor
add
add
clc
sbb
stc
pop
idivl
inc
clc
sbb
push
jle
jp
add
std
mov
int3
push
je
add
out
rorl
clc
fsubrs
inc
clc
sub
mov
and
add
and
add
xchg
ljmp
and
add
dec
mov
inc
clc
push
dec
popf
xchg
xchg
es
jge
clc
scas
cmp
and
add
sub
mov
inc
clc
mov
leave
bound
add
imul
add
cmp
test
nop
js
jle
add
lahf
movsb
clc
lock
clc
xbegin
pop
rcr
rorb
xchg
jno
add
sbb
dec
jl
add
add
dec
or
clc
mov
scas
jle
shl
clc
fstps
sbb
xchg
cmp
inc
clc
cmp
ja
pop
add
jg
push
add
jo
add
xchg
xchg
or
add
ret
clc
flds
pop
clc
movsb
clc
jg
inc
add
add
add
add
popa
add
loop
cmc
ljmp
fs
jge
add
in
xor
add
add
scas
and
add
clc
sub
movhps
clc
inc
add
push
add
