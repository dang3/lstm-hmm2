push
inc
fisttps
sbb
jge
repz
lods
and
rolb
arpl
add
aas
pop
jecxz
add
mov
stos
or
xor
pop
out
jb
push
repz
mov
add
xchg
add
add
add
jmp
cld
inc
enter
nop
add
add
push
pop
cltd
jne
rolb
stos
xor
sub
cmp
add
in
or
insb
inc
xor
dec
dec
dec
pop
addr16
loopne
sub
test
lret
push
pop
mov
or
jg
pusha
add
loopne
jbe
icebp
mov
add
mov
popa
mov
mov
xchg
inc
rolb
popa
adc
mov
push
popf
xlat
sub
add
mov
add
movsl
sete
push
add
dec
dec
fdivs
or
decb
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
imul
insl
or
and
mov
sbb
pop
cmpsb
add
mov
rolb
mov
loopne
mov
mov
lret
add
mov
pop
mov
push
add
mov
jnp
mov
loopne
lods
loope
jg
add
push
add
add
out
popf
int3
sbb
lcall
mov
add
add
mov
mov
add
push
dec
xor
add
mov
ret
outsl
jbe
insl
xchg
out
dec
mov
test
test
in
mov
and
mov
dec
and
sbb
sbb
test
dec
dec
mov
notl
dec
mov
jns
gs
sub
pop
stos
scas
sub
dec
sub
mov
add
add
cmp
sub
add
mov
lea
aad
push
push
add
gs
add
lds
mov
cmp
add
add
cltd
mov
aaa
rolb
mov
jmp
add
and
or
push
inc
add
add
sub
roll
sbb
scas
aad
insb
addr16
add
clc
fnsave
out
lock
cmc
testb
add
pop
jno
add
rolb
add
movsl
add
in
loopne
push
add
or
jb
jp,pt
push
lahf
dec
xchg
sbb
cmp
mov
mov
and
mov
pop
xchg
dec
in
xor
xor
sbb
add
faddl
and
mov
xor
add
mov
mov
add
xlat
sub
push
add
add
push
add
add
add
in
or
or
aad
add
fdivs
add
pop
or
add
lods
clc
lret
addb
inc
add
add
add
imul
daa
adc
add
ficoml
aad
shrl
pop
jbe
jg
inc
add
rolb
gs
cltd
adc
mov
out
add
add
arpl
add
add
cmpsb
add
nop
add
add
add
sbb
cld
push
add
add
add
inc
jg
jecxz
mov
pop
pop
clc
or
xchg
bound
mov
dec
push
and
mov
shll
mov
add
mov
xor
mov
add
test
pop
mov
mov
mov
add
roll
jp
mov
push
mov
fcmovne
push
mov
jecxz
fadd
xchg
mov
mov
ds
jae
add
jae
pop
js
add
call
add
xchg
add
add
add
jns
add
mov
out
add
sub
adc
daa
decl
mov
and
xor
and
mov
jo
cmpsb
add
xchg
add
add
add
das
adc
add
mov
ljmp
lock
testb
add
pop
fnstenv
add
pop
orl
pop
xchg
add
add
jg
mov
xchg
add
jnp
in
testb
sub
mov
inc
add
add
push
pop
mov
mov
insl
jg
add
rorl
dec
mov
add
lock
scas
mov
add
add
mov
add
out
scas
lods
mov
push
nop
add
add
add
nop
add
dec
mov
xor
xlat
xchg
add
add
mov
call
popf
cld
mov
xor
stc
adc
lds
mov
testb
add
add
aam
popl
add
mov
or
testl
mov
stc
aas
xlat
nop
add
add
mov
inc
dec
dec
arpl
sub
add
add
add
cmp
outsl
lods
push
add
push
xor
jne
add
jbe
lods
mov
cmp
and
mov
mov
add
lods
xor
lcall
sub
add
lahf
jg
add
pushf
popf
xor
in
jge
or
jecxz
xor
add
test
and
push
add
push
add
or
movsb
add
rolb
jno
ficomps
imul
lea
add
bound
mov
shll
imul
fidivrs
fadds
add
add
inc
add
add
xor
lahf
mov
add
push
add
jp
add
and
add
dec
dec
cld
clc
push
sub
testb
stc
mov
mov
sbb
outsl
xor
adcl
add
add
add
and
jns
add
sub
test
stos
sbb
sbb
sbb
add
int
mov
xor
add
add
push
ds
adc
sbb
add
jecxz
xor
aad
add
mov
add
pop
vpmaxub
add
pusha
add
mov
adc
imul
add
add
pop
int3
push
das
xor
adc
sub
test
int3
scas
cmp
pusha
add
jl
or
add
das
dec
repz
out
mov
sub
int3
loop
ljmp
add
sti
lds
add
roll
mov
add
scas
mov
dec
jnp
adc
and
inc
add
ja
jle
mov
cli
pop
cmc
negl
and
mov
adc
out
mov
add
cld
inc
add
add
rolb
mov
add
push
fsubrl
add
pop
mov
fs
adc
shrl
mov
fwait
cmp
cmp
mov
loope
add
movb
pusha
add
add
add
add
add
add
mov
jnp
push
add
fldt
add
adc
add
pop
repnz
add
cmp
lahf
lret
jmp
push
add
or
add
lds
push
add
push
add
add
add
in
xchg
add
add
cltd
movsb
add
xor
jmp
icebp
inc
add
inc
xchg
in
repz
popa
pop
mov
add
add
int
mov
and
mov
cld
cmp
call
rolb
leave
jecxz
mov
add
scas
popf
filds
mov
in
xchg
jno
inc
add
add
call
hlt
add
ds
add
sub
testb
movsb
add
scas
ficoms
bound
mov
mov
add
cli
sub
add
inc
add
add
add
aaa
es
xor
mov
push
add
pop
cmpsb
add
pushf
fwait
loopne
aaa
push
inc
add
mov
addb
lea
add
push
aam
int3
scas
data16
in
ja
push
pop
pop
jno
add
scas
fcomi
pop
adc
adc
jb
push
sbb
add
xchg
jmp
jne
cmc
sub
sbb
add
add
push
test
xor
sarl
add
add
mov
outsl
xchg
in
test
data16
dec
and
mov
pop
inc
add
sub
mov
pop
and
add
lods
clc
sahf
cwtl
push
and
xor
pop
mov
add
pop
std
jno
add
mov
add
mov
add
loope
stos
andl
and
mov
add
add
sbb
mov
cmp
add
add
sbb
cwtl
int
xor
aas
ljmp
mov
lods
popf
xor
mov
xor
js
jge
movsb
add
or
scas
loop
or
rolb
adc
or
mov
inc
mov
cmp
stos
and
mov
add
sub
lret
addb
movb
push
add
add
inc
add
loopne
into
cmpsl
cld
xchg
add
inc
add
add
and
cmp
push
push
ret
jecxz
iret
int3
fisttps
das
test
popl
add
inc
and
mov
stos
jnp
xchg
sub
shr
jae
adc
add
xor
cmp
add
mov
add
popl
leave
dec
movsl
mov
jo
dec
jge
cli
repnz
mov
outsb
jo
pop
testb
xchg
add
mov
rolb
add
aas
sub
clc
mov
and
mov
add
add
shll
mov
jmp
scas
add
jnp
pop
jo
add
add
add
mov
xlat
jnp
mov
aaa
inc
pop
hlt
add
add
scas
mov
add
add
mov
add
add
sub
int
fwait
jns
pop
mov
repnz
call
pop
into
mov
repz
cmp
add
stc
cmp
inc
add
xor
add
movsb
add
add
insb
nop
add
mov
xor
mov
movsl
insb
xchg
rolb
ja
xor
mov
or
sahf
stos
shll
jmp
add
lahf
dec
std
xor
stos
les
fadd
je
jl
in
mov
bound
mov
add
dec
fstpl
icebp
aad
dec
daa
lahf
enter
mov
add
pushf
cmp
add
add
mov
cmp
mov
add
add
pop
mov
inc
add
sbb
inc
add
jmp
push
adc
test
add
add
mov
cltd
sbb
add
add
and
outsb
in
add
push
add
add
and
add
in
jp
cmp
add
lods
aad
pop
dec
lods
and
mov
mov
add
add
out
std
shll
push
rolb
add
cmc
pop
mov
xchg
add
add
cli
sub
jno
dec
pusha
add
add
mov
and
clc
xor
jecxz
mov
jmp
stos
popa
and
add
mov
ljmp
mov
add
xor
and
ret
add
movb
or
xor
int3
and
iret
addb
out
das
mov
add
rcr
mov
js
jno
outsb
cmp
mov
xor
and
scas
inc
mov
rcrl
jns
add
sbb
push
add
cli
cmp
insb
jmp
add
add
clc
xor
and
imul
and
ja
add
out
sub
pop
movsb
add
cmc
test
in
push
or
push
popf
push
inc
sarl
dec
push
add
fisubs
mov
rol
add
movsb
add
add
add
add
sbb
add
add
inc
add
xchg
mov
cld
dec
xor
adc
imul
add
scas
jns
fadds
mov
add
mov
mov
add
stc
pinsrw
add
iret
rol
add
add
push
sub
push
mov
and
mov
push
ret
inc
jle
xor
or
xchg
push
repnz
inc
add
cmpsl
pop
and
in
in
jne
add
cmp
int3
call
repnz
mov
jae
xchg
or
mov
push
enter
inc
add
lret
inc
add
adc
cmpsb
add
iret
aam
popa
int3
jno
daa
pop
out
lds
add
mov
fdivl
push
add
test
add
and
add
bound
mov
dec
imul
sbb
add
add
xchg
inc
mov
xchg
jecxz
inc
rcrl
add
movb
xchg
add
add
and
sub
nop
add
dec
test
adc
aad
push
add
dec
insl
rolb
gs
add
add
and
add
and
mov
in
cmp
add
sbb
lea
add
movb
or
mov
adc
inc
add
pop
jo
shll
cld
push
pop
mov
mov
mov
cmpsl
out
dec
add
jno
cli
int3
add
jns
ds
mov
add
add
bound
mov
sub
add
rcrl
add
roll
xorl
cmpsl
push
sbb
inc
and
pop
sub
mov
das
sbb
add
std
das
mov
jmp
pop
fsubr
ja
add
add
add
daa
test
mov
mov
add
fisttpl
mov
rolb
sbb
adc
xor
adc
sub
mov
dec
das
rolb
mov
inc
rolb
dec
and
adc
scas
sbb
iret
inc
daa
movb
aas
sub
push
add
add
add
xchg
add
mov
add
jb
mov
add
popa
test
add
add
xchg
xchg
adc
add
and
mov
lods
pop
pop
lods
xor
mov
add
andl
add
dec
sar
add
mov
ja
add
es
hlt
add
fistpll
cwtl
jecxz
in
dec
cli
pop
jge
add
pop
xchg
mov
mov
mov
cs
subl
dec
add
add
cmp
xor
test
fsubr
fimuls
inc
clc
mov
xor
xchg
add
fmuls
ret
xchg
cmp
mov
les
jmp
fiadds
and
mov
adc
add
add
roll
lods
xchg
insb
daa
inc
add
adc
pop
in
jle
add
cmp
add
add
jnp
add
rolb
mov
push
add
mov
xor
repz
and
mov
sahf
xchg
shr
mov
add
jg
xor
testb
add
push
mov
jp
xor
adc
stos
movb
int3
and
in
inc
add
cmpsl
or
lea
stc
shll
int3
insb
mov
jge
and
repz
ret
adc
dec
xchg
add
sub
add
sub
add
rolb
xor
bound
mov
stc
aad
add
adc
movb
jp
add
push
jg
jle
add
add
add
add
repz
das
mov
or
add
add
add
data16
add
js
mov
mov
push
add
and
pushf
jne
stc
decl
fldl
pop
pop
stc
in
pop
jns
xor
add
out
add
mov
add
add
add
mov
add
pusha
add
insl
mov
rolb
out
mov
add
add
add
dec
cmp
testb
pop
xchg
pop
out
sub
mov
xchg
add
out
and
mov
nop
add
add
add
scas
inc
add
push
jecxz
cmpsb
add
and
leave
jae
add
mov
fdivp
add
jle
out
add
and
gs
mov
cmp
pop
sbb
pusha
add
daa
add
add
dec
movsb
add
fidivs
dec
xor
call
insl
push
add
add
add
inc
and
mov
dec
xor
mov
aas
push
mov
add
or
push
push
add
sti
mov
adc
xchg
add
add
add
dec
xor
stos
adc
inc
sub
dec
aas
loopne
inc
lret
sub
add
pop
clc
inc
add
xchg
mov
es
sbb
addb
add
add
push
add
add
add
les
imul
mov
repnz
cmp
and
mov
scas
mov
jb
arpl
add
add
add
mov
icebp
aas
lods
xor
inc
add
jge
add
add
add
dec
sbb
mov
add
add
out
stos
push
mov
or
fnstenv
pop
js
out
push
stos
add
mov
pop
push
mov
push
add
fnstcw
pop
pop
cmpsb
add
dec
rorl
outsl
aad
jne
add
cli
rolb
inc
add
push
pop
jns
add
inc
add
flds
push
add
sub
push
add
sarl
scas
stos
aaa
pop
add
cwtl
ret
pop
addb
push
cmp
add
xchg
push
add
outsl
pop
xorl
fisubrl
les
mov
dec
and
mov
mov
cmp
add
in
sub
add
iret
iret
pusha
add
mov
mov
inc
add
dec
hlt
add
ss
adc
imul
dec
jns
add
mov
rolb
push
stc
stos
add
pop
mov
lods
add
ret
push
bound
mov
popl
rcll
addb
add
add
pop
cmp
lea
addb
addb
les
dec
frstor
mov
mov
lds
add
pop
and
xor
jb
pusha
add
and
inc
rolb
or
add
inc
lods
bound
mov
fists
push
cmp
mov
sarl
adc
sbb
add
insb
fstps
and
mov
loope
aad
pop
push
add
add
push
add
add
pop
pop
cli
mov
movb
add
add
test
lods
scas
js
inc
add
add
cmp
add
inc
sbb
jle
stos
roll
inc
add
add
fwait
outsb
daa
mov
dec
loope
add
test
bound
mov
or
mov
dec
jno
test
add
or
add
imul
add
insb
add
mov
les
add
cmpsl
hlt
add
add
add
test
pop
push
add
sbb
mov
out
xchg
add
add
add
jmp
sbb
xor
and
pusha
add
add
fsubr
cmc
fwait
xor
repnz
add
push
add
incl
add
repnz
enter
add
adc
lret
in
add
or
adc
add
push
add
push
add
adc
pop
icebp
xchg
add
daa
fdivrl
popa
js
bound
mov
mov
add
mov
testb
add
loopne
les
call
je
jns
and
mov
inc
leave
fdivr
and
add
or
and
mov
mov
sub
jecxz
pop
ds
add
jg
mov
pop
sbb
add
rolb
jmp
leave
xchg
in
nop
add
pop
fiadds
sahf
add
xor
or
cmp
add
out
cltd
mov
add
add
test
pop
ret
xchg
add
movsl
enter
mull
add
adc
adc
add
add
das
in
push
add
mov
loop
mov
lahf
popf
inc
mov
xchg
add
add
xchg
gs
mov
test
hlt
add
xor
add
in
int3
dec
mov
adcl
add
std
insl
push
add
icebp
testl
fcoml
jne
push
add
jae
adc
push
mov
sub
sub
add
ret
fbstp
push
push
adc
clc
sub
add
lds
mov
jmp
push
add
int
dec
fidivl
xor
adc
stos
scas
xor
xchg
xor
test
test
fnstcw
mov
add
xchg
cmpsb
add
lea
add
xchg
lahf
leave
mov
lret
cmp
add
jle
jmp
add
xchg
inc
add
out
fistl
dec
xchg
xor
jle
xchg
addb
movsb
add
pop
mov
mov
add
adc
add
add
gs
lock
jmp
int3
push
add
add
aas
cmpsl
rolb
add
mov
add
sub
addb
popf
std
cmp
popf
repz
pop
add
bound
mov
add
xchg
add
mov
aam
movsl
jnp
push
add
mov
or
nop
add
out
std
iret
repz
jmp
scas
add
mov
add
push
add
cs
int
inc
int3
or
push
cltd
pop
fsubrp
fmuls
sub
stc
lcall
cmp
jo
push
aam
pop
dec
das
mov
shrl
add
cmp
mov
pushf
xlat
ljmp
jp
inc
icebp
mov
call
leave
xchg
add
and
add
jecxz
test
sub
add
imul
sub
add
add
imul
adc
mov
popa
pop
jbe
aas
add
dec
popa
cli
fstps
test
xlat
arpl
add
mov
adc
dec
inc
ret
push
in
inc
add
addb
jg
mov
fdivs
add
into
sub
add
sbb
popa
mov
and
mov
loopne
sub
gs
popa
js
stos
cmp
add
mov
sub
push
add
and
fcmovu
jno
add
negl
test
insb
cmp
sbb
ficompl
and
fst
jbe
xchg
add
push
adc
mov
add
dec
les
inc
jae
outsl
or
jns
sub
aam
scas
dec
ja
add
mov
add
pop
or
mov
add
repz
and
sti
repnz
add
mov
cmp
push
add
dec
dec
fwait
push
addb
push
mov
nop
add
psllq
sub
push
repnz
xchg
add
mov
jp
add
pop
or
lahf
xchg
add
mov
add
movsb
add
push
add
aas
ss
add
add
mov
nop
add
mov
fmulp
call
xlat
mov
pop
iret
les
or
mov
xlat
pop
aaa
xchg
adc
testb
xlat
xor
sub
add
repnz
mov
inc
sub
rolb
rolb
cwtl
push
ret
or
mov
aam
xchg
add
jg
add
add
pop
jbe
js
add
xor
xor
clc
cmp
add
inc
rolb
sub
ret
xor
cmp
mov
rcl
add
xchg
rcl
jmp
add
sti
xor
add
add
xchg
addb
sbb
add
adc
fists
add
lret
pop
imul
es
add
stos
mov
out
addb
stos
mov
loop
xchg
add
and
mov
sbb
je
jo
pop
in
add
push
pop
data16
xchg
xor
imul
and
sahf
test
inc
add
mov
stos
scas
xor
mov
test
lahf
push
mov
jns
add
jle
cmp
add
xor
add
addb
xor
fidivs
lods
add
mov
loop
scas
js
lea
xor
jl
add
add
testb
jg
add
jbe
and
jle
add
stos
mov
push
add
jge
in
pop
clc
and
adc
and
subps
dec
lret
je
enter
add
cmp
lret
mov
inc
pop
frstor
add
lret
test
sbb
add
add
add
adc
cmp
add
fistl
or
add
xor
cli
fsubrs
add
dec
leave
sub
out
mov
lret
ljmp
arpl
add
mov
jecxz
cmpsb
add
hlt
add
outsb
push
dec
inc
push
add
mov
lcall
inc
add
xor
lret
rolb
adc
sbb
mov
aas
dec
cmp
add
add
add
jae
rorl
sti
xor
arpl
add
mov
mov
jmp
add
inc
jmp
jg
jns
add
or
xor
int3
inc
sbb
xchg
add
add
add
lods
bound
mov
mov
repz
pushf
fwait
mov
sbb
sub
add
push
add
pop
mov
add
fdivp
jge
sbb
push
or
add
add
add
mov
or
add
rolb
sub
pop
in
mov
pop
scas
sbb
add
int3
nop
add
add
push
jp
add
pop
les
lea
add
jl
jecxz
mull
mov
out
js
xor
and
mov
mov
mov
shrl
sbb
mov
inc
add
inc
add
mov
ss
pusha
add
inc
dec
pop
out
lock
mov
xor
sbb
dec
data16
pop
jecxz
push
sbb
mov
lods
ja
in
xchg
je
mov
stos
push
or
or
add
cmp
add
push
add
jbe
loopne
adc
xchg
mov
mov
cmpsb
add
movb
lret
and
mov
push
or
loop
les
sub
inc
add
js
cmp
add
add
mov
xor
aaa
aad
mov
add
testb
mov
popf
je
add
test
xchg
jg
stc
dec
xchg
repz
dec
or
cmp
idivl
add
add
add
push
add
adc
add
or
outsb
push
add
add
mov
add
mov
add
dec
push
adc
xor
push
add
add
mov
inc
pop
xchg
add
outsb
addr16
cltd
mov
clc
mov
add
mov
fucomp
dec
cmpsl
or
lea
scas
movsb
add
scas
in
push
fstl
add
mov
add
loop
pop
and
xor
add
add
mov
push
sbb
mov
push
xchg
add
movsb
add
add
add
mov
mov
cwtl
lret
add
testb
dec
mov
xlat
and
mov
enter
mov
mov
sub
mov
mov
mov
push
add
add
add
sub
ret
jmp
mov
mov
fisubl
add
and
mov
imul
cmp
jbe
mov
xchg
popf
fildl
sbb
mov
fnsave
add
add
mov
addl
call
sbb
enter
add
int3
sbb
pop
rolb
xchg
add
mov
scas
scas
rolb
iret
inc
add
push
push
add
add
add
hlt
add
add
xor
add
xlat
mov
add
scas
lea
outsl
int3
dec
xchg
aad
add
push
hlt
add
add
add
test
mov
mov
leave
cmp
imul
add
pop
enter
mov
inc
add
les
popa
enter
add
dec
jne
data16
jg
inc
add
rolb
add
loop
pop
jbe
sub
mov
outsl
fcmovnu
xor
fiaddl
add
inc
add
jne
add
add
add
sbb
add
cmp
mov
imul
sbb
xchg
mov
add
cli
stos
cltd
push
jle
addr16
mov
loop
adc
add
clc
add
sbb
add
jae
out
movsb
add
add
jb
mov
xchg
pop
clc
adc
mov
add
add
imull
and
cmpl
je
pop
in
jbe
sbb
ljmp
adc
mov
add
add
add
sbb
push
ret
add
mov
adc
mov
cltd
and
mov
rolb
cmp
scas
orl
push
je
fsubrs
pop
xor
push
adc
push
add
jno
fstl
or
push
push
add
and
mov
imul
jp
dec
push
jbe
inc
add
add
add
jns
pop
mov
add
outsl
dec
sbb
mov
leave
out
add
sub
iret
in
jmp
xor
dec
rolb
push
cmp
movb
test
ljmp
push
add
add
int
add
dec
gs
call
std
mov
lret
mov
fistpll
ret
inc
push
add
add
xor
add
mov
pop
mov
into
loope
lods
push
add
sbb
sbb
addl
stc
test
add
cmpsb
add
add
andl
dec
cmp
std
xchg
add
add
frstor
mov
add
rcrl
xor
sub
movb
xchg
jecxz
jne
cmp
mov
dec
mov
push
jmp
add
sahf
lahf
sbb
add
in
add
add
add
add
inc
add
lcall
adc
call
xor
and
iret
mov
or
add
fiadds
jge
aaa
fiadds
in
add
outsb
faddl
and
mov
add
lods
push
add
xchg
pop
out
mov
repz
add
shll
add
add
add
mov
inc
add
rolb
movsb
add
pusha
add
mov
cld
fucom
add
or
inc
add
add
adc
rolb
pop
pop
hlt
add
imul
out
das
call
inc
and
add
add
push
mov
mov
popf
push
testl
cwtl
enter
add
xor
ljmp
lock
pop
fmul
scas
rolb
mov
jecxz
daa
out
jb
test
add
rolb
je
fwait
rorl
std
pop
adc
and
lret
mov
lods
cmp
mov
sbb
add
cli
mov
int
pop
or
jnp
sbb
xchg
in
add
add
fmull
in
movb
in
in
xor
pop
sbb
ret
or
fwait
add
mov
je
add
popf
pop
jle
add
add
dec
cs
aad
loope
inc
add
cld
xor
aad
mov
std
test
add
cmpl
pusha
add
sub
add
jle
fsubp
loope
mull
jge
add
cld
xor
nop
add
add
lahf
sbbl
stos
cmp
leave
outsl
xchg
test
inc
pushf
mov
add
add
aam
subl
imul
fisttps
or
sub
jmp
fistl
test
and
mov
jp
inc
add
xchg
add
add
daa
cwtl
sbb
cwtl
data16
mov
push
add
pusha
add
push
xchg
aad
cmp
add
mov
and
mov
fdecstp
add
mov
mov
xorl
add
mov
add
add
jmp
out
std
dec
mov
les
pop
xchg
inc
add
cmp
dec
and
mov
out
outsl
sahf
pop
jle
push
add
cmc
mov
mov
push
add
mov
add
add
fisubrs
sub
stc
and
add
das
pop
cmp
add
inc
andl
xlat
and
mov
mov
inc
fcmove
fmuls
or
add
add
add
movsb
add
or
add
jp
lcall
ffree
add
xor
push
mov
fisubs
push
add
and
add
add
dec
and
jp
or
in
mov
pop
clc
mov
sbb
add
mov
cwtl
cmp
addb
outsl
lcall
add
testb
jge
lea
test
int3
cmp
adc
add
sbb
lods
jecxz
inc
das
out
or
jge
pushf
mov
inc
xorl
test
add
int3
xlat
adc
inc
add
cs
pop
inc
add
add
add
add
stc
add
push
add
push
into
mov
jmp
xchg
fisttpll
add
sub
cmp
or
add
stos
int
dec
sbb
je
lods
jb
sub
xchg
dec
push
add
add
add
mov
add
out
shrl
push
pop
test
push
rorl
add
daa
mov
fsubrl
mov
push
add
lahf
rolb
outsb
out
movsl
lret
leave
iret
pop
xchg
enter
stos
push
add
cmp
lcall
icebp
xor
call
adc
xchg
add
add
cmc
mov
add
stos
add
push
inc
add
test
add
add
addb
inc
add
or
sub
loop
mov
in
nop
add
in
daa
mov
pushf
leave
adc
fdivrl
pop
in
je
push
add
jbe
pop
sbb
sbbl
add
jp
sub
add
adc
les
ret
or
push
add
ds
cmp
movsl
pop
into
addb
scas
push
add
in
pop
adc
arpl
repz
sub
fisubrs
add
jno
sti
into
mov
dec
pop
sarl
iret
mov
push
xchg
add
add
and
outsl
mov
xchg
mov
jne
aaa
sti
sub
add
stc
and
in
push
shl
add
call
or
push
add
xor
and
add
mov
call
outsl
mov
mov
jecxz
ds
mov
ljmp
fldpi
mov
push
xchg
cmp
std
testb
add
dec
lret
inc
add
outsl
mov
cmp
add
sub
mov
add
push
add
imul
mov
pop
pushf
fstpt
lods
adc
lods
cli
iret
pop
je
ds
xor
or
push
add
jl
pop
sub
dec
lcall
hlt
add
add
fcoml
sbb
mov
pop
add
add
mov
xor
in
push
add
sbb
mov
jae
xchg
xchg
sbb
faddl
add
mov
add
outsl
push
add
pusha
add
addb
sti
movsl
xlat
ret
mov
add
ljmp
adc
add
or
data16
jae
in
jne
rolb
add
add
mov
xchg
xor
xor
test
add
add
jmp
dec
sub
jge
and
cs
add
cmc
arpl
rcrl
dec
or
sti
mov
add
mov
add
add
add
addb
push
popa
call
les
imul
or
cwtl
lret
and
orl
add
add
add
and
mov
imul
mov
out
dec
pushf
andl
push
mov
inc
add
mov
sbb
and
fmuls
add
mov
add
add
add
xchg
xchg
add
jle
shrd
int
test
push
add
loop
int3
icebp
rolb
or
add
shrd
mov
dec
repnz
add
mov
sahf
push
add
add
add
add
add
add
or
push
mov
cmc
jp
inc
add
mov
mov
jl
decl
mov
dec
add
jae
repnz
mov
mov
add
add
add
ljmp
add
add
add
add
add
and
ret
repz
add
pop
lea
insl
sub
cmp
outsl
cmp
cmc
lods
aad
jmp
cmpsl
dec
popa
fildll
std
and
mov
cmpsl
stos
loope
add
lds
sbb
ret
xor
push
add
add
cltd
push
jge
lds
pop
mov
add
bound
mov
lcall
pop
inc
call
inc
add
add
add
or
add
add
int3
mov
movb
add
add
add
jecxz
xor
jne
jecxz
int
add
cwtl
movb
add
lock
mov
add
pushf
sbb
mov
cltd
add
xor
inc
and
sub
dec
int
add
in
ret
pushl
lea
in
dec
xor
push
mov
pusha
add
and
cmp
scas
add
call
lods
or
add
sbb
pop
cmp
mov
fbld
add
xlat
jns
popf
add
mov
cmp
jp
cmc
jae
pop
cmp
popf
rolb
add
sub
icebp
fmull
test
pop
and
pop
inc
stos
das
fmuls
rolb
imul
adc
xlat
dec
pop
int3
inc
xor
sub
add
testb
pop
movsl
cmp
iret
pop
lea
fsubrl
fwait
inc
add
mov
out
sbb
shll
fwait
dec
or
xchg
add
push
adc
ficompl
add
icebp
push
mov
nop
add
mov
mov
test
dec
stos
xchg
es
ja
add
add
mov
pop
jae
cmp
add
aas
inc
xor
add
faddl
mov
add
add
add
movsb
add
test
add
ja
add
pop
dec
mov
pop
xchg
add
test
cmp
cli
push
mov
lret
inc
jge
repnz
je
mul
add
mov
mov
dec
or
sarl
pop
aaa
sbb
lods
lods
insl
xchg
add
mov
sbb
add
dec
fsubr
cmc
mov
add
dec
xor
push
cmp
movsb
add
je
daa
cmp
adc
movsb
add
mov
pop
lret
sub
pushf
fildl
add
add
ja
test
testb
add
icebp
testb
add
movsl
dec
clc
push
or
push
add
cmp
mov
sbb
add
rolb
aaa
adc
adc
mov
dec
aaa
es
fiadds
add
rolb
out
add
add
inc
dec
bound
mov
xlat
adc
mov
jae
push
add
xor
adc
pop
loop
je
iret
and
mov
test
add
fnsave
fistps
std
imul
scas
jg
cmp
add
jnp
add
clc
rolb
jmp
pop
aad
push
enter
lods
sbb
push
add
and
sahf
stc
xor
xchg
repnz
xchg
clc
push
add
rolb
mov
lret
add
xchg
add
pop
xchg
loop
dec
movb
add
xchg
cltd
cmp
hlt
add
push
add
rolb
popa
mov
mov
mov
or
add
testb
add
add
mov
pop
in
sbb
dec
pop
mov
pop
mov
mov
repz
mov
repz
fldcw
jge
mov
dec
push
addr16
sbb
add
cmp
shrl
decb
mov
ss
rolb
dec
or
cmp
xchg
add
loopne
mov
sbb
iret
shll
inc
add
add
add
xchg
jne
add
jae
push
adc
add
adc
dec
pop
adc
xor
movsl
sbb
push
add
rolb
inc
push
add
add
xor
push
hlt
add
jp
add
xchg
movsb
add
add
xor
push
add
cmp
add
lahf
pop
cmc
inc
add
add
and
bound
mov
add
or
insb
and
mov
add
inc
add
add
es
add
fcomi
add
out
rorl
aas
sub
sarl
add
add
inc
mov
sbb
sbb
cltd
adc
add
push
add
lock
pop
jecxz
add
sub
sbb
mov
stos
or
mov
lahf
jbe
inc
pop
pop
cvtps2pd
xchg
inc
add
aas
adc
push
dec
lods
mov
icebp
sti
in
out
test
rorl
inc
xlat
dec
lcall
mov
or
addb
add
add
mov
add
and
mov
add
mov
hlt
add
mov
add
fistpl
addb
add
and
mov
subl
lret
hlt
add
mov
add
add
xchg
add
add
sub
add
mov
push
insl
jp
add
add
dec
jnp
popa
nop
add
cmp
rcll
adc
sbb
pop
out
call
add
testb
pop
push
mov
nop
add
adc
mov
add
fistpll
add
jo
int3
cmp
push
addb
in
add
add
mov
cmpsl
popa
fptan
add
repz
mov
jae
add
std
cmp
adc
sub
movb
jl
or
or
add
add
fstl
add
scas
jmp
jno
push
add
dec
and
xlat
fld
add
xor
cli
and
mov
push
fcomp
cmpsb
add
pop
out
cli
inc
add
lds
sub
aas
insb
add
sbb
add
test
add
add
mov
mov
pop
in
repnz
add
add
adc
sub
mov
sbb
add
loop
out
fbld
ret
xchg
add
jecxz
add
add
xor
and
mov
add
adc
sub
push
cli
data16
push
fimuls
cmp
add
pop
push
sub
js
add
add
add
dec
stos
adc
cmpsl
cmpsl
inc
or
or
pop
testb
add
sbb
add
mov
xor
fimull
sti
cwtl
xchg
add
xor
icebp
mov
pop
cmp
out
stos
andl
test
cmp
les
push
and
testb
lds
mov
and
add
lea
cld
mov
add
xchg
negl
popf
mov
test
addb
xchg
ret
lret
ficoml
add
inc
add
xchg
add
add
or
cs
gs
mov
xchg
add
add
add
xor
jo
mov
insb
sbb
push
add
mov
xchg
add
and
subl
add
int
inc
mov
stc
cmpsl
xor
mov
mov
sbb
add
pop
push
mov
mov
add
xor
add
in
xor
fmuls
add
mov
cmpsb
add
add
push
add
and
mov
jmp
xchg
jno
mov
jns
sbb
push
add
add
cmc
lcall
push
add
rolb
adc
jno
cld
jmp
push
add
arpl
rolb
out
pushl
cs
cmp
jne
jno
test
jae
add
fcmovu
mov
mov
add
mov
inc
push
add
xor
jecxz
or
add
lods
push
add
inc
or
cltd
mov
jno
mov
mov
add
push
add
mov
cmpsl
xlat
xchg
add
testl
add
lahf
jmp
pop
jmp
add
orl
xor
jl
add
jno
adc
add
testb
cmpsl
jb
bound
mov
mov
jb
push
add
add
out
cmpsl
sbb
ljmp
add
or
cmc
rolb
and
movsl
jmp
cmp
aad
add
in
or
pushf
adc
or
and
mov
add
enter
jecxz
mov
filds
mov
stos
andl
stos
dec
inc
pusha
add
cli
jp
add
cmp
mov
jno
mov
repnz
add
aad
imul
xchg
add
push
add
and
cmpsb
add
mov
add
rolb
addb
mov
insb
push
add
mov
add
add
dec
inc
add
push
add
and
enter
cmp
test
cmp
xchg
add
push
in
arpl
lea
add
fimuls
adc
out
or
outsb
fiadds
add
add
je
cltd
out
scas
add
push
add
addr16
add
testl
ljmp
add
mov
mov
add
dec
pop
decb
add
add
ret
mov
lock
push
add
ficoms
pop
cwtl
mov
inc
add
add
scas
mov
fwait
bound
mov
addl
and
mov
or
sti
imul
add
outsl
mov
mov
push
add
add
ljmp
dec
push
add
add
add
fcoms
icebp
xor
fcom
std
inc
add
pop
push
dec
push
add
mov
frstor
int3
mov
mov
adc
add
add
hlt
add
cmpsl
ljmp
adc
addb
add
add
lret
or
mov
add
add
fdivl
or
add
add
std
addb
shll
call
or
insb
or
add
add
daa
nop
add
jns
push
leave
leave
jae
add
adc
mov
rolb
rolb
test
movb
std
sbb
add
add
add
mov
jns
jg
xor
mov
xchg
ss
pop
add
add
ret
mov
imul
ret
ret
add
add
dec
push
add
int3
pop
out
pushf
sub
sbb
add
aas
push
add
pop
popa
aas
out
loopne
in
scas
mov
shll
stos
lods
movb
loopne
lret
add
adc
and
mov
lds
xor
out
scas
inc
mov
inc
dec
pop
gs
mov
mov
in
aad
mov
dec
inc
add
or
sub
xor
add
and
pop
xor
sub
std
data16
add
pop
mov
mov
add
cmpsb
add
iret
sbb
test
pusha
add
stos
mov
adc
add
push
add
fwait
lods
das
sar
mov
xchg
dec
jb
fwait
cs
fstps
hlt
add
push
add
int
xchg
mov
aas
and
mov
add
addr16
adc
sbb
sub
sub
push
or
add
inc
out
and
mov
imul
inc
add
add
jmp
add
add
push
mov
sub
add
add
mov
and
push
add
nop
add
push
aaa
adc
add
add
outsl
jno
data16
add
mov
add
mov
pop
pop
cs
stc
ss
sbb
test
add
add
adc
movsl
aad
adc
adc
lods
mov
xchg
push
add
jne
mov
add
rolb
fidivl
add
add
sahf
sub
cltd
dec
adc
pop
push
jge
add
add
dec
lahf
and
mov
add
mov
outsl
adc
and
and
add
jl
outsb
xor
push
jae
mov
jne
xchg
ret
pop
leave
test
add
mov
int3
lds
mov
and
das
repnz
scas
mov
push
adc
cmp
and
mov
add
push
add
lret
add
out
stos
inc
add
adc
icebp
sbb
stos
dec
sbb
imul
imul
or
cmp
add
js
mov
jmp
jo
jae
add
mov
add
ss
loop
xor
mov
dec
jge
mov
mov
add
add
add
add
mov
movsb
add
add
xchg
or
add
sbb
enter
add
add
ja
addb
out
mov
xor
xchg
push
add
xor
scas
sub
and
add
mov
add
adc
push
add
mov
add
mov
arpl
mov
add
adc
les
imul
jne
add
ficoml
inc
add
jb
xchg
xchg
add
add
fadds
mov
push
add
cmp
rcll
push
add
pop
pop
mov
pop
pop
inc
add
add
add
add
movb
add
and
and
mov
fcmovu
add
mov
subl
rolb
addr16
mov
add
add
jecxz
mov
popa
jle
add
rep
sub
mov
ljmp
repnz
mov
bound
mov
cmc
cwtl
in
cmp
mov
xor
aas
mov
add
push
bound
mov
mov
mov
movb
sbb
add
add
mov
xor
xchg
lea
pop
mov
add
and
mov
push
cmp
add
add
mov
cmp
xchg
xchg
pop
rolb
add
ret
aad
cmpsb
add
and
mov
xchg
cmc
jns
add
cli
addb
fistpll
add
add
xor
jecxz
add
jg
aas
add
insl
fs
aas
mov
add
add
add
xchg
or
add
dec
add
add
add
pop
mov
add
rolb
sbb
pop
imul
mov
or
pop
mov
movsl
mov
inc
adc
out
pop
pop
leave
mov
cmpsb
add
mov
lahf
fisttpl
clc
jae
in
dec
sub
add
loop
mov
mov
push
add
stos
ret
push
push
add
add
hlt
add
inc
insl
cmp
dec
mov
adc
rolb
cwtl
mov
sub
repnz
jo
jp
jmp
add
mov
lret
lock
jnp
jg
pusha
add
add
lcall
pop
loopne
inc
cmp
lea
cmp
stos
sub
jo
rcll
pop
cmp
xor
cmp
mov
mov
int
icebp
aam
ljmp
insb
fidivs
add
sbb
push
add
push
add
add
ret
js
add
add
lock
fstl
mov
sub
xchg
clc
stos
jne
add
xor
mov
add
dec
xor
pusha
add
scas
insb
dec
dec
icebp
aad
mov
cmp
dec
cmp
add
add
add
add
xor
out
xor
mov
add
fdivrs
xchg
js
push
addr16
add
popa
adc
mov
inc
jecxz
jl
sahf
in
pop
xor
add
lods
es
push
jo
xor
mov
sub
imul
outsl
push
adc
pop
dec
and
mov
xlat
mov
testb
add
mov
jle
insl
jo
int
add
cmp
add
movsl
sub
outsb
mov
int3
mov
push
pop
clc
dec
mov
xlat
adc
push
add
sbb
add
roll
mov
call
add
add
sub
or
repz
mov
jge
pusha
add
add
scas
add
mov
stos
enter
pop
insb
das
pop
fmull
jmp
test
xchg
add
cltd
movsb
add
add
push
inc
xchg
add
imul
cmp
and
mov
pop
sub
mov
add
add
add
loope
push
add
xchg
iret
enter
add
jbe
repnz
fxch
xor
mov
add
ret
sub
jo
rolb
xchg
jno
out
add
pushf
pop
xchg
imul
add
pop
jg
xchg
test
mov
or
add
add
mov
mov
add
rolb
jnp
add
jns
add
addb
or
inc
cmp
add
xor
test
mov
add
lret
dec
insl
sti
mov
dec
sub
sbb
mov
mov
mov
daa
and
mov
dec
xchg
jl
call
or
add
dec
push
bound
mov
sbb
sub
or
fucomi
or
loope
add
pop
xor
rcrl
add
test
aam
fdivrs
imul
or
add
in
int
add
test
aam
fisubrs
addb
mov
loop
mov
xor
dec
inc
push
call
movb
cltd
sub
cmp
add
push
add
addb
out
into
ret
add
add
inc
add
test
aad
or
decb
sub
les
sub
push
add
test
jae
sub
add
cltd
cmp
add
loope
int
out
pop
stc
xchg
add
mov
add
sub
repz
add
ret
add
xchg
add
add
or
inc
and
jp
add
out
pop
mov
sub
add
add
add
in
add
sbb
mov
jbe
pop
data16
scas
dec
in
add
add
sahf
into
ds
clc
mov
sbb
mov
mov
mov
mov
outsl
adc
out
push
cmp
add
repnz
xchg
xor
add
movb
add
add
pop
add
das
jecxz
mov
sub
push
add
and
add
add
addb
addb
add
mov
cwtl
and
mov
jns
push
add
add
mov
add
add
cmp
aaa
ljmp
add
ds
jns
sub
add
mov
fwait
add
inc
add
add
pop
or
mov
mov
cld
into
roll
add
xchg
add
mov
cmp
icebp
mov
jl
add
enter
fstps
push
sbb
mov
add
out
xchg
add
add
jbe
mov
stc
mov
fwait
xchg
add
fadds
bound
mov
add
adc
cmp
xchg
hlt
add
movsl
je
add
clc
sbb
les
je
pop
fildll
xchg
flds
pusha
add
sbb
xchg
loope
add
mov
jae
push
add
cltd
inc
daa
mov
dec
pop
xchg
daa
subl
xor
in
jecxz
add
add
add
hlt
add
add
fsub
add
xchg
add
loope
inc
movsb
add
or
jecxz
xchg
je
mov
inc
add
dec
xor
add
add
mov
inc
push
push
add
mov
mov
xchg
add
add
xchg
add
pop
xchg
xchg
cli
scas
or
int
popa
pushf
or
mov
in
jl
ljmp
add
add
sahf
mov
add
jno
jbe
adc
push
add
xchg
jecxz
jecxz
loopne
test
sbb
out
xor
add
mov
lods
sbb
add
push
cmp
and
add
xchg
out
or
add
add
xchg
shrl
icebp
add
movb
add
out
push
or
add
mov
add
dec
inc
add
lods
daa
pop
inc
jg
add
add
xchg
cmp
dec
sub
cmp
add
adc
pop
mov
cmp
or
and
enter
add
add
in
adc
movsl
sub
mov
add
les
lods
xchg
add
insl
xor
sbb
arpl
mov
imul
icebp
lcall
cld
stos
or
ficoms
mov
add
cmp
push
add
jg
push
inc
mov
inc
adc
xchg
pusha
add
js
cwtl
mov
mov
add
imul
loopne
or
add
xchg
int3
nop
add
out
push
add
mov
test
add
mov
xor
int
xchg
inc
ds
add
into
fstpl
addl
pop
cwtl
and
shll
jnp
add
lahf
sub
add
jne
cmpsb
add
into
add
push
add
cmp
add
daa
in
addb
add
subl
ret
add
out
out
add
mov
add
sub
add
shr
aam
add
push
add
loopne
mov
mov
or
xchg
add
scas
push
xor
xchg
movsb
add
clc
out
sbb
add
push
add
add
add
sti
mov
mov
adc
or
jbe
movsb
add
xlat
jp
push
add
in
cmp
add
mov
mov
jno
scas
sbb
add
int
add
fdivrl
xor
jae
dec
dec
mov
add
das
mov
fidivs
cmp
in
lea
add
inc
add
push
fisttpll
mov
add
lret
add
imul
jp
loopne
movsl
test
add
sbb
in
adc
iret
int3
testb
adc
pop
adc
mov
xlat
ret
add
xchg
sti
outsl
or
movsb
add
inc
cwtl
mov
mov
mov
push
add
add
in
fstpt
push
sub
movb
xor
mov
pop
popf
mov
add
das
pop
mov
stos
dec
aad
divl
bound
mov
rolb
pop
outsb
mov
cmc
aam
fcomps
add
jb
adc
jg
fwait
ret
mov
testb
and
mov
mov
add
mov
add
stos
add
mov
add
add
lods
out
xchg
mov
mov
jo
cli
add
cmpsl
push
psubusb
inc
add
add
movsl
sbb
push
add
imul
push
lret
add
add
jl
repnz
inc
add
fxch
out
mov
add
push
add
add
mov
stos
adc
jno
ja
std
mov
add
or
js
mov
push
add
mov
popl
or
rolb
cmp
mov
ds
add
cmpsl
push
icebp
mov
dec
add
jb
sub
movb
pop
sub
xchg
add
push
cmp
add
popf
jge
fcomi
scas
inc
add
or
add
jp
add
add
pop
test
ja
js,pt
ja
jp
or
push
mov
add
outsb
iret
sub
and
xchg
insl
mov
in
fdivs
add
pop
adc
popa
out
add
add
and
dec
rolb
mov
push
ds
add
pushf
jle
sti
pop
or
testb
repz
addb
add
jnp
add
stc
xchg
movb
or
shll
add
pop
xchg
xor
sbb
inc
push
or
xchg
imul
add
fstps
push
push
cmp
pop
cltd
jb
xchg
add
sub
add
and
stos
aam
imul
cmp
mov
stos
ret
add
add
mov
les
cwtl
mov
jo
cmp
add
add
ja
add
sbb
ljmp
mov
imul
xchg
add
or
xor
push
pop
mov
add
pop
add
fbld
sbb
aas
lock
stos
push
and
clc
fwait
cwtl
and
add
pop
mov
roll
into
pop
adc
mov
add
add
push
add
add
pop
xorl
add
xchg
pop
sub
mov
sahf
inc
add
dec
push
stos
inc
add
test
popf
push
sub
lcall
sbb
inc
add
inc
add
test
mov
hlt
add
test
xlat
fst
add
stc
dec
das
ret
ja
add
add
cmpsl
xchg
subl
cmp
add
mov
push
bound
mov
test
pop
adc
jge
mov
add
jmp
jnp
mov
or
repnz
add
add
pop
dec
adcl
test
push
mov
jnp
add
cltd
push
or
and
mov
mov
jecxz
clc
push
add
mov
jb
and
jo
fsts
test
repnz
add
mov
insl
or
mov
arpl
sub
jns
xchg
add
fdivl
mov
das
pop
inc
in
testb
add
mov
loope
add
int3
add
dec
xchg
add
add
add
and
add
daa
test
add
fsub
add
mov
dec
fwait
imul
jbe
cmp
jnp
jno
rolb
sbb
cmp
xor
add
mov
add
adc
arpl
dec
mov
sub
xchg
incb
fistps
outsl
shll
pushl
mov
mov
jge
add
aad
cwtl
scas
mov
loop
iret
cli
hlt
add
aas
or
es
sub
shrl
pop
mov
cltd
inc
xlat
xlat
mov
mov
add
gs
rolb
mov
or
inc
jecxz
daa
icebp
or
arpl
push
add
fwait
or
cmpsb
add
ret
add
mov
add
sbb
cmp
add
sbb
clc
adc
push
add
add
cmp
push
add
pop
aad
adc
fidivs
inc
mov
add
ret
add
dec
sub
add
add
leave
xchg
add
jne
inc
enter
movsl
mov
outsl
pusha
add
pop
dec
mov
mov
fsubrs
movsl
add
add
out
push
and
add
add
in
xlat
xchg
cli
repz
or
stos
sub
add
js
add
mov
add
jae
pusha
add
push
add
pop
sub
sbb
jg
jae
outsb
jmp
add
add
and
xor
add
add
ret
jo
pop
sbb
insl
cwtl
js
stc
xor
push
add
push
add
out
rolb
test
and
mov
jg
inc
add
rolb
aam
push
cmp
cs
dec
adcl
add
out
add
addb
add
and
mov
inc
dec
iret
addb
mov
add
pop
or
add
add
add
push
je
lahf
sti
lods
shll
xor
mov
xor
stc
into
in
test
mov
insl
sub
add
add
call
out
cmp
stos
scas
push
cmpsb
add
add
jge
cmp
add
add
push
insb
pop
nop
add
cld
lea
mov
movsb
add
add
mov
pop
aaa
inc
add
push
add
add
fistpll
cld
in
jo
shl
xchg
add
sub
int
add
push
pop
aam
mov
sbb
add
sbb
dec
lret
lods
addb
mov
aad
enter
pop
jge
or
add
add
mov
repnz
sbb
push
add
cmp
dec
mov
scas
je
loop
add
mov
fnsave
mov
xor
mov
add
out
add
sbb
pop
add
mov
jne
les
inc
dec
jge,pn
xchg
jle
pop
xchg
push
add
jns
or
mov
std
jne
imul
mov
data16
aas
inc
add
aaa
inc
add
cmpsl
outsl
popf
or
rorl
lods
xchg
in
and
dec
adc
adc
xor
shrl
jmp
mov
movb
mov
popf
popf
mov
or
hlt
add
hlt
add
movsl
xchg
mov
add
inc
repz
or
cmp
out
or
add
mov
xchg
sub
adc
add
iret
fisubl
mov
sbb
enter
cli
mov
xchg
mov
jg
mov
scas
adc
iret
jne
xchg
cmp
add
mov
add
test
clc
lcall
add
xchg
add
in
inc
jp
jl
xor
test
or
cltd
inc
add
mov
add
add
mov
push
sbb
sub
mov
lret
repz
push
add
add
add
add
add
add
add
bound
mov
add
cmp
cmp
jb
sbb
test
movsl
sub
xchg
add
mov
mov
add
mov
and
mov
jnp
cmc
movsb
add
repz
dec
lcall
lahf
scas
mov
lods
sti
inc
push
add
mov
mov
push
add
mov
js
add
add
out
add
dec
nop
add
mov
xchg
stc
push
out
inc
mov
push
add
add
lea
pop
and
mov
sbb
mov
lret
mov
add
pop
fistpll
lret
lods
xor
cs
adc
imul
add
lods
jp
add
inc
add
pop
mov
cltd
jl
sub
and
out
test
ljmp
adc
mov
ljmp
imul
xor
add
push
add
mov
mov
add
add
int
xor
in
add
jle
and
mov
add
sub
int
xchg
movsl
aas
sbb
aam
aas
iret
cmc
out
add
push
in
into
nop
add
daa
test
add
jo
ret
sti
inc
test
out
test
pop
stos
imul
sub
add
loop
sub
add
mov
pusha
add
mov
add
add
add
add
dec
jg
xchg
aam
push
add
adc
mov
push
add
lea
jo
jae
pop
rolb
add
mov
addb
popf
and
mov
sbb
pop
aaa
mov
add
sub
add
mov
mov
fisttpl
add
add
add
pop
rolb
jl
add
add
mov
icebp
cwtl
mov
add
add
jecxz
add
and
mov
add
inc
mov
enter
loope
xchg
add
in
cmpsl
loopne
add
mov
add
mov
ficoml
rolb
dec
and
add
sahf
inc
stos
xor
inc
or
add
and
mov
dec
mov
add
lods
js
fwait
inc
add
xor
add
add
add
add
and
stc
or
sahf
icebp
stos
cs
add
add
add
stos
jge
mov
sub
and
add
add
add
add
adc
xor
dec
or
add
iret
and
cmpsb
add
and
inc
add
xor
sub
add
imul
xor
adc
stos
mov
sbb
add
rcrl
mov
iret
push
add
bound
mov
add
add
xorl
dec
adcl
sbb
rolb
sub
cwtl
in
add
sbb
out
or
add
mov
or
add
bound
mov
jp
sub
out
stos
testb
add
add
and
sbb
addr16
jns
pop
jge
add
out
testl
push
add
adc
rcll
mov
add
add
add
or
into
mov
add
add
mov
mov
add
mov
lret
add
add
repz
pushf
push
aam
movb
jns
or
ret
rolb
and
mov
add
mov
cwtl
popa
adcl
addb
mov
cwtl
push
ja
add
pop
movb
int
add
lods
into
mov
add
jle
hlt
add
xlat
xor
add
add
fildl
jns
enter
add
mov
lahf
jbe
test
repnz
js
mov
lds
bound
mov
pop
jge
in
fwait
es
add
dec
inc
add
addr16
je
pusha
add
xchg
add
or
xchg
mov
jmp
add
rolb
cli
inc
sub
mov
and
mov
fwait
jne
decl
rolb
in
mov
mov
inc
push
mov
stos
fildll
add
mov
xor
shll
add
push
cltd
xor
add
xor
mov
insl
stos
sub
cmp
iret
int
jns
push
add
or
xchg
inc
stc
insl
in
in
add
add
xchg
xor
popf
cmp
add
or
in
imul
jmp
pop
pop
stc
sbb
mov
jecxz
jbe
and
xchg
movsb
add
sub
add
add
add
stos
mov
xor
dec
movb
add
add
or
sub
mov
out
add
push
xlat
fisubl
cmpsl
xor
add
mov
add
xchg
push
gs
xchg
add
cmp
add
add
mov
add
ljmp
cmpsb
add
fwait
stc
cmp
int3
in
mov
repnz
xor
xchg
add
add
add
push
add
add
xlat
cmpsl
insl
outsb
jo
xor
les
rolb
inc
jbe
loope
imul
mov
push
mov
cmc
inc
pop
lds
add
cwtl
out
mov
stos
mov
mov
inc
add
xchg
sub
add
pop
aad
sbb
add
es
xchg
add
xchg
add
add
ret
mov
adc
jl
add
add
movsl
aam
aaa
mov
mov
add
hlt
add
add
lea
jbe
pop
pop
jnp
inc
shll
add
mov
lret
ljmp
adc
add
xor
leave
jns
and
mov
mov
add
cwtl
push
cs
cltd
push
insb
jo
push
jno
clc
sahf
ss
pop
ljmp
mov
add
jmp
pop
or
add
add
add
add
xchg
add
add
sub
jmp
push
ds
sub
icebp
jbe
ja
add
xchg
xchg
jecxz
inc
add
add
bound
mov
cld
cmpps
inc
sahf
jns
sub
out
add
xor
imul
add
mov
mov
mov
testl
enter
add
fucompp
jae
push
cwtl
vcmpps
adc
cmp
dec
or
cmp
cmp
dec
mov
imul
add
dec
and
sahf
jns
push
cmp
pop
pop
push
das
int
addb
inc
bt
mov
mov
outsl
pop
xchg
add
mov
mov
mov
int
add
imul
mov
repz
xlat
pop
add
mov
add
add
xlat
imul
push
add
rolb
add
or
add
add
ret
or
add
mov
aam
adc
pop
jmp
in
sbb
add
add
xchg
fs
add
repz
inc
xor
pop
mov
add
push
pop
outsl
sti
addr16
std
mov
movsb
add
fisubs
test
mov
popa
aad
add
outsl
xchg
jge
add
add
xor
ficoml
sub
add
add
std
bound
mov
jle
movb
push
add
xchg
inc
or
add
xor
lea
mov
movb
add
add
or
add
mov
xchg
add
popf
and
mov
stos
xchg
add
scas
sbb
add
mov
in
ret
inc
add
add
xlat
xchg
add
dec
movsb
add
lods
cmc
fdivrl
xchg
add
xchg
rolb
clc
inc
add
in
adc
dec
sub
lcall
and
mov
cmpsl
aad
dec
and
add
and
mov
sbb
mov
dec
or
les
aas
pop
pop
in
in
lock
rolb
cmp
repnz
or
add
test
js
es
sbb
add
test
mov
mov
bound
mov
int3
mov
cmpsb
add
repz
add
leave
xor
insl
int
jge
mov
dec
js
std
jbe
ja
push
fsubr
sub
add
add
mov
hlt
add
add
and
pushf
inc
daa
add
mov
fmuls
stos
stos
addb
xchg
add
jb
fldl
inc
mov
mov
jle
add
aad
add
and
popl
add
push
hlt
add
jecxz
sub
add
xchg
add
cmp
clc
mov
leave
and
pop
cmpsb
add
xorl
shl
or
dec
insb
out
fsubl
mov
addb
jecxz
add
add
and
mov
fwait
mov
push
add
add
adc
cmp
adc
add
scas
clc
mov
ficomps
jne
add
add
sub
add
mov
jp
add
pop
arpl
add
add
inc
add
mov
frstor
adc
cmp
jne
add
pushf
add
mov
push
add
mov
xchg
add
add
cmpsb
add
add
add
call
push
mov
cmpsl
nop
add
lods
cld
sti
mov
sub
mov
iret
imul
enter
and
jl
pop
cld
jle
test
enter
stos
mov
sahf
aam
pop
add
mov
dec
out
outsb
hlt
add
add
sbb
leave
imul
sub
jmp
jle
insb
fsubrl
or
xchg
add
add
add
add
add
jecxz
xchg
sbb
cli
aam
xor
pop
movsl
cmp
sbb
or
movb
shr
in
addl
les
add
add
adc
popa
jb
int
lret
rolb
mov
dec
xchg
add
aaa
call
outsl
cltd
jae
imul
cld
inc
leave
inc
add
add
stos
in
adc
add
outsb
cs
sub
stos
daa
iret
test
add
or
add
add
add
add
int3
out
or
add
add
push
xchg
adc
xchg
add
add
mov
cli
dec
fisubrs
cmp
add
jmp
je
mov
int3
inc
add
add
push
insb
call
int
rolb
cmp
jl
add
add
add
add
lret
jnp
add
mov
mov
cmp
out
push
add
stc
mov
dec
int3
xchg
addb
sbb
pop
dec
mov
loop
mov
cmp
pop
push
fistl
cld
enter
add
adc
inc
add
addb
add
add
cmp
add
pop
cltd
lds
nopl
cmp
add
mov
add
adc
lods
push
add
add
push
and
dec
lcall
xchg
xor
and
mov
add
adc
lret
add
push
movsb
add
add
mov
sub
jbe
outsb
jecxz
rolb
repz
loope
add
jmp
sbb
or
add
push
hlt
add
xlat
sti
inc
add
stc
mov
in
inc
add
fdivr
lret
mov
add
xchg
add
inc
cmp
dec
xor
mov
rcl
sub
add
mov
mov
scas
mov
add
repz
je
add
ljmp
inc
add
int
mov
testb
or
cld
movsb
add
rcll
add
adc
pop
sub
pop
and
xchg
adc
fisubl
jle
ficoms
add
pop
call
or
addr16
inc
add
xor
xlat
cmp
lods
pop
ja
add
das
or
jmp
add
loop
testb
data16
and
mov
add
jg
add
add
scas
rolb
lahf
adc
jmp
add
add
sbb
add
xchg
adc
xor
stos
cmp
sbb
adc
dec
and
push
add
stc
cmp
sub
xrelease
sbb
add
dec
lahf
mov
add
xchg
add
add
sbb
add
cmp
jne
sbb
jno
fnstenv
mov
add
xor
dec
sbb
add
push
pusha
add
add
pop
sbb
pop
inc
pop
adc
fcoms
add
xlat
leave
out
jge
add
test
mov
ss
int
movb
ja
add
jnp
fsub
add
jbe
sub
push
add
repz
data16
fbld
push
add
cli
mov
inc
add
mov
clc
bound
mov
add
mov
rolb
mov
add
cmpsl
loopne
out
push
sbb
bound
mov
jge
add
mov
or
out
mov
add
sub
gs
pop
jge
push
xchg
add
add
cmp
add
data16
roll
add
add
icebp
sub
pop
sahf
stos
adc
xlat
dec
mov
jge
add
or
ljmp
mov
add
lahf
in
frstor
push
pop
push
add
fcmovnu
sti
js
lods
adc
outsb
add
fcoms
add
inc
add
or
add
jle
leave
xor
jne
mov
mov
xchg
lea
add
jp
fnstcw
add
dec
adc
mov
mov
add
dec
cmp
addb
and
mov
outsb
jmp
mov
add
add
add
into
jb
out
lcall
add
add
mov
cmp
movb
add
add
lds
jb
int3
mov
add
mov
add
testb
mov
das
repz
add
mov
fstpl
add
mov
adc
add
add
jne
add
add
inc
add
add
movb
jle
jl
add
add
test
or
add
mov
add
mov
add
add
pop
mov
add
add
subl
or
jle
mov
dec
pop
jmp
mov
push
xor
add
add
xor
mov
add
or
fldl
cmp
add
mov
cmp
fdivr
xor
test
fcoml
add
es
sbb
mov
mov
add
push
add
add
push
in
add
rolb
int3
and
xchg
aaa
pop
and
sub
add
jge
repnz
add
jmp
add
push
add
mov
movb
adc
insb
pop
movb
out
movsl
dec
insl
inc
add
rolb
inc
add
fists
add
cmpl
fucomp
lods
rdtsc
lcall
cld
push
add
pop
cmc
sbb
pop
loope
add
ss
pop
dec
mov
mov
aas
fildll
add
add
add
fistpll
rolb
loope
pop
adc
testb
add
add
jb
jb
int
or
add
shll
add
adc
add
xor
push
mov
add
mov
sub
decl
add
adc
add
ret
inc
adc
fld
push
mov
in
daa
cs
mov
jecxz
inc
aad
mov
fdivl
aam
mov
lds
add
add
mov
mov
jns
add
add
out
mov
sub
add
mov
and
aam
and
and
rolb
stos
movsb
add
mov
ja
sub
mov
xor
ret
sbb
add
mov
add
xor
add
bound
mov
in
nop
add
sti
jle
mov
jae
add
ds
pop
je
xchg
add
jbe
push
mov
inc
sub
das
sbb
sub
add
cwtl
and
mov
arpl
add
or
add
aad
jge
add
mov
pop
mov
sbb
pop
mov
or
js
push
cld
mov
clc
repnz
jae
dec
repnz
sbb
add
push
add
add
add
nop
jae
add
add
add
add
mov
add
data16
ret
inc
xchg
stc
cltd
and
fadds
add
addb
add
pop
clc
repnz
jae
add
add
add
jne
mov
add
clc
repnz
jae
inc
mov
push
push
mov
xchg
ret
add
fwait
out
add
add
add
rol
push
mov
xchg
ret
dec
dec
fwait
xor
push
mov
xchg
ret
add
dec
add
add
sub
repnz
jae
ret
add
pop
mov
clc
repnz
jae
cltd
pop
xor
subl
jae
adc
adc
push
add
push
clc
repnz
jae
add
mov
add
pop
movsl
addb
xor
clc
repnz
jae
lds
add
inc
mov
and
add
fwait
cld
nop
jmp
movsb
push
add
aaa
loope
add
clc
repnz
jae
xchg
stc
add
add
add
ja
pop
clc
repnz
jae
add
add
add
add
add
push
mov
xchg
ret
add
fwait
pop
fldcw
clc
repnz
jae
add
pop
movsb
cmp
mov
xchg
ret
push
add
scas
test
out
cmpsl
scas
mov
clc
repnz
jae
repnz
mov
movsl
and
fildl
nop
jmp
add
lds
add
jge
popa
add
mov
xchg
ret
lahf
fsubrs
add
add
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
add
fwait
cld
nop
jmp
bound
add
xchg
add
clc
repnz
jae
das
adc
add
add
clc
jne
clc
repnz
jae
movl
scas
mov
push
mov
xchg
ret
lahf
insl
add
fisttpl
xchg
add
repnz
jae
add
lret
fdivr
repnz
jae
adc
jnp
add
push
inc
add
add
add
inc
jb
clc
repnz
jae
repnz
add
repnz
jae
jne
add
xchg
add
add
add
add
push
push
addb
jae
add
push
mov
xchg
ret
pop
push
bound
dec
push
add
movzwl
clc
repnz
jae
add
xor
pop
fwait
cld
nop
jmp
add
add
jne
add
test
push
add
clc
repnz
jae
insl
xchg
add
mov
clc
repnz
jae
mov
sbb
mov
xchg
ret
add
add
add
add
clc
repnz
jae
inc
insl
subl
jmp
out
add
add
insl
out
add
ficoms
cld
nop
jmp
arpl
dec
pop
add
sbb
nop
jae
lret
add
sub
cltd
mov
push
mov
xchg
ret
mov
add
add
push
clc
repnz
jae
pop
add
scas
add
clc
repnz
jae
movsb
add
add
stc
push
push
mov
xchg
ret
add
add
xor
add
mov
add
bound
mov
push
clc
repnz
jae
lret
xor
add
add
nop
jae
repnz
arpl
sar
nop
jae
adc
add
jne
jne
clc
repnz
jae
add
repnz
jae
fcomps
inc
mov
mov
sar
mov
clc
repnz
jae
push
lds
add
push
mov
push
clc
repnz
jae
add
lds
jmp
test
fwait
dec
stc
add
add
stc
xchg
pop
pop
push
mov
xchg
ret
movsb
mov
add
inc
dec
je
clc
repnz
jae
inc
jnp
mov
push
mov
xchg
ret
sub
push
movl
mov
mov
repnz
jae
add
add
add
clc
repnz
jae
push
push
add
movsb
ret
sub
les
clc
repnz
jae
pop
add
add
and
les
clc
repnz
jae
fwait
out
push
add
dec
sub
mov
xchg
ret
arpl
add
mov
clc
repnz
jae
das
add
mov
nop
jae
add
add
add
gs
add
add
add
add
sbb
add
ret
inc
add
push
clc
repnz
jae
add
add
add
ret
add
lds
jnp
out
add
and
mov
mov
imul
xorl
add
xchg
data16
add
std
jmp
add
lock
out
jne
clc
repnz
jae
dec
add
push
mov
inc
add
outsb
cmp
mulb
add
jge
inc
add
lahf
lret
add
nop
jmp
push
dec
add
jnp
lock
jne
pushl
push
mov
xchg
ret
das
and
add
pushf
ret
clc
repnz
jae
lret
add
add
add
cld
nop
jmp
add
push
add
mov
nop
jae
test
and
mov
clc
repnz
jae
add
add
add
leave
sub
repnz
jae
add
add
fwait
cld
nop
jmp
add
ret
add
add
loopne
xchg
fimull
mov
cmp
ret
add
mov
clc
repnz
jae
push
add
sti
push
clc
repnz
jae
add
add
add
sbb
lret
inc
add
add
mov
sbb
mov
clc
repnz
jae
add
ret
pop
ja
add
push
mov
xchg
ret
add
add
arpl
xor
sbb
add
repnz
jae
scas
movsb
add
add
clc
repnz
jae
add
add
add
add
nop
jae
xchg
add
push
jnp
add
clc
repnz
jae
test
add
inc
into
jne
clc
repnz
jae
add
scas
dec
call
fwait
cld
nop
jmp
lock
movsb
test
sbb
add
fwait
cld
nop
jmp
movsb
add
push
outsb
add
fwait
cld
nop
jmp
adc
addl
or
clc
repnz
jae
xchg
sbb
push
add
data16
cmp
fwait
cld
nop
jmp
scas
and
pop
int3
add
clc
repnz
jae
push
pop
dec
add
add
add
add
xchg
add
add
add
add
add
add
mov
popa
fwait
cld
nop
jmp
mov
out
add
cltd
fwait
inc
add
sbb
inc
add
jnp
fadds
scas
jne
clc
repnz
jae
add
dec
xchg
push
add
sub
clc
repnz
jae
add
push
add
pop
fwait
cld
nop
jmp
xor
add
movl
add
clc
repnz
jae
xchg
dec
add
pop
push
mov
xchg
ret
add
add
mov
add
clc
repnz
jae
add
add
add
clc
repnz
jae
add
cltd
inc
add
pop
add
clc
repnz
jae
cltd
add
and
mov
jne
clc
repnz
jae
dec
xchg
xor
rolb
pop
push
push
mov
xchg
ret
movsb
test
fdivs
aam
mov
jp
jl
add
dec
mov
scas
adc
lds
movsb
jnp
scas
test
nop
jae
add
add
inc
mov
mov
xchg
ret
add
arpl
jnp
add
je
clc
repnz
jae
xchg
out
clc
clc
repnz
jae
pop
lahf
push
and
repnz
jae
add
movl
and
add
repnz
jae
add
dec
add
outsb
and
mov
xchg
ret
scas
inc
xor
outsb
xor
clc
repnz
jae
add
add
mov
push
jae
sub
movl
push
jg
xchg
cmpl
xorl
add
je
clc
repnz
jae
lock
lock
add
fsubr
addb
mov
add
xchg
clc
repnz
jae
add
dec
add
mov
add
icebp
lods
mov
clc
repnz
jae
add
adcl
inc
add
mov
clc
repnz
jae
add
test
sub
push
mov
xchg
ret
add
add
jmp
add
lahf
scas
add
add
add
xor
nop
jmp
lahf
add
xchg
lret
pusha
add
inc
sub
repnz
jae
movsb
add
cmp
push
mov
xchg
ret
push
lock
add
add
or
mov
xchg
ret
add
mov
clc
repnz
jae
pop
test
pop
roll
xchg
ret
push
movsb
inc
add
add
add
add
add
clc
repnz
jae
pop
mov
add
add
mov
push
fwait
cld
nop
jmp
jnp
add
movsb
fdivs
xorl
sub
inc
add
add
sub
adc
add
jae
add
add
repnz
jae
fwait
ret
add
sbb
cld
nop
jmp
fwait
push
scas
add
push
fwait
cld
nop
jmp
fwait
add
dec
xor
arpl
push
push
mov
xchg
ret
adc
add
mov
clc
repnz
jae
pop
add
add
sar
repnz
jae
add
add
add
out
add
loope
add
rcrb
add
add
mov
test
es
std
div
fwait
cld
nop
jmp
arpl
push
add
fdivrl
fwait
cld
nop
jmp
add
ret
jb
pop
push
clc
repnz
jae
inc
add
add
lahf
lock
cmpsl
std
mov
clc
repnz
jae
dec
add
int
pop
jae
repnz
jae
arpl
push
push
fwait
add
clc
repnz
jae
test
das
add
mov
push
mov
xchg
ret
add
adc
add
push
mov
xchg
ret
add
xchg
add
fwait
mov
rclb
rolb
xchg
ret
add
cmpsl
xchg
add
adc
repnz
jae
mov
xchg
dec
insl
add
add
mov
cmp
ret
pop
fwait
dec
add
add
inc
mov
sub
push
mov
xchg
ret
out
fwait
cltd
xchg
add
cmp
inc
xor
clc
repnz
jae
add
ss
push
lret
mov
xchg
ret
add
add
dec
inc
add
add
lea
clc
repnz
jae
push
scas
xchg
add
subb
nop
jae
fwait
mov
orb
insl
add
ret
cld
nop
jmp
test
add
or
nop
jmp
add
add
xchg
vmulss
repnz
jae
add
dec
xchg
add
clc
dec
inc
clc
repnz
jae
add
subb
fwait
cld
nop
jmp
add
xchg
movsb
sub
stos
roll
xchg
ret
add
add
pop
inc
xor
pop
mov
clc
repnz
jae
add
inc
clc
repnz
jae
fcoms
mov
fwait
test
lret
push
mov
xchg
ret
add
inc
gs
add
jmp
adcl
add
add
add
clc
repnz
jae
insl
add
mov
and
add
lahf
mov
clc
repnz
jae
add
push
add
clc
repnz
jae
add
lock
mov
fwait
cld
nop
jmp
addb
add
add
fwait
cld
nop
jmp
add
xchg
mov
inc
repnz
add
xor
add
fwait
cld
nop
jmp
add
pop
push
mov
xchg
ret
adc
add
jmp
adc
add
repnz
add
inc
adc
lds
sbb
add
clc
repnz
jae
add
add
pop
bound
push
jge
jl
and
pop
add
add
fwait
add
add
repnz
jae
add
add
leave
push
clc
repnz
jae
xor
add
add
leave
push
push
mov
xchg
ret
add
add
add
xchg
call
and
xchg
add
add
jecxz
jmp
stc
add
movsb
lds
mov
fwait
cld
nop
jmp
mov
inc
add
mov
clc
repnz
jae
movsb
add
xchg
addb
add
add
popa
add
repnz
jae
addl
add
add
dec
xor
repnz
jae
push
lds
mov
nop
jmp
xchg
add
pop
xchg
push
xorl
inc
and
repnz
jae
adc
add
xchg
movb
repnz
jae
add
xchg
aad
add
inc
push
mov
xchg
ret
add
mov
add
sbbl
inc
add
add
mov
push
clc
repnz
jae
add
add
pop
add
nop
jae
xchg
add
add
mov
and
repnz
jae
mov
add
add
aad
pusha
push
mov
xchg
ret
fadds
repnz
add
clc
repnz
jae
inc
add
add
daa
cmp
repnz
jae
scas
add
add
adc
add
push
clc
repnz
jae
dec
movl
add
add
push
clc
repnz
jae
add
cltd
inc
fwait
dec
clc
repnz
jae
add
lock
add
hlt
add
mov
fwait
cld
nop
jmp
test
clc
repnz
jae
mov
add
mov
mov
xchg
ret
pop
ss
mov
gs
push
clc
repnz
jae
mov
add
fmuls
test
sbb
add
sbb
add
add
stc
mov
in
aad
sahf
add
clc
repnz
jae
inc
add
imul
clc
repnz
jae
add
add
push
mov
jl
jno
add
fwait
cld
nop
jmp
lahf
out
add
mov
add
clc
repnz
jae
add
add
add
mov
xchg
ret
push
dec
dec
xchg
add
add
clc
repnz
jae
add
add
cmp
nop
jae
add
add
mov
xchg
ret
add
add
out
test
fwait
cld
nop
jmp
add
add
adc
rolb
testb
pop
pop
clc
repnz
jae
das
add
add
add
mov
in
and
push
mov
xchg
ret
movsb
lds
lock
pop
mov
clc
repnz
jae
lds
add
add
push
add
addl
add
dec
add
add
movsb
or
clc
repnz
jae
insl
add
add
cltd
add
mov
jmp
jae
push
movl
pop
lea
nop
jae
mov
add
add
add
mov
xchg
ret
add
push
add
das
add
add
or
nop
jae
adcl
addb
call
clc
repnz
jae
test
test
cmpl
fwait
cld
nop
jmp
add
add
xchg
fwait
cld
nop
jmp
pop
add
add
jb
inc
add
stos
rep
clc
repnz
jae
add
lahf
add
aam
mov
sar
nop
jae
push
add
dec
scas
inc
jne
add
popa
clc
repnz
jae
add
cltd
jl
xlat
push
add
clc
repnz
jae
push
push
add
jmp
cltd
stc
jnp
gs
add
dec
push
add
push
add
jmp
add
add
add
mov
test
add
push
mov
xchg
ret
xchg
ret
add
add
shr
clc
repnz
jae
add
add
adc
push
mov
xchg
ret
out
inc
xchg
add
lock
xchg
fwait
cld
nop
jmp
mov
add
add
add
in
adc
xchg
adc
or
add
clc
clc
repnz
jae
add
add
add
push
push
mov
xchg
ret
test
lds
xchg
clc
repnz
jae
add
mov
and
test
cld
nop
jmp
scas
ret
add
add
push
add
ss
bound
mov
push
mov
xchg
ret
cltd
fwait
add
add
add
clc
repnz
jae
add
adc
pop
mov
clc
repnz
jae
add
add
roll
mov
sbb
mov
xchg
ret
mov
bound
stc
lods
and
clc
repnz
jae
xchg
add
pop
mov
clc
repnz
jae
sub
mov
add
cmp
fwait
cld
nop
jmp
stc
add
xor
stos
inc
push
mov
xchg
ret
addl
add
add
in
mov
fwait
cld
nop
jmp
add
add
mov
fwait
cld
nop
jmp
movsb
lds
bound
mov
cld
nop
jmp
ss
add
mov
mov
add
add
add
add
clc
repnz
jae
cltd
repnz
add
add
nop
jae
ret
lret
adc
push
clc
repnz
jae
lret
stc
sub
jae
add
add
mov
push
clc
repnz
jae
dec
add
test
fwait
cld
nop
jmp
mov
pop
pop
out
roll
repnz
clc
repnz
jae
stc
test
clc
repnz
jae
inc
xchg
lock
add
dec
lods
add
clc
repnz
jae
add
push
clc
repnz
jae
add
ret
repnz
sti
and
clc
repnz
jae
add
add
add
sub
scas
enter
jmp
xchg
add
add
out
jne
clc
repnz
jae
bnd
add
push
mov
xchg
ret
add
pop
mov
push
push
mov
xchg
ret
ss
add
add
repnz
jae
xchg
add
clc
repnz
jae
adc
add
movsb
add
add
mov
fwait
cld
nop
jmp
xor
fwait
add
add
dec
fwait
cld
nop
jmp
fwait
movsb
repnz
add
add
adc
cmp
icebp
clc
repnz
jae
cltd
mov
pop
mov
add
repnz
jae
dec
scas
fadds
repnz
jne
or
nop
jae
cltd
add
push
add
es
dec
add
mov
jge
add
popf
add
clc
repnz
jae
xor
mov
repnz
mov
clc
repnz
jae
jnp
lret
scas
pushl
clc
repnz
jae
add
dec
add
lea
fwait
cld
nop
jmp
xchg
jne
add
mov
jae
loope
add
or
clc
repnz
jae
dec
pop
inc
cmp
out
fwait
cld
nop
jmp
lahf
add
adc
add
add
clc
repnz
jae
pop
mov
add
add
adc
pop
cwtl
add
fwait
cld
nop
jmp
movl
add
mov
repnz
jae
mov
jnp
inc
stc
adc
arpl
add
push
mov
xchg
ret
adc
add
sbb
xchg
movb
cmp
ret
push
add
inc
add
cmp
clc
repnz
jae
add
add
mov
xchg
ret
add
scas
push
and
jmp
jmp
add
fwait
add
add
add
repnz
jae
sub
add
push
data16
rclb
sbb
add
vdivps
pop
in
mov
clc
repnz
jae
add
add
add
in
add
fwait
cld
nop
jmp
add
insl
sub
nop
jae
and
inc
xchg
mov
push
mov
xchg
ret
movsb
arpl
add
add
add
pop
xor
push
mov
xchg
ret
out
test
out
add
clc
repnz
jae
add
movsb
fwait
popf
and
fwait
cld
nop
jmp
lret
mov
add
mov
push
mov
xchg
ret
test
push
in
and
push
mov
xchg
ret
add
call
nop
jae
add
add
add
fwait
cld
nop
jmp
add
xchg
fwait
add
xchg
out
mov
clc
repnz
jae
lds
cltd
mov
movzwl
clc
repnz
jae
push
lahf
add
add
mov
clc
repnz
jae
add
jmp
repnz
jae
add
add
add
pop
push
mov
sub
fildll
add
mov
add
dec
xchg
mov
cltd
add
clc
repnz
jae
cltd
test
jae
add
fwait
cld
nop
jmp
xchg
add
stos
push
mov
xchg
ret
ret
ss
inc
cmp
clc
repnz
jae
add
add
cmpl
fwait
cld
nop
jmp
add
jl
cmc
call
add
add
add
add
clc
repnz
jae
add
jne
das
add
add
add
in
fcomps
add
add
and
clc
repnz
jae
add
int3
push
clc
repnz
jae
lock
add
jnp
lock
mov
xchg
ret
add
add
jne
mov
push
mov
xchg
ret
add
xor
mov
shr
add
add
mov
bound
and
push
mov
xchg
ret
add
adc
cmp
jae
pop
mov
addl
jae
scas
add
add
or
nop
jae
sub
lds
dec
push
clc
repnz
jae
adc
add
rep
fwait
cld
nop
jmp
xchg
adc
scas
inc
ss
fdivs
out
fstl
cld
nop
jmp
addl
test
push
repz
cld
nop
jmp
add
add
movsb
dec
add
clc
repnz
jae
push
xor
movzwl
clc
repnz
jae
lret
add
dec
add
clc
repnz
jae
add
add
movsb
add
mov
push
mov
xchg
ret
push
dec
dec
add
add
add
push
fwait
cld
nop
jmp
add
add
pop
push
mov
xchg
ret
add
adc
add
loopne
inc
add
push
mov
xchg
ret
add
add
jne
add
decl
push
mov
xchg
ret
push
subb
mov
xchg
ret
test
add
dec
push
mov
xchg
ret
dec
out
fadds
lret
xor
mov
repnz
jae
pop
jne
cltd
pop
fwait
mov
jmp
xor
add
test
cmc
lcall
std
lcall
add
push
mov
xchg
ret
lock
dec
xchg
add
add
jge
mov
xchg
ret
pop
fwait
insl
add
mov
add
repnz
jae
add
jne
fwait
cld
nop
jmp
add
or
nop
jae
xor
add
hlt
add
data16
mov
clc
repnz
jae
scas
mov
inc
add
clc
repnz
jae
addb
sub
repnz
jae
add
and
cmpw
fwait
cld
nop
jmp
fwait
sub
add
adc
gs
add
push
mov
xchg
ret
mov
add
xor
fwait
cld
nop
jmp
add
out
pop
push
mov
xchg
ret
add
add
add
fwait
cld
nop
jmp
lds
add
lahf
stc
addr16
add
popf
fwait
cld
nop
jmp
add
pop
push
add
lods
add
clc
repnz
jae
push
add
jno
add
add
add
add
repnz
incl
dec
push
clc
repnz
jae
scas
dec
xchg
sub
sti
mov
fwait
cld
nop
jmp
sub
push
xor
nop
jae
add
add
cltd
pop
add
add
mov
clc
repnz
jae
add
adc
repnz
jae
scas
insl
add
addb
push
push
mov
xchg
ret
adc
movsb
adcb
and
clc
repnz
jae
add
add
fwait
cld
nop
jmp
xchg
add
add
cmpsb
or
add
pop
add
dec
add
add
push
clc
repnz
jae
add
add
mov
add
mov
mov
adc
pop
push
clc
repnz
jae
mov
lds
ljmp
loope
add
add
cmc
add
add
add
repnz
jae
add
scas
cwtl
add
clc
repnz
jae
movl
sub
repnz
jae
dec
add
add
inc
add
cltd
mov
clc
repnz
jae
add
ss
enter
sub
mov
inc
add
scas
push
clc
repnz
jae
add
lds
sub
add
mov
push
mov
xchg
ret
pop
add
test
jae
add
fwait
push
add
add
push
add
mov
clc
repnz
jae
add
fmull
repnz
jae
add
add
push
jae
add
repnz
scas
ss
add
add
repnz
jae
xchg
add
fwait
and
fwait
cld
nop
jmp
addb
dec
xchg
add
mov
mov
xchg
ret
arpl
adc
add
repnz
jae
lds
dec
add
jnp
add
mov
add
ret
push
mov
xchg
ret
xchg
add
repnz
scas
subl
clc
repnz
jae
dec
insl
out
add
dec
jne
clc
repnz
jae
lds
stos
mov
clc
repnz
jae
add
test
xorl
clc
repnz
jae
lahf
test
cld
nop
jmp
add
add
add
pop
pop
add
add
repnz
jae
ss
add
push
mov
xchg
ret
addl
jne
scas
add
add
lods
and
imul
nop
jae
ret
add
pop
call
clc
repnz
jae
add
pop
dec
xchg
add
repnz
jae
add
out
nop
add
nop
jae
add
add
daa
mov
xor
add
clc
repnz
jae
add
inc
add
push
mov
xchg
ret
xor
add
out
lds
pop
cmp
orl
incl
add
add
sub
test
add
adc
repnz
jae
bound
fadds
push
dec
mov
clc
repnz
jae
add
add
add
add
cld
nop
jmp
add
add
add
mov
mov
add
pusha
clc
repnz
jae
add
add
fwait
add
jmp
ljmp
xor
add
pop
jne
add
mov
stos
add
add
repnz
jae
mov
scas
cs
clc
repnz
jae
add
sti
jne
clc
repnz
jae
add
repnz
jae
movsb
out
add
mov
cltd
cltd
ret
sub
in
xchg
xor
clc
rolb
sub
push
sub
or
add
mov
add
into
push
mov
xchg
add
push
add
add
lods
mov
cld
test
fwait
cld
nop
jmp
inc
lahf
add
out
xchg
add
xlat
nop
add
lods
clc
repnz
jae
pop
lds
add
gs
add
repnz
jae
arpl
lds
inc
push
adc
clc
repnz
jae
mov
fwait
add
les
repnz
jae
add
add
add
insl
rep
clc
repnz
jae
add
add
mov
clc
repnz
jae
cmp
add
pop
push
push
mov
xchg
ret
add
add
jbe
clc
repnz
jae
add
pop
fwait
add
out
push
push
mov
xchg
ret
dec
add
xchg
movsb
add
add
xchg
fucomip
pop
pop
add
clc
repnz
jae
add
add
repnz
jae
add
mov
test
add
add
fwait
cld
nop
jmp
add
lds
add
adc
mov
nop
jae
add
and
lahf
lock
shll
adc
pop
mov
clc
repnz
jae
arpl
andb
adc
repnz
jae
pop
inc
push
add
movsb
jg
fildl
add
clc
repnz
jae
add
das
add
lea
clc
repnz
jae
and
fadds
jnp
jge
jle
clc
repnz
jae
test
add
loop
jmp
inc
scas
lock
mov
add
call
clc
repnz
jae
add
add
add
nop
jae
sub
inc
add
sbb
clc
repnz
jae
test
add
sbbb
mov
nop
jmp
add
arpl
mov
clc
repnz
jae
movl
cwtl
push
push
mov
xchg
ret
repnz
or
dec
adc
or
inc
add
add
sub
rcrb
out
lcall
push
add
bound
add
mov
clc
repnz
jae
add
repnz
fwait
cld
nop
jmp
dec
add
test
or
clc
repnz
jae
adc
add
test
xchg
inc
add
cld
nop
jmp
arpl
add
adc
jnp
add
add
push
clc
repnz
jae
out
add
add
pop
push
xor
nop
jae
add
ss
jae
and
arpl
decl
push
mov
xchg
ret
push
add
ret
add
add
clc
repnz
jae
add
push
add
movb
add
fwait
cld
nop
jmp
add
jne
clc
repnz
jae
pop
lds
out
add
add
out
push
add
out
movsb
xchg
lahf
xchg
ss
cld
nop
jmp
add
add
and
push
mov
xchg
ret
add
jne
clc
repnz
jae
inc
add
movsb
add
pop
rep
push
mov
xchg
ret
dec
ret
add
clc
repnz
jae
add
add
xchg
fmuls
mov
xchg
ret
add
cmp
jae
add
out
cltd
inc
scas
lahf
sbb
adc
lods
into
inc
add
fwait
out
add
add
rolb
add
add
add
je
clc
repnz
jae
out
mov
lret
add
add
xchg
repnz
movzwl
clc
repnz
jae
add
add
add
mov
xchg
ret
pop
mov
testb
add
pop
push
mov
xchg
ret
repnz
add
dec
add
xchg
pop
nop
push
mov
xchg
ret
out
add
xchg
push
add
jo
jle
clc
repnz
jae
add
add
add
pop
mov
clc
repnz
jae
xchg
sub
add
push
push
jnp
jae
dec
add
add
add
pop
jmp
xchg
pop
add
lahf
cltd
adc
mov
clc
repnz
jae
add
in
push
rcl
loop
pop
add
imulb
imul
clc
repnz
jae
gs
add
scas
xchg
add
add
clc
repnz
jae
add
add
push
add
repnz
jae
movsb
out
push
lret
add
add
rclb
filds
xchg
ret
dec
pop
inc
dec
add
add
nop
jae
add
mov
movsb
add
fiaddl
enter
jmp
add
add
mov
cld
nop
jmp
lds
push
add
je
fwait
cld
nop
jmp
add
pop
clc
repnz
jae
add
add
add
sub
dec
push
mov
xchg
ret
jne
add
pop
add
repnz
jae
add
movsb
xchg
add
scas
dec
mov
push
mov
xchg
ret
add
add
fwait
inc
add
pop
sbb
push
add
add
add
iret
xchg
add
jae
add
clc
repnz
jae
jnp
add
mov
clc
repnz
jae
lock
lahf
add
xchg
enter
push
mov
xchg
ret
insl
add
ss
outsb
lea
clc
repnz
jae
dec
lret
arpl
xor
iret
add
push
mov
xchg
ret
add
add
add
mov
das
cmp
fwait
cld
nop
jmp
add
add
add
add
jbe
aas
lea
clc
repnz
jae
pop
add
mov
mov
sar
nop
jae
xor
push
add
mov
push
mov
xchg
ret
pop
xchg
add
add
mov
xor
clc
repnz
jae
scas
add
push
pop
add
jne
push
mov
xchg
ret
xor
test
push
add
clc
repnz
jae
jnp
jne
xchg
add
xabort
nop
jae
add
test
add
and
js
repnz
jae
add
add
fs
xchg
ret
movsb
add
push
push
add
sahf
push
push
mov
xchg
ret
add
add
adc
pop
push
mov
xchg
ret
add
add
clc
repnz
jae
jnp
dec
add
add
mov
inc
sub
repnz
jae
add
push
add
lahf
out
add
add
add
in
ljmp
add
mov
add
dec
push
jae
add
dec
fwait
out
fwait
xchg
add
push
clc
repnz
jae
bound
add
push
loopne
fwait
cld
nop
jmp
lock
sbb
jae
add
movsb
xchg
add
xchg
ud0
clc
repnz
jae
fadds
fmuls
add
push
repnz
jae
add
push
dec
add
inc
test
fwait
cld
nop
jmp
movsb
scas
out
add
push
add
pusha
clc
repnz
jae
pop
lds
add
repnz
jae
push
stc
lds
repnz
cwtl
mov
fwait
cld
nop
jmp
mov
add
add
pop
lcall
ljmp
add
call
clc
repnz
jae
add
add
inc
jae
je
clc
repnz
jae
movsb
scas
xchg
adc
jmp
clc
repnz
jae
add
movsb
add
xchg
jne
mov
xor
clc
repnz
jae
pop
xchg
xchg
xor
sub
fwait
cld
nop
jmp
fwait
pop
dec
inc
add
mov
add
mov
pop
clc
repnz
jae
lahf
add
pop
xchg
add
add
mov
clc
repnz
jae
mov
add
mov
fwait
cld
nop
jmp
movsb
xchg
pop
xchg
movsb
add
idivl
push
mov
xchg
ret
dec
mov
xor
adc
popf
shl
fwait
cld
nop
jmp
mov
add
movb
pop
fwait
cld
nop
jmp
pop
jne
add
add
add
add
clc
repnz
jae
lock
mov
jae
add
add
mov
clc
repnz
jae
lds
fcoml
repnz
jae
xchg
xchg
add
dec
add
inc
add
clc
repnz
jae
lds
add
movsb
jnp
mov
cli
icebp
incl
add
movsb
lret
dec
add
test
jne
clc
repnz
jae
test
ret
cli
ret
fwait
cld
nop
jmp
movsb
xor
add
dec
pcmpgtb
add
repnz
jae
add
popa
jmp
incl
add
pop
xor
add
lret
sub
movsb
clc
repnz
jae
addb
bound
mov
mov
clc
repnz
jae
fsubs
nop
jae
scas
add
push
add
call
clc
repnz
jae
add
xchg
add
adc
repnz
jae
xor
out
lahf
add
add
sub
repnz
jae
add
ss
add
sbb
jb,pt
fwait
cld
nop
jmp
add
and
fwait
cld
nop
jmp
adc
sub
add
add
cld
nop
jmp
add
gs
add
jne
inc
add
add
addb
test
add
mov
xchg
ret
movsb
add
cld
pop
push
mov
xchg
ret
xor
dec
add
add
insl
call
clc
repnz
jae
lret
movsb
rolb
mov
push
mov
xchg
ret
das
test
add
jge
fwait
cld
nop
jmp
dec
out
pop
add
push
push
mov
xchg
ret
arpl
fwait
sub
add
test
inc
push
mov
xchg
ret
add
mov
clc
repnz
jae
adc
stc
inc
add
add
clc
repnz
jae
add
repnz
push
test
add
add
fwait
cld
nop
jmp
test
insl
and
fwait
cld
nop
jmp
stc
scas
add
arpl
jl
dec
cmp
repnz
jae
add
add
lock
add
clc
repnz
jae
add
add
cwtl
mov
clc
repnz
jae
add
insl
add
push
mov
xchg
ret
add
scas
lds
lds
dec
pop
clc
repnz
jae
stc
cltd
fwait
inc
add
add
repnz
jae
push
push
stc
scas
push
add
pushf
add
clc
repnz
jae
add
testb
jb
mov
repnz
jae
xchg
arpl
and
movsb
add
add
xor
inc
mov
and
repnz
jae
add
cmc
lods
je
clc
repnz
jae
test
cmp
clc
repnz
jae
and
add
push
clc
repnz
jae
ret
push
add
add
repnz
jae
xchg
add
add
add
add
jmp
add
add
movsb
add
mov
cmp
mov
xchg
ret
add
and
add
dec
cmp
repnz
jae
add
add
add
test
clc
repnz
jae
pop
add
data16
xchg
add
sub
clc
repnz
jae
add
add
ret
add
add
or
repnz
jae
add
add
add
clc
repnz
jae
inc
pop
pop
orb
pop
scas
cmpl
fwait
cld
nop
jmp
fwait
add
mov
add
call
clc
repnz
jae
inc
add
add
mov
push
mov
xchg
ret
push
add
push
stc
insl
add
push
mov
xchg
ret
add
arpl
add
fwait
cld
nop
jmp
addb
xchg
add
clc
repnz
jae
arpl
test
clc
repnz
jae
add
xchg
jae
inc
sub
repnz
jae
xchg
add
adc
mov
fwait
cld
nop
jmp
movl
or
nop
jae
cltd
add
dec
add
clc
repnz
jae
xchg
add
sub
andl
mov
xchg
ret
add
add
or
repnz
jae
pop
fwait
add
add
push
mov
daa
add
mov
mov
push
add
add
add
in
mov
sti
out
testb
iret
inc
push
mov
add
xor
add
jle
push
jb
or
cmp
add
cltd
add
mov
xchg
push
std
jbe
inc
sbb
pop
mov
sub
test
dec
aaa
dec
stos
or
incl
or
add
sahf
sub
push
insb
clc
stos
inc
add
dec
call
xor
mov
xchg
add
fcmovnb
mul
add
add
add
inc
mov
mov
xchg
add
and
add
push
add
cmp
ficompl
jle
add
inc
fidivl
and
dec
add
add
ret
outsl
or
or
add
fcomps
push
push
add
add
xor
mov
cli
mov
sub
cltd
xor
daa
or
mov
cmp
jle
add
ret
jnp
rolb
imul
das
dec
xchg
push
mov
sub
ja
add
add
push
add
xor
das
add
test
add
ret
test
lret
add
out
jge
jnp
add
mov
std
lret
stc
push
add
add
add
add
ret
dec
adc
dec
movb
add
xchg
mov
adc
clc
add
std
ret
fldl
mov
cmpsb
add
lods
push
test
out
add
rolb
mov
sahf
inc
add
mov
add
loop
cs
sub
inc
add
leave
adc
sar
add
jecxz
data16
lods
mov
xchg
add
in
shrl
mov
mov
jbe
rolb
inc
mov
add
mov
jecxz
add
pop
std
nop
add
insl
stc
mov
cld
adc
xor
push
add
add
mov
cld
inc
mov
adc
data16
add
daa
rolb
aad
add
mov
scas
out
and
mov
push
mov
add
and
mov
fldl
add
movl
pusha
add
lods
pushf
out
inc
add
lods
or
xchg
add
push
add
test
inc
test
stos
and
mov
pop
repz
enter
sbb
cmp
testb
out
xchg
pop
mov
out
sti
stc
or
adc
jecxz
testb
inc
add
pushf
push
add
ret
jp
push
data16
xor
add
ret
pushf
cmp
mov
add
sbb
xor
add
jns
jle
ja
add
test
adc
sbb
mov
mov
jno
xchg
xchg
movl
add
mov
add
inc
mov
movsb
add
add
mov
add
mov
add
addb
sbb
add
add
lods
aaa
stos
mov
out
rep
inc
add
stc
mov
sbb
and
jl
repz
add
add
jns
add
jmp
add
add
bound
mov
push
add
mov
push
add
test
sub
add
iret
stos
sub
dec
or
xor
shll
inc
add
adc
add
add
jo
xor
jnp
mov
in
jns
add
and
rolb
out
sub
add
mov
mov
add
add
outsb
dec
mov
inc
test
pop
xchg
add
mov
add
lock
cli
dec
and
mov
ficomps
mov
cmpsb
add
leave
loope
xchg
or
jae
cmp
pop
js
add
sub
fistl
add
lahf
pop
mov
add
lcall
add
mov
xchg
jb
pop
mov
or
adc
add
sub
inc
jmp
add
mov
jne
pop
pop
testb
pop
jmp
add
aad
jae
mov
mov
add
mov
mov
bound
mov
sub
jns
imul
stos
fcmovb
add
and
ret
xor
or
add
cli
xchg
mov
movsbl
add
inc
add
imul
and
cwtl
sahf
cmp
add
add
add
inc
add
add
mov
out
add
pop
mov
adc
add
adc
inc
add
add
mov
lds
cmpl
aam
push
add
and
or
imul
ja
add
xor
add
pop
push
repnz
sub
add
pop
adc
add
mov
add
add
mov
adc
xchg
cs
sbb
add
push
pop
dec
mov
cld
stos
insb
mov
mov
mov
jge
add
fisttpll
mov
lods
sub
push
add
mov
ret
imul
movb
add
mov
xchg
add
and
mov
out
lret
add
and
add
stc
rolb
xor
cmp
add
add
add
call
inc
add
insb
scas
inc
sbb
std
or
push
add
inc
add
cltd
roll
add
inc
add
add
std
inc
shll
sub
push
das
loop
outsl
lahf
and
add
add
mov
mov
test
push
dec
test
aas
jnp
add
add
add
mov
and
add
add
add
xrelease
pop
or
loop
pop
pushf
fisubs
xchg
add
call
outsb
inc
mov
add
push
mov
mov
add
add
pop
outsl
fcoms
add
mov
loope
pop
jl
sub
add
adc
jae
add
jg
or
add
rolb
mov
addl
cmp
pop
or
mov
stos
and
sub
add
lods
xor
add
pop
jg
sub
in
add
stos
push
mov
sbb
adc
pop
and
psubsw
add
bsf
mov
jmp
adc
dec
dec
mov
mov
test
in
call
xchg
mov
jnp
add
ljmp
push
andl
mov
jb
push
add
xchg
add
ret
add
lcall
add
add
es
into
outsl
mov
je
or
add
add
add
test
aaa
mov
add
mov
call
add
mov
xlat
cmp
add
dec
adc
jae,pt
cmp
mov
add
add
add
test
rolb
lcall
push
add
dec
testb
add
or
add
adc
jg
add
movsl
pop
mov
pusha
add
das
xlat
cli
and
mov
adc
cmp
repnz
fnsave
push
add
adc
xlat
int
inc
dec
adc
inc
jns
add
out
mov
mov
andl
add
sbb
mov
jno
jmp
pop
push
add
jmp
dec
arpl
push
lahf
stos
mov
push
inc
add
or
add
iret
loope
fwait
mov
add
data16
pop
push
add
loop
sub
ret
and
sub
cmp
inc
add
stos
xchg
inc
std
push
add
roll
add
add
inc
add
add
xchg
add
jb
into
pop
push
inc
add
push
add
mov
add
add
inc
add
add
pop
push
cmpsb
add
sbb
sbb
or
cli
rolb
scas
sbb
pop
pop
clc
xchg
inc
jge
add
add
jbe
pop
mov
pusha
add
insb
fiadds
add
or
push
or
lds
or
add
pop
xchg
int3
inc
decb
repz
xchg
cmp
loop
loope
add
aas
in
adc
lcall
dec
bound
mov
add
mov
mov
add
add
add
movhps
imul
enter
stos
fdivrs
add
ret
xchg
js
mov
loope
pop
jne
jge
mov
js
inc
add
adc
jne
lret
mov
adc
rolb
insl
sbb
add
lds
daa
cmp
arpl
add
scas
fstpl
add
addb
dec
ds
aas
add
lods
stc
adc
pop
bound
mov
add
mov
scas
sbb
mov
iret
fnop
add
dec
loop
mov
add
sbb
out
mov
add
add
add
push
dec
cld
pop
jmp
dec
and
mov
add
std
pop
fwait
push
mov
cld
sbb
add
sub
add
movsl
or
in
testb
stos
adc
add
add
add
mov
dec
call
in
and
iret
and
cmpsl
pop
lea
dec
push
adc
add
sahf
adc
add
add
mov
and
push
mov
xor
hlt
add
add
fldl
add
adc
cmp
aam
fwait
sub
enter
push
jno
mov
loopne
mov
cmpsl
in
add
sub
add
dec
call
dec
sbb
add
add
add
pop
sub
andl
out
into
loope
add
aad
add
cmpsl
jle
jo
mov
lret
push
add
push
ljmp
push
add
sub
jmp
add
cmpsb
add
add
add
add
mov
add
xchg
mov
xor
sub
inc
add
add
sub
test
test
fwait
and
mov
xchg
add
out
mov
sub
jno
add
ret
cmpsl
popa
inc
add
cmc
repz
mov
add
add
add
loopne
adc
push
add
add
pop
push
add
add
lahf
or
inc
mov
jbe
pop
cld
mov
adc
mov
fstpt
and
xor
add
add
insb
cltd
xchg
mov
dec
and
push
pop
jae
mov
int
cmp
mov
int
sub
add
mov
mov
add
outsb
gs
add
lret
cs
in
movsl
dec
or
pop
fnstsw
lods
movb
sbb
arpl
adc
sub
mov
add
movsl
mov
aad
int3
jecxz
push
mov
cmp
xchg
dec
cltd
test
test
xor
xchg
add
cli
add
mov
inc
add
add
pop
nop
add
sar
sbb
mov
mov
mov
mov
add
add
rolb
sbb
xor
les
iret
psubb
sub
xchg
rolb
add
sub
out
ljmp
adc
sbb
lods
mov
bound
mov
pop
iret
dec
add
fnstenv
add
outsb
mov
add
jmp
lahf
test
add
sahf
jmp
sub
ret
fwait
std
daa
mov
cmp
jae
or
fsubl
adc
add
push
ficomps
add
mov
and
flds
add
add
stos
jb
mov
mov
add
mov
mov
add
pop
dec
jmp
add
xorl
mov
add
add
add
push
mov
jp
add
fisttps
mov
add
inc
rcll
stc
repnz
add
and
int3
xchg
add
ja
or
mov
imul
add
fnstcw
and
mov
pop
sub
es
add
decl
and
mov
enter
pop
xor
jb
push
insl
pop
out
dec
jge
add
mov
les
xchg
add
shl
add
sbb
and
jb
icebp
dec
and
push
add
add
add
add
push
add
push
add
lods
push
pushf
jl
fisubrl
gs
inc
add
xchg
add
in
arpl
outsl
jmp
add
cmp
mov
add
out
add
add
sub
jbe
xchg
jmp
sti
pop
sbb
add
insb
mov
sbb
addr16
jmp
pop
iret
int
mov
mov
add
add
cmp
add
dec
mov
xchg
dec
test
mov
mov
mov
lods
dec
in
add
mov
or
aas
inc
add
add
jb
xchg
add
std
subl
add
pusha
add
movsl
mov
add
push
add
mov
push
add
push
xchg
mov
mov
cld
cs
add
add
addl
ljmp
fcomps
add
add
mov
add
loope
dec
sbb
daa
push
add
out
add
xor
xor
clc
sbb
sbb
popa
xchg
enter
xchg
add
jne
pop
repz
xchg
push
sub
or
add
int3
fimuls
pusha
add
push
add
ja
pop
adc
push
jb
mov
outsl
sbb
das
jnp
lea
int
add
cmp
out
mov
sbb
mov
stos
mov
in
cld
sub
add
insb
sub
add
std
jge
cld
int3
je
aam
push
push
fdiv
add
add
adc
pop
xchg
inc
add
shrl
stos
jle
fsubrl
and
mov
pop
mov
dec
jns
mov
call
dec
addb
inc
rcrl
mov
add
int3
dec
movsl
pushf
mov
cmpsb
add
insl
add
in
and
mov
sub
xor
inc
add
movb
add
jecxz
add
pop
mov
outsl
or
jno
mov
push
pop
add
mov
sbb
add
mov
call
add
add
stos
mov
dec
dec
sub
add
mov
mov
add
add
iret
arpl
fsubs
add
sbb
lods
and
pop
push
pop
daa
mov
add
pop
add
mov
xchg
or
xchg
std
add
jg
add
push
rolb
xchg
lret
pop
cltd
cmp
addb
call
jae
xchg
add
add
sbb
repz
push
add
repz
fwait
cwtl
scas
sub
jae
je
dec
cs
rolb
jns
inc
add
add
sbb
js
xor
subl
push
jl
add
cwtl
mov
faddl
push
add
pushf
inc
push
mov
push
push
add
mov
jl
add
ja
add
adc
and
push
sub
push
scas
mov
add
push
add
lcall
mov
and
mov
add
add
xor
ret
enter
lcall
mov
sub
lcall
add
mov
add
test
or
add
mov
add
ret
jmp
sbb
iret
xchg
add
xchg
and
pusha
add
test
call
add
add
inc
incb
ja
push
mov
pop
add
mov
add
mov
add
cs
add
aam
jnp
push
inc
sbb
test
push
add
jl
xchg
shrl
jg
push
inc
add
add
dec
in
out
addl
push
add
dec
cmpsl
dec
not
in
jnp
add
popa
fistl
add
jp
pcmpeqw
add
dec
nop
add
add
push
pop
adc
mov
xlat
test
add
mov
add
mov
les
lcall
add
pusha
add
and
mov
repnz
ja
push
add
add
add
mov
add
ret
out
dec
xchg
add
cmp
data16
into
out
aad
rorl
mov
idivl
adc
pop
push
add
add
push
aam
and
stos
xchg
das
xchg
data16
add
addb
add
sbb
lock
push
add
push
sub
add
jecxz
add
dec
and
xor
mov
mov
rcll
pop
dec
inc
stos
movsb
add
rolb
dec
clc
cmp
scas
push
add
add
pop
push
loopne
movb
xchg
add
insb
add
add
ret
jl
add
fldenv
add
daa
add
add
xor
jmp
mov
xor
xchg
add
test
mov
movsb
add
add
cmpsl
sbb
mov
mov
pushf
sbb
mov
aad
xchg
sub
dec
xchg
mov
add
add
mov
add
inc
add
outsb
push
add
push
dec
fimull
or
jle
add
and
sub
add
adc
jbe
leave
test
test
jno
add
loopne
push
add
out
bound
mov
clc
stc
xchg
adc
rcrl
add
add
mov
xchg
add
ja
xchg
xchg
mov
add
sarl
sbb
stos
out
or
lods
rolb
inc
mov
sbb
rolb
imul
sbb
dec
dec
dec
or
in
mov
inc
and
mov
xor
or
lea
lret
pop
std
ljmp
push
inc
pop
daa
xor
pop
inc
add
dec
jp
repnz
push
add
xlat
loopne
fldt
popf
dec
mov
dec
push
popf
mov
and
cs
add
add
enter
ret
movb
add
add
sub
pop
xor
fdiv
add
push
mov
inc
and
mov
and
mov
dec
jb
push
add
inc
sub
xlat
pusha
add
jge
data16
addr16
rolb
lcall
pusha
add
add
clc
stc
rorl
inc
jbe
std
mov
add
mov
arpl
jge
xor
add
nop
add
mov
dec
mov
mov
movsl
fimuls
add
add
test
popf
mov
mov
cmp
leave
xchg
add
int
add
arpl
mov
add
clc
je
mov
stc
jmp
out
mov
sbb
mov
loop
mov
jnp
aad
add
add
loop
cmpsl
jg
dec
pop
dec
push
or
add
loopne
mov
cltd
mov
addr16
add
lahf
test
rolb
cmp
call
push
out
addb
int
imul
dec
pop
or
movb
add
mov
loopne
pop
jo
scas
js
rolb
fisttpll
mov
add
mov
add
pushf
cltd
and
je
lahf
cmp
mov
jo
cmp
add
push
and
rolb
add
push
xchg
add
pop
cmp
stos
push
add
fwait
loop
daa
fisubrl
mov
je
xchg
add
mov
add
dec
pop
and
add
jne
add
pop
mov
out
rol
jl
bswap
addb
add
lock
ret
add
add
jl
add
push
fnsave
add
shll
mov
add
push
movsb
add
or
add
mov
mov
jge
or
sbb
inc
add
xchg
inc
add
ja
jecxz,pt
xor
imul
push
push
add
rolb
aad
add
in
in
add
add
dec
xor
xor
xchg
dec
or
addl
fldl
lods
xchg
aam
notl
add
xchg
sbb
loope
dec
or
add
sub
dec
or
add
mov
cltd
loopne
imul
push
inc
add
cli
inc
adc
addr16
cmp
cltd
pop
notl
add
mov
add
add
mov
push
add
jmp
add
cs
into
mov
iret
sbb
lds
rolb
jg
pop
mov
testb
add
dec
ds
inc
add
push
add
add
inc
add
inc
add
add
mov
pop
and
mov
daa
jb
and
mov
dec
not
or
aad
lret
add
mov
mov
ljmp
sti
out
fstps
mov
add
cmpsl
inc
mov
fidivrl
push
add
sarl
movb
outsl
dec
xlat
pop
test
bound
mov
add
dec
mov
pop
fiaddl
xor
and
add
jb
insl
fistpl
sbb
ret
mov
icebp
je
inc
add
add
add
std
mov
sub
sti
rcll
jbe
repnz
loop
ljmp
pop
rolb
testb
sbb
bound
mov
add
rolb
add
add
rolb
outsb
add
fdivrs
add
lcall
lahf
jo
mov
inc
mov
pusha
add
sbb
shl
add
loope
add
add
mov
push
pop
jge
add
out
push
movsb
add
sbb
add
sti
jbe
mov
adc
cmpsl
sub
inc
inc
add
sbb
and
mov
add
jge
add
aad
out
dec
inc
mov
add
add
push
add
add
inc
outsb
push
mov
jno
add
mov
xchg
mov
pop
pop
fistl
jne
mov
fisubs
add
add
testb
add
add
add
or
out
mov
int
add
filds
mov
sbbl
mov
movsl
jge
fldenv
and
add
add
daa
vpaddb
xchg
add
pop
jecxz
and
mov
adc
add
jno
addb
test
xchg
add
add
stc
pusha
add
ja
mov
pop
pop
fistl
add
jge
addb
mov
xchg
sti
test
add
inc
add
pushl
dec
jae
test
add
pop
push
mov
mov
add
sti
jne
movsb
add
xchg
add
andl
mov
dec
dec
lock
fs
lahf
jmp
inc
jl
lahf
push
jge
add
sbb
insl
xor
sub
add
ss
and
mov
add
add
add
ja
inc
dec
sub
ret
adc
movsl
cmpsb
add
add
add
add
mov
addb
dec
push
add
add
pop
sbb
loop
and
shll
sub
add
les
rolb
add
xchg
leave
jg
add
adc
jnp
add
add
add
cli
test
inc
add
dec
ret
repnz
dec
outsl
add
mov
add
add
movsl
adc
or
jne
lcall
fwait
dec
xor
mov
in
mov
lahf
stc
and
clc
mov
jne
add
add
gs
cmp
clc
hlt
add
sbb
pushf
mov
adc
push
movsb
add
les
jecxz
add
cmp
iret
test
pop
inc
test
addr16
imul
xor
scas
popa
mov
loope
push
dec
movb
bound
mov
imul
fwait
call
add
xchg
jbe
std
fisttps
adc
add
add
jae
add
add
mov
mov
mov
xchg
add
add
test
arpl
ret
and
add
and
add
cmc
cmp
add
lcall
add
jne
add
add
mov
add
add
stos
sbb
pop
ficoml
arpl
add
mov
and
mov
test
mov
and
sbb
add
push
add
cli
icebp
aam
pop
jo
dec
jle
add
out
xor
int3
sub
dec
and
mov
add
data16
ret
in
adc
add
add
add
xchg
add
add
adc
fcoml
add
jno
fdivrp
in
test
fisubrl
mov
sahf
xor
fcoms
mov
mov
add
add
pop
jge
and
mov
inc
mov
add
add
lods
add
or
imul
jae
leave
dec
xor
lahf
int
data16
sub
pushf
push
and
add
add
leave
in
add
rolb
insl
bound
mov
add
pop
and
int
or
mov
imul
lea
xchg
add
sbb
pop
sti
scas
in
cmpsl
cmp
inc
add
add
sbb
add
add
xor
push
lret
or
add
add
add
add
xor
rolb
cld
cmc
ret
cs
inc
fucomp
pop
xor
in
negl
add
inc
mov
add
jle
add
add
loope
aaa
sbb
xor
add
mov
lea
mov
add
add
add
mov
mov
addl
add
jge
dec
mov
in
mov
mov
shll
push
dec
push
mov
lea
loope
fnstsw
scas
icebp
rolb
jp
add
and
mov
push
inc
add
cmpsl
data16
test
or
outsl
cli
pop
cmp
hlt
add
mov
add
and
mov
rolb
cmpsb
add
je
and
mov
jae
add
pop
int
and
add
jle
cmpsl
and
mov
out
movsl
add
mov
lcall
outsb
jno
pushf
icebp
jb
dec
in
pop
inc
add
add
sub
ror
dec
cmp
pusha
add
icebp
enter
pop
adc
popf
cld
lods
push
sub
inc
add
stos
jl
mov
add
adc
inc
add
jne
add
cmp
mov
lods
cmp
add
adc
les
montmul
cmpsb
add
ret
movb
mov
shrl
or
cmpsb
add
mov
sarl
stos
mov
popf
mov
add
bound
mov
les
clc
movb
push
xchg
add
add
xor
cmp
add
out
ds
pop
add
cmp
add
aas
push
mov
scas
hlt
add
add
fmull
loop
loope
cmp
xchg
add
sbbl
scas
cmp
inc
add
mov
xor
jmp
or
push
add
add
fcoml
dec
jne
and
add
jg
jns
inc
add
add
add
testb
stc
lods
lcall
add
repnz
idivl
pop
movb
sub
test
insl
nop
add
mov
add
cmpsl
sub
fldt
mov
add
add
add
xchg
mov
xchg
add
xor
jbe
add
stos
sahf
fiadds
lret
xchg
sahf
xor
les
outsb
jo
pop
pushf
add
mov
inc
add
add
add
sete
cmp
testb
repz
pushf
jl
fdivrs
jp
add
xchg
add
xor
fstpt
pop
sub
sub
add
call
dec
jno
or
push
add
lds
add
je
ljmp
loop
int
add
int
ds
push
add
add
rolb
jns
mov
mov
rolb
add
dec
jle
out
in
repnz
add
add
xor
or
add
shll
loope
cmp
pop
push
add
test
mov
sub
push
add
and
imul
inc
in
sub
add
stc
adc
mov
fadd
add
push
scas
cmc
mov
mov
mov
fcmovbe
fstl
and
pushf
cwtl
outsb
in
fildl
add
popa
sbb
and
jle
bound
mov
add
fmull
pop
ja
mov
sub
add
inc
xchg
mov
add
sub
test
in
int
cld
xchg
cmpsb
add
out
outsl
mov
add
add
mov
add
sub
cmp
insb
mov
lret
xor
in
add
shll
add
cmpsb
add
test
add
shll
add
pushf
inc
add
xchg
add
add
nop
add
faddl
fldl
add
mov
test
cmp
cmp
inc
test
jp
pop
and
sub
imul
divl
in
mov
jns
test
out
ret
jno
sti
mov
fldt
dec
add
push
pop
add
add
in
leave
cmp
neg
movsb
add
adc
loopne
dec
or
sub
mov
push
add
add
mov
addb
andl
out
add
cwtl
xor
cmp
mov
cwtl
inc
adc
data16
add
mov
push
add
push
icebp
and
mov
add
adc
je
mov
pop
sub
add
testb
and
mov
sbb
mov
mov
imul
iret
push
add
stc
adc
andl
add
add
add
jg
add
mov
lock
add
mov
in
stos
lock
mov
and
mov
jne
sbb
add
lret
push
jge
insl
push
add
sti
imul
inc
das
push
repz
sbb
in
sub
add
stos
fwait
push
outsb
add
xchg
test
and
mov
mov
add
mov
mov
orl
cmpsb
add
add
add
fbld
mov
rolb
enter
add
shll
aaa
jae
add
mov
loopne
popl
add
mov
and
mov
or
bound
mov
test
mov
or
and
mov
add
xor
jl
dec
test
fildll
pop
add
mov
mov
adc
push
mov
xor
orl
inc
das
lret
mov
dec
or
movb
aam
into
pop
mov
js
add
or
xor
test
out
inc
add
mov
push
push
adc
insb
and
mov
fildll
mov
xor
std
in
or
add
add
xor
add
push
add
xchg
add
bound
mov
jecxz
rolb
mov
and
int
add
js
loope
addb
add
shll
add
mov
add
adc
push
add
icebp
mov
add
out
in
jae
push
add
xchg
add
add
add
dec
mov
add
xchg
mov
xchg
add
mov
or
lret
lret
bound
mov
add
add
xor
mov
mov
out
addr16
mov
add
and
fwait
data16
cwtl
mov
add
add
rolb
scas
fmuls
fsts
outsl
out
mov
add
add
add
lods
mov
test
adc
leave
adc
test
stos
push
add
add
enter
addb
add
and
and
add
mov
xchg
sub
addr16
aas
or
sbb
add
sahf
pop
les
xor
outsl
out
aas
cmp
add
inc
add
fmul
xchg
add
add
addl
fwait
lods
xchg
lahf
cmpsl
adc
adc
cmp
and
adcl
je
mov
add
sub
add
aad
jns
add
pop
push
add
add
push
or
and
pop
push
leave
daa
ds
mov
adc
inc
dec
in
scas
dec
push
lods
mov
add
add
jmp
jae
add
rolb
add
xchg
add
jp
cmp
and
movsb
add
dec
loopne
lods
into
clc
xchg
mov
repnz
mov
adc
es
sarl
addr16
cs
inc
add
test
add
add
add
in
and
mov
jae
pop
xor
add
mov
mov
ja
and
add
xchg
add
add
addb
pop
push
add
cmp
adc
mov
xlat
jle
daa
addr16
mov
outsl
adc
and
movsl
data16
add
mov
daa
imul
das
arpl
xchg
sahf
cmp
pusha
add
ja
add
daa
test
mov
add
xchg
aaa
fidivs
cmp
ds
add
pop
inc
lds
push
push
aad
add
or
pushf
fadds
ljmp
movb
add
test
jb
xor
mov
mov
add
mov
add
add
stos
jle
add
add
add
mov
xchg
fsubl
add
aad
pop
hlt
add
jnp
addr16
add
scas
pushf
add
jnp
add
inc
pop
cmp
jnp
add
add
xor
inc
or
in
loopne
dec
insb
data16
ret
sti
outsl
sbb
add
add
xor
and
mov
add
jae
add
jno
pop
cmpsl
stos
outsb
faddl
sub
stos
xor
add
add
popa
or
cld
in
or
push
add
pop
mov
aad
add
test
cmp
lahf
mov
mov
xchg
xchg
rolb
arpl
add
add
insl
mov
clc
add
xor
add
cmc
fimuls
add
inc
xchg
mov
test
imul
add
and
mov
add
or
xor
add
jmp
cltd
frstor
pop
gs
add
adc
sahf
mov
push
adc
add
fists
movb
adc
les
dec
add
mov
nop
add
in
pop
jne
rolb
adc
movsb
add
push
add
cmove
push
add
xchg
popa
andl
add
add
add
add
loope
add
add
mov
and
mov
mov
outsb
outsl
divl
inc
add
push
add
add
cmp
pop
or
add
out
in
addr16
clc
fdivr
mov
mov
into
stc
scas
pop
adc
xor
sbb
add
add
mov
mov
insb
push
xchg
push
add
add
cmp
add
je
lods
xor
add
fdivp
add
xchg
add
add
xor
push
add
loope
iret
movsb
add
stc
movsl
loope
add
xor
pop
inc
mov
sbbl
cmc
adc
jae
out
xchg
inc
add
add
add
bound
mov
jno
or
add
rcrl
je
cmp
in
scas
bound
mov
cmc
mov
xor
and
mov
clc
cmpsl
movsb
add
daa
stos
sub
add
shll
insb
enter
sub
inc
add
mov
add
sbb
push
std
inc
add
stos
stc
data16
push
sbb
movb
adc
sub
add
in
outsl
cld
pop
aad
int3
das
mov
ja
pop
ja
add
mov
add
les
pop
mov
add
push
add
mov
mov
add
jecxz
scas
lods
xchg
or
dec
mov
into
out
sub
xlat
mov
lahf
pop
filds
jmp
lret
jb
pop
jo
test
popf
outsb
std
pop
add
pop
and
cld
push
mov
jmp
or
pop
stos
jl
push
add
add
sub
inc
hlt
add
gs
cmpsb
add
fidivrs
fildl
mov
cmp
xor
cmp
cltd
and
fsubl
mov
fwait
movsl
push
mov
and
sti
fisttpl
rolb
sub
fcomi
insb
icebp
jnp
addb
dec
mov
out
pop
xchg
pop
pop
cmp
js
sbb
mov
mov
jb
sub
lret
rolb
fldt
add
mov
add
mov
test
faddl
aas
popa
adc
hlt
add
mov
add
je
test
xchg
add
mov
add
add
setg
add
mov
mov
or
in
dec
mov
enter
add
mov
mov
in
rolb
addr16
push
jo
hlt
add
inc
add
sub
lahf
sbb
add
add
mov
and
cmpl
add
mov
add
and
adc
enter
popa
pushf
in
outsl
ljmp
add
in
test
mov
cltd
test
add
pop
push
add
xor
add
mov
xor
jl
add
cmp
add
into
mov
add
push
add
xor
lock
add
cld
les
and
mov
lret
push
int3
fisubrs
jl
add
leave
jge
add
add
pop
sub
mov
cld
and
mov
jo
dec
rolb
pop
cwtl
pop
insl
dec
sbb
lods
dec
outsl
enter
jmp
add
push
test
and
mov
dec
aam
inc
add
add
mov
add
cmp
sahf
lock
inc
add
and
pop
add
cmc
sbb
push
and
add
jns
aam
and
stos
popf
push
std
jle
mov
mov
add
pop
cltd
xlat
cmp
add
mov
add
fiaddl
add
add
add
adc
addl
data16
add
sub
addb
xor
mov
add
mov
cmpsl
sub
lcall
mov
div
add
add
pop
repnz
and
mov
add
cmp
std
cmc
ds
add
add
out
mov
fisttpll
xor
lods
add
mov
xor
jl
mov
xchg
icebp
jl
and
icebp
lods
inc
add
add
push
add
leave
pop
shll
add
cmp
add
mov
add
mov
ds
std
inc
add
addb
dec
nopl
add
sbb
add
mov
data16
sbb
inc
cmc
inc
cmp
sarl
popa
ljmp
int3
add
mov
and
add
dec
sub
pop
lahf
arpl
lret
lahf
sub
add
int
shl
add
add
xchg
add
jae
daa
dec
inc
push
add
xor
mov
pop
js
add
gs
stos
jns
xor
jae
xchg
out
or
cmpsl
lahf
insl
xchg
add
add
sub
fisubrl
xor
das
insb
dec
loopne
aad
mov
mov
cs
int
fwait
sub
cmpl
mov
add
outsl
sbb
icebp
xor
imul
push
sub
mov
outsb
xlat
adc
int
call
popf
test
cmc
or
loopne
mov
add
mov
pop
jmp
pop
pop
hlt
add
add
adc
and
mov
mov
or
inc
add
pushf
int
and
mov
add
add
mov
add
mov
or
add
cli
shll
mov
cmp
test
dec
fmuls
gs
dec
pop
into
dec
test
push
test
stos
mov
add
push
sbb
movsb
add
inc
push
dec
je
cs
int3
mov
ret
mov
xchg
test
dec
cli
jp
add
pushf
xchg
cwtl
cmp
add
gs
inc
mov
pop
and
stc
add
mov
add
add
mov
pop
cmc
mov
cld
lret
fistpll
mov
add
pop
arpl
jo
ljmp
mov
or
add
xor
sbb
adc
js
xor
mov
or
cs
sub
and
mov
ficompl
jb
fwait
cmp
add
bound
mov
add
add
mov
mov
f2xm1
add
lcall
add
mov
sarl
rolb
repz
xor
fimull
jecxz
add
popf
sbb
in
jle
sbb
sub
or
sub
sub
out
ljmp
test
add
add
sub
jo
xchg
add
lods
in
jle
mov
cmc
or
and
mov
xchg
inc
add
adc
push
inc
add
aad
repnz
and
cld
lock
data16
rolb
or
mov
into
mov
lods
aam
movsb
add
add
or
mov
add
add
scas
movsb
add
call
es
add
fsubrl
pop
outsb
dec
adc
add
jle
add
jl
xchg
add
dec
add
add
insl
lret
adc
cmp
mov
lret
push
add
mov
add
test
or
rorl
in
jns
adc
adc
repz
add
lret
mov
iret
cltd
and
lea
lods
lahf
sbb
pop
rcl
mov
mov
add
mov
add
add
jae
rolb
dec
movsb
add
cmp
mov
add
ds
scas
lret
jp
add
repz
ds
jmp
incl
jg
inc
push
add
data16
ss
add
add
add
nop
add
mov
das
je
sub
mov
stos
xchg
add
test
fstpt
xchg
add
add
add
add
mov
mov
pop
in
cmp
ljmp
in
or
add
add
scas
aam
or
mov
sahf
xchg
dec
ds
add
aas
add
mov
insb
lods
dec
lret
add
pop
add
inc
xchg
add
cmpsb
add
add
mov
test
inc
stc
mov
push
push
jae
fidivs
pop
push
dec
jp
in
sbb
scas
std
adc
cmp
push
add
cmc
outsl
notl
jmp
mov
mov
add
lret
mov
hlt
add
pop
push
fidivs
repz
mov
call
add
add
xchg
mov
add
add
jnp
outsb
leave
sub
cld
or
add
cmp
mov
add
push
add
mov
loope
bound
mov
jge
lret
mov
cmpsb
add
add
add
mov
mov
add
mov
push
add
adc
fwait
jbe
into
test
jo
ret
adc
lds
insb
cmp
push
add
mov
xchg
add
add
inc
add
fists
sti
xor
in
test
cld
adc
add
pop
arpl
add
add
add
dec
fnstenv
stc
hlt
add
shll
cmp
add
add
mov
xor
and
mov
or
jno
rorl
neg
je
sub
add
insl
sbb
lcall
pusha
add
xchg
mov
add
push
iret
out
lods
pusha
add
add
push
add
pop
ds
cmp
repz
and
mov
or
sbb
adc
mov
bound
mov
add
jmp
add
bound
mov
xor
shll
add
jmp
cmpsb
add
add
or
fucomp
in
jae
add
cld
pop
mov
sub
pusha
add
mov
and
mov
push
jno
test
add
add
sub
andl
scas
int
scas
jns
dec
gs
outsl
add
mov
add
mov
add
add
mov
add
add
or
add
sbb
popa
push
cld
push
fnstcw
add
jmp
leave
pusha
add
and
mov
nop
add
add
das
imul
std
cs
movsb
add
stc
aas
inc
add
mov
add
inc
add
add
mov
mov
jb
out
mov
imul
mov
insb
wrmsr
add
add
add
lds
testb
pop
faddl
mov
insl
mov
jb
test
mov
sbb
mov
inc
add
jge
jb
int3
inc
add
std
pop
mov
negl
add
add
inc
add
test
add
aad
adc
add
mov
sub
or
int
xor
jne
add
add
mov
add
add
add
mov
cs
out
mov
incl
cs
mov
cmpsb
add
push
add
icebp
xlat
and
mov
adc
rolb
rcll
dec
addr16
pop
pop
jmp
sbb
add
pushf
aad
adc
fldl
scas
and
xor
xor
pushf
add
cs
cltd
dec
aam
jno
dec
loop
ret
sub
mov
fwait
xchg
add
sbb
test
icebp
inc
add
add
mov
add
mov
pop
cmpsb
add
ja
fwait
out
out
scas
cmp
mov
stos
add
ljmp
or
cmp
leave
add
or
and
sbb
cltd
xor
test
ret
jl
mov
add
add
mov
add
add
adc
dec
xlat
add
pop
lahf
adc
cmpsb
add
test
cmpsb
add
add
dec
out
push
add
add
add
dec
push
add
test
aas
inc
add
add
add
adc
js
clc
mov
sub
or
decl
fisubs
add
ja
xchg
add
add
add
mov
add
leave
out
ds
insl
add
add
add
rolb
jecxz
test
andl
lea
jmp
add
push
xor
test
xchg
test
nop
add
add
movl
add
add
add
movb
add
mov
repz
push
cmc
inc
add
add
mov
xor
add
jmp
mov
outsl
pop
mov
mov
cli
add
mov
sbb
mov
dec
xchg
add
scas
pop
scas
loopne
lret
lcall
mov
xor
mov
push
add
add
sbb
mov
add
cmp
sbbl
les
fcoml
outsb
insb
mov
rolb
cld
movsl
cld
jmp
pushf
add
jp
add
scas
aas
data16
xor
xchg
inc
push
add
cmp
push
add
add
mov
inc
add
add
add
add
add
mov
cmp
mov
add
mov
xchg
in
add
mov
dec
dec
loope
stos
sub
loopne
aad
add
popf
or
add
rcll
add
inc
add
adc
add
in
gs
xchg
insl
xor
insl
test
jbe
xorl
rcrl
arpl
mov
push
mov
xor
stos
push
stos
jp
add
sbbl
addb
cs
push
add
mov
sbb
cmp
addr16
add
sti
mov
cmp
add
cld
pop
jge
add
data16
stos
leave
stc
pop
fisttpl
mov
ficoms
add
add
add
mov
mov
add
aam
jl
add
leave
lret
adc
add
sub
arpl
adc
mov
cs
jg
add
or
add
adc
cmc
dec
sub
icebp
push
out
in
gs
sbb
inc
add
lods
cmp
in
cmpsl
fbstp
add
ds
insl
in
data16
mov
iret
orl
scas
jne
lods
cmp
sbb
add
cmpsl
in
in
or
ljmp
add
mov
pop
das
push
add
mov
add
cmp
jp
dec
fndisi(8087
mov
popa
call
xrelease
add
add
maskmovq
imull
pop
ja
sti
lods
rolb
add
mov
not
add
sti
pop
mov
fcoml
adc
std
cmpsl
outsl
popa
add
daa
popa
add
jle
jp
daa
fmull
rorl
add
push
add
add
lret
add
inc
push
add
push
add
add
xor
jbe
push
sub
imul
iret
dec
pop
out
repnz
add
add
sbb
rolb
jae
test
xor
xchg
sbb
bswap
loop
inc
sbb
add
add
add
mov
add
add
add
push
add
and
mov
lods
lahf
fnstsw
test
mov
mov
cmpsl
push
cmp
add
or
inc
add
and
adc
rolb
push
add
add
add
add
sbb
imul
add
add
adc
out
int3
rcrl
aad
mov
outsb
add
add
or
cmp
pop
xor
popf
cmp
jns
add
add
cmp
add
add
jle
jo
sbb
add
rolb
bound
mov
test
push
dec
gs
or
imul
inc
add
add
pop
adc
out
xor
mov
lret
jl
add
mov
mov
pop
pop
pop
push
pop
mov
add
jnp
loop
and
xchg
add
mov
scas
das
lds
mov
loope
push
pop
lret
fdiv
add
xlat
shl
add
add
add
test
add
gs
inc
negl
nop
add
jmp
cmp
add
mov
cmpsl
mov
xchg
add
mov
or
jmp
pop
test
mov
push
ficoms
add
lret
mov
in
mov
mov
fadds
mov
add
mov
xchg
add
adc
xchg
addl
pop
clc
repnz
sub
stos
call
xor
addr16
add
aas
jle
jbe
mov
dec
insl
mov
add
xchg
and
into
call
adc
fs
mov
add
xchg
rolb
sarl
add
stos
xchg
fisubrs
add
or
push
add
fwait
outsl
cmp
add
add
mov
out
arpl
adc
mov
outsl
lcall
stos
into
fwait
sbb
or
inc
add
sbb
and
fwait
push
rcr
xchg
add
adc
add
add
cmp
add
mov
sub
daa
xor
ljmp
add
loopne
aam
repnz
or
aad
mov
add
cmpsl
ret
cmp
add
xchg
add
add
pop
xor
mov
ljmp
add
rolb
inc
sbb
imul
les
push
cwtl
pusha
add
loop
lret
call
int3
aaa
push
stc
mov
ret
mov
add
imul
jecxz
add
shll
push
lods
sbb
je
mov
jnp
pop
mov
cmp
add
cltd
insb
ds
add
mov
pop
aas
lock
dec
xor
or
mov
mov
mov
hlt
add
add
lods
mov
add
rolb
add
add
add
enter
add
mov
add
lods
add
mov
add
cmpsb
add
addr16
ret
call
add
pop
adc
movups
inc
add
mov
test
rcrl
add
add
pop
pop
inc
xchg
dec
sbb
lcall
cmp
add
rolb
xchg
in
das
shl
cmc
add
cld
les
pop
in
test
cmp
mov
imul
add
add
sub
and
push
add
push
add
add
add
lods
xlat
and
call
cmpsl
es
das
data16
add
push
maxps
stos
dec
popa
inc
je
mov
add
mov
cli
lds
add
add
or
add
mov
fcomps
mov
mov
loop
dec
dec
shl
cmpsl
rolb
out
bound
mov
addb
adc
insb
jmp
jl
push
add
add
sub
add
xchg
add
test
lcall
mov
add
add
dec
addb
mov
inc
add
cmp
lods
add
push
jl
add
add
sub
jle
add
add
mov
add
add
ja
mov
add
xchg
add
mov
leave
dec
ljmp
rcrl
pop
dec
jb
aaa
aas
test
mov
in
add
add
lods
xor
dec
in
lock
add
jl
add
add
add
mov
pop
pop
repnz
or
jo
mov
aaa
dec
push
pop
mov
sub
loop
mov
add
add
stc
push
add
fdivrp
nop
add
adc
push
inc
adc
push
add
mov
add
or
add
jo
cmp
aad
add
fst
shr
add
out
add
add
add
in
add
call
add
add
xchg
loope
fdivrp
inc
add
in
dec
pop
rolb
mov
or
sbb
je
mov
scas
cmp
push
add
dec
push
out
add
inc
adc
popa
fcoms
mov
repnz
dec
iret
adc
xchg
testb
pushf
fwait
stos
push
mov
mov
xor
sbb
add
aam
les
cmp
js
add
addb
mov
add
add
mov
scas
arpl
add
adc
sbb
add
dec
mov
add
mov
inc
pop
clc
mov
mov
ss
pop
push
frstor
mov
add
mov
add
pop
xchg
data16
add
ja
outsl
adc
cld
inc
ja
push
add
pusha
add
xchg
add
outsb
mov
inc
js
push
xchg
pop
pop
jbe
movsl
int3
enter
popa
das
or
add
add
add
adc
mov
idivl
ds
inc
add
mov
cwtl
aas
lods
addb
gs
mov
outsl
rolb
jge
cld
outsl
lcall
mov
xchg
lods
pop
icebp
cmp
mov
xchg
add
add
fdivrl
sbb
out
addr16
cmc
andl
adc
les
jbe
clc
adc
addr16
xchg
int
sbb
jg
iret
popa
outsb
and
dec
sub
lods
push
add
mov
add
add
loope
pop
imul
in
jno
add
push
inc
pop
mov
in
push
add
xchg
ja
mov
fstl
rolb
add
mov
jb
test
test
dec
push
add
add
add
add
lcall
loopne
fisubrs
add
push
add
test
add
cmpl
add
add
and
xchg
mov
mov
fsubrs
mov
insl
fsubs
add
dec
out
sbb
das
dec
daa
sub
xchg
bound
mov
add
stos
cmp
fwait
inc
je
test
ljmp
xchg
cmp
testb
add
rcl
add
xchg
adc
inc
add
std
xchg
xchg
jecxz
add
add
mov
jbe
add
adc
loopne
xchg
add
xor
mov
add
mov
mov
rolb
inc
add
adc
inc
add
test
pop
pop
add
mov
add
xchg
popf
mov
jmp
mov
add
xchg
inc
add
add
imul
nop
add
add
cmp
sbb
add
pushf
xor
cmp
cwtl
iret
and
mov
movb
adc
sbb
or
mov
mov
inc
add
add
push
add
cmp
add
pop
mov
add
xlat
add
dec
imul
int3
dec
subl
add
or
fisttpl
icebp
jmp
add
add
pop
dec
psadbw
inc
add
add
mov
bound
mov
dec
sbb
lahf
mov
lret
pop
and
mov
lret
inc
push
push
add
add
xchg
xchg
addb
add
cmp
push
add
sbb
mov
daa
lahf
mov
add
ljmp
add
sbb
out
lods
pop
adc
adc
adc
add
add
or
mov
adc
cmp
lods
cmpsl
stos
or
xor
ja
add
aas
mov
xchg
pop
push
add
xlat
sbb
jecxz
out
cmc
fdiv
add
add
pop
cmp
clc
add
add
stos
push
add
addr16
xchg
add
add
add
add
and
movsl
push
add
add
das
pop
ficomps
add
data16
add
sarl
mov
and
mov
add
add
jmp
popa
mov
dec
mov
or
outsb
adc
cmp
add
add
xor
call
aam
mov
shll
rolb
pusha
add
mov
xchg
adc
add
mov
pop
xchg
mov
lods
xchg
add
add
outsl
sbb
add
mov
fdivrs
pop
push
add
ljmp
jns
push
inc
je
or
out
scas
xor
lock
call
add
add
mov
add
add
mov
mov
jmp
sbb
cmc
mov
cmp
add
pop
bound
mov
add
data16
mov
mov
jns
lahf
mov
push
mov
scas
ret
add
testb
add
mov
cli
dec
fwait
lods
push
add
cmp
int3
sbb
add
mov
push
testb
add
add
push
add
les
xchg
mov
adc
cmp
add
data16
adc
and
movsl
fisttps
add
stos
jmp
imul
add
add
push
test
add
add
in
jae
test
ret
push
add
add
or
dec
sub
mov
cld
aas
add
mov
mov
xchg
add
ret
or
fmul
add
xchg
add
scas
fs
and
xchg
add
dec
inc
lods
cli
sbb
mov
dec
pop
add
mov
xchg
add
adc
aaa
rolb
inc
add
inc
add
mov
xlat
dec
cmp
cli
inc
xchg
faddl
dec
movsb
add
hlt
add
out
repnz
int
add
lahf
mov
shll
add
add
dec
sbb
js
push
push
add
add
hlt
add
add
add
add
adc
push
add
rolb
repz
dec
and
mov
ds
lret
push
add
pusha
add
popa
rolb
gs
add
add
adc
add
xchg
adc
push
mov
nop
add
add
pop
insl
stos
pushf
leave
dec
mov
add
add
xchg
testb
add
xor
cwtl
into
inc
add
or
add
pop
aam
push
xchg
xchg
add
adc
dec
in
inc
add
inc
add
jo
or
arpl
add
mov
cmp
or
add
inc
push
add
aaa
mov
fsubrs
daa
test
inc
inc
fcomip
sub
add
mov
inc
add
les
imul
add
sahf
xchg
enter
gs
add
add
pushf
ds
mov
pop
push
mov
add
push
add
fisubrs
jnp
xor
jle
add
add
xor
inc
stc
mov
cltd
stos
pop
sbb
add
cmp
aaa
int3
pop
mov
loopne
popa
sub
pop
push
push
add
in
cmp
and
mov
add
or
aam
xchg
roll
sarl
add
mov
mov
cmpsb
add
mov
add
xchg
pop
out
sbb
roll
test
add
pop
dec
xor
ret
scas
les
jp
push
add
add
xchg
test
jo
prefetch
aaa
and
stos
fcoms
sbb
sub
cmp
mov
mov
or
add
scas
aas
test
rolb
jecxz
add
or
sbb
add
addb
adc
pop
mov
add
cltd
dec
stos
xchg
cltd
or
pop
xor
add
cmp
mov
in
add
sti
addr16
mov
into
popa
sub
adc
xchg
add
sub
or
ret
add
lds
ror
in
jle
pop
fwait
sub
cmp
iret
add
jnp
add
add
jno
ficomps
shll
mov
xchg
add
cmpsb
add
cld
inc
add
outsl
mov
add
sti
outsb
loop
mov
aaa
scas
xor
data16
cltd
jg
add
add
in
xchg
add
jnp
dec
xchg
add
sub
fwait
or
mov
mov
add
mov
aad
and
sbb
rolb
movb
xor
add
cmp
jmp
add
add
stos
pop
sub
and
mov
add
movsl
ja
repnz
add
and
aaa
sti
rolb
testb
ss
add
das
and
data16
fisubl
add
push
pop
test
mov
add
or
xchg
add
add
insl
mov
push
and
add
and
mov
xchg
sbb
push
add
addb
or
add
xchg
mov
add
push
add
add
jno
mov
cmpl
sub
sub
mov
pusha
add
add
push
add
into
push
add
add
mov
add
aaa
push
add
mov
add
outsl
das
call
clc
lret
or
test
les
in
add
mov
int3
enter
filds
dec
mov
shrl
cmp
into
pop
daa
je
stos
jmp
mov
adc
inc
jmp
dec
test
and
mov
pop
dec
icebp
or
add
add
lret
mull
add
add
xor
inc
pop
mov
shr
mov
push
dec
inc
add
add
add
add
insl
fildll
push
lret
cmp
leave
dec
je
push
sbb
pop
stos
add
add
add
inc
add
notl
mov
mov
mov
and
mov
cvttps2pi
mov
add
shl
add
adc
xor
add
inc
add
pop
es
lret
add
add
xchg
jmp
mov
jg
inc
push
lret
push
repz
or
fwait
dec
mov
add
mov
dec
movb
sub
popa
inc
add
add
dec
push
lcall
insb
and
sub
add
das
mov
add
sub
mov
mov
inc
sub
mov
add
lcall
cltd
cmp
add
cli
ljmp
out
rolb
add
lock
js
lea
bound
mov
rolb
jp
faddl
add
add
xor
mov
add
add
xchg
mov
iret
xchg
add
mov
add
xchg
fisttps
add
push
add
fcomps
mov
addb
push
xor
testb
mov
add
dec
nop
add
xor
inc
add
push
testb
jns
pop
repnz
fimull
mov
add
add
add
add
sbb
dec
xor
cmp
sbb
add
add
add
mov
fdivrs
add
xchg
xchg
add
and
pop
sti
jno
mov
xchg
test
jmp
mov
sub
push
add
rolb
lret
xor
mov
mov
add
std
push
addl
fwait
mov
jbe
add
add
add
pop
and
xor
in
add
testb
add
pop
iret
push
leave
in
inc
out
cld
jo
rolb
and
pushf
shll
add
ja
add
add
mov
add
outsl
cmp
add
add
push
mov
std
rolb
cwtl
lcall
sbb
add
or
add
add
sbb
les
push
sub
mov
add
inc
add
add
popf
cltd
gs
js
xor
mov
dec
mov
lea
xlat
nop
add
add
inc
add
push
add
or
inc
addb
add
lcall
xchg
add
push
inc
lcall
xchg
add
push
insb
popa
pop
popf
jnp
das
mov
push
add
and
xchg
bound
mov
and
jmp
push
movb
stc
es
out
mov
add
in
ljmp
mov
jbe
dec
xor
cmpsl
cwtl
sti
xor
jle
add
lret
das
cli
adc
sbb
add
add
and
mov
ds
aas
ljmp
outsl
inc
dec
mov
xchg
mov
sbb
nop
add
and
inc
add
add
add
imul
add
add
lods
add
jg
outsb
xchg
mov
add
add
and
mov
mov
jle
sub
adc
les
pop
ret
dec
mov
jb
pop
std
call
ja
add
popa
and
and
mov
push
add
ficoml
add
adc
pop
add
repz
cmpsl
jno
add
add
out
add
int3
int3
push
pop
or
push
add
add
ret
sbbl
xchg
fidivs
add
imul
add
aad
std
or
cwtl
lcall
add
mov
dec
scas
pop
inc
add
incl
add
pop
or
jno
add
sbb
and
dec
inc
add
push
jg
dec
sub
arpl
add
add
mov
cmp
add
stos
popf
loop
in
in
add
add
cli
lea
lods
movb
jne
mov
mov
mov
add
add
mov
in
and
jbe
lcall
test
popa
popa
jge
dec
adc
jbe
mov
adc
mov
movsl
mov
scas
jne
out
test
dec
arpl
movb
loope
mov
aaa
inc
add
fsubrl
mov
stc
mov
add
add
movsb
add
add
cmpsb
add
je
sub
jne
imul
cmpsb
add
add
mov
dec
clc
leave
cmpsl
sbb
ss
jb
and
fsubr
add
in
adc
cmp
bound
mov
add
pop
fs
pop
out
inc
add
xchg
xor
les
stos
sub
and
iret
sub
rolb
add
pop
mov
adc
jg
mov
push
add
add
add
dec
push
add
fs
add
adc
cli
xchg
mov
mov
mov
scas
fidivrs
dec
xchg
add
mov
add
lock
inc
add
push
add
add
mov
sbb
sub
add
mov
mov
add
ret
add
lods
mov
popf
pop
scas
pop
inc
cmc
adc
dec
mov
mov
rcl
add
int
cwtl
push
repz
xchg
mov
pop
lods
fistpll
insb
sarl
ret
jl
add
pop
sbb
mov
xchg
add
xchg
cmpsb
add
inc
add
dec
les
adc
lds
adc
fbstp
push
inc
push
ljmp
hlt
add
stc
cmp
and
mov
cmp
movb
add
ljmp
icebp
jb
and
out
mov
inc
add
add
add
rolb
insb
imul
addb
add
dec
lret
adc
mov
add
cmp
dec
adc
xor
xor
out
mov
imul
sub
lcall
add
add
daa
insb
sbb
sub
mov
lds
cmp
les
lods
jle
insb
lea
cwtl
out
mov
testb
pop
cmp
xchg
out
test
clc
and
mov
add
add
mov
push
lock
add
cmp
add
addb
lock
out
sub
cmpsb
add
add
cmp
mov
cmp
cmp
add
dec
mov
mov
jnp
add
push
jo
xchg
xchg
add
dec
fldl
or
cltd
sbb
incl
mov
pop
push
pop
or
hlt
add
js
sub
aam
jne
add
xchg
add
push
rcr
pushf
sbb
add
or
push
adc
pusha
add
ret
add
add
mov
xchg
jmp
add
shr
cmc
repnz
cmpsl
mov
jl
je
push
xchg
loop
test
sub
ljmp
pop
pop
dec
stos
dec
mov
jo
andl
bound
mov
ljmp
fldcw
push
cmpsb
add
inc
dec
jmp
lock
pop
mov
add
adc
addr16
out
testb
rolb
fiaddl
out
outsl
push
pop
xor
add
add
sub
add
ret
fsubrl
add
movl
add
add
add
pop
push
cmp
add
xchg
add
testl
mov
int3
scas
sbb
clc
insb
mov
cmpsb
add
add
add
add
jl
cmpsb
add
sub
xor
add
mov
jp
add
add
add
add
imull
mov
add
add
sahf
ret
mov
add
pop
aam
ja
jne
dec
cmp
add
fidivl
aam
cwtl
stos
rolb
mov
jnp
adc
fldl
add
sub
add
add
out
cmpsb
add
add
jbe
inc
insb
shrl
add
xor
xchg
push
jg
mov
adc
mov
xchg
imul
ja
add
add
mov
add
imul
and
add
mov
sarl
movb
leave
std
mov
loop
sub
das
add
jl
lret
add
push
add
test
gs
add
cwtl
rolb
rolb
push
and
lcall
std
mov
out
pop
lret
int3
dec
and
dec
xor
push
add
push
add
ljmp
mov
dec
and
cld
jne
std
fcompl
cs
add
roll
sbb
jbe
rolb
add
pop
sbb
add
gs
jl,pt
add
push
roll
repnz
add
inc
jecxz
inc
add
sahf
nop
add
mov
movsl
inc
add
add
mov
cwtl
repnz
mov
add
addb
adc
mov
add
mov
inc
add
insl
jns
cli
mov
insl
dec
xor
sbb
insl
mov
jno
pop
movsb
add
inc
ljmp
fsubs
stc
xchg
ficoml
add
and
into
mov
sbb
mov
fucom
out
mov
mov
testb
add
jge
les
fsubrl
add
jg
add
add
sarl
add
and
mov
add
add
jno
add
pushf
out
scas
pushf
arpl
mov
xchg
pop
ss
repnz
stos
insb
out
mov
das
addr16
lock
adc
sbb
add
in
pusha
add
dec
lahf
add
add
out
cmp
lea
add
add
mov
inc
pop
or
add
lahf
in
cmpsb
add
mov
loop
inc
pop
and
or
enter
add
addb
add
cmc
ret
mov
test
add
mov
sub
jb
jg
xchg
movb
insb
testb
xchg
add
add
popa
repz
pop
stc
clc
xchg
add
pop
add
rolb
pop
sar
and
mov
jmp
push
add
sbb
dec
repnz
lret
xor
popa
testl
mov
lahf
dec
js
aas
ja
add
ficomps
in
test
and
mov
into
data16
enter
mov
fucomi
addb
mov
testl
add
or
xchg
xor
push
mov
xchg
filds
xor
pop
dec
xor
iret
and
mov
repz
pop
or
fidivrl
int3
in
jb
xor
int
imul
int3
aas
fwait
mov
jbe
xor
flds
or
popf
testb
shll
mov
js
cmc
xchg
mov
cmp
add
insl
jl
je
xchg
add
outsb
out
outsb
fidivrs
icebp
dec
fbld
mov
add
add
stos
rolb
outsb
cwtl
aas
pop
xchg
les
pop
mov
ficoml
imul
cli
and
imul
inc
ss
xor
imul
out
int3
xchg
add
sub
add
fwait
aaa
jbe
or
xchg
xor
jl
popa
or
clc
jns
cmp
out
out
lahf
mov
sbb
add
mov
cmp
jecxz
add
mov
loope
or
imul
pop
mov
into
loop
fwait
push
add
mov
sti
and
mov
add
add
xchg
addl
jb
push
add
aas
xchg
add
cmp
xchg
and
xchg
jg
stos
inc
fbld
mov
cld
add
xchg
push
add
stc
inc
push
loopne
dec
cmp
mov
rolb
insl
cmpsb
add
pop
jo
sub
out
sbb
clc
jnp
inc
add
add
imul
dec
pop
dec
js
xchg
and
mov
sub
adc
loopne
popl
add
cltd
inc
add
rolb
inc
scas
clc
test
adc
or
ret
push
add
push
add
movsb
add
mov
rolb
lods
lcall
je
xlat
mov
add
ljmp
sti
sahf
pop
and
jmp
add
mov
add
add
jo
cwtl
es
testb
push
add
in
jg
xchg
fsubs
inc
add
mov
shll
cmp
test
pop
pop
orl
pushf
jp
mov
sub
sbb
fstps
jmp
daa
cld
mov
lcall
dec
sub
loop
enter
mov
stos
mov
dec
les
adc
fistl
add
add
sbb
jl
add
mov
add
fs
mov
add
add
add
add
mov
cmp
add
andl
mov
in
push
add
and
add
sub
add
jmp
mov
js
cwtl
bound
mov
sub
add
push
add
add
add
cld
add
ljmp
stos
rolb
add
sub
add
cs
mov
add
bound
mov
xchg
mov
and
mov
flds
mov
xor
lds
outsb
adc
sbb
leave
xlat
jecxz
add
mov
add
out
add
lret
addb
ja
add
cs
add
sbb
dec
int3
jp
push
inc
add
add
add
cmp
lahf
mov
add
dec
cs
cmp
xor
icebp
cmp
add
xchg
push
add
inc
add
xlat
adc
add
hlt
add
bound
mov
into
addb
add
add
rcll
xchg
and
mov
les
add
mov
add
pop
rcll
add
lods
adc
push
add
incl
and
mov
test
add
add
popf
pushf
xlat
and
jecxz
rolb
sub
les
add
jb
cmpsl
lahf
mov
mov
lock
lods
aaa
testb
mov
add
add
decl
lea
add
xchg
add
repz
inc
xlat
inc
add
leave
ljmp
hlt
add
sub
rcr
into
xchg
add
add
add
mov
je
sub
xchg
add
cmp
add
inc
dec
mov
data16
aas
stc
out
cmp
fistpll
loopne
add
and
mov
add
sbb
add
add
jnp
add
outsl
add
add
test
add
stos
jae
in
pop
bound
mov
sarl
iret
stos
popa
stc
aam
mov
or
add
shll
sbb
xchg
adc
push
add
add
addb
ret
add
mov
add
pop
test
add
in
sub
dec
adc
inc
add
or
inc
pop
arpl
adc
xor
mov
adc
andl
les
testl
cmpsb
add
movsl
add
inc
int
imul
pop
xchg
aas
fdivl
jecxz
sub
les
loopne
inc
add
pop
sbb
das
leave
add
add
bound
mov
inc
in
mov
add
pop
pop
sarl
add
cwtl
idiv
jnp
fidivl
push
fnsave
add
add
pusha
add
lcall
fmull
add
mov
sbb
sbb
fs
add
adc
jmp
add
ja
cmp
or
add
iret
adc
out
push
add
fcom
cmpsb
add
divps
pop
mov
rolb
call
add
in
and
mov
cmc
mov
sbb
popf
lea
add
xor
mov
add
mov
add
and
ret
cld
xchg
std
ret
add
pop
pop
fidivl
mov
cmp
push
add
mov
dec
and
add
sbb
in
loop
jg
out
pop
lods
xor
out
imul
add
xchg
add
add
lock
add
add
mov
test
add
inc
add
loope
mov
xchg
out
mov
adc
ds
xchg
add
sub
lret
pushf
into
lds
push
add
mov
add
add
int3
ljmp
jne
fstpt
cli
push
sub
add
add
or
sbb
add
jge
in
pop
pop
pushf
cld
xor
outsb
cwtl
mov
xor
jnp
fcoms
mov
add
add
lret
pop
sbb
and
mov
mov
clc
mov
shl
add
dec
pop
xor
out
add
add
mov
adc
mov
add
js
add
xchg
test
hlt
add
cmpsl
mov
xor
sbb
add
cmp
add
pop
xlat
enter
out
mov
test
jecxz
in
add
add
scas
out
test
mov
mov
add
jmp
add
dec
addb
fdivs
loopne
xor
sub
sub
mov
and
mov
std
and
sbb
add
push
sbb
add
dec
add
mov
jb
inc
sbb
in
fists
add
dec
xor
dec
rolb
icebp
test
adc
dec
push
or
pushf
mov
gs
dec
aad
jne
addr16
add
sbb
mov
mov
into
mov
int3
testb
inc
insb
dec
mov
push
add
add
jmp
add
add
pop
and
add
jb
pushf
adc
pop
stc
out
add
inc
inc
add
out
jne
sti
add
adc
add
mov
add
add
add
add
add
sbb
add
mov
sub
lret
xchg
mov
push
add
mov
add
pop
dec
pop
jg
mov
push
add
iret
std
lret
add
add
add
add
dec
mov
and
incb
pop
test
scas
clc
testb
add
add
xchg
sbb
add
pushf
out
pop
pusha
add
add
sub
add
aam
popf
hlt
add
add
stos
stos
xchg
imul
add
dec
and
movsb
add
cwtl
mov
mov
pusha
add
adc
mov
pop
decl
scas
sti
int3
adc
cmpsl
nop
add
dec
dec
repnz
add
adc
lcall
mov
cmp
fisubl
add
add
add
mov
mov
lods
cmpsl
add
std
and
mov
jne
add
jp
add
fidivrl
adc
add
add
add
mov
inc
cli
loop
mov
add
adc
lret
out
data16
xchg
sbb
add
push
add
sti
xor
test
add
adc
orl
in
jb
jmp
pop
mov
icebp
das
mov
add
add
sahf
aaa
jno
add
pop
mov
add
ljmp
sbb
adc
stos
stc
stos
mov
add
jb
push
add
or
repz
and
mov
dec
jg
nop
add
mov
or
add
add
sub
nop
add
cmp
movl
lret
scas
pop
push
fsubl
add
add
ja
dec
mov
clc
xor
aaa
fwait
std
mov
testl
xchg
mov
repz
add
jge
adc
dec
rolb
add
popl
loope
inc
add
dec
popa
pop
sub
dec
sahf
jno
sub
int3
test
add
or
sub
add
add
repz
add
sbb
cli
dec
or
insb
scas
xchg
add
popa
iret
add
lret
lcall
pop
lods
sub
sbb
jns
add
push
lcall
je
inc
in
xor
mov
push
inc
add
inc
add
sub
xchg
add
mov
rcll
loope
add
add
mov
add
jecxz
mov
add
sahf
mov
sub
add
mov
mov
lret
or
jb
lds
imul
insl
fisttps
pop
popf
push
cmp
sub
stc
arpl
js
add
adc
mov
add
and
fsubp
xor
xlat
testb
add
in
and
xchg
mov
dec
cmc
mov
push
cmp
push
add
shll
xchg
add
add
gs
xchg
jge
inc
in
fistps
sub
sub
loop
xchg
add
add
push
add
scas
mov
sar
decl
or
jmp
add
add
add
rolb
sub
pop
loope
pop
mov
leave
mov
dec
sbb
sbb
rep
pushf
and
inc
fimull
aaa
add
pushf
outsl
mov
inc
add
add
repnz
add
scas
push
add
sbb
sub
add
mov
add
rol
add
in
test
loopne
aaa
add
lahf
lods
cmp
and
inc
add
sbb
add
aaa
out
movl
pushf
test
add
in
ret
inc
jp
stos
jnp
add
clc
jl
dec
adc
lods
leave
and
mov
push
add
jno
popf
jne
add
xor
mov
add
fildll
lret
mov
clc
xchg
add
cmp
push
hlt
add
fwait
into
mov
ret
rcll
add
add
mov
loop
inc
pop
shrl
popf
add
adc
imul
add
nop
add
add
mov
mov
jnp
add
dec
fcomps
add
dec
mov
add
dec
add
or
add
sbb
sbb
cmp
loopne
lahf
cmc
mov
test
std
mov
repnz
push
dec
ds
rolb
das
jle
add
mov
data16
add
add
mov
add
test
sub
ficomps
stos
pop
lods
mov
mov
mov
jp
daa
adc
push
jb
add
aas
clc
mov
dec
and
sub
in
jl
pusha
add
pusha
add
add
data16
hlt
add
add
std
aas
mov
push
add
imul
add
out
add
in
scas
xchg
add
rolb
mov
mov
pop
ljmp
hlt
add
inc
mov
mov
add
jo
pop
sahf
call
add
pop
pusha
add
fnstenv
fnstenv
or
mov
push
add
mov
mov
test
or
add
dec
out
ljmp
cwtl
jecxz
add
scas
decb
in
push
cmpsb
add
dec
movsl
add
ficoml
mov
inc
mov
or
inc
add
jle
add
fnsave
mov
add
add
cmp
addb
movb
movsl
cld
lock
add
add
out
adc
mov
inc
add
out
xor
push
mov
cmp
add
icebp
out
push
add
add
repnz
jmp
sbb
stos
enter
rolb
lock
cmp
loopne
inc
add
add
add
adc
dec
ljmp
shll
stc
in
andl
and
mov
add
cmpsb
add
data16
out
mov
add
push
add
mov
or
pop
std
push
add
add
mov
rolb
lds
push
add
lahf
call
pusha
add
add
and
mov
add
pushf
inc
add
pop
jno
addb
mov
add
cltd
in
jmp
movsb
add
mov
add
dec
dec
or
call
mov
mov
mov
test
out
stc
sbb
add
and
mov
arpl
sbb
aas
push
imul
push
add
add
pop
stc
lods
rolb
jg
xchg
add
add
jle
ret
add
leave
push
repz
add
add
pop
je
mov
sbb
add
lock
rolb
add
add
loopne
scas
xor
sub
and
imul
pop
fmull
repnz
add
mov
ja
out
cmp
add
push
add
movsl
or
fcompl
nop
add
int3
push
pop
outsl
test
add
sbb
testb
jns
clc
fbld
mov
mov
test
pop
into
outsl
cli
jb
push
add
add
ret
out
pop
and
shll
add
adc
movsb
add
dec
insl
loopne
dec
xchg
sub
adc
insb
mov
daa
clc
fidivrs
cmp
add
ja
jle
cmp
fwait
ds
add
add
add
fisubrs
add
add
add
mov
push
jg
add
testb
add
clc
or
inc
mov
pop
xchg
fwait
jmp
in
push
add
mov
add
out
cs
add
jno
clc
lea
xchg
dec
inc
add
add
xor
testb
add
push
add
data16
rolb
add
mov
xchg
add
mov
jns
jae
xor
fcompl
out
dec
popa
fdivs
mov
add
aad
add
jl
add
push
add
add
add
add
stos
sub
add
fdivs
add
add
ret
addb
or
add
xchg
add
cmp
jne
add
loope
pop
ret
aad
nop
add
sbb
out
mov
fdivrs
mov
fmull
rolb
movb
mov
mov
xchg
movsl
mov
add
xor
jne
xorl
jmp
add
fsubrs
add
mov
jb
and
adc
cli
jo
lea
lea
lahf
cmp
pop
sbb
add
rorl
out
lea
add
in
aad
add
xchg
add
add
repz
sub
mov
insl
nop
add
iret
mov
sub
fcoms
loopne
dec
pop
mov
and
sahf
pop
hlt
add
aaa
dec
addl
mov
mov
jns
add
add
fbld
addl
fdivs
pop
cmpsb
add
inc
lcall
cmp
add
enter
cs
loop
mov
pop
rcr
jno
push
inc
add
stc
shr
add
add
push
adc
gs
dec
pop
add
mov
and
nop
add
add
mov
add
add
mov
dec
cmp
int3
pop
pushf
push
add
add
lret
add
xchg
mov
add
add
in
pusha
add
dec
bound
mov
std
or
mov
xchg
shrl
mov
add
jle
add
adc
hlt
add
mov
dec
push
add
sbb
in
sbb
mov
mov
add
cmp
add
lret
int3
and
dec
mov
add
fcmovb
add
outsb
test
stos
out
or
xchg
add
insb
inc
add
lds
lds
add
sahf
push
and
add
jno
insl
fadds
add
mov
movb
mov
inc
daa
int3
mov
add
repnz
mov
mov
mov
xchg
add
mov
stos
push
add
add
add
xchg
js
xchg
out
ret
in
icebp
mov
add
cmp
add
add
add
xchg
addb
movsl
lds
add
mov
pop
testb
xor
sub
push
push
inc
add
xor
and
mov
mov
dec
jecxz
cli
mov
sub
add
add
outsb
push
add
test
daa
lods
cmc
lret
cli
repz
fwait
rcrl
add
add
xchg
add
add
xor
xor
sub
addb
add
scas
jmp
mov
xlat
xorl
dec
ss
sub
imul
add
xor
jo
fnstenv
arpl
sti
lret
mov
pop
xchg
push
or
icebp
jae
call
outsl
sbb
loopne
mov
xchg
add
inc
add
in
mov
aam
ret
pop
mov
pop
push
pop
pusha
add
mov
std
inc
add
sub
add
jne
hlt
add
lahf
cltd
inc
add
sub
testl
test
jo
inc
addb
push
add
cmp
jge
mov
add
add
push
jo
fdivl
pop
dec
cmp
add
sti
pusha
add
adc
jp
pushf
mov
fwait
and
add
xchg
in
mov
int3
jp
fldt
xchg
fisttpll
cmp
add
dec
xchg
add
int3
lcall
add
mov
clc
mov
popa
add
add
add
add
adc
rolb
and
cmpsb
add
add
dec
jbe
fs
pop
cli
je
sbb
and
add
stos
cmc
lsl
daa
mov
add
fisubl
or
add
add
lds
insl
cmp
inc
fwait
daa
jmp
dec
cs
or
add
les
add
dec
and
add
add
mov
push
ja
mov
xchg
pop
pop
data16
mov
mov
or
mov
pop
pop
mov
arpl
lods
adc
jb
push
stos
inc
add
repz
xchg
jno
cmp
add
inc
inc
add
fwait
mov
loope
into
push
adc
add
into
mov
mov
mov
add
test
or
add
stos
jmp
ret
ret
mov
rolb
jo
cmp
xchg
je
rolb
mov
xchg
xlat
inc
add
jg
jns
lahf
xchg
int3
ja
add
xor
mov
dec
addb
add
mov
push
add
add
pop
dec
cltd
sbb
mov
add
mov
inc
add
add
inc
add
insl
pop
shl
and
mov
sbb
mov
cwtl
movsl
dec
ja
add
jnp
cmp
sub
jg
pop
jl
lret
loopne
adc
lods
pop
inc
dec
scas
fidivrs
test
sub
mov
in
add
jbe
xor
out
inc
add
jge
and
mov
add
sbb
add
leave
call
rolb
xchg
cwtl
mov
inc
lret
daa
jg
add
adc
fstps
sahf
ljmp
and
dec
gs
mov
in
mov
lret
incl
add
popa
dec
hlt
add
daa
rolb
cmp
cmp
jg
mov
cltd
mov
inc
add
and
mov
enter
xchg
mov
outsl
inc
add
std
push
rolb
pop
and
mov
fldenv
pop
sub
pop
add
sub
cmp
fwait
in
lods
sbb
add
dec
push
lahf
xchg
nop
add
leave
push
addb
jb
aad
imul
add
mov
jge
test
cmp
daa
jo
mov
mov
mov
add
gs
test
add
js
add
jmp
add
add
sbb
movb
adc
xor
stos
xor
lods
xchg
add
mov
or
popa
adc
ret
adc
jl
add
mov
into
mov
jne
add
ret
adc
add
dec
jmp
xor
test
mov
mov
dec
and
mov
add
mov
add
test
insb
cmp
add
fs
pop
or
das
lock
add
xchg
adc
xor
xlat
mov
push
add
rolb
out
sub
or
addr16
add
in
push
add
push
test
add
addb
mov
adc
das
fsub
es
int3
lcall
add
ficomps
pusha
add
mov
cltd
sbb
add
xchg
or
add
jbe,pn
fsubl
add
aam
push
iret
or
pop
aad
imul
push
add
xor
cltd
fdivrl
adc
push
addb
mov
rcl
out
sbbl
push
add
popf
add
arpl
repz
ficoms
sub
popa
inc
add
int3
into
enter
sub
jge
add
addb
or
rolb
les
aam
pop
rolb
scas
pop
cmp
adc
add
mov
loopne
add
and
mov
mov
jns
repz
add
fldl
mov
add
mov
movsl
movsb
add
add
mov
stos
mov
loop
push
add
lock
cmp
dec
subl
push
add
jmp
push
push
add
adc
sbb
mov
jbe
sti
mov
add
adc
cmp
add
mov
ljmp
scas
dec
mov
mov
add
jp
add
mov
cli
push
add
add
testb
pop
jp
add
add
mov
add
dec
repz
insl
adc
add
fdivrl
stos
lods
push
add
xor
mov
pop
bound
mov
insl
fstps
push
add
cmp
add
add
addb
or
add
add
sbb
pop
inc
add
add
add
scas
int
add
add
add
mov
add
xor
stos
lock
movsl
in
add
mov
add
into
mov
fcmovnu
mov
xor
fmull
cmp
movsb
add
adc
test
add
rolb
xchg
mov
pusha
add
in
jge
add
imul
push
add
or
add
inc
add
mov
insl
nop
add
xchg
ja
add
sbb
or
jle
mov
dec
addb
sbb
movswl
push
add
add
jns
fwait
adc
mov
add
mov
and
mov
pop
xchg
add
xor
adc
lret
dec
mov
movsl
pushf
faddl
add
push
lret
ds
dec
in
add
add
daa
or
cmp
imul
cltd
push
add
or
add
sub
sahf
enter
sbb
add
insb
sbb
add
dec
loop
ds
push
add
cmp
add
mov
gs
movsb
add
mov
cwtl
cmp
fnstcw
dec
ja
add
loop
push
add
int3
int
test
aam
add
pop
pop
fsubs
imul
jb
ret
jbe
mov
jbe
dec
in
sti
adc
mov
scas
testb
das
add
jno
and
add
mov
test
xor
mov
ds
test
addb
add
add
popf
leave
xor
dec
inc
test
pop
sbb
lahf
add
mov
popf
xlat
mov
lods
lret
stc
ljmp
add
daa
push
add
add
mov
add
stos
dec
push
add
push
add
add
mov
dec
mov
push
cmp
or
jae
cmp
mov
test
xor
ret
dec
testb
push
out
repnz
sub
xchg
add
fbld
aam
add
mov
jle
add
cld
ret
push
add
mov
pushl
int3
push
pop
es
add
enter
rolb
add
add
mov
cmp
jecxz
jl
add
jecxz
enter
mov
movb
add
jo
fisubs
mov
sub
and
mov
add
and
imul
adc
add
add
mov
loop
jmp
xor
xor
jp
add
std
adc
rolb
push
insl
adc
inc
add
outsb
mov
dec
mov
inc
in
jg
push
add
cmp
add
xchg
scas
cs
mov
mov
pop
inc
add
add
movsl
leave
loop
mov
adc
xchg
pop
mov
pop
loop
jbe
out
adc
movsl
iret
dec
and
add
mov
add
jo
cmp
xchg
ret
add
movb
das
movsl
add
push
add
bound
mov
je
mov
add
add
and
add
imul
add
dec
lds
add
mov
add
inc
add
mov
add
insb
add
dec
add
mov
hlt
add
movups
in
shrl
push
add
aam
out
add
das
mov
les
sub
add
daa
gs
add
push
aaa
test
mov
push
add
mov
repz
mov
add
add
sarl
test
add
pop
popf
adc
inc
leave
incl
add
jnp
add
stos
ss
data16
movsb
add
stos
jmp
jae
insl
inc
add
inc
popa
ja
add
clc
bound
mov
add
and
add
pop
test
add
mov
or
enter
push
add
gs
add
add
sbb
adc
xor
insb
in
cld
addb
out
xchg
add
lret
sti
mov
add
add
stos
cmp
push
add
add
add
or
add
xchg
cwtl
xchg
add
fidivrl
xor
or
adc
push
pop
push
in
or
fcomi
add
popa
mov
cmpsb
add
add
test
out
add
push
add
ds
mov
sbb
mov
and
mov
mov
mov
push
mov
cmp
jne
inc
add
stos
mov
add
mov
cmp
mov
add
enter
frstor
jo
and
add
mov
add
in
daa
inc
xor
mov
add
sahf
cld
cmpsl
movb
addb
add
pop
jp
sub
mov
mov
jb
insb
mov
iret
sbb
add
mov
fldcw
shll
sti
sbb
jg
lcall
adc
push
cmp
test
and
and
mov
add
cmp
push
sbb
add
adc
pop
into
test
fsts
in
cmp
cmp
es
add
add
mov
xchg
std
pop
add
cmp
fsubrs
push
into
add
add
orl
mov
add
jge
in
pop
mov
imul
adc
int3
popa
xchg
add
add
add
mov
add
jo
movsl
lcall
push
add
add
add
push
pop
lock
ljmp
mov
addr16
in
call
jp
cmp
and
sub
scas
mov
int3
les
rolb
lods
jo
pop
xchg
pop
shll
sub
arpl
add
inc
add
outsb
and
jno
cmp
lahf
pop
xchg
push
add
mov
push
cmp
dec
stos
fxch
sahf
xchg
pop
int
push
add
les
mov
add
mov
testb
addb
cmp
add
add
and
popa
wrmsr
add
aam
xchg
jne
add
ret
add
aas
pop
mov
fiadds
cmp
movb
and
loope
je
shll
movsb
add
dec
add
mov
push
or
repz
inc
add
cmp
cmp
test
add
nop
add
jno
je
mov
push
mov
cltd
lea
add
sbb
aaa
into
int
out
lret
mov
add
and
mov
cmc
fwait
pop
adc
insb
fmull
jecxz
iret
mov
jg
mov
scas
pop
cwtl
enter
cmp
push
add
mov
lods
xchg
out
movsl
sub
inc
mov
add
jo
cmpsl
iret
xor
pop
addr16
movsl
in
xchg
sbb
addb
add
add
testb
arpl
bound
mov
add
mov
std
popa
add
mov
add
add
cmpsb
add
push
pop
ficompl
add
or
ds
pop
ljmp
jo
aam
jecxz
inc
add
pop
imul
scas
pop
nop
add
or
addb
mov
dec
mov
jns
sbb
adc
addl
movb
mov
rcll
add
ror
jo
in
push
mov
pop
fdecstp
add
dec
rcrl
add
add
negl
mov
and
mov
test
pop
rolb
lds
add
add
add
orl
mov
or
mov
std
in
sub
xchg
pop
jmp
and
mov
movsl
lcall
and
mov
pop
sbb
add
add
cmc
pop
sahf
movsb
add
push
inc
add
jle
push
cmp
add
cmpsl
adc
aam
jl
push
fildll
xor
adc
test
sbb
push
add
dec
test
mov
pop
adc
into
jne
add
in
push
rolb
mov
pusha
add
xchg
popf
mov
dec
pop
xchg
add
add
dec
leave
xchg
add
inc
add
addb
sbb
mov
dec
sahf
sub
add
imul
xchg
cs
add
pop
je
mov
add
add
adc
sub
pop
out
addb
add
out
adc
and
jecxz
nop
add
sub
jg
cld
pop
pop
mov
addb
dec
sbb
mov
ret
jecxz
add
add
mov
jns
arpl
mov
sbb
mov
mov
add
mov
test
nop
add
cli
add
fcmove
test
xchg
add
add
inc
add
fdivr
push
add
call
add
mov
inc
sbb
inc
push
addb
cmc
ret
aas
mov
add
inc
add
sub
std
mov
jns
out
bound
mov
add
in
inc
add
dec
lret
lds
add
loope
sub
jmp
push
jg
add
add
add
add
mov
mov
add
push
add
mov
movb
add
jno
and
jns
add
add
add
pop
or
or
loop
test
lcall
adc
xor
ret
mov
mov
outsb
mov
add
add
adc
fmul
mov
lret
xlat
xor
sub
add
sbb
cmpsb
add
addr16
test
add
fcmovb
add
add
andl
ficoms
xchg
icebp
rolb
outsb
mov
and
sbb
adc
aad
xlat
cmc
push
mov
sub
inc
add
out
inc
shl
mov
arpl
cmc
mov
add
add
push
add
pop
mov
add
sub
mov
add
rolb
add
mov
mov
dec
lret
add
xchg
cmp
add
add
add
mov
ret
push
clc
or
dec
fcomps
mov
add
fs
sbb
add
add
cmpsb
add
hlt
add
add
aad
add
out
into
call
mov
pop
int3
cli
sahf
fcompl
pop
mov
inc
add
lods
xor
add
stos
rolb
mov
test
fs
clc
cmc
adc
jp
mov
xor
mov
mov
adc
add
xchg
add
xchg
fimuls
add
pop
mov
out
out
xlat
test
xchg
and
add
jb
xchg
add
push
add
negl
rolb
push
add
push
rcrl
pushf
mov
add
cmpsb
add
repz
out
aas
gs
clc
add
add
add
xor
cmp
into
push
add
inc
add
dec
stos
or
sub
movsl
mov
mov
add
dec
dec
push
mov
stc
bound
mov
popa
scas
loope
leave
adc
pop
dec
movsl
int3
mov
sbb
mov
or
call
sub
add
testb
je
jb
cmp
pop
lret
lcall
add
imul
movsb
add
add
xchg
and
mov
rcrl
addr16
sahf
ror
add
aad
xchg
dec
and
fdiv
fcom
and
add
push
ljmp
add
xchg
pop
xor
or
mov
std
stos
sub
data16
outsl
jmp
iret
or
or
adc
je
add
add
jo
pop
icebp
fidivrs
mov
sahf
hlt
add
mov
addr16
stos
mov
mov
loopne
popf
sbb
add
jge
movsb
add
jg
fwait
popf
cmpsl
test
icebp
adc
cltd
adc
adc
outsl
adc
adc
mov
push
add
adc
xor
daa
sbb
jle
cld
in
add
mov
movsl
xchg
jmp
jns
jmp
xor
add
add
add
pusha
add
in
or
insl
mov
mov
pop
mov
mov
add
add
mov
nop
add
xor
push
add
sub
rolb
mov
out
ljmp
add
and
in
add
and
rolb
icebp
xchg
ret
nop
add
dec
add
inc
in
pop
cmp
add
sti
inc
add
adc
add
add
neg
das
data16
cmp
add
repnz
add
pop
fdivrl
aam
ja
lods
add
mov
add
add
mov
add
mov
add
inc
test
jnp
mov
les
jmp
or
add
addb
xorl
pop
mov
aas
mov
js
sbb
inc
pop
dec
sar
jns
pop
cmp
mov
add
pop
ja
jb
add
sbb
add
mov
cld
test
and
mov
addr16
sub
data16
add
sbb
add
into
jmp
add
xchg
or
icebp
lcall
lahf
mov
mov
dec
cli
clc
jae
arpl
add
pop
je
aas
add
mov
sbb
or
pusha
add
mov
dec
push
jmp
sbb
mov
out
repz
push
add
mov
add
add
add
add
add
icebp
repz
outsb
sbb
mov
imul
and
rolb
xchg
add
dec
lock
ja
mov
cltd
mov
iret
sub
cmp
add
add
or
dec
dec
out
xchg
add
add
and
addr16
pop
add
mov
jp
iret
loope
adc
lret
add
clc
out
add
add
add
fisubrl
or
rolb
inc
add
mov
outsl
xchg
aam
cmp
call
jbe
push
jbe
xchg
add
loope
dec
push
add
adc
and
popf
jmp
loopne
mov
sbb
and
cmp
add
sbb
mov
jo
jg
add
add
gs
add
add
int
push
sbb
ret
adc
push
push
add
add
pop
clc
pusha
add
cmpsb
add
add
aaa
adc
mov
sahf
sbb
mov
xchg
xor
insl
daa
cmp
xor
fstl
adc
pop
mov
add
xchg
ss
xor
mov
sub
push
loope
add
mov
leave
stc
pushf
sarl
mov
cmp
add
imul
mov
cld
into
push
add
add
mov
pusha
add
fwait
insb
dec
sar
xchg
add
push
imul
push
add
fst
add
icebp
and
int3
pop
scas
data16
add
mov
or
add
lea
push
add
iret
cmp
adc
push
add
lret
mov
mov
fadds
and
mov
ljmp
add
mull
add
inc
jmp
fisttps
push
and
add
pop
push
lret
test
jae
testb
iret
jg
loop
xchg
adc
dec
push
add
inc
imul
add
jo
lods
and
add
add
cs
addb
mov
xchg
int
por
icebp
arpl
add
push
add
inc
add
add
push
jae
icebp
mov
mov
or
cld
outsb
in
or
add
addr16
fistpll
mov
xlat
popl
testb
test
jge
outsb
xchg
mov
sub
jo
mov
sti
sbb
inc
add
movb
dec
adc
add
bound
mov
mov
scas
inc
add
std
push
add
pusha
add
add
fisubrs
mov
push
sub
mov
xor
mov
and
mov
imul
inc
add
mov
add
mov
xchg
mov
add
mov
cli
movl
leave
rolb
stos
lods
cmp
scas
sub
out
movsl
inc
add
cmp
xchg
add
outsb
mov
jb
or
dec
outsl
fisttps
pusha
add
add
decb
add
dec
add
add
xor
add
cld
and
mov
fwait
addr16
add
nop
add
add
add
icebp
ret
xor
add
mov
imul
or
add
ss
inc
cld
cmp
loope
btr
xchg
add
add
je
jno
jne
mov
and
mov
push
adc
add
add
sbb
cmp
inc
add
insb
dec
pop
inc
add
or
and
mov
nop
add
inc
add
mov
stc
or
add
add
pop
out
jo
popa
test
addr16
call
add
decl
mov
push
and
jb
jo
cld
mov
in
inc
fcomp
dec
outsb
inc
add
pop
cmp
int
movsl
mov
add
sbb
lock
add
xor
fisubl
cmp
jmp
push
or
icebp
aam
inc
cmp
add
add
fcoms
outsb
out
ds
mov
mov
mov
int
pop
fwait
add
movsb
add
out
gs
add
jle
cmp
add
and
shl
add
adc
cmpsb
add
adc
add
inc
add
loope
pop
mov
add
push
add
cmp
xor
popa
test
mov
fdivp
icebp
rolb
add
std
mov
popa
shrl
int3
sbb
mov
add
inc
add
leave
gs
popf
nop
add
sub
or
cmc
mov
add
out
mov
add
repz
dec
push
jg
add
fwait
mov
jb
adc
push
add
jecxz
push
add
add
add
sbb
add
adc
add
add
adc
or
add
xchg
loop
imul
xor
mov
mov
adc
aaa
cmpsl
in
mov
xchg
testl
push
cltd
jne
add
arpl
xor
out
add
xchg
add
add
enter
dec
pop
pop
push
jno
mov
pop
adc
daa
or
add
gs
test
jns
mov
xchg
outsl
pop
mov
rolb
add
add
sbb
mull
mov
into
mov
scas
mov
add
add
mov
mov
out
mov
add
mov
add
sbbl
inc
xchg
pop
dec
ret
loope
scas
jbe
cmpsl
test
push
add
pop
xor
scas
xlat
xor
nop
add
movb
add
icebp
mov
fistl
add
xor
push
add
gs
add
orl
add
mov
add
xchg
add
sub
add
add
and
mov
dec
cmc
and
mov
sub
add
jo
add
enter
mov
cmpsl
and
mov
mov
add
push
add
push
add
aad
movb
add
inc
add
gs
popa
push
add
dec
cmc
push
add
lods
insb
jbe
fnstenv
stos
loop
mov
jb
lahf
mov
add
cs
add
add
add
sbb
add
sub
mov
imul
xor
lahf
daa
stos
xchg
lea
addb
xchg
add
sub
jle
decb
and
cmp
add
mov
sbb
mov
add
movb
adc
bound
mov
call
cmp
out
aad
aad
lea
xor
insl
xchg
xor
daa
sub
inc
add
pop
cld
fwait
jb
enter
int3
addb
sti
push
add
pusha
add
mov
jae
cmp
or
addb
bound
mov
rcrl
dec
jo
ret
jge
mov
stos
repnz
xchg
adc
iret
push
add
or
sub
jge
add
add
add
mov
add
jbe
sahf
bound
mov
mov
lds
add
and
mov
pushf
push
push
add
push
add
daa
shll
add
add
add
add
add
and
add
popa
ffree
sti
mov
add
add
add
or
xor
stos
pop
and
pusha
add
cmp
sbb
gs
jl
sti
mov
xor
popa
jns
add
popf
pop
pop
jo
jge
add
rolb
int3
adc
adc
jl
mov
add
inc
jnp
idivl
lea
mov
dec
jb
mov
arpl
stc
test
or
add
push
std
imul
rolb
rolb
cmp
add
add
add
jge
test
leave
inc
add
add
cs
push
mov
inc
add
adc
jne
rcrl
or
cmp
jnp
cli
pop
test
add
add
call
cmp
lahf
add
sub
test
repz
test
int3
sti
mov
add
add
pop
int3
insb
jl
add
rolb
rcll
jp
imul
dec
dec
lods
shrl
add
jns
pop
stc
pop
xchg
add
or
sti
dec
imul
cmpsl
lds
ljmp
mov
push
sbb
hlt
add
mov
mov
mov
push
add
clc
sub
xchg
add
add
mov
push
repnz
gs
add
mov
inc
add
add
add
add
into
scas
push
sub
or
scas
push
jo
add
add
add
add
add
add
out
insl
xor
shll
into
lahf
mov
add
add
fwait
jae
out
bound
mov
ret
movb
add
test
into
stos
add
mov
and
push
mov
pop
cmp
fildll
hlt
add
inc
stos
xlat
push
add
pop
add
xchg
adc
or
insb
movb
xchg
add
in
sub
mov
int
and
mov
push
or
rolb
add
and
mov
mov
mov
test
add
dec
xlat
fwait
xor
add
inc
add
cwtl
leave
in
test
dec
cmc
rcll
sub
stc
inc
sbb
sbb
push
aaa
mov
movb
pushf
cmp
sbbl
mov
add
addb
xor
loop
or
xchg
xchg
js
add
mov
test
add
add
or
leave
add
mov
mov
add
gs
or
mov
ret
add
mov
sub
jb
add
and
mov
jmp
mov
hlt
add
aad
xchg
add
add
mov
xchg
mov
out
gs
add
or
jbe
scas
xchg
add
add
add
pop
aad
xchg
jl
ljmp
inc
add
add
add
add
daa
jle
rolb
xchg
push
repnz
cmp
mov
jbe
jbe
shrl
add
out
fnsave
add
dec
add
add
add
addr16
jmp
add
inc
add
cs
push
add
add
jae
test
sbb
inc
mov
mov
lds
or
jae
or
mov
sub
std
dec
dec
cmpsb
add
roll
push
add
sub
movsb
add
test
push
add
dec
xor
dec
pop
and
cmp
jo
sub
dec
push
add
xor
aam
idivl
test
xchg
add
mov
add
push
out
sahf
mov
add
mov
add
pushf
inc
add
inc
icebp
mov
int
ret
inc
popf
cli
fistl
int
add
add
mov
jmp
incb
bound
mov
add
hlt
add
pop
cmpsl
jle
sbb
mov
rcrl
add
add
mov
gs
xchg
ss
mov
add
and
addb
add
add
into
mov
add
jg
jno
add
mov
push
mov
xchg
sub
hlt
add
or
stos
aaa
idiv
out
add
ds
imul
test
add
mov
mov
testb
add
dec
addr16
add
jno
stos
cmpsb
add
pop
stos
or
call
xchg
add
mov
or
loopne
in
inc
add
int3
add
cmp
mov
pop
xchg
add
xchg
adc
addb
add
mov
push
inc
add
mov
repnz
pushf
aaa
out
out
out
lahf
lods
popa
add
add
ret
pop
out
push
add
in
pop
cld
cld
sub
aam
jl
addb
addb
nopl
insb
aaa
inc
sub
sbb
add
popa
xor
cld
adc
repz
mov
movsl
daa
imul
int3
test
add
inc
add
add
jno
and
mov
add
inc
pop
mov
add
add
pop
add
jae
test
sahf
shl
add
cmpl
mov
insl
rolb
jg
xor
sbb
aaa
cmp
cld
dec
adc
xor
push
add
cwtl
loope
inc
add
mov
sbb
fsubrl
add
adc
fisttpll
dec
in
mov
dec
pop
mov
adc
pop
cmp
sub
add
add
add
inc
add
call
adc
push
insb
mov
mov
fisttpll
add
pop
or
lcall
sub
rolb
insb
loope
add
add
add
call
add
jp
add
sub
add
add
test
sub
add
fcmovnu
sbb
inc
add
jno
mov
cmc
cmp
lods
push
xor
jl
add
fistps
addb
adc
push
add
add
add
movl
aaa
xchg
add
or
inc
and
mov
mov
add
inc
or
mov
sub
mov
sub
stos
cltd
push
add
push
add
add
icebp
push
add
add
sbbl
aam
mov
bound
mov
dec
dec
jns
and
in
aaa
push
add
add
std
gs
add
xchg
aam
stos
xchg
add
aam
adc
sub
add
movsb
add
andl
add
add
add
add
add
push
add
cmpsb
add
aas
push
add
push
add
loopne
sbb
add
icebp
pop
mov
jbe
mov
notl
add
xchg
add
fistps
add
test
enter
xchg
js
add
mov
mov
insl
adc
xlat
orl
add
mov
fmuls
add
dec
mov
loopne
xchg
lret
pop
aad
pop
in
std
dec
pop
xchg
mov
add
icebp
pop
arpl
or
fcmovnb
add
and
jp
sar
icebp
xor
push
fsub
add
nop
add
jno
adc
loop
cmpsl
pop
push
cwtl
repz
jle
addb
clc
fcoms
and
add
movsb
add
fsubr
in
xor
movb
mov
add
fldcw
mov
outsb
xchg
mov
cld
xchg
jle
xchg
xchg
add
lock
add
sbb
add
roll
and
fists
pop
loopne
dec
jb
lret
in
je
mov
xchg
add
in
jno
decl
stos
adc
cmpsl
fsts
add
inc
gs
add
add
mov
add
xchg
int3
pop
sbb
xor
outsl
sbb
add
movsb
add
add
xor
add
add
lret
jae
add
pop
adc
mov
dec
mov
add
push
add
push
add
adc
fnstsw
mov
ja
xchg
mov
shll
add
mov
inc
mov
ficoms
cltd
dec
mov
add
add
add
add
add
sub
inc
add
fisttps
mov
xchg
clc
testb
rcl
lahf
std
or
or
add
cmp
insl
xchg
add
inc
mov
or
dec
out
mov
mov
jmp
enter
xchg
push
and
bound
mov
add
sbb
clc
adc
mov
add
into
idivl
add
add
mov
lods
sbb
repnz
inc
pop
aaa
push
add
xchg
sub
add
add
mov
mov
jno
xchg
add
push
out
in
stc
movsl
fsubl
jo
xor
out
cmp
add
add
mov
cwtl
stc
xchg
add
jnp
dec
mov
adc
mov
out
sbb
add
rcr
cmp
add
out
jb
or
add
add
insb
out
pushf
mov
add
add
lret
and
adc
nop
add
mov
add
pop
push
mov
ljmp
enter
push
add
add
jo
mov
push
push
xchg
dec
jecxz
mov
jg
push
int3
scas
mov
inc
add
outsl
pusha
add
add
add
jge
iret
int3
lcall
xor
pop
and
add
mov
addb
scas
xor
add
call
add
lock
add
add
add
add
mov
or
test
add
in
add
add
add
mov
add
jnp
xchg
xor
sub
mov
add
add
mov
lods
push
popa
loope
add
cltd
jle
add
and
mov
push
adc
out
pop
lods
mov
add
jno
add
cmc
xchg
add
jle
add
add
adc
rcr
add
movb
fldt
add
pandn
xchg
mov
inc
push
or
repnz
pusha
add
lret
outsb
test
stc
cmpsl
fidivs
add
in
push
add
popf
lahf
test
add
add
femms
mov
out
add
or
dec
xchg
rolb
ss
add
add
movsb
add
add
and
rorl
std
shrl
fidivrl
add
scas
mov
pop
adc
mov
add
aad
insl
lea
cmc
imul
adc
lock
mov
push
pop
adcl
xchg
inc
and
mov
add
add
add
enter
and
add
repnz
add
cltd
jg
xor
pop
pop
add
pop
pushf
adc
xor
add
adc
scas
mov
add
sbb
daa
mov
add
push
add
add
fcoms
add
add
adc
cmp
outsl
pop
push
lcall
add
add
pop
sbb
mov
add
xor
sarl
rolb
add
jae
ret
cli
dec
rolb
and
add
add
add
inc
mov
add
add
add
adc
add
mov
add
sub
add
pushf
cwtl
cmp
add
or
cmc
push
add
xor
sub
jp
add
mov
lcall
add
add
int
pop
and
add
add
push
cmc
push
cmp
fsubl
test
lcall
add
add
add
add
push
add
lea
cli
cmp
adc
add
mov
push
mov
lds
add
mov
add
mov
pusha
add
add
rolb
push
mov
push
add
imul
arpl
push
insl
jae
xchg
add
mov
add
and
add
in
pop
mov
push
add
add
sti
mov
leave
in
or
add
jae
ljmp
cmp
data16
add
or
in
and
push
hlt
add
testb
add
mov
cs
fucomp
mov
loop
inc
add
lods
sahf
out
repz
add
clc
push
inc
add
fcmovne
pop
xor
mov
mov
cmp
pop
loopne
add
mov
roll
add
repnz
push
mov
add
or
add
add
mov
add
test
js
mov
das
sti
sbb
aad
cmpsb
add
movsb
add
add
movsl
addb
loope
popf
les
push
add
add
mov
add
adc
cmpsb
add
push
add
add
add
inc
add
or
in
arpl
cld
loopne
cld
jne
loopne
pop
push
addb
add
add
fwait
addb
mov
add
mov
add
add
cmpsl
jns
add
add
mov
mov
and
mov
inc
icebp
push
or
inc
add
popa
addl
out
inc
or
dec
jmp
push
add
int
add
loope
add
add
xchg
add
nop
add
mov
xchg
fcoms
add
xor
pop
rolb
icebp
mov
cmpsb
add
add
fucompp
cmpl
xor
sub
adc
int3
fstp
cmc
xchg
add
xchg
mov
and
cmp
add
insl
repnz
addr16
add
push
imul
shl
je
mov
cmp
out
aaa
loope
add
dec
pop
add
sbbl
add
bound
mov
add
pop
push
add
sbb
jbe
xor
stc
rolb
ret
rolb
mov
jns
add
add
scas
std
sub
mov
aas
dec
jecxz
add
add
data16
cli
in
add
std
scas
insl
dec
xchg
add
clc
push
hlt
add
add
add
addb
pop
xlat
lea
daa
mov
iret
cmp
add
add
jmp
add
pop
test
cmp
addr16
push
add
add
mov
jl
mov
add
bound
mov
dec
mov
stos
adc
jg
pop
mov
add
pop
dec
iret
rolb
fists
sbb
loope
addr16
pop
dec
mov
arpl
add
xlat
scas
mov
mov
add
dec
loopnew
mov
or
sbb
cmp
mov
cmp
and
out
repnz
add
js
jge
psllq
add
mov
add
sti
inc
fwait
jno
mov
jl
add
add
push
add
out
loop
xor
in
dec
jns
adc
test
mov
add
jno
orl
xchg
dec
dec
mov
mov
add
int3
dec
test
jns
mov
add
dec
stos
mov
lahf
mov
push
add
movsb
add
jmp
insl
dec
add
stos
xchg
negl
clc
add
dec
fucom
cmp
add
jmp
cmp
lods
ds
add
dec
jge
push
and
or
mov
add
sub
add
mov
adc
imul
add
inc
xor
mov
stos
aad
sbb
add
int
sti
imull
cmp
pushf
in
mov
add
jl
addb
ljmp
and
hlt
add
xlat
sub
adc
xor
or
daa
repnz
addb
imul
jns
push
add
inc
add
add
aam
adc
cli
cmp
and
icebp
in
in
out
push
add
sbb
test
add
add
add
add
std
aaa
rorl
cmp
inc
lods
arpl
add
xchg
add
add
push
insb
imul
add
and
pop
sti
std
sbb
mov
mov
icebp
lahf
addb
adc
icebp
cmp
push
add
in
push
add
sbb
out
push
add
rorl
xchg
add
mov
mov
ljmp
add
out
xchg
add
sub
mov
dec
push
sub
jae
add
sub
scas
ficoms
add
add
add
add
add
jb
sub
pop
int
rolb
cs
dec
testb
jp,pn
add
adc
sbb
add
mov
add
mov
add
jle
test
jno
add
dec
mov
dec
std
stc
dec
mov
and
mov
add
mov
add
data16
add
xor
mov
add
add
dec
ds
add
add
add
mov
and
mov
addb
subl
xlat
inc
bound
mov
movhps
cmp
mov
cmp
add
dec
test
pop
lods
testb
mov
mov
or
add
push
add
cwtl
lahf
stc
adc
jge
add
stc
add
mov
add
add
adc
add
scas
add
pop
add
add
pushf
add
mov
adc
cs
addb
mov
push
add
pop
add
ljmp
sub
fsubs
add
add
add
add
aaa
test
lock
in
xchg
add
rcr
out
add
inc
push
add
add
fsubs
mov
out
call
mov
arpl
mov
int
sbb
imul
cmpl
sbb
das
inc
xor
add
movsl
insl
push
mov
add
add
cmp
push
add
sbb
mov
pop
pop
xchg
add
repz
fwait
addb
std
jecxz
push
add
add
mov
add
jg
lea
out
cmc
rcl
shrl
loop
push
call
xchg
xchg
mov
arpl
sub
inc
cmp
inc
add
pop
inc
sub
pop
inc
add
loope
push
add
movsb
add
add
insb
and
add
mov
add
add
cltd
and
movsb
add
lea
mov
sub
in
fcoml
test
mov
sub
dec
dec
and
mov
repz
fstl
adc
add
add
push
add
add
aad
aas
pop
add
add
jmp
add
daa
lock
lret
fstps
xchg
add
add
aam
jno
repnz
add
add
add
outsl
mov
xchg
add
add
add
mov
add
add
mov
mov
popa
pop
jne
fwait
push
test
add
imul
cmc
push
add
and
mov
leave
mov
sbbl
xchg
daa
sub
cltd
mov
dec
jae
shl
subl
add
push
sbb
add
aaa
mov
dec
loopne
dec
cwtl
mov
push
add
add
adc
lds
fwait
cmp
outsl
sbb
add
add
or
sub
add
and
pop
and
add
inc
add
loopne
fists
add
add
push
add
or
mov
xchg
mov
add
add
push
add
clc
mov
sbb
rcl
int
add
in
sbb
adc
cli
cmpl
add
add
fsubrl
push
jge
add
dec
fldcw
add
mov
add
cmpl
jb
out
data16
add
add
sub
add
add
jae
loop
mov
or
adc
pop
sub
sub
add
add
and
add
mov
push
add
push
sarl
inc
xor
popf
mov
adc
enter
mov
dec
repnz
sahf
notl
pop
inc
je
mov
or
cmp
cltd
pop
add
mov
insb
jne
add
mov
add
mov
xchg
add
sbb
add
xor
or
pop
mov
les
lock
in
add
test
scas
stc
testb
add
mov
popf
sub
xchg
add
add
add
add
add
and
mov
push
add
sti
and
mov
jle
add
pusha
add
lret
out
fildl
push
and
les
out
pop
dec
and
fwait
or
add
sub
data16
sbb
cmpsl
imul
inc
loopne
pop
adc
nopl
mov
mov
cs
add
aaa
lods
jo
mov
add
cltd
repnz
mov
out
add
in
std
in
sti
stos
mov
mov
add
mov
add
add
pop
push
jb
int
sahf
or
xor
mov
and
mov
add
add
and
fs
add
repnz
aaa
mov
imul
pop
fidivs
inc
add
in
pop
adc
mov
inc
add
leave
pop
mov
cmp
push
fimull
loopne
rolb
in
addb
add
xlat
adc
pop
or
mov
mov
mov
mov
stos
pop
add
dec
xor
fnstcw
pusha
add
test
jne
data16
ljmp
add
andl
popa
jns
fbld
add
adc
stc
xor
xchg
std
rolb
sbb
pop
dec
stos
pop
cmpsb
add
data16
out
sbb
dec
push
add
push
mov
xchg
mov
push
add
int
pusha
add
add
sbb
add
add
fwait
and
mov
out
push
add
xchg
lcall
mov
mov
inc
add
cmp
xor
push
xor
or
mov
into
andl
adc
lods
in
jnp
les
test
add
push
add
push
add
cmp
pop
jb
jns
add
mov
add
mov
lock
jle
add
cli
test
add
inc
add
dec
fdivs
andl
fcomps
hlt
add
xchg
aas
fsub
fwait
insl
test
add
add
add
add
rolb
cmpsl
rep
subl
adc
sub
stc
lock
add
add
add
push
mov
xchg
int
fwait
jns
pop
pusha
add
add
add
add
mov
jns
outsl
sahf
add
inc
fiadds
insb
jno
mov
add
add
lret
add
mov
add
add
shl
jnp
popa
test
dec
xor
mov
xchg
data16
lret
mov
add
cs
cs
fldenv
mov
add
jg
add
add
inc
add
aam
testl
mov
add
cld
cs
add
out
dec
and
mov
sub
mov
jmp
push
add
jbe
pop
pop
stos
rolb
lds
mov
loop
mov
test
sbb
add
jecxz,pn
mov
lods
sub
jae
icebp
mov
add
outsb
sbb
and
mov
dec
movl
mov
xor
test
jne
loop
int3
mov
outsl
and
mov
insl
jae
pop
xorl
add
into
mov
mov
cmp
add
add
add
add
mov
sub
enter
cmpsl
fsub
add
add
movzwl
testl
cmp
and
add
int3
popf
adc
sahf
mov
inc
xchg
and
xor
add
add
sbb
xor
lret
mov
je
movsl
or
aaa
dec
and
add
in
loope
adc
int3
fbld
add
add
jae
shl
cmc
pmulhuw
mov
addb
stos
mov
cs
mov
dec
lret
or
dec
repz
push
add
add
add
mov
mov
xchg
add
jp
and
add
test
pop
xor
pop
jmp
sbb
xchg
popa
mov
mov
lods
mov
add
add
xchg
int3
stc
imul
add
aaa
test
das
mov
add
movsb
add
pop
repz
testb
dec
cmpl
pop
bound
mov
add
pop
cmpsb
add
add
or
and
jp
add
data16
add
fdivs
cmp
shl
pop
jmp
xchg
ret
pop
add
add
xchg
add
das
add
mov
sub
add
add
jb
jnp
int
or
add
dec
inc
add
lahf
dec
cmc
loop
add
pcmpeqw
mov
mov
fidivl
imul
call
stc
adc
adc
lcall
mov
pop
sbb
sbb
mov
mov
in
add
mov
add
and
mov
insl
test
add
cmp
je
daa
inc
add
inc
add
xor
addb
add
rcll
mov
cwtl
cmp
in
add
mov
bound
mov
push
cltd
mov
dec
cmp
pop
mov
bound
mov
fidivs
and
inc
add
add
add
add
cmc
into
mov
arpl
pushf
std
push
sbb
sub
mov
sahf
xchg
pop
std
cld
or
mov
dec
hlt
add
dec
jo
fcom
pop
push
add
add
sarl
shll
push
add
mov
push
add
add
fisubl
xchg
add
add
push
cld
test
adc
clc
shrl
int3
sarl
sbb
and
mov
popf
into
sub
lea
push
add
add
add
mov
aam
test
cmp
ret
in
adcl
out
inc
add
adc
js
add
pop
movb
add
add
inc
jmp
push
add
add
mov
add
add
xchg
fsub
add
mov
sti
pop
or
mov
cli
fldt
fildl
add
mov
lods
mov
jns
add
add
xor
rorl
iret
test
imul
push
jne
repz
scas
jecxz
inc
mov
add
add
pop
and
mov
sub
add
cli
fcomps
outsb
xorl
into
adc
fsubr
mov
mov
lea
pop
mov
f2xm1
add
jo
fcmovnu
adc
add
add
sub
jno
pop
pop
xor
cltd
cmc
push
add
sbb
mov
aad
scas
iret
mov
xor
cmp
mov
and
cmp
inc
add
inc
add
fsubp
add
fmull
test
adcl
das
lods
jno
add
push
add
add
or
pushf
mov
std
or
push
xchg
sub
loopne
mov
or
cmp
push
in
addb
add
out
lret
jnp
pop
mov
xchg
arpl
add
iret
sub
jp
clc
dec
sbb
add
dec
push
add
fildl
mov
mov
xor
push
mov
enter
cltd
cmovbe
add
add
xchg
add
mov
jle
test
add
lea
add
movsb
add
and
mov
aad
daa
jmp
sub
mov
testb
das
sub
add
cmpsb
add
das
xchg
lret
test
dec
dec
lcall
arpl
into
xchg
aad
add
out
andl
rolb
pop
adc
push
add
pop
pushf
xchg
addb
out
std
stos
push
add
cmp
dec
adc
jne,pn
mov
inc
add
add
add
add
and
mov
sub
add
jg
add
sbb
add
stc
push
add
lea
stos
leave
add
mov
or
sahf
popa
insl
iret
inc
mov
push
add
mov
loopne
stc
pop
cli
inc
cli
movb
or
out
sbb
movsb
add
sbb
or
push
ja
stos
jb
data16
sub
or
jns
jno
sbb
bound
mov
mov
push
add
mov
add
add
cmpsl
mov
mov
mov
mov
add
jg
roll
and
add
insl
dec
xchg
add
lret
sbb
cmpl
add
or
xchg
fs
mov
mov
popa
ja
inc
fnop
add
cmpsb
add
add
jp
add
add
mov
jle
xlat
inc
sete
ja
add
aas
paddd
add
pop
mov
dec
push
add
add
aad
shrl
xchg
je
mov
sbb
jge
std
push
xchg
sbb
scas
jle
cmp
stos
inc
add
dec
dec
adc
pop
addb
or
mov
add
ds
sub
add
add
enter
test
ret
fmull
add
add
in
out
or
add
in
jbe
pop
lock
sub
mov
ss
add
test
add
jp
add
add
mov
add
and
mov
jno
iret
xor
add
test
add
add
loope
add
outsb
push
add
or
adc
xchg
inc
add
not
lret
add
mov
call
add
mov
jb
adc
out
lods
lret
mov
ja
arpl
add
out
cld
pop
cmc
out
dec
xor
jl
add
mov
in
mov
fidivrl
add
pop
ret
cmp
loopne,pn
leave
outsl
sub
add
add
adc
pop
sbb
fcoml
fwait
lret
lret
ret
jbe
jo
mov
add
add
outsb
scas
pop
push
add
push
add
mov
mov
pushf
subl
sbb
daa
sbb
add
inc
and
inc
add
push
xchg
adc
cltd
xchg
add
add
jge
xchg
cmpsb
add
scas
adc
int3
xchg
addr16
call
stos
rolb
inc
add
add
pop
test
jno
or
pop
insb
jnp
adc
fiadds
mov
repz
gs
lcall
lret
mov
mov
or
mov
stos
and
mov
cld
sub
lret
hlt
add
dec
and
mov
dec
jae
pushf
int3
shrl
add
imul
xor
inc
cmp
add
cld
mov
lods
iret
jge
inc
jge
and
add
addr16
ret
iret
mov
sbb
btc
add
jae
add
mov
cli
xchg
inc
stos
cmc
leave
and
stos
cmp
enter
add
add
jne
add
cmp
popf
adc
add
incl
or
in
popf
push
pop
mov
xlat
push
add
in
scas
cmp
insl
jnp
add
repnz
mul
jbe
outsb
mov
add
loopne
iret
adc
or
inc
cmp
add
add
add
add
addb
or
xchg
cli
lret
sbb
add
lods
add
xor
adc
jo
fidivs
movsl
or
sbb
add
jle
jg
add
mov
mov
loopne
les
push
and
add
aas
xor
dec
jb
add
iret
or
dec
cmpsl
and
loopne
and
mov
adc
xchg
ret
les
adc
xchg
sbb
fnstenv
out
loope
out
outsl
int3
add
cmp
add
add
mov
fstpl
js
add
add
dec
jne
sub
add
mov
or
mov
iret
lods
aam
mov
stos
and
mov
add
mov
mov
push
xor
add
add
out
movb
mov
movsl
repz
add
mov
add
scas
ret
add
add
inc
add
sbb
imul
push
add
inc
add
add
daa
inc
add
aas
ficomps
add
add
cmp
add
or
es
fcmovnb
fst
jge
add
add
pop
popa
popa
mov
mov
add
addr16
add
cld
jl
add
add
cmpsb
add
repnz
lods
lret
mov
add
adc
in
rcll
add
add
add
or
in
adc
repnz
push
iret
popf
add
in
fwait
add
scas
jp
jb
xchg
add
and
ja
sub
dec
les
sbb
dec
adc
or
or
or
add
jae
jl
dec
or
add
and
add
and
mov
sahf
negl
add
mov
jge
add
add
lods
mov
push
mov
cmpsl
dec
dec
pushf
dec
insb
xchg
ds
jecxz
add
pop
add
in
cmp
aaa
test
out
mov
add
mov
cmpsl
mov
mov
add
fmull
pop
jl
scas
jl
test
add
jecxz
jg
add
pop
add
mov
add
iret
adc
pushf
cmp
add
add
test
jp
iret
fstpt
test
inc
dec
lea
sub
push
sub
xor
shr
dec
add
push
and
insl
push
add
cli
fldl
push
xor
movb
cltd
add
mov
outsb
incl
repz
rolb
inc
add
push
add
pop
call
dec
sub
mov
xchg
add
add
hlt
add
mov
mov
add
lret
adc
push
mov
add
inc
pop
dec
scas
aas
sub
pushf
xor
pop
mov
add
mov
add
mov
mov
daa
test
addb
add
mov
les
clc
stc
shll
mov
testb
add
aad
cld
inc
add
pop
scas
inc
inc
mov
mov
movsb
add
add
push
lock
add
adc
div
add
sbb
fcompl
add
add
add
jbe
add
add
fcoml
add
int3
add
add
add
arpl
push
icebp
inc
inc
add
push
cwtl
lcall
add
pop
jne
add
mov
add
add
jae
aas
mov
enter
jns
mov
push
sub
loope
cmc
je
xor
dec
lahf
xchg
mov
mov
mov
insb
jo
sub
jbe
inc
add
