mov
lret
pop
pop
sti
pop
clc
imul
mov
mov
loopne
fimull
test
or
add
int
xor
mov
fwait
inc
mov
cmp
sub
ret
movsl
mov
in
jb
jg
mov
cmpsb
xor
dec
push
and
mov
add
pop
int3
xchg
jnp
add
out
mov
cmp
mulb
add
add
add
mov
mov
fnstcw
sbb
je
or
leave
ds
std
jecxz
add
and
or
jnp
dec
and
aad
loop
loop
inc
sti
xor
add
loope
hlt
jecxz
inc
rolb
add
jns
addb
and
add
add
add
lret
into
aaa
test
mov
mov
add
scas
leave
cmp
and
push
in
std
and
aam
lea
loope
pop
int
add
xchg
and
lahf
mov
ret
add
sbb
pop
sahf
push
push
push
push
test
add
ss
imul
cwtl
es
xlat
stos
xchg
jl
xor
push
mov
scas
push
stos
add
dec
sub
add
jo
mov
push
lods
movsl
fs
mov
outsl
insb
cmp
add
sub
add
sub
push
add
and
addb
push
test
repz
orl
call
das
pop
lret
xchg
jp
data16
add
imul
jne
xchg
es
and
push
scas
jge
fmulp
fdivl
std
lret
and
lock
lret
xor
and
sbb
test
ficoml
aam
or
loop
test
xchg
mov
stos
popf
cmp
adc
pop
dec
jae
jne
or
add
cli
jne
mov
bound
adc
stc
gs
pop
addb
dec
movsl
or
into
jmp
inc
add
popf
aam
out
cltd
imul
jb
popa
cmp
out
adc
out
jne
fwait
adc
aad
pushf
mov
leave
outsl
addb
fisubl
inc
add
lret
enter
mov
jecxz
pop
test
mov
adc
mov
xlat
dec
cs
inc
add
popf
in
inc
push
out
aam
fwait
cmp
clc
shlb
imul
cmc
adc
add
xor
xor
mov
and
inc
cmp
xchg
pop
cmp
mov
sahf
jge
mov
lret
adc
dec
lret
bnd
and
dec
cmp
inc
add
dec
jb
adc
cmp
setbe
and
mov
addb
imul
ret
cmc
or
add
mov
or
cmp
pop
ret
xchg
leave
popa
mov
arpl
dec
xor
or
int3
mov
hlt
sub
dec
out
pop
inc
cmp
paddb
dec
addb
out
int3
pop
stos
pop
xchg
cmp
xchg
jbe
test
inc
ss
xchg
ret
dec
mov
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
mov
and
push
iret
inc
add
addb
ret
mov
gs
addl
out
rolb
mov
xor
jge
jns
sub
inc
add
jae
adc
popf
ret
cmp
popa
jb
test
rcrl
imul
push
jae
add
addr16
jge
push
cmp
insl
inc
test
dec
inc
mov
add
dec
xor
or
and
jo
addb
pop
adc
xor
xchg
insl
push
leave
dec
arpl
jg
insl
decb
ret
ja
mov
add
rol
into
fs
add
fimuls
sbb
sub
add
or
add
jp
add
cs
add
sub
dec
pop
adc
mov
mov
icebp
mov
add
dec
aad
imul
iret
mov
enter
lahf
cmp
xchg
call
in
add
in
jmp
arpl
inc
or
cwtl
in
xor
push
xlat
mov
lods
and
add
in
daa
push
mov
push
repz
test
inc
add
pop
sub
mov
inc
add
jno
cmp
sbb
sub
sub
inc
add
sub
cmp
xor
and
lcall
out
cmp
ja
add
mov
mov
cltd
loop
sti
je
add
stos
std
mov
icebp
sbb
jge
imul
pop
repz
loop
add
arpl
xor
sbbl
pop
imul
sbb
xor
add
or
ret
mov
movsl
fisubs
movups
fisttps
testl
orl
ss
inc
add
pop
cmp
or
pop
addb
add
mov
cmp
into
in
rorb
sbb
jnp
pop
movsb
cmp
cmp
mov
cli
lahf
jmp
xlat
xor
std
inc
xor
popf
mov
sbb
push
xchg
insl
push
add
ret
lahf
sbb
add
or
or
push
mov
dec
int3
jb
add
enter
cmpsb
xchg
and
aam
icebp
ret
pop
in
inc
add
cmc
mov
push
push
mov
dec
dec
jnp
movsb
inc
add
out
push
leave
jecxz
testl
stc
repnz
out
fs
mov
mov
clc
dec
dec
rolb
xchg
sub
pop
call
dec
sbb
mov
test
adc
or
add
mov
xor
add
cld
pop
mov
sub
xor
into
test
jle
aaa
and
std
sbb
xlat
mov
push
add
mov
sahf
enter
lds
cltd
sti
inc
add
add
jnp
push
out
pop
popa
stos
push
or
das
stc
and
inc
add
push
sbb
loopne
push
sbb
add
sub
sub
pop
je
add
mov
out
pop
dec
xchg
xchg
cmc
add
mov
in
int3
and
xchg
stos
fdivs
popf
addl
lods
adc
and
adc
nop
and
push
add
scas
add
sub
and
cs
inc
add
or
daa
out
xlat
xchg
inc
xchg
nop
mov
hlt
cmp
sub
outsb
add
fiaddl
jle
jno
jns
lcall
fbstp
call
and
xor
push
mov
add
xchg
call
jnp
ljmp
add
push
lcall
sbb
loopne
push
cmp
pop
push
push
adc
add
inc
cmp
pop
addb
bound
aas
stos
jno
sbb
std
in
lret
inc
pop
sbb
rcrb
mov
add
inc
push
enter
fnstcw
cs
mov
cmp
nop
sbb
fidivrs
xor
push
out
cmp
call
repz
cwtl
sub
stos
xor
ljmp
fwait
sub
push
test
add
push
lods
lret
sarl
adc
adc
sub
push
adc
lods
insb
xchg
xor
outsl
pusha
add
fs
inc
aam
xchg
sbb
xor
test
stc
repz
mov
push
add
xchg
and
xor
cmpsb
dec
inc
add
cs
jp
ljmp
mov
push
jnp
or
jb
std
cld
xor
push
adc
sub
fisubs
adc
lock
add
mov
cmp
test
call
lret
mov
loop
mov
mov
enter
pop
push
jnp
push
jno
lods
inc
add
shlb
popa
lahf
adc
mov
ja
push
ja
mov
add
inc
fsubr
xor
rclb
push
jno
pop
divl
pop
bound
sub
retw
ljmp
jne
jmp
jmp
cmp
cmp
add
lret
push
add
dec
xchg
jo
pop
addb
ljmp
dec
and
imul
insl
dec
sub
out
jle
dec
cmp
adc
inc
push
ret
cmp
test
push
pusha
add
movb
test
add
daa
push
jle
dec
lcall
jb
fisubs
or
jno
push
and
add
scas
call
jmp
sbb
adc
xor
sub
push
in
add
add
inc
dec
xchg
mov
cwtl
ja
sub
or
iret
lcall
loopne
add
aam
ljmp
xlat
jno
push
clc
rolb
add
fnsave
pusha
add
outsl
push
int3
jecxz
jl
divl
pop
xchg
add
out
outsb
mov
mov
inc
inc
add
add
cmp
cli
cli
addb
leave
pop
xchg
xor
sub
loopne
pop
mov
pop
out
repnz
sti
loop
into
pop
rolb
stos
lods
sub
jbe
and
test
fcomps
test
mov
push
iret
popf
cmp
mov
lods
fcoml
add
rcll
and
mov
and
leave
lds
sbb
movb
xor
xchg
cwtl
mov
insb
jo
jge
mov
out
filds
xchg
out
xchg
mov
push
sar
outsl
dec
and
arpl
or
add
mov
add
mov
adc
add
dec
and
mov
sub
xor
jp
add
push
adc
jl
pusha
add
imul
push
xchg
outsl
and
lret
jb
adc
cmpsl
fldl
lea
cmp
add
dec
in
xor
int3
mov
and
mov
add
fdivs
push
in
sti
fisubrs
cmp
cmpsb
add
mov
mov
cmc
mov
rolb
add
inc
add
xchg
sub
inc
add
push
popf
push
adc
imul
pop
popf
and
sub
or
aad
mov
sub
add
cwtl
out
mov
es
jmp
shr
and
push
fcomps
cmp
es
pop
pop
fcomps
iret
inc
js
add
insl
add
mov
cmpsl
xor
add
mov
inc
mov
jp
cltd
pop
fistpl
dec
sbb
mull
add
lock
in
imul
add
lret
mov
xchg
insb
loopne
sub
push
lods
lcall
dec
call
icebp
lea
mov
pop
pop
int3
addl
add
mov
insb
pop
cmc
loop
add
sbb
scas
movl
sahf
cmp
xchg
cmpsl
aam
and
fdiv
gs
mov
sbb
push
lret
lods
sub
stos
std
arpl
out
insb
ja
xor
cwtl
ljmp
mov
lret
dec
lret
inc
add
jg
inc
in
iret
sub
das
mov
in
cmp
fistl
in
je
add
rorb
repz
adc
add
pop
arpl
cmp
add
jae
add
shrb
gs
add
adc
in
adc
lods
arpl
xor
push
mov
fsub
dec
pop
fs
mov
add
xlat
xchg
mov
add
sbb
out
loop
adc
add
mov
mov
mov
cmp
hlt
sub
add
and
push
insl
fwait
pop
ljmp
push
popf
aaa
or
mov
sti
sbb
sub
cmp
pusha
add
sbb
icebp
mov
insb
dec
mov
daa
dec
ret
outsb
push
fisttps
sub
in
add
js
or
push
js
jecxz
subl
movsl
loope
xchg
cmp
and
jmp
push
xor
mov
inc
add
addb
xchg
test
stos
notl
scas
or
andl
cmp
add
fmulp
sub
les
sub
cli
lret
aad
test
cmpsb
and
or
push
lds
jl
cld
jne
dec
negl
sbb
lds
adc
mov
fmuls
shl
test
lods
test
ret
dec
sbb
pusha
add
movsb
xchg
sti
movsb
jo
or
inc
loopne
shrl
sar
f2xm1
out
daa
dec
dec
outsl
push
mov
test
lcall
sbb
test
gs
add
mov
and
inc
sub
jle
cli
jg
pop
addb
cmp
cmp
xchg
add
add
fisubl
jno
addr16
push
divb
test
add
es
lds
sbb
mov
mov
mov
mov
add
sarb
add
mov
inc
add
sub
add
add
dec
sti
hlt
sbb
push
scas
dec
enter
and
xchg
cwtl
mov
rclb
mov
mov
repnz
adc
bound
jge
stc
or
mov
mov
iret
rolb
mov
add
addb
rcll
fcmovnb
fbld
add
mov
cltd
les
popa
sub
sub
fmul
cmc
mov
add
add
jns
add
add
add
add
pop
push
jmp
xchg
xlat
scas
add
out
ja
add
mov
jnp
into
push
insb
adc
loopne
xchg
call
neg
or
sub
pop
mov
add
pop
pop
in
adc
insl
mov
pop
and
xchg
sub
cld
das
nop
xchg
int
fisttpl
inc
add
icebp
push
xor
aaa
mov
movl
jae
and
xchg
imul
cltd
push
pop
mov
add
adc
sub
xchg
jnp
mov
sti
mov
mov
mov
repnz
xchg
clc
cmp
lea
jae
pop
sub
push
shlb
bound
mov
jb
pop
adc
pushf
mov
push
xchg
fstpt
pop
xchg
rorl
xor
push
dec
xor
pop
into
out
pop
mov
leave
fcoml
or
add
push
icebp
jnp
lods
mov
xor
mov
cmp
add
mov
cmp
pop
lahf
aam
push
cmp
movsb
mov
mov
add
push
add
jae
add
cmp
inc
add
insb
insb
rorl
xchg
mov
rcrl
gs
pop
mov
jns
enter
stc
sub
cmp
jg
cli
mov
nop
add
les
jl
dec
sub
dec
inc
adc
cmp
add
dec
or
popa
decl
push
xor
mov
lock
mov
mov
add
cs
cltd
popf
inc
in
jl
in
ds
pop
jns
das
mov
in
or
scas
xchg
sbb
sbb
inc
add
rcll
fisubl
jge
in
sub
std
loope
add
dec
imul
cmp
xchg
and
mov
jb
mov
ja
inc
ficompl
mov
pusha
add
pop
pop
test
rcll
ja
ret
sbb
mov
shl
shrl
and
adc
pop
rolb
out
push
add
xor
test
pop
or
push
add
add
or
imul
add
int
in
sbb
test
or
jl
call
add
imul
add
aaa
inc
jle
aad
orl
mov
scas
clc
sbb
sub
mov
sar
mov
ds
nop
shlb
add
add
push
jno
test
leave
pop
xor
aas
ficompl
lds
mov
mov
shll
js
mov
add
push
xchg
pop
fwait
les
mov
fcmovnb
add
add
pop
out
add
fdivs
push
scas
pop
lock
add
es
daa
js
add
movsl
rolb
movsl
xchg
jecxz,pn
sub
adc
ffree
add
jle
stos
mov
add
add
cmp
or
push
or
pop
fcom
insb
sbb
pop
out
fistps
adc
cmp
sbb
icebp
push
subl
subl
mov
jmp
add
sub
sahf
push
cmpsl
and
mov
pop
dec
mov
stos
das
es
js
add
pop
pushf
fildll
ret
lahf
in
inc
add
dec
jmp
mov
out
les
clc
cmpsl
aaa
xchg
pop
aad
lds
pop
mov
add
test
or
jne
aaa
repnz
aaa
and
test
nop
hlt
mov
xchg
pop
add
cmovae
add
rorl
pushf
or
stos
lods
mov
add
addb
dec
shlb
pop
addb
mov
xor
sub
rcrb
rorl
jge
addr16
je
insb
jp
out
addb
xor
movsl
push
mov
add
push
add
outsl
les
lods
lock
pushf
or
add
ret
divl
add
add
xchg
mov
add
ret
aaa
xchg
popa
inc
add
dec
hlt
jnp
cmpl
add
mov
add
sti
int3
popl
mov
and
shr
jne
sarb
push
pop
inc
add
jnp
test
rorb
sub
add
add
fwait
jno
push
icebp
sbb
fdiv
lahf
hlt
loopne
and
sub
adc
inc
rolb
shll
add
jns
jbe
popf
pop
movsl
mov
and
mov
cli
sub
cmc
add
shrb
push
add
mov
into
ficoms
cmp
jp
out
stos
jp
jnp
popa
xor
pop
dec
mov
addb
dec
nop
jb
fidivs
lods
mov
pushf
fcmovnu
jae
add
andl
jbe
aaa
jb
shl
sbb
out
xchg
sub
mov
aam
fwait
test
fwait
sti
insb
movsl
dec
push
fnsave
pop
mov
xchg
movsb
jns
shlb
cmp
xchg
in
push
cmp
sub
add
outsl
jle
xchg
cmp
cmp
push
inc
mov
das
imul
jno
outsl
inc
insl
les
icebp
sub
fldt
cwtl
inc
mov
lahf
and
das
je
out
fs
cli
sahf
xor
loop
add
jbe
popa
fcomi
ror
xor
fldl
cmpsl
push
sub
insb
adc
cmpsl
test
nop
sbb
out
mov
loope
js
add
lea
dec
in
arpl
js
jmp
xlat
repz
lock
jns
aam
je
pop
jle
rolb
xor
or
cmp
rcll
lods
inc
add
in
jae
cmp
ds
push
fs
aam
add
clc
dec
movsl
sarl
outsl
dec
xchg
or
mov
jl
repz
sub
sarb
mov
and
sbb
add
sbb
mov
jns
xchg
adc
int3
hlt
pop
add
daa
cmp
adc
adcl
add
cmp
stos
xchg
pop
xchg
inc
add
out
sahf
and
fisubrs
fwait
lret
mov
subps
mov
jl
jnp
add
test
xor
pop
pushf
mov
std
adcl
inc
add
ret
mov
xchg
jo
stc
push
shll
xor
cmp
add
dec
mov
ds
fidivs
je
js
sub
jp
adc
fmull
xor
inc
add
and
mov
call
std
inc
fcmovbe
ljmp
loope
clc
sbb
push
cmp
imul
call
out
cwtl
hlt
mov
adc
lcall
inc
push
dec
sbb
add
jp
subl
mov
mull
ss
mov
pushf
xchg
rolb
jecxz
mov
dec
mov
add
ja
lahf
xchg
jbe
aad
push
add
sub
pop
pop
jp
loop
fisttpll
push
xor
mov
push
insb
out
add
inc
add
sbb
add
fs
xor
rorl
sub
add
out
jb
dec
and
movsl
ds
lcall
lret
mov
jns
sbb
insb
push
inc
add
cmp
call
add
daa
hlt
xchg
sbb
mov
lea
stos
hlt
loopne
mov
pop
or
sub
xlat
hlt
xor
aad
add
cmp
mov
aad
cmovl
in
push
in
repnz
ljmp
in
fidivl
dec
fldl
adc
mov
xor
inc
add
inc
or
add
fdivl
jno
cmp
leave
mov
inc
sbb
mov
int
out
popa
insl
fnstenv
icebp
js
xchg
push
pop
mov
mov
sub
mov
dec
push
scas
loop
add
inc
js
shll
cmpsb
int3
movsl
scas
les
fdivrl
and
xor
pop
outsb
cmp
mov
cmp
cli
jge
and
loopne
test
xchg
pop
jno
xor
jmp
arpl
sub
test
dec
xchg
ret
fsubrl
sahf
bound
nop
push
sti
rcll
dec
rolb
cs
arpl
repz
unpckhps
sbb
pop
rolb
jmp
loope
aas
nop
cmp
jmp
stos
scas
cmpsb
rorl
popf
or
add
testb
jnp
jp
sbb
lret
enter
dec
pop
add
sti
int3
push
add
js
fiaddl
mov
mov
pmaxsw
xlat
xchg
add
push
push
stos
lods
pop
es
add
in
xor
addb
mov
mov
test
push
lea
jecxz
push
add
lock
addb
sub
add
mov
jecxz
pusha
add
pop
jo
repnz
imul
cmc
jns
inc
insl
bound
daa
add
movsb
cmc
imul
add
insl
stos
bound
cli
das
dec
bound
rcrl
stos
adc
mov
add
and
sbb
inc
add
je
dec
pushf
popf
fisttpl
push
add
cld
into
push
inc
js
push
mov
xor
popf
mov
dec
sahf
fwait
sub
fdivr
mov
int
test
xchg
aad
sbb
addb
scas
cmp
test
repnz
inc
add
mov
and
sti
xlat
inc
add
call
insl
test
add
loop
pusha
add
mov
int
aam
push
cld
arpl
mov
cmpsb
pop
popa
push
add
add
shrl
jp
movsl
jb
cld
fsubl
mov
mov
aad
movb
and
or
push
sbb
ret
add
sbb
jmp
iret
add
enter
cs
mov
add
test
mov
mov
fisttpll
push
lds
loop
dec
in
sahf
lahf
clc
mov
sub
jl
add
icebp
jle
add
mov
add
movsb
xor
insl
arpl
js
rcll
inc
add
inc
mov
dec
cltd
in
cmp
outsl
roll
push
pop
jl
dec
in
xchg
cld
xor
jno
mov
daa
mov
xor
xchg
cmp
mov
push
cld
cld
lret
xor
adc
push
lds
sbb
cmp
pop
push
repnz
test
add
xchg
mov
std
xor
sti
stos
mov
inc
add
mov
push
gs
xchg
push
repnz
jns
sar
movsb
bound
rorl
loope
ds
mov
add
inc
cmpsl
mov
add
imul
ret
daa
ret
cmp
push
nop
cmp
movb
mov
or
or
rcl
test
pop
sub
mov
mov
adc
add
int3
adc
mov
push
inc
add
mov
cmp
xlat
dec
mov
jp
add
fstpt
arpl
jb
rcll
mov
push
jecxz
std
add
pop
int
fiadds
push
cmpsl
addb
stos
mov
js
aas
mov
fdivrs
pop
mov
int
cld
inc
adc
and
test
push
jbe
mov
cli
clc
test
pusha
add
add
repnz
ljmp
or
leave
inc
add
xchg
fcomi
ja
pop
sub
jecxz
lea
fstpl
jecxz
mov
mov
loope
push
fistpll
das
popf
je
add
mov
mov
push
mov
xor
mov
gs
imul
push
popf
sbb
stos
test
jae
es
cmp
and
add
and
lret
fildl
into
dec
inc
add
mov
out
loop
sbb
mov
nop
jmp
sub
fs
push
iret
pusha
add
ret
mov
jle
cld
add
fcomps
add
enter
mov
ljmp
add
add
mov
adc
fistpll
testl
sub
in
inc
test
dec
pop
test
add
sub
fstp
insl
les
dec
scas
fs
loope
or
aam
xchg
dec
leave
mov
cmp
xchg
fidivrl
inc
jns
hlt
xor
or
fwait
and
std
adc
inc
in
push
add
or
cmp
test
out
xchg
jp
test
jno
pop
push
add
sahf
ret
les
pop
or
notb
mov
sahf
mov
jg
push
aaa
outsl
mov
dec
cld
cwtl
adc
sub
lret
stos
ss
popa
lret
xor
cli
xchg
adc
add
mov
stos
jo
stos
lds
rclb
ret
std
xchg
fs
scas
inc
add
dec
mov
cmpsb
xchg
jmp
testb
jno
dec
jnp
push
dec
imul
add
insb
inc
fsubrs
cmp
lret
addb
push
outsb
flds
and
mov
es
aam
addb
or
adc
cmpl
add
call
and
add
jl
pop
cmp
jl
mov
filds
add
add
xchg
push
addb
lcall
add
sbb
lret
adc
xchg
in
dec
movsl
jb
into
or
out
loop
aas
and
nop
ja
xlat
fsubr
pusha
add
dec
and
mov
imul
xlat
push
out
or
test
repnz
mov
sub
in
repnz
adc
add
xor
add
or
add
cmp
push
in
dec
cld
jg
pushf
rcrl
inc
add
mov
cmp
dec
lods
and
mov
cmp
dec
xchg
bound
shrl
movsb
js
pop
dec
add
movb
imul
bound
sub
imul
ljmp
out
mov
fdivrs
hlt
push
mov
mov
cli
jge
scas
mov
adc
xchg
fwait
dec
movsb
or
add
sbb
ljmp
addb
push
sbb
mov
int3
pushf
fisttps
mov
pop
xchg
out
add
or
add
sbbl
add
cs
ret
inc
add
inc
mov
mov
rcrl
xchg
xor
cwtl
xchg
and
add
lods
movsl
dec
xchg
lret
das
imul
mov
jo
sub
int3
and
pushf
stos
mov
mov
test
addb
lock
dec
mov
addr16
xchg
pop
imul
cld
sbb
add
test
mov
outsl
jno
xchg
insl
fidivl
addb
ljmp
mov
xchg
xor
lcall
mov
pop
mov
pushf
int3
inc
add
pop
int
mov
cmpsb
pop
and
mov
push
add
dec
popf
mov
pop
pop
mov
add
pcmpgtw
mov
push
add
es
cmp
adc
aam
test
mov
jo
inc
fldcw
jb
push
xchg
lret
jno
pop
or
push
xchg
inc
add
stc
add
xchg
sub
cltd
sbb
inc
lret
add
push
add
or
adc
and
pop
fisubrs
mov
test
ljmp
ds
jge
test
sbb
mov
sbb
lea
lret
and
cmp
pop
ds
inc
scas
mov
xor
fs
push
cwtl
inc
add
mov
aam
xor
dec
imul
jmp
pushf
clc
stos
xchg
jns
in
adc
ret
xor
add
loopne
adc
mov
aas
mov
mov
or
sub
sarb
scas
sbb
mov
xchg
js
pusha
add
rolb
pop
inc
xchg
push
les
cmp
addb
jae
mov
in
in
add
in
inc
add
dec
mov
lret
dec
dec
sti
or
sbb
sbb
and
jg
lds
sbb
insb
das
mov
mov
jp
sbb
js
iret
bound
cmovle
lds
cli
ja
fwait
sub
pop
ss
sbb
add
and
ss
je
pop
outsb
ds
rcr
fiaddl
jne
mov
stc
mov
scas
out
add
dec
testl
cmc
inc
cmp
addb
push
sub
dec
jne
and
cld
push
jne
divb
push
xchg
repnz
lahf
daa
sub
add
add
out
jge
adc
lds
dec
mov
insb
jnp
cld
jno
inc
xchg
and
sub
dec
les
aad
leave
nop
stc
out
or
push
adc
fdivp
push
enter
adc
adc
mov
scas
mulb
fsubrs
iret
mov
adc
mov
out
out
add
push
rcr
xchg
iret
cmovbe
repz
add
imul
orl
pop
xlat
jge
out
sbb
out
fildl
in
cmpsl
rol
arpl
sbb
cmpsb
xor
into
js
add
pushf
fcom
push
xor
add
xchg
in
ljmp
jp
out
cli
mov
and
push
fwait
sbb
fldenv
movsb
std
repz
sbb
xor
inc
xor
mov
push
mov
inc
and
add
mov
popf
mov
xchg
shlb
xchg
add
pop
movsb
adc
inc
inc
add
inc
add
add
inc
dec
ret
call
and
stos
or
or
add
cmpsb
cmp
lahf
imul
insl
and
sahf
push
movsl
outsb
dec
push
add
not
fisubrl
out
mov
addr16
jns
imul
add
and
pop
pop
or
jo
mov
leave
ret
and
clc
stos
add
fnsave
rolb
pushf
mov
jle
ss
adc
add
sub
add
bound
test
xor
je
mov
or
dec
lods
cld
stos
mov
jnp
sbbl
fwait
fs
ds
sub
sti
ljmp
outsb
sahf
sbbl
dec
inc
add
add
xchg
cwtl
sub
xchg
cmp
dec
mov
or
rolb
sahf
mov
mov
movb
mov
adc
outsb
add
add
add
mov
add
adc
adc
mov
mov
pushf
mov
adc
and
lcall
push
mov
add
mov
adc
filds
pushw
sbb
add
addr16
mov
dec
out
and
and
or
sbb
cs
or
rolb
add
pop
dec
mov
pop
fdivs
sbb
mov
xor
sbb
in
sti
daa
sub
pop
imul
add
sbb
adc
loop
call
inc
fildl
ret
or
dec
ljmp
push
add
mov
imul
push
xchg
cltd
rorb
clc
push
rcrl
idivl
cld
mov
aas
test
mov
gs
mov
mov
sub
mov
outsb
xchg
xchg
lock
fcoms
fldenv
lret
loopne
testl
std
insl
dec
cld
and
or
pop
or
out
shlb
pop
cmpsb
dec
jo
movb
add
dec
mov
xlat
mov
dec
call
push
push
lods
loopne
add
xchg
mov
cmpsl
imul
cmp
clc
pop
cli
in
xchg
inc
stc
mov
mov
cwtl
mov
shll
pushf
push
push
movsl
mov
jl
pmulhw
leave
test
and
mov
pusha
add
pop
lods
jl
mov
jl
sbb
inc
add
sti
inc
add
inc
add
mov
pop
int3
test
cwtl
rcrb
icebp
or
add
ljmp
or
sahf
jecxz
mov
add
imul
add
sahf
push
dec
mov
dec
mov
imul
dec
gs
aam
cmp
out
daa
jne
imul
pusha
add
and
xchg
jle
ror
dec
addb
mov
movsb
lds
add
mov
add
add
imul
into
mov
add
divb
add
jle
es
adc
jns
movb
jp
xor
data16
cmp
cs
dec
push
mov
mov
outsl
fidivl
addb
ss
adc
mov
jne
stc
jne
pop
mov
mov
mov
add
inc
add
pop
jns
ret
cmp
push
push
cmp
sub
mov
dec
xor
and
add
jbe
dec
out
ds
jle
mov
jge
dec
xor
xor
xchg
mov
adc
imul
or
cmp
adc
jge
cmpsl
mov
add
insb
dec
adc
lods
push
dec
mov
loop
rclb
sar
test
mov
cmp
pop
rolb
push
add
loop
pop
pop
mov
addb
fs
mov
fucomi
adc
dec
int
cs
add
pushf
push
mov
add
or
popf
push
lds
int3
or
sbb
adc
lea
mov
test
out
cmp
bound
addb
iret
cmc
mov
add
je
hlt
dec
mov
add
pop
xchg
cmp
add
add
loop
fs
call
mov
stos
ficomps
jb
leave
lret
into
jbe
adc
dec
pop
xchg
dec
in
and
addb
mov
add
xchg
dec
mov
xor
into
pop
cmp
repnz
test
shrl
cmp
lcall
add
notb
test
popf
insl
inc
add
sub
fidivrl
xchg
aaa
loopne
adc
cmp
shlb
jle
add
inc
add
sub
push
ficompl
fs
int3
pop
les
and
xchg
arpl
outsl
lret
xchg
adc
sti
jp
dec
dec
stos
dec
addr16
ret
cmp
jne,pt
rcr
jne
inc
dec
nop
mov
add
test
xchg
in
bound
jae
movsb
push
roll
dec
dec
fsubs
out
add
cld
pop
jbe
cwtl
cwtl
das
movl
fwait
jno
mov
mov
fsubp
xchg
xchg
inc
add
add
ss
add
nop
frstor
push
add
mov
add
les
pop
or
add
mov
push
inc
fwait
mov
sahf
rorl
jb
cmpsl
push
add
addr16
jae
pop
test
add
jnp
jne
mov
test
loop
addb
call
push
or
push
ds
inc
repnz
sbb
push
mov
push
cmpsb
int3
aas
pop
addb
lds
cmp
cmpsb
inc
add
adc
xchg
fdiv
inc
add
or
add
add
add
ss
or
pop
addb
xchg
addr16
jp
pop
and
js
fldcw
pop
iret
or
mov
out
movl
xchg
jbe
mov
aam
xchg
pop
sahf
jmp
adc
sti
call
ss
inc
add
push
sbb
add
outsb
push
test
or
jge
mov
scas
mov
dec
test
sbb
lret
adc
repnz
mov
add
imul
in
popa
or
add
lahf
and
jmp
es
movb
sub
or
pop
cmp
push
stos
adc
adc
push
scas
pushf
xor
cmpsb
lock
add
dec
testl
mov
sub
mov
outsb
daa
adc
out
ret
cmp
add
jle
inc
add
add
loopne
or
inc
sub
pop
xrelease
xchg
std
ja
mov
shlb
add
testb
push
les
out
jnp
mov
jp
in
pop
addb
popf
mov
lcall
out
mov
add
roll
rcl
push
add
std
add
jg
add
inc
push
stos
rol
add
ds
xchg
push
jns
adc
push
xchg
sub
jb
pushl
jle
xor
push
test
adc
rclb
js
fisttpl
clc
mov
out
mov
jb
cltd
mov
imul
push
pop
and
rolb
add
gs
popa
mov
sub
sub
cmp
jle
add
sub
aaa
inc
add
xchg
popa
loopne
loope
cmp
scas
rolb
add
pushf
stos
test
mov
stos
sarl
push
mov
add
jns
push
add
test
outsl
pop
adc
xchg
pop
insb
inc
add
je
and
sbb
les
xor
sub
mov
dec
testl
mov
add
cwtl
mov
fneni(8087
xchg
mov
add
inc
add
xchg
xor
lcall
dec
push
pop
inc
addl
add
jno
push
add
cmpsb
lret
add
mov
repz
rolb
ljmp
mov
add
add
pop
insl
or
inc
xchg
adc
add
jns
cmpsl
rolb
pop
pop
aad
jae
mov
or
and
les
mov
in
cmpl
jno
leave
push
adc
push
adc
xchg
xchg
pop
insl
xor
add
out
sub
xchg
mov
add
mov
push
std
leave
aaa
mov
shlb
movsl
inc
add
shlb
xor
push
xchg
mov
rolb
and
lock
pop
cmpsb
lea
js
neg
bound
adc
add
lods
imul
xor
sbb
sub
mov
out
ficompl
in
push
push
xchg
push
mov
dec
in
imul
stos
addb
aaa
outsl
out
add
or
adc
cmp
into
outsb
js
aas
or
aad
stos
in
sub
xchg
pop
cwtl
sbbl
sub
outsb
pop
mov
addb
add
lret
fisubl
and
nop
pusha
add
xor
jg
pop
data16
mov
and
pusha
add
rorl
sbb
and
add
or
movsb
jb
push
add
mov
scas
test
popa
add
sti
fistl
mov
pop
dec
adc
dec
xor
push
popa
iret
adc
addb
push
or
add
adc
adc
sub
add
cmp
aaa
fwait
cmp
jo
add
test
lret
sar
dec
popa
xchg
sbb
cli
rolb
sub
idivl
addb
sbb
cmp
cmp
aam
add
icebp
adcl
adc
sbb
in
pop
outsb
dec
sub
add
sbb
ds
imul
xchg
les
rolb
xchg
addr16
sbb
mov
pop
shlb
es
xchg
or
out
ds
xor
inc
pop
xchg
mov
add
inc
add
mov
or
mov
jbe
out
add
add
cmp
dec
mov
pusha
add
mov
mov
fistl
add
test
xchg
adc
nop
cld
loope
adc
dec
xchg
fs
jmp
jne
stos
jl
inc
xor
out
jl
mov
mov
fsubrs
sub
fldcw
mov
mov
and
call
adcl
add
insl
adc
test
xor
mov
inc
sti
add
in
in
loope
jp
xchg
sbb
insl
mov
add
test
js
add
arpl
jne
das
repnz
and
lods
mov
cmpsl
leave
test
outsb
push
ret
popf
xchg
adcl
jo
adc
push
and
mov
pop
mov
insl
sub
lods
addb
push
sub
dec
daa
mov
testb
xchg
sub
movsl
mov
jae
xchg
push
divl
cmp
xchg
and
test
cmp
sbb
xor
pop
mov
lahf
fscale
push
mov
cmp
out
popf
pop
ds
ret
stc
les
jmp
lret
sahf
repnz
imul
xchg
and
rolb
loope
push
mov
adc
inc
add
lds
adcl
sbb
addb
mov
frstor
test
repnz
repnz
add
adc
aad
cmp
notl
dec
mov
inc
pop
mov
testb
jmp
add
mov
mov
lods
jg
pushf
push
jb
pop
pop
pop
clc
popa
out
enter
add
add
cmpsl
lea
aaa
inc
add
inc
jl
add
lcall
ja
rolb
insb
test
and
pusha
add
aam
mov
aam
cmpsl
and
dec
jae
and
jno
jp
adc
cmp
add
add
add
pop
jl
divl
inc
add
cld
in
aaa
xchg
aaa
mov
addr16
loope
andl
or
pop
gs
fistpll
mov
add
bnd
xchg
imul
jbe
xor
mov
and
loop
or
iret
in
pop
popf
mov
cwtl
or
loopne
popf
add
xchg
sbb
lds
test
pop
stc
pop
sub
xchg
mov
test
fistl
sbb
in
cmp
les
loopne
xor
hlt
mov
mov
add
push
scas
aad
and
dec
xchg
ret
jne
mov
cmp
les
xchg
mov
std
xor
outsb
add
popa
into
mov
mov
mov
adc
adc
inc
add
mov
mov
and
stos
imul
cmp
xchg
into
sahf
test
and
xchg
lods
pop
movsl
cmc
sub
sub
xor
imul
pop
cmp
lahf
mov
xchg
pop
cwtl
jnp
adc
adc
or
push
sbb
rcll
sbb
enter
inc
imul
fidivrl
arpl
add
fistl
test
sahf
out
add
jno
add
xchg
mov
xchg
movsb
inc
xor
jmp
inc
add
xchg
repz
cmp
sbb
icebp
inc
pop
pop
xchg
or
adc
pop
and
je
add
dec
pop
inc
or
xor
sbb
mov
js
movsb
std
xchg
mov
stc
int3
dec
lds
je
insl
dec
test
in
xor
dec
add
pop
push
out
fldt
fadds
ret
xchg
int3
mov
jp
xor
aas
imul
ss
xchg
push
jle
fdiv
pop
hlt
mov
mov
ret
fisttpll
xor
sahf
sbb
add
and
sub
adc
mov
sub
add
clc
repz
or
test
mov
add
mov
sbb
cmpsb
mov
pop
mov
cld
out
lret
fadds
push
scas
lcall
das
xor
xchg
fwait
push
movsb
test
int3
adc
jno
cmp
mov
or
push
jmp
addb
jo
push
adc
test
lods
repnz
dec
fstpl
cs
ss
jbe
dec
bound
lret
inc
cmp
sbb
add
out
or
mov
add
jecxz
cmc
sahf
xchg
sbb
jmp
lock
insb
divl
mov
cmp
pop
or
push
pop
mov
add
js
or
addr16
movsl
lss
and
mov
jp
jge
jmp
enter
in
js
or
dec
mov
bound
dec
arpl
sbb
mov
mov
lock
add
std
push
dec
xchg
dec
xchg
dec
cmp
dec
push
outsl
bswap
xor
add
lods
push
jge
or
movb
dec
pop
cmc
adc
nop
xchg
dec
std
pop
pop
add
lahf
xchg
xchg
hlt
or
add
das
or
ret
outsl
lahf
lret
mov
sub
mov
fistl
adc
lods
fwait
leave
lcall
call
ret
add
jae
rol
add
lret
mov
add
stos
inc
ret
fcoml
xchg
test
sbb
add
stc
scas
or
pop
dec
sbb
xchg
ret
jo
add
flds
cmp
loopne
ficompl
nop
negl
xorl
add
enter
pop
pop
ret
adc
lcall
loop
and
testl
negb
jge
add
add
cli
inc
xlat
dec
arpl
xor
cmc
lret
push
imul
xor
push
ss
mov
and
data16
jno
fcmovbe
test
mov
icebp
jle
lea
leave
out
pushf
dec
aam
into
addb
mov
xchg
inc
adc
jl
pop
popa
stos
adc
pop
add
std
pop
xchg
clc
addr16
test
pop
in
test
and
loop
push
popa
inc
add
into
jg
shrl
notb
ret
pop
out
adc
out
fdivl
lahf
adc
or
mov
add
lds
stos
pop
jae
lahf
adc
sub
add
je
xor
inc
fcomip
movsl
or
mov
jns
fsubr
lcall
xchg
jp
test
cmp
lods
pop
leave
xchg
push
out
mov
addr16
lods
sbb
ret
push
movsb
sbb
xor
cltd
mov
mov
pop
pop
and
adc
pop
and
push
shr
push
ja
xchg
sub
or
push
popa
movsl
out
repz
mov
lods
sub
mov
add
fcomip
mov
stos
popf
xchg
jp
cmpsb
icebp
add
movsb
cmpl
adc
add
lret
aas
push
lock
das
scas
in
in
push
negl
je
push
cmp
cwtl
in
test
nop
gs
add
dec
sbb
movb
stos
in
jb
aad
dec
shr
or
sti
loop
push
leave
add
and
test
ss
inc
inc
add
jnp
jbe
fstps
and
mov
loope
testl
rclb
xor
and
sbb
movsl
mov
addb
cmpsl
movsl
in
pop
mov
addr16
gs
inc
daa
jecxz
mov
add
add
stos
inc
ljmp
jbe
iret
scas
xlat
inc
incl
ret
push
add
xchg
add
xchg
arpl
movsl
inc
fcoml
mov
movsl
xorl
shlb
fcoms
xchg
movsb
adc
push
sbb
rcrl
out
add
faddl
add
mov
dec
xchg
push
mov
mov
cmc
xchg
lds
movsl
xor
imul
mov
mov
xchg
adc
pusha
add
test
cmpsb
rcr
cmp
add
out
dec
fisttpl
xchg
dec
pop
addb
add
cmpsb
xor
adc
inc
push
jb
mov
cwtl
das
pusha
add
xchg
rcrl
scas
mov
push
aaa
std
mov
sbb
cmp
lds
cmp
sahf
xchg
call
inc
fimull
hlt
jns
in
iret
cmp
movsl
pop
pop
cli
addb
push
mov
aas
clc
sub
test
push
jmp
xlat
in
jae
pop
pop
popf
push
xchg
loopne
cld
jl
hlt
enter
mov
cli
or
rolb
jne
hlt
addr16
pop
pop
inc
add
lds
rclb
mov
rolb
push
pop
add
out
cmp
push
call
je
sbbl
shll
cmp
nop
out
adc
jb
sub
xchg
popa
push
mov
stc
sahf
clc
xlat
pushf
xchg
arpl
jbe
mov
jne
or
fstpl
outsl
adc
and
testl
outsb
out
rolb
mov
shrl
test
fisubrs
inc
add
jle
das
enter
dec
lock
mov
push
insl
add
and
add
mull
add
inc
mov
dec
fistpll
xchg
outsb
or
ss
out
pop
popf
add
sbb
rolb
movb
sub
test
ljmp
jge
lock
pop
cs
push
add
push
add
cmpsb
sahf
out
pop
mov
jbe
addb
in
das
scas
jns
js
and
das
jmp
jp
pop
std
inc
add
mov
mov
enter
shl
fcomip
cmpsl
loop
push
stc
xchg
repnz
pushf
adc
cld
imul
fstpl
mov
aaa
push
repz
and
dec
and
outsl
xchg
out
push
or
xchg
addb
dec
xlat
mov
insb
sub
aad
out
jmp
fsts
mov
insl
movsl
lcall
adc
pop
ret
inc
add
pop
mov
rcll
jae
ret
xlat
es
or
pop
inc
xor
lea
sbb
pop
xchg
push
add
mov
mov
lahf
inc
add
in
cmp
sbb
pop
xchg
add
in
pop
jmp
sbb
sbb
add
add
in
pushf
jge
aas
inc
add
call
fdivrs
jge
adc
call
pop
into
inc
add
fcomi
out
and
pop
or
push
xchg
popa
lret
lods
int
popa
pop
or
mov
sarl
int3
scas
cli
test
stos
dec
mov
addr16
gs
loop
add
aam
pop
jmp
sbb
fdivr
insb
enter
push
mov
lods
cli
add
add
add
push
sub
repnz
add
rcr
dec
imul
add
add
flds
pusha
add
add
push
sbb
adc
cmp
xor
add
std
rorb
insl
es
push
mov
lods
cmp
sbb
mov
add
and
add
inc
add
pop
mov
or
mov
push
xor
in
jb,pt
inc
add
mov
jp
and
add
addb
cs
add
xchg
bound
dec
dec
call
imul
rolb
add
fidivs
add
movsl
mov
int
lock
inc
lock
scas
pop
jb
jmp
xor
notb
sbb
add
xor
and
sbb
movb
cmp
fisubrl
sti
cmp
xor
xor
mov
clc
es
inc
push
sarb
inc
add
ret
aam
mov
sbb
shlb
and
stos
filds
mov
xchg
fistps
mov
jne
je
fwait
pop
add
in
adc
add
js
add
or
mov
push
je
adc
jb
pop
pop
jb
lcall
or
outsl
aas
xor
mov
adc
inc
add
inc
jg
add
movsb
icebp
or
cmp
adc
lcall
movsb
ret
je
and
dec
adc
lahf
mov
add
sbb
fwait
leave
jmp
mov
inc
add
mov
add
sarl
stc
fldl
add
sti
cmp
sti
clc
and
fldl
add
gs
popf
sbb
add
xchg
cmp
lods
dec
mov
sar
or
je
pop
xchg
push
mov
mov
into
out
insb
push
jp
addr16
push
clc
adc
push
pop
add
hlt
pushf
fiadds
jecxz
pop
dec
mov
aam
sahf
and
stos
test
or
nop
xchg
add
mov
pop
xchg
push
dec
push
mov
mov
xchg
cmp
leave
stos
jp
xchg
shll
test
push
call
arpl
sub
mov
dec
jle
or
add
add
xchg
testl
cmp
int
xchg
pop
loopne
mov
sbb
sahf
scas
mov
add
push
popa
cwtl
push
push
or
cmp
imul
mov
insl
mov
sub
ret
adc
cmp
add
das
add
sub
sub
fcomp
xor
jbe
cmp
das
fldt
add
movsb
sahf
ss
jb
xor
pushf
sbb
loope
mov
daa
inc
add
lret
jns
ret
jnp
mov
mov
add
jmp
push
lcall
xchg
daa
je
jl
inc
or
jecxz
sub
xchg
pop
inc
add
movsl
loop
adc
loope
out
inc
add
adc
test
ret
arpl
xchg
aas
inc
add
add
inc
pushf
scas
test
mov
adc
addr16
out
sbb
xor
fcompl
addb
push
mov
push
loope
jns
inc
add
dec
or
inc
leave
lcall
test
dec
int3
movb
es
test
stos
jb
or
jmp
enter
fsubrl
xchg
mov
jo
mov
icebp
popf
ficoms
rclb
fiaddl
add
leave
imul
test
icebp
mov
mov
es
push
scas
push
aas
sahf
cmp
and
xchg
mov
adc
pop
mov
xchg
push
jo
mov
mov
leave
into
push
or
cmp
cmp
ja
int
add
push
mov
dec
rolb
scas
into
pop
jo
add
mov
add
scas
jmp
xchg
loope
mov
push
ret
inc
aas
pop
add
fdivr
or
aam
fisubl
mov
hlt
sbb
sub
jo
loop
add
rolb
sbb
add
divl
add
je
sbb
sarb
lcall
push
xor
inc
or
adc
lea
or
add
stos
xchg
mov
add
in
mov
jae
es
add
sub
fwait
in
test
xchg
jne
call
jo
pop
in
hlt
jo
push
mov
mov
jne
dec
xlat
int3
xor
rcrb
addr16
xor
xor
mov
std
dec
xor
test
hlt
or
mov
cmp
pop
sbb
inc
add
in
jmp
ss
enter
sbb
scas
popa
cmp
add
cltd
jne
add
popf
in
inc
add
ret
lds
repnz
sbb
popa
fstps
test
inc
add
out
add
scas
pushf
sub
add
jnp
add
hlt
push
add
shll
ret
xchg
dec
addb
add
test
dec
push
ss
iret
ret
xor
mov
pop
sub
inc
add
and
cwtl
and
or
mov
add
lock
lret
push
lcall
mov
add
add
mov
lahf
ret
mov
mov
dec
mov
push
add
add
cld
sbb
adc
pop
loopne
mov
sub
add
lds
and
jne
xor
adc
test
xchg
cmp
add
out
ljmp
sub
out
fstps
das
mov
jl
mov
push
mov
ss
in
jo
inc
lds
inc
add
pop
pop
movsb
add
or
add
add
in
adc
mov
xchg
rolb
imul
in
add
inc
add
fistps
std
lret
dec
and
test
stos
mov
xchg
mov
in
jo
inc
add
rorl
scas
or
add
add
stc
xor
repz
sahf
repnz
int
jo
aas
push
lds
or
lea
es
pop
inc
ljmp
xchg
xor
cld
incl
shll
add
pop
adc
jmp
popa
adc
mov
add
add
add
xchg
dec
cmc
mov
aad
add
add
xchg
sub
std
mov
lret
cld
inc
add
adc
inc
add
bound
pop
les
mov
cld
dec
fcom
enter
dec
mov
bound
push
cmp
inc
mov
stc
mov
mov
lea
pop
add
mov
out
imul
shlb
and
adc
pop
lods
ja
add
outsb
jg
stc
xchg
call
test
sub
ss
add
out
pop
xor
pop
sub
mov
adc
popa
pop
dec
dec
xchg
loop
and
lods
es
lock
daa
lahf
and
push
stos
adc
pop
pop
notl
pop
fs
aaa
sbb
cmp
rclb
dec
sbb
pusha
add
mov
jge
mov
cmpsb
jle
decl
jno
cwtl
idivl
jbe
adc
add
repnz
add
out
push
pop
adc
push
add
push
movb
jp
fidivrl
jb
mov
sbb
movb
lds
movsl
iret
rcrb
push
insl
inc
add
mov
cltd
lahf
xchg
movsl
xor
and
loop
dec
imul
imul
inc
pop
sub
mov
sub
pop
aad
xor
jae
jge
push
clc
sti
add
push
inc
add
add
xor
jge
pand
scas
addr16
add
add
add
add
int3
daa
icebp
sbb
out
jo
repnz
mov
sar
mov
pop
xor
pop
push
into
fidivrs
push
add
push
push
sbb
mov
ljmpw
xchg
jne
mov
insl
lods
repz
mov
add
sar
shlb
add
mov
add
int3
ret
ds
push
aam
mov
adc
dec
inc
add
inc
add
cmp
add
add
bound
out
test
pop
mov
jne
add
data16
push
insb
mov
mov
adc
movb
fsubr
cld
inc
add
add
add
xor
test
out
je
sub
lahf
push
popf
aaa
int
or
ja
add
adc
fsubs
mov
add
sbb
add
into
xor
outsb
outsb
push
dec
hlt
test
mov
dec
dec
ret
ja
ss
dec
jp
pop
out
js
add
xchg
or
insl
popa
nop
mov
clc
jg
or
loopne
and
popf
sbb
fs
push
inc
add
aas
pop
and
out
fsubrl
or
repnz
bound
jmp
pop
xor
out
cmp
ffreep
add
int3
jno
aad
icebp
xchg
add
add
xchg
and
inc
ja
xchg
sub
adcl
add
jo
jg
cld
repnz
xor
into
push
cmp
addl
mov
pop
andps
dec
mov
dec
dec
in
fcomps
push
rolb
jmp
sar
leave
cmpsl
inc
add
mov
ds
mov
lock
sbb
aad
or
xchg
std
stc
call
xor
dec
pop
adc
or
add
add
or
add
call
outsb
fisttpll
js
sahf
xor
or
inc
add
pop
rol
add
push
add
jo
adc
mov
mov
idivb
or
add
sub
add
add
aam
push
add
ljmp
sub
add
lods
cli
add
mov
mov
cmpsb
cld
js
idiv
inc
cmp
add
dec
fstp
inc
adc
dec
in
mul
pop
mov
sbb
add
adc
dec
aad
mull
nop
xchg
sub
jle,pt
sub
inc
hlt
in
shr
jo
add
ja
hlt
movb
cltd
dec
call
aaa
push
or
cmc
enter
add
push
add
inc
add
mov
or
mov
xchg
into
imul
inc
jecxz
iret
das
movb
adc
push
lea
sbb
sub
jge
mov
adc
xorl
stc
ret
stc
in
adc
jl
test
add
ret
and
pop
push
adc
jmp
lcall
movsb
push
mov
pop
pop
jns
jmp
cmp
inc
add
push
or
pop
mov
sbb
incl
stc
les
xchg
cli
fidivrs
push
test
sarl
add
add
mov
jbe
test
push
inc
push
out
sub
fsubr
imul
sti
lock
cmpsl
gs
jae
dec
leave
xchg
loope
add
xor
push
cmp
or
dec
mov
and
xor
mov
add
xor
sbb
adc
mov
adc
imul
movsl
rclb
add
pop
fldt
xor
mov
sbb
add
int3
sbb
jnp
repz
int3
imul
into
mov
lcall
fisubs
sbb
aaa
js
std
jecxz
add
xlat
jmp
adc
aam
push
sub
mov
xchg
inc
pop
sub
pop
pop
ds
push
ljmp
icebp
ficoms
cli
das
fisubs
lahf
dec
and
xor
jge
in
push
mov
xchg
push
sbb
sub
loope
gs
mov
daa
int
pop
xor
mov
xor
sahf
cmp
inc
add
xchg
aad
add
cltd
push
in
pop
and
push
es
add
mov
sub
icebp
in
in
int
jle
xor
pop
fdivr
dec
pop
jbe
cmpsb
rcrl
ds
aad
mov
lods
test
pop
or
addb
push
pop
xor
in
sub
sbb
sbb
fs
add
jnp
sub
mov
stos
fcom
rcll
test
xor
dec
enter
popf
arpl
inc
fdivr
xchg
mov
les
pop
es
shr
test
jl
pop
inc
mov
imul
fucomip
mov
add
ficoms
xor
add
cmc
stc
mov
addr16
cltd
scas
jns
xchg
fistps
jecxz
std
mov
push
add
push
and
imul
add
add
addr16
sbb
das
mov
fiadds
sbb
adc
pusha
add
je
mov
dec
les
mov
sahf
psubusw
xchg
inc
lea
mov
mov
addr16
xchg
jno
jno
add
dec
sbb
loop
add
sub
push
xor
dec
les
cmp
in
pop
jno
roll
xchg
test
add
add
mov
pop
sahf
push
mov
add
test
icebp
xchg
negl
lret
jecxz
shrb
inc
js
repnz
mov
add
push
jnp
sub
mov
rorl
or
add
stc
sbb
ljmp
xor
pusha
add
add
dec
pushf
daa
hlt
and
loop
dec
fcoml
pop
dec
mov
movsl
fs
sti
mov
jmp
mov
jae
jo
cld
dec
sub
xor
or
inc
adc
xchg
xchg
incl
add
add
cld
pop
cmpsl
dec
pop
mov
add
je
popa
stos
xor
jle
sti
jne
cmp
js
cmp
push
and
je
xchg
test
inc
add
bound
xor
addr16
cmp
lahf
cmpl
enter
jmp
mov
rep
fstl
in
fs
dec
ret
stc
pop
ret
mov
add
add
mov
sbb
loope
lods
movsl
das
outsb
mov
xchg
add
inc
add
add
xchg
inc
add
xchg
mov
cmp
inc
xor
adc
pop
fimuls
add
add
lods
iret
push
mov
add
insb
mov
aam
xchg
cmp
push
jnp
sti
fcoms
fists
es
xor
mov
nop/reserved
xor
and
sub
stos
cmp
mov
xchg
push
jge
push
add
sub
mov
adc
add
push
inc
sub
loope
push
jle
lods
mov
xchg
neg
dec
push
lahf
xchg
out
pop
iret
sbb
add
loopne
pop
mov
leave
pop
sbb
jg
mov
movl
mov
lret
lock
push
jle
push
add
pop
adc
add
test
scas
mov
sub
movb
mov
adc
aam
std
mov
xchg
mov
add
hlt
push
xlat
cs
add
push
test
pop
gs
adc
in
dec
mov
into
cs
clc
lcall
cwtl
cmp
addb
test
int3
outsl
mov
dec
inc
add
cltd
mov
pop
aas
fs
scas
inc
add
movsl
ljmp
fimull
xchg
jg
and
rolb
movb
add
cwtl
sub
jnp
out
adc
jbe
cmc
pop
movb
sub
jne
mov
pop
or
push
clc
dec
dec
jl
aaa
fmul
pop
mov
popf
scas
das
out
or
clc
inc
add
mov
in
xor
rorl
jo
out
push
inc
sti
jp
aam
and
cmpsb
and
jecxz
hlt
js
add
mov
loope
add
rcr
cmc
push
add
bound
inc
and
and
sub
in
or
in
scas
lahf
adc
cmp
leave
lea
in
fimull
add
mov
push
lahf
sarl
lahf
mov
cmpsb
sbb
cmc
cmp
add
cltd
xchg
scas
sbb
mov
jg
and
lcall
adc
sbb
and
das
mov
xchg
mov
mov
repz
outsb
scas
addb
add
xchg
fwait
shl
xchg
xchg
sbb
cwtl
pushf
iret
mov
es
cmp
add
popf
and
xor
stos
push
pop
cmpsl
pop
add
push
addb
mov
mov
xchg
adc
mov
iret
enter
in
fiaddl
ret
push
cli
xchg
es
sbb
sbb
jnp
push
test
cmp
fistl
out
pop
stc
aaa
inc
add
ret
push
mov
in
out
jg
test
pop
mov
sub
addb
jmp
add
mov
lcall
in
hlt
das
fwait
inc
mov
or
xchg
inc
add
or
and
nop
loopne
pop
aad
xchg
xchg
xchg
xchg
adc
xchg
stc
notl
adc
add
int
fiadds
in
add
mov
push
mov
dec
mov
nop
call
nop
jecxz
scas
in
addb
rcrl
sub
iret
pop
sub
mov
jge
shrl
jmp
pop
xor
loopne
cmp
push
jnp
jle
imul
pushf
popa
fmull
test
mul
jecxz
sbb
and
out
in
mov
adc
adc
into
test
xor
xchg
sub
jb
cmp
ss
mov
pop
pop
ja
sub
add
fadds
orl
addb
dec
aas
mov
adc
or
push
mov
mov
stc
or
mov
sub
add
pop
pusha
add
push
xor
sub
and
insb
lret
or
add
out
and
cmc
sbb
xchg
stos
inc
xor
push
movsb
lret
outsb
loope
ljmp
xchg
jle
lods
add
push
add
mov
adc
popf
outsl
push
loop
jmp
mov
mov
loop
lcall
cli
mov
add
cwtl
iret
ret
jbe
shll
xor
mov
imul
sub
rorl
mov
or
inc
sarl
loope
addb
add
icebp
jmp
in
popf
cmp
cmp
add
add
mov
mov
loope
add
loopne
sbb
push
int3
push
xchg
loopne
mov
cmp
mov
out
aas
ficompl
push
movsb
xchg
shr
or
mov
test
cmp
xor
add
pop
or
adc
dec
push
jg
movsb
enter
add
in
decl
sbb
jecxz
inc
sbb
fldt
scas
fdivr
xchg
sbb
mov
mov
clc
movsl
std
xor
loope
cmp
cmp
movsb
jo
cwtl
pop
imul
dec
sahf
xchg
dec
fiadds
add
and
cmp
xlat
stos
mov
lods
push
mov
outsb
inc
add
mov
add
jb
ficoms
add
dec
xchg
add
movb
pop
dec
jg
xlat
xor
jmp
and
push
push
dec
into
lea
inc
jle
shr
in
addb
clc
mov
sbbl
mov
pop
xor
sbb
add
xchg
inc
add
movsl
cmc
shrl
mov
fstpl
leave
sbb
inc
cmp
inc
add
dec
pop
in
bound
cmp
stc
fsubrs
cmpsb
dec
movsl
clc
out
call
into
xchg
in
jmp
add
lret
mov
dec
aad
jge
out
test
cmp
add
out
xor
mov
or
outsl
inc
call
push
xchg
dec
push
ret
pop
xchg
mov
and
shll
sbb
leave
mov
push
add
in
and
addb
sbb
cmpsb
xchg
sbb
mov
xor
sub
hlt
fldl
add
adc
inc
cmp
add
pop
fdivl
fnsave
lea
andl
dec
repz
add
inc
add
cmp
dec
adcl
mov
mov
xchg
xor
faddp
add
jb
push
xor
mov
or
mov
mov
add
add
les
inc
add
stos
mov
add
popa
shl
cmp
fisubl
add
jbe
adc
xchg
mov
xchg
push
lret
stos
push
pop
mov
mov
add
xchg
jl
pushf
rcll
xchg
inc
or
sbb
mov
adc
pop
fcoms
dec
and
mov
sub
in
adc
in
rcrl
movb
fcoml
pop
movsb
mov
push
sbb
add
xor
and
test
push
lahf
je
push
nop
jecxz
outsb
dec
imul
inc
add
mov
and
aaa
outsb
pusha
add
das
scas
int
jmp
add
jle
xchg
jge
adc
add
fadds
pop
iret
in
ja
xor
mov
pusha
add
fadds
and
jo
add
ror
in
push
cmpsl
leave
popl
inc
add
adc
dec
lahf
jmp
data16
add
sub
nop
addr16
add
mov
das
jecxz
in
outsl
or
xlat
call
mov
je
pop
jno
movb
sub
and
cmc
and
jmp
int
or
inc
add
imul
jno
bound
lahf
call
add
movsl
ljmp
and
push
jmp
xchg
adc
test
inc
add
bts
push
fwait
lahf
mov
fdivr
popa
sbb
aam
outsb
test
repz
fstps
rol
fld
add
movsl
add
cltd
pusha
add
sarl
testl
add
scas
cmp
mov
sahf
lds
movsl
js
lds
in
add
popa
mov
fwait
addb
xchg
into
addb
fcmovu
add
fwait
cld
dec
mov
rorl
sub
es
dec
and
jl
inc
add
lock
rorb
push
aas
push
mov
and
push
mov
dec
pop
loope
push
gs
test
sub
add
push
sbb
dec
lahf
shr
pop
daa
sub
dec
jae
loopne
add
les
dec
sub
mov
pop
inc
xchg
and
jns
xor
or
ljmp
daa
mov
mov
test
shll
mov
call
xor
mov
push
fadds
dec
push
add
pusha
add
cmc
or
push
add
in
mov
movsb
mov
mov
push
push
fsub
jne
loope
in
adc
add
outsb
mov
lret
fnstenv
jns
adc
bound
push
dec
and
cltd
dec
ss
mov
add
jg
test
ljmp
fmuls
push
bound
dec
or
dec
mov
sub
or
mov
enter
add
adc
iret
mov
lods
imul
sub
and
adc
dec
ret
pop
inc
add
push
add
sbb
mov
jbe
mov
addb
cmp
out
out
push
iret
mov
or
fsubrl
stos
lods
decl
sub
ret
inc
add
out
xchg
pop
add
dec
aad
js
dec
mov
call
test
cs
in
scas
in
call
jae
ret
mov
xchg
loopne
adc
push
jp
addb
insl
add
add
jnp
js
ret
add
idiv
add
push
xchg
sbb
and
movsb
cmp
mov
sub
imul
das
mov
adc
add
add
mov
ret
movsl
scas
sub
fsubrl
adc
addb
test
dec
mov
push
mov
add
xchg
adc
imul
sahf
mov
jmp
inc
add
add
in
stc
cmpsb
dec
aam
push
test
idivb
sbb
add
in
mov
push
mov
add
enter
jnp
cli
jo
les
in
inc
add
mov
into
jo
jb
jo
inc
add
mov
sbb
xor
or
add
nop
cmp
ret
pop
pushf
xchg
pop
sub
pop
test
outsb
sub
pop
loop
sub
add
adc
inc
mov
sar
jg
or
js
pop
out
dec
shl
test
mov
mov
cmp
push
push
stos
dec
jmp
out
sub
cmpsb
stc
lret
fdivl
scas
jnp
xor
daa
test
dec
pusha
add
cmp
jmp
lock
mov
adc
or
inc
add
sub
sub
inc
push
ljmp
cmp
xor
ds
stos
and
add
cmp
and
fs
mov
roll
popa
sbb
aaa
int3
or
mov
adc
fcmovnu
or
xor
or
adc
xchg
sub
mov
and
or
adc
jno
scas
lock
movsb
and
negb
jle
sub
add
xor
cmp
push
rcll
and
cltd
fbstp
add
push
sub
sahf
in
das
xchg
jbe
dec
dec
loope
dec
xor
cs
mov
dec
dec
dec
pushf
shrb
aad
adc
scas
lret
dec
mov
movsb
mov
add
cli
xchg
stos
ds
and
fwait
push
mov
pop
pusha
add
call
dec
loopne
call
sbb
lahf
jns
adc
in
popf
icebp
dec
stos
mov
jo
and
add
jae
cwtl
mov
neg
in
mov
adc
pop
insl
jnp
clc
fwait
cmp
xchg
sti
dec
cltd
lock
aaa
movsl
cmpl
mov
out
xchg
jo
mov
iret
jne
int3
mov
add
decl
jl
pop
addb
and
mov
cs
and
xchg
in
cmp
cmc
push
fs
imul
ja
lret
push
mov
test
push
das
stc
shll
or
and
xchg
ret
sbb
subl
fstpt
xchg
cmp
outsb
push
fwait
adc
add
mov
imul
and
xchg
dec
int3
xlat
push
shrb
sti
addl
mov
outsb
jmp
sbb
in
das
scas
add
jg
movsb
es
jae
fs
cmc
jp
add
jle
movb
addr16
adc
cmp
movsl
xchg
jno
inc
push
adc
nop
imul
dec
xchg
lcall
mov
add
lret
add
cmp
and
add
or
mov
adc
mov
cmp
aam
enter
or
lds
lahf
lds
push
and
cs
inc
add
add
cwtl
push
add
pop
inc
sti
cmp
sahf
es
dec
xchg
add
add
nop
mov
push
jmp
movsl
jae
and
imul
dec
fbld
cmpsb
and
mov
pop
in
sub
stc
jb
lods
aam
mov
hlt
cld
jmp
add
nop
testl
add
daa
aas
loop
add
loope
or
mov
imul
mov
xor
adcl
lods
outsl
hlt
movb
pop
enter
or
pop
stc
jl
insb
and
xor
mov
push
je
in
add
or
cwtl
jg
push
stos
inc
add
test
clc
out
ja
int
sub
outsl
movsb
int
outsl
repnz
std
dec
orl
test
add
adc
jne
adc
mov
and
sbb
ljmp
or
sbb
icebp
push
inc
add
dec
sub
mov
addb
jb
cmpl
mov
lods
outsb
sub
test
inc
adc
movb
ljmp
sub
cmp
mov
lret
daa
ljmp
je
das
sbb
push
and
cmpsl
sub
xchg
daa
fs
arpl
vmovsd
xchg
iret
xor
movsl
and
lods
rcll
mov
adc
sbb
mov
add
xchg
pop
arpl
add
xchg
pushf
outsb
lds
std
cmp
lea
dec
fs
fs
dec
xor
xor
jp
xchg
roll
add
mov
dec
movb
outsb
jb
test
pop
add
xor
xchg
pop
out
pop
cmp
add
add
les
inc
cmpl
fidivrs
dec
or
movsl
cltd
popf
adc
dec
inc
add
hlt
imul
inc
add
mov
sub
mov
add
cli
jmp
test
cltd
negl
add
fprem1
movsl
mov
xor
xchg
divb
push
jp
int3
xor
mov
push
mov
inc
add
push
ja
pop
xchg
psubw
nop
jns
cmp
add
push
mov
dec
or
xchg
test
lods
into
mov
pop
xchg
xchg
adc
add
dec
mov
add
mov
leave
jl
aaa
add
gs
or
jp
cmpsb
lods
sbbl
gs
push
push
adc
mov
stc
pop
ss
repnz
cmp
push
ret
das
sbb
lret
stos
jnp
das
xlat
inc
jb
xor
pop
inc
pop
iret
in
sub
mov
mov
mov
adc
adc
push
mov
test
popf
fbld
iret
xchg
jne
jns
mov
push
mov
cmp
add
inc
lret
leave
fs
add
pop
jne
sub
jle
outsb
push
cs
xor
cmpsl
and
add
pushf
fdiv
mov
xor
xor
clc
mov
add
test
cmpl
cmpsl
loop
add
add
jg
add
pop
std
bound
testw
lret
dec
addb
jae
bound
mov
repz
and
xor
fnsave
insl
pop
inc
add
add
mov
fisubrl
addb
add
fbstp
cli
notb
lret
mov
xor
inc
add
add
punpcklwd
xor
xchg
jl
inc
mov
push
xor
add
aad
movsb
push
shl
push
sub
es
pop
mov
push
xor
pop
jge
enter
xchg
rorl
and
pop
dec
dec
shrb
and
xor
lcall
dec
add
daa
sub
sub
pop
loopne
fldt
mov
jnp
xor
push
std
xchg
push
repnz
add
les
jae
add
push
push
add
mov
add
pop
sti
stos
insb
hlt
mov
in
adc
mov
add
jmp
pop
ds
fwait
aas
lret
test
push
insl
xchg
mov
addb
push
in
mov
fildll
dec
stos
xor
sub
pop
lahf
push
pop
repnz
ret
ja
inc
adc
add
or
pop
adc
jnp
mov
or
sub
cmp
popf
push
and
cmpsl
je
or
loope
add
inc
or
out
mov
popa
add
jge
insb
xor
scas
scas
xor
sub
jge
shr
loopne
mov
pop
in
aad
dec
or
ljmp
pop
stos
test
cmp
hlt
push
sbb
cltd
lock
out
jp
mov
or
and
cltd
add
sub
out
psrad
pop
clc
mov
cmp
add
jg
in
aaa
sub
add
shlb
push
add
mov
dec
dec
xchg
adc
cld
mov
xor
mov
jns
xor
or
xor
inc
add
int
xchg
cmp
dec
pusha
add
adc
or
adc
cld
ja
scas
mov
cld
dec
mov
and
pop
mov
mov
add
insl
test
push
add
mov
xchg
imulb
sbb
movsl
loopne
in
adc
or
or
pop
jmp
add
mov
mov
sarb
jne
mov
shlb
xchg
sbb
into
lahf
mov
jo
cld
sbb
adc
sar
dec
inc
add
call
lea
mov
repz
dec
xchg
hlt
test
ret
push
push
adc
push
les
fildll
pusha
add
inc
gs
xchg
inc
add
int3
jnp
addb
enter
or
jp
insl
or
js
add
add
lret
inc
add
stos
and
xor
cmp
fs
push
push
movsl
mov
sub
add
imul
sahf
sub
cwtl
jnp
and
adc
movsb
shr
mov
add
lock
sbb
add
mov
adc
lea
cwtl
and
stos
shlb
add
mov
push
je
xor
xor
fdivrp
jle
add
stos
jnp
std
pop
dec
les
push
push
push
xor
cmp
stos
mov
stos
cmpsl
xchg
stc
loop
pop
in
les
out
in
push
data16
into
nop
add
ljmp
movb
orl
cli
ja
push
div
out
and
mov
jo
add
addb
mov
add
add
pop
gs
and
dec
dec
jb
fucomip
les
pop
push
movsl
pop
cwtl
enter
add
mov
ja
fdivrs
add
adc
adc
je
adc
xchg
stos
in
in
ret
sub
adc
aam
inc
sub
xor
lea
addb
mov
lcall
xchg
sub
dec
fildll
or
rol
add
mov
fs
pop
pop
test
test
popf
xchg
mov
stos
and
push
add
jp
pop
push
cmc
sbb
imul
jo
dec
leave
adc
xor
in
cmpsl
cltd
pop
movsl
aaa
mov
cmc
in
lods
test
in
shlb
icebp
xor
mov
cli
sbb
aas
loope
add
jnp
add
call
push
scas
mov
inc
xchg
cmp
xchg
fbld
mov
xchg
push
mov
fdivrs
inc
outsb
addr16
cmpsl
inc
add
cld
cld
xor
test
inc
pushf
inc
ljmp
add
cltd
es
test
lock
iret
adc
cmc
jns
cmpsl
xlat
stos
hlt
jb
sahf
fsubl
arpl
cmp
add
fidivl
fwait
push
outsb
inc
cmp
cli
sub
loopne
cwtl
mov
hlt
inc
add
jnp
mov
popa
js
insl
addr16
in
add
add
iret
pop
ret
ficomps
out
add
add
rorb
jle
add
jno
add
xchg
out
adc
jle
dec
repz
mov
repnz
fsubr
sub
call
pop
or
lret
nop
andl
int
inc
add
mov
ret
stos
xor
push
add
ljmp
in
add
cmp
or
inc
rclb
popf
stos
arpl
mov
adc
lret
add
jb
sti
mov
leave
iret
xor
mov
inc
add
adc
push
xor
jg
push
xchg
pusha
add
repz
mov
cwtl
adc
je
into
xor
push
jmp
fidivrs
leave
insl
or
push
sbb
inc
mov
add
inc
add
xchg
test
sbb
add
sub
pop
pop
mov
add
arpl
dec
outsb
das
inc
pop
cmpsb
push
lret
add
dec
aam
dec
sub
add
repnz
add
sub
pop
mov
xor
cltd
out
ds
cmc
cmp
add
pushf
cmp
xchg
jg
lret
xor
or
pushf
icebp
stos
cwtl
mov
add
cmp
imul
adc
cmpsb
mov
icebp
stos
push
clc
cmp
mov
mov
lret
cmp
add
es
mov
test
popf
xchg
and
xor
add
add
leave
xor
int3
leave
jne
mov
hlt
mov
mov
xchg
xor
loope
addb
dec
movb
inc
add
mov
in
dec
mov
add
popa
xor
addr16
or
mov
or
mov
xchg
dec
sbb
aaa
and
aad
jmp
mov
mov
jge
pop
inc
mov
mov
add
add
addb
js
cmp
mov
xchg
orl
mov
loop
inc
add
fisubs
insb
sub
inc
cmp
add
dec
dec
add
les
fsubp
mov
jmp
cmc
jl
lods
jecxz
mov
add
mov
lret
in
outsb
xchg
adc
sub
xor
shlb
dec
or
add
inc
add
nop
jb
and
sub
nop
jb
add
adc
jecxz
add
lods
outsl
dec
add
mov
popf
stc
nop
jb
lods
jmp
call
stc
nop
jb
add
add
sbb
popa
add
nop
jb
rolb
data16
loopne
hlt
nop
jge
dec
add
nop
jb
inc
push
add
cld
jmp
add
stc
and
mov
nop
jb
outsl
add
lret
mov
stc
nop
jb
add
add
movsb
push
mov
xchg
ret
add
add
stc
nop
jb
sbb
add
pop
mov
jmp
rcr
loopne
add
add
sub
add
add
push
pop
push
stc
nop
jb
cmc
int
mov
mov
xchg
ret
jle
dec
loopne
rolb
mov
stc
nop
jb
add
adc
jb
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
loopne
adc
push
stc
nop
jb
add
fs
xor
cmp
nop
cld
jmp
push
add
add
pop
push
mov
xchg
ret
add
bound
stc
inc
lds
add
nop
cld
jmp
add
call
mov
stc
nop
jb
outsl
sbb
adc
add
dec
sbb
fildl
add
add
push
mov
xchg
ret
inc
add
dec
not
stc
nop
jb
add
fldt
add
and
push
mov
xchg
ret
push
adc
sub
push
mov
xchg
ret
add
add
fcoml
mov
xchg
ret
add
adc
add
xor
add
stc
nop
jb
jb
mov
stc
nop
jb
loopne
imul
stc
nop
jb
add
lahf
adc
push
outsl
lea
stc
nop
jb
aaa
mov
adc
pushl
stc
nop
jb
add
add
push
sbb
jb
add
sahf
add
lahf
push
mov
stc
nop
jb
add
rclb
add
int
add
add
dec
jge
stc
nop
jb
scas
sbb
or
cld
jmp
and
dec
add
add
adc
add
stc
nop
jb
stc
add
add
jle
mov
stc
nop
jb
add
add
add
stos
cmpl
nop
cld
jmp
scas
add
add
and
stc
nop
jb
lahf
fcoml
adc
mov
xchg
ret
push
sahf
inc
add
mov
jb
add
add
add
push
mov
xchg
ret
add
adc
add
nop
jb
lods
fs
mov
and
add
lods
sbb
adc
bound
fwait
pop
nop
cld
jmp
adc
add
sahf
add
adc
jne
add
stc
nop
jb
mov
outsl
jle
jl
mov
add
add
scas
arpl
add
add
jmp
sti
push
stc
nop
jb
fcompl
dec
and
dec
add
nop
jb
inc
add
add
mov
nop
cld
jmp
rolb
and
stc
add
add
stc
nop
jb
dec
inc
jle
add
add
add
stc
nop
jb
xor
out
push
stc
nop
jb
pop
add
add
push
mov
jb
inc
bound
add
mov
jb
add
push
add
push
mov
xchg
ret
dec
and
add
jbe
mov
stc
nop
jb
pop
data16
mov
adc
nop
jb
lahf
bound
lahf
pop
stc
nop
jb
add
add
add
rorb
add
stc
nop
jb
add
mov
stc
nop
jb
dec
xor
das
dec
adc
or
mov
inc
add
data16
stc
nop
jb
adc
scas
dec
jle
add
pop
xor
stc
nop
jb
add
dec
int3
add
push
add
stc
nop
jb
scas
add
sti
add
mov
stc
nop
jb
fs
add
test
jge
stc
nop
jb
fmull
aaa
sbb
jne
stc
nop
jb
add
jbe
mov
stc
nop
jb
lahf
inc
outsl
add
adc
adc
inc
in
add
add
add
sub
stc
nop
jb
mov
add
pusha
nop
cld
jmp
fsubr
cmc
icebp
bound
ss
mov
stc
nop
jb
pop
add
int3
das
xlat
xor
add
nop
cld
jmp
sti
add
add
push
mov
xchg
ret
push
lahf
add
cs
stc
nop
jb
add
dec
imul
inc
add
add
and
xchg
nop
cld
jmp
add
outsl
sbb
add
inc
add
add
add
jb
bound
sahf
scas
lea
nop
cld
jmp
scas
jle
dec
scas
ss
xor
add
nop
cld
jmp
and
add
add
push
sbb
add
sahf
lods
xchg
pop
mov
stc
nop
jb
add
sar
pop
push
mov
xchg
ret
add
and
dec
loope
je
stc
nop
jb
sbb
popf
push
stc
nop
jb
pop
add
sahf
pop
push
jnp
cmpl
jb
add
shlb
cmp
nop
jb
and
xlat
loop
cmp
inc
xlat
inc
add
adc
push
stc
nop
jb
sbb
and
add
loop
imul
sub
stc
nop
jb
add
fistpl
add
mov
stc
nop
jb
fcompl
add
popa
stc
nop
jb
add
adc
add
nop
cld
jmp
inc
add
add
enter
add
add
pop
add
stc
nop
jb
add
sti
sbb
psubsb
nop
jb
dec
add
mov
ficompl
nop
jb
add
test
loopne
test
in
add
add
testl
lret
jbe
stc
nop
jb
add
or
test
nop
jb
adc
sbb
mov
xchg
ret
inc
add
and
adc
nop
jb
dec
add
cmpsl
aas
add
stc
nop
jb
add
dec
add
dec
push
nop
cld
jmp
int3
add
int3
dec
add
test
add
jb
add
sbb
nop
jb
adc
mov
add
add
popa
add
mov
xchg
ret
adc
lods
push
push
mov
xchg
ret
add
data16
inc
or
nop
jb
add
add
jbe
call
stc
nop
jb
pop
add
fisttpll
test
nop
jb
add
js
push
add
nop
jb
rolb
ror
loopne
jmp
stc
nop
cld
jmp
int3
push
push
and
add
imul
jnp
add
mov
rolb
stc
nop
jb
add
das
push
inc
add
jmp
cmpb
add
dec
add
lods
sbb
lret
pop
stc
nop
jb
pop
add
add
sahf
cmc
inc
add
and
ja
or
nop
jb
mov
push
push
mov
xchg
ret
push
stc
nop
jb
add
int
add
out
and
push
mov
xchg
ret
sahf
push
add
adc
add
int3
add
add
repnz
test
nop
cld
jmp
lahf
scas
jle
dec
cmpl
nop
cld
jmp
add
dec
add
jmp
nop
jb
mov
int
add
mov
nop
cld
jmp
adc
stc
push
sub
inc
hlt
inc
add
add
jno
mov
push
mov
xchg
ret
int3
loopne
pop
push
nop
cld
jmp
adc
sahf
int
add
mov
mov
add
cld
jmp
fs
add
repz
call
nop
jb
push
xor
add
nop
cld
jmp
fisttpl
add
add
pop
add
nop
cld
jmp
jmp
mov
inc
fistl
stc
nop
jb
add
add
inc
sub
andb
add
add
add
sahf
int
mov
stc
nop
jb
dec
nop
sbb
sti
stc
nop
jb
dec
push
add
add
mov
stc
nop
jb
add
int3
add
pop
add
stc
nop
jb
fs
adc
and
sti
test
push
mov
xchg
ret
add
and
push
adc
pop
jae
nop
jb
add
jle
sub
stc
nop
jb
lods
data16
jne
stc
nop
jb
add
adc
pop
in
scas
rep
stc
nop
jb
add
dec
jle
adc
add
add
nop
jb
add
imul
stc
nop
jb
das
mov
add
sub
adc
add
sbb
sahf
je
add
stc
nop
jb
and
inc
sub
add
inc
pop
add
jbe
mov
stc
nop
jb
sti
push
jnp
inc
in
nop
cld
jmp
dec
fildl
stc
int
lds
data16
xchg
je
mov
nop
cld
jmp
int
scas
movswl
stc
nop
jb
add
jne
xchg
aad
inc
stc
nop
jb
dec
jmp
add
add
jl
nop
cld
jmp
add
add
and
add
movsl
int
push
mov
xchg
ret
jle
adc
add
dec
or
add
nop
jb
scas
add
jle
int
pop
jae
nop
jb
cmc
lahf
dec
call
add
nop
jb
add
pop
cmpl
xchg
push
add
stc
nop
jb
add
xlat
or
mov
xchg
ret
scas
jbe
add
push
iret
jne
stc
nop
jb
add
push
and
outsb
and
nop
cld
jmp
sbb
add
int3
lods
mov
stc
nop
jb
add
push
adc
test
add
add
nop
jb
push
adc
fwait
mov
stc
nop
jb
fs
add
and
cmp
lods
sti
inc
add
inc
outsl
or
nop
jb
dec
dec
fildl
outsl
add
cmp
add
stc
nop
jb
add
loop
add
push
mov
xchg
ret
add
add
jl
stc
nop
jb
dec
add
push
mov
xchg
ret
add
add
xor
add
stc
nop
jb
add
shlb
sbb
add
stc
nop
jb
inc
sahf
add
sub
andb
add
inc
lahf
inc
add
loopne
push
push
mov
xchg
ret
dec
add
add
nop
jb
add
int3
sahf
dec
adc
sub
mov
xchg
ret
stc
dec
and
and
stc
nop
jb
pop
add
fs
add
add
stc
nop
jb
add
adc
add
adc
test
je
nop
cld
jmp
add
test
stc
nop
jb
int3
add
add
add
push
mov
xchg
ret
add
inc
jbe
sbb
cmpb
add
dec
int3
data16
add
dec
cmp
nop
jb
add
adc
xor
mov
stc
nop
jb
jle
and
jbe
mov
push
mov
xchg
ret
add
inc
add
push
mov
xchg
ret
sahf
sahf
add
dec
or
nop
jb
jmp
sahf
shrb
add
nop
cld
jmp
mov
in
push
mov
add
nop
add
out
add
or
mov
nop
cld
jmp
dec
sbb
push
mov
xchg
ret
adc
add
or
adcb
inc
xor
add
pop
push
rcrl
push
mov
xchg
ret
add
push
pop
or
mov
adc
cld
jmp
add
call
push
stc
nop
jb
inc
adc
add
jle
sbb
cmpl
call
and
inc
cltd
rep
nop
cld
jmp
add
outsw
scas
add
jle
stc
nop
jb
add
xchg
jae
and
nop
cld
jmp
int
add
adc
jg
push
sub
mov
inc
add
pop
adc
mov
cld
jmp
add
mov
pop
adc
repnz
add
stc
nop
jb
add
hlt
dec
ror
stc
nop
jb
and
add
inc
add
insl
jae
nop
jb
add
add
sub
inc
and
nop
jb
test
fistpl
add
sbb
jge
stc
nop
jb
test
add
mov
orl
pop
add
sbb
rclb
repnz
add
dec
dec
fdivr
pop
nop
cld
jmp
adc
scas
inc
scas
dec
add
in
pop
mov
nop
cld
jmp
sti
add
xchg
jle
stc
nop
jb
cmc
jbe
add
add
ljmp
addb
add
jbe
add
bound
ret
push
mov
xchg
ret
add
mov
scas
daa
lret
push
stc
nop
jb
inc
pop
scas
add
add
mov
jb
stc
add
add
cltd
push
push
mov
xchg
ret
add
ss
add
out
mov
nop
cld
jmp
stc
fs
push
cmpsb
lods
lods
stc
nop
jb
adc
and
stc
nop
jb
add
fcompl
loopne
push
loopne
jbe
rep
stc
nop
jb
add
in
cwtl
jne
nop
cld
jmp
add
xchg
nop
jbe
dec
mov
stc
nop
jb
add
ror
add
lret
mov
stc
nop
jb
scas
pop
outsl
add
mov
subb
add
inc
int3
outsl
pop
sbb
lock
mov
stc
nop
jb
test
lods
add
dec
pop
push
mov
xchg
ret
add
outsl
call
nop
cld
jmp
add
sbb
add
add
dec
add
rcll
and
mov
xchg
ret
add
add
das
push
push
mov
xchg
ret
call
leave
test
nop
cld
jmp
pop
adc
fistpl
fmull
jb
and
add
xor
mov
xchg
ret
add
sahf
test
nop
jb
pop
test
cmc
rcrl
jb
dec
add
add
int3
lods
lea
stc
nop
jb
add
pop
adc
push
stc
nop
jb
add
lahf
add
add
stc
nop
jb
lods
add
adc
imul
stc
nop
jb
icebp
scas
bound
add
adc
jbe
add
jle
and
add
stc
nop
jb
add
adc
nop
cld
jmp
add
add
push
mov
xchg
ret
sti
aaa
icebp
fs
add
stc
nop
jb
dec
sbb
stc
nop
jb
and
add
jnp
inc
or
mov
xchg
ret
xor
add
pushl
nop
cld
jmp
dec
add
inc
add
imul
jb
sti
add
inc
add
sub
nop
jb
add
icebp
add
add
js
mov
xchg
ret
call
nop
jb
add
sti
cmc
jle
mov
inc
add
jmp
nop
cld
jmp
add
lods
cmp
cld
jmp
push
add
add
push
mov
xchg
ret
lods
add
dec
add
lods
push
nop
cld
jmp
scas
stc
add
dec
add
dec
xor
stc
nop
jb
adc
add
dec
fs
and
stc
nop
jb
add
add
add
mov
push
mov
xchg
ret
dec
add
push
mov
nop
cld
jmp
jle
add
fistpll
stc
nop
jb
dec
aaa
and
push
xlat
pop
xor
stc
nop
jb
int
ss
and
jne
stc
nop
jb
add
pop
test
mov
stc
nop
jb
add
rolb
add
mov
stc
nop
jb
icebp
adc
add
ja
mov
scas
test
nop
cld
jmp
jle
inc
pop
inc
add
add
stc
nop
jb
adc
stc
nop
jb
add
cmpsb
mov
xorb
incl
add
add
dec
pop
stc
nop
jb
sahf
mov
add
add
jmp
stc
nop
jb
add
xor
nop
cld
jmp
das
jmp
add
mov
stc
nop
jb
add
icebp
and
in
ja
mov
stc
nop
jb
adc
adc
cld
jmp
add
sahf
add
jle
add
addb
add
dec
int3
add
fildl
xchg
ret
add
add
add
add
add
stc
nop
jb
add
push
mov
push
inc
add
add
add
add
je
add
cld
jmp
stc
dec
add
and
pusha
add
push
daa
fisttpl
leave
clc
inc
add
jmp
jnp
stc
nop
jb
int
jbe
add
add
imul
pushl
push
dec
add
sub
add
stc
nop
jb
das
inc
dec
les
push
add
mov
xchg
ret
data16
mov
cmp
cmp
ret
add
aaa
pop
push
push
mov
xchg
ret
add
mov
in
inc
add
pop
add
sbb
jmp
call
and
push
and
notb
cmpsl
adc
subb
inc
sahf
add
jmp
mov
push
mov
xchg
ret
add
stc
nop
jb
push
add
fildl
sahf
xchg
or
sar
nop
jb
add
sahf
pop
add
jb
mov
stc
nop
jb
inc
xchg
push
insb
push
stc
nop
jb
call
add
xlat
push
add
nop
jb
and
pop
jmp
xor
nop
jb
and
jle
outsl
pop
add
stc
nop
jb
stc
pop
add
add
sub
nop
jb
add
add
std
decl
push
mov
xchg
ret
dec
lods
add
faddl
xchg
ret
and
mov
stc
nop
jb
fs
add
cld
jmp
add
push
adc
push
inc
negb
nop
jb
add
adc
adc
rep
nop
cld
jmp
and
add
add
dec
mov
stc
nop
jb
add
fmull
int3
repnz
incl
push
add
dec
outsl
in
shr
stc
nop
jb
add
out
lret
sub
nop
jb
add
lods
jle
dec
add
stc
nop
jb
jbe
and
add
add
stc
nop
jb
add
add
sbb
cmp
ret
push
mov
xchg
ret
stc
jbe
dec
pop
push
push
mov
xchg
ret
icebp
add
fs
cmp
nop
cld
jmp
and
and
jbe
add
ficoml
nop
jb
call
add
jno
sbb
and
stc
nop
jb
add
mov
stc
nop
jb
adc
add
jmp
icebp
clc
pushl
add
and
mov
std
stc
nop
jb
pop
add
cmp
add
stc
nop
jb
aaa
pop
fisttpl
jmp
cmc
add
inc
loopne
mov
mov
stc
nop
jb
inc
add
cmc
add
xchg
lret
or
stc
nop
jb
adc
add
jmp
add
stc
nop
jb
call
jle
or
inc
sti
inc
add
xor
pop
lea
stc
nop
jb
add
das
add
pusha
add
adc
fdivr
loope
nop
jb
adc
add
add
call
add
pop
add
pop
mov
stc
nop
jb
pop
call
push
mov
xchg
ret
loopne
jmp
mov
popa
add
mov
xchg
ret
add
add
das
subl
push
mov
xchg
ret
shlb
xchg
ss
stc
nop
jb
sahf
add
add
xor
sub
stc
nop
jb
shl
dec
mov
nop
cld
jmp
add
add
adc
pushf
mov
stc
nop
jb
add
add
mov
add
stc
nop
jb
int3
push
popa
xor
push
mov
add
xchg
mov
add
imul
out
call
add
and
jl
and
nop
jb
jle
inc
pop
jmp
jns
add
cmp
inc
add
fcompl
jb
dec
add
add
add
inc
add
add
add
add
stc
nop
jb
dec
pop
jmp
add
cs
stc
nop
jb
lahf
adc
add
jo
dec
nop
cld
jmp
add
add
ret
insb
add
push
mov
xchg
ret
add
lea
nop
cld
jmp
jmp
add
pop
orl
std
incl
pop
loopne
adc
loopne
push
push
mov
xchg
ret
add
add
mov
add
push
mov
xchg
ret
fs
inc
fs
xor
stc
nop
jb
sti
rolb
sti
and
xor
nop
cld
jmp
add
stc
nop
jb
inc
adc
add
add
sub
stc
nop
jb
ss
and
addb
push
stc
nop
jb
add
dec
int
adc
jmp
add
add
je
stc
nop
jb
add
andl
jmp
add
add
sbb
in
add
icebp
loopne
jecxz
stc
add
sarb
cmp
cmp
ret
scas
add
dec
icebp
fnstcw
stc
nop
jb
add
fs
dec
push
mov
xchg
ret
add
add
mov
testl
add
add
adc
add
nop
jb
add
faddl
add
mov
stc
nop
jb
add
add
je
stc
nop
jb
add
inc
cli
add
stc
nop
jb
scas
xor
int
inc
add
mov
stc
nop
jb
call
sbb
movsb
bound
sbb
stc
nop
jb
sti
add
add
add
push
stc
nop
jb
dec
add
add
stos
push
mov
xchg
ret
add
add
add
jb
adc
add
add
test
stc
nop
jb
and
add
add
adc
test
clc
stc
nop
jb
movl
nop
jb
aaa
pop
dec
push
pop
clc
mov
stc
nop
jb
add
add
pop
mov
stc
nop
jb
fmull
fldl
clc
stc
nop
jb
add
add
add
stc
nop
jb
cmc
adc
adc
jbe
push
ja
push
mov
add
add
add
dec
add
push
loope
les
nop
cld
jmp
icebp
add
fs
or
ret
nop
jb
add
push
aaa
jle
push
stc
nop
jb
add
pop
in
inc
add
add
xor
and
nop
cld
jmp
pop
add
jmp
and
rorl
stc
nop
jb
and
add
sbb
nop
jb
jle
add
jle
mov
push
mov
xchg
ret
pop
add
das
cmp
mov
xchg
ret
data16
add
add
stc
nop
jb
sahf
inc
add
dec
push
stc
nop
jb
dec
inc
add
out
pop
nop
cld
jmp
aaa
pop
icebp
and
outsl
add
stc
nop
jb
and
popa
add
mov
xchg
ret
and
std
mov
nop
cld
jmp
add
fsubl
fistpl
andl
addb
add
jbe
mov
stc
nop
jb
adc
lods
and
mov
push
mov
xchg
ret
add
add
mov
stc
nop
jb
add
cmc
fs
add
repz
clc
stc
nop
jb
add
add
int3
adc
pop
push
mov
xchg
ret
add
int
xor
push
pop
add
bound
pop
add
add
xor
stc
nop
jb
bound
and
add
jne
stc
nop
jb
ss
scas
popa
stc
nop
jb
and
add
int
dec
push
push
mov
xchg
ret
scas
add
add
stos
stc
nop
jb
add
pop
call
add
pushl
nop
cld
jmp
add
add
faddl
dec
push
stc
nop
jb
dec
add
adc
add
jne
nop
cld
jmp
dec
add
aaa
cwtl
push
push
mov
xchg
ret
cmc
inc
add
ret
dec
nop
cld
jmp
dec
add
bound
add
adc
push
push
mov
xchg
ret
add
dec
dec
add
nop
jb
add
and
adc
push
sahf
add
lahf
mov
push
mov
xchg
ret
add
cmc
pop
lret
push
mov
xchg
ret
add
add
lods
stc
nop
jb
and
adc
and
stc
nop
jb
add
add
add
int3
je
nop
cld
jmp
add
inc
faddl
dec
cmp
nop
jb
sbb
call
stc
nop
jb
and
jg
test
stc
nop
jb
add
xchg
add
add
nop
jb
sahf
inc
dec
cmp
nop
cld
jmp
push
add
sti
add
aaa
andl
stc
nop
jb
xor
add
jns
push
mov
xchg
ret
add
jle
add
jb
add
add
add
inc
add
scas
push
stc
nop
jb
add
add
add
inc
pop
into
xor
stc
nop
jb
icebp
add
jg
adc
nop
cld
jmp
bound
add
sahf
call
stc
nop
jb
add
push
stc
nop
jb
push
and
pop
and
inc
add
nop
jb
adc
ret
add
fwait
lea
nop
cld
jmp
add
xor
push
stc
nop
jb
inc
add
add
icebp
lret
movzwl
stc
nop
jb
add
add
push
mov
nop
jb
pop
dec
push
scas
lahf
add
nop
cld
jmp
adc
scas
call
fcoms
incb
xchg
ret
fildl
add
sahf
mov
stc
nop
jb
mov
add
adc
adc
notl
mov
stc
nop
jb
add
outsl
push
cli
push
stc
nop
jb
add
add
jle
inc
ss
inc
add
mov
adc
nop
jb
add
adc
lret
mov
nop
cld
jmp
adc
loopne
fs
mov
add
stc
nop
jb
pop
adc
pop
add
push
add
stc
nop
jb
pop
add
add
add
nop
cld
jmp
add
adc
add
nop
jb
add
jbe
or
nop
jb
inc
mov
adc
dec
pusha
stc
nop
jb
add
add
sahf
scas
add
push
stc
nop
jb
icebp
add
add
adc
mov
stc
nop
jb
add
dec
sahf
mov
jno
push
push
mov
xchg
ret
scas
int
and
jge
nop
cld
jmp
add
outsl
inc
jle
add
and
cmp
push
mov
xchg
ret
pop
add
add
dec
ror
stc
nop
jb
add
add
pop
imul
pushl
add
add
mov
xchg
ret
sahf
cmc
pop
cmc
pop
jl
test
stc
stc
nop
jb
fs
pusha
nop
cld
jmp
add
add
push
add
ss
add
mov
push
mov
xchg
ret
add
incb
nop
jb
add
add
sahf
add
cmpsl
hlt
ja
call
stc
nop
jb
push
lahf
adc
mov
nop
jb
add
aaa
or
icebp
nop
cld
jmp
add
and
adc
cld
jmp
add
aaa
add
cwtl
div
stc
nop
jb
add
add
ljmp
add
add
enter
jb
dec
add
pop
add
jle
inc
and
push
mov
xchg
ret
pop
dec
cmp
mov
xchg
ret
add
dec
xchg
lcall
std
push
xor
and
add
stc
nop
jb
add
add
add
cmp
jle
and
add
push
and
icebp
sbb
xor
stc
nop
jb
jle
add
sbb
hlt
inc
add
cmp
nop
cld
jmp
add
add
push
add
add
cld
jmp
adc
add
and
stc
nop
jb
pop
jle
add
dec
repnz
stc
nop
jb
add
pop
mov
stc
nop
jb
push
add
push
push
mov
xchg
ret
add
add
rclb
sbb
inc
add
lods
inc
add
mov
sbb
in
fldl
and
jno
fstl
xor
jb
fs
add
add
nop
jb
add
pop
jb
lahf
add
stc
nop
jb
add
pop
adc
add
pusha
push
mov
xchg
ret
add
dec
sti
add
push
stc
nop
jb
faddl
add
aaa
fiadds
xchg
ret
lods
and
inc
add
mov
xchg
ret
lahf
sahf
add
popf
jne
stc
nop
jb
add
mov
sar
jb
dec
dec
adc
xchg
stc
nop
jb
dec
sbb
bound
push
xor
popl
stc
nop
jb
add
pop
fildl
fnstsw
stc
nop
jb
lods
outsl
fistl
pop
push
mov
xchg
ret
adc
cmpsl
jp
lret
in
stc
nop
jb
cmc
faddl
cmp
jne
stc
nop
jb
sti
add
adc
xchg
jle
rclb
incl
add
dec
jmp
adc
mov
xchg
ret
add
add
loopne
xchg
pop
push
stc
nop
jb
sbb
and
add
adc
push
stc
nop
jb
adc
add
sub
loopne
call
int
add
add
push
push
mov
xchg
ret
inc
int3
add
inc
inc
cmp
nop
jb
dec
mov
add
add
mov
xchg
ret
inc
outsl
add
outsl
arpl
add
nop
jb
add
add
mov
xchg
ret
aaa
add
jae
add
dec
cmp
nop
jb
sti
test
adc
stc
nop
jb
sbb
mov
stc
nop
jb
add
add
sahf
cmp
and
inc
add
jbe
cmpsb
xchg
pop
stc
nop
jb
pop
add
das
add
add
in
push
push
mov
xchg
ret
add
adc
and
push
mov
xchg
ret
add
push
stc
nop
jb
lahf
add
sbb
ret
decl
nop
cld
jmp
inc
push
adc
int3
adc
add
stc
nop
jb
sbb
push
add
in
inc
add
nop
jb
add
adc
add
mov
adcb
incl
add
inc
int
das
popf
mov
stc
nop
jb
add
bound
add
add
stc
nop
jb
add
int3
inc
jecxz
inc
stc
nop
jb
add
fildl
mov
push
mov
xchg
ret
sbb
pop
jle
push
mov
xchg
ret
and
pop
inc
add
jb
nop
cld
jmp
push
lods
add
push
nop
cld
jmp
add
jle
inc
add
mov
add
test
lock
add
cmp
insl
fdivl
ret
add
add
add
jb
fildl
int
inc
add
and
jne
stc
nop
jb
cmc
aaa
outsb
mov
stc
nop
jb
pop
add
lahf
decl
stc
nop
jb
add
add
add
add
fdivrp
nop
jb
jle
add
ss
and
push
mov
xchg
ret
add
adc
out
add
xor
fsubl
mul
fisubrl
stos
add
nop
cld
jmp
add
push
dec
mov
push
nop
cld
jmp
inc
sbb
sahf
ss
add
jb
add
stc
nop
jb
add
dec
add
mov
jne
nop
cld
jmp
dec
add
push
push
mov
xchg
ret
add
mov
jmp
jb
and
int3
jmp
stc
nop
jb
add
jge
mov
add
nop
jb
lahf
add
das
add
stc
nop
jb
add
mov
pusha
add
lock
stc
nop
jb
rolb
rorb
dec
cmp
nop
jb
and
lcall
ljmp
adc
fs
xchg
mov
push
mov
xchg
ret
add
data16
sub
cld
jmp
add
add
jle
xchg
loop
call
decl
pop
add
jne
stc
nop
jb
sti
and
nop
cld
jmp
add
push
jle
pop
pop
xchg
test
stc
stc
nop
jb
int3
fldt
add
stc
nop
jb
add
add
js
cld
or
incl
dec
add
ret
stc
nop
jb
sbb
adc
outsl
xor
mov
nop
cld
jmp
add
add
add
enter
nop
cld
jmp
add
add
add
xor
stc
nop
jb
adc
add
mov
nop
cld
jmp
pop
and
jbe
out
push
stc
nop
jb
add
pop
add
add
xor
pop
push
mov
xchg
ret
stc
dec
pop
add
movb
add
xchg
nop
push
mov
xchg
ret
fildl
add
call
stc
nop
jb
add
aam
sbb
jo
nop
cld
jmp
add
stc
icebp
pop
adc
sbb
repz
nop
jb
add
pop
fs
mov
nop
cld
jmp
pop
int3
add
int
icebp
iret
mov
stc
nop
jb
push
add
add
pop
add
out
jne
stc
nop
jb
sahf
adc
call
stc
nop
jb
add
lea
push
mov
xchg
ret
add
adc
rep
stc
nop
jb
int3
add
add
push
nop
cld
jmp
add
and
add
fdivrl
mov
push
mov
xchg
ret
dec
add
int
add
push
xor
stc
nop
jb
add
add
push
inc
add
imul
sti
incl
push
add
add
add
lock
test
scas
rep
push
mov
xchg
ret
jle
fildl
nop
cld
jmp
dec
xor
add
out
push
push
mov
xchg
ret
add
add
clc
mov
nop
cld
jmp
ss
cmp
test
stc
nop
jb
adc
shl
dec
mov
stc
nop
jb
pop
ss
stc
add
push
push
mov
xchg
ret
add
outsl
add
add
mov
stc
nop
jb
loopne
rorl
push
mov
xchg
ret
add
lea
nop
cld
jmp
sbb
stc
and
inc
add
mov
push
loopne
mov
xchg
ret
lods
add
push
mov
add
add
add
add
jle
dec
push
mov
push
add
add
add
add
mov
mov
cwtl
push
popa
iret
push
jno
scas
and
gs
add
cmpsb
outsb
enter
mov
loope
jo
add
sti
fsubp
mov
add
jnp
lret
push
or
imul
push
aaa
push
jns
adc
pop
neg
add
scas
push
add
faddl
sub
mov
sub
add
pop
cmpsl
outsl
movsb
pop
notb
fdivl
mov
mov
jbe
fisubrs
scas
or
fldlg2
les
addr16
add
leave
and
stos
pushf
jle
fisttpl
shlb
inc
add
xchg
xchg
je
sbb
add
insb
popa
ss
cli
scas
and
popf
cs
cmc
ss
cmpsl
sbb
aad
je,pt
div
loopne
lret
movsl
add
insb
adc
push
bound
incl
and
cmc
mov
push
push
jge
ret
mov
lods
int3
cltd
int
scas
or
and
and
rcr
pop
into
xor
mov
mov
rolb
pop
dec
push
pop
addb
add
pop
rcrl
or
enter
js
push
add
movsb
int3
mov
dec
hlt
popa
das
add
in
les
jg
out
add
or
mov
mov
imul
xchg
lock
addb
sti
or
mov
cltd
xor
sub
loopne
movsl
out
aam
sbb
fnstenv
fs
inc
add
mov
cld
js
mov
inc
add
add
xchg
ret
fidivs
addb
xchg
shl
rolb
addr16
jle
jo
scas
sahf
xor
mov
in
lods
into
out
popf
int
pop
rcrl
lret
xor
add
add
insl
sbb
xchg
inc
lcall
pop
mov
push
movsb
popa
jmp
sbbl
mov
loope
add
inc
sbb
mov
out
and
push
lods
cmp
push
mov
std
stos
xchg
sub
add
filds
jmp
stos
mov
cwtl
or
mov
iret
dec
cmp
add
xor
in
rcll
into
cmp
mov
addb
addb
enter
xchg
icebp
or
push
lods
scas
jo
mov
dec
das
xor
sub
pop
or
jl
add
xor
mov
and
idivb
push
push
add
dec
xor
test
arpl
inc
test
add
out
or
mov
in
mull
cmpsl
daa
push
rcrl
or
dec
mov
add
aad
lock
xchg
icebp
clc
cmp
add
lds
cli
xor
movsb
sub
je
mov
inc
outsb
adc
push
jl
and
test
cmpl
lret
mov
outsl
mov
inc
lea
sarb
or
dec
add
outsb
mov
adc
nop
shll
shl
aam
sbb
mov
pop
gs
sbb
pop
pop
fwait
iret
push
test
inc
add
inc
add
sbb
lret
cmp
or
push
pop
and
pop
xor
sub
in
in
dec
pop
and
movsl
fbld
add
cmpsl
cmpsb
or
xchg
movb
test
std
sbb
test
dec
adc
cld
jb
pop
mov
lcall
add
mov
mov
arpl
adc
aaa
cmp
adc
add
das
inc
add
pop
or
int
dec
movsl
or
mov
push
pop
stc
and
in
popf
imul
or
xorl
je
movb
push
dec
fwait
nop
sub
or
pusha
add
fdivs
int3
mov
shlb
xchg
add
cmc
dec
shll
xchg
loope
into
movsl
pop
shl
call
add
dec
pop
mov
imul
out
clc
mov
out
jbe
inc
jmp
movsb
cltd
lds
loop
xchg
pop
in
or
add
add
fsubs
inc
add
xchg
cmp
push
lahf
jp
mov
or
das
loope
and
xchg
insl
fcomp
push
push
mov
ss
jbe
adc
xchg
push
mov
sbb
jno
je
aas
popa
mov
and
movsb
xchg
addb
add
add
cmp
jne
data16
adc
pop
movsb
mov
jne
add
pop
push
xchg
addb
jbe
mov
call
pushf
pop
aad
test
pop
mov
jl
jbe
lret
push
xor
out
add
jae
dec
push
and
add
sbb
xor
stc
push
int
in
call
add
jp
add
xor
jg
xor
xchg
ljmp
fcompl
add
into
adc
mov
hlt
fistpl
jge
addb
add
xchg
pushl
dec
lea
jbe
push
out
arpl
js
in
das
stc
movsl
xor
xor
push
addr16
xchg
fnstsw
in
hlt
inc
add
sbb
sar
push
ss
xor
lea
jbe
into
ds
fcmove
repz
cmpsb
and
mov
sbb
inc
push
arpl
and
xor
dec
stc
sub
add
inc
mov
mov
sbb
xchg
cmpsb
push
dec
dec
test
dec
and
xchg
add
imul
or
dec
gs
ja
test
add
pop
call
jns
aad
cmpsb
lret
insb
push
cwtl
fisubl
addr16
les
stos
out
imul
call
mov
lods
ds
adc
xor
add
movb
push
xchg
popf
mov
push
jle
jl
mov
sub
sahf
mov
icebp
push
clc
pushf
lods
jo
jl
xchg
push
inc
add
add
adc
push
pcmpgtd
mov
lods
fbstp
shrl
add
js
jae
add
les
inc
mov
pop
enter
mov
aad
dec
leave
lret
repnz
cmpsl
iret
ret
fists
fcoml
push
fwait
jmp
xchg
dec
fwait
and
pop
jae
push
lcall
sub
inc
iret
ljmp
mov
add
fiaddl
dec
pop
sub
sbb
leave
rolb
punpcklwd
negl
push
push
aas
adc
mov
dec
and
xchg
jae
inc
add
pop
in
clc
outsb
sbb
add
cmpsb
adc
ret
cmc
fs
pop
xchg
mov
mov
and
add
pusha
add
push
outsl
inc
in
stos
pop
pop
push
jecxz
scas
mov
jno
cltd
add
pop
testl
xor
insb
xchg
fadd
add
mov
push
push
mov
or
mov
add
adc
sub
adc
add
lret
push
mov
call
hlt
jge
mov
mov
sarl
mov
mov
push
pop
mov
xchg
cmc
loopne
xchg
fiadds
sub
add
pop
adc
aas
in
jns
pusha
add
push
sub
jg
int3
xchg
lcall
sbb
jo
cmp
mov
sti
xchg
or
sahf
jno
add
loopne
in
iret
dec
pop
sbb
sbb
inc
je
mov
insl
mov
push
ljmp
test
pop
xor
or
dec
xchg
dec
dec
or
sti
jmp
jb
sbb
test
and
mov
xor
xchg
mov
inc
sub
mov
dec
test
lahf
pusha
add
cmp
movsl
ret
gs
nop
sub
je
inc
pop
insl
rolb
les
pop
ret
das
js
cld
or
ja
xor
jle
dec
es
mov
push
pop
add
and
popf
mov
addb
xchg
decb
leave
and
adc
push
fnsave
add
fisttpl
lret
shl
mov
jno
sbb
mov
sbb
jns
push
inc
add
or
inc
inc
add
jno
jae
add
shlb
push
seta
jo
in
cmpsl
jne
add
add
bound
dec
insl
adc
or
add
ja
addb
subl
fcompl
out
mov
push
call
sti
mov
sub
out
std
cmp
xchg
test
mov
or
test
push
insl
adc
testl
ja
sahf
and
lret
imul
rorb
aaa
pop
out
jno
xor
fwait
pop
repz
cmc
stos
sbb
cmc
mov
lock
dec
loopne
les
add
lock
leave
ret
cmove
je
add
add
cli
lock
jmp
jge
add
ficomps
adc
les
nop
dec
inc
in
push
adc
and
sub
sbb
mov
flds
mov
pop
imul
add
add
mov
int3
sub
or
push
jmp
add
es
pop
out
add
fcmovnb
mov
fadd
pop
sahf
movsb
add
jg
pop
es
insb
mov
push
dec
sub
pushf
dec
out
in
call
rcrb
sub
or
xchg
inc
add
roll
or
sti
dec
lea
cmp
adc
jbe
and
mov
xor
cmc
in
sub
sbb
call
sbb
lcall
sahf
fs
out
add
idivb
push
dec
jmp
inc
jge
int
add
dec
sarl
dec
inc
pop
sahf
hlt
mov
out
outsl
push
add
icebp
jo
ret
mov
int
add
sar
mov
jne
popl
addb
arpl
fdivl
cmp
xor
into
lret
mov
pmaxsw
out
xor
cmp
add
in
in
nop
dec
and
add
add
mov
sub
dec
aad
jecxz
pop
in
sub
xor
lea
rcrl
pop
sub
jbe
add
scas
pop
addr16
add
cmc
imul
cmp
mov
movsb
out
adc
neg
cmp
sub
adc
jbe
mov
lret
test
jge
imulb
test
fidivrl
popa
push
das
cmp
leave
sbb
add
mull
add
push
add
lods
out
jnp
mov
adc
pop
loopne
add
bound
add
mov
cmc
dec
movsb
jnp
add
imul
mov
add
dec
xlat
ret
and
cmp
lret
ficoms
pop
movsl
mov
mov
push
movb
pop
hlt
arpl
jmp
and
xchg
sbb
fsubl
add
add
movsl
rorb
out
arpl
xor
cli
xchg
add
sahf
mov
imul
outsb
push
push
sbb
mov
mov
inc
add
mov
sub
mov
jne
cmpsl
hlt
add
fs
push
sbb
add
jg
sub
and
xchg
mov
pop
mov
fisubs
clc
dec
ss
loope
push
add
das
in
mov
out
mov
adc
ljmp
in
push
pushf
push
pop
pop
scas
fnstenv
or
add
jb
push
push
mov
xor
xorl
divl
loop
xchg
out
cmp
jle
pop
pop
push
push
scas
inc
add
outsb
mov
andl
pop
loopne
lahf
inc
add
mov
xchg
lret
sub
add
add
jo
test
mov
sbb
mov
add
push
hlt
fldenv
add
add
subl
std
fs
lock
leave
push
adcl
push
lock
sbbl
insl
aam
bound
jle
xchg
sarb
stc
cmpsl
jb
sbb
mov
push
sti
negl
ljmp
nop
mov
cld
add
pop
adc
xchg
add
jbe
ds
pop
mov
mov
xorl
inc
dec
insb
js
addr16
or
addr16
dec
adc
cmp
inc
add
int3
inc
add
mov
add
add
mov
adc
call
add
cli
lret
arpl
mov
sbb
push
or
es
pusha
add
jg
pop
ds
faddl
mov
add
push
cmp
adc
push
mov
jb
and
ja
in
aaa
xor
add
popa
mov
xchg
fstps
add
xor
xchg
faddl
insl
movsb
imul
mov
pop
mov
push
pop
ja
test
xor
dec
das
addb
and
xor
mov
push
add
lret
mov
mov
lods
inc
popf
mov
out
imul
add
lahf
mov
add
imul
data16
push
and
lcall
cwtl
mov
mov
lcall
jo
sbb
pop
add
xor
sti
mov
xor
inc
fdivrs
mov
cld
inc
addb
cli
jbe
adc
cmp
pop
cmc
push
add
cmp
lods
mov
or
loope
test
shl
mov
ret
and
pop
addl
push
mov
and
imul
scas
dec
std
sahf
mov
in
shrb
mov
call
or
lret
push
addb
addr16
pop
loopne
add
in
stos
xchg
lcallw
addb
iret
sub
out
leave
push
ja
adc
fisubrl
dec
icebp
cmpsl
cmpsl
call
fs
das
sbb
mov
mov
movsb
mov
xor
sub
add
mov
mov
je
xor
rorl
add
jmp
out
xchg
std
pop
cmp
sub
pop
adc
das
rolb
ficoms
push
cmp
xchg
das
jecxz
pop
sub
aam
test
lea
stos
cmp
jb
jbe
add
mov
add
lods
bnd
xlat
mov
lea
inc
add
out
sahf
pop
test
add
aaa
movsb
mov
inc
add
mov
xor
rcrb
push
inc
mov
mov
jmp
in
out
pusha
add
mov
mov
in
in
pop
push
mov
jo
xchg
and
sbb
lahf
inc
add
je
mov
push
leave
push
mov
scas
cmpsl
push
js
arpl
sub
nop
mov
adc
fldt
dec
xchg
cmp
xchg
subl
lock
adc
es
add
mov
addr16
dec
loope
lds
dec
ljmp
add
mov
jae
jno
add
mov
pop
sub
lcall
or
push
addr16
sbb
mov
pop
dec
movsb
icebp
into
push
sub
add
add
enter
test
cs
arpl
push
movb
push
testb
add
sbb
or
js
leave
loopne
out
push
jo
and
add
lcall
iret
mov
addr16
xchg
pop
les
xchg
mov
mov
sti
aas
cmpsb
call
and
adc
dec
sti
aas
mov
lods
aas
fcomi
mov
movl
or
ljmp
add
inc
add
js
aam
push
inc
add
add
pop
xchg
sbb
mov
xor
repz
sarw
jmp
movsb
or
stos
aam
add
dec
mov
xchg
dec
out
mov
das
xor
bound
push
xor
add
ljmp
hlt
es
mov
ss
bound
or
in
sbb
xchg
insl
inc
add
adc
cld
mov
jns
sarb
push
fdiv
mov
mov
mov
leave
rcl
adc
cmp
jl
xchg
or
inc
mov
mov
jne
sbb
pusha
add
adc
sbb
add
or
lcall
xor
hlt
sahf
repnz
mov
rcr
jle
inc
sbb
add
mov
and
outsl
add
add
sub
js
movsl
shl
in
dec
test
add
lds
loope
std
hlt
xor
inc
add
fdivrp
aam
jnp
imul
fs
pop
icebp
sbb
cmc
jmp
addr16
stos
and
sub
ss
aaa
pop
and
insb
push
jp
xlat
clc
push
icebp
int
in
iret
push
mov
jns
cmpsb
push
cmp
sbb
jae
jle
mov
leave
ret
in
jb
inc
jne
pop
out
dec
lret
cmp
xchg
lock
xchg
cwtl
das
jmp
loope
add
sub
adc
imulb
adc
pop
std
faddl
nop
xor
mov
jb
cmp
repz
mov
jo
sti
fildl
addb
push
pop
jo
mov
popa
call
lahf
dec
sub
xchg
dec
ljmp
pop
mov
sti
cli
movsb
sbb
mov
insb
mul
xor
inc
jns
lock
inc
add
add
cmp
push
xor
push
ficoms
jbe
imul
clc
sbb
or
loope
pushf
dec
mov
add
xor
sbb
add
adc
mov
mov
adc
in
addr16
mov
mov
xchg
pop
adcl
push
out
mov
inc
add
hlt
cmp
cltd
mov
push
jl
das
aas
push
dec
sbb
add
xor
adc
das
popl
ret
or
jge
mov
adc
in
push
push
scas
xor
jg
mov
sbb
sti
lret
and
sub
or
adcl
add
pushaw
add
add
cmpsl
xchg
add
dec
mov
push
ljmp
add
add
xor
and
ret
outsl
pop
mov
leave
xchg
push
jnp
jle
jae
jne
pop
and
shrl
inc
add
and
sbb
pop
lock
cmp
outsb
push
mov
cli
decb
icebp
es
sub
cmovo
cli
xchg
pop
fistl
pop
movsb
mov
data16
daa
fs
cmp
sbb
jo
pop
leave
dec
inc
sbb
movsl
lea
pop
mov
addb
inc
add
add
std
lcall
aad
add
iret
lods
sbb
lret
xor
into
shll
lods
sahf
loop
test
adc
stos
add
xor
xchg
adc
pop
fsubrl
add
cltd
cmp
add
ljmp
in
call
pop
jecxz
and
mov
sub
loopne
xchg
xchg
dec
push
sbb
jb
in
nop
adc
loope
jns
adc
mov
jmp
sbbl
out
add
sbb
adc
pop
iret
dec
clc
imulb
clc
push
js
cmp
inc
add
icebp
xor
pop
pusha
add
add
orl
aam
pop
int3
sub
xchg
jg
inc
movb
push
xchg
xchg
ljmp
ss
jmp
sub
ror
sub
fnstsw
jg
pop
pop
dec
test
fiaddl
cmpsb
cld
lods
aad
sbb
push
pop
add
dec
mov
dec
mov
push
jge
icebp
add
testl
add
icebp
lcall
xlat
je
or
xchg
addb
adc
sub
or
sbb
ret
loope
loop
shrb
loopne
js
add
daa
add
les
and
test
iret
add
mov
fistpll
adc
cmpl
add
push
sbb
push
jno
jecxz
cmpsb
pushf
es
inc
add
lea
adc
dec
push
add
or
cmpsb
or
xchg
lret
pop
dec
mov
lret
xor
add
scas
mov
xor
fwait
lret
xor
sub
pushf
adc
push
movsb
imul
sbb
mov
push
xor
sar
xlat
xor
out
adc
std
out
jmp
fsubr
push
push
outsb
repz
sub
mov
jnp
in
mov
xor
cmp
cli
jmp
and
add
div
arpl
insb
push
je
inc
rep
insl
repnz
loop
jne
jnp
fsubrs
loop
add
sbb
add
add
mov
sub
mov
dec
mov
add
add
xchg
enter
js
xor
jl
addb
pop
jnp
mov
pop
dec
scas
inc
add
jbe
jg
test
test
stos
add
sbb
jecxz
gs
xor
adc
mov
testb
sub
imul
pusha
add
add
addb
loope
inc
add
dec
in
lcall
pop
out
scas
sub
insl
aaa
lods
stos
jnp
jne
push
lds
xor
movb
add
and
xchg
mov
and
insl
test
popf
sbb
push
add
ja
add
add
push
mov
inc
daa
mov
jne
aas
nop
mov
outsl
ds
or
cmc
dec
xor
pusha
add
mov
loope
xchg
or
mov
flds
out
pop
arpl
or
in
adc
test
jg
ds
icebp
gs
addb
lahf
rol
add
call
inc
adc
cmp
mov
fildl
cmpsb
dec
dec
repnz
in
insb
ljmp
add
jnp
mov
pop
push
sub
inc
add
bound
cmp
movsb
xchg
or
jmp
dec
sbb
test
adc
mov
int
movq
loop
pop
fdivrp
xor
add
in
push
add
pop
push
sub
push
lea
add
mov
add
and
rep
leave
cmc
movsl
fwait
mov
repz
jge
sbb
insb
xchg
stos
jmp
mov
fstps
cmpsb
loop
jl
repz
add
add
jg
xor
add
imul
or
jno
movb
add
mov
in
roll
arpl
and
mov
cwtl
mov
add
iret
xor
fimuls
or
into
rcll
insb
inc
cmp
mov
push
iret
stc
cmc
add
add
mov
and
outsl
movsb
ret
bound
movsb
sub
and
addb
lods
je
xchg
mov
mov
and
mov
jno
add
add
insb
jns
cwtl
inc
add
sub
addr16
add
xchg
xor
mov
imul
push
fidivrl
cmpsb
mov
sti
sbb
lret
rcll
cmp
mov
mov
ret
add
mov
add
fcompl
pop
enter
cmp
aaa
popa
jl
add
aas
cmp
or
jbe
add
in
jnp
mov
inc
add
adc
icebp
jb
mov
lcall
fildl
add
lock
les
jp
imull
out
push
pop
dec
outsb
pushf
movsl
in
cld
sub
stc
popf
and
adc
mov
popa
mov
mov
and
nop
lods
adc
leave
mov
enter
sub
adc
int3
out
pop
nop
push
int3
xor
jl
push
repz
fistpl
mov
push
movb
cmpsl
and
test
and
in
mov
jecxz
pop
test
repz
daa
fmull
inc
xchg
fcomp
dec
lea
push
add
ror
adc
adc
push
fstps
cmc
xchg
push
xchg
imul
adc
mov
add
and
xor
sbb
inc
add
add
dec
mov
inc
sub
sub
adc
aas
loopne
int
test
incl
jg
add
mov
iret
push
jne
cltd
sbb
int3
push
pop
or
loope
add
arpl
xchg
fs
push
lds
rcll
js
push
pop
jne
push
inc
add
mov
xor
add
dec
subl
in
or
stc
hlt
mov
call
data16
xchg
in
stc
ds
cwtl
outsl
push
aam
cmp
shrb
inc
add
inc
or
sub
and
pop
mov
lret
cmp
jb
pop
xor
int3
mov
movb
sub
cli
dec
je
testb
sti
adc
leave
std
in
push
mov
dec
mov
scas
or
cmp
loop
xorl
fmuls
ss
rcll
mov
enter
xorl
pop
jnp
add
enter
in
lods
pushw
pop
imul
xor
daa
lahf
push
add
dec
pop
test
sti
xchg
lock
loope
mov
mov
lcall
stc
scas
xchg
addb
push
mov
inc
add
add
cmpsl
mov
cld
aas
jo
insb
insb
cmp
xchg
add
adcl
popf
je
add
add
int
or
movsl
xor
push
pop
xchg
in
inc
add
movsb
int
or
leave
aaa
es
sbb
mov
sub
push
out
mov
add
push
adc
mov
pop
xchg
daa
mov
int3
adc
je
add
pop
jo
in
xor
insl
fwait
push
ljmp
sahf
cmp
rcrl
inc
out
mov
push
pusha
add
loopne
adc
pushf
xchg
push
sbb
ret
stos
rclb
push
xor
push
scas
sub
lea
fst
push
add
jae
cs
add
lcall
inc
add
mov
pop
int
std
or
and
jg
push
int3
push
cmp
inc
add
adc
rolb
rolb
inc
add
adc
std
cmc
cmp
gs
std
imul
pop
loope
mov
mov
pop
xchg
adc
xchg
push
stos
and
lds
or
mov
mov
xchg
enter
pop
cmp
in
cltd
ret
insb
push
lock
in
push
loop
sahf
gs
arpl
bound
popf
lcall
xchg
mov
add
aas
xor
mov
stos
scas
fs
stos
test
sbb
mov
xchg
loop
jmp
addb
sub
test
clc
rolb
scas
mov
movb
jl
mov
adc
add
sub
jno
and
xor
and
in
aad
out
push
sub
lds
js
inc
push
sbb
cwtl
dec
inc
add
and
or
inc
add
mov
les
jp
xchg
xchg
inc
lret
push
mov
mov
inc
add
ja
push
mov
outsl
inc
xor
call
scas
ja
pop
cmpsl
add
inc
mov
outsb
push
insb
sub
cltd
mov
popa
les
fimull
lahf
mov
std
xor
bound
xchg
add
jmp
js
pop
and
cmp
mov
cli
addl
inc
add
test
add
test
add
inc
add
xchg
and
fldenv
sbb
xor
add
adc
lcall
aam
sub
pop
dec
cmp
scas
lret
ja
mov
push
xchg
inc
add
add
movb
iret
mov
ficompl
push
mov
mov
fsubp
pop
in
push
xor
add
add
adc
pop
pop
sbb
push
add
lcall
cs
bound
cmp
bound
and
insl
jp
add
inc
insb
scas
sahf
imul
xchg
add
gs
add
mov
sbb
add
cwtl
adc
fistl
add
lds
adc
in
xchg
movsl
out
inc
lcall
mov
insl
scas
cmpsl
push
roll
push
sbb
sub
cmpsb
cmp
or
add
dec
or
or
leave
mov
popf
scas
inc
add
sub
pop
mov
aaa
jge
cmp
mov
push
add
xor
xlat
jecxz
inc
add
xor
xor
or
add
pop
movsb
jp
add
pushf
push
mov
cmp
adc
jnp
dec
mov
and
cmpsl
mov
fcoms
sbb
cmpsl
repnz
test
loop
lods
xchg
rcr
repnz
sub
ljmp
cmp
xor
popf
sbb
test
test
sub
add
jno
add
xchg
pop
enter
pop
sbb
push
ret
pop
fistpll
int3
cmp
fstpl
add
test
imull
fcomps
xchg
pop
xor
add
outsl
push
xchg
dec
mov
add
sub
cwtl
idiv
jle
jns
mov
aam
imul
sbb
jne
sub
pop
sub
push
or
or
jb
fmuls
lret
mov
popf
lahf
je
ljmp
loope
push
sbbl
xchg
test
or
cmp
nop
sti
or
sub
fisubrl
pop
jecxz
xchg
call
mov
xchg
or
cmp
cltd
fs
mov
adc
dec
iret
sub
mov
andl
push
sahf
jle
xchg
jecxz
pushf
test
xlat
jno
idivb
add
pop
push
dec
into
push
add
xchg
sbb
xchg
xchg
add
sarl
popf
jnp
sub
repnz
sti
sbb
mov
and
std
repz
cwtl
sbb
insl
sti
fwait
mov
push
jmp
addb
push
jle
sbb
add
out
mov
movsb
mov
cmp
dec
sbb
jmp
add
and
les
lock
les
jne
xchg
jecxz
fidivs
add
and
push
pop
jg
lcall
and
mov
mov
inc
add
mov
and
add
and
push
sbbl
pop
adc
push
push
mov
ja
mov
imul
aad
add
xor
jae
out
and
xor
call
arpl
lods
jge
add
idivb
jae
pop
push
std
loop
stos
outsl
pop
adc
icebp
sbb
pop
lea
sbb
xor
or
dec
mov
inc
shr
mov
and
fmuls
addl
or
fistpl
arpl
std
push
xor
push
push
mov
add
in
inc
dec
in
je
in
imul
push
and
cmp
push
flds
fldcw
rolb
add
sub
out
mov
pop
pop
out
mov
movsl
btc
dec
jecxz
adc
mov
sub
add
or
xchg
mov
cwtl
sub
dec
or
mov
and
or
ljmp
pop
out
add
lfs
fwait
out
enter
inc
add
hlt
or
adc
cmp
mov
cmpsl
test
sub
push
pop
cld
mov
and
rclb
add
daa
ret
add
mov
out
test
add
dec
jle
int3
sub
fsub
and
mov
mov
dec
popf
or
aad
fists
scas
bound
dec
out
hlt
push
aas
mov
or
int3
or
and
cmpl
outsl
fs
data16
stos
pop
sub
xorl
and
or
mov
lret
cld
stos
pop
xchg
mov
mov
and
inc
mov
test
ret
sbb
fadd
add
lar
dec
fs
lea
scas
es
xor
outsl
pushf
je
cmpsl
orl
add
and
je
cmp
jge
addr16
notl
lock
lcall
lret
push
lcall
out
shll
int
popf
repnz
jl
pop
jp
mov
call
jae
in
cwtl
movaps
mov
mov
xor
dec
inc
add
lods
cmp
ss
loopne
xchg
push
popf
jp
outsl
adc
and
frstor
pop
les
add
add
xchg
ss
stos
lock
or
and
cltd
rorb
test
add
jg
xchg
fistpll
lods
push
fildll
repz
pushf
jb
pop
adc
data16
in
mov
and
fistpll
mov
insb
pop
inc
add
xor
push
xor
ljmp
adc
push
xchg
sahf
rolb
or
add
add
in
mul
nop
jecxz
xor
add
mov
xor
cli
pminsw
adc
repnz
stc
add
sub
je
loope
xor
into
xor
add
sti
jae
mov
adcl
mov
add
jae
es
jmp
jno
add
mov
jge
movsb
jl
jb
inc
add
insl
aad
adc
inc
ret
pop
mov
mul
jle
fsubl
clc
imull
addb
ret
imul
ljmp
mov
push
les
es
cld
mov
add
add
iret
push
pop
sbb
mov
pop
gs
das
icebp
rcl
sti
lds
add
mov
addl
xchg
cwtl
pop
or
xor
push
mov
fnstcw
fcmovne
jge
push
cmp
sbb
out
pop
mov
scas
sbb
or
add
push
scas
mov
popf
ret
in
mov
push
cli
dec
pop
pop
les
jno,pt
rcrl
dec
cli
dec
mov
ja
fstps
push
xchg
gs
mov
out
xchg
pop
mov
mov
adc
daa
ffreep
jo
cs
outsl
pop
xchg
cwtl
or
cs
fbld
dec
sub
pop
push
sti
mov
and
fstps
mov
aad
sub
add
add
mov
adc
push
and
or
shrl
mov
add
adc
sbb
sbb
mov
xchg
in
pop
xchg
les
sarb
rolb
dec
mov
cs
or
pop
jg
mov
pop
ficoms
add
lret
test
sbb
dec
cld
push
xor
add
lret
sbb
dec
sar
pop
adc
mov
pop
xchg
push
lods
pop
cmp
cmp
mov
rolb
insl
sub
inc
add
and
mov
jl
scas
icebp
clc
cmp
add
push
mov
loope
pushf
jo
addr16
mov
scas
lods
idivl
aas
nop
lcall
shl
cmp
ficoms
ds
push
hlt
push
lret
xor
inc
add
test
jbe
push
mov
cld
sbb
add
jg
add
add
xlat
outsl
aad
loope
es
test
fisubs
sub
into
rolb
negl
inc
lcall
rolb
cwtl
sub
mov
sub
xor
stc
push
sahf
fdivrs
popf
jl
filds
fwait
push
cld
sub
imul
popa
dec
pop
arpl
out
mov
int
and
adcl
cltd
pop
js
add
sahf
ljmp
mov
add
adc
add
lods
and
in
pop
out
jbe
add
jns
mov
inc
fucomip
rclb
lahf
mov
mov
add
pop
inc
add
mov
mov
push
mov
outsl
cmpsb
stc
shll
in
add
jg
jnp
mov
cli
jmp
add
test
add
aam
cld
jmp
iret
xchg
jns
cmp
xchg
aam
mov
add
mov
pop
sbb
inc
add
mov
lcall
mov
mov
out
jge
mov
jle
and
mov
and
in
sub
xor
adc
mov
sub
fnstcw
dec
mov
xchg
stos
sti
xchg
xor
push
add
stc
in
xchg
adc
fcomps
sahf
pusha
add
pop
jns
inc
add
sbb
jbe
xchg
pop
cmp
xchg
js
mov
add
sbb
pusha
add
mov
stos
add
leave
pop
je
xor
shrb
repz
ret
inc
add
les
mov
mov
push
mov
cmp
jg
imul
pop
xlat
and
ss
mov
insb
mov
imul
jmp
iret
mov
int3
mov
jmp
jbe
mov
loope
dec
outsb
mov
cltd
ds
inc
add
rcrb
xlat
mov
test
in
pop
jo
leave
pop
icebp
sbb
pop
ret
jge
or
sbb
movb
add
xlat
and
daa
jne
pop
sahf
in
jl
in
inc
add
fs
inc
add
or
jmp
sbb
jmp
inc
int
jge
cld
mov
xor
push
dec
add
popf
xchg
fisttpll
and
jns
push
mov
rol
add
xchg
fstps
add
gs
subl
pop
add
mov
jmp
pop
sub
arpl
std
jecxz
add
jb
fldcw
ficoml
jns
ficoml
sbb
add
add
inc
cltd
lock
adc
cli
mov
imul
lret
push
and
push
dec
les
in
inc
lahf
dec
jmp
aas
scas
addr16
xor
jmp
pop
xchg
jle
or
mov
and
adc
xchg
rclb
xchg
arpl
ficomps
add
and
in
cmp
scas
adc
lds
add
pusha
add
xor
lcall
pop
push
push
inc
sbb
dec
jge
mov
icebp
jb
in
enter
push
and
add
repnz
lods
push
add
sbb
addb
jae
push
dec
xchg
fldpi
xor
xchg
hlt
mov
rclb
test
stos
mov
outsb
pop
bound
into
adc
outsl
inc
imul
repz
popa
or
cmp
fcomps
cmp
add
xchg
and
cwtl
pop
xor
stos
lret
mov
push
pop
mov
cli
gs
loop
std
ss
add
mov
int
pusha
add
or
jbe
inc
or
push
mov
add
dec
add
adc
add
mov
add
inc
add
insl
mov
mov
adc
je
mov
jno
mov
xor
sbb
fimuls
pop
cltd
scas
rorb
mov
add
fwait
arpl
mov
fcoms
in
add
repz
cmpsl
mov
nop
and
es
mov
loop
mov
add
pop
loop
test
lock
bound
jg
inc
mov
add
cmp
mov
cmp
fsts
imul
jb
xor
inc
cmp
pushf
jne
out
add
inc
add
addr16
xchg
shll
jg
jnp
hlt
add
fcmovbe
enter
lcall
mov
add
aad
ret
rolb
add
cmpsb
cmp
iret
lahf
popf
xor
test
sub
cld
dec
aas
adc
xor
in
sub
add
or
adc
out
mov
and
negl
dec
imul
xor
rolb
lds
insb
xor
inc
xchg
jge
sbb
xchg
mov
loop
lock
movb
je
push
iret
xchg
push
cltd
inc
add
fiaddl
lahf
xchg
sbb
sub
addb
sti
leave
imul
call
xchg
lret
out
mov
shll
cmc
cmp
cmpsb
lods
sub
mov
rolb
addr16
sbb
mov
ja
mov
mov
push
mov
jge
push
ljmp
test
es
stos
daa
adc
add
or
add
lcall
or
sub
xor
mov
loop
push
les
cmp
add
and
mov
cmp
popl
pop
aaa
lret
pop
xor
stos
mov
push
aaa
dec
ja
movsl
fldl
mov
test
xchg
lods
fwait
out
pop
xchg
hlt
xor
and
dec
mov
fwait
and
les
shrl
jmp
push
rorb
xchg
enter
scas
xor
loopne
add
sbb
sub
aaa
cmpsb
test
mov
sub
loopne
cld
mov
adc
fs
out
sub
mov
pop
pop
mov
mov
mov
cmp
mov
add
cmc
cs
cmpsl
xor
jae
add
cmc
pushf
arpl
xchg
ds
push
add
push
pusha
add
inc
push
scas
add
push
add
scas
arpl
aaa
lods
add
fsubrp
fisubrs
daa
and
inc
add
sub
addb
shl
sub
je
dec
sbb
pop
imul
icebp
repnz
stc
push
fidivrs
mov
gs
sarl
orl
sbb
add
add
in
movb
pop
in
outsl
jbe
push
xor
jmp
iret
dec
fs
fsubp
lcall
shll
popf
xchg
insl
in
mov
fidivl
xlat
movl
xor
pop
aas
mov
sti
add
inc
icebp
jle
fstpl
aam
pushf
nop
xchg
adc
hlt
adc
fsubr
stc
sbb
icebp
xchg
sbb
push
add
and
mov
in
and
divb
mov
cmp
or
icebp
mov
jb
enter
inc
les
ret
add
addb
xchg
mov
call
adc
jp
jge
data16
repz
sub
jo
arpl
add
shlb
mov
lods
push
dec
mov
pop
movsb
in
roll
mov
or
imul
imul
add
sahf
addb
inc
push
fldcw
xchg
dec
fistpl
stos
and
gs
adc
mov
push
push
add
aam
push
jg
loopne
popa
stc
das
shl
das
push
mov
aaa
jecxz
push
add
movsl
seto
sahf
or
imul
xchg
scas
test
pop
call
mov
mov
in
inc
dec
jle
in
dec
xchg
push
ds
insb
imul
ljmp
add
jecxz
aad
addb
jae
test
jnp
xchg
cmp
add
stc
or
mov
mov
mov
dec
in
aas
jge
add
inc
push
icebp
mov
sub
daa
das
adcl
mov
popf
push
add
imul
cmpsb
in
pop
ja
sbb
push
push
mov
sbb
fnsave
stos
test
add
mov
in
xchg
dec
cmpsb
fnstsw
aas
push
in
and
sti
aad
negb
aaa
pusha
add
push
int
ret
add
jp
popa
xchg
dec
cmp
scas
mov
mov
push
cmc
aaa
jno
add
mov
or
dec
repnz
test
add
jmp
aam
adc
fimuls
adc
push
pop
je
cli
inc
add
xchg
pslld
add
push
mov
rcrl
mov
lahf
inc
daa
jmp
add
insb
pop
and
mov
imul
sbb
inc
add
add
lods
pop
loope
rolb
add
add
sbb
push
or
mov
leave
adc
test
xsaveopt
mov
cmc
repnz
mov
push
cs
loopne
jle
jmp
jbe
add
cmp
in
ja
mov
pop
stos
sub
dec
negl
mov
rolb
or
or
adc
mov
or
sbb
movsb
sbb
in
dec
xchg
cltd
sub
mov
lea
pop
addl
dec
mov
repnz
out
dec
imull
je
call
fstpl
or
in
dec
stos
movb
push
repnz
sub
dec
or
mov
insl
push
adc
adc
dec
push
mov
or
lret
sbb
int3
push
adc
jl
jp
mov
stos
into
mov
lea
pushf
inc
mov
sub
movsb
fdivl
add
cmp
or
das
sarl
add
adc
outsl
rorb
arpl
mov
pop
flds
and
pop
sahf
cmp
pop
push
and
pushf
js
add
push
je
mov
ret
nop
movswl
mov
fs
add
sub
push
lods
mov
bound
cmpsl
stc
push
xor
sbb
ja
add
daa
stos
jne
repnz
fstpl
lods
sbb
inc
add
add
xor
push
push
movsb
call
test
fwait
int3
mov
inc
xchg
fwait
jmp
stc
daa
les
ja
mov
ds
push
aaa
call
jne
push
jns
sub
out
mov
sbb
pop
test
mov
sbb
add
inc
add
or
inc
add
add
sbb
or
add
or
jno
pop
xchg
jmp
mov
sub
out
sysretw
lds
push
out
imul
add
lea
sbb
push
test
add
or
aam
dec
xchg
push
scas
fwait
add
lods
dec
cmp
mov
add
nop
lcall
xchg
inc
add
add
aaa
in
lds
add
jno
push
bound
jge
add
ja
imul
dec
inc
add
jbe
sbb
mov
mov
sub
pop
pushf
popf
push
int
mov
enter
pxor
pop
ljmp
insb
mov
out
inc
add
stc
aaa
sub
subl
add
out
cmp
adc
mov
sbb
mov
mov
movb
jb
sub
jmp
or
movsl
iret
iret
push
mov
sub
ja
xor
in
mov
xchg
inc
cmp
test
xlat
push
daa
into
in
or
mov
jg
in
test
in
adc
insl
hlt
jne
push
aas
lods
pop
call
hlt
mov
icebp
mov
sub
lcall
or
add
jg
fsts
cwtl
sbb
mov
add
fmuls
js
xor
mov
mov
lods
mov
inc
add
icebp
xchg
add
call
popf
stos
xchg
add
cmp
popf
mov
mov
push
add
mov
mov
out
rcrl
add
pop
gs
add
insl
sbb
jg
daa
outsb
out
sub
cwtl
bound
mov
fldenv
xchg
push
fimuls
dec
call
adcl
add
sub
push
outsb
rorl
add
xchg
outsl
adc
add
cmp
rolb
les
sbb
xchg
pop
xchg
inc
add
clc
jne
xchg
xchg
stos
std
pop
push
pop
xchg
cld
mov
sub
test
mov
jns
cwtl
mov
push
and
jb
push
push
fstl
mov
insl
imul
enter
xor
scas
xchg
ljmp
enter
std
lods
jo
lcall
xor
sub
cmp
jae
js
add
xor
test
sbb
dec
out
jmp
lods
jecxz
lret
outsb
iret
adc
inc
cwtl
push
test
dec
sbb
test
jbe
out
test
or
gs
or
lahf
adc
mov
add
and
test
addr16
fs
arpl
data16
stos
roll
cmp
fwait
lret
inc
add
test
outsl
adc
jo
mov
ss
imul
add
shll
das
pop
fldl
add
mov
cmp
andl
scas
jecxz
add
add
or
jle
inc
movsb
mov
push
xchg
mov
mov
jb
mov
xor
mov
jne
inc
clc
lods
mov
add
and
jecxz
lods
xlat
leave
jb
jp
dec
xor
mov
mov
cmpsb
lret
dec
pop
popf
mov
push
xlat
mov
inc
dec
movsl
xor
xor
cmp
out
mov
cli
or
cmp
dec
inc
add
iret
mov
inc
add
fdivr
jo
add
fdivrl
jae
cmc
cmpsb
addl
into
sub
pusha
add
xor
aad
cmpl
jmp
scas
shlb
xor
jbe
int3
jo
inc
inc
add
xchg
and
les
icebp
aad
insl
stos
cmc
push
inc
mov
cmp
sbb
lcall
loopne
lret
xchg
dec
inc
add
push
add
push
adc
adc
fsubrs
ds
adc
add
xchg
sub
test
addb
stc
sbb
mov
mov
in
sbb
sub
sbb
add
or
push
popa
mov
leave
loop
aas
dec
mov
movsb
adcl
outsb
mov
add
sub
cmc
leave
shll
xchg
add
je
xchg
ss
pop
loope
add
push
repz
sbb
inc
add
stc
mov
sub
push
add
and
fcmovnu
adc
outsl
adc
push
xchg
addr16
fucomp
adc
pop
jae
pop
mov
insb
mov
mov
mov
or
inc
add
or
and
daa
xchg
neg
cltd
push
or
shr
stc
push
mov
xchg
mov
pop
jne
testl
aam
das
gs
popa
subl
xor
popa
mov
nop
lock
lcall
dec
incb
fnsave
mov
push
cmp
mov
cmp
shll
jbe
mov
data16
lret
xor
jge
or
add
stos
jno
aad
push
stc
outsb
dec
xchg
nop
cmp
add
bnd
lds
adc
xor
mov
aad
scas
decb
inc
add
sbb
jae
movb
add
inc
add
ljmp
pop
enter
cld
jnp
ljmp
jb
jns
rcrb
mov
xor
add
das
jecxz
inc
add
xchg
jg
push
xor
add
lahf
jns
fidivs
cmp
popf
xlat
shll
mov
outsl
push
or
sarb
mov
and
inc
add
add
mov
lea
add
xchg
xchg
sub
fsubrl
dec
fwait
hlt
mov
mov
daa
mov
xchg
mov
mov
add
jae
xchg
in
js
repnz
adc
inc
std
dec
ret
daa
xchg
repnz
and
or
dec
inc
add
pop
mov
push
push
out
add
in
lahf
dec
inc
add
sbb
lods
jmp
pusha
add
xor
and
mov
fwait
pop
in
daa
mov
jb
xchg
addr16
rolb
cld
xor
and
add
rcl
scas
xchg
icebp
enter
or
push
cmp
inc
jae
in
mov
push
cld
mov
mov
jae
or
and
dec
sub
mov
pushf
outsb
or
sub
push
rorl
xchg
mov
push
inc
add
add
inc
pop
cmp
lock
adc
push
or
mov
cmp
pop
ss
cli
jbe
sub
add
xlat
aas
xor
aaa
loop
pusha
add
push
lods
aaa
pop
pop
rolb
mov
enter
jecxz
clc
inc
filds
mov
mov
add
and
icebp
xlat
or
dec
adc
aas
into
push
cmc
jmp
xchg
js
cwtl
bound
into
ljmp
add
sbb
push
pop
sub
jecxz
sbb
lds
mov
add
fs
movb
adc
add
rcll
mov
lods
mov
pop
inc
add
jnp
pushf
shll
or
jg
add
leave
inc
add
add
movsb
pop
pop
in
add
add
push
pop
aam
ss
imul
pop
cli
adc
pop
cwtl
mov
sub
cmp
sbb
jns
sub
xor
push
es
mov
lods
fidivs
add
rolb
push
pop
cmpsl
sahf
inc
add
cmpsl
xor
jp
xchg
xor
dec
mov
mov
pushf
add
push
jl
jae
push
pop
cmpsb
sub
pop
cmc
rol
add
sbb
add
jp
add
imul
ds
jne
daa
dec
loopne
in
cli
loopne
or
xchg
xchg
pop
into
rcrl
add
scas
insl
mov
fwait
inc
add
ret
scas
dec
mov
es
movsb
mov
js
push
mov
jp
sub
loop
ljmp
lods
call
imul
es
xchg
sbb
jg
inc
mov
inc
add
dec
fstps
push
jecxz
push
xchg
jp
jns
dec
movsb
add
addb
popa
inc
add
mov
and
dec
loope
mov
vmovups
sub
and
add
leave
dec
pop
fcmovne
les
lahf
addb
flds
mov
jge
add
add
loop
imul
push
pslld
xor
add
js
in
xchg
subl
xor
shrl
push
xchg
out
nop
cmp
pusha
add
ljmp
mov
test
mov
pop
outsl
pop
add
cltd
push
or
adc
pop
adc
mov
add
adc
pushf
cmp
cmp
aaa
xchg
jnp
xchg
out
pop
popa
cs
xchg
rcll
mov
cmp
jecxz
je
xchg
stos
sahf
lret
icebp
push
fsubrl
mov
or
roll
xchg
mov
mov
inc
add
xchg
jge
dec
ss
xchg
fnsave
jecxz
es
daa
and
jnp
lcall
sub
es
arpl
lds
mov
add
jg
pusha
add
jge
xor
add
pop
in
int
sub
pushf
sbb
roll
jb
pop
fs
ds
iret
inc
pushf
test
adc
rolb
add
xor
inc
add
cltd
pop
out
rorb
cli
inc
add
inc
add
or
mov
rcrl
imul
iret
mov
mov
xor
mov
push
lret
pop
test
mov
and
divl
jge
sub
adc
dec
cld
rcrl
iret
lahf
in
sahf
imul
popa
sub
cltd
mov
add
loopne
ds
setb
popa
adc
out
add
int3
mov
cld
sti
hlt
fistps
fisubrl
ret
push
in
insb
dec
xadd
iret
or
ja
sbb
and
mov
fadds
add
aam
dec
add
add
fildll
ljmp
push
add
lock
movsl
hlt
ret
sahf
mov
jno
arpl
imul
xor
jg
and
sti
repnz
sbb
pusha
add
pop
cmpsb
call
pop
lret
push
rol
dec
inc
out
and
iret
add
data16
loope
xor
cmp
lock
sbb
mov
mov
dec
clc
nop
pop
cltd
jge
dec
sub
xchg
mov
sti
or
add
sbb
lcall
or
data16
xor
and
icebp
pop
jmp
add
or
inc
imul
data16
rcrl
fwait
notb
cmp
jae
mov
mov
gs
add
lea
add
movsl
mov
mov
jns
sub
ds
and
xor
pop
cmp
daa
pop
loope
xchg
xor
push
cli
ret
insl
push
sub
loop
pop
jmp
loope
pushf
sbb
dec
jb
cld
movsb
sub
les
pop
mov
insl
mov
into
pusha
add
stos
outsb
mov
js
mov
jmp
mov
addb
adc
mov
jbe
jl
jmp
andl
imul
imul
es
xchg
jno
xor
enter
cmp
pop
movsl
lea
test
push
insl
jecxz
add
add
pop
ret
arpl
cmp
loopne
movsl
push
adc
pop
or
adc
fstl
add
push
ss
or
dec
mov
dec
inc
outsl
sahf
aad
shrb
and
adc
ds
add
cltd
mov
rcrb
xchg
lahf
or
scas
les
imul
pop
inc
add
fcomps
or
xor
sub
push
incl
add
pusha
add
jg
in
xchg
gs
inc
add
movsl
rcrb
add
ss
push
inc
hlt
dec
nop
aas
lcall
add
loop
inc
fcmovnbe
inc
push
movsb
jno
into
xchg
int
xor
add
mov
jle
and
sub
or
and
jmp
sub
fs
pop
add
in
sarb
setno
jmp
cmc
test
fcmovbe
cmpsb
insb
push
enter
push
cmp
scas
mov
add
test
jp
sub
pop
or
pop
cmpsl
scas
mov
mov
outsl
cltd
cmp
mov
add
adc
jge
lahf
jg
add
lret
xchg
and
lds
stos
repz
jae
jno
cmc
and
call
jne
shl
fisttpll
and
jnp
rcl
fcmovb
add
cmp
jmp
mov
add
add
rolb
add
inc
pop
dec
icebp
xor
inc
xor
mov
jle
mov
mov
into
xchg
sbb
lret
ret
add
hlt
sbb
push
mov
sbb
xchg
fxch
fsts
xorl
int3
pop
jmp
in
dec
test
add
pop
rcrl
jbe
xchg
xchg
mov
inc
add
or
enter
call
popa
int3
adc
ret
xchg
mov
add
add
sub
xchg
pop
mov
sahf
pop
insl
adc
mov
inc
add
das
stos
cwtl
ja
movl
ljmp
shlb
pushf
jbe
mov
sbb
adc
addr16
xlat
sub
mov
fmuls
cmpsl
cmpsb
outsb
dec
fisubl
cmp
ret
movb
push
sub
mov
rcrb
cmc
mov
nop
inc
test
pushf
das
test
sti
cmp
stos
stos
and
xchg
outsl
gs
adc
pop
bound
sub
arpl
add
sub
add
and
sbb
in
mov
xor
test
mov
jnp
fcoms
cmp
pop
int3
bound
in
xchg
mov
push
mov
xor
imul
cmpsb
or
movsb
int
addr16
sar
cmp
aaa
into
cmpsl
dec
std
adc
aas
stc
lea
scas
inc
jmp
loopne
test
in
xor
mov
lea
ljmp
clc
jbe
std
addr16
popa
test
mov
es
ljmp
dec
cmc
sti
int
mov
addb
dec
adc
into
fcmovnbe
dec
and
xor
jle
sbb
jbe
mov
pop
mov
mov
add
mov
jp
jg
shll
dec
lcall
inc
add
sub
fldt
inc
add
add
testl
and
leave
mov
jns
addb
cld
jno
js
in
inc
inc
add
fisttps
xchg
sub
aam
aad
insb
pop
cld
mov
sub
or
xchg
or
add
sti
dec
or
js
mov
addb
cmp
into
addr16
int3
xchg
pushf
cmp
imul
lock
das
mov
and
mov
jbe
leave
push
stc
mov
sub
cmp
push
leave
xchg
mov
add
add
jns
adc
or
lcall
outsb
inc
add
mov
sub
popf
cmpsl
dec
lret
lcall
mov
mov
sbb
pop
sti
ficompl
dec
in
add
je
mov
mov
in
leave
int
push
cmpsb
popf
push
jle
bound
cmp
sub
mov
jecxz
fbstp
sbb
test
in
xchg
ss
cli
push
out
sbb
and
fidivrs
mov
ret
popa
mov
push
dec
add
fcoml
pop
mov
sbb
xor
rorl
lret
cmp
lock
cs
jnp
movb
movsb
mov
inc
cmc
movsl
adcl
flds
aam
xor
add
dec
adc
adc
clc
mov
nop
and
insl
jne
jge
out
popf
mov
outsl
sbb
add
adc
add
cmp
leave
jb
in
std
or
mov
add
enter
fistpl
pop
clc
pop
dec
mov
cmc
mov
or
push
rcrl
mov
insl
addb
push
dec
aad
pop
cmp
addb
test
lods
cltd
mov
pop
test
insb
lcall
add
mov
xor
jo
shl
jo
or
jo
les
in
ret
bound
mov
or
es
add
add
jl
int
add
fwait
mov
adc
icebp
jbe
add
add
mov
js
aad
dec
imull
outsb
pusha
add
mov
nop
shlb
cwtl
lahf
aaa
mov
mov
push
mov
leave
mov
pushl
movb
mov
jns
nop
ja
push
mov
stos
xchg
cmp
lods
pop
add
push
nop
mov
jge
loop
js
in
add
mov
fidivrl
cmp
stos
pop
mov
and
mov
in
add
js
jb
dec
jo
xor
stc
mov
cmp
mov
addb
add
adc
faddl
enter
add
cld
inc
add
jb
cmc
loopne
lods
testl
notl
or
add
jecxz
enter
add
lods
jno
repnz
shl
or
scas
rolb
rcrl
js
push
js
loopne
loopne
out
and
and
sbb
movsl
std
xchg
pop
fwait
mov
in
or
inc
add
xchg
in
xchg
mov
cmp
inc
add
pop
pop
jmp
push
sti
inc
mov
xor
test
aam
cmp
xlat
mov
push
je
adc
inc
aam
insl
xor
les
insb
xchg
dec
add
adc
add
xor
and
mov
or
add
popf
push
dec
nop
sbb
push
mov
cmp
push
lds
add
cltd
jo
stos
ret
dec
dec
jns
push
adc
fimull
iret
pop
sub
test
fbld
or
pusha
add
xchg
cmpsb
mov
addb
std
mov
and
xchg
jnp
lods
addb
inc
jnp
aad
xchg
cmp
repnz
mov
out
jmp
js
sub
add
xor
xchg
mov
sbb
sbb
or
inc
add
mov
stc
mov
insl
addb
add
pusha
add
cmpsl
addb
out
push
xor
mov
bound
pop
mov
shrl
and
cmpsl
and
jle
adc
and
stos
push
movb
cmp
jns
fwait
adc
add
jp
movsb
mov
ljmp
sbb
cld
push
add
fimull
shrb
add
shll
test
push
adc
mov
sbb
add
cltd
pinsrw
push
mov
test
and
push
ja
mov
addb
xor
xor
xchg
ljmp
mull
mov
fidivs
jle
add
jo
push
cs
push
lret
lods
jnp
inc
add
repz
std
rep
pop
aas
cltd
mov
add
icebp
pop
cmp
xor
data16
mov
jno
mov
pop
xchg
cmp
in
add
les
clc
dec
fimull
pushf
decl
movsb
adc
add
inc
add
call
sbb
std
loopne
or
or
mov
lret
push
cmpsl
jmp
popa
fsubrl
or
mov
or
pop
mov
sub
lahf
rolb
add
ljmp
in
mov
dec
test
fucomi
mov
mov
mov
add
mov
sub
mov
jmp
fwait
pop
xlat
adc
push
test
or
xadd
push
inc
add
xchg
or
cmp
add
xor
jae
addb
jb
inc
mov
adc
lcall
iret
push
imul
xor
mov
add
or
xchg
out
inc
add
push
or
ss
scas
jno
dec
jp
mov
aaa
sub
xchg
dec
mov
lods
ja
out
xor
cmp
mov
jge
cmp
rolb
leave
xchg
test
add
sbb
stos
in
pusha
add
shrl
inc
ds
mov
movsb
mov
mov
add
add
loopne
mov
pop
xchg
fdivl
add
ja
lods
mov
push
test
xor
pop
data16
lock
call
xchg
sub
cmp
mov
fldenv
pop
cmp
jbe
inc
rolb
add
mov
inc
out
xchg
push
add
mov
fldt
test
pavgw
push
sbb
pop
lret
iret
mov
xor
repz
js
xchg
sub
push
and
mov
iret
gs
pop
ljmp
cmp
sub
cmp
mov
call
mov
jno
push
push
loope
jae
or
jl
sub
bound
or
cmp
cmp
psllq
ja
add
mov
sub
xchg
je
fsubrp
xor
das
sti
xchg
out
pushf
adc
sahf
movsb
pop
dec
ret
aas
sub
jp
mov
sub
inc
add
add
bound
pop
xchg
ljmp
jp
mov
test
adc
repnz
sbb
cmp
inc
sbb
iret
insb
add
mov
jl
xor
push
int3
lock
inc
add
mov
add
and
inc
add
not
cmp
shrl
jb
gs
sub
fldcw
adc
dec
fcoml
pop
test
enter
dec
push
mov
add
mov
adc
shll
mov
sub
dec
lock
add
stos
adc
add
push
pop
roll
add
xchg
pop
mov
dec
mov
push
es
mov
pop
jl
add
repz
pop
mov
jg
push
xchg
loopne
pop
out
decl
lret
sbb
mov
cmp
add
add
loop
imul
lret
cli
mov
fcomip
mov
ret
les
pop
out
mov
lea
sbb
sub
sbb
add
inc
loop
lcall
cmpsl
repnz
push
sbb
lret
add
aaa
enter
in
push
in
push
jbe
arpl
cs
mov
mov
or
or
pop
mov
push
xor
scas
subl
add
add
sub
cmp
or
add
in
mov
add
je
adc
jae
bound
inc
add
cmp
jbe
stos
lea
jg
fsubs
nop
jmp
xchg
rcr
ja
xor
add
add
lahf
addb
loopne
fcoml
imul
lahf
js
cmp
jp
sbb
stos
and
fwait
jne
hlt
mov
mov
and
and
outsb
pop
out
aaa
xor
outsl
adc
add
fdivrs
out
loop
add
mov
ja
or
and
pop
mov
dec
mov
mov
bound
cmp
rolb
mov
ss
add
scas
test
xchg
dec
neg
ror
xchg
jl
inc
fsub
pushf
inc
icebp
mov
push
pop
push
das
cmpsl
mov
push
push
xor
aaa
inc
fucom
and
mov
in
xor
inc
add
clc
out
test
dec
adc
add
mov
lret
repz
sub
add
dec
or
mov
shll
rcrl
mul
mov
jne
or
push
addb
inc
mov
push
mov
adc
and
push
rolb
add
lds
dec
and
addb
fnstcw
lods
in
imul
xchg
in
or
add
pop
stos
pop
dec
add
sbb
div
inc
xor
jnp
clc
jbe
out
lea
jnp
xor
mov
movl
out
cmp
cmp
xor
push
mov
std
jl
std
addr16
push
xchg
inc
add
xor
mov
sub
outsb
cmp
mov
pop
xchg
arpl
popa
pop
les
mov
std
xchg
aam
cmpsb
call
std
mov
lret
sahf
bound
mov
push
insb
inc
popa
test
mov
fstpt
inc
xor
movsb
ljmp
and
cltd
stc
testb
shr
mov
imul
jb
test
das
pop
inc
add
mov
pop
iret
jl
cmp
mov
adc
mov
aam
add
cs
inc
push
and
cmp
arpl
add
lock
jnp
addr16
adc
add
mov
push
aam
pushf
popf
std
adc
pop
and
pop
xchg
jae
repnz
arpl
or
out
mov
add
in
and
lods
mov
dec
jmp
adc
mov
jl
and
adc
inc
add
pop
outsb
ror
jb
pop
out
popf
xchg
add
inc
cs
mov
ja
inc
add
incl
lods
jo
insb
mov
xchg
fwait
rolb
and
into
test
outsb
scas
xchg
movb
xchg
sbb
out
lods
sbb
inc
mov
sub
es
rolb
cmp
xor
jne
es
aas
ret
mov
push
add
mov
inc
insl
jecxz
push
int
mov
jecxz
jl
pop
xchg
les
cld
xchg
in
pop
mov
or
xchg
xlat
sub
cs
test
pushf
rolb
or
and
cmp
rorl
imul
push
sbb
rolb
lcall
lods
mov
mov
out
rol
fadds
inc
js
into
cwtl
sti
movsl
aas
mov
pop
mov
ljmp
or
adc
xchg
add
icebp
jb
sti
fisubrs
out
dec
mov
rcrb
xchg
fldl
dec
loopne
ret
insl
aaa
fcmovnu
inc
inc
add
add
repnz
mov
bound
sbb
call
ss
fsubs
or
call
add
mov
das
sarb
ljmp
das
loop
pop
scas
imul
jb
lret
out
adc
and
out
add
jge
das
sub
mov
nop
mov
fisubl
jp
mov
stos
mov
movsl
out
lret
loope,pt
test
mov
add
xchg
in
or
fwait
mov
add
aam
add
fcoml
push
rolb
dec
push
in
movsb
push
jle
adc
mov
ds
mov
es
enter
movl
jg
add
jae
rolb
or
insl
aas
imul
into
subl
xchg
in
into
std
lea
dec
aad
mov
shl
lds
test
call
outsl
sahf
outsb
inc
add
push
add
enter
fstl
mov
fwait
adc
and
mov
aas
adc
jp
call
mov
mov
add
js
lds
pop
out
shll
jecxz
cmp
add
mov
es
cwtl
xchg
ja
add
mov
fwait
rcrl
cmc
stc
movb
ret
adcl
repnz
fcmovnbe
push
aaa
push
xchg
adc
inc
add
test
mov
add
pop
inc
dec
mov
ret
ss
aad
cmp
sub
icebp
and
xor
test
jnp
cmp
or
inc
add
mov
jecxz
lret
rolb
jl
cltd
inc
add
iret
fwait
lods
inc
add
bound
mov
pop
pop
xchg
in
mov
jg
fwait
jns
push
test
jl
sub
addb
test
push
jmp
adc
xchg
ljmp
cwtl
out
dec
cmpsb
cld
loope
pop
push
fdivp
adc
dec
stos
and
inc
lcall
inc
aas
jmp
insb
movb
add
into
bound
pop
insl
cld
test
add
js
je
xor
lret
imul
mov
outsl
push
movsb
inc
add
mov
adc
add
cmpsl
test
imul
fnstcw
adc
test
push
add
jo
jae
cld
xchg
lods
lcall
daa
jns
add
add
clc
push
push
test
lds
push
xor
out
in
sbb
xchg
adc
aam
imul
cmpl
sub
add
xchg
cmpsl
pop
aam
mov
pop
xchg
bound
insb
mov
xchg
sbb
test
sub
jbe
subl
jmp
pop
xor
movsl
iret
sbb
push
mov
dec
sub
add
adc
add
push
clc
push
movsb
push
das
cmc
lahf
pushf
add
leave
movsb
mov
jns
mov
enter
leave
xor
stc
xchg
fnop
cltd
fstp
sub
or
int
adc
inc
add
fstpt
add
adc
cmp
int
imul
es
jnp
roll
loope
jp
jmp
int
dec
jns
pop
mov
les
jge
je
add
out
rcl
outsb
add
out
adc
mov
int
pop
or
sbb
mov
jp
bound
icebp
sub
movsl
jecxz
cs
mov
shl
cmp
cs
fsubrs
pop
sahf
pop
xor
hlt
and
dec
push
add
aad
rolb
push
stos
jmp
icebp
aas
mov
aaa
insl
add
inc
je
dec
clc
mov
aas
push
sahf
sti
and
mov
adc
mov
jno
movsl
push
dec
cltd
movsb
mov
mov
addb
fsts
shll
add
decb
lods
xor
dec
xor
mov
add
push
adc
lea
add
in
aas
sub
sti
and
ljmp
fidivl
pop
jnp
mov
xchg
int
ret
mov
divb
xor
popf
sbb
ljmp
mov
loop
ss
stos
mov
xchg
inc
add
add
stos
or
fisubrs
jns
mov
lea
adc
adc
push
jno
mov
mov
pop
imul
pop
lds
push
shll
jmp
sbb
fldt
add
mov
out
lea
fisttpl
and
or
pop
aam
adc
stos
lods
mov
lods
push
push
addb
stc
xor
add
jae
in
jmp
mov
mov
lret
push
xor
std
or
cmpsb
pop
inc
add
inc
jno
cwtl
adc
adc
cmpsl
dec
iret
int3
inc
aad
sbb
dec
mov
in
mov
and
dec
in
loopne
add
rcr
add
xor
or
rcll
pop
lods
test
adc
test
cmp
cmp
sahf
cmp
lcall
lock
shr
pop
fcoml
lcall
sbb
pop
cmp
pop
je
cmp
push
fnsave
idivl
adc
mov
cwtl
sti
imul
pop
rolb
lods
in
iret
aad
cmp
out
iret
add
stos
out
mov
mov
and
add
inc
add
and
or
add
jge
pop
bound
aam
or
shlb
cmpsb
js
mov
cmp
inc
add
mov
out
fstps
out
nop
inc
add
sbb
sbb
ds
xchg
inc
add
bound
mov
jmp
test
repnz
add
dec
repz
mov
mov
test
adc
mov
xchg
incb
pusha
add
sbb
add
or
movsl
std
pop
test
ret
push
lds
aaa
sahf
push
add
xor
rorl
fnsave
aam
and
std
mov
fldt
mov
xlat
fistpl
and
inc
clc
or
cmp
insb
pop
fisubrs
out
fwait
xchg
cmpsb
out
or
pop
pop
jmp
arpl
adc
xchg
stos
inc
add
js
xor
pop
insl
fldl
add
adc
jg
lea
loopne
cmp
or
add
adc
cmp
mov
cmp
pusha
add
lods
inc
icebp
cmp
mov
imul
jae
fimull
sub
into
or
xchg
int
inc
add
std
mov
push
icebp
std
pop
ljmp
mov
xchg
pop
icebp
addr16
rcrl
cmp
add
push
out
test
inc
add
cmpsb
inc
push
pop
cmc
cmp
mov
adc
arpl
adc
mov
push
or
scas
jle
and
hlt
push
inc
add
bound
imul
jbe
xor
xchg
cmc
imul
stos
pop
sub
test
jne
lock
popl
enter
pop
mov
nop
jo
adc
add
pop
sbb
insb
les
dec
jg,pt
jo
sbb
or
xor
out
xlat
in
fstps
pop
push
mov
xchg
mov
add
xchg
lahf
xchg
call
mov
pop
dec
xor
sub
add
fwait
cld
pop
dec
repnz
pop
rclb
iret
add
lahf
or
std
xor
dec
jns
scas
mov
push
add
add
mov
clc
jp
push
aaa
in
sahf
xchg
dec
repnz
loope
mov
or
out
jg
pusha
add
fcmovnu
or
push
pop
xor
jp
popa
jecxz
dec
sub
hlt
sub
lcall
xor
add
pop
std
gs
pop
outsl
stos
mov
fsts
add
push
iret
mov
add
and
sbb
add
lahf
sbb
pushf
xchg
sub
out
dec
sahf
xor
bound
add
int
xor
mov
leave
data16
in
mov
and
adc
mov
movsl
and
repz
or
aad
out
dec
jecxz
jmp
adc
call
aam
enter
mov
add
loop
lret
repz
ret
pop
jge
jg
cmc
out
add
mov
push
push
cmc
aaa
adc
cmpsb
scas
sbb
lret
loop
fsubp
pop
orl
mov
mov
add
ret
andl
xchg
jns
xchg
mov
push
leave
and
jbe
push
lcall
imull
mov
sub
jecxz
add
mov
cmp
jmp
and
stos
out
dec
js
out
push
imul
push
xchg
jnp
pop
sub
shrb
lcall
test
or
mov
xlat
jbe
dec
ljmp
push
and
int3
ss
sar
test
clc
cmp
addb
cwtl
sbb
xor
out
inc
cli
xor
pop
jb
sub
jl
ja
push
cmpl
lret
in
aam
jbe
sti
lret
push
outsb
push
push
or
loopne
subl
scas
cmpsl
xor
cmp
repnz
or
cmp
cmp
xchg
xchg
testl
pop
cmp
notl
mov
push
imul
mov
add
mov
lea
icebp
adc
sbb
xor
lds
fwait
inc
add
addb
inc
mov
cltd
nop
jne
push
icebp
sbb
jnp
aas
ja
ja
test
fstps
outsl
js
movsb
cmpl
xlat
mov
jno
xchg
out
or
adc
call
push
emms
loop
and
add
fs
les
cmc
or
test
pop
in
sbb
lcall
dec
nop
dec
repz
xchg
or
hlt
ffreep
jge
pop
mov
inc
mov
sub
int3
mov
icebp
js
push
xchg
out
popf
out
sbb
add
addl
mov
test
xor
cmp
jns
shll
fcom
hlt
bound
mov
jne
jmp
pop
push
xor
pop
stos
xchg
in
pop
or
push
mov
adc
fs
lcall
mov
add
adc
add
int3
cld
and
sbb
in
mov
mov
add
mull
mov
sub
imul
test
push
jmp
mov
fdivr
sub
insb
inc
add
movb
addb
fdivp
push
and
xor
xchg
rcrb
mov
lods
movsl
mov
out
jg
mov
push
mov
dec
xor
add
scas
mov
add
jg
out
and
pop
cmp
add
imul
inc
and
add
fldenv
add
mov
jae
add
mulb
add
out
mov
xchg
push
adc
xor
push
daa
add
stc
shll
mov
pop
icebp
aam
lret
cmc
mov
std
add
dec
jecxz
add
mov
les
jno
add
adcl
pushf
stc
mov
mov
lock
add
cmp
dec
push
movsb
lock
mov
ficoms
cmp
decl
mov
inc
and
into
int
addb
stos
jecxz
jecxz
rol
and
imul
jb
outsb
push
mov
nop
and
mov
add
pop
in
ret
push
inc
add
outsb
pop
fwait
inc
add
mov
dec
push
add
xor
xchg
pop
adc
xor
pop
sbb
ljmp
pop
arpl
xchg
ret
es
add
adc
dec
mov
fsts
and
movsl
pushf
pop
stos
int
push
mov
iret
push
je
adc
rcr
sub
jnp
mov
mov
or
lret
clc
stos
popf
call
add
jns
ds
add
addr16
add
xor
adc
inc
test
lock
imul
fdivs
add
mov
es
or
push
pusha
add
lret
das
inc
mov
fld
ljmp
push
enter
mov
add
jg
pop
aaa
xchg
jle
cmp
jl
das
push
sub
sahf
xor
inc
dec
enter
add
imul
push
adc
add
xchg
stos
push
movb
mov
cmpsb
push
cmpsb
add
packuswb
jp
sbb
test
pop
add
lcall
movsw
test
lcall
clc
push
ja
sub
sub
xchg
idivb
add
xlat
pop
cmpsl
lret
fistpl
add
iret
inc
repz
jno
add
and
jne
js
addb
add
lds
mov
pop
lcall
jmp
test
pop
add
xchg
rcrb
jg
cli
popf
mov
add
add
stc
adc
add
lret
fisubl
mov
xchg
or
jp
call
pop
clc
mov
les
add
sbb
pop
scas
daa
stos
stos
shrb
add
add
fsave
sub
lcall
lahf
hlt
jmp
xlat
aas
into
aas
xor
cmp
daa
bound
mov
adc
xor
pop
adc
into
arpl
jbe
and
lcall
in
push
pop
fldenv
in
add
dec
cltd
je
addb
jl
add
jb
xor
iret
dec
sbb
cmp
lods
gs
xchg
sarb
sti
ss
fucom
repnz
pop
iret
icebp
mov
xchg
fmul
fcmovnu
ret
xchg
and
cmp
mov
mov
fcomip
push
sbb
int3
rcr
aaa
lahf
mov
icebp
mov
lcall
mov
jecxz
xor
aam
es
add
mov
aaa
pop
xchg
js
mov
test
or
addr16
xor
ror
jb
stc
test
loop
mov
enter
jle,pn
push
addb
mov
xchg
les
mov
dec
mov
dec
lea
adc
sub
xor
das
jo
and
je
add
jg
stos
mov
aas
es
or
xlat
and
rolb
jecxz
das
mov
mov
fstps
outsb
insl
icebp
or
mov
add
jl
mov
lods
jmp
xchg
cwtl
rolb
add
add
mov
mov
dec
xor
fdivrs
add
iret
jbe
push
fmuls
es
fadds
xlat
push
sbb
inc
add
pusha
add
adc
movsb
xor
aad
push
or
addb
roll
mov
mov
int
jns
xchg
sbb
xchg
sub
add
scas
dec
sbb
jb
cmp
cmp
pop
pop
dec
lret
enter
add
imull
pop
push
add
in
test
and
lods
add
mov
addb
movsl
cmc
mov
mov
cltd
roll
mov
test
add
hlt
and
mov
xor
out
mov
jne
cmp
mov
dec
test
fs
add
mov
sub
lock
cmp
add
xchg
fbld
add
test
adc
add
inc
add
pop
iret
fdivp
jle
int
int
and
je
jg
add
repnz
sub
dec
add
xchg
sbb
pushf
out
shrb
and
jge
loope
into
jl
adc
fucomp
jbe
cltd
xchg
ljmp
cltd
out
add
inc
outsb
sub
add
add
jae
js
pop
insl
adc
mov
ret
cs
repnz
rcll
push
inc
add
push
jo
jns
insb
mov
stc
or
or
push
stos
push
sub
aad
lret
xchg
mov
outsl
xor
add
mov
pop
ret
cmp
js
mov
cmp
test
jae
je
xor
xchg
inc
add
add
or
std
xor
stos
aaa
fs
add
add
dec
inc
add
mov
inc
jne
arpl
int3
mov
aam
shll
xchg
sub
jge
cmc
or
shrb
mov
adc
movsl
cmp
fsub
popf
add
loope
int3
cmc
xchg
adc
aad
nop
aaa
pop
int3
rolb
movsl
outsl
test
outsl
push
cs
cmc
or
sti
jge
add
pop
sbb
xor
push
das
lcall
pop
pop
shrb
pop
ljmp
cmp
add
add
fwait
jl
mov
pop
sbb
sbb
cwtl
xor
ror
fnstcw
pop
push
or
inc
push
daa
or
arpl
mov
or
iret
mov
mov
imul
add
add
pop
sbb
push
adc
adc
xchg
cld
gs
mov
ret
push
fisttpl
fisubrs
out
insl
fwait
int3
scas
cwtl
cmp
fadds
cld
arpl
xchg
or
out
mov
jno
and
or
mov
add
arpl
pop
adc
cltd
outsl
xor
xchg
jns
lret
add
rcrl
push
mov
add
adc
repnz
jnp
add
into
xchg
mov
xor
adc
or
adc
scas
cmp
test
popa
mov
int
dec
outsb
xchg
dec
inc
sti
rolb
push
nop
add
loope
mov
mov
inc
outsb
lods
mov
out
mov
out
mov
push
add
and
cmpsl
or
dec
aaa
ja
mov
jbe
mov
int3
iret
rorl
orl
push
add
roll
add
pop
fadds
mov
pop
sbb
stos
out
or
cmpsl
jnp
imul
das
sbb
cmp
jno
add
call
in
and
sbb
or
ficomps
xchg
insb
data16
fdivrp
mov
mov
imul
insl
inc
add
addr16
fs
jle
dec
xor
test
jno
lods
cmp
cmc
pop
sbb
add
aad
pop
fdivrs
pop
xchg
cmp
jno
pop
mov
insl
movsb
or
enter
lret
push
enter
add
jb
sub
adc
bound
jo
adc
inc
add
cmp
ss
xchg
jecxz
and
mov
imul
mov
jle
push
cli
movsb
xchg
insb
popa
mov
std
sub
jmp
sti
pop
sub
daa
test
je
or
add
add
and
loop
xor
notl
in
je
lahf
outsl
outsb
xlat
dec
mov
adc
inc
add
int3
in
and
ja
push
out
sahf
sub
fcoml
push
pop
imul
std
jmp
mov
xor
sbb
jo
stos
mov
or
ja
aaa
mov
push
es
sub
mov
test
jg
pop
and
mov
jbe
push
mov
push
cmp
xor
pusha
add
out
movsb
outsl
cmpsl
daa
add
ja
out
inc
cmpsl
sbb
cli
movb
pusha
add
and
xchg
add
add
fiadds
add
mov
jbe
out
push
xchg
loopne
not
pusha
add
hlt
jl
hlt
stos
pop
sbb
jae
xchg
or
or
and
dec
fdivrs
sbb
jl
xchg
scas
mov
aam
and
dec
lds
stos
or
js
lcall
ds
ficoms
mov
and
jmp
out
cmp
mov
push
addb
add
stos
shlb
add
ljmp
cmp
and
lret
js
pushf
pop
movb
jb
dec
mov
insl
or
fdivr
lcall
dec
cli
addr16
cwtl
mov
lock
xlat
jae
pop
fnstcw
and
dec
bound
or
scas
lret
inc
add
test
xor
ret
out
and
sub
pusha
add
cmp
or
jo
mov
or
sub
jb
addb
cmp
int
cs
fs
out
fwait
jl
js
xchg
jno
lds
rorb
adc
aas
scas
test
push
out
sbb
icebp
push
jbe
inc
sub
mov
pop
push
es
push
mov
test
loop
dec
into
add
xor
enter
add
mov
arpl
jecxz
jle
mov
dec
and
fwait
and
pop
add
inc
hlt
jl
leave
popa
sbb
in
cmp
push
ret
jne
add
sub
mov
adc
mov
lea
push
sbb
xor
cmp
aas
hlt
and
mov
add
add
jl
test
add
pop
sarb
mov
add
add
jno
or
mov
imul
and
sbb
imul
lods
shrl
call
pop
addb
sbb
int3
scas
pop
loop
add
xlat
mov
test
daa
mov
call
mov
faddp
add
mov
dec
outsl
ficoml
cwtl
sbb
xchg
stos
pushf
inc
add
mov
jmp
mov
adc
push
inc
add
sub
mov
mov
and
sub
sbbl
jb
std
cmp
mov
clc
es
arpl
popa
jae
mov
push
out
fwait
jg
enter
push
sbb
fidivl
fisttpl
jnp
xlat
xchg
es
dec
inc
ret
cmp
xchg
push
mov
les
int3
in
pop
mov
mov
inc
add
ljmp
fcompl
decb
iret
int3
adc
cwtl
addb
les
mov
mov
data16
addb
out
lret
cmp
rsqrtps
loope
lods
mov
repnz
pop
je
mov
aad
mov
scas
test
cmp
inc
add
addr16
add
push
jnp
dec
pop
xchg
aam
out
loop
out
jmp
mov
addr16
mov
mov
into
jns
scas
adc
add
enter
in
pusha
add
cmp
stos
xchg
in
rol
add
and
enter
push
cltd
adc
shlb
push
add
ja
mov
insl
fwait
adc
sub
aad
out
inc
add
cmp
adc
add
sbb
add
xor
push
repnz
outsb
and
add
scas
lods
mov
stos
sbb
xchg
jecxz
cmpsl
pop
push
outsl
jle
push
es
sub
movb
mov
push
add
inc
shl
jge
pop
push
call
lock
push
daa
mov
xchg
and
or
dec
lods
sub
add
dec
movb
add
xor
stos
mov
jl
dec
rolb
add
add
dec
xchg
jle
adc
mov
add
test
loope
cmpsb
fdivs
roll
dec
dec
in
lods
lds
push
push
paddsb
sbb
jns
mov
out
daa
mov
lock
mov
addl
xor
insl
push
fdivrl
jbe
push
ret
lahf
pop
dec
jge
decl
push
shl
sahf
xor
fldcw
pusha
add
sbb
add
enter
sahf
out
add
sub
clc
int3
rolb
push
jmp
add
pusha
add
mov
je
mov
add
xchg
sarl
rolb
outsb
inc
add
dec
in
imul
imul
sbb
fwait
outsl
adc
add
clc
push
lea
xchg
adc
ret
dec
mov
or
and
std
push
add
dec
push
inc
inc
fists
xlat
test
sub
sarl
rolb
push
incb
cwtl
push
sbb
hlt
sbb
stos
addb
dec
adc
add
cld
mov
test
xchg
xchg
push
les
jne
mov
mov
ret
cmc
popf
in
mov
sbb
clc
ja
popa
leave
push
mov
aam
in
iret
addb
test
inc
add
add
dec
cmpsb
cmp
lcall
xor
dec
mov
aaa
pop
push
sbb
dec
lea
jge
mov
push
add
cld
js
popa
inc
add
movsb
test
cs
xchg
and
aam
call
adc
add
add
sub
push
mov
mov
inc
add
xor
adc
jge
clc
pop
mov
push
ret
sub
cmpsb
sub
mulb
cmpl
sbb
adc
xadd
inc
xor
xchg
jbe
sbb
xor
pop
in
jg
popa
inc
add
mov
roll
add
inc
and
cmp
in
mov
jge
gs
dec
cmp
fwait
mov
sub
out
rolb
scas
ljmp
xchg
xchg
insl
imul
add
les
mov
mov
addb
jmp
enter
add
insl
push
aad
sahf
pop
imul
sbb
mov
insb
fildll
add
das
movsl
adc
in
or
jo
into
or
loope
add
sbb
pop
fwait
jg
in
jle
add
pop
cmp
into
popa
xchg
jb
jmp
mov
lods
inc
add
shll
sbb
and
sbb
add
dec
mov
sbb
sub
sub
cs
mov
lea
nop
scas
jle
and
xor
mov
out
ss
roll
popf
in
aas
sub
rcrl
cltd
mov
ja
and
fldl
add
sub
sub
sbb
xor
fsubrl
cwtl
pop
push
inc
add
or
scas
push
add
jbe
mov
mov
jns
in
lods
outsb
int3
cltd
push
dec
xor
add
or
mov
flds
jp
push
or
xchg
pop
or
jae
cmc
int3
push
outsb
mov
add
es
mov
rcll
sub
in
add
xchg
nop
push
jb
clc
dec
mov
mov
add
shll
jnp
fdivrl
das
int3
cmc
jmp
fisubrs
xor
insb
sti
or
pushl
cwtl
sarl
jecxz
add
or
ret
xor
in
mov
jne
ret
imull
sub
aaa
sub
arpl
cli
pop
movb
mov
or
pop
stc
and
ficoml
pop
or
enter
out
jg
data16
add
add
dec
inc
add
mov
hlt
js
lret
push
push
add
add
clc
mov
pusha
add
sarl
fstl
out
ficoml
ret
xchg
int3
xchg
js
into
and
orl
add
or
jg
movb
xor
stos
outsb
dec
arpl
aad
add
sub
add
clc
cwtl
push
ljmp
mov
add
aam
mov
popa
mov
push
add
mov
rolb
inc
mov
nop
cmp
add
loop
mov
hlt
shll
pop
push
loop
pusha
add
lock
sub
jbe
lret
arpl
xchg
add
daa
add
push
je
shll
fmul
data16
lds
lods
repz
inc
jo
or
sbb
pop
int
and
inc
add
call
into
lcall
push
xchg
pop
sbb
repz
pop
xchg
movsl
popa
addb
loop
xchg
add
and
mov
jg
ja
xchg
push
movb
add
push
mov
add
add
ret
mov
push
in
aaa
jp
add
push
lea
cmc
les
pop
icebp
or
and
sbb
add
lock
xchg
or
adc
popa
jmp
lods
repnz
mov
push
mov
mov
stos
inc
ljmp
push
and
addb
adc
inc
jg
cmp
pushf
les
fucom
jbe
jb
inc
add
aaa
aas
ficompl
sbb
iret
es
imul
fisubrl
dec
xor
sub
ja
mov
mov
outsl
xchg
dec
cwtl
jp
mov
inc
ret
pop
xchg
push
cmp
gs
push
inc
cmp
pop
lahf
pop
dec
enter
rolb
pop
mov
insl
push
dec
cmp
ss
add
std
sub
imul
jo
int
xchg
and
mov
cmpsb
push
xchg
pushl
push
popf
xchg
mov
pop
fcoml
sub
mov
clc
mov
mov
dec
pop
mov
or
insl
xchg
mov
sbb
sbb
addb
add
add
jp
out
add
sub
fsubs
inc
inc
test
add
ja
int
nop
pop
pop
test
fucomip
or
and
adcl
ds
add
push
add
jmp
cmpsl
fidivrs
sahf
push
adc
lcall
aam
mov
stc
bound
jg
and
push
xchg
lods
pop
cs
pop
mov
mov
inc
add
addb
pop
int3
sub
das
scas
pop
sbb
adc
movsl
popf
jns
jns
push
or
add
xchg
addb
xchg
rcl
add
mov
and
mov
cmp
xchg
mov
push
cmpsl
cmpsl
pop
es
sub
xor
and
push
jns
pop
pop
push
stc
xor
and
add
gs
cs
add
mov
mov
imul
xchg
ss
sbb
sahf
outsl
ret
std
clc
pop
and
lret
pusha
add
ja
mov
sbb
push
jb
sti
inc
add
sbb
xor
jg
push
popf
test
rolb
sbb
sahf
adc
mov
test
mov
or
cmp
pushf
ret
mov
sarb
insl
jae
push
movsb
jle
xchg
sbb
mov
mov
out
or
nop
xchg
push
sub
sub
dec
popa
leave
push
mov
and
push
adc
xor
stos
add
gs
sti
nop
in
inc
add
or
sub
std
and
add
jnp
adc
sub
imul
add
add
mov
inc
add
inc
dec
test
lods
ret
lods
lret
add
or
jnp
into
fidivrs
xlat
mov
jbe
inc
add
dec
inc
leave
mov
sbb
jbe
push
shrl
pop
xchg
out
cmp
push
mov
mov
lahf
adcl
add
in
clc
sub
cmpsb
cmp
adc
shrb
mov
mov
mov
or
inc
add
mov
arpl
push
jb
sahf
loop
stos
test
xchg
stos
jecxz
daa
rclb
into
int
add
addb
iret
lock
test
lods
nop
imul
add
enter
dec
ljmp
dec
push
add
add
add
add
add
jns
cltd
jl
and
add
das
sbb
add
add
mov
pop
cmpsb
inc
add
fcmovne
mov
jbe
clc
lahf
xchg
ds
stos
popf
test
pop
int
mov
scas
repnz
mov
xor
sar
daa
xchg
mov
mov
pop
xchg
gs
test
or
lods
xlat
sub
loope
cmc
push
or
shrb
xchg
mov
imul
int
and
dec
push
das
lret
mov
rcl
mov
add
jecxz
mov
cmp
pop
popa
fwait
pop
add
testb
jae
mov
std
dec
jnp
add
fcomp
jo
pusha
add
fsubrl
fwait
and
jae
aad
lds
add
push
xor
jno
dec
icebp
push
mov
call
jmp
imul
sub
sub
ffree
out
and
sbb
nop
jmp
mov
lods
inc
add
sub
xchg
mov
js
xor
sbb
sbb
das
loopne
xchg
mov
and
sti
mov
std
repz
outsb
xlat
add
addb
loop
mov
mov
int
int
imul
sub
xor
out
xor
sbb
in
add
sub
push
adc
in
shrl
fisttpll
mov
fdivl
pop
sbb
dec
sahf
mov
dec
pop
pop
in
mov
add
pushf
mov
cmpsl
add
jecxz
popf
inc
mov
in
inc
add
nop
call
loope
mov
out
mov
add
cmpsl
loop
ljmp
shlb
push
insl
pop
daa
cwtl
jns
xor
pop
shlb
jne
mov
add
or
add
jne
xor
adc
scas
mov
dec
sbb
stos
push
bound
dec
push
fmul
and
mov
in
cwtl
test
sbb
or
mov
pop
iret
std
fs
xchg
jecxz
pop
mov
jp
lret
std
rolb
popa
out
cli
aam
int3
or
sub
sub
adc
mov
pop
into
shrl
scas
lcall
outsl
push
stos
outsb
add
sbb
addb
add
sbb
aad
test
insb
jmp
dec
shll
insl
cli
fnsave
movsb
mov
insb
stos
pop
and
add
mov
push
mov
cmp
fisubrl
add
sti
scas
or
jmp
popa
shll
xchg
movsl
xchg
sub
xor
mov
inc
xor
lock
fnstenv
jle
data16
xor
lods
jne
mov
or
mov
cmp
imull
and
inc
push
dec
call
mov
rolb
jbe
cwtl
aas
inc
add
push
jmp
add
cwtl
mov
lods
fwait
mov
mov
lahf
add
mov
sti
xrelease
or
dec
jp
jno
lods
xchg
jg
jge
add
push
into
dec
movsl
pop
jecxz
mov
mov
xor
in
int3
fidivrl
adc
cld
pusha
add
flds
add
popa
and
and
aam
dec
inc
push
pop
and
out
or
pop
add
mov
cmp
pusha
add
int
fisttpl
mov
and
scas
pop
and
dec
dec
arpl
lock
stc
jbe
dec
js
mov
push
mov
mov
std
pop
test
add
in
out
push
js
and
xchg
push
pop
mov
add
std
fidivrl
dec
sub
mov
out
adc
add
mov
int3
and
inc
test
test
push
push
ja
push
leave
mov
jbe
dec
inc
add
xchg
inc
push
lcall
sub
bnd
cmpsl
adc
add
outsb
jnp
iret
outsb
xchg
int3
jns
sub
add
popf
xchg
leave
call
mov
add
loop
and
pushf
jo
loopne
dec
push
aam
sbbl
push
xorl
jp
lret
add
push
sub
add
inc
or
push
sub
and
into
cltd
xchg
jnp
jbe
divb
add
iret
pop
add
fwait
sbb
inc
sbb
xchg
push
arpl
ss
mov
shll
test
pop
stos
jnp
rorb
xchg
ret
and
in
mov
daa
out
jbe
xor
mov
out
aam
sub
ds
iret
cmp
idivl
add
push
or
das
mov
sbb
sbb
lock
add
das
stos
out
mov
rolb
jne
mov
fsub
xchg
lods
push
cmp
add
lds
stos
ffreep
add
adc
movsb
push
adcl
push
xor
or
dec
arpl
jp
mov
xor
lods
arpl
push
rcll
loope
and
or
cs
xchg
fists
push
test
and
add
mov
cmp
mov
addr16
add
xor
or
add
je
add
ds
cmpsb
and
test
cmp
rcll
dec
cwtl
leave
clc
sbb
add
pop
test
adc
dec
or
add
and
test
cs
insb
fmull
lods
xchg
sti
out
cmp
arpl
add
sub
out
mov
mov
ss
add
jg
pushf
add
mov
in
jbe
push
popa
addb
fwait
cmpsl
aad
add
adc
out
in
shlb
push
adc
mov
mov
es
cmp
addb
in
test
clc
add
popf
clc
jb
inc
pop
sub
add
cltd
jb
mov
xlat
xchg
pop
aas
notl
and
jnp
addr16
sub
cld
je
out
cltd
push
imul
mov
rorl
into
lds
add
push
mov
aam
outsb
arpl
add
mov
adc
movb
enter
dec
jecxz
outsb
push
add
popa
xchg
mov
jnp
add
mov
mov
and
jns
jp
xchg
out
adc
pusha
add
add
repnz
or
fdivrl
aas
jmp
jo
add
loope
cmp
cmp
fldcw
in
mov
mov
fimuls
adc
dec
lods
xchg
xor
jg
pop
mov
sub
mov
inc
add
cmpsb
and
jmp
aas
outsb
jmp
xor
out
int
mov
add
adc
loope
das
aas
aaa
mov
jns
jns
push
fldenv
cld
sub
pop
inc
add
mov
mov
insb
dec
cmp
or
mov
inc
add
and
add
scas
icebp
jnp
pop
in
jmp
lods
and
inc
nop
out
loop
popa
dec
mov
pop
adc
add
addb
mov
push
insb
and
test
cmp
in
adc
data16
pop
bound
push
add
adc
add
aad
add
bound
lcall
mov
aam
push
dec
les
sbb
lret
insb
xlat
pop
insb
or
pop
sub
mov
nop
push
in
pop
sub
add
push
fidivrl
scas
adc
jmp
dec
jb
sti
out
mov
aas
push
inc
add
cli
cmpsl
decb
mov
rorl
fldl
mov
jns
loop
mov
xchg
ljmp
add
movsb
rolb
adcl
add
popf
xor
bnd
sbb
fwait
push
add
sub
or
icebp
test
je
lds
jmp
cs
dec
pop
add
mov
sub
lods
test
sbb
add
pop
jae
mov
outsl
fpatan
mov
jge
ds
mov
pop
lods
ficoml
nop
stc
sbb
add
mov
lods
xchg
pop
das
fwait
dec
ds
jmp
repz
in
lahf
movsl
scas
jecxz
dec
add
sub
ret
popf
xchg
jne
pop
cmp
call
push
out
push
add
mov
sub
mov
into
lea
lahf
jno
sbb
adc
out
jle
or
popa
adc
add
movb
sub
lahf
std
pop
inc
sub
and
mov
cmpsb
fnstenv
cs
fdiv
sub
push
lcall
cwtl
pop
xor
sbb
add
jno
imul
nop
movsl
xor
add
add
add
gs
jmp
pop
and
pop
stc
clc
js
aaa
mov
add
test
orl
lods
bound
or
mov
sbb
aam
sub
mov
adc
or
add
xor
shll
outsb
movb
jg
add
stc
cmpsl
push
and
fwait
ljmp
rolb
and
in
cli
test
cmp
dec
push
lea
xor
cmp
xor
push
cli
push
loopne
adc
jne
xchg
dec
push
je
jns
cs
sub
ret
iret
addb
mov
pushf
in
leave
movsb
es
push
aad
jle
jmp
iret
push
xor
cmp
add
lahf
mov
pop
adc
aad
and
push
push
stc
jmp
mov
pop
pop
inc
add
aam
lods
stos
push
in
jp
xchg
pop
icebp
stc
hlt
aaa
imul
xor
inc
lret
shrb
add
inc
add
and
cmp
fisubrl
add
jmp
clc
sub
jnp
xor
xchg
movsl
jbe
mov
mov
add
in
jno
xor
cmp
les
jne
in
stos
rcrb
test
jecxz
xchg
leave
fisubs
xor
mov
repz
add
pop
minps
mov
or
mov
inc
fidivs
mov
shll
jmp
loop
test
xchg
dec
leavew
mov
jbe
je
add
jae
leave
pop
cmpsb
jbe
sbb
jnp
xchg
inc
mov
and
mov
mov
push
or
xchg
push
stos
jmp
js
inc
add
add
ret
into
les
outsl
enter
call
ja
pop
inc
push
xor
cmp
inc
mov
imul
inc
and
in
scas
ret
movsb
inc
add
call
ljmp
imul
jae
int3
push
lea
add
mov
push
jmp
pop
add
les
std
fldl
mov
pop
in
test
lret
jg
outsb
pop
xor
jecxz
add
cmpsl
mov
hlt
jbe
jae
lock
add
inc
xor
cmpsb
addb
test
and
cmc
fildl
add
pop
sbb
adc
or
into
inc
jecxz
xorl
repz
mov
mov
jl
jnp
insb
cmpsb
in
sbb
xor
mov
lahf
mov
xchg
call
dec
sub
jnp
xorl
icebp
xchg
and
add
xor
leave
cli
cmp
xchg
js
mov
xorl
lahf
idivb
sti
sahf
sbb
jb
mov
sbb
out
xchg
test
test
jo
ret
movsl
fs
add
rolb
lods
inc
nop
dec
das
sti
xchg
fucomip
jb
pop
mov
jecxz
scas
addb
or
movsl
or
pop
push
add
add
or
mov
int
mov
pop
pop
sbb
inc
mov
ret
idiv
mov
popa
pop
xor
cs
adc
push
in
in
nop
popa
add
repz
sbb
fsubs
xchg
xchg
cmc
sbb
jge
add
call
addl
insb
and
rcrl
data16
imul
test
pop
hlt
mov
push
sbb
test
sti
xchg
and
insl
cli
dec
addr16
les
cmp
shl
jmp
enter
xchg
rcll
iret
mov
outsl
imulb
xor
dec
lds
daa
dec
dec
mov
popf
jle
xor
repnz
and
out
jge
mov
into
mov
mov
pop
pushf
pusha
add
xchg
xchg
es
inc
add
cmc
add
jno
mov
add
ret
inc
xor
mov
in
call
or
xor
cs
xchg
adc
xor
call
mov
dec
test
jecxz
dec
test
cltd
inc
add
out
mov
cld
ret
inc
adc
pusha
add
in
das
sti
push
out
jae
aaa
insb
inc
add
bound
cmp
add
xchg
rorl
add
cmpsb
sbb
pop
lret
imul
adc
insb
fiaddl
pop
inc
add
ljmp
dec
dec
rclb
push
rolb
xchg
and
sbb
add
add
mov
add
pushf
mov
inc
pop
adc
cmp
jg
mulb
add
mov
ljmp
mov
xchg
mov
push
ja
adc
cmpsl
ds
jmp
pusha
add
add
pop
cmp
sti
xor
add
add
xchg
xor
sub
mov
sub
addb
cmp
sti
pusha
add
shlb
shrb
push
aad
jae
push
and
int
dec
test
rol
test
adc
enter
sub
sbb
call
enter
add
xor
int
ljmp
in
xchg
sub
jl
dec
pop
out
cmpsb
cmp
insl
push
mov
dec
add
mov
or
mov
addb
add
sbb
xchg
add
mov
mov
fimuls
mov
jecxz
add
jo
dec
jl
adc
mov
and
dec
pop
push
push
mov
addb
rolb
add
sub
mov
hlt
fstps
int
sub
add
xchg
or
push
push
lods
movb
inc
add
sbb
add
sbb
roll
outsb
aad
cli
ret
pop
inc
add
or
jmp
mov
push
pop
inc
xor
lret
repnz
fcomps
add
pop
xor
js
mov
mov
mov
add
movsb
or
jns
inc
add
movl
add
mov
xchg
ss
adc
iret
and
mov
fdivrp
push
add
les
int3
leave
mov
mov
sti
sbb
repnz
insl
push
mov
repnz
nop
inc
xchg
sub
cmp
cli
add
xchg
cmp
movb
aam
push
dec
orl
popa
fdivr
jecxz
dec
mov
arpl
aas
test
call
add
cmpsb
fcmove
scas
pop
pusha
add
pop
es
pop
push
and
cli
adc
jae
xor
and
les
or
test
mov
sbb
fstl
pop
imul
js
add
xchg
addb
sbb
xchg
lcall
xchg
mov
add
and
pop
add
addl
jmp
jne
mov
mov
add
enter
std
fstl
addb
in
test
sbb
ret
cwtl
jmp
mov
stos
movb
push
lods
cmc
mov
mov
add
mov
xchg
call
insb
lods
lds
rorl
xchg
cli
inc
add
outsb
mov
add
and
adc
ja
jp
jbe
xor
xchg
in
mov
add
sub
rolb
add
stc
jno
sti
xchg
or
add
imul
lock
add
add
cmpsl
call
pop
fs
ljmp
or
mov
push
add
out
fsubrs
jp
idivl
adc
sti
inc
sub
adc
ja
aad
dec
add
and
dec
sbb
pop
rcl
adc
inc
inc
add
std
pop
push
loop
enter
rolb
rolb
aad
push
mov
out
enter
aad
dec
testb
pushf
out
leave
mov
mov
addb
pop
call
enter
daa
lods
cmp
xchg
inc
pop
icebp
icebp
xchg
outsl
rcrb
dec
pop
pop
test
fidivl
cld
rcrl
test
fstpt
lock
jno
inc
add
add
mov
inc
jo
or
aaa
add
rolb
pop
xor
mov
in
into
ds
fadds
and
cmp
jmp
inc
add
in
xchg
xchg
sbb
cmp
add
mov
pop
sub
gs
add
test
add
xchg
fldenv
or
add
jb
pop
addb
add
push
add
ret
ss
mov
sub
mov
inc
xchg
mov
ret
mov
add
add
or
cmp
cmp
aad
jle
shlb
add
jo
in
std
mov
pop
xchg
sub
cmp
pop
sub
sbb
cld
mov
cmp
in
nop
mov
add
adc
add
fldt
lods
negb
mov
mov
sahf
in
push
mov
sbb
cmc
mov
je
out
push
jp
fs
into
dec
subl
mov
mov
stc
rolb
xor
cmc
movsb
xor
dec
mov
inc
add
add
lea
inc
xor
pop
cmpsl
inc
add
test
jle
addb
pop
inc
and
xor
subl
push
jno
aaa
sbb
sub
mov
add
cwtl
rol
pop
insb
arpl
addr16
in
fstp
add
mov
jmp
pop
in
nop
insl
and
pop
sbb
fdivr
inc
inc
add
jno
sbb
dec
xor
push
pop
pop
nop
in
sahf
shlb
mov
lahf
loope
ljmp
jmp
lret
add
stos
mov
mov
cwtl
sti
mov
bound
std
in
add
add
bound
addl
sti
out
fistps
add
or
bound
js
call
movb
adcl
stc
cmp
jne
add
sub
cmpsl
pop
icebp
or
push
xchg
mov
push
imul
cmp
pop
arpl
stos
inc
add
in
push
icebp
push
dec
sub
lret
adc
sbb
arpl
xorl
das
mov
leave
lods
test
sbb
mov
mov
stos
in
add
mov
push
lea
dec
roll
add
push
xchg
jns
push
in
jmp
add
xchg
test
jecxz
cmpsl
rolb
mov
cltd
and
ss
leave
inc
inc
jno
daa
scas
pop
push
add
lret
pop
cmp
sbb
add
pop
cmpsl
test
mov
sbb
mov
pusha
add
lret
test
sub
pop
loop
adc
ds
loope
in
fisttps
inc
lcall
les
dec
ficomps
mov
ret
adc
mov
aas
mov
rcl
mov
lret
or
inc
add
ret
lcall
int
mov
int3
mov
ret
nop
jbe
call
push
pop
mov
ret
add
cmp
and
xor
cwtl
int3
pushf
pop
jle
add
mov
sbb
int3
push
add
add
adc
sub
test
sub
nop
pop
ja
inc
add
add
push
ud0
adc
repz
jge
sub
sbb
ljmp
iret
mov
mov
aam
xor
add
cmp
sbb
add
insb
add
xchg
push
and
mov
sbb
ja
shll
lcall
aas
or
jbe
dec
push
in
scas
add
cmp
inc
mov
es
into
inc
cmp
iret
xor
xor
out
ljmp
or
test
mov
jmp
add
addr16
or
add
mov
dec
icebp
mov
clc
pushf
add
add
lds
lahf
insl
mov
xor
pop
sub
out
loope
test
push
add
bound
sub
mov
addb
add
inc
add
mov
inc
add
in
cmpsb
sbb
add
mov
sub
mov
movsl
scas
out
dec
test
jg
inc
add
or
insl
jecxz
ljmp
sbb
test
mov
movb
cmp
push
xchg
add
jge
fidivl
jg
lds
and
insb
mov
inc
add
add
mov
add
scas
dec
les
shrb
repz
popa
mov
ds
roll
add
shrl
and
ljmp
out
sub
push
add
sub
adc
add
outsl
addb
movntps
dec
mov
jb
inc
add
mov
mov
mov
hlt
mov
aad
imul
dec
add
imul
in
pop
gs
inc
data16
mov
add
ljmp
mov
cmp
jae
hlt
xlat
mov
lret
push
push
repz
dec
pop
clc
push
pop
loope
mov
cmpsb
std
pop
aas
mov
movsb
fisubl
ljmp
adc
push
add
mov
pop
outsl
fdivr
rcll
jne
jl
mov
jmp
xchg
frstor
pop
xchg
movb
add
int3
jne
scas
and
add
xor
dec
or
xor
or
xor
scas
jmp
lods
sub
nop
hlt
iret
adc
add
repnz
xchg
mov
sbb
je
add
ds
jge
addb
push
inc
dec
cmpsb
xor
jecxz
gs
inc
pusha
add
xor
and
mov
std
xchg
pop
repnz
pop
adc
pushf
dec
xchg
push
or
xor
jp
int
ja
scas
call
int
dec
ja
push
pushf
aad
pushf
repz
lds
jecxz
inc
push
shr
es
leave
push
jbe
xacquire
dec
pop
pop
mov
pop
ds
in
cli
cmp
je
adc
mov
adc
sub
fwait
scas
ja
sahf
xchg
inc
push
sbb
mov
add
or
inc
pop
adc
data16
cli
test
addr16
rolb
imul
inc
add
adc
rcrl
sub
mov
fidivrl
js
add
lahf
mov
out
pop
xchg
mov
scas
gs
aas
dec
stc
ss
add
and
xchg
add
mov
orl
popa
popf
lds
jmp
xchg
push
mov
mov
dec
inc
add
ficoml
shl
jge
mov
pop
pop
adcl
cli
cld
xchg
pop
push
mov
or
cli
mov
cmpsb
and
dec
pop
xlat
push
add
add
inc
add
xchg
std
ret
add
dec
mov
movsb
mov
mov
je
xor
push
jecxz
sti
test
jmp
mov
inc
rcrl
xor
fwait
push
sbb
cs
fldt
lock
mov
outsb
or
sbb
and
mov
lock
lods
fldenv
fdivs
add
syscall
adc
jl
and
dec
into
negl
inc
adc
fdivrs
lock
mov
inc
add
lock
cs
lret
addb
sub
dec
xchg
lcall
adc
sbb
xor
add
dec
inc
add
aam
repnz
pop
jo
add
mov
add
lds
stos
pusha
add
sbb
sub
pop
and
sbb
movl
cmp
icebp
nop
sbb
dec
ja
cmpsb
mov
or
out
mov
fiaddl
add
call
dec
dec
push
jns
dec
jb
mov
pop
cmp
enter
add
ja
push
xchg
pop
jne
movsl
nop
inc
add
sub
iret
das
xorl
stos
and
jns
mov
aad
pop
cmp
loope
xchg
jle
mov
add
sarb
jmp
mov
sub
rolb
lret
or
dec
xor
out
pop
inc
add
fdivp
jg
xchg
sub
outsl
fwait
jno
add
sbb
hlt
cmpl
add
mov
dec
mov
pop
xchg
js
icebp
cs
mov
pop
inc
mov
mov
mov
addr16
pop
xlat
push
jge
cmp
dec
out
add
leave
in
outsl
adc
or
mulb
inc
add
test
add
add
pop
xlat
or
xlat
in
dec
arpl
xchg
ret
pop
sub
aas
repnz
ds
or
jns
lahf
dec
repnz
dec
push
cmp
and
push
fldcw
ljmp
push
push
addb
addb
xor
mov
or
add
pop
out
shrl
mov
add
dec
pop
xchg
movb
add
shr
movl
mov
cwtl
cmpsb
inc
mov
add
scas
stos
xor
push
add
xchg
push
scas
xchg
pop
pop
xchg
dec
aad
cmp
push
lods
lret
adc
cmp
ss
adc
add
sub
dec
mov
frstor
jmp
dec
add
insl
pop
xor
jo
xchg
lods
in
mov
inc
pop
loope
ret
cmp
fisubrl
daa
xchg
ret
dec
arpl
stos
repz
push
sub
fldcw
xor
pop
xor
imul
mov
xor
insl
sbb
xchg
dec
sbb
in
dec
pop
js
dec
out
scas
push
add
pop
jecxz
cli
mov
mov
cmpsb
dec
mov
push
jg
popa
fs
mov
enter
sub
mov
cmc
jmp
clc
data16
cwtl
xor
mov
aam
popa
fucomp
dec
addb
loop
daa
pop
xchg
jno
insb
and
ret
push
test
mov
push
jno
add
fcomi
mov
gs
aas
mov
push
sub
or
pop
mov
repz
push
cmp
vmovups
imul
or
inc
mov
xchg
jbe
roll
rolb
xchg
mov
out
lahf
jns
mov
fmulp
into
jle
add
mov
in
lock
int
sub
popf
mov
rcrb
cmp
dec
scas
aad
xlat
mov
or
jg
jle
lcall
pop
int
push
pmuludq
inc
lret
or
testl
dec
loopne
push
pop
dec
xchg
iret
repz
lods
out
fstpt
mov
add
mov
pop
sbb
xchg
pop
push
movb
les
out
test
mov
sti
icebp
add
iret
sbb
sbb
mov
stos
adc
std
mov
nop
aad
xor
lods
arpl
add
pop
popf
jecxz
mov
fstps
mov
and
int3
jl
inc
cmp
push
shll
fwait
push
gs
adc
fistpl
xor
addb
add
inc
loop
jbe
addr16
fcmove
mov
adc
popa
mov
enter
leave
jge
push
movsl
hlt
push
inc
nop
out
or
addb
addb
movsb
sub
outsl
loopne
int
inc
add
lock
jmp
aam
nop
repnz
cmp
shl
push
push
or
inc
add
dec
scas
dec
lea
mov
fbld
add
mov
pushf
mov
lea
mov
fs
les
jno
jnp
mov
push
or
adc
push
inc
add
flds
into
test
jo
hlt
xor
ds
xor
push
mov
add
cwtl
pop
xlat
scas
or
je
stos
push
out
insl
test
add
ret
rcll
mov
pop
fbld
mov
hlt
cmp
xor
jno
add
mov
imul
pushf
mov
lar
incl
fsubl
push
js
shll
jecxz
jle
sbb
add
add
shr
inc
sub
or
xchg
gs
add
dec
cmc
scas
sbb
stc
leave
or
mov
enter
xchg
movlps
fidivs
xchg
ja
add
adc
or
adc
hlt
shlb
push
mov
ds
mov
add
xor
mov
pop
and
cld
daa
mov
dec
nop
push
cwtl
paddb
add
add
add
cmp
adc
or
inc
jle
sub
dec
fnstsw
inc
test
cwtl
lcall
scas
out
xchg
movb
inc
add
dec
adc
mov
xor
dec
cmp
stc
test
pop
add
cmc
out
outsl
and
jbe
movsl
mov
mov
mov
les
ret
test
sbb
add
sub
sti
fidivrl
jg
adc
xor
add
add
jmp
or
lods
push
cmp
das
mov
pop
pop
sbb
bound
lock
cmc
and
pop
nop
mov
mov
es
add
in
out
je
xor
addb
in
outsl
mul
loope
pusha
add
add
cltd
jne
add
int
pop
in
push
mov
pop
and
push
ret
sbb
cmpsl
imulb
gs
xchg
aaa
movb
cmp
mov
push
add
mov
mov
adc
sub
jg
push
jbe
adc
xchg
sbb
addb
fs
imul
es
ret
and
cld
push
xchg
mov
cmp
pop
pop
dec
mov
or
ret
dec
add
lea
pop
data16
push
enter
mov
sbb
aam
mov
mov
ja
xor
cmc
imul
add
adc
jmp
mov
cwtl
xchg
das
lods
xor
xchg
stc
add
push
or
add
sbb
mov
and
insl
maskmovq
negl
fstl
aad
push
cmp
mov
cltd
mov
cmc
jl
jno
mov
sub
lods
sbb
push
outsb
lods
push
mov
cmc
test
mov
insl
aaa
sub
test
mov
scas
jno
jns
bound
sub
pop
dec
lret
mov
out
jp
repz
xlat
lock
push
and
add
pop
mov
or
mov
add
mov
xchg
pop
push
mov
fdivrs
mov
xor
push
fsts
jl
lret
out
add
mov
je
out
xor
fwait
insb
leave
je
test
popf
das
sub
push
insb
mov
pxor
cmp
add
addb
push
movsl
insb
out
and
aad
add
cmp
mov
repz
repz
cmpsb
repnz
rcll
aam
or
mov
cmc
std
movb
clc
jno
pusha
add
mov
xor
mov
add
test
das
or
mov
mov
popf
cmp
leave
ret
push
xor
les
push
test
sub
xor
dec
notb
add
cmovo
testb
sbb
adcl
mov
jge
jne
xlat
push
in
xor
test
fidivs
mov
mov
mov
xor
jbe
xchg
arpl
das
jb
push
sbb
add
ret
or
sbb
sub
inc
mov
icebp
add
dec
mov
add
dec
les
inc
add
scas
ss
inc
add
add
rorl
mov
aam
out
dec
mov
cmp
and
jne
test
mov
sahf
push
out
pop
sub
mov
and
fimull
pop
inc
cmp
mov
xchg
push
rolb
mov
mov
ss
sub
pushf
out
rcll
xor
stos
inc
add
out
cltd
adc
jno
pop
sbb
adc
push
divb
mov
push
mov
add
shrl
ss
inc
add
add
pushf
cmpsl
pop
adc
push
add
fisttpl
mov
ret
adc
pop
xchg
jne
xchg
or
rorl
or
das
stc
or
xchg
int3
inc
add
add
xor
cmp
fsubrl
lock
jbe
add
cmp
in
in
in
fbstp
ret
mov
jbe
pop
pop
scas
xor
clc
jne
adc
inc
icebp
iret
or
movsb
pushf
dec
sub
lods
xor
cwtl
vprotb
add
dec
in
dec
orl
in
adc
leave
jle
outsl
loope
xchg
mov
xchg
push
add
sub
add
xchg
mov
sbb
das
repnz
dec
push
int3
addb
pop
fcmove
imul
in
repnz
pop
out
xchg
dec
sahf
push
repz
les
lock
adc
in
inc
xchg
sahf
jbe
pop
lods
mov
outsl
pop
adc
cld
testl
push
pop
js
fcompl
pop
loopne
add
lods
sub
push
dec
push
out
jl
push
aad
sub
out
jb
enter
and
mov
pusha
add
xchg
inc
add
ss
or
fcoms
mov
cmp
pop
and
cmp
mov
stos
inc
add
out
pop
movb
mov
jmp
dec
mov
mov
jl
adc
add
inc
add
mov
xor
imull
loopne
and
das
outsl
mov
push
add
gs
pushf
leave
jbe
sbb
adc
push
add
inc
add
dec
sub
lret
jns
push
mov
rorl
movsb
std
add
mov
ljmp
xchg
in
lcall
loop
xchg
push
test
add
push
mov
mov
add
sti
std
pop
test
movsl
jb
lahf
js
pop
pushf
sub
dec
ret
cwtl
popa
imul
and
push
insb
jge
mov
adc
mov
jb
jne
fsubrs
mov
xor
out
imulb
lahf
push
jg
add
pop
mov
repz
push
mov
mov
mov
mov
imul
pop
ss
or
add
inc
lods
and
into
jmp
add
add
cmp
outsb
xchg
sahf
xor
mov
push
adc
lcall
fstps
and
inc
add
adc
sub
fstpt
lret
or
jp
adc
test
fs
mov
insl
cmp
push
mov
mov
adcl
add
loope
loope
js
push
mov
push
arpl
out
imul
test
imul
adc
hlt
sub
push
and
mov
sbb
nop
ret
cltd
lea
popa
sbb
xor
or
add
stos
mov
les
test
jl
popa
inc
sub
mov
sbb
mov
out
add
shrl
add
add
ficoms
movb
cld
pand
jl
pop
je
fs
cmpsl
les
dec
push
lret
and
push
add
clc
negl
repz
je
lret
fs
imul
mov
or
ja
cmpsl
je
mov
or
and
cmp
jo
add
ljmp
inc
lock
shll
in
jmp
push
xor
lods
fimull
out
mov
jnp
js
negb
test
fmuls
mov
jle
add
jb
insb
enter
and
mov
inc
add
sar
sbb
loop
inc
add
jmp
jbe
insb
xor
push
lods
stos
lret
xor
cmp
imul
sub
pop
push
insl
out
movsl
jge
aad
sub
cmp
out
ja
jo
ret
je
sub
js
lret
inc
outsb
pop
push
fldt
inc
add
xor
dec
xor
push
int
stc
push
sbb
in
mov
mov
lret
push
pop
sub
mov
call
jae
rolb
aaa
dec
ret
jp
xchg
push
or
leave
bound
shl
js
add
lods
and
xchg
xchg
incb
dec
lcall
jbe
gs
sub
xor
lds
stc
jae
das
push
ss
mov
or
or
mov
insb
cli
rcl
cmp
imul
mov
lea
jns
push
xchg
add
sbbl
inc
add
int3
rolb
int3
stos
add
cmp
jl
loopne
inc
jns
mov
mov
addb
cmpsl
gs
sbb
repnz
cmc
sarb
cmp
pxor
cld
xchg
jae
add
or
ret
aaa
movsb
rcr
fimuls
add
jle
std
jle
pop
stc
icebp
jb
test
je
inc
in
dec
pop
mov
ret
or
out
rcrb
mov
jo
pop
repz
xchg
pop
pop
sub
bnd
adc
inc
add
dec
jb
add
arpl
in
cmp
int3
add
inc
add
sub
std
mov
adc
sbb
mov
test
cmp
insl
lods
pop
jo
add
xor
jle
cmp
sub
lahf
out
es
nop
adc
mov
sub
xchg
in
cmc
xchg
into
push
fs
add
pop
jg
add
hlt
idivb
ljmp
add
cmpsb
push
pop
sub
mov
jp
sub
fnsave
jbe
out
sbb
insb
cmp
mov
gs
mov
mov
je
xchg
jnp
cmpsb
sub
addb
or
repnz
cmp
mov
mov
aas
inc
add
add
negb
addb
imul
or
mov
dec
jnp
loope
fisubrl
cmpsb
mov
add
popf
rcll
xchg
add
jno
push
and
push
and
fwait
clc
cld
int
xchg
xor
fldcw
adc
dec
xchg
dec
ss
add
add
pop
cmp
icebp
inc
lret
rolb
add
mov
ljmp
jne
jmp
mov
xchg
and
out
arpl
xor
mov
popa
paddd
inc
push
rorl
or
sub
add
call
or
jl
jne
add
and
outsl
into
push
loope
mov
and
in
dec
inc
add
mov
std
xor
mov
movsl
aas
pop
pop
add
and
in
call
push
xor
add
push
mov
repz
fistl
rcrb
sub
xor
and
ljmp
fbld
adc
adc
mov
nop
das
imul
and
mov
testl
or
add
add
dec
inc
lcall
fnstenv
pop
adc
pop
inc
add
jle
fcoms
imul
loop
outsb
push
add
or
sbb
jo
pop
inc
xor
data16
sbb
xchg
xchg
inc
sub
mov
int3
repz
add
aad
leave
mov
pop
sub
ret
sahf
dec
inc
add
stc
andl
xlat
imul
push
inc
add
add
jne
hlt
les
cmp
or
cmp
or
sbb
cmp
mov
mov
sarl
push
push
bound
inc
add
dec
sub
sub
mov
inc
and
add
popf
movb
add
in
in
scas
les
lds
negb
dec
out
idivl
lds
lret
push
sbb
add
test
inc
clc
lds
addb
add
cmpsl
clc
and
dec
insl
insb
shr
shl
or
jecxz
xchg
jmp
or
mov
lods
inc
add
shrl
inc
pop
popa
mov
fildl
inc
add
add
aaa
or
mov
mov
and
insb
jbe
add
roll
and
sbb
ret
jmp
or
mov
adc
pop
aam
dec
lods
mov
lahf
mov
test
les
mov
in
mov
jp
and
sub
in
sbb
and
shll
and
mov
nop
xchg
cs
into
lahf
les
push
xchg
inc
dec
jg
adc
gs
sarl
jae
jnp
mov
and
push
mov
cmp
and
or
xchg
mov
mov
add
or
add
or
mov
mov
add
lock
out
test
jns
push
sub
dec
les
fldt
test
cmp
mov
test
mov
shll
pop
cs
add
mov
test
repz
pop
mov
add
push
xchg
aaa
mov
cmp
fadds
rcll
mov
cmpsl
outsb
adc
mov
mov
jle
test
cmpsb
call
popf
push
adc
xor
mov
sbb
pop
adc
xor
add
addb
push
popf
pop
mov
add
add
ljmp
or
lret
jb
add
and
idivl
mov
rcll
nop
fiaddl
pop
add
stos
jne
into
int3
stos
jmp
imul
lds
add
add
add
ret
push
pusha
add
decl
mov
add
stc
cmp
in
into
xchg
inc
and
rorl
and
xchg
rcrl
into
xchg
pop
add
jmp
sbb
add
sub
dec
popa
scas
and
xor
lock
dec
loop
sbb
iret
xor
jns
and
insl
cmp
add
mov
stc
or
and
mov
and
jnp
push
jecxz
push
xchg
xor
insb
enter
add
pop
mov
inc
add
or
idiv
jo
rorl
xor
jmp
iret
loope
test
ss
mov
xor
rolb
lcall
pop
fwait
test
aam
mov
in
and
lea
inc
not
pop
cmpsl
push
pop
mov
dec
mov
mov
jmp
addb
rol
sbb
add
push
add
mov
ffreep
add
insb
pop
inc
add
add
dec
hlt
cmp
shrl
imul
insb
dec
dec
mov
test
mov
bound
sbb
xchg
push
icebp
add
push
sahf
fpatan
mov
in
sub
jg
add
aas
adc
in
push
out
jmp
lret
mov
mov
sarb
sbb
xor
cwtl
aaa
xlat
xor
divb
js
pushf
scas
xor
add
inc
add
add
clc
sub
add
neg
ljmp
add
add
pop
jbe
lds
arpl
jbe
sub
pop
outsl
dec
push
inc
add
xchg
inc
sub
add
mov
xchg
pop
xor
test
addb
mov
push
fdivrl
jg
test
sub
aaa
mov
jg
xchg
xor
nop
enter
or
xchg
lret
jnp
add
mov
fiaddl
flds
push
clc
sub
mov
loopne
jne
jl
mov
cmp
jae
icebp
popa
pop
xchg
lock
pop
mov
fadds
mov
movsl
push
xor
xor
cmp
aaa
add
pop
addb
add
push
fisubs
push
stc
lods
popf
pop
fs
add
cli
jb
shrb
outsl
repnz
pop
mov
mov
or
or
ficompl
dec
xchg
sub
cli
sub
push
int
cmp
nop
fdivrs
push
imul
adc
or
push
xor
incb
xchg
popa
out
dec
or
pop
or
pusha
add
adc
dec
mov
aam
mov
and
push
xchg
ds
push
mov
aas
popa
loope
aam
push
aad
pop
or
lods
jo
mov
xchg
iret
bound
xor
sahf
daa
cs
and
mov
cs
add
inc
add
lods
dec
jnp
cmp
add
xchg
lcall
xchg
pop
lods
add
mov
sub
xor
jle
inc
add
loopne
cli
cld
clc
sub
add
jne
pop
pop
cltd
insb
or
js
dec
add
or
ja
gs
xchg
fwait
dec
mov
lods
lds
das
sbb
sub
dec
or
fldcw
mov
xchg
mov
push
lds
cmp
loopne
add
and
mov
lret
add
sub
call
lret
imul
add
push
add
and
jno
sbb
pop
popa
cmp
jae
pop
bound
mov
int
inc
add
xchg
and
lret
in
fisubl
pop
cmp
jnp
mov
add
jne
add
lds
push
or
std
push
xchg
pop
push
stos
movb
ret
mov
je
pop
aad
jns
and
mov
adc
jo
or
xor
mov
in
jmp
jns
je
push
ret
add
aas
sbb
push
inc
test
rorl
or
add
push
js
mov
add
or
mov
jecxz
jle
icebp
aas
addb
push
cmpsb
daa
sti
push
mov
add
add
ljmp
loope
sub
add
cmp
jno
sti
ror
rolb
dec
out
xchg
cmc
xlat
lret
push
outsl
imul
fs
sub
das
xor
pop
stos
rcll
fbld
add
mov
push
jmp
pop
out
inc
add
popa
xchg
fbstp
test
scas
mov
add
push
stc
mov
fdivr
mov
pop
test
jge
clc
das
outsb
daa
addl
cli
sub
dec
stos
andps
mov
inc
add
rcl
lcall
inc
add
lods
jmp
gs
xchg
test
aam
jo
inc
add
pop
cld
cmp
loope
insb
mov
clc
sbb
fs
clc
lret
dec
adc
roll
hlt
insb
dec
mov
addb
shll
xlat
jmp
aam
mov
add
cli
addr16
ret
imul
aad
sti
test
dec
pop
div
enter
aad
outsb
stos
jne
mov
add
cmc
pop
mov
mov
loop
scas
sarb
inc
out
add
test
jo
pushf
cs
aas
out
pop
sti
les
mov
daa
pop
inc
es
iret
dec
cmp
mov
stc
xchg
lahf
fmuls
loopne
stos
enter
test
lods
lret
mov
inc
mov
mov
daa
add
ljmp
sbb
sub
aas
mov
jle
ds
divb
mov
xchg
adc
add
pop
push
popa
std
mov
inc
add
mov
punpckhwd
jae
lods
dec
pop
out
out
sbb
jae
std
pop
sub
or
addr16
add
call
fcomi
scas
jge
add
insl
mov
jmp
mov
call
inc
add
add
lret
fidivrl
mov
call
jnp
fnstenv
loope
rcll
inc
add
add
push
sub
lock
pop
hlt
xchg
mov
pop
insl
aad
add
scas
sahf
push
adc
dec
pop
std
movsl
push
pushf
jns
add
inc
add
add
je
rcrb
int
pop
jg
dec
sbb
test
or
cli
aas
cmp
clc
sbb
into
out
and
inc
or
push
iret
mov
pop
jno
mov
loop
movsl
sub
mov
cmp
mov
fadds
shlb
mov
psllq
addb
add
xchg
jne
daa
add
mov
jb
sbb
mov
jecxz
aaa
clc
daa
cltd
aaa
dec
xchg
mov
and
into
dec
ss
out
inc
les
daa
adc
adc
sub
add
repz
fwait
cmp
dec
xlat
pop
mov
or
pop
hlt
outsb
push
flds
jne
popa
call
xchg
shll
dec
scas
pop
adc
dec
xor
mov
inc
mov
pop
sub
test
mov
stc
cmp
push
add
lods
scas
ss
mov
cs
std
es
jl
dec
add
loope
and
lods
loopne
xor
nop
mov
inc
out
imul
fdivs
add
jne
fcoml
adc
cmpsb
lret
mov
inc
ss
mov
cmpsb
and
out
add
sbb
mov
adc
aas
push
daa
add
lret
mov
popa
sbb
bound
sub
push
mov
add
sbb
icebp
cmpl
pop
mov
shll
movl
stc
push
jns
cs
mov
pop
xchg
cli
jne
