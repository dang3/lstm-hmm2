fldenv
loopne
and
loopne
dec
movsl
loopne
movsl
loopne
cmpsb
mov
loopne
push
mov
loopne
mov
test
mov
mov
loopne
jno
loopne
andl
mov
movsl
loopne
add
loopne
dec
cmpsb
loopne
jmp
loopne
scas
cmpsb
loopne
xchg
loopne
sub
test
mov
cmpsb
loopne
mov
loopne
aad
loopne
xor
mov
cmpsl
loopne
and
loopne
cmp
loopne
leave
cmpsb
loopne
push
loopne
lret
movsl
loopne
mov
loopne
loop
loopne
cmpsl
loopne
in
loopne
mov
loopne
xor
loopne
jle
loopne
adc
loopne
mov
loopne
jle
loopne
xchg
test
mov
test
mov
mov
loopne
mov
cmpsl
loopne
bound
loopne
mov
loopne
cwtl
mov
loopne
jo
loopne
aas
cmpsl
loopne
inc
mov
loopne
data16
loopne
inc
cmpsb
loopne
aad
loopne
sbb
loopne
push
cmpsl
loopne
nop
test
mov
mov
loopne
mov
loopne
fsubl
loopne
lds
loopne
loopne
xor
loopne
inc
movsl
loopne
loop
loopne
cmp
loopne
cltd
mov
loopne
test
loopne
shrl
mov
mov
loopne
sub
mov
loopne
push
cmpsl
loopne
js
loopne
cmp
cmpsl
loopne
lret
mov
movsb
loopne
jns
loopne
in
loopne
cmpsl
test
mov
cmpsl
loopne
push
cmpsl
loopne
dec
test
mov
test
mov
movsb
loopne
shrl
loopne
outsl
test
mov
mov
loopne
cmpsb
loopne
pop
mov
loopne
dec
movsb
loopne
jl
loopne
fldenv
loopne
movsb
loopne
or
loopne
xor
mov
mov
loopne
cmp
loopne
xchg
movsl
loopne
icebp
cmpsb
loopne
daa
mov
loopne
cltd
mov
loopne
sub
loopne
ret
cmpsb
loopne
or
loopne
aad
loopne
dec
mov
loopne
andl
mov
movsl
loopne
ret
cmpsl
loopne
or
loopne
iret
test
mov
mov
loopne
lahf
cmpsb
loopne
pop
movsl
loopne
les
mov
test
mov
test
mov
test
mov
movsb
loopne
cmpsl
movsl
loopne
iret
cmpsb
loopne
push
mov
loopne
lcall
mov
mov
loopne
test
cmpsl
loopne
shll
loopne
or
loopne
or
loopne
mov
mov
cmpsb
loopne
pop
test
loopne
test
mov
movsl
loopne
xor
loopne
ret
movsb
loopne
lock
loopne
adc
loopne
das
cmpsb
loopne
sub
loopne
jne
loopne
clc
mov
loopne
aam
loopne
inc
mov
loopne
imul
mov
cmpsb
loopne
bound
loopne
fwait
mov
loopne
lahf
mov
loopne
insl
test
mov
cmpsb
loopne
fldenv
loopne
add
loopne
das
movsl
loopne
stos
movsl
loopne
mov
test
mov
test
loopne
int
loopne
mov
mov
loopne
jb
loopne
subb
mov
mov
loopne
fbld
mov
test
mov
test
loopne
inc
mov
loopne
inc
movsl
loopne
ljmp
mov
movsl
loopne
fisubrs
loopne
xor
movsl
loopne
stos
mov
loopne
into
cmpsb
loopne
inc
movsb
loopne
jbe
loopne
sbb
loopne
in
mov
loopne
fsubs
mov
movsl
loopne
sahf
cmpsl
loopne
xor
cmpsb
loopne
fbld
mov
movsb
loopne
in
movsl
loopne
std
mov
loopne
jmp
loopne
aaa
movsb
loopne
mov
mov
loopne
insl
test
mov
movsb
loopne
movsb
mov
loopne
mov
mov
test
mov
movsb
loopne
push
cmpsb
loopne
adc
cmpsl
loopne
les
loopne
mov
loopne
jae
loopne
jno
loopne
adc
loopne
cmp
loopne
enter
cmp
loopne
jl
loopne
and
loopne
addr16
sbb
loopne
jmp
mov
loopne
or
loopne
dec
test
mov
cmpsl
loopne
push
test
loopne
jnp
loopne
stc
cmpsb
loopne
jo
loopne
out
loopne
mov
mov
loopne
or
loopne
loope
loopne
das
test
loopne
hlt
test
mov
cmpsl
loopne
push
movsl
loopne
push
test
loopne
xchg
cmpsl
loopne
mov
loopne
pusha
mov
loopne
mov
loopne
and
loopne
in
movsl
loopne
cmp
loopne
test
loopne
stos
movsb
loopne
mov
loopne
adc
movsb
loopne
jg
loopne
jl
loopne
jge
loopne
inc
mov
loopne
jmp
mov
loopne
push
mov
loopne
and
loopne
inc
movsb
loopne
mov
mov
loopne
and
loopne
sbb
loopne
cld
cmpsb
loopne
nop
mov
loopne
movsl
movsl
loopne
pop
mov
loopne
aaa
cmpsl
loopne
jbe
loopne
pop
mov
loopne
mov
movsb
loopne
les
loopne
insl
mov
loopne
les
loopne
in
loopne
jb
loopne
adc
loopne
cmp
test
mov
mov
loopne
shll
mov
mov
loopne
add
loopne
inc
cmpsl
loopne
mov
loopne
cld
cmpsb
loopne
insb
test
mov
mov
loopne
adc
loopne
loopne
loopne
xchg
mov
loopne
fisubs
loopne
lahf
mov
loopne
mov
cmpsl
loopne
sub
loopne
inc
test
loopne
stos
cmpsb
loopne
cmc
movsl
loopne
sub
loopne
inc
cmpsl
loopne
adc
loopne
frstor
loopne
inc
mov
loopne
pop
cmpsl
loopne
shlb
out
loopne
stos
mov
loopne
fisubs
loopne
in
loopne
aaa
movsl
loopne
movsl
cmpsb
loopne
pop
mov
loopne
dec
mov
loopne
ret
mov
mov
loopne
push
loopne
and
test
mov
test
mov
cmpsb
loopne
enter
insb
mov
loopne
jns
loopne
inc
movsl
loopne
mov
mov
loopne
xlat
mov
loopne
or
loopne
jmp
loopne
xchg
cmpsb
loopne
out
loopne
dec
cmpsb
loopne
lea
loopne
mov
loopne
lds
loopne
add
loopne
pop
test
mov
test
loopne
mov
mov
loopne
cmp
loopne
leave
mov
loopne
inc
movsb
loopne
sbb
loopne
mov
loopne
adc
mov
loopne
je
loopne
hlt
mov
loopne
pop
mov
loopne
hlt
test
mov
cmpsb
loopne
loope
loopne
imul
mov
mov
loopne
ret
cmpsl
loopne
xchg
loopne
mov
loopne
test
loopne
sbb
loopne
inc
movsl
loopne
mov
movsb
loopne
aad
loopne
lahf
cmpsl
loopne
mov
movsb
loopne
shll
loopne
xor
mov
mov
loopne
pop
test
mov
mov
loopne
sbb
loopne
xor
loopne
lret
mov
cmpsb
loopne
mov
movsb
loopne
pop
cmpsl
loopne
sub
loopne
cld
mov
loopne
in
test
mov
mov
loopne
adc
cmpsb
loopne
jae
loopne
cltd
movsl
loopne
imul
loopne
sbb
loopne
adc
loopne
in
loopne
xor
loopne
lods
mov
loopne
repz
loopne
jge
loopne
cmp
test
loopne
cmp
loopne
sub
loopne
gs
mov
cmpsl
loopne
cwtl
cmpsl
loopne
fbld
loopne
enter
cs
loopne
cmp
cmpsl
loopne
jbe
loopne
sbb
loopne
xor
loopne
shlb
mov
test
mov
movsl
loopne
mov
mov
loopne
mov
cmpsl
loopne
popf
movsl
loopne
dec
cmpsl
loopne
andb
mov
mov
loopne
fwait
cmpsl
loopne
movsb
movsb
loopne
fldenv
loopne
dec
mov
loopne
sub
loopne
cmpsl
mov
loopne
adc
cmpsl
loopne
mov
cmpsl
loopne
clc
movsl
loopne
addr16
mov
mov
loopne
movsb
movsl
loopne
int
loopne
mov
loopne
mov
loopne
mov
loopne
inc
test
mov
test
mov
mov
loopne
mov
loopne
nop
test
mov
cmpsb
loopne
add
loopne
andl
loopne
xlat
cmpsb
loopne
movsl
loopne
jae
loopne
mov
mov
loopne
mov
loopne
jne
loopne
hlt
movsl
loopne
repz
loopne
jne
loopne
lahf
mov
loopne
jno
loopne
into
cmpsl
loopne
pop
test
mov
mov
loopne
lea
loopne
adc
loopne
jg
loopne
daa
cmpsb
loopne
mov
mov
loopne
pop
test
mov
cmpsb
loopne
in
loopne
into
mov
loopne
mov
loopne
xchg
movsb
loopne
mov
loopne
xchg
mov
loopne
jbe
loopne
cmp
loopne
aam
loopne
adc
mov
mov
loopne
pop
movsl
loopne
loopne
loopne
cmp
loopne
inc
mov
loopne
mov
loopne
insb
mov
loopne
loopne
loopne
addr16
mov
cmpsb
loopne
xlat
movsb
loopne
movsl
mov
loopne
nop
mov
loopne
dec
mov
loopne
mov
loopne
mov
loopne
and
loopne
arpl
loopne
lret
movsb
loopne
std
mov
loopne
xchg
mov
loopne
or
loopne
xor
loopne
xor
mov
mov
loopne
andl
mov
cmpsl
loopne
ja
loopne
sbb
loopne
in
loopne
shlb
loopne
hlt
mov
loopne
dec
test
loopne
fwait
mov
loopne
pop
movsl
loopne
stc
mov
loopne
push
test
mov
cmpsb
loopne
add
mov
loopne
sbb
test
loopne
movsb
loopne
add
loopne
lret
movsb
loopne
mulb
loopne
rep
loopne
and
loopne
mov
loopne
inc
test
loopne
shrb
loopne
scas
test
mov
test
mov
mov
loopne
shll
loopne
add
loopne
jb
loopne
dec
mov
loopne
mov
mov
movsb
loopne
shlb
loopne
in
loopne
add
loopne
mov
mov
loopne
mov
loopne
fisubl
loopne
sbb
loopne
repnz
loopne
jae
loopne
xchg
movsl
loopne
sub
loopne
sbb
loopne
call
cmpsb
loopne
sub
loopne
movsb
loopne
xchg
mov
loopne
pop
movsl
loopne
inc
movsb
loopne
fisubs
loopne
pop
movsl
loopne
pop
cmpsl
loopne
or
movsl
loopne
sbb
test
mov
mov
loopne
shrb
loopne
xchg
mov
loopne
lret
movsb
loopne
call
mov
loopne
bound
loopne
xor
loopne
pop
test
mov
cmpsl
loopne
mov
loopne
cmpsb
movsl
loopne
inc
cmpsb
loopne
in
test
mov
mov
loopne
jnp
loopne
pop
cmpsb
loopne
scas
test
mov
mov
loopne
pop
mov
loopne
cltd
mov
loopne
jmp
cmpsb
loopne
repz
loopne
dec
test
loopne
mov
loopne
xchg
mov
loopne
mov
loopne
cmp
mov
loopne
sub
loopne
adc
loopne
andb
mov
test
loopne
mov
mov
loopne
inc
movsb
loopne
movsl
loopne
push
mov
loopne
in
cmpsb
loopne
imul
mov
mov
loopne
das
movsl
loopne
fbld
loopne
jmp
loopne
mov
movsl
loopne
lea
loopne
pop
mov
loopne
imul
loopne
jecxz
loopne
inc
test
mov
test
mov
movsb
loopne
in
loopne
sahf
mov
loopne
arpl
loopne
out
loopne
sub
mov
movsb
loopne
loope
loopne
fbld
loopne
mull
loopne
cwtl
movsb
loopne
cmp
mov
mov
loopne
aaa
mov
loopne
imulb
loopne
push
movsl
loopne
scas
cmpsl
loopne
int
loopne
sti
mov
loopne
mov
movsl
loopne
pop
mov
loopne
mov
loopne
movsb
cmpsb
loopne
push
movsb
loopne
sbb
loopne
cmpsl
cmpsl
loopne
iret
mov
loopne
cmp
mov
loopne
add
loopne
cld
mov
loopne
mull
loopne
jge
loopne
loope
loopne
sub
loopne
and
loopne
stos
mov
loopne
cmpsb
loopne
and
mov
movsl
loopne
out
movsl
loopne
push
movsl
loopne
or
loopne
icebp
mov
loopne
lret
mov
loopne
shlb
loopne
fisubs
loopne
les
loopne
jmp
loopne
cmp
movsl
loopne
jb
loopne
fwait
cmpsl
loopne
test
loopne
fldenv
loopne
popf
movsb
loopne
out
mov
loopne
sub
loopne
mov
loopne
cmp
loopne
push
movsb
loopne
sbb
movsl
loopne
mov
loopne
aaa
test
loopne
dec
mov
loopne
andb
mov
test
mov
mov
loopne
pop
cmpsb
loopne
inc
movsb
loopne
sub
loopne
pushf
mov
loopne
xor
loopne
cmpsw
loopne
cmpsl
mov
loopne
lcall
mov
test
mov
mov
loopne
loopne
xor
loopne
mov
mov
loopne
xchg
mov
loopne
test
loopne
andb
mov
cmpsl
loopne
inc
test
mov
cmpsb
loopne
xchg
cmpsl
loopne
insb
mov
loopne
sub
loopne
aas
mov
loopne
mov
test
mov
movsb
loopne
jl
loopne
mov
loopne
ljmp
mov
movsb
loopne
or
movsb
loopne
push
mov
loopne
mov
movsb
loopne
sbb
loopne
ja
loopne
xor
loopne
xor
loopne
push
movsl
loopne
iret
mov
loopne
jbe
loopne
mov
loopne
mov
loopne
inc
cmpsb
loopne
or
loopne
push
cmpsl
loopne
jg
loopne
and
loopne
push
movsl
loopne
mov
movsb
loopne
push
cmpsb
loopne
inc
mov
loopne
lret
mov
cmpsb
loopne
mov
loopne
lods
mov
loopne
push
test
mov
test
mov
cmpsl
loopne
adc
loopne
mov
loopne
sbb
loopne
and
loopne
repz
loopne
push
test
loopne
outsl
cmpsl
loopne
andl
mov
mov
loopne
dec
cmpsb
loopne
xchg
movsl
loopne
inc
movsb
loopne
sbb
loopne
dec
movsb
loopne
in
cmpsb
loopne
ret
cmpsl
loopne
loop
loopne
xchg
mov
loopne
into
test
mov
movsb
loopne
andb
mov
test
mov
test
mov
movsl
loopne
xor
loopne
andb
mov
movsb
loopne
sub
loopne
es
mov
test
mov
test
mov
cmpsb
loopne
jl
loopne
pop
movsl
loopne
add
mov
loopne
call
mov
loopne
cli
mov
loopne
xchg
mov
loopne
push
cmpsl
loopne
lret
test
mov
test
mov
test
mov
mov
loopne
inc
mov
loopne
dec
mov
loopne
jg
loopne
sub
loopne
add
loopne
jl
loopne
andl
loopne
add
mov
mov
loopne
pop
mov
loopne
mov
cmpsb
loopne
shll
loopne
or
loopne
xchg
mov
loopne
std
movsl
loopne
lods
mov
loopne
cmpsb
loopne
adc
loopne
sahf
movsb
loopne
loopne
loopne
imul
mov
test
mov
cmpsb
loopne
jmp
test
loopne
insb
movsl
loopne
sub
test
mov
movsl
loopne
and
loopne
mov
cmpsb
loopne
and
loopne
cmpsl
test
mov
test
mov
cmpsl
loopne
sahf
movsb
loopne
lret
movsb
loopne
push
test
loopne
mov
movsl
loopne
shlb
loopne
in
mov
loopne
push
movsb
loopne
fbld
loopne
pop
loopne
sbb
loopne
cmp
mov
loopne
in
test
mov
test
mov
mov
loopne
imul
loopne
jg
loopne
sub
loopne
jns
loopne
xchg
mov
loopne
push
cmpsb
loopne
mull
loopne
movsb
cmpsb
loopne
xor
loopne
in
mov
loopne
fsubrs
loopne
shll
loopne
mov
loopne
andl
mov
test
mov
mov
loopne
stos
cmpsb
loopne
fisubl
loopne
mov
loopne
aad
loopne
mov
loopne
sub
loopne
fbld
mov
mov
loopne
xchg
test
mov
test
mov
mov
loopne
movsb
loopne
mov
loopne
adc
loopne
sti
cmpsl
loopne
mov
mov
loopne
lds
loopne
inc
movsb
loopne
or
loopne
or
cmpsb
loopne
xchg
mov
loopne
loopne
loopne
sub
mov
mov
loopne
clc
mov
loopne
jmp
loopne
iret
cmpsl
loopne
sub
loopne
add
test
mov
test
mov
cmpsl
loopne
clc
test
mov
cmpsb
loopne
pop
cmpsl
loopne
andb
mov
cmpsb
loopne
xchg
mov
loopne
dec
test
mov
movsb
loopne
shll
mov
cmpsb
loopne
mov
loopne
jmp
test
mov
cmpsb
loopne
adc
loopne
movsb
mov
loopne
add
cmpsl
loopne
pop
mov
loopne
jle
loopne
xchg
mov
loopne
lahf
movsb
loopne
fisubs
mov
test
mov
mov
loopne
stc
cmpsb
loopne
inc
cmpsl
loopne
lea
mov
movsl
loopne
imull
loopne
jno
loopne
jne
loopne
andl
loopne
out
loopne
mov
movsl
loopne
int3
cmpsb
loopne
test
mov
mov
loopne
xlat
movsl
loopne
lock
loopne
leave
movsl
loopne
add
loopne
imul
mov
mov
loopne
xchg
loopne
dec
test
loopne
clc
cmpsl
loopne
and
loopne
loopne
sbb
loopne
and
loopne
jle
loopne
lea
loopne
mulb
loopne
jb
loopne
xchg
mov
loopne
xchg
mov
loopne
xor
loopne
ja
loopne
xor
loopne
push
movsl
loopne
lods
test
mov
cmpsb
loopne
scas
movsb
loopne
aam
loopne
pop
cmpsl
loopne
pop
test
loopne
mov
cmpsl
loopne
lds
loopne
jp
loopne
movsl
cmpsb
loopne
cld
movsb
loopne
in
loopne
push
mov
loopne
jo
loopne
out
mov
loopne
and
loopne
icebp
mov
loopne
push
test
loopne
sbb
loopne
scas
mov
loopne
pop
cmpsb
loopne
jmp
mov
loopne
jge
loopne
lea
loopne
xor
loopne
mov
test
mov
mov
loopne
repz
loopne
outsb
cmpsl
loopne
inc
movsb
loopne
shll
loopne
xchg
cmpsb
loopne
cmp
loopne
pop
mov
loopne
insl
test
mov
test
mov
mov
loopne
fwait
mov
loopne
mov
mov
loopne
bound
loopne
shlb
loopne
fwait
mov
loopne
mov
movsl
loopne
dec
cmpsl
loopne
cmp
mov
loopne
loopne
aas
movsl
loopne
mov
loopne
loopne
loopne
test
movsl
loopne
xchg
movsl
loopne
add
test
mov
movsl
loopne
in
loopne
push
mov
loopne
mov
test
loopne
das
test
mov
cmpsb
loopne
jecxz
loopne
into
movsl
loopne
xchg
test
mov
mov
loopne
sahf
test
mov
test
mov
movsl
loopne
fsubl
loopne
in
mov
loopne
sbb
mov
movsb
loopne
clc
movsb
loopne
das
movsb
loopne
imul
loopne
icebp
cmpsb
loopne
sbb
loopne
loopne
loopne
sahf
test
mov
cmpsl
loopne
mov
mov
loopne
pusha
mov
loopne
and
loopne
or
loopne
loopne
loopne
push
cmpsb
loopne
cmpsb
mov
loopne
cmp
mov
loopne
daa
movsl
loopne
scas
mov
loopne
gs
mov
cmpsl
loopne
pop
mov
loopne
dec
movsl
loopne
gs
aad
add
adc
add
loopne
inc
clc
xlat
push
rorb
or
adc
js
clc
xchg
inc
add
cmp
add
leave
aam
fldcw
cmp
clc
lea
inc
clc
pop
xchg
cmp
lea
flds
stc
mov
mov
add
gs
add
add
clc
adc
add
int
clc
icebp
push
dec
jns
lcall
ret
nop
daa
clc
movsb
clc
repnz
push
ds
ret
jp
push
clc
out
lret
xchg
push
add
or
scas
in
cmp
cmp
imull
clc
inc
clc
call
mov
clc
add
add
clc
dec
cli
jno
add
mov
add
aad
sar
or
add
rorl
jae,pn
add
dec
cmc
xchg
popf
adc
add
clc
sub
fcom
dec
inc
add
jne
mov
sub
cmp
clc
cs
sbb
add
mov
add
divl
add
inc
clc
push
mov
out
scas
repz
add
xchg
aas
lock
add
jb
add
clc
clc
ja
stos
or
jbe
clc
cmp
push
push
clc
sub
xchg
mov
clc
ret
clc
jge
lret
push
add
je
xchg
pop
mov
add
add
mov
mov
push
xchg
sub
repnz
test
pop
ss
clc
icebp
lods
das
inc
clc
ret
clc
fcomps
cmc
jmp
add
pop
mov
clc
repnz
mov
add
adc
clc
je,pt
fwait
or
add
inc
add
jge
clc
xchg
aas
in
int3
adc
add
add
xchg
scas
inc
add
pop
xchg
jge
sbb
cmp
add
jns
add
xchg
add
insb
rolb
clc
gs
sar
inc
add
ja
and
add
clc
jg
mov
jo
add
add
sub
clc
xlat
sbb
jae
add
push
jl
xor
add
add
outsl
in
mov
add
mov
cmp
jg
cmp
fisubrs
pop
sub
clc
popf
adc
add
sar
clc
and
xor
add
lods
xor
add
clc
xchg
insb
jge
cmpsl
clc
ljmp
cmp
add
or
add
dec
imul
adc
add
es
cwtl
xchg
clc
gs
mov
push
mov
imul
push
add
xchg
dec
xor
clc
cs
clc
std
sub
mov
sub
cmp
jmp
jbe
int3
sub
add
movsl
clc
pushf
mov
and
add
add
clc
outsb
jnp
cltd
pop
pop
bound
add
es
out
out
cli
ret
clc
cmc
das
imul
sub
clc
adc
add
adc
add
sar
inc
clc
push
mov
add
mov
add
or
clc
aad
in
mov
cmp
dec
mov
sbb
test
clc
call
dec
xbegin
add
add
add
dec
test
cmp
clc
lock
rorb
jno
add
push
mov
sub
clc
int
push
xor
add
out
push
add
rol
clc
or
das
mov
add
lcall
nop
cmp
or
add
cmpsb
clc
lahf
push
jae
add
call
xchg
push
add
push
clc
repz
clc
pushf
fsubrl
stos
dec
dec
test
movsb
clc
fmull
test
lods
jl
mov
or
clc
outsb
sub
cmpsl
clc
cmp
clc
mov
pop
lahf
add
add
pop
inc
add
xchg
or
rcl
fidivrl
sbb
pop
cwtl
add
inc
clc
mov
and
jge
clc
mov
add
mov
and
add
int3
rorl
add
mov
add
addr16
fdivr
mov
test
xchg
and
add
std
sub
arpl
add
sahf
in
mov
add
clc
mov
mov
or
scas
sub
add
cmp
add
clc
xbegin
clc
mov
clc
inc
clc
jae
add
jp
mov
ss
jle
clc
jno
add
xchg
in
movsl
clc
cltd
out
inc
add
outsl
fcom
fisttpll
dec
or
add
add
in
mov
outsl
inc
add
push
add
cmpsl
clc
jge
xchg
ds
inc
add
jbe
clc
test
jno
add
out
and
add
xchg
xor
add
add
or
loop
testb
sbb
mov
fdivrl
jbe
clc
xor
pop
cwtl
xchg
out
loop
test
mov
clc
pop
pop
nop
cmp
clc
xchg
xchg
aaa
addr16
mov
pop
fisubl
add
clc
and
add
sub
xbegin
add
fmull
repz
imul
pushf
add
fstps
clc
sahf
and
add
ret
clc
loopne
lret
push
clc
lea
fcoms
add
sar
adc
add
and
add
add
mov
add
test
clc
loope
jecxz
dec
pop
out
jp
into
inc
add
adc
add
mov
inc
clc
cmp
push
jmp
clc
sbb
stc
inc
add
push
add
sbb
add
lret
clc
repz
lock
add
add
sbb
out
mov
sub
clc
adc
push
push
add
dec
push
add
mov
lcall
pop
adc
add
repnz
pop
push
xor
add
xlat
cli
jnp
clc
xchg
sbb
aas
mov
clc
or
jns
lock
add
cmp
clc
xor
add
add
jle
cmp
push
sbb
movsb
clc
fidivl
add
ret
clc
mov
aad
pop
sar
pop
stos
dec
sub
clc
mov
add
xchg
sahf
int
clc
in
jg
inc
add
cmp
or
add
fimuls
add
push
add
jo
add
lods
outsl
lret
cltd
in
xchg
pop
clc
mov
add
clc
add
add
jmp
xchg
divb
add
js
push
add
inc
add
or
or
xor
add
add
add
clc
outsb
inc
clc
leave
sahf
sti
pop
stos
xchg
movsl
clc
lret
lahf
shlb
cmp
add
clc
jbe
int
push
cmp
cs
sub
clc
mov
enter
cmp
test
cmp
scas
add
adc
add
icebp
loope
imulb
pop
clc
sub
sbb
clc
cmp
dec
mov
clc
xchg
pop
adc
add
add
and
add
clc
ret
clc
mov
push
add
shl
jae
add
lods
lret
inc
add
dec
aad
fdivl
add
add
dec
mov
clc
es
mov
cmp
clc
sahf
insl
add
ljmp
lahf
fwait
pop
clc
addr16
shlb
add
mov
add
ss
sub
cmp
jb
add
clc
divl
data16
idiv
dec
or
aam
add
push
add
ret
clc
clc
outsl
out
lods
pushf
mov
xor
add
clc
daa
clc
adc
add
mov
add
pop
cmp
clc
push
add
or
fwait
sbb
pop
call
mov
add
sbb
cmp
add
mov
clc
sahf
insb
clc
cmp
add
fidivrs
jnp
or
dec
mov
mov
shlb
mov
xbegin
add
ret
fstps
jmp
mov
stc
push
clc
mov
push
add
inc
clc
cmp
sub
ret
xchg
pop
xchg
aam
add
add
ffreep
clc
push
pop
mov
push
hlt
cmp
jmp
or
or
imul
push
dec
sarl
mov
stc
popf
das
inc
add
lret
lea
add
mov
cmpsl
clc
jbe
clc
cmp
clc
notl
add
add
add
or
mov
push
mov
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
and
add
add
push
xchg
cwtl
push
aaa
jo
add
jge
scas
push
es
dec
add
add
add
xor
add
cmp
clc
and
mov
xchg
inc
add
outsb
stos
into
jecxz
xchg
ret
add
xor
stc
ss
jp
scas
cmp
or
mov
mov
clc
sbb
cmp
xchg
leave
cli
sub
cmp
cmp
clc
cmp
mov
ss
ret
and
cmp
or
push
iret
popl
add
daa
clc
add
js
das
pop
outsb
xabort
or
cmp
add
push
xchg
mov
and
add
pop
clc
pop
sar
mov
add
sti
dec
hlt
popa
add
ljmp
lea
je
cwtl
dec
cwtl
fcmovb
clc
test
test
sar
push
cld
test
fwait
gs
stc
or
adc
addr16
clc
insb
repz
xchg
fnstenv
jmp
cmp
add
sbb
xchg
jo
add
out
std
ss
pop
fwait
cmp
cwtl
adc
jbe
clc
xor
add
xor
add
lods
ror
ret
pop
clc
pushf
sarl
ret
clc
jae
add
add
add
aaa
cmc
jae
add
add
clc
sub
xchg
or
add
fnsave
add
pop
cli
aas
mov
clc
mov
xlat
dec
mov
add
add
mov
clc
testb
add
movsl
clc
popa
add
xchg
pop
cmpsb
clc
mov
testb
add
jg
dec
scas
cmpsb
clc
dec
xchg
cmp
ja
mov
aaa
or
and
push
or
and
add
imul
sub
das
lock
push
add
leave
sub
xadd
std
movsl
clc
mov
xor
add
add
sar
xabort
lcall
add
add
mulb
clc
data16
int
cmp
aaa
lcall
call
inc
clc
dec
aam
sbb
test
jmp
sti
cmpsb
clc
leave
jmp
sahf
mov
rcr
fisubs
add
clc
std
test
stc
lahf
aad
lahf
dec
xor
mov
clc
js
ds
clc
jmp
xor
add
into
jno
add
add
mov
mov
mov
clc
daa
clc
mov
cmc
xchg
push
add
add
add
clc
add
add
clc
je
mov
add
scas
sti
and
ljmp
clc
daa
clc
inc
add
jo
add
lods
xchg
sbb
std
sar
push
add
lcall
rorl
daa
clc
push
inc
add
dec
mov
cmp
sbb
jge
dec
sub
xchg
mov
add
inc
add
hlt
cmpsb
clc
add
clc
das
or
xor
ss
ret
lea
mov
stc
cmp
lcall
push
into
jp
clc
aas
cmp
pop
fcoml
dec
int3
mov
add
jne
cld
jmp
popa
add
mov
jmp
dec
test
das
data16
fildll
popf
addr16
leave
jecxz
addr16
ss
loop
push
sub
xor
add
clc
lcall
clc
push
clc
sub
jb
add
daa
clc
test
add
repnz
xchg
rorb
and
add
push
leave
in
add
add
scas
xchg
jne
add
pop
or
add
pop
adc
clc
in
aaa
mov
clc
ds
xor
add
lock
cmp
out
sti
mov
pop
popa
add
outsl
js
clc
int3
js
add
jge
int
add
in
push
mov
add
clc
xchg
mov
add
sbb
xchg
in
inc
clc
and
add
add
or
add
mov
ja
clc
fisubrl
dec
push
cld
jmp
fwait
sub
xchg
mov
cld
jmp
push
xchg
cmpsb
fcomp
aaa
adc
add
jge
add
cmp
mov
clc
mov
aam
gs
out
mov
jae
add
call
cmc
xchg
jb
add
pop
cs
lods
inc
clc
jp
sub
sub
add
add
pop
sti
adc
add
sbb
scas
dec
rcrb
inc
add
lret
clc
ret
jo
add
clc
or
lahf
scas
sti
cmp
pop
arpl
add
add
pushf
lret
movsl
clc
add
add
insb
pop
stc
sahf
mov
add
leave
cmp
lahf
aaa
xchg
pop
xchg
adc
add
sahf
aad
push
add
pop
mov
clc
adc
add
sub
clc
sahf
cltd
cwtl
jle,pt
clc
xchg
pop
cld
adc
add
add
in
or
jne
cld
jmp
imul
sub
insb
mov
add
ficoms
add
or
clc
jne
clc
pop
pop
sub
cmp
clc
std
cmp
movswl
cld
jmp
add
xlat
pop
popl
add
into
mov
inc
clc
gs
clc
cmpsl
clc
aam
clc
xlat
adc
add
add
loope
jl
clc
mov
scas
int
add
inc
clc
cmp
jns
clc
push
clc
int3
fwait
cs
add
out
pusha
add
push
add
mov
clc
shrl
sar
mov
or
clc
out
stc
push
or
add
sub
rorl
or
cmp
pop
lea
clc
mov
repnz
jmp
add
test
into
pop
dec
int
out
out
pop
notb
add
jns
add
stos
stos
dec
decl
add
jmp
mov
repnz
clc
pop
mov
add
cltd
idivb
xor
add
mov
and
add
dec
cmp
jmp
sub
pop
xor
add
and
xlat
daa
clc
ljmp
dec
lods
mov
out
mov
clc
fmul
mov
clc
sbb
stos
cld
jmp
sbb
cmp
sarl
sbb
popf
fs
lret
add
push
mov
clc
or
add
int3
cmp
clc
push
sub
gs
mov
pushf
adc
and
call
lcall
add
pop
aad
pusha
add
mov
movsb
clc
and
add
clc
movsb
clc
cmpsl
clc
cmp
clc
cmp
pop
call
ret
clc
mov
add
cli
clc
jg
xchg
sub
lods
xchg
cld
pushf
jg
aaa
sub
cmc
mov
js
dec
mov
out
test
cmp
clc
xor
add
mov
add
testl
lcall
add
mov
xchg
pusha
add
xchg
mov
lret
fcoms
cmp
dec
sbb
jg
cld
jmp
outsl
sbb
mov
cld
jmp
add
push
mov
add
add
xchg
decl
mov
push
cld
jmp
sub
dec
arpl
add
add
cmp
clc
and
add
jbe
xchg
clc
jnp
pop
clc
pop
js
dec
pop
mov
test
idiv
mov
in
xchg
call
rclb
add
pop
mov
mov
cld
jmp
and
pop
lret
aad
clc
ljmp
add
add
data16
xchg
sbb
ss
ret
inc
inc
cwtl
mov
lahf
sti
xchg
cmp
add
add
dec
loope
pushf
loopne
lods
pop
sbb
loopne
mov
mov
or
inc
add
std
xor
add
jmp
fwait
add
scas
push
outsl
jo
add
je
sub
sahf
dec
push
add
mov
add
repnz
imul
clc
jno
add
add
pop
fstp
jne
clc
jmp
cltd
ret
clc
pop
pop
sbb
add
cmpsl
clc
adc
add
add
add
jecxz
movsl
clc
neg
sbb
add
mov
cltd
addr16
icebp
lock
ljmp
clc
pop
xabort
xchg
adc
add
push
or
das
shll
scas
pop
jo
add
or
add
dec
cmp
mov
push
add
sbb
cs
fsubl
cmp
cltd
sub
clc
outsl
inc
add
je
add
hlt
xor
add
in
shrl
cli
inc
clc
imul
dec
movsl
clc
data16
aaa
mov
add
arpl
add
inc
clc
inc
clc
mov
clc
xor
jp
out
pop
cmpsb
clc
sbb
xlat
in
enter
mov
clc
and
xchg
cld
or
push
lea
add
sub
je
cld
jmp
xor
add
imull
ss
ret
and
aaa
inc
xchg
xchg
ds
add
or
sar
add
pop
clc
xor
add
icebp
cwtl
inc
add
cmc
push
insl
mov
xbegin
push
add
inc
clc
and
jl
mov
fs
sbb
sbb
jge
cld
jmp
insb
and
inc
clc
mov
sub
add
xchg
push
jbe
mov
aaa
cmpsb
clc
inc
clc
loop
clc
ret
clc
mov
push
clc
cld
int
clc
pop
mov
clc
test
xor
add
lods
xchg
jne
mov
add
and
add
cmp
add
push
fldt
sbb
sar
jecxz
mov
adc
add
shlb
add
loope
mov
sbb
push
pop
bnd
mov
iret
add
add
ds
or
ss
fidivrl
int3
push
cmpsl
clc
xchg
and
add
cmp
dec
push
cld
jmp
sbb
sub
cmp
inc
clc
lea
add
lods
fwait
clc
jne
push
and
add
shl
cld
jmp
xor
push
bound
add
test
ret
clc
xchg
js
mov
add
out
sar
add
cmp
clc
push
sti
stc
sar
cmpsb
clc
cmp
add
or
clc
enter
jo
add
arpl
add
pop
jb
add
cmp
xor
add
sarl
test
fiaddl
push
ss
ret
sahf
ja
or
jmp
cld
jmp
jno
cmpsb
clc
xor
add
cltd
lret
shl
cld
jmp
sub
push
aaa
jge
nop
fiadds
into
mov
scas
mov
add
cld
jmp
lea
or
add
push
add
cld
jmp
sbb
add
sbb
loop
cld
mov
mov
add
pop
jne
clc
dec
xor
add
clc
cmp
add
addps
mov
hlt
jecxz
sbb
test
push
add
cld
jmp
cmp
clc
out
clc
cli
cmp
add
ret
sub
add
dec
mov
mov
add
es
push
leave
ror
adc
add
clc
js
jmp
add
add
adc
add
add
inc
clc
lret
mov
insl
rep
test
aas
ret
clc
outsb
pop
es
fists
add
jle
cmp
add
cmp
clc
out
cmp
jge
pop
int
clc
cmp
cmpsl
clc
add
out
jb
add
add
cmpsb
clc
je
outsb
aaa
pop
sbb
xchg
push
jne
je
sbb
fmuls
clc
rcll
add
dec
and
add
sub
popf
lods
jecxz
pushf
inc
add
lret
mov
fwait
lock
xchg
jo
add
add
mov
push
add
jge
push
xchg
mov
icebp
push
mov
jns
mov
jmp
cmp
jae
add
clc
sub
clc
js
add
cmp
add
mov
insl
stc
pop
sahf
incl
jg
add
pop
jg
push
xchg
in
ljmp
mov
push
add
pop
adc
add
add
ss
ret
lea
jae
add
jo
add
es
dec
jle
add
add
das
repnz
clc
sub
or
clc
gs
divb
add
cld
clc
lock
clc
xor
add
adc
jno,pn
add
push
add
mov
jnp
clc
adc
add
mov
clc
mov
or
push
xchg
push
pop
ss
ret
outsl
sub
inc
ror
cwtl
jmp
pop
clc
pushf
add
mov
mov
ss
ret
sbb
cwtl
cmp
clc
fdivr
ds
clc
mov
test
insl
pop
sbb
sbb
leave
lahf
cmp
add
popf
aas
and
add
shlb
add
testb
sub
inc
mov
clc
sbb
mov
add
cld
jmp
incl
and
add
jle
clc
enter
adc
mov
clc
into
sti
inc
add
mov
popa
add
pop
insl
dec
sar
out
cli
popf
dec
xor
add
incl
psllq
pushl
cmp
clc
mov
add
in
inc
clc
mov
add
das
sahf
arpl
add
clc
test
lea
add
sbb
push
je
cld
jmp
ja
hlt
aad
sbb
add
xchg
imul
clc
mov
cmp
icebp
cmp
clc
stos
out
jb
add
mov
or
xor
add
jecxz
out
add
add
add
pop
data16
pop
movsb
clc
int3
pop
sbb
jno
add
add
dec
incl
enter
cmp
add
or
push
cmp
jmp
push
aam
clc
outsb
xbegin
add
push
add
cld
jmp
or
adc
add
clc
cmp
add
pop
fdivl
in
cmp
jne
add
pop
aam
mov
clc
xor
insl
jns
inc
clc
and
add
mov
sub
cltd
imul
add
or
addb
push
aad
clc
cmp
xabort
fdivs
xlat
dec
or
or
push
lods
push
mov
cmp
xchg
mov
lcall
imul
add
icebp
xlat
fildl
aad
and
add
sbb
lods
jmp
add
imul
lods
clc
mov
loop
shll
xchg
add
clc
jp
clc
pushf
in
cmp
push
add
add
add
xchg
bound
add
fdivrl
add
or
add
hlt
in
mov
add
and
sar
mov
je
ficoml
clc
stc
push
pushf
ret
clc
sbb
clc
xabort
loopne
rcll
lret
fs
aam
mov
dec
js
pop
int3
push
add
cmp
add
sub
mov
xchg
or
lret
mov
cmpsl
clc
xchg
xor
add
add
cmp
xlat
sar
clc
jbe
clc
pusha
add
xor
add
and
add
es
fwait
mov
dec
fadds
add
mov
add
xor
add
mov
fimull
sbb
jge
jle
add
pop
mov
pop
jo
add
test
add
clc
insl
repnz
movsl
clc
jbe
clc
xchg
sub
gs
sar
gs
push
mov
clc
cmc
cwtl
cmpsl
clc
into
mov
push
add
aas
cmpsb
dec
sub
push
clc
adc
add
add
add
adc
add
xchg
xbegin
mov
inc
clc
jb
add
clc
lret
and
add
lret
xlat
adc
add
add
sub
add
xor
add
pop
xabort
clc
sbb
clc
dec
mov
ret
clc
inc
add
inc
add
inc
add
mov
jmp
add
lock
clc
mov
sub
sub
clc
imul
add
add
in
in
cmpsb
clc
stos
jbe
dec
popf
popa
add
lea
sub
data16
inc
add
inc
clc
sbb
clc
es
jmp
add
lods
push
add
fiadds
cmpsl
clc
push
pop
mov
add
or
push
lods
loop
cld
movsl
clc
push
add
fdivr
inc
add
mov
clc
sahf
dec
jns
repz
inc
clc
outsb
ficompl
add
pop
loop
cmc
outsl
scas
ljmp
and
and
negb
mov
jg
jmp
add
arpl
add
loope
addr16
idivl
mov
call
in
cmp
add
stos
cmp
pop
imul
xor
cld
jmp
xchg
sub
adc
add
repz
inc
clc
or
push
add
push
add
int
clc
mov
or
lret
jnp
and
add
clc
aad
jne
in
sbb
add
mov
stc
imul
es
or
add
fwait
out
sub
mov
dec
cli
lcall
jg
add
stos
test
add
mov
jmp
sub
add
movsb
clc
insl
pop
xchg
outsb
add
add
clc
das
mov
add
out
insb
stos
xlat
dec
jmp
pop
dec
lods
cli
xbegin
inc
clc
ljmp
jno
add
jne
and
add
clc
aaa
dec
ret
clc
cmp
clc
not
pop
or
dec
gs
clc
cmp
xchg
aad
add
xchg
or
dec
add
add
clc
cmp
loop
cmp
add
je
add
xor
add
clc
fldz
popf
call
jmp
mov
cmp
clc
lret
cmp
cmpsb
clc
cmp
clc
and
pop
into
mov
pop
cld
jmp
cmp
or
push
clc
inc
add
cmp
cmp
clc
push
dec
cli
iret
mov
mov
mov
lods
imul
adc
xlat
pop
out
out
and
add
pop
clc
xor
add
clc
and
add
cmp
icebp
inc
add
iret
mov
clc
xor
add
out
lcall
cli
das
bound
add
out
hlt
movsb
clc
repnz
add
push
test
clc
std
ret
add
stos
das
pop
cwtl
call
push
ret
jp
and
add
add
add
clc
sbb
std
cmpsl
add
sub
sub
shll
add
push
and
add
clc
sbb
sti
cli
call
jae
add
cmp
add
fsubr
push
aaa
inc
clc
pop
cld
fwait
mov
clc
mov
clc
cld
div
sub
clc
cmpsb
clc
push
add
dec
jg
rorl
push
add
in
inc
add
fiadds
lock
ss
fwait
daa
clc
push
mov
add
add
mov
mov
std
outsb
nop
sar
ja
clc
icebp
push
xchg
sbb
test
push
xchg
or
out
lahf
sub
bound
add
add
mov
fstl
or
jmp
dec
inc
push
data16
or
add
mov
cmp
jmp
and
imul
xchg
rolb
aam
clc
lods
roll
add
fildl
add
add
pop
das
clc
cmp
add
add
popf
sub
scas
aam
push
cmp
mov
cmp
or
add
mov
add
sar
mov
add
jmp
add
sbb
imulb
in
add
add
xor
add
jecxz
push
adc
add
add
push
add
adc
add
popa
add
sbb
frstor
add
pop
daa
clc
mov
push
bound
add
add
imul
add
test
stos
nop
xbegin
xchg
sar
clc
dec
sbb
clc
dec
push
add
or
clc
pop
and
add
add
pop
sahf
dec
or
inc
clc
je
xchg
inc
add
in
gs
mov
outsl
dec
mov
pop
clc
gs
pop
scas
pop
mov
sub
add
push
mov
lcall
add
sbb
push
add
inc
add
aam
fsubs
aaa
cmc
insb
sub
pop
movsb
clc
dec
shrb
add
idiv
js
xbegin
or
jmp
insb
xor
imul
clc
xor
add
lods
iret
pop
add
add
shl
clc
cmp
xchg
jbe
add
xchg
decb
btc
dec
loop
and
add
push
add
pop
ja
int
fistpll
clc
push
pop
cld
jmp
adc
sub
cmpsb
clc
test
fs
jl
pushf
add
add
add
add
clc
mov
add
ret
clc
sub
pop
clc
int3
imul
push
pop
xor
add
mov
jne
js
mov
add
clc
lods
fisubl
in
lock
mov
pop
lods
aad
in
cmp
jno
add
add
movsl
clc
or
mov
sar
lret
pop
inc
clc
outsl
jge
clc
and
pop
jle
mov
add
sub
clc
xor
aad
pop
clc
mov
clc
mov
add
add
dec
out
sub
jp
inc
clc
je
clc
sti
imull
push
add
sahf
repz
repnz
data16
arpl
add
add
inc
add
call
in
cmp
add
lret
pop
inc
add
decl
test
add
pop
sub
add
fists
lods
mov
movsb
clc
mov
pusha
cld
jmp
aas
sbb
push
add
xor
add
push
add
fildl
add
add
clc
in
inc
add
jmp
push
jl
loope
popf
mov
dec
pop
fimuls
add
movsb
clc
cmp
nop
mov
sar
mov
cld
jmp
and
xchg
inc
add
mov
clc
mov
mov
sub
clc
xabort
sub
cmpsl
clc
dec
aad
mov
out
fsubrs
clc
or
add
adc
pop
jecxz
dec
pushf
jmp
testb
inc
clc
movsl
clc
or
add
add
add
add
imul
add
adc
xchg
iret
in
jno
add
add
mov
sahf
sub
add
inc
clc
lock
pop
test
add
push
fwait
cs
idivl
clc
outsl
es
popa
add
fst
in
outsb
loope
daa
clc
ss
popf
mov
repz
add
add
and
add
in
sbb
cmpsb
clc
jge
decl
test
and
add
jmp
repnz
add
push
add
adc
add
add
add
pusha
add
lahf
test
add
add
add
sbb
sbb
jmp
sbb
sbb
xchg
mov
add
in
mov
movsl
clc
adc
add
lods
pop
popa
add
dec
imul
clc
shrl
insb
icebp
lods
pop
sar
add
dec
ss
pop
dec
sbb
mov
mov
adc
add
xchg
and
clc
mov
cmp
clc
jbe
clc
jg
hlt
sti
push
mov
mov
push
mov
add
lods
data16
enter
push
add
inc
add
ret
clc
or
xchg
xor
add
mov
add
cs
mov
mov
push
add
mov
fs
dec
mov
and
add
jl
repnz
clc
pop
rcrb
clc
sub
or
rcll
add
add
imul
or
daa
clc
fbld
flds
add
add
cld
fidivs
add
sub
stos
add
add
jecxz
jmp
clc
dec
adc
add
enter
add
add
xchg
or
cli
pop
stc
icebp
mov
add
adc
add
or
clc
push
xor
sarb
add
push
xor
add
xabort
jne
cld
jmp
lods
mov
add
inc
clc
cmp
clc
fbld
add
add
jns
clc
fiadds
or
sub
clc
fcmovnbe
adc
clc
push
add
push
push
xchg
add
mov
sub
stos
or
sbb
push
add
add
pop
enter
mov
in
xor
or
cs
xor
add
icebp
push
add
in
cmp
jge
and
add
mov
lret
dec
addr16
pop
push
jecxz
push
clc
or
cmp
fsubrl
add
cmp
jbe
clc
mov
clc
mov
mov
cmp
mov
mov
lods
loop
cmp
hlt
in
xchg
dec
sti
test
xchg
xchg
jne
test
int
stos
cmp
ret
add
sub
mov
mov
int3
jle
nop
test
cld
jmp
sub
pop
sbb
sub
dec
xchg
adc
add
test
mov
jbe
clc
xor
add
add
or
ja
xor
mov
mov
jle
clc
jno
add
clc
xlat
pop
scas
cmp
add
add
push
inc
add
mov
add
out
clc
pushf
push
add
cld
jmp
sub
fsubrs
jno
add
jnp
mov
clc
or
inc
clc
nop
sub
enter
pushf
loope
mov
add
xchg
or
int
lahf
aaa
cmp
insl
xchg
pop
cmp
push
lods
ss
ret
fwait
pop
adc
jbe
add
jae
add
adc
add
clc
xor
mov
mov
inc
add
imul
mov
lods
jge
add
jl
lcall
mov
data16
pop
lahf
xchg
popa
add
pusha
add
mov
lcall
and
add
mov
clc
insl
add
add
cmp
jg
cld
jmp
test
bound
add
add
lea
push
ret
cmp
movsl
clc
aam
inc
clc
dec
add
add
mov
push
add
movsl
clc
scas
inc
add
sahf
sahf
popa
add
and
add
sbb
mov
mov
cld
jmp
subb
scas
bnd
clc
popf
scas
dec
cmpsb
clc
pushf
out
push
rorb
mov
stc
fsubs
stc
test
or
aaa
mov
cld
jmp
test
ficomps
xchg
xchg
mov
sbb
daa
in
decl
xchg
cmp
clc
push
xor
add
aas
popf
and
mov
in
push
ret
jg
xor
add
cmpsb
clc
decb
out
bound
add
ja
clc
insb
test
or
test
scas
mov
jae
add
fwait
pop
mov
and
add
add
add
aad
add
dec
xchg
xchg
mov
xor
xchg
loop
movsb
clc
add
add
clc
xor
add
add
fnstsw
inc
clc
outsl
and
xchg
jno
add
sbb
clc
sahf
push
add
xchg
ljmp
repnz
xor
add
clc
adc
add
pop
arpl
add
add
cmp
jnp
xor
add
test
cltd
lcall
add
add
outsb
push
mov
je
clc
decb
sbb
pop
out
inc
clc
test
clc
push
add
push
data16
jmp
test
sbb
outsb
mov
jno
add
add
adc
add
clc
push
clc
in
sahf
cwtl
ret
clc
adc
add
adc
es
inc
add
mov
add
lods
pop
loop
cltd
dec
gs
cmpsl
clc
mov
fdiv
cmp
clc
sbb
popf
sbb
or
pop
adc
loope
es
push
add
dec
fnstcw
push
outsb
cs
clc
jae
add
popa
add
sbb
add
and
add
clc
ljmp
add
cwtl
cmp
aas
inc
clc
and
push
add
test
clc
ja
clc
mov
mov
cs
jp
xchg
movsl
clc
sub
add
xchg
jl
push
add
add
clc
cmp
negb
sub
cmp
pop
sbb
jmp
mov
xchg
gs
xchg
xchg
cmp
clc
xchg
in
stc
stc
dec
std
pop
jle
clc
xchg
cmp
hlt
add
add
addr16
pushf
outsb
mov
jg
xchg
mov
adc
xchg
add
lods
pop
clc
jne
inc
clc
sbb
xchg
xor
add
clc
jp
inc
clc
es
xbegin
pop
imul
add
xchg
pop
jns
mov
dec
sbb
ljmp
sub
clc
pop
jae
add
dec
imul
and
mov
ss
add
iret
dec
movsl
clc
movsl
clc
add
add
dec
into
mov
lock
add
xchg
js
add
mov
dec
bound
add
clc
sbb
add
add
int
clc
out
mov
add
add
add
adc
add
xchg
adc
add
add
jp
clc
xbegin
jp
clc
sbb
add
sub
cs
loopne
lret
add
xabort
add
cmp
mov
add
lahf
ja
clc
inc
clc
hlt
jmp
and
add
sar
out
mov
fistl
add
push
add
ret
clc
xchg
jg
push
inc
clc
outsl
pusha
add
imulb
clc
sub
add
mov
add
stos
int3
cmp
lret
and
add
pop
insb
pushf
add
add
pop
mov
add
dec
dec
push
add
jb
add
add
cmp
cwtl
xchg
mov
popa
add
fists
add
push
inc
add
add
add
add
mov
add
clc
pop
pop
arpl
add
sar
ds
inc
add
bound
add
clc
xchg
mulb
je
mov
dec
iret
and
jge
add
int
fs
int
loopne
pop
xlat
sar
test
mov
cltd
pop
mov
into
inc
add
jle
lcall
push
xchg
inc
add
push
ja
cmpsb
aaa
push
add
add
add
push
add
nop
ljmp
clc
xchg
inc
clc
xchg
fisubs
clc
clc
jecxz
stos
push
movsl
clc
push
es
push
lret
jmp
arpl
add
push
add
mov
xor
jge
clc
ffree
clc
outsl
xor
add
shlb
add
pop
clc
mov
call
cld
jmp
mov
add
add
out
mov
clc
mov
fadd
clc
enter
push
add
cld
scas
jne
and
add
add
aaa
dec
mov
add
pop
ret
clc
mov
push
add
xchg
inc
add
add
add
std
xchg
sub
add
dec
cmp
cmpsl
clc
fldl
ja
add
or
mov
inc
clc
ljmp
add
pop
rol
clc
mov
call
jns
clc
pop
lods
xor
test
push
add
outsl
out
lock
clc
test
scas
sub
sub
out
mov
mov
add
add
pusha
add
ror
and
dec
shl
xchg
cmc
jl
fs
pop
sub
clc
add
add
add
call
push
ret
jg
or
test
xabort
imul
clc
mov
nop
lods
sub
loope
sbb
clc
out
aaa
sub
clc
sar
clc
fdivr
xabort
cmp
hlt
or
push
add
jge
je
add
hlt
jbe
addr16
cmpsb
clc
aas
adc
add
add
xchg
and
insb
scas
stos
jbe
clc
gs
xor
mov
clc
jecxz
add
add
add
jae
add
or
push
add
mov
lcall
xlat
cmp
jge
jge
mov
sub
clc
sbb
lret
and
sar
xchg
or
or
dec
push
clc
ret
clc
loop
pop
lret
sub
addr16
add
add
mov
cmp
loop
mov
add
or
add
pop
push
add
xchg
je,pn
add
add
std
mov
clc
movsl
clc
outsb
data16
push
add
or
add
aad
add
sahf
adc
add
cmpsl
clc
inc
add
out
xchg
mov
test
das
jb
add
lcall
add
sahf
rcll
add
push
add
into
adc
push
mov
add
loope
push
push
mov
jb
add
pop
scas
call
cmp
clc
mov
add
fistl
xor
add
clc
push
aam
or
lcall
clc
fwait
mov
jecxz
fstps
jnp
out
inc
add
mov
cld
jmp
and
ds
add
add
pop
xchg
sub
clc
sbb
clc
icebp
mov
add
sub
imul
jbe
clc
push
adc
add
mov
inc
clc
xor
add
outsl
insb
ret
clc
out
sti
push
pop
cld
jmp
inc
or
clc
cld
ret
clc
pop
xchg
adc
cwtl
pop
fwait
adc
add
add
inc
clc
add
add
add
add
mov
clc
cmp
jnp
adc
add
clc
inc
clc
add
cmpsb
clc
movsl
clc
mov
sti
inc
add
stos
mov
mov
jne
nop
in
cmp
add
add
mov
lret
mov
dec
cltd
adc
add
std
add
xor
add
clc
inc
clc
lcall
clc
pop
and
add
or
psrad
mov
add
inc
clc
fyl2xp1
xor
add
add
clc
outsl
rclb
pop
out
sub
clc
pop
mov
jns
and
add
clc
xchg
adc
clc
stos
inc
clc
clc
bound
add
clc
stos
inc
clc
jecxz
js
add
cld
jmp
jno
popa
mov
cli
push
add
lret
add
add
add
dec
and
add
push
adc
clc
int
ds
and
add
and
xchg
cmp
xbegin
push
clc
aam
add
je
dec
inc
clc
or
jge
clc
dec
enter
fsubrl
or
imul
insb
xor
sbb
add
and
add
add
pushf
add
bound
add
add
clc
lods
add
add
xchg
pop
dec
push
clc
xchg
and
add
inc
add
pop
sbb
lods
fistpl
cmpsb
clc
in
mov
clc
loop
ret
clc
mov
cmc
or
jmp
adc
xor
sahf
icebp
inc
add
push
clc
jae
add
iret
mov
cltd
xor
add
sbb
mov
sub
jmp
sub
xor
add
add
data16
jne
jl
clc
mov
daa
clc
pop
mov
add
popf
ret
clc
gs
sar
push
jmp
nop
test
inc
add
push
add
imul
lock
stc
cmp
test
mov
clc
cmp
xchg
in
mov
push
add
aas
aas
test
mov
push
ret
sbb
sub
scas
jae
add
add
cltd
test
add
inc
clc
aad
add
addr16
mov
lret
add
mov
clc
jp
sbb
xchg
mov
sar
test
or
pop
adc
xor
add
add
cmp
das
ret
clc
mov
rcr
xchg
adc
add
add
je
add
ds
stos
push
pop
ss
imul
inc
clc
sub
aam
add
ds
add
inc
clc
movsb
clc
lret
inc
clc
inc
add
or
add
jne
and
adc
add
cmp
mov
clc
stos
and
mov
fwait
sbb
xor
clc
cmp
add
xor
add
add
sub
add
sar
cwtl
push
arpl
add
jecxz
sub
sub
add
pop
ficoml
jae
add
lods
sub
dec
dec
hlt
packsswb
add
add
sub
add
sub
add
clc
mov
clc
pop
add
add
jno
add
add
push
out
inc
add
sar
xbegin
bound
add
xor
add
adc
mov
clc
mov
add
push
xchg
in
push
jl
out
rep
decl
mov
cmp
das
inc
add
aaa
mov
xchg
push
add
loopne
cli
xor
add
dec
jge
mov
add
mov
sub
out
clc
push
jmp
popa
sub
pop
jnp
jecxz
xor
add
mov
clc
cmp
out
mov
xchg
bound
add
jae
add
add
mov
and
add
in
push
add
or
clc
cmp
or
clc
shl
clc
dec
fwait
lcall
insl
lahf
dec
loope
out
jns
sub
clc
sub
shll
add
es
jmp
add
divl
stos
cld
ljmp
pop
dec
jne
sub
clc
pop
xor
aad
adc
add
clc
pusha
add
mov
dec
aad
in
jne
lods
mov
mov
add
add
jbe
mov
push
add
test
clc
test
fdivl
xchg
push
sbb
push
ret
inc
xor
xorb
mov
out
sbb
jle
dec
mov
inc
add
in
push
add
ds
lret
push
clc
movsb
clc
shrl
mov
aad
mov
mov
outsl
xlat
into
or
cmp
clc
movsb
clc
mov
dec
das
push
mov
je
add
add
ss
mov
clc
push
decb
data16
push
rol
clc
dec
ljmp
sar
clc
pop
in
mov
sub
or
sarb
aam
and
add
add
clc
xbegin
add
outsb
xabort
add
mov
faddl
xlat
lret
clc
call
mov
xabort
je
jmp
clc
sar
add
mov
sahf
mov
clc
mov
add
mov
cmp
xchg
arpl
add
add
xchg
repz
and
movzbl
add
add
add
adc
add
mov
add
inc
add
lods
aas
jmp
lods
jb
add
clc
push
imul
jb
cld
jmp
jno
xabort
mov
aas
ret
clc
adc
add
dec
lret
pop
cmp
imull
clc
gs
js
loopne,pt
in
sub
bound
add
clc
pushf
sub
adc
add
clc
xor
lock
mov
ds
jns
fdivs
mov
clc
mov
add
insl
inc
add
lret
out
dec
mov
add
add
add
add
add
lcall
lods
adc
add
clc
dec
clc
xor
shlb
cmpsb
clc
inc
clc
ljmp
add
clc
out
sar
mov
add
clc
test
add
mov
push
jmp
sub
pop
in
pusha
add
fldenv
add
pop
idivl
aas
enter
adc
add
lret
xchg
sbb
dec
loope
ljmp
sbb
pop
and
add
jecxz
pop
fs
sub
clc
imul
add
add
clc
int
cmp
enter
paddusb
clc
cmc
jno
add
jae
add
jae
add
loop
clc
es
daa
clc
push
add
inc
clc
jbe
pop
insl
rdpmc
add
push
jecxz
fldenv
scas
mov
mov
stc
aas
mov
icebp
pusha
add
sbb
pop
and
add
out
ljmp
lret
mov
dec
mov
out
mov
dec
jno
add
clc
xor
add
je
mov
loop
sbb
jo
ljmp
clc
sbb
clc
xchg
loope
icebp
jmp
imul
add
aas
pop
mov
add
add
xor
add
sar
decl
cmp
push
add
cmpsb
clc
mov
or
fcmovnb
clc
cmpsb
clc
mov
cld
jmp
sub
dec
test
imul
jp
insl
test
add
mov
clc
adc
add
pop
mov
add
xchg
cmp
imul
loop
adc
add
add
scas
sbb
clc
aaa
aas
pop
insb
xchg
xlat
lods
jo
add
js
sbb
addr16
xor
add
clc
jne
mov
add
jno
add
push
add
dec
je
pop
pop
clc
jns
clc
mov
push
add
cmp
clc
jne
enter
add
inc
add
mov
out
je
jae
add
icebp
ss
add
sub
clc
imul
adc
add
mov
clc
inc
add
or
clc
stc
and
add
sub
hlt
hlt
mov
clc
test
aad
popa
add
mov
xor
add
test
test
mov
push
ret
cld
jmp
sub
popa
stc
add
imul
aas
xchg
mov
addps
add
enter
add
mov
outsb
or
fdivl
add
xchg
mov
lret
or
repnz
clc
lods
mov
add
sub
mov
clc
cmp
add
es
inc
add
mov
int3
mov
cld
jmp
mov
decl
ss
ret
sub
and
add
dec
sar
pusha
add
mov
jmp
push
adc
sti
cmp
xor
clc
xchg
lahf
cmp
push
cld
jmp
das
xchg
push
lea
stc
mov
movsb
clc
imul
jmp
sub
sbbb
add
add
fmul
iret
imul
add
jge
push
add
call
out
jge
sbb
add
add
ffreep
clc
push
add
cmp
add
jmp
mov
adc
add
rol
clc
fnstcw
cmp
in
ret
clc
dec
cmp
cmpsl
clc
scas
mov
fwait
jecxz
adc
or
clc
dec
adc
add
clc
test
clc
cmpsb
clc
daa
clc
cmpsb
clc
xor
add
jbe
add
xor
aam
xchg
mov
call
sbb
iret
iret
fcomi
xchg
inc
add
add
ja
aaa
sub
cmp
jnp
pop
fcoml
clc
pop
rclb
add
data16
cld
xbegin
mov
add
push
je
dec
aas
test
rep
clc
leave
leave
cld
jmp
and
mov
ja
cmp
in
push
add
jnp
ficomps
sub
cwtl
lea
insb
cmp
insl
mov
cmp
adc
add
clc
stos
xor
add
mov
inc
inc
add
jmp
cmp
mov
clc
mov
clc
jo
add
clc
push
mull
add
aam
jge
mov
mov
add
clc
push
add
pushl
shlb
fsubrs
cmp
ja
add
jne
cmp
mov
clc
jl
xor
imul
add
add
adc
add
and
add
clc
add
clc
stos
je
sti
mov
aad
jl
in
imul
or
pop
cld
jmp
sbb
ja
popa
adc
add
nop
mov
clc
cmovns
add
test
in
pop
dec
cld
jae
add
scas
pop
int3
sahf
or
jmp
clc
pushf
arpl
add
pop
ja
clc
jg
add
sbb
clc
mov
clc
rcrb
push
push
add
xchg
aad
cmp
aas
lcall
push
test
cld
jmp
cmp
and
cs
add
xchg
imul
clc
ret
clc
fcomps
add
clc
sar
pop
je
aam
clc
cmp
add
push
gs
cmp
out
stc
into
movsb
clc
pop
dec
fcmovnu
xchg
push
clc
cmp
clc
jnp
clc
pop
in
dec
add
cmp
inc
add
fdivrs
dec
jge
mov
add
add
inc
clc
dec
xor
add
add
or
push
cld
adc
add
dec
adc
add
sbb
add
in
xchg
mov
outsl
clc
int3
in
int3
mov
add
aam
dec
in
jnp
addr16
sub
sub
mov
ss
ret
or
sub
add
add
jae
add
pop
mov
clc
mov
add
add
daa
clc
xchg
shlb
add
clc
dec
pop
std
jae
add
sar
scas
add
add
add
sub
xbegin
add
mov
lcall
in
sub
scas
mov
clc
ret
clc
aaa
insl
jmp
in
ret
clc
mov
clc
cld
mov
clc
scas
jbe
ja
jl
cmc
jge
rclb
add
push
clc
jbe
hlt
jecxz
cmp
pushf
test
mov
lock
add
mov
jecxz
inc
add
sub
xor
clc
add
add
popa
add
mov
add
sahf
inc
clc
push
xchg
aam
clc
into
add
add
add
cwtl
cmpsb
clc
pop
out
add
add
sti
js
repz
add
sub
cli
push
add
sbb
inc
add
push
add
xor
hlt
gs
mov
lods
leave
push
add
inc
add
outsl
mov
xor
add
scas
cmpsl
clc
ficoms
and
add
add
pop
jb
add
mov
add
in
mov
and
add
xchg
add
add
add
push
push
gs
mov
fimull
in
and
mov
add
je
test
sar
inc
clc
sbb
add
jecxz
dec
ficoms
clc
leave
lret
pop
adc
add
or
dec
outsb
and
push
clc
clc
test
clc
pop
std
mov
fwait
stos
push
testl
sahf
cmp
mov
aam
mov
jp
dec
adc
add
pop
adc
in
xor
add
push
xchg
pushf
push
adc
add
in
call
jmp
movsb
pop
or
push
add
jae
add
dec
sub
clc
in
sbb
shr
aam
movsl
clc
jmp
mov
push
jmp
sub
inc
add
pop
insb
sub
add
dec
mov
cmp
enter
sub
aaa
sub
add
sub
and
add
adc
add
clc
mov
push
add
pop
mov
mov
clc
sbb
clc
push
add
mov
lods
gs
pop
adc
xbegin
inc
clc
fbstp
add
add
clc
adc
es
test
xchg
out
mov
sub
add
add
add
push
xchg
mov
add
imul
dec
sub
clc
pop
dec
jp
stc
in
movsl
clc
mov
clc
push
addb
sub
xchg
xbegin
clc
xchg
dec
push
add
shl
jg
aaa
jmp
adc
add
clc
fmuls
pushf
ja
ret
clc
cmp
add
add
add
push
dec
clc
sub
jg
sbb
push
add
jns
clc
out
int
or
cmp
jnp
call
mov
push
ret
mov
addr16
pop
mull
mov
clc
mov
xchg
cmp
ret
and
popa
jge
and
add
sub
jmp
dec
push
in
inc
add
sub
in
in
test
mov
hlt
insb
aas
arpl
add
jne
lea
int
adc
add
clc
xchg
or
add
enter
xchg
mov
decb
cwtl
out
scas
sti
lea
fdivr
inc
clc
pop
and
add
add
or
clc
pop
pusha
add
std
clc
rcl
sub
push
add
addr16
xchg
xabort
clc
mov
inc
clc
xchg
sub
jmp
and
add
clc
shrl
daa
clc
or
add
xchg
dec
xor
add
negl
ficompl
out
fcomps
mov
mov
jo
add
data16
or
xchg
jecxz
mov
dec
sar
jbe
clc
fsubl
clc
outsb
cmp
add
mov
into
aas
lods
out
inc
add
push
negl
sahf
push
es
psubusb
mov
cld
xchg
dec
fwait
inc
clc
pop
clc
cmp
clc
xchg
ret
clc
sar
add
cli
or
sbb
sub
xchg
sti
or
shr
mov
push
ret
popa
xor
jno
add
sub
sbb
clc
js
clc
sar
add
cld
jmp
aaa
aas
pop
xor
add
add
dec
xchg
daa
clc
xor
add
mov
into
mov
sub
add
mov
clc
push
add
int
mov
dec
inc
add
or
clc
fsubrs
mov
cld
jmp
xor
jl
arpl
add
popa
add
and
add
clc
xchg
push
add
insl
push
nop
in
out
stos
mov
push
cmp
add
and
push
push
in
in
or
add
ret
clc
sar
sub
cmp
clc
shr
mov
and
and
daa
clc
inc
clc
test
pop
clc
add
loopne
cmp
mov
dec
lods
stos
jp
clc
movsl
clc
xchg
push
add
pop
clc
mov
iret
movsl
clc
sub
dec
dec
daa
clc
es
lock
mov
add
jo
add
clc
bound
add
mov
loopne
cmp
xchg
xchg
loope
aas
sub
sbb
add
mov
enter
add
inc
clc
jle
sar
cmp
xor
add
clc
cmp
and
add
mov
add
fistpl
cwtl
pop
lods
insb
ret
clc
add
adc
mov
clc
divl
add
cmp
fiadds
sti
push
mov
and
add
clc
incl
cmovns
add
sub
clc
jecxz
jg
ret
clc
arpl
add
mov
mov
movsb
clc
push
add
mov
nop
xchg
rorl
mov
xchg
mov
or
clc
sar
pop
cmp
popa
add
mov
loop
inc
add
or
and
pop
xor
add
mov
clc
xchg
xchg
gs
scas
mov
cmp
sub
clc
aaa
int
or
clc
xchg
pmuludq
sar
dec
cmp
clc
daa
clc
or
in
jmp
clc
incl
push
add
inc
or
movswl
lea
clc
cltd
sub
mov
add
decl
ss
ret
popa
xor
sbb
loope
sar
lods
sti
pop
add
add
xchg
popa
add
xor
add
add
outsb
push
mov
insb
cmp
add
push
push
clc
data16
xor
add
cs
cmc
mov
aad
loopne
push
add
call
sub
xor
pop
jg
test
lret
jle
adc
add
inc
add
xchg
sub
std
xabort
stc
add
lods
jg
adc
std
inc
clc
mov
add
out
sub
insl
dec
pushf
lret
scas
pop
mov
fcoml
jmp
mov
or
push
sbb
int3
cmp
add
mov
xlat
mov
aad
clc
jno
add
clc
cmp
add
clc
lret
xchg
leave
aam
add
stos
pusha
add
xchg
add
and
cs
clc
test
stos
cmp
add
cwtl
cmp
add
dec
leave
clc
mov
sub
sub
add
add
cld
jmp
sub
pop
je
clc
test
add
add
add
mov
ss
ret
dec
das
sbb
lret
clc
lret
clc
pop
sahf
cli
movsl
clc
push
add
or
fildl
push
add
sbb
clc
push
or
add
inc
clc
push
pop
cmc
cmp
loopne
jbe
add
sbb
cld
jmp
test
js
inc
add
or
adc
add
lods
add
add
clc
jb
add
xlat
int
clc
push
add
pop
or
jno
add
sbb
add
pop
cwtl
es
and
add
jmp
cmp
sti
xchg
mov
in
or
sar
cmp
push
push
add
pushf
ret
clc
loop
movsl
clc
mov
scas
ds
fcoml
sbb
cld
jmp
sahf
add
sbb
add
jmp
pop
ljmp
cld
jmp
jno
sub
clc
add
add
pop
xchg
pusha
add
xchg
iret
jecxz
mov
sahf
push
mov
leave
popa
add
lock
add
mov
add
stos
sub
clc
inc
clc
or
clc
or
clc
cwtl
mov
clc
out
jnp
mov
clc
pop
clc
dec
push
jmp
test
cmp
jnp
add
xchg
loope
sar
add
sub
decl
mov
add
jmp
es
shl
clc
add
aaa
pop
out
in
in
jge
clc
in
sub
add
add
clc
cmp
add
pop
test
sbb
clc
or
pop
cmp
clc
jecxz,pt
enter
push
adc
jo
add
clc
push
clc
add
add
mov
fdivl
notb
add
add
pushf
int3
out
out
mov
push
add
push
dec
fbstp
add
push
add
add
add
mov
cld
vunpckhps
in
adc
add
int
lock
movsl
clc
das
ret
clc
es
push
add
push
clc
sub
cwtl
and
add
or
xor
dec
fwait
dec
aam
stos
mov
test
mov
add
mov
inc
add
add
outsl
add
fwait
cmpsb
clc
scas
fs
nop
sahf
dec
lods
outsb
cmp
dec
aam
clc
push
shrb
clc
lret
inc
add
fs
scas
or
imul
jmp
sahf
push
dec
xor
add
push
cld
jmp
subb
mov
insb
enter
add
mov
std
sub
mov
mov
loope
or
clc
mov
sbb
popf
xabort
clc
add
add
xor
add
xchg
mov
pop
cmp
clc
push
add
cmp
clc
gs
add
enter
loop
pop
out
add
test
cmp
or
add
loop
mov
dec
fwait
mov
or
fnstsw
divb
adc
add
clc
lahf
clc
test
or
mov
clc
adc
cmp
jo
add
fnstenv
jecxz
mov
mov
jne
aas
cwtl
unpcklps
popa
add
es
sarl
push
aam
aas
mov
add
cld
jmp
stos
mov
xor
add
add
dec
push
iret
sbb
outsb
int
jo
add
ljmp
out
inc
add
jg
jle
lods
xor
add
add
std
leave
push
int
inc
add
pop
sub
sub
cld
jmp
add
mov
clc
out
es
sbb
or
cmp
mov
sbb
jmp
fdivr
out
pop
add
add
dec
mov
sub
pushf
in
add
add
clc
mov
aaa
ret
clc
jns
stos
inc
clc
js
inc
clc
or
bound
add
jnp,pn
mov
cwtl
xchg
out
pop
decl
fiaddl
add
lods
sub
or
clc
popf
dec
cmp
add
sub
clc
xor
add
add
and
add
hlt
loopne
je
push
add
sub
out
mov
add
mov
std
dec
adc
add
clc
xchg
fs
out
popa
add
scas
push
xchg
add
add
fs
enter
or
imul
add
add
aam
add
dec
add
clc
stos
or
dec
rcrl
adc
add
add
stos
insl
pop
xbegin
ss
ret
pop
or
stos
int
clc
sbb
clc
in
stos
cmp
lods
adc
add
cmp
inc
clc
lcall
clc
push
bound
add
cwtl
mov
fistps
clc
add
adc
add
jnp
cmpsl
clc
stos
call
add
clc
addr16
add
add
neg
stos
leave
sub
or
inc
clc
dec
or
xbegin
cmc
js
add
xor
add
lahf
xchg
mov
sar
add
xchg
push
xor
cld
jmp
inc
sub
scas
jmp
jg
pop
cld
jmp
cwtl
sub
push
lods
fstl
add
and
add
add
or
int
add
xlat
jbe
clc
ret
insl
fs
sbb
loop
inc
add
sub
adc
add
clc
jl
clc
loope
popf
mov
sar
ja
adc
add
sahf
adc
add
mov
jle
sar
cmp
add
mov
add
ficoml
pop
shlb
adc
jmp
or
mov
js
pusha
add
lret
cmp
clc
push
add
add
lods
add
add
std
jb
add
clc
ja
inc
clc
jae
add
out
pop
test
jb
add
repnz
clc
loope
jns
cltd
xchg
gs
push
clc
fdiv
aad
push
add
popa
add
cmp
mov
pop
ret
clc
add
add
sub
clc
test
add
cmpsb
clc
inc
add
mov
clc
cmp
icebp
mov
adc
add
add
negl
add
jne
adc
add
add
add
and
add
mov
push
add
or
data16
pop
clc
and
add
clc
repz
xchg
mov
clc
lcall
clc
push
push
cld
jmp
dec
cwtl
nop
jno
dec
jmp
negb
clc
jp
clc
cmp
xlat
dec
jne
clc
adc
xchg
rcll
mov
xchg
or
ljmp
xor
push
clc
popf
inc
add
jae,pt
add
sub
popa
add
dec
xchg
sbb
ret
cld
jmp
jp
dec
dec
test
sar
lret
call
clc
sbb
inc
clc
stos
leave
lock
add
xchg
cld
arpl
add
imul
cld
jmp
sub
sub
pop
jge
add
in
adc
add
clc
clc
cmp
and
sub
pop
jb
add
clc
mov
and
add
dec
arpl
add
add
add
add
add
or
inc
clc
add
add
arpl
add
add
leave
inc
clc
jae
add
out
add
add
clc
out
push
mov
jp
movsl
clc
xchg
fdivr
stc
cmp
clc
fwait
mov
into
push
add
aaa
pop
data16
rcll
jmp
data16
dec
insb
sub
add
mov
mov
add
jmp
lods
in
iret
adc
add
clc
fisttpll
push
arpl
add
add
inc
add
jmp
add
sub
add
add
add
xor
add
clc
in
jge
mov
clc
pushf
std
cmp
movsl
clc
pop
jns
call
add
stc
or
push
out
pop
sbb
add
lret
mov
pop
bound
add
jecxz
cmc
insl
sub
xor
inc
clc
sub
push
clc
adc
push
arpl
add
clc
mov
lret
xabort
mov
jle
clc
movsb
clc
int
or
in
jae
add
cmp
lcall
cmpsb
clc
sbb
push
ret
aas
add
mov
cltd
imul
clc
or
inc
clc
mov
clc
pop
push
scas
pop
xchg
stos
mov
clc
clc
ret
xor
add
jo
add
pop
mov
adc
add
pop
add
add
add
fs
push
add
dec
in
js
jo
add
jns
add
adc
jmp
add
ss
inc
add
pushf
mov
int3
sub
clc
test
mov
sahf
hlt
leave
fstpt
mov
clc
mov
nop
in
fwait
jnp,pt
xor
add
jp
xchg
scas
xchg
test
cmp
shll
add
clc
fwait
icebp
push
lret
add
popf
testl
add
add
add
jns
jae
add
adc
add
clc
adc
add
jl
sub
pop
decl
add
sub
cmp
mov
add
pop
daa
clc
das
cli
notl
clc
daa
clc
xchg
popf
ljmp
add
adc
clc
outsb
insb
clc
or
clc
inc
add
sub
add
inc
clc
dec
xchg
dec
mov
clc
push
fsubs
add
add
clc
push
das
or
sub
pushf
nop
sub
clc
mov
push
clc
mov
push
in
cli
mov
add
test
sub
adc
pop
pop
xor
add
add
loop
add
push
sbb
sub
cmp
mov
cld
jmp
sub
push
xor
add
add
insb
je
loop,pt
xor
add
lods
loopne
hlt
inc
add
cmc
pop
sarb
js
add
std
cli
ds
inc
add
or
cmp
sub
add
xor
add
clc
xlat
or
xchg
jne
clc
xor
add
out
popf
adc
add
mov
sub
add
mov
jle
or
add
mov
clc
mov
imul
clc
inc
clc
dec
mov
lea
cld
jmp
sub
sbbb
clc
mov
add
add
clc
mov
add
movsl
clc
adc
add
fs
jns
clc
push
out
jl
mov
add
push
cmp
add
test
pop
clc
or
mov
add
mov
xor
add
clc
sub
add
add
stos
cmp
cmp
clc
pop
dec
mov
add
pop
clc
push
out
cmp
add
ja
clc
shl
cmp
rorb
ss
push
inc
push
add
xor
and
xchg
push
cmp
fs
shrb
test
scas
jne
add
clc
mov
hlt
pop
dec
xchg
xabort
or
mov
jmp
jg
add
cld
jmp
scas
mov
add
daa
clc
jle
mov
lahf
cmp
and
add
add
xchg
lret
aaa
or
imul
clc
sbb
add
mov
clc
add
lods
iret
xor
icebp
add
add
fdivs
clc
decl
movsb
dec
add
cwtl
and
xchg
frstor
add
add
adc
add
pop
cmp
add
add
bound
add
clc
mov
clc
fmul
add
add
clc
add
add
push
add
jge
adc
add
push
nop
mov
repnz
jle
adc
add
cmp
add
mov
shl
or
sarl
xor
add
add
mov
add
add
ljmp
cmp
clc
insl
stos
lret
clc
add
add
push
ss
ret
cmp
add
push
add
and
add
add
push
mov
jae
add
mov
clc
and
add
add
add
mov
push
add
outsl
gs
or
arpl
add
mov
stc
lret
ds
xor
add
repz
cmp
add
jl
dec
fs
add
add
add
pop
inc
clc
jecxz
sbb
add
clc
js
push
add
out
pusha
add
add
add
xchg
shrl
add
ret
clc
pop
clc
sar
mov
mov
add
cmp
clc
xor
add
push
imul
imul
and
add
sbb
clc
add
fistpll
or
pusha
add
push
add
mov
clc
sar
push
add
inc
clc
bnd
add
clc
dec
dec
mov
adc
inc
clc
and
add
clc
mov
push
inc
add
insb
je
sub
add
add
jecxz
ss
pop
sub
repz
dec
cld
jmp
sub
sub
mov
scas
jae
add
mov
add
clc
cmp
mov
add
rorb
pushf
sbb
add
add
int
xabort
push
movsb
clc
js
pop
jge
xchg
cld
jmp
push
test
clc
sbb
loopne
outsl
add
shrb
add
add
ret
clc
dec
addr16
jg
mov
sbb
fisubrs
adc
add
cmc
push
in
ljmp
scas
lods
xchg
loop
fcoml
add
pop
jmp
ret
clc
sub
stos
sub
add
xchg
push
test
test
nop
xor
add
clc
fnsave
add
jnp
add
sub
clc
and
add
into
sub
add
add
inc
clc
movsl
clc
ret
add
mov
xor
add
add
add
clc
sti
jg
test
cld
jmp
aas
sub
data16
in
jecxz
in
mov
pop
and
add
sbb
add
pop
aaa
mov
clc
dec
aam
xabort
clc
push
dec
int
clc
xchg
pop
sbb
test
pushl
outsl
mov
ret
clc
lods
rep
jp
add
pop
jno
add
add
add
add
add
add
add
clc
dec
cmp
shll
pop
loope
cmp
or
adc
add
push
data16
loopne
lcall
add
xchg
icebp
stos
ret
enter
mov
aas
neg
mov
add
add
mov
add
outsl
imul
xchg
xchg
and
push
ficompl
cmp
add
or
clc
out
test
out
mov
aaa
outsb
sahf
push
and
add
add
fwait
mov
mov
jae
add
cmp
jmp
sub
mov
xabort
cmp
lret
push
and
add
cmp
adc
add
jle
clc
pop
clc
repnz
mov
add
or
add
clc
mov
clc
push
or
mov
test
ss
push
adc
add
clc
push
inc
cld
jmp
dec
push
add
inc
add
jge
fs
mov
add
aam
cmp
adc
add
clc
push
push
ss
ret
push
test
cmp
sbb
movsb
cld
jmp
add
dec
inc
clc
jns
add
in
and
data16
out
pop
test
and
add
add
gs
ret
xchg
clc
hlt
dec
movsl
clc
arpl
add
cmp
jl
lret
cmp
sti
pop
insb
test
add
add
add
add
xor
add
dec
jb
add
inc
add
inc
clc
push
fcomps
jle
add
mov
push
add
xor
inc
clc
mov
cmp
clc
dec
jns
iret
mov
lret
clc
inc
add
pop
pop
call
jnp
add
clc
sub
data16
lret
dec
fdivl
out
sbb
sub
dec
sbb
add
sub
add
mov
push
rorl
add
cmp
clc
and
ret
clc
or
add
cmp
add
lret
add
aad
mov
iret
mov
stos
pop
out
mov
clc
insl
sahf
sar
fcmovu
add
sub
out
movsl
clc
xor
add
fsubrl
shrl
repnz
inc
add
test
mov
jmp
lods
outsl
sub
repnz
and
add
or
clc
loopne
mov
push
inc
addl
jg
insb
stc
jmp
add
cmp
call
cmpsl
clc
imul
add
insl
jmp
mov
bswap
mov
and
add
add
addr16
jecxz
test
test
out
clc
fisubl
add
xor
add
jbe
sbb
loop
add
adc
add
jnp
repnz
push
jmp
imul
lret
pushf
mov
fnstenv
sbb
sar
call
push
test
add
scas
ret
clc
adc
add
clc
mov
icebp
xor
add
clc
mov
clc
ds
cmp
outsb
bound
add
jnp
clc
aaa
jg
movsb
clc
sar
add
cld
jmp
sub
xchg
jle
clc
call
push
lea
ss
ret
insb
dec
lods
bound
add
add
lea
lcall
leave
lods
movsl
clc
cli
sti
push
add
and
add
add
and
add
xor
add
add
test
pusha
add
mov
repnz
mov
out
es
or
cmp
jg
cli
jp
xor
add
xchg
and
add
mov
mov
std
das
cmp
ficoml
add
fs
sub
clc
or
dec
sar
scas
aaa
ja
dec
popf
pop
fistpll
jmp
push
dec
or
sub
add
add
add
add
aaa
jp
push
mov
jmp
pushf
mov
iret
sub
dec
fstpl
lods
int
std
cltd
and
add
fstl
xor
add
movsb
clc
push
add
add
jnp
mov
add
bound
add
inc
clc
pop
inc
add
adc
add
mov
das
add
cmp
cmp
clc
divl
add
mov
add
jo
hlt
hlt
add
add
clc
adc
add
clc
cmpsl
clc
nop
adc
test
in
adc
add
stc
mov
clc
cmp
jno
add
scas
adc
or
dec
mov
add
add
daa
clc
knotw
outsb
adc
add
jmp
add
es
dec
push
leave
sbb
add
inc
add
loopne
and
add
iret
xchg
xchg
in
imul
add
ss
adc
add
stos
jnp
push
add
inc
clc
jbe
inc
add
bound
add
clc
ffreep
clc
mov
sbb
rorl
dec
push
ret
cld
jmp
pop
ja
fwait
xchg
bound
add
add
sbb
in
add
add
jo
add
add
xor
xor
add
pop
addr16
mov
adc
iret
sar
clc
xor
add
xor
cld
jmp
dec
and
das
and
mov
add
mov
pop
add
movsb
clc
lods
xlat
push
clc
pop
sbb
fsubrl
clc
xchg
sahf
xlat
out
leave
jns
lock
add
out
lea
shll
mov
mov
push
cld
jmp
je
xchg
lret
clc
sar
add
inc
clc
pop
fdivr
or
dec
jae
add
clc
sarb
adc
scas
mov
fidivrs
leave
add
add
add
dec
and
add
clc
je
enter
ret
dec
mov
xchg
xchg
aas
cmp
loop
lret
or
test
arpl
add
clc
fmuls
arpl
add
add
cld
jmp
subb
loopne
inc
add
divb
bound
add
dec
or
push
cmp
add
scas
lea
jb
add
clc
cmp
sbb
test
clc
mov
sbb
mov
data16
jnp
nop
mov
xchg
in
divb
add
call
clc
pushl
cld
jmp
sub
mov
sbb
ss
cld
jmp
imul
add
clc
mov
cmp
clc
sbb
add
dec
cmp
movsb
clc
mov
imul
stos
sbb
inc
add
cmp
adc
add
or
cmpsb
clc
out
and
arpl
add
sub
pusha
add
fwait
push
add
loope
sub
add
mov
clc
sti
sti
adc
add
sbb
clc
frstpm(287
clc
sub
adc
add
ret
clc
xchg
sub
clc
mov
dec
shlb
add
clc
jns
aas
inc
add
mov
add
sbb
int
clc
fidivrs
dec
ret
clc
popa
add
pop
push
mov
clc
fld
clc
and
add
fs
insb
pop
xor
add
mov
clc
push
mov
clc
mov
push
ret
pop
sub
add
add
clc
mov
push
pop
stos
jb
add
dec
dec
sbb
pop
lods
mov
outsl
mov
stc
and
add
dec
mov
clc
dec
stc
xor
add
xchg
lock
cmpsl
clc
adc
add
jmp
xchg
xor
ja
or
leave
mov
outsb
xchg
cmp
sbb
mov
fs
xor
add
xchg
jmp
in
and
add
push
push
clc
mov
bound
add
jo
add
clc
std
pushf
mov
clc
push
xbegin
fstpt
in
sbb
push
clc
stc
loopne
aad
stos
dec
pop
clc
jnp
call
cld
jmp
adc
and
add
jbe
add
sarb
add
rdpmc
add
mov
daa
clc
pop
mov
sar
ret
clc
fcmovnbe
fisubrl
add
in
inc
clc
ljmp
ret
cld
jmp
scas
sbb
xchg
pop
rorl
mov
mov
xor
xchg
inc
clc
cltd
rorb
dec
dec
dec
pop
sub
add
jb
add
add
add
add
xor
add
clc
pushf
cmpsb
clc
push
add
xabort
insl
dec
scas
xor
add
xchg
cmp
dec
dec
inc
add
clc
cs
clc
lcall
add
in
cmp
mov
clc
xor
add
add
jmp
xor
clc
xlat
and
add
call
punpckhbw
jmp
sub
clc
icebp
or
push
sbb
push
pop
cwtl
out
and
add
add
aas
mov
inc
add
jle
or
add
add
clc
in
mov
fstps
inc
clc
sbb
add
das
cwtl
pop
jl
clc
xchg
popa
add
mov
daa
clc
inc
add
inc
add
fdivr
decl
cld
jmp
or
lods
jbe
mov
xbegin
clc
mov
lret
lret
incl
clc
int
clc
jg
outsb
in
xbegin
fidivs
add
push
stos
ljmp
jl
dec
mov
pop
jae
jmp
and
inc
add
out
mov
add
fcomi
inc
clc
incl
repz
jmp
sbb
into
in
mov
add
clc
and
jnp
xchg
push
and
clc
push
add
or
lods
std
notb
ds
cmp
add
add
vmovlps
add
pop
das
cmp
mov
mov
clc
fbld
ljmp
lock
add
xabort
adc
add
clc
pop
mov
clc
inc
clc
add
add
inc
and
cld
jmp
add
ror
jg
xor
add
mov
es
int
push
jmp
sub
cmp
clc
test
clc
mov
xchg
lcall
add
add
add
sub
add
add
clc
adc
add
pop
popf
push
dec
xchg
cmpsb
clc
in
adc
add
clc
arpl
add
add
jno
add
cld
jmp
sub
fs
xchg
cmp
mov
cld
jmp
pop
and
dec
scas
sar
aam
cmc
pop
daa
clc
pop
pushf
in
adc
add
je
xor
add
add
add
cld
jmp
cmp
add
cmpsb
clc
in
pushf
scas
and
add
add
cld
jmp
sub
xor
aad
sbb
add
cmpsl
clc
sub
clc
loope
stos
inc
clc
outsl
cwtl
in
and
add
add
add
fsubr
xor
clc
and
sti
rcrl
dec
add
add
clc
mov
cmp
add
add
mov
cmp
dec
test
pop
iret
sar
mov
cld
jmp
dec
lods
or
cmp
jns
pop
lods
sahf
add
add
pop
pusha
add
mov
fdivs
add
mov
clc
dec
clc
or
pop
xchg
push
push
add
push
add
push
data16
and
add
xchg
cmp
dec
adc
jmp
cmp
jecxz
aaa
out
xlat
loopne
and
sar
mov
pop
and
add
add
jmp
nop
je
int3
ffree
clc
loop
mov
ss
jmp
sub
push
push
xor
add
cmp
push
mov
xor
add
adc
add
clc
lahf
sub
mov
pushf
int
test
sub
out
inc
add
addr16
mov
arpl
add
mov
ljmp
clc
and
add
outsb
aaa
inc
add
jmp
lret
clc
cmp
and
loop,pn
pop
incl
xchg
xor
add
repz
add
incb
dec
inc
add
jge
pop
lods
dec
and
add
sahf
data16
in
hlt
jge
add
add
cli
cmp
clc
loop
enter
adc
clc
push
negb
push
idiv
daa
clc
movsb
clc
in
adc
add
xor
mov
in
std
test
mov
cmp
push
add
repnz
mov
mov
jne
sub
fsub
clc
inc
clc
stc
fldcw
mov
jmp
or
sahf
ficoml
add
xor
add
add
push
cld
jmp
sub
push
mov
arpl
add
dec
jnp
ret
clc
mov
sub
addr16
pop
jo
add
clc
cld
xlat
add
test
iret
add
add
add
clc
in
pop
clc
dec
cltd
sbb
lock
clc
dec
sub
pusha
add
mov
or
add
and
add
jmp
lock
gs
inc
clc
or
popf
test
jae
add
pop
sub
ja
clc
test
hlt
std
popf
ret
pop
xor
add
push
cld
jmp
mov
mov
cmc
mov
jb
inc
add
sub
inc
add
add
add
stc
daa
clc
sbb
std
dec
movsl
clc
das
ret
clc
scas
xchg
push
lcall
in
mov
ss
in
or
add
fsubl
add
sbb
loope
or
jnp
clc
sub
mov
mov
sbb
add
sbb
sahf
imul
add
dec
rcl
inc
add
mov
or
addb
jge
xor
addr16
cs
or
add
push
clc
in
in
pop
insl
adc
add
add
clc
sub
clc
hlt
test
add
xchg
add
add
inc
add
mov
sarb
pusha
add
sub
add
adc
add
insl
sahf
and
add
pop
clc
inc
add
push
add
in
imul
add
add
sbb
jmp
add
nop
gs
jo
add
xchg
add
add
push
add
add
or
push
popl
add
clc
cmp
stc
xchg
aas
or
gs
testb
daa
clc
and
add
or
clc
jbe
int
clc
movsb
clc
hlt
or
clc
and
add
clc
and
add
mov
cld
jmp
or
inc
clc
push
add
out
sub
inc
clc
push
fildl
add
jle
add
in
cmp
add
add
add
pop
insb
inc
add
out
daa
clc
js
pop
in
adc
add
and
or
add
data16
mov
xchg
xchg
add
add
loop
aam
fcomip
shlb
add
clc
stc
xor
mov
sti
nop
cmp
cmp
adc
add
clc
cmp
seta
add
das
cmpsb
clc
jns
lret
lock
mov
or
cld
fsubl
in
pop
clc
in
sbb
cmp
test
scas
pop
and
and
add
clc
jmp
ds
in
adc
add
mov
mov
iret
mov
inc
add
mull
clc
sbb
clc
imul
clc
mov
clc
icebp
flds
xchg
jge,pt
clc
cltd
cmp
clc
adc
add
sahf
jae
add
mov
add
xor
add
add
add
loopne
xlat
ljmp
clc
inc
clc
pop
call
sahf
sub
add
clc
das
dec
cmp
add
xchg
fisttps
lock
add
pusha
add
stos
pop
nop
pop
loop
es
lods
mov
jmp
clc
pop
clc
push
jne
cld
jmp
mov
jg
add
js
push
add
shll
add
clc
bound
add
add
rclb
xor
add
mov
shll
arpl
add
clc
in
and
add
add
test
enter
clc
mov
cmp
fistps
imull
dec
cmp
jmp
push
add
data16
dec
jge
add
add
or
clc
adc
add
lcall
lods
das
sbb
clc
xbegin
xchg
leave
daa
clc
fs
and
add
clc
outsb
insb
lret
clc
xor
add
insb
iret
sahf
fdivl
add
fwait
xchg
cli
dec
loope
mov
add
pop
clc
inc
clc
sub
shlb
add
lock
add
sub
mov
add
lock
sar
and
add
mov
sub
data16
imul
jns
icebp
mov
clc
insl
mov
call
data16
mov
loop
and
add
add
scas
inc
add
movsb
clc
mov
out
push
clc
imul
xchg
pop
lods
lods
and
add
add
ficoms
lods
dec
mov
cmp
clc
inc
clc
mov
incl
repz
jmp
pop
jno
xor
pop
xor
add
add
in
loop
mov
cmp
movzwl
cld
jmp
lods
sub
cmp
mov
xchg
push
add
jo
add
sub
in
fistps
mov
daa
clc
pop
addr16
pop
sub
add
sbb
ret
sldt
cld
jmp
aas
xchg
mov
add
shl
clc
cmpsb
clc
push
add
inc
add
out
ja
cmp
iret
clc
lret
cltd
add
addr16
scas
dec
insl
insb
push
add
mov
lock
add
ficoml
add
xor
add
mov
shrb
jg
add
mov
fdivl
and
add
clc
xchg
adc
pop
loope
int
add
add
xor
cld
jmp
sub
clc
fistpll
pusha
sar
jmp
clc
pop
ljmp
loopne
call
add
clc
sub
push
add
dec
adc
add
mov
lret
in
mov
jbe
add
repz
clc
loop
inc
clc
or
fstps
stc
push
bound
add
jmp
add
cld
jmp
add
mov
add
mov
xchg
lret
push
add
out
fsubl
sub
clc
ss
ret
xchg
imul
loope
pop
push
or
add
jge
push
and
add
lock
add
lret
clc
and
add
stos
mov
das
mov
add
jno
add
add
add
icebp
cmp
enter
clc
add
add
sub
xchg
in
dec
popf
ja
add
jmp
dec
lcall
jne
cld
jmp
cwtl
insb
andb
add
add
cltd
xchg
xlat
fisttpl
jmp
mov
stc
movsb
clc
sub
mov
add
clc
inc
clc
xor
add
clc
imul
sub
clc
adc
add
xchg
mov
sbb
aaa
or
mov
add
jecxz
out
jmp
imul
into
bound
add
bound
add
clc
bound
add
clc
clc
fdivl
icebp
fdivl
jmp
sub
add
mov
pop
mov
mov
icebp
cwtl
xchg
neg
aam
clc
push
push
cld
jmp
push
xor
inc
sbb
stos
mov
dec
mov
add
fcoms
add
add
push
push
mov
outsl
std
cmp
clc
xchg
sub
add
add
add
or
mov
gs
jo
add
add
pop
mov
jecxz
out
inc
add
xbegin
adc
dec
mov
shll
lahf
push
movsl
clc
jl
xor
clc
jb
add
add
or
xchg
sar
xchg
shlb
add
jmp
cld
jmp
inc
add
clc
sub
clc
insb
and
add
add
add
pop
shl
clc
pushf
mov
test
mov
jnp
ss
mov
mov
add
add
mov
xbegin
fld
clc
cmp
add
add
add
add
clc
push
add
stc
dec
lods
inc
clc
pop
clc
jbe
add
xchg
fcmovne
push
add
test
repz
push
cld
jmp
sub
cmp
add
mov
ret
clc
mov
std
sbb
jp
cwtl
push
in
test
imul
add
add
add
clc
cmpsb
clc
cmp
addr16
aas
iret
stc
clc
cmp
add
gs
xabort
add
mov
jecxz
jns
mov
clc
sub
add
fmull
cmp
add
pop
gs
cltd
xchg
xlat
or
arpl
add
stc
das
mov
std
aam
es
push
inc
clc
insb
mov
mov
clc
aad
in
cmpsb
clc
fucomi
jge
lret
mov
add
sbb
clc
jmp
mov
clc
cmc
cwtl
mov
repz
add
cmp
mov
mov
mov
push
ret
mov
clc
mov
clc
ret
clc
add
xchg
jecxz
fisttps
clc
idivl
xor
add
add
xlat
cmp
xchg
ret
clc
fsubrs
leave
sub
jmp
adc
jb
add
and
add
mov
push
add
jge
sub
rcl
push
sbb
cmp
lret
pop
clc
clc
nop
sub
add
push
mov
clc
sub
clc
cmp
add
loopne
pushf
test
clc
lcall
add
add
cld
jmp
test
bound
add
inc
add
mov
add
add
add
add
inc
add
cmp
add
leave
imul
xchg
data16
xchg
lcall
jmp
aas
cwtl
das
push
sbb
add
dec
sub
mov
cmp
ss
ret
and
push
jne
cld
jmp
xabort
clc
push
ret
clc
scas
pushf
repz
add
or
outsl
add
loop
sub
or
pop
rolb
sub
pusha
add
pop
cmp
repz
sbb
jmp
cwtl
sub
xchg
dec
fdivrl
popf
idiv
cmp
sar
pop
js
push
icebp
jno
add
cwtl
pop
jno
add
add
add
dec
push
push
je
cld
jmp
pop
sbb
add
in
mov
jno
add
dec
lret
test
clc
push
mov
cld
jmp
jno
add
jno
add
add
cmpsl
clc
and
test
pop
outsb
shl
cmp
add
mov
mov
clc
mov
clc
jb
add
clc
repz
adc
add
loop
imul
scas
xor
add
and
add
add
dec
mov
add
cltd
pop
jp
push
add
aaa
cmpsb
clc
loopne
xor
add
add
dec
stos
jecxz
cs
lcall
pushf
jo
add
add
ds
mov
add
push
xchg
inc
add
outsl
dec
aaa
aaa
fwait
inc
clc
ficoml
add
cmp
xor
clc
add
add
inc
clc
inc
add
bnd
mov
add
lcall
clc
fdivrs
and
add
clc
fstps
cmp
xchg
sbb
iret
mov
sub
add
cli
mul
clc
inc
clc
sub
cmp
clc
mov
rolb
add
add
add
sbb
add
inc
add
jmp
and
nop
fnstenv
loop
inc
clc
inc
add
cmp
add
cmp
xchg
jl
clc
repz
clc
jb
add
jle
insl
adc
add
inc
add
push
fstps
mov
add
dec
or
or
testb
add
mov
jge
mov
add
add
clc
sbb
dec
sub
xor
add
push
ret
cmp
cs
imul
je
clc
ljmp
dec
js
xchg
mov
clc
mov
or
clc
ja
out
aam
inc
add
sbb
adc
add
add
add
into
cmp
add
push
jmp
push
jno
aaa
sar
and
add
xchg
loop
pop
addr16
push
clc
enter
add
nop
adc
add
popa
add
lock
adc
add
data16
mov
clc
popf
dec
mov
add
jl
push
xor
clc
pusha
add
ss
add
js
mov
jle
and
mov
add
add
add
push
cmp
lods
or
clc
cmp
es
daa
clc
xlat
push
adc
ror
pop
mov
dec
adc
add
cmp
mov
ret
clc
mov
add
jmp
or
mov
push
inc
add
es
or
add
std
adc
add
inc
add
cmp
sub
lret
clc
cmp
in
lcall
mov
in
insl
cltd
mov
mov
add
add
pop
lret
repnz
or
clc
insl
xchg
and
add
xor
add
pop
mov
add
pop
mov
clc
pop
or
movsb
clc
stc
mov
cld
jmp
xchg
cmp
push
jp
jb
add
cmp
nop
mov
clc
jecxz
pop
clc
xchg
mov
add
mov
mov
clc
lcall
jo
add
loop
mov
clc
in
sub
clc
jle
adc
add
jge
rcll
add
daa
clc
dec
and
das
push
add
sar
add
movsl
clc
loopne
mov
test
rol
clc
addr16
mov
mov
add
or
add
sar
call
aaa
gs
mov
das
mov
pusha
add
mov
insb
and
adc
add
push
add
sbb
in
cmpsb
clc
sbb
add
jmp
clc
cwtl
pop
test
add
mov
loope
sub
add
add
clc
inc
add
es
clc
inc
clc
icebp
sbb
scas
xor
add
add
mulb
add
test
clc
ficompl
ljmp
cld
jmp
data16
testl
or
clc
or
hlt
pop
dec
mov
lret
int
test
popa
add
out
pop
xor
add
imul
add
pop
lods
or
sbb
in
push
popa
add
rcrl
add
push
and
add
clc
sbb
add
pop
mov
iret
dec
xchg
add
mov
clc
push
add
loop
test
repz
or
pop
add
add
clc
ss
shrb
mov
and
add
clc
nop
cmp
addr16
push
into
dec
movsl
clc
aaa
inc
clc
gs
jno
add
ffree
clc
pop
aaa
cmpsl
clc
mov
pop
inc
clc
fidivrl
lahf
mov
out
aaa
aaa
cmp
add
add
in
insl
pop
pop
or
mov
adc
add
hlt
pop
lcall
das
mov
mov
jg
fdivrl
sbb
sarb
mov
incb
add
mov
jns
cmp
nop
arpl
add
jmp
cld
jmp
or
xchg
call
ret
movsb
clc
sbb
fistpll
cmp
xchg
jp
clc
xchg
fldl2t
sub
jbe
clc
jo
add
cmp
pop
cmovp
movsb
clc
add
add
jb
add
mov
cmp
cmc
xor
add
xchg
push
pop
lods
nop
xchg
sbb
add
movsl
clc
dec
nop
test
push
add
add
iret
jne
add
xor
lea
push
add
or
in
mov
jmp
sub
add
inc
add
pop
lahf
stos
push
add
inc
clc
inc
add
in
and
add
mov
cmp
mov
insb
shl
decl
test
into
cld
jmp
scas
sbb
clc
lret
out
fucomp
insl
jl
xor
push
sub
add
xchg
sbb
jmp
push
xchg
lea
data16
xor
add
add
add
aaa
fwait
outsl
xor
add
and
add
add
sub
clc
cmpsl
clc
popf
adc
add
xor
add
sti
sub
stc
jmp
jo
add
clc
enter
inc
cld
jmp
or
sub
and
add
add
add
mov
cmp
add
cltd
shl
clc
std
xbegin
imul
lea
add
clc
push
clc
inc
add
sub
xchg
pop
or
clc
arpl
add
add
inc
add
cmp
add
sti
add
add
clc
dec
pop
stc
push
xchg
sbb
jp
clc
movsl
clc
cmp
clc
js
cmp
xchg
jp
sub
pop
mov
or
add
add
sub
mov
mov
mov
fdivrl
mov
add
test
test
add
clc
mov
clc
jle
clc
jnp
clc
int
jl
pop
scas
mul
clc
inc
add
mov
clc
xor
in
adc
add
fs
mov
clc
dec
fists
xor
cld
jmp
sub
sub
icebp
sbb
rcr
pop
out
push
ss
data16
inc
add
cmc
lret
jl
xor
add
clc
out
inc
clc
aad
clc
and
add
lea
clc
iret
lcall
fisubrl
jp
add
data16
sbb
push
add
xchg
mov
push
clc
call
xchg
and
add
ljmp
add
cmp
minps
int
out
mov
popf
leave
adc
add
in
arpl
add
std
jg
dec
ret
clc
sub
clc
cmp
add
sbb
clc
jo
add
cmp
cmp
int3
cmp
cmp
cmp
fwait
xchg
hlt
or
jns
add
mov
add
clc
std
push
testb
add
ss
dec
ds
nop
push
in
fcmovb
clc
rcrl
sub
add
sbb
aad
clc
jns,pn
dec
jnp
cltd
mov
mov
stc
sub
punpckhbw
out
add
push
xor
push
dec
fadd
clc
movsb
clc
adc
mov
clc
test
cltd
sbb
nop
jno
add
clc
insb
and
add
je
xor
cld
jmp
sub
jns
mov
cmp
mov
jb
add
in
or
add
dec
pushf
mov
push
add
ret
clc
jge
clc
cli
fldenv
add
hlt
jle
jne
add
mov
pop
and
add
repz
add
stc
cmp
clc
pop
dec
sahf
inc
add
scas
jo
add
add
pop
mov
cmp
clc
push
loope
jl
add
add
clc
lcall
test
add
popa
push
je
jge
vminps
mul
clc
out
sub
clc
dec
ret
loope
jne
clc
mov
clc
pop
es
lock
add
test
adc
add
cld
scas
scas
and
cmp
fdivs
and
add
test
add
in
cmp
jno
add
pop
cs
in
loopne
out
sar
inc
clc
fbstp
add
add
xchg
mov
xchg
hlt
pop
inc
add
scas
sbb
movsb
cld
jmp
push
lea
aas
pop
int
clc
aas
add
add
clc
cmp
pusha
add
repz
jnp
or
inc
cld
jmp
outsl
or
mov
mov
clc
push
push
add
notl
sbb
shlb
add
dec
adc
add
add
add
ljmp
add
hlt
stos
repz
ds
add
inc
add
xlat
lahf
loop
cld
and
add
test
and
add
clc
repz
jmp
out
fsts
add
or
add
in
dec
imul
ss
ret
sub
push
add
jmp
aaa
xbegin
sar
pop
sbb
pop
cld
jmp
lods
sub
sub
inc
clc
lcall
cld
jmp
test
add
add
fldcw
test
cmp
add
add
clc
cli
and
pop
fs
fsubs
clc
leave
push
repz
add
mov
clc
mov
cld
jmp
popa
add
pop
sar
in
sbb
addr16
mov
add
add
push
clc
add
xor
add
adc
add
fdivrs
ja
cmp
sti
test
push
imul
clc
notl
sar
sub
outsl
xor
add
xchg
inc
add
jnp
popf
cmp
popa
add
sarl
clc
xor
nop
pusha
add
cmpsb
clc
cmp
sti
lret
scas
dec
out
lock
add
jbe
clc
push
ficoms
cmp
stos
repnz
ret
adc
add
fs
xlat
in
insl
mov
jg
cmp
mov
idivb
pmaddwd
incl
js
sahf
scas
mov
mov
repnz
pop
pop
jmp
cmp
add
test
hlt
mov
pushf
mov
adc
jmp
das
sub
inc
clc
or
cmpsb
clc
movhps
add
add
inc
clc
leave
fs
mov
add
sbb
imul
pop
ret
clc
popl
mov
ja
rcrl
clc
mov
add
xor
add
xchg
cwtl
data16
mov
sbb
jb
add
add
mov
into
data16
mov
fcoml
pop
clc
mov
jne
cld
jmp
add
add
fcompl
xchg
clc
outsl
add
or
clc
inc
add
jle
fs
add
add
clc
in
sbb
clc
cmc
sub
aas
in
cli
cmp
add
aad
dec
pop
and
add
pushf
nop
adc
add
jnp
clc
filds
mov
clc
test
pop
pop
dec
mov
or
clc
mov
cmc
inc
add
xor
mov
cld
and
add
clc
mov
dec
pop
loope
dec
mov
cmpl
cld
jmp
sub
rolb
add
mov
clc
mov
add
dec
in
stos
cmp
xor
clc
ds
sub
enter
jp
sar
mov
xbegin
xor
add
movsl
clc
cld
jb
add
add
and
add
clc
cld
cmp
inc
clc
add
add
dec
nop
mov
pushf
pop
or
add
add
es
mov
std
out
cmc
sbb
int
clc
sahf
or
add
add
jl
out
je
mov
jne
add
xchg
adc
add
add
jmp
sbb
popa
aas
sub
clc
cmp
add
clc
aam
clc
test
mov
clc
mov
sahf
sub
push
add
cmp
popf
mull
clc
push
clc
repnz
fistps
fstl
sar
add
cwtl
and
add
lahf
scas
sub
enter
mov
mov
add
cmp
es
mov
cmp
add
add
clc
mov
jnp
dec
mov
movsb
clc
shrl
cld
jmp
fwait
nop
sahf
sub
add
out
fistpl
clc
mov
setne
xchg
mov
dec
pop
pop
cmp
js
clc
enter
lods
in
lret
add
clc
sahf
out
adc
sbb
mov
fcmovb
clc
mov
clc
outsb
dec
pop
out
cmp
es
push
mov
xor
add
ret
clc
add
add
pop
push
les
add
xchg
fwait
popa
mov
in
dec
and
add
add
clc
or
hlt
xchg
fs
sar
cmp
clc
es
push
jmp
imul
jmp
cmp
aam
add
xor
push
mov
mov
add
cmp
mov
xor
add
add
es
push
scas
call
in
imul
sub
stc
pop
insb
hlt
pop
in
or
iret
sub
int3
sbb
outsl
xor
add
clc
lret
add
sub
jmp
pop
sub
imul
clc
adc
xchg
mov
jmp
sub
test
in
add
sbb
cli
mov
xabort
or
mov
sar
xbegin
popa
add
popf
push
movsb
clc
and
add
add
fadd
clc
and
add
push
add
ljmp
clc
repnz
add
fcomps
lea
jl
sub
add
cli
jb
add
jp
clc
xchg
push
add
cld
jmp
aaa
pop
test
xor
aad
jne
cmpsl
clc
scas
out
jp
xchg
push
add
popf
mov
add
cmpsb
mov
add
jmp
add
clc
mov
clc
push
add
mov
xlat
daa
clc
mov
int3
imul
std
rcrb
clc
cwtl
lret
xor
mov
xchg
jmp
or
sub
add
iret
add
insb
mov
shl
pushf
shll
jge
clc
push
adc
int3
cmp
inc
clc
sub
adc
add
clc
gs
pushf
jnp
fwait
push
push
cld
jmp
nop
mov
clc
in
ret
dec
lcall
repnz
ljmp
xor
add
add
clc
mov
enter
fidivrs
ja
test
add
pop
cmp
clc
ljmp
dec
xchg
test
push
dec
mov
pop
pop
adc
add
mov
add
lcall
xor
in
test
add
sub
clc
clc
mov
clc
adc
data16
xchg
loopne
dec
out
mov
push
dec
mov
mov
dec
mov
insl
out
fisttps
xor
add
test
xchg
ja
cmp
jp
add
add
pop
mov
add
cmp
adc
jl
jb
add
add
mov
clc
enter
fwait
sbb
mov
cld
jmp
das
and
sub
jmp
add
push
minps
cld
jmp
adc
sub
push
std
xchg
jno
add
add
mov
add
pop
insb
jge
int3
insl
mov
add
clc
sbb
popl
in
jmp
lea
xchg
aad
add
push
add
cmpsb
clc
sbb
add
lret
clc
out
jae
add
das
loope
jecxz
sbb
add
jge
out
xchg
lahf
lock
add
add
add
mov
jl
cld
jmp
dec
stos
xchg
pop
add
xbegin
cmp
das
xchg
outsb
mov
add
leave
into
pop
fildll
out
mov
cmp
int3
sub
call
add
add
or
clc
add
aad
clc
xor
mov
cld
jmp
sub
clc
stc
or
add
sbb
push
call
cld
jmp
sbb
mov
popl
cld
jmp
aas
lods
das
ret
clc
xor
add
int3
cmp
push
add
and
add
adc
add
clc
jge
cmp
or
clc
repnz
clc
jne
clc
out
fistl
sti
enter
hlt
out
lea
adc
add
cmp
into
inc
add
repz
arpl
add
adc
add
cltd
cli
inc
clc
mov
cld
jmp
cwtl
cwtl
js
call
cld
jmp
xorb
mov
imul
decl
test
cld
jmp
or
add
add
insl
ljmp
clc
and
add
inc
clc
sti
jl
cmpsb
clc
int
insl
inc
add
inc
clc
dec
pop
push
lods
aam
pop
jle
in
lock
clc
xor
add
add
mov
ss
ret
and
enter
add
cmp
mov
add
or
push
pop
lods
mov
cmp
add
push
jnp
add
in
push
jp
js
data16
jnp
mov
sub
data16
mov
add
add
std
inc
add
in
xor
add
add
lret
add
sbb
repz
sar
lods
mov
add
mov
clc
push
imul
jne
cmp
sub
add
sub
clc
repz
clc
jp
js
scas
cmp
add
ficomps
mov
inc
clc
imul
mov
mov
bound
add
sbb
lret
add
clc
cmp
add
pop
insb
out
dec
mov
or
add
aas
test
clc
aas
dec
stos
ret
clc
arpl
add
mov
push
xor
xor
or
out
lcall
es
pop
xbegin
es
mov
add
xor
movsl
clc
cmp
xbegin
inc
add
pop
leave
jns
clc
popa
add
jg
aad
adc
add
push
je
cld
jmp
pop
imul
lahf
pop
inc
add
adc
add
mov
xchg
xbegin
push
mov
inc
clc
jnp
insb
lcall
clc
loopne
xor
aas
adc
add
call
aam
inc
add
icebp
loop
lahf
adc
add
aad
ret
clc
js
and
add
in
mov
rcrl
clc
inc
add
in
fistl
loope
clc
out
dec
mov
clc
outsb
cltd
dec
out
add
pushf
push
sahf
xor
add
jl
clc
cltd
in
inc
clc
loop
loope
cmp
add
out
or
add
push
and
into
pop
and
add
insb
outsb
mov
clc
lret
clc
stc
add
add
add
aad
and
lods
repnz
sahf
jno
add
lock
mov
lods
dec
sbb
popa
add
and
add
cmp
fcmovnbe
pop
jne
sbb
adc
add
sub
add
dec
mov
push
movsl
clc
cld
add
ljmp
push
aas
adc
add
sar
clc
pusha
add
or
or
shrl
insl
loope
or
cmpsb
clc
adc
add
add
mov
add
add
stos
pop
in
das
clc
aas
pop
clc
jecxz
push
add
add
add
add
clc
xchg
or
lea
cld
jmp
push
xchg
test
clc
and
add
add
cwtl
sbb
add
add
adc
mov
dec
add
cld
jmp
scas
inc
clc
sti
movsb
clc
in
push
add
enter
cli
and
int3
sbb
jbe
add
xabort
clc
sar
sub
jno
add
clc
xchg
cltd
dec
mov
inc
clc
fyl2xp1
sub
fwait
repz
neg
and
movsb
clc
scas
fisubl
add
movsb
clc
fst
pop
enter
cmc
hlt
mov
jmp
sahf
sub
jg
cld
pop
sbb
shlb
push
ret
imul
add
shlb
add
sub
pop
add
add
lret
repnz
clc
int3
rolb
out
rolb
mov
inc
add
push
mov
repz
leave
bound
add
sub
clc
mov
cmp
add
and
add
jno
add
ljmp
je
sbb
mov
in
xor
push
cld
jmp
sahf
and
pop
cmp
pop
cld
jmp
test
aaa
movsb
add
add
rep
push
add
fists
add
lret
jle
clc
push
imul
or
add
add
leave
sub
jno
add
sar
rclb
cmp
pop
adc
add
fcoml
add
mov
test
jnp
clc
add
add
sbb
push
jb
add
clc
movsb
clc
adc
xlat
cmpsb
clc
push
add
daa
clc
inc
add
fwait
sub
clc
xor
add
clc
jb
add
out
fsts
add
insl
int3
cltd
js
mov
clc
jmp
clc
cmpsl
clc
mov
xchg
or
daa
clc
sar
ljmp
aas
outsb
insl
mov
add
daa
clc
divl
add
cltd
sbb
cli
cmp
jp
clc
call
in
xor
add
int
fwait
psubsw
jo
add
and
cmpsb
clc
div
fisttps
addr16
jae
add
pop
pusha
add
shrl
pop
cwtl
pop
sbb
push
cld
jmp
push
test
add
add
cmp
clc
sbb
xor
add
clc
cmpsl
clc
in
inc
clc
scas
mov
loope
add
mov
fwait
clc
rorl
dec
pop
imul
add
movsb
clc
aaa
loop
test
in
sub
cld
jmp
adc
imul
cmp
xlat
std
and
add
mov
xchg
add
icebp
clts
clc
movsb
clc
jecxz
fdivs
clc
mov
leave
loopne
sbb
clc
clc
mov
int3
pop
dec
fistpl
jnp
add
cld
jmp
cmpsb
sub
cmpsb
clc
fildl
or
fmull
add
pop
flds
add
iret
inc
clc
mov
add
vrsqrtps
add
clc
mov
or
js
clc
cltd
dec
push
add
decl
test
add
cld
jmp
cmp
clc
xchg
add
add
add
dec
loopne
fucomip
bound
add
sarb
je
cs
enter
je
push
outsl
inc
clc
push
add
pop
xbegin
ljmp
clc
pop
test
mov
ss
clc
pop
inc
add
scas
imul
cmp
clc
stc
mov
clc
xor
add
pop
clc
mov
clc
fcomps
push
xchg
add
add
adc
clc
push
sbb
add
xor
add
add
clc
xchg
jnp
loope
lret
jg
clc
pop
push
sahf
jb
add
pop
clc
ss
clc
test
xor
add
add
push
test
clc
mov
sbb
cld
jmp
xor
sub
cmpsb
or
std
xor
add
imul
add
add
ffree
clc
pop
test
fcomps
mov
jp
jg
inc
add
ret
clc
sbb
mov
clc
stc
das
outsb
or
clc
bnd
clc
jle
mov
roll
add
int
cmp
push
in
jmp
or
mov
sub
jp
clc
inc
add
push
add
mov
clc
imul
outsl
mov
aad
clc
sbb
cmp
lret
add
fcompl
cld
jmp
and
cmp
add
and
jmp
sub
sub
movsl
clc
imul
lods
cld
mov
sub
lcall
incl
jne
cld
jmp
movsb
pop
clc
cli
sbb
incl
jne
cld
jmp
dec
je
inc
clc
pop
pop
push
movzwl
cld
jmp
das
fs
mov
clc
fstpt
imul
mov
jae
add
test
clc
push
add
inc
clc
mov
mov
mov
fstp
leave
fwait
in
mov
aaa
xlat
add
add
shl
pop
mov
push
cld
jmp
jge
bound
add
or
sar
clc
pop
insl
lock
add
cmp
clc
jle
clc
jb
add
cmp
xor
pop
cmp
jns
push
cld
jmp
lea
dec
xabort
add
gs
xor
push
sub
clc
in
ss
xchg
decl
jne
incl
dec
jnp
add
daa
clc
nop
push
jbe
clc
mov
and
add
in
jno
add
sahf
mov
pusha
add
mov
enter
cmp
clc
mov
push
dec
adc
add
adc
add
sub
out
fs
mov
clc
pop
pop
mov
add
mov
jmp
push
or
xor
clc
in
pop
mov
in
cmp
add
ds
rcrl
pop
stos
loop
xor
add
mov
and
jmp
je
add
mov
clc
jne
out
out
mov
xor
sbb
fnsave
xor
outsl
cmp
shr
push
xchg
dec
bound
add
int
clc
pop
fld
clc
sub
sbb
fldenv
js
or
pop
out
mov
jecxz
fs
jecxz
adc
add
sar
cmp
in
pop
adc
add
cmpsb
clc
sbb
clc
inc
clc
gs
inc
clc
dec
sbb
stos
mov
movsl
clc
notl
add
and
add
inc
add
or
mov
or
push
clc
roll
add
cmp
and
add
push
cmp
outsl
xchg
or
outsl
jle
stos
cwtl
cmpsl
clc
mov
sti
aaa
xchg
test
pusha
add
pop
dec
mov
or
insb
ja
decb
jb
add
clc
sti
sub
add
clc
pop
sbb
clc
clc
or
xor
add
inc
clc
xabort
dec
xchg
or
clc
gs
xor
add
add
lea
add
movsb
clc
fsubrs
add
xor
add
clc
hlt
jno
add
clc
nop
sbb
add
clc
push
hlt
dec
enter
stos
cld
jmp
dec
xor
sub
popf
sub
add
add
in
sti
xbegin
fsubl
jne
movsl
clc
fbstp
add
xchg
es
cmp
cmp
rcr
inc
clc
mov
add
mov
ret
cmp
inc
clc
xchg
lods
in
movsl
clc
vmwrite
clc
dec
cmp
add
and
inc
add
inc
clc
sti
test
clc
aaa
js
inc
clc
mov
or
clc
mov
cld
jmp
sub
xor
imul
add
inc
add
cmp
clc
test
pop
push
cli
jb
add
push
add
js
clc
jne
jbe
fcom
in
mov
jg
add
ret
clc
fwait
pop
push
clc
or
and
add
bnd
jmp
das
jg
inc
scas
aas
stos
cs
loop
or
test
push
add
pop
mov
ret
add
xchg
fnstenv
pop
cmp
clc
xor
add
or
mov
clc
mov
push
clc
xabort
add
mov
inc
clc
incl
stc
cld
jmp
xchg
add
and
add
mov
test
push
add
es
int
mov
mov
add
add
push
clc
loope
dec
ret
pop
push
add
or
add
jecxz
loope
test
add
add
push
add
popa
add
xlat
in
repnz
pop
mov
outsb
popf
push
jo
add
add
movsl
clc
ljmp
dec
mov
out
mov
data16
inc
clc
cmp
inc
add
popa
add
pop
shl
clc
or
add
sub
clc
mov
clc
out
repz
pop
and
xor
add
add
xchg
jb
add
pop
cld
or
add
and
add
outsb
sbb
in
mov
clc
call
dec
pop
adc
add
add
cmp
testb
clc
jne
push
daa
clc
lahf
cmp
je
jnp
add
dec
icebp
aad
add
xchg
data16
lods
insb
sbb
push
push
ret
insb
push
adc
add
push
pop
cmp
inc
clc
std
jo
add
cmp
sbb
shrl
xchg
cmp
ljmp
push
mov
mov
sbbl
leave
pop
pushf
dec
mov
aas
add
add
add
add
add
push
mov
clc
std
lahf
jo
add
pop
jecxz
sub
pop
pop
clc
mov
clc
mov
add
idiv
mov
xor
add
add
or
add
or
inc
add
fwait
movsb
jg
in
inc
add
pop
xbegin
add
add
mov
clc
adc
add
add
add
cmp
clc
mov
add
pusha
add
imul
rcrb
bound
add
daa
clc
sbb
add
loopne
cmp
add
into
int
lock
add
icebp
jmp
xor
add
aad
clc
imul
and
add
cltd
insb
and
iret
pop
gs
xabort
pop
push
or
dec
jge
jge
xchg
push
stos
cmp
add
mov
cmp
mov
ja
or
dec
int3
cld
clc
ret
clc
mov
clc
inc
clc
push
clc
and
add
add
lcall
fnstsw
or
mov
cld
jmp
fldcw
cld
jmp
and
test
push
sbb
nop
xor
add
clc
inc
clc
pop
or
bound
add
add
lret
js
adc
add
sub
ret
add
xbegin
mov
cmp
clc
out
mov
lret
sub
pusha
add
fs
loop
clc
in
lahf
in
cmpsl
clc
xabort
xor
add
add
xor
add
lock
mov
clc
dec
cs
ja
clc
jb
add
clc
sub
pop
mov
pop
clc
sahf
std
mov
clc
push
imul
scas
scas
add
sub
enter
clc
mov
es
stc
mov
sub
ficoml
add
divb
add
cmpsb
clc
or
test
cld
jmp
pop
out
inc
add
adc
add
add
hlt
sbb
jmp
mov
call
clc
ret
clc
mulb
push
sub
cld
jmp
data16
clc
imulb
iret
jp
add
sbb
sar
jg
call
push
sahf
pop
mov
in
lahf
mov
clc
scas
mov
sbb
jg
imul
jb
add
nop
push
jo
add
xor
aaa
sbb
mov
bound
add
mov
dec
repz
add
sub
push
jno
add
add
clc
addr16
dec
popa
add
sub
pop
lods
and
add
ja
add
imul
outsl
ffreep
clc
mov
clc
xchg
or
nop
and
add
std
sub
or
jp
movsb
clc
dec
movsl
clc
xor
add
or
arpl
add
clc
sbb
mov
je
sub
sub
xchg
stos
fcmovnu
mov
rcll
mov
dec
sub
pushf
push
cmp
add
inc
cmp
inc
clc
imul
repnz
add
inc
add
inc
add
pop
mov
clc
mov
hlt
mov
inc
clc
add
int
add
add
xor
add
mov
mov
clc
cmpsl
clc
arpl
add
cmp
shll
clc
jae
add
pusha
add
cmpsl
clc
cmp
addr16
vmread
jmp
jns
cli
aas
jle
mov
fisttpl
dec
outsl
popa
fs
jmp
fwait
or
inc
clc
xbegin
clc
cs
pop
pop
push
inc
clc
mov
lcall
pop
clc
lret
mov
cmpsl
clc
or
mov
mov
out
lock
xor
add
mov
add
cld
jmp
outsl
dec
popa
nop
ja
mov
test
decl
sub
xbegin
add
sar
fsub
clc
push
add
pop
fcmove
xchg
ja
cld
jecxz
addr16
pop
das
xor
add
jae
add
out
xchg
insl
clc
and
add
int
add
sbb
scas
add
add
add
test
pop
push
jle
xor
add
add
add
push
add
jmp
jge
clc
xor
add
add
add
pop
clc
dec
jo
add
ljmp
int3
cmp
add
push
push
jb
add
and
add
aas
rcrb
test
leave
std
outsl
ret
cmp
pop
imul
jmp
xor
xchg
das
or
add
mov
lcall
pop
add
add
add
xlat
jge
xchg
or
push
clc
cmp
jmp
fwait
pop
push
dec
lods
imul
clc
iret
es
lcall
add
enter
jg
add
add
xchg
dec
xchg
adc
add
cwtl
push
pop
jo
add
add
clc
xor
js
cs
clc
js
test
pop
imul
stc
dec
dec
jecxz
cmpsb
clc
loopne
xlat
lods
sub
aam
fstps
sub
and
xlat
pop
xchg
jle
pop
push
int
mov
xor
clc
outsb
mov
cli
lods
mov
mov
jmp
mov
enter
add
add
test
shrl
fs
shll
clc
pop
ja
inc
add
insb
add
outsb
push
cmp
cld
jmp
pushf
inc
clc
xchg
aas
mov
ss
clc
mov
cvtdq2ps
add
add
add
in
scas
adc
lods
pop
pop
scas
test
inc
add
leave
jae
add
jmp
add
or
clc
hlt
ja
ret
clc
incl
jne
cld
jmp
lea
clc
test
cmp
clc
mov
xor
sub
clc
mov
jmp
push
lods
cmp
movsb
clc
insb
sar
inc
add
adc
add
add
inc
clc
popa
add
pushf
add
add
repnz
lahf
stos
mov
add
sti
fs
enter
push
add
cmp
add
or
clc
or
add
and
add
add
mov
add
pop
sub
add
add
mov
mov
sbb
clc
repz
jl
ja
clc
push
add
xor
add
mov
fsubrl
add
pop
push
push
cld
jmp
sub
add
ds
cmp
sbb
icebp
cld
jmp
imul
add
add
movsl
clc
xchg
dec
xchg
add
add
add
clc
mov
add
cmp
pop
sub
jp
and
add
bound
add
mov
clc
pusha
add
shll
add
mov
clc
xchg
or
jle
clc
sbb
in
add
add
clc
leave
in
cltd
enter
add
dec
lret
ret
clc
inc
clc
mov
out
lret
fldt
clc
std
loopne
lret
lods
aas
mov
dec
xchg
fwait
inc
clc
push
cmp
add
pop
enter
add
imul
test
fs
daa
clc
test
cmp
cmpsl
clc
test
clc
xor
add
clc
mov
aam
in
xchg
cltd
testb
or
xchg
mov
clc
and
add
mov
add
add
mov
movsb
clc
ss
lods
in
sub
clc
lods
cli
push
das
decl
test
add
cld
jmp
and
add
add
scas
mov
clc
sbb
decl
and
call
ja
aam
clc
movsl
clc
pop
das
dec
and
add
aas
or
adc
add
add
imul
std
push
add
mov
and
ss
ret
outsl
add
add
clc
repz
dec
ret
clc
outsl
repnz
insl
ss
add
inc
add
ret
scas
xchg
sub
inc
clc
jg
into
cmp
clc
or
clc
mov
clc
cmp
clc
fdivrl
mov
clc
inc
add
stc
adc
add
add
and
add
inc
add
lcall
cmp
sbb
clc
cmp
add
add
mov
adc
jmp
sub
sub
sub
clc
loopne
ffree
clc
or
loopne
outsb
jle
rol
clc
js
mov
aas
loope
xor
add
je
clc
push
mov
sar
clc
pop
xchg
pop
in
push
add
in
jne
inc
add
xchg
test
int3
out
data16
xchg
push
enter
add
mov
pop
add
add
aaa
xchg
gs
daa
clc
and
add
dec
xor
into
sub
sub
clc
out
loopne
mov
stc
pusha
add
jmp
clc
cli
and
clc
out
push
sub
add
dec
and
add
fisubrs
sub
clc
mov
add
add
roll
add
aam
sbb
shl
call
gs
mov
clc
cld
mov
cmpsl
clc
adc
add
clc
push
cmp
idiv
data16
mov
inc
clc
sbb
sbb
jmp
je
dec
sub
mov
push
pusha
add
sbb
or
add
mov
cmp
pop
xchg
addr16
cmp
add
cltd
lret
inc
add
xchg
or
dec
inc
clc
push
add
sbb
cld
jmp
inc
dec
imul
sub
cmc
xchg
jecxz
jl
clc
cmp
add
mov
add
add
cmp
add
sub
xor
lcall
xabort
add
popa
add
loope
dec
into
lret
mov
out
out
jno
add
clc
aad
clc
push
add
cmp
cli
bound
add
add
roll
add
mov
and
add
jnp
lret
sub
repz
adc
clc
pop
clc
xor
add
xabort
mov
clc
movsb
clc
jne
fimull
add
pushf
mov
add
dec
cltd
popa
add
imul
clc
out
sti
push
adc
add
ficomps
popf
inc
clc
outsl
out
xor
add
push
add
jno
add
sar
cmp
add
inc
clc
idivl
clc
or
jne
and
add
cmp
push
adc
add
push
jmp
inc
add
dec
dec
sub
push
add
cld
jmp
cmp
aaa
pop
pop
mov
clc
clc
fs
add
add
cld
jmp
jge
adc
pop
dec
jg
repz
add
adc
clc
xor
add
jge
clc
lods
sar
add
ret
clc
sar
clc
xlat
cmpsl
clc
dec
xchg
or
jno
add
clc
fnstsw
or
add
xabort
adc
add
fwait
enter
push
add
cld
jmp
rorl
xlat
and
fidivl
add
add
xchg
sar
lea
cld
jmp
sub
lret
jle
icebp
mov
pop
in
insl
xchg
sub
mov
pop
cmpsl
clc
jns
clc
call
int3
popf
sub
xor
clc
cmp
notl
jns
clc
adc
add
cld
jmp
das
pop
dec
jno
in
mov
add
mov
add
inc
clc
in
adc
add
clc
loop
and
add
push
jne
clc
inc
clc
inc
clc
and
add
clc
jp
pop
daa
clc
and
add
fsts
add
sti
nop
pop
add
fwait
jno,pn
add
add
add
sub
clc
dec
fidivrs
add
jmp
nop
pop
sbb
add
sub
imul
int
imul
dec
pop
dec
pop
fadds
clc
stc
mov
add
add
outsb
push
or
pop
in
jmp
mov
add
aad
mov
clc
sub
clc
icebp
gs
add
add
sahf
in
mov
aaa
jno
add
ss
dec
mov
add
int3
inc
add
nop
ljmp
add
loopne
mov
clc
xor
sub
add
add
and
add
push
add
ret
clc
lret
mov
add
ja
mov
jg
inc
add
mov
lret
roll
add
sbb
shr
cld
jmp
jg
pop
mov
loop
sbb
in
call
inc
add
dec
popa
add
xlat
aad
sbb
loope
sti
mov
add
daa
clc
dec
out
push
out
inc
clc
adc
std
inc
add
pusha
add
jnp
push
add
jle
or
xlat
lods
jge
add
leave
out
add
pop
pop
popf
push
add
sbb
add
mov
mov
adc
add
pushf
stos
and
add
pop
mov
add
add
add
jmp
xor
mov
add
pop
adc
add
fcomip
mov
add
jmp
mov
in
jo
add
add
inc
clc
dec
sub
js
add
sar
gs
cwtl
test
in
sbb
jmp
inc
add
xchg
mov
repz
clc
aad
clc
xor
cmp
push
jbe
pop
push
out
push
add
sbb
pop
fisttpl
clc
lcall
clc
out
xchg
jmp
add
and
add
add
rcrb
test
cmp
sbb
add
inc
clc
xbegin
lahf
bound
add
lret
ja
pop
mov
loope
push
jg
clc
mov
clc
xor
add
push
mov
pop
sbb
add
xor
mov
jo
add
clc
faddl
add
sub
clc
jne
clc
or
clc
add
add
clc
push
sbb
cld
jmp
sbb
pushf
push
clc
jecxz
pop
clc
jne
dec
jnp
push
add
mov
jbe
shrl
mov
add
add
adc
das
mov
repz
and
add
movsb
clc
xor
add
add
push
xor
lcall
sub
clc
mov
clc
psubusb
add
add
int3
and
sub
add
test
aas
fwait
daa
clc
jecxz
scas
pop
rclb
loope
hlt
ja
jmp
clc
jl
add
jbe
adc
add
lahf
mov
add
lret
dec
push
roll
outsl
hlt
enter
clc
fcoml
add
pop
ret
clc
adc
add
mulb
add
jmp
jmp
pop
sub
scas
pop
inc
add
repz
mov
hlt
and
add
jle
popa
add
daa
clc
push
stc
sar
in
push
add
add
add
add
add
std
imul
add
clc
insl
cld
push
add
cld
jmp
test
sub
decl
mov
aaa
push
test
das
and
add
pop
jb
add
clc
push
dec
cld
lret
cmp
clc
cmp
adc
ja
cmp
add
cmp
push
add
int
jns
sahf
ss
cmp
movsl
clc
or
mov
loop
xchg
add
add
stos
cmp
cmp
or
add
inc
clc
jge
add
lods
sbb
std
cmpsb
clc
jbe
data16
dec
clc
sar
clc
cltd
gs
cli
push
add
shlb
add
sub
adc
scas
mov
add
ss
ret
and
pop
or
clc
and
add
add
add
xor
clc
jmp
dec
fs
fs
cmp
cld
pop
mov
add
add
ds
or
pop
pop
clc
dec
cmp
scas
xlat
jecxz
js
adc
add
add
mov
dec
arpl
add
sub
dec
inc
add
outsb
cmpsl
clc
push
cmc
add
add
pusha
add
xlat
jae
add
sbb
push
ret
sbb
pop
sub
add
movsb
clc
out
fisubrs
mov
mov
cld
jmp
and
sub
mov
mov
clc
mov
add
je
movswl
clc
bound
add
add
idivb
add
add
pop
add
add
loopne
push
out
mov
add
jl
xor
add
add
and
fisubrl
xchg
arpl
add
xor
add
xlat
cmp
jns
mov
clc
push
fcompl
mov
cld
jmp
push
cmp
push
jae
jmp
ja
add
add
xchg
xor
add
clc
mov
xchg
insb
cmp
clc
mov
movsb
clc
idiv
stos
fnsave
test
rcrb
pop
and
repnz
jp
clc
notl
add
mov
cmp
mov
and
add
test
add
mov
testb
iret
dec
xchg
pop
push
adc
add
push
mov
adc
add
add
cmpsb
clc
es
dec
mov
clc
ljmp
nop
xor
add
mov
jl
das
arpl
add
clc
clc
arpl
add
add
inc
clc
mov
add
xchg
pop
or
cmp
in
scas
dec
add
push
add
cli
ds
repnz
jle
mov
loopne
jo
add
clc
xlat
mov
pop
data16
clc
xchg
push
add
cld
jmp
cld
pop
or
sub
lret
clc
mov
mov
decl
sub
fs
pop
fs
cmp
or
clc
test
clc
arpl
add
add
inc
clc
fmul
out
stos
call
inc
clc
cmpsl
clc
out
packssdw
clc
adc
call
add
jg
xchg
dec
jge
sahf
inc
add
test
movsl
clc
xchg
xor
add
sub
clc
sbb
cltd
pop
adc
add
cmp
jbe
stos
loop
dec
in
jo
add
clc
pop
push
add
rcrl
add
dec
mov
cwtl
loopne
cmp
mov
add
sahf
insl
rclb
add
cmc
jg
mov
cld
jmp
or
clc
sub
clc
in
push
mov
cld
jmp
dec
mov
jg
mov
clc
dec
gs
dec
aas
inc
add
xor
add
add
sbb
jge
enter
hlt
bound
add
clc
mov
add
cld
add
add
out
xchg
fwait
cmp
xlat
das
jns
clc
jge
fildll
inc
add
mov
or
in
loopne
jb
add
add
sar
add
sar
push
adc
add
add
mov
pop
xor
add
clc
pop
cs
clc
mov
jmp
inc
aas
lods
xor
add
clc
dec
das
jmp
push
jmp
cmp
add
or
lret
jle
cmc
sar
clc
dec
push
cmpsl
clc
mov
add
cmp
add
lcall
inc
add
xchg
push
add
mov
add
cmp
leave
add
add
clc
and
add
mov
aam
gs
rorl
and
add
arpl
add
clc
add
add
clc
mov
dec
mov
movsb
clc
mov
push
add
sbb
add
cmp
clc
cmp
add
clc
dec
ds
scas
imul
xchg
inc
clc
call
inc
add
xor
add
mov
leave
sbb
or
mov
jmp
or
popa
dec
push
jb
add
clc
mov
pop
sbb
cli
cmp
ja
lss
add
icebp
lahf
lar
add
iret
out
adc
add
add
push
add
push
clc
cmpsb
clc
stc
mov
jmp
imul
sub
add
adc
add
aas
lock
add
sbb
add
lods
jg
pop
clc
push
add
cwtl
sar
lcall
out
add
add
add
sar
add
cli
lcall
xabort
mov
mov
add
imul
add
mov
jae
add
pop
jmp
clc
jecxz
cmc
mov
clc
fisubl
add
insl
xabort
shl
xor
xor
imul
cld
jmp
test
fsubrs
push
push
cld
jmp
sub
scas
sbb
xchg
loopne
pop
clc
js
clc
cmp
mov
xbegin
add
sar
enter
add
or
clc
std
je
lea
jecxz
loopne
fldenv
jnp
rorl
pusha
add
push
add
cmp
push
add
adc
add
cmp
dec
sar
cmp
jle
clc
cmpsl
clc
into
iret
je
data16
sbb
xchg
pop
jno
add
add
data16
imul
jne
clc
out
jne
dec
add
add
clc
sbb
pusha
add
pusha
add
repz
pop
adc
add
or
dec
or
adc
jmp
add
add
nop
mov
add
add
add
ss
insb
inc
clc
roll
add
out
jo
add
fstpl
inc
clc
mov
clc
je
jne
cld
jmp
push
add
add
into
addr16
clc
jnp
insl
cmp
dec
push
cld
jmp
dec
and
add
pop
movsl
clc
adc
add
mov
clc
shrb
push
adc
jmp
scas
cwtl
or
lahf
outsb
lahf
xchg
dec
loop
mov
clc
or
add
sub
incl
jne
cld
jmp
je
mov
add
mov
cld
jmp
je
inc
adc
add
enter
xlat
loopne
push
int
hlt
arpl
add
aas
ret
pop
pop
sahf
lahf
das
mov
cmpsl
clc
sbb
add
and
add
ret
clc
xchg
jl
jmp
cld
jmp
sub
clc
mov
decl
jmp
cmp
xor
add
movsb
clc
stos
jbe
or
clc
cmpsl
clc
jg
xchg
pushf
shll
and
add
and
js
jmp
cmpsb
dec
xchg
sbb
and
push
adc
mov
mov
clc
inc
add
adc
int3
dec
sahf
add
add
dec
in
mov
adc
add
add
mov
scas
lods
in
pushf
stc
adc
add
add
pop
jle
sub
das
aas
outsl
pop
mov
add
add
add
mov
push
cld
jmp
push
outsl
fwait
pop
imul
fcos
jmp
add
daa
clc
rcll
add
mov
push
inc
add
jnp
nop
push
mov
cld
jmp
push
sahf
std
outsb
cmp
dec
mov
clc
iret
dec
js
or
inc
clc
adc
add
jecxz
aam
lret
clc
jp
sbb
pop
inc
add
sbb
clc
fs
inc
clc
inc
add
xchg
ret
clc
push
fmull
popf
fcmovnu
call
dec
aaa
arpl
add
fcoml
add
sti
push
or
lcall
jmp
mov
sbb
pushf
sbb
add
adc
add
pop
in
mov
cwtl
sar
ljmp
add
fs
in
xchg
fwait
xchg
mull
sbb
clc
out
sar
clc
cli
cmpsb
clc
inc
clc
sbb
add
hlt
out
mov
stos
push
add
sahf
test
sub
sar
fnstcw
xchg
xchg
hlt
mov
mulb
inc
clc
pushf
dec
pop
insl
mov
clc
add
add
in
insl
sub
add
add
clc
imul
add
nop
into
repz
and
add
addr16
ret
pop
cmp
clc
mov
cld
jmp
jg
or
and
add
add
pop
inc
add
or
dec
hlt
outsl
jb
add
add
test
mov
jmp
cmp
fwait
sbb
or
cld
jmp
imul
cld
jmp
sub
sub
xor
lret
sahf
adc
add
mov
into
movsb
clc
lcall
add
jecxz
add
add
out
in
xchg
xor
add
add
push
inc
add
ds
adc
clc
loop
fsubrl
mov
and
mov
cld
jmp
sahf
sub
stos
push
add
adc
add
clc
jno
add
add
mov
or
add
pop
jne
clc
test
into
dec
add
inc
add
dec
adc
add
popf
clc
imul
add
addr16
cmp
mov
xchg
fbld
add
sub
add
mov
add
insb
fdivr
pop
cld
jmp
or
stc
sub
pop
imul
clc
sar
adc
add
clc
pop
call
mov
cs
cmp
cld
jmp
insb
dec
test
adc
nop
dec
sbb
mov
inc
add
mov
mov
int3
mov
adc
add
add
movsb
clc
dec
stos
fadds
adc
add
je
cwtl
hlt
pop
sbb
arpl
add
add
ret
clc
jge
add
nop
xchg
adc
clc
add
add
rcrl
or
xor
add
cld
jmp
jp
add
push
add
or
clc
adc
in
ljmp
decl
push
movsb
clc
pushf
xbegin
bound
add
or
jle
clc
in
imul
sub
ret
cld
jmp
sub
out
adc
clc
mov
jmp
cmpsb
cwtl
dec
data16
int3
out
jne
mov
or
clc
or
adc
add
add
clc
push
inc
add
xor
add
or
push
xchg
pop
cmp
mov
sbb
mov
ss
ret
je
ja
cmp
add
ret
clc
in
inc
add
sbb
add
add
clc
jb
add
jp
fs
lret
clc
mov
clc
imul
cmpsb
clc
lret
pop
dec
clc
fcmove
ret
clc
pop
and
add
mov
pop
fdivp
fs
push
add
addr16
loope
dec
jns
sbb
mov
add
sub
clc
in
push
cmpsl
clc
pop
adc
add
add
lret
pusha
add
xchg
jno
add
pop
rcrl
push
push
ret
add
add
notb
fwait
pop
pop
out
push
add
insb
cs
push
add
cwtl
push
pusha
add
movsb
clc
jmp
std
cltd
cmp
clc
cmp
fldcw
cld
jmp
das
xchg
sub
dec
fdivrs
test
add
stc
jns
clc
insl
outsb
dec
fidivl
add
cld
jmp
pop
sub
add
or
clc
stc
sahf
inc
add
mov
add
pop
das
cmp
gs
cmp
gs
ds
pop
push
cld
jmp
mov
fwait
hlt
insb
xchg
enter
mov
fwait
imul
arpl
add
add
clc
pop
clc
mov
in
pop
in
lret
clc
out
mov
clc
add
push
clc
cmp
and
clc
xchg
xor
add
add
clc
ret
inc
add
scas
inc
clc
ss
ud2
ss
add
add
sbb
dec
sub
add
negl
push
and
fsubrs
xchg
push
add
sbb
inc
add
jmp
or
movsb
clc
icebp
icebp
cmp
je
fiaddl
int3
xor
add
dec
adc
add
add
cld
jmp
sahf
scas
mov
test
imul
hlt
out
sbb
dec
test
es
mov
dec
arpl
add
xbegin
clc
mov
mov
out
insl
stos
out
imul
or
cwtl
icebp
add
add
jl
pop
clc
pop
mov
xchg
fnsave
add
imul
add
add
adc
add
or
je
test
xor
lods
push
mov
add
inc
add
inc
add
int3
cmp
add
add
xchg
test
jg
clc
fs
mov
mov
pop
pop
add
ficoml
add
add
add
clc
pop
shlb
add
mov
rcrb
out
mov
xor
add
or
mov
sub
clc
add
add
clc
leave
xbegin
out
dec
jg
sti
je
xor
add
jb
add
add
clc
test
es
out
dec
call
add
leave
xabort
rclb
add
clc
lods
jo
add
add
outsb
push
add
int3
inc
clc
jnp
jae
add
add
push
clc
mov
data16
inc
add
jp
jle
loopne
in
mov
es
mov
repz
clc
pop
clc
and
add
clc
push
call
cld
jmp
jge
or
loope
xchg
push
clc
frstor
add
clc
push
rorb
push
cmp
loope
xchg
pop
and
add
sub
incl
jmp
jmp
sub
or
dec
push
ret
cld
jmp
sub
clc
mov
das
add
add
dec
cld
jmp
fwait
sub
clc
fcomp
clc
decb
mov
add
clc
fsubl
clc
nop
ss
clc
jg
rorl
roll
jb
add
inc
clc
mov
and
popa
add
inc
add
lret
jge
and
add
add
add
add
pop
mov
andl
dec
and
clc
jge
clc
and
dec
addr16
lcall
sub
xchg
xchg
pushl
sub
xor
add
arpl
add
dec
dec
imul
mov
stos
cmp
mov
movsb
clc
cwtl
mov
add
cwtl
inc
add
jb
add
cs
add
cmp
scas
push
clc
sahf
pop
clc
cmp
clc
into
jne
ss
push
add
cld
jmp
ss
stos
pusha
add
ficoms
cld
jmp
mov
inc
clc
inc
add
lods
and
add
add
push
clc
and
inc
clc
and
add
sub
or
inc
add
in
push
clc
loope
ds
and
add
clc
xlat
cmp
fs
sbb
add
jbe
and
inc
add
call
xchg
sub
add
add
repnz
ds
out
sub
lods
sbb
add
pop
fdivrl
jmp
cld
jmp
xchg
sbb
movsb
cld
jmp
insb
cmpsb
adc
lods
adc
add
add
sbb
add
add
add
mov
pop
insb
mov
xbegin
add
cmp
add
inc
add
lods
sub
add
xchg
insb
lret
lods
into
mov
jne
mov
cld
jmp
add
add
icebp
in
insb
or
and
add
test
inc
clc
mov
test
js
clc
add
pop
mov
clc
js
out
sub
cmp
clc
popf
ficoml
add
std
mov
add
add
add
jmp
aad
xor
test
movsb
clc
cmp
clc
int3
push
sarb
add
outsb
adc
clc
xlat
ret
clc
sub
push
lock
sub
mov
cld
jmp
inc
clc
dec
inc
add
je
add
add
mov
clc
bound
add
clc
fcoml
mov
sbb
cwtl
jecxz
push
add
jl,pn
outsb
inc
add
insb
rcr
mov
clc
ss
hlt
ficomps
das
xchg
jmp
lret
movsl
clc
popa
add
leave
sti
jnp
mov
sub
push
loopne
mov
jbe
sar
data16
sahf
mov
mov
cmpsl
clc
or
addr16
fisttps
add
adc
add
xchg
add
gs
negb
add
cmp
clc
insl
mov
imul
xchg
mov
data16
enter
bnd
add
in
sbb
clc
lret
ret
cltd
in
outsb
in
dec
fs
mov
add
pop
cld
jmp
sub
push
jg
inc
clc
ja
add
lea
cmp
mov
addr16
mov
lahf
scas
test
sub
add
or
iret
dec
jb
add
push
loop
enter
dec
add
add
in
mov
stos
dec
clc
jae
add
add
clc
mov
add
add
add
add
enter
add
fldcw
mov
std
dec
push
add
mov
add
lea
xchg
and
lods
scas
adc
add
mov
wrmsr
add
cmp
add
xlat
stos
ljmp
push
clc
fisttps
icebp
push
rcrb
jl
fdivrl
movsl
clc
popa
add
pop
not
in
fistl
mov
clc
or
add
notb
cltd
cmpsb
clc
xchg
aaa
incb
jno
add
sar
js
sar
push
sbb
xchg
add
add
clc
xor
add
and
clc
ret
out
add
add
addr16
sarb
int
dec
add
add
add
add
add
mov
cmp
jge
jb
add
clc
jae
add
clc
pop
xchg
jmp
push
pop
cld
jmp
mov
sub
dec
inc
clc
mov
js
xor
jno
add
lret
add
clc
cli
add
add
add
pop
dec
jp
add
fiaddl
add
sahf
test
dec
cld
jmp
popa
pop
sub
clc
cli
or
push
mov
cld
jmp
add
jge
add
cmpsl
clc
fs
mov
add
test
fcomip
mov
xchg
ss
pop
jae
add
clc
inc
add
aaa
cmpsb
clc
jno
add
test
mov
lret
add
add
add
add
clc
mov
clc
fldcw
add
add
add
add
add
mov
add
cmc
into
add
jp
aam
mov
clc
and
lods
xor
add
fimuls
cld
jmp
sub
pop
mov
sbb
jmp
add
cmp
clc
fldenv
add
sbb
adc
es
mov
clc
lret
add
add
add
push
add
cmp
pop
lock
in
aaa
and
add
lock
mov
jns
add
push
push
aaa
comiss
out
rcrb
sar
clc
std
mov
jmp
sub
ja
sub
clc
js
mov
imul
clc
bswap
es
cmp
add
cltd
or
add
add
add
clc
ss
test
mov
ret
clc
push
clc
pop
cmp
add
pop
sub
clc
int3
rcrl
cmp
clc
test
sar
ja
out
hlt
push
je
cld
jmp
js
clc
and
add
aam
and
add
add
clc
mov
cld
scas
push
mov
add
xor
add
inc
add
inc
clc
lods
mov
fldt
dec
mov
cmp
add
mov
repnz
and
add
test
mov
cltd
sar
clc
and
add
add
inc
clc
mov
add
sbb
add
fdivl
add
ljmp
adc
add
push
add
jo
add
add
fbstp
add
shll
mov
add
test
xchg
mov
jo
add
add
clc
xor
add
add
jns
clc
sub
clc
fildll
pop
mov
repnz
mov
rcr
out
sar
std
arpl
add
add
lods
mov
cmp
sbb
clc
test
xchg
aam
clc
adc
cmp
push
ss
ret
pop
or
pushf
mov
clc
add
add
add
jnp
add
stc
or
add
push
jmp
sbb
push
cld
jmp
sub
push
clc
xor
add
push
add
test
inc
add
jbe
clc
iret
aad
cmp
add
xor
add
lods
imull
add
data16
or
add
and
add
jl
pop
insb
add
add
loop
pusha
add
es
mov
fnstenv
clc
mov
fistps
negl
and
pop
push
pop
test
data16
mov
mov
xor
add
ret
clc
mov
test
xchg
xor
sbb
add
or
and
repz
sub
add
popa
add
adc
add
clc
xchg
enter
add
clc
shrb
jo
add
and
add
rcrb
or
dec
jnp
clc
out
and
add
inc
add
mov
or
add
cmp
clc
mov
js
xor
add
in
mov
clc
mov
lret
jecxz
aam
xchg
mov
clc
add
stos
cmc
inc
add
testb
dec
fnstcw
sbb
pop
stos
sahf
jne
clc
fcompl
sub
add
fdivr
pop
ret
clc
in
mov
mov
clc
adc
add
xor
add
adc
jmp
inc
aaa
mov
jnp
ljmp
inc
add
inc
clc
lods
in
push
add
out
mov
clc
inc
clc
jmp
sar
push
or
jg
mov
mov
aaa
or
mov
push
pop
jmp
clc
xchg
add
jns
clc
push
fbstp
add
mov
mov
pusha
add
push
sub
clc
jge
lea
lock
leave
jmp
fnstsw
ret
repz
add
clc
mov
xchg
push
add
addr16
mov
clc
jo
add
push
sahf
pushl
xchg
xor
clc
xchg
push
mov
cld
jmp
or
stc
push
add
or
dec
xchg
and
or
jecxz
lea
clc
pushf
mov
sbb
or
cld
jmp
sub
pop
popf
pop
addr16
xor
add
add
out
repnz
popf
sub
loope
xor
jbe
xor
add
sar
cmp
mov
pop
clc
mov
add
add
xbegin
add
jae
add
pop
jmp
lret
adc
add
clc
lods
xchg
ds
mov
mov
es
pop
das
sub
in
nop
push
gs
imul
rorb
add
mov
iret
mov
clc
cltd
mov
inc
cld
jmp
inc
sub
jg
mov
clc
cmp
push
cld
jmp
dec
add
int3
push
add
push
mov
add
xbegin
adc
add
pop
cmpsl
clc
sub
out
out
mov
mov
xor
add
cmpsl
clc
fnstcw
repz
sub
add
insl
sbb
orb
add
push
nop
mov
outsb
mov
add
dec
loop
cmpsb
clc
sub
ss
sar
clc
push
add
stos
repnz
pushf
jae
add
decl
cmp
lcall
jp
jne
cld
jmp
adc
add
jne
adc
add
sbb
jmp
sub
data16
jno
sar
ljmp
out
cmp
daa
clc
push
clc
sar
cmpsb
clc
mov
adc
add
cmp
add
pushf
mov
into
xchg
adc
xbegin
add
cmp
add
add
add
pop
fisttps
sbb
inc
clc
inc
add
cmpsl
clc
sub
xbegin
in
data16
or
gs
in
xor
add
add
add
add
sahf
enter
stos
aam
fnsave
add
dec
and
add
pop
mov
push
stos
fs
arpl
add
clc
pop
lret
cmp
xor
mov
cmp
js
fs
mov
filds
add
lods
cld
jmp
lods
jg
sub
divl
add
xbegin
push
cld
jmp
sub
xor
cwtl
adc
dec
pushl
cld
jmp
push
xchg
pop
jno
add
xchg
pop
and
add
mov
pushf
imul
mov
adc
test
add
or
cli
aaa
sbb
pop
cld
jmp
stos
popf
mov
add
arpl
add
pop
cld
add
add
cmp
add
and
add
add
inc
add
enter
add
data16
test
sub
fs
or
add
iret
xor
add
xchg
decl
scas
enter
xchg
lcall
dec
scas
mov
xchg
push
clc
xor
add
xbegin
add
out
pop
clc
fs
sti
pusha
add
outsb
lods
bound
add
add
clc
add
add
clc
push
inc
clc
add
mov
push
leave
adc
add
jmp
mov
cmp
xchg
mov
lock
icebp
std
in
and
add
hlt
add
clc
clc
inc
clc
xor
add
jg
and
add
nop
and
add
clc
scas
jo
add
clc
js
cmp
clc
fidivl
clc
aaa
mov
clc
mov
sbb
xchg
popf
jmp
clc
cs
add
mov
clc
jg
divps
fdivl
xchg
test
or
jo
add
mov
add
clc
fidivl
clc
jl
mov
add
add
xchg
in
mov
or
add
add
cmp
clc
mov
xabort
fucomi
stc
sbb
cld
jmp
fwait
xchg
lods
or
add
add
mov
lods
add
add
add
sar
or
jns
add
fldenv
mov
sbb
jmp
adc
or
imul
clc
rol
clc
sub
add
clc
sbb
clc
call
cld
jmp
and
cmp
cmp
add
sub
xabort
idivl
inc
clc
lret
outsb
clc
pop
aaa
or
jg
mov
add
push
clc
cmp
add
adc
add
aad
xchg
not
sub
cmpsl
clc
fdivl
add
lret
pop
jle
sar
loopne
sub
clc
ret
sar
add
int
out
sub
mov
sar
jne
cld
jmp
and
add
sub
add
add
add
inc
add
add
add
inc
clc
hlt
push
clc
lods
jnp
add
mov
clc
cmp
add
push
ss
ret
sub
xor
add
cmp
cmp
ljmp
cli
ficoms
add
ljmp
pop
clc
push
add
push
add
ds
add
mov
cmp
add
add
add
stos
mov
pop
enter
repnz
clc
pop
aad
add
mov
clc
enter
movsb
clc
mov
ret
sti
and
add
lahf
xchg
xlat
and
xlat
fcmove
outsl
mov
mov
add
add
pop
cld
jmp
or
fisttpll
dec
nop
xor
add
clc
push
xor
add
pushf
xbegin
daa
clc
je
clc
xchg
jb
add
clc
inc
add
xor
add
idivb
mov
xchg
sahf
and
add
add
pop
adc
insl
ficomps
pop
mov
clc
or
clc
sbb
test
clc
es
jmp
add
xchg
xchg
mov
fucomi
nop
cli
fbld
clc
fnstenv
jle
loop
fildll
mov
add
add
jmp
fmuls
rorb
add
pop
pop
push
add
inc
add
popa
add
mov
sub
sub
xlat
add
add
gs
sbb
fs
mov
mov
out
mov
test
inc
clc
test
clc
test
arpl
add
imul
mov
mov
clc
es
sar
mov
cld
jmp
movsb
xor
in
jo
add
add
adc
in
jmp
mov
clc
aaa
xchg
add
decl
jge
sub
mov
inc
clc
cwtl
aas
or
add
pop
jnp
ss
mov
cmp
pop
clc
in
dec
lret
jge
pop
xor
add
sbb
int
jle
clc
loop
pushf
inc
add
in
hlt
sub
clc
dec
mov
clc
push
pop
cmp
mov
ret
pop
jns
mov
mov
add
jle
mov
es
hlt
add
gs
cmpsb
clc
and
add
add
mov
cmc
test
sub
shlb
movsl
clc
xlat
test
clc
test
sub
dec
test
xchg
cmc
pusha
add
std
enter
push
cmp
cmp
fmuls
clc
jmp
clc
mov
or
cli
shrd
clc
stc
sub
stos
push
add
or
sbb
repnz
clc
rcrl
test
push
mov
add
pop
add
cmp
mov
cmp
int
clc
and
js
unpckhps
xchg
je
cwtl
pop
je
adc
add
clc
sbb
clc
fwait
adc
add
fucomp
add
add
cwtl
dec
pop
xchg
mov
clc
fdivrs
das
xchg
pop
clc
xchg
xor
add
test
stc
add
add
add
jle
idiv
mov
add
mov
fisubs
add
dec
adc
add
cwtl
push
hlt
sar
push
push
cmp
mov
cld
jmp
das
xor
fdivrs
add
add
mov
clc
mov
imul
dec
out
jmp
sahf
pop
fists
xchg
jecxz
push
clc
mov
add
add
ret
add
mov
clc
inc
add
lcall
add
or
pop
mov
clc
mov
imul
lret
clc
cmp
xchg
in
arpl
add
add
mov
pop
insb
insl
xchg
and
add
add
add
add
in
dec
push
inc
cld
jmp
push
sahf
outsl
or
clc
cmp
clc
mov
bound
add
fdivrs
addr16
cmpsb
clc
xchg
ret
clc
fwait
lods
mulb
repz
mov
mov
cld
jmp
rcrb
push
cld
jmp
sub
insb
sub
test
int3
and
in
inc
clc
and
ss
ret
sub
mov
incl
and
ljmp
fs
shll
xchg
jbe
add
aad
jg
cmp
inc
clc
pop
push
xor
cld
jmp
mov
jmp
cmp
mov
add
scas
ljmp
inc
insb
insb
cld
jmp
sub
clc
jbe
mov
push
das
iret
mov
add
ja
dec
cmp
xor
decb
clc
xchg
stos
pop
sar
in
jl
clc
jge
clc
pop
lret
add
add
clc
sbb
add
fwait
lahf
mov
mov
jmp
in
scas
aad
mov
jns
fwait
shlb
jg
add
xchg
mov
and
add
adc
or
insl
xbegin
aaa
mov
push
add
jmp
aas
sub
dec
in
fwait
outsl
aas
dec
dec
dec
lret
mov
clc
cmc
imul
jg
add
fbstp
popf
push
add
mov
clc
nop
aam
add
or
rolb
jmp
pop
adc
loope
cmp
stc
lods
insb
pop
pop
bound
add
sar
add
cmp
js
and
lcall
mov
sub
jmp
mov
clc
push
outsl
cld
jmp
cmp
mov
movsb
clc
ds
clc
dec
aaa
lock
clc
loope
add
add
addr16
hlt
daa
clc
cmpsl
clc
ret
clc
out
jb
add
les
cld
jmp
jg
sub
clc
mov
lahf
xor
add
clc
pop
call
xchg
push
cmpsl
clc
mov
test
in
arpl
add
clc
shl
clc
add
add
xchg
dec
in
push
jmp
cld
jmp
push
jge
sub
sbb
js
clc
mov
add
clc
movsb
clc
adc
push
inc
clc
jl
clc
mov
mov
in
adc
add
add
add
push
sar
es
pop
daa
clc
xchg
lret
or
add
xchg
mov
clc
push
cmp
pop
fisttpl
js
add
pusha
add
repz
daa
clc
pop
ficoms
add
mov
clc
adc
add
jp
sar
enter
pop
out
or
or
sar
xchg
inc
clc
mov
clc
jnp
fwait
mov
add
pop
or
repz
add
add
outsl
clc
test
clc
out
or
gs
ljmp
jne
rolb
clc
push
inc
clc
jnp
clc
jno
add
out
aad
or
imul
add
xabort
add
add
sub
pop
mov
clc
cmp
mov
mov
add
xor
add
call
in
jne
xchg
jbe
xor
clc
mov
jg
outsb
mov
push
clc
and
add
jmp
xchg
inc
add
imul
clc
pop
pop
xlat
daa
clc
pop
popf
fdivrs
sub
add
push
clc
pop
clc
out
out
jge
fisubrs
enter
add
add
and
add
push
pushf
add
data16
out
pop
dec
or
jne
clc
je
or
mov
mov
clc
pop
cmp
cmpsl
clc
enter
clc
push
add
push
test
xor
add
adc
add
clc
cmpsl
clc
iret
mov
xchg
bound
add
ss
ret
fs
data16
jbe
ds
sbb
imulb
clc
push
cmpw
cld
jmp
or
flds
clc
gs
ret
clc
jle
mov
mov
stos
cmp
and
add
lods
and
add
pusha
add
jne
dec
call
push
cld
jmp
das
dec
mov
stos
cmp
add
cmp
mov
mull
add
xchg
sub
clc
insb
ja
clc
cs
clc
cmp
dec
mov
cmp
into
xchg
mov
clc
cmp
clc
or
sub
mov
clc
in
pop
cmp
cmp
jl
push
sti
ljmp
push
clc
test
or
push
add
int
cmovle
add
clc
sub
test
add
pop
xchg
mov
out
je
sahf
incl
sar
jmp
and
sub
add
pop
test
clc
inc
clc
lea
cmp
add
fs
leave
cmp
enter
mov
lcall
arpl
add
push
sub
clc
iret
push
add
mov
test
clc
in
xchg
jl
push
add
lea
xlat
push
sub
clc
cltd
and
xor
add
and
add
clc
iret
fwait
or
add
xabort
mov
cmc
xchg
leave
or
mov
clc
ficompl
jl
sbb
jmp
outsl
ja
push
mov
stos
lods
vmovups
add
dec
sbb
jo
add
je
or
into
lahf
insl
enter
lret
clc
push
mov
dec
mov
clc
push
shr
cld
jmp
scas
adc
clc
decl
ds
add
aas
pop
dec
push
cmp
xor
add
outsl
and
add
mov
add
sbb
inc
add
loopne
push
mov
fwait
cmpsb
cwtl
cltd
cmp
pop
dec
cmp
pop
clc
icebp
jb
add
xor
add
sub
xchg
dec
adc
add
add
rol
clc
and
jmp
sub
push
cld
jmp
sub
inc
clc
inc
clc
repz
int3
push
cmp
addr16
jb
add
clc
pop
pop
scas
pushf
dec
sar
fisttpll
in
arpl
add
clc
inc
add
fisubrs
test
add
data16
cwtl
arpl
add
ret
clc
add
add
add
movsb
clc
dec
ljmp
add
lock
add
lcall
clc
ja
inc
add
push
add
mov
add
dec
popl
clc
or
add
out
jo,pn
add
push
add
stos
sub
clc
in
or
add
mov
add
nop
lret
sar
add
scas
insl
push
roll
add
add
mov
add
xchg
push
add
push
add
iret
or
clc
lea
mov
shll
sbb
movsb
cld
jmp
push
cmp
add
xchg
icebp
in
mov
xor
cld
jmp
and
bnd
repz
dec
cli
sub
jl
add
stos
push
daa
clc
mov
out
inc
add
notl
add
fildll
jo
add
imul
cld
jmp
insb
pop
add
sub
in
popa
add
ljmp
mov
xchg
movsb
clc
mov
clc
xchg
sub
push
popf
xor
add
push
add
imull
add
sbb
movsb
cld
jmp
cmpsb
add
sbb
or
jmp
sub
nop
fs
lods
fmuls
clc
into
push
sti
push
clc
cli
lret
popf
ret
clc
pushf
or
clc
lods
in
int
xbegin
clc
int3
imul
and
jmp
push
fwait
sub
add
cmp
clc
jle
roll
dec
cmp
out
push
lcall
add
popa
add
push
add
sbb
add
cmp
clc
and
add
rol
clc
mov
add
cmp
clc
into
ret
clc
pushf
and
add
clc
hlt
icebp
mov
sbb
cmp
clc
ror
mov
and
add
cwtl
push
pop
adc
add
and
push
add
mov
lret
mov
xchg
adc
or
aam
clc
scas
insb
clc
adc
add
repnz
mov
nop
fsubrs
add
sub
push
add
lahf
std
rcll
xchg
inc
clc
decl
add
inc
jg
add
mov
add
fmull
push
jbe
fadds
popf
or
sbb
es
sbb
add
cld
jmp
fwait
jae
add
cmp
dec
lods
and
cwtl
mov
add
aaa
xor
add
out
adc
add
mov
clc
dec
adc
add
repnz
clc
mov
inc
add
jne
add
cmpsl
clc
jb
add
loope
repz
inc
clc
push
add
pop
mov
add
dec
sbb
add
pop
xchg
in
xor
add
jmp
cld
jmp
inc
push
clc
es
lahf
dec
aad
test
cld
jmp
cmpsb
xor
mov
sub
clc
aad
daa
clc
cmp
lods
inc
add
add
arpl
add
clc
push
add
hlt
inc
add
fwait
mov
lods
mov
xor
add
dec
mov
clc
xor
add
faddl
clc
xchg
fnstcw
add
inc
clc
mov
frstor
mov
mov
bound
add
sub
add
dec
int3
pop
mov
inc
clc
scas
stos
iret
loope
stc
mov
jle
add
insb
mov
and
add
add
cld
jmp
inc
sub
rorb
iret
int
clc
roll
add
mov
adc
add
test
add
add
sbb
mov
out
cmp
sbbb
mov
push
add
loope
jns
clc
pop
push
pushf
xchg
shlb
add
repnz
push
add
add
ja
sub
dec
and
add
add
add
mov
stc
lret
lea
inc
add
fadds
add
add
clc
lods
cs
sub
popa
add
outsl
pop
fiadds
add
push
add
jp
ffreep
clc
mov
clc
pop
cmpsb
clc
lods
mov
std
mov
lahf
vmovups
add
add
or
add
ljmp
insb
fistpll
popa
add
sbb
sar
pavgw
lea
add
add
lea
stc
incl
jmp
pop
sbb
sbb
leave
adc
add
jns
sub
clc
xor
add
add
add
jbe
clc
cwtl
scas
jp
cmp
mov
dec
mov
leave
jp
add
test
inc
clc
jns
mov
push
add
cmp
pop
clc
scas
cltd
sub
add
popf
pusha
add
repz
sub
leave
xchg
stos
mov
pop
sub
cmp
sub
sbb
jl
jg
add
sbb
add
cmc
cmp
xchg
cld
jmp
or
clc
push
clc
lea
add
inc
clc
mov
push
cld
jmp
or
movsl
clc
lods
sbb
add
fs
call
sub
pop
and
add
lcall
cmc
dec
clc
xlat
icebp
mov
clc
xchg
add
insb
xchg
daa
clc
push
mov
sbb
test
cld
jmp
fs
loopne
popa
add
aaa
popa
add
icebp
lods
mov
add
cli
add
add
sar
clc
sbb
add
loopne
sahf
mov
aaa
lock
push
inc
clc
out
xbegin
push
in
test
or
clc
js
clc
insl
stos
ja
lcall
add
add
inc
add
out
add
add
pusha
add
add
add
add
fcompl
adc
add
push
add
push
add
xor
clc
push
mov
xor
insb
push
add
jnp
dec
mov
cmpsl
clc
out
arpl
add
dec
int
cmp
xor
push
add
repz
add
add
clc
sarl
jmp
mov
repz
add
in
pop
pop
mov
jo
add
add
add
or
add
movsb
clc
inc
clc
or
ret
clc
inc
clc
and
add
adc
add
mov
cmp
add
pop
out
rep
cmp
add
dec
arpl
add
add
inc
add
aaa
cmp
add
in
int
mov
stos
ljmp
clc
inc
clc
mov
sbb
iret
or
incl
jbe
cld
jmp
pop
push
sub
stos
pop
mov
jp
sub
xor
cld
jmp
popl
xlat
stc
pop
imul
out
pushl
sar
jmp
add
aas
add
or
adc
add
clc
mov
clc
sbb
jmp
insb
popa
lods
test
mov
add
mov
cld
jmp
inc
clc
imul
add
icebp
imul
or
sbb
decl
ret
popf
scas
mov
push
ss
ret
add
or
pop
xor
add
add
test
jmp
jmp
inc
inc
sub
and
dec
and
add
add
popa
add
or
testl
pop
add
add
clc
stos
inc
add
mov
and
add
adc
mov
cld
jmp
cmp
clc
dec
xlat
sahf
push
mov
add
std
mov
mov
add
push
mov
cmp
hlt
in
incl
mov
lahf
xchg
sub
js
add
xor
add
clc
cmp
clc
pop
add
add
mov
clc
jmp
cld
jmp
outsl
push
adc
mov
add
bound
add
in
pop
das
xchg
mov
cmp
clc
pop
mov
aaa
fcompp
test
sar
add
add
or
add
xor
add
add
mov
jg
imul
add
sahf
xor
add
clc
xor
add
clc
mov
fmul
sar
mov
aas
lods
test
add
add
mov
add
loopne
sub
jno
add
aam
cltd
rcr
imul
repz
add
pcmpgtb
mov
add
dec
cwtl
sub
add
and
add
xor
add
jno
add
or
xor
add
push
sbb
arpl
add
out
sub
and
add
leave
pop
scas
bound
add
clc
sbb
cmp
add
mov
clc
loopne
push
mov
add
fistps
add
dec
add
fwait
ljmp
out
and
add
clc
xchg
push
add
add
int
clc
fstps
add
add
mov
icebp
push
add
ljmp
jmp
xor
push
add
fisubrs
add
cmpsl
clc
sti
pop
push
ljmp
sub
or
fstl
add
add
push
cmp
pop
clc
xor
cltd
mov
jbe
clc
enter
jae
add
add
cld
jmp
jp
sub
pop
inc
add
sub
ds
ret
clc
xchg
push
clc
cmpxchg
imul
popa
add
jg
xor
add
add
pop
mov
add
imul
clc
sub
jmp
cld
jmp
dec
ss
mov
jmp
aaa
sub
cld
or
mov
pushf
aam
jp
mov
gs
inc
clc
mov
fstl
jmp
xchg
je
insb
inc
add
xchg
sub
add
mov
faddp
clc
sar
mov
mov
clc
jge
cmp
loopne
stc
pop
dec
xchg
popf
lock
adc
add
stos
mov
dec
sbb
inc
clc
mov
push
cmc
in
push
hlt
aam
dec
xlat
xor
add
add
add
push
add
stc
dec
inc
clc
xabort
mov
cmp
jo
add
inc
clc
and
push
push
cmp
add
or
punpckhdq
jae
add
clc
js
clc
pushf
push
sbb
data16
jle
clc
add
inc
clc
bound
add
push
mov
add
add
add
add
xor
add
add
sar
cli
add
jl
lahf
and
add
mov
shll
add
or
aas
add
bound
add
dec
ror
pop
dec
je
add
cmp
clc
inc
clc
test
clc
xor
clc
mov
add
leave
dec
push
push
add
mov
mov
clc
push
pop
pop
test
jno
add
aas
movsl
clc
dec
cmp
sti
add
add
clc
mov
test
lret
clc
xchg
pushf
imul
add
add
push
add
mov
xbegin
nop
fs
cmp
mov
clc
sbb
add
add
icebp
sahf
lret
sar
dec
push
xchg
dec
fcmovnu
int3
inc
add
fisubs
add
movsb
clc
lcall
pushf
test
pop
and
pushf
xchg
add
pop
push
mov
int3
or
add
add
and
add
mov
mov
aaa
pushf
iret
cltd
fadds
add
int3
rorl
add
adc
add
or
idivb
xor
cmp
clc
and
add
xchg
test
jp
ror
test
cli
jg
aaa
jg
scas
add
add
add
add
xchg
loop
fwait
jno
add
clc
jecxz
xor
add
add
add
xlat
test
clc
inc
clc
cwtl
add
sub
cmpsl
clc
mov
add
clc
push
add
sar
mov
adc
add
jne
or
pop
mov
fcmovnu
xlat
imul
clc
aad
clc
stos
fiaddl
das
jmp
xlat
xor
nop
pop
es
aad
add
inc
clc
inc
clc
xor
add
add
jne
xor
add
repnz
pop
sub
cmp
stos
mov
and
cmp
clc
mov
add
mov
add
int
ret
add
in
bound
add
add
xchg
sub
add
add
add
lock
mov
clc
hlt
call
mov
mov
mov
add
fs
inc
add
gs
rcll
sub
das
leave
sbb
pusha
add
insl
lret
jecxz
adc
add
xor
add
jnp
dec
cmp
clc
fsubs
add
movsl
clc
fisttps
add
in
in
addr16
mov
jnp
js
cltd
imul
fcomps
jp
rcr
fisubrl
add
add
int3
cli
sbb
ljmp
clc
xchg
add
add
xor
add
stos
mov
idiv
jnp
pop
add
add
mov
jle
pop
cwtl
lods
ds
cltd
and
add
mov
add
ret
clc
cmp
mov
mov
cmp
clc
lret
aam
xbegin
add
push
aam
cmp
pop
xchg
dec
ds
aad
dec
movsb
clc
adc
clc
mov
push
sti
xlat
lea
dec
lods
xchg
pop
clc
push
clc
xor
clc
aaa
pop
push
pop
xbegin
add
and
add
fistpl
sar
xbegin
add
and
xor
iret
push
add
ret
lods
pop
fstl
add
loop
repz
xchg
push
dec
dec
sub
clc
sar
nop
mov
test
daa
clc
mov
imul
in
jecxz
cmp
clc
ficoms
add
push
enter
in
stos
cmp
pop
cmp
clc
sub
jp
sub
int3
adc
add
clc
test
clc
dec
in
rclb
stos
pop
lcall
add
add
xbegin
push
lea
test
loope
gs
pusha
add
pushf
fimull
clc
out
fildl
add
and
add
clc
mov
pop
mov
loop
iret
mov
add
add
jnp
js
mov
clc
mov
mov
add
clc
dec
arpl
add
bound
add
mov
clc
pusha
add
sbb
or
cli
out
test
arpl
add
push
out
cmp
cld
inc
add
or
ljmp
ret
or
jb
add
add
cwtl
cwtl
fs
mov
aaa
dec
fdivs
daa
clc
xchg
bound
add
xchg
loope
push
push
popl
mov
pop
clc
arpl
add
or
adc
add
sub
push
call
addr16
mov
outsl
cs
pop
loopne
test
clc
lods
inc
clc
outsb
push
mov
clc
pop
or
negb
into
lea
clc
sub
stos
jmp
cld
lock
clc
fstl
fstps
pop
data16
lock
hlt
and
sub
push
adc
xchg
pop
imul
add
push
fsubl
or
stos
inc
clc
mov
clc
mov
lea
imull
clc
mov
push
add
out
push
add
or
xchg
in
push
add
jae
add
xor
xor
add
mov
clc
clc
lock
add
mov
add
add
add
sahf
xchg
test
mov
add
sbb
cltd
stos
repz
add
outsb
push
mov
xor
add
add
or
pusha
add
ss
lock
pop
fildll
insl
loope
and
add
or
xor
or
add
iret
jnp
clc
in
lret
cmp
jbe
sar
clc
cmp
add
mov
repnz
cmp
mov
clc
int
clc
dec
fucomip
mov
clc
cmc
and
add
out
popf
lea
add
sub
xchg
jne
pusha
add
mov
int3
sahf
mov
clc
push
jno
add
add
dec
pop
pusha
add
clc
scas
cmc
mov
pop
add
jb
add
and
add
ds
jmp
add
arpl
add
clc
repz
or
add
add
add
clc
pop
mov
push
add
add
add
mov
add
dec
test
mov
add
mov
imul
add
add
or
mov
mov
sbb
pop
sahf
out
or
push
add
add
adc
add
divb
add
add
jmp
add
mov
add
fcompl
push
clc
ja
data16
mov
sahf
jmp
clc
mov
clc
xchg
adc
add
enter
add
add
inc
add
fcomp
clc
hlt
mov
xabort
add
jae
add
pop
mov
clc
rclb
stos
push
adc
add
add
ss
and
add
jb
add
push
pop
sar
adc
clc
sar
clc
mov
add
mov
push
xchg
xbegin
add
repz
add
push
add
xchg
jnp
and
add
xor
add
loopne
fnstsw
mov
mov
in
xbegin
out
xchg
or
jo
add
add
adc
into
and
add
mov
xchg
mov
into
and
add
push
add
add
add
add
xlat
adc
rcrl
mov
add
sub
inc
add
jl
push
aaa
inc
clc
out
ror
insl
ret
loopne
cwtl
test
std
imul
adc
add
movsb
clc
shll
add
das
sbb
arpl
add
mov
add
cmp
es
mov
push
clc
popf
sbb
pop
mov
int
xchg
out
xchg
repnz
add
add
dec
fdivs
add
sub
or
add
mov
lods
rcrb
cmpsb
clc
aaa
dec
iret
cmpsb
clc
xchg
jge
add
insl
cmpsb
clc
loop
mov
mov
or
adc
add
xor
add
add
push
clc
mov
jne
sbb
pusha
add
lret
push
add
dec
mov
cmp
push
clc
adc
add
aam
jge
or
gs
push
add
popa
add
jmp
inc
add
lret
rorl
test
pop
mov
int3
mov
ss
clc
mov
leave
sahf
lea
fwait
cwtl
mov
jnp
add
add
add
dec
push
clc
jae
add
jae
add
xchg
or
clc
push
sbb
ret
clc
xchg
inc
add
and
add
popf
scas
cmp
loop
cmpsb
clc
call
xor
add
pop
fs
fwait
nop
aas
cli
mov
clc
pop
sbb
inc
add
pop
fiadds
add
lret
fstpt
push
imul
jl
add
test
lret
sub
hlt
sti
jp
xor
add
xchg
stos
fsts
add
push
cmp
jg
add
add
add
jae
add
mov
mov
add
mov
fst
sbb
inc
add
mov
stos
hlt
xor
add
clc
mov
and
add
pop
push
clc
gs
cmpsb
clc
mov
clc
add
adc
pop
fldz
mov
std
adc
add
sbb
loop
in
pop
cmp
clc
outsl
xchg
and
add
fists
add
lret
std
aas
sar
stc
and
add
and
add
sbb
insl
in
clc
mov
adc
aad
clc
jmp
test
clc
mov
jp
cmp
add
add
popf
inc
clc
jb
add
clc
pop
pop
adc
lods
ficoms
clc
mov
or
sar
add
adc
add
js
popf
fwait
jbe
clc
in
fucompp
lcall
add
sub
cmp
add
movsl
clc
dec
mov
mov
add
jmp
push
add
inc
add
sbb
test
and
add
add
clc
mov
add
dec
cs
clc
loopne
xor
add
push
in
arpl
add
jg
dec
mov
inc
add
insb
enter
add
aad
add
push
add
cmp
scas
cwtl
cmp
push
add
xchg
jb
add
add
rol
clc
mov
and
add
clc
xchg
fcmovu
lcall
imull
popf
jbe
sbb
add
aas
imul
add
mov
pop
ficoms
add
xchg
test
pop
in
bound
add
jne
mov
gs
xor
sub
gs
xor
add
int3
inc
clc
or
lret
pop
adc
add
cmp
jmp
xor
add
inc
clc
adc
add
mov
sub
clc
rolb
mov
mov
add
jg
add
and
add
clc
js
sub
fadds
add
fbld
add
mov
sub
sub
nop
inc
add
loope
jns
data16
dec
push
add
test
iret
pusha
add
cmp
add
test
push
imul
mov
push
add
aas
lods
pop
xbegin
xor
add
clc
jle
adc
add
cmp
add
popa
add
jo
add
in
ret
clc
in
push
add
xlat
mov
cs
aad
xbegin
xor
add
clc
cmp
mov
jo
add
sti
sbb
add
mov
add
lret
xchg
mov
repz
loope
and
add
clc
pop
int
or
jo
add
pop
push
mov
fs
cmp
clc
in
int3
xlat
fidivl
add
std
int
mov
or
clc
dec
xor
add
xlat
pushf
xchg
inc
add
stos
or
lea
add
add
or
push
add
popa
add
sarl
xchg
sbb
push
cmp
clc
shr
sbb
sub
cmp
add
mov
hlt
adc
clc
ds
sahf
xlat
sub
clc
xchg
xchg
arpl
add
add
add
mov
cmc
jg
mov
js
clc
or
pop
or
fs
loopne
aam
push
ret
fistpl
clc
jecxz
mov
clc
stos
push
clc
cli
sbb
xbegin
loope
pop
loop
std
dec
in
mov
xchg
pushf
das
xor
imul
xchg
icebp
mov
mov
mov
jae
add
add
fsts
into
xchg
jle
push
xor
add
pop
nop
jno
add
clc
mov
mov
cmp
clc
push
add
test
fsubrs
xor
add
stos
mov
es
in
dec
xor
call
shld
mov
out
pop
cltd
mov
jle
adc
add
xchg
and
xor
add
jb
add
sbb
add
out
in
inc
clc
jno
add
add
insl
mov
add
lcall
or
clc
xchg
popa
add
mov
mov
pop
lea
cmp
clc
pop
lahf
repz
xor
add
add
add
clc
jbe
in
test
cmp
clc
in
nop
jne
xchg
xchg
xchg
pop
out
push
sar
xor
add
clc
inc
add
cmp
ret
clc
push
mov
mov
mov
clc
fwait
sar
pop
or
clc
mov
xchg
pop
mov
fldcw
adc
add
add
xlat
test
pop
clc
test
push
add
xbegin
xabort
aaa
jmp
xchg
push
fbstp
add
xabort
xchg
sbb
jbe
clc
test
mov
pop
fidivl
mov
clc
sbb
xabort
mov
popf
push
into
mov
sub
test
add
and
add
pop
mov
ljmp
add
gs
mov
btc
add
and
add
insb
mov
mov
sbb
adc
add
mov
lret
cmp
in
in
jle
cmp
clc
negb
scas
and
dec
sbb
insb
push
idivb
incb
ret
cmp
scas
lahf
ds
fistps
iret
push
add
add
test
inc
clc
sbb
in
mov
clc
mov
add
jle
clc
cmp
add
mov
xbegin
xor
in
xchg
xor
add
clc
sbb
add
mov
push
and
add
cld
repz
out
js
sar
lret
inc
clc
cmc
and
add
sarb
nop
gs
fsubl
sub
add
add
jl
shlb
xor
add
and
add
push
add
push
sbb
in
mov
pop
add
imul
cmp
push
loope
xor
add
add
xor
add
test
pxor
pop
push
mov
add
dec
dec
sub
cmp
mov
or
clc
pushf
sub
addr16
dec
addr16
sbb
add
push
add
loope
or
clc
dec
pop
push
cmp
add
jnp
in
inc
clc
xlat
push
jae
add
add
mov
add
or
aas
cmp
mov
test
pop
cmp
test
lret
add
add
mov
std
stc
sub
ror
hlt
std
mov
cmp
add
add
sbb
jp
iret
or
add
scas
sub
gs
enter
clc
mov
hlt
ret
cmp
add
clc
xor
add
loope
cmp
sub
add
scas
dec
or
add
or
add
sar
mov
add
test
inc
clc
jae
add
clc
mov
xabort
add
dec
pop
pop
pop
lret
pop
fsubrl
add
mov
cmc
xor
add
xchg
xbegin
pop
push
or
add
lock
add
jmp
add
xor
add
lret
push
add
add
add
xchg
loope
jnp
pop
vcvtdq2ps
loope
scas
sar
add
neg
jle
clc
ja
lret
add
xchg
jg
mov
and
add
sbb
clc
dec
cmp
pop
das
jg
xchg
sbb
mov
rclb
movsb
clc
dec
das
xlat
cs
clc
xchg
pop
adc
add
add
mov
lods
dec
fisubrl
clc
mov
sar
or
repz
add
push
mov
fiadds
clc
dec
add
add
add
sbb
adc
add
add
add
or
loopne
mov
clc
shlb
add
cmp
cmpsb
clc
or
aam
ljmp
stc
repz
add
pop
gs
stc
mov
add
inc
add
mov
notb
adc
add
add
icebp
mov
pop
jnp
add
lcall
add
popf
sub
clc
dec
push
add
inc
clc
clc
aaa
ljmp
clc
mov
clc
mov
xor
add
add
scas
ret
clc
push
cmpsl
clc
ret
clc
xor
add
mov
xchg
push
clc
test
push
sbb
clc
std
xabort
cmp
cltd
fisubrs
clc
sub
adc
add
add
mov
clc
in
mov
dec
sti
js
jp
mov
clc
mov
clc
popa
add
add
dec
pop
add
out
sahf
bound
add
adc
add
fwait
dec
fisubl
push
sbb
xchg
ljmp
ret
add
cmp
clc
jae
add
insl
loopne
mov
add
lahf
insb
push
add
loope
shrb
dec
lret
cld
and
add
clc
push
push
imul
cmp
loop
in
loopne
stos
imul
ret
add
dec
sbb
add
jecxz
add
bound
add
clc
or
aaa
add
add
inc
add
add
add
clc
cli
es
jne
xchg
inc
add
int
ffree
clc
loop
data16
mov
push
ficompl
pop
pop
fnstenv
sub
add
clc
stos
loopne
cmp
clc
sub
bound
add
clc
ds
dec
adc
add
push
bound
add
add
jns
dec
xor
add
popa
add
mov
clc
addr16
arpl
add
cmp
clc
push
sar
sub
jecxz
mov
sub
sbb
add
outsb
push
add
add
ds
into
mov
mov
add
adc
push
mov
clc
push
fisubrl
ss
add
popa
add
repz
push
add
clc
inc
clc
xchg
loop
fstpt
shll
sar
clc
outsb
fistpll
clc
mov
xchg
pop
fsubrs
jge
clc
pop
hlt
push
add
lcall
jno
add
clc
sbb
xbegin
add
add
outsb
jnp
clc
dec
xchg
daa
clc
popa
add
ret
clc
clc
mov
clc
push
add
jecxz
lret
pop
add
add
stos
jecxz
push
mov
mov
clc
imul
clc
mov
add
stos
fstp
int
roll
add
clc
mov
cmp
add
add
iret
cmp
rorb
int
push
movsl
clc
mov
add
and
add
add
jle
clc
cmp
pop
and
add
mov
add
fisubs
clc
jo
add
clc
popf
pop
jno
add
mov
clc
jns
sub
or
pop
shr
xchg
mov
mov
mov
xchg
stos
cs
setp
cli
arpl
add
clc
mov
rcl
mov
cltd
clc
sbb
add
add
fcoml
dec
fidivl
add
xchg
movsb
clc
std
loop
arpl
add
inc
add
es
iret
jnp
or
mov
xchg
cmp
clc
ret
sti
nop
mov
add
clc
push
test
cli
lcall
test
cmp
lret
inc
clc
inc
clc
or
clc
out
pop
popa
add
pop
mov
clc
xchg
cmpsb
clc
out
and
add
cmp
add
mov
pushf
mov
pop
outsb
repnz
loop
xchg
push
and
add
pushf
push
das
mov
adc
add
mov
bound
add
add
dec
adc
add
das
cmpsb
clc
fstpl
add
or
jo
add
xchg
clc
cltd
cwtl
push
add
xlat
test
and
add
jno
add
and
add
imul
add
pop
sti
iret
popa
add
nop
sar
add
xchg
test
clc
add
add
clc
lods
mov
clc
dec
xor
xchg
test
cmp
enter
add
xor
add
add
sti
loopne
mov
clc
push
add
inc
add
mov
add
xchg
jl
movsb
clc
imulb
pop
sub
adc
gs
xor
mov
push
scas
imul
add
stc
sub
lea
test
std
push
add
out
or
xchg
sub
clc
iret
dec
out
stc
cmp
ret
clc
sbb
ret
out
jmp
xchg
mov
jb
add
add
lods
testl
mov
ja
mov
push
add
mov
dec
jns
nopl
mov
add
inc
add
push
in
cltd
sub
add
scas
cli
push
cmp
clc
push
cmpsb
clc
ret
clc
scas
pop
clc
sar
add
cmp
in
or
cwtl
jns
dec
hlt
mov
xor
add
add
add
cmp
sbb
or
add
mov
mov
clc
mov
clc
imul
mov
ret
clc
adc
ret
clc
lret
inc
clc
push
imul
mov
xchg
inc
clc
aas
mov
clc
mull
add
test
push
add
or
add
jmp
aad
xchg
jo
add
clc
mov
clc
lret
sub
add
add
movsl
clc
cmp
lret
sarl
pop
jne
push
and
add
xchg
out
or
inc
add
mov
clc
push
add
cwtl
xchg
adc
add
add
fcoml
add
add
add
mov
mov
jecxz
pop
sbb
add
dec
or
pop
negl
add
repnz
add
rcll
mov
add
jle
lods
out
mov
sub
add
pop
clc
sbb
call
fmull
and
and
add
add
xchg
cmp
dec
lods
mov
rorl
pop
clc
adc
scas
aam
int3
mov
adc
or
add
or
inc
clc
push
add
mov
xor
mov
iret
fnstenv
daa
clc
push
add
push
xlat
out
scas
adc
add
add
fs
cmp
mov
cmp
jecxz
cmp
rcr
and
add
or
fidivs
test
push
mov
fiaddl
ss
clc
lods
loope
dec
lret
clc
xchg
cmp
jb
add
add
jns
outsb
popf
test
aas
jge
clc
rorb
add
lret
sar
sbb
hlt
cmp
repz
cmp
clc
and
add
and
add
pop
jmp
inc
add
jge
clc
bound
add
cmp
imul
add
sar
clc
or
repz
sbb
xor
ja
clc
ja
mov
and
add
sbb
jg
stos
in
mov
add
data16
dec
pop
pop
xor
add
inc
clc
daa
clc
mov
cmp
arpl
add
imul
add
push
in
sub
out
fbld
clc
and
add
or
sbb
pop
xchg
dec
xchg
test
mov
xchg
cmp
inc
add
out
sbb
mov
add
vmovups
add
jbe
add
ret
add
cmpsl
clc
es
loope
xor
add
add
and
xchg
inc
clc
mov
clc
imul
mov
fimull
sub
sub
and
add
add
das
jnp
mov
pop
mov
add
int
pushf
dec
fistl
mov
pop
and
add
add
push
and
add
add
mov
xor
add
das
int
arpl
add
inc
add
sbb
and
clc
xchg
push
popa
add
gs
aaa
pop
xchg
jbe
push
add
jmp
scas
mov
adc
add
clc
test
and
add
add
dec
xor
loop
adc
add
push
movsl
clc
fisubl
sbb
mov
clc
sbb
mov
xchg
add
add
xor
add
addr16
fsubs
clc
push
pop
mov
clc
and
add
dec
push
inc
add
mov
xchg
hlt
cmp
inc
clc
jno
add
add
fnstsw
clc
test
fwait
ret
clc
jns
pop
xchg
sbb
repz
add
xchg
data16
dec
sub
add
add
clc
cmp
adc
add
add
js
add
adc
add
pop
ljmp
pop
sub
add
xchg
mov
adc
add
mov
clc
bound
add
and
leave
mov
test
bound
add
jb
add
sub
add
popf
fcompl
bound
add
fdivrl
mov
add
xor
add
mov
pop
add
add
mov
clc
jle
pop
dec
hlt
xchg
pop
cli
daa
clc
lcall
add
push
add
jle
clc
movsl
clc
pop
lahf
mov
clc
lock
cli
test
jecxz
popa
add
aam
outsl
add
add
int
inc
add
in
rcrl
ljmp
add
and
add
in
dec
iret
lahf
xor
add
adc
clc
dec
lods
test
inc
add
pop
in
ror
outsl
xchg
xchg
adc
daa
clc
pushf
dec
gs
enter
add
clc
pushf
mov
flds
jmp
aad
xchg
sbb
push
add
cld
sahf
stos
decl
sti
in
out
sub
adc
add
add
stos
adc
add
enter
add
out
movsl
clc
sar
data16
gs
int
pop
dec
xchg
adc
add
add
clc
mov
out
lahf
fs
pop
scas
mov
stos
dec
cli
xchg
push
clc
mov
leave
dec
xor
add
ljmp
mov
inc
clc
cmp
test
add
fbld
add
clc
cmp
clc
out
loopne
mov
or
add
lea
add
rcrb
or
add
xor
add
add
push
add
sub
add
mov
xor
add
jnp
dec
xchg
test
loopne
pop
add
lret
jecxz
xchg
pop
mov
jmp
clc
decl
clc
mov
jg
push
nop
popf
mov
clc
jbe
add
pop
nop
pusha
add
cwtl
mov
inc
clc
daa
clc
scas
ss
add
pop
push
sbb
ja
push
mov
idivb
or
add
pop
roll
and
add
fisttpl
and
add
mov
dec
jo
add
push
mov
pop
dec
hlt
push
cltd
adc
add
xchg
mov
sub
add
mov
add
ficoml
add
data16
jg
add
xor
jg
clc
pop
cmp
stos
std
cmp
in
xlat
mov
daa
clc
stc
cld
cld
push
add
test
jle
clc
cltd
pop
dec
xor
add
mov
push
add
pop
in
cmp
add
add
icebp
mov
mov
jno
add
clc
xabort
push
add
add
pop
cmp
movsbl
adc
add
int3
int3
add
add
mov
add
movsb
clc
cs
shrl
movsl
clc
mov
jne
clc
push
clc
dec
adc
dec
sti
adc
clc
xor
add
clc
pushf
dec
dec
inc
add
pop
cs
rorl
mov
cmp
inc
clc
sbb
out
jnp
int3
sbb
repz
add
add
add
push
sbb
clc
inc
add
cmovge
mov
clc
repnz
ds
in
insb
push
decl
add
add
clc
pop
mov
sub
add
cld
cmp
inc
add
push
add
xchg
inc
add
dec
mov
ret
clc
mov
popf
cmp
xchg
das
xor
add
add
fs
push
clc
cmc
mov
add
add
mov
xchg
push
aaa
jle
add
pop
dec
xor
add
add
adc
add
clc
fdivl
rolb
sub
or
pop
clc
rorl
sbb
dec
iret
pusha
add
bsf
ret
inc
add
cmp
add
in
imul
mov
clc
adc
add
push
add
clc
cmp
jno
add
add
mov
sub
adc
add
xlat
push
nop
cwtl
mov
add
pop
mov
add
mov
aad
sbb
icebp
adc
add
cmp
shr
cmp
add
std
pop
repz
jmp
hlt
or
sub
clc
adc
add
scas
sti
int
dec
lcall
add
ds
add
icebp
jo
add
add
add
clc
jbe
mov
insb
push
push
outsl
add
cmp
add
adc
add
into
test
add
fnsave
add
inc
clc
loop
cmp
clc
pusha
add
xchg
aad
je
clc
pop
and
out
mov
adc
add
add
add
add
cmp
clc
cmpsb
clc
test
pop
pop
pusha
add
cld
xbegin
aaa
popa
add
jno
add
call
push
imull
clc
fwait
jg
clc
clc
in
mov
inc
add
scas
mov
xchg
push
lahf
mov
ds
push
cmp
jo
add
adc
add
das
outsb
sbb
xchg
mov
add
or
sub
mov
clc
xor
add
mov
add
clc
sbb
cmp
jle
and
mov
lea
dec
cmp
addr16
fs
xor
add
mov
add
add
jl
lods
call
add
pop
adc
add
clc
mov
clc
out
push
add
xchg
lods
mov
and
scas
jo
add
clc
xor
add
mov
movsl
clc
out
push
add
inc
clc
bound
add
xchg
or
sbb
cmp
add
arpl
add
mov
add
add
add
add
shl
clc
inc
clc
dec
push
icebp
push
add
push
das
imul
fdiv
cmp
or
clc
add
sub
inc
add
sahf
test
test
sbb
pop
mov
push
popa
add
inc
clc
push
add
sar
and
add
loope
xchg
out
pop
xchg
movsb
clc
jns
cmp
push
mov
mov
data16
and
clc
bound
add
fbld
jmp
adc
mov
mov
add
dec
mov
movsl
clc
scas
add
add
xlat
into
xor
add
es
test
and
add
sub
ss
fwait
mov
clc
fyl2xp1
clc
cltd
xor
add
das
out
or
popa
add
mov
mov
mov
cmpsl
clc
hlt
dec
mov
add
fdiv
int3
push
add
cmp
add
cld
and
add
clc
mov
clc
xchg
lods
test
jge
mov
clc
fiadds
clc
test
xor
add
cli
inc
add
and
leave
and
add
sbb
push
add
inc
add
mov
icebp
jbe
clc
not
xor
add
xor
leave
push
psllq
es
fdivrs
add
add
xchg
mov
dec
inc
add
sar
lret
xbegin
cmp
clc
add
add
nop
fisubl
clc
dec
daa
clc
loop
fildl
add
jp
jo
add
lods
mov
cmpsl
clc
adc
add
add
clc
cmp
fwait
add
add
add
add
add
cmpsl
clc
cmp
clc
inc
clc
inc
clc
mov
mov
clc
cmpsb
clc
hlt
test
sar
cmp
clc
in
mov
repz
into
inc
add
test
pop
xchg
es
push
lcall
sub
leave
mov
clc
jne
aas
push
add
or
mov
loope
mov
enter
je
cmc
outsl
stos
xchg
pop
and
add
sbb
clc
test
clc
outsl
jb
add
clc
xchg
clc
icebp
cmp
clc
popa
add
ret
clc
push
add
add
sub
add
pop
clc
jle
dec
shlb
add
in
inc
clc
sahf
xor
or
clc
pop
or
sbb
xchg
jns
jo
add
jo
add
xabort
mov
add
cmp
add
clc
and
add
sub
movsl
clc
jo
add
dec
dec
test
inc
add
sbb
imul
rorb
lods
daa
clc
in
inc
add
mov
add
mov
lea
add
sbb
xchg
add
cmp
outsb
lcall
add
shrl
fisubl
je
aas
mov
add
adc
leave
daa
clc
fnsave
mov
aad
add
mov
add
fsubs
jmp
mov
xor
add
add
out
call
add
push
clc
sahf
mov
xor
add
mov
clc
pop
out
cmp
push
std
cli
imul
bound
add
mov
imul
push
add
adc
add
add
sahf
in
sti
sbb
ds
add
daa
clc
mov
add
push
add
dec
stos
cld
movsb
clc
and
add
fs
lret
cmp
xor
add
clc
jge
fs
cwtl
fadds
aam
push
das
popa
add
shll
add
mov
clc
inc
clc
pop
clc
mov
push
add
and
std
sub
add
mov
clc
adc
add
mov
popa
add
cmpsl
clc
in
mov
pop
int
add
adc
add
adc
add
cmp
cmp
gs
add
add
data16
int3
xchg
negl
add
test
dec
cmp
clc
int
outsb
cmp
add
aas
lods
or
clc
push
add
data16
aam
sarb
mov
fwait
scas
clc
stos
jl
lcall
lods
test
loopne
inc
add
insb
and
add
add
testb
add
sarb
xor
add
cmp
rclb
add
adc
add
push
ret
clc
push
pop
shrb
xor
add
add
sar
clc
clc
push
jo
add
clc
mov
push
add
sbb
in
and
mov
add
clc
cmp
in
push
mov
clc
cld
cmp
fcompl
jl
clc
push
inc
add
aas
fcoml
add
ret
clc
insl
push
add
inc
clc
dec
hlt
lock
dec
scas
mov
dec
js
lahf
inc
clc
loope
outsb
pop
inc
add
popa
add
mov
repz
add
clc
mov
clc
xchg
ljmp
out
pop
adc
mov
stos
cmpsl
clc
push
test
clc
jp
mov
pop
or
jg
jne
adc
mov
ss
popf
or
movsl
clc
jae
add
pop
icebp
dec
sarb
sub
clc
pop
and
add
push
clc
push
xchg
sbb
mov
cwtl
daa
clc
cmp
clc
cs
aad
cmp
mov
mov
inc
add
adc
add
cs
add
add
clc
xchg
mov
pop
mov
lcall
jno
add
add
adc
add
clc
call
add
add
add
jle
lret
scas
aam
gs
stos
mov
mov
addr16
ja
dec
add
add
jle
clc
dec
scas
std
dec
adc
add
xor
add
clc
pop
scas
stos
inc
clc
clc
mov
or
dec
mov
push
add
mov
clc
mov
sbb
add
loope
push
and
add
clc
in
outsb
or
jb
add
add
add
xor
add
xlat
jb
add
cmpsb
clc
fucomi
sarl
clc
filds
shll
add
clc
imul
add
clc
adc
add
clc
fisubrl
cmp
clc
pop
fildl
lods
in
repz
shrb
mov
ss
js
clc
cmp
xchg
push
add
nop
outsb
cmp
cltd
push
clc
pop
adc
add
lods
jp
cmc
jg
pop
clc
dec
ret
push
clc
inc
add
or
add
xchg
in
clc
sbb
add
push
add
mov
adc
add
clc
xor
add
xchg
scas
mov
clc
scas
jbe
or
lret
bound
add
ljmp
repnz
clc
inc
clc
and
add
add
mov
adc
jbe
jle
jo
add
cmp
iret
jl
clc
fisttpl
mov
mov
push
mulb
add
insl
or
adc
add
clc
je
clc
std
aaa
test
cmp
shrb
repz
add
cld
mov
clc
cmc
cli
cmpsb
clc
pop
jecxz
das
sbb
aaa
lahf
pop
xchg
jge
nop
cmp
xor
add
clc
fsubp
clc
mov
imul
aaa
outsb
in
fisttps
clc
cmp
clc
lret
add
add
notl
add
aam
add
mov
sahf
add
add
push
add
add
or
stc
std
popf
movsb
clc
dec
and
add
xchg
and
or
test
mov
sbb
add
movsb
clc
push
add
and
add
clc
pushf
xchg
in
lods
xchg
aas
mov
clc
scas
aam
push
add
daa
clc
sub
adc
add
add
arpl
add
cmp
mov
pop
xor
add
add
mov
pop
clc
dec
movsb
clc
js
inc
clc
mov
add
cmc
jnp
add
daa
clc
sbb
jne
add
add
and
add
mov
clc
dec
das
ret
clc
test
cmp
sahf
adc
add
jecxz
jl
clc
sub
mov
xchg
repz
add
or
sbb
mov
clc
mov
push
push
mov
pop
ret
clc
out
aam
push
add
jns
clc
scas
cwtl
loopne
sbb
push
icebp
push
sbb
call
fwait
xchg
jge
fimuls
mov
inc
clc
push
add
ja
sub
xchg
jns
test
inc
add
cmp
clc
inc
clc
cmp
mov
add
jle
cmp
pusha
add
mov
add
mov
sub
sar
add
int3
sbb
push
inc
add
jp
jnp
testb
pop
std
sar
ret
add
enter
and
cmp
loop
adc
add
rolb
inc
add
push
add
clc
es
movlps
add
cmc
sub
xchg
ret
pushf
add
add
leave
addr16
dec
lcall
sbb
out
mov
clc
out
or
add
mov
lods
push
add
mov
add
cli
cmp
loopne
in
clc
cmp
out
dec
inc
clc
out
data16
mov
add
dec
xchg
jo
add
jmp
add
in
jp
add
inc
add
xbegin
lret
clc
daa
clc
loop
or
sbb
clc
mov
add
add
add
clc
into
loop
sub
dec
xchg
pop
bound
add
clc
and
add
cmp
clc
out
jae
add
xor
add
add
add
test
lcall
aad
clc
push
lahf
sub
add
xlat
and
add
clc
mov
daa
clc
mov
add
ljmp
sub
clc
push
cmp
pop
clc
mov
or
cwtl
xor
add
push
add
mov
inc
clc
adc
add
sbb
mov
add
clc
ja
clc
clc
repz
mov
int3
inc
clc
cmp
inc
add
dec
pushf
jno
add
sbb
clc
add
dec
cmp
adc
xchg
add
add
add
mov
add
insl
push
push
add
clc
push
and
add
pop
or
add
jno
lret
call
dec
ja
clc
aas
jb
add
mov
leave
inc
clc
mov
add
clc
jbe
fwait
inc
clc
mov
add
add
fidivrs
add
add
cwtl
and
add
iret
stos
jno
add
cmp
xor
add
clc
aaa
psrlq
popf
loope
adc
add
jno
add
jp
add
jb
add
int3
push
testb
add
add
add
mov
jns
lahf
pop
cli
ds
jmp
out
stos
add
add
clc
lahf
data16
xlat
mov
test
je
add
sub
idivb
dec
fwait
jb
add
add
adc
add
sub
mov
pop
xlat
inc
clc
pop
and
add
nop
cmp
mov
movsl
clc
inc
add
adc
add
jne
clc
sahf
sub
add
sbb
jo
add
add
sub
add
sub
jl
aaa
xchg
add
add
or
insl
sti
cmp
adc
add
push
repz
and
add
imul
add
fistpl
mov
clc
adc
clc
pop
push
jo
add
daa
clc
pop
js
cmp
add
add
in
test
add
push
adc
add
mov
clc
hlt
sbb
in
push
add
loope
enter
sub
add
or
push
shl
mov
jle
clc
sbb
js
ss
add
add
sar
push
sbb
sbb
add
pop
jp
clc
fadds
add
hlt
jae
add
jmp
adc
add
add
sarl
add
mov
add
xor
push
hlt
out
and
add
clc
push
mov
test
mov
pop
enter
pop
outsb
das
lahf
pushf
call
add
push
pop
das
addr16
and
add
out
into
roll
add
pop
rcll
add
sub
inc
add
bound
add
lock
jno
add
xchg
or
clc
loop
sub
push
xor
dec
mov
jns
das
cs
push
add
xor
add
pop
arpl
add
dec
dec
mov
add
cmp
jle
clc
clc
cld
into
push
jle
add
pop
bound
add
dec
fsubs
clc
sahf
xchg
jns
fcoml
add
push
in
pop
cmp
loope
sub
iret
daa
clc
push
inc
add
imul
stos
aas
jl
add
sar
clc
cmp
pop
mov
pop
aad
into
movsb
clc
cmpsl
clc
xchg
push
clc
adc
mov
xor
add
scas
mov
add
test
test
fadds
es
cmp
pop
pop
and
add
clc
mov
jecxz
dec
sahf
mov
aad
test
rcr
inc
add
scas
pop
inc
add
rcrb
xchg
js
ljmp
aas
cmp
mov
jecxz
mov
or
clc
xor
ss
sbb
xor
add
aaa
lods
jle
popf
add
add
jb
add
fldt
add
add
clc
adc
add
inc
add
insb
inc
add
in
scas
test
aas
push
add
in
lea
mov
sbb
push
sbb
clc
and
add
add
pop
pushl
hlt
out
sbb
add
mov
nop
jecxz
inc
clc
into
jmp
add
lcall
pop
daa
clc
outsl
sbb
clc
ret
cwtl
loop
test
clc
push
pop
cmp
add
jo
add
and
add
fisubrl
clc
mov
inc
add
adc
clc
das
or
add
stc
decl
icebp
cmc
sbb
mov
mov
clc
test
and
jmp
add
sub
add
call
icebp
mov
repz
std
push
sub
clc
test
xor
add
add
cmpsl
clc
sbb
or
inc
clc
and
test
lods
ljmp
repnz
clc
cmpsb
clc
dec
xlat
clc
int
mov
cmp
clc
push
clc
out
inc
add
jo
add
add
mov
add
add
adc
add
cmpsb
clc
push
push
inc
clc
or
clc
push
clc
cli
mull
clc
mov
cmp
clc
movsb
clc
push
clc
cwtl
in
mov
adc
add
add
pop
cmp
ljmp
clc
lcall
jb
add
add
loop
mov
add
add
xchg
es
pop
xchg
aad
sbb
mov
stos
es
insl
imul
jl
bound
add
clc
push
add
sbb
aam
cmp
dec
and
ss
int3
fistps
pop
cmp
addr16
frstor
add
clc
and
xchg
sub
leave
jbe
es
pop
dec
xabort
test
test
add
dec
jecxz
and
add
xchg
push
mov
clc
dec
and
add
add
clc
das
ffree
clc
jnp
rolb
add
push
sub
add
pop
js
mov
std
lcall
clc
cmp
clc
adc
add
clc
pop
scas
sar
insl
data16
in
fwait
ret
clc
shll
ret
clc
mov
lcall
clc
gs
pop
mov
popf
xchg
imul
jecxz
mov
lock
das
jns
clc
pop
push
mov
into
sub
gs
push
add
hlt
in
fstpl
jmp
test
inc
clc
xchg
sub
fnstcw
hlt
sar
inc
clc
lret
add
shrl
inc
clc
mov
divb
sbb
nop
dec
push
add
add
pop
sub
mov
push
add
inc
add
roll
add
add
add
xor
add
pop
inc
add
mov
add
sbb
bound
add
add
fistpll
arpl
add
pop
cmp
out
cmp
add
adc
add
add
int
es
and
add
pop
and
add
mov
clc
xchg
es
adc
mov
add
add
add
jmp
clc
outsb
sub
out
xbegin
add
add
add
add
add
push
clc
lods
mov
fisubrl
sub
clc
jl
pop
aas
das
xchg
or
aam
clc
lea
adc
add
fidivrl
dec
pop
jp
movsl
clc
xbegin
popf
jne
stc
jnp
fstp
xchg
xlat
mov
cmp
clc
arpl
add
clc
pop
push
xchg
or
add
pop
cmp
add
cmp
cs
gs
fisubl
add
push
cmc
jmp
das
std
sbb
clc
and
add
lods
xor
adc
add
xchg
inc
add
jns
sbb
add
das
dec
sbb
clc
loop
lret
hlt
fistpll
clc
sar
sldt
add
add
add
add
clc
lock
xor
add
out
icebp
sub
lcall
push
mov
stos
gs
daa
clc
clc
pop
xchg
mov
cmp
icebp
hlt
mov
clc
aas
xbegin
ror
push
add
dec
movsl
clc
sti
push
add
sar
jecxz
push
clc
jl
add
mov
pop
push
add
aaa
stos
mov
ret
clc
push
jo
inc
add
jecxz
xabort
notb
add
and
pop
cmp
xchg
xchg
bound
add
add
clc
je
and
cmp
add
shll
mov
push
add
push
arpl
add
add
add
clc
or
pop
sar
mov
xor
add
push
add
pop
out
jns
clc
cmpsl
clc
push
fs
push
add
add
clc
mov
jecxz
cmp
jae
add
and
add
jns
icebp
sbb
xor
add
add
add
push
add
sbb
clc
inc
add
fsts
clc
cltd
xchg
cmp
dec
je
xchg
mov
jbe
add
inc
add
xchg
clc
ds
jb
add
stc
mov
clc
fistps
ret
clc
jns
add
cmp
push
adc
add
hlt
xor
add
inc
add
add
add
clc
popf
xor
cmp
clc
fldl
clc
mov
clc
ret
clc
pop
mov
fistpll
add
add
clc
filds
and
idiv
insl
push
sbb
jbe
out
es
cmc
xor
add
dec
iret
shll
add
testb
jp
cmc
addr16
popf
ss
clc
xor
add
popf
jae
add
add
jl
mov
cmp
jns
clc
sub
movsb
clc
jae
add
clc
lcall
roll
mov
clc
xchg
inc
clc
fsubrp
sub
clc
aam
or
fucomi
cld
push
add
or
clc
and
add
mov
jns
mov
xchg
mov
add
popa
add
jge
add
cmp
sbb
add
shlb
add
add
adc
jnp
mov
jge
clc
mov
add
jl
lahf
shrl
je
clc
fld
clc
jns
clc
pop
mov
stos
in
in
sahf
sub
add
add
clc
in
or
pop
adc
add
loope
outsl
fwait
xor
add
fisttpll
clc
addr16
mov
xchg
cmpsl
clc
daa
clc
sarb
mov
js
push
inc
clc
loop
sahf
cmpsb
clc
outsb
mov
add
je
clc
xor
jns
cmpsb
clc
aas
or
clc
sub
add
clc
xor
add
fdivs
adc
sar
outsb
pop
sbb
add
je,pn
jge
mov
data16
mov
cmc
das
ljmp
clc
fstpt
fimuls
pop
cmp
add
jge
clc
mov
jae
add
mov
add
data16
lods
jns
in
push
call
add
inc
add
sbb
out
lret
pusha
add
mov
adc
add
add
insb
repz
clc
jle
aaa
mov
leave
cmp
mov
ds
sbb
lahf
pop
adc
add
xor
add
add
push
adc
add
mov
ret
add
push
add
xor
add
movsb
clc
call
add
pop
dec
stc
cmpsb
clc
in
aaa
or
or
mov
clc
clc
inc
clc
inc
clc
pop
out
and
xchg
cmc
ljmp
lock
shlb
clc
scas
lea
js
fdivrs
insb
jae
add
adc
add
add
jns
rorb
test
dec
xchg
cmp
add
add
add
int
jp
clc
lret
and
add
ja
xchg
lods
mov
in
stos
dec
or
add
add
mov
and
jns
xor
add
cmp
gs
push
add
xchg
cmovs
adc
add
push
clc
ret
ret
sar
clc
push
clc
jbe
add
pusha
add
ja
clc
jmp
clc
push
xor
clc
dec
loopne
call
mov
enter
inc
add
fistpll
xlat
or
inc
clc
push
add
mov
mov
mov
add
add
add
add
int3
inc
add
jae
add
inc
add
mov
je
adc
mov
add
iret
push
xor
jne
add
push
lahf
jne
mov
mov
xor
out
gs
add
add
stos
leave
fucomi
in
sbb
xbegin
add
inc
clc
jo
add
clc
cmp
clc
movsl
clc
dec
repz
mov
clc
and
add
add
dec
sub
sub
loopne
mov
sub
in
jg
fidivs
testb
sbb
jle
clc
mov
repnz
call
outsb
inc
add
inc
add
sbb
xor
into
or
popf
sbb
das
cmp
dec
mov
add
dec
jle
clc
in
out
jno
add
popf
jnp
adc
add
and
jle
shll
stos
cmpsl
clc
aam
insl
push
adc
add
lods
test
insl
hlt
imul
add
aaa
mov
sbb
pop
clc
pop
mov
or
js
clc
sub
add
add
add
in
je
je
lock
clc
sti
int3
dec
scas
mov
pop
sbb
add
or
dec
stc
fwait
push
mov
add
push
sbb
clc
ljmp
add
ret
clc
inc
add
scas
hlt
cmp
add
mov
lods
es
out
dec
xchg
popf
mov
gs
jmp
loope
or
clc
xor
push
add
or
idivl
mov
add
cmp
add
call
insl
gs
xchg
cmp
xor
add
mov
add
dec
pop
adc
clc
cmpsl
clc
mov
jae
add
add
add
test
je
push
push
out
mov
add
xchg
mov
mov
add
dec
sub
clc
out
bound
add
adc
add
clc
adc
add
xor
add
add
stos
xchg
xlat
push
clc
and
add
clc
ds
xor
add
clc
jns
clc
je
aad
and
add
clc
and
or
test
and
dec
mov
clc
sbb
xbegin
clc
xor
add
add
clc
mov
xor
add
clc
out
mov
add
cmp
iret
sti
out
insl
in
mov
das
fsubs
add
fdivrs
icebp
outsb
pusha
add
pop
pop
out
push
xchg
push
mov
add
sub
mov
push
mov
loope
xlat
sub
clc
add
add
loope
sar
xabort
mov
insb
js
mov
dec
push
add
cmp
hlt
add
xchg
test
movsl
clc
mov
dec
mov
insl
mov
je
jbe
xor
add
xchg
pop
add
add
add
mov
int
clc
loope
ds
push
mov
fadds
cmp
aaa
xchg
or
ja
sub
es
cltd
shrl
dec
sub
sar
pop
add
add
test
push
or
sbb
clc
rcl
mov
sub
pusha
add
iret
push
clc
mov
add
add
push
lret
sub
clc
and
add
sti
pop
clc
sti
jp
add
add
jno
add
add
loopne
dec
jmp
cs
clc
sub
cwtl
inc
clc
cs
cmp
xchg
sbb
clc
lret
movsb
clc
ficoms
jb
add
insb
cmp
pop
sbb
fists
xor
add
clc
inc
add
fsub
clc
cmp
add
ds
cmp
aas
mov
mov
cmpsb
clc
icebp
mov
sbb
clc
or
add
imul
add
clc
xchg
sar
jae
add
or
cmc
push
add
aad
sub
repz
add
mov
add
bound
add
add
cwtl
mov
add
and
xchg
xchg
or
clc
xchg
mov
mov
pop
xor
add
fwait
clc
mov
push
clc
mov
clc
xchg
mov
jno
add
fdivl
gs
pop
xabort
add
add
mov
add
cmp
add
add
jo
add
stc
rcll
add
js
push
add
lahf
sub
lea
add
lea
add
clc
or
push
setbe
add
fwait
and
ss
push
clc
ret
ret
clc
sbb
cmp
movsb
clc
sub
int3
fcmovnu
cld
bound
add
add
divl
mov
push
ficoms
idiv
in
das
scas
repnz
add
pop
clc
lock
ljmp
add
add
cmp
pop
jbe
add
test
mov
clc
cmp
add
clc
in
and
add
into
sub
lods
cmp
pop
mov
dec
insb
mov
clc
pushf
add
add
push
es
pop
clc
int
add
mov
clc
bound
add
pop
dec
push
clc
pop
jne
add
flds
add
cmc
and
add
inc
clc
cwtl
jecxz
out
cmp
add
xchg
cld
jne
clc
lods
loope
test
cli
std
xchg
pop
and
add
add
push
xor
add
cmp
jmp
xlat
int3
nop
xor
add
scas
jg
clc
pop
push
add
mov
stc
clc
in
in
daa
clc
clc
fldenv
sti
sbb
add
sbb
clc
mov
clc
push
add
repz
add
jne
test
dec
rcll
xchg
or
sahf
adc
add
clc
repz
add
add
add
add
add
jmp
cli
lahf
cmp
jle
clc
mov
inc
clc
imul
mov
add
inc
add
shrb
jl
and
clc
add
clc
sarb
add
in
xlat
and
decl
lret
das
cmpsl
clc
insl
xabort
clc
mov
xchg
out
adc
add
and
repz
add
test
aam
or
dec
in
cmp
add
arpl
add
pop
lahf
jmp
jns
test
jb
add
clc
push
fs
cmp
sub
ljmp
fmuls
add
clc
pop
mov
xor
add
es
insl
mov
add
xchg
repnz
sahf
jns
lods
popf
sbb
out
push
sbb
pop
add
or
clc
popa
add
push
stos
dec
and
or
jle
dec
xor
add
clc
adc
add
mov
ljmp
push
xchg
ss
lea
rcrb
stos
or
arpl
add
clc
in
fcomip
mov
clc
cli
add
add
icebp
sti
lret
insb
std
lcall
clc
call
sub
add
mov
mov
adc
add
sub
add
lock
clc
into
jp
insb
jle,pt
roll
mov
sarl
lea
add
es
stos
pop
ljmp
or
push
add
pop
sar
clc
adc
add
stc
pop
rcl
std
fsts
jp
add
push
mov
add
add
add
sub
xor
add
clc
out
test
add
into
jne
mov
cwtl
dec
cwtl
shr
sub
clc
cmp
cmp
push
adc
add
add
data16
stc
and
add
clc
in
push
scas
push
add
stc
xor
add
dec
es
sub
add
sub
add
pop
push
mov
xchg
xchg
inc
add
fildl
clc
popf
aas
sbb
add
dec
cmp
or
lods
and
add
sar
mov
cmp
sbb
add
cmpsl
clc
cmp
dec
cmp
clc
aad
insb
or
mov
clc
mov
clc
sbb
add
push
add
dec
sahf
mov
adc
insb
sar
add
mov
add
add
add
mov
add
add
add
add
inc
clc
or
add
add
out
js,pt
and
add
and
add
loopne
jl
std
pop
cmc
pop
pusha
add
add
clc
cmp
cmpsb
clc
fmul
inc
clc
mov
clc
pop
mov
rorl
xchg
sbb
mov
xchg
jg
cmp
mov
add
xchg
out
fstpl
lock
divl
add
repz
leave
out
in
xor
add
dec
sbb
add
cmpsb
clc
mov
sbb
cmp
outsb
push
inc
clc
imul
clc
out
cmp
jne
mov
clc
incb
inc
clc
or
and
enter
clc
jno
add
out
mov
bound
add
sub
xchg
aas
addr16
shll
clc
jno
add
add
add
nop
cmp
adc
add
mov
xchg
and
pop
xabort
clc
xor
clc
test
cltd
ss
in
iret
and
add
add
add
add
std
dec
xor
clc
sbb
clc
test
add
cmp
add
lods
or
add
sub
add
lret
xchg
and
add
add
add
add
push
sub
add
jbe
mov
clc
add
pop
inc
clc
mov
mov
clc
push
test
clc
call
shl
bsr
fadd
clc
mov
rolb
pop
sbb
add
hlt
arpl
add
clc
mov
pop
dec
add
add
clc
shll
sbb
imul
clc
mov
xchg
js
nop
sub
cltd
inc
clc
push
in
jno,pn
add
mov
nop
dec
ds
jg
or
clc
add
add
loop
mov
cmp
scas
mov
imull
clc
movsb
clc
ja
add
rclb
add
pop
sub
add
je
fdivr
fcmovb
clc
mov
dec
push
pop
push
cmp
clc
test
into
sti
loop
sub
xlat
lcall
xlat
icebp
insl
arpl
add
jnp
clc
loopne
imul
enter
mov
add
fsubrp
and
add
popf
mov
ds
add
repnz
sub
pop
clc
dec
ljmp
into
jno
add
hlt
xbegin
sbb
add
mov
cmp
inc
clc
scas
sbb
stos
mov
or
frstor
add
arpl
add
add
in
dec
and
add
lock
add
int3
lret
fmuls
or
lods
fsubrl
clc
dec
ja
mov
bound
add
add
jns
clc
enter
test
add
mov
cltd
dec
dec
addr16
pop
aad
xor
add
clc
mov
out
hlt
mov
inc
add
mov
add
out
pop
inc
add
test
fdivr
xor
jne
add
push
add
dec
mov
lahf
pop
jl
sbb
add
movsb
clc
fstpl
pop
je
clc
loope
inc
clc
jmp
dec
jbe
clc
jl
call
out
or
inc
add
adc
add
lahf
jns
clc
jl
add
incb
icebp
setb
xlat
int
clc
call
add
mov
out
push
out
dec
inc
add
add
clc
aam
or
clc
inc
add
push
idivb
pop
push
xchg
cmp
imul
add
jb
add
xabort
add
and
add
add
popf
cli
int3
mov
sub
outsb
sahf
push
std
jne
test
test
xchg
icebp
stos
imul
cmp
add
adc
add
add
lcall
add
clc
fsubl
add
add
or
add
add
imul
xor
add
add
add
add
or
loopne
and
add
and
xchg
dec
outsl
sub
clc
xlat
mov
xchg
stos
mov
shrb
std
cltd
sbb
jno
add
sar
nop
xchg
cmp
mov
ret
clc
hlt
mov
clc
daa
clc
dec
push
jmp
clc
pop
stos
or
add
stos
lret
cmp
clc
inc
add
jnp
lahf
jmp
sar
push
sub
pop
mov
lret
adc
dec
mov
pusha
add
mov
lret
add
jle
jecxz
and
pop
outsl
and
cwtl
dec
mov
enter
mov
add
arpl
add
add
mov
add
add
add
enter
push
add
gs
cmpsl
clc
in
jnp
daa
clc
jo
add
clc
clc
dec
jae
add
out
jns
clc
into
fs
pop
clc
loop
dec
es
jmp
clc
fistps
mov
clc
mov
add
iret
xor
lea
add
mov
clc
mov
clc
sub
adc
add
in
out
rcrl
ljmp
add
fistpl
ret
xabort
mov
pop
clc
jmp
cmp
mov
inc
clc
pop
cmp
jns
cmp
clc
xchg
dec
mov
jecxz
pop
fidivs
xbegin
add
add
inc
clc
fs
mov
clc
xchg
dec
sar
add
mov
mov
loope
scas
outsb
lods
inc
add
dec
mov
xchg
bound
add
push
sbb
or
ud1
imul
add
icebp
sarl
cli
push
clc
pop
clc
movsb
clc
add
cmp
clc
cmp
cmpsl
clc
pop
push
clc
lret
test
rorb
clc
call
popa
add
mov
pop
cmp
xchg
adc
add
dec
add
add
add
fldl
add
clc
bound
add
sar
clc
in
mov
jecxz
sbb
push
rcl
das
aaa
cwtl
test
clc
sarb
out
fimuls
ss
clc
faddl
xor
clc
aad
out
scas
mov
add
idivb
mov
ret
clc
imul
clc
mov
mov
clc
dec
sub
add
mov
add
mov
nop
mov
clc
jmp
add
push
add
int
fisubl
icebp
pause
mov
push
inc
clc
jge
clc
ja
clc
mov
clc
push
pop
int
add
xor
clc
mov
add
repz
or
dec
lods
add
add
xor
ret
inc
add
mov
clc
je
jecxz
int3
xor
add
add
push
clc
mov
aad
jp
mov
push
xlat
imul
mov
cmpsb
clc
ret
clc
and
add
int3
jns
add
pop
push
mov
addr16
lret
xchg
pop
std
adc
add
cmp
int
aam
add
mov
xabort
add
in
out
pop
adc
add
xor
add
dec
mov
push
jnp
clc
xchg
mov
add
sbb
add
es
dec
mov
push
inc
clc
sub
mov
xor
add
mov
add
lret
icebp
cmc
mov
add
add
clc
imul
clc
arpl
add
add
clc
mov
pusha
add
xchg
test
xchg
out
aas
out
mov
dec
mov
in
add
add
sub
xchg
add
xchg
mov
adc
add
pushf
fbstp
add
mov
clc
mov
repz
sub
xchg
int3
xchg
and
add
or
clc
mov
add
add
test
jbe
mov
outsl
repnz
mov
bnd
dec
xchg
cmp
lods
mov
xchg
imul
add
dec
cld
push
pop
xchg
cwtl
shlb
insl
imul
cmpsl
clc
xor
add
icebp
scas
fildl
pop
or
add
xbegin
push
clc
dec
and
add
add
add
mov
lods
out
pop
clc
ret
clc
fucomip
in
adc
add
addr16
clc
pop
clc
or
sbb
xor
out
pop
clc
aaa
jg
mov
clc
arpl
add
and
add
std
adc
add
add
fbld
clc
movsb
clc
mov
add
sbb
xlat
or
fidivrl
add
sbb
out
sub
sbb
clc
sbb
clc
adc
add
cmp
insb
jecxz
xchg
sub
add
fldenv
add
in
adc
add
cmc
mov
sbb
jbe
inc
clc
mov
jae
add
cmp
stos
das
data16
lea
clc
ficompl
clc
cmpsb
clc
xor
add
clc
cmp
cltd
call
clc
sbb
clc
mov
ljmp
sar
clc
add
add
mov
dec
mov
clc
bound
add
clc
inc
clc
and
mov
int3
pop
sti
jge
stc
in
sbb
xor
repz
xchg
clc
mov
add
mov
clc
ret
clc
pop
mov
add
inc
add
cmp
enter
clc
push
aas
repnz
jnp
add
jle
sarb
dec
xor
add
cmp
cmc
push
scas
sub
cltd
setno
repz
mov
push
clc
test
inc
clc
jge
cmp
add
out
mov
add
add
add
cmp
lods
fstps
mov
or
jl
jns
add
cmp
jp
cmp
clc
lods
test
clc
pusha
add
sti
or
jbe
lcall
clc
push
ret
clc
dec
mov
dec
roll
add
clc
aas
aas
mov
std
push
add
mov
lret
add
add
add
add
fnstenv
add
or
add
push
adc
add
mov
test
lret
add
sar
fsubrs
mov
add
pop
add
add
jae
add
add
cmp
mov
mov
mov
scas
scas
daa
clc
lock
add
clc
in
lcall
add
clc
es
xlat
addr16
xchg
xabort
clc
in
or
mov
xchg
scas
adc
add
clc
jecxz
inc
add
sbb
xchg
cmp
add
fiadds
and
mov
out
movsl
clc
rol
clc
mov
bsf
mov
mov
add
or
add
adc
clc
repnz
add
icebp
je
clc
mov
clc
xchg
jo
add
mulb
add
unpcklps
add
test
js
push
clc
xbegin
mov
lea
add
outsl
loope
sub
movsl
clc
ror
push
push
add
sahf
add
leave
fwait
loop
sub
xor
add
add
add
loop
dec
push
add
mov
jp
xchg
ret
clc
xor
add
or
xbegin
movsb
clc
jo
add
bound
add
sub
fs
call
mov
clc
cmpsb
clc
cmp
lods
cmp
xbegin
aaa
pushf
dec
push
out
ljmp
movsb
clc
xchg
sbb
repnz
xchg
and
cmpsb
clc
out
std
popf
cmp
cmc
int3
inc
clc
inc
clc
add
add
aas
mov
add
clc
in
cmp
push
pusha
add
std
add
add
mov
inc
clc
inc
add
pop
or
dec
dec
mov
add
push
add
mov
call
sub
clc
cmp
mov
test
arpl
add
add
push
pop
mov
add
pop
adc
add
in
jo
add
clc
or
add
and
add
push
add
outsb
cld
test
adc
add
cmp
dec
or
push
add
xchg
mov
clc
scas
sub
clc
xor
add
aas
sar
add
xchg
test
divb
add
clc
clc
sbb
mov
add
popa
add
jno
add
shl
clc
test
add
push
clc
xchg
ljmp
add
cwtl
std
imul
jo
add
push
mov
lcall
enter
insb
mov
add
cltd
adc
add
cmp
paddusw
and
pushf
xchg
sub
clc
and
add
scas
fs
cmp
test
mov
add
add
test
lock
outsl
test
add
clc
push
cmpsb
clc
js
jns
clc
jge
and
add
pop
push
mov
sar
pushf
xchg
pop
push
clc
mov
inc
clc
push
out
jbe
movsl
clc
stos
pop
adc
add
clc
dec
cmp
push
shll
stos
xor
add
clc
push
clc
xchg
push
add
pop
dec
add
add
clc
aaa
test
popf
test
or
push
add
aam
sbb
mov
adc
ss
add
add
pop
fnstcw
add
test
cmp
push
add
test
insb
adc
add
sub
lods
push
add
cmp
clc
pop
imul
cmp
movsb
clc
xbegin
sar
fisttpll
fisubrl
cld
fcoms
add
inc
add
adc
add
clc
and
add
clc
push
jb
add
scas
push
add
or
push
repz
add
stos
and
in
mov
add
sub
clc
push
or
jae
add
clc
inc
clc
xchg
sub
pop
movsl
clc
shlb
hlt
mov
ss
mov
clc
or
pop
in
xchg
sbb
clc
push
sub
xbegin
icebp
idivl
fs
inc
clc
ds
push
sbb
clc
mov
add
sub
pop
xor
cmp
clc
jmp
xchg
mov
pop
fimull
add
fs
sbb
outsb
jecxz
loopne
mov
lret
fwait
pop
xchg
push
cmp
fildll
clc
pop
aas
iret
adc
add
xchg
insb
inc
clc
ret
clc
dec
gs
pop
rcrl
add
mov
cltd
cmp
dec
or
or
es
jnp
sar
sub
xchg
cmpsl
clc
insl
jo
add
add
mov
imul
add
scas
cmp
xor
add
and
add
mov
and
add
add
adc
add
add
push
cmc
cmpsl
clc
rorl
movsb
clc
and
mov
sub
xabort
clc
lcall
clc
test
add
add
sar
sar
clc
out
adc
add
inc
clc
and
add
out
pushf
add
add
outsl
arpl
add
clc
sbb
loopne
imul
mov
fnstenv
add
scas
mov
movsl
clc
ficompl
add
clc
gs
jnp
push
clc
jbe
add
add
sbb
mov
inc
clc
inc
add
aas
fcomip
jo
add
add
clc
jmp
add
insl
xchg
jns
pop
and
jno
add
adc
add
lock
xlat
sti
cmp
sbb
addr16
cmc
push
cmp
and
add
xchg
xor
add
add
data16
push
in
cmp
jp
fwait
movsb
clc
test
jno
add
js
hlt
push
add
add
out
fiaddl
nop
mov
xchg
pop
iret
cwtl
and
add
pop
popf
sbb
sar
pop
sbb
in
repz
xchg
addr16
pop
xchg
mov
clc
and
add
add
dec
ror
xchg
jge
in
lret
test
gs
out
int
add
fwait
inc
add
mov
clc
push
add
jmp
clc
testb
lret
mov
test
nop
stos
dec
push
add
xor
cwtl
xlat
or
xor
add
add
add
add
pop
mov
shll
or
jo
add
jl
shrl
in
mov
clc
ds
xor
add
sar
cmp
add
inc
add
data16
mov
clc
cmc
sahf
es
call
inc
add
push
fs
sbb
xbegin
jb
add
rcll
jo
add
add
leave
cpuid
clc
mov
idiv
in
cld
sbb
js
sbb
add
addr16
mov
clc
or
stos
cltd
or
movsl
clc
sahf
push
pusha
add
js
mov
rcrl
pop
mov
std
adc
add
add
or
clc
inc
add
pop
push
add
mov
pop
insb
rcrl
cmp
xor
add
sti
inc
clc
jg
clc
cmp
pavgb
aas
roll
clc
neg
scas
lock
xchg
xchg
add
add
add
add
add
mov
ja
dec
jbe
clc
into
inc
clc
test
sar
clc
pop
mov
pop
jno
add
lret
sahf
incl
add
push
mov
push
fsubp
clc
rolb
pop
ljmp
add
and
add
add
dec
inc
add
mov
cmpsb
clc
cmp
pop
scas
fidivl
daa
clc
mov
aam
mov
add
clc
mov
cltd
outsl
loope
out
mov
or
clc
cmp
fs
dec
adc
add
and
xchg
add
add
mov
cmp
xbegin
clc
dec
and
add
add
repnz
lret
mov
jmp
add
or
add
cmp
repz
adc
add
dec
sbb
std
dec
mov
dec
jge
add
xor
add
adc
add
fisubs
test
add
cmp
mov
ss
add
out
lret
add
loope
pop
push
aas
push
mov
jnp
clc
push
add
jmp
jp
clc
jae
add
add
mov
outsb
xchg
xor
add
pop
lock
xbegin
push
add
jp
push
add
sbb
enter
clc
mov
jmp
mov
add
jb
add
add
add
add
add
clc
sbb
out
cld
jno
add
fwait
repnz
add
pusha
add
cmp
clc
push
add
cmp
aas
mov
scas
mov
add
xchg
mov
in
ss
bound
add
add
inc
add
lods
xchg
inc
add
sar
out
loop
mov
cmpsb
clc
pop
add
cmp
mov
dec
fldenv
fisttpll
push
add
ljmp
fwait
jo
add
test
jnp
clc
pop
mov
add
or
sub
add
outsb
sub
ja
es
je
clc
mov
mov
jo
add
inc
clc
rol
clc
lods
add
add
xor
add
and
add
lock
add
sbb
cmp
adc
outsb
or
add
ficoml
je
mov
dec
jns
aaa
pushf
arpl
add
mov
fdivr
ljmp
lahf
insb
sar
add
pop
ljmp
sub
sbb
push
push
arpl
add
add
xor
gs
mov
jnp
mov
jne
adc
neg
xabort
clc
cmc
dec
sahf
or
int
mov
shrb
add
cli
xchg
dec
dec
inc
clc
jecxz
mov
jge
push
add
xchg
imull
cmp
cmp
mov
inc
clc
sbb
add
dec
or
jecxz
sub
clc
jnp
clc
aaa
sbb
pop
pop
and
add
shlb
clc
pop
stos
sub
pusha
add
in
jns
cwtl
in
pop
cmp
iret
add
cmp
ret
add
cmc
jg
clc
clc
xchg
repz
imul
std
push
ljmp
add
push
pop
push
sub
dec
lcall
clc
jle
aaa
movsl
clc
fiaddl
add
add
pop
jo
add
jecxz
push
cmp
pusha
add
xchg
enter
jp
clc
sti
xabort
mov
cmp
cltd
push
pop
faddl
test
jmp
clc
xchg
lret
push
clc
shlb
dec
lret
sbb
adc
add
sub
movsb
clc
rclb
add
movsl
clc
lcall
clc
add
add
lock
add
out
cmp
aam
pop
inc
add
push
sub
aam
clc
jmp
add
iret
ja,pt
lock
cmp
clc
sub
in
clc
fstp
jb
add
fdivp
xor
jl
add
mov
insl
xchg
dec
xchg
mov
fucom
clc
movsb
clc
int3
and
add
lahf
push
in
xchg
fidivrl
add
pop
ja
inc
add
test
push
sti
lods
incl
clc
mov
mov
test
add
add
add
add
add
and
add
lret
fs
ret
clc
movsl
clc
inc
clc
out
mov
inc
add
xor
pushf
sbb
push
clc
data16
cmp
sldt
add
and
add
push
stos
fistl
pop
movsl
clc
lock
clc
jnp
mov
push
leave
xor
add
or
sbb
add
pop
mov
clc
jle
clc
cwtl
loop
faddl
lret
cltd
test
jmp
clc
jmp
add
add
and
add
add
cmp
add
add
das
mov
clc
sub
xor
add
dec
imul
jo
add
inc
add
adc
add
jno
add
gs
pushf
lahf
and
not
or
clc
sbb
xabort
jl
clc
push
pop
xabort
add
add
js
icebp
outsb
insl
adc
add
add
and
add
add
xor
add
adc
addr16
dec
mov
mov
outsl
jno
add
add
add
push
clc
xor
pop
dec
aam
clc
pushf
pushf
sbb
pop
and
add
test
das
arpl
add
add
mov
sub
push
out
or
scas
inc
clc
sbb
pop
inc
clc
data16
or
fstl
add
lcall
clc
test
add
test
dec
xor
add
clc
jp
clc
sub
pop
je
clc
dec
pusha
add
mov
clc
cmp
or
clc
outsl
and
add
clc
bound
add
add
inc
clc
cmp
fidivrl
clc
mov
clc
xchg
mov
add
clc
xchg
xabort
jecxz
loop
ret
clc
out
cmp
pop
dec
cli
in
test
cmp
jo
add
clc
jp
add
dec
and
add
mov
clc
dec
adc
cmp
clc
jo
add
clc
insl
adc
add
fwait
pop
clc
push
add
loop
mov
mov
add
fucomi
out
mov
test
xor
add
clc
lret
out
cmp
imul
dec
fstl
clc
cmp
test
clc
cli
dec
xchg
mov
clc
rorb
add
in
std
xabort
clc
pop
fidivs
test
lods
push
rcll
add
xchg
mov
int3
adc
add
xchg
xlat
jb
add
sbb
jle
fs
fimull
add
clc
iret
lcall
sar
fisttps
imul
add
aam
leave
push
arpl
add
clc
cmp
ja
fst
inc
clc
clc
addr16
jns
add
mov
fstl
jo
add
sbb
mov
xchg
icebp
pop
add
add
clc
mov
popl
add
clc
dec
adc
add
jg
movsb
clc
cmpsb
clc
sar
add
sub
add
mov
stc
lahf
add
add
add
clc
mov
clc
test
jae
add
mov
add
add
popa
add
mov
add
add
cmp
clc
ja
cmp
jg
clc
pop
ret
divl
add
xchg
rcr
pop
sahf
int
add
sar
sub
xchg
and
add
add
add
add
pop
push
add
std
stc
or
je
xor
adc
adc
add
add
add
push
mov
add
add
push
clc
or
clc
mov
clc
xor
add
clc
jge
clc
inc
add
inc
clc
dec
push
clc
push
fst
pop
xchg
movsl
clc
cld
cmp
ds
clc
sub
imul
outsl
sbb
cmpsl
clc
inc
add
xor
sub
clc
movsl
clc
jbe
notb
add
repnz
icebp
xchg
dec
hlt
or
data16
sar
xlat
jnp
ljmp
pop
stc
xlat
fwait
loope
sarl
mov
adc
add
add
test
and
add
fidivs
add
scas
cmp
pop
add
add
in
jnp
push
lea
lret
pop
scas
enter
mov
clc
jae
add
in
ret
clc
push
cmp
xor
lahf
outsb
or
in
clc
fs
pop
ds
push
add
add
bound
add
mov
cltd
cmp
add
add
fs
pop
adc
add
add
imul
add
mov
add
xlat
lret
data16
push
add
repz
add
mov
clc
scas
pop
clc
xabort
js
clc
cwtl
fs
pop
mov
cmpsb
clc
jle
clc
xchg
sbb
sbb
clc
data16
ljmp
clc
mov
sbb
inc
clc
je
add
out
stos
mov
aas
inc
add
add
add
clc
leave
aad
cmp
lahf
cmp
cmp
pop
clc
imul
adc
add
cmc
sbb
add
mov
add
fucomi
pop
clc
ljmp
mov
jb
add
loopne
cmp
sbb
shl
clc
inc
clc
enter
lahf
mov
lret
popa
add
mov
loopne
inc
clc
mov
clc
sub
adc
add
leave
add
add
pusha
add
aam
dec
xor
add
add
cwtl
xor
add
insl
test
add
jmp
clc
add
add
add
mov
ja
lcall
jmp
pop
lock
add
ret
clc
or
test
stos
adc
jp
sar
and
add
push
clc
sub
clc
daa
clc
pop
mov
add
add
add
or
clc
add
add
rcl
dec
mov
clc
mov
add
fcmove
push
add
fldcw
inc
clc
lock
in
int3
jge
xchg
mov
add
clc
sub
add
add
test
stos
arpl
add
in
push
jb
add
aad
add
insl
sbb
clc
pushf
outsb
xchg
push
add
push
adc
ret
clc
aaa
rcr
popa
add
cmp
add
std
outsl
push
clc
xchg
sbb
pusha
add
shrb
shr
ja
add
ja
sub
sub
test
fisubs
add
xchg
adc
lods
cmp
mulb
add
add
adc
add
jle
cmp
xchg
loopne
cwtl
inc
add
aad
clc
adc
add
add
pushf
in
dec
call
in
mov
add
clc
mov
jns
jo
add
popf
sbb
pmuludq
nop
adc
add
imul
sub
mov
add
mov
add
loop
loope
mov
arpl
add
int
addr16
cmp
clc
dec
xchg
push
and
sarb
push
fcomps
mull
add
test
pop
leave
or
add
dec
cld
xor
clc
arpl
add
clc
enter
daa
clc
or
clc
ret
clc
sub
popf
and
add
stos
sub
xchg
insb
fsubl
inc
clc
mov
add
clc
sbb
cmp
push
mov
add
stos
dec
repz
jecxz
js
sub
inc
clc
cmc
xchg
out
in
idivl
lahf
xor
add
inc
clc
aas
mov
in
lcall
loop
mov
add
add
jecxz
xchg
outsl
dec
movsl
clc
and
mov
lcall
mov
cmpsl
clc
enter
clc
pop
xchg
out
cmp
clc
push
inc
clc
xor
add
sub
sar
loopne
out
lea
popf
scas
repz
outsb
imul
add
sti
fs
dec
imul
xor
jp
cld
inc
clc
fmull
or
dec
call
popf
and
mov
jae
add
add
push
clc
mov
clc
out
sbb
mov
ret
clc
inc
clc
or
cld
cmp
add
mov
clc
xor
add
clc
mov
clc
xchg
test
clc
jp
fldcw
fiaddl
add
sub
mov
into
inc
add
mov
adc
add
mov
push
repz
adc
clc
jle
add
enter
add
repz
dec
push
test
jl
mov
clc
mov
clc
sahf
int3
insl
inc
add
out
mov
add
aas
ret
test
flds
add
cmp
xabort
test
and
add
dec
mov
add
leave
add
cmp
ja
dec
or
test
add
test
clc
outsb
mov
xchg
aam
clc
dec
pop
scas
mov
ss
dec
clc
xchg
sub
clc
cmp
mov
add
dec
jno
add
sub
cwtl
jne
adc
add
clc
insb
lret
dec
in
shll
add
xlat
mov
clc
lcall
mov
xlat
or
gs
out
repnz
cmp
cmp
popa
add
iret
xchg
sbb
push
add
pop
or
or
sbb
push
mov
imul
insl
push
add
scas
sbb
add
xor
add
clc
sub
clc
aad
bound
add
adc
add
clc
cmp
clc
nop
jns
clc
clc
inc
add
pop
sahf
cmpsl
clc
pop
cmp
sub
ffree
clc
inc
clc
and
add
roll
add
test
in
testb
add
mov
add
inc
add
xabort
scas
in
hlt
ja
mov
clc
cmp
and
push
add
rcr
call
inc
add
loope
xor
add
testl
mov
int3
dec
in
inc
add
imul
add
and
add
ret
clc
xbegin
je
rolb
outsb
fstps
jbe
cld
mov
clc
xchg
stos
or
clc
test
add
enter
add
mov
add
sub
clc
daa
clc
push
clc
inc
add
leave
push
add
ret
cmp
adc
add
clc
lahf
push
test
cmp
clc
mov
stos
or
clc
ret
clc
jae
add
ficoml
pop
fsubl
mov
clc
out
or
lcall
add
pushf
cmp
aad
push
jo
add
cwtl
push
ja
out
xchg
pop
clc
test
mov
add
movsb
clc
in
hlt
mov
clc
and
add
bound
add
aad
outsb
sub
add
lock
add
lcall
adc
add
cwtl
ds
xchg
sar
pop
sub
cmp
iret
gs
in
mov
add
dec
jb
add
add
or
add
and
add
pop
jge
data16
mov
imul
push
imul
imul
jmp
clc
lods
inc
clc
jle
xchg
xor
ja
repz
addr16
sar
leave
or
clc
push
mov
push
mov
fs
lods
movsl
clc
xchg
sbb
scas
pop
imul
lahf
cmp
clc
mov
clc
in
pushf
cmp
add
add
ja
clc
sbb
add
lret
push
add
out
sbb
inc
clc
icebp
inc
clc
mov
pop
pop
test
lcall
clc
push
add
mov
pop
popf
int3
cli
jb
add
ficoms
out
add
and
add
and
add
ret
clc
int
addr16
mov
jge
push
add
xor
jae
add
xbegin
addr16
cmp
xor
add
inc
clc
rclb
add
xchg
mov
cmc
mov
push
add
mov
clc
dec
and
add
pop
lret
xor
add
fistps
push
mov
pusha
add
jno
add
add
movsl
clc
fldt
cwtl
loopne
divb
add
jne
clc
jns
cwtl
xor
cltd
sub
xchg
inc
clc
sub
add
rclb
add
cli
ficomps
inc
add
inc
add
push
add
cwtl
pop
inc
clc
fisubs
add
scas
stos
test
out
loop
push
add
mov
dec
cmp
loope
cltd
testl
rcrl
lcall
add
xchg
jge
clc
inc
add
insb
out
rcrl
cld
adc
add
xabort
cmpsl
clc
mov
and
fs
imull
arpl
add
add
pop
jne
add
pop
jo
add
push
fisttpll
popf
xor
add
cmp
clc
jmp
add
adc
popa
add
sbb
insl
jge
dec
mov
bound
add
clc
lahf
aaa
push
push
and
push
lahf
jne
pop
pop
mov
xchg
mov
daa
clc
out
je
cmp
popa
add
das
ss
clc
std
out
jb
add
call
icebp
jle
adc
add
aas
ficompl
out
push
clc
das
mov
fs
inc
add
push
add
jge
sar
fs
outsb
push
jl
pop
add
add
clc
xchg
je
clc
add
add
clc
mov
clc
cmp
or
jns
clc
repnz
adc
add
jo
add
push
out
adc
add
xchg
jnp
jne
clc
loopne
pop
es
imul
in
lock
call
in
push
add
das
fdiv
scas
jl
vunpckhps
xor
add
ljmp
add
add
js
mov
push
mov
push
shl
movsl
clc
aad
clc
movsb
clc
stc
add
std
mov
mov
mov
add
dec
cmp
or
popa
add
xchg
xchg
bound
add
mov
pushf
mov
dec
lret
sub
mov
xabort
ss
clc
aaa
pop
inc
add
add
add
shrl
ror
and
and
add
clc
xlat
and
add
arpl
add
fwait
sub
lea
mov
xor
add
clc
popl
add
add
sbb
mov
mov
and
xor
and
add
shll
add
dec
ret
add
ja
add
pop
jmp
xchg
cmpsl
clc
push
data16
cmp
clc
das
pop
aaa
sub
clc
pop
stos
jb
add
add
pop
mov
decb
lock
xchg
movsb
clc
xor
xchg
clc
xchg
pop
cmp
clc
sarb
xor
mov
cmp
push
clc
sbb
add
fidivrs
clc
test
cs
aam
mov
call
test
add
mov
add
pop
or
cwtl
sbb
adc
add
inc
clc
xabort
add
fimull
clc
adc
insb
lock
fcoml
xor
add
gs
add
add
insb
inc
clc
add
add
clc
sbb
mov
cltd
insl
xchg
cmpsl
clc
push
cmp
cmp
add
inc
clc
rep
mov
add
mov
push
add
in
push
rclb
add
mov
mov
push
add
xor
in
dec
pop
das
sbb
inc
add
jecxz
roll
jmp
fmuls
clc
ret
cwtl
in
pop
sar
clc
js
clc
dec
mov
clc
imul
adc
add
add
filds
jge
fnstcw
sarb
pop
nop
aam
pop
jmp
push
int
inc
clc
out
adc
add
add
add
pop
int
out
icebp
data16
dec
clc
jle
mov
mov
add
std
cli
mov
add
add
add
cltd
gs
adc
add
in
insb
xchg
pop
sti
jecxz
mov
mov
clc
cmp
outsb
lock
adc
fs
dec
and
add
iret
pop
inc
add
enter
shll
add
xchg
mov
add
loopne
adc
add
adc
add
clc
insl
test
inc
clc
stc
lea
jns
pop
or
dec
cli
cwtl
xchg
jle
fbld
add
or
xchg
cld
dec
in
insl
shrl
fsubrs
clc
xchg
jp
clc
jecxz
jns
mov
clc
jo
add
mov
add
add
es
inc
clc
stc
and
push
add
jno
add
or
xbegin
jg
cs
xor
sub
push
dec
das
push
clc
test
clc
in
enter
clc
and
add
clc
cmc
xchg
fbld
add
int
movsl
clc
out
mov
pop
jb
add
fcmovnu
clc
daa
clc
xchg
cmp
gs
jmp
pop
pop
or
daa
clc
or
or
add
xbegin
add
clc
sbb
arpl
add
sti
cmp
clc
bound
add
push
add
loop
dec
ja
fmulp
mov
add
add
mov
add
pop
jmp
test
sub
pop
pop
jbe
clc
frstor
add
and
add
cmp
add
xchg
xchg
scas
cwtl
gs
in
cmpsb
clc
dec
in
icebp
fildl
and
add
clc
dec
mov
clc
xlat
cmp
add
dec
pop
faddl
clc
sub
cld
clc
ffreep
clc
add
xchg
rorb
cmp
inc
add
outsl
std
and
add
pop
ds
clc
cmp
add
sub
or
adc
add
add
stc
xor
clc
out
push
pop
xchg
out
int3
rolb
push
clc
mov
add
daa
clc
loope
popa
add
psubq
ja
imul
notl
clc
xor
add
pop
sar
cmp
daa
clc
push
stc
add
clc
mov
pop
mov
clc
cwtl
lea
je
clc
xchg
clc
adc
add
pop
adc
add
or
roll
add
dec
das
repnz
xor
add
inc
add
dec
push
add
pop
mov
add
scas
daa
clc
mov
jmp
mov
jbe
jae
add
sbb
sahf
mov
cmp
dec
bnd
sub
xor
add
mov
clc
mov
mov
movsb
clc
pop
sub
insl
aaa
fsts
sub
es
test
push
aad
xchg
cmp
adc
add
mov
stos
sti
xchg
rorl
mov
aaa
bound
add
clc
decb
lods
test
add
adc
fmulp
cmp
xor
out
into
out
ret
clc
add
add
push
pop
push
add
sar
stos
dec
xchg
test
jns
in
aas
push
cmp
clc
xchg
pusha
add
push
add
pop
xchg
pusha
add
negb
jno
add
add
lcall
add
add
adc
clc
push
and
mov
and
fwait
dec
rcll
add
add
add
cld
shll
add
fistps
xor
add
jp
aaa
aad
sbb
add
add
fs
popf
and
add
or
ss
clc
dec
lods
adc
sti
inc
add
cmp
shrl
add
push
add
xor
add
mov
mov
add
movsl
clc
jne
push
mov
mov
lock
inc
add
cmp
shrb
addr16
jb
add
add
test
add
add
imul
fisttpl
and
push
add
jne
add
jae
add
repnz
adc
add
lock
add
cmpsb
clc
mov
scas
aam
cmp
clc
adc
add
clc
mov
add
add
int
clc
in
sub
repnz
push
xor
add
xor
add
add
int
fsubrl
in
inc
clc
and
add
aas
inc
add
push
adc
xbegin
push
clc
fiadds
add
add
add
mov
aas
test
clc
mov
cli
xor
add
roll
add
pop
mov
xchg
xor
xchg
cmc
or
mov
sbb
add
xor
add
mov
dec
int
fcoms
lods
dec
add
pop
inc
add
leave
or
jmp
inc
add
cmp
hlt
pushf
data16
or
daa
clc
xor
add
clc
mov
clc
mov
clc
clc
gs
add
add
mov
pushf
movsb
clc
test
in
cli
sbb
or
adc
add
mov
clc
in
iret
out
sar
ss
xor
add
mov
mov
in
std
jae
add
xchg
stos
rol
clc
or
mov
clc
xchg
xchg
push
add
jno
add
inc
clc
cli
data16
cmp
clc
and
add
add
mov
clc
movsb
clc
std
int3
push
sbb
dec
dec
fxch
jecxz
jbe
ret
cmc
cmp
add
push
out
mov
clc
sub
clc
add
add
mov
mov
clc
repz
clc
add
das
mov
add
jb
add
add
clc
cmpsl
clc
mov
inc
clc
lahf
dec
lret
xabort
add
fdivrs
xchg
pushf
xabort
pop
aas
imul
clc
mov
add
sbb
xor
clc
lods
inc
clc
add
add
in
testl
add
int
clc
xchg
mov
mov
pop
xchg
into
aad
clc
in
popa
add
pop
push
add
xchg
lods
pop
clc
xchg
push
add
pop
add
add
add
inc
add
xor
in
out
or
mov
add
lods
pop
aas
jno
add
mov
ss
popa
add
pop
into
push
mov
add
imul
xlat
cld
sbb
ja
clc
fwait
adc
add
cmp
clc
inc
add
imul
clc
dec
sbb
mov
add
add
jmp
clc
data16
sub
inc
clc
repnz
pop
dec
js
add
mov
add
dec
mov
add
push
clc
xchg
insb
cwtl
int
sub
cltd
aaa
add
cli
mov
test
clc
pop
add
add
xchg
sbb
cmp
sbb
dec
or
dec
mov
add
lods
xbegin
add
clc
push
movsb
clc
test
scas
mov
shlb
add
clc
cmp
add
inc
add
mov
jbe
add
sbb
mov
bound
add
test
fabs
clc
test
xchg
sub
jb
add
adc
add
fistps
mov
add
xor
add
gs
ret
add
insl
inc
add
dec
pop
mov
add
push
add
cmc
pop
lea
add
shlb
add
loop
cmp
add
mov
and
mov
add
adc
add
add
arpl
add
pop
mov
mov
inc
add
cmp
clc
mov
add
add
in
clc
in
ds
popa
add
adc
add
das
adc
add
test
pop
dec
je
lret
fbld
jo
add
jne
aad
xchg
xor
add
mov
xor
add
clc
xabort
sahf
push
push
add
cmp
clc
cmpsb
clc
shlb
paddsw
clc
stc
jne
popf
push
add
cmp
or
add
add
jecxz
lods
inc
add
out
adc
add
fiaddl
inc
clc
cltd
cli
add
imul
jne
addr16
in
inc
add
ds
add
stos
loop
filds
clc
adc
add
out
push
stc
cld
call
mov
lahf
mov
add
dec
fwait
jmp
in
faddl
clc
dec
arpl
add
je
clc
fidivrs
add
add
pop
out
popf
repz
push
add
inc
clc
xchg
push
add
jg
sbb
ja
clc
push
clc
outsl
mov
lea
add
jp
clc
mov
repnz
clc
jecxz
sub
jae
add
cld
imul
in
pop
cli
lods
outsl
xlat
or
inc
add
sub
add
ret
clc
filds
add
sub
test
mov
arpl
add
add
add
sar
lea
mov
movsb
clc
lret
add
dec
xchg
xchg
sub
out
popa
add
test
pop
loopne
xchg
je
add
pop
mov
clc
fildl
add
inc
add
push
clc
pushf
lock
cld
cmc
aad
rorb
mov
sub
inc
clc
lods
mov
divl
sbb
clc
inc
clc
int3
cmp
dec
cld
xor
add
add
mov
add
mov
clc
cmp
outsl
xchg
cs
pop
add
dec
dec
sub
add
add
add
inc
clc
cmp
push
adc
add
clc
out
fsubs
data16
push
loope
xabort
dec
inc
clc
or
push
add
loop
imul
cwtl
pop
cs
and
in
cmp
ja
mov
add
add
clc
dec
clc
adc
movsb
clc
pop
mov
push
add
push
fcompl
push
add
pop
cmp
xchg
mov
pop
clc
add
dec
imul
add
mov
clc
jns
jns
stc
sbb
add
add
add
movsl
clc
mov
push
in
sub
push
out
lods
sub
add
cli
mov
add
shrl
clc
mov
add
add
add
add
jge
pop
cmp
hlt
xlat
arpl
add
xlat
xor
add
mov
xchg
ljmp
fstpl
clc
jp
ss
push
pop
cmp
clc
out
xor
add
adc
add
add
lahf
je
or
in
dec
or
jle
push
addr16
xbegin
clc
aas
or
add
clc
jge
add
fadd
clc
fcomps
clc
sti
sbb
add
in
pop
iret
or
add
xchg
cli
repz
daa
clc
clc
push
sub
mov
lock
cmpsl
clc
test
repnz
dec
xchg
jnp
clc
xor
add
add
sti
in
sar
xbegin
jge
inc
add
pop
std
lods
out
sbb
add
push
push
cmp
test
outsl
std
cmpsl
clc
pop
mov
ja
pop
clc
dec
imul
add
push
add
movsb
clc
mov
add
clc
xchg
shll
add
not
mov
clc
mov
clc
es
sar
add
inc
clc
cmp
pop
ret
clc
jno
add
loope
cmp
js
clc
mov
es
and
add
clc
push
add
pushf
push
pop
jns
mov
rorb
fldenv
add
dec
or
sar
add
xabort
clc
insb
lcall
imul
xor
test
add
mov
xor
add
loop
adc
add
add
icebp
lret
addr16
jmp
clc
dec
jbe
fsubs
clc
jmp
insl
and
add
add
inc
add
jne
add
xchg
pop
dec
out
lea
sbb
int
xlat
test
pop
sub
rcrl
pushf
cmpsl
clc
punpckhdq
and
add
in
nop
stos
jbe
clc
jl
xchg
test
mov
clc
popa
add
cltd
clc
push
add
mov
xchg
jo
add
add
jp
frstor
add
and
add
mov
clc
pop
xbegin
adc
add
and
add
shl
clc
lods
jae
add
clc
mov
fsts
mov
jno
add
add
xchg
sbb
push
testb
clc
sub
push
add
jae
add
rclb
sahf
mov
xchg
scas
sarl
mov
ja
cmpsl
clc
sub
inc
add
push
push
add
cwtl
adc
add
pop
jg
add
frstor
add
clc
xchg
xor
add
dec
fistpl
xabort
clc
jmp
clc
loope
sbb
jg
imul
clc
and
rcrb
lods
push
push
add
sub
cmp
add
cmp
inc
add
ds
cs
jp
mov
outsl
fiadds
push
lods
or
rcll
add
clc
push
gs
cmp
add
add
add
xor
add
pusha
add
xchg
dec
or
add
cmpsl
clc
cmp
or
mov
mov
sub
clc
pop
cwtl
adc
add
js
clc
mov
clc
adc
add
clc
test
add
add
add
insb
jg
mov
inc
add
out
or
call
lret
clc
mov
sbb
push
or
clc
negl
lea
jo
add
add
pop
and
add
pop
xchg
stc
call
clc
imul
xor
add
pop
packsswb
add
clc
lahf
push
add
sbb
clc
sub
add
sub
pop
pop
pop
sar
sbb
clc
test
in
sub
sbb
cmp
xbegin
cli
lcall
pop
push
aaa
sarl
enter
jbe
hlt
lret
cltd
mov
cmp
nop
test
adc
mov
add
std
imul
cmp
add
xchg
data16
jo
add
out
xchg
sbb
leave
imul
nop
xchg
rorl
and
add
ja
add
adc
clc
data16
adc
add
clc
mov
mov
jg
cmp
sub
xor
add
mov
add
lahf
pop
cwtl
jo
add
cltd
repz
jle
or
clc
aas
adc
add
imull
add
mov
clc
jmp
lret
fwait
mov
mov
into
push
cmpsb
clc
mov
add
ds
adc
add
add
push
xlat
sbb
clc
sahf
movsb
clc
into
iret
mov
loope
sarb
add
jbe
clc
rcrb
add
lods
sti
aaa
ficompl
mov
add
push
add
xor
add
add
jge
clc
popf
in
push
xor
add
add
adc
add
aam
mov
mov
pushf
dec
mov
divb
add
or
add
add
mov
pusha
add
leave
add
add
stos
mov
jle
push
push
add
pop
mov
bnd
add
pusha
add
jl
clc
mov
add
xchg
pop
add
add
lcall
add
fimull
add
lahf
lcall
add
and
add
add
ss
xbegin
int3
xor
add
std
push
cmp
int
lods
es
xor
cmpsl
clc
pop
addr16
xchg
xor
add
add
add
clc
lahf
mov
mov
add
fwait
inc
add
mov
jbe
add
hlt
lcall
mov
clc
mov
clc
addr16
sbb
enter
pop
rcll
xchg
xchg
inc
add
loopne
mov
add
push
add
push
test
fmull
mov
clc
movsl
clc
jae
add
ret
mov
xabort
ljmp
xchg
jae
add
adc
add
add
ja
clc
xor
add
cmp
pop
adc
add
clc
mov
je
add
push
add
aam
popf
dec
das
lret
clc
sub
add
mov
clc
inc
add
ss
xchg
fsubs
clc
lahf
cmc
ss
add
add
cmp
mov
xchg
dec
mov
sbb
add
add
push
push
xchg
int
clc
fsubrl
clc
sar
push
sub
dec
and
add
mov
bound
add
out
lahf
clc
jne
mov
add
jb
add
cld
gs
sub
in
data16
xor
add
add
data16
push
outsl
lahf
aad
pop
pop
mov
xor
repnz
clc
mov
clc
xchg
inc
add
repz
sub
add
add
xchg
sbb
sarl
push
mov
add
clc
clc
pop
cmp
add
xchg
fninit
clc
push
push
sbb
xor
xchg
sub
xchg
stc
insb
lock
sbb
xchg
inc
clc
jecxz
fisttpl
ja
xchg
sbb
xchg
jmp
clc
and
add
add
add
clc
outsl
sbb
clc
sbb
sbb
add
pop
add
add
add
add
iret
clc
aaa
aam
xchg
out
das
sbb
scas
xchg
sub
mov
test
xbegin
pop
jnp
add
push
add
push
and
aaa
sar
std
inc
clc
jb
add
add
add
mov
add
fcoms
add
cwtl
jmp
add
out
cmp
popf
cltd
scas
and
clc
cmpsl
clc
dec
lock
clc
test
add
ficoms
add
movsb
clc
enter
cmp
add
xchg
xlat
and
add
add
add
adc
clc
jnp
test
inc
add
clc
xor
add
lret
out
jnp
pusha
add
lret
clc
lock
movsb
clc
test
cmp
and
add
pop
repnz
aas
add
add
lahf
and
adc
add
and
add
clc
mov
inc
add
push
dec
sub
clc
xor
add
fildl
test
cmp
clc
mov
and
add
jae
add
adc
add
aas
push
add
push
add
clc
iret
xchg
pop
and
add
stos
lea
push
enter
clc
fwait
and
jge
sarl
or
clc
jne
in
ss
clc
jl
clc
pop
cli
xor
add
add
add
cmp
loope
lcall
mov
insb
scas
leave
fwait
sbb
clc
mov
and
insl
add
add
js
clc
sub
add
jno
add
clc
fs
lods
mov
clc
cmp
clc
dec
out
pop
je
jne
clc
in
add
add
int3
fstp
sbb
clc
jnp
or
insb
mov
clc
push
sahf
and
add
ds
push
pop
add
add
mov
or
jae
add
clc
xor
add
jb
add
add
push
add
jno
add
movsl
clc
fstl
sahf
cmp
popl
cmp
pop
cmpsb
clc
inc
add
xor
clc
int3
mov
pushf
fistpll
clc
add
add
add
leave
popf
cli
push
clc
lods
fldl
popa
add
lahf
bound
add
clc
cmp
add
sbb
outsb
xabort
arpl
add
add
loop
adc
mov
mov
xabort
clc
sbb
clc
adc
add
add
clc
jecxz
add
add
jnp
clc
mov
imul
clc
xor
add
sub
mov
pushf
adc
add
movsb
clc
out
pusha
add
loope
inc
clc
scas
mov
clc
pop
mov
add
out
fldcw
xor
add
jnp
xor
pop
cmp
add
sbb
add
xbegin
ret
clc
cli
mov
out
cmp
add
or
mov
cmp
add
add
je
icebp
cltd
xchg
xabort
aad
scas
xchg
mov
aas
jno
add
add
fs
aaa
imulb
push
add
out
add
add
hlt
outsl
jae
add
add
cmp
fistl
push
add
movsl
clc
cmpsb
clc
movsb
clc
mov
clc
icebp
dec
sbb
add
movsb
clc
mov
jmp
push
mov
mov
shll
add
cltd
cmp
clc
cmc
popa
add
shrb
add
xlat
aam
clc
cmp
loope
jae
add
add
sub
call
dec
cmp
inc
add
mov
es
push
or
int
xor
add
adc
mov
test
jecxz
mov
clc
or
push
test
jns
out
xchg
sbb
and
add
mov
add
add
mov
clc
bound
add
sbb
xchg
push
in
loop
dec
cmp
add
sub
dec
leave
mov
clc
xor
add
leave
dec
push
inc
clc
sahf
imul
add
add
push
clc
or
add
inc
add
push
add
xchg
cmp
add
add
add
sbb
xor
add
jae
add
fs
imulb
arpl
add
cwtl
mov
add
sub
jnp
mov
mov
cltd
shr
push
add
push
dec
sub
add
in
lods
pop
bound
add
lods
and
add
pop
js
repz
rolb
clc
dec
pop
incb
add
jnp
clc
mov
mov
lods
and
add
clc
jb
add
cmp
pushf
jno
add
addr16
aaa
jo
add
sub
clc
cmp
add
icebp
inc
add
mov
clc
xchg
gs
out
pop
pop
imul
push
add
dec
add
add
add
inc
clc
clc
xchg
scas
lods
jmp
fisubrs
mov
inc
add
fdivrs
js
inc
clc
daa
clc
adc
add
xor
add
add
xchg
in
xchg
das
xchg
test
inc
add
or
add
jge
cmpsl
clc
aaa
lea
add
mov
add
pop
arpl
add
add
sti
jbe
clc
daa
clc
pusha
add
lea
dec
nop
inc
clc
lock
mov
pop
xor
aas
add
add
add
add
mov
sbb
add
add
shlb
clc
dec
dec
push
outsl
mov
pop
add
add
es
pop
and
add
clc
aam
icebp
mov
jle
add
mov
insb
loopne
cmp
jmp
faddl
dec
arpl
add
push
clc
and
add
add
sub
clc
push
add
insl
inc
clc
cmpsb
clc
stos
and
add
in
sub
sahf
je
mov
dec
adc
add
cwtl
mov
add
pushf
flds
add
or
imul
xchg
inc
add
sbb
mov
inc
add
cmp
xchg
add
add
clc
and
add
dec
out
mov
cmc
lea
mov
xchg
xchg
fsts
imul
sub
pop
lock
add
mov
adc
add
clc
mov
lea
loopne
dec
jno
add
add
shll
xchg
sbb
std
fmul
fsubr
adc
add
adc
ret
jmp
cmp
mov
add
sti
add
mov
add
or
cmp
shlb
add
ds
clc
mov
sahf
adc
add
clc
in
inc
add
repz
clc
ficoms
add
adc
add
fidivl
fs
ret
clc
xlat
std
sub
clc
mov
ds
push
jo
add
add
ja
clc
in
mov
add
sbb
int3
cmp
call
ftst
clc
jne
jg
cmpsl
clc
xchg
add
add
clc
mov
jnp
clc
mov
adc
clc
push
add
int
int
data16
and
add
add
clc
outsb
sbb
cwtl
sub
clc
dec
outsb
popa
add
insb
lret
jns
jb
add
popf
fadds
add
mov
lret
pushl
mov
repnz
clc
mov
clc
into
mov
clc
pop
gs
xchg
jle
leave
jnp
pop
neg
ret
dec
pop
sbb
imul
divl
or
gs
adc
das
test
pop
fsubrs
clc
lahf
loopne
das
fdivs
cmp
mov
mov
lahf
jge
jns
clc
mov
add
call
ret
clc
pop
pop
clc
cmp
mov
fistl
add
and
add
hlt
jge,pt
clc
adc
clc
and
clc
sar
mov
mov
dec
cmp
es
jno
add
clc
jl
call
repnz
sbb
add
clc
call
movsb
clc
dec
pop
clc
inc
clc
mov
add
add
clc
gs
pushf
sahf
fsubs
and
add
clc
sbb
add
or
movsb
clc
push
cld
push
aad
add
and
add
sbb
in
es
cmp
add
icebp
mov
jnp
cmc
xor
add
clc
pusha
add
push
clc
pop
vandnps
sub
add
mov
add
sar
scas
xor
add
xbegin
add
add
clc
out
dec
xbegin
and
add
add
add
cli
xabort
movsl
clc
in
push
add
adc
add
mov
xchg
out
stos
ds
and
add
jecxz
xchg
cmp
nop
add
and
push
add
cmp
sbb
shll
data16
stc
ret
clc
mov
jle
and
add
clc
dec
stos
scas
dec
dec
dec
movsl
clc
out
add
add
movsl
clc
or
sti
xabort
aam
clc
out
cmp
popf
xor
add
inc
clc
inc
add
fdivrs
jns
sub
xor
add
scas
mov
sub
add
jb
add
clc
pop
push
fldcw
and
jbe
pop
mov
add
push
add
jno
add
add
xor
and
add
pop
sub
out
roll
mov
aaa
cltd
int3
cmp
das
imul
pop
sub
add
mov
cld
sbb
add
sub
inc
add
ret
clc
test
test
stos
mov
clc
add
ja
iret
add
add
nop
push
add
xchg
add
add
and
add
clc
xchg
das
adc
add
cmp
clc
push
mov
clc
mov
clc
sbb
adc
pop
clc
popf
cmp
jne
add
add
test
xor
push
dec
xor
lock
add
adc
xchg
scas
movsb
clc
or
js
mov
mov
ljmp
xlat
inc
clc
call
clc
sbb
sub
shr
xchg
lea
push
add
pop
xchg
loope
int3
fcmovnb
clc
push
cli
fsubr
movsb
clc
add
add
loop
lret
cmp
in
jnp
jo
add
clc
shl
xor
add
xchg
test
clc
mov
add
aaa
push
add
sub
add
test
mov
in
push
xchg
sub
add
clc
ret
inc
add
rcl
fcmove
movsb
clc
mov
mov
clc
pop
mov
xabort
aam
mov
clc
leave
stos
popf
test
clc
inc
clc
mov
jp
add
mov
and
add
add
add
pushf
jne
adc
push
mov
clc
xor
clc
jl
clc
das
jno
add
clc
mov
jl
clc
cmp
mov
inc
clc
popa
add
adc
add
out
outsl
imul
cli
cwtl
push
add
fsubp
clc
addr16
add
add
add
std
pusha
add
add
add
inc
add
pop
jbe
cmp
outsl
pushf
dec
cld
xor
xchg
add
add
inc
clc
mov
dec
out
fstl
adc
add
add
xchg
cmp
add
add
add
outsl
mov
nop
rclb
mov
pop
js
clc
addr16
mov
in
insl
jb
add
jne
add
ljmp
add
xchg
add
add
sub
clc
xor
add
mov
and
out
mov
loop
insl
push
add
aam
clc
mov
add
clc
dec
mov
repnz
test
mov
clc
mov
stc
clc
cmp
clc
xchg
adc
add
add
add
clc
jno
add
add
es
dec
std
mov
clc
push
mov
fistpll
mov
scas
and
add
aad
inc
clc
cmp
int3
pop
clc
loope
jg
pop
jmp
clc
inc
clc
decb
movsb
clc
pop
pop
and
add
clc
jg
dec
insb
dec
jnp
pop
jbe
lret
xchg
sub
push
std
enter
stos
push
xor
add
add
jno
add
or
clc
lret
lods
iret
popl
sub
add
lret
add
add
mov
add
ljmp
fdivr
mov
fsubl
jb
add
add
cmp
lea
add
xbegin
iret
inc
add
ret
clc
and
add
add
add
sub
clc
call
stos
repnz
mov
add
ljmp
inc
clc
push
clc
hlt
imul
cmc
mov
aaa
push
adc
add
mov
add
add
xchg
add
add
and
add
inc
add
mov
mov
add
add
mov
cmp
push
mov
inc
clc
mov
popa
add
sar
or
in
cld
fsub
clc
clc
add
mov
add
xabort
lcall
out
dec
xor
add
loope
sub
pop
daa
clc
mov
push
adc
add
mov
jg
clc
jb
add
clc
push
add
pop
adc
add
lock
mov
test
jnp
clc
aaa
xor
shl
test
jae
add
imul
push
mov
mov
ja
in
cmp
clc
sbb
sti
xchg
pushf
cmp
cli
int3
daa
clc
and
mov
jp
mov
xchg
das
lock
xchg
movsb
clc
aam
add
pop
lcall
pop
push
add
sbb
xor
add
clc
pop
mov
add
test
xchg
cli
mov
clc
decb
add
cs
inc
clc
cmp
cwtl
insb
push
xchg
lea
mov
in
cmc
xlat
pop
xlat
cmp
clc
or
add
clc
popa
add
sbb
mov
lock
add
cmpsl
clc
and
add
int3
push
pop
xor
add
sbb
adc
add
add
add
add
inc
add
sub
fldt
in
xbegin
fs
push
imul
mov
push
clc
mov
add
ljmp
int
cmc
imul
add
in
jbe
xor
sbb
add
std
and
add
das
lcall
add
ja
ffreep
clc
test
push
mov
inc
clc
imul
clc
cmpsl
clc
jecxz
sahf
mov
add
clc
or
sahf
jg
adc
add
push
add
aas
or
clc
sub
and
add
jb
add
dec
ja
mov
add
clc
fwait
push
js
add
cmp
clc
or
imul
clc
arpl
add
mov
outsb
xor
add
aam
and
add
adc
add
add
ja
inc
add
popa
add
jbe
adc
clc
out
loope
movsb
clc
sbb
into
push
push
add
xchg
sar
adc
clc
loop
outsl
mov
add
stc
imulb
sub
add
in
xor
add
clc
mov
fs
mov
int3
mov
out
popf
daa
clc
into
dec
or
clc
mov
bound
add
xor
add
clc
and
add
sahf
sub
clc
ret
clc
rcrl
clc
cmp
addr16
mov
add
clc
cvttps2pi
add
mov
pop
pop
xrelease
mov
out
cwtl
push
clc
jl
sti
bswap
cld
sar
xchg
int
add
add
add
clc
in
ljmp
cmp
xor
push
add
add
and
add
mov
clc
addr16
in
and
lock
lret
fs
icebp
psubd
add
arpl
add
int
push
clc
add
add
clc
lret
push
xlat
mov
rcll
cmp
add
fidivrs
outsl
dec
mov
xchg
cli
data16
inc
add
fadd
clc
push
out
mov
clc
mov
add
mov
or
in
mov
aaa
adc
add
loope
loope
pop
sbb
movsl
clc
lret
xchg
xchg
rcll
add
clc
cmc
pop
lods
push
dec
push
add
inc
clc
iret
adc
add
xchg
fstl
add
jle
clc
lock
pusha
add
fs
jge
js
jle
clc
xchg
int3
adc
add
xchg
dec
fists
clc
fldenv
xor
add
clc
call
add
int
clc
in
je
dec
aad
clc
mov
add
sbb
lret
div
call
add
and
add
cmpsb
clc
mov
add
mov
clc
daa
clc
mov
add
xchg
clc
lock
add
add
pop
pop
clc
mov
clc
movaps
adc
add
clc
das
ret
clc
push
lahf
loope
outsl
pop
sarl
fildll
mov
add
cmp
add
add
xor
add
jae
add
lcall
mov
clc
lock
dec
imul
lods
cmp
xchg
in
out
xabort
sti
jne
add
mov
dec
xor
add
clc
mov
fadd
clc
int3
add
add
clc
or
inc
add
xor
add
clc
mov
cmp
sbb
test
out
jg
inc
add
testb
nop
nop
sub
cs
add
add
dec
cld
xlat
icebp
fiaddl
add
ret
add
add
scas
aaa
mov
mov
push
stc
fmul
inc
clc
repnz
inc
clc
es
das
insl
sar
scas
mov
add
lcall
clc
cmpsl
clc
dec
loopne
xor
add
xlat
aas
fidivrl
clc
fwait
scas
daa
clc
in
lret
cs
ret
clc
jnp
xabort
clc
ljmp
add
jb
add
or
add
pop
bound
add
fwait
and
add
clc
push
int
add
fldenv
jecxz
es
out
out
mov
clc
push
add
in
cmp
mov
mov
clc
clc
push
test
inc
add
sar
clc
push
clc
in
sar
int3
stos
cmp
outsl
insl
out
jmp
jmp
jecxz
stos
push
clc
test
aas
popa
add
add
add
adc
clc
jge
xchg
push
popf
sbb
fistps
clc
pop
clc
in
push
mov
clc
lods
cmpsb
clc
pop
rclb
add
imulb
clc
int
cli
pop
aad
out
jno
add
add
clc
cmp
clc
das
loop
adc
clc
mov
in
adc
add
mov
leave
xchg
sbb
clc
mov
into
scas
add
add
pop
mov
xor
add
and
add
and
add
add
lret
dec
xlat
dec
xchg
dec
adc
add
jb
add
add
mov
scas
cmp
clc
cmp
sbb
mov
clc
dec
inc
clc
pop
mov
dec
dec
push
xor
repz
sarl
add
and
add
aaa
lahf
mov
mov
xchg
adc
add
cmp
adc
add
jg
nop
mov
sbb
add
mov
clc
aaa
sbb
test
add
inc
add
fcmovne
xchg
arpl
add
clc
mov
add
popf
out
iret
in
loopne
adc
aas
mov
dec
mov
loop
loop
jno
add
clc
sub
clc
cmp
or
into
leave
test
push
clc
push
clc
fistpll
stos
xor
dec
in
fwait
test
pop
clc
dec
xchg
xchg
pop
outsb
push
jo
add
add
add
ss
clc
clc
out
cmp
scas
add
add
out
sub
ret
adc
add
inc
add
jg
mov
mov
add
add
clc
int
out
fisttpl
pop
jp
sti
lret
push
clc
je
stos
hlt
push
jo
add
add
push
xchg
in
inc
add
dec
sub
pop
in
insb
shlb
xor
add
mov
clc
mov
xchg
xchg
clc
frstor
mov
inc
clc
push
iret
pop
and
add
sti
add
cmp
clc
cmp
dec
push
clc
lret
xor
add
dec
xor
add
sub
push
add
dec
inc
clc
psrlw
stos
movsl
clc
adc
add
clc
ret
clc
or
rcll
jmp
aas
dec
mov
pop
xabort
int
clc
fstpt
cmp
icebp
in
mov
test
vmovups
add
sti
ret
loop
mov
clc
cs
xchg
dec
sbb
test
jmp
add
xor
add
aam
or
out
cmp
clc
mov
mov
add
in
and
xor
add
dec
xor
cld
mov
clc
dec
cs
clc
rcll
mov
sbb
sbb
cmp
add
add
fs
xchg
mov
pusha
add
push
xchg
testl
add
add
inc
clc
jnp
pop
cld
adc
pop
movsb
clc
and
pop
mov
mov
add
sbb
add
arpl
add
movsb
clc
fcompl
mov
and
add
add
xchg
loop
inc
clc
sub
add
xlat
dec
out
sub
clc
pop
sub
int
jae
add
dec
rorb
pop
xchg
xchg
or
add
adc
add
add
cmp
adc
add
repz
in
push
inc
add
pop
cs
xchg
insb
pop
xor
add
mov
test
adc
mov
addr16
cmp
mov
add
xchg
fists
mov
cmp
mov
clc
xor
add
aam
aam
cltd
pop
adc
add
add
jns
jle
imull
sbb
clc
frstor
scas
xbegin
mov
shlb
inc
clc
push
clc
repnz
clc
lcall
jns
clc
out
sahf
cmp
clc
sbb
cmpsb
clc
sar
clc
push
xchg
cmp
fistl
add
xor
add
add
jo
add
fisttpll
cmp
mov
sbb
sub
or
clc
inc
add
aas
adc
mov
sti
and
add
clc
mov
xabort
cmp
add
xor
add
add
add
ljmp
clc
push
mov
add
fs
sub
add
lret
add
add
dec
inc
clc
rcll
add
sar
cmp
inc
clc
lret
nop
cwtl
aad
clc
inc
add
mov
clc
xchg
lods
test
aaa
cmpsl
clc
or
add
loopne
out
mov
aam
out
jne
push
add
xor
add
pushf
into
inc
add
int3
inc
add
fidivrl
lret
sbb
clc
xchg
mov
add
cmc
in
cmp
xor
add
gs
mov
clc
shll
add
enter
data16
test
adc
add
mov
mov
dec
and
add
lcall
or
clc
mov
add
fs
or
jecxz
notl
add
clc
cmpsl
clc
mov
jmp
add
add
mov
push
aam
mov
movsb
clc
mov
pop
xabort
push
jp
pop
sub
rclb
add
mov
mov
cmpsb
clc
pushf
repz
jmp
clc
repz
add
roll
int
mov
lret
add
add
cli
dec
push
add
add
bound
add
test
add
clc
inc
add
not
push
pop
and
add
sub
clc
stos
cmpsl
clc
test
popa
add
movsb
clc
jb
add
clc
cmp
xchg
iret
xchg
jmp
clc
cmp
pop
jno
add
jle
clc
aam
bound
add
daa
clc
cmpsl
clc
xor
add
clc
jmp
add
add
dec
out
push
xchg
mov
out
add
and
add
dec
test
push
and
std
sub
clc
dec
enter
aam
clc
push
cmp
ret
clc
jb
add
in
xlat
mov
lret
add
clc
test
mov
clc
ja
or
cld
imul
add
mov
add
adc
add
mov
scas
mov
jns
sbb
clc
aad
add
add
add
add
add
adc
cmp
add
sub
dec
push
data16
das
ja
lret
add
add
sub
sbb
inc
clc
sar
clc
leave
dec
cmc
rcl
push
add
mov
mov
clc
mov
clc
lods
movsb
clc
fabs
clc
jg
fidivrs
fnstcw
cs
jle
add
dec
inc
clc
adc
add
clc
push
add
mov
push
sub
xor
add
clc
fnstenv
add
add
clc
add
add
add
xor
add
jecxz
cs
in
mov
mov
clc
lahf
push
add
and
add
in
outsl
jbe
mov
dec
mov
fsubrs
sar
clc
jnp
add
add
add
push
add
push
add
sub
add
clc
ret
clc
inc
add
dec
fdivrl
clc
push
mov
push
add
mov
cwtl
stos
xbegin
clc
outsl
pusha
add
clc
push
add
pop
cli
insb
dec
dec
push
add
in
xor
add
add
mov
test
pop
jnp
clc
mov
or
clc
lock
add
clc
xor
add
jnp
clc
push
add
stos
jb
add
mov
sbb
clc
push
ss
add
add
add
add
out
mov
add
popf
idivl
mov
scas
sbb
jmp
clc
test
rcl
fldcw
clc
sub
add
data16
data16
jmp
push
cmp
add
pop
add
add
add
dec
mov
clc
enter
dec
incl
popf
pusha
add
jl
sar
clc
stos
xbegin
cs
cmp
adc
clc
adc
add
stos
js
jmp
add
cwtl
mov
pop
into
aad
inc
clc
or
add
loop
pushf
outsl
sbb
mov
cmp
cmp
add
je
adc
add
inc
clc
pop
dec
scas
cmc
pop
clc
pop
dec
test
ss
dec
out
in
jl
clc
bnd
cli
push
inc
clc
mov
je
mov
clc
dec
gs
sbb
clc
ljmp
pop
fmull
inc
clc
or
add
int
add
xor
add
clc
mov
int
push
jae
add
cmp
add
push
sbb
adc
add
inc
add
pushf
cmp
aad
dec
xchg
adc
lcall
clc
adc
add
cmp
add
add
add
dec
out
mov
clc
pop
push
das
xlat
cmp
in
mov
clc
movsb
clc
nop
popa
add
xchg
imul
jno
add
push
inc
add
jne
mov
pop
push
int3
aaa
mov
dec
push
add
jae
add
add
sbb
and
add
and
add
cmp
clc
mov
popf
mov
fwait
pop
xor
push
add
aad
add
cwtl
mov
xor
add
xchg
or
jbe
clc
jecxz
jne
dec
lret
add
test
clc
adc
add
add
cmpsb
clc
dec
add
out
fmulp
clc
or
clc
cmc
jl
mov
inc
clc
push
mov
push
pushf
cmc
push
add
icebp
pop
inc
clc
sub
pop
xchg
sub
add
int
mov
add
add
cmp
clc
pop
add
add
pop
adc
jmp
push
loop
arpl
add
cmp
aas
iret
mov
clc
mov
sar
pop
xchg
pop
or
xchg
shlb
add
clc
sar
add
gs
pop
in
jp
leave
adc
add
inc
add
mov
mov
ss
dec
adc
add
es
pop
jp
clc
mov
mov
vmovups
add
xchg
push
int3
mov
repz
mov
push
clc
pop
lret
xchg
cmp
jp
pop
push
add
jb
add
xor
xchg
mov
clc
push
mov
into
push
mov
rsm
cmp
add
in
ret
add
xchg
insl
call
dec
shl
clc
aaa
push
sbb
clc
test
ja
clc
mov
mov
clc
jmp
clc
xor
add
fcompl
mov
clc
out
fwait
cmp
fs
mov
clc
test
cmpsl
clc
rorb
adc
add
add
clc
xor
mov
add
mov
push
bound
add
add
aaa
and
add
clc
jnp
adc
add
clc
and
add
add
mov
stos
mov
push
add
xor
add
add
push
jnp
clc
push
pop
add
add
lods
movsb
clc
stc
aam
clc
mov
fistps
cmp
cwtl
out
jle
clc
scas
out
jbe
stc
sub
mov
sub
pop
jne
sarb
and
add
add
xor
aaa
pop
movsl
clc
cltd
cmp
adc
add
hlt
in
out
cmp
clc
in
cwtl
es
insl
cmc
and
add
add
cmp
std
cld
xchg
mov
add
dec
sar
pop
mov
mov
clc
mov
clc
mov
fcoms
add
add
aam
fildl
add
xchg
mov
add
sub
clc
sub
clc
enter
add
dec
cld
loope
add
add
sub
gs
popa
add
inc
add
stos
sbb
add
add
cwtl
scas
jg
xchg
fs
je
iret
pop
jge
sarb
je
mov
hlt
dec
sbb
push
cli
lods
and
add
jl
mov
clc
in
push
add
call
push
add
add
clc
ja
leave
mov
adc
add
clc
and
add
jl
cmp
clc
xor
add
add
add
sub
inc
clc
jnp
cld
mul
clc
cmpsl
clc
and
add
add
cmp
push
aas
arpl
add
shlb
add
mov
add
out
cmp
pop
inc
clc
bound
add
clc
push
cltd
inc
clc
xor
mov
add
fiadds
lods
or
add
inc
clc
mov
movlps
add
add
xlat
push
clc
pop
clc
push
movsl
clc
mov
sub
adc
add
das
stos
imulb
inc
add
push
jo
add
ja,pn
clc
stc
add
add
clc
std
or
clc
xchg
aad
dec
repnz
xchg
sbb
add
jmp
inc
clc
nop
pop
clc
clc
mov
add
jge
add
xchg
ja
pop
in
adc
ljmp
add
icebp
pop
clc
cltd
mov
into
mov
inc
add
add
add
ds
pop
imul
add
clc
lods
mov
jl
clc
clc
cmp
fchs
clc
data16
xchg
add
add
mov
bound
add
pop
clc
fnstsw
push
loopne
daa
clc
xbegin
fnsave
movsl
clc
mov
addr16
loopne
jo
add
add
xor
add
inc
clc
pop
imul
repnz
mulb
xor
add
add
leave
cli
push
and
add
clc
enter
shlb
pop
clc
sbb
add
enter
add
sub
mov
clc
movsl
clc
push
icebp
aad
out
ds
sub
adc
add
jle
clc
test
add
jo
add
clc
enter
sar
test
in
jae
add
clc
add
or
mov
fs
sar
cld
mov
add
clc
inc
add
mov
sub
and
add
daa
clc
in
jns
outsl
fimuls
iret
gs
scas
inc
clc
jecxz
test
mov
mov
sub
sahf
mov
rcrl
cmp
pop
sub
clc
sub
out
js,pn
mov
push
clc
inc
add
sub
inc
add
cli
stos
addr16
jmp
jne
mov
add
add
add
sbb
xchg
fbld
pop
inc
add
mov
add
dec
stc
inc
clc
sub
add
daa
clc
clc
cltd
inc
clc
jle
imul
stos
push
add
jmp
bound
add
xchg
adc
ljmp
lods
mov
in
cmp
mov
clc
jbe
fdivs
xor
add
popl
clc
cli
addr16
stos
mov
ficomps
clc
popa
add
loopne
gs
xor
add
push
push
add
loop
xchg
or
clc
fs
mov
ja
inc
clc
int3
aas
cmp
add
jbe
sbb
paddusb
clc
mov
cwtl
mov
cwtl
loope
cmp
cmp
loope
mov
clc
lcall
add
dec
xchg
jno
add
jb
add
shl
clc
sbb
decl
popl
ret
clc
sbb
clc
pop
or
add
sar
mov
clc
push
add
sub
xchg
vmovlps
add
pop
cmp
clc
fbstp
clc
xchg
mov
outsl
outsb
mov
jmp
in
test
or
outsb
and
add
add
ret
clc
in
test
popa
add
popa
add
fwait
stos
pop
repz
add
add
add
add
iret
outsl
roll
xor
add
xchg
iret
mov
add
fs
scas
mov
fstp
inc
add
mov
clc
jp
fisubs
add
mov
clc
xor
add
adc
add
clc
mov
clc
add
add
adc
add
sbb
clc
lahf
nop
pop
or
add
add
clc
sbb
pop
xor
add
fisttps
decl
jmp
loope
loopne
clc
mov
add
add
add
add
add
fldl
out
insb
dec
add
add
in
test
clc
sbb
scas
ljmp
fsubs
add
add
add
xor
add
cmp
clc
lahf
ss
xor
add
add
mov
add
aaa
gs
jnp
loope
push
push
sub
mulb
clc
into
mov
stc
mov
cmp
clc
ret
test
pop
pop
insb
or
clc
adc
clc
es
adc
add
add
pop
jmp
clc
cwtl
or
filds
lea
add
clc
std
jle
sub
clc
lock
add
mov
xchg
inc
clc
leave
loop
push
arpl
add
add
mov
cmp
push
out
and
add
roll
add
add
clc
pushf
cltd
hlt
mov
ljmp
stc
jmp
clc
xchg
fdivrs
mov
add
cli
inc
add
stos
mov
xor
add
dec
in
cmpsb
clc
hlt
mov
add
jns
add
mov
add
mov
jno
add
lods
sar
leave
jno
add
add
fsubs
loop
test
outsb
cmp
add
push
add
mov
push
clc
cmp
add
sbb
lods
fmull
add
add
sub
add
clc
out
push
mull
out
cmovg
push
clc
sahf
aam
clc
and
adc
add
popf
mov
mov
lea
sub
clc
or
mov
cmpsb
clc
mov
bound
add
add
clc
jle
add
scas
push
add
mov
inc
add
icebp
cmp
add
hlt
notb
cltd
cmovb
add
clc
xor
add
inc
add
xchg
xchg
adc
loopne
and
adc
movsb
clc
mov
pop
jbe
dec
xchg
ret
push
jns
clc
aad
jge
movsl
clc
sub
clc
data16
scas
lods
xchg
push
mov
clc
mov
cmp
or
outsl
pop
adc
add
in
stos
push
add
icebp
dec
xlat
push
add
ds
inc
clc
xchg
addr16
sbb
mov
push
scas
xchg
push
pop
mov
add
add
add
jo
add
clc
gs
cs
or
add
aaa
movups
add
fwait
popf
xor
add
jle
clc
loop
stos
mov
xchg
lcall
mov
cmp
cmp
enter
clc
inc
clc
adc
add
and
add
add
add
clc
rolb
lock
add
xchg
in
push
clc
inc
clc
arpl
add
cmpsl
clc
pop
cmp
pop
clc
jl
clc
mov
cmp
and
add
sarb
add
pop
xor
add
inc
clc
ret
mov
clc
dec
mov
cmp
add
adc
add
add
dec
adc
add
aas
push
mov
add
clc
dec
jl
dec
das
or
add
add
add
add
jg
push
push
add
mov
add
dec
nop
xchg
add
or
lahf
or
add
repnz
add
gs
adc
add
add
sub
clc
stc
mov
xchg
test
mov
mov
dec
pop
mov
add
dec
sub
call
cmp
clc
imul
clc
pop
cmp
clc
stos
imul
jo
add
add
clc
lret
out
ret
clc
xchg
hlt
ficoml
add
clc
jno
add
out
jns
sbb
mov
add
push
xabort
or
fs
adc
add
pop
lret
xabort
clc
mov
add
movsl
clc
sbb
jecxz
xor
add
cmpsb
clc
and
add
cmp
repnz
add
cmp
lret
stc
pop
mov
gs
jl
push
pop
iret
fwait
movsl
clc
iret
inc
add
push
add
lret
in
out
mov
pop
cmp
inc
clc
sub
pusha
add
cmpsl
clc
movsl
clc
adc
add
stos
adc
add
fnsave
clc
mov
add
add
pop
sub
push
add
mov
pop
js
fstpl
pop
clc
mov
popa
add
test
add
repnz
aam
pop
pop
mov
adc
add
add
add
clc
call
jno,pt
add
add
scas
mov
clc
in
xor
add
mov
repnz
add
push
cmp
add
add
add
add
fstps
out
jl
inc
clc
push
cmp
gs
dec
push
or
add
dec
lock
pop
sbb
ljmp
add
jecxz
jnp
rol
clc
dec
hlt
sti
cs
outsl
mov
add
fcoml
add
sbb
or
inc
clc
fabs
clc
out
in
movsl
clc
dec
into
es
push
dec
add
icebp
cmp
jmp
add
mov
mov
clc
ret
clc
cwtl
in
fstps
and
add
test
dec
adc
or
clc
jmp
fdivs
int3
mov
mov
jle
push
add
pusha
add
out
jle
mov
sti
fnsave
add
mov
in
mov
pop
fwait
or
add
add
jl
push
clc
and
add
pop
add
add
aam
out
stc
pop
push
jns
clc
push
ret
clc
nop
sub
clc
movsl
clc
repz
mov
ret
clc
sub
mov
mov
add
lahf
repz
popf
add
add
dec
push
add
fdivl
add
sub
add
out
sti
in
jnp
pop
push
or
jp
push
mov
sub
js
arpl
add
clc
push
clc
mov
clc
sti
jb
add
cmp
xor
clc
or
adc
clc
push
add
add
add
lods
scas
adc
add
lahf
cli
mov
adc
dec
xor
add
aad
je
clc
xor
fwait
sbb
jbe
stos
mov
cli
ss
add
cli
push
int
mov
mulb
dec
data16
jnp
add
aaa
loopne
or
in
pop
jns
add
mov
cli
jecxz
pusha
add
dec
inc
clc
call
cmp
clc
es
push
add
out
pop
shl
adc
add
pop
movsb
clc
and
add
clc
adc
add
cmp
ja
add
xchg
sarl
clc
scas
mov
mov
popf
xor
add
cmpsb
clc
and
add
clc
out
inc
clc
add
push
add
sub
pop
leave
cmp
mov
add
shl
ss
add
int
and
in
xbegin
clc
rol
clc
dec
and
add
dec
in
or
add
cmp
sahf
inc
clc
pop
fildll
add
ficomps
aam
add
mov
push
mov
mov
dec
dec
jge
add
add
xor
add
add
cmp
sbb
jnp
clc
push
pop
pop
pop
cli
aaa
dec
enter
add
sub
in
lret
pop
cmp
clc
outsl
pop
jp
push
lret
sahf
jg
jnp
push
add
adc
add
mov
mov
push
jle
add
das
jl
clc
shll
repnz
pop
jo
add
or
add
add
movsb
clc
jbe
cltd
add
add
mov
jl
adc
add
cmp
mov
xor
add
dec
repnz
pusha
add
in
add
xbegin
or
dec
addr16
movsl
clc
inc
add
js
clc
lret
ret
xor
add
in
mov
outsl
mov
rcrl
test
dec
inc
clc
cmp
clc
pusha
add
out
in
es
fmuls
std
mov
cmp
ret
add
mov
insl
sbb
xchg
enter
or
add
push
sub
add
cmc
repz
add
insb
mov
clc
or
add
push
add
push
add
mov
sahf
aad
mov
mov
faddl
add
inc
add
or
clc
push
fisubrl
aad
fists
add
clc
push
add
out
sbb
push
movsb
clc
jg
add
xchg
xchg
mov
xor
add
add
mov
clc
loopne
ds
int
add
cmp
aaa
xor
add
mov
add
add
add
add
ja
scas
jns
clc
mull
add
push
lret
cmpsb
clc
mov
clc
push
cmp
inc
clc
int
add
data16
jne
xor
add
dec
enter
out
js
mov
es
call
pop
sbb
inc
add
cmpsb
clc
out
outsb
das
repnz
int3
jno
add
push
clc
pop
test
fisubs
aaa
mov
adc
add
mov
ljmp
add
and
add
clc
cwtl
xor
fdivs
clc
push
add
and
add
loop
xchg
scas
jp
fcomi
push
add
jmp
cli
cmc
frstor
fnstcw
add
cmpsl
clc
and
add
and
add
movsb
clc
repnz
add
push
frstor
or
lods
mov
add
push
push
test
mov
xor
add
data16
jl
clc
imul
jmp
clc
or
clc
int
fistpl
clc
lcall
or
scas
jl
pop
filds
add
add
mov
and
add
clc
dec
sbb
mov
clc
pop
dec
pusha
add
ljmp
add
sbb
add
scas
push
fildll
pop
gs
mov
add
lock
sub
add
ds
add
outsb
push
mov
lods
ret
clc
or
add
cmp
clc
cltd
rolb
add
pop
pop
and
add
clc
mov
xor
add
or
add
popa
add
ror
mov
add
mov
mov
fs
jae
add
fldt
add
cmp
add
test
in
or
pop
jg
pop
jecxz
popa
add
iret
sbb
clc
fs
stos
in
cltd
and
mov
add
add
jmp
add
cmp
clc
pusha
add
lock
in
pop
insl
dec
pushf
icebp
dec
in
inc
add
adc
add
repnz
clc
inc
add
ret
add
jb
add
cli
push
add
fucom
clc
add
loopne
or
leave
pusha
add
jmp
clc
test
jle
or
push
inc
add
ss
add
cmp
clc
das
mov
mov
pop
mov
mov
je
aad
clc
push
leave
sbb
fstps
add
and
add
clc
pop
movsb
clc
mov
add
clc
sahf
mov
pop
lods
outsb
pop
data16
std
pop
out
inc
clc
icebp
imul
clc
xor
add
dec
testl
add
outsl
loop
enter
add
adc
add
clc
xchg
aaa
scas
mov
clc
outsb
xor
mov
add
add
jnp
int3
mov
sub
sar
add
jp
stc
loop
mov
and
add
add
lcall
push
add
jne
mov
add
pop
or
jo
add
clc
into
mov
in
push
add
add
add
dec
scas
insb
icebp
cli
int3
in
push
add
cli
pop
ss
clc
and
add
clc
insl
xchg
divl
je
cwtl
add
jecxz
jo
add
mov
sti
mov
out
and
jnp
clc
mov
cmp
mov
data16
push
push
cmp
add
dec
jns
add
int
popa
add
mov
add
mov
add
add
push
add
test
jg
sar
popa
add
in
mov
imul
inc
clc
das
je
popa
add
stos
cmp
clc
pop
nop
jg
adc
add
sahf
sti
loop
inc
clc
xor
add
add
or
cld
sbb
add
pop
rclb
inc
add
and
add
cmp
jecxz
adc
add
add
mov
clc
jae
add
cmp
mov
clc
test
sub
cmc
jg
and
dec
scas
jmp
fs
cwtl
inc
clc
jl
add
sbb
xchg
rcll
add
add
add
add
rolb
add
cmp
add
outsb
js
iret
cmc
std
sahf
cmpsl
clc
add
add
xor
clc
repz
pop
ret
clc
es
mov
add
in
daa
clc
inc
clc
scas
mov
mov
push
add
loope
add
scas
dec
and
add
sar
sub
add
xchg
sahf
movsb
clc
or
clc
xchg
rorl
or
jle
loopne
ret
clc
sub
clc
push
jbe
clc
gs
jp
add
fistpl
add
jno
add
ret
inc
clc
outsl
xor
add
clc
jle
add
mov
filds
jg
mov
clc
or
clc
data16
xchg
arpl
add
sbb
js
jp
xor
add
sbb
mov
dec
mov
xchg
loopne
mov
insl
mov
inc
clc
aam
xchg
sub
inc
add
dec
mov
clc
jmp
jae
add
inc
add
and
add
push
sti
lahf
xchg
cli
sbb
jp
jno
add
in
pop
or
clc
dec
mov
and
add
lods
sbb
leave
ret
adc
add
push
fmull
lods
sbb
xor
add
clc
adc
add
or
add
frstor
rcrb
clc
jbe
int
clc
test
xchg
bnd
add
add
in
out
mov
xchg
adc
add
cli
lret
pop
popf
and
add
mov
mov
clc
test
dec
push
pusha
add
push
add
loope
and
add
lock
cmp
adc
add
je
in
cs
nop
pop
xor
outsb
sbb
mov
add
mov
push
icebp
jbe
lock
clc
push
and
je
add
cli
jbe
clc
sub
clc
inc
add
ffreep
clc
cmp
aam
add
fimuls
addr16
nop
push
iret
out
xchg
add
add
add
dec
push
clc
pop
cmp
dec
cmp
inc
clc
xbegin
clc
sub
clc
mov
test
jle
add
cld
ret
add
mov
xor
add
cmp
ficomps
jg
mov
xchg
lcall
add
repnz
xchg
xchg
ret
clc
out
inc
add
xor
add
push
adc
add
pop
fldenv
add
out
cwtl
cwtl
jg
pop
adc
add
or
add
xchg
test
lret
clc
roll
test
or
clc
pslld
ret
mov
lea
data16
jmp
gs
lods
sub
add
lret
stc
iret
loop
cmp
add
cmovs
clc
push
push
clc
and
add
mov
jg
cld
jp
cmpsb
clc
jg
clc
lcall
add
fwait
pushf
pushf
int
sbb
dec
leave
xor
push
insl
lods
iret
imulb
jmp
jnp
clc
xor
add
loopne
push
fs
sub
arpl
add
cmp
clc
xchg
xchg
xor
add
insb
dec
test
ss
das
jae
add
clc
das
mov
mov
add
mov
clc
xchg
pop
imulb
xchg
je
cmp
jge
and
dec
ds
jecxz
or
clc
pop
xbegin
mov
mov
add
pop
clc
leave
lahf
adc
jmp
push
xlat
xor
add
mov
clc
or
clc
and
add
cmc
jb
add
xabort
clc
or
mov
cmp
cld
call
jae
add
add
in
imul
clc
cmp
sub
add
add
stc
loopne
stc
push
clc
enter
int
clc
cmp
pusha
add
imul
add
lahf
mov
pop
daa
clc
popl
add
hlt
mov
jl
add
test
cmp
add
add
lahf
mov
push
add
jns
addr16
fwait
xlat
xchg
add
add
in
push
add
cmp
clc
mov
clc
pop
or
add
add
mov
cld
mov
push
add
bound
add
mov
add
int3
imull
jae
add
cmp
mov
fsubrs
mov
leave
mov
mov
add
sar
stos
outsl
cmp
add
jne
mov
add
fidivl
push
push
add
aas
fsub
clc
nop
xchg
cmp
add
mov
call
add
clc
xchg
insb
loop
aam
clc
jmp
ret
clc
push
add
xor
add
add
jle
mov
clc
sub
add
sahf
inc
add
addr16
inc
add
mov
add
xor
add
add
mov
add
clc
fdivl
cmp
cmp
ja
clc
ja
and
add
mov
add
cmc
std
pop
adc
inc
add
mov
jp
dec
adc
add
add
add
xchg
inc
clc
mov
jmp
add
movsb
clc
loopne
and
add
and
add
pusha
add
xor
add
pop
outsb
dec
aad
clc
dec
add
add
add
add
xor
add
clc
push
jmp
xbegin
mov
add
mov
add
clc
arpl
add
jnp
add
add
xor
add
add
loopne
ds
cli
imulb
push
pop
sub
inc
add
je
push
clc
sbb
fstps
add
shr
lret
cld
call
add
pop
push
clc
xchg
xor
add
clc
xchg
rcrb
add
inc
add
daa
clc
jbe
cld
test
clc
out
cmp
clc
pop
ljmp
mov
loop
out
dec
cmpsb
clc
add
add
cmp
loop
dec
jmp
bound
add
stos
shll
clc
stos
fstpl
faddl
dec
mov
or
or
add
movsl
clc
popa
add
cmp
push
and
outsl
mov
add
adc
add
sub
clc
push
popf
test
rcll
add
add
add
mov
jle
mov
add
pushl
add
fnstcw
add
out
cmpsb
clc
mov
clc
add
add
adc
stos
ss
das
stc
mov
lea
ds
sar
xor
clc
push
adc
add
sub
clc
hlt
sahf
or
ret
clc
mov
clc
or
cli
sub
inc
clc
imul
clc
cmpsb
clc
push
clc
bound
add
add
add
mov
hlt
mov
add
notb
add
test
icebp
fwait
mov
aam
dec
ds
cld
int
jp
and
add
add
stos
cwtl
jno
add
cmp
popa
add
shlb
add
add
add
test
lret
adc
stos
fiadds
xor
clc
mov
clc
push
imul
add
cmp
push
cmp
cmp
inc
add
dec
push
mov
fsts
pop
adc
add
std
cmp
or
clc
mov
clc
mov
bound
add
or
cmp
add
add
icebp
int3
jecxz
jno
add
nop
insl
jno
add
clc
call
int
clc
mov
sar
clc
cmp
mov
sub
mov
clc
lea
insl
scas
enter
cmp
mov
add
add
and
loopne
push
xor
add
clc
xor
sbb
push
clc
mov
add
clc
neg
ljmp
into
adc
add
mov
cmc
sarl
insb
push
add
sbb
xchg
testl
add
add
xchg
js
jnp
xor
jg
xchg
cmp
add
loope
hlt
xchg
push
mov
push
loop
add
add
or
add
jl
cs
std
arpl
add
addr16
mov
and
add
jnp
lcall
xor
add
mov
inc
add
adc
add
aad
add
bound
add
clc
dec
cmp
and
add
add
jp
adc
add
add
cs
stc
sub
pusha
add
xor
add
jb
add
add
sar
lock
cld
lret
fldenv
pop
mov
dec
out
xchg
loopne
push
pop
adc
add
clc
pusha
add
add
add
add
inc
clc
iret
jnp
or
adc
xor
add
clc
dec
inc
add
mov
mov
cltd
aas
stos
mov
push
add
sbb
into
add
add
add
data16
pushf
mov
add
dec
cmp
hlt
out
xor
add
cmp
clc
mov
cmp
inc
add
adc
data16
clc
cmp
push
pop
jo
add
cs
sar
pop
cli
enter
cmp
sarl
in
adc
add
loop
push
add
sar
clc
jecxz
addr16
ret
clc
xchg
cmp
into
aad
xor
clc
or
jbe
sbb
mov
xabort
add
cwtl
sar
pop
cmp
add
and
add
in
mov
add
movsl
clc
cmpsl
clc
out
fcmovne
mov
aam
jae
add
es
loop
sub
ret
clc
and
add
cmp
and
add
stos
mov
int
cwtl
stos
cwtl
cmp
mov
sub
clc
clc
xchg
jecxz
push
call
inc
clc
xlat
push
jl
lods
aaa
mov
clc
push
mov
ret
clc
loope
add
add
outsb
fldl2e
add
add
clc
arpl
add
je
clc
gs
and
add
cmp
xchg
push
cltd
xchg
mov
arpl
add
es
hlt
scas
jge
xchg
insb
inc
clc
mov
adc
add
clc
add
adc
add
cltd
and
add
loop
adc
add
leave
and
add
aas
stos
sbb
test
rorl
clc
imul
jmp
add
insl
out
sar
fildl
push
mov
clc
loopne
add
add
adc
add
add
adc
add
and
add
leave
sar
pop
mov
push
add
mov
ret
clc
jb
add
std
cmp
pop
sbb
clc
jnp
mov
aas
push
cmp
int3
push
clc
xchg
jo
add
add
dec
popf
test
pop
insb
pop
clc
fwait
rorl
clc
test
lcall
push
add
cmp
adc
add
mul
clc
inc
add
push
fcmovu
clc
jbe
mov
ret
outsl
loope
jnp
leave
inc
clc
sarb
lahf
out
scas
and
add
add
cmpsl
clc
icebp
in
or
add
aad
repz
clc
test
sub
xor
add
mov
inc
add
pop
adc
add
clc
pop
adc
add
add
push
inc
add
or
jne
add
bound
add
add
cmp
je
add
push
add
mov
add
repnz
add
add
clc
push
add
add
add
xchg
add
add
xbegin
clc
or
repz
sub
jb
add
xor
add
lcall
cli
sahf
stos
aad
add
sbb
lret
lods
push
add
push
mov
push
fldenv
dec
mov
icebp
and
add
clc
dec
js
clc
ret
clc
pop
mov
clc
insb
jne
pop
xchg
dec
or
cmpsb
clc
ss
sub
add
daa
clc
add
add
clc
jnp
mov
sub
lret
clc
xchg
cs
add
push
cmp
jecxz
sbb
clc
pop
lods
xchg
jg
sbb
imul
sbb
cld
xchg
mul
clc
test
sbb
add
add
fs
adc
popf
jle
clc
scas
or
add
xor
xor
add
lret
xlat
lcall
clc
imul
je
add
mov
clc
faddl
pop
aam
cli
movsl
clc
and
add
add
clc
and
add
add
clc
scas
int3
xabort
clc
jns
push
test
add
inc
clc
sar
es
adc
mov
clc
mov
sub
js
loop
jbe
push
clc
mov
xchg
xchg
mov
xchg
xor
add
repz
add
add
push
addr16
push
add
cmp
jl
clc
push
add
push
sub
mov
add
add
add
add
pop
mov
add
data16
xlat
cmc
gs
out
mov
sbb
mov
adc
add
clc
mov
js
loope
mov
fmull
pusha
add
push
add
ljmp
in
fisubrl
ja
fbstp
clc
cs
push
add
xor
add
ja
add
push
add
xbegin
out
fistl
sar
cmp
clc
cwtl
in
cmp
nop
jg
add
add
mov
insb
jne
mov
cld
fmul
out
dec
aas
scas
insl
addr16
call
add
ja
cmp
sub
dec
pop
inc
add
cs
clc
xor
add
add
jp
mov
aam
ret
clc
sub
bound
add
add
popf
adc
clc
scas
cmp
clc
icebp
cmp
inc
clc
push
push
add
or
mov
clc
shlb
add
out
inc
add
sub
clc
pop
lcall
cwtl
stc
push
dec
xor
add
or
clc
inc
add
xor
add
test
pop
cmp
clc
and
add
inc
clc
out
js
pop
imul
add
add
leave
rorb
xchg
inc
add
pop
loope
and
cmp
clc
mov
xor
add
and
cli
push
add
dec
mov
push
das
mov
jne
add
stc
xbegin
mov
add
add
adc
add
add
int3
inc
add
sbb
je
cmp
add
das
out
jp
cmp
add
inc
clc
bndldx
add
add
add
ja
add
dec
push
add
mov
scas
fdivl
pop
xchg
iret
stc
lahf
in
mov
clc
data16
xlat
pop
sarl
scas
sub
clc
test
pop
test
jo
add
add
jns
lret
xor
add
fadds
add
notl
xor
test
add
push
pop
mov
clc
sar
cmp
insb
inc
clc
xchg
stos
js
add
cmp
mov
mov
mov
gs
test
cwtl
dec
popa
add
xchg
gs
cmp
jecxz
push
jo
add
pop
mov
sub
clc
fstpt
and
add
add
push
clc
sti
jge
clc
mov
xchg
pushf
fistl
clc
cltd
stos
push
add
push
mov
push
add
jecxz
out
cwtl
cmp
repz
add
clc
jecxz
jecxz
sub
fwait
addr16
mov
into
xchg
lods
cmpsl
clc
cltd
call
add
nop
push
loopne
repz
clc
das
jle
pushf
ss
je
push
sub
lret
rclb
add
jmp
clc
ljmp
mov
clc
and
add
jp
clc
fsubs
add
outsl
pop
clc
and
test
jns
add
repz
add
inc
add
push
add
push
add
jns
clc
test
cmp
clc
inc
clc
jo
add
mov
cltd
inc
add
clc
aaa
leave
insb
jnp
loop
int3
and
add
add
enter
pop
clc
or
fistpll
repz
mov
mov
imul
pop
int
xchg
sub
clc
sbb
clc
adc
add
xor
add
pop
icebp
out
pop
fcmovb
clc
pop
clc
in
ret
lret
or
xchg
jno
add
add
add
mov
clc
ret
clc
or
es
dec
dec
mov
inc
add
lahf
mov
clc
gs
jecxz
je
add
cmp
sbb
sar
and
dec
xbegin
adc
add
mov
jle
sbb
xlat
sbb
add
mov
clc
lea
inc
add
sub
ret
cmp
mov
ljmp
xor
mov
cmp
clc
gs
fidivrs
bound
add
divl
add
in
push
adc
add
fistpl
add
int3
xchg
fcompl
scas
stos
popf
xchg
cmpsl
clc
stc
stos
popa
add
cmp
add
pop
clc
sti
das
push
stc
negl
pop
jb
add
scas
mov
add
add
inc
clc
xor
add
dec
ljmp
mov
dec
aas
decb
negb
mov
jmp
mov
out
mov
ljmp
add
int
clc
push
add
fwait
jb
add
mov
jnp
xchg
inc
clc
stos
sbb
pop
in
jge
clc
aaa
mov
clc
xor
add
clc
fs
je
shll
cmp
clc
xlat
lods
mov
leave
loop
es
addr16
aam
imul
cmp
dec
inc
add
cmc
cmp
clc
push
add
push
jns
dec
xchg
inc
clc
cld
out
adc
add
dec
mov
ret
sti
sahf
mov
pusha
add
xlat
sti
jno
add
add
add
scas
call
clc
xor
mov
fidivl
add
xor
add
or
xor
add
push
mov
cld
pop
outsb
cmp
xchg
es
pusha
add
sub
push
add
pop
data16
or
or
lahf
dec
mov
ss
add
jmp
clc
sub
clc
hlt
int3
sti
jb
add
xor
aas
jge
mov
fmuls
mov
pop
add
add
xor
add
popf
cmp
xor
inc
clc
and
std
aas
imul
js
add
dec
xchg
mov
lods
jp
das
aad
clc
and
clc
outsb
in
sub
mov
and
add
clc
inc
clc
stos
pusha
add
mov
mov
clc
mov
add
and
add
push
push
cmp
ret
clc
lcall
lahf
setb
xor
add
or
clc
xor
add
lea
je
clc
xor
add
ja
imul
push
dec
xor
push
inc
clc
bound
add
clc
scas
into
mov
in
mov
sub
clc
arpl
add
clc
inc
clc
lret
cmp
add
movsb
clc
lods
cld
cwtl
jecxz
push
out
cmp
imul
clc
push
xchg
icebp
mov
inc
clc
sarl
add
jge
scas
sar
cwtl
mov
imul
mov
mov
cwtl
daa
clc
into
and
pushf
xlat
jo
add
lret
add
fs
push
bound
add
push
push
add
int
push
ret
clc
paddd
add
xchg
movsb
clc
push
clc
push
bound
add
and
add
add
test
jbe
arpl
add
movsb
clc
inc
clc
sbb
clc
mov
or
clc
mov
add
add
clc
jo
add
add
or
add
into
fstps
cmp
mov
clc
mov
clc
out
cmp
daa
clc
sub
sar
dec
inc
add
pop
scas
mov
daa
clc
mov
cmp
pushf
cltd
inc
clc
adc
add
clc
neg
xlat
xor
add
mov
cmpsl
clc
pop
xor
cmc
jle
dec
stos
jns
clc
test
dec
sar
sub
cmp
add
and
add
loop
std
push
push
mov
clc
push
clc
fs
cltd
cwtl
sbb
sbb
jne
mov
lods
fwait
int
mov
xchg
pusha
add
clc
dec
lcall
clc
or
cli
push
add
pop
inc
clc
sbb
add
pusha
add
xlat
xchg
cltd
jle
clc
add
mov
adc
xbegin
mov
mov
cmc
lret
fwait
pop
incl
add
outsb
inc
clc
jp
es
cmc
daa
clc
data16
cmp
bound
add
jb
add
movsb
clc
adc
add
sarb
lods
mov
scas
push
insl
in
xor
add
stc
push
add
cmp
clc
pushf
sar
inc
clc
mov
add
xchg
stc
mov
clc
add
add
mov
inc
add
sbb
add
jl
ss
cmpsl
clc
sbb
jg
arpl
add
adc
add
cmp
pop
xor
add
rorb
mov
aad
clc
arpl
add
add
sbb
add
inc
clc
cmc
gs
pop
std
xor
add
xor
add
adc
add
add
fisubl
clc
adc
add
push
clc
sbb
lods
sub
rorl
jbe
loope
mov
js
pop
mov
std
push
clc
mov
add
add
cmp
dec
sahf
pop
sub
add
jb
add
or
add
dec
cwtl
outsl
mov
clc
mov
add
add
add
add
call
clc
mov
add
cmc
bound
add
clc
je
aas
leave
jns
clc
cli
fwait
xchg
xchg
xor
add
into
mov
sar
pop
mov
and
add
add
push
lods
loop
popa
add
mov
scas
out
and
add
or
xchg
iret
mov
jecxz
push
add
mov
add
clc
mov
cmp
popa
add
push
pop
or
push
add
stos
xchg
push
mov
icebp
sub
or
clc
fimull
inc
clc
test
inc
add
xchg
cld
mov
clc
cwtl
or
add
movsl
clc
cmp
ffree
clc
int
clc
bound
add
cmp
sub
adc
add
clc
push
xbegin
jge
or
add
out
mov
scas
push
cmpsb
clc
imul
test
push
inc
add
and
add
clc
jmp
clc
adc
cmp
aam
pop
lcall
cltd
std
push
add
pop
imul
push
add
popf
sbb
je
clc
mov
mov
add
nop
mov
clc
pop
dec
adc
jge
clc
jle
clc
outsb
xlat
xor
stc
jns
and
xchg
out
dec
mov
add
jb
add
cmp
jle
clc
push
clc
push
add
xor
fwait
push
sbb
test
call
int
fldcw
or
clc
test
mov
mov
add
push
je
test
in
gs
or
clc
sub
clc
dec
inc
clc
cmp
add
arpl
add
rol
clc
sarb
data16
push
lret
add
clc
lcall
pusha
add
lock
clc
inc
clc
rorb
fnstcw
adc
add
mov
fxch
mov
add
adc
add
ja
scas
clc
js
clc
fsubs
add
add
mov
lods
into
mov
and
adc
add
cmp
clc
push
mov
add
add
lahf
jns
add
aas
cmp
push
adc
add
clc
xor
add
dec
int
sbb
rorb
popf
xchg
push
clc
sub
ss
add
push
add
adc
add
clc
mov
jmp
clc
ljmp
daa
clc
add
add
xchg
sti
jge
sbb
dec
sub
xchg
cmp
mov
add
daa
clc
xchg
xor
push
inc
add
insb
cli
xor
add
adc
add
push
add
daa
clc
jns
push
fdivs
fst
xor
add
add
cmp
add
pop
clc
push
xchg
std
aad
cmc
add
jbe
add
in
mov
add
fbld
add
loopne
push
xor
add
pop
or
fadd
clc
push
jae
add
sub
out
out
insl
lret
sar
leave
adc
add
inc
clc
hlt
js
add
cli
adc
add
pop
es
leave
clc
mov
adc
add
in
cs
mull
push
mov
mov
cmp
cmp
aas
add
add
dec
mov
jb
add
clc
mov
lcall
fsubs
add
push
cmc
addr16
leave
sub
adc
add
in
push
hlt
pop
mov
sahf
xchg
adc
add
add
clc
fs
xor
add
pop
cmp
clc
int3
test
add
add
adc
add
add
add
add
clc
push
add
jns
inc
clc
mov
clc
movsb
clc
cmpsb
clc
rcll
add
clc
loope
push
cld
push
lahf
xor
add
data16
into
sbb
mov
aaa
xor
outsl
xchg
fstpt
add
clc
push
jle
add
jns
clc
push
pop
fwait
pop
bound
add
out
add
add
movsl
clc
add
add
clc
stos
lods
clc
adc
add
add
sub
add
add
lret
and
add
add
add
add
xor
gs
adc
inc
clc
in
xor
add
fiaddl
clc
fiadds
add
into
pushf
xor
clc
push
add
cmp
xchg
jp
pop
cmp
enter
mov
fisubs
add
mov
movsb
clc
mov
mov
add
pop
xchg
testl
xor
add
add
lock
test
xchg
lahf
push
add
dec
xor
add
add
scas
imul
das
ljmp
push
add
into
out
sti
jge
clc
push
mov
xlat
in
sbb
clc
mov
movsl
clc
ret
clc
stc
mov
mov
clc
pushl
add
push
add
add
clc
fcmove
sub
add
loopne
pop
cwtl
test
cld
jne
add
add
add
dec
add
add
inc
add
mov
jno
add
and
add
xchg
das
xor
add
stos
mov
inc
clc
mov
and
add
add
and
clc
sbb
imul
push
mov
clc
enter
div
pop
xor
add
inc
add
repnz
add
push
mov
add
loope
and
add
push
inc
clc
gs
loop,pn
jl
cmp
clc
cmp
clc
test
testl
jb
add
pop
out
test
rorb
dec
mov
add
iret
lret
add
add
fs
cmp
add
setle
add
add
add
mov
pushf
xchg
cmp
add
jns
data16
or
mov
xchg
jnp
stc
movsl
clc
pushf
pop
push
jl
push
or
cmpsl
clc
mov
scas
aad
push
ljmp
hlt
in
hlt
mov
jns
clc
xchg
fidivs
je
cmpsl
clc
sbb
clc
mov
ds
add
xchg
xlat
adc
fdivs
es
xabort
add
imul
cmp
push
das
mov
clc
push
add
test
jo
add
cmp
add
sbb
add
push
push
jo
add
clc
leave
jnp
addr16
push
push
loope
inc
add
ja
add
stos
std
mov
cmp
xor
add
add
in
sar
rcrb
stos
test
insb
mov
sar
clc
lock
inc
add
adc
add
add
jmp
cmp
test
push
add
or
test
and
add
xchg
mov
xor
add
clc
or
clc
xlat
and
add
clc
push
add
xbegin
dec
ja
mov
mov
add
inc
clc
or
inc
add
pop
pushf
cmp
cmpsb
clc
cmp
rorb
out
shll
clc
cmp
pop
clc
or
dec
mov
idiv
movsb
clc
mov
adc
add
push
add
jnp
dec
repnz
xabort
mov
add
fisttpl
pop
dec
xchg
add
add
clc
mov
add
ja
je
ds
clc
gs
std
movsl
clc
fcomps
mov
ds
clc
pushf
repz
mov
fbld
sub
add
data16
inc
add
repz
add
add
ja
add
dec
add
add
clc
fnstenv
add
shll
add
mov
add
insl
jnp
xchg
push
lcall
inc
add
imul
mov
outsb
mov
cld
rcrb
mov
lahf
adc
add
pushf
xchg
add
jo
add
clc
cmp
add
jg
push
addr16
lock
in
cld
sar
clc
mov
es
push
add
xchg
pop
inc
clc
pop
pushf
aas
xchg
out
insl
rcl
or
clc
sub
lret
cmp
movsb
clc
adc
add
xor
rep
clc
lcall
lea
std
nop
push
lods
add
add
add
jne
aaa
out
cmc
add
add
js
imul
pop
fildl
add
daa
clc
xor
add
add
xbegin
add
add
inc
clc
js
add
push
add
movsl
clc
xchg
jle
fnstcw
cli
mov
mov
clc
pop
call
insb
xchg
push
add
cli
int
std
es
mov
add
add
paddsb
lahf
adc
add
or
clc
cli
out
jle
sub
xor
add
add
cmp
sub
hlt
lcall
push
add
push
dec
jns
clc
sbb
add
pop
push
add
pusha
add
jg
mov
add
add
ja
clc
jl
clc
test
mov
push
add
mov
mov
outsb
divl
add
pop
mov
mov
add
fnstcw
push
mov
xabort
clc
nop
insb
xchg
xchg
repnz
pop
and
movq
in
and
add
push
xor
add
pop
jmp
add
xchg
push
add
jnp
clc
cwtl
jecxz
lret
dec
pop
xabort
add
add
lret
or
add
xchg
jns
mov
ss
xor
add
cmp
dec
and
add
pop
sub
popf
inc
clc
ds
add
clc
ret
mov
clc
sub
push
fwait
call
loope
dec
jnp
add
push
dec
dec
sar
clc
sahf
aas
sarl
clc
xlat
scas
add
test
add
loop
jo
add
add
mov
add
xchg
cld
inc
clc
loopne
repz
clc
loop
test
test
clc
push
leave
and
add
cmp
stc
enter
xchg
jmp
sub
add
sbb
sar
clc
iret
xchg
jle
clc
loop
xchg
int3
xor
add
add
push
cmp
add
loope
sbb
fisubs
add
sbb
out
aam
sbb
jb
add
add
mov
jae
add
mov
clc
pmaxub
xabort
mov
loopne
mov
jbe
or
shr
jne
cmp
dec
lods
clc
int
je
add
scas
gs
stos
stos
gs
push
pop
push
outsb
sub
clc
loop
clc
add
add
add
adc
add
fistpll
inc
clc
pop
inc
clc
cmp
add
clc
dec
in
icebp
leave
push
add
mov
mov
dec
repnz
jbe
fldenv
and
add
or
lods
cmpsl
clc
data16
mov
clc
push
clc
mov
out
pusha
add
or
add
das
repnz
xchg
lret
cmp
add
popa
add
cmp
fisubrs
clc
inc
clc
cmpsl
clc
mov
rorb
adc
add
and
add
insl
pop
das
cmp
pcmpgtb
mov
shlb
cmp
rcll
add
add
fidivrs
xor
add
dec
scas
popl
add
add
sbb
add
push
add
mov
mov
add
xlat
mov
xchg
test
gs
scas
insl
movsl
clc
xchg
shll
and
add
inc
add
mov
xchg
bound
add
clc
fsub
clc
sahf
xchg
test
add
lea
add
rcrl
shrl
cmc
cmp
sbb
clc
fldt
mov
clc
jp
clc
push
add
xabort
cmp
fistpll
in
cld
roll
stos
lret
jnp
arpl
add
clc
jmp
adc
add
clc
push
sub
cltd
dec
es
sti
xor
add
mov
jmp
clc
mov
add
push
mov
clc
stos
ret
clc
pop
test
ljmp
dec
aaa
jns
add
xchg
xor
clc
cs
into
sub
clc
mov
fcoms
out
push
aaa
imul
fwait
push
clc
sbb
jge
or
add
inc
add
inc
clc
add
cmp
add
mov
add
dec
cld
ss
clc
hlt
ss
daa
clc
popf
outsl
sbb
pop
dec
fiadds
repz
add
out
fstl
mov
clc
adc
clc
dec
inc
add
fwait
xor
clc
cmp
pop
jle
add
cmp
add
fisubl
fidivl
mov
into
xor
add
lods
outsb
idivb
aas
fisubs
add
test
xchg
loope
and
add
add
xchg
jbe
lods
in
in
jmp
dec
out
cmp
outsb
push
dec
cmp
or
and
add
aam
add
fsub
clc
cmpsb
clc
dec
lret
mov
jp
add
push
outsb
in
and
add
push
add
jbe
cmp
clc
mov
out
push
mov
xchg
push
add
jo
add
xor
add
jne
shl
clc
jb
add
clc
add
add
std
push
jl
stos
sti
jo
add
mov
sahf
inc
add
cmp
cmp
lret
cmc
je
add
add
push
aad
clc
sub
ret
clc
cwtl
mov
add
aam
sub
cwtl
jge
inc
add
mov
add
fisttps
lods
add
add
loop
mov
add
cld
out
sahf
stos
out
mov
clc
push
add
inc
add
mov
or
mov
bound
add
add
adc
add
lret
and
add
mov
scas
xbegin
add
fldl
adc
add
or
frstor
add
clc
icebp
sub
movsl
clc
je
push
add
lret
jnp
mov
pop
imul
clc
sbb
cmp
add
adc
add
add
jg
add
or
add
add
add
xchg
test
mov
mov
clc
add
add
mov
in
hlt
jl
add
dec
mov
fs
xchg
or
xor
add
outsb
sub
cwtl
in
movsl
clc
and
jmp
clc
sahf
clc
push
add
add
fcomip
repnz
test
incb
add
sar
stc
adc
add
add
es
xabort
clc
fucom
clc
mov
dec
inc
clc
sar
push
pop
jns
movsl
clc
pop
clc
fiadds
mov
cmp
mov
aaa
xor
movsl
clc
pop
clc
mov
add
sbb
mov
clc
dec
out
dec
scas
cmp
nop
insb
add
lods
pop
lods
adc
add
inc
add
jmp
je
fld
clc
add
xchg
dec
cmp
pop
cmpsb
clc
ja
sbb
clc
add
add
add
clc
movsl
clc
sub
out
push
add
jmp
nop
outsl
mov
clc
popf
or
in
test
pop
cmc
push
sar
clc
gs
addr16
xchg
popa
add
xchg
leave
sahf
xchg
loope
mov
imul
add
add
mov
mov
leave
jmp
xbegin
test
xlat
rolb
add
or
jmp
dec
ja
or
bound
add
mov
pop
cmp
clc
mov
clc
mov
push
add
fisubrl
out
mulb
clc
mov
push
add
xchg
mov
data16
mov
imul
jno
add
clc
mov
or
ret
cmpsl
clc
aad
dec
into
insl
xchg
jnp
out
push
sub
xchg
add
add
inc
clc
mov
add
xchg
pop
sub
add
add
add
add
std
xbegin
push
cwtl
sahf
and
insl
lret
inc
add
lcall
xchg
cmp
clc
fistl
add
arpl
add
insb
or
jmp
jecxz
hlt
in
push
add
outsl
xchg
push
es
and
add
adc
add
out
or
jne
add
add
add
add
xchg
dec
aaa
mov
jle
add
repnz
lahf
cmpsb
clc
fsubl
add
inc
add
out
scas
cwtl
imul
add
jecxz
lret
add
inc
add
lods
test
cmp
fcoml
test
adc
add
int3
mov
repnz
xor
add
repnz
clc
sbb
sub
add
lret
mov
push
add
sar
add
cmp
add
mov
ljmp
xchg
adc
clc
test
or
clc
push
sbb
or
add
add
add
xchg
inc
clc
adc
add
adc
add
add
mov
popf
inc
clc
test
call
add
jmp
add
fldl
in
jmp
add
int3
test
clc
xor
add
add
add
cmpsb
clc
ss
add
pusha
add
test
xchg
push
clc
cmp
loopne
or
adc
add
add
and
add
jne
mov
mov
mov
add
add
out
std
xor
clc
out
jecxz
pop
lcall
data16
cmp
sub
add
cs
clc
or
test
push
add
cmpsb
clc
sub
mov
dec
insb
fs
or
lret
fstp
or
fimull
inc
add
xabort
add
and
js
mull
dec
call
clc
scas
sar
outsb
dec
popa
add
xlat
xor
add
out
iret
and
nop
mov
fwait
xor
insb
mov
mov
dec
push
mov
jmp
clc
std
je
mov
add
lods
sar
fisubs
clc
mov
add
ss
hlt
pop
and
mov
add
add
pop
jno
add
pop
daa
clc
addr16
push
clc
pop
adc
add
add
add
ja
add
and
push
clc
pop
xor
add
clc
sbb
dec
cmp
push
add
dec
ds
clc
xor
add
add
xchg
ret
pop
lcall
adc
add
add
sar
clc
or
and
add
add
insb
xchg
mov
pop
mov
sar
sub
clc
inc
clc
mov
clc
lret
jmp
add
add
dec
in
adc
add
pop
movsl
clc
mov
in
inc
clc
pop
ret
clc
sar
add
sub
xchg
cmp
into
jecxz
add
push
shrl
jo
add
clc
xchg
mov
cmp
add
xor
add
add
clc
sbb
popf
fidivrs
add
popa
add
or
jb
add
insb
cmpsb
clc
xchg
and
fadds
xabort
add
or
or
jo
add
clc
pop
xor
add
add
fistpl
sbb
or
outsl
rorl
push
add
enter
clc
jg
cmpsb
clc
pop
call
clc
push
add
scas
add
add
add
loopne
daa
clc
mov
clc
mov
leave
mov
clc
jecxz
hlt
ret
mov
inc
add
out
xchg
push
xchg
dec
in
cld
gs
fcos
or
add
add
imul
add
fs
jo
add
ret
push
add
enter
push
jg
clc
cmp
add
cmc
idiv
scas
mov
sbb
add
call
movsl
clc
mov
add
ljmp
fwait
add
add
dec
fnstcw
ret
clc
lods
mov
add
leave
roll
add
xchg
icebp
mov
clc
sbb
add
cmp
or
and
add
add
lods
gs
mov
push
add
jo
add
add
add
add
ficomps
add
add
add
mov
lods
gs
jge
clc
je
mov
mov
push
add
out
fnsave
fabs
clc
push
fadd
clc
push
add
cmp
mov
in
cs
add
or
sbb
mov
pop
push
mov
mov
daa
clc
aad
xchg
iret
pop
pop
popf
jl
jnp
push
add
rcll
inc
add
negl
add
in
lock
inc
add
into
xchg
or
push
lods
insl
pop
iret
aam
test
bound
add
cmp
add
pop
in
inc
add
inc
add
sub
pop
mov
add
scas
mov
clc
pushl
jecxz
arpl
add
and
add
add
in
xor
add
and
dec
movlps
add
out
in
fidivs
add
mov
stos
jo
add
xor
add
clc
test
sbb
dec
lret
clc
dec
in
and
add
aad
dec
pop
fiaddl
push
mov
xor
clc
jl
int3
movsl
clc
push
clc
jg
clc
or
mov
push
insb
pushf
xor
add
adc
adc
xabort
add
jmp
clc
addr16
negl
xor
dec
xchg
dec
in
cmpsb
clc
cli
pop
pop
decl
fidivs
addr16
dec
mov
add
jo
add
add
scas
enter
add
cmp
add
call
clc
in
clc
jbe
add
sub
cmp
inc
add
insb
mov
hlt
js
clc
test
es
ret
clc
cli
mov
rclb
and
sub
clc
mov
insb
out
pop
and
add
pop
xor
add
cwtl
stos
dec
jbe
stos
jno
add
test
fldt
cmp
clc
enter
add
cwtl
cmp
dec
inc
clc
loopne
in
shr
add
add
lods
pop
cmp
cmpsb
clc
jb
add
add
jb
add
outsl
ret
clc
out
scas
fsts
add
clc
sub
data16
xchg
fs
push
xor
add
clc
jnp
sub
add
fadds
or
jecxz
jns
mov
sbb
scas
dec
imul
aad
add
shl
push
repnz
clc
aad
add
dec
sbb
cli
cli
ja
dec
push
in
cmp
outsb
or
add
push
leave
out
xbegin
xchg
movsl
clc
xchg
movsb
clc
mov
push
add
mov
clc
aaa
xor
add
pop
lea
add
sub
push
mov
add
stc
pop
mov
clc
add
dec
ret
clc
hlt
test
js
mov
pop
pop
or
add
jae
add
add
out
cmc
cmpsl
clc
dec
dec
jb
add
mov
lock
add
cmp
mov
add
add
add
add
xchg
clc
jnp
sti
repz
push
lea
lahf
mov
clc
adc
add
add
add
daa
clc
std
dec
inc
add
ss
jae
add
cmp
clc
push
add
dec
aaa
cmp
add
add
add
fwait
sbb
leave
movsl
clc
das
roll
jns
adc
add
lods
nop
pusha
add
rcrl
clc
fiaddl
clc
cltd
or
add
out
xchg
cmp
xbegin
lock
ret
clc
mov
lahf
push
add
fimull
idivb
in
mov
ljmp
add
xor
add
jle
mov
cmpsb
clc
addr16
sub
sbb
clc
int3
sahf
dec
add
add
fsubrp
sbb
mov
clc
inc
clc
addr16
into
pop
sbb
mov
xlat
mov
clc
test
add
enter
addr16
pop
jnp
jno
add
mov
mov
sar
clc
adc
add
clc
mov
mov
push
fidivrs
add
xchg
ds
or
cmpsl
clc
cmp
add
clc
jns
dec
sub
dec
xchg
adc
add
clc
sub
and
add
imul
clc
cli
push
clc
pop
inc
add
push
add
cmp
add
or
cmp
aaa
mov
mov
add
inc
add
dec
xor
add
clc
stc
push
mov
jp
std
movsl
clc
add
add
and
add
add
popa
add
mov
push
arpl
add
stos
hlt
add
mov
clc
inc
add
scas
sub
test
rclb
add
jae
add
sarb
push
add
or
xchg
scas
jbe
dec
std
outsb
jo
add
mov
clc
push
add
mov
outsb
pop
cmp
clc
arpl
add
push
add
test
clc
xchg
pop
ss
mov
pop
pushf
lods
or
clc
jb
add
mov
mov
sub
add
int3
aad
and
add
into
call
clc
call
mov
bound
add
pop
sar
jp
clc
out
test
and
or
add
clc
pmaxsw
dec
lock
nop
dec
sar
ret
clc
mov
mov
pop
pop
call
add
iret
in
cs
cmp
sub
inc
add
mov
imul
imul
dec
aas
mov
bound
add
clc
push
sbb
pop
scas
ret
push
add
addr16
pusha
add
inc
add
dec
aam
mov
insb
cmp
std
clc
sub
clc
push
clc
sub
mov
clc
mov
adc
or
add
cli
cmp
add
pop
or
mov
add
addr16
lcall
jge
add
sbb
inc
clc
clc
sbb
clc
mov
incl
clc
pop
cmc
xor
add
add
clc
dec
stc
pop
clc
cmp
popf
cmpsb
clc
add
clc
add
cmp
test
mov
loopne
inc
clc
add
cmp
das
pop
sub
fwait
pusha
add
pop
or
clc
shll
add
add
out
inc
add
pop
pop
push
add
jge
cwtl
cmpsb
clc
sub
pop
push
mov
add
mov
popa
add
rcl
into
cli
in
sbb
aas
jle
sbb
clc
ljmp
aas
push
mov
dec
cmp
mov
add
push
add
or
add
loope
dec
stos
sbb
add
xchg
push
push
mov
add
push
add
add
add
clc
sarb
lea
clc
lods
jl
repnz
add
add
clc
cwtl
test
add
insb
add
cli
fdivs
add
or
clc
adc
add
add
sub
pop
clc
lcall
mov
add
add
in
clc
xchg
cmp
adc
add
clc
gs
fbld
dec
sbb
cmpsl
clc
bound
add
push
mov
add
test
and
add
pop
pushf
mov
add
add
add
add
jle
sbb
clc
mov
or
push
out
xor
add
or
add
sub
add
jge
jae
add
imul
clc
jne
clc
lahf
jg
call
decl
pop
xabort
imull
or
rcrl
clc
mov
add
insb
testb
add
cmp
clc
inc
clc
inc
add
and
add
iret
repz
inc
clc
xchg
jmp
add
clc
mov
cld
push
clc
rcl
enter
jae
add
sub
vminps
add
or
lods
in
cmp
add
mov
clc
add
movsb
clc
xor
repz
out
fwait
push
jbe
xor
add
repz
mov
test
test
pop
clc
xchg
cli
stc
shrl
clc
cmp
clc
std
xbegin
movsl
clc
dec
sbb
cmpsl
clc
dec
push
mov
cli
gs
push
add
cmp
rcrl
jecxz
mov
scas
pop
dec
cmp
jmp
into
sub
cwtl
fnstsw
and
add
mov
clc
dec
sub
lea
das
cmp
ffreep
clc
adc
add
add
loopne
enter
cmp
pop
mov
gs
lcall
fisubrs
and
add
add
add
clc
leave
xor
cltd
inc
add
mov
clc
mov
xbegin
lods
out
in
test
pop
pop
repnz
clc
sub
movsl
clc
or
mov
ret
clc
mov
clc
cmpsb
clc
jge
out
sub
add
enter
add
dec
inc
clc
fs
mov
jp
clc
lcall
mov
clc
aaa
xabort
clc
push
add
sub
xbegin
mov
pop
hlt
push
add
cmp
sub
add
cld
jl
add
bound
add
add
flds
cld
and
add
clc
mov
cltd
cmp
clc
mulb
sub
je
sub
jmp
clc
lods
pop
or
ljmp
add
adc
add
add
cmp
cmp
clc
int
in
lock
mov
add
xchg
lret
add
lret
and
clc
cmc
int
clc
es
pushf
xor
add
lea
aad
xchg
xabort
add
daa
clc
data16
pop
mov
push
clc
sbb
add
mov
cwtl
inc
clc
jo
add
lea
add
cmp
push
jo
add
clc
arpl
add
add
cmpsb
clc
mov
jge
fs
cmp
inc
clc
xor
add
inc
add
add
xor
mov
jae
add
nop
xor
add
jmp
in
adc
add
add
js
aad
sub
jne
int3
mov
mov
lret
lock
add
mov
add
adc
add
add
fidivrl
jb
add
add
clc
sbb
clc
fldenv
add
clc
rcl
sub
scas
adc
add
clc
xchg
das
or
or
add
dec
jo
add
push
mov
aas
sar
sbb
add
jnp
add
out
clc
test
jb
add
pop
xor
add
add
add
add
add
push
std
js
clc
dec
xlat
lahf
xchg
inc
add
fwait
inc
add
clc
lock
add
adc
add
sbb
negl
push
clc
adc
add
or
out
mov
pop
jmp
jb
add
stos
sub
add
mov
mov
inc
add
inc
clc
push
add
jmp
clc
cwtl
or
stc
push
add
std
or
pusha
add
push
stc
addr16
pop
clc
xchg
and
cmp
sub
add
lahf
add
cmp
push
xchg
jmp
ficompl
mov
cmp
sub
jno
add
jo
add
mov
mov
mov
bound
add
je
add
test
lret
jl
pop
clc
insb
cltd
or
clc
cmp
clc
fwait
mov
clc
movsb
clc
cmp
mov
xlat
mov
imul
add
push
jno
add
clc
xor
add
fcoms
add
test
pop
jle
clc
shl
clc
pop
loopne
and
add
ds
inc
add
ja
ds
cmp
xabort
test
cmp
xchg
pop
lret
fwait
push
test
xbegin
pop
addr16
popf
cmp
cmp
add
mov
add
roll
adc
xchg
xchg
fmulp
jge
jmp
pushf
inc
clc
cmpsb
clc
int3
das
popa
add
jl
movsl
clc
gs
add
lahf
stos
sbb
loop
lahf
sub
xor
add
jbe
scas
arpl
add
fs
cwtl
sbb
or
add
add
imul
push
add
inc
add
add
clc
lea
mov
mov
aam
xor
add
xchg
mov
test
pop
lret
sti
fwait
pop
dec
data16
mov
jmp
clc
push
or
rol
clc
lcall
adc
add
add
add
xor
add
test
add
in
dec
mov
js
clc
sub
mov
pop
test
addr16
repz
lea
dec
lret
ljmp
add
jecxz
jp
clc
imul
and
sar
std
outsl
pushf
sar
mov
sbb
add
cmp
shll
add
jae
add
add
clc
mov
inc
add
add
add
pop
in
mov
add
das
bound
add
mov
clc
cmpsl
clc
and
add
clc
mov
clc
data16
pop
mov
add
cmpsb
clc
jp
data16
mov
jbe
clc
stos
fwait
out
xor
stos
cmp
iret
ljmp
add
into
sti
pop
lea
or
clc
mov
cmp
xchg
outsb
push
add
clc
or
add
cmpsl
clc
aad
popf
cld
clc
push
push
ljmp
dec
lock
testb
sub
cwtl
add
negl
rorl
or
adc
add
mov
pop
arpl
add
or
jecxz
cmp
cmp
fdivr
inc
clc
cli
push
sbb
clc
cmp
stos
cmp
add
pop
jne
xchg
cmp
mov
cmp
push
stos
xchg
adc
add
clc
adc
pop
repnz
add
out
and
add
cs
or
add
jae
add
pop
js
sbb
sbb
adc
add
add
mov
dec
nop
mov
stc
cmp
es
dec
pop
clc
jl
shr
cmp
dec
ret
clc
ds
das
add
add
clc
lea
add
jl
lahf
add
add
add
adc
add
sar
pop
xchg
in
int3
mov
mov
cld
xor
clc
jmp
xchg
xbegin
clc
cmp
add
pop
jno
add
popf
jae
add
xor
add
outsb
mov
js
add
mov
add
xor
jae
add
pusha
add
mov
adc
clc
mov
xlat
test
clc
jbe
clc
inc
clc
sbb
jne
xor
cs
mov
add
adc
clc
mov
and
add
clc
xor
add
add
pop
xlat
inc
add
mov
clc
call
pop
dec
lcall
add
cmp
dec
shl
clc
pop
cmp
clc
push
std
js
inc
add
ret
daa
clc
xchg
shlb
lcall
lahf
pusha
add
xchg
mov
add
mov
xor
add
clc
adc
fnsave
xor
add
xchg
cltd
push
clc
dec
ss
or
and
add
add
add
xor
add
mov
aam
test
clc
std
inc
add
or
clc
ret
flds
mov
add
fnsave
clc
add
add
int
in
push
adc
add
jno
add
jb
add
inc
add
pusha
add
xabort
add
add
mov
add
add
add
fwait
add
add
clc
xlat
fsubrl
cmp
dec
js
add
dec
push
clc
mov
dec
xchg
push
add
loope
out
sbb
clc
das
sub
clc
dec
cmp
ficoml
jge
xabort
loop
dec
sti
mov
test
xlat
adc
add
enter
add
mov
test
in
mov
clc
data16
lcall
scas
adc
imul
mov
clc
fnstsw
inc
clc
sub
add
add
add
cmp
or
jno
add
clc
xlat
aad
fisttps
cmp
add
add
repnz
sbb
mov
add
pop
add
add
xchg
stos
fldt
and
mov
add
jecxz
fdiv
or
xabort
and
add
clc
shrl
call
xor
add
add
mov
mov
sub
inc
add
sub
clc
pop
js
xchg
aad
clc
dec
mov
and
add
fucom
clc
adc
lock
sub
mov
add
mov
add
jmp
adc
add
cmpsl
clc
push
add
adc
add
ljmp
jae
add
adc
add
clc
sar
movsb
clc
dec
adc
add
clc
stc
push
clc
and
add
out
and
lret
es
or
clc
scas
imul
and
ret
clc
push
pop
pop
xor
add
clc
cmc
sti
mov
cmp
clc
pop
ja
bound
add
hlt
enter
or
add
dec
into
jmp
clc
in
pop
cltd
mov
or
clc
dec
test
sar
and
add
cmp
stos
xchg
pop
nop
lock
pop
es
cmp
sbb
pop
mov
gs
test
inc
add
dec
aas
aaa
shl
clc
lock
add
add
inc
clc
in
stos
pop
cltd
int
mov
dec
fsubrl
outsb
dec
sbb
inc
clc
mov
into
fldenv
cmc
fwait
clc
push
push
sarl
add
out
out
xchg
jle
push
mov
cs
clc
ror
xchg
add
add
xchg
mov
cmp
add
add
jmp
clc
push
add
gs
cmp
inc
clc
or
jno
add
clc
jp
or
add
clc
push
add
pop
lahf
in
hlt
cmp
cmp
daa
clc
cmp
int
sbb
gs
stos
into
inc
add
jg
dec
sub
fnstcw
cmpsb
clc
clc
cmp
add
fcmovb
clc
jae
add
clc
mov
sbb
iret
or
cmpsb
clc
add
sbb
clc
adc
add
push
push
test
inc
clc
and
jae
add
push
xabort
push
add
pop
movsb
clc
mov
lret
or
clc
arpl
add
clc
cmp
aas
stos
xor
add
push
lret
clc
mov
clc
xchg
mov
fs
int3
jg
clc
aaa
sub
repnz
add
xchg
leave
pop
add
add
imul
mov
mov
stos
addr16
cmpsl
clc
stos
and
add
push
aas
jns
xchg
loop
lcall
add
clc
push
add
out
push
jl
clc
mov
xchg
mov
add
mov
add
shr
adc
or
mov
pop
fiadds
cmp
clc
daa
clc
dec
push
add
das
fiaddl
mov
clc
testb
add
push
popa
add
fnstcw
fldl
aam
clc
lcall
fidivrs
arpl
add
out
clc
pop
or
in
scas
push
clc
xbegin
aas
std
test
repz
clc
add
add
sub
sub
and
add
clc
stos
daa
clc
imul
mov
in
ss
add
lret
imull
clc
pushf
sub
fs
xor
add
xchg
mov
jb
add
add
adc
jle
add
mov
sar
clc
xbegin
pop
imull
add
lret
in
mov
enter
add
pop
ds
dec
push
cltd
jo
add
mov
clc
daa
clc
mov
nop
mov
popa
add
or
add
add
add
lea
ljmp
jo
add
xchg
mov
dec
xor
add
add
mov
jae
add
jl
push
add
fwait
sub
mov
test
cwtl
fs
ficoms
addr16
ss
add
das
lahf
popa
add
cmp
es
lods
loopne
jbe
gs
xor
inc
add
nop
mov
push
add
xchg
inc
clc
add
add
je
xor
fwait
cltd
cld
daa
clc
popa
add
imul
add
mov
clc
icebp
repz
or
jecxz
pop
inc
clc
stos
data16
rcpps
add
ret
clc
mov
add
add
xchg
insb
sbb
loope
adc
add
add
scas
imul
add
loop
outsb
aad
clc
ljmp
add
and
cld
xabort
clc
push
clc
push
inc
clc
mov
cmp
push
add
xor
add
pop
jb
add
clc
cmp
push
inc
add
outsl
pop
jbe
or
clc
test
jbe
aaa
push
clc
pop
pusha
add
pop
clc
insl
mov
outsl
call
add
xor
add
xor
add
sub
add
add
cli
fwait
stc
flds
add
clc
cltd
xchg
jo
add
mov
add
inc
clc
repnz
arpl
add
cmp
clc
mov
cmp
jmp
pop
dec
jge
or
xchg
sbb
add
dec
sbb
add
test
js
lret
add
pop
movsb
clc
jecxz
jbe
inc
add
dec
imul
add
out
ja
int
insb
mov
cmpsb
clc
dec
push
clc
push
add
aaa
inc
clc
push
cmp
clc
cmp
add
mov
add
neg
je
mov
movsb
clc
nop
ds
pop
clc
and
add
pop
push
icebp
in
js
add
mov
mov
clc
test
cmp
clc
pop
stos
mov
or
xchg
sbb
gs
adc
add
inc
add
cmp
stc
adc
push
add
sub
add
add
cmp
clc
push
in
and
add
add
clc
jl
pusha
add
add
add
dec
ret
clc
adc
and
add
push
pop
push
leave
sub
cmp
mov
clc
fstpt
rorb
add
sub
mov
stos
and
add
add
cmp
mov
clc
xlat
mov
add
pushf
jecxz
jg
mov
add
add
mov
mov
out
dec
notb
cmp
add
insl
inc
clc
fimuls
repnz
add
or
dec
lret
stos
pop
and
add
sti
mov
in
dec
or
aad
insb
sbb
sar
inc
add
jbe
cmp
out
int
add
in
or
pop
das
push
add
cmp
in
mov
push
cmp
call
mov
clc
sbb
and
add
dec
lock
gs
aad
lcall
ret
clc
insb
roll
add
clc
fistpll
cwtl
mov
clc
and
add
clc
stos
pop
pusha
add
or
dec
testl
dec
fisubrs
xor
add
push
test
clc
test
clc
lea
add
mov
add
inc
clc
pushl
add
clc
jno
add
mov
xor
add
stc
pop
jns
xbegin
lret
sub
add
clc
cmpsb
clc
adc
xor
add
add
or
lcall
into
in
daa
clc
pop
mov
clc
std
jb
add
mov
and
add
add
xor
add
insl
dec
div
lock
push
jnp
mov
clc
mov
mov
dec
imul
inc
clc
bound
add
cwtl
sub
rorb
ljmp
mov
push
xor
add
loope
add
add
mov
mov
and
pop
add
add
pop
aaa
inc
add
xor
add
add
dec
lret
clc
dec
cmp
add
fistps
add
and
add
add
sub
jmp
clc
hlt
nopl
mov
clc
aas
daa
clc
js
jmp
add
out
cmp
leave
das
pop
jecxz
mov
repnz
add
call
add
imul
clc
arpl
add
add
ss
lahf
fisttpll
and
add
addr16
roll
push
add
pusha
add
rorb
add
loop
sbb
pop
push
add
fstpt
clc
adc
add
dec
pop
cmp
xor
clc
xchg
test
insl
mov
add
aas
and
add
clc
xchg
es
adc
add
add
out
mov
clc
ret
add
push
add
dec
jmp
push
cmpsb
clc
lock
add
arpl
add
imul
clc
cld
into
outsl
and
sti
test
adc
add
add
push
gs
mov
add
push
add
inc
clc
mov
sub
enter
jo
add
mov
fnsave
clc
test
xor
add
das
lret
add
push
add
mov
adc
test
dec
push
cld
xchg
inc
add
cmp
adc
add
clc
int3
ds
int
not
mov
clc
xor
clc
out
out
and
add
clc
mov
sbb
add
sahf
jge
pop
lret
cmc
nop
dec
movsl
clc
sti
aam
sbb
clc
icebp
add
add
add
repz
aaa
xor
fsts
add
clc
pop
imul
clc
jl
clc
sub
add
dec
jge
add
mov
add
cltd
icebp
arpl
add
je
out
iret
mov
push
add
cs
pop
clc
xchg
push
sbb
clc
cmp
clc
jno
add
cmp
xabort
mov
mov
sarl
jo
add
cmp
clc
movsl
clc
xor
add
push
or
add
jne
mov
lret
js
add
lods
imul
leave
out
and
add
clc
into
mov
into
push
flds
clc
dec
mov
adc
clc
push
pop
iret
cltd
test
clc
cmp
clc
mov
add
adc
add
imul
cmp
add
dec
lcall
mov
mov
add
outsb
push
pop
or
std
inc
add
fsts
adc
add
xchg
inc
clc
mov
xlat
mov
xor
add
dec
sub
int
xchg
ret
clc
test
sti
dec
and
add
clc
fwait
cmp
js
and
add
clc
fs
in
jno
add
clc
sar
add
dec
cltd
sbb
add
cmp
add
lret
push
xor
add
clc
dec
dec
push
xbegin
sub
add
push
mov
clc
clc
rcl
lahf
pop
fbstp
add
mov
negb
clc
adc
add
clc
repnz
add
add
add
mov
or
sbb
add
mov
clc
js
clc
pop
rorb
fistl
adc
add
clc
push
xchg
int
inc
add
test
clc
xor
add
xchg
ss
xor
add
jmp
add
add
pop
add
pop
adc
add
cwtl
es
fcomp
shrb
mov
movd
mov
add
inc
add
jns
in
push
lahf
push
clc
cmp
inc
add
fbstp
add
push
add
ret
add
or
add
cmpsl
clc
sti
scas
movsl
clc
and
add
clc
imul
aaa
sbb
mov
in
and
add
cmp
add
into
mov
jmp
add
push
fbld
sar
clc
mov
lret
loopne
outsb
push
inc
add
leave
stos
flds
ret
clc
push
clc
ret
enter
add
add
std
dec
mov
jbe
inc
add
mov
xchg
int
clc
mov
mov
add
add
sub
push
or
add
add
clc
fs
xchg
mov
out
int3
shll
movsb
clc
mov
sub
clc
add
xchg
jmp
clc
cmp
add
and
add
mov
sub
clc
aad
clc
and
cs
or
clc
aas
mov
add
add
clc
mov
clc
pop
clc
fldl
add
cld
cmp
mov
stc
inc
add
cs
clc
and
data16
cmp
sub
pop
mov
mov
dec
cmpsl
clc
push
add
add
ja
add
sub
clc
inc
add
mov
clc
rcr
fistl
jmp
clc
arpl
add
stos
pop
xchg
xchg
sbb
sarl
mov
xchg
scas
or
clc
cmp
jo
add
popa
add
add
add
aam
cmp
xor
add
add
pushf
mov
clc
fxch
adc
add
adc
add
xor
xor
add
add
pop
insb
cmpsb
clc
pop
clc
dec
cmp
mov
add
aad
inc
clc
jb
add
cli
mov
cmpsb
clc
add
add
add
stc
push
adc
add
stc
out
push
jg
add
jge
leave
dec
test
mov
add
add
jl
aam
clc
ret
sbb
leave
cmc
jmp
inc
clc
mov
fs
xchg
sarb
outsb
pusha
add
pop
pop
clc
and
add
add
inc
add
mov
jg
adc
and
add
clc
jnp
cli
bound
add
into
in
pop
or
add
nop
push
xchg
adc
add
call
fwait
test
popf
scas
sub
add
cmp
xchg
sbb
xchg
aaa
xchg
idivb
sub
mov
clc
cmc
fsubl
clc
cmpsl
clc
repz
clc
test
adc
lcall
pop
mov
int3
mov
pop
clc
mov
idivb
add
repnz
cmc
rcrb
add
cmp
xor
add
add
clc
sti
cmp
push
clc
and
add
dec
mov
sar
add
leave
movsb
clc
jmp
clc
xabort
pop
inc
add
xor
add
fldt
add
clc
or
jo
add
and
add
pop
clc
insl
lcall
add
sti
sar
sar
push
push
add
int
xchg
lods
out
mov
sti
aaa
xchg
push
jl
imul
test
xchg
clc
push
bound
add
push
jmp
add
push
or
js
clc
sbb
push
xabort
clc
mov
sar
stos
xchg
hlt
pushl
add
pop
hlt
cmp
push
add
sub
fwait
inc
clc
loopne
add
fdivs
adc
add
and
add
add
add
fisubrl
fldcw
push
jbe
jp
cmp
jb
add
clc
sub
clc
imul
clc
cld
cmp
mov
or
divl
add
int3
dec
aas
enter
rolb
push
add
arpl
add
add
dec
xchg
xchg
cltd
loope
inc
clc
aaa
mulb
clc
mov
mov
pop
lahf
jmp
mov
add
mov
clc
mov
in
inc
clc
in
xchg
cs
icebp
enter
dec
xor
outsb
mov
cmp
push
clc
aam
int3
call
clc
jge
add
add
testl
je
int
xor
clc
shll
mov
leave
jns
mov
add
cmp
clc
xchg
sbb
clc
mov
clc
xchg
dec
cwtl
cmp
add
jb
add
scas
arpl
add
sahf
scas
inc
clc
jns
mov
aad
clc
cli
sbb
shll
add
pop
mov
cltd
ret
add
int3
push
repz
add
add
sub
clc
cmp
xabort
jo
add
add
addr16
rorb
shl
and
add
jns
incl
add
psubq
adc
clc
mov
pop
clc
dec
jmp
clc
or
popf
add
add
sbb
clc
jl
call
add
dec
lret
add
sbb
clc
xchg
int3
pop
repz
cmp
sar
lahf
sahf
xabort
clc
pop
jno
add
and
add
add
ret
clc
ja
add
inc
add
sub
xor
add
lcall
add
test
clc
out
insl
cmp
add
xor
add
cmp
mov
ret
clc
test
sbb
clc
cs
pop
pop
data16
mov
cltd
mov
clc
outsl
dec
imul
stos
outsl
pop
lahf
cmp
shlb
clc
inc
clc
mov
add
cwtl
cmc
pop
ds
sbb
jmp
adc
mov
add
adc
xchg
mov
fs
aas
mov
insb
movsl
clc
repz
add
inc
add
ret
pop
in
inc
clc
cmp
sbb
jno
add
clc
ret
sub
add
sub
add
adc
jns
clc
insb
lcall
add
aaa
add
sub
mov
clc
leave
cmp
mov
xbegin
add
dec
push
stos
push
cltd
pop
cltd
lods
mov
clc
cmpsl
clc
cmpsb
clc
ficomps
icebp
add
gs
into
sbb
add
cmc
shll
add
lods
xor
add
or
clc
sar
pushf
xchg
imul
jbe
add
imull
add
inc
add
call
ljmp
clc
or
mov
dec
xchg
cmp
es
inc
add
out
push
dec
adc
clc
jge
cli
call
xchg
and
add
add
pop
jle
add
cmp
cltd
and
add
clc
test
mov
mov
enter
dec
sar
nop
push
daa
clc
inc
clc
data16
popl
xor
add
add
mov
sub
clc
or
clc
push
add
mov
mov
sub
mov
or
call
add
add
pop
jne
into
cmp
jmp
jae
add
clc
sub
and
add
cmp
jle
clc
iret
cli
aas
dec
in
fildl
cmp
xchg
test
push
aad
pop
xchg
mov
clc
pop
incl
mov
mov
data16
sbb
clc
sbb
cmc
fidivs
add
daa
clc
je
arpl
add
xor
add
jl
clc
xbegin
sub
clc
xor
add
and
data16
sbb
iret
sub
inc
clc
mov
lea
add
jno
add
push
add
mov
inc
clc
inc
add
mov
clc
pop
sbb
jmp
std
inc
clc
cmp
and
add
outsl
fs
xchg
jmp
es
sbb
sub
sbb
add
cmp
cmp
scas
js
ja
cmp
frstor
clc
int
jecxz
xchg
inc
clc
jmp
mov
ds
clc
pop
rolb
clc
fdivl
add
ret
clc
cmp
mov
lods
pop
clc
jmp
ljmp
add
mov
out
je
add
dec
das
cmp
push
cmc
push
dec
jl
clc
stc
push
add
xor
testl
test
aas
nop
xchg
arpl
add
clc
sbb
pop
or
clc
cmp
rorl
add
or
popf
int3
cmp
cmp
clc
movsl
clc
and
popa
add
ja
popf
xchg
xchg
xchg
in
pushf
movsl
clc
xchg
arpl
add
mov
sar
push
clc
mov
xor
add
add
mov
fsubrl
ret
pushl
add
fimuls
push
aad
clc
jge
pop
inc
clc
sub
push
push
jecxz
sub
leave
mov
jae
add
add
sar
add
es
scas
test
add
ljmp
dec
daa
clc
pop
adc
add
add
add
add
mov
repnz
clc
xabort
pop
dec
das
push
mov
cltd
cmp
add
add
ds
clc
arpl
add
add
enter
clc
xor
add
inc
clc
loop
xchg
leave
sbb
loopne
adc
add
xchg
inc
add
test
or
xchg
push
adc
add
clc
fidivrl
add
pop
or
popa
add
ss
mov
dec
mov
fadds
clc
cmp
clc
ficoml
loope
aad
clc
cmp
lret
rcll
clc
mov
clc
add
add
add
and
add
mov
clc
jae
add
clc
imul
xor
add
data16
fucomi
xchg
sti
sar
adc
add
add
add
add
fs
es
lret
clc
rorl
push
add
push
jg
add
dec
hlt
test
addr16
sub
clc
popa
add
cli
movsl
clc
sti
dec
push
xchg
js
pushf
out
ljmp
and
scas
pop
and
dec
cltd
ret
clc
cltd
test
pop
clc
or
call
loop
jp
sub
in
ljmp
ss
in
cmp
add
cmp
in
cmp
mov
and
add
clc
lods
push
clc
stos
xchg
jb
add
imul
clc
call
int
jae
add
fs
data16
mov
aad
faddp
clc
add
xchg
sbb
mov
clc
mov
mov
clc
ss
sbb
je
popa
add
popa
add
xor
add
add
fildll
mov
dec
out
fldenv
adc
clc
insl
pop
ljmp
xchg
cmp
clc
popf
or
clc
pop
add
add
dec
inc
add
push
pop
shr
aaa
xchg
jmp
add
faddl
clc
nop
cmp
in
cmp
and
add
js
add
or
cmp
clc
mov
rcrl
clc
in
lock
fldt
popa
add
fldl
clc
clc
mov
add
add
jb
add
add
sub
inc
add
cmc
mov
cmp
das
fucomip
pop
enter
clc
cmc
std
inc
clc
mov
enter
add
pop
pop
mov
add
jo
add
clc
imul
add
gs
rorl
add
add
cmp
clc
test
xbegin
or
cmp
lahf
push
add
or
add
sbb
add
in
call
add
clc
push
ja
mov
cwtl
cmp
xlat
shl
pusha
add
dec
or
adc
add
add
insb
push
add
xchg
mov
clc
and
loope
mov
mov
ljmp
ds
sar
cltd
int3
fwait
mov
push
add
sar
add
add
das
imul
lock
add
mov
out
xlat
test
mov
out
mov
sbb
sub
fs
pop
cltd
and
popf
cwtl
ja
loope
sub
add
jne
scas
pop
shlb
push
jl
clc
fnsave
add
sbb
cmp
mov
stos
cld
imul
add
add
pop
sar
add
pop
scas
ret
clc
cli
gs
jge
ja
lock
xchg
cmp
push
insb
lock
inc
add
imul
add
cmp
add
add
dec
xor
sub
pop
add
add
add
fs
insl
push
add
push
mov
cltd
mov
and
add
add
sbb
add
push
or
or
or
fsubrs
loop
mov
add
js
cld
mov
imull
negl
add
add
in
sar
cltd
cmp
jg
add
jp
xor
xchg
jne
clc
mov
cmp
das
nop
in
pop
popf
mov
add
jl
clc
inc
clc
dec
xchg
jae
add
add
stos
das
sbb
add
cmp
add
and
add
sahf
xor
add
pop
adc
add
add
sbb
add
clc
sbb
push
clc
cmp
cmp
movsl
clc
out
movsb
clc
dec
mov
mov
insl
jle
clc
push
clc
xchg
outsl
bound
add
sub
pop
dec
ret
clc
xchg
repz
add
fisubl
in
dec
mov
clc
add
add
cld
out
scas
test
jo
add
repz
jae
add
and
add
call
scas
cmp
add
and
push
add
lcall
xor
add
lods
fidivs
push
mov
and
sub
inc
add
jmp
jg
clc
adc
add
add
pop
clc
mov
cwtl
inc
add
insl
fldenv
leave
cmc
cs
hlt
gs
test
push
gs
fsubrs
imul
xchg
adc
add
push
or
add
cmp
clc
mov
jb
add
ds
loopne
cltd
jo
add
clc
clc
out
xor
add
inc
add
mov
clc
lods
out
lret
xchg
lret
mov
or
clc
xchg
pushf
cmp
clc
data16
and
add
popf
mov
sbb
add
add
idivl
mov
add
outsb
in
jne
call
fildll
aam
jae
add
clc
mov
add
test
jmp
add
outsl
or
jge
repnz
add
inc
add
push
inc
clc
inc
clc
cmp
loope
inc
add
ljmp
movsb
clc
dec
xor
adc
add
fisttps
xchg
sub
sub
mov
add
sub
cmp
test
pop
mov
mov
imul
add
div
push
and
add
lahf
icebp
aas
lcall
mov
push
clc
imulb
cwtl
cld
cmp
lods
loope
in
test
ljmp
jo
add
xlat
insl
cwtl
dec
test
clc
xchg
inc
add
nop
daa
clc
test
add
mov
clc
dec
shrl
clc
loop
cmp
xchg
push
add
adc
add
add
xor
add
add
movsl
clc
imul
sar
and
add
fwait
mov
add
lret
or
sub
add
popl
add
das
shlb
add
xor
clc
imull
add
nop
cmp
and
add
aam
fdivrl
fs
repnz
xbegin
imul
add
mov
add
lret
add
insl
push
fcmove
bound
add
clc
xchg
std
jle
mov
clc
aad
sub
nop
icebp
xor
in
ret
clc
cmp
xchg
and
add
clc
mov
add
dec
dec
sub
adc
add
add
addr16
lret
xchg
jnp
ret
clc
movhps
call
clc
dec
sub
add
push
add
jmp
int3
dec
mov
out
add
add
cmp
jo
add
jge
das
pop
into
test
into
mov
clc
cmp
clc
mov
clc
mov
aaa
fcmovb
clc
adc
clc
adc
add
jmp
inc
clc
test
mov
cmc
ss
mov
aam
mov
add
ss
clc
pop
inc
clc
enter
clc
sbb
cmp
add
and
mov
cmp
clc
sbb
clc
xchg
loop
mov
cmp
cmpsb
clc
nop
es
xor
add
sub
sbb
mov
clc
inc
add
cld
in
pop
and
sbb
add
dec
cmp
push
out
cltd
inc
clc
addr16
mov
push
add
out
mov
pop
add
clc
xchg
clc
mov
rolb
add
xor
add
dec
sbb
loope
or
add
loop
pusha
add
mov
mov
jmp
clc
cmp
fucom
clc
jne
add
add
or
clc
imul
repz
clc
test
data16
das
stc
mov
mov
or
insb
cmp
fwait
test
mov
xor
add
dec
or
sbb
jl
pop
mov
dec
shlb
add
inc
clc
inc
add
ds
inc
clc
insb
jne
push
int3
stos
in
fisubrl
pop
mov
clc
je
add
insb
mov
test
enter
and
add
xchg
xchg
sar
xchg
sub
cmc
in
xchg
jmp
clc
mov
fldl
add
das
std
adc
add
add
dec
stos
std
inc
clc
mull
add
lcall
clc
lret
sub
or
clc
scas
idiv
aad
clc
clc
lahf
xor
sub
add
mov
xchg
sub
lods
adc
clc
pusha
add
sub
clc
cmp
cld
fs
add
addr16
loopne
mov
cmp
add
xbegin
clc
push
inc
clc
mov
add
push
clc
xchg
popa
add
stos
and
sahf
mov
das
rcll
adc
add
mov
aam
cmp
shl
cmp
mov
aaa
xchg
dec
ss
nop
movsb
clc
sub
mov
jp
cltd
push
clc
clc
int
cmp
clc
movsl
clc
lea
icebp
or
clc
das
fisubrl
jl
clc
mov
xor
add
clc
loop
xchg
mov
scas
cmpsl
clc
pop
cmp
add
int3
mov
std
push
push
xor
mov
clc
mov
jp
clc
sbb
inc
clc
insl
fs
cwtl
fidivs
fnstenv
add
je
clc
daa
clc
mov
mov
arpl
add
clc
mov
inc
add
adc
add
insb
scas
fstl
push
add
push
add
dec
int3
sarb
lcall
push
cmp
mov
xor
add
in
cmp
movsb
clc
add
add
push
add
sahf
gs
sar
clc
xchg
outsb
xchg
mov
sar
add
aam
enter
outsb
sbb
add
push
cmpsb
clc
mov
clc
cmpxchg
fldt
clc
push
ret
clc
sti
loopne
loope
sar
clc
jne
push
clc
jbe,pn
dec
xchg
inc
add
sub
clc
jno
add
xchg
fsts
add
push
gs
test
test
clc
sub
clc
cmpsb
clc
push
cmp
jno
add
ds
fstp
and
lock
ja
add
cltd
loop
jge
add
add
add
add
sahf
mov
pop
xor
add
adc
add
jge
or
cmp
clc
or
mov
and
add
xchg
push
clc
push
jge
clc
test
jo
add
push
add
fistpl
mov
in
add
jecxz
es
sahf
sti
loopne
js
add
sti
test
inc
add
out
cmpsl
clc
insb
loopne
push
add
pop
test
clc
repnz
daa
clc
leave
aaa
and
add
pop
loope
sub
add
add
inc
clc
in
outsb
ret
xchg
xor
add
mov
popa
add
xchg
pop
push
add
and
add
lahf
cmp
mov
mov
inc
add
jle
ficompl
enter
mov
jbe
clc
mov
hlt
inc
add
popa
add
hlt
push
xor
clc
aas
cmp
add
in
fwait
push
add
sub
add
das
and
add
cmp
clc
mov
inc
clc
in
loope
xbegin
clc
enter
rclb
mov
clc
and
sub
add
jae
add
mov
es
sbb
dec
movsl
clc
shlb
add
add
pop
pop
scas
sub
add
pushf
inc
add
mov
add
or
clc
inc
clc
pop
insb
lock
add
add
clc
fstl
add
mov
ror
repz
add
add
stc
pushf
add
add
add
add
sbb
add
icebp
sbb
mov
out
loop
cwtl
out
ss
add
push
jmp
add
add
lcall
clc
inc
clc
lcall
cmc
xchg
out
xbegin
out
mov
faddl
clc
adc
clc
fldl
clc
xabort
sub
clc
jmp
clc
push
clc
jne
pop
mov
inc
clc
xor
add
mov
or
testb
cmp
dec
mov
add
cmp
enter
cmp
mov
adc
add
add
sbb
and
clc
ds
clc
sbb
adc
jno
add
jle
clc
xchg
mov
ja
je
clc
inc
add
data16
sub
xchg
mov
add
popa
add
scas
icebp
mov
push
imul
add
clc
je
mov
add
lcall
mov
add
hlt
xor
add
push
add
mov
jno
add
clc
push
and
inc
add
pusha
add
add
ret
clc
ss
cmp
hlt
jmp
mov
test
outsl
movsl
clc
sub
call
repz
xchg
xor
add
je
mov
add
repz
clc
add
into
adc
mov
xchg
sti
in
in
fiadds
cmp
pop
shl
jmp
add
dec
lods
cmp
add
jnp
push
add
mov
adc
add
add
clc
jl
cmp
mov
add
loope
jle
pop
clc
cmc
loopne
pop
and
add
sbb
clc
xchg
jns
out
fcomps
clc
jne
xor
add
add
add
add
add
cld
cmc
dec
jbe
adc
sti
stc
popl
clc
into
add
clc
aam
mov
clc
outsl
cmp
push
test
pop
movsl
clc
add
add
add
maskmovq
divl
add
add
add
in
or
add
dec
add
add
clc
mov
fwait
cwtl
mov
cmp
fdivs
add
add
add
cltd
xchg
or
add
clc
cwtl
mov
clc
sarl
scas
adc
inc
clc
loopne
mov
cmp
out
test
add
je
leave
cmpsb
clc
xor
add
push
or
fs
call
clc
mov
cmovo
add
inc
clc
pop
xchg
inc
add
lret
sbb
mov
mov
mov
clc
scas
xchg
jns
lods
sub
add
adc
add
xchg
lods
daa
clc
pop
js
lahf
fwait
mov
fwait
jnp
jle
clc
into
adc
add
jae
add
push
add
arpl
add
sbb
enter
jb
add
cli
ds
imul
and
xchg
popf
jb
add
scas
shlb
add
jge
sbb
sbb
clc
or
clc
sar
sti
inc
clc
pop
clc
cmp
dec
xor
add
add
and
add
adc
add
xchg
mov
ret
clc
clc
cmp
mov
imul
enter
fwait
daa
clc
pop
std
sbb
stos
pop
sti
xor
add
fmuls
push
push
or
add
or
clc
pop
clc
or
cmovl
add
iret
lahf
aaa
leave
es
enter
add
clc
cwtl
lret
icebp
pushf
mov
add
pop
jb
add
and
add
add
add
add
enter
xchg
pop
mov
xabort
clc
sarl
repnz
in
inc
clc
sub
dec
or
sub
dec
jg
add
push
lret
lahf
add
cmc
std
pusha
add
cmpsl
clc
jae
add
cltd
mov
add
mov
push
add
mov
mov
js
mov
lahf
fs
in
jmp
add
dec
and
add
cmc
scas
int3
sar
add
iret
pop
cmp
adc
add
jae
add
in
xabort
loopne
inc
clc
stos
cmp
aad
clc
in
xor
add
mov
sbb
add
enter
testl
out
sub
clc
push
clc
movsb
clc
in
insb
addr16
ret
mov
js
clc
cmp
popa
add
movsl
clc
mov
es
and
add
mov
xchg
push
push
cmpsb
clc
adc
dec
jae
add
clc
cmp
dec
gs
push
pop
loopne
adc
add
add
sbb
add
mov
push
clc
stc
daa
clc
xchg
test
add
or
rorb
or
inc
clc
push
jg
pop
pusha
add
scas
cltd
jno
add
clc
xchg
test
lahf
push
add
push
pop
clc
mov
clc
mov
add
aas
clc
das
mov
lock
dec
addr16
mov
add
add
add
add
fwait
in
lret
ret
clc
in
mov
xor
add
xor
dec
repz
in
inc
clc
dec
sbb
movsl
clc
lret
mov
add
inc
add
push
sbb
clc
cmp
push
xchg
mov
in
mov
add
add
das
sbb
pusha
add
pop
jo
add
arpl
add
insb
pop
gs
mov
fs
scas
inc
clc
dec
pop
clc
xchg
arpl
add
roll
clc
data16
test
clc
ljmp
add
cld
jecxz,pt
or
jo
add
ja
sti
adc
data16
inc
clc
ror
mov
clc
xbegin
sar
add
ficompl
dec
push
fsts
hlt
rorb
loopne
xchg
sbb
sub
sub
add
mov
mov
jnp
dec
sub
clc
dec
mov
clc
inc
clc
outsl
dec
rcrl
in
sahf
mov
scas
or
xchg
mov
add
loop
leave
xchg
push
add
sub
add
clc
sbb
gs
push
outsl
jo
add
push
fiaddl
add
inc
clc
sar
sub
int3
jg
pop
mov
cmp
push
test
mov
pop
test
fsubrs
pop
fld
clc
fldenv
clc
jnp
clc
rcrl
inc
add
mov
clc
imul
popa
add
lods
adc
add
mov
clc
inc
clc
pop
fistps
sbb
add
clc
js
cmp
add
clc
icebp
stos
mov
sar
cltd
sbb
xbegin
clc
adc
clc
add
add
sub
add
insl
push
clc
cmp
jle
add
mov
clc
push
add
cmpsb
clc
jmp
and
add
cmpsb
clc
jle
xor
clc
shlb
add
sar
add
test
test
jge
add
fs
inc
clc
ja
ret
clc
adc
add
add
add
add
add
add
add
clc
dec
packuswb
jnp
mov
jecxz
out
mov
mov
add
js
pop
clc
in
jg
int
out
pop
clc
xor
loope
pop
arpl
add
int3
lahf
icebp
mov
fucom
clc
or
add
jns
js
cmpsl
clc
loopne
xchg
pop
faddl
add
in
repz
mov
add
clc
inc
add
mov
add
mov
js
cmp
push
mov
jbe
clc
rorl
mov
clc
ja
add
mov
add
lcall
je
sahf
clc
dec
push
cwtl
xor
add
jge
clc
or
add
inc
add
in
mov
add
push
rep
int
adc
add
test
inc
add
inc
add
cmp
and
in
notb
clc
aad
cmp
call
clc
adc
add
push
clc
mov
xor
add
mov
mov
add
push
jno
add
add
xor
clc
mov
inc
clc
clc
mov
paddw
ja
pop
pushf
mov
clc
clc
push
mov
add
or
mov
dec
cli
push
clc
lcall
or
add
jmp
clc
mov
mov
cld
adc
add
add
clc
push
and
add
dec
repnz
clc
dec
sbb
sub
cltd
cld
das
add
add
add
add
add
add
cmp
and
cmp
pop
out
inc
add
fdivrs
ret
clc
aaa
xbegin
cmp
dec
jg
add
add
lea
sbb
jmp
xabort
clc
movsl
clc
xlat
rolb
arpl
add
inc
clc
adc
divb
add
clc
ret
clc
fsubrs
sar
out
call
add
add
adc
cmp
sub
add
cli
jae
add
add
add
dec
adc
xchg
cmp
or
xchg
jg
mov
inc
clc
xabort
pop
clc
mov
jno
add
aas
xor
add
jmp
clc
push
decb
sar
pop
js
xor
add
pop
fsubr
mov
add
iret
out
in
push
add
sahf
in
popf
aad
sbb
clc
shrl
clc
adc
and
rcl
xchg
mov
lods
mov
and
mov
xor
add
add
out
lods
pop
sbb
add
clc
push
add
mov
arpl
add
in
dec
mov
add
or
repnz
mov
fs
int
add
repnz
jo
add
clc
pop
sub
clc
imulb
jle
loopne
clc
cwtl
fdivrp
sbb
fisubl
clc
sub
aas
bound
add
shlb
cmp
add
xor
add
shrl
add
es
popf
mov
add
jg
inc
clc
mov
cmp
or
add
fldcw
clc
mov
cmp
mov
scas
rcr
loope
pop
sbb
fnsave
add
cmp
sahf
lahf
outsb
scas
adc
clc
jnp
add
imul
xor
add
add
mov
add
movsb
clc
fildl
clc
clc
stos
sub
jns
add
inc
clc
adc
add
test
xabort
ret
clc
repnz
clc
dec
and
add
cld
outsl
lret
std
movsl
clc
add
add
popf
xor
mov
add
jecxz
or
lcall
clc
xor
add
lods
int3
sbb
clc
lock
add
data16
mov
aam
jo
add
add
sub
xchg
and
add
add
adc
inc
clc
stc
sub
mov
inc
add
gs
jecxz
fimull
clc
data16
inc
clc
test
into
imul
inc
add
xor
add
mov
movsb
clc
cmp
adc
add
clc
pusha
add
inc
clc
push
clc
xchg
inc
add
and
clc
xchg
xchg
mov
clc
or
pop
mov
clc
jge
mov
add
jo
add
imul
clc
pushf
pop
int
cmp
sar
jmp
mov
pop
mov
clc
lret
sub
add
xor
add
add
clc
test
bound
add
clc
jae
add
sbb
or
clc
mov
cmp
add
cli
cmp
or
rorb
stos
xchg
add
push
add
add
lea
clc
or
mov
push
push
clc
jns
jns
add
mov
inc
clc
xchg
dec
lea
xchg
mov
add
xchg
inc
clc
cmp
aas
dec
aas
pusha
add
push
clc
outsb
jp
nop
mov
cmp
clc
and
add
add
jge
std
xchg
jbe
mov
in
pop
mov
cli
cmpsl
clc
ds
loope
pop
jp
mov
pop
popa
add
data16
in
pushf
cmp
call
clc
xchg
pop
xchg
xor
add
clc
outsl
sti
sbb
imul
add
mov
mov
add
lret
mov
add
imul
adc
add
or
clc
xbegin
fmuls
negb
pop
es
xbegin
movsl
clc
jo
add
dec
mov
lret
dec
mov
clc
pop
das
cmp
clc
xchg
insb
xchg
and
add
clc
cmc
or
sbb
into
fldcw
jmp
cwtl
pop
xchg
push
jno
add
cld
addr16
enter
xchg
mov
fs
xchg
mov
clc
imul
add
add
jmp
mov
cli
or
add
out
cli
cmpsb
clc
lods
cmp
clc
cmp
das
cmp
nop
in
jbe
push
dec
fst
inc
add
mov
enter
add
and
add
clc
ss
fstpt
sub
lods
xchg
adc
add
jecxz
sub
add
pop
push
add
push
clc
pop
clc
push
cwtl
adc
add
data16
in
loope
div
shl
push
push
rorb
clc
and
add
mov
dec
or
aaa
mov
add
add
movsl
clc
xor
add
iret
sbb
add
jecxz
stos
inc
clc
xchg
xabort
add
sbb
push
adc
add
add
clc
jno
add
jle
insl
jns
add
xor
add
add
clc
cltd
mov
clc
cltd
lahf
addr16
loopne
stos
into
stos
mov
inc
clc
push
add
out
xchg
test
mov
add
add
xchg
jnp
cli
add
add
ds
mov
add
fwait
fs
xor
add
out
loopne
test
cmp
cwtl
push
aad
add
out
idivl
pop
dec
or
push
add
pop
xchg
dec
jbe
clc
sub
clc
inc
add
mov
aad
add
sahf
and
add
clc
test
add
jb
add
adc
jne
loope
cmp
ljmp
jne
pusha
add
mov
add
push
add
out
cmp
das
xbegin
cmp
fcmovbe
sbb
out
sub
or
adc
add
clc
adc
add
clc
sti
xchg
push
cmp
inc
add
mov
clc
or
ss
icebp
icebp
adc
mov
iret
jns
clc
sti
sar
clc
das
test
sbb
clc
pop
cmp
clc
out
mov
push
add
mov
sub
cld
mov
clc
outsl
scas
test
adc
add
fwait
pusha
add
cmp
clc
xchg
xchg
and
clc
cmp
pop
mov
jnp
stos
cmc
clc
and
add
lcall
imul
hlt
jns
into
push
loope
popf
sub
loopne
lcall
in
pop
popf
loope
ljmp
fstps
fwait
inc
clc
mov
cmp
repz
add
push
add
sub
pop
clc
mov
lea
xbegin
dec
mov
ljmp
je
mov
lcall
jg
add
mov
push
add
cmp
inc
clc
ja
add
add
add
jae
add
clc
cmpsl
clc
jno
add
xchg
mov
mov
dec
and
add
xor
add
clc
xchg
ds
push
add
jae
add
popf
add
add
idivl
cmp
add
xor
add
clc
or
cmp
xbegin
stos
lret
lret
add
clc
and
push
cmp
add
fisubl
add
fbstp
cmpsl
clc
dec
sbb
or
inc
add
fs
push
push
cmc
pop
xchg
adc
add
add
add
inc
add
faddl
add
xor
add
into
cmp
clc
test
clc
imul
cmp
jns
push
clc
repz
lock
cmp
pushf
sub
sub
sar
clc
push
add
mov
clc
adc
cltd
enter
or
inc
clc
mov
add
test
add
add
add
add
sar
jae
add
das
pop
fiaddl
add
xchg
and
add
add
add
icebp
inc
add
mov
enter
sti
fiaddl
add
jp
cmp
das
mov
add
add
and
jmp
add
adc
add
push
mov
pop
jge
and
xchg
fmulp
pusha
add
jae
add
push
add
notb
add
sahf
outsb
mov
add
ljmp
clc
loop
fisubrs
add
in
shlb
add
and
add
cli
test
fnstsw
push
add
xchg
sub
clc
inc
clc
dec
fs
inc
clc
inc
clc
lret
out
nop
mov
mov
xor
clc
arpl
add
lret
ljmp
scas
aaa
mov
mov
add
clc
scas
mov
clc
dec
dec
paddb
sbb
jle
dec
fs
mov
fsincos
sbb
clc
push
inc
add
jmp
clc
sar
mov
sti
jne
clc
cmp
dec
cmp
xor
add
inc
clc
dec
in
cmp
mov
out
sub
js
jbe
jns
clc
ss
daa
clc
sub
scas
daa
clc
sar
mov
ret
clc
gs
test
add
push
sbb
add
jbe
clc
pusha
add
lods
inc
clc
xor
fs
jns
clc
xor
add
add
aam
clc
dec
fidivl
add
pop
sub
arpl
add
add
cld
lcall
outsl
cmc
mov
cmp
inc
add
test
push
add
and
push
jmp
clc
aad
xor
inc
add
or
clc
pop
inc
add
xor
add
add
add
dec
lret
test
clc
fidivrs
cld
and
add
add
inc
add
mov
add
mov
add
mov
insl
mov
lret
adc
add
clc
leave
jns
clc
daa
clc
aas
stc
dec
pop
push
add
scas
cwtl
inc
add
mov
mov
clc
inc
clc
push
add
and
lahf
shll
clc
inc
clc
mov
pop
pop
sub
mov
outsb
in
adc
add
out
pop
in
fdivl
add
add
fwait
mov
cmp
jecxz
mov
lock
add
push
daa
clc
push
add
lods
aaa
sub
push
movsl
clc
bound
add
repnz
mov
test
mov
jg
add
in
push
xchg
adc
add
add
ja
pop
adc
inc
add
xlat
stc
nop
pop
add
add
clc
mov
or
std
test
mov
fmull
test
add
jo
add
std
sti
mov
clc
call
hlt
mov
iret
cmp
clc
clc
cmc
in
xchg
aad
xor
mov
mov
add
clc
xlat
cmp
add
aam
or
sub
add
mov
mov
sub
sbb
xor
add
add
cmp
add
lods
pop
cmp
out
and
add
inc
clc
xchg
stos
push
inc
add
jmp
ja
add
add
add
push
mov
inc
clc
rolb
adc
sbb
mov
add
xchg
cmp
fcoml
add
push
out
int3
std
insb
pusha
add
fs
scas
clc
mov
mov
pop
mov
add
aaa
dec
mov
cmp
jp
pop
inc
clc
call
clc
rcrl
inc
clc
and
fsts
add
clc
mov
add
add
add
mov
lcall
xor
add
aam
clc
popf
addr16
sub
pop
jg
ret
add
mov
clc
mov
mov
clc
xlat
mov
add
pushf
sbb
add
add
inc
clc
xchg
ss
insl
scas
and
add
push
add
sub
rdseed
ss
mov
shlb
jmp
clc
testl
cmp
mov
xbegin
adc
add
add
add
add
push
cmp
add
out
mov
add
sub
dec
fnstenv
add
pop
xor
add
gs
scas
pop
jl
mov
sarb
push
clc
fmull
bts
int
cmp
or
lods
lcall
add
add
jbe
popa
add
sahf
popf
add
xlat
pop
clc
in
xchg
dec
ljmp
mov
sbb
push
cmp
fidivrs
mov
loopne
arpl
add
imul
mov
int3
lahf
cmp
ds
clc
int
je
mov
or
add
add
push
aam
jg
jl
adc
add
push
add
xor
push
add
repnz
add
cmp
jmp
add
add
sti
call
clc
push
add
adc
add
push
adc
add
mov
add
and
add
sub
clc
iret
loopne
pop
clc
ret
clc
cmp
add
lret
push
popf
adc
add
cli
pop
cmp
popa
add
lock
popf
mov
clc
fistpl
loope
inc
add
pushf
mov
lret
cltd
add
add
add
iret
push
add
pop
or
push
clc
loop
cwtl
cmp
ja
clc
cmp
xchg
dec
mov
lret
push
or
add
int3
shll
clc
or
outsb
mov
add
add
xchg
adc
add
add
cmp
add
cmp
clc
out
sub
pop
rol
clc
cld
or
clc
stos
cltd
ficomps
insl
fdivrs
in
dec
hlt
sbb
clc
sar
iret
and
rcl
pop
xor
add
ss
add
mov
add
add
or
and
add
add
gs
add
fdivrs
dec
xchg
pop
and
add
add
clc
and
add
clc
lock
mov
clc
test
pop
push
add
popf
jo
add
scas
cwtl
leave
jne
sahf
fildll
scas
cmpsb
clc
mov
shrl
mov
mov
adc
add
add
mov
clc
test
sub
add
es
sbb
out
push
add
sar
add
or
cmpsb
clc
push
add
pop
cmovnp
add
xchg
cmpsl
clc
adc
add
add
cmpsb
clc
or
jge
xchg
dec
sbb
int
clc
stos
data16
imul
xabort
clc
sbb
clc
and
add
scas
pop
notb
add
into
jb
add
add
fnstcw
fwait
add
add
clc
pushf
clc
mov
add
add
mov
clc
add
add
pop
scas
out
pop
pop
mov
add
dec
push
clc
and
in
xor
add
dec
mov
clc
jno
add
mov
arpl
add
add
in
fs
shll
cltd
cmp
dec
xor
fbld
addr16
push
add
sar
data16
jge
nop
xchg
xor
add
add
clc
xbegin
add
and
aaa
xor
clc
mov
add
xabort
ss
clc
es
add
xchg
mov
add
arpl
add
dec
loop
mov
fidivrl
mov
daa
clc
bound
add
add
hlt
or
sbb
add
add
inc
clc
gs
popf
std
xchg
or
add
xor
add
sbb
enter
clc
fsub
clc
cmp
add
jecxz
cltd
and
add
aas
mov
add
clc
aam
mov
clc
jp
clc
insl
outsl
fistps
clc
daa
clc
push
fldt
clc
fwait
lods
pop
daa
clc
jb
add
xor
pop
add
frstor
mov
xlat
fdivs
pop
sar
add
es
jecxz
cmp
clc
adc
lahf
xchg
gs
lock
insb
test
rorl
clc
cmpsl
clc
frstor
sahf
cmpsb
clc
jb
add
add
inc
clc
in
gs
mov
cmp
clc
mov
jmp
and
jge
outsb
fstpt
cmp
addr16
cmc
pop
mov
add
adc
add
gs
mov
mov
sahf
jb
add
aad
mov
add
mov
and
add
add
lods
clc
ret
xor
add
push
clc
jns
sub
add
aam
clc
inc
clc
rcrl
test
outsb
or
clc
push
clc
adc
add
inc
add
pop
mov
clc
inc
add
mov
cmp
clc
out
sbb
je
clc
ds
loop
mov
insl
std
and
add
add
test
sbb
cmp
add
xbegin
clc
outsl
scas
mov
push
movsl
clc
push
mov
cwtl
cltd
jae
add
clc
xchg
daa
clc
fwait
pop
enter
add
add
pop
and
xor
add
mov
inc
add
mov
add
es
xchg
cmp
xor
add
dec
inc
clc
add
add
or
mov
das
bound
add
add
stos
cs
add
mov
pop
xchg
daa
clc
mov
lods
mov
stc
out
cwtl
add
add
sar
repnz
cmp
add
mov
push
sub
jle
clc
je
shrl
add
mov
add
fs
ljmp
lret
pop
mov
sub
add
cmp
into
inc
add
push
inc
clc
lahf
pop
add
add
into
jge
insb
shlb
and
sub
add
add
mov
jmp
clc
fs
xchg
inc
clc
pop
shll
clc
out
xchg
clc
mov
stc
mov
sar
inc
clc
fwait
jno
add
add
data16
jnp
add
mov
clc
mov
jne
sub
cmp
mov
in
mov
dec
mov
lcall
clc
inc
add
in
cmp
pop
sub
clc
imul
add
cmp
test
jecxz
mov
iret
imul
mov
clc
bound
add
mov
clc
sbb
clc
pop
clc
inc
add
clc
sti
jp
push
add
sub
mov
clc
or
jbe
add
sbb
clc
jp
lcall
add
adc
add
int3
lret
clc
data16
rcrb
clc
xor
add
add
bound
add
clc
in
mov
add
cmp
add
int
clc
xchg
cmp
clc
das
imul
add
int3
iret
mov
add
push
add
in
and
mov
cmc
sbb
jnp
lret
sbb
xbegin
int
push
stos
mov
testl
add
pop
loopne
clc
sbb
cltd
sahf
adc
add
add
sti
dec
cmp
inc
add
cmp
mov
jp
pop
fnsave
mov
incl
add
mov
xlat
stos
stc
add
add
add
cmpsb
clc
aaa
lret
push
add
mov
scas
popa
add
push
stos
lea
xor
add
pushf
test
sub
mov
fildll
mov
xchg
dec
pop
leave
pop
icebp
pop
xor
add
add
xchg
sar
cmp
mov
cwtl
push
insb
add
add
clc
dec
xchg
cmp
aaa
mov
flds
in
popa
add
push
popa
add
je
mov
mov
fdivp
shrl
lods
sbb
clc
and
add
clc
or
jne
cld
sub
add
imul
sbb
dec
jbe
xor
add
add
mov
stos
push
add
push
xchg
into
mov
sar
xor
add
into
movsb
clc
mov
icebp
cmp
lret
jmp
clc
mov
add
dec
js
cmp
mov
imul
aam
pushl
add
inc
add
mov
stos
mov
add
add
push
or
clc
jle
ret
clc
addr16
idiv
dec
mov
jns
mov
stos
sub
cmp
sbb
clc
inc
add
stos
cmc
cmp
lcall
clc
mov
sbb
clc
or
clc
fcoml
add
call
sbb
push
clc
stos
xchg
clc
pushf
and
add
sub
lods
dec
in
popa
add
xchg
jle
xchg
pop
mov
jnp
es
xlat
testb
dec
lock
call
cmpsl
clc
in
out
iret
pop
sti
and
add
fdivrl
xchg
or
add
jns
clc
sub
sbb
stc
cmpsl
clc
push
lea
add
das
insb
out
cmp
clc
pop
pop
dec
mov
xchg
scas
sar
into
mov
inc
add
ss
movsl
clc
arpl
add
jg
pop
pop
sbb
add
jle
dec
lods
fstpt
cmp
rcrb
add
lret
lret
pushf
xlat
sub
jnp
add
sar
fistl
add
outsl
jmp
cmp
mov
and
add
fs
insb
clc
stos
push
cmp
lock
adc
add
add
sub
repz
add
jnp
ljmp
std
lock
clc
mov
insl
add
add
lret
psrld
add
movsb
clc
js
hlt
lret
jbe
rorl
add
xchg
sbb
pop
jb
add
nop
mov
jnp
cltd
mov
cltd
mov
add
add
clc
push
add
xchg
div
sub
clc
xchg
addr16
cmp
mov
dec
or
add
sbb
clc
idivl
mov
clc
inc
add
imul
sar
clc
adc
add
in
mov
jmp
xor
add
and
jbe
clc
adc
add
add
mov
add
stos
int3
int3
xchg
inc
clc
add
add
addr16
dec
sbb
and
add
add
mov
inc
clc
movsl
clc
notb
add
jg
call
dec
hlt
inc
clc
adc
add
xabort
xor
add
sub
add
mov
nop
jle
clc
sub
add
test
add
xabort
inc
clc
rcrl
mov
clc
jnp
clc
in
inc
clc
mov
clc
stc
arpl
add
fcom
pushf
push
pop
add
add
lcall
sbb
stos
jg
push
add
jmp
mov
inc
add
jg
pop
add
add
fs
sbb
add
test
insb
mov
and
addr16
jne
xchg
fiadds
clc
mov
add
add
int3
repnz
clc
adc
add
dec
xor
scas
mov
clc
cmp
add
mov
add
xchg
in
add
aad
add
adc
add
clc
or
add
mov
clc
cmp
clc
cmp
dec
notb
sbb
inc
add
adc
add
add
and
add
or
data16
divb
add
je
sub
mov
icebp
and
add
clc
add
clc
xlat
icebp
call
push
pop
loope
enter
pop
dec
cmpsb
clc
int
lock
mov
pushf
or
add
jle
push
inc
clc
mov
clc
outsb
xbegin
push
ret
icebp
test
inc
add
add
add
add
mov
fnstsw
clc
pop
iret
push
add
sub
clc
sbb
sub
add
popf
cs
add
repz
inc
clc
mov
add
fs
in
jge
mov
add
xor
add
add
in
imull
rcl
push
add
sub
pop
pop
adc
cmp
loop
adc
add
add
push
add
sarl
push
pop
lret
mov
push
add
add
add
or
cmp
dec
mov
pushf
cltd
xor
clc
xchg
pop
xchg
pop
jl
clc
jnp
add
add
lret
repnz
jns
and
mov
xor
loopne
shl
clc
stos
shll
clc
lahf
mov
enter
pop
js
cli
mov
scas
pop
xchg
add
add
clc
loopne
jge
clc
add
mov
jb
add
das
enter
add
fnstsw
jl
or
add
add
add
clc
cmp
movsb
clc
pop
decb
imul
mov
test
clc
loop
and
mov
mov
clc
cli
push
push
dec
pop
and
add
sarb
mov
clc
outsb
push
add
inc
clc
add
push
add
aaa
and
add
scas
sbb
clc
xchg
and
dec
sub
xchg
shrl
scas
dec
xabort
mov
mov
push
dec
inc
add
mov
mov
mov
call
push
clc
push
cmp
or
jmp
clc
repz
dec
stos
xor
add
ljmp
jmp
push
add
hlt
cwtl
push
inc
add
sahf
dec
cmp
mov
mov
clc
out
xchg
out
mov
fdivrl
cmp
clc
fdivl
clc
mov
xchg
cmpsb
clc
pop
fimull
add
jne
add
jl
jg
call
add
fs
push
adc
add
or
es
stos
sub
inc
clc
sbb
add
cmp
add
or
cmp
add
pop
push
fidivs
add
add
push
cmp
rcrl
fldcw
addr16
push
mov
add
cmp
add
mov
pop
clc
adc
add
mov
xchg
push
add
add
inc
clc
xchg
pop
mov
mov
clc
out
adc
add
add
jno
add
clc
sub
jg
sbb
add
mov
or
push
clc
pushf
scas
jnp
cmp
sbb
lods
movsl
clc
clc
bound
add
mov
add
mov
movsl
clc
mov
add
dec
pushf
xchg
mov
clc
jecxz
add
pop
popa
add
push
cmp
add
pop
xchg
jb
add
shll
add
aaa
sbb
clc
bound
add
cmpsb
clc
repz
add
push
add
sbb
clc
sbb
clc
data16
aas
mov
ds
stos
bound
add
xabort
xchg
pop
pop
sahf
enter
add
in
mov
rorb
lret
inc
clc
out
cmp
clc
leave
data16
ficompl
clc
mov
xchg
test
or
add
clc
mov
ret
add
jb,pn
add
add
and
add
ret
lret
nop
decl
daa
clc
shll
add
in
pop
in
loop
jle
add
mov
lcall
sbb
jne
clc
inc
add
leave
rcll
xor
add
add
out
lahf
sar
clc
mov
adc
add
inc
clc
inc
clc
fnstenv
clc
jmp
test
icebp
sar
push
clc
cwtl
icebp
xchg
addr16
mov
add
pop
repnz
dec
jae
add
cmp
lods
sub
clc
out
nop
loop
out
push
xchg
and
clc
loope
cmc
inc
add
sub
clc
es
ja
clc
cltd
aas
mov
scas
cs
call
clc
in
dec
pop
icebp
inc
clc
int
clc
std
xor
add
pop
mov
call
clc
incl
add
js
sub
and
add
cmp
movsb
clc
ret
clc
push
jns
xchg
mov
add
add
clc
mov
sbb
mov
pop
fsts
add
pop
xchg
sar
clc
sahf
pusha
add
and
add
xor
add
clc
dec
cld
inc
add
mov
lock
int3
call
fimuls
daa
clc
push
in
adc
add
add
mov
add
pop
or
push
add
in
and
clc
xchg
out
in
lcall
clc
push
mov
clc
adc
clc
jbe
outsb
push
and
add
mov
inc
clc
fwait
inc
clc
mov
sub
push
pop
clc
sub
lock
mov
add
fadds
mov
push
add
xchg
mov
fmuls
sub
cwtl
dec
or
imul
xchg
daa
clc
xor
add
pop
insb
cmp
mov
outsl
push
out
sub
clc
int
hlt
mov
clc
or
push
clc
xabort
mov
xchg
jbe
cmp
mov
hlt
mov
dec
dec
mov
add
add
clc
popa
add
mov
or
pop
mov
mov
pop
das
mov
mov
out
xchg
fdivrl
sar
clc
es
dec
stc
jb
add
fdivs
add
test
clc
cmp
gs
insb
or
bound
add
add
sbb
jp
cltd
cmp
or
repnz
pop
leave
add
add
push
add
aam
clc
xchg
imul
add
pushf
sub
mov
ja
or
std
lea
add
scas
out
and
add
push
pcmpeqd
rcll
add
add
cmp
loopne
mov
outsb
lock
jb
add
xchg
stos
dec
sahf
inc
clc
xchg
cwtl
pusha
add
sub
or
clc
rolb
mov
or
cmp
cmp
inc
clc
pop
dec
rclb
inc
add
cltd
cmpsl
clc
adc
add
add
clc
mov
add
bound
add
add
lcall
clc
adc
add
add
add
xor
add
out
cmp
clc
lahf
test
out
xchg
mov
inc
clc
das
jle
popf
mov
add
jnp
xlat
inc
add
or
add
add
movsb
clc
jge
jle
jns
clc
sbb
push
pop
jmp
popa
add
repnz
add
add
push
add
inc
add
push
add
lret
mov
sarb
fdivr
rcll
add
add
clc
dec
test
push
clc
cmp
popf
in
push
push
pop
outsb
data16
mov
clc
arpl
add
add
or
int
or
fwait
icebp
mov
add
cmp
push
fcomps
inc
clc
cmp
clc
or
leave
arpl
add
cmpsb
clc
adc
lods
push
push
add
dec
cmp
inc
clc
popa
add
mov
cmp
add
add
clc
mov
clc
ret
jno,pn
add
add
and
add
xchg
adc
add
mov
clc
sub
je
push
push
xchg
hlt
cli
fs
ret
clc
cli
xor
add
clc
fsubrp
pop
xchg
push
add
dec
aam
fildll
es
outsb
ret
clc
inc
add
push
dec
dec
ret
clc
jns
int3
bswap
jns
add
bound
add
push
xchg
scas
add
add
aas
dec
rorl
mov
divb
ror
xchg
es
mov
add
call
mov
imul
or
sbb
clc
cmpsb
clc
mov
movsb
clc
stos
es
cmp
sub
movsl
clc
ret
clc
adc
add
clc
add
clc
adc
add
add
clc
aaa
mov
jnp
sbb
add
jnp
imul
fld
clc
pop
inc
clc
pop
push
push
add
mov
sbb
mov
add
mov
fadd
clc
clc
mov
mov
pushf
mov
add
in
das
and
add
dec
loop
push
add
xbegin
add
notb
sbb
add
sahf
and
add
pop
je
xchg
outsl
sub
cmp
sbb
add
sbb
inc
clc
lock
inc
add
dec
mov
sahf
bndldx
clc
and
add
clc
pop
push
add
mov
push
add
arpl
add
jnp
clc
test
arpl
add
add
es
lods
pop
and
add
sbb
xor
pusha
add
into
int3
iret
scas
xor
add
add
inc
add
lahf
jp
adc
add
repz
clc
jg
insl
mov
leave
arpl
add
cmp
test
sub
enter
mov
inc
clc
mov
jp
xor
add
flds
inc
add
jecxz
pop
test
lret
cmp
clc
pop
inc
add
sahf
sbb
outsb
dec
pop
and
add
xor
add
aaa
xabort
add
cmc
xchg
mov
mov
add
add
movsl
clc
and
add
xchg
aaa
adc
add
mov
and
push
std
movsl
clc
inc
clc
cmp
push
add
mov
or
aaa
bound
add
push
xor
add
clc
xchg
jecxz
icebp
inc
add
std
into
test
jp
cmp
xor
add
add
add
and
add
push
xchg
jg
pop
lock
clc
push
clc
adc
add
add
js
cmp
pop
lods
pop
jns
push
icebp
scas
sbb
add
mov
shrl
leave
fisubl
add
adc
add
add
in
push
xor
clc
jg,pt
clc
sub
jle
int
in
sbb
adc
add
clc
scas
xor
push
ret
xor
add
add
push
jbe
adc
scas
add
fnstenv
add
mov
divl
add
pop
mov
add
fxam
clc
xchg
push
push
std
inc
clc
js
mov
mov
clc
insb
sub
dec
sub
out
ret
clc
xbegin
add
addr16
es
scas
or
sti
lcall
adc
add
dec
cmc
inc
clc
out
cld
mov
add
add
add
cmp
clc
dec
mov
xor
add
mov
cmp
add
or
jl
push
add
cmp
xor
add
clc
add
add
mov
pushf
test
clc
sub
or
clc
sbb
clc
mov
add
push
add
add
es
cltd
jo
add
pushf
stc
sub
sub
out
pop
cmpsb
clc
inc
clc
jbe
mov
movsl
clc
sbb
clc
jmp
frstor
aaa
inc
clc
out
mov
xlat
push
sub
adc
add
clc
xor
add
clc
ljmp
add
pusha
add
inc
clc
adc
add
clc
or
add
pop
jecxz
lods
scas
and
add
clc
or
dec
leave
xchg
mov
lea
clc
aad
or
rcl
or
add
sub
mov
pop
ja
clc
xbegin
enter
rcl
jo
add
pop
lahf
cmp
cltd
xchg
incb
das
in
xchg
or
mov
dec
mov
clc
cltd
stos
faddl
clc
bound
add
add
sar
push
cmp
clc
mov
clc
sub
jl
jg
add
add
add
test
dec
es
mov
mov
add
add
clc
fs
inc
add
fidivrl
add
sar
mov
idivl
fsub
clc
push
sub
add
insb
sbb
and
add
add
test
xchg
loopne
sbb
push
into
in
adc
add
jnp
mov
sti
add
add
popa
add
dec
mov
sar
cmp
clc
imul
or
adc
add
sbb
clc
sbb
fisubrl
sbb
xchg
and
std
mov
clc
mov
or
clc
outsl
repnz
scas
jp
loopne
pop
pop
ja
adc
add
fs
xchg
ss
add
addr16
sti
popa
add
lods
clc
sbb
add
jmp
mov
clc
xor
add
add
add
pop
mov
stos
dec
mov
or
add
roll
sub
add
xchg
cli
fs
repnz
add
add
add
ja
dec
xchg
push
and
add
stos
cmp
clc
and
clc
shr
pop
rcrl
cmp
clc
sahf
xchg
jle
sub
rcl
or
div
outsl
lods
pop
arpl
add
clc
sbb
add
cltd
xchg
fidivrl
add
call
clc
out
mov
xlat
cmpsb
clc
lea
cld
and
add
and
adc
add
add
add
add
xchg
std
cmp
ret
lret
and
add
xchg
push
aas
or
sar
add
or
add
iret
mov
pop
test
and
add
xor
add
add
xchg
ja
lea
push
clc
icebp
adc
add
add
add
imul
jno
add
inc
add
dec
ljmp
cmp
clc
jne
add
rorb
ds
xchg
or
jge,pn
add
int3
inc
add
gs
jbe
add
int3
stos
addr16
rorb
clc
cmp
add
mov
in
push
add
shlb
shlb
clc
fucomi
fcoml
xor
add
add
es
iret
mov
or
clc
mov
and
add
cmpsl
clc
lods
cli
bound
add
fs
jnp
ret
out
dec
sub
loop
nop
clc
or
clc
inc
clc
sbb
add
pop
clc
jbe
sti
rcll
add
add
xor
add
mov
push
xchg
addr16
leave
sar
mov
inc
clc
push
add
and
add
add
cmp
cmp
mov
add
add
iret
int
cmc
fidivrl
clc
jp
call
clc
add
pop
imul
scas
mov
cmp
lcall
add
imull
add
cmc
gs
hlt
rol
clc
dec
xlat
enter
sub
pushl
adc
add
add
add
ss
and
add
or
clc
mov
mov
out
gs
pop
add
add
add
inc
clc
cmpsl
clc
push
clc
push
add
stos
sbb
cmp
clc
xor
add
stc
mov
nop
cwtl
mov
fmull
and
or
push
clc
mov
dec
fcom
xchg
jecxz
jp
fnsave
add
or
ljmp
mov
add
mov
dec
push
clc
cld
cmc
cmp
cmp
clc
mov
ret
clc
pop
aas
pop
cmp
cmp
sub
adc
add
push
add
push
out
cmpsl
clc
and
add
jle
clc
aad
clc
push
cmp
int
test
loopne
adc
mov
adc
add
jmp
je
clc
insb
push
add
xor
add
cwtl
cld
jb
add
mov
lods
dec
mov
xchg
xor
mov
fmul
pop
push
or
clc
sub
push
clc
test
aaa
xlat
pop
and
add
insb
pop
and
add
fidivrl
cmpsb
clc
jle
mov
xchg
mov
leave
xchg
jne
sub
bound
add
clc
inc
clc
repnz
fstpt
clc
cmp
mov
mov
clc
fwait
sarb
in
pop
movsb
clc
mov
lahf
sub
aad
clc
push
clc
inc
clc
mov
add
add
lret
xchg
test
add
clc
pop
push
clc
mov
add
and
scas
jae
add
add
jp
jae
add
add
add
clc
xor
push
fcos
fnsave
cli
fisubrs
cmp
aad
clc
hlt
jbe
clc
clc
add
add
add
jae
add
clc
add
and
add
sbb
xbegin
out
test
mov
mov
and
add
add
pop
clc
cmp
pop
dec
inc
clc
push
daa
clc
push
xor
adc
add
fsubrl
pop
cli
lods
inc
add
add
divb
rcl
push
pop
enter
xor
add
add
dec
cmp
lcall
cmp
clc
fdivrl
clc
cltd
int3
outsb
and
add
clc
add
add
push
pop
cld
in
xchg
scas
imul
out
mov
stos
xchg
adc
add
add
add
cmp
in
or
cmc
sar
fs
mov
lods
shr
jecxz
mov
mov
xchg
icebp
mov
mov
xor
add
adc
add
sub
jecxz
hlt
cs
aas
mov
add
adc
add
clc
aaa
mov
insl
adc
add
add
sub
add
mov
sub
pop
or
fs
lock
add
adc
leave
xchg
insb
das
lea
add
add
fiaddl
add
cs
xchg
add
clc
cmp
clc
ss
clc
push
lcall
xor
add
add
push
add
xchg
lret
add
mov
jge
dec
sbb
stos
icebp
xor
add
clc
ss
and
add
cwtl
or
add
and
add
push
pusha
add
arpl
add
xchg
out
mov
cmp
clc
loopne
iret
adc
add
add
sbb
clc
sbb
fldcw
das
sub
add
lods
ja
jo
add
add
call
jne
mov
in
nop
inc
clc
movsb
clc
pop
bound
add
sbb
add
clc
icebp
rcr
repz
add
pop
fcmovnbe
fwait
cmp
add
scas
cmp
mov
mov
sar
xor
add
mov
add
imul
jnp
clc
inc
add
inc
clc
scas
js
push
add
sarl
movsb
clc
int3
sar
add
pushf
mov
fcmovnu
in
xbegin
clc
jo
add
test
test
and
add
clc
icebp
fs
push
movsl
clc
pop
cmp
adc
mov
clc
xchg
push
mov
clc
or
dec
fst
adc
add
add
add
xor
add
clc
pusha
add
xabort
cld
xchg
push
addr16
xchg
arpl
add
sub
xchg
ficomps
push
js
push
out
inc
clc
arpl
add
or
pop
clc
xor
add
lret
in
clc
rol
clc
addr16
add
jbe
adc
add
clc
pushf
and
add
add
and
jno
add
aas
push
clc
lea
add
sbb
clc
sbb
clc
sbb
clc
xchg
push
add
add
add
sbb
loop
dec
push
clc
push
add
in
movsb
clc
sbb
clc
and
mov
inc
add
pop
insb
xor
add
clc
and
inc
add
xchg
mov
je
clc
je
clc
lock
add
jle
jae
add
mov
clc
add
fistpl
cmp
arpl
add
inc
clc
inc
add
lock
sbb
mov
clc
sbb
clc
sarb
add
out
aam
outsb
rclb
add
clc
loopne
flds
jae
add
fistpll
add
push
dec
nop
inc
add
mov
pop
pop
es
sbb
and
ficoml
aam
add
int
imul
add
sub
push
sbb
scas
gs
or
int
add
das
nop
sbb
push
jo
add
jns
push
add
mov
mov
add
add
icebp
jecxz
jecxz
aas
jb
add
add
add
inc
add
clc
adc
add
push
add
inc
clc
mov
clc
pop
data16
in
xchg
cmp
push
xor
add
clc
jb
add
cmp
sar
clc
iret
sar
xlat
test
pop
ss
clc
jg
adc
mov
clc
pop
xor
mov
add
cmp
and
cmp
clc
in
xchg
pop
sbb
add
cld
fisubrl
dec
test
out
sar
jne
or
lcall
out
push
rorl
test
lods
mov
dec
add
cmp
stc
add
add
sub
daa
clc
cmp
nop
push
aaa
cltd
jbe
out
clc
loope
dec
out
mov
loope
cli
addr16
push
pusha
add
inc
clc
xchg
lods
jbe
and
add
xlat
rcrl
jne
clc
arpl
add
fs
or
push
fwait
jo
add
mov
clc
outsb
in
and
add
add
repz
clc
sub
clc
mov
clc
sar
outsb
push
xchg
push
sar
push
iret
jne
inc
clc
iret
nop
out
pop
jg
clc
ljmp
fs
jne
divb
call
add
outsl
fwait
aam
clc
rcrb
rorb
repnz
jecxz
mov
sub
clc
lods
mov
mov
bound
add
movsb
clc
das
popl
add
add
stos
fs
loope
push
add
add
sub
stos
dec
out
mov
add
sarl
clc
aaa
inc
add
nop
in
cmp
clc
pop
mov
cmp
sbb
add
pushf
mov
add
nop
dec
pop
fistps
push
or
push
sbb
cmp
add
mov
clc
fptan
sbb
jbe
fsubrl
sbb
clc
jp
jno
add
add
clc
xchg
fucomi
test
add
add
testl
add
clc
mov
clc
insb
mov
clc
pop
je
adc
cld
jecxz
imul
add
repnz
mov
add
jecxz
add
add
and
add
clc
pusha
add
cmp
movsl
clc
clc
loopne
ret
clc
sbb
xabort
lods
insl
sti
add
movsl
clc
nop
mov
int
das
sbb
add
scas
mov
sar
test
test
lods
sbb
movsb
clc
clc
and
add
cwtl
dec
jg
jg
and
add
dec
jno
add
mov
clc
inc
add
into
dec
mov
clc
lods
adc
clc
sbb
or
add
pop
das
dec
mov
add
jbe
clc
hlt
push
mov
cmc
imul
sbb
clc
jbe
push
adc
add
addr16
and
add
add
cld
jo
add
data16
cwtl
iret
clc
sahf
adc
push
icebp
cli
lret
test
std
sar
jle
add
mov
movsb
clc
inc
add
inc
clc
pop
fs
scas
js
pop
push
add
mov
cli
mov
daa
clc
dec
popl
adc
add
insb
ret
clc
dec
stos
in
movsl
clc
divl
or
rcrb
pop
rcrb
es
loope
pop
ffreep
clc
aam
clc
mov
cli
mov
jmp
xor
add
add
clc
mov
add
clc
xchg
in
cld
test
sub
add
cmp
loop
in
inc
add
sar
xor
lahf
inc
add
fs
mov
xchg
push
adc
add
or
push
jno
add
add
add
sub
clc
in
mov
clc
pop
jecxz
ljmp
push
scas
in
clc
lods
mov
mov
add
xor
add
add
add
jge
in
sahf
xchg
push
add
sti
push
add
mov
clc
pop
dec
pusha
add
mov
icebp
ret
outsl
lods
pop
mov
add
outsl
inc
clc
cmp
dec
out
mov
clc
int3
adc
add
add
clc
inc
clc
xchg
and
add
jecxz
or
add
sub
adc
add
dec
cmp
add
push
cmpsb
clc
cmp
clc
ljmp
data16
xor
add
jecxz
sti
aaa
loopne
ds
fs
shll
add
add
cwtl
pop
and
mov
or
clc
push
add
jge
jecxz
jno
add
cmovns
jnp
popa
add
daa
clc
mov
dec
mov
fdivrs
pushl
add
cmp
add
int
test
clc
and
add
sub
push
fldcw
mov
inc
add
out
add
add
cmpsl
clc
data16
lahf
mov
push
xchg
mov
or
jg
in
stos
fmuls
pop
clc
xor
pusha
add
ljmp
cltd
mov
adc
add
add
sbb
pop
xor
clc
and
test
aas
ss
add
js
jne
out
int
iret
movsb
clc
xor
add
clc
xor
add
add
pop
mov
test
cmp
cmp
mov
sbb
and
add
add
mov
out
movsl
clc
dec
dec
or
rep
test
add
sahf
lods
notl
cmp
pop
inc
add
mov
adc
add
and
cmpsb
clc
enter
mov
mov
gs
jle
xchg
stc
cwtl
pop
dec
sub
add
popa
add
fldl
sbb
clc
mov
add
sar
clc
mov
mov
push
add
aam
inc
add
push
lret
icebp
dec
cmp
add
clc
adc
dec
or
lods
das
xor
clc
push
lret
daa
clc
xor
add
es
lahf
mov
dec
xbegin
xchg
add
add
and
add
cmp
sbb
mov
adc
mov
jb
add
and
xchg
int3
mov
adc
add
sbb
xabort
clc
daa
clc
repz
flds
scas
