cmpb
mov
ret
mov
addb
aas
out
cmc
mov
popf
into
shl
add
mov
mov
sub
lods
popa
mov
xor
mov
or
out
dec
out
fldt
mov
pop
cwtl
sub
add
mov
cmc
sti
cmp
push
or
mov
daa
jb
mov
push
repz
mov
mov
aam
dec
jl
lock
add
xorl
stc
push
cltd
pop
cmp
add
pop
in
inc
push
add
inc
mov
jle
out
stos
sbb
mov
lret
mov
dec
loope
ret
fimull
add
mov
out
jmp
shll
fisttps
and
add
mov
mov
xorl
or
out
mov
sbb
and
add
test
mov
mov
mov
dec
call
lret
mov
lods
orl
loopne
mov
adc
mov
xchg
jnp
xchg
ret
cs
sbb
add
fstpt
mov
popa
ljmp
addb
xchg
ret
jae
or
xor
movsb
pop
ljmp
add
mov
add
hlt
or
and
mov
inc
add
das
sbb
test
pop
and
fs
rolb
mov
xor
jbe
mov
add
mov
mov
mov
jl
xor
mov
push
add
add
mov
dec
adc
mov
mov
clc
in
aaa
xor
mov
mov
sub
push
add
repnz
addb
inc
add
add
mov
lods
insl
sub
push
jo
mov
and
pop
mov
sub
pop
xor
jbe
out
mov
out
push
jge
inc
add
or
mov
adc
pop
in
imul
loope
dec
mov
mov
pop
in
je
enter
or
test
nop
add
daa
xlat
aaa
dec
cmp
add
add
mov
cmp
imul
mov
ljmp
bound
mov
add
out
stos
in
mov
add
mov
push
push
insb
in
pop
lock
sub
loopne
mov
iret
adc
mov
add
cmp
mov
daa
out
stc
adc
mov
pop
lea
add
mov
xor
push
add
clc
int3
lods
test
shll
loopne
mov
sti
cld
out
pop
repnz
scas
je
loop
mov
imul
fimull
mov
pop
push
jnp
xchg
arpl
lds
pop
sbb
mov
xchg
add
scas
dec
imul
add
mov
mov
xchg
in
addr16
mov
mov
lea
ret
addr16
pop
inc
add
push
in
jns
cmp
mov
push
mov
mov
out
sbb
iret
mov
mov
out
out
jmp
mov
movsl
add
add
lods
setge
daa
xor
mov
mov
and
mov
xchg
and
bound
mov
test
inc
dec
fldenv
xchg
or
add
xor
mov
out
int
nop
add
jno
add
or
add
jne,pn
push
scas
mov
ljmp
push
sub
ja
out
divl
add
sbb
cs
add
int3
ljmp
mov
stc
cmpl
popf
fcoml
push
pop
sbb
test
testb
inc
dec
dec
fwait
push
add
shl
fimull
cmpsl
mov
leave
lds
int3
fnsave
pop
push
addb
into
sar
call
mov
or
int
fsts
scas
cmpsb
xchg
add
negl
dec
mov
into
mov
sub
daa
cli
mov
or
lcall
add
cltd
jae
std
int3
insb
fnstsw
jmp
mov
add
pusha
add
outsb
push
add
sub
mov
inc
inc
sub
popa
addb
enter
add
das
rolb
mov
inc
xchg
loope
add
mov
mov
jns
add
mov
adc
mov
cmpsb
cmp
sbb
addb
mov
inc
pushf
or
movsb
les
scas
pop
popf
cwtl
push
ret
add
xchg
data16
xor
mov
pop
or
push
dec
dec
pop
sub
add
mov
fldl
push
add
lret
jecxz
xor
mov
add
add
mov
add
loope,pn
sbb
xchg
push
add
jg
push
fcoml
cmpsl
jno
fcmovne
movsl
cltd
popf
hlt
fstpl
in
mov
jmp
clc
mov
lcall
fidivrs
mov
mov
mov
cmpsb
mov
and
mov
mov
xor
mov
pop
mov
mov
mov
add
sub
fstpl
ds
scas
jp
les
mov
js
push
push
add
and
mov
insb
push
add
std
iret
cmp
ss
add
mov
mov
add
mov
js
mov
inc
add
popf
pushf
addl
int3
nop
add
add
inc
push
aam
mov
jnp
cmc
mov
loopne
mov
mov
mov
mov
and
mov
test
je
cs
rolb
mov
cmp
dec
add
hlt
and
mov
xor
fucom
add
push
add
dec
mov
fcoms
add
std
jbe
jbe
xor
fwait
jbe
add
mov
fidivl
dec
xor
mov
pop
dec
mov
or
and
push
pop
adc
loop
mov
add
or
add
cmp
ret
pop
adc
gs
out
sub
enter
mov
xchg
add
cli
pushf
mov
mov
mov
repz
mov
add
ljmp
mov
add
add
pop
aas
rolb
jbe
inc
add
hlt
cli
lret
push
push
add
dec
dec
je
sub
pop
sbb
je
add
popf
dec
dec
mov
mov
stos
in
data16
stos
push
add
push
add
lahf
aaa
into
fmulp
jo
mov
inc
ljmp
inc
mov
daa
mov
mov
ljmp
xchg
mov
and
ljmp
in
movsb
add
add
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
in
insl
popf
mov
mov
mov
sarl
push
lcall
inc
add
xlat
pop
movsl
push
sbb
xchg
inc
add
mov
cmp
push
call
fstl
ljmp
sahf
mov
es
rcpps
fstpt
sub
sub
testb
mov
lret
add
pop
inc
mov
adc
or
pushf
mov
mov
test
add
sub
add
mov
aas
repz
mov
les
js
addb
cs
icebp
ja
push
add
add
sub
mov
add
mov
pop
pusha
add
movsb
inc
inc
mov
add
add
dec
and
add
out
cmpsb
or
add
cld
jb
mov
iret
jl
sarl
and
sbb
cli
mov
add
pop
addb
popf
lods
insb
data16
das
lods
test
add
add
repz
rolb
mov
jp
js
add
fs
out
mov
add
add
popa
inc
iret
cmpsb
jno
xchg
dec
movsl
test
add
rolb
xchg
cltd
cmp
imul
mov
int
out
jo
mov
or
mov
js
fidivl
add
add
test
push
and
test
lret
mov
les
mov
mov
flds
add
mov
cltd
or
fmulp
mov
add
add
dec
and
aaa
int
add
add
mov
bound
mov
aas
and
mov
jmp
sbb
and
scas
xor
mov
dec
into
adc
add
sub
pop
adc
push
insl
dec
xorl
rcll
add
dec
push
cmpsl
mov
ds
xchg
mov
xlat
inc
jns
adc
sbb
dec
fcmovbe
push
add
pushf
xor
inc
pop
jo
mov
icebp
lock
lret
sahf
mov
mov
mov
fcoml
mov
data16
and
mov
xchg
xchg
add
pop
mov
cmp
in
repz
lahf
add
mov
cmp
in
mov
test
push
inc
cmpl
popf
mov
add
push
jb
mov
jge
enter
icebp
shll
mov
inc
imul
inc
stos
mov
mov
lock
cld
pop
rolb
mov
sub
hlt
mov
cwtl
jbe
add
ficoml
mov
cmp
roll
mov
mov
jnp
cmp
inc
mov
add
cli
rep
movsb
mov
idivb
stos
sub
loop
mov
push
inc
add
mov
push
add
sti
inc
stc
push
mov
fildll
pusha
add
mov
les
dec
adc
dec
es
lock
repz
aad
add
add
pop
adc
mov
jbe
sub
pop
jns
inc
xchg
and
mov
in
std
xchg
cltd
ret
xchg
icebp
scas
out
addb
fisubrl
insb
push
add
es
xor
rolb
mov
push
mov
jge
jo
mov
xchg
inc
xor
mov
negb
imul
imul
pop
lods
aad
addb
arpl
mov
fidivrl
push
cs
add
sub
scas
xor
mov
jl
xchg
movsb
iret
sub
mov
mov
lahf
mov
add
push
loopne
mov
fwait
cmpsb
lahf
movsb
cwtl
jns
call
ret
sbb
and
mov
pop
mov
dec
jge
nop
add
clc
insl
and
stos
mov
leave
in
add
sub
add
lock
add
rolb
orl
dec
adc
add
pop
outsl
adc
mov
xor
pop
push
sub
adc
push
icebp
es
jb
mov
cmp
lahf
loop
mov
outsl
movsl
or
fs
add
dec
xor
mov
pop
push
inc
add
fwait
or
out
pushl
add
jmp
rorl
mov
add
pop
pop
pop
das
hlt
in
enter
loopne
mov
repz
xchg
cltd
mov
mov
sub
add
jno
pop
mov
mov
xchg
imul
pop
pop
cwtl
cld
adc
mov
cli
pusha
add
fsubs
sbb
scas
into
bound
mov
popa
pop
fsubrs
or
pop
inc
add
add
psraw
jo
mov
add
add
cmp
add
movups
mov
cwtl
ret
push
pop
ss
add
add
pusha
add
pop
aas
adc
mov
in
push
adc
mov
addr16
insl
addb
jae
add
sbb
mov
add
push
inc
add
dec
addb
xor
mov
cmc
mov
aad
mov
cmc
or
mov
iret
xchg
xlat
xchg
mov
fsubp
push
sbb
inc
mov
add
out
addl
cwtl
push
push
jl
adc
jle
add
add
inc
dec
mov
out
movsl
psubw
or
mov
js
lret
pop
sbb
addb
dec
dec
push
shl
pop
in
xor
aaa
or
sbb
push
fs
sbb
lahf
inc
leave
xlat
mov
mov
pushf
int3
mov
push
cld
rolb
lods
in
and
mov
mov
adc
xor
mov
repz
clc
fsubrl
dec
or
je
sbb
mov
stos
repnz
pop
inc
fldl
mov
rcrl
nop
add
rolb
sbb
add
jle
clc
dec
ret
and
das
dec
clc
into
ret
xor
mov
add
mov
push
xlat
test
xchg
add
mov
cmp
mov
ja
negl
xor
mov
sti
mov
mov
andl
aad
push
xor
das
xchg
jns
sbb
jae
pop
call
add
lods
addb
test
dec
push
cwtl
add
jl
mov
mov
sub
pop
das
dec
xchg
into
push
mov
rolb
mov
push
int
mov
mov
add
lcall
xchg
xor
push
xor
xchg
testb
ds
mov
pusha
add
cmp
loop
mov
push
add
mov
mov
mov
fwait
loopne
mov
add
push
add
mov
mov
jle
int
sbb
pop
jnp
inc
add
pop
iret
mov
clc
je
sbb
add
mov
add
cmpsb
push
mov
push
adc
mov
test
add
imul
or
mulb
mov
fists
add
sahf
fnsave
or
mov
je
ficomps
pop
jns
clc
test
cltd
xchg
xchg
fadds
mov
cmp
add
hlt
sub
xchg
sub
insb
add
cld
cwtl
cltd
in
add
rol
out
mov
stos
cli
adc
mov
in
xor
push
sub
out
fisubrl
push
jge
jmp
scas
add
sbb
or
jbe
rolb
mov
or
fwait
dec
jmp
sub
cmp
add
inc
jecxz
adc
mov
xor
jmp
jbe
mov
push
and
and
mov
imul
stos
mov
fisubrl
add
mov
add
mov
push
cli
icebp
mov
scas
mov
mov
shll
ret
les
mov
mov
test
sub
cmp
icebp
je
stos
popf
sahf
sbb
mov
cs
dec
mov
sbb
in
int3
add
stc
cld
or
add
sub
je
cmp
roll
into
mov
add
aam
add
lds
bound
mov
mov
adc
mov
add
push
add
add
add
in
or
pop
repnz
add
push
jecxz
sbb
mov
sbb
jnp
mov
mov
mov
mov
sbb
int
loop
mov
rolb
jno
in
pusha
add
mul
jo
mov
mov
out
or
bound
mov
test
lds
adc
add
std
cmp
and
mov
pop
in
push
jmp
popa
inc
arpl
add
cmpsb
std
jmp
sahf
mov
test
dec
xlat
add
addb
jae
lahf
into
dec
xor
test
fbstp
mov
add
sub
add
push
gs
adc
sbb
repnz
xor
mov
jns
add
jle
insb
jns
jbe
movsl
imul
mov
fs
adc
add
add
cmp
int3
std
cmp
sbb
pusha
add
in
dec
add
outsl
xchg
and
add
add
jmp
pop
adc
add
icebp
adc
cs
mov
in
fnstsw
mov
add
cwtl
mov
inc
add
addb
outsb
cmp
and
add
lds
mov
jnp
or
rorl
in
adc
mov
add
enter
and
cwtl
push
push
jnp
mov
lea
mov
add
mov
js
fcmove
lock
andl
pushl
leave
ret
subl
int
loope
ds
add
out
fistps
data16
lock
and
push
add
jno
dec
cmp
pop
push
clc
leave
cmp
pop
fdivs
add
fwait
mov
add
in
cmpsl
out
enter
or
mov
mov
add
clc
cli
xor
mov
imul
sub
in
call
add
mov
ljmp
adc
cmp
lret
ret
mov
add
and
xchg
shll
sbb
mov
test
iret
push
add
pop
test
xchg
in
pop
in
lret
xchg
je
enter
out
adc
add
imul
negb
pop
cli
data16
mov
idivb
lds
add
dec
mov
js
add
or
shll
add
pop
stos
dec
ljmp
insb
fmuls
data16
testb
or
lcall
add
pusha
add
mov
test
jns
pop
xchg
es
fisubrl
out
insl
add
mov
imul
jno
jne
sti
mov
aam
or
mov
mov
cs
cmpsb
push
push
add
hlt
aas
shrl
pop
ret
push
push
pop
mov
add
mov
mov
mov
inc
jecxz
les
add
in
cmp
or
pop
push
inc
movsb
in
xor
mov
int
ret
mov
add
dec
pop
inc
mov
mov
cmp
xchg
and
mov
mov
sbb
mov
pop
mov
jmp
test
add
pop
imul
add
add
mov
in
add
jno
out
test
sbb
pushf
cld
mov
add
ficoml
xchg
addr16
mov
add
fidivrs
xchg
out
push
mov
addb
cmp
push
add
mov
push
mov
mov
mov
stc
pop
sti
cmpsl
hlt
inc
dec
call
int3
cltd
push
xchg
push
repz
or
int
cwtl
rolb
mov
add
sahf
xor
in
cwtl
sbb
jle
ret
push
test
push
js
sub
mov
mov
aaa
sbb
rolb
or
add
mov
aaa
int3
inc
add
mov
push
add
pop
jl
out
adc
addr16
push
add
fidivrs
stc
push
push
addb
mov
fisttpl
fcmovbe
mov
mov
add
cmp
mov
nop
add
add
mov
xor
cmp
mov
in
js
and
mov
lcall
dec
test
icebp
cmp
aam
roll
add
mov
sarl
add
add
mov
enter
mov
cmp
aad
pop
adc
aam
clc
adc
mov
mov
fdivrs
xor
push
pusha
add
stos
push
dec
pop
not
cld
sub
xor
jns
pop
mov
sti
xchg
jo
mov
add
mov
add
in
adc
aaa
pop
fwait
enter
or
cmp
loopne
mov
cltd
jp
and
jle
je
insl
in
xchg
pop
mov
mov
scas
dec
xchg
add
jl
adc
mov
add
jnp
lods
xchg
dec
jns
jmp
push
fisttps
aad
add
rolb
fcmovb
add
ds
add
mov
mov
add
rolb
mov
sub
xor
mov
fdivrs
add
mov
add
jmp
mov
dec
sbb
add
sar
jge
mov
cld
push
add
test
out
cmc
jle
cmpsl
stos
jle
popa
lock
xchg
and
add
push
inc
js
add
pop
add
mov
lock
daa
jns
scas
into
fwait
or
or
mov
jmp
mov
xor
jno
xor
mov
sti
xchg
xchg
add
ljmp
inc
xor
mov
pop
push
outsb
pop
jo
mov
out
mov
push
add
sbb
mov
ret
int3
mov
sub
ficoml
add
pop
push
mov
repnz
mov
icebp
push
add
cs
push
and
or
add
add
aam
out
mov
jno
add
inc
inc
add
add
add
sbb
int3
gs
mov
add
adcl
mov
add
sub
mov
xor
fucomp
rcrl
xchg
test
out
cmp
gs
mov
cmp
cmpsb
push
std
lcall
insb
out
popf
push
xchg
add
inc
inc
mov
jbe
imul
lods
fdivrp
and
mov
imul
ret
dec
aam
dec
jle
mov
imul
int3
pop
in
add
lods
cmc
pop
bound
mov
add
imul
nop
add
push
lods
stos
hlt
je
pop
mov
mov
test
dec
mov
jno
sarl
cltd
dec
pop
icebp
push
push
fcmovnu
pushf
clc
je
cld
mov
dec
test
dec
aam
stos
aaa
rolb
mov
pusha
add
push
sub
adc
mov
add
das
cwtl
stos
add
cmpsb
mov
and
mov
mov
push
subl
fnstenvs
out
jnp
push
add
pop
mov
add
daa
cs
fwait
scas
cmp
mov
dec
repnz
add
mov
mov
dec
test
add
sub
mov
jg
cmp
fidivs
and
addb
aam
xor
mov
stc
test
mov
hlt
mov
add
inc
mov
add
fistpl
in
outsb
dec
pop
dec
test
lcall
inc
or
scas
jmp
xchg
push
aad
add
pop
cmc
cmp
add
and
mov
movsl
or
test
test
je
add
and
scas
andl
add
add
mov
inc
adc
mov
addb
push
add
jle
pop
negl
add
mov
ficompl
cmp
mov
mov
mov
cs
add
movsl
nop
add
jg
movsb
ljmp
mov
inc
mov
in
add
jmp
test
icebp
lret
cmpsl
test
insl
js
aas
pop
clc
cmp
mov
and
mov
pop
loope
add
fcmovnu
mov
aas
xchg
dec
pop
outsb
sub
lods
daa
std
repnz
and
mov
pop
pop
pusha
add
or
push
lods
jecxz
hlt
inc
loopne
mov
popa
scas
into
rolb
mov
std
cld
dec
xchg
inc
add
mov
cmc
dec
mov
lahf
jmp
add
mov
leave
arpl
dec
hlt
int3
fsubp
subl
aaa
out
pop
ja
add
fldenv
nop
add
fisubrs
cmp
xor
int
gs
insb
pop
add
mov
leave
outsl
rolb
mov
inc
dec
leave
stos
and
outsb
js
sbb
out
call
add
mov
mov
add
jae
lods
fldl
out
adc
sub
outsl
mov
mov
outsl
cmp
mov
rolb
mov
xchg
adc
imul
add
jp
push
iret
pop
push
jmp
push
add
stos
aas
mov
movsb
int
lret
xchg
add
inc
lods
mov
jns
scas
rolb
mov
pop
out
sub
stc
mov
mov
mov
add
xor
sbb
add
js
and
mov
mov
mov
mov
popf
and
push
nop
add
sub
das
enter
cld
rolb
mov
mov
mov
fbld
add
and
push
mov
jo
mov
lahf
or
mov
add
mov
and
aaa
mov
mov
push
add
mov
idivl
push
add
into
jg
lret
std
pop
push
in
fisttpl
pop
aam
lods
mov
out
sbb
push
add
imul
jecxz
out
imul
jge
lods
push
inc
es
mov
dec
ficompl
rcrl
sub
into
xchg
test
fistpl
fdivrs
ja
push
add
add
data16
lods
add
ret
stos
pusha
add
pop
jae
push
push
add
popa
add
mov
test
negl
decl
mov
add
add
add
in
inc
jmp
addb
lret
movsl
aam
setbe
addb
and
rolb
mov
cmp
movsl
mov
add
sub
or
test
adc
sub
add
mov
pushl
fidivs
or
fisttps
add
or
movsl
cld
xchg
sub
mov
mov
pusha
add
fdivrl
test
jno
pop
outsl
fimull
dec
fld
dec
rcl
jl
js
add
add
xchg
jge
fcom
and
mov
fs
cltd
xchg
lods
sti
dec
mov
lea
mov
and
add
mov
add
clc
mov
addr16
dec
push
sti
mov
push
fxch
rorl
lods
addb
xchg
cmp
sbb
movsl
mov
sub
es
push
hlt
rolb
mov
adc
xor
mov
xchg
add
sbb
add
insl
xor
mov
sbb
inc
cmp
dec
xchg
sub
scas
hlt
loope
iret
mov
mov
mov
add
mov
add
pop
inc
jmp
or
fdivs
por
add
cs
mov
das
push
or
ret
pop
mov
pop
push
jno
xorl
sub
add
mov
add
cmp
test
or
mov
mov
add
int
sub
lods
add
dec
add
inc
movsb
jecxz
adc
add
mov
addr16
or
in
mov
xor
jg,pn
jg
or
add
aam
enter
rolb
mov
mov
and
mov
add
inc
jmp
fistpll
insb
lcall
xor
loop
mov
add
sti
movsl
pop
addb
push
sti
repz
mov
jmp
add
mov
call
or
mov
push
dec
add
sbb
iret
ds
mov
add
outsl
addb
push
pop
adc
mov
push
fstpt
add
pop
cmc
rolb
test
imul
adc
xchg
add
sahf
push
and
in
add
ds
or
add
add
mov
pop
mov
push
xor
roll
jmp
gs
rcll
gs
mov
pop
push
cmpsb
mov
leave
fiadds
xchg
int3
sub
add
mov
cmp
fmul
pop
fucompp
out
aam
in
insb
xchg
bound
mov
cmp
fldenv
leave
cwtl
push
pushf
push
addb
dec
adc
mov
popf
jb
mov
add
jmp
pop
stos
in
push
add
add
sbb
sub
out
filds
mov
mov
repz
mov
rolb
mov
mov
add
mov
mov
inc
lods
loop
mov
sub
xchg
xlat
sahf
push
icebp
popl
and
cmp
add
ja
xchg
out
aaa
int
jno
leave
lods
xor
cmp
mov
lret
mov
sub
xchg
pusha
add
add
in
movsl
cmp
sbb
pop
hlt
outsl
and
cmp
and
pop
pop
aas
push
add
scas
push
and
mov
data16
mov
aad
push
or
enter
test
mov
and
mov
cmp
jge
adc
add
ja
add
cmp
repnz
lock
mov
addb
adc
add
aam
ficompl
imul
loop
mov
add
addb
imul
aaa
inc
add
leave
push
test
inc
add
dec
iret
sub
sub
lahf
addb
arpl
mov
pop
jb
mov
aaa
outsb
cmpsb
mov
fisubs
mov
subl
mov
pop
pop
fwait
lcall
addb
icebp
jecxz
add
or
jg
add
je
cmp
mov
add
mov
test
inc
add
pop
jae
and
mov
mov
cmp
mov
add
add
mov
mov
jno
ficoml
enter
orl
rolb
add
repz
xor
sarl
jmp
add
mov
adcl
mov
sbb
sub
aas
enter
push
mov
mov
add
adc
imul
sub
xchg
add
add
dec
inc
jmp
pop
cmp
add
inc
pop
pushf
test
xor
mov
pusha
add
out
test
pusha
add
std
adc
sub
into
iret
test
cmc
sbb
push
mov
xor
mov
insl
cmp
sub
add
xchg
mov
loop
mov
mov
xchg
pop
addb
cmp
out
add
add
add
mov
mul
sbb
xchg
out
icebp
sbb
inc
lock
orl
cs
xchg
mov
lret
repnz
mov
mov
push
push
addb
ffreep
in
bound
mov
push
dec
imul
mov
add
or
cmpsb
leave
mov
xor
popl
sub
fistps
dec
loope
cmovno
sahf
dec
iret
cwtl
movsb
enter
and
mov
mov
es
add
mov
mov
mov
fists
insb
stos
cmc
cld
add
mov
sub
jg
or
arpl
fdivs
xlat
xlat
gs
fidivrs
sbb
mov
mov
enter
cltd
dec
adc
pop
inc
mov
jp
add
lea
js
mov
mov
mov
xchg
mov
bound
mov
icebp
or
add
push
add
pop
imul
jbe
push
addb
mov
jg
mov
sub
sti
cltd
mov
fucomp
sub
lret
in
scas
dec
and
dec
add
mov
inc
stc
adc
push
les
mov
mov
mov
xor
mov
scas
lock
jp
xor
inc
pop
jge
mov
popa
mov
testb
mov
jmp
loope
popa
addb
addb
add
ds
add
adc
lcall
mov
inc
xchg
pop
ret
xchg
mov
mov
mov
aad
xchg
ret
fstpt
mov
mov
test
lods
push
mov
ds
pop
test
ret
pop
mov
mov
dec
movsl
xchg
dec
add
or
pop
add
mov
call
or
mov
add
inc
fwait
dec
getsec
fstp
cmp
sub
add
add
ss
jecxz
aas
xlat
rolb
ret
es
movb
mov
push
mov
mov
int3
js
push
add
jb
mov
jbe
xor
mov
les
ja
cs
add
add
scas
xchg
add
pop
inc
xlat
std
nop
add
mov
mov
or
outsb
call
ret
das
insb
cmp
icebp
xchg
or
add
gs
cmp
sbb
cmp
out
mov
mov
add
add
sub
divb
int
add
xchg
mov
mov
xchg
popa
clc
rolb
mov
stos
idiv
call
or
or
rolb
mov
int
fcom
lods
test
add
sti
fdivr
pushf
aas
div
and
mov
cmp
aam
popa
ja
lock
mov
push
addb
call
cmp
insl
stc
push
mov
mov
add
dec
cmpsl
test
lods
cmp
add
push
add
mov
ljmp
add
rolb
mov
jp
out
dec
push
lret
push
add
add
mov
mov
mov
push
push
sbb
xchg
add
cmp
xchg
mov
fnstsw
add
mov
xor
inc
aad
and
add
mov
ljmp
mov
fbstp
lock
leave
rolb
mov
pop
adc
into
add
mov
imul
mov
mov
add
addb
mov
mov
xchg
pop
xchg
add
push
addb
push
add
sub
aad
add
and
scas
sbb
lret
stos
add
mov
sarl
jge
rcrl
movsl
idivl
xchg
aad
sub
dec
popl
cmp
or
push
adc
div
jle
xchg
mov
ljmp
jo
mov
pop
ja
repnz
fcomps
add
in
push
ss
add
lret
loopne
mov
inc
add
mov
adc
mov
int3
es
jb
mov
add
fstl
add
les
inc
pop
insl
adc
inc
add
std
out
int3
fldt
lods
pusha
add
or
add
lahf
dec
mov
add
pop
rolb
mov
mov
mov
sbb
mov
sbb
in
ss
add
adc
mov
xor
add
imul
rolb
mov
mov
mov
lods
mov
mov
stos
stc
or
lods
push
add
adc
xlat
add
mov
sub
sub
rolb
movsb
aaa
lock
add
add
fiadds
add
push
lds
testl
mov
push
lods
rol
push
inc
add
adc
mov
lret
rcrl
or
xor
addps
hlt
pop
jge
adc
mov
mov
fcoms
push
popf
enter
jae
jmp
inc
add
fwait
sub
jmp
jecxz
ljmp
test
out
les
dec
fsubrl
mov
and
sti
inc
inc
addb
sbb
repnz
push
cwtl
dec
lret
cmp
xchg
cmc
or
lods
sbb
cli
cmp
add
add
pop
dec
jbe
call
popf
into
mov
xor
add
add
lcall
ret
pop
push
decb
ror
es
test
addb
cmp
clc
add
mov
push
ja
insl
push
inc
push
mov
mov
pop
ret
xchg
cmpsl
push
mov
cld
push
insb
xor
lret
sbb
das
dec
lods
and
mov
pusha
add
pop
cli
adc
add
mov
add
mov
scas
jg
sub
mov
sbb
add
jb
mov
add
aaa
push
pushf
notl
mov
out
add
pop
mov
leave
pusha
add
std
push
les
pop
dec
rolb
mov
addb
lods
and
mov
jge
add
mov
mov
pop
out
push
fimull
sbb
add
lods
movsb
cld
std
scas
mov
mov
mov
ficoml
add
aad
es
subl
sbb
sbb
div
test
test
add
add
insl
dec
add
cmp
jg
xor
add
jnp
int3
adc
mov
add
aas
scas
movsb
sbb
add
out
push
pop
xchg
test
ret
fmull
add
cmpsl
lods
pop
cmp
mov
adc
mov
adc
pop
cmp
aaa
and
add
add
out
adc
mov
iret
sub
je
faddp
add
add
mov
cmpsb
mov
add
out
push
mov
les
mov
push
jp
xchg
fiaddl
add
ret
loope
add
mov
pop
into
in
xlat
insb
cwtl
or
mov
rorl
mov
jmp
add
mov
cmp
add
mov
add
adc
add
mov
add
cmc
loopne
mov
add
out
iret
xor
mov
mov
leave
xchg
addb
adc
inc
jbe
enter
sub
mov
add
std
adc
pop
sbb
adc
aam
mov
add
or
fistl
push
cmp
ret
addr16
ja
imul
mov
add
add
add
pop
insl
pop
test
add
ret
inc
fdivrs
les
movsl
sbb
lcall
jge
push
ja
ljmp
mov
push
pop
pop
ds
ret
imul
cli
outsl
sahf
push
hlt
icebp
vaddsubpd
mov
stos
jae
adc
mov
mov
push
inc
out
cltd
xor
stos
loope
inc
rorl
test
pop
jmp
jl
lcall
add
faddl
jne
add
lret
pop
cmc
dec
aad
rol
jge
ror
xchg
rolb
pop
scas
pop
pop
and
mov
inc
int
into
rolb
mov
fs
sub
dec
outsb
add
addb
mov
xor
mov
dec
into
aaa
rolb
mov
xchg
inc
scas
fcoml
mov
cmpsb
jnp
int
mov
shrl
mov
inc
add
add
int3
scas
gs
lcall
jne
sub
adc
pop
das
daa
outsl
dec
mov
add
insl
or
imul
mov
outsl
in
fnsave
loopne
mov
outsl
mov
jae
add
xchg
outsb
xchg
call
popa
sti
test
shrl
gs
pop
pop
or
movsl
sti
adc
add
scas
cli
call
add
mov
push
stos
push
add
or
mov
cmc
cmp
pop
pop
pop
shll
mov
jl
or
add
xchg
add
je
mov
mov
add
lods
fidivrl
mov
add
jns
clc
repz
mov
lea
add
mov
or
jb
mov
test
add
test
jae
aas
xor
mov
ja
sub
mov
insl
cmpsl
div
cmc
sub
int3
jns
gs
and
xchg
pop
xchg
sub
cwtl
pop
stos
cmp
pop
jecxz
adc
mov
imul
sub
mov
mov
rolb
mov
mov
xor
xchg
xchg
xor
dec
sbb
add
pop
xor
mov
add
mov
or
movb
sbb
add
jge
into
xlat
mov
pop
je
add
mov
add
mov
rolb
mov
add
mov
rolb
mov
cwtl
cmp
mov
push
int3
mov
addb
test
fdiv
add
gs
into
repnz
xor
mov
and
fisubl
add
push
into
int
add
scas
aaa
dec
inc
add
sbb
sub
ljmp
ret
xor
rep
fsts
mov
xor
bound
mov
cmp
dec
pop
addr16
test
push
xchg
cmp
rolb
mov
inc
jmp
dec
fsubs
mov
je
sub
xor
mov
sbb
add
fidivs
lahf
jmp
fmull
add
mov
in
push
clc
std
or
rolb
adc
add
dec
xor
mov
data16
mov
popa
stc
sti
mov
dec
gs
pusha
add
add
mov
pop
addb
cwtl
je
dec
xor
add
outsb
ds
fdivr
into
adc
or
mov
inc
add
or
mov
test
mov
aad
inc
add
mov
fs
adc
push
add
lret
add
mov
addb
mov
sub
jns
push
add
popl
cmp
movsb
jno
pop
mov
add
addr16
push
fdiv
faddp
add
mov
add
and
lds
push
or
inc
pop
mov
mov
add
or
jns
mov
xchg
mulb
fdivrl
inc
lahf
adc
add
jne
fs
sub
sub
mov
push
or
stos
out
mov
rolb
mov
cmp
repnz
add
fsubrs
pop
sbb
jp
adc
ret
jne
inc
add
push
fadds
mov
xor
push
xor
adc
mov
add
popa
jmp
icebp
ljmp
aam
xchg
sbb
addb
lret
push
sbb
fcmovu
pop
mov
mov
or
iret
in
pusha
add
mov
fsub
or
xor
mov
add
rolb
mov
cmp
test
adc
mov
pop
xor
enter
out
cmpsb
cmc
sub
add
dec
cmp
mov
lret
nop
add
push
rolb
add
mov
add
add
hlt
push
add
jnp
lcall
mov
and
mov
leave
dec
gs
mov
outsb
jno
add
cmc
stos
arpl
push
shrl
mov
popa
dec
mov
add
loop
mov
dec
jb
mov
dec
out
fsubrl
xchg
js
jo
mov
jbe
add
repz
push
popa
insl
cmp
xabort
mov
test
push
repnz
push
jne
rolb
mov
cmc
add
mov
sbb
das
add
push
je
add
mov
mov
aam
ret
mov
imul
xchg
jne
nop
add
add
lret
pop
and
mov
xchg
aad
adc
add
popf
dec
dec
in
incl
push
test
ljmp
inc
lahf
or
jb
mov
cmc
xor
mov
mov
gs
ret
lea
andl
orl
mov
sbb
out
divb
mov
test
inc
sbb
mov
jns
imul
pushf
xchg
inc
adc
and
jb
mov
test
xchg
inc
notb
xchg
xor
add
sub
mov
dec
pop
je
add
dec
add
mov
adc
out
icebp
stc
pop
xor
rcrl
xchg
cmp
jg
push
add
add
or
push
stc
ja
test
mov
sub
out
mov
mov
add
out
jbe
sub
push
or
mov
out
add
add
fs
jns
xor
insl
aaa
fstpl
and
mov
lret
imul
or
jo
mov
add
add
stc
and
mov
mov
xchg
add
call
les
sbb
data16
inc
and
repz
movsb
inc
add
mov
nop
add
inc
cmp
cmpsb
mov
add
add
rcll
aaa
mov
scas
fdivrs
cmp
imul
daa
les
and
mov
xchg
add
xlat
fstp
jecxz
xor
dec
jns
pusha
add
addb
pop
mov
lods
imul
dec
lock
mov
xchg
in
out
cmpsb
inc
or
ljmp
xchg
add
mov
insl
cmpsl
popf
mov
dec
lods
lods
xor
imul
lret
std
movntps
stc
lret
mov
jnp
movsb
mov
pop
or
dec
xor
mov
mov
cwtl
setae
inc
adc
cs
stc
call
movl
adc
mov
out
dec
loopne
mov
mov
mov
ss
pop
pop
cltd
add
mov
xor
mov
cmc
insb
xchg
aad
add
mov
jg,pn
icebp
mov
out
jecxz
sub
push
adc
mov
and
mov
add
int
xchg
and
mov
fcomps
in
add
mov
sahf
pop
mov
mov
test
outsl
sbb
xchg
jp
mov
jns
add
mov
add
mov
mov
sub
in
pushl
adc
repz
adcl
mov
push
jbe
enter
add
mov
rolb
mov
sub
mov
mov
push
testl
sub
xchg
jge
fcmovnbe
or
loope
mov
mov
lcall
push
adc
mov
xchg
add
inc
push
iret
inc
mov
pushf
or
daa
mov
addb
sarl
fwait
dec
push
js
imul
lcall
mov
push
aaa
ficomps
inc
xor
sub
sbb
mov
mov
test
testb
add
sbb
push
pop
mov
add
and
add
daa
cmp
clc
rolb
mov
ja
hlt
mov
push
sub
add
add
pop
mov
mov
mov
mov
fistpll
test
lret
das
mov
rolb
mov
jns
mov
mov
mov
cmp
mov
inc
add
mov
mov
mov
mov
inc
add
mov
add
pop
push
sbb
cmp
mov
mov
cmp
add
add
jp
add
cmp
repnz
sbb
mov
mov
or
xor
mov
aaa
inc
inc
mov
mov
leave
notl
add
les
out
pop
movsl
push
outsl
jl
or
les
jo
mov
xor
add
cmpsl
sub
xor
adc
ss
pop
rolb
mov
mov
lea
nop
add
lds
fmuls
pcmpeqb
lret
rolb
mov
or
cmp
xor
add
add
sub
fimull
pop
jo
mov
xchg
sbb
add
add
rcll
inc
add
into
icebp
xor
addb
cmp
cmp
add
mov
in
xor
mov
jno
fwait
inc
cmc
mov
jmp
inc
insl
inc
mov
mov
lret
outsb
sbb
mov
les
and
std
imul
add
cwtl
dec
lcall
sahf
push
in
pop
aam
xor
mov
test
mov
je
into
pop
sahf
in
mov
add
add
mov
in
xchg
sbb
rolb
xchg
jns
push
sbb
push
or
sbb
rorl
mov
add
pushf
aas
popa
inc
pop
frstor
push
add
add
mov
xchg
or
inc
pop
test
dec
in
in
cltd
nop
add
ss
add
pop
sbb
add
mov
jne
imul
mov
add
mov
add
mov
xorl
xchg
fdivr
movsl
sbb
add
cmp
mov
and
mov
repnz
jg
add
loop
mov
jge
pusha
add
and
mov
push
loope
mov
jae
and
cmp
add
mov
cmp
mov
mov
orl
add
add
jno
addl
mov
in
loope
pushf
mov
sbb
pop
push
add
jne
fwait
int3
pop
stos
arpl
fwait
add
push
fcoms
jnp
orl
sti
in
test
xlat
pushf
mov
add
mov
test
xor
mov
adc
xlat
and
mov
add
xchg
sub
test
fidivs
out
rolb
mov
push
fdivl
add
mov
mov
fdivs
cli
lods
imul
call
adc
add
mov
push
push
dec
push
push
loopne
mov
enter
fwait
sbb
add
addr16
mov
mov
mov
cmp
xchg
add
call
xor
add
mov
mov
add
mov
jbe
add
aad
ljmp
mov
add
xchg
sub
cs
in
std
outsb
lods
or
aad
mov
gs
jmp
mov
pop
outsb
dec
js
push
mulb
mov
fsubrs
cmp
dec
mov
mov
xchg
pushf
rorl
xor
mov
out
and
mov
add
push
cmp
imul
mov
fcomip
add
jnp,pn
mov
mov
add
insb
insl
pushl
aas
mov
scas
outsl
popa
fistl
pop
arpl
add
aaa
cmp
loope
daa
jmp
movb
sub
fmull
add
into
sub
push
xor
mov
jg
lcall
sbb
lahf
pop
mov
jmp
mov
mov
add
mov
loope
mov
sub
mov
xchg
addb
mov
pop
push
and
outsl
inc
das
add
jne
dec
dec
and
mov
mov
mov
je
add
fnclex
add
xchg
adc
adc
mov
add
pop
lods
inc
add
cmp
xor
mov
into
pop
push
jnp
pop
pop
lret
add
mov
mov
adc
lret
outsl
dec
in
pop
inc
notl
push
pop
cmp
inc
adc
add
cmp
out
add
or
movsb
out
inc
add
adc
dec
loope
add
aam
or
mov
fdivl
test
inc
cmc
out
sbb
in
add
mov
add
xor
add
cmc
mov
cmp
ret
add
inc
add
jns
adc
mov
mov
mov
add
add
outsb
je
mov
fldenv
mov
punpckhwd
psraw
lock
inc
add
add
pop
divb
add
in
lock
mov
decl
mov
add
insl
xor
push
xor
mov
add
les
push
add
add
jmp
rolb
sbb
mov
mov
cmp
dec
int
push
add
loop
mov
pop
push
rolb
mov
mov
mov
cld
sbb
call
xchg
inc
inc
inc
xchg
pop
rolb
mov
push
cmp
add
lods
jnp
add
add
pop
sub
ss
movsl
mov
cmp
mov
mov
jb
mov
outsl
pop
mov
xor
mov
adc
mov
pop
arpl
dec
inc
pop
int3
movsl
pop
fcmovnbe
das
icebp
outsb
clc
push
rolb
mov
add
mov
mov
sbb
pop
sbb
sub
cwtl
cwtl
negb
pop
xchg
push
cwtl
sbb
mov
mov
mov
pop
stos
mov
insb
cmpsl
loope
or
addb
lea
push
push
hlt
adc
mov
loop
mov
dec
sub
dec
and
add
repz
fisttpl
incl
mov
out
lock
add
jbe
add
push
int
mov
dec
dec
xchg
cmp
hlt
jns
sarl
mov
in
pop
dec
sbb
push
add
rolb
mov
add
add
xchg
pop
sbb
stos
pop
mov
mov
mov
aas
or
adc
ret
cwtl
pop
mov
mov
insl
test
or
mov
clc
pop
mov
inc
int
int
mov
push
and
cmp
ja
push
add
add
jg
addb
add
mov
lahf
aaa
int3
xchg
adc
mov
faddl
mov
mov
movsl
sub
ja
push
mov
in
adc
mov
addb
addb
lcall
cmp
iret
jg
and
sbb
js
cmp
jne
data16
out
mov
add
stc
jns
cmp
scas
fbstp
jge
rolb
icebp
lret
adc
cmc
pusha
add
aad
stc
sbb
in
lods
or
add
stos
in
push
add
pop
negl
loopne
mov
dec
icebp
outsb
lret
mov
das
in
lea
and
add
mov
xor
mov
loop
mov
mov
les
mov
mov
int3
hlt
and
mov
sbb
outsb
xchg
mov
fiaddl
daa
ret
jecxz
pop
test
cld
push
addb
insl
addb
or
inc
pop
mov
or
jl
fcomp
jecxz
add
xor
mov
and
or
out
dec
cmpsb
clc
push
test
xor
mov
paddw
mov
or
xor
sar
hlt
jle
call
pushf
fmulp
inc
sub
cli
enter
lret
mov
sbb
ret
out
lret
dec
in
or
mov
mov
ss
loop
mov
mov
add
pop
test
iret
mov
pop
adc
mov
push
mov
mov
add
jle
xorl
mov
repz
mov
and
mov
sbb
mov
cmp
jecxz
idivb
imul
add
mov
mov
add
mov
or
xor
sti
xchg
mov
xchg
test
loope
sbb
or
add
mov
imul
cli
jmp
mov
ret
push
sub
sub
test
insb
mov
add
std
cwtl
icebp
pop
std
mov
lds
mov
std
lods
mov
lahf
and
mov
mov
mov
lcall
push
add
pushf
iret
hlt
push
add
and
mov
out
das
aas
jb
mov
add
mov
sbb
or
add
add
jg
adc
mov
ss
mov
xor
mov
push
movsl
rolb
mov
sub
sub
add
popa
mov
push
add
lret
mov
mov
mov
outsb
jo
mov
adc
out
dec
insl
sbb
mov
cmpsl
add
lock
test
cmp
jbe
fdivrp
dec
mov
out
out
and
out
mov
stc
outsb
adc
rolb
mov
lods
xor
mov
mov
mov
je
xchg
fwait
inc
jo
mov
movb
inc
add
flds
add
add
inc
hlt
pop
jne
rorl
push
xchg
sub
and
mov
add
mov
sbb
mov
xor
inc
add
jg
popl
outsl
lahf
adcl
pusha
add
mov
mov
jg
fbstp
xor
cmp
mov
add
xchg
mov
sbb
stos
jge
push
jo
mov
lea
adc
incb
fwait
aam
add
add
sub
mov
push
test
add
sub
pop
or
push
pop
fwait
push
add
mov
or
mov
add
add
popf
dec
ffree
add
loop
mov
add
mov
ret
mov
sbb
mov
mov
mov
ds
xor
add
xchg
test
jae
jmp
jb
mov
sub
mov
pop
rorl
add
lea
jne
mov
icebp
hlt
jge
add
cmp
push
packsswb
mov
and
cmp
loop
mov
adc
mov
enter
addr16
add
adc
push
repz
pavgw
push
jle
lods
xlat
lods
sub
call
mov
jp
add
sbb
jmp
add
addb
mov
mov
inc
lea
and
adc
dec
push
mov
cmpsl
push
push
das
adc
mov
rolb
rolb
mov
rolb
fucomp
or
mov
jo
mov
mov
add
mov
add
add
add
mov
pop
fnsave
mov
add
xchg
lods
or
ret
mov
or
jmp
lds
loope
enter
in
mov
repnz
add
mov
sub
and
xor
jle
pop
and
sbb
add
rcrl
sub
inc
add
mov
mov
push
push
aad
aaa
dec
or
jge
movsl
dec
pop
adc
ss
test
or
mov
mov
sub
rolb
xchg
rcrl
cmp
pop
hlt
sub
decl
and
test
push
or
mov
inc
xchg
addl
inc
cli
jbe
es
hlt
loope
stos
addb
lds
mov
add
cmpsb
ret
rcll
or
lods
mov
movsb
repz
aaa
push
cmpsb
add
jle
popf
xor
mov
mov
in
mov
lods
in
loopne
mov
add
pop
rorl
add
ja
iret
out
cmp
enter
mov
mov
or
add
jbe
addr16
add
enter
jecxz
mov
dec
adc
test
popa
cmp
mov
insl
jmp
ljmp
push
dec
stos
push
cmp
add
xchg
out
push
icebp
test
add
repz
mov
gs
adc
loope
add
cltd
or
add
inc
xchg
sti
subl
mov
popf
adc
mov
mov
pop
jg
in
jb
mov
mov
pop
jbe
add
xor
mov
test
sti
pop
out
and
arpl
add
test
fists
fldt
loopne
mov
add
call
enter
sbb
add
mov
sti
mul
enter
adc
sbb
arpl
sub
fdiv
mov
dec
das
and
sub
add
xchg
add
rcl
xor
cmp
stc
xchg
outsb
fcmovne
jb
mov
aad
addb
xchg
xchg
pusha
add
add
cld
movsb
divl
add
inc
dec
in
in
cmpsb
cmp
jg
add
mov
pop
mov
push
movsl
push
rolb
mov
mov
jae
add
xor
mov
vpaddsw
push
dec
mov
xor
into
ret
mov
mov
leave
add
jmp
sub
cli
mov
mov
inc
stc
ja
stc
xchg
inc
add
add
mov
or
xchg
idiv
jle
jno
xchg
add
and
loope,pt
pop
inc
in
lret
mov
or
add
mov
dec
loope
int3
jmp
pop
pop
pop
xchg
test
mov
in
add
mov
mov
inc
in
dec
dec
ret
mov
cltd
gs
frstor
push
jns
add
enter
sahf
stos
xlat
in
xchg
push
add
xlat
pusha
add
dec
inc
add
xchg
mov
mov
mov
cmp
fsubrl
sub
xchg
rolb
cli
cs
aas
sub
or
add
xchg
cli
mov
mov
jae
repnz
add
das
push
in
inc
mov
mov
fldenv
incl
sub
mov
pop
mov
adc
dec
lret
mov
mov
mov
cltd
testb
sti
push
out
ja
add
adc
mov
mov
mov
test
test
push
rolb
test
gs
mov
push
and
jp
repnz
lock
adc
dec
cwtl
xchg
lret
dec
stos
imul
and
mov
scas
adc
rolb
pop
lret
and
mov
sbb
jecxz
mov
test
adc
add
mov
mov
push
xchg
aas
and
lock
jae
cmc
push
pop
mov
mov
stos
sub
dec
inc
pop
sub
insb
in
fsubrs
shrl
mov
sbbl
pop
aad
testb
hlt
mov
add
insl
pop
mov
xor
mov
loope
push
cli
sub
jp
jecxz
add
mov
add
cmp
or
pop
add
cmp
rolb
dec
ret
jo
mov
mov
movsl
add
mov
mov
add
jg
xchg
add
jb
mov
adc
mov
add
add
out
into
aam
ja
fiaddl
mov
sbb
jg
push
adc
jno
fistl
push
jbe
xor
xchg
cmp
add
jo
mov
and
mov
xor
int3
push
mov
inc
fnstcw
mov
fwait
int
add
adc
mov
lcall
fwait
sahf
adc
add
mov
ss
popf
int3
roll
and
mov
mov
xchg
lock
and
add
mov
add
add
enter
pop
das
sbb
pop
jp
sub
add
mov
sub
nop
add
bound
mov
mov
xchg
push
add
add
lea
ret
lock
sub
addl
test
jbe
add
add
mull
dec
mov
mov
mov
js
pop
insb
mov
leave
push
lods
ss
lea
xor
sti
pop
xchg
rorl
jae
bound
mov
or
add
rolb
push
inc
mov
sbb
add
aaa
cwtl
test
lea
cmp
ss
jecxz
push
push
stos
call
lret
sub
xchg
pop
inc
rcll
fsubs
and
mov
add
cmp
mov
jae
cs
pop
lods
jo
mov
sbb
xchg
pop
jnp
popf
jo
mov
jle
leave
xor
mov
and
mov
add
dec
cmp
or
add
add
xchg
pop
mov
add
xchg
popa
push
stos
jnp
stc
inc
add
movsl
mov
cmp
int3
lret
cmp
add
pop
jg
arpl
or
xchg
push
rolb
mov
mov
add
mov
or
jecxz
dec
add
mov
jno
add
dec
fbld
push
cs
daa
scas
xlat
jp
scas
mov
mov
pusha
add
cmpsb
ljmp
sti
inc
add
or
add
add
add
push
test
bound
mov
sbb
call
add
adc
mov
push
push
out
pop
adcl
inc
and
mov
adc
add
hlt
xor
in
mov
xor
mov
insl
lea
add
add
test
jbe
pop
pop
stos
cmp
add
mov
cmp
add
mov
cmp
int3
push
sbb
jle
push
sti
imul
pusha
add
or
cmpsl
addb
pop
movsb
push
sbb
cs
into
test
ret
push
addb
sbb
mov
jb
mov
add
add
cmpsb
test
sub
add
and
loope
lock
fsin
add
add
add
add
push
dec
insl
pop
dec
dec
int
repnz
mov
jbe
and
mov
mov
add
divb
add
jmp
dec
addr16
pop
jmp
cld
inc
add
mov
jmp
aas
adc
mov
stos
aaa
xor
js
add
orl
dec
test
jnp
cmp
add
mov
push
fadd
add
and
mov
idiv
out
data16
xor
mov
push
add
mov
out
sbb
add
sahf
rcl
add
xor
ret
addb
add
in
cmp
add
stc
sbb
lahf
jp
add
dec
lods
hlt
sbb
jb
mov
popf
jp
inc
test
fidivl
add
scas
or
push
and
mov
or
add
mov
sti
add
mov
test
jno
add
jno
daa
sub
aad
pushf
decl
ljmp
mov
add
mov
cwtl
sbb
mov
xchg
test
dec
out
cmp
mov
jbe
fists
sub
pop
jmp
dec
cmp
mov
scas
fs
adc
add
mov
sarl
mov
add
jnp
mov
jbe
pushf
fadds
and
mov
add
ja
add
add
cmpsl
in
sub
jmp
xchg
add
jns
inc
jno
add
insl
mov
fdivs
and
mov
cmpsl
and
mov
adc
les
mov
mov
add
dec
gs
xchg
in
mov
dec
rolb
mov
pop
push
add
sbb
lock
pop
stc
push
and
mov
fs
add
mov
jae
lcall
add
pop
jne
movsl
xchg
mov
repz
scas
dec
out
ret
sub
cmp
cmp
add
cmp
mov
pop
inc
fsubs
add
mov
push
mov
imul
mov
jle
fwait
into
and
push
clc
mov
mov
mov
add
add
add
add
add
xchg
leave
mov
aad
inc
mov
stos
fsubrs
rolb
lea
xorl
aaa
push
hlt
mov
mov
push
es
fwait
or
out
das
in
sub
add
xor
add
mov
out
add
jle
mov
aad
ret
hlt
mov
add
adc
scas
push
add
jno
es
and
stc
dec
popa
or
rolb
mov
ss
in
enter
mov
add
xor
mov
jo
mov
dec
int
xlat
push
call
lods
repz
sub
jle
sbb
mov
cli
ror
add
addb
jmp
movsl
pop
adc
cld
mov
mov
out
add
push
lahf
jns
add
xchg
push
mov
and
mov
add
mov
add
rolb
mov
mov
xchg
add
mov
inc
add
xor
mov
add
adc
push
aaa
cmc
xor
push
sub
mov
mov
int3
or
mov
xlat
sarl
xor
mov
push
test
hlt
mov
cmc
mov
xchg
sti
mov
je
xchg
jl
js
mov
mov
mov
mov
xor
movb
mov
mov
mov
lcall
enter
jp
movsl
adc
out
add
shll
add
dec
lret
stc
add
cmpsl
addb
mov
and
insl
repnz
lret
push
xchg
cs
sub
or
fcomps
add
flds
sbb
add
ja
addr16
sbb
add
mov
push
jb
mov
mov
stc
xchg
popf
jb
mov
or
cmp
push
pop
data16
jnp
lret
adc
mov
scas
xchg
xor
cmp
pop
mov
in
add
ja
and
xor
xchg
in
leave
sub
arpl
add
jmp
and
mov
fidivrs
cs
and
es
push
pop
xchg
mov
mov
ja
in
lcall
cmpsl
pop
or
add
mov
testl
inc
sti
or
sbb
add
mov
fisubl
add
stc
pop
jnp
add
mov
mov
leave
fdiv
cmp
add
mov
or
cmp
ret
push
add
imul
divb
add
mov
sub
addr16
lret
data16
loope
outsb
aas
aam
xchg
push
add
lahf
mov
ljmp
cmp
decb
adc
lock
fbstp
out
dec
sub
mov
xor
dec
popa
scas
add
lea
xchg
aas
cmp
add
pusha
add
pushf
add
pop
or
mov
jae
icebp
cmp
sbb
repnz
add
mov
jne
push
add
add
mov
xchg
out
adc
add
sahf
mov
and
xlat
pushf
loope
hlt
pop
movsb
sbb
xor
mov
ret
or
mov
addb
test
jmp
sbb
add
pop
dec
imul
inc
rolb
xchg
add
addl
ret
xor
rolb
mov
add
push
mov
adc
mov
lret
sbb
or
pushf
js
and
andl
mov
fistps
push
xor
out
xchg
add
xor
push
add
mov
xor
mov
or
hlt
lahf
mov
add
xor
mov
add
js
shll
jb
mov
stos
and
mov
adc
fadds
decb
push
or
sbbl
or
ljmp
pop
ds
jns
sarl
sub
mov
aam
pusha
add
outsl
mov
cmc
sub
add
enter
stc
pop
mov
add
sub
pop
cmp
jle
cwtl
xor
add
movb
sbb
push
add
mov
mov
je
rolb
sahf
addb
mov
add
jae
outsb
fdivrs
add
pop
imul
adc
mov
in
lcall
imul
add
mov
xlat
leave
mov
mov
fstpt
pop
imul
stos
or
pop
cmp
fimuls
sbb
push
gs
sub
out
sbb
movsb
mov
sti
mov
dec
mov
and
mov
add
cmpsl
scas
mov
sub
lods
jb
mov
push
sbb
divb
pop
div
mov
out
adc
mov
mov
add
pop
push
or
mov
bound
mov
sub
lds
jl
add
inc
add
mov
in
test
jnp
or
hlt
sbb
das
ret
push
xor
add
xchg
bound
mov
xchg
push
hlt
pop
lret
cmp
xchg
in
xchg
mov
repnz
sbb
pop
push
add
mov
add
pop
push
mov
add
and
mov
mov
and
inc
jnp
add
sub
mov
out
inc
out
xchg
xor
data16
aas
or
adc
add
fdivs
call
add
add
xchg
add
rorl
rolb
mov
stos
adc
push
fwait
jmp
dec
sbb
and
xchg
imul
jb
mov
add
pop
fisubrs
dec
or
xchg
add
daa
mov
popa
clc
mov
faddp
adc
push
add
add
mov
sub
add
mov
cmp
push
stos
push
icebp
cld
out
in
loope
movsl
add
mov
iret
clc
pop
call
mov
in
inc
rolb
mov
frndint
rolb
push
nop
add
out
mov
mov
add
add
repnz
and
mov
mov
es
xor
xchg
in
pop
push
rolb
mov
les
dec
push
addr16
xor
inc
add
pop
mov
fimuls
sub
inc
iret
lret
dec
repnz
pop
fwait
push
push
movsb
adc
push
add
or
jg
inc
es
jg
add
rolb
mov
aad
lret
aam
mov
inc
add
add
jb
mov
lcall
add
add
xchg
out
ja
popf
ret
jne
orl
mov
push
fcompl
ljmp
dec
pop
test
jl
mov
jae
push
cmc
cmp
cmp
cmp
xor
call
add
test
mov
jecxz
lcall
add
mov
and
mov
js
add
add
and
mov
rolb
mov
inc
fsts
adc
mov
add
mov
in
in
add
add
loopne
mov
dec
or
outsb
jbe
dec
fucomp
enter
sub
sbb
add
mov
je
mov
add
mov
push
add
cmp
add
add
inc
sahf
fsubrl
out
jl
dec
push
add
mov
inc
and
mov
add
fdivrl
adcl
or
add
int
popl
push
add
xor
adc
cs
mov
jo
mov
inc
cmp
lods
scas
pop
sbb
add
ja
fistps
popa
sbb
lahf
add
push
ret
add
mov
popf
cmpsb
jg
jl
mov
pop
int3
inc
cmp
jno
addb
arpl
mov
push
add
and
and
adc
mov
repz
enter
add
repnz
add
and
push
inc
in
std
mov
mov
sbb
out
scas
pusha
add
rolb
ret
shrl
jbe
push
xor
mov
sbb
mov
clc
gs
cmp
mov
mov
add
cmc
push
mov
lods
sbb
adc
rolb
mov
insb
test
add
add
mov
out
sbb
decb
lret
dec
sub
mov
cli
fs
arpl
pop
rolb
mov
pop
imul
mov
sbb
pusha
add
sbb
ret
pushf
mov
dec
dec
sbb
movsl
add
mov
add
inc
xor
mov
mov
loop
mov
in
fwait
fwait
sbb
pop
rolb
mov
xor
xchg
insb
jo
mov
sbb
jb
mov
mov
mov
ss
fwait
mov
mov
pop
fmulp
dec
in
mov
lods
out
xchg
pop
and
cmp
jmp
pop
out
jnp
inc
or
add
lods
push
xor
mov
add
sbb
fs
fsubp
add
inc
add
mov
and
add
push
pop
lret
mov
scas
lcall
mov
mov
mov
inc
jp
mov
add
xlat
out
cmp
adc
xor
adc
aas
insl
xor
add
cmp
cmp
cmp
add
add
popa
xchg
push
push
stos
in
fs
adc
mov
add
sub
cmp
jnp
icebp
sub
or
adc
ss
fcoml
add
push
stos
adc
dec
jg
push
add
xlat
push
mov
outsb
daa
mov
or
mov
mov
daa
sub
add
mov
movsl
mov
lret
add
mov
adc
insl
add
add
add
add
mov
or
add
mov
add
xor
add
add
xchg
stos
adc
mov
push
out
inc
push
movsl
xor
test
jbe
mov
cmp
mov
dec
call
addr16
jne
push
ret
rolb
mov
cmp
push
add
pusha
add
leave
adc
mov
add
jb
mov
out
in
ds
fildl
add
mov
add
stos
xchg
mov
mov
mov
mov
lcall
adc
mov
add
add
test
lcall
ss
imul
push
mov
push
rcrl
jle
xchg
imul
add
mov
mov
lods
insl
mov
xlat
xlat
or
in
sub
fwait
mov
dec
fnsave
add
add
lods
inc
fpatan
xchg
add
loope
popf
xchg
jb
mov
out
pop
jb
mov
or
sbb
je
or
outsb
loop
mov
push
or
add
inc
and
mov
jmp
iret
int3
adc
add
stos
inc
addr16
mov
add
cwtl
cmpsb
sub
add
xor
mov
xchg
dec
test
sbb
addb
bound
mov
add
mov
sahf
rcrl
iret
addb
sbb
mov
movsl
cwtl
push
add
mov
add
into
or
add
jge
and
mov
mov
jp
arpl
push
add
inc
add
xchg
test
dec
add
mov
xchg
or
add
mov
in
mov
add
sub
dec
inc
xor
dec
pop
mov
add
cmpl
mov
add
insb
shl
ret
add
mov
repz
xor
mov
mov
or
outsl
xchg
add
andl
cwtl
inc
xlat
xor
mov
imul
and
mov
dec
cmp
add
push
sbb
xchg
out
or
test
mov
mov
mov
jns
sub
dec
hlt
pop
ljmp
sbb
imul
stos
call
test
in
fistpll
push
jae
mov
push
add
sti
clc
pop
and
mov
jbe
add
daa
testb
mov
mov
cltd
pushf
bound
mov
add
xlat
repnz
add
fwait
inc
jnp
cltd
inc
add
int3
dec
rolb
mov
sub
sbb
lods
cmc
dec
cmpsb
fimull
fstl
fmulp
int3
out
sub
mov
mov
jne
pop
jnp
cwtl
fstpt
sbb
outsb
mov
test
mov
cmc
xorl
aad
or
mov
lcall
push
jmp
and
mov
test
inc
inc
sahf
or
xor
jge
outsl
xchg
sub
and
mov
mov
add
mov
xchg
or
cmp
ljmp
add
sub
mov
mov
mov
jg
add
mov
lcall
mov
aas
mov
adc
xor
mov
add
jae
xor
add
callw
test
sub
mov
scas
fdivr
jo
mov
xor
aas
mov
mov
add
push
or
cs
movsl
mov
mov
mov
nop
add
and
mov
fldenv
add
test
lods
xchg
out
add
lds
pusha
add
cli
mov
sbb
inc
push
loope
addb
std
call
jmp
mov
sbb
ja
mov
mov
pop
cs
and
mov
add
mov
add
popfw
mov
data16
test
mov
mov
mov
jno
add
add
push
ds
loope
jbe
mov
mov
mov
xchg
adc
xlat
pop
clc
test
sub
idivl
xchg
cmp
mov
sbb
and
mov
iret
push
fwait
pop
int
or
addb
subl
loope
fwait
jb
mov
popa
out
add
or
popa
das
addb
push
push
rolb
mov
shl
inc
movsl
addb
out
xchg
sbb
pop
aam
test
cli
inc
dec
idivb
mov
cwtl
add
mov
add
dec
mov
add
cmpsl
cmc
jnp
loope
jl
add
in
sub
add
mov
pusha
add
jg
rcl
add
dec
fnstcw
xor
sbb
add
xor
sub
mov
imul
adc
addb
mov
adc
or
bound
mov
rcr
or
add
and
mov
or
mov
mov
fs
rolb
mov
adc
icebp
mov
pop
push
adc
mov
mov
outsb
dec
mov
aaa
push
add
int
mov
hlt
pop
push
jl
popa
jbe
xor
mov
mov
loope
jo
mov
loopne
mov
add
ret
adc
mov
pop
and
fs
mov
mov
out
cs
lret
imull
arpl
decl
sbb
cmc
mov
leave
sbb
outsl
cmp
xor
out
push
add
stos
fiaddl
pop
cmp
mov
xor
jp
or
mov
mov
xchg
in
outsl
xor
mov
cmp
inc
adcl
fwait
jp
outsl
cmp
icebp
rolb
mov
loope
movsl
mov
cmp
mov
lret
mov
insl
scas
aam
mov
in
mov
inc
mov
mov
dec
inc
add
call
jo
add
add
pop
or
xor
add
xor
xchg
popa
inc
jne
movsl
jno
add
add
add
mov
fwait
mov
jg
into
push
xchg
add
fs
jge
sbb
add
add
push
ret
arpl
popf
out
cmp
and
mov
lahf
orl
or
pushf
into
jne
mov
add
mov
inc
je
mov
ret
add
sbb
mov
mov
jp
dec
inc
sbbl
mov
pop
push
sub
jg
add
test
clc
lds
repnz
and
push
cmc
push
cmp
xchg
scas
pop
cmpsl
out
cmp
jge
lret
jmp
adc
dec
mov
fldenv
dec
addb
ror
fisubrl
cmp
xchg
cli
mov
mov
jbe
stos
fcmovne
loopne
mov
or
add
dec
rolb
mov
mov
imul
mov
ljmp
loop
mov
add
add
mov
ret
jnp
lds
mov
add
hlt
fwait
jae
rolb
mov
jl
jo
mov
fidivrl
vcvtsd2si
add
adc
and
add
mov
push
test
mov
mov
add
mov
int
rolb
mov
fcompl
jge
add
mov
mov
idivl
and
add
lock
adc
mov
jp
or
add
or
inc
mov
cmpsl
inc
leave
cmpsb
repnz
add
add
jp
jg
xor
mov
push
movl
mov
dec
pop
outsl
popa
pop
mov
cli
dec
mov
rolb
mov
into
xlat
out
or
mov
add
sbb
xchg
stc
adc
adc
mov
add
addb
ja
sbb
popa
or
pop
gs
mov
add
mov
das
test
mov
mov
lea
mov
mov
fdivl
xor
jae
fdivl
add
mov
cwtd
lds
adc
repnz
lea
imull
push
cmp
mov
pusha
add
mov
add
mov
test
loop
mov
rolb
mov
mov
lcall
mov
sub
add
lahf
lahf
lahf
push
add
mov
fimull
add
and
mov
mov
add
inc
add
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
in
add
add
push
mov
xchg
ret
pop
aad
pop
add
in
outsl
add
clc
repnz
nop
cld
jae
add
add
insb
pop
push
mov
xchg
ret
push
add
cmc
leave
xchg
add
mov
nop
leave
nop
jmp
add
add
fldenv
xchg
and
mov
mov
jmp
incl
add
add
add
mov
add
repnz
nop
cld
jae
xor
loope
add
add
mov
clc
repnz
nop
cld
jae
xor
add
or
paddusw
xchg
ret
inc
add
test
cmc
add
xchg
inc
cmpsb
jcxz
je
push
mov
nop
leave
nop
jmp
leave
add
clc
repnz
nop
cld
jae
jl
sbb
leave
adc
mov
mov
mov
xchg
ret
add
add
call
clc
repnz
nop
cld
jae
jl
add
add
clc
repnz
nop
cld
jae
add
and
roll
add
clc
repnz
nop
cld
jae
add
cmp
sti
clc
repnz
nop
cld
jae
add
add
add
imul
inc
add
add
test
add
add
mov
pop
or
repnz
nop
cld
jae
add
pop
add
add
sub
nop
nop
cld
jae
add
in
add
cmp
repz
mov
nop
leave
nop
jmp
add
sbb
leave
xchg
imul
cmp
nop
nop
cld
jae
xor
add
ja
loope
add
mov
xchg
ret
cmc
xchg
sahf
and
cmc
add
ror
pop
push
mov
xchg
ret
frstor
add
add
in
push
push
mov
xchg
ret
addb
aad
add
add
pop
mov
clc
repnz
nop
cld
jae
pop
cmc
loop
jmp
xor
dec
ss
clc
repnz
nop
cld
jae
add
nop
add
push
mov
xchg
ret
lock
push
sub
nop
nop
cld
jae
loop
and
xchg
add
rclb
nop
leave
nop
jmp
cmc
test
add
add
ds
push
mov
nop
leave
nop
jmp
add
sbb
mov
mov
nop
leave
nop
jmp
sbb
aas
add
add
fsubs
mov
xchg
ret
push
and
rolb
xchg
add
mov
mov
nop
leave
nop
jmp
add
add
in
add
xchg
clc
repnz
nop
cld
jae
aad
pop
xchg
in
leave
sbb
add
clc
repnz
nop
cld
jae
aas
add
add
lcall
inc
add
add
add
add
inc
add
push
clc
repnz
nop
cld
jae
and
add
add
lods
push
clc
repnz
nop
cld
jae
flds
repnz
sbb
nop
cld
jae
push
add
cmc
add
mov
add
add
leave
fldl
fstp
shlb
add
add
add
add
push
mov
xchg
ret
add
sbb
pop
add
and
clc
repnz
nop
cld
jae
add
bound
jecxz
mov
jo
inc
add
add
add
loop
pop
sub
clc
repnz
nop
cld
jae
loope
aas
add
gs
jp
loopne
clc
repnz
nop
cld
jae
add
aad
repnz
repnz
nop
cld
jae
inc
add
add
fadds
mov
nop
cld
jae
add
pop
add
mov
clc
repnz
nop
cld
jae
adcb
in
add
pusha
clc
repnz
nop
cld
jae
add
loopne
mov
mov
xchg
ret
xor
test
loop
pop
cmc
xor
mov
push
clc
repnz
nop
cld
jae
aad
stos
add
cmc
lock
mov
clc
repnz
nop
cld
jae
add
jmp
nop
cld
jae
fadds
and
inc
test
or
repnz
nop
cld
jae
add
aad
aad
test
clc
repnz
nop
cld
jae
add
fnstsw
movl
in
nop
leave
nop
jmp
add
add
mov
inc
add
xchg
aas
add
pop
call
clc
repnz
nop
cld
jae
add
repnz
imul
add
repnz
nop
cld
jae
loope
loop
pop
push
mov
xchg
ret
push
aad
add
imul
mov
nop
leave
nop
jmp
xchg
add
add
xchg
int3
imul
or
push
mov
nop
leave
nop
jmp
sbb
push
in
nop
leave
nop
jmp
add
loope
leave
xchg
add
xchg
push
push
lods
jmp
lock
add
repnz
add
icebp
xchg
movsl
jbe
add
push
mov
xchg
ret
add
add
cmc
xchg
add
in
add
and
push
add
jge
fimuls
in
add
xor
xchg
push
push
mov
nop
leave
nop
jmp
add
add
sbb
xchg
pop
mov
push
mov
xchg
ret
add
add
inc
add
nop
nop
cld
jae
and
loopne
add
xchg
loope
push
mov
loop
add
add
movsb
faddl
add
add
inc
loopne
mov
test
push
mov
nop
leave
nop
jmp
inc
add
xlat
stos
push
clc
repnz
nop
cld
jae
pop
sbb
add
in
daa
mov
imul
in
nop
leave
nop
jmp
test
add
or
nop
nop
cld
jae
cmc
add
test
add
nop
nop
cld
jae
add
add
rolb
imul
cld
jae
adc
inc
add
rol
clc
repnz
nop
cld
jae
flds
add
loopne
lret
clc
repnz
nop
cld
jae
add
add
add
add
mov
add
adc
xchg
fldl
loopne
lock
xchg
mov
lea
push
mov
nop
leave
nop
jmp
fidivrs
loop
pop
rep
clc
repnz
nop
cld
jae
add
outsl
add
clc
repnz
nop
cld
jae
lcall
mov
clc
repnz
nop
cld
jae
add
add
dec
mov
push
mov
nop
leave
nop
jmp
xor
add
push
mov
nop
leave
nop
jmp
add
and
rolb
xchg
add
clc
repnz
nop
cld
jae
aas
leave
add
or
push
mov
nop
leave
nop
jmp
mov
xor
mov
add
mov
clc
repnz
nop
cld
jae
add
sbb
add
add
jne
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
add
pushf
cmpw
push
mov
nop
leave
nop
jmp
add
add
pop
cmp
push
mov
nop
leave
nop
jmp
add
add
sbb
add
push
mov
nop
leave
nop
jmp
xchg
pop
add
in
push
push
mov
xchg
ret
add
aad
add
pop
push
push
mov
xchg
ret
loopne
add
add
xchg
xchg
mov
mov
push
clc
repnz
nop
cld
jae
add
in
and
jnp
mov
test
out
add
fcoms
and
add
mov
mov
push
out
add
add
add
mov
push
mov
xchg
ret
fs
leave
int3
test
add
in
nop
leave
nop
jmp
bound
add
and
add
dec
clc
dec
inc
clc
repnz
nop
cld
jae
add
push
push
push
push
mov
xchg
ret
add
sbb
enter
mov
nop
leave
nop
jmp
sahf
xor
jl
add
pop
adc
and
clc
repnz
nop
cld
jae
pop
add
sbb
or
mov
xchg
ret
add
aad
frstor
fadds
push
clc
repnz
nop
cld
jae
test
add
lcall
cld
jae
add
xor
je
clc
repnz
nop
cld
jae
add
add
inc
adc
repnz
nop
cld
jae
stos
push
add
frstor
add
add
clc
repnz
nop
cld
jae
repnz
fiadds
lock
mov
push
mov
nop
leave
nop
jmp
fsubr
roll
pop
clc
repnz
nop
cld
jae
add
test
xchg
add
mov
clc
repnz
nop
cld
jae
add
add
stos
jne
push
mov
nop
leave
nop
jmp
add
fstpl
test
add
clc
repnz
nop
cld
jae
sbb
lcall
cld
jae
add
add
fadds
stos
mov
clc
repnz
nop
cld
jae
add
rolb
or
nop
cld
jae
rolb
add
inc
in
pop
sub
add
clc
repnz
nop
cld
jae
add
test
push
mov
add
data16
add
pop
cmc
lcall
add
jmp
aas
add
leave
aas
add
rolb
add
add
add
movsb
insl
mov
clc
repnz
nop
cld
jae
push
pop
xor
in
add
add
fs
xchg
aas
loopne
sahf
mov
repnz
nop
cld
jae
add
add
add
popa
dec
test
push
mov
xchg
ret
test
aas
pcmpgtb
xor
repnz
nop
cld
jae
bound
add
push
push
lods
pushl
clc
repnz
nop
cld
jae
add
aad
and
push
clc
repnz
nop
cld
jae
add
test
fisubrs
lea
nop
cld
jae
loop
add
add
push
mov
xchg
ret
gs
leave
add
jl
add
mov
mov
leave
inc
add
fldl
mov
sbb
mov
dec
push
mov
nop
leave
nop
jmp
add
add
test
xchg
int3
mov
clc
repnz
nop
cld
jae
add
xchg
cmc
stc
leave
clc
repnz
nop
cld
jae
test
add
and
inc
out
mov
push
mov
nop
leave
nop
jmp
add
add
add
mov
push
mov
nop
leave
nop
jmp
xor
pop
add
fsts
add
push
mov
xchg
ret
call
push
rclb
pop
repnz
add
add
cmp
and
xor
mov
nop
nop
cld
jae
add
add
fsub
bound
mov
pop
and
cmp
push
mov
nop
leave
nop
jmp
fcomp
and
pop
clc
repnz
nop
cld
jae
xchg
add
and
add
push
mov
mov
push
mov
scas
mov
xchg
add
mov
in
add
movsl
out
je
clc
repnz
nop
cld
jae
sbb
adc
mov
xchg
ret
add
xor
add
sbb
data16
mov
xchg
ret
aas
push
fldl
iret
mov
push
mov
nop
leave
nop
jmp
loop
add
and
add
nop
nop
cld
jae
fsubr
imul
fs
fldenv
popa
add
mov
xchg
ret
add
add
add
push
add
mov
nop
leave
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
pop
add
test
clc
repnz
nop
cld
jae
aad
aad
loopne
mov
shll
add
repnz
nop
cld
jae
clc
xchg
pop
add
add
jmp
add
pop
xor
and
clc
add
add
clc
repnz
nop
cld
jae
mov
add
or
nop
cld
jae
add
add
inc
xor
add
repnz
nop
cld
jae
add
add
add
add
mov
mov
adc
repnz
nop
cld
jae
fsubp
loope
add
in
nop
leave
nop
jmp
repnz
add
push
push
push
add
add
repnz
nop
cld
jae
add
add
dec
push
push
mov
xchg
ret
add
add
leave
add
ficoms
mov
clc
repnz
nop
cld
jae
and
mov
clc
repnz
nop
cld
jae
lcall
sbb
repnz
nop
cld
jae
xchg
test
pop
frstor
add
clc
repnz
nop
cld
jae
add
loop
inc
add
mov
xchg
ret
add
loopne
add
lods
mov
clc
repnz
nop
cld
jae
pop
add
add
add
repnz
nop
cld
jae
add
add
add
mov
nop
leave
nop
jmp
add
fcoms
loope
icebp
fildl
in
nop
leave
nop
jmp
flds
add
add
sub
push
mov
nop
leave
nop
jmp
repnz
xchg
fldl
push
mov
xchg
ret
add
add
mov
dec
mov
clc
repnz
nop
cld
jae
add
loopne
pop
mov
clc
repnz
nop
cld
jae
and
repnz
rep
arpl
mov
nop
cld
jae
add
lock
inc
lock
mov
popa
add
repnz
nop
cld
jae
xchg
xor
sahf
add
add
pushl
clc
repnz
nop
cld
jae
add
pop
inc
add
addr16
in
add
aas
xor
add
push
jbe
js
add
nop
nop
cld
jae
aad
sbb
flds
fadds
mov
repnz
nop
cld
jae
bound
int3
add
xor
repnz
nop
cld
jae
add
clc
add
shr
jmp
jmp
add
and
int3
imul
fs
aas
xchg
lcall
clc
repnz
nop
cld
jae
add
in
pusha
add
push
add
push
mov
nop
leave
nop
jmp
add
add
dec
imul
cld
jae
clc
test
imul
push
jmp
add
add
pop
add
add
add
call
push
push
mov
nop
leave
nop
jmp
inc
add
add
in
clc
add
stos
notl
in
nop
leave
nop
jmp
inc
add
pop
mov
clc
repnz
nop
cld
jae
add
leave
clc
cmp
fst
inc
add
loope
loope
sahf
add
push
mov
xchg
ret
add
loopne
add
xchg
xchg
mov
nop
nop
cld
jae
add
call
or
mov
xchg
ret
add
add
xchg
add
add
xor
push
mov
xchg
ret
add
add
loope
decl
nop
cld
jae
add
fadds
add
int3
js
stos
clc
repnz
nop
cld
jae
jl
xchg
add
loop
test
clc
repnz
nop
cld
jae
add
add
xchg
sub
nop
nop
cld
jae
stos
xor
in
test
lea
jmp
add
xchg
xchg
add
aad
add
add
jl
add
add
clc
repnz
nop
cld
jae
add
int3
add
test
clc
repnz
nop
cld
jae
loop
leave
add
flds
pushf
add
push
mov
xchg
ret
xor
bound
dec
add
repnz
nop
cld
jae
in
and
lcall
dec
add
push
mov
xchg
ret
xchg
xchg
add
add
add
lret
push
clc
repnz
nop
cld
jae
add
add
adc
add
sahf
pop
push
mov
xchg
ret
xchg
repnz
push
rolb
add
jg
lret
clc
repnz
nop
cld
jae
xchg
fldl
sbb
add
mov
mov
mov
add
clc
repnz
nop
cld
jae
loope
add
cmp
mov
xchg
ret
clc
add
add
add
je
jle
push
mov
xchg
ret
add
addb
inc
add
addb
push
dec
and
push
mov
xchg
ret
cmc
add
add
xchg
add
push
mov
xchg
ret
add
xor
in
xchg
sbb
repnz
nop
cld
jae
add
push
add
stos
jl
outsb
add
clc
repnz
nop
cld
jae
add
cmc
call
mov
push
mov
nop
leave
nop
jmp
xor
add
fs
mov
mov
clc
repnz
nop
cld
jae
add
loope
jo
mov
cmpsb
rolb
mov
add
adc
add
leave
aas
add
cmc
cmc
and
add
add
jge
push
mov
xchg
ret
mov
add
xchg
add
push
mov
xchg
ret
add
add
xchg
repnz
nop
cld
jae
loope
adc
pop
push
mov
xchg
ret
sbb
flds
sbb
sbb
add
clc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
repnz
jl
loopne
add
inc
or
in
nop
leave
nop
jmp
and
add
add
mov
nop
nop
cld
jae
repnz
lock
inc
mov
add
repnz
nop
cld
jae
xchg
add
lds
subl
push
mov
xchg
ret
push
fs
scas
movzwl
push
mov
xchg
ret
add
test
add
cmpsb
mov
clc
repnz
nop
cld
jae
add
sbb
scas
call
jmp
add
loope
call
in
fiadds
add
push
mov
xchg
ret
add
add
add
xchg
add
repz
add
xchg
add
add
shrb
insb
push
push
mov
nop
leave
nop
jmp
xor
and
cmc
push
add
mov
mov
xchg
ret
and
add
push
mov
add
push
mov
nop
leave
nop
jmp
flds
stos
test
add
int
shrb
mov
xchg
ret
add
sbb
add
cmpl
jae
add
call
repnz
nop
cld
jae
add
and
adc
push
mov
nop
leave
nop
jmp
inc
sbb
and
shlb
nop
nop
cld
jae
fs
add
add
add
add
clc
repnz
nop
cld
jae
push
add
add
sub
clc
repnz
nop
cld
jae
aad
fldl
xchg
add
out
inc
add
bound
add
add
sbb
lret
xchg
ret
in
repnz
in
loop
mov
sub
movsb
incl
test
pop
xor
add
add
add
clc
repnz
nop
cld
jae
push
mov
and
mov
clc
repnz
nop
cld
jae
add
push
add
loopne
add
clc
repnz
nop
cld
jae
add
test
in
add
cmp
dec
cmp
repnz
nop
cld
jae
mov
push
push
mov
add
push
add
add
add
add
add
push
mov
xchg
ret
sahf
repnz
add
add
jne
clc
repnz
nop
cld
jae
xor
adc
cwtl
mov
push
mov
nop
leave
nop
jmp
imul
inc
xchg
add
cmp
clc
repnz
nop
cld
jae
inc
aad
jl
add
nop
nop
cld
jae
addb
add
xorl
nop
jmp
loop
push
fnstcw
xchg
add
add
clc
repnz
nop
cld
jae
adc
add
dec
imul
push
mov
nop
leave
nop
jmp
bound
add
add
mov
mov
clc
repnz
nop
cld
jae
add
cmp
nop
nop
cld
jae
add
add
into
mov
push
mov
nop
leave
nop
jmp
add
add
out
lea
clc
repnz
nop
cld
jae
sbb
popa
clc
repnz
nop
cld
jae
pop
sbb
inc
jne
dec
ret
clc
repnz
nop
cld
jae
add
add
sbb
int3
flds
add
clc
repnz
nop
cld
jae
clc
add
add
pop
call
in
nop
leave
nop
jmp
loop
inc
iret
call
clc
repnz
nop
cld
jae
add
aas
adc
and
repnz
nop
cld
jae
add
add
add
arpl
icebp
clc
repnz
nop
cld
jae
loopne
fnstsw
mov
nop
leave
nop
jmp
add
aad
add
cltd
pop
clc
repnz
nop
cld
jae
add
sbb
add
call
mov
push
mov
nop
leave
nop
jmp
in
add
add
add
aaa
ljmp
add
xor
fadds
and
imull
movzwl
clc
repnz
nop
cld
jae
add
add
insb
add
clc
repnz
nop
cld
jae
xor
add
add
mov
cltd
push
push
mov
xchg
ret
add
fstpl
add
add
pop
push
mov
xchg
ret
add
xchg
add
push
rcr
mov
clc
repnz
nop
cld
jae
fldl
pop
repnz
and
mov
add
repnz
nop
cld
jae
inc
aas
add
inc
add
loop
rep
clc
repnz
nop
cld
jae
add
loope
rclb
test
fdivr
repnz
nop
cld
jae
add
pop
add
add
clc
repnz
nop
cld
jae
imul
add
push
mov
nop
leave
nop
jmp
inc
add
xor
push
sbb
sub
loope
mov
nop
leave
nop
jmp
add
add
add
add
repnz
nop
cld
jae
add
adc
gs
cmp
push
mov
xchg
ret
repnz
fldenv
repnz
inc
xchg
ret
push
idivl
mov
clc
repnz
nop
cld
jae
cmc
loop
jmp
inc
flds
inc
add
add
xor
add
aad
sbb
nop
nop
cld
jae
inc
test
sbb
and
pop
clc
repnz
nop
cld
jae
add
fsubp
frstor
test
cmp
call
in
pop
add
add
clc
repnz
nop
cld
jae
fs
pop
add
stos
sub
clc
repnz
nop
cld
jae
xor
add
add
imul
cmpl
loop
fs
daa
js
add
push
mov
nop
leave
nop
jmp
sar
add
add
push
push
mov
nop
leave
nop
jmp
aad
pop
add
cmp
repnz
nop
cld
jae
cmc
add
add
mov
mov
xchg
ret
add
cmc
loopne
add
sbb
nop
cld
jae
add
sbb
and
repnz
mov
xchg
ret
loopne
xor
sbb
aad
cs
add
and
int3
and
int3
fs
add
add
test
add
in
nop
leave
nop
jmp
add
add
and
add
repnz
nop
cld
jae
xchg
fucom
ficoms
data16
cmpl
push
mov
nop
leave
nop
jmp
in
pop
add
pusha
cmc
inc
add
add
inc
inc
add
mov
loopne
mov
push
push
mov
xchg
ret
repnz
loope
xchg
test
dec
mov
push
mov
xchg
ret
fiadds
add
xor
inc
sbb
repnz
nop
cld
jae
bound
add
addb
jnp
dec
adc
mov
xchg
ret
add
add
sub
dec
jne
clc
repnz
nop
cld
jae
add
inc
lea
repnz
nop
cld
jae
pop
xchg
fiadds
adc
repnz
nop
cld
jae
inc
add
jl
sbb
push
mov
nop
leave
nop
jmp
adc
cmp
add
test
mov
nop
nop
cld
jae
push
xor
push
add
add
jg
push
mov
xchg
ret
add
add
add
add
mov
nop
nop
cld
jae
add
inc
inc
add
add
fisubs
popa
add
repnz
nop
cld
jae
add
call
mov
loop
clc
repnz
nop
cld
jae
add
bound
add
cltd
movswl
clc
repnz
nop
cld
jae
cmc
push
test
push
mov
xchg
ret
loopne
add
add
inc
add
sbb
push
mov
xchg
ret
add
test
add
loopne
mov
or
nop
nop
cld
jae
add
add
jne
clc
repnz
nop
cld
jae
fs
test
xor
clc
repnz
nop
cld
jae
and
add
add
lds
js
push
mov
nop
leave
nop
jmp
add
add
inc
add
stos
clc
repnz
nop
cld
jae
addb
push
jns
pop
adc
ret
add
call
jl
test
adc
mov
xchg
ret
add
add
add
push
add
in
clc
repnz
nop
cld
jae
add
nop
nop
cld
jae
add
aad
xor
add
mov
clc
repnz
nop
cld
jae
fadds
inc
addb
add
ja
xor
clc
repnz
nop
cld
jae
lock
xchg
add
xor
add
or
leave
nop
jmp
inc
in
add
add
rolb
aas
push
push
mov
xchg
ret
add
adc
pop
add
pop
mov
push
mov
xchg
ret
add
add
add
jmp
sbbl
add
sbb
add
add
add
inc
clc
repnz
nop
cld
jae
gs
out
je
clc
repnz
nop
cld
jae
fcom
xor
movsl
add
clc
repnz
nop
cld
jae
add
addl
mov
mov
push
mov
xchg
ret
add
stos
add
sub
rclb
in
nop
leave
nop
jmp
leave
aad
test
add
jmp
rcll
nop
leave
nop
jmp
int3
add
add
add
inc
movl
repnz
nop
cld
jae
add
test
andl
mov
jb,pt
push
mov
nop
leave
nop
jmp
xchg
adc
mov
nop
leave
nop
jmp
aas
add
add
int3
add
push
mov
nop
leave
nop
jmp
inc
adc
loop
lcall
cmpl
in
nop
leave
nop
jmp
add
in
and
add
add
nop
nop
cld
jae
lcall
fimuls
nop
nop
cld
jae
add
inc
inc
in
jg
jns
add
in
nop
leave
nop
jmp
add
mov
pop
push
mov
nop
leave
nop
jmp
xchg
add
clc
add
mov
lahf
mov
clc
repnz
nop
cld
jae
lock
add
pop
mov
repnz
nop
cld
jae
pop
adc
loopne
pop
mov
clc
repnz
nop
cld
jae
add
add
add
cs
clc
repnz
nop
cld
jae
sbb
in
call
ret
sbb
cld
jae
sbb
fmuls
cs
repnz
nop
cld
jae
lcall
mov
push
mov
nop
leave
nop
jmp
xchg
add
add
clc
repnz
nop
cld
jae
pop
fldl
inc
test
pop
mov
clc
repnz
nop
cld
jae
pop
xchg
add
add
mov
nop
leave
nop
jmp
fldl
test
add
add
ret
pop
push
clc
repnz
nop
cld
jae
clc
loopne
push
pop
jae
mov
nop
leave
nop
jmp
gs
add
xor
clc
repnz
nop
cld
jae
add
call
outsl
xor
clc
repnz
nop
cld
jae
add
add
clc
add
nop
nop
cld
jae
push
add
add
loop
add
add
clc
repnz
nop
cld
jae
test
xor
add
add
inc
xchg
mov
popa
mov
xor
add
clc
repnz
nop
cld
jae
sbb
aaa
test
add
xor
add
clc
repnz
nop
cld
jae
add
push
cwtl
add
clc
repnz
nop
cld
jae
pop
lcall
clc
repnz
nop
cld
jae
fldl
jl
add
loope
loope
add
push
mov
nop
leave
nop
jmp
add
add
push
test
add
add
in
nop
leave
nop
jmp
cmp
loopne
loopne
mov
repnz
nop
cld
jae
inc
xor
loopne
add
cltd
nop
clc
repnz
nop
cld
jae
add
inc
test
add
sbb
nop
leave
nop
jmp
add
cmc
add
push
jne
clc
repnz
nop
cld
jae
sahf
push
loopne
loopne
mov
push
mov
xchg
ret
add
stos
repz
add
repnz
nop
cld
jae
add
inc
punpcklwd
repnz
nop
cld
jae
mov
loop
lcall
nop
nop
cld
jae
and
xchg
repnz
add
add
clc
repnz
nop
cld
jae
xchg
add
xlat
jmp
test
pop
add
clc
repnz
nop
cld
jae
xchg
cmc
inc
dec
jne
clc
repnz
nop
cld
jae
add
mov
xchg
ret
aas
fucom
add
test
mov
movsl
out
aaa
add
clc
add
and
xchg
call
jmp
lcall
flds
xchg
xchg
adc
sub
mov
push
mov
nop
leave
nop
jmp
add
ds
push
mov
xchg
ret
add
add
push
add
test
nop
leave
nop
jmp
add
sbb
pop
xchg
add
xchg
pop
cmp
push
mov
nop
leave
nop
jmp
call
ja
stos
xor
clc
repnz
nop
cld
jae
call
call
in
call
in
nop
leave
nop
jmp
and
cmpb
mov
cmp
ret
in
xchg
test
aad
mov
repnz
nop
cld
jae
lcall
mov
push
mov
nop
leave
nop
jmp
fucom
add
add
mov
clc
repnz
nop
cld
jae
cmc
pop
add
xor
add
mov
push
mov
xchg
ret
add
add
cmc
repnz
clc
repnz
nop
cld
jae
call
add
rolb
mov
lods
mov
clc
repnz
nop
cld
jae
repnz
push
ljmp
jae
add
xor
inc
repnz
mov
clc
repnz
nop
cld
jae
gs
cld
push
mov
xchg
ret
cmpl
int3
cmc
loop
lods
clc
repnz
nop
cld
jae
call
ficoms
add
add
bound
imul
lock
jl
add
add
fld1
push
cmc
clc
repnz
nop
cld
jae
add
test
clc
repnz
nop
cld
jae
add
add
mov
mov
xchg
ret
add
xorl
stos
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
in
loope
vdivss
pop
lret
inc
add
test
add
in
xor
jne
push
clc
repnz
nop
cld
jae
fldl
loop
add
pop
cmp
push
clc
repnz
nop
cld
jae
and
add
mov
clc
repnz
nop
cld
jae
add
add
loope
add
adc
add
clc
repnz
nop
cld
jae
add
and
add
sbb
pop
push
mov
xchg
ret
add
fdivp
loop
add
stos
jne
popa
clc
repnz
nop
cld
jae
leave
sahf
imul
xchg
cmc
add
mov
mov
push
mov
xchg
ret
add
loope
pop
add
mov
cmp
repnz
nop
cld
jae
aad
add
and
mov
push
clc
repnz
nop
cld
jae
loope
add
add
mov
clc
repnz
nop
cld
jae
xchg
adcb
pusha
push
mov
xchg
ret
add
xchg
in
sbb
call
mov
nop
leave
nop
jmp
add
add
push
clc
repnz
nop
cld
jae
leave
add
aas
leave
add
mov
push
mov
nop
leave
nop
jmp
add
in
add
gs
and
clc
repnz
nop
cld
jae
loopne
sbb
add
or
inc
and
mov
nop
leave
nop
jmp
lcall
mov
mov
xchg
ret
add
and
add
jns
push
mov
xchg
ret
add
lcall
out
xor
push
mov
nop
leave
nop
jmp
xchg
addl
cmp
mov
nop
leave
nop
jmp
add
bound
add
push
and
push
mov
xchg
ret
add
add
add
fcomps
mov
nop
leave
nop
jmp
xchg
add
loopne
add
mov
xchg
ret
add
and
push
add
xor
repnz
nop
cld
jae
add
sbb
rolb
mov
push
mov
xchg
ret
pop
fldl
add
add
aad
orl
leave
nop
jmp
rcr
gs
xchg
stos
cmc
add
mov
adc
mov
clc
repnz
nop
cld
jae
rclb
clc
repnz
nop
cld
jae
fs
add
cmp
push
es
je
push
mov
nop
leave
nop
jmp
fs
jl
mov
push
mov
xchg
ret
add
add
add
add
shll
out
add
xchg
add
repnz
cmp
push
rclb
nop
leave
nop
jmp
subb
fsubl
popa
add
repnz
nop
cld
jae
aas
loop
add
pop
jbe
sbbl
clc
repnz
nop
cld
jae
add
cld
inc
push
mov
xchg
ret
add
add
aas
pop
push
mov
movsl
add
mov
loope
out
loop
sub
mov
clc
repnz
nop
cld
jae
add
test
pop
bound
mov
mov
push
mov
nop
leave
nop
jmp
loop
adc
lcall
clc
repnz
nop
cld
jae
cmc
call
loope
xchg
jle
inc
loopne
repnz
nop
cld
jae
adc
dec
call
push
mov
nop
leave
nop
jmp
add
add
addb
push
dec
adc
repnz
nop
cld
jae
add
repz
mov
stc
jmp
add
add
add
aad
add
xchg
add
add
sbb
nop
nop
cld
jae
add
fsubrs
push
or
aas
add
and
inc
add
add
add
pop
lcall
lock
clc
repnz
nop
cld
jae
inc
loopne
loopne
mov
nop
cld
jae
add
add
bound
gs
mov
jg
push
mov
nop
leave
nop
jmp
add
clc
add
loop
mov
xor
add
clc
repnz
nop
cld
jae
add
adc
adc
in
nop
leave
nop
jmp
xchg
sbb
add
outsb
test
push
mov
nop
leave
nop
jmp
add
aad
mov
ret
clc
repnz
nop
cld
jae
add
add
flds
lcall
push
push
mov
xchg
ret
add
push
add
mov
xchg
ret
push
cmc
rolb
mov
clc
repnz
nop
cld
jae
lock
and
or
clc
repnz
nop
cld
jae
aad
inc
add
cs
push
mov
nop
leave
nop
jmp
fcomp
add
add
mov
add
pop
and
repnz
nop
cld
jae
add
in
add
call
clc
repnz
nop
cld
jae
add
xchg
sbb
jl
push
dec
ret
push
mov
nop
leave
nop
jmp
lcall
in
or
mov
xchg
ret
add
add
add
add
jge
clc
clc
repnz
nop
cld
jae
loope
add
ss
nop
leave
nop
jmp
in
add
add
sahf
mov
clc
repnz
nop
cld
jae
add
add
mov
push
mov
nop
leave
nop
jmp
imul
sbb
push
or
clc
repnz
nop
cld
jae
add
add
mov
dec
outsl
popa
fs
mov
nop
leave
nop
jmp
add
add
mov
nop
nop
cld
jae
bound
add
lcall
cmp
sub
fs
push
cmc
add
add
add
mov
push
mov
nop
leave
nop
jmp
xchg
pop
add
repnz
mov
xchg
int3
mov
clc
repnz
nop
cld
jae
xchg
add
add
mov
clc
repnz
nop
cld
jae
flds
jnp
movsb
clc
repnz
nop
cld
jae
adcb
fldln2
add
nop
cld
jae
add
add
add
aad
add
clc
repnz
nop
cld
jae
cmc
pop
add
adc
clc
repnz
nop
cld
jae
add
bound
add
out
mov
push
mov
xchg
ret
add
add
add
in
inc
push
clc
repnz
nop
cld
jae
add
lcall
nop
add
clc
repnz
nop
cld
jae
xchg
pop
add
shr
push
mov
nop
leave
nop
jmp
xor
add
lock
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
push
xchg
pop
test
push
mov
nop
leave
nop
jmp
loop
pop
add
aas
leave
in
lea
clc
repnz
nop
cld
jae
xor
add
add
bound
mov
nop
cld
jae
add
sbb
gs
repnz
fmuls
nop
cld
jae
add
add
fs
sub
push
mov
nop
leave
nop
jmp
call
cmp
mov
nop
nop
cld
jae
sbb
shrb
lea
clc
repnz
nop
cld
jae
and
add
add
mov
push
mov
xchg
ret
add
add
push
pushf
rep
push
mov
xchg
ret
pop
leave
add
lcall
je
inc
fimull
nop
nop
cld
jae
test
xchg
add
add
in
nop
leave
nop
jmp
add
pop
push
bound
test
add
clc
repnz
nop
cld
jae
in
add
sar
repnz
nop
cld
jae
add
test
repz
repnz
nop
cld
jae
xchg
cmp
stos
test
in
dec
mov
clc
repnz
nop
cld
jae
add
lcall
test
call
in
nop
leave
nop
jmp
leave
add
in
xor
clc
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
bound
add
nop
cld
jae
add
add
sub
dec
cmp
repnz
nop
cld
jae
add
add
and
cmpl
jae
flds
in
add
xchg
xchg
cmp
push
mov
nop
leave
nop
jmp
mov
add
jg
leave
jmp
add
add
add
xchg
add
ficomps
loopne
pop
add
lahf
push
push
mov
nop
leave
nop
jmp
add
fdiv
addl
repnz
nop
cld
jae
loopne
pop
add
fadds
add
push
mov
nop
leave
nop
jmp
pop
push
pop
add
jge
clc
repnz
nop
cld
jae
loop
xor
sahf
fstl
pop
clc
repnz
nop
cld
jae
adc
add
add
aad
or
fsts
loope
inc
xchg
add
clc
add
add
add
or
clc
repnz
nop
cld
jae
clc
adc
xchg
call
loopne
mov
xchg
ret
add
pop
dec
push
mov
add
jp
add
add
lods
adc
add
push
mov
add
mov
xor
push
lret
push
pop
add
mov
add
add
clc
repnz
nop
cld
jae
push
xchg
loop
mov
test
mov
stos
push
clc
repnz
nop
cld
jae
add
fadds
add
mov
adc
repnz
nop
cld
jae
ficomps
add
je
clc
repnz
nop
cld
jae
fadds
push
add
mov
xor
push
mov
nop
leave
nop
jmp
add
in
sbb
mov
add
repnz
nop
cld
jae
add
sbb
add
adc
repnz
nop
cld
jae
loope
lcall
clc
repnz
nop
cld
jae
xchg
lcall
lcall
nop
cld
jae
add
add
add
repz
jbe
push
mov
nop
leave
nop
jmp
add
or
add
repnz
nop
cld
jae
call
inc
xchg
push
cmp
clc
repnz
nop
cld
jae
lock
mov
push
mov
jne
rcr
add
lds
dec
add
xchg
jp
add
clc
repnz
nop
cld
jae
loopne
add
lock
je
clc
repnz
nop
cld
jae
inc
add
call
push
mov
nop
leave
nop
jmp
fcom
in
cmpl
mov
xchg
ret
add
lock
add
push
mov
nop
leave
nop
jmp
add
push
clc
repnz
nop
cld
jae
test
fsubs
addl
xor
push
mov
xchg
ret
inc
and
add
and
jg
clc
repnz
nop
cld
jae
pop
add
cmc
add
add
push
mov
nop
leave
nop
jmp
add
xor
int3
add
loope
clc
repnz
nop
cld
jae
add
mov
mov
xchg
ret
add
fsub
loopne
xchg
mov
clc
repnz
nop
cld
jae
ficoms
push
jmp
jns
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
loope
add
pop
fwait
xor
clc
repnz
nop
cld
jae
frstor
add
add
pop
add
push
mov
xchg
ret
and
inc
add
loopne
pusha
add
in
mov
ja
add
add
add
adc
push
adc
push
clc
repnz
nop
cld
jae
add
test
add
add
jmp
sar
nop
nop
cld
jae
add
add
test
add
clc
repnz
nop
cld
jae
clc
add
add
push
sub
in
nop
leave
nop
jmp
bound
pop
add
xchg
sbb
repnz
nop
cld
jae
imul
flds
clc
repnz
nop
cld
jae
sbb
pop
xchg
add
mov
add
in
clc
repnz
nop
cld
jae
adc
mov
repnz
nop
cld
jae
loope
loop
xchg
push
movb
mov
nop
leave
nop
jmp
and
pop
add
add
dec
and
push
mov
xchg
ret
adc
mov
jmp
imul
adcb
push
call
mov
or
add
repnz
nop
cld
jae
add
in
mov
repnz
nop
cld
jae
loopne
inc
stos
add
aad
add
clc
repnz
nop
cld
jae
flds
add
jl
xchg
sbb
repnz
nop
cld
jae
mov
add
add
pop
push
mov
xchg
ret
add
loop
in
loop
mov
repnz
nop
cld
jae
and
add
push
sbb
leave
nop
jmp
jl
flds
jl
sahf
add
push
clc
repnz
nop
cld
jae
xor
stos
sbb
sahf
xchg
inc
add
add
add
or
inc
add
pop
add
int3
add
add
ljmp
nop
cld
jae
add
add
lock
shl
clc
repnz
nop
cld
jae
add
add
faddp
loope
mov
clc
repnz
nop
cld
jae
add
add
push
add
lcall
nop
leave
nop
jmp
add
cmp
nop
nop
cld
jae
add
xchg
sbbl
add
nop
nop
cld
jae
sbb
adcl
clc
repnz
nop
cld
jae
pop
int3
xchg
call
cmp
nop
nop
cld
jae
add
xor
loope
or
inc
sub
repnz
nop
cld
jae
add
in
add
scas
enter
nop
leave
nop
jmp
add
rolb
imul
add
push
mov
xchg
ret
inc
push
aad
add
add
add
incl
push
mov
nop
leave
nop
jmp
aad
add
push
add
jb
clc
repnz
nop
cld
jae
stos
in
add
inc
push
add
mov
jne
inc
add
inc
xor
push
sar
nop
nop
cld
jae
call
aad
addr16
cmpl
push
mov
nop
leave
nop
jmp
int3
in
pushf
add
clc
repnz
nop
cld
jae
add
loopne
cmc
add
cmp
inc
add
add
fcom
test
ficoms
mov
mov
repnz
nop
cld
jae
add
cmc
add
add
nop
nop
cld
jae
pop
push
cmp
xor
xchg
add
cmp
mov
nop
leave
nop
jmp
call
and
push
mov
fimull
daa
aad
add
adc
add
add
add
lods
sahf
push
addb
loop
mov
ljmp
pop
sahf
pushf
test
out
add
fcomps
dec
fcoml
cmp
ljmp
loopne
mov
xor
jge
inc
inc
add
add
adc
mov
mov
pop
add
mov
mov
std
sub
pop
cmp
push
scas
mov
scas
xor
mov
repnz
adc
into
push
bswap
xor
cmpsb
lds
bound
mov
add
pop
push
and
mov
pop
xchg
sbb
nop
add
rcr
movsl
sub
push
movsl
push
aad
push
les
test
add
mov
ja
sbb
fwait
dec
push
mov
xor
add
mov
and
insl
int3
cwtl
scas
rcll
out
ret
pusha
add
stos
inc
add
testl
test
and
add
loope
pushf
dec
pop
dec
ds
mov
jbe
add
dec
xor
mov
push
sbb
lahf
push
add
add
ljmp
push
mov
or
add
dec
mov
inc
js
and
mov
add
mov
inc
xchg
fwait
push
push
inc
addb
icebp
sarl
xor
and
add
mov
ret
mov
into
push
stc
ja
jne
enter
push
xchg
rolb
mov
mov
cmpsl
dec
xlat
xchg
cmpsl
inc
ret
out
add
call
add
pop
dec
adc
mov
sub
scas
ficompl
gs
jg
xor
pop
sub
add
add
decb
rolb
mov
add
xchg
xlat
mov
cmp
clc
sub
mov
mov
insl
fbld
mov
addb
popa
push
add
push
leave
pop
dec
adc
fistl
sbb
sahf
add
and
add
mov
fsubs
idiv
fldenv
mov
add
mov
mov
mov
cli
pop
out
mov
mov
xor
mov
sub
xchg
lods
push
mov
rolb
mov
adc
pop
xor
mov
test
mov
je
rcrl
lret
jle
add
repnz
add
insl
jmp
add
xlat
xchg
outsb
cmp
stc
mov
fistl
mov
loop
mov
gs
and
sbb
adc
mov
mov
cld
push
fisubrl
xchg
add
adc
mov
out
mov
das
ljmp
cmpsl
xchg
push
fmull
adc
mov
mov
xchg
add
xor
jecxz
xor
xchg
inc
push
sub
test
lods
push
movsl
jecxz
enter
out
mov
scas
fsubl
mov
dec
lret
cmpl
jge
out
fimull
and
push
add
mov
sahf
js
mov
add
mov
fcoml
lock
add
mov
popa
adcl
mov
xchg
add
out
sub
mov
xchg
sbb
xor
pop
sahf
fld
add
dec
movl
data16
xor
mov
mov
fstps
push
pop
fisttps
std
mov
jne
outsb
sbb
add
mov
push
add
mov
sbb
xor
cmp
pop
arpl
add
jbe
scas
or
repnz
mov
repnz
cmpsl
mov
dec
cmp
mov
add
mov
inc
sti
and
add
popf
add
mov
add
xchg
cmp
bound
mov
jne
loope
in
lods
fists
add
mov
aaa
call
pop
mov
cmc
xor
mov
jb
mov
rolb
mov
add
xor
mov
or
mov
push
outsb
xchg
repz
fadd
add
lcall
and
jmp
add
mov
push
je
mov
mov
add
mov
stos
imull
mov
inc
lock
add
arpl
xchg
add
mov
outsl
ds
xor
mov
mov
cmp
xchg
addr16
sbb
add
xchg
or
mov
jle
add
adc
mov
aaa
mov
adc
cmp
dec
push
add
add
sbb
test
leave
xchg
mov
and
imul
inc
imul
jecxz
add
add
add
mov
flds
add
cmpsl
rolb
mov
push
fdivs
add
insl
inc
bound
mov
lods
push
or
add
pop
addb
insl
mov
mov
sbb
push
test
stos
aam
jbe
jge
inc
adc
pop
popa
jg
add
roll
xchg
popl
mov
push
cmp
push
and
inc
pop
cli
addb
dec
gs
and
sbb
int3
jns
jle
push
and
xchg
inc
add
jmp
pop
divl
mov
rcrl
loope
add
xor
pop
test
ljmp
mov
lret
xor
arpl
mov
mov
pop
fldcw
add
and
mov
rolb
mov
stos
jle
rolb
mov
mov
loop
mov
mov
mov
sub
add
jns
adc
mov
add
scas
mov
pop
je
sub
bound
mov
int3
or
add
mov
repz
mov
scas
or
mov
call
mov
jp
sub
push
cmp
in
sbb
and
rolb
cli
jae
mov
mov
dec
adc
add
dec
fidivl
sub
dec
imul
add
cmc
in
adc
mov
loop
mov
ljmp
mov
pop
call
mov
popf
rol
adc
mov
push
add
cwtl
jecxz
or
jg
fisubrs
mov
push
lret
nop
add
cld
jo
mov
loopne
mov
jmp
add
ret
in
add
xchg
push
or
xchg
mov
add
mov
xor
mov
mov
add
insl
add
popf
js
jmp
add
xchg
add
sbbl
mov
and
cmp
outsl
inc
adc
dec
mov
arpl
inc
dec
in
or
mov
mov
jnp
addb
cmovae
add
out
push
sub
jmp
pop
sbb
adc
mov
imul
xor
into
bound
mov
or
rcll
mov
jae
incl
lea
sbb
mov
push
inc
push
shll
mov
sub
iret
stos
adcl
xor
jne
add
shll
in
and
adc
mov
test
enter
mov
iret
push
mov
xchg
movsl
aas
xor
mov
and
mov
mov
mov
pop
jno
ss
adc
adc
xor
mov
and
mov
lods
or
xor
mov
push
fcoms
add
mov
adc
mov
call
mov
sahf
addr16
push
addb
out
ds
gs
pop
mov
test
add
mov
inc
mov
mov
std
in
add
mov
or
std
icebp
add
sbb
push
and
cld
jns
push
add
aas
or
xor
push
aaa
xor
add
addb
push
movsb
repz
push
or
repnz
mov
jbe
enter
in
aaa
fistpll
addb
and
mov
jbe
add
mov
fmul
mov
sub
fwait
dec
cmp
mov
mov
arpl
mov
mov
daa
xor
sub
add
jbe
sahf
lds
add
mov
fsubs
loop
mov
cmp
inc
aam
ret
jnp
add
push
add
movsb
or
lret
jns,pt
in
popf
inc
mov
xchg
fnstsw
test
sub
lds
adc
lcall
xchg
xlat
in
out
jge
pop
in
sbb
or
mov
inc
add
das
out
add
inc
call
sub
js
add
add
add
mov
add
ljmp
dec
pop
jns
fs
cmp
jno
mov
ret
repz
add
add
subl
dec
dec
clc
and
mov
sti
test
add
jp
jp
pop
mov
jle
lods
iret
jmp
sbb
add
pop
test
das
push
cwtl
jl
sbb
cltd
leave
mov
outsb
cld
pusha
add
imul
mov
mov
xor
mov
jmp
cmp
mov
das
and
mov
jbe
lcall
repnz
inc
pop
outsb
repnz
mov
ret
or
dec
xchg
mov
cmp
fwait
jne
sub
inc
add
or
sub
add
add
pop
cmp
add
je
and
mov
add
call
imul
mov
inc
popf
dec
push
adc
add
lret
ret
xor
pushf
or
inc
cmc
adc
daa
xchg
mov
push
aas
cmp
add
imul
pop
xor
mov
push
mov
mov
mov
mov
scas
push
fdivr
movl
ss
pop
and
sbb
add
insl
fstpt
mov
int3
cmp
mov
fsubr
das
jbe
into
aam
sti
insb
push
js
add
wrmsr
add
sbb
adc
mov
sbb
push
es
ffreep
sbb
add
xor
push
imul
imul
add
mov
mov
mov
mov
std
pushf
push
lcall
xchg
xchg
jecxz
pop
gs
pop
jbe
out
iret
xor
inc
dec
dec
imul
clc
ss
roll
jno
dec
daa
pop
cmc
inc
and
enter
pop
jbe
dec
inc
in
in
add
repnz
std
stc
push
jae
jg
repnz
add
sbb
mov
fidivl
add
movsl
aad
add
adcl
loopne
mov
icebp
sub
add
cs
add
xchg
xor
mov
pop
mov
aaa
add
jmp
fidivrl
dec
mov
roll
add
add
add
pop
dec
pop
gs
adc
mov
add
add
lret
inc
pop
mov
add
or
pop
push
add
lods
punpcklbw
mov
dec
push
or
stos
addb
push
add
add
jns
mov
dec
adc
mov
mov
add
push
int
and
mov
ja
cmp
iret
push
outsb
int3
bound
mov
push
repz
add
loop
mov
popf
xchg
add
ficoms
pop
popa
addb
fmul
sub
cmp
add
mov
or
dec
sahf
adc
mov
mov
mov
jge
imul
jle
js
pop
scas
int3
nop
add
mov
iret
sbb
fistps
gs
rolb
mov
rolb
mov
pop
movsb
pushf
push
mov
cld
fsubrl
fistpll
add
sub
cmp
or
iret
or
mov
or
add
sbb
add
jp
pusha
add
or
lds
out
into
fimuls
mov
add
mov
xchg
movsb
shrl
test
and
mov
test
mov
mov
push
pushf
cmpsl
std
ss
mov
int
out
adc
mov
sbb
xor
dec
divl
add
and
and
add
adc
test
fistpll
icebp
addb
mov
add
in
bound
mov
dec
jo
mov
test
add
adc
mov
rol
add
push
rcrl
mov
dec
jb
mov
les
lahf
jecxz
fimull
push
add
add
sub
add
bound
mov
pop
inc
add
mov
cwtl
cmp
add
data16
adc
fdivrs
mov
push
add
cmpl
pop
in
mov
add
pop
test
add
mov
xor
sbb
add
dec
fs
call
int
add
jbe
rolb
mov
xor
add
mov
sub
dec
and
adc
mov
inc
sub
lods
mov
loopne
mov
mov
addb
es
mov
in
sub
cld
ror
es
les
push
scas
mov
mov
add
leave
push
mov
add
cmp
xchg
add
and
or
mov
ss
add
pmaxsw
ret
xchg
das
xchg
mov
xchg
add
mov
out
mov
lods
push
pop
addr16
mov
jns
jbe
add
clc
and
mov
ja
test
inc
push
int3
xchg
pop
push
or
pop
cltd
xchg
sub
sub
mov
repnz
add
mov
or
mov
insl
mov
mov
xchg
xor
add
mov
mov
mov
subl
test
into
enter
mov
jb
mov
test
or
cs
movsl
insb
jne
ds
cld
movsl
nop
add
in
pop
mov
add
daa
aam
xchg
add
in
jmp
add
das
push
adc
pushf
jmp
addr16
js
pop
std
jp
popa
test
and
hlt
or
add
mov
adc
dec
lcall
adc
lock
test
mov
lcall
shrl
mov
dec
jle
xor
add
push
lods
push
addb
add
mov
icebp
sahf
sti
ret
addb
aad
daa
roll
push
xor
mov
fadds
and
arpl
pop
xchg
push
std
or
mov
mov
sti
addb
mov
add
cmp
jmp
jae
inc
mov
popf
or
pop
iret
std
push
add
jg
sbb
fdivs
jns
lods
xchg
gs
cld
sub
cmp
add
mov
mov
scas
in
dec
xor
adc
js
leave
adc
xlat
sarl
pop
push
jae
and
dec
push
add
mov
lret
add
mov
or
add
add
cmp
enter
mov
inc
or
jmp
and
jl
mov
and
sub
jns
xchg
jb
mov
jb
mov
add
repnz
cli
fnsave
add
mov
lahf
jge
xor
and
shll
pop
inc
add
mov
or
in
mov
mov
add
frstor
mov
test
aaa
popa
mov
add
outsl
call
das
pushf
ja
insb
push
xor
mov
dec
push
sbb
test
push
mov
js
add
in
push
loope
sti
mov
add
es
fadds
mov
jge
pop
mov
add
sbb
jmp
add
fdivrs
vpshad
add
fs
inc
push
xchg
mov
mov
sahf
add
mov
mov
inc
addr16
mov
orl
fcompl
add
mov
add
and
xchg
pop
inc
push
xor
and
pop
insl
hlt
cli
sub
add
inc
iret
lcall
orl
lahf
dec
icebp
into
xchg
insl
jns
xorl
jmp
ret
mov
daa
lret
cmp
mov
add
or
dec
cld
fcomps
pop
xor
fmuls
das
sbb
outsb
insb
jb
mov
loopne
mov
add
add
lds
cmp
mov
add
mov
and
mov
stos
pop
pushf
gs
xchg
bound
mov
mov
mov
xchg
test
add
add
popl
add
and
mov
mov
decl
and
add
cmp
or
pop
add
mov
mov
jl
pop
jb
mov
xor
mov
cmp
xchg
out
hlt
popf
jl
imul
mov
lock
adc
jae
int3
pop
lods
dec
jecxz
stos
fnstenv
mov
adc
mov
cmc
in
adc
dec
cmp
int
or
or
add
mov
or
add
push
lods
pop
sahf
lock
std
jge
ret
xor
call
in
pop
pushf
mov
mov
mov
xchg
nop
add
sbb
mov
gs
ljmp
xchg
scas
sbb
sub
mov
jne
ds
cmp
mov
add
pop
mov
test
jg
and
roll
and
aam
arpl
add
push
sahf
ss
sub
jp
xor
jp
jle
jbe
jns
adc
inc
outsb
outsb
outsl
sti
mov
add
mov
js
mov
mov
arpl
mov
fwait
or
add
push
xor
add
push
add
movsb
loop
mov
and
or
das
mov
sub
iret
cmc
add
push
repz
mov
call
in
sbb
add
add
push
add
jb
mov
add
shrl
cmp
jg
in
sbb
mov
mov
leave
pop
sbb
aaa
into
inc
sbb
dec
int
mov
mov
out
rolb
mov
add
xor
xchg
cmp
jge
add
fimuls
addb
sbb
mov
push
stos
out
dec
and
mov
mov
xchg
cmpsl
fisubrl
mov
add
xchg
push
sub
xchg
daa
dec
inc
cld
les
mov
int3
or
mov
mov
mov
mov
mov
leave
cmc
sub
popa
imul
add
dec
cld
in
movsb
and
rolb
mov
dec
aam
pop
sub
int3
push
in
repz
fld
mov
mov
add
jmp
fwait
rolb
mov
push
xchg
add
inc
lahf
sbb
push
rolb
mov
mov
jb
mov
add
mov
xchg
aam
xchg
flds
mov
jecxz
add
mov
xchg
push
fisttps
jnp
mov
jo
mov
fidivs
xor
pushf
fnstenv
mov
push
sub
loop
mov
addl
or
stos
daa
pop
enter
lds
mov
add
or
pop
adc
mov
ss
int3
and
mov
add
daa
popa
leave
rcrl
add
xchg
imul
xlat
addb
sub
aaa
addb
sahf
shll
mov
test
out
and
mov
scas
push
add
xchg
rcl
daa
inc
ficompl
mov
outsl
imul
adc
mov
stos
out
xor
mov
test
test
lea
fisubl
in
cld
jg
lock
mov
movsb
mov
fadds
add
push
sahf
xchg
jo
mov
insl
adc
add
xchg
icebp
out
sbb
add
mov
mov
sub
pusha
add
add
dec
or
imul
mov
in
out
icebp
jg
and
mov
roll
mov
mov
mov
push
xchg
mov
mov
into
jle
xchg
xchg
add
xchg
add
loope
inc
xchg
rol
push
pop
aaa
mov
push
out
mov
jbe
xlat
movsl
sbb
mov
jge
adc
ucomiss
sub
mov
rolb
mov
and
xor
mov
mov
adcl
mov
sbb
add
mov
mov
add
cmp
mov
dec
add
cmp
dec
pop
fsubl
add
cs
loopne
mov
pushf
lret
movsl
es
jb
mov
push
das
adc
mov
mov
pop
ds
xorl
mov
push
add
add
sti
xor
add
movsl
mov
into
jbe
dec
xchg
arpl
imul
pop
xchg
clc
popa
rolb
mov
add
add
add
rorl
xchg
inc
add
add
add
pop
inc
data16
mov
movsb
mov
fucomp
push
inc
add
xchg
inc
add
add
hlt
mov
negl
nop
add
add
mov
mov
addb
or
jle
test
cmpsb
and
data16
mov
jle
aas
cmpl
test
sub
and
mov
rolb
mov
add
mov
mov
es
aaa
rolb
mov
testl
fbld
mov
push
mov
inc
push
pop
aad
mov
push
sarl
mov
out
mov
mov
aaa
inc
add
xchg
add
test
add
pop
pop
lahf
in
and
dec
or
enter
das
and
xchg
and
js
push
insb
mov
cmpsl
mov
inc
add
add
cmpsb
xchg
lret
cmc
je
add
xchg
push
sahf
gs
add
sbb
mov
add
pop
dec
and
inc
add
loop
mov
add
mov
inc
ret
mov
jne
pop
testl
notl
cmp
jle
lea
add
mov
cmc
mov
loop
mov
mov
stc
xchg
fidivrl
mov
mov
popa
gs
mov
mov
idivb
jae
fsubs
cltd
sub
sti
xchg
outsb
je
mov
push
jns
fwait
mov
jo
mov
addb
sub
add
mov
mov
add
mov
mov
inc
add
lods
frstor
scas
cltd
dec
lea
mov
ds
mov
pushf
and
or
add
add
add
jge
sti
push
xchg
add
mov
inc
add
jp
rolb
mov
push
dec
jle
dec
inc
rolb
mov
mov
movsl
jle
cmp
mov
mov
jmp
stc
and
enter
add
add
lea
add
mov
mov
rolb
mov
scas
call
test
loope
push
xor
mov
mov
mov
mov
mov
cmp
sub
add
pushl
add
int3
out
cmp
pop
jne
mov
ss
aas
pop
jne
cli
loop
mov
add
mov
xor
adc
mov
sub
aam
movsb
addb
into
inc
mov
mov
je
int
add
fwait
add
cmp
test
test
or
in
push
fldl
ret
popa
cltd
pop
pop
dec
sbb
outsl
inc
mov
mov
mov
inc
bound
mov
sub
mov
add
pop
or
adc
dec
cmpsl
fwait
loope
inc
inc
add
rolb
mov
add
mov
rolb
mov
cmp
test
repz
pop
adc
mov
aas
dec
jle
mov
add
mov
add
or
mov
inc
add
cmpsl
mov
iret
pop
cmp
xor
mov
add
loopne
mov
xor
mov
add
je
cmpsb
sub
icebp
out
stos
aam
fs
inc
es
jle
int
callw
add
mov
movsl
mov
add
out
stc
adc
mov
xchg
mov
rcll
mov
sbb
cmp
cmpl
es
and
stos
cmp
addb
aam
mov
mov
add
add
ds
xor
sbb
nop
add
lea
add
sub
repz
sub
adc
xchg
pop
mov
add
add
popa
add
cld
mov
mov
int3
jb
mov
pop
add
mov
add
jmp
mov
into
aaa
dec
ret
out
aaa
cmp
jmp
stos
push
add
add
mov
mov
adc
xchg
pop
xor
rcl
fwait
das
adc
mov
sbb
inc
cwtl
cmp
ret
xchg
add
mov
lahf
cmp
or
mov
sbb
sub
movsl
inc
mov
dec
adc
call
dec
and
ljmp
and
mov
aaa
cwtl
xchg
dec
xor
mov
pop
xor
or
mov
bound
mov
mov
stos
stos
aas
ret
hlt
mov
jecxz
adc
mov
sub
push
in
inc
add
les
in
out
dec
pop
mov
sbb
mov
mov
mov
cmpsb
les
imulb
xor
les
clc
sbb
mov
add
fsubs
add
shrl
repnz
add
adc
ds
cmp
mov
ljmp
cmp
cmp
add
mov
leave
mull
mov
mov
out
sub
and
mov
loopne
mov
cmp
xchg
inc
jmp
cmpsb
in
mov
es
mov
jno
push
add
enter
sub
jae
adc
mov
call
adc
mov
add
ja
inc
iret
mov
push
push
fldt
mov
sbb
add
mov
rolb
mov
add
insb
mov
pop
inc
pushf
scas
test
mov
dec
push
ja
add
inc
aaa
mov
lcall
mov
iret
push
dec
lods
mov
mov
cmp
or
mov
sub
lcall
jno
jg
add
pop
xchg
add
movsb
inc
sub
add
in
call
mov
inc
and
aaa
test
outsl
clc
mov
inc
add
cld
inc
add
add
mov
add
data16
fistpl
push
in
enter
mov
int3
es
lods
call
fimull
push
xchg
jg
out
lods
jb
mov
mov
mov
test
mov
inc
leave
sahf
mov
add
inc
add
popf
jo
mov
cwtl
sbb
dec
add
mov
inc
pop
test
xor
mov
outsb
rcll
add
mov
cwtl
push
testb
mov
mov
roll
es
mov
scas
cmc
mov
inc
xor
cli
inc
inc
add
mov
mov
aaa
mov
mov
imul
add
ret
xor
mov
popa
or
fsubr
push
idivl
and
mov
mov
jo
mov
add
inc
cmp
or
add
mov
ss
mov
imul
int
push
sub
ficomps
mov
add
mov
into
dec
mov
fisubrs
or
mov
rcll
mov
inc
add
loope
sbb
sysexit
sub
add
iret
or
pop
test
mov
or
mov
outsb
cmp
mov
mov
out
push
icebp
mov
mov
loope
fwait
mov
pusha
add
iret
leave
stos
in
mov
mov
add
loop
mov
pop
push
fcmovb
pop
cmp
jno
add
rolb
mov
shl
mov
js
add
sbb
xchg
je
iret
jae
inc
cmpsl
ja
fbstp
or
rolb
mov
push
pop
fcompp
jne
add
cmp
sbb
mov
add
imul
xor
int3
ret
fbstp
rolb
mov
add
mov
mov
clc
or
jge
add
add
pop
xorl
inc
inc
push
add
lret
add
addb
rorl
push
std
jmp
add
mov
ror
mov
mov
xor
rcll
add
xchg
add
and
adc
sub
inc
and
mov
mov
mov
mov
stos
loop
mov
dec
inc
add
add
iret
pop
lods
mov
pop
into
loopne
mov
mov
mov
mov
push
mov
adc
repnz
add
gs
xchg
jmp
xor
ljmp
adc
jbe
mov
test
add
stos
mov
add
jge
add
xchg
sub
xchg
add
add
lock
lcall
and
push
add
sub
xor
adc
mov
mov
cs
sbb
mov
and
imul
xor
inc
add
mov
in
sub
mov
and
jb
mov
add
add
mov
cmp
arpl
mov
aad
pop
pop
and
jae
fimull
fcompl
mov
pop
jp
add
imul
xchg
lea
xchg
repnz
push
fildll
sbb
bound
mov
cmp
in
add
addb
jbe
jae
cli
adcl
push
rcll
add
add
aaa
xchg
aaa
jnp
add
daa
sub
and
mov
jle
aad
je
movsl
repnz
mov
fidivrl
mov
add
adc
mov
add
cli
mov
cmp
enter
add
jae
mov
add
enter
jne
push
mov
sbb
mov
rolb
mov
icebp
sbb
out
aas
shrd
lret
out
jae
fsubl
add
aaa
sub
add
and
inc
inc
sub
insl
gs
xchg
and
or
cmp
sti
adc
jg
jmp
add
sbb
bound
mov
dec
cmc
in
ja
fcmove
mov
pop
addr16
sub
push
cwtl
imul
sti
mov
stos
mov
mov
mov
add
enter
inc
jecxz
dec
jmp
add
test
mov
test
mov
cmc
scas
jbe
xchg
cmp
xor
or
mov
sub
add
out
out
cmp
clc
cmp
inc
add
movsb
cmpsb
dec
std
rcll
movsb
iret
xchg
and
addb
cld
addr16
or
add
test
loope
addb
lock
add
nop
add
lcall
je
add
add
loop
mov
mov
insl
addb
cli
dec
scas
and
into
test
ljmp
xor
cmp
loop
mov
fsubs
jl
pop
movsl
sub
leave
cmpsb
daa
xor
add
inc
das
outsl
leave
mov
pop
push
push
xchg
add
loope
dec
jae
cmp
addb
inc
ret
add
add
lcall
mov
std
push
std
xchg
adc
loope
sub
sub
sbb
lahf
sub
or
push
add
mov
adc
xchg
pop
imul
sbb
mov
xor
mov
xchg
jb
mov
and
lahf
sub
add
xor
mov
aad
add
push
adc
add
aad
xchg
add
add
out
inc
fs
pop
inc
add
int
sahf
pusha
add
enter
sbb
dec
mov
xchg
int
add
add
sbb
fimull
std
mov
mov
add
mov
aas
or
mov
int
add
movsl
fcoml
data16
data16
pop
hlt
mov
mov
mov
cltd
pop
div
jnp
push
xor
iret
loope
sub
add
js,pn
fisubs
xchg
pop
jo
mov
pop
pop
cmc
call
add
test
add
mov
rol
add
mov
into
ret
jae
fldenv
mov
in
pop
movsl
jmp
in
xchg
ds
adc
mov
inc
jmp
out
mov
jne
jnp
mov
sbb
pusha
add
loopne
mov
jmp
mov
iret
aad
add
add
xor
movsl
daa
aad
cmc
xor
pop
sub
mov
repz
add
cmp
test
add
mov
mov
stos
repz
fmul
addb
int
dec
pop
test
mov
sub
inc
lea
addb
ljmp
sub
adc
dec
pop
cmpsl
ljmp
sbb
add
add
mov
mov
add
stos
jno
pusha
add
mov
mov
lds
jns
movsb
lahf
mov
mov
xor
xchg
add
add
jbe
dec
rolb
mov
mov
outsb
test
sbb
or
pop
sbb
aad
jne
in
cmpsb
loop
mov
out
pop
jmp
xchg
out
filds
or
imul
add
dec
xor
add
pop
mov
mov
and
enter
stc
inc
nop
add
ret
jbe
faddl
lahf
addb
in
cmc
popa
ret
mov
xchg
xor
add
inc
sub
add
mov
pop
add
mov
push
add
and
add
add
pop
inc
xlat
sub
test
aaa
lahf
mov
movntps
add
xchg
push
and
add
bound
mov
and
fmul
jl
mov
mov
mov
cltd
dec
rcrl
fisubl
fcoms
sbb
mov
ret
and
add
daa
push
sub
ljmp
bound
mov
out
ds
or
xchg
sub
mov
cmp
cwtl
dec
stc
bound
mov
dec
lcall
push
rolb
mov
test
leave
mov
xchg
or
stos
lds
fimuls
inc
mov
dec
idivb
dec
cld
mov
sahf
je
call
mov
cmp
mov
iret
mov
fldenv
mov
movups
bound
mov
roll
rolb
mov
mov
add
dec
cwtl
add
mov
es
outsl
test
lahf
adc
dec
xchg
and
mov
fnstcw
mov
adc
pop
mov
push
jbe
es
test
lock
pushf
ret
mov
pop
rolb
mov
ja
push
sbb
adc
mov
pop
sbbl
mov
je
add
xchg
mov
jb
mov
sub
lods
pop
orl
add
loop
mov
dec
dec
insl
ret
cli
push
jnp,pt
jno
andl
nop
add
or
outsl
pop
inc
jle
dec
push
repz
shl
mov
cld
rorl
mov
push
add
cmp
add
inc
add
sbb
jge
pop
insb
int3
dec
xor
sti
loopne
mov
mov
add
and
mov
pop
data16
mov
test
dec
jb
mov
jo
mov
fnstcw
jno
add
sub
or
cmp
leave
dec
js
or
mov
mov
mov
fildll
fsubl
mov
add
sbb
add
cmp
nop
add
jg,pn
jbe
mov
fdivrp
push
jb,pt
mov
push
add
cmp
test
loope
testl
movl
loopne
mov
adc
ficomps
lcall
mov
add
mov
add
dec
dec
pop
fistl
sbb
mov
push
and
pop
mov
jecxz
cmc
mov
adc
add
mov
daa
rolb
mov
xchg
ret
movsb
repnz
addr16
in
pop
fisttps
into
or
mov
loope
push
incl
mov
pop
das
inc
pop
adc
add
popa
or
add
add
mov
popf
mov
push
scas
xor
hlt
jae
scas
jb
mov
data16
fwait
xchg
add
cmp
jle
pop
jle
movsl
aad
leave
dec
mov
ret
pop
jns
cmp
call
add
pop
mov
jmp
add
add
mov
and
mov
nop
add
imul
mov
xchg
pop
jl
data16
lods
testl
mov
dec
and
ret
jl
ja
addr16
mov
add
idivl
mov
add
mov
mov
mov
cltd
inc
dec
push
push
add
pop
lcall
adc
adc
mov
mov
loope
in
add
mov
mov
int3
and
mov
jp
mov
jno
addb
daa
lods
js
test
add
add
mov
insl
mov
add
in
adc
mov
xchg
add
jne
hlt
cmp
xchg
fnstcw
addr16
sti
xlat
clc
mov
inc
add
push
dec
mov
mov
out
mov
lret
mov
jmp
pop
in
mov
mov
push
cmp
in
into
add
daa
fbld
rolb
rorl
movsb
cltd
rcr
fwait
jns
insl
fwait
pop
sbb
cmpsb
add
add
mov
xchg
and
rolb
inc
int
mov
mov
mov
bound
mov
cmp
jg
roll
cltd
aas
cltd
pushf
cwtl
xchg
ret
sbb
fistpl
dec
cmc
aad
repz
xchg
sahf
pop
mov
enter
loopne
mov
sub
or
scas
push
rolb
jns
xchg
mov
mov
loop
mov
xchg
mov
xor
mov
int3
mov
shr
add
add
xlat
sbb
stos
jp
sub
test
sbb
movsl
push
pusha
add
scas
pop
addr16
bound
mov
pop
jg
add
mov
add
pop
fistpll
iret
adc
adc
push
addb
pushl
pop
push
add
fstpt
aad
xor
mov
mov
add
jg
xchg
mov
sub
mov
cmpsb
mov
iret
in
sbb
cmp
rolb
mov
add
mov
dec
xchg
and
add
mov
fstpt
push
daa
out
xchg
xchg
call
ret
loopne
mov
inc
jb
mov
mov
dec
or
mov
aaa
rolb
mov
add
cld
test
mull
adc
pop
bndldx
jno
pushf
fildl
cli
scas
pop
push
lea
jmp
sub
imul
sub
add
mov
jmp
popa
pop
xchg
jp
shrl
xor
mov
dec
adc
fistpl
add
jecxz
out
sub
sub
sti
repnz
stos
cld
bound
mov
adc
mov
xor
mov
xchg
int
stos
xchg
leave
mov
addb
pushf
and
add
mov
push
mov
or
xor
mov
mov
popa
jg
xor
mov
add
xchg
cmpsb
push
popf
xor
loop
mov
lret
or
ret
cmpsb
mov
mov
cmpsl
sub
pop
push
mov
mov
ljmp
lea
dec
bound
mov
mov
aam
or
add
lahf
hlt
or
imul
xchg
jg
std
jle
fisubs
xchg
add
or
mov
fwait
add
int3
fistpl
xor
mov
jge
sub
addb
cmpsb
addb
mov
xchg
int3
mov
addb
xlat
jge
xchg
cmp
mov
inc
loop
mov
inc
loop
mov
or
xchg
mov
mov
testb
add
test
pushw
icebp
aam
movsl
lcall
mov
pop
pop
fisttps
enter
xchg
add
adc
mov
out
scas
jp
dec
pop
push
add
mov
mov
je
ja
addl
xor
mov
mov
jo
mov
movsb
into
dec
int
mov
popf
sbb
mov
outsl
je
mov
xchg
mov
add
pop
jmp
mov
push
mov
insb
push
test
fwait
adc
add
sub
jns
repnz
add
mov
cmpsb
push
mov
and
mov
xchg
sarl
out
add
mov
or
mov
dec
add
std
push
lea
cld
jns
xor
jno
out
and
cmp
inc
add
push
addb
add
popf
lret
jmp
add
jg
cmp
add
jb
mov
add
dec
daa
push
sub
push
xchg
filds
lods
repnz
outsl
jmp
sub
popf
inc
or
sahf
cmp
fwait
push
lock
test
popa
test
rolb
and
add
cmp
cmp
enter
clc
fists
ja
push
pop
negl
jecxz
add
add
rolb
mov
mov
ficoms
mov
nop
add
xchg
add
mov
stos
ja
pop
inc
fbld
popf
jecxz
push
dec
gs
fwait
or
js
jl
add
mov
addb
jl
je
scas
mov
lret
divl
dec
fsubl
aad
incl
add
mov
popa
std
cmp
add
loopne
mov
push
jo,pn
mov
sub
pop
ja
fildl
or
addb
pop
stc
jecxz
mov
pop
adc
push
add
mov
xchg
sub
and
mov
xor
adc
mov
sbb
addb
sub
test
add
imul
mov
mov
push
mul
xor
rcr
rolb
mov
loop
mov
jnp
adcl
sub
add
and
dec
in
mov
and
andl
mov
sbb
fcoms
add
xchg
mov
mov
pop
xor
mov
mov
movsl
cld
push
aam
cmp
sbb
stos
xor
add
test
rolb
mov
scas
jp
sub
add
add
mov
push
add
pop
test
fidivrl
pop
shll
inc
dec
stc
nop
add
sub
movsb
inc
fstpl
or
test
pandn
push
add
jle
insl
xchg
lock
inc
mov
or
js
lock
jnp
add
add
out
xchg
in
add
pop
and
mov
xchg
aas
outsb
xor
adc
mov
or
add
mov
add
sbb
adc
flds
add
adc
add
mov
adc
mov
mov
cmpsb
jge
cmp
mov
jge
dec
loopne
mov
dec
scas
jg
xchg
pop
cmp
cs
movsl
out
xor
mov
pop
out
adc
pushf
outsb
mov
jns
cmp
jmp
add
insb
and
jbe
dec
sub
pop
xor
push
xchg
xchg
jno
add
push
push
out
nop
add
add
pusha
add
lock
dec
add
ss
mov
xchg
repz
push
out
insb
stc
cli
lret
cmpsb
cmp
add
out
es
add
sarl
mov
push
mov
add
add
lods
xchg
int
mov
push
mov
and
mov
mov
scas
xchg
inc
mov
or
and
mov
pop
mov
mov
mov
add
add
and
aam
xor
insl
or
test
cmp
sub
repz
fwait
jnp
mov
mov
xchg
jns
xchg
add
mov
add
mov
ror
add
mov
mov
mov
loop
mov
push
js
ret
pop
pop
pop
fidivrl
icebp
or
mov
cli
out
add
jns
cwtl
and
pop
jmp
pop
ret
cltd
lods
outsl
loope
xchg
mov
xchg
sub
out
dec
nop
add
repz
add
sbb
ljmp
adc
stos
mov
or
mov
rolb
mov
aam
cmpsl
cmc
in
inc
insb
in
bound
mov
add
mov
js
sub
add
stos
adc
stc
xchg
adc
mov
adc
push
push
les
daa
adc
inc
xchg
add
add
pop
pop
cmp
xor
xor
mov
cmp
sahf
xchg
bound
mov
mov
jge
into
xlat
inc
adc
mov
lret
fwait
push
add
and
push
add
aaa
mov
cld
pop
and
nop
add
push
mov
dec
mov
add
and
hlt
add
nop
add
leave
push
add
fcompl
mov
jbe
dec
push
add
mov
test
lret
imul
stc
addb
rolb
mov
cli
inc
icebp
cmp
push
mov
jbe
adc
mov
add
mov
add
in
ret
ficompl
hlt
cmpsb
fimull
arpl
mov
adc
fsubrl
out
hlt
sbb
add
xlat
adcl
mov
add
cmpsb
jle
aam
add
dec
iret
cmp
pop
push
mov
scas
xor
loope
add
pop
jo
mov
js
sub
rcrl
add
mov
pop
cmp
sbb
lahf
mov
cmp
xchg
add
test
mov
dec
dec
aam
mov
jp
cs
push
repz
test
js
daa
cmpsl
mov
sub
inc
loopne
mov
add
add
lock
out
dec
sar
xor
addb
jmp
jmp
push
pop
loop
mov
add
popa
cmp
imul
add
addb
jl
fwait
dec
cltd
add
int3
jecxz
arpl
cmp
fldcw
mov
subl
add
or
cmpsb
popa
dec
mov
jle
lret
push
mov
add
add
mov
mov
fstl
mov
mov
inc
out
mov
addr16
add
inc
lods
mov
add
and
mov
mov
mov
add
xor
jecxz
cld
push
sub
imul
add
jae
xchg
int3
stos
adc
push
add
mov
and
add
xchg
xor
mov
sub
testb
leave
inc
cmp
sti
sahf
mov
mov
dec
jecxz
ljmp
mov
add
jo
mov
lret
or
sub
aad
sbb
jae
pop
ss
push
add
cmp
adc
mov
xchg
sbb
mov
lods
fcmovu
aam
pop
in
inc
cld
nop
add
inc
into
sbb
je
pushf
flds
cwtl
push
dec
mov
lahf
sub
loopne,pn
mov
add
inc
xchg
js
mov
imul
inc
lcall
cmp
add
cmpsl
and
mov
pop
lahf
inc
stos
mov
mov
dec
int3
push
sub
outsl
mov
sti
gs
add
xchg
fistpl
mov
add
stc
aam
das
adc
mov
scas
sbb
add
mov
sbb
push
pop
pop
lret
xchg
xchg
mov
add
push
or
add
and
mov
xchg
imulb
repz
pop
lods
je
add
push
icebp
and
mov
mov
cld
sub
cmc
lcall
add
nop
add
stc
cmp
nop
add
xrelease
adc
mov
xor
imul
mov
dec
adc
mov
add
jge
push
jnp
or
add
js
mov
add
add
jnp
stos
inc
out
push
push
jl
fcmovb
repnz
jbe
movsb
push
jl
and
add
mov
les
cmp
fldt
add
mov
add
popf
mov
addb
jl
shr
scas
int
cmc
xchg
cmpsl
xchg
outsl
fistpll
or
gs
in
xchg
pop
xlat
mov
jno
cwtl
rolb
mov
imul
or
adc
jo
mov
inc
push
sub
fdivl
xchg
sub
js
ds
sub
xor
pop
subl
leave
adc
mov
mov
ds
pop
cmp
inc
or
add
mov
sbb
fsubrl
lret
fisttpl
pop
addr16
add
mov
js
fs
gs
mov
add
mov
les
movsb
pmulhuw
or
lock
jmp
decl
jo
mov
aaa
lahf
cld
sbb
loopne
mov
test
inc
add
adc
pop
inc
add
xchg
fadd
mov
add
test
cld
fistl
jno
insb
add
mov
das
rolb
dec
lea
add
add
or
sub
jle
aaa
mov
data16
dec
test
add
aam
add
add
add
sbb
cmp
add
fsubs
adc
push
add
add
mov
pop
rolb
xchg
cmp
imul
lret
mov
sub
addb
mov
int3
and
mov
pop
or
pop
lods
adc
repnz
mov
push
mov
mov
lea
mov
add
add
aaa
ljmp
cmp
int3
popa
jae
outsl
cmpsl
les
mov
push
add
rcrl
jbe
mov
int
aaa
pop
std
pop
cmp
add
add
mov
cwtl
sbb
push
dec
xchg
add
in
test
jp
add
int3
push
rorl
xor
adc
mov
add
stc
push
push
add
xchg
addb
xor
addr16
nop
add
cmp
scas
jne
add
mov
mov
repz
popa
fxch
mov
subl
imul
lret
out
lahf
and
xor
adcl
jle
mov
mov
insb
push
test
ss
add
cmp
mov
mov
add
dec
pop
movsl
hlt
jbe
add
pusha
add
int3
lods
mov
adc
mov
nop
add
out
mov
add
pop
jae
rolb
adc
pop
leave
arpl
sub
xchg
inc
ss
enter
sub
mov
mov
clc
aas
inc
pusha
add
mov
sahf
es
add
shld
add
addl
mov
jns
dec
mov
add
mov
push
add
mov
sub
popf
add
aas
scas
clc
mov
pop
scas
or
xor
mov
add
mov
mov
mov
mov
cs
cwtl
in
inc
adc
dec
and
leave
ret
push
jl
and
dec
jb
mov
aaa
xor
nop
add
addl
addr16
cld
fldt
add
add
dec
aam
std
pop
hlt
push
add
cmp
mov
mov
js
pop
out
mulb
sti
movsl
enter
and
mov
ret
fcoml
ffreep
cltd
fcomps
mov
insl
daa
scas
into
mov
lock
rcrl
mov
clc
xor
add
sbb
jb
mov
add
data16
xor
mov
add
mov
mov
mov
scas
sahf
pop
loope
nop
add
mov
mov
arpl
daa
xor
in
dec
push
ret
cltd
outsb
bound
mov
jp
mov
daa
outsb
lahf
jmp
std
and
mov
loop
mov
fsubl
add
call
cli
add
mov
cltd
das
pop
insb
arpl
push
inc
add
add
mov
xchg
cli
xlat
adc
mov
dec
lcall
pop
loope
hlt
in
xchg
iret
jl
cli
dec
imul
add
cmp
daa
mov
dec
mov
sub
dec
cli
xor
lret
mov
fwait
add
fmull
repnz
and
stos
adc
mov
add
jne
add
add
int
insl
mov
mov
mov
push
rolb
mov
rolb
movsl
sub
fs
mov
out
add
movsb
das
psllq
dec
aas
or
add
add
rcll
inc
mov
sub
das
adc
popf
mov
sbb
cmpsb
rdpmc
add
mov
xchg
fldt
rolb
mov
dec
jno
xor
jnp
enter
add
inc
add
dec
stos
das
in
sub
jae
push
rol
add
pop
jl
jge
xchg
jecxz
test
xchg
xlat
or
mov
daa
clc
repz
stos
loop
mov
xchg
jp
inc
sub
rolb
mov
jns
aaa
int3
mov
filds
mov
pop
inc
mov
mov
and
mov
cli
inc
mov
add
mov
mov
push
cmp
in
sbb
cld
push
add
mov
mov
jp
pop
movsl
pop
sbbl
mov
das
cmp
add
mov
pop
dec
mov
cmpsl
pop
aaa
xor
cmpsl
popa
int
sub
jo
mov
sbb
add
add
test
add
add
in
pop
pop
dec
add
mov
jae
imul
mov
xchg
and
mov
cmpsb
cmp
mov
in
jns
inc
add
in
out
inc
dec
mov
add
add
mov
and
xor
mov
dec
inc
out
adc
adc
mov
rol
sub
xorl
aaa
jle
xlat
addb
ds
lret
inc
fs
in
nop
add
cmp
add
fs
out
cwtl
sub
mov
stos
ja
rorl
xchg
jb,pt
mov
sbb
mov
add
in
fisttpll
sbb
fucom
jp
sbb
insb
add
mov
xchg
xor
mov
dec
in
jmp
mov
mov
or
add
add
rcl
pushl
bound
mov
add
in
push
mov
cli
dec
mov
add
jmp
scas
cmpsb
dec
adc
sahf
pop
pop
inc
add
add
cli
sbb
dec
leave
iret
mov
jmp
sarl
insb
dec
xchg
or
and
mov
lods
jae
dec
addb
adc
mov
repz
sbb
add
shl
arpl
and
mov
mov
mov
es
dec
out
daa
lea
and
mov
enter
movsb
out
or
add
mov
xor
jmp
xchg
cmpsb
push
jne
repz
jne
mov
cld
sbb
add
mov
loope
mov
testb
mov
xchg
ret
push
inc
mov
mov
add
jl
mov
imul
sub
mov
xchg
cmpsl
enter
ret
mov
addb
fnstenv
xor
mov
xchg
xchg
add
aad
lret
mov
into
mov
adc
mov
mov
add
mov
lret
cmp
add
mov
cmc
stos
jb
mov
bound
mov
adc
hlt
ss
inc
push
je
rolb
mov
push
cmp
lret
add
and
push
addl
xchg
mov
int3
inc
ds
mov
xchg
mov
add
mov
mov
dec
loop
mov
popf
mov
push
add
add
fwait
inc
add
int3
mov
mov
aaa
ficoml
arpl
fcoms
add
ds
add
sub
sbb
push
mov
stos
insl
mov
add
jae
mov
adc
xor
add
push
in
out
mov
loopne
mov
add
mov
mov
fs
es
and
add
mov
mov
pop
or
cmp
ret
rolb
mov
aam
stc
popf
into
push
adc
xor
mov
dec
push
cltd
aaa
mov
mov
inc
cmp
push
jge
jns
pop
inc
mov
mov
add
fs
add
add
adc
jp
mov
loop
mov
add
int
xchg
stc
inc
sbb
pop
in
pop
or
daa
jbe
sbb
insl
fsubrl
ret
cmp
add
mov
in
lret
xor
mov
inc
xchg
fucom
jne
xchg
add
add
and
add
pop
cmp
mov
push
adc
fstl
lock
adc
sub
mov
les
xor
cmc
dec
in
or
scas
addb
inc
add
adc
sbb
mov
mov
imul
jns
pop
sbb
mov
mov
int3
cmp
aaa
test
mov
fst
add
mov
sti
mov
cmp
addb
aad
add
sbb
mov
xchg
cli
insl
mov
sbb
cmp
add
pop
in
inc
xchg
rolb
adc
das
mov
in
push
ljmp
adc
xor
jp
add
add
dec
xor
scas
push
test
ds
push
sub
add
mov
or
stos
mov
dec
into
cmp
in
mov
mov
leave
ret
lods
scas
push
bound
mov
add
sub
ja
mov
imul
mov
arpl
stos
mov
mov
pop
sub
mov
popa
and
jnp
mov
cld
test
mov
pop
ret
dec
lea
add
dec
repnz
sahf
inc
dec
jmp
pop
xchg
jne
xchg
xchg
loop
mov
in
xor
loope
push
add
lds
mov
test
fs
sti
in
lret
cmc
pop
negl
push
sub
test
dec
mov
mov
add
xchg
mov
mov
mov
pushf
es
mov
adc
mov
add
fisubs
cli
adc
mov
out
ja
push
out
in
push
dec
dec
jge
ffreep
add
movsl
in
mov
mov
fs
add
sbb
add
mov
mov
add
stos
xor
repnz
mov
add
in
inc
mov
mov
xor
sbb
push
add
lds
frstor
pop
adc
mov
mov
hlt
pop
xor
mov
sub
loope
imul
cmp
mov
das
popf
pusha
add
stc
xchg
sub
xor
and
mov
lahf
xor
push
fiaddl
jmp
add
mov
mov
adc
cwtl
jecxz
jl
add
xlat
shrl
pop
fs
push
pop
not
pop
popa
loop
mov
add
rcl
and
mov
jl
add
mov
push
xor
mov
test
mov
pop
dec
xchg
les
jnp
rorl
ficoml
sub
cmp
imul
jo
mov
mov
or
sub
addb
sub
xor
out
movsb
sub
loop
mov
cmp
rol
jge
fldl
dec
xor
add
test
add
add
xor
mov
arpl
and
and
mov
add
add
mov
bound
mov
lcall
xor
xchg
push
mov
pop
push
add
imul
xchg
mov
jo
mov
pop
inc
cs
mov
pop
or
mov
fcomi
pop
ljmp
add
scas
pop
iret
cmp
add
add
ja
dec
and
mov
pop
in
cmp
jb
mov
inc
test
xor
mov
mov
loop
mov
mov
push
outsb
movsl
aas
ss
aaa
lret
mov
adc
mov
aam
sub
or
cmc
or
mov
and
mov
dec
fsubr
in
sahf
push
add
mov
movswl
cmp
add
fbld
inc
addb
sub
in
test
pop
lahf
mov
add
xor
mov
mov
add
mov
mov
test
mov
push
rolb
mov
cwtl
push
add
sbb
xchg
inc
add
mov
clc
arpl
jns
fsts
add
cmp
mov
mov
leave
aam
insl
jmp
imul
je
pop
outsb
jno
fstl
inc
dec
inc
aas
and
mov
mov
enter
mov
addb
xchg
out
cmc
lahf
mov
add
pop
addb
pop
mov
cltd
adc
xor
jo
mov
inc
pop
and
mov
and
lcall
test
or
cmp
xchg
je
add
add
shll
mov
jle
jns
das
imul
enter
test
aam
jecxz
popf
jmp
mov
mov
mov
inc
test
and
scas
pop
cmp
aam
sub
or
mov
inc
add
mov
inc
test
aad
pop
nop
add
mov
jle
fcmovbe
lods
xor
not
mov
mov
add
mov
jg
faddl
mov
add
push
add
cmp
int
imull
stos
mov
mov
xor
rolb
mov
popf
cld
popf
int
or
xchg
lods
divb
mov
add
paddsw
in
imul
lods
stos
and
mov
pushf
mov
inc
enter
or
mov
add
add
fwait
int3
dec
ja
ds
jbe
add
mov
jno
mov
add
jmp
fucompp
adc
adc
xchg
jge
shll
in
imul
adc
mov
mov
inc
int3
scas
test
add
loopne
mov
mov
xchg
sbb
aaa
and
mov
dec
aad
push
add
iret
or
inc
inc
add
mov
nop
add
mov
lods
and
ljmp
inc
mov
stc
push
add
daa
sub
in
pop
lea
mov
lea
repnz
loopne
mov
pop
mov
ret
mov
or
and
mov
lret
mov
je
push
lahf
bound
mov
arpl
add
pop
cwtl
int3
into
fists
pushf
lock
out
ja
clc
xchg
add
addb
stc
fmull
jae
add
in
clc
dec
jmp
pop
je
inc
popf
repnz
in
and
filds
fcomps
fcmovnbe
add
dec
push
add
mov
inc
add
add
mov
jg
add
in
mov
adc
pop
mov
mov
and
mov
fstpt
es
scas
divl
mov
add
mov
jmp
ja
add
daa
bound
mov
repz
notl
sub
loope
xchg
test
add
ja
xor
mov
dec
js
jno
adc
stos
and
dec
lods
gs
adc
mov
push
loopne
mov
fbld
test
or
insb
aad
add
mov
pop
lahf
cmpl
xor
or
mov
mov
add
clc
popf
mov
testb
int3
xchg
mov
in
and
enter
mov
add
std
rolb
cmp
add
daa
sbb
sbb
data16
mov
xchg
mov
mov
add
cmp
rcr
into
fisubs
leave
xchg
pop
sbb
lea
ss
mov
sbb
cmp
lea
faddp
jecxz
cmp
pop
sbb
stos
leave
inc
cwtl
icebp
ja
inc
add
shll
mov
mov
add
mov
cmp
mov
mov
push
add
ja
outsb
sbb
mov
push
cs
xchg
xor
mov
dec
push
mov
xchg
mov
out
jl
lret
mov
mov
cltd
inc
and
bound
mov
sahf
mov
push
addb
lods
xor
and
jne
jge
lds
jle
pop
sub
loop
mov
mov
cli
mov
push
outsb
xor
ret
je
in
call
and
sub
idivb
cmp
adc
mov
mov
aam
in
insb
ret
daa
jb
mov
out
pop
rolb
mov
add
add
fsubr
xor
pop
out
scas
lcall
les
xchg
mov
add
mov
xchg
mov
inc
test
mov
lret
push
pop
leave
push
jle
popa
xchg
dec
mov
fdivs
inc
or
js
gs
shrl
mov
jecxz
divb
rcll
mov
aad
aad
enter
mov
inc
xchg
xor
mov
insb
cs
in
and
mov
adc
mov
aam
push
mov
jge
fwait
cltd
xchg
mov
inc
dec
jp
call
test
shll
add
out
adc
cmp
add
cmp
push
jle
pop
mov
xchg
add
lock
jmp
xchg
lds
jle
sub
sub
dec
sbb
push
push
movsl
movsl
xchg
add
mov
mov
mov
out
scas
enter
sahf
mov
mov
mov
add
sti
rolb
mov
addb
das
jp
int
add
stos
addb
aas
and
mov
sub
dec
xchg
arpl
mov
push
add
mov
mov
popf
lahf
jg
out
cmp
addr16
inc
lds
outsb
xchg
adc
cmpl
or
outsb
mov
mov
out
pop
addb
jo
mov
jmp
and
mov
arpl
add
add
mov
addb
cmp
pop
or
rolb
mov
cwtl
and
mov
stos
ret
loop
mov
icebp
dec
mov
push
add
push
leave
mov
adc
out
push
popa
and
pop
ret
dec
xchg
in
add
cld
pop
bound
mov
fsubrl
imul
add
add
cmp
bound
mov
xchg
stos
mov
push
xor
lods
test
aam
adc
push
test
mov
inc
repnz
mov
mov
fwait
and
cmp
and
mov
cmp
fwait
std
mov
mov
cmp
mov
into
dec
dec
movb
call
add
mov
or
repnz
xchg
jle
adc
adc
mov
loop
mov
addb
jmp
sub
mov
add
and
mov
dec
sbb
inc
je
repnz
jecxz
jl
ficompl
sarl
cmpsl
jg
pop
dec
icebp
scas
xor
sbb
mov
add
mov
cmp
inc
adc
pop
mov
jmp
add
push
ss
in
cmc
xchg
add
ja
sub
add
pop
mov
decl
mov
cmp
add
enter
inc
aam
add
sub
bound
mov
add
cmc
clc
sub
xchg
mov
insb
aaa
jns
xor
add
addb
sbb
hlt
in
movsb
jb
mov
arpl
cmp
in
add
and
and
fsubrs
add
aad
add
add
adc
cmp
add
insb
cwtl
loope
mov
xchg
and
mov
pop
xchg
pop
call
add
mov
daa
mov
xor
mov
mov
mov
in
call
into
sbb
add
out
push
mov
repz
addl
add
into
jg
add
xor
mov
inc
cmp
mov
fidivl
add
clc
cltd
pop
cltd
or
sub
mov
mov
sbb
mov
or
stos
js
adc
fwait
xchg
adc
loop
mov
nop
add
jge
push
xor
mov
add
mov
mov
inc
cs
nop
add
lahf
std
mov
add
mov
add
pop
dec
and
mov
pop
pop
xor
add
mov
push
push
fs
dec
pop
or
add
loop
mov
and
mov
or
sbb
add
sbb
mov
loopne
mov
outsb
movsb
mov
aad
imull
gs
add
add
es
jne
inc
add
scas
mov
mov
jno
test
inc
xchg
dec
sbb
stc
sub
addb
rolb
mov
xor
mov
push
xchg
add
xchg
xchg
dec
xchg
enter
xchg
dec
adc
mov
mov
shll
sub
outsb
test
jns
lds
mov
pop
jl
pop
xchg
movb
xchg
pop
and
mov
cmp
mov
inc
dec
fistpl
rolb
mov
loop
mov
sub
mov
enter
xchg
scas
cmp
repnz
lcall
mov
mov
add
inc
xchg
mov
mov
add
nop
add
rolb
mov
in
jg
jb
mov
sub
mov
push
pxor
pop
push
add
outsb
imul
rolb
mov
test
add
mov
int
xchg
sub
in
leave
fwait
lock
push
add
push
pop
outsb
pop
or
mov
mov
push
push
or
add
out
sub
add
loope
mov
movl
mov
mov
cmpsb
mov
add
mov
push
test
mov
add
cmpsl
aam
shll
add
add
arpl
inc
fdivs
add
mov
addr16
mov
dec
aaa
fs
scas
lcall
add
dec
add
add
mov
in
addb
dec
add
mov
or
pop
das
jns
stos
jno
in
adc
scas
dec
jg
push
aam
enter
add
mov
loope
in
or
add
add
add
rolb
mov
sarl
insl
aas
sbb
add
dec
addb
es
mov
push
rolb
mov
shrl
pop
mov
dec
lahf
addb
into
test
push
addb
in
sbb
pusha
add
inc
mov
addb
push
push
stos
push
dec
pop
in
fistpl
jp
mov
addb
cmp
add
cmpsb
rolb
mov
adc
mov
aad
out
mov
pop
or
test
add
daa
pop
add
mov
sarl
add
mov
push
iret
mov
mov
in
push
dec
push
out
mov
and
mov
sbb
outsb
in
dec
push
addr16
notl
mov
and
jns
xor
mov
mov
mov
outsl
cltd
push
add
movsb
arpl
adc
mov
stc
inc
adc
mov
mov
adc
mov
ret
fbld
movsl
dec
push
push
pop
fidivl
rolb
mov
jge
add
das
sub
rolb
mov
adc
mov
jmp
mov
js
repz
daa
daa
jl
add
pop
pop
fistl
sbb
inc
add
roll
mov
mov
aas
ds
arpl
mov
add
mov
mov
push
ds
stos
lret
ret
push
sahf
and
rolb
mov
mov
sub
and
int3
mov
add
sub
sub
addl
add
mov
cmp
xchg
lods
mov
mov
add
adc
repnz
cmp
mov
ja
and
dec
int3
scas
pop
cld
add
cld
pop
pushf
pop
adc
mov
mov
pop
mov
or
movsb
imul
xor
mov
xor
push
xchg
cmp
add
push
outsb
xorl
push
push
add
in
xor
push
cmc
inc
into
pop
popf
pop
es
jns
movl
ds
scas
mov
test
mov
xorl
rcll
push
ss
stos
out
out
mov
cmp
out
mov
and
mov
mov
out
imull
call
pop
imul
add
daa
ds
mov
pop
xchg
and
inc
push
fsubp
add
adc
mov
mov
adc
das
cmc
negl
add
add
add
mov
add
jbe
sub
xchg
push
out
add
add
sbb
aaa
pop
and
mov
xchg
add
xlat
rolb
mov
xchg
int
add
add
add
rcrl
insb
jns
ja
in
scas
pop
sbb
add
push
arpl
pop
adc
mov
fidivrl
fdivrs
out
xor
add
jmp
int
outsl
repz
add
xchg
add
xchg
add
mov
sub
add
inc
add
jg
repnz
pop
ljmp
push
imul
xor
test
nop
add
popf
inc
rolb
mov
jns
add
insb
in
pushf
out
pop
cmc
mov
add
adc
mov
mov
rolb
mov
jno
mov
fsincos
cmp
add
sbb
cs
mov
xor
fsts
add
mov
mov
outsl
cmp
cmp
lahf
dec
cltd
add
add
lcall
xor
xor
ja
dec
es
pop
sbb
movsb
pop
xchg
jecxz
mov
mov
and
dec
xlat
into
cmpsb
cmpl
add
jb
mov
sar
subl
cmp
mov
rolb
test
hlt
clc
mov
push
xor
cmp
cmp
jp
add
mov
sub
xor
int3
cmpsb
fimuls
fsubrs
push
add
pop
mov
push
movsb
push
lods
adc
cmp
addr16
xchg
add
add
outsb
out
push
mov
inc
add
jle
mov
push
add
or
pop
or
pop
jae
xchg
pop
and
dec
adc
mov
testb
movsb
mov
and
arpl
icebp
cmp
inc
add
jns
stc
fnsave
mov
push
lds
loope
cwtl
add
lds
or
mov
adc
bound
mov
jne
and
mov
mov
rolb
mov
or
add
cld
xor
aaa
push
nop
add
jae
out
add
push
mov
dec
add
repz
repnz
test
push
sti
mov
leave
rolb
mov
pop
ja
pop
push
push
add
pop
filds
data16
sub
pop
scas
out
inc
add
dec
xchg
fs
test
popf
mov
inc
insb
dec
in
loope
add
pusha
add
add
lock
dec
es
or
shl
push
lret
mov
jno
dec
and
imul
out
push
xor
jl
sub
cli
lahf
imul
sbb
sub
xchg
xlat
pop
repnz
mov
jg
cmp
jge
fistpl
add
fbstp
add
into
lcall
cmp
xor
mov
add
add
out
push
cmpsb
lret
nop
out
scas
push
mov
scas
ds
adc
mov
mov
inc
or
je
add
inc
add
or
test
cmp
aad
add
cwtl
repz
lds
inc
add
test
push
inc
mov
add
mov
adc
mov
lods
lds
add
mov
lods
call
and
es
fcmovne
or
dec
jle
add
xlat
pop
jmp
scas
xor
aaa
pop
in
mov
jno
cmp
addb
mov
add
mov
adc
shr
add
mov
push
add
cs
cltd
sub
outsl
dec
mov
mov
or
add
xor
mov
out
jle
pop
outsl
push
lds
mov
sub
add
mov
sahf
loope
mov
push
add
outsb
aas
pusha
add
inc
jo
mov
mov
scas
cmc
inc
add
pop
shll
pop
inc
add
mov
mov
mov
mov
js
inc
ffree
sbb
fldenv
out
ret
icebp
daa
cmpl
or
mov
sub
add
xchg
sbb
add
mov
push
mov
inc
test
jb
mov
inc
in
jecxz
sbb
aad
insb
jle
iret
jmp
push
insl
cmp
add
xchg
pop
adc
clc
jl
cmpsl
xor
xchg
sbb
nop
add
inc
sub
pop
imul
xchg
push
test
mov
lea
mov
fistpll
ficompl
add
pop
add
jmp
test
insl
lods
pop
cmp
das
cmp
rolb
mov
inc
int3
mov
rolb
mov
pop
and
pop
lahf
add
mov
add
mov
pop
bound
mov
mov
mov
cmp
mov
cmp
adc
cmp
in
mov
aad
jo
mov
pop
jl
mov
mov
jnp
sub
imul
ds
inc
xor
mov
aad
jns
dec
xchg
add
das
jno
pop
xor
stc
xchg
sub
xchg
add
add
aam
xor
add
dec
popa
push
xor
mov
mov
mov
xchg
push
pop
sbb
hlt
sub
aam
add
popf
rcr
push
xchg
leave
inc
fs
loopne
mov
xchg
arpl
add
mov
xchg
jg
pop
icebp
pop
loope
adc
es
lock
into
or
mov
xor
mov
mov
xchg
mov
or
push
or
pop
and
add
add
xchg
xchg
and
mov
jl
mov
mov
movsb
sbb
mov
add
mov
testb
pusha
add
xchg
sbb
mov
mov
ljmp
mov
xchg
pop
mov
add
mov
add
mov
inc
add
add
cmpsl
lods
pop
adc
mov
cmpsl
xor
mov
mov
xchg
sub
xchg
js
movsb
lret
les
pop
scas
and
adc
or
jno
mov
cmp
cli
pusha
add
ds
imul
fsubr
sub
and
mov
outsl
arpl
frstor
add
inc
repnz
add
mov
mov
add
mov
dec
and
mov
adc
mov
sbbl
jmp
das
into
xchg
mov
rolb
mov
add
xchg
xlat
rolb
mov
dec
pop
sub
and
jo
mov
mov
adc
dec
sub
addb
adc
mov
inc
dec
or
add
jb
mov
jnp
xor
imul
loopne
mov
lcall
cmpl
mov
inc
aam
loope
inc
shl
pop
adc
mov
insb
loopne
mov
add
test
add
insl
or
jbe
add
mov
xchg
add
add
xchg
test
pop
mov
mov
cmpsb
pusha
add
rolb
mov
loope
mov
loop
mov
fimull
xchg
mull
add
outsb
xchg
scas
add
arpl
add
gs
inc
add
and
mov
or
or
pop
and
mov
cmp
xchg
in
in
xchg
out
push
popa
lret
jns
xchg
or
clc
or
int3
adc
cld
shll
dec
mov
fisttpll
out
cmp
add
test
add
lds
mov
xchg
sub
push
hlt
xlat
mov
jb
mov
add
inc
add
add
xchg
sbb
test
inc
mov
rcrl
mov
iret
adc
inc
jb
mov
add
xor
mov
push
pop
cmc
mov
add
mov
loope
lcall
fistps
or
leave
push
push
addr16
xchg
push
pop
cmpsl
fadds
loope
mov
cmpsl
out
cmp
rolb
mov
mov
sbb
out
xchg
sub
lea
out
sahf
cli
fldenv
mov
push
adc
sub
rolb
mov
add
push
adc
data16
pop
pushf
cmp
fcoml
pushfw
mov
sti
scas
dec
inc
fsts
out
aam
clc
cltd
jo
mov
decb
outsl
lahf
sub
pushf
xchg
cmp
cmp
add
jo
mov
mov
ds
lahf
outsb
addb
and
cmpsl
cmc
out
pop
sbb
mov
jmp
mov
jnp
test
pop
mov
mov
roll
enter
fisubl
add
int
sub
add
add
jge
fstpt
mov
sarl
lock
mov
mov
mov
inc
and
mov
add
ja
ds
add
mov
add
mov
or
inc
jae
xchg
add
mov
in
dec
or
imul
add
mov
mov
fcoml
mov
add
add
inc
pop
pushf
bound
mov
cmp
dec
push
push
fcmovbe
mov
outsb
popf
dec
sbb
rolb
mov
loopw
mov
add
pop
mov
js
mov
stc
cmp
insl
dec
or
add
xchg
pop
add
add
add
cli
ja
add
mov
xor
mov
add
std
gs
cmpsl
outsl
adc
mov
add
inc
xlat
cwtl
rolb
mov
add
or
aam
add
int3
jae
lcall
add
leave
lcall
loopne
mov
cmp
mov
popf
mov
lods
mov
mov
stos
int3
out
push
mov
xor
mov
jmp
inc
repnz
cmp
add
mov
dec
popf
cmpsl
xchg
mov
push
mov
pop
in
dec
push
movsl
mov
repz
movsb
pop
add
std
sbb
adc
or
es
insb
icebp
push
sbb
push
rolb
mov
jbe
add
cltd
xlat
pop
lock
add
cmp
sbb
ret
testl
xchg
add
out
test
lods
jp
or
mov
cld
jge
hlt
outsl
and
mov
add
mov
repnz
pop
fs
add
adc
imul
test
mov
cmp
inc
add
inc
add
and
sub
xor
mov
int3
pop
cmp
add
gs
mov
pushf
mov
icebp
sbbl
movd
fisubs
mov
add
sbb
loope
cmp
push
push
scas
or
sahf
mov
stos
cmpsl
jg
lock
dec
dec
jbe
data16
incb
add
add
push
jmp
int3
mov
dec
int3
adc
add
sti
dec
sahf
cmp
and
cwtl
addb
cs
xchg
ss
mov
int
cmp
mov
outsb
sbb
icebp
push
sti
in
cmpsb
lock
push
outsb
fwait
loope
scas
cmp
insl
pop
loope
add
add
mov
imul
scas
fmull
lods
test
add
sub
mov
cmp
adc
test
push
sub
divb
ja
add
fcomps
dec
int3
mov
add
loope
aas
pusha
add
mov
addb
std
push
aam
and
mov
mov
mov
test
jmp
mov
push
fbld
add
xchg
movsb
arpl
pop
icebp
ljmp
xchg
sbb
add
add
jl
in
loop
mov
xchg
test
mov
add
xchg
xor
jae
jp
add
push
mov
inc
sbb
test
stc
dec
mov
test
add
inc
aaa
adc
mov
out
jmp
and
mov
dec
loope
imul
add
mov
mov
add
add
mov
iret
lods
mov
sub
sub
adc
adcl
iret
ficoms
pop
outsl
stos
jmp
test
scas
or
lds
in
ljmp
push
pusha
add
add
leave
jbe
push
or
imul
inc
fistl
jae
repz
add
ds
mov
add
addb
js
out
inc
push
xor
pop
gs
lds
or
cmpsb
les
lcall
test
mov
mov
dec
inc
jbe
add
dec
jmp
jbe
mov
xchg
enter
mov
outsl
aas
push
outsl
push
add
movsb
mov
testb
mov
nop
add
adc
mov
jb
mov
in
push
movsl
jg
push
mov
jge
out
add
mov
mov
sub
push
add
fcompl
add
rolb
mov
sbb
xchg
add
cmpsl
xchg
push
mov
arpl
add
mov
add
ljmp
sub
stc
imul
insl
dec
push
dec
push
pop
mov
mov
fcomp
xchg
jle
add
arpl
int
mov
mov
sub
pop
push
in
lock
cmpsl
dec
xchg
mov
cld
cmc
addb
mov
jmp
pop
in
test
cmp
mov
scas
clc
jns
imul
sub
movsb
rolb
fwait
ss
sbb
sub
mov
mov
mov
xchg
add
mov
cltd
jnp
pusha
add
aaa
cs
sub
cld
mov
out
mov
and
mov
mov
inc
jmp
add
adc
popf
stc
movsb
mov
mov
pop
sbb
add
xchg
outsb
dec
jnp
pushf
add
mov
add
movsl
in
lahf
push
xchg
pop
inc
jb
mov
jo
push
int3
out
or
pop
add
mov
adc
push
add
cmc
pop
lcall
mov
xor
mov
cmp
scas
sbb
mov
mov
jg
mov
fisttps
mov
lret
add
imul
mov
fnstsw
ret
pop
rolb
mov
mov
das
jae
int3
jo
mov
sub
add
mov
lea
push
add
jnp
mov
mov
xlat
out
fmulp
add
mov
mov
je
push
mov
cmp
fs
inc
add
mov
mov
enter
int3
aad
add
push
push
xor
hlt
jmp
in
or
cs
add
mov
xor
mov
mov
pop
cmp
mov
fildll
icebp
jo
mov
or
cmp
mov
mov
icebp
fsubl
sub
cmp
add
inc
add
jns
cmp
bound
mov
fnsave
mov
add
mov
repz
jmp
outsl
iret
cs
mov
xchg
add
sub
movsl
movsb
xchg
or
add
add
pop
xor
cld
inc
push
dec
fdivp
test
add
fs
insb
fidivrs
push
add
pop
cmp
jbe
and
mov
push
and
mov
add
add
add
in
sahf
mov
pop
scas
add
stc
addb
or
sbb
inc
add
mov
jge
add
es
aaa
cmp
jo
mov
mov
pop
out
rolb
mov
add
mov
mov
pop
xchg
lret
iret
lret
add
pop
sbb
decl
mov
mov
or
jbe
negb
add
dec
je
into
adc
mov
jl
xor
mov
leave
xchg
xchg
inc
add
mov
cmp
inc
add
out
pop
cli
daa
pop
sbb
in
nop
add
mov
mov
push
in
fs
sub
rolb
lock
mov
add
popa
pop
aam
lods
inc
iret
sbb
pusha
add
and
xor
mov
push
push
inc
mov
xor
rolb
stos
lahf
pop
lcall
test
jns
stos
sub
hlt
cmpsb
arpl
add
add
test
add
xchg
add
lret
dec
fldt
ret
jne
pop
cmp
bound
mov
fistl
fwait
xor
movsb
int3
push
xchg
jno
add
outsb
popa
pop
or
push
in
pop
icebp
dec
sub
add
sahf
mov
mov
mov
jge
xor
xchg
sbb
cltd
pop
pop
cltd
mov
push
call
add
add
mov
adc
mov
mov
insl
push
es
out
jae
mov
mov
inc
xor
rolb
out
lahf
das
cs
add
lea
xor
popa
push
decl
mov
mov
add
sti
jne
mov
mov
mov
stos
or
xchg
enter
in
scas
lahf
mov
push
push
call
nop
add
mov
inc
xor
mov
xor
mov
cmpsb
lahf
jns
cs
add
aas
sub
add
imul
mov
mov
decl
add
xchg
push
push
add
mov
mov
sub
add
scas
shll
add
add
lods
imul
cmp
enter
add
mov
add
or
jb
mov
std
and
mov
ror
lahf
push
repnz
add
add
ss
outsb
cmc
cwtl
leave
ja
add
scas
push
xor
sti
inc
jecxz
nop
add
ja
xchg
int3
dec
push
jge
lods
inc
add
inc
inc
cmpsl
mov
aas
fcoml
mov
fists
sub
dec
or
lahf
imul
mov
pop
cmp
ret
mov
fcoms
pop
mov
pusha
add
out
addb
sub
mov
mov
lcall
jbe
sbb
inc
sbb
add
add
es
or
into
inc
inc
jl
out
fs
addb
xor
scas
sti
sbb
call
pusha
add
jge
aas
or
jmp
push
iret
nop
add
mov
std
out
dec
inc
xchg
jmp
clc
in
pop
loop
mov
andl
mov
xor
add
cs
rolb
mov
add
es
push
inc
add
fsubrs
stc
ret
push
push
in
mov
push
xchg
push
xor
xor
mov
addr16
scas
popf
and
test
add
mov
sti
push
fadds
jne
xor
cmp
mov
add
mov
add
mov
jl
insl
adc
mov
es
sbb
je
jo
mov
push
outsl
or
xchg
movsl
out
cmp
inc
add
in
mov
mov
lods
mov
cmc
fcompl
insl
sub
in
cmp
cmp
inc
out
or
add
xchg
rolb
mov
cli
fdivrs
or
add
cmc
int
add
pop
popf
mov
mov
scas
ficoml
add
add
sub
xor
add
jge
addb
cmpsl
aad
movswl
mov
mov
add
ljmp
nop
add
enter
aam
arpl
mov
inc
ficoms
in
movsl
xlat
enter
cmp
mov
mov
addb
or
aam
add
or
and
jns
and
or
add
add
push
inc
adc
mov
jmp
inc
add
add
addr16
push
mov
add
out
std
in
add
xor
mov
sbb
ret
jp
jmp
stc
iret
pop
jbe
mov
mov
inc
addb
add
ss
add
pop
pop
cmp
mov
aad
jge
ficomps
mov
sbb
mov
inc
cmc
leave
cmp
pop
gs
dec
xor
mov
negb
push
dec
ss
data16
add
add
lds
pop
dec
push
mov
add
leave
into
loopne
mov
mov
xchg
ds
pop
aaa
clc
or
leave
fbstp
repnz
jae
mov
mov
add
inc
test
xor
cmp
lock
cmpsb
es
inc
outsl
jno
jle
add
fdivl
mov
es
add
push
sub
pop
or
iret
lcall
mov
adcl
jle
and
cmpsb
mov
sub
mov
sti
cmpsb
cmp
pop
testl
jbe
push
sub
xchg
inc
adc
mov
adc
mov
aad
sti
rorl
pop
call
add
jge
imul
arpl
ja
nop
add
jmp
or
fadd
out
ss
ljmp
ret
and
addr16
mov
daa
jle
dec
andl
rcll
mov
test
in
xor
rolb
mov
dec
push
add
mov
aaa
and
in
loop
mov
mov
add
mov
pusha
add
add
sub
push
push
into
sub
arpl
fwait
jecxz
xchg
mov
test
iret
insb
mov
stos
xor
jge
fiadds
mov
repnz
out
je
imul
in
cmpsl
push
mov
mov
dec
les
lahf
nop
add
dec
sbb
mov
enter
mov
loop
mov
js
sub
pop
pusha
add
aas
and
mov
xchg
daa
adc
mov
mov
lea
or
mov
sub
xor
mov
add
mov
addb
adc
xor
jo
mov
mov
daa
push
stos
popa
inc
add
adc
faddl
hlt
pusha
add
setae
lret
in
popa
outsb
or
mov
cmp
out
addr16
fdivr
add
mov
add
or
pushf
lds
add
sbb
or
dec
xchg
adc
mov
mov
and
mov
mov
stos
mov
jb
mov
mov
notl
stos
fnsave
add
push
mov
rolb
rolb
mov
adc
mov
mov
mov
add
mov
mov
mov
jecxz
add
xchg
sub
pop
jecxz
jge
js
adc
sbb
add
mov
ret
data16
add
push
add
add
imul
or
sbb
mov
xchg
je
hlt
aaa
loop
mov
xchg
mov
lods
add
mov
in
xor
rolb
mov
add
das
jne
enter
adc
pop
inc
test
lods
test
jae
cmp
in
pop
cld
ljmp
out
sub
pushf
lcall
arpl
xchg
mov
add
push
imul
repz
cwtl
movsl
idiv
inc
pop
pop
out
xor
and
mov
mov
push
int3
pop
rolb
mov
lods
pop
aaa
ds
nop
add
stos
loop
mov
add
mov
mov
add
dec
mov
xor
mov
add
mov
add
addb
sub
js
sub
mov
pushf
sub
add
pop
xor
mov
or
das
addb
js
mov
add
add
mov
cltd
or
add
out
jb
mov
xor
mov
repnz
daa
mov
mov
mov
lods
js
out
pop
sub
adc
mov
xchg
cmp
das
out
add
add
repz
add
cmp
ljmp
lock
stos
rolb
mov
arpl
xchg
xlat
xor
fcomps
lret
add
repz
or
ljmp
mov
mov
movsl
pushf
mov
sahf
rolb
lret
lahf
jnp
add
pop
adc
jnp
nop
add
jg
aam
add
into
xchg
aad
add
push
pop
icebp
out
push
stos
out
jge
add
mov
jecxz
addb
mov
push
test
pop
in
add
xchg
cltd
add
mov
sbb
dec
in
lds
mov
or
ret
pop
mov
add
daa
mov
add
jno
popf
jge
jl
cmp
or
mov
mov
add
loop
mov
add
jl
add
lret
nop
add
adc
sbb
aaa
ljmp
std
mov
cld
aad
jne
cs
scas
repz
add
decb
cmc
or
push
mov
scas
repnz
mov
incb
mov
add
add
test
push
push
mov
stc
loope
fildl
mov
add
fstpl
es
or
notb
out
push
fs
add
hlt
ds
das
nop
add
mov
aas
dec
xor
mov
add
add
mov
add
mov
xor
mov
dec
jno
ja
jnp
cmpsl
xchg
add
mov
add
mov
addr16
push
inc
mov
jno
sar
scas
xchg
lea
test
mov
in
adc
pop
jp
xor
add
xchg
sbb
and
addb
jg
dec
in
jbe
xor
pop
inc
into
lock
xor
mov
popa
pop
and
jae
les
or
jmp
addb
addb
push
mov
fdivs
push
sub
in
bound
mov
pop
dec
cwtl
mov
push
push
add
ret
mov
or
cmc
xchg
xchg
sub
sub
sbb
adc
aaa
loop
mov
rol
add
cltd
fwait
stos
pop
repnz
lahf
inc
pop
cmp
add
mov
int3
jnp
jns
mov
mov
add
bound
mov
add
stc
movsb
insb
inc
sub
pop
inc
dec
addr16
mov
and
mov
fs
outsb
es
adc
inc
push
add
inc
mov
fimull
xchg
push
or
call
out
pop
jge
jle
xchg
add
or
stos
cmp
stos
dec
cltd
data16
fldt
sti
add
popf
xchg
and
into
or
jg
ret
repz
xchg
dec
jecxz
pop
or
pop
sti
call
fldcw
pop
push
daa
mulb
push
in
and
pop
shll
xchg
push
cltd
mov
lea
xchg
add
mov
mov
not
add
jne
loope
adc
add
cmp
clc
daa
mov
push
jnp
scas
shr
jne
test
incl
push
imul
lcall
pusha
add
xor
cmp
leave
gs
dec
adc
mov
xor
add
rol
or
add
cltd
daa
fildll
push
add
or
loop
mov
sub
jb
mov
and
mov
cli
mov
mov
mov
mov
mov
mov
aad
jl
std
mov
mov
sub
xor
add
push
and
mov
addl
mov
mov
adc
or
xchg
arpl
mov
fidivrl
add
inc
xor
and
ljmp
mov
mov
mov
jne
enter
cltd
dec
rorl
jmp
add
pop
test
lds
xlat
shll
ja
sarl
xchg
jbe
xchg
mov
pop
lret
xchg
mov
pop
pusha
add
mov
add
movb
adc
mov
lahf
mov
xchg
cmpsl
bt
mov
xor
or
xchg
shr
loop
mov
mov
or
inc
fldt
outsb
lcall
jmp
sub
add
push
mov
fcomps
in
movsb
cmpsb
clc
mov
rolb
mov
std
mov
sbb
mov
mov
icebp
mov
inc
jle
jno
add
fdiv
and
jne
add
bound
mov
les
in
sub
mov
xchg
int
pop
and
nop
add
push
mov
stc
lret
sub
and
mov
mov
ret
dec
negl
stos
test
add
xchg
or
add
in
ja
and
dec
int3
push
add
push
enter
mov
or
out
ret
in
mov
add
adc
mov
mov
mov
push
add
add
add
faddl
add
mov
inc
nop
add
xor
add
jecxz
push
mov
mov
sbb
test
add
and
add
mov
loopne
mov
push
lret
test
inc
jns
xchg
push
add
mov
dec
out
inc
add
push
jbe
loopne
mov
bound
mov
mov
pop
dec
add
mov
rolb
mov
pushf
push
inc
and
mov
mov
adc
xchg
or
push
sbb
push
add
ret
mov
inc
add
mov
test
aam
mov
insb
enter
fidivrl
lcall
pop
mov
jmp
dec
iret
and
jae
call
add
mov
mov
std
dec
mov
inc
add
mov
add
mov
inc
mov
jecxz
dec
data16
mov
mov
daa
and
popf
inc
fildll
push
jl
mov
xor
mov
jne
fldenv
mov
lret
mov
add
sub
stos
mov
filds
add
imul
xchg
cltd
cli
ljmp
add
mov
loop
mov
and
cld
mov
dec
dec
add
mov
icebp
loop
mov
or
mov
adc
mov
pop
pop
mov
mov
dec
jp
mov
add
add
mov
aas
xor
add
push
movsl
call
movsb
js
mov
add
mov
jnp
lcall
mov
add
add
add
ljmp
mov
cli
lods
jb
mov
add
push
mov
mov
xchg
inc
mov
mov
loope
leave
dec
xor
insl
fwait
stos
cmpsb
sbb
or
fwait
mov
add
mov
add
and
arpl
mov
push
add
outsb
push
push
push
push
je
stos
xchg
cmc
enter
push
cltd
pop
lods
ret
inc
sti
mov
pop
fs
orl
clc
stos
add
mov
int
adc
mov
push
jno
jns
or
xchg
or
clc
dec
pop
adc
mov
fldt
xor
imul
jnp
insl
mov
mov
and
imul
add
adc
add
jbe
dec
inc
sub
imul
sbb
xchg
xchg
add
out
mov
sbb
stos
mov
xlat
sub
pop
ljmp
fildl
sub
cmp
add
mov
xchg
push
lret
inc
lods
jnp
push
dec
mov
addr16
add
cmp
jb
mov
or
mov
push
fwait
jmp
test
and
sbb
bound
mov
add
mov
mov
add
fmul
loop
mov
add
bound
mov
out
xor
sbb
pop
test
inc
add
add
stc
addb
cmpsb
test
out
adc
mov
daa
mov
fucomip
push
adc
mov
decb
xchg
daa
int3
es
stos
clc
outsl
and
mov
add
mov
pop
imul
aad
mov
xchg
mov
mov
sub
lea
add
jmp
pushf
ljmp
add
pop
push
dec
sbb
cmp
jne
adc
mov
mov
cmp
add
int3
cmp
jecxz
add
dec
jns
add
ret
sub
add
add
int
nop
add
mov
xor
mov
dec
daa
fidivrl
lds
loopne
mov
bound
mov
cmp
mov
repnz
fstpl
fcmovbe
loop
mov
add
sbb
sahf
sti
mov
xor
mov
frstor
outsl
pop
jle
rolb
mov
add
mov
dec
subl
sub
add
rolb
arpl
aad
int3
or
jge
dec
hlt
lcall
push
test
leave
inc
mov
push
push
pop
jle
nop
add
pop
cmp
lods
out
add
add
dec
repz
inc
test
adc
ljmp
mov
xor
mov
push
dec
push
pop
cltd
push
scas
dec
mov
jecxz
in
idivl
jns
cli
enter
xchg
push
xchg
addb
repnz
lahf
xchg
add
rolb
mov
arpl
mov
pop
ret
mov
dec
test
mov
xor
mov
popw
sarl
lods
lea
imul
add
ljmp
dec
aad
test
jne
in
sub
fcomip
add
popf
test
add
mov
das
dec
addb
cmpsl
mov
mov
in
add
mov
sbb
int
jmp
mov
add
xchg
cmp
lret
jnp
sub
and
and
push
rolb
jo
mov
addr16
mov
dec
pop
mov
mov
add
and
mov
pop
cmpsb
movsb
xchg
push
add
push
add
mov
das
mov
push
js
add
and
mov
movsb
xor
inc
out
leave
cmpl
push
repz
add
adc
xlat
push
add
sub
push
sbb
mov
xchg
mov
mov
mov
add
iret
xchg
add
das
add
rolb
lods
sub
out
cmpsl
push
dec
pop
xchg
push
add
test
mov
xchg
xchg
jnp
inc
jnp
imul
push
inc
add
push
xchg
imul
popf
mov
mov
leave
notl
pop
sub
add
mov
xchg
mov
pop
xor
nop
add
mov
jg
add
sub
mov
icebp
cmp
inc
mov
mov
pop
cli
stc
and
sub
mov
mov
repnz
add
push
or
xor
mov
mov
dec
pop
fistps
in
jmp
mov
cs
cmpsb
aaa
fstp
push
mov
out
xchg
mov
fcomi
add
lods
and
mov
add
pushf
or
push
and
xor
add
cmp
add
add
add
rcl
mov
mov
cmp
insb
sbb
dec
mov
mov
mov
repnz
scas
push
add
pop
stc
xor
std
mov
inc
leave
test
mov
test
push
xchg
add
bound
mov
push
dec
or
dec
outsl
imul
jnp
sti
outsb
or
pop
mov
testb
pminsw
adc
cmpsb
cmpsb
repnz
add
push
loopne
mov
out
in
xchg
movsb
cmp
jae
ljmp
cmp
decb
add
mov
mov
addb
push
push
push
adc
add
imul
dec
push
add
and
add
pop
jle
mov
jns
jge
adc
mov
xlat
fwait
jne
lcall
add
xlat
mov
iret
mov
mov
fstl
add
dec
pop
gs
mov
mov
mov
rolb
xor
mov
adc
mov
mov
jae
add
ret
xor
inc
push
fwait
in
jle
pop
and
mov
add
mov
jb
mov
lahf
das
push
mov
add
add
add
sti
mov
scas
inc
pusha
add
mov
add
rolb
pop
jae
fstps
outsl
xor
mov
rolb
inc
xchg
jae
pop
sbb
add
out
fs
xor
jae
pop
push
add
mov
into
pop
pushf
mov
iret
mov
mov
mov
and
add
add
xchg
add
xchg
sbb
push
push
les
add
jns
movsl
pop
test
mov
add
mov
std
jns
push
mov
les
cs
imul
pop
call
add
jp
sbb
add
jmp
xor
mov
cmp
test
adc
mov
add
mov
mov
xchg
nopl
test
add
add
shll
negb
nop
add
mov
mulb
mov
and
mov
or
testb
lea
xlat
inc
scas
and
mov
stos
lds
xor
data16
inc
jl
fcoml
loop
mov
xor
mov
mov
mov
pop
mov
adc
add
stos
jmp
outsb
adc
mov
and
mov
pop
push
imul
mov
fistpll
add
dec
stc
jno
lods
arpl
popa
lea
xor
mov
jmp
movsl
scas
pop
test
fcomip
mov
sahf
dec
imul
mov
push
add
add
adc
inc
aas
and
add
dec
add
mov
adc
mov
push
popa
scas
sbb
mov
push
fildll
add
mov
bound
mov
push
fs
cmpsb
inc
add
sahf
jge
sbb
adc
mov
mov
adc
add
add
pop
arpl
mov
mov
adc
mov
add
cs
add
icebp
js
lret
jae
shl
callw
add
xchg
js
jecxz
add
mov
ljmp
pop
dec
popf
jae
jbe
inc
rolb
shll
cmp
push
lahf
push
adc
insb
xor
test
mov
mov
sbb
push
scas
dec
adc
mov
adc
mov
jae
jg
xor
sub
lret
fdivl
mov
mov
mov
sbb
mov
pop
dec
arpl
fs
mov
mov
ret
xchg
pop
lds
pop
mull
add
lret
or
sub
mov
inc
fucom
cmp
ficompl
sti
pop
or
jmp
add
imul
addr16
sub
sahf
mov
push
jmp
cmp
imul
aaa
mov
lahf
ret
gs
mov
and
add
xor
push
push
adc
mov
pop
inc
test
mov
mov
mov
mov
mov
inc
add
movsb
out
clc
xchg
cmp
xor
stos
stc
cmc
repnz
mov
ljmp
je
aam
or
outsb
js
leave
stc
jae
dec
addb
cwtl
mov
mov
sub
add
mov
xchg
push
js
repnz
sub
push
sbb
adc
mov
enter
mov
int3
adc
lea
xchg
and
xchg
aas
or
mov
shr
popf
jae
in
add
dec
lahf
jmpw
shrl
lcall
push
mov
inc
scas
pop
xor
mov
rolb
cltd
es
stc
leave
btl
add
mov
mov
mov
add
mov
push
adc
mov
bound
mov
and
pop
dec
mov
xor
mov
add
clc
mov
flds
push
cltd
call
or
mov
mov
add
mov
push
mov
xchg
add
aas
jecxz
push
add
add
inc
fldenv
sub
in
jl
popf
movsb
test
mov
add
mov
adc
imul
sub
sahf
test
sahf
jle
add
mov
mov
int
in
fists
add
mov
stos
call
cltd
repz
mov
mov
pop
lcall
inc
fadd
add
push
pusha
add
add
mov
cltd
jmp
sbb
mov
push
add
jno
xchg
add
xchg
add
rolb
mov
xchg
add
loopne
mov
add
jmp
test
test
and
mov
mov
aas
lods
push
filds
pusha
add
addb
inc
lcall
ja
enter
mov
adc
dec
xlat
add
add
fwait
xor
mov
mov
mov
mov
push
xchg
add
add
or
jae
aas
cmc
leave
xchg
mov
add
mov
mov
jne
popa
mov
pop
push
add
sahf
std
bound
mov
cwtl
push
adc
mov
jmp
stos
scas
pop
dec
cs
addl
add
xchg
data16
pop
jo
mov
enter
mov
inc
outsl
mov
sbb
andl
jnp
addb
and
mov
lcall
mov
mov
or
loopne
mov
mov
xlat
dec
dec
sub
mov
adcl
xor
push
and
lret
mov
data16
int3
and
lods
test
pop
mov
sbbl
adc
add
xor
sub
xchg
popa
aad
push
pop
jns
es
xchg
add
mov
pop
sbb
add
insb
add
pop
cli
mov
mov
test
sbbl
mov
mov
sub
jae
or
shr
loopne
mov
pop
loopne
mov
xchg
adc
mov
add
lahf
mov
mov
mov
jae
iret
add
rcll
fisttps
mov
pop
adc
lock
movups
mov
add
mov
mov
mov
sub
inc
xchg
cltd
in
in
jge
sub
ds
push
push
mov
xchg
jmp
add
add
mov
add
sbb
push
fiadds
add
sbb
add
add
push
add
gs
jg
xchg
dec
inc
xor
mov
test
imul
dec
mov
out
sahf
imul
add
mov
add
mov
add
int3
in
insl
pop
mov
lcall
xchg
loope
lods
mov
fldenv
mov
sub
out
push
sbb
es
outsb
push
bound
mov
push
xor
mov
inc
and
out
dec
or
mov
or
pop
xchg
add
push
add
jbe
add
int3
cli
sub
add
sahf
cld
dec
lcall
das
mov
add
mov
xchg
inc
int3
pusha
add
jns
cmpxchg
icebp
std
loopne
mov
xchg
call
mov
mov
add
rolb
mov
clc
add
mov
add
les
mov
inc
and
je
fmulp
cmp
mov
jnp
add
add
mov
mov
add
or
xchg
loopne
mov
jno
mov
add
popa
mov
xor
mov
add
inc
dec
insl
dec
insb
pop
call
loopne
mov
out
jp
cwtl
push
cmp
pop
or
mov
add
aas
sub
fdiv
add
mov
iret
div
add
lods
mov
mov
stc
mov
rcl
mov
stos
inc
sbb
adc
lret
loopne
mov
jmp
inc
add
mov
lret
inc
or
cmpsb
push
fildl
cwtl
adc
add
mov
cs
adc
ror
pandn
out
fildl
jle
add
repnz
add
jecxz
mov
pop
test
addb
mov
mov
cmp
and
sti
dec
fcompl
push
int
adc
add
imul
xchg
hlt
jl
mov
add
pop
mov
push
xor
in
aad
xchg
add
mov
add
mov
pop
pop
addb
dec
inc
jg
and
mov
aad
mov
push
xchg
xlat
notl
add
cmp
jae
das
push
mov
mov
mov
cmp
add
mov
test
mov
cld
cli
xor
or
add
ljmp
push
xchg
add
ret
lods
clc
stos
cwtl
inc
add
add
std
mov
add
add
xchg
pushf
and
sbb
add
cmpsb
es
xor
mov
jno
fistl
movsl
push
outsb
ds
push
fs
add
aad
mov
stc
pop
lea
bound
mov
sbb
push
icebp
aad
add
cmp
push
xchg
adc
scas
fisubl
add
stos
and
in
jp
mov
sub
pop
add
mov
addr16
addb
xchg
cli
sysret
enter
push
jmp
pop
test
jbe
addb
mov
enter
and
dec
mov
stc
addb
and
mov
mov
negb
or
cmpsl
std
ljmp
mov
jle
stc
outsl
pop
imul
jns
cmp
sti
ret
pop
xchg
add
add
add
daa
ss
and
aas
xor
xor
mov
xchg
xor
mov
and
mov
push
push
pop
into
stos
dec
cld
int3
addb
jns
psrad
mov
or
cltd
push
lret
lds
bound
mov
mov
add
push
sbb
mov
xor
repnz
popf
mov
add
mov
add
ljmp
pop
movb
mov
sbb
lds
mov
dec
inc
add
mov
pop
mov
cmp
jmp
fmulp
rolb
mov
mov
std
aam
xchg
add
insb
mov
add
mov
lret
out
pushf
cltd
popf
mov
adc
mov
xchg
add
mov
sbb
or
cmp
outsb
xchg
xor
mov
jp
mov
sbb
pop
sti
push
xor
mov
add
push
pop
or
push
jge
imul
popa
jb
mov
mov
popl
sbb
xchg
fbld
enter
mov
addb
pop
aad
idivb
add
add
mov
in
decl
inc
dec
enter
dec
jb
mov
sub
cmp
call
fnsave
fnstenv
stos
movsb
rcr
mov
or
lahf
adc
or
add
icebp
and
mov
add
sbb
stos
cmp
push
add
stos
push
add
cmp
dec
outsl
in
xchg
add
mov
xor
push
dec
loop
mov
in
add
jge
add
arpl
ljmp
mov
mov
pop
icebp
cmc
sub
mov
add
mov
pop
pop
or
popa
test
add
movsl
or
cli
lea
dec
fwait
mov
dec
mov
mov
push
add
add
cmp
add
aam
inc
mov
dec
xor
mov
push
dec
repz
dec
enter
incb
push
rolb
mov
mov
add
out
dec
sub
test
inc
jne
sub
mov
add
xchg
or
push
fdivs
mov
ret
aad
or
outsl
mov
insl
add
mov
mov
add
mov
and
cmp
inc
push
imul
pop
adc
or
add
inc
pop
cwtl
aad
dec
mov
mov
xchg
or
add
add
cmc
xchg
push
in
hlt
rolb
mov
jmp
jb
mov
inc
jle
repz
cltd
cmp
lods
mov
in
sub
sub
add
cmp
je
pop
adc
or
mov
popf
jl
add
add
jns
and
mov
jge
outsb
mov
add
mov
in
ret
in
dec
xchg
add
and
add
add
adc
add
add
mov
mov
loopne
mov
outsb
loope
in
sub
inc
fwait
push
stc
shl
addb
imul
add
push
and
mov
rolb
mov
mov
add
pop
sbb
add
add
loopne
mov
add
add
dec
stos
divb
cli
and
mov
popf
std
and
mov
add
mov
xchg
popl
pop
jl
loopne
mov
fwait
cmpsl
xchg
les
sub
pop
je
sub
rolb
mov
cmp
shll
add
arpl
aad
push
in
sbb
dec
imul
mov
loope
add
test
mov
sbb
xchg
mov
loopne
mov
add
mov
nop
add
push
add
add
std
aam
mov
rcrl
sbb
add
das
pop
push
out
pop
data16
add
pop
lcall
fisubrs
pop
data16
cli
mov
mov
cmp
inc
add
scas
or
add
imul
in
loopne
mov
mov
cmpsl
mov
mov
in
add
inc
xchg
adc
mov
push
jns
ret
inc
out
getsec
pop
loopne
mov
aam
call
add
mov
pop
jns
add
outsl
cmp
add
icebp
stos
addb
sbb
rolb
mov
dec
dec
jnp
fisttps
jbe
dec
es
mov
hlt
lods
stos
dec
jae
out
push
mov
mov
test
add
ficomps
add
jl
inc
add
and
jge
xor
mov
pop
inc
cli
jge
adc
int3
mov
outsb
fiadds
mov
add
pop
lret
xor
jge
iret
mov
add
add
add
ja
inc
add
add
fcmovu
stc
mov
cmc
xlat
pusha
add
add
addb
out
mov
mov
lds
cwtl
rcll
mov
add
je
mov
mov
add
add
lret
sub
gs
and
jg
push
mulb
add
push
inc
jae
sbb
popa
jl
adc
add
fldt
subl
sub
and
dec
test
xor
mov
fldenv
mov
add
add
mov
inc
das
leave
ret
popf
dec
inc
add
cmp
inc
in
jo
mov
cmp
mov
mov
scas
filds
mov
lds
dec
add
xchg
loopne
mov
add
sahf
mov
call
jg
mov
aad
jmp
or
sub
jmp
add
mov
cmp
and
or
lock
add
xor
xchg
mov
mov
loop
mov
rcrl
ret
clc
mov
add
xchg
arpl
inc
add
sbb
add
repnz
cld
inc
add
push
add
sbb
loope
scas
mov
pop
mov
add
popl
add
add
lock
mov
loopne
mov
jns
xchg
dec
pusha
add
addr16
dec
out
jg
jmp
jecxz
cld
sahf
clc
dec
mov
out
cmp
add
cltd
in
nop
add
xchg
aaa
add
mov
mov
add
cmpsb
ret
inc
dec
add
addb
ret
mov
mov
add
jge
in
ljmp
add
ret
push
mulb
xlat
xchg
lcall
push
fisttpl
inc
and
mov
mov
cmc
xchg
movsl
sbbl
xor
cwtl
icebp
in
dec
test
push
add
aas
rolb
mov
popa
jle
dec
outsb
or
and
mov
jle
push
mov
xor
mov
add
add
inc
xor
mov
mov
push
addb
jae
je
ret
outsl
pop
push
push
mov
add
sbb
inc
dec
push
inc
aaa
mov
mov
adc
xchg
xchg
sbb
mov
add
data16
dec
pop
pusha
add
lods
push
jp
xchg
mov
scas
sbb
in
cli
jb
mov
enter
sub
add
add
fwait
push
lret
mov
push
add
add
fisubrl
fcomip
add
mov
dec
push
arpl
cs
add
xchg
fnstcw
push
mov
popa
popf
sub
lret
push
adc
syscall
or
ret
cs
inc
mov
pop
dec
filds
mov
adc
dec
mov
mov
stc
stos
adc
inc
and
cld
jmp
push
jns
add
dec
scas
xor
mov
jl
addr16
add
push
iret
xlat
pop
test
jecxz
add
fcmovu
in
int3
bound
mov
incb
jns
xchg
stos
pop
jae
ss
add
cmp
jle
mov
aad
test
xchg
xor
mov
add
scas
scas
pop
fst
in
lods
fidivs
xor
add
mov
add
jmp
call
adcl
mov
popa
push
loop
mov
jmp
mov
jo
mov
xor
mov
gs
cld
or
inc
add
inc
add
insb
in
lods
xchg
mov
fisubs
add
push
lret
bound
mov
mov
ret
and
mov
or
add
lret
add
jb
mov
fildll
test
dec
mull
jns
inc
mov
add
and
add
lock
xor
mov
cmp
out
sub
loopne
mov
sti
jle
es
mov
or
stc
inc
ljmp
lret
jne
shll
sub
mov
xchg
mov
mov
notb
push
mov
add
outsb
rolb
xlat
jecxz
and
sub
push
jnp
mov
add
rcll
fiaddl
out
or
mov
nop
add
jno
or
mov
push
mov
mov
sub
test
mov
mov
mov
mull
inc
jns
cld
movsb
xor
xchg
mov
js
cli
ds
loopne
mov
in
cmp
daa
mov
adc
inc
and
mov
mov
add
mov
dec
mov
ss
push
add
mov
mov
rolb
mov
idivl
bound
mov
add
mov
jnp
lock
movsb
fcom
jns
mov
sbb
xor
mov
add
lret
adc
insl
test
rolb
mov
ficoms
add
mov
insl
mov
add
and
aaa
adc
bound
mov
sub
fwait
sbb
sbb
dec
xor
test
lods
mov
std
mov
pop
adcl
push
add
mov
dec
daa
popa
xlat
out
mov
add
or
push
cmovs
pop
daa
inc
add
mov
ret
ret
mov
sub
mov
add
add
adc
mov
add
and
mov
cmpsb
icebp
mov
outsb
push
push
jo
mov
inc
gs
test
imul
pusha
add
cli
in
or
add
cmp
mov
je
lods
das
std
push
mov
mov
addb
imul
sbb
imul
mov
mov
or
or
mov
and
dec
ds
push
add
add
add
aad
add
scas
in
xchg
add
cmp
loop
mov
jmp
mov
push
add
sbbl
sub
punpckhdq
or
test
xlat
out
ds
stos
lcall
pushf
cli
xchg
dec
gs
sub
pmulhw
jns
xor
mov
and
cmp
clc
bound
mov
xor
xor
mov
aam
call
nop
add
pushf
mov
test
push
out
add
aam
mov
fsubp
add
std
cltd
inc
test
sbb
mov
movsb
mov
inc
add
xor
mov
lods
inc
push
add
sub
mov
add
add
dec
int
jl
xchg
add
dec
xor
and
add
add
and
mov
ds
mov
in
arpl
in
mov
cmpsl
cmpsb
call
push
cmp
add
jle
and
push
add
add
sub
add
loopne
mov
psrad
mov
icebp
mov
mov
pop
insb
cmpsl
push
fnsave
dec
pop
lds
mov
mov
mov
add
rolb
mov
xchg
mov
pop
dec
sar
mov
add
add
add
cmpsb
ljmp
or
xchg
adc
mov
cltd
fcmovb
push
gs
dec
cwtl
xchg
aas
scas
call
mov
ftst
mov
stos
insl
in
mov
pop
mov
add
add
add
sub
pop
call
int3
orl
addb
addb
inc
add
jl
out
push
out
xchg
pop
icebp
clc
fisttpll
xchg
stc
inc
rolb
mov
loop
mov
jle
sub
add
xchg
ds
loope
mov
sub
inc
fisubl
push
sahf
gs
push
fldcw
sub
mov
fisubrl
pop
lods
jg
insb
outsb
adc
pop
out
xor
jge
push
xchg
adc
jo
mov
xchg
add
adc
mov
lock
out
je
lret
lcall
lock
add
mov
xchg
sahf
xchg
addb
lods
fdivr
adc
mov
loop
mov
fxtract
out
push
lods
imul
imulb
inc
mulb
pop
xor
mov
dec
mov
xor
scas
jl
mov
inc
movsb
jno
mov
gs
mov
addr16
lock
aam
mov
loopne
mov
sbb
dec
js
fisttpll
cmp
iret
lahf
repz
cmc
addb
push
xchg
add
outsb
jbe
rolb
mov
rolb
mov
pop
cmp
rcrl
daa
mov
xor
mov
popa
jnp
lock
xor
mov
sbb
enter
add
scas
pop
in
loopne
mov
out
iret
push
pushf
push
add
fwait
mov
popf
push
add
xchg
insl
sbb
add
add
xchg
out
hlt
mov
out
pop
testb
test
pop
pop
lahf
aad
cmpsl
adc
add
sub
movsl
bound
mov
aam
mov
mov
jo
mov
popl
mov
push
into
lret
out
cmp
int3
sbb
push
mov
fwait
pop
push
mov
jp
sysexit
into
lds
loope
jne
fs
pop
xor
mov
ficoml
add
cltd
pop
jbe
xchg
sbb
arpl
sbb
addb
lds
enter
sub
leave
ss
inc
cmpsl
adc
movsl
mov
cmp
lahf
sub
push
test
es
insl
add
mov
adc
mov
cli
dec
arpl
sbb
mul
call
push
bound
mov
addb
cltd
into
lea
mov
movsb
test
pushf
loop
mov
mov
scas
stc
mov
ja
out
imul
test
outsb
lret
les
pop
clc
cmp
cli
bound
mov
push
add
or
movsl
stc
movsb
lods
sub
add
lock
aas
fisubl
mov
sbb
add
add
out
outsb
cld
rcll
xchg
sbb
mov
pop
pop
sub
xchg
add
and
sub
or
jl
pushf
jns
cmp
notrack
ret
cmpsl
pop
jbe
dec
mov
add
add
jge
cld
mov
clc
mov
mov
call
lahf
inc
add
add
pushfw
out
add
mov
add
mov
mov
cmpsb
in
lret
and
mov
imul
add
mov
out
cmpsb
dec
or
inc
mov
into
mov
add
call
jecxz
cmc
xlat
aaa
insw
xchg
cltd
add
lret
xor
adcl
cmpsb
and
and
mov
outsb
call
inc
mov
mov
lcall
test
add
and
fstp
pop
testb
cmp
add
add
add
