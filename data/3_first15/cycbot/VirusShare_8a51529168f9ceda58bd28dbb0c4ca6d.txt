in
loopne
pop
mov
loopne
jne
loopne
xor
loopne
cli
test
mov
movsl
loopne
push
test
loopne
pop
movsb
loopne
push
mov
loopne
pop
test
mov
mov
loopne
clc
mov
loopne
mov
mov
loopne
xlat
movsb
loopne
mov
loopne
cmpsl
loopne
cmpsl
loopne
or
loopne
mov
cmpsb
loopne
cld
movsb
loopne
loopne
iret
cmpsb
loopne
adc
loopne
mov
test
mov
mov
loopne
cmp
mov
loopne
mov
mov
loopne
sbb
loopne
hlt
mov
loopne
and
loopne
movsb
loopne
or
loopne
dec
mov
loopne
int
loopne
dec
test
mov
movsl
loopne
sub
loopne
loopne
mov
loopne
and
test
mov
mov
loopne
xchg
movsb
loopne
push
cmpsl
loopne
out
loopne
jl
loopne
mov
loopne
cmp
loopne
jp
loopne
or
loopne
arpl
loopne
mov
mov
loopne
pop
movsl
loopne
enter
fwait
movsb
loopne
shlb
loopne
clc
mov
loopne
or
loopne
dec
mov
loopne
mov
mov
loopne
pop
mov
loopne
test
mov
mov
loopne
andb
mov
test
loopne
mull
loopne
xlat
test
mov
movsl
loopne
stos
mov
loopne
outsl
mov
loopne
insb
movsb
loopne
add
mov
loopne
dec
cmpsb
loopne
cmpsb
mov
loopne
lahf
movsb
loopne
ljmp
loopne
pop
mov
loopne
mov
loopne
hlt
mov
loopne
adc
loopne
mov
loopne
sbb
mov
mov
loopne
fsubs
loopne
pop
movsb
loopne
push
mov
loopne
inc
cmpsb
loopne
xchg
movsb
loopne
test
mov
test
mov
mov
loopne
sbb
loopne
xchg
mov
loopne
jnp
loopne
xchg
mov
loopne
arpl
loopne
jl
loopne
gs
mov
movsb
loopne
data16
loopne
and
loopne
pop
test
mov
movsb
loopne
inc
test
loopne
cmpsl
loopne
and
loopne
push
test
mov
mov
loopne
mov
cmpsb
loopne
mov
loopne
mov
loopne
frstor
loopne
andl
mov
cmpsb
loopne
pop
test
loopne
daa
movsl
loopne
add
loopne
lea
loopne
sub
loopne
pop
mov
loopne
push
movsb
loopne
mov
loopne
andb
mov
test
loopne
pushf
cmpsl
loopne
push
movsb
loopne
stc
test
mov
mov
loopne
and
test
mov
cmpsl
loopne
xor
mov
loopne
fbld
loopne
repnz
loopne
sbb
mov
loopne
mov
movsl
loopne
inc
test
mov
movsb
loopne
push
cmpsb
loopne
xchg
loopne
mov
loopne
imull
loopne
xchg
loopne
iret
mov
loopne
push
mov
loopne
test
mov
test
mov
test
loopne
mov
movsb
loopne
leave
cmpsl
loopne
scas
cmpsb
loopne
inc
test
mov
movsb
loopne
adc
mov
mov
loopne
clc
movsb
loopne
frstor
loopne
lcall
mov
movsl
loopne
sub
loopne
inc
test
mov
test
mov
cmpsl
loopne
pop
mov
loopne
add
loopne
mov
mov
loopne
inc
test
loopne
xchg
mov
loopne
out
cmpsl
loopne
push
cmpsb
loopne
xor
mov
mov
loopne
push
mov
loopne
ss
mov
mov
loopne
loope
loopne
cmp
loopne
xchg
mov
loopne
add
loopne
leave
test
mov
mov
loopne
mov
cmpsb
loopne
andl
mov
movsb
loopne
pushf
movsl
loopne
mull
loopne
add
loopne
push
test
loopne
mov
cmpsb
loopne
andl
mov
movsb
loopne
in
cmpsb
loopne
sub
loopne
sub
movsb
loopne
fbld
mov
mov
loopne
sbb
mov
loopne
mov
movsb
loopne
cmpsl
loopne
xor
mov
loopne
xor
loopne
lahf
mov
loopne
mov
cmpsl
loopne
sti
movsb
loopne
push
movsl
loopne
mov
mov
loopne
pop
test
mov
movsb
loopne
jae
loopne
adc
mov
loopne
mov
cmpsb
loopne
mov
loopne
out
loopne
out
cmpsl
loopne
or
loopne
inc
movsl
loopne
aam
loopne
fwait
movsb
loopne
pop
mov
loopne
xlat
movsl
loopne
shll
mov
mov
loopne
xor
loopne
aam
loopne
andb
mov
movsl
loopne
in
loopne
mov
loopne
arpl
loopne
xchg
mov
test
mov
test
loopne
andl
mov
cmpsb
loopne
jecxz
loopne
or
loopne
mov
loopne
jns
loopne
adc
loopne
fisubl
loopne
aad
loopne
push
movsb
loopne
push
test
mov
mov
loopne
test
cmpsb
loopne
jle
loopne
cmp
loopne
adc
loopne
ret
movsl
loopne
mov
mov
loopne
push
movsl
loopne
sub
loopne
arpl
loopne
das
test
loopne
cmpsb
movsb
loopne
test
cmpsl
loopne
lret
mov
test
loopne
jmp
loopne
andb
mov
movsb
loopne
add
loopne
fsubs
loopne
fsubl
loopne
imul
mov
mov
loopne
adc
loopne
push
mov
loopne
popa
mov
loopne
lahf
mov
loopne
xchg
cmpsb
loopne
js
loopne
mov
loopne
popf
mov
loopne
sbb
loopne
insb
movsb
loopne
cli
movsb
loopne
push
test
loopne
mov
test
loopne
mull
loopne
shll
adc
loopne
jo
loopne
je
loopne
or
test
mov
cmpsl
loopne
outsb
mov
loopne
and
loopne
cwtl
cmpsl
loopne
lret
mov
cmpsl
loopne
aad
loopne
stos
mov
loopne
pushf
movsl
loopne
push
movsl
loopne
push
test
mov
mov
loopne
adc
loopne
fsubs
mov
mov
loopne
mov
movsb
loopne
jecxz
loopne
sub
loopne
adc
loopne
aas
movsb
loopne
movsb
loopne
inc
mov
loopne
cmc
cmpsb
loopne
dec
test
loopne
and
loopne
mov
movsb
loopne
jp
loopne
pop
mov
loopne
jge
loopne
push
cmpsl
loopne
pop
mov
loopne
pushf
mov
loopne
inc
cmpsb
loopne
jle
loopne
jmp
cmpsl
loopne
aad
loopne
mov
mov
loopne
dec
test
loopne
xchg
mov
loopne
shll
mov
cmpsl
loopne
es
loopne
clc
mov
loopne
movsb
mov
loopne
mov
cmpsl
loopne
xchg
mov
loopne
test
loopne
xor
loopne
pop
test
loopne
pop
mov
loopne
lahf
movsl
loopne
or
loopne
xor
loopne
andl
mov
cmpsl
loopne
imul
loopne
in
loopne
sub
cmpsb
loopne
jmp
movsb
loopne
les
loopne
dec
movsl
loopne
fsubs
loopne
mov
loopne
dec
cmpsb
loopne
cmpsl
loopne
push
movsb
loopne
xor
loopne
push
movsb
loopne
xor
loopne
inc
mov
loopne
cld
cmpsl
loopne
js
loopne
xchg
mov
movsl
loopne
fs
mov
mov
loopne
adc
loopne
cltd
cmpsb
loopne
mov
cmpsb
loopne
es
loopne
pop
mov
loopne
lea
loopne
jmp
loopne
add
loopne
cmp
mov
movsb
loopne
into
cmpsb
loopne
inc
movsb
loopne
sub
loopne
adc
loopne
repnz
loopne
mov
loopne
push
test
mov
movsl
loopne
mov
loopne
clc
mov
loopne
test
mov
cmpsl
loopne
pop
movsb
loopne
dec
cmpsb
loopne
cmpsb
mov
loopne
test
mov
movsb
loopne
cmpsb
loopne
jecxz
loopne
mov
test
mov
movsb
loopne
int3
mov
loopne
cmpsb
loopne
scas
mov
loopne
loop
loopne
imul
mov
cmpsb
loopne
xchg
cmpsb
loopne
jp
loopne
fbld
loopne
aad
loopne
push
mov
loopne
jbe
loopne
inc
test
loopne
and
loopne
xchg
test
mov
mov
loopne
jmp
loopne
jmp
loopne
xchg
loopne
xchg
cmpsl
loopne
pop
mov
loopne
add
loopne
cli
test
mov
movsl
loopne
dec
mov
loopne
dec
movsl
loopne
and
movsl
loopne
pop
cmpsl
loopne
push
cmpsb
loopne
daa
test
mov
test
mov
cmpsl
loopne
dec
mov
loopne
andb
mov
cmpsb
loopne
frstor
loopne
repz
loopne
fisubs
loopne
leave
cmpsl
loopne
sbb
loopne
insl
test
mov
cmpsb
loopne
and
loopne
outsb
movsl
loopne
cwtl
mov
loopne
popa
test
mov
cmpsl
loopne
movsl
loopne
inc
test
mov
mov
loopne
test
loopne
ljmp
mov
cmpsl
loopne
jg
loopne
jecxz
loopne
jo
loopne
int3
cmpsb
loopne
and
loopne
or
movsl
loopne
sbb
loopne
mov
loopne
sbb
loopne
jmp
mov
movsb
loopne
icebp
cmpsl
loopne
repnz
loopne
jge
loopne
inc
cmpsl
loopne
jns
loopne
sub
loopne
and
loopne
mov
loopne
inc
test
loopne
jmp
mov
loopne
sbb
loopne
mov
loopne
bound
loopne
and
loopne
jp
loopne
clc
mov
loopne
repnz
loopne
sub
loopne
cmpsl
loopne
fwait
mov
loopne
pop
movsl
loopne
imul
mov
mov
loopne
mov
movsb
loopne
xchg
mov
loopne
push
test
mov
cmpsb
loopne
test
loopne
xchg
movsb
loopne
popf
mov
loopne
cmp
loopne
sub
test
mov
movsl
loopne
push
loopne
mov
loopne
and
loopne
aad
loopne
jae
loopne
mov
loopne
or
cmpsl
loopne
jns
loopne
aas
test
mov
movsl
loopne
out
mov
loopne
mov
loopne
movsl
mov
loopne
lcall
mov
mov
loopne
mov
loopne
inc
cmpsb
loopne
mull
mov
movsl
loopne
andb
iret
cmpsb
loopne
xlat
cmpsb
loopne
cmp
loopne
pop
cmpsl
loopne
es
mov
test
mov
mov
loopne
add
loopne
and
loopne
lock
loopne
in
mov
loopne
mov
loopne
dec
cmpsl
loopne
mov
loopne
icebp
cmpsl
loopne
cmp
loopne
sbb
loopne
aad
loopne
mov
loopne
aas
cmpsl
loopne
pop
test
mov
test
loopne
test
mov
mov
loopne
sub
loopne
push
mov
loopne
cmpsl
loopne
push
cmpsb
loopne
jmp
mov
loopne
fldt
loopne
and
movsl
loopne
cmp
loopne
lahf
mov
loopne
fisubl
loopne
jge
loopne
icebp
movsl
loopne
test
movsl
loopne
mov
loopne
aad
loopne
mov
cmpsb
loopne
lahf
mov
loopne
cmp
loopne
and
loopne
outsl
movsb
loopne
mov
cmpsb
loopne
pop
cmpsb
loopne
dec
mov
loopne
jl
loopne
dec
test
mov
movsb
loopne
or
loopne
jmp
loopne
lcall
mov
cmpsb
loopne
movsl
loopne
iret
cmpsb
loopne
out
loopne
push
loopne
aaa
cmpsl
loopne
mov
loopne
ret
mov
loopne
lea
loopne
fbld
loopne
and
loopne
jb
loopne
ljmp
mov
cmpsl
loopne
shll
mov
movsb
loopne
lahf
cmpsb
loopne
repz
loopne
and
loopne
and
loopne
mov
test
mov
mov
loopne
dec
cmpsl
loopne
fldenv
loopne
mov
loopne
add
loopne
test
loopne
ret
mov
loopne
jae
loopne
popf
cmpsl
loopne
xchg
movsb
loopne
push
movsl
loopne
push
loopne
andb
mov
movsb
loopne
fbld
loopne
aam
loopne
sbb
loopne
int3
movsb
loopne
xchg
mov
loopne
inc
movsl
loopne
mov
movsl
loopne
cmpsl
mov
loopne
and
loopne
mov
loopne
ds
loopne
arpl
loopne
pusha
cmpsl
loopne
pop
mov
loopne
pop
mov
loopne
push
mov
loopne
dec
movsl
loopne
mov
loopne
in
movsb
loopne
push
cmpsb
loopne
inc
test
loopne
pop
movsb
loopne
andl
mov
test
loopne
adc
loopne
add
loopne
loopne
push
cmpsb
loopne
lea
loopne
dec
cmpsl
loopne
inc
test
mov
movsb
loopne
jg
loopne
popf
mov
loopne
cld
mov
loopne
dec
test
mov
movsb
loopne
pop
movsl
loopne
mov
loopne
out
loopne
insb
mov
loopne
jl
loopne
mov
loopne
push
cmpsb
loopne
mov
loopne
mov
loopne
outsl
cmpsb
loopne
xchg
loopne
pop
mov
loopne
lods
cmpsl
loopne
pop
test
mov
mov
loopne
pop
cmpsb
loopne
add
loopne
inc
cmpsl
loopne
data16
mov
test
mov
movsl
loopne
add
loopne
push
mov
loopne
shlb
loopne
xor
loopne
arpl
loopne
mov
movsb
loopne
inc
movsl
loopne
shlb
loopne
mov
loopne
or
mov
loopne
int
loopne
std
mov
loopne
in
mov
loopne
mov
mov
loopne
sahf
mov
loopne
xchg
mov
loopne
xchg
mov
loopne
fldcw
loopne
lods
mov
loopne
cmpsb
loopne
cmp
mov
loopne
cltd
movsl
loopne
outsb
test
mov
cmpsb
loopne
mov
loopne
or
loopne
xor
mov
cmpsb
loopne
les
loopne
arpl
loopne
inc
movsb
loopne
pop
movsl
loopne
or
mov
test
mov
movsl
loopne
repz
mov
mov
loopne
ljmp
mov
mov
loopne
dec
test
loopne
ja
loopne
movsl
loopne
stc
cmpsl
loopne
xchg
mov
loopne
cmpsb
loopne
adc
loopne
xchg
movsl
loopne
cmpsl
loopne
dec
test
loopne
fbld
loopne
movsb
loopne
nop
mov
loopne
mov
mov
movsb
loopne
andl
loopne
inc
movsb
loopne
push
movsl
loopne
and
mov
loopne
aas
mov
loopne
xchg
mov
loopne
sbb
movsl
loopne
shll
loopne
pop
mov
loopne
mov
loopne
and
loopne
fsubs
loopne
dec
cmpsb
loopne
in
mov
loopne
pop
mov
loopne
cmpsl
loopne
and
loopne
pop
movsb
loopne
or
loopne
out
cmpsb
loopne
xchg
loopne
pop
test
mov
movsl
loopne
pop
cmpsl
loopne
and
test
mov
cmpsl
loopne
push
mov
loopne
pop
cmpsl
loopne
test
mov
mov
loopne
adc
loopne
jo
loopne
xchg
loopne
js
loopne
repz
mov
movsb
loopne
shll
loopne
or
mov
loopne
cmpsl
loopne
mov
loopne
in
loopne
stos
mov
loopne
pop
mov
loopne
out
movsl
loopne
dec
test
mov
movsl
loopne
jmp
loopne
push
mov
loopne
andb
mov
cmpsl
loopne
dec
test
mov
mov
loopne
sbb
movsl
loopne
out
mov
loopne
andb
mov
mov
loopne
fbld
mov
movsl
loopne
out
test
mov
movsl
loopne
mov
loopne
mov
mov
loopne
mov
cmpsb
loopne
inc
test
mov
mov
loopne
pushf
test
mov
mov
loopne
bound
loopne
jns
loopne
push
cmpsl
loopne
and
loopne
and
loopne
or
loopne
jo
loopne
xchg
cmpsb
loopne
jno
loopne
mov
loopne
pop
cmpsl
loopne
out
loopne
fbld
loopne
mov
cmpsb
loopne
es
loopne
push
test
loopne
jae
loopne
es
mov
movsb
loopne
fsubrs
loopne
push
mov
loopne
loopne
loopne
mov
loopne
and
loopne
push
cmpsb
loopne
pop
cmpsb
loopne
sub
loopne
mov
loopne
scas
mov
loopne
movsb
cmpsb
loopne
sbb
loopne
inc
cmpsl
loopne
cwtl
mov
loopne
adc
loopne
adc
loopne
dec
mov
loopne
leave
movsb
loopne
fbld
loopne
sub
mov
movsl
loopne
push
cmpsl
loopne
ret
mov
movsl
loopne
add
cmpsl
loopne
and
loopne
popf
movsl
loopne
aam
loopne
add
movsl
loopne
xor
loopne
push
test
mov
test
mov
mov
loopne
inc
test
loopne
mov
cmpsl
loopne
iret
cmpsb
loopne
mulb
mov
cmpsl
loopne
shll
loopne
xor
loopne
mov
loopne
sbb
loopne
sub
mov
test
mov
movsl
loopne
sbb
loopne
jmp
mov
loopne
jnp
loopne
xchg
cmpsb
loopne
popf
test
mov
mov
loopne
add
loopne
leave
cmpsb
loopne
or
loopne
add
loopne
pop
mov
loopne
lods
test
mov
movsl
loopne
aaa
cmpsl
loopne
mov
mov
loopne
push
test
mov
cmpsl
loopne
mov
cmpsb
loopne
mov
loopne
popf
mov
loopne
xchg
cmpsl
loopne
loop
loopne
adc
mov
loopne
xchg
loopne
lret
mov
cmpsl
loopne
cmp
movsb
loopne
mov
test
mov
mov
loopne
sub
loopne
pop
movsl
loopne
daa
test
mov
movsl
loopne
lcall
mov
cmpsl
loopne
das
cmpsb
loopne
stc
test
mov
mov
loopne
add
loopne
sbb
loopne
outsb
mov
loopne
scas
mov
loopne
repz
loopne
pop
test
mov
test
mov
mov
loopne
test
loopne
sbb
loopne
dec
cmpsb
loopne
xor
loopne
arpl
loopne
pop
mov
loopne
lret
mov
movsb
loopne
call
cmpsl
loopne
int3
movsb
loopne
in
loopne
jmp
loopne
sbb
loopne
lcall
mov
mov
loopne
inc
mov
loopne
cmp
loopne
fsubrl
loopne
push
test
mov
test
mov
cmpsb
loopne
xor
loopne
repnz
loopne
mov
loopne
popa
mov
loopne
xchg
mov
loopne
aas
movsb
loopne
sbb
mov
loopne
test
loopne
jle
loopne
jb
loopne
nop
mov
loopne
pop
cmpsb
loopne
push
cmpsl
loopne
outsl
cmpsl
loopne
inc
test
mov
mov
loopne
mulb
loopne
mov
test
mov
movsl
loopne
js
loopne
xor
loopne
push
test
mov
mov
loopne
sbb
loopne
aam
loopne
arpl
loopne
out
test
mov
cmpsb
loopne
test
loopne
cld
cmpsl
loopne
mov
loopne
and
cmpsb
loopne
aam
loopne
mov
loopne
jns
loopne
stos
mov
loopne
and
loopne
shll
loopne
dec
test
loopne
push
loopne
movsl
loopne
movsb
movsb
loopne
jns
loopne
repz
loopne
test
loopne
xchg
mov
loopne
xlat
mov
loopne
xchg
mov
loopne
sbb
loopne
jno
loopne
hlt
mov
loopne
and
loopne
xchg
mov
loopne
pop
movsl
loopne
test
cmpsl
loopne
rep
loopne
xor
mov
loopne
fisubs
loopne
pop
movsb
loopne
hlt
mov
loopne
loope
loopne
test
loopne
fisubs
loopne
mov
loopne
mov
loopne
sub
loopne
adc
loopne
repnz
loopne
mov
loopne
in
cmpsl
loopne
popf
cmpsb
loopne
jecxz
loopne
mov
loopne
dec
movsb
loopne
popf
cmpsl
loopne
mov
loopne
adc
loopne
repz
loopne
lahf
movsb
loopne
mov
loopne
push
cmpsb
loopne
inc
movsb
loopne
lds
loopne
push
mov
add
adc
add
add
sub
add
out
push
jae
add
clc
mov
add
enter
clc
bound
add
jp
add
pop
add
add
adc
pop
cli
push
stos
and
add
fcompl
negl
mov
adc
add
inc
clc
test
stos
popa
add
cmp
test
or
clc
xchg
psllw
xbegin
clc
in
xchg
sub
clc
xchg
in
cmp
add
sub
repnz
cmpsb
clc
jle
clc
sub
js
sarl
mov
out
imul
add
scas
imul
add
inc
add
not
jecxz
push
push
add
out
iret
das
xchg
xbegin
clc
cmp
lock
jbe
hlt
cmp
dec
inc
clc
dec
adc
add
nop
mov
out
aam
clc
ds
dec
mov
std
mov
data16
inc
clc
and
add
hlt
cltd
mov
xchg
adc
add
dec
mov
cmp
clc
jne
push
push
clc
jae
add
mov
test
xabort
or
add
in
cmp
sub
add
add
add
push
jnp
daa
clc
xchg
mov
pop
dec
lcall
iret
movsl
clc
test
adc
add
clc
stos
repnz
sti
jne
add
mov
add
xlat
into
add
clc
mov
clc
call
add
add
aaa
scas
arpl
add
mov
flds
add
cltd
xchg
cmp
or
mov
das
and
add
add
dec
adc
clc
lcall
inc
clc
icebp
jmp
inc
clc
cmp
sub
add
mov
clc
xabort
clc
jns
add
add
add
cmpsb
clc
pop
xchg
fcmovne
xchg
pusha
add
xchg
ss
jl
and
add
add
jle
jecxz
mov
clc
sub
mov
adc
add
add
jmp
jmp
clc
mov
add
add
and
add
clc
add
and
fnstcw
fldcw
add
push
dec
cwtl
xchg
lret
arpl
add
and
add
scas
pop
fs
jmp
sar
fisubl
mov
mov
inc
clc
ret
jae,pn
add
out
psubsw
clc
int
dec
ss
add
aas
data16
clc
int3
mov
add
add
add
shll
mov
add
dec
or
dec
fisttpl
sub
clc
cmpsb
clc
insb
cli
adc
add
mov
sahf
add
add
pop
pop
jmp
push
clc
jne
clc
sbb
mov
mov
clc
outsb
xchg
data16
mov
out
mov
clc
push
daa
clc
call
out
cmp
add
add
add
sbb
add
cmpsl
clc
aad
clc
test
sub
add
push
sbb
pop
sub
add
in
mov
add
mov
push
add
test
or
cmp
pushf
add
add
clc
push
jge
jne
stos
nop
std
sahf
or
cmp
clc
lods
and
add
lock
clc
sbb
fisttpl
push
jle
xor
pop
lock
add
ljmp
xchg
fwait
gs
xor
add
out
sbb
add
cmp
mov
clc
scas
std
cmp
in
sub
dec
imul
add
add
test
clc
or
cmp
clc
xchg
out
jmp
pop
inc
add
cmp
cmp
xchg
and
add
cs
jg
add
test
xchg
es
cmp
adc
jno,pt
add
imul
jbe
iret
jbe
push
add
jno
add
clc
data16
imul
sub
add
dec
ret
clc
sub
clc
scas
call
icebp
xchg
mov
into
push
jg
clc
test
mov
shll
add
mov
clc
ret
clc
jmp
and
add
or
pop
sub
sbb
xchg
mov
push
add
in
jmp
cmpsb
clc
push
dec
mov
mov
stc
mov
clc
test
scas
popf
adc
add
or
add
xbegin
add
clc
inc
clc
sbb
ljmp
clc
loope
push
add
inc
clc
sarl
jb
add
cmp
mov
pushf
lret
imul
lret
jg
jbe
clc
je
out
jo
add
lock
vmovlps
add
aas
cli
xchg
sub
cmp
neg
add
cmpsl
clc
adc
or
adc
add
xchg
loope
loopne
mov
stos
in
cmp
cmp
addr16
daa
clc
add
add
stos
in
adc
add
shrl
and
int
add
pop
lahf
pop
mov
add
pop
add
add
dec
movsl
clc
dec
pop
mov
fstp
shll
out
push
lret
icebp
add
xor
clc
push
clc
fpatan
loop
cltd
sahf
popa
add
fldl
add
xor
add
out
arpl
add
add
add
xor
add
fstpt
cmp
testb
sbb
mov
push
pop
loopne
xlat
mov
mov
add
pop
loopne
inc
clc
int
fcompl
xchg
dec
cmp
cmp
add
sbb
add
clc
inc
clc
addr16
adc
add
out
or
add
add
xchg
aad
pop
push
add
daa
clc
dec
fistl
into
int3
ds
add
xor
add
jmp
add
and
add
push
add
add
repz
ds
xchg
icebp
nop
aad
mov
clc
and
add
add
clc
out
pop
icebp
mov
ss
mov
add
lret
add
push
pop
negb
clc
and
add
ret
clc
vcvtps2pd
scas
imul
fnstcw
out
xchg
cmpsb
clc
cmp
popa
add
dec
sbb
sbb
clc
mov
clc
and
add
fwait
hlt
cmp
add
xor
add
mov
gs
test
sar
mov
add
jbe
add
jo
add
adc
add
in
xlat
cmp
stos
sub
sbb
in
cld
mov
icebp
stos
addr16
mov
clc
inc
add
xchg
inc
clc
dec
cli
in
inc
clc
insb
iret
push
add
sbb
idivb
scas
outsb
xlat
push
clc
mov
clc
cmp
add
xor
add
mov
jae
add
cmp
jo
add
imul
mov
dec
cmp
test
xchg
lret
in
daa
clc
popa
add
cmp
xchg
xabort
clc
lods
inc
clc
clc
test
rcrl
test
gs
fs
adc
add
test
mul
clc
adc
add
clc
push
gs
or
aad
mov
jl
std
dec
inc
clc
mov
icebp
inc
add
cmpsl
clc
xor
add
inc
clc
sub
into
inc
add
push
sub
imul
test
sar
dec
inc
clc
mov
lret
add
jb
add
sbb
clc
mov
mov
xchg
push
add
lock
jno
add
sub
add
xor
cld
add
add
add
add
out
jae
add
insl
jp
push
add
cmp
xchg
xor
add
pusha
add
and
hlt
movsb
clc
dec
lock
pop
xchg
mov
clc
mov
add
rorb
clc
push
clc
add
add
mov
imul
add
dec
xchg
sub
pop
loopne
xor
add
add
cld
or
rorb
clc
out
clc
inc
clc
loop
jnp
repnz
adc
add
imul
jae
add
add
clc
cmpsb
clc
xor
add
add
add
clc
jns
clc
mov
aas
clc
mov
cmpsl
clc
or
push
add
jp
insl
lods
dec
push
clc
je
cmp
in
dec
cmp
shll
add
add
sub
add
xor
add
pop
mov
clc
test
add
jo
add
add
cmp
test
or
mov
pusha
add
mov
test
sub
dec
inc
add
aam
clc
sarb
leave
and
add
cli
sub
pop
jg
xor
add
add
mov
add
add
das
push
dec
arpl
add
insl
inc
clc
ja
cmp
add
ret
clc
out
lods
popf
nop
mov
sbb
clc
movsl
clc
fwait
push
xor
add
cmpsb
clc
pop
je
clc
sahf
inc
clc
xchg
adc
add
fdiv
add
pop
sub
sub
ret
clc
mov
mov
cmp
clc
repnz
add
or
add
ret
clc
imul
push
outsb
cld
test
lcall
stc
std
bound
add
add
clc
jns
or
inc
add
jmp
add
mov
sub
clc
push
outsl
xchg
or
mov
add
outsl
mov
scas
sar
das
lea
dec
fisubl
insb
out
fldcw
clc
cld
add
add
cmp
add
jge
enter
adc
add
clc
jno
add
xor
add
pop
inc
clc
insl
lods
cmc
dec
xchg
int3
es
ret
clc
int3
and
add
sar
mov
movsb
clc
sbb
push
clc
push
adc
add
clc
je
cmp
xabort
lret
imul
mov
clc
lret
jecxz
jecxz
outsl
mov
push
add
inc
add
push
add
movsb
clc
hlt
jbe
clc
cmc
fwait
sbb
mov
clc
sti
fmull
leave
xchg
adc
mov
add
add
outsl
shl
clc
cli
daa
clc
fisubrl
add
dec
ss
ret
clc
nop
adc
push
jbe
xlat
stos
cmp
lods
mov
clc
movsb
clc
add
add
addr16
mov
pop
out
sbb
add
mov
clc
repnz
adc
loopne
pop
inc
clc
test
fs
loop
mov
xchg
lcall
int3
push
pop
outsl
mov
out
and
add
add
clc
shl
jg
xlat
mov
mov
xbegin
jb
add
clc
and
add
sbb
lock
add
cmp
add
add
inc
add
aas
popa
add
sub
xor
add
add
clc
sub
add
add
fcmovnb
clc
shll
add
cwtl
xchg
mov
jne
add
cmp
loopne
inc
add
cmp
sub
jo
add
clc
fldenv
and
add
add
out
inc
add
push
int3
inc
clc
test
sbb
jle
jg
out
lea
sub
aam
rcl
inc
clc
ret
clc
mov
xchg
jbe
pop
push
or
movsl
clc
test
clc
mov
int
clc
popa
add
mov
push
jl
dec
icebp
mov
add
sbb
add
pop
cmp
xchg
sbb
in
add
clc
xor
jb,pn
add
xchg
xchg
cmp
shlb
sbb
loope
jnp
lret
loopne
adc
add
ljmp
pop
idivb
cmp
mov
arpl
add
push
imul
int
iret
mov
xor
add
clc
out
xor
add
xchg
pop
in
push
cld
jle
and
add
dec
mov
inc
clc
lock
clc
dec
pop
mov
clc
in
and
add
clc
insl
das
jne
add
and
add
cmp
stos
mov
aas
std
jle
adc
retw
fcomi
sub
mov
mov
push
sub
push
push
push
push
push
push
call
and
sub
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
pop
jmp
andl
mov
lea
push
push
push
mov
push
lret
call
mov
clc
dec
add
mov
sbb
pop
aam
add
mov
add
pop
aad
cmp
add
add
pop
xchg
popf
lcall
inc
clc
cltd
or
sub
popf
cmpsb
clc
in
cmpsl
clc
in
or
add
add
sub
pusha
add
gs
push
inc
clc
jns
clc
scas
lahf
inc
clc
inc
add
fidivrs
clc
mov
xor
add
stos
fcmovnu
popa
add
xchg
mov
mov
clc
xchg
cs
fbstp
add
mov
push
add
imul
in
fstpt
negb
lods
push
mov
clc
jne
clc
mov
pop
mov
stos
dec
js
sbb
fstps
adc
add
dec
in
mov
dec
xchg
cmpsb
clc
mov
into
sbb
stc
sbb
add
pop
jae
add
and
add
xchg
xor
add
clc
pop
mov
inc
add
pop
fsubrs
loope
mov
add
pop
repnz
add
add
add
inc
add
hlt
push
adc
rolb
scas
mov
loopne
cmp
dec
fs
nop
push
or
clc
adc
add
es
fs
repnz
xchg
es
out
pop
movsb
clc
sub
data16
adc
add
add
add
mov
inc
clc
sub
roll
clc
aad
aas
in
stos
jno
add
push
leave
test
in
adc
add
inc
add
test
mov
addr16
stc
bnd
add
push
add
jmp
clc
rep
jecxz
fs
push
add
add
clc
push
loopne
adc
add
dec
jp
dec
xor
add
add
shrl
clc
or
sub
sbb
clc
cmpsb
clc
cmp
dec
frndint
sbb
mov
add
add
sti
in
xor
cmpsl
clc
xor
add
clc
out
call
clc
ret
sarb
ss
dec
mov
add
add
add
add
out
mov
mov
clc
add
add
lods
fidivrs
leave
sti
push
mov
pop
pop
mov
cmpsb
clc
jecxz
mov
cs
es
xchg
aad
fsubl
add
daa
clc
mov
mov
add
xchg
pop
sti
xchg
xabort
add
movsl
clc
loopne
mov
inc
add
dec
loop
xchg
test
pop
sahf
in
cld
cmp
call
pop
ss
cwtl
adc
add
add
add
add
pushf
sar
add
sbb
add
or
cmp
xchg
push
push
add
sar
loope
lcall
dec
push
inc
add
mov
fs
or
add
scas
sbb
sbb
fstpl
clc
adc
inc
clc
push
add
ja
jb
add
add
and
add
pop
inc
add
xchg
test
in
sub
or
movsl
clc
mov
lods
inc
add
mov
push
rcrb
clc
pop
cmp
add
add
add
out
mov
mov
add
push
outsl
sub
sub
xor
jp
cmp
jge
mov
add
nop
shrb
mov
nop
aam
clc
jae
add
add
clc
sbb
inc
add
or
gs
dec
xchg
adc
add
stos
pop
scas
cli
mov
xor
and
add
mov
clc
jae
add
cmp
clc
xchg
xchg
in
shll
dec
add
add
dec
es
jge
add
pop
ss
iret
fdiv
scas
imul
clc
mov
out
scas
leave
test
lret
clc
xlat
pop
jne
test
and
add
add
stos
mov
clc
xchg
inc
add
jecxz
inc
add
pop
je
xor
lcall
add
insb
rcrb
adc
add
clc
mov
add
and
jmp
xchg
and
add
sahf
dec
lcall
clc
jg
clc
sub
stos
push
add
out
push
mov
and
add
in
movsl
clc
out
cmp
xabort
jmp
clc
push
mov
cmp
add
mov
in
outsb
mov
jne
loopne
pusha
add
leave
push
add
cmp
mov
mov
add
lods
or
cmp
clc
not
inc
clc
inc
clc
ret
clc
cmc
mov
clc
js
out
push
clc
mov
testb
rolb
add
pop
je
and
add
cmpsl
clc
leave
icebp
ret
clc
cmp
clc
outsb
dec
aad
clc
adc
xchg
scas
test
mov
add
call
jle
mov
sti
push
add
into
inc
clc
pop
mov
push
sub
xor
add
add
pop
fnstsw
add
test
or
ret
mov
inc
add
cs
add
idivl
add
kmovw
add
add
dec
cwtl
jne
clc
push
add
ds
mov
or
add
sub
jle
outsl
gs
stc
pop
shl
clc
xbegin
add
xchg
jb
add
adc
je
pop
jmp
clc
int3
je
clc
mov
add
or
clc
mov
fldl
xchg
mov
sub
cmp
add
cmpsl
clc
insl
shlb
add
add
add
rcrb
scas
das
cmc
scas
sub
clc
xchg
bound
add
mov
cltd
scas
scas
push
xor
mov
clc
loope
xchg
xor
lods
sti
add
lods
lcall
clc
sbb
clc
icebp
enter
sar
pop
jg
fisubs
ds
pop
jecxz
cmp
add
pop
mov
add
mov
movsl
clc
jb
add
xabort
test
push
add
fistpl
xor
add
sahf
scas
xchg
sbb
clc
fdivrs
clc
gs
loop
js
clc
mov
add
mov
nop
dec
sub
clc
jle
inc
add
sar
clc
andps
mov
jne
and
add
test
es
push
add
cltd
mov
clc
adc
add
xabort
jns,pt
pusha
add
dec
push
add
cmpsb
clc
test
dec
imul
mov
in
push
dec
jbe
add
nop
jb
add
clc
das
jmp
clc
enter
test
aad
int3
jnp
xor
add
clc
aas
add
add
clc
rorb
sbb
gs
ljmp
xlat
test
clc
mov
ds
sub
addr16
imul
mov
loopne
ret
dec
mov
fdiv
lcall
data16
adc
add
add
ds
cmpsb
clc
cltd
aad
add
jae
add
ret
clc
adc
add
mov
push
shlb
add
add
inc
clc
ret
clc
push
clc
mov
loope
ret
clc
push
add
xchg
dec
pop
imul
mov
add
clc
pop
imul
insl
adc
add
xor
clc
cltd
mov
and
add
clc
pop
popa
add
lret
enter
add
add
adc
add
filds
add
enter
mov
add
jo
add
mov
mov
cs
mov
stos
std
insl
inc
clc
test
in
sahf
dec
mov
ss
xbegin
add
mov
mov
inc
add
loopne
cmp
xchg
sub
mov
scas
pop
ret
clc
call
pop
jae
add
add
icebp
jae
add
add
add
add
stos
push
add
arpl
add
scas
xchg
es
xlat
and
add
pushf
addr16
adc
add
insl
sbb
clc
push
add
sub
cli
jg
inc
add
cli
jl
pop
push
add
test
aas
sbb
clc
adc
cmp
add
add
push
dec
lcall
and
add
in
jnp
jle
scas
pop
add
dec
out
hlt
or
or
fistpl
add
insb
lcall
add
lods
cmp
add
mov
clc
jnp
push
add
push
dec
aad
add
pop
insl
sub
hlt
mov
xrelease
add
add
cwtl
or
sahf
lods
xlat
mov
movsb
clc
add
add
add
clc
jmp
add
mov
add
jecxz
pop
clc
dec
inc
clc
clc
dec
adc
add
pop
sbb
mov
clc
clc
iret
fcomp
dec
pop
aaa
ret
xchg
sbb
add
clc
shrl
icebp
cmp
clc
cmp
add
xchg
bound
add
ret
clc
add
add
clc
mov
fwait
xchg
cmp
xbegin
sbb
scas
fldt
xchg
push
clc
jae
add
sbb
cmp
mov
pop
adc
add
ret
clc
adc
add
out
loop
je
and
mov
mov
clc
jge
jo
add
clc
call
shll
sub
clc
xbegin
add
mov
add
lahf
mov
clc
stc
std
sahf
jnp
popf
fisubrs
sub
clc
cmp
clc
sbb
jecxz
cmp
add
test
imul
mov
or
rcrl
imul
jb
add
xchg
js
push
add
ljmp
add
aad
clc
mov
add
cmp
clc
sar
xbegin
fimull
add
dec
xchg
pusha
add
sarl
sub
sbb
clc
inc
add
inc
add
xchg
sbb
mov
clc
mov
inc
clc
inc
clc
scas
stos
test
scas
sar
sti
stos
incl
sar
clc
xor
in
in
cld
shlb
add
push
add
ret
pop
fisubl
clc
push
add
mov
loope
pop
ds
scas
adc
push
aas
dec
aam
clc
mov
clc
xchg
inc
add
arpl
add
adc
add
add
cmp
add
iret
std
pop
xor
add
or
std
cltd
ds
int
push
pop
xchg
or
scas
or
add
add
movsb
clc
cli
add
add
add
jg
cmp
cwtl
push
add
out
nop
xor
push
add
insb
sahf
test
daa
clc
xchg
mov
ret
clc
inc
add
adc
add
cmp
xabort
clc
cmp
push
clc
dec
or
jo
add
xor
add
xbegin
add
test
dec
or
aaa
mov
fcmove
and
mov
sarb
add
add
ljmp
sti
icebp
sub
aas
xchg
in
sbb
add
mov
bound
add
add
add
clc
dec
js
cld
test
inc
clc
ficoml
add
xor
add
cld
mov
repz
add
rclb
mov
clc
stos
xabort
scas
aam
dec
pop
sub
pushf
jne
mov
add
addr16
sbb
jns
or
sub
lock
add
pop
clc
insb
xchg
push
cwtl
mov
cmp
add
loopne
mov
push
inc
clc
jg
insl
or
incl
ret
clc
repnz
add
scas
mov
cmp
add
pop
lods
mov
jb
add
lahf
test
imul
daa
clc
das
or
add
js
je
clc
inc
clc
cld
mov
mov
iret
jne
jo
add
mull
add
jmp
and
add
clc
cwtl
stos
fidivs
add
pop
aad
and
fcmovu
cmp
int3
cmp
lock
sbb
clc
mov
add
dec
inc
add
dec
loop
cs
clc
or
or
clc
xor
add
cmp
fdivrl
loop
bswap
nop
mov
clc
push
clc
mov
and
add
clc
push
test
clc
jb
add
or
inc
clc
and
add
ljmp
push
pop
sub
rolb
cwtl
mov
add
or
jp
add
fldt
clc
add
add
add
xchg
test
pop
push
add
mov
add
dec
mov
and
add
add
enter
add
cmc
jb
add
add
bound
add
movsb
clc
mov
lods
out
push
scas
xor
add
jbe
push
out
jbe
fmull
daa
clc
ss
movsl
clc
shrl
pusha
add
cld
outsb
icebp
popa
add
in
cmp
add
or
add
clc
das
jnp
add
sar
clc
aas
bndstx
bound
add
mov
or
add
mov
mov
clc
in
idivb
xor
add
pop
loop
sahf
add
add
add
clc
mov
mov
lcall
cmp
test
fldt
sub
insb
das
sbb
xor
add
scas
cmp
clc
cmpsb
clc
fcompl
add
clc
loopne
xchg
aad
clc
outsl
dec
and
add
popa
add
pop
es
imul
popf
cwtl
cld
add
add
adc
scas
cmc
cmp
sub
add
cmp
add
add
outsb
mov
movsl
clc
inc
add
cmp
lret
mov
add
xor
add
bound
add
clc
dec
mov
sub
jle
mov
mov
jmp
inc
add
sbb
icebp
xchg
push
xchg
add
cmpsb
clc
sub
add
clc
cld
mov
add
repz
fistpll
add
cmp
clc
pop
fsqrt
mov
cwtl
xchg
mov
mov
add
xchg
xor
das
fcoms
cmp
cmp
clc
ret
clc
fiaddl
clc
scas
push
add
mov
mov
clc
out
add
add
clc
add
add
das
hlt
repz
fstpt
clc
inc
clc
dec
push
add
and
add
add
xor
add
clc
mov
add
test
clc
pop
mov
mov
clc
xchg
or
outsb
push
add
and
addr16
push
push
insl
outsl
ja
add
fdivrs
pop
push
or
and
add
ds
ret
clc
cmp
mov
pop
sub
add
jmp
add
add
jg
xchg
xchg
pop
ret
clc
jle
jb
add
icebp
imul
cmp
clc
lock
popf
data16
in
pop
clc
ss
add
add
cmp
clc
xabort
mov
clc
inc
clc
fistpll
and
add
push
add
aad
clc
or
cmp
add
out
rcll
cmp
jp
int3
cmp
dec
es
push
adc
add
pop
add
aaa
lods
mov
clc
push
add
popf
cmpsb
clc
stc
out
pushf
mov
pop
or
repnz
inc
clc
pop
xor
add
mulb
clc
and
add
add
mov
dec
and
add
int
inc
clc
dec
std
outsl
scas
fldt
dec
push
sar
fs
clc
lahf
mov
fsubs
clc
test
leave
and
add
mov
mov
sbb
push
add
inc
add
fidivs
add
add
clc
mov
jp
es
leave
pushf
cmpsl
clc
jmp
enter
insl
jo
add
fs
mov
es
dec
out
movsl
clc
inc
add
mov
clc
add
add
test
pop
sti
out
mov
dec
leave
mov
add
aas
cmp
shlb
add
sbb
push
add
fnsave
insl
cmp
mov
add
xchg
mov
clc
or
mov
in
aad
mov
xbegin
ss
xbegin
clc
xchg
push
xchg
and
add
fadds
add
add
aam
mov
pusha
add
push
add
cmp
add
clc
jbe
sbb
pop
vucomiss
add
mov
stc
jecxz
in
inc
clc
xor
add
add
into
push
push
add
testl
insb
sub
xchg
das
jno
add
gs
in
clc
pop
cli
into
sub
and
mov
push
add
or
add
jnp
stos
mov
iret
shrb
xor
add
in
inc
clc
jne
sti
push
mov
add
loopne
jp
aad
sbb
rorl
or
clc
dec
lods
nop
mov
add
inc
clc
sbb
aam
add
mov
xabort
xor
add
aam
jae
add
mov
xchg
sub
xchg
cmp
inc
clc
loopne
push
add
xor
add
hlt
push
add
mov
fsubp
clc
jbe
mov
add
cmp
test
push
xor
add
clc
fwait
add
add
add
pop
idivl
add
and
push
mov
enter
das
sar
cmp
fstpl
clc
dec
xor
xchg
es
stos
movsl
clc
push
add
addr16
rcr
mov
add
jle
rolb
add
ret
clc
mov
sbb
aam
aam
testl
pop
jmp
adc
add
ja
clc
ficoml
call
clc
in
jecxz
xor
add
or
mov
fcmovnu
call
add
sarb
cmp
clc
int
loope
xlat
sub
adc
add
add
test
jo
add
and
add
add
add
push
add
mov
add
clc
xor
push
inc
add
mov
add
clc
dec
fbld
add
das
or
add
add
clc
call
add
add
js
mov
clc
sbb
pop
cmp
add
xchg
out
jbe
xbegin
call
lret
add
insb
call
or
push
add
cltd
sub
mov
into
cld
out
xchg
push
add
mov
clc
push
ret
clc
and
add
sahf
pusha
add
cmp
test
mov
jmp
clc
push
out
cmp
fstpt
sti
adc
pop
daa
clc
movsb
clc
stc
cmp
mov
cmp
cmpsb
clc
add
add
add
dec
xsaveopt
add
add
lcall
mov
pop
iret
pushf
out
fwait
mov
add
add
add
clc
jo
add
add
add
add
mov
xlat
cmp
mov
clc
inc
clc
lahf
popa
add
loope
mov
aaa
mov
in
sbb
add
vcmpps
data16
ljmp
clc
cmp
je
jge
clc
fstpt
pop
inc
add
and
add
insl
lods
lret
psubsb
add
sti
push
sbb
clc
or
mov
clc
in
cmpsb
clc
shrl
clc
cmp
sar
test
stc
mov
jns
add
or
clc
inc
add
mov
cmp
scas
ja
cmp
add
ret
clc
incl
clc
into
pop
clc
xor
add
clc
dec
add
push
dec
test
mov
push
add
xchg
fstps
add
arpl
add
add
pop
outsb
jp
sti
repnz
lock
add
add
dec
mov
int
xchg
aam
test
xchg
xchg
mov
add
pushf
outsl
lret
clc
fidivrl
sahf
jecxz
sahf
scas
xchg
out
scas
roll
add
adc
add
repz
imul
arpl
add
mov
xchg
mov
mov
jnp
mov
data16
or
add
lods
mov
add
mov
jno
add
jbe
clc
push
clc
pop
pop
dec
aad
sub
fs
cmp
sub
adc
clc
mov
add
inc
clc
sub
mov
push
add
hlt
jmp
pop
mov
add
je
add
cmp
push
clc
icebp
jp
arpl
add
cltd
pop
or
cmp
ffree
clc
pop
in
in
mov
push
clc
jns
ja
arpl
add
add
pop
mov
jle
pop
clc
mov
mov
clc
xchg
pop
kmovw
clc
lcall
add
cli
test
cmp
clc
div
inc
clc
cmp
add
pop
addr16
mov
clc
mov
lcall
clc
fidivrl
repnz
inc
clc
or
clc
arpl
add
add
outsl
into
add
add
add
out
push
add
jle
das
stos
shlb
inc
add
insl
fs
dec
fbstp
jg
clc
mov
cmpsb
clc
jo
add
clc
mov
int3
cmpsl
clc
pop
icebp
fisubrs
imull
jo
add
add
ficoml
clc
sar
clc
sbb
popf
xor
add
adc
clc
or
mov
or
add
add
xchg
jnp
clc
jmp
xor
add
add
sub
jg,pt
mov
std
push
add
mov
jl
enter
outsl
adc
in
add
add
pop
adc
add
clc
adc
add
xchg
ret
clc
jbe
mov
sub
or
daa
clc
js
clc
dec
xchg
mov
pop
mov
mov
add
xor
data16
popa
add
adc
add
testl
mov
clc
dec
mov
pop
adc
add
add
or
add
js
push
sub
clc
xor
add
mov
clc
mov
add
test
add
popf
xchg
inc
clc
jo
add
add
inc
add
cmp
cmc
add
cltd
pop
clc
add
add
clc
add
add
clc
xchg
push
add
fwait
sub
adc
add
jp
lcall
and
mov
clc
lock
scas
jns
in
ud1
push
add
dec
jns
inc
clc
mov
sahf
adc
add
add
fstpt
dec
and
daa
clc
xchg
out
adc
add
clc
data16
cmc
aaa
xabort
clc
xchg
inc
clc
test
lret
add
js
mov
or
clc
jmp
in
outsb
sar
add
popa
add
mov
add
jnp
pushf
inc
clc
int
clc
inc
clc
aam
push
loope
jmp
dec
gs
mov
fidivrs
popf
dec
add
add
fisttpll
push
fiaddl
mov
mov
add
call
add
add
add
aad
xor
add
jbe
add
ret
add
popa
add
gs
dec
xchg
push
add
cwtl
cmp
add
sub
mov
enter
clc
cmp
cld
cmp
clc
sar
clc
adc
add
jecxz
std
sbb
jae
add
fwait
adc
add
or
add
add
clc
clc
outsl
int3
repnz
mov
pusha
add
out
in
mov
jae
add
adc
jecxz
in
cmp
clc
xchg
ja
ret
fistps
in
pop
sub
add
insb
inc
clc
cmp
or
and
xor
add
inc
clc
mov
fidivrl
add
ss
clc
js
int
cmp
cmpsb
clc
adc
jge
clc
cs
inc
clc
outsl
loope
cmp
add
mov
clc
push
adc
add
clc
add
lret
leave
cwtl
pop
pop
cmp
add
out
pushf
push
adc
add
add
outsl
adc
div
jo
add
pusha
add
dec
or
call
push
ret
pop
stos
repz
pop
lret
add
clc
sbb
pop
clc
mov
out
in
pusha
add
repz
dec
ljmp
clc
sbb
add
add
add
xchg
data16
shll
add
clc
add
add
fdiv
in
xlat
mov
test
push
add
and
add
add
sub
pop
sbb
xor
add
clc
hlt
and
add
sub
push
fadds
jge
and
add
stc
sub
lock
add
fsubrl
clc
mov
add
out
lahf
cmp
cwtl
jl
add
test
xor
add
clc
or
stos
add
add
fiaddl
clc
sbb
clc
jb
add
clc
cli
add
add
insl
xchg
mov
into
xchg
fdivs
clc
dec
jg
lret
mov
clc
sbb
add
and
add
ja
add
out
jge
ror
cld
and
add
mov
fdivp
lods
xchg
cli
pop
or
add
add
cmp
adc
in
sarb
clc
add
sbb
xchg
pop
out
sbb
lock
adc
add
lcall
add
xchg
mov
push
or
clc
enter
add
push
add
jg
add
xor
add
xor
add
jno
add
sti
cs
add
xchg
adc
add
clc
dec
cmp
insl
and
add
fwait
inc
add
pop
jbe
add
xor
add
xchg
imul
mov
add
lock
add
js
xchg
aam
loop
sub
pop
clc
loop
loope
xbegin
mov
filds
mov
jmp
bnd
jnp
mov
insl
or
cmp
clc
int
clc
push
add
bound
add
sbb
movsb
clc
mov
add
add
xchg
and
add
add
push
cli
xrelease
add
add
clc
push
ja
aaa
xor
add
adc
add
outsl
mov
or
mov
add
push
add
or
add
lret
xchg
mov
clc
cmp
xchg
mov
push
clc
mov
imul
add
inc
clc
jbe
clc
mov
loopne
mov
clc
jle
add
mov
jb
add
adc
add
loopne
push
add
mov
in
jbe
push
bound
add
clc
lret
push
jns
cmpsl
clc
dec
push
out
stc
lret
sub
push
clc
jmp
and
pop
mov
clc
jmp
add
push
add
cli
cmp
clc
mov
mov
test
cli
cwtl
sahf
fildll
clc
push
scas
inc
add
mov
cmp
cld
lods
pop
dec
mov
fwait
mull
adc
add
scas
scas
mov
add
fld
clc
mov
clc
add
add
xor
add
add
inc
add
dec
cmp
clc
pop
push
clc
lock
add
xor
add
outsl
int
or
inc
add
push
stc
test
ds
pusha
add
sbb
clc
cmp
arpl
add
clc
dec
and
add
xabort
dec
add
add
clc
loope
sar
jne
adc
in
or
cmp
sahf
xor
adc
mov
add
cmp
cmp
and
repz
add
add
sub
add
imul
add
add
fistpll
xchg
int3
jge
jp
int
add
add
call
cmp
fcoms
add
insb
arpl
add
clc
out
sar
or
add
add
dec
rorb
add
lahf
bound
add
jno
add
add
mov
clc
push
add
ljmp
pushf
in
xchg
pop
pop
clc
sahf
sar
clc
cmp
sarl
push
test
clc
sub
pop
shlb
dec
out
sbb
in
dec
add
sub
mov
sarl
mov
jle
out
push
sbb
xbegin
fcom
inc
add
jnp
lock
add
add
add
add
add
xlat
push
mov
add
sbb
mov
add
mov
cmp
add
and
add
out
test
mov
lcall
push
clc
mov
add
je
popf
push
sub
xchg
jne
add
add
or
repz
data16
filds
sub
add
imul
clc
clc
cs
inc
clc
out
negl
arpl
add
sar
xor
add
add
insb
inc
clc
xlat
stc
push
mov
ss
add
jbe
outsl
leave
fbld
clc
jg
fcom
divb
sub
clc
fs
adc
add
add
call
cmp
lods
add
add
clc
test
fisubl
mov
stos
push
fninit
clc
movsb
clc
add
add
add
xor
add
imul
add
pop
mov
data16
cmc
lea
add
fisubrl
arpl
add
add
dec
jl
cs
clc
idivb
fwait
xchg
cld
or
jl
testb
sbb
mov
clc
cmp
clc
ds
vmovhps
add
iret
mov
cmp
int
clc
mov
inc
clc
mov
repnz
or
aad
clc
add
clc
jbe
or
jbe
imul
mov
mov
inc
add
lret
cltd
jo
add
add
outsl
push
jecxz
fnstsw
lahf
fisttps
sar
clc
mov
add
and
adc
add
clc
pop
sbb
clc
ficoms
add
cmp
cs
cmp
sar
popf
enter
add
add
scas
fildl
gs
adc
add
clc
mov
data16
xchg
fchs
clc
jge
mov
xchg
cmp
jmp
fst
cli
into
sti
dec
bound
add
or
jb
add
add
rcrb
clc
sbb
add
clc
push
add
and
add
lret
fiadds
add
xor
add
add
mov
xor
add
add
dec
insb
stos
jo
add
add
das
insl
aam
popf
and
add
cmp
aad
and
idiv
mov
xor
add
add
add
mov
inc
add
movsb
clc
out
fldl
add
sbb
add
pop
lret
repz
pop
enter
add
mov
dec
es
imulb
jae
add
add
stc
xchg
ret
icebp
fsts
popa
add
or
clc
das
dec
cmp
popf
xor
push
add
mov
sahf
jb
add
sbb
add
test
xlat
jp
ss
jns
inc
clc
or
clc
inc
add
and
cmp
in
xchg
jnp
repz
pop
popa
add
mov
add
clc
push
sar
mov
lret
mov
or
add
add
fisttpl
in
mov
add
cmp
mov
add
jno
add
clc
lock
clc
push
and
add
movsb
clc
sar
add
lea
rorl
pop
je
clc
sahf
sub
jo
add
adc
inc
clc
shrb
inc
clc
adc
add
popa
add
out
sbb
dec
pop
sub
sub
aam
xchg
imul
pop
jmp
pusha
add
xor
and
add
add
sub
jae
add
dec
fldcw
test
clc
fcmovnbe
aas
fxam
clc
mov
jecxz
cmpsl
clc
js
jo
add
sub
add
negl
aas
mov
and
adc
or
test
in
int
sub
call
int
dec
push
aam
mov
xchg
popa
add
lcall
xchg
cvtps2pd
add
cmp
clc
aaa
lods
jne
clc
aad
mov
add
mov
jg
fs
loop
xor
lea
clc
mov
add
add
add
das
sbb
pop
clc
cmp
sbb
pop
and
add
out
enter
sub
xchg
mov
jecxz
add
add
add
add
cmc
jbe
xchg
ss
leave
mov
mul
clc
or
add
add
sar
dec
iret
lock
and
pop
mov
in
xlat
gs
sti
sbb
add
pushf
rorb
xabort
dec
imul
clc
mov
add
sub
lahf
movsb
clc
out
cmpsl
clc
sti
push
xchg
pop
sbb
add
in
js
push
cmc
jns
xchg
push
in
imulb
mov
clc
lods
sub
xchg
lock
aam
bound
add
add
xlat
dec
std
adc
add
add
xchg
xabort
cmc
adc
add
add
mov
cmc
cltd
roll
add
add
add
cmp
call
add
add
add
push
add
dec
loop
xabort
or
clc
clc
shl
and
add
int
lret
cli
lcall
dec
outsl
mov
adc
add
sbb
loope
je
clc
sar
dec
dec
dec
and
add
add
out
add
jo
add
sub
mov
add
push
pusha
add
stos
xchg
mov
sbb
xlat
inc
add
push
inc
clc
sbb
push
add
sub
mov
rolb
mov
lock
imul
sbb
loopne
insl
adc
add
arpl
add
add
xor
add
add
das
adc
add
jae
add
es
mov
jb
add
inc
add
sbb
fistl
add
clc
repnz
clc
test
xor
test
push
add
dec
mov
add
dec
add
add
mov
clc
pop
mov
add
jge
push
add
jbe
clc
xor
add
cmpsb
clc
insb
lret
stos
stos
icebp
fs
mov
add
push
add
loop
sti
scas
cld
mov
add
sub
xchg
dec
gs
mov
clc
push
mov
clc
jmp
clc
mov
icebp
sar
push
add
push
leave
push
mov
gs
add
in
jae
add
mov
clc
pop
dec
in
insl
xor
mov
or
push
add
mov
and
add
data16
icebp
sub
ja
add
popf
adc
add
roll
add
jge
add
jns
daa
clc
sar
out
cmp
push
hlt
cmp
adc
clc
repnz
adc
add
clc
jle
fsubrs
inc
clc
rcl
xchg
pop
or
push
clc
inc
add
mov
pop
stc
mulb
add
clc
ljmp
add
repnz
push
sar
lahf
push
add
add
add
cmp
fs
push
mov
ret
clc
in
fwait
out
sar
out
xchg
je
lock
dec
dec
adc
add
xchg
or
sbb
pop
mov
rorl
fldcw
lea
mov
add
xor
add
clc
dec
jge
test
sbb
into
cwtl
test
clc
push
and
lods
fnstsw
popa
add
ja
adc
add
insb
outsl
mov
jno
add
mov
out
clc
leave
push
shr
pusha
add
loop
or
add
add
inc
clc
fwait
xchg
xchg
testl
out
cli
mov
stos
cmc
jnp
clc
sub
dec
add
add
add
mov
clc
mov
lea
clc
cmp
push
mov
dec
mov
push
jecxz
adc
add
add
xlat
and
add
cli
xabort
lods
sbb
inc
add
jo
add
clc
jp
xchg
pop
mov
add
push
add
hlt
xor
clc
mov
mov
push
scas
cmp
jecxz
dec
rcrb
add
lahf
js
clc
xor
fidivl
popf
add
clc
xor
push
outsl
fisubrs
mov
sbb
clc
mov
add
adc
clc
pop
mov
clc
push
cmp
add
and
mov
mov
adc
add
xlat
or
clc
sub
int3
cmpsl
clc
push
add
pusha
add
mov
clc
aaa
mov
adc
add
add
add
add
mov
stos
mov
add
or
pop
push
inc
clc
ds
movsb
clc
add
add
ds
cmp
add
mov
pushf
mov
imul
push
faddl
clc
push
icebp
rorl
pop
cmp
mov
fs
jb
add
mov
mov
sbb
xor
add
xlat
sahf
aam
mov
xchg
xchg
call
clc
loope
ss
add
pop
clc
push
add
sahf
shll
add
lods
clc
push
push
gs
and
add
sub
clc
es
mov
pop
sbb
clc
cmpsl
clc
push
add
outsb
sbb
inc
add
cmpsb
clc
clc
cltd
ret
xor
add
push
xor
add
add
clc
xabort
sbb
pop
jne
dec
fstp
push
fs
push
pushf
clc
movsl
clc
mov
add
ljmp
xchg
fs
mov
add
pop
mov
clc
outsl
xor
push
clc
jo
add
repz
lea
mov
clc
or
clc
push
clc
sarb
or
dec
sub
xchg
ja
add
add
add
add
cli
inc
add
gs
lcall
add
test
test
rcrb
insl
inc
add
mov
jge
jae
add
add
cmp
xchg
mov
add
gs
cmp
add
test
pop
clc
inc
clc
add
out
xor
add
pushf
mov
clc
inc
add
fcom
ljmp
inc
clc
mov
pop
arpl
add
add
or
xchg
data16
inc
clc
and
mov
cmc
xlat
push
add
fdivr
xlat
in
cmp
add
mov
add
clc
gs
pop
fbstp
add
imul
add
jg
push
add
negl
pop
bound
add
scas
pop
clc
popa
add
imul
add
mov
sbb
leave
inc
clc
sub
mov
cmc
stos
xor
add
clc
xchg
nop
mov
jo
add
clc
aas
out
cltd
cmp
pushf
add
arpl
add
clc
popf
fstpt
cltd
das
cmp
outsb
sub
add
inc
add
negl
jmp
add
add
inc
clc
push
xchg
and
cli
xchg
jle
jne
lret
xchg
test
mov
dec
call
sbb
clc
enter
add
test
add
mov
add
cmp
add
shll
add
cld
mov
add
mov
adc
add
clc
ret
cs
lret
aaa
lret
sar
shrl
push
inc
add
popf
movsl
clc
xchg
adc
add
add
fiadds
adc
add
in
push
add
rclb
stos
ficompl
lea
add
push
cld
push
xlat
stos
scas
or
repz
loop
pop
push
add
imul
push
test
push
cmc
daa
clc
cmc
xchg
xor
test
fisttps
lahf
in
pop
pop
mov
sub
add
xchg
enter
clc
mov
cmpsb
clc
cmp
add
popf
lcall
sbb
add
call
cmpsl
clc
pop
clc
lahf
mov
clc
pop
sub
mov
clc
insb
loopne
in
jg
add
sar
add
call
mov
clc
sub
cmp
xchg
xor
add
and
clc
sub
add
xchg
outsl
mov
clc
loope,pt
sub
cmp
cli
mov
add
scas
int
clc
dec
cmp
clc
jns
clc
jns
fidivl
inc
clc
test
movsl
clc
add
clc
and
add
clc
jo
add
scas
inc
add
dec
notb
arpl
add
and
add
mov
inc
add
out
pop
xor
add
das
and
add
push
das
pop
mov
clc
push
add
test
jmp
clc
fsubrs
dec
js
clc
pop
adc
add
mov
inc
add
dec
fdivs
and
add
add
int3
push
movsb
clc
xchg
fstp
push
aam
cmp
xor
add
add
lods
pop
nop
sbb
in
lcall
xchg
stos
js
clc
dec
xchg
pop
clc
test
jb
add
add
dec
dec
mov
push
push
imul
cmp
mov
sbb
add
add
jno
add
add
xbegin
clc
in
mov
clc
push
xor
add
add
or
jne
mov
cmpsl
clc
cmp
into
leave
mov
add
movsl
clc
or
js
clc
inc
add
repz
add
dec
sub
pop
sbb
add
xchg
sub
clc
sub
mov
outsl
mov
push
add
pop
push
scas
nop
in
std
sub
add
pop
dec
data16
mov
stc
jae
add
add
add
add
add
inc
clc
push
add
and
add
add
jo
add
mov
sub
push
add
add
clc
addr16
mov
add
clc
cmc
mov
mov
clc
out
stos
sub
add
clc
xor
add
add
push
outsl
aaa
cmp
pop
push
add
scas
aas
fadd
clc
sub
xchg
mov
add
xor
add
dec
jb
add
add
xor
fwait
lahf
sarl
lock
insl
and
clc
cmc
movsl
clc
in
mov
jb
add
add
add
clc
call
bound
add
add
cmpsb
clc
jns
mov
dec
dec
and
cli
jns
clc
insb
ret
iret
xchg
ss
pusha
add
inc
add
cmp
je
shl
clc
bound
add
insb
ret
and
add
mov
pop
and
int3
and
add
and
add
and
add
sbb
pop
inc
add
pop
clc
or
mov
sbb
clc
bound
add
clc
call
clc
dec
sub
clc
stos
nop
xchg
cmp
stos
ja
adc
add
add
in
inc
add
dec
sahf
in
push
mov
cs
leave
test
clc
test
gs
movsb
clc
adc
inc
clc
out
movsb
clc
xor
clc
shl
clc
cld
enter
push
pop
out
in
clc
or
xabort
cmp
add
cwtl
repnz
push
cli
and
and
add
jbe
push
cmp
clc
sar
push
add
add
add
outsl
push
and
add
clc
and
add
add
fistpl
and
aaa
push
clc
push
add
clc
mov
or
clc
mov
aam
or
clc
jns
clc
mov
je
imul
cmp
daa
clc
aam
sar
inc
add
mov
push
mov
cmp
add
stc
xor
add
clc
lea
add
cmp
clc
adc
add
add
add
push
mov
add
pop
lcall
cs
cmpsl
clc
add
add
mov
push
es
mov
pusha
add
mulb
mov
cmpsl
clc
fcmovnb
clc
and
add
dec
mov
icebp
and
add
cmp
cmp
clc
jl
add
call
cmp
clc
ljmp
mull
clc
and
dec
mov
dec
inc
clc
or
cmp
clc
bound
add
add
jecxz
xor
add
add
cmp
cli
jo
add
mov
das
mov
clc
popa
add
in
cs
xor
add
push
add
xchg
push
push
add
dec
and
jge
jl
xchg
lret
mov
xor
add
lret
sar
clc
aad
clc
in
je
xor
clc
mov
clc
inc
clc
std
cmp
fbld
pop
pop
sbb
imul
mov
cld
stos
test
lock
clc
clc
neg
shrb
sbb
ljmp
jg
in
push
inc
clc
push
add
push
sbb
mov
jbe
test
sub
sub
fldcw
popf
movsl
clc
adc
flds
add
imul
fadds
jmp
push
mov
test
add
loope
push
add
lock
sub
sub
dec
int
and
push
add
hlt
mov
cli
inc
add
sub
add
pusha
add
lret
loope
lock
cmp
clc
cli
pop
outsb
out
adc
xor
xchg
ljmp
sbb
clc
jl
xchg
cmp
std
xabort
nop
aam
jle
sti
mov
pusha
add
and
add
clc
pop
clc
sbb
xchg
fwait
insl
ret
clc
inc
add
ret
clc
push
add
adc
inc
add
cmpsb
clc
and
add
clc
and
add
sar
cmp
outsl
and
movsb
clc
mov
sub
adc
add
add
and
add
pop
mov
in
or
js
mov
clc
js
inc
clc
fnstsw
clc
add
add
clc
pop
pop
mov
push
jne
and
add
add
sub
add
hlt
pop
imul
adc
add
fs
jnp
clc
into
loop
lahf
lock
movsl
clc
mov
add
sub
xor
and
and
add
ret
nop
dec
lcall
js
scas
repnz
and
mov
add
mov
clc
fnstcw
or
jmp
add
ffreep
clc
xor
scas
clc
sbb
pop
or
add
xchg
pop
mov
add
fiadds
out
or
mov
clc
cld
push
lcall
cmp
out
push
add
push
ljmp
add
out
push
sub
sbb
stos
ljmp
clc
push
lret
pop
lea
add
xor
add
clc
sahf
cmp
jo
add
pop
mov
popf
adc
add
clc
xchg
fidivl
clc
sar
add
outsl
sbb
jl
add
push
aaa
mov
add
mov
jmp
cs
cli
fstl
dec
mov
outsl
lret
test
fcmovbe
sar
mov
es
jecxz
fs
leave
aas
lods
lock
push
nop
mov
push
or
xchg
cmpsl
clc
cmc
inc
add
call
add
pop
push
add
push
sahf
sbb
add
test
add
add
dec
jns
add
divl
fcmovnbe
movsb
clc
adc
add
sldt
add
sub
add
mov
aam
mov
xchg
jmp
add
stos
xlat
cmp
ucomiss
sahf
jb
add
repz
add
add
rcr
sbb
add
cli
fcmovne
test
into
or
xor
mov
add
sbb
add
inc
clc
fs
or
add
xchg
int3
or
clc
gs
fadd
clc
mov
shr
dec
mov
arpl
add
xchg
stos
cmp
add
cmpsb
clc
cmp
push
cli
sbb
add
add
jle
int3
mov
mov
fistl
or
lock
push
or
clc
and
bound
add
lret
jl
add
mov
fstps
clc
out
mov
cmp
clc
cmp
clc
pop
rsm
lret
dec
jp
pop
bound
add
push
add
mov
mov
clc
inc
add
outsl
es
adc
add
sar
push
jecxz
jo
add
popf
mov
jnp
clc
mov
repnz
es
adc
add
mov
clc
add
enter
or
or
clc
iret
sar
add
dec
incb
arpl
add
pop
out
inc
clc
je
add
movsl
clc
mov
adc
add
add
add
clc
mov
push
push
ret
clc
shl
sub
push
mov
clc
mul
clc
or
add
clc
jmp
add
add
clc
test
add
push
mov
jmp
add
das
push
mov
popa
add
aam
or
add
xbegin
mov
add
dec
cmp
xor
movsb
clc
push
ret
clc
pop
jmp
stos
ret
loop
sub
cltd
add
add
lcall
add
add
aam
add
fucomip
ja
clc
out
cmpsb
clc
sbb
add
inc
add
leave
sub
clc
cmp
lahf
pop
ja
clc
and
add
add
ss
or
cs
pop
or
repz
add
je
testl
dec
movsb
clc
xor
add
mov
out
fcmove
out
xor
add
push
clc
gs
rorl
pop
cld
xchg
jl
adc
add
clc
cmp
sbb
cmpsb
clc
pusha
add
push
mov
sbb
clc
fwait
adc
or
dec
inc
clc
jmp
xlat
test
cmc
and
clc
mov
jg
in
stos
mov
clc
push
clc
test
sub
xor
add
mov
push
cltd
and
add
jge
cmpsl
clc
inc
clc
mov
clc
push
add
outsl
lods
cmp
repz
mov
mov
fistps
jno
add
add
add
gs
cmp
int
clc
pusha
add
and
add
ret
jo
add
clc
jp
dec
fcmovnu
cwtl
jp
pushf
sarb
mov
data16
cltd
fistps
push
add
cli
xchg
movsb
clc
xchg
cmp
enter
push
dec
sub
test
cli
fimull
pop
fimull
add
inc
add
dec
out
push
add
das
xor
add
add
mov
pop
jne
clc
hlt
inc
add
shrl
clc
test
clc
mov
dec
mov
aaa
inc
clc
sub
add
adc
add
mov
clc
scas
rcr
xchg
and
xchg
jp
add
cli
dec
sub
add
add
cmpsb
clc
add
add
jo
add
inc
clc
repz
bound
add
mov
fs
jecxz
inc
add
aam
lret
clc
mov
sar
clc
cmp
xchg
mov
clc
ss
add
push
mov
jnp
jne
stos
xchg
sbb
clc
js
clc
jae
add
popa
add
mov
add
in
in
push
jg
cmp
test
repnz
clc
sbb
xbegin
adc
add
ds
sub
mov
add
cwtl
fmull
clc
mov
push
add
cmp
and
add
pop
lcall
fsts
mov
clc
mov
divl
add
cmp
xchg
repnz
clc
and
add
clc
call
aad
test
and
add
loope
push
pop
aas
mov
add
add
adc
add
sbb
loop,pt
push
enter
out
stos
in
rcll
add
pushf
inc
clc
or
lods
das
inc
clc
in
cmp
sub
add
adc
add
fadds
jg
add
adc
pop
outsb
add
add
test
popf
xabort
clc
cwtl
push
mov
add
clc
cmc
pop
lods
sar
decb
push
stc
in
xchg
subps
or
xchg
mov
in
outsb
mov
shlb
lret
add
adc
clc
in
pop
push
enter
fdivrp
cmp
loope
push
clc
repz
add
icebp
dec
sub
jnp
das
rcl
push
clc
test
fidivrl
pop
cmp
add
add
add
jmp
int3
je
clc
movsb
clc
xlat
or
clc
sbb
clc
add
add
aaa
cmp
das
dec
lods
mov
add
xchg
push
push
add
add
stos
das
pop
jae
add
pop
or
in
notb
clc
inc
clc
jle
clc
aas
and
add
cmp
fs
and
add
mov
push
mov
fwait
cld
mov
bound
add
dec
test
dec
fs
xchg
fs
cmp
add
daa
clc
sub
add
es
sbb
sti
cmp
clc
fs
jge
cmp
push
clc
push
out
mov
add
clc
sbb
into
inc
add
or
mov
sub
clc
inc
clc
jecxz
and
add
add
ret
ret
clc
mov
arpl
add
imul
clc
xbegin
out
mov
push
add
xadd
sub
xor
add
dec
movsb
clc
ljmp
add
xor
add
sbb
add
int
sub
loop
pusha
add
add
push
xbegin
sub
sbb
fstpt
fs
enter
bound
add
sbb
clc
mov
pusha
add
rorl
add
aam
clc
fs
das
cmp
cmp
mov
xchg
ss
arpl
add
mov
add
add
shl
std
mov
add
add
xor
add
mov
or
adc
add
mov
imul
xor
add
clc
into
sub
adc
jg
add
pop
data16
push
add
hlt
jp
ds
add
adc
add
iret
and
add
add
test
clc
lahf
xchg
test
add
bound
add
ret
ljmp
shrb
add
flds
sti
fmuls
es
mov
clc
sub
mov
clc
jp
adc
add
test
mov
xchg
rorl
add
mov
jns
clc
sub
scas
aad
add
inc
add
cmp
adc
add
clc
vcvtdq2ps
add
pop
int3
bound
add
mov
pop
mov
clc
outsl
pop
mov
sbb
into
aas
jne
push
pop
daa
clc
addr16
dec
sti
mov
add
lea
add
add
add
stos
repnz
jmp
pop
inc
add
pop
outsl
pop
mov
pop
or
add
imul
ffree
clc
negl
push
imul
cs
mov
jle
mov
out
jge
or
dec
das
add
add
bound
add
add
dec
push
add
push
cmovs
clc
push
add
sub
add
cmp
mov
add
clc
addr16
sbb
mov
nop
bound
add
add
clc
xchg
cltd
ja
ds
jmp
aaa
gs
repnz
cwtl
sahf
packsswb
add
cmp
xchg
inc
add
or
add
das
in
bnd
pushf
repz
jb
add
clc
pop
and
add
mov
popa
add
sbb
xor
add
call
xor
xabort
mov
hlt
aas
lea
clc
fidivrl
shlb
adc
cld
dec
push
and
add
int3
add
add
mov
clc
cmp
add
push
sbb
test
pop
clc
cmc
sar
std
mov
cmp
into
cltd
out
mov
cmpsb
clc
fs
sahf
pop
clc
mov
vrcpps
add
arpl
add
clc
int3
das
loopne
xabort
ds
add
insb
push
add
pop
jmp
lahf
sub
aam
ljmp
sbb
add
and
add
imul
pop
movsl
clc
sub
in
xor
add
mov
add
cmpsb
clc
and
add
clc
sarb
aaa
shll
sbb
add
cwtl
lcall
pop
and
add
into
outsb
pop
arpl
add
int3
sti
mov
dec
imul
sbb
jno
add
mov
add
pop
cmp
pop
sti
aaa
xor
nop
inc
add
pop
push
clc
inc
add
mov
push
mov
add
inc
clc
jb,pt
add
mov
clc
shlb
add
lret
mov
xor
add
add
add
push
add
or
inc
clc
cld
mov
adc
add
mov
add
cmp
clc
jo
add
clc
jecxz
mov
clc
ss
clc
fs
jo
add
mov
mov
inc
clc
data16
cmp
clc
lcall
sahf
jg
add
ficomps
add
add
add
add
clc
loop
out
lock
xchg
fdiv
loope
aaa
sub
jne
add
fdivrp
jmp
push
add
xor
add
loop
fdivrl
imul
insl
cmp
clc
mov
xor
add
mov
clc
or
jne
dec
stos
int
cmp
mov
sub
bound
add
mov
into
js
mov
fidivrs
add
cli
sahf
aam
lods
adc
clc
mov
push
out
aam
add
cwtl
mov
xchg
inc
clc
adc
add
clc
bound
add
pop
aam
mov
cmp
clc
clc
and
add
add
adc
add
pop
es
lods
cmp
add
std
gs
mov
inc
add
pop
inc
clc
and
add
test
mov
add
mov
mull
add
sbb
popf
sbb
clc
jne
imul
push
jae
add
fcoms
add
sub
add
cmc
inc
clc
lahf
icebp
xor
popa
add
add
sbb
dec
inc
add
jbe
clc
pop
and
add
add
clc
imul
inc
clc
pop
and
add
clc
pop
xor
popf
arpl
add
repnz
add
or
push
sahf
pop
sti
mov
add
xlat
mov
add
aaa
pop
out
bound
add
jle
call
nop
and
add
imul
in
clc
movsl
clc
dec
leave
and
add
or
clc
dec
push
add
push
add
aas
push
cmp
xor
pop
clc
xor
add
imul
inc
clc
inc
clc
cwtl
clc
dec
dec
or
clc
sar
clc
inc
clc
js
add
aam
ret
clc
fildl
aaa
daa
clc
adc
adc
add
insb
clc
push
add
ljmp
clc
xchg
in
bound
add
mov
sub
clc
mov
clc
add
pusha
add
mov
mov
add
data16
xchg
mov
enter
add
xor
clc
fistpl
add
mov
clc
jns
push
add
inc
clc
in
repnz
clc
lret
mov
add
add
add
clc
push
xchg
fs
mov
add
xor
add
testl
inc
add
gs
or
cs
lods
jp
aam
clc
testb
push
clc
xor
add
jo
add
movsb
clc
iret
sbb
clc
push
add
je
adc
clc
mov
clc
dec
xor
add
add
clc
push
imul
mov
clc
js
sbb
test
scas
xor
add
clc
insb
fsubrp
xor
clc
jne
clc
into
jne
ss
testb
add
mov
clc
clc
adc
loope
test
dec
repnz
stos
shll
add
clc
lods
jmp
add
mov
add
mov
add
dec
adc
add
cld
push
dec
clc
mov
inc
clc
jno
add
clc
adc
add
fwait
xabort
xchg
fnstsw
clc
repnz
add
adc
add
mov
or
ffree
clc
dec
xabort
loop
adc
add
clc
xbegin
add
add
add
add
push
add
clc
xor
sub
out
int
clc
mull
clc
sub
add
ror
jle
xor
add
add
and
mov
add
clc
cmpsb
clc
add
add
inc
clc
mov
clc
lea
and
enter
clc
clc
loop
add
add
add
or
add
ret
mov
into
or
xchg
cmp
clc
sahf
sahf
xchg
sbb
int
add
jbe
or
fwait
in
jmp
cld
je
clc
sub
clc
dec
popa
add
dec
popf
lret
stos
es
mov
out
sbb
jle
clc
jae
add
add
add
clc
xor
sub
clc
sub
add
xchg
rclb
in
fisubl
clc
hlt
mov
jno
add
mov
lahf
js
add
dec
int3
loopne
jb
add
adc
add
cmpsl
clc
daa
clc
movsb
clc
or
add
sti
push
sbb
add
aas
je
pop
cmp
clc
push
add
pop
pop
and
add
sar
push
add
push
mov
mov
clc
jo
add
pop
clc
xor
in
scas
push
mov
clc
adc
add
in
insl
bound
add
inc
add
or
cmp
clc
sar
xbegin
xor
add
cmp
add
lea
clc
cmc
dec
in
push
add
pop
and
add
jp
pop
add
add
out
jbe
sub
enter
in
mov
cwtl
sti
xchg
mov
add
jecxz
sarl
stos
mov
and
add
jne
inc
clc
clc
loop
and
add
mov
clc
flds
popf
dec
dec
xor
add
add
cmc
sub
add
xchg
int3
movsb
clc
sub
insl
jno
add
clc
sahf
sub
mov
lret
inc
add
or
adc
add
mov
lock
mov
add
fsubrl
cld
pop
in
or
test
outsl
xchg
clc
test
clc
mov
cmp
clc
inc
clc
add
add
add
xchg
sub
and
lahf
out
cmc
cwtl
jae
add
sub
xor
add
xchg
xchg
xchg
aam
pushf
pop
clc
lahf
daa
clc
adc
add
pop
push
add
and
add
stos
dec
cmp
cmp
add
jae
add
push
sti
aam
data16
jge
xabort
in
fs
mov
out
sbb
shll
add
or
sahf
adc
cld
lods
divb
add
fwait
or
clc
jp
mov
ljmp
add
in
iret
das
fldcw
mov
adc
push
cmp
fs
pop
fwait
test
enter
inc
add
in
push
fnstcw
mov
mov
adc
add
dec
mov
scas
pop
out
leave
repnz
shll
movsb
clc
mov
pop
xchg
and
add
jmp
stos
xabort
clc
xchg
iret
cmp
add
jmp
add
add
add
push
add
sbb
repnz
add
add
and
insl
cmp
adc
add
sar
popa
add
enter
push
sahf
stos
or
clc
addr16
jp
pushf
xchg
cmc
lret
mov
clc
adc
add
clc
dec
jg
sahf
loope
rcl
je
push
add
repz
add
clc
pop
mov
pop
sub
das
in
add
add
repnz
in
add
pop
dec
sbb
add
add
jae
add
mov
sti
stc
sbb
add
mov
add
movsl
clc
scas
mov
add
xor
add
add
add
pop
repnz
cmpsb
clc
adc
add
clc
testl
pop
arpl
add
clc
pop
and
add
clc
inc
clc
xor
clc
inc
add
inc
add
adc
add
add
xor
jns
add
sbb
test
enter
mov
add
iret
or
push
xabort
add
cmp
add
add
add
add
add
sub
dec
lahf
fs
pop
lock
clc
xchg
xor
add
xchg
push
clc
insb
jae
add
clc
loopne
add
fwait
icebp
in
aad
jbe
mov
clc
xchg
cmp
sbb
out
or
call
mov
add
rcl
and
dec
ror
and
add
add
sbb
testl
clc
ds
clc
adc
add
fs
sbb
movsl
clc
push
fwait
aaa
ljmp
clc
leave
lea
rolb
cmp
clc
int
clc
aad
jle
add
arpl
add
test
xlat
and
add
lea
clc
enter
mov
fnstsw
pushf
test
sbb
xor
clc
sub
adc
inc
clc
fs
inc
clc
lods
es
add
add
arpl
add
jne
invd
ljmp
cmp
out
leave
sbb
fnstsw
sar
jg
clc
add
add
cmp
pop
jnp
aam
add
or
popa
add
or
outsl
pop
inc
clc
sbb
add
add
add
bound
add
test
xor
call
push
add
mov
repz
adc
mov
pop
pushf
mov
insl
jno
add
add
and
add
add
cmp
and
add
clc
sahf
popa
add
leave
push
fdivrs
jmp
clc
data16
dec
movsb
clc
test
jno
add
mov
fbstp
clc
loopne
popf
mov
push
clc
xchg
mov
mov
inc
add
and
enter
and
fistpl
setge
test
or
loope
sbb
mov
clc
add
add
clc
jb
add
clc
popf
testl
and
add
jno
add
pop
mov
ja
enter
imul
add
mov
push
add
repnz
clc
inc
clc
imul
dec
cmp
add
add
mov
daa
clc
int3
mov
jecxz
out
cmp
mov
mov
ss
clc
test
add
xchg
and
test
add
or
fimuls
pop
out
mov
add
add
cld
clc
mov
add
jno
add
cwtl
or
lret
and
add
xabort
lcall
clc
push
popf
cmc
mov
iret
add
add
and
add
cmpsl
clc
cltd
or
cmpsl
clc
sub
add
add
mov
mov
fadd
clc
int3
das
cmp
add
pushf
fnstsw
jb
add
pop
push
jbe
and
add
add
mov
lret
add
in
mov
clc
cmpsb
clc
das
es
out
outsb
push
mov
cmpsb
clc
notb
add
test
shll
add
add
jb
add
clc
pop
leave
enter
in
lods
push
add
cmp
add
jg
and
add
add
push
add
aaa
testb
add
add
clc
sub
mov
push
lret
inc
add
mov
clc
mov
xlat
mov
clc
cmp
push
mov
add
mov
int3
mov
lods
sbb
add
push
add
es
pop
adc
add
clc
repnz
jge
ror
xor
add
add
xchg
aas
sub
outsl
das
mov
ret
clc
addr16
and
add
clc
pop
roll
add
push
add
push
ss
and
jno
add
clc
inc
clc
sub
clc
dec
inc
add
cmp
clc
add
add
xor
add
sub
ds
add
add
xchg
leave
gs
loop
xchg
xor
add
clc
enter
ret
roll
add
clc
hlt
out
xabort
jmp
clc
ljmp
aas
clc
dec
mov
clc
mov
pop
inc
clc
or
lea
mov
xabort
xchg
sub
popf
cmpsb
clc
add
add
clc
pop
std
movsl
clc
cmp
pop
aad
sbb
jecxz
stos
mov
xchg
jecxz
gs
shlb
mov
mulb
add
add
add
add
popf
fwait
mov
mov
das
jo
add
add
jle
pushf
sbb
clc
mov
clc
imul
xchg
pushf
lret
stos
mov
pop
xchg
negl
mov
pop
rcrb
cmp
sahf
fisttpl
mov
pushf
and
add
or
cmp
clc
insl
loope
popf
xchg
pusha
add
out
xabort
clc
mov
mov
add
push
add
adc
add
leave
rdmsr
add
das
dec
mov
dec
jle
dec
add
add
ds
mov
push
stos
mov
add
clc
iret
dec
imul
inc
clc
xchg
rcrb
clc
xchg
xchg
push
add
lahf
cltd
scas
xchg
dec
bound
add
cmp
add
push
clc
mov
mov
add
xchg
into
and
add
clc
adc
mov
clc
push
add
jmp
xor
test
loope
movsl
clc
xor
add
or
clc
mov
jg
pop
adc
clc
dec
fstps
mov
add
inc
add
fiaddl
add
dec
pop
pop
clc
repnz
add
add
lods
add
add
in
and
add
imul
add
clc
aad
out
in
fisubrl
roll
adc
add
xbegin
nop
in
pop
repnz
xor
add
out
mov
clc
insb
adc
sbb
add
shll
add
add
bound
add
aas
jl
sub
or
loop
cmp
pop
stos
hlt
std
arpl
add
add
repz
mov
clc
add
xchg
push
add
mov
add
push
cli
or
clc
loope
add
dec
cmpsl
clc
mov
out
mov
in
in
adc
add
mov
clc
rorl
clc
cmp
push
add
mov
add
jo
add
outsb
icebp
lret
cmc
and
add
cli
dec
add
add
add
xchg
cmp
clc
and
cmp
mov
repz
pushf
jge
jg
clc
mov
add
inc
clc
cmc
mov
add
lret
fnstcw
lock
rcl
cmp
mov
in
mov
cmp
add
js
add
insb
test
bound
add
cmp
add
add
add
pop
pop
mov
clc
cmp
cmp
clc
mov
push
xchg
lret
sub
push
add
mov
cmp
adc
add
bound
add
push
add
and
add
cmp
xor
add
mov
pop
lock
add
mov
adc
add
add
add
clc
in
jmp
fisubs
or
sub
clc
sbb
jns
clc
popf
xchg
push
inc
clc
icebp
hlt
xor
add
movsb
clc
and
add
lahf
and
add
cmp
inc
add
push
mov
cmp
mov
add
imul
cmpsb
clc
aas
add
clc
lahf
loope
fidivrl
inc
clc
jo
add
add
cwtl
stos
std
cmp
jmp
dec
shl
xchg
call
aaa
adc
add
lock
add
inc
clc
icebp
push
add
pop
das
pop
adc
add
add
add
mov
dec
test
sar
clc
mov
imul
mov
jmp
clc
repnz
out
hlt
or
loop
xor
mov
shr
jno
add
cli
push
inc
clc
imul
xchg
mov
scas
push
push
fisubrs
add
xchg
divl
inc
add
ret
clc
xor
add
hlt
jbe
jecxz
shll
dec
daa
clc
shlb
add
jecxz
out
xor
add
mov
or
call
add
add
add
cmp
clc
rol
clc
pop
mov
mov
add
aam
scas
cmp
add
add
xchg
cmp
add
add
add
daa
clc
sar
clc
inc
add
sub
clc
ljmp
xbegin
std
xchg
xor
add
fnstsw
leave
popf
and
add
je
clc
fwait
mov
xor
push
add
xchg
cmc
mov
push
cmp
clc
jmp
pusha
add
mov
xor
add
jle
jne
test
addr16
push
pusha
add
sub
add
lea
pop
jns
dec
imul
es
sub
clc
cmp
repnz
clc
enter
ds
clc
mov
pushf
xbegin
clc
pop
pushf
pop
cs
clc
scas
jg
clc
push
add
das
rolb
add
inc
add
jb
add
jge
and
add
fists
add
jecxz
test
fildll
mov
clc
mov
mov
mov
add
push
dec
fldt
inc
add
fnstcw
std
cmp
clc
sub
iret
and
js
gs
sbb
aam
add
mov
add
or
jmp
test
clc
test
jmp
add
inc
clc
repnz
mov
mov
mov
aas
xchg
call
loop
add
add
adc
clc
cli
pushf
mov
push
clc
arpl
add
clc
adc
add
jle
clc
rolb
add
sbb
mov
add
xor
add
roll
add
jge
add
add
add
add
xchg
dec
and
add
xchg
xabort
clc
sahf
and
add
add
loope
push
js
test
fiaddl
add
add
mov
cmp
in
not
xor
mov
add
sub
clc
mov
sbb
clc
ficoms
aaa
sub
cmp
push
add
in
inc
clc
fmull
cs
sub
adc
add
cltd
adc
add
add
aad
aaa
movsb
clc
xor
add
add
mov
jae
add
out
mov
push
cmpsl
clc
dec
push
and
xor
add
inc
add
xor
add
jnp
clc
lahf
popa
add
sahf
fs
das
filds
push
addr16
aas
cmp
cmp
std
xor
add
clc
cwtl
sar
cmp
loop
popf
jmp
loopne
cmpsl
clc
mov
clc
sbb
sub
xchg
sti
mov
fsub
clc
pop
push
add
xor
clc
clc
or
loop
cmpsl
clc
inc
add
data16
adc
add
imul
add
push
add
dec
xor
add
popf
shrb
clc
iret
cmp
or
lahf
push
cmpsb
clc
xchg
and
clc
and
add
test
push
faddl
add
cmp
cmp
clc
outsl
bound
add
sbb
add
pop
ljmp
mov
clc
out
add
add
clc
jg
or
fldcw
clc
mov
call
jecxz,pt
xor
add
jp
test
mov
hlt
aad
add
push
add
arpl
add
sub
cmp
add
jmp
cmpsb
clc
or
xchg
xbegin
jns
clc
out
je
cli
xor
add
add
imul
push
data16
out
jp
mov
mov
and
add
add
ja
call
clc
mov
dec
cmp
jae
add
xchg
ds
cmp
daa
clc
sarl
add
add
fstps
jp
clc
jns
add
pop
xlat
mov
fsubs
add
cmp
clc
sti
xor
add
ss
pop
xchg
outsl
xor
add
mov
adc
add
int3
lea
inc
clc
xor
add
cltd
clc
mov
gs
sbb
clc
add
jl
es
rcll
clc
sub
clc
daa
clc
pop
stos
aam
push
add
jne
clc
in
test
loopne
stc
lock
add
add
add
clc
mov
clc
or
dec
mov
add
call
movsl
clc
repnz
clc
lods
mov
push
add
dec
clc
xchg
pop
and
add
xchg
xchg
xabort
sub
jno
add
js
mov
js
sbb
lret
clc
mov
into
mov
mov
xbegin
add
cld
clc
sub
xchg
movsb
clc
cmp
add
test
jae
add
xchg
mov
jae
add
pop
clc
dec
inc
clc
insb
xchg
sbb
pop
neg
jle
adc
inc
clc
pop
mov
xchg
imull
call
cmp
clc
adc
dec
adc
add
insl
adc
add
iret
xchg
imul
jg
clc
stc
mov
cmp
out
dec
pop
ja
sahf
adc
clc
out
push
add
cwtl
xabort
inc
clc
fucomip
jb
add
jno
add
add
add
add
push
addr16
addr16
in
cmp
repnz
add
adc
add
fstps
dec
mov
clc
iret
test
push
cld
push
ret
dec
sbb
cmp
sub
movsb
clc
jl
xchg
adc
add
clc
xchg
pop
xchg
or
popf
inc
add
aad
mov
push
cld
push
ret
add
clc
dec
leave
pop
div
jp
clc
clc
and
cmpsl
clc
push
add
lods
cmpsl
clc
ss
add
mov
add
out
cmp
add
add
add
icebp
and
mov
movsl
clc
dec
stc
inc
clc
mov
add
js
xchg
out
sar
add
sub
sub
fwait
jmp
xchg
or
or
sti
cld
push
ret
cmp
fs
movsb
clc
inc
clc
aas
mov
pop
sbb
clc
cmp
stc
cmp
add
inc
clc
ss
push
add
sbb
stc
data16
cmp
push
add
ret
clc
xchg
imul
mov
loop
jne
clc
and
add
clc
pop
arpl
add
gs
icebp
pop
adc
add
add
mov
xchg
leave
pop
clc
clc
fidivl
add
sar
imul
fmuls
mov
add
repnz
clc
lods
dec
hlt
out
xchg
mov
xchg
add
add
ljmp
push
add
mov
int3
das
mov
ss
clc
mov
inc
add
xchg
lea
jl
stos
nop
in
cli
repnz
clc
mov
clc
pusha
add
jae
add
shrb
add
cmpsb
clc
sub
repnz
clc
dec
add
outsb
in
mov
jnp
mov
xor
add
fistpl
shlb
clc
push
iret
out
inc
clc
mov
adc
jmp
clc
jbe
xchg
mov
add
lea
add
add
cmpsl
clc
out
repz
aam
sub
clc
inc
clc
shrb
leave
lock
add
add
jmp
int3
and
setb
add
xlat
pop
out
inc
add
pop
dec
push
mov
ja
fs
dec
cli
adc
add
adc
adc
sbb
add
pop
repnz
add
in
pop
clc
sub
add
sbb
fidivl
add
clc
inc
clc
aaa
jecxz
inc
add
into
cmp
in
inc
clc
gs
mov
clc
jmp
out
sbb
cld
push
ret
mov
sub
clc
inc
add
mov
pop
fwait
jmp
and
add
popa
add
cmc
mov
clc
xbegin
data16
or
mov
fwait
jmp
subb
ja
jne
push
add
jnp
das
and
sbb
das
push
add
sbb
lcall
sub
clc
and
add
clc
inc
clc
and
add
pop
cmp
push
pusha
add
movsb
push
sub
mov
clc
mov
clc
adc
add
js
add
loopne
dec
dec
ljmp
inc
clc
xor
add
dec
aas
add
add
es
mov
in
cs
fsubs
cmp
into
jge
jl
clc
dec
out
or
add
mov
clc
mov
dec
es
cltd
shrl
xchg
jne
addr16
xchg
jp
clc
lcall
xchg
pop
cmp
movsb
clc
ss
add
mov
bound
add
xlat
jmp
lcall
jmp
add
add
lahf
mov
jmp
dec
pop
xor
add
mov
xchg
xor
add
mov
pop
push
clc
inc
clc
xor
add
jae
add
popf
xbegin
push
add
aaa
ss
add
xchg
gs
jne
clc
cmp
popa
add
insl
sub
ss
jl
iret
jmp
nop
cwtl
adc
add
clc
divl
dec
push
fwait
jmp
sub
sub
inc
and
fwait
jmp
push
sub
das
in
scas
xor
add
fdivp
push
jbe
add
mov
add
mov
clc
int3
in
std
clc
cmc
fiadds
mov
pop
mov
sar
add
pushf
insb
bound
add
sbb
out
add
scas
fwait
inc
xchg
outsl
add
mov
push
add
pop
sub
popf
mov
clc
stc
push
add
daa
clc
sar
inc
add
jg
insb
xor
add
sahf
and
add
loopne
adc
loopne
inc
add
xchg
xchg
mov
in
inc
add
out
pop
add
add
hlt
clc
gs
jno,pn
add
jns
add
test
push
jle
add
cmp
jno
add
scas
dec
mov
sub
clc
mov
dec
sub
clc
pushf
inc
add
ja
xchg
movsl
clc
dec
lret
arpl
add
clc
jg
add
movsb
clc
nop
xchg
fldt
add
cmp
jno
add
add
jno
add
push
clc
mov
lahf
and
add
add
mov
dec
mov
fwait
jmp
das
fwait
and
ret
clc
push
mov
cwtl
bound
add
fdivr
arpl
add
divl
or
add
sbb
hlt
lods
mov
add
ffreep
clc
popa
add
mov
in
xor
add
jb
add
mov
sbb
fiadds
clc
jnp
je
clc
and
icebp
inc
clc
jae
add
lods
fwait
jmp
scas
outsl
xchg
lods
das
sbb
add
jo
add
lods
adc
push
add
sbb
js
add
add
add
cmp
add
xor
add
add
mov
add
add
add
inc
clc
cmp
xor
clc
push
mov
fwait
jmp
insb
lret
ds
data16
scas
or
pop
int
test
mov
scas
dec
fists
jmp
data16
jae
add
cmpsb
clc
add
add
dec
scas
mov
add
mov
adc
dec
mov
jmp
or
mov
clc
sar
and
pop
not
cmp
jnp
mov
add
mov
sbb
sub
clc
mov
int
add
sar
not
into
mov
dec
sarb
clc
xor
fnstenv
add
dec
clc
lods
mov
cmp
add
and
add
push
add
push
add
popa
add
mov
clc
iret
ss
sbb
add
add
imul
add
stc
arpl
add
add
inc
clc
lea
sar
clc
pop
pop
pop
loopne
out
sti
call
filds
add
and
add
add
xchg
hlt
jmp
add
mov
add
sbb
test
aad
iret
push
jmp
fwait
jmp
jno
fnstcw
nop
out
aad
mov
sub
clc
fwait
push
jb
add
mov
daa
clc
and
add
mov
insb
inc
add
mov
push
add
cmp
xor
clc
cmp
clc
outsb
xchg
or
sahf
jns
mov
push
pusha
add
loope
jl
test
xor
add
jne
dec
cmp
add
cmp
xabort
cmpsb
clc
mov
dec
call
data16
insl
data16
cmp
add
fwait
mov
iret
add
add
mov
xchg
int3
dec
cli
cmp
jmp
fwait
jmp
dec
repz
addr16
cmp
clc
cmp
clc
jae
add
dec
repnz
fwait
popa
add
negb
mov
add
cmp
add
jo
add
mov
fnstenv
push
push
fwait
jmp
fwait
push
xor
enter
aas
test
cmpsb
clc
jnp
int
inc
add
iret
stc
iret
aad
cmpsl
clc
scas
divl
clc
pop
mov
push
mov
inc
clc
sbb
dec
cmp
inc
clc
ss
mov
clc
adc
adc
add
add
test
cwtl
pop
fistpll
mov
add
lods
out
stos
cmp
clc
jp
push
add
dec
mov
clc
scas
mov
push
add
sbb
jne
cld
push
ret
jge
or
push
js
jge
mov
into
add
es
add
add
dec
cmp
clc
outsl
pop
add
add
ret
clc
js
clc
dec
or
mov
xlat
mov
add
jp
aam
add
out
dec
fdivs
add
push
jl
clc
das
stos
cmpsb
clc
jmp
add
add
or
clc
lea
mov
popf
lock
add
sahf
sub
clc
push
mov
fwait
jmp
or
jno
add
popa
add
jb
add
dec
fwait
jmp
lea
sub
sub
in
ljmp
pop
push
loopne
xlat
add
add
add
add
xor
add
arpl
add
clc
dec
arpl
add
xchg
fwait
jmp
es
sbb
test
jo
add
clc
in
xor
add
dec
cwtl
xor
add
call
lcall
movsl
clc
in
mov
clc
xchg
mov
jmp
xchg
sub
clc
jl
clc
aas
repnz
add
push
clc
jl
dec
push
jmp
sub
cmp
pop
cmpsb
clc
xabort
add
dec
jge
add
dec
aam
cmc
or
clc
xor
add
fildll
xor
add
insl
adc
mov
fwait
jmp
ja
test
pop
push
mov
fwait
jmp
cmpsb
pop
orb
pop
pop
clc
mov
pop
push
lcall
jg
push
add
fistps
mov
clc
jno
add
push
cli
daa
clc
mov
add
data16
xor
add
adc
add
int
repz
add
add
ds
and
add
clc
test
sbb
clc
adc
add
adc
add
clc
cs
push
mov
fwait
jmp
adc
add
dec
jl
in
ds
aaa
xor
add
or
xbegin
test
adc
add
dec
mov
clc
push
jo
add
add
jno
add
jnp
idivb
add
hlt
jge
inc
add
dec
xbegin
int
add
jo
add
fcomps
jmp
fwait
jmp
inc
xchg
adc
add
sahf
mov
sub
mov
sub
add
in
lods
jmp
clc
cs
clc
mov
dec
sti
je
insl
xor
add
fmull
add
adc
out
xchg
jle
mov
clc
fisubrs
clc
xchg
jmp
adc
out
pop
mov
jmp
fdivrs
insb
sahf
int3
out
add
add
add
add
lods
loop
int
cmp
pop
xabort
mov
movsb
add
sub
cmp
add
sub
mov
add
mov
imul
jle
add
rol
clc
hlt
negl
cld
cli
scas
ret
clc
inc
clc
lcall
icebp
fistpl
clc
mov
add
je
jmp
fimuls
clc
xor
add
add
clc
xbegin
clc
lret
mov
push
push
cld
push
ret
xchg
or
clc
fs
imul
clc
sahf
scas
sti
int3
jge
clc
mov
je
fwait
jmp
sar
xchg
loope
aaa
fiaddl
movsl
clc
cmp
and
fildl
jmp
cmpsb
pop
test
add
sbb
or
add
cwtl
repnz
add
sbb
add
mov
mov
inc
call
add
xchg
nop
inc
cmpsl
clc
cs
out
insl
stos
shlb
push
add
sbb
add
xor
add
nop
rcrb
mov
fwait
jmp
jg
mov
push
adc
add
sub
je
fwait
jmp
and
add
add
fwait
adc
sar
mov
clc
insb
mov
clc
dec
ret
mov
cmpsb
clc
xchg
jp
jns
add
in
fidivrl
or
xchg
loop
clc
xbegin
clc
fisttpll
clc
add
imul
cs
nop
xchg
mov
mov
shl
out
stos
cmpsl
clc
jl
add
mov
clc
shll
dec
inc
add
jb
add
add
inc
add
dec
outsl
push
push
ret
test
clc
sti
pushf
mov
inc
add
inc
add
push
int3
and
add
add
add
xchg
add
add
add
inc
clc
gs
js
clc
dec
das
pop
xchg
mov
insl
cwtl
in
enter
jmp
clc
sub
clc
fildl
clc
jge
lods
push
dec
loop
xor
add
add
cmp
loop
fwait
jmp
lea
arpl
add
icebp
mov
stos
xchg
loopne
test
add
adc
add
clc
and
add
mov
clc
out
adc
mov
inc
add
cmp
clc
fistl
add
clc
jns
mov
scas
xchg
vmovaps
xchg
push
test
xchg
pop
adc
add
dec
jbe
cmp
sub
cmp
clc
and
data16
icebp
cmpsb
clc
cmp
mov
mov
sarl
clc
shlb
add
cmp
add
add
mov
jecxz
xor
clc
scas
mov
sub
or
add
shlb
clc
out
mov
insb
shl
dec
cmp
add
jo
add
lods
push
pop
fwait
jmp
es
sub
lea
xor
add
cmp
clc
fistps
jecxz
dec
sbb
movb
aaa
sbb
cmp
mov
cld
push
ret
sbb
xabort
int3
mov
jmp
jno
ja
dec
aaa
pop
clc
or
add
mov
add
mov
clc
inc
add
cmp
dec
xor
add
add
dec
push
add
xchg
daa
clc
push
clc
inc
clc
xlat
rcrb
clc
mov
clc
in
xchg
xor
add
add
xchg
movsl
clc
or
fnstenv
add
sub
mov
cwtl
lock
add
sub
add
or
clc
push
add
xor
add
fbld
clc
pop
call
out
lret
dec
test
pusha
add
pop
es
cltd
pop
or
ss
add
shrl
outsb
pop
sar
pop
je
add
cmp
add
pusha
add
sub
in
scas
cmp
arpl
add
clc
or
mov
xor
add
add
pop
leave
ror
ja
dec
fistpll
mov
scas
and
add
gs
xchg
adc
add
add
or
add
mov
add
add
gs
nop
cli
rorl
icebp
paddusw
test
pop
jb
add
sahf
out
call
add
add
add
ret
push
add
jae
add
dec
push
std
loope
fwait
and
add
adc
add
fistpl
lcall
cmpsl
clc
mov
dec
mov
clc
nop
inc
add
adc
add
mov
add
add
mov
loopne
push
xchg
mov
fwait
jmp
aas
cmpsb
add
fsubs
add
fldenv
add
sub
clc
fstpl
jnp
add
outsl
and
aam
clc
insb
mov
dec
mulb
clc
add
fcmove
adc
add
mov
mov
cwtl
sbb
add
aaa
ljmp
pop
clc
repnz
cmp
inc
add
or
rcr
js
mov
add
fwait
jmp
adc
ja
add
add
add
inc
add
iret
inc
add
pusha
add
iret
enter
dec
arpl
add
clc
ret
ds
xor
fwait
jmp
sub
clc
mov
push
dec
cmp
jmp
lods
mov
add
je
add
pusha
add
xor
push
cmp
add
cltd
lret
mov
ret
clc
push
add
int
add
adc
add
movsb
clc
lret
mov
sahf
enter
out
add
add
add
add
scas
and
add
out
cmp
insb
jb
add
sub
mov
jl
idivl
mov
clc
push
sub
insl
inc
clc
mov
clc
dec
push
jmp
add
aam
clc
cmp
cmp
add
mov
add
outsb
dec
in
adc
add
add
add
stos
mov
ljmp
fwait
jmp
sahf
sarb
shl
inc
clc
test
jle
clc
pop
ret
add
lods
std
cs
cmp
aad
add
dec
fisttpll
xchg
movsb
clc
jmp
daa
clc
fsubrl
stos
sbb
push
jg
clc
xor
add
ds
mov
inc
add
pop
mov
mov
aam
pop
mov
mov
les
add
nop
cmp
mov
xor
add
add
mov
clc
jmp
xlat
cmp
sbb
cmp
jmp
inc
add
loop
jmp
mov
push
sar
sbb
test
jmp
adc
add
add
scas
mov
or
clc
pop
movsb
clc
push
clc
cld
sbb
xor
add
clc
scas
int3
fcom
jbe
mov
fwait
jmp
sub
add
sahf
outsb
mov
mov
ja
mov
ja
xor
add
add
test
clc
pop
dec
xor
add
add
test
sbb
or
clc
jno
add
xlat
loop
push
enter
sar
add
xabort
lods
clc
fidivl
cmc
int
inc
add
or
push
fwait
jmp
ja
mov
add
add
push
add
pop
dec
jge
add
inc
clc
inc
clc
in
xchg
mov
mov
sbb
inc
add
adcb
movsb
adc
sub
sbb
jge
push
add
or
sbb
pop
fadds
add
jns
cmp
clc
mov
clc
imul
add
por
bound
add
xchg
push
add
rcrb
addr16
imul
add
bound
add
call
jmp
outsl
mov
js
cli
mov
clc
and
add
sar
xbegin
mov
cmpsl
clc
ficompl
mov
jnp
rcrb
add
adc
clc
cs
dec
xlat
mov
fadds
mov
clc
lock
cmp
not
loop
sbb
xlat
push
add
jo
add
add
icebp
xchg
push
mov
fwait
jmp
test
data16
pop
mov
inc
clc
or
addr16
scas
enter
or
movsb
clc
mov
add
cmpsl
clc
push
add
shll
add
cltd
jns
clc
nop
loop
cmp
lods
cmp
add
mov
add
lock
clc
mov
js
push
loop
mov
add
ja
xor
testl
clc
adc
add
add
add
in
push
add
mov
clc
dec
jp
clc
xor
add
pop
testb
clc
cltd
xchg
mov
add
cs
mov
clc
add
hlt
popf
lret
mov
xor
add
dec
cmp
add
imul
add
jb
add
loope
cmp
shlb
add
test
jo
add
add
nop
cmpsb
clc
call
cmp
clc
fistpll
sbb
add
ss
clc
adc
add
lods
nop
ret
clc
sub
push
jne
fwait
jmp
xor
add
mov
ds
arpl
add
clc
push
add
mov
clc
xchg
jmp
mov
mov
add
push
je
fwait
jmp
mulb
clc
xchg
in
jno
add
and
add
add
cmpsl
clc
lcall
add
std
xor
add
xchg
pop
clc
xor
mov
cmpsl
clc
add
add
clc
jmp
mov
lret
clc
aam
sub
add
add
xor
fwait
jmp
sub
aaa
pop
and
enter
clc
shll
clc
xchg
add
xor
add
add
add
clc
aam
clc
enter
push
add
sub
jmp
imul
stos
ror
mov
shrb
clc
cltd
push
sbb
ret
pop
sbb
add
and
add
cwtl
cmp
or
add
popa
add
xchg
rcrl
xor
add
clc
addr16
adc
mov
scas
cmp
push
scas
sti
and
add
lods
sub
jne
mov
add
test
add
fwait
jmp
push
add
loop
push
mov
add
inc
add
xlat
adc
add
clc
xabort
add
dec
inc
add
add
pop
enter
popa
add
mov
or
add
dec
inc
add
dec
xlat
and
add
pop
test
or
cmp
add
ret
clc
pop
sar
add
sbb
aam
bound
add
pop
mov
clc
pop
add
add
add
and
ljmp
out
in
cmp
bnd
add
add
add
add
cmp
mov
test
sub
sbb
mov
sbb
add
fwait
jmp
test
ss
int3
fwait
sar
imul
pop
mov
add
loop
sti
jno
dec
imul
clc
imul
mov
aad
mov
aad
clc
sub
cmp
pop
clc
mov
add
dec
mov
pop
ds
out
div
sti
fsts
add
clc
pop
push
add
add
add
and
add
sub
cmp
add
cmc
and
add
sbb
add
mov
add
jno
add
add
ds
mov
ret
and
add
cwtl
jno
add
sbb
fildll
call
fwait
jmp
push
xor
add
add
clc
lock
or
xchg
pop
clc
fcmovnb
clc
out
inc
add
rorl
clc
adc
add
and
mov
loope
fstpt
clc
stc
mov
mov
clc
out
arpl
add
clc
add
add
add
dec
into
mov
clc
pop
xchg
lods
insl
arpl
add
adc
add
cmp
ret
clc
data16
clc
into
mov
jmp
movzwl
cld
push
ret
outsl
sahf
lret
mov
inc
clc
out
pop
ret
clc
jg
stos
pusha
add
mov
mov
cld
pop
xlat
sub
hlt
mov
sub
xor
add
ljmp
bound
add
sub
insb
xbegin
inc
add
mov
clc
mov
mov
fwait
jmp
sub
sahf
data16
gs
test
clc
cmp
sbb
clc
push
and
add
xor
add
gs
cwtl
add
add
jmp
inc
fwait
jp
and
clc
push
pusha
add
loope
sar
sti
addr16
jno
add
pop
imul
fucom
clc
cmp
clc
cmp
xchg
ret
clc
in
ficoml
push
cs
data16
in
sar
pop
clc
cmp
sbb
stos
push
clc
jg
clc
mov
clc
mov
insl
push
jae
add
loopne
add
add
add
clc
mov
sar
test
xchg
aas
je
inc
clc
pop
nop
pop
clc
adc
add
add
sbb
clc
test
add
xor
add
clc
pusha
add
stos
cmp
add
xor
add
clc
into
ja
jge
incl
dec
cmp
jmp
add
and
clc
sub
jle
movsl
clc
out
jmp
fdivrp
movsl
clc
fcompl
test
mov
nop
and
add
add
inc
add
or
xchg
mov
inc
clc
adc
add
add
sbb
sub
add
jg
clc
out
cs
clc
dec
pop
cmp
sbb
shll
add
fadds
add
cmc
insb
pop
mov
cmp
popf
mov
push
add
inc
or
daa
clc
es
in
insl
mov
addr16
addr16
fcmovnu
sbb
inc
clc
and
jo
add
clc
xlat
mov
mov
pop
clc
dec
sar
clc
sti
enter
add
stc
push
jno
add
scas
xlat
and
mov
clc
mov
push
ret
adc
fs
int
add
leave
xlat
mov
add
cld
push
ret
cwtl
adc
xchg
push
push
add
fwait
jmp
data16
xbegin
add
jnp
push
clc
arpl
add
clc
xchg
js
sub
clc
and
add
clc
xor
add
adc
add
ja
sub
outsb
mov
popa
add
int
aas
cmp
clc
ljmp
add
xchg
dec
bound
add
lret
add
iret
xor
add
adc
add
add
push
add
add
add
push
clc
jge
test
push
fwait
jmp
sub
add
cmc
je
jmp
clc
push
dec
cld
push
ret
lea
mov
movsl
clc
cmp
roll
xor
add
inc
clc
mov
sub
inc
clc
in
loopne
jle
clc
mov
push
movswl
fwait
jmp
jge
mov
add
mov
add
insb
rolb
clc
out
dec
enter
fstl
jb
add
nop
test
jl
mov
add
add
add
fs
or
pop
cmp
jg
mov
icebp
sar
loop
or
out
dec
in
xchg
mov
out
push
add
push
loope
out
jecxz
xabort
clc
data16
xchg
adc
add
ret
fwait
jmp
imul
add
mov
clc
push
clc
xchg
pop
push
push
mov
clc
rolb
add
pop
cmp
add
mov
bnd
mov
imul
call
clc
jmp
fwait
jmp
popa
outsl
inc
leave
clc
jae
add
cmp
jns
jmp
add
mov
mov
add
jne
clc
adc
add
add
out
fsubs
add
jno
add
clc
pop
clc
push
fdivs
and
pop
clc
cmp
ljmp
adc
clc
mov
jecxz
pop
add
add
dec
ljmp
scas
pop
mov
inc
sub
xor
rcr
add
add
das
pop
jmp
incl
jne
fwait
jmp
mov
jg
movsl
clc
leave
into
mov
cmp
cmpsb
clc
sbb
loopne
mov
fwait
jmp
pop
jp
in
or
add
sbb
add
out
or
clc
insb
jb
add
stos
jo
add
jle
clc
add
add
jno
add
clc
jl
clc
push
add
add
add
mov
cmp
aad
clc
and
inc
add
cmpsl
clc
in
cwtl
xchg
push
clc
addr16
lea
add
mov
add
inc
clc
fbld
add
or
push
add
movsl
clc
imul
xchg
test
lret
add
xabort
add
ret
add
negb
cld
cmp
dec
mov
clc
cmpsl
clc
scas
or
add
mov
add
cld
push
ret
push
adc
add
or
mov
setle
add
pusha
add
mov
aad
clc
mov
loop
movsl
clc
stc
aam
xchg
sub
clc
cmp
jp
pop
push
aaa
inc
clc
mov
mov
fstps
sti
sar
lea
jmp
sub
dec
fwait
xchg
pop
push
fidivs
mov
clc
mov
xor
add
scas
out
mov
into
fcmovnbe
fs
outsb
or
cmpsb
clc
push
xchg
sub
popa
add
dec
sahf
insl
dec
cld
addr16
js
clc
leave
adc
add
sbb
add
sbb
addr16
aam
jle
inc
add
mov
cmovnp
kmovw
sub
add
sub
add
add
pop
sbb
inc
add
sar
lcall
popf
mov
ja
mov
add
rorl
data16
mov
clc
xchg
ja
addr16
cli
in
imul
mov
and
push
jmp
pop
xchg
ja
clc
mulb
clc
jecxz
xchg
in
mov
clc
mov
xchg
enter
and
add
add
inc
add
ljmp
lea
cmp
add
stos
fwait
cld
jp
mulb
add
pop
out
ficoml
push
ret
and
or
push
js
jmp
add
aam
add
xor
add
imull
add
or
cmp
push
clc
dec
xor
add
inc
clc
sbb
lock
add
adc
add
shll
add
push
clc
lods
sbb
clc
push
pop
add
sub
add
out
movsl
clc
mov
mov
add
vmovhps
movsl
clc
dec
mov
scas
sub
icebp
push
add
or
clc
mov
clc
icebp
js
mov
clc
pushf
pushf
cmp
add
push
xabort
and
add
outsb
mov
jecxz
insl
mov
xchg
xchg
mov
add
dec
je
inc
clc
adc
add
mov
fwait
jmp
sub
mov
add
loope
jmp
mov
add
add
sub
push
sub
clc
xor
add
and
add
jns
aas
sbb
jmp
xchg
imul
sti
ss
testl
clc
loope
mov
add
push
xchg
stc
test
add
out
aas
push
add
and
add
cmc
or
into
or
or
mov
push
in
jle
clc
or
clc
cmp
clc
aad
add
data16
xchg
arpl
add
sbb
clc
or
xchg
pop
push
add
add
movsl
clc
int3
or
sub
ret
lea
cmp
mov
arpl
add
enter
popf
lret
or
ret
clc
jnp
fidivrs
mov
jne
add
loopne
add
add
pop
test
inc
add
rcrb
push
cld
push
ret
push
sub
aam
mov
or
test
pop
inc
clc
cltd
push
add
inc
clc
and
add
xbegin
add
add
add
add
pop
pop
and
add
clc
popa
add
frndint
popa
add
mov
enter
clc
add
add
fs
lret
inc
add
cmpsb
clc
clc
sbb
dec
xchg
add
sub
out
cmp
inc
add
fdivrs
mov
pop
pushf
jno
add
jp
cmp
push
clc
sbb
or
clc
gs
xchg
jg
clc
out
aaa
cmp
test
push
add
scas
mov
add
adc
add
ljmp
xor
add
push
fwait
jmp
sub
js
add
stc
jo
add
jmp
fwait
sub
sbb
add
unpcklps
add
je
add
scas
add
cmpsb
clc
and
add
ret
fwait
jmp
scas
and
stc
clc
push
insb
adc
add
ret
dec
inc
add
cmc
out
adc
add
push
mov
clc
lods
xchg
leave
pop
mov
pop
jbe
add
fbld
add
push
and
add
lods
pop
scas
inc
add
sbb
add
sti
into
movswl
cmp
add
jbe
icebp
sbb
add
add
jns
inc
add
jge
inc
add
jp
ds
jno
add
cmc
loope
outsb
jle
or
jmp
loopne
mov
sbb
mov
icebp
xor
loopne
shll
add
scas
cmp
sbb
push
jmp
sub
add
sub
dec
dec
dec
mov
not
push
xchg
or
push
add
cltd
fxtract
push
adc
add
add
daa
clc
stos
mov
add
cmp
clc
dec
jns
dec
ss
jmp
or
add
lahf
or
add
iret
std
mov
es
mov
xchg
cltd
cmp
cli
ja
clc
or
sbb
clc
pop
lods
std
and
test
xor
add
clc
cmpsl
clc
fstpt
and
test
inc
clc
cli
pusha
add
cmp
out
jg
add
outsb
sub
clc
pop
clc
or
clc
push
add
add
xor
sub
loope
jbe
ret
fwait
jmp
sub
xor
add
stos
fwait
jmp
sub
lcall
sub
dec
push
clc
mov
jno
add
cs
std
out
std
fsin
loop
jo
add
cmc
dec
fsubs
add
out
dec
mov
mov
cmpsl
clc
repnz
mov
push
cmp
clc
jno
add
jae
add
es
ret
clc
xlat
sbb
sub
push
mov
push
push
add
in
jmp
add
lea
clc
xchg
jne
clc
sub
add
lods
push
push
add
jno
add
fadd
clc
mov
test
mov
add
add
add
mov
push
jno
add
add
out
and
add
add
and
add
sbb
mov
clc
inc
clc
mov
stc
outsb
or
adc
add
jnp
xchg
cmp
gs
gs
out
inc
clc
scas
mov
xchg
cmpsb
clc
xlat
test
add
lret
mul
clc
fs
push
add
mov
inc
clc
es
add
add
ret
clc
int3
cmp
in
insl
pop
jl
clc
std
and
sub
clc
xabort
add
inc
add
inc
add
cmc
hlt
pusha
add
xchg
xchg
cmp
push
and
add
inc
clc
add
arpl
add
mov
sarl
fwait
pop
decl
test
add
fwait
jmp
inc
add
mov
into
outsl
xchg
lods
or
and
jmp
sub
jp
clc
clc
or
imul
ds
cwtl
or
mov
add
cmpsb
clc
clc
or
inc
clc
add
sbb
clc
int3
sub
clc
pop
clc
and
add
jbe
xor
add
clc
loop
push
jmp
fwait
jmp
mov
clc
mov
arpl
add
das
data16
inc
add
test
push
add
push
cmc
push
add
fwait
jmp
xchg
or
lcall
sti
and
add
test
repnz
stos
outsl
cmp
xbegin
pop
gs
xor
add
cmpsb
clc
out
jmp
cmp
clc
fadds
add
add
adc
add
lea
in
mov
add
testb
add
add
xchg
jns
mov
dec
ja
mov
fwait
jmp
and
dec
aas
mov
add
clc
bound
add
clc
ret
add
cmp
add
rol
clc
dec
mov
dec
sbb
or
add
xor
mov
jle
clc
dec
rcrl
clc
and
add
and
cld
push
ret
data16
addr16
xor
aaa
mov
jmp
sub
jne
cld
scas
es
gs
daa
clc
jmp
cmp
daa
clc
and
add
add
xchg
xor
add
add
in
xor
add
idivl
add
pop
sar
jl
ljmp
mov
clc
dec
cmp
clc
push
clc
addr16
leave
jl
clc
int3
push
aaa
ds
add
and
add
out
fistpll
sbb
mov
clc
aaa
mov
inc
add
fists
add
gs
jne
test
jmp
clc
mov
add
add
pop
in
or
clc
ret
clc
inc
clc
xchg
adc
add
clc
cmp
add
scas
and
add
shl
clc
jne
add
mulb
jmp
clc
loop
pop
clc
mov
jg
repz
push
jno
add
hlt
pop
sbb
add
add
add
pop
push
rep
fwait
jmp
jge
sub
cmp
add
in
cmp
in
popf
stos
aam
data16
mov
and
add
add
clc
jnp
loop
sub
add
mov
add
addr16
push
add
push
add
or
xabort
push
cld
push
ret
sahf
add
nop
push
push
mov
mov
cmp
adc
dec
sbb
push
add
inc
clc
dec
pop
clc
in
push
loopne
fwait
jmp
mov
push
ret
je
xchg
aaa
dec
mov
push
jno
sub
add
sbb
incl
sti
fwait
jmp
test
nop
inc
add
push
add
fwait
jmp
jp
test
pop
pop
clc
sbb
xor
add
add
add
clc
clc
push
push
lock
fwait
jmp
test
fs
jp
popf
daa
clc
mov
mov
xor
daa
clc
enter
std
mov
js
hlt
stos
sub
push
add
push
jle
push
clc
mov
cmp
clc
push
adc
add
into
cmp
clc
mov
pop
or
pusha
add
and
add
mov
outsl
loopne,pn
testl
sahf
into
cmp
hlt
adc
add
sub
cmp
mov
cli
loope
pop
push
dec
sbb
test
cld
push
ret
push
aaa
xchg
or
jl
icebp
int3
push
adc
lea
cmp
add
loopne
sti
dec
xor
add
cmp
clc
cmp
mov
add
out
mov
idiv
aam
pop
cmp
and
fwait
jmp
add
outsl
mov
fucomp
and
add
in
cmp
add
fwait
clc
add
jg
test
xchg
pusha
add
lods
imul
jl
jmp
fiaddl
add
jae
add
add
inc
clc
repz
mov
xor
add
adc
sub
cmpsb
clc
xchg
pop
int
mov
clc
jbe
jno
add
ja
clc
adc
add
leave
outsb
pop
arpl
add
jne
and
add
jns
push
cmp
cmp
clc
cmp
add
pop
cmp
popa
add
int3
add
ret
mov
add
add
add
cmc
cmp
clc
ja
lock
add
xchg
pop
shll
add
lret
sti
out
push
add
pop
add
add
xor
add
mov
add
aad
clc
fcoml
fwait
jmp
aas
and
cmp
pop
pop
xchg
enter
add
inc
add
pop
push
sbb
dec
jmp
xchg
jge
pop
mov
aaa
cmp
clc
pushf
mov
add
push
lret
dec
xchg
add
mov
add
cmpsl
clc
fiaddl
add
cmp
clc
cmp
clc
imul
mov
jnp
add
roll
clc
and
add
clc
scas
adc
add
xor
add
lahf
inc
clc
fldl
lret
sbb
adc
add
mov
pop
clc
jge
jge
mov
insl
jp
or
lock
cmp
clc
clc
movsl
clc
xchg
xabort
jmp
mov
clc
jnp
dec
incl
dec
cmp
jmp
sub
clc
dec
push
add
mulb
jnp
popf
cmp
add
add
sbb
push
add
out
sbb
mov
pop
add
cmp
js
pop
std
movsb
clc
pop
scas
dec
sbb
adc
add
push
cld
sahf
repnz
add
jl
jno
add
adc
int
cmp
mov
cmp
add
xbegin
ficompl
ror
popf
xor
xchg
mov
add
dec
data16
jae
add
daa
clc
std
dec
ficompl
add
lods
and
cltd
dec
cmp
jl
xchg
rorl
add
int3
mov
pop
insb
mov
test
in
add
add
add
mov
inc
clc
mov
add
mov
jmp
in
test
cmp
add
lahf
mov
add
inc
or
add
cmpsb
xchg
hlt
cmp
mov
cs
mov
add
inc
clc
sar
sbb
and
add
repz
and
add
add
adc
clc
add
xor
add
fwait
jmp
imul
add
xchg
jg
dec
mov
jecxz
shlb
add
xbegin
mov
fiadds
add
add
pop
insb
dec
push
call
clc
adc
add
xchg
jo
add
xor
add
clc
jmp
clc
popa
add
ljmp
inc
add
pop
pop
das
popa
add
test
jge
not
pop
test
loope
sbb
push
pusha
add
aaa
fs
pop
imul
clc
mov
repnz
shrb
loope
repz
mov
push
mov
fwait
push
add
add
add
mov
adc
clc
adc
add
add
lods
xchg
ss
xchg
fsub
clc
add
pop
clc
xchg
hlt
cmp
adc
add
fs
jns
clc
jle
out
rorl
test
xchg
enter
add
mov
leave
mov
xchg
cmp
data16
pusha
add
jae
add
pop
fwait
jmp
outsl
test
pop
scas
pushf
push
clc
scas
mov
add
jo
add
add
clc
adc
add
sub
add
clc
dec
int
ja
popa
add
and
add
cmp
add
fisttpll
stc
lret
cmp
clc
and
add
add
xchg
stc
sub
clc
mov
pop
lret
pcmpgtb
and
add
xchg
pop
push
mov
push
clc
pop
loop
cmpsb
clc
lcall
dec
pop
das
and
add
add
clc
pop
mov
inc
clc
jl
jl
jecxz
outsb
inc
clc
pop
aam
clc
push
push
ret
inc
sub
add
adc
add
jb
add
add
clc
jne
sub
add
mov
clc
enter
inc
add
aas
pop
cmp
jge
add
cmp
dec
outsl
add
add
clc
mov
popa
add
stos
xor
add
jmp
jl
arpl
add
mov
push
inc
add
xor
clc
dec
clc
sarb
test
fwait
jmp
add
jg
add
cmp
adc
add
mov
add
xor
ja
insb
or
clc
cmp
cmp
sahf
aam
pop
xchg
xchg
fs
enter
cwtl
insl
gs
fistl
fsubrl
sub
outsl
popa
add
out
cmp
clc
inc
add
cmp
movsb
clc
insl
xchg
push
pusha
add
sbb
cli
ljmp
or
das
mov
in
and
inc
add
xbegin
imul
aad
in
jb
add
adc
add
jl
and
add
cmp
or
add
cmc
push
sbb
pop
push
add
lock
clc
enter
dec
or
inc
clc
int3
push
std
pop
sbb
jnp
add
jae
add
jo
add
pop
push
jne
fwait
jmp
push
add
in
xabort
clc
inc
clc
jmp
add
pop
adc
add
add
pop
inc
clc
mov
dec
mov
xor
add
add
adc
add
push
scas
clc
repnz
add
xchg
cwtl
in
inc
clc
mov
leave
inc
add
mov
in
push
add
fistl
add
sub
mov
je
in
inc
clc
cmp
test
stc
sbb
clc
xchg
mov
inc
add
mov
clc
and
add
push
add
xchg
xlat
xchg
jb
add
stos
ds
add
add
add
add
jo
add
add
dec
dec
into
dec
mov
call
fwait
jmp
add
cmp
add
push
jbe
add
out
push
add
pop
loopne
mov
add
ljmp
add
sbb
test
xchg
cmpsl
clc
mov
add
lcall
add
ds
adc
add
cmp
add
aas
adc
add
repnz
add
clc
mov
add
pop
pop
xor
add
clc
jl
jge
int3
adc
clc
add
add
out
jnp
add
jae
add
add
ret
cmp
add
xabort
xor
add
or
add
scas
add
xor
add
clc
icebp
pushf
or
outsl
insb
cmp
push
jmp
imul
push
jns
clc
popf
dec
ficoms
add
jl
and
add
pop
lcall
clc
out
cmp
cmp
cmp
push
shrl
adc
aas
adc
add
or
xchg
pop
fabs
clc
xchg
insb
inc
add
mov
add
clc
sub
sub
push
cld
push
ret
sub
cld
and
je
cmp
xchg
lret
dec
fstps
add
mov
mov
dec
lcall
push
cld
push
ret
push
pop
dec
fs
xchg
xchg
jne
add
cli
sub
pop
inc
clc
in
sub
xchg
or
add
add
add
iret
jmp
xchg
in
cmpsb
clc
inc
clc
cmp
sbb
add
push
cwtl
or
cmp
add
add
jp
mov
cmp
clc
out
and
add
dec
push
sbb
xchg
adc
clc
icebp
dec
das
dec
mov
pop
xabort
clc
push
clc
inc
add
mov
inc
clc
sbb
js
fwait
jmp
sbb
repz
cld
add
add
add
clc
inc
add
mov
xor
add
clc
jg
mov
mov
adc
inc
add
leave
adc
add
sbb
dec
sub
add
sub
or
add
jno
add
rcrb
or
cmp
clc
push
sub
add
fcmove
shl
clc
pop
mov
cltd
lret
mov
mov
mov
jp
clc
xor
add
inc
add
arpl
add
xor
add
fmuls
in
movsl
clc
dec
cmp
ja
clc
mov
cltd
xchg
loopne
mov
mov
negl
add
clc
sti
gs
cmp
jle
sysret
clc
pop
lea
adc
add
add
add
popf
pop
or
xor
xor
add
jns
mov
sti
cmp
clc
iret
inc
add
cmp
mov
or
add
sub
mov
cmp
and
mov
add
pop
mov
sub
add
add
test
pop
mov
test
add
fwait
jmp
scas
mov
add
jb
add
imul
in
sbb
push
mov
sbb
out
test
sub
mov
add
out
inc
clc
jl
mov
mov
insb
mov
cmp
add
add
dec
loop
mov
clc
mov
clc
sub
mov
sbb
ss
push
fwait
jmp
sub
xchg
ja
int3
sub
clc
js
adc
add
cmp
testb
clc
ds
sbb
add
stos
scas
and
add
inc
add
mov
loopne
fsts
add
stc
leave
and
sub
cmp
movsl
or
ret
pop
xchg
inc
jp
push
clc
arpl
add
clc
pop
clc
shrl
aad
or
fsubl
add
xchg
pop
sti
lods
fsubrl
add
mov
inc
add
mov
clc
test
sbb
add
cmp
clc
mov
add
clc
fisttpl
xor
add
add
mov
clc
test
js
ja
sub
and
add
jge
pop
aad
add
scas
das
push
loope
test
sbb
jmp
fwait
lods
push
popa
cmpsb
lret
clc
sub
dec
and
add
xchg
xor
add
clc
mov
xchg
xbegin
jae
add
addr16
ret
out
xchg
dec
adc
clc
mov
pop
adc
add
das
lea
add
ljmp
jmp
sub
inc
jecxz
out
in
xchg
lock
mov
push
add
push
adc
jmp
es
add
mov
clc
add
clc
out
or
mov
mov
add
add
push
in
add
jge
sub
stc
ficoms
add
in
cld
push
add
fisubs
dec
lret
add
scas
incb
clc
xor
clc
adc
add
popa
add
out
sub
add
mov
clc
in
std
loop
cmp
jmp
dec
adc
add
add
cmc
lock
jne
cld
push
ret
pop
pop
aam
xchg
pop
clc
sub
jecxz
push
add
pop
ljmp
mov
loopne
fldl
add
xbegin
adc
add
push
inc
clc
or
clc
xchg
enter
clc
mov
decb
clc
fs
mov
decb
fwait
jmp
mov
shlb
add
mov
xor
add
push
fwait
loope
lods
clc
jnp
push
cltd
push
add
test
cmp
mov
add
fwait
jmp
mov
add
add
in
lcall
xchg
cmp
add
fwait
jmp
popa
mov
jne
ret
clc
push
push
push
popf
fwait
jmp
scas
dec
sub
jno
push
int
xor
add
add
add
xchg
mov
add
pop
sbb
xchg
dec
pop
arpl
add
shlb
inc
clc
mov
iret
mov
clc
lock
cltd
mov
mov
imul
adc
add
ja
adc
add
mov
into
cli
insl
mov
cmp
xor
add
stos
mov
das
mov
jmp
sahf
movsb
cmp
clc
push
sub
shlb
mov
decl
dec
add
inc
subb
add
or
inc
add
jmp
mov
or
add
lret
stc
dec
add
add
loope
outsl
xor
fbstp
add
mov
shr
push
add
sub
daa
clc
cmp
clc
xchg
into
out
aas
push
sahf
sbb
outsl
pop
jne
incl
xchg
inc
add
lods
inc
scas
leave
jae
add
fidivl
mov
mov
or
movsb
clc
mov
add
in
in
bound
add
xchg
mov
cltd
fmuls
clc
clc
test
clc
add
add
clc
sahf
ljmp
mov
clc
sub
add
jmp
fs
sub
sub
add
div
cmp
insb
add
add
bound
add
out
out
sbb
push
adc
decl
add
add
add
sub
dec
cld
push
ret
sub
dec
pushf
fisttps
scas
enter
call
or
mov
decl
fbld
add
xchg
xor
push
add
pop
xchg
mov
aas
xchg
lea
mov
add
jl
clc
jl
into
cmp
sarb
push
ret
clc
mov
add
add
mov
scas
stos
sbb
add
clc
lret
int3
cmp
jmp
clc
sub
sub
add
xor
arpl
add
clc
dec
or
add
jae
add
add
lahf
adc
test
fldt
clc
cli
popa
add
push
clc
jno
add
cmp
add
nop
add
clc
loope
shr
iret
jns
mov
jae
add
clc
sar
ss
clc
movsb
clc
sar
in
mov
jno
add
cltd
mov
clc
nop
fsubrp
sub
mov
clc
mov
cli
jo
add
es
mov
pop
mov
jge
and
imul
clc
cmp
clc
xbegin
add
add
add
jae
add
mov
fwait
jmp
dec
cmp
ja
lahf
mov
add
sti
mov
add
add
test
cmp
mov
fwait
jmp
mov
fwait
jmp
xor
push
sub
add
leave
xabort
add
inc
add
dec
jmp
lock
cli
inc
add
bound
add
add
inc
add
cmp
data16
movsb
clc
daa
clc
ss
popa
add
enter
mov
add
inc
add
pop
stos
ret
enter
clc
cmp
cmp
pop
stc
pusha
add
mov
pushf
dec
xchg
xchg
lea
in
xor
sbb
add
add
cmp
add
jmp
clc
outsb
outsl
ret
clc
insl
mov
and
mov
mov
popa
add
sahf
mov
clc
push
std
mov
aam
aaa
xchg
or
push
sub
clc
testb
mov
aaa
jne
lods
sar
clc
xor
lea
mov
fwait
jmp
xor
sub
fldenv
add
jbe
cmp
daa
clc
inc
clc
bound
add
jns
add
add
jmp
sar
pop
sbb
cmp
clc
lcall
xor
add
add
inc
add
mov
cmp
add
sbb
loope
pop
mov
pop
dec
jno
add
in
pusha
add
or
clc
add
add
mov
clc
push
movsb
clc
leave
cmpsb
clc
fstps
add
dec
arpl
add
jecxz
mov
clc
outsb
mov
push
iret
sbb
cmp
add
fcmovb
clc
in
fisttps
clc
sub
mov
fsubrl
add
mov
movsb
clc
js
cmp
test
push
xor
fwait
jmp
fs
mov
add
fwait
jmp
jle
std
data16
mov
add
jle
div
mov
inc
clc
pop
call
xchg
ret
clc
adc
add
rclb
add
das
cmp
add
clc
xchg
sbb
mov
clc
jae
add
xchg
fcomps
and
add
loop
cwtl
sbb
dec
ficoml
xor
add
add
sysenter
pop
clc
xbegin
lahf
ret
clc
mov
fwait
jmp
sub
into
dec
or
mov
sub
loope
adc
xchg
fwait
jmp
lea
scas
cwtl
mov
clc
popa
add
inc
add
sub
add
test
out
into
mov
mov
add
xor
add
dec
cmc
pop
inc
add
jle
clc
daa
clc
loop
lahf
fsts
add
inc
clc
push
mov
lock
sarl
stos
cmpsl
clc
lret
and
sqrtps
add
xchg
mov
clc
lret
clc
movsb
clc
fidivs
push
cmpsl
clc
or
pop
mov
mov
add
scas
imul
xchg
leave
outsl
bound
add
je
fwait
jmp
aad
nop
into
cmpsb
clc
sub
push
clc
sbb
sar
movsl
clc
and
mulb
addr16
jp
testb
test
fisttpll
imul
add
cltd
scas
xchg
push
mov
hlt
add
clc
inc
clc
inc
clc
inc
clc
arpl
add
dec
jmp
clc
dec
push
clc
fs
fstpl
lret
clc
and
add
iret
jmp
clc
in
sbb
insl
xor
ret
sahf
ja
add
xchg
cmp
nop
in
jecxz
adc
clc
addr16
faddl
clc
mov
movsl
clc
mov
das
flds
clc
cltd
mov
add
int
clc
repz
jge
adc
pop
add
add
aaa
pop
jns
push
mov
jle
fwait
jmp
inc
xchg
sub
pop
fcom
lahf
jae
add
cltd
cmp
add
pop
ss
fbstp
add
bound
add
scas
mov
pusha
add
and
push
add
fwait
jmp
aas
pop
test
jbe
clc
cwtl
inc
add
sub
clc
xchg
add
add
add
fwait
jmp
mov
aad
sbb
incl
pop
cmp
push
ret
sbb
jle
push
mov
push
add
clc
dec
das
js
dec
pop
pusha
add
cmp
xchg
mov
add
bswap
push
aad
xchg
xchg
stc
jb
add
sar
or
aaa
test
add
addr16
iret
jmp
pusha
add
cmp
cmpsl
clc
shll
add
call
sbb
scas
sar
xor
add
ret
clc
cmp
add
test
aas
cmpsb
clc
stos
scas
je
clc
cmp
clc
add
repnz
clc
sbb
repz
clc
and
add
and
or
movsb
clc
mov
leave
fadd
clc
cmp
add
fcmovbe
popa
add
add
clc
cltd
pusha
add
clc
inc
clc
add
add
clc
outsl
mov
inc
clc
outsb
imul
sbb
clc
adc
clc
jp
dec
xchg
mov
push
cld
push
ret
sub
test
adc
clc
xchg
adc
and
add
fs
mov
add
adc
lret
sar
sbb
es
cmp
mov
pop
add
das
xor
sahf
sub
shl
push
add
inc
clc
cld
je
sub
or
jmp
or
lea
clc
arpl
add
fisttpl
add
pusha
add
fdivr
mov
xor
add
sub
imul
add
add
add
cmpsb
clc
mov
push
pop
xbegin
add
fwait
ret
clc
pop
push
clc
or
mov
daa
clc
mov
dec
mov
fwait
jecxz
mov
fs
adc
add
in
pop
aad
lret
jnp
push
or
clc
test
iret
mov
clc
lret
mov
add
lcall
sub
adc
add
add
add
jo
add
add
rcl
repz
clc
xor
add
xchg
lea
clc
pop
push
add
flds
clc
bound
add
inc
clc
cmp
add
js
lods
xor
cld
push
ret
xchg
jno
add
dec
inc
add
arpl
add
mov
add
lahf
mov
add
fwait
jmp
or
mov
arpl
add
pusha
add
std
out
fcomps
call
fwait
jmp
mov
clc
insl
frstor
add
add
nopl
xor
add
add
add
clc
jmp
clc
mov
test
shlb
cmp
add
xor
add
sbb
dec
xor
add
add
clc
sub
clc
sub
inc
clc
popf
jl
imul
mov
clc
jno
add
sub
add
int3
or
pop
cld
push
ret
sub
sahf
pop
jecxz
xchg
popf
jae
add
sbb
clc
pop
and
add
clc
mov
dec
add
cmpsb
or
push
dec
fsubs
add
pusha
add
test
in
popf
gs
add
mov
enter
xor
add
push
push
ret
and
clc
pop
lea
add
movsb
clc
std
test
add
clc
cltd
and
add
aam
add
jbe
clc
mov
inc
add
imul
push
ret
fwait
or
add
push
add
insb
and
add
add
ljmp
jbe
add
fmuls
add
inc
add
add
testl
clc
cli
mov
inc
fwait
jmp
sub
mov
xor
xchg
lea
mov
clc
mov
xchg
inc
add
test
mov
stos
adc
add
clc
cmp
clc
fprem
pop
clc
xor
add
test
hlt
fsts
add
xor
in
in
jbe
jp
gs
daa
clc
cmp
push
push
add
lods
mov
add
and
adc
cli
dec
mov
add
add
test
ss
add
inc
add
sar
clc
mov
clc
adc
jg
add
cmp
clc
inc
add
xchg
cmp
clc
push
add
fwait
jmp
and
mov
add
mov
fcoml
pop
inc
add
add
std
jns
and
mov
add
in
iret
sub
std
mov
inc
add
sbb
add
add
lea
fwait
jmp
jno
test
push
mov
fwait
jmp
inc
mov
add
cmp
add
pusha
add
and
add
pop
adc
xor
cmp
clc
jb
add
add
xabort
add
jp
clc
jg
mov
add
movsl
clc
mov
push
lods
push
cmp
clc
jg
push
mov
clc
push
add
fwait
jmp
xchg
test
add
inc
clc
lret
sub
push
jmp
add
aaa
cmp
mov
jne
inc
add
xchg
movsb
clc
imul
xchg
cli
ja
adc
add
sbb
xchg
jnp
pop
imul
add
add
clc
lret
fisttpll
sar
or
pop
mov
pushf
lock
ss
adc
add
mov
adc
add
sub
jge
clc
xlat
cmp
add
xor
jns
sub
lods
fnsave
clc
sub
or
add
loope
xbegin
into
fstps
clc
je
add
add
dec
cs
cwtl
or
push
jp
mov
fwait
jmp
and
xor
repnz
lock
add
enter
add
mov
clc
stos
repz
pop
cmp
lahf
jne
int
clc
push
fs
mov
xchg
loope
sarl
push
add
dec
push
movsb
cwtl
adc
jns
clc
addr16
jns
mov
fwait
jmp
scas
xor
push
add
cmovs
pop
dec
xchg
bound
add
jmp
push
ret
dec
pop
jno
push
clc
stos
push
or
fwait
jmp
push
dec
adc
add
pop
mov
add
repz
xchg
sahf
imul
add
cwtl
ja
xchg
mov
repnz
clc
fldcw
add
dec
xchg
out
xor
add
out
mov
mov
sahf
imulb
sub
cmp
loopne
cmp
mov
fwait
jmp
je
push
outsl
and
add
sahf
add
add
add
cmpsl
clc
xabort
clc
xchg
push
add
ret
clc
xlat
shl
clc
inc
clc
inc
add
imul
fsts
add
cmp
test
daa
clc
fistl
sub
add
das
jg
xchg
lret
int
clc
out
mov
repz
add
adc
inc
add
mov
scas
cmpsl
clc
js
es
mov
jg
add
movsb
clc
scas
sbb
add
clc
dec
repz
inc
add
loop
mov
pop
mov
sub
add
sub
add
shrb
or
cli
push
mov
enter
jg
add
mov
add
sbb
out
outsb
cmp
mov
stos
xchg
aaa
pushf
dec
sub
add
push
clc
nop
repz
decl
test
jmp
mov
cltd
xchg
jno
add
add
frstor
xor
add
add
jl
add
cmp
adc
add
add
add
ljmp
jae
add
aam
clc
inc
add
mov
add
cmpsb
clc
ret
js
scas
pop
leave
and
add
mov
clc
xchg
mov
loopne
or
rep
mov
call
fwait
jmp
cwtl
mov
push
add
add
add
or
mov
add
add
clc
jb
add
clc
pop
jne
cmp
js
jnp
pop
scas
test
loope
xchg
ja
out
push
mov
outsl
cmp
mov
rol
clc
movsb
clc
fimuls
and
or
add
mov
clc
dec
push
add
pop
nop
jmp
add
fisubl
add
or
or
loopne
aad
adc
add
clc
jnp
clc
inc
add
push
add
or
adc
pushf
adc
imul
clc
outsl
sahf
icebp
mov
add
or
fnstsw
and
mov
clc
or
lock
lret
movsl
clc
jo
add
lods
loopne
xchg
inc
add
test
or
cmpsb
clc
xchg
loopne
cmp
mov
add
mov
sti
xchg
mov
xchg
jmp
cld
push
ret
jg
push
clc
mov
add
lock
add
and
add
add
stc
adc
clc
rol
clc
cmp
clc
pop
push
push
add
fcmovnu
insl
clc
cmpsl
clc
shrl
jp
clc
outsl
jae
add
int3
jno
add
add
clc
jp
test
xor
add
add
add
add
clc
test
outsl
nop
jno
add
push
clc
inc
clc
mov
outsb
add
xchg
movsb
xchg
sbb
and
sahf
add
add
out
loop
sbb
int3
sub
aam
jb
add
clc
pusha
add
xchg
xchg
sub
add
pop
fldz
or
add
fdivl
sar
imul
push
add
mov
aas
xchg
je
add
popa
add
aam
mov
mov
int3
cs
push
xchg
cwtl
rdseed
dec
or
clc
movsl
clc
data16
ret
sar
decl
jmp
push
das
sub
add
or
cmp
xor
add
add
pop
mov
clc
push
sbb
sub
add
adc
add
add
add
clc
push
mov
add
add
clc
dec
fmuls
or
add
movsb
clc
and
add
leave
mov
mov
pushf
push
cmp
iret
pop
jmp
pop
adc
add
jns
in
fs
cmp
add
or
add
cmp
test
push
clc
cmp
cltd
clc
push
mov
pop
clc
add
add
add
std
xchg
fsubr
imul
clc
dec
cmp
int
clc
inc
add
jo
add
insb
aaa
je
clc
sub
and
add
lcall
mov
add
repnz
add
fisubl
add
sar
cmp
movsl
clc
jb
add
clc
inc
clc
es
xchg
stc
push
data16
clc
ret
adc
mov
add
clc
adc
add
in
push
jmp
mov
out
xor
add
scas
dec
cmpsl
clc
insl
data16
lahf
sub
clc
inc
clc
call
dec
push
idiv
jmp
add
insl
mov
clc
cmp
cmovg
push
mov
jge
cmp
clc
mov
je
xor
clc
scas
mov
mov
clc
xlat
rcl
clc
loopne
and
add
cmp
add
and
add
cmp
clc
xchg
lods
mov
cltd
stc
xchg
sbb
sub
cmpsb
clc
bound
add
add
add
add
add
add
clc
push
jmp
pop
push
push
lea
clc
and
adc
daa
clc
ljmp
call
mov
pusha
add
push
mov
fwait
jmp
dec
sbb
add
add
xor
add
fstps
clc
mov
add
add
and
add
std
and
add
mov
mov
add
cld
pop
clc
push
clc
jne
adc
add
mov
clc
push
jmp
mov
aas
add
add
add
add
add
jecxz
dec
pop
mov
adc
add
add
mov
cmp
mov
clc
add
mov
and
add
add
dec
aam
fidivs
clc
call
jmp
push
add
jle
add
mov
sti
sahf
cli
je
mov
clc
filds
sbb
add
push
add
cld
push
ret
sub
push
push
add
insl
test
out
pop
arpl
add
add
pop
clc
stos
cmp
pushf
fbstp
addr16
pop
xchg
cmp
clc
test
add
ljmp
add
jo
add
iret
jb
add
and
add
add
push
out
repnz
sar
or
push
ret
sub
add
add
out
sar
clc
jp
add
adc
add
arpl
fwait
jmp
xchg
cmpsl
clc
xchg
sbb
jmp
adc
popf
add
add
jo
add
loopne
pop
aas
inc
add
out
xor
out
jp
pop
add
add
gs
test
iret
cmp
pxor
divl
aad
clc
fistl
inc
clc
ret
clc
mov
clc
in
inc
add
cs
sub
into
jle
clc
push
add
movsb
clc
fucompp
dec
cmp
testb
mov
or
and
add
adc
clc
cltd
movsl
clc
lahf
xchg
iret
mov
pop
lret
clc
jne
clc
in
js
add
add
lods
lods
cmp
adc
add
add
pop
or
xor
or
aas
arpl
add
xchg
notl
filds
add
inc
add
push
and
add
dec
xchg
pusha
add
jle
addr16
add
shlb
ja
loope
ja
push
jle
cmp
add
add
clc
and
add
scas
ret
jle
pusha
add
mov
clc
adc
add
add
add
sarb
xor
jae
add
scas
int
clc
imul
movsb
clc
aas
pop
jno
add
clc
clc
jmp
xor
add
shrl
add
es
call
pushf
popf
sahf
sar
aad
add
fwait
jmp
dec
dec
sub
call
fwait
jmp
push
add
inc
add
mov
pop
enter
add
add
add
add
fwait
jmp
jno
call
fwait
jmp
imul
cmc
push
add
cmp
and
add
clc
into
pop
xchg
cltd
sbb
sarl
add
xchg
das
sub
adc
fwait
jmp
xor
test
cmp
cmp
cmc
fisttps
add
fwait
jmp
sbb
lcall
gs
adc
add
clc
aas
shll
add
add
loopne
xor
add
dec
call
xor
add
enter
push
dec
push
add
cmc
ljmp
ja
movsl
clc
and
add
inc
clc
data16
xchg
inc
clc
or
cs
push
dec
jo
add
clc
push
add
mov
add
xchg
cmp
loop
xor
add
adc
add
add
inc
adc
jmp
jg
aas
xor
add
out
mov
add
cmp
jp
sbb
jno
add
push
fwait
jmp
dec
insb
das
cmp
clc
cmp
adc
clc
pop
mov
adc
add
mov
jae
jmp
sub
add
gs
push
add
in
fwait
imul
clc
adc
add
outsb
add
add
add
add
add
mov
clc
jns
movsb
clc
cltd
xchg
sbb
insl
push
sar
mov
clc
gs
sub
add
ljmp
clc
sahf
hlt
sbb
mov
add
jmp
xor
pop
sub
add
push
jns
cmp
pop
dec
aad
clc
xchg
out
stos
fwait
lock
clc
and
or
pop
cmc
jle
inc
add
mov
add
xabort
bound
add
xor
xor
cld
in
cmp
and
add
int3
inc
clc
and
add
clc
inc
add
imul
movsl
clc
and
add
add
jmp
add
pop
stos
jmp
iret
mov
fbstp
add
clc
fmuls
and
add
fsubp
clc
test
mov
xor
inc
add
loop
and
add
lret
mov
mov
fldcw
or
inc
clc
xchg
or
clc
xchg
mov
shrl
dec
sub
add
mov
mov
repz
sar
mov
cmpsl
clc
pop
xbegin
sti
push
add
cld
push
pop
cmp
adc
clc
test
ljmp
ljmp
add
clc
pop
and
add
fwait
jmp
pop
lea
clc
jne
lahf
stos
into
test
mov
jb
add
clc
mov
imul
in
ja
repz
mov
add
mov
out
or
clc
dec
std
push
loop
sar
adc
add
into
outsb
popa
add
decl
test
add
fwait
jmp
push
add
mov
mov
add
dec
ret
add
add
add
add
popf
imul
add
inc
clc
jp
ljmp
ret
add
pop
clc
adc
pop
movsb
clc
push
fcom
pop
pop
add
add
insb
push
js
mull
mov
adc
inc
clc
idiv
cwtl
ljmp
jmp
fwait
jmp
inc
fwait
cmp
mov
add
dec
xchg
rorb
adc
add
clc
cmc
mov
pop
movsb
clc
cmpsb
clc
sbb
fwait
jmp
popa
push
mov
fwait
jmp
adc
jae
add
sub
mov
cmp
push
add
xor
add
mov
clc
lods
sub
add
fsubr
dec
sub
cmp
int3
jge
xchg
movsl
clc
dec
sub
shr
push
add
scas
or
mov
add
sbb
lret
dec
mov
clc
fs
data16
imul
and
add
xor
add
clc
xabort
dec
mov
mov
inc
add
ret
testb
adc
add
stos
mov
in
cmc
xchg
stc
stos
push
xchg
repz
das
add
add
add
iret
mov
loope
fs
addr16
pop
dec
mov
push
ret
push
inc
sub
leave
test
mov
leave
fwait
jmp
test
clc
in
out
in
mov
dec
jg
aad
sbb
cmp
adc
dec
sub
sub
clc
sbb
jnp
add
jo
add
push
and
cmp
imul
std
sbb
cmp
xchg
xchg
fwait
cld
mov
add
add
add
sbb
or
jg
push
fwait
jmp
add
mov
inc
add
push
into
mov
clc
mov
aas
push
add
out
pop
clc
and
add
add
cld
push
ret
cmpb
adc
add
lahf
hlt
fnstenv
add
add
clc
inc
add
outsb
insb
dec
xabort
clc
movsl
clc
sub
mov
clc
cmp
push
lods
or
daa
clc
sub
add
mov
in
xlat
out
add
daa
clc
sar
mov
cli
fnstsw
dec
push
add
jns
push
xchg
fsubrl
add
clc
xchg
jmp
mov
add
fsubs
jnp
xor
add
popa
add
out
std
in
xbegin
pusha
add
push
clc
jle
fldt
stc
add
add
clc
xor
add
add
dec
sub
clc
mov
das
mov
add
fimuls
and
add
sbb
std
dec
or
jg
add
add
clc
data16
daa
clc
push
add
adc
add
cmpsb
clc
mov
jo
add
lods
cmp
add
xor
add
add
jge
clc
pop
dec
sbb
test
push
add
fwait
jmp
sahf
int3
lret
mov
out
das
popf
mov
add
ficompl
push
push
mov
ret
test
ja
scas
and
add
ja
push
add
lods
mov
js
clc
jmp
clc
arpl
add
cmp
push
add
add
into
xchg
mov
xor
add
add
and
add
cmp
lock
or
clc
mov
push
ret
je
lods
fs
mov
scas
mov
mov
clc
xchg
fmull
dec
jb
add
cmpsl
clc
cmp
xchg
and
out
call
clc
gs
xor
add
mov
out
push
out
or
clc
movsl
clc
das
adc
add
sub
add
mov
adc
push
ret
test
movsl
clc
popa
add
pop
dec
dec
cmp
clc
jnp
add
repnz
mov
add
adc
add
cmp
add
add
adc
add
push
ret
cmpsb
sub
mov
jo
add
add
mov
in
add
in
inc
add
ficoml
clc
sub
sahf
mov
clc
sbb
inc
add
add
add
stc
lcall
adc
add
add
clc
jns
clc
jae
add
add
sbb
sub
clc
adc
push
insl
mov
add
mov
lret
faddl
mov
clc
push
sbb
add
stc
clc
or
ret
cld
push
ret
sub
fs
jo
add
push
xchg
pop
sbb
clc
xchg
rorb
jo
add
clc
into
insb
mov
fwait
jmp
sub
ret
call
pusha
add
mov
imul
add
cwtl
gs
push
or
add
add
sbb
test
push
fucomp
jmp
or
add
out
mov
and
add
adc
out
or
out
fcoml
insl
sbb
add
add
dec
daa
clc
cli
mov
clc
jmp
add
adc
add
mov
in
mov
add
hlt
and
and
add
add
inc
clc
pop
clc
aaa
cmc
ss
fisubl
add
pop
lods
imul
data16
adc
add
in
arpl
add
add
sub
clc
fmull
inc
add
adc
add
adc
add
enter
and
sahf
popf
mov
clc
mov
mov
clc
push
ret
clc
shrl
sub
cmp
clc
xchg
add
out
push
sti
cmpsl
clc
stc
gs
xchg
xor
add
aaa
xlat
repz
je
add
jb
add
jbe
sbb
cmp
fwait
jmp
icebp
adc
mov
les
add
add
jmp
clc
out
push
mulb
cmp
repnz
cmp
add
das
sbb
mov
fwait
jmp
jp
add
shl
clc
loop
mov
dec
test
xor
add
add
shl
clc
pop
sbb
sti
fwait
jmp
movsb
or
clc
in
adc
add
jnp
clc
pop
fcmove
call
add
jecxz
or
mov
cmp
mov
add
ficomps
and
add
cs
fwait
jmp
pop
or
rcrb
fbstp
xor
add
out
mov
out
inc
add
je
sahf
dec
mov
cmp
add
add
add
imul
add
pop
push
add
stos
inc
clc
mov
out
mov
or
add
adc
sub
pop
clc
sub
xor
add
add
jns
lret
mov
mov
sub
clc
shlb
sarb
clc
loope
mul
clc
and
add
cmp
or
pop
insl
cmp
clc
scas
pop
loope
movsl
clc
jl
clc
or
clc
jecxz
sbb
leave
jne,pt
add
loopne
test
jge
clc
push
pop
clc
cmp
add
push
add
data16
pop
fcoms
add
pop
es
lods
adc
add
insb
fs
xor
jl
clc
fs
popf
pop
inc
add
in
xor
mov
add
stc
outsl
dec
push
clc
stos
addr16
clc
mov
xchg
test
or
add
clc
out
lret
call
fwait
jmp
aaa
sub
cmp
clc
divb
es
das
jbe
ss
jb
add
pop
jg
xchg
lcall
xabort
clc
int
call
fwait
jmp
test
cli
jge
mov
add
clc
add
add
cs
clc
pop
addr16
xor
add
add
sub
clc
sub
xor
clc
cmp
call
cmpsb
clc
add
xor
clc
inc
clc
lcall
add
mov
scas
sub
ret
clc
dec
dec
mov
mov
sahf
aas
jo
add
lret
clc
add
add
mov
xabort
xor
mov
pop
and
and
add
inc
clc
jns
jne
add
add
cltd
aad
jo
add
clc
clc
stos
scas
into
mov
add
xabort
add
lock
clc
clc
das
dec
daa
clc
push
add
imul
add
gs
stos
int3
sbb
ret
clc
push
add
push
xchg
movsl
clc
inc
add
push
fcmovne
clc
fdivrs
add
jo
add
jne
clc
imul
mov
jnp
and
add
xbegin
push
add
mov
daa
clc
fnsave
mov
clc
iret
mov
clc
sti
fnstcw
cwtl
mov
sti
sahf
sbb
push
cld
push
ret
or
cmp
clc
jnp
push
hlt
xchg
mov
add
and
add
add
push
add
sbb
js
adc
add
clc
pusha
add
pop
jg
clc
lahf
into
cltd
adc
sbb
xabort
add
add
clc
sub
dec
dec
clc
addr16
rolb
xor
lcall
mov
inc
clc
pop
add
test
cwtl
cs
cmp
loop
cmp
cmp
add
add
cmp
add
clc
sub
mov
push
add
fwait
jmp
dec
orb
xchg
jge
clc
jo
add
add
ret
stos
dec
xbegin
lods
dec
fwait
popa
add
jne
fiaddl
dec
pusha
add
jno
add
mov
lahf
mov
jne
data16
dec
lea
pop
clc
mov
add
add
and
clc
pop
xchg
clc
cmp
add
repz
clc
pop
xchg
addr16
or
repz
add
inc
add
adc
sub
adc
add
add
jnp
jge
pusha
add
inc
clc
pop
push
add
popa
add
test
add
add
adc
add
xchg
js
scas
into
and
inc
clc
mov
sub
sub
push
ret
xor
xor
add
cli
mov
add
imul
mov
clc
fs
fsubl
clc
push
jmp
fwait
jmp
insb
pop
dec
leave
mov
clc
out
cmp
xchg
in
arpl
add
outsl
popa
fs
jmp
push
repz
clc
lock
clc
cmc
xabort
es
into
cwtl
pop
cs
xabort
adc
add
test
inc
add
sbb
shll
add
adc
sbb
mov
fwait
jmp
data16
add
mov
int3
sbb
add
stc
lcall
clc
pop
and
add
pop
clc
mov
jnp
dec
add
and
add
xbegin
xchg
mov
ret
clc
vcomiss
push
nop
sub
sbb
repnz
add
sub
clc
jae
add
add
add
aam
out
int3
popa
add
sub
ljmp
rolb
clc
add
add
call
push
ret
push
and
je
mov
fwait
inc
clc
mov
insb
jmp
imul
cli
cmp
cld
mov
pop
fwait
jmp
add
dec
sbb
adc
add
clc
pop
cmp
jmp
xchg
adc
add
clc
ror
int3
sub
out
xor
add
clc
xor
add
shrl
cmpl
jecxz
pushl
clc
or
mov
add
add
movsl
clc
imulb
add
outsl
cmp
and
add
adc
add
add
jp
sbb
add
push
sbb
sti
loopne
mov
fimuls
and
add
add
xbegin
clc
push
bound
add
fucomi
es
neg
clc
lods
cmc
dec
and
add
push
clc
es
sbb
add
popf
das
int3
nop
test
inc
add
test
leave
sub
push
clc
xor
add
or
add
insl
movsb
clc
data16
out
mov
push
je
sbb
movsl
clc
xchg
ret
clc
addr16
adc
mov
adc
clc
xor
add
icebp
cld
mov
add
inc
add
popf
repnz
outsl
jmp
clc
xchg
icebp
xchg
fs
in
xchg
shrl
mov
sbb
add
fldenv
adc
add
fbld
clc
jp
data16
fisttps
and
add
fcoml
clc
push
xor
add
pushf
xchg
leave
rclb
insb
stos
sub
mov
add
push
add
and
add
push
add
cld
push
ret
and
dec
mov
clc
sbb
push
leave
xchg
fyl2xp1
jne
add
mov
jmp
and
mov
clc
mov
clc
xchg
sbb
cmp
cmp
outsl
dec
jae
add
push
mov
mov
fwait
jmp
outsl
add
clc
cmp
stos
xchg
ljmp
clc
adc
and
add
lea
fwait
jmp
push
jno
movsl
clc
outsb
mov
clc
mov
clc
sub
lcall
add
sbb
scas
sbb
jbe
fwait
jmp
or
xor
add
cmpsl
clc
mov
inc
add
lahf
imul
stos
cld
cld
adc
add
xbegin
das
cmp
add
stc
sar
ror
cld
push
ret
sub
outsl
pop
push
xchg
test
stos
push
add
dec
shlb
add
cmp
out
sub
cmp
add
xchg
adc
add
mov
add
xchg
lock
add
clc
dec
xlat
and
add
add
xchg
cld
out
cmp
into
mov
clc
in
jae
add
xabort
add
push
add
jp
insb
jge
dec
or
clc
in
jno
add
mov
clc
lret
sbb
clc
pop
sti
lods
outsl
push
add
jmp
xchg
test
lcall
aaa
gs
adc
push
fwait
jmp
movsb
sub
add
sbb
mov
clc
stos
adc
add
fadds
sbb
add
add
add
dec
fs
pushf
mov
movsl
clc
cmpsl
clc
cmp
jbe
xchg
jbe
es
and
add
sub
push
das
inc
clc
sub
add
adc
add
adc
cmp
addr16
incl
mov
inc
add
ja
sub
sub
jmp
mov
push
iret
inc
add
xor
add
adc
add
push
add
sub
add
push
clc
xchg
dec
inc
add
bound
add
add
dec
or
xor
add
add
rorl
xor
add
add
xor
add
clc
ficoms
incb
clc
lock
into
sbb
sbb
add
lret
jbe
mov
add
fwait
jmp
add
clc
cmp
add
add
pop
mov
add
cmp
clc
adc
add
jb
add
or
xchg
or
popa
add
movsb
clc
test
add
insl
mov
clc
js
ror
or
ds
clc
push
data16
mov
ret
clc
sbb
aas
rorl
mov
jle
xor
add
cmc
mov
clc
mov
div
fwait
jmp
add
cmp
test
mov
clc
or
add
loope
cmc
je
mov
and
cmp
clc
fisubl
or
dec
xbegin
or
clc
into
xchg
sbb
add
adc
add
clc
cmpsl
clc
jecxz
push
xchg
fmuls
aas
test
jle
clc
mov
enter
jp
out
fwait
mov
fwait
jmp
push
lea
leave
dec
cmp
inc
add
or
add
add
add
jge
add
pop
jecxz
pop
mov
pop
cmc
ret
clc
cmp
add
enter
out
cmp
lcall
lods
lods
decl
lods
cmp
nop
lock
add
das
adc
add
add
mov
outsb
push
add
fwait
jmp
jl
out
adc
clc
lret
clc
in
push
mov
mov
lahf
daa
clc
adc
add
loopne
sbb
repz
jmp
lea
add
push
add
in
addr16
sbb
add
cld
fsts
add
push
clc
fistpl
xchg
ret
clc
popf
ljmp
push
repnz
push
stc
and
add
mov
mov
add
int
jne
fwait
jmp
ds
add
pop
jmp
cmp
add
mov
addr16
cmc
in
sbb
add
outsb
cmpsl
clc
add
fwait
lcall
mov
inc
add
and
outsb
ficoml
xbegin
sbb
inc
clc
pusha
add
in
push
add
jb
add
add
outsb
cmc
mov
mov
xor
fucomp
xabort
add
stos
cmp
add
xchg
sbb
clc
jne
add
cmp
push
add
into
xabort
clc
or
pop
cmp
adc
lods
movsb
clc
test
push
xor
add
add
mov
or
lods
inc
clc
int3
movsb
clc
ret
lahf
and
add
sar
lods
mov
pop
cmp
add
cmc
pop
cmp
push
xor
mov
clc
sbb
fimull
add
mov
clc
scas
int3
negb
add
add
loop
aam
lock
lods
frstor
add
or
add
mov
clc
int3
xchg
jg
clc
mov
sar
adc
add
pop
jl
mov
jmp
jno
dec
call
icebp
and
jg
xor
testl
add
or
fxch
mov
add
cmp
xchg
add
add
xabort
add
mov
jne
clc
sar
clc
stos
pop
cmp
comiss
sub
lret
mov
jbe
add
jmp
sub
aam
xchg
xchg
jae
add
clc
mov
xchg
jp
clc
xabort
push
jns
clc
stos
mov
clc
pop
int
clc
iret
jmp
sar
sub
clc
iret
sub
cmp
pop
push
xchg
inc
add
mov
popf
push
or
inc
clc
add
add
mul
clc
gs
push
stc
stc
out
inc
clc
aaa
mov
inc
clc
mov
das
mov
aas
jno
add
dec
std
pop
cld
fildl
clc
mov
das
xor
add
hlt
call
add
add
add
fmull
sar
out
or
loop
cld
push
ret
and
in
into
jge
add
cmp
pop
and
add
jnp
clc
push
add
and
add
sti
pop
mov
test
cmp
and
add
jae
add
add
clc
dec
jg
xchg
pop
enter
xabort
clc
xchg
outsl
das
imul
add
addr16
dec
mov
mov
mov
lcall
dec
xlat
dec
fimuls
mov
add
pop
adc
add
add
add
cmp
dec
cmpsb
clc
out
iret
inc
add
stos
js
movsb
clc
inc
add
add
add
mov
fwait
jmp
sub
test
data16
nop
nop
loope
mov
clc
aaa
adc
add
fnsave
xor
fiaddl
xchg
push
mov
cmp
pop
inc
clc
xor
add
aas
clc
xor
add
movsb
clc
jno
add
clc
mov
mov
out
mov
idivb
add
adc
stc
in
sbb
or
xchg
push
lcall
jmp
dec
add
aam
data16
xor
add
cmp
xlat
dec
adc
add
mov
into
sbb
clc
add
add
clc
push
jne
fwait
jmp
ss
sub
jle
add
jmp
clc
movsb
clc
test
add
hlt
int3
mov
add
or
clc
add
push
popf
je
dec
fwait
jmp
xor
addr16
lods
pop
mov
clc
sbb
add
mov
push
clc
or
int
nop
cmpsb
clc
pusha
add
int
mov
repz
clc
and
add
mov
cmp
add
xchg
pusha
add
aam
push
push
cld
push
ret
jp
sub
sahf
fstps
mov
stos
and
add
clc
pop
pusha
add
imul
lcall
std
sar
pop
std
lret
std
ljmp
add
clc
das
repz
lods
icebp
repnz
push
outsb
sbb
stos
ror
cld
mov
cmc
xor
add
add
pushf
cli
jp
loope
addr16
add
add
stc
push
pushf
jo
add
flds
mov
lcall
das
push
sbb
in
add
sar
add
push
cmp
mov
add
mov
xchg
cmp
clc
sub
imul
popf
int3
mov
mov
add
data16
lock
fldcw
clc
and
mov
cmpsb
clc
inc
add
mov
aad
clc
adc
add
mov
cwtl
jmp
clc
add
fbstp
push
pop
jne
clc
into
jb
add
clc
out
mov
movsl
clc
adc
add
xor
add
clc
inc
add
sbb
fstp
aas
mov
cli
jecxz
xor
add
mov
add
addr16
inc
clc
mov
mov
mov
mov
add
filds
cld
add
cmp
pushl
rcrb
lcall
cmp
xbegin
add
dec
mov
pop
clc
jb
add
roll
mov
jne
mov
add
incl
pop
inc
clc
addr16
mov
xbegin
clc
fimull
cmp
add
add
in
in
cmp
push
leave
or
add
clc
repnz
js
add
test
push
cld
push
ret
ja
dec
cmp
add
jp
mov
pop
clc
fdivl
add
clc
and
add
or
mov
icebp
arpl
add
add
xor
add
ret
clc
into
inc
add
inc
clc
push
lret
add
mov
clc
push
clc
lahf
das
inc
add
clc
ljmp
xor
add
repz
dec
shrl
mov
incl
push
ret
sbb
mov
test
and
add
clc
add
add
mov
add
add
out
out
jg
mov
jno
add
testl
clc
adc
add
cltd
lret
hlt
add
add
faddp
clc
inc
add
sbb
add
into
loop
rcl
mov
pop
dec
pop
clc
pop
addr16
cltd
mov
add
addr16
clc
mov
clc
jbe
cmp
je
pop
cltd
inc
add
pop
jnp
add
outsb
popa
add
mov
or
push
ds
jo
add
or
clc
or
aam
test
add
xchg
cli
stos
sar
decl
add
add
add
sbb
js
clc
pusha
add
push
outsl
mov
clc
xchg
lea
sahf
or
insl
or
and
sbb
aaa
cmp
add
pop
aaa
push
xchg
cmp
cld
inc
clc
sbb
xor
add
sub
and
add
add
dec
jecxz
push
push
bound
add
pop
mov
push
add
jl
ds
insb
sbb
clc
add
add
or
add
stos
mov
clc
jle
jnp
add
cld
push
ret
jp
inc
sub
dec
dec
pop
sub
ficomps
dec
add
fwait
jmp
add
add
divl
add
add
add
repnz
clc
movsl
clc
es
repnz
clc
jns
pushf
fistpl
clc
mov
add
sbb
outsb
pop
mov
mov
popa
add
out
mov
stc
lea
xor
arpl
add
sbb
mov
clc
mov
data16
aad
neg
add
add
or
mov
clc
shrb
lret
movsl
clc
out
mov
fcomps
dec
fcoml
add
mov
push
sbb
add
cmp
add
mov
clc
pop
js
jle
clc
popf
cmp
not
fwait
jmp
adc
mov
sbb
lea
add
testb
inc
clc
or
or
clc
push
xchg
jp
and
ret
clc
xor
push
aam
ljmp
push
or
daa
clc
clc
add
add
jb
add
shl
clc
call
fwait
jmp
cmpsb
pop
add
stos
loope
push
add
jb
add
leave
in
xchg
cmp
add
add
lock
clc
pop
sbb
jmp
adc
add
add
xchg
cmp
xchg
jne
clc
or
stos
and
clc
lret
clc
pop
fnstcw
clc
clc
mov
mov
test
lods
inc
clc
push
jmp
sub
and
add
add
add
add
mov
sbb
cmp
clc
in
or
test
mov
cltd
sahf
fnstsw
jae
add
push
mov
mov
push
add
insl
aam
mov
jmp
push
cli
sub
add
add
add
pop
or
test
out
test
fs
shlb
clc
out
mov
test
ss
inc
clc
push
clc
xchg
hlt
repz
clc
rcr
sub
xor
fwait
jmp
cmp
jb
add
leave
cmp
clc
pushf
adc
clc
cmp
rclb
add
mov
inc
clc
leave
or
clc
and
rcrl
or
icebp
fnstsw
inc
clc
mov
lcall
shl
clc
sub
clc
sahf
icebp
sbb
cmp
add
pop
xor
add
outsb
inc
clc
in
jns
pop
add
add
cmc
xor
add
add
mov
add
cmpsl
clc
pop
arpl
add
adc
add
ds
cmp
add
test
mov
clc
inc
add
scas
mov
add
addr16
fs
pop
mov
add
add
fnsave
add
test
bound
add
sub
mov
dec
add
inc
push
pop
sbb
clc
in
mov
mov
mov
clc
cmp
clc
inc
clc
imul
cwtl
scas
scas
iret
sub
clc
out
pop
adc
add
add
add
clc
fildl
sbb
clc
out
mov
clc
push
notb
mov
mov
cltd
fstpl
cmp
add
adc
add
dec
out
jo
add
add
gs
sub
add
data16
repz
add
scas
xor
add
or
popa
add
and
add
mov
adc
add
or
pop
fwait
jmp
test
clc
aaa
nop
or
add
push
mov
fwait
jmp
scas
aaa
mov
push
pusha
cld
push
ret
sub
in
add
add
add
inc
add
pop
push
jecxz
push
pop
or
pop
popa
add
and
add
mov
add
push
xabort
aaa
mov
mov
in
push
mov
fwait
jmp
push
inc
clc
cmc
repz
inc
add
insl
or
add
xor
add
sub
or
pop
shl
clc
insl
or
mov
stos
pop
or
clc
fucomip
ficompl
add
test
hlt
adc
add
clc
mov
add
pusha
add
xchg
xor
add
add
icebp
mov
add
clc
push
dec
ds
repz
insb
pop
es
repnz
clc
mov
add
adc
loop
jo
add
clc
xchg
jo
add
cmpl
imul
cmp
add
add
add
inc
clc
lock
clc
mov
clc
mov
lock
clc
jb
add
dec
add
add
sbb
clc
or
mov
add
sti
inc
add
pop
fcomip
loopne
xchg
movsl
clc
outsb
sbb
jb
add
js
gs
cmp
xabort
sub
add
mov
sub
add
cmp
jmp
sbb
mov
and
dec
jp
fdivs
add
fs
jg
aad
add
add
je
push
clc
in
pop
lret
adc
add
cmp
add
scas
dec
dec
pop
clc
sub
clc
mov
popf
lcall
out
hlt
std
addr16
jb
add
adc
adc
add
add
jl
pop
xchg
xchg
mov
shll
or
add
pop
xor
add
xor
add
sahf
mov
fsubr
fwait
xchg
or
in
lret
pop
repnz
inc
clc
js
add
cmc
data16
decb
mov
clc
jmp
add
clc
cmp
clc
das
lods
mov
aaa
adc
das
lcall
or
add
pop
pop
xor
add
push
mov
fwait
jmp
or
cmp
or
test
lods
mov
stc
xlat
daa
clc
inc
add
push
add
xabort
add
rcll
add
je
lret
cltd
mov
add
add
push
test
fwait
jmp
add
clc
dec
mov
iret
fiaddl
add
xor
add
rorl
jecxz
in
mov
push
add
adc
test
in
mov
clc
int3
mov
cwtl
js
clc
je
mov
in
in
gs
mov
add
lcall
jmp
sahf
je
inc
or
cli
xchg
pop
iret
aam
clc
mov
fcmovbe
mov
add
lea
imul
loope
cltd
rorl
adc
int3
push
clc
mov
clc
das
cld
dec
fs
cmp
clc
inc
clc
xor
jne
clc
je
mov
jae
add
inc
add
sbb
add
and
add
cmc
dec
loopne
xchg
jmp
clc
push
aad
nop
mov
add
pop
clc
or
xchg
jge
rcpps
add
xor
add
imul
clc
push
insl
jo
add
add
add
mov
lcall
push
out
cwtl
cld
mov
ljmp
xor
inc
add
jno
add
clc
push
test
fwait
jmp
test
clc
or
clc
test
add
lea
clc
daa
clc
ds
mov
cmp
add
cmp
into
sti
xor
add
add
sub
jg
jp
cmp
dec
and
add
add
pop
or
mov
scas
add
add
jecxz
and
add
jne
fwait
jmp
insb
sub
add
or
clc
mov
add
xchg
mov
aas
sar
adc
add
push
add
fwait
jmp
sub
cmp
xchg
dec
pop
lcall
fiaddl
push
ret
or
cld
xchg
dec
cmp
clc
in
aad
or
stos
std
jl
mov
pop
sbb
pop
stc
and
add
push
ret
sub
xchg
ljmp
add
clc
cmp
clc
lods
mov
clc
mov
add
add
rcrl
lret
mov
dec
pop
pop
adc
add
add
icebp
addr16
pop
clc
jecxz
jmp
jns
fidivl
stc
cmpsb
clc
or
jno
add
add
add
arpl
add
clc
mov
add
cmpsb
clc
fs
mov
jg
mov
fwait
jmp
fwait
cwtl
fildll
stos
out
push
add
push
add
sbb
clc
add
add
add
pop
movsb
clc
gs
lods
fs
jmp
test
loope
push
add
mov
sti
pop
sub
xlat
stos
sub
mov
clc
pop
adc
add
add
push
add
sbb
jbe
add
mov
clc
dec
jbe
cld
inc
clc
inc
clc
jae
add
add
clc
pop
int
aaa
cli
into
mov
clc
xor
xbegin
xchg
push
loope
out
and
add
mov
add
loop
iret
cmp
addr16
or
cmpsb
clc
shrb
add
jmp
es
add
xchg
pop
cmp
clc
mov
decl
fwait
jmp
sahf
jp
jnp
adc
stos
and
add
aas
jl
int3
sbb
daa
clc
xchg
cmp
adc
add
clc
pop
mov
clc
cwtl
ret
enter
add
sub
dec
outsb
mov
push
xor
cld
push
ret
xchg
adc
mov
lods
or
add
imul
ljmp
ret
decl
add
movsl
clc
or
aad
dec
sar
fisubrl
mov
loop
dec
ret
outsb
scas
mov
ja
clc
jae
add
dec
push
fwait
jmp
sub
sahf
clc
arpl
add
pop
push
add
add
add
pop
inc
add
adc
add
mov
adc
add
rclb
add
sub
xabort
clc
jo
add
cmp
dec
mov
cmp
sbb
sub
adc
sbb
xlat
repnz
add
dec
jbe
imul
pop
xchg
hlt
inc
clc
cmp
das
cmp
clc
clc
cld
mov
fcmovb
clc
unpckhps
push
add
idivl
ljmp
mov
add
pushf
out
fsubrs
add
mov
ss
jge
push
add
mov
cmp
xchg
or
xor
add
add
xchg
nop
add
add
faddp
clc
int3
gs
popa
add
sbb
fwait
jmp
pop
xchg
mov
data16
fcompl
clc
out
loope
daa
clc
pop
jno
add
dec
lahf
sub
inc
add
cmp
dec
xchg
imul
jmp
outsl
push
and
test
nop
sub
add
add
lcall
pop
sbb
stos
sub
clc
clc
fwait
loope
pusha
add
and
add
add
add
mov
into
mov
mov
add
push
ret
insb
scas
pop
fstl
add
xor
add
mov
sub
popf
add
data16
sti
es
pusha
add
mov
jle
fsub
clc
jmp
loop
mov
ret
clc
inc
clc
in
insb
and
add
das
mov
push
outsl
add
add
out
push
add
pushf
add
add
add
cmp
add
xbegin
aad
clc
repnz
insb
add
daa
clc
aam
add
in
scas
imul
mov
add
outsb
xchg
mov
outsb
dec
clc
cmp
cwtl
data16
fdivrs
negb
decb
mov
call
clc
into
add
add
cli
lcall
add
ljmp
inc
add
hlt
inc
clc
jmp
add
xchg
mov
sub
fcmovne
mov
fnstcw
out
cs
add
jbe
mov
add
add
mov
adc
add
add
insb
xchg
push
pop
add
add
clc
pop
xor
add
push
push
mov
fwait
jmp
push
xchg
lods
dec
mov
clc
lods
pushf
icebp
ret
in
ret
clc
aam
jg
sub
nop
je
clc
cmp
jae,pn
add
and
ljmp
mov
ss
add
dec
inc
clc
jno
add
cmp
jo
add
mov
sbb
ret
fwait
insb
lea
add
and
add
add
jmp
clc
in
lahf
addr16
adc
cwtl
add
pop
sub
clc
scas
or
add
add
clc
int
sub
add
mov
mov
cs
fwait
jmp
push
xor
mov
clc
clc
sbb
jecxz
ret
clc
int
clc
js
lcall
cwtl
inc
add
cmp
push
jbe
clc
xchg
pop
stc
mov
adc
add
inc
add
push
add
jg
push
clc
adc
add
in
mov
clc
out
push
add
clc
es
xbegin
aad
clc
cmp
push
mov
clc
jmp
clc
jecxz
jbe
call
xor
mov
sbb
clc
imul
mov
sbb
daa
clc
pop
sub
pop
cmp
inc
add
movsb
clc
negb
push
cmpsb
clc
rcr
out
fisubs
adc
add
add
shll
xchg
or
push
add
cmp
add
cltd
jecxz
jle
clc
test
adc
clc
loop
inc
clc
cmp
scas
hlt
ss
add
aas
fwait
inc
clc
cmpsl
clc
adc
faddl
sbb
cmpsl
clc
inc
clc
sar
fcmovne
in
xchg
cmpsb
clc
push
xchg
jae
add
outsb
out
icebp
xchg
inc
add
add
add
push
cld
push
ret
inc
push
and
imul
add
and
jecxz
gs
adc
daa
clc
das
mov
clc
jge
add
mov
cmc
aad
clc
mov
cltd
push
add
inc
add
ljmp
clc
push
lea
adc
add
clc
gs
lahf
in
or
mov
cld
push
ret
je
or
add
fwait
jmp
xor
sbb
sbb
ss
add
cmpsb
clc
xchg
jle
clc
and
mov
push
add
cmp
clc
in
idivb
imul
bnd
scas
mov
jno
add
clc
sub
lods
test
xchg
fdivr
fs
cmp
xchg
cmp
clc
sahf
fcmovbe
adc
add
in
roll
pop
test
mov
cmc
xor
add
or
add
fwait
jmp
subb
std
and
add
stc
ror
adc
add
add
add
in
int
dec
popa
add
cmc
je
loop
lods
jp
mov
jl
mov
and
cmp
jl
push
add
mov
clc
cmp
cmp
push
repz
out
push
clc
cmp
mov
out
test
sti
aam
clc
gs
dec
fnstsw
xor
add
je
fwait
jmp
loop
mov
push
cmpl
fwait
jmp
sub
mov
mov
fadds
clc
scas
mov
cmp
es
mov
clc
mov
clc
xchg
fisubrs
add
fadd
clc
std
out
je
add
in
pushf
mov
mov
clc
push
clc
sbb
add
int3
cwtl
mov
clc
sub
int3
icebp
sub
js
cmp
arpl
add
and
add
dec
out
mov
test
ja
mov
push
add
mov
add
shll
clc
or
mov
add
in
sbb
jo
add
push
add
pushl
dec
aam
add
pop
sbb
clc
and
int
xchg
repz
mov
faddl
sub
pop
push
sldt
sub
mov
mov
add
std
cmpsl
clc
jbe
clc
test
adc
add
add
sbb
call
scas
xchg
or
mov
fnstsw
test
pop
hlt
sahf
insl
cltd
out
loopne
rcrl
data16
push
clc
mov
add
xlat
pop
repnz
push
push
fwait
jmp
fwait
or
mov
clc
in
pop
cmp
add
cmp
or
fldt
movsl
clc
sti
push
add
mov
sbb
add
pop
es
sar
clc
and
add
data16
insl
adc
add
add
je
lods
jne
or
cmpsb
clc
push
pop
fwait
jmp
add
insb
scas
pop
pop
loope
adc
cmp
dec
sub
add
ficompl
sbb
xchg
fwait
jnp
mov
clc
xchg
pusha
add
push
into
cmp
clc
dec
push
add
mov
push
push
ja
or
clc
add
clc
push
add
adc
add
pop
clc
arpl
add
arpl
add
mov
fwait
jmp
aaa
sub
clc
jecxz
lret
test
test
add
add
add
clc
sub
bound
add
mov
ficoml
add
add
cmp
add
enter
mov
add
mov
out
pop
outsb
clc
pop
out
push
add
fwait
das
adc
add
scas
loope
mov
add
sub
hlt
cmp
push
mov
push
add
dec
imul
add
add
pusha
add
insb
movsl
clc
rcrb
clc
stos
xchg
jns
mov
add
cmp
clc
test
mov
clc
push
std
cmp
scas
jl
loope
mov
clc
pop
jle
pop
data16
sbb
clc
aad
mov
mov
fwait
jmp
hlt
into
out
rolb
adc
add
cmpsl
clc
test
jge
clc
cmp
clc
inc
add
xrelease
add
lods
pushf
pop
add
add
mov
mov
hlt
mov
push
fs
dec
push
add
test
jge
sub
or
clc
outsl
cmp
clc
jne
fs
add
add
pop
and
add
mov
in
xchg
mov
sbb
push
xchg
sar
jae
add
mov
cmpsl
clc
test
and
add
sbb
push
ret
pop
sahf
adc
add
xchg
fists
pop
clc
cli
call
out
adc
add
add
fcoml
add
iret
sub
xchg
jp
data16
mov
nop
add
add
dec
popa
add
stc
push
jecxz
fldl
add
add
sbb
outsb
ja
clc
jmp
cmp
neg
and
add
clc
adc
add
repnz
rol
clc
and
add
clc
into
jo
add
mov
jge
jp
jecxz
fsqrt
xchg
cmc
sub
add
lahf
push
call
xchg
negl
clc
mov
add
cmp
jecxz
mov
mov
clc
xor
add
jnp
add
fwait
jmp
cmpsb
xchg
sub
pop
cs
cmp
and
add
mov
clc
cmp
inc
add
xlat
fsubrs
push
clc
jo
add
add
clc
xchg
add
add
clc
fwait
mov
clc
pop
xor
add
lods
pop
mov
movsl
clc
dec
nop
mov
xchg
test
addr16
and
add
push
insb
jmp
push
fwait
jmp
ja
cmpsb
nop
test
pop
push
xor
add
jmp
popa
sub
mov
mov
clc
rcr
dec
fistpl
cmp
add
mov
ret
pop
adc
add
rorl
clc
aam
outsb
dec
or
add
or
add
add
add
inc
add
inc
add
fisttps
int
std
ret
clc
mov
cmp
std
add
add
fucom
clc
and
add
aad
cmp
repz
imul
icebp
push
data16
lea
pop
mov
clc
lcall
jl
xbegin
clc
cmp
and
add
add
rol
clc
sbb
stc
fldl
sub
cmpsl
clc
cmp
fidivrs
fidivs
add
add
clc
iret
jns
push
clc
sar
arpl
add
and
add
jbe
clc
repnz
add
add
decl
test
jmp
pushf
sahf
sti
xbegin
ljmp
cmp
fwait
jmp
adc
xor
add
inc
clc
cli
pop
lods
dec
sub
push
clc
test
xchg
pop
sbb
jnp
push
ds
sub
rcr
test
fisubl
adc
add
inc
add
inc
add
in
cmp
add
clc
insl
stc
xabort
clc
xchg
lret
xor
clc
mov
gs
cmp
cmp
cmp
clc
fisubs
mov
or
sbb
jmp
fwait
jmp
aas
out
xchg
fs
pop
clc
sbb
jb
add
jno
add
fwait
push
or
add
cmpsb
sub
sahf
repz
lods
fwait
mov
or
sub
sub
lods
aad
and
add
add
cmp
mov
inc
add
sahf
push
jmp
dec
sub
sbb
scas
pop
add
sbb
push
inc
clc
cmp
mov
cmp
add
jmp
scas
dec
adc
add
clc
dec
leave
sbb
add
sbb
push
test
and
add
sbb
xor
add
clc
jp
add
cld
aad
pop
jmp
mov
clc
mov
mov
fcmovb
clc
aaa
repz
push
ret
sbb
pusha
add
mov
movsl
clc
dec
addr16
scas
rorl
sub
int
clc
repnz
and
sar
cs
or
clc
sbb
jno
add
jmp
fwait
jmp
add
clc
mov
loop
mov
push
add
or
add
add
popa
add
fchs
clc
pop
fcompl
clc
push
sbb
xbegin
clc
jle
sahf
xor
icebp
pop
cmc
sbb
clc
clc
xor
add
add
iret
pop
clc
pop
jo
add
clc
repz
sub
cld
rcrb
loopne
cmpsb
clc
inc
add
bound
add
fldt
enter
pop
clc
addr16
idivl
add
aaa
cwtl
dec
pop
movsl
clc
pusha
add
inc
clc
jbe
testl
xchg
jbe
test
sub
xchg
pop
adc
add
add
mov
ret
clc
add
imull
clc
fsts
add
ss
sub
add
fidivs
add
into
out
nop
inc
add
jle
pop
lock
add
fwait
jmp
or
sub
sar
mov
clc
and
add
pop
enter
out
and
std
xchg
imul
clc
negb
mov
clc
add
add
xor
sbb
incl
imul
lret
mov
stos
sub
loop
push
cmp
fistpll
adc
add
cmp
not
jns
sbb
into
test
add
fdivl
and
add
add
add
pop
pop
jno
add
clc
bound
add
clc
pop
jno
add
in
out
sbb
jge
clc
cld
lret
sub
aas
test
mov
iret
adc
add
clc
aas
fmuls
sub
inc
clc
sub
je
add
roll
add
add
cmp
mov
int3
mov
or
hlt
mov
pop
clc
out
cld
cmp
clc
and
add
xor
add
push
adcb
clc
ljmp
add
fwait
jmp
sbb
mov
mov
add
add
shlb
call
push
ret
cmp
sub
cmp
jns
std
in
adc
add
mov
clc
xor
add
data16
or
clc
mov
add
add
add
add
stc
or
clc
test
jne
clc
xchg
call
jmp
cwtl
and
sub
add
or
cmp
add
inc
add
xor
jno
add
add
mov
pusha
add
push
pop
es
mov
clc
fidivl
add
hlt
clc
stos
test
jecxz
jle
ret
clc
fisttps
pop
aam
insb
lcall
clc
ud2
xbegin
pop
cs
add
sbb
adc
loop
out
inc
clc
and
add
popa
add
imul
pop
cmp
dec
pop
clc
ljmp
loop
add
add
into
scas
je
add
mov
sahf
xchg
sbb
jmp
scas
sahf
sub
fwait
stos
push
clc
mov
clc
in
adc
lods
fs
stos
in
lahf
cmp
and
insl
xchg
cmp
mov
imul
fwait
jmp
sub
mov
pop
and
add
clc
lods
test
adc
add
mov
sbb
clc
sar
lahf
mov
fistpll
lcall
ljmp
clc
addr16
xchg
cli
mov
clc
or
clc
mov
inc
clc
sub
add
add
add
dec
xchg
nop
test
adc
add
mov
add
jnp
add
lahf
addr16
test
ds
xbegin
add
clc
ret
xlat
mov
add
cwtl
mov
xor
shr
inc
add
ss
divl
add
fistpll
or
mov
jg
cld
xor
add
cmp
clc
inc
clc
je
pop
mov
add
dec
ficoml
add
pushf
sub
nop
pop
push
add
mov
fwait
sbb
sahf
outsb
dec
int
mov
clc
xchg
push
jmp
jb
add
jge
clc
in
pusha
add
push
add
fistps
lret
add
add
add
and
clc
jle
add
jecxz
aas
sar
clc
xor
add
adc
add
add
add
add
int
push
xchg
pop
inc
add
inc
clc
test
je
add
push
add
enter
rcrl
or
sub
push
add
ffreep
clc
pushf
jnp
mov
mov
dec
dec
mov
gs
jmp
call
sbb
jmp
xor
mov
add
lret
jecxz
call
sti
fsubs
add
add
sub
xlat
aas
mov
ljmp
nop
sarl
xchg
das
push
add
fisttpl
add
ret
clc
cmp
mov
xchg
inc
clc
repz
cwtl
sti
xor
add
xor
add
pusha
add
call
push
xabort
add
or
add
jge
es
iret
sar
shll
add
insl
jg
add
test
inc
clc
cmpsb
clc
cmp
mov
cld
and
add
lods
cltd
ja
pop
clc
sar
clc
and
add
add
scas
mov
ss
add
add
jae
add
dec
cmp
mov
xchg
ja
pandn
inc
clc
xchg
arpl
add
mov
clc
rorb
adc
add
add
stos
mov
add
insb
lods
arpl
add
pop
sbb
add
mov
insl
nop
insb
int
clc
enter
push
jmp
sub
add
pop
shlb
add
clc
jns
jecxz
push
add
cmp
clc
mov
scas
insb
xor
add
clc
mov
xchg
enter
into
mov
add
or
arpl
add
and
sbb
add
es
add
xor
add
clc
scas
push
clc
mov
hlt
or
xchg
movsl
clc
insl
lock
int
and
add
faddl
call
clc
dec
mov
sbb
dec
popa
add
cmp
jnp
cmpsl
clc
mov
push
clc
movsb
clc
inc
add
and
add
clc
int3
mov
jecxz
ds
push
add
out
cmp
clc
inc
clc
dec
inc
add
cwtl
xlat
mov
test
sub
mov
in
adc
add
fisubrl
clc
pop
fbld
scas
and
add
aaa
ja
xor
add
mov
clc
hlt
lea
add
out
pop
pushf
fcomps
clc
mov
add
add
mov
adc
ljmp
fwait
jmp
es
sub
sar
add
mov
aas
or
jns
clc
cmp
jno
add
sbb
pusha
add
jbe
add
std
inc
add
sub
push
lcall
add
clc
js
test
decl
or
decl
test
jge
add
add
mov
add
add
clc
push
rep
fwait
jmp
sahf
add
nop
lea
nop
and
or
xchg
gs
aam
sbb
add
imul
clc
insb
lret
inc
add
pop
dec
dec
mov
pop
stos
arpl
add
add
add
clc
sub
movsb
clc
sar
sbb
jmp
jge
data16
sahf
xchg
mov
clc
inc
add
fs
sbb
outsb
mov
mov
clc
xor
add
mov
add
add
push
add
fwait
jmp
mov
sub
add
xchg
adc
add
aad
cmp
in
fadds
out
in
xchg
gs
add
add
shlb
add
inc
add
push
add
cmp
aaa
addr16
dec
cmp
sbb
pusha
add
sar
clc
or
mov
add
pop
test
cmp
fwait
jmp
mov
add
add
add
dec
test
xchg
sub
repz
or
jb
add
clc
pop
leave
movsl
clc
rcr
mov
add
fisubrs
es
pop
mov
adc
add
cmp
lock
rep
adc
rcl
dec
mov
inc
add
mov
pop
popa
add
push
int
mov
fisubs
add
add
cmpsl
clc
or
jnp
rolb
add
jnp
mov
sub
add
and
push
mov
add
mov
sar
lahf
push
add
pop
scas
in
mov
dec
loope
fs
sbb
fwait
jmp
push
or
cmpsb
clc
mov
push
jmp
push
es
sub
cvttps2pi
add
inc
add
cmp
sbb
clc
and
add
loopne
iret
sub
add
outsb
pop
pop
ret
clc
insb
out
jmp
or
aas
cld
mov
loope
push
and
add
push
fwait
jmp
xchg
add
mov
arpl
add
jp
clc
pop
sub
data16
dec
mov
add
dec
mov
adc
add
clc
lret
mov
add
push
sti
or
add
aaa
pop
add
add
clc
sar
clc
pop
clc
jge
stos
sahf
pop
call
xor
fwait
jmp
add
clc
aas
pop
cmp
cli
daa
clc
mov
clc
cs
clc
stos
xor
add
lahf
nop
lcall
pop
ja
clc
jo
add
clc
sbb
clc
xchg
cmp
aas
cmc
lret
out
ss
aam
clc
mov
add
aas
arpl
add
jo
add
xchg
into
cmp
add
enter
sub
clc
aaa
push
iret
test
test
repnz
add
push
add
adc
add
clc
mov
clc
leave
insb
hlt
cli
mov
rep
fwait
jmp
ja
mov
mov
mov
fwait
jmp
push
sub
mov
inc
clc
cmp
aaa
jns
hlt
cli
add
add
dec
in
pop
clc
lods
push
add
or
clc
lods
sub
cmc
jecxz
cmpsl
clc
iret
push
mov
clc
push
rclb
jp
int3
test
pushf
jl
mov
das
int3
xchg
ss
mov
mov
clc
in
xchg
add
add
add
clc
imul
repz
clc
sub
test
enter
clc
clc
xor
add
clc
jle
imul
add
insl
xor
add
adc
add
clc
roll
inc
clc
mov
cmpsb
clc
int3
mov
add
add
clc
or
add
push
cld
push
ret
sub
jbe
clc
rorb
push
add
and
add
clc
jno
add
push
ret
mov
js
add
cld
push
ret
add
jne
fwait
jmp
dec
mov
and
add
clc
mov
call
push
ret
xor
fs
inc
add
daa
clc
int3
adc
clc
push
add
test
mov
fwait
jmp
outsl
xor
mov
cmp
clc
jbe
pop
and
jae
add
or
decl
or
xchg
mov
or
jle
gs
jne
add
repnz
cmp
add
test
push
add
cld
push
ret
dec
lea
mulb
add
imul
add
decb
adc
add
aaa
mov
clc
inc
clc
repz
mov
add
or
clc
xchg
sbb
xor
add
add
mov
jge
pop
sub
clc
cmp
push
cmp
add
enter
clc
test
push
inc
clc
cmp
mov
add
aas
mov
inc
clc
lods
out
dec
mov
clc
push
add
test
pop
js
clc
movsb
clc
cld
repz
cltd
xchg
gs
pop
arpl
add
add
add
jl
xor
fwait
jmp
sub
sbb
add
clc
cltd
xor
add
add
fidivrs
add
notb
add
ljmp
js
mov
clc
or
gs
or
clc
add
add
add
add
add
clc
pop
dec
pusha
add
pop
rcrb
xor
mov
loop
pop
xor
add
jmp
push
ret
imul
pop
stos
push
jmp
fwait
jmp
sub
xor
adc
xor
add
add
mov
mov
add
cmp
push
sar
clc
sub
call
add
imul
and
mov
cmp
data16
clc
jne
inc
add
lcall
clc
icebp
fnstenv
movsl
clc
lock
add
sbb
mov
ljmp
pop
add
out
gs
mov
test
inc
clc
repnz
jecxz
lahf
arpl
add
add
add
jnp
add
add
push
cmp
push
ret
jg
sub
lret
jne
and
inc
clc
and
shll
clc
mov
inc
add
sar
add
stc
cmc
in
inc
add
sar
clc
mov
and
add
jl
or
or
clc
cs
add
sub
add
clc
cwtl
out
push
clc
xor
add
push
add
stos
mov
jmp
sti
push
add
je
jmp
mov
loope
test
repnz
jp
jae
add
add
jns
clc
aaa
xabort
cli
daa
clc
es
roll
add
clc
pop
mov
jp
clc
mov
loopne
xchg
mov
clc
int3
jbe
mov
test
outsl
es
mov
lods
xor
add
add
aam
clc
rorb
push
xor
fwait
jmp
push
je
fwait
loop
pop
pop
xor
add
pop
clc
add
aaa
scas
mov
add
or
mov
xabort
inc
add
test
clc
ret
clc
jle
mov
aas
clc
push
jmp
je
or
xor
add
clc
adc
and
add
mov
adc
lcall
clc
mov
sar
clc
xchg
mov
xchg
out
pop
dec
mov
decl
fwait
jmp
sub
test
clc
fs
in
loop
popf
cmpsb
clc
fildl
add
shll
cmp
clc
or
clc
gs
sub
add
lods
and
add
add
cltd
xor
add
clc
lcall
add
pop
cmc
pusha
add
or
add
jmp
add
imul
bswap
push
add
enter
test
dec
sub
aas
pop
mov
add
sbb
repnz
insb
inc
clc
xchg
clc
das
or
mov
add
add
add
cmp
inc
clc
mov
or
add
mov
jmp
dec
stc
icebp
cmp
fwait
in
xchg
icebp
bound
add
nop
dec
and
add
mov
add
mov
insb
xor
add
clc
sub
clc
ficoms
add
cmp
add
xchg
js
xchg
jnp
cli
lret
mov
push
clc
in
loop
inc
add
cmp
clc
and
je
add
mov
clc
loope
jmp
or
mov
clc
jne
clc
fwait
repz
movsb
clc
cmc
push
fnstsw
clc
cmpsb
clc
testb
push
jge
mov
add
add
sti
jb
add
frstor
add
cmp
pop
stos
dec
mov
add
jl
in
and
add
jp
into
inc
clc
add
jae
add
ret
call
clc
xor
add
ret
jns
fisubl
add
dec
sbb
nop
and
add
das
imul
push
test
ret
xor
and
push
repnz
out
mov
insl
cs
ret
clc
test
popf
pop
popl
add
lods
incl
add
dec
xor
add
add
out
mov
add
lret
push
adc
add
nop
cmp
jl
clc
clc
cmc
dec
pop
and
mov
add
bound
add
inc
add
or
add
jo
add
and
add
xbegin
and
add
add
fnstsw
lock
es
or
testb
sbb
clc
dec
sti
sbb
cltd
add
add
push
mov
and
add
clc
adc
add
loopne
jae
add
add
gs
testb
clc
js
clc
dec
aas
push
loopne
incl
enter
cwtl
decl
sbb
enter
aad
jo
add
clc
sub
mov
cmp
pop
cld
push
ret
lea
pop
and
add
clc
mov
ljmp
xchg
xchg
decl
mov
outsl
sub
scas
xchg
ljmp
clc
enter
vstmxcsr
push
add
push
jne
fwait
jmp
test
jb
add
add
pop
cmp
cld
push
ret
fwait
sub
jp
add
mov
jo
add
clc
add
mov
clc
js
jg
clc
jo
add
addr16
outsb
inc
fwait
jmp
mov
pop
sub
fiaddl
add
jp
jp
decl
fwait
jmp
cwtl
mov
repnz
and
add
jo
add
fcoms
add
out
movsb
clc
cltd
jno
add
mov
xchg
push
mov
clc
repz
divb
add
clc
xor
mov
push
bound
add
xlat
out
mov
add
add
push
fwait
jmp
nop
insb
mov
add
test
jl
stos
sub
pop
inc
add
push
add
mov
add
mov
fwait
jmp
popa
ljmp
add
popf
lcall
sub
cmpsl
clc
inc
add
jns
in
adc
push
clc
adc
add
mov
clc
stc
xor
mov
clc
xor
jmp
aaa
add
out
and
add
push
cltd
inc
add
imul
mov
push
add
test
cmp
clc
call
loop
push
ret
and
and
mov
clc
push
add
popa
add
sar
lods
dec
mov
data16
cmc
pop
mov
add
mov
mov
add
ss
add
jge
sub
ss
loopne
gs
gs
call
in
add
or
add
add
or
fists
clc
push
dec
sub
clc
sub
add
add
add
ficomps
js
popf
pop
adc
add
lods
xabort
cld
in
cwtl
call
add
clc
jne
popf
jae
add
clc
and
fcoms
inc
add
lods
mov
clc
sbb
add
cld
push
ret
adc
fwait
push
add
test
clc
idivb
clc
int3
fs
insl
jl
mov
adc
loop
pop
stos
cmp
rorb
add
mov
call
fwait
jmp
lea
inc
push
mov
mov
lock
test
cwtl
in
sub
fldl
jmp
in
cmpsl
clc
jp
clc
mov
add
add
jbe
clc
mov
jmp
add
outsb
mov
add
ret
clc
mov
add
clc
enter
mov
fwait
jmp
das
outsl
jge
in
fistpll
sbb
clc
inc
add
rcl
int3
cwtl
push
add
mov
ret
clc
xchg
add
mov
add
add
pop
cmp
stc
add
and
add
clc
push
add
hlt
sbb
repz
push
in
jmp
adc
inc
clc
or
push
dec
stc
clc
push
lods
fcomi
and
fildl
add
test
std
mov
add
rorb
pop
nop
insl
popa
add
xor
repnz
adc
add
clc
push
add
mov
sub
xchg
cmp
jo
add
add
adc
lea
add
inc
clc
arpl
add
xabort
inc
cld
push
ret
sub
sub
pop
clc
out
sar
or
js
sar
cmc
pop
pop
jne
std
roll
movsb
clc
fwait
ss
add
pop
ss
pusha
add
inc
add
loop
pop
fs
dec
and
add
add
neg
mull
cld
iret
adc
xor
add
add
mov
jns
mov
clc
dec
stc
gs
movsb
clc
cs
add
test
add
cmp
inc
add
xchg
clc
pop
pop
mov
cmp
clc
sub
clc
cmp
mov
xchg
mov
xchg
js
sbb
clc
push
xor
mov
inc
add
sar
bound
add
pop
adc
add
cwtl
rcr
sbb
test
mov
cli
lret
add
push
clc
sub
clc
push
add
xchg
jb
add
add
clc
xchg
pop
clc
pop
gs
stos
stos
ficoml
stc
dec
aam
clc
dec
mov
pop
mov
mov
xchg
push
add
sub
mov
je
std
lahf
sar
repnz
mov
outsl
sbb
clc
scas
mov
loopne
mov
sub
clc
cmp
mov
add
sub
add
xchg
sahf
cli
bound
add
mov
xchg
and
sahf
mov
jle
cmp
clc
out
outsl
xor
add
add
and
jl
push
add
jg
add
cmpsl
clc
add
add
rorb
add
mov
dec
loope
imul
dec
dec
cwtl
out
gs
mov
clc
shll
add
add
fwait
jmp
push
sub
es
mov
loop
or
mov
xchg
frstor
add
lret
stos
pop
xor
add
clc
inc
add
jns
cmp
mov
clc
ss
shrb
sub
add
dec
adc
lahf
cmpsb
clc
loope
into
js
clc
jns
add
fwait
out
int
add
inc
clc
shll
add
insb
cwtl
jnp
stos
and
add
sar
adc
add
clc
and
add
push
fcos
lcall
decl
es
sahf
clc
call
add
jmp
lcall
das
fists
stos
mov
add
xchg
jmp
push
out
inc
add
xor
add
data16
test
push
je
lret
add
jo
add
xlat
iret
int3
mov
clc
outsb
imul
cmc
je
clc
ljmp
cmp
sbb
iret
int
add
leave
pop
push
clc
ficoml
add
xchg
pushf
lahf
jp
add
add
sub
push
jmp
insb
xor
fwait
xchg
jns
clc
dec
in
dec
daa
clc
or
pop
fists
add
xor
add
enter
lcall
or
clc
jmp
fidivrl
push
add
popf
mov
sub
mov
add
int3
in
cltd
pop
clc
js
xchg
outsb
jns
std
or
adc
clc
pop
sub
mov
and
add
add
scas
cmp
clc
test
add
push
clc
and
adc
add
push
add
mov
add
or
cmpsl
clc
mov
and
add
or
xor
fwait
jmp
fwait
std
in
push
push
fwait
jmp
jge
sub
jge
pop
and
add
adc
add
and
add
xchg
jmp
lock
clc
xchg
mov
xchg
pop
mov
push
outsb
jp
stos
popf
xchg
fisubrl
sbb
loopne
add
out
mov
mov
add
or
das
scas
clc
data16
test
iret
sbb
int
jl
clc
vmovaps
clc
add
add
clc
lods
loop
mov
add
add
mov
clc
mov
pop
ljmp
std
jle
xor
add
jmp
dec
and
pop
dec
mov
add
sahf
lret
out
popf
repnz
pop
iret
mov
add
add
sbb
xabort
clc
hlt
bound
add
outsb
mov
insb
push
add
sar
clc
std
pop
pop
lock
xchg
decb
inc
clc
out
lea
clc
stos
movsl
clc
mov
clc
adc
clc
ljmp
add
clc
cmp
lret
cmp
sti
push
test
outsl
clc
xor
add
stos
out
lock
and
add
add
sub
xor
fldl
or
jmp
jno
cmp
into
dec
idivl
sbb
inc
add
push
sub
fisttpll
pop
sub
js
and
or
ret
inc
clc
push
dec
imul
add
lret
push
add
sar
clc
es
sbb
fiaddl
clc
cmp
clc
xchg
inc
clc
jg
add
fistpl
das
sub
ljmp
add
push
add
dec
repnz
test
clc
aad
add
sub
lcall
jmp
jmp
push
adc
sub
add
jp
stos
jne
inc
add
add
add
add
adc
add
xbegin
jmp
add
mov
fwait
jmp
push
fwait
sub
clc
in
sub
fwait
jmp
sub
or
clc
mov
clc
dec
loopne
inc
add
stos
push
add
cwtl
pushf
cmp
clc
pushf
adc
clc
dec
adc
pop
push
call
mov
jae
add
mov
dec
push
mov
clc
xabort
fs
icebp
stos
sub
clc
cs
sbb
clc
jg
clc
sub
popa
add
jmp
ss
ret
clc
push
add
pop
in
flds
add
call
add
add
and
add
push
add
jae
add
ss
ret
clc
dec
jno
add
mov
ss
fisttpll
jl
clc
and
add
add
add
mov
test
loop
in
test
xor
add
add
add
mov
cmp
das
sarl
das
fs
cld
lods
inc
clc
into
lret
mov
add
int3
aaa
pushf
data16
xor
add
cmp
clc
fistpl
sar
add
xchg
mov
mov
cmp
popf
ss
lods
mov
add
push
pusha
fwait
jmp
and
das
push
inc
clc
adc
add
repz
clc
fidivrs
das
add
clc
shlb
add
pop
mov
je
outsb
jg
clc
push
add
sub
gs
pop
mov
hlt
mov
popf
enter
clc
inc
add
cmp
inc
add
or
lahf
outsl
inc
clc
jo
add
add
add
add
cld
stos
mov
clc
mov
cld
aas
out
test
adc
icebp
mov
test
arpl
add
and
add
mov
clc
sub
add
pop
xchg
dec
cmp
add
in
cmp
hlt
and
add
cmpsl
clc
lods
cmp
imul
clc
arpl
add
add
pop
leave
sub
aad
mov
sub
clc
in
imulb
push
add
push
clc
movsl
clc
pushf
inc
add
fnstenv
add
or
jg
ja
out
ljmp
jmp
sub
add
popl
add
cld
adc
add
add
clc
mov
dec
ss
jg
add
add
add
sbb
clc
xchg
div
pop
scas
pop
mov
add
push
mov
les
fwait
jmp
inc
fs
clc
int3
aam
clc
je
lret
add
mov
add
or
xchg
lret
jnp
mov
add
add
jge
rdpmc
add
mov
lret
mov
clc
mov
test
and
add
sti
insl
vzeroupper
rcrl
or
test
pop
sbb
push
clc
dec
mov
push
add
mov
add
mov
sti
jg
lods
fstpt
insl
cwtl
loope
cmp
xlat
xchg
imul
clc
sar
clc
repnz
cld
stc
mov
pop
clc
add
lret
fwait
jmp
dec
sub
push
mov
sbb
cli
fldl
push
add
xchg
xor
clc
inc
add
insb
stos
sahf
test
lret
push
add
add
inc
add
jbe
dec
arpl
add
sar
bound
add
in
jge
pop
outsb
mov
add
aam
add
mov
xchg
sub
pushf
out
sbb
clc
lods
jg
add
sti
jl
adc
add
add
fstl
sbb
clc
add
add
mov
add
jnp
movsb
clc
out
lods
pop
sub
clc
mov
add
sbb
aam
clc
in
fs
lods
inc
add
aam
int
jb
add
clc
addr16
or
iret
add
add
add
push
jg
arpl
add
lret
sahf
push
sar
jmp
add
pop
pop
bound
add
cmp
jge
fwait
jmp
pop
aas
fwait
mov
clc
js
scas
adc
add
add
mov
add
adc
add
dec
cmp
outsb
enter
daa
clc
xor
bound
add
sub
movzwl
fwait
jmp
and
add
xchg
mov
lahf
popa
add
insl
shr
push
loopne
mov
add
add
jb
add
pop
ret
ret
sub
jl
xor
add
add
xchg
inc
clc
in
jmp
xabort
out
leave
xchg
shrb
test
add
addr16
aas
cld
cld
push
ret
xor
scas
ja
cli
push
stc
dec
push
add
iret
pop
dec
std
cmp
clc
iret
cmp
je
clc
out
movsl
clc
pop
mov
imul
and
mov
inc
add
pop
sti
in
sub
clc
mov
enter
cmc
add
add
add
cmp
js
clc
in
push
inc
add
fldcw
gs
inc
clc
int3
pop
enter
div
pop
sub
adc
add
add
ja
clc
in
int3
xchg
test
gs
cld
lret
in
xchg
es
cmp
push
dec
inc
clc
rcll
add
add
xchg
dec
mov
hlt
xchg
mov
add
sub
add
insb
jg
add
pop
gs
arpl
add
xor
mov
shll
xor
sahf
arpl
add
rolb
add
sub
cmp
jbe
loop
and
push
clc
jnp
clc
outsb
cmp
clc
mov
xchg
stc
jb
add
xor
add
out
adc
add
and
add
das
stos
aad
clc
jne
pusha
add
or
clc
sar
mov
add
daa
clc
lea
add
add
add
mov
es
insl
jb
add
notb
xor
add
add
fnstsw
in
dec
js
push
add
dec
or
add
jno
add
mov
cld
push
ret
sub
add
xabort
ret
add
xor
scas
add
dec
push
fwait
jmp
push
dec
xchg
data16
and
lahf
call
add
adc
clc
push
mov
fwait
jmp
cwtl
data16
clc
aad
dec
repz
inc
add
dec
dec
or
clc
insb
mov
lret
fwait
in
mov
fwait
jmp
add
test
add
fwait
jmp
cmp
add
dec
adc
clc
iret
push
add
jecxz
mov
call
fwait
jmp
cmpsb
fcmovnbe
int3
xchg
xchg
inc
add
mov
cmp
clc
jo
add
add
or
test
jmp
add
inc
clc
mov
add
xor
add
add
clc
push
add
and
inc
add
mov
push
clc
dec
or
add
in
clc
mov
inc
clc
lock
add
pop
clc
push
rep
cld
push
ret
dec
cmp
clc
push
add
iret
rep
clc
mov
cmpsl
clc
and
add
pop
ds
xabort
inc
add
cmp
add
add
sbb
clc
dec
sub
clc
aaa
push
add
jns
cld
push
add
xor
mov
clc
lret
inc
add
jp
sbb
add
clc
jbe
clc
push
add
xabort
clc
jbe
clc
fistpll
jno
add
add
pop
mov
jmp
jmp
jg
dec
push
sub
pop
sub
add
test
mov
push
and
add
clc
in
incl
repz
jmp
aaa
pop
movsb
add
fwait
jmp
cmp
inc
clc
cwtl
dec
inc
add
mov
data16
call
xor
cld
push
ret
popa
je
repz
lcall
outsb
cmp
adc
add
repnz
in
jnp
push
cld
out
stos
std
test
fdivl
push
dec
fwait
jmp
push
or
dec
sbb
add
std
out
call
cli
fists
add
or
out
inc
add
pop
testb
popa
add
mov
add
cmc
push
mov
add
fildll
add
xchg
bound
add
clc
push
cmp
cld
push
ret
inc
dec
movsb
lods
mov
sub
clc
mov
jmp
dec
sub
roll
push
xchg
insl
das
imul
push
ret
cmpsb
and
in
adc
add
add
inc
add
add
add
add
je
fcom
adc
add
dec
and
cld
push
ret
das
scas
or
roll
add
inc
clc
push
sub
add
aaa
aam
add
shrb
mov
fwait
jmp
add
add
cltd
rcr
mov
push
fwait
jmp
add
pushf
idivl
jo
ljmp
test
ret
clc
lahf
push
sbb
in
insb
dec
xor
add
pop
fdivrs
mov
mov
aas
neg
cmp
loope
fstpt
mov
sar
clc
rcrb
mov
fwait
jmp
inc
jl
sti
lods
lret
fdivr
and
add
push
clc
outsl
xchg
pextrw
inc
clc
in
dec
gs
insl
leave
outsb
mov
dec
stos
mov
lods
push
add
dec
and
add
mov
sbb
je
add
int
fdivrl
clc
cmp
inc
clc
enter
add
mov
xor
add
mov
clc
lcall
adc
mov
pop
clc
add
jle
add
es
cmp
mov
loop
sub
clc
push
xor
fwait
jmp
es
jns
clc
mov
clc
and
add
fwait
jmp
sub
stos
inc
clc
inc
add
cmpsl
clc
dec
push
or
mov
add
add
add
add
pop
into
arpl
add
push
add
ja
mov
fwait
jmp
or
cmpsb
clc
iret
cld
pushl
rcrb
sub
sub
enter
clc
push
add
jb
add
cli
cmp
jg
clc
lea
push
adc
add
je
fwait
jmp
xlat
test
out
jne
jge
inc
fwait
jmp
cmpsb
je
cmp
out
add
add
mov
or
jne
loope
shlb
add
adc
add
fs
mov
pop
hlt
movsb
clc
out
sbb
pop
jnp
jg
add
pop
es
mov
add
jbe
sub
mov
stc
lock
ror
pusha
add
into
cmp
add
jecxz
mov
push
add
add
enter
and
lea
pop
fwait
jmp
dec
add
jp
aam
imul
adc
inc
adc
push
ret
pop
xor
int
rorb
mov
pop
clc
ljmp
jp
clc
pandn
mov
push
push
jg
add
pop
sbb
or
inc
clc
and
add
add
rcrl
ret
clc
std
ja
add
xbegin
clc
push
mov
add
mov
loope
dec
push
add
jnp
mov
clc
add
add
add
add
add
add
call
cld
push
ret
es
add
in
xor
clc
shll
jg
fwait
jmp
aas
adc
or
jb
add
push
mov
je
add
push
lcall
cmp
add
add
add
fwait
jmp
imul
sbb
cmp
xchg
inc
clc
stc
mov
lods
jmp
int
imul
loopne
add
xor
fisubrl
js
clc
push
js
push
rcr
adc
add
lret
or
clc
jnp
clc
cwtl
insl
out
add
push
add
fildl
xor
add
loop
add
add
clc
iret
inc
add
and
add
push
add
pop
and
add
add
cld
push
ret
data16
add
add
in
cwtl
iret
or
arpl
add
add
sti
cmp
sbb
add
add
mov
push
shl
mov
lcall
jmp
sbb
scas
jp
clc
ret
aam
sub
sub
fwait
jmp
jge
pop
sbb
add
fdivrl
jns
adc
clc
out
stos
jb
add
push
sub
add
sbb
repz
sahf
cmp
mov
fmull
repz
clc
xor
mov
clc
lea
add
cmp
add
bound
add
cli
cmp
js
clc
fldl
xchg
mov
add
xor
add
fistl
clc
out
test
fmuls
lods
dec
fistpl
push
fwait
jmp
add
lock
clc
mov
shr
fwait
jmp
sub
and
add
or
inc
add
inc
add
das
into
sbb
out
adc
add
pop
sarl
push
sti
mov
push
add
push
pop
test
leave
jb
add
lock
add
lods
push
jbe
clc
filds
add
clc
clc
mov
cmp
js
clc
rorl
scas
xor
clc
mov
scas
movsb
clc
setns
cmp
int
pop
hlt
ret
clc
push
pop
lea
clc
psubsw
clc
xchg
cmp
test
jl
inc
clc
xchg
push
add
aas
mov
inc
add
loope
mov
mov
data16
bound
add
jb
add
es
bound
add
add
fists
into
dec
mov
sbb
ret
je
fwait
jmp
add
and
add
add
and
add
pop
clc
xchg
mov
add
sar
clc
imul
arpl
add
add
in
jg
cmp
out
jge
pop
and
add
or
clc
outsb
sub
xchg
adc
add
or
repnz
jl
dec
sbb
shld
popa
adc
data16
jne
xor
add
add
cld
ja
or
pop
xchg
mov
fidivl
add
lcall
add
push
add
xchg
xor
add
movsl
clc
jb
add
clc
movsb
clc
or
shl
clc
inc
add
outsl
lock
clc
cmp
std
xchg
adc
add
adc
push
clc
ss
add
cmc
scas
jae
add
pusha
add
adc
jno
add
push
addr16
and
sub
cmp
insl
mov
add
loope
jmp
clc
iret
and
stos
ret
clc
pusha
add
adc
add
add
inc
clc
add
add
add
push
imul
xchg
mov
mov
fsubrl
inc
clc
icebp
iret
fdivrs
add
mov
test
add
je
in
jge
rclb
add
adc
add
inc
add
inc
add
imul
add
add
or
arpl
add
xchg
xor
add
aas
jge
into
push
mov
aam
mov
add
test
jg
negb
clc
push
add
sar
add
decl
sub
decl
stos
xabort
inc
clc
lods
adc
add
add
cld
push
ret
lods
sub
in
bt
daa
clc
sub
clc
into
inc
add
inc
clc
cmpsl
clc
or
sti
call
sbb
test
repz
lcall
clc
xchg
gs
adc
add
add
dec
xchg
mov
add
imul
clc
out
fistpl
add
inc
clc
pop
pop
in
nop
testl
add
xor
add
clc
arpl
add
cmp
add
clc
leave
or
clc
push
add
fwait
jmp
cmpsb
pop
sub
mov
add
clc
call
jge
pusha
add
dec
test
test
sti
pop
mov
clc
lret
adc
add
imul
add
stc
pop
into
rorb
add
inc
add
push
add
movsl
clc
cmp
clc
push
mov
fwait
jmp
and
sub
clc
mov
or
clc
daa
clc
sahf
test
or
mov
fidivrs
addr16
xor
add
in
decl
push
ret
jg
or
add
and
add
aad
add
add
add
mov
add
cmp
clc
cmp
stos
scas
in
test
imul
and
push
ret
push
outsl
jmp
mov
xor
add
add
outsb
leave
repnz
lods
iret
vminps
test
sahf
bound
add
jae
add
add
loop
adc
add
sbb
cmp
fwait
jmp
sub
add
ss
add
jae
add
jecxz
inc
clc
scas
enter
add
int
push
fwait
jmp
push
sub
adc
cmp
pusha
add
scas
push
je
fwait
jmp
popa
add
sbb
add
xor
add
inc
clc
stos
sbb
add
sbb
cltd
cmp
add
fwait
jmp
mov
push
add
incl
fwait
jmp
xchg
sahf
repz
iret
shrl
clc
xchg
in
nop
add
in
cmp
clc
push
lds
ret
jno
sub
clc
cmp
decl
xchg
cmc
lcall
mov
int
add
sar
clc
mov
adc
add
xor
add
clc
inc
add
mov
dec
ljmp
jmp
push
add
fsubrp
ss
adc
add
add
mov
add
movsb
clc
cmp
add
stos
insl
mov
push
cld
push
ret
add
cld
pop
clc
fimull
pop
test
add
mov
jp
clc
aam
clc
mov
xchg
fiaddl
sub
jne
add
fistps
push
add
cmp
clc
mov
pop
lcall
sbb
xchg
xor
add
int3
sar
push
sarb
push
ret
sub
mov
mov
fwait
jmp
dec
add
add
add
pop
sbb
out
call
inc
fwait
jmp
sub
push
push
imul
add
clc
iret
inc
add
insb
fnstenv
mov
int3
ficompl
clc
sar
arpl
add
jns
clc
xabort
fnstcw
add
and
pop
sub
add
add
dec
dec
fidivs
inc
add
aas
mov
jecxz
mov
mov
adc
add
shl
clc
pop
clc
xlat
std
into
jno
add
inc
add
sar
neg
push
pop
sbb
push
clc
rcrl
pop
nop
scas
fists
add
add
jp
iret
jl
clc
dec
mulb
cmpsb
clc
dec
lahf
je
clc
add
add
test
jmp
clc
and
add
add
inc
add
data16
js
push
add
fildl
add
mov
add
pop
jnp
mov
add
mov
and
add
dec
and
in
fs
push
lcall
xor
add
add
jmp
xor
mov
cmp
clc
call
xabort
adc
add
add
or
sub
add
dec
stos
xlat
aad
mov
test
xchg
sarb
xchg
clc
pop
sub
add
mov
fldcw
test
xlat
dec
insl
fiaddl
pop
sub
add
ror
out
sti
cmpsl
clc
dec
xlat
xor
add
clc
nop
inc
add
bnd
add
mov
inc
clc
and
and
sbb
clc
xor
add
clc
call
cmp
clc
pop
add
add
clc
clc
in
mov
pop
lea
clc
pusha
add
sti
out
cmp
loopne
xor
add
xchg
sub
or
clc
sub
adc
add
clc
xor
clc
jecxz
cmovb
add
inc
add
out
cmp
add
fldl
add
or
clc
lods
xchg
test
ja
pop
stos
cs
gs
mov
scas
bound
add
add
or
clc
mov
add
adc
lods
cli
or
pop
test
int
data16
pusha
add
arpl
add
add
add
add
pop
cmc
mov
inc
add
and
lods
push
scas
adc
add
scas
xchg
in
rcr
jmp
fisttps
jecxz
sub
dec
xchg
mov
popf
scas
pop
xchg
mov
or
mov
add
add
dec
ja
xchg
loopne
lock
mov
clc
or
out
sub
cmp
add
add
out
or
cmp
pop
xchg
int3
xor
add
add
mov
cmp
test
jbe
shlb
arpl
add
inc
clc
cmp
push
clc
test
mov
clc
mov
xor
add
mov
stos
fwait
je
add
add
mov
fisttpl
scas
sbb
and
add
add
mov
flds
out
add
add
clc
xchg
pop
cmp
clc
in
mov
push
add
add
cli
push
and
add
mov
insb
loope
cmpsb
clc
fwait
xchg
sti
sbb
sar
jo
add
out
fnstenv
add
add
in
sar
add
fwait
jmp
je
mov
add
movsb
clc
xbegin
add
aad
clc
int3
decb
mov
mov
fwait
jmp
xchg
sbb
jmp
sub
lods
add
add
jmp
gs
push
push
mov
cld
push
ret
push
or
clc
pushf
adc
add
add
clc
aam
clc
add
add
mulb
clc
aam
sbb
clc
or
add
add
into
scas
iret
insl
int
and
add
mov
fwait
jmp
add
or
add
dec
adc
add
mov
clc
test
lods
adc
add
add
clc
adc
add
clc
fbld
add
out
sub
add
xor
add
popf
cmp
ror
and
add
sub
inc
xor
fwait
jmp
pop
mov
add
inc
clc
dec
mov
push
add
imul
add
aam
cmp
adc
add
loope
dec
dec
insb
rclb
add
das
mov
add
sbb
add
add
mov
fwait
jmp
add
clc
inc
add
ja
push
clc
push
add
push
add
rcrb
cmp
clc
lahf
dec
inc
add
xchg
loop
popa
add
repz
clc
xchg
xor
add
popa
add
push
mov
sbb
add
testl
out
sub
mov
add
lcall
xchg
ss
clc
cmpsb
clc
xchg
push
clc
cltd
stc
jl
mov
popf
sub
sub
clc
add
add
clc
cmpsb
clc
mov
popa
add
xor
add
shll
adc
add
into
sub
imul
clc
pop
pushf
test
xlat
pop
mov
aad
mov
sbb
add
in
in
cmp
add
clc
insb
push
jmp
sub
add
je
push
gs
fwait
jl
push
add
stos
ss
push
lcall
jmp
clc
and
add
add
add
add
add
cli
mov
pop
cmp
clc
jbe
clc
sbb
add
insb
push
add
in
xchg
outsl
cmp
mov
outsl
push
test
jno
add
push
js
mov
dec
popf
jle
int
sahf
test
dec
std
ja
inc
clc
mov
mov
sar
in
movsb
clc
loop
xchg
cmp
and
add
dec
inc
clc
and
add
add
aad
clc
test
sbb
je
clc
int3
dec
mov
add
cmp
push
and
add
enter
lcall
inc
add
int3
scas
fwait
cmp
out
mov
inc
clc
ljmp
std
and
add
cld
or
add
imul
jmp
inc
add
stc
scas
push
add
ja
clc
lock
add
test
out
add
add
lahf
adc
cmp
clc
add
sbb
dec
mov
cmp
clc
fstl
add
dec
push
or
mov
pop
cld
push
ret
xchg
cmp
repnz
jl
clc
mov
lret
add
pushf
insb
mov
bnd
shrb
xchg
jo
add
mov
clc
enter
push
inc
clc
sarl
sbb
jle
cmp
clc
scas
xchg
mov
jnp
dec
add
add
add
addr16
stos
xchg
mov
add
clc
jne
insl
repnz
dec
ss
incb
mov
mov
add
clc
ret
add
inc
add
std
addr16
shrl
stos
neg
sub
jp
das
or
clc
cmp
sbb
clc
ss
xor
add
pop
mov
jge
outsb
call
clc
cmp
add
mov
clc
int
out
or
pusha
add
mov
inc
clc
push
test
call
fwait
jmp
cmp
das
xchg
int
pop
pusha
add
mov
add
sub
add
mov
xor
add
repnz
pop
lcall
call
sti
or
jecxz
jl
test
mov
negb
cmpsb
clc
add
fwait
push
adc
add
pop
imul
add
popa
add
filds
inc
add
mov
clc
xchg
call
call
fwait
jmp
insl
push
add
xchg
jge
mov
add
sub
add
add
incl
mov
add
push
clc
and
xchg
dec
push
dec
jb
add
clc
roll
add
jb
add
test
push
out
into
pop
dec
sbb
add
dec
xor
add
movsl
clc
mov
push
mov
add
add
gs
dec
aas
sbb
add
mov
cmp
clc
test
bswap
test
mov
clc
xchg
imul
fwait
xabort
add
sbb
int
xor
add
xlat
out
pop
dec
pop
jle
aaa
push
add
daa
clc
push
add
adc
add
xor
add
sbb
clc
mov
and
add
clc
test
xabort
mov
jp
xor
add
pop
pop
xchg
lret
jmp
clc
cmc
int3
sub
test
out
aas
inc
clc
push
add
aaa
xabort
add
dec
mov
jns
cwtl
sub
clc
lret
dec
hlt
loope
sbb
in
cmp
add
cld
push
ret
sub
push
cld
push
ret
or
das
pop
insb
push
add
icebp
icebp
imul
fisubs
clc
push
add
add
stos
push
add
fwait
jmp
inc
sub
cmp
clc
push
clc
daa
clc
jecxz
mov
jmp
cmp
inc
add
jnp
xor
clc
jbe
add
mov
jne
add
enter
cs
mov
fwait
jmp
test
or
xchg
xor
add
pop
inc
clc
pop
scas
int3
jns
add
xchg
xchg
movsl
clc
repnz
fwait
sar
mov
add
xor
inc
add
adc
add
add
jmp
sub
xabort
add
add
add
mov
test
clc
sbb
add
mov
clc
mov
pop
movsb
clc
push
push
jne
fwait
jmp
in
aad
add
mov
and
cmpsl
clc
int
clc
test
add
fisubl
vdivps
movsb
clc
pusha
add
xbegin
mov
fwait
jmp
xchg
push
inc
sarb
cld
loopne
fbld
add
rcrl
pop
sahf
push
add
clc
pop
push
add
ljmp
inc
add
cmc
bound
add
in
scas
mov
xor
add
out
gs
push
add
stc
xlat
xor
add
cmp
pop
xbegin
clc
and
jo
add
pop
jecxz
mov
or
lock
cmc
and
add
jg
enter
clc
and
add
jbe
add
jmp
mov
inc
clc
mov
js
clc
cmpsb
clc
mov
jmp
fwait
aas
push
jae
add
mov
mov
idiv
xchg
fs
mov
movsl
inc
add
sub
push
sub
stc
inc
add
pop
sahf
orb
clc
lea
or
pop
clc
or
cmpsb
clc
jmp
push
add
dec
hlt
dec
jmp
add
or
add
add
sub
clc
and
lods
xchg
push
xchg
push
add
mov
scas
mov
add
cmpsb
clc
lahf
sub
pop
cmp
data16
add
scas
add
add
add
clc
jbe
mov
push
add
xchg
cmp
es
or
clc
out
inc
add
xlat
or
aad
add
pop
imul
add
add
push
adc
mov
aas
stc
sub
sbb
or
add
fwait
jmp
insb
pop
lock
pop
xor
add
add
pop
jg
int3
dec
loopne
decb
add
and
pushf
aad
mov
mov
dec
fwait
jmp
subb
push
sub
and
add
mov
test
add
dec
icebp
in
add
push
mov
cld
push
ret
add
xchg
jp
jnp
add
mov
clc
xabort
fildl
add
imul
addr16
sub
clc
iret
js
test
push
ret
or
rcrl
jmp
sub
push
cld
push
ret
fwait
xchg
jg
js
clc
arpl
add
pop
fsts
add
inc
add
inc
add
ret
clc
xchg
jnp
clc
sar
stc
call
sbb
add
pop
je
sub
sub
imul
add
sub
pop
loope
mov
sar
cwtl
lea
xbegin
cwtl
inc
clc
lahf
inc
add
dec
std
push
add
stos
sqrtps
add
adc
mov
lcall
pushl
add
cmpsl
clc
in
xor
add
jge
xchg
ret
clc
hlt
cltd
es
jecxz
insb
in
dec
pushf
in
rcl
sar
rdtsc
add
pop
push
add
jno
add
insb
cmp
push
mov
cld
push
ret
test
in
dec
enter
sub
clc
adc
jns
add
push
xchg
decl
push
jge
mov
gs
pop
clc
adc
add
clc
pop
incl
dec
pop
inc
add
outsl
data16
xor
add
scas
pop
dec
int
cmp
push
ret
adc
xchg
ret
dec
pushf
push
add
or
arpl
add
test
fdivl
add
ja
xchg
jbe
enter
sub
push
ret
sub
xchg
mov
mov
pop
jno
add
xchg
push
mov
push
add
fwait
jmp
imul
xchg
icebp
mov
cltd
jne
inc
add
mov
repnz
adc
add
scas
mov
add
add
cmp
out
add
repz
clc
mov
mov
mov
leave
mov
jl
mov
fwait
jmp
sub
mov
mov
add
flds
clc
popf
cmp
clc
and
add
mov
fwait
jmp
jp
insb
dec
test
pop
xchg
fstp
mov
mov
sbb
dec
xchg
divb
add
and
add
lea
xchg
push
xlat
inc
add
lea
sub
add
cltd
pop
clc
adc
dec
mov
clc
jbe
adc
add
clc
sub
jecxz
clc
cs
push
ret
sub
mov
pop
sbb
loopne
pop
and
and
add
bound
add
add
add
add
mov
fs
mov
jmp
and
pop
mov
mov
add
xchg
std
sbb
clc
rol
clc
ja
sahf
add
add
iret
inc
clc
sub
dec
xchg
pop
aad
pusha
add
ret
clc
cmp
xor
add
push
cmp
clc
ss
mov
add
sbb
and
mov
leave
push
add
mov
add
add
add
cld
sbb
ljmp
add
clc
jp
clc
mov
ret
clc
cmp
add
scas
cmp
sar
clc
jl
add
inc
clc
push
clc
adc
add
clc
dec
cmp
add
clc
das
bound
add
test
cmpsl
clc
jnp
leave
cmc
mov
mov
cld
jmp
test
dec
mov
xchg
pushf
add
add
add
enter
add
xchg
adc
cmp
inc
clc
cmpsb
clc
gs
push
clc
sub
add
sti
ffreep
clc
jmp
sub
add
push
add
cmp
add
cmp
jecxz
pop
aad
and
add
mov
out
enter
das
ds
clc
outsl
jae
add
mov
clc
ja
clc
ret
clc
lods
adc
add
mov
inc
clc
mov
add
clc
daa
clc
push
clc
mov
mov
push
add
pop
pop
pop
adc
add
rep
fwait
jmp
pop
jno
sub
movsl
clc
cmpsl
clc
jecxz
lock
xchg
inc
clc
fs
sub
js
inc
add
sub
rcll
add
dec
xor
add
decl
fldt
add
clc
out
leave
movsl
clc
das
fimull
test
sar
mov
das
lea
pop
vmwrite
clc
push
clc
inc
add
sbb
or
dec
fndisi(8087
clc
in
mov
add
aad
gs
imul
clc
testb
pop
repnz
aam
lea
lahf
jl
push
push
cmp
sub
mull
add
jnp
add
mov
clc
ficoml
hlt
movsl
clc
shl
cld
repnz
clc
xor
aaa
sub
roll
clc
xchg
jge
mov
push
add
cmp
push
icebp
clc
sar
ret
jae
add
clc
jns
cmp
clc
dec
adc
add
sub
jbe
or
push
add
dec
pop
clc
testl
inc
add
ljmp
push
add
into
bound
add
xor
add
add
sbb
add
fcmovb
clc
mov
clc
fildll
fs
push
add
jecxz
inc
add
loop
mov
daa
clc
icebp
lods
add
add
add
fisubrs
jle
clc
cmpsl
clc
jb
add
divl
add
mov
add
add
add
loope
jl
mov
clc
stos
xor
dec
jmp
cmp
rcll
mov
lret
and
ja
clc
add
add
dec
out
sbb
add
pop
shll
add
movsb
clc
sti
fists
add
clc
fstps
cmp
add
add
xchg
test
clc
xbegin
ja
clc
rcl
loop
gs
xor
add
out
xbegin
loop
addr16
idivb
lcall
mov
adc
add
mov
out
xor
add
ret
clc
pop
dec
test
add
sahf
js
clc
rol
clc
adc
add
movsl
clc
dec
mov
dec
adc
clc
ret
clc
or
lahf
in
xor
add
mov
add
or
data16
or
xor
sbb
movzwl
fwait
jmp
lods
lods
jg
mov
sbb
add
clc
inc
clc
xchg
pop
mov
clc
push
rcl
imul
add
mov
psrlw
add
mov
mov
add
imull
add
push
add
stos
dec
jns
xor
add
add
dec
adc
add
mov
dec
xor
add
pop
add
add
inc
clc
mov
mov
fwait
jmp
test
clc
ja
jmp
add
pop
jbe
pop
mov
pop
insl
popf
jge
lcall
nop
push
push
mov
jp
roll
daa
insb
int
mov
add
sub
loope
pop
in
scas
jp
jecxz
push
or
sbb
sub
pop
sub
mov
out
mov
lock
hlt
xlat
lret
mov
rcll
add
lods
xor
add
stc
sub
pop
push
add
and
add
sbb
int
outsl
mov
mov
bound
add
add
dec
cmc
push
addr16
xchg
into
sbb
scas
fistl
add
mov
imul
add
aas
xchg
cmp
data16
xor
clc
test
sti
cmp
sub
adc
add
clc
cmp
clc
mov
nop
or
rolb
add
mov
ljmp
loopne
xbegin
clc
push
mov
xchg
inc
add
dec
sub
jo
add
xabort
mov
pushf
cmp
clc
mov
dec
or
clc
cmpsb
clc
int3
sti
cmp
add
lret
loopne
mov
addps
add
mov
add
push
inc
clc
insl
mov
fidivl
pop
movsb
clc
adc
add
cmp
fbstp
add
mov
clc
sub
clc
sti
xbegin
mov
ja
idiv
adc
add
add
stos
and
add
out
jmp
mov
pop
repz
mov
add
pcmpeqw
add
or
mov
clc
dec
pop
xchg
dec
lret
popf
out
add
jmp
clc
lahf
mov
daa
clc
lret
add
push
add
fsubl
clc
push
cli
xbegin
outsl
cmp
jnp
data16
push
popf
cmp
jge
clc
data16
xchg
push
push
add
aas
pop
jmp
xor
add
pop
rorl
clc
mov
add
jns
iret
aam
clc
xor
add
mov
fwait
addr16
pop
mov
add
leave
cmp
push
add
cmp
add
pop
pop
sar
inc
add
pusha
add
inc
add
scas
push
sub
add
add
mov
xor
add
adc
add
std
ret
je
clc
mov
jno
add
dec
xchg
mov
jp
movsl
clc
loope
adc
add
add
or
clc
push
push
dec
test
stos
adc
add
cmp
add
adc
add
imul
add
mov
add
jns
add
mov
clc
add
add
add
add
inc
add
hlt
sub
clc
xor
add
add
clc
cmp
xlat
and
add
clc
jae
add
add
gs
cld
jno
add
clc
adc
add
push
aad
or
add
clc
pop
clc
movsb
clc
pop
loope
cmp
xchg
pop
sub
dec
popa
add
dec
mov
add
mov
xchg
lock
add
mov
clc
jbe
inc
clc
data16
mov
clc
mov
pop
aas
push
add
jmp
push
mov
cwtl
sar
sbb
xchg
mov
fwait
gs
je
aas
repnz
in
add
add
bnd
add
fnstenv
imul
pushf
or
add
add
xchg
sbb
add
adc
add
add
cs
dec
mov
xchg
mov
jne
push
clc
into
lret
add
jae
add
clc
dec
and
add
add
aaa
enter
add
pop
jnp
push
dec
adc
add
add
gs
fs
or
add
std
popa
add
inc
add
mov
clc
mov
clc
ret
clc
push
add
shlb
add
test
jg
call
add
daa
clc
in
cmpsb
clc
out
loop
in
jae
add
movsb
clc
jne
repnz
adc
add
cmp
clc
mov
ret
clc
out
sbb
clc
in
roll
fcmovu
or
clc
shlb
pop
lods
iret
sti
enter
clc
push
push
add
out
sbb
and
clc
push
xchg
fdivl
adc
add
fadds
clc
inc
clc
pop
out
jl
push
xchg
dec
mov
clc
iret
aaa
push
clc
push
sbb
add
push
cmp
mov
lods
mov
jg
adc
add
lahf
sbb
add
fmuls
clc
cmp
clc
mov
sub
jne
decb
jmp
or
out
repz
clc
dec
xor
add
gs
ja
clc
sub
sbb
outsl
aaa
into
push
xor
clc
jns
clc
outsl
jnp
sub
out
gs
sti
or
fisttps
mov
clc
pushf
data16
lods
pop
lcall
clc
push
clc
lret
cld
sbb
push
add
mov
pop
aas
popa
add
or
cmp
add
add
jae
add
cmp
clc
es
pop
xchg
mov
scas
xor
push
add
push
clc
fisttps
js
mov
clc
ljmp
push
in
mov
add
in
mov
data16
stos
test
xor
add
adc
add
add
lret
sbb
in
or
jae
add
clc
insl
inc
add
push
add
mov
clc
push
clc
mov
cli
push
add
addr16
jb
add
pop
jns
clc
and
add
add
xchg
das
idiv
test
and
add
clc
clc
stc
arpl
add
clc
add
add
lods
or
clc
lock
testb
mov
inc
clc
sbb
sbb
pop
sub
add
mov
mov
add
clc
sbb
sbb
nop
push
clc
mov
inc
add
ret
and
add
add
push
add
mov
add
ror
in
sti
cmp
adc
add
mov
mov
cmp
add
add
push
add
das
mov
mov
add
mov
clc
lea
data16
push
clc
mov
clc
and
add
mov
clc
adc
add
or
ficoml
add
shrb
jg
clc
stc
adc
add
and
add
pushf
bound
add
lock
clc
mov
dec
lahf
cwtl
outsb
movsb
clc
sub
add
add
push
jmp
add
cmp
sub
add
mov
clc
add
add
adc
add
clc
jo
add
clc
inc
clc
sub
add
mov
lods
iret
cmc
and
add
data16
jp
adc
add
sbb
fidivs
dec
lahf
idiv
jmp
loope
sahf
rorb
clc
sub
dec
or
or
int
clc
or
add
inc
clc
mov
int
xchg
movsb
clc
inc
add
mov
sbb
add
xchg
jo
add
lods
es
shrb
clc
jbe
adc
add
xor
add
iret
sar
add
ds
out
fucomp
sbb
int
clc
mov
pop
je
clc
std
loop
cmp
push
ss
ja
jecxz
lahf
mov
jo
add
sub
or
clc
lock
data16
cltd
fadds
enter
test
add
add
add
pushf
lods
xchg
test
dec
push
cli
jno
add
add
cmp
add
and
add
repnz
movsl
clc
pop
sar
bound
add
xchg
fmul
je
test
mov
clc
cltd
or
clc
lahf
aas
pushl
clc
mov
cltd
sub
scas
or
test
inc
clc
cmp
lea
clc
out
mov
lret
cmp
imul
clc
or
fstpt
clc
xchg
cmp
jo
add
fldl
clc
add
add
clc
js
inc
clc
adc
add
add
push
inc
clc
mov
ds
addr16
insl
out
pop
clc
cwtl
data16
xchg
xor
clc
repnz
add
push
cmp
data16
xchg
push
addr16
outsl
lea
loope
inc
add
test
fimuls
repz
cmp
mov
xabort
imul
lret
js
je
xor
add
add
dec
mov
clc
lea
add
add
add
ret
clc
test
add
dec
lret
mov
je
clc
xbegin
mov
in
test
aaa
add
scas
stos
xlat
cmp
clc
in
test
mov
xchg
inc
clc
sbb
push
test
notl
clc
xchg
sub
clc
std
dec
cmp
fld
clc
mov
or
cltd
sti
sub
add
sub
in
sbb
clc
pop
out
mulb
data16
out
cmp
push
sub
clc
pop
lret
clc
dec
cmp
dec
hlt
std
out
or
mov
pop
and
pop
sti
movsb
clc
inc
add
data16
sub
and
pop
movsb
clc
lock
pop
xabort
or
add
inc
add
adc
add
ficoml
rorl
clc
ja
or
add
and
or
lcall
or
cmp
in
dec
add
mov
add
lahf
popa
add
shrb
fldenv
xchg
mov
movsl
clc
or
clc
fistpll
add
sub
add
clc
sar
int
add
add
push
add
call
adc
sub
clc
mov
add
sub
cld
ss
gs
mov
gs
jne
data16
fs
mov
in
cmp
sub
sar
inc
add
jnp
repz
out
or
in
mov
xlat
pop
xlat
in
xor
add
add
stos
inc
add
push
jnp
mov
popf
mov
mov
loope
lea
add
xchg
test
clc
push
add
pop
cwtl
js
and
add
add
out
mov
clc
sub
jp
clc
inc
add
or
mov
add
add
data16
ret
imulb
pop
and
add
clc
jmp
sahf
lock
mov
add
clc
mov
call
jmp
cmc
mov
clc
cmpsl
clc
fldenv
add
popf
jmp
push
ffreep
clc
add
fsubr
ljmp
jp
and
sub
adc
jbe
push
add
out
push
and
add
add
jno
add
add
add
sbb
add
data16
pop
sub
fistpll
mov
mov
cmp
jno
add
add
ffreep
clc
cmp
out
xchg
adc
clc
adc
add
ss
clc
mov
clc
ds
pop
dec
add
jge
add
mov
je
ficoml
cmp
add
dec
mov
sbb
xor
add
mov
add
mov
or
clc
xor
add
push
add
test
add
inc
clc
mov
iret
sbb
ret
sub
fwait
icebp
lahf
scas
xchg
shll
add
mov
inc
add
inc
clc
call
clc
mov
push
bound
add
movsb
clc
clc
push
jb
add
fs
jmp
push
stos
inc
clc
adc
add
clc
test
add
add
clc
inc
clc
pop
dec
fwait
ret
add
add
inc
clc
and
add
cld
xlat
divb
add
loopne
cmp
clc
dec
out
sub
daa
clc
xchg
in
mov
shl
inc
add
ss
mov
or
mov
mov
fmulp
cmp
clc
pop
mov
push
inc
add
push
out
shrb
add
cmp
clc
cwtl
lea
ds
add
addr16
jg
or
leave
daa
clc
jp
cld
and
add
clc
pop
fcmovnb
clc
imul
xchg
xor
add
push
clc
jae
add
add
scas
stc
cmp
add
in
pop
outsb
pop
cmp
push
or
xchg
int
dec
lea
add
mov
xchg
xchg
ja
test
lods
mov
rcll
add
sub
xchg
stc
fstpt
lock
imul
add
cwtl
icebp
sub
add
mov
clc
fs
cmp
dec
push
mov
add
push
lods
cmp
mov
clc
jmp
or
inc
clc
aaa
test
clc
sar
fcoml
and
mov
clc
pop
push
push
add
sbb
add
inc
clc
bound
add
inc
clc
gs
jp
pushf
nop
sbb
frstpm(287
clc
scas
dec
push
loope
call
push
fsubrl
inc
add
outsl
fs
shll
add
push
pop
in
cmp
aad
add
dec
sbb
movsl
clc
iret
add
add
clc
xbegin
add
push
add
stos
xchg
xor
call
push
add
inc
clc
dec
icebp
dec
push
add
or
jp
push
out
test
in
popf
xor
add
clc
xor
add
push
inc
add
xchg
iret
mov
push
add
and
add
outsl
mov
add
push
cmpsl
clc
push
add
mov
clc
lods
mov
clc
cmp
push
xchg
pop
das
cmp
add
cmp
fdivrs
add
clc
aaa
mov
mov
add
addr16
add
add
clc
push
xchg
adc
add
pop
clc
xor
add
clc
adc
add
hlt
mov
ret
clc
fcoms
sti
addr16
adc
add
jg
sub
xchg
movsl
clc
cmp
add
xor
add
fsts
xbegin
clc
iret
jp
push
cltd
std
idivb
or
lods
sar
clc
and
jnp
mov
clc
call
lahf
mov
stc
cmp
or
clc
xlat
jp
clc
repz
or
add
ret
clc
push
clc
pop
clc
mov
enter
into
repnz
clc
jge
clc
call
add
pop
clc
or
inc
add
adc
add
mov
add
jp
mov
clc
xchg
or
leave
movsb
clc
push
aas
add
add
clc
add
add
xchg
push
clc
jne
add
mov
stc
inc
clc
mov
rcll
mov
cmp
lcall
add
add
push
add
xchg
sub
jg
fdivr
xchg
cmpsl
clc
jg
inc
clc
enter
or
add
cmc
clc
mov
add
push
dec
xchg
outsb
cmp
push
pop
aad
clc
out
xchg
lret
mov
loope
cmp
clc
xchg
fs
mov
fwait
jge
xor
add
jmp
cwtl
stos
mov
insb
xchg
lahf
dec
in
icebp
pop
push
add
cli
int
adc
add
xchg
test
push
cmp
clc
or
inc
add
pop
scas
dec
xchg
stos
xchg
pop
test
hlt
mov
clc
test
xchg
clc
push
add
sbb
push
sub
push
clc
dec
xchg
jl
add
mov
xor
add
mov
leave
and
cmp
push
clc
xor
add
clc
outsl
lods
mov
mov
cmp
clc
sbb
add
and
add
pop
scas
lea
aas
fldenv
cmp
mov
clc
jl
add
ljmp
clc
pop
and
add
add
clc
repnz
sub
push
popf
stos
movsb
clc
fisubl
inc
clc
jmp
ror
inc
clc
dec
out
cltd
xchg
notl
xchg
jg
push
aad
cmpsl
clc
pop
rcll
add
jno
add
push
add
dec
sbb
jmp
jnp
add
out
add
add
mov
jbe
cmp
nop
popa
add
and
add
jns
add
test
add
push
or
clc
cmpsl
clc
into
or
clc
jp
add
add
clc
mov
clc
jnp
clc
fs
and
add
add
clc
ret
cli
clc
xor
add
adc
das
inc
clc
clc
repnz
or
cltd
pop
or
jnp
sbb
clc
std
jle
adc
add
mov
sub
xchg
cli
imul
pop
adc
add
clc
and
add
add
je
clc
mov
icebp
data16
je
clc
fbstp
add
sub
or
clc
lods
and
add
jns
add
or
sbb
jmp
clc
out
jle
lret
movsl
clc
mov
imul
add
mov
add
mov
add
sub
add
fwait
ret
loope
fistpll
push
add
iret
xchg
bound
add
add
xchg
xchg
rcrl
aam
into
cmp
sbb
movq
ja
add
leave
mov
cmp
cmp
xor
add
jns
cmp
out
neg
mov
add
call
clc
lods
xbegin
add
jns
stc
clc
pop
jecxz
leave
jecxz
ret
sbb
add
loope
lahf
sub
add
xlat
push
xor
add
sahf
push
adc
add
cmp
clc
jne
sti
mov
mov
insb
mov
lahf
test
xabort
fdivl
movsl
clc
mov
ret
clc
addr16
pop
cli
out
icebp
sbb
sub
mov
scas
lret
inc
add
jae
add
movsl
clc
pop
pop
sub
out
aaa
dec
lret
xor
add
bound
add
sti
adc
add
clc
jmp
xchg
cmp
clc
cmp
or
pop
clc
jno
add
lret
push
fcoml
clc
mov
fcom
jnp
add
sbb
fndisi(8087
clc
jecxz
xor
add
and
add
and
add
add
ds
add
jge
add
repz
xchg
xbegin
fwait
add
add
xchg
sar
clc
imul
add
clc
ss
push
clc
xor
ficoml
in
cmpsb
clc
dec
mov
pop
clc
and
mov
inc
clc
es
out
fwait
popf
sub
xor
clc
push
clc
add
adc
add
push
pop
clc
mov
jns
add
and
clc
mov
clc
in
inc
add
cmc
repnz
and
add
int
clc
jmp
and
add
ds
cmc
fsubrs
mov
clc
sub
and
add
aas
in
daa
clc
sub
add
sub
push
jnp
xbegin
mov
sbb
inc
clc
jecxz
gs
jmp
add
das
push
mov
clc
xchg
aad
rclb
cmpsl
clc
jae
add
mov
push
add
js
mov
add
addr16
push
inc
add
cmc
out
ljmp
add
mov
cmpsl
clc
fldenv
xor
add
lret
xor
add
stos
fwait
push
cmp
inc
add
inc
clc
and
in
mov
clc
sub
mov
clc
jo
add
lock
add
or
cmp
addr16
pextrw
adc
jmp
add
push
sub
fucomi
data16
xor
add
ret
clc
mov
mov
stos
push
mov
movsl
clc
shrb
mov
clc
cmp
and
add
stos
sub
adc
add
clc
mov
mov
aaa
jecxz
int
add
imul
jbe
jle
push
imul
jbe
pop
pushf
rorb
sub
mov
add
adc
add
lock
xlat
cmpsl
clc
and
add
cmp
clc
lahf
adc
add
xchg
test
inc
add
cmp
dec
cmp
xor
add
mov
clc
adc
add
jns
inc
clc
pop
sbb
stc
sub
add
sar
fsubr
push
clts
clc
loopne
and
add
in
mov
pop
dec
dec
test
cld
scas
dec
rolb
push
cmp
ljmp
clc
stos
std
xchg
js
clc
adc
lea
push
cmp
sti
int
clc
xlat
pop
push
mull
cwtl
sub
add
clc
int3
cmp
add
push
add
jecxz
ljmp
add
clc
sbb
in
insb
bound
add
aas
cs
adc
add
add
add
clc
xor
clc
lock
add
cmc
mov
dec
mov
add
add
add
rcll
add
lret
sar
clc
mov
cmp
mov
cmp
popf
or
jg
cmc
mov
cmpsl
clc
sar
cmpsl
clc
sbb
mov
insl
push
rol
clc
aas
cld
add
mov
mov
jg
clc
jge
add
jmp
and
add
add
xchg
sub
clc
sbb
clc
inc
clc
test
push
es
jmp
cld
dec
fs
xor
jbe
add
sub
clc
push
addr16
pushf
scas
insl
jecxz
sub
add
stos
and
repz
add
add
add
add
sar
ds
and
add
sbb
and
add
scas
pop
leave
mov
repz
xchg
ja
add
xor
add
mov
pop
stos
adc
add
repnz
add
clc
clc
and
add
push
loop
mov
cltd
lret
in
psrlw
add
adc
add
sar
xchg
cld
loopne
flds
add
cs
fildl
scas
mov
or
push
movsb
clc
test
pop
cmp
dec
jg
add
stc
lahf
inc
clc
jae
add
clc
sar
adc
add
decb
add
add
clc
aad
mov
in
lret
add
fnstenv
add
clc
cmp
add
jge
mov
mov
push
add
sar
mov
mov
testb
int
dec
lock
dec
adc
add
fcmovu
flds
or
cmc
enter
mov
lret
clc
cmp
negl
fdivrl
add
jl
sar
in
fdivrs
flds
clc
adc
add
in
rcll
add
clc
in
xchg
lret
js
clc
pop
out
adc
add
add
add
pop
fmul
add
add
sub
add
add
add
aam
xchg
loope
stos
stc
inc
clc
outsl
inc
clc
mov
add
lahf
scas
pop
fsts
add
add
clc
cmpsl
clc
inc
add
ret
clc
xabort
loope
mov
add
fcom
loope
lcall
and
add
mov
and
add
not
mov
sbb
cmp
test
clc
out
test
push
add
add
cs
cmp
cmp
stos
adc
clc
cmp
clc
dec
and
add
adc
add
add
mov
add
or
cmp
jge
add
stos
xchg
xor
ror
inc
add
dec
arpl
add
clc
gs
mov
add
test
push
add
inc
add
roll
mov
or
rolb
push
add
fldenv
adc
add
mov
cmp
add
xabort
insl
sbb
push
clc
mov
mov
push
add
cmpsb
clc
cmpsl
clc
loope
hlt
jmp
jo
add
mov
or
aas
mov
stos
mov
clc
push
jg
popf
ja
sub
fwait
sahf
scas
jmp
gs
or
add
add
insl
inc
add
sbb
cli
ja
clc
jns
int3
lcall
add
push
add
sbb
int3
cmc
outsb
jae
add
fwait
stos
jns
push
push
clc
or
add
and
std
lahf
xchg
mov
add
add
add
in
ret
clc
add
add
inc
clc
sub
pop
imul
xor
add
add
and
jg
add
mov
add
add
in
and
xor
add
fwait
leave
mov
fnsave
dec
xor
add
rol
clc
pop
aaa
or
lea
add
clc
imul
xor
add
lahf
sti
add
and
add
add
mov
add
or
and
leave
cs
aad
rcrb
clc
shlb
add
pop
pop
mov
aad
clc
into
addr16
and
ficoml
add
adc
add
adc
clc
jno
add
fmull
add
mov
clc
pop
inc
add
nop
adc
add
mov
add
aas
int3
enter
pop
xchg
inc
add
mov
lret
fimuls
push
out
sbb
sbb
add
add
fmull
sub
xbegin
clc
inc
add
pop
bound
add
cmpsl
clc
out
pop
and
in
stc
jecxz
push
add
fsts
add
sar
add
daa
clc
scas
std
pusha
add
sbb
daa
clc
push
mov
fcmovnb
clc
das
mov
sbb
cld
rol
clc
popf
mov
add
add
clc
jecxz
es
or
and
add
add
fsubp
clc
lea
sub
add
add
dec
mov
movsl
clc
add
add
clc
xchg
loopne
adc
xor
add
inc
add
lret
mov
clc
jmp
aam
mov
jle
clc
aaa
pop
mov
dec
out
test
add
add
clc
movsb
clc
out
add
pop
ret
clc
cmp
clc
aaa
jbe
clc
or
mov
mov
scas
lahf
out
cmp
add
ds
imul
add
clc
jbe
mov
gs
stos
push
mov
fcmovnb
clc
push
mov
cmp
dec
cmp
add
dec
js
into
mov
cmp
add
mov
clc
jbe
push
clc
mov
int
clc
lret
jbe
add
mov
pop
xchg
dec
out
push
add
xor
add
clc
adc
add
int3
outsl
loopne
mov
movsl
clc
jl
hlt
xbegin
data16
cltd
or
in
iret
je
sar
add
mov
clc
cmp
jns
mov
hlt
call
mov
clc
and
add
cltd
sbb
or
clc
lahf
pop
pop
clc
dec
push
mov
add
popf
jg
clc
cmp
clc
jnp
mov
jmp
sar
add
leave
jo
add
hlt
in
pushf
hlt
in
mov
mov
adc
add
sbb
add
add
sbb
push
add
es
outsl
into
stc
cmp
repnz
pop
pop
fildl
mov
and
add
add
clc
push
add
gs
mov
clc
rcrb
xchg
js
clc
out
xabort
out
fadds
add
iret
dec
pop
mov
shlb
add
sub
lret
xchg
jmp
or
test
pop
fwait
dec
std
push
cltd
push
insl
xor
add
popf
cmp
and
dec
pop
fiaddl
sti
out
femms
jo
add
fwait
mov
clc
data16
ds
xor
clc
mov
ss
or
lcall
add
mov
mov
add
dec
and
lock
dec
jge
push
add
ljmp
dec
je
add
iret
xbegin
add
cmpsb
clc
in
sbb
clc
fwait
scas
mov
pop
jge
pop
dec
sub
add
jge
inc
clc
aam
clc
sahf
cmp
stos
jg
repnz
popa
add
xchg
mov
add
push
clc
hlt
mov
xchg
mov
fs
scas
inc
clc
in
shlb
add
pop
mov
enter
enter
adc
sub
xor
add
dec
mov
int3
mov
add
add
aaa
xor
clc
and
add
dec
in
leave
pop
sar
lea
add
add
xchg
mov
push
incb
clc
or
add
cmp
cmc
push
push
shlb
clc
xchg
inc
add
out
push
add
push
sti
sbb
inc
clc
shlb
jg
clc
flds
add
clc
out
cmc
sar
clc
push
jecxz
inc
add
insb
and
add
dec
push
roll
add
adc
add
and
jmp
add
imul
xor
add
fs
cmp
add
add
add
mov
mov
lock
sub
add
sub
jno
add
add
add
nop
adc
pop
icebp
pop
fidivrs
clc
gs
xchg
mov
push
add
add
std
lret
imul
cmp
and
add
add
xor
add
dec
inc
clc
shl
add
mov
xor
add
clc
call
mov
push
sbb
mov
aad
out
sub
dec
xor
add
clc
inc
clc
outsb
mov
adc
add
lea
insb
inc
clc
xchg
pop
int
push
dec
cwtl
sub
rcll
add
add
stos
jo
add
clc
arpl
add
ss
push
test
xbegin
add
add
rclb
add
mov
sbb
add
mov
add
or
add
cmp
test
imul
inc
add
lods
or
add
ja
add
fimuls
add
hlt
test
adc
add
add
clc
shrl
fwait
xchg
gs
mov
out
popf
or
push
xor
add
inc
clc
popa
add
add
cmp
inc
clc
dec
dec
faddl
cmc
pop
es
cmp
cwtl
scas
int
es
push
fmull
clc
bound
add
add
inc
add
xor
xor
lret
xchg
insb
mov
data16
or
add
lcall
add
add
and
add
add
mov
cmp
adc
add
add
es
or
add
loope
lods
cs
popa
add
xchg
scas
ljmp
mov
jne
clc
or
xchg
pop
insl
cmpsb
clc
movsl
clc
xchg
pop
clc
xor
dec
and
add
mov
clc
pop
test
clc
cmpsl
clc
lahf
sbb
mov
pushf
mov
je
sbb
clc
jne
cmp
clc
and
psubb
addr16
fs
sub
jne
add
add
cmp
rol
clc
mov
clc
test
adc
add
outsb
mov
add
int
clc
inc
add
or
mov
or
mov
repz
imul
pop
popa
add
test
nop
sbb
add
xor
lea
scas
push
adc
add
aaa
push
cmp
clc
pop
xor
testb
add
pop
cltd
dec
dec
repz
or
lahf
std
xchg
sub
xbegin
push
loopne
das
aas
xor
add
jecxz
xchg
push
add
lcall
and
add
insl
pop
clc
push
jb
add
mov
xbegin
and
add
xor
clc
inc
clc
fs
and
add
add
add
sub
loope
in
popa
add
mov
cmp
jae
add
jae
add
std
add
add
dec
add
add
add
push
dec
hlt
lock
sahf
test
mov
add
add
into
xchg
test
jmp
mov
clc
xbegin
jg
inc
add
stos
ret
clc
out
inc
clc
or
clc
out
and
add
add
clc
loope,pn
dec
push
mov
adc
add
pop
mov
out
mov
iret
push
add
call
add
push
or
pop
pushf
movsb
clc
ljmp
into
call
cs
mov
sub
push
iret
aad
mov
add
add
imul
insl
out
and
add
add
add
ffreep
clc
sub
clc
adc
add
mov
test
mov
add
add
in
sbb
je
enter
cs
mov
call
add
outsl
icebp
aaa
cmp
sub
add
jle
push
add
mov
clc
cmp
or
clc
or
clc
ret
clc
cmp
xchg
fdivs
add
dec
sub
add
clc
je
sti
cmpsb
clc
insl
push
clc
mov
lret
imul
aaa
xchg
mov
xor
add
in
mov
clc
es
mov
pop
roll
mov
cmp
push
cmp
sbb
clc
cmp
clc
enter
clc
cmp
loope
or
test
jns
pop
out
cmp
ss
in
loop
push
jg
pusha
add
xchg
sub
add
ja
clc
cmpsl
clc
pushf
lods
mov
add
push
add
and
add
mov
cmp
add
ss
insb
pop
bound
add
add
xchg
rclb
push
cmp
test
test
das
mov
es
sbb
push
popa
add
out
push
add
jg
pushl
insl
xlat
rcll
add
out
outsb
clc
fsub
clc
xchg
int3
fstpl
add
imull
add
clc
lods
mov
xor
add
iret
xchg
stos
dec
xor
lods
sbb
adc
add
clc
test
ret
sub
lock
int3
and
add
add
repz
add
sub
std
xor
lahf
pop
dec
sbb
dec
jns
push
dec
fstpl
dec
adc
add
pop
shrb
add
or
add
jo
add
fst
jmp
clc
dec
inc
add
je
and
add
enter
sub
add
clc
add
add
push
add
inc
add
jl
clc
and
add
add
sub
add
xchg
rol
clc
popf
addr16
or
mov
push
clc
add
xchg
mov
xor
add
nop
mov
add
cmp
mov
add
arpl
add
jb
add
add
add
pop
fimull
and
add
ljmp
jae
add
adc
add
imul
lods
jb
add
add
jle
push
int
add
dec
xlat
cltd
add
add
mov
clc
sub
add
jns
add
add
xor
rcrb
add
lods
fstpt
push
add
daa
clc
ret
clc
pop
jl
add
add
add
add
add
add
or
clc
sar
clc
add
xor
xchg
pop
ljmp
clc
adc
add
pop
repnz
and
add
add
in
mov
jmp
pop
push
add
push
pusha
add
fsubl
clc
addr16
add
add
add
out
jp
clc
std
insl
or
add
mov
sbb
ja
ret
pop
aas
mov
adc
jle
add
fs
mov
add
cmp
clc
insl
stos
xor
add
scas
lods
imul
ret
add
push
and
add
add
out
sbb
ljmp
add
mov
adc
add
add
lea
xor
mov
jo
add
lock
pusha
add
movsl
clc
xor
add
cmpsl
clc
movsb
clc
out
sub
sar
mov
loop
out
jnp
scas
jbe
add
test
sbb
lods
xor
add
add
add
or
add
aas
push
pop
push
clc
ficoml
add
xchg
mov
sbb
add
pushf
xchg
stc
pop
pop
xchg
out
cmpsl
clc
stc
in
jecxz
outsb
insb
pop
fbld
jp
sbb
xbegin
clc
sub
roll
add
cmp
add
or
aad
in
cmp
shlb
rorl
mov
clc
or
add
or
add
and
add
sub
data16
pop
clc
push
mov
xor
add
clc
mov
sti
frstor
add
cmp
mov
movsl
clc
je
out
fildl
cmp
clc
test
dec
inc
add
shlb
pop
jle
clc
shr
mov
or
addr16
das
imul
hlt
fimuls
je
clc
aam
mov
inc
clc
mov
or
clc
test
lret
xor
add
add
cmp
test
lods
cwtl
cmp
jl
test
inc
clc
or
sti
mov
testb
jns
xor
add
add
fcomps
or
es
std
pop
xchg
fwait
sbb
mov
clc
ret
mov
clc
xchg
cld
scas
sbb
jg
push
inc
add
insl
push
mov
add
sbb
clc
je
clc
lret
int
clc
or
or
cmp
je
clc
mov
inc
add
arpl
add
clc
fsubl
clc
adc
cld
es
lret
push
mov
imul
clc
pop
fwait
mov
add
adc
add
clc
pop
jp
das
mov
push
adc
add
sar
mov
push
and
add
mov
clc
xchg
sub
out
lret
clc
mov
sbb
inc
clc
test
sub
add
addr16
and
movsl
clc
cltd
js
leave
and
add
jbe
clc
enter
add
frstor
add
cli
out
adc
add
fcmovnu
xchg
es
test
shll
add
dec
inc
add
push
add
iret
sbb
clc
lret
xchg
xbegin
xchg
push
add
lock
pop
sbb
lods
not
pop
clc
sbb
insb
jns
iret
and
add
pop
mov
clc
and
leave
mov
add
add
cmp
add
mov
rclb
mov
popf
and
clc
aam
clc
dec
or
cmp
clc
xor
add
pop
dec
jne
clc
repnz
add
shl
clc
aad
add
push
rep
sti
arpl
add
repnz
idivl
pop
dec
mov
inc
add
inc
clc
mov
in
add
add
add
or
mov
js
pop
fsts
add
pop
jp
clc
mov
call
mov
push
add
mov
push
add
aam
loop
xor
add
repz
pushf
iret
out
aam
jmp
clc
push
add
adc
add
clc
push
cltd
lahf
es
xlat
dec
mov
xor
add
clc
or
dec
sbb
fdivrs
jbe
sar
imul
or
pop
mov
imul
stc
lret
xlat
adc
add
mov
jle
add
xchg
mov
sbb
pop
insb
xabort
clc
popf
int
in
seto
adc
push
inc
add
jp
jge
aam
test
sar
push
clc
sub
ja
cmp
sti
inc
add
gs
push
stc
cmp
mov
rclb
add
sbb
pop
pop
cmpsb
clc
in
sbb
clc
add
add
push
clc
or
add
jmp
lret
add
sti
fs
cmp
sub
mov
clc
hlt
gs
cmpsl
clc
clc
sbb
clc
in
sub
clc
dec
pop
inc
add
addr16
inc
add
hlt
and
mov
clc
jae
add
inc
clc
mov
clc
jmp
arpl
add
mov
and
add
imul
dec
in
xor
add
js
lret
aas
push
std
mov
add
and
fldt
add
inc
clc
fldenv
cmp
fcomps
lcall
clc
fs
sub
aas
lret
cmp
data16
negl
in
cmpsl
clc
mov
dec
push
clc
popf
sahf
jmp
cmpsl
clc
out
test
dec
push
mov
adc
add
add
popa
add
xchg
pop
stos
mov
clc
mov
inc
add
lahf
pop
sbb
clc
push
add
adc
add
in
gs
test
cmp
addr16
and
add
cmpsl
clc
imul
add
add
add
lcall
mov
and
add
add
or
cmp
clc
xchg
dec
sbb
mov
lret
leave
jle
push
mov
dec
aad
clc
sub
sbb
add
std
mov
clc
push
mov
add
jl
loope
inc
clc
mov
popf
xbegin
cmp
add
cmc
adc
add
jmp
push
clc
mov
pop
adc
xchg
outsb
add
add
mov
clc
cmp
cmp
add
dec
stc
dec
cwtl
adc
add
gs
arpl
add
add
mov
test
js
sar
clc
mov
in
and
add
clc
call
mov
push
xabort
clc
gs
jns
sub
mov
sti
lock
clc
cwtl
std
adc
pop
lret
enter
sar
repz
inc
clc
xchg
fwait
xchg
pop
push
cmp
loopne
popf
cmp
xchg
mov
pop
lret
xor
add
pop
ret
clc
cmp
dec
dec
repnz
out
in
push
lret
clc
loope
jns
clc
shll
add
add
add
mov
pop
xchg
aas
sahf
mov
addr16
cmp
sub
clc
adc
add
clc
scas
out
pop
clc
jp
cmp
daa
clc
cmp
mov
add
clc
jecxz
decb
lock
xlat
fcoms
add
add
xor
add
clc
cld
push
enter
mov
stc
push
aaa
imul
push
add
insl
frstor
jb
add
add
fsubrs
scas
sbb
add
xor
add
clc
push
add
fisubl
pop
clc
mov
add
fwait
xchg
xabort
mov
bound
add
or
dec
push
mov
push
sub
clc
test
cmp
clc
and
add
add
add
adc
add
fldt
sbb
add
out
inc
clc
sub
or
insb
jnp
dec
dec
inc
add
sub
add
add
rolb
mov
fcmovnu
insl
xabort
clc
cmpsl
clc
or
inc
add
lcall
jge
clc
arpl
add
add
clc
dec
add
out
test
cmp
or
sub
mov
sub
outsb
cmp
add
pop
hlt
adc
add
sbb
sbb
clc
sbb
mov
clc
xchg
mov
dec
fcoml
add
jg
ret
clc
lahf
test
call
jp
push
push
shlb
inc
add
in
mov
gs
sub
es
mov
mov
shlb
flds
popa
add
cmp
aaa
leave
mov
out
fwait
sbb
clc
pop
jmp
adc
clc
into
in
out
push
scas
inc
clc
and
add
jns
js
clc
xor
add
nop
mov
cltd
mov
clc
adc
add
cmp
pop
clc
nop
ret
clc
test
sar
fimull
call
cmp
clc
pop
push
loope
pop
dec
movsb
clc
jge
clc
aad
mov
add
add
loopne
ss
imul
out
inc
add
mov
add
add
sub
repnz
clc
or
sbb
clc
ja
mov
shrb
test
xchg
pop
cmp
mov
add
add
data16
cwtl
pop
leave
vrsqrtps
add
pop
sar
pop
cmp
clc
xchg
rorb
clc
push
add
xchg
stos
scas
inc
clc
and
mov
jno
add
add
mov
cmp
clc
dec
gs
bound
add
lock
sti
pop
mov
sub
pop
popa
add
enter
ret
add
cmp
mov
add
add
add
mov
mov
add
inc
add
sbb
in
sar
clc
jo
add
fldt
add
sub
clc
dec
cmp
cmp
xor
add
xchg
shrl
xchg
shrb
iret
dec
dec
ret
clc
or
push
add
aaa
sbb
add
dec
inc
add
sbb
mov
mov
add
mov
add
sub
clc
pushf
mov
dec
hlt
das
xchg
mul
clc
rolb
clc
repnz
and
add
movsl
clc
fcompl
clc
stc
pop
push
clc
into
test
imul
or
add
xlat
inc
clc
js
clc
leave
mov
mov
add
data16
in
cltd
dec
or
cmp
adc
add
xor
add
cmp
outsb
scas
fdivp
cmpsl
clc
add
add
clc
gs
cmp
clc
push
add
adc
clc
mov
fildll
pop
nop
jns
dec
jl
fs
outsl
out
aam
clc
or
clc
cmp
cmp
fbld
add
pop
clc
mov
clc
push
mov
jl
inc
clc
outsl
stos
aad
add
inc
clc
shlb
add
sbb
imul
div
adc
add
and
add
add
arpl
add
clc
gs
das
inc
add
sar
mov
add
pop
clc
cmp
mov
clc
xchg
inc
clc
jns
arpl
add
add
fsubl
add
clc
insb
repz
in
and
add
sub
clc
lock
fwait
or
das
xchg
leave
outsb
repnz
adc
add
cmp
clc
popa
add
gs
fisttps
pop
mov
clc
lcall
ret
lret
add
arpl
add
dec
cmpsb
clc
dec
clc
js
rclb
add
mov
outsb
lcall
inc
add
inc
add
jne
ja
loope
decl
dec
cmp
clc
sbb
clc
xchg
and
mov
leave
notb
mov
jmp
fs
and
add
lods
adc
add
xchg
cmpsb
clc
lahf
mov
mov
push
leave
lret
xchg
rolb
clc
jb
add
lcall
aaa
jle
and
add
clc
cmpsl
clc
data16
sbb
add
lods
and
add
add
mov
clc
cmp
add
imul
pop
inc
clc
pusha
add
push
aas
adc
add
fsubs
add
xor
add
out
fcompl
add
adc
add
xchg
movsl
clc
pop
dec
mov
mov
clc
bound
add
xor
add
add
clc
gs
cwtl
and
add
mov
sub
cmpsb
clc
aas
arpl
add
lea
add
daa
clc
jb
add
add
out
pop
jne
clc
fisubl
add
nop
gs
xor
add
gs
in
add
add
add
clc
jb
add
mov
mov
std
cld
stos
or
cmpsb
clc
insl
in
iret
xchg
hlt
insb
cmp
add
int
cmpsb
clc
mov
and
into
rclb
add
lcall
add
jns
push
add
je
cmp
add
pop
clc
nop
repz
add
jge
aad
cmp
loope
or
jmp
add
cmp
fwait
dec
cmp
mov
add
test
icebp
inc
clc
pushf
dec
pop
sub
setl
daa
clc
mov
fldcw
sbb
add
test
into
push
clc
aam
and
add
cwtl
mov
pop
cs
popa
add
xchg
fistpll
mov
and
add
cmp
add
call
test
jle
lea
cmp
aaa
fsubr
dec
mov
arpl
add
add
fdivs
jl
clc
fcomp
cmp
clc
sub
clc
mov
clc
xabort
clc
fcomip
mov
movsl
clc
mov
scas
mov
mov
clc
jns
jns
test
mov
mov
clc
push
add
fwait
add
add
stos
mov
fidivs
add
dec
push
adc
add
lcall
jno
add
into
outsl
pop
lea
add
stos
push
add
inc
clc
repnz
dec
out
or
enter
xabort
add
das
push
add
cmp
int3
shll
add
fs
stos
jb
add
inc
add
or
clc
shlb
clc
sub
xchg
sbb
mov
fs
push
loop
add
add
inc
clc
or
inc
add
jg
dec
fs
mov
addr16
xchg
jl
data16
fldt
test
mov
es
lret
leave
js
mov
adc
push
add
lahf
loop
fs
stc
cmpsl
clc
dec
jp
clc
add
popa
add
dec
sub
add
add
clc
mov
clc
cmp
outsb
int3
cmpsb
clc
pop
lret
mov
adc
add
add
xor
add
xchg
lea
clc
push
add
cmp
clc
add
add
popa
add
pop
clc
mov
clc
cmp
push
mov
in
mov
dec
repnz
adc
add
cmpsl
clc
mov
push
add
or
popf
and
add
lods
loope
adc
add
lahf
dec
int
sub
add
mov
bound
add
mov
cmp
add
push
add
pusha
add
sub
cmp
inc
clc
sub
mov
lahf
das
out
cmp
jmp
xor
inc
clc
inc
add
jo
add
jae
add
push
ss
fs
clc
addr16
lods
pushf
into
aas
jge
add
rorl
lea
fstpl
mov
dec
sbb
dec
sub
insb
jnp
mov
sub
clc
adc
clc
fs
dec
add
xor
cmp
add
xor
jmp
push
fucomip
xabort
sub
add
sub
jb
add
dec
push
pop
pop
jae
add
xor
clc
cmc
fistpll
add
pop
sbb
xchg
jnp
stos
dec
clc
popf
sub
popf
addr16
cwtl
mov
clc
dec
int3
dec
stos
loope
int3
popa
add
sub
jno
add
gs
adc
add
in
repnz
into
jp
jnp
or
add
add
cmp
pop
mov
imul
push
add
xchg
insl
popl
add
add
add
clc
mov
pop
push
cmp
jns
xchg
iret
cld
pop
and
add
clc
xabort
dec
mov
fldl
add
clc
imul
add
jmp
mov
dec
inc
add
lcall
in
and
add
ret
test
add
dec
pslld
clc
xor
clc
mov
clc
xchg
popf
adc
add
add
jl
shll
cltd
inc
clc
inc
clc
add
mov
je
outsl
dec
add
clc
mov
das
stos
or
add
data16
and
add
cmp
lock
dec
inc
add
ss
push
jmp
clc
clc
jns
add
stos
and
add
leave
arpl
add
mov
xchg
add
add
jmp
fisttps
add
xchg
cs
testb
add
arpl
add
add
push
sarb
rcrl
and
add
dec
test
inc
clc
decb
add
mov
and
daa
clc
stos
aas
pop
and
add
mov
jle
mov
dec
mov
sub
add
aas
inc
add
inc
add
pop
xor
cmp
add
out
loopne
in
addr16
mov
clc
cwtl
and
add
xor
pop
clc
fs
sarl
cmp
clc
cmpsl
clc
cmp
clc
xchg
xchg
push
pop
push
mov
clc
pop
jge
add
xor
outsb
aas
dec
push
hlt
pop
xor
add
icebp
nop
xchg
xchg
jbe
cmp
clc
lcall
sbb
clc
sbb
add
lcall
mov
repz
add
addr16
dec
xchg
int
add
js
mov
add
imul
ja
clc
mov
add
fbstp
add
cmp
enter
clc
outsl
jo
add
clc
repz
push
add
rep
ja
jb
add
ficompl
clc
pop
cmp
adc
dec
adc
add
insl
sub
jbe
bound
add
xchg
lods
push
add
ss
gs
add
pop
xchg
push
ret
adc
add
jb
add
jo
add
and
sti
lods
test
cld
test
clc
lods
frstor
clc
mov
clc
ds
add
rcll
ss
repnz
in
xor
add
add
movsb
clc
cmpsb
clc
addr16
scas
sarb
add
mov
push
add
clc
rcr
push
clc
mov
fwait
dec
or
addr16
sar
sar
inc
add
loop
jge
pop
comiss
clc
push
ret
clc
sbb
mov
clc
or
add
fsubrl
or
add
add
scas
lahf
pop
or
sub
sub
lret
cmp
clc
sub
add
add
add
clc
sbb
dec
cmp
clc
or
test
mov
xabort
push
clc
fdivrs
add
adc
add
mov
clc
jg
add
sbb
xchg
out
hlt
push
nop
arpl
add
sar
out
mov
add
mov
fdivrs
ds
mov
xchg
sar
add
add
clc
xchg
pushl
add
fsubl
clc
jno
add
mov
mov
add
add
in
mov
push
shrd
add
add
loope
int
cmp
das
mov
clc
push
and
icebp
inc
clc
sahf
adc
add
int
clc
add
add
mov
clc
roll
clc
test
ss
stos
mov
dec
adc
add
dec
pop
xchg
sbb
sub
add
adc
add
clc
sti
dec
jp
add
and
add
add
sbb
pop
dec
xchg
gs
xchg
lods
adc
add
pop
mov
sbb
pop
jge
or
add
ds
mov
or
add
push
clc
faddl
add
jns
add
lock
test
mov
ret
clc
cwtl
cmp
cmpsl
clc
push
push
clc
bound
add
cmp
add
call
add
add
add
and
add
jl
add
iret
jecxz
jbe
xor
add
add
ss
out
stc
pushf
adc
add
sbb
clc
cmp
pop
outsb
push
add
mov
clc
mov
sbb
xchg
and
add
cmp
add
sar
loopne
outsl
xor
add
add
add
imul
pop
inc
add
pop
and
or
mov
clc
cmp
aaa
xchg
mov
add
cmp
jge
aaa
in
push
jo
add
mov
mov
add
add
sti
lret
inc
clc
jl
sub
pop
fistpll
shlb
add
add
sar
add
aaa
jns
cmp
clc
pop
xor
add
and
add
push
int
xchg
fistl
clc
fadds
add
jecxz
push
jmp
inc
add
lea
xchg
arpl
add
sar
push
add
push
lcall
data16
mov
mov
mov
sub
add
add
add
dec
xor
add
dec
cmpsb
clc
xchg
ss
clc
sbb
add
clc
test
out
cmp
fimull
and
adc
push
add
mov
clc
xabort
add
add
add
nop
repz
mov
jmp
push
jnp
push
clc
add
add
dec
xbegin
inc
clc
push
mov
fs
xlat
jno
add
ja
mov
add
in
cltd
mov
mov
add
aas
stos
jb
add
add
scas
sahf
sub
jl
js
sbb
xchg
push
add
jl
aam
sbb
jbe
psllq
push
loop
icebp
xor
add
repz
mov
pop
add
add
push
std
repz
clc
cmc
mov
lahf
insl
and
add
clc
xor
jge
popa
add
in
dec
xchg
enter
add
shl
clc
dec
xchg
iret
and
add
popf
loope
fwait
in
mov
add
pop
outsl
inc
clc
pop
int3
mov
sub
lock
mov
pop
dec
gs
fcmovne
dec
cld
movsb
clc
or
mov
je
xchg
roll
add
fldl
add
xchg
jbe
add
pop
clc
adc
add
sahf
sahf
mov
and
add
in
enter
xchg
pop
in
pop
sbb
dec
lret
clc
jl
sbb
cli
int3
cmp
cmp
pop
dec
lret
fcmove
mov
clc
push
add
mov
add
add
movsl
clc
fidivrl
fwait
cmp
inc
add
sbb
push
add
into
mov
mov
popf
dec
ss
fimull
inc
clc
jne
std
and
add
clc
sar
clc
jns
fwait
sub
pop
mov
adc
add
push
sub
roll
add
mov
cmp
add
clc
mov
mov
stos
push
add
cmc
cli
or
popf
sub
mov
insb
out
scas
inc
add
xor
clc
cmp
stos
mov
enter
rcrl
jmp
or
xor
add
clc
push
add
aam
add
add
lahf
es
int
clc
and
add
clc
jmp
add
aam
clc
data16
cli
ljmp
jmp
clc
aam
es
sbb
inc
add
pop
mov
sbb
jle
clc
test
clc
pop
incb
xchg
fs
and
add
lret
push
clc
jae
add
test
and
add
xor
add
xor
clc
adc
add
inc
add
outsb
mov
repz
int3
mov
idivb
xchg
std
clc
icebp
int3
sbb
add
out
movsl
clc
cmp
clc
mov
or
jl
icebp
mov
sub
aad
xchg
mov
add
xor
add
mov
leave
dec
xor
into
scas
rcrl
hlt
mov
add
es
sahf
mov
mov
aad
clc
adc
add
clc
dec
sbb
adc
clc
aam
mov
clc
test
jbe
out
xabort
clc
jbe
movsb
clc
cmp
xchg
fstpl
repnz
xchg
cmp
and
add
push
mov
jmp
inc
clc
or
in
ds
cld
push
mov
add
das
fs
sar
clc
negl
mov
sub
insb
iret
dec
mov
add
outsl
xchg
test
add
dec
mov
or
xchg
push
clc
cmp
lret
addr16
test
fcmovnb
clc
and
jae
add
jns
and
xchg
stc
or
or
clc
jb
add
push
add
fldcw
sar
inc
clc
cli
bound
add
loop
adc
jmp
push
int
dec
xchg
test
and
add
stos
scas
clc
xchg
mov
sbb
pop
or
sar
inc
add
dec
mov
clc
iret
outsb
xbegin
in
popf
stos
adc
add
lret
gs
ja
pushf
push
lods
es
xor
add
dec
push
cmp
pop
stos
out
fwait
xchg
das
pop
cld
cmp
or
mov
repz
xabort
lret
cs
add
fnsave
add
fldl
xchg
xchg
std
xbegin
add
mov
clc
mov
sar
sub
add
sub
add
xor
add
clc
adc
add
push
ret
clc
fnsave
add
add
add
add
mov
clc
and
add
add
xchg
sub
add
sub
dec
cmp
add
jb
add
shll
mov
and
cmp
add
mov
add
jnp
add
and
mov
fwait
cmp
pop
daa
clc
sahf
nop
cmp
dec
mov
or
push
clc
sbb
add
sub
add
jp
xor
add
clc
sar
xchg
flds
mov
ret
clc
jg
or
sbb
xor
inc
add
fidivs
add
add
adc
add
clc
aad
jp
sub
fdivl
add
mov
aaa
push
add
adc
add
aaa
and
add
push
add
pop
in
es
sbb
clc
iret
call
adc
clc
enter
push
clc
cmp
clc
jecxz
popf
and
add
fdivrs
jo
add
clc
sub
add
scas
xchg
aad
add
pop
or
lret
fbstp
add
push
add
pusha
add
daa
clc
adc
mov
add
pop
sbb
add
xchg
inc
clc
sub
add
add
cmp
sub
mov
bound
add
add
xor
add
clc
jbe
popa
add
pop
sbb
clc
hlt
stos
and
jg
or
and
add
push
add
mov
dec
scas
mov
add
adc
imul
ret
clc
std
loope
inc
add
das
lea
add
jmp
cmp
fsubrs
mov
add
mov
mov
stc
movsb
clc
bound
add
cli
adc
add
xchg
cld
cmp
add
add
shll
add
pop
loopne
mov
or
cmp
pmulhw
mov
add
add
adc
add
sbb
add
ffree
clc
jno
add
xchg
xbegin
clc
stc
jae
add
pop
inc
clc
push
mov
clc
and
add
sahf
test
cwtl
cli
or
add
add
or
inc
clc
test
add
pop
cmp
pusha
add
mov
sbb
fstpl
dec
fwait
popf
in
vmovups
add
add
add
insl
xabort
sar
clc
hlt
xchg
add
add
clc
push
fmuls
add
mov
test
xor
add
pusha
add
xor
xchg
mov
add
pop
adc
add
xor
xor
add
add
mov
arpl
add
add
sarb
dec
cmp
add
xchg
clc
xchg
pop
out
cld
and
add
lock
clc
adc
mov
add
add
sub
in
test
add
clc
jmp
mov
addr16
loope
sbb
add
enter
xor
add
dec
inc
add
sti
jp
add
aas
sbb
cmp
add
add
add
xchg
mov
pop
sar
xor
add
cmp
add
xchg
je
add
add
or
or
add
mov
dec
jle
or
clc
push
pushf
pop
leave
cmp
inc
add
xchg
mov
push
add
cmpsb
clc
in
push
push
add
ret
clc
je
clc
cwtl
dec
xchg
sbb
add
add
mov
adc
add
lods
pop
inc
add
push
lods
mov
clc
mov
xor
mov
clc
jns
ljmp
add
icebp
xchg
inc
clc
mov
aaa
xchg
cmc
xor
add
add
rolb
pop
fisubrs
in
cmp
clc
clc
mov
aas
mov
add
decl
add
mov
clc
cmp
mov
ja
dec
mov
clc
pop
dec
jmp
stos
sbb
aaa
fidivrl
lret
add
add
adc
add
cmp
je
lods
int3
insb
jge
mov
cmp
nop
enter
push
add
sub
pop
inc
clc
cmp
sar
xchg
jbe
pop
xor
xlat
mov
sbb
add
out
dec
or
add
jmp
xor
add
jp
mov
cmp
inc
add
icebp
sti
dec
loop
div
inc
clc
fidivrl
xor
add
clc
add
bound
add
add
mov
clc
push
in
clc
test
add
add
cs
clc
jae
add
addr16
ret
popa
add
out
pop
out
ds
aad
cmp
mov
into
xor
add
push
clc
enter
clc
leave
popa
add
in
inc
add
jns
in
xor
add
mov
add
pop
inc
clc
dec
pop
int
jge
mov
clc
add
add
add
add
xchg
std
mov
mov
sub
and
add
mov
in
add
clc
jae
add
add
in
aas
sbb
add
out
xor
add
inc
add
std
lret
add
sub
sbb
clc
adc
add
push
add
add
push
int
pop
out
sub
add
mov
lcall
jne
add
add
icebp
hlt
push
add
add
cmp
sar
cmp
add
imul
fwait
mov
clc
xchg
mov
pop
lahf
sub
or
adc
add
cmp
ljmp
pop
sub
inc
add
push
add
push
test
lods
fbld
stos
xchg
movsb
clc
loopne
addr16
jbe
clc
jae
add
inc
add
or
add
pop
jns
dec
or
clc
xchg
std
add
add
clc
and
add
or
dec
mov
jmp
push
push
inc
add
dec
mov
clc
fisttpl
add
mov
clc
hlt
stos
enter
clc
imul
xor
add
inc
clc
xchg
xlat
pop
pop
inc
clc
movsl
clc
xor
add
lods
jo
add
into
or
popf
sub
clc
jb
add
add
sar
sub
cmp
insl
repz
cmp
inc
add
adc
test
push
add
iret
sub
clc
scas
sbb
fildll
movsl
clc
sar
and
add
push
lods
jl
and
add
fidivs
cmp
clc
lods
jmp
cmp
sbb
lret
add
dec
stos
xor
add
push
cmpsl
clc
cs
clc
jp
loope
or
jecxz
movsl
clc
push
div
repz
lods
mov
add
mov
xchg
add
add
push
add
into
movntps
xor
add
xchg
sbb
inc
add
xchg
or
clc
test
mov
cwtl
jg
test
sbb
loope
test
push
lea
push
out
nop
ja
add
sar
pop
clc
dec
xor
lods
xor
add
pop
fwait
mov
cmp
add
lret
push
add
pop
jns
pop
nop
adc
add
mov
push
xchg
fwait
bound
add
sahf
shll
ja
lock
clc
inc
add
mov
mov
ret
dec
dec
clc
fcompp
out
cmp
mov
sbb
add
int
test
add
add
rorb
cmp
xchg
test
sar
jne
xabort
add
pop
cmp
clc
push
sbb
enter
lahf
add
add
out
dec
jne
ss
in
sub
arpl
add
and
inc
clc
xchg
ds
sub
adc
add
xlat
fstps
fcmovu
stos
pop
mov
and
add
add
clc
aaa
clc
gs
jge
sahf
mov
outsl
cmpsb
clc
ret
clc
or
mov
and
add
add
adc
add
rcll
or
cmp
xchg
cmp
sub
sub
cmp
clc
bound
add
ljmp
and
inc
clc
sbb
sub
mov
cmp
lock
lcall
movsl
clc
cs
outsl
in
or
add
add
inc
clc
das
popa
add
pop
xor
jbe
lret
popf
and
add
clc
jp
clc
or
add
clc
clc
ret
clc
add
cs
jg
and
cld
addr16
sub
lret
add
add
test
push
sbb
xchg
popf
add
add
sbb
das
in
pop
sar
mov
movsl
clc
inc
add
add
add
add
clc
incb
add
inc
add
daa
clc
icebp
outsl
jecxz
push
push
add
imul
clc
lods
adc
add
and
add
gs
push
add
push
ja
clc
lret
inc
clc
stos
mov
add
xchg
xchg
sarb
push
bound
add
imul
add
imull
clc
jmp
xchg
shrl
add
inc
clc
lahf
cwtl
int3
dec
push
bound
add
add
add
lcall
push
add
jbe
push
aam
and
add
add
jp
jge
mov
clc
inc
clc
xchg
addr16
or
fwait
sub
dec
jle
fildl
add
clc
pop
dec
loop
sar
push
int3
test
clc
cld
rclb
outsb
out
call
test
pop
dec
push
cltd
mov
push
imul
jle
clc
jge
clc
mov
push
jge
clc
mov
inc
clc
or
add
xchg
mov
jno
add
bound
add
fcomps
clc
dec
cmpsl
clc
test
mov
add
add
add
clc
in
mov
lret
int3
push
call
clc
jns
mov
outsl
dec
jmp
add
push
cld
sbb
xchg
push
out
xor
add
add
add
cmp
adc
add
push
add
cltd
gs
fstp
mov
mov
add
jge
add
cld
push
clc
sar
cmp
clc
ja
or
add
mov
push
and
add
psubusb
add
in
dec
lahf
scas
sbb
mov
shl
in
push
add
and
add
mov
clc
sbb
xchg
jecxz
mov
lret
sbb
xor
enter
outsb
pop
clc
inc
clc
fildl
add
data16
xbegin
add
arpl
add
clc
test
mov
add
sti
icebp
add
add
dec
cmpsl
clc
cvtpi2ps
xor
dec
ds
add
dec
cmp
lods
sub
inc
add
push
mov
lods
lods
mov
cmc
add
push
add
add
enter
xor
add
add
add
cld
dec
std
lret
jecxz
pop
and
add
xchg
xor
add
loopne
cld
loopne
cmp
add
cmp
add
inc
add
add
add
clc
mov
loop
in
clc
and
add
ret
clc
test
dec
pop
cmp
clc
arpl
add
clc
push
ss
fisubs
mov
clc
push
mov
cmp
mov
imul
add
pusha
add
cld
jp
scas
loope
dec
jae
add
clc
mov
mov
add
js
mov
sti
xor
add
cpuid
clc
sti
xor
add
clc
je
clc
iret
aam
add
loop
sub
add
add
jmp
add
mov
sti
xor
fucompp
test
mulb
fwait
add
pop
jg
xchg
popf
jge
add
pop
push
xor
add
cmp
mov
push
adc
add
dec
and
add
es
fidivl
cmp
fisttps
jl
clc
enter
es
add
add
clc
adc
imul
push
add
add
fdivrs
clc
jae
add
mov
add
inc
clc
pop
sub
repz
idiv
cs
add
js
mov
mov
aaa
mov
xchg
and
add
out
bound
add
add
jo
add
lret
out
pop
fwait
xchg
sbb
add
scas
mov
add
ficomps
fsubrs
jo
add
add
add
or
jnp
in
mov
adc
add
inc
add
out
in
xchg
fsubrl
pop
data16
jns
sar
xchg
xchg
shrl
jg
pusha
add
or
mov
add
add
add
mov
pop
pop
in
add
add
add
inc
add
cmp
xor
add
int3
xchg
insl
push
add
in
mov
add
lahf
popf
aas
add
add
inc
add
in
sbb
ds
jmp
and
add
clc
sbb
ds
lcall
add
clc
sti
mov
cs
add
push
repz
int
in
and
add
pop
or
pop
cmp
jmp
clc
js
add
jno
add
mov
clc
and
add
clc
stos
add
add
mov
cmp
add
clc
clc
sbb
data16
mov
add
clc
jb
add
add
outsb
daa
clc
adc
add
and
add
aam
mov
mov
cli
xabort
clc
cmp
add
aam
clc
push
push
add
xor
add
adc
add
loope
inc
clc
dec
gs
movsl
clc
push
shl
std
push
push
dec
cmpsb
clc
outsl
ss
aaa
and
mov
es
sbb
mov
sar
and
add
adc
add
test
call
sar
add
add
lahf
int
add
xchg
jle
clc
inc
clc
and
add
sbb
add
jne
clc
shlb
pop
loopne
in
xor
add
and
add
js
xor
add
clc
dec
mov
add
push
cmp
loop
adc
add
add
clc
repz
into
sbb
jnp
add
pop
clc
xor
add
fcoms
jbe
jle
lods
jl
mov
lahf
xchg
pop
rep
jbe
and
add
in
imull
outsb
rclb
insb
test
mov
daa
clc
add
add
jmp
or
fmuls
jns
clc
mov
clc
mov
add
icebp
clc
repnz
add
test
clc
pop
jae
add
divb
add
stos
pop
sbb
add
add
fsts
clc
mov
pushf
xchg
mov
dec
add
dec
mov
sub
sar
cmp
jbe
clc
sbb
clc
arpl
add
add
bound
add
xor
add
daa
clc
cmp
add
clc
xchg
cld
mov
cld
add
add
pop
jle
stc
pop
ja
cmp
add
pushf
push
repz
bound
add
sbb
js
clc
sti
dec
dec
cmp
and
add
in
xchg
call
mov
sbb
mov
add
mov
ja
clc
and
cmp
add
add
out
mov
imul
clc
lcall
add
pop
jmp
test
pop
stos
stos
or
adc
add
sar
loop
mov
int3
sub
push
bound
add
dec
xabort
jmp
clc
imul
inc
add
bound
add
adc
add
add
add
push
test
cmp
in
push
add
jo
add
add
cmp
test
sub
clc
bound
add
add
cmp
sub
clc
push
or
xchg
jnp
mov
aaa
push
clc
movsl
clc
int3
cmp
add
and
add
xor
add
pushf
mov
bound
add
cmovp
sbb
mov
adc
add
add
mov
lret
jl
lret
inc
clc
cli
fsubl
add
add
icebp
lock
aad
clc
rcrb
clc
cli
insl
scas
dec
jnp
clc
cli
xchg
dec
lret
add
clc
jbe
ss
add
mov
add
jp
cltd
sar
cmp
clc
inc
clc
jb,pn
add
aad
insl
dec
imul
rolb
add
popa
add
inc
add
mov
push
adc
add
clc
push
add
add
push
and
add
clc
in
mov
add
mov
enter
add
ja
push
inc
clc
insl
dec
mov
lcall
gs
lahf
cmp
clc
lods
movsl
clc
scas
gs
out
ret
sbb
ret
clc
int
xabort
aam
mov
inc
add
fnstsw
int
clc
sahf
xbegin
dec
dec
testl
xchg
push
add
ret
clc
push
in
or
sub
ja
jp
loop
lcall
add
jbe
add
mov
clc
test
clc
jmp
pop
mov
ret
clc
xchg
into
mov
clc
mov
pop
adc
add
add
rcrl
movsl
clc
or
dec
scas
rep
fs
pop
loopne
clc
push
add
ret
clc
int
ss
jg
add
out
dec
mov
clc
or
fwait
enter
das
mov
add
pusha
add
lahf
arpl
add
clc
out
insb
xor
add
adc
add
imul
clc
xabort
clc
xchg
adc
add
clc
xlat
add
add
cmp
fsubr
dec
mov
pop
jg
pop
into
xchg
dec
fistl
or
rol
clc
and
add
mov
push
add
mov
out
xor
add
clc
mov
add
sub
add
clc
push
add
stc
cmp
dec
xor
add
clc
sbb
jo
add
jge
cwtl
add
out
mov
mull
jae
add
jp
sar
clc
mov
loop
insb
lret
enter
pusha
add
mov
or
add
sbb
clc
daa
clc
mov
jmp
add
aam
mov
add
insl
inc
add
out
fs
sar
hlt
mov
insb
stos
lods
and
add
int
clc
cmpsl
clc
or
fadd
clc
jecxz
testl
adc
add
xchg
push
clc
lea
ja
clc
ss
sub
cli
jnp
and
add
mov
add
clc
xor
add
mov
clc
sar
inc
clc
daa
clc
and
add
idivb
add
int3
lcall
aam
xor
add
pop
clc
cmp
sub
es
fistpll
add
sbb
add
jbe
add
ret
clc
movsb
clc
adc
rcrb
mov
add
test
clc
test
clc
clc
clc
and
add
add
add
mov
loopne
pop
clc
ja
in
scas
push
jno
add
pop
pop
cltd
xor
add
add
sub
sar
cld
test
loop
mov
dec
negb
pusha
add
push
jecxz
scas
and
add
add
rorb
add
stos
ror
lock
mov
inc
clc
das
mov
push
cltd
das
inc
clc
outsl
pop
je
pop
mov
push
pop
mov
jecxz
cmpsb
clc
and
add
scas
and
add
aas
lea
or
ffree
clc
popa
add
ss
push
adc
add
fidivrl
sbb
mov
dec
cltd
mov
mov
stos
add
add
add
cs
xlat
ss
fists
add
add
test
outsb
jp
fsubrl
push
cli
push
push
add
movsb
clc
jbe
sub
add
xchg
out
and
add
fists
add
inc
clc
lret
add
enter
sub
jg
push
and
add
mov
in
mov
mov
inc
clc
lret
data16
iret
or
sbb
add
pushf
fwait
sub
rcrl
clc
xor
add
clc
mov
pop
clc
inc
add
mov
icebp
lcall
sub
jge
rorb
aam
ret
stos
sub
popa
add
xchg
xor
add
clc
cmp
xchg
xbegin
inc
clc
cli
jae
add
or
jno
add
dec
add
add
add
bnd
add
jmp
push
lods
mov
cmp
clc
pop
xchg
add
add
cmp
add
sub
push
add
dec
lods
xchg
enter
sub
clc
xchg
repnz
add
cmp
clc
loop
mov
lock
clc
cmp
jle
or
jp
ret
add
mov
clc
pop
and
add
jge
fidivs
sar
mov
cmp
add
sub
mov
push
add
ljmp
shll
fsubrs
inc
add
loopne
inc
clc
pop
hlt
fstl
jg
jo
add
jns
add
mov
clc
clc
push
cmp
cltd
das
fdivrs
clc
sbb
hlt
popa
add
and
fidivrs
ds
jp
adc
sbb
jnp
add
or
nop
loop
sbb
add
mov
push
add
pop
push
add
or
ret
popf
scas
iret
push
or
js
pop
outsl
jecxz
call
add
icebp
xor
add
add
rorl
vminps
clc
jecxz
jb
add
lea
test
add
sub
add
or
add
cmp
clc
push
mov
out
and
xchg
in
dec
push
fmull
clc
lock
add
add
add
clc
lea
add
mov
cmp
add
push
jns
mov
cmp
clc
cmp
clc
jo
add
xor
add
pop
xchg
fxch
xbegin
dec
imul
shrl
adc
ja
add
or
push
cld
and
add
xchg
mov
ret
clc
fistpl
rcl
out
inc
clc
data16
outsb
and
clc
icebp
xchg
inc
add
xchg
clc
sar
outsb
push
and
add
cmp
dec
je
clc
aam
inc
clc
nop
cmpsb
clc
loop
ss
sub
add
mov
cmpsl
clc
hlt
roll
add
pop
clc
scas
jo
add
mov
add
sahf
cmp
add
or
shll
or
clc
and
add
aam
and
add
add
out
and
sub
repnz
add
mov
cmp
pop
clc
fmuls
dec
test
mov
jecxz
cli
mov
xor
add
dec
imul
add
clc
add
add
mov
jae
add
pop
scas
add
add
stc
sub
mov
cmpsl
clc
loopne
cmc
and
add
add
add
clc
cmp
sub
ret
clc
xchg
cmp
xabort
add
mov
mov
sti
sar
jmp
clc
xchg
leave
lcall
add
add
fs
mov
sub
mov
pop
xor
add
pop
test
xbegin
add
into
push
clc
add
add
push
add
xbegin
mov
cltd
sbb
dec
cmc
shlb
clc
mov
jecxz
cld
cs
mov
add
dec
lods
cmp
add
in
sub
add
ss
push
lods
jnp
call
mov
pop
adc
add
clc
push
mov
add
pop
xor
add
mov
add
sbb
add
clc
fwait
jp
add
cmp
mov
add
stos
mov
add
or
test
adc
std
xchg
cmpsb
clc
idivl
aas
test
add
or
cmc
or
add
mov
inc
clc
inc
add
xor
mov
xchg
jle
add
cs
data16
push
mov
aam
clc
ljmp
jne
rcr
sar
sahf
push
inc
add
scas
sub
int
clc
inc
add
ss
mov
sar
clc
pop
inc
clc
das
iret
out
stos
xor
add
insl
push
dec
das
aam
lret
add
add
clc
mov
add
inc
add
lods
or
add
jl
cmp
add
pop
sbb
add
add
cmpsb
clc
pop
lcall
nop
pop
clc
add
add
rcll
add
cmp
inc
clc
mov
adc
add
clc
clc
lcall
and
add
clc
mov
lret
adc
mov
and
add
clc
add
inc
clc
jnp
jne
stos
pusha
add
addr16
dec
mov
clc
test
push
imul
dec
lret
daa
clc
ret
clc
stos
cli
sti
pusha
add
sbb
add
pop
gs
mov
es
aam
pop
repnz
clc
popl
loope
or
scas
mov
test
pop
xchg
adc
add
nop
or
ret
mov
add
lcall
mov
out
dec
lret
sbb
mov
cld
loope
movsl
clc
pop
movsl
clc
push
add
inc
clc
aam
add
add
clc
pushf
inc
clc
in
pushf
pusha
add
add
repz
clc
lret
mov
cltd
lea
adc
cmpsl
clc
mov
mov
or
add
sar
jle
mulb
clc
mov
clc
sub
clc
and
lea
inc
add
sahf
or
scas
imul
cltd
cmp
mov
add
xchg
test
fcmovnbe
pop
push
rcrl
add
mov
mov
fidivrl
mov
xchg
push
in
push
dec
test
cmp
clc
das
mov
int
or
clc
shlb
add
pop
xor
add
ja
add
push
add
ss
xchg
mov
sub
jmp
sbb
mov
clc
add
insl
sbb
cmp
clc
jbe
mov
clc
fstp
imul
mov
clc
mov
add
push
add
fs
inc
add
scas
lret
sub
clc
inc
clc
adc
jno
add
add
ret
clc
mov
js
negb
loop
test
add
leave
jno
add
adc
add
dec
fadds
add
dec
mov
sub
pop
pop
je
add
mov
out
mov
add
push
mov
clc
dec
movsl
clc
jmp
add
bound
add
add
pop
sub
clc
gs
vdivps
in
icebp
fcomp
stc
push
add
xchg
test
cmp
add
add
sbb
jne
jae
add
inc
clc
push
add
inc
clc
cmp
push
clc
adc
add
scas
pop
push
out
inc
add
rcrb
aam
cmp
jne
add
jno
add
or
cwtl
push
add
cmc
aas
shlb
jae
add
clc
mov
add
add
pop
xabort
clc
sbb
cmp
add
lea
push
add
movsl
clc
dec
gs
gs
es
in
aad
clc
mov
ja
hlt
mov
push
add
lret
dec
stos
push
cli
fistl
jnp
jae
add
mul
clc
sub
sbb
push
add
xor
add
cmc
inc
add
movsb
clc
xabort
or
clc
sub
xor
add
sbb
inc
add
out
gs
xbegin
pop
testl
clc
add
add
je
xchg
fwait
enter
jae
add
clc
mov
clc
fldenv
add
out
shlb
push
mov
push
clc
sar
lods
jb
add
clc
push
out
xchg
mov
insl
jp
and
add
xor
add
clc
mov
clc
inc
clc
fwait
cmc
mov
popa
add
enter
repnz
add
shrl
dec
dec
and
cld
insl
stos
mov
lcall
clc
arpl
add
add
jns
jmp
clc
push
add
mov
clc
sbb
mov
loope
daa
clc
in
lcall
pop
mov
rorl
cmp
add
xchg
clc
mov
jnp
pop
pushf
bound
add
movsb
clc
imul
sub
add
xchg
or
lret
stos
das
sub
xchg
aaa
and
ja
lret
mov
lcall
add
add
push
lret
icebp
add
add
mov
add
clc
push
dec
and
sub
add
inc
clc
jge
aaa
sbb
mov
clc
push
add
movsb
clc
testl
add
sub
fs
xchg
loope
int
clc
out
pop
sub
push
clc
pop
jo
add
xchg
decb
adc
add
imul
sti
pop
push
sti
sahf
dec
ror
dec
cs
push
xor
dec
dec
insb
push
pop
mov
xor
add
fcoml
xchg
scas
push
add
clc
daa
clc
cli
dec
ds
dec
stc
aaa
adc
add
stos
outsb
adc
sbb
dec
push
clc
mov
ret
clc
pop
push
loopne
js
mov
mov
push
add
iret
lahf
cld
in
je
add
in
clc
xor
add
clc
stos
add
fs
aas
pop
mov
clc
ljmp
add
and
push
add
jp
jmp
push
std
cmp
lahf
lock
pop
xchg
fs
test
int
rcr
xchg
or
add
or
into
loope
pusha
add
shl
mov
sub
out
lock
add
dec
sub
xchg
cli
fsubrl
add
mov
clc
mov
rcrl
add
lret
push
test
test
clc
aam
add
adc
add
clc
hlt
sbb
add
enter
add
cli
imul
ret
clc
mov
out
repz
add
add
or
xchg
and
add
out
mov
loop
int3
and
add
dec
adc
rcrb
aaa
mov
lods
pop
mov
out
fidivs
call
jle
clc
mov
add
scas
fildl
add
sub
xlat
imul
push
mov
lods
push
clc
push
scas
pop
xor
sub
jne
add
jge
jle
add
out
adc
add
dec
dec
or
add
ret
test
mov
jp
xor
clc
xor
add
popf
mov
aam
add
add
in
shlb
hlt
and
fisttpll
stos
sub
clc
lret
dec
inc
add
or
add
add
add
or
add
sub
pop
movsl
clc
sub
clc
movsl
clc
ljmp
aas
icebp
jnp
add
pushf
add
add
push
add
or
mov
xchg
dec
cld
push
lret
fidivrs
add
jne
in
mov
xchg
xor
clc
lahf
and
add
fisubrs
inc
clc
int3
xchg
sbb
add
cmp
sar
leave
xor
add
add
lock
mov
cltd
pop
cmpsb
clc
cwtl
jg
clc
pop
pop
popf
dec
stos
lret
test
cmp
cltd
cmp
clc
test
push
add
sar
inc
clc
aas
movsl
clc
and
add
pop
outsl
invd
xchg
jle
add
pop
jnp
movsl
clc
sbb
mov
es
outsb
pop
jne
add
lcall
stc
sbb
clc
addr16
lods
std
gs
dec
or
fidivs
xchg
jl
clc
loope
test
std
icebp
or
lcall
ret
pextrw
cwtl
add
add
lcall
rcpps
add
push
push
mov
gs
push
stos
jne
clc
jno
add
rolb
je
inc
add
push
add
dec
iret
inc
add
outsb
jb
add
dec
jns
bound
add
clc
bound
add
mov
clc
iret
adc
add
popa
add
cmpsb
clc
mov
out
ficoms
add
xchg
imul
mov
inc
add
jo
add
addr16
mov
add
jae
add
addr16
xchg
mov
clc
ss
clc
sbb
xor
add
out
outsl
stos
lahf
mov
cltd
cwtl
dec
adc
add
loop
pop
leave
cltd
addr16
loop
ret
clc
add
test
xchg
mov
add
add
add
mov
xbegin
es
imul
add
cmc
push
jecxz
fxch
in
or
insl
add
add
idivl
mov
mov
pop
sub
popa
add
aas
xchg
sbb
lods
cmp
out
sub
bnd
add
clc
ja
add
imul
icebp
mov
rcrl
inc
clc
add
lret
movsl
clc
mov
jmp
jo
add
add
stos
push
add
dec
push
xchg
push
mov
clc
mov
clc
adc
add
or
mov
sbb
fcomp
in
jno
add
dec
mov
clc
ss
pushf
data16
pop
out
mov
es
push
movsb
clc
jne
add
in
test
clc
cmp
inc
add
pop
movsl
clc
xbegin
clc
push
clc
ret
xor
add
pop
inc
add
addr16
inc
clc
icebp
mov
stos
dec
aad
nop
stos
inc
add
scas
mov
sbb
lret
mov
add
je
clc
adc
jl
int
clc
and
add
inc
clc
shlb
divl
clc
mov
push
imul
cmp
dec
fs
cmp
add
add
add
sahf
jnp
clc
ljmp
loope
mulb
clc
push
push
add
cmpsl
clc
call
xchg
lods
or
scas
addr16
cmp
clc
cmc
iret
xchg
clc
call
add
arpl
add
loop
push
lret
ds
add
sub
clc
xor
clc
xchg
mov
mul
clc
pop
in
sti
lock
add
or
add
into
jg
or
ja
push
add
xor
add
clc
cmp
fildll
clc
xchg
sar
add
mov
cmp
clc
psadbw
cmp
push
cmp
add
or
add
mov
mov
sub
clc
aas
push
inc
clc
into
es
sub
lahf
push
sub
jecxz
xor
out
xor
push
pusha
add
stos
test
ret
clc
and
add
and
add
pop
iret
pop
mov
push
clc
cwtl
mov
push
xor
add
add
test
mov
shr
inc
add
incb
clc
in
and
sti
fs
sub
sbb
add
shl
in
loopne
sbb
clc
pop
out
mov
xchg
pop
jb
add
clc
fisttps
dec
pop
lret
xor
add
add
cli
add
add
cmp
test
xor
add
add
fs
repz
add
fistps
add
clc
cmp
add
dec
jecxz
fstps
adc
add
add
xchg
mov
add
jp
mov
test
push
or
negl
clc
push
add
out
xchg
movsb
clc
ja
and
add
arpl
add
iret
js
cwtl
fs
call
add
clc
mov
cmp
js
jnp
add
adc
imul
mov
jne
add
jbe
imul
mov
mov
clc
test
pusha
add
nop
mov
inc
clc
mov
jmp
js
add
dec
mov
test
push
add
sbb
jno
add
add
push
fisttps
popa
add
cmpsl
clc
cmp
clc
mov
out
addr16
movsl
clc
add
add
dec
adc
add
clc
push
or
test
pop
cs
add
clc
cmp
inc
clc
push
add
xlat
nop
xabort
dec
add
add
clc
dec
enter
clc
inc
add
into
mov
mov
xor
add
pop
movsl
clc
mov
mov
add
add
mov
mov
das
mov
sbb
clc
mov
push
add
add
outsb
add
clc
icebp
clc
add
add
scas
jnp
add
add
add
fdivrl
pop
fdiv
aas
lahf
rcrb
add
push
outsb
cmp
clc
mov
add
xor
add
add
add
add
ljmp
add
daa
clc
mov
mov
jecxz
jne
mov
xchg
cli
mov
add
add
add
inc
clc
add
add
xor
data16
mov
jp
xchg
mov
cltd
mov
pop
inc
clc
mov
add
flds
clc
xor
clc
fnstsw
nop
sub
sub
add
out
das
repz
add
adc
add
clc
sbb
mov
xchg
lods
out
jae
add
sahf
ss
sti
push
xor
add
add
push
sti
into
sbb
jge
push
inc
add
inc
clc
es
and
add
jns
push
and
pop
cmpsb
clc
jecxz
pop
repnz
int
cmp
arpl
add
imul
mov
cmpsb
clc
cmp
in
inc
clc
add
add
xor
add
loop
cmp
xchg
insl
xlat
scas
in
mov
movsb
clc
sbb
inc
clc
lcall
xor
adc
add
in
mov
add
dec
mov
mov
cmp
psubw
jb
add
inc
clc
gs
fnstenv
add
mov
shl
clc
mov
inc
add
adc
add
lahf
push
add
jmp
jecxz
inc
clc
push
clc
icebp
sub
clc
or
fcmovu
addr16
pop
fstps
clc
insl
jle
clc
cmp
xabort
adc
mov
clc
test
out
fs
push
and
add
icebp
and
ljmp
add
into
aam
add
sub
shlb
add
clc
out
sbb
mov
ja
clc
sub
in
jle
xchg
or
imul
gs
ja
clc
movsb
clc
mov
cmp
adc
add
clc
bound
add
clc
cltd
ja
cmp
pop
jg
mov
adc
add
std
sub
dec
sbb
jnp
adc
xchg
cmp
jg
clc
push
outsl
jecxz
aad
clc
jns
clc
outsl
lods
aas
mov
xchg
popf
sahf
std
fs
in
dec
out
fstl
add
arpl
add
xchg
xchg
xchg
cmp
xchg
fwait
out
cmp
scas
pusha
add
imul
das
push
clc
inc
clc
dec
jl
add
ss
jno
add
rcrl
pop
push
aam
sub
sub
add
out
sahf
xchg
sbb
cmp
and
add
push
add
leave
or
clc
call
ficoms
mov
push
xchg
pop
data16
mov
clc
sbb
into
ret
movsl
clc
iret
and
add
add
ret
add
xchg
jl
std
sar
add
jb
add
xchg
sbb
add
test
inc
add
pop
hlt
sub
push
int
inc
clc
pop
movsb
clc
mov
jbe
mov
add
cwtl
push
add
sub
mov
add
add
add
xchg
dec
push
jle
pop
insl
movsl
clc
cmp
aaa
or
clc
xor
add
hlt
dec
scas
cmp
imul
add
sar
mov
mov
clc
xlat
push
fldcw
cmp
add
pop
repnz
add
fidivrs
clc
jns
jl
add
popa
add
xabort
sub
mov
mov
adc
push
adc
xchg
pop
test
mov
jp
add
sbb
clc
pslld
add
mov
and
add
cmp
clc
push
add
mov
clc
or
add
stc
cmp
cmp
in
xor
add
outsl
jle
nop
or
clc
outsb
addr16
push
add
sbb
xchg
pushl
xchg
inc
add
leave
mov
imul
clc
push
mov
add
add
add
add
clc
cmp
clc
mov
cs
das
dec
sub
mov
test
in
dec
in
push
ds
addr16
fldl
push
cmp
sbb
clc
xor
add
add
xlat
clc
jl
and
mov
add
lret
daa
clc
xchg
xchg
neg
ljmp
sar
out
sbb
cmp
add
mov
xchg
fildl
clc
mov
clc
lret
je
clc
aad
clc
mov
clc
mov
sub
hlt
popa
add
jno
add
add
add
nop
push
add
popa
add
adc
add
or
push
inc
add
daa
clc
jnp
mov
jp
pop
push
data16
stc
mov
clc
rcrb
adc
add
add
test
and
add
push
sbb
sub
pop
and
add
clc
lock
clc
lahf
and
aad
stos
nop
inc
clc
mov
fsubrl
iret
push
lea
add
flds
clc
ret
clc
roll
dec
scas
popf
in
dec
cmp
popa
add
insb
push
movsb
clc
cltd
mov
clc
nop
and
add
clc
vcvtps2pd
add
test
inc
add
scas
pop
pushf
fiadds
xlat
cmpsb
clc
mov
add
add
jmp
clc
pop
sbb
mov
movsl
clc
xchg
lret
test
sar
loop,pt
dec
mov
clc
jb
add
bound
add
sbb
mov
mov
add
add
mov
add
pop
jl
jmp
clc
sub
cmpsl
clc
cli
imul
add
and
push
inc
add
insl
loope
mov
testl
push
push
add
sbb
repz
sahf
cmpsb
clc
out
push
loope
jnp
lret
scas
push
or
sbb
clc
cmp
pop
sub
in
dec
sar
and
add
clc
cmp
add
sub
in
call
add
icebp
ficoms
shlb
vrsqrtps
add
jge
loop
push
xor
add
out
mov
jne
lret
clc
loope
fildll
lea
xor
add
jnp
clc
insl
pop
int3
sbb
clc
sub
dec
fstpl
inc
add
out
sar
popf
inc
clc
js
clc
clc
push
clc
shrb
jl
jb
add
add
push
add
mov
clc
pop
push
add
and
add
clc
scas
pop
jnp
mov
movsb
clc
cmp
cmp
addr16
inc
add
or
add
lods
test
and
add
push
cmp
and
add
add
test
imul
pop
fildll
cmp
xbegin
and
add
pop
jns
add
jecxz
cs
test
add
clc
cmp
cmp
jo
add
clc
aaa
daa
clc
sub
add
jp
pop
pop
clc
jge
loopne
add
add
add
add
imul
dec
push
add
push
sahf
pop
push
add
iret
push
xchg
testb
arpl
add
cli
decl
pop
repz
cwtl
inc
add
inc
add
xor
add
add
inc
clc
or
add
mov
clc
clc
xchg
iret
and
add
add
push
clc
int
clc
testb
sub
mov
aad
jno
add
clc
pop
es
fcmovnb
clc
add
outsl
ret
clc
inc
add
outsb
nop
jno
add
mov
jnp
add
add
or
sub
clc
push
and
xlat
mov
push
out
dec
repz
in
data16
outsl
or
mov
add
clc
es
nop
mov
dec
add
add
dec
add
add
mov
clc
and
add
add
insl
outsb
cmp
clc
jp
add
push
add
loope
jbe
push
add
out
stos
mov
clc
dec
ror
and
add
out
mov
es
pop
mov
clc
lock
pusha
add
popa
add
add
add
clc
ret
clc
jo
add
add
das
popf
int
fstl
add
inc
clc
xchg
ss
loope
inc
add
lahf
sub
add
mov
and
add
clc
mov
in
mov
jmp
imul
clc
mov
add
add
push
add
jne
iret
std
xchg
stos
fdiv
dec
popa
add
pop
cmc
inc
clc
push
cmpsb
clc
into
stc
mov
clc
das
push
adc
mov
add
inc
add
pop
dec
out
or
inc
add
popf
das
jnp
popf
or
mov
imul
inc
add
repnz
imul
repz
jmp
mov
clc
dec
mov
or
stos
fidivrl
add
sub
add
xchg
into
push
mov
xor
add
mov
fcompl
push
clc
pop
inc
clc
insb
test
sub
clc
ret
clc
icebp
mov
clc
sbb
jp
add
xlat
lock
mov
push
add
clc
cmpsl
clc
test
mov
xchg
fistl
fstps
xabort
clc
push
das
or
setl
clc
jno
add
add
push
clc
hlt
push
iret
ret
xchg
pop
clc
xor
dec
aam
and
add
clc
or
add
sub
push
add
in
stos
xor
add
add
sub
add
dec
lret
clc
mov
jmp
add
repz
mov
add
icebp
xor
cltd
xchg
mov
or
add
xbegin
insl
or
add
dec
insb
cmp
fwait
cmpsl
clc
cwtl
clc
push
jb
add
push
add
push
clc
cmp
add
clc
lcall
scas
cltd
lock
bound
add
add
frstor
pop
push
pop
aaa
mov
lahf
xor
add
and
cmp
pusha
add
lea
cltd
mov
mov
pop
clc
cmp
sti
gs
xor
add
or
add
add
add
add
pop
sub
ret
xbegin
add
jge
add
sar
jge
mov
test
fidivrl
cli
popf
sbb
xchg
sar
in
loope
sbb
add
in
jmp
rorb
clc
inc
clc
lock
add
arpl
add
add
add
cmp
clc
xor
add
sbb
add
push
int3
paddb
pushf
fdivl
popf
repz
insl
js
movsb
clc
mov
addr16
ja
xbegin
mov
dec
mov
mov
clc
sbb
add
add
adc
add
add
jg
ret
jne
test
cmp
xchg
jge
mov
mov
clc
or
add
add
stc
dec
pushl
add
jbe
jbe
and
repnz
push
inc
add
adc
add
idiv
sbb
xor
add
adc
add
movsl
clc
rcll
clc
mov
clc
push
add
lcall
in
lret
test
clc
dec
ret
clc
lods
inc
clc
or
mov
cwtl
or
cmpsb
clc
add
add
add
lret
jg
clc
gs
push
dec
icebp
jns
loop
jp
outsl
dec
adc
clc
cmp
add
add
add
xchg
mov
rcl
and
adc
add
and
or
xchg
je
clc
pop
add
add
or
add
fistpl
mov
cmp
add
ja
jle
adc
add
lods
rcll
clc
add
add
add
imul
clc
das
stos
jecxz
dec
jb
add
clc
push
repz
clc
add
add
and
rsqrtps
add
jl
popa
add
mov
mov
xabort
mov
out
pop
sti
pushf
mov
clc
ja
cld
cmpsl
clc
dec
inc
clc
dec
mov
xchg
notl
add
in
movsl
clc
or
xlat
inc
clc
xabort
cmpsb
clc
mov
clc
mov
fistps
sarl
pop
push
push
inc
clc
xor
add
xchg
imul
add
xor
clc
iret
enter
lret
jae
add
fildl
popa
add
pop
sar
cs
add
push
sub
mov
mov
xbegin
add
mov
xor
add
add
adc
add
pop
clc
cmp
sbb
stos
push
sti
ss
enter
jnp
fldl
add
inc
add
shrb
adc
add
jmp
clc
outsb
dec
and
aam
int
aad
push
rclb
sub
add
add
nop
jns
sar
leave
rep
clc
cmp
and
enter
frstor
add
clc
mov
sbb
and
add
iret
cmp
dec
jnp
cli
sbb
testb
mov
outsb
enter
xchg
pop
clc
sub
daa
clc
push
clc
out
sub
clc
pop
xabort
clc
je
clc
js
add
sub
add
mov
jge
add
fdivr
ds
fucomp
rcrl
loop
add
xor
sub
out
fnstcw
add
sbb
dec
filds
clc
aad
xabort
clc
outsl
sub
pop
into
mov
pop
mov
clc
insb
cmp
xchg
mov
clc
fwait
lcall
add
jns
or
add
xchg
test
xchg
or
cltd
loop
adc
add
add
xor
push
add
mov
nop
lea
xor
add
add
dec
sub
push
push
add
es
pop
clc
stc
fwait
mov
test
lret
cmp
xlat
call
mov
cmp
imul
adc
add
insb
in
sahf
scas
mov
cwtl
cld
js
clc
adc
add
clc
push
mov
sbb
add
adc
add
clc
pusha
add
scas
xor
add
out
das
in
std
int3
inc
clc
pop
mov
leave
cmp
add
pop
mov
loopne
jmp
xchg
xor
add
insl
sar
clc
out
sub
mov
add
pop
dec
repnz
outsl
fs
insb
adc
add
add
test
leave
inc
clc
out
enter
out
enter
mov
add
daa
clc
mov
add
incb
clc
sbb
pop
neg
cmp
clc
std
pop
and
add
add
mov
mov
clc
cmp
scas
cmpsl
clc
mov
cmp
jae
add
sbb
push
add
add
add
loope
adc
add
add
cmpsl
clc
pop
sub
fcomps
clc
pusha
add
xor
add
jmp
jbe
add
adc
add
jae
add
add
add
clc
push
mov
adc
clc
out
bound
add
jae
add
fdivr
outsb
in
pop
inc
clc
jge
or
pop
sub
clc
jge
jns
insl
cltd
pushl
add
add
aas
aas
ja,pn
jnp
clc
testl
arpl
add
add
clc
dec
lock
scas
mov
add
cmp
add
mov
add
popl
add
push
leave
pop
xchg
xbegin
cmp
cmp
test
add
mov
popa
add
cmp
add
add
add
das
aam
repz
addr16
sbb
cmp
add
jb
add
clc
cmp
add
add
mov
test
dec
or
clc
inc
add
pushf
rcrb
pop
clc
loop
clc
inc
clc
push
mov
leave
cmp
inc
clc
hlt
lret
jl
mov
lahf
lods
and
add
loope
iret
jne
out
sub
clc
jge
add
inc
clc
iret
in
out
add
add
lock
push
add
xchg
shrl
stos
mov
clc
shl
clc
popa
add
add
sti
out
mov
lret
add
pop
cmp
clc
cmp
imul
cmpsl
clc
xor
add
cmpsl
clc
aaa
fisubrs
xchg
inc
clc
out
add
add
add
dec
and
add
mov
mov
and
add
clc
test
pop
mov
fisttpll
bound
add
aam
clc
repnz
clc
sub
mov
add
push
sub
add
lods
dec
outsl
and
add
clc
lods
xor
add
lods
inc
clc
daa
clc
in
rcll
add
lahf
or
sti
test
imul
clc
mov
clc
cwtl
mov
jb
add
push
add
xchg
cmp
push
add
aas
pop
iret
xor
add
jecxz
sar
dec
pop
push
out
sahf
mov
dec
pop
int3
add
add
mov
jmp
add
and
pop
or
or
clc
in
jbe
llwpcb
add
add
cli
or
mov
dec
out
mov
int
add
add
add
stos
adc
add
clc
and
add
add
mov
iret
xchg
push
add
ret
clc
lock
pop
mov
add
cltd
pusha
add
jp
clc
das
mov
fidivrs
xchg
inc
add
pusha
add
mov
gs
movsb
clc
cmp
stos
inc
clc
mov
add
out
ret
clc
jb
add
clc
xor
add
inc
clc
aam
xchg
dec
or
fcomps
jno
add
add
jno
add
clc
pop
gs
repz
mov
add
mov
mov
lods
push
lods
bound
add
clc
xlat
dec
jnp
clc
gs
xor
add
insl
adc
add
dec
addr16
insl
pop
push
mov
add
add
cmc
cmp
clc
lcall
and
loope
imul
shrl
or
clc
jg
clc
dec
and
add
add
pusha
add
aaa
sar
pop
sar
clc
pop
out
clc
js
clc
cmp
add
add
adc
add
add
add
fisttps
pop
cmp
add
mov
pushf
mov
lcall
cli
nop
xor
pop
mov
add
cmp
cmp
lahf
pop
pop
inc
clc
jl
dec
mov
mov
icebp
jnp
clc
push
enter
jo
add
clc
mov
or
and
add
rcrl
or
cmp
xor
add
out
inc
add
jl
add
add
add
scas
push
out
mov
sahf
add
mov
loopne
sar
xchg
fldt
clc
dec
or
jge
add
add
pop
xor
add
xor
mov
add
xchg
mov
clc
jecxz
mov
add
push
loope
test
ljmp
adc
add
sar
dec
imul
mov
add
add
shrl
clc
cmp
add
inc
clc
nop
je
cmp
cltd
inc
clc
sub
add
xlat
push
add
push
mov
cmp
adc
mov
test
xabort
mov
mov
pop
pop
mov
add
mov
add
jnp
push
lods
dec
mov
dec
pop
xabort
push
add
xchg
push
mov
add
add
clc
cld
mul
clc
dec
lret
jle
stos
xchg
arpl
add
es
sahf
cmp
clc
ljmp
add
adc
add
pop
je
clc
xor
add
push
movsb
clc
push
clc
mov
add
clc
sbb
cmp
push
test
xchg
sbb
add
add
mov
clc
xor
add
cld
sub
clc
pop
mov
adc
loopne
lcall
xchg
and
ljmp
cmp
inc
add
pop
insl
adc
cmp
push
out
js
clc
out
faddl
clc
hlt
outsl
ret
clc
in
pop
fucomip
adc
add
add
clc
jge
lret
gs
mov
cs
clc
or
pop
int3
fbld
add
pop
repz
or
clc
and
add
xor
add
pop
dec
test
pop
lock
add
add
xor
add
js
push
mov
ja
jae
add
add
idiv
adc
add
add
mov
cmp
bnd
sub
lods
test
add
mov
add
aam
clc
xchg
ret
clc
or
add
mov
pop
daa
clc
pop
lahf
dec
push
cmp
rcrl
xlat
mov
clc
xchg
ret
clc
jge
clc
push
clc
sub
add
dec
xabort
nop
and
add
add
mov
mov
mov
clc
jns
clc
push
add
mov
arpl
add
clc
jae
add
mov
cmpsb
clc
inc
add
out
add
add
add
inc
add
js
clc
sti
movsb
clc
xor
add
add
fisttpll
add
jno
add
test
clc
sbb
add
pmullw
and
add
dec
and
mov
fistps
add
inc
add
cmp
add
addr16
iret
push
cmp
outsb
sbb
outsl
and
jecxz
fadds
aaa
mov
in
mov
mov
int
xchg
pop
push
add
pop
clc
mov
sub
push
fcomps
leave
aaa
adc
inc
add
cmp
stos
aaa
push
add
or
lods
das
aad
add
mov
jmp
scas
jp
add
inc
add
dec
jg
clc
insb
outsb
xchg
cmp
cld
fprem
sti
jp
and
jae
add
pop
push
add
pop
clc
pop
icebp
and
add
insb
shrl
adc
jle
inc
add
xchg
inc
clc
vprotd
out
jae
add
jmp
ficompl
add
or
cmp
push
loope
xchg
or
dec
cmp
fsubr
ss
hlt
push
cmp
imul
push
push
add
jge
rcrb
outsb
lahf
cmp
out
cltd
cmp
add
sar
add
sub
clc
adc
add
clc
repnz
push
out
mov
mov
add
sar
push
mov
cmp
clc
loop
jbe
clc
xchg
and
clc
xor
add
mov
mov
jg
add
jo
add
add
add
clc
sbb
clc
cmp
cmp
sub
clc
and
adc
add
xor
add
add
sub
clc
xor
jmp
test
test
jb
add
add
sub
inc
clc
cltd
adc
clc
xor
clc
outsl
enter
add
xchg
add
add
add
mov
dec
push
mov
add
mov
push
repz
push
repz
enter
rolb
clc
cmpsl
clc
pop
add
add
loope
fdiv
jb
add
lea
add
mov
add
add
clc
pop
data16
cmp
or
adc
and
jmp
icebp
add
add
cmp
inc
add
mov
clc
mov
cs
clc
insl
mov
imull
mov
nop
mov
inc
clc
mov
mov
add
clc
push
pop
push
mov
movsl
clc
and
sub
roll
clc
mov
clc
adc
clc
nop
xor
add
add
pop
clc
std
mov
fucom
clc
or
pusha
add
lahf
das
dec
pop
mov
inc
add
cmpsb
clc
loopne
and
add
add
pusha
add
data16
or
add
add
sub
clc
ficompl
or
clc
lock
out
inc
clc
fldcw
xchg
int
add
decb
jbe
ja
and
add
add
shr
adc
add
clc
sbb
daa
clc
pop
mov
das
frstor
clc
mov
clc
inc
add
adc
add
adc
add
add
neg
sub
add
add
add
and
add
sti
inc
add
aaa
repnz
ret
add
push
mov
sti
jecxz
ds
and
je
add
mov
add
clc
xor
sbb
add
scas
cmp
jno
add
bound
add
xbegin
jbe
clc
pop
aas
stos
insl
int3
and
push
jnp
clc
daa
clc
dec
jbe
and
out
adc
add
sbb
add
mov
lcall
scas
mov
data16
jae
add
fisubl
add
add
sbb
clc
cli
cmpsb
clc
push
push
jb
add
mov
add
jbe
xchg
js
xchg
adc
pop
mov
dec
push
add
add
clc
mov
clc
jns
jne
xor
jp
push
add
cmpsl
clc
pop
xchg
cmpsl
clc
mov
add
add
add
clc
shlb
and
add
add
scas
inc
clc
push
clc
sub
inc
add
shlb
xor
clc
cld
ss
loop
jge
add
enter
adc
add
fnsave
add
add
cmp
paddusb
add
jle
outsb
mov
mov
aaa
divl
add
add
js
and
add
add
pusha
add
xchg
push
daa
clc
mov
scas
test
cmp
add
clc
adc
add
mov
add
xchg
xbegin
jbe
ret
clc
out
pop
xor
sbb
daa
clc
xchg
aaa
xor
add
aaa
xchg
sub
dec
add
add
mov
cmp
outsb
mov
sar
loopne
add
add
adc
in
sbb
ret
clc
sbb
clc
add
inc
clc
pop
xchg
pop
clc
xchg
or
add
add
xabort
adc
mov
add
add
add
lods
xchg
jnp
add
xchg
ss
fisttpl
int
or
bound
add
add
ficompl
add
add
add
call
mov
test
mov
clc
lahf
cli
xchg
fwait
sar
clc
mov
clc
jmp
clc
or
add
mov
js
add
arpl
add
lock
dec
mov
mov
add
jg
add
mov
loopne
sbb
add
sub
add
and
sahf
dec
pop
sbb
scas
call
in
or
sub
inc
add
add
add
add
push
add
sar
xor
add
adc
push
or
enter
aam
pop
push
clc
test
xchg
adc
add
clc
nop
cs
clc
test
add
xabort
cmp
cmpsb
clc
pop
js
add
xchg
sbb
clc
dec
adc
add
sub
jecxz
popa
add
jnp
add
cltd
add
clc
mov
add
and
add
clc
mov
mov
daa
clc
xor
add
add
stos
aam
test
mov
test
dec
sbb
clc
inc
add
ficoml
lret
add
adc
pop
dec
fstl
fwait
xor
add
rorl
sub
mov
cld
es
lret
jp
cmp
mov
mov
add
sbb
mov
add
shll
or
daa
clc
or
sbb
js
pop
sar
lret
xchg
mov
cmp
add
fcoml
add
add
add
in
nop
cmp
icebp
dec
xchg
ficompl
dec
clc
ret
scas
bound
add
xchg
xchg
lods
popa
add
and
add
add
add
clc
jbe
add
adc
cmp
push
xchg
jecxz
dec
scas
sbb
fs
jp
jbe
add
pusha
add
outsl
sub
clc
xor
push
add
or
xor
add
mov
clc
inc
add
ret
clc
nop
test
mov
xor
add
aad
cmp
mov
clc
push
clc
ret
sbb
add
sbb
cmp
mov
inc
add
jg
aam
lods
ret
clc
out
push
add
mov
add
addr16
push
cmp
clc
dec
mov
sbb
add
or
add
add
fistps
add
xchg
and
add
inc
add
sbb
add
dec
ds
jg
mov
mov
in
lret
and
add
dec
and
add
out
xor
add
lock
clc
cmpsl
clc
sub
add
xchg
jb
add
mov
mov
cmp
clc
jg
dec
or
add
gs
pop
shrl
cmp
cmpsb
clc
push
add
in
lock
mov
add
add
add
add
add
add
push
lahf
clc
insl
test
cmp
fisubl
clc
std
pop
clc
adc
add
clc
pop
cli
in
adc
add
clc
mov
jno
add
add
stos
sbb
fsts
add
cwtl
aam
clc
mov
mov
sub
insb
mov
clc
data16
nop
ja
lods
mov
jae
add
inc
clc
mov
or
clc
aaa
out
adc
add
or
fs
dec
add
add
hlt
inc
clc
pop
clc
jecxz
das
jo
add
arpl
add
xchg
and
add
xchg
sahf
frstor
xchg
movsb
clc
cmp
clc
jge
add
or
clc
mov
nopl
lock
xchg
pop
dec
pop
or
xchg
adc
add
jle
in
mov
clc
aam
clc
and
ds
popa
add
sub
sub
add
pop
fs
jae
add
clc
loop
jno
add
pop
cld
xbegin
leave
notl
add
mov
add
xchg
push
add
sub
cs
xchg
test
imul
jbe
mov
add
aas
add
add
mov
js
scas
stos
jle
xchg
insl
lods
push
sbb
sub
test
lock
mov
stos
mov
outsb
loope
jmp
stc
push
cld
jg
leave
cli
mov
pop
cmp
or
dec
xor
add
enter
pop
lret
jmp
std
jl
clc
jne
clc
push
add
pop
cli
jle
add
test
sub
fists
mov
or
mov
jle
xor
add
fidivrl
test
loopne
inc
clc
sbb
add
add
push
lret
or
add
add
insb
mov
rcrl
clc
xchg
jae
add
clc
jg
add
mov
sti
xlat
fildl
add
inc
add
and
add
cmc
fildl
xchg
push
add
or
sar
movsb
clc
movsb
clc
ja
inc
clc
jge
aaa
leave
sbb
repz
decl
aas
cld
arpl
add
cmpsl
clc
ds
mov
and
into
out
sarb
and
sbb
add
mov
nop
jns
test
in
or
add
push
sub
cmp
cmp
clc
ljmp
mov
adc
add
outsb
sub
add
add
add
cwtl
mov
clc
clc
icebp
xor
add
cmp
jbe
sub
add
xchg
jg
clc
in
in
sar
sbb
inc
clc
jmp
inc
clc
xabort
clc
jle
pop
movsl
clc
cmc
es
push
add
cwtl
mov
cs
clc
mov
cmpsl
clc
dec
es
mov
clc
cs
mov
sar
clc
addr16
je
sbb
add
add
xor
add
sahf
jae
add
add
adc
sti
rorl
xchg
lea
clc
scas
add
pop
xor
das
mov
mov
clc
repz
out
inc
clc
jmp
dec
pop
lods
and
add
add
push
and
add
mov
mov
mov
pop
hlt
das
mov
clc
mov
jg
jg
xchg
xchg
jae
add
inc
add
jnp
or
in
repnz
cwtl
ljmp
aas
or
pop
dec
in
fldt
add
jae
add
fwait
xchg
xchg
inc
add
sahf
jge
cs
js
add
add
add
insl
mov
dec
into
je
int3
jp
add
jmp
iret
push
clc
sub
lods
mov
add
stos
sub
add
fmul
lret
cmp
push
jno
add
push
add
shrb
dec
jle
add
das
and
add
pop
mov
adc
add
cld
and
add
clc
in
loopne
cwtl
dec
popa
add
stos
add
adc
add
pop
mov
push
clc
test
mov
nop
mov
lret
xor
clc
dec
loopne
xor
add
push
test
push
add
gs
xchg
bound
add
sub
add
add
ficompl
lods
push
clc
lret
xor
jge
clc
pop
clc
rorl
clc
add
add
loope
inc
add
loopne
jecxz
out
inc
add
inc
clc
mov
or
cmpsb
clc
jo,pt
add
cwtl
push
clc
adc
add
sub
insb
cwtl
and
add
add
mov
add
sar
add
or
cwtl
clc
pop
clc
cmp
add
cmp
add
add
dec
lods
aad
add
sbb
scas
mov
add
lret
jnp
clc
xlat
adc
add
push
repnz
sbb
icebp
adc
add
add
clc
mov
clc
push
add
cmpsl
clc
xor
add
clc
fildl
mov
xchg
jo
add
stos
mov
clc
mov
dec
int
push
add
and
add
clc
add
add
mov
test
jb
add
add
stos
scas
or
adc
mov
add
mov
mov
clc
arpl
add
dec
pop
pushf
xchg
adc
clc
adc
jg
pop
push
add
or
clc
inc
clc
jns
xor
clc
pop
push
clc
shl
clc
mov
repz
mov
sub
add
clc
mov
mov
leave
mov
rep
add
add
cmp
leave
aad
sub
sbb
cmp
mov
cmp
into
insb
fstp
sti
leave
pop
decl
xbegin
add
add
mov
dec
jnp
add
int
roll
add
pop
clc
push
add
movsl
clc
sub
in
into
test
int3
cli
cmpsb
clc
push
add
jecxz
sar
enter
loop
inc
add
xchg
mov
das
fstps
repnz
add
popa
add
xchg
xor
add
clc
pop
clc
dec
xchg
int
add
aaa
sub
cmp
clc
icebp
inc
clc
push
idivl
inc
clc
jle
adc
add
popf
jl
int
and
clc
cmp
clc
fisubrl
clc
arpl
add
mov
add
cmp
push
add
pop
xchg
or
arpl
add
cmp
xchg
movsb
clc
mov
loope
cmp
clc
push
clc
pop
cmp
add
cmp
das
cmp
mov
fbld
add
clc
fs
lods
test
jb
add
or
mov
cmpsb
clc
cmp
cmpsl
clc
sarl
loope
hlt
or
ja
enter
enter
cmp
add
mov
clc
jne
and
clc
sbb
push
sbb
sarb
rcl
mov
mov
mov
sub
adc
add
mov
jae
add
add
clc
mov
or
or
push
add
push
add
cwtl
xchg
leave
shl
clc
push
outsb
fidivs
mov
bound
add
push
add
enter
mov
add
stos
add
add
pop
mov
clc
rcrl
or
clc
stc
jns
lcall
fwait
in
lret
add
sub
add
clc
inc
add
adc
add
add
jecxz
jge
add
push
push
mov
or
scas
adc
add
add
dec
push
cwtl
mov
or
clc
xchg
add
add
clc
inc
clc
mov
add
mov
sub
add
clc
in
push
add
add
inc
add
add
iret
in
push
clc
lahf
test
inc
clc
aaa
adc
add
add
add
data16
in
inc
add
adc
lret
arpl
add
cmp
add
cmpsb
clc
sbb
add
push
dec
mov
push
sbb
imul
xchg
ja
clc
lahf
loope,pn
or
out
enter
cmp
clc
sub
jns
clc
int
clc
xchg
pop
clc
addr16
pop
bound
add
mov
clc
jns,pn
test
push
add
in
es
jnp
jle
sbb
mov
int3
mov
add
clc
gs
jne
clc
push
into
mov
clc
sub
add
sub
xchg
hlt
push
cwtl
divl
iret
mov
fsts
cmc
pop
cmp
stos
out
jb
add
test
mov
cli
mov
into
xchg
lods
add
add
clc
xchg
sbb
adc
dec
xor
add
clc
into
nop
add
add
scas
js
cwtl
je
add
add
in
pop
or
mov
test
lret
sbb
pop
fadds
sbb
mov
jmp
inc
add
bound
add
outsl
or
add
xchg
loope
cmpsb
clc
jae
add
icebp
sub
data16
xabort
clc
xchg
jns
popf
ss
cld
mov
pop
inc
add
or
xabort
add
pop
in
jmp
add
xabort
inc
add
or
or
push
add
gs
test
movsl
clc
or
add
add
add
clc
add
add
add
pop
push
fwait
xchg
mov
xchg
adc
add
into
cmpsb
clc
mov
push
data16
sub
mov
clc
add
mov
add
cmp
xor
add
sar
iret
iret
std
imul
inc
clc
in
out
aad
clc
and
add
add
clc
clc
cmp
push
add
xchg
cmp
add
add
mov
aad
mov
clc
push
in
cmp
jne
sar
dec
cmp
xor
clc
clc
mov
clc
or
push
inc
add
sub
jle
pop
adc
cmp
clc
cmp
inc
clc
rcrb
aas
dec
nop
cli
dec
adc
add
pop
icebp
adc
clc
sub
clc
test
mov
add
lock
xchg
mov
mov
xchg
mov
clc
sub
mov
mov
in
das
dec
or
clc
push
cli
repnz
pop
sbb
leave
cmp
add
add
add
clc
add
sbb
fcomps
jecxz
jg
add
mov
mov
add
push
clc
push
add
cmp
lcall
mov
xor
add
add
mov
push
add
lret
cmp
leave
fstps
in
rol
clc
incb
add
pushf
inc
add
mov
sahf
rorl
xchg
aaa
and
add
clc
into
imul
add
stos
cld
mov
or
jbe
clc
fs
add
xchg
repnz
adc
add
cli
mov
xchg
je
clc
test
push
cwtl
fcoms
add
dec
add
add
ret
enter
add
push
xchg
lock
add
sbb
add
stos
mov
outsb
push
cmp
clc
inc
add
pop
jae
add
clc
cltd
and
or
jmp
add
std
hlt
push
add
loop
xchg
mov
je
clc
int3
mov
fwait
cmc
adc
add
bound
add
shrl
or
stos
cmp
clc
jle
fldcw
sar
clc
in
push
inc
clc
or
add
dec
pop
stc
fadds
ficompl
and
add
repz
repz
in
lahf
ret
in
loope
cmp
clc
ss
add
test
test
adc
clc
add
std
xor
add
inc
clc
scas
or
mov
clc
stos
mov
lahf
sub
add
int
jnp
lahf
jae
add
add
clc
mov
sar
jnp
clc
gs
in
sub
add
mov
popa
add
xor
add
popa
add
add
add
mov
mov
adc
clc
sub
xlat
repz
add
loop
inc
add
jl
cli
out
add
add
add
test
test
add
xlat
pop
fmull
insl
icebp
push
add
cmp
into
mov
jp
stc
push
clc
inc
add
fadd
clc
out
cmp
pop
jl
jae
add
clc
push
pop
mov
adc
add
mov
add
xchg
cmp
add
inc
add
mov
cmp
clc
mov
shlb
or
test
clc
adc
add
add
adc
add
mov
in
lock
add
mov
arpl
add
clc
mov
push
add
in
clc
outsl
pop
dec
xor
add
add
data16
sub
mulb
std
sbb
push
inc
clc
sar
clc
push
in
fcoml
cmp
add
add
fcmovu
shrb
mov
add
in
pusha
add
out
mov
test
mov
or
add
mov
fs
out
jecxz
dec
lock
cmp
fmull
clc
sahf
inc
clc
adc
addr16
mov
fidivs
mov
call
scas
loop
in
jecxz
daa
clc
in
jecxz
cmp
jl
gs
inc
clc
inc
clc
add
add
out
pop
xor
add
add
mov
clc
mov
clc
cmp
fdivrl
xor
add
cltd
adc
add
outsl
xchg
lods
loope
push
xchg
cs
mov
or
jmp
clc
sar
pop
cltd
xor
add
mov
add
cmp
mov
and
add
sub
clc
test
xbegin
shll
add
clc
cli
xchg
adc
dec
inc
add
scas
push
test
mov
add
cmp
pop
sar
jecxz
test
add
cld
xor
mov
sar
sbb
cmp
aas
nop
ss
pop
cltd
pusha
add
xchg
sti
jb
add
xlat
inc
clc
lret
sub
add
stos
repnz
and
add
clc
aaa
ficoml
into
pop
roll
push
test
enter
cmp
sbb
int
test
push
push
jle
cltd
pop
push
add
jae
add
add
pop
in
cs
pop
ds
loope
arpl
add
mov
fadd
clc
xor
add
sahf
in
insl
push
nop
and
sar
clc
cmp
int3
pop
mov
push
stc
scas
sub
add
arpl
add
test
nop
mov
out
mov
adc
add
or
mov
int3
mov
mov
imul
in
call
cld
xabort
clc
pop
fcmovb
clc
mov
clc
bound
add
add
pop
cmp
adc
add
add
bound
add
fnsave
add
clc
xbegin
ljmp
add
fimull
lcall
add
pusha
add
lahf
fmul
mov
adc
add
jnp
clc
mov
mov
mov
fwait
and
add
clc
pop
lods
clc
lret
out
or
clc
mov
cmpsb
clc
and
add
rcl
lcall
fnsave
add
jge
pushf
movsl
clc
dec
stos
mov
add
sub
outsb
lret
sti
cmp
cltd
push
out
xchg
cli
in
mov
pop
cmpsb
clc
icebp
dec
push
and
add
clc
ret
pushf
jmp
clc
std
mov
repnz
add
jbe
inc
add
add
je
add
imul
jg
add
add
mov
dec
stos
cmp
xlat
jge
clc
cmp
pop
fisubl
add
rcrl
clc
int3
mov
daa
clc
out
add
add
sbb
inc
clc
bound
add
adc
add
add
pop
cmp
clc
dec
sub
adc
add
mov
dec
mov
push
into
cld
jnp
gs
sahf
sub
aam
clc
pop
adc
add
clc
cmp
add
push
add
int3
xor
loopne
jns
cmp
cmp
cld
dec
sbb
xor
add
xor
add
add
mov
add
xor
add
or
sbb
mov
lahf
repnz
clc
in
push
cmp
add
ja
cmc
push
in
rep
add
add
cmp
add
cmp
push
or
add
add
add
xor
add
inc
clc
std
push
loope
push
push
xchg
xchg
inc
add
or
test
cmpsb
clc
add
add
das
push
add
adc
add
clc
lret
cltd
adc
add
mov
cli
inc
add
mov
ljmp
movsb
clc
sbb
add
test
aam
into
mov
clc
movsb
clc
mov
and
add
inc
add
jl
pop
test
add
mov
inc
clc
push
and
add
add
test
pop
xor
xor
add
xor
add
add
std
into
mov
insb
test
fnstenv
xchg
stos
mov
add
daa
clc
cmp
popl
das
js
pop
dec
mov
int
clc
mov
fstpt
adc
add
clc
imul
xor
add
in
int3
add
add
lods
mov
adc
add
sub
mov
cld
mov
add
xchg
pop
repnz
jnp
push
add
shll
add
add
push
add
xor
add
cwtl
in
xor
pusha
add
ret
push
add
xlat
xchg
test
loop
outsb
ret
inc
add
test
mov
rcll
or
mov
clc
add
add
sahf
repz
add
push
divl
add
cli
dec
jb
add
push
add
lods
dec
mov
dec
gs
xor
add
inc
clc
push
in
fs
push
mov
or
test
std
dec
aas
data16
cmp
add
gs
mov
add
dec
loope
fcmove
repnz
jae
add
add
ret
lret
outsl
xchg
add
add
cmp
test
data16
int
clc
movsl
clc
inc
clc
outsb
ret
clc
cmpsl
clc
loope
mov
sar
int
clc
pop
movsl
clc
jb
add
add
add
push
clc
xlat
stos
add
add
add
int3
fwait
adc
clc
cs
clc
dec
pop
jg
sar
xlat
inc
add
mov
lods
lock
xabort
loopne
mov
clc
push
dec
xor
add
test
sub
add
out
sti
xchg
fnstsw
and
add
xchg
sar
jg
movsl
clc
es
mov
clc
int3
jne
add
mov
mov
and
add
add
add
add
mov
cs
push
push
lods
sub
add
xor
add
pop
inc
add
mov
clc
mov
sub
xor
add
dec
xchg
scas
movsl
clc
cmp
mov
fcmovne
push
add
std
repnz
mov
dec
cld
mov
clc
cmp
arpl
add
sub
clc
mov
clc
cmp
add
rcr
xor
add
add
pop
push
inc
clc
xbegin
add
movsl
clc
xlat
xchg
xchg
sub
clc
mov
mov
add
push
ljmp
and
add
das
cmp
aam
inc
add
mov
clc
add
add
outsl
ret
clc
adc
add
sar
adc
add
clc
sub
ds
not
clc
stos
sbb
clc
add
add
and
add
adc
add
add
jns
xchg
mov
scas
mov
sbb
and
add
add
fdivs
add
cmp
add
mov
jbe
push
fsubp
clc
cmp
push
loop
cltd
jg
clc
jne
add
es
fistl
add
clc
or
add
jnp
add
negb
cmp
add
sbb
pop
aaa
mov
add
add
aas
xchg
xchg
shlb
mov
movsl
clc
inc
add
xor
popf
cmp
fldpi
push
fmull
cmp
out
mov
mov
cmp
xchg
fidivrs
add
fsubrl
repz
outsl
mov
mov
dec
nop
cmp
add
addr16
rcll
add
add
clc
incb
mov
cmp
clc
pop
adc
add
sub
xor
clc
inc
clc
dec
fmul
jae
add
es
push
ret
test
inc
add
mov
lret
xchg
fstps
and
add
adc
add
das
mov
sbb
add
test
xor
push
into
lret
sbb
cmp
add
adc
add
test
mov
adc
add
xchg
inc
add
mov
clc
fcompl
or
push
xor
dec
outsb
xchg
or
sub
aam
xchg
int
clc
adc
add
and
add
icebp
dec
nop
mov
clc
xchg
movsl
clc
popl
add
mov
add
add
adc
add
clc
mov
sub
jns
fwait
inc
add
lret
clc
test
jo
add
add
mov
xchg
mov
clc
adc
inc
clc
add
add
add
repnz
cmp
xor
add
fldenv
add
add
add
lods
pop
xchg
aam
mov
outsl
or
add
lahf
ljmp
jae
add
clc
or
mov
ljmp
add
rcr
inc
add
mov
lods
cmpsb
clc
lods
jb
add
add
ss
adc
addr16
jge
push
mov
popa
add
adc
add
inc
clc
leave
cmc
cmp
inc
clc
sbb
xchg
dec
and
add
lods
loop
mov
clc
sub
jae
add
inc
add
test
pusha
add
lahf
test
or
imul
sbb
fsubs
shrl
clc
cmp
add
jmp
stc
aam
adc
add
add
cmp
mov
mov
add
clc
sub
xbegin
mov
in
imul
add
jns
clc
daa
clc
mov
sub
add
dec
xchg
mov
clc
cmc
mov
clc
cmp
clc
sub
or
aas
mov
nop
das
jmp
std
fs
loope
ss
cmc
add
add
clc
mov
add
adc
add
clc
adc
add
jle
push
sbb
mov
add
clc
scas
jmp
ja
int3
iret
fucomip
or
mov
add
add
imul
adc
inc
add
and
add
cmc
add
add
or
clc
dec
pop
cmpsl
clc
push
or
jno
add
sub
clc
popf
add
jnp
add
add
clc
jle
xchg
call
clc
cmp
insl
dec
cltd
mov
loop,pt
cmp
sbb
test
fldl
add
clc
mov
jno
add
cltd
push
add
pop
xchg
adc
add
js
enter
add
add
clc
js
clc
ljmp
clc
out
and
add
add
lahf
or
iret
fcompl
hlt
outsl
in
fidivs
add
jbe
movsl
clc
test
add
inc
clc
gs
mov
adc
add
mov
dec
mov
clc
fldt
daa
clc
in
aaa
cmpsl
clc
push
sub
xchg
pop
cwtl
push
cmp
xor
add
clc
xchg
pop
dec
add
add
cmp
inc
add
cmpsb
clc
test
dec
mov
imul
sar
fnstcw
push
add
aaa
cmp
push
adc
add
sar
clc
stc
ja
xchg
popf
jmp
clc
es
sbb
pop
cwtl
outsb
jg
mov
cmpsb
clc
inc
clc
cwtl
xchg
push
add
jp
cli
adc
add
push
add
data16
loopne
fnstcw
dec
outsl
cmp
add
inc
add
mov
ret
clc
and
add
clc
and
add
push
add
dec
sub
cli
add
add
jl
mov
clc
sar
xchg
sbb
xchg
and
sbb
lahf
nop
cmp
mov
or
dec
ljmp
jmp
clc
scas
scas
sub
add
call
movsl
clc
push
sbb
clc
push
clc
mov
mov
add
imul
movsb
clc
shlb
clc
call
add
inc
clc
sar
pop
mov
mov
add
ret
push
mov
clc
minps
mov
mov
mov
and
add
add
dec
xbegin
and
add
daa
clc
repz
mov
clc
and
or
jae
add
mov
out
in
out
mov
mov
sar
sar
push
add
xabort
pop
ss
sbb
push
mov
add
je
dec
lods
jecxz
cmpsl
clc
scas
inc
clc
daa
clc
mov
jae
add
loope
ljmp
in
or
mov
std
mov
pop
jae
add
and
pop
mov
clc
lods
and
add
jg
loopne
repnz
jbe
dec
fs
in
aas
js
cs
push
ds
mov
fcompl
icebp
push
add
fbstp
inc
add
adc
add
push
push
clc
scas
pop
clc
xchg
ss
movsl
clc
xor
add
cmp
add
dec
mov
daa
clc
inc
clc
push
clc
cmp
scas
push
clc
and
add
mov
cmp
sub
clc
sbb
add
add
and
lret
addr16
push
sbb
clc
cmc
xchg
mov
adc
add
add
clc
sub
clc
mov
imul
push
clc
mov
clc
nop
xchg
clc
decl
jp
inc
add
mov
pop
clc
mov
sub
sbb
movsb
clc
add
add
add
fwait
mov
add
enter
add
add
xor
add
sbb
push
clc
mov
enter
add
push
push
popf
jp
dec
cs
mov
lret
pop
push
cltd
clc
push
ja
cli
loopne
mov
xor
add
add
popa
add
push
jo
add
pop
cmp
std
mov
add
add
dec
je
fs
nop
mov
clc
xor
add
mov
clc
dec
or
add
sbb
add
mov
lods
testb
sub
lcall
clc
adc
add
js
adc
add
add
addr16
data16
rorb
add
cmp
stc
ud2
std
shll
add
push
fisubl
add
jle
clc
sti
testl
mov
ss
rcll
add
push
in
bound
add
push
xchg
cltd
jbe
add
mov
in
stos
or
in
outsl
adc
add
add
out
std
xchg
sti
aaa
jmp
clc
and
pop
sub
icebp
push
outsl
push
ja
clc
pop
or
inc
add
lcall
rcll
clc
xabort
lahf
or
sub
ds
push
add
leave
push
clc
popf
push
jb
add
fcoms
cmp
ret
clc
inc
clc
into
add
mov
add
pushf
es
xbegin
add
mov
aaa
push
fists
clc
pushf
jno
add
mov
push
push
aad
add
or
call
mov
clc
in
inc
clc
pop
clc
clc
in
add
add
fistps
adc
add
dec
test
adc
add
mov
cmp
inc
clc
inc
add
ss
clc
pmuludq
testl
sbb
add
add
dec
aas
into
sar
dec
addr16
xor
add
xor
add
push
xchg
push
add
pop
xchg
mov
clc
call
dec
push
std
je
clc
pop
repnz
xor
add
or
daa
clc
push
jnp
loopne
clc
jb
add
enter
add
sub
add
cmp
clc
clc
into
lret
clc
add
add
add
cmp
mov
lcall
push
add
in
xchg
cs
clc
inc
add
jns
add
cmp
add
xchg
xchg
sub
xchg
rolb
add
sbb
inc
clc
push
add
mov
out
jb
add
add
pop
sub
cmc
jbe
clc
or
mov
clc
dec
decl
add
add
and
clc
xchg
mov
clc
xchg
push
je
xor
add
push
mov
push
dec
pop
mov
clc
mov
sti
adc
add
pop
das
fidivs
add
push
incl
add
add
add
jbe
bound
add
add
push
and
add
and
add
ret
cmpsb
clc
push
add
jg
mov
es
mov
clc
insb
test
scas
add
add
adc
add
stos
imull
leave
mov
clc
xlat
sar
pusha
add
imul
lock
xchg
lret
clc
repnz
add
test
mov
push
clc
out
lods
and
add
add
sbb
clc
mov
cmp
out
xchg
jecxz
clc
repnz
mov
fsubr
ljmp
push
jge
in
aas
cld
mov
mulb
lret
mov
arpl
add
test
add
cmc
repz
clc
mov
aaa
jge
add
sbb
cmc
loopne
clc
xchg
icebp
jb
add
clc
cmp
clc
inc
add
data16
jb
add
clc
lock
add
add
adc
add
mov
cmp
shll
add
sbb
fisttpl
lcall
enter
inc
add
xchg
inc
add
mov
mov
add
xor
add
es
and
add
or
push
mov
add
add
add
lods
pop
jo
add
inc
add
add
jmp
clc
sbb
add
push
in
fsub
clc
cld
mov
add
pop
push
test
push
add
movsb
clc
pop
mov
or
cmp
inc
add
adc
add
push
lock
add
fmul
add
mov
clc
sbb
add
mov
add
clc
and
add
inc
add
sar
adc
add
mov
xchg
repz
clc
cwtl
lock
ljmp
clc
pop
aam
add
jo
add
add
mov
add
inc
add
cmp
sub
push
xchg
outsl
jae
add
int3
gs
rolb
and
add
repnz
clc
fcoml
add
push
dec
shll
pcmpgtd
xchg
mov
add
aaa
data16
addr16
push
sahf
mov
add
xchg
sbb
add
and
add
lret
notb
int
clc
mov
sbb
loope
cli
push
pop
fists
add
daa
clc
mov
clc
repz
add
ljmp
clc
aas
xlat
cmp
gs
sar
cli
loope
cmpsb
clc
jge,pn
clc
loope
gs
fwait
add
add
add
addr16
xlat
inc
add
cmc
mov
insl
stos
repnz
adc
clc
push
xchg
add
fwait
mov
add
and
add
add
pop
cld
push
jle
mov
add
cmp
mov
repnz
aaa
mov
mov
aaa
jns
clc
in
xchg
jle
mov
add
add
cltd
mov
add
repz
clc
ret
clc
sub
inc
add
pop
cmp
out
mov
movsb
clc
mov
mov
ss
clc
cmp
lret
mov
mov
clc
sbb
pop
mov
dec
xchg
jecxz
cmpsb
clc
shrl
test
outsb
push
mov
in
xabort
add
add
pop
call
enter
bound
add
lret
clc
jle
clc
out
cmp
fwait
fs
mov
clc
test
jmp
add
mov
xor
in
clc
popa
add
cmpsl
clc
xabort
stc
and
push
push
sub
push
add
cmp
clc
mov
ds
iret
sti
dec
mov
aad
add
pop
push
add
sbb
cmpsb
clc
adc
xor
xbegin
aas
xabort
add
jp
repz
ds
loop
int
clc
cmp
xchg
jbe
clc
inc
clc
aad
hlt
nop
sar
clc
jp
push
clc
inc
clc
loopne
inc
clc
jnp
ljmp
clc
ja
clc
or
mov
add
push
add
sahf
out
hlt
sbb
lock
mov
add
sub
add
clc
mov
jl
mov
movsb
clc
cmp
inc
clc
sar
clc
popl
mov
lahf
imul
cmp
xlat
dec
call
cmp
xchg
mov
mov
imul
add
sar
mov
or
add
push
pop
clc
and
add
lret
clc
or
adc
add
push
add
int3
imul
xor
add
add
push
sbb
sar
ljmp
clc
sub
clc
mov
mov
add
add
mov
addr16
outsb
mov
and
add
addr16
ss
nop
jne
xlat
enter
inc
clc
lret
sar
clc
imul
push
lahf
pusha
add
cmpsl
clc
popf
mov
add
or
xchg
pop
push
sbb
clc
xchg
xlat
rorb
and
add
test
int3
dec
dec
call
jle
adc
add
push
add
ljmp
enter
clc
sar
xchg
add
outsl
call
clc
popl
add
jo
add
clc
repz
add
pusha
add
jne
clc
cmp
sub
daa
clc
nop
sub
dec
cmp
out
push
and
add
mov
ficoms
popf
lock
sbb
clc
aam
add
jb
add
add
repz
loop
lret
add
jno
add
scas
mov
adc
add
fisubrl
clc
movsl
clc
add
add
adc
add
add
data16
xchg
sbb
out
and
mov
add
pusha
add
cmpsb
clc
das
adc
add
clc
fistps
push
add
cmp
in
cmpsb
clc
aam
clc
js
sbb
out
ja
cmp
data16
jecxz
sbb
add
sbb
or
add
es
aam
xchg
jmp
sub
clc
hlt
std
test
sbb
out
dec
sbb
cmp
clc
cmpsb
clc
jae
add
add
jl
ficompl
clc
cltd
stc
cmpsl
clc
xlat
nop
push
add
mov
cltd
iret
xchg
popa
add
mov
and
add
xlat
mov
pop
clc
sub
aad
dec
inc
add
add
add
add
xchg
in
mov
clc
lea
jns
repnz
lea
hlt
xor
add
jmp
xchg
pop
pmaxub
clc
pop
aad
clc
jmp
clc
inc
clc
inc
clc
data16
fs
xor
add
clc
lret
movsb
clc
ss
lock
adc
add
test
testb
clc
popa
add
bound
add
clc
push
sarl
inc
clc
mov
mov
xor
add
jne
lods
loope
mov
in
pop
aam
hlt
pop
call
jno
add
add
inc
clc
dec
xor
add
add
add
mov
push
add
imul
push
cmp
xlat
scas
stos
or
mov
clc
xchg
xchg
jne
add
inc
add
jp
lea
clc
shl
clc
out
mov
clc
mov
adc
add
inc
clc
inc
clc
cmp
mov
mov
aad
add
xlat
xchg
int
add
add
add
xabort
lahf
push
xor
add
add
mov
add
jge
push
cltd
and
add
clc
data16
daa
clc
push
add
sub
dec
add
add
add
mov
clc
call
clc
lret
mov
add
mov
add
fdivl
add
push
negl
clc
sub
lahf
dec
loopne
sub
sub
add
clc
add
add
add
repnz
es
mov
lods
or
enter
jp
clc
mov
add
xchg
mov
clc
sbb
bound
add
adc
add
push
dec
pop
sbb
hlt
popa
add
je
add
push
add
insb
sub
push
push
add
push
aam
dec
sbb
clc
clc
popa
add
jle
stc
pop
jne
fdivl
add
jnp
xlat
aad
clc
fcmovu
test
pop
mov
and
add
clc
adc
add
int3
mov
sbb
add
mov
add
cs
xchg
xor
inc
add
jnp
clc
cmp
clc
out
pop
cmc
insl
jge
xchg
popf
push
stos
and
add
insl
vdivps
xchg
loope
or
add
jl
sahf
repz
clc
stc
aaa
cli
and
fs
das
xchg
rcl
xchg
push
mov
mov
add
push
scas
gs
negl
push
add
daa
clc
xchg
inc
add
lods
add
xor
add
fldt
dec
stos
fiaddl
add
clc
lret
mov
add
add
pop
push
add
dec
sub
add
jle
shl
sub
mov
add
jno
add
icebp
fs
jo
add
add
inc
clc
lods
sbb
repz
into
sub
ja
add
icebp
sti
lods
push
inc
add
and
add
pop
pop
pop
mov
clc
sub
sub
sar
sub
arpl
add
cmp
push
clc
out
cld
push
push
add
xor
jge
add
xor
add
add
add
mov
aaa
jle
inc
clc
fstpt
jecxz
cmp
adc
ljmp
inc
add
stos
in
pop
clc
and
xbegin
and
add
inc
add
mov
clc
mov
add
sub
inc
clc
iret
xabort
clc
xlat
mov
leave
inc
add
or
xor
add
add
or
int3
push
or
clc
jae
add
clc
mov
shll
clc
outsl
insl
lcall
movsb
clc
push
clc
lea
jb
add
sar
or
sub
add
fwait
ljmp
clc
popa
add
in
mov
adc
add
clc
cmp
clc
add
clc
fcmove
mov
sub
clc
and
xabort
cmpsl
clc
dec
mov
push
clc
lock
lock
push
test
cld
lahf
pop
inc
add
adc
add
in
sub
add
adc
add
add
fistps
iret
add
add
clc
xchg
bound
add
dec
mov
outsb
gs
lret
xor
mov
adc
add
adc
add
imul
js
add
add
clc
std
sar
test
icebp
aaa
fldenv
push
mov
xor
add
jne
leave
daa
clc
negb
lret
xor
clc
push
jnp
add
test
mov
add
popa
add
mov
leave
ss
add
out
lahf
or
in
push
jmp
add
lahf
inc
clc
lret
scas
rdpmc
add
mov
enter
fisttpll
shlb
add
add
clc
test
test
clc
xor
add
add
out
sbb
gs
pop
clc
cmp
test
sbb
mov
adc
add
mov
mov
clc
arpl
add
clc
push
jp
dec
in
xor
clc
aaa
cmpsb
clc
mov
clc
loopne
stos
lods
lcall
clc
cmp
clc
icebp
sbb
sar
and
arpl
add
test
cmp
mov
inc
clc
sbb
push
sar
clc
jmp
iret
pop
push
add
int3
stos
pop
inc
add
lods
fnsave
jae
add
add
add
xchg
mov
adc
push
add
xchg
push
inc
clc
add
ja
sub
cmp
ljmp
sub
jns
adc
add
xlat
ss
add
clc
aas
int3
xchg
jo
add
sbb
add
push
add
popf
fisttpll
xor
daa
clc
or
add
mov
xchg
adc
add
fdivp
xchg
fistpll
jnp
imul
add
repnz
mov
pop
dec
out
xchg
dec
add
add
pop
lcall
push
add
js
mov
jle
sar
xor
add
jne
pop
clc
ret
add
jge
std
loope
pop
mov
mov
call
out
xchg
push
add
cltd
sbb
sbb
dec
xchg
loope
xchg
dec
fmuls
daa
clc
xor
add
clc
lcall
jae
add
clc
mov
test
add
add
xor
add
add
mov
clc
or
sub
insb
sbb
fisubrl
clc
jbe
pop
jae
add
sbb
clc
loope
or
loope
mov
pop
adc
lret
or
imul
clc
xchg
sub
mov
mov
inc
add
ja
clc
mov
xchg
sar
clc
int
nop
push
push
rcr
xor
add
add
xchg
fnsave
push
and
add
mov
arpl
add
jno
add
add
add
clc
stc
ds
cmp
out
mov
imul
add
popa
add
sub
inc
add
rcll
add
or
clc
clts
clc
sar
jle
mov
add
adc
add
clc
popf
sub
jne
add
fsubrp
or
clc
js
cmp
stos
and
add
sbb
mov
clc
sub
or
add
popf
or
and
add
jp
clc
inc
clc
ret
repz
add
enter
loopne
int3
movsl
clc
pop
jge
clc
ret
cmp
cmp
pop
clc
fstpl
enter
int
clc
xor
add
fdivl
add
outsl
mov
mov
int
add
mov
xabort
clc
insl
hlt
neg
ss
fsubr
out
cmp
outsb
out
int
adc
add
push
xlat
jno
add
mov
mov
jmp
cli
cwtl
push
ret
add
sbb
jmp
xchg
jl
fisttpll
xchg
cmpsb
clc
or
xor
add
add
mov
jle
out
mov
bound
add
add
outsb
pop
sbb
mov
sub
pushf
rcrl
test
fdivs
repz
iret
cmp
clc
outsb
cmp
sbb
enter
jecxz
unpckhps
or
insl
push
add
jo
add
clc
aam
inc
clc
scas
mov
push
mov
clc
rol
clc
aam
mov
aam
mov
clc
inc
clc
repz
test
sti
or
sar
clc
mov
add
fdivl
add
add
or
xor
add
fisubs
mov
xchg
mov
inc
clc
in
adc
add
clc
mov
outsb
jo
add
mov
cmp
add
xor
add
add
lock
add
movsl
clc
shlb
add
loop
pminsw
cmpsb
clc
add
push
clc
mov
add
add
mov
call
pop
data16
mov
sub
vpmadcsswd
clc
scas
xor
add
mov
dec
movsl
clc
ficomps
and
add
out
dec
aas
xor
jnp
clc
loop
jae
add
add
fnstcw
mov
inc
add
dec
or
clc
xor
add
clc
push
add
int
cmp
sbb
xbegin
add
add
xchg
jge
clc
daa
clc
jmp
add
and
add
clc
data16
ja
gs
int3
lock
or
ret
clc
pop
clc
std
jle
inc
clc
jp
fstp
popa
add
jmp
jmp
clc
lods
jae
add
arpl
add
loopne,pn
ret
clc
or
clc
arpl
add
shl
mov
insb
js
add
dec
xchg
xchg
data16
leave
xchg
lret
loopne
mov
clc
cli
mov
arpl
add
add
sub
pop
clc
xchg
push
add
or
cmp
xlat
es
and
add
fidivrl
cmpsl
clc
pop
dec
js
mov
push
add
inc
clc
mov
sar
clc
ljmp
sar
sbb
xlat
ja
sbb
pushf
adc
add
lods
cmp
pop
dec
lock
pop
daa
clc
jbe
push
clc
lea
pop
add
add
clc
lods
sar
add
pop
dec
arpl
add
add
cwtl
xbegin
pop
insl
fs
mov
cmp
cmp
inc
clc
dec
int
clc
imul
add
mov
sar
jo
add
cmpsl
clc
sar
xchg
mov
rcrl
add
jl
int
movsb
clc
lret
lcall
mov
cmp
mov
daa
clc
pop
push
dec
imul
jo
add
std
pop
adc
add
add
xchg
add
add
clc
fs
aas
sub
repz
add
pop
mov
clc
pop
or
add
and
cmp
test
jno
add
shll
test
das
or
add
ret
clc
jns
out
mov
mov
clc
nop
imul
add
popa
add
jnp
push
imulb
clc
aaa
scas
xchg
fadds
and
insl
imul
out
adc
add
jge
lods
lahf
adc
add
add
jno
add
dec
data16
sub
shlb
add
fdivl
add
fwait
mull
add
push
push
jne
inc
add
adc
add
add
add
js
clc
or
clc
mov
pop
inc
clc
sub
clc
mov
clc
dec
xchg
mov
int3
pop
pusha
add
sub
clc
lret
sub
add
test
xchg
jg
add
sbb
clc
adc
add
pop
xor
add
add
loopne
cmp
clc
cli
ss
mov
add
gs
mov
add
fnstsw
clc
pop
insb
stos
gs
sbb
loope
mov
clc
adc
clc
popa
add
cmp
sub
clc
stos
add
add
add
add
clc
test
sar
sbb
add
call
xabort
add
mov
clc
movsl
clc
jae
add
fldenv
add
clc
sti
add
dec
cmp
sar
clc
pop
pop
lods
mov
out
cmpsl
clc
sub
sub
cmp
jae
add
clc
xchg
je
or
add
test
lods
push
clc
stc
clc
mov
adc
add
clc
mov
sar
test
mov
add
clc
popa
add
mov
add
aas
test
clc
testl
inc
add
jg
clc
dec
and
add
lahf
or
clc
in
sub
fldl
ds
add
mov
leave
addr16
adc
jge
loopne
or
add
add
add
xor
clc
cld
daa
clc
decb
add
outsl
out
xchg
into
leave
lods
mov
fwait
cli
xchg
pop
test
clc
push
pushl
jb
add
add
add
pop
adc
add
add
fdivp
aam
test
add
gs
arpl
add
push
adc
add
add
jbe
add
xlat
xchg
adc
add
add
clc
je
jne
jecxz
mov
clc
or
mov
insb
je
clc
sub
movsb
clc
fwait
mov
clc
sbb
pop
imul
push
fnstsw
clc
fcoml
add
clc
fs
xor
add
fistpll
push
add
sub
outsl
test
or
add
out
lret
sahf
push
add
aas
insl
es
iret
scas
test
or
ljmp
add
mov
clc
lcall
sar
clc
jne
add
mov
pop
arpl
add
xchg
fcmovb
clc
sbb
loop
call
gs
and
jo
add
sbb
scas
stc
cli
sbb
add
jg
int
add
add
clc
mov
clc
in
sbb
add
and
add
push
add
pop
jno
add
jae
add
jl
cltd
push
cltd
icebp
lret
xor
repz
add
jmp
insb
mov
inc
clc
jge
cli
and
add
clc
repnz
repnz
xabort
clc
out
movsl
clc
test
out
cmp
mov
add
add
pop
incl
pop
in
pop
sarb
cmp
add
cmp
cmp
enter
pop
shll
aas
cmp
clc
or
add
xchg
pop
sub
imul
push
add
dec
jbe
mov
lcall
pop
xor
add
data16
add
add
fs
es
mov
lret
notb
add
mov
mov
dec
mov
outsl
fcmovbe
push
pop
mov
add
sub
add
push
aas
es
or
lahf
imul
add
add
xlat
or
add
ljmp
scas
fs
mov
repz
pop
dec
mov
inc
clc
sub
jle
sbb
add
dec
cli
pop
insl
inc
clc
add
add
out
movsb
clc
test
add
inc
add
js
dec
gs
ret
inc
add
fidivl
add
add
leave
ret
add
add
int3
xchg
sub
sahf
or
aad
xabort
add
add
pop
pop
mov
add
push
repz
add
js
clc
cmp
dec
popa
add
mov
add
mov
dec
dec
mov
or
add
pop
clc
xchg
stos
aad
mov
sar
mov
sar
outsl
mov
stos
das
xchg
push
add
add
std
jmp
xchg
cmp
xor
add
add
popa
add
clc
mov
xchg
sub
cmp
jmp
sbb
add
push
clc
fwait
lods
cmp
clc
mov
clc
mov
add
mov
add
add
sub
add
sub
or
xchg
sub
jmp
cmp
clc
aaa
aaa
jns
adc
cmp
aam
cmp
pop
call
clc
xor
add
add
and
add
add
add
push
add
and
add
pusha
add
fisttpl
add
pop
dec
cmp
inc
clc
add
add
in
shl
clc
cmp
pusha
add
insl
xchg
imul
add
stos
bt
mov
insb
cwtl
push
fsub
clc
xchg
cmpsl
clc
add
jp
inc
add
data16
das
loope
out
xchg
pop
inc
clc
inc
add
in
jnp
insl
pop
dec
and
sbb
add
dec
mov
pop
mov
inc
clc
cld
push
add
jnp
lock
int
mov
aad
adc
add
jno
add
push
movsb
clc
mov
clc
dec
pushf
sub
clc
adc
jns
clc
sti
int3
xchg
fs
and
add
add
dec
fistl
xchg
gs
push
add
data16
dec
test
push
icebp
iret
mov
ds
clc
xchg
movsl
clc
jmp
mov
inc
add
lret
and
iret
movsl
clc
lcall
add
dec
dec
xlat
loop
push
add
inc
clc
test
or
mov
add
inc
clc
dec
sbb
stos
lcall
jo
add
sbb
add
add
add
add
add
clc
aam
add
add
mov
xchg
lcall
add
out
push
dec
push
add
lret
mov
add
fcoml
push
clc
ja
addr16
xchg
bnd
pop
adc
loop
mov
sar
cs
xchg
shl
clc
sti
pushf
cmp
sub
ret
clc
ds
sbb
cmp
lods
mov
clc
push
pop
popa
add
cmpsl
clc
cmp
add
js
add
mov
mul
clc
or
add
fldz
sub
enter
clc
pop
fcoml
mov
add
pop
and
add
jle
stos
cmp
clc
mov
testl
clc
sarb
hlt
ret
add
fucomi
push
add
scas
repz
clc
push
ss
hlt
imul
daa
clc
cmpsb
clc
je
test
data16
or
add
in
gs
mov
clc
loop
pop
xbegin
add
clc
jle
ss
adc
add
sbb
adc
add
nop
jbe
clc
inc
clc
jnp
or
push
add
jmp
in
cltd
jge
stos
addr16
mov
clc
iret
cwtl
or
clc
adc
add
clc
and
add
xchg
clc
push
add
outsl
push
add
adc
add
push
inc
add
push
sub
clc
xchg
pop
sub
clc
leave
shlb
add
data16
fldt
pop
movsb
clc
or
pop
pop
jns
clc
cmp
lock
mov
xchg
cmp
add
clc
dec
jmp
clc
push
ret
clc
mov
scas
repz
add
xchg
push
add
and
add
clc
add
add
push
add
stos
inc
clc
jbe
sbb
add
in
inc
clc
sar
clc
xchg
jo
add
add
cmc
movsb
clc
cmpsl
clc
test
pop
jns
add
lret
inc
add
cmp
clc
std
jecxz
mov
call
clc
jge
lea
add
xchg
in
cmp
push
clc
repnz
clc
push
xlat
outsl
in
pop
and
lods
cmp
xchg
fbld
jmp
clc
call
fistl
add
mov
scas
flds
clc
jecxz
jle
clc
cmc
cmp
sbb
clc
out
aas
push
add
arpl
add
lea
push
clc
stos
push
cmpsl
clc
xlat
pop
xchg
aas
xchg
rcr
push
add
add
and
add
jno
add
inc
add
into
mov
adc
add
sbb
fs
sarl
clc
lret
mov
xor
repnz
ljmp
clc
xchg
jnp
cmp
sbb
mov
sbb
add
ds
jmp
clc
out
ljmp
cmpsl
clc
shl
clc
mov
clc
cmpsb
clc
jns
clc
in
adc
add
add
ret
cmp
mov
idiv
pop
mov
add
sub
add
cmp
sahf
and
add
pop
stc
cwtl
xor
add
cld
cwtl
fsts
imul
add
adc
add
clc
paddusw
add
lret
add
cmp
mov
lods
add
push
int
sub
es
jg
clc
mov
cmp
jne
pop
inc
clc
out
scas
loop
aaa
aam
add
call
lret
daa
clc
ret
clc
or
add
movsl
clc
mov
data16
xbegin
xor
xchg
xchg
mov
xabort
inc
clc
pop
cli
or
clc
mov
xchg
pop
fsubr
dec
xchg
lret
in
mov
xor
add
clc
xor
add
xchg
fidivl
inc
add
xor
add
push
add
dec
lods
popa
add
push
leave
sar
push
add
clc
fisttpl
icebp
mov
add
mov
clc
or
sar
clc
mov
cmp
clc
jmp
jmp
sbb
add
flds
xor
leave
add
add
inc
clc
repz
sar
nop
lret
stos
jp
inc
add
jae
add
clc
pop
mov
into
loopne
jle
add
loope
inc
add
movsb
clc
iret
pop
movsb
clc
cltd
mov
js
clc
sarl
mov
clc
inc
clc
imul
push
out
xor
clc
loopne
inc
add
jecxz
fistpl
clc
movsl
clc
inc
add
out
pop
cwtl
int3
push
clc
jns
push
clc
mov
add
xabort
jp
cmp
add
outsb
pusha
add
and
add
add
inc
add
or
clc
add
add
sbb
shrl
mov
cmp
cmc
test
iret
cmp
add
icebp
adc
clc
adc
add
clc
das
mov
clc
sti
ret
clc
cmp
clc
lock
and
add
sbb
add
pop
dec
mov
fisttpll
push
jne
clc
push
or
push
xbegin
pop
cmp
clc
movsb
clc
push
aad
or
add
and
mov
add
fstpl
in
pop
movsb
clc
push
iret
aam
mov
imul
clc
mov
clc
call
jl
clc
cmp
add
clc
pop
ds
loopne
or
add
cmp
test
dec
mov
clc
aas
pushf
cmp
clc
mov
clc
adc
add
mov
or
std
fwait
or
lahf
or
pop
out
or
add
add
fmuls
mov
mov
clc
lods
notb
cmp
clc
cmpsb
clc
jo
add
imul
add
clc
fucomip
push
lret
push
hlt
std
ret
insl
decl
je
add
add
stos
mov
push
add
nop
sub
add
idivl
cltd
inc
add
jecxz
xchg
dec
or
cmp
mov
aam
push
add
scas
mov
add
add
mov
clc
cmp
lret
ret
clc
aas
scas
mov
inc
clc
jle
jo
add
add
je
dec
and
add
clc
cmp
repnz
mov
add
push
xor
add
pop
mul
clc
into
mov
push
jmp
clc
movsl
clc
repnz
xor
add
cmp
imul
add
add
in
cmp
clc
mov
sub
popa
add
push
add
clc
push
add
fmuls
add
or
out
test
je
fimuls
clc
stos
jnp
add
xor
add
clc
or
clc
push
xchg
adc
add
push
xchg
add
add
add
xor
inc
add
or
clc
data16
bndstx
mov
clc
sbb
cmpsb
clc
jne
outsl
pop
cmp
into
sub
dec
add
add
shlb
add
sar
clc
lea
add
int3
icebp
mov
add
add
add
add
flds
add
add
add
add
or
stos
call
dec
enter
cmp
dec
cmp
clc
clc
dec
pop
sbb
add
pop
adc
add
add
add
add
clc
stc
jno
add
clc
ret
clc
jne
xor
int
jl
das
adc
add
stos
mov
jl
lahf
notl
add
mov
out
imulb
pop
adc
add
mov
inc
add
imul
add
clc
pusha
add
sub
clc
jmp
clc
shrl
add
mov
enter
rcrl
clc
xor
add
add
xchg
xor
test
dec
outsb
jecxz
cmp
jg
add
es
cmp
call
and
add
pop
or
clc
incb
stos
mov
clc
sbb
xchg
inc
clc
push
push
add
fstpt
xor
add
xchg
repnz
clc
xchg
sub
clc
sbb
je
clc
push
add
lcall
or
popa
add
notl
add
add
mov
add
imul
sub
adc
sub
add
out
jg
rcrb
clc
fwait
cmp
clc
and
mov
mov
mov
into
jb
stos
mov
clc
inc
clc
out
sub
add
dec
inc
clc
sub
lahf
insl
test
dec
cmc
pop
scas
add
add
xchg
mov
jb
add
add
mov
mov
or
add
rcll
outsl
mov
add
add
xor
add
pop
cli
decb
rcrl
mov
mov
rdseed
movsl
clc
mov
dec
sub
icebp
test
clc
outsb
ljmp
add
add
cmp
repz
cmp
xor
add
clc
movsl
clc
nop
or
lods
stc
and
pushf
fs
mov
xchg
dec
mov
clc
jns
mov
add
mov
add
clc
fisubrs
add
pushf
fwait
push
add
clc
lods
mov
in
cmp
xor
add
call
enter
ds
outsl
enter
add
fsubrl
add
jne
out
sbb
icebp
fidivl
xchg
sub
js
add
inc
add
inc
add
hlt
pop
inc
clc
lret
mov
clc
out
jae
add
leave
pop
pushf
xchg
fs
inc
clc
fwait
pop
inc
clc
bound
add
xchg
dec
adc
add
out
dec
in
cmp
xchg
dec
stc
enter
or
inc
add
test
imul
fwait
nop
in
por
addr16
add
jg
clc
add
cmp
push
add
daa
clc
ja
add
or
mov
inc
add
jg
cmp
test
jnp
dec
fcmovu
jbe
add
and
add
xchg
daa
clc
jmp
data16
adc
add
inc
add
cmp
clc
pop
mov
add
cmp
add
mov
dec
add
es
adc
add
clc
sbb
add
mov
adc
inc
clc
out
or
lock
push
add
jecxz
xchg
inc
clc
aad
push
push
add
push
add
add
add
sub
clc
xor
add
decl
clc
mov
fcoml
xor
add
sbb
mov
add
xor
add
add
into
inc
add
mov
pop
xlat
mov
jg
clc
arpl
add
clc
lahf
cmp
scas
pop
sbb
and
add
add
add
and
add
add
jnp
add
das
lcall
call
adc
add
adc
add
fs
or
inc
add
decl
add
add
push
add
jae
add
clc
dec
and
roll
clc
adc
add
clc
test
cmp
cmp
cmp
clc
sti
dec
cmp
add
sbb
pusha
add
mov
clc
ror
push
add
aaa
pop
xor
clc
mov
leave
push
clc
cmp
imul
filds
add
jo
add
je
cmp
xchg
sub
loop
xchg
pop
and
cmp
data16
int3
pop
cs
out
dec
dec
push
add
mov
sub
push
jecxz
out
cmp
add
add
clc
lea
rolb
pop
cmpsl
clc
cmpsb
clc
out
mov
aas
cmp
daa
clc
pop
js
xchg
or
push
cmp
es
repz
clc
sbb
cmp
clc
sbb
cmp
clc
push
add
add
mov
pop
fnstcw
in
stos
rorb
clc
loopne
mov
lods
repnz
clc
cmpsb
clc
popf
in
cmpsl
clc
mov
add
mov
clc
out
sbb
mov
clc
jmp
or
sahf
inc
clc
sub
mov
adc
add
clc
adc
add
js
mov
add
or
stos
aaa
and
add
jmp
clc
mov
clc
xchg
add
add
clc
daa
clc
dec
adc
add
add
rcrl
jmp
ljmp
mov
cmp
dec
mov
sti
cmp
add
sbb
or
clc
push
inc
add
mov
xchg
popa
add
push
add
or
xchg
pop
push
adc
add
add
xor
leave
fists
add
add
xchg
inc
clc
sbb
das
test
xchg
ja
sub
es
inc
add
jnp
add
sar
std
cmp
into
cmp
clc
outsl
cwtl
cld
ret
dec
adc
add
mulb
mov
fsubrl
add
out
cmp
adc
add
cmp
test
cmp
clc
outsb
cli
add
add
add
sbb
add
mov
adc
add
mov
add
cmp
clc
cmpsb
clc
clc
cld
or
and
add
xor
add
pop
pop
ljmp
add
sar
fwait
sub
add
aad
fcomps
pop
aad
sub
mov
pop
mov
add
and
add
sub
sbb
or
cmp
clc
mov
clc
mov
add
insb
jbe
ret
rcrb
clc
dec
mov
sbb
divl
ret
sub
daa
clc
in
das
mov
push
add
stos
xchg
mov
mov
pop
fsubl
add
mov
cmpsl
clc
mov
inc
add
lock
imul
add
lahf
inc
add
call
add
aam
mov
jns
push
mov
lea
dec
fnsave
add
cmp
aas
ss
fcom
fistps
aam
clc
idiv
or
mov
mov
clc
mov
fcoms
add
mov
clc
adc
add
push
xor
add
push
mov
clc
rorl
clc
mov
clc
pop
ds
add
add
mov
into
sub
add
lret
ret
clc
push
fadds
xlat
xchg
adc
add
ret
decl
outsb
lods
xchg
fcmovnbe
arpl
add
stos
xor
sbb
js
dec
ss
add
fwait
add
loop
cmpsb
clc
setno
jns
mov
outsb
sbb
sub
or
add
sbb
mov
clc
jmp
sti
aad
out
add
clc
adc
clc
js
bnd
clc
jae
add
add
adc
add
lcall
cmp
xchg
fsts
add
xlat
adc
clc
int
or
adc
add
xchg
and
add
mov
pop
lods
cmp
cwtl
call
outsl
jae
add
lock
pop
lods
out
sub
int3
sub
pop
outsl
movsb
clc
xchg
sbb
push
add
in
cld
jle
mov
add
gs
mov
fwait
cmp
dec
into
test
clc
jg
data16
adc
add
add
pop
mov
and
add
jb
add
clc
scas
mov
cmp
add
mov
jp
pxor
sti
mov
es
daa
clc
push
add
iret
mov
clc
or
inc
clc
div
out
sbb
inc
add
dec
jmp
clc
pop
and
add
add
in
ljmp
clc
es
lods
test
int3
bound
add
add
dec
fwait
int
add
pop
jmp
jnp
movsb
clc
jbe
add
clc
dec
xchg
jo
add
adc
add
addr16
and
add
jb
add
jae
add
pop
jno
add
and
add
clc
daa
clc
daa
clc
or
xchg
xabort
loope
out
int3
jno
add
clc
jb
add
add
clc
aad
clc
push
cmp
cs
add
cmp
call
lcall
add
nop
scas
scas
mov
jmp
add
clc
pushf
adc
popf
test
pop
in
inc
add
lahf
adc
add
clc
leave
popf
das
and
add
add
mov
clc
lock
push
add
add
out
pop
xchg
sti
inc
add
lahf
ret
clc
enter
cmp
sar
clc
dec
jg
add
adc
add
vmovhps
cmpsl
clc
enter
inc
add
into
cld
sbb
inc
clc
mov
clc
sar
mov
cs
lcall
clc
jb
add
das
mov
test
int
imul
into
inc
clc
jp
out
setbe
clc
cltd
scas
xchg
sahf
js
hlt
xor
add
or
dec
lods
push
jo
add
xchg
push
add
mov
clc
mov
es
xor
add
add
add
xor
add
cmp
dec
cld
push
out
push
push
lret
push
mov
jge
popf
cwtl
nop
ss
fsubrs
add
clc
in
pop
add
add
add
or
lods
imulb
mov
push
cs
clc
sahf
testb
clc
mov
clc
lock
pop
sub
add
popa
add
push
add
and
add
xchg
add
fimull
jle
clc
imul
clc
outsb
out
pushf
loopne
cmp
add
or
add
cmpsb
clc
lahf
mov
mov
fnsave
add
dec
scas
lret
add
add
add
cmp
clc
addr16
popa
add
lret
add
pushf
ret
clc
dec
fistpll
clc
jno
add
jns
test
adc
push
add
popf
push
clc
cs
insb
bound
add
fdivrs
clc
loop
addr16
xchg
inc
add
ficomps
mov
sldt
add
js
jno
add
fidivrs
mov
clc
cmpsb
clc
pop
fs
addr16
clc
cmp
clc
mov
and
add
jb
add
pusha
add
addr16
and
add
dec
scas
sar
jbe
clc
xbegin
add
push
push
dec
jle
clc
inc
add
mov
int3
xor
mov
clc
jo
add
add
inc
clc
add
jmp
add
add
clc
in
cmp
add
cmp
and
sti
call
roll
clc
dec
adc
add
add
add
mov
add
or
out
xchg
nop
cmp
clc
cli
or
int
pop
jmp
clc
mov
add
loopne
cmp
mov
in
xlat
jl
out
xbegin
incl
clc
inc
clc
aam
fists
add
clc
mov
stos
in
cwtl
push
xchg
aas
ret
clc
jnp
clc
jmp
mov
sub
add
mov
or
inc
add
push
insb
mov
add
sbb
icebp
xor
add
clc
xchg
pop
push
add
in
pop
dec
insl
and
test
xchg
pusha
add
cmc
xor
mov
push
lahf
xchg
test
call
dec
insl
jmp
jo
add
sarl
out
or
cmp
sar
cmpsl
clc
dec
pop
mov
ret
pop
push
add
je
mov
imulb
sub
add
aas
mov
adc
add
add
sbb
cmp
hlt
cltd
dec
pop
xchg
decl
cmp
clc
sahf
fstpt
das
and
add
add
fs
stos
mov
inc
clc
push
xchg
es
or
jmp
jecxz
adc
add
mov
clc
pop
push
push
add
add
add
pop
call
fwait
adc
add
clc
fwait
sbb
xbegin
xchg
mov
adc
nop
ljmp
xor
add
adc
clc
push
ret
arpl
add
pop
pop
cltd
lods
popf
arpl
add
dec
xor
cmp
cmpsl
clc
cmp
pop
cmp
popa
add
pushf
jecxz
mov
fisubrs
sbb
jae
add
dec
xor
add
and
add
xlat
jmp
dec
mov
jnp
sti
stc
jp
add
and
add
clc
ficompl
add
popa
add
and
inc
add
or
fdivrs
add
pop
or
add
add
add
add
mov
push
add
jg
add
mov
mov
int
xor
clc
sbb
in
arpl
add
mov
xbegin
or
loop
stos
fwait
dec
enter
lods
xchg
cld
cmpsb
clc
sub
bound
add
lea
lods
add
mov
leave
mov
push
add
jne
clc
pop
mov
inc
add
jecxz
pop
and
add
cmp
fnstenv
add
push
dec
xchg
xchg
mov
clc
jb
add
nop
adc
add
add
lahf
sti
cmp
sbb
xchg
faddl
ds
sar
clc
scas
jno
add
add
add
add
add
dec
add
add
clc
pop
mov
add
jmp
icebp
cmp
xchg
adc
add
lods
scas
lods
mov
fsubr
dec
cmc
push
xor
add
clc
mov
clc
mov
push
sbb
xor
add
out
sub
lcall
jmp
clc
xchg
sar
clc
jp
jmp
out
mov
lret
inc
clc
enter
add
jp
clc
mov
inc
add
insb
xchg
bound
add
xchg
pop
es
pop
clc
push
int3
lods
dec
inc
add
jo
add
addr16
xchg
daa
clc
mov
scas
dec
sbb
xchg
clc
inc
add
inc
clc
bound
add
jae
add
clc
into
xchg
mov
add
push
clc
addr16
add
cmp
add
dec
ret
iret
pop
nop
test
mov
inc
clc
mov
or
jp
and
add
mov
clc
cs
clc
je
clc
mov
add
sar
test
jle
add
jnp
dec
push
xchg
inc
clc
push
clc
add
cmp
add
mov
das
inc
clc
pop
daa
clc
gs
sar
adc
add
and
add
clc
in
lock
cmp
mov
dec
pop
es
fsubrs
clc
xor
fwait
int
inc
clc
ljmp
cwtl
cmp
pushf
fldt
and
rcrl
dec
mov
lcall
or
imul
fs
incb
pop
mov
mov
add
or
clc
dec
iret
jne
in
in
xor
add
add
test
jg
pop
test
cmc
popf
push
add
hlt
in
cmp
sahf
mov
add
movsb
clc
es
or
clc
cli
mov
clc
cmp
push
aaa
or
sub
addr16
and
add
sbb
add
clc
loopne
inc
add
add
xchg
xor
out
mov
sub
ss
popf
push
lret
cmp
addr16
insl
fdivs
xchg
push
xchg
cmp
adc
add
add
mov
iret
cltd
int
mov
clc
mov
enter
clc
das
xor
dec
dec
sbb
add
add
mov
movsl
clc
sbb
xchg
outsl
sub
add
jl,pn
xor
add
clc
sarb
clc
fwait
push
clc
jns
dec
imul
cmpsb
clc
cmc
hlt
push
cmp
clc
xor
add
add
push
add
popf
stos
sar
mov
daa
clc
jecxz
pushf
inc
clc
mov
ret
inc
add
jne
add
out
bound
add
fnsave
clc
mov
add
popa
add
mov
int3
icebp
push
xchg
lcall
mov
jne
clc
and
add
add
aaa
xor
add
jle
sti
fwait
call
add
mov
clc
sub
rcrb
adc
add
adc
add
arpl
add
clc
dec
mov
add
add
or
and
add
add
mov
sbb
add
test
xabort
push
push
repz
jle
adc
add
stc
push
loop
xor
add
jbe
mov
xchg
je
push
adc
and
add
cmp
clc
rcl
idivl
mov
add
pop
insl
jns
clc
dec
lahf
or
jb
add
ret
clc
or
aaa
mov
clc
shlb
jne
add
and
arpl
add
jmp
insl
mov
clc
mov
int3
movsl
clc
jge
clc
jae
add
lcall
mov
mov
sub
pop
pop
lahf
int
xchg
bound
add
dec
push
clc
pop
jg
out
add
add
add
add
add
lret
insb
movsbl
scas
icebp
dec
cmp
sub
clc
mov
push
inc
clc
negl
fsubr
lret
repz
pop
cmpsb
clc
jecxz
dec
add
add
mov
add
clc
jae
add
add
inc
add
xchg
call
add
clc
mov
mov
and
add
mov
clc
hlt
jge
pop
sar
sbb
sbb
clc
int3
dec
add
add
clc
jl
pusha
add
test
push
push
add
not
test
mov
nop
dec
mov
add
mov
aad
adc
add
clc
aas
gs
adc
add
daa
clc
adc
add
jle
pop
aaa
clc
mov
clc
icebp
popa
add
jmp
clc
shl
clc
mov
push
jmp
and
jg
clc
push
add
xbegin
cwtl
pop
jle
sub
fdivl
xlat
data16
stc
cwtl
rcll
pop
adc
add
inc
add
xchg
jo
add
xor
add
clc
outsb
lret
mov
clc
fstps
xor
add
in
inc
add
pop
inc
add
leave
xchg
lcall
xchg
sahf
das
imul
jbe
out
movsl
clc
push
mov
add
add
mov
shrb
add
clc
lret
in
xor
add
cmp
cli
mov
clc
nop
push
mov
push
shl
clc
jnp
mov
or
imul
sar
mov
xchg
inc
clc
mov
dec
lcall
test
sbb
jnp
cmp
add
add
in
jle
clc
xchg
xor
add
mov
add
ficoml
mov
in
push
add
jbe
clc
and
sahf
das
push
add
push
jle
add
sti
adc
add
add
ud0
clc
push
clc
cld
repnz
and
sar
cmpsl
clc
mov
adc
add
add
bound
add
enter
add
clc
xor
add
clc
sahf
sbb
clc
mov
dec
push
add
sar
mov
jmp
clc
std
mov
clc
xor
add
add
repnz
or
clc
testl
sub
imul
add
jb
add
clc
xlat
jp
clc
aad
imull
add
add
sub
jl
and
add
clc
fnstsw
pusha
add
outsb
cmpsb
clc
adc
add
ljmp
jae
add
mov
push
add
lcall
mov
iret
leave
pop
test
clc
cmpsb
clc
pop
jne
push
or
or
clc
sub
mov
clc
or
js
clc
shrl
push
pop
es
add
out
sub
test
mov
clc
std
test
cmp
jnp
clc
cltd
fisubs
pop
fsubrp
out
adc
sti
xchg
adc
add
clc
bound
add
clc
mov
add
adc
add
clc
bound
add
mov
pop
call
shll
add
repnz
xor
add
rorb
test
pop
mov
pop
ret
adc
add
add
pop
cmp
mov
pusha
add
test
add
jne
clc
dec
stc
inc
clc
xor
add
add
add
inc
add
xchg
mov
sbb
add
or
ret
clc
mov
xor
add
add
mov
clc
cmpsb
clc
loop
gs
fsts
add
sar
add
iret
jno
add
add
in
lods
jp
add
push
add
inc
add
aas
popf
xchg
bound
add
and
push
jle
std
jno
add
pop
aad
mov
in
out
jmp
add
aaa
int3
xbegin
mov
std
mov
jecxz
mov
nop
sbb
ljmp
clc
out
mov
jmp
sahf
aaa
lods
xchg
mov
clc
in
or
cmp
xchg
mov
jns
nop
into
jp
add
sarl
add
stos
adc
add
sti
add
add
js
clc
loope
inc
clc
push
add
mov
ss
lcall
add
add
xchg
jecxz
fimuls
clc
int
popf
pop
xor
cli
inc
add
int3
xchg
push
es
nop
cwtl
jge
movsl
clc
jge
loope
cmp
jo
add
clc
xchg
adc
add
add
mov
clc
nop
movsl
clc
aad
inc
clc
mov
add
test
sbb
pushf
and
add
push
ds
stos
js
dec
xchg
adc
clc
push
sub
or
clc
xchg
push
addr16
and
add
add
xor
add
push
mov
add
cmp
xchg
ljmp
add
into
xor
clc
js
clc
mov
sti
dec
in
in
shlb
add
pop
cwtl
pop
lret
stos
in
lea
clc
imul
mov
cmpsl
clc
mov
mov
out
dec
popf
in
mov
clc
xchg
push
add
xchg
xlat
jo
add
sub
dec
xchg
cmpsb
clc
xchg
and
add
das
mov
clc
xlat
cmp
jecxz
lods
xabort
scas
xor
lods
jl
add
push
add
fiaddl
add
add
leave
arpl
add
sub
inc
add
mov
repnz
xchg
cmp
xchg
cltd
cmpsb
clc
mov
jmp
out
mov
clc
lahf
in
ret
clc
xchg
cmp
mov
rclb
xor
add
pop
jl
xchg
fdivrs
or
add
mov
pushf
adc
add
clc
aas
popf
xchg
pop
jno
add
dec
pop
out
out
cmp
or
frstor
add
xor
add
clc
push
inc
add
dec
jle
add
pop
pop
mov
add
add
add
add
cs
shl
jb
add
inc
clc
iret
sahf
mov
clc
dec
add
add
shrb
add
jb
add
add
push
xbegin
add
jmp
mov
pop
lret
add
clc
mov
inc
add
and
add
jno
add
out
jne
adc
add
add
clc
adc
push
sbb
in
mov
in
shll
clc
data16
out
xchg
push
sub
jg
clc
adc
std
mov
add
adc
add
clc
bound
add
jnp
clc
adc
add
lret
ret
clc
icebp
pop
fldt
movsl
clc
mov
clc
cmpsb
clc
mov
mov
ficoml
test
cmp
movsb
clc
rcll
cmp
add
clc
cmpsb
clc
hlt
add
add
ss
add
mov
cmp
clc
cmp
push
std
xchg
mov
clc
jp
pop
mov
xchg
jo
add
add
jae
add
bound
add
pop
cmp
cmpsl
clc
inc
add
or
xor
add
repz
or
or
add
pop
cld
sub
or
adc
add
mov
fistl
sub
xor
add
pop
xchg
imul
add
and
add
sbb
rcpps
add
mov
xor
sub
add
xchg
popa
add
popa
add
sbb
add
ja
push
cmp
jns
fistpl
add
mov
pusha
add
or
jp
mov
clc
movsb
clc
jg
jle
stc
mov
clc
sub
add
add
fadds
cmp
mov
push
add
cmp
nop
dec
mov
clc
in
push
clc
cld
mov
insl
jle
cld
lret
add
insl
jns
sub
clc
and
add
mov
cwtl
inc
clc
fisttpll
xor
add
stc
test
push
add
jecxz
adc
add
clc
sbb
clc
scas
cwtl
dec
pop
pop
daa
clc
xor
repnz
scas
loop
ds
fidivs
push
sbb
add
adc
add
fisttps
lcall
sub
adc
add
clc
xchg
sbb
clc
inc
clc
cwtl
mov
sub
js
in
aas
pushf
mov
pop
in
inc
clc
cmp
lock
jp
and
add
xor
movsb
clc
int3
in
mov
add
xor
add
sarl
clc
xchg
scas
mov
xchg
cmpsb
clc
xchg
sub
add
add
inc
clc
pop
je
cmc
and
add
jne
mov
bts
clc
adc
add
clc
paddb
add
cmp
xchg
fcmovbe
dec
pop
xor
clc
and
add
adc
add
mov
clc
mov
clc
aad
clc
mov
sbb
jne
clc
add
add
lea
ss
xchg
xor
add
cmp
xchg
cmc
notl
pop
addr16
es
das
inc
add
dec
sti
cltd
dec
fs
bound
add
mov
xbegin
and
add
add
add
mov
clc
cld
pop
int3
push
add
and
in
mov
jmp
pop
pop
xchg
mov
pop
jae
add
jbe
add
sub
cmp
add
adc
add
nop
push
stos
daa
clc
cld
cmp
jb
add
add
and
and
add
and
xabort
inc
add
cmc
xbegin
add
or
test
or
int3
push
xchg
sbb
sti
mov
jbe
imul
or
sar
stos
dec
cli
push
clc
int3
and
adc
jo
add
in
xchg
xor
aas
jl
outsl
jg
clc
and
add
clc
mov
and
add
or
daa
clc
inc
clc
ja
add
or
clc
add
jl
cmp
cmp
cmp
ss
clc
mov
clc
mov
rcll
push
clc
xchg
cmp
dec
push
ret
clc
repz
add
mov
add
jne
or
sbb
xbegin
pop
sbb
dec
mov
in
mov
add
ss
jle
mov
clc
outsb
gs
sub
add
std
pop
sahf
jg
xlat
aas
adc
add
add
clc
mov
clc
push
clc
fisttpll
xor
add
clc
push
lea
add
add
add
jb
add
add
clc
clc
or
inc
clc
pop
xchg
negl
cmp
clc
jge
data16
mov
xor
sbb
clc
outsl
int
add
cwtl
and
add
cmp
add
add
mov
dec
test
push
add
mov
lods
mov
ret
clc
fidivl
clc
in
mov
sar
dec
cmp
ds
cmp
sar
ds
add
mov
cld
cmp
stos
cmc
pushf
shll
mov
clc
pop
icebp
nop
mov
xchg
cwtl
pop
push
add
mov
sbb
lods
jne
mov
xchg
mov
add
sar
outsb
jmp
xchg
push
jbe
add
imul
add
pushf
jl
xabort
pop
clc
adc
add
das
fsubr
inc
add
int
clc
sub
aaa
sar
inc
clc
cmpsb
clc
pop
nop
mov
jmp
in
add
add
popf
insb
pop
imul
add
jecxz
sub
das
adc
add
mov
iret
sar
lahf
mov
add
sbb
sub
fnsave
add
lret
add
add
dec
cmp
pop
xor
add
mov
add
mov
setae
or
ja
add
sbb
dec
mov
clc
push
mov
clc
adc
and
lods
pop
inc
add
jmp
add
pusha
add
pop
es
xchg
lcall
mov
add
mov
testb
clc
scas
sar
mov
add
mov
clc
clc
inc
add
addr16
push
sub
sub
pop
mov
xor
clc
cli
divl
xchg
loop
and
in
int3
aad
mov
mov
add
iret
imul
repnz
mov
mov
clc
pop
stc
and
mov
xchg
inc
add
adc
mov
clc
adc
add
add
ret
xabort
add
add
insb
add
add
out
jb
add
sbb
cmp
sub
clc
out
push
icebp
repz
adc
add
loopne
pop
inc
add
jnp
cs
push
add
movsb
clc
mov
mov
mov
xor
clc
stos
push
das
fcomi
xchg
insb
leave
call
add
fistl
add
xchg
pop
pop
sarb
nop
and
add
clc
dec
lcall
out
out
shrl
add
mov
sub
inc
add
mov
imul
out
fildl
clc
lea
clc
popf
mov
clc
mov
push
dec
ja
insb
sub
add
in
xor
add
add
cmp
popf
mov
lods
xchg
std
decl
pop
pushf
lret
gs
xlat
pop
dec
repz
mov
std
adc
icebp
lock
nop
cmc
pop
xor
add
iret
mov
clc
mov
mov
add
rorb
add
xchg
test
add
mov
clc
int3
fwait
jmp
faddl
cwtl
pop
clc
test
clc
xbegin
and
bound
add
mov
fcoms
jns
clc
pushf
movsl
clc
in
mov
mov
outsb
jns
pop
stc
or
cmp
clc
lods
add
add
clc
lock
pop
int
add
lods
push
jmp
inc
clc
stos
xchg
cmpsl
clc
nop
fisubs
jge
clc
and
adc
add
inc
clc
hlt
or
mov
pop
mov
das
bnd
add
loope
xlat
loop
mov
add
inc
clc
cmp
jo
add
pop
gs
xchg
movsb
clc
cmpsl
clc
mov
aaa
adc
add
add
xabort
ljmp
add
add
add
dec
sub
add
hlt
push
add
jae
add
add
leave
movsb
clc
scas
dec
mov
into
sbb
mov
add
xabort
jg
pop
push
mov
clc
mov
xchg
mov
addr16
fwait
cld
inc
add
stc
sbb
in
dec
stos
leave
inc
clc
push
add
popa
add
lcall
clc
jecxz
fildll
ja
clc
xbegin
mov
das
ds
sti
iret
xlat
push
ret
add
shll
xor
add
add
rol
clc
push
add
ds
add
and
add
pop
and
add
inc
clc
xor
add
or
add
or
adc
add
clc
pop
lods
or
cs
clc
xchg
xor
add
xchg
mov
lock
add
fldl
clc
into
sub
add
jmp
ret
clc
mov
clc
add
add
add
and
add
push
clc
mov
mov
jo
add
cmp
add
adc
add
add
fld
clc
int3
out
gs
ds
xor
add
clc
data16
lock
sbb
rorb
addr16
xchg
mov
clc
dec
jmp
daa
clc
push
xchg
sbb
dec
cmp
sar
mov
clc
pushf
cltd
mov
mov
add
js
add
xchg
push
xor
add
jb
add
xor
add
popa
add
js
clc
or
add
adc
add
add
stc
into
int
xor
push
aam
xchg
insb
xor
sub
es
xbegin
add
cwtl
leave
push
clc
inc
add
scas
xor
clc
mov
sar
out
nop
push
popa
add
in
out
iret
stc
out
loopne
mov
int3
out
insb
or
fdivl
test
jge
adc
add
dec
xor
add
add
xor
pop
movsb
clc
sbb
add
adc
add
inc
clc
xchg
xchg
or
clc
mov
enter
test
jne
outsl
mov
clc
adc
add
stos
jae
add
xchg
inc
clc
pop
int3
fwait
cmp
imul
lock
clc
mov
xlat
lret
mov
add
popa
add
mov
lret
pop
ss
cmp
add
out
clc
mov
movsb
clc
outsb
cmp
clc
aaa
push
dec
xchg
xchg
sbb
push
ss
cmpsl
clc
icebp
mov
test
inc
clc
out
lock
fwait
dec
shrb
add
xbegin
inc
add
sub
fidivrs
mov
add
add
sti
aam
inc
clc
pop
dec
mov
fmuls
or
add
or
adc
add
clc
in
daa
clc
daa
clc
iret
sub
scas
push
in
mov
call
ja
dec
jp
clc
mov
repz
clc
xabort
stc
sub
stc
adc
clc
out
scas
aam
jmp
repnz
clc
dec
shrb
dec
adc
add
clc
sbb
cmp
loopne
bound
add
outsb
loop
push
push
aam
cmp
adc
adc
add
xchg
xlat
gs
mov
insb
adc
add
xabort
cmp
clc
mov
sbb
clc
sbb
inc
add
fsubs
dec
mov
dec
repnz
testl
lahf
bound
add
clc
pop
add
add
test
icebp
lea
mov
adc
add
clc
sahf
test
push
add
pushf
pop
lahf
shll
mov
add
push
icebp
or
add
dec
into
sar
mov
inc
clc
push
xchg
jbe
add
inc
add
mov
dec
mov
add
in
sbb
clc
push
xchg
jnp
dec
in
xor
inc
clc
mov
cli
inc
clc
mov
pop
or
clc
fisttpl
addr16
jne
add
sahf
outsb
add
lea
adc
add
scas
push
clc
push
clc
jg
add
jbe
clc
jae
add
aas
int
in
out
push
jo
add
cwtl
add
clc
adc
add
clc
fdivrl
mov
add
sti
push
cmpsb
clc
adc
out
mov
mov
enter
cltd
xabort
add
popf
fwait
ljmp
insb
clc
stos
mov
hlt
jo
add
pop
add
popa
add
imul
or
clc
je
lahf
addr16
pop
outsb
bound
add
bound
add
jmp
push
add
sbb
sub
sar
xor
add
rcll
add
clc
xor
add
pushl
sti
loop
sub
dec
push
add
insl
in
fs
fs
cmp
mov
popa
add
mov
xchg
mov
inc
add
fisubs
add
adc
add
xchg
mov
ljmp
roll
inc
add
pop
das
sub
clc
in
clc
cmp
add
ret
fisttpll
xchg
pop
clc
mov
jns
lcall
pop
cmp
rcl
sub
xchg
int3
push
add
push
xor
add
add
jge
pushf
xor
add
pop
jp
clc
mov
xchg
cltd
push
add
xor
add
add
popa
add
pop
testb
jle
and
add
xchg
kmovw
xabort
add
jecxz
sahf
clc
sbb
clc
in
lcall
mov
clc
adc
add
add
push
add
cmp
clc
jecxz
or
cmp
lock
cmp
es
sub
icebp
cmp
clc
pop
mov
add
add
sbb
push
test
sub
int
dec
clc
jg
clc
dec
add
add
clc
push
clc
inc
clc
mov
and
ss
clc
lret
clc
mov
out
mov
dec
jo
add
aad
add
cmp
cwtl
fnstsw
inc
add
lock
pusha
add
scas
pop
test
clc
inc
clc
lret
add
or
push
repnz
add
xor
cli
sbb
jmp
jnp
clc
inc
add
dec
mov
clc
mov
lret
add
sbb
pusha
add
es
imul
clc
inc
clc
add
add
clc
push
add
adc
add
out
repnz
add
fnstsw
lea
add
xchg
sub
sahf
fs
add
clc
fs
fnstsw
mov
cmc
cmpsl
clc
inc
clc
inc
clc
pop
dec
lcall
clc
mov
pop
push
push
add
lret
mov
add
clc
push
add
vxorps
add
frstor
cmp
dec
mov
clc
enter
clc
stos
lods
test
int3
pop
mov
arpl
add
dec
dec
xchg
add
add
or
add
dec
shrb
mov
add
add
add
mov
add
sahf
stos
jb
add
adc
mov
cli
jno
add
add
clc
sbb
cs
cmp
popf
jns
clc
mov
std
jle
js
clc
inc
add
stos
cmp
test
add
add
jge
clc
movsb
clc
adc
clc
das
xabort
add
fadd
clc
incb
add
pop
adc
add
clc
cmpsl
clc
xchg
arpl
add
jp
ss
clc
push
lret
add
add
pop
cltd
lret
push
add
cmc
int3
and
clc
pop
clc
sub
in
scas
mov
clc
insl
xchg
xchg
lahf
or
add
add
mov
sar
pop
jg
clc
add
add
jb
add
clc
xchg
inc
clc
loop
daa
clc
add
add
fldt
add
and
add
xor
mov
clc
or
add
push
add
cmp
aam
add
xbegin
jg
repz
add
jne
das
pop
dec
xchg
jg
ss
add
mov
push
aaa
cmp
lahf
rcrb
mov
mov
push
mov
or
clc
loope
mov
popa
add
movsl
clc
inc
clc
sbb
add
xchg
xor
add
fistpll
mov
fucomi
std
xor
das
cld
repnz
mov
clc
das
mov
pop
cmp
shrl
add
mov
jle
ret
js
jp
add
gs
insb
shrd
enter
ljmp
push
add
mov
rcl
call
add
add
pushf
jne
ljmp
clc
ffree
clc
aaa
dec
test
aaa
jg
ljmp
add
sahf
sub
cmpsl
clc
cmp
cmpsl
clc
rcrl
add
pushf
ficompl
add
add
sar
push
cmp
sbb
out
sbb
jecxz
add
add
push
pop
fisubs
clc
ret
stc
loope
aad
ret
lahf
lods
adc
clc
cwtl
insb
jge
push
sahf
icebp
xchg
cltd
sbb
jne
sub
sti
sbb
fbstp
add
mov
inc
clc
inc
add
int
clc
mov
sti
inc
clc
bound
add
popf
push
add
cmp
add
test
cmp
add
clc
cmpsl
clc
das
adc
add
mov
cs
sub
rcll
add
clc
test
mov
outsl
mov
dec
in
xor
adc
add
sub
dec
inc
add
sbb
mov
jle
addr16
stos
in
sub
clc
sub
add
xchg
xchg
popa
add
fisubrs
ja
lahf
xor
add
clc
jge
pop
xchg
push
clc
iret
mov
idiv
fidivl
clc
insl
dec
xbegin
out
imul
sar
clc
adc
mov
add
add
add
ficomps
clc
push
leave
in
jbe
jp
add
shll
jmp
clc
and
add
ret
outsb
push
add
jle
out
movsl
clc
mov
inc
clc
cs
daa
clc
fildll
in
mov
addr16
pop
clc
dec
jo
add
std
movsl
clc
in
push
adc
add
pop
pusha
add
add
cwtl
fists
hlt
ss
mov
clc
je
es
clc
xor
add
fs
mov
clc
fisubl
clc
arpl
add
add
out
fs
inc
add
ror
jae
add
mov
ljmp
mov
mov
clc
dec
mov
addr16
call
iret
push
cltd
loope
fnsave
add
or
sub
nop
loop
sub
stos
data16
fbld
clc
in
pop
inc
clc
mov
test
add
shrl
imulb
sar
clc
insl
mov
pop
and
add
add
cld
cmp
clc
idivl
in
repz
add
ljmp
data16
mov
clc
push
add
rcrl
xor
out
push
adc
add
clc
mov
stc
test
adc
mov
add
insl
leave
xlat
xor
add
dec
repnz
mov
and
sub
xchg
lock
clc
je
in
dec
sbb
cltd
out
pop
pop
fwait
ret
clc
repnz
shrl
clc
and
add
std
std
cltd
or
cmp
push
add
dec
inc
clc
jae
add
lods
and
inc
add
jnp
clc
repnz
in
or
add
add
clc
cmp
and
add
xchg
adc
add
mov
clc
cmpsb
clc
mov
clc
imul
divb
xor
add
insb
fwait
push
mov
addr16
insl
and
addr16
jbe
popf
bnd
push
data16
adc
add
data16
mov
push
insb
jecxz
rorl
fs
and
add
mov
addr16
pop
adc
add
sub
clc
pop
lock
je
popf
outsb
xchg
popf
jl
ds
enter
and
dec
loopne
repz
add
clc
pop
dec
lods
shlb
adc
add
mov
clc
jg
add
push
add
or
add
fcompl
sbb
xor
add
clc
jb
add
lock
add
in
loop
pop
and
cmp
clc
add
add
add
ret
clc
jno
add
add
js
adc
add
add
mov
cmp
clc
adc
clc
mov
add
sti
cmpsl
clc
clc
pop
movsl
clc
cmpsb
clc
xor
clc
inc
clc
push
pop
push
add
add
push
out
sar
xchg
fcoms
clc
and
add
sub
mov
cmp
jno
add
clc
sbb
int
vzeroupper
sub
clc
sbb
in
xor
add
cmp
pushf
call
mov
test
dec
leave
out
sbb
add
add
add
lock
add
clc
push
add
cmp
push
xor
add
shl
clc
sar
clc
xchg
mov
cmc
cmp
adc
add
into
dec
fmull
add
testb
add
mov
clc
idivb
dec
fnstenv
sar
cmp
in
shll
add
add
mov
mov
inc
clc
sub
addps
xor
add
clc
xchg
xor
add
add
add
add
sar
clc
sub
clc
dec
testb
mov
adc
jbe
push
dec
inc
add
inc
clc
shlb
fists
add
lret
xabort
mov
das
push
dec
mov
repnz
add
add
fcoml
add
stos
xor
popf
bound
add
dec
pop
fdivl
add
dec
mov
adc
add
stos
movsl
clc
lcall
mov
clc
push
add
add
xabort
clc
cmp
sar
out
add
divl
cs
clc
aad
clc
outsb
pop
sar
mov
clc
adc
add
clc
xchg
or
clc
jb
add
call
dec
or
or
cmpsb
clc
add
or
add
sub
cmp
clc
ljmp
clc
mov
sbb
repnz
add
xor
add
shll
add
mov
aad
pop
mov
lcall
in
mov
xchg
lods
mov
add
add
adc
add
add
and
add
add
add
add
int3
fisubrl
mov
movsb
clc
aas
xchg
push
add
je
jge
push
addr16
shll
add
leave
daa
clc
and
cmp
gs
popa
add
sbb
clc
in
mov
push
sub
std
sarb
clc
adc
add
std
or
ffreep
clc
fmul
loope
imul
movsl
clc
out
scas
xchg
in
xor
add
pop
sub
scas
inc
clc
push
or
xor
add
jg
insb
dec
int
fnsave
add
leave
xchg
fisttps
or
add
int
shlb
add
lock
jmp
push
add
sub
jns
sub
add
push
imul
cwtl
in
out
or
add
ja
test
mov
jo
add
add
add
add
xabort
clc
push
pop
lcall
add
loope
insl
jmp
insl
pop
xchg
insl
lods
out
movsl
clc
xchg
clc
adc
add
stos
mov
xchg
cmp
pop
daa
clc
insb
jge
sub
test
clc
stc
xabort
pusha
add
insl
es
lods
pop
fs
sahf
jl
clc
pop
not
jb
add
add
and
add
add
cltd
ret
lea
sub
jne
clc
jg
add
pop
mov
add
pop
cmp
sarl
out
jmp
pushf
mov
xor
dec
cmp
clc
stos
ss
clc
cmp
pushf
mov
inc
clc
xabort
add
test
add
and
add
adc
addr16
rcrb
pop
ljmp
xchg
out
pop
clc
cwtl
push
aam
mov
or
loopne
loopne
pop
sub
clc
mov
fistl
push
ret
sarl
jmp
clc
pop
inc
add
xbegin
add
int
clc
stos
jg
loop
insb
adc
add
clc
mov
add
mov
cmp
mov
xbegin
leave
or
in
test
add
mov
shrl
clc
repnz
inc
clc
add
add
clc
mov
pop
adc
jbe
je
push
dec
add
add
xchg
pop
pop
mov
add
sti
add
outsl
aam
push
sbb
out
lcall
mov
add
ds
add
ret
clc
fistpll
adc
add
mov
add
sbb
popa
add
popa
add
or
add
mov
out
push
add
push
clc
sarl
lahf
mov
clc
sub
pop
xchg
jp
shll
movsb
clc
add
add
je
push
add
dec
mov
dec
pop
ss
shl
xabort
clc
sbb
add
add
add
push
dec
bound
add
roll
add
cmp
clc
mov
pop
ja
inc
clc
adc
mov
test
add
cmp
add
and
inc
add
jne
ja
pop
cmp
add
sbb
sbb
jmp
negb
test
add
icebp
xchg
push
mov
clc
jge
mov
clc
in
cmp
and
add
push
clc
scas
add
add
lock
add
lock
jmp
add
jno
add
add
add
add
clc
fisttps
or
adc
add
clc
mov
out
jge
pop
adc
add
into
jae
add
add
clc
xor
add
test
jbe
add
cmp
clc
mov
dec
sahf
push
loopne
flds
clc
adc
add
or
movsb
clc
push
sub
clc
mov
out
xor
add
clc
and
cmp
stos
sbb
jne
gs
xor
add
add
add
and
clc
scas
lods
xor
add
add
popf
pop
and
testb
lcall
push
ret
mov
clc
cmp
add
push
scas
inc
clc
and
add
add
add
add
add
clc
ret
push
jae
add
lock
or
mov
xor
add
add
insb
pop
mov
filds
add
pushf
loopne
iret
add
add
cmp
adc
push
pushf
lret
test
rorb
inc
add
dec
jecxz
clc
mov
cmpsb
clc
fildll
mov
ret
clc
faddl
je
imul
out
pop
jge
lods
add
add
cmp
mov
clc
mov
in
fwait
loope
bound
add
add
add
aad
xor
add
sub
add
flds
add
sub
jae
add
aam
add
out
repz
add
xchg
sbb
test
clc
push
data16
in
scas
in
stos
sbb
inc
add
pop
or
add
add
lret
icebp
mov
cwtl
out
pop
dec
xor
add
clc
fmull
clc
ja
clc
std
call
dec
lods
test
add
sbb
ja
pop
repz
add
push
clc
cmp
and
add
pop
or
je
add
cld
jb
add
add
add
repnz
add
and
std
icebp
dec
scas
mov
add
hlt
mov
cmp
jo
add
out
into
xor
mov
jae
add
pop
cmp
add
in
cmp
int
rcll
sbb
cltd
inc
clc
sti
out
dec
sbb
in
xor
add
aaa
ret
clc
jmp
pop
test
mov
sbb
jp
ror
pop
imul
dec
mov
and
add
ss
fists
add
popa
add
pop
sub
add
insb
adc
add
jno
add
sahf
insb
or
sub
loopne
pop
or
add
ss
nop
rolb
clc
repnz
sbb
clc
sti
lods
es
fisttpll
add
add
clc
lahf
mov
fiaddl
add
data16
fld
clc
mov
lahf
jbe
pop
clc
scas
push
scas
negl
cli
lock
add
pop
daa
clc
stos
aam
jnp
jge
add
xabort
pop
cmp
testl
popa
add
lods
fiaddl
add
insb
cmpsb
clc
push
add
movsb
clc
cmp
cltd
adc
add
add
clc
leave
cmc
inc
clc
nop
mov
push
das
push
add
arpl
add
pop
ss
popf
cmp
cmpsl
clc
out
cmp
clc
push
outsl
fcomps
jmp
cmpsl
clc
pusha
add
sar
clc
mov
mul
clc
push
add
cmp
xlat
dec
iret
mov
and
mov
push
add
shll
add
push
add
nop
scas
dec
mov
ret
clc
cwtl
push
mov
adc
cmp
movsl
clc
jp
cmpsb
clc
movsb
clc
out
mov
push
clc
outsb
sbb
xbegin
add
mov
clc
cmp
lods
xabort
loop
mov
clc
or
add
cli
loopne
mov
clc
lods
fimuls
and
add
mov
add
icebp
divl
add
xor
clc
push
add
mov
push
jb
add
lret
add
add
add
out
cmpsb
clc
sahf
repz
add
add
mov
cmp
clc
cltd
dec
vmwrite
clc
out
rcrb
add
xor
add
daa
clc
or
mull
clc
imul
clc
cmp
add
cwtl
aam
clc
hlt
ds
clc
cwtl
fidivrl
outsb
stos
inc
clc
scas
jmp
ficomps
ret
clc
push
add
cmp
add
jns
add
add
aaa
int3
aad
mov
jge
icebp
push
add
add
add
xchg
xchg
bound
add
jae
add
gs
arpl
add
cmpsb
clc
push
in
out
pop
adc
add
movsl
clc
cltd
cmp
aas
pop
cwtl
adc
jg
pop
lcall
dec
sub
push
inc
clc
fsts
xchg
pop
das
or
xchg
xor
add
clc
push
add
sbb
mov
in
pop
repnz
xchg
xchg
mov
add
fbstp
movsl
clc
testb
lret
int3
in
push
add
add
add
aad
cs
push
ret
rorl
stos
adc
add
bound
add
pop
xchg
sub
gs
jo
add
insl
jle
dec
mov
inc
add
dec
dec
adc
add
add
mov
rcrb
aad
xchg
jmp
clc
fs
push
ficomps
push
clc
bound
add
inc
add
cwtl
std
dec
dec
xchg
cmp
add
rcl
mov
clc
inc
add
mov
inc
add
loop
pop
xchg
pop
dec
inc
clc
mov
clc
fildll
push
jmp
add
jmp
jnp
and
add
xor
push
push
clc
pop
xor
add
mov
inc
clc
out
xor
add
fistl
loope
mov
add
sub
sbb
jns
mov
js
pop
cmp
clc
fistpl
xchg
jbe
pop
and
add
adc
add
cltd
adc
mov
int3
loop
pop
sbb
clc
pop
cwtl
cmpsl
clc
fimuls
popf
xchg
stos
sbb
clc
xabort
idivb
call
clc
stos
mov
adc
add
add
add
in
gs
cli
cmp
out
fcmovnu
mov
add
mov
inc
add
jge
clc
call
out
mov
cld
lock
jae
add
sar
or
je
clc
cmp
sbb
clc
pop
clc
cld
cmpsb
clc
cmp
add
xchg
push
add
fstpt
mov
stos
enter
cmpsl
clc
int
add
mov
clc
lock
into
pusha
add
push
test
ficomps
adc
add
add
add
ljmp
sar
add
int
push
sti
mov
xchg
nop
into
push
add
adc
add
arpl
add
sbb
dec
dec
mov
or
mov
add
inc
add
test
xor
add
cmp
pop
pop
jnp
mov
add
jns
pushf
push
call
add
sahf
cld
push
cld
lcall
aad
sub
sub
inc
clc
pop
jae
add
clc
iret
out
xchg
dec
mul
clc
stos
mov
add
adc
add
pusha
add
pop
jbe
ljmp
nopl
jbe
push
cs
xchg
mov
add
pop
push
clc
pushf
cmp
mov
clc
int3
enter
add
clc
xor
add
sar
mov
inc
clc
dec
data16
sub
push
add
int
add
mov
add
fisttpl
and
add
mov
icebp
data16
leave
notl
add
repnz
xlat
mov
push
inc
clc
repnz
mov
clc
mov
add
cmp
mov
in
mov
shl
clc
add
add
cli
jl
pop
add
add
add
jmp
clc
in
jmp
add
add
xchg
mov
cmp
test
add
xadd
cmp
add
shlb
add
clc
sub
add
xchg
sub
add
pop
in
mov
clc
pop
mov
clc
addr16
aad
xbegin
popl
add
ds
js
add
fiaddl
add
clc
adc
add
add
clc
test
add
pop
movsb
clc
scas
stc
add
cmpsl
clc
lods
cmp
clc
clc
push
dec
pop
sub
add
jnp
pop
test
or
mov
out
sub
clc
das
jl
clc
mov
add
mov
ss
pop
nop
cltd
cmpsl
clc
inc
clc
cmc
cmc
in
mov
clc
loopne
cli
mov
fmul
push
clc
adc
add
clc
stc
lock
inc
add
aad
clc
and
movsb
clc
out
inc
clc
sub
add
cmc
ret
clc
movsl
clc
xchg
push
add
push
add
fidivs
adc
add
clc
push
add
inc
add
push
mov
out
pushf
ret
movsl
clc
push
out
iret
cltd
test
ljmp
out
pop
pusha
add
lods
sub
add
add
add
mov
xchg
mov
clc
cmp
lods
movsl
clc
dec
push
add
ss
inc
clc
sar
clc
mov
xor
add
hlt
in
dec
mov
add
clc
xor
add
and
add
add
test
add
add
clc
sbb
clc
loope
add
in
lea
shll
mov
add
cmp
add
loopne
jno
add
add
leave
adc
add
add
push
pop
pop
xor
add
push
mov
fstl
add
clc
or
xchg
jmp
dec
fcmovnu
test
xor
add
cmp
jmp
lods
mov
je
push
cld
mov
xabort
clc
int
jp
mov
addr16
fisubs
cmp
add
clc
loop
dec
cmp
jns
mov
stos
jp
cltd
mov
inc
add
int
add
gs
fldl2e
adc
add
sbb
ret
add
xabort
add
lods
mov
add
jmp
clc
adc
add
add
and
jnp
cmp
fwait
cmp
add
mov
fists
add
xlat
nop
dec
daa
clc
js
cmp
lahf
and
add
add
add
add
sub
pushf
hlt
push
insb
mov
dec
imul
push
add
gs
out
pop
mov
fidivrl
add
iret
push
jge
das
inc
add
aas
mov
clc
loop
inc
clc
in
cmp
fwait
outsb
rcl
test
adc
add
lret
pop
clc
xor
add
ret
clc
pop
aad
inc
add
dec
rcrl
hlt
cmc
rorb
in
add
mov
mov
mov
add
ret
clc
sahf
outsl
clc
insb
inc
add
into
out
and
add
das
jns
clc
sbb
clc
or
xchg
rolb
jns
cmp
dec
mov
push
add
cmpsb
clc
in
lea
adc
add
add
add
add
dec
push
jns
test
out
sub
add
or
add
xchg
or
pusha
add
sbb
clc
daa
clc
xchg
fldt
loope
add
add
add
seto
inc
clc
mov
mov
add
push
clc
bound
add
leave
add
js
sbb
clc
psubsw
sub
clc
sub
mov
cmp
clc
cmc
hlt
lcall
loopne
inc
add
jle
jge
jbe
dec
test
clc
mov
sub
add
inc
add
mov
pop
sub
adc
add
or
add
xor
clc
gs
mov
dec
loopne
cmpsl
clc
clc
aaa
adc
add
sbb
fcomi
cs
push
mov
movsl
clc
push
add
pop
push
clc
mov
clc
stos
cmp
clc
mov
clc
clc
fldz
sbb
add
mov
add
mov
xchg
sbb
clc
mov
in
push
rcll
aam
mov
clc
push
or
in
out
decb
jmp
clc
push
aas
icebp
pop
jge
test
mov
mov
dec
insb
xchg
stos
ja
mov
add
jg
xor
inc
add
clc
add
add
clc
or
and
jae
add
push
add
mov
mov
add
sub
clc
and
add
shlb
push
add
xchg
push
add
fsubrl
add
xor
add
add
add
call
add
stos
xlat
cmp
jns
sbb
aas
mov
jmp
repz
lock
add
inc
clc
adc
add
clc
mov
and
add
mov
int3
in
int
fdivr
lret
lahf
dec
push
mov
mov
aaa
xchg
sbb
popa
add
cwtl
or
int
add
sti
adc
hlt
sub
clc
popf
loopne
sub
add
add
mov
sub
add
sub
outsl
pop
iret
ds
and
add
and
and
add
clc
xabort
clc
scas
jb
add
add
dec
pop
dec
sub
add
sar
sub
clc
dec
cmp
add
add
add
sub
add
loopne
ss
clc
pop
clc
xchg
mov
xor
bound
add
clc
sub
mov
lahf
mov
push
add
pop
sbb
clc
xor
add
clc
in
mov
add
icebp
cmp
fcoml
add
xchg
xchg
in
rolb
add
negl
and
sar
pop
clc
dec
jecxz
enter
add
and
jo
add
cltd
add
adc
add
jg
add
pop
addr16
fs
adc
add
clc
cli
inc
add
jmp
add
cmpsb
clc
sbb
fsubrs
mov
adc
add
filds
clc
and
add
add
outsl
cmp
add
xor
cmp
imul
mov
loop
gs
ss
gs
mov
xchg
int
add
and
xchg
mov
test
or
es
push
clc
incb
mov
dec
cld
stc
pop
push
clc
sub
in
inc
add
loopne
nop
pop
xchg
mov
dec
sub
int
add
add
add
adc
add
sti
xchg
add
add
lret
imul
stos
into
push
add
rcll
xor
add
clc
rcl
xchg
mov
add
clc
jo
add
mov
clc
sub
xor
in
aad
sbb
negb
jmp
and
add
lea
fistpl
mov
add
add
sub
add
dec
push
xabort
out
xchg
cmp
enter
mov
add
cmp
add
add
loop
test
data16
adc
push
cli
out
in
std
neg
cs
out
mov
jmp
clc
or
add
sbb
mov
sub
add
push
add
add
add
pop
jno
add
and
sub
pushf
push
add
fs
testb
add
outsl
paddw
add
inc
add
nop
pop
or
clc
jle
xbegin
add
mov
xchg
pop
stos
test
jl
sar
inc
add
pop
push
add
mov
add
jo
add
add
add
xor
ljmp
mov
xor
add
movsl
clc
out
out
fs
out
enter
clc
test
aad
add
icebp
js
clc
cmp
add
cmp
sahf
int3
push
add
xabort
add
pop
sbb
fs
ja
cmp
add
xabort
clc
lock
xchg
mov
xchg
loope
xlat
jg
inc
add
jg
mulb
add
clc
pushf
pop
inc
clc
xchg
sti
imul
xchg
lods
sbb
cmp
cld
xchg
add
xchg
cmp
or
bound
add
fildl
clc
and
add
clc
mov
add
adc
sbb
and
add
aaa
aam
mov
add
clc
adc
add
aam
sbb
pop
add
add
pushf
aaa
cmp
mov
push
jl
clc
pop
pop
mov
popf
mov
dec
xbegin
cmp
clc
mov
add
clc
jmp
lock
sbb
cmp
sbb
mov
insb
pop
clc
sub
xbegin
add
add
add
xchg
lock
clc
add
add
push
add
jg
adc
add
clc
bound
add
push
sub
sub
dec
push
add
movsb
clc
mov
add
clc
mov
mov
clc
mov
clc
pop
lea
gs
in
daa
clc
out
arpl
add
add
adc
add
mov
cwtl
lcall
add
outsl
adc
add
jmp
clc
xchg
movsb
clc
int3
and
add
add
out
int3
jmp
cmp
mov
clc
outsl
add
popa
add
add
add
add
jae
add
scas
nop
and
add
stos
inc
clc
loop
hlt
xabort
rolb
push
sti
lods
and
add
es
cmp
jg
out
cmp
or
mov
data16
enter
add
add
clc
adc
add
mov
mov
add
clc
mov
add
push
add
stos
mov
clc
icebp
jecxz
inc
clc
mov
cmpsb
clc
shll
xchg
lods
je
push
pop
fidivs
clc
cmpsb
clc
pop
sahf
push
xbegin
mov
clc
jmp
push
add
jl
dec
jns
sbb
sub
daa
clc
cld
push
add
das
push
add
imul
imul
clc
push
add
xor
add
add
push
add
in
inc
clc
mov
fwait
cmp
iret
test
xchg
add
push
clc
cmp
loopne
xchg
push
add
lods
adc
add
pusha
add
sub
sub
sub
add
sbb
jge
lcall
sarl
add
add
lock
aas
lods
adc
add
xor
push
mov
add
or
xor
clc
dec
jp
adc
add
add
mov
clc
loop
fiaddl
mov
clc
cmp
cmp
mov
dec
mov
fcoms
mov
clc
pop
daa
clc
fdivl
repnz
clc
pop
loope
adc
clc
pop
std
hlt
mov
sub
clc
fwait
pop
or
stc
mov
enter
add
stc
loope
ds
sbb
insl
fmull
arpl
add
cmpsb
clc
cmp
add
stos
dec
and
add
js
add
repnz
mov
ret
or
imul
clc
jnp
add
gs
or
add
xor
xchg
cmp
jl
sar
clc
lcall
loope
xabort
clc
or
mov
rcrl
out
or
fisubrs
xchg
test
aaa
addr16
stos
push
lcall
jns
clc
sbb
lahf
enter
clc
jecxz
xchg
clc
pop
test
fwait
sbb
add
add
fiadds
clc
fdivrl
pop
xbegin
arpl
add
inc
clc
pop
adc
add
add
addr16
mov
clc
cwtl
push
add
or
mov
clc
jns
pushf
adc
add
dec
xor
add
jb
xor
add
clc
icebp
pop
cmp
clc
lods
jns
clc
cli
and
add
xor
add
add
ds
clc
pushf
in
push
add
jne
clc
xchg
push
clc
outsb
mov
mov
and
add
add
add
ljmp
clc
inc
clc
push
adc
add
and
add
clc
xor
add
mov
daa
clc
jp
iret
adc
add
add
pop
test
nop
sbb
mov
add
xchg
adc
add
xor
push
pushf
sar
clc
adc
divl
add
kmovw
dec
xor
add
push
add
cmp
ds
jge
es
sub
out
inc
add
mov
jne
xchg
pop
inc
clc
popf
or
or
cwtl
cmp
or
add
inc
add
jo
add
clc
cmp
clc
push
mov
mov
cltd
pusha
add
inc
clc
mov
dec
out
pop
push
add
lock
add
mov
mov
sar
add
jb
add
add
xor
add
inc
clc
out
stos
das
cmp
add
scas
cli
test
cltd
sbb
mov
add
inc
add
mov
clc
or
popf
dec
sub
bound
add
add
add
daa
clc
xabort
cmp
inc
add
mov
mov
add
adc
add
pop
inc
clc
idivl
add
in
or
cmp
cli
push
add
cmp
add
fsubl
push
add
aam
movsl
clc
imul
or
fwait
popf
jp
outsl
leave
aam
clc
xor
pop
sbb
cmp
lods
loopne
loop
cli
pop
clc
in
test
pop
fs
xchg
fs
mov
add
ds
sbb
incb
clc
fxam
clc
scas
xor
add
push
outsl
mov
clc
stos
ret
clc
sti
and
xchg
je
jl
pop
inc
add
pop
clc
popf
jbe
or
in
mov
add
sbb
clc
adc
add
add
or
and
add
adc
add
push
imulb
mov
in
cmpsl
clc
loope
test
sar
jg
iret
loopne
mov
pop
cmp
add
or
clc
push
clc
je
fsubs
add
popa
add
cmpsb
clc
jle
iret
iret
mov
add
jae
add
inc
clc
fiaddl
add
icebp
lcall
add
clc
jge
add
jns
xor
dec
clc
jne
clc
mov
cs
sbb
jb
add
add
mov
cmp
cmc
jle
xchg
push
pop
cld
decl
push
sub
push
clc
xchg
or
clc
cmp
adc
clc
sbb
and
add
nop
mov
outsl
and
dec
push
clc
stos
lods
test
push
add
cs
clc
clc
inc
clc
jle
push
clc
push
pop
cmp
add
aaa
push
inc
add
mov
add
stc
dec
push
jl
loop
sti
adc
add
add
jne
jle
mov
clc
push
add
adc
add
add
cmp
insl
sub
add
out
flds
add
clc
cmp
aas
push
fsubl
add
fists
add
adc
mov
daa
clc
inc
add
adc
add
sbb
add
stc
movsb
clc
xor
add
pop
jae
add
out
out
out
cmp
add
cmp
push
jl
add
lea
mov
add
test
stos
test
add
and
add
jmp
clc
in
pusha
add
mov
jmp
add
mov
clc
cmp
clc
in
jne
sub
mov
pop
jb
add
mov
test
sti
jecxz,pn
cmp
push
pop
sub
clc
lods
jns
mov
xchg
imul
add
or
add
mov
ss
sti
jne
or
add
clc
mov
mov
mov
bound
add
xchg
push
icebp
xabort
daa
clc
cmp
xor
add
add
push
clc
mov
loop
movsl
clc
push
add
ljmp
mov
cmpsb
clc
mov
inc
add
call
clc
imul
xor
add
add
cmp
and
add
sub
icebp
das
push
sbb
and
add
clc
add
add
pop
clc
or
pop
cmp
add
adc
xor
add
cmp
clc
adc
add
data16
jl
cli
xchg
mov
and
add
push
add
sbb
add
add
or
mov
gs
repz
dec
and
add
lock
add
pop
daa
clc
mov
mov
clc
dec
mov
lea
inc
add
hlt
outsl
mov
adc
fnstenv
add
sbb
add
clc
pop
outsl
sub
in
inc
add
or
jp
cwtl
lahf
dec
cmp
sar
push
add
movsl
clc
iret
inc
add
mov
xchg
push
jmp
clc
pop
xor
add
clc
and
loopne
imul
mov
add
add
cmp
or
clc
incb
clc
icebp
xor
add
pushf
xchg
cld
dec
enter
test
outsl
pushl
add
add
int
shll
imul
mov
in
mov
add
sarl
mov
icebp
inc
clc
clc
cmpsb
clc
clc
xor
add
add
jae
add
jne
jmp
xchg
jle,pn
add
mov
push
clc
push
add
push
rcr
mov
inc
add
jbe
outsb
jne
mov
lods
jge
pop
dec
push
testb
fbld
repz
sub
popa
add
cltd
decl
clc
aad
lock
iret
sbb
aas
ja
or
cmp
clc
push
jo
add
add
xchg
push
lret
jge
clc
daa
clc
xchg
push
cli
cmp
add
mov
clc
xchg
xor
add
mov
add
xchg
sbb
test
pop
loopne
fdivs
clc
es
xchg
pop
mov
and
add
and
jae
add
add
add
jg
mov
cmp
jmp
xchg
xchg
outsl
or
add
test
or
cmp
xchg
dec
or
jmp
push
sarb
pop
dec
pop
jecxz
or
mov
pop
stos
push
add
sub
clc
xchg
mov
ljmp
cmc
mov
out
popa
add
or
clc
lret
adc
add
pop
test
and
and
add
add
add
fsubs
push
push
mov
xchg
jle
aad
push
jno
add
add
mov
sbb
fsts
add
add
and
add
ror
cmp
add
into
sub
dec
cmp
cwtl
cli
cltd
cmc
xbegin
clc
mov
adc
add
add
xbegin
adc
add
push
pop
mov
popa
add
mov
xor
add
jl
rcll
cmp
mov
pop
cmp
add
push
clc
test
fdivs
clc
adc
add
stos
cmp
clc
addr16
arpl
add
jns
fst
cmp
dec
xchg
cli
inc
clc
repz
clc
bound
add
xor
clc
cmpsl
clc
idivb
sbb
fdivrl
fsubr
xchg
pop
mov
add
into
cli
ret
or
add
inc
clc
mov
xor
fcomip
aad
add
ljmp
pop
xor
add
add
clc
stos
cmp
add
jae
add
clc
cltd
gs
mov
add
mov
pushf
cmp
test
pop
pop
xchg
fnstcw
xor
add
sahf
or
testb
lret
sahf
or
inc
add
sub
ret
clc
test
cmc
xor
add
cmp
pop
clc
push
clc
sbb
clc
and
dec
xor
add
cmp
clc
int
insb
jb
add
or
add
call
add
add
xchg
jno
add
sar
jle
clc
lret
sarb
insb
mov
adc
jae
add
mov
dec
cld
sub
dec
sbb
xchg
mov
add
jns
sbb
jle
fs
cmp
add
scas
sbb
fimuls
clc
ljmp
ret
clc
mov
fnstsw
mov
mov
outsb
mov
mov
add
add
jb
add
clc
mov
add
repnz
push
sub
ds
mov
fsubrl
in
popa
add
aam
arpl
add
scas
mov
dec
jnp
shl
clc
sbb
add
bound
add
or
aaa
sbb
out
fnsave
add
or
cmp
jbe
cmpsb
clc
adc
add
add
mov
lahf
lods
pop
shrb
cmp
add
xor
add
clc
sbb
clc
scas
cmp
insb
mov
dec
dec
mov
clc
repnz
shll
clc
cwtl
iret
adc
add
punpckhdq
add
cli
mov
clc
push
dec
adc
add
add
shl
out
and
add
icebp
xor
add
add
adc
gs
mov
add
add
fldln2
jge
in
addr16
push
add
push
xor
test
clc
fwait
or
mov
jp
add
stos
or
add
xor
add
sar
arpl
add
clc
das
dec
movsl
clc
call
clc
std
outsb
push
add
add
mov
add
pop
xchg
add
add
clc
in
ja
rcrl
jno
add
in
pop
lock
clc
mov
pop
and
add
or
add
cmp
jle
aaa
jg
clc
push
cmp
js
mov
pop
add
add
jno
add
into
and
add
mov
clc
push
cmp
clc
cmp
imul
add
add
clc
cmp
js
add
imul
clc
cmp
daa
clc
jecxz
lods
cli
js
xor
push
das
fildll
add
mov
daa
clc
xchg
xor
clc
sub
test
clc
gs
loop
mov
and
pop
shll
xchg
add
daa
clc
jle
add
add
jp
pop
jge
push
lahf
xor
add
mov
mov
in
mov
jl
or
daa
clc
mov
xbegin
in
cmp
clc
dec
std
add
add
sti
lock
mov
add
mov
lock
add
add
add
sbb
add
jno
add
add
cld
push
sar
adc
add
clc
jne
clc
bound
add
clc
xor
add
rorb
push
mov
pop
clc
push
in
aaa
mov
mov
ret
imul
xlat
push
add
dec
xor
add
clc
push
add
negb
sti
mov
aam
xor
add
stos
fdivs
add
jae
add
lock
push
push
add
jae
add
addr16
test
ret
clc
sahf
or
pop
lret
add
add
inc
clc
xor
clc
fnstsw
or
add
stos
ret
adc
add
addr16
add
lods
cmp
clc
mov
add
clc
mov
popf
loop
xor
pop
loopne
test
add
xchg
pushf
out
xchg
or
add
stos
add
dec
xabort
clc
add
add
lret
cmc
loope
cmc
push
add
stc
xchg
insl
lahf
mov
icebp
fisttps
pop
adc
add
pop
mov
ljmp
int3
pushf
jnp
jl
inc
clc
adc
add
add
hlt
cli
or
inc
add
or
insl
jbe
or
clc
aam
jnp
in
mov
into
or
sub
jmp
push
add
clc
xbegin
add
clc
inc
clc
mov
add
clc
mov
add
clc
adc
add
add
xabort
bnd
clc
hlt
or
xor
add
mov
pusha
add
iret
in
push
add
popf
inc
clc
loopne
mov
clc
clc
jge
clc
pop
pop
inc
clc
jbe
clc
xchg
dec
mov
add
mov
mov
pushf
add
clc
imul
add
add
sar
clc
cltd
sar
insl
inc
add
xlat
es
or
in
cmp
sar
dec
mov
cs
cmp
dec
fs
pushf
mov
sar
pop
dec
add
add
sbb
clc
idivl
add
ja
clc
mov
push
add
scas
jl
push
xor
add
clc
mov
adc
add
cs
int
jl
mov
cmp
pop
addr16
sbb
sub
out
sbb
or
clc
enter
mov
mov
xor
xchg
test
mov
add
and
add
clc
cmp
ljmp
clc
push
out
test
cwtl
and
add
add
stos
inc
add
insb
cmpsb
clc
dec
scas
add
add
shlb
bt
cmp
add
jbe
stos
sub
push
add
aaa
clc
pop
aam
fidivs
clc
sub
xchg
sub
add
xor
add
clc
pop
clc
jge
clc
push
clc
mov
push
fwait
jno
add
add
cli
inc
add
mov
in
jb
add
clc
sbb
mov
clc
sub
mov
sti
rcll
add
mov
in
int
mov
mov
jnp
clc
mov
cmp
add
bound
add
cmp
add
lods
sar
sarb
arpl
add
mov
push
clc
xlat
loopne
and
cld
lcall
stc
add
add
insl
in
js
add
xor
add
xchg
std
jmp
mov
add
jo
add
adc
add
dec
cmp
mov
aas
mov
fwait
push
add
mov
mov
add
fld
clc
or
cmp
dec
rcrb
jae
add
add
shll
clc
out
stos
fcmovbe
out
mov
in
jne
aam
add
mov
pushf
rcrl
shll
sar
pop
fistpl
incl
add
add
xabort
lret
xchg
lock
fs
popl
movsl
clc
jmp
jnp
clc
mov
add
cwtl
mov
adc
add
and
add
jb
add
and
inc
add
jo
add
push
clc
pusha
add
xor
add
clc
data16
in
pop
jnp
stos
popf
int3
pop
ret
clc
and
fs
inc
add
movsl
clc
pushf
and
add
clc
cmovb
add
out
mov
add
mov
add
cmc
sbb
add
jl
fisubrl
add
add
push
add
cwtl
gs
xor
add
mov
add
data16
and
add
scas
pop
loop
and
add
add
add
push
push
add
es
inc
clc
xor
add
das
into
push
add
dec
test
mov
clc
inc
clc
mov
cltd
dec
incl
movsb
clc
loopne
jns
clc
movsb
clc
clc
cmp
in
int
pop
push
add
dec
push
clc
int
loop
addr16
pop
pop
clc
cmp
inc
add
mov
leave
mov
clc
jl
add
or
jl
sti
xabort
cwtl
jmp
ss
cld
or
inc
clc
aad
clc
lahf
fwait
cmp
clc
adc
add
mov
nop
adc
add
clc
dec
jno
add
clc
icebp
scas
faddl
movsl
clc
sub
push
inc
add
push
and
clc
in
addr16
jecxz
inc
clc
mov
out
clc
jb
add
pop
clc
cmpsb
clc
xor
add
int
add
sub
add
clc
fadd
clc
jne
in
mov
in
jmp
push
add
push
add
xor
add
lret
lods
adc
add
jnp
clc
cmp
fcompl
mov
push
add
sbb
mov
sub
and
add
mov
xchg
sbb
clc
mov
ss
cmp
sbb
add
je
push
add
add
stos
ret
clc
aam
or
clc
fidivs
pop
lods
in
mov
mov
add
cltd
loope
push
inc
add
lret
and
add
cmpsl
clc
ret
clc
jae
add
add
add
clc
pop
cmovne
lods
and
add
loop
out
or
clc
fs
jecxz
clc
outsb
dec
mov
dec
out
aas
imul
mov
clc
and
add
add
dec
sbb
clc
jmp
clc
pop
js
data16
cmp
jns
dec
fsts
clc
cmp
add
popa
add
lahf
fsubrl
xabort
add
das
sbb
add
hlt
mov
add
in
ss
xor
add
add
add
stc
adc
lods
dec
jbe
clc
cmpsb
clc
data16
sti
pushf
stos
out
clc
scas
pop
fldl
add
clc
jno
add
mov
mov
dec
jnp
xchg
xor
inc
clc
je
fdivrs
scas
push
inc
clc
dec
push
pop
inc
add
daa
clc
das
add
add
clc
mov
dec
and
add
mov
mov
add
aas
fistpll
inc
add
sub
fildl
add
clc
js
adc
add
pushf
cmp
fcoml
mov
or
inc
add
cmpsb
clc
pop
pop
rcrl
rorb
test
repz
mov
ljmp
rorl
loopne
ss
add
sub
aam
stc
jle
sar
aad
jg
and
addr16
sub
sar
clc
push
add
push
cwtl
lret
dec
in
jmp
jle
into
pop
clc
mov
clc
in
cmp
and
ret
repz
dec
adc
add
clc
xchg
jnp
clc
pop
mov
dec
or
into
imul
es
xor
add
sub
push
push
loop
xchg
pop
cmp
clc
mov
clc
lahf
jge
out
clc
mov
fs
sar
clc
mov
dec
push
mov
sarl
clc
fimull
shll
jmp
dec
push
add
cmp
sub
add
cmp
clc
lods
adc
add
adc
or
jno
add
push
add
ds
cmp
pop
mov
cld
jecxz
nop
pop
adc
add
pop
inc
clc
in
mov
clc
mov
xchg
inc
clc
and
add
add
cltd
jge
cmc
push
add
cmc
dec
xchg
repnz
sar
imul
add
xchg
iret
mov
clc
or
pop
cmp
clc
stos
and
add
inc
add
jmp
mov
mov
add
test
clc
fsubrs
stc
bound
add
clc
xor
add
clc
data16
sti
into
push
add
xchg
ds
mov
xchg
call
add
lret
lret
pop
out
dec
ds
pop
mov
and
add
add
xchg
jne
or
clc
or
bound
add
mov
jle
cmp
push
push
ret
clc
rcll
or
add
sub
add
cmp
xchg
icebp
push
addr16
arpl
add
add
sbb
clc
scas
mov
pop
scas
ds
clc
or
imul
add
cmp
pop
sub
or
scas
push
dec
shll
add
pop
es
fildll
inc
clc
test
fs
xor
add
add
add
ss
cltd
icebp
shrl
bound
add
xchg
mov
add
dec
sahf
cs
es
das
arpl
add
push
mov
ret
clc
cmp
fucomi
push
push
add
cli
dec
leave
rclb
clc
cmp
leave
inc
clc
fisubl
mov
cli
fistpl
push
add
jns
jp
adc
add
add
clc
lret
clc
jmp
clc
imul
push
adc
add
dec
pop
inc
clc
push
clc
xchg
hlt
mov
lret
dec
cmp
add
testb
add
add
add
clc
cmp
xbegin
int3
fdiv
mov
idiv
bound
add
jle
add
jmp
add
fwait
cmp
add
repz
dec
jae
add
mov
sub
out
xbegin
lret
cmp
shrb
fwait
mov
clc
jmp
ss
clc
pop
out
data16
out
ljmp
fnstenv
add
or
clc
mov
lcall
add
add
imul
and
add
clc
xor
add
add
lods
xchg
adc
jecxz
cmpsb
clc
push
dec
push
add
cli
test
or
push
insb
cmpsl
clc
pop
dec
mov
insb
pushf
jmp
sti
mov
shlb
in
pop
add
add
mov
pop
jns
popa
add
into
pop
aad
mov
sub
daa
clc
outsb
lahf
pop
cmpsl
clc
cmp
out
or
mov
mov
fsubrl
stos
inc
add
ds
add
add
add
add
sub
add
imul
clc
int
sub
aad
neg
mov
jae
add
jp
inc
add
std
cmp
pop
pop
clc
add
add
out
push
add
xchg
xabort
addr16
jmp
clc
xchg
and
add
add
mov
and
add
out
xchg
aaa
jp
mov
in
dec
and
clc
pop
xchg
sbb
xchg
mov
sbb
sahf
cmp
fs
xlat
push
cmp
clc
add
add
push
clc
and
add
xabort
pop
stc
das
nop
mov
clc
mov
cmpsb
clc
inc
clc
aam
clc
hlt
push
add
sbb
add
mov
aam
lahf
cli
add
add
clc
and
jle
adc
jnp
out
je
mov
clc
dec
ret
mov
pop
push
add
pusha
add
jg
xchg
mov
add
test
clc
lods
shll
add
jae
add
push
add
add
add
xor
add
jb
add
push
push
dec
jl
xor
add
fsubs
add
clc
in
lock
clc
imul
xor
cmpsl
clc
lock
mov
fs
data16
and
add
add
add
add
or
dec
push
add
in
sub
clc
bound
add
cmp
jnp
push
cmp
clc
test
neg
sub
add
adc
add
clc
mov
testb
daa
clc
loope
pushf
or
add
sbb
clc
mov
addr16
cmpsb
clc
push
sahf
add
add
clc
xor
xor
push
inc
clc
mov
or
cmp
xchg
push
call
out
addr16
or
clc
fldcw
mov
ja
jne
xchg
push
add
fildl
add
shrb
add
cmp
ficomps
push
mov
sub
clc
clc
sbb
clc
push
xabort
insl
fadd
clc
dec
dec
in
jle
add
mov
clc
inc
clc
mov
add
jmp
data16
scas
scas
or
cmp
ret
clc
and
push
add
mov
clc
dec
cmp
adc
add
adc
add
add
inc
clc
fists
add
and
add
add
add
cmc
xchg
xor
add
add
sub
add
lock
add
pop
jmp
pop
clc
fnstsw
scas
push
icebp
xchg
cmpsb
clc
xabort
clc
xor
add
add
jae
add
iret
dec
xchg
imul
clc
mov
push
nop
xchg
fdivr
test
and
add
xor
add
add
clc
sbb
add
mov
add
int3
push
add
je,pt
lcall
xabort
xbegin
je
add
pop
mov
jne
add
mov
add
imul
sbb
mov
clc
xabort
add
cmp
fsubl
add
ja
sbb
add
mov
push
add
neg
pop
cld
push
mov
ficompl
inc
add
arpl
add
out
ljmp
clc
xchg
into
mov
gs
gs
mov
mov
add
dec
jo
add
sub
xor
add
idiv
mov
mov
mov
add
pop
outsb
lock
mov
sbb
push
stos
nop
jbe
ss
lahf
std
in
repnz
pop
push
into
sbb
cmp
add
or
add
inc
clc
xlat
in
mov
fcmove
roll
and
add
clc
lret
jne
mov
clc
loop
add
add
mov
cmp
xchg
icebp
push
add
cmp
divl
add
jno
add
clc
dec
fistps
clc
movsb
clc
out
add
xor
inc
clc
aad
jbe
clc
ds
xchg
inc
clc
sbb
mov
jp
out
mov
ljmp
repz
add
add
fists
jb
add
add
add
mov
add
cmp
repz
lahf
xor
add
push
add
xchg
or
clc
sbb
jns
inc
add
cld
and
add
inc
clc
or
clc
sbb
clc
dec
xchg
insl
mov
add
scas
pop
xor
add
jnp
clc
leave
jmp
daa
clc
outsb
cmp
push
fsubrs
stos
jp
add
sarl
in
lock
out
mov
adc
pand
stos
lahf
icebp
add
add
stos
jns
in
mov
add
add
sar
pop
div
in
jns
fnstcw
cmp
clc
rol
clc
adc
add
notb
cmp
clc
inc
clc
test
mov
loop
add
add
das
add
add
test
jnp
cmp
xchg
cmp
add
sbb
add
scas
push
clc
ja
add
sbb
popa
add
pop
sub
clc
ds
add
push
add
xchg
and
add
pcmpeqd
push
clc
lcall
clc
push
std
stos
sahf
add
add
jae
add
addr16
je
sbb
sub
push
push
add
and
add
into
popf
add
add
scas
ficoms
clc
dec
outsb
in
in
jae
add
sbb
fdivs
push
divb
add
adc
add
arpl
add
mov
add
sub
imul
push
push
push
add
cmp
imul
cs
add
stos
fdivl
add
clc
mov
in
add
sub
sub
push
jle
mov
clc
cmpsb
clc
cmp
clc
dec
sarb
mov
mov
add
aam
clc
clc
xchg
xor
add
add
add
xor
add
in
add
add
or
fistl
sub
and
add
dec
in
in
sub
add
clc
inc
clc
xabort
mov
data16
bound
add
push
add
cmp
cmp
clc
cmp
into
mov
add
sub
add
xchg
add
add
clc
mov
dec
incb
imul
mov
in
lock
mov
sti
jg
sbb
mov
in
in
adc
add
clc
je
lea
cmp
clc
pusha
add
push
add
cmp
add
clc
sbb
add
add
add
mov
mov
push
aaa
cli
lods
jno
add
repnz
cmc
ljmp
sub
adc
add
insl
fldl
cmp
inc
add
leave
pop
sbb
add
xor
add
add
pop
mov
xor
add
add
clc
inc
add
jae
add
add
clc
xor
clc
xchg
push
jecxz
pop
xor
add
dec
data16
pusha
add
and
add
clc
lahf
outsb
clc
stos
inc
clc
push
repz
and
add
mov
cmp
call
pop
out
mov
divb
add
add
pop
mov
dec
or
jmp
clc
xchg
mov
clc
fldenv
xlat
mov
jle
test
fidivl
es
insb
cltd
push
das
popa
add
xor
add
add
cld
ret
clc
xchg
outsb
lods
pop
mov
aas
push
ret
clc
xchg
adc
add
ret
add
add
clc
cltd
pop
in
scas
xor
add
xor
add
add
addr16
mov
sub
je
adc
add
clc
cmp
out
mov
jge
daa
clc
mov
es
movsb
clc
fbld
ret
cmp
fcomps
clc
and
add
push
push
jne
test
movsb
clc
push
enter
in
test
ss
ds
or
add
outsl
rorl
push
ja
add
fistpll
push
mov
and
mov
cmp
mov
and
add
cmp
push
add
add
add
add
testl
push
aas
cmp
add
lret
mov
mov
in
cmp
clc
cmp
loopne
ljmp
push
fwait
mov
cmp
inc
clc
mov
mov
imul
add
add
inc
clc
test
icebp
clc
jns
clc
xchg
enter
add
mov
xchg
in
loope
add
add
add
decl
jns
clc
popf
mov
je
fs
pop
xlat
stos
xor
mov
call
clc
sbb
adc
add
lods
test
add
add
add
data16
adc
add
add
sahf
and
add
fwait
decl
xchg
mov
fmul
mov
shll
add
add
add
cmp
hlt
cmp
aam
xor
clc
add
clc
fwait
jbe
add
ss
stc
negb
push
aam
clc
jno
add
fnstsw
stc
add
add
mov
clc
or
mov
clc
cmp
lods
cmp
add
xchg
adc
add
xchg
sbb
add
sbb
clc
shrl
add
add
clc
xor
add
jge
cmp
add
aam
imul
add
mov
cmc
cmp
sahf
test
adc
inc
clc
out
fs
push
or
scas
dec
push
add
fwait
pop
aaa
shrb
jno
add
call
inc
clc
jl
popf
and
add
mov
decl
clc
push
add
jnp
clc
imul
rolb
add
bound
add
in
mov
clc
xbegin
add
add
add
inc
clc
stos
mov
add
sbb
cmp
lret
xor
ret
js
fadd
clc
xlat
hlt
lret
xabort
add
add
aaa
pop
sbb
cmpsl
clc
cli
xchg
data16
cmp
add
stos
and
add
and
add
clc
pop
punpcklwd
add
fwait
push
push
inc
clc
pop
clc
lods
mov
add
add
sbb
clc
repnz
mov
imul
cmp
clc
and
cmc
xchg
dec
fs
or
sub
sub
push
or
add
pop
mov
add
add
cmp
add
add
add
clc
push
hlt
pop
add
add
leave
sbb
lods
mov
pusha
add
xchg
leave
pusha
add
ljmp
sar
fisttpl
lret
mov
clc
sbb
cmpsb
clc
dec
mov
test
mov
xabort
out
adc
add
xor
clc
sub
dec
ljmp
sub
rol
clc
test
loopne
mov
cmp
sbb
cmp
lahf
or
clc
mov
sbb
insl
jnp
add
add
sahf
sahf
bound
add
xchg
fcompl
movsb
clc
xor
add
push
ret
clc
sbb
je
or
add
add
mov
inc
add
jno
add
sub
xchg
xor
add
cwtl
stc
inc
add
bswap
shrb
dec
sbb
test
shl
ds
xlat
adc
clc
cltd
jp
and
add
cmp
sar
outsl
aas
pop
jecxz
ficompl
add
adc
add
add
xchg
cmpsl
clc
fs
ds
clc
push
add
aad
push
and
add
stos
sub
rcll
icebp
inc
add
jge
mov
aam
clc
sti
stos
call
insb
daa
clc
scas
sahf
cmp
add
cmp
out
ljmp
inc
add
jmp
test
xchg
mov
dec
ja
mov
mov
clc
sub
scas
fcmovu
iret
mov
clc
fwait
add
add
pop
clc
js
push
add
inc
clc
test
push
test
add
arpl
add
mov
pusha
add
cli
dec
sub
clc
scas
adc
add
sub
stc
mov
jne
repnz
lret
clc
and
add
clc
or
add
out
sbb
fwait
gs
jg
inc
add
enter
jne
pop
cmp
sbb
fs
jb
add
inc
clc
enter
int
pushf
add
add
addr16
xor
mov
push
sbb
and
add
add
adc
add
cltd
int3
dec
pop
fs
es
pop
nop
iret
sub
clc
sar
popl
test
mov
clc
push
jne
jbe
clc
flds
aaa
or
add
dec
test
or
clc
xor
add
shlb
add
jl
push
xabort
clc
cld
flds
add
inc
clc
faddp
clc
mov
and
add
jl
push
clc
fidivl
push
add
add
add
clc
insb
test
mov
clc
pop
inc
add
scas
inc
clc
mov
insl
jecxz
and
add
dec
xbegin
adc
add
mov
lcall
fiaddl
idivb
outsl
clc
out
ja
cli
shll
sbb
stos
jne
clc
shll
xchg
and
add
add
mov
clc
or
shll
clc
adc
clc
sub
clc
mov
clc
sti
xchg
pop
mov
add
push
out
fmulp
mov
jg
add
add
add
cmp
clc
jl
ret
clc
push
clc
data16
adc
add
jb
add
add
inc
add
dec
xchg
mov
pushf
out
repz
clc
enter
es
es
adc
add
mov
xchg
js
clc
inc
add
stc
ds
sbb
mov
imul
cmpsl
clc
testb
stos
jno
add
mov
inc
clc
pop
dec
sub
inc
clc
mov
sar
xchg
sub
jge
in
stc
xor
add
jge
adc
xchg
leave
insb
psraw
cli
mov
mov
adc
add
add
xchg
mov
dec
push
jbe
clc
mov
clc
push
add
daa
clc
sar
clc
test
xchg
call
jno
add
nop
adc
loopne
inc
clc
jne
clc
stc
inc
add
pop
popa
add
xbegin
mov
clc
xchg
lret
loop
and
add
inc
clc
add
add
je
xchg
aam
clc
sar
add
push
jno
add
add
inc
clc
fildl
clc
and
add
mov
stos
mov
leave
vrsqrtps
add
xchg
push
jae
add
out
data16
dec
loopne
mov
add
add
and
jbe
lea
add
add
push
pusha
add
mov
add
stc
mov
cs
lret
popa
add
add
add
gs
jnp
stc
and
add
jbe
arpl
add
add
xchg
enter
movsl
clc
sub
push
add
mov
shlb
jmp
pushf
cmp
push
push
rcrb
in
out
dec
sbb
add
or
repnz
out
fs
sub
mov
sahf
sbb
inc
clc
lret
movsb
clc
cmpsl
clc
push
add
push
add
cmp
add
mov
clc
scas
push
fdivl
add
insb
dec
sub
add
mov
add
add
add
add
cmpsb
clc
jbe
sti
xabort
jo
add
es
into
sahf
sahf
sbb
clc
push
fistpl
push
dec
jb
add
gs
jns
adc
cli
jne
add
popa
add
mov
clc
pusha
add
xchg
pop
jl
clc
mov
add
add
xchg
adc
clc
and
add
mov
mov
lret
hlt
ljmp
inc
clc
add
add
mul
clc
repz
into
add
add
pop
clc
jge
jle
mov
ret
clc
int3
movsb
clc
lcall
cmp
repz
add
cltd
adc
push
loopne
add
add
mov
push
mov
jae
add
clc
push
clc
neg
notb
gs
mov
or
imul
add
push
into
ljmp
add
jae
add
push
add
std
pop
or
push
add
insl
sbb
imul
clc
cltd
out
cld
xchg
sbb
add
or
jne
and
add
clc
sbb
clc
add
add
cli
mov
sub
es
es
mov
int
add
inc
add
add
add
sbb
add
xlat
jnp
clc
out
inc
clc
jg
inc
clc
out
push
add
jae
add
push
add
or
rclb
imul
test
xchg
clc
adc
add
rcl
out
pop
imul
bound
add
clc
daa
clc
and
ret
popa
add
imul
add
mov
test
sbb
clc
ja
add
leave
shl
clc
cli
repz
clc
mov
lock
call
add
int
push
icebp
nop
es
pop
fs
in
jp
xor
add
movsl
clc
sbb
xor
xor
add
add
add
xchg
jne
clc
mov
jmp
inc
clc
cli
mov
adc
add
clc
xabort
jg
push
xchg
mov
add
add
and
add
add
sub
add
ljmp
das
jge
cmp
out
mulb
clc
pop
cmp
jmp
clc
mov
std
or
lahf
adc
add
addr16
mov
add
in
lcall
xor
add
dec
inc
add
call
xor
mov
mov
arpl
add
lahf
outsb
or
sub
add
add
sub
add
mov
xchg
pop
jle
add
lahf
and
add
add
mov
add
clc
fisttpl
or
cli
cmpsl
clc
push
add
addr16
sbb
cltd
repnz
ds
cmp
add
int
clc
shrb
jge
add
test
je,pn
in
cmp
add
in
mov
mov
mov
add
mov
add
lret
sub
push
jecxz
pop
sbb
dec
lret
clc
stos
lret
cmp
loopne
xchg
xchg
mov
pusha
add
sahf
sub
add
xchg
insl
xor
add
add
dec
scas
pop
dec
nop
push
fdivrs
add
add
sbb
mov
lock
clc
adc
add
add
add
in
dec
test
scas
pop
fstp
inc
clc
mov
adc
clc
ret
mov
repz
clc
movsb
clc
sub
fdivrp
mov
push
clc
arpl
add
clc
addr16
jge
xchg
lock
add
lahf
cmp
out
dec
xchg
cmovs
xchg
sar
popa
add
jns
mov
out
dec
in
cltd
popf
mov
jns
mov
add
jge
in
es
movsb
clc
fidivrs
push
add
aam
clc
js
aas
and
fucomip
repnz
fsubrs
add
push
jecxz
ljmp
dec
ljmp
clc
mov
add
dec
mov
or
xchg
xchg
popf
stc
add
add
hlt
dec
in
push
dec
sti
jg
adc
add
pop
shll
and
or
or
add
mov
clc
fmuls
cwtl
push
cmp
add
push
add
push
add
push
cmp
jecxz
out
xor
lret
cltd
out
sar
mov
sub
fstpt
pop
sar
inc
clc
cmp
clc
out
sbb
mov
sbb
add
adc
clc
xchg
sbb
jnp
push
pop
mov
adc
add
ss
jnp
clc
or
add
add
mov
add
add
clc
sub
jb
add
push
sarb
fcoms
lret
sbb
add
lea
clc
fnstsw
inc
add
lret
add
mov
xbegin
repnz
imul
or
clc
int3
scas
roll
ret
clc
or
clc
inc
clc
pop
hlt
push
clc
xor
add
or
clc
mov
jns
xabort
aam
push
jg
in
icebp
jae
add
stos
hlt
clc
xlat
sahf
jae
add
add
pusha
add
jo
add
mov
dec
jo
add
sbb
fistl
add
xor
add
inc
clc
push
clc
dec
divb
imul
out
jp
dec
inc
clc
xchg
mov
dec
or
mov
clc
ljmp
add
clc
sar
clc
pop
addr16
hlt
sub
clc
xchg
xchg
adc
add
add
clc
sar
clc
cmp
add
and
add
clc
lret
ljmp
add
dec
movsb
clc
mov
xrelease
adc
add
fidivrs
mov
mov
jl
clc
fcom
unpckhps
push
add
inc
clc
inc
add
cmpsb
clc
imul
aas
dec
fldenv
add
dec
fldenv
add
inc
add
mov
mov
clc
ljmp
in
mov
add
clc
daa
clc
outsl
stc
cmp
jb
add
xor
movsb
clc
fstps
out
int3
fsubrs
repz
add
pusha
add
inc
add
dec
enter
enter
xlat
cli
xabort
aam
fidivrl
jecxz
jnp
clc
mov
icebp
loop
cmp
cmp
clc
sub
add
mov
clc
mul
clc
dec
and
and
add
lahf
sbb
sar
aad
add
dec
js
cmp
add
clc
leave
stos
fcos
movsl
clc
fdivs
add
or
lods
sti
dec
out
push
clc
mov
ja
rcl
pop
jg
pop
add
add
add
das
pop
clc
sbb
clc
jp
xabort
mov
lcall
add
xchg
inc
clc
lods
and
add
mov
mov
lods
mov
aaa
pushf
aaa
lret
aaa
xor
add
inc
add
sbb
add
aaa
xchg
cli
push
mov
icebp
test
jae
add
and
daa
clc
mov
add
add
xor
add
push
or
add
add
add
ficompl
clc
lods
lods
jle
jle
clc
inc
clc
outsb
and
jecxz
test
push
add
push
add
jge
clc
dec
pop
add
add
das
leave
fucomi
inc
add
test
insb
cmc
mov
clc
sub
add
push
fdivrl
pop
stos
pop
jmp
out
adc
add
add
in
repz
inc
add
xchg
out
int3
std
sbb
cmp
mov
jecxz
mov
cmc
into
pushf
gs
push
sbb
shl
clc
sbb
add
mov
push
add
push
fwait
jmp
push
add
xchg
inc
add
in
xchg
movsb
clc
sbb
mov
inc
add
or
xor
add
inc
clc
mov
clc
jbe
clc
and
add
in
push
lock
sbb
add
mov
cwtl
pop
jge
clc
loop
insl
push
aam
sbb
push
cld
pop
inc
add
sar
mov
dec
lret
sbb
add
fbld
outsb
mulb
test
sbb
inc
add
mov
clc
ret
clc
xbegin
add
out
mov
xabort
add
dec
cmp
add
scas
dec
dec
adc
add
clc
and
add
mov
add
add
ficomps
mov
mov
dec
sbb
mov
clc
mov
sbb
mov
clc
rclb
push
add
bound
add
add
mov
addr16
js
lcall
add
sbb
dec
clc
and
add
add
enter
test
inc
add
jns
add
in
mov
adc
mov
inc
clc
push
add
push
clc
sub
cs
popl
add
fwait
xor
add
and
xchg
dec
cmp
clc
aas
xabort
cmp
clc
inc
add
jns
xchg
shl
clc
sbb
rorl
sbb
fldt
add
clc
jle
add
clc
adc
add
add
mov
or
roll
dec
sub
clc
xor
add
clc
jne
add
in
int3
test
and
add
clc
push
add
xor
add
push
cmp
sub
add
jg
cmpsl
clc
imul
sbb
cmp
inc
clc
addr16
shlb
push
add
jb
add
clc
sarb
fdivs
mov
dec
pop
pushf
out
in
jo
add
imul
add
bound
add
fadds
in
lahf
cmp
clc
xchg
jl
add
add
add
stos
adc
add
clc
mov
je
adc
add
or
sbb
jl
jl
clc
addr16
ja
adc
pop
clc
lods
adc
add
sub
pop
push
add
mov
pusha
add
jg
movsb
clc
rclb
jb
add
mov
clc
push
add
stos
push
add
aad
add
lods
fisubrl
jl
jp
add
ljmp
add
xlat
mov
mov
or
mov
clc
das
xchg
xabort
sub
push
fsubrs
clc
xor
add
cmp
or
mov
add
mov
fs
mov
clc
push
add
mov
stc
cmp
popl
adc
xor
add
lret
popf
dec
std
adc
add
add
mov
sub
add
shl
clc
xor
add
xchg
lods
xor
add
add
insl
pop
add
add
daa
clc
stos
mov
ret
jbe
in
loopne
sarb
or
add
sub
in
lcall
and
add
clc
inc
add
insb
cmp
add
popf
xor
push
cmp
dec
lods
stos
or
xor
add
in
loope
xchg
loopne
js
imul
in
xor
add
add
ljmp
jne
xchg
gs
fnstsw
pushf
pop
clc
push
add
js
out
shl
cmc
std
sub
add
add
int
add
clc
out
scas
adc
add
clc
mov
add
adc
add
loope
push
dec
mov
clc
cmc
mov
popa
add
xchg
push
sbb
clc
jg
add
aaa
pop
sbb
dec
adc
push
add
and
add
or
sar
aas
outsl
loop
jecxz
inc
clc
mov
not
je
into
xbegin
test
daa
clc
push
filds
mov
clc
nop
cmp
lahf
or
xabort
sbb
clc
hlt
push
inc
clc
cmp
aad
xor
add
xchg
pop
nop
pop
xor
clc
insb
cmp
cmpsl
clc
jp
in
mov
aam
dec
movsl
clc
push
xabort
clc
setge
xchg
jne
mov
clc
xlat
add
add
add
adc
add
sbb
ds
stc
inc
add
ds
cmp
call
gs
imul
movsl
clc
xchg
int
mov
add
movsb
clc
aaa
inc
clc
mov
xbegin
aad
clc
fadds
add
rorb
adc
add
cs
ret
push
add
ja
shlb
adc
fiaddl
add
add
xchg
or
popf
mov
ds
jae
add
xchg
out
mov
cmp
das
popf
popa
add
mov
inc
add
jae
add
jl
clc
or
fcomip
fistpl
xchg
cltd
cwtl
cld
dec
pop
sub
mov
inc
clc
das
adc
add
pop
clc
mov
clc
mov
clc
ljmp
add
inc
add
sub
clc
xor
add
fisubrl
adc
add
clc
testl
call
fwait
addr16
sahf
ljmp
add
add
push
clc
mov
clc
jl,pn
sbb
test
iret
pop
mov
clc
in
jb
add
push
add
lahf
pop
clc
pop
pusha
add
jae
add
sbb
popf
testl
mov
add
jae
add
lea
add
in
jl
push
sti
fnstcw
adc
add
dec
aad
clc
pop
nop
sub
add
ja
cmp
xbegin
leave
lahf
sub
nop
sbb
and
int3
fiaddl
add
loop
push
clc
cmp
outsl
cmc
sti
ja
mov
cmp
clc
adc
add
repz
xchg
sti
leave
lahf
dec
lcall
mov
add
ficomps
clc
lahf
pusha
add
ret
clc
jl
mov
push
add
mov
clc
clc
xchg
adc
add
data16
lahf
test
pop
pop
pop
mov
sti
out
xchg
or
test
dec
jae
add
add
clc
fnstenv
add
add
aam
and
add
clc
add
add
sub
add
xor
or
jmp
repnz
add
sar
push
push
add
add
add
clc
daa
clc
ret
clc
daa
clc
add
add
xchg
pop
mov
mov
mov
and
add
inc
clc
call
add
in
push
add
and
add
xchg
push
add
int3
imul
dec
iret
imul
clc
outsl
xor
add
add
dec
pop
clc
shlb
add
lret
push
add
enter
clc
gs
inc
clc
lock
xlat
fidivs
clc
sub
jo
add
and
add
add
sar
sahf
push
add
fildl
add
add
add
test
clc
sar
clc
imul
clc
xor
add
add
je
clc
mov
imul
clc
inc
add
lcall
clc
jne
clc
rcrb
cmp
stc
scas
adc
add
mov
fcomp
rorl
clc
lods
dec
out
xor
add
movsl
clc
dec
sar
nop
push
pop
pop
jo
add
push
add
jle
clc
jmp
insl
insb
std
and
add
clc
aam
add
mov
clc
cs
and
add
cmp
add
jae
add
out
cmp
mov
add
add
pop
test
xchg
and
xor
add
fsubr
fnsave
add
add
out
aam
add
jno
add
cmp
inc
add
push
and
clc
out
aaa
dec
cmp
mov
test
cmp
add
jp
sar
sub
iret
mov
clc
fldcw
clc
pop
and
add
cmp
dec
jo
add
or
inc
clc
jno
add
cmp
add
mov
clc
sahf
xchg
sbb
jp
clc
push
add
push
add
xchg
inc
clc
dec
and
and
movsb
clc
inc
add
adc
add
and
add
clc
jb
add
clc
in
mov
xchg
cwtl
lods
cmp
ret
clc
pop
int
mov
sti
inc
add
lcall
cmp
add
clc
ret
clc
mov
js
bound
add
rolb
add
clc
xlat
jmp
mov
adc
add
clc
jecxz
xor
add
sub
add
fldcw
push
jnp
icebp
das
lock
add
add
mov
clc
push
test
add
cld
and
mov
mov
repnz
push
add
cmp
popa
add
xchg
cld
sti
movsl
clc
ret
sub
adc
add
or
pop
xabort
clc
cmp
add
cs
dec
test
outsl
jbe
cmp
inc
add
ret
in
jo
add
sti
add
add
mov
dec
negl
in
or
push
add
add
dec
push
sti
lock
add
pop
or
inc
clc
mov
clc
xabort
add
bound
add
lret
pop
clc
or
sahf
adc
mov
add
arpl
add
fnsave
add
mov
in
and
add
jns
dec
xor
add
ret
clc
sub
out
leave
xabort
clc
mov
inc
clc
cmp
xor
add
movsl
clc
push
inc
add
js
add
cmp
mov
loopne
shll
add
xor
add
insb
sub
clc
hlt
and
add
sar
clc
sub
clc
mov
inc
clc
xchg
jbe
add
jae
add
add
xabort
clc
icebp
bound
add
clc
dec
mov
clc
dec
xlat
incl
clc
adc
add
cmp
clc
fdivl
pop
mov
mov
clc
in
insl
mov
std
cmp
xor
mov
mov
adc
add
mov
add
je
push
add
flds
add
clc
push
add
mov
aam
clc
adc
add
ret
cmc
test
clc
in
jbe
clc
xor
add
test
in
mov
clc
fs
bound
add
clc
jo
add
xchg
je
xor
add
add
pop
xchg
imul
clc
pop
mulb
add
cmp
cmp
add
aam
in
mov
cmpsl
clc
push
add
jecxz
xor
add
mov
mov
fidivrs
clc
int
sar
mov
mov
repz
cmp
clc
add
add
iret
inc
clc
es
or
add
lcall
mov
add
add
add
popf
dec
mov
mov
sbb
aaa
push
add
aam
clc
adc
fldt
clc
and
add
add
jo
add
sarl
add
in
mov
test
and
add
clc
pusha
add
loope
cmp
dec
adc
add
outsl
adc
cmp
mov
add
xor
add
movsl
clc
int3
int3
xchg
jmp
clc
mov
cld
cld
sbb
sub
mov
dec
cmp
clc
ss
out
adc
out
mov
nop
dec
sbb
pop
jle
push
xchg
and
add
push
or
add
std
rcr
mov
scas
pop
clc
sar
add
mov
bound
add
add
clc
sbb
dec
mov
add
std
mov
add
in
addr16
imul
xchg
xchg
push
clc
ljmp
xor
add
int
mov
dec
fadd
clc
pop
dec
and
add
pop
mov
push
dec
cmp
stc
mov
clc
lcall
add
mov
loop
and
add
lock
add
add
and
call
arpl
add
cs
add
in
sbb
mov
clc
jb
add
add
js
shrb
push
ret
clc
cmp
and
add
aad
add
aad
clc
lock
clc
and
add
adc
add
clc
xchg
push
in
cmp
add
push
or
clc
xor
add
das
adc
add
mov
mov
add
add
mov
bound
add
pop
dec
lcall
push
cmpsl
clc
vandps
mov
scas
or
lret
dec
imull
cmp
clc
and
add
mov
add
clc
push
movsb
clc
jp
add
out
xor
add
add
add
pop
js
pop
pushf
inc
clc
jnp
pop
stos
xchg
push
add
mov
add
add
stos
add
sbb
clc
clc
loope
dec
and
xchg
mov
mov
mov
stc
cltd
clc
pop
xchg
clc
jne
clc
cwtl
hlt
add
add
pop
loop
dec
sub
jle
clc
fwait
or
add
mov
fisttpll
test
clc
mov
clc
dec
popf
push
add
mov
jb
add
test
clc
gs
mov
clc
cmp
clc
fiaddl
clc
out
adc
add
int
cld
pop
mov
lret
jbe
clc
sar
xor
add
push
add
adc
or
clc
in
lea
clc
in
add
add
xchg
mov
add
lret
outsl
outsl
jg
clc
mov
test
ret
add
repnz
dec
sbb
int
add
cmp
mov
mov
add
push
add
jb
add
inc
clc
mov
pop
imul
and
add
clc
mov
test
sub
add
gs
xchg
enter
add
movsb
clc
aas
std
inc
clc
in
pop
cmpsb
clc
cli
scas
fwait
mov
mov
and
xlat
test
add
add
scas
sbb
clc
movsb
clc
pop
ljmp
add
push
push
add
add
add
sub
sbb
clc
jne
push
add
ljmp
aaa
jge
or
and
add
mov
inc
clc
inc
add
mov
clc
fldenv
add
mov
sbb
aaa
add
add
std
mov
fs
and
cwtl
sub
cli
jge
cmp
pusha
add
std
mov
nop
mov
add
pop
and
add
pop
push
jno
add
mov
sub
push
clc
pop
call
imul
add
insl
sar
or
push
and
add
or
clc
rolb
add
mov
add
xlat
mov
hlt
mov
add
add
inc
clc
sbb
test
mov
aas
mov
std
dec
outsl
pop
cmc
popa
add
adc
add
add
iret
addr16
ret
clc
lock
cmc
cmp
clc
inc
clc
inc
clc
clc
mov
mov
xchg
sub
repnz
int3
cmp
pop
call
clc
sbb
or
imulb
cmc
sbb
mov
mov
jbe
clc
mov
clc
jo
add
add
add
add
lahf
push
add
mov
jo
add
das
jecxz
pop
pushf
pop
jno
add
shll
add
inc
add
addr16
mov
add
lret
sbb
sbb
movsb
clc
xor
add
sub
ds
cs
enter
arpl
add
dec
fldenv
clc
out
shrb
jae
add
add
es
mul
clc
pusha
add
dec
aaa
dec
dec
outsb
inc
add
pop
pushf
sbb
dec
jmp
sahf
and
dec
leave
popf
ucomiss
in
es
cmpsb
clc
sbb
inc
add
nop
pop
pop
adc
or
aaa
xchg
sbb
add
clc
mov
dec
sti
scas
sub
clc
lret
pop
mov
popl
pop
mov
add
push
add
inc
clc
loope
cmc
pop
stos
in
cmpsb
clc
add
add
add
mov
clc
dec
dec
sysret
clc
lock
mov
add
call
roll
clc
lcall
add
add
add
xchg
fsubr
aam
js
insb
cltd
mov
test
sbb
mov
clc
out
xchg
xor
add
lret
add
leave
clc
mov
clc
lods
fstl
mov
add
add
add
stos
mov
xor
add
add
into
daa
clc
or
add
cmp
add
clc
dec
cmp
add
dec
insb
mov
push
jecxz
mov
mov
cmp
xchg
clc
adc
add
clc
xor
add
add
aaa
lret
pusha
add
sub
mov
lret
adc
jnp
add
mov
clc
pop
inc
add
mov
clc
shl
clc
xbegin
sub
add
lret
loopne
jg
lock
clc
imul
out
popl
pop
xor
cmovle
sbb
fidivl
insb
sbb
add
addr16
outsl
clc
pop
out
sub
lcall
xor
add
add
pop
lods
pop
xor
add
clc
pop
scas
sbb
cs
jne
inc
add
lret
clc
mov
fdivr
mov
add
push
scas
outsb
xor
add
clc
and
add
loope
mov
add
fcomps
add
mov
shl
ficomps
sti
lods
test
lahf
mov
clc
lcall
cmp
mov
sbb
mov
cmc
std
push
add
ret
clc
jl
clc
sbb
xor
add
and
add
mov
cmpsb
clc
outsb
mulb
add
data16
js
arpl
add
add
add
sub
sbb
dec
cmpsb
clc
scas
ds
mov
fidivs
add
cs
dec
jle
sub
add
int3
add
jae
add
xchg
shl
clc
xor
add
clc
jle
add
movsb
clc
xor
add
add
sbb
adc
add
mov
adc
add
jp
and
add
jmp
popf
dec
cli
cld
or
sub
adc
add
clc
dec
mov
add
add
add
idivl
add
lods
negl
add
push
jge
clc
out
mov
sub
clc
mov
cltd
nop
push
add
push
icebp
out
add
xor
add
add
rclb
or
cmp
cmp
ja
clc
mov
hlt
hlt
cmpsb
clc
inc
clc
lock
mov
add
inc
add
cmp
inc
add
cmc
jnp
xchg
inc
clc
in
xor
add
lret
jbe
sbb
add
pushf
mov
jg
add
cmpsb
clc
ffree
clc
jbe
sbb
ds
adc
add
mov
add
or
clc
push
or
add
xchg
inc
clc
cmp
push
fwait
ljmp
jp
xchg
mov
add
sahf
pop
jns
xchg
pop
cmp
ja
outsb
loop
out
adc
add
add
lcall
clc
ds
clc
push
mov
xor
add
clc
iret
lea
cmp
mov
test
mov
cwtl
xchg
xlat
repz
add
fucomip
push
pop
xbegin
push
cltd
cmp
scas
cmp
imul
clc
cmp
ss
hlt
or
clc
add
add
clc
and
add
inc
add
ds
scas
and
add
add
mov
clc
dec
dec
xor
add
add
frstor
ficoml
push
fcmovu
pop
jne
scas
sbb
xlat
cmp
cmp
or
ljmp
in
push
push
clc
das
mov
mov
xabort
pop
clc
inc
clc
stos
cmpsl
clc
cmp
clc
sub
xbegin
clc
dec
aas
mov
clc
cltd
and
add
clc
pop
repz
clc
inc
clc
daa
clc
xor
add
nop
ret
clc
inc
clc
cmp
xor
add
out
mov
cmpsb
clc
ror
mov
add
add
arpl
add
mov
xchg
fdivs
add
add
pop
clc
mov
hlt
adc
add
aaa
clc
mov
dec
leave
sub
into
push
add
add
add
insl
and
xchg
gs
gs
mov
nop
pop
push
dec
cmp
push
push
add
mov
clc
sbb
add
or
jbe
rcll
sbb
add
mov
iret
add
add
add
jne
lods
js
fsub
clc
lock
push
add
iret
scas
ljmp
clc
inc
add
je
clc
fdivrs
and
add
jmp
clc
jmp
std
ds
decl
clc
aam
inc
clc
bnd
mov
clc
cmpsl
clc
dec
pop
dec
rclb
add
inc
add
jmp
sbb
test
push
jle
jb
add
mov
stc
cmp
sub
dec
hlt
ljmp
sbb
clc
out
mov
mov
stos
push
add
data16
adc
add
mov
and
mov
clc
enter
enter
add
out
mov
roll
add
es
dec
jecxz
cs
clc
jg
clc
jae
add
push
add
ret
cmp
cli
adc
add
inc
add
iret
sar
clc
mov
clc
fldt
and
add
add
stos
mov
mov
clc
mov
clc
sbb
add
inc
clc
inc
clc
pop
clc
pop
clc
mov
xchg
cmc
aam
clc
add
add
dec
xchg
cmpsb
clc
pop
ret
clc
sahf
filds
add
fldt
das
aam
js
add
clc
mov
fdivrs
fdivrp
inc
add
push
mov
das
sbb
ljmp
pop
sbb
clc
stos
jmp
lock
clc
or
sub
add
mov
clc
stos
repnz
clc
mov
stos
adc
add
out
inc
add
inc
clc
sub
mov
cmp
add
sub
cmp
jb
add
out
jo
add
add
fwait
icebp
push
or
stos
clc
and
cmp
xchg
or
add
sbb
pop
mov
dec
cs
ss
add
jns
ret
clc
pop
clc
adc
add
xchg
inc
clc
mov
clc
sub
loop
mov
clc
loopne
xchg
js
clc
stc
xbegin
pusha
add
mov
nop
das
xor
add
clc
inc
clc
sar
cmp
clc
cmp
add
add
push
das
pusha
add
xor
clc
mov
icebp
je
clc
cmp
or
jecxz
outsb
mov
sbb
es
addr16
bound
add
xor
ds
clc
or
add
pushf
push
clc
jg
outsb
jmp
inc
clc
test
add
add
mov
add
test
clc
jmp
jne
clc
pop
insl
shlb
xor
add
ror
inc
add
popf
mov
imul
clc
fidivrs
sbb
mov
clc
or
add
clc
data16
cmp
sti
cmpsb
clc
fucomp
fsubrs
mov
adc
add
clc
or
dec
mov
mov
clc
and
add
enter
clc
test
sub
testl
add
frstor
xor
add
add
cmp
das
imul
add
daa
clc
stc
pop
mov
fs
add
add
push
add
cmc
mov
pop
sar
clc
repz
cmp
fsubs
or
add
iret
icebp
mov
clc
adc
add
add
clc
arpl
add
clc
movsb
clc
inc
add
jg
sbb
add
mov
add
push
int
clc
out
push
add
inc
add
cmp
sub
cmp
pop
mov
xbegin
add
mov
xchg
mov
clc
dec
xabort
mov
clc
cltd
std
mov
pop
clc
in
push
add
pop
xchg
push
add
sar
add
mov
cmp
mov
mov
add
cmpsb
clc
pop
imul
jns
xchg
cmp
clc
inc
clc
xchg
or
jno
add
in
pop
movsb
clc
fidivrl
daa
clc
pop
fwait
adc
or
mov
mov
or
clc
cmpsb
clc
xor
add
addr16
ljmp
ret
addr16
push
aas
push
clc
inc
clc
movsb
clc
push
sar
pop
lret
mov
outsb
bound
add
popa
add
aam
dec
sbb
scas
leave
jnp
xchg
push
jo
add
clc
cmp
clc
or
repz
add
pusha
add
xor
mov
sahf
testl
imul
clc
lods
popa
add
adc
add
jns
jno
add
add
adc
pop
je
std
aas
sub
add
cwtl
das
push
clc
pop
mov
mov
and
add
outsl
dec
cli
test
sub
clc
sbb
pop
mov
add
inc
add
cmp
add
sahf
pop
and
add
cltd
outsb
push
add
pusha
add
ret
test
testl
mov
mov
add
aas
pusha
add
fistpll
and
clc
sar
clc
popf
sbb
clc
jecxz
pushf
lahf
imulb
notb
or
imulb
cmp
clc
push
add
sub
sbb
clc
mov
clc
nop
daa
clc
pop
mov
add
mov
clc
mov
ss
insb
into
push
sub
clc
loopne
jecxz
sbb
movsl
clc
adc
add
fs
adc
add
clc
fwait
push
mov
add
add
add
sbb
add
lahf
inc
add
xchg
mov
push
add
test
clc
push
add
lods
hlt
cwtl
data16
mov
mov
add
ljmp
inc
add
test
data16
jb
add
mov
add
mov
imulb
mov
jnp
mov
lods
je
xchg
movsl
clc
outsb
data16
xchg
mov
add
cmp
in
xchg
xor
add
push
lcall
add
out
mov
dec
popf
pop
clc
adc
sbb
xabort
xchg
sub
inc
clc
add
add
add
sbb
mov
idiv
bound
add
sbb
adc
push
bound
add
add
lret
mov
add
pop
mov
gs
adc
add
sub
clc
cmp
js
int
mov
clc
mov
push
pop
aas
or
rcrl
jne
xchg
imul
mov
mov
dec
cmp
sahf
sbb
add
cs
jb
add
add
clc
inc
add
testb
clc
cmpsl
clc
repz
clc
adc
add
lahf
cmp
aam
ds
add
add
jns
clc
out
jb
add
insl
js
clc
inc
add
lcall
sub
and
in
ret
clc
mov
test
insb
and
add
ds
mov
mov
loope
pop
stos
sar
jo
add
mov
test
cmp
add
stos
cmp
imul
mov
shlb
inc
add
arpl
add
scas
stos
push
test
add
jmp
stc
jl
into
lods
scas
cwtl
not
testl
in
xchg
mov
add
clc
and
add
int
bound
add
push
sar
es
lcall
cmp
adc
inc
add
fwait
mov
cmpsl
clc
imul
add
push
clc
push
icebp
rorb
mov
mov
add
mov
iret
cli
add
xchg
jg
add
or
add
clc
sar
clc
gs
stos
mov
clc
hlt
sahf
dec
inc
add
xlat
jmp
clc
cmp
or
clc
fcmovnbe
sbb
sbb
clc
or
add
mov
cmp
and
add
clc
cmc
aam
clc
int
outsl
test
dec
add
add
nop
das
xor
add
and
add
xchg
fs
xor
add
clc
daa
clc
iret
ss
clc
jns
add
dec
adc
add
inc
clc
cs
js
add
push
add
mov
repnz
mov
add
mov
test
cmpsl
clc
in
call
add
add
clc
inc
clc
mov
pop
add
add
clc
push
cmp
clc
fadd
clc
inc
clc
gs
pushf
push
fimuls
jmp
sahf
out
in
push
jne
add
leave
and
add
ss
cmp
add
sub
adc
out
mov
loopne
out
mov
xor
add
cli
ficomps
mov
clc
jno
add
inc
add
pop
cmp
fs
push
xchg
je
dec
cmp
cmpsb
clc
xor
add
jo
add
fldcw
sub
cmp
clc
sbb
add
push
push
xor
sbb
add
inc
add
loop
mov
clc
sar
xor
add
int3
outsl
popa
add
addr16
cmp
push
add
or
scas
xchg
std
mov
pop
popa
add
cli
xor
add
lods
jae
add
and
add
clc
xor
add
clc
sub
add
add
add
lods
sub
clc
cmpsl
clc
jp
jecxz
mov
add
xchg
xor
add
add
clc
adc
add
clc
mov
insl
out
push
add
add
push
pop
cmc
test
out
mov
bswap
mov
iret
push
clc
cmp
dec
xchg
ret
clc
push
xor
add
ja
adc
add
cwtl
sar
add
dec
or
add
add
or
dec
repnz
jae
add
add
test
js
mov
add
add
jge
add
sbb
lret
add
movsb
clc
test
mov
shr
xchg
push
add
mov
lret
clc
fs
lret
jecxz
dec
sti
dec
ret
clc
clc
xchg
sar
or
sub
ja
int
or
xchg
arpl
add
clc
and
add
out
mov
clc
aaa
inc
add
or
add
add
outsl
fisubrl
clc
out
aad
clc
mov
sub
clc
pop
cld
sub
jb
add
sub
into
fistps
lcall
add
clc
clc
pusha
add
stos
pop
cmp
xchg
xchg
xchg
cwtl
inc
clc
inc
add
jmp
add
push
and
add
jecxz
sar
xchg
sub
jne
inc
clc
sar
int
add
jnp
clc
outsl
or
pusha
add
xchg
mov
aaa
push
icebp
inc
clc
add
add
das
int3
test
in
mov
clc
xchg
lea
mov
add
mov
or
fdivl
mov
jge
test
divb
add
movsl
clc
sub
mov
xor
add
cmp
add
clc
cmp
lock
cmp
add
cld
call
pop
cmpsb
clc
gs
loopne
pop
push
or
shlb
clc
sahf
bound
add
clc
sbb
clc
sbb
data16
dec
ja
cwtl
or
add
push
jnp
popa
add
xchg
pop
cmp
lret
clc
or
pop
lcall
add
es
pusha
add
push
int
clc
xor
add
cmpsl
clc
push
add
mov
in
push
add
test
inc
clc
mov
cmp
push
ja
clc
daa
clc
sub
scas
fstl
add
jmp
pusha
add
mov
xor
add
add
daa
clc
dec
or
add
add
xor
add
add
xchg
xabort
sbb
add
pop
add
or
clc
pop
pop
mulb
add
mov
clc
cmp
fidivrs
add
scas
iret
adc
add
add
add
iret
imul
add
in
xchg
cmp
xchg
iret
xor
scas
cmpsb
clc
push
cmp
repz
clc
popa
add
xabort
in
xbegin
add
mov
data16
icebp
mov
shrb
jecxz
cmpsb
clc
add
add
clc
jb
add
cmpsl
clc
into
inc
add
jbe
clc
inc
clc
xchg
sbb
cld
cmp
add
jbe
pushf
sarb
out
cld
and
divl
xchg
pushf
inc
clc
push
jg
lock
clc
stos
cmp
add
mov
adc
add
fisubrl
add
cmp
and
add
popf
ret
clc
mov
mov
add
jl
clc
pop
mov
and
add
cmpsb
clc
add
add
xabort
push
clc
das
sbb
popa
add
in
push
add
fld
clc
pushf
sti
cld
data16
ret
rorl
pop
xor
xor
stc
pop
int
pop
jle
jne
add
or
adc
add
scas
dec
mov
clc
stos
cmp
inc
add
scas
mov
clc
xbegin
jns
and
push
in
push
scas
adc
clc
or
sbb
cmp
stc
pop
imul
adc
add
insl
jp
jg
enter
lea
jne
pop
pop
and
push
stc
mov
popl
add
mov
clc
iret
sbb
add
push
jns
clc
out
int3
pop
cmpsb
clc
stc
addr16
xchg
testl
data16
aam
gs
lods
loopne
jns
mov
out
dec
sub
lahf
push
sbb
clc
cmp
add
jp
jle
arpl
add
lock
inc
add
or
loop
out
mov
clc
popf
ficompl
and
add
pusha
add
popa
add
icebp
das
in
push
pop
push
add
xchg
xchg
fwait
insb
pop
imul
cmpsb
clc
scas
out
sahf
add
add
clc
testb
mov
cwtl
fs
pop
mov
xbegin
add
add
cmp
clc
pop
popf
sar
push
adc
add
add
icebp
jno
add
clc
fimull
clc
mov
insb
sbb
clc
hlt
jp
add
mov
bound
add
clc
and
mov
loopne
fs
push
add
lods
pushf
iret
add
add
fimull
clc
popa
add
fidivl
pop
push
add
cld
out
sbb
popa
add
sub
adc
imul
add
cli
xor
inc
clc
and
add
add
add
aam
add
push
add
arpl
add
add
data16
addr16
mov
sahf
push
inc
add
lret
ja
clc
cmp
clc
rorl
roll
add
test
ljmp
clc
jle
cmp
inc
add
stc
lea
add
rolb
pop
pop
cmpsl
clc
das
push
nop
sahf
aas
cld
add
cli
and
add
lods
fwait
xabort
xlat
pop
cmp
clc
add
add
out
outsb
jb
add
lahf
mov
pushf
das
loop
fbstp
clc
enter
dec
jle
clc
movsb
clc
mov
adc
xchg
mov
add
fs
mov
cmp
enter
add
add
add
mov
add
int3
addr16
sahf
jbe
cmpsl
clc
jne
add
movsb
clc
xor
add
clc
cmpsb
clc
test
addr16
das
in
mov
cld
jge
add
mov
notl
mov
push
add
push
stc
xlat
or
clc
dec
jl
clc
scas
jg
dec
repz
clc
pop
adc
add
add
ds
in
and
add
add
add
add
xabort
cltd
mov
clc
mov
clc
jae
add
xor
add
add
fbstp
xabort
add
jne
clc
ja
jg
clc
int3
cmp
add
aam
lods
and
add
add
pop
cmpsl
clc
or
inc
add
mov
std
je
test
gs
call
xor
add
clc
mov
add
gs
cmp
add
add
xor
add
push
pop
inc
add
pop
jae
add
add
or
mov
sarl
lods
mov
sbb
clc
adc
add
rep
clc
jnp
dec
inc
clc
dec
inc
clc
lret
in
into
mov
clc
ds
clc
repz
pop
jp
push
or
add
add
and
pop
loopne
sub
mul
clc
mov
dec
add
add
in
lret
sbb
pushf
or
clc
sbb
mov
fnstenv
add
cmp
mov
add
push
nop
inc
add
out
je
jae
add
add
out
pushf
inc
clc
jl
clc
inc
clc
scas
jmp
ljmp
add
jmp
clc
add
add
add
ss
add
dec
icebp
mov
mov
add
repz
add
jns
scas
lret
push
arpl
add
clc
clc
cmp
fs
lea
add
jb
add
clc
dec
push
clc
or
pop
sar
add
mov
clc
mov
add
add
add
adc
add
icebp
mov
clc
adc
clc
or
add
ret
cli
cmpsl
clc
jg
pop
push
xor
add
add
mov
mov
adc
jns
pushf
rcll
cmp
add
mov
xor
add
clc
or
clc
ds
clc
and
add
sbb
popa
add
lods
outsl
mov
clc
xor
add
fs
fisttps
jl
adc
add
loope
lcall
or
icebp
mov
clc
cmp
ja
mov
clc
imull
add
out
push
mov
mov
or
jb
add
add
adc
or
clc
lods
inc
add
push
dec
add
add
enter
mov
mov
aad
mov
clc
mov
add
lret
push
jae
add
mov
pop
clc
push
add
sbb
add
add
mov
xchg
mov
add
add
bound
add
pop
cmp
pop
fsts
add
add
add
push
mov
clc
jmp
push
add
and
cmp
xabort
clc
sar
lock
clc
insl
cmp
out
icebp
aaa
jecxz
mov
clc
cmp
lret
and
add
out
cmp
xchg
pop
cmp
adc
add
aam
clc
pop
inc
clc
lcall
clc
cmc
add
add
add
arpl
add
imulb
inc
add
add
jb
add
push
push
add
scas
and
test
int3
lods
push
mov
cmp
fstps
aas
adc
add
clc
pop
xor
add
add
cmp
std
adc
add
sub
clc
stos
cmc
fnsave
clc
inc
clc
mov
das
call
jb
add
fdivrl
loope
pop
clc
lock
add
sti
mov
cmp
clc
pop
scas
cs
jg
mov
add
add
mov
sub
add
inc
add
mov
sti
dec
mov
pop
lret
add
aaa
dec
cld
mov
cmp
clc
cmpsb
clc
filds
add
pop
cmp
clc
inc
add
outsl
and
add
clc
ffreep
clc
dec
data16
cmp
enter
movsl
clc
jle
cmp
rep
jmp
add
fsubr
fildl
stc
lods
pop
xor
add
pop
push
mov
sar
call
jge
or
cmp
stc
int
jg
adc
add
das
jl
clc
lea
add
push
add
fists
add
jne
push
sbb
add
sar
add
cmp
clc
cmp
add
mov
mov
fidivs
mov
add
xchg
test
add
cltd
inc
clc
and
hlt
ljmp
or
fwait
lret
mov
mov
sub
add
es
xabort
adc
add
sbb
clc
xchg
pushf
pop
ljmp
clc
cltd
dec
mov
lret
mov
dec
jns
sbb
insl
cmp
add
jp
mov
clc
test
push
add
sub
add
scas
mov
daa
clc
in
and
add
add
aam
clc
aas
mov
cmp
add
jbe
repz
stos
adc
add
clc
jae
add
lods
fsubrs
jne
clc
testl
clc
stos
fsubs
popa
add
aas
inc
clc
jecxz
jbe
xor
add
lods
sub
jg
dec
xchg
clc
cmp
jl
xor
add
add
and
sbb
add
cmp
xchg
aaa
sbb
add
es
mov
pop
xor
pop
mov
add
dec
add
add
stc
add
add
clc
add
add
add
out
pop
aas
dec
xchg
in
sbb
setae
add
sub
bound
add
loope
pop
dec
cmp
cwtl
mov
cmp
mov
xchg
xchg
jae
add
fcmove
pop
cwtl
jbe
dec
fwait
jp
xbegin
clc
mov
mov
clc
pop
pop
ljmp
int3
nop
lods
movsl
clc
push
cmp
jg
cmp
add
mov
clc
pop
clc
jo
add
clc
js
add
adc
add
clc
out
ja
cmp
cmp
popa
add
cli
ljmp
mul
clc
movsl
clc
jle
and
mov
and
dec
xchg
adc
add
mov
add
clc
pop
or
clc
xor
add
xchg
sar
repz
call
add
sahf
ficomps
adc
into
sbb
add
lret
add
mov
clc
xor
add
clc
in
cmp
add
jecxz
push
and
add
add
loop
int
jnp
sti
mov
inc
clc
iret
pushf
xor
add
stc
or
add
jl
pop
pop
adc
dec
cld
jno
add
mov
hlt
bswap
mov
fcomp
adc
add
add
push
cmp
add
clc
or
clc
divl
add
adc
add
jno
add
pop
jge
clc
xchg
dec
aaa
sbb
xor
outsl
xchg
cmp
cmp
add
ret
clc
or
outsb
clc
xchg
clc
test
mov
mov
adc
mov
add
in
push
jns
or
clc
in
and
add
clc
js
movsb
clc
sbb
pop
inc
add
xchg
inc
add
fstl
out
test
mov
test
js
add
mov
add
inc
clc
xlat
cs
clc
cs
clc
inc
add
mov
clc
fwait
xchg
sbb
mov
add
sub
add
mov
int3
mov
add
sub
pop
cmp
mov
pop
mov
mov
and
lret
mov
cli
mov
clc
imul
mov
xchg
insb
pop
mov
add
ljmp
mov
inc
add
add
add
and
add
clc
ja
add
movsb
clc
add
loopne
mov
jb
add
clc
lods
inc
clc
sti
cmpsl
clc
data16
cmp
clc
pop
sahf
lahf
mov
cmp
pop
call
or
push
clc
xchg
arpl
add
sub
add
push
clc
ficompl
push
push
clc
or
mov
sti
aam
add
add
or
clc
fxch
push
outsb
lahf
test
in
lods
xbegin
clc
cmpsb
clc
sets
clc
jo
add
jnp
mov
add
cmp
push
clc
cmp
xchg
fwait
pop
clc
adc
add
jnp
mov
add
loope
imul
test
push
clc
mov
adc
clc
outsl
inc
add
out
aas
xor
add
add
pop
xchg
sar
clc
into
sbb
mov
add
rcll
add
ja
shl
clc
psrld
add
in
xor
add
rcr
cs
clc
in
fimuls
out
sti
adc
ss
mov
or
clc
stos
inc
add
bound
add
cmpsb
clc
push
and
add
insl
pop
lea
arpl
add
add
mov
add
cwtl
icebp
cmp
sub
jp
clc
jmp
sub
jl
add
xchg
jmp
pop
cmpsb
clc
cltd
add
xchg
sub
clc
sub
clc
jmp
cmp
mov
add
lock
mov
add
pop
inc
clc
inc
add
daa
clc
call
add
add
add
frstor
xabort
xor
add
add
mov
stos
fsubrs
cmp
clc
into
faddp
clc
bound
add
clc
sbb
pop
jge
fisubl
add
mov
mov
add
mov
add
enter
int3
icebp
pusha
add
inc
clc
cld
stos
sub
cmpsl
clc
xchg
lea
lahf
out
aam
fwait
out
or
dec
repnz
mov
clc
sti
and
add
add
push
pop
push
imul
add
sahf
stc
mov
cmp
clc
push
sbb
std
ret
movsb
clc
test
jl
pop
andnps
cmp
sar
clc
jbe
arpl
add
clc
or
loopne
cmpsb
clc
or
popa
add
outsb
mov
jne
in
dec
iret
cmp
jle
mov
in
or
xbegin
insb
es
add
aaa
mov
inc
clc
jb
add
add
dec
and
lods
sbb
clc
mov
clc
dec
mov
add
xlat
dec
and
add
and
add
clc
sahf
sar
xor
add
clc
jne
cmp
add
add
lret
mov
clc
pusha
add
outsl
pop
dec
clc
jge
push
add
dec
xor
add
add
inc
add
or
fs
imul
add
add
outsl
aaa
cmp
mov
clc
xchg
mul
clc
mov
add
inc
clc
int3
std
popf
aam
mov
xor
pusha
add
pop
xchg
cld
mov
cmovnp
add
adc
add
out
adc
clc
call
cmp
ja
or
push
cwtl
shl
clc
dec
roll
add
mov
scas
out
pop
mov
mov
aaa
clc
pushf
mov
sar
add
and
add
mov
xor
add
add
xbegin
push
fcmovnb
clc
stos
pop
std
cmp
add
clc
imul
jge
clc
lret
scas
fidivrs
xor
add
add
xchg
stc
stc
jmp
fwait
mov
jbe
add
push
daa
clc
add
push
add
add
sbb
