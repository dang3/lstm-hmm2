mov
and
sub
cwtl
cmc
arpl
jnp
ss
sbb
cmp
cwtl
push
inc
add
sbb
xchg
mov
lds
testl
les
sti
movb
jo
mov
push
mov
add
xor
leave
ss
dec
and
xchg
and
mov
rolb
arpl
add
inc
add
test
test
iret
mov
pop
mov
add
ljmp
xchg
cmp
jne
fnstcw
lret
pop
test
std
inc
addr16
imull
add
mov
and
pop
push
xchg
sub
fcmovu
das
or
cmp
jg
sub
int3
cmpsb
jb
inc
mov
xchg
jb
fwait
inc
sbb
jp
js
ldmxcsr
jge
fwait
data16
lock
scas
fstpt
inc
cmp
adc
sub
pop
ror
add
clc
sbb
jne
test
clc
mov
ret
push
movb
lcall
and
cli
sub
dec
ret
push
aad
ljmp
sub
mov
jnp
jmp
and
mov
and
jno
sub
js
aam
in
xchg
fidivl
scas
dec
sarb
fsubl
mov
add
ret
xor
leave
pop
xchg
cmp
or
mov
jns
push
add
add
imul
inc
or
push
dec
leave
adc
into
in
mov
les
mov
je
aad
into
adc
in
xchg
addb
mov
jo
pop
std
mov
icebp
mov
add
mov
and
subl
mov
cmc
fwait
lahf
lock
outsl
push
inc
pop
scas
pop
sahf
jg
mov
loope
xchg
push
fs
addr16
add
pop
push
xchg
pop
cmp
push
jmp
or
addb
gs
mov
outsl
mov
add
stos
cltd
out
mov
jno
adc
sub
sub
sarb
adc
add
cmp
jge
xor
jmp
mov
pop
dec
daa
and
add
mov
or
sub
jmp
lret
mul
icebp
out
pop
and
inc
add
lods
test
les
cmp
das
inc
or
and
repz
add
add
cmp
xor
sar
cs
jne
fnsave
inc
add
lret
sbb
hlt
push
mov
dec
fistpll
fisubrs
and
adc
inc
add
mov
ja
roll
push
pmulhw
cmp
and
lcall
sbb
push
scas
dec
xor
xchg
add
add
ret
in
mov
into
pusha
add
sbb
add
mov
mov
mov
aam
sub
and
cmpsl
inc
clc
cmp
cmp
mov
hlt
sahf
insl
ficompl
loop
ds
fdivrl
lds
sub
add
cmp
je
sub
add
imul
imul
lock
gs
movb
or
idivl
sub
xor
jp
inc
add
std
add
push
lcall
jecxz
add
decb
into
testl
inc
add
addr16
ljmp
cmp
xchg
jo
sbb
push
xchg
jp
aam
xchg
int
ss
divl
cmp
jbe
adc
ss
pop
out
in
sbb
cli
fmuls
add
push
rcrb
les
sar
lods
arpl
test
push
arpl
sbb
inc
add
scas
mov
sbb
iret
cmp
xorl
stc
data16
ret
cmpsb
mov
out
sbb
pop
dec
cmp
movsl
loope
add
lods
xor
jae
xor
add
cmp
xchg
lods
repnz
pop
loope
gs
clc
fnstcw
xor
pop
push
add
pop
repnz
mov
dec
mov
sbb
inc
add
out
lret
out
das
xlat
and
aam
mov
pop
adc
cmp
stos
ds
jno
pop
popf
icebp
popa
sbb
cmc
ljmp
xor
call
add
imul
jo
fnstsw
cmp
add
pusha
add
mov
fs
push
add
add
xchg
add
inc
add
inc
add
mov
loope
out
add
inc
leave
addb
xor
jb
ret
add
mov
movsb
jb
jmp
cwtl
xor
js
cmp
aas
xchg
push
dec
mov
ffree
icebp
ret
inc
ljmp
mov
add
push
gs
xchg
jmp
cmp
and
sub
mov
sub
lock
dec
jg
sub
cwtl
xchg
pop
ficompl
out
xchg
js
dec
cmpl
shrl
scas
insl
pop
lahf
push
cs
data16
push
lods
jecxz
addb
inc
cmp
sub
pop
pop
das
fdivrl
out
pop
inc
mov
inc
ljmp
mov
pop
les
inc
add
push
inc
add
inc
pop
daa
sbb
out
movb
pop
mov
addb
xor
mov
clc
testl
add
cmpl
jb
mov
jmp
negb
sub
lcall
loopne
and
les
stos
push
fs
je
adc
imul
dec
mov
dec
lods
aad
out
xor
push
mov
repz
xor
inc
fsubrl
lcall
out
pop
mov
in
add
dec
push
cmp
add
cmpl
xor
mov
dec
mov
mov
xor
pop
outsl
jge
cmp
movsl
mov
aaa
sbb
inc
add
andl
sbb
movb
mov
jb
cmpsb
xchg
inc
add
lret
call
in
add
dec
push
popf
push
fimull
out
rol
popa
pop
mov
stos
xor
or
imul
int
icebp
mov
adc
or
cmp
jmp
sbb
pop
jbe
add
stc
xchg
xlat
addr16
bound
std
sbb
mov
pop
dec
mov
sbb
add
std
js
test
aam
in
xchg
imul
stc
mov
lret
test
or
lcall
inc
or
int3
mov
int3
adc
outsb
lds
into
cmc
pop
repz
cmp
hlt
push
mov
pop
cmc
xor
fwait
mov
dec
fsts
inc
add
add
xor
xor
lahf
addr16
loope
xchg
xor
dec
sub
mov
call
data16
mov
xor
push
sbb
adc
mov
jl
notl
add
xchg
outsl
test
jb
outsw
mov
fisubrl
cmp
fidivrl
lock
in
jecxz
nop
xor
pop
mov
data16
cmc
enter
icebp
movsb
bndldx
outsb
in
test
xor
lods
push
mov
push
ja
add
xchg
jbe
push
add
jge
mov
cmpsb
or
add
out
jbe
lret
iret
addr16
les
iret
lahf
rorl
flds
add
add
and
sub
sbb
mov
xchg
cmp
xchg
pop
inc
add
sti
push
sbb
cmp
nop
inc
add
push
cmp
add
xchg
inc
repnz
mov
loope
lret
out
int
imul
data16
je
lds
jo
xchg
aad
jle
gs
pop
jo
inc
mov
dec
mov
xchg
loopne
push
lcall
jne
in
test
mov
add
sbb
enter
arpl
push
cltd
push
mov
outsb
sub
cmpsb
stc
addb
xchg
inc
add
je
jmp
addl
push
push
lcall
gs
cmp
inc
jo
or
mov
jle
in
cwtl
popa
stc
movsl
shll
aas
push
pop
ds
or
jecxz
add
dec
lods
fucomp
jne
cmp
fidivl
in
stc
pop
out
ret
mov
cld
mov
hlt
push
or
mov
sbb
mov
stos
rcrb
stos
pop
out
aaa
push
dec
and
repz
cld
cld
hlt
cltd
sbb
sbb
mov
test
sub
cwtl
daa
inc
ja
arpl
fists
cmp
out
addb
sbb
call
movsl
mov
hlt
nop
xchg
pop
xor
jne
mov
mov
dec
stc
outsl
jb
sbbl
sbb
pop
pop
push
cmp
add
mov
jmp
mov
mov
sub
add
add
cmpsb
ja
add
scas
fsubs
icebp
stos
sub
add
mov
xlat
and
mov
add
add
lock
add
addb
cltd
cwtl
cwtl
push
inc
fs
xchg
das
mov
mov
or
aad
fisubs
sbb
mov
sbb
jbe
add
std
add
fildll
addb
push
add
ljmp
sbb
sub
pop
stc
xor
pop
and
dec
or
pop
movsb
cmp
add
inc
add
sbb
jg
mov
jns
add
rcr
mov
pop
aad
lods
and
fnstsw
or
addb
test
xchg
pop
xchg
xchg
xor
in
fstp
mov
add
and
lret
movb
loope
add
push
xor
clc
stos
ss
push
inc
add
scas
call
add
cmc
mov
mov
xor
fistl
insl
or
push
and
cmp
jne
xchg
cltd
int
add
pop
icebp
xor
mov
or
sub
pop
aam
repnz
or
dec
popa
ds
or
lcall
add
cmpsb
push
add
xchg
pop
mov
mov
icebp
inc
add
pop
push
jge
idiv
jae
and
inc
mov
out
pop
into
xlat
in
jecxz
mov
movsb
shlb
dec
push
inc
repnz
and
mov
pop
push
jl
sub
add
adc
stos
inc
mov
pop
mov
jae
daa
sub
add
and
xor
outsb
int3
je
aad
outsl
dec
in
jge
out
insb
pusha
add
xor
not
sti
je
stos
mov
add
decb
xor
pushf
bound
aam
sbb
adc
mov
mov
pop
dec
iret
out
adc
add
add
stos
icebp
inc
add
iret
inc
add
cmpsl
int
add
jnp
add
enter
mov
imul
shlb
mov
push
jmp
cmc
xchg
mov
cld
lret
cmp
mov
out
add
inc
add
xchg
pop
shlb
and
lock
aas
je
jmp
ss
test
hlt
popa
sbb
push
dec
movsl
push
push
movsb
push
adc
sbb
add
add
lcall
enter
add
mov
mov
in
push
push
mov
aaa
rclb
pop
std
popf
decl
loope
mov
add
je
add
loop
mov
das
out
flds
add
or
pop
inc
sti
scas
mov
add
leave
sbb
mov
cld
mov
aaa
pop
mov
jb
fwait
dec
and
xor
sub
xchg
dec
cld
sub
ja
dec
lods
sbb
cmp
inc
add
adc
in
lock
and
push
pop
shlb
movsb
mov
adc
lea
filds
cld
mov
mov
dec
cwtl
push
ljmp
pop
loopne
xlat
adc
cmp
jnp
jns
in
pop
cmp
adc
xor
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
mov
test
mov
cld
mov
nop
push
sbb
xchg
push
inc
add
mov
popa
adc
jg
fldenv
add
imul
cltd
jb
or
pop
fldt
addb
pusha
add
add
rcrl
add
sarb
pop
xchg
shll
jge
cmp
xchg
cmp
push
sbb
or
cmp
xchg
cmpsl
popf
xchg
and
pop
bound
push
lock
inc
add
push
roll
ficomps
hlt
inc
mov
add
popa
add
in
faddl
mov
outsb
shrb
sub
xchg
cmpsl
or
jo
mov
add
mov
cmpsb
xor
repnz
mov
int
inc
mov
cmpsl
sti
mov
mov
fimull
mov
push
jnp
jp
stos
popf
negl
add
mov
dec
jo
jae
in
cmpsl
pusha
add
fwait
jb,pt
dec
fildll
xor
push
cld
mov
lods
push
inc
add
push
jne
pusha
add
add
xor
mov
push
loopne
fwait
xchg
pop
push
jb
xchg
cmpsl
rol
add
jmp
xchg
mov
or
dec
lods
mov
sbb
daa
sbb
ret
push
test
jmp
add
sbb
fnstsw
sub
out
stos
or
adc
jl
jle
pop
ja
in
push
arpl
movb
stos
in
iret
movsb
dec
pop
stc
jg
int
mov
push
mov
jg
dec
loop
addb
repnz
sbb
lock
frstor
and
mov
and
inc
test
cmp
adc
ja
loopne
cmp
inc
add
rcrl
jl
add
das
mov
mov
add
xor
sub
mov
or
sub
adc
jns
cmpsl
out
and
pop
inc
add
cmc
cmp
shll
ljmp
dec
in
xor
addr16
paddusw
addr16
dec
cltd
shrb
cld
adc
add
std
pop
sti
adc
xchg
cli
dec
icebp
nop
pop
sbbl
hlt
adc
and
sub
push
lahf
and
dec
into
fildll
fcoml
inc
add
pop
xchg
rcr
hlt
fsubs
push
pop
cwtl
stos
cmp
jl
dec
out
jmp
les
sub
out
imul
adc
or
mov
stos
xchg
das
or
call
ror
scas
mov
or
jmp
test
in
daa
test
cmp
outsb
mov
pop
loope
pop
call
pop
lret
outsl
jne
pop
and
movsl
inc
add
fstps
mov
and
mov
adc
decb
dec
out
push
dec
jb
inc
push
pop
es
mov
pop
mov
jmp
xor
in
jb
es
loope
jae
add
stos
fildl
push
pop
test
push
icebp
ret
push
mov
jae
sbb
ds
xor
xchg
add
pushf
movsl
pop
ljmp
add
push
movsb
xchg
movsb
add
add
pop
aaa
pop
xchg
and
aad
addl
pop
mov
or
xor
push
add
bound
std
dec
add
lock
sub
pop
cmp
add
mov
stos
or
rolb
mov
add
jle
add
sahf
cmp
dec
push
mov
pop
xor
inc
ds
inc
cmp
xchg
dec
fwait
or
add
push
das
mov
jbe
roll
add
stos
fimull
push
ds
outsl
arpl
jbe
arpl
cltd
in
sbb
add
dec
ret
hlt
push
leave
cmpsl
mov
mov
daa
push
push
inc
in
or
sbb
sbb
orl
or
clc
add
xchg
sub
pushf
pop
mov
add
add
adc
xor
jp
cli
scas
outsl
mov
push
addr16
inc
inc
pop
dec
cmpsl
shrb
out
pusha
add
test
push
add
pop
mov
outsl
xchg
dec
mov
dec
mov
xchg
jge
mov
les
std
fimull
dec
jo
inc
pushf
cmp
inc
add
test
loop
sbb
test
arpl
adc
mov
add
lock
outsl
mov
mov
mov
mov
loopne
scas
test
and
pop
push
cmp
pop
cmp
add
lock
imul
sti
dec
dec
cwtl
lds
add
add
aaa
xchg
addr16
cmp
jl
fs
sti
in
pop
daa
adc
and
das
pop
add
xchg
movsb
stc
and
push
push
add
pop
pushf
aam
mov
jg
loopne
dec
addb
movsl
stc
mov
add
xchg
fs
push
add
das
pop
out
call
ret
dec
lret
aad
negb
cli
lds
js
fst
ss
dec
push
outsl
in
sbb
addb
xchg
xlat
mov
rorl
rolb
je
enter
cmp
out
cmc
mov
fs
pop
mov
add
cmp
aad
sub
shlb
and
ja
jbe
iret
push
fisubl
xor
xor
adc
movb
fldl2t
jno
cmc
bound
icebp
cltd
mov
popa
sti
inc
add
add
inc
enter
and
add
adc
add
jl
test
add
pop
dec
or
adc
add
je
add
hlt
repz
jbe
xor
xchg
aas
xchg
push
or
leave
inc
mov
mov
mov
in
xor
xchg
movl
adc
mov
ljmp
mov
loop
lret
sub
hlt
mov
iret
and
iret
insb
xlat
cmp
mov
pop
cmp
and
sub
cmp
cmpsl
imul
add
push
loopne
mov
shl
xor
add
pop
stos
cltd
es
fcoml
je
call
or
add
daa
add
mov
aas
xor
mov
sub
cli
pop
fmuls
add
and
sub
add
add
mov
adc
jg
arpl
mov
inc
lods
jb
data16
and
pop
mov
sbb
pushf
filds
add
jne
add
pop
add
add
cmp
jg
loop
xchg
fcomp
xor
push
add
xor
add
fs
fiadds
and
adc
mov
lret
sti
push
add
or
push
mov
push
stos
or
pop
pop
inc
mov
push
xor
pop
and
add
movsb
xlat
clc
clc
xchg
mov
int3
stos
mov
add
fcoms
inc
add
add
and
and
mov
add
mov
add
fs
add
push
call
add
inc
add
mov
jmp
adc
scas
add
inc
pop
xor
push
xchg
fstps
pop
nop
inc
push
les
lea
stc
in
pop
imul
mov
xchg
jmp
mov
mov
outsb
mov
movb
inc
cmp
mov
insl
cs
add
jmp
icebp
divl
add
fwait
push
ret
test
dec
jae
add
add
icebp
pop
mov
iret
pusha
add
push
adc
sub
mov
sarl
sbb
jp
in
xchg
loope
loopne
or
jae
fwait
adc
or
cli
std
leave
gs
hlt
push
cmpsb
mov
add
dec
std
inc
add
movb
mulb
idivl
inc
or
xor
pop
jne
mov
cld
clc
push
loope
imul
outsl
jmp
cmpsb
jo
repz
dec
xchg
mov
test
adc
into
cmp
jne
aam
enter
bound
inc
add
dec
data16
dec
sub
adc
sarl
ret
rclb
insl
sub
mov
mov
push
aas
inc
add
je
mov
add
mov
sbb
push
in
addb
add
dec
ror
xor
add
lcall
inc
add
addb
cmp
insl
fwait
ja
pop
lret
cmp
fs
pop
cmp
mov
mov
adc
sub
push
xchg
cmp
mov
jp
rolb
add
test
aad
push
cmc
into
cmpsl
bound
rcrl
xor
add
data16
mov
push
push
movb
dec
xor
adc
jl
test
rcrb
adc
mov
lret
mov
lret
sbb
test
fnstcw
mov
sub
jmp
cmc
sub
movsl
xor
cmp
out
fistps
ljmp
adc
sub
mov
pop
jno
inc
add
dec
aad
xchg
mov
push
sbb
and
mov
mov
scas
aaa
sub
fwait
push
sub
addb
loopne
sbb
and
loopne
lods
rolb
add
filds
add
adc
mov
mov
adc
clc
mov
and
push
or
mov
clc
xchg
pop
jns
loope
test
jbe
int
out
sbb
iret
xchg
mov
into
out
fstps
nop
pop
pop
sahf
mov
pop
mov
mov
mov
popa
int3
mov
jbe
ss
fucomi
shll
pop
popf
inc
add
pop
jge
ret
cmc
popa
mov
mull
fwait
sub
addr16
xor
add
je
pop
sbb
stos
imul
adc
icebp
and
pop
popa
pushf
loop
adc
and
not
cmc
iret
incb
call
and
mov
mov
cmp
loop
inc
add
inc
and
ljmp
mov
inc
xchg
cmp
inc
adc
xchg
xor
add
push
pop
lcall
sahf
cwtl
inc
add
mov
jge
push
or
add
add
and
adc
fs
cmp
xchg
lods
inc
add
data16
into
imul
in
mov
mov
gs
and
in
call
dec
frstor
inc
arpl
mul
hlt
fwait
xchg
sbb
das
test
adc
test
notl
cmpsb
les
pop
add
dec
xor
or
dec
scas
int
loop
addb
push
push
hlt
sbb
pop
sub
add
cmp
scas
aaa
into
push
dec
pushl
dec
rcll
xor
lret
add
add
pop
inc
add
add
dec
aaa
mov
loope
cld
cwtl
addb
pop
or
rep
in
movsb
pop
fwait
push
cmp
popl
sbb
mov
fisubl
sub
dec
or
mov
call
cmp
ja
mov
out
cmpsl
cwtl
add
enter
and
pushf
push
arpl
cwtl
sub
inc
add
lcall
ja
scas
adcl
xlat
jnp
and
add
scas
daa
push
push
push
test
pop
lock
ss
sub
pop
cmc
lcall
xchg
jge
jns
pop
inc
add
or
insb
push
in
dec
sub
out
and
cmp
pop
mov
arpl
lret
ret
sbb
mov
scas
pop
mov
mov
mov
test
sbb
add
popf
popa
addb
aad
movb
pop
outsl
out
les
test
push
jbe
cwtl
das
xchg
lcall
cli
jle
sbb
add
sbb
xchg
psrld
mov
dec
jae
push
adc
inc
outsl
mov
xor
loopne
push
jle
adc
add
cmp
arpl
insb
cmp
sbb
push
mov
lahf
std
add
test
ret
and
fisubrl
rcll
xchg
xor
pusha
add
sbb
push
mov
sbb
ljmp
cmp
and
cmc
or
push
and
sbb
add
add
int
repz
aam
cmp
mov
inc
cli
addb
or
jne
jbe
rcrb
jo
add
add
cmp
mov
and
add
rolb
jno
push
mov
fwait
movsl
add
push
xchg
bound
push
inc
cmp
and
adc
add
and
stos
xchg
lds
pop
inc
add
addb
cmp
hlt
lds
ljmp
mov
add
add
in
arpl
ja
out
adc
scas
out
push
lretw
add
js
sahf
pop
fcmovnbe
int3
xchg
ljmp
lods
sbb
inc
add
dec
pushl
xor
push
fists
movb
je
sub
or
and
leave
cmp
push
add
int3
cmp
cmpsb
aaa
or
insb
pusha
add
jl
jmp
sbb
inc
add
push
jecxz
pop
push
out
clc
aas
aad
cmp
rolb
sub
popa
sub
add
push
mov
dec
mov
dec
out
fcomps
ss
cmp
mov
push
mov
push
and
dec
hlt
mov
test
leave
cmp
sti
adc
andl
outsb
icebp
cmp
movsb
pusha
add
movb
shl
jns
repz
fldl
icebp
loop
add
popf
sub
pop
test
add
lods
xchg
imul
leave
call
pop
inc
add
xor
add
add
jmp
scas
insl
jl
cmp
cmp
ds
movb
into
inc
xchg
lahf
scas
jmp
int
ret
add
inc
add
in
inc
sbb
jmp
stc
inc
push
cmp
stos
scas
xchg
lcall
fldl2e
out
push
xor
and
ljmp
mov
out
adc
lods
cmp
or
outsb
popf
neg
mov
add
mov
jb
lock
sbb
aaa
mov
and
add
lcall
and
sub
add
add
lock
or
add
data16
add
xor
add
sub
or
int3
jnp
cmp
inc
sub
mov
xorl
xchg
scas
jge
add
addr16
sub
movsb
out
das
dec
mov
sbb
outsb
pop
loope
dec
mov
bound
loopne
std
add
movsl
push
fsub
add
mov
ret
add
cmp
sub
cmp
lret
ja
xlat
inc
sub
arpl
pop
addb
cmp
cmc
mov
out
adc
clc
fldt
mov
ret
xor
test
sti
cmp
repnz
mov
adc
mov
and
mov
cmp
dec
pop
jae
ss
addr16
mov
std
test
sbb
push
xchg
lods
push
fstpl
jb
pop
and
fldcw
add
gs
jle
and
popa
sbb
arpl
rorl
inc
add
std
mov
popf
leave
sbb
test
outsl
mov
out
and
insl
testl
in
push
fcmove
std
jp
pop
inc
add
test
pushf
stc
addb
xlat
daa
xlat
sbb
add
xor
in
bound
cld
push
incb
test
setnp
push
mov
sub
add
xor
mov
add
cmpsb
jecxz
xor
mov
scas
movsl
dec
cmpl
iret
adc
insb
dec
dec
and
shll
mov
iret
pop
arpl
push
int3
cmp
jecxz
cmp
mov
ja
imul
lods
mov
xchg
ret
movb
roll
and
xor
sub
add
aam
shll
or
jp
fsubrp
div
call
adc
loope
add
push
pushf
addb
add
mov
cmp
sbb
add
js
sub
out
inc
fsts
movb
adc
lret
fisubrs
mov
add
xchg
imul
shll
push
sub
es
movsl
incb
jmp
mov
xor
mov
stos
dec
sbb
fwait
mov
mov
add
add
xor
je
jbe
mov
in
sub
movsb
cmc
cwtl
xchg
mov
in
pop
aaa
lcall
aad
mov
add
sbb
std
mov
push
add
cmp
cmp
andl
pusha
add
pusha
add
lods
cltd
mov
sarl
add
push
and
sbb
adc
add
push
or
add
inc
add
xchg
xchg
es
js
pushf
cmp
subl
fists
push
add
cltd
xchg
pop
ljmp
dec
sbb
xor
in
out
add
movb
inc
add
dec
stc
js
popa
mov
sbb
cwtl
movmskps
pop
outsl
fistl
hlt
inc
aas
push
dec
inc
cmp
je
cmp
shrl
jb
iret
jo
mov
dec
ss
sub
add
scas
into
dec
inc
or
xor
fcmovb
add
dec
lods
es
int
add
add
out
jg
push
aas
mov
adc
iret
cltd
pop
cmc
outsl
lock
inc
cwtl
rclb
adc
in
movb
dec
icebp
pop
lods
mov
fistpl
add
add
inc
add
movsb
push
mov
push
outsl
cltd
roll
xor
fimull
pop
lods
jns
hlt
test
push
xchg
cmp
jecxz
in
mov
out
scas
adc
dec
mov
out
push
mov
sti
dec
sub
sub
cmpsb
xchg
pusha
add
push
pop
xor
mov
lods
jno
stos
cmp
cmpsb
ret
fs
add
jo
xchg
loope
insb
fs
add
push
pop
jmp
jb
mov
popa
xchg
fistpll
adc
mov
testl
push
push
push
dec
and
mov
in
arpl
add
xor
call
out
pop
push
xchg
divb
out
lea
cs
add
pusha
add
mov
fisttpl
mov
mov
clc
mov
es
movsl
pop
xchg
sahf
je
mov
and
pop
mov
adc
push
mov
scas
mov
in
mov
imul
add
push
test
mov
mov
mov
add
pop
cmp
stc
mov
aam
cli
mov
mov
orl
les
add
mov
jb
push
js
pop
cltd
fsub
pop
bound
add
jnp
sarb
add
cmpsb
imul
cmp
and
mov
es
dec
mov
outsb
in
mov
dec
adc
dec
mov
add
jecxz
fs
movsl
mov
cld
and
mov
mov
sbb
mov
imulb
xor
mov
sub
cmp
push
mov
sub
nop
enter
imul
jbe
add
ds
fldpi
xor
xor
push
dec
popf
add
pop
pop
mov
mov
movb
and
addb
mov
lods
sarl
test
cld
aam
xchg
lcall
mov
fimuls
push
adc
repz
jb
sbb
dec
and
mov
and
xadd
call
addb
fnstsw
ds
lock
lret
xchg
aam
ds
mov
fisubs
test
and
jbe
js
popa
lods
jns
add
add
iret
dec
cs
mov
sbb
lret
inc
or
das
push
sbb
mov
fstps
inc
add
xor
sub
shrl
mov
sahf
inc
add
mov
dec
enter
sbb
mov
add
popf
repnz
adc
push
add
dec
lds
add
sbb
rcrl
dec
lret
sbb
popf
lock
call
xchg
out
mov
loopne
arpl
cmc
dec
cmc
xlat
gs
pop
or
inc
add
mov
insl
out
out
add
ss
fwait
jp
hlt
lds
fs
xchg
out
repz
or
addr16
daa
cmp
orl
sarl
inc
mov
jnp
fildll
movb
pop
int
daa
add
lea
leave
test
lods
lahf
ficomps
cmp
push
outsb
leave
dec
js
mov
mov
js
and
jg
or
cltd
mov
gs
push
loopne
mov
mov
inc
add
add
lds
pop
loop
mov
sub
mov
fildl
add
sbb
jns
pop
out
mov
mov
data16
cmc
jmp
mov
fmul
and
mov
aaa
adc
hlt
outsl
adc
sbb
adc
pop
aad
insb
rolb
insb
dec
xor
lcallw
pop
fldenv
js
and
jne
xchg
lcall
inc
add
add
xorl
cmp
test
push
lahf
test
jno
loope
movb
fwait
div
aam
push
sub
icebp
out
add
jmp
sbb
fiadds
add
mov
jl
scas
cltd
pop
lcall
and
adc
repnz
into
jns
push
sbb
bound
je
fisubrl
out
pop
movb
cld
mov
movsb
lcall
clc
into
test
mov
lds
daa
sub
enter
and
rol
add
mov
push
sbb
xor
pop
loop
add
push
push
or
sub
xchg
mov
add
pop
stos
into
shll
fbstp
adc
dec
cmp
fdivrp
mov
add
adc
ja
mov
data16
mov
stc
loop
add
or
mov
fsubrs
imul
into
cltd
mov
test
sbb
lcall
insb
mov
pop
push
or
cmp
or
test
lock
xchg
hlt
int
ss
pop
stc
push
cmp
mov
fnstsw
cmp
cmpsb
adc
sbb
push
jecxz
jge
xor
test
dec
dec
or
fisttpll
bound
push
pop
add
scas
pop
bswap
push
add
vmovupd
not
in
inc
add
out
repz
movsb
inc
add
jecxz
sub
into
lods
inc
jge
mov
cli
lock
sub
arpl
sbb
push
cmp
cld
mov
add
add
arpl
sahf
stc
fninit
ss
call
cmp
mov
jmp
dec
sub
ficomps
or
aas
in
mov
ja
pop
movb
aad
lock
cmp
sbb
adc
or
outsl
dec
cltd
ja
mov
dec
pop
add
ficoms
sbb
pop
cmp
cwtl
movsl
test
add
add
cli
pop
scas
dec
lahf
push
mov
loopne
int3
scas
lds
mov
and
pop
das
and
add
outsl
cmp
add
setge
scas
mulb
add
in
cmp
add
mov
push
test
fiadds
pop
add
inc
add
xchg
negb
fidivrs
add
scas
aaa
pop
fs
or
out
and
sub
les
xor
mov
adc
add
in
pop
icebp
nop
add
lahf
xchg
aaa
icebp
addb
mov
incb
mov
cmp
jle
xor
das
aas
cmc
out
je
scas
bound
and
hlt
dec
dec
addb
add
xor
icebp
or
add
jp
add
add
push
mov
icebp
xchg
pop
xchg
mov
lcall
add
mov
out
add
outsl
lods
out
and
mov
adc
addb
stc
mov
mov
inc
sub
mov
push
dec
jne
mov
xchg
jl
ljmp
mov
mov
fs
add
test
mull
xchg
dec
push
sahf
adc
add
adc
pop
cmp
adc
stc
mov
sti
adc
call
push
xlat
cli
fmuls
shrb
adc
scas
mov
gs
divb
addr16
jb
insw
push
addb
mov
mov
jae
ficomps
in
jle
sbb
iret
jecxz
dec
js
or
add
sub
nop
xchg
pop
test
push
add
fcomps
mov
stos
xchg
aaa
add
xor
add
add
in
push
lcall
add
jne
ss
leave
mov
rcrl
cmp
incl
into
sub
je
inc
add
sub
ds
xchg
in
inc
sub
cld
fsubr
lock
adc
fmull
int3
sarl
out
into
xchg
inc
jle
out
jp
xchg
jo
cmpsb
or
sub
inc
add
out
pop
xor
mov
cmp
push
adc
or
mov
xchg
or
das
es
inc
add
inc
add
jo
push
adc
sub
xor
xchg
jb
test
and
xor
add
dec
testl
mov
test
cli
jl
sarb
and
jns
add
stc
addb
fs
je
cmp
scas
push
push
push
xchg
add
jne
or
dec
data16
rolb
sbb
popa
in
sub
pop
movsb
adc
insl
dec
int
mov
add
and
add
fs
add
xchg
xor
add
stos
in
xor
push
bound
stc
sbb
popa
lret
lock
add
int3
cmpsb
pop
dec
jp
addb
outsl
push
or
rolb
adc
add
inc
bound
or
xchg
or
inc
bound
jo
mov
and
data16
xorl
fcoms
cld
pop
xchg
add
pop
xchg
and
mov
xor
call
rclb
rcrl
hlt
call
push
add
flds
stos
adc
and
cs
inc
add
cmp
or
sub
test
sti
std
lds
jp,pn
sub
cmpl
cmpsl
int3
sbb
xlat
fldt
push
shll
or
pcmpgtb
cmpl
nop
or
mov
add
jae
push
jae
cs
fstps
out
bound
dec
xor
cmp
add
decb
lea
jae
add
cwtl
stos
mov
jnp
cmpl
add
and
fbld
inc
add
add
push
les
addl
dec
lods
push
js
jle
pop
push
iret
rolb
mov
add
lret
and
clc
sbb
mov
lods
add
scas
mov
or
xchg
enter
ja
cltd
stc
dec
inc
adc
add
iret
inc
sub
out
lea
lods
jbe
or
adc
lret
int
insl
mov
mov
aaa
test
add
xor
stos
push
shll
jno
test
xchg
and
sbb
xchg
add
outsl
mov
mov
jbe
sub
mov
adc
cmp
cwtl
icebp
daa
jb
push
add
push
add
jns
cmpsl
or
add
sahf
jno
bound
pop
add
push
and
mov
aad
jae
xor
add
mov
lahf
ss
add
lcall
jo
and
mov
dec
inc
cmp
addb
mov
ja
cmp
js
ds
sbb
in
lcall
cwtl
iret
out
xlat
add
sub
sub
sub
sub
pop
push
and
addb
jecxz
add
add
jns
setge
pop
cmp
addr16
sti
and
fs
inc
fisttpl
adc
jae
fs
adc
jg
test
pop
in
jl
ret
aas
xor
lahf
ss
loop
jp
mov
cmp
call
fs
call
cmp
insl
bound
test
pop
pushf
pop
loope
sub
test
inc
add
pop
cmp
cld
cmp
insb
dec
cmc
dec
fldenv
bnd
dec
mov
jle
je
loop
ja
add
add
dec
jns
inc
sub
f2xm1
dec
scas
pop
pop
out
inc
add
or
add
out
and
xor
and
bound
movb
mov
add
call
mov
jae
sbbl
jmp
pop
fists
std
movsb
std
xchg
clc
xchg
add
es
pop
mov
mov
daa
adc
outsl
xchg
sbb
test
cltd
xchg
pop
cmc
setl
sbb
or
xchg
loop
push
push
xor
dec
fwait
fwait
leave
push
les
je
xchg
push
int3
sbb
dec
imul
mov
sub
jno
imul
jne
adc
popa
ret
shlb
int
repnz
cmp
aaa
imul
mov
inc
pop
addb
add
vphadduwd
icebp
shrl
mov
out
sbb
lock
cltd
mov
xchg
and
push
divb
pop
sub
pop
fcmove
add
pusha
add
popf
popa
add
xchg
movb
pop
mov
fcmovnb
add
add
mov
insl
pusha
add
lahf
ss
lahf
stos
push
cs
jl
add
pop
and
push
ljmp
popa
pusha
add
stos
pop
mov
sbb
pop
movb
xchg
mov
je
jae
scas
jno
add
jmp
jmp
or
cmp
mov
lock
xlat
lret
jnp
jp
ljmp
jno
sub
jnp
add
or
movsl
ss
mov
add
fistpl
mov
mov
pop
sbb
mov
mov
int
add
fcoml
loopne
cmp
mov
out
add
scas
mov
cmp
adc
lods
ret
and
push
xchg
dec
mov
shl
xlat
push
xor
jns
add
sub
xor
mov
int3
jne
sbb
sahf
xchg
mov
add
and
xchg
jle
adc
leave
mov
push
hlt
filds
cmp
movsl
push
adc
inc
fisttpl
xor
jnp
loopne
add
lret
dec
sbb
xchg
xchg
mov
jae
test
cmc
mov
inc
rcll
push
jns
fsubrl
pop
rolb
xor
or
jg
jae
bound
adc
pop
insb
xor
jns
push
sub
lcall
dec
pop
les
xchg
sub
add
sub
add
add
xchg
fistpl
xchg
bound
test
loopne
dec
and
cltd
and
fdivs
lcall
int3
negl
pusha
add
ret
jmp
lcall
adc
push
and
addb
insb
sbb
call
inc
add
popa
popa
mov
add
add
xchg
jg
mov
shl
xlat
adc
fstp
mov
mov
adc
pop
add
or
mov
xor
jmp
pop
sbb
addb
or
jmp
pop
aad
dec
inc
add
fs
out
stos
call
in
add
mov
or
xchg
test
les
xchg
fistps
add
adc
pop
test
idiv
xor
add
push
pop
mov
dec
jp
loopne
insl
or
lret
ds
shlb
add
dec
lret
pop
inc
mov
jmp
out
loopne
outsl
xor
repz
cmp
xchg
xchg
xor
dec
xor
add
xchg
add
addr16
aas
mov
inc
add
mov
test
jb
inc
add
dec
ds
adc
cld
lods
pop
cmp
enter
repz
and
lea
cmp
inc
add
testl
xchg
jp
lea
mov
int3
jg
aaa
fcompl
daa
jmp
icebp
or
fwait
or
inc
add
push
pusha
add
cmpsb
pop
lods
mov
bound
data16
jp
push
out
add
addb
or
fcmove
shl
add
cmpsb
mov
stos
js
or
inc
xor
clc
mov
pop
fs
xor
in
movb
rorl
sti
fisttpl
bswap
insb
jae
xor
jg
inc
add
jns
xchg
lds
add
add
fsubrl
push
add
add
push
adc
ret
sti
ljmp
xor
xchg
pop
xchg
sbb
pop
addb
popf
mov
hlt
sub
stos
sbb
inc
xor
pop
xchg
or
mov
sub
jmp
mov
push
fsubl
adc
icebp
mov
test
and
sbb
add
mov
push
dec
add
xchg
sbb
outsb
aaa
jmp
jg
xchg
cmp
test
lods
pop
int
loope
loopne
pop
insb
cmpsl
cld
push
and
add
addl
add
mov
pop
fwait
and
adc
rcll
push
lcall
sbb
or
add
cli
sub
fs
out
lcall
sub
mov
leave
mov
inc
add
ljmp
repz
ret
mov
stos
pop
inc
mov
rorl
pop
pop
push
lock
mov
add
xor
sub
add
inc
add
test
xchg
dec
cmpsb
ss
jb
cmc
scas
or
jmp
int
add
pop
or
or
add
pop
mov
add
pop
lock
mov
adc
or
jae
idivl
mov
loopne
jg
dec
xchg
dec
lret
add
enter
fs
add
lret
push
inc
add
add
add
and
push
cmp
mov
mov
sub
add
adc
in
cs
xchg
ss
add
imulb
xchg
es
inc
add
cmp
dec
cmp
xchg
lahf
bound
daa
mov
mov
jge
lock
adc
repz
cld
push
xchg
popa
push
insb
jnp
or
das
iret
into
jmp
pushl
je
cmp
mov
stc
addr16
add
push
ljmp
mov
mov
add
outsb
xchg
add
hlt
les
sub
scas
dec
es
xchg
insb
in
stos
jge
add
pop
sbb
and
stc
xor
xchg
test
or
xchg
pushf
adc
nop
jmp
cwtl
das
or
add
inc
dec
mov
mov
test
ret
aad
int3
rclw
test
jb
pusha
add
cltd
xchg
lret
push
jl
fbstp
and
scas
std
pop
xor
jp
testl
ret
popf
mov
test
jb
mov
xor
adc
sbb
jbe
outsb
xchg
mov
imul
jbe
sbb
outsl
fsubl
add
insl
mov
mov
sub
out
cwtl
cli
in
push
ljmp
repnz
into
cmp
jns
add
out
addb
fwait
mov
les
dec
clc
sti
dec
mov
rcrb
add
rcll
jo
and
inc
add
in
pop
jb
enter
roll
jnp
movsb
mov
mov
add
add
xchg
adc
les
pop
jle
adc
sbb
jg
push
in
pusha
add
pop
scas
pop
adc
mov
sbb
icebp
adc
mov
cltd
hlt
inc
out
aad
sahf
push
fstl
push
add
aam
mov
rcr
call
jmp
push
cli
add
in
aas
mov
in
add
xchg
xchg
lret
sti
pop
xlat
jo
pop
ljmp
jae
xchg
dec
hlt
xor
add
mov
addl
addb
jbe
aaa
mov
xor
lods
out
fcoml
leave
xchg
in
imul
mov
addl
inc
add
inc
add
mov
mov
add
dec
aad
add
in
jmp
xchg
mov
std
mov
add
imul
pop
mov
rcll
sub
sahf
iret
adc
or
mov
add
imul
cli
pop
je
ds
pusha
add
add
jecxz
int3
std
xchg
in
roll
push
loope
add
hlt
jmp
mov
add
cmp
xorl
lock
push
pop
les
lahf
inc
add
nop
lods
sub
mov
mov
ret
popl
pop
or
xchg
daa
loopne
add
jmp
fisubl
mov
inc
pop
popa
in
mov
or
push
adc
in
insb
data16
aam
mov
test
xchg
addb
test
push
frstor
mov
addb
cmpsl
jg
imul
xlat
mov
dec
pop
icebp
insl
pop
fcomip
daa
pusha
add
in
xchg
mov
shll
scas
into
inc
nop
mov
add
or
ja
push
sub
mov
inc
imul
add
mov
test
sub
add
test
adc
mov
sahf
insl
pop
pop
ror
outsb
int
fildll
ficoms
pop
mov
pop
les
into
outsl
lods
mov
adc
cmp
sub
add
scas
outsb
and
ds
add
mov
in
rorb
push
fstpt
sbb
and
test
pop
imul
cmp
mov
jb
or
sub
cli
leave
test
sub
dec
lods
cmc
ficompl
xor
jnp
nop
xchg
scas
xchg
pop
adc
mov
aas
pusha
add
gs
xchg
fisubs
stos
jmp
ret
stc
loopne
mov
mov
arpl
test
lahf
mov
add
jo
cmc
jbe
cmp
pop
sbbl
dec
bound
xlat
xor
movsb
repnz
adcl
inc
mov
mov
imul
aaa
mov
mov
popf
movsl
push
enter
xchg
test
movsb
loopne
aas
pop
ret
and
mov
push
sbb
push
dec
push
fwait
mov
sarl
int
mov
or
addb
addb
daa
push
lds
mov
arpl
dec
mulb
add
aaa
add
xchg
pop
imul
mov
mov
push
rcll
out
jge
test
and
dec
pop
das
int3
and
push
les
cmp
xchg
popa
shrb
aaa
xchg
out
xor
fsubrs
cmpl
mov
das
push
add
jbe
jmp
add
mov
inc
mov
pop
fildll
fstpl
sti
push
mov
testb
add
in
sub
sbb
add
jp
and
mov
ja
arpl
call
loope
sbb
mov
jne
inc
add
add
xor
mov
or
fs
xchg
mov
push
sub
and
adc
lods
cld
mov
rclb
xlat
pop
out
addb
out
rorl
add
add
jb
cmc
push
aas
jno
pop
out
dec
cmp
in
mov
aas
je
fidivrs
xor
or
pop
pop
jmp
aam
mov
aad
cmc
inc
hlt
into
mov
stos
adc
sahf
andl
std
je
jnp
add
push
std
popf
add
push
push
inc
add
add
mov
fisttpll
push
outsl
lret
cmp
add
sti
aaa
dec
jbe
mov
xor
test
fs
jp
subl
out
aad
jmp
push
jle
int
mov
xor
add
push
notl
es
shlb
push
push
add
fisubrs
mov
jmp
mov
or
push
mov
sub
rolb
in
mov
add
inc
inc
add
out
xchg
jo
add
outsb
xorl
jp
idivl
xchg
dec
cs
imull
push
add
cltd
push
cmp
push
cmp
jns
icebp
mov
rcll
fwait
dec
out
sbb
push
mov
push
add
adc
pop
push
jp
sbb
in
mov
aas
mov
popf
fcompl
push
add
add
xor
jns
mov
and
mov
xchg
ds
jbe
cmp
and
sub
ja
inc
add
data16
in
enter
add
xchg
mov
sub
add
notl
xchg
ud0
lds
int
cmp
lret
jl
jne
cmp
dec
aaa
and
sti
and
push
sbb
push
addb
dec
inc
add
cli
push
inc
sti
jnp
mov
add
repnz
sbb
inc
add
dec
out
sub
dec
orl
or
add
lods
sahf
sbb
cmp
mov
inc
je
jno
pop
xor
rolb
pop
int3
push
rolb
jae
loop
push
in
adc
ja
and
jae,pt
adc
fldcw
add
or
pop
out
sub
sub
cltd
insb
or
push
daa
lret
add
fcomi
and
xchg
sub
mov
fwait
add
jbe
aaa
and
sub
add
and
imulb
push
cmp
add
xor
xor
mov
sub
in
outsl
adc
insb
mov
lret
mov
add
lods
pop
mov
js
add
jno
push
add
ss
push
dec
dec
mov
sarl
cld
sbb
jae
dec
add
cmpsl
sbb
add
aad
iret
inc
adc
xchg
mov
out
fs
or
leavew
dec
push
ret
pusha
add
push
int3
cmp
roll
testb
jg
out
jmp
bound
aaa
loop
jae
cltd
sahf
out
push
cmp
inc
add
ljmp
pop
dec
or
xor
popl
pop
dec
sub
lock
add
add
test
sub
shl
add
scas
fldl
insb
punpcklbw
xchg
xchg
mov
in
icebp
das
push
xchg
ja
roll
xchg
mov
mov
fs
out
in
jl
pop
inc
add
and
mov
jbe
je
add
dec
scas
rolb
push
sub
mov
bound
lds
scas
mov
fdivrs
jmp
adc
and
js
aas
cmpsb
or
call
mov
movhps
stc
dec
dec
cmp
das
stc
inc
add
gs
xor
aam
push
pop
push
dec
ss
sbb
adc
xor
sub
xchg
leave
xchg
pop
bnd
add
dec
pop
in
add
dec
test
repz
mov
cmp
xlat
or
sbb
inc
add
inc
sub
cmp
push
sbbl
mov
scas
iret
push
mov
xchg
xor
cli
mov
iret
add
sub
mov
in
mov
mov
push
mov
cmp
push
std
stos
mov
lock
xchg
adc
add
in
inc
jl
out
insb
in
sub
xlat
push
add
fdivs
sub
jns
push
push
enter
movb
mov
ret
sub
scas
shll
adc
xchg
sbb
flds
add
dec
or
xchg
push
xor
jg
sbb
add
ljmp
xchg
inc
push
dec
pop
inc
add
lahf
repz
jg
stos
stos
mov
and
ret
mov
rolb
add
int3
ljmp
push
nop
in
jbe
xchg
aad
lods
add
insl
dec
and
inc
into
aam
repnz
lcall
add
lret
add
in
and
data16
imul
popf
mov
lods
mov
shlb
add
stos
in
mov
sub
cmp
mov
stos
sub
inc
add
or
in
lods
xor
or
dec
aas
adc
out
add
jns
test
mov
mov
push
jbe
jmp
add
rcr
xchg
ds
fstpl
push
jns
in
scas
or
cmp
sbb
out
in
hlt
shlb
addb
popa
or
pop
test
fwait
jb
jb
rcll
scas
sti
leave
stc
lds
lret
dec
dec
mov
mov
inc
xor
rcl
sub
inc
add
xchg
mov
add
imul
mov
mov
push
push
imul
dec
insb
push
ja
xchg
dec
jge
inc
rolb
add
or
int3
movsb
adc
cltd
std
pop
adc
test
adc
cmc
cmp
jmp
add
ss
pusha
add
leave
out
inc
and
adc
jl
std
mov
mov
push
push
pop
hlt
rorl
jae
popa
xchg
js
mov
sbb
or
add
cltd
loope
mov
push
or
enter
movb
add
xlat
jl
jg
inc
add
jnp
rcl
repz
in
inc
add
ja
sub
add
dec
fsubrs
xchg
shl
mov
xor
sub
int3
addr16
test
rcrl
sbb
outsl
sbb
js
loop
add
lea
jns
push
in
jb
mov
and
sub
nop
fcoml
or
cwtl
push
mov
add
jecxz
mov
imul
ss
dec
aam
cmc
mov
add
and
or
icebp
adc
popa
mov
in
lock
in
jns
push
dec
jb
add
aaa
out
icebp
in
or
aam
xor
pop
fsts
mulb
dec
dec
xchg
add
out
popa
stos
sub
aas
cmp
shlb
add
dec
or
lock
jae
add
cmpsl
insl
sahf
mov
xchg
and
cmp
pop
mov
xchg
xchg
push
cmpsb
adc
xor
add
mov
addb
lods
fdivrl
or
bound
cmp
ret
addb
jmp
mov
imull
mov
cmpsl
xchg
xchg
or
insl
arpl
pop
test
pop
inc
gs
fildl
aas
jecxz
push
insb
sti
mov
pop
sub
push
push
ljmp
outsl
push
rolb
inc
add
ret
int
roll
dec
pop
das
push
into
enter
bound
jo
in
add
lods
or
jmp
add
add
out
arpl
stc
loope
xchg
paddsb
or
aam
addr16
add
dec
aaa
jg
out
gs
push
push
pop
dec
or
sub
setbe
jno
jecxz
dec
mov
jp
sahf
adc
lods
popf
seto
and
mulb
and
or
inc
add
jmp
insb
ds
or
nop
movb
sub
cmpsl
mov
ret
sbb
rolb
or
mov
out
pushf
leave
fldcw
roll
ficoml
xchg
dec
adc
adc
mov
test
mov
pop
mov
jnp
out
add
popf
mov
sub
and
outsb
mov
dec
xchg
in
hlt
scas
fiadds
add
cvtps2pd
test
sbbl
cltd
movsb
lea
out
rol
push
sbb
inc
add
pop
stos
mov
stos
popl
dec
stos
aaa
pop
sbb
daa
sbb
push
mov
and
sbb
lds
shll
push
or
dec
cmc
cmp
sub
cltd
xchg
addb
bound
addb
mov
cli
dec
pushf
js
xchg
loope
mov
and
mull
xchg
xchg
aad
clc
push
inc
add
xlat
icebp
outsb
mov
cmp
nop
mov
daa
iret
je
fwait
xchg
mov
add
push
and
cltd
std
in
adc
add
repnz
or
add
push
iret
roll
lods
xchg
jb
mov
inc
into
push
push
int
add
lods
jb
imul
add
incl
or
sets
mov
push
mov
popa
jg
and
addb
push
das
aas
mov
add
jnp
outsl
cs
jl
add
addb
nop
and
xchg
cltd
adc
stc
cwtl
or
add
in
and
adc
push
pop
pop
mov
pop
push
imul
push
add
bound
stos
or
jp
dec
test
mov
add
adc
fcomps
mov
movsb
imul
add
sahf
pop
call
cwtl
add
lahf
mov
push
test
sti
dec
repnz
jo
add
xchg
sub
std
arpl
xchg
pop
inc
xor
mov
sub
mov
jns
push
lds
leave
mov
dec
in
je
add
outsb
repz
sub
mov
xchg
jecxz
outsb
addb
rorl
add
and
sub
sbb
add
inc
add
pop
push
pop
pop
jb
in
les
mov
xor
or
pop
ds
ljmp
rolb
sub
jns
push
mov
mov
add
fcompp
fldl
stos
dec
push
inc
add
and
jecxz
fisubrl
or
js
or
jg
rorl
xchg
stos
mov
into
mov
movsb
xchg
dec
mov
add
push
je
imul
jb,pn
jge
das
int
cmp
sti
mov
repnz
add
in
dec
cmpsb
adc
cwtl
aaa
test
push
ja
aad
mov
xchg
mov
add
jle
cwtl
jo
add
mov
in
pop
cmpsb
stos
jnp
sbb
xchg
popa
rolb
rolb
ljmp
arpl
xchg
cmpsl
push
aam
cli
inc
test
xchg
mov
ficoms
push
rcrl
mov
pop
movsl
cwtl
inc
pop
push
jb
xchg
jb
jns
cmpsb
pop
inc
add
add
add
jl
lahf
ds
jne
movsb
incb
cmpsl
cwtl
aaa
xchg
imull
or
stos
or
mov
inc
add
ret
clc
or
lret
cmp
fcmovb
jle
popa
fcoms
cwtl
addr16
or
popa
test
and
cmc
add
add
pop
pop
idivb
lahf
call
sub
mov
inc
fbstp
fucomip
fisubs
out
das
shrl
das
jmp
add
mov
movsl
pop
fistpll
xchg
and
add
std
mov
mov
gs
cmc
shll
or
add
movsb
and
cmp
sub
pop
lods
mov
adc
fisttps
mov
mov
cmp
icebp
pop
sahf
and
inc
add
jno
hlt
rol
inc
add
lods
rolb
inc
repnz
fdivr
mov
add
insb
mov
das
popa
aad
add
xchg
push
dec
jmp
adc
adc
xlat
xchg
jnp
add
dec
out
por
int
adc
sar
jno
xor
add
mov
add
add
add
sarl
inc
add
popl
pop
mov
icebp
insl
cld
fs
and
mov
xor
jne
jge
cmp
fmull
insl
lcall
dec
rcrl
add
push
add
push
jne
pop
push
lods
mov
mov
lock
mov
and
cli
mov
xor
hlt
xor
in
dec
hlt
or
imul
sahf
in
or
jmp
rolb
test
pop
xchg
cmp
sbbl
jecxz
pop
mov
insb
lahf
fldl
out
je
mov
mov
loope
cmp
jbe
and
jae
mov
adc
mov
push
pop
cmc
or
ss
mov
add
sbbl
sbb
fstl
dec
hlt
daa
xor
add
pop
iret
imul
dec
xchg
jno
jl,pn
sbbl
mov
sub
not
sbb
or
push
stc
ljmp
inc
dec
inc
add
ret
les
push
add
cmp
pushf
stc
xor
mov
add
mov
push
test
add
clc
das
jnp
leave
shll
and
and
pushf
scas
imul
mov
cwtl
sub
dec
loop
pop
or
adc
inc
leave
fimuls
add
addb
scas
gs
xchg
xchg
jmp
fcoml
jno
add
jge
pusha
add
fucom
pop
leave
scas
adc
or
repz
push
vpmaxub
push
adc
sub
and
or
outsb
mov
aam
pop
loop
out
sub
jecxz
cmp
stos
cmp
inc
add
mov
scas
aaa
sub
add
cmp
add
add
cli
pop
repz
push
mov
sub
ret
cmp
insb
mov
nop
pushl
flds
bnd
xchg
sbb
addb
add
ret
mov
pop
adc
add
inc
add
add
add
mov
add
mov
ja
add
xchg
in
pop
mov
and
add
add
jo
xlat
decb
add
cmp
push
test
lcall
mov
or
and
addr16
repnz
jo
ret
add
mov
out
bound
inc
add
fwait
pop
dec
add
jg
or
aas
or
jo
int3
imul
nop
pop
jns
xchg
jno
std
es
clc
sbb
pop
in
add
test
add
or
add
fisttpl
in
test
addb
test
add
dec
cmpsl
inc
mov
adc
add
fadds
add
sub
cmp
popl
jecxz
mov
movb
inc
ficoml
in
ret
lock
mov
das
sbb
out
jle
out
mov
mov
sbb
fwait
mov
mov
push
xchg
aam
push
inc
add
or
xchg
xor
sub
add
jge
inc
xchg
data16
mov
mov
push
imul
jno
push
add
jb
cmp
push
xchg
and
add
insb
and
mov
cmp
ret
or
sbb
lods
mov
add
test
and
inc
icebp
or
sahf
cld
push
std
test
mov
cli
jb
repz
add
add
push
pop
and
mov
fnstenv
lea
jae
fwait
loopne
inc
or
imul
stos
jae
mov
out
int3
xchg
push
mov
call
test
and
fcmovnb
aam
dec
popf
cmp
inc
es
shlb
icebp
mov
add
movsl
add
imul
imul
cmp
inc
jns
movl
dec
xor
aad
testl
addb
cs
jge
in
je
jmp
enter
les
jl
fistps
jg
push
aad
outsb
daa
rolb
notb
sub
enter
mov
push
das
les
jb
cmp
add
les
sub
jle
sbb
adc
sbb
pop
and
add
js
dec
mov
jl
rcl
gs
cwtl
sub
mov
shl
lods
sahf
lret
in
lcall
into
xchg
pop
repz
sbb
add
mov
call
fisttps
std
jecxz
add
negb
and
lcall
mov
dec
dec
lahf
imulb
nop
xor
mov
fucom
jns
dec
cmpsl
clc
popa
ret
jmp
mov
fisubs
sub
add
pop
imul
push
shld
add
insb
mov
lcall
adc
xchg
sub
mov
imul
add
add
adc
inc
add
adc
xlat
aad
out
jae
movsl
es
mov
pop
mov
xor
dec
repz
push
dec
aam
out
xchg
inc
add
das
aad
pusha
add
adcl
cmp
loop
adc
rcr
pop
rcrb
fsubrl
cmpsb
jbe
dec
sahf
mov
pop
movb
cwtl
rcr
shll
in
das
rolb
push
ret
mov
out
push
gs
cltd
faddp
add
loope
mov
add
push
mov
out
push
and
ret
xchg
mov
bound
aas
js
pop
jb
shll
pop
movsb
xchg
xchg
xchg
push
rorb
jns
mov
dec
fcmovnbe
scas
fsubrs
clc
stos
fisttpll
mov
add
arpl
add
frstor
add
jge
negl
or
and
cmp
test
fs
inc
add
sbb
mov
out
ficompl
xchg
add
std
inc
add
push
stos
sbb
int
lea
jns
xchg
bound
ds
popa
ret
xchg
cli
pop
pop
cltd
push
jmp
xor
push
sbb
out
dec
nop
cmpsl
stc
jae
jno
inc
add
add
into
add
push
xor
mov
xchg
ja
cs
add
test
bound
add
cmp
data16
into
sti
lcall
or
cwtl
stos
filds
outsb
lock
cwtl
xchg
sub
xchg
dec
push
or
in
jp
movsl
cmp
ljmp
jl
adc
jmp
mov
add
sarl
sub
scas
ja
mov
add
add
cmpsl
sbb
into
jl
add
sub
repz
movsl
jl
add
cmp
push
mov
leave
and
cmp
pop
sbb
mov
add
cmc
outsl
inc
add
fsubrs
pop
xchg
cwtl
imul
shrb
xlat
fisttpll
stos
les
cld
dec
fs
push
add
in
cs
out
arpl
add
enter
mov
lahf
inc
add
push
add
mov
test
ss
sti
pop
enter
pop
mov
out
jne
dec
outsb
js
dec
and
ja
jae
ret
or
arpl
cmpsb
sub
stos
lret
out
mov
cmc
lods
pop
in
jb
dec
jbe
mov
add
and
pop
adc
xor
xor
jo
loop
lcall
add
xlat
dec
inc
add
pop
jb
add
push
sub
mov
xchg
pmaxsw
js
jo
mov
negb
hlt
cmp
shll
mov
push
das
adc
or
cmp
fldenv
add
xorps
inc
add
ret
test
fsubs
add
sub
int
fistpl
add
stos
cmp
add
add
cs
iret
lret
xor
cmp
sub
add
adc
movb
push
stc
gs
lods
cmp
and
cmp
cmp
clc
sahf
ljmp
lods
shrl
jge
push
add
add
out
pusha
add
jno
fimuls
enter
out
enter
addb
xor
arpl
movb
stos
ret
inc
add
jne
addb
cmc
xchg
aad
imul
or
add
inc
and
adc
fidivrs
in
cmp
mov
sbb
add
add
push
addb
aaa
mov
ret
add
add
rorb
dec
les
cmp
xchg
mov
inc
add
add
jmp
fcompp
cli
mov
jno
fs
sub
mov
mov
data16
out
or
push
repz
mov
sbb
pop
gs
xchg
das
dec
leave
push
dec
cmp
adc
add
push
xor
decl
out
sub
test
test
movsl
outsl
xchg
stc
jno
decl
push
cltd
int3
pop
jmp
add
xor
jge
ss
in
movsl
inc
add
pop
mov
xor
adc
in
and
scas
mov
xor
bound
inc
add
lds
sbb
jnp
sbb
cs
adc
add
add
lds
adc
cmc
push
mov
cmpsl
pop
xchg
jne
ja
mov
adc
push
outsl
lcall
test
test
add
int
and
inc
add
mov
add
test
les
add
insl
sbb
test
jnp
mov
fwait
popa
xor
fmul
ret
sub
enter
adc
int3
xor
pop
push
mov
test
fwait
movsb
repz
fidivrl
add
ret
inc
mov
lret
lock
popf
mov
xchg
sub
add
jne
adc
pusha
add
mov
sbb
sbb
lods
hlt
je
adc
in
mov
daa
cli
mov
add
adc
movb
les
mov
add
popf
adc
jecxz
inc
add
pop
pop
mov
arpl
insb
jns
iret
mov
jns
jecxz
xor
and
dec
in
pop
pop
xchg
push
add
sub
test
xchg
add
jbe
jb
ss
loop
add
aam
jbe
das
movb
flds
push
dec
push
leave
fs
cmc
jle
popa
lahf
sub
mov
incl
xchg
in
pop
push
fmuls
jae
or
stos
pop
das
xchg
popf
cmp
lods
mov
mov
mov
lret
out
sahf
aad
sub
add
xor
jg
mov
lock
sub
fs
aam
push
cmp
sbb
aam
mov
orl
movsl
rolb
add
xlat
mov
add
push
mov
jb
out
xchg
inc
sub
fcmovnbe
je
jle
leave
cmp
movsl
sti
rorl
leave
mov
cmpsb
mov
pop
mov
mov
mov
jbe
inc
cmp
stos
inc
or
mov
fs
mov
out
mov
xchg
push
lret
inc
mov
addb
mov
arpl
cmp
jb
mov
in
aam
into
insl
push
mov
popa
sti
or
pinsrw
adc
inc
add
pop
mov
lock
movsl
in
test
jge
pusha
add
rcrl
push
out
add
int3
and
dec
js
dec
xchg
leave
sbb
or
adc
fmuls
push
mov
adc
mov
jecxz
stos
cmp
cwtl
fdivs
and
and
pop
stos
push
xchg
outsl
lea
mov
jle
repnz
in
pop
or
bound
lahf
mov
pop
out
ja
lret
adc
add
add
jle
add
xchg
and
insb
jbe
xor
jp
test
add
jne
les
mov
lds
add
sub
sbb
jns
pop
mov
xor
cs
clc
pop
xor
iret
push
mov
clc
je
push
push
loope
jmp
fisubrs
arpl
or
mov
mov
xchg
imul
mov
pop
mov
js
pop
jmp
jne
mov
inc
lods
les
adc
gs
add
ds
pushf
push
js
xchg
jae
incl
gs
jae
daa
mov
jne
mov
es
sub
push
inc
push
enter
fwait
repnz
pop
jne
adc
add
mov
and
xchg
adc
cmpsl
nop
test
jle
and
inc
int
and
or
push
push
add
add
pop
bound
mov
push
inc
add
ja
inc
push
addr16
dec
or
test
inc
add
sbb
rolb
jnp
xor
lock
mov
mov
xchg
inc
enter
gs
add
inc
jo
dec
cmp
jle
jg
shlw
add
add
mov
pop
imul
mov
xor
dec
pushf
mov
imul
push
outsl
out
movsb
in
arpl
bound
add
test
add
jns
out
push
add
cmc
mov
xchg
cmp
add
dec
fcomps
mov
out
arpl
loopne
rcl
jmp
fildll
mov
cmp
and
dec
test
rcrb
cmp
sbb
jg
cmc
movb
aas
jg
leave
push
cmp
icebp
imulb
mov
rolb
jmp
cwtl
jns
pop
stos
cli
test
add
mov
inc
add
inc
add
imul
imull
and
add
add
pop
sti
push
push
popf
adc
addb
mov
pop
sbb
sub
add
add
outsl
ret
pop
or
jae
test
jge
pop
xor
mov
lret
lock
mov
rolb
les
jecxz
pop
and
in
push
add
mov
sbb
rorl
stos
outsb
dec
incb
stos
divb
es
add
fwait
xor
adc
add
xor
inc
add
repz
and
pusha
add
in
xchg
fcomi
lock
sbb
xchg
in
add
movsl
xchg
cltd
js
jnp
pop
cmpsb
cmp
add
test
or
sbb
sbb
push
sti
inc
jae
sahf
pop
ret
add
hlt
nop
dec
lret
pop
movb
xchg
les
ret
adc
mov
rorl
mov
outsb
inc
add
repnz
and
mov
add
lods
push
mov
in
dec
ss
add
xlat
push
lmsw
and
inc
js
dec
aam
xchg
pop
mov
ja
jecxz
in
clc
push
aam
cli
sbb
ret
xchg
ror
xor
add
cltd
hlt
clc
push
jns
xor
mov
repz
add
add
jae
mov
dec
add
xchg
add
mov
shrb
daa
pop
ret
push
push
insb
mov
nop
das
or
xchg
ja
enter
cltd
cmp
mov
je
add
out
mov
adcl
ss
je
sahf
mov
stos
mov
mov
mov
sub
push
jne
cwtl
inc
mov
cltd
loopne
mov
xor
push
push
inc
add
fnstcw
andl
add
clc
shrb
add
fisubrs
into
mov
movsb
and
test
mov
imul
inc
add
call
rcr
or
add
daa
lock
mov
mov
add
mov
movsb
rorb
movl
or
jp
sub
sub
nop
add
inc
movsb
cmp
mov
mov
pusha
add
cld
aad
mov
xchg
mov
fistpl
ret
jb
jne
arpl
shll
mov
gs
data16
cmp
sub
pushf
sbb
fnstenv
out
lret
in
pop
scas
loope
sub
add
add
jbe
sahf
movsb
xor
xchg
clc
nop
imul
aas
es
nop
xor
mov
add
add
push
add
add
or
xor
js
pushf
popa
test
inc
stc
push
les
in
and
pop
jl
mov
mov
imul
sbb
sbb
dec
cld
js
movsl
mov
dec
dec
adc
loopne
mov
push
and
mulps
xchg
xchg
fs
shll
jge
xchg
pop
popa
push
add
push
add
jp
ljmp
cmc
lds
or
add
add
in
jg
cmp
xchg
sarl
test
add
add
add
in
movsl
int3
cmp
add
ret
aas
jg
add
scas
mov
stc
xor
and
pop
fdiv
daa
cmp
pop
xor
leave
pop
scas
mov
out
out
jl,pt
in
shlb
xchg
sub
inc
add
add
mov
imul
pusha
add
inc
xchg
ljmp
iret
movsl
or
sub
imul
dec
insl
jnp
mov
inc
add
outsb
movsb
js
jno
movsb
and
xor
add
jno
int3
jb
imul
push
mov
fisttpl
adc
pop
jno
imulb
add
cmpsb
out
mov
dec
jno
jmp
sub
jl
rolb
mov
pusha
add
clc
pop
pop
pop
mov
push
mov
add
jmp
gs
lods
sub
sub
insl
test
or
int3
enter
cwtl
dec
stc
call
loope
lock
lds
mov
xchg
or
pop
cmp
mov
inc
bound
lahf
hlt
jle
jb
loop
add
push
lsl
push
pop
push
sbb
imul
movsb
xor
stos
or
sbb
in
jecxz
jae
mov
pop
fidivs
pushf
xor
pop
push
xchg
pop
xor
xchg
test
and
shlb
inc
rolb
cli
dec
mov
rol
adc
addb
insb
adc
add
pushf
xchg
jecxz
push
add
jle
add
push
xchg
sarb
adc
xchg
shll
decl
mov
or
in
add
popa
ljmp
fwait
sub
lods
mov
push
das
and
add
loope
mov
cmovno
push
rolb
fisubs
fisttpl
push
and
fs
mov
add
in
test
sbb
loop
repnz
push
leave
xchg
mov
arpl
fmull
dec
jnp
and
call
dec
push
mov
add
add
add
dec
movsb
cs
xor
or
and
out
inc
add
scas
mov
out
mov
insl
in
push
pop
xchg
ret
lea
ret
test
je
inc
add
cmc
jne
cmc
out
das
pushf
and
movsb
stc
into
inc
and
test
or
jnp
add
sbb
or
push
pop
add
arpl
fs
add
add
shl
repnz
daa
sbb
add
add
stc
cs
and
loope
sub
je
add
add
mov
add
xor
outsl
mov
icebp
cmp
stos
jmp
out
push
mov
xor
xbegin
jg
sbb
mov
push
in
xchg
rolb
jmp
adc
mov
lods
mov
push
popf
and
xchg
sbb
or
add
xchg
loopne
jno
mov
jp
mov
adc
out
leave
repz
add
adc
pop
xchg
inc
add
rcr
or
mov
cmpsb
test
sti
inc
add
int
idivl
jb
sbb
lods
and
pop
shlb
or
sub
dec
cli
xchg
gs
loopne
rolb
andps
and
imul
shlw
outsl
dec
notl
inc
add
imul
shlb
or
add
sub
or
arpl
outsl
xchg
cwtl
je
pusha
add
lds
inc
xchg
sbb
or
xchg
cld
popa
or
shll
sbb
scas
sahf
dec
das
sti
pause
or
xor
pop
pop
mov
addb
add
out
sahf
int
stc
jp
fwait
dec
mov
pushw
add
int3
je
dec
movb
xchg
push
in
push
movsb
lea
pusha
add
mov
add
and
or
inc
add
fsubs
inc
pop
sub
pop
cmp
lahf
xchg
les
mov
pop
lods
popa
test
mov
mov
in
out
in
dec
movb
cmp
sti
je
mov
push
add
sub
aad
inc
add
xchg
fld
add
das
fs
and
testb
movsl
lret
add
cmc
hlt
mov
or
sub
out
sub
xor
jno
mov
in
adc
add
mov
pop
data16
push
or
out
xchg
pop
sub
mov
cmp
push
addb
lret
xchg
mov
fs
bound
aam
mov
les
test
xchg
add
xlat
loope
dec
adc
fistl
clc
jns
addb
sbb
rolb
lahf
fmuls
rcrb
pop
lahf
lods
inc
movsl
and
sub
mov
xchg
xor
and
fs
inc
gs
push
push
cmpsl
rorl
cmp
inc
mov
ljmp
js
sub
test
int3
stos
xchg
rolb
and
shl
mov
pop
cmp
aaa
cmp
testl
int3
push
mov
arpl
rolb
sub
mov
adc
add
jo
sub
jae
mov
pop
rolb
add
pop
cltd
shll
test
test
xchg
ret
cmp
rolb
add
icebp
mov
pop
rclb
test
addb
and
sti
sbb
sbb
test
mov
xor
lcall
xor
repnz
rcl
pop
mov
pop
mov
fs
or
push
adc
mov
es
add
mov
movsb
pop
mov
and
xchg
add
cmp
xor
mov
imul
lahf
push
mov
cmp
lret
xor
repz
test
adc
xor
mov
add
sbb
les
mov
xor
push
add
outsl
sub
pop
fscale
cs
loopne
inc
inc
add
add
out
xchg
xor
add
into
call
add
ret
shrl
adc
add
addb
sub
in
repz
lret
mov
inc
add
repnz
scas
lods
or
movsl
lret
out
jg
fnsave
lea
pushf
out
in
add
mov
ljmp
bound
add
movsb
in
sub
fisubrs
dec
push
loop
jle
out
xlat
adc
popa
bound
jecxz
add
movb
mov
xlat
movb
add
ret
add
dec
push
cmpsl
andnps
mov
mov
iret
mov
addb
pop
test
add
and
pop
xchg
outsl
ljmp
insl
dec
mov
add
pop
push
lret
and
stc
divb
adc
adc
mov
jp
sub
xchg
mov
mov
add
clc
xor
mov
add
lods
mov
jge
rolb
pushf
jecxz
gs
mov
fs
mov
dec
ret
dec
int3
mov
add
mov
xlat
jae
mov
mov
sti
loopne
outsb
jmp
inc
add
test
jae
sbb
sbb
pushf
inc
in
ret
lret
das
das
jne
add
jbe
push
pop
outsl
xor
add
int
inc
add
mov
add
xor
jno
test
cmp
mov
int3
cli
xchg
sbb
adc
adc
sbb
js
stos
hlt
fnsave
adc
inc
add
aaa
jo
or
pop
ljmp
cmp
sub
jae
push
lds
sub
iret
jecxz
dec
ss
xchg
jne
lods
cmpsb
push
push
push
flds
fdiv
mov
jnp
les
bound
xchg
aaa
cmp
pop
jecxz
jo
lods
orl
xchg
push
ret
hlt
adc
xchg
jae
orl
cmp
mov
lahf
adc
inc
add
addb
mull
sub
jne
and
jmp
mov
inc
add
pop
dec
fldcw
lret
mov
fists
das
aam
dec
dec
jns
add
or
xor
pop
stc
imul
push
mov
inc
call
gs
lret
sub
cmp
push
xor
vpaddsw
add
add
test
mov
xchg
repnz
xchg
shl
xlat
push
imul
ljmp
jne
pop
add
mov
mov
mov
shll
ds
mov
xor
pop
jp
add
add
lcall
pop
jmp
movsb
enter
push
filds
dec
rcrl
push
nop
insb
xor
lret
sub
jecxz
cs
inc
add
xchg
mov
pop
les
pop
fstps
cli
cmp
cmp
cmpsl
lret
call
dec
cmp
pop
sub
mov
in
in
daa
cmp
test
add
jnp
mov
pop
jae
iret
xchg
scas
test
mov
xor
cmp
test
sbb
jecxz
inc
add
pop
aas
adc
movsb
mov
xchg
imul
push
into
lahf
flds
push
sub
or
enter
nop
cmp
mov
addb
pop
push
cmp
sbb
push
rorb
xlat
icebp
cli
ja
add
cs
xchg
cmp
sti
movsl
popa
or
dec
ret
pop
ljmp
ljmp
adc
xchg
mov
cld
xchg
fildll
popa
lds
mov
lcall
insb
bound
push
cli
call
pop
mov
es
and
sub
mov
adc
pop
push
xor
enter
push
lret
aaa
int3
popl
out
or
xor
sbbl
sarb
movsl
or
cwtl
cmp
imul
jno
or
mov
and
pop
adc
inc
out
mov
jmp
add
jle
in
in
mov
pop
mov
jmp
outsb
jnp
or
mov
pop
jecxz
xor
or
lods
pusha
add
in
dec
ret
push
lds
mov
lcall
mov
dec
cmp
aam
rolb
into
cmc
rorb
fildl
mov
mov
sbb
fdivrl
inc
add
stos
into
sub
loope
add
mov
pop
movsl
xor
xor
lea
jg
add
add
test
or
and
mov
addb
mov
mov
add
sbb
fwait
cmp
repz
sti
das
stos
movsl
push
icebp
das
mov
scas
movsl
xor
xor
rolb
xchg
and
jl
and
das
inc
add
pop
int
add
mov
insb
pop
pop
ss
jns
nop
bound
das
sub
dec
loop
rorl
inc
add
add
shll
cli
dec
es
aas
jns
add
cmp
scas
in
imul
jbe
sub
xor
inc
add
add
clc
push
jmp
or
push
add
int
rolb
jo
xchg
fidivrl
scas
rolb
rolb
push
lock
adc
xor
mov
mov
cli
mov
xchg
movb
push
push
lock
lods
test
or
add
mov
mov
add
xor
je
cld
inc
or
add
dec
in
xchg
pop
pop
negb
mov
loopne
add
and
dec
rolb
jl
mov
loope
add
jae
mov
stos
daa
cwtl
xchg
jle
iret
pop
ret
mov
and
or
fisttpll
ret
stos
jb
pavgb
jne
xchg
cltd
mov
mov
mov
scas
inc
fwait
je
mov
mov
mov
mov
lods
out
sbb
jg
cmp
test
adc
inc
sbb
xchg
js
xlat
mov
lret
lods
jb
cmpl
rep
popl
ffree
ret
in
pop
mov
mov
fisttps
add
ficoms
icebp
lods
adc
cmpsb
inc
or
xchg
fisubrs
popf
or
cmpsl
mov
mov
push
dec
scas
xchg
lods
push
lock
or
cltd
push
in
mov
lret
mov
fcomi
add
mov
cwtl
imul
mov
jno
cmp
popa
inc
fldcw
mov
lock
xlat
mov
inc
add
cmpsl
aam
add
inc
add
xchg
push
mov
mov
pop
test
and
shrb
int3
aam
add
push
stos
inc
add
cmp
cltd
cmc
dec
pop
fimull
test
xchg
je
scas
xor
ror
xchg
in
icebp
xor
ficoms
pop
fwait
xor
xchg
sub
aad
push
add
push
pushf
sbb
lret
push
sbb
cmpsb
sbb
rolb
negb
fidivs
lret
sti
and
or
cmp
sbb
add
push
loope
xchg
xchg
sbbl
test
xchg
pop
cli
mov
cli
sub
mov
sbbl
test
inc
adc
xchg
mov
sbb
out
sarl
mov
fld
add
cmpsw
in
loopne
add
hlt
lods
or
cmpsb
dec
je
roll
mov
xor
pop
ja
repnz
repz
jl
aaa
test
scas
mov
imul
out
mov
mov
add
mov
mov
mov
sub
or
jmp
into
lea
daa
dec
pop
push
clc
adc
inc
jle
repz
add
or
paddq
imull
push
push
pushf
lret
jnp
es
mov
movb
add
fwait
outsb
sbb
jno
rcrl
jne
out
leave
xchg
test
stos
mov
add
mov
mov
fnstcw
imull
aam
lahf
lcall
add
mov
arpl
mov
js
in
dec
aad
lock
mov
pop
je
fidivrl
jne
or
lret
pop
inc
add
ljmp
add
add
mov
mov
out
pop
mov
addb
jge
add
xor
add
out
mov
sahf
ljmp
pop
xchg
imul
mov
loop
addb
leave
pop
lock
lea
mov
fimuls
fucomip
cmp
fistps
bound
mov
lods
lods
aaa
into
dec
dec
xchg
mov
sbb
lods
in
addl
out
mov
sbb
leave
aas
flds
sub
dec
mov
cmp
mov
add
xor
iret
dec
fsubr
pop
push
inc
add
jg
in
std
jmp
xchg
loopne
mov
add
scas
or
push
int
add
add
out
inc
add
and
xor
iret
imul
mov
push
in
cmpsb
ds
mov
adc
mov
pop
adc
popa
xor
sti
ljmp
jge
inc
add
aad
xor
aas
mov
dec
aaa
push
adc
sub
test
add
mov
push
bound
push
lcall
jl
shrl
pusha
add
in
mov
adc
bound
pop
pusha
add
rolb
scas
sub
rolb
add
push
add
orl
add
or
fbstp
ret
nop
dec
xchg
push
aad
cmpsl
addr16
mov
push
pop
fnstsw
mov
aam
shlb
add
add
ss
imul
mov
add
push
imul
sbb
mov
popa
bound
ret
aam
pop
sahf
clc
add
enter
jmp
inc
shll
add
sub
nop
mov
jnp
lcall
xor
sub
mov
jns
sbb
add
leave
sub
addb
add
adc
js
les
out
test
loope
mov
cld
adc
out
aam
or
rcrl
add
add
dec
lcall
or
pop
sti
mov
aaa
inc
mov
cmp
scas
lret
int3
cmp
xchg
out
sub
add
and
andl
mov
scas
xor
sbb
mov
adc
or
push
pushf
ficompl
push
jge
and
adc
cmp
mov
movsb
cmpsb
lcall
sbbl
jne
add
sbb
push
mov
pop
xor
xchg
push
pop
lret
mov
and
inc
jle
mov
inc
mov
in
xor
cmp
cmp
data16
add
aas
in
and
xor
sub
cmp
mov
and
int
inc
cmp
jp
shrl
scas
mov
xchg
repz
ret
xor
std
mov
sub
sbb
and
ss
cmp
scas
mov
aas
jns
lods
fcoms
test
adc
mov
test
sub
mov
dec
loop
jb
sub
inc
cmp
add
or
outsl
or
loope
add
xchg
mov
add
mov
mov
in
jecxz
scas
rolb
xchg
mov
rorl
and
les
lds
adc
dec
mov
ljmp
cmpsb
popf
and
add
sahf
jnp
lret
enter
add
loop
addb
add
mov
mov
push
push
mov
cltd
loopne
mov
daa
js
sbb
add
mov
aad
popf
rcrb
in
into
cmp
dec
inc
mov
or
test
icebp
fidivl
push
xchg
mov
movsl
fildll
test
xor
lret
mov
fbld
mov
xchg
xor
lods
fidivrl
leave
into
mov
dec
inc
add
jne
push
add
add
pop
mov
clc
mov
shll
insl
lds
inc
add
add
and
imul
push
mov
out
js
ret
negb
je
mov
sub
add
pop
sbb
outsb
pop
xchg
mov
mov
jp
dec
incl
test
cltd
mov
call
sbb
add
cwtl
sub
test
cmp
adc
out
fcomi
jp
add
sub
dec
add
add
or
roll
sub
mov
repnz
inc
mov
loope
push
mov
jmp
outsl
es
cs
inc
add
loope
or
inc
testb
bound
aaa
add
out
ja
clc
and
daa
and
dec
xor
cmc
insl
mov
or
xchg
jno
add
cmpsb
mov
cmpsb
sti
insl
loop
sahf
mov
stc
nop
es
add
dec
ret
push
popf
mov
stc
nop
es
aam
pop
add
add
flds
nop
es
mov
test
mov
cld
nop
jmp
aam
repz
mov
jb,pt
nop
cld
nop
jmp
dec
add
jns
jmp
add
incl
nop
cld
nop
jmp
add
push
xchg
clc
push
mov
add
in
add
add
inc
add
add
add
stc
nop
es
dec
xchg
add
movsb
xor
test
jmp
nop
es
pop
roll
lret
sub
mov
nop
cld
nop
jmp
inc
add
inc
stc
nop
es
pop
testb
fiaddl
fisubrl
stc
nop
es
fbstp
cwtl
subl
push
mov
xchg
ret
jp
icebp
push
push
push
mov
xchg
ret
sub
pop
add
mov
stc
nop
es
add
ljmp
add
pop
ficoml
add
stc
nop
es
add
mov
add
push
mov
xchg
ret
push
add
pop
add
decl
add
nop
es
jns
sub
cmp
mov
xchg
ret
sub
and
push
mov
xchg
ret
inc
mov
push
and
stc
xor
push
mov
xchg
ret
dec
add
add
xor
loop
add
push
mov
xchg
ret
jge
int3
jge
pop
mov
stc
nop
es
mov
mov
stc
nop
es
add
add
je
xor
nop
jmp
fiaddl
mov
add
mov
stc
nop
es
pop
add
add
add
nop
cld
nop
jmp
add
add
push
mov
cmp
add
cs
add
ss
rolb
add
call
stc
nop
es
add
sub
cmp
push
add
mov
add
add
call
nop
cld
nop
jmp
add
ja
sbb
loop
cld
nop
jmp
sbb
push
xor
call
cld
nop
jmp
mov
add
xorl
fbstp
rclb
cli
inc
add
add
mov
add
xor
pusha
stc
nop
es
dec
sub
add
add
push
imul
cmp
ret
test
add
mov
xchg
ret
dec
add
jle
movb
mov
xchg
ret
add
add
cld
push
mov
xchg
ret
mov
add
add
sbb
sub
stc
nop
es
sbb
add
mov
stc
nop
es
add
aad
add
nop
cld
nop
jmp
push
aam
add
xor
push
mov
xchg
ret
mov
ja
inc
inc
add
add
stc
nop
es
sub
in
lret
add
push
mov
xchg
ret
fiaddl
dec
add
add
pop
push
mov
xchg
ret
dec
in
sub
jns
idivl
test
nop
es
add
add
movzwl
stc
nop
es
add
add
push
stc
add
stc
nop
es
add
sub
sub
es
stos
add
add
gs
push
push
mov
xchg
ret
push
add
mov
mov
lret
nop
jmp
lret
je
mov
pop
mov
nop
cld
nop
jmp
add
inc
push
fisubrl
cs
stc
nop
es
mov
add
add
add
push
mov
xchg
ret
xchg
add
add
out
push
stc
nop
es
add
add
add
hlt
test
rclb
push
in
inc
add
add
icebp
add
cmp
jbe
stc
nop
es
add
push
add
add
push
pop
pop
stc
nop
es
dec
add
sub
add
stc
nop
es
add
pop
mov
stc
nop
es
add
fistps
stos
inc
fisubs
cld
nop
jmp
dec
and
nop
sub
push
add
mov
stc
nop
es
add
nop
push
add
adc
jb
add
add
add
xchg
push
test
push
add
cld
nop
jmp
add
nop
lock
cld
nop
jmp
mov
dec
out
dec
add
add
push
lds
mov
stc
nop
es
fs
add
add
mov
cmp
ret
add
stos
add
movzwl
stc
nop
es
and
push
push
sub
push
nop
cld
nop
jmp
add
add
add
add
stc
nop
es
addl
or
dec
add
sub
add
icebp
add
add
mov
nop
cld
nop
jmp
js
cwtl
movsb
fisttpl
nop
es
add
add
dec
addr16
pushl
push
mov
xchg
ret
rolb
dec
push
test
adc
add
nop
es
addl
cmp
nop
cld
nop
jmp
mov
xor
add
add
stc
nop
es
add
xor
add
add
stc
nop
es
inc
add
cmc
adc
icebp
push
in
mov
nop
cld
nop
jmp
add
pop
rorl
push
mov
xchg
ret
mov
push
fiaddl
add
or
nop
es
add
dec
cwtl
add
add
stc
nop
es
mov
add
movsl
inc
xchg
dec
add
stc
nop
es
test
push
aam
stos
xor
stc
nop
es
lret
add
add
nop
push
stc
nop
es
inc
add
jns
add
movzwl
stc
nop
es
add
push
push
mov
xchg
ret
sub
sub
sbb
xchg
lret
add
add
sbb
add
pop
lret
repz
add
nop
es
sub
inc
adc
nop
es
pop
sub
add
js
lea
push
mov
xchg
ret
add
push
add
rclb
das
add
xchg
ret
mov
dec
iret
jl
stc
nop
es
add
sub
push
stc
nop
es
add
lret
add
add
loopne
gs
inc
and
stc
nop
es
sub
add
mov
inc
stc
nop
es
add
mov
add
in
inc
add
fildll
add
dec
lods
mov
stc
nop
es
sub
add
pop
nop
cld
nop
jmp
aam
sub
push
push
stc
nop
es
add
outsl
daa
sub
test
add
stc
nop
es
push
shll
nop
cld
nop
jmp
dec
dec
add
rcrl
lea
nop
cld
nop
jmp
add
stos
sub
add
pop
movb
mov
stc
nop
es
add
add
jge
js
jmp
stc
nop
es
fcomip
add
fisttps
mov
es
add
mov
stc
nop
es
add
add
fidivrl
dec
push
add
nop
cld
nop
jmp
in
je
ret
cmc
dec
xor
stc
nop
es
in
inc
sub
nop
sbb
inc
push
mov
xchg
ret
dec
add
add
mov
add
mov
xchg
ret
subl
sub
cld
inc
add
icebp
add
cwtl
add
push
movsb
adc
stc
nop
es
add
jg
stc
nop
es
add
and
add
stc
nop
es
sub
add
outsl
mov
stc
nop
es
add
add
add
push
push
mov
xchg
ret
push
mov
add
nop
es
mov
mov
mov
add
call
add
add
adc
aam
je
pushf
mov
stc
nop
es
sub
push
stc
nop
es
add
testb
jge
mov
stc
nop
es
add
dec
icebp
add
mov
mov
xchg
ret
mov
add
cwtl
add
call
stc
nop
es
dec
filds
fidivrl
imul
es
mov
dec
sub
in
push
add
add
add
add
lea
push
push
mov
xchg
ret
test
add
adc
stc
nop
es
dec
mov
dec
xor
stc
nop
es
push
je
xchg
pop
mov
stc
nop
es
xor
lret
add
add
popa
fs
nop
es
test
add
or
nop
es
jp
add
add
xor
mov
js
nop
es
xchg
add
add
inc
push
mov
xchg
ret
ja
add
mov
fmull
test
or
es
shlb
sbb
popa
add
nop
es
mov
testb
sub
jle
stc
nop
es
cmc
fildll
push
push
mov
xchg
ret
out
add
sbb
es
icebp
fiaddl
add
inc
out
add
mov
stc
nop
es
add
daa
add
add
push
inc
add
add
fiaddl
ret
xchg
cmpsb
pop
push
stc
nop
es
add
testb
inc
add
xchg
mov
or
push
std
inc
add
dec
add
sub
pop
aas
and
push
mov
xchg
ret
sbb
sub
pop
xor
mov
stc
nop
es
add
fwait
push
push
mov
xchg
ret
add
add
sbb
push
data16
pop
and
nop
es
add
js
sbb
or
nop
cld
nop
jmp
pop
fiaddl
push
add
add
mov
stc
nop
es
addl
stc
nop
es
add
mov
roll
add
push
stc
nop
es
repz
add
add
mov
stc
nop
es
mov
sub
stos
icebp
pop
jmp
stc
nop
es
mov
daa
test
add
push
mov
xchg
ret
mov
sub
out
pop
push
mov
xchg
ret
add
daa
add
icebp
sub
xchg
movsb
mov
repz
nop
es
stos
add
push
sub
sbb
stc
nop
es
add
aam
add
icebp
shll
nop
cld
nop
jmp
add
add
add
decb
test
or
add
add
add
add
xchg
lret
je
add
adc
add
mov
rcrl
pop
jmp
nop
cld
nop
jmp
sub
aam
sub
call
stc
nop
es
test
add
xor
leave
sub
nop
es
testb
notb
or
test
sbb
add
nop
es
add
ficompl
nop
es
add
ds
nop
cld
nop
jmp
shl
filds
add
stc
nop
es
add
rolb
mov
and
xchg
stc
mov
push
mov
xchg
ret
dec
add
testb
adc
jne
stc
nop
es
add
fists
es
add
add
add
mov
sub
cld
nop
jmp
add
add
add
nop
cld
nop
jmp
nop
add
add
add
jg
stc
nop
es
ja
test
push
nop
cld
nop
jmp
add
cwtl
js
dec
add
stc
nop
es
sub
in
add
add
stc
nop
es
dec
cmc
add
push
es
int3
add
mov
push
nop
cld
nop
jmp
outsl
add
aam
add
sub
dec
push
mov
xchg
ret
add
add
xor
stc
nop
es
push
push
sbb
add
aam
add
push
stc
nop
es
mov
dec
mov
add
popa
and
cld
nop
jmp
add
add
push
add
popf
cmp
push
mov
xchg
ret
pop
add
mov
add
nop
es
add
sbb
add
ret
stc
nop
es
js
filds
add
add
call
or
xchg
ret
mov
sub
fisttps
sbb
jo
nop
cld
nop
jmp
jge
add
mov
sub
shr
push
mov
xchg
ret
nop
repz
add
stc
nop
es
add
ret
aam
add
movb
add
insb
nop
cld
nop
jmp
add
jge
xchg
xchg
data16
loop
nop
cld
nop
jmp
inc
je
mov
ret
add
nop
es
sub
add
add
stos
xor
nop
cld
nop
jmp
inc
add
pop
add
pushl
stc
nop
es
push
add
inc
add
nop
cld
nop
jmp
add
jge
add
add
nop
cld
nop
jmp
fiaddl
add
mov
nop
es
div
add
mov
movb
xlat
sub
nop
es
push
mov
add
add
jb
mov
nop
cld
nop
jmp
repz
push
add
stc
nop
es
shrb
stos
add
int3
das
push
stc
nop
es
int3
inc
nop
add
add
add
add
jg
inc
add
filds
add
xchg
add
stc
nop
es
dec
add
sub
add
add
nop
cld
nop
jmp
add
lret
repz
push
sbb
nop
es
daa
sub
add
jmp
stc
nop
es
add
add
push
mov
xchg
ret
js
lret
daa
add
xor
stc
nop
es
lret
mov
pop
pusha
stc
nop
es
stos
je
jge
pop
add
jg
js
nop
cld
nop
jmp
add
imulb
dec
add
push
mov
andl
adc
xor
add
push
push
fldcw
add
add
pop
test
int3
inc
add
mov
stc
nop
es
ret
dec
aas
rep
stc
nop
es
add
sub
ljmp
nop
es
filds
add
sub
es
jp
add
sub
pop
pop
nop
cld
nop
jmp
push
mov
add
add
push
stc
nop
es
add
icebp
add
add
sub
sbb
push
call
std
incl
add
pop
aam
nop
mov
fisttpll
inc
add
test
inc
add
repz
nop
es
add
outsl
fidivrl
add
inc
add
add
mov
sbb
cld
nop
jmp
sub
testb
add
add
stc
nop
es
add
ljmp
jb
filds
fs
dec
push
mov
test
es
mov
cmc
add
cld
nop
jmp
add
repz
jp
inc
xor
push
push
mov
xchg
ret
in
mov
mov
stc
nop
es
rcl
add
add
add
push
stc
nop
es
add
add
pop
add
stc
nop
es
mov
add
add
xchg
dec
mov
nop
cld
nop
jmp
cwtl
add
jns
stc
nop
es
push
add
stc
nop
es
and
test
add
stos
and
jb
dec
add
out
notb
int
lret
stc
nop
es
dec
mov
testb
add
mov
stc
nop
es
filds
add
add
add
icebp
inc
add
mov
add
add
or
stc
nop
es
sbb
leave
out
call
sbb
add
je
add
jne
nop
cld
nop
jmp
add
mov
lods
pop
push
mov
xchg
ret
add
add
add
cltd
and
nop
cld
nop
jmp
daa
add
fidivl
je
stc
nop
es
aam
in
push
push
mov
xchg
ret
push
dec
add
sub
aaa
mov
stc
nop
es
push
sbb
cwtl
shll
gs
nop
es
add
add
mov
nop
es
test
in
add
add
rep
push
mov
xchg
ret
sbb
add
testb
faddl
cld
nop
jmp
add
add
add
add
nop
cld
nop
jmp
sub
add
stos
stc
nop
es
add
add
dec
int3
ja
dec
shr
stc
nop
es
aam
add
add
and
jne
stc
nop
es
add
push
jmp
es
je
add
add
nop
cld
nop
jmp
and
add
in
ss
loope
sub
stc
nop
es
sbb
jmp
sub
add
sarb
mov
nop
es
sbb
neg
add
dec
insb
pop
push
mov
xchg
ret
add
xor
add
stc
nop
es
add
add
mov
addr16
dec
adc
scas
out
add
jns
add
das
mov
nop
cld
nop
jmp
add
sbb
sub
mov
nop
cld
nop
jmp
add
roll
int3
dec
icebp
add
nop
es
inc
pop
sub
mov
mov
xchg
ret
je
add
add
rcl
mov
stc
nop
es
ja
mov
loope
mov
stc
nop
es
mov
sub
scas
xchg
stc
nop
es
sbb
nop
add
stos
pop
mov
cld
nop
jmp
add
add
test
mov
nop
jmp
jp
jp
stos
add
mov
adc
cld
nop
jmp
add
pop
push
push
mov
nop
cld
nop
jmp
sub
js
and
push
les
stc
nop
es
add
sbb
lds
jb
repz
mov
add
sbb
push
inc
add
push
outsl
push
add
or
jmp
add
cmc
mov
cld
nop
jmp
pop
ja
out
add
xor
je
stc
nop
es
filds
add
nop
es
add
inc
add
add
in
dec
shl
stc
nop
es
jp
add
stc
nop
es
add
add
add
add
imul
jb
push
add
add
cmp
repz
mov
xchg
ret
fbstp
mov
nop
stos
mov
stc
nop
es
add
add
das
add
push
mov
xchg
ret
je
add
nop
sbb
add
stc
nop
es
sub
icebp
stc
push
push
mov
xchg
ret
nop
js
push
add
add
ds
stc
nop
es
add
aam
dec
ret
jp
insl
push
push
mov
xchg
ret
add
add
add
popf
jmp
stc
nop
es
add
notb
outsb
add
push
mov
xchg
ret
add
add
adc
push
stc
nop
es
dec
add
sub
add
dec
jne
stc
nop
es
add
stos
push
add
stc
nop
es
fs
add
shlb
add
mov
stc
nop
es
cmc
add
out
push
mov
add
lret
add
add
lods
sbb
cmp
mov
stc
nop
es
pop
push
jp
xchg
nop
es
and
add
aam
pop
add
stc
nop
es
add
dec
fiaddl
repz
sub
es
add
sbb
dec
add
add
mov
xchg
ret
icebp
dec
ret
add
add
stc
nop
es
lret
add
adc
test
cld
stc
nop
es
add
cmc
push
nop
dec
push
nop
cld
nop
jmp
add
mov
daa
sub
mov
xchg
ret
pop
add
add
or
call
or
add
pop
in
xchg
enter
stc
nop
es
aam
add
pop
ljmp
jb
add
daa
add
add
pop
stc
nop
es
push
add
mov
lret
mov
push
push
mov
xchg
ret
add
out
outsl
loope
lock
mov
stc
nop
es
out
xchg
mov
add
dec
dec
push
mov
xchg
ret
jns
int3
add
dec
outsl
rol
add
push
mov
stc
nop
es
jp
add
dec
fisttpl
es
add
add
add
flds
sti
stc
nop
es
add
nop
mov
add
test
nop
es
aam
mov
out
stos
push
mov
xchg
ret
add
sub
inc
outsb
mov
stc
nop
es
add
add
adcl
out
add
fbld
add
ret
add
xor
push
mov
xchg
ret
add
out
add
mov
lock
add
fidivl
int
adc
adc
add
sub
add
add
push
stc
nop
es
add
add
fwait
mov
stc
nop
es
add
add
sub
jmp
stc
nop
es
add
lret
add
mov
stc
nop
es
inc
outsl
ja
push
stc
nop
es
add
adcl
nop
es
aam
add
cmp
mov
inc
add
add
or
stc
nop
es
add
add
and
dec
mov
nop
cld
nop
jmp
daa
add
add
add
call
nop
es
add
push
add
nop
es
add
mov
mov
stc
nop
es
push
push
nop
dec
add
call
stc
nop
es
add
mov
pop
stos
stc
nop
es
add
cmc
add
addr16
je
stc
nop
es
sub
and
xor
push
stc
nop
es
add
add
add
in
or
nop
jmp
repz
shrl
ret
scas
add
stc
nop
es
add
idivb
andl
jmp
cmc
add
add
nop
es
icebp
add
aam
add
stc
nop
es
add
add
inc
jno
push
nop
cld
nop
jmp
xor
add
aam
inc
lret
jp
and
stc
nop
es
lret
ret
xor
push
ljmp
add
jp
lret
add
mov
add
nop
cld
nop
jmp
aam
add
jle
pop
call
cld
decl
mov
push
push
mov
xchg
ret
add
addl
mov
xchg
ret
fiaddl
xor
pop
push
inc
inc
add
div
nop
cld
nop
jmp
icebp
mov
sub
sar
push
nop
cld
nop
jmp
sub
add
add
add
add
mov
stc
nop
es
add
add
push
mov
xchg
ret
dec
add
leave
push
mov
xchg
ret
mov
pushl
stc
nop
es
add
add
add
sub
nop
cld
nop
jmp
add
push
sub
sub
stc
nop
es
mov
add
pop
xor
push
mov
xchg
ret
add
add
push
xchg
lods
stc
nop
es
dec
pop
rolb
add
add
add
dec
add
mov
xchg
ret
add
sub
sbb
add
stc
nop
es
int3
add
add
mov
push
mov
xchg
ret
shrl
add
sbb
mov
xchg
ret
add
mov
add
popf
mov
stc
nop
es
add
dec
dec
sub
add
call
es
mov
add
sub
stc
nop
es
add
push
add
pop
mov
stc
nop
es
fbstp
repz
call
nop
cld
nop
jmp
mov
add
scas
push
stc
nop
es
mov
add
add
xchg
inc
jp
call
in
incl
add
sub
add
pop
push
push
mov
xchg
ret
mov
mov
cmp
pause
cld
nop
jmp
add
int3
add
mov
stc
nop
es
cmc
add
add
testb
xor
sub
stc
nop
es
add
add
sub
out
stos
and
push
mov
xchg
ret
add
mov
decl
cld
inc
add
add
sub
add
nop
cld
nop
jmp
mov
outsl
add
inc
and
stc
nop
es
add
push
push
mov
xchg
ret
aam
add
repz
daa
pop
push
stc
nop
es
add
fildll
stos
add
nop
jmp
icebp
add
aam
xor
jns
dec
mov
stc
nop
es
add
add
add
xor
popl
stc
nop
es
add
add
sar
es
sub
add
dec
jge
jbe
jne
stc
nop
es
inc
int3
mov
cwtl
lea
push
mov
xchg
ret
icebp
add
mov
add
add
add
stc
nop
es
add
xor
ljmp
inc
add
stos
add
push
mov
xchg
ret
add
fcomip
mov
add
jmp
and
mov
add
outsl
sub
jb
add
add
aam
push
push
mov
xchg
ret
sbb
mov
cwtl
jnp
jmp
add
push
in
add
pop
lock
sub
es
add
dec
add
mov
mov
push
mov
xchg
ret
icebp
add
sbb
shll
sbb
mov
xchg
ret
aam
stos
dec
repz
shll
cld
nop
jmp
out
sbb
rolb
mov
stc
nop
es
je
inc
add
add
xor
ljmp
nop
es
add
add
shr
jmp
jb
inc
sub
divb
test
adc
pusha
stc
nop
es
add
mov
add
cwtl
add
stc
nop
es
push
add
pushl
push
mov
xchg
ret
add
ja
add
pop
push
stc
nop
es
mov
add
push
sub
nop
cld
nop
jmp
add
dec
out
add
cmp
jmp
fisttps
mov
sub
incl
xchg
ret
push
aam
add
add
stc
je
stc
nop
es
icebp
repz
jae
push
mov
xchg
ret
outsl
sbb
dec
pop
daa
inc
add
mov
stc
nop
es
fiaddl
dec
add
es
inc
nop
cld
nop
jmp
sub
fs
nop
add
movsl
inc
push
xchg
mov
jb
add
dec
add
mov
xor
dec
push
stc
nop
es
add
outsl
add
add
add
pop
loope
call
add
add
xchg
mov
add
stc
nop
es
add
fidivrl
add
add
nop
cld
nop
jmp
dec
mov
add
add
push
jae
nop
es
test
add
addb
push
stc
nop
es
mov
daa
mov
sub
ret
cmp
in
add
imul
add
xor
out
lret
shl
stc
nop
es
add
push
add
stc
nop
es
add
lret
sub
pop
out
inc
add
mov
stc
nop
es
add
sbb
mov
nop
cld
nop
jmp
add
push
xchg
out
push
mov
add
pop
dec
loop
add
dec
add
add
push
mov
stc
nop
es
mov
add
add
lret
push
mov
xchg
ret
add
sub
daa
sub
nop
jmp
add
mov
add
xor
or
nop
jmp
repz
mov
cmpl
es
push
xor
jno
push
mov
sbb
push
addl
push
popa
mov
popf
cmp
movsb
push
mov
xchg
ret
roll
add
or
push
mov
xchg
ret
push
add
out
jne
nop
cld
nop
jmp
xor
sub
or
mov
es
sub
add
add
mov
mov
xchg
ret
test
and
mov
add
push
nop
cld
nop
jmp
add
add
int3
popa
stc
nop
es
add
add
pop
ret
stc
nop
es
subl
mov
add
stc
nop
es
and
adc
push
mov
xchg
ret
add
dec
cmp
cld
nop
jmp
mov
aas
pop
push
mov
xchg
ret
nop
mov
sbb
add
std
pop
push
mov
xchg
ret
add
filds
add
cmpl
nop
cld
nop
jmp
icebp
mov
pushf
add
stc
nop
es
push
ja
add
add
nop
es
filds
dec
mov
add
mov
stc
nop
es
push
hlt
dec
mov
stc
nop
es
add
add
add
stc
nop
es
inc
aam
dec
add
add
add
popl
stc
nop
es
add
fists
mov
nop
cld
nop
jmp
cwtl
sub
add
int
inc
adc
nop
es
test
sub
add
jne
nop
cld
nop
jmp
filds
add
push
push
lock
call
mov
xchg
ret
add
mov
stc
nop
es
add
repz
lea
push
mov
xchg
ret
add
mov
jnp
stc
nop
es
add
dec
inc
mov
roll
adc
add
stc
nop
es
stos
add
testb
in
mov
nop
cld
nop
jmp
add
add
shl
imul
incl
outsl
stos
jp
add
nop
jmp
push
dec
jp
daa
cmp
stc
nop
es
aam
add
imul
nop
jmp
add
push
add
addl
std
mov
stc
nop
es
add
je
sbb
cs
stc
nop
es
sub
mov
jmp
test
repz
stc
nop
es
push
lret
popa
fisttpll
std
filds
xchg
ret
add
jns
add
aas
and
nop
cld
nop
jmp
icebp
rol
xor
test
rolb
stos
pop
push
mov
xchg
ret
add
add
add
stc
nop
es
dec
add
add
push
adc
nop
es
add
dec
and
push
mov
xchg
ret
sub
add
add
popa
sbb
test
inc
add
ret
dec
shrb
aad
sub
sti
nop
cld
nop
jmp
jns
add
push
and
jge
nop
cld
nop
jmp
add
jge
add
add
stc
nop
es
ret
add
mov
push
mov
xchg
ret
js
add
or
stc
nop
es
push
inc
lds
push
push
mov
xchg
ret
add
sub
test
add
nop
es
push
push
jge
push
push
xor
es
fiaddl
ret
add
sub
push
imul
es
add
push
movb
pop
stc
nop
es
pop
test
nop
sub
ficompl
push
mov
xchg
ret
sbb
sub
add
mov
stos
stc
nop
es
add
add
mov
push
sbb
icebp
stc
nop
es
mov
push
mov
es
sub
fidivl
push
pop
push
mov
xchg
ret
js
addl
call
stc
nop
es
xchg
sarl
addb
add
stc
nop
es
cmc
add
sarl
dec
push
mov
xchg
ret
in
add
and
sub
jb
mov
je
filds
dec
pop
or
push
mov
xchg
ret
add
pop
in
loope
shlb
sbb
fistl
jecxz
inc
add
dec
out
add
mov
nop
es
shlb
xor
mov
int3
add
add
mov
nop
cld
nop
jmp
ret
add
add
add
call
out
add
add
add
add
mov
nop
cld
nop
jmp
out
xor
push
add
add
jmp
mov
sub
stos
add
ret
xor
xchg
nop
cld
nop
jmp
sub
inc
add
shr
stc
nop
es
add
push
add
nop
add
add
nop
es
add
mov
scas
ret
mov
mov
add
add
dec
add
daa
idivb
aam
pop
cs
mov
xchg
daa
add
add
add
mov
inc
lea
pop
mov
stc
nop
es
subl
movsb
nop
cld
nop
jmp
add
push
add
nop
cld
nop
jmp
outsl
js
pop
mov
inc
add
fcos
stc
nop
es
add
lock
cld
nop
jmp
add
mov
add
add
frstor
popa
add
cld
nop
jmp
jge
add
add
mov
nop
cld
nop
jmp
add
dec
add
mov
add
repz
xor
stc
nop
es
and
stos
add
push
fs
sub
stc
nop
es
mov
add
outsb
mov
stc
nop
es
add
pushf
mov
stc
nop
es
jge
sub
add
rcl
and
call
stc
nop
es
and
enter
nop
jmp
add
icebp
out
add
cli
call
stc
nop
es
add
add
repnz
add
add
dec
add
ja
cmp
nop
cld
nop
jmp
xor
add
add
push
mov
xchg
ret
push
add
add
add
add
mov
stc
nop
es
add
push
test
xchg
add
stc
nop
es
roll
add
js
stos
mov
nop
cld
nop
jmp
jns
lret
add
sub
out
jb
nop
cld
nop
jmp
add
aam
in
mov
stc
nop
es
sub
adc
pop
hlt
inc
add
push
add
in
mov
nop
cld
nop
jmp
pop
daa
push
xchg
mov
popa
testb
cmp
ret
add
add
add
pop
push
mov
xchg
ret
mov
cwtl
add
pop
push
stc
nop
es
add
add
mov
xchg
ret
mov
idivb
les
int3
call
stc
nop
es
add
notb
adcb
add
ja
mov
roll
dec
add
mov
xchg
ret
add
add
pop
add
push
mov
xchg
ret
add
add
outsl
shll
add
or
inc
add
pop
test
sbbl
cld
nop
jmp
add
add
mov
stc
nop
es
mov
mov
add
loopne
nop
cld
nop
jmp
add
mov
add
int3
mov
es
mov
add
mov
dec
mov
call
stc
nop
es
mov
jge
push
rolb
nop
es
add
add
add
mov
stc
nop
es
dec
add
xchg
nop
cld
nop
jmp
add
dec
add
add
repz
fs
inc
push
mov
xchg
ret
sbb
add
jmp
stc
nop
es
add
mov
xor
mov
xchg
ret
fiaddl
add
add
nop
cld
nop
jmp
jge
fistps
push
add
stc
add
stc
nop
es
add
dec
sbb
and
stc
nop
es
subl
add
dec
add
xchg
ret
add
add
add
add
lahf
mov
push
mov
xchg
ret
repz
add
push
ret
stc
nop
es
jp
push
nop
add
repz
ret
mov
mov
xchg
ret
add
add
add
aas
nop
cld
nop
jmp
cmc
add
mov
pop
push
cwtl
push
push
mov
xchg
ret
sbb
add
add
stc
nop
es
addl
mov
es
add
icebp
dec
inc
filds
cmp
push
mov
xchg
ret
dec
ret
add
add
in
dec
add
add
jp
mov
stos
add
add
add
jne
stc
nop
es
cwtl
add
push
es
xor
add
jae
add
add
loop
add
stc
nop
es
add
add
add
cmp
stc
nop
es
mov
sti
je
nop
cld
nop
jmp
push
add
push
or
cld
nop
jmp
add
mov
add
add
mov
xchg
ret
stos
add
mov
mov
push
mov
xchg
ret
ja
push
push
mov
xchg
ret
push
add
add
pop
dec
nop
cld
nop
jmp
cwtl
push
repz
add
cld
nop
jmp
xchg
push
add
cmp
nop
es
nop
jp
add
push
jae
mov
push
mov
xchg
ret
add
add
cld
nop
jmp
dec
add
add
dec
mov
jb
add
add
add
call
push
mov
xchg
ret
pop
add
push
mov
xchg
ret
push
add
aad
xchg
jge
dec
or
es
nop
add
push
mov
xchg
ret
add
inc
fisttps
movsb
push
mov
xchg
ret
dec
add
add
sbb
mov
xchg
ret
add
je
testb
movb
decl
push
mov
xchg
ret
push
xorl
andb
jp
push
add
sbb
stc
nop
cld
nop
jmp
ret
add
fs
add
mov
stc
nop
es
add
inc
cli
add
stc
nop
es
je
add
sub
sub
inc
xor
nop
cld
nop
jmp
add
imulb
add
mov
push
mov
xchg
ret
add
fildll
imul
push
mov
xchg
ret
push
mov
int3
sub
push
stc
nop
es
cmc
add
add
add
adc
pusha
add
nop
es
xchg
add
rclb
daa
sub
mov
nop
es
mov
add
rolb
es
adc
fimuls
es
add
sbb
nop
jmp
add
dec
push
mov
add
popa
orb
add
pop
dec
in
xlat
mov
es
jb
lea
cld
lcall
add
push
mov
add
mov
xchg
ficoml
loope
ljmp
push
fcompl
push
push
lds
add
jbe
add
push
add
stc
shr
sti
xor
and
jmp
pushl
push
jns
shlb
ret
loopne,pn
inc
jecxz
or
cli
and
idivb
cmpsb
in
test
add
pop
iret
bndstx
mov
jg
cmp
and
jnp
sub
test
jo
mov
fwait
fs
hlt
adc
inc
mov
fsubl
add
jne
dec
rolb
or
pop
popa
adc
add
jae
or
add
imul
lret
popa
mov
inc
add
jbe
out
sbb
add
cmp
je
bound
mov
je
sarb
fstps
push
pusha
add
add
mov
mov
sub
fwait
and
fxch
iret
popf
lret
adc
sti
pop
fs
and
dec
mov
cvttps2pi
outsb
mov
push
pop
dec
xor
mov
cmp
ss
jnp
imul
repnz
cwtl
xchg
jg
pop
std
leave
add
jmp
ror
xchg
aam
cmpsb
filds
fstl
dec
dec
lret
or
add
add
sbb
cmp
add
add
loope
dec
inc
add
stc
test
xor
add
test
jle
rolb
incb
jb
inc
lcall
in
add
cmpsb
repz
push
lret
add
js
add
mov
test
lret
fstpl
sub
inc
shll
fisubl
xchg
mov
push
movsb
jno
inc
sbb
sbb
dec
insb
scas
jo
push
pop
rolb
jae
les
inc
fnstsw
out
lret
int3
push
add
push
add
jbe
and
arpl
ficomps
add
aaa
mov
add
pushw
js
jge
pushf
and
fwait
icebp
out
push
xor
sbb
mov
mov
mov
push
dec
mov
mov
addb
push
sbb
xor
sub
rcrb
cmp
add
fisubl
pop
scas
sbb
fucomip
aaa
lret
iret
mov
jo
adc
add
repnz
stc
sub
ss
or
xlat
loop
jo
xchg
cld
imulb
lods
sbb
jmp
dec
jo
popa
adc
cmp
pop
in
scas
dec
mov
icebp
jp
les
mov
addr16
add
dec
incl
mov
mov
or
rclb
add
add
jae
sbb
pop
sub
nop
fsubl
cmpsl
pusha
add
stc
jo
pop
aam
inc
xor
fwait
rolb
sahf
fisttps
dec
push
adc
jns
mov
rclb
or
inc
add
add
loopne
push
in
sbb
jb
mov
inc
add
dec
push
add
and
push
fs
adc
cmp
mov
mov
mov
loopne
adc
test
dec
enter
imul
or
bound
jge
cld
fldl
js
jbe
xor
leave
pop
stc
cmpsl
rolb
inc
add
rolb
stos
inc
add
sbb
sbb
dec
dec
xchg
xchg
inc
icebp
dec
enter
add
xor
lds
inc
add
or
shll
xchg
mov
stc
shlb
mov
xchg
mov
scas
cmpsb
push
add
lods
in
sub
pop
sbb
popa
out
repnz
addr16
push
or
out
add
cmp
pop
adc
xor
lret
insl
int
jl
add
add
addb
pop
add
sub
mov
cltd
adc
out
adc
mov
aaa
daa
mov
sti
stos
movsl
pop
push
mov
add
inc
jp
aam
pop
sub
add
push
popa
mov
dec
sub
mov
in
xor
outsb
in
add
mov
insl
jle
or
add
push
add
cltd
jp
xchg
push
jecxz
push
jecxz
mov
out
repnz
clc
incl
sub
and
pop
sarl
sub
xchg
mov
push
dec
xor
sub
mov
push
enter
inc
ljmp
sbb
mov
addr16
pop
mov
fdivrl
imul
jae
sbb
mov
test
insl
lds
inc
mov
lods
mov
or
add
mov
sbb
inc
addr16
mov
aad
sbb
and
lcall
sbb
cmpsl
dec
lret
stos
jl
add
push
lcall
ss
popf
sbb
sub
dec
mov
add
fistl
mov
xor
pop
lods
arpl
add
cltd
and
lea
pop
lds
lcall
movsl
bound
call
icebp
out
insb
insl
cmp
and
orl
and
es
mov
add
stos
call
xchg
xchg
jg
call
pop
push
xor
into
sub
out
pop
inc
add
dec
or
stc
rolb
pushf
dec
pusha
add
daa
in
add
sarb
cmc
xchg
cld
popf
fsub
xchg
pop
enter
mov
jge
into
xor
add
lds
in
pop
xorl
pop
cmc
test
add
popf
sti
psubb
fs
lea
xor
xor
jne
inc
xchg
cmp
movsl
adc
sub
push
mov
cld
mov
mov
xor
sahf
mov
stos
cs
jle
aaa
mov
je
out
cmp
rolb
mov
pop
shl
xor
pushf
xor
jbe
add
jecxz
jl
add
lods
push
dec
outsl
jecxz
sti
inc
add
push
or
fbld
add
out
mov
mov
add
add
mov
adc
add
and
add
inc
div
adc
xor
stc
pop
ljmp
movsb
adcl
inc
je
out
push
mov
xorl
test
inc
add
fsub
push
mov
jnp
imul
mov
sub
push
lret
and
int
adc
or
das
out
sbb
add
sub
jmp
enter
std
sub
add
jecxz
sbb
stos
pop
out
mov
add
xchg
lret
add
fldl
cmp
xorl
adc
dec
push
push
xchg
lods
imul
loop
inc
add
mov
sbb
daa
fsubrp
cmp
xor
jbe
jne
out
mov
cmp
sbb
fnstsw
mov
rcrl
inc
add
add
add
add
mov
push
add
test
jg
push
js
mov
add
xor
add
mov
ret
arpl
jl
push
ljmp
lods
and
add
and
insl
cmp
inc
pushf
cs
pop
cmp
jne
inc
add
data16
xchg
mov
and
loopne
inc
in
out
or
jl
add
jle
in
mov
inc
mov
sub
dec
out
lcall
add
loope
sbb
adc
arpl
testl
mov
mov
jb
inc
add
fstl
and
scas
jecxz
aaa
rorb
mov
jmp
sub
xor
dec
sbb
iret
sub
dec
lods
add
dec
test
cmpsl
pop
cmp
mov
out
and
mov
and
dec
dec
enter
std
pop
addr16
lret
sti
stos
jne
movb
mov
stc
xchg
or
sub
ds
mov
adc
dec
insb
shll
mov
add
xchg
xor
sbb
add
sbb
ret
lods
scas
xor
lock
mov
mov
mov
xor
and
and
lret
je
pusha
add
cmp
add
sti
push
dec
pop
ja
fstpt
cmp
outsb
int3
adc
mov
inc
add
push
add
or
bound
sub
inc
mov
mov
int
jno
es
add
cld
repnz
adc
mov
jmp
add
aas
test
or
push
sub
add
arpl
movb
test
lea
mov
and
inc
cmp
jg
fs
das
lahf
inc
add
adc
and
push
xchg
pusha
add
fiadds
sbb
inc
test
dec
test
clc
push
aaa
xchg
sbb
inc
mov
fstpt
imul
push
push
addb
mov
loopne
cs
lea
fisubs
inc
add
add
fsub
test
stos
mov
int
mov
pop
pop
mov
inc
mov
inc
mov
out
add
fstpl
rol
xchg
fistl
jns
add
or
enter
or
add
and
mov
das
rcrl
add
sbb
mov
mov
fbld
cli
pop
sti
in
xor
xchg
xchg
dec
in
mov
push
xor
out
ljmp
add
jmp
out
push
sub
adc
test
mov
idivb
pop
rorl
cmp
aad
add
mov
mov
add
fwait
dec
sahf
xchg
std
mov
mov
and
adc
fwait
push
dec
pop
cmp
sbb
push
ja
lret
xchg
add
es
out
addb
add
pop
addb
pushf
jno
imulb
inc
add
jb
sbb
sbb
aaa
es
xchg
aaa
jno
fmul
inc
pop
xor
int3
sub
sub
dec
insb
xchg
aaa
push
mov
sub
lods
mov
std
mov
mov
push
mov
mov
xchg
sarl
inc
xlat
pop
cli
mov
repz
xchg
xchg
jb
cli
dec
cs
bnd
scas
jp
enter
ret
mov
cmp
cmp
test
inc
add
sub
and
jne
std
mov
inc
movsb
mull
and
xchg
sbb
add
shll
mov
sbb
rolb
pusha
add
sbb
cmp
cmp
pop
sbb
or
mov
xor
dec
and
add
sub
add
mov
push
add
test
push
and
fs
sub
sbb
mov
cmp
in
push
jno
es
icebp
fsubrl
xor
add
lahf
ljmp
adc
addb
adc
cli
xor
jle
ja
mov
adc
and
jne
or
add
dec
cmp
xor
rclb
mov
and
pop
movb
mov
addb
movsb
test
addb
pop
cmp
xor
pop
xchg
adc
xchg
push
add
addb
aam
sbb
sbb
add
jno
ret
in
stos
outsb
push
xchg
push
rorl
cs
cmp
je
lahf
sbb
add
mov
rcrb
gs
or
in
dec
stos
cmpsl
and
gs
jecxz
sub
jb
push
pop
ss
push
pushl
sahf
lds
push
popf
mov
jmp
and
stos
stc
cmp
jo
jl
jg
ss
leave
in
jecxz
sub
je
movsb
mov
mov
dec
iret
aam
lcall
insb
mov
add
dec
inc
add
xchg
rcll
aas
decl
lea
jns
cmp
cmp
add
aam
mov
push
inc
add
add
add
mov
add
dec
mov
cwtl
and
jge
cmp
stc
cld
mov
mov
stos
jge
push
ficoml
add
add
movsl
aas
aas
pop
xor
add
rolb
sub
mov
mov
adc
mov
xchg
mov
add
int3
add
pop
pop
xchg
jmp
std
subl
add
test
out
cmp
sti
xor
int
in
mov
add
lret
fs
pusha
add
aaa
dec
push
daa
hlt
je
pop
ljmp
fcomps
out
mov
movsb
sbb
jmp
call
addb
icebp
insl
jl
add
in
and
das
add
mov
scas
insb
push
bound
mov
mov
push
adc
push
cmp
jle
inc
add
test
addb
leave
jg
dec
cmp
daa
cltd
gs
les
add
fists
sahf
xorps
or
add
fwait
jg
sub
add
push
and
cmp
mov
cmc
push
nop
jle
jae
mov
movsb
insb
test
cwtl
outsb
lock
pop
and
jb
and
ss
xor
cs
xor
mov
xchg
mov
push
mov
pop
adc
ljmp
stos
ja
int3
pop
adc
jns
in
push
test
cmpsb
and
push
cwtl
addb
pop
das
fs
inc
in
enter
outsl
mov
pop
dec
roll
leave
fdivrs
aam
mov
sbb
jl
ss
addr16
add
xlat
bound
gs
and
rolb
int3
jnp
pushf
mov
add
das
sub
add
push
mov
pop
rcll
addb
xchg
add
xor
ret
shrb
jecxz
int3
lea
dec
fldt
sub
in
pop
std
pop
pop
lcall
lea
inc
add
add
fstps
sub
daa
mov
inc
cmc
dec
adc
addr16
and
lds
push
xor
cli
pop
movb
sub
je
addr16
mov
cmpsl
add
push
sub
push
push
outsl
pop
into
imul
jge
lock
test
sub
in
jnp
mov
sahf
in
incl
outsl
pop
mov
mov
mov
cs
xor
loope
cli
or
jnp
inc
push
dec
pushf
aaa
inc
mov
mov
sbbl
pop
mov
cmp
jb
sar
lods
fsin
das
clc
jmp
dec
or
inc
add
std
xchg
loop
xchg
inc
pop
mov
pop
inc
add
mov
js
add
jecxz
push
rcr
push
popf
cli
ror
out
filds
fdivp
nop
imul
and
rolb
out
cmpl
mov
cmp
inc
or
sbb
add
xchg
lret
bound
sub
imul
xor
subl
neg
mov
or
int3
mov
lods
enter
xchg
add
inc
xchg
testb
cmp
jmp
call
lret
stc
xor
add
outsl
or
add
clc
push
stc
shrl
xchg
jns
and
mov
ds
nop
repnz
sub
movsl
push
lods
movsl
sbb
cwtl
icebp
loope
sub
push
or
rep
sbb
aas
jae
and
repz
test
fistpll
inc
push
jbe
call
cmpsl
and
lods
jmp
pop
jae
mov
dec
add
mov
inc
and
add
out
stos
ja
pop
mov
or
mov
dec
fadds
dec
pop
gs
cmp
dec
cmp
dec
inc
leave
call
add
sub
ds
jo
stos
out
jecxz
jmp
shll
or
movsb
xor
movsl
mov
mov
xor
xor
add
test
cltd
mov
add
iret
sub
push
dec
iret
mov
sub
je
pop
pop
add
loopne
lret
in
or
dec
push
dec
xchg
test
add
enter
jmp
xchg
ja
mov
pop
rolb
ja
add
rorb
ss
addb
push
fmul
aaa
pop
lret
adc
pushf
test
mov
jb
dec
mov
inc
push
add
pop
nop
and
mov
cld
test
test
cmp
add
ret
lea
cmpsl
cld
push
cli
cmp
push
sbb
push
xlat
mov
mov
mov
push
fistps
popa
test
pop
movsl
shl
sbb
dec
xor
jg
cltd
and
out
test
inc
add
rcll
addr16
and
mov
push
add
shl
inc
add
adc
xor
shrl
rolb
sti
mov
or
xor
mov
pop
or
and
stc
jp
mov
sarl
or
mov
pushf
addr16
mov
cli
mov
mov
lods
xchg
xor
ret
or
sub
push
xchg
mov
data16
adc
movsl
jp
add
lods
loope
inc
add
mov
insb
and
rcrl
lret
and
outsb
out
jmp
fs
adc
mov
js
fiaddl
mov
cmc
in
out
stos
fwait
testl
repnz
dec
push
pop
dec
push
in
mov
dec
fsubr
fwait
bound
loope
sti
in
jno
add
call
inc
add
aad
pop
call
pop
nop
and
mov
push
push
in
gs
xor
outsl
inc
add
inc
add
mov
push
ret
add
out
inc
into
push
sbb
lret
mov
add
dec
imul
cmp
ret
push
mov
insl
mov
mov
xor
pop
pushf
xor
lock
sbb
popa
imull
and
lds
mov
inc
add
jo
add
sti
jne
sbb
jge
pop
out
movb
in
push
test
fwait
or
add
sbb
add
push
add
sti
push
add
mov
xor
cwtl
sub
adcl
outsb
mov
push
add
mov
push
lcall
mov
icebp
arpl
jle
xchg
pop
test
sbb
xchg
call
addb
push
mov
ljmp
rolb
in
push
jp
fadds
push
rol
xchg
mov
jae
js
test
xor
mov
sub
in
add
inc
add
cmpsb
cmp
jle
adc
lcall
cmp
pop
les
jecxz
ljmp
rorl
lods
ss
cmp
inc
add
xchg
filds
push
cld
add
shll
ljmp
in
cli
mov
std
mov
sub
outsb
in
adc
stos
pushl
addr16
mov
outsl
jno
xor
movsb
add
ficoml
shll
int
add
add
out
jnp
or
xchg
fs
rcl
inc
addb
iret
push
cli
dec
leave
push
fdivs
sbb
std
lds
xor
ds
push
insl
cmp
inc
rolb
subl
lahf
into
and
and
mov
insl
lock
hlt
fwait
mov
xchg
push
add
movsb
sbb
les
adc
sub
add
addb
add
or
xor
add
add
lret
xor
jmp
rcr
enter
add
inc
insb
mov
pop
rorb
jecxz
leave
cld
scas
mov
mov
or
mov
insb
and
push
dec
fisttpl
sbb
pushf
lahf
icebp
mov
mov
in
shll
push
loope
insl
xchg
lods
fbstp
sub
fsubr
movsb
fdivrs
test
ds
in
cld
mov
add
push
nop
je
add
add
ret
mov
mov
xchg
nop
dec
dec
mov
cmp
sahf
cld
jge
fbstp
cwtl
sahf
or
xchg
jo
mov
push
xor
mov
lods
mov
cmp
rclb
and
call
push
clc
and
in
pop
popa
xchg
clc
iret
pop
mov
rol
sub
cmp
sub
test
loop
add
or
xlat
push
stos
jle
lret
mov
nop
std
loopne
add
stc
aad
mov
cmpsb
data16
and
add
add
jecxz
add
jg
stos
mov
dec
arpl
pop
inc
add
add
dec
mov
xor
push
idivb
push
add
dec
dec
movsl
push
mov
jge
mov
add
pop
out
fsubs
fstl
rorb
rolb
int
mov
mov
imul
sub
iret
or
test
insb
cmc
lcall
cmp
repnz
sub
int
xor
jno
cmp
mov
jge
rolb
add
aad
add
negb
mov
sub
repz
xor
jge
sarl
mov
xchg
inc
add
ja
enter
lret
push
lock
inc
loopne
dec
icebp
jp
sub
add
fisttps
loope
pop
mov
jecxz
cmp
add
addb
sar
mov
push
popa
lahf
xchg
sub
addb
xlat
push
push
sarl
imulb
scas
sbb
add
dec
out
pop
cmp
inc
add
shll
inc
add
cltd
fmull
cwtl
fwait
cmp
mov
adc
add
popa
stos
add
lock
in
aas
ss
sbb
mov
mov
add
out
ror
enter
hlt
and
dec
xor
mov
fists
ret
jge
xchg
pop
cmp
add
sbb
add
add
sub
sub
jecxz
addl
test
mov
int3
ret
mov
loope
pop
xor
inc
dec
stc
gs
imul
into
inc
add
inc
inc
pop
push
add
cmpsb
outsl
push
push
or
xchg
xchg
pop
in
fwait
mov
add
jecxz
jp
mov
xlat
and
fbld
addr16
mov
fwait
inc
mov
push
xchg
dec
pop
cmp
inc
add
mov
les
push
pop
movsb
into
enter
mov
je
icebp
cmp
mov
add
jb
push
inc
add
daa
xor
lcall
pusha
add
mov
test
es
cltd
stos
mov
mov
add
adc
sub
jmp
add
dec
lret
std
sbb
loope
jle
add
push
add
test
inc
add
lahf
inc
push
ljmp
or
push
mov
rolb
sbb
adc
mov
in
add
loope
decl
adc
add
xchg
mov
pushf
je
sub
inc
add
cmp
scas
aam
pop
bnd
sahf
pop
xor
fcoml
cmp
rolb
pop
pop
bound
add
pop
dec
or
add
xor
add
xchg
cli
xor
add
mov
sti
mov
jbe
xchg
insl
movsb
fdivrs
add
out
pop
in
mov
push
enter
int3
data16
adc
sti
cmp
into
sbb
imulb
outsb
mov
cmpsb
rorl
mov
add
lret
mov
push
sbb
btr
dec
mov
fcompl
movb
mov
xor
out
cwtl
pusha
add
lea
in
repz
addb
sub
lods
in
in
pop
aaa
decl
negl
pushf
data16
inc
dec
push
das
mov
lods
addr16
popl
push
pop
adc
add
pop
out
dec
daa
fmulp
ds
jo
insb
arpl
and
cmp
cmp
mov
mov
push
mov
jae,pt
mov
rol
mov
testb
dec
inc
inc
add
int
invd
fcomip
dec
dec
add
cmp
cs
add
xchg
pop
nop
cmp
xor
sti
add
add
pop
outsb
aaa
jl
jp
bnd
pop
negb
jb
pop
stos
push
mov
out
outsb
negb
das
sbb
sub
adc
add
cld
inc
out
out
scas
mov
lds
add
inc
push
add
std
pop
scas
sub
push
cmp
add
adc
rolb
les
pop
les
rcll
hlt
add
addr16
mov
and
xor
in
adc
mov
mov
dec
fnstcw
cs
jp
pop
sbb
cld
and
and
pop
insb
dec
mov
test
jae
add
pop
test
into
cmp
js
add
push
mov
jnp
sbb
movsb
jge
test
les
mov
sub
or
xchg
push
out
imul
mov
inc
add
lds
test
test
mov
xor
lds
jg
jmp
push
dec
sbb
cmp
add
pop
inc
pop
and
mov
call
loopne
lret
xchg
jae
lahf
aam
pop
mov
ljmp
mov
sarb
dec
popf
push
shlb
cmpsb
or
dec
test
pop
icebp
mov
cmp
cmp
mov
adc
jno
pop
push
mov
and
je
push
xchg
das
jmp
mov
add
add
and
das
xchg
or
dec
stc
xchg
dec
inc
add
mov
adc
rolb
inc
pop
lods
jae
mov
mov
jo
jecxz
popf
in
stos
xchg
mov
mov
loopne
loopne
rolb
jno
cmp
mov
aad
testl
cmc
cld
sahf
cmp
sbb
add
cmp
add
mov
es
scas
inc
sahf
jg
test
fldt
adc
push
fildll
pop
cltd
mov
or
ror
insb
dec
addb
aam
fldenv
add
add
fscale
xor
xchg
mov
test
rolb
pop
lods
call
test
sbb
sbb
movb
rcrl
and
jg
jmp
loope
movsb
or
mov
mov
aas
int
adc
cli
pop
out
dec
sub
jo
pop
fs
leave
pop
ljmp
mov
stc
cmp
jno
jns
imul
movsb
hlt
cwtl
and
adc
adc
cltd
bound
xchg
and
aaa
xchg
inc
add
add
dec
add
mov
lods
inc
icebp
pop
mov
xchg
pop
mov
jne
and
inc
xchg
popa
xor
jl
inc
add
jmp
scas
dec
in
add
sub
add
das
xor
xor
sub
stos
push
pop
cld
lea
addb
repz
jb
xchg
jb
fsubr
inc
addr16
loopne
add
pop
lcall
mov
xchg
pop
rolb
jp
iret
addb
fidivs
add
pusha
add
lret
ss
leave
fldt
sub
mov
sti
or
add
jg
add
mov
dec
les
outsb
scas
rolb
or
lret
pop
or
mov
fsubl
out
inc
add
pop
push
fimull
in
pop
jns
jge
add
enter
dec
mov
popa
sarl
add
add
bound
imul
je
push
mov
xchg
and
out
or
xchg
sub
mov
dec
outsb
outsb
cmp
test
adc
stc
pop
les
add
jle
push
or
cmc
lea
xor
ja
add
add
add
cmp
pop
and
adc
mov
cli
in
shll
popa
sub
dec
insl
int3
xor
aas
pop
addr16
lds
arpl
idiv
dec
push
bound
addb
mov
movb
sub
daa
fisttpl
push
add
mov
or
add
add
and
add
fimull
cmp
cmp
sbb
inc
add
pop
xchg
ret
addr16
jnp
jo
adc
sub
xchg
xor
xor
or
cmp
mov
rolb
mov
mov
add
mov
addb
add
sbb
jmp
add
inc
pop
fwait
dec
fists
outsl
jecxz
jmp
cbtw
lods
mov
inc
add
add
push
add
xor
and
xor
push
test
jl
rcr
aam
mov
and
mov
xlat
addr16
or
aas
push
fbld
fcmovnu
movb
pop
out
test
dec
jg
jbe
add
add
add
in
pop
mov
sbb
fmul
dec
in
sbb
xchg
loope
jbe
ds
sbb
mov
push
test
pop
xchg
sahf
gs
add
hlt
sbb
shll
popf
ja
hlt
xor
add
loopne
pushf
loope
jg
mov
rcrb
sbb
pextrw
test
sbb
out
mov
les
xorl
mov
addr16
out
add
cmp
int
inc
mov
jo
out
in
cmc
fstps
cmc
scas
sbb
mov
scas
mov
add
pusha
add
inc
add
sbb
sbb
ret
sbb
fcomps
xchg
cmpsl
sub
icebp
testl
mov
cli
xor
pop
out
inc
add
add
add
and
es
jecxz
rolb
ljmp
leave
xor
cwtl
pop
in
cli
jnp
xchg
sbb
js
bound
adc
push
inc
ret
cld
aaa
jae
out
movb
stc
es
add
cmp
xchg
repz
arpl
xor
add
adc
ljmp
cld
pop
xchg
movb
and
pop
out
xchg
mov
dec
lcall
lahf
std
mov
dec
ret
and
hlt
stos
and
ret
idivb
jae
cli
dec
inc
add
push
mov
cmp
dec
adc
xchg
subl
cmpsb
or
stos
out
or
repz
dec
cmovno
lds
mov
mov
cltd
push
push
jg
add
addb
in
jno
and
push
repz
inc
add
test
xor
jle
push
push
add
insl
xacquire
inc
add
aad
sub
repnz
scas
pop
test
sub
push
push
lret
ja
gs
inc
xchg
adc
push
ret
rep
cwtl
call
outsl
mov
loop
cmpsb
inc
add
test
imul
or
xchg
stos
add
ljmp
aam
movsl
inc
push
jns
or
fldenv
inc
add
sbb
add
pop
sub
push
jmp
mov
out
sahf
decb
pop
pusha
add
scas
push
ds
add
jne
jb
mov
mov
outsl
jo
icebp
adc
sub
lret
fwait
cmp
or
addb
add
dec
xor
mov
arpl
nop
cli
xchg
sub
shr
call
dec
aam
mov
jg
sub
into
mov
or
add
xor
adc
jl
pusha
add
aam
aas
pop
test
xlat
cmp
in
push
lock
movb
es
orl
add
add
mov
lock
sti
divb
loop
movsl
mov
push
pop
push
fmulp
push
add
mov
out
dec
pop
inc
add
xchg
dec
in
out
gs
and
or
fs
mov
jle
scas
lds
mov
mov
add
add
xchg
pop
xchg
int
push
push
xchg
rorl
xor
push
cmp
mov
aas
insb
out
das
iret
out
into
inc
mov
pop
cmp
cmp
mov
scas
sbb
or
cmp
leave
jbe
or
std
in
dec
ret
push
add
sbb
or
adc
ljmp
push
movhps
xchg
sub
add
mov
in
popw
sub
outsb
mov
pop
std
divps
lds
mov
pop
inc
add
or
inc
mov
add
add
xor
sti
pop
pop
jnp
ljmp
cmp
loope
add
xor
lret
es
mov
sbb
push
ljmp
fmuls
mov
or
jns
inc
stos
cmpsl
mov
shl
data16
or
adc
sbb
je
loope
mov
xchg
push
sbb
add
cmp
in
jae
out
loope
inc
and
shlb
lahf
lahf
loopne
mov
xor
or
jbe
cmp
xchg
cmp
add
xor
movsb
aas
jne
mov
movb
and
sub
add
and
ja
daa
mov
push
cltd
mov
jae
movsl
stos
mov
bound
aaa
stos
test
sbb
mov
jmp
dec
add
mov
aad
pusha
add
cmp
cmp
sub
cmpsb
sub
negb
imul
lock
rolb
push
loope
push
and
add
out
faddp
jae
add
push
pop
mov
addb
jle
fwait
jle
rclb
add
cltd
mov
fwait
testb
scas
into
or
jl
movb
mov
inc
aas
lret
push
lea
clc
inc
add
scas
sbb
test
out
inc
add
pop
insl
mov
sub
mov
ret
lods
test
loope
dec
ret
dec
jo
push
inc
add
js
sbb
test
xchg
das
rcl
cmp
xchg
rolb
push
les
jecxz
enter
add
pop
mov
fnstcw
mov
push
rcrb
fstps
sub
repz
push
mov
add
aaa
mov
jmp
out
loop
mov
add
push
jno
xchg
movsb
test
in
cmpsb
jns
add
mov
add
xchg
out
add
jb
xor
mov
fwait
mov
xchg
mov
adc
or
std
add
inc
test
sbb
jbe
inc
add
jne
sub
pop
cwtl
adc
or
fstpt
pop
or
xlat
and
addr16
mov
ss
dec
or
mov
jno
aam
scas
int3
jns
js
mov
fldl2t
outsl
adc
das
repz
jle
neg
add
pop
fucom
jmp
sbb
subl
cmc
pop
ficoml
or
arpl
pop
push
insb
ret
dec
ja
rol
bound
clc
gs
mov
loopne
add
xchg
adc
push
add
aad
scas
add
push
in
cld
outsl
mov
lcall
add
mov
mov
add
push
push
dec
pop
mov
adc
rcr
inc
jne
into
dec
shlb
aam
mov
cmp
pop
je
fwait
rolb
ja
in
ret
cltd
bound
int3
es
mov
repnz
in
sub
add
shrb
add
push
outsb
mov
cmp
ljmp
aam
cmp
aaa
add
fdivrs
clc
inc
add
movl
sub
stc
lods
push
pushf
sbb
repnz
cmp
jge
fmulp
cmpl
cmpsl
jns
mov
add
adc
pop
aaa
mov
out
push
ffreep
bts
add
or
pop
xchg
pop
sahf
test
inc
dec
mov
sbb
push
add
push
push
xchg
and
lret
xchg
mov
lret
testl
sbb
sbb
add
pusha
add
add
call
les
pop
mov
jg
test
jecxz
mov
mov
add
aam
loope
add
insl
xchg
repz
mov
pop
dec
push
movb
out
popl
aaa
cmc
stc
repnz
inc
int
xchg
xor
push
adc
mov
adc
fs
cwtl
cs
bound
inc
add
adc
mov
test
icebp
mov
pusha
add
into
push
movsb
outsl
jecxz
mov
inc
add
push
insl
sub
and
add
subl
mov
inc
rorl
pop
bnd
jo
mov
ss
or
scas
mov
and
jecxz
in
stos
sub
xor
add
push
mov
add
fsubrs
xor
jl
or
lret
push
movsl
mov
mov
xor
fs
adc
test
ror
add
mov
and
inc
mov
out
test
scas
dec
sahf
sub
daa
xor
ret
imul
push
std
and
faddp
add
add
jo
jmp
add
xor
sbb
les
lcall
push
cmc
in
out
lds
sub
addb
and
mov
sbb
nop
inc
add
addl
dec
popa
xchg
adc
add
push
add
add
decl
xor
push
cwtl
lahf
cmp
or
rolb
mov
jno
inc
movsl
push
aas
lds
inc
mov
fnsave
pushf
jns
sub
jns
rolb
push
ljmp
gs
add
movb
add
nop
jo
pushf
xor
cmc
stos
xor
or
xor
add
push
repnz
int
aas
mov
loop
les
adc
add
jo
loope
inc
mov
add
ja
int
icebp
subl
dec
lods
pusha
add
fidivl
push
xchg
jno
outsl
lea
aad
cmp
jp
enter
movsl
and
or
add
or
add
mov
mov
outsb
cmp
negl
movb
push
jae
sbb
stos
aad
iret
bound
mov
bound
sub
jp
pop
mov
add
ja
cmp
pop
sbb
add
sub
rolb
outsl
or
push
add
fisubrl
rcr
or
mov
pop
cld
loop
lret
jnp
inc
adcl
sub
in
mov
mov
push
lret
pop
push
adc
shrl
fldenv
add
sub
cmp
int3
bound
adc
sub
mov
add
add
jno
cmp
add
cli
adc
jg
aam
adc
mov
dec
insl
das
cmpsl
fcmovb
add
xchg
das
sub
mov
adc
fdivl
inc
lods
and
sbb
ds
push
mov
insb
pop
mov
lret
rcl
fistpl
xor
iret
mov
xchg
pop
cli
sbb
jne
cli
jge
hlt
daa
scas
icebp
cmc
insb
push
dec
cwtl
sahf
lcall
jecxz
rcl
inc
add
addr16
les
and
icebp
fisttps
rorb
dec
pop
fcoml
or
mov
add
stc
movb
lds
add
fisubrl
pop
adc
adc
or
rolb
mov
xchg
pop
in
mov
daa
xchg
jle
lret
mov
stos
rolb
dec
or
ret
mov
push
les
gs
scas
xor
xchg
adc
add
inc
in
cli
ljmp
add
imul
pushf
insb
fdivl
xchg
add
daa
mov
sbb
daa
sub
fwait
xor
and
xor
scas
lods
inc
jo
ret
push
fisubl
mov
or
rorb
ljmp
ljmp
add
push
movsl
lds
add
cmp
shlb
repnz
pop
mov
push
mov
add
mov
cwtl
dec
arpl
sub
mov
fptan
lds
inc
jnp
movb
xchg
or
cmc
jo
repnz
dec
sbb
add
xchg
iret
out
jb
lcall
addb
mov
les
fldln2
xchg
std
cmc
mov
pop
iret
pop
test
inc
dec
sub
fbld
test
inc
push
call
hlt
movsb
mov
movsb
aad
push
stos
dec
loop
lcall
fiadds
xchg
sbb
ja
cs
xor
sub
hlt
adc
jle
mov
add
and
jl
xor
add
dec
aad
push
iret
inc
inc
lret
xchg
rolb
add
pop
sbb
and
inc
mov
add
andl
adc
mov
sbb
add
addl
or
push
add
lods
inc
add
add
inc
ja
cmp
fbld
or
outsb
or
sbb
lods
cmp
cmp
test
mov
push
scas
arpl
mov
or
mov
sbb
jl
sbb
dec
ss
mov
insl
xor
and
scas
jbe
add
cmc
in
iret
cld
imul
repnz
sub
outsl
bound
rcll
call
imul
outsl
jnp
js
inc
add
in
les
jmp
rolb
in
adc
mov
and
arpl
rorl
lret
xchg
stos
int
add
loope
sbbl
psubw
inc
mov
lret
and
and
add
in
clc
das
mov
inc
mov
jnp
loopne
mov
stos
insb
lods
lcall
negb
and
add
cmp
inc
lret
nop
js
insb
and
fs
add
test
dec
jmp
add
bound
movups
xor
loop
or
and
cmp
adc
movb
mov
repz
out
sub
pop
jg
push
xchg
xlat
push
adc
fwait
inc
ret
fistps
inc
mov
fldl
xchg
mov
jno
xor
jmp
out
pop
into
ret
mov
pop
push
mov
xor
int
add
pop
cmp
ret
pusha
add
loope
movb
add
xchg
lahf
inc
adc
aas
push
add
fnstsw
dec
outsl
int3
pushf
sbb
push
push
rorl
mov
add
adc
xor
outsl
mov
and
pop
je
loopne
xor
popa
jmp
push
add
loope
cmc
push
ljmp
mov
daa
mov
fiaddl
push
mov
mov
add
daa
icebp
and
push
pextrw
and
inc
adc
add
fwait
mov
loop
stos
jo
ljmp
loop
add
add
movb
jno
pushf
data16
adc
mov
dec
int3
mov
add
aas
outsb
fildl
out
pushf
sub
jns
sbb
push
lcall
lahf
push
jb
sti
rolb
les
fnstcw
push
iret
lret
cld
addb
sbb
mov
add
fiaddl
rcr
arpl
cs
mov
out
sbb
push
xchg
lahf
add
mov
int
jbe
push
rorb
jnp
into
inc
push
fwait
adc
cld
rolb
adc
popa
stos
mov
mov
sbb
cmp
jp
aam
movsb
flds
xor
aad
add
mov
test
ret
out
sub
imul
rolb
xchg
xor
idivl
jns
cmp
incb
sahf
push
xor
scas
cmpsl
xor
out
push
add
in
lcall
push
adc
lds
mov
out
cmp
push
mov
mov
xor
jo
cmp
adc
repnz
cltd
pushf
xchg
mov
inc
xchg
mov
adc
add
stc
mov
add
lcall
add
jb
push
aad
mov
lret
imulb
xor
xchg
mov
fistpll
pop
add
test
adc
aam
mov
ss
mov
pop
insl
pop
pop
movsl
imul
fwait
inc
inc
sti
sub
mov
sub
insb
pop
in
ljmp
sbbl
test
adcl
pop
and
push
add
lret
add
mov
cmp
and
nop
out
fists
mov
and
xor
test
dec
fsubrp
into
sbb
rolb
aaa
das
xchg
pop
push
loopne
inc
das
jg
test
pushf
ror
and
lock
xlat
test
dec
imul
or
pop
addb
sbb
out
mov
nop
jmp
loope
stos
push
mov
daa
push
rorb
mov
cs
jno
cmpsl
dec
jge
std
mov
scas
or
lods
stos
pop
adc
sbb
jp
xor
scas
frstor
fwait
data16
les
mov
adc
int3
nop
out
and
stos
mov
push
lds
mov
repz
cltd
inc
sub
add
xchg
stc
push
and
push
mov
aad
add
popf
or
push
pop
test
js
and
enter
nop
sbb
data16
sbb
push
addr16
dec
in
ret
es
lods
rcrl
sahf
mov
enter
cmp
mov
pop
sub
dec
das
bswap
and
ffreep
xor
jge
cmc
mov
add
inc
add
aad
inc
cmpsb
lods
pop
cli
cli
in
mov
out
or
and
repz
call
jns
mov
push
cmc
aas
pop
dec
addr16
loopne
sub
out
add
xor
fld
xor
mov
sbb
inc
bnd
add
add
xchg
jg
xor
xchg
out
cmp
xchg
sub
xor
stc
mov
ds
pop
addb
xchg
cmp
lea
add
and
xor
inc
fldenv
sti
sbb
xor
fcomps
insb
adc
mov
mov
popa
lea
add
sbb
add
ret
dec
fcoms
and
sub
cmp
inc
add
jl
sbb
add
pop
ds
jecxz
jge
adc
addl
pop
jae
ds
sub
mov
mov
cmp
les
repz
dec
pop
push
mov
inc
push
inc
add
push
nop
ss
test
lods
bound
jno
dec
and
dec
mov
cmp
adc
addb
adc
inc
add
test
into
jb
popa
adc
adc
shrl
sti
in
push
jno
cmpsb
jb
loope
gs
and
cwtl
pop
and
fadds
mov
xor
or
sbb
loopne
sahf
add
out
sub
jae
jmp
add
das
aad
pop
mov
push
cli
movsb
enter
xor
nop
int3
sub
lds
or
sub
add
int3
fwait
bound
jp
and
xchg
movd
add
cmp
js
add
inc
dec
sub
or
xor
pop
arpl
add
sbb
sbb
pop
dec
fnsave
add
jnp
or
shll
jg
sub
lret
pop
add
out
lret
cwtl
bound
or
pop
cli
push
fldt
jno
xor
and
pop
jle
es
cmpsl
repnz
cmp
out
mov
sub
sbb
fldt
inc
jnp
adc
sub
and
mov
adc
fcompl
push
loopne
inc
add
or
fnstenv
xchg
sbb
add
in
std
enter
je
add
xchg
mov
test
sahf
cwtl
or
adc
jns
insl
mov
repz
scas
and
push
cwtl
cltd
js
iret
and
inc
pushl
cmp
add
in
mov
add
icebp
movb
and
pop
test
adc
lcall
push
or
jbe
add
pop
jae
jno
ja
dec
les
add
fucomp
enter
cmc
inc
aad
pop
jo
add
mov
cmp
pusha
add
inc
add
int
imul
rorl
rol
loopne
add
push
inc
add
mov
movsl
outsl
hlt
adc
inc
js
xchg
aas
dec
inc
popf
adc
stos
xchg
sahf
cmp
push
mov
lea
popa
xor
jo
sbb
add
lahf
jmp
mov
arpl
out
add
lret
icebp
movsb
mov
data16
and
push
jle
and
lcall
mov
je
adc
adc
aaa
push
sub
setns
pop
push
cli
adc
adc
inc
mov
cmp
out
sub
add
outsl
ljmp
xchg
push
lret
ds
add
repnz
mov
bound
or
ja
or
ljmp
icebp
dec
sub
out
aas
mov
dec
int
fistl
int3
cltd
mov
cli
jmp
icebp
and
dec
inc
mov
add
fwait
mov
xchg
mov
loope
cmp
cmpsb
inc
into
fiaddl
rorb
outsb
dec
ss
test
scas
enter
pop
jg
inc
add
cmp
xchg
sarl
cli
xor
rolb
imul
loop
dec
cmp
and
negl
insl
add
clc
jnp
fwait
ljmp
pop
lret
dec
lret
ret
std
aad
out
pop
ja
xchg
cs
adc
add
fisubs
pushf
fistpl
aad
roll
cmp
popa
ret
es
fcmovu
push
adc
add
mov
into
pusha
add
xor
or
int
jnp
push
std
inc
add
add
lret
int3
or
cmp
pop
sub
add
call
sbb
mov
rcl
movsl
and
pop
popa
mov
add
in
out
cmp
push
jne
cmc
sbb
pop
ljmp
cmpsb
xor
mov
lods
mov
stos
or
xor
int
stos
je
stc
xchg
nop
mov
push
das
ja
push
psubusw
dec
dec
mov
mov
rolb
out
cmp
mov
pop
fdiv
cmc
lea
xchg
push
add
leave
xchg
lds
and
popa
sbb
divb
lods
and
sbb
push
push
and
cmc
ret
xor
add
dec
out
iret
popa
add
and
pop
jno
cmp
inc
add
jnp
pop
stos
dec
into
or
xchg
add
push
inc
add
inc
or
test
add
movsl
pop
sub
xor
push
sti
sub
shl
mov
add
sub
inc
add
sub
xchg
sarl
dec
adc
and
addb
mov
rcl
lahf
das
int
sbb
data16
inc
inc
add
adc
jmp
lea
xchg
and
sub
leave
test
lahf
jecxz
mov
les
cld
jo
push
je
je
jnp
mov
xchg
jb
add
rolb
lret
adc
test
je
add
les
aaa
in
or
pushf
movb
xchg
shll
jns
test
xor
scas
test
add
pop
pop
aaa
mov
imul
bound
sbb
int
scas
sbb
mov
pshufw
sti
outsb
test
into
movsb
push
add
add
sbb
mov
scas
scas
jl
cmp
aam
jecxz
dec
testb
test
inc
add
sbb
push
add
add
cmp
popf
adc
std
sbb
cli
sti
mov
lcall
dec
aaa
or
mov
add
or
dec
mov
popa
lret
or
movb
pop
daa
ret
notb
fcoml
sbb
test
ret
inc
add
and
shlb
pop
or
cmc
jbe
insl
movsl
mov
and
mov
xor
push
sti
xor
sbb
add
loop
mov
inc
add
aas
lcall
stos
mov
lcall
in
mov
jbe
mov
pop
les
out
icebp
inc
add
outsb
in
iret
adc
mov
mov
data16
lods
js
into
sarl
mov
mov
out
mov
imul
sarb
add
sarl
adc
inc
add
adc
cltd
mov
outsb
push
pop
enter
leave
jnp
ficompl
dec
mov
imul
push
negl
add
adcl
je
pop
dec
lods
addb
addb
movsl
mov
xchg
out
xchg
icebp
scas
pop
mov
daa
pop
pop
sti
jl
pop
cs
add
cli
popf
xchg
ljmp
fcmove
stos
mov
push
mov
xchg
mov
push
pop
mov
add
pusha
add
fadd
add
cwtl
adc
pop
mov
xchg
cld
or
lds
sbb
in
xchg
insb
lret
not
mov
xchg
int
add
dec
and
dec
lods
clc
and
movsl
fimuls
add
in
in
xor
jns
leave
sti
cmp
add
rolb
dec
ljmp
ja
aad
add
ja
bound
xor
jmp
mov
add
lds
loope
in
sub
lret
leave
adc
adcl
mov
sti
mov
movsl
inc
add
xor
dec
inc
std
lret
das
fwait
out
jb
dec
pop
nop
pop
sub
pusha
add
imul
test
loop
popf
scas
pop
out
mov
es
add
jbe
add
insb
hlt
mov
mov
push
and
sbb
es
test
rolb
out
add
mov
adc
int
add
inc
mov
push
mov
repnz
jb
cld
pop
or
into
mov
jmp
cmpsl
xor
mov
popf
mov
and
push
and
fucomi
loopne
jp
xor
popf
imul
sub
jb
sbb
mov
mov
out
mov
add
pop
jle
outsl
mov
dec
nop
test
js
sbb
xor
cmp
dec
xchg
pop
dec
mov
shl
jnp
add
jmp
rorl
ret
rcl
sahf
inc
adc
push
stos
test
push
cmp
stos
xchg
frstor
addb
test
lret
fchs
mov
arpl
mov
jb
adc
mov
jnp
ffreep
jo
addb
push
mov
jae
mov
sub
push
adc
xchg
sub
pop
std
pop
xor
and
les
lea
shl
lds
shrl
mov
shrb
xchg
mov
testl
dec
cmp
stc
push
pop
sub
sub
jle
stc
cmp
inc
adc
or
jo
lods
adc
or
std
pop
dec
movsl
mov
add
sub
and
sub
cmp
dec
dec
pop
push
xchg
shr
shll
fsts
push
jle
scas
add
outsb
jnp
into
or
add
xchg
dec
inc
mov
aaa
push
adc
add
into
jl
xor
pop
arpl
add
mov
aad
pop
test
sub
outsb
lahf
fdivrl
add
cmc
jle
push
inc
add
cmp
aas
les
test
xchg
sbb
movb
rorb
fbld
stc
lods
out
mov
fdivrl
imul
loop
popf
fs
add
outsb
mov
jmp
outsl
push
mov
test
ds
cmc
xchg
popa
jp
aad
add
into
addb
popa
jne
mov
int
pop
addr16
xchg
push
and
stos
jmp
icebp
mov
xor
xor
pusha
add
in
add
rcl
jl
leave
push
stc
xor
std
rcll
mov
out
xor
jno
sbb
jnp
pop
mov
imul
mov
lea
and
repnz
push
inc
xor
add
movsb
les
and
sbb
fmull
sub
inc
lods
mov
add
mov
xor
add
jbe
push
loop
test
pop
inc
add
adc
add
push
sub
arpl
pop
icebp
lahf
out
lret
sub
pop
jmp
mov
dec
in
or
movsl
push
ljmp
adc
in
ret
out
inc
add
jb
loope
push
dec
jo
imulb
addb
rcll
add
mov
cmpl
pop
int
add
pop
and
xchg
mov
sbb
jbe
ss
repz
xchg
and
jge
fcoms
xchg
xchg
cmpsb
xchg
sbb
xor
add
imul
lock
jp
lea
dec
xor
pop
jecxz
add
add
test
ret
call
cmp
fcmove
fdivr
dec
rolb
js
sbb
imul
xor
pop
hlt
xlat
ja
mov
clc
cmp
in
jmp
stos
cmp
mov
add
and
insb
bswap
shlb
jne
stos
mov
and
push
add
lcall
outsl
xor
pop
mov
xchg
push
mov
fisubrl
add
dec
lcall
adc
push
cmpl
insb
xchg
adc
push
pop
sbb
std
jne
inc
add
lods
mov
cmpsl
jmp
sub
xorl
imul
rcrl
out
mov
jle
and
push
add
or
push
cmp
out
js
inc
aad
ljmp
js
rolb
clc
sub
repnz
fbstp
cmpsb
das
jle
mov
sbb
stos
adc
jne
sbb
shrl
and
mov
xor
fidivrs
add
sbb
das
jbe
dec
pop
jae
dec
mov
jnp
add
xor
push
mov
aam
push
add
adc
xor
inc
add
pop
cmp
dec
out
cmp
idivb
cmp
icebp
cltd
aas
push
xor
and
dec
and
pop
xlat
dec
or
add
push
fmul
xlat
pop
add
sub
lahf
pop
xchg
bound
ret
cld
daa
pop
scas
loope
jne
dec
lret
rcrl
add
dec
sub
mov
jno,pt
aad
and
shl
push
mov
sub
stc
ret
shll
push
mov
test
mov
xlat
pop
mov
lahf
add
cs
jge
sub
out
sbb
inc
std
sbb
sub
mov
xchg
sbb
out
push
cmpsb
inc
out
fsubrs
lock
sub
cmp
and
bound
xor
inc
xchg
mov
jp
cld
jecxz
in
inc
and
out
fstpl
lds
stos
dec
lea
mov
add
xchg
or
mov
cmp
sbb
stos
js
mov
or
cmc
hlt
mov
pop
insl
mov
mov
or
int3
nop
aad
repnz
enter
inc
mov
xchg
pop
push
mov
push
mov
shl
sbb
loopne
data16
out
jp
mov
in
cmpsb
adc
jne
scas
cmpsl
xor
fiadds
stos
mov
dec
jg
mov
outsl
shrl
mov
ljmp
aam
add
adc
movsl
add
xchg
call
dec
xchg
mov
mov
jne
lock
jecxz
sbb
add
sbb
pop
or
sub
add
insb
mov
popa
dec
xor
push
imul
mov
movb
sub
ds
mov
add
mov
sbb
mov
cs
js
sub
mov
adc
push
std
push
je
add
leave
loopne
push
popf
mov
test
inc
jne
cmp
xlat
or
xor
mov
fcoms
pop
inc
dec
shll
lahf
xchg
stos
sbb
outsl
in
jns
nop
test
add
pusha
add
inc
add
stc
test
fsubr
or
loopne
call
sbb
pop
jp
or
cmp
add
ret
cs
xchg
jno
push
and
fwait
repz
pop
xchg
mov
int
out
inc
fsubrs
jg
in
test
add
add
mov
push
dec
pop
in
mov
addr16
add
sub
pop
repz
rorb
movb
cli
or
lock
add
pop
movsl
jbe
aaa
sub
lods
outsb
in
orl
add
inc
add
xor
mov
in
xchg
leave
gs
insl
add
sbb
repz
daa
jno
inc
add
notl
sub
ljmp
hlt
outsb
or
mov
cmpsl
es
popf
sbb
jne
mov
fnstenv
add
out
ljmp
push
mov
shlb
js
pop
push
je
push
call
lods
fcmovbe
mov
movsb
out
push
test
inc
popa
cmp
cmpl
adc
push
push
add
lcall
sbb
add
cmp
pushf
loopne
xchg
bound
inc
add
dec
pop
jbe
xor
outsb
mov
lods
inc
add
adc
sub
pop
or
lret
dec
das
xchg
xor
fidivl
addr16
jge
pop
ljmp
lods
inc
add
xchg
mov
imul
arpl
ret
pop
sbb
fwait
loopne
call
xchg
inc
push
movsl
shl
inc
cmpsb
fcoml
sub
aaa
mov
inc
push
add
jne
fs
push
adc
outsl
push
xchg
xchg
xchg
cmp
xor
mulb
cmp
add
jge
inc
add
or
cmc
shrb
ja
jbe
out
jl
mov
dec
push
rcl
mov
pop
pop
add
add
cltd
stc
vhsubps
jmp
mov
pop
in
insb
sub
cltd
notl
fstpt
inc
xor
je
jns
dec
sub
addl
sbb
xchg
sub
les
fistpl
jmp
cmp
mov
in
add
xchg
data16
jns
es
xor
shrb
mov
pop
jo
movb
xchg
aas
lret
jns
cmpsl
xchg
cmpsb
data16
out
minps
cmp
jbe
fs
and
iret
xorl
pop
jo
imul
add
sti
cld
nop
jge
adc
xchg
jnp
lods
adc
movhps
mov
stc
adc
lods
pusha
add
js
add
mov
call
ljmp
out
xchg
addb
out
or
jg
in
jne
dec
pop
pop
outsb
maskmovq
testl
add
pop
xor
xchg
cld
xor
fisubrl
sub
mov
sahf
pop
jnp
add
jmp
repz
xchg
add
push
sahf
xor
in
notl
xchg
add
loop
in
gs
lock
add
imul
add
pop
mov
cli
push
repnz
pop
inc
lods
jl
popa
jb
sbb
dec
cmp
lea
pusha
add
jg
test
addr16
and
xchg
cs
sarl
dec
out
loop
jp
dec
int
xchg
or
repnz
lcall
fisttpll
hlt
mov
mov
mov
loope
movsl
fiadds
scas
shrl
mov
addb
add
bound
mov
cmp
aad
sahf
insb
enter
fwait
push
mov
inc
inc
push
mov
addr16
loope
fwait
mov
and
cli
sbb
popa
push
mulps
mov
out
add
jp
mov
inc
add
push
sarl
mov
aad
mov
add
aas
mov
jp
jbe
cmpsl
shr
mov
add
push
inc
add
lods
add
inc
add
aad
sub
iret
pop
add
and
jp
nop
and
ds
mov
dec
in
sbb
imul
jmp
or
data16
or
inc
add
xchg
or
mov
pop
xor
sub
je
add
fistpl
punpckldq
jmp
fldl2e
adc
movb
add
mov
pop
cmp
pop
and
adc
aad
mov
test
bound
mov
inc
add
repz
aas
cmp
sbb
sahf
es
rcll
into
push
jo
mov
jle
mov
inc
add
pop
adc
sub
and
jge
push
dec
add
arpl
daa
mov
mov
lods
lock
mov
mov
jle
push
cmp
push
push
add
imul
add
xchg
mov
lds
push
les
into
shl
jns
pusha
add
jb
ficoml
outsl
fchs
ljmp
into
jg
cmp
lret
mov
fdivrl
jl
pop
lock
adc
out
ret
cli
sbb
sub
rorl
add
push
jb
es
loope
cmpsl
sti
and
inc
push
jne
push
or
addb
add
and
push
add
mov
mov
mov
or
je
mov
jae
push
pop
dec
ljmp
jb
inc
popf
pop
xor
add
repnz
or
jle
pop
sarb
xchg
jmp
sbb
jns
jb
rcl
mov
aas
and
adc
or
in
call
test
sub
in
lcall
iret
das
and
jg
mov
icebp
es
adc
rclb
movsb
pop
fs
lahf
add
dec
fs
pop
ss
icebp
pushf
push
adc
je
stos
xchg
jb
cmp
dec
inc
inc
lds
dec
ficoms
in
cmp
cli
test
andl
decb
dec
pop
aas
xchg
paddd
cmpl
xor
lds
jbe
cmp
dec
or
fwait
cmp
loope
sbb
mov
or
scas
leave
lods
or
scas
mov
pop
addb
rolb
into
lahf
and
into
inc
sbb
add
mov
add
xchg
adcl
dec
sub
jno
adc
sbb
push
ja
mov
lret
pop
aaa
stos
add
jg
pop
aas
pop
jmp
add
xor
lods
imul
pop
scas
mov
xchg
pushf
pop
mov
add
out
fwait
mov
jecxz
aaa
pop
lods
xor
mov
xchg
mov
pop
fidivs
dec
pop
cld
push
stos
paddq
lods
jecxz
push
sub
mov
and
in
nop
jae
mov
pop
and
cmp
xchg
lods
and
mov
add
jo
stos
rorb
inc
add
cmp
mov
cld
sub
add
cmp
push
mov
inc
pinsrw
sub
adc
xchg
or
or
mov
clc
out
pop
dec
mov
push
dec
xchg
addb
das
jmp
lods
inc
adc
jmp
ja
mov
enter
push
inc
add
lods
add
add
imul
lret
push
jle
mov
add
sbb
dec
mov
mov
jne
xchg
fnsave
in
push
add
mov
add
sbb
outsb
lods
cmpsb
mov
add
jge
inc
add
cmp
mov
and
das
mov
sarb
lcall
sti
xchg
loopne
inc
sahf
pop
insb
jo
faddl
jno
dec
sahf
out
push
add
pop
les
and
cmp
cmp
cmp
stos
push
jo
pop
xchg
adc
outsb
sub
int3
dec
fildl
xchg
ljmp
add
or
mov
imul
mov
or
pop
in
push
imul
add
clc
mov
push
xor
add
shrl
pop
mov
shll
test
ja
add
nop
shr
or
add
mov
jle
nop
pop
mov
test
pop
push
inc
cs
add
mov
popa
mov
sbb
std
pop
scas
mov
stos
jae
and
out
fldcw
adc
add
mov
jmp
xchg
dec
sbb
mov
testb
out
in
leave
aad
and
in
xor
icebp
and
xchg
into
aas
in
ds
dec
dec
mov
andl
add
ljmp
push
cmpsb
sti
sub
add
aaa
cmp
pop
les
inc
std
out
out
flds
push
in
mov
add
inc
add
or
test
scas
mov
cmp
insl
add
mov
std
fwait
add
sub
dec
jns
mov
ret
test
cmpl
xchg
add
sti
add
pushf
ja
add
cmp
fldt
test
js
das
pop
out
inc
shrl
push
mov
out
mov
xchg
pop
and
mov
mov
add
pop
cmp
aaa
test
out
out
dec
pop
mov
cli
shl
movsb
mov
cld
dec
xchg
mov
push
lods
xor
imul
sbb
adc
xchg
icebp
adc
xchg
jmp
mov
sub
repnz
jns
filds
add
or
hlt
xor
insb
ss
add
add
subl
aaa
xlat
shll
add
sub
shrb
call
push
rolb
addr16
js
pop
mov
jo
movsb
int3
loope
xchg
ficoml
adc
add
pop
sbb
push
in
add
scas
cmp
adc
mov
stc
and
push
pop
jno
ret
lods
insl
inc
xor
inc
into
fs
and
lock
pop
jbe
push
and
jb
cmp
addb
adc
mov
scas
pop
in
out
sbb
loope
imul
mov
call
mov
xchg
adc
cmp
xlat
xlat
xchg
mov
adc
xchg
xor
pop
and
add
push
mov
lods
enter
add
mov
push
fsubrp
stos
push
mov
or
add
cmp
clc
mov
cwtl
inc
add
les
mov
add
pop
mov
jmp
xchg
cmp
mov
ret
xchg
ss
add
sub
adc
jno
addr16
aaa
push
add
mov
or
cmpsl
push
jg
jecxz
in
jnp
push
ss
add
xor
xor
push
mov
pop
nop
and
frstor
push
jb
push
leave
jnp
pop
dec
outsb
mulb
xlat
repnz
mov
push
push
gs
or
jmp
cmp
jns
and
fistps
and
mov
pop
in
scas
cmp
jecxz
inc
add
mov
insb
mov
or
add
aad
add
pop
pop
aam
add
int
sbb
mov
mov
loope
fwait
out
inc
sbb
or
sub
cwtl
adc
add
insl
mov
cmp
push
ret
les
repnz
sbb
pop
mov
jo
add
add
ds
pop
adc
mov
ret
mov
pop
pushf
sbb
outsb
pushf
mov
ljmp
and
sub
dec
xchg
aad
add
dec
mov
into
je
mov
ja
add
add
sub
adc
inc
outsl
ret
loope
gs
xchg
push
dec
sbb
lcall
rolb
ficoml
fnstenv
mov
sub
addb
xor
stos
adc
mov
stc
pop
add
add
dec
shll
xor
jo
push
push
jp
ljmp
rolb
mov
rolb
dec
mov
lret
cmc
mov
movsl
ret
fsubs
dec
adc
xchg
flds
add
cmp
das
pop
lock
cmp
call
jae
add
repnz
addb
xor
addr16
pop
js
hlt
in
mov
mulb
sbb
or
add
jl
imul
add
movsl
fadd
dec
arpl
push
lret
inc
addr16
mov
arpl
mov
xor
add
sbb
shll
jae
xor
sub
loopne
loop
addb
pusha
add
lods
xchg
fnstsw
outsl
pusha
add
repz
fstl
add
add
or
xchg
fucomp
mov
add
sahf
fs
repz
xchg
repnz
outsb
mov
negl
add
popa
xchg
mov
aad
dec
test
daa
xor
movb
out
test
add
pop
jmp
or
xor
add
sbb
out
dec
adc
and
call
xchg
add
cmp
inc
add
scas
xchg
pop
neg
xor
pushf
sbb
or
test
mov
pop
dec
xchg
mov
or
fisubrs
int3
jno
stc
rolb
xor
xchg
adc
pushf
mov
add
xor
cmp
push
xor
gs
loopne
push
sub
add
xor
decb
jl
sbb
add
push
rolb
cmpsb
das
xchg
ret
pop
fcmovnb
push
cltd
pop
int3
filds
push
lea
aas
jle
movb
jns
sahf
clc
cmp
arpl
mov
inc
clc
shlb
pop
mov
or
js
adc
pop
dec
jecxz
sbb
adc
cld
jne
test
mov
pop
and
adc
jmp
pop
in
mov
sti
clc
in
movb
into
rol
xchg
subl
xor
in
roll
jle
xor
daa
mov
or
inc
xor
pop
loope
daa
jnp
dec
sbb
sbb
faddl
sbb
add
jmp
out
inc
add
jb
dec
in
addb
mov
loop
mov
dec
push
test
mov
cmpsb
adc
outsl
add
push
iret
cs
xchg
imul
dec
ds
sbb
enter
jecxz
enter
int3
push
mov
rolb
ja
dec
jns
jo
sbb
movb
add
icebp
adc
add
addb
xlat
or
push
add
arpl
cld
add
mov
fistpll
fisttpll
test
mov
add
add
gs
repz
dec
mov
pop
or
addb
or
jmp
adc
push
mov
push
push
adc
mov
mov
mov
mov
add
movb
jnp
or
popf
mov
dec
aaa
inc
add
orl
mov
add
cwtl
les
lret
out
pop
test
aad
cltd
jmp
hlt
stos
popa
sub
push
pop
sahf
aam
stos
fisubrs
fsubrl
cld
fidivl
or
add
loop
add
dec
rolb
mov
pop
and
inc
add
mov
push
mov
call
lret
add
xor
std
je
popa
in
xchg
lcall
inc
add
mov
sbb
inc
shrl
or
push
stos
and
jo
xor
imul
aad
bound
xchg
out
lcall
fists
xchg
sub
jns
sub
fcoms
push
rolb
mov
pop
imul
cltd
movsb
out
addl
fwait
add
inc
add
jae
xor
jns
in
jb
mov
add
inc
add
push
insb
nop
jge
jle
divps
push
imul
test
add
imul
stos
rolb
adc
mov
jecxz
jmp
movsb
fcomps
mov
adc
add
mov
es
movb
jp
jo
cwtl
mov
cmpsl
loopne
outsb
dec
mov
ss
mov
add
rolb
dec
clc
inc
add
or
lods
add
jno
mov
mov
das
inc
test
jbe,pt
divl
mov
jo
adcl
test
in
lcall
int3
push
dec
addb
jae
test
ds
and
add
push
dec
movb
dec
les
mov
or
add
push
add
test
xor
call
popf
pop
nop
outsl
std
imul
cmpsb
out
mov
mov
loop
ljmp
push
mov
inc
mov
lret
adc
sbb
cld
andl
mov
popf
into
adc
inc
add
pushf
cld
das
add
jg
jo
inc
mov
pop
lret
daa
xor
shlb
test
sti
ja
test
sub
mov
xchg
mov
mov
repnz
shrl
jb
or
sub
fists
push
xor
fadd
in
lods
js
or
xor
sbb
stos
inc
add
pop
sub
xchg
pop
shl
sub
mov
inc
add
arpl
xor
icebp
sub
lea
inc
inc
sbb
xchg
fisttpl
sub
int
sbb
push
cmp
xchg
jl
add
lea
jb
adc
mov
add
bound
daa
add
xor
mov
inc
leave
push
cmpsl
mov
ja
mov
inc
add
add
sbb
ljmp
push
mov
arpl
rcrl
add
add
dec
call
lahf
ret
outsb
mov
jmp
ljmp
addb
enter
mov
lods
jl
adc
dec
test
adcl
push
leave
dec
pushf
enter
sbb
xchg
cltd
xchg
or
add
popa
mov
dec
cmp
imul
fsubrs
movsb
xchg
pop
jecxz
loopne
or
mov
movsl
ret
jg
es
add
jne
test
outsl
arpl
jb
fiaddl
daa
imul
push
leave
mov
and
out
pushf
jb
adc
jg
inc
add
xchg
rcll
push
add
add
push
cmp
mov
mov
adc
sub
and
test
aam
out
inc
jne
imul
or
xlat
outsl
cmpsl
mov
in
mov
cld
movsl
addb
and
sahf
sbb
push
mov
dec
and
jle
add
cmp
rolb
dec
xchg
out
fwait
scas
mov
aaa
push
jo
cmp
jmpw
inc
add
add
aaa
or
jae
sbb
ffree
add
rorb
xchg
imul
sub
lods
sbb
jge
sti
mov
add
jno
push
cmpsl
xor
mov
cmp
test
add
mov
cmp
popa
cmp
roll
inc
mov
push
icebp
pushf
pop
xchg
push
xor
aaa
je
mov
js
pop
out
xchg
aas
idivl
add
sub
in
dec
lods
arpl
sbb
mov
testl
aaa
test
jno
repnz
daa
jb
lds
aad
fistpl
movsl
and
addb
mov
mov
sub
pop
add
cmp
xchg
pop
dec
mov
inc
add
es
push
and
push
cmp
jle
fdivrs
push
pop
sub
pop
push
into
aam
sbb
xor
pop
xor
bound
lea
int
push
and
cmp
incl
fdivrs
addr16
mov
aas
call
dec
sub
add
mov
xor
and
sbb
pop
sbb
add
popa
jnp
fdivrl
nop
or
lcall
aam
push
sub
mov
cmpsl
or
mov
movsb
xchg
in
repnz
xor
push
stos
or
push
xor
and
adc
push
sub
and
in
test
cwtl
xlat
and
add
cmp
add
sbb
aas
jle
test
inc
jecxz
jmp
sbb
not
mov
jecxz
add
addb
xchg
mov
addb
cwtl
into
std
mov
add
xor
insl
js
rorb
jp,pn
sub
out
push
add
lock
add
sbb
lahf
mov
jle
pop
out
lret
lret
jp
jbe
cmp
dec
pop
xchg
lret
sub
inc
mov
or
jecxz
int3
xchg
adc
xor
add
and
decl
sub
addr16
cld
or
mov
dec
arpl
inc
add
ja
sahf
outsb
jns
mov
mov
movb
outsl
imul
xchg
cltd
add
xorl
cmp
mov
mov
shlb
pop
push
push
fsubl
inc
dec
adc
ret
rclb
aas
mov
popf
das
mov
or
mov
cmpsl
inc
jbe
ret
cli
mov
inc
les
popf
mov
mov
jle
test
lods
ret
fwait
jo
xor
lds
add
aaa
fwait
cmpl
test
out
sub
pop
and
mov
cmp
add
add
sub
std
mov
add
pop
cmpsl
imul
arpl
jge
mov
flds
lds
jb
add
test
outsl
mov
inc
add
call
fadds
mov
call
inc
add
adc
aaa
clc
and
out
mov
xorl
xchg
insl
movsb
outsl
xor
test
addb
add
outsl
lock
jns
mov
sub
sub
or
sub
imull
mov
add
pop
xlat
pushf
scas
stc
sbb
push
enter
dec
testb
inc
add
cmp
jb
lcall
lods
cmpsl
mov
mov
cli
jns
xchg
in
xchg
sbb
jbe
aaa
jl
dec
sub
fldcw
insb
int
movsl
ljmp
in
xchg
xor
in
shl
or
jge
cmp
dec
lds
add
sub
xor
xor
pop
push
push
inc
add
pushf
xor
xchg
imul
scas
aad
out
push
movsb
and
cmp
jmp
stc
jbe
push
mov
scas
xchg
popf
test
inc
iret
jmp
add
imul
imul
add
pop
addb
cmpsl
rolb
jmp
jp
add
mov
and
loope
xchg
mov
sahf
roll
mov
bound
aad
sbb
sti
mov
mov
add
mov
cmp
popf
nop
mov
out
subl
shl
insl
xlat
dec
fildll
sahf
mov
jle
ljmp
xchg
lea
add
xchg
rorb
out
cmp
mov
adc
xor
push
gs
push
and
adc
mov
repz
mov
add
addb
push
cld
js
out
mov
das
mov
loopne
arpl
jmp
testb
xor
inc
add
aad
add
jl
add
jno
pop
xor
pop
daa
dec
imul
jnp
mov
je
add
gs
sti
pop
inc
add
add
repz
fs
mov
sub
push
lret
dec
js
mov
mov
pop
cld
imul
in
leave
shl
sub
add
daa
rolb
and
push
lahf
add
sahf
push
add
mov
inc
aas
xlat
lahf
xchg
inc
add
jb
imul
xor
fwait
add
xchg
xor
xchg
test
int3
mov
inc
sti
and
add
fsts
inc
push
jnp
sub
mov
popf
scas
rolb
out
and
xlat
jg
mov
mov
pop
inc
add
add
mov
icebp
or
fs
imul
subl
test
outsb
dec
stos
xchg
push
in
lret
pop
mov
out
ds
pop
addl
movsb
or
xor
cmp
js
outsb
ret
add
mov
in
insl
daa
xor
jno
jbe
inc
add
xchg
popa
sub
push
int3
aam
cltd
mov
adc
lret
test
pushf
out
es
test
mov
push
icebp
dec
jmp
addb
das
movb
inc
les
imul
repz
mov
das
cmp
rcrb
push
scas
jo
adc
ja
pop
out
dec
push
inc
push
cmp
jae
push
add
sub
int3
sar
mov
cs
movb
out
lods
inc
add
mov
addb
cmp
pop
jle
or
add
cmp
addb
movb
rorb
inc
das
inc
lret
scas
roll
lock
inc
aas
dec
xchg
inc
push
xchg
mov
cmpsb
jecxz
int3
loop
jb
test
ficomps
mov
inc
icebp
adc
or
add
stc
popa
push
std
loope
test
sbb
movsl
mov
jbe
sbb
rcrb
xchg
jns
inc
jo
in
inc
add
add
into
insb
out
fcmovbe
and
xor
cmp
movb
pop
movsl
push
or
or
push
sub
inc
add
add
add
lea
cmp
in
xchg
mov
sub
scas
test
int
std
xchg
push
xor
pushf
sub
scas
ds
jg
out
dec
lret
push
rcll
xchg
pop
jnp
xlat
shl
dec
out
fisubrs
mov
mov
adc
call
pop
les
add
inc
add
jp
negl
mov
ret
pop
or
cltd
push
add
lods
outsb
pop
xchg
and
icebp
pop
mov
jo
mov
xchg
int
fs
mov
addb
lock
xor
popf
lods
mov
pop
push
xchg
fmull
add
fistps
addb
mov
repnz
rolb
loope
add
or
or
mov
ds
mov
je
sbb
rclb
add
movb
into
int3
xchg
je
jge
push
rcr
jnp
or
xlat
lods
into
test
shr
dec
cld
sub
fdivrl
rol
lods
addb
jae
mov
add
inc
xlat
sahf
repnz
cmp
iret
mov
jae
lahf
mov
in
lcall
shrb
int3
mov
rolb
mov
add
push
int3
or
popa
xchg
call
jno
mov
lcall
int3
cld
gs
sub
mov
or
test
shl
out
imul
mov
sub
inc
add
jmp
push
xlat
loope
ljmp
add
add
add
push
or
cmp
cmp
insl
outsb
mov
in
mov
adc
push
aaa
or
mov
ja
cmp
jb
mov
cmpsl
mov
add
jbe
in
xor
sub
cmp
sbb
mov
jecxz
or
sub
xor
mov
inc
add
add
fisttps
movsb
pop
pop
push
cmp
popa
xchg
and
add
test
inc
add
movsl
push
out
ret
ret
stos
and
sbb
jg
lods
mov
mov
out
enter
es
cs
cli
lret
jmp
xchg
sub
movsl
adc
mov
rolb
sbbl
inc
ret
mov
stos
dec
test
cmp
in
push
add
popf
lahf
cmp
mov
test
xchg
adc
outsb
les
and
test
push
sub
inc
add
jne
mov
add
or
add
dec
adc
jo
lock
sbb
sub
add
add
cld
lock
cmc
mov
xor
mov
cwtl
dec
hlt
or
add
out
ret
sub
lahf
cwtl
cmp
fdivl
jb
lds
clc
in
cmp
loopne
and
sub
fs
add
push
jns
sbb
sbb
mov
mov
cmp
or
sarl
icebp
les
jnp
mov
xor
pusha
add
push
scas
adc
addb
daa
xor
ss
inc
and
mov
xchg
pop
cld
mov
rcll
iret
jmp
hlt
pop
add
rol
add
cld
gs
add
stos
popf
cld
inc
test
sub
imul
push
xchg
fs
jb
sub
jbe
sub
xor
inc
mov
in
outsb
and
hlt
cmp
inc
sub
mov
or
jb
jbe
mov
jg
psrad
jns
mov
xor
ficomps
lret
movsl
int
cmp
adc
jbe
ror
xchg
sub
add
aad
and
mov
inc
add
sahf
addb
rcll
mov
cld
or
cmpsb
xor
pop
movb
loop
mov
rcl
sbb
adc
loopne
push
push
push
push
mov
test
sbb
fxch
mov
pop
mov
add
xor
enter
fadd
add
pushf
ret
mov
push
out
add
and
jno
sahf
std
jmp
stos
sub
add
gs
adc
push
negl
ja
lret
xchg
xchg
xchg
dec
xchg
rolb
jge
test
gs
inc
add
fucomip
addr16
dec
and
add
std
stos
call
test
ss
xchg
xor
inc
adc
add
jns
add
add
mull
jb
jl
jo
or
data16
mov
xchg
cwtl
je
shlb
cmp
stos
clc
mov
push
pop
jecxz
push
outsl
jl
dec
xchg
add
and
push
fstl
mov
push
mov
sbb
add
xlat
loop
add
daa
pop
addb
roll
cmp
and
lea
dec
js
xor
sub
dec
pop
xor
sub
rolb
mov
adc
mov
scas
add
pop
push
sub
bound
push
adc
jnp
add
js
cmp
wrmsr
mov
js
movsb
scas
mov
sbb
xchg
mov
pop
xor
pop
aam
dec
aaa
add
xor
fwait
or
mov
xor
popa
xchg
fisubl
add
add
enter
sub
add
xchg
push
pop
addb
xor
pop
mov
popf
jp
jo
repnz
jnp
push
movsb
nop
jae
add
adc
scas
push
pusha
add
pop
xchg
adc
add
ss
or
rol
add
out
and
out
int
iret
dec
xor
xchg
xor
mov
or
dec
cld
and
loopne
or
mov
lods
add
lret
das
pop
popf
mov
aad
or
adc
pop
mov
mov
xchg
inc
add
aas
lods
xlat
mov
insl
ret
sbb
lret
xor
push
jns
jne
inc
bound
add
xchg
and
ret
push
data16
mov
test
xor
add
clc
and
adc
add
push
pusha
add
push
jmp
lods
and
les
push
loop
dec
jle
add
push
add
lret
or
in
cmp
inc
add
jle
jg
jae
bound
andl
add
cmc
mov
sbb
lahf
xchg
stos
pop
rclb
pop
adc
push
inc
add
daa
fucomip
cmp
dec
test
loopne
pusha
add
inc
add
pop
inc
add
inc
mov
pop
mov
mov
and
aam
or
leave
addr16
mov
cmp
stc
repz
test
jp
mov
das
sbb
movb
adc
fs
inc
imul
or
fcomp
leave
push
out
adc
cli
xlat
out
xor
mov
add
push
pop
fistps
hlt
lds
clc
push
mov
mov
mov
rcr
sbb
out
push
clc
shll
xchg
es
shlb
add
add
bound
sarb
pop
addb
mov
inc
add
and
mov
and
es
add
in
in
ds
push
mov
mov
push
test
sub
dec
cmp
fildl
add
xor
in
movb
mov
ficoms
nop
lods
push
out
gs
lret
push
rorl
repz
dec
les
pop
cs
jbe
das
outsb
outsl
push
daa
icebp
cmpsb
xchg
mov
ljmp
mov
jmp
popa
dec
aam
mov
inc
jb
add
aaa
int3
iret
xchg
mov
movsb
mov
icebp
flds
outsb
inc
sti
out
addb
nop
inc
call
mov
nop
xlat
repz
xchg
rolb
add
xor
sub
aas
movb
sarl
mov
test
jo
pusha
add
lds
scas
mov
clc
adc
xor
add
push
outsl
pop
call
pop
sbb
push
cli
and
mov
mov
js
icebp
fisubrl
adc
cltd
int
jg
fldcw
lret
mov
mov
out
les
fsubrp
mov
jp
add
pop
pop
push
mov
cwtl
inc
sbb
rolb
add
rcr
int3
popa
mov
clc
dec
stc
cmp
aaa
xchg
icebp
insb
xchg
outsw
pop
repnz
jnp
push
mulb
add
cmp
stc
push
mov
cs
add
clc
inc
add
dec
jbe
jae
xlat
aas
mov
or
add
and
test
xchg
sbbl
inc
add
loop
and
and
cs
out
arpl
and
test
add
out
leave
shll
push
pop
fwait
dec
mov
test
scas
jno
mov
addr16
sbb
nop
or
or
xchg
lods
dec
lret
enter
addr16
add
clc
rolb
or
pop
push
add
sub
add
cli
mov
fldl
add
pusha
add
lock
adc
clc
int
or
pop
mov
jl
pushf
dec
dec
inc
or
mov
in
mov
and
mov
aaa
cmpsl
mov
mov
scas
mov
aas
jp
cmp
rcrl
mov
dec
jnp
dec
or
stos
or
inc
add
or
ret
xchg
scas
ja
les
call
mov
or
mov
push
mov
test
mov
out
add
dec
test
push
push
jbe
aaa
bound
cli
das
pushf
mov
iret
sbb
cltd
lahf
outsb
movsl
mov
sbb
inc
add
sbb
call
sub
mov
add
lret
inc
add
out
xchg
or
jbe
fisubrl
jmpw
aad
add
xchg
data16
add
add
and
sub
mov
add
mov
add
les
mov
mov
sarl
mov
push
scas
jg
notl
adc
mov
add
sub
cmpsl
cmp
add
dec
mov
cmp
test
adcl
add
inc
cltd
imul
sbb
jp
outsl
shr
adc
dec
add
fcmovb
inc
add
cwtl
inc
add
out
xlat
and
sbb
cmc
adc
jb
scas
mov
or
pushf
adc
fistpl
test
mov
int3
sbbl
push
insb
add
ja
add
or
jle
lods
dec
or
insb
add
jno
mov
int
mov
or
cmpsb
adc
xor
jbe
mov
and
stos
pop
into
imul
call
pop
mov
add
cmp
cmpsl
int
out
insl
xor
into
mov
addb
mov
shll
lock
je
lret
lds
xor
loop
xchg
push
cmpsb
ret
in
jmp
cld
mov
hlt
dec
aam
ljmp
pop
adcl
in
adc
jne
fidivrs
pushf
add
lods
cltd
pusha
add
inc
add
mov
lods
repz
daa
fbld
xor
aad
mov
mov
xor
sti
out
pop
out
lds
loop
jb
add
aad
xlat
imul
and
pop
sub
scas
bound
mov
inc
stc
mov
sbb
mov
cmp
es
fwait
shll
je
jmp
dec
sub
add
imul
jecxz
push
add
enter
fwait
aas
pop
in
fcoms
mull
add
test
imulw
cmpsb
mov
cmp
mov
add
add
sbb
jmp
out
xchg
sub
mov
test
xchg
push
jecxz
dec
insb
test
pop
xor
mov
ss
cmp
lahf
rcl
mov
in
push
pop
jge
jno
mov
addb
repz
cld
out
adc
jl
mov
xor
int3
xchg
aaa
add
sub
test
scas
xor
xor
sub
add
dec
jnp
dec
dec
mov
add
not
and
push
repnz
mov
data16
cli
iret
setbe
fwait
cmp
jno
mov
arpl
xchg
daa
das
xor
mov
add
scas
and
jb
imulb
add
or
outsb
and
mov
fnstsw
mul
dec
jae
pop
inc
adc
add
movsl
mov
movb
loop
jp
stc
sbb
into
gs
push
add
les
cmc
cmp
clc
adc
and
rolb
and
fcoml
rorb
cmpsb
mov
test
cmp
in
and
fwait
mov
mov
shrb
mov
movsl
stc
push
fcomi
cwtl
pusha
add
pop
dec
jp
es
lock
rolb
sbb
jns
dec
jbe
popa
push
sahf
and
push
jne
in
cmpsl
push
fcmove
arpl
dec
lods
push
xor
ret
jne
aas
int3
xchg
pop
and
mov
lret
sub
adc
ja
push
mov
loopne
ficoml
push
pop
inc
add
inc
jae
mov
mov
add
cmp
push
pop
or
xor
cmp
outsl
push
add
iret
jo
out
jl
lahf
pop
inc
add
ss
mov
hlt
mov
dec
loop
add
add
xlat
stos
or
sahf
insb
int3
ds
popa
ret
nop
add
mov
mov
push
mov
cld
adc
mov
and
or
jb
int
or
mov
cmp
xchg
dec
mov
fsubrs
idivl
in
dec
jle
jg
jb
mov
nop
add
shrl
sub
scas
mov
mov
ja
inc
add
fdivp
push
xor
mov
add
pop
dec
stos
inc
push
mov
add
in
pop
insb
call
les
daa
pop
adc
dec
xchg
mov
pushf
je
sbb
xor
fdivrs
mov
cli
lods
fnstenv
out
xor
add
imul
in
rolb
mov
call
cmp
outsb
int
add
add
mov
pop
add
add
rcrl
pop
rclb
add
hlt
inc
add
sub
jne
sti
or
data16
push
mov
dec
dec
or
or
xlat
call
in
cltd
hlt
outsb
clc
jl
fs
and
jle
push
add
rolb
push
enter
jb
stc
iret
sub
jp
cmpsl
cmpsb
inc
ficoms
shr
add
mov
lods
jo
xor
dec
addb
out
imulb
push
sub
jl
test
dec
fnstcw
insl
popa
sbb
lahf
sub
jnp
push
add
scas
jp
movsl
push
add
xor
add
mov
shll
fs
push
rcr
xchg
push
bound
loop
and
add
jmp
fcomps
add
ret
rolb
lea
dec
add
sahf
pushf
sti
adc
and
jb
stc
sbb
or
or
mov
aaa
mov
lea
add
or
add
inc
add
enter
add
mov
push
sub
mov
push
stos
cmpsb
out
add
mov
and
scas
dec
rcrb
adc
repz
je
mov
adc
add
int
sbb
add
add
lods
movsb
mov
mov
sub
mov
mov
push
ror
add
inc
add
add
das
fcoms
push
cli
sbb
mulb
add
lcall
int3
pop
lock
push
mov
ret
dec
jae
cmpsl
cmpsb
mov
std
inc
add
fxch
xor
jne
ss
ss
adc
pushl
xor
or
pop
aad
mov
mov
decb
cmp
mov
dec
test
or
mov
rolb
adc
mov
jecxz
inc
add
xor
inc
push
fcmove
rolb
ret
popa
ja
dec
cltd
dec
push
adc
addb
xor
adc
movsl
stos
jno
jge
add
fldt
rorb
mov
xor
xchg
scas
or
jecxz
into
jmp
shll
pushf
pop
mov
outsb
enter
and
stc
mov
lret
out
add
int
adc
and
lcall
jne
decb
push
cld
cwtl
enter
xchg
ljmp
loop
add
inc
add
ljmp
mov
imul
push
add
lock
fs
cmpsl
addb
push
xchg
inc
add
popa
mov
add
sub
in
xor
cs
movsl
notb
mov
stos
mov
fsts
adc
inc
add
or
jle
sub
jle
add
push
stos
in
or
add
xor
pop
jmp
rcrl
dec
fbstp
push
repnz
jne
enter
loop
mov
push
inc
add
lcall
popf
fisttpll
repz
xor
mov
imul
xor
inc
add
inc
mov
movsl
movb
cmp
pop
in
cmp
cmp
aaa
mov
out
mov
add
movsl
cmpsb
mov
enter
mov
fidivrl
sbb
pop
mov
leave
sbb
fldcw
or
lret
test
xor
mov
xorl
aas
jns
jmp
jo
or
cmp
outsb
cmpsb
or
add
sub
les
add
jecxz
dec
mov
or
add
outsb
popa
push
outsl
xchg
jbe
adc
out
pop
add
setns
push
bound
icebp
fcmovnb
add
add
test
movsb
loopne
push
add
subl
push
addb
xchg
pop
push
add
jae
sub
xor
out
cmp
outsl
mov
lock
popa
movsb
shlb
mov
sbb
jecxz
ret
lods
and
cltd
or
xchg
mov
jo
dec
push
clc
dec
push
lcall
cmpsb
push
leave
jmp
dec
ret
or
mov
fsubrs
mov
cld
movsb
add
jp
cmp
inc
add
jmp
hlt
jecxz
dec
movsl
jecxz
enter
and
add
cmp
iret
jae
add
test
mov
rolb
loope
mov
scas
cmpsb
or
addb
and
bound
out
mov
jo
hlt
push
or
sbb
dec
dec
test
push
imulb
aas
or
push
and
out
sbb
adc
push
xchg
decl
inc
fnstsw
mov
add
sub
ljmp
pop
mov
mov
nop
adc
add
inc
add
aam
loope
jns
out
pop
call
cmp
sti
mov
jbe
jle
inc
add
filds
popf
xor
xchg
adc
jno
or
in
stos
pop
sub
cmp
xor
add
jne
sbb
std
int
push
lds
mov
add
cmpsl
clc
jnp
add
add
call
les
dec
ficoms
movl
xor
push
daa
in
xor
cwtl
adc
orl
add
pop
inc
add
loope
test
in
fbld
sub
je
jp
add
add
push
sbb
push
mov
inc
add
add
test
adc
adc
mov
add
push
pop
movsl
or
mov
cmp
clc
dec
ret
push
push
jmp
lock
mov
stos
inc
sub
dec
movsl
fs
add
sbb
clc
aad
es
add
movb
pop
lds
mov
test
movsl
movsl
popf
hlt
push
shll
aas
rcll
daa
adc
negb
adc
pop
cmp
in
mov
xor
lock
xor
imul
cltd
or
dec
dec
mov
mov
add
lods
lods
dec
shll
add
outsl
ret
rcll
mov
adc
push
cmpl
lea
dec
xchg
test
mov
daa
data16
add
loop
add
imul
jecxz
out
lds
out
repz
sub
or
adc
mov
pop
sbb
add
rol
inc
add
push
mov
add
lahf
jmp
in
rorb
pop
loope
sub
add
clc
frstor
pop
aam
mov
gs
popf
pop
in
dec
out
callw
push
lods
jmp
les
out
sbb
mov
cmp
out
and
add
mov
dec
scas
mov
ss
push
outsl
pop
sbb
cmpsl
lahf
je
movsl
out
les
daa
cmpsl
jp
popf
pop
addb
mov
movsb
lea
sbb
dec
aad
add
shll
and
subl
in
negb
cmpsl
add
jp
je
inc
fwait
cli
scas
xor
movsb
pop
sub
pop
push
addb
sbb
int
sbb
xor
xchg
adc
sub
adc
mov
in
iret
out
ss
pop
arpl
add
inc
add
popf
sbb
xor
inc
add
add
test
scas
push
pop
xchg
fisttpl
loop
nop
stos
movb
in
cmp
cmp
push
xor
gs
xchg
adc
push
or
mov
aad
fdivrs
loope
cmova
xor
sbb
lret
jno
je
aaa
sti
or
clc
mov
bound
sahf
fisttps
jb
dec
rolb
jmp
and
addb
lret
and
cmp
dec
in
dec
pop
test
add
loope
sbb
xor
push
add
add
and
std
mov
adc
pop
dec
mov
pop
cmpsl
jmp
ja
and
icebp
dec
and
je
pop
inc
add
and
push
mov
jns
aam
or
in
or
comiss
jb
scas
ja
xchg
add
xchg
pop
adc
mov
data16
xor
xchg
push
xor
addr16
jae
sbb
es
add
in
jno
fisubs
out
add
div
sub
jo
xor
cmp
push
fbld
lret
loope
inc
lahf
lret
aas
scas
push
mov
add
inc
add
lds
int
xchg
mov
movsb
push
in
sbb
daa
inc
add
adc
insb
pop
push
fwait
in
jge
push
scas
cltd
gs
leave
movsb
aas
fisubl
add
mov
divl
sbb
xchg
or
cld
mov
rolb
pop
jnp
adc
in
call
popa
sbb
outsl
adc
add
inc
add
mov
addb
loope
call
dec
fmuls
mov
pop
dec
sub
fildll
xor
in
cmpsl
arpl
jns
dec
test
push
add
sahf
pushf
aam
pop
test
rep
sbb
pop
or
rolb
aas
and
imul
loope
dec
jno
adc
jnp
loop
pop
push
cli
push
mov
add
ds
test
lahf
aad
dec
xor
jbe
xor
mov
push
inc
jecxz
cld
pop
pop
or
inc
add
mov
push
cmp
add
lock
jl
push
fnsaves
adc
in
mov
lods
fbld
add
clc
xchg
cld
je
push
sahf
add
hlt
and
je
add
dec
dec
aaa
cwtl
sbb
pushf
stos
ljmp
lods
push
addb
mov
jle
jnp
mov
aaa
cwtl
enter
add
ljmp
add
or
scas
mov
push
jnp
testl
push
out
fprem1
xor
mov
add
leave
pxor
mov
lods
add
push
inc
or
stos
add
aad
cli
xchg
push
jne
aad
pop
adc
dec
movsb
or
add
movsl
rcrb
leave
or
lret
out
or
jmp
mov
lea
jp
mov
add
xchg
sbb
inc
add
cmc
or
lock
or
movsl
push
adc
hlt
xchg
push
mov
cmc
mov
xor
fwait
jns
jbe
jbe
mov
or
cmp
or
fnstcw
rolb
pop
dec
insb
jnp
daa
mov
and
movb
into
test
jg
test
jbe
jge
daa
test
mov
testl
dec
outsb
mov
addb
call
fists
push
stos
pop
aaa
xor
ljmp
add
lea
icebp
lahf
adc
sbb
or
add
ficoml
ds
jne
xchg
mov
or
jb
lcall
adc
add
bnd
adc
popa
lret
fnsave
loope
mov
loop,pt
xchg
sbb
add
mov
andl
push
je
lds
test
add
add
jnp
incb
mov
fs
enter
negb
int3
sbb
stos
push
mov
push
out
in
out
mov
pushf
dec
dec
and
in
adc
push
mov
pop
ljmp
sbb
cmp
jns
repnz
push
stc
mov
mov
mov
ficoml
jae
icebp
xchg
sti
jecxz
fdivrp
add
je
scas
ds
mov
movsl
test
das
xor
cmp
bound
jae
xchg
repnz
or
out
add
mov
add
aam
inc
mov
add
jmp
jp
in
mov
test
or
mov
dec
lahf
or
jb
push
sub
stc
lods
push
lds
sar
fs
mov
fdivl
push
xchg
cmpsb
call
jmp
popf
mov
lahf
in
ss
ret
dec
dec
loopne
pop
xchg
mov
add
stc
rcrb
push
xor
aad
jp
outsb
add
add
movsl
lcall
out
inc
iret
add
cmc
jp
mov
pop
sbb
negl
scas
sub
add
adc
jae
pop
shll
inc
add
pop
xchg
inc
add
add
jge
inc
add
add
cwtl
xor
xor
aaa
scas
into
stc
lahf
punpcklwd
sbb
inc
add
sti
xchg
test
jecxz
jno
lcall
punpcklbw
jno
scas
adc
push
sub
cmc
ret
daa
ret
je
inc
add
add
add
pop
test
mov
scas
sbb
pop
jo
aas
cmp
sub
pop
pop
mov
pop
xor
mov
cld
inc
add
mov
inc
cmp
in
jle
repz
ds
or
arpl
lods
sahf
sahf
fisttpll
neg
pushl
add
and
mov
cmp
movl
mov
add
adc
mov
lret
scas
pop
push
cmpsl
int3
adc
pop
movsl
mov
gs
jae
pop
mov
jmp
je
sub
mov
add
into
jbe
inc
mov
push
dec
sbb
ficoml
mov
xchg
repnz
outsb
gs
imull
mov
add
aaa
inc
cld
out
test
iret
inc
lret
push
ljmp
int
scas
arpl
adc
addb
fwait
cs
movsb
test
addb
and
dec
add
sub
jmp
dec
loopne
xchg
pop
pushf
fcmovbe
ror
add
bnd
cmp
leave
ss
push
pushf
mov
movsl
sbb
add
call
gs
add
outsl
push
fisttpll
xor
sub
push
push
add
lds
jb
fdivr
or
or
adc
sbb
mov
movsl
out
mov
jle
add
popw
mov
loop
cmp
mov
jnp
stc
push
sbb
mov
daa
aas
jb
jnp
loop
adc
push
add
enter
dec
notl
insb
leave
outsl
rorb
imul
cmp
enter
sti
pop
jnp
pop
pusha
add
out
mov
mov
cmp
mov
jno
jns
xchg
jmp
nop
dec
and
cmc
dec
int3
movsl
mov
enter
cmp
mov
add
xorl
mov
add
dec
cmp
push
cmp
icebp
mov
outsl
flds
add
popa
mov
fdiv
ret
cmpsl
inc
adc
in
fs
gs
cmp
or
inc
add
pop
and
xor
stos
pop
fsub
out
daa
and
cwtl
mov
aam
cmp
mul
lahf
add
sbbl
push
jne
add
leave
fdivs
test
outsl
jecxz
jne
add
rcll
stos
insl
xchg
sbb
in
insb
testb
adc
add
aaa
fildl
popa
outsb
xchg
test
loope
add
sub
pop
incl
std
outsb
jl
pop
sbb
int3
mov
sub
push
je
mov
popa
pop
adc
imul
int3
xor
flds
shll
add
jnp
or
movb
push
std
sbb
inc
add
jp
push
sbb
add
popa
mov
aam
lcall
mov
dec
dec
stos
push
test
or
jg
xchg
call
xor
jnp
push
int
je
jb
xchg
std
sbb
je
arpl
jnp
and
jmp
cli
pop
dec
movsl
and
stos
dec
pop
mov
mov
lods
add
jecxz
lods
stc
out
insl
pusha
add
lret
xchg
push
jl
mov
imul
push
mov
pop
repnz
cmp
inc
fistpll
pusha
add
xor
push
lods
sub
aaa
clc
mov
xchg
addb
cmp
ljmp
movb
cmpsb
mov
les
andl
push
ds
jo
or
and
xor
test
cmp
std
jne
inc
icebp
call
pop
pop
sahf
cmp
pop
jle
insl
push
loope
pop
lds
dec
jg
mov
stc
lcall
xchg
dec
sub
lahf
push
mov
movb
mov
pushf
inc
add
stos
lea
push
mov
cmpsb
lods
mov
rolb
sub
divb
inc
add
popf
movsb
mov
inc
add
dec
mov
add
sbb
xchg
loop
push
pop
add
adc
mov
inc
add
cmpsb
flds
pop
aam
mov
jnp
pop
icebp
push
insb
xor
mov
push
add
ljmp
jge
shll
add
and
sahf
jl
mov
popa
push
mov
loop
jl
jae
ret
and
addb
or
stc
test
loopne
xchg
mov
add
pop
test
cmp
mov
lock
cmpsb
jecxz
ljmp
add
push
add
insl
scas
xor
addr16
repnz
add
xor
fiadds
pop
cltd
pop
fnstsw
sbb
mov
repz
test
mov
dec
lods
push
pop
mov
adc
pushf
cmp
addr16
std
imul
jns
or
fstpl
cltd
fisubs
add
xor
sub
adc
push
and
js
inc
add
pop
mov
js
mov
add
or
xchg
xchg
scas
out
gs
add
and
sbb
push
addr16
push
add
sbb
jno
out
movsl
and
sub
std
frstor
adc
mov
cld
loope
jne
push
cmp
mov
rolb
jns
add
jns
aaa
and
stos
pop
daa
fsubl
rorl
adc
push
movsl
cmpsl
lds
mov
push
jne
mov
out
jmp
stos
cmc
mov
dec
sub
xchg
inc
add
popf
bound
ret
sbb
inc
add
add
xlat
push
cmpsb
cmp
inc
mov
pusha
add
lds
add
add
fidivrl
loop
addb
out
xchg
xor
je
cmp
push
movb
add
imul
sub
xor
shlb
mul
and
aaa
sbbl
xchg
mov
xlat
dec
movsl
xchg
dec
cld
shrb
mov
xchg
in
or
or
add
pop
xor
sbb
add
outsb
mov
and
inc
add
jp
xchg
dec
lahf
mov
pop
inc
add
mov
rcrl
mov
mov
dec
sbb
jbe
inc
add
lret
adc
int
add
ret
pop
setnp
push
addb
iret
mov
mov
or
les
repnz
dec
mov
xchg
movsl
xor
shrb
add
add
rolb
inc
add
stc
in
enter
jmp
or
adc
or
push
repnz
mov
in
cmp
pusha
add
pop
imul
jno
mov
mov
sarl
jae
sbb
fadds
insb
movsb
hlt
outsl
inc
add
fildll
dec
divb
jg
jae
mov
add
xor
pop
push
pop
pop
nop
xchg
inc
add
jg
cmpsb
imul
pop
das
sbb
inc
out
gs
stc
stos
sub
insb
aam
outsb
jae
movsb
imul
outsb
call
add
xchg
mov
addb
mov
stos
dec
cmp
add
cmc
mov
adc
add
icebp
inc
xor
xchg
inc
aam
outsl
mov
test
add
popf
inc
add
inc
add
add
sbb
pop
arpl
push
bound
jbe
shll
add
aas
jp
dec
dec
and
cmovne
mov
ret
and
add
jle
add
push
sarb
xchg
mov
out
fsubs
lock
jbe
xor
dec
pop
mov
or
jb
jb
xlat
mov
push
add
jnp
jge
mov
and
hlt
push
jmp
pop
mov
jmp
adc
loope
inc
add
ds
mov
addb
out
loope
insb
pop
cmp
or
jecxz
add
add
xor
push
test
sbb
add
pop
repnz
repz
lods
out
out
push
out
dec
dec
mov
add
cmc
in
xchg
ds
repnz
sub
aam
mov
loop
and
push
out
movsb
les
adc
xor
push
or
fwait
inc
add
or
hlt
push
sub
mov
rolb
imul
mov
mov
test
xchg
inc
add
sti
mov
iret
imul
cltd
lds
mov
loope
call
test
cmp
sub
mov
jb
add
sbb
cmc
cwtl
addr16
aam
sub
mov
dec
or
mov
add
clc
inc
mov
jae
xchg
movsl
pusha
add
mov
ljmp
lret
jecxz
inc
add
sub
cmp
addb
sub
loope
xchg
out
sti
mov
add
scas
testl
add
int
pusha
add
jb
fisubl
roll
shrb
test
fidivs
movsb
dec
pop
dec
shlb
cmp
push
jns
clc
add
cmp
loop
and
decb
out
xlat
fsubrl
in
mov
lea
lret
and
push
loop
add
je
jb
dec
push
cmc
ds
add
cltd
std
or
cmp
add
adc
int3
and
and
jnp
xchg
stc
mov
jne
mov
add
mov
add
cli
fdivs
bound
add
add
mov
jmp
dec
mov
push
imull
sbb
push
add
fs
mov
insl
jmp
sti
mov
mov
rcrl
push
jb
mov
sub
dec
add
cmc
dec
cltd
dec
aas
mov
jl
inc
cmp
aam
adc
out
fildl
je
das
fs
lds
ret
jecxz
clc
movsl
ljmp
mov
xchg
add
mov
les
cmpsl
and
orl
pop
pop
hlt
mov
inc
add
js
mov
icebp
insb
ljmp
scas
mov
shrl
mov
lods
mov
testb
je
cmp
pop
xchg
aaa
mov
mov
sarb
push
imul
add
jne
mov
cltd
push
pop
xlat
pop
cwtl
jo
mov
mov
jecxz
ret
xchg
cltd
lret
in
pop
inc
int3
mov
or
dec
pop
lea
lods
cwtl
sub
iret
loop
and
and
xor
push
out
push
or
andl
cmp
jnp
adc
cli
js
or
jl
mov
inc
add
mull
out
lods
lret
pusha
add
jae
iret
insb
xor
adc
or
mov
in
cmp
add
mov
add
mov
nop
jge
mov
out
aad
movl
mov
shll
pop
out
mov
jecxz
xchg
fcmovbe
fidivrs
shll
cmp
add
jecxz
test
mov
push
ds
add
pop
mov
cmpsb
push
xor
xor
in
mov
mov
imul
iret
pusha
add
cld
bound
or
dec
sub
cmp
jge
add
mov
mov
aas
mov
sub
xor
in
cmp
popf
ljmp
cmp
jno
add
and
add
vmread
loopne
sbb
xchg
lret
hlt
daa
in
xchg
hlt
inc
add
movb
add
rclb
mov
lcall
rolb
push
cmp
cmp
repnz
insb
andl
xchg
mov
stc
out
addr16
pop
repnz
popa
scas
xchg
push
bound
sbb
add
and
lahf
nop
xor
add
out
adc
test
and
sub
and
test
sub
divb
lcall
and
gs
out
xchg
loop
push
adc
movsl
out
cmp
imul
lods
dec
lret
push
cmp
xlat
fs
int
les
lea
mov
mov
jo
push
repnz
imul
scas
mov
push
jb
add
mov
sbb
add
ret
xchg
testl
nop
movsb
sbb
cwtl
and
mov
add
adc
add
mov
xor
add
sub
or
mov
popa
imul
in
popa
movsl
dec
xor
loop
ljmp
add
out
addb
add
ret
ss
iret
aaa
dec
push
fldenv
cwtl
dec
sbb
es
xor
mov
add
xor
aas
dec
jl
and
add
cmpsb
add
mov
xchg
cmp
std
pop
fimull
lods
push
jmp
add
data16
iret
sbb
xchg
sbb
mov
movsb
cwtl
push
cltd
xchg
pushf
inc
pusha
add
pushf
fmul
in
imul
iret
xchg
adc
dec
push
iret
sbb
fidivs
mov
sbb
and
addr16
xchg
sbb
add
xchg
iret
sub
sub
xchg
gs
add
mov
xchg
loopne
pusha
add
inc
mov
and
aad
pop
cmp
jb
loop
jmp
mov
and
mov
add
cmp
roll
add
push
mov
mov
add
rcr
scas
adc
negb
cmc
rolb
push
aaa
xchg
cmpsb
repnz
pop
lret
push
mov
mov
xor
and
fistpll
icebp
imul
stc
push
add
push
mov
or
fstl
jg
add
inc
in
test
add
out
rcll
pop
push
jbe
xchg
xchg
jo
and
cmc
pop
xchg
xor
fbld
jne
divb
es
dec
pushf
sub
aad
add
cmp
add
insb
adc
lret
shll
or
mov
out
bound
fdivrp
or
mov
out
push
gs
add
fisttpl
mov
inc
sub
insb
lds
and
inc
xchg
or
mov
jecxz
pop
in
ja
pop
jp
sub
push
push
pop
out
or
stos
imul
ss
test
or
negb
jbe
daa
mov
out
mov
fmuls
aad
add
sti
cld
cmc
add
add
sbb
dec
jne
pusha
add
mov
xor
adc
lods
clc
rcll
mov
jnp
xor
inc
add
push
mov
rcrb
rolb
add
mov
pop
lods
loopne
add
adc
popf
scas
pop
idivb
pop
mov
inc
addb
in
ja
addl
or
inc
and
out
and
jne
push
pop
sub
add
push
mov
in
xor
scas
and
push
dec
outsl
es
jmp
subl
mov
loopne
or
jge
add
jmp
fildll
xchg
cmp
mov
push
sub
div
mov
add
cld
shrl
shll
fs
ret
pop
lock
and
int
add
push
out
cmpsl
repz
bound
jb
add
loop
cltd
mov
movb
push
add
add
roll
add
sbb
sti
jbe
cmp
aaa
mov
add
inc
mov
je
dec
xor
bound
sahf
outsb
mov
lea
sub
sahf
into
addb
xchg
aas
test
and
aas
cmp
stos
stc
sub
mov
lods
not
divb
pop
fucom
cli
pop
ret
lods
les
lock
xchg
jecxz
sbb
jmp
jl
add
jle
xchg
in
dec
xchg
jge
lahf
insb
iret
fisttpll
add
add
cmpsb
fwait
push
leave
mov
push
sbb
scas
daa
mov
jmp
or
jns
popf
sub
jge
add
dec
mov
or
add
and
add
stc
mov
mov
push
cmc
sbb
add
mov
add
les
push
add
push
mov
leave
scas
in
jecxz
sbb
js
sbb
sbb
jbe
movsl
jmp
add
and
jae
add
pop
ljmp
mov
movsb
jnp
add
sub
pop
add
scas
leave
pop
push
cmp
mov
xor
mov
push
sbb
icebp
xchg
xchg
adc
cltd
lcall
push
push
movb
ret
int
xor
in
sbb
add
hlt
js
jnp
mov
add
cli
sahf
addr16
stos
stos
loop
dec
inc
aad
sub
mov
xchg
sbb
pop
aas
aad
imul
test
movsl
loop
cmp
jmp
add
das
or
push
mov
add
pop
test
add
out
loop
add
sub
and
add
lds
add
sub
popf
mov
out
and
add
cmp
test
lock
pop
mov
mov
cmp
clc
movsl
and
das
inc
add
push
mov
add
xor
gs
or
imul
ret
cmp
cmp
testl
xchg
pop
mov
add
mov
out
fldcw
xchg
pop
pop
mov
fisubs
mov
or
cwtl
xlat
adc
sldt
scas
pop
addr16
adc
mov
int
rolb
popf
dec
lret
pop
mov
mov
shll
add
sub
ss
mov
cltd
xchg
cmp
aam
push
add
add
cld
push
setl
addb
mov
mov
mov
lea
popa
sub
pusha
add
ss
in
mov
imull
aas
shufps
and
lods
gs
lcall
push
scas
int
in
outsl
pop
sbbl
xchg
mov
aaa
and
jnp
sub
xor
pop
aaa
mov
add
mov
pop
mov
jne
popf
lret
mov
pop
sub
test
add
rorl
hlt
daa
pop
lods
les
ret
cmp
repnz
bound
jecxz
cmp
jo
dec
jge
cli
in
sbb
xchg
and
push
inc
aas
xor
sti
jmp
add
vmwrite
mov
mov
addr16
pop
dec
add
out
call
jge
adc
imul
add
lods
add
jae
hlt
xchg
test
inc
cmpsl
push
pop
mov
adc
ret
ds
das
popa
scas
or
out
cld
aad
add
mov
sub
pop
enter
jb
out
test
ret
sub
cmp
mov
dec
cmp
cmp
inc
fldt
cmc
call
push
jno
add
mov
lds
xor
add
push
popa
jne
sub
inc
add
imul
shll
mov
xor
stos
add
mov
or
adc
lahf
pop
daa
mov
les
hlt
mov
pop
lock
pop
clc
inc
push
arpl
addr16
jl
add
popf
dec
insl
mov
jns
ficomps
jno
in
ds
add
ja
and
test
add
int
lock
sti
push
movb
in
xchg
add
mov
cmp
leave
mov
insb
ja
jbe
repnz
test
out
rcrl
adc
mov
cmp
dec
rclb
cmpsl
inc
and
int3
cmp
enter
mov
mov
jecxz
add
add
insl
adc
bound
mov
fcomp
icebp
and
mov
cmp
aas
sbb
jg
sub
add
popa
dec
push
pop
push
dec
in
cs
scas
jb
xor
aaa
jl
data16
loop
loope
out
or
add
lods
or
fistpl
add
mov
ds
neg
sub
aam
jae
data16
fdivrl
bound
mov
add
inc
add
add
add
mov
outsl
adc
adc
test
les
aam
sub
hlt
adc
xchg
movsb
bound
xchg
shrl
mov
fwait
mov
inc
add
xchg
lcall
push
sub
gs
ds
mov
push
test
add
adc
iret
jg
mov
out
push
out
dec
sub
adc
add
add
ret
out
iret
dec
xchg
aad
lock
mov
outsb
in
sub
ss
je
cmp
add
lret
dec
fildl
das
or
addr16
cltd
call
cli
insb
add
ljmp
add
sub
push
mov
mov
fs
jns
add
adc
test
sbb
add
sub
mov
push
xor
add
mov
lods
aaa
dec
push
mov
add
aad
lcall
in
icebp
shrl
sbb
pop
in
add
inc
add
adc
jmp
sub
mov
fisttpl
dec
popa
dec
in
sbb
lcall
jmp
mov
xor
rorl
insl
jmp
and
out
pop
ja
out
push
in
xchg
mov
adc
push
pop
rolb
cwtl
sub
ja,pt
mov
jne
xlat
scas
rolb
xchg
mov
sub
mov
jle
xlat
mov
ficomps
outsl
xchg
xor
mov
inc
add
add
dec
pushf
jo
int
jp
add
push
add
sbb
shlb
movb
sub
pop
loope
ss
popf
adc
sub
sbb
es
push
loopne
xor
add
orl
add
dec
iret
andl
pop
add
xchg
lock
add
jo
pusha
add
mov
add
out
dec
lods
aas
lret
icebp
push
jb
mov
mov
adc
dec
iret
addb
out
add
sahf
rolb
add
mov
and
xor
adc
sub
sbb
ja
add
xchg
xlat
mov
pop
cmp
bound
lds
sub
jnp
add
inc
xcrypt-ctr
cmpsl
sbb
leave
adc
xor
cmp
ret
popa
sub
pop
mov
add
ficompl
push
frstor
imul
jb
or
add
or
aad
lds
mov
insb
enter
ja
jge
mov
mov
adc
aaa
push
push
loop
fstpt
inc
lods
dec
out
mov
sub
jo
test
add
scas
inc
rcl
repnz
stc
dec
nop
js
out
jmp
mov
repz
data16
add
fdivrs
test
scas
push
idivl
or
inc
add
adc
orl
pop
mov
or
xor
div
push
add
cmp
add
and
loop
add
pop
jne
fisubs
lods
sub
scas
clc
mov
sbb
loopne
lock
rorl
push
mov
jp
add
scas
cmp
enter
addb
jg
in
mov
cs
mov
mov
add
sub
in
lahf
shrl
add
add
adc
shlb
lret
fwait
and
movsl
xchg
push
das
mov
xor
add
push
stos
mov
lods
cs
enter
in
aam
add
pop
jg
int3
adc
mov
rorl
fucompp
mov
les
jle
add
adc
mov
sbb
push
pop
loop
int
push
sti
ja
jmp
add
mov
push
and
xor
mov
push
sbb
or
sti
mov
clc
cltd
leave
pop
sub
jl
ret
rcrb
jmp
push
xor
mov
jno
loop
enter
stos
pop
mov
adc
sar
mov
add
bound
divb
jns
ret
cltd
aad
hlt
and
jbe
leave
mov
inc
adc
add
repnz
cmpl
pop
sub
or
in
enter
add
loopne
ret
es
repz
shlb
cmp
jmp
std
lret
mov
xor
mov
jle
int
lods
add
inc
mov
lea
fs
sbb
bound
dec
mov
add
imul
cld
jmp
xchg
repnz
jge
lret
cmp
insl
xlat
jnp
xchg
jno
add
hlt
dec
fisttpll
movsl
xchg
shl
add
cmpsb
push
lret
jmp
cwtl
mov
mov
data16
or
push
inc
mov
daa
out
and
xor
arpl
ret
mov
xchg
jecxz
add
mov
add
add
sub
mov
testl
ds
jle
cmp
stos
mov
inc
mov
add
push
sbb
sub
sub
sbb
rcll
sbb
add
fsubl
out
mov
pop
xchg
js
add
push
mov
scas
cmp
clc
pop
or
mov
movsl
addb
inc
add
lahf
cltd
das
rolb
add
in
push
and
inc
add
pop
mov
push
sub
mov
cmc
movb
sub
je
cmpsb
aad
sbb
stos
cld
and
pop
movb
pop
jne
add
stos
mov
repz
xlat
rolb
lsl
cmc
adc
lock
dec
mov
cmp
adc
add
outsb
inc
mov
xor
rcrb
leave
aad
fstpt
sbb
add
add
rolb
and
sbb
mov
sarb
mov
dec
lods
das
inc
add
mov
cmp
bound
test
pop
addb
cmpsl
xchg
cmp
push
stos
mov
push
cltd
jge
pop
cmp
in
in
adc
cmp
jno
and
gs
or
add
stos
jae
push
pop
sbb
xor
stos
into
or
or
hlt
cltd
pop
fsubrs
xchg
lcall
add
push
in
sahf
mov
pop
adc
movsb
jle
fldl
sbb
xchg
lahf
pusha
add
pop
xchg
xor
lcall
cwtl
in
jg
dec
ljmp
in
rolb
jb
jmp
imul
or
pop
ret
cli
fldcw
mov
add
fstpt
popa
ret
lods
stc
or
add
push
jns
push
clc
push
and
mov
mov
sbb
xor
add
popf
sub
mov
gs
sbb
lds
stos
sub
xor
mov
sahf
mov
mov
fs
mov
scas
mov
popf
sub
pop
addr16
fwait
sub
outsb
sbb
les
pop
and
loope
or
and
addb
sub
lods
fcomps
push
xor
jnp
jge
ficoms
imul
mov
aam
mov
sub
arpl
movb
mov
and
add
imul
jecxz
inc
add
addb
shrl
add
dec
into
jns
mulb
xchg
sbb
xchg
out
adc
sub
xor
fiaddl
xor
aam
push
test
into
mov
aaa
int
sub
xchg
inc
inc
sbb
addb
adc
das
ja
add
xchg
mov
cs
ret
dec
shl
lahf
mov
repz
mov
out
cmp
test
out
xor
mov
mov
add
arpl
push
dec
adc
dec
jg
int
add
in
scas
cmpsb
popf
std
add
mov
mov
add
test
add
mov
loope
nop
das
pop
pusha
add
or
insl
and
mov
sbb
rcrb
fsubs
enter
jge
dec
sbb
je
or
notl
pop
and
pop
mov
daa
adc
pop
sbb
stc
out
and
divb
xchg
cltd
push
rsm
test
loopne
inc
add
adc
mov
fstl
xchg
xor
sbb
xchg
cmp
jge
addb
popa
cmp
movsb
aam
call
push
jmp
mov
mov
fwait
inc
std
sub
add
inc
mov
shll
movb
ds
in
arpl
xor
jecxz
jo
mov
sub
fstpl
ret
sbb
mov
add
sbb
iret
adc
pusha
add
lock
and
or
xor
cmp
adc
add
mov
xchg
and
jns
mov
dec
mov
popa
xchg
scas
mov
dec
in
data16
lahf
fwait
or
gs
fwait
xor
jg
loop
add
repz
loopw
mov
push
mov
add
leave
fsubrl
sahf
outsl
push
js
xchg
lret
int
bound
test
inc
add
pop
repz
inc
adc
es
fmull
icebp
cmp
cmp
xchg
lcall
cmp
leave
dec
or
enter
pop
dec
sbb
adc
dec
xor
data16
xchg
fmull
ss
jae
add
pop
pushf
cs
add
add
ds
gs
push
pop
inc
add
mov
xchg
jne
add
inc
add
and
iret
aam
lods
ret
add
pop
cmp
sub
in
lea
inc
dec
arpl
mov
jb
mov
adc
push
pop
sbb
addl
insl
or
nop
adc
ss
or
xor
mov
sub
mov
in
cltd
mov
icebp
daa
addr16
inc
cld
sub
add
xor
mov
jns
js
fisubrl
push
leave
dec
jbe
icebp
push
cli
jecxz
sbb
mov
jns
cmp
mov
js
out
add
pusha
add
adc
pop
xchg
push
movsb
push
je
mov
jb
cmp
out
push
push
xchg
xchg
repnz
rorl
or
frstor
ss
cmp
js
add
inc
aaa
popf
or
clc
ljmp
dec
clc
mov
roll
jp
sub
jg
sub
add
add
cmp
sub
xchg
stos
out
scas
mov
data16
in
subl
daa
roll
push
or
jle
pop
sub
add
mov
add
test
lods
fs
xor
add
adc
shrd
push
jmp
inc
ljmp
mov
push
sub
mov
stos
push
xor
lcall
in
lds
xchg
sbb
aaa
pop
push
je
cltd
int3
cltd
add
or
fcompl
addb
add
push
test
add
adcl
fisubrs
jb
outsb
out
pop
mov
add
daa
lock
enter
scas
popa
das
adc
shlb
roll
je
and
inc
add
inc
add
push
or
aas
adc
add
or
ss
fistl
and
add
sub
add
jp
dec
pop
scas
mov
cmp
push
add
outsl
pop
in
mov
xchg
out
or
lret
pop
into
orl
mov
insb
rolb
push
dec
push
add
jmp
sub
clc
jg
not
jmp
xor
or
inc
add
inc
add
in
xor
fs
cmpsl
test
stos
adc
