std
loop
in
loop
in
in
in
out
in
in
in
loope
in
in
in
in
in
call
loop
ss
in
out
in
in
in
loop
in
loope
in
loope
in
call
loop
push
out
in
loope
in
in
in
out
in
in
in
out
in
out
in
call
loop
and
in
out
in
call
loop
fsub
loop
stos
jecxz
in
jecxz
in
in
in
jecxz
in
in
in
out
in
loop
in
loop
in
out
in
call
loop
je
loop
xchg
out
in
in
in
jecxz
in
call
loop
cmp
loop
ljmp
in
call
loop
outsl
in
in
call
loop
jne
loop
data16
in
in
in
out
in
loope
in
out
in
loop
in
jecxz
in
out
in
in
in
jmp
loop
stos
loope
in
in
in
call
loop
and
in
in
in
loop
in
in
in
out
in
call
loop
mov
jecxz
in
out
in
in
in
out
in
out
in
jecxz
in
call
loop
out
in
out
in
out
in
call
loop
jne
loop
jbe
loop
jns
loop
or
loop
ja
loop
add
loop
push
loop
int3
loop
in
jecxz
in
out
in
out
in
in
in
out
in
in
in
in
in
in
in
loop
in
in
in
loope
in
in
in
out
in
in
in
loope
in
loop
in
out
in
out
in
in
in
in
in
loope
in
loope
in
jecxz
in
in
in
jecxz
in
out
in
call
loop
insl
loope
in
in
in
out
in
loop
in
out
in
in
in
in
in
in
in
out
in
jecxz
in
jecxz
in
in
in
call
loop
loop
add
loop
and
loop
pop
in
in
jmp
loop
push
in
in
jecxz
in
out
in
loop
in
out
in
out
in
in
in
out
in
in
in
loop
in
call
loop
clc
out
in
loope
in
jecxz
in
in
in
loop
in
jecxz
in
jecxz
in
call
loop
mov
loop
jl
loop
test
in
in
out
in
jmp
loop
cmc
loope
in
in
in
call
loop
jns
loop
mov
loop
jb
loop
mov
out
in
in
in
out
in
loop
in
out
in
out
in
loop
in
out
in
in
in
jmp
loop
adc
loop
loope
loop
and
loop
mov
loop
adc
loop
gs
in
call
loop
dec
call
loop
out
in
loop
in
in
in
out
in
out
in
in
in
jecxz
in
in
in
jecxz
in
in
in
jmp
loop
mov
loop
cld
out
in
loope
in
out
in
out
in
loope
in
in
in
in
in
loop
in
out
in
out
in
out
in
in
in
jecxz
in
in
in
out
in
out
in
loop
in
jecxz
in
in
in
out
in
in
in
in
in
call
loop
loopne
loop
iret
loope
in
loope
in
jecxz
in
out
in
in
in
call
loop
jo
loop
cld
loope
in
out
in
loop
in
out
in
out
in
loope
in
jecxz
in
loop
in
in
in
in
in
loop
in
out
in
in
in
loop
in
out
in
out
in
out
in
in
in
jecxz
in
in
in
out
in
call
loop
in
loop
dec
call
loop
and
in
loop
in
in
in
jecxz
in
jecxz
in
call
loop
stos
jecxz
in
call
loop
mov
loop
in
out
in
out
in
in
in
out
in
loop
in
in
in
loop
in
in
in
jecxz
in
out
in
jecxz
in
in
in
call
loop
sbb
loop
loop
in
loope
in
loope
in
out
in
out
in
jecxz
in
in
in
call
loop
adc
loop
lret
jecxz
in
loope
in
out
in
out
in
loop
in
out
in
out
in
loope
in
call
loop
loop
loop
inc
in
in
out
in
in
in
jecxz
in
loope
in
loope
in
jmp
loop
xor
out
in
call
loop
cltd
loop
in
call
loop
movsl
in
in
loop
in
in
in
out
in
loope
in
in
in
jecxz
in
out
in
in
in
jecxz
in
in
in
in
in
out
in
in
in
in
in
in
in
call
loop
push
in
in
call
loop
and
loop
xchg
loop
outsb
loop
in
loop
in
out
in
out
in
out
in
in
in
in
in
jmp
loop
or
loop
pop
out
in
jecxz
in
jmp
loop
add
loop
lret
in
in
jecxz
in
loope
in
jmp
loop
lret
loope
in
call
loop
sub
loop
pop
in
in
loope
in
jecxz
in
loop
in
in
in
out
in
out
in
loop
in
out
in
jecxz
in
call
loop
mov
out
in
out
in
in
in
jecxz
in
in
in
out
in
loop
in
call
loop
fucom
loop
or
loop
stos
loop
in
loope
in
out
in
loope
in
jecxz
in
call
loop
add
loop
jge
loop
jo
loop
shl
loop
lods
loope
in
call
loop
cmc
out
in
out
in
out
in
in
in
in
in
loope
in
call
loop
or
loop
leave
call
loop
in
loop
lret
in
in
out
in
loop
in
jecxz
in
jmp
loop
sahf
out
in
out
in
loope
in
out
in
in
in
loop
in
call
loop
psubsb
in
out
in
call
loop
ljmp
in
loop
in
out
in
in
in
call
loop
or
loop
arpl
loop
mov
loop
leave
call
loop
enter
test
out
in
loop
in
jecxz
in
loop
in
in
in
call
loop
aaa
in
in
in
in
in
in
in
in
loope
in
out
in
call
loop
and
loop
jbe
loop
mov
loop
sbb
loop
das
jmp
loop
adc
loop
das
call
loop
call
loop
out
loop
in
loop
in
loop
in
jecxz
in
out
in
out
in
out
in
jecxz
in
out
in
loope
in
jmp
loop
sti
loop
in
call
loop
sbb
loop
push
jmp
loop
sti
loop
in
call
loop
mov
loop
hlt
loop
in
out
in
loope
in
call
loop
jo
loop
xchg
loope
in
in
in
out
in
loope
in
out
in
in
in
jecxz
in
jmp
loop
sub
loop
loop
jecxz
in
loope
in
call
loop
in
out
in
out
in
in
in
out
in
out
in
out
in
jecxz
in
in
in
jecxz
in
in
in
call
loop
out
loop
test
loop
pushf
out
in
jecxz
in
out
in
jecxz
in
call
loop
push
out
in
call
loop
xor
loop
shl
loop
movsb
in
in
out
in
in
in
loope
in
call
loop
adc
call
loop
stos
out
in
in
in
in
in
jmp
loop
cwtl
loope
in
call
loop
into
loope
in
jecxz
in
out
in
loop
in
loop
in
in
in
jecxz
in
in
in
in
in
in
in
out
in
in
in
jecxz
in
in
in
out
in
in
in
out
in
jecxz
in
out
in
out
in
call
loop
ret
out
in
jecxz
in
call
loop
out
in
call
loop
icebp
jecxz
in
jecxz
in
out
in
jecxz
in
out
in
out
in
loope
in
out
in
call
loop
cld
out
in
in
in
jecxz
in
out
in
in
in
in
in
out
in
out
in
in
in
call
loop
pop
call
loop
repz
in
in
in
in
in
loope
in
in
in
call
loop
sahf
out
in
in
in
jmp
loop
dec
out
in
loope
in
loop
in
loope
in
in
in
jecxz
in
jecxz
in
loop
in
loop
in
call
loop
cmp
in
in
out
in
out
in
in
in
in
in
call
loop
cs
loop
data16
in
out
in
loop
in
out
in
loop
in
out
in
jecxz
in
in
in
call
loop
scas
loop
in
jecxz
in
loop
in
out
in
out
in
call
loop
add
loop
loopne
loop
push
loope
in
jecxz
in
out
in
out
in
out
in
out
in
out
in
loope
in
out
in
in
in
out
in
in
in
jecxz
in
call
loop
add
loop
in
loop
in
out
in
out
in
out
in
in
in
loop
in
loope
in
call
loop
mov
loop
mov
loop
cli
in
in
loope
in
loop
in
loop
in
jecxz
in
loope
in
out
in
loope
in
loop
in
out
in
out
in
out
in
jecxz
in
call
loop
and
loop
sub
loop
mul
loop
jl
loop
and
loop
mov
loop
loopne
loop
jo
loop
jns
loop
fs
in
jecxz
in
in
in
out
in
loope
in
in
in
loope
in
jecxz
in
in
in
out
in
in
in
call
loop
into
loope
in
call
loop
mov
loop
scas
jecxz
in
call
loop
out
jecxz
in
call
loop
push
loop
in
out
in
call
loop
cs
loop
mov
out
in
out
in
out
in
jecxz
in
jecxz
in
jecxz
in
loop
in
jecxz
in
loop
in
call
loop
jbe
loop
inc
in
in
loop
in
loop
in
call
loop
ja
loop
inc
in
in
loop
in
in
in
out
in
in
in
out
in
in
in
jmp
loop
sahf
jecxz
in
out
in
in
in
loop
in
in
in
out
in
loop
in
out
in
in
in
out
in
out
in
out
in
jecxz
in
in
in
out
in
in
in
out
in
jecxz
in
jecxz
in
loop
in
out
in
out
in
in
in
out
in
call
loop
dec
out
in
jmp
loop
dec
call
loop
push
out
in
call
loop
sub
loop
sub
in
in
out
in
in
in
jecxz
in
out
in
call
loop
sahf
in
in
in
in
out
in
out
in
out
in
in
in
in
in
loope
in
loop
in
jecxz
in
loop
in
loop
in
out
in
in
in
in
in
out
in
jecxz
in
jmp
loop
ss
in
loop
in
jecxz
in
call
loop
pop
loop
in
in
in
jecxz
in
out
in
out
in
loope
in
jecxz
in
jmp
loop
mov
loop
jmp
loop
cltd
jecxz
in
in
in
loop
in
loop
in
out
in
loope
in
in
in
in
in
in
in
call
loop
and
loop
push
out
in
in
in
in
in
loope
in
jecxz
in
loop
in
in
in
loop
in
in
in
loope
in
out
in
in
in
loop
in
jmp
loop
xlat
in
in
call
loop
stc
out
in
jecxz
in
out
in
loop
in
loope
in
out
in
in
in
loop
in
loop
in
call
loop
and
loop
push
jmp
loop
xchg
loope
in
loop
in
call
loop
loop
in
loope
in
jecxz
in
call
loop
movsb
out
in
call
loop
loop
loope
in
out
in
in
in
in
in
loope
in
jecxz
in
call
loop
fsub
loop
mov
in
in
jecxz
in
out
in
loop
in
call
loop
inc
in
in
in
in
loop
in
call
loop
ja
loop
jmp
loop
dec
loop
in
jecxz
in
in
in
call
loop
adc
loop
inc
out
in
out
in
loope
in
out
in
out
in
in
in
loope
in
call
loop
push
out
in
in
in
loop
in
out
in
in
in
jecxz
in
out
in
in
in
out
in
loop
in
in
in
in
in
in
in
out
in
call
loop
xor
loop
or
loop
mov
loop
mov
loop
and
loop
add
loop
xchg
in
in
call
loop
jmp
loop
shl
loop
push
loop
imul
in
loope
in
call
loop
jge
loop
jcxz
in
out
in
in
in
in
in
in
in
in
in
call
loop
pop
loop
in
in
in
in
in
in
in
jecxz
in
in
in
call
loop
ds
in
jecxz
in
out
in
in
in
in
in
in
in
call
loop
xchg
jecxz
in
out
in
in
in
jecxz
in
call
loop
movsl
loop
in
out
in
loope
in
loop
in
call
loop
data16
in
in
in
jecxz
in
in
in
loop
in
jmp
loop
pop
jecxz
in
jecxz
in
loope
in
loope
in
jecxz
in
jecxz
in
out
in
out
in
call
loop
outsb
loope
in
in
in
loop
in
out
in
loop
in
call
loop
sub
loop
lock
in
loope
in
in
in
loop
in
out
in
out
in
out
in
jecxz
in
in
in
out
in
jecxz
in
jecxz
in
jecxz
in
in
in
out
in
out
in
in
in
out
in
out
in
jmp
loop
ftst
loop
lahf
out
in
in
in
in
in
loope
in
call
loop
repz
in
call
loop
jne
loop
push
out
in
jecxz
in
in
in
call
loop
mov
loop
or
loop
pop
jmp
loop
xchg
out
in
jecxz
in
jecxz
in
jecxz
in
loop
in
out
in
out
in
in
in
loop
in
loop
in
loop
in
out
in
in
in
in
in
out
in
loop
in
in
in
loope
in
loope
in
in
in
out
in
out
in
loop
in
in
in
in
in
out
in
in
in
loope
in
loop
in
in
in
in
in
loop
in
in
in
loop
in
in
in
out
in
in
in
in
in
out
in
call
loop
and
loop
in
in
jecxz
in
out
in
out
in
in
in
out
in
jecxz
in
in
in
jecxz
in
in
in
out
in
in
in
in
in
loop
in
in
in
out
in
loop
in
jecxz
in
loope
in
in
in
in
in
loop
in
out
in
call
loop
pop
in
in
in
in
in
in
call
loop
and
loop
ja
loop
addr16
in
out
in
loop
in
out
in
in
in
in
in
loop
in
out
in
loope
in
in
in
in
in
in
in
jecxz
in
in
in
call
loop
ja
loop
fsub
loop
xlat
in
in
jecxz
in
out
in
loop
in
in
in
jecxz
in
out
in
loop
in
out
in
jmp
loop
loop
lret
in
in
loop
in
in
in
in
in
in
in
in
in
out
in
call
loop
xlat
in
in
out
in
jecxz
in
in
in
jmp
loop
ret
in
out
in
in
in
jecxz
in
out
in
loope
in
out
in
in
in
in
in
jecxz
in
jecxz
in
out
in
out
in
out
in
call
loop
xor
loop
sbb
loop
sbb
loop
in
loop
fs
in
jecxz
in
loop
in
jecxz
in
in
in
in
in
jecxz
in
call
loop
jmp
out
in
in
in
call
loop
jge
loop
sti
loop
in
jecxz
in
in
in
in
in
out
in
loope
in
in
in
out
in
in
in
out
in
in
in
call
loop
mov
out
in
in
in
jecxz
in
in
in
out
in
in
in
in
in
out
in
loop
in
out
in
in
in
jmp
loop
pushf
out
in
call
loop
jnp
loop
stos
in
in
in
in
out
in
out
in
in
in
call
loop
scas
in
in
jecxz
in
in
in
loop
in
out
in
loop
in
loop
in
out
in
in
in
loope
in
call
loop
movsl
in
in
call
loop
int
loop
sbb
in
in
loope
in
call
loop
cli
jecxz
in
in
in
jecxz
in
loope
in
jecxz
in
loop
in
in
in
loope
in
in
in
in
in
out
in
out
in
loope
in
loope
in
in
in
out
in
in
in
loop
in
loop
in
out
in
call
loop
sub
loop
cltd
in
in
loop
in
jecxz
in
loope
in
call
loop
loop
ret
in
call
loop
cltd
out
in
out
in
in
in
call
loop
jle
loop
inc
out
in
in
in
loop
in
loop
in
in
in
call
loop
out
call
loop
es
loop
push
jmp
loop
scas
in
in
out
in
out
in
in
in
out
in
in
in
call
loop
dec
jmp
loop
or
loop
shl
loop
push
in
in
jecxz
in
jecxz
in
out
in
call
loop
das
out
in
jecxz
in
out
in
in
in
out
in
loop
in
in
in
out
in
out
in
call
loop
sbb
loop
fsubrp
loop
mov
loop
jecxz
in
call
loop
and
loop
push
jmp
loop
add
loop
dec
out
in
jecxz
in
loope
in
out
in
in
in
loop
in
jecxz
in
jecxz
in
loope
in
in
in
call
loop
sub
loop
sub
loop
dec
in
in
out
in
loop
in
loope
in
out
in
jecxz
in
jecxz
in
in
in
loop
in
out
in
jecxz
in
out
in
call
loop
ret
jecxz
in
in
in
out
in
in
in
in
in
loop
in
loop
in
loope
in
call
loop
jecxz
loop
dec
out
in
out
in
out
in
call
loop
mov
out
in
call
loop
mov
call
loop
mov
jecxz
in
jecxz
in
in
in
in
in
in
in
in
in
in
in
call
loop
jecxz,pn
in
in
in
loope
in
call
loop
adc
loop
pop
jecxz
in
loope
in
in
in
loope
in
in
in
out
in
loope
in
out
in
loope
in
loop
in
call
loop
mov
out
in
in
in
in
in
loop
in
call
loop
adc
loop
shl
loop
cs
in
call
loop
aaa
out
in
call
loop
loop
test
loop
lret
in
in
in
out
in
out
in
jecxz
in
in
in
out
in
call
loop
and
loop
or
loop
inc
loop
in
out
in
in
in
loope
in
out
in
loop
in
jecxz
in
jecxz
in
out
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
in
in
call
loop
mov
loop
jp
loop
add
loop
cltd
loop
in
clc
jns
add
dec
jbe
add
inc
add
jno
add
jns
inc
add
jp
clc
mov
dec
pop
sub
and
clc
dec
jb
add
add
call
je
test
mov
add
cld
jno
add
xor
add
ss
or
sbb
add
add
clc
mov
push
mov
dec
clts
clc
xchg
jle
dec
rcrb
push
and
test
cs
add
aam
add
and
add
add
enter
push
add
and
add
add
cltd
aaa
mov
push
sub
pop
stos
jne
sbb
inc
clc
aam
das
test
cmp
add
cmpsb
clc
mov
push
clc
push
add
arpl
add
clc
movsb
clc
xabort
hlt
decl
add
jnp
xchg
fsubrl
loop
pop
adc
add
pop
mov
es
out
repnz
sub
add
clc
mov
jnp
clc
out
mov
insb
sahf
push
or
clc
cli
stc
jle
pop
ds
xchg
add
add
xor
add
clc
xchg
fsub
clc
jl
clc
insb
dec
cmp
clc
shlb
add
mov
loop
fildl
add
fldcw
clc
out
or
lods
lcall
lret
xor
add
clc
mov
xabort
cwtl
or
add
mov
add
mov
clc
or
add
test
sti
out
aam
add
fstpl
and
add
clc
clc
jno
add
pusha
add
sbb
insl
pop
movsl
clc
out
jp
and
add
ret
jecxz
dec
mov
push
add
roll
clc
xabort
cli
lcall
dec
add
cltd
pushf
loope
clc
jle
sbb
dec
xor
mov
mov
clc
push
movsl
clc
ret
sbb
das
scas
lret
cmp
sub
inc
add
fdivrs
xlat
in
push
clc
jbe
outsl
mov
add
cld
jecxz
or
push
add
int3
in
push
lret
movsl
clc
dec
adc
add
lret
adc
clc
ret
clc
mov
sub
sub
xchg
jp
clc
lcall
add
test
lods
adc
add
clc
ret
clc
fcomip
cmp
add
push
add
mov
lock
cmp
sbb
add
add
inc
add
loopne
repz
clc
cmc
cli
xor
divb
add
ret
lret
dec
out
in
in
and
adc
add
jmp
out
xor
add
sub
mov
adc
sbb
fists
js
dec
sar
clc
lea
stos
sbb
sar
lcall
jno
add
pop
push
in
inc
clc
mov
arpl
add
adc
enter
clc
imul
ficoml
imul
clc
pop
and
add
xor
add
inc
add
repnz
add
clc
dec
ffree
clc
pop
pcmpeqw
sbb
cltd
sbb
mov
mov
lcall
add
add
into
addr16
jbe
jecxz
repnz
push
add
pop
xor
add
clc
mov
clc
add
add
clc
mov
and
test
cs
add
sbb
ss
movsb
clc
cmp
in
mov
push
add
fisubs
das
fstpt
pop
jge
loopne
out
scas
pop
mov
add
jle
dec
arpl
add
iret
mov
sub
xor
add
scas
and
add
add
inc
add
outsb
xchg
stc
sub
clc
xchg
idiv
int
add
clc
sbb
loopne
mov
add
push
cmp
mov
clc
bound
add
repnz
add
rcrl
or
add
jbe
sub
add
push
add
add
add
add
cmpsb
clc
test
push
adc
cmp
adc
clc
std
mov
stc
cmp
push
and
xchg
cld
jae
add
or
mov
add
mov
push
and
add
add
cwtl
add
add
add
or
clc
push
add
mov
pop
pop
and
add
aam
clc
push
add
out
inc
clc
sub
jmp
xchg
enter
or
and
iret
inc
add
ja
add
sbb
neg
inc
add
out
sub
clc
sub
clc
add
clc
jg
imulb
outsl
pop
ds
dec
xor
add
stos
imul
jb
add
pop
push
jne
imul
mov
sub
clc
and
add
das
cmp
push
cmc
dec
jg
negb
fistl
lock
or
movsl
clc
outsl
pop
adc
add
pop
dec
xabort
dec
stos
xchg
stos
pop
je
cmp
repz
mov
push
add
es
dec
lahf
pop
divl
add
add
ja
add
ret
clc
mov
add
jp
test
mov
clc
sub
mov
adc
add
clc
xchg
movsb
clc
mov
sbb
outsl
sub
cmp
clc
popf
aad
sti
adc
add
pop
ficoms
add
addr16
cmp
push
add
loope
add
add
clc
imul
clc
je,pt
push
jns
test
jge
pusha
add
adc
add
movsl
clc
sub
add
add
inc
add
sub
xbegin
clc
lea
add
add
dec
dec
pop
add
add
push
add
out
sbb
outsb
jl
imul
add
mov
cmp
add
pusha
add
or
clc
or
stos
mov
lahf
jne
pop
pop
out
sub
rorl
push
iret
jge
loopne
lcall
mov
inc
add
sub
je
mov
mov
movsb
clc
insb
push
add
sbb
jp
sbb
add
fisubrl
dec
daa
clc
lock
dec
gs
test
xor
add
stc
or
pop
cmpsb
clc
jmp
push
xchg
inc
add
aas
jb
add
add
push
sbb
clc
adc
add
add
popa
add
repnz
bound
add
mov
clc
sbb
out
mov
dec
push
mov
mov
add
pop
jns
ja
pop
clc
mov
add
clc
sbb
clc
ret
clc
sbb
es
jp
add
and
add
clc
mov
mov
add
cmp
clc
xchg
dec
lods
mov
or
das
xabort
dec
es
out
fwait
sub
imul
adc
add
add
add
adc
add
xchg
push
clc
aad
clc
jbe
clc
dec
jae
add
add
adc
add
clc
std
xor
add
jp
clc
shl
clc
sbb
xchg
es
jae
add
clc
adc
add
pop
jecxz
sbb
add
clc
xchg
mov
adc
dec
loope
movsb
clc
aad
clc
pop
clc
je
adc
jbe
test
pop
and
add
clc
mov
addr16
jmp
sbb
add
cmc
cs
sbb
imul
cmp
push
out
jo
add
clc
sahf
pop
fisubs
add
clc
ljmp
push
jle
clc
xabort
and
add
clc
jmp
imulb
dec
test
into
lahf
fdivl
ficomps
arpl
add
pop
mov
mov
test
mov
xor
add
xchg
repnz
addr16
xchg
fwait
mov
add
add
clc
inc
clc
push
cmp
lret
ss
add
xbegin
out
gs
lcall
fisttpl
add
add
clc
xlat
clc
cmp
mov
lcall
add
lea
loop
cmp
xor
add
sbb
add
add
movsb
clc
in
imul
add
or
mov
clc
cmp
clc
xchg
sbb
es
inc
clc
inc
clc
jg
add
pop
lea
inc
add
or
loope
or
jae
add
aaa
or
fcmovnb
clc
out
cmpsl
clc
xor
add
cmp
add
jne
inc
clc
xchg
pop
clc
in
stc
mov
mov
fiaddl
stos
aam
in
xchg
jecxz
inc
add
aam
pop
popl
clc
popa
add
mov
clc
aaa
inc
clc
pop
outsl
jg
push
add
lret
xchg
mov
mov
mov
mov
clc
in
dec
lods
clc
out
cmp
cmp
add
mov
clc
iret
out
cmp
add
hlt
push
xchg
dec
enter
daa
clc
ret
add
xabort
clc
and
add
or
mov
xor
clc
adc
add
clc
jne
sub
jnp
insb
jl
pop
aas
cmp
add
sbb
sub
clc
pop
fdivs
pop
clc
das
jmp
add
cmp
js
xchg
mov
add
je
imul
ss
xchg
loope
mov
clc
dec
negl
mov
in
cld
test
clc
jne
dec
fwait
mov
pop
jns
clc
jae
add
clc
lea
add
jae
add
add
add
add
lahf
mov
scas
imul
clc
jl
clc
sub
add
std
negl
mov
clc
adc
clc
ds
movsb
clc
inc
add
xchg
adc
add
stc
ret
clc
lods
cwtl
mov
addr16
inc
clc
cwtl
push
rorb
add
push
mov
add
in
jle
clc
lea
add
mov
enter
and
add
add
pop
mov
clc
imul
fwait
xchg
shrl
xchg
sti
pop
or
jbe
add
adc
shlb
lcall
clc
icebp
sbb
add
cmc
push
xchg
das
mov
call
mov
dec
xchg
lahf
sub
lods
clc
in
in
pop
dec
dec
fstps
add
and
fwait
jae
add
sti
sar
push
add
sbb
mov
add
push
clc
bnd
movsl
clc
fidivrl
mov
cmp
mov
add
add
fisubrl
mov
or
ficoms
add
xlat
mov
inc
clc
lods
inc
add
push
sbb
add
ja
clc
cli
lret
mov
jno
add
pop
lahf
mov
xor
add
jo
add
and
add
clc
pop
xor
add
cmp
ss
clc
lcall
inc
clc
pop
clc
xbegin
sbb
fnstsw
jns
out
xor
inc
clc
or
add
lahf
es
dec
aas
pop
sar
xor
push
add
pop
sar
out
xor
add
mov
sbb
add
add
std
push
xor
xchg
pop
cmp
add
test
xchg
rcl
imul
dec
push
clc
cmp
rcll
cmp
jl
test
je
cmp
clc
lods
xbegin
dec
sbb
sar
add
mov
adc
clc
popa
add
fildll
aad
cwtl
and
add
das
push
dec
stos
sub
clc
mov
loop
fs
or
jge
xchg
mul
clc
out
adc
add
add
add
clc
mov
sub
mov
ss
xchg
pop
xchg
cwtl
sbb
outsb
fdivrl
loopne
ss
clc
cs
ja
sbb
dec
mov
add
xor
add
pop
jae
add
clc
pop
leave
stc
into
data16
inc
clc
inc
add
fiadds
add
xor
add
outsb
jns
sub
clc
jb
add
fsubl
mov
add
add
mov
add
dec
repz
fwait
sbb
add
pop
fs
sub
adc
add
xchg
jge
add
xor
add
fstpl
clc
lret
mov
and
add
clc
mov
clc
outsl
lahf
sub
insl
ss
outsb
adc
add
xor
add
mov
clc
sbb
lods
xchg
add
add
or
clc
mov
cmp
push
add
mov
fistpl
jns
mov
push
sub
push
push
push
push
push
call
es
push
mov
and
xor
not
test
es
nop
nop
loop
pop
lea
xor
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
and
je
and
sub
test
nop
nop
nop
nop
nop
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
push
mov
push
lret
call
jbe
clc
rcrl
clc
shrb
sbb
daa
clc
mov
sub
push
add
jecxz
imul
jl
sti
aam
clc
aaa
movsl
clc
js
clc
jo
add
data16
jnp
add
fisubs
clc
movsb
clc
aam
xchg
pop
ja
add
movsb
clc
es
gs
jle
inc
add
mov
mov
inc
clc
fisttps
fbstp
add
add
mov
add
das
jne
popa
add
out
mov
xor
add
movsb
clc
pop
fmul
add
add
fstps
pop
popf
into
xor
add
rol
clc
pop
xchg
sbb
add
jno
add
clc
dec
int3
inc
clc
ret
xchg
inc
clc
enter
adc
add
pop
leave
inc
add
movsb
clc
imul
add
cmp
push
add
cmp
clc
mov
xchg
inc
clc
mov
clc
and
cld
ja
mov
add
xor
add
clc
int3
push
add
cmpsb
clc
lock
cmpsb
clc
adc
add
push
hlt
test
or
jns
add
sub
inc
add
loope
lret
add
add
inc
clc
jbe
mov
shlb
add
ficoml
xor
aas
pop
pop
xor
add
scas
xor
add
or
mov
stc
das
pop
jl
mull
add
push
insb
lods
cmp
xchg
pop
pop
fwait
mov
jae
add
jbe
inc
add
mov
scas
sbb
lcall
sbb
cmp
clc
sbb
mov
sahf
push
daa
clc
aas
lret
jo
add
inc
clc
jmp
add
push
add
xchg
mov
mov
cs
and
add
add
xchg
push
inc
clc
xchg
sbb
nop
pop
cmp
push
add
xor
add
add
cmp
clc
cltd
mov
clc
shlb
or
repz
pop
test
iret
imul
adc
add
inc
clc
inc
clc
ror
inc
clc
mov
adc
add
clc
xchg
xchg
mov
clc
fisubs
add
clc
insl
jmp
cmp
jno
add
inc
add
cmp
in
scas
xor
add
mov
pop
icebp
sbb
arpl
add
out
xor
add
data16
adc
add
add
add
pop
sub
test
clc
jnp
cmp
sar
in
mov
and
or
add
jg
xor
add
add
iret
fwait
sub
inc
add
es
cmp
in
or
clc
es
or
add
ficoms
sbb
clc
lcall
add
jp
clc
fmul
data16
push
clc
sub
clc
mov
cmpsb
clc
imul
clc
lock
and
int
sbb
cmp
sub
inc
clc
xchg
xchg
cli
repnz
test
stos
mov
add
add
add
addr16
or
mov
clc
dec
xor
add
clc
shrb
clc
and
pop
clc
mov
clc
dec
aaa
jecxz
dec
jnp
in
cmp
or
clc
fldln2
xchg
mov
popl
add
clc
adc
add
ja
add
pusha
add
xchg
dec
jmp
rcr
fldcw
outsl
ds
cld
mov
jmp
xbegin
add
add
mov
adc
add
clc
cwtl
cld
test
add
add
test
pop
imul
clc
xchg
mov
adc
or
add
ss
add
clc
in
call
fsubl
add
lods
bound
add
cmp
sub
aaa
iret
lahf
or
clc
ljmp
jg
clc
jmp
jg
out
bound
add
add
jno
add
add
cmpsb
clc
mov
clc
push
xchg
jle
add
cmp
lret
ret
clc
mov
add
and
add
clc
fstpt
je
loopne
mov
add
cld
mov
add
in
or
clc
lret
out
inc
clc
mov
popf
ljmp
repnz
add
inc
add
pop
xchg
push
mov
fldenv
cmp
sub
stos
lock
pop
sub
clc
sbb
add
jo
add
or
clc
cmp
add
fisubrl
mov
div
iret
repnz
sahf
inc
clc
sub
add
aas
pop
adc
add
mov
sbb
jne
clc
jge
sub
mov
adc
add
clc
xor
add
mov
rclb
add
cmp
add
mov
pushf
sub
add
ljmp
xchg
jno
add
sbb
add
pop
movsl
clc
inc
add
inc
clc
jg
ja
mov
jo
add
and
add
xor
add
add
xchg
xchg
add
add
ret
clc
cmp
cmp
clc
lock
or
clc
push
mov
sahf
lods
loope
inc
clc
mov
push
add
mov
add
packuswb
jecxz
nop
mov
bound
add
push
xor
add
fwait
loope
or
clc
jb
add
adc
add
out
xchg
xor
cmp
clc
cmp
fs
pop
mov
clc
cmp
movsb
clc
push
cmp
es
mov
inc
clc
jo
add
pop
sbb
lahf
dec
and
add
or
clc
push
ds
push
adc
clc
icebp
cmp
mov
jp
clc
jle
add
pop
sqrtps
add
mov
pop
cltd
or
clc
xchg
inc
clc
stos
inc
add
cmp
push
cmpsl
clc
xchg
ret
dec
mov
push
aad
add
pop
lret
jns
clc
mov
xchg
addr16
filds
std
leave
ret
clc
into
ss
sub
add
int
jno
add
sbb
rol
clc
dec
cltd
xlat
nop
jecxz
jns
clc
gs
pop
pop
clc
jo
add
clc
push
clc
cmpsl
clc
mov
add
std
fnstcw
fsubrl
clc
inc
clc
scas
push
clc
shrl
cmp
movsb
clc
in
cltd
cwtl
xchg
pop
ror
jge
xor
add
add
and
add
adc
add
pop
pop
out
mov
clc
sub
test
jns
das
push
in
inc
add
cld
xor
add
scas
stos
data16
mov
add
add
xchg
fisubrl
jg
clc
sar
push
cs
mov
movsl
clc
jb
add
add
jo
add
sbb
add
mov
clc
and
sub
clc
push
push
mov
cmpsb
clc
das
in
ret
clc
or
push
inc
clc
mov
jmp
adc
int3
and
add
in
pop
add
push
mov
jns
clc
jl
pop
xlat
scas
jp
fs
imul
add
or
add
xor
add
add
fisubl
add
inc
add
sar
clc
ret
pop
std
xor
add
clc
insb
lahf
mov
repz
or
inc
add
and
add
jmp
jns
dec
hlt
lcall
inc
clc
call
xchg
xor
js
gs
insb
repnz
jnp
imul
sbb
sub
ss
std
mov
and
add
sti
sbb
pop
mov
add
inc
add
adc
add
add
cmp
mov
es
xor
add
xchg
mov
insl
or
aad
add
dec
cli
cmp
clc
lods
xbegin
rcl
xchg
xor
add
clc
dec
mov
inc
add
xabort
sar
clc
push
bound
add
clc
xchg
mov
or
xchg
sahf
jne
add
iret
push
sbb
cmp
clc
clc
stos
stc
repz
ja
sub
ret
clc
pop
or
add
push
aam
sub
xor
add
jl
enter
add
hlt
and
add
adc
add
add
add
or
clc
loope
inc
clc
jbe
js
in
js
movsl
clc
enter
imul
into
cmpsl
clc
enter
lret
ret
add
fsqrt
cwtl
push
add
mov
pause
push
clc
inc
add
js
add
loop
mov
je
dec
pop
or
fidivs
clc
inc
clc
sub
push
dec
out
mov
clc
xchg
mov
mov
clc
xor
add
clc
cmp
add
push
cmp
cmc
mov
push
add
dec
ror
rcrb
mov
test
add
add
xbegin
data16
sbb
clc
cmp
xchg
sbb
aaa
add
adc
add
add
inc
clc
xchg
gs
outsl
je
add
scas
mov
inc
add
fistl
add
pop
push
mov
pop
mov
call
out
xor
add
pop
aam
test
hlt
in
stos
mov
add
test
xor
add
outsl
cmpsl
clc
gs
leave
xchg
add
mov
jo
add
dec
fisttpl
repz
add
xor
xchg
nop
in
mov
add
enter
clc
leave
xchg
adc
add
clc
leave
xor
add
and
add
pop
push
aad
add
push
sbb
add
clc
push
sbb
lahf
int
xlat
sar
add
xchg
leave
push
add
push
add
jmp
clc
xchg
sub
clc
add
add
popa
add
xor
add
sub
negb
lret
cmp
pop
xchg
jbe
add
adc
jo
add
push
push
out
mov
xor
dec
ljmp
sar
sarb
sarl
add
add
jp
add
cmp
sahf
sbb
jo
add
or
xor
add
clc
jl
stc
and
add
add
ja
ljmp
hlt
hlt
xor
add
pusha
add
fwait
mov
clc
cli
xchg
adc
add
xor
add
cwtl
mov
add
add
das
clc
ret
clc
push
rolb
aas
stc
mov
in
mov
sub
add
jae
add
pop
out
add
add
addr16
add
add
add
imul
lock
adc
add
clc
cmpsl
clc
sar
cmpsb
clc
arpl
add
cli
inc
clc
xchg
outsb
push
das
pop
mov
cmc
pop
mov
clc
nop
pop
xchg
fcompl
ret
clc
imul
pop
inc
clc
sbb
adc
add
fists
add
add
mull
add
xchg
xor
add
int
clc
or
add
mov
pop
jecxz
mov
cmp
clc
loope
adc
add
jno
add
int3
out
gs
mov
ret
clc
jmp
popf
movsl
clc
outsl
mov
add
sub
dec
mov
fs
mov
fmuls
jl
inc
clc
pop
pop
and
add
mov
dec
rcr
leave
loop
add
add
xchg
lea
inc
add
mov
mov
add
lods
clc
sbb
xor
add
dec
sti
lahf
inc
clc
bound
add
ret
clc
cmpsl
clc
sbb
clc
je
push
dec
mov
add
cld
cmp
clc
shll
out
and
hlt
testl
fsubp
clc
shrl
and
add
in
rorl
enter
fisttpll
daa
clc
push
fst
pop
cmpsl
clc
scas
mov
and
add
push
pushf
clc
add
add
push
add
cmp
pop
dec
imul
adc
add
fcmovne
pop
cmp
cmp
add
sbb
clc
decl
loop
cmp
push
cmp
adc
add
clc
or
clc
lahf
jmp
sub
clc
adc
add
clc
fisubrl
and
add
ret
dec
push
sar
fnsave
add
push
add
aad
ret
jecxz
rolb
add
add
add
clc
test
das
fwait
mov
clc
aaa
push
mov
mov
add
sub
sub
xchg
push
jno
add
clc
cmpsb
clc
or
stos
mov
and
clc
cmp
data16
cmp
clc
add
add
ret
pop
jl
mov
or
clc
and
add
add
clc
enter
add
data16
mov
movsl
clc
and
add
mov
sahf
xor
add
mov
mov
clc
jae
add
mov
cmp
clc
mov
cli
lret
lahf
insb
push
add
add
and
ljmp
mov
jnp
add
out
aam
imul
adc
add
clc
bound
add
jns
xchg
popa
add
daa
clc
cltd
xchg
lock
out
mov
or
int
push
xchg
mov
int3
jb
add
ret
sti
mov
clc
in
clc
push
clc
and
add
clc
es
xor
add
lea
xchg
dec
fsts
shrl
add
jmp
add
adc
add
pop
cld
push
jmp
fsub
clc
dec
movsb
clc
jle
outsl
test
test
mov
pop
jo
add
dec
sbb
mov
pop
jmp
lods
dec
repnz
cmc
icebp
daa
clc
js
push
clc
sub
sbb
popa
add
xor
add
add
jno
add
push
add
push
add
arpl
add
std
xor
add
mov
fwait
lock
adc
add
clc
sti
cmp
pushf
add
fmuls
cmp
fdivrs
lock
add
dec
pop
ja
fwait
shll
add
xchg
add
add
add
popf
cmove
mov
push
or
or
xchg
daa
clc
clc
test
cmp
xbegin
clc
add
add
xor
add
mov
clc
xchg
jns
negb
mov
jb
add
adc
add
add
rol
clc
sahf
add
add
and
add
pop
push
adc
add
cli
push
aam
call
jle
push
fisttpll
add
jb
add
mov
clc
iret
inc
add
pop
add
add
clc
lods
arpl
add
hlt
and
cltd
dec
fdivrp
inc
add
repz
add
add
clc
adc
add
cltd
push
loopne
dec
push
dec
addr16
enter
imul
add
loop
xor
add
add
clc
xor
add
dec
fimuls
add
movsl
clc
or
jmp
or
push
lock
movsb
clc
pushf
out
fnstenv
add
clc
inc
clc
sbb
in
xchg
cmp
clc
shl
clc
cmpsb
clc
mov
add
pop
fdivrl
clc
lahf
sbb
lahf
cmp
cmpsb
clc
xbegin
aam
clc
loop
scas
mov
clc
sub
jmp
sub
icebp
test
cwtl
outsb
sub
iret
mov
sbb
mov
clc
insb
push
clc
lret
or
pop
das
mov
clc
jb
add
add
dec
in
lahf
arpl
add
add
add
mov
add
add
add
clc
push
outsb
sarb
add
popf
sbb
clc
jge
clc
aam
add
sar
dec
xbegin
stos
adc
add
adc
add
leave
mov
mov
adc
add
clc
mov
add
add
add
clc
xor
mov
testb
ret
clc
jo
add
and
add
mov
icebp
in
sub
add
mov
push
add
mov
fnstsw
clc
or
clc
jle
clc
int
add
cmp
cli
push
jno
add
add
jle
repz
add
add
cmp
clc
xchg
fwait
xchg
cmc
dec
loopne
push
adc
add
imul
xor
add
clc
icebp
push
clc
pop
incl
add
and
clc
insl
mov
pop
mov
in
sarb
add
jae
add
add
add
sbb
addr16
push
add
std
fwait
clc
call
iret
xchg
cld
data16
mov
aad
mov
add
push
fistps
sahf
dec
xchg
cmp
clc
mov
add
cld
xor
add
clc
adc
add
jne,pt
jbe
clc
ljmp
aas
jge
push
sti
and
add
xor
push
adc
add
jmp
clc
fists
add
cld
lret
add
mov
clc
pop
clc
imul
je
clc
xor
lods
cltd
pushf
mov
add
insb
cmp
adc
loopne
aas
mov
adc
add
stos
sub
jecxz
mov
clc
movsl
clc
fstps
popa
add
mov
add
and
dec
and
add
popf
push
mov
and
add
in
push
xor
add
add
push
add
adc
add
in
push
clc
jmp
scas
sar
fisttpl
sti
pop
movsb
clc
daa
clc
pop
xchg
push
out
int
lret
jg
clc
mov
gs
sahf
addr16
in
pop
sub
pop
push
insb
fnstenv
mov
add
neg
cmp
add
inc
clc
notl
test
imul
sahf
lcall
sahf
ficoml
clc
mov
imul
dec
mov
add
bound
add
clc
or
pusha
add
clc
scas
sbb
imul
push
clc
jmp
add
pusha
add
mov
clc
sub
push
mov
pop
mov
ljmp
or
add
in
xor
xchg
daa
clc
shrl
ja
mov
clc
inc
clc
add
add
clc
mov
clc
and
inc
add
enter
lea
aad
add
jmp
jno
add
adc
add
fstpt
mov
pop
not
ret
clc
aas
inc
add
xbegin
test
and
repnz
jmp
xlat
daa
clc
cmpsb
clc
ret
clc
push
mov
or
clc
pop
lea
sahf
dec
into
or
popa
add
ss
int3
push
add
mov
sub
cmp
clc
cmp
lcall
add
data16
mov
pop
dec
inc
add
mov
add
movsl
clc
fwait
pop
inc
add
jnp
clc
dec
sar
fisubrs
lcall
rolb
clc
test
hlt
xor
add
clc
nop
xchg
jg
and
sub
dec
adc
add
pop
mov
dec
sub
pop
pop
lcall
das
arpl
add
add
clc
sbb
clc
cmp
dec
mov
cmp
jg
dec
loope
mov
add
int3
jo
add
repnz
out
jns
das
call
or
mov
push
clc
repz
pop
xlat
fsubrl
clc
popf
insb
mov
lods
iret
cmp
daa
clc
lcall
push
incb
addr16
out
jo
add
jb
add
add
in
or
clc
xabort
cmpsb
clc
or
jno
add
je
ret
clc
mov
push
cmp
jp
pop
clc
dec
push
add
pop
add
pop
xchg
jl
clc
xor
add
lock
xlat
mov
add
dec
adc
dec
loop
mov
clc
clc
sub
push
inc
add
push
or
add
push
cmp
inc
add
in
dec
test
inc
add
fwait
and
fbld
cli
lock
add
add
jne
jp
cli
jb
add
add
adc
add
in
sub
adc
add
mov
jmp
add
adc
add
add
pusha
add
js
pop
je
xchg
xchg
xchg
xor
add
inc
clc
clc
sbb
jl
hlt
lahf
popl
lock
cmp
movsl
clc
outsl
sub
add
mov
cmp
add
clc
int
inc
add
jne
clc
jle
jb
add
jmp
lods
jo
add
clc
add
add
xabort
and
add
lea
out
mov
arpl
add
jb
add
add
or
and
add
add
clc
repnz
bound
add
mov
cmp
test
in
test
clc
xchg
jmp
clc
mov
fidivrs
clc
add
add
clc
loope
cmp
out
xchg
or
add
sub
mov
mov
clc
mov
push
and
add
stos
cmpsb
clc
icebp
insl
iret
pop
sbb
xchg
push
iret
xor
add
imul
add
pop
fidivl
add
mov
pop
dec
or
cmp
mov
add
aad
pushf
cs
clc
mov
mov
and
sbb
icebp
pushf
xor
add
add
or
sahf
shll
add
faddp
clc
lods
xor
add
xchg
out
clc
rolb
sar
xor
push
push
sub
int3
mov
arpl
add
loope
xchg
aad
cli
mov
std
inc
clc
pop
xor
ljmp
add
push
add
cmpsl
clc
outsl
push
add
mov
add
or
or
clc
test
ljmp
add
loope
push
add
sbb
add
add
push
add
push
lock
add
ret
clc
testb
add
add
imul
clc
popl
add
jns
mov
ret
imul
xchg
push
clc
sbb
dec
cmp
or
fwait
xchg
into
sub
clc
iret
mov
add
add
filds
clc
push
clc
push
cmpsl
clc
fwait
stc
mov
stc
or
cmp
add
pop
ja
adc
add
fists
out
push
xchg
fidivs
jg,pn
clc
rolb
add
xchg
sar
pop
in
jbe
arpl
add
xor
add
mov
or
add
outsl
aad
add
jo
add
add
clc
test
out
and
push
add
outsb
js
sub
sti
sbb
cmp
lea
dec
sar
fwait
push
insb
inc
add
jecxz
pop
dec
gs
mov
in
mov
add
clc
cltd
pop
repnz
xchg
jl
inc
clc
inc
clc
cmpps
add
sub
cmpsb
clc
scas
xchg
je
mov
mov
jns
mov
cmpsl
clc
aaa
mov
add
add
add
add
dec
and
ret
clc
mov
pop
imul
add
add
pop
aaa
mov
insb
adc
add
add
clc
cmp
pusha
add
sub
add
iret
fmull
sub
add
repnz
xchg
mov
clc
repz
scas
xchg
jle
ficomps
xchg
enter
add
movsb
clc
cmpsb
clc
ret
clc
repnz
push
loopne
mov
push
es
fadds
add
clc
stos
rcr
xor
add
incb
add
add
jp
ja
add
lods
jmp
movsl
clc
ja
clc
ffree
clc
adc
cmp
pop
hlt
jns
ja
inc
clc
leave
jbe
clc
add
add
clc
out
stos
cld
jno
add
dec
push
add
lods
mov
cmc
divl
clc
and
jmp
inc
add
push
clc
and
xlat
popf
sbb
clc
inc
add
repnz
dec
jle
add
aam
es
pop
and
xchg
inc
clc
js
clc
push
clc
sub
jne
sbb
push
mov
pusha
add
fwait
ret
clc
ds
clc
pushf
dec
sub
aad
add
movsb
clc
and
add
inc
add
std
pop
clc
fadds
add
cmp
cs
add
xor
add
or
add
push
push
aam
or
add
add
dec
push
dec
fcoml
xor
sahf
push
add
pop
cmp
and
sub
add
scas
jne
dec
rcl
mov
pusha
add
cmp
icebp
dec
bound
add
mov
cmp
mov
clc
adc
add
imul
nop
add
add
popa
add
sbb
add
fwait
mov
mov
clc
lret
sar
adc
fs
xchg
lcall
adc
add
daa
clc
jg
clc
cmp
clc
das
lock
sub
je
clc
adc
add
ja
out
cmp
clc
clc
inc
clc
ret
clc
mov
clc
cmc
xchg
sub
addr16
xor
fmuls
jp
mov
add
xor
add
enter
clc
loopne
fisubrl
pop
rcl
nop
aas
ds
cmp
add
cmp
fxch
fidivrl
lret
scas
int3
jne
dec
jae
add
clc
bound
add
add
data16
inc
add
leave
sub
mov
stc
mov
mov
mov
cmp
clc
movsb
clc
mov
clc
iret
or
mov
shll
insb
pusha
add
je
call
add
clc
add
out
mov
add
sbb
scas
mov
add
je
clc
gs
xbegin
add
add
xor
add
inc
clc
jecxz
mov
in
jno
add
clc
push
lods
pop
in
sub
test
add
out
cmp
clc
insb
sbb
xabort
add
add
hlt
jnp
add
add
clc
outsb
popa
add
or
in
scas
mov
clc
scas
imul
add
mov
clc
daa
clc
je
fmulp
xor
add
mov
lret
mov
fcmovne
sub
into
add
add
call
mov
mov
add
lret
add
and
adc
add
pop
push
mov
push
fisubrl
icebp
and
add
jmp
add
add
jg
add
and
add
add
scas
outsb
leave
jne
push
inc
clc
stos
jge
or
inc
clc
add
fyl2x
inc
add
dec
add
add
pop
leave
push
stos
stos
inc
clc
add
add
scas
xor
add
test
xor
add
popf
inc
add
xor
add
outsb
jecxz
inc
clc
das
test
movsl
clc
out
pushf
dec
inc
add
in
push
lahf
not
jp
clc
ret
clc
test
loop
fwait
lahf
sar
es
popa
add
lret
rcr
push
add
mov
inc
add
fmul
cmp
adc
add
bound
add
add
mov
and
daa
clc
add
add
mov
cli
addr16
mov
cmp
xchg
xchg
stos
ljmp
add
lcall
mov
inc
add
pop
stc
fidivrl
clc
mov
dec
std
cmp
cmp
add
mov
mov
and
add
add
stos
int
ficoms
repnz
xchg
dec
adc
imul
clc
push
clc
inc
add
mov
std
and
add
clc
fnsave
xor
add
add
xchg
jb
add
add
push
add
dec
out
jg
mov
clc
scas
ljmp
aaa
jns
cmc
inc
add
sar
or
inc
clc
mov
movsl
clc
std
fs
push
add
ror
dec
repz
xbegin
sbb
xchg
addr16
dec
xchg
xchg
je
js
clc
enter
mov
add
lcall
scas
imul
add
sbb
sti
push
sti
ja
add
dec
in
hlt
iret
ficomps
jne
imul
adc
clc
add
add
fists
add
pop
cmp
clc
push
add
sar
mov
add
add
add
test
in
cmp
sub
clc
aas
stc
or
test
clc
mov
in
mov
push
add
clc
cli
cmc
push
lea
clc
pushf
adc
add
clc
ret
clc
xbegin
add
lahf
pop
movsl
clc
test
pop
into
std
ret
gs
sar
je
cmp
data16
dec
fiadds
add
jl
mov
add
cmp
ljmp
lods
fwait
aam
aam
mov
loopne
pop
and
add
cmp
lods
push
add
ds
mov
movsl
clc
pop
xor
add
movsb
clc
cmp
stc
lock
dec
pop
or
lcall
add
loop
mov
dec
test
jb
add
add
adc
add
xbegin
xchg
push
loopne
jne
fldcw
lret
stc
jb
add
add
sbb
add
cs
jnp
jmp
fdivs
add
add
cs
clc
sahf
xchg
inc
clc
adc
add
outsl
int
xor
add
inc
add
pop
clc
xlat
xchg
ja
fs
push
cmp
xor
add
int
clc
mov
mov
cmp
dec
js
lahf
sbb
sahf
xlat
sbb
enter
pop
push
clc
mov
add
sbb
pop
outsb
bound
add
mov
cmp
sub
das
xchg
mov
fwait
test
fmull
xchg
movsl
clc
in
mull
dec
mov
repz
add
add
or
sar
clc
repnz
push
iret
xbegin
std
loope
stos
jge
clc
jae
add
add
mov
or
test
aam
xchg
mov
add
xchg
xchg
xchg
pop
test
vmovaps
cld
cmp
pop
lods
vmovups
add
cs
shll
fsub
clc
fdivs
add
add
inc
clc
mov
sti
pop
push
add
mov
add
shll
lret
test
leave
sbb
clc
mov
into
jecxz
lret
push
add
mov
add
sbb
sarl
inc
add
mov
ljmp
push
stc
lea
lock
ret
clc
shl
clc
pop
repnz
gs
inc
clc
lea
inc
clc
push
add
clc
jnp
loope
mov
clc
xchg
xchg
in
enter
push
rorb
push
clc
sarb
test
clc
mov
add
mov
xor
add
clc
jle
dec
repz
push
int3
dec
or
jne,pt
ficomps
add
clc
das
xbegin
push
gs
flds
nop
adc
inc
add
xchg
pushl
jns
sar
sbb
clc
je
pop
xlat
std
mov
clc
push
add
adc
dec
inc
add
jle
dec
iret
dec
xor
add
push
int3
jmp
clc
xchg
in
cmp
xbegin
mov
xchg
cmpsb
clc
repnz
clc
xchg
repz
push
clc
pop
clc
xor
add
repz
clc
fistpl
enter
clc
lret
lods
cwtl
jmp
or
add
aad
dec
pushf
mov
jne
test
ficomps
mov
xchg
mov
add
push
add
add
add
lock
cli
js
mov
clc
mov
add
jmp
add
clc
sar
add
push
add
push
test
dec
and
add
or
aam
addr16
lea
clc
aaa
gs
fpatan
data16
xchg
jmp
xchg
mov
mov
clc
inc
clc
scas
sub
fisubl
pop
sar
repnz
aad
xchg
push
je
cmp
clc
int
pop
cmp
testb
mov
mov
mov
clc
lret
add
dec
jb
add
sahf
pop
in
mov
popf
xor
mov
add
add
add
stos
scas
mov
xchg
sub
std
out
pop
sar
cmp
jg
add
sub
mov
push
ja
jbe
mov
cld
inc
clc
pop
pop
and
add
fiadds
push
fldt
cmpsl
clc
sub
dec
pop
cld
lods
pop
jl
add
rorl
clc
push
add
into
call
arpl
add
push
add
and
add
add
sbb
leave
sbb
add
xchg
jecxz
mov
xchg
lret
mov
mov
xor
add
clc
add
add
call
add
fdivrl
add
cld
xor
add
add
mov
add
aas
mov
inc
add
es
outsl
pop
mov
clc
lcall
clc
out
js
inc
clc
mov
xor
add
add
mov
push
mov
clc
arpl
add
add
add
xchg
ds
push
iret
pusha
add
shlb
add
add
jbe
clc
pop
cmp
jecxz
testb
popa
add
out
imul
add
gs
dec
mov
jg
pop
rol
clc
jne
hlt
ljmp
data16
repnz
push
push
add
mov
stc
loopne
or
cmc
loope
stos
sub
fcoms
clc
or
outsl
xor
add
add
cmp
push
call
mov
lock
clc
je
xchg
sbb
add
add
add
cmp
mov
js
jmp
clc
push
clc
jns
hlt
repz
jbe
clc
jns
icebp
xchg
push
xchg
inc
clc
or
add
jb
add
xchg
jg
fdivl
add
test
addr16
outsl
jle
fsubp
clc
enter
fcomp
ret
clc
xbegin
pop
mov
cmp
clc
mov
add
outsl
sub
inc
clc
in
xor
add
aad
into
sub
push
add
push
ds
clc
aam
fstpt
lea
and
add
decl
clc
mov
jg
adc
add
clc
das
js
pop
adc
add
xor
add
clc
sbb
clc
push
mov
add
jge
test
add
or
test
jp
in
cmp
adc
clc
pop
dec
mov
add
push
add
add
add
add
ds
lret
clc
push
stc
stos
cmp
add
test
adc
clc
insl
testb
sub
inc
add
lcall
xchg
adc
mov
cmp
pop
roll
add
add
add
clc
add
add
jge
pop
fst
push
imul
xor
add
add
inc
clc
inc
clc
dec
sbb
mov
add
add
add
add
fsub
clc
fisttpl
in
sbb
add
add
clc
fildl
add
dec
pushf
cltd
xor
add
clc
mov
pop
sar
dec
cmp
fwait
sub
add
add
add
xchg
push
stos
jmp
pushf
jno
add
clc
jae
add
add
loopne
lcall
push
xor
add
clc
leave
bound
add
add
add
fdivs
fists
or
ret
clc
add
sti
mov
sbb
cmpsl
clc
lods
mov
add
add
add
add
ja
loopne
cmc
or
push
add
cmp
js
std
xor
add
in
push
in
iret
outsl
sar
imul
and
clc
sar
clc
mov
rcll
add
popa
add
or
arpl
add
ret
clc
or
clc
push
jnp
aaa
and
add
xbegin
decl
repz
cmpsl
clc
in
jge
inc
add
xchg
sbb
fwait
xor
add
lahf
sbb
clc
push
jb
add
add
rcll
add
sar
or
clc
push
add
scas
fwait
jo
add
dec
scas
mov
out
jae
add
add
add
mov
clc
gs
outsl
in
imul
test
inc
add
xor
clc
cmp
mov
loop
mov
imulb
cmova
loope
push
mov
into
inc
clc
jecxz
inc
clc
outsb
jle
mov
jbe
or
aas
push
clc
mov
adc
add
add
xlat
xor
add
inc
add
data16
mov
add
test
clc
cmpsb
clc
jecxz
cmp
add
inc
add
pop
cld
push
clc
in
mov
clc
push
inc
clc
sub
clc
mov
aam
add
and
add
add
add
add
jb
add
movsb
clc
sar
cmp
pop
imul
addr16
vsqrtps
add
add
sar
clc
not
into
bnd
add
sbb
fisttpl
push
pushf
lahf
sbb
add
pushl
cs
inc
clc
xchg
int3
cmp
lret
add
jo
add
clc
fs
jge
icebp
xor
inc
clc
cmp
add
repnz
mov
loop
lret
add
add
clc
and
add
add
pop
dec
adc
pushf
insl
in
pop
cmp
add
test
ret
clc
pop
xchg
hlt
xchg
mov
sbb
mov
mov
clc
jecxz
and
sub
clc
or
rorl
cmp
out
je
add
pop
sbb
add
js
add
xor
add
push
add
push
add
xor
add
push
add
add
clc
dec
sub
clc
test
arpl
add
dec
jge
repnz
in
pop
cmp
pop
mov
clc
push
sbb
scas
pop
ror
add
sbb
addr16
pop
and
add
add
clc
ret
cmc
ret
clc
xchg
cli
mov
clc
ret
clc
cmpsl
clc
cmpsb
clc
xabort
add
out
decb
add
mov
clc
jbe
sub
sar
mov
jns
dec
mov
ss
add
lret
jns
aaa
sbb
add
sbb
clc
std
mov
push
xchg
mov
push
dec
mov
add
push
add
dec
inc
clc
add
add
adc
add
add
pop
inc
add
jmp
daa
clc
jne
clc
outsl
loope
inc
clc
dec
mov
add
iret
sahf
cmp
add
add
add
lods
mov
xchg
sbb
sbb
and
add
movsl
clc
gs
sahf
mov
add
add
mov
push
lods
testb
xchg
sti
data16
test
add
clc
loopne
mov
clc
lret
clc
jg
add
add
clc
aas
mov
clc
stc
pusha
add
arpl
add
insb
mov
xchg
jno
add
clc
lods
aaa
add
add
add
dec
fwait
adc
add
clc
cmp
add
call
je
clc
mov
xchg
mov
jmp
divb
into
jmp
push
add
mov
clc
data16
js
mov
clc
xchg
ret
clc
ss
stos
push
add
jns
clc
mov
clc
iret
and
add
add
ss
clc
scas
fistl
dec
scas
int
iret
or
xor
add
pop
scas
or
mov
clc
loop
xchg
hlt
mov
clc
stos
rorl
pop
data16
jmp
data16
hlt
jno
add
jno
add
clc
movsb
clc
push
xor
add
bound
add
add
add
add
cld
pop
and
clc
test
cmp
mov
scas
insl
in
or
clc
int3
loopne
in
data16
rclb
add
add
mov
aaa
pop
push
clc
jno
add
in
mov
mov
cli
xchg
push
dec
pop
push
xor
cmp
push
arpl
add
sbb
mov
xor
add
clc
arpl
add
add
mov
clc
pop
repnz
cs
clc
arpl
add
and
add
or
clc
pop
cwtl
dec
outsl
dec
dec
cmp
clc
stc
xchg
ret
clc
clc
pop
scas
cli
xor
clc
inc
add
and
add
or
add
jp
add
push
and
add
clc
mov
arpl
add
add
clc
loopne,pn
cs
jne
add
add
clc
loope
mov
daa
clc
pop
xabort
clc
mulb
lcall
clc
shl
clc
mov
add
add
push
add
mov
add
xor
add
add
pop
xchg
xchg
mov
and
add
clc
mov
clc
sar
sbb
clc
loopne
clc
jne
add
data16
sbb
clc
xor
jg
xchg
out
push
cmp
xchg
xchg
arpl
add
xor
add
add
add
push
add
xbegin
mov
lret
sar
mov
add
jae
add
xchg
clc
and
jl
clc
outsb
ljmp
ljmp
clc
mov
in
icebp
cmp
add
push
inc
add
lods
pop
mov
add
sbb
xor
lcall
imul
add
in
test
gs
popa
add
insb
push
add
scas
call
dec
fbld
add
loope
jo
add
aas
fistps
sar
jge
push
jns
int3
sbb
sbb
hlt
jg
lret
pop
jmp
add
je
fdivp
icebp
aad
clc
iret
cmp
clc
and
add
jns
adc
dec
add
add
pop
int3
mov
clc
mov
cmc
mov
clc
or
add
or
hlt
ljmp
add
cwtl
mov
add
clc
rclb
add
jecxz
or
xor
pop
cmpsl
clc
insl
scas
data16
add
add
add
cmc
data16
insb
pop
sub
clc
or
add
add
clc
fs
adc
add
ret
test
clc
mov
fwait
sub
fxch
sar
clc
pop
ss
clc
out
hlt
pop
push
clc
data16
fs
stos
jmp
icebp
gs
mov
inc
clc
mov
popf
cmp
and
xabort
insb
out
sub
inc
clc
icebp
fwait
scas
jl
data16
cmc
dec
ss
testb
add
and
popf
mov
push
add
pusha
add
mov
mov
adc
add
pop
xbegin
add
jnp
pop
mov
bnd
cmp
gs
js
nop
sub
or
add
ret
clc
jl
clc
sbb
adc
add
xchg
sbb
add
add
imul
and
pop
mov
mov
adc
add
pop
dec
icebp
adc
add
inc
add
adc
add
xchg
xor
ss
sub
push
data16
xor
add
je
sbb
icebp
bound
add
daa
clc
or
movsb
clc
sub
mov
shll
daa
clc
push
clc
rorl
cmp
clc
sti
mov
clc
ds
add
icebp
inc
clc
cwtl
popa
add
cmpsl
clc
shr
popf
jl
clc
cmp
and
cli
pop
test
test
mov
leave
push
xchg
ret
clc
lea
add
clc
cmp
jmp
add
push
stc
add
add
pushf
push
add
dec
lea
clc
mov
test
ret
clc
clc
cmp
add
clc
stos
mov
push
add
std
jmp
or
addr16
pop
leave
mov
fistpl
clc
push
addr16
mov
clc
pop
sti
add
add
clc
fdivr
mov
add
xor
add
lods
loope
ret
sbb
clc
daa
clc
clc
lret
xlat
add
add
clc
out
enter
cmc
pop
lcall
movsb
clc
mov
ret
clc
idiv
mov
dec
jbe
cmc
xchg
jo
add
add
add
clc
fisubs
inc
add
scas
ja
enter
add
sub
add
js
clc
pop
mov
add
add
add
xchg
fcoms
pop
movsl
clc
xchg
sub
clc
add
dec
ja
dec
ljmp
clc
scas
mov
js
std
fwait
xor
add
mov
clc
std
out
out
mov
add
clc
inc
add
lods
cmc
cmp
add
jb,pt
add
add
xchg
or
adc
add
cmpsl
clc
test
and
add
out
mov
cmp
scas
mov
xchg
push
or
inc
clc
or
out
popf
and
add
mov
test
mov
ss
add
or
sar
add
add
add
outsl
in
cmp
idivb
int3
in
xor
das
ja
faddl
shlb
adc
pusha
add
mov
or
jge
add
pop
cli
movsl
clc
push
arpl
add
add
sbb
clc
cs
push
mov
bound
add
hlt
lcall
xchg
fs
fwait
xor
clc
fistpl
and
add
stos
into
jp
add
sbb
daa
clc
rclb
rclb
add
add
inc
clc
xor
add
sbb
xchg
sbb
clc
xchg
xbegin
add
add
pop
call
cmp
and
add
add
add
xor
add
push
xchg
std
daa
clc
mov
clc
dec
mull
add
mov
out
pusha
add
mov
clc
aaa
or
cmp
stos
out
jg
mov
add
stos
dec
or
int
cmpsb
clc
add
clc
mov
add
mov
arpl
add
add
jle
clc
cmp
and
aad
pop
mov
rcr
pop
cmp
xchg
mov
into
push
sub
inc
clc
loop
test
add
add
add
add
clc
js
idivb
mov
int3
movsb
clc
sub
inc
clc
mov
push
push
add
add
add
add
clc
sub
adc
add
jae
add
push
adc
add
inc
clc
cmp
add
add
add
clc
push
ljmp
pop
and
add
dec
pop
fidivs
add
mov
add
and
add
clc
xor
jg
xchg
add
fs
rorl
sar
push
pushf
mov
test
bound
add
dec
push
divb
pop
mov
inc
add
mov
mov
in
jmp
add
add
or
in
mov
sbb
popa
add
push
ss
sar
clc
je
jmp
cld
call
clc
gs
mov
jae
add
add
sarb
movsb
clc
mov
clc
dec
dec
sub
add
add
sub
clc
jp
mov
add
clc
sti
jle
push
call
push
jge
clc
add
int
cmp
add
sti
push
and
add
stc
cmp
or
sbb
mov
cmp
sub
outsl
test
mov
jo
add
add
add
clc
mov
sub
test
mov
clc
pop
mov
add
cmp
clc
call
push
add
js
clc
ds
in
repnz
mov
add
ffree
clc
ljmp
clc
pusha
add
pusha
add
push
clc
test
cmp
mov
jbe
clc
dec
sub
adc
add
xchg
adc
add
mov
clc
inc
clc
lock
clc
je
cmpsl
clc
fptan
cmp
xor
jmp
pop
xor
sbb
loope
sti
push
add
add
add
add
jge
add
loopne
mov
adc
rorb
mov
int
sti
cmp
jo
add
add
sub
add
test
clc
sbb
clc
lea
or
inc
add
neg
idivb
and
cmp
xchg
fstps
mov
and
add
add
clc
pop
fimuls
mov
add
out
sar
sbb
hlt
push
sbb
add
mov
sti
jae
add
outsl
push
or
dec
pop
int3
insl
mov
add
add
mov
clc
test
sbb
add
add
add
adc
sarb
or
add
or
lods
mov
add
add
dec
add
add
test
mov
xchg
pusha
add
mov
add
push
lahf
pop
rclb
clc
inc
add
sarb
xchg
clc
mov
jmp
add
fs
lock
in
adc
add
sub
clc
lods
scas
stc
repz
sbb
push
and
clc
popa
add
arpl
add
pmulhuw
fwait
idivb
cs
int3
and
add
lret
and
add
add
lods
jle
or
mov
cmp
add
loopne
je
clc
mov
shl
clc
mov
clc
scas
adc
add
jg
xchg
cwtl
mov
pop
clc
mov
push
add
xchg
xchg
add
add
pop
fnsave
push
adc
add
xor
add
pop
push
inc
clc
std
lods
shlb
add
adc
add
adc
add
add
ds
clc
inc
clc
mov
add
clc
aaa
cwtl
jb
add
enter
in
inc
add
popa
add
mov
call
add
push
rorl
cmp
cli
sti
cld
pop
pop
das
mov
aas
loopne
sub
add
add
js
ljmp
and
add
xchg
inc
clc
sbb
clc
and
add
mov
xchg
out
cmp
dec
aam
clc
mov
test
dec
cs
jns
scas
mov
add
dec
cmpsl
clc
cmp
rcrb
add
sub
clc
ror
dec
fldenv
pop
stos
jmp
mov
mov
add
jl
jb
add
dec
fldenv
add
dec
cmp
and
add
clc
ret
rol
clc
or
push
xabort
pop
inc
clc
xchg
sub
in
xchg
cwtl
lret
add
add
clc
mov
clc
xbegin
inc
clc
jo
add
lahf
cmp
dec
dec
data16
stos
aaa
pushf
xor
add
aad
clc
repz
add
and
add
add
add
cwtl
push
clc
push
in
add
test
push
mov
xchg
mov
clc
rolb
add
mov
clc
lods
fcmovbe
jp
aam
clc
int
mov
fiadds
add
add
add
clc
add
push
sar
add
lret
out
mov
clc
pop
in
cmp
add
dec
test
arpl
add
adc
add
adc
add
add
add
jne
pop
inc
add
pushf
lahf
cmp
add
add
clc
adc
add
test
ret
clc
jns
and
add
clc
pop
dec
add
add
dec
jg
dec
imul
adc
add
add
aaa
or
dec
insb
inc
clc
in
lahf
data16
jmp
add
mov
lcall
shl
test
inc
clc
outsl
in
xor
add
cld
add
cmpsb
clc
hlt
xor
add
test
xlat
iret
jo
add
fcmovnbe
je
repnz
dec
dec
push
add
lahf
addr16
cmp
movsb
clc
jb
add
clc
vcmpps
mov
clc
pop
lcall
clc
loop
adc
add
add
dec
push
clc
xor
add
lahf
fisubs
inc
add
aam
inc
add
and
add
movsb
clc
outsl
cmp
int
add
sbb
fnstcw
repnz
add
outsl
pop
insl
popa
add
imul
add
jb
add
clc
pop
sub
add
add
inc
clc
mov
add
cli
kmovw
clc
xabort
add
mov
clc
sbb
and
add
pop
clc
fidivs
add
mov
je
stc
xchg
negl
pop
clc
push
add
mov
mov
ja
clc
inc
add
dec
pop
inc
clc
mov
pop
scas
lods
cwtl
add
add
xchg
cmp
add
mov
sub
lods
xchg
or
mov
sub
inc
add
nop
adc
add
push
dec
enter
jae
add
clc
inc
clc
sub
kmovw
clc
push
ficoms
clc
stos
test
lods
sub
outsb
or
cwtl
ret
clc
jns
clc
lahf
daa
clc
mov
xor
add
call
rcr
into
jo
add
push
clc
fldt
clc
mov
add
fdivrl
lahf
nop
dec
mov
lods
cmp
add
push
xor
add
in
ja,pt
out
jle
jo
add
aas
add
add
clc
xchg
mov
sub
dec
xchg
pop
cmp
mov
clc
in
or
add
ret
clc
and
pop
ret
add
mov
mov
xchg
loope
sbb
inc
add
sub
fsubl
add
add
jp
cld
push
jo
add
add
mov
pop
aaa
pop
dec
popa
add
clc
push
fists
add
leave
push
enter
test
leave
cmpsl
clc
ficompl
add
add
add
jecxz
mov
sbb
js
add
out
ss
pusha
add
push
lret
out
xchg
xor
add
clc
inc
add
or
pushf
out
fstpl
clc
aad
and
add
xor
int
push
add
sbb
push
xchg
lock
aas
xor
add
or
add
mov
push
add
jb
add
cmpsl
clc
sti
mov
push
mov
sub
xor
add
clc
clc
stc
negb
clc
add
add
xchg
es
jl
push
add
clc
test
push
add
nop
movsb
clc
sub
add
mov
clc
lcall
out
add
cmp
add
add
add
aad
add
test
inc
add
dec
test
mov
push
clc
std
push
add
xbegin
iret
pop
cmc
cmp
clc
mov
mov
add
jbe
jmp
lcall
mov
mov
stc
icebp
mov
add
out
rcll
add
mov
mov
mov
push
int
xor
add
loop
pop
cmc
jl
int3
add
add
add
pusha
add
loopne
call
outsb
xchg
leave
sub
pop
jae
add
sub
clc
mov
je
dec
push
add
pop
sti
dec
sub
jo
or
add
lods
outsl
test
mov
clc
mov
dec
push
add
nop
adc
add
clc
pop
push
add
xchg
popa
add
shrl
add
daa
clc
hlt
movsl
clc
and
fs
jecxz
fdiv
jmp
push
jmp
aad
add
imul
clc
popf
sub
imul
cmpsl
clc
and
add
arpl
add
gs
aad
fs
and
iret
mov
xchg
popf
adc
xbegin
clc
pop
jmp
add
xor
mov
clc
fs
mov
sbb
clc
out
pop
dec
adc
xor
xor
add
imul
add
dec
out
and
add
fbstp
pop
or
mov
out
jo
add
add
imul
cmp
add
movsl
clc
xchg
or
negb
sub
add
cmp
add
pusha
add
shll
popa
add
sub
dec
cmp
add
xor
cltd
inc
clc
sbb
xchg
sub
cmp
jmp
xor
add
decl
add
or
push
add
fisttpll
xor
push
ds
sbb
adc
jb
add
test
jle
clc
mov
test
clc
push
add
popa
add
push
add
mov
iret
sbb
out
and
add
pop
call
clc
xchg
adc
add
fisttps
into
jo
add
push
add
into
push
pop
xor
add
clc
pop
out
fdivrl
loope
data16
xchg
and
add
cmc
sub
adc
add
sub
add
xbegin
cmp
mov
pop
mov
dec
and
add
add
sbb
pusha
add
mov
ret
js
dec
jge
push
add
pop
cmp
stos
cwtl
cmp
adc
add
sar
fsub
clc
insb
insb
in
lahf
ja
clc
enter
clc
or
clc
mov
add
mov
mov
cltd
mov
xchg
lcall
add
add
add
push
ret
inc
add
test
pushf
and
add
inc
add
pop
sahf
int3
mov
adc
add
int3
ret
sar
clc
xchg
int3
or
add
sbb
add
pop
adc
add
lret
sub
popa
add
stos
sbb
adc
add
dec
inc
add
jne
repnz
rep
clc
cs
add
ja
nop
push
inc
clc
or
xchg
shl
clc
or
addr16
dec
rep
and
add
clc
dec
fs
int3
imul
stc
or
clc
mov
push
pusha
add
imul
pop
inc
clc
dec
dec
inc
add
enter
sub
cmp
clc
out
mov
clc
mov
mov
mov
iret
test
lods
leave
xlat
out
fs
pushf
pushf
sar
das
mov
aaa
and
add
cmp
adc
add
scas
jno
add
clc
sbb
sar
add
in
inc
add
in
jo
add
scas
daa
clc
mov
add
in
pop
notb
add
inc
add
out
fsubr
sahf
rcr
sbb
jg
faddl
fidivs
negb
sub
iret
and
add
add
fcomps
xchg
push
add
mov
test
add
pop
push
add
dec
mov
add
mov
cmp
mov
daa
clc
dec
lods
adc
add
pop
in
sbb
mov
add
inc
clc
xchg
test
loope
push
mov
test
push
cmc
out
fnsave
jge
sbb
mov
mov
add
and
pop
repnz
add
push
nop
cli
dec
inc
clc
das
call
clc
mov
mov
lahf
or
dec
pushf
mov
add
jle
clc
mov
test
clc
cmc
insb
jmp
sub
add
jle
clc
cmp
imul
and
add
add
inc
add
out
mov
in
jge
clc
aad
add
mov
mov
inc
clc
or
inc
clc
jb
add
out
and
add
clc
js
sbb
add
add
and
add
xabort
add
add
add
jno
add
add
add
or
cmp
fwait
xchg
ret
clc
mov
xchg
test
clc
inc
clc
imul
clc
rcrl
mov
faddp
clc
sbb
fsubrs
adc
add
sbb
cwtl
inc
clc
dec
xbegin
mov
mov
add
add
ljmp
mov
clc
lahf
iret
jne
loope
sbb
add
add
push
inc
add
ja
pop
cmp
clc
push
test
sbb
test
push
jnp
std
scas
test
int
add
std
fidivs
ljmp
add
add
pop
mov
or
jge
pop
clc
das
in
add
add
pop
or
gs
mov
jmp
clc
in
enter
add
mov
and
add
clc
pusha
add
xchg
mov
nop
adc
mov
or
add
cmp
dec
notb
add
xchg
fdivrp
nop
in
mov
push
push
movsb
clc
out
mov
fbld
add
leave
jb
add
clc
push
add
add
add
clc
call
aas
nop
call
add
aad
push
insb
xor
add
dec
cmpsl
clc
data16
dec
out
in
rcr
sub
pop
clc
push
add
fidivl
pushf
inc
clc
sar
push
xor
lods
lods
in
cmp
repz
push
jmp
popa
add
mov
clc
in
push
add
bound
add
add
mov
clc
cmc
jg
clc
pushf
ljmp
push
cwtl
jmp
stos
jecxz
incl
clc
cli
pop
mov
clc
imul
ljmp
xbegin
clc
cmp
dec
dec
loop
sbb
mov
out
pop
fidivl
add
cli
xchg
sub
arpl
add
scas
call
add
sbb
add
xchg
mov
push
push
add
scas
and
add
iret
mov
mov
cs
aad
push
loop
jge
clc
cmp
leave
aas
decb
push
add
arpl
add
add
add
add
add
and
add
sbb
and
flds
add
mov
dec
jno
add
xor
test
mov
add
outsl
out
push
cmp
mov
iret
push
lea
cmp
add
sar
add
push
clc
in
roll
std
dec
cmp
push
jle
mov
add
add
add
mov
xchg
xchg
aad
xchg
hlt
fs
clc
and
add
insb
test
mov
adc
add
add
add
pop
xchg
add
add
ljmp
add
dec
sub
mov
dec
xor
add
clc
aad
fstp
inc
clc
je
xor
add
inc
clc
pop
mov
inc
add
cli
dec
push
push
add
add
clc
inc
clc
data16
xbegin
add
clc
sar
clc
xchg
iret
lret
jecxz
repz
scas
pusha
add
xchg
jb
add
test
jecxz
jne
add
fwait
mov
clc
movsb
clc
daa
clc
sub
out
push
clc
nop
fnstsw
pop
popa
add
loope
fs
sub
decl
xchg
stos
add
clc
jns
mov
add
pop
inc
add
or
clc
es
add
add
and
leave
or
mov
popa
add
inc
clc
daa
clc
mov
and
add
add
add
add
pop
clc
pop
mov
sbb
inc
clc
cmp
inc
add
push
xchg
fisttps
add
enter
dec
push
add
lock
clc
addr16
jp
mov
sar
scas
sbb
add
stos
mov
nop
pop
xchg
dec
fcmovnbe
jns
clc
vmovaps
xor
inc
add
fwait
addr16
xabort
outsl
repz
add
xchg
xbegin
clc
sar
sbb
adc
add
sub
add
push
stos
es
enter
add
sub
out
out
xlat
xchg
sbb
clc
add
add
add
clc
inc
clc
sar
clc
lret
jo
add
fnstcw
inc
clc
cli
cmp
pop
jmp
add
push
clc
inc
clc
pop
xbegin
mov
mov
fdivl
jbe
enter
clc
cmpsl
clc
mov
jne
clc
sub
mov
inc
clc
mov
clc
xlat
fldpi
jl
xchg
sub
add
push
fs
movsb
clc
je
js
clc
pop
ljmp
add
xbegin
xchg
pop
pop
push
add
mov
lea
jnp
add
sub
clc
xor
add
inc
add
xlat
jbe
add
aas
pop
and
add
add
push
add
or
dec
insb
out
add
xlat
loop
or
clc
daa
clc
call
mov
daa
clc
xchg
pop
mov
push
add
nop
mov
add
add
outsl
in
cmp
add
jae
add
out
sub
sub
clc
push
add
ds
jnp
add
cmp
clc
int
add
pop
loope
imulb
add
int
clc
insl
sub
ret
clc
dec
adc
add
in
mov
pop
mov
jmp
pop
mov
add
mov
add
inc
add
inc
clc
cmp
rcll
add
jg
mov
clc
dec
adc
mov
push
adc
add
add
std
cltd
jl
clc
mov
add
gs
and
push
cmpsb
clc
jns
fsubrl
aaa
push
arpl
add
movaps
jecxz
push
fs
xor
fsubs
popa
add
push
loopne
cmp
inc
add
loopne
inc
clc
roll
mov
cli
sahf
sub
add
arpl
add
clc
loop
sar
aad
add
sti
in
or
sbb
out
and
add
movlps
add
add
mov
clc
and
add
add
or
and
add
add
sub
popa
add
popa
add
out
cltd
dec
jbe
cmp
add
sbb
add
lock
or
ja
cld
fldenv
pop
xchg
dec
cmp
jmp
cld
cmp
mov
clc
mov
fldcw
data16
hlt
xchg
cmp
xabort
add
add
add
clc
mov
adc
inc
add
push
add
data16
lahf
jle
mov
push
add
cmp
lods
jmp
xchg
test
mov
add
pop
aam
mov
add
xor
add
and
xchg
mov
mov
clc
mov
push
clc
mov
clc
dec
daa
clc
imul
add
cmpsl
clc
leave
inc
clc
lods
or
test
push
add
movsb
clc
es
jne
popa
add
stos
jbe
dec
sbb
add
js
add
je
testb
mov
add
xor
jmp
dec
das
mov
mov
add
sbb
inc
add
push
clc
jge
clc
icebp
dec
mov
add
pop
mov
insl
sbb
xchg
icebp
movsb
clc
rolb
add
sub
clc
mov
inc
add
mov
jbe
clc
movsl
clc
test
mov
clc
xbegin
add
push
pop
icebp
pop
xor
add
add
lods
lcall
std
jmp
add
out
mov
jg
clc
xor
add
clc
xor
add
clc
fyl2xp1
sub
push
inc
add
push
aas
push
inc
add
xchg
mov
push
add
or
into
push
cmc
in
jo
add
mov
add
add
inc
add
pop
clc
xor
add
or
std
mov
add
mov
pop
and
add
adc
add
lcall
sar
clc
mov
add
sar
xchg
out
add
or
xchg
shlb
out
pop
imul
pop
hlt
dec
popa
add
xor
add
add
aaa
mov
loope
jne
xor
movsl
clc
push
clc
adc
hlt
jb
add
add
add
xor
movsb
clc
loope
jge
movsb
clc
pop
clc
test
clc
and
add
add
add
add
or
add
outsl
lcall
in
lods
bound
add
in
fwait
cmp
test
enter
clc
lret
jmp
data16
pop
popf
pop
sbb
jmp
push
int
mov
in
dec
push
add
fcmovne
cmp
add
ret
clc
dec
repz
lahf
push
add
mov
out
loop
cltd
outsl
in
nop
icebp
cmp
jl
inc
add
pop
repnz
jmp
cmp
dec
sbb
and
add
clc
sar
pop
push
jmp
clc
stc
xor
sub
add
out
stos
rcrb
scas
add
jecxz
icebp
lock
mov
add
clc
mov
pusha
add
punpckldq
add
push
sbb
mov
lcall
fildll
ss
push
jmp
inc
add
xor
rcrl
clc
mov
clc
bound
add
add
push
mov
add
popf
gs
xchg
and
xchg
add
mov
add
push
push
add
rcll
add
and
add
jae
add
ficompl
nop
or
clc
xor
pusha
add
out
and
pop
adc
add
pop
jnp
sarl
cwtl
or
enter
fiaddl
push
add
stos
inc
add
dec
insl
lahf
add
add
test
adc
add
add
add
add
int3
or
clc
mov
mov
es
cld
imul
add
pushf
add
add
add
imul
sub
clc
das
int3
fidivrl
add
push
test
add
fwait
movsl
clc
sahf
out
push
add
or
icebp
cwtl
mov
int
clc
mov
into
dec
or
add
or
add
call
clc
cmpsl
clc
sub
add
or
jge
ret
mov
lea
sub
enter
mov
add
loop
in
mov
inc
add
cs
jecxz
xor
add
add
clc
xchg
clc
gs
push
add
loop
aam
add
std
mov
add
cmc
adc
add
add
mov
add
clc
in
test
cmove
mov
inc
add
mov
repnz
in
pop
mov
kmovw
clc
sti
mov
aas
mov
loope
js
clc
popf
mov
clc
mov
out
mov
clc
leave
pop
inc
clc
loop
adc
enter
cmp
mov
es
popf
jge
push
addr16
icebp
and
add
sub
add
jle
push
clc
scas
in
stc
mov
pop
adc
add
pop
ds
push
pop
add
sub
jbe
popf
aas
fnsave
add
vunpckhps
fmulp
in
dec
shlb
in
mov
mov
clc
lea
clc
xchg
popa
add
add
add
clc
ret
clc
daa
clc
mov
add
add
das
push
xchg
test
fistps
sub
clc
lcall
xchg
inc
add
mov
shl
clc
popa
add
jge
mov
add
clc
sbb
clc
scas
sbb
or
add
pop
or
jnp
cmp
clc
mov
add
xlat
or
iret
arpl
add
dec
insb
popf
pop
jne
lods
das
jnp
lock
cmp
sub
fstps
add
mov
add
push
int
ret
clc
test
data16
hlt
test
jl
scas
loopne
mov
inc
add
fiadds
pop
inc
add
neg
sub
add
dec
in
add
add
addr16
dec
daa
clc
std
mov
add
push
cmp
cmp
jbe
aaa
sbb
add
jmp
leave
xor
add
fistpll
ds
add
arpl
add
jecxz
out
insl
mov
clc
jg
clc
cmpsb
clc
sub
clc
in
cs
std
xchg
xchg
das
or
fdivrl
scas
adc
clc
push
add
out
pop
mov
cmp
add
inc
clc
cmpsb
clc
popf
cmp
popf
sbb
jecxz
lcall
negb
clc
dec
sub
clc
repz
or
add
inc
clc
popa
add
sub
dec
imul
into
add
add
dec
clc
mov
add
adc
stos
fwait
xchg
xchg
scas
das
mov
jp
jns
jno
add
jb
add
inc
add
or
test
add
stc
adc
add
xchg
loopne
mov
das
xor
add
push
and
add
loop
gs
jle
jle
jbe
sar
fbstp
lret
sub
in
stos
out
or
sbb
sti
fyl2xp1
xchg
fwait
imul
add
mov
das
test
clc
arpl
add
add
add
add
add
push
jg
clc
push
add
mov
psubusw
mov
add
loope
pop
mov
repz
jns
clc
sar
xchg
sbb
fbstp
jle
cmp
mov
movsl
clc
sub
cmp
or
clc
mov
mov
clc
aam
add
cmc
adc
add
and
or
js
xchg
call
add
add
jmp
mov
jge
mov
add
lods
xchg
stos
dec
push
scas
arpl
add
add
dec
mov
jg
inc
add
cmp
add
sbb
stc
scas
clc
mov
clc
jle
clc
dec
lock
fisttpll
iret
test
mov
movsb
clc
jo
add
in
push
fisubl
add
dec
movsb
clc
test
nop
outsl
jp
add
pop
cwtl
adc
add
push
add
xchg
call
add
or
add
hlt
mov
mov
sbb
in
loopne
mov
dec
jbe
out
xor
add
lods
mov
add
or
clc
fsubl
mov
int3
fldt
push
or
in
pop
cmp
sar
clc
test
add
inc
clc
cmp
loop
pop
in
call
clc
or
add
add
lcall
stos
jb
add
sar
push
add
mov
xchg
or
add
inc
add
outsb
xabort
adc
add
push
clc
mov
cmpsl
clc
out
test
sub
aaa
push
add
adc
add
clc
testl
add
push
adc
add
fidivrl
aas
popf
dec
in
xor
add
icebp
xbegin
in
scas
lahf
inc
clc
shl
clc
fmuls
xchg
xor
add
clc
daa
clc
sub
lahf
mov
and
add
inc
add
aad
stc
sub
add
cli
stos
repnz
clc
inc
add
movsb
clc
mov
pop
mulps
cmp
bound
add
adc
add
clc
mov
aaa
jae
add
jp
jge
xlat
dec
mov
clc
popl
insb
dec
sbb
aam
add
fwait
insl
jbe
jg
gs
fwait
cltd
push
add
sar
clc
cmc
push
sub
pop
dec
push
aam
cmp
es
xchg
cmp
xor
hlt
inc
add
push
imul
xchg
inc
add
in
mov
ljmp
sbb
sar
add
sbb
lahf
clc
sub
enter
inc
clc
cmp
clc
repz
outsl
jmp
add
pop
mov
clc
fimuls
inc
clc
mov
mov
mov
and
add
mov
clc
movsl
clc
cmpsl
clc
mov
mov
add
sbb
add
imul
ds
ss
in
pusha
add
gs
js
push
add
xor
add
clc
add
and
add
jnp
test
or
add
jnp
clc
bnd
add
xlat
push
jns
add
pushf
leave
insb
dec
into
xbegin
addr16
movsl
clc
fs
in
or
aad
clc
fucomi
test
add
push
mov
pop
clc
fists
add
sbb
clc
incl
add
add
mov
add
clc
mov
add
out
dec
ljmp
push
outsb
xchg
rcl
repnz
imul
add
jp
sarb
nop
push
scas
push
add
test
clc
add
add
sbb
clc
xlat
inc
clc
cwtl
jae
add
lret
xchg
hlt
lods
mov
add
add
clc
sub
mov
sar
xchg
loop
sub
dec
clc
sbb
clc
jae
add
mov
outsb
mov
shl
clc
negl
cmp
push
add
fwait
push
add
fisubrs
jecxz
mov
add
sbb
xchg
lcall
adc
add
scas
xchg
sarb
add
cmp
out
jge
sbb
mov
int3
adc
movsb
clc
cmpsl
clc
outsl
mov
aam
add
daa
clc
sub
fdivs
add
cmp
add
xchg
inc
add
push
add
mov
mov
mov
clc
push
inc
add
aam
ss
stos
mov
jp
lcall
adc
add
push
add
enter
add
inc
clc
icebp
or
test
inc
add
icebp
add
add
pop
push
push
ss
clc
inc
clc
mov
inc
clc
inc
clc
femms
repz
dec
and
add
repnz
clc
sub
arpl
add
pcmpgtb
or
cmp
clc
mov
mov
lcall
add
clc
call
pop
xor
add
add
or
push
add
or
ljmp
add
sbb
inc
add
push
cmp
add
adc
add
add
imul
push
sub
xchg
lahf
ss
mov
or
dec
inc
clc
dec
inc
add
pop
loop
xchg
cmc
int3
xchg
dec
and
ljmp
cmp
push
clc
jne
outsl
into
dec
cli
or
inc
clc
push
add
push
mov
nop
jmp
add
lds
add
cli
mov
xbegin
clc
mov
daa
clc
cli
scas
pop
mov
mov
jmp
mov
jae
out
cltd
or
je
or
es
sbb
xor
or
jb
add
lahf
lahf
jno
add
add
cmpsb
clc
test
test
flds
clc
xlat
add
sahf
sub
clc
mov
shl
clc
cmpsl
clc
popf
mov
clc
cs
push
push
mov
xchg
ret
and
lds
jns
mov
jmp
movsl
sub
push
jecxz
inc
clc
jbe
cmp
add
cmp
sbb
pop
mov
add
add
jo
ss
and
add
mov
pop
cmp
ret
clc
and
add
add
and
add
pop
nop
and
add
clc
xbegin
incb
add
inc
clc
mov
outsb
push
clc
movsb
clc
jg
loopne
xlat
xchg
jecxz
cmp
or
xchg
xchg
jp
cmp
pushf
data16
lods
je
clc
cmp
xor
add
push
call
nop
jmp
lods
xchg
lods
pushf
ds
sub
and
shll
add
test
sti
movsb
clc
cmp
mov
movsl
clc
mov
aas
inc
add
xchg
mov
sub
subl
nop
jmp
add
jae
mov
xor
nop
jmp
pushf
lea
add
hlt
adc
mov
clc
js
push
add
jecxz
cs
jmp
sar
xchg
cmp
call
nop
jmp
add
inc
jno
add
jne
stc
jo
add
movsl
clc
fisttpll
jmp
out
addr16
dec
xor
push
add
add
add
cmp
clc
xchg
popa
add
xchg
cmp
js
push
clc
sti
pop
in
add
add
js
sti
sbb
sbb
clc
pop
mov
mov
jo
add
add
loope
pop
xor
mov
jge
mov
cwtl
aaa
mov
add
ss
clc
shr
or
add
nop
jmp
inc
out
cmp
fcoml
clc
jbe
add
add
clc
xor
add
clc
mov
clc
cmp
add
ret
clc
stc
mov
out
cmpsl
clc
jno
add
clc
scas
in
and
add
dec
gs
jne
clc
inc
add
shll
clc
in
test
rorb
or
enter
or
add
push
add
mov
clc
jbe
mov
mov
adc
add
mov
add
cmp
add
ja
pushf
imul
add
mov
clc
jne
mov
sar
clc
clc
rcrl
adc
push
dec
push
and
add
add
mov
xor
xchg
mov
clc
ljmp
add
pop
out
movsl
jae
ret
cmp
add
xbegin
clc
xabort
clc
scas
outsb
in
cltd
popf
inc
clc
adc
jbe
or
xor
add
jl
clc
data16
and
add
jmp
xor
fdivrl
roll
push
sub
clc
ss
xor
add
add
cmp
clc
pop
mov
pop
pop
ret
clc
or
mov
movsl
clc
mull
clc
jp
in
mov
clc
sbb
add
lcall
cli
mov
push
mov
pop
mov
cmpw
nop
jmp
jnp
add
clc
mov
repnz
mov
dec
xlat
in
sub
clc
mov
cmp
add
incl
jle
add
add
or
daa
clc
cmp
push
clc
rcrl
das
jae
add
clc
sub
nop
mov
mov
gs
rorb
fcompl
clc
sbb
pop
xchg
pop
sbb
enter
add
add
add
add
test
or
sub
clc
imul
xchg
fwait
push
lcall
clc
mov
and
imul
lahf
mov
add
sub
adc
add
fs
ror
in
int3
xlat
push
add
mov
clc
int3
mov
sti
adc
add
lret
adc
add
xchg
aas
pop
pop
sbb
mov
xchg
ret
add
add
fidivrl
or
add
add
jg
clc
or
add
sub
stc
data16
mov
add
cmpsl
clc
lea
mov
aaa
out
add
dec
or
clc
or
cltd
sub
clc
enter
clc
add
or
adc
add
pop
add
add
clc
dec
fdivl
add
add
jg
clc
lret
add
xor
add
sahf
mov
add
add
ljmp
add
adc
sbb
ret
clc
in
fldt
inc
clc
sbb
and
add
pop
pop
es
pop
push
or
add
je
pop
push
inc
jo
jge
clc
or
scas
xor
add
jmp
xlat
clc
sub
clc
push
jmp
add
mov
add
clc
scas
mov
outsb
shlb
add
mov
clc
jb
add
add
clc
add
add
pop
jnp
add
pop
pop
xchg
ret
clc
push
je
nop
jmp
add
clc
inc
clc
and
add
sar
add
pop
adc
clc
sub
fs
leave
and
add
scas
push
mov
sub
push
nop
jmp
fisttps
gs
mov
mov
add
fcompl
xchg
shll
mov
clc
mov
add
aas
scas
in
xor
add
inc
clc
jp
dec
dec
leave
mov
add
das
sar
pop
clc
cmp
pop
push
add
hlt
cmp
clc
mov
clc
push
add
mov
jg
lret
loop
sub
cmp
mov
xabort
clc
adc
add
pop
cmp
xchg
sbb
iret
jecxz
outsb
jb
add
nop
ret
sar
xchg
cs
add
mov
mov
clc
xor
add
add
mov
mov
add
add
clc
lret
push
mov
bound
add
add
test
clc
mov
loope
add
add
dec
mov
push
and
bound
add
push
cmp
rorl
sarb
cmp
jmp
nop
rol
mov
or
add
mov
nop
jmp
add
mov
add
sbb
add
add
jo
add
pop
xor
call
nop
jmp
xor
add
add
jge
lcall
add
jb
add
cmpsl
clc
pusha
add
sub
mov
cmp
clc
std
icebp
push
pop
jno
add
sar
sub
call
cmp
clc
jg
push
sahf
cmpsb
clc
push
add
inc
add
fdivrl
stos
mov
xor
add
jp
clc
mov
mov
nop
jmp
ja
cmp
scas
sub
loope
xchg
imul
add
filds
dec
std
in
xor
into
sbb
mov
sub
add
add
xor
add
push
nop
jmp
repz
xlat
aaa
xor
clc
lea
out
dec
mov
lcall
add
lds
add
out
and
clc
add
push
mov
clc
mov
mov
add
fdivrp
push
pop
push
mov
xchg
ret
nop
fnstenv
inc
clc
int3
arpl
add
mov
inc
clc
add
add
add
add
clc
rclb
add
outsb
jp
das
fwait
add
add
pop
inc
add
mov
clc
cmc
test
iret
mov
loop
decl
test
xchg
add
add
lea
jb
add
add
clc
add
daa
clc
sub
add
push
loopne
add
jae
or
inc
sar
test
lods
test
sar
ja
pop
repz
clc
hlt
imul
sub
or
clc
or
jle
xor
add
jae
add
clc
ret
clc
fnstcw
mov
fsubr
std
mov
in
clc
mov
out
mov
add
mov
aaa
ucomiss
add
add
xchg
fiadds
popf
add
add
clc
jecxz
fistpl
sub
add
pop
pop
and
xchg
push
clc
lods
mov
inc
add
mov
stos
stos
xlat
aas
or
jl
outsl
or
clc
mov
add
clc
call
dec
cld
cmp
clc
test
clc
fwait
inc
clc
xchg
fld
clc
pop
dec
dec
mov
add
xbegin
mov
bound
add
add
fsts
add
add
adc
add
clc
xabort
std
repz
loop
mov
idivb
add
inc
add
ljmp
nop
jmp
pushf
nop
add
xchg
ja
fdivrl
leave
mov
push
icebp
pop
jmp
clc
pop
ds
insb
inc
add
fsubrs
pop
mov
inc
clc
mov
clc
or
add
mov
in
lahf
popa
add
scas
inc
clc
xor
add
add
mov
xor
add
insb
xchg
loopne
js
add
add
add
adc
clc
cmpsl
clc
mov
fmul
shrl
je
test
mov
mov
push
jbe
je
mov
xchg
test
mov
nop
inc
clc
mov
jg
add
xchg
ror
push
push
add
and
add
pushf
xor
adc
add
pop
push
sar
clc
mov
add
aam
dec
jb,pn
add
add
imulb
out
pop
sub
addr16
bnd
pop
movsl
clc
std
push
sub
nop
jmp
nop
int
sbb
fistpll
out
sbb
clc
clc
mov
je
test
inc
add
inc
add
sar
and
xabort
push
clc
sar
xchg
iret
pop
xchg
and
jmp
clc
mov
or
clc
stos
sbb
call
ja
test
clc
push
aaa
jb
add
add
insb
sti
fstpl
xor
add
xchg
xchg
test
jb
add
cmc
outsl
sar
and
add
out
add
add
sub
clc
fs
inc
clc
movsl
clc
jno
add
add
out
testb
clc
sbb
xchg
pop
add
nop
jmp
ljmp
daa
clc
dec
lcall
pop
ja
test
xor
add
sbb
pop
xchg
ss
loopne
cmp
clc
cltd
mov
iret
test
clc
jbe
iret
ficompl
push
add
add
clc
pop
or
push
leave
push
add
xor
add
sbb
pop
clc
push
add
nop
jmp
scas
jnp
rcl
add
sbb
jmp
push
sbb
flds
pop
cmp
dec
mov
sub
clc
pop
mov
hlt
inc
add
call
add
sbb
mov
repz
clc
sub
mov
xor
add
mov
pop
xchg
mov
xor
add
push
mov
xchg
ret
or
xchg
cld
jo
add
clc
push
push
clc
xlat
pop
fcom
xor
add
add
add
add
pop
and
add
clc
mov
clc
cli
sbb
mov
test
test
push
mov
add
push
fbstp
add
mov
lock
jmp
pop
clc
lods
adc
add
dec
cmp
add
shr
iret
or
xor
add
add
sahf
inc
add
mov
xchg
test
enter
push
decl
test
inc
add
shll
clc
xchg
xchg
outsb
xor
bnd
add
dec
jns
popf
lods
adc
mov
imul
push
and
xchg
jle
mov
sbb
add
add
push
daa
clc
lods
daa
clc
mov
add
clc
mov
je
cli
cltd
in
push
jmp
mov
ret
sub
sbb
outsl
jg
pop
dec
sub
int3
aas
jnp
push
sub
dec
gs
ja
je
clc
fstpt
sub
fldenv
sub
add
sub
bound
add
add
xchg
pusha
add
and
add
sar
sub
loopne
imul
dec
cmp
in
jno
add
and
add
push
js
push
xor
nop
jmp
xor
push
ja
xor
outsl
popf
insb
out
mov
cmp
sub
clc
push
jnp
clc
push
and
add
mov
nop
jmp
and
and
popa
add
fldcw
lods
cmp
jl
jle
clc
pop
add
add
cld
ljmp
nop
jmp
rcrl
movsl
xor
add
lock
imul
add
ror
push
mov
xchg
ret
test
cmpsl
clc
adc
add
cmp
ljmp
add
add
sbb
jo
add
jle
aas
cmp
dec
sbb
mov
mov
aad
add
bound
add
add
dec
ret
clc
cmp
ljmp
clc
add
add
add
adc
add
xor
add
add
lret
or
push
hlt
es
add
cmp
clc
adc
jbe
add
or
pop
jl
mov
sbb
xbegin
sar
add
adc
add
add
inc
clc
jmp
xabort
aaa
mov
and
add
or
cmpsb
clc
lods
jle
or
vandnps
arpl
add
rclb
clc
and
add
add
mov
cmp
add
add
clc
mov
add
jecxz
pop
lods
stc
mov
and
add
add
jb
add
clc
lea
in
push
into
xor
leave
imul
clc
xchg
ljmp
clc
add
mov
mov
mov
pop
mov
cmp
or
clc
push
add
nop
jmp
jecxz
add
add
mov
lret
lret
adc
add
repnz
je
loope
insl
dec
push
mov
and
into
or
add
cmp
ja
clc
jg
in
pop
jo
add
xchg
stc
test
out
jge
clc
mov
pop
push
cmp
nop
jmp
push
mov
add
rorl
mov
out
int
mov
pop
sub
mov
add
clc
ret
clc
or
dec
add
add
clc
bound
add
jno
add
clc
or
test
fmull
das
lret
add
add
clc
data16
lcall
jmp
lods
add
add
sub
cltd
lahf
lods
es
mov
std
jmp
nop
jmp
and
pop
and
clc
cmp
sbb
loope
shl
clc
sub
add
xchg
jbe
add
and
add
jp
add
scas
je
pushf
and
xor
xchg
loop
and
add
sub
sub
cmp
clc
pop
scas
lock
add
inc
add
lods
fcompl
clc
stos
inc
clc
pop
test
mov
clc
and
clc
and
add
fdivrs
enter
inc
add
repz
clc
inc
clc
add
add
jne
add
pop
jl
test
scas
mov
cltd
testl
sti
ljmp
clc
dec
pop
clc
loopne
daa
clc
cmp
pop
xchg
lea
add
pop
lods
aad
lret
dec
xchg
adc
mov
or
clc
add
add
decl
scas
add
ret
out
fildll
pop
pushf
pop
xor
jnp
mov
add
fwait
pop
push
add
outsb
adc
inc
cmpsb
add
xor
add
xchg
arpl
add
dec
nop
jmp
add
lcall
pop
mov
je
mov
add
clc
xchg
leave
sbb
push
lods
popf
jecxz
fwait
sar
cmp
clc
add
add
sbb
pop
sti
mov
leave
scas
jae
add
mov
mov
clc
imul
mov
clc
adc
adc
add
dec
lret
jno
add
addr16
pop
mov
cmp
xchg
jns
mov
mov
nop
jmp
sbb
lods
fimull
clc
cmc
xlat
test
add
add
int
adc
add
clc
inc
add
or
clc
xchg
aam
aad
clc
push
hlt
jmp
dec
sbb
clc
sbb
mov
xbegin
pop
xchg
cs
pop
pop
mov
add
add
inc
mov
mov
shrb
add
xchg
pop
sub
add
test
cmp
clc
inc
add
pop
inc
clc
mov
inc
add
cmp
adc
add
dec
loopne
sbb
xbegin
or
add
fstpl
inc
clc
fadds
insb
insb
xchg
into
dec
lock
fcomps
push
clc
jns
inc
add
fs
fnsave
clc
daa
clc
aaa
pusha
add
stc
push
out
sub
clc
sbb
insl
sbb
sub
imul
divl
add
movsl
clc
and
add
dec
pop
push
jmp
fbstp
add
sub
clc
xor
push
add
fnstenv
add
pop
test
cmpsl
clc
ret
ljmp
sbb
sub
clc
fs
xchg
fisubs
clc
and
cld
xchg
jle
insl
std
and
add
add
cmp
clc
cmp
mov
xchg
ret
sub
rolb
or
add
fwait
sar
push
add
push
mov
xchg
ret
test
dec
xor
add
loop
mov
dec
loop
pop
or
add
sbb
insl
jbe
sbb
jmp
nop
jmp
push
add
dec
cmp
cli
gs
dec
push
or
clc
pushf
insb
jae
add
and
fs
xchg
in
xchg
mov
mov
icebp
js
clc
adc
add
clc
cmp
xlat
mov
sti
daa
clc
rcr
jnp
clc
imul
js
cmp
out
dec
jae
add
loop
mov
clc
test
lret
imul
dec
cmp
clc
int
clc
testb
or
clc
pop
je
mov
clc
adc
clc
sub
inc
add
cmp
dec
push
add
or
cmpsb
clc
test
popl
rclb
add
ja
scas
add
rcr
icebp
aas
cmp
sar
mov
add
add
push
cmp
clc
mov
push
add
mov
add
fisubrl
cmp
in
push
movsl
clc
rep
add
out
cmc
cmp
popa
add
jecxz
mov
pop
clc
pop
add
pop
enter
cmc
ficomps
add
nop
addr16
lods
push
add
or
inc
add
cmpsb
clc
test
mov
lahf
es
sub
ret
add
loop
inc
add
aas
push
mov
push
add
shrb
test
insl
push
add
cmpsl
clc
cs
xchg
inc
clc
aas
hlt
sbb
mov
nop
das
mov
or
cmc
sub
cmp
dec
leave
xbegin
js
add
sub
inc
add
jg
and
add
add
ljmp
mov
leave
dec
and
add
jae
add
clc
or
xchg
jno
add
add
popf
movsb
clc
push
add
insl
push
add
nop
jmp
ss
pushf
push
jp
dec
lea
inc
clc
pushf
gs
sub
and
jno
add
and
jge
clc
insl
popf
ret
clc
mov
fs
out
jl
cwtl
mov
in
or
sar
pop
cs
xor
add
add
outsb
mov
je
clc
dec
pop
mov
adc
add
add
cmp
cltd
adc
or
cmp
add
jo
add
clc
and
add
int
int
clc
sbb
cs
in
lcall
mov
sar
test
xchg
adc
push
add
cmp
clc
lahf
xchg
scas
in
pop
div
outsb
into
push
sar
icebp
aaa
cli
fs
sbb
cmc
jne
xor
add
add
and
add
dec
fwait
jne
add
pop
xabort
loopne
mov
movsb
clc
jecxz
scas
cmp
sbb
mov
xchg
ret
nop
sub
jnp
mov
mov
push
add
push
movzwl
push
mov
xchg
ret
fsub
clc
scas
mov
add
sbb
jle
clc
cmp
add
add
aaa
sar
clc
jbe
add
leave
sub
xor
add
imul
clc
cmp
add
push
xor
add
loopne
lea
mov
pop
clc
sbb
push
sub
mov
inc
add
and
clc
mov
add
lret
inc
clc
pop
jo
add
add
aaa
sbb
jge
nop
jmp
ja
jnp
sbb
movsb
clc
inc
clc
imul
xchg
outsl
and
add
pop
clc
xor
add
clc
mov
clc
daa
clc
jecxz
xchg
xor
aas
bnd
clc
push
add
push
aaa
ljmp
decl
add
push
adc
add
xchg
or
popf
fidivrs
mov
fwait
jg
mov
nop
jmp
lea
add
clc
daa
clc
mov
and
jmp
int
add
sub
pop
add
add
mov
or
pop
movsl
clc
sbb
add
add
dec
addr16
int
das
push
sahf
cmp
cmpsb
clc
jo
add
clc
lods
cmp
adc
add
sub
add
inc
add
mov
add
out
xor
add
push
lock
clc
xlat
mov
push
cmp
aaa
clc
mov
ja
sbb
mov
jle
add
mov
sar
fnstsw
sub
mov
rorl
clc
fs
in
cmp
loope
lock
add
add
xabort
xchg
mov
sbb
add
call
push
add
and
add
clc
xchg
mov
clc
cmp
clc
adc
add
add
jge
xchg
lcall
jge
clc
ret
clc
xor
add
sub
add
clc
dec
xbegin
rolb
add
out
fsubrp
pop
xchg
jle
clc
mov
inc
add
ss
clc
ds
xchg
mov
test
pushf
cli
pop
fistps
pushf
sti
xabort
pop
outsb
stc
xor
add
dec
sub
add
data16
xchg
sub
mov
je
nop
jmp
add
inc
clc
test
imul
fidivs
inc
clc
inc
clc
mov
push
add
call
clc
sar
call
nop
jmp
push
pushf
jnp
push
mov
add
clc
cmpsb
clc
pusha
add
ret
lea
mov
xlat
notl
xabort
data16
in
in
pop
sbb
add
inc
add
shl
inc
clc
sbb
inc
clc
or
add
nop
jmp
lods
pop
nop
inc
incl
add
jno
add
pop
sbb
lret
clc
xchg
mov
add
add
add
add
push
add
and
add
push
add
and
add
clc
test
sbb
pop
lret
add
sub
add
clc
or
loop
mov
mov
cmpsb
clc
push
mov
out
jnp
clc
jnp
icebp
adc
mov
cmp
add
cltd
xchg
in
int
clc
cmp
mov
cmp
cltd
xabort
and
add
clc
insb
inc
clc
xor
add
int
add
push
mov
xchg
ret
jg
mov
cmp
jmp
dec
fimull
push
mov
xchg
ret
filds
lods
rclb
push
xchg
negb
lea
add
or
clc
mov
push
in
fwait
fs
inc
add
adc
sub
add
push
add
stos
push
add
into
data16
sub
add
loopne
psrlw
mov
mov
sub
clc
push
call
add
mov
xor
clc
test
xor
xchg
ss
lods
lods
daa
clc
je
add
push
shl
imul
cs
nop
jmp
add
test
and
jns
dec
cmp
mov
adc
add
rorb
xchg
add
add
clc
cmp
add
fisubl
add
push
add
or
addr16
shlb
jp
ja
stc
out
or
loopne
push
pushf
xchg
imul
data16
int3
in
clc
data16
and
add
add
clc
xchg
ljmp
cmp
add
jnp
clc
sbb
nop
jmp
rcr
inc
and
mov
out
inc
add
dec
lea
add
mov
sbb
rep
push
cmp
js
push
rcrl
and
adc
hlt
inc
clc
adc
add
add
clc
jns
sub
mov
clc
sub
push
add
pushl
nop
jmp
add
lea
xor
add
inc
add
cmp
xor
in
cmp
clc
test
clc
inc
add
xor
add
clc
push
add
jbe
or
dec
ljmp
inc
add
int
push
pop
mov
and
xor
dec
pop
sub
ljmp
jmp
clc
jle
add
in
lea
scas
das
and
add
add
add
add
and
add
clc
aaa
lret
pop
mov
add
dec
mov
add
add
clc
sub
clc
jo
add
or
clc
fldt
add
addr16
xchg
fcoml
bound
add
enter
into
lock
add
add
cmc
loope
mov
adc
add
push
and
add
mov
sar
xchg
out
or
add
xchg
out
daa
clc
inc
clc
xor
add
sub
sar
add
hlt
xor
add
dec
dec
sub
add
clc
pop
and
add
aas
stc
mov
jle
clc
ret
clc
cmp
xchg
insb
repnz
add
cmp
clc
fcmovnbe
mov
nop
jmp
add
call
sbb
adc
xchg
xchg
inc
clc
mov
add
rorb
clc
jno
add
mov
test
inc
clc
ret
push
push
mov
xchg
ret
xchg
lods
add
add
lret
lea
add
mov
sbb
inc
add
sub
push
add
and
add
and
add
push
inc
clc
rcll
add
add
cmpsl
clc
es
pop
hlt
jg
js
xor
outsb
push
add
jb
add
inc
clc
enter
sub
jmp
nop
add
jno
mov
xchg
and
add
add
push
negl
clc
nop
stc
cmc
xor
add
clc
stc
adc
dec
mov
add
je
nop
jmp
sbb
clc
rorl
clc
cmp
add
jmp
cmpsl
clc
push
xchg
movsl
clc
lock
add
pop
fmull
add
sub
xbegin
and
add
add
push
nop
jmp
push
jno
jae
or
stos
bound
add
clc
je
movsl
clc
dec
sarb
test
add
nop
jmp
movsl
push
sbb
xabort
add
or
clc
shlb
mov
sbb
hlt
call
add
cmc
test
add
sub
push
push
shrl
jns
stos
xor
fdivs
add
das
mov
jns
cs
aas
add
add
mov
addr16
je
add
pop
jecxz
test
fistl
add
add
add
clc
int
inc
add
inc
clc
cmc
mov
clc
xchg
inc
clc
push
xchg
cld
cmp
push
push
add
scas
inc
jnp
push
jno
push
jl
nop
jmp
add
repz
add
hlt
mov
push
add
xor
add
add
mov
ds
jmp
into
add
add
clc
xchg
and
add
clc
or
arpl
add
ds
add
mov
in
lcall
inc
add
ja
xchg
push
add
and
add
add
jge
clc
mov
out
sbb
es
cmp
sbb
add
sub
clc
cmc
outsb
inc
clc
cmpsl
clc
xor
add
test
pop
clc
jne
ret
clc
and
mov
clc
jae
add
mov
xchg
mov
add
rcl
xor
inc
clc
aad
ljmp
shlb
add
lods
mov
mov
clc
mov
cmp
add
fstpt
xabort
ret
clc
std
fcoms
xlat
mov
jbe
nop
jmp
ljmp
test
int
lret
in
adc
add
jmp
sub
jo
nop
shrb
clc
test
movsl
clc
sbb
leave
push
add
aam
movsl
clc
cmp
shl
out
add
add
cmp
imul
pusha
add
pusha
add
mov
add
mov
pop
jbe
push
dec
adc
add
lods
pop
fiaddl
add
and
add
shlb
clc
rorb
mov
clc
mov
jmp
add
enter
xchg
mov
into
sub
test
mov
gs
mov
mov
push
jae
add
add
loope
into
sbb
cs
sub
ret
fmull
xor
add
clc
push
add
cmp
xor
add
add
sar
add
sub
enter
mov
stc
xabort
inc
clc
inc
clc
mov
add
add
add
jp
sbb
add
add
clc
add
add
idivb
mov
add
add
mov
add
and
add
lret
data16
cltd
std
mov
int
or
add
imul
les
add
cmp
rcr
adc
jno
add
jge
dec
and
add
jne
nop
jmp
sbb
xor
add
cmp
clc
pop
xbegin
imul
and
add
aaa
cli
mov
int3
push
cld
pop
out
xabort
js
jbe
add
push
add
nop
jmp
js
roll
sbb
cmp
add
add
adc
add
nop
jmp
xor
jecxz
nop
sar
clc
rolb
add
sbb
jl
mov
add
jmp
add
add
push
push
in
cltd
mov
loopne
das
mov
adc
add
fcomp
dec
dec
adc
add
clc
mov
clc
stos
mov
xor
add
xor
add
clc
clc
sar
iret
in
scas
sti
adc
add
cmp
add
cmp
adc
add
clc
sub
or
cli
jbe
data16
out
dec
shll
add
jb
add
and
add
add
test
add
nop
jmp
add
push
roll
repz
clc
outsb
fwait
mov
add
repnz
jecxz
jg
scas
clc
sub
dec
loop
xbegin
cmp
pop
int3
daa
clc
out
jl
clc
or
clc
ret
clc
ljmp
outsb
shl
clc
cmpsb
clc
pop
clc
cld
inc
clc
aas
push
add
scas
incb
dec
xor
lods
mov
cmp
add
or
add
sub
add
add
repz
xor
add
clc
push
and
add
mov
nop
jmp
inc
sbb
sahf
into
aaa
loopne
mov
int
jne
add
mov
xchg
in
ret
clc
dec
or
clc
add
add
clc
inc
clc
aaa
sbb
mov
add
cmpsb
clc
movsb
clc
fisubs
inc
clc
add
add
sahf
sbb
lock
call
add
jb
add
clc
xchg
dec
rcll
or
mov
xchg
ret
xchg
test
sbb
mov
movsl
clc
adc
add
inc
clc
into
push
xchg
inc
add
daa
clc
sub
clc
push
clc
pushf
iret
xchg
and
add
xchg
cmp
push
add
add
es
nop
jmp
sbb
mov
repz
add
and
xchg
scas
stos
cltd
sbb
add
out
cmp
sbb
fiadds
popa
add
mov
lret
clc
test
jns
fisubrl
dec
cmp
jp
adc
cltd
jg
inc
clc
lahf
iret
sub
fwait
sbb
clc
push
loop
sar
hlt
xbegin
div
inc
add
outsb
rol
clc
test
add
scas
leave
cmpsb
clc
jo
add
push
add
cmp
in
clc
cld
test
clc
jns
mov
lods
inc
add
dec
mov
add
add
add
movsl
clc
fwait
jp
stc
xchg
mov
add
mov
clc
jbe
clc
push
or
add
ljmp
dec
pop
mov
sar
add
add
repz
add
add
xchg
lret
jbe
clc
in
jbe
pusha
add
ret
add
cmc
dec
xlat
cmp
mov
idivb
outsb
mov
cli
sbb
add
pop
jno
add
mov
push
add
lods
sub
clc
ret
clc
add
add
clc
add
add
push
add
add
loop
movsl
clc
sbb
cld
stc
cmp
clc
clc
sbb
and
add
fwait
inc
add
jle
lods
jne
fwait
mull
mov
cld
cmp
clc
adc
sub
add
cmc
add
add
add
cmp
add
insb
jg
ss
add
xabort
xabort
aad
clc
clc
mov
cmp
clc
or
dec
jnp
pop
or
clc
cmp
fnsave
sbb
xchg
mov
sbb
clc
out
add
add
pop
nopl
fdivr
jmp
add
push
fmull
add
test
clc
add
inc
clc
int
clc
jge
js
clc
push
mov
add
mov
xchg
xchg
mov
adc
add
add
cmp
lret
push
mov
xchg
ret
cmp
repz
mov
xchg
arpl
add
clc
sub
clc
push
clc
clc
pop
jno
add
imul
cs
clc
fs
rcr
aad
jmp
clc
cmp
add
jge
clc
cmp
addr16
and
add
cmp
sbb
stc
push
mov
push
cmp
clc
dec
in
outsl
push
mov
cmp
add
add
jae
add
add
add
insb
dec
push
ds
test
mov
jb
add
dec
rcrl
clc
in
enter
je
lahf
daa
clc
and
add
not
push
mov
xchg
ret
ret
fildll
clc
mov
cmp
sub
sar
cmpsb
clc
inc
clc
xchg
fiaddl
add
xor
add
or
add
add
vmaxps
clc
push
add
clc
fs
movsl
clc
cmp
mov
fwait
sahf
fisubl
clc
sub
clc
sub
add
in
int3
adc
add
add
clc
fs
mov
clc
xor
mov
xchg
test
push
cmc
mov
add
jg
xchg
mov
add
out
dec
aaa
ret
clc
cwtl
dec
jp
insb
push
or
cmp
add
repz
clc
cwtl
mov
clc
mov
clc
mov
clc
add
add
jecxz
lret
dec
push
stos
and
add
icebp
mov
clc
xchg
xchg
fwait
in
cmpsl
clc
xor
pop
movsb
clc
test
clc
das
sar
out
gs
iret
cwtl
cmp
clc
push
clc
cmp
clc
mov
xchg
xor
add
clc
mov
add
xchg
ficoms
add
and
add
scas
movsb
clc
pop
cmpsb
clc
xabort
mov
dec
fimuls
mov
adc
and
add
jg
add
in
es
mov
clc
repz
clc
pop
popa
add
sub
dec
pop
dec
dec
loope
stos
sub
stc
xchg
or
mov
sbb
ds
clc
mov
int
addr16
rorb
clc
sahf
popl
popa
add
cmp
pop
mov
mov
push
mov
xchg
ret
gs
sub
mov
add
mov
cmp
clc
out
xbegin
pop
xchg
data16
adc
add
int3
out
cmp
es
je
add
jb
add
in
out
sahf
jno
add
inc
clc
fbstp
clc
sub
lret
add
dec
add
sbb
inc
add
adc
pop
cltd
add
add
clc
scas
push
or
filds
clc
jne
xor
add
add
dec
jb
add
clc
scas
lcall
clc
pop
enter
add
in
aad
jge
or
je
clc
clc
sbb
clc
xchg
push
pop
jle
jp
add
rolb
add
call
add
add
icebp
mov
clc
pushf
and
add
clc
lock
lcall
xchg
stc
push
clc
or
int
test
shll
add
add
cmp
aaa
mov
int3
addr16
pop
bound
add
clc
push
insb
mov
add
xbegin
fistl
test
pop
or
clc
mov
popf
popa
add
or
stos
mov
bound
add
cmp
imul
adc
clc
jns
pop
push
push
mov
nop
jmp
jnp
shlb
ljmp
stos
push
call
stos
cmp
add
jae
add
add
in
mov
cmp
lret
jmp
es
mov
clc
xbegin
test
clc
daa
clc
sub
lods
push
pop
rol
clc
js
or
mov
nop
jmp
test
dec
addr16
ficoms
add
fdivrs
mov
clc
push
cmpsl
clc
arpl
add
fs
nop
jle
mov
inc
add
lods
jmp
fdivrp
inc
add
inc
clc
test
scas
clc
mov
add
add
add
pusha
add
loop
outsb
jmp
mov
dec
test
cmp
call
nop
jmp
add
je
std
leave
or
insb
imul
in
out
and
add
or
add
jl
adc
add
add
mov
adc
in
rcrb
ret
cmp
aaa
loopne
xor
add
or
cmp
sbb
cmp
add
mov
add
nop
jmp
inc
sbb
add
add
mov
add
dec
push
jno
add
inc
clc
mov
clc
ds
and
xlat
push
clc
mov
add
nop
push
or
movsl
clc
cwtl
sbb
inc
add
cli
xchg
mov
dec
cmp
fisubrl
pop
clc
inc
clc
bound
add
pop
ss
jg
and
add
and
sti
and
add
clc
and
add
dec
mov
cmpsb
clc
imul
push
xchg
jno
add
pop
test
mov
int
clc
inc
add
popf
loop
adc
movsb
clc
fs
lods
jae
add
ds
xchg
test
popa
add
jae
add
incl
dec
cmp
jmp
out
test
dec
bound
add
add
hlt
push
add
outsl
xchg
mov
fs
icebp
data16
sar
sarl
lahf
sahf
fnsave
cmp
mov
jnp
clc
push
add
sub
fidivrl
pop
add
add
cmp
push
add
dec
push
insl
aas
mov
xor
clc
nop
sbb
inc
clc
icebp
lods
xlat
aaa
and
add
add
or
insb
leave
outsl
dec
lea
pop
xchg
fisttpl
add
repnz
mov
add
cmp
popa
add
cmp
mov
imul
scas
cmpsb
clc
aaa
loopne
lock
push
push
or
add
cmp
js
pop
mov
add
lock
mov
jno
add
mov
dec
lret
cmp
add
clc
lret
jbe
add
daa
clc
push
fbstp
nop
cltd
scas
xchg
cmpsl
clc
sbb
ljmp
cltd
sbb
lret
cmp
mov
nop
jmp
pushf
popl
jecxz
dec
pop
clc
adc
add
clc
dec
or
rolb
clc
lret
cs
clc
leave
iret
mov
ret
clc
push
dec
out
iret
xchg
in
or
clc
test
dec
icebp
scas
sar
xlat
icebp
aaa
mov
popf
pop
push
add
sbb
xchg
addr16
add
add
outsl
and
add
or
loopne
push
add
outsl
and
add
adc
add
push
add
jbe
hlt
movsb
clc
scas
jnp
faddp
clc
iret
ss
push
clc
lods
push
add
cmpsb
clc
xchg
lods
mov
imul
clc
jg
clc
add
add
repz
cmpsb
clc
std
js
pop
in
loop
pop
clc
lahf
fmul
inc
add
xchg
mov
sub
add
cmp
add
ja
dec
xchg
gs
sar
daa
clc
bound
add
cwtl
arpl
add
insb
cs
popa
add
pop
ja
jbe
divl
cs
arpl
add
cmpsl
clc
xor
add
clc
mov
sbb
out
mov
clc
jne
das
divl
add
add
insl
mov
sbb
test
add
nop
jmp
pop
or
cmpl
nop
jmp
pop
scas
out
shll
add
add
add
xchg
mov
loopne
ret
add
mov
add
bound
add
add
push
add
iret
mov
add
mov
clc
and
and
fisttpll
clc
lock
add
lret
je
icebp
fwait
lods
cmp
fwait
sarb
jmp
mov
mov
into
into
push
clc
jns
jge
loop
adc
add
add
inc
clc
addr16
xbegin
test
add
clc
cmp
add
clc
cli
js
add
adc
add
add
jl
clc
cwtl
fcom
add
fisubrl
js
cmp
daa
clc
cmp
inc
clc
mov
dec
cmp
adc
add
je
mov
lods
addr16
xor
add
aam
xchg
xchg
lret
sbb
add
repnz
push
lods
push
sub
cmc
ds
dec
mov
add
js
add
daa
clc
adc
adc
add
jle
xlat
jg
dec
push
add
pop
push
add
ficompl
data16
cwtl
xor
dec
jae
add
add
mov
mov
nop
jmp
sbb
rcrl
aaa
jnp
clc
fs
in
dec
pop
clc
xor
add
fildll
xor
stos
addr16
movsl
clc
data16
decl
popf
jmp
inc
scas
add
jl
nop
sub
lods
lcall
cmp
add
mov
push
mov
xchg
ret
nop
popf
mov
imul
cwtl
xchg
pop
dec
stos
xabort
fs
and
add
rcl
xchg
jo
add
jmp
xchg
add
rorl
adc
add
push
add
call
mov
cmp
cmp
clc
repz
mov
clc
cli
jmp
imul
clc
dec
mov
add
xor
add
add
mov
sahf
enter
xor
add
clc
sbb
mov
ja
add
nop
lods
or
dec
sti
lret
mov
xchg
popa
add
xchg
mov
clc
mov
mov
add
sub
cwtl
and
add
gs
push
clc
outsl
mov
adc
add
clc
sub
jb
add
jg
clc
out
push
add
pushf
test
adc
add
add
add
jp
sahf
sub
add
adc
add
add
dec
out
xabort
mov
imul
add
add
iret
pop
xlat
xchg
mov
add
add
jo
add
mov
leave
sub
clc
push
mov
int
clc
jp
mov
push
add
imul
or
mov
jno
add
cmp
jecxz
adc
add
cmp
dec
sar
xchg
cmp
add
add
add
add
add
mov
mov
add
std
rcl
pop
insb
in
push
jmp
shlb
mov
jl
push
lods
nop
jmp
jo
nop
int
rolb
je
cmp
add
adc
add
inc
clc
popa
add
mov
push
adc
add
jmp
ja
mov
faddl
dec
xor
add
mov
push
mov
xchg
ret
mov
add
insb
cmp
push
xor
nop
jmp
pop
add
jno
add
int
sbb
add
addr16
sbb
test
lcall
clc
sub
xabort
adc
add
push
es
cmp
ds
stc
mov
xor
add
add
cmp
or
cwtl
fld
clc
iret
ja
clc
aad
mov
cmp
push
pop
in
outsb
dec
push
cmp
add
lods
loop
jb
add
test
shrl
add
inc
add
xchg
sar
add
lea
add
and
add
stos
or
add
loop
xchg
sarl
ds
test
add
bnd
xchg
fsub
clc
adc
adc
add
loopne
xbegin
add
add
add
test
add
cmp
sub
add
add
add
insl
stc
inc
clc
mov
stos
xchg
mov
jge
lahf
mov
clc
cwtl
bound
add
add
mov
nop
jmp
jo
add
test
imul
clc
mov
sar
clc
aam
or
jle
clc
iret
mov
sbb
adc
add
push
sbb
cmp
clc
jecxz
addr16
aaa
add
add
push
sub
mov
in
sub
push
je
nop
jmp
jae
jnp
add
sbb
nop
jmp
or
and
add
cwtl
jg
jnp
jnp
clc
mov
inc
clc
cmp
cmp
dec
jmp
sar
movzwl
nop
jmp
inc
adc
and
add
add
clc
mov
aaa
clc
add
add
lcall
data16
xor
add
add
sar
repz
ja
rorb
in
cmp
mov
add
nop
jmp
rcl
incl
ljmp
add
add
pop
xchg
daa
clc
sti
inc
clc
scas
mov
add
adc
add
adc
add
test
arpl
add
add
rol
clc
mov
add
clc
notb
clc
jmp
adc
add
add
mov
add
jmp
clc
std
dec
dec
repz
jb
add
add
add
adc
aas
add
add
cmp
clc
cvtps2pd
cs
add
pop
cld
lahf
fistpll
sub
pushl
push
mov
xchg
ret
js
sbb
and
dec
xlat
cmp
push
push
add
pop
repz
clc
and
add
decl
test
lods
add
popa
add
or
stos
arpl
add
clc
arpl
add
clc
lret
data16
and
add
add
and
add
lea
adc
add
ja
clc
nop
jg
aas
test
cmc
mov
leave
mov
jns
ljmp
ja
je
clc
repz
add
xor
add
enter
xor
add
nop
jmp
ja
shrb
add
loop
dec
jnp
mull
jmp
nop
jmp
jno
add
push
clc
aad
clc
push
clc
nop
cmp
loopne
fcomi
jmp
cmp
pop
push
add
xchg
cmp
shll
cmc
inc
clc
iret
in
repnz
push
clc
cmp
bound
add
int
int
clc
shlb
sar
dec
daa
clc
sahf
ljmp
jne
stos
nop
mov
add
nop
jmp
pop
nop
ret
in
inc
add
dec
clc
loopne
pop
pusha
add
lods
xabort
add
icebp
sub
add
clc
addr16
mov
add
mov
clc
pop
cwtl
push
inc
clc
mov
in
push
movsl
clc
sbb
ffreep
clc
sbb
cmp
and
add
int
clc
insl
je
enter
xor
add
add
xor
mov
sub
xor
add
movsb
clc
enter
jl
scas
cmp
iret
inc
add
cmp
clc
pop
pop
push
add
sahf
cmp
push
mov
inc
add
roll
clc
xor
add
clc
nop
ss
inc
add
je
mov
push
adc
add
mov
add
sbb
leave
fldl
mov
clc
mov
mov
add
scas
shl
mov
push
add
xchg
lret
call
mov
pushf
mov
ljmp
clc
add
add
dec
push
nop
jmp
pop
test
data16
inc
add
jne
add
xor
add
add
nop
jmp
xchg
lods
mov
int
add
add
sbb
mov
add
inc
nop
jmp
ret
pushf
add
jbe
push
push
mov
xchg
ret
add
xor
add
add
adc
cmovb
add
imul
clc
mov
jg
outsl
add
clc
sti
mov
std
and
add
inc
add
xor
add
aad
mov
jle
int3
jno
add
xbegin
adc
lods
stos
rcrb
mov
jno
add
add
push
mov
xchg
ret
scas
rolb
nop
jmp
jo
or
mov
jno
add
add
add
xchg
xchg
cwtl
xchg
dec
cmp
add
cmc
cwtl
scas
pop
sbb
jl
add
je
add
lods
xbegin
add
clc
xor
add
dec
cwtl
ljmp
jmp
pushf
pop
add
push
add
mov
sbb
stc
nop
jmp
pop
js
out
pushf
pop
adc
clc
mov
xor
add
add
push
add
aaa
add
add
add
and
add
gs
sbb
lods
cmpsl
clc
cltd
dec
in
xor
add
loopne
es
mov
cmc
fxch
ss
add
mov
add
jns
clc
out
jb
add
mov
clc
popa
add
push
add
aam
or
add
ret
sub
clc
jns
jo,pn
add
add
clc
imulb
pop
hlt
clc
ret
clc
mul
clc
incb
insb
cmp
cmp
add
push
add
lret
add
add
xlat
lods
repz
add
sar
push
clc
addr16
rcrb
out
and
lret
sub
add
sar
cmp
add
cmpsl
clc
xchg
in
push
push
push
mov
xchg
ret
sub
sahf
pop
and
add
add
add
ja
add
out
cmp
add
add
add
pop
add
add
add
and
add
add
sub
cmp
add
adc
add
and
add
add
fildll
sub
test
mov
nop
jmp
jo
int
fists
xor
add
dec
iret
movsb
clc
testl
clc
add
add
xor
add
dec
push
add
xchg
ret
mov
decl
sub
add
add
jae
add
and
jmp
inc
pushf
sub
rcll
jbe
add
add
dec
xor
nop
sbb
add
out
pop
sub
icebp
popf
add
lret
clc
dec
jnp
out
bound
add
mov
xchg
ret
scas
add
add
cwtl
fimull
push
sbb
mov
add
mov
clc
aas
ss
add
decl
dec
add
mov
or
clc
ljmp
iret
daa
clc
jns
arpl
add
add
push
clc
jmp
decl
pop
adc
xchg
ret
jae
xchg
aaa
mov
adc
push
add
and
add
cmp
xor
add
clc
lret
in
cs
cmpsb
clc
cltd
xor
add
add
push
in
addr16
stos
enter
add
mov
add
bound
add
add
dec
adc
add
clc
and
add
stos
xlat
jg
clc
xchg
lock
inc
add
out
mov
je
and
add
mov
jmp
add
pop
mov
and
add
clc
loopne
xchg
ret
clc
cmp
in
mov
xabort
int3
loopne
xabort
add
push
add
mov
add
add
clc
inc
clc
jg
clc
mov
ljmp
add
inc
add
mov
add
cmp
and
clc
sbb
and
add
add
push
rcrl
lea
add
nop
jmp
ja
add
cmp
gs
addr16
dec
sar
mull
add
xchg
mov
pop
jg
mov
inc
clc
in
test
cmp
idivl
sbb
add
fbstp
scas
dec
test
xchg
mov
add
mov
cli
lods
inc
clc
lcall
add
clc
ss
nop
cli
inc
clc
add
push
xbegin
add
xor
add
push
sub
fisubrl
xor
add
xor
add
cmpsb
clc
es
lret
in
push
inc
add
mov
add
add
fnstsw
aad
cmp
add
in
cli
dec
dec
fwait
loopne
push
clc
pop
loope
dec
push
dec
cmp
cmp
add
movsb
clc
dec
pop
fcoms
jne
cmpsb
clc
mov
mov
add
mov
leave
nop
jmp
rcr
and
clc
mov
call
lock
add
clc
ret
mulb
add
cld
movsl
clc
in
fs
mov
dec
es
jecxz
mov
add
mov
adc
add
nop
jmp
push
inc
add
inc
clc
mov
jecxz
xlat
ss
clc
and
add
mov
in
sti
push
decl
nop
jmp
xor
inc
add
sub
xchg
js
clc
pushf
ja
clc
dec
outsb
xlat
jne
cwtl
jno
add
add
bound
add
add
add
imulb
das
std
inc
add
push
imul
mov
jo
add
clc
loopne
xor
fimull
add
mov
clc
in
leave
ret
mov
push
mov
xchg
ret
rcrb
cmp
sbb
fs
sbb
add
inc
clc
xchg
inc
add
push
int
add
xchg
dec
mov
add
fwait
adc
rcll
repnz
clc
xor
aaa
jns
imul
cmp
icebp
xchg
mov
sbb
adc
add
lea
nop
jmp
shl
jecxz
xor
xchg
aas
nop
aam
iret
in
mov
stos
bound
add
adc
das
mov
das
cmp
sub
bound
add
fs
sahf
int3
mov
sub
clc
or
add
mov
gs
cld
xchg
ret
clc
and
add
clc
mov
ja
dec
mov
push
nop
jmp
scas
adc
pushf
shrb
clc
mov
add
push
add
and
sbb
shlb
push
mov
cmp
or
dec
bound
add
add
dec
xor
add
add
lcall
jmp
add
lods
mov
add
test
clc
enter
clc
mov
pcmpeqb
nop
jmp
call
nop
pop
nop
outsl
aas
cmp
mov
add
push
data16
icebp
sub
ljmp
stos
jmp
and
add
nop
jmp
out
int
nop
out
add
ds
ja
ljmp
add
mov
cld
sbb
and
push
mov
xchg
ret
pop
clc
into
cmp
clc
push
clc
fsubrs
add
xor
add
clc
mov
push
push
push
mov
xchg
ret
add
add
dec
scas
xor
add
imul
inc
add
push
ret
ljmp
iret
ljmp
and
clc
dec
cmp
sahf
push
clc
movsb
clc
mov
shlb
xchg
fcoms
xchg
pop
push
ljmp
sub
out
add
movsl
clc
iret
bound
add
mov
cs
clc
push
cmp
add
inc
add
fidivl
add
xchg
clc
mov
clc
cmp
clc
cmpsl
clc
enter
or
sbb
inc
clc
outsl
jne
add
sar
add
popa
add
enter
pop
xchg
xor
mov
cltd
inc
add
jno
add
clc
fmul
cmp
clc
out
push
shlb
clc
adc
add
mov
add
and
add
pop
cmp
add
add
pop
lods
cmp
cmp
xchg
jno
add
lahf
inc
add
scas
cmp
clc
xchg
xor
add
cmp
add
ljmp
push
mov
xchg
ret
add
fbld
add
popf
jns
and
cmp
mov
clc
lret
daa
clc
scas
mov
mov
xor
hlt
test
jle
add
ljmp
jge
inc
add
mov
in
add
add
add
popf
repnz
sub
add
push
mov
inc
adc
fistpll
push
out
lea
stc
sub
pushf
push
mov
nop
jmp
fsubrl
fbstp
test
pop
lock
mov
xabort
sbb
xor
add
enter
add
clc
mov
clc
dec
sbb
sub
mov
clc
inc
add
pushf
mov
add
pop
push
outsl
pop
cmp
inc
add
into
xchg
jno
add
iret
jne
clc
sar
mov
add
sbb
pop
push
mov
cmp
nop
jmp
fistps
clc
push
clc
adc
add
jmp
test
fistps
test
cltd
mov
lods
jne
add
lods
aam
add
nop
dec
inc
add
bound
add
xabort
mov
clc
shrl
hlt
sub
mov
das
mov
push
ret
nop
jmp
ja
fisttps
mov
bound
add
jno
add
add
pop
mov
clc
add
add
add
sub
fs
pop
aam
add
push
mov
xchg
ret
and
flds
clc
mov
or
leave
lods
jecxz
int
and
imul
mov
es
pcmpeqb
cmp
jae
add
je
in
call
out
xlat
dec
cmp
mov
fdivl
xchg
shl
clc
pop
ds
std
aaa
adc
add
out
jb
add
add
or
clc
pop
mov
mov
add
stos
daa
clc
push
repz
clc
jg
roll
and
add
push
mov
nop
jmp
mov
and
in
out
sarb
add
cs
add
push
mov
push
mov
xchg
ret
xor
dec
dec
mov
adc
add
add
mov
and
add
loopne
xbegin
pop
pop
add
stos
loope
xchg
inc
add
add
stos
cwtl
scas
cmc
ret
clc
mov
popf
out
je
clc
mov
clc
cltd
push
add
jnp
in
fwait
and
dec
jecxz,pn
enter
clc
and
add
mov
cmp
clc
dec
leave
add
add
clc
cmc
xchg
jge
clc
call
out
test
aaa
movsb
clc
dec
mov
add
sub
add
sti
adc
add
clc
fsubl
or
aam
push
add
cmp
mov
ja
cmp
or
add
cltd
stos
xchg
aam
clc
int3
mov
fwait
cmp
cltd
dec
inc
clc
leave
insb
loope
xchg
in
popf
jbe
aaa
adc
add
scas
ret
xabort
idivb
fs
sti
in
dec
or
add
loop
dec
cmp
clc
mov
add
add
push
sbb
ficomps
mov
fldl
add
xchg
lods
js
push
clc
negb
add
add
or
sbb
jmp
add
test
mov
sbb
lea
add
add
add
add
or
add
add
add
jbe
jmp
add
in
or
mov
xor
add
test
out
mov
std
cmp
pop
mov
fwait
inc
add
pop
fistpll
add
pop
cmpsb
clc
xabort
add
out
dec
sub
add
sub
add
clc
sbb
clc
pop
jmp
add
sub
clc
dec
cmp
mulb
dec
fidivs
pusha
add
lret
add
xchg
popf
jnp
addr16
or
add
mov
cs
push
mov
int
leave
push
call
add
add
clc
inc
clc
out
jl
pop
clc
stos
jo
add
into
incl
les
add
add
fs
mov
es
and
popf
lcall
mov
jbe
lahf
cmc
out
xbegin
scas
sar
aam
xor
add
scas
pop
fnstsw
sub
and
in
mov
cmp
mov
dec
mov
sbb
add
addr16
xchg
push
pusha
nop
jmp
lods
add
cwtl
mov
add
insb
mov
adc
clc
push
out
popf
jns
pop
adc
add
jae
add
sar
lret
jle
mov
jo
add
and
add
lods
lahf
jns
clc
cmp
addr16
fistps
mov
xor
add
add
clc
inc
add
dec
dec
aam
add
sti
xchg
xor
add
add
add
repz
add
push
inc
add
or
pop
out
mov
clc
pop
pop
and
clc
int3
add
add
clc
repz
pop
and
add
lods
cmpsl
clc
popf
hlt
clc
inc
clc
sarl
and
int
xchg
jg,pt
xchg
mov
push
add
xor
add
popa
add
lock
add
and
add
ds
xlat
fldz
es
xor
imul
and
add
clc
add
xor
add
mov
xchg
ret
shr
add
cli
sub
enter
idiv
call
jnp
push
sbb
mov
xchg
ret
mov
clc
call
add
dec
mov
iret
sub
xor
add
cld
outsb
into
mov
imul
repz
add
clc
push
jae
add
add
dec
xchg
pop
into
cli
mov
lahf
jns
mov
add
add
xor
push
mov
xchg
ret
add
lea
clc
cwtl
test
ficomps
outsb
ret
mov
cmp
adc
repz
jne
add
dec
shr
xbegin
clc
notl
push
mov
xchg
ret
or
daa
clc
insb
lret
scas
test
jp
cmp
cs
sbb
clc
imul
clc
xchg
pusha
add
sar
imul
ljmp
push
mov
xchg
ret
add
add
jbe
clc
decl
jmp
add
lea
call
lods
sbb
cmp
sub
add
inc
add
cmp
add
rorl
xor
add
clc
cld
mov
mov
mov
es
cwtl
push
pop
pop
jbe
add
aas
inc
clc
xor
add
add
insb
clc
in
dec
xlat
mov
mov
inc
add
cmc
outsl
jo
add
add
pushf
imul
repz
add
jno
add
mov
xchg
ret
push
mov
clc
adc
add
nop
jmp
pushf
sub
add
int
pop
mov
jmp
jnp
add
adc
add
add
sbb
xchg
insb
repnz
add
clc
lods
mov
adc
add
clc
pop
dec
xchg
xor
add
aam
add
add
add
in
sub
clc
outsl
adc
add
int3
pop
adc
clc
sbb
rclb
add
inc
adc
sub
cmp
adc
add
add
test
pop
inc
clc
loope
bound
add
sbb
mov
clc
cmp
add
and
xchg
idivb
add
out
ret
clc
insb
aaa
mov
add
add
jb
add
dec
test
cmp
clc
sbb
clc
out
lock
inc
clc
xchg
and
stc
xor
add
out
mov
add
xor
add
push
lahf
jecxz
out
ud1
data16
das
mov
jae
add
hlt
mov
push
movsb
clc
and
add
add
clc
lahf
pop
dec
sar
mov
mov
add
sar
clc
fs
pusha
add
lods
sahf
repz
clc
fistl
imul
add
or
adc
add
fiaddl
add
aas
push
add
xchg
test
psubsw
js
inc
clc
js
add
mov
and
jmp
rorl
or
cmp
xor
add
sub
xor
clc
add
add
clc
add
add
call
xchg
lret
sar
das
daa
clc
jp
cmp
clc
popa
add
scas
cmp
add
dec
jns
cmp
clc
cltd
lods
add
xabort
clc
insb
mov
clc
and
add
clc
ds
fwait
popa
add
fsubp
clc
fs
addr16
dec
cmc
and
test
test
add
add
mov
out
sub
add
pusha
add
lret
cmp
ret
jne
push
add
bound
add
imul
cmpl
nop
jmp
add
xor
sub
and
add
clc
lock
das
xchg
test
aad
add
popf
inc
add
dec
jo
add
clc
es
jno
add
clc
xor
in
mov
sub
add
clc
mov
or
pop
jae
add
jbe
clc
iret
imulb
popf
or
fnsave
add
ret
mov
in
pop
call
in
vdivps
mov
sub
nop
jmp
jae
fcoml
mov
push
mov
ffreep
clc
das
gs
cmp
add
imul
call
add
and
bound
add
cmpsl
clc
popa
add
adc
add
sbb
clc
mov
stos
mov
jmp
inc
lods
add
int
outsb
mov
clc
ljmp
clc
adc
add
add
int3
call
lcall
in
cwtl
mov
add
and
dec
stos
stc
xchg
cmp
add
mov
sub
add
or
ljmp
add
enter
clc
add
pop
gs
sar
lret
rorb
clc
xor
add
std
sti
fs
hlt
fildll
jl
add
xor
add
mov
add
add
arpl
add
movsb
clc
jl
add
pop
movsb
clc
push
add
out
add
add
cmpsl
clc
dec
sub
lods
fwait
decb
add
jg
cmp
nop
jmp
jo
add
or
add
sar
sahf
xchg
icebp
das
push
xor
int3
mov
clc
push
mov
cs
push
add
repz
add
clc
adc
add
clc
xor
add
and
push
clc
fistl
sbb
add
push
je
nop
jmp
fsub
lea
add
sar
stos
jnp
inc
clc
jbe
cmpsb
clc
shrb
mov
test
addr16
cmp
mov
and
add
call
nop
jmp
add
xor
cwtl
pop
inc
add
jl
push
jecxz
cmpsl
clc
jle
clc
mov
adc
add
push
add
dec
ucomiss
hlt
xbegin
add
clc
mov
mov
ret
insl
fadds
iret
mov
clc
push
add
dec
push
out
lcall
popf
cwtl
inc
clc
in
or
pop
mov
clc
pusha
add
cmp
or
clc
cmp
mov
dec
xor
fs
rorb
sub
add
test
sub
mov
push
mov
xchg
ret
int
in
es
fiadds
jne
lock
clc
xor
add
dec
push
cmp
xabort
and
add
in
sahf
sbb
rcll
and
shlb
in
in
push
add
daa
add
ret
mov
clc
lret
repnz
adc
add
cmp
cmp
cmp
or
adc
icebp
fwait
xchg
inc
add
shrl
add
mov
add
mov
clc
adc
add
daa
clc
mov
clc
fwait
sub
mov
clc
dec
divb
cld
das
sbb
jmp
call
scas
pop
push
mov
clc
inc
clc
ljmp
mov
in
mov
std
scas
cmpsb
clc
mov
repz
clc
das
adc
add
sbb
or
gs
ds
mov
pusha
add
lret
add
repnz
iret
push
pop
sbb
jmp
xor
xchg
mov
push
nop
iret
outsl
adc
clc
mov
clc
test
inc
add
add
add
bound
add
in
cwtl
fiaddl
add
push
leave
cld
push
add
filds
cwtl
lahf
sub
movsl
clc
xchg
loope
sub
cmp
cmp
inc
add
sar
add
add
mov
nop
jmp
faddl
pop
fldl
add
clc
pop
clc
fcmovnb
clc
mov
cmp
rorb
bound
add
pop
outsb
in
dec
add
add
cmp
add
jnp
cli
xchg
inc
clc
dec
rol
clc
add
add
add
cmp
add
sbb
or
add
clc
popf
inc
clc
add
add
stos
push
add
sahf
xor
add
rolb
add
pop
sbb
add
adc
lahf
nop
test
rol
clc
jecxz
add
add
push
add
dec
add
add
cmp
cmp
add
and
push
dec
add
ja
inc
lods
push
dec
cmp
ss
sti
cmpsb
clc
test
rclb
add
insb
fnstsw
mov
clc
pop
aaa
gs
jecxz
pusha
add
je
mov
add
into
adc
add
jmp
add
and
add
jl
pop
mov
adc
aas
jmp
clc
mov
add
add
adc
clc
sub
adc
mov
lock
arpl
add
pop
xchg
cs
clc
mov
jno
add
jnp
add
adc
stc
or
add
call
clc
out
inc
clc
xor
add
mov
cmp
mov
mov
test
xchg
sub
adc
add
in
pop
fildl
int3
push
add
and
add
xlat
mov
test
sbb
nop
jmp
adc
sub
inc
clc
ss
xchg
xor
push
mull
add
enter
fxch
xchg
scas
xbegin
add
sub
sti
push
mov
stos
pop
mov
scas
lahf
dec
clc
mov
add
cltd
lods
xchg
stos
and
add
sub
sbb
popa
add
mov
fidivrl
push
add
inc
clc
jae
add
add
cmp
push
mov
xchg
ret
add
adc
mov
push
mov
clc
outsb
test
add
std
loope
enter
cmp
or
xchg
xbegin
add
mov
sub
nop
jmp
jmp
pop
cmp
clc
std
mov
add
pop
dec
pop
jb
add
mov
add
add
clc
ds
int3
daa
clc
mov
fmulp
movsl
clc
pop
bound
add
and
scas
push
add
movsl
clc
mov
add
loope
and
add
add
pop
repz
imul
sub
das
filds
dec
inc
add
mov
add
xor
add
fdivr
das
flds
clc
and
add
mov
xor
add
scas
and
add
add
xlat
and
add
js
sbb
clc
or
lahf
fiadds
fsubl
add
cmp
clc
xchg
cs
sbb
mov
or
popa
add
lods
repnz
add
divl
add
in
pop
inc
add
and
mov
add
add
add
fsubrs
roll
clc
flds
clc
sti
rcll
add
sti
ret
clc
xchg
in
jmp
clc
clc
xchg
jno
add
adc
add
pop
sub
clc
add
add
call
clc
jae
add
clc
xchg
mov
dec
in
sar
es
test
nop
jmp
jecxz
sbb
cmp
clc
mov
add
jno
add
call
xchg
in
jg
stos
stc
inc
add
mov
push
mov
nop
jmp
jecxz
filds
rcrl
cmp
or
clc
dec
inc
clc
xchg
cmpsb
clc
cmpsb
clc
jl
clc
inc
clc
or
ret
cvtps2pi
jmp
clc
js
pop
xor
add
dec
cli
jb
add
mov
add
add
add
clc
jmp
jge
add
sub
fwait
out
add
add
add
mov
mov
jecxz
xor
add
add
enter
daa
clc
sahf
test
dec
push
clc
js
insb
pop
cs
js
clc
jg
clc
je
mov
clc
insl
fsub
clc
pop
or
add
add
and
push
mov
out
stc
fcomps
lcall
nop
jmp
xor
clc
push
xchg
pop
es
fcmovb
clc
testb
xlat
std
mov
dec
mov
je
pop
addr16
cmp
add
adc
add
add
mov
lea
dec
nop
jmp
scas
add
adc
and
add
clc
mov
cmp
out
mov
lret
sar
shld
dec
mov
xchg
jp
mov
cli
cmp
xchg
es
fisubrl
clc
js
shrl
out
push
cmp
push
dec
xchg
add
imul
nop
push
or
stos
sahf
mov
sub
clc
std
movsl
clc
cmp
shlb
jmp
fildl
jae
add
lret
add
add
sub
test
add
nop
jmp
int
js
add
lcall
lar
add
ss
add
xchg
pop
sub
cli
and
add
popa
add
test
in
xchg
dec
push
inc
clc
mov
aas
in
xchg
push
xchg
cmp
add
and
popa
add
adc
jo
add
je
mov
add
clc
outsb
add
jle
mov
and
cmp
cmp
iret
pop
sar
clc
and
add
jne
jl
and
add
jmp
xchg
lds
mov
cmp
dec
cwtl
loope
hlt
call
xbegin
xor
add
clc
sbb
adc
pushl
nop
jmp
cmp
fmull
add
fsubl
add
leave
sub
clc
insb
jp
clc
dec
loopne
push
clc
shl
clc
xchg
cmp
push
pop
pop
clc
lret
sbb
sar
fisttps
in
add
sar
pop
ss
pop
inc
add
ret
lods
sbb
add
clc
cs
adc
add
clc
jg
fcmovnb
clc
clc
ret
clc
lahf
mov
leave
pop
clc
or
add
fsts
adc
add
sub
mov
add
add
test
outsl
mov
cmp
add
and
add
dec
push
add
outsb
aas
dec
gs
sbb
repz
push
jmp
inc
inc
inc
adc
xchg
jnp
dec
inc
clc
test
std
test
jp
clc
lods
dec
stos
shlb
fisubl
add
cmp
dec
stc
ljmp
jle
clc
mov
clc
repnz
scas
bound
add
in
movsl
clc
mov
add
and
add
repz
fwait
cmpsb
clc
lods
mov
inc
add
cmp
lcall
clc
popf
mov
mov
dec
cwtl
enter
cmpsl
clc
icebp
push
pop
or
kmovw
enter
clc
mov
add
nop
jmp
push
add
fsubl
add
push
add
cld
pop
or
mov
imul
xor
ds
add
ficoml
add
cmp
lahf
pop
sbb
cmp
clc
scas
mov
cld
adc
add
jecxz
dec
push
clc
xchg
in
ret
clc
out
gs
and
jb
add
add
cmp
dec
xchg
fisubs
add
xchg
lret
dec
iret
pushf
sti
xor
add
incl
neg
pushl
push
adc
cmc
aaa
inc
add
xchg
dec
clc
or
sub
call
nop
jmp
repz
movsl
xor
add
mov
cmpsb
clc
cmp
jmp
jge
in
ret
ret
add
sub
mov
clc
movsb
clc
inc
add
xor
add
lret
add
dec
jp
sbb
clc
jp
clc
sub
cmp
clc
push
jmp
ljmp
inc
clc
jecxz
mov
add
mov
push
clc
xchg
ss
sub
push
nop
jmp
mov
js
pop
xchg
stos
popf
xor
xchg
popa
add
ss
add
stc
add
add
imulb
add
add
cltd
cmp
jmp
clc
ljmp
clc
add
pop
sar
fsubl
add
jns
or
add
xchg
sub
clc
loopne
mov
mov
js
int3
loop
cmp
mov
add
outsb
and
add
inc
clc
pop
js
push
add
add
lods
push
sbb
add
add
xor
add
test
lahf
ret
clc
scas
jl
add
pop
aam
cmp
clc
push
sub
add
clc
in
es
lret
fisttpl
cmp
xor
add
mov
add
dec
repnz
add
add
xor
add
add
add
add
add
sbb
stos
out
cmp
clc
or
add
or
push
mov
clc
lea
jbe
add
loopne
adc
add
sub
add
cmp
push
add
fwait
dec
xlat
out
cmp
clc
sub
jp
cmp
mov
mov
clc
inc
add
sar
add
mov
scas
or
mov
lods
mov
xor
add
push
clc
enter
jl
out
stos
jmp
hlt
pop
push
clc
test
outsb
sbb
xor
add
add
cmp
fimull
lret
jne
sub
clc
mov
call
pushf
mov
add
out
push
cmp
xchg
ret
rclb
add
faddl
add
outsl
test
mov
add
insb
sub
fstpt
push
clc
test
add
add
sub
sub
add
es
mov
cmp
push
shrl
push
mov
xchg
ret
lods
adc
negb
clc
repz
add
add
add
add
into
movsl
clc
sub
add
xor
add
clc
loop
push
cmp
sar
mov
add
mov
sbb
fistl
add
pushf
scas
stos
or
xor
lahf
add
add
clc
sub
clc
nop
daa
clc
sub
xchg
icebp
push
add
or
lods
mov
add
add
add
clc
sar
ret
nop
jmp
gs
scas
xor
inc
jecxz
push
add
sub
add
pop
sub
lahf
cld
cli
scas
push
and
add
add
loope
xor
add
or
int
push
int
pop
sub
test
int3
loopne
pop
push
add
jnp
add
fs
dec
in
ss
clc
int
add
dec
sub
mov
clc
mov
add
xchg
aam
add
es
sbb
push
nop
jmp
jo
test
jae
and
test
movsb
clc
xabort
add
rolb
clc
jo
add
int3
cmp
mov
add
mov
dec
aad
in
pop
out
mov
jno
add
daa
clc
fidivrs
sbb
jmp
filds
add
xor
and
mov
add
int
fisubs
push
data16
cmp
pop
sbb
push
stc
aam
clc
mov
add
add
add
clc
inc
add
pop
icebp
add
sub
cmp
fs
mov
sti
lods
cs
lcall
in
mov
xor
add
jecxz
jle
shll
add
aad
xchg
jmp
jge
ret
clc
push
add
dec
fcom
popf
jbe
add
xchg
xor
add
add
rolb
jmp
add
cwtl
fldl
add
es
mov
loop
nop
jmp
nop
add
cmp
or
xchg
jmp
add
ss
in
ja
js
rorb
add
out
add
add
clc
pop
outsl
nop
pop
pop
clc
push
add
ljmp
add
or
mov
out
arpl
add
clc
aad
clc
and
add
mov
add
jle
clc
push
add
test
ss
push
add
cld
adc
add
jecxz
fistpl
mov
out
adc
add
clc
inc
add
pop
adc
add
cwtl
sub
pop
add
add
add
ds
jne
nop
jmp
pushf
and
and
outsb
pusha
add
cltd
or
popl
jae
add
pop
fwait
mov
gs
sub
rcll
adc
add
aad
push
add
pop
daa
clc
cmp
cmp
inc
clc
sahf
and
add
inc
add
or
mov
sar
add
or
add
add
inc
add
mov
add
add
clc
call
add
incl
enter
sbb
and
jmp
add
ret
sub
inc
jno
cmp
rcl
stos
push
cli
jg
pop
cwtl
das
int
add
add
ret
clc
mov
cmp
adc
add
cmp
clc
mov
clc
fiadds
and
add
shlb
add
or
mov
cli
cmpsb
clc
shl
clc
lods
ljmp
imul
add
fildll
add
adc
add
test
xchg
cld
es
dec
jg
xor
add
jno
add
push
add
jmp
clc
jbe
clc
pusha
add
std
push
cs
ds
imul
repz
clc
arpl
add
clc
into
fsubp
clc
fstl
add
xchg
mov
lock
cld
cmp
sub
xor
add
dec
sub
cs
or
clc
xor
cmpsl
clc
jl
mul
clc
add
add
add
add
dec
cmp
clc
cmp
cmp
nop
jmp
jo
push
clc
add
enter
sbb
mov
add
add
add
add
loope
mov
add
getsec
pop
sbb
add
add
add
imul
cmp
add
test
mov
add
add
add
lahf
sbb
xor
clc
push
sub
add
jae
scas
pushf
add
stos
das
cmp
push
and
fldenv
fbld
dec
mov
sub
cmpsb
clc
lods
test
sbb
mov
in
out
push
jmp
lret
push
inc
clc
outsb
dec
outsl
iret
add
add
push
add
clc
push
add
test
clc
stc
imul
ret
xchg
ret
cmp
jno
lret
shll
xchg
mov
pop
xlat
sbb
in
fs
inc
clc
enter
clc
cmp
lahf
mov
clc
inc
add
test
push
and
add
rorb
cmp
or
sarb
xchg
xor
add
call
pusha
add
insb
pop
clc
xchg
shll
in
xlat
cmp
imul
add
add
add
xchg
jno
add
pop
clc
clc
xor
add
jb
add
fstpl
int3
dec
bnd
add
inc
clc
jnp
clc
jp
or
jmp
sar
clc
frstor
mov
xchg
movsb
clc
mov
push
add
imul
cmp
add
sub
cmp
out
cmp
data16
cld
stc
cmpsl
clc
sub
and
add
lcall
gs
cmc
cmp
clc
jecxz
sbb
jne
nop
jmp
nop
incl
cmp
add
push
pop
inc
clc
rclb
clc
xchg
jge
sbb
pusha
add
push
add
aaa
imul
push
and
ljmp
test
sub
loope
ljmp
push
mov
add
jecxz
lods
scas
xchg
pop
push
clc
or
add
jnp
cmpsl
clc
aam
add
xlat
mov
pop
push
or
push
mov
add
add
clc
pop
pop
cmp
mov
dec
xor
add
jns
mov
push
in
test
push
add
mov
sbb
jae
add
clc
adc
add
nop
jmp
gs
call
push
xor
add
pop
mov
xchg
cld
inc
add
ret
xchg
aad
jmp
inc
clc
out
jl
rcr
sbb
jmp
jecxz
and
inc
jns
rorl
clc
jp
add
push
add
arpl
add
ret
clc
aam
clc
arpl
add
stos
leave
outsb
push
add
sub
sub
daa
clc
or
aaa
xor
add
xchg
sar
test
jo
add
clc
sub
add
and
add
add
add
add
sub
clc
test
mov
pop
add
sbb
test
adc
add
add
iret
pusha
add
or
sub
add
xchg
insb
in
out
cmp
add
testb
lahf
xchg
clc
or
jmp
pop
mov
lret
add
scas
pop
gs
mov
inc
clc
cmp
pop
leave
push
mov
nop
jmp
scas
xchg
lods
inc
int
shrb
jne
dec
lods
jo
add
pop
mov
cmp
inc
clc
int
add
add
lret
clc
lcall
cmp
add
in
jmp
ja
aad
clc
aaa
pop
jl
sti
in
jns
jg
sarb
bts
into
gs
out
dec
sti
cmp
clc
sahf
addr16
or
add
test
add
jb
add
pusha
add
das
and
lods
mov
add
inc
clc
sub
inc
add
xor
add
insb
push
add
inc
add
sar
in
mov
mov
inc
add
jo
ja
cmp
sbb
sub
in
mov
jb
add
cmc
loopne
xor
add
and
add
and
fadds
sbb
aaa
cmpsl
clc
mov
add
test
cmp
xor
add
shl
clc
push
add
shrb
cmp
ficoms
mov
iret
sub
add
std
xor
add
xchg
imul
xchg
xlat
jecxz
clc
mov
sbb
gs
popa
add
std
mov
jecxz
incl
or
cmp
pushf
xchg
xchg
gs
gs
add
add
xchg
sbb
clc
sub
add
add
add
aaa
push
clc
cmp
push
clc
pop
jmp
in
push
xchg
inc
clc
sbb
outsb
hlt
xor
clc
sarb
clc
cwtl
cmp
inc
add
test
insb
cmp
add
clc
mov
mov
in
repz
in
out
push
jnp
lods
xor
clc
pop
gs
cmp
push
js
sar
push
ss
clc
bound
add
mov
clc
push
mov
nop
jmp
lods
pop
and
adc
add
add
fsubr
sub
pushf
sub
imull
lods
sar
pop
int
add
aam
leave
cmp
add
push
add
fs
sub
hlt
mov
add
ret
out
pusha
add
xchg
lock
clc
cmp
inc
add
dec
pop
das
cli
xor
add
add
sbb
lock
cli
inc
clc
jecxz
inc
clc
inc
clc
xbegin
clc
inc
clc
bound
add
aad
inc
clc
inc
clc
cwtl
cmp
inc
clc
clc
shlb
xchg
or
add
mov
xchg
ret
nop
and
pusha
add
shl
lods
repnz
sbb
clc
arpl
add
lret
pop
inc
clc
mov
mov
dec
imul
clc
lret
push
stc
enter
clc
repz
clc
push
clc
inc
clc
xchg
cwtl
inc
add
aas
dec
cs
adc
add
fimuls
icebp
pop
pop
mov
adc
add
dec
dec
loopne
enter
int3
jo
add
jge
out
inc
add
sbb
clc
add
add
mov
movsl
clc
gs
fdivr
cmp
add
pusha
add
clc
outsl
xchg
insl
dec
cmp
or
clc
enter
clc
mov
call
insl
ret
clc
stos
jb
add
hlt
loop
sbb
add
jp
mov
mov
idiv
cld
add
add
add
xor
out
sub
in
clc
add
add
clc
cli
jno
add
and
add
add
rep
nop
jmp
pop
ss
inc
add
ja
add
imul
nop
jmp
shll
and
add
pop
ret
clc
cltd
fwait
sub
add
sbb
sar
jmp
add
hlt
mov
in
cmpsb
clc
jmp
and
push
add
daa
clc
and
mov
clc
xor
add
popa
add
cmp
clc
in
insb
pop
hlt
pop
pop
out
cli
dec
testb
xor
clc
insb
sbb
aas
mov
dec
pop
leave
pop
add
js
roll
loop
cmp
clc
xchg
sbb
add
add
clc
inc
clc
popa
add
pop
pop
jle
xabort
inc
add
pusha
add
dec
gs
scas
repnz
cld
sub
sar
add
xor
pop
lahf
ret
mov
shll
and
add
add
clc
add
outsb
pusha
add
and
add
clc
mov
nop
jmp
pushl
xor
mov
clc
inc
add
repz
cmpsb
clc
cmp
divb
jecxz
or
rcl
enter
push
cmpsl
clc
clc
stos
pop
pop
mov
clc
mov
decl
test
idiv
call
ljmp
sti
cmpsb
clc
add
or
dec
cmp
clc
aaa
mov
or
add
scas
fldt
inc
add
inc
add
xor
add
stc
mov
add
xchg
out
sar
clc
push
clc
mov
push
sbb
clc
pop
xlat
mov
add
decl
jmp
add
cmp
gs
idivb
rcrl
in
adc
clc
iret
sbb
jmp
adc
and
add
mov
pop
rclb
push
mov
clc
cmp
jae
add
clc
mov
fisttps
fdivrs
call
add
push
clc
sub
add
rcl
cmp
clc
cmp
dec
push
add
repnz
add
mov
add
pop
in
jnp
mov
cmp
test
add
mov
dec
and
add
pop
mov
add
push
nop
jmp
js
movsl
lods
xlat
pop
mov
xchg
mov
xchg
add
jecxz
inc
add
xor
jg
imul
add
add
cwtl
inc
add
add
fdivl
in
jb
add
add
dec
mov
add
clc
out
mov
clc
dec
push
dec
and
add
inc
add
mov
add
xor
add
test
and
scas
sarb
jg
add
sub
jg
clc
rorl
mov
ja
dec
sbb
dec
test
loopne
call
add
dec
sahf
cli
pop
mov
xchg
ja
clc
mov
pusha
push
mov
xchg
ret
jnp
jecxz
insl
pop
add
add
mov
pop
push
adc
jmp
adc
nop
lods
pop
sahf
js
add
add
cld
and
add
add
pushf
jge
mov
nop
jmp
mov
movsl
add
add
popf
sti
inc
add
mov
movsb
clc
addr16
dec
cmp
add
push
jns
in
mov
jne
and
add
add
movsl
clc
or
clc
xor
add
dec
xchg
jbe
xchg
and
add
leave
mov
add
xchg
dec
test
ds
add
test
add
mov
pop
add
add
clc
xchg
pusha
add
lret
jp
pop
pop
das
leave
mov
xchg
addr16
xchg
mov
add
pop
cmp
sub
clc
js
imul
nop
data16
add
add
cltd
cli
add
add
add
outsb
popa
add
xchg
mov
mov
adc
pop
imul
clc
fsubs
add
mov
clc
pusha
add
xchg
mov
clc
nop
pop
mov
dec
dec
cmp
daa
clc
add
jmp
add
ja
sbb
rep
dec
sbb
clc
test
cmp
add
cli
mov
je
add
loop
xchg
repz
mov
add
nop
jmp
add
and
dec
ss
clc
ret
aas
mov
cld
std
fimull
cmp
pop
pop
pop
mov
iret
xlat
push
clc
stos
push
out
out
xabort
add
imul
add
loopne
clc
xlat
cmp
push
test
inc
add
cltd
pop
out
dec
sub
add
fnstcw
xchg
mov
clc
sub
lret
cmp
add
push
insl
stc
mov
cmp
nop
jmp
pop
inc
jae
and
clc
jmp
out
cmp
clc
mov
clc
popa
add
js
clc
jae
add
jg
nop
jmp
or
and
or
clc
add
xchg
pop
jmp
mov
enter
fdivr
sub
cmp
nop
jmp
xor
call
add
mov
add
mov
je
dec
lcall
jmp
xor
add
add
add
cltd
jecxz
in
dec
mov
xchg
mov
add
clc
cmp
mov
push
add
and
add
xchg
cli
mov
mov
add
add
ffreep
out
into
mov
in
iret
je
adc
add
test
mov
in
stos
push
out
inc
add
sub
rol
clc
in
stc
dec
ret
mov
insl
inc
add
cmp
clc
and
add
stos
pop
mov
cmp
mov
pop
inc
add
imul
adc
add
nop
or
xor
test
cli
lods
sbb
shrl
mov
add
nop
gs
xchg
xor
add
add
cmp
call
lcall
push
outsl
dec
cmpsl
clc
cwtl
lods
bound
add
sar
clc
mov
jo
add
cmp
add
fidivrs
cmpsl
clc
daa
clc
lea
into
add
or
clc
push
add
ds
clc
inc
add
xchg
push
add
add
add
test
add
fs
pop
mov
add
ja
clc
sahf
and
stc
fs
sub
pop
pop
rorb
xchg
dec
lcall
mov
xchg
ret
roll
xbegin
add
cmp
nop
jmp
ljmp
clc
sub
clc
imul
clc
push
add
nop
jmp
inc
rclb
cmp
add
xchg
clc
rol
clc
lods
pop
in
dec
mov
add
push
mov
mov
clc
ljmp
clc
push
add
and
add
add
jmp
clc
jns
fwait
imul
clc
aaa
scas
sbb
add
add
add
cli
loope
mov
push
mov
nop
jmp
lea
faddl
ja
vpmuludq
es
movsl
clc
push
sub
inc
add
mov
xchg
icebp
cmp
sub
add
addr16
xlat
pop
mov
dec
sbb
pop
cmp
mov
add
aas
jge
and
fstpl
or
clc
inc
add
push
add
cmp
add
hlt
adc
add
filds
add
jp
jle
jne
clc
add
add
clc
and
add
add
adc
add
stos
push
mov
xchg
ret
ss
and
pop
in
jnp
add
xchg
hlt
in
sub
pop
clc
sbb
repz
clc
xabort
aaa
aas
mov
loopne
mov
cmp
int3
pop
cmc
sub
mov
clc
out
sbb
test
or
clc
push
xchg
rclb
cmp
stos
test
out
lret
cld
fidivs
clc
xchg
data16
xchg
adc
add
clc
mov
scas
pop
mov
int
add
xor
add
xchg
xor
add
push
pusha
add
fiaddl
mov
add
nop
jmp
repz
stos
aam
clc
mov
mov
push
mov
xchg
ret
add
push
add
and
add
dec
and
add
pushl
nop
jmp
pop
push
lds
out
test
jb
add
lods
sbb
outsl
ret
clc
inc
clc
sar
push
add
xor
add
dec
add
add
lahf
sub
sarl
add
fiadds
jns
mov
clc
gs
or
gs
fistl
add
call
cld
cmp
mov
inc
add
int
cmp
dec
gs
cmp
pop
xchg
adc
add
clc
int
shrb
sar
aam
xchg
and
cmp
and
add
aas
xbegin
add
jg
pop
sub
add
add
add
sub
or
hlt
out
xor
lods
lahf
shrb
cli
nop
jmp
ljmp
push
pop
nop
jmp
call
lea
mov
pop
test
adc
add
mov
inc
clc
lods
push
nop
jmp
js
rcll
in
jns
mov
clc
cli
push
add
ja
add
mov
cmpsl
clc
test
jp
add
test
sbb
clc
pop
sti
mov
xlat
movsl
clc
add
and
add
jmp
add
outsl
pop
jl
jmp
dec
mov
add
xor
add
das
mov
sub
fdivr
sahf
int
pop
push
aam
jmp
adc
add
in
inc
clc
sarl
clc
mov
nop
jmp
ja
sub
popf
insl
lahf
mov
xor
sar
add
aam
dec
pop
pop
stos
add
add
xchg
cltd
cli
push
add
and
mov
add
mov
jne
clc
push
push
add
cmp
es
cmp
stos
gs
in
mov
flds
mov
idivl
sbb
clc
xchg
push
xchg
pop
clc
addr16
and
clc
movsl
clc
fidivrs
mov
mov
add
dec
xabort
mov
nop
jmp
mov
xchg
jo
sub
add
fdiv
fimull
iret
adc
add
sub
pop
test
ret
clc
and
add
clc
in
push
clc
ja
xabort
clc
rol
clc
xor
add
dec
mov
add
mov
insl
inc
add
mov
mov
add
notb
mov
clc
out
or
lods
adc
add
pop
pushf
inc
clc
pop
clc
and
add
sbb
pop
shlb
sbb
clc
fistpl
add
lods
loop
sub
add
sbb
inc
add
inc
clc
in
pop
inc
clc
mov
add
xabort
in
sub
stc
xor
adc
add
add
clc
movsl
clc
lea
mov
add
mov
clc
sub
clc
fbstp
das
add
nop
jmp
decl
add
jo
add
fsub
clc
xor
add
or
add
xlat
int
stos
out
adc
add
test
mov
add
mov
pop
push
mov
xchg
ret
sub
cmp
clc
jl
add
dec
int3
ds
sar
repz
pop
clc
jmp
cwtl
scas
xchg
sub
clc
xbegin
sub
pop
jp
and
add
mov
cltd
inc
clc
xchg
cwtl
test
sbb
clc
shrl
stos
push
sar
and
add
mov
js
popf
pop
pop
jns
clc
insb
addr16
iret
imull
and
add
add
jns
call
jnp,pt
add
nop
jmp
fbstp
cmp
add
ja
test
mov
clc
pop
sub
mov
mov
jl
and
add
into
or
pop
aad
sub
and
add
pusha
add
lahf
sbb
mov
sub
arpl
add
add
adc
add
stc
imul
sar
mov
nop
jmp
xor
ss
cld
leave
test
jo
add
add
adcb
ljmp
push
add
clc
inc
add
stos
xchg
dec
call
mov
xchg
ret
test
clc
lods
push
push
add
dec
int
xchg
fwait
adc
xchg
add
call
add
add
and
mov
in
out
lcall
adc
add
add
inc
add
test
rcll
stos
dec
and
add
adc
add
dec
test
add
mov
mov
push
pop
add
add
repz
movsl
add
test
mov
add
pop
inc
add
push
cmpsl
clc
test
push
stc
aam
add
out
lods
test
clc
dec
inc
add
lahf
fcomps
daa
clc
das
mov
clc
and
add
add
sub
jns
push
stos
push
movsl
clc
mov
push
add
fstpt
clc
out
cmp
mov
clc
scas
inc
clc
pop
cmp
add
into
sysenter
insb
lcall
stc
add
clc
jge
bound
add
add
popl
decl
sti
pushl
lea
xchg
jo
mov
push
inc
clc
mov
in
gs
clc
jne
clc
sbb
inc
add
jp
cmp
xchg
cmp
add
es
sahf
lcall
imul
jb
add
add
fsubs
arpl
add
adc
push
push
mov
xchg
ret
repz
mov
fisubs
add
add
clc
lock
add
aaa
cli
xchg
add
add
mov
add
inc
clc
add
add
add
lret
cmp
addr16
mov
test
sar
sub
clc
rcl
xor
add
and
add
rorl
clc
mov
add
sbb
add
sarb
jl
clc
push
icebp
nop
jmp
adc
lea
add
add
lea
nop
jmp
fsubl
int
clc
in
roll
jbe
sbb
enter
fcoml
and
add
cmp
nop
rcrb
mov
out
out
fidivrl
cmp
ret
clc
mov
add
cltd
je
mov
in
xor
add
imul
sbb
clc
out
dec
dec
outsb
es
xor
add
and
add
add
mov
mov
clc
push
test
push
mov
xchg
ret
inc
add
add
icebp
icebp
addr16
fistps
mov
leave
mov
clc
leave
dec
loope
iret
xor
add
stos
jp
push
inc
clc
sbb
clc
mov
cmp
clc
cld
in
pop
lret
push
add
and
add
cmp
dec
mov
clc
inc
clc
movsb
clc
stc
hlt
hlt
fistps
jmp
std
jno
add
mov
mov
pushl
lods
shrl
jp
sar
add
or
ds
fs
loop
lret
shrl
clc
shll
push
mov
mov
mov
xchg
ret
add
jno
clc
lret
clc
int3
iret
or
clc
add
add
add
stos
push
ffree
clc
add
inc
clc
dec
test
clc
aad
pop
add
add
clc
xchg
sub
jns
sub
clc
inc
clc
sub
gs
loope
dec
outsl
inc
clc
test
or
dec
lock
jmp
or
add
sar
mov
xor
clc
push
jae
add
scas
jne
clc
jmp
clc
std
inc
add
push
add
or
mov
clc
jo
add
add
out
mov
fmul
fdivr
dec
inc
clc
push
clc
push
xchg
rcrl
dec
or
add
mov
add
clc
mov
push
mov
xchg
ret
inc
mov
xchg
mov
cli
dec
add
nop
jmp
ja
inc
xchg
mov
roll
clc
inc
add
pusha
add
ss
pop
cli
fstl
icebp
sbb
inc
add
mov
in
fldcw
sarb
xor
add
lods
adc
mov
push
mov
xchg
ret
sbb
add
add
clc
or
clc
mov
or
nop
jmp
xchg
inc
push
push
mov
clc
loop
sub
aam
mov
add
in
insb
aaa
xor
cmp
mov
cmp
shl
nop
jmp
sub
aad
lcall
aaa
fwait
outsl
mov
clc
out
bound
add
add
aad
leave
jge
sub
roll
or
add
cld
push
add
push
add
clc
xor
cmp
repnz
imul
clc
sub
add
jecxz
add
add
push
add
repnz
jp
pop
das
test
xchg
jns
add
push
add
add
add
add
mov
ds
mov
jmp
call
pushl
add
lea
pop
ja
cmc
mov
jmp
sbb
lods
pop
jmp
sub
add
sub
or
sahf
push
aam
mov
clc
mov
dec
push
add
lock
add
nop
mov
add
clc
jb
add
cmp
test
xchg
jae
add
cmp
add
lret
inc
clc
cmp
fwait
cltd
xor
clc
sbb
add
clc
popa
add
into
fidivl
lret
hlt
pop
jb
add
add
lods
loopne
pop
into
jo
add
fildll
data16
mov
outsl
movsb
clc
insb
std
lret
cmp
mov
sub
add
nop
jmp
add
mov
cmc
jae
add
clc
jae
add
clc
mov
in
lods
inc
clc
push
add
jg
clc
sbb
data16
incl
call
clc
out
adc
add
sbb
stc
jge
jb
add
pop
fwait
int3
pop
sbb
icebp
xchg
pop
sahf
cmc
cmp
clc
cmp
dec
pop
dec
jg
add
mov
clc
ret
clc
icebp
es
add
add
add
es
es
pusha
add
jl
sbb
add
testl
ljmp
push
nop
jmp
lds
shrb
adc
add
das
mov
add
loop
int3
lods
mov
xchg
adc
add
iret
pusha
add
jl
test
sub
cmp
cmp
xchg
js
pop
xchg
test
mov
in
popf
inc
clc
ror
es
mul
clc
cmp
bound
add
daa
clc
stos
xabort
add
or
aas
test
jle
sbb
add
pop
xchg
push
add
hlt
and
push
cmp
add
je
movsl
cmp
clc
push
aad
pop
pop
cmovb
add
xor
add
jno
add
inc
clc
fs
in
push
add
shrl
clc
sbb
and
stc
aad
push
add
cmp
pop
scas
aam
inc
clc
inc
clc
pusha
add
stos
popf
scas
movsl
clc
lods
pop
js
ror
pop
fsubrs
mov
leave
nop
jmp
add
adc
pop
clc
xabort
add
loope
out
cmp
pop
fadds
data16
lcall
jmp
movsl
inc
pop
cmp
add
mov
mov
test
push
cmp
add
pop
int
and
add
call
jmp
flds
inc
call
add
cmp
out
loopne
adc
pop
test
scas
iret
jecxz
out
gs
data16
and
lsl
add
jnp
mov
jmp
lods
sub
add
add
add
clc
scas
lret
data16
dec
xor
add
add
mov
push
clc
pushf
dec
sti
lods
sbb
test
jecxz
call
fildll
stos
int
iret
stc
aaa
aaa
int
push
cmp
clc
xchg
data16
aaa
xchg
nop
fsincos
test
clc
repz
mov
clc
aaa
mov
rep
push
mov
xchg
ret
xchg
sub
push
mov
xchg
ret
fbld
in
in
adc
clc
arpl
add
add
cmpsl
clc
mov
sar
clc
xchg
pop
xbegin
mov
add
sbb
add
mov
add
pop
push
jmp
add
sar
xlat
sbb
mov
out
xor
cltd
faddl
add
outsl
xchg
push
add
and
add
popf
xlat
cmp
and
jl
clc
dec
ja
add
dec
cmp
add
lea
add
push
cmp
xchg
ret
sbb
scas
mov
clc
inc
add
xchg
aad
jmp
add
add
add
inc
outsb
data16
jo
add
clc
pop
scas
sub
loope
sub
add
push
ljmp
mov
adc
pop
and
add
es
push
sub
nop
jmp
shlb
repz
repz
add
negl
jns
call
pushl
add
js
add
insl
cld
xor
add
add
clc
xlat
gs
lods
inc
clc
mov
add
add
enter
add
push
push
add
mov
sahf
sub
add
xabort
sub
cmp
in
clc
cltd
adc
add
dec
sub
call
sub
ret
fildll
js
push
add
sbb
stos
jecxz
call
pop
repnz
mov
clc
clc
xchg
jbe
add
out
or
xor
add
jle
inc
clc
fildll
pop
xor
add
add
pop
dec
std
mov
or
add
dec
lea
pop
repnz
add
xor
add
dec
cmp
and
push
add
repnz
ret
cmp
aas
rcrl
imul
clc
jb
add
add
adc
add
dec
and
add
lret
mov
mov
imul
clc
cltd
pusha
add
sti
xchg
clc
or
add
js
or
call
add
or
clc
or
mov
add
add
stos
dec
dec
sbb
jg
nop
jmp
lods
rep
movsl
cmpsl
clc
aaa
pop
sub
clc
pusha
add
cmp
add
dec
in
jecxz
xor
add
sub
rolb
add
pop
clc
ret
clc
push
int
add
scas
fs
pop
sar
mov
mov
pop
sbb
add
mov
add
pop
push
sbb
add
aad
clc
mov
sti
sbb
add
jmp
popf
andnps
cmc
inc
clc
adc
add
add
xchg
inc
add
mov
xor
clc
push
bnd
loop
jmp
adc
pop
sbb
pop
sub
clc
mov
sub
xchg
icebp
dec
and
mov
scas
xchg
fisubrl
sar
out
clc
inc
clc
mov
jmp
nop
jmp
je
pop
xor
add
add
or
clc
lahf
sub
add
popa
add
loop
pushf
into
and
add
cwtl
mov
mov
inc
add
and
add
add
add
out
cmp
add
in
mov
stos
mov
push
nop
jmp
sub
add
adc
daa
clc
cld
cmp
insl
push
cmc
cmp
cmpsb
xchg
inc
add
roll
clc
xor
add
add
mov
xor
add
clc
int
mov
lcall
mov
clc
sahf
loop
inc
clc
xbegin
add
add
push
push
add
nop
jmp
jae
ss
lret
enter
clc
dec
imul
add
sahf
mov
pop
xchg
jns
clc
sub
dec
pop
ljmp
clc
es
xor
push
lret
cmp
cmpl
nop
jmp
or
jo
add
pop
xor
add
clc
iret
sub
mov
out
sbb
pop
push
fdivs
cmp
add
lret
clc
sub
clc
pop
das
mov
and
outsb
enter
xchg
cli
cmp
add
pop
ret
inc
add
inc
add
mov
arpl
add
pop
adc
add
cs
push
aas
lock
add
icebp
test
sub
clc
inc
add
xchg
aad
cmp
cmp
aas
xchg
push
add
lods
lahf
ja
clc
lret
xchg
push
clc
lods
and
add
es
xor
add
daa
clc
mov
imul
dec
pop
add
in
add
add
add
or
je
xlat
pop
call
jmp
ss
and
out
ss
push
push
mov
xchg
ret
jnp
ja
mov
clc
push
clc
addr16
xchg
jg
outsl
aam
xor
add
add
push
je
nop
jmp
filds
movsl
or
clc
inc
clc
loop
rcrb
xchg
aam
dec
and
add
add
xchg
xor
cmp
add
add
cmp
xabort
int
fwait
imul
jmp
fbstp
roll
ss
in
mov
pushf
sub
add
in
mov
add
pushl
add
mov
fwait
mov
loope
add
add
clc
jns
xor
add
dec
repz
mov
nop
jp
pop
or
mov
add
nop
jmp
add
pop
and
sti
jle
mov
popa
nop
jmp
pop
lds
pop
add
mov
clc
push
pop
clc
adc
add
xchg
or
or
adc
add
clc
cmp
push
iret
loop
out
pop
repz
add
lea
and
add
add
xlat
xbegin
dec
test
clc
lahf
stc
pop
ret
clc
add
fistl
and
add
clc
loop
mov
popf
test
add
pop
lock
incl
mov
add
add
add
clc
cmp
mov
add
int3
cli
sar
pop
ficomps
aaa
das
test
xlat
dec
test
cmp
inc
add
inc
clc
xor
sahf
xor
in
mov
add
in
sbb
in
mov
clc
ja
bound
add
add
ss
inc
add
aaa
sub
sub
cs
cmp
clc
out
loop
sar
clc
sub
lods
push
cmp
clc
mov
aaa
cmp
int3
out
pop
call
cmp
mov
sbb
jmp
add
adc
add
add
push
nop
jmp
xchg
sbb
adc
sbb
jmp
clc
mov
hlt
data16
pop
clc
repnz
add
insl
insb
mov
lea
fsubrs
add
testl
test
add
out
je
scas
dec
pusha
add
arpl
add
pop
adc
ja
mov
scas
loopne
xor
add
clc
push
pop
mov
add
ffreep
mov
add
push
in
push
add
or
jne
xor
add
pop
sbb
add
cmpsb
clc
xchg
mov
clc
mov
bnd
add
ds
iret
inc
clc
adc
add
clc
and
add
add
aam
dec
adc
add
pop
push
pop
sub
dec
dec
pop
pop
lock
add
clc
cli
mov
mov
inc
clc
cmp
or
add
or
clc
jo
add
jmp
xor
sarb
sub
sub
dec
pop
test
clc
cmp
add
mov
je
cld
inc
add
pop
jle
add
xor
xor
add
add
mov
add
add
pop
mov
add
or
or
lods
add
add
xor
add
mov
adc
add
clc
or
mov
jno
add
add
add
out
or
add
fsubs
add
dec
adc
imul
ret
lds
pop
fiadds
add
clc
sar
mov
ret
clc
fcmovnbe
mov
add
add
add
push
sbb
mov
ret
clc
sub
add
dec
pop
sub
sbb
cmpsb
clc
leave
or
xor
add
shll
add
inc
clc
nop
mov
dec
test
scas
dec
aam
clc
mov
clc
jne
jno
add
pop
push
add
nop
jmp
test
fldenv
add
inc
clc
inc
clc
fs
inc
clc
sti
pop
clc
in
ffreep
clc
or
in
mov
clc
loope
popa
add
ss
mov
into
aas
stc
jp
fdivs
fmulp
fwait
inc
clc
int
add
or
clc
stc
fadds
add
clc
adc
push
cmc
fsubp
clc
push
sbb
mov
clc
mov
add
cmp
mov
add
xchg
or
clc
hlt
push
fstl
xchg
call
incl
call
add
mov
add
test
add
popf
fistpll
pop
sbb
ss
clc
in
sub
add
sar
ljmp
add
inc
add
imull
cmpsb
clc
out
stos
inc
add
imul
clc
xchg
mov
clc
outsb
and
add
push
mov
xchg
ret
ss
data16
push
add
add
clc
mov
cmp
add
sahf
cmp
add
shr
fs
add
pmaxsw
cld
enter
sbb
pushl
clc
mov
xchg
bnd
xbegin
or
add
nop
jmp
and
sub
bound
add
clc
cld
clc
dec
xor
add
pop
mov
add
add
ds
clc
js
add
clc
insl
push
add
rcrl
loope
add
add
xchg
out
xchg
xchg
daa
clc
data16
movsb
clc
repz
dec
mov
clc
sbb
loop
mov
mov
and
xor
lea
ljmp
aam
xchg
cmp
and
add
mov
jg
xor
add
clc
dec
notb
rorb
add
lea
rorl
inc
add
or
fwait
xlat
lods
push
add
push
jle
clc
add
add
pop
shlb
cmp
hlt
popa
add
or
clc
fidivrl
xchg
ret
scas
in
mov
xbegin
fildl
jo
add
clc
cmp
adc
add
clc
xabort
pop
aaa
mov
inc
clc
imul
addr16
sbb
mov
clc
in
xor
add
cs
movsl
clc
stc
sub
add
mov
jecxz
and
add
add
mov
inc
clc
test
add
xchg
sbb
repnz
lods
mov
clc
pop
or
fs
movsb
clc
mov
push
sbb
add
xor
add
lret
out
xchg
inc
clc
sbb
movsb
clc
sbb
inc
clc
push
rcrl
clc
hlt
and
xchg
add
add
add
shrb
imul
lods
push
jecxz
dec
xbegin
mov
imul
cmp
addps
sar
sbb
mov
xchg
ret
xchg
pop
add
jo
add
push
enter
scas
lock
add
sub
clc
fs
mov
jne
clc
or
fisubrs
adc
add
mov
bsr
out
and
add
add
mov
sub
out
clc
pop
push
jmp
or
ret
adc
inc
add
push
add
or
lods
mov
add
nop
jmp
pushf
add
in
je
clc
mov
push
clc
lods
sar
clc
jb
add
clc
cltd
adc
add
cmp
jae
add
icebp
jb
add
cmp
add
add
jp
enter
mov
sbb
push
inc
add
jl
cmp
add
fstps
out
imul
jmp
sbb
push
dec
sbb
clc
loopne
sbb
mov
add
xchg
clc
xor
add
clc
jmp
iret
and
add
outsb
adc
clc
xchg
movsl
clc
jge
add
xor
add
out
xabort
clc
add
add
add
sahf
out
cmp
nop
sbb
out
and
sbb
xor
add
loopne
mov
xor
shl
lret
leave
cwtl
inc
jmp
mov
add
cmp
add
in
cltd
shr
int
add
xchg
cmp
xchg
ljmp
add
sub
je
add
add
pop
cmp
movsl
clc
cli
xor
add
js
clc
cltd
in
fbstp
stc
lret
out
nop
dec
scas
cltd
jecxz
xlat
sbb
add
push
mov
add
push
sub
ror
xor
add
enter
add
nop
jmp
inc
add
and
fcoml
add
push
add
jnp
clc
dec
test
sbb
add
enter
outsl
in
push
mov
mov
xchg
mov
push
jmp
test
sarb
into
fstl
into
lahf
xor
add
or
jmp
jmp
roll
add
int
mov
nop
jmp
pushf
scas
xchg
ret
add
sub
clc
dec
push
clc
cmp
clc
mov
push
imul
add
add
cltd
pop
clc
jmp
addr16
adc
add
add
add
add
inc
clc
inc
clc
fcomi
repnz
jne
nop
jmp
mov
movsl
addr16
cwtl
inc
clc
cwtl
mov
xlat
push
add
jbe
add
out
dec
out
and
insb
xabort
push
push
nop
jmp
shll
and
clc
repz
test
loope
push
inc
clc
pop
clc
push
lods
cmpsl
clc
dec
xchg
iret
popa
add
push
dec
add
add
sub
mov
nop
jmp
ret
add
icebp
sti
dec
gs
lret
in
fdivrp
sti
dec
sbb
and
add
jmp
lods
out
pop
scas
fsts
cmp
cmpsb
clc
scas
push
and
add
clc
lret
cmp
adc
add
add
jns
or
clc
jmp
add
bound
add
mov
clc
call
add
fs
loopne
dec
xor
add
clc
sub
clc
dec
xchg
jb
add
clc
push
sub
and
add
push
add
sbb
loope
jmp
movsl
xchg
pop
insl
cli
imul
and
add
clc
mov
imul
clc
pop
xchg
push
add
xor
add
adc
add
sub
and
add
lahf
xchg
jb
add
clc
push
add
xchg
mov
mov
xchg
inc
add
sub
add
add
aad
repnz
clc
sub
aad
lret
dec
repnz
sar
lret
xlat
cmp
xor
add
push
add
inc
add
dec
sbb
and
add
mov
filds
add
add
fwait
lock
pusha
add
leave
push
outsl
or
add
push
stc
pop
js
add
mov
clc
fiaddl
add
mov
add
cs
clc
xchg
xchg
in
shll
add
pop
jle
enter
bound
add
inc
add
adc
add
sbb
and
add
push
add
mov
cmp
and
lods
push
clc
xor
clc
jmp
mov
add
push
add
jl
pop
sar
mov
lods
fisubs
clc
jne
pop
inc
clc
push
fadds
add
out
loope
cmp
xor
mov
out
xor
add
stos
push
clc
cmpsl
clc
pop
sti
jg
pop
test
testb
push
cmp
add
rorb
rorb
push
clc
mov
into
clc
mov
call
pushl
xor
sub
testb
std
cmp
xchg
adc
adc
add
clc
jle
iret
aaa
enter
mov
clc
and
add
xbegin
inc
add
hlt
clc
in
fadds
add
inc
add
cmp
call
adc
add
jl
cmc
in
inc
clc
shll
clc
mov
cs
xabort
xor
add
add
add
test
pop
lcall
hlt
push
call
incl
add
fsub
clc
and
add
cmp
clc
aam
loope
xor
add
inc
clc
push
add
fwait
arpl
add
mov
add
add
sar
clc
or
lcall
push
stos
notl
add
ja
xor
add
jmp
mov
popf
mov
add
stc
mov
add
fidivrs
or
xlat
loop
mov
add
add
sub
stos
jmp
inc
add
das
dec
sbb
jae
add
clc
pop
xchg
jle
xbegin
mov
xor
add
mov
add
dec
cmp
sub
arpl
add
shll
add
jp
push
shlb
and
add
add
add
nop
jmp
shll
and
jno
scas
sbb
lock
clc
stos
mov
loopne
jb
add
sbb
adc
add
dec
inc
add
aad
into
xchg
or
sbb
mov
adc
jmp
scas
add
inc
sbb
and
add
inc
add
fsts
add
push
add
negb
mov
add
cwtl
jns
jge
in
adc
add
mov
nop
jmp
gs
cmc
add
add
pusha
add
cmp
xchg
decl
fdivs
add
sub
inc
js
ret
clc
out
insl
rcrb
clc
fnstsw
clc
loop
scas
dec
jle
stc
mov
xchg
js
mov
sub
clc
sub
add
ret
clc
xor
add
xor
add
int
dec
shll
clc
out
data16
clc
adc
add
pop
loope
add
clc
decl
sldt
add
inc
lret
int3
or
stos
jne
add
nop
jmp
add
add
loope
addr16
inc
add
je
add
dec
out
fistl
add
mov
add
jg
pop
pop
aad
mov
mov
adc
push
lds
and
sub
cmp
cli
xor
add
loope
or
clc
cmp
daa
clc
popa
add
xor
add
add
nop
jmp
add
ja
inc
ss
sti
inc
add
and
push
add
mov
dec
outsb
outsl
mov
cmp
dec
js
add
outsb
cs
mov
xor
add
mov
add
mov
cmp
adc
jae
add
sub
add
add
push
clc
dec
jnp
or
add
jbe
clc
xlat
cmp
add
jl
clc
scas
test
aaa
jl
inc
clc
shll
int3
inc
add
scas
xchg
dec
mov
lcall
cmc
xchg
fwait
or
jmp
clc
push
clc
and
clc
testl
sbb
inc
add
sub
scas
cmp
pop
xor
add
and
add
test
pop
test
pop
mov
mov
ror
lock
clc
out
push
add
cli
xabort
xchg
jp
cmp
adc
add
clc
add
add
cmp
or
lcall
jmp
call
and
clc
in
into
jge
test
dec
jne
inc
add
cmp
mov
rcrb
inc
add
add
inc
repz
rol
fmull
xchg
pop
jg
adc
add
mov
dec
xchg
loop
inc
clc
in
sbb
clc
rclb
add
mov
add
and
sub
ja
clc
mov
aam
jb
add
jbe
pop
xchg
fwait
sbb
nop
jmp
ret
pop
add
cld
test
leave
leave
push
es
icebp
mov
stos
add
add
data16
leave
js
cli
stc
mov
add
sar
mov
mov
add
dec
mov
lods
into
mov
stos
inc
add
jae
jae
push
outsl
sbb
and
and
pusha
add
imul
and
clc
out
inc
clc
adc
fldt
add
pop
ret
add
cmp
es
dec
or
clc
jp
add
das
mov
clc
fs
fcompl
mov
nop
jmp
cmp
add
mov
xor
add
add
add
clc
repz
and
add
push
call
nop
jmp
inc
shlb
pusha
add
test
adc
add
pop
and
add
dec
inc
clc
std
xchg
mov
outsb
adc
add
inc
add
adc
data16
and
clc
mov
add
jecxz
xchg
xor
add
add
xchg
mov
jmp
xchg
movsl
nop
sbb
sub
clc
cmp
push
cld
scas
icebp
push
add
sar
clc
add
add
clc
jo
add
icebp
mov
clc
mov
add
sbb
cli
stos
out
pop
xor
add
add
push
ret
clc
push
testb
fwait
in
add
add
call
cmp
mov
sbb
icebp
nop
jmp
je
and
inc
js
push
clc
mov
pop
clc
jns
clc
testl
or
add
lods
hlt
imul
pop
or
sub
xor
add
add
loope
js
jmp
nop
jmp
pop
roll
add
add
jmp
incl
fucomip
gs
lods
mov
add
js
add
popa
add
mov
pop
clc
push
add
push
add
pop
aas
xor
add
clc
aaa
cmp
call
imul
stos
dec
in
mov
test
xor
clc
pop
jmp
push
in
inc
add
es
push
dec
sbb
dec
mov
clc
push
add
in
jmp
out
pop
xchg
jnp
rcrb
push
adc
ss
clc
iret
aam
inc
clc
test
clc
sub
add
popa
add
sar
add
nop
jmp
je
add
repz
add
clc
imul
imul
add
add
pop
inc
add
shr
insb
sub
ljmp
nop
jmp
add
add
iret
int3
jnp
add
pop
sub
add
and
clc
jno
add
add
push
add
sbb
test
jmp
push
sbb
dec
jmp
loop
cltd
movsl
clc
dec
jae
add
sar
ds
rolb
hlt
mov
in
mov
lods
push
jle
adc
add
add
push
mov
xchg
ret
xor
xor
add
dec
xor
clc
pop
lret
fsub
clc
cmp
or
cmp
clc
mov
cmp
pop
jp
clc
jo
add
and
add
add
xor
add
jg
js
stc
scas
inc
add
xchg
xbegin
clc
sbb
cli
jne
inc
add
shrl
add
xor
add
dec
gs
das
pop
repz
clc
outsl
loopne
push
cwtl
or
add
notl
xor
clc
adc
add
lahf
cmp
jp
clc
mov
mov
clc
lods
and
add
mov
int3
popa
add
push
add
insl
popa
add
and
add
add
mov
loop
fdivrs
add
add
add
fistps
add
inc
add
sbb
lods
pop
stc
push
add
pop
sbb
mov
add
jmp
test
bound
add
push
into
add
add
mov
ret
clc
rclb
add
cmp
add
test
jg
or
add
sub
into
in
or
call
mov
clc
xor
add
outsl
push
add
add
add
sub
insb
cwtl
idivl
clc
jbe
add
fnstenv
add
add
push
add
sbb
add
sbb
clc
cmpsl
clc
repz
sbb
add
cmpsl
clc
aam
clc
pushf
push
ret
clc
jbe
add
sbb
add
imul
mov
inc
add
sub
clc
mov
or
clc
jns
pop
imul
inc
clc
mov
mov
add
add
int
pusha
add
cmp
add
flds
add
cmp
clc
mov
pop
lods
iret
sub
clc
push
sar
add
das
xor
clc
sub
clc
xor
pop
mov
into
pop
bound
add
adc
add
push
jmp
out
inc
lods
nop
or
push
icebp
inc
add
pop
das
xchg
cld
stc
aam
aad
mov
nop
jmp
add
cmp
cmp
mov
inc
add
dec
out
add
add
in
and
add
js
add
xbegin
mov
clc
icebp
add
add
sub
adc
add
add
iret
fcmovbe
fldl
and
ret
clc
arpl
add
push
lea
add
add
mov
mov
xchg
ret
faddl
jnp
stos
fdivp
adc
add
add
loopne
es
cmp
dec
mov
add
mov
clc
gs
mov
ja
clc
imul
clc
ror
cld
jo
add
mov
clc
mov
aad
add
push
and
add
repnz
je
roll
add
jne
stos
outsb
xor
add
loop
mov
sti
inc
clc
mov
xchg
inc
add
neg
sbb
fcmovnbe
inc
add
enter
and
cli
icebp
push
movsb
clc
movsl
clc
pop
push
jae
add
add
dec
fisubs
clc
sbb
add
add
and
add
fnstcw
sub
add
add
enter
add
clc
xchg
daa
clc
into
push
inc
clc
push
mov
adc
add
clc
sub
add
mov
clc
add
add
lret
add
push
idivb
xor
add
ljmp
out
sbb
fldcw
add
add
pop
arpl
add
jge
add
sub
in
xchg
mov
je
out
cmp
xor
add
pop
clc
out
into
fldl
mov
xchg
dec
scas
sub
xchg
sub
adc
add
int
clc
insl
mov
or
cmp
push
jns
xor
push
mov
xchg
ret
pop
add
mov
mov
push
mov
xchg
ret
repz
add
pop
out
pop
shlb
mov
dec
sub
imul
mov
push
js
add
mov
lods
adc
mov
nop
jmp
roll
flds
mov
jo
add
add
stos
fcomp
movsl
clc
adc
add
xor
add
loope
mov
nop
jmp
ja
inc
inc
add
jp
add
pusha
add
js
add
adc
add
clc
mov
xchg
mov
sti
xchg
scas
sbb
clc
pop
mov
mov
add
nop
jmp
lods
pop
lods
add
add
add
add
int3
lea
add
lret
xor
xchg
push
add
jns
clc
and
add
add
clc
fdivs
adc
out
test
xchg
sbb
and
add
stc
sar
clc
sbb
clc
or
test
add
cmpsb
clc
push
add
inc
add
call
add
int3
jne
and
lret
inc
add
and
xor
add
and
int3
cmp
cmpsl
clc
add
sahf
int3
movsb
clc
push
js
pushl
sbb
add
add
add
js
adc
cmp
pop
cltd
pop
rcl
push
add
and
add
clc
test
fucomp
mov
lock
sub
clc
or
adc
xchg
repz
add
pop
hlt
dec
xchg
inc
add
sbb
lahf
mov
add
inc
add
pop
mov
repz
xchg
add
jae
add
mov
ss
clc
xor
add
jmp
jmp
add
daa
clc
insl
add
add
mov
add
add
clc
out
cmp
fdivs
clc
mov
nop
jmp
adc
addr16
cmc
mov
jns
jecxz
sub
insb
cmp
cmp
cmp
jne
nop
jmp
pop
mov
add
repz
outsl
mov
inc
add
mov
clc
cmpsl
clc
into
adc
gs
jge
out
push
clc
or
adc
add
dec
jge
add
nop
jmp
and
out
jecxz
in
and
add
cld
pusha
add
adc
add
add
ds
loopne
fisttps
add
lods
mov
push
clc
lret
add
clc
inc
clc
push
jnp
call
add
test
mov
mov
mov
sbb
add
clc
mov
mov
xchg
gs
cmp
clc
in
ret
clc
sti
scas
lods
cmp
dec
enter
xor
add
mov
test
jle
and
add
ljmp
nop
js
xor
add
add
xor
add
push
data16
jg
dec
out
add
js
sti
je
dec
pop
icebp
enter
sbb
sub
push
cmp
xlat
mov
ljmp
push
xlat
cs
jl
fiaddl
clc
out
add
add
clc
jne
pop
dec
xlat
cmp
push
mov
lcall
jmp
add
inc
ret
fistpll
sar
stos
lahf
je
xchg
gs
loopne
adc
add
clc
cmp
cli
jl
clc
sbb
cmp
rol
clc
addr16
insb
insl
loope
push
add
jmp
clc
repnz
pop
clc
jo
add
jle
shr
fcoml
add
jb
add
fsts
add
fadds
clc
push
outsb
inc
add
or
stos
ds
inc
clc
cmp
mov
sub
jle
sbb
add
lcall
mov
pushl
push
mov
xchg
ret
cmp
sbb
fsubr
data16
movsl
clc
rcll
add
inc
clc
add
push
xabort
clc
mov
add
loop
cs
xor
add
add
add
mov
nop
mov
xlat
sub
clc
in
clc
xchg
mov
mov
add
mov
mov
adc
add
add
mov
clc
es
pop
cmp
add
jo
add
cmp
das
vcomiss
clc
ret
clc
adc
add
add
add
mov
in
test
jns
jp
push
test
mov
nop
jmp
inc
add
inc
roll
clc
stos
sub
inc
clc
mov
int3
jle
add
and
add
xor
clc
arpl
add
and
push
mov
xchg
ret
xor
sbb
clc
pop
add
mov
imul
clc
xor
add
add
cmp
dec
push
add
ss
pop
xor
add
add
jb
add
dec
dec
push
movzwl
nop
jmp
xchg
jecxz
inc
fstps
add
mov
test
loop
cmp
leave
nop
jmp
ja
sbb
jno
inc
sub
pop
inc
add
fs
es
mov
mov
fucomip
inc
clc
out
cmpsl
clc
and
add
xchg
mov
clc
add
add
clc
enter
lcall
outsb
imul
mov
push
add
xchg
pop
adc
sbb
add
sbb
push
mov
xchg
ret
int
lods
jecxz
leave
cltd
xchg
dec
cmp
xchg
push
mov
sub
ret
clc
ret
sbb
add
mov
push
nop
jmp
push
and
xchg
and
clc
jne
scas
cmp
add
cmpsb
clc
rcrl
clc
jnp
clc
enter
dec
leave
sbb
jo
add
shrb
cmp
sbb
mov
inc
add
push
jmp
inc
push
ja
scas
shll
clc
ss
mov
push
mov
ret
jno
xchg
sub
lods
inc
add
inc
mov
cmpsl
clc
mov
loop
push
add
mov
inc
clc
leave
paddsb
clc
arpl
add
clc
bound
add
xchg
arpl
add
out
inc
clc
sub
clc
mov
movsl
clc
mov
out
sbb
movl
scas
shll
jecxz
ret
clc
icebp
jmp
jno
add
jg
kmovw
sub
loope
dec
ljmp
inc
clc
repnz
mov
movsb
incl
shlb
mov
nop
inc
sub
or
add
pusha
add
mov
adc
clc
out
xchg
shl
idivb
add
clc
sbb
imul
iret
inc
clc
fidivrs
fld
clc
lret
adc
add
add
xchg
jecxz
xchg
xor
add
sub
clc
nop
inc
add
adc
add
add
mov
mov
lret
mov
cltd
cmp
clc
add
add
or
js
add
jmp
fisubl
inc
clc
xchg
xchg
je
aad
iret
mov
clc
dec
or
clc
or
inc
add
mov
and
add
jge
call
or
add
imul
jbe
cmpsl
clc
out
add
clc
push
push
stc
inc
add
add
sub
xor
push
add
ljmp
call
lods
add
mov
clc
movaps
add
and
add
add
add
add
lahf
mov
cs
clc
sbb
add
add
mov
cld
cmp
clc
out
popf
pop
clc
jbe
dec
add
add
add
sar
adc
add
mov
clc
fs
xor
cmpsb
clc
fwait
lock
push
add
mov
cli
fnstcw
push
xchg
insb
push
add
test
sub
push
push
mov
xchg
ret
lods
add
adc
insl
jle
add
insb
adc
add
clc
xor
add
imul
nop
jmp
add
sbb
clc
es
push
add
stos
xor
add
lock
mov
imul
push
in
pop
sar
add
ljmp
sbb
jbe
sbb
test
sub
ret
add
mov
mov
pushl
nop
add
add
sbb
pop
mov
mov
clc
adc
add
mov
jge
clc
add
add
rol
clc
sub
rolb
lcall
add
mov
ret
xor
add
clc
jne
mov
add
dec
add
sar
clc
aam
adc
add
add
je
stc
out
ljmp
clc
jg
add
stc
leave
loope
add
add
repnz
add
mov
xor
nop
jmp
adc
mov
clc
into
ljmp
sbb
jmp
nop
jmp
add
enter
jno
add
loop
ret
add
aas
pop
clc
in
xor
or
aas
push
add
sbb
ljmp
clc
repnz
mov
clc
jp
add
notb
icebp
adc
add
imul
fistpl
daa
clc
decl
aaa
out
fsts
imul
clc
fiadds
add
mov
movsl
clc
mov
in
in
sub
add
mov
clc
sbb
push
add
invd
pop
clc
inc
add
adc
add
push
add
loope
cs
ret
clc
ret
clc
sub
xchg
sub
shrl
sbb
stos
nop
jmp
pop
jo
pop
call
add
add
lret
and
add
xor
add
lock
clc
rclb
clc
or
jno
add
clc
loopne
sbb
jmp
jecxz
xchg
and
addr16
dec
cmp
clc
js
xchg
ja
arpl
add
mov
nop
jmp
jno
call
clc
out
cs
mov
add
add
mov
add
and
add
in
test
add
dec
push
mov
xchg
ret
add
mov
popf
out
sbb
add
mov
and
fbstp
fdiv
popa
add
xchg
inc
add
bound
add
xor
add
clc
dec
mov
clc
mov
sti
rclb
add
add
add
clc
or
hlt
insl
and
add
add
push
add
pop
addr16
test
rclb
add
cltd
jl
add
lock
add
gs
jno
add
mov
push
nop
jmp
int
add
gs
clc
jl
xchg
inc
add
pop
in
lock
lret
jnp
clc
je
int3
js
add
jle
dec
push
lahf
or
add
insl
cmp
inc
add
and
add
mov
nop
jmp
pop
add
mov
sub
popf
sbb
in
inc
add
je
sbb
clc
mov
daa
clc
lahf
push
pop
stc
inc
clc
popf
mov
sub
add
mov
call
add
jecxz
pop
add
add
mov
lahf
icebp
xchg
test
sub
sub
add
clc
ret
clc
add
add
jbe
add
sbb
nop
jmp
xchg
xchg
jae
xor
add
add
or
fwait
jns
clc
je
insb
nop
out
jae
add
cmpsb
clc
sar
in
mov
decl
fwait
jbe
jmp
popl
sbb
test
call
incl
je
xchg
adc
add
add
mov
adc
add
clc
xchg
jae
add
xchg
sub
sbb
enter
int
add
xchg
iret
and
add
add
xor
repnz
push
icebp
out
push
jno
add
add
add
add
add
cmpsl
clc
fs
mov
fs
jmp
inc
scas
sbb
scas
fisubrs
out
stos
xabort
jno
add
das
pop
and
imul
pusha
add
sub
inc
add
adc
add
clc
dec
xchg
dec
dec
and
add
add
stc
dec
iret
enter
fldcw
push
add
js
clc
jge
clc
mov
jnp,pn
add
fsub
clc
jp
mov
clc
leave
xchg
jb
add
add
outsl
cmc
test
clc
add
mov
add
mov
adc
add
sub
mov
add
arpl
add
clc
call
clc
xor
add
adc
add
add
clc
in
std
repnz
add
clc
lods
xchg
adc
pop
test
add
clc
fwait
imulb
and
mov
xchg
ret
pushf
repz
jbe
out
lock
add
add
add
cmp
mov
clc
out
cmp
push
jmp
out
cmp
add
iret
add
add
clc
stos
scas
or
add
clc
jbe
push
add
fmulp
lods
and
add
loope
call
dec
daa
clc
mov
popa
add
and
add
ljmp
clc
inc
clc
mov
add
sbb
aad
clc
sbb
cmpsb
clc
sbb
addr16
idivb
in
lock
in
dec
fsubs
push
adc
add
add
push
clc
popf
or
clc
addr16
dec
push
loope
sub
push
clc
movsl
clc
jmp
mov
mov
sarl
shll
inc
clc
pop
add
add
dec
xchg
enter
scas
fwait
xchg
mov
xor
enter
clc
dec
push
add
jecxz
ljmp
insb
sarb
sti
cmpsb
clc
divb
add
cmpsb
clc
movsl
clc
push
mov
incl
xor
movsl
decl
add
clc
or
in
lods
cltd
and
add
sar
mov
mov
movsb
clc
cmp
add
add
filds
add
scas
loope
sti
inc
clc
sbb
clc
sbb
shrl
jg
clc
add
add
sbb
lods
loope
add
ds
mov
xchg
ret
mov
xor
add
push
add
push
or
add
mov
out
and
add
jb
add
leave
jp
jl
leave
cmp
mov
clc
adc
dec
inc
add
hlt
movsb
clc
jp
add
jl
jp
je
lcall
sbb
push
add
lret
push
pop
add
scas
push
int
jecxz
or
aad
clc
enter
add
fldcw
push
mov
xchg
ret
cmp
scas
roll
clc
mov
or
mov
je
push
inc
nop
jmp
js
sbb
mov
add
imul
adc
mov
nop
jmp
add
lea
xor
cmp
mov
xlat
rol
clc
mov
clc
dec
mov
push
cmp
lock
push
clc
xchg
xchg
xor
add
pushf
sbb
daa
clc
inc
clc
mov
clc
lahf
pop
sti
fimuls
clc
sar
add
cmc
cmp
fstps
add
xchg
in
repnz
add
pop
rorb
jb
add
jo
add
add
scas
stos
push
xor
add
ficompl
add
push
mov
add
add
out
pop
clc
and
add
clc
mov
mov
clc
jno
add
add
add
lods
daa
clc
push
add
dec
mov
enter
add
cmp
add
adc
add
clc
fildl
add
jg
clc
or
add
mov
clc
cltd
pop
cmpsb
clc
out
cltd
popa
add
jmp
lock
cmp
xchg
cwtl
in
pop
loop
in
mov
test
lcall
mov
clc
dec
fs
rorb
add
add
inc
clc
cmp
data16
loopne
popf
and
xor
add
sbb
xor
add
clc
loop
loope
insl
out
jmp
pusha
add
xchg
aaa
and
add
dec
ret
clc
aad
push
dec
in
data16
adc
add
add
clc
and
add
add
mov
repz
cli
xchg
or
clc
sub
lea
sbb
dec
std
inc
add
pushf
xor
clc
stos
xor
add
jne
nop
jmp
add
fucomip
sub
add
cmp
pop
mov
loop
jg
cmp
in
inc
add
rcll
shrd
adc
jmp
je
inc
gs
movsl
sbb
movzwl
nop
jmp
push
push
add
aas
pop
add
add
clc
cmp
clc
cmpsl
clc
sbb
clc
sub
clc
mov
clc
int
clc
xabort
scas
decl
insb
pop
incl
and
lods
add
test
js
cwtl
push
in
adc
pusha
add
cli
mov
loopne
lods
loop
std
adc
add
sbb
inc
add
bound
add
add
push
les
nop
jmp
add
inc
clc
inc
add
imul
lods
jb
ljmp
add
cmc
add
fcmovnu
into
lods
lods
movsb
clc
cmpsl
clc
xchg
jle
dec
outsb
lods
jle
xlat
sub
add
gs
mov
mov
inc
clc
cmp
lock
add
mov
add
out
jo
add
push
dec
rorl
gs
fidivl
outsl
ret
mov
add
clc
or
add
jbe
xchg
cld
sub
xchg
jns
add
inc
clc
sbb
add
data16
daa
clc
mov
sub
add
mov
clc
movsl
clc
push
clc
out
cmpsl
clc
jno
add
push
xchg
lods
mov
mov
out
call
lea
fildll
clc
mov
add
push
add
pop
cld
pushf
add
add
jp
mov
clc
pusha
add
loop
dec
loopne
rorl
sbb
clc
inc
add
ljmp
addr16
cmp
scas
push
mov
cmp
clc
adc
and
add
add
sub
lret
lret
clc
xor
clc
mov
pop
js
ror
mov
clc
adc
add
mov
jmp
lods
add
clc
test
lahf
push
mov
jnp
cmp
ljmp
fistpll
loope
shr
mov
add
mov
inc
clc
jp
je
incb
inc
adc
jmp
lods
inc
inc
test
scas
mov
add
push
push
add
ljmp
jg
mov
aad
clc
adc
add
add
fwait
sub
iret
xchg
push
call
add
and
loop
out
fdivl
nop
pop
int
add
add
add
push
add
sbb
add
movsb
clc
jno
add
mov
gs
jmp
lods
ljmp
aaa
or
add
clc
out
xchg
in
frstor
add
cmp
xbegin
add
add
in
push
movsl
clc
aad
add
add
clc
jae
add
pop
hlt
jns
xor
nop
jmp
sbb
ret
rol
pushf
lea
clc
shrb
clc
fisubrs
and
loopne
ss
add
add
add
push
jne
nop
jmp
add
jo
add
fmull
or
stos
jne
cmp
add
cmp
clc
cmp
pusha
imul
cmp
jecxz
jns
mov
test
xor
add
add
mov
or
sarl
mov
adc
add
mov
or
add
xchg
iret
xchg
cltd
or
push
testl
jmp
data16
inc
add
mov
xor
add
inc
clc
adc
add
cs
clc
daa
clc
adc
add
out
mulb
add
pushf
frstor
add
mov
clc
sbb
nop
jmp
adc
add
clc
hlt
rclb
add
ret
clc
ss
push
stc
daa
clc
xor
add
add
icebp
clc
enter
fbstp
add
cli
cmpsb
clc
in
jge
lods
setp
fsub
clc
lret
test
jnp
sar
jle
sbb
jb
nop
jmp
sbb
cmp
add
in
fnstenv
fistpll
inc
add
mov
add
add
lret
nop
jmp
inc
pop
adc
movsl
je
sub
push
sbb
dec
xor
add
and
mov
clc
in
or
js
jl
pushf
mov
add
stos
int3
cmp
pop
xabort
clc
and
add
inc
clc
repnz
clc
xchg
and
add
ret
ljmp
mov
decl
and
je
inc
push
aam
add
push
outsl
add
add
clc
ds
pushf
movsb
clc
and
add
pop
or
loop
xor
add
mov
gs
mov
in
gs
fldcw
pop
mov
push
add
mov
and
add
hlt
leave
rorb
lret
jnp
cmp
ljmp
nop
jmp
add
cmpsb
clc
loop
push
clc
adc
add
daa
clc
inc
add
and
push
stos
rep
pop
fidivs
add
stos
xchg
mov
dec
mov
mov
mov
test
clc
out
mov
data16
xchg
or
clc
add
add
clc
clc
sub
xor
add
push
add
cmp
pop
jnp
outsb
mov
jmp
sti
push
mov
xchg
ret
inc
ss
rcl
add
xor
clc
adc
add
ret
clc
xor
add
cmp
add
mov
add
outsb
pop
js
clc
iret
xchg
sti
dec
in
jge
leave
mov
mov
mov
clc
adc
add
jbe
add
add
add
jnp
add
aas
std
and
add
add
gs
imul
clc
divl
add
cmpsb
clc
es
leave
push
add
xlat
bound
add
add
pusha
add
mov
mov
inc
clc
mov
nop
out
sbb
clc
add
sahf
outsb
push
lret
jo
add
dec
and
add
cmpsb
clc
xchg
cmp
loop
pusha
add
add
add
add
xor
add
aam
addr16
lock
or
out
inc
add
mov
mov
push
mov
xchg
ret
inc
pushf
xor
jge
in
ret
or
sub
out
fxtract
push
movsb
nop
jmp
sbb
gs
ss
jno
add
mov
fsin
inc
clc
xchg
sar
push
xchg
inc
clc
stos
cmpsl
clc
add
add
inc
add
cmp
test
mov
add
lods
and
add
add
out
cli
cmpsl
clc
pop
pushf
pop
enter
js
test
scas
cmp
add
add
cmc
gs
in
push
dec
add
add
clc
mov
cmp
nop
iret
jae
add
push
fsubrs
dec
sar
clc
mov
clc
in
and
add
xlat
jg
clc
loope
test
pop
mov
cmpsl
clc
shll
clc
cmp
imul
lock
add
out
pop
mov
xchg
mov
add
call
clc
adc
add
in
cmp
add
clc
fistpl
jne
nop
jmp
and
sub
mov
push
mov
xchg
ret
inc
or
push
fs
in
jno
add
jbe
sub
cltd
push
adc
add
add
pop
sbb
add
add
sarl
aaa
popa
add
jns
cmp
bound
add
jnp
dec
repz
cmp
in
pop
mov
add
add
mov
add
shll
add
mov
clc
push
idivb
cmp
mov
add
cld
shr
or
aas
sarb
clc
and
pop
cmp
or
clc
adc
add
mov
clc
mov
inc
clc
scas
inc
clc
pop
rcrb
rep
jmp
cmp
inc
add
dec
jo
add
clc
stos
mov
add
add
mov
xor
add
dec
adc
add
mov
lods
insb
xchg
mov
add
clc
dec
mov
cmp
sbb
cmpsl
clc
push
push
mov
xchg
ret
or
clc
xchg
pop
clc
repz
mov
add
cmp
sbb
nop
jmp
xchg
xchg
ljmp
das
or
loope
adc
add
mov
jno
call
js
sub
in
stc
iret
add
jg
sar
cmc
xchg
jb
add
mov
pop
mov
add
cmp
clc
jne
adc
add
jnp
pop
test
push
jg
dec
fimull
mov
loopne
nop
jmp
nop
sub
mov
and
add
cmp
pop
clc
jo
add
clc
repz
add
insl
push
add
or
add
clc
xchg
sahf
fidivl
clc
mov
add
push
aas
sub
inc
add
in
xor
add
sar
jne
cmpsb
clc
add
add
dec
psubusw
clc
xchg
fists
and
add
clc
test
mov
movsb
clc
xchg
roll
mov
adc
add
jnp
out
xlat
dec
mov
sub
decl
push
mov
xchg
ret
jnp
xor
add
imul
mov
mov
nop
jmp
jecxz
jecxz
jecxz
lret
mov
std
in
mov
jmp
gs
or
clc
jno
add
add
jl
push
clc
inc
clc
aas
jp
add
mov
adc
add
std
bound
add
add
clc
add
add
sub
mov
adc
add
das
mov
clc
ret
clc
imul
clc
sbb
add
js
clc
inc
clc
mov
add
xor
add
cmp
clc
fcoml
clc
loopne
scas
inc
clc
lods
mov
daa
clc
ret
and
add
addr16
pop
std
or
inc
clc
bound
add
mov
ja
clc
jo
add
pop
gs
pop
je
pop
xor
clc
aaa
fldcw
or
add
add
pushf
mov
add
jne
xchg
mov
push
nop
jmp
push
pop
ffreep
adc
jno
add
mov
xchg
in
repnz
jo
add
or
loopne
mov
daa
clc
push
clc
adc
add
add
into
int
add
shlb
push
stos
cmp
add
cld
mov
add
out
imul
cld
sub
sbb
outsl
sbb
aaa
pop
push
add
cmp
adc
add
sar
outsl
xchg
cmp
je
es
or
jne
nop
jmp
adc
out
daa
clc
or
add
cli
jno
add
mov
add
push
test
sbb
call
in
fldcw
clc
cmp
push
popa
add
scas
clc
or
add
jmp
xor
add
add
adc
add
sub
je
or
push
pop
push
mov
xchg
ret
fistpll
sbb
jmp
add
mov
test
clc
dec
clc
gs
mov
adc
add
fimuls
xabort
dec
sbb
cld
pop
stc
out
add
xchg
pop
test
mov
clc
push
jne
jp
clc
aaa
push
cmc
shlb
add
test
clc
push
add
mov
data16
cmpsl
clc
sbb
mov
add
add
add
clc
aas
rorb
clc
lcall
add
in
cmp
cmp
imul
or
pop
xchg
add
jl
add
mov
call
nop
jmp
pop
ret
scas
gs
adc
add
clc
fwait
gs
mov
add
hlt
je
mov
add
inc
add
add
push
dec
ljmp
cmp
clc
cmp
mov
jne
jns
inc
add
lods
movsl
clc
outsb
xchg
scas
sahf
push
jmp
mov
lea
stc
out
adc
add
data16
pop
mov
lods
jg
mov
sar
hlt
sar
push
mov
mov
mov
xchg
ret
adc
cmpsl
clc
inc
add
aad
fiadds
mov
fs
faddl
and
add
mov
sbb
lea
pop
clc
pop
sub
pop
xor
add
lret
xchg
inc
clc
inc
add
rcrb
push
add
add
clc
cmp
add
push
push
mov
and
add
add
stos
es
data16
pop
outsl
cmp
lahf
xbegin
mov
clc
fdivs
add
add
jecxz
sub
jbe
clc
jle
add
inc
add
sete
push
clc
imul
sbb
fistl
test
and
ja
add
add
jo
add
add
jle
int
inc
add
fnstenv
add
cmp
push
add
mov
push
add
stc
sbb
jl
jne
nop
jmp
fdivl
mov
adc
shr
lahf
jle
clc
sar
cld
sbb
mov
inc
add
add
mov
push
cmp
cmp
pop
jae
add
lock
add
in
cmp
das
mov
cmp
cmp
sub
xor
jecxz
clc
fwait
popl
add
add
add
inc
add
clc
mov
mov
xchg
ret
movsl
roll
clc
mov
int3
xchg
nop
dec
xchg
jg
test
ljmp
push
mov
nop
jmp
out
mov
sar
imul
nop
jmp
add
add
fadds
clc
jns
clc
sub
loope
int3
mov
clc
jb
add
add
jb
add
adc
add
add
add
jo
add
cmp
cmpsl
clc
aam
in
dec
inc
add
jnp
sbb
mov
adc
jmp
and
mov
jae
add
sar
mov
push
pop
xbegin
pop
test
sahf
mov
clc
dec
jmp
in
enter
xor
add
cmpsb
clc
push
test
or
loop
test
xchg
mov
mov
add
jae
add
xchg
test
jnp
xor
add
clc
xbegin
in
rol
clc
cmp
clc
xor
sub
clc
adc
add
cs
add
dec
add
add
jb
add
pop
clc
cs
pop
je
clc
leave
popa
add
adc
ss
fwait
xor
rclb
push
xchg
inc
cmp
xchg
pop
scas
mov
mov
push
mov
xchg
ret
add
fdivrl
clc
pop
mov
push
arpl
add
adc
nop
jmp
gs
add
add
add
pushf
loopne
cmp
add
dec
out
stos
cmp
dec
test
mull
add
mov
clc
std
push
xlat
aas
test
inc
clc
jmp
mov
arpl
add
pop
pushf
cmpsl
clc
rcrl
dec
mov
in
loopne,pn
push
clc
push
clc
xchg
push
clc
adc
add
cpuid
clc
data16
add
js
test
cmp
add
push
mov
xchg
ret
fisttps
arpl
add
adc
clc
add
in
dec
jbe
add
jle
add
negl
mov
fcmovne
cmp
clc
cmp
mov
mov
and
add
dec
mov
mov
bound
add
add
lods
and
add
fbld
add
cmp
clc
and
dec
cli
sub
clc
movsl
clc
arpl
add
cs
cli
sbb
xchg
insl
or
push
pop
and
add
jmp
nop
jmp
sbb
lods
mov
mov
cmp
pushf
lret
sar
clc
mov
xchg
out
or
cmp
push
add
xchg
test
fcomps
clc
out
aad
add
dec
pusha
add
jg
out
scas
loopne
cltd
sub
pushf
push
dec
js
inc
add
loope
adc
add
dec
inc
clc
inc
add
filds
clc
push
add
pop
sbb
clc
xor
add
fnstsw
in
jecxz
pop
enter
imul
clc
incl
mov
ljmp
push
add
pushf
aas
pop
loope
jmp
clc
xbegin
clc
pusha
add
mov
clc
mov
add
clc
int3
repnz
insl
adc
add
ficompl
add
sbb
repnz
pushl
ffreep
clc
dec
adc
add
js
xlat
bound
add
popf
jnp
cmp
jmp
ljmp
add
fstp
cli
dec
mov
push
bound
add
clc
shlb
dec
jg
hlt
and
dec
push
pop
push
mov
xchg
ret
lea
repz
stos
mov
clc
repz
clc
shlb
add
add
add
insb
add
add
shlb
and
adc
sbb
clc
cmc
sbb
add
nop
jmp
test
or
out
imul
adc
add
cmp
jns
idiv
jmp
xor
nop
jmp
fists
jl
lcall
add
jnp
add
into
inc
add
sub
imul
and
add
sub
jmp
leave
jg
add
mov
adc
add
mov
clc
daa
clc
push
xor
nop
jmp
test
shrl
sti
dec
addr16
ljmp
clc
test
sbb
imul
xor
add
clc
mov
add
add
clc
inc
add
scas
push
clc
scas
leave
out
xchg
lcall
into
aas
xbegin
clc
daa
clc
sub
insl
std
ljmp
clc
xor
add
loope
mov
jmp
faddl
pop
add
jbe
add
mov
loope
dec
jp
clc
sbb
clc
push
clc
fidivs
add
cmp
cs
clc
mov
dec
iret
dec
mov
fistl
add
clc
rcrb
stos
ficomps
insl
loop
movsl
clc
jns
clc
mov
clc
mov
fsub
clc
mov
push
inc
add
jl
adc
clc
movsl
clc
adc
add
clc
mov
sub
pop
data16
or
clc
cltd
fildll
test
call
incl
ljmp
adc
push
dec
and
add
add
mov
add
add
clc
push
add
clc
jo
add
clc
and
add
and
nop
jmp
pop
add
ret
jno
xchg
sbb
clc
gs
xchg
decb
dec
data16
cmp
clc
add
icebp
loopne
clc
bndldx
dec
mov
inc
add
rcll
inc
add
xor
mov
mov
stos
cmp
pop
out
xchg
jns
cmp
das
popa
add
shl
ret
movsl
clc
adc
add
add
lock
clc
cmp
imul
call
add
xabort
movsb
clc
aas
or
mov
mov
lods
mov
add
out
pop
int3
xor
add
clc
pop
clc
in
inc
add
fs
push
push
dec
and
add
clc
inc
add
or
jbe
xchg
ret
clc
cmp
cmp
xchg
std
rcrl
add
add
imulb
jno
add
iret
idiv
test
xor
add
mov
and
js
jmp
js
jae
jge
loop
testb
add
add
add
clc
data16
clc
sbb
add
add
push
int
add
out
push
add
add
in
rorl
pop
push
add
mov
clc
dec
pop
clc
mov
incb
push
in
rclb
jno
add
fucomi
or
pusha
add
lcall
jmp
je
ss
add
ffreep
clc
jae
add
clc
push
mov
push
mov
mov
add
addr16
sub
ret
clc
xor
add
sar
in
addr16
je
clc
lret
clc
inc
add
mov
pop
outsl
cmp
out
test
clc
xchg
ss
dec
lods
adc
add
adc
sbb
es
cmp
clc
in
jns
push
pusha
add
add
add
scas
jns
pop
scas
add
add
jmp
add
cmp
xchg
mov
jl
mov
add
mov
jo
inc
add
add
sub
jecxz
aaa
test
clc
std
mov
adc
jnp
clc
add
dec
mov
push
add
stc
cli
mov
mov
add
daa
clc
sbb
clc
int3
sub
dec
adc
aas
pop
test
mov
jne
in
push
clc
dec
xchg
cli
vcmpps
jmp
add
ss
pop
movlps
add
fbstp
add
insl
gs
aad
cmp
in
ss
mov
add
xchg
ss
clc
mov
adc
add
clc
cltd
mov
call
nop
jmp
sbb
scas
pop
data16
xor
add
add
int
clc
pop
fists
mov
jmp
and
add
call
decl
pushf
inc
gs
clc
test
daa
clc
test
fwait
ret
clc
in
pop
xchg
dec
or
add
or
stos
xabort
clc
push
or
push
nop
jmp
test
roll
add
pop
gs
mov
clc
sbb
clc
push
clc
insb
data16
cmp
sahf
cmp
add
icebp
inc
add
xor
add
clc
and
popa
add
rolb
mov
mov
out
clc
nop
call
or
add
clc
lock
push
nop
jmp
nop
jnp
add
fldenv
clc
lcall
add
mov
or
in
mov
and
add
add
pop
or
push
add
add
dec
enter
clc
js
aad
clc
cmp
or
loope
mov
add
xor
xchg
sbb
popf
jmp
clc
out
test
push
inc
add
js
clc
std
std
inc
add
adc
add
clc
cltd
mov
add
nop
jmp
cmp
ljmp
add
add
add
jo
add
clc
fs
sub
mov
add
icebp
insb
xor
add
lea
and
xchg
sbb
adc
and
add
add
shll
movsb
clc
in
outsl
dec
popf
lock
clc
cmpsl
clc
cmp
clc
xchg
clc
and
add
adc
add
loope
push
clc
cmp
scas
cmp
add
out
dec
imul
ret
clc
mov
jnp
mov
xor
add
add
out
cmp
test
clc
imul
sub
test
popf
scas
pusha
add
jecxz
mov
clc
sbb
add
mov
clc
xchg
xchg
addr16
mov
and
add
sar
cmp
add
fists
add
xchg
jns
xchg
add
add
sar
in
int
clc
lock
js
add
mov
cwtl
push
jno
add
add
nop
jmp
add
lods
int
pop
iret
inc
add
xchg
add
add
mov
dec
or
dec
out
test
add
sub
add
push
dec
pushf
xchg
ljmp
adc
adc
clc
fmuls
clc
sbb
test
sbb
loope
cmp
cwtl
mov
add
xchg
push
mov
nop
jmp
nop
scas
call
jns
scas
cmp
pop
push
add
js
sub
clc
test
cmpsl
clc
loop
mov
lahf
cmp
push
mov
shrb
add
or
add
xor
add
dec
mov
imul
clc
pop
mov
popa
add
cwtl
mov
push
nop
jmp
pop
sbb
lea
dec
addr16
mov
imul
imul
pop
pop
pusha
add
push
mov
nop
jmp
jnp
call
fs
xor
mov
add
icebp
mov
fsubs
add
cmpsb
clc
rolb
cmpsb
clc
gs
mov
clc
pop
fldl
clc
gs
sub
arpl
add
dec
repz
mov
nop
jmp
nop
or
inc
or
add
pop
in
mov
add
nop
jmp
pop
sbb
add
add
xchg
sbb
mov
gs
mov
clc
push
xor
add
out
jp
clc
aas
cmp
das
dec
jb
add
js
or
sahf
push
add
add
test
lods
ds
sub
clc
shrb
pop
adc
out
in
insb
dec
xchg
ds
pop
movsl
clc
pop
mov
add
add
jo
add
stc
jbe
clc
jb
add
add
add
jnp
sub
lret
xchg
stc
jns
pushl
push
mov
xchg
ret
xor
add
add
mov
addr16
cmc
fmulp
lahf
jo
add
push
push
mov
call
call
lea
clc
add
movsl
clc
or
popf
inc
inc
add
add
in
in
pop
mov
add
insb
fbstp
add
clc
jge
clc
sahf
jl
addr16
test
add
rorb
sbb
jmp
sub
rcr
add
add
clc
adc
push
in
pop
js
ficompl
clc
inc
clc
add
add
repz
js
clc
sbb
clc
xchg
dec
clc
or
adc
add
clc
cltd
dec
xor
add
add
add
pop
inc
clc
cmpsl
clc
stc
xchg
mov
push
add
lea
clc
inc
clc
or
test
cmp
clc
gs
push
sub
push
inc
clc
mov
adc
incl
jnp
movsl
sub
addr16
into
xlat
repnz
fstpl
clc
lcall
add
xlat
adc
add
loope
xchg
inc
clc
std
lret
mov
clc
roll
add
jg
nop
jmp
add
adc
pop
and
add
add
mov
push
mov
clc
addr16
sub
or
add
aam
add
add
add
add
add
pushl
ljmp
or
in
and
add
mov
mov
nop
jmp
jae
and
mov
jbe
add
add
and
add
lahf
push
cli
cltd
cmp
jno
add
dec
mov
add
push
pusha
nop
jmp
ret
ret
and
inc
cltd
add
loop
in
fidivl
je
adc
ret
or
push
inc
add
xor
add
lret
adc
cs
add
popa
add
push
ffree
clc
inc
clc
cmp
daa
clc
cmpsb
clc
lods
fimull
pusha
add
sti
inc
add
and
es
decl
jmp
adc
add
in
dec
in
adc
add
inc
clc
mov
push
cmp
add
cmp
clc
adc
add
mov
popa
ret
inc
add
jno
nop
cwtl
xchg
adc
add
add
add
jo
add
and
add
fistl
add
cmp
cmp
dec
mov
je
mov
clc
and
add
add
add
add
add
nop
jmp
push
jno
xor
nop
pop
movsb
clc
inc
clc
mov
sbb
add
repz
sbb
xabort
clc
cmp
clc
push
add
mov
cmp
xor
add
vcmpps
inc
clc
inc
clc
fldl
repz
sahf
jle
add
shll
dec
out
pop
fcoms
add
push
jmp
lods
sub
mov
sbb
gs
mov
jmp
xbegin
mov
clc
push
cmp
inc
add
imul
pop
sub
add
dec
adc
add
jo
add
pop
cmp
clc
into
mov
mov
sub
daa
clc
cmp
xor
clc
and
add
add
sbb
clc
jne
mov
sub
mov
xor
add
mov
repz
out
fisttps
adc
add
add
inc
clc
cmp
mov
push
into
xor
add
clc
cmp
dec
and
add
dec
int
clc
hlt
mov
cltd
jp
add
push
mov
push
adc
add
pushf
mov
add
add
add
push
clc
adc
clc
fwait
sub
xor
add
add
bswap
and
add
clc
out
push
add
dec
xchg
add
add
clc
jl
add
add
cmp
iret
push
add
cmp
clc
popf
sub
clc
stos
iret
out
es
pushf
jl
out
add
add
in
adc
add
movsl
clc
jle
mov
imul
clc
adc
das
repnz
mov
clc
cmp
jge
call
pushl
ljmp
add
add
add
add
clc
ror
loop
rcll
clc
mov
cwtl
fs
inc
add
xor
add
out
push
add
sti
insl
stos
stc
xabort
push
mov
clc
fstps
cmp
adc
add
add
pop
loop
out
aaa
cmp
rcrl
enter
clc
dec
ret
clc
aam
cmp
imul
clc
sar
clc
pop
jno
add
add
sbb
add
mov
fwait
jecxz
inc
clc
push
mov
sahf
loope
jnp
cmp
aaa
int
decl
arpl
xor
test
jno
add
clc
ror
xchg
inc
add
jl
cmp
xor
clc
sub
add
and
add
xor
add
lods
sub
add
fildl
clc
test
clc
or
add
lcall
mov
add
mov
sub
add
pop
mov
sub
cmp
push
mov
add
add
push
data16
sbb
fucompp
mov
mov
mov
add
xchg
sub
clc
out
dec
jns
mov
clc
and
add
adc
add
add
and
cld
jmp
js
dec
fldcw
xor
add
cmp
add
lahf
aas
or
add
and
push
add
add
int
out
sahf
xchg
push
add
xchg
xabort
nop
mov
add
clc
sar
xor
cmp
clc
adc
add
clc
inc
add
cmpsl
clc
jl
xor
add
clc
bound
add
addr16
cmc
out
outsl
push
clc
sbb
das
int3
jbe
clc
insl
addr16
sar
loopne
jmp
insl
dec
mov
inc
clc
cltd
out
mov
cmpsb
clc
ffreep
clc
xchg
cmp
add
stos
inc
add
mov
clc
dec
push
mov
push
pushf
add
add
add
insb
sar
sti
shrb
or
jge
mov
cmp
lods
mov
imul
sub
add
test
mov
clc
jle
clc
imul
or
daa
clc
outsb
mov
icebp
nop
mov
loope
rcrl
jo
add
add
add
add
add
pushf
cs
sbb
jp
mov
pushf
sar
cld
or
mov
clc
mov
add
mov
clc
mov
push
add
cmp
dec
lahf
fidivs
xbegin
lods
imul
add
cmp
clc
aaa
std
gs
add
add
mov
inc
add
shll
clc
outsl
call
xchg
xor
clc
pop
ss
add
add
add
std
je
clc
xchg
jle
cmp
cmpsl
clc
push
push
add
fstpt
jle
fcoml
stc
inc
add
inc
add
xor
add
data16
mov
add
and
pushf
ljmp
sub
sahf
mov
mov
add
xchg
fmull
add
cmp
test
sar
std
addr16
es
fldcw
divb
es
pop
pop
scas
push
clc
in
incb
add
fstl
cwtl
jg
add
stc
xor
add
add
std
mov
clc
je
clc
daa
clc
ret
clc
and
add
lock
xchg
sbb
push
out
notl
repnz
clc
inc
clc
pop
pop
cmp
clc
mov
mov
add
mov
clc
aaa
dec
ja
sahf
inc
add
sub
jno
add
push
and
add
pop
dec
xbegin
add
inc
clc
pop
clc
sub
and
add
xchg
pusha
add
test
jne
push
add
pop
clc
mov
mov
loope
mov
int3
cmp
add
push
clc
addr16
mov
pop
fistps
add
dec
push
daa
clc
push
adc
add
add
aam
jge
inc
clc
mov
lods
testb
clc
mov
jo
add
clc
add
add
js
cmp
clc
in
and
add
add
imul
sahf
sbb
sbb
push
add
test
clc
shll
add
aaa
pop
in
shr
cmp
dec
jmp
mov
sbb
cli
mov
incb
inc
clc
dec
stc
fcom
inc
add
cmp
mov
mov
das
jne
pop
clc
pop
aam
cmp
clc
mov
jno
add
add
push
rorb
inc
add
fcmovnb
clc
insb
lcall
outsl
mov
jecxz
enter
add
xor
add
and
nop
gs
sbb
add
add
xchg
dec
lods
and
add
clc
ret
cltd
out
mov
mov
sbb
clc
mov
add
add
push
cwtl
pop
test
clc
aad
mov
push
add
sbb
push
add
repnz
stos
pop
pusha
add
sbb
inc
add
mov
adc
add
pop
add
add
add
sbb
clc
xor
xabort
jg
mov
imulb
add
cltd
mov
clc
dec
mov
shrl
xchg
sub
in
mov
pusha
add
xchg
xchg
fs
in
xchg
decl
or
jnp
add
mov
add
mov
data16
sub
add
jp
int
clc
iret
jmp
add
popf
lahf
scas
dec
mov
pop
mov
mov
imul
push
clc
pop
pop
xor
add
add
push
mov
pop
loope
jbe
fcompl
cmp
or
xor
mov
clc
out
xor
add
clc
popf
shll
push
clc
adc
jb
add
clc
out
jg
clc
addr16
xchg
xor
add
sahf
and
add
enter
and
add
add
fwait
add
add
add
jmp
push
fsubl
clc
mov
xabort
xor
add
cmp
mov
lods
clc
jl
clc
mov
jge
aad
daa
clc
dec
pop
fdivl
add
xor
add
xor
add
add
clc
lret
pop
xchg
mov
movsl
clc
mov
repz
xabort
shl
clc
cmc
cmpsb
clc
mov
fisubrl
mov
cmp
out
imul
adc
add
insb
cmp
xor
add
insl
sar
ds
add
clc
add
add
clc
push
xor
add
adc
add
das
and
add
clc
adc
add
test
mov
add
stos
ja
adc
add
xor
clc
aaa
das
sbb
sti
js
xor
add
clc
mov
in
cmp
mov
mov
add
sbb
and
add
mov
lahf
into
sub
add
push
clc
stos
clc
sub
add
pop
clc
push
fnstcw
add
add
add
add
clc
mov
jg
out
xor
add
mov
jbe
pop
xchg
xor
add
bound
add
sar
clc
fsubrl
test
jl
add
add
mov
mov
clc
dec
xchg
dec
pop
jmp
and
add
mov
ja
fwait
mov
pop
clc
xchg
fsubrl
mov
add
imul
add
clc
mov
ljmp
clc
xor
add
clc
or
clc
mov
arpl
add
sar
clc
out
sar
faddl
fs
push
test
clc
fisttps
mov
clc
fbld
fwait
lahf
stos
cmp
clc
mov
cmp
loop
mov
loopne
jo
add
inc
add
push
add
push
push
fnstenv
movsl
clc
int3
ret
clc
je
iret
jge
push
add
jle
clc
cmp
pop
inc
clc
mov
push
clc
enter
jp
in
jae
add
sbb
sahf
and
clc
gs
icebp
mov
add
pop
int
popf
and
lock
inc
add
nop
cmp
stos
cmp
clc
ss
xor
add
mov
mov
out
xor
add
clc
mov
rcrl
adc
adc
mov
sar
dec
xbegin
add
dec
add
add
dec
into
cmp
or
scas
jge
ljmp
push
insb
fimull
push
mov
pop
int
clc
or
add
and
add
mov
cs
inc
clc
xchg
negb
add
clc
dec
mov
add
out
or
sbb
add
cmp
out
sbb
sbb
fdiv
je
xor
add
add
xchg
lea
xbegin
clc
push
testb
add
jo
add
xabort
fcoml
add
loop
mov
add
sti
dec
xor
add
idivb
cmp
mov
movsb
clc
jle
addr16
mov
add
fs
fs
mov
pop
jecxz
leave
pop
or
add
xor
clc
sub
das
lcall
cmc
out
imul
push
add
push
xabort
clc
jg
jo
add
out
jl
clc
jmp
mov
xchg
bound
add
call
insb
mov
xor
add
clc
sub
out
dec
out
stos
xor
add
add
mov
loopne
out
cmp
ljmp
cli
jbe
clc
jg
or
data16
test
add
insl
out
jp
clc
sti
push
cmpsl
clc
xor
add
jo
add
xchg
jbe
clc
pop
sub
fmul
jno
add
clc
loopne
sub
or
mov
sub
cmpsb
clc
hlt
cmp
pop
icebp
and
cmc
lret
mov
add
cmp
add
mov
mov
add
imul
add
adc
add
clc
lock
clc
daa
clc
in
jns
repz
push
add
pop
rcll
add
cmp
mov
add
adc
add
sti
xlat
pop
push
add
clc
cltd
cmpsl
clc
imul
clc
mov
mov
mov
add
xor
add
add
add
dec
shll
add
ficompl
add
clc
push
mov
add
or
sbb
clc
clc
add
add
clc
minps
add
sub
cmp
mov
clc
int
clc
notb
add
ret
clc
or
lret
jecxz
sub
push
jb
add
mov
add
insl
pop
adc
add
pop
jle
jle
clc
in
adc
add
add
xlat
sar
or
out
and
ud0
add
lahf
loop
stos
pop
xchg
or
dec
lods
rcll
adc
add
xor
cs
add
xor
xchg
loope
sub
or
fcoms
add
adc
add
add
clc
bound
add
out
jle
add
pushf
clc
mov
fsubl
daa
clc
or
inc
add
imul
inc
add
repnz
das
jg
fldcw
test
fs
xchg
scas
adc
add
clc
iret
xor
add
add
nop
cmp
clc
mov
inc
clc
mov
jno
add
clc
add
add
mov
jp
push
add
cmp
add
shrb
jns
insb
add
add
ljmp
cwtl
sub
mov
clc
sub
xor
add
leave
fistpll
clc
dec
xchg
and
add
add
outsb
sbb
mov
inc
clc
mov
mov
lods
xchg
fisttpl
outsb
cmp
scas
mov
imul
clc
cmp
jbe
clc
xor
add
imul
mull
add
add
cmp
add
push
clc
pop
clc
pop
aaa
mov
mov
push
clc
fldenv
mov
xor
add
out
adc
add
add
clc
add
add
scas
lcall
or
xchg
mov
mov
cmp
clc
or
inc
add
nop
dec
popa
add
out
mov
lods
xlat
inc
add
mov
pop
mov
clc
sbb
push
or
pop
cmp
jb
add
xbegin
clc
mov
jb
add
cmp
adc
gs
inc
clc
rol
clc
or
push
cmp
imul
clc
add
add
or
add
mov
sub
cmp
movsb
clc
stos
mov
fists
dec
xchg
sbb
clc
adc
adc
add
mov
clc
push
add
add
add
and
add
pop
inc
clc
mov
ficomps
sbb
dec
mov
clc
xabort
insb
imul
mov
xabort
mov
push
add
mov
mov
cmp
inc
clc
jmp
inc
add
rcl
xchg
ret
clc
pushf
sub
mov
jnp
cmp
add
xlat
lret
fucom
clc
inc
add
cmpsl
clc
mov
mov
add
clc
dec
bound
add
add
and
cltd
nop
sub
cmp
mov
repnz
pop
aas
out
loope
bound
add
popf
shlb
add
pop
clc
add
loop
jmp
adc
add
xor
add
aam
add
xor
dec
xbegin
add
aaa
xor
fcomp
movaps
adc
bound
add
stos
xor
add
clc
jp
int3
or
popf
xchg
mov
clc
sbb
mov
clc
enter
mov
clc
gs
negb
test
das
and
add
xchg
xchg
int
add
or
rclb
inc
add
imul
clc
std
pop
clc
and
lods
cmpsb
clc
pop
ja
add
mov
sbb
add
clc
xabort
mov
add
mov
adc
inc
add
ret
clc
hlt
push
lock
repz
clc
push
inc
add
add
js
add
insb
and
ret
clc
dec
mov
dec
lahf
lea
mov
add
add
add
add
ret
clc
xbegin
jbe
xbegin
add
outsb
add
daa
clc
cmp
clc
mov
add
add
add
arpl
add
clc
pop
push
dec
push
lea
clc
fcom
test
add
add
clc
testl
add
cmc
mov
add
mov
out
push
insl
ret
clc
pushf
jl
clc
mov
fdivr
mov
bound
add
xchg
adc
add
cmp
add
add
clc
ds
clc
mov
push
add
inc
add
cmc
push
sti
xor
inc
clc
xbegin
fwait
inc
add
in
test
jmp
add
push
fcmovb
clc
sti
aam
clc
pushf
clc
adc
add
pop
adc
add
cmp
sahf
int3
mov
clc
pop
cmp
add
or
mov
rorb
mov
clc
inc
clc
fsubs
add
add
xchg
cmp
add
xor
xor
clc
bound
add
add
call
add
push
pop
adc
add
clc
scas
mov
xchg
lret
clc
cwtl
adc
add
add
add
or
add
xlat
jbe
xbegin
aad
clc
sbb
or
jp
clc
cmc
outsl
jg
mov
lods
clc
outsb
mov
mov
add
add
dec
das
divb
add
push
add
stos
cmp
xchg
stc
or
inc
clc
push
sahf
test
fcomip
dec
mov
add
outsl
insb
xchg
cwtl
js
mov
add
stos
jno
add
add
clc
in
faddl
clc
mov
stos
xchg
xchg
outsb
xchg
scas
jecxz
sbb
pusha
add
and
add
clc
test
pusha
add
sar
add
add
sub
out
dec
dec
sub
mov
push
inc
add
xor
add
add
add
adc
add
rcl
std
scas
mov
mov
fsubrs
clc
and
cmpsb
clc
push
clc
cmp
in
lret
clc
push
popa
add
sub
clc
notb
add
jo
add
das
test
daa
clc
test
jle
insl
aam
adc
add
mov
addr16
int3
and
add
clc
adc
add
int3
xchg
test
clc
and
add
xchg
jl
add
adc
add
cmp
add
xchg
sti
movsl
clc
adc
clc
or
clc
cmp
add
add
cmp
clc
cmp
sbb
add
or
add
mov
add
shrl
mov
add
loopne
mov
test
nop
popf
pop
mov
into
mov
es
pop
das
sub
dec
ljmp
aam
mov
stos
sub
clc
add
js
clc
add
call
pop
das
jno
add
add
imul
dec
dec
lock
add
clc
xbegin
add
out
dec
inc
clc
xchg
or
clc
loope
cmp
mov
xchg
jno
add
pop
or
arpl
add
lock
jg
xor
add
clc
sti
mov
add
mov
add
mov
clc
add
add
clc
imul
dec
cwtl
std
cmp
adc
add
clc
mov
dec
outsb
inc
clc
add
add
jecxz
pop
clc
aaa
fs
hlt
lahf
xchg
mov
or
adc
add
fisttpl
enter
bound
add
add
clc
jp
push
add
bound
add
sub
sar
push
sub
xchg
in
clc
xchg
pop
add
push
dec
fcmovbe
ficoml
add
out
cmp
and
add
add
sar
loop
adc
add
sahf
sbb
mov
push
clc
lret
cmpsl
clc
add
add
add
xchg
push
add
lahf
dec
xlat
and
add
add
xor
add
add
out
mov
hlt
hlt
sbb
add
cltd
sar
clc
add
lock
dec
mov
mov
pushl
add
cmp
add
xchg
jp
jmp
add
clc
aas
test
clc
int3
dec
lods
pushf
rcrb
sub
inc
clc
pop
clc
mov
cwtl
pusha
add
cmp
add
leave
xor
add
clc
insl
mov
xor
add
xchg
movsb
clc
test
mov
add
dec
adc
add
clc
adc
or
add
clc
insb
push
add
pop
mov
fcmovne
pop
or
and
add
cmp
into
push
add
xchg
inc
add
mov
clc
or
call
xbegin
mov
clc
ret
sub
push
test
xchg
push
add
adc
dec
pop
aaa
cmp
leave
push
add
pop
in
mov
or
add
sbb
or
mov
jp
clc
gs
add
add
clc
jbe
clc
jle
imul
add
pop
adc
add
out
jo
add
clc
roll
clc
xbegin
pop
icebp
outsb
push
add
xchg
stos
sbb
sub
fimuls
in
jb
add
clc
adc
mov
add
add
xchg
movsb
clc
jo
add
xchg
adc
add
inc
clc
lods
lret
jb
add
ja
cmc
popf
jle
pop
shll
or
inc
clc
sub
add
add
int3
and
mov
js
lcall
add
xchg
mov
out
jg
fwait
leave
stos
mov
xlat
xor
add
mov
clc
and
add
inc
add
pop
mov
add
add
inc
add
std
jl
mov
clc
cld
cwtl
sub
jne
add
outsb
fisubrs
inc
add
jle
add
and
add
mov
add
movsl
clc
xchg
cmpsb
clc
std
mov
ret
fisubrl
sub
add
loope
jne
cmp
cmp
clc
dec
inc
add
lea
pop
fcmovnu
cmp
add
fldcw
push
dec
cld
lret
pushf
fadds
push
add
mov
add
lock
push
iret
and
ss
fwait
xor
add
add
add
rcrl
int3
cmpsl
clc
mov
clc
dec
sahf
add
add
lret
mov
clc
stc
jb
add
add
clc
movsl
clc
xor
add
sar
clc
scas
fprem
xor
lea
clc
lret
inc
add
mov
adc
lret
add
inc
add
fdivs
ficoml
push
test
inc
add
daa
clc
aas
shll
clc
mov
add
cmp
add
pop
clc
dec
pslld
clc
push
add
std
push
add
cmp
xor
push
lea
addr16
cmp
mov
aas
je
add
inc
clc
cmp
push
jnp
inc
add
cmp
xlat
inc
add
dec
mov
add
clc
sbb
push
lods
fldcw
cmp
xbegin
dec
stos
shl
clc
mov
jne
add
ret
clc
jmp
clc
clc
xchg
jns
inc
add
mov
clc
xchg
pop
sbb
gs
shrl
add
fs
je
clc
dec
xor
add
scas
xor
add
sub
or
pop
xor
jecxz
mov
stos
or
and
and
add
clc
mov
add
add
add
clc
lret
icebp
adc
add
js
xchg
cmp
clc
jg
stos
mov
add
jl
add
dec
cmp
fiaddl
not
movsb
clc
out
out
repz
mov
add
add
clc
jl
add
xor
add
add
sahf
push
pop
jp
jge
mov
jo
add
clc
push
push
clc
jb
add
add
js
sbb
cmp
call
shlb
out
in
cmc
xchg
ja
clc
push
add
out
out
mov
in
lea
dec
or
add
dec
cmp
add
loopne
cmp
pop
inc
clc
xchg
adc
add
mov
clc
pop
clc
push
add
sub
clc
cmp
dec
mov
clc
sbb
add
add
cmp
inc
clc
pop
nop
mov
clc
push
add
push
add
icebp
mov
clc
push
add
imul
push
mov
in
add
sub
clc
dec
sub
add
clc
fcom
daa
clc
test
repnz
in
cmp
pop
xchg
push
inc
add
bound
add
add
mov
clc
mov
add
adc
add
pop
fisttps
nop
insl
movsb
clc
fmull
stos
test
jecxz
pushf
mov
add
hlt
movsl
clc
lock
nop
jae
add
mov
push
add
stos
jle
and
jl
add
add
push
inc
add
repnz
add
push
repz
add
fisubl
add
out
imull
sbb
fmuls
loope
ja
mov
push
cmp
cld
clc
pop
jl
add
xbegin
clc
fadds
add
jno
add
xchg
jmp
pop
adc
add
inc
add
mov
push
add
cmp
insb
adc
sub
push
jg
clc
sbb
jae
add
sub
movsl
clc
fistpl
add
push
add
add
add
add
mov
add
cmp
mov
js
clc
xbegin
sahf
outsb
test
pop
and
add
gs
pushf
push
movsb
clc
push
add
push
lret
sar
insl
jecxz
ret
out
pop
push
add
jmp
clc
push
add
dec
jmp
clc
mov
inc
add
xchg
ret
clc
mov
aaa
push
pop
imul
clc
cmp
clc
mov
add
dec
mov
mov
push
xchg
mov
clc
push
sbb
das
add
add
add
popa
add
sub
in
or
cmp
pop
mov
add
in
scas
sbb
cmpsb
clc
pushf
mov
clc
std
fcoms
fistl
pop
clc
cmp
and
add
mov
push
out
sbb
out
jo
add
add
add
add
clc
cmc
pop
cltd
pop
cmp
add
add
ficoml
cld
or
add
inc
add
bound
add
sar
cwtl
js
push
scas
test
sbb
cmp
add
pushf
jle
sbb
add
stos
xor
fcmovnb
clc
xchg
test
cmp
xor
add
clc
fsubs
repz
inc
add
sar
add
cmpsb
clc
sub
pusha
add
inc
clc
mov
xabort
push
clc
out
adc
mov
lahf
in
loope
inc
clc
mov
add
dec
mov
cmp
nop
test
lods
mov
add
out
xor
add
pop
dec
xor
add
xchg
jmp
add
frstor
insl
lret
or
and
add
jb
add
push
add
loopne
out
add
add
add
movsl
clc
test
sar
out
pop
adc
add
mov
add
jecxz
mov
clc
test
pop
das
fidivl
sub
cwtl
jbe
xchg
stos
sub
cmp
sub
mov
sub
faddl
push
out
sbb
popf
js
xchg
das
xor
add
add
xor
add
clc
test
ret
test
stos
outsl
add
add
test
clc
cmc
cmp
pop
js
lahf
xlat
bound
add
inc
add
pop
clc
xchg
jbe
in
lret
add
into
jle
call
out
cmp
clc
sti
jp
xabort
fisubrl
xor
add
add
stc
sti
test
cmp
rol
clc
and
add
lea
add
cmp
mov
clc
pop
and
rcr
cmp
clc
add
add
mov
mov
adc
fistpll
cmp
add
rorb
gs
imul
add
jb
add
add
sub
pop
cmp
xchg
sub
add
cmp
clc
pop
or
add
mov
cmp
add
xabort
popa
add
loopne
dec
lods
sbb
add
das
push
shrb
outsl
mov
out
mov
cwtl
mov
enter
xchg
adc
add
add
clc
pop
movsb
clc
jbe
push
add
std
mov
add
jbe
dec
ljmp
jo
add
add
add
mov
jo
add
adc
clc
stos
test
xor
add
insb
lea
gs
sbb
or
fs
dec
cmpsl
clc
fdivl
add
and
add
cld
jge
add
sbb
sub
fwait
negb
clc
dec
dec
sbb
add
ret
clc
fsts
add
lock
push
add
add
add
push
add
or
push
sti
add
add
cmp
add
xchg
fisttps
add
push
add
jnp
clc
fstl
clc
push
jp
or
aaa
loope
and
add
clc
lret
call
imul
sahf
dec
cmp
adc
lret
clc
cmpsb
clc
add
add
sbb
test
data16
mov
ret
test
clc
sub
out
pop
cmc
fcomps
imulb
arpl
add
add
test
ss
hlt
xchg
adc
add
mov
adc
clc
fwait
mov
mov
add
dec
sahf
in
adc
add
das
and
add
mov
cmp
clc
xor
add
mul
clc
jl
sub
daa
clc
iret
call
scas
inc
clc
notl
sub
add
sbb
mov
fsubrs
ret
clc
js
lret
popa
add
sub
jge
test
xchg
mov
clc
xor
add
clc
loop
gs
sar
jb
add
lret
loop
ret
dec
mov
in
sub
stos
jp
cwtl
ret
clc
cmp
clc
nop
insl
sub
std
xor
add
add
xor
add
xchg
fs
inc
clc
mov
and
add
insb
and
add
add
clc
gs
enter
clc
jp
nop
aam
add
daa
clc
sbb
fisubrs
fcmovu
out
push
jbe
clc
scas
xbegin
mov
fwait
aam
inc
add
mov
stc
adc
add
pop
sub
clc
outsl
sbb
add
xchg
mov
mov
add
mov
clc
bound
add
add
addr16
shr
das
xor
add
lret
movsb
clc
sub
push
clc
jbe
or
pop
fidivrs
ret
dec
and
jge
add
add
fistl
ret
add
mov
add
adc
add
pop
xor
add
imul
add
add
push
insl
pop
fdivs
add
add
add
ja
add
imul
push
inc
add
jno
add
out
inc
add
mov
jge
inc
clc
xor
add
repz
sbb
clc
cmp
clc
cmp
sub
clc
aad
cmp
push
mov
jo
add
add
cmp
cli
jl
add
add
add
shll
add
add
jg
jl
gs
arpl
add
and
mov
add
pop
das
add
add
mov
pop
xor
add
adc
add
movsb
clc
mov
mov
loop
fcomps
in
push
xchg
sbb
cmp
fsubrs
fimull
data16
clc
into
cmp
jo
add
clc
push
add
imul
add
aaa
in
iret
das
jecxz
mov
clc
mov
clc
hlt
dec
cmp
aad
clc
pop
xor
shl
int
shl
clc
dec
leave
call
jo
add
add
cmc
ffree
clc
mov
clc
jg
lock
mov
std
idivb
clc
jbe
cmp
xchg
loop
cmpsb
clc
mov
add
fcoml
inc
clc
cmp
push
outsb
fistpll
mov
jmp
clc
pop
test
clc
adc
add
clc
mov
add
pushf
xor
jecxz
into
pop
sarl
das
negl
or
clc
sar
add
mov
mov
aam
sub
lea
xchg
aaa
cmp
add
mov
lods
dec
cmpsb
clc
fisttpl
mov
mov
clc
idivb
clc
mov
push
movsl
clc
mov
lcall
lahf
cltd
inc
clc
cmc
xchg
sbb
jmp
clc
and
add
mov
add
cli
pushf
dec
push
cmpsl
clc
jb
add
out
sbb
clc
mov
and
add
add
push
add
xor
add
addr16
adc
add
inc
add
shrb
add
out
and
add
add
add
ret
clc
add
add
add
sar
icebp
add
push
add
movsl
clc
mov
mov
clc
mov
out
mov
add
or
add
mov
dec
cld
jle
mov
mov
clc
inc
clc
imul
int
add
add
insl
into
in
stos
sub
jmp
fsubrs
add
and
add
nop
mov
xchg
mov
add
scas
jmp
jmp
push
mov
mov
xor
add
pop
or
mov
aam
xor
outsb
scas
arpl
add
cmpsb
clc
dec
enter
loopne
dec
cmp
xabort
stos
adc
add
clc
xor
add
add
in
cmp
dec
loopne
cmp
mov
clc
or
cmp
add
and
add
inc
clc
lcall
clc
fs
clc
cmp
xbegin
add
clc
xchg
xchg
push
xbegin
jbe
mov
lret
fnsave
adc
jo
add
xchg
adc
add
test
gs
mov
mov
or
cmp
inc
add
add
movsb
clc
hlt
fs
xchg
lods
repz
clc
pop
mov
add
add
ljmp
and
add
popl
add
aam
sub
sbb
add
jb,pt
add
test
cmp
clc
pop
or
leave
test
cli
fistl
clc
cmp
icebp
or
fisttps
ret
clc
mov
add
data16
jo
add
clc
stos
scas
popa
add
dec
mov
clc
lret
add
jbe
clc
mov
shll
add
and
add
add
mov
add
add
add
add
add
cltd
inc
clc
rorb
add
add
test
jo
add
sub
push
add
aad
pop
xchg
xchg
out
push
add
add
enter
test
sbb
add
mov
push
clc
xbegin
add
pop
xor
add
clc
ljmp
clc
pop
cli
ljmp
fbld
clc
and
add
dec
sar
cmp
enter
cmp
ss
roll
add
mov
clc
mov
clc
dec
out
inc
add
nop
mov
inc
clc
inc
add
ja
leave
popa
add
adc
pop
push
clc
and
sub
add
sub
mov
inc
add
popa
add
push
adc
add
lret
in
out
imul
clc
insb
jbe
clc
mov
or
hlt
js
or
xchg
cmp
popf
test
mov
int
push
test
test
test
xchg
jo
add
aad
clc
xchg
test
and
add
cmp
mov
clc
dec
mov
xor
clc
jbe
add
fs
dec
repz
loope
stc
popa
add
mov
add
sub
dec
loopne
mov
sub
mov
xor
clc
lods
call
ss
clc
fildl
aad
clc
jns
js
push
mov
adc
add
clc
jl,pt
cmc
jg
test
sar
jmp
xchg
and
clc
pop
push
add
imul
add
and
add
add
sub
das
jmp
incb
mov
clc
clc
add
add
adc
add
inc
clc
sub
add
add
add
cs
clc
sub
push
push
add
dec
cmp
clc
shrl
add
add
cmp
clc
add
add
clc
cltd
pop
mov
jge
xor
add
add
test
mov
add
insb
adc
clc
clc
mov
mov
rdseed
bound
add
lret
push
adc
add
jnp
xbegin
clc
xchg
mov
jp
clc
jbe
add
je
lret
scas
fs
js
jae
add
aaa
ret
clc
cmp
ljmp
int3
shlb
imul
clc
pop
cltd
push
add
lahf
test
aad
clc
divps
outsb
int3
test
in
test
add
fcompp
pop
push
lret
jns
clc
xor
add
or
scas
sbb
jae
add
inc
add
testl
lock
add
scas
daa
clc
pop
clc
inc
clc
mov
inc
add
mov
test
data16
inc
add
stc
clc
jno
add
clc
outsl
cmpsl
clc
insl
mov
dec
xchg
jmp
clc
mov
or
add
loopne
push
clc
pop
insb
movsl
clc
rcrb
mov
clc
or
add
clc
pop
adc
add
mov
mov
jbe
add
sub
add
xor
add
mov
pop
mov
or
pop
sar
add
hlt
out
or
add
fsub
clc
pop
dec
mov
dec
dec
push
add
mov
xchg
inc
clc
mov
add
push
cld
stc
inc
clc
jl
int
jg
mov
add
jb
add
add
cwtl
xchg
inc
clc
das
dec
icebp
pusha
add
movsl
clc
cmp
lahf
in
add
add
clc
sar
sub
clc
sar
clc
jge
fs
jmp
shll
clc
cli
mov
add
lret
je
mov
lods
pusha
add
leave
mov
bound
add
add
mov
and
add
adc
add
lods
adc
add
add
push
add
aas
cmp
add
mov
clc
and
add
push
clc
xbegin
clc
sub
add
call
mov
xchg
fistpll
cltd
shlb
push
add
push
clc
push
add
cmpsl
clc
inc
clc
or
pop
popa
add
arpl
add
add
clc
push
pop
mov
sub
fdivrl
xchg
movsb
clc
jae
add
stc
incl
clc
cltd
sub
jae
add
clc
negb
push
clc
dec
testb
dec
mov
inc
clc
clc
ljmp
mov
sbb
cmp
add
sbb
clc
or
add
sub
add
je
jecxz
int3
cwtl
and
add
mov
clc
hlt
and
add
test
imul
clc
pop
or
clc
sbb
je
cwtl
xchg
pop
and
call
jne
test
sti
sbb
add
clc
arpl
add
add
dec
cmp
jae
add
add
push
add
add
mov
insl
mov
out
arpl
add
bound
add
xchg
ja
lahf
in
jle
add
jle
xchg
or
pop
mov
clc
fucom
clc
add
add
add
out
dec
cld
std
jecxz
pop
sar
jbe
xchg
inc
clc
hlt
push
add
insl
ljmp
pushf
pushf
adc
push
inc
clc
fists
add
push
add
inc
clc
or
add
xor
add
dec
jb
add
bound
add
clc
fmull
ficoms
add
imull
clc
lret
lea
jns
add
sub
add
es
scas
xor
add
add
into
test
repz
or
push
sub
add
jno
add
clc
movsl
clc
xchg
cmp
xor
aas
sarl
add
clc
or
mov
inc
clc
pop
mov
add
jge
loope
stos
hlt
mov
sar
mov
jge
clc
leave
and
add
add
jnp
push
testb
add
lret
mov
ds
clc
dec
repnz
je
es
jo
add
pop
clc
cmpsb
clc
in
sbb
fnsave
jle
test
and
xabort
cltd
jmp
add
add
add
jmp
add
clc
mov
inc
clc
inc
clc
sbb
dec
dec
dec
shrb
mov
sbb
insl
xor
add
nop
mov
cld
sbb
pop
stos
or
add
mov
dec
daa
clc
sbb
pop
jno
add
clc
aam
mov
sbb
add
and
jnp
inc
clc
scas
imul
dec
das
ja
cld
pop
testl
mov
aad
push
dec
adc
add
clc
movsb
clc
or
add
add
lcall
cmp
push
add
adc
add
int
cmp
add
js
inc
add
int
mov
cs
or
add
add
pop
jge
clc
jmp
mov
fisubrs
xor
daa
clc
mov
clc
xchg
lods
clc
and
add
xchg
addr16
or
clc
adc
sbb
push
add
rclb
add
cmpsb
clc
dec
fcmovb
clc
int3
add
add
jecxz
lret
add
add
add
push
es
sub
fwait
add
add
cmp
call
adc
add
clc
nop
xchg
add
add
or
push
clc
inc
clc
dec
mov
jmp
inc
add
stos
push
add
and
add
dec
xlat
mov
add
add
mov
call
int3
stos
ljmp
fldl
clc
pop
ljmp
fneni(8087
clc
xchg
cmp
iret
push
fnstenv
xor
add
inc
clc
pushf
clc
and
add
stos
add
adc
add
add
push
data16
sbb
xchg
inc
add
sub
dec
into
ja
sbb
clc
mov
clc
and
add
nop
test
pavgb
push
xchg
ret
add
dec
cmp
cmp
pop
jne
push
xchg
ss
cmp
or
add
cmp
xchg
aad
push
clc
and
add
arpl
add
push
movsl
clc
adc
pop
and
enter
in
mov
adc
add
add
add
add
cmp
mov
clc
sbb
clc
in
ja
clc
fdiv
add
add
clc
stc
sub
clc
xabort
push
add
add
add
mov
inc
clc
pop
fnstenv
clc
or
movsl
clc
inc
add
arpl
add
clc
std
pop
clc
arpl
add
add
cmp
sbb
movsb
clc
in
int3
mov
add
bound
add
adc
sub
clc
push
add
hlt
push
out
mov
clc
inc
add
mov
rcr
ja
cmp
mov
clc
in
test
outsl
decl
int3
cmp
adc
mov
adc
out
mov
dec
in
pop
lret
pushf
push
clc
or
pop
dec
sar
mov
mov
clc
add
clc
cmp
std
mov
mov
add
je
adc
add
aas
xchg
mov
add
imul
jo
add
clc
ficoml
mov
add
mov
add
jmp
rclb
add
xabort
clc
data16
stos
std
pusha
add
push
add
loopne
or
sub
add
add
dec
mov
sbb
pop
mov
mov
lahf
xor
add
inc
clc
xchg
cld
pop
xlat
adc
add
js
insb
stos
inc
add
or
clc
fdiv
clc
sub
mov
lea
clc
cmp
pop
adc
add
add
pusha
add
gs
cld
movsb
clc
es
cld
lods
adc
add
out
iret
inc
clc
fbld
add
adc
add
out
jmp
clc
cltd
push
jg
xlat
xor
add
inc
add
sbb
jnp
xor
clc
fadds
add
rcll
ds
nopl
add
cld
dec
fidivrl
fs
idivb
dec
pop
lcall
and
add
sub
lret
hlt
clc
adc
add
add
add
xchg
out
ret
clc
loopne
push
add
sub
xor
add
int3
pop
shl
clc
movsb
clc
js
adc
add
add
inc
clc
adc
add
add
jno
add
lods
addr16
ret
clc
cmpsl
clc
adc
add
stc
add
add
notb
lret
clc
xor
add
and
add
scas
mov
add
js
add
fs
jb
add
clc
add
lea
add
and
call
inc
clc
addr16
js
add
and
add
xchg
sahf
sub
add
inc
add
bound
add
aam
add
add
adc
add
add
pop
cmpsl
clc
loope
jmp
clc
pop
jecxz
cmp
clc
lock
clc
scas
xchg
jp
cmp
add
inc
clc
mov
cmpsb
clc
hlt
lods
inc
clc
sar
xor
add
mov
dec
mov
or
cmpsl
clc
out
cmp
add
adc
add
fsubrl
cmp
xor
add
movsl
clc
lcall
push
mov
popf
lret
imul
mov
fiaddl
add
jmp
or
test
mov
insb
add
add
add
sbb
or
mov
iret
icebp
mov
cmp
movsl
clc
imul
add
adc
add
mov
sub
and
add
push
and
add
clc
and
add
clc
jb
add
sysenter
pusha
add
pop
dec
lahf
pop
xchg
sub
xchg
push
xchg
cmp
add
sub
in
cmp
pop
cmp
fnstsw
add
pop
fisttpll
jno
add
inc
clc
xabort
add
lock
sbb
clc
fiaddl
clc
sbb
negl
test
lret
xchg
sahf
hlt
leave
imul
clc
shlb
inc
add
pop
xor
add
fdivl
out
call
add
lods
nop
push
lods
hlt
mov
or
popf
call
jmp
clc
jnp
and
add
fsubrs
jge
clc
cmpsb
clc
jle
cmp
add
add
add
jae
add
clc
inc
clc
pand
push
dec
stos
cmpsl
clc
dec
push
adc
push
inc
clc
mov
add
add
add
add
or
jbe
mov
imul
mov
shr
scas
xor
add
clc
ret
clc
je
add
push
pop
sbb
enter
lods
fldl
add
xchg
out
and
add
clc
cwtl
and
sub
lcall
clc
mov
dec
mov
stos
aad
ljmp
iret
push
mov
add
stc
mov
daa
clc
in
sub
dec
xor
add
je
add
lods
push
clc
std
push
push
ret
clc
and
add
popf
lods
cmp
or
into
and
add
or
call
add
mov
sbb
add
mov
ret
mov
div
adc
add
sbb
add
xchg
lods
sbb
clc
aas
dec
mov
mov
addr16
vxorps
add
clc
fistps
mov
and
data16
lods
and
add
clc
mov
adc
add
clc
xchg
gs
mov
inc
add
test
mov
leave
adc
and
add
jne
xchg
es
mov
seto
in
daa
clc
out
adc
add
add
cmp
dec
xor
add
add
add
add
clc
and
sub
add
test
pusha
add
je
aad
clc
cld
mov
psubw
iret
movsb
clc
fwait
inc
clc
in
pop
push
jle
and
add
add
add
mov
sbb
mov
add
push
into
ret
sub
je
into
ficomps
adc
add
faddl
add
add
clc
jge
clc
lea
adc
add
add
fs
in
xor
add
pop
cmp
clc
mov
clc
out
icebp
popa
add
mov
add
mov
add
mov
enter
clc
test
push
clc
dec
gs
pushf
cmp
fcoms
add
cmp
leave
ja
mov
rcll
add
clc
xchg
cmp
cmp
add
add
ret
clc
aam
clc
sub
and
test
popa
add
insl
cmp
clc
adc
add
add
data16
pop
mov
mov
mov
aas
ss
sahf
loop
dec
cmp
popa
add
lret
and
add
mov
mov
mov
clc
fcoml
sar
sar
fucomip
mov
clc
add
add
clc
jb
add
add
outsb
xor
clc
mov
cld
stc
sub
xlat
xbegin
jge
int
cmp
scas
pop
lahf
cmp
lahf
xchg
inc
clc
mull
push
sub
add
lods
xchg
aaa
mov
xchg
cwtl
lcall
pop
clc
cmpsl
clc
out
xbegin
clc
movsl
clc
repnz
add
add
popf
ret
clc
ret
clc
xlat
pusha
add
cmp
mov
pop
mov
clc
xchg
sti
xlat
mov
clc
shrb
xchg
stc
scas
decl
lahf
adc
add
or
addr16
out
cmp
add
inc
clc
data16
xchg
xabort
mov
lods
popa
add
bound
add
sub
add
dec
cli
ljmp
sbb
adc
rolb
mov
clc
jmp
sub
jl
mov
or
add
test
shll
call
dec
mov
jge
aaa
cmp
add
jae
add
inc
clc
adc
clc
es
jecxz
jmp
pop
rcr
je
add
std
clc
mov
sbb
jne
clc
xchg
test
sub
add
lods
testl
mov
push
add
sbb
clc
stos
pop
sub
and
add
add
clc
sub
dec
sahf
insl
jno
add
dec
cmpsl
clc
std
dec
jne
jo
add
add
insl
jge
sub
clc
push
pusha
add
jmp
clc
xor
add
add
add
add
movd
ss
lods
loope
loope
cmp
clc
fadds
clc
push
jb
add
add
ss
add
sub
mov
xchg
push
insl
dec
mov
test
add
push
sti
ds
xchg
inc
clc
cmp
mov
out
or
in
mov
not
es
cmp
in
and
add
add
add
add
clc
sti
mov
out
aad
out
mov
jle
lret
clc
dec
adc
add
in
inc
clc
and
add
es
add
clc
xchg
xor
add
clc
into
ret
clc
jmp
add
ret
clc
fucom
clc
sbb
lahf
mov
adc
add
dec
mov
pop
push
imul
clc
adc
add
ss
add
add
int
lea
add
push
sbb
nop
and
add
add
in
adc
add
mov
lods
hlt
mov
clc
repz
add
aaa
shl
clc
popf
lods
cmp
adc
test
lret
xchg
pop
dec
insb
cmc
cmpsl
clc
inc
add
roll
jae
add
mov
lods
push
insb
sbb
cmp
dec
stos
fmul
ret
clc
int3
cmp
add
insb
lret
xchg
pop
clc
imul
add
insl
data16
insl
stc
jecxz
daa
clc
xor
add
repz
add
sarb
push
add
aaa
inc
add
pop
xchg
mov
xor
add
clc
sub
in
scas
bound
add
mov
call
icebp
ret
add
fnstenv
add
mov
clc
dec
scas
add
add
cmc
adc
fcomp
adc
flds
cmp
sar
mov
sti
out
xor
add
dec
jmp
movsl
clc
rcll
push
clc
sub
add
add
lock
push
adc
add
clc
aad
shrb
stc
cmpsb
clc
dec
pop
scas
jb
add
fdivl
sub
popf
cmp
add
clc
sub
outsb
adc
cmpsl
clc
insb
sub
dec
jge
add
repz
mov
clc
mov
adc
add
pop
inc
clc
aam
jbe
or
mov
cmp
and
add
sahf
nop
jl
push
adc
clc
mov
pop
lea
clc
dec
push
add
int
das
dec
adc
push
add
pushf
jbe
add
stc
lock
sub
pop
and
stc
cmp
sbb
push
stc
mov
scas
xchg
jne
clc
gs
loop
testb
and
add
adc
add
clc
mov
arpl
add
cmp
clc
lock
push
add
mov
cmpsb
clc
xbegin
mov
add
or
jle
nop
es
dec
add
arpl
add
clc
pop
addr16
filds
clc
jbe
add
loop
jg
add
and
add
sub
and
leave
test
popa
add
mov
clc
mov
add
add
pop
arpl
add
cmpsl
clc
icebp
jge
fiadds
add
add
xor
add
xchg
fsts
add
clc
lods
lock
mov
add
cmp
inc
add
loop
push
add
lcall
add
jne
in
fcmovbe
xchg
aad
add
pop
pusha
add
cmp
add
mov
add
cmpsl
clc
int
add
and
add
loope
test
and
add
add
int3
adc
add
in
hlt
fcomps
jge
nop
cmp
jns
je
mov
push
movsl
clc
fdivr
jb
add
jbe
mov
clc
xabort
xchg
sbb
push
fwait
outsb
jb
add
xor
add
mov
clc
je
fimull
add
ljmp
clc
or
mov
clc
cwtl
aas
popf
pop
jp
cmpsl
clc
out
add
add
xor
shlb
add
add
jmp
sub
clc
js
test
popf
dec
push
add
sub
clc
mov
sbb
add
call
push
jecxz
and
add
add
add
inc
add
inc
add
mov
add
jmp
jmp
loope
rclb
jo
add
xchg
lods
inc
add
adc
clc
pop
clc
cmp
cs
mov
clc
dec
inc
clc
imul
or
xchg
add
add
clc
out
xchg
adc
add
add
dec
inc
add
adc
sbb
xor
add
clc
jae
add
call
add
lret
xchg
scas
xchg
out
je
add
aaa
mov
cmp
and
mov
mov
mov
clc
mov
jns
pop
mov
clc
cmp
add
add
xchg
jb
add
xor
add
mov
or
clc
push
clc
pop
lock
inc
clc
and
add
add
popf
jg
in
mull
clc
sbb
clc
stc
lret
lock
add
cmp
clc
push
add
jo
add
add
add
sbb
push
add
xchg
test
cltd
hlt
lods
push
add
sbb
paddsb
add
adc
add
add
clc
inc
clc
mov
add
add
lock
cmp
dec
clc
sar
add
scas
mov
and
add
in
jl
jno
add
lahf
idiv
sub
shrl
mov
pop
clc
jae
add
and
add
aas
aam
in
dec
inc
clc
sbb
cmc
adc
add
sub
or
incl
add
std
es
add
add
add
test
dec
pop
push
and
add
out
pop
or
in
cmp
inc
add
or
hlt
cmp
add
mov
movsl
clc
inc
add
out
inc
clc
fidivl
mov
xchg
cmp
clc
gs
lods
sub
xlat
cmp
out
mov
add
add
xabort
push
add
push
mulps
icebp
ja
imul
cmp
mov
xchg
loopne
and
add
add
push
jns
add
lock
mov
ret
clc
add
and
add
aaa
mov
clc
in
lahf
or
pushf
xchg
clc
jmp
movsb
clc
xchg
add
insb
std
sbb
clc
sub
clc
xbegin
clc
xlat
enter
sarb
or
sar
dec
xchg
sbb
cmp
sahf
ficoml
loope
aad
inc
clc
push
sub
mov
pop
jl
ss
add
in
aam
clc
sar
out
jle
clc
sub
add
pop
or
clc
nop
mov
pop
clc
mov
in
aas
aam
fimuls
clc
in
sahf
push
fstl
add
test
data16
push
addr16
dec
and
add
in
ret
in
out
cmpsb
clc
int
aad
add
push
pushf
cmp
stos
sub
cmp
add
clc
shll
and
add
dec
enter
add
push
add
daa
clc
sbb
clc
stos
add
add
xor
add
clc
fwait
loopne
pop
cmp
frstpm(287
clc
sti
and
add
xchg
and
clc
fcmovnbe
pop
push
clc
in
loope
jne
loopne
sub
add
jne
clc
adc
add
mov
lcall
add
nop
ljmp
and
add
cmp
add
add
imul
pop
lea
add
popf
pop
hlt
out
test
mov
imul
shrl
and
add
clc
idivb
call
lcall
mov
add
cmp
add
sar
mov
ds
aaa
jns
clc
cmp
mov
or
insb
test
cwtl
inc
clc
push
dec
sti
aas
imul
out
scas
lret
xor
add
push
add
or
das
popl
add
sar
clc
pushf
and
adc
add
pop
add
add
shlb
add
fs
int3
hlt
mov
inc
add
and
sahf
sar
test
or
add
sbb
push
add
data16
add
lret
add
clc
xor
add
or
clc
and
dec
adc
add
inc
add
xlat
ljmp
add
clc
sbb
mov
cmp
ss
clc
pusha
add
sbb
sbb
xchg
aas
pop
int3
pop
mov
lret
and
cmpsb
clc
mov
add
pop
clc
mov
clc
or
mov
clc
adc
add
cmc
ret
clc
data16
lahf
cmp
out
push
mov
jmp
cmp
clc
push
add
add
clc
add
add
mov
clc
xor
add
clc
jne
cmp
jno
add
mov
fisubrl
jmp
out
mov
stc
fcompl
pop
push
vmulps
clc
popa
add
dec
jle
adc
add
mov
stc
or
clc
push
scas
push
xlat
and
movsl
clc
dec
lcall
fisubrl
add
and
add
add
clc
or
clc
adc
add
mov
out
enter
iret
daa
clc
adc
add
clc
adc
add
add
mov
add
jns
clc
or
add
cltd
xchg
pop
mov
mov
clc
dec
sub
mov
aas
dec
fidivrl
inc
add
xchg
and
xor
add
mov
inc
clc
fnstcw
movsb
clc
push
ss
mov
add
clc
jg
sbb
clc
into
sti
dec
cmp
cmp
pop
mov
clc
rolb
add
bound
add
clc
into
pusha
add
pop
jl
or
clc
push
movsl
clc
ret
jne
clc
cwtl
xor
add
movsl
clc
jmp
icebp
add
add
aam
push
xchg
sub
in
sbb
add
mov
clc
and
add
clc
call
clc
repz
fldcw
scas
dec
or
and
fstpl
mov
or
std
test
sbb
inc
clc
push
es
add
out
jle
clc
xor
sub
sbb
and
cmp
clc
sar
jmp
clc
xor
add
clc
fstpl
out
mov
fisttpll
xchg
clc
jb
add
clc
adc
add
xor
add
insl
test
addr16
out
lahf
out
cmc
dec
xchg
cmpsb
clc
xor
add
push
push
dec
dec
jle
cmpsb
clc
and
add
clc
div
aad
fldt
jo
add
add
clc
xbegin
rcr
xchg
ja
jo
add
add
fbld
add
test
movsb
clc
jge
add
jnp
add
xchg
addr16
imul
mov
clc
inc
add
or
mov
cld
cmp
add
and
add
add
dec
push
insb
cli
pop
aam
xor
add
add
mov
clc
mov
adc
aam
add
pop
loope
jne,pn
je
sar
clc
scas
sub
and
add
adc
add
cld
fs
int3
dec
inc
clc
xor
add
add
mov
add
add
add
hlt
cmp
dec
cs
pop
addr16
xchg
push
es
cwtl
ja
jbe
clc
cmp
clc
inc
clc
mov
push
add
mov
jle
lea
add
data16
xchg
in
inc
add
jns
or
mov
add
shr
cmc
xor
add
nop
dec
add
add
clc
ja
add
cmp
xor
push
add
sub
add
sub
lret
cmp
cmp
clc
cwtl
movsb
clc
sub
dec
adc
gs
add
add
xchg
sahf
add
add
xchg
inc
clc
sar
jo
add
jmp
xchg
jge
clc
push
lea
clc
je
clc
insl
cmp
cmp
mov
jbe
clc
cld
xchg
ficoml
jl
pop
mov
clc
sub
clc
inc
clc
dec
decb
lret
sub
jo
add
pushf
bound
add
xchg
insb
mov
daa
clc
push
mov
pop
mov
clc
cmpsl
clc
aad
jae
add
mov
add
pop
enter
xchg
lods
repz
int3
std
or
mov
add
inc
add
or
sub
add
sar
imul
xor
add
ret
cmp
push
add
imull
xchg
into
imul
movsb
clc
mov
clc
push
or
clc
xchg
xchg
jne
jmp
add
inc
clc
mov
jecxz
push
mov
add
inc
clc
popf
mov
add
imul
int
add
mov
clc
inc
clc
sub
lock
add
daa
clc
sar
cmp
testb
mov
notl
add
sbb
jecxz
mov
int3
das
call
scas
push
inc
add
push
cld
std
int
cltd
push
xor
add
dec
push
add
bound
add
mov
clc
mov
clc
je
add
imul
add
clc
jo
add
cmp
add
add
add
mov
clc
pop
stc
and
add
out
cmp
add
in
jbe
mov
lock
jo
add
fwait
outsb
add
popa
add
fwait
pop
outsl
lahf
jp
gs
fs
loopne
add
ret
clc
clc
mull
clc
pushf
mov
clc
popf
pop
and
mov
inc
clc
das
call
sahf
mov
jae
add
call
popa
add
jmp
dec
jle
jne
hlt
inc
clc
push
mov
pop
push
add
loopne
pop
and
add
call
clc
pop
movsb
clc
add
add
pop
xchg
mov
clc
aam
adc
add
sub
pop
cmp
mov
and
add
inc
add
sbb
xabort
pop
sub
clc
mov
push
clc
or
insb
inc
clc
lods
push
mov
pop
es
arpl
add
clc
cmc
scas
iret
lods
cmp
imul
sar
clc
in
fcompl
pop
pop
jb
add
mov
add
or
add
scas
xchg
leave
mov
add
add
shl
rcrl
add
fistpl
stos
sahf
imul
in
or
pusha
add
repz
sar
popa
add
bound
add
clc
out
mov
mov
sbb
clc
int
jmp
pop
cld
jbe
clc
mov
clc
mov
clc
pop
je
das
dec
das
jbe
add
xor
add
lret
loopne
imull
add
cld
mov
inc
clc
gs
test
adc
add
daa
clc
add
xabort
xor
add
add
cmp
pop
jb
add
push
clc
loop
jnp
clc
movsb
clc
pop
push
add
adc
add
clc
pop
mov
mov
add
mov
cmp
fmuls
add
mov
adc
add
clc
out
sub
pop
push
pusha
add
scas
and
pop
cmp
mov
negl
add
jecxz
sahf
enter
inc
clc
imul
pushf
pop
or
stos
adc
mov
rorb
add
je
incb
movsl
clc
scas
push
add
add
pop
xchg
sar
clc
test
lcall
add
push
clc
add
add
loopne
or
xchg
cmp
ficomps
in
fnstenv
clc
mov
add
pop
pop
push
outsl
imul
add
in
inc
add
int
add
shll
clc
xlat
mov
inc
clc
mov
pop
test
test
or
out
jne
clc
nop
add
push
imul
jle
fsubrs
pop
dec
sub
pusha
add
icebp
add
add
add
or
mov
inc
add
enter
lret
dec
inc
add
shrl
out
mov
add
fstpl
inc
add
sbb
add
cmc
add
add
mov
pusha
add
push
add
sahf
data16
lcall
add
add
push
dec
jbe
or
insb
addr16
gs
xchg
rorl
inc
add
dec
mov
add
out
ds
push
add
das
sub
movsb
clc
addr16
cmpsb
clc
call
jno
add
sar
clc
mov
clc
cmpsb
clc
xchg
dec
and
add
jno
add
or
enter
mov
nop
push
push
hlt
sbb
clc
mov
add
add
add
jae
add
add
add
scas
iret
mov
add
int3
inc
clc
out
pavgb
adc
add
sub
arpl
add
add
popa
add
fistpl
cmp
pop
imul
out
mov
pop
imul
fstps
xchg
mov
pop
insl
xchg
ss
add
add
jp
movsl
clc
pop
jle
mov
scas
add
add
inc
clc
loope
mov
add
pushl
inc
clc
in
xchg
xchg
movsb
clc
ljmp
xchg
dec
sbb
fcoms
add
outsl
xchg
and
add
in
cmp
add
aam
inc
add
dec
mov
clc
ja
dec
cli
or
cmp
mov
clc
sbb
hlt
mov
incl
fbld
add
add
pop
lods
cmpsb
clc
adc
add
add
popf
imul
cmp
jne
inc
add
aad
add
mov
ja
arpl
add
add
sbb
clc
jl
ficompl
xor
add
add
in
mov
and
add
add
xor
int3
mov
clc
cmp
cli
nop
sub
jg,pt
clc
sbb
add
pop
mov
in
xabort
clc
inc
add
mov
scas
iret
pop
mov
mov
jne
add
lock
out
imul
clc
cmp
add
jns
cmp
gs
out
movsl
clc
mov
clc
mov
xor
add
fwait
xor
lcall
sub
push
add
lret
add
inc
add
fcoms
add
test
xchg
sub
cmpsb
clc
and
add
dec
cmp
add
cmp
fs
in
sub
daa
clc
cmpsl
clc
mov
loopne
stos
pop
xabort
mov
add
pushf
push
mov
push
clc
arpl
add
fnstcw
clc
jmp
int3
add
stos
arpl
add
add
add
or
xor
fimull
test
outsl
xlat
jl
push
roll
clc
test
add
xchg
jns
xor
add
and
add
bnd
adc
lahf
xchg
pop
pop
hlt
adc
mov
iret
sub
add
xchg
cld
xor
xchg
rcll
xlat
inc
add
mov
sbb
add
mov
mov
fs
add
add
shll
clc
add
add
test
clc
push
add
lock
add
cmp
lock
ret
clc
cmp
xchg
fmul
loopne
xor
add
jae
add
pop
pop
jae
add
pop
clc
je
add
out
mov
fidivrl
mov
add
fstpl
lock
clc
lcall
and
or
add
stos
xbegin
ret
add
ficomps
add
mov
clc
fstps
lods
or
dec
sub
outsl
ret
add
or
mov
rol
clc
mov
call
clc
dec
sbb
clc
stos
mov
add
add
add
jecxz
mov
clc
add
cmp
add
clc
mov
and
add
clc
push
jne
clc
mov
cmp
mov
enter
xor
add
cli
xchg
sbb
add
add
jge
sub
loopne
dec
out
sub
jle
clc
jle
add
cmpsl
clc
jbe
clc
fsubrl
xchg
mov
jl
add
test
aad
clc
mov
push
add
sbb
lea
loopne
cmp
add
lea
xor
add
push
clc
mov
clc
mov
xchg
sahf
or
push
add
inc
clc
xchg
sbb
adc
add
clc
out
cmp
add
clc
adc
add
dec
mov
xor
add
enter
add
sub
add
and
add
pop
push
add
gs
ds
add
or
fcomps
sub
clc
mov
pop
dec
cli
pop
bound
add
pop
and
add
add
out
fs
mov
clc
push
into
ja
xabort
sar
aaa
add
add
fwait
push
add
in
mov
xabort
clc
adc
add
clc
xchg
cwtl
ss
clc
jecxz
or
pop
cwtl
or
cli
outsl
mov
or
inc
add
mov
add
xchg
xchg
dec
lock
add
or
mov
add
jne
mov
notb
cmp
clc
sar
add
cmp
clc
ss
aaa
pop
fcoml
add
test
call
push
clc
cmp
loopne
xor
add
icebp
popf
cmpsb
clc
push
add
int
fdivrs
popf
repz
js
sbb
mov
in
rcrl
in
mov
push
out
lahf
cmpsl
clc
adc
add
clc
rcrl
clc
push
popa
add
or
jbe
clc
cmpsb
clc
arpl
add
add
cmp
testl
popa
add
push
add
aas
fxch
pop
add
add
push
add
cld
pop
stos
test
testb
add
clc
das
xchg
xor
add
movsl
clc
fisttps
pop
sbb
sar
add
mov
insb
inc
add
xchg
mov
or
clc
sub
add
sarb
cmp
pop
icebp
clc
sub
cmp
sub
insb
xchg
out
xchg
js
test
add
add
push
mov
xabort
mov
add
clc
popa
add
and
add
clc
imul
add
mov
cmp
add
add
call
shll
clc
shlb
add
add
add
repnz
mov
mov
xchg
loope
add
clc
dec
out
mov
add
inc
add
mov
clc
daa
clc
sub
jp
clc
sti
xchg
inc
clc
movsl
clc
ficoml
add
add
add
sahf
test
int
test
jb
add
clc
xchg
mov
ss
stc
push
add
decl
xchg
iret
std
add
cli
xabort
cmpsb
clc
mov
cmp
test
inc
clc
test
add
sbb
adc
pop
lea
clc
fwait
xchg
in
outsb
aas
mov
pop
daa
clc
adc
add
mov
xor
add
inc
clc
nop
das
test
xlat
push
push
mov
add
test
clc
in
or
add
enter
mov
fmull
hlt
push
add
and
add
cmp
pusha
add
popa
add
cmpsb
clc
sub
clc
jecxz
and
loope
jb
add
lods
ss
das
push
scas
mov
clc
cmp
ja
mov
cmc
adc
add
add
add
or
into
roll
jl
fldt
lcall
pop
scas
adc
bound
add
in
je
add
loopne
js
rol
clc
add
xchg
dec
push
inc
add
jge
pop
test
mov
movsl
clc
sbb
repz
add
shl
sahf
mull
clc
das
pop
xor
add
sbb
scas
inc
add
xlat
jecxz
mov
jo
add
add
add
xchg
aaa
mov
clc
xchg
sbb
add
or
mov
add
add
inc
add
add
add
clc
lahf
lods
ds
jl,pt
call
add
test
daa
clc
pop
es
test
and
lock
cmpsb
clc
push
add
test
pop
sbb
cmp
imul
xor
add
aad
mov
mov
clc
or
fistpl
mov
clc
jp
cmp
inc
clc
adc
add
clc
mov
pop
ds
ds
mov
fs
push
add
add
enter
add
inc
add
int
add
lret
std
push
adc
adc
add
mov
clc
jns
clc
sti
popf
rcl
sbb
xchg
in
outsb
push
test
add
add
add
pop
fsts
add
jns
push
add
fldt
fisubs
clc
push
jne
das
xchg
inc
add
loopne
test
or
add
add
clc
bound
add
test
push
add
mov
clc
out
mov
dec
flds
popf
jno
add
inc
add
jnp
and
add
clc
dec
mov
mov
in
int3
or
clc
sti
pop
clc
and
add
out
push
add
sti
sbb
aaa
clc
mov
inc
clc
rolb
add
push
xabort
jb
add
add
lcall
loop
cmp
outsb
iret
scas
mov
leave
ror
dec
pop
insb
and
aaa
dec
in
push
add
fwait
je
clc
mov
mov
add
in
add
clc
mov
add
lret
clc
dec
leave
inc
clc
inc
add
inc
add
adc
add
cmp
xor
add
add
jne
push
add
mov
jecxz
push
mov
clc
push
stos
movsl
clc
push
cld
mov
filds
icebp
mov
clc
sar
add
and
add
add
lods
dec
js
bnd
add
add
xchg
imul
push
add
add
add
addr16
clc
addr16
dec
and
mov
jp
in
xor
add
gs
jnp
mov
add
dec
mov
pop
clc
adc
add
mov
loope
xchg
clc
out
and
add
jecxz
stos
jg
cmp
add
or
mov
outsb
inc
add
fisubl
ret
aad
test
call
sarb
sbb
test
mov
or
adc
add
clc
sbb
mov
repnz
sub
lcall
clc
aaa
movsl
clc
push
lahf
jmp
push
push
add
sbb
clc
cmc
or
add
jno
add
sar
clc
xchg
jle
inc
clc
fcmovnbe
lret
loop
pop
lock
xchg
test
cmc
xor
add
clc
stc
nop
mov
clc
xor
jge
mov
clc
pop
clc
fcom
mov
inc
add
or
add
mov
add
jg
add
xchg
mov
clc
lret
mov
jno
add
add
push
clc
outsl
int
repnz
cmp
clc
out
jmp
outsb
mov
add
neg
jnp
xor
add
clc
stc
cli
inc
clc
mov
addr16
fwait
mov
clc
sahf
inc
add
mov
fldenv
add
iret
xchg
sar
add
sub
add
sti
lahf
divb
dec
inc
clc
iret
imul
out
mov
cltd
in
and
mov
add
mov
cld
pushf
rcrl
add
add
jno
add
leave
cmc
das
xbegin
add
in
aam
mov
in
test
dec
dec
fisttps
xor
add
add
clc
inc
add
test
sarl
inc
add
mulb
jmp
mul
clc
add
add
fs
mov
add
cmp
push
and
add
add
clc
fsubr
cs
clc
cmpsl
clc
inc
add
jmp
cmp
add
add
clc
jne
ret
clc
and
jg
xchg
aas
dec
ret
clc
adc
add
mov
daa
clc
inc
clc
ds
imul
fildll
mov
iret
std
lods
mov
mov
add
jo
add
clc
xchg
mov
sti
or
clc
adc
add
aaa
in
xor
inc
clc
in
mov
add
add
inc
add
mov
push
pop
sbb
scas
jecxz
rorl
lea
mov
mov
cmc
mov
add
xabort
clc
into
cmp
add
xchg
js
clc
push
add
js
or
add
inc
add
loopne
lcall
clc
inc
clc
mov
pop
sub
clc
mov
sar
ficoml
add
mov
clc
popf
mov
clc
int
clc
fcompl
cmp
jl
test
add
dec
lret
add
scas
loopne
mov
daa
clc
scas
cmp
add
bswap
push
xchg
loop
dec
and
add
sub
sub
call
cmp
clc
sub
ror
aam
addr16
test
test
mov
inc
clc
and
add
add
clc
lcall
dec
mov
call
add
xor
add
push
cmp
dec
popf
push
push
add
push
daa
clc
xchg
jo
add
mov
pop
rolb
clc
mov
push
ss
stos
push
pop
push
add
dec
stc
in
xchg
push
clc
call
add
icebp
sbb
add
nop
pop
adc
add
add
clc
daa
clc
aam
mov
add
jge
clc
pop
ret
clc
mov
clc
xbegin
add
jp
clc
cmp
add
sub
mov
add
jge
jnp
or
cmpsb
clc
cli
int
icebp
inc
clc
dec
hlt
jecxz
in
pop
clc
pop
sbb
out
jnp
clc
imul
dec
mov
adc
add
int3
pop
cwtl
das
lods
mov
add
dec
push
bound
add
in
sub
aam
pop
cmp
jl
outsl
aas
push
insl
jge
bound
add
clc
push
nop
jbe
mov
clc
mov
scas
das
pop
xor
add
fstl
stos
dec
adc
add
test
dec
push
addr16
cltd
fisttpl
dec
sbb
clc
mov
bound
add
ficoml
add
sbb
adc
mov
loopne
mov
divl
push
clc
pusha
add
fidivs
mov
add
add
cmc
xor
add
add
out
cs
sbb
dec
jl
es
mov
push
clc
ja
clc
mov
fxch
xabort
shufps
or
add
or
inc
clc
inc
add
jecxz
stos
shl
clc
sar
pop
clc
outsb
adc
add
jp
lret
xchg
xchg
sbb
clc
sbb
iret
test
xchg
mov
cmc
mov
clc
mov
ds
clc
out
lods
fistps
fs
sbb
mov
jno
add
fldenv
not
imul
add
clc
ficoml
js
ljmp
mov
push
clc
add
add
add
lock
clc
shlb
add
add
js
scas
mov
clc
mov
clc
fimull
sub
add
stc
mov
cltd
incl
clc
fcoms
xor
add
dec
mov
clc
cs
frstor
cli
sar
cmp
and
add
add
xor
add
fnstsw
clc
xabort
push
dec
cmp
add
test
add
push
or
add
xor
add
add
popa
add
or
clc
mov
leave
addr16
loopne
or
data16
mov
leave
pop
fwait
stos
or
add
sbb
xchg
in
test
rcrb
cmp
clc
push
data16
pusha
add
or
add
test
inc
clc
push
add
mov
add
jp
cmp
dec
push
cwtl
bound
add
jne
rol
clc
cmp
sub
add
or
pop
push
sahf
adc
mov
pop
insb
sti
shlb
insl
pop
clc
lahf
cmp
add
sbb
xor
mov
jbe
add
dec
fdivrl
add
cmpsb
clc
insl
fildl
cs
cmp
imul
fs
cwtl
jno
add
clc
int
lods
jle
add
imul
sub
push
dec
unpcklps
pop
jnp
call
mov
jbe
clc
add
aad
clc
in
inc
add
aas
ljmp
clc
push
add
push
lcall
jl
mov
xchg
jmp
insl
mov
adc
push
int
add
mov
das
and
add
adc
add
sti
daa
clc
cwtl
pop
pop
clc
jg
sub
add
mov
inc
add
test
clc
mov
add
mov
repnz
pop
cli
sbb
add
pushf
orps
lods
aad
xchg
inc
add
push
clc
repz
push
clc
cmp
fidivs
pop
clc
enter
sub
clc
mov
jae
add
sar
jb
add
jno
add
sar
clc
and
add
add
call
add
iret
push
loop
jmp
add
and
xabort
clc
je
clc
xor
add
loope
adc
add
ss
mov
sbb
hlt
xchg
mov
sbb
clc
add
hlt
and
add
clc
mov
mov
inc
add
pop
and
clc
mov
addr16
cmp
add
add
out
pop
lock
clc
sar
ret
clc
roll
add
flds
add
xchg
adc
add
xchg
pop
cmp
clc
call
stc
push
mov
clc
sbb
pop
lods
lea
add
add
cmp
add
aaa
sub
xor
add
outsb
sub
cwtl
pop
mov
popf
xchg
mov
clc
xor
push
jb
add
ljmp
pop
pop
sub
clc
insl
pop
addr16
pop
sub
clc
and
add
std
aam
pop
pushl
add
in
dec
mov
and
add
add
pop
fisubs
add
negl
add
fcoml
jmp
repz
stos
ret
clc
clc
pop
dec
stos
insl
dec
mov
pop
das
test
cmpsb
clc
ljmp
add
inc
clc
out
mov
push
call
adc
add
push
add
ss
lcall
add
pop
sbb
jne
clc
sar
fs
or
divb
add
or
mov
clc
add
mov
in
gs
jl
add
sbb
bound
add
pop
sar
clc
int3
jle
sub
aad
mov
add
loope
imul
add
clc
adc
mov
add
add
outsb
xchg
mov
add
mov
cmp
int3
push
cmp
add
dec
xchg
pop
filds
pop
clc
sbb
inc
add
cmpsl
clc
dec
data16
loopne
mov
movsb
clc
divl
add
dec
decb
bound
add
clc
jne
repnz
add
clc
cld
enter
clc
scas
mov
xlat
fmull
fwait
push
popf
xor
clc
sbb
sti
or
ret
add
int
add
add
test
add
sub
loopne
negb
or
aaa
outsl
pop
daa
clc
jbe
and
add
sbb
fs
or
out
movsl
clc
lcall
mov
mov
clc
mov
xchg
xchg
fidivl
add
add
imul
in
bound
add
cmp
clc
fadd
clc
stc
mov
add
out
loop
icebp
lea
jmp
inc
add
lcall
add
push
add
pop
clc
addr16
in
mov
clc
or
cmp
das
and
add
and
dec
loopne
bound
add
insl
clc
repnz
clc
ret
clc
lock
int3
in
sbb
add
das
cltd
stos
leave
xabort
sbb
aad
add
inc
clc
icebp
notl
add
mov
stos
pop
fists
add
add
mov
mov
lods
add
add
add
cmpsl
clc
hlt
fnstsw
clc
sub
add
insb
cmp
mov
rorb
imul
cmp
clc
sub
incl
stc
aad
clc
fsts
aas
dec
ja
test
xchg
mov
pop
fisttpll
add
jo
add
clc
jp
dec
jecxz
push
mov
clc
push
mov
clc
stos
cmp
pushf
jne
lods
adc
add
add
test
mov
xlat
out
imulb
fstps
cmp
add
fnstsw
inc
add
mov
lret
cmp
add
add
pop
push
je
mov
clc
push
add
idivb
sub
add
jge
lea
lret
cmp
push
add
push
xor
clc
sbb
add
add
arpl
add
movsb
clc
stos
or
fimull
sti
xchg
pop
insb
daa
clc
push
add
iret
add
add
push
jle
sbb
jo
add
clc
xchg
int3
sti
jmp
inc
add
gs
jno
add
add
mov
add
test
clc
es
out
clc
divl
clc
data16
fs
icebp
xor
clc
test
sub
leave
fimuls
mov
push
jne
xchg
iret
push
repnz
clc
xchg
test
clc
pop
fisubrl
clc
stos
sar
pop
clc
jo
add
pushf
int3
mov
push
mov
clc
or
push
test
mov
loop
scas
pop
in
outsb
mov
sbb
jo
add
push
fwait
movsb
clc
sub
add
lea
cmp
add
pop
jl
sbb
and
mov
add
dec
cmpsb
clc
cmp
add
clc
add
add
add
sbb
cwtl
pop
incl
add
clc
mov
sahf
xchg
insb
int3
adc
add
int
cmp
mov
daa
clc
sbb
cwtl
pop
inc
add
xlat
sub
test
pusha
add
scas
and
add
mov
clc
add
test
add
inc
add
lods
icebp
xchg
addr16
push
add
push
add
inc
add
xchg
outsl
cltd
sub
clc
inc
clc
cwtl
jbe
add
mov
mov
sub
lock
aas
dec
pop
mov
add
xor
add
add
jno
add
xchg
sti
leave
aad
add
xor
add
jo
add
clc
in
rcrl
dec
mov
nop
movsb
clc
hlt
iret
pusha
add
repz
adc
add
clc
into
fs
cmp
cmp
add
jmp
cmp
clc
dec
cmp
out
ljmp
add
jno
add
clc
cmp
ss
add
mov
sbb
jle
xor
fidivs
jp
clc
add
add
and
add
mov
xchg
xor
add
testb
sbb
add
nop
fbstp
enter
int
stc
mov
xabort
bnd
clc
push
clc
pop
lret
dec
pop
and
add
add
mov
mov
aad
clc
repz
clc
xor
add
filds
clc
and
add
cs
rorb
clc
xchg
ficomps
pop
in
loop
aaa
cmp
aas
lcall
add
clc
lods
sbb
clc
negb
in
hlt
push
xchg
scas
lret
movsb
clc
mov
add
add
daa
clc
pop
mov
inc
add
ljmp
jg
jp
aas
incl
clc
xchg
mov
add
pop
mov
cmp
pusha
add
pop
mov
jne
add
mov
loopne
insl
xor
clc
imul
push
add
clc
add
add
lods
cmp
mov
sahf
in
dec
sar
sar
clc
pop
push
clc
mov
mov
dec
cmp
mov
adc
add
jnp
outsb
dec
pop
inc
clc
cmp
xchg
cmp
fwait
jp
scas
sbb
aas
inc
clc
or
cmp
add
dec
xchg
scas
mov
sbb
jmp
test
out
int
mov
loop
repnz
xor
add
adc
add
dec
add
add
movsl
clc
mov
add
fisubl
add
in
lcall
xchg
int3
ja
ds
jp
clc
jp
out
or
cmovle
clc
test
mov
and
cmp
cmp
dec
std
sbb
inc
clc
adc
add
jl
fs
sub
pop
and
push
das
out
inc
clc
js
adc
clc
inc
clc
and
add
mov
add
lahf
rol
clc
aaa
pushf
gs
in
movsb
clc
inc
clc
dec
in
jmp
cmp
mov
js
dec
insl
push
lret
scas
xchg
sti
lock
add
pop
ret
or
add
sbb
add
add
add
mov
in
dec
fistps
xchg
jg
add
sbb
fs
icebp
ds
mov
and
add
jns
xchg
push
dec
and
clc
mov
sbb
jne
and
add
clc
stos
sbb
clc
mov
clc
cmp
cmp
movsb
clc
xchg
cs
mov
jp
shll
mov
sub
xabort
clc
cwtl
jns
push
add
mov
add
cmp
cmp
loope
jbe
jg
inc
add
mov
clc
dec
pop
pop
cmc
stos
stc
push
xchg
addr16
lret
xchg
mov
outsb
pmulhuw
inc
clc
cmp
add
add
clc
push
mov
sbb
mov
out
lods
aam
add
push
lcall
enter
mov
clc
adc
add
cmp
pop
clc
stos
das
cmp
addr16
aas
or
clc
inc
add
inc
clc
fdivs
mov
mov
jo
add
add
add
cmp
add
lret
cmp
clc
repnz
clc
int
push
and
add
push
push
add
decb
pushf
out
jecxz
mov
or
cwtl
xor
adc
add
clc
dec
sti
add
jecxz
inc
clc
into
add
test
inc
add
addr16
cld
insb
outsb
add
add
xbegin
sti
pop
test
out
push
test
arpl
add
mov
add
addr16
scas
es
fbld
add
and
sar
cli
rorb
daa
clc
dec
or
lret
aad
clc
push
clc
cli
mov
dec
outsb
clc
loope
push
or
outsb
push
add
fistps
mov
inc
clc
in
in
xor
add
jg
and
add
pop
cmp
add
out
shll
add
add
add
out
popa
add
xor
add
daa
clc
int3
rcll
lods
in
adc
add
mov
in
jne
aaa
xbegin
add
add
clc
xchg
into
mov
fcmovnbe
cmpsb
clc
movsb
clc
and
add
mov
dec
lock
dec
jmp
cwtl
cltd
in
pusha
add
inc
add
test
push
clc
scas
cmp
inc
add
add
add
mov
dec
lock
mov
clc
jmp
jns
xchg
sub
cmp
and
add
cli
push
mov
dec
or
add
push
jl
pop
xor
outsl
add
add
or
add
add
push
add
adc
add
ja
clc
xchg
dec
mov
pop
cmpsl
clc
xchg
sub
jmp
cmc
cmp
pop
jmp
add
add
cmp
add
lcall
hlt
cmpsl
clc
cmp
sahf
sahf
daa
clc
jmp
daa
clc
jge
mov
add
inc
clc
ret
clc
cmp
popa
add
mov
or
clc
xchg
pop
or
ljmp
data16
adc
mov
add
add
push
add
stos
pusha
add
bound
add
scas
iret
push
fs
lea
mov
xchg
int
add
add
loopne
push
xchg
std
ja
clc
or
add
addr16
xor
add
clc
test
stos
inc
clc
es
fistps
in
ret
clc
cmpsl
clc
call
add
push
jmp
clc
out
jge
ljmp
mov
xor
add
clc
add
add
xbegin
mov
xor
add
js
jno
add
in
sbb
push
dec
adc
gs
sahf
bound
add
clc
aaa
mov
inc
clc
fdivrl
jge
clc
aaa
mov
stos
pop
fwait
lcall
add
jns
lret
mov
dec
repz
cmp
clc
push
clc
adc
add
pop
int
clc
nop
add
add
scas
pop
outsl
inc
clc
shlb
add
add
rcl
jl
popf
mov
push
cmp
xchg
push
add
in
sbb
dec
adc
add
mov
mov
sub
clc
mov
adc
add
ja
clc
or
jl
pushf
sahf
mov
clc
add
add
clc
adc
mov
xchg
mov
gs
pop
insl
mov
ret
clc
js
sar
adc
out
pop
int3
and
add
clc
xchg
jno
add
sbb
fdivrl
shl
jnp
clc
xor
add
in
mov
clc
cmp
clc
in
jbe
dec
loop
popa
add
ret
clc
leave
cmp
clc
daa
clc
mov
clc
pop
dec
leave
xor
add
sbb
add
loopne
xchg
cmpsl
clc
popf
lods
pop
mov
jmp
clc
pop
xabort
clc
add
loopne
mov
jl
dec
addr16
push
loopne
mov
js
loopne
ja
clc
push
test
sub
push
and
add
mov
sub
loope
mov
xor
add
cmpsb
clc
pop
mov
out
xchg
fimull
mov
clc
mov
jge
clc
sti
add
add
cmp
imul
add
addr16
stos
mov
pop
out
adc
add
add
sahf
jp
xor
add
clc
into
clc
test
shlb
add
fiadds
add
out
pop
clc
xchg
pop
cmp
loop
fbld
jecxz
xor
add
mov
push
clc
mov
clc
inc
clc
mov
sar
clc
jmp
clc
int
clc
jge
push
sar
aam
lods
in
push
add
dec
mov
mov
clc
call
inc
add
test
jne
clc
xor
lods
jb
add
add
cmp
clc
out
mov
add
sbb
test
mov
sub
and
cld
ljmp
out
and
add
clc
pop
std
fcmovne
pop
addr16
jno
add
cmp
sbb
add
dec
sub
clc
cmp
fadds
clc
cmp
add
sahf
aad
add
adc
je
xchg
stos
pop
in
and
dec
rcrb
add
fldcw
mov
jl
clc
repz
add
add
inc
add
loop
adc
add
add
add
int3
sub
jnp
lock
popf
jl
sub
clc
enter
push
push
push
lret
add
add
inc
clc
mov
mov
aad
add
popf
pop
mov
lret
arpl
add
cli
xor
add
lahf
xchg
and
add
clc
dec
jecxz
sbb
clc
out
mov
int
cmp
clc
xchg
mov
outsb
jle
clc
addr16
lock
add
ds
lods
dec
mov
clc
fmul
mov
leave
in
push
add
pop
arpl
add
mov
mov
sbb
add
add
add
mov
sarb
icebp
xchg
or
add
outsb
repz
add
ljmp
add
clc
idivb
add
outsb
and
add
add
inc
add
push
xchg
outsb
adc
add
dec
xor
add
add
add
jae
add
clc
lcall
mov
jle
xchg
movsb
clc
das
or
push
xabort
or
clc
ljmp
ja
add
add
jo
add
test
clc
jp
aad
clc
xor
add
dec
cld
daa
clc
inc
add
lcall
lahf
pop
shlb
add
sbb
or
add
add
clc
int3
jbe
add
mov
sbb
aaa
adc
add
jno
add
pop
clc
cli
hlt
dec
inc
clc
jns
out
inc
add
xchg
loopne
data16
cmp
add
sub
cmp
das
mov
add
add
clc
pop
inc
add
add
add
clc
movsb
clc
outsl
sahf
ret
inc
clc
adc
add
repnz
clc
add
add
lret
stos
sub
adc
add
add
add
push
push
push
ljmp
test
ret
in
add
add
jnp
cmp
clc
addr16
mov
add
clc
outsl
test
pop
inc
add
mov
leave
fists
add
or
cmp
or
jp
rcrl
add
mov
out
das
call
fsubs
add
pop
jmp
xor
add
adc
clc
ret
mov
clc
es
xchg
push
pushf
inc
add
fildl
add
ja
rorb
clc
es
data16
je
sbb
cmp
aam
mov
hlt
or
lret
scas
das
cmp
sbb
push
or
cmp
add
clc
and
add
xbegin
add
mov
test
clc
repz
jp
mov
ja
insb
sbb
pop
inc
clc
hlt
sbb
mov
sub
push
inc
clc
mov
iret
push
add
daa
clc
sar
aad
stos
xor
add
data16
and
add
loop
or
add
cmpsl
clc
pusha
add
and
ret
clc
lahf
insb
in
xchg
mov
xor
add
out
and
add
add
inc
clc
pop
mov
hlt
mov
das
mov
clc
mov
clc
jle
add
add
daa
clc
and
add
mull
clc
adc
dec
jmp
clc
cmp
adc
add
add
enter
fcoml
add
add
aaa
das
in
stos
ret
cs
pop
add
add
sub
test
xabort
mov
sub
add
sbb
add
ret
clc
xchg
int
clc
add
add
pushf
xchg
stos
jmp
xchg
out
icebp
sbb
jae
add
xor
add
fs
cs
add
xor
add
lcall
clc
call
add
pop
sbb
call
lahf
sti
push
add
xor
add
pusha
add
cmp
push
out
add
add
mov
clc
pusha
add
pop
dec
push
add
xchg
enter
xbegin
sbb
xchg
inc
add
sub
out
fnstcw
divl
add
mov
lods
inc
clc
pop
mov
std
addr16
inc
clc
jb
add
inc
add
sub
clc
pushf
fistl
xchg
cmovg
sbb
add
push
add
in
xlat
xor
add
pop
das
inc
add
adc
add
clc
jmp
cmp
add
add
rcll
add
test
sti
cmovp
xor
add
xbegin
dec
cmc
jnp
jbe
lret
pop
clc
movsl
clc
xchg
movsb
clc
mov
add
jmp
sar
mov
push
imul
incb
add
scas
mov
clc
sar
mov
clc
pushf
pop
arpl
add
add
cs
push
pop
shll
dec
mov
clc
std
clc
and
add
mov
add
or
clc
js
out
scas
mov
sub
xchg
leave
mov
sub
mov
clc
fisubs
js
add
fidivrs
out
sbb
mov
cmp
jb
add
jo
add
mov
daa
clc
xor
ds
inc
clc
cmp
clc
mov
mov
in
push
xchg
dec
mov
into
cmp
mov
jp
clc
ja
clc
lahf
imul
idivb
rorl
add
in
js
clc
cmp
clc
call
clc
repnz
in
jo
add
std
adc
add
clc
push
add
aad
sbb
add
shlb
clc
mov
sbb
sar
add
iret
inc
add
outsl
sbb
add
inc
add
sar
mov
popa
add
sub
scas
stc
movsb
clc
icebp
pop
flds
clc
jae
add
jb
add
add
add
add
add
add
inc
add
scas
lock
add
loope
mov
scas
mov
add
jg
add
sbb
std
in
jnp
push
xchg
dec
mov
mov
mov
add
xor
add
add
cmpsb
clc
loope
and
iret
test
xchg
loope
outsb
mov
jp
mov
xchg
xor
aam
inc
add
insl
aad
ret
clc
scas
push
add
pop
clc
add
scas
push
sbb
clc
inc
clc
inc
add
pop
clc
lret
jp
jp
clc
shrl
ja
and
add
fs
call
add
add
mov
clc
mov
add
cltd
push
add
movsl
clc
sar
test
xor
enter
add
dec
hlt
jnp
out
mov
jno
add
pop
inc
add
jno
add
ret
clc
mov
add
clc
sub
mov
clc
fcomi
xchg
loope
xchg
jae
add
sar
mov
clc
std
pusha
add
xchg
mov
out
cmp
jb
add
jae
add
xbegin
out
popf
mov
daa
clc
or
clc
fidivs
cmp
cli
fs
mov
out
push
add
xor
add
push
stc
ret
clc
mov
in
call
add
stos
cmpsb
clc
jbe
clc
cld
and
decb
outsb
int
and
add
add
sahf
adc
add
add
sar
hlt
mov
add
cmpsb
clc
leave
xor
add
out
push
test
mov
jge
dec
xabort
add
push
clc
jae
add
ds
movsl
clc
fdiv
sub
inc
clc
dec
xabort
clc
push
test
or
arpl
add
in
into
in
clc
popf
lock
clc
inc
clc
test
push
sbb
push
add
in
cmp
clc
adc
clc
jbe
clc
xchg
mov
sbb
clc
jbe
popf
or
ret
clc
mov
or
sub
xchg
cmpsl
clc
imul
imul
and
add
clc
decb
clc
add
add
cmp
xchg
sar
daa
clc
xchg
fcompp
lret
nop
aam
repz
xor
add
out
jae
add
xlat
outsl
cmpsl
clc
stos
popa
add
mov
jbe
add
mull
add
mov
add
mov
outsl
xor
add
mov
mov
clc
pop
clc
stos
popa
add
out
and
add
add
jge
add
add
add
add
jne
clc
adc
add
and
add
out
nop
sub
sub
sub
cmp
clc
outsb
dec
sbb
insb
gs
paddd
and
sar
jb
add
es
adc
add
add
daa
clc
pop
and
add
mov
pop
adc
add
add
and
add
repz
mov
push
xchg
pushf
idivl
pop
sub
add
fldt
push
add
gs
or
clc
sbb
adc
lahf
push
mov
pop
imull
enter
pop
jp
popf
cld
xor
clc
or
xchg
out
ljmp
add
adc
clc
cmpsl
clc
dec
pop
bound
add
mov
loopne
insl
es
sarb
jmp
cs
jbe
jae
add
xchg
dec
mov
dec
jne
movsb
clc
lea
cmpsb
clc
jl
add
inc
add
push
jne
xchg
cmp
add
dec
jmp
cmpsl
clc
fdivrs
popa
add
dec
mov
mov
ret
clc
cwtl
xor
add
jecxz
out
dec
fcomip
xor
sar
clc
cmpsb
clc
loope
mov
cmp
pop
xchg
sub
dec
xchg
cmp
add
and
add
jae
add
inc
clc
mov
xchg
or
mov
clc
scas
clc
divl
add
pop
adc
add
lods
inc
add
fildll
add
fisubl
clc
and
add
hlt
sub
clc
jecxz
cwtl
dec
mov
clc
sahf
loopne
sar
mov
cmp
sbb
int
cmpsl
clc
pop
jo
add
pop
clc
imul
es
or
jne
outsl
rorb
clc
sar
add
pop
or
clc
mov
add
add
cmp
clc
push
ja
add
loope
and
add
mov
and
inc
add
pop
jge
xor
cmc
push
shll
repnz
fbld
arpl
add
out
adc
add
add
jnp
add
cmp
add
push
add
lret
mov
add
ss
nop
daa
clc
mov
add
imul
or
cmp
bound
add
sub
clc
roll
lea
xchg
xchg
add
add
add
fidivrs
fdivr
sbb
clc
cmp
imul
push
dec
jne
clc
pushf
mov
add
add
ss
into
ret
clc
into
pusha
add
clc
std
test
lea
add
popa
add
inc
add
in
out
loopne,pt
or
fisubs
add
imul
add
dec
xor
dec
loop
jecxz
or
int
fstl
popf
cmp
in
scas
roll
add
add
cmp
into
fsubr
pop
clc
fwait
xlat
cmp
je
out
dec
repnz
clc
cmpsb
clc
pop
shr
xchg
xbegin
fldpi
jno
add
pop
es
loopne
mov
repnz
mov
sub
add
pop
jbe
dec
int
mov
aaa
pushf
movsb
clc
loopne
pop
popa
add
mov
rcll
lret
xor
clc
push
ljmp
jnp
add
push
sub
arpl
add
clc
inc
clc
shll
add
inc
clc
or
clc
xchg
adc
add
iret
dec
clc
and
cli
pop
cmpsb
clc
adc
add
mov
nop
push
push
rcll
mov
inc
add
pop
mov
inc
add
clc
push
dec
mov
or
and
insl
dec
shll
and
add
add
clc
fwait
jp
cmp
clc
sub
div
xchg
jge
sar
popa
add
cmpsl
clc
xor
cmp
add
add
clc
sbb
sub
add
clc
sbb
daa
clc
loop
out
das
mov
stos
mov
hlt
jge
clc
mov
lret
cmp
and
mov
daa
clc
inc
clc
sub
add
lea
clc
inc
add
clc
je
test
pusha
add
jo
add
clc
pushf
lret
and
add
nop
jo
add
in
nop
or
mov
add
mov
dec
xchg
or
ljmp
add
xchg
pop
data16
dec
into
xabort
clc
sbb
mov
sbb
leave
dec
cmc
call
inc
clc
dec
loope
leave
test
lahf
test
mov
clc
lcall
fwait
xbegin
mov
int3
push
add
mov
and
int
lret
addr16
cmp
clc
pushl
loopne
cmp
stos
cmp
add
je
cmp
scas
cwtl
mov
xor
add
fwait
mov
add
or
add
cld
clc
popf
lods
inc
clc
cmc
cmp
fidivl
cmp
clc
inc
clc
mov
add
mov
jp
clc
add
xor
add
dec
xchg
cld
pop
adc
add
clc
or
or
xchg
sub
es
inc
clc
popf
popf
pop
add
shlb
add
add
mov
xor
add
add
mov
inc
add
es
jae
add
movsb
clc
jnp
clc
add
add
adc
add
repz
cltd
sbb
clc
fdivrs
ja
adc
add
aas
pop
insb
push
add
lods
add
add
add
pop
xchg
fisubrs
sbb
add
dec
mov
clc
mov
fnstenv
add
fwait
adc
add
add
iret
adc
add
sub
in
pusha
add
mov
add
clc
push
mov
add
clc
mov
jnp
add
sar
push
outsl
test
lods
popa
add
lcall
clc
kortestw
in
jnp
or
clc
jbe
clc
ret
clc
ljmp
cmp
out
aad
mov
js
ljmp
add
sub
push
add
test
sbb
mov
sbb
clc
sbb
outsb
xchg
imul
add
jbe
in
sub
add
add
push
ret
clc
and
add
cmc
ja
sahf
mov
add
mov
clc
cmpsb
clc
and
add
imulb
clc
cltd
jne
clc
or
add
out
pop
loope
push
jp
clc
mov
out
inc
clc
push
or
sub
gs
adc
sub
push
arpl
add
cmp
dec
push
loopne
or
or
adc
add
out
inc
add
xchg
pop
cld
jl
cmp
clc
jle
pop
fcmovb
clc
je
push
pop
push
inc
add
add
add
daa
clc
jo
add
mov
lea
add
adc
add
add
clc
jmp
cli
push
repz
lcall
js
sbb
mov
add
ss
clc
in
lret
pop
xchg
stos
mov
clc
mov
imul
clc
adc
adc
add
add
ljmp
adc
add
add
bound
add
clc
clc
xchg
fs
out
mov
inc
add
pop
stos
push
cmpsl
clc
push
push
clc
fidivs
add
sbb
insl
add
add
add
add
jle
clc
sar
clc
push
clc
mov
mov
mov
clc
push
lret
add
clc
jmp
clc
dec
sbb
test
aam
ss
dec
sbb
clc
pcmpeqw
mov
clc
cmp
add
and
add
aas
add
add
das
loopne
mov
add
shlb
add
mulb
mov
mov
add
mov
sar
add
pop
pop
ja
jg
clc
scas
pop
je
clc
fcoml
add
dec
dec
stc
roll
add
movsl
clc
movsb
clc
sahf
xor
cwtl
ja
test
and
cmp
dec
insl
xor
in
or
addr16
mov
clc
sbb
cmp
std
adc
add
adc
add
clc
cli
ljmp
icebp
push
addr16
pop
xlat
mov
dec
insb
addr16
aaa
in
sahf
imul
pop
sahf
js
mov
and
inc
add
movsb
clc
aam
add
lock
and
sar
inc
add
pop
push
adc
push
add
and
add
jb
add
add
jb
add
add
jns
add
pop
clc
aas
mov
dec
mov
add
add
add
add
jmp
fisubrs
mov
add
add
pop
inc
clc
mov
mov
add
pushf
mov
clc
pop
pop
clc
pop
das
mov
jno
add
fsubp
clc
push
pop
mov
add
inc
clc
mov
jge
cmp
jbe
push
enter
movsl
clc
fcmovne
dec
movsb
clc
cmp
stos
mov
pop
sbb
add
aam
pop
mov
xchg
iret
sbb
loope
inc
clc
out
adc
add
mov
repnz
loop
fldcw
add
cmp
add
add
inc
clc
adc
add
mov
mov
add
in
add
add
fldl
clc
jbe
cmpsb
clc
cmp
inc
add
mov
push
dec
bound
add
inc
clc
clc
or
add
mov
sub
clc
xbegin
add
mov
add
getsec
mov
dec
sub
clc
xabort
lahf
mov
or
sub
clc
add
jo
add
xchg
mov
test
leave
lcall
clc
ja
lcall
pop
scas
sahf
pop
jg
jb
add
ret
clc
out
cmp
sbb
add
add
jmp
leave
inc
clc
xchg
clc
jl
movsb
clc
push
out
call
add
push
cmp
and
cmpsb
clc
lods
pop
cmp
or
add
or
add
mov
push
dec
inc
add
mov
xchg
cmp
add
ret
dec
add
arpl
add
mulb
xchg
lahf
aaa
push
gs
xor
add
push
add
add
add
in
add
add
adc
add
loopne
arpl
add
pop
loopne
js
shll
xchg
repz
xchg
mov
mov
add
mov
cmp
add
je
add
mov
sub
leave
xchg
dec
mov
clc
in
in
cld
adc
add
add
pop
mov
gs
jo
add
adc
add
loop
clc
inc
add
iret
testl
repz
int3
sbb
dec
dec
adc
sbb
jge
dec
lret
scas
outsb
and
add
add
mov
add
jge
enter
add
pop
cmp
test
add
add
clc
push
add
xchg
jnp
cmp
add
xchg
test
xor
add
clc
insl
es
fimuls
add
clc
imul
mov
icebp
pop
sbb
cmp
inc
add
fsubs
clc
cmp
clc
sub
add
addr16
push
clc
out
sbb
in
push
push
pop
push
add
jbe
push
add
xabort
xchg
std
and
add
fs
out
xchg
push
add
stos
fwait
jmp
loope
gs
xor
add
push
pop
adc
add
jbe
clc
std
sarl
enter
into
pop
xchg
cmpsb
clc
enter
dec
or
and
mov
mov
add
add
or
add
add
mov
add
pop
and
add
add
ss
clc
lret
ret
clc
ret
clc
loope
loopne
sub
fcmovnbe
cmpsb
clc
int3
pop
mov
or
sub
hlt
jl
add
sar
add
push
add
mov
sub
clc
xchg
lods
sar
clc
cmp
clc
lcall
add
add
hlt
hlt
into
fsubl
add
clc
mov
movsb
clc
inc
clc
cmp
imul
add
aaa
xabort
xbegin
clc
mov
clc
jo
add
xchg
insl
mov
add
xbegin
iret
jl
das
mov
jnp
clc
mov
lret
inc
add
mov
lcall
inc
add
popa
add
sbb
in
dec
pop
mov
jb
add
clc
data16
or
add
xor
sbb
mov
add
jnp
insb
push
jbe
sub
inc
clc
ljmp
or
fwait
mov
repnz
cmp
shlb
dec
or
clc
cli
jmp
add
mov
add
add
cs
clc
add
add
insl
in
xor
add
sti
outsl
cmp
mov
add
inc
clc
ljmp
add
mov
movsl
clc
lcall
add
test
mov
js
icebp
add
pop
sub
add
clc
mov
dec
and
add
test
cmp
outsb
ss
movsl
clc
or
test
push
repnz
clc
movsl
clc
clc
mov
xbegin
xor
add
out
cmp
inc
clc
scas
dec
mov
clc
add
add
add
outsl
sub
mov
add
ss
ja
mov
outsl
adc
add
xor
add
xchg
dec
outsb
lret
inc
add
add
gs
lock
clc
popa
add
and
add
test
pop
push
clc
sar
lods
std
call
add
add
mov
push
push
cli
scas
mov
sar
add
ret
clc
pop
pop
inc
clc
loope
xabort
sbb
or
into
adc
add
add
or
dec
clc
test
mov
clc
pop
lods
pop
lock
add
clc
inc
add
xor
add
or
mov
add
sbb
aaa
sbb
mov
clc
and
pushf
mov
in
adc
add
fwait
ja
add
add
add
bound
add
pusha
add
sarl
movsl
clc
js
mov
clc
adc
add
clc
es
dec
jl
jae
add
xchg
jge
in
xor
lea
clc
push
cltd
test
push
dec
nop
mov
add
push
aas
sbb
clc
pop
clc
push
mov
insb
cs
insl
xlat
jge
clc
leave
sub
add
add
cltd
adc
mov
leave
pop
cmp
clc
cwtl
mov
clc
repnz
cwtl
mov
cltd
je
sub
or
add
xor
sbb
sub
pop
or
mov
clc
ret
clc
imulb
jle
sub
fdivr
out
fldt
inc
clc
push
cmp
or
sbb
add
mov
mov
clc
inc
add
jns
clc
mov
add
jle
xchg
pop
xchg
popa
add
push
or
inc
add
cmpsl
clc
and
add
into
dec
cmp
or
test
clc
mov
sbb
js
xchg
sar
push
lods
rorl
adc
add
gs
popf
stos
push
xchg
mov
nop
repnz
adc
add
div
inc
clc
stos
push
add
mov
clc
flds
add
mov
add
in
fs
cmpsb
clc
pop
dec
int
sahf
je
clc
sub
jnp
cmp
clc
in
push
mov
cmp
clc
xchg
cmp
clc
inc
clc
fcompl
mov
clc
pop
outsb
and
add
or
add
imul
clc
xbegin
loope
xor
add
stos
insl
xor
sub
push
add
adc
add
addr16
aas
lret
add
test
lock
add
nop
xchg
mov
ret
ds
clc
inc
clc
mov
clc
lods
in
shlb
fbstp
add
add
lea
clc
mov
clc
mov
call
clc
sar
mov
sbb
stc
lea
clc
imul
add
shl
clc
xor
add
add
inc
add
push
add
repz
clc
lock
lret
push
add
or
cmp
movsb
clc
inc
add
pop
test
clc
or
sub
clc
rol
clc
call
fildl
clc
lods
es
push
or
mov
divb
add
mov
cmp
adc
add
jns
ja
clc
adc
add
stc
aaa
mov
arpl
add
add
inc
clc
in
sub
clc
pop
enter
add
add
jb
add
add
std
dec
jbe
stc
cmp
clc
xchg
pop
adc
add
add
dec
movsb
clc
dec
iret
sub
xchg
push
ret
clc
sub
cld
scas
dec
lcall
xbegin
outsb
popf
jge
inc
clc
sbb
insb
add
add
lea
int
add
ficoms
add
sub
clc
fs
fwait
sahf
mov
daa
clc
cmp
pop
mov
icebp
xor
imul
clc
xchg
lcall
add
xchg
sahf
mov
inc
add
loopne
or
clc
aam
clc
sar
clc
call
add
cmp
clc
sbb
add
cwtl
push
test
fdivrp
sbb
ss
ljmp
rcr
movsl
clc
cmp
sarb
add
or
ret
clc
cs
mov
inc
clc
int3
lods
into
lods
mov
add
aaa
cli
sar
push
dec
mov
cmc
data16
jl
lret
jle
clc
ret
clc
jo
add
clc
jnp
dec
xor
add
clc
pop
mov
lods
jle
jge
out
das
lock
ja
lret
mov
and
pop
jle
jo
add
clc
pop
enter
clc
rcrb
out
bswap
fs
cmp
clc
out
add
add
sti
jne
add
fildll
aam
lahf
inc
clc
push
jmp
add
fsubs
mov
cs
add
lcall
pushf
pop
add
add
push
sub
add
xbegin
pop
and
add
push
xchg
push
cwtl
jecxz
cmp
push
add
shl
clc
jmp
ljmp
cmp
cmp
into
in
pop
mov
add
sub
mov
xbegin
pop
sbb
cs
cs
clc
in
repz
movsl
clc
test
pop
mov
mov
clc
scas
mov
add
add
mov
lods
popa
add
stos
xabort
or
jg
push
add
fwait
mov
pop
dec
out
sbb
lret
clc
enter
sbb
mov
xchg
out
sbb
jmp
out
shrb
mov
mov
repnz
shl
in
fnstcw
and
add
in
dec
aaa
mov
add
clc
add
add
add
ds
mov
fsubl
lret
and
add
clc
inc
clc
add
add
adc
add
clc
dec
adc
add
sub
clc
enter
clc
mov
imul
add
pop
clc
ds
cli
nop
jp
add
cld
inc
clc
jg
ja
mov
inc
add
jne
sar
loope
popa
add
cmc
sbb
test
leave
lahf
aas
insl
mov
repz
mov
sar
clc
lcall
rcrb
into
sar
xchg
dec
jae
add
aaa
xor
add
add
aad
add
mov
fadd
clc
fs
jmp
lahf
leave
mov
inc
add
ljmp
mov
clc
pop
or
add
rcrb
add
dec
ljmp
repz
adc
add
test
add
pop
cmp
xchg
mov
adc
add
bound
add
push
inc
add
and
add
mov
clc
repz
adc
add
movsl
clc
inc
add
jne
jge
inc
clc
insb
push
add
jae
add
outsl
shr
rorl
call
clc
das
cmpsb
clc
pop
or
mov
add
pusha
add
sbb
push
cltd
iret
addr16
cmp
scas
ficompl
mov
clc
jne
clc
cmp
add
push
clc
push
fbld
clc
test
xabort
xchg
or
clc
clc
sbb
push
xchg
jnp
clc
sar
clc
inc
add
and
add
cwtl
test
clc
lret
clc
xor
cmp
cmp
add
push
add
notl
add
fisubrs
jge
clc
push
clc
pop
pusha
add
fs
int3
cmp
push
clc
add
add
rcrl
jno
add
lods
push
add
fdivrl
cs
clc
mov
shl
pop
fisubrl
add
je
push
imul
mov
testb
clc
pop
pop
cmp
cmp
add
syscall
clc
out
outsb
arpl
add
xor
add
int3
xchg
in
and
addr16
xor
add
clc
jg
pop
pop
clc
lcall
clc
bound
add
call
jge
and
jo
add
clc
sbb
clc
inc
clc
inc
clc
pop
lret
mov
add
jbe
add
sarb
clc
add
add
rorl
add
insb
insl
enter
adc
jmp
add
bound
add
je
add
mov
clc
adc
add
clc
and
add
sbb
push
leave
lret
mov
and
add
or
adc
add
dec
in
add
cmpsl
clc
rcrb
clc
fiadds
call
add
gs
xchg
data16
out
pop
stos
insb
xor
add
adc
sbb
xlat
xchg
rclb
cs
mov
and
clc
jle
and
add
jns
aaa
mov
mov
mov
icebp
inc
add
loopne
add
add
ja
cmp
ret
add
or
jnp
sti
out
pop
scas
dec
add
add
fcomps
push
and
and
add
sbb
add
fwait
pop
push
cmp
clc
das
xbegin
jae
add
clc
add
add
add
pop
dec
insl
cmp
clc
aas
hlt
pusha
add
jnp
jne
ds
push
cmp
sbb
dec
inc
add
sbb
enter
daa
clc
xabort
decb
mov
clc
sahf
mov
test
pop
std
mov
clc
mov
clc
stos
test
movsl
clc
aam
fidivrl
add
jae
add
clc
mov
add
hlt
sar
and
add
add
mov
xor
add
add
jne
xchg
fdivs
add
mov
add
pop
push
mov
test
aaa
push
into
xor
add
push
add
dec
jae
add
lahf
ds
mov
mov
popf
loope
xchg
enter
outsb
and
aad
add
insl
mov
mov
roll
clc
and
add
clc
add
add
in
mov
mov
shll
add
movsl
clc
imul
clc
insb
icebp
sti
xor
jl
aaa
jae
add
adc
add
out
dec
pushl
add
or
add
stc
pop
data16
xor
add
pop
in
jle
clc
add
add
add
call
into
xchg
fisubl
clc
fmull
out
add
cmp
sar
add
loop
jae
add
add
xor
add
jmp
jg
sbb
add
xchg
mov
lret
xchg
insb
insl
rcr
jns
clc
jns,pn
push
xchg
jp
push
add
xor
out
mov
push
out
xabort
movsb
clc
pop
mov
jl
insl
pop
clc
cmp
add
mov
fwait
mov
hlt
std
jge
das
cld
lods
bound
add
clc
cltd
jle
add
jmp
es
and
add
lret
lods
andnps
stc
mov
repnz
jle
lods
stos
cmpsl
clc
fcompl
add
dec
sub
mov
std
cmp
pop
push
popf
push
cmp
jns
movsl
clc
add
cmc
loopne
jae
add
mov
add
add
clc
and
fwait
sub
clc
mov
clc
sbb
clc
cwtl
or
fcomp
popf
fmull
out
mov
clc
jne
mov
push
pop
ss
dec
shrl
mov
add
xlat
cmp
lock
clc
xchg
dec
jmp
sub
add
add
lods
fmuls
dec
jo
xabort
call
rolb
add
xor
add
cmpsl
clc
or
inc
clc
xchg
cmp
mov
scas
sub
pop
test
mov
cmp
and
add
fsubl
add
mov
or
push
add
mov
mov
dec
nop
out
cmp
stos
and
inc
clc
mov
outsl
divb
jmp
clc
pop
adc
add
jo
add
enter
fucomi
sub
add
int3
out
cmp
xabort
cwtl
mov
clc
loop
dec
pop
clc
push
clc
and
add
mov
mov
push
aas
jecxz
popf
jg
xchg
adc
add
add
repz
sub
add
add
add
inc
add
cmp
stc
add
fcoml
cmp
xchg
test
dec
push
and
out
stos
and
add
in
jp
clc
jbe
push
clc
cmp
fwait
jbe
clc
scas
dec
mov
add
jmp
clc
jo
add
clc
fnstcw
outsl
fcmovne
add
add
clc
cmp
clc
push
clc
or
repnz
xchg
add
add
jo
add
ds
ss
shrl
add
push
add
inc
add
icebp
mov
xchg
pop
xchg
fldcw
mov
clc
xchg
ficompl
pop
push
add
add
add
clc
clc
mov
and
add
imul
add
adc
add
adc
xor
and
add
out
enter
nop
pop
clc
into
ss
clc
rorb
push
clc
imul
clc
sbb
insb
pop
dec
xor
add
ret
clc
pusha
add
sahf
test
adc
clc
dec
adc
add
loopne
sub
clc
mov
clc
or
add
dec
adc
add
add
cmp
push
test
dec
mov
add
or
clc
sbb
clc
xor
add
add
jae
add
iret
mov
dec
and
add
mov
fcoml
and
add
clc
pop
and
add
clc
cmp
clc
push
add
sar
xor
add
clc
pushf
sub
add
mov
in
dec
jl
jae
add
jg
inc
clc
adc
add
xbegin
add
fdivl
add
cmp
test
and
add
aam
clc
dec
into
mov
std
leave
lea
mov
int3
ss
nop
or
push
push
add
xchg
fcoml
clc
and
add
xor
add
add
add
int
rcl
cmp
add
push
add
jmp
pop
clc
inc
clc
and
add
add
xchg
push
lods
jns
push
add
fldl
add
clc
ljmp
mov
add
xchg
and
add
clc
jne
enter
dec
das
testb
ss
aam
clc
lea
cmp
dec
lret
jnp
sahf
lret
mov
clc
mov
sub
jnp
mov
clc
sub
in
aas
idivb
cli
aaa
mov
add
add
pop
clc
inc
clc
inc
add
cmp
add
lods
and
add
xor
add
cwtl
jg
clc
out
mov
clc
inc
clc
icebp
sbb
jmp
cmp
clc
fwait
cmp
sub
ret
clc
mov
test
mov
add
cwtl
pushf
push
add
pop
sbb
push
ret
clc
test
or
xor
add
ja
mov
clc
add
add
mov
out
sti
mov
add
clc
sub
out
inc
add
into
and
clc
ffree
clc
mov
clc
pop
cmc
nop
sti
leave
roll
clc
push
sarb
xchg
adc
add
out
cmp
incl
add
test
add
fldcw
clc
mov
add
mov
aaa
pusha
add
lods
cmp
pop
and
clc
int3
pop
ret
clc
fcompl
xor
add
mov
add
out
scas
mov
jno
add
ficompl
fistpll
pop
mov
leave
mov
xchg
pop
sub
pushf
int
bound
add
clc
cltd
repz
clc
push
adc
add
push
mov
jge
add
loope
mov
clc
mov
add
add
clc
out
mov
test
add
cmp
add
push
cmp
jmp
pop
mov
clc
jp
add
cmp
clc
sarb
insb
pushf
fwait
add
add
add
jp
pop
jecxz
mov
imul
leave
mov
xlat
es
ss
aam
or
add
repnz
adc
xor
add
clc
jb
add
jno
add
out
inc
clc
and
add
push
mov
mov
xor
add
test
int3
lret
jae
add
dec
test
clc
pextrw
inc
add
inc
clc
ljmp
cmp
cmp
sbb
inc
clc
jbe
into
outsl
cmp
in
adc
add
in
and
add
adc
add
add
mov
clc
and
movsb
clc
pop
ja
in
jmp
mov
add
clc
mov
add
clc
xchg
jle
pop
mov
jle
mov
mov
hlt
xchg
decb
ret
jmp
add
cmp
fs
js
shlb
fadd
clc
inc
add
daa
clc
mov
clc
push
add
lods
loope
push
add
out
pop
sbb
cs
loope
inc
add
cli
inc
add
das
inc
clc
lret
cmpsb
clc
dec
xabort
clc
cmp
cmpsl
clc
in
in
ja
add
test
out
iret
fdivrl
clc
adc
add
adc
add
add
add
add
add
add
aam
pop
xor
add
or
dec
sti
adc
add
ds
stc
mov
add
jbe
clc
daa
clc
mov
movsl
clc
ja
clc
sbb
inc
clc
sbb
add
push
add
push
cmpsb
clc
mov
and
inc
clc
int3
pusha
add
cvtsi2sdl
clc
jne
xbegin
test
clc
inc
clc
repz
clc
dec
adc
add
add
xchg
xabort
clc
fsubr
aam
clc
sbb
das
arpl
add
in
cwtl
push
xchg
daa
clc
cmp
stc
or
repnz
popf
cmp
clc
cmp
addr16
xchg
cmp
pop
mov
sbb
xchg
sub
xchg
mov
sahf
inc
clc
outsl
rcrl
js
aaa
jp
cmp
clc
stos
mov
push
add
adc
add
add
add
push
push
add
cmp
pop
push
cmp
xor
add
push
add
add
jge
cmp
lea
clc
add
mov
clc
mov
clc
xchg
test
or
dec
jmp
or
jnp
add
ja
and
add
inc
clc
dec
pusha
add
or
ss
int
out
sbb
add
call
mov
pop
pop
or
outsl
mov
add
add
mov
in
fdivrl
jne
mov
testl
scas
test
mov
lret
mov
add
dec
jp
cmc
dec
mull
sti
mov
cs
clc
push
adc
lret
mov
jl
add
add
add
sar
xabort
xchg
xabort
add
lcall
sbb
add
jp
add
jne
or
scas
xlat
mov
add
push
add
sbb
jl
add
mov
clc
xor
add
in
sbb
add
add
cmpsb
clc
jnp
mov
das
addr16
in
lods
jb
add
clc
fwait
adc
add
add
in
or
fcoml
add
loopne
adc
add
add
icebp
xchg
mov
push
out
mov
incl
add
in
mov
xabort
aaa
pop
addr16
push
and
add
fsubrl
test
xor
add
and
add
add
jnp
sbb
pushf
mov
add
test
gs
int3
in
xchg
fldt
add
ret
clc
cmp
movsb
clc
mov
stc
inc
clc
jp
clc
int
clc
and
add
clc
insl
mov
clc
add
add
test
jp
cmp
mov
lock
add
add
add
ljmp
arpl
add
clc
cmp
outsb
loop
dec
enter
xabort
clc
push
cltd
ds
sub
clc
lret
xor
add
pusha
add
mov
clc
lods
add
add
fcomp
or
adc
add
adc
add
clc
movsb
clc
mov
insl
es
aaa
mov
cwtl
push
add
loop
cmp
clc
cmpsb
clc
mov
sti
rcr
jmp
xchg
sub
clc
mov
mov
pop
sub
sub
insb
data16
rol
clc
mov
hlt
js
pusha
add
jp
cld
sbb
add
xchg
xchg
pop
add
add
mov
or
clc
inc
clc
popf
mov
clc
es
mov
inc
clc
mov
sub
call
clc
sar
or
add
push
clc
movsb
clc
inc
add
sbb
or
lahf
cwtl
xchg
push
fnstsw
add
pop
pusha
add
repz
push
mov
xchg
pop
jg
jecxz
bound
add
faddl
add
mov
insb
icebp
scas
dec
sbb
clc
jmp
add
add
iret
iret
xor
add
jmp
push
or
stos
mov
mov
dec
cmp
jbe
add
int3
jmp
add
cmp
add
lcall
mov
cmpsb
clc
sti
cmp
mov
xchg
cld
adc
clc
inc
clc
pop
clc
nop
inc
add
cld
xbegin
out
pop
inc
clc
clc
rorl
movsb
clc
popf
sar
cmpsb
clc
xor
add
jle
pop
lret
or
add
clc
sar
rorl
xor
add
dec
cmp
mov
add
add
mov
pop
lcall
pop
sbb
xlat
cmp
clc
mov
sbb
mov
rdseed
lret
fdivrl
add
call
push
add
push
push
sub
clc
mov
clc
mov
xor
add
cmpsl
clc
aas
aam
in
ljmp
dec
adc
add
cmp
add
clc
add
pop
addr16
idivl
clc
scas
sbb
clc
xor
add
cwtl
aaa
cmp
jb
add
lock
xchg
mov
clc
arpl
add
loopne
inc
clc
xchg
xchg
and
add
add
fcomps
test
mov
test
sar
stos
je
aad
clc
cld
fcmovne
hlt
cmp
clc
addr16
enter
adc
add
gs
fwait
mov
daa
clc
mov
clc
dec
lea
pop
xor
push
add
xchg
sbb
clc
mov
mov
jns
jmp
mov
es
cmpsb
clc
mov
iret
jb
add
adc
add
and
add
mov
imul
in
cmp
xor
add
stos
inc
add
mov
lods
dec
arpl
add
xchg
cmp
inc
add
push
int
add
mov
xor
add
adc
add
clc
jge
dec
emms
xchg
xor
add
add
jg
inc
add
jmp
sub
clc
sti
adc
add
mov
xchg
dec
cmp
cmp
mov
add
add
dec
mov
jno
add
add
jge
lcall
add
add
clc
movd
pushf
mov
mov
mov
out
push
cmp
clc
call
add
ret
clc
jle
and
add
je
mov
xabort
clc
in
aam
clc
hlt
cld
ss
xchg
das
ja
xor
add
clc
dec
mov
jle
movsl
clc
mov
shlb
clc
in
test
int
stos
mov
jb
add
inc
clc
jmp
mov
clc
cmc
jo
add
loop
cmp
imul
jg
ret
jns
out
jno
add
adc
add
mov
clc
call
pop
clc
jg
outsl
cmpsb
clc
bound
add
add
sub
clc
adc
add
das
out
bound
add
clc
jmp
clc
sbb
sti
ret
clc
int
out
adc
pop
clc
sbb
addr16
pop
mov
add
add
into
bound
add
add
cltd
adc
cmc
test
fidivl
add
stos
add
add
add
cmp
sbb
add
adc
add
stc
sub
or
cmp
arpl
add
push
add
xchg
pop
rorl
sahf
mov
cmp
add
push
add
mov
das
leave
adc
add
clc
mov
or
xchg
insl
idivb
js
hlt
aaa
mov
lock
add
xor
add
inc
add
jecxz
jo
add
dec
push
add
mov
sub
add
sarb
loop
sbb
add
sar
cmp
add
and
add
lahf
repnz
or
mov
stc
out
sbb
add
loop
push
dec
testl
shrb
clc
jno
add
mov
xchg
add
add
mov
add
clc
cs
clc
sti
push
sar
clc
sbb
xor
lods
jbe
xabort
sub
clc
adc
add
clc
push
popa
add
ret
clc
jecxz
aas
cmp
cs
lret
xor
add
call
sti
xor
gs
jno
add
lahf
loop
test
cmp
clc
mov
jp
adc
xchg
mov
repz
mov
xbegin
adc
xchg
and
add
and
add
add
add
scas
xbegin
clc
cmp
clc
in
lcall
lcall
push
add
adc
add
mov
cwtl
and
add
add
inc
add
ret
clc
inc
clc
sub
jecxz
in
iret
or
jecxz
outsl
dec
gs
call
repnz
cmc
divl
in
push
pop
or
cmp
enter
xor
bound
add
ret
clc
mov
clc
xor
clc
addr16
mov
daa
clc
iret
loope
sar
add
stc
cld
sub
mov
mov
out
sbb
add
add
xchg
nop
dec
xor
add
clc
mov
mov
add
ja
clc
mov
inc
add
inc
add
das
adc
add
add
jl
sub
mov
mov
in
push
mov
add
int
xor
add
jge
cmp
dec
fsubl
mov
mov
clc
sahf
outsb
mov
and
imul
jns
clc
loop
inc
add
insb
and
add
clc
call
inc
add
mov
mov
clc
loope
push
push
mov
push
add
pop
clc
add
add
clc
add
add
xchg
arpl
add
insb
mov
xchg
pop
xchg
pop
push
add
and
in
movsb
clc
sbb
jne
pop
sar
and
clc
xor
cmp
pop
pusha
add
xchg
stos
jle
push
inc
clc
dec
sar
imul
sub
cld
sbb
sahf
add
data16
push
add
xor
add
clc
cmp
nop
into
jb
add
lcall
lahf
fsubr
cld
push
ret
clc
xbegin
jbe
add
cmpsl
clc
sub
xchg
mov
add
adc
add
inc
add
das
mov
mov
lods
in
push
add
dec
adc
add
push
clc
sub
std
scas
rorl
xchg
fs
sub
xlat
mov
mov
inc
clc
push
add
xchg
mov
es
push
push
js
imul
clc
jbe
popf
mov
gs
mov
clc
flds
jle
fs
add
add
sub
jmp
cmp
lods
clc
loop
or
clc
mov
lahf
add
add
add
add
mov
in
pop
cs
xchg
icebp
jno
add
cltd
jl
jb
add
js
clc
mov
clc
data16
mov
sub
inc
clc
mov
in
scas
adc
add
xor
inc
add
or
and
testl
sti
adc
mov
clc
mov
in
mov
and
add
clc
xchg
or
add
add
ret
clc
xor
add
clc
cmpsb
clc
and
lock
fstpl
loop,pt
add
stc
sbb
clc
bound
add
cwtl
cwtl
scas
loop
addr16
aad
push
add
mov
clc
ds
cmp
clc
push
clc
fldl
add
add
std
fsubl
add
add
ret
in
test
insb
je
pop
sar
jae
add
add
popa
add
stos
test
xabort
lahf
jecxz
std
repz
test
arpl
add
cmp
clc
add
add
push
clc
inc
add
data16
sti
cmp
mov
sbb
ror
sti
sub
add
add
add
and
cmpsb
clc
fidivrs
clc
out
into
jbe
add
lahf
test
add
add
add
add
add
movsb
clc
fisubs
add
pop
push
cld
out
ja
clc
dec
jecxz
jmp
stos
or
xor
add
dec
and
pop
ret
imul
lret
add
add
lahf
mov
clc
stc
push
hlt
cmp
add
ljmp
bound
add
es
ret
add
xchg
icebp
add
add
pop
aam
xor
add
add
and
add
or
clc
mov
mov
add
enter
add
cmp
outsl
aam
pop
mov
add
add
add
adc
jp
push
mov
mov
add
add
daa
clc
push
lods
pop
sub
es
push
cmpsb
clc
bound
add
clc
cmp
clc
push
xbegin
jno
add
clc
mov
insl
bound
add
mov
cmpsb
clc
jns
add
inc
add
testb
stos
imul
pop
hlt
dec
fadds
add
std
xchg
adc
add
clc
xor
add
sub
inc
clc
mov
daa
clc
pushf
das
stos
pop
fwait
clc
inc
clc
stos
pop
pop
clc
dec
cmp
mov
add
roll
pop
mov
xor
pop
cmp
mov
mov
cli
mov
add
add
add
add
clc
xchg
outsl
cld
push
mov
sbb
pop
mov
clc
fdivp
mov
clc
cld
adc
add
cmp
push
clc
rcrb
clc
xchg
cltd
cmp
ret
clc
push
cmpsb
clc
fimuls
clc
jo
add
mov
out
mov
test
add
sub
xor
add
push
enter
cmp
clc
pop
sahf
das
adc
mull
clc
int
add
pop
sbb
xchg
loopne
rcrl
movsb
clc
mov
clc
leave
cmp
or
add
fidivrl
add
cmp
push
clc
aam
sbb
clc
test
daa
clc
mov
fnstsw
push
int
add
sti
mov
cmp
mov
mov
sbb
loope
xchg
js
clc
jecxz
pusha
add
out
inc
add
and
add
or
add
add
mov
js
jb
add
clc
xor
add
imul
add
dec
clc
inc
clc
sbb
xlat
push
clc
shr
je
stos
and
add
and
add
push
clc
mov
add
mov
add
or
clc
dec
and
add
add
out
xlat
out
cmp
dec
rol
clc
daa
clc
push
negl
and
clc
jno
add
xlat
cmp
clc
inc
clc
dec
and
fisttpl
popf
lods
test
add
add
clc
xor
xor
add
clc
mov
movsb
clc
fildll
ljmp
add
dec
nop
lcall
cld
pop
sar
clc
sahf
pop
xor
add
push
add
loope
ret
add
mov
mov
cmp
add
add
pop
aad
jp
clc
imul
lods
fistps
push
stc
into
mov
add
decl
sub
pop
test
shrb
add
adc
add
clc
add
clc
mov
clc
aaa
xor
pushf
stc
inc
clc
imulb
mov
add
add
add
nop
out
imul
xchg
leave
in
push
sar
jnp
aaa
in
xchg
cs
sub
test
sti
push
clc
outsl
enter
jo
add
cmp
clc
mov
clc
int
or
dec
sbb
add
xor
add
shl
clc
call
std
jno
add
adc
add
cmp
fwait
xor
add
or
aaa
xchg
sbb
add
pop
add
add
add
mov
pop
mov
xchg
cmp
popa
add
xchg
pop
mov
cmp
mov
clc
push
add
test
clc
ljmp
push
adc
add
pop
sub
lret
add
add
lods
bound
add
rorl
dec
cmc
xor
add
add
jns
clc
mov
mov
add
jl
xor
add
clc
push
add
pop
ret
clc
out
xchg
and
push
add
sub
push
stos
sub
clc
ret
clc
loopne
push
add
mov
mov
clc
lfs
clc
mov
pop
clc
pop
aaa
pop
es
pop
mov
fsubr
sub
clc
out
lret
push
xchg
lea
ds
sub
sbb
data16
cmp
mov
clc
jno
add
clc
sbb
xchg
jne
fisubrs
inc
add
jp
movsl
clc
wrmsr
add
sub
clc
lahf
aaa
cltd
add
lret
sbb
pop
adc
add
clc
jnp
add
loope
sar
cmp
add
xor
add
xchg
xchg
addr16
or
sti
jmp
movsl
clc
mov
clc
mov
clc
cmp
sbb
add
and
add
cmc
dec
cmp
xchg
mov
dec
mov
add
inc
add
push
add
sub
add
bound
add
jnp
scas
sbb
cmp
std
cmc
enter
mov
add
add
clc
hlt
bound
add
sar
inc
clc
xchg
jle
add
inc
add
or
add
cmc
data16
das
mov
test
and
fldl
add
clc
dec
pop
pop
mov
add
add
scas
add
add
xor
add
lock
add
dec
fsts
push
gs
mov
clc
and
add
lods
rol
clc
mov
clc
cmpsl
clc
jg
xor
add
stos
outsl
cmp
clc
popa
add
push
add
nop
mov
add
enter
js
mov
insb
add
add
clc
test
xor
add
enter
data16
leave
iret
leave
pusha
add
aad
or
mov
xabort
xbegin
loopne
jnp
fmul
cmovbe
cwtl
and
add
jae
add
sub
push
add
push
mov
ja
ja
cmp
jmp
call
add
dec
aad
int3
out
loope
insl
push
add
xlat
clc
xchg
scas
stos
popa
add
jg
fwait
fs
sahf
push
or
clc
outsb
cmpsl
clc
aad
std
insl
imul
add
in
mov
clc
xor
add
mov
imul
adc
add
insl
mov
dec
mov
pop
clc
arpl
add
je,pn
ljmp
inc
clc
mov
mov
xbegin
bound
add
clc
fstpl
add
dec
in
pop
pop
jno
add
cmp
add
daa
clc
lock
sbb
sarb
add
lods
in
movsl
clc
test
dec
in
push
addr16
inc
clc
stos
jle
mul
clc
xor
clc
cmp
inc
add
push
dec
push
push
clc
pop
frstor
add
add
xabort
sbb
insl
leave
icebp
rorl
clc
out
jl
clc
push
test
cld
inc
add
cld
push
add
icebp
mov
jmp
clc
push
add
mov
add
xabort
mov
add
mov
add
jmp
clc
int3
dec
sub
clc
cmp
fstpt
fdivs
add
out
in
out
push
in
dec
mov
add
inc
clc
sbb
jge
clc
clc
stos
and
outsb
inc
clc
sbb
mov
inc
add
cwtl
mov
clc
mov
ljmp
push
and
add
outsl
mov
clc
inc
clc
test
xabort
loope
mov
in
cmp
in
out
adc
add
pop
je
clc
sar
mov
or
add
add
pop
fimull
nop
pushf
pop
clc
sub
gs
into
loop
mov
add
add
add
leave
lcall
pop
loope
xor
fmuls
scas
outsl
pop
pop
jmp
es
leave
jns
ss
clc
and
add
clc
jle
add
fdivr
enter
add
js
pop
rorl
jne
add
ss
xbegin
clc
nop
sub
gs
dec
xchg
pop
adc
pop
sbb
adc
and
add
mov
div
mov
add
xchg
dec
xchg
addr16
or
push
fstl
fildll
outsb
int
add
icebp
ret
clc
cmp
add
add
cmp
add
mov
addr16
mov
pop
addr16
cmp
add
add
add
add
clc
push
xchg
jne
clc
cmp
arpl
add
mov
addr16
adc
add
jb
add
push
clc
je
xor
out
aam
es
push
dec
dec
popa
add
pop
add
add
fisubs
add
mov
xchg
add
add
xbegin
add
adc
add
dec
mov
mov
jno
add
add
add
pop
jns
add
sbb
push
pop
fstpl
outsb
pop
and
add
ja
add
mov
push
add
sti
mov
cmpsl
clc
icebp
cmc
aad
sbb
cmpsb
clc
add
add
loop
xchg
test
pop
push
cmp
clc
dec
sbb
xchg
sbb
add
clc
jmp
repz
add
add
dec
aaa
cmp
das
jnp
or
sar
popa
add
cwtl
push
sarl
dec
data16
cld
gs
daa
clc
ficomps
bound
add
sub
sub
out
and
inc
add
push
add
nop
mov
pop
out
stos
pop
jo
add
add
push
sub
jp
clc
jmp
dec
mov
clc
es
sub
mulb
cmp
cmp
clc
xor
add
clc
ss
repnz
cmp
pop
xlat
push
jge
add
data16
push
add
data16
inc
add
fildl
add
push
add
aaa
cltd
xor
adc
add
mov
cmp
and
add
fdivl
add
add
add
add
test
clc
data16
enter
mov
mov
scas
jns
add
push
sub
in
fldlg2
repnz
xchg
mov
xor
or
jbe
add
in
clc
aas
repz
clc
je
fcomps
clc
pop
mov
clc
aad
sar
add
add
clc
aad
add
jns
jnp
mov
jl
clc
cmpsb
clc
and
add
call
clc
imulb
adc
add
in
and
out
daa
clc
in
lahf
nop
mov
add
jo
add
add
push
sub
or
fcoml
add
xor
aad
add
and
add
ss
or
rclb
add
sbb
xor
clc
pop
xchg
inc
add
int3
aas
lahf
pop
adc
add
clc
xchg
or
push
clc
fbstp
jno
add
add
xchg
inc
clc
push
cmp
ficompl
movsb
clc
sub
mov
add
sar
mov
clc
insb
dec
mov
outsl
inc
add
jb
add
xlat
sbb
sbb
lods
int
push
sub
clc
repz
add
clc
jmp
clc
jbe
clc
movsb
clc
sub
xabort
sub
and
add
inc
clc
dec
outsb
mov
mov
jp
int3
ret
data16
add
mov
fcmove
repnz
add
clc
inc
add
mov
pop
cmp
clc
test
aam
sub
clc
mov
xor
add
repz
aam
clc
jo
add
dec
dec
pop
clc
movsl
clc
pop
loope
mov
and
add
add
movsl
clc
imul
push
xor
add
push
out
arpl
add
add
mov
add
jmp
cmp
clc
repz
sbb
es
stos
and
dec
scas
mov
add
pushf
xchg
add
add
add
mov
cs
jmp
add
pusha
add
addr16
ret
clc
loop
cmpsl
clc
sahf
mov
jecxz
out
mov
int3
out
jne
enter
clc
add
add
add
cmp
in
jnp
clc
repz
clc
rclb
clc
shrl
push
add
outsb
clc
outsl
and
add
mov
xchg
push
fldl
add
sub
add
es
pop
or
inc
add
push
add
cwtl
mov
out
jp
shll
cmp
xchg
inc
add
fists
add
movsb
clc
inc
add
filds
add
add
add
sar
sbb
add
ret
mov
clc
ret
add
xchg
or
mov
add
bound
add
mov
cmc
pop
ljmp
mov
add
pop
sub
jge
sbb
pop
mov
popf
push
add
ret
clc
fdecstp
fs
clc
lock
clc
dec
fsubp
clc
push
repnz
clc
mov
daa
clc
test
ljmp
ret
clc
hlt
mov
clc
jb
add
jge
test
cmp
clc
sub
into
aas
xchg
or
lods
ds
clc
push
add
sub
jae
add
arpl
add
clc
cmp
cmp
pop
xor
add
add
push
arpl
add
add
add
cmp
add
cs
test
hlt
in
adc
iret
sbb
dec
add
add
push
cmp
inc
clc
fldl
add
sbb
clc
cmp
clc
or
add
mov
push
add
jle
add
jle
add
xabort
add
or
add
lahf
or
cmp
add
ret
fildl
int3
aaa
fsts
clc
out
jno
add
and
add
mov
add
mov
mov
and
add
mov
add
dec
mov
rolb
clc
jno
add
clc
lret
fstps
sar
cmpsb
clc
jo
add
jle
stc
pop
mov
call
nop
ret
clc
lea
stos
xchg
sbb
xchg
daa
clc
xlat
insb
in
sbb
add
icebp
cmpsb
clc
jg
aas
push
sti
push
jne
sub
js
add
out
cmp
clc
cmp
jmp
nop
add
cmp
add
pop
mov
mov
clc
rorb
or
faddl
clc
jo
add
xchg
cmp
fcomps
jne
pop
aad
cs
int
inc
add
int3
shll
clc
dec
add
add
add
add
xchg
sahf
stos
mov
and
add
enter
add
imul
add
xchg
mov
inc
clc
outsl
ja
clc
sar
in
out
push
insb
mov
out
dec
into
arpl
add
clc
adc
mov
clc
jle
add
inc
add
sbb
mov
add
fdivrl
add
stos
cwtl
xchg
fcmovnbe
and
out
int3
add
popf
cmpsl
clc
out
and
clc
out
dec
sub
add
loope
mov
sbb
push
test
and
jg
divl
add
dec
sub
add
push
add
push
add
lock
loope
fadds
add
clc
arpl
add
popa
add
push
and
add
pop
clc
aam
bound
add
xchg
add
add
clc
in
mov
inc
add
mov
clc
jmp
add
add
mov
fisttpl
jne
push
add
mov
or
or
cli
stos
add
add
xor
add
add
jmp
aad
inc
clc
pop
sti
xbegin
insb
jo
add
sub
cmc
and
add
ljmp
clc
fsub
clc
cs
mov
add
jnp
clc
and
add
mov
ret
jno
add
pop
inc
add
bound
add
sub
int
clc
hlt
push
push
add
inc
add
xchg
push
std
ja
clc
dec
fisttpll
push
add
add
add
adc
add
add
loope
and
add
xchg
nop
lock
mov
stc
pop
sub
add
clc
int
xor
add
clc
repnz
cli
outsl
xchg
cwtl
mov
add
out
inc
add
fisttpl
push
adc
add
nop
loope
gs
mov
sarl
clc
lret
pop
clc
push
add
daa
clc
out
inc
clc
jbe
add
or
adc
xchg
addr16
in
cmpsb
clc
mov
lods
pop
fildll
dec
inc
add
push
outsl
repz
rolb
mov
add
lea
clc
adc
add
add
add
add
clc
xchg
scas
cltd
dec
or
clc
adc
add
push
cmp
mov
add
icebp
pop
push
add
mov
cmp
inc
clc
lret
mov
add
mov
sahf
xor
add
and
add
add
lret
ja
cmp
add
push
lahf
mov
dec
popa
add
xchg
int
add
clc
adc
in
ss
popf
insb
inc
add
cmpsb
clc
sbb
add
iret
mov
pop
mov
jle
ljmp
adc
or
or
jne
out
cmp
add
sub
add
outsb
mov
cmp
mov
jae
add
pop
mov
movsb
clc
rep
pop
mov
push
stos
je
lods
out
add
aaa
addr16
dec
xor
add
add
ljmp
sub
arpl
add
add
jmp
movsl
clc
cmpsl
clc
fs
nop
aad
jns
clc
aam
pop
push
add
mov
fmulp
cltd
outsl
fwait
push
push
clc
mov
cmp
mov
xor
mov
jg
clc
pop
icebp
adc
add
xchg
clc
sub
add
lea
inc
clc
lods
lcall
clc
inc
add
pop
clc
mov
jmp
add
sub
add
xchg
movsb
clc
ds
xabort
clc
pop
cmpsl
clc
add
add
clc
imul
xchg
adc
lock
add
push
mov
add
add
ljmp
cltd
jbe
clc
data16
xor
clc
outsl
cmpsb
clc
inc
clc
push
clc
bound
add
add
stc
sar
or
add
adc
add
add
inc
clc
pop
clc
cmp
imul
add
mov
add
add
pop
and
add
add
repnz
clc
dec
imulb
bound
add
add
sub
mov
clc
sbb
add
jno
add
add
push
dec
adc
clc
out
push
and
add
cmp
add
add
int3
jmp
ljmp
pop
add
and
add
xor
add
inc
add
cmp
movsb
clc
sbb
push
add
add
add
mov
and
add
insb
pop
mov
jb
add
bound
add
mov
clc
cmp
xchg
mov
add
add
mov
add
in
stos
cmp
add
pop
pop
cmp
in
std
inc
clc
loopne
xor
push
lcall
add
add
fwait
enter
xabort
or
add
cld
xlat
push
add
push
jb
add
cmp
movsl
clc
mov
push
push
aad
add
or
cmpsb
clc
in
and
add
mov
pop
clc
dec
cmp
sub
pop
add
add
pop
mov
jge
jnp
clc
adc
clc
pusha
add
out
mov
jg
or
sti
adc
xchg
mov
or
jb
add
add
insb
push
outsb
sbb
sar
test
add
adc
add
lea
or
inc
clc
inc
add
js
clc
cmc
dec
rol
clc
add
call
pop
sbb
cmp
push
imul
stos
adc
add
add
ret
clc
xchg
rclb
clc
push
pop
sti
adc
push
xbegin
hlt
repnz
inc
clc
mov
int
add
rclb
xor
rolb
xor
add
mov
out
sbb
cmc
mov
aaa
jnp
add
enter
mov
clc
jp
cmpsb
clc
out
mov
xor
pushf
cs
add
test
rcr
lea
pop
push
clc
fmull
jge
clc
lea
add
cmp
imul
jns
clc
cmpsl
clc
clc
add
movsl
clc
sub
mov
xchg
or
nop
mov
xchg
mov
bound
add
mov
repnz
add
and
add
hlt
fs
addr16
pop
mov
sar
loopne
into
push
cmp
add
nop
xor
add
clc
std
push
add
dec
xbegin
clc
push
adc
and
add
jae
add
clc
sub
add
test
jae
add
test
jb
add
in
mov
xchg
and
add
loope
and
add
clc
vpmacssww
iret
push
add
sar
cli
cmp
das
or
add
add
or
int
add
in
fcmovu
call
xchg
scas
out
cmp
add
popa
add
aam
cld
sbb
add
aas
stos
cmp
clc
popl
repz
push
mov
int
clc
xor
xor
add
mov
jle
ds
ja
add
ja
outsb
mov
xabort
sbb
mov
fidivl
clc
or
pop
testb
lock
add
je
sbb
add
or
add
dec
aad
out
jo
add
pop
xchg
lcall
adc
add
aam
add
cltd
jns
clc
mov
push
ljmp
add
clc
xor
add
add
neg
mov
icebp
jmp
repz
clc
popa
add
pop
js
clc
and
das
push
add
mov
add
xchg
mov
pop
adc
xchg
push
xchg
xchg
cmp
cmp
push
jo
add
push
pop
jg
xchg
jmp
cmp
shrb
mov
adc
pushf
in
jle
repnz
clc
data16
and
add
add
fidivrs
sar
clc
cmp
add
add
ret
mov
cmp
sbb
clc
dec
cld
mov
sub
imul
inc
clc
mov
add
lret
dec
sbb
cmp
clc
jp
inc
clc
mov
pop
adc
add
cltd
pop
push
sahf
pop
clc
incb
clc
mov
add
xchg
inc
clc
or
pop
loopne
and
add
cwtl
inc
clc
cmp
loop
and
add
incl
add
shlb
add
cmp
test
or
cmc
aas
adc
add
mov
add
xlat
cmc
sbb
clc
dec
ds
sub
inc
add
xchg
add
add
nop
in
add
add
clc
jne
dec
push
add
jle
sub
out
mov
es
in
lret
jns
and
add
jg
iret
cmc
inc
clc
sar
cmp
sub
clc
xbegin
adc
add
add
cmp
pop
add
add
inc
clc
sahf
out
leave
pop
push
cmc
mov
add
pop
mov
pop
add
add
and
cmpsl
clc
lock
clc
xchg
push
clc
mov
add
clc
mov
clc
call
pop
sbb
outsl
mov
mov
das
sar
fs
fstpt
dec
cmp
inc
add
push
movsb
clc
fsubr
dec
adc
loopne
push
sub
add
sbb
sbb
xchg
inc
clc
cmp
gs
repnz
add
int
bnd
outsb
mov
aas
and
add
insl
xchg
xchg
pusha
add
dec
sbb
cs
xor
add
add
cmp
and
xor
add
pushf
sbb
out
aam
push
mov
clc
and
add
add
clc
jns
fldpi
jno
add
add
add
add
ficomps
adc
jne
push
pop
nop
mov
add
movsb
clc
sub
add
cmp
fs
mov
mov
cltd
pop
sbb
and
add
clc
mov
pop
xchg
mov
mov
mov
xchg
out
ja
fsubrp
xor
add
clc
popf
mov
xchg
jg
sbb
test
repz
fwait
xor
clc
add
clc
arpl
add
add
lods
push
add
inc
add
jnp
clc
es
mov
pop
out
cmp
popf
lcall
clc
int
cmp
pop
filds
add
clc
fistl
push
add
sub
fimuls
stos
popf
and
add
out
mov
dec
loop
or
mov
add
xchg
push
add
pushf
out
pop
add
test
data16
inc
add
cmp
nop
sub
rcr
and
add
add
xchg
push
cmp
jmp
repz
add
mov
loop
adc
add
jg
xor
test
sbb
xchg
push
add
xabort
add
push
clc
gs
pop
push
pop
aas
rolb
xor
add
pop
seta
inc
add
daa
clc
repnz
cmp
clc
sbb
pop
mov
mov
add
and
add
add
cmpsl
clc
add
add
ret
stc
dec
mov
add
fstpt
mov
hlt
repz
add
setns
aas
cmp
add
out
pop
fld
clc
mov
test
xchg
dec
std
stc
mov
shlb
pop
xor
or
xchg
insl
mov
mov
and
add
mov
mov
add
scas
and
test
insb
rclb
clc
sar
clc
out
pop
clc
push
out
adc
add
int3
jp
clc
lcall
aam
xor
add
clc
or
cmp
add
rcl
mov
shrb
add
push
mov
add
and
add
push
add
iret
cmp
mov
push
add
push
add
inc
clc
xbegin
add
nop
or
xor
add
add
clc
xchg
sbb
clc
push
add
dec
jns
jne
clc
push
rsm
fistps
and
add
or
fsts
cmc
xchg
sarl
cmp
push
ss
stc
push
clc
jp
sbb
and
add
in
int
adc
fwait
popa
add
popa
add
rclb
js,pn
clc
scas
add
add
sub
lock
add
add
pop
gs
imul
in
mov
clc
jno
add
iret
mov
inc
add
fisubl
add
add
add
fldl
pop
xor
add
xchg
fsubrl
mov
add
pop
or
clc
pop
push
add
xchg
js
clc
sarl
sar
test
add
add
pop
lcall
add
rclb
lret
sahf
aas
gs
mov
fwait
pop
movsl
clc
insb
xor
add
add
scas
dec
mov
inc
clc
or
aad
popa
add
icebp
xor
repnz
add
pushf
inc
clc
sub
add
add
mov
clc
sub
add
sub
iret
xchg
xlat
test
clc
pop
ljmp
jp
add
add
pop
clc
lock
clc
mov
mov
clc
push
xor
add
add
xchg
test
jge
add
stos
xchg
enter
scas
jmp
xchg
imul
mov
dec
loop
xlat
jmp
stc
dec
clc
mov
clc
push
sahf
or
lea
mov
lods
adc
add
and
add
nop
cmpsl
clc
bound
add
add
es
add
imul
iret
lods
sbb
cmc
dec
enter
add
bswap
xlat
sub
bound
add
pop
inc
add
sar
clc
mov
push
daa
clc
xor
add
xlat
and
in
out
xchg
cld
push
add
jmp
rorb
add
add
insb
mov
loop
jp
std
sbb
arpl
add
icebp
fdivs
clc
mov
xchg
loopne
fists
add
jne
push
fistpll
cmp
add
dec
pushf
cmp
sbb
clc
insl
pop
pop
fs
jno
add
mov
add
icebp
cmp
rep
fwait
sub
movswl
clc
clc
sub
push
xor
jb
add
jmp
add
mov
loope
aad
sub
repz
add
add
mov
cmp
add
add
mov
iret
inc
add
pop
clc
mov
clc
or
mov
scas
push
cmp
clc
mov
clc
adc
add
jo
add
clc
xchg
inc
clc
ljmp
clc
pusha
add
pop
scas
sar
mov
repnz
xbegin
add
clc
popa
add
rcrb
add
mov
sti
outsl
dec
pop
pop
movsl
clc
dec
cmc
icebp
sub
repnz
add
fsubl
add
lcall
clc
xbegin
sub
cmpsb
clc
mov
test
jge
sbb
mov
mov
add
or
clc
cmp
imul
movsl
clc
mov
scas
in
jmp
pop
nop
sar
sti
jle
clc
dec
out
mov
arpl
add
arpl
add
add
jge
clc
out
push
add
add
mov
xor
add
mov
mov
mov
dec
xchg
push
add
sub
aad
add
xchg
xor
mov
or
sub
clc
pop
mov
mov
add
out
es
test
gs
mov
cmp
add
loop
fisttps
insb
ljmp
add
add
inc
clc
aas
xchg
cltd
lret
add
clc
gs
mov
hlt
nop
cmp
clc
loop
outsb
xor
add
mov
clc
ss
mov
clc
add
aad
ds
clc
je
call
clc
mov
out
repz
add
ret
clc
iret
cmp
add
jne
add
sbb
add
leave
jge
xchg
push
add
xor
add
xor
add
pop
mov
rolb
add
enter
pop
test
aaa
gs
lahf
fldln2
sub
add
es
dec
add
scas
test
leave
icebp
fidivrs
lock
clc
iret
xchg
add
mov
or
clc
je
cmp
clc
push
dec
cmp
push
add
loop
xlat
fldt
or
pop
out
inc
add
mov
outsl
mov
mov
out
pop
sbb
cltd
cmpsl
clc
jae
add
xchg
sar
clc
fdivs
out
movsb
clc
mov
cld
stos
sub
ss
and
add
dec
dec
lret
lods
ficompl
clc
ja
clc
imul
repnz
jnp
add
stc
in
bound
add
push
xchg
sub
xchg
xor
mov
repz
add
loopne
out
mov
fimuls
lahf
push
cmp
add
or
xchg
jne
or
setg
add
and
add
sub
add
outsb
jmp
jnp
loope
sbb
adc
add
lea
dec
mov
mov
sahf
daa
clc
sub
clc
xor
mov
pop
movsb
clc
jnp
sub
add
cmp
add
inc
clc
dec
xor
js
aad
das
pop
mov
xchg
movsl
clc
mov
adc
add
cmpsl
clc
imul
sar
daa
clc
xchg
inc
clc
push
cmp
insl
scas
cmp
clc
insl
push
jns
jle
clc
adc
add
cltd
xchg
adc
inc
add
xchg
sbb
call
add
es
cmp
xchg
call
popa
add
jbe
iret
xlat
jbe
mov
rol
clc
xor
add
clc
cmp
aas
ja
mov
dec
lahf
out
dec
mov
add
in
gs
xor
add
mov
mov
dec
cmp
testb
xor
add
int3
pop
pop
in
call
clc
or
add
mov
ret
clc
cmp
xchg
xlat
cmp
add
pushf
clc
sbb
dec
pusha
add
cmp
cltd
mov
add
sti
cwtl
push
cmp
sub
clc
jp
clc
aam
clc
xchg
sbb
adc
movsb
clc
pop
xchg
arpl
add
add
add
cmpsl
clc
leave
push
mov
add
aaa
ffree
clc
sub
mov
sub
sahf
scas
or
add
clc
cld
ds
imul
sub
add
clc
enter
stos
shll
add
in
mov
popf
je
test
pop
sub
clc
cwtl
movsl
clc
cld
lcall
flds
imul
setle
cmp
push
add
mov
clc
push
add
push
ds
pop
pop
pop
dec
cmp
sahf
and
iret
psrad
pop
pop
sub
roll
jb
add
out
dec
jo
add
add
jne
mov
cmp
add
pop
fisubl
mov
add
mov
xbegin
pop
and
xor
add
clc
jecxz
inc
add
decb
cmp
test
clc
imul
test
pushf
outsl
lock
dec
xchg
jae
add
clc
mov
hlt
mov
add
dec
sbb
clc
cmp
dec
call
xor
add
in
inc
clc
cmp
clc
pop
adc
imulb
clc
das
inc
clc
cmp
add
lods
mov
inc
add
xor
in
xchg
pop
bound
add
clc
adc
push
lret
fwait
nop
push
clc
ja
add
xabort
clc
or
lret
shrl
add
clc
push
in
xchg
iret
xor
add
xor
add
sbb
clc
fdivs
jb
add
adc
add
test
fldenv
gs
xabort
std
pop
sbb
clc
inc
add
aam
inc
add
ret
clc
imul
add
sahf
stos
xchg
sbb
out
movsb
clc
negb
jmp
add
add
add
outsl
adc
add
rcll
add
clc
das
sbb
clc
stos
sub
push
add
lods
or
pop
adc
add
ljmp
clc
jg
aaa
fucomi
mov
clc
clc
xchg
xor
add
clc
lret
sub
add
add
sar
loopne
mov
je
clc
mov
ds
jle
jno
add
sub
scas
xchg
sbb
pop
cmp
loopne
cmp
loope
fsubrl
ds
lret
clc
test
fs
cs
mov
cmp
clc
xor
add
pop
add
sar
imul
inc
add
stc
popf
lods
je
mov
clc
mov
popf
push
in
xor
add
add
push
wrmsr
add
dec
cmp
clc
ss
mov
rclb
add
clc
sbb
mov
pusha
add
pop
ret
jmp
jmp
inc
add
mov
push
or
clc
shll
cmp
pusha
add
int3
xbegin
push
mov
jno
add
adc
add
add
xchg
push
clc
sar
mov
add
add
mov
add
mov
sub
mov
test
sbb
clc
out
jbe
sbb
mov
xchg
int
aad
int
lea
add
add
js
in
aas
push
test
incl
repz
add
add
add
sub
or
add
add
adc
add
insl
aad
add
mov
lcall
lcall
lods
lret
sbb
clc
stc
outsl
sahf
pop
popf
das
ret
data16
sbb
add
clc
xchg
stos
ret
clc
and
add
clc
inc
add
dec
scas
test
jmp
add
sub
pushf
and
mov
loope
sub
dec
insl
push
add
xor
into
or
in
test
pop
xchg
mov
sbb
sti
movsb
clc
and
add
clc
test
dec
sti
dec
and
add
clc
lock
pop
int3
aaa
aad
sbb
add
add
mov
sub
clc
aam
mov
fildll
ficompl
ljmp
hlt
sub
push
add
loopne
and
cli
fiaddl
add
mov
push
cmp
xor
add
add
xchg
push
add
cltd
sub
movsb
clc
push
add
lea
mov
add
add
je
popf
dec
sar
testl
popf
cmp
push
add
fs
stc
and
add
add
clc
adc
cmp
mov
inc
add
lods
sahf
inc
add
es
dec
dec
das
cmpsl
clc
mov
das
in
push
add
push
clc
cmp
sub
iret
popa
add
test
jnp
clc
jns
add
fisubrs
clc
push
and
sub
add
add
pop
clc
mov
mov
cmp
jne
clc
ss
add
pop
jb
add
ret
xor
insb
add
add
clc
sar
clc
nop
xabort
clc
xchg
mov
and
cld
dec
jo
add
pop
xchg
dec
xchg
loope
jne
add
bnd
negl
add
add
mov
add
test
adc
mov
add
mov
adc
add
adc
add
mov
clc
cmp
push
mov
cmp
test
fildl
pop
out
jg
jecxz
ljmp
dec
add
xchg
aad
mov
daa
clc
mov
clc
inc
clc
xabort
clc
cmpsb
clc
xchg
mov
push
mov
clc
mov
push
clc
bound
add
or
test
loopne
mov
fiadds
add
mov
clc
sbb
add
int3
cld
inc
clc
adc
add
lods
cmp
mov
add
jmp
sbb
dec
sbb
jbe
mov
ret
clc
sti
or
add
clc
fs
outsb
cmc
and
add
xor
add
iret
iret
cmp
clc
movsb
clc
pop
lahf
jb
add
out
mov
cmp
pop
jge
dec
leave
pop
pusha
add
lret
push
add
cmp
insl
mov
add
fisubrl
insb
jge
clc
jge
clc
inc
clc
je
fs
jnp
add
sbb
addr16
cs
gs
bound
add
lahf
clc
testl
cmpsb
clc
ljmp
clc
adc
scas
jbe
test
ret
out
fstpl
loopne
mov
outsl
mov
clc
mov
clc
inc
clc
inc
add
mov
std
xor
add
mov
clc
test
push
add
in
aas
bound
add
fildl
push
sar
clc
ficompl
clc
cltd
xabort
add
mov
sar
xabort
clc
fstl
clc
call
mov
clc
sub
add
dec
dec
negl
js
add
push
add
jl
cmpsl
clc
sar
xchg
xor
add
movsb
clc
into
ret
faddl
add
imul
mov
lea
add
add
xor
add
adc
xlat
pop
jg
or
xchg
adc
add
fistpl
push
fildl
add
add
icebp
adc
add
add
data16
aam
add
in
aam
das
xor
add
jno
add
fcomp
and
add
stc
sub
add
add
mov
clc
and
add
add
add
movsb
clc
sbb
lcall
clc
mov
fwait
and
mov
add
movaps
add
in
push
add
jmp
mov
add
int3
imul
cmp
clc
loope
in
and
add
add
mov
pop
xlat
in
sbb
clc
fisubrs
shlb
add
or
add
xchg
imulb
jle
clc
loop
sub
add
inc
add
in
pop
mov
add
add
cmp
add
adc
clc
cmp
sub
clc
ss
jno
add
add
clc
out
mov
add
mov
add
mov
ds
in
pop
cmpsl
clc
inc
add
je
clc
out
sub
and
add
je
psrlq
ja
clc
or
adc
add
clc
movsl
clc
cmp
add
xchg
fwait
std
jl
pusha
add
out
imul
clc
fistpll
clc
clc
mov
mov
mov
add
pop
lahf
cmp
add
push
push
add
movsl
clc
mov
and
add
mov
add
xor
mov
imul
sar
add
nop
clc
xchg
test
jge
add
mov
pushf
mov
in
cmp
add
data16
pop
push
add
outsl
dec
pop
inc
add
jnp
lods
imulb
push
mov
in
adc
add
cmp
cmpsb
clc
xor
dec
mov
daa
clc
jge
or
clc
or
mov
clc
call
aaa
jecxz
aas
sahf
xbegin
and
add
mov
sbb
clc
push
add
movsl
clc
xor
add
fimull
adc
add
daa
clc
test
sahf
or
add
add
add
add
movsl
clc
imulb
lret
add
pushf
sar
xabort
notb
loopne
into
xor
add
xor
add
push
in
lret
aas
mov
clc
aas
call
add
sbb
add
stos
sbb
dec
call
aam
mov
sub
jecxz
dec
cmp
lret
cmp
pusha
add
lea
and
add
mov
dec
stc
scas
sub
ljmp
and
push
test
in
addr16
or
clc
shrl
sar
stc
cs
sbb
add
test
mov
pop
xchg
mov
hlt
adc
add
clc
adc
nop
pop
xchg
dec
testl
cmp
clc
repnz
sub
clc
mov
add
cmp
add
push
mov
add
push
or
add
lcall
fistpll
xchg
es
das
pop
mov
clc
pop
movsl
clc
sub
out
mov
cmpsl
clc
sub
bound
add
add
clc
jmp
add
jecxz
aam
mov
je
add
xor
add
pop
mov
clc
dec
pop
cmp
adc
add
clc
push
add
add
dec
imul
sub
clc
bndldx
add
add
imul
cmpsl
clc
jle
inc
clc
lcall
push
xchg
inc
clc
dec
std
mov
je
xbegin
clc
clc
cwtl
cmp
add
sub
add
hlt
dec
aam
popf
mov
jo
add
add
lcall
clc
dec
fildl
clc
outsb
mov
pop
sbb
push
add
fisttpl
data16
mov
cwtl
adc
xor
add
cmp
movsb
clc
cmp
push
add
push
mov
clc
out
mov
fmull
xor
add
xchg
pop
aas
add
test
add
scas
iret
lret
pop
rclb
add
adc
ret
clc
jg
sar
push
add
mov
clc
iret
sub
insl
push
leave
dec
push
cwtl
jg
add
das
cmc
sbb
lret
mov
xbegin
shrl
add
mov
or
clc
xchg
and
add
pop
test
out
cmp
pop
add
add
testl
jg
clc
mov
cmp
sbb
push
add
jp
push
ljmp
insb
adc
add
add
cmc
lods
data16
dec
pop
mov
add
aam
xor
add
jo
add
scas
push
sbb
add
scas
dec
insb
mov
add
cmp
clc
jae
add
add
sti
imul
clc
jmp
vcvtps2pd
fs
xlat
aas
adc
add
or
push
add
js
push
repnz
jno
add
clc
sbb
clc
inc
clc
sahf
stc
cwtl
jecxz
test
inc
add
cmp
mov
loopne
data16
and
add
push
add
pop
jbe
ss
add
in
and
add
lods
fisttpll
clc
out
sub
clc
fnstsw
push
xchg
outsl
into
or
add
dec
std
lcall
aaa
out
enter
incl
mov
test
push
clc
leave
aaa
inc
clc
insb
sahf
dec
xchg
adc
add
gs
mov
add
jle
clc
mov
dec
jp
lret
mov
add
or
and
icebp
pop
push
add
loop
sbb
xbegin
pop
and
add
add
add
add
add
and
add
sahf
mov
imulb
cmp
gs
cmp
push
add
gs
mov
add
cmc
xor
mov
cli
rorl
leave
sub
addr16
push
test
clc
xchg
jecxz
jp
add
mov
add
test
fidivs
add
inc
add
test
outsl
pop
imul
dec
aam
cmova
sub
imul
bswap
push
add
xor
clc
pop
clc
lods
adc
add
xor
add
or
add
mov
mov
stos
out
sub
add
inc
add
imul
mov
cmpsl
clc
insl
in
xchg
mov
add
inc
add
push
lock
insb
sbb
stc
out
mov
mov
add
add
test
fistpll
push
add
idiv
mov
dec
xor
add
stos
jp
vcmpps
clc
sar
clc
out
mov
pop
aad
arpl
add
mov
cmp
dec
ud2
sub
add
mov
dec
cmpsl
clc
mov
sub
pop
imul
clc
loopne
cs
xor
add
out
insl
adc
clc
jmp
add
popa
add
jle
xchg
mov
push
add
mov
clc
call
push
add
sbb
xor
add
cwtl
or
cwtl
pop
xbegin
and
fwait
cld
sub
add
add
add
testb
push
add
inc
add
fwait
adc
jo
add
enter
add
fistl
add
add
in
xchg
loop
cli
jne
clc
add
add
std
icebp
pushf
in
mov
imul
popf
add
clc
jl
cmp
add
mov
std
leave
mov
loop
nop
addr16
jl
clc
outsl
adc
add
scas
xchg
push
sub
add
add
add
clc
lret
scas
imul
push
add
cwtl
mov
add
rcl
mov
dec
xchg
fldenv
daa
clc
cmp
xbegin
clc
pop
cmp
ret
clc
das
addr16
cmp
pushf
cmp
add
mov
add
popf
sub
mov
pop
mov
add
adc
add
cmp
outsl
loopne
cmp
insl
mov
sub
clc
dec
das
dec
mov
add
mov
outsb
shl
dec
push
repz
mov
fcoms
pop
lret
cltd
pushf
cmp
jmp
lock
stos
outsl
xchg
dec
inc
add
idivl
add
lods
into
ret
clc
push
add
or
clc
pop
out
pop
xchg
fcomip
nop
gs
adc
add
mov
clc
ss
add
jae
add
add
clc
adc
add
aad
add
mov
clc
xchg
data16
xor
add
add
cmp
and
add
clc
lret
add
fs
pop
mov
or
mov
push
fistl
xchg
cld
scas
pop
mov
clc
rcrb
jnp
add
and
add
fdivrs
and
add
clc
fisubl
clc
lcall
and
add
clc
test
aad
add
dec
mov
mov
clc
sar
adc
add
add
jle
cmp
cmp
stc
xchg
fucom
clc
out
test
outsl
mov
pop
clc
add
add
fucomi
jge
xchg
in
sub
cmpsl
clc
sub
sbb
add
lods
stc
add
add
insb
iret
cli
mov
push
jmp
jle
clc
add
add
cmp
add
lods
mov
aam
add
inc
add
arpl
add
cmp
mul
clc
repz
push
mov
ret
pop
sbb
clc
mov
and
add
clc
jmp
dec
sti
jecxz
std
cmc
adc
add
mov
popa
add
jb
add
add
or
filds
add
daa
clc
pop
inc
clc
addr16
rcl
loop
cmpsb
clc
pushf
pop
cmp
add
push
push
movsl
clc
negb
lea
add
lods
jle
ljmp
pop
xchg
lcall
clc
dec
pushf
cmpsl
clc
and
add
icebp
inc
add
test
add
add
add
cmp
clc
add
add
or
rcrl
push
add
loopne
mov
add
add
jmp
repnz
add
clc
push
ret
clc
adc
add
lcall
fs
dec
cwtl
call
cmpsb
clc
data16
addr16
mov
mov
add
data16
cmp
mov
push
inc
clc
test
add
fcompl
or
clc
sahf
push
clc
cmp
sbb
xor
add
xor
lods
add
add
stc
jmp
clc
and
add
dec
push
add
or
add
jle
jecxz
mov
add
push
clc
mov
clc
movsl
clc
adc
add
sub
add
inc
clc
lods
je
clc
fucomip
pop
add
add
dec
out
clc
mov
dec
push
test
xchg
inc
add
push
add
push
add
pop
mov
clc
adc
testl
add
loope
add
add
add
cs
cmp
clc
mov
inc
clc
stos
pop
or
jbe
clc
adc
add
xchg
xchg
or
clc
aaa
mov
sbb
in
inc
clc
pop
adc
es
mov
and
add
add
jg
pop
nop
das
inc
add
insb
mov
mov
add
aas
mov
xchg
imul
adc
clc
imul
movsb
clc
fcomi
sub
cmp
shrl
inc
add
lods
imul
pop
clc
mov
add
adc
add
jp
clc
push
add
inc
clc
pop
jne
cs
or
shl
in
xchg
dec
test
adc
imul
sahf
sbb
leave
lods
mov
clc
pop
xlat
popf
mov
imul
fisubrs
jns
xabort
je
aad
lock
add
or
push
clc
ds
leave
gs
data16
movsb
clc
mov
clc
xor
clc
aad
lods
adc
add
insb
mov
add
xabort
push
add
mov
daa
clc
jg
cmp
push
clc
inc
add
sti
repnz
lret
cmpsl
clc
sub
add
adc
add
and
add
mov
testb
push
add
arpl
add
fcmovnu
xchg
xor
iret
push
hlt
mov
add
add
push
add
xchg
sub
or
jle
clc
pushf
mov
clc
mov
clc
mov
addr16
shll
add
inc
clc
pusha
add
shr
xor
add
gs
clc
in
es
cmp
clc
aad
cmp
pop
mov
bound
add
push
add
mov
clc
in
pop
clc
jo
add
negl
sub
dec
loope
sub
ss
add
addr16
lods
jge
in
and
add
xor
add
dec
add
fstpl
mov
add
add
sarb
in
push
mov
add
fdivrs
sub
cmp
clc
pcmpgtb
mov
clc
testl
das
ret
clc
dec
fnsave
push
add
jae
add
xbegin
imulb
clc
inc
add
js
add
scas
mov
cmpsb
clc
in
xbegin
jae
add
add
add
and
add
dec
je
pop
inc
clc
jbe
js
clc
imul
clc
sahf
testl
or
add
add
jae
add
outsb
bound
add
addr16
mov
pop
dec
cwtl
xbegin
cmpsl
clc
mov
clc
pop
out
jo
add
jae
add
cmp
cmpsl
clc
cs
and
add
clc
inc
add
jp
pop
loope
mov
inc
clc
pop
fmuls
clc
and
add
add
add
adc
leave
sub
cli
mov
sbb
sbb
cmp
clc
xchg
dec
pop
fstpl
add
dec
sub
mov
out
jns
add
adc
add
clc
mov
cmp
clc
cmp
aaa
cmp
lods
mov
pop
cs
add
lods
mov
mov
dec
add
add
push
inc
clc
inc
add
inc
add
push
cmpsl
clc
sbb
je
fidivs
sbb
nop
insb
arpl
add
xor
add
dec
lock
clc
sub
or
clc
outsl
rcrl
add
cli
add
add
fstpl
out
push
arpl
add
add
push
mov
jl
inc
add
mov
mov
clc
es
in
pop
mov
xor
add
add
jp
je
ja
add
loope
pop
mov
movd
cmpsb
clc
mov
and
gs
jg
add
sub
outsb
and
add
add
mov
pop
mov
clc
fldt
pop
jl
cmp
inc
clc
or
mov
add
xchg
rcrl
sahf
jg
je
cmpsb
clc
cmp
pop
inc
add
enter
inc
add
stos
je
or
inc
add
cltd
inc
clc
or
xchg
insb
scas
icebp
insb
pop
inc
add
sar
fnstsw
clc
sub
clc
inc
add
mov
mov
dec
jo
add
clc
xchg
rcrb
lock
add
cmp
adc
add
movsl
clc
aaa
sbb
add
repz
mov
add
aaa
int3
lret
fincstp
xchg
add
clc
int
mov
neg
std
imul
lret
sahf
dec
jmp
add
jb
add
and
add
clc
fiadds
es
mov
out
hlt
scas
sbb
sub
int
das
icebp
pop
cmpsb
clc
ret
clc
mov
clc
cmp
jg
repnz
add
add
xor
dec
outsl
fdivs
push
add
add
add
adc
add
out
mov
add
cmp
jg
stc
lods
fwait
movsl
clc
test
add
testb
add
add
clc
dec
je
push
or
mov
lahf
xchg
pop
daa
clc
inc
clc
push
add
bound
add
outsb
xchg
cmp
lods
inc
add
mov
mov
add
shl
adc
add
pop
inc
clc
daa
clc
dec
adc
add
leave
cmp
add
cmp
repnz
enter
clc
inc
add
inc
clc
enter
jae
add
add
add
es
lock
in
data16
into
xor
add
add
loopne
xchg
jmp
lcall
clc
leave
and
add
add
jno
add
es
popf
push
cmpsl
clc
clc
xchg
mov
clc
lahf
aam
notb
sar
push
xabort
dec
cmp
clc
aam
add
cmp
pop
fxch
pop
sbb
clc
pop
fidivrl
mov
and
add
pop
add
add
int3
fs
xor
clc
out
stc
mov
clc
bound
add
jae
add
clc
or
fs
or
cmp
cmp
cmp
movsl
clc
gs
mov
push
sub
js
and
inc
add
jns
sub
das
xchg
xchg
dec
jl
arpl
add
xchg
scas
pop
adc
add
clc
add
add
xor
add
xchg
and
add
mov
js
add
xor
add
add
jg
clc
movsl
clc
iret
sub
clc
mov
clc
scas
push
or
xchg
fstpt
clc
aaa
inc
add
roll
add
scas
and
xor
add
clc
jmp
and
add
and
add
clc
inc
clc
adc
add
clc
int3
inc
add
jo
add
inc
add
daa
clc
je
clc
or
add
lods
stos
cmc
repz
pop
adc
add
sub
add
sar
iret
testb
mov
push
clc
lahf
jbe
clc
or
clc
xor
add
sub
sar
clc
sahf
mov
popf
into
rol
clc
sbb
add
jmp
add
in
add
add
xlat
scas
and
add
cmp
icebp
add
add
ret
mov
or
clc
or
loopne
xchg
add
add
or
add
cmp
clc
add
and
movsb
clc
add
add
lret
add
add
cli
add
add
add
xchg
xchg
stos
addr16
sbb
clc
das
sti
aam
sub
clc
mov
push
fwait
pushf
xchg
loop
jo
add
add
sub
add
add
in
in
call
add
ljmp
shrl
int
clc
popf
xchg
js
sbb
cmp
inc
add
aaa
jo
add
clc
lods
xchg
inc
clc
jnp
or
sbb
es
dec
adc
add
shl
jecxz
mov
add
adc
add
add
push
jle
jp
int3
fmuls
clc
hlt
insl
jmp
stc
cmp
add
mov
adc
add
pop
stc
xchg
and
add
add
imul
add
push
pop
sbb
clc
add
add
clc
xchg
mov
cmp
add
pusha
add
imul
add
clc
xchg
jp
mov
loope
cmp
clc
cmp
push
jo
add
icebp
ret
clc
xor
ja
cvtps2pi
clc
pusha
add
jmp
add
jne
imul
dec
sahf
fwait
sti
lcall
mov
push
xor
arpl
add
add
repnz
data16
lahf
cmp
test
mov
add
inc
add
mov
mov
clc
ljmp
mov
pusha
add
out
add
add
repnz
xbegin
mov
xchg
aaa
push
clc
cmc
out
jbe
add
addr16
mov
jmp
sar
daa
clc
fst
push
add
adc
add
add
clc
adc
clc
and
add
xbegin
mov
test
and
add
sub
repnz
mov
stos
pop
aad
frstor
clc
mov
push
addr16
inc
add
scas
out
and
add
clc
sar
push
add
stc
jae
add
clc
out
cmp
and
push
scas
dec
test
clc
fistpll
add
add
int3
xchg
jle
mov
or
push
inc
add
push
mov
inc
add
jmp
inc
clc
iret
ret
shll
inc
clc
push
add
xchg
ja
add
mov
fs
cmp
and
add
mov
filds
add
lret
jae
add
add
mov
inc
add
nop
mov
sub
add
mov
jmp
inc
add
addr16
stos
sub
or
clc
imul
push
add
xbegin
add
xchg
loop
clc
mov
xlat
jl
clc
sar
clc
xor
add
add
or
xor
pop
clc
popa
add
cwtl
cld
pop
sbb
add
fwait
rorl
mov
clc
outsl
add
rorb
ds
add
pop
mov
add
loope
dec
fldl2e
sahf
jmp
clc
sub
cmp
add
lahf
mov
clc
std
and
add
add
lods
ret
clc
popf
dec
xchg
inc
clc
lret
and
add
add
cmpsb
clc
in
mov
dec
add
add
clc
popa
add
pop
and
add
clc
nop
xchg
cld
xlat
push
add
cltd
pop
pop
sub
add
adc
add
fsubrs
push
pusha
add
add
add
ds
incl
clc
xchg
xchg
push
repnz
clc
pop
clc
push
rorl
adc
jne,pn
clc
or
add
push
and
add
clc
xchg
mov
call
xor
add
add
mov
lahf
cwtl
jnp
stos
loopne
inc
clc
cli
es
xlat
sti
sbb
clc
add
add
add
xchg
xchg
enter
sub
mov
xbegin
inc
add
outsb
lods
out
hlt
jle
clc
dec
push
sbb
add
add
fs
aam
imul
push
clc
xchg
negl
and
add
fisubrs
add
add
es
push
lods
gs
loop
aad
stos
xchg
loopne
add
or
xchg
dec
xor
add
push
add
mull
push
add
mov
jb
add
fistpll
sub
add
cmp
clc
mov
in
dec
fcmovu
clc
int
jmp
sbb
loopne
mov
ds
sbb
cld
test
sub
add
movsl
clc
add
setno
out
jbe
clc
mov
arpl
add
clc
adc
ret
fwait
and
adc
add
in
mov
add
push
sub
sub
jae
add
clc
sub
add
add
add
clc
mov
lock
add
insl
scas
out
add
add
clc
and
add
add
mov
or
cwtl
cmp
cmpsl
clc
inc
clc
dec
cmp
sub
clc
lcall
clc
ret
clc
inc
add
out
jmp
clc
ficomps
lcall
lahf
push
inc
clc
mov
icebp
lea
aaa
cmp
sub
add
jle
adc
add
sbb
or
clc
dec
sub
add
sub
daa
clc
mov
clc
je
clc
addr16
cltd
sub
popf
inc
clc
ficoms
icebp
imul
clc
push
add
icebp
pop
and
add
es
push
add
shll
add
xor
add
add
sub
inc
add
ret
cmp
cmp
pop
clc
mov
add
je
clc
inc
add
pop
mov
out
mov
clc
mov
loopne
repz
add
or
clc
jl
add
stc
lahf
std
addr16
adc
clc
push
add
sbb
adc
add
push
fsubs
add
ss
add
add
cmp
or
fsin
leave
inc
clc
jnp
lret
outsb
push
mov
add
add
add
stc
xchg
xor
add
dec
push
inc
add
push
bound
add
fs
xchg
outsb
and
add
or
mov
jp
sbb
shll
add
das
sbb
outsb
push
mov
mov
clc
aas
fstps
add
inc
add
sar
jns
pusha
add
xchg
clc
int
mov
dec
jb
add
outsl
push
add
fbld
add
xchg
add
add
js
clc
ss
or
add
adc
sub
add
add
lock
nop
inc
clc
hlt
jmp
insb
out
inc
clc
mov
jg
mov
out
pop
clc
inc
clc
jne
movsl
clc
xchg
xor
add
cmp
clc
mul
clc
and
add
clc
inc
clc
pop
lods
dec
lock
mov
add
mov
add
jp
aaa
adc
add
clc
push
add
cmc
push
add
stos
and
add
mov
add
hlt
enter
push
add
mov
pop
jb
add
lods
cmp
push
insb
push
loope
xabort
clc
nop
xchg
ja
mov
clc
movsb
clc
mov
jp
scas
ss
xor
add
pusha
add
sub
clc
mov
add
out
fldl
xchg
xchg
dec
data16
jbe
push
add
jmp
clc
mov
lods
aad
in
icebp
es
iret
jae
add
jb
add
in
xor
add
pop
clc
fnstsw
push
add
xchg
mov
push
add
test
and
add
add
add
inc
clc
push
add
faddl
push
out
lcall
add
xchg
mov
mov
rcrl
mov
push
inc
clc
cs
add
add
clc
or
and
add
push
dec
xor
add
ret
jnp
clc
leave
cmp
hlt
mov
add
xchg
xchg
aas
cli
out
arpl
add
ds
lcall
clc
mov
rcll
add
cltd
mov
in
comiss
clc
xchg
push
clc
mov
movsb
clc
sub
pop
push
mov
sub
add
xor
add
int3
popf
cmp
pop
loope
xchg
push
sar
jbe
adc
add
icebp
sub
lods
imul
iret
movsb
clc
pop
jl
add
mov
outsl
sub
dec
cmp
add
xchg
cmp
mov
pop
mov
js
mov
fbstp
clc
or
add
xor
add
xchg
xchg
jge
in
mov
add
iret
cmp
sbb
mov
and
add
adc
clc
gs
inc
add
mov
push
add
cmp
add
push
inc
add
imul
loope
ss
repz
push
pop
cltd
add
add
mov
jno
add
add
or
pop
sti
xchg
mov
xlat
sbb
je
sahf
adc
and
add
dec
pusha
add
add
add
pop
xchg
mov
pop
repz
inc
clc
and
add
mov
mov
pop
push
add
jo
add
clc
repz
lret
jne
clc
sbb
pop
movsl
clc
cld
test
add
imul
and
add
add
inc
add
popa
add
ret
clc
xchg
es
cmp
sub
sbb
addr16
jb
add
mov
cltd
fisubl
add
cs
negb
ss
fwait
outsb
cmpsl
clc
mov
clc
inc
clc
xbegin
jb
add
dec
adc
add
rcll
adc
add
add
enter
add
add
inc
add
and
add
pop
cmp
ja
add
pop
cld
clc
push
clc
aas
mov
add
jge
in
mov
outsb
std
js
clc
mov
add
clc
ljmp
clc
mov
add
add
or
and
rcrb
dec
aaa
hlt
fiaddl
add
cmp
add
mov
or
sbb
add
clc
add
add
add
add
clc
lret
push
clc
ss
push
inc
clc
loope
test
jmp
das
push
add
sbb
jle
clc
sbb
loope
ficoms
add
add
pop
pop
mov
inc
clc
add
add
mov
ljmp
clc
test
int3
mov
add
mov
push
std
pop
push
scas
mov
roll
mov
mov
clc
leave
hlt
insb
pop
movsb
clc
fs
adc
int3
dec
mov
imull
add
inc
add
jp
es
cltd
jbe
push
mov
jmp
icebp
xchg
das
stc
inc
add
hlt
fcmovb
clc
leave
int
clc
push
add
add
clc
mov
clc
pushf
pushf
sub
inc
clc
cwtl
fnsave
mov
add
add
inc
clc
adc
add
add
add
add
add
or
add
mov
cs
pop
mov
add
mov
add
cmp
clc
mov
add
iret
pop
clc
test
adc
add
sub
add
es
sbb
clc
es
popf
push
pop
or
bound
add
clc
ret
clc
dec
outsl
sub
push
decb
inc
add
mov
inc
clc
mulb
insl
cmp
add
jmp
and
add
jb
add
sbb
xchg
xchg
jecxz
push
mov
lea
lock
clc
jecxz
in
jns
out
xabort
dec
pop
mov
sub
add
jno
add
pop
jg
mov
clc
jecxz
mov
je
jle
icebp
mov
arpl
add
jmp
rsqrtps
add
jo
add
clc
dec
pop
xchg
jno
add
add
or
clc
scas
sbb
clc
cmp
inc
clc
mov
mov
jns
add
out
outsl
cmp
scas
sub
pop
fmuls
and
add
or
clc
sar
cmp
sbb
mov
clc
mov
clc
mov
xchg
int3
jp
add
test
int
clc
out
aad
add
cmpsb
clc
inc
add
jns
mov
add
inc
add
cwtl
fwait
xchg
and
nop
cmp
xabort
inc
add
test
pop
xchg
jmp
loop
or
clc
cmp
add
out
jmp
add
arpl
add
bound
add
or
xor
dec
push
lock
add
fs
pop
popa
add
clc
inc
add
pop
fs
xor
add
das
popf
mov
add
dec
addr16
jp
xchg
frstor
add
fldt
ret
clc
pushl
adc
test
ret
out
inc
clc
push
pop
push
pop
sbb
clc
push
sbb
push
in
inc
add
mov
clc
cmp
clc
xor
lcall
push
out
adc
add
enter
clc
sub
add
lahf
leave
jno
add
xor
add
mov
add
mov
ljmp
sbb
out
bound
add
cs
jp
in
mov
enter
push
add
cmp
pop
clc
stc
lea
clc
faddl
testb
clc
inc
clc
std
clc
dec
pop
int
cltd
scas
jp
clc
inc
clc
xbegin
add
clc
push
ds
xchg
out
sbb
adc
add
clc
mov
add
mov
add
xor
dec
and
addr16
fwait
loop
mov
mov
add
cmp
mov
inc
clc
sbb
add
int3
jmp
mov
mov
clc
rcl
and
add
pop
ret
clc
mov
jns
imul
and
sbb
add
sti
mov
xchg
mov
imul
aad
jnp
clc
fiaddl
outsb
push
add
dec
cmp
clc
lahf
sbb
add
add
clc
pop
xor
add
add
inc
add
shr
mov
xchg
adc
add
sahf
sub
push
add
or
adc
add
and
add
add
jbe
aam
clc
addr16
xchg
jb
add
add
pop
clc
in
mov
je
clc
ret
clc
and
add
clc
dec
lods
cmp
add
test
sahf
push
clc
xchg
cmp
add
pop
mov
clc
popa
add
fiaddl
push
rcll
or
add
roll
add
inc
add
cmp
pop
es
pop
or
cmc
jp
clc
push
xor
add
add
aas
mov
pushf
pop
clc
inc
add
lods
addr16
jmp
mov
cltd
add
add
cmp
add
clc
inc
clc
mov
add
pushf
sub
scas
add
and
add
add
ficompl
add
add
add
add
clc
jno
add
clc
adc
insb
xchg
ds
xor
add
add
jmp
add
push
adc
add
add
aaa
mov
mov
clc
sar
movsl
clc
xchg
and
add
add
outsl
dec
pop
rcrl
lods
popa
add
dec
jne
mov
clc
jg
clc
or
imul
add
mov
mov
lods
js
xchg
and
add
cmpsb
clc
add
clc
mov
clc
arpl
add
add
xor
add
clc
cltd
lcall
mov
std
movsl
clc
jbe
inc
add
mov
xor
clc
out
ja
clc
push
add
add
add
clc
daa
clc
xchg
fs
rol
clc
sub
add
add
add
dec
fwait
jp
jb
add
add
add
add
fs
add
clc
je
adc
add
add
add
jne
sar
iret
lcall
add
adc
add
pop
clc
out
out
dec
xchg
ficompl
jnp
mov
je
or
clc
loop
or
fcompl
cmp
out
sbb
add
jg
add
push
clc
fwait
xor
add
ljmp
and
add
insl
sbb
add
or
push
pusha
add
mov
int3
inc
clc
fstpl
dec
dec
and
mov
clc
scas
or
add
sbb
jbe
mov
mov
adc
add
cmp
clc
mov
clc
aas
sbb
add
sti
xchg
insb
push
inc
add
fwait
stos
ret
clc
or
dec
xchg
jle
clc
addr16
jp
clc
inc
clc
jmp
inc
clc
or
clc
stc
xor
add
das
jmp
add
adc
add
add
adc
add
scas
jecxz
or
test
xor
add
arpl
add
clc
push
add
mov
loope
push
inc
clc
pop
stos
in
jecxz
cli
inc
add
out
xor
add
clc
and
add
pop
cld
add
add
dec
dec
mov
sub
xchg
inc
add
lret
mov
mov
cltd
test
clc
xchg
out
xor
add
clc
repz
add
iret
cmc
outsl
test
repz
out
clc
xchg
cwtl
push
add
outsb
out
leave
push
addr16
lock
clc
xor
add
ficoml
add
repnz
or
dec
pop
movsl
clc
mov
in
mov
add
inc
clc
movsl
clc
or
add
pop
sub
dec
mov
dec
xchg
mov
inc
clc
pop
jmp
clc
mov
and
add
and
add
cmp
clc
pop
mov
leave
popa
add
push
clc
push
add
xor
cmp
push
mov
fwait
xchg
cwtl
fdiv
or
add
add
clc
cmp
cmpsb
clc
aas
aam
js
add
jp
clc
mov
add
ja
xor
add
clc
imul
inc
clc
mov
pop
mov
add
mov
pop
jno
add
push
clc
loopne
insl
jecxz
jnp
pop
pushf
aad
add
lret
push
add
test
jmp
fstps
clc
inc
clc
dec
cmpsl
clc
jp
scas
and
add
add
stos
add
add
and
cmp
movsb
clc
es
fs
mov
nop
scas
fwait
fs
hlt
repnz
out
out
add
incl
and
add
popf
lock
insl
push
clc
addr16
xor
add
jne
ds
jg
lods
and
pushf
fdivl
clc
sbb
jecxz
notl
add
ficompl
jns
aad
adc
add
ja
aas
es
outsb
sbb
out
fcompl
data16
xchg
cld
stos
jmp
clc
insb
jmp
sti
adc
faddl
push
add
repnz
add
inc
clc
dec
inc
clc
aad
jg
out
sbb
fisubs
clc
jno
add
push
lea
pop
sbb
and
add
popa
add
and
add
adc
add
add
in
ret
clc
sub
clc
inc
clc
xor
add
test
call
and
add
add
pop
cwtl
das
cmpsl
clc
xchg
addr16
xchg
add
add
inc
add
push
or
dec
jge
jecxz
xchg
outsb
test
aas
cmp
clc
test
inc
clc
push
adc
loope
jne
xor
add
add
add
add
clc
adc
add
add
mov
cmp
pop
dec
bound
add
add
mov
push
add
jne
fisttps
clc
popf
inc
add
dec
testl
xchg
dec
jmp
adc
pusha
add
sbb
test
jmp
adc
add
add
jns
lods
test
clc
in
push
or
clc
pop
cmp
mov
add
add
add
add
sbb
xor
add
shlb
xor
add
add
dec
nop
lahf
sub
clc
adc
add
insb
clc
xor
or
xabort
iret
gs
ljmp
inc
add
add
add
jmp
inc
add
int3
mov
pop
push
add
lcall
add
push
push
jg
xor
add
cmp
pusha
add
push
clc
dec
es
cli
or
dec
int3
cmp
cmp
cmp
add
xchg
jg
es
push
mov
or
clc
push
inc
clc
rcrb
cmp
jb
add
push
repnz
dec
mov
add
fstpt
add
add
xlat
inc
clc
add
mov
add
frstor
add
sti
push
lods
fwait
pop
mov
mov
or
mov
pop
pusha
add
pop
test
bound
add
lret
xchg
out
movsb
clc
and
push
and
cwtl
lahf
mov
cmc
inc
clc
imul
xor
add
pushf
push
clc
xchg
arpl
add
push
mov
clc
sub
add
or
outsb
xlat
dec
inc
clc
scas
out
jno
add
clc
pop
push
add
adc
add
adc
add
jbe
movsl
clc
insb
cmp
add
cmc
cltd
adc
add
aas
adc
xor
add
clc
push
add
push
lock
ret
fiadds
add
mov
pop
inc
clc
mov
sbb
pop
clc
call
add
mov
clc
mov
cmpsl
clc
push
clc
imul
movsb
clc
pop
cli
cmp
add
popl
mov
clc
add
out
clc
pop
int3
fmul
jmp
clc
pop
or
clc
mov
inc
add
xabort
or
sub
dec
out
push
dec
jno
add
xchg
pop
int3
lods
push
add
mull
add
cmp
xor
add
add
and
push
add
add
add
xor
add
clc
data16
dec
mov
ljmp
inc
clc
aam
ja
ss
in
out
mov
add
or
add
scas
mov
clc
std
pop
insl
in
aam
call
movsb
clc
xchg
push
add
inc
clc
mov
add
add
out
push
aaa
sarl
dec
loop
or
fdivl
add
add
int3
dec
popf
add
add
mov
and
add
clc
mov
add
xchg
cmc
repz
dec
pop
test
xchg
mov
cmp
gs
and
add
inc
add
inc
add
into
test
sub
das
or
add
dec
enter
or
cmp
sbb
sbb
xabort
add
adc
mov
add
inc
clc
gs
test
notl
add
push
add
add
add
add
fistpl
xor
clc
clc
push
add
into
pushf
sbb
jb
add
push
add
rcr
mov
inc
add
cmp
clc
and
add
add
cmp
dec
sub
repnz
pop
and
add
clc
out
enter
test
pusha
add
pop
mov
add
add
popa
add
repnz
jae
add
psrlw
add
pop
in
add
mov
sbb
push
add
std
adc
add
out
and
add
in
add
xlat
stos
aas
sbb
clc
sub
add
mov
jnp
sti
mov
add
and
int3
test
clc
jae
add
sar
add
inc
clc
in
dec
mov
clc
jb
add
sub
push
ss
xor
add
clc
in
push
mov
clc
out
sbb
clc
sar
ss
or
mov
clc
mov
push
add
aam
clc
arpl
add
mov
clc
test
leave
insb
stc
aaa
mov
dec
lret
xchg
jg
add
add
add
push
push
add
jecxz
cmp
add
clc
imul
imulb
or
xor
popf
pop
mov
jge
sub
fnstcw
mov
pushf
loop
push
xchg
mov
clc
inc
add
out
push
cmp
push
add
rcrb
clc
pop
xor
add
aaa
std
xor
add
push
sub
cmpsl
clc
cmp
lret
and
add
mov
roll
clc
push
out
sbb
sub
sbb
es
adc
add
dec
mov
clc
lret
int3
ret
clc
icebp
repnz
add
jo
add
clc
ret
clc
add
add
dec
stos
or
add
adc
clc
push
inc
clc
mov
clc
xchg
cltd
int3
xor
add
cmc
rcr
cmp
sti
js
add
xor
add
clc
popa
add
mov
clc
out
or
jle
clc
std
pop
xbegin
add
add
mov
clc
loopne
movsb
clc
mov
clc
rcr
divb
add
iret
add
add
add
add
add
adc
add
cmp
clc
mov
clc
cli
sar
hlt
hlt
and
fs
or
pop
dec
gs
mov
add
pop
test
push
and
add
dec
in
fisttpl
test
inc
add
shlb
xor
adc
add
push
test
stos
sar
mov
stos
cmp
jb
add
xchg
or
clc
cwtl
sbb
mov
xlat
adc
add
add
faddp
clc
inc
add
pop
jns
clc
jo
add
xchg
sbb
mov
lock
inc
add
fnstcw
xchg
cmp
dec
jae
add
add
add
add
fs
ss
add
stos
cmp
clc
mov
sub
add
test
xor
sub
jmp
jo
add
add
add
add
lcall
jle
add
popf
pop
jno
add
out
loop
test
mov
push
add
jmp
clc
in
je
clc
dec
mov
mov
add
repnz
out
pop
xlat
adc
add
cmp
rclb
cmp
enter
cltd
push
add
or
jns
clc
inc
add
repz
jecxz
jecxz
fcmovbe
cmp
and
add
das
test
int3
rcr
cmp
and
add
out
jle
lret
pop
and
add
pop
clc
cwtl
inc
add
push
and
add
mull
add
loope
pop
xchg
xbegin
sbb
clc
mov
clc
mov
cmp
jecxz
inc
add
gs
out
lock
add
pop
ret
ds
add
insb
hlt
jae
add
clc
xchg
push
repz
fsubrs
clc
je
add
cmp
ja
add
dec
lods
outsl
lahf
out
inc
clc
push
add
jno
add
dec
mov
mov
add
add
gs
icebp
ret
clc
sahf
adc
add
sbb
pop
push
pop
pop
loop
sub
dec
imul
mov
clc
sbb
jno
add
push
mov
clc
mov
add
clc
test
hlt
lret
push
cmpsl
clc
mov
mov
xchg
lods
jl
clc
xabort
sub
mov
xchg
fs
fmull
rcrl
clc
movsl
clc
in
insl
jns
mov
add
mov
sbb
jo
add
add
mov
and
add
test
dec
sbb
push
fidivrl
sbb
mov
cmp
cmc
xor
add
clc
fldcw
cmp
push
add
pusha
add
add
add
mov
add
scas
push
call
clc
addr16
cld
inc
add
and
add
dec
mov
add
add
pop
ss
add
add
add
dec
xchg
or
lahf
bound
add
add
clc
pop
fisttps
fidivs
add
pop
adc
jne
clc
mov
clc
mov
add
arpl
add
lea
push
lods
sub
mov
jg
add
shr
repz
hlt
loope
mov
add
addr16
loope
scas
bound
add
or
mov
sbb
sar
stos
out
mov
add
add
cltd
clc
out
test
push
clc
adc
add
rcrb
mov
add
mov
test
test
addr16
push
add
daa
clc
lods
outsl
xchg
sub
pop
aas
xchg
cmp
clc
mov
and
add
stos
incb
add
and
lret
add
clc
fnstsw
aaa
sti
mov
mov
leave
cmc
mov
fistps
jno
add
clc
mov
clc
movsb
clc
dec
inc
clc
cmp
insl
cmpsb
clc
push
sahf
cmpsl
clc
inc
clc
scas
cmp
fs
addr16
sbb
fnstcw
cmpsb
clc
inc
add
jmp
jbe
negb
mov
jnp
leave
inc
clc
outsb
into
sar
clc
inc
clc
xor
add
cmp
scas
cmc
add
cmp
jmp
lret
es
xor
add
imul
push
clc
push
paddw
pop
or
lock
add
adc
add
in
in
xchg
incl
add
add
clc
jo
add
jbe
fidivrl
xchg
adc
mov
pop
and
add
clc
inc
clc
int
lock
add
adc
add
loop
fxch
jp
add
testb
add
add
dec
gs
pop
mov
clc
mov
nop
mov
clc
lret
idiv
cmpsb
clc
or
cmp
mov
adc
add
jp
outsl
pop
mov
lcall
xchg
test
pop
lea
sbb
clc
scas
cwtl
js
lret
sar
clc
cmp
clc
scas
fxam
clc
scas
rcl
fdivrp
out
aaa
fists
pop
clc
aas
in
xabort
clc
movsl
clc
stc
int3
aaa
rcll
mov
fistpll
add
clc
adc
add
or
add
cmp
clc
sbb
clc
scas
sar
push
dec
scas
push
jecxz
sub
jge
xor
add
mov
mov
mov
add
icebp
or
movsl
clc
cld
ljmp
add
add
sar
clc
xchg
mov
add
xor
add
sti
js
int3
sub
xchg
adc
add
clc
jge
push
add
add
add
popl
into
push
inc
add
scas
dec
call
jno
add
add
mov
clc
testb
clc
loop
add
add
in
cmp
je
inc
clc
xor
add
sbb
mov
repz
inc
add
push
add
out
mov
mov
clc
inc
add
mov
lods
insb
dec
or
shl
sbb
sub
clc
inc
clc
add
add
aaa
daa
clc
xor
add
add
pop
sbb
mov
and
clc
add
add
dec
aas
pop
cltd
insl
loop
fstpl
fstps
jb
add
mov
inc
clc
push
or
popf
std
sub
aam
and
add
add
adc
clc
outsl
pop
xchg
clc
xchg
inc
add
mov
clc
xor
add
or
add
add
push
mov
clc
mov
add
shlb
add
movsl
clc
pusha
add
bound
add
sub
xor
xbegin
push
pop
ret
dec
and
add
dec
fldt
mov
inc
clc
sub
clc
fdivp
bound
add
clc
gs
jbe
add
pop
mov
add
int3
sub
clc
loope
cwtl
sbb
clc
xchg
icebp
mov
add
dec
scas
stc
test
bound
add
add
add
loope
inc
clc
or
and
jecxz
fld
clc
aam
shll
sbb
clc
cld
imul
outsb
pop
mov
clc
es
dec
jmp
xor
add
add
inc
add
scas
jo
add
jno
add
ds
inc
clc
mov
in
pop
fcomps
cmp
cmp
clc
loope
sarb
clc
clc
or
insb
adc
add
add
add
add
dec
or
sarb
out
jnp
or
mov
mov
cmp
testl
ja
clc
jbe
imul
lahf
test
and
add
cmpsl
clc
es
jbe
clc
add
cmp
add
pop
sbb
sarb
cmp
clc
jecxz
enter
xchg
or
mov
add
add
dec
fwait
bound
add
pop
xchg
rcll
movhps
add
cwtl
mov
popa
add
inc
clc
xlat
mov
clc
dec
xchg
jle
mov
or
dec
or
mov
lods
nop
mov
rcll
adc
add
out
js
clc
pop
sub
clc
add
add
arpl
add
outsb
jno
add
add
xor
add
and
add
xchg
clc
ret
clc
or
pop
mov
out
pusha
add
cmpsl
clc
or
add
clc
cli
and
lret
dec
cmp
and
and
add
clc
xchg
or
add
add
ds
ds
cmp
mov
clc
jl
push
sahf
pusha
add
call
jb
add
dec
mov
add
ja
sub
add
jne
dec
jo
add
daa
clc
imul
scas
or
aad
lret
clc
test
fwait
ss
add
add
mov
push
add
add
leave
pusha
add
sub
test
mov
pop
je
add
out
push
xor
add
clc
mov
adc
add
jecxz
jg
stc
sub
test
addr16
xchg
sbb
ja
outsl
pop
outsl
sbb
movsl
clc
push
add
pop
cmp
in
push
in
fxam
clc
hlt
das
repnz
add
jae
add
and
add
dec
lret
or
add
add
mov
fldcw
data16
or
iret
lahf
xlat
xor
add
cmp
lock
add
or
add
add
or
clc
rcr
mov
jae
add
add
mov
dec
loop
jmp
add
cmp
push
add
addr16
push
add
mov
push
inc
clc
stos
mov
push
cmp
xlat
lods
sub
add
jp
int3
mov
add
add
iret
dec
adc
add
icebp
test
jns
hlt
push
add
jo
add
add
mov
sar
clc
inc
add
adc
add
or
aad
clc
in
add
add
clc
pop
jns
dec
xor
add
sub
push
cwtl
lea
jae
add
clc
fwait
cmp
mov
testb
add
lcall
pushf
das
fsubrl
mov
clc
stos
sub
add
mov
add
push
jmp
mov
outsl
pop
lods
repnz
shlb
sub
add
fimull
push
clc
xchg
cmpsb
clc
mov
mov
and
fstl
add
sub
mov
or
sbb
clc
loopne
repnz
add
dec
bound
add
clc
mov
clc
cli
inc
clc
sub
icebp
mov
clc
xor
add
xabort
push
mov
or
push
add
cmp
cmp
clc
insb
stos
push
push
add
sbb
bound
add
add
clc
cmp
shrb
add
ja
iret
addr16
jnp
and
add
mov
leave
sub
inc
clc
mov
bound
add
fstpl
shl
cmp
dec
rol
clc
mov
ret
jae
add
in
push
xchg
jae
add
add
mov
sub
ss
add
mov
sbb
add
frstor
loopne
mov
add
ss
sub
mov
add
clc
enter
popf
notb
clc
mov
and
add
and
add
jns
scas
xlat
pop
sarl
out
cmp
bound
add
mov
or
clc
add
add
pop
stos
fmuls
ss
test
add
imulb
loop
adc
add
fucomp
jo
add
clc
xchg
inc
clc
int
clc
imul
or
clc
repz
clc
mov
inc
add
add
add
jg
lock
add
pushf
add
add
xor
add
jae
add
add
mov
clc
pop
addr16
pushf
out
call
and
add
add
cwtl
add
add
hlt
idivb
pop
or
enter
or
mov
inc
clc
testl
pop
clc
dec
and
push
rorb
rcll
add
and
clc
mov
clc
mov
jo
add
sbb
add
push
add
cmpsl
clc
ret
mov
clc
mov
clc
stos
mov
mov
add
or
push
adc
add
testl
clc
and
clc
sti
xor
clc
loop
and
lret
adc
add
add
sbb
and
dec
je
xbegin
clc
inc
clc
jnp
and
es
fwait
mov
pop
jns
or
clc
dec
test
mov
icebp
and
inc
add
out
es
sub
dec
inc
clc
or
clc
fistpll
clc
icebp
mov
fcoms
add
or
dec
mov
ret
clc
data16
xchg
iret
inc
clc
mov
mov
clc
pop
xor
add
in
outsb
aam
aas
inc
clc
lcall
push
cmp
test
clc
jecxz
mov
inc
clc
insl
and
add
add
add
clc
push
lock
add
fstps
mov
ret
add
lea
sub
popa
add
pop
addr16
and
add
in
pop
loop
pop
in
xlat
in
inc
clc
jb
add
jl
add
in
notl
mov
lock
push
fwait
inc
add
sti
es
xchg
out
cwtl
or
data16
rcrl
mov
clc
push
mov
mov
add
mov
add
aas
cmp
clc
repnz
in
hlt
mov
mov
add
add
ljmp
add
add
inc
add
or
int3
or
inc
add
xor
add
loopne
lea
jmp
clc
or
lret
jno
add
aam
add
in
lcall
add
xabort
jno
add
cmp
data16
es
cmp
add
loopne
inc
add
pop
ds
std
or
clc
inc
clc
xor
add
jnp
pushf
out
mov
push
lret
mov
sub
sbb
cli
xor
add
add
fwait
lret
add
clc
int3
lret
test
aaa
in
das
lock
clc
sbb
iret
popf
xchg
mov
mov
dec
cmpsb
clc
decl
clc
push
add
lret
notl
add
cmp
add
scas
push
add
je
push
ss
jp
and
add
mov
pop
addr16
push
lcall
aas
cmp
add
jb
add
mov
in
mov
bound
add
add
add
add
mov
add
out
or
mov
add
sub
mov
xchg
gs
add
add
xor
add
clc
stos
and
add
mov
pusha
add
sahf
dec
popa
add
dec
data16
lahf
or
pop
cmp
sub
clc
dec
mov
cmp
jecxz
test
addr16
addr16
and
add
jno
add
fs
or
add
gs
fisttpll
cmp
das
rcrl
push
clc
bound
add
add
add
push
push
mov
test
jne
clc
xor
add
add
add
stos
fsts
add
idivb
clc
xchg
call
add
mov
stc
mov
jnp
outsl
xabort
add
dec
addr16
dec
mov
jg
cmp
jns
or
adc
clc
fisubrl
xor
int
sbb
mov
add
ret
data16
out
or
clc
mov
clc
scas
test
int3
adc
add
cmp
clc
int
clc
iret
ja
cltd
insb
rclb
add
clc
pop
test
movsb
clc
jb
add
or
clc
adc
in
jp
clc
cmpsl
clc
cmpsb
clc
test
pop
xchg
xchg
adc
add
add
pop
mov
add
cmpsl
clc
outsb
mov
push
add
lea
jg
fmul
lret
adc
add
add
stos
and
ss
clc
mov
repz
add
clc
jmp
or
clc
cmp
sub
add
repnz
add
clc
jns
mov
clc
push
std
and
add
mov
clc
sbb
add
adc
add
mov
clc
mov
mov
icebp
add
add
add
sub
loop
sar
pop
arpl
add
clc
mov
aas
sub
add
xlat
mov
lods
into
outsl
outsb
loope
dec
popf
cwtl
fisubrs
mov
clc
xchg
or
add
adc
add
mov
scas
aam
inc
clc
add
clc
add
add
in
inc
clc
jg
jge
add
adc
add
push
clc
insl
jns
add
repnz
jnp
loope
cwtl
es
repnz
lret
add
add
cmp
clc
cmp
clc
xchg
lods
xor
add
add
inc
clc
inc
clc
addr16
mov
out
into
push
add
xchg
pop
scas
add
jbe
dec
jnp
add
fwait
xchg
in
adc
add
clc
out
or
clc
xchg
lret
cmp
add
jl
test
fidivs
ret
clc
mov
fcomps
and
add
add
add
cmp
xchg
sbb
enter
shll
add
push
or
clc
imull
adc
add
clc
shrl
pop
lods
mov
jecxz
xor
add
mov
in
test
cmp
daa
clc
xor
or
add
addr16
dec
lret
cmc
clc
pop
mov
clc
outsl
adc
add
add
mov
add
add
movsl
clc
lods
xlat
mov
sub
clc
pop
in
mov
mov
cmp
fisubs
pop
sub
add
cmp
mov
sub
mov
cmp
mov
aam
clc
cmp
cmp
sub
mov
add
xor
add
clc
dec
mov
ret
clc
push
xor
xchg
cmp
fwait
pop
jge
sbb
mov
in
pop
mov
je
add
int
clc
xchg
mov
add
cmp
clc
in
js
loopne
pusha
add
mov
cs
gs
sbb
clc
aaa
scas
xor
add
stos
cmp
rcll
clc
clc
cs
inc
add
cld
dec
dec
sbb
add
outsl
rolb
clc
or
dec
test
clc
push
loop
mov
clc
into
push
lods
or
out
cltd
sub
push
clc
pop
jnp
add
inc
clc
or
cs
clc
push
add
inc
add
mov
add
and
add
add
add
add
js
clc
arpl
add
add
fwait
mov
clc
jbe
clc
fildl
add
add
add
clc
cmpsl
clc
mov
cmp
clc
jae
add
add
imul
add
clc
jle
and
jge
repz
add
loopne
jns
add
mov
sub
test
fcomi
jae
add
clc
push
cmc
cmp
or
clc
fs
cmp
mov
add
in
mov
sub
clc
jns
or
pop
outsl
pop
lret
ret
clc
xchg
bound
add
push
mov
and
add
add
xchg
push
add
xor
add
cmpsb
clc
mov
clc
mov
clc
dec
mov
in
push
test
jns
clc
inc
clc
sahf
dec
lea
and
add
adc
add
sbb
cmp
inc
add
inc
clc
aad
lcall
and
add
clc
stos
shrb
test
loope
ja
sbb
xor
push
and
push
clc
push
or
sub
shll
add
add
xchg
mov
clc
pop
out
int3
xchg
aaa
mov
jecxz
shl
dec
fs
lods
pushf
xor
add
push
add
icebp
nop
ret
push
and
add
add
add
ljmp
out
or
ret
clc
push
clc
insb
out
mov
bndldx
pop
std
and
clc
mov
push
add
push
jp
cmp
add
mov
jno
add
add
add
add
clc
mov
call
mov
lea
repz
xor
add
sub
sbb
inc
add
push
mov
or
clc
int3
outsb
xor
add
clc
ljmp
mov
mov
cld
scas
int
add
lahf
fldl2e
xchg
pop
clc
cmp
push
int
clc
cwtl
or
aas
fldt
cmp
add
pop
lods
ljmp
sar
sbb
and
std
mov
loope
cmpsb
clc
mov
add
aas
or
mov
add
clc
cmp
jae
add
inc
add
outsl
cmp
push
push
adc
add
sub
clc
push
clc
aad
clc
inc
add
cwtl
imul
mov
add
es
push
imul
add
mov
movsl
clc
xchg
pop
cmp
clc
popl
dec
outsb
data16
cwtl
inc
add
sahf
dec
push
stc
mov
sub
test
push
sub
lods
movsl
clc
insl
dec
xor
add
mov
add
push
enter
mov
and
add
or
clc
adc
add
jl
add
add
mov
iret
dec
repz
push
add
je
sbb
add
fnstenv
dec
jle
adc
add
clc
add
clc
push
dec
sbb
add
stc
mov
push
mov
adc
add
mov
pop
or
dec
and
loop
and
push
fstpl
gs
test
imul
add
sbb
dec
aam
cmp
mov
mov
pop
or
add
dec
push
add
adc
add
push
clc
sub
fldl
add
add
sar
add
sub
cmp
add
test
ret
clc
out
xor
clc
mov
clc
shrb
add
add
fwait
and
add
clc
int3
enter
xor
clc
stos
rcrl
loopne
adc
add
xor
add
cltd
jb
add
clc
cs
cmc
ljmp
sti
hlt
mov
loopne
inc
clc
jmp
movsl
clc
mov
popa
add
pop
adc
add
enter
add
mov
clc
js
mov
insl
cmc
sub
mov
add
daa
clc
fmull
and
add
add
push
bound
add
add
clc
shlb
add
xor
lahf
jae
add
add
jp
jmp
sahf
stos
repz
cmp
jb
add
sub
adc
punpckhbw
insb
adc
add
and
add
out
cmpsb
clc
loope
dec
into
hlt
sar
and
add
bnd
pushf
lret
add
jno
mov
inc
add
sbb
jns
clc
mov
add
pop
clc
sbb
add
nop
sub
add
push
clc
mov
dec
jp
stos
roll
pop
xchg
inc
add
mov
sbb
clc
dec
inc
clc
test
out
add
add
clc
test
push
add
stos
cmp
mov
mov
addr16
jo
add
mov
add
pop
push
mov
dec
mov
add
inc
clc
jo
add
clc
mov
jbe
add
cli
mov
adc
add
xor
add
clc
aam
and
outsb
cli
in
jle
cmp
imul
add
pop
xbegin
clc
and
add
xchg
cmp
inc
clc
aas
adc
cld
adc
add
or
jle
clc
add
add
mov
inc
clc
fs
adc
xchg
push
sar
cmpsl
clc
js
xchg
sub
cwtl
lea
cmp
out
mov
sar
imul
push
enter
aas
mov
mov
add
lods
out
lock
jns
movsb
clc
pop
mov
add
aad
aas
dec
scas
bound
add
arpl
add
dec
jmp
add
clc
gs
enter
clc
xchg
insb
cmp
add
add
add
and
pop
dec
inc
clc
pop
clc
or
inc
add
dec
in
cmp
movsl
clc
pop
gs
push
and
add
adc
add
sar
cwtl
shlb
lret
stos
sub
iret
pop
xor
nop
cmp
mov
add
add
add
mov
add
add
add
adc
add
add
xabort
xchg
clc
mov
lods
cld
int3
cmp
push
pop
or
insb
cmpsl
clc
repz
outsl
out
lret
mov
clc
dec
adc
mov
lods
sub
add
mov
insl
jge,pn
add
lock
loop
push
clc
cmp
add
jb
add
add
stos
iret
mov
clc
adc
add
jne
cmp
xor
add
cmp
add
imul
add
loop
js
dec
in
mov
add
xor
add
add
mov
xor
and
add
mov
in
xchg
in
mov
add
or
clc
pop
mov
add
out
fwait
xor
pop
xlat
xor
add
add
jle
xbegin
push
rorl
mov
adc
pop
xor
add
clc
cwtl
jbe
clc
push
pop
popf
sub
jmp
pop
loop
push
fsubr
fwait
push
sub
cld
add
add
clc
pushf
xor
pop
inc
clc
mov
add
ret
clc
stos
mov
jnp
add
out
xchg
imul
out
inc
add
scas
clc
lcall
add
jle
mov
xbegin
clc
int
xchg
in
stos
xabort
outsb
ds
ja
dec
cmp
cmc
sti
insb
cs
push
iret
mov
scas
fistps
mov
clc
mov
add
xor
add
clc
sbb
jae
add
mov
inc
clc
das
jb
add
add
clc
out
arpl
add
clc
daa
clc
mov
clc
pop
sub
adc
add
addr16
cmp
inc
add
sbb
lret
dec
sub
push
add
out
cmpsb
clc
inc
add
fcoml
add
clc
imul
ja
dec
out
sub
inc
add
sbb
add
add
enter
add
push
clc
fcoml
push
rcrb
fldt
cmp
ret
clc
in
jmp
ficompl
es
push
add
cmpsl
clc
sar
add
ja
inc
clc
dec
or
add
cmpsb
clc
xbegin
mov
icebp
sbb
clc
je
mov
add
sub
clc
pop
mov
clc
lret
mov
ss
imul
dec
mov
mov
push
js
jle
pop
jmp
mov
add
inc
clc
mov
aam
push
mov
filds
das
and
add
add
rcrb
fucomp
imul
aam
clc
jp
cmpsb
clc
xchg
xor
add
mov
add
clc
adc
add
clc
jo
add
add
add
pusha
add
push
xchg
pop
cmp
pop
cmp
clc
inc
clc
loopne
loop
mov
clc
pop
pop
xor
add
add
push
mov
clc
stos
lret
xor
add
imul
and
add
popa
add
ja
clc
xbegin
push
add
push
add
bound
add
pushf
stos
jp
add
or
add
cmp
out
xchg
add
or
jo
add
outsb
sar
add
js
arpl
add
jmp
add
xchg
cs
ja
or
clc
fldl
add
leave
fstp
cmp
add
inc
clc
and
mov
je
add
push
push
repz
add
add
mov
add
add
repnz
jb
add
aad
sub
cmp
pusha
add
mov
in
mov
lcall
pop
lods
mov
ret
clc
sub
add
movsb
clc
adc
add
pusha
add
xchg
dec
jmp
iret
cmp
or
clc
clc
data16
loopne
dec
sar
xor
add
int
js
hlt
jecxz
cltd
cltd
in
mov
cmp
clc
cmp
clc
dec
mov
or
call
sbb
clc
push
insl
push
popf
or
sbb
or
add
push
clc
push
xor
add
mov
xor
add
add
sti
jmp
sub
sub
inc
add
sbb
mov
add
sti
push
add
jp
xor
add
add
clc
mov
push
add
jno
add
add
mov
add
insl
lret
jo
add
add
xbegin
mov
add
cli
fnstenv
add
pop
imul
aaa
adc
add
lea
pop
test
cmpsb
clc
mov
out
xor
add
stos
add
add
pop
dec
test
push
imul
adc
add
clc
out
jb
add
add
mov
and
add
add
xabort
pop
push
dec
fsubrs
popa
add
aad
add
xchg
sub
add
mov
clc
gs
inc
add
sub
add
dec
jnp
dec
push
lahf
jmp
pop
jbe
cmp
sar
sbb
add
dec
cmpsl
clc
fmulp
scas
fs
jp
add
ss
pop
xor
add
into
cmp
popa
add
xchg
outsl
lcall
popl
jb
add
xabort
add
ret
clc
ret
sbb
ret
clc
int
test
inc
add
inc
add
cmp
add
mov
popf
mov
clc
fs
popf
mov
xlat
repnz
add
add
add
clc
insl
adc
add
xchg
sbb
clc
mov
add
daa
clc
imul
add
xchg
sbb
and
add
xor
clc
xor
add
mov
xchg
fwait
mov
and
imul
add
jo
add
clc
xabort
add
jno
add
clc
in
mov
add
xor
sti
mov
repz
lods
jbe
add
popf
pop
dec
and
dec
push
xchg
in
xor
add
add
lock
clc
jl
clc
nop
or
std
push
jae
add
add
add
scas
fisubl
popf
fnop
sar
pop
clc
out
pop
adc
and
add
clc
xbegin
iret
or
clc
jb
add
clc
enter
jl
or
enter
mov
clc
pop
clc
adc
leave
push
clc
jecxz
xchg
out
dec
xor
enter
xor
add
add
dec
aam
xchg
add
add
clc
sub
add
xor
add
add
outsl
js
clc
out
cmp
clc
mov
jg
clc
lcall
add
imul
cmpsb
clc
nop
mov
add
aam
mov
add
test
add
fldl
add
push
clc
sahf
sub
repz
push
scas
js
mov
imul
mov
xor
add
add
xor
add
add
dec
cmp
add
push
ffree
clc
lock
clc
sub
push
clc
cltd
pop
scas
or
add
imul
lock
add
cmp
fistps
dec
hlt
push
scas
or
ja
clc
out
sahf
cmp
popa
add
pop
mov
inc
add
mov
add
or
mov
add
xor
xchg
cld
sar
push
mov
divl
push
in
loop
mov
xchg
jg
clc
cmp
scas
jg
clc
dec
mov
idivl
int3
cld
mov
fdivl
add
daa
clc
cltd
inc
clc
aaa
xchg
push
cmp
dec
fldenv
bound
add
pushf
cli
out
pop
mov
bnd
add
pop
xchg
hlt
mov
lock
add
inc
clc
cmpsb
clc
push
std
xabort
add
push
je
lock
clc
fistl
push
cmp
daa
clc
sbb
test
clc
ljmp
stos
push
add
in
mov
cmpsb
clc
std
je
cmpsb
clc
ret
mov
clc
jl
shll
inc
clc
cltd
insb
push
add
adc
add
add
add
cmp
insl
std
fwait
es
add
clc
in
sub
imul
clc
jns
mov
clc
dec
push
xchg
outsl
aaa
push
add
lods
xchg
cmpsl
clc
adc
clc
add
add
add
movsl
clc
jg
mov
clc
xor
xor
add
jae
add
add
cmp
clc
push
cmp
add
rcrl
das
cld
ficompl
stc
sar
add
and
ljmp
bound
add
xor
add
xchg
jg
pop
pop
sbb
clc
dec
xor
add
clc
pusha
add
lahf
loope
movsb
clc
mov
in
cltd
pop
push
xor
add
mov
add
xchg
mov
lock
inc
clc
repz
add
leave
pop
in
js
clc
pop
or
xchg
inc
add
fadd
clc
inc
clc
pop
sbb
add
shrl
jle
mov
popa
add
pop
adc
add
add
push
add
mov
xor
add
mov
add
clc
inc
add
adc
mov
sbb
add
xor
add
or
sbb
push
sub
lock
add
stc
stc
push
or
js
nop
mov
jp
aas
cmp
gs
inc
clc
jecxz
lahf
pop
jo
add
ret
clc
pop
cmp
clc
mov
aam
clc
sbb
clc
pop
mov
cmp
mov
add
scas
lcall
add
add
push
add
jo
add
in
xor
adc
add
stos
jp
mov
jne
out
clc
jmp
mov
push
add
add
clc
push
fistpl
adc
jecxz
xchg
frstor
add
imul
clc
add
add
imul
clc
cmp
lea
jns
mov
out
rclb
popf
hlt
dec
xchg
adc
add
add
gs
rorb
mov
clc
stc
and
add
and
add
adc
cwtl
mov
inc
add
adc
add
add
clc
cmp
xchg
in
pop
jecxz
xor
clc
stos
stos
rcrb
outsb
pop
setne
pop
adc
add
call
iret
cmp
xabort
clc
jmp
xchg
fnstenv
add
lahf
jp
or
cli
mov
out
or
lret
jecxz
pop
add
add
sub
mov
clc
xor
add
add
in
add
jno
add
or
add
fsubr
insb
popa
add
add
clc
jno
add
clc
addr16
dec
jl
push
add
inc
clc
lock
adc
jne
sbb
mov
cmp
cmp
add
dec
cmp
jg
add
push
add
fdivrl
inc
add
imul
inc
add
int
in
in
or
xchg
inc
add
nop
adc
add
cmp
es
fstpt
add
jb
add
and
add
jns
xchg
pop
out
mov
mov
clc
rclb
xor
clc
inc
add
adc
add
xchg
pop
clc
inc
clc
or
fwait
sub
add
add
pop
dec
clc
scas
dec
push
clc
insl
rclb
add
frstor
add
clc
push
adc
mov
cmp
mov
in
out
mov
xchg
es
jb
add
nopl
add
add
cld
jg
sbb
frstor
stc
cmp
in
aam
loopne
in
movsb
clc
in
inc
add
push
pop
sbb
or
dec
aas
imul
add
in
je
cmp
jbe
addr16
sahf
cmp
clc
sub
cmp
pop
pop
clc
fucom
clc
cmp
add
adc
add
add
int3
jo
add
mov
dec
movsl
clc
sub
cmp
add
xchg
aam
out
fs
das
inc
add
lcall
mov
clc
movsl
clc
push
scas
inc
add
out
clc
ja
mov
xor
add
add
adc
add
scas
dec
out
push
fucomp
mov
imul
add
clc
in
loop
and
xabort
clc
cmp
add
or
add
add
clc
dec
mov
add
mov
xchg
mov
add
mov
fimull
clc
or
add
rclb
add
add
inc
clc
ja
mov
imul
sub
add
xbegin
dec
xor
add
hlt
ret
in
fsubs
nop
icebp
aam
fldenv
add
add
add
ljmp
clc
aad
inc
clc
test
fwait
bound
add
ljmp
add
push
add
mov
imul
xchg
bound
add
clc
inc
clc
cmp
jge
icebp
mov
add
add
cmp
add
pop
sbb
int3
repnz
xchg
jo
add
stc
mov
imul
in
push
outsl
mov
xor
add
lret
push
clc
sub
xchg
mov
aas
dec
push
clc
fwait
mov
or
dec
push
add
push
cmp
push
dec
out
jp
lods
pop
cmpsl
clc
push
add
out
clc
adc
add
clc
jl
xor
add
jbe
mov
add
clc
ficoml
ss
sbb
or
jge
jg
fstp
mov
inc
add
mov
push
add
jecxz
cmpsl
clc
xor
add
add
and
mov
sub
mov
add
jo
add
clc
mov
xlat
in
ret
clc
xor
clc
or
add
push
mov
cmp
add
sub
aad
test
clc
leave
ret
jecxz
pusha
add
sub
mov
leave
pop
repnz
jo
add
sub
cs
or
add
leave
pop
clc
loope
mov
adc
add
add
aad
cmp
aas
push
clc
mov
test
clc
test
mov
out
push
pop
clc
dec
cmp
adc
mov
push
add
in
sarl
or
rcrl
frstor
data16
pop
cld
lods
inc
clc
pop
lock
clc
outsb
pushf
fdivrp
add
add
add
add
add
and
add
dec
cmp
push
mov
clc
dec
pop
xor
add
gs
repz
gs
lea
add
and
add
add
jge
xchg
dec
sub
scas
push
in
gs
popa
add
fcmovbe
sub
clc
inc
add
fnstsw
clc
pop
aas
pop
xabort
add
cmp
hlt
mov
mov
jge
clc
lret
xlat
xor
add
clc
xlat
jg
clc
add
add
clc
mov
clc
inc
clc
jl
js
clc
xor
add
add
fs
xchg
pop
push
mov
cmp
add
add
leave
sbb
clc
xlat
inc
add
cmpsb
clc
pusha
add
adc
add
add
inc
add
gs
jg
loop
mov
xchg
push
stos
pop
call
clc
mov
dec
in
lahf
mov
inc
add
xchg
pushf
sub
sahf
dec
sub
aas
loope
test
cmp
clc
mov
adc
sbb
pusha
add
out
sub
clc
pop
clc
inc
clc
xor
add
lret
rcr
cmp
mov
add
leave
dec
movsl
clc
push
add
xchg
push
mov
sub
mov
xor
mov
pusha
add
fwait
repz
sbb
insl
mov
dec
inc
clc
pop
rcrb
cmp
and
add
scas
mov
jbe
xchg
inc
clc
pop
cli
inc
add
push
add
test
enter
and
cmp
add
popa
add
dec
cmp
notl
add
jg
roll
add
es
jns
clc
or
and
add
faddl
add
clc
std
xchg
faddl
add
xchg
enter
daa
clc
sub
sbb
outsl
mov
push
sbb
mov
clc
xchg
divl
clc
mov
mov
clc
xbegin
clc
imul
test
jae
add
clc
aas
aas
ret
ret
clc
in
ret
dec
mov
clc
inc
clc
dec
rcll
add
popf
pop
clc
movsl
clc
or
clc
pop
clc
dec
cmc
xlat
sub
dec
jg
add
xlat
cmpsl
clc
loopne
aam
jo
add
jne
sbb
pushf
notb
sar
clc
enter
and
add
clc
bound
add
aas
xchg
jno
add
imul
clc
mov
push
add
cwtl
cli
and
add
add
add
push
add
mov
clc
stos
clc
dec
cld
mov
shr
jg
mov
call
jo
add
add
cmc
mov
addr16
adc
add
clc
inc
clc
sbb
add
aas
clc
ss
clc
dec
ret
clc
hlt
xor
add
and
add
add
arpl
add
add
test
inc
add
adc
add
mov
cmp
clc
jae
add
clc
adc
inc
clc
xor
add
and
add
add
mov
clc
xchg
pop
cwtl
xchg
cmp
pop
jno
add
clc
int
add
xor
movsl
clc
out
sahf
pop
mov
cmp
xchg
ds
and
add
cmp
adc
add
clc
lret
clc
cmp
xchg
add
add
clc
fisttpll
loop,pn
jmp
clc
lahf
jecxz
jb
add
mov
and
add
inc
add
mov
clc
into
fstpl
ret
clc
vrsqrtps
add
adc
dec
sbb
add
add
sub
cld
push
add
fistpll
repz
cmp
jmp
pushf
leave
stos
clc
inc
clc
mov
clc
xbegin
gs
aaa
aad
push
in
sub
add
push
dec
sbb
clc
sub
clc
jge
clc
xor
add
stos
stos
ret
clc
clc
push
jns
xchg
sbb
in
aas
jle
add
js
cmp
sub
lods
xor
add
lea
clc
cmp
outsb
icebp
xchg
sub
add
sub
push
push
clc
out
popf
ds
lret
mov
popf
out
jne
outsl
or
pop
fisubl
clc
xor
add
stc
ret
clc
xor
pusha
add
inc
add
cltd
push
clc
ja
movsb
clc
mov
jbe
aam
cmp
inc
add
xbegin
add
mov
out
pop
out
mov
add
push
xor
add
jecxz
cmc
or
add
mov
add
cmp
add
call
clc
aaa
mov
sbb
clc
lods
outsl
aaa
cwtl
mov
xor
add
clc
imul
push
clc
pop
outsb
mov
cmp
movsl
clc
in
cltd
gs
clc
std
add
add
mov
xor
add
add
shl
clc
test
add
mov
inc
add
rorl
push
jg
sahf
movsb
clc
add
push
add
and
add
sub
clc
inc
add
ret
clc
mov
and
dec
add
add
arpl
add
add
mov
add
add
sti
or
jno
add
clc
mov
fs
push
clc
ret
clc
add
lcall
xabort
popf
movsl
clc
lcall
pop
pop
pop
mov
xchg
lods
pop
push
mov
je
add
mov
adc
jg
clc
test
pop
mov
add
clc
clc
lahf
test
nop
xor
add
pusha
add
pop
dec
addr16
jno
add
clc
mov
adc
clc
adc
loop
loopne
movsb
clc
cmp
hlt
inc
add
push
clc
jae
add
sbb
cwtl
cmpsl
clc
pop
clc
mov
add
xor
add
add
cmp
sbb
jmp
add
add
add
es
sbb
add
rorl
sub
add
clc
dec
dec
sbb
add
xbegin
add
push
in
pusha
add
pop
dec
and
add
cli
out
and
add
clc
jae
add
add
dec
sahf
mov
dec
xor
add
sti
addr16
jae
add
add
pop
mov
clc
testb
jle
clc
sar
insl
mov
push
pop
dec
sub
mov
jle
outsb
das
pusha
add
sbb
clc
fnstcw
add
sub
clc
and
add
xor
add
mov
clc
scas
jb
add
xchg
sbb
xchg
popf
into
push
clc
xor
imul
inc
add
lea
add
xor
sahf
sub
clc
mov
xor
add
loope
xabort
cmc
push
sbb
add
clc
push
je
or
clc
in
iret
and
add
clc
sub
ret
clc
push
clc
loope
xchg
in
pop
mov
sbb
pop
std
aas
nop
not
pop
mov
xchg
rorb
clc
fstps
int
jmp
sbb
mov
mov
clc
mov
clc
js
clc
dec
xchg
loop
dec
ret
add
or
add
or
jno
add
add
add
inc
add
stc
dec
push
add
loop
mov
pop
aam
fisubrs
addr16
cmp
add
ret
clc
dec
jecxz
or
mov
add
out
pushf
sar
movsb
clc
test
xchg
mov
ret
clc
inc
add
sub
clc
inc
add
cmp
add
jae
add
add
sub
clc
sar
mov
add
xor
add
test
add
add
clc
sub
out
or
and
adc
add
add
clc
fmull
cmpsb
clc
in
mov
push
cmp
lods
into
repnz
pushf
cmp
add
add
clc
sbb
or
sarb
add
push
add
or
arpl
add
xchg
in
mov
or
lret
xor
add
pop
jecxz
das
xchg
inc
add
adc
add
ss
hlt
pop
cmp
add
idiv
cltd
insb
sti
sbb
add
add
and
add
add
clc
jle
xchg
cmpsl
clc
aam
push
add
add
add
idivl
fldl
clc
leave
mov
add
adc
clc
adc
cmc
adc
add
fiadds
je
imul
add
dec
sar
inc
add
jne
add
jmp
dec
or
lea
cmpsl
clc
sub
pop
clc
jb
add
in
in
test
cltd
xchg
lock
lret
add
inc
add
xor
add
add
add
add
add
lret
sti
nop
push
jmp
add
sub
jae
add
add
inc
add
xor
add
lret
repz
clc
mov
sbb
movsl
clc
and
sbb
mov
add
xchg
insb
scas
fnsave
add
add
xor
clc
mov
dec
ljmp
testb
add
push
push
clc
out
sub
dec
mov
jae
add
es
mov
push
push
add
xbegin
add
cwtl
addr16
inc
clc
mov
mov
clc
pop
and
add
xlat
or
cmp
add
pop
inc
clc
push
add
push
loope
scas
in
je
std
lock
xor
leave
hlt
hlt
pop
adc
add
mov
cmp
mov
add
call
sbb
vshufps
xor
add
add
xor
add
popa
add
inc
add
ja
or
add
out
ljmp
add
std
ret
in
mov
mov
add
add
add
add
add
add
test
mov
es
stc
sbb
pop
cmp
add
mov
add
repz
adc
gs
xchg
and
add
jge
add
sub
int
jecxz
jo
add
adc
loope
add
add
out
xor
add
inc
add
outsl
fs
pop
popa
add
popf
mov
add
mov
xchg
std
mov
cmp
fcoml
nop
pop
dec
mov
arpl
add
cltd
lahf
push
jnp
and
add
mov
clc
and
xchg
aas
xchg
outsb
mov
clc
mov
clc
xchg
and
add
add
jecxz,pn
sti
test
cmp
clts
clc
adc
add
mov
add
cmp
inc
clc
test
cmp
pop
clc
jge
nop
mov
mov
add
add
push
or
mov
dec
and
daa
clc
test
add
xchg
sbb
dec
leave
pop
adc
add
clc
shrl
cmp
lret
sar
pop
clc
jae
add
add
push
cli
and
fiaddl
inc
clc
sub
add
add
add
clc
movsl
clc
pop
popf
sub
clc
out
stos
inc
clc
roll
add
push
xabort
clc
and
add
test
add
dec
cmp
add
clc
adc
add
test
add
add
clc
mov
xchg
es
dec
jle
jp
clc
into
inc
add
lods
inc
clc
xor
add
add
hlt
ret
stos
pop
fwait
stos
loope
push
in
jle
pop
hlt
push
pusha
add
enter
add
dec
jle
mov
clc
xchg
jnp
or
das
fstpl
mov
adc
mov
jno
add
adc
add
add
jge
clc
cmp
ja
clc
imul
push
mov
mov
and
loope
pop
mov
div
cmp
dec
pop
fildl
add
jge
clc
insl
aad
clc
dec
sbb
clc
dec
sbb
xchg
stos
movsb
clc
decb
push
je
fxch
xor
add
fs
mov
inc
add
sub
add
cmp
lcall
add
xor
aas
aam
push
dec
cmp
jl
aaa
jb
add
ss
adc
dec
ss
bound
add
test
fadds
add
jae
add
jae
add
clc
mov
add
daa
clc
mov
clc
js
idiv
or
add
inc
add
jae,pn
add
add
stos
cltd
fisttpll
xchg
sar
add
sub
clc
sbb
stos
repz
xor
add
add
add
in
mov
data16
cmp
jg
clc
xchg
inc
add
xchg
cmp
xbegin
add
shl
clc
jns
add
das
xor
add
call
jne
clc
pop
out
lock
add
sub
clc
gs
fisubs
clc
shlb
add
test
out
hlt
call
add
cmp
clc
cmp
xor
dec
sbb
clc
inc
add
or
test
and
iret
xchg
jl
add
outsb
push
clc
nop
lret
push
add
or
dec
nop
leave
dec
sbb
inc
clc
cmpsl
clc
arpl
add
add
ja
clc
push
insl
xchg
clc
or
add
push
add
adc
add
add
or
xchg
inc
add
repnz
add
sbb
insb
arpl
add
fldcw
inc
clc
push
push
add
movsl
clc
pushf
out
push
add
jle
cwtl
sub
add
pop
shlb
add
sub
clc
lods
neg
pop
int
and
add
add
add
add
outsb
call
inc
add
jmp
push
add
imull
cmp
jo
add
clc
mov
add
mov
mov
sbb
add
sub
add
stc
inc
add
mov
add
stos
dec
filds
mov
into
xchg
inc
clc
pop
bound
add
jg
dec
mov
sahf
sahf
mov
sahf
data16
or
popa
add
clc
push
add
pop
add
add
mov
pop
cmp
mov
add
bnd
testb
push
clc
and
add
loopne
sbb
jg
and
add
mov
add
jp
arpl
add
clc
sbb
clc
cmp
pop
pop
pop
dec
push
add
and
clc
lcall
into
lret
xchg
leave
mov
jae
add
mov
pusha
add
popf
iret
sbb
add
mov
fbstp
sti
or
outsb
cmp
add
add
cmp
cmpsl
clc
and
add
jne
popf
push
pop
clc
in
adc
add
add
add
add
clc
cld
mov
xor
add
outsl
insl
lock
mov
add
clc
pop
dec
addr16
or
mov
pop
mov
add
add
mov
mov
jecxz
insl
xlat
cmp
clc
adc
add
xchg
cmp
or
sti
data16
adc
add
or
enter
clc
inc
add
inc
clc
cwtl
dec
bound
add
clc
sbb
lods
add
add
mov
clc
scas
mov
jecxz
fcompl
push
add
add
mov
hlt
add
add
divl
add
in
xor
fwait
nop
xor
add
jg
mov
add
ljmp
mov
add
xor
add
rcrb
mov
jp
sar
or
clc
and
add
and
add
xor
add
dec
mov
add
ja
add
jo
add
add
add
add
cs
xchg
int
loop
cmp
add
cs
mov
add
cmp
add
ljmp
clc
add
add
or
mov
cltd
lret
inc
clc
sbb
mov
pop
test
aad
add
xabort
clc
lock
clc
mov
xchg
aaa
pop
loope
inc
clc
jmp
cmp
adc
add
ss
jmp
mov
add
into
cmp
lea
lea
inc
add
mov
outsb
sub
clc
inc
clc
sub
mov
clc
js
xchg
sahf
shlb
mov
clc
call
push
int
add
mov
mov
xchg
fld
clc
pop
clc
cmpsb
clc
xlat
cmp
and
fsubs
inc
clc
xor
add
clc
lods
arpl
add
add
movsb
clc
add
outsb
dec
fdivr
mov
mov
xchg
add
add
clc
aad
add
jnp
add
cmc
lret
push
add
add
jo
add
xor
add
add
adc
mov
clc
sub
jbe
clc
das
ljmp
clc
popa
add
js
push
pop
lea
cltd
insb
mov
clc
and
add
jmp
fs
push
lcall
add
xchg
call
add
and
pop
mov
clc
mov
mov
clc
fildll
lock
add
insl
out
out
push
lahf
fidivrl
push
dec
mov
xchg
enter
mov
jp
daa
clc
je
repz
fidivl
add
clc
sbb
nop
and
add
clc
imul
add
pop
mov
add
push
inc
add
das
in
xchg
push
inc
add
jo
add
xchg
push
add
stc
and
add
add
jbe
inc
clc
mov
mov
scas
dec
daa
clc
mov
mov
test
add
ljmp
mov
sub
clc
cmpsl
clc
js
mov
out
dec
pop
cs
fnstsw
add
sub
mov
insl
pop
jbe
add
jl
int
repz
loop
fisubrs
insb
adc
add
jl
popa
add
xor
add
add
mov
clc
mov
add
mov
clc
data16
jns,pn
mov
push
add
sbb
sub
adc
add
clc
or
add
clc
cmp
add
mov
jge
mov
stos
adc
add
push
mov
add
cli
out
xchg
imul
pop
fnstcw
push
test
jb
add
mov
repz
outsb
shrl
inc
clc
scas
js
add
out
mov
cmp
out
or
push
clc
mov
add
aaa
dec
add
add
add
push
pmaxub
xlat
push
lock
int3
lahf
add
add
add
dec
sub
xor
add
add
enter
xchg
lock
mov
inc
add
mov
imul
imul
or
pusha
add
sar
adc
add
clc
and
adc
add
ret
add
sub
add
or
add
pop
cmpsl
clc
in
mov
leave
or
test
ret
clc
pop
dec
ss
clc
cmove
inc
clc
repz
cli
push
sar
jo
add
adc
add
add
clc
je
add
dec
fists
mov
add
sbb
clc
cmp
clc
pusha
add
aam
jns
je
clc
sarb
repnz
clc
mov
lcall
add
or
clc
xor
add
clc
jge
clc
xchg
xchg
aad
clc
jno
add
and
mov
outsl
xchg
repnz
add
mov
pushf
cltd
xchg
cmc
pop
mov
lcall
xor
clc
das
jge
outsb
mov
js
dec
cmp
add
insl
fnstsw
clc
dec
pop
cld
sub
clc
push
add
push
add
in
cld
daa
clc
dec
gs
ja
outsb
dec
cmp
sbb
or
data16
pusha
add
out
in
push
add
xchg
mov
clc
dec
into
or
aaa
jnp
push
add
incl
clc
mov
add
mov
or
mov
jp
xbegin
add
add
rcll
clc
add
clc
inc
clc
aas
sub
add
sub
loope
imul
or
clc
dec
fsubs
push
add
and
add
lods
dec
jne
cmp
clc
jecxz
xor
add
clc
lret
xor
add
add
add
stos
xor
add
in
cmp
lret
adc
cmp
in
cmp
clc
sub
mov
add
bound
add
add
sbb
mov
stos
cmc
sub
mov
mov
mov
inc
clc
mov
add
add
push
inc
clc
cmp
clc
dec
es
ja
cmc
sub
mov
add
push
add
ret
clc
push
clc
std
push
add
ds
jge
add
xchg
mov
inc
clc
and
inc
add
aam
enter
sub
push
clc
mov
add
sub
sbb
daa
clc
lea
popa
add
movsb
clc
cmc
push
ds
sub
pop
dec
cmp
add
push
add
mov
xabort
mov
dec
jle
mov
add
add
test
mov
clc
xlat
mov
lock
push
jae
add
insb
cmpsl
clc
jne
loop
cmp
inc
add
add
add
add
mov
xchg
mov
jno
cmp
ret
clc
mov
dec
enter
filds
add
mov
mov
xor
add
add
out
inc
add
jo
add
add
push
sub
mov
stos
cmc
into
sub
clc
cwtl
stc
lahf
imul
add
pavgb
bound
add
pop
add
add
add
fisubl
arpl
add
sbb
jno
add
mov
repz
mov
jbe
clc
cmpsl
clc
mov
sub
cmc
xor
add
fstl
or
outsl
mov
jne
ss
enter
ret
clc
mov
add
es
jnp
jnp
sub
popa
add
pushf
icebp
stos
gs
out
clc
jl
icebp
shll
daa
clc
cmp
sub
add
rcrl
jae
add
add
inc
clc
cmpsl
clc
ja
mov
data16
sahf
aas
jnp
jae
add
ficoms
add
enter
clc
push
add
sahf
cld
aam
push
add
and
ljmp
int
add
sti
test
and
add
or
mov
int3
vphaddbd
ficoml
add
dec
xchg
icebp
out
xchg
cs
cmp
add
lahf
ret
add
adc
xor
add
jge
jae
add
sbb
dec
scas
outsl
negb
movsl
clc
pop
xlat
bound
add
add
pop
mov
add
jg,pn
mov
xor
add
scas
inc
clc
sbb
add
pop
sub
or
rcl
cmp
int3
cmp
add
sbb
add
xlat
ljmp
xchg
aaa
and
add
add
outsl
mov
es
pusha
add
addr16
cli
add
add
mov
loop
cmpsb
clc
xor
add
and
add
jp
xor
add
and
clc
fwait
mov
mov
das
and
add
pop
js
add
mov
cmp
clc
aas
outsb
dec
jb
add
add
stos
add
jmp
clc
gs
nop
mov
pop
or
clc
jl
cmp
add
pop
or
clc
lea
sub
sahf
lods
fst
in
aad
sbb
xbegin
sub
clc
add
sar
outsb
sub
ror
test
cmp
or
inc
clc
push
clc
ret
outsl
stos
mov
sbb
test
add
jmp
clc
cmp
popa
add
and
icebp
pop
inc
add
inc
add
cmp
clc
or
push
lcall
xchg
or
lods
test
mov
in
pop
mov
fnstsw
and
add
clc
push
clc
mov
in
adc
add
fwait
lods
and
mov
jp
aas
pop
jg
clc
ret
mov
xchg
lods
mov
out
fsubrl
mov
cwtl
push
mov
clc
mov
add
loop
stos
pop
jae
add
clc
sti
xor
add
xor
add
clc
stos
repz
xchg
jmp
push
mov
add
gs
sar
clc
data16
sbb
clc
imul
or
xbegin
add
pop
cmc
clc
push
add
mov
add
pushf
or
lock
clc
mov
dec
lcall
mov
sub
clc
and
add
add
leave
idiv
add
add
jnp
aad
add
aam
clc
inc
add
and
add
inc
clc
add
xor
clc
cmpsl
clc
xchg
cmpsl
clc
popf
setne
clc
sbb
jmp
notl
add
dec
aaa
jmp
add
mov
xor
add
inc
add
addr16
xchg
ret
fnstcw
sahf
in
dec
xbegin
inc
add
cmp
add
mov
clc
outsb
mov
add
cmp
inc
add
add
add
loope
jo
add
clc
and
add
cmp
popa
add
rorb
clc
mov
out
stos
jg
loope
inc
add
add
jecxz
pop
xor
add
clc
jmp
clc
das
cmp
std
sub
or
clc
movsl
clc
add
add
dec
pop
das
cwtl
sub
dec
dec
jp
mov
das
pushf
daa
clc
or
dec
or
cmc
jb
add
clc
mov
or
enter
add
clc
bound
add
add
mov
arpl
add
add
daa
clc
push
add
int
cmp
cltd
cmc
mov
clc
jmp
clc
data16
push
add
popa
add
xor
add
clc
dec
repnz
dec
xor
add
sub
xor
add
clc
aas
addr16
gs
hlt
and
push
add
or
mov
mov
clc
xchg
movsl
clc
or
add
fsubrs
dec
xbegin
bound
add
jbe
clc
clc
jmp
lret
fiadds
in
push
insb
mov
and
add
add
pop
pop
clc
rclb
add
sub
sbb
xor
add
dec
stos
sub
clc
cmp
clc
into
sbb
jbe
push
inc
clc
xor
add
in
adc
clc
mov
add
mov
sbb
add
sbb
xchg
clc
shl
xor
add
cmpsb
clc
rcrl
add
ja
xchg
cmp
ljmp
clc
cmpsl
clc
sarb
or
sbb
scas
sub
movsl
clc
cmpsb
clc
adc
add
push
mov
clc
gs
sahf
push
sub
jecxz
mov
sub
jns
xchg
cltd
cmp
jbe
out
dec
js
jb
add
clc
inc
add
mov
cmp
add
sbb
add
mov
shrb
loop
fldenv
cmp
mov
add
xchg
in
xbegin
clc
sbb
add
pop
clc
repnz
stos
mov
scas
jnp
fidivl
add
and
add
addr16
mov
dec
jge
repnz
das
jnp
mov
add
add
fildll
add
into
push
add
xchg
add
add
clc
das
leave
out
gs
cwtl
mov
inc
clc
dec
ror
adc
add
add
sub
add
push
inc
add
pop
clc
or
dec
mov
cwtl
jecxz
or
enter
add
sbb
stos
jbe
clc
out
je
iret
iret
testb
jns
sub
add
jl
leave
mov
xor
cmc
dec
inc
add
shl
data16
outsl
mov
shll
mov
add
sti
sbb
add
daa
clc
adc
ror
and
add
cmpsb
clc
imul
mov
jno
add
clc
addr16
jne
shlb
add
stos
lea
js
clc
xabort
ss
add
jle
dec
or
popa
add
push
xchg
decb
ljmp
clc
test
ret
or
cmp
clc
mov
int
lahf
fwait
mov
mov
jg
data16
lahf
jno
add
add
mov
clc
inc
add
sar
lea
add
xchg
cltd
mov
or
add
bound
add
aaa
xor
add
sub
bound
add
add
sar
jg
add
push
or
add
jo
add
push
add
mov
test
fs
inc
clc
dec
testl
repnz
inc
clc
sar
add
add
add
jl
add
or
data16
jp
dec
inc
add
sbb
mov
es
add
add
addr16
jg
es
cmp
jo
add
lahf
or
clc
data16
xbegin
add
iret
xor
call
arpl
add
and
add
jb
add
clc
mov
rorl
push
xlat
lcall
inc
clc
pop
jae
add
add
push
popa
add
shr
ret
clc
idivb
adc
sar
adc
jne
inc
add
push
mov
sub
dec
movsl
clc
scas
sub
clc
and
add
mov
pop
gs
lahf
fisubrs
add
xor
xor
add
in
addr16
sbb
repz
add
out
dec
addr16
mov
mov
clc
test
test
add
push
cmp
dec
int
stos
xchg
adc
add
dec
inc
clc
dec
dec
push
add
mov
cmp
into
push
nop
pop
xor
add
aam
leave
or
add
inc
add
xor
add
fcmovb
clc
pop
xchg
jl
pop
jl
cmp
push
mov
inc
add
jno
add
mov
leave
mov
jbe
and
std
jne
add
mov
pop
incb
inc
clc
adc
add
sub
loope
xchg
fistpll
add
je
test
sub
push
add
insl
movsl
clc
mov
xchg
pop
sar
clc
sti
loop
lret
insl
inc
clc
fisttpl
outsb
and
add
icebp
cmp
dec
cmp
dec
xchg
sarl
push
add
es
lea
clc
pop
je
adc
add
clc
ljmp
outsl
dec
sub
and
push
mull
cld
int
jmp
add
mov
or
cli
xabort
clc
dec
xor
clc
inc
add
jns
add
add
add
and
add
mov
rorb
inc
add
pop
or
es
aad
addr16
mov
rcrb
mov
clc
sub
mov
cltd
jecxz
ja
clc
dec
and
loopne
xchg
jmp
rcrl
jmp
add
icebp
push
lret
adc
add
clc
xchg
sub
int3
pop
or
xlat
stos
lret
add
aad
pushl
add
add
push
enter
adc
add
das
popa
add
jae
add
jp
clc
out
mov
aas
fmuls
sbb
cmp
dec
cli
jo
add
xchg
clc
cmc
ret
ss
pusha
add
pusha
add
sub
ds
nop
test
sahf
cmp
inc
add
push
inc
clc
mov
mov
clc
lock
add
scas
push
and
add
sub
push
mov
ljmp
add
movsl
clc
cmova
leave
scas
inc
clc
cmp
mov
cmp
add
inc
add
mov
xor
xor
out
cmp
clc
mov
inc
add
xbegin
cwtl
jns
fcmovne
add
add
xor
add
mov
push
mov
dec
xor
add
icebp
out
in
cwtl
mov
add
jno
add
add
add
add
jb
add
push
push
or
inc
add
cwtl
dec
sti
xchg
cmp
dec
xbegin
ret
clc
mov
cltd
xchg
dec
sar
mov
xor
add
dec
cmp
add
aad
data16
cmp
inc
clc
stc
sbb
dec
pop
or
mov
clc
cmp
xchg
pop
clc
inc
add
cmp
cmp
js
clc
dec
xchg
xor
lcall
add
add
test
push
add
or
ror
rol
clc
fwait
cwtl
xor
add
add
insl
adc
add
add
in
mov
test
adc
xchg
cwtl
or
jp
dec
xabort
clc
add
lods
rol
clc
cmp
sahf
adc
add
add
ljmp
outsl
adc
add
add
add
clc
shll
add
mov
xabort
xchg
out
sub
clc
outsl
addr16
test
xabort
clc
jno
add
clc
das
cs
add
inc
add
or
inc
add
out
stc
cmp
add
ud1
add
xchg
and
add
inc
clc
jns
mov
int
mov
add
xor
add
or
xchg
mov
movsb
clc
out
test
mov
scas
jae
add
and
add
add
jge
mov
repz
add
clc
push
xor
add
xchg
cmp
mov
out
inc
add
vminps
cmp
ljmp
add
scas
aaa
xchg
cli
repnz
clc
movsl
clc
push
jbe
daa
clc
sbb
xor
add
movsb
clc
mov
add
add
outsl
mov
xor
add
clc
hlt
pop
lret
xabort
std
cmp
clc
jb
add
clc
mov
fs
data16
jbe
clc
enter
daa
clc
xlat
pop
push
add
imul
xlat
test
add
inc
clc
pop
stc
dec
pop
pop
js
clc
mov
pop
xchg
xlat
sub
add
jno
add
aaa
fwait
int
add
addr16
xchg
cmp
jp
clc
dec
es
jne
add
mov
pushf
out
out
dec
mov
mov
clc
int3
js
mov
clc
lods
test
add
add
clc
cmp
clc
mov
jg
insl
fimuls
jbe
in
mov
sub
cwtl
mov
add
lret
and
xor
add
add
mov
clc
jmp
sub
pusha
add
dec
and
clc
mov
loope
and
add
add
cli
cli
ds
clc
es
xchg
adc
add
clc
push
add
fisttpll
add
mov
aaa
xor
add
add
xchg
sbb
cmp
add
fwait
icebp
inc
clc
mov
cltd
into
imul
in
xchg
add
add
in
mov
add
add
lret
cmp
clc
decl
ja
imul
fs
mov
add
bswap
in
nop
fadds
add
out
xchg
fisttpl
std
aas
dec
cmp
add
ret
clc
pusha
add
dec
jno
add
clc
xor
add
clc
pop
mov
cmc
outsb
cs
clc
fwait
add
add
fidivrl
dec
xchg
test
mov
inc
clc
mov
inc
clc
cli
arpl
add
xchg
cmpsb
clc
mov
clc
pop
imul
add
xchg
negl
add
add
add
mov
add
add
cs
add
push
pop
fcomi
fisttps
nop
jmp
clc
outsb
sub
jne
push
add
cmp
clc
outsl
jp
add
mov
xchg
jb
add
data16
xchg
inc
clc
xlat
jae
add
add
pop
pop
mov
add
out
inc
add
movsb
clc
out
pop
push
push
mov
inc
clc
xbegin
nop
push
add
add
push
or
add
aam
clc
std
es
inc
add
dec
sbb
fstps
sub
and
cld
jae
add
pop
mov
js
pop
clc
dec
cmc
rep
mov
clc
mov
pop
add
add
clc
push
add
jl
add
add
clc
mov
add
mov
lret
pusha
add
sbb
cmp
sti
cmp
adc
mov
add
sbb
xlat
daa
clc
repnz
ret
xchg
dec
and
add
aas
mov
ret
outsl
loop
xabort
clc
mov
add
mov
clc
push
lods
sti
pop
lods
inc
clc
xor
add
testb
add
jecxz
out
xchg
cwtl
xlat
mov
pop
outsl
lods
sbb
clc
mov
adc
add
clc
enter
clc
xabort
sar
lods
scas
xor
add
pop
nop
hlt
scas
mov
or
int
ret
jg
mov
add
outsl
jno
add
sub
inc
clc
sub
fistps
repnz
adc
add
sub
add
push
xchg
adc
fldcw
add
push
add
xchg
jno
add
add
inc
clc
xlat
addr16
repz
idivb
dec
lcall
add
pop
xor
add
pop
and
add
clc
ds
stos
lret
xchg
imul
imul
pop
idivb
clc
stos
and
mov
lahf
aam
out
pop
fs
mov
or
stc
sar
out
mov
clc
gs
push
arpl
add
mov
jae
add
sar
add
add
jecxz,pt
ja
mov
pushf
sarl
xchg
cmp
adc
xor
add
mov
jg
and
add
adc
add
xbegin
negb
addr16
add
add
clc
mov
fstpt
aaa
fcoms
add
mov
xchg
mov
add
repnz
icebp
add
jne
out
fnstcw
rorb
mov
jl
dec
in
sbb
in
xabort
add
pop
mov
clc
out
mov
add
mov
clc
pop
in
ja
pop
push
sub
dec
cmp
clc
add
add
add
mov
dec
push
mov
add
add
or
mov
add
mov
add
das
mul
clc
push
add
jae
add
popa
add
insb
lret
jmp
sbb
xchg
sti
cmp
add
mov
adc
add
clc
mov
inc
clc
adc
add
pop
mov
add
xchg
ftst
clc
call
lods
ljmp
inc
clc
out
int
clc
xor
add
es
or
add
add
es
jb
add
jp
xor
clc
adc
add
add
sar
jecxz
add
add
clc
or
mov
clc
mov
pop
sbb
push
add
stos
outsb
push
inc
add
cmc
movsl
clc
cmp
cmpsb
clc
cltd
cmp
cmp
fnstsw
lods
push
add
xchg
int
clc
add
rcrl
clc
add
inc
clc
sub
add
test
add
mov
jp
push
cwtl
jb
add
clc
xor
add
add
popa
add
mov
xchg
sti
push
pop
arpl
add
aas
or
leave
dec
roll
add
push
xchg
pop
push
xor
add
add
addr16
pop
cwtl
add
add
add
pop
clc
xor
xor
add
mov
lar
add
cmpsb
clc
into
test
mov
in
addr16
xlat
aad
clc
daa
clc
adc
add
testb
push
xchg
xor
add
iret
jo
add
add
mov
clc
pusha
add
inc
add
loope
insb
inc
add
inc
add
dec
test
add
clc
popa
add
pop
and
add
clc
clc
sub
into
sti
lret
add
gs
push
or
jge
adc
add
add
sbb
cmpsb
clc
mov
clc
xchg
xchg
cmp
jl
ss
add
xor
add
sti
push
xchg
mov
out
fildl
add
adc
add
dec
pop
mov
cmovno
add
add
push
add
js
clc
mov
clc
imul
add
sar
repz
add
inc
add
xchg
mov
add
add
dec
insb
jle
mov
add
pop
popa
add
dec
sti
clc
pop
aam
icebp
sbb
or
push
aas
dec
lock
cmp
jno
add
add
iret
sub
clc
cmp
add
idivb
clc
test
loope
mov
in
xor
add
or
cmp
pop
lret
add
out
pushf
mov
sbb
ds
xchg
call
add
stos
xor
add
clc
movsb
clc
jnp
mov
xchg
inc
clc
mov
das
iret
enter
add
lret
add
add
clc
scas
inc
add
pop
mov
add
jo
add
scas
decb
sub
push
pop
imul
add
mov
sbb
insl
repnz
call
loope
in
ljmp
cs
pop
dec
or
clc
xchg
mov
cmp
cwtl
outsl
jle
inc
add
add
sub
or
lahf
lret
sti
call
cwtl
mov
clc
lea
and
inc
add
mov
add
ror
cwtl
sub
leave
push
add
add
add
cld
rorl
cwtl
adc
clc
add
add
jae
add
add
ret
in
sub
add
push
out
adc
add
add
add
xor
adc
add
sbb
gs
stos
sub
push
clc
or
pop
mov
clc
sbb
ficompl
inc
add
push
jo
add
push
clc
int3
adc
add
clc
xchg
push
stc
imulb
or
and
add
inc
add
sub
jle
arpl
add
cmpsl
clc
add
add
push
add
dec
jge
add
addr16
sar
mov
add
inc
add
stc
cmp
mov
mov
clc
push
add
pop
or
clc
cs
fs
fldt
std
xchg
cmp
addr16
lahf
xor
add
xchg
cmp
data16
jbe
xabort
in
mov
decb
add
inc
add
push
clc
sub
add
mov
out
addr16
pop
sahf
pop
jg
clc
hlt
mov
enter
jne
clc
dec
add
add
xchg
clc
xor
add
or
popa
add
jno
add
dec
clc
dec
push
fsubp
clc
cmp
cmp
nop
clc
out
fsubl
add
hlt
insl
test
mov
add
clc
add
add
add
or
ss
cmp
clc
jne
pop
fnstsw
cltd
xbegin
out
mov
out
aaa
dec
loope
jb
add
push
rolb
and
pop
inc
clc
bound
add
clc
push
lods
adc
add
add
xchg
in
pop
push
add
cmp
fidivs
test
add
or
add
sbb
clc
pop
je
clc
cli
jo
add
add
stos
loop
mov
xor
add
clc
shll
outsl
fadds
add
add
push
out
stos
mov
clc
in
cmp
xlat
icebp
loop
pop
loopne
idivl
xchg
dec
loope
lahf
loop
test
fmuls
mov
not
mov
clc
lods
in
push
fcomps
jecxz
popa
add
std
push
add
mov
cmp
jo
add
add
cmpsl
clc
std
pop
clc
lods
and
add
and
add
add
adc
add
add
inc
clc
xchg
cmpsl
clc
xchg
insl
nop
loopne
push
push
sub
inc
clc
pushf
fistl
add
clc
pusha
add
ficompl
add
adc
add
je
out
push
add
enter
cmp
cmp
add
clc
clc
cmpsb
clc
add
add
jge
clc
dec
xor
add
mov
add
fwait
aaa
mov
push
loop
loopne
sar
push
in
push
clc
cmpsb
clc
in
scas
fsubs
outsb
or
and
pop
push
add
add
add
add
add
add
sub
lods
add
add
mov
inc
add
out
pop
dec
daa
clc
mov
clc
icebp
pop
push
add
add
add
ss
cmp
lea
xchg
lret
je
add
int
push
push
push
jmp
clc
std
shlb
push
add
movsl
clc
lods
mov
inc
clc
lret
mov
jge
sar
xchg
push
add
movsb
clc
dec
mov
add
in
pop
clc
sub
dec
adc
add
fimull
xchg
pushf
sub
ljmp
xchg
lods
fsub
clc
sbb
jb
add
stc
ret
clc
mov
in
ss
adc
add
inc
clc
xchg
cmpsl
clc
xabort
push
lret
clc
mov
add
lock
add
add
add
pop
jecxz
adc
clc
fdivl
xor
add
clc
push
clc
cwtl
xor
add
cmc
jp
clc
mov
clc
or
add
xchg
lea
mov
cs
add
xchg
push
ret
add
arpl
add
add
add
add
dec
sub
clc
stos
jmp
clc
push
lods
shrl
negl
lret
dec
pop
clc
cli
iret
xchg
adc
add
scas
add
add
lods
mov
clc
or
dec
mov
add
or
dec
cmp
push
add
adc
clc
decb
add
lcall
mov
add
add
add
mov
sbb
pop
rclb
add
aad
add
jns
aam
clc
jns
fildl
in
ljmp
add
jle
mov
add
movsb
clc
add
add
sbb
clc
dec
pop
adc
add
clc
lahf
xchg
xchg
test
push
clc
scas
cmp
xor
add
ss
clc
lcall
add
cmpsl
clc
mov
clc
aaa
add
xor
add
ds
add
aaa
sbb
clc
xchg
rcrl
jecxz
loope
ds
lods
cltd
lret
add
in
hlt
lret
add
mov
inc
clc
xor
add
add
in
clc
mov
add
fmull
inc
clc
leave
adc
add
lcall
push
mov
cmpsl
clc
dec
jns
xbegin
sar
into
jle
pop
in
out
loopne
adc
add
je
clc
cltd
inc
add
icebp
in
pusha
add
or
xor
add
inc
add
push
inc
clc
insl
cli
and
mov
shlb
add
add
out
test
int
cmp
mov
mov
clc
mov
add
clc
icebp
std
ss
add
add
je
insb
xchg
add
clc
insl
int
push
mov
add
jmp
pop
mov
mov
pop
clc
outsb
jnp
jb
add
add
mov
gs
cmp
mov
add
lock
jbe
add
jns
pop
ret
insb
inc
add
cmp
jp
push
clc
add
add
dec
cmp
clc
add
add
mov
add
clc
add
add
xor
add
loop
jb
add
add
xor
add
lcall
add
add
xor
add
mov
add
pop
clc
mov
fadds
clc
jle
cmpsl
clc
sbb
clc
lahf
inc
clc
mov
clc
cmp
out
push
adc
add
test
clc
movsb
clc
cwtl
cli
repz
mov
clc
imull
jne
fmul
aas
cmpsb
clc
ss
mov
add
xchg
sub
or
add
ud1
add
fidivl
call
and
or
mov
add
aam
aaa
sar
pop
fidivrl
mov
xbegin
int
dec
mov
add
loop
leave
loope
and
jns
clc
push
jp
xor
add
enter
or
jmp
adc
add
or
outsl
mov
clc
rorb
sub
clc
xchg
das
std
xabort
cmpsb
clc
hlt
xabort
call
fdivl
add
es
mov
and
add
cld
inc
add
adc
fisttps
and
lcall
clc
add
and
add
fistps
jae
add
push
add
outsb
pop
mov
testb
add
outsl
sahf
fwait
test
jle
mov
clc
clc
stc
idiv
cmp
mov
dec
inc
clc
push
mov
add
pop
arpl
add
clc
call
mov
cs
test
inc
add
sub
mov
add
add
pushf
mov
sub
cwtl
mov
and
add
lea
data16
test
lock
add
dec
inc
clc
xchg
fsubp
clc
and
add
mov
insb
jnp
popf
sbb
add
xchg
inc
clc
sarb
in
dec
test
pop
and
add
xchg
fiadds
add
cmp
fwait
mov
clc
sahf
xor
add
jae
add
add
scas
jb
add
add
fwait
lahf
inc
clc
xor
xchg
pop
jns
jmp
sub
add
jl
pop
push
insl
ret
clc
or
add
loopne
or
add
movsl
clc
jns
inc
clc
rorl
or
add
push
sub
add
add
add
inc
clc
and
add
add
lods
add
inc
add
push
add
sbb
loop
adc
add
in
mov
stc
sub
clc
call
clc
adc
add
sti
adc
add
or
and
add
mov
jb
add
add
add
xchg
pop
xabort
mov
or
clc
mov
movsl
clc
inc
clc
mov
cmp
or
mov
clc
or
add
clc
test
test
or
jbe
add
stos
in
add
add
sbb
add
add
xchg
cmp
add
scas
ds
fdivrl
add
xor
add
lret
icebp
call
push
pusha
add
loop
xor
clc
xor
add
mov
jno
add
add
xor
add
data16
shld
addr16
inc
clc
xchg
dec
rcrb
test
add
jmp
mov
jg
jl
pop
clc
or
add
clc
cmp
clc
and
add
enter
inc
clc
testb
push
add
xor
add
clc
mov
das
push
adc
add
cmp
clc
fmull
loop
dec
cmpsl
clc
add
pop
cmp
out
cmp
add
mov
xor
mov
sub
add
sahf
mov
add
loope
pop
clc
jnp
sub
lret
mov
data16
repz
or
add
punpckhwd
clc
jmp
xor
add
inc
clc
sbb
jecxz
inc
clc
loop
repnz
jno
add
repnz
clc
adc
add
clc
lret
fwait
cmp
cmp
add
mov
or
clc
sub
jecxz
push
sub
cmp
clc
xchg
adc
add
mov
push
add
or
jecxz
leave
test
sbb
lret
sti
mov
int3
sar
sar
out
sbb
jbe
add
dec
xchg
push
mov
clc
inc
add
dec
mov
add
popa
add
xchg
xbegin
js
add
popf
push
shlb
add
add
add
sbb
add
push
add
or
sub
aam
mov
cmp
clc
imul
pop
xor
mov
sar
into
inc
add
dec
popl
add
add
cmp
clc
jno
add
mov
jo
add
clc
rorl
clc
shrb
mov
clc
cmp
xor
repnz
inc
clc
stos
rolb
add
mov
add
addr16
xchg
inc
clc
mov
adc
fidivrs
adc
add
add
xchg
dec
adc
add
add
lods
test
or
jnp
add
imul
cmp
dec
mov
clc
es
negl
clc
pop
jb
add
sub
and
add
adc
add
repz
arpl
add
insb
cmp
jmp
add
inc
add
cmp
pop
lods
push
cwtl
adc
add
cwtl
je
sbb
fs
repz
addr16
xchg
jecxz
out
aas
int3
sar
add
xor
add
faddl
add
fnop
mov
clc
fs
fchs
clc
xor
clc
loope
add
add
add
adc
add
clc
pop
jge
push
outsl
mov
insb
je
lret
add
add
cli
dec
xchg
mov
clc
cmp
aas
xchg
jb
add
dec
cld
ds
add
or
clc
lods
es
mov
icebp
das
add
add
mov
clc
jge
cmp
push
shr
mov
clc
mov
clc
lahf
cmp
xabort
mov
mov
clc
pop
repnz
loop
xbegin
clc
out
cmp
add
add
clc
sub
fbld
add
push
add
insl
xchg
push
add
loop
pop
or
clc
addr16
out
je
push
xchg
and
clc
iret
xor
add
add
clc
mov
pop
clc
adc
add
cmp
cmp
add
test
lea
add
out
jns
adc
add
in
pop
adc
add
pop
or
imul
clc
jl
or
imul
and
fs
scas
stc
hlt
push
add
mov
aas
push
jmp
clc
out
jg
clc
or
add
cmc
adc
add
clc
sub
clc
arpl
add
xchg
into
inc
clc
stos
incb
add
clc
sbb
or
movsb
clc
mov
xor
add
mov
sub
clc
adc
clc
xchg
out
cmp
cmp
idivl
cmp
add
out
inc
add
xabort
pop
jb
add
cmp
mov
clc
stc
stos
lahf
xor
add
clc
fbstp
clc
sbb
fstps
mov
sar
cmp
sahf
lea
clc
mov
xchg
popf
xchg
xchg
inc
add
int
or
mov
sub
jmp
es
xchg
and
add
xlat
mov
xor
clc
js
clc
dec
cmp
fwait
adc
add
add
clc
push
sbb
xabort
rcrl
mov
push
add
cmp
cld
cmp
mov
stc
lock
cmp
in
cmp
add
add
add
fistps
and
add
cmp
clc
mov
add
add
mov
fcompl
pop
fstpl
clc
xchg
arpl
add
cmp
mov
ss
fs
clc
inc
add
cwtl
cmpsl
clc
mov
clc
mov
add
aad
add
adc
add
movsb
clc
adc
add
add
add
add
shlb
add
push
ss
clc
lods
fidivs
sbb
add
ret
clc
jecxz
mov
and
add
xchg
lcall
xbegin
clc
scas
ss
add
dec
repz
out
mov
pusha
add
stos
pop
imulb
dec
es
dec
adc
add
cmp
push
push
clc
dec
sub
add
mov
add
clc
sub
add
add
cs
mov
mov
fbld
add
mov
push
call
clc
dec
stos
pop
or
clc
call
clc
insb
mov
jl
push
add
dec
bound
add
paddusw
int
add
jge
sub
into
gs
pop
clc
repnz
clc
ret
clc
mov
data16
jb
add
pop
clc
xor
add
cld
push
add
cltd
sbb
inc
add
insl
xchg
imul
add
mov
es
nop
xchg
jg
add
mov
jecxz
jae
add
mov
mov
push
add
lret
cmp
dec
push
test
popa
add
insl
and
dec
jg
ret
clc
loop
push
and
add
or
sbb
in
sahf
adc
add
cmp
mov
clc
dec
sar
clc
jmp
in
aaa
sar
jnp
clc
test
inc
clc
pop
mov
pop
mov
mov
clc
adc
add
xbegin
add
mov
xchg
negb
cmp
out
mov
lods
enter
add
loopne
jp
clc
dec
fmulp
ds
xchg
aam
clc
add
add
ror
lods
inc
add
scas
mov
cmp
mov
jbe
push
clc
jge
inc
add
mov
sar
shl
clc
xchg
lock
mov
clc
pop
mov
repz
push
add
xchg
sub
xor
add
add
push
sub
mov
sbb
clc
sbb
cmp
sub
clc
in
inc
add
sub
clc
xchg
xor
clc
frstor
adc
add
stos
popa
add
adc
add
lea
add
test
clc
mov
xor
clc
jnp
add
pop
jb
add
pop
clc
out
es
jno
add
clc
adc
test
in
add
xor
add
clc
jg
mov
data16
stos
call
pop
clc
inc
add
pop
lock
clc
dec
xchg
fcomp
aas
push
add
stos
es
leave
mov
bound
add
dec
jl
shrb
lret
push
lea
push
and
out
push
daa
clc
add
add
cmp
outsb
jnp
add
adc
add
lret
push
clc
popl
inc
clc
jge
fisubrl
lods
xabort
and
add
clc
ss
fidivrl
loope
adc
add
add
adc
mov
movsb
clc
cmpsb
clc
mov
clc
imul
add
xchg
mov
sbb
insb
test
pop
pop
call
clc
xchg
inc
clc
adc
add
clc
cs
adc
add
test
xbegin
add
add
scas
repnz
xchg
iret
add
bound
add
bound
add
jg
pop
sbb
gs
rcrl
clc
bswap
cmp
clc
fwait
mov
lcall
or
push
sbb
add
sub
aaa
test
push
add
add
mov
clc
cmp
outsl
cld
push
dec
fmul
and
add
ds
add
push
dec
lods
pop
clc
fadd
clc
movsl
clc
push
add
or
xchg
and
add
incl
fidivl
jecxz
sti
popf
push
add
and
add
cmc
out
aam
adc
add
add
or
call
clc
mov
clc
insl
rol
clc
bnd
clc
bound
add
xabort
clc
icebp
jne
add
and
add
push
sbb
sbb
fldcw
ret
clc
jne
sub
lret
add
clc
sbb
adc
add
stos
jbe
dec
inc
add
xor
dec
cmp
mov
pop
sbb
mov
mov
xor
mov
mov
adc
add
out
adc
add
clc
sub
stos
movsb
clc
sub
clc
mov
add
lcall
cmc
pop
inc
add
in
cmp
cmp
fs
fldt
call
data16
cmp
dec
imul
xlat
cmp
jp
cmp
stc
sub
je
repz
lcall
push
add
sahf
and
add
jb
add
clc
ljmp
push
add
dec
mov
sbb
clc
inc
clc
xchg
mov
fnstenv
add
mov
clc
jle
dec
inc
add
fldenv
add
and
add
ljmp
int3
jmp
dec
in
cmc
sub
add
xor
add
add
xchg
repz
xchg
addr16
loopne
pop
inc
clc
and
ja
clc
pusha
add
and
add
int3
out
pusha
add
push
pop
push
popa
add
pop
jo
add
fsubr
jnp
aaa
fbstp
out
mov
clc
jne
sub
iret
mov
add
mov
sub
clc
inc
clc
in
movsl
clc
cs
clc
mov
loop
dec
fists
clc
punpcklwd
add
add
fisttps
test
cmp
addr16
cmc
mulb
add
add
movsl
clc
sub
xbegin
clc
jne
fwait
pop
dec
xchg
cmc
pusha
add
sub
add
push
adc
add
cmc
lcall
add
add
daa
clc
insb
enter
clc
dec
out
pop
cmpsl
clc
popa
add
and
add
add
cmp
pop
adc
add
fcoms
clc
lret
insl
cmp
clc
jge
xchg
mov
add
dec
das
pop
pusha
add
in
pop
clc
mov
add
into
inc
clc
int3
pop
call
add
add
add
add
add
mov
cmp
ds
sbb
shll
or
push
inc
clc
in
stos
aaa
idivl
add
clc
sbb
inc
clc
cmp
add
loopne
jge
mov
lock
clc
das
and
add
in
sbb
addr16
or
clc
dec
mov
xchg
mov
cld
out
and
add
add
pop
push
add
clc
push
dec
xor
add
lret
add
cmc
inc
add
push
add
push
cs
add
cmp
add
outsb
repnz
pusha
add
push
add
xchg
mov
add
rcrb
inc
clc
pusha
add
dec
popa
add
cli
arpl
add
add
add
add
pushf
sub
test
clc
shl
jg
out
test
add
xchg
cmp
add
ljmp
fdivs
repz
add
scas
inc
clc
mov
das
mov
sbb
test
and
add
clc
iret
adc
add
inc
add
add
mov
arpl
add
mov
mov
xchg
jecxz
cs
mov
movsl
clc
das
loop
sti
mov
sar
clc
mov
push
push
dec
mov
clc
sub
insb
aas
mov
xor
add
clc
add
bound
add
add
inc
add
add
add
ret
xchg
mov
rol
clc
ucomiss
mov
insb
lret
in
pop
insl
or
clc
sbb
clc
fiadds
leave
mov
pop
xchg
lods
add
push
sub
pop
sbb
test
stc
lcall
mov
mov
jns
mov
fldt
clc
mov
stos
xchg
imul
add
adc
add
clc
ss
das
xchg
lods
add
add
sbb
jmp
add
and
add
fstpl
clc
cmp
sbb
clc
push
addr16
xor
add
dec
add
jb
add
sbb
fwait
jnp
add
test
mov
bound
add
in
cmp
add
test
xchg
mov
and
add
dec
cmp
repz
or
add
xchg
std
sub
clc
lods
cmpsb
clc
test
cmp
mov
cmpsb
clc
jnp
clc
xlat
mov
sbb
fyl2x
mov
hlt
xlat
push
clc
xabort
clc
and
es
xchg
sub
into
pop
cs
loop
mov
add
es
lret
clc
sbb
add
push
add
and
imul
xor
add
es
jmp
inc
add
imul
add
adc
add
or
clc
jb
add
add
test
pop
jnp
clc
sbb
pusha
add
rcr
cltd
push
add
icebp
data16
movsb
clc
mov
and
add
push
test
pop
inc
add
fldenv
aad
div
sub
add
fs
mov
add
sub
adc
out
add
add
clc
int3
adc
outsl
cmp
or
add
lods
inc
add
jecxz
stc
add
add
clc
cmp
xchg
cmp
clc
ret
clc
adc
add
mov
add
mov
pop
lahf
outsl
imul
push
add
adc
clc
cmpsb
clc
xor
cs
shll
cmp
pop
adc
add
mov
add
xor
add
inc
add
stc
aaa
adc
add
push
ljmp
add
leave
fdivs
cmp
popa
add
inc
clc
cwtl
popa
add
mov
das
cmp
mov
sbb
push
stc
out
scas
out
sub
jbe
add
inc
clc
mov
movsl
clc
pop
clc
push
aaa
and
push
cmp
mov
add
add
mov
lock
add
mov
dec
es
mov
rclb
add
dec
push
clc
xchg
pop
cmp
sub
mov
add
push
jle
pop
loope
jo,pt
add
add
popf
scas
jb
add
add
jnp
fisubs
fstpl
sub
add
xabort
outsb
dec
xchg
push
jo
add
or
and
mov
sbb
bound
add
add
clc
pushf
imul
arpl
add
pushf
hlt
and
add
jo
add
aas
or
mov
jns
lods
push
or
add
mov
dec
mov
clc
insl
cmp
cmp
mov
in
sub
stos
stos
adc
add
jmp
or
clc
cs
mov
inc
add
xchg
mov
and
add
add
loope
push
inc
clc
pop
jl
or
fbld
std
fdivrl
cmpsb
clc
push
clc
xchg
adc
sub
push
add
and
mov
fmull
iret
or
clc
fstl
clc
js
sbb
clc
fdivl
lcall
xlat
sub
dec
mov
dec
or
add
add
add
enter
nop
adc
add
dec
xor
add
ror
hlt
push
add
fldcw
xor
add
out
popf
filds
add
and
dec
mov
bound
add
cli
dec
daa
clc
pop
je
xor
mov
clc
mul
clc
popl
outsb
xbegin
clc
inc
clc
fcmovnbe
dec
pushf
fists
clc
xor
add
add
mov
push
fs
stos
jnp
repnz
clc
fs
rcll
stc
cmp
cld
into
sub
inc
add
jnp
add
fnstcw
pop
clc
mov
fsubr
iret
push
sbb
adc
add
daa
clc
sar
mov
daa
clc
dec
fs
sbb
push
or
mov
xabort
xchg
popa
add
mov
add
fildll
add
das
ja
call
ret
iret
dec
outsl
in
mov
push
add
mov
add
dec
lods
stos
adc
hlt
dec
and
add
add
add
mov
inc
clc
dec
or
clc
in
xor
add
xor
add
add
in
hlt
push
pop
jae
add
clc
imul
add
sbb
clc
sti
mov
cmpsl
clc
push
push
lcall
sbb
adc
add
push
mov
and
xor
add
clc
mov
clc
jge
clc
jle
clc
test
mov
add
notb
idiv
in
mov
clc
or
add
add
enter
or
xor
add
ljmp
or
clc
cli
sbb
sbb
clc
sahf
gs
mov
clc
lcall
xchg
pop
pop
pop
xchg
mov
sub
push
repz
xchg
bound
add
add
loopne
fs
xor
add
add
ja
cmp
cmp
cld
push
add
dec
xor
add
add
add
rorl
movsl
clc
popa
add
fwait
sti
inc
clc
dec
aas
sub
add
addr16
xchg
gs
data16
inc
clc
movsl
clc
scas
pop
sub
fmull
mov
clc
fs
add
cli
jno
add
mov
fisubrl
clc
in
pop
incl
cmpsb
clc
xchg
cmp
xchg
mov
ficoms
movsbl
scas
add
add
ret
clc
in
xchg
addr16
pop
mov
clc
jbe
cmp
clc
push
shlb
adc
add
and
add
add
pop
pushf
insl
scas
enter
stc
test
leave
xor
add
xlat
mov
data16
inc
add
mov
repz
adc
add
sbb
pop
mov
leave
clc
fsubrp
ret
clc
sub
add
test
mov
add
add
clc
rclb
add
clc
cld
insb
sub
clc
daa
clc
ds
add
aaa
daa
clc
dec
inc
clc
push
xchg
scas
pushf
aad
clc
cmp
add
or
and
or
inc
clc
and
adc
add
push
pop
into
sub
add
add
pusha
add
sub
add
add
mov
add
xor
clc
inc
clc
ljmp
stos
dec
jns
filds
clc
pop
inc
add
imul
aaa
enter
add
loope
test
ja
icebp
xor
scas
mov
mov
icebp
icebp
cmp
inc
clc
mov
xor
out
ljmp
add
sahf
jnp,pn
jnp
add
push
or
add
sbb
imul
mov
mov
add
xchg
test
out
push
add
in
or
add
clc
outsl
jnp
mov
push
clc
into
sbb
pop
add
add
fnsave
into
inc
add
cwtl
es
or
xbegin
cmp
or
mov
fs
sub
sbb
loop
jnp
clc
mov
ja
push
loop
sbb
dec
push
add
out
cmp
mov
repz
add
test
mov
int
shr
sbb
jns
cmp
mov
jns
sar
clc
or
clc
xchg
mov
xor
add
xor
add
clc
insb
dec
or
add
sub
add
jle
add
mov
push
add
addr16
mov
add
jmp
stos
push
outsl
es
mov
add
add
and
xor
add
and
add
xchg
jno
add
cmp
add
cmp
add
pop
clc
fldcw
xchg
fdivl
repz
or
add
jmp
xchg
inc
clc
push
ljmp
clc
aad
pop
xchg
jne
push
cs
mov
cmpsl
clc
or
mov
cltd
mov
clc
sub
add
add
cld
ds
fistpl
add
sub
clc
addr16
fnstsw
add
inc
clc
jge
pop
clc
sar
shlb
inc
add
cmpsl
clc
lods
mov
add
mov
pop
repz
jae
add
add
clc
mov
clc
mov
js
clc
xlat
inc
add
out
ret
clc
pop
cmp
add
call
sub
jnp
add
and
dec
jne
movsb
clc
sub
jnp
clc
xabort
std
or
add
clc
sub
add
aad
adc
add
push
add
pop
and
add
cmp
add
add
jle
clc
cmp
clc
shlb
clc
dec
mov
ljmp
add
add
clc
data16
stos
xchg
shl
clc
sub
adc
in
xchg
jo
add
clc
sbb
clc
inc
clc
stos
pop
clc
dec
dec
inc
add
cmp
clc
jge
clc
mov
add
ds
pop
clc
sar
mov
lock
add
add
pop
add
add
lock
clc
bound
add
ljmp
push
pop
ja
clc
lods
sub
add
dec
mov
out
cmp
clc
mov
mov
push
pop
fcomps
add
add
daa
clc
sar
cld
cmp
add
lock
jae
add
clc
xor
add
dec
lods
mov
add
push
and
add
movsb
clc
jbe
fs
cmp
iret
push
add
cmp
add
add
cs
in
in
or
xlat
in
enter
icebp
xor
add
xchg
mov
clc
movsl
clc
push
clc
push
clc
in
dec
dec
clc
sub
daa
clc
jb
add
add
clc
sar
inc
clc
clc
xor
add
jno
add
cmc
add
sbb
pop
sub
aaa
nop
gs
jle,pt
clc
fistpl
pop
clc
or
ljmp
sub
data16
fmul
jge
clc
es
ljmp
adc
add
add
mov
enter
inc
add
add
add
add
testb
xor
add
clc
mov
clc
test
xchg
outsl
pcmpgtd
or
jmp
gs
mov
sbb
fs
mov
filds
sahf
push
mov
jp
clc
lret
clc
add
dec
xchg
fiadds
add
roll
jle
pop
dec
dec
xbegin
clc
lcall
xchg
sbb
add
fsubrs
xor
add
clc
xor
add
clc
push
scas
mov
add
cli
mov
mov
scas
movsb
clc
cmp
add
add
add
push
add
aaa
movsb
clc
mov
inc
clc
push
pop
jae
add
mov
dec
jge
clc
xchg
scas
add
add
dec
sbb
clc
lods
popf
dec
js
pop
stos
dec
pop
cvttps2pi
mov
add
pushf
sub
clc
cmp
cmp
pop
add
add
jbe
bound
add
add
xor
add
dec
repz
mov
scas
arpl
add
sbb
out
or
sub
cmp
add
addr16
xor
add
add
movsl
clc
jl
adc
add
out
push
scas
fsub
clc
int3
testb
add
sbb
adc
xchg
movsl
clc
and
add
add
add
mov
dec
mov
clc
xchg
repnz
es
or
fisubrs
pop
jnp
mov
inc
add
ret
clc
cmp
push
cmp
scas
cli
cmpsb
clc
inc
clc
sbb
xbegin
add
pop
clc
repz
loopne
arpl
add
enter
fnstcw
vmulps
add
or
clc
pop
adc
add
popa
add
movsl
clc
push
push
add
cmpsl
clc
cmp
dec
fdivrs
test
sub
sahf
lock
clc
ja
mov
adc
stc
outsb
imul
cmp
inc
clc
jg
mov
clc
mov
clc
int3
repz
add
pusha
add
nop
inc
add
xor
add
clc
sbb
int3
out
stos
xchg
stc
int3
adc
add
xchg
testl
cmp
mov
lahf
xbegin
add
xabort
xlat
cmp
lea
add
add
fldl
add
add
add
fwait
loope
cmp
adc
jge
adc
add
sbb
clc
hlt
sbb
testl
add
ss
add
pop
enter
jno
add
in
int
fildl
cwtl
sbb
mov
sti
mov
xchg
or
clc
movsl
clc
scas
pop
fwait
mov
cmp
xlat
pop
clc
outsb
pop
sub
add
add
rolb
arpl
add
add
das
lcall
add
add
shrl
gs
mov
add
outsl
sub
push
push
clc
mov
adc
add
shr
repz
clc
push
clc
sub
add
fmuls
add
divl
add
or
add
cs
add
sbb
movzwl
enter
dec
dec
or
adc
add
add
sar
clc
gs
cmp
add
add
clc
lods
nop
pop
sub
pop
sbb
mov
mov
and
add
iret
cld
data16
or
clc
inc
add
ljmp
mov
inc
add
push
into
scas
lock
add
in
push
and
add
clc
dec
cmp
rorl
or
inc
add
mov
mov
push
movsl
clc
sar
add
aam
jns
xchg
push
xchg
xchg
mov
inc
clc
dec
int3
and
add
inc
clc
or
mov
adc
add
clc
push
and
add
fisubrs
sub
fcomps
add
adc
add
sub
push
add
mov
inc
clc
push
sub
clc
cmp
mov
arpl
add
sbb
pop
fnstenv
sbb
cs
clc
inc
add
repnz
jl
jo
add
mov
cmp
add
leave
fidivrs
dec
push
test
mov
xchg
cmp
push
add
nop
cltd
pop
int
repnz
cs
inc
add
and
add
add
inc
clc
ret
jbe
inc
add
push
clc
int3
jg
repz
pop
clc
icebp
and
add
add
xor
clc
mov
cmp
clc
push
add
and
jo
add
jl
add
push
mov
ret
clc
jmp
insl
popf
push
aam
fnsave
add
add
in
daa
clc
jno
add
dec
adc
mov
das
or
add
clc
stos
mov
imul
mov
dec
adc
clc
int
clc
jmp
clc
xor
hlt
je
jmp
add
mov
scas
mov
clc
cmp
pop
clc
push
clc
and
push
clc
dec
test
arpl
add
push
push
lret
clc
std
lret
dec
ds
lret
push
ret
clc
push
movsb
clc
inc
add
scas
sahf
ficoml
add
cltd
cwtl
ljmp
clc
fwait
int3
cmp
pop
xor
add
cwtl
adc
jmp
push
add
xchg
popa
add
cmp
lods
aas
xchg
sar
leave
push
jns,pt
clc
mov
xchg
stc
push
or
add
and
add
mov
in
je
clc
lock
cmp
sahf
sahf
in
scas
xlat
repz
clc
mov
xchg
inc
add
mov
cmp
mov
sub
jge
clc
xchg
mov
clc
mov
mov
xlat
insl
jecxz
mov
inc
clc
pop
ret
clc
xchg
and
clc
shlb
add
arpl
add
fdivr
xor
add
es
ret
clc
mov
repz
clc
cmp
jns
daa
clc
jp
mov
mov
ljmp
fcmovnu
jae
add
add
mov
add
arpl
add
clc
inc
clc
push
add
mov
jmp
and
add
sar
in
push
xor
add
sub
outsl
pop
data16
push
add
mov
gs
inc
clc
cmp
add
inc
add
dec
jmp
add
sub
fidivrl
add
add
cwtl
and
add
sbb
clc
xchg
cmp
ret
cmp
clc
cwtl
inc
add
push
int3
ljmp
dec
aad
add
leave
mov
popf
testb
mov
in
mov
or
add
scas
pusha
add
daa
clc
nop
je
add
sbb
ss
add
push
add
inc
add
stc
into
in
lret
xbegin
lret
add
clc
inc
clc
shlb
add
jo
add
add
add
sbb
clc
scas
adc
add
add
out
aad
jl
ss
add
data16
pop
aam
add
and
add
xlat
sbb
add
data16
mov
fcompl
push
push
lahf
movsl
clc
dec
daa
clc
xchg
mov
push
cli
bound
add
add
clc
dec
out
sub
jo
add
add
pop
clc
jnp
pop
dec
sub
das
xor
add
add
cmp
lret
inc
add
gs
push
mov
and
push
add
pop
imul
add
add
add
jl
aaa
mov
clc
inc
clc
mov
add
aam
cmp
inc
add
cmc
lret
adc
add
clc
fs
decl
clc
mov
loope
popa
add
test
clc
aas
xlat
mov
ror
in
xchg
mov
sbb
add
push
sbb
aaa
int3
xchg
and
clc
cltd
sbb
je
add
xor
fidivs
and
add
add
jnp
add
dec
sub
add
dec
mov
clc
push
add
mov
add
mov
push
rorb
aaa
cwtl
fsubrl
mov
fcoml
add
jns
add
movsl
clc
repnz
clc
pop
addr16
test
xchg
sub
clc
repz
add
repz
addr16
mov
sahf
sbb
fsubl
pop
outsb
aaa
mov
clc
rcrl
cltd
mov
addr16
pop
test
clc
mov
rorl
clc
ja
ss
or
fisubs
add
mov
es
mov
push
add
mov
or
xchg
xchg
lahf
imul
fdivrp
stos
and
add
jmp
int
push
clc
ficoml
add
pop
sub
popa
add
push
dec
and
add
fnstenv
clc
sbb
jmp
loopne
fisttpl
clc
inc
add
sbb
sti
adc
dec
iret
scas
mov
inc
add
ds
ffreep
clc
lock
sbb
xchg
cli
iret
cmp
sar
clc
fsubl
add
rcll
add
arpl
add
add
clc
in
pop
and
add
push
clc
or
or
pop
xchg
fcoms
xor
add
push
add
push
add
add
jnp
pop
jne
pop
clc
push
add
ds
clc
push
add
std
mov
js
mov
sbb
mov
hlt
or
add
jae
add
add
bound
add
add
mov
add
sbb
ret
out
cmpsl
clc
mov
add
shll
add
fldl
add
in
neg
mov
clc
jle
popf
sub
ret
inc
clc
ds
jns
clc
imul
add
jge
jmp
add
xchg
nop
xchg
mov
adc
add
push
out
add
add
lea
or
push
stos
pop
clc
sub
jecxz
lods
repz
sub
mov
std
js
test
mov
add
or
mov
gs
or
sbb
xabort
cmp
clc
sar
in
ret
clc
mov
clc
xchg
pop
mov
ficoms
das
iret
lea
std
ffree
clc
pop
pop
fdivs
add
testl
mov
clc
cmp
out
xchg
push
mov
clc
loop
jbe
movsb
clc
addr16
inc
add
pop
or
mov
jns
pop
xor
add
add
addr16
out
sub
mov
clc
mov
mov
add
into
cmp
pushf
mov
clc
pop
incl
xchg
sbb
adc
clc
std
into
sub
inc
clc
imul
ds
add
pop
rorl
inc
clc
sbb
fcoml
fs
ss
xor
add
xor
add
aam
add
xor
add
and
add
repnz
jo
add
push
ret
clc
jno
add
add
and
add
pop
aad
mov
add
and
mov
add
mov
clc
out
sub
clc
fstpt
in
out
stos
iret
mov
mov
add
rorb
add
inc
clc
insl
inc
add
into
cmp
add
cli
and
dec
inc
add
fcmovb
clc
xchg
clc
mov
mov
add
es
mov
clc
jno
add
out
push
je
jns
mov
mov
fs
scas
pop
leave
cmp
dec
mov
clc
inc
clc
mov
inc
add
jecxz
fsubrs
push
xchg
mov
add
cmp
add
or
and
add
gs
nop
lea
add
cmpsl
clc
stos
rcrb
clc
xchg
cld
and
add
inc
add
hlt
ljmp
clc
sti
gs
ficoml
clc
xchg
pop
cld
insb
lods
add
add
call
sbb
movsl
clc
add
lret
icebp
sbb
mov
mov
dec
pop
je
dec
xor
add
clc
mov
add
jle
sub
out
xchg
push
leave
sbb
add
xor
add
pop
jns
mov
clc
and
clc
jne
dec
add
add
clc
cwtl
fcmovne
mov
out
outsb
push
clc
fcoml
sbb
iret
out
cli
sahf
and
add
add
test
xor
add
or
in
and
add
gs
sbb
adc
add
out
cs
dec
cmp
push
add
mov
push
push
clc
inc
add
xchg
dec
je
clc
xchg
out
mov
clc
test
mov
mov
clc
pop
clc
cmp
jmp
inc
clc
xbegin
pop
cmp
push
and
add
popa
add
inc
add
mov
addr16
ficoml
add
jg
add
xchg
sbb
test
test
das
inc
clc
stc
test
jb
add
add
mov
mov
mov
sbb
aas
test
push
add
sub
and
add
add
xchg
xchg
cmp
inc
add
xchg
jns
clc
or
add
jbe
or
push
add
push
out
push
add
loopne
outsl
push
vxorps
xor
jns
clc
lcall
mov
adc
add
add
sbb
jmp
cmc
and
add
jb
add
cmp
mov
jecxz
movsl
clc
and
add
add
add
loop
fwait
imul
xchg
add
add
addr16
loopne
mov
cld
lea
sbb
clc
add
add
out
mov
hlt
sbb
add
add
add
jge
add
push
mov
incl
sub
mov
add
xchg
loop
imul
pop
inc
clc
xchg
clc
pushf
cli
add
add
hlt
enter
add
add
mov
mov
add
cmp
mov
add
add
clc
sbb
add
xchg
inc
add
das
sar
dec
mov
xchg
stc
pop
mov
loopne
mov
add
add
clc
mov
or
clc
inc
clc
sub
call
cmp
clc
cli
lock
add
into
ret
clc
push
idivl
clc
push
cmp
out
sub
int
adc
add
adc
push
sbb
mov
clc
lock
inc
clc
call
aaa
adc
push
add
aaa
cmp
sbb
fdivp
xchg
je
clc
fxam
clc
cwtl
sub
add
mov
add
arpl
add
add
jae
add
and
add
cmpsb
clc
pop
add
clc
jae
add
cmp
clc
push
add
loopne
int
adc
add
clc
mov
clc
shll
cwtl
ficoml
cmp
cmp
ret
clc
adc
add
ret
clc
js
mov
cmp
ficomps
int
insl
popa
add
out
push
clc
xbegin
aad
add
sar
clc
js
clc
add
add
mov
idivb
enter
popf
std
out
mov
sbb
icebp
mov
notl
outsl
jmp
xchg
sar
cmp
add
insl
pusha
add
std
inc
clc
sub
pop
popa
add
xabort
clc
in
inc
clc
xbegin
and
mov
sar
leave
stos
in
mov
clc
das
js
outsb
mov
pop
inc
clc
out
cwtl
dec
xchg
test
outsl
xchg
movsb
clc
jmp
add
cmpsl
clc
jge
pop
clc
add
clc
xor
add
repnz
clc
xchg
cmp
add
add
daa
clc
jl
add
outsb
jecxz
scas
inc
add
mov
add
or
push
add
xabort
jmp
pop
and
add
add
pop
sti
and
xor
add
add
lahf
or
loop
popa
add
aas
push
sbb
push
add
adc
jo
add
clc
mov
or
jne
mov
add
stc
pop
out
pushf
sub
xabort
clc
sahf
cltd
imul
clc
mov
add
cmp
mov
clc
ds
add
add
clc
sub
add
add
add
pop
lcall
dec
repz
xlat
out
or
js
repz
sbb
clc
xchg
xchg
ficoml
add
clc
fwait
and
inc
clc
push
add
clc
dec
sub
push
add
lods
push
add
mov
add
xchg
hlt
pushf
sub
pop
out
cmc
or
xchg
fstps
clc
inc
clc
jp
out
arpl
add
clc
mov
clc
jp
cmp
nop
mov
add
xor
add
mov
mov
add
clc
fucom
clc
adc
add
ret
clc
mov
sub
stos
lahf
sbb
call
mov
dec
and
and
ss
leave
leave
cmp
dec
xbegin
fs
es
scas
sub
push
pop
or
stos
insl
cmp
mov
aad
clc
lea
add
dec
sub
add
jp
mov
pop
sti
cmc
scas
lret
jecxz
mov
mov
mov
call
fdiv
add
add
clc
gs
idivl
push
add
in
add
add
add
roll
jge
clc
sti
mov
jo
add
popa
add
out
pusha
add
mov
pop
lods
es
xchg
mov
fwait
mov
push
add
xchg
icebp
pop
jns
leave
push
clc
xchg
dec
test
add
test
test
lret
cmp
test
scas
popf
add
add
cmp
add
jl
clc
jbe
mov
clc
mov
clc
push
data16
pop
pop
in
addr16
jge
dec
and
add
mov
cmp
clc
fdivrl
pop
movsb
clc
gs
aam
cmp
clc
lahf
xchg
fwait
pusha
add
add
add
xor
clc
out
or
or
mov
clc
or
lock
cmpsl
clc
pushf
lods
data16
cli
dec
fildll
push
add
add
add
hlt
test
icebp
into
clc
aas
jmp
add
add
cmp
stos
stc
pop
jbe
clc
sbb
in
add
daa
clc
xor
add
add
push
jmp
add
add
into
jbe
clc
leave
inc
clc
flds
add
popf
adc
add
or
clc
mov
out
dec
jne
aas
jecxz
mov
jo
add
mov
add
cmc
jp
dec
lods
or
clc
push
add
pop
addr16
pop
pop
stos
lcall
add
imul
cli
dec
adc
add
sar
xbegin
or
clc
pop
sbb
dec
sub
sub
sar
jge
imul
add
add
clc
push
add
movsl
clc
outsb
inc
add
dec
and
add
add
stc
xchg
jp
cmpsb
clc
lcall
jo
add
push
mov
stos
cmc
adc
add
movsl
clc
dec
bound
add
mov
ror
sub
push
out
jnp
clc
jge
nop
mov
das
enter
add
xabort
cmp
sbb
add
add
jg
gs
leave
cmc
imul
mov
je
outsb
push
out
add
add
clc
pop
xor
clc
mov
call
clc
dec
rcll
add
clc
or
add
dec
pop
and
lock
xchg
lret
dec
emms
push
pop
adc
add
clc
xchg
aas
adc
add
inc
add
push
clc
movsb
clc
xchg
pop
mov
adc
add
and
mov
pop
clc
cmp
xchg
jg
addr16
repz
cld
icebp
shll
add
sub
inc
add
and
stos
jp
jl
dec
dec
cmc
mov
in
adc
and
add
pop
fldl2e
in
inc
add
or
stos
push
cmp
ds
cmp
ja
clc
clc
jnp
clc
adc
add
inc
clc
call
lea
add
movsb
clc
std
mov
and
add
out
insl
and
add
add
cmc
sar
fcmovnb
clc
in
add
add
test
sub
sahf
ret
sahf
push
inc
add
mov
out
dec
xchg
mov
or
xchg
jnp,pn
mov
clc
adc
add
fnstcw
fs
int3
ds
cmp
dec
addr16
mov
sub
jmp
mov
clc
das
mov
add
jecxz
push
fisubs
fadds
add
clc
xchg
imul
adc
add
push
clc
jno
add
inc
add
sbb
add
push
mov
clc
ljmp
add
test
out
xor
sub
fs
mov
movswl
add
cmc
jmp
lods
cwtl
add
jg
clc
movsl
clc
js
add
sub
movsl
clc
icebp
shll
add
add
enter
cmc
or
add
mov
clc
inc
clc
pop
mov
clc
fwait
jp
clc
stos
push
movsb
clc
mov
push
add
in
adc
clc
mov
in
xchg
popa
add
sbb
or
fbstp
add
enter
clc
cmp
sub
inc
add
dec
jge
xchg
push
imul
sar
xor
clc
push
add
addr16
cld
loop
stc
push
push
add
fnstenv
pop
cmpsb
clc
ret
clc
aad
aad
sahf
push
add
xor
add
es
add
add
add
sahf
popa
add
fsubl
add
xchg
xor
add
sbb
bound
add
imul
clc
push
data16
insb
imul
xchg
jb
add
imul
add
shlb
clc
cld
pop
pop
and
add
add
push
sti
inc
add
and
add
clc
xchg
fisubrl
inc
clc
call
call
add
shlb
add
inc
add
dec
jle
into
xor
add
lret
cwtl
dec
jg
clc
xlat
adc
add
inc
add
or
or
add
insb
call
xchg
jmp
lea
and
add
nop
mov
dec
imul
xchg
pushf
mov
pop
mov
mov
cmp
add
out
daa
clc
mov
mov
ja
clc
gs
fisttpll
lret
loope
mov
cmp
enter
out
inc
add
sbb
add
and
add
and
add
sbb
out
jae
add
sbb
cmp
icebp
insb
jle
mov
push
add
jns
clc
sahf
sbb
clc
cmp
xchg
inc
clc
add
add
jmp
cmpsl
clc
mov
cmp
mov
add
add
adc
add
cmc
loope
clc
dec
xchg
cmp
hlt
push
xchg
push
fcompl
ljmp
ret
cmp
pop
in
outsl
cmp
push
data16
fwait
push
cmp
lods
cltd
mov
inc
clc
cmp
cld
push
pop
jg
imul
add
nop
xchg
test
clc
arpl
add
cltd
adc
cmp
xchg
sub
clc
out
cmp
sbb
add
dec
xor
stos
test
adc
add
data16
and
add
add
in
sbb
dec
jns
scas
insb
xlat
mov
dec
push
dec
and
sar
stos
bound
add
addr16
in
sub
or
negl
dec
pop
or
icebp
lret
add
pop
pushf
push
adc
push
shrl
dec
mov
mov
clc
out
fs
adc
into
pop
das
lcall
add
sbb
mov
mov
aad
mov
lahf
call
push
add
dec
xor
add
add
mov
clc
jmp
clc
mov
add
arpl
add
cwtl
pop
mov
or
mov
add
cld
sti
daa
clc
nop
and
add
icebp
lret
scas
inc
add
push
gs
fcos
xchg
pavgw
mov
clc
clc
jb
add
add
push
add
cmp
arpl
add
cli
repz
sbb
sahf
dec
sub
mov
js
loop
mov
add
pop
push
add
imul
pop
clc
jl
inc
add
mov
add
pop
iret
scas
pop
add
mov
push
cmp
call
clc
xabort
clc
insl
xchg
mov
xchg
xchg
test
repz
add
scas
int3
lret
push
add
or
cs
sub
inc
clc
test
xor
add
inc
add
scas
mov
add
push
sbb
add
mov
add
jecxz
addr16
enter
pop
adc
add
lods
inc
add
mov
add
and
jecxz
mov
mov
clc
popa
add
push
push
clc
insb
mov
add
add
add
ja
clc
xchg
dec
jae
add
pushl
dec
xchg
xchg
adc
add
add
sbb
inc
add
add
add
cmp
cmp
fistps
lods
dec
sbb
jge
add
lods
cmp
pop
sbb
xchg
or
jne
add
cmp
mov
xchg
add
add
mov
mov
arpl
add
clc
mov
icebp
adc
add
mov
xchg
loop
lock
outsl
imul
jae
add
mov
add
add
clc
mov
add
cmc
cmp
dec
bound
add
ljmp
lret
mov
testl
add
push
in
insl
ret
clc
pop
int3
sarl
add
dec
inc
clc
js
clc
inc
clc
mov
sbb
sub
out
and
test
sub
add
rep
mov
pop
ja
add
mov
add
clc
push
lahf
test
cmp
mov
inc
clc
cmp
clc
addr16
xor
add
jbe
push
imul
cltd
or
add
add
inc
clc
adc
clc
mov
clc
jg
out
ret
shll
add
lods
inc
add
insl
lret
mov
add
dec
insl
xchg
push
cli
nop
ret
clc
add
add
fadds
add
push
jmp
add
clc
jecxz
sub
inc
add
pop
mov
cmp
fwait
rcl
lods
mov
dec
je
sub
out
es
stc
cmp
or
ds
test
clc
clc
and
add
jbe
clc
stc
in
aad
add
popf
push
call
xor
push
data16
or
clc
mov
add
clc
and
fnsave
cmp
jmp
cli
lock
add
add
cmp
das
mov
cmp
mov
clc
pusha
add
enter
popa
add
adc
add
scas
adc
clc
jl
add
adc
add
pop
clc
int3
out
push
cmp
mov
shl
clc
dec
fsubs
add
sbb
clc
popa
add
add
add
add
addr16
sbb
scas
add
test
clc
es
iret
sahf
mov
mov
scas
mov
jb
add
fmull
clc
pop
sub
add
pop
adc
add
jns
stos
push
mov
xor
add
and
pop
lods
xchg
or
add
add
add
add
rorb
add
sub
sub
loope
je
repnz
aas
mov
sbb
sbb
clc
sub
mov
and
add
scas
add
add
jae
add
out
xchg
cmp
test
ds
pop
dec
fildll
cmc
mov
clc
ss
or
adc
add
add
jns
addr16
mov
push
add
clc
push
cmp
nop
ja
movsl
clc
mov
mov
scas
jl
mov
cmp
cmp
daa
clc
mov
add
mov
inc
add
and
jmp
scas
push
add
pop
loopne
and
add
lahf
inc
add
lret
add
jb
add
sub
add
add
sub
clc
mov
ss
adc
add
lret
jb
add
shr
or
add
fwait
cs
cmp
repz
adc
add
mov
clc
push
add
dec
movsl
clc
stc
ret
clc
iret
add
pop
je
add
jmp
insb
lahf
inc
add
out
add
add
je
clc
lock
popf
addr16
xchg
jbe
mov
add
add
aaa
std
dec
mov
frstor
add
clc
cmp
clc
or
add
sub
mov
clc
in
outsl
cmp
add
mov
jnp
clc
pusha
add
jecxz
int3
xlat
xchg
jbe
add
xchg
push
clc
jge
lret
ja
imul
lret
cs
out
lcall
sar
mov
lods
push
add
fdiv
test
push
mov
stc
in
push
add
ljmp
dec
cltd
cmp
add
xchg
push
clc
cmc
insl
stos
add
add
clc
jecxz
test
jnp
xchg
pop
sub
clc
repnz
jecxz
and
mov
call
js,pt
mov
dec
clc
and
clc
cwtl
aas
je
mov
cmp
clc
or
clc
scas
mov
cmp
loope
mov
mov
mov
mov
clc
mov
mov
daa
clc
push
xbegin
and
sti
mov
pop
mov
sti
ret
clc
ret
add
mov
sar
clc
push
add
push
add
dec
mov
pop
sti
jge
scas
mov
add
jmp
xchg
jne
dec
inc
add
lcall
pop
cmp
add
outsl
fcmovb
clc
imul
lods
xlat
cmp
clc
out
popf
jecxz
mov
insl
daa
clc
add
add
pop
inc
add
clc
fldcw
jb
add
ljmp
add
cli
jae
add
and
add
adc
add
sbb
repnz
stos
jnp
adc
fldt
aad
clc
sub
add
dec
aad
fcompl
repz
dec
add
add
fcoml
cmp
sbb
clc
mov
xchg
jns
test
lahf
and
addr16
insl
aaa
xbegin
add
lahf
xor
scas
mov
stos
insl
xor
add
add
dec
cmp
lcall
jae,pn
add
add
sub
clc
sub
add
add
clc
xor
xchg
pop
pop
xabort
add
adc
add
scas
add
xor
mov
out
shrl
or
push
into
pop
push
clc
lods
lea
mov
jecxz
nop
mov
and
inc
add
stos
loop
jae
add
mov
cmp
loope
mov
push
add
std
inc
clc
call
clc
xbegin
add
sar
xor
add
or
mov
add
out
push
add
sar
add
mov
mov
mov
mov
jne
add
sub
clc
and
add
