add
add
add
xor
xor
nop
add
add
add
sbb
add
add
test
test
test
pop
pop
pop
pop
pop
pop
pop
pop
add
add
enter
enter
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
and
and
xor
xor
xor
xor
xor
call
call
call
call
call
call
jp
mov
lret
lret
lret
lret
lret
ja
out
out
out
out
out
out
out
out
out
out
out
out
out
out
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
and
and
and
and
and
and
and
dec
dec
dec
lcall
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
aaa
aaa
aaa
aaa
aaa
aaa
aaa
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
repnz
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
add
call
mov
and
and
and
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lret
or
or
div
div
div
div
testl
add
add
add
ds
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
in
in
in
in
in
in
in
in
in
ja
add
aas
lret
lret
out
out
out
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sbb
mov
xchg
out
cmp
add
aaa
aaa
add
add
or
or
or
or
fs
les
mov
mov
mov
mov
mov
mov
arpl
arpl
arpl
arpl
arpl
inc
inc
inc
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
or
or
add
add
ret
ret
ret
ret
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
in
in
in
in
in
in
in
add
jle
jle
jle
filds
mov
mov
scas
scas
scas
and
mov
mov
ljmp
sbb
sbb
sbb
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
push
push
push
push
push
push
push
push
push
add
add
push
push
fs
clc
clc
clc
clc
clc
clc
clc
clc
clc
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
mov
mov
mov
mov
mov
mov
add
add
rcl
rcl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
or
or
or
or
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmp
add
add
popa
popa
popa
popa
xchg
add
es
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
sbb
sbb
sbb
sbb
arpl
arpl
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
iret
iret
iret
iret
add
out
out
out
out
out
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
and
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
out
out
out
add
add
add
add
les
addb
addb
add
add
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
fcmovu
cs
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
stos
stos
stos
stos
cmp
cmp
mov
mov
mov
mov
mov
rcl
shl
rol
rol
test
test
test
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
push
push
push
push
push
push
jo
jo
and
and
loope
add
sbb
add
add
add
cmp
cmp
cmp
add
xor
xor
xor
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
add
icebp
icebp
icebp
icebp
or
or
push
push
push
push
push
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pmovmskb
add
add
add
sbb
mov
mov
add
jge
jnp
or
bound
bound
bound
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
add
jne
jne
xchg
xchg
xchg
stc
stc
stc
stc
stc
add
call
call
call
call
call
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
repnz
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
or
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
add
add
xor
xor
rol
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
call
add
push
push
push
push
push
push
push
push
push
dec
dec
add
dec
dec
dec
incb
add
loop
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
rcl
rolb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
mov
lret
mov
mov
pusha
pusha
pusha
pusha
pusha
pusha
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
and
and
and
and
and
and
and
and
cmp
cmp
add
lods
lods
lods
add
fiadds
addb
jne
jne
jne
jne
incb
add
add
jg
jg
jg
jg
jg
jg
jg
jg
jg
push
push
push
push
push
push
pop
pop
jb
jb
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
int
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsl
outsl
add
mov
mov
mov
or
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jbe
mov
div
div
div
div
div
div
div
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sub
sub
sub
add
add
add
mov
mov
mov
mov
sbb
sbb
sbb
lods
lods
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
repz
aad
aad
aad
aad
aad
aad
aad
aad
add
bound
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
in
in
in
in
in
in
in
in
in
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lods
lods
lods
lods
lods
lods
lods
lods
lods
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
in
in
in
in
in
cmp
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
repz
pusha
je
je
add
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
test
test
adc
adc
adc
add
add
add
add
add
add
add
xchg
xchg
adc
adc
adc
add
xchg
xchg
xchg
add
add
loopne
loopne
loopne
mov
mov
mov
mov
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
in
in
in
mov
stos
stos
stos
stos
stos
stos
repz
push
push
push
push
sub
cmc
cmc
cmc
cmc
cmc
cmp
cmp
cmp
cmp
cmp
cmp
jns
addb
jb
push
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
rcl
rcl
rcl
rcl
jge
jge
add
js
js
js
js
js
js
push
mov
mov
add
add
add
cmpsl
cmpsl
mov
push
cmp
cmp
cmp
cmp
cmp
cmp
addr16
sub
in
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
lret
lret
lret
lret
jl
jl
jl
jl
jl
or
or
mov
repnz
jnp
jnp
jnp
jnp
jnp
jnp
jnp
ret
jb
add
push
push
push
push
push
push
push
push
push
push
push
outsl
outsl
outsl
outsl
outsl
outsl
ss
ss
xlat
stc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
push
push
push
push
xor
xor
xor
jge
jge
jge
jge
jge
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
dec
dec
dec
pop
pop
add
rcl
rcl
rcl
rcl
nop
nop
nop
nop
nop
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
cmp
cmp
cmp
cmp
cmp
cmp
rcl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
xchg
xchg
daa
daa
daa
daa
daa
daa
daa
daa
daa
mov
mov
mov
add
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
jns
jns
jns
in
in
in
in
in
in
in
in
in
in
in
in
dec
rol
rol
rol
sbb
sbb
sbb
sbb
sbb
sbb
mov
sbb
sbb
sbb
sbb
cmp
cmp
cmp
cmp
add
and
mov
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
popf
arpl
arpl
arpl
arpl
arpl
cmp
cmp
cmp
cmp
cmp
addl
addl
mov
fcomp
fmuls
or
or
push
push
push
push
push
push
push
push
sbb
add
add
or
or
dec
dec
dec
dec
mov
mov
add
jnp
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
test
aas
aas
in
in
in
in
in
in
in
jno
add
adc
pop
pop
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
cld
cld
cld
cld
cltd
cltd
xor
xor
xor
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
add
add
xchg
lds
stos
stos
stos
call
call
mov
mov
fcomp
fcomp
fcomp
fsubrs
hlt
hlt
mov
mov
mov
mov
mov
mov
add
jmp
jmp
jmp
jmp
jmp
loop
jp
jp
inc
inc
inc
inc
fs
add
add
push
push
push
push
push
dec
dec
dec
inc
inc
inc
xchg
xchg
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jne
jne
jne
jne
in
in
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cwtl
cwtl
cwtl
cwtl
mov
mov
mov
mov
mov
mov
mov
cmp
cs
cs
cs
das
das
das
das
das
das
das
das
das
das
das
das
das
jne
jne
mov
add
add
mov
mov
fs
aad
add
add
jae
jae
jae
jae
jae
call
jle
jle
jle
jle
mov
mov
mov
mov
cmc
ds
ds
sub
sub
aad
aad
aad
aad
and
and
and
fcomp
fstp
frstor
addr16
ss
xchg
xchg
xchg
mov
mov
mov
add
add
add
add
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
mov
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
add
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
add
add
add
fwait
fwait
fwait
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
mov
jno
jno
jno
jno
jno
jno
jno
xor
xor
pop
pop
pop
pop
pop
pop
pop
pop
lods
lods
lods
lods
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
dec
dec
dec
fcmovu
fcmovu
ficompl
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
sbb
sbb
sbb
add
add
add
add
xchg
xchg
add
add
add
scas
scas
scas
scas
scas
lahf
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
jnp
jp
jp
jp
jp
jp
jp
cs
jg
jg
jg
jg
add
add
add
out
add
add
add
add
aaa
aaa
aaa
aaa
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
push
push
push
push
push
push
push
mov
add
add
cli
cli
cli
cli
cli
cli
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
call
add
add
add
add
add
add
add
sbb
sbb
add
or
or
or
or
or
or
or
or
or
or
add
add
jge
jge
jge
jge
jge
jge
jge
adc
adc
fcomp
fcomp
fcomp
fcomp
mov
addl
addl
lock
lock
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
enter
enter
adc
cwtl
add
xchg
xchg
popl
inc
sub
sub
sub
sub
add
jmp
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
int3
int3
int3
int3
int3
int3
cs
cs
xchg
xchg
xchg
xchg
xchg
add
cld
cld
cld
add
add
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
es
loop
loop
test
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
cmp
cmp
cmp
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
out
mov
dec
std
std
std
std
std
sbb
sbb
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
pop
pop
pop
pop
pop
pop
pop
pop
pop
stos
stos
stos
mov
mov
into
into
mov
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
jbe
jbe
jbe
jbe
jbe
into
into
into
into
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
lock
add
add
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
je
je
je
je
je
je
je
je
je
je
je
je
add
add
add
add
add
fcmovnu
fcmovnu
cli
cli
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
fldt
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
add
jg
jg
jg
jg
gs
js
js
add
cs
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
dec
mov
cmp
cmp
cs
add
add
add
add
pop
ds
add
add
add
add
add
add
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
sbb
or
or
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
outsl
outsl
push
mov
mov
cmp
cmp
cmp
cmp
test
test
test
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
push
push
push
push
push
push
es
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
in
in
in
in
movsb
xchg
loopne
loopne
loopne
loopne
loopne
add
stc
stc
stc
stc
stc
stc
stc
mov
std
and
and
and
and
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
add
add
add
add
add
add
add
add
add
rcl
roll
int
int
int
int
int
int
int
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
clc
add
add
ja
ja
insl
insl
insl
insl
insl
cwtl
cwtl
cwtl
repnz
in
in
in
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
mov
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
clc
clc
clc
clc
clc
clc
enter
enter
enter
enter
enter
cmp
icebp
icebp
jae
jae
jae
jae
js
jp
jp
jp
jp
jp
add
add
bound
fcmovu
fcmovu
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
rcl
rcl
rcl
rcl
rcl
rcl
mov
mov
mov
add
cmp
cmp
cmp
cmp
es
sbb
sbb
add
add
add
ret
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
jl
jl
jl
jl
jl
jl
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jg
jg
jg
jg
jg
jg
jg
jg
add
fiadds
add
js
js
js
js
loope
add
push
push
push
push
push
add
jne
jne
jne
jne
jne
jne
inc
inc
mov
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
xchg
xchg
xchg
xchg
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
mov
mov
lahf
lahf
lahf
lahf
lahf
lahf
lock
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
and
and
and
and
and
and
add
bound
bound
bound
in
in
in
in
in
in
in
in
in
movsl
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
mov
mov
add
push
push
push
push
push
push
push
push
push
push
push
push
imul
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
rcl
rcl
rcl
rcrl
jle
and
and
and
and
and
add
add
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
push
push
push
push
push
push
push
push
push
push
push
push
flds
add
add
inc
inc
inc
add
add
add
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
adc
adc
adc
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
scas
scas
scas
scas
inc
inc
test
test
test
test
test
test
adc
adc
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
jae
jae
pop
pop
pop
pop
pop
mov
mov
je
ret
dec
dec
dec
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
ss
jne
jne
jne
jne
jne
and
and
add
dec
dec
dec
dec
ss
push
add
add
stc
stc
stc
addb
addb
addb
addb
mov
add
rcl
rcl
rcl
repnz
out
out
mov
cmp
cmp
cmp
cmp
cmp
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
add
mov
rcl
pop
add
add
jmp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
jae
jae
jae
jae
jae
jae
push
push
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
mov
mov
mov
mov
addb
addb
test
test
test
test
test
test
test
test
test
pop
pop
pop
pop
add
and
and
and
and
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
add
add
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
aam
aam
ret
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
dec
dec
dec
dec
add
int
int
int
int
int
int
int
int
int
int
int
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
add
data16
add
ret
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
jge
jge
jge
jge
jge
add
inc
inc
inc
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
sahf
sahf
sahf
sahf
lcall
lea
lea
lea
lea
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
pop
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
sub
sub
sub
sub
sub
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
data16
dec
dec
dec
fwait
fwait
fwait
add
out
out
out
cmp
push
push
push
push
insb
icebp
icebp
icebp
icebp
icebp
icebp
mov
adc
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
hlt
mov
add
cld
fsubrs
add
fdivl
dec
mov
div
or
add
cltd
xchg
mull
add
jo
roll
out
pop
mov
cmp
dec
cwtl
enter
add
sbb
outsb
inc
out
mov
add
sarb
xchg
sbb
add
je
cwtl
inc
popf
push
mov
cmpsb
add
movsb
add
int
mov
add
addr16
movsb
add
mov
add
sbbl
add
and
add
xchg
pop
pop
fnstsw
cmp
pusha
or
out
xchg
mov
add
jg
stc
loopne
loopne
hlt
mov
add
add
add
mov
cltd
sbb
mov
add
int3
leave
inc
mov
arpl
jecxz
rcrb
mov
xchg
add
mov
cmpsb
add
cli
mov
push
fnstsw
fwait
dec
ffree
fcomi
loope
xchg
xor
movsl
xchg
and
push
mov
mov
adcl
mov
cmp
push
jg
sar
idivl
xchg
insl
and
test
add
or
xchg
imul
ja
sub
xchg
faddp
out
out
js
mov
add
add
push
fstpl
jo
inc
fists
and
add
jae
rolb
add
arpl
and
aaa
push
pop
call
add
pop
and
add
add
pusha
inc
xor
add
dec
add
add
out
dec
sub
add
mov
test
fistpll
adc
xor
rcrb
mov
rcll
js
in
sub
add
pop
mov
add
xchg
ljmp
int3
sbb
in
mov
addb
xor
je
mov
add
sub
mov
add
add
or
sbb
add
jo
add
fyl2x
call
add
add
test
add
fs
out
sbb
fcoml
pop
shlb
add
repnz
add
add
xchg
xor
sub
add
add
mov
in
or
out
lods
add
add
enter
add
jmp
scas
nop
lods
add
lahf
mov
lahf
mov
lahf
mov
enter
add
enter
add
xchg
cmp
mov
call
jmp
mov
add
clc
mov
add
sub
add
mov
add
sub
add
mov
add
sub
add
sbb
test
add
insl
cmpsl
pop
xor
add
inc
mov
add
mov
add
clc
mov
add
add
add
add
lret
add
push
inc
adc
add
add
add
pop
xor
lods
add
mov
clc
or
add
push
cltd
std
mov
add
jo
add
stos
add
sti
mov
add
rolb
jmp
mov
add
rolb
roll
add
add
test
add
add
call
add
add
test
add
mov
enter
add
enter
add
enter
add
inc
xchg
dec
mov
inc
xchg
dec
mov
mov
add
call
xchg
add
mov
xchg
add
mov
xchg
add
dec
test
add
dec
test
add
dec
test
add
hlt
dec
test
add
test
add
enter
add
enter
add
enter
add
inc
xchg
dec
lods
inc
xchg
dec
lods
inc
xchg
dec
lods
imul
call
xchg
addr16
call
aad
mov
aad
mov
aad
mov
aad
mov
repz
xor
repz
xor
repz
xor
repz
xor
add
call
rcr
sub
add
rcr
sub
add
rcr
sub
add
mov
add
xchg
cmp
add
test
add
add
add
add
pusha
faddl
call
add
push
call
push
mov
inc
inc
push
add
call
add
add
test
add
add
call
add
add
test
add
add
clc
rcrb
add
mov
add
mov
add
add
add
inc
pop
shl
add
mov
loope
add
mov
loope
add
mov
add
ret
mov
add
test
enter
dec
sub
add
add
add
add
push
pop
push
pop
push
pop
inc
push
push
push
inc
push
push
push
pusha
test
pusha
test
pusha
test
pusha
test
inc
push
test
add
inc
push
test
add
inc
push
test
add
cmp
add
out
mov
xor
call
push
add
cmc
xor
push
xchg
pop
repnz
jb
push
push
xchg
arpl
jge
jbe
jl
mov
cmpsl
add
add
add
stos
add
mov
dec
mov
push
sbb
in
jl
orl
add
mov
nop
je
jnp
pop
dec
dec
adc
xor
call
mov
add
ljmp
pop
lcall
sarl
mov
aad
xchg
dec
mov
rcll
in
ljmp
and
fsubs
rorb
add
daa
mov
add
xchg
xchg
jg
jl
xor
mov
mov
ja
sti
ret
and
mov
xchg
cmp
jo
mov
insl
mov
js
or
inc
shrb
and
adc
add
add
add
xchg
addr16
jbe
pop
sbb
rorb
add
mov
cld
push
sbb
push
add
sbb
enter
in
clc
xor
add
popf
push
mov
inc
sbb
mov
rcrl
cmpsb
add
loop
cltd
jp
cld
in
aad
outsb
icebp
cmp
xchg
add
xor
shlb
add
rcrl
add
inc
aad
mov
mov
sbb
and
gs
mov
add
js
add
and
add
add
push
xadd
dec
fsubrl
xor
mov
push
fidivl
add
add
add
pop
sub
imul
mov
add
or
add
add
daa
mov
sbb
mov
push
int3
mov
test
mov
sahf
add
add
add
out
mov
cli
in
shrl
ss
and
add
gs
das
sub
or
int3
or
add
mov
std
add
add
add
mov
lret
enter
mov
add
idivl
ret
fstpt
or
add
xchg
mov
pop
sti
inc
or
add
lahf
mov
stos
idivb
cmp
div
jle
sarb
mov
add
add
fs
push
sub
repnz
pop
or
sti
jl
add
jmp
add
mov
jmp
not
xor
shrb
add
xor
ljmp
add
add
add
add
xor
rorl
mov
dec
aad
sahf
and
mov
sub
add
scas
add
ja
rorb
add
push
add
inc
ret
xor
fdivl
sub
add
and
add
mov
add
and
outsb
iret
in
or
push
push
add
pop
scas
nop
xor
inc
into
shrb
add
mov
shll
movsl
das
push
xor
outsl
addb
test
add
add
push
inc
into
fwait
push
pop
inc
add
add
add
gs
mov
lds
add
add
cmpsb
add
stos
mulb
imul
add
mov
add
sbb
dec
add
add
add
sub
add
in
or
pop
mov
xor
out
add
jl
add
xor
add
mov
add
xchg
pop
out
push
or
jp
push
dec
xor
mov
add
add
add
outsb
pop
jae
add
adc
ret
push
add
add
fstps
add
movl
add
addb
or
sbb
test
shll
ret
in
cmpl
insl
fwait
add
mov
loope
cmp
pop
repnz
insb
and
add
daa
pusha
pushf
out
mov
call
ja
xchg
add
sahf
add
imul
add
je
and
add
loopne
pop
mov
inc
mov
xor
scas
add
fwait
sub
add
jnp
js
mov
les
mov
into
add
add
cmpsb
add
push
bound
pop
stos
add
fidivl
fldt
imul
aas
out
adc
ds
pop
sbb
inc
cmpsl
imul
mov
ret
jle
sbb
push
sbb
clc
hlt
jp
sbb
dec
das
adc
jl
and
pusha
pusha
adc
stc
sub
add
fwait
in
mov
dec
push
pop
ss
add
add
pushf
arpl
test
add
add
loopne
sub
sbb
inc
lret
cld
sar
xor
and
add
add
nop
cmp
add
jle
or
add
add
push
cmpsb
add
aad
movsb
add
daa
push
addb
ror
nop
mov
das
xchg
mov
add
loop
push
pop
pop
inc
sbb
add
sbb
inc
cmp
dec
aaa
imul
add
jne
mov
mov
and
add
add
jmp
mov
aaa
mov
and
test
add
mov
fsts
bound
out
repz
mov
in
sub
add
js
add
out
insl
fcomp
loopne
add
fwait
sbb
pop
cmpsl
mov
add
inc
adc
cmp
cltd
and
aas
sub
sub
movsb
add
mov
add
add
movsb
add
push
pusha
pop
outsl
cmpsl
cmpsb
add
cltd
push
xchg
add
add
arpl
stos
add
sub
pop
push
or
or
add
adc
sbb
add
dec
jp
cmp
jb
bound
add
dec
aaa
mov
icebp
push
add
leave
movsb
add
pop
mov
add
pop
sbb
xchg
and
fiaddl
add
jno
orl
rcl
xchg
push
add
inc
push
mov
dec
out
sbb
push
add
xchg
mov
add
xchg
mov
addb
jmp
sub
add
add
xlat
aas
addb
or
sbb
insb
and
add
mov
add
hlt
in
cmc
jmp
out
aaa
pop
scas
add
das
imul
push
lods
arpl
push
add
xor
ja
icebp
push
push
mov
jno
add
add
add
cmp
add
scas
add
movsl
inc
adc
rcrb
das
call
icebp
pop
int
mov
add
in
pop
sub
add
or
add
or
add
lret
pop
xor
int3
lcall
add
sbbl
mov
inc
les
add
add
jns
add
xchg
cld
int
push
mov
adc
add
xchg
mov
add
inc
js
int
inc
imul
addr16
cmp
add
or
add
fcoml
fisttpll
loope
push
add
cmp
add
add
jne
gs
out
xor
add
mov
mov
add
dec
cmp
push
jp
pop
int
leave
and
add
add
dec
push
mov
add
repnz
fwait
sub
mov
movl
gs
sub
pop
popa
and
add
inc
cmpl
add
add
add
xchg
add
in
lahf
mov
add
insb
and
arpl
push
add
in
add
and
add
call
nop
outsb
and
add
cmp
cli
mov
push
add
faddl
add
call
in
mov
fnstsw
sub
add
mov
or
add
cmp
mov
and
add
add
sbb
xlat
inc
das
sub
sub
add
mov
xor
and
add
nop
inc
and
add
popa
rcll
inc
and
add
add
pop
ja
scas
add
add
aad
lcall
movsl
dec
dec
cltd
mov
loopne
add
xor
add
cmp
cwtl
js
cmp
pop
sub
dec
jge
dec
rorl
add
ss
xchg
lcall
add
ret
jno
push
clc
pop
arpl
add
cmpsb
add
pop
sub
add
push
add
pushf
ss
repz
add
inc
push
inc
popf
out
add
jb
in
add
std
js
aaa
aaa
mov
push
add
push
jbe
mov
imul
xchg
xor
cltd
ret
inc
cmp
add
test
add
lret
leave
std
push
cmp
mov
add
add
shll
outsl
xchg
add
add
fs
sarb
add
lods
mov
xchg
add
mov
add
jae
xor
nop
adc
or
add
ret
cmpsl
loope
mov
cmpsb
add
push
add
push
jecxz
add
xchg
or
add
sub
push
cli
sbb
or
add
add
add
mov
add
jle
mov
scas
add
push
je
add
add
add
sbb
les
adc
cli
call
add
add
jo
jg
add
je
push
pop
sbb
add
les
add
jecxz
push
jno
sahf
adc
popa
in
push
iret
out
inc
cmpsl
lahf
lds
sub
jae
fbstp
aas
loope
sbb
or
add
pop
or
add
and
add
mov
rcrb
cmp
adc
in
push
add
sbb
inc
sbb
sbb
push
addb
pop
mov
popf
gs
pop
push
mov
add
rcll
cmc
xchg
add
add
hlt
inc
xchg
xor
pop
mov
lea
lea
mov
lea
mov
add
xor
sarb
add
mov
cltd
lret
aaa
insb
ret
fisubl
add
add
or
add
add
xlat
inc
push
add
sub
jns
or
add
and
std
sahf
insb
sbb
mov
add
vphaddbq
call
add
sbb
imul
rcll
ret
push
rolb
cltd
mov
add
add
adc
adc
rolb
lds
add
sub
add
scas
add
push
into
sub
add
add
add
cld
xchg
xchg
push
push
add
jl
pusha
push
cmpsb
add
pop
dec
test
inc
push
out
pop
incb
add
add
jle
fsubrp
int3
sahf
out
or
add
movsb
add
ja
addb
jl
jb
sbb
mov
add
add
add
fildll
dec
shrb
add
push
push
sti
push
sub
add
add
faddp
adc
sbb
jae
inc
push
adc
and
jo
cmp
add
push
add
add
add
les
ds
push
add
pop
xchg
loopne
jb
inc
xchg
dec
scas
add
jmp
cmp
add
add
add
add
addb
pop
in
pop
push
sbb
add
outsl
out
sbb
addb
push
mov
add
jp
jge
shlb
rcr
fcomps
and
add
in
cmp
jbe
sbb
xor
lods
fcmovne
repz
arpl
add
add
lods
add
sub
mov
add
fmull
cmp
push
xchg
cmc
sub
add
ficompl
push
repz
add
add
add
pop
imul
or
subl
sub
add
add
dec
clc
out
loope
add
ret
add
add
test
add
out
fcomi
push
or
add
pushf
mov
push
nop
test
xchg
add
xor
add
mov
xchg
insb
sub
push
xchg
add
mov
add
push
and
add
int3
arpl
mov
jns
sub
add
ja
dec
or
add
mov
add
lahf
jbe
addb
push
mov
out
sbb
add
push
xchg
mov
xlat
sti
jo
pop
das
jns
sbb
inc
or
sbb
add
dec
sbb
sub
add
cmp
xor
add
not
in
mov
add
inc
jbe
ljmp
sti
adc
mov
fisttpll
add
push
in
add
or
add
out
cmp
in
push
cmp
stos
add
and
add
ja
mov
fimull
add
sub
add
outsb
shrb
pop
add
add
add
nop
sarl
jbe
pop
push
add
and
or
add
punpcklbw
and
lods
bnd
iret
pop
cmp
xor
xorl
inc
xor
cmp
outsl
push
sub
add
push
insl
repnz
adc
rep
lahf
pop
ficoms
mov
pop
jne
mov
add
lahf
jb
sbb
mov
add
out
push
add
lods
add
cltd
je
mov
clc
iret
inc
enter
add
add
addb
add
pushf
jne
add
mov
add
psrad
adc
lcall
pop
sbb
imul
icebp
add
pop
addb
or
mov
mov
add
jge
add
dec
les
rcrb
loop
add
jmp
jb
fdivrs
add
pushl
aas
xchg
mov
push
loop
loope
sbb
mov
lods
adc
int3
push
add
xor
add
add
add
add
loopne
add
fwait
cwtl
jmp
add
sbb
add
pop
lret
cmc
cld
inc
aas
xchg
add
out
jo
shrb
jnp
daa
xchg
add
sub
adc
out
lahf
test
pop
push
push
sbb
icebp
jl
pop
cmp
add
aas
das
mov
mov
insl
jb
mov
cmc
ljmp
push
sbb
mov
add
int3
sahf
lods
repnz
add
pop
subl
sub
add
mov
add
inc
test
xor
add
add
jb
ss
add
cmpsb
add
cli
jne
stos
add
sbb
rcll
cli
jg
add
xchg
lret
mov
add
push
addb
mov
scas
test
add
je
in
outsl
fcomi
or
outsl
iret
clc
scas
add
insl
push
add
dec
cmp
jmp
mov
movsl
les
push
das
sub
add
fcmovu
cltd
fldenv
loopne
lret
and
add
add
mov
dec
and
add
add
add
or
add
xchg
add
add
lahf
les
mov
and
add
imul
sub
lcall
movsl
pop
jp
add
dec
xor
pushf
insl
out
or
cwtl
cltd
fnstsw
mov
add
les
xor
out
push
or
add
sbb
or
add
dec
imul
xchg
stc
out
popa
iret
in
jp
add
mov
pop
cmc
imul
add
push
push
out
pop
idiv
je
gs
adc
mov
loop
add
add
push
cltd
rcl
jle
shrl
or
add
sub
loopne
hlt
fbld
pop
adc
and
push
fcmovu
scas
mov
add
add
aam
dec
push
pop
sarl
aas
jmp
xchg
daa
adc
ret
and
add
nop
pop
inc
popa
sub
add
add
mov
std
addb
mov
and
add
add
cwtl
shll
outsb
sub
add
add
xchg
cmc
cmp
pop
dec
push
cmp
add
imul
iret
shll
shl
jmp
push
xor
xlat
cmpsl
lock
and
dec
add
add
mov
out
mov
add
jmp
add
jo
loopne
pop
jae
xor
outsl
shr
pusha
mov
add
mov
ja
add
xor
daa
add
adc
sub
add
add
pop
mov
and
add
mov
add
out
dec
push
js
adcl
cmpsl
add
dec
pop
xor
add
pop
pop
mov
add
jo
xchg
dec
push
add
cmpsl
xchg
add
les
adc
popa
push
sub
aaa
cmp
arpl
add
rcrb
xor
repz
dec
jo
add
movsl
fbld
arpl
dec
mov
mov
add
imul
mov
loope
add
add
add
add
push
add
mov
pop
cmc
dec
pushf
push
mov
add
cmp
add
movsb
add
outsl
dec
jp
sbb
loop
add
out
adc
add
ja
mov
dec
or
add
add
sbb
mov
cmp
xchg
addb
fwait
push
add
xor
lea
movsl
enter
xchg
add
pop
fldcw
add
rol
fsubrl
pop
jmp
jge
test
add
add
inc
dec
mov
outsb
or
lret
mov
cmp
xchg
mov
xchg
addb
or
add
add
jnp
add
sti
mov
xchg
cli
in
xstore-rng
cmpsl
sub
mov
add
cmp
arpl
popf
push
loope
add
add
fldcw
pusha
add
dec
aam
addl
xchg
fdivl
dec
sbb
popf
add
add
mov
add
dec
aaa
and
or
add
mov
add
lret
fs
xlat
push
add
dec
and
add
add
cmp
add
pop
push
add
mov
imul
add
add
fxsave
add
fiaddl
add
shlb
push
add
and
add
add
or
add
int3
fisubl
add
or
add
add
ror
fidivl
mov
push
popa
addr16
adc
nop
loope
sbb
push
leave
or
addl
popa
sub
add
xor
add
add
dec
add
add
xchg
int
add
cmp
pusha
enter
popa
sbb
sub
add
add
cmc
test
add
lahf
mov
dec
dec
mov
hlt
imul
dec
pop
xchg
mov
dec
sub
rclb
jg
add
push
or
add
fnsave
lock
inc
repz
icebp
addb
ss
xchg
push
cmp
push
mov
adc
xchg
adcb
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
and
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
sub
add
scas
out
xchg
add
jl
stc
push
add
mov
add
push
mov
add
into
fwait
and
push
add
into
xchg
push
shl
test
add
lods
add
sub
add
add
mov
add
mov
test
insl
sahf
mov
mov
add
std
repnz
lret
insl
lcall
cmp
std
inc
inc
pop
mov
sub
inc
ljmp
sbb
sahf
sti
xchg
and
add
jl
mov
add
hlt
lret
in
xorl
cwtl
scas
fistps
clc
cltd
out
mov
sbb
push
sbb
add
int3
insb
cmc
push
mov
lods
and
test
add
repz
stos
repz
div
jns
test
add
jns
mov
jo
mov
pop
fwait
dec
repz
je
pushw
into
jmp
cwtl
jp
or
in
mov
add
test
add
xchg
scas
jecxz
jecxz
repz
sub
mov
test
add
cmp
jmp
jne
xor
aaa
icebp
pop
ret
fdivrl
add
insb
cmc
jmp
push
aam
lahf
loopne
sarl
aas
jno
mov
push
in
mov
add
add
or
add
push
out
movsl
cmp
in
add
mov
lock
add
xor
push
lea
xor
int
repz
sub
add
inc
sub
add
add
jg
pop
addb
sbb
mov
push
in
push
inc
sub
pop
mov
dec
pop
add
cli
push
dec
xor
add
mov
push
outsb
test
movsb
add
xchg
push
sti
inc
and
ss
add
scas
add
sbbl
lods
clc
mov
add
adc
jp
mov
add
add
fldpi
movsb
add
mov
test
add
stc
pop
mov
add
push
jle
imul
xchg
mov
add
mov
add
sbb
jb
scas
jge
mov
add
cmp
dec
mov
add
jle
insb
fldl
sti
pop
clc
mov
add
add
add
fcmovnu
jl
xchg
ljmp
mov
add
arpl
jae
dec
ljmp
adc
adc
adc
inc
push
xchg
sbbl
sub
add
add
cmp
add
add
adc
mov
mov
add
lahf
fdiv
mov
add
add
jb
inc
lods
add
add
jp
mov
mov
inc
adc
iret
das
test
add
dec
and
mov
add
inc
push
jns
mov
add
inc
js
leave
imul
add
sub
add
stos
add
cmpsl
jmp
repnz
iret
lods
add
mov
sbb
add
js
negb
push
shlb
ret
rcrb
hlt
lret
or
lret
xchg
sub
add
add
xchg
incb
add
out
or
adc
or
add
xchg
inc
and
add
outsl
push
int3
lock
pop
mov
dec
lds
jmp
pop
and
add
or
add
mov
outsl
pop
lret
lods
add
sbbl
xor
mov
ja
add
pop
mov
nop
mov
add
ret
add
pop
mov
xorl
add
mov
add
add
mov
push
add
jb
adcl
inc
lret
mov
or
add
xor
xchg
sbb
xor
stos
add
cmp
pop
mov
sub
lret
mov
add
and
aas
jbe
std
imul
add
imul
add
mull
lahf
out
xchg
mov
add
add
push
add
add
dec
push
add
fnstenv
addb
lods
add
push
mov
add
mov
movsb
add
repnz
push
adc
add
pop
loopne
jno
sub
push
add
mov
add
add
or
add
add
fmul
stos
add
xor
aas
movsl
inc
and
je
lahf
xor
xchg
nop
jo
add
push
push
cmp
add
push
popf
and
add
stc
and
add
call
add
add
daa
and
aad
idivl
popa
lcall
addb
xor
push
push
xchg
in
add
subl
add
add
lahf
mov
adc
sub
add
ljmp
imul
or
add
dec
idiv
insl
in
lods
add
add
ret
in
ficoml
daa
sbb
daa
out
and
add
push
add
add
cltd
xor
notb
sti
mov
add
mov
call
push
jge
fldenv
add
ret
push
lret
add
add
push
cmp
lahf
or
add
inc
and
add
inc
and
add
add
sub
cmpsb
add
movb
mov
sbb
add
xchg
jp
fistpll
add
xor
stos
inc
pusha
mov
add
test
cltd
scas
add
hlt
test
add
mov
xchg
jae
xor
iret
inc
xchg
mov
add
xor
add
add
shlb
lret
push
add
psubsb
leave
mov
mov
negl
pusha
jl
jle
imul
fs
xor
clc
mov
decl
xor
add
pop
mov
or
add
test
push
fldl
add
sbb
add
xchg
hlt
mov
add
dec
pop
adc
cmp
movsb
add
push
repz
add
lahf
add
add
das
sub
mov
add
add
gs
inc
jb
das
inc
insl
test
dec
fisubs
and
add
je
add
jae
push
inc
fwait
js
push
add
add
inc
jnp
sarb
add
dec
adcl
jno
add
dec
ljmp
add
push
addb
ss
jp
inc
mov
lahf
movl
adc
add
lods
mov
add
fadds
push
mov
push
movsl
jg
pop
ds
jle
icebp
inc
mov
fsts
pop
outsb
dec
aam
das
daa
ds
mov
add
pop
pop
mov
negl
or
add
lods
add
lcall
dec
or
add
int
repnz
stos
add
mov
iret
test
add
cmpsl
pop
dec
fisubl
xchg
mov
fnstsw
clc
pop
sub
add
fldt
add
sub
add
pop
jno
mov
lret
push
in
jmp
and
add
push
and
add
pop
sub
add
add
mov
int3
adc
push
aas
jg
push
cmc
pop
je
or
mov
repz
imul
movsl
cwtl
aad
xlat
and
add
pop
out
add
mov
and
dec
or
xchg
lea
add
add
repz
add
add
add
cld
aaa
les
cwtl
das
repz
sahf
sahf
push
add
out
jnp
enter
add
mov
add
fwait
repz
roll
adc
cmp
inc
adc
rorl
enter
jno,pt
out
out
xchg
adc
mov
add
ret
lea
add
leave
mov
pop
cmovbe
adc
add
push
jns
insl
fsubs
mov
or
add
jmp
mov
add
and
add
mov
fucom
and
stos
add
inc
cmpsb
add
jnp
stos
add
lahf
push
aas
xor
add
inc
xlat
stos
jo
add
xor
add
add
add
add
add
pop
mov
add
lods
add
insb
jo
imul
ja
movsb
add
xchg
lea
add
inc
aam
add
mov
add
out
sub
push
fdivr
data16
add
pop
inc
push
mov
add
mov
movsl
push
add
adc
cltd
adc
dec
push
into
rolb
scas
add
xchg
repz
and
addb
iret
push
sub
add
lea
mov
add
xor
jae
rcll
sbb
inc
pop
stos
dec
mov
add
cmp
scas
or
mov
add
scas
dec
mov
stos
cmpsb
add
addb
cltd
mov
add
aas
rcl
pop
cmc
inc
outsl
jae
mov
xchg
add
fwait
int3
push
adc
ret
xchg
pop
adc
dec
inc
std
fiaddl
dec
inc
pop
das
pop
mov
jecxz
add
sub
jmp
and
add
sti
test
add
mov
test
in
sbb
push
add
int
xchg
out
sbb
add
cmc
add
data16
add
scas
fbld
push
pop
add
add
add
mov
outsl
mov
bound
push
add
jge
dec
xchg
notb
test
adc
nop
fwait
pop
inc
ret
add
inc
xor
cli
and
add
lahf
xchg
arpl
jnp
mov
movsb
add
inc
dec
scas
in
push
int
adc
int
mov
stos
add
mov
add
dec
cld
cmpsb
add
xchg
add
dec
bound
out
test
add
add
mov
popf
cli
mov
fnstsw
cmp
push
js
in
mov
rcrl
in
dec
lea
lods
add
jae
xchg
add
repz
sti
scas
or
add
out
stos
add
sbb
or
add
jg
fistpl
les
push
cmp
sbb
add
outsb
cmp
xor
lea
rcrb
fstl
add
adc
aas
inc
nop
movsl
adc
add
xchg
or
add
jo
dec
push
mov
gs
pop
pop
or
add
mov
repz
clc
ficomps
daa
rorl
adc
xor
inc
sbb
outsb
or
add
add
sbb
add
loop
sub
inc
xor
mov
add
add
cwtl
repz
add
pop
addr16
dec
stc
mov
cmp
add
stc
shl
hlt
idivl
add
in
sbb
sbb
add
jg
lods
fptan
inc
lds
or
sub
add
mov
add
cmovs
and
add
push
add
jo
sub
add
add
xchg
lods
out
push
sub
add
xlat
data16
fbld
xor
out
sub
fsubl
jmp
hlt
xchg
in
cld
lret
test
add
add
inc
aaa
add
jl
add
add
push
push
mov
insl
insb
and
add
pop
fisttps
gs
cmp
ja
sahf
and
add
aas
pop
sbb
add
ds
sub
add
sbb
int3
xor
add
mov
push
jp
and
add
dec
insl
sub
add
ds
xchg
push
aas
ret
xchg
jbe
jbe
add
dec
ja
jae
xchg
xchg
pushf
jecxz
pop
std
push
fwait
sub
movsb
add
ds
loopne
mov
add
lds
add
adc
xor
or
add
loopne
xlat
insb
xor
add
movsb
add
sub
add
inc
mov
add
xchg
sbb
add
inc
jne
and
add
loopne
add
add
push
sub
xor
xor
subl
rcll
outsb
shl
lahf
inc
in
lcall
insb
xchg
pop
lock
add
adc
jae
lret
add
push
mov
in
mov
add
fwait
cld
cmp
add
ret
aam
loop
xchg
push
outsb
fstpt
out
out
or
test
add
push
mov
cmp
cmp
add
push
addr16
push
inc
jmp
call
in
mov
add
lods
add
test
add
pusha
xchg
ret
push
add
add
nop
add
add
stos
xor
push
dec
mov
inc
add
add
add
pop
das
pop
xor
rorb
mov
add
mov
jb
mov
jmp
pop
dec
jmp
add
sbb
add
in
mov
add
xchg
lock
add
gs
daa
xchg
xor
jle
add
outsl
mov
add
push
sahf
xchg
or
add
add
mov
lock
jl
sbb
sti
push
pop
mov
add
jno
mov
add
idivb
add
shlb
cmp
push
imul
jae
sahf
push
arpl
xchg
dec
adc
addb
sbb
bnd
cmc
cmc
outsb
outsl
repz
fcomps
xchg
add
adc
repz
jcxz
sub
add
cwtl
jns
std
clc
mov
add
mov
add
ds
aas
out
hlt
cltd
sub
mov
dec
jae
jno
divb
sti
ss
mov
add
push
mov
add
mov
add
pop
in
mov
add
jo
popa
add
add
or
add
mov
icebp
nop
mov
jne
xor
jbe
adcl
add
dec
cmpsl
sbb
dec
sbb
cmc
cmpl
mov
pop
loopne
je
add
cmp
mov
add
mov
add
add
dec
cmc
insb
xchg
add
arpl
jnp
add
ja
or
arpl
jns
add
add
dec
dec
mov
fistpll
sbb
mov
in
ss
cmpsl
aam
hlt
mov
add
fsubrl
add
sahf
inc
outsb
imul
inc
push
xchg
mov
add
fcompl
rcll
shll
ret
add
lret
fucomip
sub
add
daa
lahf
addb
pop
test
add
js
loop
cmp
shll
fsubrl
sarb
push
shl
out
cmp
push
xchg
add
ret
add
stc
xchg
adc
pop
cld
fidivrs
lock
jmp
imul
add
mov
add
xchg
add
negl
insl
adc
add
inc
neg
lods
mov
and
add
xor
push
and
jns
in
mov
push
add
shll
adc
enter
add
xor
sub
or
add
add
dec
rorl
sti
bound
add
push
add
mov
rorb
add
out
call
nop
jmp
mov
into
push
pcmpgtd
push
mov
leave
nop
jmp
stos
repz
cmp
repnz
nop
nop
jae
daa
push
add
add
jmp
seto
in
leave
nop
jmp
add
push
jne
icebp
mov
lods
and
imul
jmp
add
add
icebp
mov
clc
repnz
nop
nop
jae
test
stos
icebp
inc
jmp
jle
add
add
sub
pop
and
imul
clc
repnz
nop
nop
jae
add
roll
add
add
nop
push
mov
leave
nop
jmp
incl
xor
add
nop
push
mov
leave
nop
jmp
and
addl
add
inc
dec
nop
push
mov
leave
nop
jmp
add
icebp
sbb
add
or
add
add
jmp
incl
jecxz
in
add
int
sub
pusha
push
mov
xchg
ret
sldt
add
add
add
sarb
mov
nop
push
mov
leave
nop
jmp
add
push
xlat
shrl
jle
add
or
add
xchg
inc
add
add
pop
sub
pop
add
stc
add
clc
repnz
nop
nop
jae
add
add
sub
imul
xor
add
add
add
add
add
repnz
nop
nop
jae
sub
add
clc
push
mov
xchg
ret
jmp
repz
popf
add
push
mov
xchg
ret
add
add
add
add
inc
push
mov
xchg
ret
incl
add
in
jmp
push
clc
repnz
nop
nop
jae
pop
push
stos
addb
add
add
add
jae
repnz
nop
nop
jae
add
add
or
add
add
clc
repnz
nop
nop
jae
add
jecxz
stos
orb
nop
nop
jae
jecxz
mov
mov
test
and
add
nop
jmp
sub
xchg
cld
nop
nop
jae
out
push
add
and
dec
push
clc
repnz
nop
nop
jae
add
add
push
and
icebp
push
clc
repnz
nop
nop
jae
add
shr
xlat
add
bound
cld
nop
nop
jae
mov
add
jmp
daa
pusha
push
mov
xchg
ret
sub
into
jecxz
sub
add
mov
repnz
nop
nop
jae
into
daa
pop
hlt
add
jno
clc
repnz
nop
nop
jae
icebp
add
add
into
add
inc
xchg
mov
clc
repnz
nop
nop
jae
add
add
in
cmpsb
add
pop
fsubp
dec
jmp
clc
repnz
nop
nop
jae
out
add
mov
push
push
lcall
clc
repnz
nop
nop
jae
add
fisubrs
add
aaa
mov
clc
repnz
nop
nop
jae
sub
pop
push
jno
or
repnz
nop
nop
jae
add
xlat
add
in
insl
pop
push
mov
xchg
ret
adc
sub
test
xchg
add
jge
rorl
repnz
nop
nop
jae
jmp
add
add
ja
sbb
nop
push
mov
leave
nop
jmp
fiadds
pop
icebp
add
clc
repnz
nop
nop
jae
push
add
int
daa
add
and
add
add
test
add
stos
clc
repnz
nop
nop
jae
in
and
sbb
and
jo
add
and
sar
repnz
nop
nop
jae
in
pop
add
add
je
push
push
mov
xchg
ret
jmp
lds
jecxz
add
out
mov
push
mov
xchg
ret
add
add
inc
int
repz
test
nop
push
mov
leave
nop
jmp
aas
jmp
popa
clc
repnz
nop
nop
jae
add
add
inc
or
mov
call
nop
jmp
mov
test
mov
add
push
mov
xchg
ret
addl
add
sub
add
pop
popa
nop
push
mov
leave
nop
jmp
add
add
in
add
nop
nop
jae
add
add
lds
add
mov
nop
push
mov
leave
nop
jmp
sub
jecxz
jecxz
icebp
pusha
clc
repnz
nop
nop
jae
mov
add
adc
mov
test
sub
add
repnz
nop
nop
jae
adc
mov
add
cld
nop
nop
jae
pop
add
jmp
sub
repnz
nop
nop
jae
int
add
add
nop
nop
jae
orb
mov
fisttpll
cld
nop
nop
jae
add
add
repz
pop
clc
repnz
nop
nop
jae
add
pop
mov
mov
push
mov
xchg
ret
jecxz
test
hlt
sbb
incl
jne
mov
test
pop
inc
sbb
xchg
add
movsl
add
push
mov
dec
sbb
add
repnz
nop
nop
jae
pop
add
cld
out
add
add
clc
repnz
nop
nop
jae
adc
in
les
mov
add
add
add
push
push
mov
xchg
ret
add
xchg
sub
add
add
push
pop
push
mov
xchg
ret
and
add
xlat
jecxz
ds
clc
repnz
nop
nop
jae
jecxz
add
pop
xor
nop
push
mov
leave
nop
jmp
pop
pop
add
clc
repnz
nop
nop
jae
add
add
add
pop
mov
clc
repnz
nop
nop
jae
stos
test
imul
pop
and
repnz
nop
nop
jae
sub
daa
jmp
je
clc
repnz
nop
nop
jae
add
and
push
mov
leave
nop
jmp
int
cld
add
icebp
mov
nop
push
mov
leave
nop
jmp
add
mov
out
and
jge
clc
repnz
nop
nop
jae
add
pop
push
clc
repnz
nop
nop
jae
add
out
int
add
xor
push
mov
xchg
ret
push
add
push
icebp
rcrl
iret
ds
push
mov
xchg
ret
add
add
sub
add
dec
cmp
nop
push
mov
leave
nop
jmp
push
cld
jmp
push
xchg
clc
repnz
nop
nop
jae
imul
add
call
push
mov
xchg
ret
hlt
sub
into
add
call
nop
push
mov
leave
nop
jmp
add
daa
jecxz
add
add
int3
lods
pop
clc
repnz
nop
nop
jae
add
stos
xchg
lds
add
nop
or
inc
nop
push
mov
leave
nop
jmp
add
sub
inc
pop
clc
repnz
nop
nop
jae
add
add
add
icebp
imul
in
add
clc
repnz
nop
nop
jae
inc
daa
sub
lock
sub
jae
push
mov
leave
nop
jmp
pop
mov
add
in
inc
add
add
jae
gs
nop
push
mov
leave
nop
jmp
push
add
adc
icebp
add
je
clc
repnz
nop
nop
jae
add
aas
push
mov
clc
repnz
nop
nop
jae
add
add
add
add
dec
cmp
push
mov
leave
nop
jmp
push
add
sub
sbb
mov
clc
repnz
nop
nop
jae
add
add
stos
jmp
mov
leave
nop
jmp
into
add
icebp
add
add
mov
add
and
add
and
addb
cmp
ret
add
mulb
add
add
fwait
clc
repnz
nop
nop
jae
test
in
sub
add
cli
in
ss
push
clc
repnz
nop
nop
jae
add
add
or
add
lcall
push
add
clc
repnz
nop
nop
jae
test
push
mov
xchg
ret
add
add
imul
aad
jg
clc
repnz
nop
nop
jae
ds
mov
nop
nop
jae
fiadds
add
pop
int
idivb
push
push
mov
xchg
ret
repz
sbb
add
sub
mov
xchg
ret
add
add
sar
mov
push
mov
xchg
ret
xchg
sub
sahf
xor
sti
lea
clc
repnz
nop
nop
jae
int
add
adc
add
std
pop
push
mov
xchg
ret
roll
icebp
pop
add
or
enter
xchg
ret
icebp
sub
sub
jne
mov
clc
repnz
nop
nop
jae
add
and
push
ret
rep
clc
repnz
nop
nop
jae
test
aas
add
add
jmp
cmp
push
mov
xchg
ret
cld
add
xlat
add
and
push
mov
leave
nop
jmp
xlat
add
add
mov
mov
xchg
ret
add
add
mov
clc
repnz
nop
nop
jae
roll
add
sbb
mov
cld
nop
nop
jae
add
add
add
jne
outsb
mov
add
adc
clc
repnz
nop
nop
jae
cmpb
inc
and
repnz
nop
nop
jae
test
into
jne
rorl
nop
nop
jae
add
pop
icebp
rol
fadds
add
jl
nop
push
mov
leave
nop
jmp
in
jne
mov
inc
push
adc
clc
repnz
nop
nop
jae
mov
fistpl
clc
repnz
nop
nop
jae
repz
mov
test
pop
nop
cmp
sbb
nop
jae
jmp
mov
clc
repnz
nop
nop
jae
jmp
testb
mov
nop
push
mov
leave
nop
jmp
fildll
into
xchg
add
add
repnz
nop
nop
jae
and
add
add
push
mov
xchg
ret
add
add
roll
push
add
arpl
repnz
nop
nop
jae
incl
add
add
jp
sub
add
xor
nop
pop
sub
repnz
nop
nop
jae
addl
add
nop
push
mov
leave
nop
jmp
test
add
jmp
add
add
int
roll
sub
mov
clc
repnz
nop
nop
jae
add
in
ljmp
cld
nop
nop
jae
push
add
add
add
push
nop
leave
and
nop
push
mov
leave
nop
jmp
mov
mulb
fistpl
nop
push
mov
leave
nop
jmp
add
fmulp
mov
push
xchg
mov
nop
push
mov
leave
nop
jmp
add
add
add
sarl
repnz
nop
nop
jae
lds
and
mov
jmp
sub
fildll
sub
add
add
std
popa
clc
repnz
nop
nop
jae
add
add
repz
add
fld1
clc
repnz
nop
nop
jae
add
jmp
mov
nop
push
mov
leave
nop
jmp
add
add
repz
clc
repnz
nop
nop
jae
test
add
in
xchg
mov
clc
repnz
nop
nop
jae
lds
add
fs
add
nop
nop
jae
add
sbb
mov
clc
repnz
nop
nop
jae
add
inc
in
push
adc
mov
clc
repnz
nop
nop
jae
xchg
add
add
clc
repnz
nop
nop
jae
sbb
add
sub
jns
sahf
or
add
add
imul
add
add
ds
repnz
nop
nop
jae
push
add
add
adcl
popa
clc
repnz
nop
nop
jae
shll
call
clc
repnz
nop
nop
jae
push
mov
add
cmpsl
pop
nop
push
mov
leave
nop
jmp
mov
jne
add
cld
jg
push
mov
xchg
ret
add
add
add
mov
add
nop
nop
jae
mov
inc
jmp
sub
repnz
nop
nop
jae
imul
daa
mov
clc
repnz
nop
nop
jae
add
xlat
add
mov
sub
repnz
nop
nop
jae
add
add
in
add
sbb
icebp
push
push
mov
xchg
ret
repz
add
sub
jge
push
mov
xchg
ret
adc
add
int
add
xchg
into
or
add
sbb
add
add
mov
add
jecxz
dec
push
mov
xchg
ret
imul
int
add
mov
testl
nop
push
mov
leave
nop
jmp
xchg
repz
add
repnz
nop
nop
jae
add
pop
add
in
leave
nop
jmp
out
xlat
add
clc
repnz
nop
nop
jae
mov
add
rolb
movsb
hlt
clc
repnz
nop
nop
jae
inc
shl
lret
loop
clc
repnz
nop
nop
jae
jmp
jne
out
imul
and
inc
add
int
add
add
add
lea
repnz
nop
nop
jae
push
jecxz
xchg
add
inc
add
push
rcrb
test
add
xchg
push
mov
xchg
ret
add
jecxz
add
stos
icebp
loopne
add
clc
repnz
nop
nop
jae
out
add
xlat
fsubr
jne
clc
repnz
nop
nop
jae
push
add
bound
add
clc
repnz
nop
nop
jae
add
jecxz
add
mov
mov
nop
push
mov
leave
nop
jmp
add
add
sub
add
add
daa
add
push
mov
xchg
ret
add
mov
in
mov
pop
mov
clc
repnz
nop
nop
jae
add
aas
add
add
clc
repnz
nop
nop
jae
incl
into
add
add
jnp
add
clc
repnz
nop
nop
jae
mov
sub
add
fld1
clc
repnz
nop
nop
jae
adc
adc
inc
add
nop
push
mov
leave
nop
jmp
hlt
add
and
sbb
lds
push
mov
leave
nop
jmp
add
add
nop
push
mov
leave
nop
jmp
add
add
div
nop
push
mov
leave
nop
jmp
pop
fildll
in
add
imul
repnz
nop
nop
jae
add
xchg
fistl
mov
xchg
ret
adc
out
mov
inc
mov
push
mov
xchg
ret
hlt
add
add
add
sub
ja
clc
repnz
nop
nop
jae
add
and
mov
scas
repnz
call
nop
jmp
add
add
jge
les
repnz
nop
nop
jae
add
add
add
add
mov
add
je
into
and
add
add
push
mov
xchg
ret
add
str
push
enter
clc
repnz
nop
nop
jae
add
add
std
test
push
mov
xchg
ret
add
sub
add
add
aaa
or
clc
repnz
nop
nop
jae
incl
mov
fistpl
clc
repnz
nop
nop
jae
add
imul
js
add
mov
shll
or
repnz
nop
nop
jae
add
rcrl
out
das
and
push
mov
xchg
ret
jecxz
add
add
cld
mov
add
mov
clc
repnz
nop
nop
jae
add
div
nop
push
mov
leave
nop
jmp
shll
lods
add
jns
clc
repnz
nop
nop
jae
add
test
add
int
add
ja
push
mov
xchg
ret
shl
inc
add
push
push
xchg
movzwl
clc
repnz
nop
nop
jae
cli
aas
add
jecxz
add
rclb
repnz
nop
nop
jae
sub
add
add
add
sbb
nop
jmp
add
add
push
mov
xchg
ret
adc
int
mov
mov
inc
in
mov
xchg
ret
addl
and
lds
stos
add
mov
sbb
push
clc
repnz
nop
nop
jae
cli
xchg
pop
int
addb
popa
call
clc
repnz
nop
nop
jae
add
add
clc
jo
mov
push
mov
xchg
ret
stos
in
add
into
add
pop
push
mov
xchg
ret
add
into
add
add
xlat
mov
add
xchg
sbb
jne
clc
repnz
nop
nop
jae
int
add
add
lea
in
push
or
mov
add
push
add
mov
add
jp
and
add
cmp
cld
nop
nop
jae
add
add
pop
ret
clc
repnz
nop
nop
jae
xchg
xlat
into
add
add
add
push
mov
xchg
ret
add
add
out
pop
push
mov
xchg
ret
add
daa
add
add
filds
xor
repnz
nop
nop
jae
add
out
add
mov
test
sbb
add
repnz
nop
nop
jae
cmp
pop
nop
push
mov
leave
nop
jmp
add
int
out
test
add
add
fimuls
cld
nop
nop
jae
add
add
add
add
lret
clc
repnz
nop
nop
jae
add
icebp
int
add
pusha
cmp
cld
nop
nop
jae
test
rcrl
repz
and
add
scas
xchg
inc
add
add
sub
inc
add
or
repnz
nop
nop
jae
add
add
jmp
rclb
jo
add
add
sub
and
add
add
addb
lods
add
gs
clc
repnz
nop
nop
jae
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
fs
clc
stos
add
clc
repnz
nop
nop
jae
push
add
lds
inc
clc
leave
shr
clc
repnz
nop
nop
jae
add
incl
add
nop
push
mov
leave
nop
jmp
add
ficoms
add
in
leave
nop
jmp
mov
jecxz
add
dec
imul
nop
jae
add
add
out
pop
mov
clc
repnz
nop
nop
jae
jecxz
xlat
add
jmp
push
mov
xchg
ret
aas
sbb
aas
jecxz
mov
add
call
clc
repnz
nop
nop
jae
mov
hlt
mov
sbb
mov
jp
jbe
clc
repnz
nop
nop
jae
cli
sbb
xchg
xchg
inc
add
add
jecxz
into
int
popa
push
push
mov
xchg
ret
adcl
mov
and
nop
push
mov
leave
nop
jmp
lcall
add
int
mov
clc
repnz
nop
nop
jae
icebp
add
push
add
sub
dec
nop
push
mov
leave
nop
jmp
add
add
add
add
pop
dec
pop
clc
repnz
nop
nop
jae
into
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
int
pop
cmp
nop
nop
jae
aas
add
out
add
sub
add
arpl
in
add
or
add
add
add
ljmp
mov
leave
nop
jmp
pcmpeqw
add
add
add
inc
clc
repnz
nop
nop
jae
int
add
xchg
and
add
add
fistl
mov
xchg
ret
add
adc
int
sub
neg
mov
clc
repnz
nop
nop
jae
push
add
add
and
call
leave
nop
jmp
stos
fistps
xchg
push
dec
xlat
rol
push
mov
xchg
ret
mov
lds
adc
rep
clc
repnz
nop
nop
jae
addb
int
sbb
dec
adc
mov
inc
add
int
imul
nop
jae
test
add
sbb
mov
sar
repnz
nop
nop
jae
add
jecxz
adc
fildl
cld
nop
nop
jae
lds
into
add
sub
call
nop
jmp
roll
mov
mov
nop
push
mov
leave
nop
jmp
add
add
adc
repnz
nop
nop
jae
add
add
add
nop
nop
jae
test
add
roll
add
add
clc
repnz
nop
nop
jae
and
sbb
icebp
push
mov
clc
repnz
nop
nop
jae
sub
in
daa
rep
clc
repnz
nop
nop
jae
into
stos
jecxz
add
int
fwait
clc
repnz
nop
nop
jae
fiadds
and
add
sarl
push
mov
leave
nop
jmp
push
add
int
pop
clc
repnz
nop
nop
jae
add
add
add
pop
add
add
pop
add
clc
repnz
nop
nop
jae
add
add
jmp
add
add
add
push
add
out
ret
inc
nop
push
mov
leave
nop
jmp
sub
fdivrp
add
add
add
shrl
sbb
clc
repnz
nop
nop
jae
mov
add
sub
add
add
push
mov
xchg
ret
add
adc
sldt
pusha
pop
add
clc
repnz
nop
nop
jae
adc
repnz
nop
nop
jae
aas
add
add
shl
nop
push
mov
leave
nop
jmp
add
add
adc
push
mov
xchg
ret
sub
add
add
xlat
add
rorl
repnz
nop
nop
jae
aas
mov
pop
mov
clc
repnz
nop
nop
jae
sub
fsubrp
add
in
imul
nop
push
mov
leave
nop
jmp
add
out
push
add
pop
mov
clc
repnz
nop
nop
jae
into
in
into
icebp
add
dec
mov
clc
repnz
nop
nop
jae
addb
add
mov
nop
nop
jae
add
add
add
xchg
je
clc
repnz
nop
nop
jae
adc
inc
stos
mov
clc
repnz
nop
nop
jae
in
add
push
adc
nop
jae
add
add
cmp
nop
jae
add
daa
add
add
add
clc
repnz
nop
nop
jae
lds
add
scas
addl
cld
sar
sub
add
ljmp
inc
add
and
mov
rorb
cld
nop
nop
jae
mov
add
xlat
add
loopne
test
add
loope
inc
add
mov
add
jne
mov
test
add
call
cld
nop
nop
jae
aas
test
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
sbbl
mov
clc
repnz
nop
nop
jae
push
lds
sbb
clc
clc
repnz
nop
nop
jae
testb
das
add
clc
repnz
nop
nop
jae
add
xchg
jmp
lds
mov
xchg
ret
add
ds
add
inc
push
push
mov
xchg
ret
out
add
add
jecxz
sarb
clc
repnz
nop
nop
jae
pop
add
inc
sub
sbb
repz
repnz
nop
nop
jae
add
iret
add
nop
push
mov
leave
nop
jmp
push
fiadds
add
pop
xor
clc
repnz
nop
nop
jae
add
add
add
into
or
add
add
rcrl
cld
nop
nop
jae
add
add
push
mov
xchg
ret
add
aas
daa
lds
mov
shl
clc
repnz
nop
nop
jae
cld
xchg
shll
xchg
cli
cltd
push
nop
push
mov
leave
nop
jmp
daa
push
add
sbb
pop
add
pop
push
mov
movl
add
add
in
add
dec
clc
repnz
nop
nop
jae
and
add
popl
nop
push
mov
leave
nop
jmp
add
xchg
stos
jne
hlt
xchg
subl
push
mov
xchg
ret
add
xchg
push
sub
sbb
out
clc
repnz
nop
nop
jae
and
repz
jle
add
and
add
add
add
ljmp
std
clc
repnz
nop
nop
jae
add
fistpl
clc
repnz
nop
nop
jae
push
adc
je
add
clc
repnz
nop
nop
jae
and
push
mov
clc
repnz
nop
nop
jae
add
add
in
leave
nop
jmp
add
rol
mov
clc
repnz
nop
nop
jae
out
sbb
nop
leave
push
nop
push
mov
leave
nop
jmp
mov
add
addb
nop
push
mov
leave
nop
jmp
add
add
inc
lea
push
mov
xchg
ret
push
add
repz
mov
add
push
push
mov
xchg
ret
stos
filds
add
xchg
add
adc
repnz
nop
nop
jae
add
add
add
push
push
xor
push
mov
xchg
ret
add
imul
in
loopne
shr
clc
repnz
nop
nop
jae
negb
push
add
pop
push
mov
xchg
ret
inc
add
mov
add
sub
push
mov
xchg
ret
add
add
xchg
xchg
imul
jae
add
sub
xchg
xlat
vmovd
add
add
incl
add
add
jmp
add
add
inc
add
hlt
add
andl
sbb
clc
repnz
nop
nop
jae
aas
mov
rcll
and
nop
nop
jae
pop
add
test
pop
nop
push
mov
leave
nop
jmp
in
adc
add
add
push
adc
jns
push
mov
xchg
ret
sub
jecxz
add
inc
xlat
add
add
call
add
nop
push
mov
leave
nop
jmp
pop
add
and
call
nop
jae
int
add
add
clc
repnz
nop
nop
jae
pop
add
jmp
dec
or
aas
fistpll
add
in
daa
push
nop
push
mov
leave
nop
jmp
add
roll
add
adc
push
push
mov
xchg
ret
add
add
and
add
fistpl
clc
repnz
nop
nop
jae
add
pop
push
pop
add
adcl
sub
add
aas
daa
xchg
hlt
add
add
repnz
nop
nop
jae
add
xlat
push
add
add
jae
jl
inc
add
and
xchg
add
mov
cmp
push
mov
leave
nop
jmp
add
add
pop
xchg
inc
dec
test
nop
push
mov
leave
nop
jmp
inc
add
jmp
push
shl
sbb
jno
inc
add
mov
jecxz
pop
clc
repnz
nop
nop
jae
mov
add
add
add
clc
repnz
nop
nop
jae
sub
xchg
add
add
pop
pop
push
push
mov
xchg
ret
add
add
xlat
imul
jae
jmp
jmp
ret
clc
repnz
nop
nop
jae
int
add
mov
add
clc
repnz
nop
nop
jae
add
add
pop
jmp
adc
repnz
nop
nop
jae
jecxz
test
add
add
pushf
jae
add
add
add
push
mov
ja
ss
push
mov
leave
nop
jmp
add
jecxz
sbb
add
mov
push
mov
xchg
ret
sub
icebp
add
icebp
xlat
jmp
adc
nop
push
mov
leave
nop
jmp
add
add
mov
leave
nop
jmp
fidivs
cld
mov
add
repnz
nop
nop
jae
push
add
add
push
push
mov
xchg
ret
add
jecxz
add
add
xchg
repz
repnz
nop
nop
jae
add
sub
add
sbb
mov
push
nop
push
mov
leave
nop
jmp
add
imul
repnz
nop
nop
jae
add
add
add
add
jmp
outsb
inc
add
cli
push
sbb
add
nop
push
mov
leave
nop
jmp
add
rol
icebp
mov
mov
leave
nop
jmp
in
cld
int
add
addl
jmp
add
mov
pop
push
icebp
in
mov
in
repz
add
jae
jecxz
add
jecxz
mov
adc
lods
push
mov
xchg
ret
add
add
decl
add
icebp
mov
clc
repnz
nop
nop
jae
ljmp
adc
add
or
add
cld
nop
nop
jae
sbb
inc
add
add
add
jg
test
add
add
repnz
nop
nop
jae
add
and
xor
nop
push
mov
leave
nop
jmp
in
icebp
add
gs
push
mov
xchg
ret
add
add
in
addb
pop
imul
clc
repnz
nop
nop
jae
add
add
add
testb
out
rclb
jle
and
cmpl
add
clc
clc
inc
divb
in
ret
mov
icebp
pop
icebp
add
add
add
xchg
test
add
mov
nop
push
mov
leave
nop
jmp
hlt
sub
repz
push
add
add
cmp
add
jmp
add
insb
mov
ret
outsb
and
repnz
nop
nop
jae
push
add
cli
and
imull
insb
xor
clc
repnz
nop
nop
jae
add
mov
loopne
mov
clc
repnz
nop
nop
jae
icebp
add
pop
add
dec
and
push
mov
xchg
ret
jecxz
addl
add
repnz
nop
nop
jae
add
test
add
icebp
jmp
sub
out
stos
sub
add
add
add
add
add
add
repnz
nop
nop
jae
daa
add
pushf
xchg
dec
inc
add
push
mov
xchg
ret
add
hlt
add
movsb
add
test
loopne
cmp
add
clc
repnz
nop
nop
jae
add
pop
add
mov
aad
add
clc
repnz
nop
nop
jae
incl
add
dec
xorl
clc
repnz
nop
nop
jae
add
cmp
jle
mov
nop
nop
jae
and
cld
test
add
jecxz
int
clc
repnz
nop
nop
jae
jne
add
add
add
add
and
clc
repnz
nop
nop
jae
sbb
in
push
dec
add
clc
repnz
nop
nop
jae
add
add
aas
xor
arpl
repnz
nop
nop
jae
add
add
add
push
clc
repnz
nop
nop
jae
icebp
xlat
jecxz
in
int3
sbb
test
call
nop
jmp
xchg
mov
repnz
nop
nop
jae
adc
sbb
push
nop
push
mov
leave
nop
jmp
add
sub
push
int
mov
clc
repnz
nop
nop
jae
mov
push
inc
add
push
mov
xchg
ret
into
pushl
push
clc
repnz
nop
nop
jae
add
mov
add
push
lds
add
push
add
add
add
lea
clc
repnz
nop
nop
jae
sbb
stos
add
jo
out
dec
movzwl
clc
repnz
nop
nop
jae
add
add
lret
add
clc
repnz
nop
nop
jae
xchg
add
inc
add
clc
repnz
nop
nop
jae
jecxz
lds
add
shl
insl
ror
push
mov
xchg
ret
jmp
add
mov
clc
repnz
nop
nop
jae
and
test
add
add
repnz
nop
nop
jae
add
mov
pusha
nop
push
mov
leave
nop
jmp
mov
sbb
add
sub
out
and
add
xchg
push
mov
xchg
ret
add
xchg
add
out
mov
clc
repnz
nop
nop
jae
aas
add
or
call
nop
jae
pop
icebp
add
add
add
jmp
add
add
mov
xchg
adc
mov
cld
nop
nop
jae
add
sub
call
mov
clc
repnz
nop
nop
jae
sbb
daa
add
add
and
clc
repnz
nop
nop
jae
jmp
rorl
inc
add
add
stos
repz
xlat
add
arpl
clc
repnz
nop
nop
jae
add
int
pop
sub
clc
repnz
nop
nop
jae
add
cli
ds
jo
add
pop
mov
clc
repnz
nop
nop
jae
sbb
add
into
imul
dec
add
add
sub
push
sub
push
dec
mov
clc
repnz
nop
nop
jae
cli
cld
test
pmulhw
mov
xchg
ret
and
add
add
out
add
cmp
mov
nop
push
mov
leave
nop
jmp
sldt
imul
add
mov
nop
push
mov
leave
nop
jmp
jecxz
add
xchg
scas
push
clc
repnz
nop
nop
jae
add
add
add
xlat
cli
jno
pushl
nop
push
mov
leave
nop
jmp
sub
add
shll
inc
add
add
subl
sti
clc
repnz
nop
nop
jae
aas
add
rcr
push
clc
repnz
nop
nop
jae
mov
add
nop
push
mov
leave
nop
jmp
add
add
repz
push
add
xor
mov
cld
nop
nop
jae
jecxz
roll
mov
cld
nop
nop
jae
add
adcl
fdivr
repnz
nop
nop
jae
add
add
stos
add
push
mov
repnz
nop
nop
jae
add
add
mov
stos
push
clc
repnz
nop
nop
jae
mov
add
adc
add
repnz
nop
nop
jae
add
adc
jne
clc
repnz
nop
nop
jae
add
add
lahf
add
push
mov
xchg
ret
push
jmp
add
pop
pop
clc
repnz
nop
nop
jae
add
mov
and
cld
add
xchg
clc
repnz
nop
nop
jae
jne
jecxz
add
add
clc
nop
push
mov
leave
nop
jmp
roll
xchg
inc
xor
test
clc
repnz
nop
nop
jae
add
and
aas
adc
nop
jmp
test
sbb
add
and
add
push
push
mov
xchg
ret
jmp
inc
add
add
push
clc
repnz
nop
nop
jae
add
add
icebp
add
or
clc
repnz
nop
nop
jae
add
add
sti
test
nop
push
mov
leave
nop
jmp
add
mov
sub
into
mov
repnz
nop
nop
jae
add
add
add
mov
clc
repnz
nop
nop
jae
mov
add
fwait
push
mov
xchg
ret
in
add
sub
clc
add
add
ret
shl
push
mov
xchg
ret
mov
hlt
xchg
filds
mov
push
mov
xchg
ret
jecxz
adc
add
add
dec
lods
clc
repnz
nop
nop
jae
inc
sub
and
add
mov
jne
clc
repnz
nop
nop
jae
in
int
add
mov
inc
sbb
fnstcw
add
sub
daa
add
ficomps
in
leave
nop
jmp
pop
adc
jmp
mov
clc
repnz
nop
nop
jae
lds
add
add
jmp
and
push
mov
xchg
ret
add
add
bndldx
les
repnz
nop
nop
jae
add
jmp
pop
push
mov
xchg
ret
add
hlt
in
test
add
out
fstpl
repnz
nop
nop
jae
push
add
add
add
adc
fistpl
clc
repnz
nop
nop
jae
sub
sub
add
fcmovnu
sbb
push
mov
xchg
ret
add
add
add
add
push
mov
xchg
ret
inc
add
push
add
add
push
push
mov
xchg
ret
into
add
adc
addl
inc
xor
clc
repnz
nop
nop
jae
pop
and
popa
add
nop
push
mov
leave
nop
jmp
icebp
add
add
add
mov
xchg
ret
add
jmp
in
test
in
call
nop
jmp
add
add
orb
cld
nop
nop
jae
adc
add
aas
push
push
mov
xchg
ret
roll
inc
add
sub
icebp
or
add
clc
repnz
nop
nop
jae
out
add
cli
jae
add
add
repnz
nop
nop
jae
add
adc
ret
clc
repnz
nop
nop
jae
add
stos
int
adc
sub
add
push
mov
xchg
ret
add
add
cli
add
and
add
gs
nop
push
mov
leave
nop
jmp
add
add
push
mov
leave
nop
jmp
push
inc
add
icebp
clc
repnz
nop
nop
jae
sub
test
add
fbstp
clc
repnz
nop
nop
jae
add
sldt
jecxz
dec
or
add
pop
sub
clc
repnz
nop
nop
jae
int
add
movl
add
mov
add
sub
add
mov
xchg
ret
jecxz
add
add
cld
mov
add
clc
repnz
nop
nop
jae
add
add
mov
movl
nop
nop
jae
addl
and
pmuludq
clc
repnz
nop
nop
jae
test
sub
add
xor
sar
cld
nop
nop
jae
repz
add
clc
repnz
nop
nop
jae
fiadds
filds
add
dec
add
mov
xchg
ret
add
push
int
add
sub
or
add
sar
cld
nop
nop
jae
add
imul
add
add
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
and
and
dec
in
mov
push
mov
xchg
ret
xchg
in
cli
out
add
push
mov
xchg
ret
jmp
add
shrl
inc
loopne
mov
xchg
ret
inc
sub
add
mov
pop
pop
push
mov
xchg
ret
pop
add
add
add
in
add
mov
nop
nop
jae
add
daa
add
hlt
jne
cmp
cld
nop
nop
jae
mov
add
jne
ret
add
mov
pop
clc
repnz
nop
nop
jae
jne
out
fiadds
test
push
clc
repnz
nop
nop
jae
add
add
icebp
add
push
mov
xchg
ret
add
add
mov
add
adc
ss
call
inc
add
add
daa
mov
subl
add
nop
nop
jae
push
int
pop
add
add
dec
mov
add
cmp
mov
leave
nop
jmp
sub
and
add
jg
les
nop
push
mov
leave
nop
jmp
sub
xlat
add
mov
je
xor
push
mov
xchg
ret
add
add
test
add
mov
clc
repnz
nop
nop
jae
aas
push
add
sub
dec
add
clc
repnz
nop
nop
jae
add
add
sbb
inc
push
pushl
push
mov
xchg
ret
test
add
xchg
sbb
bound
sbb
cmp
ret
inc
daa
add
add
add
add
fld1
clc
repnz
nop
nop
jae
sub
add
push
add
mov
dec
push
clc
repnz
nop
nop
jae
sub
add
out
ret
inc
cmp
mov
xchg
ret
add
add
loopne
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
jmp
add
push
mov
addr16
lods
jne
add
dec
pop
adc
mov
add
mov
xor
push
mov
xchg
ret
pop
add
add
add
aas
int
inc
push
mov
xchg
ret
jecxz
add
stos
roll
dec
cmp
nop
push
mov
leave
nop
jmp
add
mov
mov
nop
push
mov
leave
nop
jmp
mov
hlt
sub
mov
clc
repnz
nop
nop
jae
in
sub
aad
call
nop
jmp
lds
subl
pop
clc
push
mov
xchg
ret
and
jmp
jmp
clc
repnz
nop
nop
jae
stos
hlt
add
add
int
xchg
repnz
nop
nop
jae
jmp
clc
repnz
nop
nop
jae
sldt
mov
call
mov
leave
nop
jmp
add
add
add
sub
arpl
push
mov
leave
nop
jmp
cli
out
add
add
clc
repnz
nop
nop
jae
pop
int
pop
sbb
push
mov
clc
repnz
nop
nop
jae
add
pop
add
add
leave
call
clc
repnz
nop
nop
jae
add
inc
or
repnz
nop
nop
jae
int
jne
sub
mov
add
fldcw
push
mov
xchg
ret
negb
add
in
push
add
mov
mov
leave
nop
jmp
cld
stos
sub
inc
jecxz
pop
mov
nop
push
mov
leave
nop
jmp
mov
add
adc
xbegin
jae
aas
cli
add
jmp
lret
nop
push
mov
leave
nop
jmp
jecxz
verw
add
inc
push
mov
xchg
ret
add
add
push
aas
add
in
nop
mov
mov
xchg
ret
add
sub
bswap
int
int
call
jl
inc
add
lds
add
add
add
movzwl
nop
push
mov
leave
nop
jmp
add
add
into
sub
clc
repnz
nop
nop
jae
add
add
sldt
fmulp
out
add
add
repnz
nop
nop
jae
repz
add
repnz
nop
nop
jae
repz
add
dec
mov
push
mov
xchg
ret
add
adc
mov
add
add
push
add
sbb
repnz
nop
nop
jae
sldt
mov
nop
push
mov
leave
nop
jmp
add
mov
icebp
add
sub
lea
clc
repnz
nop
nop
jae
cld
add
add
add
jne
clc
repnz
nop
nop
jae
add
jne
icebp
add
dec
nop
push
mov
leave
nop
jmp
sub
add
int
sub
push
mov
sti
add
add
mov
cmp
add
add
clc
repnz
nop
nop
jae
notb
add
xchg
pop
add
cmp
nop
push
mov
leave
nop
jmp
add
sbb
push
clc
repnz
nop
nop
jae
sub
add
jecxz
jae
push
add
push
mov
leave
nop
jmp
add
sub
sar
repnz
nop
nop
jae
add
cld
add
add
add
xor
clc
repnz
nop
nop
jae
add
sub
test
xchg
add
add
cmp
nop
push
mov
leave
nop
jmp
jmp
add
es
clc
repnz
nop
nop
jae
add
imul
clc
repnz
nop
nop
jae
jo
push
addb
ss
rep
clc
repnz
nop
nop
jae
add
add
add
jecxz
inc
add
add
shr
sub
out
test
clc
repnz
nop
nop
jae
add
sub
fldl
shrb
cmp
ret
mov
lds
icebp
add
cmpsl
mov
clc
repnz
nop
nop
jae
sub
add
add
clc
repnz
nop
nop
jae
jne
mov
add
inc
mov
cld
nop
nop
jae
mov
add
lds
push
mov
leave
nop
jmp
roll
mov
add
add
idiv
incl
add
sub
add
add
sub
mov
sbb
push
mov
xchg
ret
repz
add
push
mov
xchg
ret
addl
cli
cld
icebp
add
mov
push
mov
scas
cld
add
or
outsb
fadd
in
sbb
jl
add
mov
clc
repnz
nop
nop
jae
add
add
inc
mov
push
mov
xchg
ret
repz
sub
add
fs
adc
clc
repnz
nop
nop
jae
add
add
add
repnz
push
nop
push
mov
leave
nop
jmp
mov
xchg
cld
test
loopne
clc
repnz
nop
nop
jae
cli
add
push
repnz
nop
nop
jae
add
and
test
mov
je
clc
repnz
nop
nop
jae
and
add
pop
call
clc
repnz
nop
nop
jae
mov
fld1
clc
repnz
nop
nop
jae
add
mov
pushl
clc
repnz
nop
nop
jae
add
int
pop
mov
cmpsb
xchg
inc
add
jmp
fsubrp
incl
push
push
mov
xchg
ret
add
push
pop
icebp
mov
jb
stos
add
leave
add
clc
repnz
nop
nop
jae
roll
out
add
clc
repnz
nop
nop
jae
add
add
jmp
clc
repnz
nop
nop
jae
mov
out
add
pushl
nop
push
mov
leave
nop
jmp
add
cld
enter
fistpl
push
mov
xchg
ret
add
add
icebp
sub
aas
cmp
nop
push
mov
leave
nop
jmp
add
cmpb
push
push
mov
xchg
ret
push
jmp
and
add
clc
repnz
nop
nop
jae
shll
shr
test
clc
repnz
nop
nop
jae
add
jmp
nop
push
mov
leave
nop
jmp
push
add
add
out
mov
test
push
mov
leave
nop
jmp
icebp
icebp
stos
add
repnz
nop
nop
jae
add
add
add
nop
push
mov
leave
nop
jmp
add
dec
mov
incl
nop
push
mov
leave
nop
jmp
adc
push
clc
repnz
nop
nop
jae
add
cwtl
sbb
mov
xchg
ret
add
jmp
sub
sbb
sar
repnz
nop
nop
jae
add
int
inc
add
test
add
add
clc
repnz
nop
nop
jae
mov
pushl
je
sub
repnz
nop
nop
jae
add
aad
push
mov
xchg
ret
jmp
add
add
add
add
clc
repnz
nop
nop
jae
add
jne
clc
repnz
nop
nop
jae
add
cmp
clc
repnz
nop
nop
jae
lldt
xor
xchg
aas
sub
push
mov
xchg
ret
add
mov
mov
add
add
adc
sbb
push
clc
repnz
nop
nop
jae
hlt
jecxz
add
add
clc
repnz
nop
nop
jae
push
add
inc
add
rcrl
leave
nop
jmp
add
mov
adc
in
add
cmp
mov
xchg
ret
add
ds
add
add
jne
push
push
mov
xchg
ret
add
add
testb
add
pusha
push
mov
xchg
ret
cli
xchg
add
add
add
pop
pop
clc
repnz
nop
nop
jae
in
push
cmp
jecxz
add
add
dec
repnz
cmp
nop
push
mov
leave
nop
jmp
add
mov
add
xlat
pop
clc
repnz
nop
nop
jae
add
fdivp
add
push
mov
xchg
ret
xlat
add
add
ud0
clc
repnz
nop
nop
jae
add
aas
int
mov
test
repnz
nop
nop
jae
out
sbb
mov
add
sub
add
add
mov
aad
clc
repnz
nop
nop
jae
add
push
add
repnz
nop
nop
jae
jecxz
pop
add
add
ret
addr16
clc
repnz
nop
nop
jae
jecxz
add
add
add
js
pusha
push
mov
xchg
ret
xchg
fidivrs
jecxz
add
xorl
nop
nop
jae
add
pop
rorb
cld
nop
nop
jae
aas
sub
sub
xchg
push
cld
sbb
push
mov
leave
nop
jmp
mov
int
icebp
add
clc
repnz
nop
nop
jae
add
add
test
pop
div
movzwl
clc
repnz
nop
nop
jae
adc
xchg
add
jne
mov
adc
repnz
nop
nop
jae
pop
jmp
add
aam
lea
clc
repnz
nop
nop
jae
add
add
cli
mov
push
clc
repnz
nop
nop
jae
lds
test
add
push
or
add
jmp
clc
repnz
nop
nop
jae
inc
add
add
add
sbb
mov
clc
repnz
nop
nop
jae
mov
daa
icebp
sub
sub
mov
mov
nop
push
mov
leave
nop
jmp
out
add
out
add
cmc
jne
clc
repnz
nop
nop
jae
adc
jmp
mov
leave
nop
jmp
push
add
testb
or
pop
push
mov
xchg
ret
mov
hlt
pop
jecxz
cmp
push
mov
leave
nop
jmp
add
cli
add
jne
add
repnz
nop
nop
jae
mov
call
fwait
clc
repnz
nop
nop
jae
mov
add
add
add
fildll
sub
repnz
nop
nop
jae
add
sub
into
negb
add
clc
repnz
nop
nop
jae
add
loope
mov
push
mov
xchg
ret
hlt
inc
push
add
add
push
mov
push
mov
xchg
ret
sub
add
mov
out
mov
mov
xchg
ret
add
add
add
repz
nop
push
mov
leave
nop
jmp
add
push
add
add
xor
clc
repnz
nop
nop
jae
push
xlat
fidivs
clc
repnz
nop
nop
jae
add
push
add
xlat
repz
push
mov
xchg
ret
add
push
hlt
xchg
jecxz
shrb
mov
sub
add
add
aaa
test
add
add
add
add
or
add
sbb
lret
xchg
jge
inc
insl
loop
orl
add
enter
add
je
mov
movsl
repz
mov
iret
inc
into
xchg
mov
loop
sub
add
test
add
and
popa
xchg
movsb
add
adc
fmull
add
mov
add
sbb
cmp
lods
call
pop
mov
movsb
add
push
sub
add
add
cmp
add
add
pop
and
pop
aaa
pushf
pop
pop
add
ljmp
push
sbb
add
add
xor
dec
mov
sbb
fsubs
int
add
add
jae
pop
jle
lods
add
mov
add
fcmove
fsubr
in
add
dec
dec
mov
xor
mov
add
add
lea
jne
push
mov
and
mov
xor
stos
adc
push
cmpsb
add
jle
dec
loop
xchg
add
ret
cld
mov
xchg
loop
imul
dec
push
sbb
das
mov
add
push
test
fistpl
add
fs
xchg
mov
fidivl
pusha
mov
cmp
xchg
mov
add
mov
add
add
imul
mov
iret
sbb
add
aad
out
mov
sarl
and
add
add
mov
add
sbb
add
ja
inc
lock
pop
pop
iret
flds
addb
xchg
jmp
inc
or
add
icebp
lock
mov
inc
jnp
push
add
enter
adc
cmp
jne,pt
push
adc
movsl
int3
and
push
sbb
pop
popa
add
add
cmc
dec
add
jbe
insb
mov
outsl
stos
add
add
out
sub
cli
sub
cmp
mov
jmp
stc
sub
add
add
add
xchg
mov
pusha
pop
addb
mov
aas
jae
add
add
mov
add
add
push
subl
test
add
and
push
int
adc
mov
int
lods
add
outsb
test
roll
mov
add
add
arpl
enter
add
sub
add
test
add
cmpsl
push
pop
inc
cwtl
ret
add
add
mov
add
add
sub
cltd
mov
popf
cmpl
fsubrs
mov
adc
cmp
in
fstl
adc
add
stc
mov
out
cmp
mov
cmp
adc
push
adc
add
outsl
add
jmp
call
movsb
add
sub
add
and
mov
add
add
xchg
icebp
adc
or
bound
xor
inc
addr16
fisttps
xchg
inc
mov
push
mov
in
and
add
add
mov
xchg
cmp
mov
add
ja
add
fnstsw
push
add
sub
add
arpl
sub
add
add
cmp
mov
in
dec
or
add
repnz
stos
int3
fwait
sbb
lahf
icebp
aad
fdivrl
push
add
add
or
fistps
mov
add
push
sub
add
push
lahf
mov
add
das
adc
push
pop
cmp
dec
jmp
clc
loopne
lahf
dec
jge
mov
inc
push
sub
add
inc
mov
add
xor
into
add
add
adc
and
add
add
cmp
rcll
imul
imul
stc
mov
jo
cmp
lahf
fnstenv
jbe
insb
mov
cmp
add
jns
subl
outsb
rolb
lea
pop
or
add
addb
shlb
add
fildl
leave
mov
add
sub
add
imul
inc
faddl
sbb
mov
cmp
out
pop
jae
mov
add
jl
test
jmp
pop
stos
add
shll
data16
pop
scas
push
arpl
adc
popa
jnp
addr16
pusha
add
loop
xlat
shr
push
add
cmp
mov
add
les
add
lock
sub
add
inc
adc
sub
jnp
cmc
push
add
movsb
add
push
lret
loop
push
ret
add
loopne
add
add
add
jg
int3
mov
push
push
loop
loopne
or
add
add
rorl
add
outsl
loope
add
inc
gs
pmuludq
icebp
aaa
int
in
inc
ds
dec
dec
int
inc
and
or
add
cwtl
sbb
xlat
outsb
pop
out
lcall
and
add
pop
fidivs
jl
hlt
pop
enter
scas
push
cmc
sti
push
add
and
add
in
test
add
stc
sbb
dec
adc
add
sub
add
cmp
jb
movl
dec
ljmp
sbb
add
push
inc
inc
in
pop
lods
test
add
imul
jle
or
xor
and
add
jns
cmp
push
pop
out
repnz
int
push
dec
mov
add
pop
mov
add
in
pop
repz
dec
push
cltd
and
add
lds
out
pusha
shll
js
add
add
push
add
je
add
shlb
or
xlat
push
add
rcrb
pop
mov
add
jl
add
add
nop
mov
jl
into
push
add
imul
inc
out
rol
and
insl
ficoms
jb
fcomps
cmc
int
add
sbb
lds
push
call
sbb
mov
fs
cmp
add
iret
lods
mov
add
mov
sbb
add
mov
ljmp
pop
cmp
loopne
lods
add
test
add
add
sub
add
add
fisubrs
iret
outsl
add
add
das
adcl
pusha
ss
addb
lods
add
lock
add
pop
or
add
add
lret
add
gs
mov
add
or
add
add
lea
pop
lea
ljmp
add
add
xlat
xor
test
movsb
add
xor
repz
push
adcl
call
mov
xor
add
hlt
inc
rclb
pop
push
push
in
outsl
addb
test
adc
push
mov
stos
add
das
imul
enter
fistps
les
add
in
push
sbb
divl
pushf
jg
xchg
mov
push
lock
or
add
pop
das
in
popf
dec
loopne
mov
sar
ficompl
add
lcall
or
add
or
add
mov
add
lcall
test
sbb
jbe
push
or
les
add
into
mov
add
or
mov
add
rcrl
int
mov
mov
addr16
fisubrl
sbb
add
pop
lds
add
add
xor
pop
dec
iret
and
add
pop
push
cld
push
cmpsl
inc
fwait
dec
inc
mov
add
inc
push
pop
lods
data16
ret
enter
xor
stc
fiaddl
add
add
push
dec
adc
cltd
jp
xchg
sbb
rcrl
imul
jb
outsb
daa
mov
loop
mulb
xchg
pop
sahf
adc
dec
addb
int3
adc
push
sbb
add
aaa
and
add
add
dec
cwtl
adc
mov
add
add
jb
sarb
add
lea
mov
or
sbb
or
add
adc
push
mov
add
repnz
add
outsl
lret
adc
and
add
mov
arpl
stos
std
fiaddl
cltd
cmp
int
mov
inc
pop
adc
and
jmp
or
add
and
imul
or
add
shlb
lahf
sub
add
add
loop
ljmp
push
leave
stos
fimuls
jne
icebp
inc
ljmp
cmpl
outsb
push
add
add
inc
aaa
inc
inc
push
dec
add
add
adc
daa
fxch
or
add
inc
insb
lods
push
add
movsl
jns
jmp
mov
xchg
xor
jae
cmp
pusha
out
and
add
add
mov
jg
subl
sub
add
les
push
scas
adc
xor
cmpsl
out
pop
mov
insb
adc
ficompl
add
add
add
cmp
jp
flds
add
pop
fistpl
sbb
in
xchg
ret
push
movb
jno
add
ja
adc
add
jecxz
mov
add
out
leave
jbe
sbb
add
das
and
add
adcl
cmpsl
mov
ss
jo
mov
add
add
add
dec
adc
push
in
add
pop
fwait
fstpl
out
pop
fadd
inc
sar
add
addr16
mov
add
xor
sti
push
add
shll
inc
add
add
test
add
mov
mov
add
out
clc
push
outsb
cmpsb
add
add
add
jl
xor
pop
imul
mov
pop
stos
pusha
pop
mov
cwtl
outsl
into
je
insl
shrl
pushf
or
add
adc
sub
fdiv
push
addr16
fdivr
orl
add
cwtl
frstor
push
repnz
ljmp
mov
ret
mov
add
mov
shll
push
fdivs
cwtl
add
add
mov
ja
gs
fmulp
jp
add
add
add
ljmp
icebp
sbb
jo
add
xchg
call
orl
rolb
add
fdivp
sub
add
cli
mov
pop
sub
add
xchg
or
xchg
addb
arpl
push
sbb
inc
mov
mov
add
loop
add
out
cld
adc
add
call
or
mov
mov
add
fcomps
dec
insl
adc
push
mov
loopne
lds
push
loop
or
add
mov
outsb
push
gs
add
xchg
dec
out
mov
add
add
lods
add
popl
xchg
in
inc
test
add
fdivrs
ljmp
push
pop
xor
aas
xchg
adc
xchg
mov
inc
sbb
pop
movsl
lock
add
jle
call
adc
mov
adc
scas
add
shr
lea
add
mov
insb
adc
add
xchg
jge
xchg
dec
sub
add
pop
lds
add
js
movsl
and
push
sbb
fwait
adc
add
xor
out
out
fwait
push
in
sbb
jecxz
mov
inc
xchg
add
mov
add
pop
addb
nop
mov
add
jmp
shll
cmp
in
lods
add
fisttpl
add
add
and
addr16
push
data16
mov
add
inc
pop
clc
lods
add
in
add
push
int3
mov
add
xor
xchg
add
and
add
stos
sub
fsubl
adc
notl
lcall
das
repnz
daa
repz
gs
mov
xchg
pushf
push
cmpsb
add
in
fld
mov
ljmp
inc
into
adc
add
sbb
das
fs
ret
aaa
loope
stos
add
mov
add
aam
pop
jae
mov
pusha
insl
notl
outsl
jnp
lret
add
aaa
addb
pop
jge
xor
add
insl
cmpsl
sbb
lods
add
int3
and
sub
add
mov
or
add
ret
pop
std
or
jmp
cmp
jp
inc
sahf
and
add
xchg
adc
lahf
jns
call
dec
xor
add
xor
add
mov
xor
mov
push
add
add
cmp
test
add
cmp
out
add
jmp
sti
sbb
mov
stos
add
in
movsl
push
push
dec
and
add
mov
add
dec
hlt
pop
pop
mov
add
outsl
add
add
incl
jo
mov
aam
lock
fsubl
or
add
mov
mov
bound
add
add
add
shrl
and
inc
push
aaa
xor
adc
mov
mov
sti
inc
idivb
mov
mov
pop
outsb
sbb
mov
add
mov
add
add
pusha
push
sbb
mov
add
sub
dec
push
ficoml
sbb
stc
push
cmpsl
push
sub
xor
push
in
sbb
add
mov
pop
outsl
outsl
pop
imul
pop
testb
cmovnp
add
nop
push
jl
jp
add
sarb
add
inc
push
add
aaa
icebp
jnp
dec
in
mov
push
fidivrs
cmpsl
xor
mov
jmp
jne
cmc
pushf
je
mov
add
arpl
jae
jne
in
sub
loopne
iret
cmp
pusha
adc
loop
add
or
add
add
jo
sub
add
lods
add
push
mov
aas
pop
sub
push
cmpl
stos
add
clc
data16
into
push
jecxz
mov
sub
mov
add
cmp
popa
push
mov
add
mov
add
push
add
add
test
add
add
adc
and
add
icebp
push
sub
add
repnz
mov
add
mov
add
fwait
add
add
add
outsb
iret
xlat
pop
mov
mov
xor
jno
mov
lock
push
add
cmc
addl
jns
cli
cmpl
adc
mov
add
ljmp
add
pop
imull
sbb
iret
and
add
add
push
sub
add
add
push
jge
jns
sub
add
hlt
sub
mov
add
add
addr16
pusha
and
add
inc
cltd
enter
add
pop
mov
add
push
inc
push
mov
add
xor
in
out
ds
aaa
mov
fstpl
int3
stc
cmpsb
add
ret
js
xchg
lret
or
add
add
lods
and
add
test
add
clc
ljmp
add
cmc
and
pop
mov
dec
sub
add
jl
pop
call
pop
cmp
mov
mov
add
add
add
pop
sub
mov
pop
xchg
dec
popf
adc
jb
add
mov
cmpsl
inc
lret
jg
pop
mov
or
add
add
jl
mov
or
hlt
cmp
add
add
add
add
adc
inc
imull
imull
dec
stc
outsl
jbe
leave
in
add
sub
add
dec
xchg
add
lret
fsts
adc
std
jg
add
dec
outsl
inc
push
sbb
pop
aam
sub
add
loop
mov
movsb
add
js
movsl
loopne
mov
push
in
mov
add
out
cltd
stos
fdivrl
mov
push
aad
lds
xchg
or
repnz
mov
add
and
add
pop
or
cmpsl
xor
push
mov
add
test
add
or
ljmp
cmp
sbb
test
mov
add
adc
stc
dec
xor
outsl
bnd
bnd
adc
add
loopne
clc
ljmp
add
stos
add
mov
add
rolb
or
rorl
dec
popa
fnstenv
add
xchg
jl
mov
add
adc
add
lds
push
jbe
adc
dec
je
jne
cmp
dec
cmpl
inc
sbb
ljmp
add
sbb
sub
sbb
add
ror
repnz
inc
push
js
inc
andl
add
mov
div
sub
bound
mov
push
add
xchg
loopne
rol
arpl
mov
clc
inc
pop
push
xchg
pop
in
jne
cmp
cmp
jno
cld
stos
add
jae
js
xchg
inc
push
and
adc
sub
pop
xor
add
mov
push
rol
test
add
ljmp
adc
push
aam
daa
push
imul
jmp
add
pop
cmpsb
add
sbb
sar
cmpsl
mov
mov
add
pop
insb
jmp
out
mov
add
ss
inc
push
and
add
cmc
or
repnz
add
sbb
ret
in
daa
mov
xorl
imul
mov
add
lcall
sbb
cmc
mov
add
add
lea
xchg
mov
in
add
add
jmp
and
add
in
cmp
add
mov
add
add
popf
je
sbb
add
scas
mov
cmpsl
sub
add
icebp
xchg
add
out
movsb
add
dec
mov
add
cli
rcrb
fisttpll
mov
or
mov
add
pop
mov
cmp
ja
add
mov
adc
adc
mov
insb
shll
add
and
add
hlt
fsubp
hlt
mov
and
add
stc
sti
js
aaa
xor
push
mov
add
mov
add
jmp
mov
sbb
mov
aaa
jno
pop
lock
lret
add
lods
pusha
add
add
sub
std
inc
dec
shlb
fistps
or
add
in
or
sbb
add
loope
scas
add
js
test
xchg
mov
push
sbb
insl
mov
iret
and
inc
xchg
cltd
sub
mov
sti
jnp
lock
in
jle
pop
inc
scas
add
insb
mov
mov
push
pop
js
inc
adc
fucomp
call
add
mov
add
cltd
jae
cltd
push
push
ficoms
or
add
and
add
fldcw
rorb
test
push
lret
xor
cmp
push
push
stc
xorl
inc
xchg
dec
fbstp
in
add
and
mov
add
jns
adc
jl
add
sahf
rcll
add
push
mov
mov
xchg
mov
mov
stos
dec
add
inc
mov
sbb
fdivrp
mov
js
push
mov
jb
add
add
add
push
add
cmpsl
or
cmp
cltd
scas
add
pop
aaa
xchg
add
cmc
push
add
mov
sbb
mov
add
aam
mov
pop
pop
cwtl
loope
dec
inc
mov
add
push
arpl
mov
fs
mov
mov
iret
loop
or
add
fs
mov
call
loopne
out
jecxz
lcall
jecxz
sub
add
aaa
push
add
sbb
iret
jnp,pt
pop
repz
add
mov
pop
push
add
mov
add
sahf
int
ds
repz
jmp
push
cltd
icebp
lahf
xor
leave
push
dec
or
add
int3
mov
add
out
popf
hlt
dec
mov
aam
add
je
dec
pop
jnp
add
lock
sbb
pushf
and
add
add
cmpsb
add
nop
mov
jb
cmp
jge
mov
cli
xchg
mov
dec
pop
ret
cmp
xchg
popa
ficomps
push
add
or
add
call
repnz
add
xor
xchg
cmp
bound
xabort
jo
mov
push
cltd
mov
add
add
pop
xchg
dec
imul
push
pop
add
mov
and
decl
adc
insb
jne
jo
addr16
push
cmp
enter
into
daa
xor
addr16
add
add
les
fistpl
faddp
mov
bound
inc
adc
out
fcoms
lret
lods
cwtl
rcrl
leave
lea
fstps
sbb
sub
add
xchg
iret
xchg
ljmp
add
mov
mov
push
fisubrs
inc
and
bound
xchg
lock
inc
rol
add
add
inc
test
add
xor
inc
add
add
popa
inc
mov
add
adc
add
mov
add
sub
add
out
daa
popf
sar
xchg
lods
test
add
inc
sub
add
xor
dec
imul
cld
movsl
add
cmpsb
add
lods
add
mov
lods
add
negb
push
loopne
jg
pop
rclb
add
repz
add
push
jg
mov
hlt
or
add
mov
aad
sarb
jbe
add
rorl
leave
xchg
sbb
mov
add
mov
add
xchg
lds
xor
sbb
add
movsl
mov
add
mov
inc
add
mov
mull
ficoms
add
add
sbb
mov
dec
sub
add
nop
xchg
pop
movsl
jge
shll
mov
mov
add
mov
cmpsb
add
ret
lock
push
cli
and
add
cmp
data16
add
sub
ljmp
xor
inc
mov
mov
add
add
gs
lods
xchg
in
push
pop
mov
jle
cmp
test
add
pop
ret
aaa
jo
dec
paddsw
std
or
add
add
ja
jo
add
outsb
iret
mov
mov
in
xchg
mov
add
rorb
in
mov
ljmp
enter
fsubp
sub
add
stos
test
pop
pop
xchg
inc
and
add
push
add
sbb
sarl
sub
add
add
stos
add
sbb
rclb
int3
or
fwait
cmp
dec
outsl
cmp
ret
dec
scas
xchg
sbb
fdivr
lods
cmpsb
add
pusha
cwtl
xorl
jmp
fistl
insl
stc
mul
and
add
add
mov
add
nop
stc
mov
dec
jmp
jl
in
in
cltd
js
add
imul
mov
les
cvtdq2ps
or
insl
jb
jle
xchg
dec
xchg
fnsave
jb
mov
add
push
add
and
negb
xor
xchg
mov
sbb
cmpsb
add
adc
inc
faddp
mov
xlat
mov
add
aad
push
addl
fadds
add
add
jge
add
mov
aam
inc
imul
add
push
sub
pop
out
arpl
add
mov
out
gs
xchg
add
sub
add
jns
xor
add
and
add
add
pop
sbb
push
iret
xchg
cli
sub
add
push
add
movsl
pop
lret
sbb
lret
add
inc
pop
dec
sbb
or
add
sbb
ret
fucom
popf
mov
add
lods
or
add
and
adc
repnz
icebp
fwait
or
mov
jbe
dec
inc
clc
lahf
repz
adc
add
xchg
add
cmp
je
shl
xor
add
imul
insb
add
add
sti
mov
dec
xor
push
add
add
cltd
int3
ja
not
mov
add
pop
loopne
add
push
imulb
mov
cwtl
rorb
mov
add
mov
das
int3
sub
add
scas
add
add
cltd
test
add
inc
scas
mov
add
pop
pop
sbb
addb
out
into
mov
int3
xlat
dec
xor
aaa
sbb
enter
add
jl
add
dec
jmp
sub
or
add
add
push
push
jmp
add
insb
shrl
decl
jae
rep
les
mov
outsl
fmuls
inc
scas
jb
movsb
add
mov
add
dec
hlt
pop
xchg
inc
push
into
or
cld
add
fxch
add
add
add
fbld
add
imul
push
aam
mov
js
cmc
fdivr
negl
aam
ror
mov
dec
and
sub
and
add
cwtl
sbb
bound
add
add
add
loopne
jo
add
xchg
adc
inc
fimull
add
dec
xor
in
fmuls
push
add
test
add
loop
xchg
sbb
mov
add
mov
fistps
or
add
inc
jp
popf
rcrl
daa
fs
lds
out
ficompl
add
hlt
adcl
add
jo
jne
xchg
lds
add
add
rclb
add
sub
add
lret
popa
addr16
xchg
add
enter
push
add
mov
imul
sbb
add
test
out
inc
hlt
ret
or
inc
add
push
add
jge
idivl
iret
lahf
add
add
sbb
sahf
dec
popf
int3
adc
incl
add
add
test
add
pop
testl
xchg
mov
add
dec
mov
hlt
invd
add
cwtl
mov
pusha
stos
add
push
lock
jmp
add
std
jp
sarb
stos
pop
sarl
jp
add
add
xchg
cld
bound
inc
mov
mov
loopne
dec
adc
add
add
cltd
fldenv
add
cmp
ljmp
or
stc
and
mov
push
and
cwtl
das
mov
adc
lahf
mov
sub
add
add
and
sti
lds
add
add
mov
out
add
push
lods
inc
insl
fbld
add
jge
sahf
mov
add
add
add
jge
leave
fisubs
imul
fwait
and
add
mov
add
sub
add
add
ss
jae
gs
and
add
push
adc
lcall
js
add
dec
xor
in
mov
jl
out
xchg
sub
add
das
mov
add
faddp
pop
mov
adc
ficomps
cmc
in
sti
xor
xchg
lods
xor
add
xchg
ja
jae
add
push
pop
jno
fcmovnbe
insl
loopne
test
add
cmp
pop
sbb
test
add
out
add
hlt
push
adc
add
and
add
add
mov
jl
mov
add
movsl
mul
insb
bound
cmp
in
xor
repnz
inc
mov
add
sub
add
mov
stc
or
add
add
push
adc
popa
lods
fs
stos
push
std
and
jmp
add
lds
mov
fsubs
or
add
add
jg
sub
cltd
dec
pushf
stos
dec
cmp
shrl
outsl
lea
mov
and
add
ss
sub
inc
mov
sub
add
mov
jp
fisttpl
add
cmc
xchg
lret
fptan
mov
add
add
lcall
xchg
aam
add
xor
repnz
lods
loop
add
mov
inc
add
jo
arpl
pop
mov
mov
add
mov
add
add
cmp
add
add
fcompl
mov
add
mov
test
add
sbb
dec
mov
add
add
cmp
add
mov
add
jmp
mov
cmp
xor
lock
sbb
das
repz
aaa
sbb
jns
arpl
add
add
fs
fst
pop
addb
adc
add
jl
add
pusha
int3
test
add
ret
jo
pop
and
cli
sub
add
add
sbb
or
add
outsb
push
add
fistpll
mov
fimuls
add
ljmp
add
fcmovbe
pusha
xor
mov
add
add
jle
out
add
mov
lret
add
addb
das
inc
shll
push
stos
xchg
lret
add
mov
inc
cmpsb
add
inc
push
xchg
dec
imul
idiv
stos
sub
push
pop
and
add
xchg
mov
add
sub
lods
add
jo
xchg
fistpll
add
inc
xor
pop
mov
pop
mov
add
out
mov
pop
pop
add
add
inc
or
add
jge
cmp
fbld
add
push
or
add
xor
add
lret
cli
adc
mov
pop
ret
mov
les
imul
call
add
add
clc
lret
add
mov
add
rcll
mov
aad
adc
hlt
mov
add
add
add
fsub
lock
loop
sbb
icebp
popf
pusha
icebp
add
add
idivb
nop
idivb
xor
add
in
dec
push
sub
add
xor
call
test
popa
mov
add
addl
push
incl
add
shrl
add
out
push
loopne
push
mov
insb
negb
pop
adc
repz
mov
mov
cli
lret
dec
cltd
mov
ret
in
add
jns
lret
in
loop
add
icebp
jmp
xlat
in
repnz
sahf
xor
lret
adc
jmp
dec
lahf
lret
popa
xchg
xor
pop
mov
imul
add
xor
lods
lahf
sub
add
push
and
add
pop
imul
rolb
sub
sbb
syscall
inc
jbe
add
add
mov
xchg
jl
sub
add
add
sti
push
inc
pop
mov
hlt
push
add
mov
jle
push
xchg
test
push
add
push
mov
xor
mov
sub
add
or
add
push
aam
or
add
hlt
insb
or
test
add
lds
cmp
add
stc
ret
add
push
mov
dec
xchg
push
outsl
scas
js
xlat
out
repnz
and
add
mov
sub
pushf
data16
mov
add
fnsave
jge
outsl
fdivs
lea
ja
jb
push
add
cmp
xor
js
add
pusha
ss
loopne
mov
xlat
stos
addb
xchg
scas
mov
add
sbb
gs
mov
ljmp
add
test
add
add
add
mov
add
mov
mov
add
sbb
sub
add
add
inc
mov
add
fadd
and
jle
jno
mov
add
call
test
add
jle
add
jmp
add
xor
das
push
and
add
arpl
push
sub
insb
lods
add
scas
add
jmp
adc
cmp
testb
add
xor
mov
jg
cmc
sub
add
mov
mov
pop
add
xchg
ret
ficoml
add
lahf
and
add
in
arpl
xchg
add
ffree
adc
dec
or
add
dec
call
rcrl
fidivl
jl
aas
push
add
xchg
stc
addb
mov
icebp
dec
test
add
mov
inc
xchg
jmp
cmpsl
fsubrl
mull
add
adc
pop
pop
sbb
sub
cmp
cld
ss
add
dec
gs
jl
inc
les
sub
add
or
add
jmp
icebp
stc
xor
add
add
add
mov
xlat
shl
adc
mov
ds
add
sub
add
jnp
push
lea
add
arpl
adc
mov
out
inc
xor
inc
add
add
ljmp
add
dec
mov
fadds
or
rol
ret
mov
push
mov
add
jae
cmp
mov
add
addr16
push
and
mov
and
add
add
cmp
xor
ret
jno
inc
xchg
jae
xchg
mov
add
test
add
jle
mov
pop
addb
cmp
test
add
mov
adc
jp
and
add
and
add
add
stos
jmp
xor
sub
push
pushf
sbb
add
lcall
sbb
cmp
imul
add
mov
js
add
inc
mov
add
add
fdivp
mov
add
adc
out
imul
push
cwtl
pusha
xchg
mov
jl
call
push
stos
add
imul
add
jbe
fs
sti
sbb
dec
xchg
jo
rcrb
add
ds
push
push
fimull
arpl
shlb
ss
addl
push
and
jbe
fbstp
inc
inc
nop
inc
xor
in
add
jns
insb
add
mov
add
mov
add
mov
add
add
dec
jno
out
add
or
add
arpl
pushl
mov
ret
jne
dec
aad
inc
xchg
into
or
add
out
cmpsl
inc
cmp
lods
mov
jge
adc
inc
lret
add
jnp
dec
leave
cwtl
cmc
aaa
inc
xor
and
add
mov
add
add
dec
push
add
add
fildll
adc
nop
jb
mov
shrb
ja
or
add
stos
and
add
gs
inc
jl
pop
xor
testl
test
add
in
push
jmp
add
add
sub
xor
add
movsl
dec
pop
adc
add
insb
fwait
jnp
icebp
ret
dec
mov
add
xchg
icebp
addr16
or
add
stc
jb
sbb
test
ja
rorl
jo
shll
add
inc
push
jne
mov
addr16
push
push
add
or
add
call
test
add
inc
aad
fwait
mov
aam
jne
push
data16
add
mov
outsl
sub
add
add
sbb
cmp
add
in
enter
aaa
mov
mov
or
dec
jae
arpl
mov
add
popa
or
add
pop
mulb
add
iret
sub
add
add
and
add
adc
sub
add
scas
add
hlt
fldl
xchg
push
sbb
inc
jp
mov
and
add
cmp
add
jno
movsb
add
xchg
into
rcll
test
call
pop
insb
in
xchg
adc
push
aaa
inc
sub
or
inc
in
xchg
arpl
add
adc
ja
daa
cli
mov
push
imul
addb
cmpsl
pop
mov
test
add
pop
fstpl
add
jb
stos
add
loope
popf
dec
stc
lret
pop
inc
inc
mov
jbe
in
pop
mov
dec
les
xchg
sahf
addr16
push
add
sbb
push
mov
add
push
outsl
mov
or
add
sbb
jmp
mov
or
out
sub
add
cwtl
js
loope
add
jnp
int
add
jbe
sarl
into
arpl
add
push
mov
jge
sti
dec
push
or
push
sub
add
add
dec
xchg
ja
mov
out
pop
shrl
pop
repz
in
ud1
pop
add
sbb
push
cmp
add
push
pop
mov
xchg
add
mov
add
mov
addb
stos
arpl
add
add
out
outsl
out
incb
add
lock
in
lock
addb
mov
add
stc
jle
mov
fisubs
sbb
icebp
push
fidivs
pop
sbb
add
loopne
add
jns
dec
mov
pop
adc
dec
dec
ret
stos
cmp
lret
scas
add
mull
inc
xchg
dec
iret
dec
les
xor
add
dec
push
mov
cmp
mov
ljmp
add
add
mov
lods
add
std
dec
arpl
xchg
movsl
fnstcw
mov
fwait
and
push
jmp
or
add
dec
call
or
pop
push
mov
add
lock
pop
mov
lea
or
add
add
aam
xchg
testb
lret
stos
xchg
xor
inc
or
mov
repz
jge
ret
or
add
add
shrb
add
movsb
add
negl
add
pusha
add
inc
add
dec
test
add
xchg
ret
sahf
pop
cmp
mov
add
xchg
out
fwait
add
add
inc
mov
and
xchg
pop
sbb
push
in
inc
push
or
add
lock
mov
add
add
xchg
add
scas
add
mov
add
add
xchg
pop
inc
jb
jbe
aam
lods
inc
movsb
add
cmpsl
inc
dec
icebp
xor
iret
das
scas
enter
dec
mov
xlat
insb
repz
repz
add
add
mov
xchg
sti
pop
sbb
add
in
cmc
mov
push
pop
addl
mov
push
lock
add
popa
add
ret
or
pop
arpl
add
je
scas
add
lods
add
ja
add
repnz
icebp
push
add
in
add
fcompl
daa
mov
adc
test
adc
push
mov
sub
add
cmp
xchg
stos
add
repz
mov
add
sbb
stc
fsts
push
adc
mov
add
fst
sbb
scas
add
sbb
add
popa
adc
sub
add
add
addb
mov
rcll
mov
add
bound
add
sbb
mov
push
enter
js
icebp
adc
cmp
add
leave
in
pop
push
inc
addr16
inc
xor
xchg
push
mov
add
xchg
rcll
shl
mov
xchg
add
add
add
pop
pop
sbb
jp
mov
add
mov
pop
jae
repz
sub
add
pop
adc
push
jl
dec
sbb
push
pushf
fwait
popa
sub
outsb
mull
add
in
add
lods
add
mov
add
jp
iret
outsl
jo
jp
push
add
dec
imul
adc
loopne
addb
loop
dec
inc
lret
cli
mov
mov
cmp
sub
add
mov
add
add
add
push
add
sub
add
mov
mov
add
decb
insb
ret
add
pop
push
pop
push
sbb
scas
add
fwait
scas
or
add
cli
daa
aas
bound
cwtl
and
mull
sbb
iret
pop
fs
stos
add
or
add
pop
adc
cmp
int3
loope
scas
add
inc
sbb
mov
test
add
inc
or
aas
popa
push
mov
add
push
movb
mov
outsl
clc
scas
jb
sti
cld
xor
ja
mov
push
or
in
enter
add
add
add
jg
test
add
jne
add
jp
pop
in
sub
push
jo
push
lahf
jmp
add
jg
addb
dec
adc
adc
popa
inc
dec
mov
std
sbb
add
das
add
xrstors
fdivrs
cmp
add
int3
add
add
add
add
push
sbb
add
dec
and
inc
mov
add
xlat
push
pop
cmp
insl
mov
mov
cmp
jns
add
pop
test
add
sub
add
into
adc
cmp
add
in
lea
cmc
and
add
lock
push
ljmp
add
stos
add
fs
dec
push
push
add
jecxz
sub
add
inc
ret
fdivrp
sbb
mov
adc
pop
insl
ret
add
in
dec
pop
push
xor
les
mov
sub
std
dec
addl
jmp
inc
add
mov
add
lock
aas
test
sbb
mov
xor
add
test
add
sub
push
mov
pop
xchg
in
inc
les
aaa
jno
sub
add
lods
loope
cmpsl
push
push
xchg
jnp
jmp
pop
mov
rcrb
jbe
xor
lock
cmp
in
jl
clc
adc
lods
inc
cmp
and
add
fs
xchg
add
add
adc
stos
and
add
in
push
dec
shl
pmulhw
sbb
fsts
ja
adc
add
insb
cmpsb
add
les
mov
add
add
stos
lret
scas
aam
sub
add
add
movsl
pop
jb
xchg
mov
add
test
add
adc
jne
fsub
or
aad
xchg
dec
loopne
dec
push
pop
les
mov
dec
add
add
add
sarb
sub
add
mov
push
dec
jmp
add
and
sbbl
int
sub
add
pop
adc
lock
add
add
cwtl
shr
pop
push
add
dec
mov
add
push
add
mov
xlat
mov
add
dec
mov
xor
add
cmpsb
add
mov
add
jg
push
jmp
je
inc
adc
stos
add
lcall
clc
je
add
dec
adc
add
mov
xchg
jmp
lret
sbb
push
jns
and
addb
xchg
adc
xor
add
add
lods
scas
add
lods
mov
add
add
inc
fmulp
xor
add
cld
mov
cltd
fstpt
add
sbb
sub
add
add
add
jl
add
jno
ret
lock
ret
inc
pop
dec
mov
push
out
add
or
cltd
pop
scas
in
xchg
mov
inc
pop
and
add
add
sarb
inc
add
add
add
mov
mov
add
add
lcall
adc
nop
and
std
mov
rolb
mov
add
xor
pop
sbb
and
add
dec
sbb
cmp
add
mov
in
arpl
add
cmp
dec
mov
lahf
cwtl
jmp
mov
icebp
int
add
out
add
ja
xor
add
test
sub
add
mov
mov
add
or
ds
xchg
sbb
xor
add
dec
rcr
int
mov
add
pop
jg
add
dec
pusha
xchg
fs
add
pop
mov
add
test
dec
inc
inc
sub
add
lods
add
test
scas
add
add
insl
addb
pop
ficomps
add
jge
int
cmp
mov
js
sub
repz
add
clc
mov
adc
into
shlb
and
cmp
cli
xor
mov
add
and
add
add
push
mov
pop
fnstsw
fdivs
add
cmpsl
dec
stc
cmp
xchg
into
mov
and
add
xchg
add
lods
nop
mov
xchg
sbb
mov
add
shr
loope
lods
add
jns
dec
test
add
push
out
insb
pop
outsb
stc
sub
add
in
and
xchg
aaa
mov
xor
enter
add
adc
cmpsb
add
jecxz
add
xchg
jle
movnti
add
neg
adc
add
add
add
sarb
ja
leave
sbb
sti
mov
mov
add
pop
inc
mov
add
mov
xchg
push
add
enter
popa
mov
add
arpl
xchg
xchg
sub
mov
icebp
stc
sbb
push
add
adc
pop
mov
pop
int3
inc
loopne
ret
push
inc
xor
pop
aad
add
mul
add
add
add
jp
int
add
mov
data16
add
add
jno
inc
push
stos
add
in
loopne
in
push
mov
add
add
cmp
mov
aaa
js
sbb
out
add
rorl
xchg
xor
in
ficompl
addb
inc
push
push
in
lfs
aas
in
js
push
xchg
push
add
into
ds
pop
in
movsl
jb
xor
mov
add
lcall
lds
pop
fiadds
out
adc
jmp
jne
jne
add
push
and
add
add
add
and
filds
add
cmp
add
pusha
mov
add
iret
popa
add
add
test
add
dec
mov
aam
add
mov
jg
shl
cmp
inc
cmpsl
addb
hlt
out
jl
addb
data16
or
add
add
imul
add
dec
jnp
mov
adc
jp
stos
addb
notl
test
add
xor
or
add
jnp
adc
outsb
pop
jp
pop
pop
xlat
dec
xor
jo
add
adc
jg
push
mov
inc
adc
mov
jne
cmp
push
push
add
insl
mov
add
add
lods
add
addr16
xlat
ss
cmpsb
add
xchg
pop
in
outsb
and
add
xor
push
nop
bound
std
je
or
add
imul
mov
and
add
push
iret
pop
fsubrs
and
add
shrb
stos
add
shll
xlat
aas
xchg
add
mov
add
mov
jmp
cld
lock
xchg
sub
add
sbb
or
fs
xor
pusha
aam
cmp
cmpsl
call
gs
add
add
outsl
in
inc
imul
jecxz
xchg
jo
add
mov
cmp
clc
pop
addb
lods
je
and
add
add
add
scas
sub
add
or
inc
imul
fmuls
ret
mov
pop
add
loope
out
aam
in
xlat
mov
addb
loopne
or
bound
jae
add
mov
jge
add
dec
inc
xlat
insb
int3
mov
add
pusha
add
and
push
inc
mov
add
mov
je
mov
fs
lea
adc
imul
xlat
test
jne
fwait
imul
add
jbe
add
add
leave
insl
dec
mov
fs
outsb
jge
sbb
outsl
push
in
inc
lret
add
add
ds
mov
int3
jge
insl
cld
add
rcrl
cmp
pop
mov
outsb
repnz
add
inc
push
jno
test
add
add
add
inc
lock
or
add
jnp
data16
cli
hlt
mov
mov
add
add
and
imul
inc
pop
adc
cmp
call
jmp
sbb
push
popf
and
add
repz
nop
xor
push
lods
adc
test
add
outsb
repz
ret
add
loopne
inc
je
repnz
lret
or
add
mov
add
lods
add
mov
jbe
add
in
ret
imul
pusha
and
add
push
push
sub
add
push
lock
pop
mov
imul
mov
mov
add
mov
dec
ss
shrb
inc
xchg
adc
rolb
dec
jecxz
jecxz
add
outsb
fs
iret
jge
inc
inc
rclb
mov
fnstsw
jns
push
xor
je
ror
fidivs
in
rcrl
movsl
call
jns
movsl
mov
add
dec
mov
add
xor
push
sub
add
cli
loop
jmp
push
scas
add
inc
aad
jmp
clc
push
add
popa
xor
and
add
pushf
or
ret
pop
popa
jo
jns
notl
add
shrl
cmp
adc
stc
push
decb
movsb
add
lds
out
add
add
out
in
push
fisubrs
out
mov
add
lcall
insb
inc
addb
cmp
popf
mov
jle
js
and
adc
out
jl
insb
call
mov
lret
stos
or
add
ja
ds
movsl
or
add
jmp
jmp
and
add
push
xchg
out
cli
push
sysenter
inc
cmpl
cld
call
add
push
add
sub
add
inc
or
add
andl
imul
xchg
jge
popf
test
add
add
sbb
xor
cld
mov
pop
mov
add
and
pop
je
and
push
mov
dec
test
add
rcrb
dec
mov
call
push
push
push
cmpsl
xor
cmpsl
sub
pop
xchg
pusha
test
add
push
add
xlat
add
pop
xor
sub
mov
jnp
and
add
fld1
add
add
add
add
movb
out
repnz
gs
xchg
add
mov
push
and
cld
cmpsb
add
adc
add
mov
clc
mov
add
dec
repnz
in
test
add
add
push
int3
notb
ljmp
push
add
mov
dec
xor
cmpsb
add
addl
xchg
sbb
loopne
add
or
xchg
add
add
jp
mov
fistpl
lcall
in
dec
nop
xchg
add
mov
add
rclb
les
mov
and
mov
add
cmp
cmp
scas
add
loop
pushf
inc
shl
and
mov
iret
mov
xchg
add
in
dec
xchg
pop
pop
out
shll
add
arpl
arpl
add
addb
cwtl
add
add
out
movsl
clc
or
dec
call
mov
lods
add
xor
add
roll
add
adc
mov
outsb
lods
add
and
icebp
or
add
mov
add
lcall
mov
add
xchg
lea
imul
dec
jbe
roll
add
jge
push
add
movsb
add
mov
mov
cltd
pop
ljmp
add
cmp
test
add
sbb
mov
dec
cli
cld
fidivrs
push
rorb
inc
int3
or
and
add
stos
add
cmp
dec
mov
add
scas
add
test
add
sbb
dec
inc
lcall
or
outsl
or
pop
add
mov
push
or
add
pop
xor
pop
lea
add
mov
inc
test
das
fstps
into
sbb
add
insl
mov
adc
int
adc
fnstcw
inc
push
pusha
cmp
outsl
add
add
iretw
loop
push
std
pop
jae
repnz
jle
add
and
add
cmpsl
in
test
add
push
cld
loop
sub
add
jle
add
loop
adc
xlat
sahf
pop
aad
or
add
sbb
pop
jg
add
xchg
add
aas
mov
lea
push
xor
nop
or
aas
movsl
xchg
push
add
add
xchg
testb
pop
pop
sub
add
push
sbb
add
dec
add
xchg
rsm
add
rol
shl
in
add
add
ljmp
lret
cmc
mov
dec
mov
xor
ffreep
add
add
add
mov
pushf
aad
add
outsl
push
test
add
add
add
add
lahf
cmp
add
fnsave
add
pop
movsl
xlat
mov
pop
mov
add
movsl
and
add
sarb
mov
and
xchg
adc
lahf
jmp
fs
mov
or
add
inc
xchg
add
add
sbb
fidivrs
or
add
add
mov
dec
mov
add
mov
adc
lea
cmpsb
add
dec
mov
fdivs
insb
ret
icebp
bnd
cld
sbb
add
add
dec
jl
mov
outsl
jp
scas
add
movsb
add
mov
mov
add
out
xor
push
mov
add
and
add
push
add
adc
int3
and
stos
repz
push
sahf
and
add
cmp
out
int3
dec
ss
add
imul
fidivs
js
inc
ja
fnstcw
pop
jns
loope
add
adc
gs
int3
mov
popa
pop
in
sahf
jle
out
ljmp
cld
mov
add
pop
and
add
add
sub
vmptrst
sbb
ljmp
add
add
xor
sarl
inc
stos
dec
xor
addb
dec
mov
add
push
add
cmpsb
add
stc
xchg
and
add
mov
push
cmp
add
add
std
xchg
xchg
mov
and
stos
xor
notb
fisubrl
add
cld
jmp
add
add
mov
add
enter
or
add
push
shll
add
mov
fbld
add
xchg
insb
insb
dec
jge
movsl
cwtl
push
or
add
test
std
cltd
mov
add
fcompl
pop
les
push
repz
mov
sbb
mov
insl
mov
add
call
inc
add
add
mov
jp
outsb
stos
loope
insl
out
add
fwait
inc
or
add
movsb
add
jle
add
rclb
test
add
test
add
or
add
dec
mov
add
in
ja
fstpl
add
xor
mov
pop
and
add
inc
sub
dec
xchg
int3
nop
inc
cwtl
xor
filds
jns
dec
pop
into
sub
add
or
lret
clc
lods
add
sahf
cmp
add
ret
mov
add
out
inc
out
add
add
popa
mov
add
stos
nop
jnp
mov
jbe
outsb
xchg
sub
call
add
fmull
sub
add
clc
out
aad
add
pop
add
add
popa
add
add
pop
jne
fidivl
add
mov
push
pop
cmp
dec
les
dec
in
nop
in
jmp
lods
push
int3
mov
and
push
add
dec
mov
pop
je
pop
dec
mov
lods
add
cmc
add
pop
loopne
add
repz
rorl
add
test
add
fisubrs
add
lcall
mov
clc
jg
ds
sbb
mov
add
add
push
add
cmp
add
leave
fistpl
and
jne
dec
rolb
mov
cmpsb
add
mov
add
adc
and
loop
xchg
xchg
add
add
cmp
ja
popf
jl
add
adc
add
mov
pop
add
add
mov
mov
hlt
jl
add
add
aad
add
mov
pop
pop
push
enter
add
aas
xor
pusha
add
jg
dec
ds
xor
jl
and
add
divb
sub
out
jge
mov
adcl
cmpsl
jno
inc
dec
pusha
scas
lods
lea
pop
mov
add
addb
test
add
jge
pop
jne
xchg
add
scas
add
mov
add
mov
add
sbb
mov
pavgw
mov
xor
filds
add
inc
push
add
lret
aam
add
push
pop
pushf
lods
add
fistps
shl
popf
or
in
cli
inc
mov
add
pop
push
mov
dec
sub
scas
xor
rorl
pop
shll
add
test
add
mov
xchg
das
push
out
jp
sub
add
or
add
xlat
xchg
xor
bound
add
cmc
in
push
add
jecxz
hlt
sysret
inc
test
loop
add
xor
mov
cld
xor
or
add
pop
iret
test
push
ljmp
adc
and
lods
cmp
add
pop
popf
push
push
mov
xor
push
add
jmp
mov
add
push
lret
add
cmp
dec
and
stc
ret
cmp
push
and
xchg
jb
add
mov
add
push
sbb
das
xchg
scas
jne
mov
fcmovbe
cwtl
mul
mov
inc
sbb
call
add
loopne
addb
mov
add
add
imul
ljmp
std
push
mov
test
add
cmc
push
mov
add
loopne
sub
add
mov
ljmp
push
sbb
fdivrp
add
add
add
mov
lods
add
popa
popa
test
bound
mov
jne
inc
pop
add
mov
xor
bound
jecxz
pop
jge
add
stos
add
or
add
push
jmp
lret
add
negb
xlat
push
aad
scas
add
cmp
xlat
lcall
add
cmp
or
aam
mov
add
int
add
test
std
sub
jno
dec
js
xchg
xor
push
sub
add
std
dec
icebp
cmpsb
add
push
xchg
xchg
jle
jnp
push
out
sub
call
jbe
inc
push
xchg
mov
out
test
add
xchg
dec
sub
fcmovnb
xchg
adc
out
mov
imul
add
fs
pop
inc
inc
adc
insb
jmp
xor
jle
pop
dec
sub
leave
dec
cmp
pop
in
and
push
and
adc
clc
enter
add
inc
icebp
divb
lods
cwtl
bound
and
add
add
nop
sub
add
xor
fs
cwtl
fists
mov
mov
outsl
fstps
add
sub
add
and
dec
bound
xchg
imul
push
pop
imul
mov
mov
add
negl
mov
add
mov
add
xchg
mov
shll
add
cltd
mov
add
add
jnp
add
add
jbe
add
mov
xchg
xchg
pop
lods
and
add
or
aas
gs
enter
or
add
add
int3
push
pop
loop
loop
test
add
jno
arpl
add
in
mov
add
mov
mov
xchg
jp
sar
push
pop
iret
dec
jge
out
ljmp
lcall
inc
jbe
add
hlt
mov
xchg
sbb
sub
add
scas
pop
cld
adc
pop
cmp
mov
inc
loop
cmp
dec
cmpl
add
dec
popf
xor
pop
fdivr
xor
push
dec
xchg
mov
mov
popa
sub
pop
jp
add
pop
nop
mov
clc
mov
add
mov
in
jnp
ss
add
dec
mov
and
add
add
push
int
dec
mov
lds
inc
lahf
xchg
add
loopne
jb
ret
cltd
mov
int
or
enter
shrb
jne
add
jae,pt
add
mov
cmpsl
jmp
aaa
or
int
sbb
and
mov
mov
mov
ret
dec
nop
xor
add
add
jo
dec
and
push
push
pop
fs
pop
jae
or
cli
add
add
dec
jbe
fmul
dec
popa
xchg
aam
loopne
pushf
jno
in
push
sbb
add
cmpsb
add
stos
xor
and
add
lret
sub
imul
add
xchg
in
hlt
rolb
loopne
push
cmp
adc
call
lods
add
addr16
mov
stc
add
and
add
in
fwait
add
add
jne
add
cmp
mov
jbe
popa
leave
mov
mov
add
rcrl
mov
popf
addb
inc
xchg
scas
pop
push
inc
adc
ds
sub
add
add
sbb
sbb
add
or
add
sbb
dec
push
dec
lds
cmp
cld
in
lock
imul
mov
add
fidivl
add
pop
and
sbb
add
out
or
jl
jne
add
pop
ds
add
jae
dec
xlat
shl
inc
pop
dec
cmp
fildll
hlt
xchg
inc
lret
mov
xchg
loopne
or
push
add
add
ds
pop
mov
add
icebp
pop
pop
jecxz
insl
movl
add
push
mov
fmull
add
repz
arpl
mov
add
or
add
add
mov
add
add
insl
add
jge
insl
repnz
cmp
jecxz
jnp
inc
pop
cltd
dec
sub
or
add
cmp
fwait
push
ret
daa
lea
pop
cmpsl
mov
jns
add
jmp
mov
pop
mov
add
mov
out
add
bound
xor
add
jns
shr
ret
add
loopne
add
adc
add
sub
add
lods
add
push
add
out
add
add
fst
jp
add
das
cli
ret
jne
add
pushf
cmp
mov
add
shl
adc
repz
loopne
sbb
dec
sbb
pusha
and
add
add
jbe
pushf
insl
scas
xor
idivb
or
in
add
mov
add
shrl
test
push
add
out
test
add
push
adc
dec
lock
add
clc
je
sub
xchg
add
xorl
push
insl
test
mov
mov
add
je
sbb
fsubs
aas
test
add
cmp
pop
jge
jae
outsl
add
pop
cwtl
imul
stos
add
xor
add
subw
stos
add
inc
inc
mov
jae
out
das
jae
outsl
xchg
add
sub
or
add
add
repz
add
aad
cltd
xchg
add
xchg
ss
mov
add
dec
cmp
and
add
add
jae
mov
add
test
push
add
sub
add
cmp
push
lahf
inc
pop
repnz
xor
jnp
stos
sub
xchg
popa
iret
or
inc
imul
fdivrs
pop
inc
xlat
xchg
add
add
mov
xor
or
add
aad
pop
jbe
pusha
pop
inc
or
mov
add
mull
add
int
fmull
jne
shl
xor
aas
sub
add
jecxz
jnp
add
mov
mov
adc
xchg
or
add
pop
mov
mov
lcall
add
mov
cmp
mov
add
mov
je
cmpsl
xchg
add
add
repnz
jno
shrb
sub
add
mov
jnp
lock
push
daa
sub
xchg
mov
fdivl
add
fdivp
jne
mov
add
add
ss
rorb
test
mov
mov
inc
inc
int3
sub
loopne
jge
add
cmp
add
add
add
add
loope
and
mov
add
jno
push
jl
les
sarb
gs
fisubrs
aad
je
mov
dec
lret
rorl
inc
nop
inc
in
popa
nop
xchg
xchg
push
add
xchg
add
jnp
jae
clc
cltd
mov
push
mov
jp
out
stos
add
aad
xchg
or
jmp
fadd
dec
and
add
dec
mov
cmp
add
push
mov
add
pop
or
add
sub
add
xchg
mov
hlt
jne
jae
out
aam
lods
aaa
cwtl
xor
xchg
addb
or
add
mov
add
xchg
add
add
fs
inc
mov
dec
dec
inc
or
jle
inc
jne
test
add
repnz
pop
mov
mov
roll
incb
pop
mov
add
add
add
fucom
or
add
jp
in
call
mov
out
mov
int3
sbb
mov
add
int
add
bound
xor
xchg
mov
into
movl
mov
pop
or
add
imul
add
fildll
mov
mov
and
or
add
mov
outsl
sub
add
add
xchg
jne
add
mov
mov
lods
iret
incb
add
cmpsb
add
subl
js
fisubs
pop
jp
gs
push
pop
daa
xorl
test
stos
bound
rcrb
or
add
jg
arpl
arpl
add
pop
mov
insl
or
add
mov
in
jbe
cmp
jg
scas
sti
and
add
cmp
in
mov
add
mov
adc
and
sbb
rorb
jo
mov
cmp
ds
mov
add
dec
push
add
and
xchg
add
dec
bound
cmp
jl
add
dec
sti
adc
push
into
push
add
sub
aam
shll
push
or
xlat
fs
add
subl
sbb
rep
add
stos
pop
arpl
mov
add
addb
fmul
loop
fdivrs
add
loop
add
add
test
add
add
or
add
add
fildl
add
jae
add
add
mov
add
and
add
call
sbb
stos
cld
xchg
jns
mov
pop
mov
stos
add
out
lret
inc
shr
enter
add
stos
lds
das
js
stos
push
mov
add
mov
add
or
pop
hlt
add
add
pop
or
add
lds
push
repnz
push
push
xchg
add
mov
add
and
add
daa
add
add
mov
inc
icebp
dec
mov
sahf
and
add
inc
or
add
cmpsl
xchg
push
sbb
jmp
stc
xchg
mov
outsl
push
nop
roll
adcl
jp
leave
and
add
add
imul
add
test
add
out
cmp
add
add
jg
sub
and
dec
dec
aad
in
insl
or
push
or
adc
xchg
dec
call
int
add
xchg
call
in
and
add
stos
add
scas
imul
clc
inc
in
sub
cli
push
add
lea
test
add
repz
add
in
les
or
add
in
sbb
stos
push
bound
lahf
mov
add
in
dec
aas
cmp
inc
lret
out
loop
add
add
add
xor
lret
popa
sub
add
je
or
add
add
jle
push
inc
out
addr16
test
jns
out
sub
sbb
dec
add
sarb
inc
mov
sub
add
sarl
out
xlat
xor
add
aam
mov
dec
lods
xchg
cwtl
adc
sbb
add
inc
cmp
std
adc
pop
xchg
hlt
dec
adc
or
cmpl
add
mov
add
jp
mov
inc
push
mov
add
add
adc
cld
mov
scas
add
loope
hlt
inc
out
xor
outsl
cli
sbb
add
xchg
and
pop
cmp
xor
sbb
test
add
inc
and
add
pusha
jno
or
add
dec
mov
add
inc
push
add
cmp
jp
sbb
jns
xchg
mov
mov
add
lea
out
push
pop
cmpsb
add
mov
movsb
add
cmp
adc
inc
shlb
mov
xchg
je
or
and
add
nop
add
aaa
pop
add
add
icebp
mov
daa
add
push
xor
imul
sbb
mov
add
add
adc
dec
add
add
dec
pop
pop
jmp
inc
loop
xchg
add
add
inc
filds
add
fildll
add
int
lret
insb
imul
iret
cmp
add
dec
ja
dec
dec
jl
add
vpand
xor
hlt
nop
xchg
addb
cmc
mov
dec
push
movsb
add
mov
mov
lds
popa
inc
jae
or
mov
add
addb
insb
and
add
add
fsubrs
xchg
enter
xor
mov
lock
mov
dec
push
adc
add
bound
add
test
add
lods
cmpsb
add
jp
or
add
add
push
jne
adc
int
inc
fcmove
icebp
xchg
add
scas
add
and
add
stos
jno
and
in
inc
adc
jnp
mov
push
mov
imul
inc
clc
push
ret
scas
lods
sbb
add
idivb
add
pop
lret
gs
roll
pop
movsb
add
fsubr
gs
add
cltd
or
inc
cmpsl
xor
jbe
insb
or
repnz
and
add
sub
add
add
xchg
add
push
data16
push
or
mov
mov
and
add
push
add
sbb
bound
add
rorb
sti
pop
xor
fwait
xor
and
add
mov
add
add
and
add
mov
pop
test
add
jne
ret
add
add
mov
xchg
sub
add
scas
add
push
stos
add
inc
jmp
stos
add
dec
xor
rclb
xor
lods
add
or
add
add
stc
sar
pop
inc
daa
pop
idiv
pop
push
fucomip
cmp
imul
push
xor
sub
add
add
data16
add
and
repz
mov
cli
jmp
add
int
jno
cmc
mov
add
lods
add
test
cwtl
inc
mov
dec
les
and
add
pop
cmc
push
enter
imul
jp
fisttpll
addb
mov
add
add
roll
add
xchg
mov
push
mov
add
mov
add
push
add
shlb
xchg
movsl
ss
inc
loop
dec
mov
mov
sahf
ds
repnz
clc
stos
add
and
add
out
outsl
xor
xor
add
jb
mov
mov
add
add
loopne
add
iret
mov
add
pop
fadd
pop
icebp
lods
add
push
sbb
add
cmpl
adc
sbb
fistl
jnp
and
incb
sahf
dec
jp
in
dec
popf
or
add
test
add
inc
dec
sub
add
mov
add
ja
fdivs
mov
cmp
and
add
je
cltd
jb
in
in
cmpsl
xchg
jno
mov
jno
jle
pop
push
jns
add
jge
fiaddl
xor
or
or
add
jne
pop
jns
push
xchg
mov
or
add
dec
cwtl
xchg
jg
gs
in
jbe
mov
add
add
add
or
add
and
add
mov
mov
inc
add
add
sub
pop
lds
jecxz
ret
add
in
std
pop
dec
lea
add
bound
test
add
clc
pop
aas
ljmp
pusha
test
or
into
push
rcrb
pop
leave
in
adc
xchg
jl
mov
inc
fldcw
xchg
dec
sbb
or
add
aaa
push
or
add
or
call
push
test
add
js
jl
push
mov
xor
ss
fs
jb
jo
xchg
outsb
jle
or
add
dec
pusha
loopne
and
add
bound
add
loop
scas
stc
push
adc
pop
mov
add
scas
add
adc
inc
das
jno
add
bswap
pop
test
add
ja
pop
icebp
rclb
mov
add
dec
scas
dec
lcall
fisttps
adc
fwait
dec
or
roll
add
mov
lahf
add
and
add
fbstp
insb
shr
pop
fidivl
push
jbe
int3
add
add
add
add
ficompl
in
sbb
mov
enter
insb
cmp
jnp
out
and
add
mov
add
clc
lods
add
das
outsb
cmp
cmc
fcomps
add
mov
pop
mov
ror
int3
outsl
push
test
add
add
add
push
arpl
inc
jl
test
insl
pop
push
aaa
out
mov
fiaddl
popf
mov
inc
cmp
xor
xlat
xchg
dec
popa
cld
mov
lcall
add
sbb
pusha
xor
add
add
jl
mov
fwait
lret
in
jle
addr16
add
out
inc
ljmp
sub
add
add
enter
add
or
add
xor
incb
pusha
cmpsl
inc
dec
inc
cli
dec
mov
jcxz
mov
mov
iret
out
sub
add
inc
fdivl
inc
mov
icebp
ja
fisubrl
mov
ret
add
push
addb
add
add
ljmp
dec
andl
popf
aam
push
mov
enter
mov
inc
hlt
arpl
add
out
mov
mov
add
add
call
mov
scas
add
pop
outsb
push
les
inc
mov
add
insb
sbb
call
add
xor
fwait
pop
inc
or
add
add
mov
repz
sbb
add
add
mov
ret
imul
lods
add
loope
add
mov
or
add
out
sub
add
push
stos
shrl
and
add
or
inc
mov
add
sbb
or
adc
shl
and
add
add
popa
rcll
add
cmp
sub
add
sbb
scas
add
lds
addb
int
pop
int
add
lret
dec
xor
rorb
lahf
rol
in
incl
add
sti
fwait
mov
or
add
lds
bound
ss
fcompl
cmpsb
add
or
add
dec
push
insb
push
fst
clc
mov
add
shl
cmp
addr16
add
out
lods
out
dec
addb
stos
cwtl
inc
pushaw
into
lret
movsb
add
aas
push
mov
nop
ljmp
add
fstps
scas
add
sub
jo
stos
add
insl
jge
stos
add
test
add
add
test
add
je
cmp
add
arpl
push
pop
movsb
add
mov
mov
add
js
dec
repz
hlt
jecxz
cmp
cmpsb
add
xor
scas
pop
pop
pop
jae
ficompl
add
pop
fstpt
mov
lahf
sub
add
std
cmpsb
add
cmc
mov
add
add
add
mov
push
lahf
fwait
mov
add
push
ffreep
loop
cmp
add
cmc
xchg
std
fdivs
dec
ljmp
repnz
clc
push
add
add
ret
mov
add
push
fisttps
push
inc
xchg
jecxz
add
mov
inc
fs
je
push
sub
mov
xor
and
add
in
sub
out
in
adc
add
ja
cmc
adc
in
insb
in
pushf
jo
add
and
add
jecxz
stc
or
add
cmp
sti
dec
cmp
add
jne
mov
add
test
add
mov
bound
dec
outsb
sbb
shrl
cmpsl
aaa
fisttps
add
add
jns
xor
add
push
lods
add
sbb
add
rcrb
mov
pop
sbb
add
fdivs
fdivrl
test
push
pop
mov
icebp
pop
ljmp
jae
add
dec
clc
and
mov
add
outsl
outsb
cli
pop
ffreep
popa
ret
jmp
fcmovbe
cmp
shrl
add
xor
xor
mov
add
imul
sar
call
ljmp
mov
add
pusha
pop
xor
xchg
movsb
add
mov
xor
mov
outsl
fsubl
add
mov
clc
loop
sbb
out
pop
pushf
popf
nop
add
add
int3
xchg
add
aaa
jge
pushf
add
jl
rclb
adc
in
add
subl
add
pusha
aas
sub
inc
inc
and
aad
add
and
add
sbb
dec
add
add
or
add
add
pop
mov
mov
shr
aas
push
inc
pop
push
add
das
lods
insl
js
rcr
push
int3
push
jp
pushf
lea
add
jns
lods
into
insl
add
call
xchg
mov
in
xchg
out
enter
push
sub
cld
pop
mov
sbb
sti
les
add
pop
sarb
dec
sbb
xor
mov
add
add
mov
xor
cmp
add
add
add
pop
sbb
shlb
loopne
add
and
stos
add
mov
inc
movsb
add
aam
inc
xor
inc
cmp
pop
loop
scas
add
lret
add
cmp
add
add
rcl
sbb
push
add
cmp
add
inc
test
mov
pop
mov
imul
and
je,pt
mov
push
add
push
test
add
add
adc
or
jge
mov
mov
lret
jb
xchg
sub
add
cld
push
mov
fisubl
sbb
xor
pusha
ljmp
test
sbb
shr
aam
insb
cwtl
add
dec
sbb
adc
add
iret
leave
or
add
je
mov
add
and
fbld
add
add
add
hlt
stc
pusha
outsb
iret
push
scas
add
mov
mov
in
stos
scas
add
shll
daa
push
and
add
sar
mov
add
add
add
cmc
add
add
sbb
lods
add
lahf
fwait
in
sbb
pop
xchg
mov
adc
pcmpgtb
jns
add
xor
adc
test
add
push
add
imul
pop
orl
pop
js
ss
loop
and
add
push
sub
addl
outsl
sub
add
lahf
pop
lea
stc
add
jge
add
pop
sbb
add
test
add
mov
xchg
lea
mov
jg
add
cld
movsb
add
loope
pop
push
test
add
add
inc
push
add
or
add
add
mov
stos
add
pop
dec
mov
add
add
mov
lahf
daa
pop
notl
sarb
stc
in
sti
add
addb
sbb
add
xchg
push
add
xchg
sub
add
add
xor
sahf
add
add
push
add
add
pusha
xchg
adc
pop
pop
repz
push
add
add
sbb
or
add
outsb
or
add
or
add
sub
add
add
xchg
or
xlat
adc
xchg
mov
sub
add
fucomip
testb
cli
mov
add
aam
into
fildll
add
je
add
call
push
iret
jle
iret
inc
fidivrs
test
shrb
ljmp
xchg
les
into
pop
out
add
push
sbb
xchg
add
sbb
add
gs
sub
xchg
add
and
add
jne
rorl
fstps
add
roll
pop
adc
pop
test
out
dec
cli
mov
xor
add
ja
cmp
sbb
mov
or
add
sahf
jne
mov
in
inc
inc
mov
cmp
jmp
repz
and
mov
push
mov
test
add
out
or
add
add
mov
cmp
addr16
outsb
xchg
fucomp
shl
pushf
lods
repz
fisttpl
cmpsl
dec
and
add
add
or
ja
inc
push
xlat
mov
add
add
add
add
sahf
jnp
mov
push
movsb
add
out
xchg
and
add
push
mov
add
xor
arpl
mov
add
xchg
pop
push
jmp
add
cmp
add
test
add
in
std
jmp
jb
add
movsl
mov
insl
outsb
ss
jbe
mov
add
lods
jmp
add
and
in
adc
push
add
add
ljmp
sbb
cmp
sub
add
scas
add
icebp
fadd
outsb
add
adc
sub
add
out
lods
cmp
push
cmp
inc
icebp
mov
jmp
add
andl
adc
lcall
enter
das
mov
lret
mov
add
test
add
inc
pop
cmpsb
add
push
add
addb
negl
add
and
add
test
add
add
lods
add
mov
add
loope
mov
mov
pop
nop
inc
mov
inc
xor
scas
add
dec
test
add
push
mov
leave
dec
lock
xor
arpl
push
add
loop
add
std
and
add
icebp
repz
stos
add
cmp
addl
jg
pop
mov
mov
aad
add
mov
sub
add
les
or
add
push
add
lcall
add
add
inc
inc
mov
add
push
xchg
mov
lea
mov
xor
pop
mov
jne
push
add
test
add
inc
lods
scas
jg
test
test
clc
mov
push
jbe
push
add
add
mov
add
pop
out
dec
call
mov
add
xor
movsl
adc
add
inc
mov
xor
repz
add
sbb
cmp
xchg
lret
mov
add
push
pop
movsb
add
test
add
add
call
add
addr16
push
test
add
andl
mov
add
out
test
fsubrs
clc
icebp
cmp
inc
jp
xchg
mov
cmp
add
mov
rcll
ficoms
fst
scas
lods
jecxz
jb
ret
sub
daa
or
add
cmp
in
lock
add
add
sbb
add
movsb
add
push
dec
cmpsb
add
sti
xchg
loopne
jecxz
inc
xchg
mov
add
mov
jecxz
ds
mov
sbb
add
stos
add
mov
or
add
fcom
add
pusha
or
add
lods
xchg
lock
fndisi(8087
mov
gs
into
pop
stc
push
out
fpatan
ljmp
add
xchg
or
xchg
addb
cmp
xor
lcall
add
xchg
movsb
add
test
std
outsl
xchg
out
push
cld
test
cmpsb
add
add
add
inc
sub
add
sbb
add
and
mov
dec
shll
repz
add
cmp
mov
add
sub
shrl
add
inc
repnz
xchg
int
add
mov
add
add
ret
sub
add
dec
cmp
add
inc
pop
daa
lea
shrl
repnz
into
shl
out
sahf
fidivrs
add
or
adc
adc
insl
cwtl
xchg
cld
mov
adc
lds
add
shll
dec
push
xchg
push
test
jle
push
jmp
inc
or
add
sbb
subl
add
add
add
scas
add
pop
add
sbb
imul
lods
add
out
arpl
xchg
mov
mov
ret
mov
add
add
cmpsl
repz
add
bound
push
pop
mov
cmp
sahf
popa
mov
cmp
add
add
add
cwtl
sbb
iret
cmp
push
lret
sbb
shl
jb
mov
xchg
and
add
sub
xchg
jb
dec
int3
add
int
mov
add
mov
arpl
aas
mov
leave
out
dec
jg
pop
fdivr
scas
add
xor
push
data16
xor
outsl
jb
daa
hlt
lcall
in
add
inc
sub
adc
add
inc
fistpll
std
xor
push
ja
adc
add
hlt
add
icebp
push
and
pop
pop
lock
sub
add
xor
add
or
push
popf
pop
jle
push
mov
push
add
jmp
lret
push
cmp
add
add
sbb
xchg
and
add
call
cmp
fnstsw
push
add
imul
add
pusha
cmpsl
cmp
addb
mov
fadd
jbe
add
icebp
push
popf
mov
add
xor
cltd
cmp
lret
jns
imul
add
add
push
xchg
pop
xchg
lahf
and
add
loope
adc
or
add
add
aas
mov
addb
pop
mov
add
sub
add
stc
jb
sub
add
sbb
mov
push
loop
add
aaa
and
add
cmp
add
mov
fwait
pop
gs
add
mov
gs
jbe
shrl
mov
add
sti
aas
bound
add
gs
and
add
or
add
add
adc
add
xchg
cmp
and
stos
add
sub
add
push
cmp
add
pop
or
add
ja
sti
aaa
inc
rcl
fimuls
add
add
xor
fdivs
add
push
in
pop
stos
ret
xchg
jecxz
daa
data16
pop
and
add
and
add
iret
sbb
jp
mov
adc
add
enter
mov
add
dec
out
push
stos
add
xor
add
call
int3
nop
pop
pop
faddl
roll
pop
adc
lret
lret
pop
xor
mov
dec
loop
add
add
add
add
std
dec
xor
sbb
or
sbb
inc
adc
add
add
inc
imul
lcall
mov
js
mov
or
add
iret
int3
ds
loopne
and
outsl
addb
pusha
aaa
push
roll
add
add
add
insl
add
jb
pop
mov
sbbl
sbb
add
add
das
or
or
mov
add
add
sbb
add
in
clc
scas
or
inc
int3
mov
aam
jo
call
add
sub
add
push
std
and
negb
add
repnz
sarb
add
or
add
fdivrl
jge
add
push
imul
push
inc
push
popa
xchg
repnz
push
xorl
push
divl
cmc
jp
addb
sub
add
insl
outsb
imul
push
push
ret
mov
add
pop
sub
add
add
push
scas
pop
hlt
addb
call
les
scas
add
pop
divb
and
aad
ss
daa
mov
add
nop
mov
jns
cwtl
popa
out
pop
cmp
scas
jno
cmpsb
add
fbld
jne
stc
adc
add
in
out
add
fsubrl
fimull
and
add
pop
out
push
jle
inc
sub
mov
stos
add
pop
or
add
xchg
pop
mov
add
sbb
shlb
gs
in
and
add
or
add
push
and
add
mov
add
mov
ret
dec
mov
and
add
test
add
ret
add
cmc
cld
pusha
jg
mov
imul
mov
sbb
add
xchg
adc
add
add
adc
imul
cmp
or
add
adc
pop
cli
lcall
add
and
jge
xchg
adc
add
xchg
cli
inc
iret
int
nop
dec
filds
add
xchg
mov
lock
add
cmp
ja
adc
jno
jns
out
addr16
loope
jle
push
shl
xchg
and
add
add
sbb
jns
adc
and
add
dec
cmp
dec
fcomp
dec
addr16
fs
jnp
cmp
xchg
mov
nop
fstpt
adc
inc
xor
and
add
add
ljmp
setle
inc
cmp
add
fwait
test
add
add
push
sub
add
add
call
dec
pop
mov
add
cmp
adc
scas
add
cmc
fwait
pop
sarb
daa
inc
jle
fs
rcrl
jmp
add
and
add
jmp
add
inc
stc
je
cld
push
cwtl
add
push
add
pop
pop
sbb
add
call
push
popa
clc
xor
add
add
xchg
add
mov
pop
xor
fwait
mov
xchg
test
add
push
push
pop
movsl
jo
pop
shlb
movsl
sbb
push
add
jo
inc
sbb
add
mov
or
pop
cmp
data16
ret
xor
or
add
cmp
std
ret
out
mov
add
pop
xchg
push
xor
add
popf
inc
addr16
add
mov
jp
pushf
add
outsl
rolb
add
add
cmp
je
movl
inc
imul
and
add
mov
add
mov
lea
add
mov
add
push
aad
xchg
pusha
push
xchg
add
and
add
aam
hlt
movsl
xor
add
fstpl
pop
sti
divl
je
int3
or
mov
leave
cmp
push
xchg
add
mov
fistl
int3
add
add
out
mov
add
add
ret
adc
push
mov
stos
arpl
fcomi
bound
scas
add
xor
imul
repnz
add
sahf
xchg
xor
insb
push
cmp
gs
add
cld
pushl
lock
add
popf
mov
int
addb
idivb
fst
lock
add
outsb
sbb
pop
cld
addl
mov
add
sub
add
pop
jb
mov
mov
jb
and
test
add
add
pop
fwait
stos
add
jmp
pop
addb
loopne
add
jns
add
and
add
clc
mov
in
mov
ja
ret
xchg
jnp
and
add
call
pop
pop
repnz
add
iret
repnz
fcompp
mov
add
and
add
push
pop
xchg
add
add
inc
jp
mov
xchg
inc
jp
lcall
add
cld
and
xchg
xchg
sahf
fbld
cmc
lcall
add
mov
ret
pushf
mov
or
add
push
lods
add
and
add
pusha
call
add
cli
sarl
call
inc
loop
push
lret
enter
fdivs
and
adc
pop
push
mov
xor
icebp
jae
mov
add
add
ja
pop
jbe
cmpsb
add
fnstsw
xchg
and
add
into
aam
xchg
sahf
not
jp
or
fistpll
jmp
pop
mov
sub
pop
mov
mov
add
sub
mov
roll
push
add
lret
adc
add
sbb
loope
lods
add
jo
in
hlt
mov
jecxz
sub
sbb
lahf
imul
mov
dec
jmp
add
lret
jge
adc
add
xchg
pop
scas
in
data16
add
into
adc
xchg
imul
in
sbb
shll
or
add
hlt
sub
xlat
das
aam
add
out
rorb
add
clc
xor
mov
dec
shlb
pop
mov
pushf
sti
hlt
fstp
fstpt
and
add
lret
fcmovb
mov
stc
int3
push
jecxz
mov
add
add
lock
add
mov
adc
addr16
jae
xchg
or
add
leave
sub
addb
and
push
add
sar
xchg
mov
jl
cmp
mov
pop
cld
push
aas
fildll
add
cli
leave
repz
add
add
cmp
addr16
add
lret
add
add
sub
add
mov
aam
shr
cmc
fucomip
subl
add
add
pop
call
and
scas
add
pop
or
jne
shrb
add
add
idivb
dec
leave
addb
popf
mov
add
fildl
add
inc
fiadds
sub
add
call
mov
fildl
inc
push
add
push
cmpsl
das
ljmp
mov
adc
add
add
add
push
or
scas
xlat
xchg
sbb
mov
dec
popf
and
add
add
sub
add
dec
outsb
push
movsl
adc
add
sti
cmpsl
shl
std
mov
add
dec
pusha
jmp
je
inc
inc
and
add
lahf
aad
and
add
add
add
shrl
dec
xchg
pop
ss
addb
clc
in
in
scas
xor
repz
push
jle
pushf
and
add
shl
add
mov
add
ret
push
add
clc
outsl
cmc
out
inc
clc
enter
jae
in
inc
lea
test
add
mov
push
jno
add
leave
push
xchg
aaa
jae
push
fstl
pop
fcomps
addb
sub
dec
pop
jb
dec
mov
add
add
xchg
inc
dec
xchg
xor
int3
mov
test
add
pop
sub
daa
inc
aaa
pop
pop
jns
and
fldl
mov
push
les
clc
mov
jns
pop
and
add
rclb
add
sub
add
inc
repnz
adc
test
xor
mov
add
roll
int3
mov
jns
cmp
mov
cmp
shlb
mov
add
scas
dec
adc
lods
add
and
pop
fisubrs
subl
sub
add
mov
pop
daa
aaa
lods
or
add
outsl
push
add
jmp
rcrl
pop
pop
test
repz
mov
addb
ret
popa
addb
jge
add
repz
lret
xchg
inc
addr16
xchg
add
pop
sbb
call
test
add
insl
test
int3
lret
jp
jno
jns
add
outsl
addb
add
sub
pop
fs
loopne
or
add
insl
jnp
test
dec
bound
add
sbb
sbb
jmp
cltd
adcl
jge
sub
add
add
repnz
mov
add
add
in
xchg
cmpl
add
push
mov
add
test
add
mov
push
mov
xor
sbb
imul
mov
or
add
add
dec
jno
xchg
adc
aas
push
fildll
dec
rcl
inc
push
add
pop
lock
pushf
xor
gs
sub
push
jb
call
dec
add
add
xchg
iret
mov
and
add
arpl
add
lods
call
mov
add
test
or
and
pusha
jp
mov
add
mov
add
divps
mov
add
sar
insb
lock
arpl
mov
or
add
push
sahf
push
test
and
add
dec
int
enter
add
fcompl
add
insl
and
push
push
pop
ret
pusha
leave
ja
femms
add
sbb
sub
xor
test
mov
out
inc
add
add
add
in
outsl
dec
push
ja
mov
inc
cltd
mov
addb
pop
jns
add
ss
push
and
add
movsl
xchg
jge
add
lahf
inc
mov
gs
aam
out
push
add
stc
in
push
or
add
mov
or
add
adc
xor
lret
inc
jns
rcrl
aad
add
dec
dec
add
add
aad
jbe
xlat
out
push
add
out
jle
outsl
jbe
pop
pop
sub
add
sbb
dec
dec
in
movsb
add
sub
add
add
add
pop
push
mov
or
add
add
xchg
daa
cli
les
scas
aad
add
addb
mov
add
pop
in
pop
aaa
sbb
push
std
cmpsl
jns
loope
add
add
xor
pop
pushf
and
add
lods
add
lret
push
ret
add
fsubr
jg
sbb
addb
outsb
pop
lahf
jle
add
and
add
add
das
mov
add
loopne
fsubr
stc
int3
push
out
cmp
add
add
pop
call
shrb
add
out
pusha
mov
insl
cmp
fstpt
out
xlat
inc
cltd
je
scas
add
mov
stos
dec
mov
push
mov
jmp
pop
mov
add
fidivs
xchg
push
and
add
outsl
dec
addb
lock
rcll
add
pop
popf
cld
push
popf
cmc
js
add
cmp
mov
add
add
xor
shl
ds
xor
mov
add
loopne
mov
rcr
pop
and
add
or
aam
lock
xchg
movsb
add
cltd
jnp
xor
inc
mov
add
nop
rolb
add
dec
jl
pushf
and
sub
pop
inc
mov
sub
add
mov
or
inc
pushf
inc
arpl
outsb
sub
insb
cld
pop
lods
add
sbb
push
out
lock
add
mov
add
loope
fwait
ret
sbb
pop
loope
adc
movb
adc
xchg
lock
add
or
fstpt
addb
jge
repz
mov
dec
inc
dec
sbb
cld
dec
ss
addb
xchg
and
add
add
mov
add
sbb
shll
ss
ljmp
add
sbb
mov
cmpsb
add
sbb
add
insb
jb
and
mov
das
fistpl
rcrb
add
add
insb
nop
add
jp
pop
ret
dec
mov
cmc
in
pop
stc
push
jne
push
adc
add
cmp
sub
add
dec
cli
lods
jo
imul
add
add
fs
mov
lods
add
and
add
dec
sahf
or
add
jno
movsb
add
xchg
jo
add
add
repz
add
lahf
hlt
jns
push
int
mov
pop
ret
xor
add
push
add
mov
xchg
inc
add
add
add
inc
jmp
dec
fidivl
inc
hlt
inc
aas
imull
fisubrs
add
loopne
outsl
sub
add
cmp
stc
test
add
sarb
jne
add
add
mov
pop
jl
add
cmp
pushf
cmp
or
pop
xchg
add
push
ret
cltd
pop
jno
insl
jl
rol
movsb
add
out
out
push
movsb
add
xlat
imul
add
std
add
add
clc
cmp
jno
stc
dec
dec
in
pusha
sbbl
add
push
adc
sub
jnp
xchg
popf
mov
add
lods
lret
or
lock
mov
push
icebp
sbb
add
push
add
loopne
jno
cmp
shlb
aad
dec
daa
imul
mov
and
add
push
movsbl
movsl
leave
push
mov
sub
ret
test
add
add
xchg
jbe
push
dec
add
add
add
arpl
rcrb
inc
inc
sub
add
add
adc
cmpsl
inc
jb
test
add
scas
add
mov
xchg
and
add
lods
add
xchg
or
add
shlb
in
insl
shlb
jmp
call
int
mov
add
add
add
mov
add
into
aam
add
ds
sbb
inc
lret
mul
pop
shl
or
add
inc
sbbl
shrb
add
jbe
adc
push
stos
add
dec
pop
mov
dec
mov
pop
lea
inc
inc
mov
mov
and
test
aam
add
movaps
xchg
pop
les
or
add
imul
add
pop
or
add
sub
add
jle
push
and
add
je
shll
mov
add
adc
dec
xchg
add
cmp
pop
ds
push
fistpll
shl
out
push
dec
add
xorl
push
inc
mov
jne
pop
or
add
mov
xor
add
and
add
ja
mov
sub
xor
shll
addb
xchg
addb
or
dec
std
inc
popl
aaa
inc
lods
and
inc
idivb
and
mov
sub
aam
xor
mov
in
mov
add
mov
add
add
jp
add
jno
add
mov
add
inc
jns
inc
into
dec
add
add
scas
add
ret
mov
fmuls
xor
or
add
out
fcoms
pop
lcall
add
jmp
mov
add
add
pop
add
add
loopne
pusha
mov
sahf
push
arpl
pop
out
jmp
add
data16
stos
rclb
mov
add
fsub
adc
jge
daa
fidivrs
daa
fwait
and
mov
adc
into
mov
test
dec
or
xor
cli
lea
je
int
xchg
shl
in
mov
jmp
rorb
cmp
je
bound
data16
jge
mov
add
push
enter
test
addb
pop
in
add
pop
scas
imul
add
and
add
in
loopne
mov
fs
mov
add
add
enter
push
and
add
call
or
roll
add
pop
jae
fiaddl
xchg
add
stos
cwtl
adc
xor
imul
add
dec
mov
loopne
addb
scas
lahf
xchg
fwait
xchg
mov
mov
add
xor
psubusb
sbb
mov
add
mov
xchg
or
loop
cmp
cmc
cmp
pushf
mov
sub
lret
addb
sahf
jae
add
sub
add
sbb
call
add
cld
dec
data16
add
test
add
add
stc
in
xor
lahf
cmp
addb
ja
cmp
pop
adc
popa
and
in
jp
iret
jb
das
jecxz
fstl
mov
add
add
add
jae
out
les
test
add
jnp
das
in
dec
in
fsubrl
into
xchg
sub
popf
cltd
or
add
add
lock
xor
add
or
add
scas
add
rclb
pop
xlat
rcrb
cli
inc
adc
pop
fdivp
push
add
push
inc
inc
add
add
stos
movsb
add
scas
add
cmpsl
out
add
pop
pop
addl
adc
or
xor
les
push
and
add
jecxz
pop
aaa
jno
add
mov
add
or
imul
fldt
add
add
add
stc
ds
cmpsb
add
push
cltd
inc
xchg
xor
aas
addr16
add
popf
jo
sbb
inc
in
push
insb
pop
mov
mov
les
mov
rolb
cmc
sub
add
and
add
or
add
mov
push
fwait
or
cmp
xchg
std
nop
jg
sbb
sahf
cmp
nop
call
add
xchg
mov
sbb
imul
inc
and
add
add
mov
add
aaa
pop
ds
mov
sub
add
push
js
add
add
mov
jp
hlt
notb
cmp
xchg
add
mov
add
int3
adc
add
add
or
add
add
out
hlt
sbb
or
add
add
dec
aam
add
jp
stos
add
rol
fdivr
movsl
jl
out
and
add
add
add
jl
add
push
add
dec
or
add
add
movsb
add
shrd
loop
ret
adc
add
repz
adc
mov
add
adc
cmpsb
add
add
dec
and
xorl
aas
movhps
outsl
pop
pop
call
pop
add
add
lret
add
mov
xchg
dec
je
mov
mov
pop
mov
mov
les
mov
test
add
push
mov
add
push
mov
mov
add
mov
sbb
and
add
and
add
jne
xchg
subl
add
jo
jl
scas
ljmp
sbb
push
sub
add
and
add
iret
cmp
stos
out
imul
in
xchg
add
add
add
jnp
dec
mov
add
mov
add
call
add
mov
or
mov
mov
fldt
icebp
icebp
fsubrs
add
push
add
out
xorl
sbb
inc
sub
add
add
pop
dec
xor
add
add
addl
add
xchg
jno
clc
fistl
add
inc
gs
add
loopne
out
push
insb
mov
add
je
add
into
inc
sub
cwtl
scas
add
sub
popa
dec
cld
int3
mov
in
enter
rcl
push
add
adc
dec
cwtl
inc
xchg
inc
enter
add
add
add
call
mov
in
mov
jne
sub
add
frstor
jns
add
mov
add
mov
jb
adc
out
cld
inc
sub
ljmp
add
out
das
sbb
and
mov
push
out
cmp
test
add
add
test
mov
add
in
daa
lock
add
rorb
jg
pop
ja
inc
stc
popa
jecxz
add
add
fisttps
fucompp
xor
cmp
fsubrp
xchg
insl
inc
inc
mov
add
and
add
mov
into
iret
stos
or
add
mov
jle
sub
add
add
add
xor
aaa
iret
addb
add
and
add
pop
icebp
int
cmp
adc
add
nop
cmpsb
add
out
sbb
ss
les
add
add
add
mov
add
add
inc
cmpsb
add
int3
cmp
nop
mov
dec
leave
xchg
outsl
mov
mov
lods
stos
add
xor
add
add
mov
ret
push
or
add
lds
add
lods
add
cmp
cld
inc
mov
cmp
bound
cltd
mov
add
out
xchg
pop
jg
mov
add
add
stc
ret
add
addb
dec
mov
add
mov
add
add
add
out
add
add
inc
add
insb
pop
inc
movsb
add
stos
and
out
xchg
jl
scas
add
insb
sbb
pop
mov
push
aaa
inc
fwait
adc
icebp
jo
inc
mov
jmp
sbb
or
add
mov
xor
movsl
divb
adc
movsl
aam
add
inc
jbe
and
pushf
lcall
add
in
setbe
push
add
inc
popf
mov
sbb
pcmpeqw
clc
hlt
cltd
xlat
jp
das
rcrb
mov
scas
add
iret
mov
pop
sti
gs
add
hlt
pop
xor
add
inc
cltd
lcall
add
test
add
push
out
pop
movsb
add
or
add
imul
add
popf
stos
inc
and
mov
jmp
add
sarl
add
mov
lds
inc
xchg
push
iret
add
add
test
mov
test
xchg
push
add
enter
pop
jb
stos
icebp
mov
add
fstp
cmp
nop
dec
inc
or
ret
sbb
mov
pusha
movsb
add
js
sub
add
dec
insb
push
cmp
iret
pop
mov
add
loope
lret
dec
jnp
add
add
add
mov
add
cmp
out
push
xchg
leave
or
add
daa
xor
cld
sbb
add
mov
add
call
mov
mov
push
mov
inc
add
lods
imul
push
add
bound
dec
ret
or
lcall
add
adc
mov
mov
add
add
test
mov
dec
ljmp
lret
sti
dec
cmc
xor
cltd
pop
sbb
mov
sbb
add
add
pusha
sbb
add
add
dec
push
mov
idivl
add
rorl
cli
or
add
cmp
jbe
ss
xchg
in
push
push
add
jl
lcall
fisubl
add
dec
les
mov
aaa
pop
jnp
loop
movsb
add
test
mov
sbb
add
lods
cmp
mov
add
inc
xor
out
sarl
jecxz
test
add
sub
add
add
popa
xchg
xor
mov
ret
add
lcall
movsb
add
out
cmp
daa
and
add
push
int
adc
push
inc
addb
adc
and
add
xor
shlb
fildl
pop
popf
addb
fisttpll
loop
pop
clc
leave
mov
aad
pop
mov
jle
add
lods
add
xchg
xor
xchg
push
add
in
mov
xchg
rcr
fs
and
add
lea
add
push
mov
jge
imul
cmpsb
add
in
repz
add
xchg
cmpsl
or
gs
xor
testb
push
cmp
test
add
sti
lods
mov
push
shr
mov
hlt
mov
mov
add
mov
ret
andl
cmp
mov
notl
dec
push
sub
add
add
add
mov
in
fldl
add
data16
add
add
repz
add
fwait
pop
inc
jbe
xchg
add
dec
adc
add
movsb
add
in
lock
sbb
iret
pop
xor
pusha
cmp
loopne
dec
cmp
add
add
mov
je
lret
bound
scas
add
lea
mov
insb
sub
add
test
push
stos
addb
stos
imul
fdivl
xchg
adc
add
bound
stc
cmpsb
add
inc
pop
and
add
jl
lea
or
add
mov
enter
inc
lods
mov
add
fidivrl
add
mov
mov
add
in
push
or
jp
dec
inc
mov
xchg
push
rorl
xchg
pushf
cmp
jl
and
push
leave
and
add
add
or
add
add
movsl
dec
add
add
ret
add
dec
addr16
arpl
gs
xor
mov
add
cmp
mov
lods
int
mov
push
jb
jge
call
jl
add
out
lret
pop
sti
fimuls
add
cmp
jge
dec
fmuls
add
addb
xchg
xor
adc
sub
fadd
fwait
int3
jns
or
add
mov
xchg
mov
add
xchg
fcomps
lret
add
mov
shrb
sbb
pushf
imul
cld
mov
add
loope
lret
cmp
mov
add
dec
mov
test
scas
add
add
out
js
rorl
outsl
or
add
jb
repnz
testb
pushf
xor
pop
add
add
loopne
scas
cwtl
push
inc
jo
adc
cmpsb
add
pushf
outsb
imul
shr
or
add
xor
jne
xor
cmc
ficomps
add
or
add
and
add
and
add
mov
mov
add
aam
scas
add
push
dec
icebp
sbb
daa
mov
add
cmp
fcmovnu
in
aam
mov
add
add
add
add
pop
cli
pop
add
shlb
add
enter
xor
fisubl
popa
hlt
xchg
add
fdivr
hlt
insl
mov
jl
add
and
stc
negb
xchg
lods
popa
enter
inc
repz
mov
sbb
cmpsb
add
ljmp
shr
shl
and
enter
ret
daa
xchg
test
add
add
data16
cmpsb
add
pushl
add
add
sbb
stos
mov
add
add
add
sbb
inc
xor
dec
xchg
push
jnp
xchg
cmpsb
add
repnz
xchg
inc
popa
jl
test
add
sub
add
xchg
lock
das
fdivrs
iret
sbb
faddl
cltd
mov
add
inc
cmpsb
add
inc
enter
insl
push
aas
mov
add
scas
add
and
push
add
idiv
cmpsl
aaa
ret
add
pop
push
aad
cwtl
out
movsl
pop
xlat
push
add
lret
hlt
test
xlat
test
add
push
add
shr
xlat
mov
push
aaa
aad
arpl
xor
add
shll
xchg
dec
xchg
xchg
or
add
add
fwait
pop
cmp
stc
sub
add
add
cmp
cltd
dec
je
movsb
add
or
add
sub
inc
lods
add
mov
inc
mov
add
add
add
bound
add
sahf
test
add
mov
dec
sub
add
add
jmp
std
stos
nop
pop
jmp
add
ljmp
adc
push
mov
aaa
sub
fsts
sti
loop
add
les
add
sti
push
shrb
add
add
mov
add
pop
test
add
and
pusha
add
add
xlat
shrl
sub
add
cmp
out
std
sbb
add
add
push
xor
add
test
add
loope
add
jecxz
add
imul
stos
push
fcmovb
out
add
add
lea
jmp
icebp
xchg
add
add
scas
add
mov
add
mov
push
adc
add
mov
xor
nop
icebp
addr16
out
addb
daa
sti
and
add
jl
add
mov
add
add
mov
add
ja
mov
stc
mov
sub
add
xor
add
loop
adc
cmpsl
mov
lret
loopne
adc
push
daa
into
lea
xor
add
pop
stos
inc
pop
mov
ffreep
loopnew
mov
inc
xor
mov
sarl
add
add
add
aaa
popf
icebp
in
test
add
add
cmp
add
xchg
int3
push
push
sub
add
cmp
mov
push
add
icebp
cld
dec
dec
add
jae
sbb
test
add
sti
mov
cltd
adc
jae
fsts
or
add
and
add
xchg
adcl
call
add
dec
jmp
dec
xor
in
add
inc
cmp
xchg
test
add
mov
cli
rorb
xor
cltd
jns
mov
add
idivb
add
nop
stc
add
ja
fidivs
sbb
add
pop
rol
repnz
add
mov
jns
mov
cltd
repnz
addr16
addr16
fdivrl
add
dec
dec
aam
mov
add
pop
outsb
insb
popf
ljmp
add
scas
aam
mov
jg
call
push
mov
mov
cmp
aad
popf
lods
add
push
iret
or
enter
xor
out
rolb
mov
addb
or
into
fisttps
inc
loop
dec
daa
js
fdivrl
xor
push
add
in
dec
scas
add
or
add
mov
popf
adc
inc
stos
insl
test
add
xchg
add
dec
mov
sub
jns
imul
sub
add
dec
jge
fmulp
dec
jno
push
in
pop
xor
add
add
sahf
add
add
add
jge
add
rolb
add
gs
add
add
ret
mov
pop
push
add
popf
enter
add
daa
lcall
sarl
jmp
mov
add
lods
add
sub
ljmp
jns
xchg
inc
xchg
sahf
insb
aam
sarl
loope
mov
add
cmpsb
add
pusha
xor
xchg
in
add
sbb
fists
bnd
mov
add
and
add
popa
mov
add
test
add
xor
cli
js
aas
or
add
scas
movsb
add
adc
mov
add
sbb
insl
sub
addb
lea
pusha
inc
xchg
mov
jmp
daa
out
loope
and
and
and
add
lods
push
add
enter
xchg
add
push
aaa
ja
ret
jle
std
ja
aad
inc
and
add
fldcw
add
icebp
sahf
push
sbb
sub
add
cli
jmp
out
xchg
dec
sub
add
add
add
int
addb
cli
js
shr
out
sbb
iret
jle
xchg
cmp
roll
add
rcll
jne
scas
add
or
add
jae
cmp
out
sub
or
add
xor
sub
add
and
xlat
cld
sbb
mov
add
lods
add
inc
cmpsb
add
movsb
add
loopne
in
addb
hlt
pop
jbe
add
pop
sarl
add
les
lods
test
add
imul
sub
add
push
iret
add
or
add
pushf
adcl
push
add
pushf
and
add
push
xor
std
push
sub
add
std
insl
mov
mov
dec
test
add
jae
inc
pop
in
aaa
inc
mov
jns
imul
aaa
and
sub
and
loopne
and
add
scas
add
jmp
push
sbb
pop
sahf
cmp
sarl
adc
push
rcrb
into
pop
inc
dec
fisttps
scas
mov
pop
pop
fiadds
addb
inc
pop
enter
push
neg
call
cwtl
push
pop
fsubrp
push
push
cmp
ret
loopne
shrl
mov
add
arpl
add
repnz
loope
addb
add
add
push
jg
mov
add
sub
adc
mov
add
js
jb
add
cmp
sbb
push
add
push
pop
jbe
mov
add
push
add
add
add
add
repz
mov
pushf
mov
add
aam
loop
arpl
fists
push
icebp
rol
push
ss
add
jo
adc
insb
cli
sti
sub
add
popa
inc
sti
add
add
movsb
add
mov
lock
fists
push
mov
or
add
scas
mov
add
pusha
xchg
inc
test
add
add
pop
mov
add
push
add
xchg
andl
add
sti
enter
loopne
adc
cmpsl
cwtl
lods
add
xchg
rolb
sarb
add
inc
mov
add
rdmsr
and
add
add
add
cmp
mov
push
orl
add
or
dec
movsb
add
sbb
add
add
add
pushf
mov
xchg
or
add
fwait
jmp
cmc
iret
rcrl
imul
mov
add
mov
add
inc
and
add
pop
aad
pop
add
add
mov
jecxz
mov
push
std
xorl
push
add
cmp
shr
imul
in
adc
push
or
add
push
fisubs
rol
js
mov
ret
add
dec
xchg
jb
mov
shlb
fwait
mov
add
add
lcall
nop
and
add
xor
add
popa
inc
jae
xchg
and
add
inc
sarb
jae
pop
addb
ljmp
aas
xor
pop
or
add
nop
mov
sbb
scas
jae
or
ret
mov
add
call
add
shrl
add
jb
ja
add
add
repz
sub
mov
repnz
les
add
add
gs
add
add
xor
out
or
add
in
xor
sub
add
add
dec
insb
bound
fnclex
das
mov
hlt
jle
add
lds
inc
jmp
imul
add
cmp
jl
xor
fwait
pop
mov
cltd
mov
add
add
cli
xchg
dec
mov
add
or
add
loop
pop
xor
add
insl
xchg
push
cmp
add
jne
add
shlb
ljmp
dec
xor
push
push
add
mov
imul
adc
pop
adc
add
clc
push
push
adc
aas
xchg
jns
mov
out
sbb
pop
sbb
add
add
mov
iret
icebp
and
add
push
test
add
data16
shlb
pop
imul
cwtl
jmp
jg
jb
data16
add
push
push
mov
push
inc
mov
dec
inc
pop
std
push
arpl
xor
fadds
add
jns
sahf
test
adc
push
pop
sub
add
stos
add
jnp
movsb
add
pop
cwtl
sub
add
sub
test
iret
mov
add
add
lcall
hlt
mov
add
mov
insb
mov
dec
mov
shll
add
jle
add
inc
lds
lods
add
inc
dec
xchg
test
push
sbb
addb
jg
addb
dec
inc
and
add
xlat
sarb
test
dec
sar
lea
sub
add
or
add
add
add
or
add
sbb
sub
add
hlt
xchg
arpl
or
add
push
add
and
add
pop
lea
cmc
adc
adc
shl
cmpsb
add
sahf
jns
adc
call
dec
xor
and
add
inc
pop
sbb
mov
out
sbb
jl
mov
out
ds
ljmp
add
add
fcoml
xor
or
add
add
lahf
mov
add
fs
sbb
iret
adc
mov
add
mov
clc
add
mov
jno
add
add
add
inc
adc
add
pushf
cld
jb
push
add
push
push
push
jne
push
cli
roll
fadds
add
pusha
fsubrl
add
fildll
or
add
add
test
xchg
and
add
dec
sub
add
enter
mov
movsl
push
add
push
add
jno
addb
jp
in
push
add
in
enter
push
add
loopne
add
pop
lahf
jne
or
add
addl
add
adc
movsb
add
lret
inc
xchg
and
add
rcr
xchg
cmp
popf
mov
add
add
cmp
shl
dec
nop
in
sbb
rorb
arpl
sbb
push
pop
mov
pop
mov
fnstcw
das
jmp
mov
add
push
pop
loop
fdivl
addb
mov
rolb
add
outsb
in
jge
vmovd
or
sbb
popl
adc
add
fldenv
or
add
mov
scas
add
push
insl
push
pop
sub
add
fnstenv
mov
push
fs
add
jnp
or
add
mov
add
cmp
mov
xchg
ja
out
inc
cmp
jo
mov
dec
call
add
jbe
fnstenv
aas
cmpsl
movsl
pop
aam
xor
shrb
aaa
add
add
loopne
inc
xchg
mov
sbb
pop
mov
add
xchg
cmc
addr16
sub
fiadds
xor
cld
mov
add
bound
stos
mov
xor
mov
add
imul
push
pop
inc
or
jne
sti
loopne
add
xlat
mov
mov
sbb
push
xchg
jecxz
or
sub
out
inc
xor
add
add
add
xchg
frstor
shrl
stos
add
into
push
add
sub
sub
xchg
in
pop
scas
add
cmpl
dec
push
dec
das
jbe
add
icebp
lret
push
ficoml
lds
jo
xor
or
add
pop
dec
sub
sbbl
mov
rcl
push
out
mov
jae
lret
add
in
fwait
adc
xchg
bound
xchg
pop
pop
stc
mov
xor
pop
inc
inc
and
xchg
pop
and
add
inc
mov
add
lahf
imul
add
leave
add
dec
je
jne
addb
leave
sahf
sahf
push
in
dec
cmpsl
test
add
jb
jecxz
pushf
stos
add
test
mov
add
add
add
add
lods
into
inc
dec
stos
add
in
shl
jle
adc
out
add
add
repnz
pop
add
loopne
insl
cmpsb
add
push
mov
add
lods
add
xchg
inc
movsb
add
loop
pop
rolb
pop
aas
mov
call
mov
add
pop
inc
orl
inc
mov
mov
add
add
pop
mov
add
fisubrs
cwtl
inc
ljmp
into
divb
or
loop
pop
and
push
add
cmp
mov
add
pop
aas
pop
pop
cmp
xor
mov
pop
push
pop
test
add
sbb
inc
push
xor
add
pop
mov
icebp
in
add
xchg
mov
add
jle
les
int3
jle
mov
inc
and
add
push
cmpsb
add
stos
add
xor
push
les
or
mov
sub
add
and
add
rcll
add
pop
jno
lret
dec
adc
add
mov
aaa
sti
insl
enter
pop
push
add
add
pop
pop
clc
jbe
add
xlat
add
add
fwait
mov
cli
xor
add
sub
add
add
pop
roll
lcall
rep
jbe
cld
aaa
lods
add
pop
in
pusha
jbe
jne
add
add
out
add
fucom
ret
add
inc
inc
rcrl
pushf
negl
pusha
sub
jle
pop
adc
enter
lcall
loopne
add
or
add
add
cmpsb
add
cli
arpl
mov
add
add
pop
fisubl
cmpsl
jne
cmp
add
popf
daa
add
clc
sbb
xchg
fnstsw
add
add
ds
fdivl
sub
add
jnp
movsl
pop
out
out
cmp
loope
lods
add
scas
add
imul
xor
pusha
jbe
lret
fstpl
jge
jbe
jmp
add
out
jge
hlt
jae
fs
add
cld
dec
jge
cmpsl
insl
insb
dec
xchg
stos
add
xlat
mov
add
fisttpll
or
ret
jle
adc
cmp
and
add
mov
lahf
pop
lahf
pop
mov
add
test
add
inc
pop
mov
push
and
add
in
inc
cmp
lea
and
add
rcrb
or
mov
add
lods
xchg
add
xchg
add
and
push
inc
xchg
pop
sub
add
test
add
pusha
push
jmp
dec
fdiv
and
add
addr16
mov
loop
inc
jno
add
negb
icebp
mov
dec
push
or
add
std
enter
add
cltd
dec
aam
out
cmpsl
je
dec
repnz
into
push
rdtsc
mov
pushf
jno
add
cld
push
jl
daa
int3
sub
add
jmp
lods
add
sub
in
ret
lret
add
cmpsl
xchg
xor
and
add
lock
lods
mov
and
add
sbb
add
xchg
xor
mov
add
add
add
fnstenv
push
loop
aas
push
add
add
sub
add
add
jl
test
add
dec
aas
addb
popf
pop
sahf
xchg
push
push
lock
outsl
andl
add
mov
add
add
xchg
push
mov
mov
out
mov
sbb
enter
add
popa
in
push
and
add
outsb
mov
sbb
out
call
jg
das
les
mov
cwtl
ret
mov
inc
dec
jne
lcall
in
sbb
add
aaa
addl
ficompl
scas
jno
lods
jns
scas
add
push
xchg
cld
repnz
repz
mov
jne
lea
xor
inc
add
add
mov
add
cmc
push
mov
cwtl
mov
cmp
mov
push
dec
sti
sahf
xor
add
dec
fmul
xor
mov
add
in
push
add
jl
loop
add
or
add
add
aas
movl
neg
addb
test
add
popa
inc
out
pop
sub
add
jge
leave
out
push
push
lds
add
xchg
mov
adc
fsub
add
add
add
shl
mov
mov
jg
cwtl
pop
notl
add
add
pusha
lcall
lret
stos
push
fdivrp
pushf
mov
cmp
ficoms
out
sub
imulb
jge
add
or
xchg
out
and
incb
inc
cwtl
insl
pusha
xchg
add
mov
add
cmpsb
add
mov
or
add
lods
add
add
add
add
jno
dec
in
adcl
mov
pop
lret
mov
add
aam
jnp
inc
jae
add
add
sbb
inc
loope
scas
rcrl
addb
lea
call
aad
pop
jp
stc
jl
inc
outsb
imul
xor
add
push
movsl
pop
sub
jp
movsb
add
mov
jbe
add
add
and
add
mov
inc
dec
adc
fsubp
add
popf
push
or
add
cmp
add
mov
add
insl
fwait
xorl
xchg
loope
add
cwtl
xchg
add
popf
xchg
pop
or
add
or
or
mov
xor
outsl
inc
scas
pushf
imul
xor
adc
lret
or
add
adc
fs
pop
dec
or
cmp
add
jmp
movsl
or
add
push
add
mov
add
scas
scas
addr16
loope
push
xchg
dec
mov
xor
mov
mov
add
ss
fcomps
add
pop
ss
adc
clc
and
hlt
sti
sbbl
add
lods
lcall
xlat
pop
pop
lds
lock
inc
movsl
inc
inc
push
dec
std
jp
out
add
pop
sbb
push
add
les
cmpsb
add
dec
and
push
je
add
mov
add
mov
add
xlat
mov
add
inc
loope
xchg
xchg
add
adc
lret
add
nop
out
repnz
std
sbb
push
dec
pop
push
xchg
inc
sub
inc
add
outsl
andl
sub
add
shlb
adcl
add
mov
cmpsl
mov
je
add
repz
mov
inc
xor
jb
sbb
push
mov
mov
pop
rcrb
aas
pop
movsb
add
jno
and
add
sub
add
add
push
and
add
add
shl
ss
xor
das
popa
jne
sub
add
add
add
xchg
jns
mov
add
addr16
or
add
mov
add
jecxz
jae
lods
add
mov
add
cmp
mov
add
jp
mov
or
add
fwait
dec
and
xor
jns
adc
jmp
into
inc
mov
push
in
xchg
lock
dec
mov
sub
add
fcmovb
mov
scas
std
leave
mov
test
mov
add
int3
cld
xor
sub
add
adc
xor
add
rorl
add
inc
and
imul
pop
cmp
vhsubpd
add
test
or
add
add
push
add
je
fsubs
addb
clc
jnp
push
mov
dec
sbb
or
add
add
add
cmp
test
xchg
mov
mov
mov
sti
jns
inc
test
add
mov
add
out
mov
add
stos
loope
mov
sarb
lret
je
add
and
repz
or
add
push
add
xchg
ljmp
sbb
jbe
or
add
add
cltd
inc
fldcw
xor
cli
mov
sub
add
popa
je
add
lcall
outsl
add
and
outsl
xchg
lcall
xchg
jecxz
inc
xor
pop
pop
lret
arpl
add
cmp
add
insb
ss
xor
inc
or
mov
add
push
aad
add
jae
mov
and
cmp
decl
inc
shrl
addb
das
out
push
add
cmp
pop
addb
push
mov
mov
add
aam
add
divb
mov
add
pop
shrl
sub
add
add
pop
mov
add
sbb
dec
fistpll
push
mov
adc
cmp
dec
xlat
or
add
arpl
add
add
add
out
push
cld
sbb
mov
fs
xchg
fwait
add
add
ror
jae
out
stc
into
xchg
xor
mov
sti
sarb
add
add
int3
outsb
insl
addr16
add
imul
ja
fbld
add
add
add
add
add
int
ret
pop
inc
inc
mov
adc
sbb
mov
pusha
adc
adc
lret
fiadds
cltd
leave
adc
cwtl
cltd
adc
sahf
cmp
add
pop
je
stos
cli
jecxz
push
hlt
pop
push
out
jns
add
fmuls
gs
fiaddl
sbb
out
add
jo
imul
pop
movsl
sti
in
dec
mov
mov
stos
sbb
add
fstpl
sti
sti
adc
cmp
add
in
stc
lods
loope
fnstcw
inc
jle
pop
jnp
ds
add
add
cwtl
addr16
out
das
pop
xchg
cmc
repnz
or
mov
outsl
imul
arpl
add
xor
add
push
jecxz
mov
mov
aad
mov
xor
or
add
add
jg
outsl
addb
push
add
or
sbb
add
sub
add
fisubrs
cmpsb
add
shrb
out
rorb
rorl
push
add
lret
cmp
add
sub
fbld
into
fs
cmp
mov
add
sub
sbb
mov
dec
nop
sbb
mov
mov
int
jnp
fs
insl
inc
cmpsl
subl
cld
fwait
testl
sub
into
in
cmpsb
add
mov
lods
adc
lds
cmc
test
add
lods
sbb
add
or
add
mov
enter
inc
pop
data16
jne
ja
cwtl
or
add
xchg
add
daa
hlt
iret
mov
ljmp
aaa
lock
pop
cltd
add
add
add
repz
fcomip
and
add
stc
mov
iret
cmp
cmp
out
mov
add
push
add
js
mov
rolb
aad
add
xlat
addr16
add
test
add
jg
arpl
insl
in
addb
jnp
add
mov
inc
jnp
sbb
jg
push
mov
ret
and
add
adc
cmpsl
add
add
pop
mov
cmp
inc
scas
aaa
dec
mov
add
add
dec
and
add
and
add
mov
jp
sbb
iret
sti
shrl
mov
add
add
cwtl
inc
push
das
rolb
jb
mov
add
sub
add
call
insl
adc
jecxz
adc
jmp
pop
dec
mov
lcall
add
stc
cli
maxps
mov
in
sub
add
in
cmc
in
ret
xchg
add
into
outsb
int3
adc
add
jecxz
popf
or
add
or
add
push
mov
dec
push
add
lahf
ret
cltd
mov
and
add
scas
fcompl
pop
mov
add
mov
outsb
jmp
fistpll
cmp
cwtl
dec
or
cmp
mov
jle
add
dec
dec
negl
add
sub
and
movsl
lahf
jmp
sbb
xchg
sbb
adc
xchg
mov
add
fsubp
in
into
cmp
jle
mov
add
lock
jge
pop
mov
pushf
lds
setne
add
and
insl
sub
add
add
sub
add
push
xlat
out
in
sarl
add
sbb
dec
xchg
lods
add
pusha
adc
add
test
add
add
notl
mov
dec
lock
cmp
dec
stos
cld
test
add
push
popa
test
add
xbegin
fistps
sbb
add
jl
rcll
push
cli
jae
ja
push
repnz
lea
add
pop
fxch
xchg
add
add
push
mov
dec
test
add
ret
iret
fcoms
and
add
xor
adc
mov
sub
cli
jl
add
push
add
mov
adc
inc
mov
lods
into
pop
lock
xor
adc
sbb
inc
insb
adc
enter
in
fldcw
insl
push
sub
add
arpl
int
in
add
mov
add
mov
add
imul
rcrb
out
aam
cli
cmp
add
or
xor
add
stc
cli
movsl
cltd
mov
add
mov
add
cli
and
adc
or
add
add
add
shrl
sbb
add
outsl
inc
insb
cli
ja
loopne
aam
mov
adc
xor
xchg
add
cmp
add
inc
iret
fcoml
add
pushf
push
adc
jecxz
add
negb
add
hlt
stc
aas
mov
clc
pop
outsb
shlb
add
xchg
daa
in
into
incl
push
cmp
mov
shrb
arpl
daa
push
cwtl
cmpsl
mov
add
add
xor
add
leave
ja
sbb
fistpll
repz
ret
cmp
pop
xchg
divb
mov
and
dec
jns
ret
inc
mov
add
add
adc
mov
mov
add
cmp
add
rcrb
fwait
xlat
incl
rolb
add
jecxz
sbb
adc
lods
add
leave
in
rorb
mov
mov
add
dec
push
add
mov
mov
inc
adcl
js
or
add
push
adc
movsl
daa
jne
pop
xor
inc
xchg
cmpsl
xchg
mov
aad
test
add
std
push
mov
dec
add
aaa
arpl
mov
call
add
or
add
add
into
pop
into
or
add
popf
push
fwait
andl
or
add
lcall
add
subl
neg
mov
add
add
shl
cli
pop
movsb
add
mov
addb
inc
gs
ficomps
test
add
aam
sbb
stc
dec
insl
mov
add
scas
add
movsb
add
dec
testb
inc
push
pop
sub
add
dec
fcoms
mov
inc
jne
add
roll
add
aas
ss
dec
orl
repnz
or
add
add
mov
push
pop
ss
jne
add
fiaddl
add
dec
sbb
notb
fwait
add
add
and
add
cmp
enter
imul
add
add
mov
mov
add
ret
or
add
jno
pushf
inc
scas
add
icebp
inc
out
aaa
push
mov
call
add
add
jmp
add
cmovo
adc
add
mov
adc
cmp
jge
ds
sbb
mov
divl
movsl
mov
and
adc
push
fldl
inc
sub
loopne
mov
movsl
xor
lock
push
xor
int
in
jle
adc
xchg
fs
add
adc
add
and
add
jmp
add
add
int
imul
mov
add
addr16
jb
mov
add
std
lds
add
xchg
imul
add
or
add
das
fnsave
aaa
inc
imul
test
sbb
ret
fiadds
into
xor
add
add
fdivrs
cmp
sub
lock
ss
mov
mov
dec
jno
sbb
cld
cmp
insb
add
add
mov
jne
ret
movsb
add
outsl
push
in
loop
aaa
mov
data16
add
cmpsb
add
lods
add
mov
mov
mov
push
pop
add
sub
add
adc
add
push
daa
bound
cmpsb
add
mov
add
push
lock
ret
add
std
dec
std
adc
mov
fiadds
inc
icebp
pushf
adc
fiadds
pop
sub
and
add
insb
ret
push
je
push
scas
clts
add
orl
and
jne
ret
or
xlat
push
dec
fstpt
pop
add
add
test
jl
cmp
gs
outsb
sub
inc
xor
push
xchg
ds
mov
add
std
jns
movsb
add
adc
jmp
xchg
jg
stos
add
or
mov
add
addb
add
lcall
xchg
dec
jle
out
add
mov
add
lret
dec
hlt
stos
add
or
add
inc
fistpll
test
add
add
aas
mov
out
sbb
jle
add
mov
add
std
push
cwtl
jecxz,pt
ds
add
popa
or
jne
jp
mov
add
add
pop
scas
add
push
into
insl
mov
sub
inc
mov
daa
sbb
aam
sub
fwait
xor
loope
mov
cmpsb
add
insl
out
inc
pop
cmp
mov
sub
nop
lcall
mov
movsb
add
fists
add
incl
lods
imul
jne
add
shr
mov
lods
into
xchg
bound
dec
mov
cmpsl
xlat
ja
add
lcall
add
fld
add
add
pop
ret
add
add
add
add
loopne
cmp
iret
leave
pop
add
cmp
mov
call
add
pop
aas
cmp
inc
test
add
add
test
sbbl
xchg
pop
xor
mov
outsb
pushf
pop
out
loopne
dec
mov
and
fs
movsb
add
hlt
je
xor
lret
nop
lcall
inc
sub
add
int
out
test
add
frstor
add
sub
add
addb
add
add
mov
push
cmp
sub
add
sub
add
add
movsl
mov
sub
add
xchg
push
add
add
add
sub
add
adc
adc
pop
and
xor
sarb
jp
push
cmp
sbb
and
in
jb
clc
push
pop
jbe
add
sbb
in
add
adc
or
jle
and
push
in
std
sub
add
jle
mov
add
or
gs
add
test
add
pop
push
and
add
jmp
mov
add
mov
inc
sub
add
inc
rorl
stc
pop
sub
add
mov
lods
add
xchg
xlat
stos
add
fists
inc
inc
xor
outsb
xchg
mov
aaa
mov
add
rcl
add
ss
scas
add
mov
inc
xchg
add
push
add
leave
cmp
std
mov
leave
ljmp
rol
jmp
dec
mov
enter
repnz
je
add
mov
cmp
and
add
ss
inc
in
cmp
test
add
add
inc
movsb
add
mov
add
add
add
jae
pop
xchg
add
je
or
add
stos
add
cltd
fsubrl
jo
lds
lcall
cmp
mov
lcall
sti
sahf
fisubrl
and
out
stos
add
ret
or
adc
push
add
jmp
or
add
movsb
add
jmp
add
sti
dec
inc
cmp
pop
pop
dec
jb
jle
push
mov
jns
fists
and
add
cmp
jmp
rol
mov
add
sub
rcrb
rcll
adc
popf
int3
jecxz
mov
outsl
inc
sbb
cwtl
inc
fsubrl
add
mov
and
add
pop
dec
lods
adc
jne
scas
add
stos
insl
cmc
jl
mov
movsl
fidivl
loop
xchg
add
adc
loope
jo
adc
xchg
fstps
mov
pop
lock
imul
cmp
or
add
add
cltd
imul
and
sub
add
fldl
add
shlb
in
xor
addb
aad
push
add
cmp
sbb
mov
add
insb
mov
add
add
adc
add
mov
les
mov
mov
add
pop
jno
jbe
add
fmuls
add
mov
push
int3
mov
dec
inc
push
mov
add
sbb
add
xlat
add
add
pushf
jns
lret
subl
lods
lahf
or
add
pop
xor
cltd
inc
lcall
add
ret
push
adc
sub
add
add
add
add
ret
mov
repz
add
xor
shll
and
add
mov
pop
leave
xor
sbb
mov
add
out
jp
orl
jp
push
add
pushf
test
shll
mov
add
mov
iret
in
dec
shrb
add
inc
mov
addb
mov
ret
fadd
add
pop
jnp
mov
dec
repnz
in
add
inc
xchg
and
add
add
dec
pop
sub
add
and
add
jne
mov
int
shlb
xor
dec
and
cltd
jecxz
hlt
mov
add
cmp
inc
sar
and
cmc
incb
jno
cltd
sbb
test
add
add
ret
sahf
or
add
xchg
pop
std
sub
jo
cmp
push
mov
add
and
add
aas
movb
inc
add
pop
pop
fldl
data16
pop
cmp
xor
or
shrb
ftst
jmp
loop
push
cwtl
hlt
jg
sbb
push
sub
add
push
loopne
mov
add
xchg
add
dec
pop
sub
add
adc
add
cmp
outsb
jmp
mov
repz
mov
cwtl
add
add
std
push
repnz
or
add
dec
movb
add
enter
ret
mov
jge
xchg
add
add
cli
inc
or
inc
rcr
dec
out
pop
ret
inc
cmp
mov
jecxz
sbb
jmp
ljmp
pop
cmp
xor
add
sbb
mov
inc
xchg
xor
dec
js
add
jge
jo
cld
repnz
add
ljmp
fidivrs
and
add
add
in
add
add
jo
ret
mov
push
dec
dec
out
les
add
cmp
add
add
repz
pop
push
loopne
rolb
inc
xor
xchg
lret
hlt
cmpsl
aam
add
cmc
pop
popa
add
add
and
icebp
cmc
push
stos
add
add
push
dec
pop
stos
gs
mov
add
jne
jecxz
cmp
cltd
ja
test
add
jno
aam
add
cmc
dec
mov
or
add
add
pop
and
into
mov
add
dec
cmpl
repz
xor
add
sub
add
push
fsubs
add
adc
inc
jo
addb
fwait
or
add
cmpsb
add
sbb
add
fld1
loopne
aad
mov
mov
add
arpl
push
adcl
mov
nop
negl
push
add
mov
pop
xor
stos
xlat
in
not
jne
cmpsl
aad
lea
xchg
push
cltd
sbb
stc
cmp
push
adc
mov
nop
lock
add
inc
cmp
lds
dec
xor
pushf
mov
stos
add
xchg
fbstp
sub
add
add
les
cmp
mov
add
outsl
mov
push
xor
mov
xchg
iret
cmp
push
fwait
pop
add
push
add
adc
mov
add
cmp
push
cmpsb
add
int
fsubrp
xor
add
sbb
clc
je
add
add
pop
loope
ret
mov
add
or
add
hlt
pop
rorl
add
add
pushf
loopne
xlat
jge
cmpsb
add
mov
add
scas
add
inc
push
les
push
add
add
cmp
sub
xchg
add
aas
pushf
in
sbb
fiaddl
addb
aad
jg
mov
add
jle
mov
xor
cmp
fstpl
add
hlt
push
outsb
enter
push
into
cmp
jle
in
mov
aas
test
popa
outsb
mov
test
add
add
ret
in
push
jmp
fiaddl
add
push
adc
xor
mov
add
add
loopne
sub
mov
lods
add
jb
jle
int
imul
add
ficoml
dec
das
pop
pop
mov
dec
xchg
mov
xor
das
test
add
shll
xchg
outsb
sub
add
dec
addb
call
cld
test
add
push
xchg
mov
or
sbb
cmp
ds
sbb
fimull
add
dec
inc
pop
and
inc
lods
faddl
enter
add
jg
pop
push
cli
dec
test
add
xchg
dec
bound
imul
or
add
xlat
xorl
leave
and
addr16
fstpl
mov
test
add
or
loopw
popl
add
loopne
fdivs
or
add
add
inc
rorl
stc
call
xor
pop
aaa
xor
add
pop
repnz
sbb
aas
jbe
add
mov
mov
add
fiaddl
sbb
jno
mov
add
xchg
pop
test
addl
or
sub
add
jo
cmp
inc
mov
out
js
lret
jecxz
scas
add
loopne
jae
in
aas
ror
add
add
in
cmpsb
add
insb
mov
cwtl
into
daa
adc
add
pop
les
add
imul
lcall
sub
add
test
mov
rcl
adc
ds
dec
sub
add
add
sbb
icebp
push
dec
fildll
add
xchg
mov
testl
cmpsl
mov
add
mov
add
and
add
cmp
mov
add
xchg
adc
add
lahf
loopne
xlat
jb
gs
pop
or
jae
add
pop
mov
add
add
mov
mov
add
ljmp
mov
in
adc
add
xchg
xchg
enter
add
add
jne
sbb
jb
cltd
mov
out
pop
push
mov
add
dec
mov
cmp
ret
inc
test
popa
pop
sub
pop
xlat
cmc
jg
pusha
mov
add
sahf
jp
jno
dec
pushf
mov
loop
sbb
mov
add
scas
add
gs
mov
add
pop
sub
outsl
inc
xchg
xchg
sub
pop
divl
call
add
add
mov
xor
mov
inc
mov
add
jne
adc
sahf
xchg
or
add
push
jbe
pop
jnp
adc
dec
lret
xchg
adc
add
flds
mov
add
cltd
lock
xchg
sarl
jle
cld
aad
leave
shll
aaa
jp
adc
stos
cmp
mov
mov
add
push
adc
lahf
arpl
add
ret
out
cmp
jne
daa
call
cmc
ljmp
add
lahf
iret
imul
add
cld
int3
out
pushf
icebp
cli
jg
sub
add
lods
lret
test
add
ret
dec
push
add
pop
jns
inc
push
sub
add
lock
lahf
ja
fwait
pusha
addb
cmpsl
dec
popf
add
mov
sti
mov
bound
jnp
fbld
dec
xor
jne
movsb
add
lcall
jnp
fs
or
add
dec
adcl
pushf
push
pop
mov
sbb
add
ss
add
inc
nop
arpl
in
stos
add
cmp
cmp
add
sbbl
or
pop
xchg
sub
add
inc
fisttps
shlb
add
and
add
add
add
jb
pusha
sbbl
mov
add
xor
add
add
add
add
push
shlb
mov
inc
mov
push
mov
aad
sti
insb
pop
sbb
xchg
lock
pop
add
mov
add
loope
fwait
add
add
xchg
stos
add
add
push
iret
add
inc
xor
add
aad
or
add
mov
rorl
add
adc
sub
add
add
jp
stos
add
insb
ss
pop
push
outsb
shrb
xor
repz
add
adc
sarl
int3
stos
add
stos
add
add
add
into
inc
call
adc
add
mov
add
ret
in
dec
mov
add
into
mov
add
dec
stos
adc
sarl
add
mov
add
mov
insl
fnsave
xchg
addl
ja
sahf
xor
add
shlb
insb
add
scas
cmp
jmp
sub
add
push
jns
cmpsb
add
rolb
xchg
cmp
dec
or
xor
add
jo
sbb
xor
rsqrtps
imul
sub
dec
xchg
add
push
add
sbb
add
imul
add
pop
sbb
jbe
dec
pop
out
jge
adc
adc
fsubs
mov
dec
scas
insb
mov
repnz
in
push
inc
push
pop
into
mov
xor
or
adc
and
add
dec
adc
add
out
or
add
push
adc
add
sub
add
lea
add
addr16
add
aas
dec
push
dec
cmp
sti
stos
add
sbb
shrl
add
add
out
fistl
mov
mov
das
lds
add
in
test
add
add
add
enter
hlt
ljmp
in
inc
jp
add
add
fs
add
iret
mov
enter
mov
add
push
mov
add
add
and
cmp
icebp
add
add
sub
add
repnz
add
inc
inc
arpl
fsubp
fcompl
add
inc
test
add
pop
sbb
aas
sbb
cmp
mov
add
push
add
lcall
mov
dec
xchg
or
add
cmp
fisttpll
add
sbb
dec
sbb
js
add
orl
jb
pop
adc
or
or
add
push
int3
in
lahf
call
mov
les
pop
inc
add
into
nop
cltd
or
add
pop
mov
add
sbb
lahf
out
adc
mov
mov
js
out
pop
out
shlb
add
pushf
repnz
add
inc
adc
push
xchg
push
inc
les
inc
je
add
cmpsl
in
mov
out
out
sbb
rcl
mov
pop
stos
mov
add
pop
and
or
add
lahf
dec
and
add
sub
jecxz
add
add
xchg
add
insb
das
sti
popa
push
push
adc
and
xor
aas
cmpsb
add
jbe
add
aad
int3
test
add
add
test
add
scas
dec
cmc
or
push
xchg
push
push
add
mov
add
into
sub
add
add
mov
add
movsl
lret
add
sub
add
xor
add
cld
int3
inc
test
push
shlb
loop
mov
add
cmp
lock
add
add
insl
and
add
dec
xchg
cltd
repz
push
fiaddl
mov
add
add
mov
pusha
imulb
test
add
cld
ljmp
add
push
stos
add
pop
mov
or
sub
ss
push
mov
inc
xlat
idivl
push
sub
add
add
jb
scas
add
mov
inc
hlt
and
sahf
addb
xor
add
add
and
mov
in
mov
add
pop
mov
ljmp
push
scas
add
mov
sti
or
add
inc
cwtl
movl
decb
add
cli
add
add
add
or
add
add
xchg
or
add
test
pop
fidivs
push
cmp
xor
push
sub
add
pop
in
cmp
add
add
mov
add
push
add
mov
or
add
add
addr16
xchg
leave
int
or
add
leave
xorl
repnz
mov
pop
stos
add
lock
rorb
pop
nop
scas
adc
add
dec
loop
ja
call
into
movsl
pop
ljmp
ja
lea
add
movsb
add
inc
inc
sub
add
add
lods
mov
rolb
add
in
push
pop
mov
push
xchg
jns
not
cmp
cmp
add
inc
push
or
add
subl
add
cmpsl
icebp
inc
popf
inc
add
out
faddl
add
sub
add
lock
out
xchg
add
popa
pop
repz
add
xchg
fwait
or
add
aaa
jg
cmp
jl
fs
imul
pop
lahf
push
inc
cmp
cmp
leave
xchg
and
push
pop
mov
adc
inc
hlt
out
sbb
jo
shlb
cwtl
jns
sbb
jbe
roll
add
mov
js
sub
add
outsl
adc
pop
pusha
aas
fnstsw
add
add
outsb
push
add
pop
sbb
stos
add
inc
enter
and
add
add
mov
ret
enter
xchg
jg
jg
lods
fistpll
jp
sub
rclb
popf
pop
shlb
nop
mov
sub
add
pop
sub
add
int
cmp
mov
repz
jmp
lea
and
add
out
and
jmp
in
in
scas
add
mov
dec
push
lods
add
test
add
add
gs
mov
push
jnp
mov
add
in
ret
mov
cmpsl
push
icebp
or
add
dec
icebp
mov
aas
hlt
mov
jl
fs
sbb
pop
fs
push
jne
test
xchg
add
rol
pop
or
add
add
or
repnz
pushf
mov
dec
enter
inc
jne
push
add
sub
in
into
sub
int
and
add
add
or
add
movsb
add
sub
rcll
xchg
lock
loopne
jns
out
and
add
repz
sbb
cwtl
mov
jno
jle
jle
add
mov
and
test
add
lcall
xchg
insl
add
add
add
add
pop
stos
add
imul
shl
sbb
ret
jo
add
pop
cmpl
add
hlt
imul
push
pop
cmpsb
add
sbb
push
mov
add
repnz
xchg
js
sbb
mov
jl
in
icebp
bound
add
and
add
cwtl
push
add
inc
test
add
int3
mov
dec
add
xchg
ret
fldcw
push
add
in
in
add
xor
dec
cmp
sbb
jge
stc
push
cmpsl
sbbl
fdivrl
ret
mov
add
js
add
fwait
aas
les
sti
inc
nop
push
sarb
pop
xlat
push
and
add
add
sbb
xor
add
int
movsb
add
add
cwtl
addb
mov
mov
cmp
push
addr16
sub
punpckldq
ficomps
out
push
aad
inc
icebp
outsb
pop
push
cmp
outsb
dec
and
add
jne
cli
pop
jne
lahf
out
add
add
push
mov
add
add
cmp
adc
inc
cwtl
xchg
mov
clc
test
leave
jecxz
movsl
dec
xlat
add
add
shrb
pop
xchg
enter
cmp
mov
add
or
sbb
cmpsb
add
push
inc
mov
mov
add
daa
xor
adc
mov
add
inc
pop
xchg
cmp
add
fcmovnb
xor
add
lret
mov
add
fchs
adc
add
cli
mov
add
add
roll
sahf
cld
cmp
gs
or
add
repnz
add
add
addb
sub
add
std
hlt
shl
dec
xor
add
mov
push
rcr
cmp
call
mov
add
shrl
add
jne
add
mov
sti
out
jl
xor
repz
add
push
repnz
dec
mov
fs
aaa
pop
je
call
pushf
cld
test
add
and
add
push
inc
shr
adc
or
add
iret
sub
aaa
jnp
and
fldl2t
pop
xchg
inc
and
cmp
ret
mov
add
aas
movsb
add
or
lods
add
inc
adc
mov
inc
pop
add
insb
stc
mov
fs
add
add
rorb
xchg
dec
push
test
jne
rol
jl
add
push
or
add
jg
mov
std
jp
sub
jae
loop
lret
pusha
jecxz
into
lcall
aad
or
add
mov
add
add
add
fildll
pop
rorb
dec
sbb
fnstenv
mov
add
mov
add
roll
xchg
push
jmp
add
add
scas
xor
or
add
cmp
incb
inc
sub
aad
xor
add
ret
add
movsb
add
daa
out
or
add
mov
xchg
mov
add
add
ds
cltd
rcrl
int3
js
or
add
js
adc
add
add
pop
xor
int3
test
add
add
out
xchg
cmc
mov
dec
addb
into
push
adc
push
lock
add
add
popf
pusha
mov
add
out
sub
lret
cmpsl
mov
jp
icebp
je
scas
ror
pop
cmp
xor
fstps
inc
std
xchg
into
jg
inc
aaa
in
or
add
iret
out
add
add
xchg
out
add
lock
inc
sbb
movsb
add
or
add
xor
loope
add
add
pop
nop
pop
rorl
nop
or
add
xor
rorb
jae
loope
add
cli
rolb
sub
mov
xchg
lcall
xchg
add
cmp
rcr
nop
fs
push
adc
add
add
sub
add
xchg
insl
out
or
add
cmp
dec
lret
jae
addb
dec
mov
add
cli
gs
sbb
add
xor
add
inc
push
sbb
bound
xor
add
rolb
add
add
faddl
addb
push
add
ffreep
jb
pop
pop
pop
xchg
and
add
or
add
xor
loop
jecxz
xor
add
lcall
adc
into
cld
cmc
test
jl
push
add
add
add
mov
pop
push
xor
jge
ret
add
xor
js
idivb
mov
icebp
in
jne
sti
cmpsl
lahf
sbb
stc
movsb
add
adc
fcoml
add
xor
gs
repz
pop
add
dec
sub
add
cmp
add
and
add
or
add
out
shrl
add
add
shll
add
mov
add
aaa
mov
inc
inc
js
add
mov
add
add
mov
test
add
add
pop
addb
das
mov
ret
dec
testl
mov
mov
add
mov
jno
loopne
inc
cwtl
adc
mov
add
push
add
add
jns
cmc
lds
and
add
xchg
faddl
inc
pcmpgtd
add
mov
add
jnp
xorl
ja
mov
add
dec
bnd
cmp
rorl
out
or
add
lock
jnp
cmp
dec
push
pop
mov
shrl
int
mulb
pop
push
add
lods
cli
or
add
sub
sub
add
fldt
lods
add
scas
add
cli
addb
mov
add
mov
add
add
mov
add
push
push
add
jae
add
addb
xor
insl
icebp
ret
push
inc
fs
adc
lret
add
add
and
add
repz
mov
dec
mov
loopne
jnp
iret
sbb
add
mov
sti
inc
inc
cmp
bound
stos
add
lret
xchg
and
add
xchg
and
dec
pushf
inc
aas
mov
add
add
fcoml
mov
pop
dec
cmp
or
add
outsl
pop
mov
nop
mov
inc
aam
add
pushl
cmpsl
ds
or
add
mov
add
je
mov
mov
scas
add
push
testl
aam
mov
jge
js
outsb
mov
add
mov
cmp
jp
add
insl
bound
push
inc
aam
lret
add
add
pusha
dec
mov
aas
push
iret
hlt
sbb
shlb
lods
stos
stc
push
add
int3
pop
xchg
push
push
push
push
movsl
inc
fisubrl
lds
add
sbb
fadd
xchg
jb
stc
fdivr
push
ret
push
adc
popf
bswap
stos
add
loopne
stos
lods
add
adc
test
add
mov
lret
mov
jl
das
outsb
inc
fisttpll
add
call
mov
add
dec
jecxz
pop
add
dec
sbb
sbb
add
mov
jmp
and
aas
adc
pop
mov
add
mov
scas
add
rorb
out
add
fimuls
add
add
add
push
fs
or
add
mov
add
fistps
xchg
inc
rcrb
inc
add
aam
shlb
add
inc
out
push
outsl
sti
into
add
add
pop
add
pop
aaa
leave
data16
and
fs
add
outsl
pop
mov
add
pusha
out
mov
jge
gs
je
add
fstl
cltd
hlt
loop
jle
pop
jb
add
imul
xchg
je
mov
fnstenv
jns
cltd
loop
add
out
lods
adc
push
xor
xor
mov
movsb
add
or
add
aam
push
into
mov
add
inc
push
push
add
xor
in
add
push
cmp
inc
loopne
cld
adc
insb
xlat
xor
add
add
aad
addb
sub
xchg
adc
inc
popa
out
xor
push
add
adc
stc
testl
daa
xchg
fisubs
dec
mov
jp
add
dec
pop
xor
aad
mov
test
add
add
in
das
imul
leave
fwait
and
xchg
frstor
addb
btc
push
and
inc
repnz
stos
sub
add
test
add
xor
add
cld
popf
shrl
das
fsubrl
mov
movsl
push
fcmovbe
push
add
addb
mov
inc
out
arpl
mov
cmpsb
add
mov
popa
xchg
addb
sub
into
or
add
cmp
ss
and
add
stos
cwtl
inc
std
data16
dec
test
or
add
mov
shl
popf
daa
out
inc
pop
xlat
push
pop
pusha
stc
bound
add
loop
cmp
mov
mov
inc
cmp
cmp
mov
jp
int3
pop
and
add
jg
lahf
fs
rorl
and
add
sub
add
test
add
jae
lods
add
mov
add
hlt
xchg
sub
add
scas
add
enter
add
and
add
add
pop
or
mov
add
clc
push
popl
sar
sub
add
cli
dec
adcl
xor
xchg
ds
lret
mov
pushf
and
cltd
mov
dec
outsb
push
cmpsl
ja
inc
ljmp
fwait
test
add
stos
jle
xchg
ret
int
push
dec
adc
mov
add
leave
cmc
xchg
faddl
push
cli
cmpsb
add
inc
clc
and
loope
mov
adc
and
add
addl
out
xchg
test
lds
cmp
pop
mov
add
aaa
lret
lahf
incl
inc
xchg
add
dec
and
add
cmp
add
fwait
xchg
xor
jmp
push
int
add
and
add
mov
adc
lods
add
jae
sbb
test
out
xchg
pop
je
leave
pop
inc
or
lcall
mulb
add
inc
inc
rsm
add
orl
add
inc
int3
xchg
dec
test
push
jo
js
jmp
pop
mov
aaa
pop
lods
test
add
push
adc
in
stc
mov
lea
pushw
ss
sub
add
push
xchg
and
add
cmp
inc
inc
mov
or
push
xor
add
lea
fwait
dec
sub
cli
mov
xlat
or
add
sub
add
cwtl
inc
mov
ret
add
fnstcw
pop
loop
push
jno
push
sahf
mov
jle
add
sahf
mov
xor
mov
fisttps
les
dec
mov
xchg
adc
jg
fisubrl
add
jo
push
mov
mov
addb
adc
pop
cmp
xor
test
movsl
and
sbb
push
ds
xor
and
add
and
add
iret
out
insl
scas
popf
lea
rorl
imul
add
int
adc
lret
or
add
cwtl
adc
cmc
xchg
jmp
sbb
fs
mov
sub
add
mov
lret
jl
rorl
cli
jmp
jo
lcall
fcmovnbe
gs
or
add
movsl
popa
pop
pop
inc
jle
fisubrl
push
sbb
sbb
shrl
add
add
fs
xor
outsl
mov
add
mov
stos
add
add
add
adc
jo
lods
add
sub
add
add
iret
aaa
push
or
add
aaa
addb
sarb
mov
shll
in
xor
nop
ret
movsl
aas
sbb
xchg
add
sbb
inc
inc
sub
add
lea
mov
or
adc
push
add
cmp
add
add
fs
adc
mov
int3
lret
enter
mov
add
std
or
or
add
pop
jae
cmp
int3
scas
and
add
add
sbb
xor
movb
out
add
aas
jp
push
add
mov
movsb
add
cli
pop
lds
dec
fs
push
jecxz
push
mov
cli
aas
push
into
inc
inc
or
ror
mov
jmp
add
cltd
push
mov
add
in
orl
pushl
and
add
inc
lahf
movsl
jg
loope
xchg
and
cmpsb
add
dec
call
fsubs
inc
sub
add
add
cmp
pop
lahf
jns
pop
cmpsb
add
jge
xchg
push
jg
les
push
add
mov
push
mov
add
inc
addb
add
add
mov
imull
add
add
ja
dec
lret
dec
push
mov
mov
add
sub
sahf
add
jl
popa
inc
jmp
lock
jl
sub
cmp
jnp
xchg
push
xchg
add
test
add
cmpsl
adc
xorl
clc
test
add
dec
movsb
add
fstps
clc
test
cmp
test
mov
add
mov
mov
in
jecxz
add
add
add
and
add
dec
fwait
pop
fwait
mov
add
mov
jmp
leave
mov
add
shl
inc
pop
lahf
sbb
shll
mov
add
push
shrl
mov
or
ja
push
jb
out
mov
mov
addb
lea
push
push
add
daa
push
lret
sbb
shll
add
dec
gs
outsb
loop,pt
add
fs
aam
and
add
insl
inc
adc
xor
out
mov
add
or
add
add
fwait
hlt
enter
add
mov
add
sbb
and
add
add
test
add
add
pop
call
rolb
add
cmpsl
or
add
addb
jl
mov
mov
cli
icebp
jb
cld
outsl
fisubl
add
ficompl
add
mov
mov
add
roll
mov
xor
popa
in
icebp
enter
dec
aaa
mov
xor
test
add
cmc
sahf
adc
add
ss
cmp
mov
sub
sub
add
add
add
aas
daa
xlat
ljmp
push
inc
je
arpl
addb
scas
add
xchg
add
loope
std
leave
add
mov
add
xor
sbb
popf
push
mov
test
add
into
pushl
add
bound
xchg
add
add
push
outsb
push
add
rcrl
add
ret
add
push
ret
add
add
fcoml
ss
mov
add
push
xchg
adc
add
mov
add
mov
insb
scas
add
xor
add
and
ss
hlt
rcrb
cwtl
out
xor
mov
push
add
imul
iret
sti
in
mov
fdivrs
jno
jp
cld
dec
jbe
xorl
imull
sbb
add
addr16
shl
cwtl
stos
push
sub
and
add
jnp
lret
int
stos
xchg
jae
jl
pop
fwait
jp
cmp
rcll
pushf
sahf
mov
xor
xorl
add
or
add
aam
out
jb
add
fdivl
xor
jg
mov
add
add
push
and
add
dec
or
and
cltd
pop
pusha
mov
insl
ss
pop
jns
addb
xor
push
add
loope
sbb
cmp
add
jl
xchg
jns
inc
repnz
decl
out
sbb
testb
dec
fadds
dec
shrb
cwtl
pop
xchg
leave
mov
ret
cltd
and
add
xchg
inc
pop
or
add
sti
and
std
daa
pop
movb
add
add
sub
add
push
add
pop
mov
fcompl
sub
add
add
push
sahf
in
cltd
mov
add
cwtl
cmp
and
add
push
pop
mov
add
inc
stos
add
addb
sub
push
add
adc
fistps
cmc
inc
cmc
push
inc
cmpsb
add
cltd
mov
xchg
add
fdivp
lods
aaa
mov
add
jp
add
or
add
mov
add
add
lods
xchg
stos
add
pop
add
add
inc
daa
roll
xchg
mov
sub
into
repz
mov
xlat
mov
inc
lret
lods
add
push
cmc
fdivl
add
pop
popf
push
cmpsb
add
in
hlt
ret
inc
and
cmp
out
push
je
lods
rclb
push
fnstsw
xchg
add
dec
data16
add
movsb
add
out
or
add
out
fldenv
adc
mov
add
ficompl
jns
das
inc
mov
cmp
in
mov
cmp
add
inc
int
add
mov
add
xchg
sahf
add
aam
jmp
aas
mov
push
add
clc
imul
xor
jge
stc
stos
lock
jb
ds
mov
add
push
lret
jbe
mov
xchg
xor
rcr
or
add
add
jmp
fcmovne
sub
and
in
out
jbe
inc
sbb
and
add
add
fstp
sbb
sbb
push
movsb
add
lods
add
aam
pushf
sub
add
loop
pop
ret
adc
add
loop
push
fdivr
mov
out
inc
xchg
push
add
movsb
add
ljmp
rcl
mov
arpl
jnp
add
pop
addb
pop
aad
and
lea
cwtl
repnz
sub
inc
jl
shll
or
add
inc
loopne
in
add
add
addb
mov
xchg
xor
clc
stos
add
xor
inc
test
subl
gs
nop
mov
pop
pop
mov
add
xor
rol
add
mov
mov
hlt
push
mov
add
lea
stc
mov
add
add
xacquire
add
scas
loopne
adc
add
ljmp
loop
sub
add
mov
add
aaa
movsb
add
adc
dec
sbb
incl
and
add
nop
daa
xor
ret
inc
jl
cmp
add
sbb
mov
jno
jg
or
add
inc
inc
adc
add
add
inc
shlb
dec
pop
pop
jl
shlb
les
outsb
and
add
adc
ficoms
add
mov
std
ja
push
xchg
in
sbb
and
int3
aaa
push
jle
cltd
icebp
ret
mov
add
add
add
sub
mov
adc
mov
fsubr
inc
inc
dec
ret
shll
cmpsb
add
cmp
jb
shlb
add
add
add
decl
lret
mov
loopne
and
add
add
push
sbb
int
lods
add
out
mov
mov
add
add
jb
jl
pop
lods
call
and
add
loope
add
iret
dec
lds
imul
push
push
int
add
add
add
push
je
leave
xchg
add
je
inc
pop
lcall
cmp
scas
add
pop
jp
ljmp
scas
add
or
and
adc
sbb
imul
mov
xchg
das
xchg
xchg
lds
add
scas
add
add
add
ret
test
add
jmp
ret
hlt
inc
fcomps
xchg
fcoms
xlat
mov
add
xor
fwait
xor
add
and
add
add
in
push
addb
mov
add
sub
or
scas
add
sbb
xchg
jbe
xchg
sub
add
movsb
add
and
lods
in
out
pop
sub
int3
loopne
pushf
mov
add
jmp
mov
xchg
pop
adcl
add
add
add
add
inc
mov
loope
push
pop
xor
imul
cmp
jg
add
push
lcall
jmp
idivl
cmp
mov
xchg
insl
inc
pushf
aaa
adc
sub
add
and
mov
jbe
inc
and
mov
fsubs
in
fisubrs
sbb
add
mov
add
lds
jae
push
cmp
sub
add
dec
mov
add
adc
fisubrs
add
jne
js
popf
rclb
jae
mov
add
rcrl
add
sbbl
add
lods
inc
loop
add
bound
push
fistpll
push
cmp
mov
add
dec
add
ret
jb
fisubrl
add
sahf
dec
sarb
add
fsubrp
add
add
popa
sub
add
cmp
leave
rclb
jne
popf
in
in
pushf
insb
stc
movb
or
lcall
cmp
adc
xor
add
out
add
mov
add
stos
adc
popl
add
imull
add
push
and
add
add
adc
add
in
sub
add
xchg
imul
add
push
loope
ds
sbb
add
cmpsl
sbb
dec
out
pushf
addr16
lcall
add
loop
mov
add
mov
mov
add
or
add
enter
pop
movsb
add
mov
add
mov
add
das
sti
fistpll
jbe
pop
dec
adc
pop
mov
push
lret
lret
add
adc
scas
or
mov
pop
or
add
add
sarb
sub
stos
inc
in
push
dec
ja
mov
sbb
add
and
add
xchg
addb
stos
shrl
xor
add
nop
das
int3
jno
sbb
fisttpl
or
loope
dec
mov
add
xor
xor
pop
addr16
add
xchg
mov
add
sahf
inc
pop
in
mov
mov
dec
jbe
xchg
or
add
jno
add
jp
jne
mov
pop
xlat
sub
adc
stos
add
movsb
add
mov
add
pop
mov
mov
add
in
addb
fcmovb
add
ficomps
icebp
push
push
imul
stos
popf
mov
in
imul
xchg
test
sbb
cmp
insl
fwait
cmp
in
xor
add
ja
pop
cmp
addb
cli
jp
or
jnp
push
cli
xchg
xchg
jp
add
test
add
not
imul
add
add
jmp
sbb
mov
add
nop
adc
push
lahf
sbb
or
add
add
testb
add
mov
pusha
leave
popa
iret
mov
add
cltd
aaa
loope
fwait
jns
ret
jbe
enter
test
add
scas
add
xor
jbe
inc
in
lds
add
inc
stos
push
add
decl
add
sub
add
mov
test
dec
add
add
lods
lret
jae
js
test
add
loop
mov
ret
sbb
add
das
pop
lcall
int3
cld
add
add
js
add
sete
mov
xor
call
add
add
imul
leave
jg
add
cmp
and
aad
shrb
fnstsw
cli
mov
sbb
mov
xchg
popa
xchg
out
les
in
loopne
repz
lret
pop
or
adc
or
add
mov
icebp
test
sbb
aaa
lock
add
add
add
add
add
add
add
push
inc
push
mov
loope
adc
arpl
popf
in
setg
ljmp
mov
mov
and
add
ljmp
sahf
scas
inc
hlt
inc
ffree
test
mov
sub
add
fs
lret
pop
ja
jo
inc
pop
int
add
ja
cmp
add
add
and
add
xchg
mov
add
addb
into
cmp
mov
push
pop
imul
dec
xchg
cmpsl
xchg
push
cli
shrl
add
add
mov
std
rcrl
add
xchg
xor
dec
movsl
push
mov
dec
jne
add
push
xor
push
xor
jnp
inc
ljmp
or
add
jno
or
sub
xlat
shll
sub
add
sahf
jo
call
test
add
add
lea
std
dec
cmp
add
int
inc
mov
nop
xor
sub
jnp
daa
pop
daa
stos
push
or
add
ljmp
lods
jl
scas
add
push
lahf
mov
add
adc
addb
test
add
add
lcall
scas
pop
cpuid
add
adc
pop
das
popa
mov
push
scas
xor
xor
add
add
pop
dec
fldenv
add
rclb
cmp
addr16
rcrl
jne
rol
add
add
mov
out
int3
sahf
lcall
addb
fdivrp
mov
out
add
fnstsw
jecxz
cli
sbb
sbb
or
add
inc
mov
pop
push
add
movl
jmp
add
popf
sub
int
add
add
add
je
add
dec
cmpl
mov
dec
xlat
mov
add
loope
outsl
pushf
dec
cmp
cmc
cmp
imul
jecxz
shll
push
in
stos
add
enter
mov
test
add
add
mov
fdivr
and
add
jb
dec
lret
out
or
add
int
lahf
pop
data16
lcall
rcrb
adc
scas
xor
leave
je
add
add
add
mov
add
cli
addb
mov
lret
adc
or
add
add
pcmpgtd
sub
add
push
jae
les
add
out
cmp
daa
mov
mov
push
out
cmp
mov
add
jp
adc
mov
test
add
add
insb
hlt
frstor
repz
js
out
movsl
sub
add
rolb
xchg
les
icebp
sub
inc
subl
adc
sbb
int
sbb
bound
add
ss
pop
cmp
daa
xchg
add
mov
jb
or
popa
push
imul
xor
xchg
mov
dec
ja
dec
or
lds
and
cmpl
mov
add
addl
xchg
adc
push
jmp
inc
aad
and
add
add
das
inc
jns
add
fildl
add
mov
mov
cltd
xor
imul
je
sub
add
jmp
movsl
repnz
mov
out
aaa
ret
inc
inc
lds
cmp
adc
add
sbb
adc
add
push
ljmp
add
cmp
sbb
jns
fildl
and
add
inc
sahf
je
push
add
sti
movb
mov
pop
insl
aas
dec
adc
dec
addr16
sahf
mov
fmulp
xchg
adc
pop
sub
adc
aaa
xchg
xor
enter
lds
mov
add
dec
push
cmp
outsb
xchg
popa
sar
inc
fs
jae
scas
add
xor
push
or
add
add
add
mov
add
xchg
jb
mov
lret
xchg
std
xchg
mov
cld
xor
aad
dec
js
add
xor
jmp
cltd
cmpsb
add
in
adc
cltd
jo
shrl
add
add
or
add
add
negl
add
add
sbb
push
adc
mov
add
cltd
int
das
mov
add
outsl
jbe
jne
shrl
add
inc
call
add
and
add
push
out
push
push
add
sub
mov
mov
adc
add
jecxz
lahf
jg
sbb
imul
mov
add
lretw
shll
add
inc
daa
xchg
adc
test
add
add
movsb
add
adc
inc
loopne
pop
in
insb
sbb
cmp
dec
je
add
mov
push
xchg
lods
imul
xor
jg
rclb
addb
sub
shlb
push
sub
add
add
ret
sahf
sbb
pop
shl
movsl
sbb
aad
add
push
in
xor
sahf
pop
lret
jp
pop
int
xor
sub
int3
out
scas
sbb
fisubl
add
mov
add
adc
stos
add
fisubrl
arpl
xchg
add
pop
xlat
mov
add
enter
dec
push
cmp
add
cmp
add
cmp
ficoml
aas
out
xchg
stc
mov
mov
bound
jmp
mov
mov
add
icebp
lods
fisubs
jle
add
sbb
dec
lods
add
sub
add
in
xor
push
add
mulb
xchg
add
jg
dec
mov
mov
jno
or
add
cmp
fcompl
lea
push
icebp
pop
xchg
add
mov
pusha
lods
add
dec
cmp
hlt
pop
test
mov
pop
in
add
mov
in
mov
imul
add
lea
add
or
lods
add
adc
in
xchg
hlt
sbb
je
xchg
xor
stc
xchg
adc
mov
xor
lret
lret
stc
sbb
add
insb
mov
add
xor
cmpsl
or
add
aas
gs
insb
cmpsb
add
push
mov
popl
cmc
push
out
add
leave
sub
add
mov
mov
ljmp
lds
sub
and
cli
sahf
aad
stc
dec
icebp
sahf
lock
shll
cmpsl
pushf
xchg
xchg
inc
cmpsb
add
xchg
mov
inc
and
jecxz
arpl
cltd
test
add
in
out
pusha
inc
movsl
sub
add
mov
mov
in
push
sub
add
icebp
shrl
out
mov
pop
outsl
sub
test
add
push
add
push
daa
and
push
pop
and
add
in
push
and
add
or
add
jne
sbb
aas
jae
pop
mov
add
addr16
xchg
push
das
pushf
xchg
sub
add
iret
xchg
adcl
outsl
xor
jmp
fcom
lods
add
fadd
rcll
and
add
add
testl
add
pop
jnp
decl
add
mov
add
frstor
adcl
aaa
add
cltd
lret
sub
adc
add
cmp
xor
push
iret
inc
stos
add
sub
add
sahf
lcall
push
out
loopne
sbb
push
ret
xor
cmc
test
arpl
jne
xor
inc
sahf
enter
call
mov
add
sbb
inc
repz
fisubrl
mov
add
pop
mov
cmpl
add
add
addr16
mov
out
scas
add
movsb
add
outsb
divl
push
scas
push
jl
mov
scas
add
out
xor
testb
lods
add
add
out
sub
cltd
jnp
cmpsl
xchg
add
pop
push
xchg
inc
mov
pop
sbb
test
xchg
mov
add
pop
dec
cli
cld
in
aas
lea
push
add
inc
or
add
mov
add
jge
test
sub
mov
mov
gs
pop
fcoml
stos
add
jl
add
mov
add
add
add
cld
popf
pop
add
add
ss
pop
mov
jne
rcll
stos
add
out
ja
fnstcw
fdivrs
add
popa
pop
incb
inc
clc
aad
adc
mov
mov
cmp
dec
add
sbb
jmp
cmpsb
add
xchg
pushf
jae
add
imul
add
add
and
add
jno
jle
xor
mov
stos
add
scas
xchg
add
adc
and
add
call
add
mov
mov
js
inc
fadds
xchg
sub
mov
cli
sub
test
add
pop
and
add
sub
movb
add
add
dec
stos
xchg
mov
js,pt
dec
sbb
and
add
sahf
ss
repnz
add
or
cmp
gs
jge
add
movsb
add
das
scas
add
outsl
imull
add
adc
div
out
mov
push
das
insb
add
mov
lock
scas
and
add
aam
and
shll
cli
sahf
loope
and
add
dec
jge
lcall
xchg
push
fcomps
jmp
fdecstp
ficomps
popf
and
add
or
add
les
push
hlt
mov
and
shrl
add
push
mov
imul
std
shll
mov
mov
mov
add
or
add
or
add
repnz
mov
repnz
xchg
add
add
into
jge
push
sub
add
scas
mov
add
stos
add
aam
mov
mov
add
lret
pop
scas
mov
mov
add
aam
lods
ret
fisttps
sub
in
inc
inc
decl
add
int3
mov
sub
inc
push
jmp
add
sahf
test
add
or
add
dec
insl
xlat
and
addb
and
inc
inc
or
cmp
dec
scas
aad
cmpsb
add
out
icebp
fwait
sbb
inc
or
insb
cmc
mov
add
add
adc
jge
cwtl
dec
pop
push
mov
add
add
lods
rorl
cmp
cmp
mov
push
sub
mov
cmpsl
mov
add
or
add
cld
mov
into
jno
pushf
test
sbb
sbb
sarb
daa
gs
add
fidivrs
nop
push
add
test
add
test
add
add
sbb
pop
into
adc
sbbl
fimull
add
mov
stc
cli
int
add
loope
mulb
cmc
sub
loopne
dec
pop
push
call
icebp
outsl
insb
popf
in
xchg
lret
outsl
nop
cmpsb
add
or
add
repz
shrb
lahf
sahf
jns
jmp
add
inc
or
add
lods
add
iret
bound
and
lock
add
add
adc
push
out
ret
mov
add
or
xchg
add
xor
inc
psubusw
add
xor
vcvtdq2pd
sbb
xchg
scas
add
push
add
insb
push
popf
movsl
xor
fcmovne
push
ljmp
add
inc
enter
add
mov
jecxz
leave
repnz
fsubrs
push
pushf
aas
dec
sahf
fidivrs
or
add
loopne
insl
roll
fmuls
mov
add
add
mov
add
shll
add
pop
ljmp
sub
add
ds
add
adc
add
and
add
loopne
add
add
xor
add
and
lahf
ret
sarl
xchg
push
gs
addb
pop
mov
add
lcall
lcall
add
xor
clc
pop
xchg
add
fiaddl
push
add
push
cmpsb
add
cmpsl
mov
push
idivl
xchg
cmp
add
add
inc
xchg
aam
inc
iret
cwtl
xor
add
push
sahf
xchg
movsl
sbb
imul
in
add
stc
cli
push
sub
add
jno
ret
std
movsl
jne
inc
pusha
jge
int3
popa
jae
push
nop
xor
add
ret
insl
out
push
and
ret
add
leave
sub
add
add
add
sbb
add
je
add
pop
insb
ret
shlb
je
mov
cmp
adc
sub
add
add
lcall
imul
call
loope
or
add
addb
mov
fsubr
loope
add
mov
jge
lahf
ja
test
xlat
aas
ret
repnz
pop
add
add
mov
add
sub
add
jne
aad
push
jno
aam
xor
gs
cmpsl
adc
lock
scas
add
adc
add
outsl
enter
imul
jmp
ds
add
xor
adc
std
jnp
add
add
imul
add
les
cmp
pop
xor
add
sub
sbb
clc
or
add
add
test
jecxz
push
push
pop
sahf
pop
mov
ret
popa
inc
ja
fisubrs
cmpsl
scas
add
and
add
stos
add
cmc
sub
aas
dec
leave
add
add
add
shlb
add
sar
repnz
inc
xor
adc
int
sahf
sbb
hlt
cmpsb
add
adc
push
scas
addr16
fsts
inc
and
add
bound
mov
add
test
add
stos
add
sbb
push
rolb
out
adc
add
loopne
sti
jmp
jne
sbb
push
lock
lahf
aaa
cmc
fwait
or
add
scas
pop
sbb
ror
lea
sub
add
cld
sbb
or
bound
lea
cmp
mov
or
or
fsubrp
call
rcrb
add
aaa
pop
lahf
daa
hlt
cmp
jp
push
or
add
push
movsb
add
or
add
iret
nop
jmp
cmp
xchg
mov
add
push
jb
leave
shll
outsl
add
sarb
mov
mov
mov
push
add
pop
push
add
mov
je
sub
jne
in
mov
add
pop
dec
xchg
sub
add
mov
add
push
push
mov
xor
pop
sub
add
add
jmp
stos
add
cmpsb
add
pop
and
ret
inc
sbb
pop
sbb
add
stos
add
frstor
add
in
pop
sahf
leave
adc
loope
and
inc
push
push
cmp
add
add
adc
xchg
xchg
sbb
test
add
lods
add
mov
addb
loopne
mov
jmp
xchg
xchg
mov
add
inc
pop
add
add
add
add
repnz
nop
loop
loop
in
sub
add
sarl
stos
js
add
push
xchg
icebp
les
xchg
add
add
add
add
add
cmpsb
add
xor
and
add
xchg
pop
int3
imul
add
push
andl
enter
fsubrs
mov
add
add
fbld
mov
push
pusha
cmp
add
int3
adc
sub
add
loope
cld
mov
add
icebp
rorb
mov
add
movsb
add
xlat
and
nop
js
mov
jmp
add
mov
in
or
add
add
jns
into
mov
add
insl
fdivrl
add
fcmovb
rorb
dec
mov
add
iret
fnstenv
push
out
pop
add
loop
iret
addb
jns
adc
cmpl
cmp
cmp
add
add
mov
ja
lret
in
sbb
insl
lahf
scas
imul
in
xchg
mov
add
pop
imul
add
sbb
pop
lret
xor
mov
add
test
add
sub
pop
or
fisubs
push
cli
pop
and
or
enter
cld
add
push
lret
ds
mov
sub
push
popf
enter
cmp
xor
cmp
add
fdivrs
in
push
or
add
cmpsl
pop
jg
xchg
cmpsl
enter
add
pop
daa
in
mov
add
aam
icebp
jp
xor
movsb
add
xchg
and
add
in
adc
jp
add
cmp
cmp
movsl
int3
loope
add
cmp
sub
add
js
pop
pushf
sbb
push
stos
add
mov
push
popf
mov
add
jp
setle
mov
add
jno
leave
bound
adc
int
jmp
or
out
aaa
stos
add
inc
sub
add
hlt
flds
push
je
stos
add
add
mov
popa
enter
movsb
add
divb
clc
addb
mov
mov
add
sub
add
adc
imul
add
pop
dec
loopne
std
ja
add
pop
fsts
add
lods
in
out
in
cmp
mov
dec
pop
sub
jp
sarb
dec
mov
mov
add
movsl
push
pushf
mov
add
or
fdivrl
insl
cmpsl
inc
cli
dec
add
add
dec
loope
add
movsb
add
xlat
sub
add
mov
add
repz
xchg
add
pop
push
dec
fdivs
adc
addl
test
inc
jnp
shl
mov
mov
add
and
add
lods
adc
dec
vpshufd
dec
mov
add
rclb
call
add
mov
inc
cmp
add
fstpl
inc
addr16
mov
montmul
cmpsb
add
push
push
jmp
pop
loop
test
add
lea
cwtl
sbb
xchg
add
in
fcoms
mov
bound
add
xchg
add
outsl
and
add
adc
and
add
ficoml
adc
aaa
les
loop
into
sbb
add
xchg
ljmp
test
add
cmp
pushf
pop
int3
in
pushf
add
sarl
xor
mov
add
xchg
nop
cmp
add
mov
add
call
iret
sbb
cmpsl
test
add
scas
add
jecxz
add
push
xor
push
out
adc
inc
and
add
add
add
inc
outsb
or
mov
repz
dec
dec
ja
add
xor
das
jae
dec
add
add
int3
addb
and
add
add
and
add
pop
sub
add
pop
js
inc
xor
sub
add
jne
imul
or
add
inc
lret
jecxz
inc
ror
lods
lcall
jno
das
xchg
in
push
cli
mov
das
repz
xor
les
inc
sub
mov
lret
imul
fimull
add
out
inc
jmp
lds
add
mov
add
mov
insl
pop
sub
mov
inc
aam
clc
addb
push
incb
je
aaa
out
add
imul
xchg
xchg
shll
imull
ret
pop
sub
ret
add
dec
mov
adc
pushf
or
mov
add
xlat
sarb
add
lds
in
add
iret
and
add
push
cmp
pop
mov
add
add
sahf
test
add
pop
decl
imul
jge
mov
add
loope
adc
inc
jo
dec
push
add
add
add
add
rcrb
xor
add
jae
repz
sub
xchg
lods
add
pop
add
add
insl
stos
adc
jb
cmpsl
adc
fcoms
cmpsb
add
add
test
jo
add
pop
add
add
pop
fnsave
cmp
inc
pop
nop
in
xchg
jle
cmc
or
add
inc
inc
sbb
gs
mov
int3
sbb
jge
or
stos
add
add
add
mov
cmp
cmc
mov
cmpsb
add
add
xchg
adc
dec
ror
das
push
jnp
clc
fmul
xor
in
cmpsl
pop
lret
sahf
sbb
mov
jns
addb
mov
add
scas
add
pusha
in
insb
and
outsb
aam
add
ds
xor
add
ljmp
or
add
ret
jmp
push
aas
adc
inc
jg
and
add
lds
add
inc
xchg
out
add
add
scas
add
and
add
jno
data16
or
push
fidivl
xor
mov
add
mov
sbb
add
xchg
popl
add
pop
sbb
sub
add
add
pushl
jp
enter
add
orl
xchg
fistps
xchg
mov
xor
lds
add
jno
enter
add
dec
popf
pop
jnp
mov
xchg
pop
xchg
lahf
je
outsb
jl
pop
out
sahf
xchg
mov
addr16
jae
lcall
iret
dec
addr16
sbb
add
cmp
add
mov
mov
mov
imul
movl
mov
cmp
add
imul
add
loopne
shll
adc
in
jae
stc
mov
faddl
add
pop
outsb
das
inc
iret
imulb
add
push
insl
sub
add
or
add
mov
xor
push
add
inc
int
add
fcomps
xor
dec
test
add
add
repnz
add
mov
pop
fnsave
add
push
and
add
out
mov
in
fldcw
xchg
js
das
or
add
lret
adc
insl
cmp
push
add
faddl
add
jp
add
clc
and
dec
or
add
push
sbb
or
add
gs
sub
add
sbb
add
xchg
je
add
xorl
cmc
leavew
add
add
mov
outsb
xor
ja
flds
add
xchg
add
or
inc
mov
add
fwait
add
pop
popf
cli
lods
add
mov
mov
mov
add
cld
sbb
add
dec
and
sbb
pop
pop
notl
loop
shl
or
jle
dec
jno
shrl
inc
sub
add
fnstsw
out
cmp
ret
dec
dec
jbe
add
stc
js
lahf
mov
adc
xor
xchg
add
xor
jge
mov
adc
cli
fs
pop
sub
add
fldt
fisttps
add
dec
scas
push
push
add
mov
loope
jl
add
cltd
in
loope
sbb
mov
add
jns
add
add
icebp
push
adc
repz
add
cmp
xor
add
mov
mov
mov
add
shlb
mov
add
push
add
xchg
cwtl
mov
in
mov
and
and
popf
push
out
adc
icebp
into
nop
inc
rcrb
xor
mov
inc
mov
mov
in
xchg
inc
fimuls
aad
and
add
jno
inc
inc
mov
mov
add
and
add
arpl
jecxz
cmp
add
cmpsb
add
xor
mov
add
jg
test
add
inc
icebp
cli
pop
pop
sub
add
dec
cmp
add
xchg
test
add
pop
fs
xor
lods
add
mov
nop
push
jg
out
pushf
xchg
pop
fwait
pop
lret
inc
je
dec
and
add
or
add
movb
gs
sarl
scas
mov
adc
jns
fxch
cmp
aas
out
jo
sub
std
push
jp
aaa
in
aas
insl
mov
stc
or
sub
add
fisubrs
mov
add
mov
leave
fcompl
mov
add
jns
cmp
loop
push
add
inc
mov
mov
sub
stc
dec
add
add
pop
cmp
pop
add
add
push
bound
push
pop
mov
push
scas
add
jge
test
add
add
add
aad
dec
test
jne
enter
cmp
ret
mov
fcmovne
and
xchg
fsubp
test
xchg
xchg
mov
mov
add
add
add
inc
mov
imul
add
nop
incl
or
push
mov
add
stos
cmp
in
add
add
add
lods
mov
and
add
imul
jbe
sbb
fmul
in
jecxz
adc
push
jp
sub
add
push
pop
jns
pop
adc
sbb
addr16
add
jp
pushl
test
jle
repz
sahf
or
sub
mov
sbb
xchg
add
loopne
xor
add
add
xor
int3
pop
cmpl
adc
add
pop
fs
add
dec
lret
pushf
sbb
add
push
shll
jecxz
jnp
xchg
sbb
inc
cltd
loopne
je
lock
imul
and
add
jnp
jae
pop
rcrb
inc
bound
adc
add
add
sub
cmp
aas
fs
pushf
addb
outsb
mov
call
arpl
dec
push
add
jnp
add
hlt
addr16
adc
cmp
repz
add
add
add
sub
dec
push
and
xor
and
add
in
mov
add
xor
sti
cmp
add
in
in
outsb
testb
pop
in
jecxz
lods
add
inc
jge
pop
xor
mov
add
out
xor
movsl
popa
mov
add
pop
push
test
add
mov
adc
lods
add
adc
or
add
lds
add
xor
addb
xchg
in
add
or
add
adc
push
out
and
add
add
mov
sub
add
in
scas
add
dec
mov
sub
xlat
sti
pop
lret
lock
add
lds
into
dec
je
add
fwait
jbe
inc
or
add
add
scas
hlt
jne
add
test
jnp
push
cld
mov
adc
push
adc
and
add
add
mov
sti
addb
dec
add
add
lds
add
jno
inc
mov
inc
dec
xchg
jp
push
add
mov
cmp
aas
loop
ret
sbb
add
add
ret
add
or
loop
mov
jnp
add
into
jmp
mov
add
shrb
jecxz
or
mov
lret
ljmp
cmp
rcrb
add
or
add
mov
fistl
or
add
addb
inc
pop
pop
stos
add
dec
daa
scas
or
sub
add
bound
add
into
out
fsub
enter
add
loop
insb
mov
add
or
xchg
lods
add
gs
mov
add
mov
add
add
add
sub
add
inc
mov
xchg
sub
add
add
or
add
pusha
mov
sbb
push
add
clc
insb
test
pop
sub
cltd
pop
mov
cltd
cmp
insl
mov
adc
mov
add
add
loope
add
adc
std
mov
out
mov
hlt
jge
ds
add
push
pop
daa
sub
add
cmp
add
mov
adc
sbb
ret
push
shrl
add
add
xchg
and
add
icebp
aas
sahf
out
popa
push
add
movsb
add
int3
and
ficoml
pop
xlat
jns
cmp
push
in
sarb
lock
fnop
xor
lea
leave
pop
lods
add
dec
push
add
jne
pop
cmc
shr
in
sbb
loope
jmp
in
xor
add
ret
add
mov
xor
mov
add
flds
out
add
jnp
adc
lods
add
xchg
add
push
mov
add
fdivrs
shlb
add
jbe
adc
add
mov
add
add
leave
outsb
decl
add
shl
ljmp
dec
jbe
scas
add
mov
imul
add
lods
add
xchg
leave
add
add
add
jp
dec
pop
sbbl
pop
add
add
fildl
add
enter
add
int
lahf
or
mov
in
std
test
add
addb
dec
add
add
cmp
movsl
inc
cmpsb
add
xchg
in
and
add
sub
jo
xchg
xor
out
add
in
fwait
mov
add
push
icebp
xchg
add
add
jp
add
leave
or
add
pop
lret
and
add
pusha
jg
shll
add
out
mov
cmpsl
dec
add
and
test
mov
add
pcmpeqd
mov
add
cmp
mov
add
mov
fidivrs
push
pushf
jmp
arpl
add
cltd
rcrl
jmp
add
dec
out
cmp
mov
add
jbe
push
add
imul
add
data16
add
jb
jne
jo
in
out
jge
mov
add
mov
js
dec
int
lea
add
add
lods
clc
sbb
addr16
push
add
mov
add
sub
sub
add
stc
adc
out
mov
sub
fadd
lahf
mov
in
mov
pop
aad
cmp
add
push
cmp
jb
in
inc
add
pop
jae
std
adc
call
ljmp
xor
or
add
add
fmull
mov
add
sahf
fistl
xor
add
scas
stos
add
add
dec
jnp
sub
add
cmpl
or
add
pusha
and
add
pop
test
add
sarl
add
cmpsl
xor
fs
mov
add
mov
add
xchg
bound
mov
sahf
jae
addb
mov
in
stos
cmp
inc
inc
lds
pop
pop
movsl
cmpl
add
loope
xchg
dec
push
add
mov
or
add
lock
mov
int
and
popa
pop
sub
scas
xlat
or
and
mov
add
cmpsb
add
xchg
sbb
xor
lods
add
inc
test
in
and
add
aaa
rcll
xchg
add
fsubrs
and
add
pop
xchg
out
mov
add
jl
imul
mov
cmc
aas
cmc
daa
sbb
ret
repz
imul
add
out
pop
inc
addb
inc
scas
sub
add
stos
mov
ja
xchg
jns
scas
add
fwait
stos
sub
jp
cli
aaa
int
dec
and
add
lcall
mov
mov
add
mov
arpl
add
pop
pop
leave
loopne,pt
xor
add
in
mov
dec
sub
sbb
add
and
add
imul
jb
add
or
add
push
cmp
add
imul
imul
sbbl
and
add
pop
sbb
add
arpl
mov
adc
roll
push
mov
pusha
jnp
xchg
aaa
repnz
int
or
push
sub
add
pop
inc
pop
jne
lds
add
lds
add
sbb
ret
pop
push
add
add
lret
jl
push
inc
rolb
mov
insl
mov
inc
and
and
and
lea
inc
les
add
or
push
filds
cmp
push
ja
sbb
lahf
and
add
xor
adc
cmp
lds
clc
pop
mov
mov
data16
add
mov
add
ss
mov
mov
add
mov
sub
add
push
addb
rorb
adc
pushf
test
add
xchg
imul
jae
jne
shrl
adcl
add
pop
cmp
sub
frstor
dec
jg
add
pop
jb
cld
jbe
jg
cmp
cmp
mov
shll
clc
fwait
ja
cmpsl
xor
adc
add
jae
xchg
out
les
fdivr
test
add
lods
stos
add
inc
cmp
cmp
add
cmc
sub
aam
adc
pop
into
insl
mov
add
jg
sub
add
or
add
push
aaa
push
xlat
push
mov
adc
pusha
jno
mov
mov
pop
ds
sub
add
roll
aas
lods
dec
inc
aam
inc
test
pop
fidivs
cmp
mov
add
add
add
mov
add
push
js
add
ret
sbb
stc
outsb
push
hlt
xchg
xchg
cli
adc
imul
pop
mov
adc
clc
cmc
add
add
call
fisubrs
add
test
add
inc
in
test
add
add
xchg
adc
sti
imul
mov
test
add
add
cmp
xchg
test
cmpsb
add
fimuls
sbb
xlat
sub
xor
addr16
filds
add
add
add
