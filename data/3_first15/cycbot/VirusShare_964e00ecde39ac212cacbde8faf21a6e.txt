add
add
add
xchg
lock
negl
loope
loope
push
push
push
mov
cmp
scas
scas
scas
js
js
js
js
add
add
add
call
mov
mov
mov
mov
mov
add
add
inc
inc
inc
inc
push
push
push
push
push
push
add
add
pop
pop
push
jne
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
arpl
xchg
xchg
xchg
dec
dec
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
data16
cltd
cltd
push
push
push
push
push
push
jne
jne
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
lea
or
or
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
lret
out
out
out
out
out
out
out
out
out
out
sub
sub
sub
sub
sub
adc
adc
adc
add
push
push
push
push
push
push
or
or
or
or
or
add
add
dec
dec
push
push
push
push
les
jne
pushf
inc
inc
inc
inc
xlat
cwtl
cwtl
cwtl
cwtl
sub
push
push
push
push
push
push
push
push
push
push
push
daa
daa
daa
daa
fs
pop
jnp
jnp
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
inc
inc
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
addb
sub
mov
lock
add
arpl
add
push
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
in
in
in
in
mov
mov
lret
lret
lret
add
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
jnp
lret
lret
adc
add
mov
mov
std
add
dec
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cltd
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
add
add
add
add
xor
add
add
add
add
dec
mov
je
je
dec
dec
dec
dec
cmc
cmc
cmc
cmc
mov
add
add
nop
dec
dec
dec
js
js
js
js
fstp
fstp
in
adc
adc
adc
adc
adc
adc
adc
adc
outsl
outsl
outsl
outsl
dec
dec
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
add
add
je
je
je
je
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
es
adc
clc
clc
clc
jo
jo
jo
jo
jo
jecxz
jecxz
jecxz
jecxz
scas
scas
rcl
roll
mov
loope
loope
loope
loope
loope
dec
dec
dec
dec
dec
dec
dec
test
jle
jle
jle
addr16
addr16
stos
stos
stos
stos
stos
xor
xor
add
add
xor
xor
xor
xor
xor
xor
add
jbe
aad
aad
aad
aad
aad
aad
aad
aad
leave
leave
leave
mov
xchg
xchg
jg
push
push
stos
stos
call
call
add
add
add
add
add
add
add
sub
push
cwtl
dec
add
mov
mov
dec
dec
dec
add
pop
add
loopne
loopne
loopne
loopne
loopne
loopne
sldt
add
xor
push
or
or
or
xchg
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
adc
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
pusha
pusha
pusha
pusha
pusha
aam
aam
aam
aam
repz
inc
inc
jg
jg
jg
jg
jg
jg
jg
jg
jg
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
lock
cmpsl
cmpsl
cmpsl
mov
push
push
push
int
int
int
int
int
xor
xor
xor
xor
loope
loope
loope
ds
rol
rol
xlat
xlat
ret
ret
ret
ret
ret
ret
ret
ret
ret
mov
mov
in
in
in
in
in
in
mov
mov
mov
mov
mov
mov
popa
popa
popa
popa
div
div
div
div
inc
inc
and
dec
dec
dec
test
test
sbb
icebp
icebp
icebp
icebp
icebp
icebp
outsl
outsl
mov
aad
aad
and
and
fstp
fstp
fstp
outsl
outsl
aas
aas
cmp
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
stos
stos
stos
stos
stos
stos
inc
inc
jl
jl
jl
add
add
add
xor
pop
pop
pop
pop
fcmovu
loopne
loopne
loopne
loopne
dec
dec
rcl
rcl
adc
adc
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
adc
adc
adc
fldenv
addr16
push
push
push
push
push
push
push
push
push
push
xor
div
div
div
div
negl
sbb
add
arpl
in
in
in
in
in
jno
jno
jno
push
push
push
push
pop
mov
daa
daa
daa
daa
sbb
je
je
je
je
je
je
je
je
xor
xor
push
add
mov
mov
jl
jl
jl
sbb
add
aaa
aaa
aaa
aaa
add
cmovbe
add
add
fcomp
fcomp
fcomp
fcomp
dec
dec
dec
int
int
int
pop
pop
pop
pop
pop
pop
pop
aas
clc
loope
xor
xor
xor
xor
xor
xor
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
andb
inc
lock
pusha
pusha
add
add
inc
inc
inc
inc
inc
inc
inc
addr16
pmaxsw
add
add
add
add
add
add
add
add
add
add
add
aaa
aaa
aaa
aaa
es
add
int
int
int
int
int
int
int
int
arpl
int
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pusha
add
mov
mov
mov
add
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fadds
add
add
repz
stos
stos
stos
stos
stos
stos
adc
adc
adc
mov
mov
fcmovnu
fcmovnu
fcmovnu
fistpl
popf
popf
popf
popf
popf
popf
popf
xor
mov
xchg
xchg
xchg
xchg
add
add
add
or
nop
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
out
out
out
out
out
out
add
add
add
ret
ret
ret
ret
ret
enter
repnz
div
testl
or
rol
pop
pop
fcompl
out
out
je
je
je
sub
xor
xor
mov
sahf
sahf
sahf
sahf
sahf
sahf
xchg
pop
pop
pop
es
fistpl
mov
fcmovnu
fcmovnu
fcmovnu
addr16
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fs
out
mov
imul
inc
inc
inc
inc
inc
add
add
add
pop
pop
pop
pop
bound
aaa
loopne
mov
mov
stos
stos
stos
stos
stos
stos
stos
stos
add
std
std
std
lock
popf
popf
scas
scas
inc
inc
stos
stos
stos
stos
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
cmpsb
cmpsb
cmpsb
cmpsb
inc
inc
inc
inc
loope
cld
cld
cld
cld
cld
add
add
int
int
pop
pop
pop
pop
add
add
add
adc
dec
dec
add
mov
mov
mov
mov
mov
pop
pop
pop
xlat
xlat
xlat
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jns
jns
jns
jns
jns
jns
jns
or
imul
sub
scas
scas
scas
scas
scas
scas
scas
scas
test
test
test
addr16
jecxz
jecxz
jecxz
jecxz
jecxz
pop
pop
pop
pop
ret
ret
ret
push
push
push
push
push
push
sbb
lcall
push
push
movsl
movsl
movsl
les
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
lret
lret
lret
push
push
push
iret
iret
test
enter
jne
jne
xchg
xchg
add
add
adc
adc
adc
ds
mov
mov
gs
sub
adc
or
or
or
or
or
adc
adc
push
push
push
push
push
push
push
push
push
push
sbb
loop
loop
loop
push
push
push
push
push
push
push
div
div
aad
aad
aad
aad
aad
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
out
out
out
out
rcl
rcl
rcl
rcl
rcl
rcrl
aaa
aaa
or
cmp
push
push
push
push
push
push
push
push
push
or
mov
aaa
aaa
add
add
add
add
pop
fcmovnu
fcmovnu
jo
jo
jo
jo
jo
or
or
or
add
add
movsl
movsl
push
push
add
jecxz
jecxz
jecxz
jecxz
add
mov
sbb
sbb
aas
aas
aas
add
dec
dec
fs
lret
add
add
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
or
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
xlat
bound
jnp
jnp
jnp
jnp
jnp
ljmp
clc
clc
sti
sti
sti
sti
imul
push
lods
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
call
push
push
push
cmc
cmc
cmc
cmc
cmc
cmc
in
in
in
in
in
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
pop
pop
pop
pop
pop
pop
pop
pop
pop
clc
clc
cmp
cmp
out
test
test
aaa
aaa
aaa
xchg
xchg
add
add
sbb
sbb
add
push
push
push
push
push
push
push
push
les
add
insl
insl
insl
insl
adc
adc
adc
adc
adc
adc
adc
adc
adc
dec
rol
rol
xor
xor
xor
xor
xor
xor
int3
int3
xor
xor
add
cmp
cmp
inc
inc
sub
cs
fcomp
js
js
js
js
fnstsw
loopne
loopne
loopne
loopne
je
je
je
je
je
imul
or
rcl
rcl
rcl
rcl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cld
cld
cld
cld
cld
loope
loope
ja
inc
inc
inc
inc
inc
inc
in
in
in
in
divb
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
jns
jns
jns
jns
jns
add
and
cltd
cltd
cltd
cltd
aas
aas
aas
aas
aas
lret
lret
lret
lret
lret
add
in
in
pop
pop
dec
jle
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
jb
jb
jb
jb
jb
fs
test
lea
lea
lea
or
or
mov
push
add
add
add
addl
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
sub
sub
sub
push
push
push
push
push
push
push
push
push
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
mov
aas
aas
aas
aas
aas
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
fldcw
push
add
std
std
add
insb
ud2
inc
inc
inc
inc
inc
inc
mov
jo
mov
test
push
add
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
or
or
or
or
or
or
or
add
fsubs
imul
imul
imul
jae
jae
adc
and
and
and
and
and
out
out
out
dec
fcmovu
fiaddl
add
add
or
or
or
push
push
push
inc
inc
inc
or
div
div
div
mov
push
push
push
push
push
add
add
mov
loope
jge
test
test
loop
loop
loop
repz
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
imul
imul
imul
imul
imul
add
das
das
das
das
sub
sub
add
add
add
add
mov
mov
mov
mov
sub
jl
cmp
cmp
add
ja
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
je
add
cmc
adc
add
add
add
mov
mov
pop
repz
add
add
add
inc
inc
inc
sub
sub
sub
sbb
sbb
scas
scas
scas
scas
scas
xor
mov
mov
mov
push
push
push
push
push
inc
inc
dec
dec
dec
dec
dec
dec
call
call
jmp
jmp
jmp
add
add
add
add
adc
adc
adc
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
movsl
movsl
movsl
movsl
clc
clc
clc
rol
gs
add
add
add
xchg
addl
and
and
and
and
and
and
mov
sub
add
dec
dec
sbb
sbb
sbb
sbb
or
or
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
cmp
cmp
and
and
and
and
fwait
fwait
fwait
fwait
fwait
fwait
mov
sub
je
je
addb
addb
cmpb
int3
int3
aad
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rol
and
and
and
and
loope
inc
in
in
mov
add
add
jmp
jmp
jmp
push
push
push
push
push
push
push
cmp
cmp
cmp
cmp
cmp
add
add
add
arpl
add
add
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
push
push
push
push
mov
mov
mov
mov
or
or
or
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
addl
add
add
adc
add
and
data16
pop
pop
pop
adcl
push
push
push
push
push
push
push
test
test
pop
add
add
add
add
ja
ja
ja
ja
ja
add
mov
mov
mov
adc
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
mov
or
or
or
clc
clc
clc
hlt
hlt
hlt
hlt
fwait
add
add
add
div
jle
dec
jae
jae
jae
jae
jae
jae
jae
repnz
add
add
add
loope
loope
loope
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmp
cmp
cmp
cmp
cmp
add
add
add
add
jno
jno
jno
jno
jno
jno
jno
arpl
arpl
arpl
movsb
movsb
movsb
movsb
movsb
cmp
cmp
cmp
js
js
js
mov
mov
sub
sub
es
fcmovu
fcmovu
fcmovu
adc
add
add
add
add
add
add
or
and
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
sbb
rcl
rcl
rolb
out
out
out
out
out
out
add
push
add
add
cmpsb
cmpsb
cmpsb
pop
jns
aas
aas
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
jno
jno
fs
add
add
jo
add
pop
pop
pop
pop
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
ljmp
adc
adc
adc
mov
mov
test
xchg
data16
add
add
add
adc
adc
adc
adc
adc
adc
mov
mov
mov
into
into
into
into
into
into
into
into
into
into
into
into
into
and
add
add
add
inc
inc
inc
inc
add
adc
adc
bound
bound
into
into
into
into
into
into
into
ljmp
add
add
aas
aas
pop
cmp
cmp
cmp
and
and
and
sbb
sbb
add
add
add
add
add
add
fcmovu
fcmovu
mov
enter
enter
enter
enter
jbe
jbe
jbe
inc
gs
or
or
or
or
or
clc
clc
add
add
test
jns
jns
add
add
fcomp
fcomp
mov
mov
jo
jo
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
jmp
jmp
jmp
jmp
jmp
jmp
jecxz
mov
mov
mov
add
leave
leave
leave
leave
leave
leave
leave
leave
movb
jns
cmp
rcl
rcl
rcl
rcl
rcl
sarl
jnp
es
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lcall
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
data16
rcl
rcl
rcl
rcl
rolb
add
add
add
xor
xor
xor
xor
add
add
addl
jbe
xchg
xchg
xchg
xchg
xchg
xchg
xchg
scas
sub
mov
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
xchg
xchg
sahf
jp
jp
jp
fcmovu
sub
sub
add
add
add
jb
cli
cli
cli
cli
cli
cli
dec
dec
dec
jns
jns
jns
jns
jns
jns
jns
jns
jns
add
add
fs
clc
clc
clc
clc
clc
clc
clc
clc
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
adc
adc
subl
sub
sub
sub
mov
in
mov
mov
mov
adc
adc
adc
adc
adc
adc
adc
div
div
div
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
outsb
xor
add
add
add
add
loopne
loopne
loopne
mov
mov
mov
mov
rcl
rcl
jecxz
jecxz
jecxz
lcall
jg
int
int
int
int
xchg
adc
adc
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
pop
pop
pop
pop
pop
pop
xchg
xchg
xchg
sbb
sbb
sbb
jno
jno
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
mov
mov
mov
mov
xor
xor
xor
push
ds
mov
add
add
fbstp
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
sbb
push
push
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jge
jge
aas
cltd
cltd
cltd
cltd
cltd
cltd
cltd
aas
aas
aas
add
add
add
jmp
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jp
jp
jp
jp
adc
adc
adc
adc
adc
adc
cld
cld
cld
cld
cld
or
ja
pop
out
out
out
out
sahf
sahf
sahf
sahf
sahf
add
add
add
add
mov
jg
jg
jg
rol
jno
add
inc
inc
inc
or
rcl
rcrl
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
les
push
push
cmp
loope
loope
loope
loope
loope
loope
loope
loope
loope
sub
sub
sub
sub
sub
sub
sub
add
adc
addl
lcall
lcall
int
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
pop
test
jno
jno
pop
pop
add
cld
add
add
xchg
add
add
dec
dec
dec
inc
inc
xchg
xchg
xchg
xchg
xchg
fs
sbb
xor
push
push
push
push
push
push
push
push
push
push
out
out
fstps
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovne
into
into
into
into
into
into
into
ss
push
push
push
push
push
push
push
sbb
sbb
sbb
add
add
add
and
and
je
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
and
and
and
or
test
push
push
push
push
push
push
push
push
push
push
push
push
sbb
sbb
iret
iret
iret
iret
iret
add
ja
fdivp
icebp
icebp
icebp
icebp
dec
dec
dec
dec
dec
or
xchg
xchg
sub
xor
xor
xor
xor
xor
xor
dec
dec
dec
dec
dec
out
out
out
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
add
stos
stos
stos
stos
cltd
cltd
cltd
mov
mov
mov
mov
inc
inc
inc
inc
arpl
add
aas
aas
aas
aas
aas
aas
int
lea
lea
and
and
and
and
and
sub
sub
push
push
push
push
push
push
push
push
push
ds
movsb
movsb
dec
dec
dec
dec
or
or
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fcmovnu
fcmovnu
fistl
add
dec
das
das
das
das
das
das
das
das
das
das
add
add
add
add
add
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shll
aaa
aaa
add
aad
aad
aad
ret
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
cmp
cmp
cmp
cmp
stc
add
jns
jns
jns
jns
jns
xchg
xchg
xchg
xchg
xchg
cmp
inc
dec
dec
dec
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
test
xchg
xchg
xchg
xchg
xchg
xchg
into
into
into
shlb
xor
xor
fstp
fstp
jbe
jbe
push
push
push
push
div
div
div
div
not
rcl
rcl
lods
lods
lods
add
add
add
lods
lods
lods
add
add
jge
div
div
div
div
div
negl
sbb
sbb
sbb
sbb
aaa
mov
adc
adc
adc
adc
adc
aad
aad
aad
popa
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
add
add
add
inc
inc
inc
dec
dec
dec
pop
pop
pop
pop
pop
pop
add
test
test
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
adc
add
add
cs
aas
stos
stos
stos
stos
stos
stos
jl
inc
inc
lea
pushf
pushf
pushf
pushf
add
movsl
jbe
jecxz
jecxz
jecxz
jecxz
ds
mov
mov
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
xlat
in
in
in
in
ljmp
add
add
add
add
jg
adc
addr16
fcmovu
fcmovu
fcmovu
fcmovu
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
adc
adc
adc
add
xor
fcmovnu
jl
jl
jl
jl
jl
jl
jl
jl
sahf
sahf
sahf
sahf
sahf
sahf
in
in
in
mov
add
add
add
imul
and
and
and
xchg
xchg
add
add
add
add
rol
and
fmull
or
add
add
add
lods
lods
lods
lods
and
mov
and
ljmp
and
add
pop
pop
pop
pop
pop
pop
pop
rorb
dec
dec
dec
dec
dec
addr16
xchg
xchg
lahf
lahf
lahf
lahf
lahf
add
add
add
mov
inc
or
das
xchg
xchg
xchg
fcmovnu
fildl
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
addb
xchg
add
add
add
popf
popf
popf
add
add
add
add
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
into
into
into
into
lods
lods
lods
lods
lods
lods
lods
lods
lods
xlat
xlat
xlat
movsb
movsb
inc
inc
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
xchg
xchg
xchg
xchg
xchg
and
and
and
and
and
and
and
mov
stos
stos
add
add
add
add
lret
add
add
add
add
imul
imul
imul
add
add
add
fs
sub
inc
inc
inc
inc
cmpsb
cmpsb
pushf
pushf
pushf
pushf
aas
aas
aas
mov
inc
inc
inc
inc
inc
bound
bound
bound
bound
bound
aas
aas
aas
aas
aas
add
add
add
add
les
add
add
int
int
int
int
int
int
int
int
int
int
add
add
addb
std
std
std
std
std
std
std
std
std
sub
mov
mov
add
mov
leave
leave
adc
adc
adc
adc
add
add
stos
stos
stos
stos
add
add
add
add
or
or
or
or
or
or
or
or
adc
adc
adc
sub
jle
jle
jle
jle
test
test
out
add
add
add
add
mov
mov
mov
js
mov
mov
aad
aad
push
push
push
xchg
je
je
add
or
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
pop
pop
pop
ja
add
xor
xor
xor
xor
xor
xor
sub
hlt
addr16
mov
mov
out
out
out
out
fwait
fwait
fwait
fwait
push
push
push
push
push
push
push
add
jg
mov
mov
mov
mov
sahf
sahf
sahf
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
adc
adc
adc
aam
aam
aam
aam
aam
dec
dec
dec
dec
mov
mov
imul
lea
fcmovnu
fcmovnu
stc
stc
stc
stc
stc
jbe
jbe
jbe
sbb
sbb
sbb
sbb
sbb
aad
out
push
adc
adc
adc
adc
adc
mov
mov
std
inc
inc
inc
inc
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
aas
aas
aas
aas
dec
dec
dec
dec
add
add
add
add
add
add
add
add
push
push
push
xlat
xlat
xlat
dec
lea
iret
iret
add
add
mov
inc
inc
inc
repnz
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
add
add
add
aad
aad
aad
aad
aad
aad
aad
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
daa
daa
daa
loop
loop
loop
loop
loop
loop
sub
sub
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
mov
mov
mov
faddp
mov
jbe
jbe
xor
mov
mov
out
out
out
out
out
out
out
cli
cli
cli
cli
jmp
jmp
jmp
jmp
jmp
add
add
add
add
pusha
pusha
pusha
pusha
pusha
or
or
or
push
or
or
icebp
mov
mov
sub
mov
or
jmp
jmp
jmp
movsb
add
add
loopne
loopne
ss
cmp
cmp
cmp
cmp
cmp
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jl
add
add
add
sub
sub
xchg
xchg
xchg
push
push
push
push
push
push
push
push
fisttps
or
or
imul
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
rol
into
into
into
into
into
into
into
into
into
into
into
into
into
into
add
add
add
inc
inc
inc
inc
inc
mov
mov
mov
add
add
leave
leave
leave
leave
leave
leave
addl
inc
inc
inc
inc
inc
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
add
add
add
add
test
xchg
xchg
xchg
xchg
add
add
add
fdivrs
ds
ds
add
incl
add
and
xor
addl
addl
pop
pop
add
add
add
add
xchg
xchg
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
add
add
cmp
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
add
add
add
add
add
mov
jne
adc
adc
adc
adc
and
and
and
and
and
and
and
and
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
movsb
movsb
movsb
movsb
movsb
movsb
movsb
in
in
in
in
in
mov
inc
inc
clc
clc
jb
jb
jb
jb
data16
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
add
sbb
cwtl
enter
enter
enter
enter
enter
aam
aam
aam
aam
aam
aam
aam
aam
aam
add
cmp
cmp
cmp
cmp
jne
mov
mov
inc
inc
inc
inc
or
or
insb
jg
jg
jg
outsb
outsb
push
push
push
add
inc
inc
inc
lea
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
icebp
icebp
icebp
add
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
jb
jb
jb
and
sub
sub
sub
sub
sub
sub
sub
sub
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
movsb
movsb
movsb
movsb
sbb
sbb
sbb
into
into
into
call
call
call
push
push
sbb
sbb
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
add
add
and
and
and
and
mov
mov
js
js
js
js
add
push
and
leave
leave
leave
leave
leave
leave
sub
inc
add
leave
leave
leave
leave
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
cmp
cmp
pop
and
dec
dec
dec
dec
dec
dec
dec
dec
dec
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
pop
pop
pop
pop
aam
aam
aam
aam
aam
fs
add
in
add
add
add
add
add
add
add
add
add
add
add
mov
mov
data16
add
add
imul
jb
jb
jb
jb
or
or
or
add
mov
mov
mov
mov
cmpsl
cmpsl
aad
addl
and
and
add
cmp
cmp
cmp
cmp
cmp
add
add
add
add
and
and
leave
leave
movsl
movsl
movsl
movsl
movsl
adc
adc
std
std
mov
rorl
ss
cmc
dec
push
xchg
shlb
push
pop
scas
stos
mov
pop
push
test
mov
arpl
lahf
das
pop
and
aas
cmp
push
call
jno,pt
pop
xchg
xchg
idivl
mov
add
shlb
mov
pop
or
pushf
adc
mov
jnp
hlt
shlb
or
inc
cmpsb
and
pop
inc
jno
adc
dec
cmp
pop
in
add
subl
push
shll
sub
insb
inc
mov
mov
repnz
xchg
inc
idivl
xchg
test
loopne
or
or
inc
push
mov
rolb
jo
add
out
mov
jo
leave
inc
mov
and
mov
int3
insl
xchg
and
or
jmp
pop
insb
dec
xor
outsl
lret
pushf
adc
dec
and
pusha
aas
mov
test
inc
fdivp
adc
push
sbb
sbb
inc
loopne
xchg
sbb
pop
shlb
add
jp
inc
rcrl
imul
pusha
rorb
mov
xchg
dec
cli
pop
mov
mov
rcr
and
push
or
jle
and
pusha
pop
and
cmpsl
and
shrb
lods
repnz
int3
loop
je
sbb
jb
shlb
jb
outsb
fbstp
xor
sub
xchg
shrb
xor
dec
and
and
inc
loopne
mov
andb
jae
leave
xchg
loop
loop
andb
out
pop
sub
jge
in
out
dec
mov
xor
inc
das
clc
inc
pusha
jle
into
jnp
bound
sub
movsb
rolb
insb
mov
addb
xor
add
lahf
call
and
cli
or
pop
ljmp
mov
hlt
stos
pusha
cmp
imul
dec
dec
lret
insl
dec
xchg
and
and
idivb
mov
imul
and
call
add
mov
lret
loopne
scas
mov
sti
mov
or
and
jns
adc
lods
cmp
push
addr16
pop
jmp
xchg
movsb
mov
pusha
shlb
ljmp
call
arpl
pop
or
mov
xchg
mov
int
inc
shl
mov
cmc
mov
adc
sbb
andb
xor
xchg
pop
ret
add
jae
push
and
and
mov
and
iret
xchg
cmpsb
mov
add
scas
dec
xor
or
rol
sahf
mov
insb
mov
sbb
pusha
xchg
xor
mov
shlb
sbb
ss
adc
cmp
lock
sbb
dec
scas
mov
sar
push
fnsave
mov
xchg
inc
ljmp
sarb
inc
xchg
jns
loope
cmp
jae
dec
dec
add
add
push
pusha
xor
cli
xchg
xchg
repnz
sbb
out
push
dec
inc
sbb
arpl
enter
repnz
mov
scas
or
aas
lret
add
mov
pusha
loopne
mov
mov
ret
mov
inc
subb
push
cmpsb
pusha
inc
push
andb
lahf
test
inc
or
and
push
push
add
sbb
jne
in
sub
mov
repz
lods
add
jg
mov
sub
andb
mov
pusha
arpl
sub
shlb
adcb
pop
dec
adc
stos
and
std
int3
mov
and
in
ss
pop
fdivrl
push
hlt
cmp
push
stos
clc
jbe
hlt
int3
filds
fildll
jno
dec
sbb
movsb
andb
sbb
loopne
mov
leave
aad
dec
loopne
push
dec
jns
sub
pusha
and
add
cli
ljmp
jg,pt
arpl
sahf
loope
push
movsl
out
and
mov
inc
fisttps
jb
rorb
outsl
push
fdivrl
arpl
add
pop
fcmovnu
ljmp
adc
inc
incb
push
cmp
and
lea
inc
pop
cmc
imul
xchg
or
add
mov
add
mov
adc
in
xor
cmpsb
pusha
add
mov
push
addr16
inc
mov
lret
and
dec
fstps
movsl
jb
rorb
cmc
dec
mov
add
xchg
mov
jp
pop
mov
add
sub
and
xchg
pushf
add
and
loopne
xor
sub
loopne
gs
jg
cmp
and
pop
lds
in
insb
movsb
pusha
rorb
inc
rcrb
cmp
data16
push
and
sub
adc
outsb
bound
into
std
daa
mov
int3
aam
mov
add
shl
sub
stos
inc
pusha
or
and
enter
ret
jmp
adc
hlt
jl
push
pop
and
inc
insl
lock
mov
sti
sbb
in
sub
out
pop
xor
inc
mov
inc
xchg
addb
inc
inc
incb
and
or
loopne
orl
pusha
lcall
inc
push
jae
adc
inc
add
pop
ljmp
inc
aam
cmpsl
aas
mov
push
loopne
xchg
cmpsl
mov
rcrl
and
loopne
andb
je
andb
lcall
and
add
jbe
stos
inc
mov
addr16
test
sar
adc
call
fmuls
dec
in
mov
push
repnz
into
leave
dec
mov
cmp
sarl
enter
mov
mov
mov
or
rorb
add
push
pop
mov
sub
fbstp
and
lods
andb
adc
mov
cmpsb
mov
mov
inc
add
and
imul
les
out
sub
das
jo
pop
cmp
addb
mov
fcmovb
sar
bound
mov
enter
add
and
inc
outsl
movsl
adc
clc
mov
insl
imul
in
xchg
popa
int3
lods
negb
fucomi
push
shlb
lret
out
popf
mov
and
insb
adc
pop
mov
mov
inc
mov
cmc
mov
pusha
add
out
rclb
or
sti
add
mov
movsl
adc
mov
mov
stc
pop
pushf
ja
movsb
pusha
and
dec
mov
in
inc
scas
add
mov
push
andb
dec
mov
adc
mov
mov
bound
movsl
jp
pop
jecxz
and
adc
mov
test
loopne
inc
cmp
cmp
push
ret
aad
lods
int
jbe
and
push
int3
cwtl
sub
adc
test
mov
out
cld
in
xorps
das
mov
movsb
loopne
cmp
mov
mov
and
loopne
stos
pusha
add
push
icebp
and
and
or
stc
inc
daa
pop
and
xchg
jge
clc
add
sbb
add
inc
cltd
in
fs
lock
dec
xchg
fidivrs
adc
cmp
and
xchg
dec
nop
pop
data16
outsl
mov
and
repz
adc
mov
loopne
pop
xor
xor
inc
add
loopne
inc
push
pusha
loopne
push
repnz
call
loopne
xchg
push
xchg
jbe
shlb
dec
repz
andl
add
ds
xor
sbb
add
sbb
out
xor
enter
mov
imul
je
outsb
lods
inc
mov
jp
rcrl
mov
icebp
and
and
mov
adc
loopne
xchg
mov
pop
scas
shlb
add
sarb
cmp
mov
push
xor
xchg
push
data16
and
ja
fs
jle
xchg
xlat
fwait
xchg
cmpsb
rolb
rorb
inc
rcrb
inc
mov
pop
pop
stos
pusha
and
popf
sti
dec
ret
inc
int3
xchg
leave
mov
icebp
mov
scas
mov
pusha
test
and
mov
pop
cmpsl
xor
fisttpll
mov
loopne
leave
push
or
cmp
mov
inc
and
mov
push
lds
inc
loopne
add
mov
fwait
gs
scas
and
fdivl
mov
add
lahf
and
jbe
add
sub
xchg
int
loopne
andb
xchg
fdivrl
cltd
mov
push
or
inc
clc
push
add
cmpsb
shlb
sub
and
pop
push
sbbl
push
in
push
int
inc
daa
sbb
xlat
push
movsl
and
cmc
sub
and
xchg
invd
mov
xchg
cmpl
sarb
mov
pop
inc
push
xchg
mov
daa
pushaw
add
inc
mov
dec
xor
dec
ficoml
mov
cmc
xor
sub
add
testl
add
loopne
cmc
bound
mov
inc
mov
push
cmp
sbb
rcrb
pushf
mov
ljmp
rolb
and
ror
and
cmp
or
shlb
or
loopne
fnsave
push
and
mov
and
cld
out
jo
pop
and
add
mov
adc
and
pop
sub
add
lock
add
popa
outsl
sub
add
push
jp
sbb
out
sub
and
mov
loopne
add
stos
add
insb
mov
int
subl
push
scas
or
mov
scas
addb
fwait
sbb
scas
rolb
or
mov
dec
enter
sbb
fcoms
aas
xorl
mov
dec
std
push
xchg
xlat
imul
shlb
sub
addb
inc
scas
sti
ss
mov
cld
cmp
clc
jmp
scas
addb
xchg
dec
fdivs
and
sbb
cld
pop
sub
xchg
push
mov
or
pop
or
sarb
mov
adc
dec
jnp
pusha
and
out
test
and
stos
rol
in
xor
in
lea
pop
jne
sarl
mov
xchg
fstps
mov
fisubl
cli
cmp
insl
pop
cmp
out
fidivs
loop
and
adc
insl
sti
fisubs
and
sbb
pusha
andb
jg
jo
adc
or
add
loope
jge
mov
pusha
ret
js
and
stc
out
gs
adc
addb
pop
enter
shrb
sub
test
popa
pop
adc
xchg
mov
insb
dec
push
push
adc
in
push
cmpl
or
inc
pop
dec
jns
mov
scas
in
inc
clc
inc
leave
icebp
cli
sbb
mov
dec
outsb
aas
iret
movsl
and
mov
imul
jle
pop
ficoms
push
ret
imul
stos
mov
shlb
mov
rdmsr
aas
sti
int3
or
sub
lds
lret
andb
and
and
push
popf
cmp
aad
sub
add
dec
pop
add
push
rolb
mov
adc
adc
jb
fidivrs
pop
imul
pusha
xchg
mov
loopne
sti
cmp
aas
jne
loopne
jle
mov
js
int3
mov
and
std
xlat
xchg
das
nop
adc
mov
cmp
loopne
xor
rcll
add
pop
pop
movb
lret
aad
jb
mov
pushf
xor
fldt
pusha
pusha
dec
jmp
shll
sub
and
inc
inc
sub
inc
mov
jmp
loopne
sbb
mov
and
pusha
out
loopne
ret
icebp
ss
pusha
add
mov
jecxz
jg
xchg
fwait
sahf
fwait
mov
shlb
into
pop
jo
adc
jne
mov
rolb
gs
inc
adc
pop
mov
fmulp
shlb
addr16
sub
loopne
mov
push
std
hlt
or
mov
push
push
andb
inc
push
stos
loopne
inc
adc
pop
fnstsw
or
aad
mov
jb
pop
and
xchg
mov
xchg
or
loopne
inc
mov
mov
add
adc
daa
loope
mov
add
orl
mov
mov
xchg
adc
cmpsl
test
sahf
mov
xor
int
lods
mov
data16
add
xor
loope
inc
andb
and
rol
roll
shlb
insb
pop
sahf
test
xor
add
pop
nop
cwtl
ljmp
loopne
pop
mov
rol
stc
xchg
jp
sahf
xchg
jae
mov
arpl
add
and
mov
mov
cmp
fdivr
fs
add
mov
data16
ret
in
jecxz
cmp
inc
and
rorl
and
shlb
cmpsl
xchg
mov
add
and
xor
std
shll
and
and
jge
xchg
jg
pop
rcll
adc
jo
scas
pusha
pusha
jae
inc
mov
mov
loopne
or
pop
add
mov
push
xor
pop
lcall
scas
or
pusha
jle
and
xlat
ljmp
pop
inc
jo
negl
mov
ja
xchg
add
sbbb
cmp
mov
dec
fisubrl
mov
mov
loopne
loope
imul
xchg
inc
jge
imul
cmpsl
aaa
cmc
sub
inc
lret
shlb
xor
leave
sub
inc
xlat
lcall
pop
lret
mov
pop
in
inc
popf
xlat
xchg
jmp
dec
add
and
pop
rorl
cmp
aas
incb
andb
aam
or
mov
nop
jnp
cli
xchg
stc
mov
pusha
or
shlb
faddl
add
mov
loop
mov
pusha
sbb
jae
or
ss
sarb
dec
sub
pusha
cmp
cmpsb
mov
xchg
push
pusha
pusha
scas
andb
imull
and
fwait
sbb
mov
pop
xchg
outsb
jae
inc
fnsaves
out
mov
add
or
adc
mov
test
add
push
inc
stc
pause
popa
cmp
negb
outsb
push
add
mov
rorb
popf
pop
andb
call
in
pushf
or
add
sahf
gs
pop
and
mov
add
sub
jge
imul
mov
int3
mov
ja
or
loopne
rolb
loopne
add
and
leave
jmp
insb
jno
pusha
pusha
addl
jmp
cmp
mov
fcomps
add
push
out
lods
addb
xor
mov
sbb
cli
mov
or
add
sub
mov
inc
icebp
jo
lods
sbb
pusha
adcb
cmc
cmp
dec
es
jge
inc
xor
loopne
ljmp
adc
sub
push
into
mov
pop
aam
fcomps
hlt
outsl
cli
fmuls
test
dec
push
xchg
and
adc
cmpb
push
mov
std
mov
aam
sbb
shlb
dec
and
inc
mov
mov
sarb
mov
mov
andb
dec
push
shl
jle
pop
mov
sahf
aam
pop
xadd
dec
ficomps
arpl
stc
xchg
stos
cli
hlt
xor
sub
mov
inc
fadds
bound
jbe
jmp
loopne
push
imul
aaa
fistl
loopne
add
mov
inc
mov
or
cmpsb
loopne
xchg
mov
imul
inc
xchg
dec
pop
popl
mov
and
inc
mov
add
mov
loopne
xor
or
test
subb
shrl
mov
rorb
repnz
shlb
add
and
cmpsl
repnz
je
lea
loope
insl
outsb
aam
cltd
pop
lods
fyl2xp1
addr16
repz
addr16
mov
out
sbb
xchg
mov
inc
mov
sti
scas
and
and
add
mov
cmpl
imul
pusha
pusha
lods
and
ja
aad
rcr
add
inc
loopne
and
hlt
les
ljmp
cmp
mov
add
idivl
mov
rolb
mov
inc
and
push
sub
out
adc
fwait
push
fs
repz
shl
lcall
and
mov
add
jo
mov
out
adc
movsl
jae
jge
mov
mov
jno
inc
imul
pusha
mov
jae
dec
pop
in
push
dec
xchg
push
sub
out
mov
mov
rolb
add
setp
xor
ret
subl
rol
ss
repz
xor
mov
addr16
mov
sbb
dec
pop
les
and
xchg
or
pusha
pusha
fwait
clc
add
ret
xchg
imul
stos
mov
mov
loopne,pn
dec
je
add
pusha
loopne
and
pusha
adc
push
sub
andb
scas
mov
and
add
add
lret
mov
and
mov
out
idivb
test
pop
frstor
mov
push
dec
jae
jp
shlb
pop
jmp
xor
jmp
xor
jmp
xor
inc
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
mov
push
call
xor
cmp
je
pushl
call
push
cmp
je
call
mov
push
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
add
cmp
jb
mov
mov
xor
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
cmp
jne
lea
push
push
push
call
test
jl
mov
push
pop
mul
lea
push
push
push
call
test
jl
mov
pushl
mov
push
pushl
call
mov
test
je
mov
shl
push
pushl
push
call
mov
add
cmp
jne
addl
mov
mov
mov
mov
mov
incl
xor
inc
pop
leave
ret
push
call
jmp
nop
nop
nop
nop
nop
mov
push
mov
cmpl
ja
mov
jb
cmp
ja
mov
mov
xor
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
xor
push
push
lea
push
push
call
mov
movl
mov
mov
mov
mov
mov
xor
divl
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
ja
push
pop
cmp
jb
xor
sub
push
push
sbb
push
push
call
push
pushl
push
push
call
mov
mov
push
push
push
pushl
call
cmp
ja
jb
cmp
jae
mov
lea
mov
mov
mull
cmp
ja
jb
cmp
jae
mov
mov
lea
mov
mov
cmp
jne
push
pop
xor
lea
push
rep
lea
push
push
call
add
push
mov
push
lea
push
push
push
call
push
push
lea
push
push
push
call
mov
mov
mov
cmp
jae
mull
test
ja
jb
cmp
jae
mov
mov
cmp
jb
mov
mov
xor
div
cmp
jb
sub
mov
sub
cmp
jae
mul
test
ja
jb
cmp
jae
mov
mov
mov
sub
pop
inc
mov
sub
pop
mov
pop
leave
ret
mov
jmp
or
mov
jmp
or
mov
jmp
or
andl
jmp
or
andl
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
test
jne
mov
test
jne
mov
or
jne
pop
pop
ret
nop
nop
mov
xor
lea
call
add
ret
mov
push
push
push
call
mov
and
jbe
and
jbe
and
jbe
and
jbe
and
jbe
and
jbe
and
jbe
lcall
jbe
and
jbe
lcall
jbe
and
jbe
sbb
jbe
lcall
jbe
and
jbe
lcall
jbe
lcall
jbe
lcall
jbe
and
jbe
negb
jbe
and
jbe
add
jbe
add
jbe
sbb
jbe
sbb
jbe
sbb
jbe
push
cltd
jbe
jbe
and
jbe
and
jbe
add
jbe
jbe
adc
jbe
add
jbe
or
jbe
add
jbe
jbe
and
jbe
and
jbe
adc
jbe
add
jbe
add
jbe
jbe
add
jbe
jbe
push
cltd
jbe
jbe
push
cltd
jbe
jbe
add
jbe
and
jbe
jbe
push
cltd
jbe
jbe
add
jbe
jbe
sub
jbe
sub
jbe
adc
jbe
es
jbe
jbe
es
jbe
jbe
repnz
jbe
jbe
add
jbe
repnz
jbe
jbe
add
jbe
jbe
sbb
jbe
sbb
jbe
sbb
jbe
add
jbe
jbe
sub
jbe
es
jbe
jbe
sub
jbe
sbb
jbe
cld
cwtl
jbe
lds
jbe
lds
jbe
lds
jbe
lds
jbe
lds
jbe
lds
jbe
lds
jbe
lds
jbe
lds
jbe
lds
jbe
lds
jbe
lds
jbe
lds
jbe
jbe
jae
jb
outsb
je
push
add
jae
jb
outsb
je
push
add
jb
outsb
je
inc
add
outsb
gs
popa
jo
push
add
insb
push
outsb
gs
popa
jo
inc
add
insb
inc
gs
popa
jb
push
add
insb
inc
jae
popa
jo
push
add
jae
popa
jo
inc
add
outsl
insl
bound
gs
add
insb
inc
outsl
insl
bound
gs
add
insb
inc
popa
outsb
outsl
outsb
imul
push
add
insb
inc
popa
outsb
outsl
outsb
imul
inc
add
insb
inc
jo
insb
jns
arpl
insl
gs
add
insb
inc
jo
insb
jns
arpl
insl
gs
add
jb
jb
insl
push
add
jb
outsl
dec
outsb
je
add
push
outsl
dec
outsb
je
js
add
jb
outsl
dec
outsb
je
add
push
outsl
dec
outsb
je
xor
js
add
push
je
push
add
jb
je
dec
push
add
jb
je
dec
inc
add
jb
je
inc
add
jb
gs
outsl
push
je
push
add
jb
gs
outsl
inc
jne
push
add
jb
gs
outsl
inc
push
push
push
add
jb
inc
push
nop
nop
push
je
push
inc
push
nop
nop
push
je
inc
outsl
jb
popa
je
jns
gs
imul
je
inc
jne
push
add
jb
jne
inc
add
jb
jmp
mov
adc
jbe
adc
jbe
and
jbe
sbb
jbe
push
cltd
jbe
rorb
pop
rorb
dec
rorb
cmp
jbe
push
cltd
jbe
rorb
adc
jbe
push
cltd
jbe
rorb
in
jbe
add
jbe
hlt
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cwtl
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
xchg
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cltd
jbe
mov
cwtl
jbe
mov
cltd
jbe
mov
jbe
and
jbe
pop
cltd
jbe
mov
jbe
and
jbe
pop
cltd
jbe
mov
jbe
push
cltd
jbe
mov
jbe
push
cltd
jbe
mov
jbe
pop
cltd
jbe
mov
jbe
push
cltd
jbe
mov
jbe
pop
cltd
jbe
mov
jbe
and
jbe
and
jbe
mov
jbe
add
jbe
push
cltd
jbe
mov
jbe
repz
jbe
mov
jbe
add
jbe
add
jbe
and
jbe
push
cltd
jbe
mov
jbe
push
cltd
jbe
mov
jbe
lcall
jbe
pop
cltd
jbe
mov
jbe
lcall
jbe
lcall
test
out
xchg
jo
scas
jmp
insb
pop
jnp
pop
xlat
mov
mov
pop
dec
hlt
and
ljmp
and
movsb
pusha
inc
adc
popa
pop
mov
daa
or
sahf
or
nop
jo
jo
addr16
add
clc
mov
inc
push
insb
push
add
in
out
mov
incl
mov
sar
mov
rorl
mov
fldl
rolb
rcrl
mov
scas
mov
xchg
in
mov
shl
mov
addb
loopne
push
jne
xchg
jge
and
pop
fadds
push
xchg
fiaddl
data16
xchg
scas
xchg
pop
cmp
xor
and
add
inc
xlat
fldlg2
xor
outsl
push
mov
pusha
and
and
shlb
xlat
dec
sub
andb
sbb
pop
lds
std
add
rorb
mov
loop
ss
sbb
add
loope
addb
xcrypt-ecb
cmpsl
mov
loopne
or
mov
repnz
mov
lea
pop
add
enter
and
insl
pop
mov
faddl
popf
xchg
imul
call
mov
xchg
movsb
rol
or
pop
lods
movsl
clc
stos
add
inc
mull
test
mov
jno
mov
add
add
jmp
adc
ret
pusha
mov
jno
ret
cmpsl
pop
xor
out
adc
fidivl
addb
add
xor
movsl
and
mov
loope
inc
add
in
shlb
lret
cmp
mov
das
inc
push
and
fwait
and
push
mov
and
jne
inc
inc
aam
and
adc
pop
test
mov
mov
mov
hlt
xlat
mov
int3
pop
adc
mov
adcb
pop
rorb
mov
jae
jne
js
shlb
xor
sbb
call
sbb
sub
insb
push
mov
jmp
lods
and
and
push
in
outsb
sbb
add
jb
xchg
cli
mov
repz
insb
adc
bnd
int
push
loopne
xchg
shll
pusha
loopne
bound
andb
loopne
dec
pushl
shl
lret
mov
fcomp
cmp
pop
or
inc
fs
inc
mov
std
fdiv
sbb
xchg
in
rcrb
fsubrl
inc
pusha
adc
add
pusha
adc
inc
mov
sub
mov
scas
inc
add
add
je
out
pusha
mov
mov
stos
mov
push
data16
out
addr16
mov
sti
std
push
dec
and
or
aam
mov
and
mov
mov
cmp
mov
add
sbb
and
andb
shrb
fisttpl
imul
inc
jg
insb
ret
lcall
imul
pushf
add
add
or
mov
dec
mov
push
xchg
push
push
adc
xor
pusha
sbbb
shlb
aad
xor
outsb
jno
repz
pop
imul
cmp
pusha
add
push
ljmp
sbb
mov
in
adc
mov
jg
in
jnp
dec
scas
jo
xchg
cmp
mov
decb
mov
and
dec
mov
out
add
xlat
mov
gs
mov
sahf
push
and
cwtl
lahf
sub
inc
ret
loopne
add
inc
xor
call
mov
std
lock
cmc
pop
mov
loopne
cmp
loopne
push
fdivl
aas
jp
lcall
push
test
xor
jne
sbb
loopne
jmp
cmp
fldl
pop
cmp
xchg
add
js
insl
lds
sbb
out
xchg
add
dec
pop
pop
mov
cmpsb
loopne
sbb
mov
addb
add
mov
sbbb
imul
shll
or
xchg
mov
add
rcrb
mull
xchg
or
and
std
pop
repnz
adc
add
and
loope
aaa
push
loop
add
xlat
mov
data16
mov
dec
dec
inc
push
inc
pusha
fchs
cwtl
movsl
test
cmp
insl
jae
sbb
sub
andb
mov
push
aas
add
sbb
xor
mov
movsb
pusha
and
pusha
mov
push
mov
sub
pusha
addb
add
and
sarb
pop
push
cmp
pop
xchg
fadds
addr16
leave
inc
mov
push
or
cmc
mov
rolb
xlat
mov
shlb
push
andb
push
out
ljmp
loop
xor
jmp
outsl
adc
mov
in
xchg
fisubs
bound
lret
sarb
sarb
test
addb
add
loopne
adcl
in
pop
outsb
std
data16
mov
mov
or
pusha
inc
dec
pop
mov
pusha
jbe
jbe
add
cmpsl
lods
addb
pop
aad
rcrl
fwait
xchg
xchg
sub
mov
push
pusha
inc
xchg
jbe,pt
inc
fbstp
add
repnz
jns
andb
adc
sub
push
imulb
add
lods
andb
aas
out
pop
adc
test
lods
pusha
inc
dec
das
inc
inc
mov
xor
pop
pop
pop
pop
inc
cmpsb
shl
mov
in
inc
loopne
rolb
out
enter
test
pusha
rcrl
and
lcall
mov
mov
lds
adc
pop
xchg
sbb
stos
shlb
add
xchg
inc
dec
dec
jp
pop
xchg
and
call
push
rep
inc
test
cmpsb
add
and
add
daa
into
push
and
sbb
insl
ljmp
inc
or
mull
fs
loopne
iret
lods
add
mov
shlb
aad
nop
loope
inc
mov
inc
test
insl
sub
dec
imul
daa
test
and
jae
aam
cld
gs
push
and
sub
scas
loopne
mov
inc
sub
pop
pusha
lahf
push
dec
pop
and
loopne
cwtl
sub
add
jae
popf
ret
push
fisubl
inc
push
mov
mov
inc
mov
sbb
mov
test
jnp
mov
mov
out
inc
dec
and
and
and
sarl
outsl
dec
nop
mov
andb
xchg
gs
pop
adc
arpl
or
rorb
andb
cwtl
imul
cmp
add
popf
test
pusha
xchg
inc
fldl2t
xchg
int
sbb
rcrb
pop
mov
or
inc
sub
addb
sub
stos
rolb
xlat
arpl
pusha
addb
bound
andb
inc
mov
lahf
outsb
insb
pop
lock
adc
ud1
sbb
inc
mov
in
mov
pop
cmp
rolb
sbb
rorb
mov
jmp
mov
sarb
int3
lahf
int
fdivrp
sub
rolb
test
loopne
add
sbb
push
fnstcw
xchg
popf
std
jo
dec
mov
and
or
outsb
js
mov
and
lahf
sub
shl
les
popa
cmpl
add
loopne
andb
push
sub
loopne
cmpsl
sti
pop
aad
std
test
and
data16
dec
mov
je
sbb
mov
adc
mov
call
andb
mov
cwtl
or
xor
adc
mov
pusha
data16
mov
popa
xchg
cmp
xchg
cmp
divb
bsr
mov
lahf
inc
or
and
cwtl
jg
outsl
lret
cwtl
outsl
dec
xor
mov
popa
pushf
dec
pop
mov
loopne
xor
push
mov
inc
sub
jo
xchg
int3
pop
shl
xchg
es
and
xor
inc
xor
add
add
and
inc
rorb
dec
mov
jge
xchg
lods
jecxz
andb
xorb
mov
inc
mull
bound
lea
pusha
adc
js
cs
ss
in
jae
std
jl
and
push
adc
jp
int3
repnz
xchg
sub
inc
pop
in
mov
add
add
and
xchg
sub
add
loopne
dec
sub
and
in
xchg
adc
fildll
add
aaa
jp
call
call
rolb
iret
test
sbb
inc
jmp
mov
cwtl
add
pusha
std
aam
outsb
test
lds
add
dec
shl
inc
sub
shrl
jle
insl
xchg
mov
pop
movsl
sbb
push
into
jo
add
sti
stc
and
mov
mov
add
and
and
repnz
add
push
jns
pusha
inc
add
mov
mov
pusha
jo
inc
add
paddsb
stc
lahf
movsb
loopne
daa
addb
add
pop
mov
dec
in
push
adc
stos
and
mov
and
add
and
sbb
dec
inc
repnz
mov
int3
sti
sub
add
jge
movl
nop
cmp
push
scas
jecxz
xchg
icebp
aam
daa
imull
aad
and
aaa
push
in
add
pusha
aaa
cwtl
mov
push
mov
and
loopne
or
jne
imul
sbbl
xchg
inc
inc
fiadds
sub
sbb
insl
jg
aas
jne
pop
mov
add
xchg
sbb
bnd
outsl
jbe
cmp
pop
roll
rolb
clc
pushf
add
add
sbb
or
loopne
in
lock
mov
dec
fs
div
pop
pop
xchg
jns
pop
arpl
or
jbe
cli
hlt
cwtl
fnsave
and
lods
cmpsl
xor
inc
and
xchg
inc
mov
rcr
lcall
fs
mov
data16
lcall
inc
pop
jge
daa
imul
fistl
cmp
sub
mov
mov
xchg
push
inc
inc
xor
test
jge
ret
mov
xlat
test
pusha
scas
mov
ss
inc
cmc
mov
cmp
rcrb
loop
sub
stos
rolb
clc
add
inc
loopne
xchg
pusha
push
add
loopne
cmpsl
test
and
add
xchg
jecxz
rolb
sub
addb
jne
sbb
xor
pop
repz
or
mov
dec
and
aas
push
push
push
inc
sub
cmc
cmp
cmp
cld
rorb
push
adc
push
std
sbb
add
loope
test
mov
test
xchg
sub
add
add
xor
aam
xchg
dec
scas
test
rclb
rorb
addb
mov
mov
stos
or
pop
inc
jg
mov
inc
int
or
enter
orl
pusha
jmp
sub
repnz
loope
mov
add
mov
stos
mov
sub
sbbb
sub
add
stc
imul
jmp
pusha
mov
hlt
inc
jne
jl
mov
shl
leave
xchg
orl
add
xchg
js
insb
ja
fidivs
pop
fidivrs
fmull
in
movsb
addb
sub
sar
inc
or
and
and
inc
jno
enter
aas
push
push
jmp
insb
mov
push
mov
cmp
lcall
sub
cmc
insl
mov
inc
loopne
cmp
outsl
or
adc
inc
roll
cmp
cmp
and
mov
ss
mov
inc
loopne
mov
lahf
mov
rcl
int3
dec
lret
sub
and
mov
xchg
pop
cli
pop
lahf
jns
cli
sbb
andl
sbb
test
xchg
cmpsb
pusha
mov
loopne
ss
cmp
mov
jge
cmp
sub
pusha
movsb
inc
add
xchg
jbe
mov
in
mov
int3
fsubrs
add
pop
pop
ret
pushf
cmp
jmp
cmpsl
fwait
dec
mov
and
pusha
aad
addb
xor
popa
mov
out
mov
sbbb
and
inc
mov
rcrb
pop
inc
stc
test
mov
jne
pusha
and
iret
jg
clc
mov
pop
clc
jge
jl
pop
mov
pop
loop
push
rolb
sub
inc
mov
sahf
repnz
lods
mov
ss
jle
testb
dec
and
add
or
shll
jmp
std
outsb
xchg
mov
fwait
andl
rolb
mov
repz
mov
pop
aad
test
pusha
data16
sub
inc
out
mov
push
inc
repz
mov
mov
test
ror
add
mov
jb
sbb
stos
mov
dec
or
loopne
aaa
dec
rolb
shl
push
push
pusha
shlb
shrb
pop
sbb
movsl
add
inc
cli
mov
jg
mov
insl
test
and
xor
dec
mov
xchg
pop
fldl2e
pop
stos
add
loop
addb
xchg
addr16
test
inc
push
ss
inc
mov
les
and
inc
inc
push
sbb
mov
shlb
loope
sbb
add
mov
sahf
pop
andb
cmc
cmpsb
and
lcall
inc
fsubs
inc
and
shll
xor
and
mov
sub
mov
mov
xchg
adc
push
addb
aad
mov
mov
loop
aam
out
iret
jp
mov
pusha
sbb
xor
test
rolb
jne
pop
in
lock
test
inc
push
add
add
cmp
dec
fwait
cmpsl
or
mov
add
xor
cwtl
aaa
xor
stos
add
rol
fdivrl
inc
push
mov
and
js
mov
pusha
cltd
addr16
and
xchg
jbe
sbb
pop
mov
xchg
dec
jl
push
nop
clc
repnz
cld
jae
add
pop
add
push
mov
leave
nop
jmp
adc
pop
add
clc
repnz
cld
jae
sbb
pop
outsb
imul
xlat
sbb
test
xchg
ret
jbe
add
add
add
aaa
mov
nop
clc
repnz
cld
jae
add
add
push
jne
nop
clc
repnz
cld
jae
add
or
push
mov
xchg
ret
add
xlat
xchg
cmp
cmpl
nop
push
mov
leave
nop
jmp
add
add
add
nop
clc
repnz
cld
jae
add
sbb
sub
adc
add
jae
movsb
add
add
push
nop
clc
repnz
cld
jae
add
cmp
clc
repnz
cld
jae
or
add
dec
add
adc
lods
movswl
nop
clc
repnz
cld
jae
add
cli
cmp
inc
pusha
mov
mov
nop
clc
repnz
cld
jae
shrb
iret
add
imulb
loopne
rcrb
push
add
clc
repnz
cld
jae
ja
pop
or
clc
nop
push
mov
leave
nop
jmp
add
outsb
add
and
ret
pop
nop
push
mov
leave
nop
jmp
add
add
add
add
nop
clc
repnz
cld
jae
add
add
out
fld1
nop
clc
repnz
cld
jae
add
sbb
add
jmp
js
nop
clc
repnz
cld
jae
add
outsl
mov
push
mov
xchg
ret
add
cli
jecxz
or
popa
nop
clc
repnz
cld
jae
sbb
add
add
and
push
mov
leave
nop
jmp
add
pushf
scas
xlat
lock
nop
cld
jae
adcb
mov
nop
push
mov
leave
nop
jmp
iret
add
stc
push
push
mov
xchg
ret
add
add
add
and
add
mov
nop
clc
repnz
cld
jae
xchg
add
add
cli
jge
inc
cmp
mov
xchg
ret
pop
pusha
add
add
add
add
jae
test
add
jo
ljmp
add
jae
add
dec
movzwl
nop
clc
repnz
cld
jae
xchg
mov
add
nop
push
mov
leave
nop
jmp
movsb
add
add
push
pop
jne
nop
clc
repnz
cld
jae
and
add
outsb
inc
add
stc
rolb
or
and
lret
push
nop
clc
repnz
cld
jae
test
add
add
stc
iret
call
nop
clc
repnz
cld
jae
add
push
add
nop
push
mov
leave
nop
jmp
fildl
pop
add
pop
nop
clc
repnz
cld
jae
pop
dec
add
andl
repnz
cld
jae
or
add
popa
push
push
mov
xchg
ret
add
adc
add
add
add
je
rcrb
imul
add
xchg
add
pop
test
cmp
xor
nop
clc
repnz
cld
jae
xor
add
pop
add
call
nop
clc
repnz
cld
jae
add
add
nop
clc
repnz
cld
jae
shr
test
into
push
test
nop
cld
jae
add
pop
aaa
xlat
dec
fucomip
jo
sahf
fistpl
cld
jae
outsb
add
les
add
mov
mov
leave
nop
jmp
add
pusha
add
les
or
jne
roll
push
mov
leave
nop
jmp
add
int3
lock
seto
in
leave
nop
jmp
testb
add
push
mov
xchg
ret
add
add
add
add
add
add
adcb
or
add
add
in
mov
push
lods
nop
clc
repnz
cld
jae
add
xlat
add
add
lea
add
les
and
push
rolb
dec
adc
jbe
add
mov
xchg
ret
sbb
add
adc
jecxz
jmp
xchg
jecxz
add
dec
out
add
add
insl
fwait
nop
clc
repnz
cld
jae
rorb
add
add
or
add
nop
clc
repnz
cld
jae
add
test
mov
dec
mov
add
nop
clc
repnz
cld
jae
mov
cmp
addb
add
jae
add
jecxz
pusha
push
call
nop
clc
repnz
cld
jae
iret
xlat
add
dec
pop
push
mov
xchg
ret
ja
or
xorl
cmp
mov
add
clc
repnz
cld
jae
add
push
mov
nop
clc
repnz
cld
jae
scas
xor
or
mov
nop
clc
repnz
cld
jae
add
test
aaa
add
push
pusha
add
push
nop
clc
repnz
cld
jae
xor
add
idivb
insl
inc
add
adc
pushf
ja
cli
add
jne
push
mov
xchg
ret
push
addb
or
sbb
clc
repnz
cld
jae
xchg
mov
xlat
xchg
and
loopne
xor
push
mov
xchg
ret
add
fists
sbb
adc
push
mov
leave
nop
jmp
add
les
or
inc
nop
clc
repnz
cld
jae
add
xlat
add
mov
dec
nop
clc
repnz
cld
jae
les
add
push
mov
nop
clc
repnz
cld
jae
adc
add
add
nop
clc
repnz
cld
jae
add
add
scas
ljmp
repnz
cld
jae
add
add
add
cli
js
add
into
add
add
add
push
mov
xchg
ret
add
add
or
push
mov
xchg
ret
addl
or
add
add
add
nop
push
mov
leave
nop
jmp
xchg
push
add
mov
leave
nop
jmp
add
cli
ljmp
mov
nop
clc
repnz
cld
jae
add
addb
add
nop
push
mov
leave
nop
jmp
add
add
test
mov
mov
add
nop
clc
repnz
cld
jae
ja
add
nop
cld
jae
add
jle
outsb
fistl
add
jmp
add
add
into
pop
fists
test
add
nop
clc
repnz
cld
jae
add
add
mov
nop
push
mov
leave
nop
jmp
pop
add
or
outsb
inc
js
xchg
push
mov
leave
nop
jmp
add
adc
push
repz
push
mov
xchg
ret
add
mov
xchg
clc
repnz
cld
jae
add
testb
test
and
js
push
mov
leave
nop
jmp
sbb
dec
add
mov
xchg
ret
xchg
mov
xor
adc
clc
repnz
cld
jae
xlat
add
add
sbb
nop
cld
jae
aaa
jle
or
add
or
push
mov
nop
clc
repnz
cld
jae
add
add
adc
rorb
clc
repnz
cld
jae
add
imul
nop
cld
jae
mov
out
add
rolb
push
push
mov
xchg
ret
add
add
cmp
jae
sbb
jg
test
add
repnz
cld
jae
adc
test
movsl
nop
clc
repnz
cld
jae
add
iret
add
shll
push
mov
leave
nop
jmp
add
add
js
pop
pop
add
nop
clc
repnz
cld
jae
mov
rorb
imul
jle
pushf
add
fistl
clc
repnz
cld
jae
dec
mov
xchg
add
ljmp
lcall
add
xchg
add
adc
add
dec
out
jg
nop
clc
repnz
cld
jae
add
or
pop
mov
nop
clc
repnz
cld
jae
add
add
rorl
clc
repnz
cld
jae
ljmp
rep
nop
clc
repnz
cld
jae
add
push
push
add
mov
nop
clc
repnz
cld
jae
cli
add
mov
je
js
mov
xchg
ret
pop
or
add
sbb
inc
fcoms
mov
leave
nop
jmp
add
dec
add
sbb
inc
jl
cmp
nop
push
mov
leave
nop
jmp
or
out
add
rcr
mov
nop
clc
repnz
cld
jae
xchg
notb
ljmp
insl
stos
nop
clc
repnz
cld
jae
or
add
rclb
push
mov
leave
nop
jmp
roll
add
add
ret
add
nop
clc
repnz
cld
jae
out
jecxz
cmp
xchg
add
and
push
loopne
jo
mov
nop
clc
repnz
cld
jae
adcl
cmpw
nop
clc
repnz
cld
jae
add
add
bound
fwait
push
mov
xchg
ret
orl
jecxz
ret
mov
nop
push
mov
leave
nop
jmp
add
pushf
add
sbb
adc
addb
nop
clc
repnz
cld
jae
add
add
arpl
test
cmp
ret
shrb
mov
adcb
clc
repnz
cld
jae
add
add
test
nop
push
mov
leave
nop
jmp
pushf
or
sbb
add
dec
sub
nop
clc
repnz
cld
jae
xchg
add
or
jg
icebp
nop
clc
repnz
cld
jae
pushf
cmp
add
cld
sbb
jbe
inc
add
cmp
rolb
add
nop
cld
jae
outsb
into
shrb
or
daa
pop
nop
push
mov
leave
nop
jmp
add
add
jl
mov
nop
clc
repnz
cld
jae
add
ret
nop
clc
repnz
cld
jae
add
xchg
add
cli
add
addb
popf
je
nop
clc
repnz
cld
jae
add
or
cltd
inc
add
add
add
test
add
inc
fwait
nop
clc
repnz
cld
jae
add
add
add
add
jge
insb
inc
jb
nop
clc
repnz
cld
jae
add
test
push
sbb
sbb
nop
push
mov
leave
nop
jmp
cmp
add
loopne
xor
nop
clc
repnz
cld
jae
sbb
push
mov
addb
nop
clc
repnz
cld
jae
andb
add
in
fwait
nop
clc
repnz
cld
jae
add
jecxz
xchg
add
adc
adc
rep
push
mov
xchg
ret
push
into
add
mov
das
mov
nop
clc
repnz
cld
jae
pushf
sbb
add
mov
nop
clc
repnz
cld
jae
xlat
xor
and
addl
nop
cld
jae
or
int3
sbb
rep
nop
clc
repnz
cld
jae
add
test
mov
nop
clc
repnz
cld
jae
pushf
or
cmp
nop
push
mov
leave
nop
jmp
add
add
ret
pop
add
nop
clc
repnz
cld
jae
pushf
push
add
add
mov
pop
nop
clc
repnz
cld
jae
dec
imul
cmp
mov
out
call
inc
add
sbb
add
sbb
or
mov
xchg
ret
xlat
dec
add
add
xor
adc
push
mov
leave
nop
jmp
pop
xchg
or
add
adc
add
jae
fstpt
and
ficoms
jae
scas
add
add
add
fstp
sbb
push
mov
xchg
ret
or
outsb
ror
add
jne
nop
clc
repnz
cld
jae
push
add
add
nop
clc
repnz
cld
jae
add
nop
clc
repnz
cld
jae
les
dec
adcl
push
test
inc
mov
add
clc
repnz
cld
jae
add
add
push
cmp
mov
xchg
ret
and
add
ljmp
nop
clc
repnz
cld
jae
add
ja
es
nop
clc
repnz
cld
jae
add
add
add
pop
sbb
mov
xchg
ret
add
xor
mov
push
add
stos
add
nop
clc
repnz
cld
jae
add
push
mov
clc
repnz
cld
jae
push
add
xlat
cwtl
pop
push
push
mov
xchg
ret
add
add
add
xchg
aaa
add
inc
push
mov
xchg
ret
add
sbb
div
push
jbe
push
or
nop
clc
repnz
cld
jae
add
ja
aaa
add
inc
nop
clc
repnz
cld
jae
xchg
add
add
jnp
add
rorl
add
mulb
ss
bound
and
add
add
push
add
xchg
xchg
fld1
push
mov
xchg
ret
add
testb
pushf
jecxz
test
loopne
xor
nop
push
mov
leave
nop
jmp
adc
leave
nop
clc
repnz
cld
jae
add
ljmp
xor
sbb
cmp
ret
pusha
add
xor
cs
fbld
clc
repnz
cld
jae
add
add
cmpsb
shlb
nop
push
mov
leave
nop
jmp
aaa
iret
jle
add
xor
mov
leave
nop
jmp
add
add
push
adcl
sldt
jbe
sbb
add
lea
nop
clc
repnz
cld
jae
push
add
add
ss
nop
clc
repnz
cld
jae
add
loope
repz
mov
xchg
ret
add
add
sbb
push
mov
xchg
ret
push
scas
imul
xor
daa
push
push
mov
xchg
ret
add
add
aaa
add
rep
nop
push
mov
leave
nop
jmp
movsb
or
testb
pop
mov
add
add
or
imul
add
int3
xchg
add
push
mov
xchg
ret
and
add
clc
repnz
cld
jae
add
add
xchg
fistpll
nop
clc
repnz
cld
jae
stc
pushf
add
xlat
les
jge
nop
clc
repnz
cld
jae
not
add
test
ljmp
inc
add
add
cmp
or
mov
mov
xchg
ret
pop
testb
xor
add
clc
repnz
cld
jae
add
stc
jbe
ljmp
add
jae
xchg
add
add
mov
popf
nop
clc
repnz
cld
jae
add
pop
push
pusha
nop
clc
repnz
cld
jae
out
addl
pusha
sbb
add
nop
clc
repnz
cld
jae
add
add
add
add
cmp
nop
push
mov
leave
nop
jmp
out
add
add
mov
leave
nop
jmp
sbb
add
mov
nop
clc
repnz
cld
jae
add
add
jbe
pusha
rorb
pusha
cld
cmp
add
push
mov
xchg
ret
adcl
js
iret
aaa
cmc
push
push
mov
xchg
ret
add
add
add
nop
push
mov
leave
nop
jmp
add
into
into
add
add
nop
clc
repnz
cld
jae
ja
add
adc
jl
nop
push
mov
leave
nop
jmp
sbb
add
pop
push
mov
xchg
ret
add
jbe
pushf
add
push
fistpl
nop
push
mov
leave
nop
jmp
add
jp
push
nop
push
mov
leave
nop
jmp
pop
add
into
or
pop
nop
clc
repnz
cld
jae
add
add
and
push
nop
clc
repnz
cld
jae
add
add
or
leave
xchg
nop
clc
repnz
cld
jae
add
jbe
fildl
fdivp
insb
sbb
adc
add
nop
push
mov
leave
nop
jmp
xlat
and
test
loopne
outsl
push
nop
clc
repnz
cld
jae
add
add
lods
push
mov
xchg
ret
or
add
ja
add
inc
mov
nop
push
mov
leave
nop
jmp
iret
jecxz
add
mov
xchg
ret
cmp
add
fcmovne
add
popa
add
nop
push
mov
leave
nop
jmp
ja
rorb
mov
loopne
dec
div
nop
push
mov
leave
nop
jmp
pusha
stc
add
xchg
out
or
mov
add
jae
add
fcmovnbe
jmp
nop
clc
repnz
cld
jae
filds
add
push
and
loopne
call
nop
push
mov
leave
nop
jmp
adc
mov
adc
clc
repnz
cld
jae
add
add
js
inc
add
adc
addl
add
inc
inc
pusha
jns
sti
adc
add
jae
addb
add
dec
nop
push
mov
leave
nop
jmp
pushf
pusha
into
add
add
outsb
cmc
xor
nop
clc
repnz
cld
jae
xchg
pushf
add
xchg
outsb
imul
nop
push
mov
leave
nop
jmp
adc
add
add
add
cmpsb
shlb
push
nop
clc
repnz
cld
jae
add
or
clc
repnz
cld
jae
add
stc
rcll
repnz
cld
jae
movsb
adc
add
add
movl
in
leave
nop
jmp
roll
aam
push
nop
clc
repnz
cld
jae
add
add
push
push
mov
xchg
ret
or
add
add
add
nop
jmp
adcl
sub
clc
repnz
cld
jae
xor
push
add
out
add
push
jb
fldpi
push
mov
xchg
ret
xchg
dec
shlb
adc
mov
mov
call
jae
add
into
adc
push
mov
xchg
ret
scas
add
pushf
addl
add
xor
nop
cld
jae
and
iret
mov
nop
push
mov
leave
nop
jmp
into
add
jbe
add
in
dec
xlat
add
les
cli
scas
add
adc
ja
jle
aaa
mov
push
mov
xchg
ret
add
add
add
pushf
pop
mov
add
nop
clc
repnz
cld
jae
push
ljmp
mov
mov
nop
clc
repnz
cld
jae
add
ret
add
sbb
add
nop
clc
repnz
cld
jae
into
add
add
push
scas
add
lds
push
mov
xchg
ret
test
add
movsb
add
add
aaa
mov
nop
push
mov
leave
nop
jmp
xlat
add
addb
add
and
repnz
cld
jae
jle
add
xchg
ljmp
add
nop
clc
repnz
cld
jae
cmp
add
rolb
clc
repnz
cld
jae
add
add
add
out
shlb
clc
repnz
cld
jae
and
and
xchg
fcmovnb
jmp
in
leave
nop
jmp
stc
add
cmp
dec
push
mov
xchg
ret
ret
xchg
ljmp
mov
test
clc
repnz
cld
jae
cmp
add
call
nop
jmp
fcmovnb
movsb
cmp
dec
jmp
add
adc
mov
ret
push
lods
add
nop
clc
repnz
cld
jae
xlat
add
ja
popa
push
nop
clc
repnz
cld
jae
add
dec
add
pop
add
clc
repnz
cld
jae
les
cli
adc
add
int3
dec
push
nop
clc
repnz
cld
jae
add
push
add
mov
push
mov
leave
nop
jmp
jle
jle
jle
inc
jmp
add
sbb
addl
xlat
test
add
rolb
pusha
mov
add
nop
clc
repnz
cld
jae
or
outsb
gs
nop
clc
repnz
cld
jae
add
pushf
add
nop
clc
repnz
cld
jae
add
push
add
aaa
add
pushf
jnp
and
add
add
add
mov
add
fistpll
push
mov
leave
nop
jmp
xor
add
add
mov
lret
mov
repnz
cld
jae
test
js
add
lods
dec
push
mov
xchg
ret
pushf
pop
jbe
add
sbb
add
rorb
jne
push
inc
push
dec
nop
clc
repnz
cld
jae
push
pop
push
or
jmp
call
nop
jmp
add
jbe
jecxz
dec
add
add
dec
add
add
add
mov
clc
repnz
cld
jae
testb
add
add
xor
clc
repnz
cld
jae
push
dec
add
or
outsl
fwait
nop
clc
repnz
cld
jae
add
add
inc
pop
nop
push
mov
leave
nop
jmp
cmp
cmp
movsb
outsl
pushl
nop
clc
repnz
cld
jae
orb
mov
nop
inc
add
into
pusha
xchg
add
add
jne
nop
clc
repnz
cld
jae
push
ret
loopne
loopne
jecxz
mov
repnz
cld
jae
sbb
add
imul
nop
push
mov
leave
nop
jmp
les
addb
ret
mov
stc
add
nop
push
mov
leave
nop
jmp
add
rclb
ret
push
mov
nop
clc
repnz
cld
jae
test
fs
test
nop
push
mov
leave
nop
jmp
test
add
push
mov
push
mov
xchg
ret
dec
add
or
andb
in
fcoms
jae
ret
or
or
nop
clc
repnz
cld
jae
filds
pushf
mov
out
push
out
mov
nop
clc
repnz
cld
jae
stc
add
add
lea
push
mov
xchg
ret
dec
push
test
mov
sub
jae
add
add
ja
or
mov
xchg
ret
add
add
add
js
mov
nop
clc
repnz
cld
jae
add
or
sbb
fisttps
repnz
cld
jae
push
idivb
outsb
xor
push
mov
leave
nop
jmp
js
add
xchg
adc
scas
or
mov
leave
nop
jmp
add
mov
nop
clc
repnz
cld
jae
roll
nop
push
mov
leave
nop
jmp
xchg
js
pushf
pushf
roll
inc
mov
nop
clc
repnz
cld
jae
add
jecxz
xchg
pop
dec
sbb
clc
repnz
cld
jae
add
rolb
xchg
xor
je
nop
clc
repnz
cld
jae
ljmp
nop
clc
repnz
cld
jae
pop
add
sti
push
nop
clc
repnz
cld
jae
add
push
add
add
movsb
les
inc
shrb
push
mov
xchg
ret
add
xlat
dec
pushf
push
ja
add
nop
clc
repnz
cld
jae
add
add
add
add
push
mov
xchg
ret
out
test
add
test
or
pop
call
nop
jmp
add
or
nop
clc
repnz
cld
jae
sbb
cli
pop
cmp
xor
push
mov
xchg
ret
push
xchg
pop
push
add
ret
shl
push
mov
xchg
ret
add
xchg
add
xchg
add
adc
mov
xchg
ret
add
out
add
sbb
sbb
mov
nop
push
mov
leave
nop
jmp
adc
add
push
shl
pop
nop
push
mov
leave
nop
jmp
js
add
jns
jo
inc
add
add
in
rorl
in
leave
nop
jmp
cmp
idivb
clc
repnz
cld
jae
add
pushf
fimull
clc
repnz
cld
jae
add
add
fistpl
xchg
inc
add
test
add
aaa
ljmp
or
inc
add
mov
sbb
push
push
mov
xchg
ret
imul
add
addb
push
mov
nop
clc
repnz
cld
jae
add
adc
roll
xchg
jae
dec
add
push
push
mov
xchg
ret
add
ja
dec
add
cmp
rclb
sbbl
incl
add
add
add
pop
push
mov
xchg
ret
xlat
push
dec
add
push
add
cli
xor
mov
and
add
add
nop
clc
repnz
cld
jae
add
aaa
add
add
rep
nop
clc
repnz
cld
jae
addl
xchg
dec
add
mov
clc
repnz
cld
jae
roll
xlat
add
into
pushf
les
jne
inc
sbb
jae
add
jae
loope
incl
add
jae
movsb
or
clc
repnz
cld
jae
push
add
push
popa
nop
clc
repnz
cld
jae
add
add
add
aaa
add
add
push
mov
xchg
ret
add
pop
add
add
and
loopne
pop
nop
clc
repnz
cld
jae
out
push
test
scas
pop
add
add
add
jae
stc
add
lret
je
nop
clc
repnz
cld
jae
imul
mov
mov
nop
clc
repnz
cld
jae
sbb
dec
or
in
add
nop
clc
repnz
cld
jae
add
add
loope
nop
push
mov
leave
nop
jmp
jbe
rolb
add
add
pop
into
cld
popf
cmp
nop
push
mov
leave
nop
jmp
les
cmp
pop
mov
xchg
inc
add
mov
add
into
inc
push
shl
nop
clc
repnz
cld
jae
xor
add
add
adc
mov
leave
nop
jmp
add
add
or
scas
inc
and
nop
cld
jae
aaa
and
add
movzwl
nop
clc
repnz
cld
jae
imul
sbb
mov
nop
clc
repnz
cld
jae
add
dec
test
adc
mov
clc
repnz
cld
jae
into
cmp
add
lret
test
nop
push
mov
leave
nop
jmp
rorl
add
add
adc
test
clc
repnz
cld
jae
ret
xchg
fimull
andb
xor
nop
clc
repnz
cld
jae
dec
add
add
dec
jbe
shr
nop
clc
repnz
cld
jae
adc
push
jmp
add
jle
or
add
sbb
ljmp
repz
nop
clc
repnz
cld
jae
add
xlat
dec
xchg
or
nop
push
mov
leave
nop
jmp
push
adc
push
mov
xchg
ret
cmp
add
pusha
cli
jecxz
inc
and
nop
clc
repnz
cld
jae
add
aaa
add
mov
in
add
and
lea
nop
clc
repnz
cld
jae
add
jne
nop
clc
repnz
cld
jae
test
add
repnz
cld
jae
js
add
add
jae
pause
clc
repnz
cld
jae
sbb
add
rolb
movsb
adc
nop
cld
jae
add
add
xchg
ljmp
add
add
nop
jmp
ljmp
and
clc
repnz
cld
jae
add
add
add
or
add
add
nop
clc
repnz
cld
jae
sarl
sbb
nop
clc
repnz
cld
jae
add
fistps
addl
scas
mov
mov
leave
nop
jmp
add
stos
push
push
mov
xchg
ret
add
iret
add
add
xor
nop
push
mov
leave
nop
jmp
xlat
add
add
pop
or
and
repnz
cld
jae
ret
add
add
mov
nop
clc
repnz
cld
jae
iret
sbb
add
and
repnz
cld
jae
add
add
testl
xchg
ret
les
sbbb
adc
mov
fidivl
mov
leave
nop
jmp
add
test
xlat
add
dec
andb
shlb
mov
mov
push
mov
xchg
ret
ret
dec
add
xchg
fsubrl
inc
mov
add
add
nop
clc
repnz
cld
jae
xor
jbe
lea
nop
push
mov
leave
nop
jmp
add
sarb
add
sbb
stos
mov
nop
clc
repnz
cld
jae
into
into
cmp
repnz
cld
jae
aaa
test
cmp
add
add
call
cld
jae
push
add
add
add
repnz
cld
jae
xor
add
js
call
jae
imul
jae
pause
clc
repnz
cld
jae
xchg
add
fistps
push
pop
mov
nop
clc
repnz
cld
jae
add
pop
xlat
jecxz
and
fs
insb
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
cld
jae
scas
filds
test
xchg
push
add
push
push
mov
xchg
ret
dec
fildl
outsb
mov
mov
mov
xchg
ret
adcl
add
shlb
xor
nop
push
mov
leave
nop
jmp
push
fisttpl
jbe
xor
nop
cld
jae
or
out
add
rcr
add
sub
nop
clc
repnz
cld
jae
add
adc
test
outsl
fwait
push
mov
xchg
ret
add
add
add
add
xlat
xchg
sub
repnz
cld
jae
testb
xlat
imul
rol
mov
out
sbb
cld
jae
sbb
add
in
arpl
push
mov
leave
nop
jmp
dec
push
stc
sbb
add
mov
mov
inc
add
add
add
add
dec
call
nop
clc
repnz
cld
jae
add
mov
jne
nop
clc
repnz
cld
jae
add
sarl
stc
mov
nop
clc
repnz
cld
jae
add
sbb
add
fldt
andb
in
mov
nop
clc
repnz
cld
jae
pushf
pushf
add
jecxz
xchg
add
nop
push
mov
leave
nop
jmp
xchg
add
xchg
add
test
jb
inc
add
rolb
xchg
add
and
push
mov
xchg
ret
and
add
add
mov
add
pusha
push
andb
and
cld
stc
pop
push
mov
xchg
ret
add
xor
sbb
add
shrb
add
add
nop
clc
repnz
cld
jae
add
pop
add
nop
cld
jae
add
add
add
xor
inc
nop
clc
repnz
cld
jae
add
add
nop
clc
repnz
cld
jae
add
sarl
dec
les
mov
nop
clc
repnz
cld
jae
add
push
push
nop
clc
repnz
cld
jae
push
xlat
outsb
add
add
mov
mov
xchg
ret
dec
add
add
add
rcll
clc
repnz
cld
jae
add
add
push
and
clc
repnz
cld
jae
cmp
add
stc
add
outsl
nop
push
mov
leave
nop
jmp
add
add
mov
sbb
dec
mov
daa
mov
nop
clc
repnz
cld
jae
jbe
test
out
add
inc
call
nop
clc
repnz
cld
jae
les
jecxz
and
mov
xchg
ret
add
cli
add
mov
nop
clc
repnz
cld
jae
pushf
add
add
andl
nop
cld
jae
add
add
push
nop
clc
repnz
cld
jae
pop
dec
xchg
or
sar
nop
clc
repnz
cld
jae
jbe
xchg
mov
jnp
nop
clc
repnz
cld
jae
xlat
rolb
adc
xchg
add
std
xor
push
mov
xchg
ret
add
add
out
adc
mov
xchg
ret
push
into
pop
cli
pusha
push
lds
clc
repnz
cld
jae
pushf
pushf
add
add
nop
clc
repnz
cld
jae
add
andb
push
add
push
mov
xchg
ret
outsb
xor
add
sub
add
jae
or
addb
adc
in
sub
fst
add
addr16
add
add
add
mov
test
inc
jns
test
call
jae
sbb
pop
push
nop
push
mov
leave
nop
jmp
adc
xor
add
add
fistpl
push
mov
xchg
ret
iret
movsb
pushf
movsb
add
les
cmp
and
pushf
add
stc
fistpll
add
pop
cld
push
mov
xchg
ret
into
test
add
and
add
mov
mov
xchg
ret
test
cmp
sbb
ja
nop
clc
repnz
cld
jae
xorl
popf
mov
nop
clc
repnz
cld
jae
js
add
add
test
repnz
cld
jae
push
add
and
clc
repnz
cld
jae
ljmp
cwtl
es
add
push
mov
xchg
ret
pusha
cmp
outsb
xlat
test
pop
adc
jae
xchg
or
repnz
mov
push
mov
xchg
ret
les
add
or
sbb
test
adc
add
nop
jmp
or
jl
sbb
clc
repnz
cld
jae
add
add
mov
add
add
nop
jmp
add
mov
clc
repnz
cld
jae
js
add
or
aaa
and
inc
xor
nop
clc
repnz
cld
jae
xor
add
iret
mov
repnz
cld
jae
add
add
add
pop
sti
fwait
nop
clc
repnz
cld
jae
add
ja
into
pusha
iret
aam
addb
xor
adcl
clc
repnz
cld
jae
iret
add
push
mov
xchg
ret
xchg
add
or
add
daa
push
nop
push
mov
leave
nop
jmp
add
add
and
add
inc
add
xor
nop
cld
jae
add
test
xchg
add
fwait
cmp
nop
push
mov
leave
nop
jmp
fildll
add
fld1
nop
push
mov
leave
nop
jmp
add
xor
add
call
nop
clc
repnz
cld
jae
add
xchg
xchg
fld1
push
mov
xchg
ret
xlat
js
cmp
add
test
call
cmc
fistpl
push
mov
xchg
ret
cmp
add
add
add
add
nop
clc
repnz
cld
jae
sarl
add
add
push
loopne
clc
repnz
cld
jae
add
push
add
sbb
mov
clc
repnz
cld
jae
add
xchg
test
add
push
test
push
mov
xchg
ret
xchg
rolb
xlat
add
enter
nop
cld
jae
add
cmp
mov
nop
clc
repnz
cld
jae
pushf
add
xor
ret
add
add
jae
add
add
push
nop
clc
repnz
cld
jae
push
sbb
add
ret
addr16
push
mov
xchg
ret
cmp
add
add
sbb
adc
nop
push
mov
leave
nop
jmp
stc
fildll
add
cltd
call
nop
clc
repnz
cld
jae
ja
cmp
push
mov
xchg
ret
mov
add
add
in
and
nop
clc
repnz
cld
jae
add
movsb
and
jno
movb
fisttpll
and
xchg
add
add
or
repnz
cld
jae
add
add
add
xor
fistpl
and
clc
repnz
cld
jae
add
jecxz
add
int
jge
nop
clc
repnz
cld
jae
add
add
add
movzwl
nop
clc
repnz
cld
jae
push
dec
testb
sub
clc
repnz
cld
jae
ret
pushf
add
dec
and
shrb
clc
repnz
cld
jae
add
jbe
rolb
xor
jo
movzwl
nop
clc
repnz
cld
jae
sbb
test
add
clc
repnz
cld
jae
add
imul
add
call
clc
repnz
cld
jae
cmp
add
add
rol
push
mov
xchg
ret
xor
or
inc
orb
repnz
cld
jae
sbb
testb
add
push
push
mov
xchg
ret
add
add
cli
mov
stos
add
nop
push
mov
leave
nop
jmp
pushf
add
add
out
in
adc
mov
xchg
ret
outsb
add
add
add
add
addb
andb
call
add
xchg
fwait
inc
add
imul
adc
or
clc
repnz
cld
jae
add
add
push
pop
push
mov
xchg
ret
add
add
add
add
push
and
testl
xchg
ret
or
add
mov
push
mov
leave
nop
jmp
add
add
add
and
fscale
incl
add
add
add
or
add
mov
decl
push
mov
xchg
ret
xlat
pop
sbb
add
cmp
loopne
mov
pushl
nop
clc
repnz
cld
jae
filds
cli
js
xor
jne
push
mov
xchg
ret
add
or
and
push
mov
xchg
ret
addb
fildl
add
lahf
sub
push
mov
xchg
ret
add
add
xor
adc
add
nop
clc
repnz
cld
jae
add
mov
sub
xchg
and
add
sbb
add
in
push
mov
xchg
ret
add
pop
mov
xchg
push
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
xlat
add
adcb
in
call
nop
clc
repnz
cld
jae
xor
mov
nop
clc
repnz
cld
jae
or
ja
add
pop
push
mov
xchg
ret
into
mul
add
add
testb
push
nop
clc
repnz
cld
jae
and
add
add
jp
pop
nop
clc
repnz
cld
jae
cmp
add
adc
pushf
inc
add
add
adc
xor
lds
mov
xchg
ret
mov
and
sbb
push
mov
xchg
ret
rcll
sbb
cli
inc
xchg
nop
clc
repnz
cld
jae
or
xor
add
fld1
nop
push
mov
leave
nop
jmp
add
pop
jbe
rolb
mov
clc
repnz
cld
jae
add
cmp
push
nop
clc
repnz
cld
jae
sbb
xlat
dec
add
add
push
nop
clc
repnz
cld
jae
add
xlat
ja
push
daa
push
nop
clc
repnz
cld
jae
cmp
ja
add
js
add
jecxz
add
xlat
add
pop
push
adc
repnz
cld
jae
add
test
pusha
push
or
and
pop
nop
clc
repnz
cld
jae
add
rorl
mov
addr16
icebp
daa
nop
push
mov
leave
nop
jmp
xor
test
repnz
cld
jae
add
add
jle
add
cmpl
xchg
ret
add
add
add
and
int3
xchg
add
js
add
iret
cli
xor
addb
mov
push
push
mov
xchg
ret
add
xchg
rolb
xchg
xor
nop
clc
repnz
cld
jae
xlat
add
sub
repnz
cld
jae
add
push
notb
fistpl
nop
clc
repnz
cld
jae
ljmp
fistpl
nop
push
mov
leave
nop
jmp
adc
pop
push
les
in
call
jae
cmp
xchg
pusha
or
shlb
push
cli
movsb
xchg
jle
movsb
push
outsb
shlb
in
add
push
mov
xchg
ret
cmp
push
fildl
jg
nop
clc
repnz
cld
jae
xchg
push
add
sbb
add
inc
push
nop
clc
repnz
cld
jae
add
xchg
xchg
lea
mov
leave
nop
jmp
add
jle
add
roll
mov
xchg
ret
fstpt
fucomip
aaa
fbld
nop
cld
jae
add
movsb
orl
cmp
push
mov
leave
nop
jmp
iret
xchg
add
dec
cmp
push
mov
leave
nop
jmp
pusha
add
add
add
rorl
mov
test
call
jae
add
movzwl
nop
clc
repnz
cld
jae
imul
push
sti
push
push
mov
xchg
ret
add
iret
adc
add
xchg
or
call
jae
add
fbld
pop
push
mov
xchg
ret
dec
xor
cmpb
hlt
mov
stc
push
push
mov
xchg
ret
outsb
add
or
rcl
add
add
nop
clc
repnz
cld
jae
mov
test
add
insl
fistpl
nop
clc
repnz
cld
jae
or
pushf
add
sub
jae
ljmp
pop
pop
push
mov
xchg
ret
add
xlat
xor
mov
call
nop
push
mov
leave
nop
jmp
add
add
loopne
push
inc
mov
nop
push
mov
leave
nop
jmp
sbb
shrb
pushl
nop
clc
repnz
cld
jae
add
mov
and
push
mov
leave
nop
jmp
add
add
pushf
decl
test
clc
repnz
cld
jae
outsb
jecxz
push
and
add
loopne
jne
nop
clc
repnz
cld
jae
rolb
add
push
pop
nop
clc
repnz
cld
jae
ret
add
pop
push
mov
xchg
ret
add
outsb
or
add
nop
push
mov
leave
nop
jmp
cli
xchg
add
add
pop
mov
push
mov
xchg
ret
fildl
add
sbb
cli
add
or
mov
nop
clc
repnz
cld
jae
add
std
add
nop
clc
repnz
cld
jae
sarl
mov
and
add
notl
nop
jmp
xchg
add
adc
nop
cld
jae
add
add
add
add
test
mov
xchg
ret
ja
add
test
add
and
imul
jmp
add
mov
or
sti
xchg
inc
add
dec
add
add
jmp
call
jae
add
clc
repnz
cld
jae
add
add
iret
or
imul
aas
xor
nop
clc
repnz
cld
jae
jle
or
and
inc
out
mov
nop
clc
repnz
cld
jae
add
ljmp
clc
repnz
cld
jae
jecxz
xor
add
add
xchg
sbb
rclb
nop
jmp
xor
sbb
add
dec
in
dec
nop
clc
repnz
cld
jae
dec
add
pushf
jecxz
add
mov
xchg
ret
add
pop
push
testb
movsb
add
test
xchg
ret
add
shr
add
add
fucom
call
jae
fisttpl
add
add
cld
jae
dec
add
mov
repnz
cld
jae
xor
pushf
add
push
mov
xchg
ret
or
add
push
jecxz
add
inc
push
adc
nop
clc
repnz
cld
jae
xor
call
nop
clc
repnz
cld
jae
add
adc
add
nop
jmp
add
add
add
add
add
add
jae
add
xchg
jle
ret
nop
clc
repnz
cld
jae
pushf
add
addl
add
stos
mov
rolb
loopne
push
nop
clc
repnz
cld
jae
add
xor
fldt
push
mov
leave
nop
jmp
add
or
sub
mov
and
nop
cld
jae
push
add
add
mov
add
clc
repnz
cld
jae
add
push
add
outsb
and
loopne
mov
imul
mov
call
jae
add
xchg
cmp
pop
nop
push
mov
leave
nop
jmp
iret
jbe
add
outsb
add
xor
clc
repnz
cld
jae
add
pushf
add
dec
movsl
add
nop
clc
repnz
cld
jae
into
pushf
add
add
xchg
mov
nop
clc
repnz
cld
jae
movsb
cmp
add
mov
nop
clc
repnz
cld
jae
sub
or
nop
clc
repnz
cld
jae
xchg
dec
add
cmc
xor
push
mov
xchg
ret
add
into
add
mov
jb
inc
add
push
add
add
add
add
nop
push
mov
leave
nop
jmp
push
add
orl
nop
cld
jae
or
add
nop
clc
repnz
cld
jae
jle
dec
xchg
add
add
pop
lea
push
mov
xchg
ret
add
rorb
xchg
cltd
mov
nop
clc
repnz
cld
jae
add
sbb
add
push
nop
push
mov
leave
nop
jmp
jbe
ja
xchg
add
fdivr
mov
nop
clc
repnz
cld
jae
imul
add
rcrb
rcll
jae
shrb
add
sub
clc
repnz
cld
jae
add
and
ja
pop
add
nop
clc
repnz
cld
jae
adc
pop
xchg
add
pusha
and
push
out
out
push
nop
clc
repnz
cld
jae
xor
xchg
xchg
filds
movsb
stc
fwait
pop
nop
push
mov
leave
nop
jmp
adc
pop
jle
mov
sbbb
inc
add
nop
jmp
add
push
nop
clc
repnz
cld
jae
sbb
sbb
add
and
mov
nop
clc
repnz
cld
jae
add
nop
clc
repnz
cld
jae
add
pushf
add
add
add
jmp
or
test
add
add
add
pop
nop
push
mov
leave
nop
jmp
add
sbb
pushf
sbb
sti
mov
nop
clc
repnz
cld
jae
fucomip
add
xor
flds
jne
nop
clc
repnz
cld
jae
adc
cmc
ret
push
mov
xchg
ret
add
add
xchg
add
mov
nop
clc
repnz
cld
jae
ja
add
xor
nop
clc
repnz
cld
jae
xchg
add
push
jbe
add
push
nop
clc
repnz
cld
jae
adc
add
roll
sbbl
neg
call
jae
add
add
int3
inc
jmp
add
xchg
add
add
filds
cmp
nop
clc
repnz
cld
jae
dec
adc
pusha
fisttpll
nop
cld
jae
addl
xlat
test
sbb
jne
nop
clc
repnz
cld
jae
add
add
addb
loopne
cld
fwait
dec
nop
push
mov
leave
nop
jmp
add
add
xchg
call
jae
ljmp
leave
xchg
inc
add
movsb
add
mov
sub
inc
add
add
add
shl
shll
arpl
and
xchg
ljmp
es
cmp
add
push
mov
xchg
ret
add
cmp
add
push
push
mov
xchg
ret
add
mov
add
dec
xchg
nop
clc
repnz
cld
jae
into
jbe
add
addb
jne
nop
clc
repnz
cld
jae
dec
add
scas
pusha
loopne
push
pusha
sub
test
jmp
call
jae
or
mov
or
add
jae
add
pop
idivl
nop
clc
repnz
cld
jae
xchg
xor
add
xchg
lds
push
mov
leave
nop
jmp
add
testb
cmp
nop
push
mov
leave
nop
jmp
add
cli
aaa
xlat
push
loop
jp
add
mov
ja
cmpsl
add
pushf
add
std
add
add
xchg
cmc
or
push
jp
loopne
pushf
int
mov
es
loopne
inc
sahf
mov
xor
loop
push
or
pop
cmpsl
cmpsb
and
les
icebp
dec
bound
sbb
aaa
in
lret
in
jmp
shrb
imul
inc
lods
pop
sarb
sub
call
inc
add
xorb
inc
jo
in
pop
ds
mov
repnz
cmp
jb
pusha
mov
xor
iret
in
xchg
push
mov
test
xor
inc
mov
add
inc
inc
sbb
into
call
ficompl
in
sub
xor
xchg
in
rolb
loopne
pushf
popa
adc
rcrl
inc
xchg
int
popl
xchg
mov
pusha
xor
sarb
pusha
loope
xchg
mov
sbbb
add
mov
movsl
cmc
pop
sub
pusha
stc
pop
pop
fists
das
hlt
adc
sub
nop
pusha
dec
loope
sub
xor
ja
mov
pusha
pushf
inc
loop
cmp
fstpt
cmp
mov
sbb
data16
dec
addb
lret
inc
jl
enter
sub
and
or
shlb
je
add
add
mov
sub
fstps
cltd
pusha
jno
mov
or
andb
adc
mov
loopne
js
push
and
mov
ret
adcb
and
inc
mov
inc
or
and
imul
ror
dec
xchg
les
aam
push
pop
dec
repz
addb
mov
gs
pusha
loopne
pusha
loopne
sbb
mov
ljmp
mov
push
pop
mov
mov
out
nop
dec
or
rol
cmp
jmp
hlt
fsubl
mov
rorb
mov
and
andb
lret
stos
add
cmp
repnz
scas
loopne
out
jl
or
fldl
inc
sbb
inc
shl
loopne
adc
mov
mov
add
addb
jno
cmp
loopne
repz
stc
sbb
arpl
bound
fistpl
lods
mov
jle
loop
mov
mov
mov
test
loopne
jne
inc
popa
jecxz
and
and
into
adc
jne
jo
shlb
ds
outsb
ja
int
jmp
mov
mov
dec
and
adc
cs
sub
jg
sub
or
adc
and
add
mov
cmp
jb
pop
fst
or
sbb
and
mov
push
jp
cwtl
cmp
inc
cmp
jne
inc
and
sarb
lret
pop
cmp
mov
and
andl
enter
jnp
cmp
rolb
dec
idiv
shlb
enter
ss
iret
popf
pop
sbbl
popf
loopne
in
pextrw
arpl
shl
imull
and
outsl
das
fildll
and
mov
mov
in
dec
xor
jl
add
shlb
push
push
data16
mov
andb
ljmp
mov
shr
mov
dec
pop
jmp
sbb
and
jns
mov
in
ss
fwait
add
cmpb
xor
add
ljmp
ljmp
push
xchg
lods
pusha
add
dec
scas
loopne
push
ss
in
sub
loop
in
roll
inc
sbb
dec
inc
mov
or
shll
mov
jp
or
loop
loope
dec
xchg
mov
cld
les
enter
fwait
ret
pop
inc
push
icebp
xor
loopne
neg
aas
rclb
add
fidivrl
push
mov
loopne
add
loopne
pusha
sbbb
in
sbb
pop
jnp
sbb
and
aas
mov
dec
inc
xchg
add
pusha
jmp
add
addb
cmpsb
shl
xor
inc
and
ficomps
add
inc
gs
lret
and
rorb
shl
int3
mov
pop
mov
rcll
push
adc
mov
jnp
mov
hlt
fwait
andb
add
ret
jge
xchg
jne
out
and
inc
cmpsl
or
addb
lds
jp
mov
shl
push
out
jp
sti
push
imulb
es
sti
sub
in
lea
pop
adc
jecxz
js
cltd
andb
loopne
xchg
outsb
adc
adc
in
add
cmp
inc
pop
pop
or
popa
cmp
inc
pusha
cmp
imul
test
pusha
dec
cld
les
fs
or
aas
out
les
out
add
and
je
inc
repnz
cmpb
orl
fs
sbb
inc
andb
pusha
mov
jle
fnstenv
xchg
and
pop
lcall
add
inc
and
test
fwait
xchg
mov
lret
out
jae
addl
or
and
fcomps
test
ror
push
push
and
mov
fcmove
pop
mov
leave
es
inc
das
pop
mov
mov
and
pop
call
and
lods
in
fdivrl
pop
dec
adc
dec
dec
mov
cmp
push
inc
mov
loopne
pop
sub
fdivrs
and
shlb
inc
aas
push
pusha
rol
aas
lods
lea
xor
fadd
xor
addb
pop
dec
pushl
push
shlb
mov
pusha
rclb
sub
adc
pusha
inc
xchg
test
jmp
shlb
inc
or
add
cmp
push
sti
sarl
inc
cmpl
mov
xchg
mov
loopne
std
xor
test
rolb
or
imul
rclb
and
and
dec
mov
inc
adc
or
push
outsl
outsl
popf
fidivs
das
das
mov
mov
xchg
out
sub
addr16
mov
loopne
movsl
and
inc
push
mov
ret
into
lret
loope
mov
inc
pop
mov
sub
lods
inc
sbbb
mov
sahf
mov
outsl
dec
gs
lock
pop
sub
pusha
jae
pusha
add
movsl
mov
sahf
jg
jge
rolb
aam
push
add
push
push
and
loopne
adc
push
adc
jl
sbb
jp
pop
pop
sub
jecxz
out
jecxz
inc
outsb
dec
xor
pop
ja
xchg
daa
push
loope
out
push
rolb
stos
and
andb
mov
push
adc
xchg
lds
adc
not
pop
inc
jl
jg
inc
adc
ret
pusha
loopne
jl
shl
lds
sbb
cmp
add
mov
nop
out
rorl
add
aaa
out
cs
popf
loop
inc
andb
jg
sub
add
inc
nop
test
mov
out
ljmp
ss
dec
push
xchg
jae
add
add
pop
repz
addb
xchg
inc
add
and
int
push
loope
andb
ds
xchg
mov
sti
jo
out
inc
xor
mov
jne
sub
mov
cmp
mov
adc
jg
outsl
xor
ss
sub
mov
daa
decb
shlb
fs
neg
xor
mov
leavew
icebp
dec
imul
mov
adc
in
stos
les
add
add
mov
xchg
insl
ret
std
stos
jne
push
daa
and
xorb
sub
stos
hlt
imul
dec
pop
cmp
dec
addb
lods
hlt
bound
nop
sbb
daa
cmp
lret
shlb
inc
xchg
aaa
out
push
xchg
jmp
add
cmp
ljmp
add
lret
adc
add
lods
pusha
and
add
or
iret
in
sbb
jl
in
icebp
outsb
pushf
mov
fadd
nop
mov
add
mov
inc
pusha
and
adc
inc
add
lret
inc
je
add
roll
cmp
bound
adc
cmc
mov
loopne
out
xchg
fsubs
mov
inc
loopne
push
mov
add
mov
and
sbbl
xlat
int
faddp
jecxz
and
loopne
and
xor
icebp
jl
mov
test
mov
enter
orb
lds
call
movsb
loopne
and
sub
rolb
repnz
dec
jle
xchg
and
add
roll
loopne
and
pusha
fistpl
mov
incb
notl
or
push
and
andb
loop
pusha
pusha
enter
insl
shrl
mov
cmp
cmc
mov
inc
vpsraw
mov
rol
xchg
insl
in
xchg
hlt
dec
sub
lret
pop
gs
mov
push
sub
pusha
sub
mov
cmpsb
mov
rorl
pop
lods
add
pop
icebp
fsub
repz
mov
loope
dec
jbe
xchg
shl
or
ja
out
outsb
and
inc
and
push
inc
add
iret
or
pusha
insb
data16
xchg
out
mov
dec
jno
addl
and
cmp
in
jg
add
xor
movsb
pusha
inc
lock
outsb
add
pusha
sbb
stos
jno
add
sbb
pusha
mov
and
dec
mov
mov
rol
push
rorl
lock
into
add
pusha
stos
sub
jbe
aas
jns
andb
and
push
inc
and
sub
mov
and
adc
faddl
jns
mov
lods
loopne
aad
pop
aam
sub
cli
xor
hlt
adc
xchg
add
dec
mov
inc
stos
addb
repz
loopne
xor
lods
andb
mov
subb
sahf
jno
test
aas
out
xor
dec
pop
pop
add
cmpb
fs
in
insb
pusha
sub
pusha
mov
lcall
adc
xchg
gs
jg
mul
xor
inc
jae
loopne
xor
stos
and
jb
adc
mov
add
add
addb
repz
sub
adc
mov
icebp
aaa
arpl
sbb
fstpl
push
mov
pop
push
dec
mov
ja
insb
xchg
inc
push
ss
jge
mov
mov
and
sub
inc
imul
rcrb
cmp
jno
mov
add
in
ret
mov
subb
mov
inc
mov
jp
outsb
inc
mov
shrl
sub
sarb
add
push
xchg
adc
mov
loopne
inc
mov
arpl
add
mov
mov
jae
sub
cmp
hlt
mul
cmpl
sbb
push
icebp
inc
lcall
cmpl
mov
xor
mov
mov
lcall
fnop
and
rcrb
ret
fsubs
mov
adc
xor
adc
pop
jmp
notb
rorl
shlb
out
sahf
loope
ss
cmpsb
addb
movsl
js
test
mov
or
add
or
sub
add
or
and
add
scas
in
and
rcr
push
and
jmp
pop
sahf
dec
sbb
push
popf
sub
or
dec
mull
and
inc
mov
mov
mov
and
sbb
mov
mov
scas
mov
pop
lahf
xor
xchg
jecxz
add
xor
adc
shr
lods
dec
repz
xchg
bound
imul
pusha
mov
add
aas
cmp
xor
addr16
lods
in
dec
mov
push
mov
rcrb
rolb
adc
push
rolb
push
sbb
mov
nop
and
mov
xor
lods
and
xor
inc
loopne
fimull
inc
pusha
mov
pop
pop
out
inc
push
mov
in
dec
xchg
xor
inc
jmp
cmp
fs
decb
popa
test
ror
rcrb
jl
push
mov
mov
das
sub
add
push
mov
into
cli
lcall
adc
sarb
inc
ror
testb
adc
iret
lret
int
push
scas
add
jmp
xor
xlat
mov
and
pusha
loopne
test
outsb
mov
addl
pushf
jp
mov
loop
into
fildl
inc
mov
jmp
rorb
jle
testb
push
ficompl
shlb
push
adc
push
jp
sub
mov
and
jle
pop
lret
dec
data16
clc
test
cltd
test
add
add
or
adc
add
les
pop
es
testb
xlat
iret
xchg
subb
cmp
addr16
push
in
daa
fadds
movsl
rcll
das
push
inc
pop
cld
mov
adc
mov
insl
jl
in
push
lret
or
lock
cmpsl
adc
xchg
inc
inc
lahf
pop
xchg
dec
imul
bound
or
pop
inc
or
das
lds
sbb
ret
jbe
and
rcl
push
mov
and
int3
cmpsl
mov
andb
mov
xchg
jg
cli
ja
xorl
cmp
sti
add
loopne
repnz
add
shrb
ljmpw
cmp
dec
lods
loopne
mov
outsb
mov
dec
mov
add
in
or
rcrb
dec
and
add
xor
pop
mov
mov
movsb
add
push
ljmp
dec
out
jge
sbb
out
add
xor
xchg
cmp
push
ds
mov
pusha
inc
decb
sub
and
and
cltd
into
out
xlat
nop
imul
fildll
lock
ss
sub
cmp
mov
inc
jno
cmp
pop
or
and
jg
jae
pop
mov
lret
adc
and
inc
aas
fdivl
pop
dec
and
and
scas
cmp
xlat
stos
jmp
cmpsl
jle
out
bound
inc
loopne
mov
xchg
dec
inc
pop
mov
shlb
hlt
inc
and
mov
out
fcoml
push
inc
mov
cmpsb
pusha
rcl
cmp
adc
pop
loopne
pusha
mov
pusha
add
lahf
pop
add
add
lods
push
sahf
and
mov
adc
mov
aam
out
inc
jecxz
idiv
push
xor
inc
jno
inc
jb
pusha
add
sub
pusha
mov
nop
or
jne
clc
popf
les
mov
dec
mov
loope
in
fmul
mov
addb
xchg
cld
jbe
xor
sbb
and
int3
inc
pusha
jmp
rolb
and
loopne
jne
mov
insl
movsb
add
jno
jo
and
and
mov
sbb
add
mov
add
out
or
clc
call
in
and
sbb
subb
xchg
mov
add
xchg
xor
dec
loop
fadd
negl
fsubs
hlt
out
arpl
xchg
aas
scas
jl
cmp
cmp
sub
jge
jo
in
movsb
add
jle
inc
inc
fisubl
push
in
cwtl
push
fisubl
lret
xor
or
sbb
ljmp
push
fwait
inc
pusha
stos
mov
cmp
inc
inc
mov
sub
call
and
bound
pop
fxch
sahf
into
jecxz
in
inc
mov
andb
daa
cmp
xchg
out
and
xor
fnstsw
inc
mov
mov
adcb
pusha
loopne
mov
andb
cmpsb
inc
mov
inc
ja
fistps
mov
mov
andb
jnp
out
pop
xchg
jl
popf
dec
stos
mov
mov
xchg
inc
outsl
stc
mov
loopne
dec
ss
mov
sbb
lret
cmp
jnp
push
aam
out
adc
nop
sbb
lretw
pop
mov
addb
rcr
xchg
inc
jns
or
outsb
sti
fwait
sub
rorb
loopne
push
les
inc
imulb
and
loopne
rolb
add
jnp
mov
mov
enter
jp
dec
lea
pop
mov
push
jno
lret
repnz
hlt
test
into
pop
mov
inc
add
sbb
cmp
or
and
addb
sti
daa
gs
push
pop
push
xchg
and
sub
inc
and
loopne
mov
and
dec
pushf
fs
pusha
mov
inc
shlb
rorb
call
inc
mov
xor
inc
popa
daa
xchg
xor
loopne
push
out
mov
push
addr16
or
loopne
inc
repnz
fmulp
mov
mov
pusha
inc
jg
inc
pop
inc
xchg
xor
or
xor
or
inc
mov
icebp
inc
dec
adc
into
js
add
xorl
loopne
nop
cmp
loope
push
mov
or
jo
sub
lea
push
inc
imul
sahf
mov
fisttpll
sar
orl
and
inc
mov
or
scas
rolb
mov
mov
out
mov
jae
mov
popf
lods
inc
loopne
jge
data16
rol
andb
pusha
sbb
dec
popa
pop
cmp
pop
mov
ret
sub
loopne
in
test
and
mov
inc
sub
loopne
push
adc
or
mov
add
insb
dec
dec
fld
mov
popf
or
add
dec
or
insb
or
pusha
adc
pushf
xor
movsb
add
mov
lret
loop
lods
add
orb
push
shl
dec
pop
or
sbb
jp
mov
addb
jns
shlb
aam
daa
push
jge
dec
add
subb
cli
addb
lods
cmpsl
and
loopne,pn
push
in
leave
jo
ficoml
out
jb
mov
cld
das
movsb
mov
cmpsl
dec
xchg
test
mov
cltd
in
or
rorl
add
push
and
add
mov
push
lea
nop
fdivp
push
rolb
add
stos
and
pusha
ret
xor
or
popf
mov
xorl
mov
out
push
rorl
fsts
ret
mov
jb
inc
mov
mov
inc
call
movsb
pusha
rcrb
inc
inc
push
ds
andl
repz
aad
decb
rcrb
push
int
popf
inc
outsb
push
dec
in
imul
mov
dec
rdpmc
aaa
push
enter
jmp
shlb
cmpsl
xchg
adc
xchg
cltd
rolb
rol
ja
pop
and
and
cli
mov
or
sbb
pop
or
mov
mov
or
pusha
rorl
shlb
inc
loopne
jecxz
xchg
stc
pusha
cs
in
jae
movsl
fstps
or
jo
outsb
pop
cwtl
pop
mov
aad
xchg
aam
jns
and
outsl
jmp
faddp
je
pop
cmpl
addb
ja
test
cmpl
ficompl
cmp
pop
pop
jo
pop
ds
mov
mov
inc
push
add
mull
sub
and
shlb
es
mov
lret
jmp
and
inc
sbb
lods
jl
mov
in
outsl
andb
jmp
lock
push
inc
cld
add
and
shrb
pusha
push
popa
push
inc
inc
bound
add
mov
and
stc
mov
inc
loop
cltd
inc
xor
leave
cmp
inc
sahf
fs
addb
das
popf
icebp
out
std
xor
loopne
sub
out
add
add
cmp
fistpll
push
inc
andb
in
mov
cli
fmul
movsl
dec
inc
insb
mov
mov
or
xor
loopne
mov
jg
and
enter
shll
lock
test
shrb
test
mov
inc
inc
xchg
mov
in
addr16
sbb
xchg
rorb
inc
xchg
jmp
lock
push
mov
mov
leave
test
loopne
fucomi
pop
jmp
or
addb
faddl
xchg
ds
or
rcrb
into
mov
outsb
xchg
pusha
ret
push
sub
fists
ds
js
and
adc
mov
pusha
in
sub
loopne
cmp
loopne
fdivs
mov
sbbb
je
popa
icebp
in
hlt
mov
xchg
mov
pusha
mov
fiaddl
rolb
add
add
inc
pop
xor
mov
das
insb
in
adc
jb
mov
int3
cwtl
push
pop
push
es
inc
xchg
add
pusha
xchg
sub
loope
pop
popa
xchg
inc
pop
sarl
inc
cmp
mov
cwtl
or
inc
push
cmp
xchg
lret
xor
lods
inc
sar
mov
xchg
daa
pop
pop
push
mov
cltd
xchg
xchg
jbe
pusha
mov
dec
ret
xchg
pop
jle
les
pushl
cmp
in
lods
jbe
mov
arpl
fwait
jmp
xchg
scas
add
and
jecxz
adc
xor
push
jecxz
leave
mov
andb
or
pusha
jmp
std
sub
and
inc
inc
jle
repnz
mov
in
inc
imul
fisttpll
xor
js
outsl
incb
lods
shl
ja
loop
adc
cmp
loopne
mov
shlb
ror
cmp
in
sub
dec
sar
xor
test
and
shlb
sbbb
jae
out
imul
cmp
repz
jo
push
ss
cmpsl
cmpsl
cltd
out
mov
addb
cwtl
sbb
cltd
lret
fistl
jecxz
les
rolb
cmp
cmpb
addb
adc
aad
mov
push
sbb
cmp
lahf
jb
push
loopne
in
adc
xchg
pop
xchg
sti
mov
lods
loopne
add
xchg
xchg
push
inc
shl
pushf
mov
mov
andb
andb
or
aad
dec
jle
pop
ss
es
add
out
push
fsubr
pop
add
mov
test
shlb
xorb
add
fnstcw
add
fisttpll
in
out
xchg
xchg
sarl
cmp
and
and
mov
stos
mov
test
mov
and
add
int3
jns
fimull
pusha
addr16
pusha
cmp
jecxz
or
loopne
dec
jl
shr
sbb
cmp
fcoml
sbb
test
pop
in
test
inc
fstpt
pushf
pop
imul
das
outsl
dec
jne
inc
add
loopne
loopne
rol
dec
rorl
sbb
dec
push
call
in
jbe
fwait
popf
nop
outsl
sbb
adc
add
xlat
inc
pop
out
mov
vfrczsd
test
sub
sub
call
faddl
imul
push
inc
mov
loopne
lods
and
add
andl
xor
int3
sub
xor
cmp
add
pusha
rorb
inc
out
rorl
sbb
in
inc
pop
andl
pusha
mov
rcrb
cmpsb
inc
pusha
lods
inc
pusha
push
and
cltd
cld
add
sub
and
rol
cs
and
push
cmp
sbb
popa
lea
pop
adc
inc
ds
stos
shlb
add
pusha
in
xchg
out
lock
xchg
pop
or
loopne
test
test
xor
inc
cmpb
rolb
mov
mov
and
sub
inc
idiv
cltd
not
rcll
push
fnstsw
jg
pop
fcmovu
cmp
stos
loopne
ss
insl
rolb
xchg
sub
inc
mov
dec
push
xor
jae
cmp
out
cmp
mov
adc
push
andb
inc
mov
sbb
mov
in
je
and
add
stos
loopne
gs
nop
ja
js
cmp
inc
add
and
xorb
mov
mov
add
lods
push
popa
leave
or
lahf
aaa
or
pop
push
pop
outsb
dec
sbb
adc
xor
push
push
out
jge
addr16
inc
push
inc
sub
inc
pop
mov
lahf
mov
pusha
cmp
inc
sbb
xchg
loopne
mov
aad
cmpsl
test
pop
mov
pushl
pop
or
pop
inc
cwtl
add
add
in
dec
gs
push
and
rolb
lret
test
rolb
and
inc
sbb
lret
mov
add
add
sub
pusha
cmp
out
loopne
aaa
mov
leave
in
clc
mov
sub
add
xor
xor
rolb
stc
mov
cmp
loopne
andb
loopne
out
pop
pop
cli
fdiv
sbb
icebp
jo
pop
ret
stos
inc
add
mov
fnstsw
lret
mov
lods
mov
push
ljmp
cld
pusha
jb
adc
les
gs
or
mov
push
lods
loopne
loopne,pn
xor
outsl
sbb
clc
adc
insl
pushf
mov
and
pusha
add
mov
pusha
vpmaxsw
and
push
scas
std
cmp
xchg
mov
test
fs
fiadds
in
aas
mov
add
xchg
aaa
test
fildl
mov
sbbl
mov
and
xchg
aam
lret
stos
shlb
adc
icebp
fisubrs
jg
mov
and
xchg
loopne
xor
insl
rcrl
and
xor
and
xor
hlt
add
subb
popf
filds
mov
stc
js
pusha
rorb
lea
jp
shl
and
jb
sbb
and
pusha
sarb
mov
loope
xor
rorb
inc
rcl
mov
mov
jecxz
jmp
in
or
inc
mov
addb
push
std
sub
jecxz
mov
dec
push
andl
add
sub
fs
rol
dec
cmp
dec
movsb
loopne
loopne
add
cmpsb
add
stos
inc
mov
mov
orb
pop
jne
xor
cli
pushf
dec
pop
jmp
adc
sub
pop
xchg
pop
repnz
adc
lcall
jnp
cmp
add
sti
or
subb
andb
push
aaa
fcomps
mov
mov
test
call
out
add
add
addr16
subb
add
mov
and
sub
adc
sub
shlb
or
adc
xor
inc
std
pop
andl
inc
aam
pop
loopne
loopne
data16
push
pop
je
shrb
add
cltd
aam
add
lods
pusha
andb
out
cltd
or
into
cli
fisttpll
icebp
xor
adc
loopne
shlb
cmp
jbe
mov
shrb
loopne
and
lods
inc
add
xor
inc
mov
and
add
in
jge
in
xchg
clc
andb
js
repnz
movsb
loopne
inc
cmpsl
add
shlb
and
inc
mov
pusha
pop
sbb
adc
movb
jge
filds
dec
mov
jns
cmp
nop
leave
cld
mov
add
shlb
add
leave
and
loop
nop
push
push
add
pop
insb
sub
dec
and
and
andb
sub
inc
mov
add
mov
sub
mov
ss
ret
pop
push
sbb
pop
ror
iret
jae
sbb
addb
sub
cmpb
add
sbbb
and
mov
pusha
or
push
mov
imul
pusha
xor
sti
mov
add
sbb
dec
mov
and
rolb
cmpsl
pop
sub
pusha
sbb
or
nop
lcall
cmc
fwait
aaa
das
rorb
aad
ficoml
xchg
inc
scas
das
ror
jmp
fnstsw
mov
mov
aas
sahf
scas
into
add
cmp
out
mov
mov
ret
push
movl
outsb
dec
aad
mov
in
pop
fcoml
lret
decl
inc
pusha
xchg
cmc
test
and
ret
pusha
pusha
call
fimull
mov
pusha
sarb
pusha
xor
jl
xchg
inc
das
arpl
lea
cs
and
mov
or
lret
fstps
loopne
pop
test
mov
sbb
pop
gs
lods
addb
pop
mov
and
mov
andb
push
push
add
outsb
mov
mov
rol
pop
pop
fisubs
rolb
call
adc
stos
add
fnstcw
fsubrp
decl
js
lods
mov
and
add
loope
shl
sahf
aaa
lcall
outsl
mov
fwait
popf
ds
xchg
loopne
push
and
aaa
fisttps
shlb
dec
aam
pop
sbb
aam
lods
cmc
aaa
sarl
xchg
lea
loopne
fwait
jbe
lods
and
fwait
sbb
movsl
pop
ljmp
cmp
repnz
or
int3
push
cli
shl
jg
push
jb
aaa
inc
or
mov
shl
in
shlb
out
lret
xor
in
cmc
stc
mov
mov
jecxz
sbb
inc
pop
pushf
roll
cmp
ret
les
xchg
pop
popf
insb
sarl
jmp
cmp
inc
lret
lods
outsb
aaa
jl
jno
rcl
sahf
gs
nop
mov
cwtl
inc
scas
inc
loopne
addb
hlt
mov
test
and
push
decl
or
push
inc
adc
jno
sbb
mov
inc
push
cmp
sub
sbb
adc
mov
pusha
std
pop
pop
inc
xor
xor
out
jno
mov
loopne
push
mov
iret
aaa
xchg
movb
mov
inc
aad
adc
mov
cwtl
gs
mov
xchg
das
dec
shr
jge
repz
sub
cmpsl
pop
pop
into
data16
pusha
pop
mov
loopne
and
xchg
inc
leave
rolb
addr16
loopne
ss
int
int3
and
sbb
in
fimull
pop
outsl
jp
sti
lret
pusha
push
sub
dec
or
inc
sub
cmp
xchg
add
mov
movsb
and
outsl
mov
rcr
shl
mov
mov
addb
adc
pop
sbb
push
dec
ret
and
inc
and
add
xor
inc
pusha
test
add
in
fcomps
repnz
fisubl
int
fcomps
inc
in
gs
pusha
pusha
mov
jecxz
js
adc
mov
cs
andb
fwait
adc
rol
pushf
push
xchg
loopne
lcall
jmp
dec
rorl
in
in
cmpl
cmp
in
int3
cmp
pusha
mov
mov
pushf
and
and
pop
int
iret
xchg
ja
jge
jno
movsb
and
loopne
cld
mov
cmpsb
and
cmp
test
inc
push
or
out
dec
outsb
popf
push
mov
rorb
pusha
jmp
and
shlb
shlb
mov
std
out
scas
pusha
add
cmpsb
addb
and
and
mov
cmp
inc
sti
loope
mov
sub
shlb
mov
inc
mov
pusha
add
cwtl
imul
rorb
pusha
jbe
pop
push
outsb
imul
and
adc
xor
inc
sbb
adc
mov
pusha
push
push
lods
jge
mov
pusha
orb
cmp
pop
ds
push
std
jecxz
pop
stos
add
mov
pusha
pusha
adc
in
mov
js
addb
lds
mov
loopne
jo
cmc
fmull
jns
cmp
out
lea
mov
addb
push
fstpt
add
clc
call
and
insb
cmc
jle
loop
rcll
mov
bound
pop
rcll
cmpsl
jl
cwtl
aad
out
and
pusha
popf
and
loopne
xchg
mov
pusha
shrl
test
xchg
cltd
into
mov
mov
dec
notb
dec
xor
mov
scas
pusha
add
in
pop
jbe
and
mov
jb
adc
outsb
lret
ss
adc
sbb
cmp
sbb
push
sbb
mov
mov
andb
mov
out
inc
jp
aam
xchg
jmp
and
xor
xor
pop
lret
into
xlat
pusha
adc
push
adc
fisttps
shl
adc
and
fs
sti
dec
sti
hlt
movsb
inc
adcb
pusha
mov
mov
and
pusha
pusha
enter
jbe
imul
or
pusha
cld
hlt
or
fs
inc
mov
iret
test
cmpsb
add
jl
repnz
jno
dec
ffreep
cwtl
arpl
pop
add
dec
mov
fidivl
push
rol
imul
rolb
adc
and
ret
ret
xchg
cmp
outsb
pop
repnz
scas
addb
xchg
gs
jecxz
loopne
lods
faddl
shll
aam
mov
std
je
in
daa
nop
push
pop
mov
bound
repz
add
addb
jb
cmc
cld
mov
adc
and
jb
push
xor
sahf
gs
inc
je
dec
punpcklbw
in
rclb
pusha
sahf
mov
mov
ljmp
xchg
sbb
xor
dec
sbb
enter
in
jnp
out
sbb
fldcw
mov
insb
mov
in
cmc
dec
cs
inc
inc
idivl
jge
push
push
rcrb
lret
fsubl
stc
rolb
cmp
jb
rolb
pop
movsb
pusha
inc
daa
push
mov
adc
mov
aaa
sbb
mov
icebp
dec
add
shlb
std
pop
test
js
call
or
leave
mov
pusha
repz
lds
and
cmp
and
mov
push
aas
dec
mov
call
xor
andb
daa
enter
xchg
dec
gs
sub
mov
test
dec
or
aam
mov
loopne
sete
fistpl
int3
in
lods
pusha
and
and
adc
std
movsb
and
inc
pusha
call
jb
outsl
andb
cld
sub
sbb
mov
jae
scas
and
pop
lcall
pop
xchg
mov
rolb
test
mov
push
push
btr
rclb
xor
andb
popa
adc
jecxz
cmc
icebp
popa
test
loopne
or
adc
rorb
mov
mov
mov
sar
sbb
daa
in
sbb
aad
and
jo
lret
xchg
mov
shlb
shlb
lahf
clc
adc
jno
movsb
andb
and
out
mov
pusha
in
pop
mov
test
loopne
addb
stos
mov
pusha
sbb
inc
rclb
or
push
and
int3
lea
mov
lcall
mov
or
idivl
sbb
in
lahf
sub
push
xchg
xor
jbe
js
adc
xlat
inc
es
mov
out
repnz
dec
and
loopne
cmp
lea
mov
mov
out
push
lahf
clc
pusha
xchg
sub
xchg
adc
adc
lods
cwtl
movsb
mov
mov
mov
push
pop
insl
lds
cmp
aas
xchg
aas
push
inc
mov
rol
or
and
inc
fs
dec
pop
mov
sbb
das
int
div
cmp
loopne
sub
and
mov
push
jo
and
mov
mov
cmp
rorl
cmp
insl
scas
andl
aas
dec
mov
daa
aas
inc
push
mov
mov
and
xor
sbb
mov
shlb
cmc
in
jg
xchg
add
mov
cmp
popf
inc
leave
iret
dec
fs
fistps
add
adc
insl
js
cmp
in
push
jno
ja
jg
in
mov
add
sbb
rclb
ds
or
add
dec
sub
pop
lret
and
mov
mov
stc
lds
notb
inc
adc
cmp
sbb
fwait
and
cmp
mov
cs
inc
ret
sub
sub
pusha
leave
or
shrb
mov
xchg
add
inc
aaa
mov
jo
stc
rcll
pop
stos
xchg
sahf
pusha
fwait
inc
aas
dec
lea
adc
sbb
popf
jmp
popa
aaa
shrb
inc
mov
loopne
push
sub
pusha
loop
inc
js
mov
inc
mov
pusha
stos
mov
pusha
sarb
test
andb
sub
and
pop
adc
into
xchg
inc
aam
pop
adc
mov
jae
jae
mov
pop
sbb
jp
and
loopne
xchg
jecxz
sub
sub
ror
fidivl
jne
mov
data16
cmp
or
andb
std
repz
and
pop
sbb
loopne
addb
or
loopne
dec
mov
cmp
clc
enter
dec
add
mov
andb
ret
fwait
adc
outsl
jmp
test
clc
xor
or
imul
in
mov
lods
inc
add
test
mov
adc
mov
rcll
daa
stc
int3
test
pusha
sbb
xchg
mov
shl
push
xlat
xchg
mov
push
pop
add
inc
jle
inc
pushf
mov
popw
sbb
adc
jp
mov
add
sub
pop
jae
inc
dec
sub
mov
clc
xchg
pop
sbb
push
mov
dec
sub
sbb
data16
adc
sahf
xchg
jl
inc
dec
fwait
aaa
sbb
loope
mov
xor
rorb
adc
pop
dec
ds
xor
movsl
xor
mov
pusha
test
push
mov
and
add
sahf
nop
out
xor
xchg
mov
inc
and
outsb
mov
mov
loopne
es
mov
and
insl
in
mov
sahf
jae
leave
in
sub
pusha
aam
and
inc
test
mov
js
std
movsl
fdivrl
mov
js
outsb
aas
xor
ret
fcomp
pop
mov
cmp
das
dec
jmp
xor
stc
insl
pop
out
mov
scas
xchg
pusha
and
mov
enter
fcomps
sbb
cmp
cli
pop
jae
jmp
sub
fptan
mov
lods
mov
mov
outsb
adc
adc
add
fdivs
addb
cwtl
divl
jmp
mov
push
add
inc
loopne
mov
orl
loopne
pusha
and
lret
adc
mov
shlb
mov
les
outsb
sub
and
fiaddl
dec
jmp
jno
shlb
loopne
mov
lods
sub
in
loopne
aas
pop
lock
movsb
loopne
testb
orb
inc
mov
dec
in
xor
mov
jnp
add
jnp
lahf
xchg
insb
mov
pop
lret
insb
mov
insb
cmp
repnz
xchg
gs
inc
imul
andb
sub
inc
jl
rolb
mov
add
and
add
fcmovnbe
and
add
adc
incb
loopne
iret
dec
pop
sbb
rolb
mov
mov
out
push
mov
add
mov
loopne
pop
xor
shlb
pusha
jp
sbb
mov
xchg
loopne
rcrl
pusha
shlb
fxch
xor
pusha
pusha
xor
add
inc
movsb
loopne
fcomps
and
outsl
sub
mov
add
inc
lcall
pop
cmpsl
les
fs
arpl
mov
orb
mov
and
lahf
adc
loopne
dec
stos
rolb
mov
sti
inc
lock
sub
push
ss
cmp
lock
dec
adc
mov
mov
fwait
jmp
mov
shr
mov
insl
insb
xor
popf
pop
scas
shlb
jmp
rcrb
push
mov
mov
push
and
loopne
add
pop
jo
rorl
test
lods
test
pusha
add
jae
cmpsl
fwait
aad
jns
rolb
test
inc
leave
cmc
or
and
and
imul
cltd
mov
pusha
or
mov
pusha
sarb
ss
lock
addb
mov
sub
push
or
add
lods
inc
and
sub
xorb
add
sub
xchg
aam
lods
push
add
add
inc
into
sti
mov
rolb
pop
mov
pxor
push
shlb
gs
rolb
pop
in
jbe
push
pushf
hlt
jp
cwtl
dec
xchg
lret
mov
add
inc
popf
lea
hlt
sbb
les
push
jno
sub
rorb
inc
and
cmp
sub
cmp
and
test
and
add
mov
fnstsw
and
add
sbb
mov
add
fsubs
fldt
adc
and
shlb
clc
cltd
in
mov
mov
mov
mov
jmp
cmpsb
rolb
enter
lods
mov
rolb
add
shlb
aam
add
inc
sub
mov
adc
sbb
inc
add
jmp
pop
jecxz
outsl
mov
shlb
test
and
push
dec
pop
pusha
aas
inc
mov
loopne
and
pop
mov
test
xchg
push
push
addb
push
or
sar
cwtl
fsubrs
cli
sub
andb
xchg
mov
jecxz
je
fistps
adc
sbb
imulb
inc
mov
rorb
add
cmp
push
inc
orb
add
daa
adc
rol
rorl
pop
pop
inc
dec
adc
adc
xchg
sub
scas
mov
add
bound
sbb
mov
mov
sarb
shlb
or
and
mov
scas
pusha
subb
pusha
add
shrb
dec
push
test
fnstsw
xor
mov
fcomps
pop
push
in
fcomps
mov
and
and
das
dec
pop
out
popa
xorl
jle
mov
arpl
and
xchg
out
repz
pushf
push
inc
orb
arpl
dec
mov
xchg
dec
inc
loopne
sarl
dec
es
pusha
cmp
fnclex
out
int3
sub
int
aad
and
mov
push
out
mov
pusha
add
mov
sbb
lods
loopne
pop
mov
mov
dec
in
pop
and
and
and
jae
mov
bound
loopne
push
dec
jg
push
lret
adcb
push
lret
push
xacquire
loopne
mov
ja
nop
clc
mov
adc
add
fisubrs
ret
mov
add
and
pop
cmp
mov
mov
mov
dec
jmp
ret
xchg
adc
push
popf
sub
and
loope
fisttpll
jb
loop
lcall
ds
jne
jg
shlb
add
cwtl
inc
lret
fiaddl
out
mov
insb
fstpl
shr
jmp
enter
mov
loopne
mov
add
shll
pusha
and
loopne
fisttpll
mov
mov
inc
call
faddl
lret
test
add
inc
loopne
push
add
mov
dec
pop
pop
rorl
pushaw
insl
das
dec
loop
sti
pop
out
loopne
out
dec
dec
mov
add
cmpb
addb
pusha
nop
sub
xor
pushf
in
mov
sar
adc
mov
inc
shrb
dec
and
inc
pusha
jl
mov
pop
cli
sbb
mov
add
and
inc
mov
and
shl
push
jno
test
mov
loope
je
jl
call
jg
and
inc
rol
pushl
out
pushf
pop
pop
sar
jge
cmpsb
loopne
in
mov
repnz
and
rcrl
push
jmp
push
fcompl
ficoms
xchg
in
mov
call
out
js
loop
xor
inc
sub
dec
aas
adc
movsb
add
lahf
add
lea
jb
je
mov
jecxz
enter
jle
mov
push
and
mov
stos
mov
inc
inc
adc
push
inc
pushf
fisttpll
jl
or
jle
inc
leave
jecxz
incb
pop
fldcw
mov
sbb
push
jp
dec
jmp
dec
fmuls
add
inc
lret
loop
mov
bound
and
std
push
jne
scas
add
rorl
or
shlb
loopne
mov
push
cmp
adc
xor
sbb
dec
mov
cs
rcrb
push
js
mov
mov
lea
xchg
mov
shlb
mov
insl
mov
mov
and
fistpll
sbb
add
push
pusha
loopne
loopne
imull
mov
arpl
xchg
in
fs
cmp
pop
imul
in
xlat
adc
addr16
in
les
gs
lcall
sub
adc
movsb
add
add
sbbb
mov
add
inc
inc
aaa
pop
aad
and
mov
loop
cli
pop
jo
cmp
add
addb
arpl
out
fwait
inc
xchg
rclb
mov
jmp
nop
iret
xlat
mov
pop
not
inc
pop
sbb
inc
iret
test
mov
mov
xchg
test
xorb
pushf
mov
aam
andb
cmp
test
ja
fwait
sbb
rcl
xor
xor
das
mov
sar
adc
test
sbb
shlb
add
movsl
leave
mov
ja
jmp
pusha
aaa
jecxz
ja
xor
cmp
shrb
pusha
xorb
nop
push
inc
outsl
or
rolb
insl
ljmp
repnz
cmp
inc
pusha
sub
and
dec
sbb
inc
subb
mov
cmpsb
pusha
sbbb
loopne
xor
loopne
push
psraw
iret
inc
add
mov
rolb
add
cltd
dec
pop
data16
or
xor
repnz
fisubrs
xor
fadds
mov
xchg
xchg
sbb
add
pusha
fwait
and
mov
and
and
push
dec
inc
dec
movsl
js
xchg
inc
lock
push
cmpsb
mov
push
out
jnp
push
and
and
add
cmpb
stos
add
and
fs
add
and
and
scas
bound
hlt
mov
xchg
adc
sbb
add
and
in
mov
mov
jae
mov
pusha
movsl
and
inc
mov
fnstenv
pusha
pusha
int3
jg
aam
xlat
cmc
inc
sub
and
in
jl
add
dec
fnstsw
add
add
sbb
cvttps2pi
xchg
inc
sub
loopne
and
pop
add
inc
testl
fcmovu
inc
out
push
push
iret
lret
ja
lcall
mov
add
add
pop
lahf
sub
mov
add
inc
pop
sub
loopne
loope
and
push
insb
or
sarl
mov
pop
inc
hlt
jmp
cmp
test
xorb
or
xchg
mov
cmp
lret
scas
xor
xchg
mov
push
jmp
bound
shl
stc
sbb
orb
adc
cmp
aad
in
rcl
andb
dec
adc
repnz
xchg
push
sti
cmpsl
test
loop
sub
add
add
pusha
xlat
inc
fldl2t
into
js
sbb
push
jl
push
rclb
rep
addr16
addb
add
sahf
mov
mov
or
adcb
mov
add
dec
shr
lret
aaa
inc
test
stc
leave
scas
mov
mov
out
rolb
add
rolb
dec
loope
pop
cmpsb
mov
push
add
pop
test
andb
mov
jae
repnz
mov
ret
lods
inc
add
rcrl
jnp
loope
lahf
lret
lea
lea
in
insb
pushf
cmp
sbb
inc
shrb
xor
sarb
sub
add
adc
shlb
cmp
sbb
rclb
cmc
xor
pushf
jmp
cmp
jecxz
fnsave
push
shlb
js
dec
mov
testl
jmp
xor
loope
pusha
mov
mov
xlat
pushf
mov
jl
mov
jg
and
add
pop
mov
jno
movsb
add
cwtl
divb
lret
out
gs
mov
loope
fidivrl
add
das
push
jb
or
push
pop
mov
pop
adc
jb
pop
stos
loopne
jp
pop
push
cld
sub
and
lods
xor
orl
add
and
shll
rol
pop
xchg
mov
mov
jp
xchg
push
mov
shrb
ljmp
andb
faddp
inc
aaa
push
fwait
cli
test
loopne
xchg
repz
or
std
pop
mov
add
fists
in
in
and
loopne
mov
hlt
movsb
pusha
shr
addb
je
in
push
rolb
pusha
loopne
add
xor
add
jbe
loopne
pop
jb
fwait
push
shll
push
inc
scas
inc
and
leave
test
loopne
cmpsl
mov
push
lods
sub
shlb
mov
inc
or
dec
scas
xchg
orl
imul
aas
test
and
and
shrb
and
stc
add
inc
mov
int
jge
shl
jp
mov
xorl
iret
pop
loop
cmp
pop
push
pop
adc
mov
andb
inc
addb
loopne
inc
xor
and
mov
lock
push
pop
scas
mov
push
dec
fists
push
jae
in
lar
movsl
or
mov
loope
mov
shlb
loopne
add
xchg
push
jecxz
add
jmp
sub
sub
loopne
push
xlat
mov
add
add
in
xchg
dec
pop
jle
and
and
adcb
int
aam
jnp
jge
out
call
mov
mov
fwait
lods
mov
loopne
in
pusha
cmp
xchg
sub
movsl
fbstp
or
adc
dec
xor
loope
mov
ror
adc
xchg
cli
loop
push
movsb
and
mov
sub
and
or
add
xchg
in
into
test
and
mov
add
imul
pusha
xchg
xor
iret
jecxz
and
mov
loopne
sti
xchg
xchg
stos
out
test
mov
dec
lods
int
outsl
dec
bound
sahf
leave
mov
adc
lret
ja
lock
sti
fstp
sbb
xchg
xor
jns
lahf
pop
add
mov
stc
push
ret
out
outsb
ljmp
add
rorb
call
loope
nop
pushf
inc
adc
push
gs
iret
push
data16
insl
push
and
and
add
testb
xchg
dec
and
andb
ret
jne
das
or
pop
ret
fwait
lahf
pusha
jg
stos
add
daa
in
pusha
and
lods
and
sarb
push
and
and
ja
lock
inc
sahf
and
pushf
dec
ss
inc
jo
pop
mov
mov
xchg
decb
mov
add
and
add
popa
or
fs
lods
add
mov
add
fwait
loope
outsb
or
mov
fadd
testb
push
shlb
push
pop
jle
mov
push
cmp
addr16
and
dec
in
adc
call
xchg
jge
and
movsb
mov
arpl
loopne
iret
mov
push
repnz
mov
jbe
addb
aas
stos
les
lcall
add
mov
mov
inc
mov
mov
pusha
add
jnp
jno
inc
int3
bound
push
push
ja
xor
jl
pusha
and
xchg
adcl
pusha
fwait
daa
inc
mov
shl
lret
sbb
loopne
stos
pusha
add
or
dec
lock
fs
mov
add
lret
jne
loopne
sbb
push
std
dec
or
jle
and
and
add
and
pushl
xor
movsl
push
pusha
and
inc
fsts
movsl
mov
sti
inc
sbb
fistl
xor
push
xlat
leave
cmpl
pop
mov
and
scas
mov
lret
jge
mov
xor
lods
mov
daa
mov
and
xchg
pop
scas
shlb
mov
or
iret
imul
das
loopne,pn
inc
lahf
mov
pusha
xor
xor
sbb
add
fucomi
inc
adc
dec
jp
adc
jae
xchg
frstor
call
call
and
andl
push
jg
insl
imul
xchg
xorl
sub
shr
lcall
sub
scas
add
mov
pusha
push
andb
clc
data16
sub
inc
sbb
ret
dec
adc
cmc
sar
jge
add
adc
stos
cwtl
mov
lea
loopne
jl
xor
add
add
xor
or
inc
and
mov
ljmp
cmpsb
add
inc
pusha
xchg
inc
pop
pop
xchg
mov
shl
int3
ds
enter
bound
mov
pusha
pusha
mov
mov
cmc
cmp
imul
out
test
jb
or
inc
mov
outsl
jae
jnp
out
adc
add
adc
int3
push
sahf
mov
loopne
inc
adc
ret
mov
cld
sbb
test
and
pop
mov
or
pusha
loopne
mov
addb
dec
in
add
je
addb
nop
jns
mov
inc
sub
and
stos
and
lret
ds
adc
gs
test
add
rcll
mov
test
mov
mov
push
cwtl
dec
cmpsb
rolb
cli
mov
dec
dec
inc
xchg
xchg
repz
popf
pop
or
loopne
or
add
fiaddl
jp
or
or
ret
mov
inc
mov
div
pop
add
pop
jne
jbe
xchg
dec
jl
inc
loopne
mov
mov
jae
xlat
iret
push
das
lea
loopne
cld
fistpl
notl
das
loope
les
and
loopne
fidivl
mov
fstl
imul
pusha
mov
rolb
idiv
mov
inc
add
dec
dec
inc
sbb
pop
adc
les
loopne
ja
andb
jl
out
daa
xchg
inc
and
cmp
sbb
push
sti
test
sarb
xor
jbe
loopne
adc
mov
shl
pop
sbb
pop
add
xlat
icebp
push
rcrb
into
sti
sbb
js
pusha
and
mov
sub
loopne
in
cmp
adc
cld
or
rorb
das
fists
loope
xor
gs
fisubl
jbe
pusha
mov
push
pusha
rolb
pusha
fwait
pushf
movaps
or
xlat
sti
mov
and
and
out
push
jo
in
mov
add
test
loopne
int3
cmp
loopne
mov
mov
xchg
or
mov
sbb
fimull
test
xchg
repnz
fsubrl
pusha
icebp
xchg
lea
insb
add
mov
ss
in
je
scas
and
mov
xor
xchg
mov
jbe
xchg
add
icebp
fcomi
fistpll
inc
jle
jb
xchg
jbe
mov
xlat
push
pusha
and
dec
mov
push
fs
xchg
and
inc
inc
or
xchg
insb
pusha
mov
divl
out
test
and
adcl
inc
or
loopne
pop
sbb
jnp
sub
mov
add
subb
inc
mov
pusha
loopne
adc
sbb
xor
aad
adc
shlb
lcall
sbb
and
push
rolb
push
aas
mov
aaa
mov
imul
pop
push
sbb
add
incl
inc
pop
jl
dec
inc
imul
pusha
pusha
pushl
push
inc
mov
inc
sbb
ss
mov
loopne
push
add
data16
aad
mov
sub
pop
jecxz
sbb
xchg
stos
shlb
inc
or
inc
mov
loopne
sbb
mov
xchg
mov
jge
sub
rcl
xchg
or
popf
movsb
mov
sbb
fwait
sbb
fnstsw
and
rcrb
inc
xor
mov
ja
roll
cmpsb
loopne
cmp
fadd
dec
add
dec
int3
in
pop
adc
sbb
mov
dec
mov
dec
jnp
idivb
shll
andb
shl
cmp
sub
mov
lods
rolb
pop
mov
pusha
jo
int
inc
and
push
loopne
jge
mov
into
pop
sahf
pop
xchg
adc
push
add
or
xchg
xchg
xlat
cmp
mov
test
mov
rcr
mov
jl
cltd
scas
xor
adc
inc
loopne
call
in
andb
pushf
mov
dec
jne
fistl
mov
repnz
in
dec
jno
push
andb
popf
mov
imul
pusha
sarb
stos
addb
cli
mov
mov
xchg
rcr
pop
or
shl
sub
cmpsl
rol
shr
adc
xchg
add
insb
push
dec
in
repnz
scas
sarl
or
sbb
addb
sub
inc
pop
adc
movsb
and
shrb
mov
addb
rcrb
mov
loopne
xor
lahf
dec
pop
aaa
int3
fs
lahf
scas
pusha
add
jl
rol
fdivr
mov
dec
push
add
mov
xchg
jnp
shlb
test
mov
popf
adc
add
sbb
xchg
pop
pop
ja
or
xchg
push
jno
lods
shlb
fistl
out
cmpsl
loopne
jnp
push
xor
pop
andb
sbb
mov
insl
mov
rcl
test
and
hlt
ficoms
addb
pushl
inc
inc
fnstenv
pop
xchg
mov
loopne
or
fidivrs
sbb
ja
andb
dec
and
lret
cld
cmpsb
rolb
mov
pusha
and
xchg
cmp
mov
inc
shrb
inc
and
push
call
cld
jmp
cmpsb
mov
aad
pushf
enter
and
mov
jb
rol
das
js
xchg
xchg
add
dec
cmp
pusha
lock
inc
sbb
rolb
xor
imul
filds
and
pushf
es
jge
lret
jne
cmpsl
push
bound
shlb
ja
in
popa
xlat
lret
xor
rolb
rcrb
push
stos
lock
mov
cmp
pusha
aaa
sbb
mov
enter
push
add
loope
mov
repz
ds
mov
ja
dec
jl
lods
jg
dec
aas
jle
test
rolb
sbb
fwait
lods
add
aas
aas
sbb
and
lcall
sub
cmpsl
dec
imul
test
enter
pusha
int
pop
subl
pushf
ficomps
sub
xchg
std
cmp
pushf
aad
mov
jp
push
addb
push
mov
inc
iret
scas
mov
push
inc
rcrl
lahf
scas
or
cmp
inc
inc
inc
push
pusha
or
xor
mov
add
mov
shr
cli
cmp
subl
mov
out
mov
and
sbb
mov
and
bound
sub
inc
and
cltd
jp
gs
jmp
jp
fcomps
out
popf
xor
es
inc
mov
subb
adc
testb
addr16
sbb
xchg
fs
repnz
sub
inc
push
movsl
mov
inc
ss
push
sbb
loopne
fistps
add
pusha
fisttps
pusha
and
inc
push
xlat
push
xchg
jecxz
imul
adc
fidivrl
dec
xor
imul
xorl
scas
add
cwtl
sub
mov
mov
cmp
dec
mov
ffreep
sbb
xchg
nop
flds
push
xor
fidivl
loopne,pn
in
fwait
pop
push
lods
push
sub
fsubrs
lret
add
cmp
pop
sub
xchg
insb
addb
je
imul
fwait
xchg
fsub
xor
imul
push
lret
push
int
jmp
fbstp
dec
outsb
in
push
loope
push
call
mov
inc
rclb
dec
call
inc
mov
addr16
sub
add
add
lret
sbb
sbb
mov
std
and
orb
shrl
inc
jno
pusha
loopne
sbb
dec
cmpsl
sub
push
loop
in
loope
jne
fwait
mov
fdiv
sbb
rorb
loopne
idivb
inc
das
test
cmp
rolb
pop
stos
mov
inc
jecxz
ret
int3
sbb
cmp
mov
imul
enter
and
mov
loopne
pusha
loopne
or
cmpsb
addb
mov
mov
mov
xchg
iret
sub
and
jmp
repnz
inc
out
ljmp
sahf
jle
shrl
aad
dec
in
add
cmp
inc
rcl
jnp
mov
xorb
lea
add
pusha
cwtl
adc
add
daa
xchg
in
or
add
mov
mov
shlb
dec
pushf
pop
inc
jns
pushf
popf
push
inc
adc
pop
mov
jne
gs
adc
jne
push
fimull
ja
pop
mov
rcrb
fwait
dec
fmul
add
loopne
hlt
rcrl
mov
dec
sbb
cs
sub
jmp
pushf
fsubr
xchg
xchg
cmp
xchg
test
add
inc
aas
fiadds
subb
movsb
and
add
fwait
dec
push
mov
push
xchg
sub
loop
sub
rcrb
pop
sbb
scas
rolb
jecxz
call
adc
mov
mov
popa
jecxz
sti
ficoms
in
cmp
aaa
xor
or
fnstenv
add
push
xchg
and
rolb
jbe
shlb
push
jg
es
cld
pop
ljmp
add
and
ror
mov
shl
clc
inc
lods
pusha
adcb
loopne
sub
outsl
cmc
xorb
cmp
mov
dec
mov
and
mov
std
in
sbb
inc
sub
mov
and
add
and
nop
cmp
lods
pusha
xchg
sbb
call
popf
hlt
adc
xchg
out
jae
cwtl
or
outsl
aam
mov
and
lret
sub
icebp
in
pusha
mov
subb
mov
fldcw
and
mov
and
xchg
imul
sub
popa
and
lea
shl
aam
inc
jl
xchg
sub
adc
pop
mov
cmp
sarl
mov
iret
mov
arpl
pop
push
pushf
mov
lods
pusha
inc
lcall
mov
rorb
mov
add
sbb
dec
ss
iret
xchg
scas
lea
and
pusha
xor
pusha
loopne
lock
shlb
call
rcrl
popf
sahf
jns
xchg
push
dec
cmpsb
mov
rcrl
mov
push
sub
inc
sbb
push
loopne
or
push
sub
and
jno
subl
ret
cwtl
inc
sub
repnz
scas
pusha
pusha
ds
push
xchg
das
pop
mov
add
mov
inc
mov
cld
hlt
pop
mov
in
and
mov
push
add
subb
and
adc
stos
inc
add
aas
dec
stos
loopne
rclb
sbb
cmp
add
lods
dec
ljmp
into
enter
and
or
push
jl
mov
mov
arpl
jp
xchg
mov
inc
sbbb
and
adc
fwait
xchg
outsl
mov
push
mov
rcl
arpl
inc
push
jae
or
mov
mov
inc
sbb
into
push
fwait
notb
inc
mov
jo
int
aad
xchg
imul
inc
rclb
sbb
daa
xlat
mov
andb
into
fstpl
in
ret
andb
cmovae
mov
add
inc
rorb
add
cmc
jns
adc
mov
and
add
loop
jmp
addb
cmp
add
pusha
jne
loopne
repz
lret
repz
pop
icebp
xor
jae
fildll
and
and
data16
mov
sbb
push
jmp
push
dec
jl
sub
fwait
out
scas
pushf
les
dec
push
inc
loopne
bnd
mov
out
jno
mov
ljmp
ret
mov
mov
xchg
and
loopne
mov
or
fists
pushaw
add
pop
dec
shlb
mov
and
mov
jo
push
jecxz
mov
enter
mov
rorl
sahf
mov
add
sbb
addb
mov
fdivrp
dec
sbb
out
fs
rolb
mov
je
inc
das
mov
mov
out
lcall
jmp
das
xchg
pop
mov
movl
rolb
add
mov
jbe
pop
cmp
dec
addr16
rolb
ret
addl
pop
adc
xor
push
jne
jle
jnp
inc
add
sub
dec
mov
iret
adc
sar
ret
popa
cmp
ret
ss
vunpckhps
xchg
int3
inc
xor
mulb
jo
jp
jp
jne
jbe
and
xchg
or
mov
dec
dec
shrb
and
dec
jg
mov
inc
mov
pop
mov
in
in
jae
cmp
int3
in
add
add
nop
daa
aam
jge
xchg
inc
test
and
jb
rcrl
add
cmp
pushf
pop
push
cmp
pop
sbb
testl
and
mulps
js
lcall
insl
les
aam
popf
xchg
adc
sbb
js
fcmovbe
adcl
sbb
jae
adc
add
int
dec
leave
cmp
dec
mov
rcr
cmp
into
leave
pop
xor
jo
fs
adc
test
mov
rolb
cmpsb
add
ret
and
xor
push
pop
mov
ljmp
cmc
arpl
movsl
popf
mov
and
ja
sbb
daa
fldenv
rol
or
shl
inc
mov
pop
rcrl
loopne
fs
pop
daa
fs
and
pop
cmp
adc
mov
lcall
mov
push
and
mov
pop
jbe
scas
shlb
fsubrl
or
mov
je
dec
lods
pusha
shlb
orb
loopne
repnz
shlb
and
mov
shrb
pusha
pop
repnz
sub
call
push
aad
dec
fsubp
or
ss
out
push
into
imul
cmc
xor
dec
daa
repz
aaa
mov
xchg
lds
sahf
test
scas
xor
xor
sub
jge
jno
pusha
rolb
and
mov
inc
outsl
adc
mov
movsb
pusha
sub
mov
cmp
shlb
lret
xlat
nop
adc
das
stos
inc
mov
cmpsb
and
js
bswap
mov
jmp
mov
nop
hlt
int
mov
inc
sahf
or
loopne
cmp
loopne
sub
or
sbb
aad
and
lret
mov
dec
cwtl
add
and
pusha
pusha
mov
pusha
xor
sbb
fs
inc
mov
ja
inc
mov
fistps
mov
fidivrl
cwtl
push
ljmp
pusha
and
rep
jb
push
andb
cwtl
xchg
add
inc
outsb
adc
mov
pop
mov
adc
mov
pop
sub
sbb
loop
xchg
and
mov
add
xchg
mov
enter
lcall
inc
add
ljmp
ret
xchg
xor
test
jmp
add
sub
xlat
insb
inc
in
mov
rol
stos
or
loop
xchg
call
lods
shrb
mov
rcrl
adc
dec
imul
sbb
addb
sub
pushf
mov
inc
adc
jg
push
or
xchg
mov
fiadds
xlat
pushf
and
cmp
fwait
popa
jno
andl
jne
andb
or
mov
loopne
sbb
sarl
xor
ja
mov
test
or
inc
mov
add
jo
add
sub
push
outsb
mov
pusha
add
movsl
sub
aam
jge
fs
inc
loopne
mov
sbb
negb
mov
outsl
mov
xlat
cmp
rorl
mov
or
loopne
int3
mov
inc
test
bound
adc
add
inc
inc
out
jae
mov
or
inc
test
loopne
jp
dec
pop
shlw
shlb
inc
jge
pusha
mov
rcrb
jge
add
pusha
or
pusha
lcall
les
adc
dec
dec
divb
jecxz
jno
adc
xchg
cmp
pop
xchg
cwtl
and
popa
add
and
sub
add
mov
in
pop
push
sub
sbb
loope
cli
mov
inc
pusha
cmp
add
mov
and
faddp
add
mov
sbb
add
inc
inc
out
push
fcomps
or
or
dec
mov
push
les
pop
sbbl
mov
andb
adc
mov
aam
fstpl
ficoml
sbbb
aas
or
ja
cmc
pop
cltd
arpl
pusha
lods
inc
loopne
addb
add
mov
addr16
mov
hlt
gs
mov
lods
jae
std
ret
pop
les
adc
push
in
jo
mov
xchg
xchg
fiaddl
pop
or
shrb
sub
sbb
flds
pusha
loopne
inc
mov
and
push
hlt
movsb
loopne
xor
push
pop
sub
mov
pop
pop
or
gs
ret
adc
xor
pop
inc
sbb
shlb
push
inc
shlb
inc
mov
pop
xor
je
mov
inc
fiadds
andb
and
stos
mov
cmp
xor
xchg
rorl
lock
push
mov
xchg
out
inc
stos
xchg
and
add
fbstp
sub
fucom
mov
test
pusha
adc
imul
andb
and
mov
test
decl
rolb
xor
pushf
scas
imul
fwait
imul
cpuid
andb
out
xchg
xor
loopne
and
sbb
mov
sti
cmp
shlb
arpl
ljmp
mov
rolb
mov
pusha
xor
les
ret
ljmp
mov
andb
and
sub
dec
dec
ret
cmc
leave
rolb
xchg
in
jp
mov
das
int3
enter
ja
xchg
push
and
nop
lock
scas
scas
pusha
pusha
push
jb
or
andb
mov
inc
pop
cltd
daa
xchg
lcall
ja
add
sub
and
pop
shr
mov
rol
lahf
add
je
imul
addb
mov
dec
push
or
ljmp
or
fdivs
pop
sarl
aas
and
xor
fcomps
loopne
outsl
sub
je
xor
push
mov
mov
out
mov
sarb
xchg
dec
add
xchg
push
inc
mov
and
add
xor
jecxz
mov
or
push
pop
lods
add
mov
lock
mov
and
xor
adc
pusha
and
add
sbb
adc
mov
clc
loop
jle
insb
cmp
adc
movsl
shl
push
sahf
dec
shlb
sar
add
cmp
or
inc
nop
lret
aad
push
add
sub
adc
and
shrb
pop
xchg
cld
cmp
out
xchg
and
mov
or
xor
adc
sbb
cmp
mov
fucomip
lret
jmp
lahf
or
lahf
sbb
mov
cmpsb
pusha
mov
mov
mov
insl
mov
add
fs
and
mov
push
sarl
and
loopne
pop
lret
jnp
dec
mov
dec
popa
mov
pusha
push
and
rcrb
push
lea
insb
mov
and
push
test
and
lea
pop
xor
pusha
loopne
dec
sub
inc
ss
sub
lcall
sti
les
lock
push
add
mov
mov
adc
frstor
and
lret
sbb
std
sbbl
cmp
loopne
mov
and
pop
mov
rolb
xchg
bound
sub
inc
enter
or
jmp
sbb
pushf
jecxz
aas
push
mov
xchg
fidivrs
std
push
test
mov
bound
mov
pop
lret
fstpl
rolb
popa
push
gs
in
testb
into
jle
imul
scas
pusha
rcrb
inc
mov
shlb
dec
push
pushf
xchg
cltd
dec
out
cmp
push
shlb
fs
pop
repnz
xor
js
imul
and
mov
les
loopne
sub
pushf
rcll
adcl
loopne
jb
xor
mov
mov
mov
outsl
out
data16
mov
andb
add
aas
aad
je
mov
shlb
mov
int3
push
int
jo
dec
push
pusha
orb
shl
cmpsb
shlb
lock
mov
and
jns
cmp
fstps
and
or
setbe
gs
pop
sbb
mov
dec
lods
add
cmp
sub
andb
jbe
orl
and
stos
and
rcll
das
sbb
arpl
bound
jns
add
mov
cmp
cwtl
mov
out
jl
add
mov
mov
push
addb
dec
push
and
mov
insl
pop
inc
add
loopne
mov
shlb
push
rolb
shlb
mov
or
cmp
mov
outsb
pusha
sbb
pop
push
mov
shl
pushf
scas
or
inc
push
pusha
add
shlb
cmpsl
ret
mov
push
je
sbb
loopne
cld
inc
cmpsb
inc
xorb
jne
dec
pop
faddl
adcb
out
ret
rcrb
xor
sbb
inc
mov
jns
fimull
shlb
in
and
pusha
mov
mov
inc
push
loopne
jne
leave
mov
or
sar
loope
pop
mov
mov
add
loope
fwait
adc
mov
outsl
ret
and
and
sub
mov
cmp
aad
jae
cli
loope
rol
inc
jge
clc
test
and
sub
pusha
and
xor
and
scas
loopne
mov
mov
mov
out
and
mov
inc
jo
dec
lock
xchg
imul
push
addb
mov
and
in
out
cmp
scas
xor
outsb
add
jg
mov
pop
lods
inc
and
inc
cmpb
rolb
int
dec
fsubp
push
pushl
push
push
fmull
inc
pusha
in
ret
push
sub
pusha
mov
mov
jo
in
cmpsl
stos
loopne
xchg
testl
iret
test
and
loope
pop
dec
sub
inc
add
iret
jo
sbb
sbb
shl
jbe
adc
js
lock
aas
movsb
add
int3
sub
and
divb
pop
pop
arpl
loopne
ja
jbe
xchg
mov
pop
push
rorb
add
inc
fistps
lret
add
addb
call
repz
add
push
xchg
cmp
push
pushf
addb
xchg
pusha
and
sub
mov
pop
mov
ret
dec
js
push
inc
rorl
inc
shlb
pop
bound
inc
jg
inc
popa
adc
in
jns
loope
cmp
ljmp
jnp
imul
push
and
es
pusha
dec
mov
and
shlb
sarb
lea
add
mov
shl
push
icebp
lret
pop
cmc
inc
lcall
mov
out
pop
ret
jo
popa
mov
loopne
inc
pop
mov
push
ja
roll
mov
inc
sbb
and
inc
pop
sbb
mov
add
xor
inc
mov
push
rolb
jns
data16
inc
popa
sbb
inc
mov
movsl
leave
ds
add
push
cmp
test
clc
dec
sbb
ror
popf
imul
jne
inc
pusha
std
pop
mov
test
loopne
fwait
je
out
inc
rorb
pusha
jge
add
push
imulb
fiadds
pusha
inc
insb
sub
mov
aaa
test
mov
push
mov
mov
mov
mov
pusha
push
test
adc
mov
test
add
lcall
mov
test
push
mov
inc
aam
pop
stos
push
inc
push
loopne
xor
lods
pop
jns
or
and
jbe
pusha
and
jmp
push
shl
mov
push
adc
mov
insl
jle
mov
mov
pusha
mov
sti
sbb
mov
xor
xchg
adc
cmp
and
imul
int
loop
outsl
das
pushf
sbb
movsb
mov
aam
bound
lret
test
cmp
mov
mulb
sbb
jo
add
and
dec
xchg
subl
ret
mov
mov
jb
inc
scas
mov
cld
test
dec
adc
mov
or
sbbb
or
dec
pusha
movsb
and
adc
sub
cmpl
and
or
mov
add
mov
sbb
xor
fistl
cmp
test
and
mov
or
inc
icebp
or
inc
loope
add
and
mov
push
out
pusha
orb
scas
shlb
in
pop
and
and
jns
push
inc
scas
mov
adc
adc
inc
push
fsubr
test
add
mov
call
add
push
cmp
decl
cmp
rolb
sbb
or
mov
and
sbb
scas
add
dec
xchg
pop
mov
int3
sub
jg
addb
xchg
pusha
jnp
bound
lods
mov
add
adcb
mov
dec
pop
test
pusha
xor
pop
mov
jne
inc
rcrb
test
inc
mov
je
jbe
addb
fists
sbb
and
mov
push
int
mov
jl
ja
addb
andb
mov
outsl
imulb
inc
dec
mov
push
arpl
sbb
cld
dec
add
fidivrs
push
les
andb
shlb
sub
xor
sbb
push
push
inc
mov
push
push
add
mov
inc
stos
rolb
mov
rorb
iret
jmp
jns
fldt
inc
test
mov
adc
adc
andb
addb
inc
pusha
fstpt
dec
xor
inc
in
mov
cmp
rorb
gs
inc
sbb
and
in
and
ret
cmp
clc
inc
jnp
xor
out
sub
inc
mov
mov
add
ficomps
and
sub
dec
and
insb
jo
rcr
andb
xor
lods
add
mov
sbb
in
loopne
xchg
lds
xchg
bound
inc
orb
loopne
mov
xor
mov
cli
out
inc
xchg
pusha
cmpsb
add
inc
pusha
dec
fdivrs
mov
mov
add
bnd
cs
shrb
lea
dec
insb
jb
jns
mov
rolb
icebp
bound
cvttps2pi
mov
scas
add
dec
add
pusha
sbb
fidivl
pusha
andb
hlt
push
call
sub
mov
pusha
add
rolb
ret
sbb
pusha
addr16
aam
mov
je
imul
adc
mov
out
xchg
pop
clc
xchg
and
data16
pusha
insl
enter
dec
dec
mov
mov
imul
dec
mov
jns
dec
daa
repz
and
or
xorb
xchg
jp
dec
in
dec
dec
hlt
mov
loopne
aaa
std
push
pusha
inc
mov
jnp
iret
xchg
daa
js
dec
insl
mov
or
mov
icebp
dec
xchg
jp
outsl
inc
add
negb
and
test
add
inc
or
icebp
call
push
enter
or
loopne
and
sar
rorb
mov
loopne
inc
cmpb
push
add
inc
mov
pusha
lret
shl
dec
lcall
add
pop
aad
fisubs
test
cmp
adc
stos
pusha
loopne
or
aas
enter
dec
inc
fcoml
addb
and
gs
push
pop
inc
iret
and
das
pop
jle
mov
sub
mov
inc
fidivl
pusha
and
lahf
xchg
cmp
mov
push
bound
jno
addb
cs
sar
xor
mov
mov
adc
xor
jg
xor
movb
push
gs
add
cwtl
addr16
push
mov
cwtl
clc
jae
inc
jae
loopne
insb
cmp
pop
daa
xchg
call
sar
inc
nop
and
testb
add
pop
rcrb
sbb
xchg
mov
testb
add
add
ds
xor
shlb
xor
imul
pop
xor
xor
mov
test
add
inc
sbb
mov
jno
fildll
lods
loopne
ja
ja
add
fistl
sbb
jb
or
andb
mov
pusha
daa
and
add
push
fistpll
inc
outsb
xor
pop
outsb
pop
jge
loope
jb
and
push
aam
pop
jp
push
push
jo
aas
or
popa
ror
pop
movsl
jne
mov
add
sbb
out
xor
aad
cmc
pop
sub
shl
sbb
jge
pop
insb
call
rolb
faddp
mov
jmp
fildll
imul
andb
add
lods
pusha
loopne
pop
daa
sti
adc
dec
arpl
sarb
jmp
inc
aas
popf
cmp
adc
xor
jnp
in
jo
iret
in
pop
sub
std
stos
pusha
pusha
jb
mov
add
loopne
mov
daa
sub
add
loopne
mov
jnp
or
add
push
loopne
mov
arpl
shl
xor
incl
ret
and
out
jbe
aad
mov
arpl
movsl
cmp
mov
and
imul
rcl
push
ljmp
mov
pop
divl
xchg
out
int3
pop
inc
aas
dec
mov
push
add
pusha
ja
sub
jb
test
pusha
lahf
popa
repz
adc
cmp
scas
stos
shlb
adc
jmp
pusha
in
push
lods
add
dec
jmp
data16
loopne
mov
aad
pop
inc
sbb
and
push
jbe
add
xchg
cmp
pop
push
adc
add
fwait
mov
addb
pusha
jno
pop
ficoml
lret
mov
data16
inc
mov
inc
mov
fcomp
cli
test
andb
add
lea
or
inc
cs
rclb
ss
lret
xchg
add
daa
jns
cwtl
sbb
add
outsl
daa
mov
shlb
stos
pusha
rclb
pusha
adcl
and
push
add
repz
and
cmp
lcall
sub
loopne
inc
out
inc
ljmp
sub
add
push
int
rcll
bnd
or
out
hlt
mov
dec
adc
lods
pop
push
nop
sahf
push
push
lods
dec
loopne
push
filds
test
xlat
push
inc
push
jo
popa
and
adc
addb
ret
or
xchg
inc
xchg
and
repnz
xchg
xchg
insb
jle
outsb
scas
jmp
push
bound
adc
mov
mov
cmpb
jge
stc
fisttpll
push
mov
or
sub
sahf
mov
pushf
ja
movsl
sbb
mov
mov
daa
mov
mov
clc
sbb
cmpb
xrelease
inc
lds
add
add
push
inc
pusha
push
xor
or
and
and
popa
adc
ja
adc
lods
cltd
scas
loopne
fs
loopne
insb
sarl
roll
dec
push
icebp
rorl
ja
sbb
aad
sti
cltd
xchg
inc
sbb
jbe
enter
dec
les
mov
scas
insl
sti
outsb
ss
call
aas
jae
pusha
add
xchg
aad
add
xlat
decb
and
cmp
ds
xchg
xchg
dec
negl
test
mov
push
addb
rolb
scas
inc
add
inc
mov
xchg
aad
outsb
cmc
xchg
mov
jne
pusha
add
fidivrl
rcrb
pop
cltd
shlb
mov
sub
inc
hlt
stos
add
subb
dec
inc
nop
enter
ret
outsl
ret
arpl
test
rcrb
fnstsw
aam
shlb
pusha
mov
shlb
dec
xor
mov
dec
rcrl
loopne
andb
popa
xor
and
lods
inc
inc
repz
lods
in
addb
icebp
add
test
mov
add
and
addl
pusha
addb
shrb
jmp
add
roll
in
and
pusha
pop
mov
mov
mov
hlt
iret
shll
xchg
adcb
punpckhbw
add
pusha
addb
lods
inc
inc
inc
mov
rcrb
out
pop
adc
mov
loopne
iret
or
mov
fs
sbb
jne
jecxz
aad
int
sub
loopne
pop
in
add
gs
xor
gs
fstps
movsb
pusha
andb
mov
sub
inc
lret
xor
push
xchg
repnz
in
insl
xchg
xor
pop
push
jge
cmp
mov
xor
scas
andb
loopne
xchg
or
in
lock
add
jo
push
stc
imull
or
add
pop
push
lahf
bound
scas
andb
lods
inc
dec
or
pusha
fisubrl
xchg
pop
ret
push
sub
rcrb
fcmovb
ljmp
or
fcmove
or
add
imul
fcoms
mov
and
adc
mov
pusha
pusha
iret
or
xorb
pop
cltd
mov
add
inc
lods
push
adc
sbb
mov
flds
push
or
cmp
sahf
pop
inc
mov
and
fadd
out
mov
mov
or
jne
in
aaa
pusha
mov
sbb
loopne
xlat
ret
lea
hlt
mov
or
push
dec
cli
mov
xor
stos
or
sbb
es
mov
popa
insb
add
rol
sbb
pusha
lahf
push
clc
jle
imul
je
loopne
loopne,pn
into
mov
shll
and
inc
loopne
pop
aas
pop
mov
mov
sbb
std
and
pusha
or
and
and
cmp
call
loopne
enter
ja
pop
adc
xchg
imul
inc
add
xor
test
push
jns
arpl
shl
mov
inc
add
dec
mov
add
lods
iretw
mov
pusha
inc
popf
ret
shrl
sub
xor
rolb
lods
orl
add
imul
out
arpl
sub
sub
sbb
lds
adc
mov
add
mov
or
icebp
xchg
pop
scas
negl
push
out
repz
hlt
loopne,pn
add
loopne
cmp
pusha
inc
arpl
popl
rol
or
jb
shlb
jg
jb
std
add
movsl
or
add
adc
mov
pop
or
mov
dec
adc
push
int3
fs
push
xor
sub
loopne
rorl
add
and
ds
jnp
loopne
outsl
cmp
ja
push
inc
aad
pop
sbb
mov
and
and
dec
lahf
sub
jns
sbb
ja
repnz
jle
mov
ja
mov
adc
cmpsl
jmp
add
mov
lods
loopne
and
mov
imul
mov
push
loopne
jae
roll
pusha
jg
or
and
jae
inc
imul
cmpsb
add
iret
out
loopne
inc
in
loopne
imull
imul
rorb
cmpsb
inc
xorb
mov
icebp
aas
leave
cs
pusha
push
push
andb
mov
mov
sbb
or
subb
loopne
jne
into
mov
popf
xchg
lret
rcrl
xchg
sub
push
testl
add
inc
fcomps
test
mov
lret
imul
xor
stos
mov
mov
scas
pusha
pusha
shll
lret
xchg
mov
popl
addb
add
inc
mov
mov
push
fcmovnb
jo
cmp
in
lcall
andb
pusha
adcb
out
adc
cltd
adc
push
jo
mov
xor
fists
orb
jge
push
adc
push
add
adcb
loopne
lods
dec
adc
inc
and
cwtl
aas
pop
mov
pop
jnp
loopne
cli
lret
fidivrs
rcrb
ret
add
inc
add
pusha
add
mov
inc
pushf
push
jns
and
lds
inc
in
and
pop
repz
add
lods
int3
lods
ja
pushf
dec
sbb
rolb
add
cs
pusha
icebp
pushf
sub
rclb
insl
lods
xor
fmul
lea
sbb
sub
mov
jno
inc
lea
xor
fs
mov
and
ja
pusha
fistps
add
aad
xchg
cmc
mov
and
bound
mov
nop
aaa
push
mov
fisttpll
push
sbb
xchg
pusha
mov
sub
call
mov
lea
xor
jecxz
int3
jne
and
and
inc
sbb
push
xor
jbe
mov
or
stos
pop
xor
sub
rolb
stos
cmc
jo
mov
jmp
mov
repnz
xchg
pop
mov
mov
and
rcrl
lret
fs
nop
push
test
loopne
dec
sti
out
and
in
push
loopne
cltd
popa
cmp
ret
sarb
scas
add
les
jl
push
inc
pusha
bound
mov
movsb
mov
popf
dec
cld
xor
push
sahf
pop
and
mov
addb
add
or
and
pusha
and
call
dec
aaa
inc
cwtl
dec
add
lea
and
inc
sti
js
jp
adc
sub
inc
rcl
lret
iret
pop
xor
xchg
xchg
mov
adc
roll
push
rcll
addb
mov
jns
loopne
or
loopne
add
jae
fwait
mov
mov
sbb
add
adc
cmpsb
add
sbb
arpl
nop
loope
mov
mov
cmpsb
inc
add
leave
jo
mov
outsb
adc
idiv
test
mov
orb
loopne
ljmp
mov
andb
inc
fwait
les
inc
and
shlb
hlt
dec
xchg
pusha
xor
loopne
out
dec
jo
mov
daa
imull
mov
addb
jbe
pusha
and
sub
sub
shlb
fbstp
repnz
pop
repnz
andb
mov
add
add
data16
dec
xchg
mov
call
aaa
into
push
and
add
in
and
sub
and
negl
outsl
aas
scas
jnp
gs
loop
lods
out
addb
inc
mov
jmp
jbe
pusha
rolb
test
push
xor
add
mov
mov
xchg
xor
ja
loopne
fwait
jnp
cli
mov
dec
movsb
and
and
cmp
mov
loopne
loopne
retw
lcall
pop
and
mov
call
and
ret
pusha
mov
jne
add
pusha
rcr
and
mov
mov
arpl
loopne,pn
aam
pop
ds
jge
mov
jle
and
push
and
cmp
inc
inc
xchg
pop
cmc
pop
and
fidivl
mov
fstpl
pop
sub
add
add
popf
fcomps
adc
fidivrl
mov
shl
pop
xor
sub
pusha
rorb
shlb
andb
xchg
ss
adc
jno
enter
or
loopne
daa
shll
cmp
sbb
add
aaa
pop
dec
imul
or
addb
imul
lret
rcll
mov
add
pusha
sarb
repz
sub
repnz
mov
jnp
lods
in
int3
pusha
mov
les
add
hlt
testl
mov
and
lods
shlb
rclb
icebp
dec
call
addb
cmpsl
lret
cmp
mov
loopne
push
movsb
add
out
and
mov
push
cli
add
rcr
inc
gs
mov
adc
mov
or
and
stos
pusha
loopne
mov
insb
sub
mov
and
pmullw
fildl
add
repz
and
loopne
test
mov
sub
pusha
inc
push
adc
aas
ss
inc
dec
jns
add
bound
and
rcrb
add
mov
add
pop
sub
add
xchg
shlb
pusha
dec
setae
cmpsl
mov
mov
mov
and
inc
and
sbb
xchg
adc
dec
je
addr16
xchg
push
inc
inc
ret
je
dec
mov
pop
or
cmpl
mov
aam
andb
push
and
es
pusha
inc
sub
pop
sbb
cmp
fdivrs
mov
mov
adc
add
or
mov
or
not
lcall
mov
and
and
addb
cmpsb
pusha
pusha
cwtl
jmp
and
sti
daa
mov
lahf
mov
mov
lret
sub
addb
in
xor
stc
stos
aad
mov
pusha
xlat
jne
inc
loopne
lods
or
je
pop
xor
inc
loopne
mov
je
les
lret
xchg
dec
or
addb
inc
mov
mov
add
fisttps
push
xchg
xchg
push
jne
mov
rcr
aam
mov
mov
dec
rol
xchg
xor
loopne,pn
test
pusha
rol
jno
jbe
and
jg
xor
mov
test
movzbl
xchg
dec
in
loopne
pusha
shl
in
int3
cmp
jbe
movsl
mov
add
sub
inc
cmc
lods
imul
xchg
inc
adc
inc
xor
filds
les
fwait
sbb
push
xor
fisubrs
xor
sti
xor
inc
inc
mov
mov
icebp
in
fstpt
inc
loopne
xlat
pop
ds
or
or
adc
out
insb
push
iret
xchg
pop
mov
pop
xchg
push
mov
shlb
loopne
cmp
test
mov
rcrl
fs
ret
inc
dec
and
mov
ficompl
jbe
and
jmp
mov
shlb
add
mov
mov
sarb
cltd
mov
insb
cmpsl
leave
mov
loop
or
mov
inc
adc
sbb
mov
pusha
pusha
mul
cmp
repnz
sbb
iret
lods
jo
add
add
pusha
rcrb
cmp
pop
and
cmp
and
gs
pop
fstpt
mov
lret
xchg
jae
iret
dec
push
fwait
mov
dec
pop
add
pop
sub
loopne
out
aad
shlb
int
jb
mov
inc
add
inc
cwtl
push
rolb
std
xlat
xchg
enter
into
dec
ja
inc
add
jp
lods
rol
int
mov
rcrb
loopne
jmp
xor
cmp
add
jno
add
loope
inc
and
sub
frstor
shlb
jmp
push
mov
inc
je
xor
ret
pop
mov
dec
add
dec
sub
rol
adc
push
inc
inc
addb
dec
mov
repz
dec
sbb
std
adc
dec
xor
mov
aas
dec
inc
mov
imul
and
jb
shl
push
in
mov
dec
ret
xorl
cli
push
fidivl
out
xchg
xor
xor
push
inc
rolb
inc
addb
pop
dec
cltd
sub
mov
pusha
repz
andb
lea
inc
subb
jl
add
addb
xorb
dec
mov
leave
jns
stos
rol
test
and
dec
arpl
xor
push
neg
ja
and
sub
jmp
testl
mov
shrb
shlb
ss
lea
mov
fsub
fucomp
mov
mov
adc
cmp
loop
int3
insl
das
push
repnz
ret
push
add
mov
jns
adc
xlat
push
lret
rolb
mov
cwtl
lcall
jns
ljmp
gs
jne
xor
add
fnstcw
xchg
mov
add
in
xor
cmp
inc
fisubrl
add
mov
repz
test
xchg
roll
andb
pushf
push
cwtl
xor
jb
adc
add
loopne
cmp
mov
not
stos
rcll
mov
popf
popa
fbstp
imul
jmp
pop
pusha
inc
adcl
add
jecxz
cmpsl
loope
fcmovb
sahf
pop
imul
stc
rcrb
lea
jg
jbe
inc
inc
push
xchg
mov
push
out
cmc
pop
loop
rolb
adc
test
xchg
push
jp
lret
mov
mov
mov
pop
cmpsl
pop
cmc
jb
pop
mov
and
mov
bound
add
pop
sahf
xchg
loopne
fsubrl
fstps
pushl
xchg
int
sub
inc
js
adc
mov
mov
pop
sti
pop
bound
mov
leave
xor
cmp
cmp
stos
pop
outsl
aad
push
add
and
mov
mov
push
mov
lods
loopne
or
sbb
jmp
sub
adc
mov
loopne
mov
pop
pop
jge
fwait
jo
loopne
xor
or
int
and
mov
sbb
pusha
das
in
mov
ljmp
inc
loopne
add
fadds
rolb
fdiv
jno
pop
lret
push
or
mov
dec
jecxz
xlat
dec
cmp
add
sbb
sub
add
cli
out
daa
addr16
jge
jb
jne
push
mov
inc
add
jge
xor
int3
sbb
movsl
mull
mov
fs
xor
mov
inc
ss
sbbl
add
mov
cltd
movsl
cmpsl
xchg
mov
push
pop
sahf
pop
sbb
loop
call
xchg
movsl
enter
int3
lock
add
adc
adc
and
and
loopne
cld
shrb
ret
mov
push
fsubl
pop
fnstsw
jne
leave
and
filds
sti
add
pusha
in
push
incb
daa
jle
inc
mov
loopne
aam
or
ss
dec
shll
insb
aaa
iret
dec
push
and
rorb
jp
push
pusha
loopne
dec
ret
dec
mov
add
mov
shll
test
shlb
mov
call
and
sub
aaa
cltd
adc
and
pusha
xchg
dec
cmp
dec
into
mov
inc
pop
lahf
push
jns
addb
aad
mov
rolb
mov
and
xor
jae
mov
sti
loop
in
push
jmp
ljmp
dec
cmp
ss
jmp
mov
dec
adc
orb
cmp
pushf
les
inc
shll
test
loopne
push
std
repnz
lods
je
in
mov
adc
mov
sub
and
and
sbb
mov
js
inc
movsl
mov
rolb
addr16
pusha
add
outsl
ja
sbb
or
mov
in
mov
jnp
dec
mov
shlb
pusha
rolb
mov
and
lock
sbb
pop
mov
scas
and
rcrl
aad
mov
decl
sbb
out
rcl
fdivr
jmp
mov
icebp
popf
mov
imulb
rcr
mov
insb
and
fidivrs
out
cmpsb
and
and
popf
iret
gs
add
loopne
jo
test
addb
pusha
movsb
mov
mov
inc
loopne
sub
and
jb
cmp
out
push
dec
imul
inc
fidivrl
dec
jbe
daa
fcoms
add
xchg
iret
lret
test
rcr
movsb
andb
sets
inc
mov
sarb
add
pusha
xchg
jge
add
add
mov
fdivs
jb
mov
pop
icebp
lcall
inc
stos
loopne
adc
push
lret
and
push
mov
push
lds
or
hlt
pop
pop
jae
or
pusha
int3
mov
loope
push
ljmp
dec
movsl
lea
cs
inc
add
fildl
pop
mov
add
and
outsl
cmp
jmp
ljmp
andl
inc
xor
mov
xchg
jnp
test
pusha
adc
cs
cmp
jb
push
or
sbb
xchg
xchg
dec
imul
addb
addb
push
cs
test
pushl
add
sub
mov
jl
dec
inc
mov
or
jo
sub
loopne
popf
out
addb
jg
fsubl
les
js
sub
fildl
push
add
xor
and
push
loopne
mov
and
or
or
jge
push
pop
xchg
andb
and
fdivrl
hlt
adcl
rclb
lds
data16
insl
lret
lods
rolb
loopne
int3
out
insb
pushf
jge
xchg
hlt
xor
mov
sbb
or
shl
pop
dec
mov
sbb
adc
out
sbb
aam
mov
sarb
insl
adc
or
push
aad
add
and
dec
decl
popa
push
aas
loope
jmp
sub
push
push
bound
adc
mov
rcrl
rcl
shll
in
adc
shlb
mov
and
daa
mov
add
addb
xchg
mov
and
adc
mov
xchg
xchg
cs
mov
repnz
cmp
sahf
iret
sbb
pusha
and
pop
aad
aaa
mov
dec
xchg
pop
mov
pop
dec
or
int
addb
rolb
mov
mov
mov
ljmp
add
inc
mov
scas
loopne
push
ret
popa
xchg
add
sti
cwtl
test
xor
sarl
mov
loopne
pop
and
add
and
pop
mov
repz
shr
jae
sahf
addb
add
cmp
imul
jns,pt
cltd
xchg
fidivs
mov
rolb
mov
sub
mov
and
add
stos
pop
ret
lret
popa
push
pop
push
mov
sahf
rol
fstpt
outsb
add
inc
lds
loopne
xor
mov
popf
je
fcomip
xchg
andb
inc
sarb
mov
mov
push
insl
cmc
push
enter
gs
inc
mov
andb
and
insl
sub
inc
push
divl
call
fistps
aaa
jb
inc
leavew
fiadds
add
inc
jl
pop
pop
pop
shlb
sub
and
and
dec
ljmp
mov
into
mov
cmp
shlb
jecxz
lods
inc
rorb
fisttps
rolb
xchg
ret
aaa
sbb
int3
dec
xor
out
sbb
dec
popf
cmc
cmp
inc
outsl
jecxz
mov
xor
pop
pop
lds
xlat
jae
push
add
pusha
shll
imul
clc
xor
or
push
pusha
push
add
mov
adc
add
inc
inc
mov
sbb
decl
mov
loopne
dec
loope
jl
dec
lcall
loopne
add
xor
jle
push
insl
aam
xlat
mov
or
rcrb
aaa
lret
adc
xor
add
stos
sub
inc
adc
and
sahf
jo
orl
leave
hlt
aad
cmp
mov
dec
ret
jnp
inc
jno
xor
push
or
subb
add
inc
mov
mov
stc
shlb
jns
mov
shlb
add
das
ds
lcall
test
mov
inc
and
xor
and
ror
ja
lcall
push
and
and
adc
out
add
imul
cli
adc
mov
cwtl
mov
lahf
sbb
loopne
add
jmp
mov
push
clc
mov
xor
adc
mov
xchg
xor
fwait
rolb
loopne
sarl
mov
and
inc
jecxz
sbb
push
icebp
je
xchg
arpl
push
adcl
cmpsb
pusha
mov
cwtl
pop
adc
imul
out
out
mov
pop
rorb
das
out
mov
mov
repz
test
and
cs
cmp
cld
xchg
scas
mov
pushf
scas
mov
lds
pop
aas
fidivl
loop
addr16
mov
cmp
loopne
mov
xlat
push
pop
jecxz
addb
loopne
sub
loopne
test
mov
push
fists
mov
mov
sub
mov
and
inc
push
pushf
mov
rclb
mov
andb
fbstp
repz
or
fdivs
inc
ljmp
ds
adcb
divl
mov
loopne
jp
test
shlb
out
pop
push
xchg
test
add
and
adc
inc
call
outsl
shrb
jg
pop
inc
xor
xor
call
addr16
dec
adcl
or
pusha
lods
shlb
not
or
loopne
add
rolb
mov
xor
movsb
and
test
pop
jb
mov
mov
bound
mov
mov
mov
jno
dec
sar
mov
adc
adc
jmp
add
adc
push
in
jne
push
or
ljmp
insb
dec
dec
push
scas
lcall
popf
xor
or
mov
adc
mov
adc
pusha
mov
ljmp
xchg
outsl
xor
add
sub
movsl
stos
add
sbb
lret
std
movsl
dec
cmp
adc
push
addb
daa
hlt
xchg
mov
loope
xor
and
pusha
cmp
out
mov
loopne
mov
pusha
mov
cli
dec
pushf
outsl
dec
mov
adc
sbb
and
sub
jno
shll
addr16
mov
adc
test
and
fldcw
sti
xchg
and
pusha
cmc
repz
idivl
jnp
js
shl
mov
ja
ds
xchg
into
and
pop
pop
mov
and
xchg
in
mov
addb
and
mov
loopne
mov
rcrb
xor
jmp
nop
mov
nop
movsl
fdivr
clc
inc
stos
add
nop
loope
lods
add
and
testl
pop
jnp
dec
pusha
xchg
stos
jne
mov
and
inc
arpl
mov
mov
int3
repz
and
cwtl
daa
push
je
jmp
pusha
add
sahf
adc
aad
repnz
and
stc
xchg
fs
push
cmpsb
loopne
jecxz
xchg
xor
test
and
dec
push
pusha
inc
pop
pusha
test
mov
xor
mov
dec
jbe
add
lds
and
test
pusha
insl
imul
mov
push
or
and
xchg
adc
imul
ror
mov
movsl
xchg
daa
mov
inc
push
and
xchg
std
cmp
sub
int3
sbb
fs
jecxz
cmpsl
pop
mov
pusha
je
scas
outsl
mov
mov
jle
or
and
inc
fdiv
push
jae
jecxz
cltd
loopne
lods
cli
data16
add
subb
pop
out
lret
sbb
dec
push
fstps
inc
pusha
adc
pusha
cmpsb
shlb
mov
dec
cwtl
fmuls
addb
pop
loop
push
and
rolb
add
int3
testb
jecxz
aaa
jae
into
adc
adc
lods
cwtl
movsl
into
jle
mov
mov
gs
std
pop
pop
lret
std
lock
shlb
jg
mov
sti
andb
mov
movmskps
addr16
xchg
mov
cmp
or
mov
mov
push
xchg
push
adc
cltd
js
add
in
push
ja
push
je
inc
dec
pop
ficoms
xchg
addr16
fwait
cmp
testb
orb
addb
dec
arpl
cmp
xor
icebp
inc
dec
lahf
xor
xchg
sub
and
inc
sub
inc
iret
std
or
mov
mov
bswap
enter
fisubrl
xchg
pusha
lcall
cmp
das
cmp
clc
push
mov
fwait
lahf
std
test
das
js
push
push
addb
ss
pusha
pusha
xchg
popf
imul
hlt
mov
loop
xchg
add
xchg
in
sub
pusha
cmc
sbb
mov
jl
add
and
pusha
mov
pusha
add
imul
mov
rcr
cmpsl
enter
xchg
pop
or
xor
pop
adc
or
data16
cmp
xor
pop
adc
pop
inc
test
les
mov
jl
stos
loope
lock
dec
sub
bound
mov
add
jne
pop
rcr
push
add
xchg
jmp
jo
jo
loopne
jge
pop
xlat
mov
testl
aad
mov
jp
dec
pop
aad
sbb
lcall
adc
xchg
push
rolb
fistpll
ljmp
xor
out
fnsave
adc
std
pop
xchg
stc
js
cmp
pmullw
ss
fcoml
jb
fistpll
mov
add
addb
ja
or
fisttpll
inc
shlb
dec
or
inc
test
and
and
loopne
loop
dec
inc
sbbl
pop
fstpl
mov
scas
out
mov
rolb
addb
mov
sbb
pop
jl
hlt
jp
outsl
stc
inc
adc
rcrb
add
mov
aas
cwtl
dec
and
add
mov
cmc
fistpll
cltd
sti
stos
dec
pop
clc
add
stos
mov
into
cmpsl
test
out
xchg
shrb
mov
inc
push
push
jne
es
xchg
push
or
or
rolb
and
pop
or
sbb
mov
jl
sahf
inc
push
imul
push
and
and
pusha
shlb
dec
ret
mov
sbbb
jmp
andb
add
loopne
in
outsb
dec
cmc
add
jns
cmp
shlb
nop
sub
pop
inc
jmp
mov
jge
inc
lcall
lea
xor
dec
dec
mov
and
add
jnp
push
jmp
loopne
loop
cmp
add
or
aas
outsb
xchg
mov
adc
mov
mov
xchg
mov
mov
mov
inc
adc
and
scas
mov
scas
add
add
add
fs
pop
mov
movsl
mov
rolb
jae
mov
icebp
and
stos
addb
dec
push
xor
adc
and
lock
js
and
shrb
fadd
mov
loopne
ja
pusha
loopne
fldpi
xlat
lahf
dec
mov
aas
cmpsl
js
mov
pop
lahf
sbb
mov
jno
stc
xchg
xor
repz
jnp
inc
add
add
out
or
mov
testb
fdivrp
sbb
lcall
xchg
in
ret
xor
mov
mov
pop
xchg
out
fsubrl
scas
xchg
lcall
inc
rcr
stos
inc
and
stc
repz
sub
loopne
xchg
fcoml
sbb
inc
mov
sti
cmc
das
pop
mov
xor
mov
shlb
and
inc
sbb
sub
lods
rolb
dec
fmull
pusha
gs
jmp
outsl
mov
mov
int
ja
pop
gs
or
adc
into
push
add
lock
cmovae
sbb
mov
pop
movsb
inc
mov
and
loopne
out
mov
in
jmp
mov
shrb
mov
pusha
inc
dec
es
loopne
jg
gs
pusha
loopne
pop
xor
mov
xchg
test
add
test
add
pop
dec
and
pusha
hlt
and
pop
xchg
mov
loopne
mov
insl
ljmp
je
inc
fcomp
sti
xchg
test
mov
cmp
addr16
lods
loopne
insb
sar
mov
ja
mov
add
or
mov
lret
push
jnp
addb
dec
data16
nop
cmp
outsb
testb
add
pop
xlat
adc
mov
test
out
jae,pt
lahf
popf
add
dec
into
leave
jl
dec
data16
jg
pop
lea
adc
dec
xchg
cmp
xor
push
sub
data16
xor
add
xor
cld
mov
and
push
out
mov
imul
push
idivb
jae
or
stos
loopne
adc
add
subb
sbb
sub
cmp
popf
roll
movsb
and
inc
and
cmp
in
test
sbbb
stos
xor
pop
bound
sbbb
cld
cmpsl
pop
imul
xchg
es
xor
shll
push
add
shlb
shl
sarl
inc
cmpsl
or
aam
push
cltd
dec
push
mov
inc
push
test
hlt
std
mov
dec
add
add
loop
into
je
out
jo
mov
mov
xor
shlb
ljmp
mov
js
shl
push
loopne
sub
aaa
int3
fxch
mov
pusha
add
rolb
cli
stos
aad
pop
mov
mov
adc
loope
sbb
add
add
stc
je
xchg
mov
push
cli
mov
in
sub
mov
loopne
mov
sti
jno
rorb
mov
xor
rolb
add
fnsave
jns
shlb
rolb
inc
add
dec
jno
rol
mov
rorb
rolb
push
jle
inc
cwtl
out
ds
mov
inc
idivb
in
pop
adc
mov
rol
outsb
inc
xor
inc
and
add
jno
imul
andb
lea
lock
xor
cmc
in
push
movsl
icebp
pop
arpl
inc
ja
js
lods
and
mov
add
push
popa
pop
dec
cmc
add
pusha
mov
dec
test
inc
fcomi
bnd
xor
add
jecxz
insl
pop
or
mov
call
ljmp
loopne
jae
and
mov
mov
pusha
mov
add
sub
xor
push
jae
fs
rcr
faddl
mov
rcrl
xchg
xchg
xchg
cmp
enter
rolb
inc
xor
jnp
push
pop
fstpl
adc
shlb
inc
sub
loopne
xchg
ret
stos
andb
inc
loopne
cmp
rcl
inc
adc
ror
and
add
xchg
mov
hlt
cmpsl
imul
mov
rolb
jno
adc
fdivl
stos
addb
and
sbbb
and
inc
es
pop
add
mov
pop
add
subb
pusha
loopne
cmp
test
imul
and
adc
xor
inc
add
shrb
aam
mov
fsubrs
mov
orl
cmp
aaa
jmp
sub
loopne
jmp
ror
lret
jae
sbb
jg
inc
sub
mov
ljmp
loopne
lahf
sub
add
aaa
jl
pusha
mov
mov
and
test
and
les
sbb
andb
cmc
std
push
out
inc
add
add
mov
lret
jg
cs
inc
inc
scas
add
mov
and
adc
daa
jl
stc
test
xor
dec
xchg
cwtl
rorb
xor
mov
insl
xchg
repnz
data16
pop
inc
imul
mov
outsb
sbb
xor
add
xchg
adc
and
loopne
call
xchg
mov
sbb
loopne
inc
test
aas
outsl
or
mov
loopne
cmp
in
pusha
int3
inc
sti
pusha
pop
dec
sbb
sbb
loopne
pop
repnz
fldcw
push
insl
test
dec
gs
mov
add
inc
mov
sbb
inc
or
hlt
mov
aad
push
push
aam
jo
jmp
mov
inc
jl
out
ljmp
pop
add
mov
push
xlat
clc
dec
jb
and
sbb
out
mov
repnz
and
mov
push
jge
add
and
sub
cwtl
xchg
mov
outsb
mov
mov
and
iret
xor
adc
inc
movsl
shlb
pop
addr16
add
xchg
arpl
imul
popa
into
int3
add
and
rol
andb
outsb
fwait
inc
jae
addr16
push
fwait
incb
push
and
shlb
cld
jbe
inc
push
dec
and
cmp
sarb
mov
je
pop
cmp
mov
mov
aam
sub
shll
test
mov
addb
jb
cmp
iret
scas
pusha
mov
fs
mov
pusha
movsl
sub
push
andb
push
pop
jno
aas
shlb
bound
test
fiadds
push
pop
gs
cltd
mov
xchg
gs
xor
loopne
jae
pusha
pusha
addr16
xor
sub
add
dec
fwait
call
xchg
dec
pop
jno
jl
adc
or
inc
repz
add
mov
loop
or
and
and
inc
sbb
inc
push
dec
and
subb
mov
or
xor
rol
fisubl
add
inc
aaa
fwait
push
pusha
shr
add
gs
shrb
adc
mov
test
faddl
dec
cmp
aas
call
adc
add
mov
add
dec
and
add
mov
cmp
push
xchg
pusha
inc
cltd
mov
fisubl
test
jb
and
add
lods
add
inc
inc
fsubrl
inc
sub
inc
inc
scas
fs
xchg
fcoms
inc
and
outsb
pop
shll
cmp
lods
mov
inc
mov
das
push
out
pop
inc
add
cmpb
sarb
loope
sbb
jae
mov
rorb
fisubrs
aaa
jmp
sub
add
mov
cld
fcmovnb
ja
mov
mov
pop
xchg
sub
arpl
in
cmpsb
inc
inc
repnz
inc
inc
test
mov
pop
jo
and
push
mov
and
in
nop
add
rcl
mov
andb
mov
pusha
mov
cmpsl
pop
arpl
iret
xchg
add
ja
in
xor
and
outsl
and
dec
ljmp
movlps
fists
ljmp
imul
add
add
scas
shlb
stc
in
inc
mov
mov
rsm
andb
xchg
jmp
add
cmp
stos
mov
inc
sbb
mov
pusha
pusha
mov
fcomip
dec
fnsave
andb
xchg
scas
inc
inc
xchg
js
or
xor
xchg
movl
xor
scas
add
or
lods
jg
pop
pop
pop
pop
sahf
push
cmp
andb
jg
outsb
pop
or
sub
rcrb
pusha
push
enter
aaa
pop
or
addb
dec
shl
sbb
mov
andb
not
int
call
adc
inc
mov
rol
insb
enter
mul
lds
push
fisubs
cmp
cmpsb
mov
push
daa
in
aaa
stos
and
sub
jmp
sahf
adc
and
mov
or
loopne
push
shlb
jno
sub
and
int3
fcmovu
aam
or
imul
in
mov
mov
aad
mov
cmp
fs
jle
int3
ss
stos
and
add
lea
aam
fildll
sti
mov
xor
xchg
cmp
rolb
dec
mov
and
sub
sbb
xlat
cmp
sub
inc
mov
jmp
xlat
stc
mov
ror
push
pop
fs
xchg
and
ss
pop
jnp
xchg
cmc
adc
push
add
xchg
xchg
adc
cli
cmp
add
ss
pop
sti
std
ret
add
dec
outsl
stos
dec
out
sub
jnp
inc
pop
test
pusha
sub
lahf
pop
imul
sub
push
jne
shll
fsts
shlb
add
inc
in
rcll
mov
jmp
inc
mov
emms
arpl
xor
sarb
jo
lahf
das
add
cli
and
add
or
pop
cmp
cmp
pusha
jge
shl
push
mov
ret
stc
lahf
into
and
imul
andb
dec
int
cmp
daa
std
pop
dec
xor
sub
or
fistpl
inc
mov
rcrl
hlt
sahf
push
jmp
loopne
bnd
std
mov
add
add
jb
out
sbb
adc
ljmp
push
xor
pusha
add
inc
int
inc
loopne
jo
xor
or
xlat
dec
cmp
push
mov
jo
xchg
mov
fstps
outsl
mov
inc
mov
sbb
andl
jns
sbb
and
mov
hlt
pop
arpl
mov
xor
and
fisttps
cli
jle
jg
dec
mov
movsb
addb
or
inc
mov
pop
and
add
xchg
sti
xor
jmp
cmp
sti
cmpsl
sub
mov
pusha
xor
je
mov
int3
iret
and
lcall
dec
or
subb
sub
loopne
xor
shlb
dec
adc
dec
sbb
pusha
pusha
or
mov
sahf
lods
add
xchg
cmp
loope
xchg
movsl
movsb
inc
addb
rcr
bound
ss
mov
frstpm(287
push
xchg
push
lods
add
sahf
aas
push
popf
daa
std
mov
ds
cld
adc
mov
cli
xchg
pop
jecxz
aad
adc
push
jne
rolb
ret
cmp
imul
shlb
mov
bound
jae
inc
and
inc
inc
in
add
or
outsb
shrb
xchg
pushf
iret
fists
lds
add
jecxz
jp
frstor
jbe
xchg
mov
sbb
bound
loope
adc
lods
mov
or
push
cld
mov
pop
das
aas
xchg
int
xor
mov
out
mov
sub
rolb
into
loope
add
sub
or
mov
sahf
push
pusha
inc
push
hlt
xor
mov
jnp
test
xor
hlt
xchg
pushf
in
inc
mov
xchg
mov
push
shll
mov
mov
or
das
jnp
xchg
cld
ficompl
leave
out
lods
pop
gs
or
xlat
int
mov
pushf
rorl
jmp
and
adc
cmpb
stos
add
add
shrl
ja
xchg
clc
outsl
out
js
and
out
pop
add
loopne
inc
shlb
inc
dec
loope
cmp
mov
add
outsb
hlt
mov
and
stos
mov
add
inc
mov
add
xchg
adc
and
sbb
stc
mov
mov
and
into
sub
loopne
pop
mov
adc
or
pop
mov
rorb
aaa
xchg
xor
add
andb
cmp
and
test
fs
rol
xor
inc
mov
mov
mov
push
aad
ss
mov
outsb
jne
sub
inc
mov
ss
push
jle
inc
loopne
pusha
pusha
clc
outsl
pop
cmpsb
mov
je
jmp
sub
xchg
shlb
andb
mov
sar
dec
jb
aad
psrlw
inc
loopne
repz
fbstp
rorb
rcll
ret
add
push
and
ja
aas
pop
xchg
sub
in
mov
inc
int
pusha
mov
sbb
mov
mov
mul
stc
pop
cmp
sbb
lea
or
inc
sti
mov
and
mov
and
or
les
jge
dec
loopne
mov
dec
shll
loopne
fisttpl
dec
dec
inc
jbe
clc
pop
dec
sub
mull
cmp
loopne
lds
push
loopne
and
sbb
rcrl
and
and
loop
adc
jg
pop
jne
cmp
jns
shrb
add
scas
add
test
shlb
push
roll
adc
adc
inc
adc
mov
pusha
outsl
pop
les
stc
sub
mov
pop
fnstenv
dec
dec
lock
or
daa
sub
gs
popl
movsb
mov
decl
loop
dec
hlt
cli
jae
sbb
and
xchg
lcall
cld
shlb
jl
mov
add
lds
js
leave
movsl
sub
inc
aas
pop
fcom
cs
add
xorl
fildll
add
mov
mov
pushf
mov
loopne
and
lea
mov
pusha
pusha
add
and
pusha
les
ds
dec
and
xor
fldl
adc
out
fimull
pusha
inc
sub
andb
xchg
div
and
sbb
test
mov
xor
out
xchg
dec
or
dec
jns
iret
cltd
xchg
loope
loopne
lock
xchg
and
pusha
lea
pop
jne
movsb
mov
movsl
mov
xor
into
ds
cmp
pop
pop
xor
lret
jae
loopne
sub
rcrb
aad
dec
fisubs
nop
ja
iret
aas
aam
out
sbb
out
jg
xor
mov
add
mov
jecxz
pop
pop
mov
loope,pt
addr16
lcall
sub
push
add
insb
sub
mov
pop
xchg
inc
sbb
int
repnz
add
out
pusha
loopne
mov
mov
inc
pop
inc
scas
fisubrs
cmpsl
mov
adcb
pusha
add
jo
gs
pusha
and
adc
ljmp
stos
imul
pop
xor
arpl
inc
inc
sbb
xchg
sub
jecxz
and
sahf
mov
push
xchg
shlb
int3
or
xchg
and
in
mov
pop
aas
lds
lock
mov
lds
loopne
pop
js
fs
mov
lds
cmp
leave
jecxz
xchg
xor
adc
cmp
cmp
iret
or
and
or
cmp
mov
or
mov
repz
cmp
mov
xor
daa
insb
imul
jg
test
jl
inc
adc
or
add
adc
and
inc
push
leave
jp
pusha
sar
inc
push
addb
loopne
arpl
scas
shlb
negb
aas
dec
mov
shl
loopne
js
pop
andb
aad
outsl
mov
push
enter
fmul
aad
xchg
cmp
addb
loopne
sub
fwait
adc
push
pop
popf
mov
test
pusha
add
inc
and
add
and
fldl2t
nop
dec
mov
cmp
jne
push
jmp
jecxz
loope
cmovno
mov
dec
and
lcall
sbb
jmp
imul
jae
imulb
and
mov
sbb
in
and
mov
ja
and
stos
ffree
cli
mov
addb
andb
sub
sbb
xor
pop
in
mov
mov
pusha
mov
shl
pop
xchg
inc
clc
push
rolb
xchg
and
add
pop
dec
add
jno
cmp
inc
lret
push
scas
inc
and
rolb
stc
mov
idivb
ret
iret
out
ljmp
mov
and
push
gs
mov
gs
pop
pop
cmp
mov
xchg
jne
daa
out
pusha
iret
pop
daa
push
adc
mov
andb
insb
push
clc
xor
dec
cmpsb
mov
sbb
loopne
loope
daa
inc
sbb
cmp
sbb
fisttpl
push
add
xchg
addb
pop
shlb
add
mov
mov
fdivrs
push
js
addl
ret
fwait
push
test
shl
dec
or
addb
jae
loopne
sti
sub
pusha
mul
jno
xchg
mov
daa
jne
push
mov
and
movsl
adcl
inc
loopne
and
xor
rolb
test
jge
or
rcrb
test
pusha
repnz
loopne
xlat
movl
pop
aaa
and
push
inc
mov
adc
mov
inc
and
imul
stos
shl
or
mov
and
mov
cmpsl
inc
fnstenv
pop
xor
out
adc
inc
fs
xorb
repz
dec
and
inc
push
into
jnp
and
mov
stos
fcompl
daa
push
and
mov
in
ja
mov
jae
push
loopne
push
add
xchg
js
hlt
inc
dec
push
fdivs
stos
xchg
add
repnz
mov
dec
mov
pop
ljmp
and
loopne
push
arpl
mov
and
mov
xchg
mov
adc
sar
add
pusha
mov
inc
and
add
mov
addr16
sbb
rol
mov
or
mov
add
loopne
lahf
fiadds
mov
ror
daa
gs
sbb
pusha
inc
enter
lods
pusha
pusha
push
adc
test
inc
cmpl
xlat
mov
or
xlat
xor
test
sarb
aas
lret
mov
cmp
inc
pusha
push
inc
pusha
inc
das
push
sahf
pop
mov
fistps
xor
mov
fbstp
and
push
or
xchg
jae
and
pusha
sbbb
movsl
adc
mov
add
or
add
pusha
iret
aaa
push
xlat
jp
lahf
out
rep
in
cmpsl
outsb
addr16
xchg
fs
sbb
hlt
dec
movsl
push
lret
imulb
mov
mov
push
cmp
arpl
inc
mov
cld
pop
jae
cld
jle
and
and
dec
cmp
fbld
pusha
and
lret
pop
stos
inc
and
sbb
fidivs
mov
adc
fldt
loopne
sbb
xchg
pop
pusha
daa
adc
lahf
cmp
rcll
imulb
out
cli
inc
lock
xchg
xor
insb
adc
adc
jecxz
loopne
fidivrs
mov
push
jl,pt
pop
xlat
ja
das
cmc
and
dec
xchg
pop
mov
cmp
and
shlb
inc
rorl
mov
mov
add
cmp
cs
lea
fsubr
inc
std
addb
gs
les
jp
and
inc
jns
jb
pop
sbb
cli
in
insb
jg
xor
pusha
loopne
into
loope,pt
inc
jne
loopne
test
mov
adc
inc
enter
in
push
andb
loop
mov
jno
xor
dec
cmp
pop
pop
xor
pop
xchg
inc
rcr
mov
rolb
mov
movsb
rolb
push
or
daa
jmp
ja
cmp
stos
mov
scas
loopne
sahf
jle
mov
shlb
das
addr16
fwait
pop
mov
loopne
loope
mov
sbb
add
mov
inc
cmpsb
pusha
rclb
cmp
adc
mov
mov
or
shlb
in
and
mov
sti
add
add
fisttps
imul
rolb
jg
popf
dec
jg
in
call
mov
mov
rclb
mov
std
das
rorl
loopne
sbb
pusha
mov
dec
je
int
mov
arpl
xchg
jl,pt
or
addr16
cmp
pop
int
mov
pop
mov
shlb
cltd
shrb
inc
and
loopne
les
push
or
pusha
pusha
test
inc
push
loopne
insl
sbb
mov
adc
jg
pusha
and
add
pusha
loopne
loopne
inc
pop
int3
hlt
pop
ja
xor
dec
das
icebp
inc
rclb
push
mov
jbe
xchg
xor
test
and
filds
loopne
out
loopne
call
or
mov
inc
imul
push
popa
and
dec
mov
arpl
inc
int3
dec
dec
or
or
and
and
arpl
in
cmp
stos
add
stc
mov
loop
mov
lods
jecxz
jl
outsb
es
xchg
inc
xchg
mov
xchg
movsb
loopne
ret
imul
mov
pusha
mov
cmc
mov
dec
mov
dec
push
mov
dec
or
cmpb
and
and
mov
push
jecxz
shr
and
rcrl
loopne
and
or
out
js
pusha
mov
inc
out
fwait
rol
add
add
jo
bound
add
in
inc
or
test
pusha
lock
dec
adc
mov
inc
popa
mov
or
mov
sub
adc
xchg
lcall
push
inc
mov
stos
inc
and
int3
enter
xor
pusha
add
arpl
lahf
mov
shlb
mov
lods
shl
mov
jno
jae
jb
xor
mov
adc
add
sarl
icebp
popa
shll
or
push
mov
adcl
pusha
mov
jg
mov
jae
das
icebp
jae
movsl
ss
pusha
mov
stc
aas
and
decl
fimull
pusha
jb
dec
jae
cmp
das
push
mov
and
scas
mov
mov
pop
mov
add
popa
loop
insb
in
pop
add
call
cmp
imul
imul
fstpt
adc
lahf
add
add
out
sub
pop
and
test
add
js
addr16
aam
fs
mov
stos
cmp
add
cmpsb
pusha
mov
mov
dec
shlb
dec
sahf
inc
mov
call
adc
shl
add
mov
out
addr16
imul
sub
add
mov
or
dec
fcomps
imul
fistps
pop
or
and
inc
in
out
imul
adc
rcr
int3
and
xorb
arpl
xchg
test
ficompl
mov
adc
inc
xchg
imul
pop
xchg
cmp
mov
shl
mov
add
add
loop
movsl
imul
into
rorb
lret
sti
jmp
lds
mov
or
popa
mov
test
xor
inc
paddsw
add
and
pusha
les
sarl
test
mov
sub
lret
mov
jmp
inc
pusha
mov
into
pop
nop
arpl
ret
fs
lods
inc
and
out
pop
vpsubb
cmp
test
add
pushf
jo
dec
cmc
cmpsl
add
xlat
lea
mov
push
loop
jg
sbb
pusha
and
xlat
inc
inc
arpl
add
add
imul
ljmp
xor
pusha
inc
inc
inc
mov
outsb
xor
jecxz
shl
xchg
pop
daa
lret
or
roll
mov
xchg
fidivl
adc
lods
mov
cmp
mov
mov
ret
mov
sbb
insl
gs
aam
pusha
shlb
test
xor
mull
je
inc
xlat
xor
addb
sti
jmp
cmp
push
and
mov
inc
loopne
fdivrp
adc
pusha
loop
add
scas
andb
sub
add
and
adc
xabort
jl
jecxz
add
add
mov
dec
pop
mov
and
lds
mov
aam
rcrb
mov
pusha
imul
sbb
push
pusha
sarb
lods
lret
sbb
fsubs
repnz
xchg
jnp
movsb
and
lcall
loopne
mov
xlat
push
jecxz
or
add
inc
mov
out
cmpsl
xchg
addr16
push
or
imul
mov
addb
cmp
int3
ret
cld
dec
aaa
cltd
scas
inc
shrb
push
add
sbb
out
aad
and
push
std
jg
push
clc
sbb
cltd
mov
or
fs
mov
and
and
mov
rolb
pop
cs
loope
ret
daa
insl
pop
pusha
movsb
and
mov
cmp
inc
lods
fstpt
sub
pusha
jmp
xorl
shlb
mov
mov
pusha
aas
bound
cmp
andb
rolb
pop
jmp
jmp
loopne
shlb
cmpsl
mov
jno
push
rcrb
loopne
mulb
push
sub
lcall
js
mov
jmp
cmc
sub
adc
mov
sbb
inc
shr
fsubrl
and
bnd
adc
lret
fs
rolb
dec
mov
pop
out
int3
jl
dec
lret
call
in
sbb
dec
ss
xor
pusha
inc
cmpsb
rol
dec
movsl
pushf
push
add
mov
cmc
push
mov
adc
cs
mov
xor
jns
outsb
add
mov
xchg
lock
ret
loopne
or
sub
mov
jl
jmp
ds
addr16
pop
inc
cmp
dec
inc
js
or
add
jp
flds
rolb
andb
loopne
mov
inc
and
add
xor
rolb
call
adc
inc
dec
sarb
out
jp
aaa
dec
bsr
stos
shll
xchg
cmc
mov
jmp
pop
int3
xor
mov
notb
idiv
or
mov
and
pusha
js
pop
sahf
lock
add
adc
add
fisubrl
mov
andb
mov
inc
sarl
outsl
lock
jge
loopne
daa
xor
xchg
push
lock
sahf
rclb
push
sti
test
inc
nop
adc
insb
int
pop
pushf
sub
sbb
testb
mov
lods
shlb
and
inc
mov
adc
cmc
cs
inc
fwait
in
je
adc
notb
mov
adc
push
mov
mov
inc
mov
addb
loopne
insb
sub
cltd
lods
and
pusha
cmpb
push
shlb
pusha
mov
call
and
loope
mov
adc
push
add
ss
lea
repnz
and
adc
dec
add
mov
loopne
adc
xchg
imull
mov
push
cltd
iret
mov
jmp
push
dec
stc
push
gs
and
jno
loopne
push
daa
sbb
add
dec
and
fs
into
int3
inc
icebp
jl
stc
xchg
call
and
and
add
dec
into
cltd
ss
in
mov
jns
pushf
mov
mov
loopne
push
adc
pusha
and
es
je
and
adc
push
inc
pusha
loopne
inc
push
inc
add
mov
cmp
lock
imull
loopne
loopne
xchg
cmpsb
add
imul
add
andb
mov
mov
push
mov
gs
and
sub
xchg
mov
add
add
sbb
mov
dec
jmp
int3
ja
and
cmp
jno
inc
sbb
ljmp
stos
test
out
mov
or
shrb
out
rolb
rolb
sarl
into
push
ud0
or
in
call
mov
add
out
loop
push
mov
push
mov
inc
pushf
push
and
jb
das
inc
xchg
mov
popa
sub
add
test
mov
stc
sbb
shl
outsb
pop
in
lods
inc
and
mov
pusha
mov
pusha
and
jo
adc
cmp
push
fisttpll
or
jle
add
add
arpl
js
lock
shlb
mov
inc
sbb
rolb
pusha
mov
cmp
sub
pop
pop
dec
xor
repz
mov
sti
jae
pop
jo
rolb
add
xor
pusha
dec
add
dec
pop
cwtl
sbb
scas
pusha
add
jp
ret
lea
loopne
pushf
mov
sbbb
rolb
fsubs
ja
push
xor
xchg
dec
cld
sub
inc
stos
mov
sub
xor
dec
in
sub
add
cmp
pusha
mov
lahf
sub
cld
call
xchg
sahf
mov
push
inc
sub
cmp
jns
in
jle
fdivr
ds
and
out
in
jno
xchg
pusha
inc
xchg
add
inc
add
and
in
pop
dec
int
cld
sti
cmp
push
imul
cmpps
arpl
loopne
push
and
cmp
inc
push
mov
fwait
test
sbb
push
mov
xor
pusha
mov
pop
and
shl
pusha
and
push
adc
jbe
lods
cmp
inc
les
and
and
add
and
mov
fildll
add
xor
push
push
mov
mov
dec
mov
ljmp
inc
and
dec
fmul
sbb
mov
loopne,pn
testl
dec
jbe
lock
sahf
adc
dec
xor
insb
in
out
xchg
inc
std
inc
cltd
in
mov
lods
test
jae
push
sub
mov
and
push
scas
mov
mov
pop
stc
mov
mov
add
enter
sub
in
rolb
addb
xor
add
mov
inc
mov
cld
iret
and
mov
xlat
add
cmp
pushf
cld
mov
out
add
adcl
fsubr
pushf
sub
inc
inc
ss
mov
out
fistpll
rol
push
incl
mov
push
jb
icebp
mov
dec
adc
add
pusha
subb
mov
xor
xlat
movsl
movsb
pusha
shrb
rolb
pushf
outsl
mov
adc
inc
add
test
mov
shr
or
inc
pop
sbb
iret
imull
ss
loopne
loope
add
push
jg
loopne
mov
into
and
stos
loopne
lock
jg
fs
mov
push
cmp
repz
xlat
or
pusha
andb
pusha
mov
insl
xor
aaa
fists
mov
add
je
and
stos
andb
jns
xchg
mov
scas
in
iret
ja
push
cmpsb
loopne
mov
ret
scas
addb
cmp
rorb
insl
les
sti
insl
push
dec
xchg
jne
jnp
frstor
add
inc
push
dec
repz
enter
rcl
aam
insl
dec
aam
dec
out
stos
outsl
stos
jns
inc
pusha
fwait
and
mov
addb
cmc
shrb
add
or
push
jno
in
jl
cmpsl
add
add
xor
insl
xchg
cmc
push
pop
adc
add
cli
lods
add
or
pusha
jmp
inc
inc
fsubrl
or
inc
jg
outsl
ds
xchg
ja
sub
pop
cmp
call
mov
stos
pusha
add
mov
jge
xlat
xchg
mov
pop
call
repz
loop
dec
ljmp
loopne
mov
cld
int
mov
loopne
imul
or
dec
shlb
jmp
rolb
add
lcall
mov
pop
dec
pop
and
mov
movsb
mov
sahf
imul
xor
addb
aad
std
sbb
pusha
add
pusha
lahf
jb
fsubrl
fs
and
add
int3
in
pushf
inc
mov
xchg
cmp
mov
call
test
loopne
inc
loopne
andb
shll
or
dec
enter
cmpsb
mov
xor
outsb
test
adc
push
mov
pusha
sahf
andb
sbb
jne
cmp
xor
adc
andb
jl
ja
int3
push
or
xchg
std
sub
movsl
dec
icebp
pop
dec
push
gs
jne
icebp
xor
add
jp
stos
repz
pusha
mov
repnz
cmpsl
enter
mov
adc
and
mov
andb
jne
push
or
stc
clc
sahf
pop
dec
ljmp
lahf
fistl
mov
inc
cmp
je
loop
pop
cwtl
cmp
add
mov
or
and
in
pop
dec
inc
cmp
jb
test
loopne
daa
fsubs
and
pop
sti
lret
idiv
clc
push
insb
dec
inc
loop
loopne
insb
stc
mov
pusha
fcomps
push
add
stos
xchg
add
jo
fcompl
ret
pop
xor
mov
cmpsb
mov
pop
sub
pusha
repz
mov
sti
movsl
popa
loope
cmp
pop
inc
cmp
movsb
loopne
outsb
adc
shrb
sub
and
insb
jp
lods
add
js
sbb
mov
int
jns
add
mov
ret
out
aam
repnz
shl
push
xor
in
mov
lcall
mov
into
outsl
pop
movsl
in
dec
ret
aas
outsb
rorb
mov
inc
sarb
ljmp
inc
loope
fidivs
aad
sahf
hlt
in
es
pusha
scas
outsl
clc
pushf
cmp
lds
mov
enter
sub
loopne
lcall
adc
rclb
mov
movsl
test
inc
scas
mov
shlb
mov
xchg
divl
sarb
mulb
inc
enter
stc
addb
outsb
imul
out
scas
and
mov
and
cmp
shlb
cwtl
adcl
sub
adcb
ss
and
xchg
fwait
xchg
fidivrl
pop
pusha
jno
pop
fdivrl
mov
loopne
loopne
pop
or
shlb
xchg
mov
das
mov
xor
mov
add
mull
andb
insb
js
icebp
push
jnp
cmpsb
inc
rorb
lea
adc
inc
mov
sbb
mov
lret
inc
and
inc
shrl
imul
dec
mov
jg
ret
mov
fiaddl
pusha
sub
inc
loopne
ss
lcall
jnp
and
and
pop
bswap
das
les
adc
ljmp
shl
sub
rol
mov
adc
mov
push
pusha
and
out
icebp
adc
outsl
shl
xchg
lcall
and
mov
pusha
cmpb
lods
mov
not
movd
sub
mov
int3
xor
mov
popa
inc
dec
int3
sbb
shll
push
dec
cltd
pop
adc
sub
sarb
add
push
or
loopne
outsl
cmp
rcr
sub
add
mov
dec
mov
leave
ds
xchg
mov
shll
rolb
mov
in
pushf
mov
inc
mov
sub
dec
cmc
jle
xor
js
dec
test
aaa
mov
ja
pop
lods
rolb
push
sub
addb
in
mov
shl
dec
arpl
mov
add
jbe
pushf
imul
cmp
popa
fisttpl
outsl
ficompl
leave
jbe
xchg
inc
push
inc
out
add
ja
insb
pop
push
sbb
dec
mov
sub
sbb
imul
mov
sbb
dec
cmp
stc
in
aad
call
inc
filds
fldcw
dec
ror
sub
std
outsl
hlt
rol
pop
mov
dec
pusha
rorl
rolb
ljmp
adc
int3
and
sti
push
shlb
int
loopne,pn
mov
shlb
inc
jmp
push
mov
shlb
push
cmp
mov
iret
mov
push
mov
pop
inc
mov
pop
mov
and
loopne
xchg
mov
cmpb
add
in
jno
leave
int
dec
aad
addr16
scas
loopne
out
xlat
sbb
loopne
jge
jle
shlb
adc
add
in
inc
test
jmp
xlat
imul
inc
pusha
out
test
adc
loopne
repz
shlb
add
cli
jle
cmpsb
and
inc
in
jle
movl
push
add
pop
repnz
push
fistpll
push
mov
std
add
inc
nop
xor
pop
loop
sub
xchg
sbb
adc
inc
mov
in
inc
dec
lods
into
and
push
mov
add
mov
cltd
enter
sbb
lock
sub
rdmsr
adc
sbb
ss
lahf
push
inc
dec
test
fwait
dec
push
mov
lret
jle
es
js
add
fdivs
aad
cmp
loopne
push
insl
ja,pt
pop
out
jbe
inc
les
xchg
in
cmp
inc
xchg
ss
adc
sub
adcb
adc
mov
gs
mov
sahf
fldcw
add
adc
add
sbb
xor
mov
dec
add
icebp
add
addb
out
loopne
cwtl
push
jp
lret
out
fmulp
inc
popf
js
loope
xchg
sbb
add
loopne
pop
add
mov
sar
push
lret
rcrb
aam
rcll
sbb
pop
jl
cmp
lds
or
lret
jmp
cs
xchg
push
fcom
insb
pop
jp
lock
pop
es
ds
mov
test
add
and
loopne
and
xchg
mov
mov
jns
rcl
jmp
inc
aam
scas
test
and
pop
repnz
rolb
sar
hlt
and
addb
add
jne
cltd
jo
in
sub
and
sub
inc
daa
xorl
push
push
xor
out
pop
and
xor
and
stos
loopne
imul
rolb
pusha
add
and
adc
mov
xor
mov
sbbb
inc
rclb
sub
mov
ss
or
mov
adc
mov
mov
jae
fstps
out
in
cmp
and
imul
add
pusha
sbbb
addb
mov
inc
mov
hlt
push
pushf
out
xor
inc
cmp
xchg
jb
and
xor
outsl
pop
mov
mov
and
out
mov
add
idivb
ja
mov
dec
sub
pusha
pusha
js
pusha
rorb
adc
mov
or
loopne
xor
add
rcrb
mov
call
jmp
or
cmp
mov
int
aad
pusha
shlb
jno
sub
dec
push
aaa
xchg
sbb
ret
not
and
mov
inc
divl
pop
cmp
push
insb
xchg
inc
repz
xchg
sbb
sarb
push
push
push
add
push
add
add
pop
call
inc
jle
mov
iret
jecxz
loopne
repz
inc
sub
lahf
out
inc
pusha
or
and
inc
add
clc
lds
push
mov
nop
or
in
aaa
lahf
mov
flds
dec
lret
shrb
cwtl
jbe
inc
add
lds
inc
mov
shrl
fbld
sub
add
xchg
dec
sub
and
je
add
mov
nop
sbb
int
sub
fisubrl
loop
je
stos
lahf
mov
jl
andb
shrb
into
xchg
adcl
adc
xchg
jmp
les
xchg
sub
scas
dec
jmp
add
pusha
pop
pusha
dec
jl
and
dec
jno
shlb
sar
stos
and
and
rcl
jecxz
cmp
addb
ljmp
test
aam
pop
iret
inc
sub
je
and
andb
sbb
flds
xchg
inc
in
test
loopne
andb
pop
jle
sub
add
imull
mov
popl
imul
mov
testb
pop
in
mov
dec
subl
outsl
xor
in
daa
fidivrs
int
pusha
loopne
and
add
loopne
mov
add
rclb
lret
adc
and
fnstsw
subl
pop
jno
cld
mov
cmp
into
out
mov
shlb
push
jns
out
pusha
mov
add
fwait
add
mov
mov
cli
fisubl
xchg
aad
iret
cmc
fsubs
push
hlt
aas
rorl
mov
push
ror
in
imul
movsl
fdivs
cmp
loopne
shrb
and
outsb
movsl
add
xorb
or
loopne
pop
lock
xorl
mov
incl
pop
cmp
clc
inc
dec
cwtl
pusha
mov
pminsw
push
pusha
inc
out
or
sahf
stos
loopne
push
mov
pop
add
cmpsb
addb
mov
sbb
adcb
or
inc
mov
imul
loopne
notb
sarb
inc
das
test
loopne
and
js
addb
xchg
out
mov
ficomps
add
dec
vprotw
adc
mov
adc
test
cmpb
push
push
out
andb
stos
outsl
addr16
in
repz
inc
dec
inc
push
jns
andb
push
mov
enter
std
dec
xchg
sub
mov
add
mov
leave
ret
and
pusha
and
xchg
cmp
insl
fwait
out
jns
mov
rol
xor
adc
xlat
fs
xor
push
and
add
jnp
inc
mov
mov
std
mov
hlt
cld
adc
test
sarb
xchg
mov
into
and
leave
scas
add
mov
leave
push
js
inc
inc
ja
shlb
inc
mov
and
or
addb
fildl
loopne
ret
in
enter
cmp
jle
ja
pop
outsl
leave
dec
and
mov
cs
pusha
mov
cmp
andb
gs
sbb
mov
into
hlt
or
adc
jb
jge
leave
popf
fistl
add
loopne
push
mov
add
cmpb
jno
pusha
loopne
popf
test
dec
mov
mov
sbb
test
cmc
rorl
push
add
test
jmp
mov
aaa
pop
mov
sbb
loopne
enter
popf
inc
test
aam
or
repnz
inc
adc
adc
sub
jb
xchg
or
add
popf
cmp
mov
stc
xchg
call
pop
scas
or
subb
or
in
clc
mov
mov
icebp
mov
cmpsl
les
mov
in
repz
loopne
sbb
jbe
out
loop
push
mov
or
xchg
pop
push
nop
xchg
loopne
add
and
int3
adc
inc
pusha
clc
int3
cmp
mov
jno
hlt
addl
pusha
enter
cwtl
mov
mov
cmpsl
and
inc
push
and
or
incl
dec
int3
dec
notb
daa
loop
mov
xor
inc
rcrb
imul
sbb
jmp
loop
pop
xchg
sub
incl
pop
in
ficoml
test
inc
lret
int
sbb
cmpsl
dec
nop
or
mov
ds
inc
rcrb
mov
pop
jne
addl
fisttps
pusha
subb
xchg
shlb
lea
sub
mov
jmp
push
addb
cld
jle
and
mov
ja
pop
enter
xchg
and
shlb
loopne
add
rcrb
jp
imul
add
rorb
sub
add
pop
inc
cmp
adc
daa
dec
mov
movl
xor
mov
ret
mov
sbb
or
pusha
mov
daa
mov
clc
jb
mov
inc
flds
cmp
cmp
ret
lea
pop
into
lahf
sub
js
cwtl
mov
cwtl
in
and
loopne
bound
ficomps
pusha
pusha
fldl
cmp
sub
lret
dec
sub
andl
loop
ficomps
or
aad
stos
notl
mov
pusha
adcb
inc
push
lds
mov
out
lcall
jns
add
vpmaskmovd
rorb
int3
lcall
movsl
iret
mov
lret
mov
and
aas
fistps
sbb
xlat
push
imul
mov
cmp
shlb
mov
add
jge
and
dec
pop
xchg
xor
inc
add
movsl
pop
in
adc
lea
xlat
popl
mov
sub
cmp
pop
inc
scas
sbb
shlb
jmp
hlt
or
add
test
clc
test
fwait
xchg
aaa
add
push
lods
mov
das
push
cmpsl
inc
orl
xor
or
loopne,pn
ret
hlt
into
ficompl
adc
pusha
aaa
jp
sub
mov
push
pop
xchg
inc
or
and
movsb
add
lcall
push
and
mov
rolb
call
pushf
sub
mov
sub
cmp
sub
mov
fdivrl
movsl
fcompp
cmc
fiadds
mov
inc
js
arpl
add
inc
sub
pop
lds
pusha
shlb
sti
dec
clc
jae
call
xor
loopne
mov
inc
rcr
arpl
or
and
sub
mov
jnp
jg
rolb
jae
mov
movsl
sub
inc
xchg
notb
movsl
push
adc
add
add
and
fdivs
and
loopne
pop
int3
jne
pop
lret
mov
pop
in
incb
loopne
xor
inc
cs
cmc
fildll
add
or
and
sbb
inc
adcb
and
shrb
sub
shll
inc
mov
lahf
adc
roll
xchg
test
and
pop
jg
push
jp
and
push
call
lea
loopne
pop
xchg
shrl
scas
jns
daa
inc
jle,pt
mov
ficompl
loop
inc
outsl
fnsave
mov
inc
inc
pushf
js
mull
loopne
andb
imul
mov
and
scas
mov
fnsave
push
mov
mov
jmp
or
add
fmulp
mov
mov
in
mov
mov
aad
xlat
add
sar
fdivl
lret
add
add
xchg
dec
dec
adc
add
rcrb
stos
mov
xor
push
inc
outsb
sbb
adcb
addb
dec
mov
test
stc
push
in
divl
mov
sub
inc
inc
fcos
enter
mov
pushf
push
imulb
pusha
add
movsb
inc
and
in
mov
cli
jl
lods
mov
outsb
sub
mov
and
adc
outsl
mov
inc
jmp
sub
adcb
pusha
inc
inc
push
mov
sbb
mov
inc
scas
andb
cmp
into
stos
test
outsl
mov
cmp
and
mov
xchg
rorb
sbb
inc
in
int
push
jns
mov
mov
push
xchg
fdivs
bound
lahf
in
das
mov
aam
pusha
mov
test
sub
lock
lock
addr16
fdivr
aam
jle
imul
loope
fildl
add
rorb
inc
adcb
xchg
insl
in
addr16
icebp
pushl
jl
scas
pusha
sar
clc
out
das
inc
add
xchg
pusha
xor
or
sahf
cwtl
adc
int3
mov
outsl
cmp
fwait
pop
inc
xadd
jg
mov
mov
loopne
addr16
loope
outsb
dec
pop
add
pusha
repz
add
insl
adc
orb
addb
adc
gs
sbb
insl
rolb
je
sbb
ja
andb
enter
sbb
out
xlat
mov
das
inc
call
jmp
jnp
mov
cwtl
xchg
outsl
mov
dec
sub
shlb
shlb
jp
mov
and
or
and
loop
dec
or
and
sbb
rorl
xchg
sti
push
fucomip
call
arpl
mov
gs
and
adc
xor
add
rol
fdivl
or
adcb
aas
pop
cmc
push
mov
rcr
jne
movl
add
repnz
pushf
loop
push
dec
shl
sub
andb
xor
mov
mov
inc
push
pusha
xchg
pusha
pop
sbb
pop
jl
xor
fisubrl
pop
inc
aaa
lcall
test
shrb
stos
mov
sub
add
loopne
andb
stc
mov
imul
push
mov
in
sub
loopne
andb
sbb
fld
inc
mov
mov
or
rorb
les
loopne
hlt
pop
mov
dec
sub
out
das
xchg
mov
mov
aas
repz
inc
mov
add
lret
mov
adc
aaa
pusha
adc
jg
loopne
mov
adc
dec
scas
inc
and
pop
loope
addb
pop
imul
popf
iret
add
adcl
inc
mov
add
push
and
je
inc
cmp
inc
mov
rclb
add
pusha
xor
lea
adc
frndint
js
sti
out
rcl
ret
sbb
cmc
out
pushf
jae
test
mov
jae
lret
push
lock
loopne
jmp
xor
xchg
mov
mov
das
jp
shlb
mov
adc
xor
std
sbb
or
pusha
and
int3
push
outsb
adc
pop
mov
les
stc
inc
adc
mov
pop
addr16
sub
addb
das
pop
stos
mov
mov
sbbl
arpl
pop
mov
xorb
fs
sub
aas
andb
dec
sub
mov
pusha
pusha
addb
test
and
inc
rolb
pop
in
push
mov
into
popa
pop
lret
je
repnz
mov
add
jns
inc
xchg
dec
ret
mov
or
loope
test
sbb
in
ljmp
jl
mov
popa
lods
mov
sbb
xchg
mov
cltd
cmp
jp
pop
pusha
ja
js
xchg
lods
addr16
enter
mov
sbb
mov
dec
mov
sbb
mov
add
push
call
jmp
out
inc
jl
jbe
test
add
lods
and
dec
pop
pop
xchg
cmp
inc
decl
mov
xchg
je
lcall
xchg
xor
mov
push
loopne
fisttpll
and
je
call
mov
add
test
add
loopne
mov
and
loopne
popa
pop
push
test
pusha
adc
push
ret
mov
inc
pop
sbb
rcrl
lods
and
cmp
or
inc
xor
aad
imul
in
xor
imull
hlt
nop
or
xor
inc
ds
jb
inc
rcrb
lret
andb
push
mov
jns
jg
loop
loop
ljmp
mov
sub
and
and
jmp
fiadds
pusha
jnp
xchg
movsb
add
mov
jns
mov
lods
andb
and
pusha
imul
loopne
xor
and
pusha
pusha
jbe
addb
insl
scas
dec
adc
aas
push
hlt
sub
and
jmp
andb
popf
mov
pop
lret
xchg
cmp
mov
pusha
lcall
shll
cld
jecxz
mov
add
xor
inc
pusha
push
loope
je
rolb
cltd
aam
shr
fsubrs
loopne
dec
push
xlat
push
iret
push
inc
pusha
mov
insl
sub
dec
mov
dec
aas
push
inc
adcb
and
sti
jne
adc
repnz
gs
loopne,pn
js
xlat
or
inc
je
pop
mov
and
jle
loopne
scas
outsb
shll
inc
pusha
or
add
dec
out
pop
rcr
scas
rolb
push
icebp
xchg
adc
pusha
add
mov
scas
mov
shl
movl
imul
std
sti
push
add
sahf
push
sub
mulb
insb
out
movsb
mov
inc
and
inc
add
loopne
out
xor
sahf
mov
leave
sbb
bound
imul
rcr
sub
jns
in
repz
xlat
mov
popf
out
mov
hlt
repz
push
loopne
and
rol
push
outsl
out
pushf
mov
test
loopne
leave
or
addb
out
loopne
mov
aas
xor
dec
rclb
xor
inc
loopne
push
jge
xchg
mov
pusha
fisttpl
mov
dec
call
sete
dec
inc
jbe
pop
test
sbb
loopne
dec
mov
sbb
aam
mov
and
pop
mov
pusha
and
loopne
loopne
lcall
and
xchg
xchg
movsl
nop
sbb
mov
inc
push
fldt
mov
pusha
inc
push
pusha
cmpsl
test
add
jge
xchg
pusha
lods
inc
addb
enter
mov
cmp
jmp
leave
mov
inc
lcall
andb
mov
rorb
pop
add
loopne
daa
add
mov
loopne
sub
xor
les
adc
cld
mov
ds
divb
xor
loopne
mov
mov
sbb
and
add
pop
xchg
mov
pop
inc
sub
pop
loopne
shrb
and
push
loopne
or
fdivl
dec
sbb
cld
iret
add
inc
sarb
mov
es
sub
xchg
adc
add
mov
inc
in
cs
shlb
sarb
inc
inc
fwait
pusha
jp
push
mov
and
jno
mov
cld
and
cmp
stos
mov
cmp
adc
rcrb
pop
stos
gs
lret
inc
lods
mov
mov
pop
filds
xor
cmc
mov
shl
test
xor
repz
xchg
add
loopne
repz
mov
arpl
andb
mov
sar
xchg
fcoms
icebp
and
je
shlb
push
jns
mov
cmpsb
mov
pop
aas
or
inc
or
lcall
sbb
mov
loopne
inc
inc
faddl
loopne
lret
lret
sbb
lods
jae
mov
or
shl
addb
cmpsl
and
sarb
jb
add
mov
cmp
lea
xchg
loopne
jo
mov
aam
jge
jmp
mov
rol
or
std
shlb
pusha
and
push
sbb
mov
gs
scas
add
inc
mov
and
mul
repz
xor
cli
push
gs
inc
xor
jmp
add
ds
repnz
cmp
pop
pop
mov
pusha
shlb
cmpl
andb
inc
add
loopne
mov
xor
adc
jae
stos
add
cmp
movsb
rolb
mov
outsl
repnz
loopne
ret
data16
inc
xlat
pop
mov
mov
loopne
inc
fdivrs
out
jecxz
shlb
leave
and
add
pusha
nop
inc
or
loopne
cmp
out
lret
cmp
add
shlb
int
movsb
add
int
xor
movl
add
mov
pusha
add
rolb
in
adc
or
daa
mov
and
loopne
addb
mov
inc
jne
dec
push
loopne
xchg
andb
inc
addb
xchg
pusha
cmpsb
pusha
and
inc
arpl
lret
pop
sar
dec
enter
pop
fs
mov
loopne
ja
cmp
mov
rcrl
jge
add
addb
add
pusha
and
xor
dec
leave
dec
sub
aaa
add
test
cmpb
out
inc
in
jl
jbe
mov
fistl
pop
dec
cmp
cli
cld
dec
or
loopne
push
adc
adc
push
mov
dec
cwtl
or
loopne
inc
fcmovu
les
sbb
add
rolb
mov
mov
dec
andb
loopne
push
jecxz
js
mov
xchg
mov
andb
inc
dec
pop
fwait
int
sbb
aam
adc
sti
loope
in
es
or
or
sbb
push
mov
mov
dec
cmp
fisubrs
jge
and
aad
add
mov
in
rolb
or
add
cmp
inc
jg
nop
popf
pop
lahf
xchg
mov
inc
loopne
sbb
add
int
je
mov
jmp
addr16
xchg
mov
and
gs
mov
mov
mov
inc
add
adc
addb
xor
and
lret
xor
mov
shrb
in
add
addb
loopne
and
sub
stos
inc
mov
xor
xor
clc
push
push
fadd
xchg
inc
mov
pop
inc
repnz
ds
lahf
outsb
aam
in
pop
popa
pop
andb
dec
sti
mov
rolb
loopne
daa
fstl
ljmp
pop
test
in
ss
sub
daa
xchg
int
dec
inc
ja
and
add
sahf
jl
xor
jecxz
mov
ret
cltd
xor
mov
xchg
add
and
xchg
lods
or
dec
cmpsl
adc
add
jmp
out
into
mov
int3
insl
mov
sub
loopne
push
lea
pusha
and
mov
pusha
rcrb
adc
std
mov
inc
or
and
repnz
inc
jne
rolb
shl
push
jae
fwait
xchg
jp
mov
loop
inc
rcl
jmp
fldt
les
dec
adc
repz
adc
xchg
insb
ss
add
and
imul
mov
mov
add
aad
cmp
andb
dec
pop
repnz
add
and
cld
roll
or
cmp
in
mov
dec
movsl
popa
mov
dec
add
addb
movsl
mov
shll
mov
mov
insl
cmp
insb
jecxz
and
push
push
repnz
ja
mov
pop
dec
lcall
pusha
pusha
pop
inc
js
movsb
add
mov
and
cmp
xlat
sbb
pop
sbb
mov
sbb
mov
dec
inc
sub
add
aas
cmp
mov
cmp
jo
dec
addr16
call
inc
inc
adc
jbe
shl
mov
mov
dec
nop
frstor
sbb
push
add
leave
std
push
jle
and
dec
addr16
rcl
nop
mov
add
mov
fs
out
inc
insl
fwait
pop
sarb
xor
push
fadd
repnz
pop
sbb
les
imul
xor
inc
repz
out
cmpsb
andb
clc
cld
inc
mov
xchg
adc
shlb
jg
push
jo
insb
or
loopne
call
xchg
scas
push
int3
ss
mov
mov
mov
stos
adc
and
mov
mov
and
cmc
cmp
data16
cmp
jb
fs
fmuls
rol
push
push
mov
jecxz
scas
adc
dec
push
inc
iret
bound
or
mov
loopne
xchg
jnp
movnti
and
aaa
cmp
jnp
stc
pop
inc
repnz
movsb
add
mov
movsb
pusha
add
cmp
inc
addl
mov
push
fsubrp
mov
mov
aam
mov
mov
inc
leave
ficoms
sub
pusha
das
push
add
push
daa
sahf
pop
inc
rclb
andb
repnz
mov
cltd
aas
cmp
popf
in
mov
mov
loopne
cmp
fists
jnp
fstpt
inc
xchg
jnp
sbb
and
mov
test
orb
leave
adc
shr
inc
lcall
js
push
or
sub
jb
mov
daa
push
loopne
out
cmpsl
push
mov
out
in
add
movsl
out
loope
sbb
or
mov
loopne
sub
or
js
insb
xor
aam
mov
add
fidivl
rorl
fucomp
sub
fildll
mov
stos
loopne
mov
xor
mov
shl
xor
pop
mov
icebp
mov
inc
add
jno
pop
rorb
fisubrl
push
pusha
loopne
and
and
mov
and
lds
jbe,pt
and
shll
jecxz
inc
xchg
push
icebp
iret
jb
cmpsb
rol
xchg
test
inc
popa
mov
pop
mov
xor
cmpsl
inc
popf
lret
mov
and
xlat
mov
pusha
and
fmull
mov
dec
cmp
inc
or
icebp
fistps
cmp
and
adc
shll
cltd
adc
loopne
pusha
pusha
addr16
push
loopne
xchg
cmp
rorl
xchg
jge
fsts
loopne
rolb
and
xor
mov
sbbb
sub
pop
ds
mov
popf
sub
je
and
inc
or
pusha
dec
and
push
pusha
pusha
addr16
pusha
or
sub
xchg
int
ja
pusha
loopne
jge
clc
cmc
xor
jae
push
loopne
sbb
in
xor
mov
das
in
push
aad
lahf
out
adc
dec
and
and
or
imul
int
repz
xchg
lds
imulb
and
mov
pop
mov
push
pop
cltd
popf
pop
ret
aam
call
cli
adc
fldt
inc
pusha
lods
rolb
sbb
pusha
mov
jg
loopne
pop
rcll
mov
outsb
rcll
cwtl
cmc
jo
outsb
shlb
shlb
cmp
pop
mov
mov
jge
jbe
mov
jo
andb
inc
stos
push
inc
shrb
push
mov
xchg
cltd
inc
push
xor
and
div
out
xchg
adcb
inc
test
mov
lods
out
add
inc
or
or
cmp
std
inc
jnp
or
call
pusha
nop
inc
add
loop
ret
jle
sbb
inc
enter
add
subb
les
popa
add
and
pusha
inc
push
cmpl
xchg
ja
shlb
xchg
movsb
add
imul
cmp
call
cmp
dec
and
hlt
mov
pop
or
imul
fcmovnbe
movsl
cld
inc
push
mov
adc
inc
sti
sub
sarb
loopne
push
add
sbb
mov
mov
inc
inc
xchg
loopne
loope
out
pushf
mov
fs
xchg
lods
mov
and
loopne
data16
add
scas
inc
and
mov
and
pusha
add
mov
cmp
inc
insl
orl
jle
mov
push
pop
ret
add
fstpl
cmp
into
out
call
arpl
cmp
loopne
out
cld
ret
sbbl
sbbb
popl
pop
out
das
adc
pop
push
movq
add
repz
loopne
adc
and
lret
push
adcl
pop
fwait
popa
insb
aas
mov
mov
adc
pusha
adcb
sbb
xor
and
aaa
mov
fdivrs
aad
xchg
fs
mov
dec
mov
or
pop
ss
out
xchg
jecxz
in
je
and
add
mov
pusha
out
push
fildl
add
fisttpll
sbbb
ret
sub
and
cmpb
sub
out
imul
lods
and
add
pusha
enter
and
fucomp
or
add
shlb
or
adc
jnp
inc
adc
jo
jle
fsubr
sub
mov
inc
mov
mov
cmpl
add
mov
loop
mov
call
cmp
out
cmp
mov
enter
scas
sub
cmp
out
lahf
es
subb
sarb
xlat
cmp
add
add
sbb
jb
dec
sbb
jl
xor
pusha
add
lahf
shl
clc
mov
mov
push
xchg
inc
mov
je
andb
fcomps
pop
hlt
sbb
cmp
xchg
dec
jnp
pop
jmp
adc
mov
xchg
iret
cli
popa
stos
mov
lods
cmp
cmpsb
rolb
jns
mov
scas
hlt
daa
movsl
negl
int3
xchg
movsl
jno
xchg
xchg
xchg
dec
imul
rolb
fdivs
mov
inc
and
fistpll
cs
rcr
clc
daa
dec
popf
push
inc
loopne
pop
inc
push
inc
xchg
sbb
adc
xor
addb
in
andl
dec
cmp
out
push
scas
inc
rclb
add
xlat
dec
cmp
add
fs
cltd
sti
insl
sbb
pop
jae
enter
add
and
andb
shrb
mov
mov
add
pop
xchg
pop
and
mov
xchg
shl
test
gs
andb
dec
aaa
push
repz
dec
jmp
addr16
pusha
cmp
js
bound
movsl
out
pushf
jecxz
addr16
shrb
pusha
jnp
jmp
mov
jecxz
jns
add
test
jl
and
or
and
out
dec
cs
mov
xor
push
and
mov
inc
mov
adc
mov
lds
mov
rclb
fists
push
dec
pop
mov
jecxz
adc
shl
xchg
mov
cli
cmpsb
add
push
data16
cmp
mov
fcomps
loopne
adc
push
andb
aad
add
pop
mov
add
pusha
shrb
push
mov
mov
push
jae
ja
movb
sub
cmp
call
add
push
std
iret
adc
dec
stc
add
cwtl
psraw
mov
mov
xor
cmp
fstl
cld
aad
fadds
and
cmp
sti
xor
inc
aam
pop
jg
mov
stos
loopne
scas
add
inc
ss
test
mov
add
mov
cmp
rcr
loopne
add
push
sub
shll
lcall
ds
loopne
mov
shl
or
pusha
bound
ljmp
xchg
aaa
insb
movsl
pop
andb
push
sarb
stc
inc
bound
add
repnz
add
dec
mov
ret
pop
lcall
or
add
jle
mov
add
add
cmc
mov
stos
repnz
pusha
cwtl
add
mov
aad
roll
adc
mov
es
rorb
andb
das
xor
mov
jl
sbb
pusha
mov
xchg
dec
fisttps
lock
xchg
and
pop
push
pusha
rorb
bnd
shlb
pusha
ret
in
icebp
adc
jp
inc
popa
adc
inc
cmp
cmp
sbb
xorb
loopne
cmpsb
addb
dec
inc
push
int
push
push
mov
pusha
in
jg
push
adc
insl
mov
repz
and
mov
std
cld
mov
pmuludq
mov
pop
push
pmaxub
andb
cld
mov
dec
arpl
sarb
mov
cmc
call
es
inc
pop
stc
sub
test
add
inc
mov
and
jne
test
pusha
jae
lcall
shlb
int3
adc
jae
jge
sub
cwtl
and
add
xchg
je
jl
mov
loopne
mov
or
xor
sub
and
mov
loopne
mov
sub
lds
xor
rol
cmp
add
dec
jne
xor
push
adc
lds
cmp
cmp
addps
push
jno
pusha
insb
fnstsw
push
inc
dec
into
pop
jnp
jae
mov
popf
xor
ds
pop
mov
clc
movsl
ja
outsb
out
cmp
jb
out
push
loopne
mov
and
jbe
loope
andb
rcll
adc
xor
dec
mov
and
loopne
mov
fwait
mov
cmpsb
add
into
dec
sub
out
popf
inc
push
pop
dec
mov
pusha
ficoml
mov
pusha
pusha
enter
sahf
xor
test
xchg
pop
enter
xor
cmp
rcll
scas
lock
fwait
and
add
xchg
cmp
lcall
pop
cld
dec
jp
xchg
cmp
push
aas
in
or
and
jnp,pt
xchg
loope
out
aam
xor
lret
adc
pop
andb
sahf
push
out
adc
mov
and
aad
into
add
sbb
fstps
rcll
lcall
aad
lea
mov
scas
jne
inc
std
dec
fsubrl
les
mov
ljmp
adc
pusha
adcb
jbe
push
je
movsl
into
pusha
pusha
mov
adc
xor
cwtl
and
int
stos
ret
dec
aad
shl
sti
xor
or
mov
enter
arpl
cmc
jmp
js
fcomps
jb
and
scas
cmp
fs
and
in
cmpl
push
arpl
loopne
mov
xor
and
rclb
das
xlat
inc
dec
jle
ss
xlat
xor
and
fnsave
enter
mov
loopne
lahf
dec
lock
lock
add
jg
das
sub
cltd
mov
adc
dec
xor
push
xchg
inc
mov
inc
in
int3
mov
das
in
mov
pop
inc
xlat
call
and
popf
stos
cmp
int
aas
fistpl
clc
xchg
dec
ds
and
test
subl
or
rolb
xor
inc
test
pusha
loopne
mov
in
dec
sub
push
sub
mov
outsl
mov
dec
and
scas
arpl
sub
test
inc
cmp
mov
and
je
xor
mov
cmp
rcrb
shl
inc
fsubrs
sarb
mov
mov
movsl
cmp
push
enter
mov
jecxz
xor
lock
dec
mov
popa
lret
loopne
call
jb
pop
mov
push
mov
add
inc
jae
out
cmp
sahf
jno
test
jg
mov
adc
mov
inc
lahf
jns
adc
mov
cwtl
mov
das
add
jg
xchg
add
imul
iret
adc
mov
push
add
movsl
xchg
or
mov
push
call
sbb
push
mov
cmp
add
pop
cld
add
lcall
test
shlb
stos
jns
test
into
xor
mov
into
pop
aas
dec
push
jo
lahf
jae
adc
push
repz
lcall
inc
inc
cmp
test
sub
mov
fwait
lcall
cltd
inc
idivl
jecxz
sub
mov
and
lahf
into
mov
pusha
mov
inc
loopne
mov
mov
ljmp
and
adcb
pusha
mov
jg
sub
ja
push
adc
push
addb
mov
testb
out
jp
and
mov
and
push
test
ljmp
inc
adc
loopne
xor
dec
dec
mov
aam
shlb
and
mov
xchg
pop
fisubl
mov
push
lret
outsb
cmp
jne
adc
add
idivl
pop
adc
stos
push
inc
xor
and
shl
loopne
push
ljmp
add
clc
js
inc
loopne
aam
mov
or
loopne
adc
fstl
and
in
push
div
into
js
xchg
mov
rcrb
incb
mov
into
addb
pop
and
inc
and
mov
xor
aam
outsb
jbe
adc
adc
jae
iret
mov
add
mov
mov
rcr
mov
pop
xchg
jb
jb
push
cmp
lods
addb
pop
mov
fst
xchg
or
loopne
popf
pop
out
xchg
lock
jns
insb
jo
mov
cwtl
ja
ljmp
mov
sti
adc
in
mov
and
ds
add
mov
inc
sub
insb
int
and
lea
cmp
jge
and
jbe
sbb
pop
ret
test
repz
add
loopne
inc
and
shlb
cmp
rdpmc
sbb
adc
cltd
les
nop
inc
push
shl
or
xchg
push
stos
shlb
mov
rorb
test
out
sti
push
shlb
sub
lret
inc
pusha
out
mov
add
pusha
pusha
jne
shlb
push
daa
outsl
lcall
inc
pusha
and
or
mov
pushf
push
and
mov
nop
out
inc
pusha
cmpsl
add
mov
inc
mov
icebp
mov
xor
inc
arpl
add
std
pop
gs
lret
lret
pusha
inc
loopne
xor
sub
cmpb
mov
jnp
in
sub
loopne
add
mov
xorl
inc
jbe
adc
mov
sbb
pop
sbb
je
popf
out
std
add
inc
loopne
mov
xchg
in
xchg
inc
jmp
pop
cs
mov
sbb
shlb
pop
sbb
inc
cmpl
outsb
mov
dec
imulb
fwait
mov
inc
rclb
pop
lock
and
jmp
sub
inc
je
ret
lods
mov
cmp
sbb
adcl
dec
xor
jmp
mov
jne
lahf
test
mov
test
jp
shl
pop
inc
inc
imul
loopne
mov
call
notl
add
jecxz
cli
dec
inc
aaa
sub
imul
inc
add
pop
jb
pushf
std
inc
push
and
add
xor
sbb
into
call
add
mov
mov
movsb
shlb
pop
sbb
fsts
mov
ret
sbb
aam
add
inc
das
pop
int
cmc
pusha
rcrb
mov
adc
add
loopne
clc
aaa
pop
clc
inc
pop
push
mov
popf
push
cmpsb
mov
hlt
jnp
inc
adc
xchg
cmpb
fldl
lds
jle
and
mov
pop
in
sbb
movsl
jnp
decl
loope
in
faddl
jecxz
mov
lahf
mov
sarl
movsb
loopne
flds
and
push
outsl
inc
xlat
inc
andb
addb
and
inc
push
cli
dec
pop
in
add
les
jae
dec
add
ret
jecxz
jle
test
or
inc
repnz
jecxz
xchg
jns
or
pusha
cmp
sarb
rolb
bound
jo
push
jno
jl
int3
into
pop
sbb
add
test
shll
inc
loopne
andb
add
aad
iret
repz
sbb
addr16
adc
mov
inc
imul
pusha
test
rcrb
fwait
xor
dec
test
idivb
push
fstpt
add
les
rol
inc
adc
divps
mov
mov
mov
andb
add
mov
inc
push
mov
sub
rcr
adc
mov
test
xchg
sub
frstor
loopne
in
mov
pushf
movsl
rcl
jg
adc
pop
subw
into
jae
loopne
and
cld
mov
and
loopne
sub
adc
mov
adc
lahf
or
loopne
push
xchg
or
loope
sti
dec
popa
sub
xchg
cld
int
loopne
popa
cmp
xchg
insl
mov
mov
and
cli
sub
rolb
push
fstp
pushf
push
add
dec
dec
and
xchg
mov
mov
or
outsl
pop
dec
arpl
inc
roll
push
cltd
push
sub
dec
mov
and
hlt
fidivl
jp
xor
xchg
or
fisubrs
add
xchg
popa
addr16
bound
inc
xchg
out
inc
subl
es
xchg
andb
jb
setg
xor
pushf
xchg
imul
lea
mov
loopne
cmp
mov
mov
insl
ja
adc
pusha
sarb
sti
lret
inc
andb
dec
mov
inc
dec
xor
mov
mov
mov
jl
jae
adc
and
add
and
xor
inc
add
js
into
aad
mov
push
or
cmp
or
mov
arpl
ror
loopne
into
lcall
loopne
loopne
daa
in
call
cli
popa
xchg
test
add
and
xchg
fs
cmp
les
mov
rcrl
xchg
dec
out
ds
lret
mov
addb
sub
setne
mov
mov
mov
jle
ja
mov
mov
push
js
mov
mov
mov
outsl
jne
cmp
out
stc
cwtl
jmp
out
fisttpll
lret
dec
jns
loopne
xchg
ficoml
loop
mov
inc
or
insb
faddl
loopne
ja
sbb
sub
loopne
pextrw
add
push
cli
fcmove
add
sbbb
sub
sub
pusha
loopne
shlb
dec
mov
jb
rolb
pusha
inc
ss
inc
cmp
shlb
outsb
or
pusha
dec
in
xchg
push
hlt
in
cld
mov
lods
add
and
and
mov
pusha
sarl
rcrb
xor
mov
cs
inc
cmp
sub
shlb
add
mov
mov
sti
or
add
bound
mov
shlb
loopne
pusha
dec
mov
into
lahf
cmp
mov
fimuls
jp
lock
cs
inc
subl
loopne
mov
imul
pop
inc
scas
xor
jmp
adc
or
fnstenv
xchg
rol
pop
mov
mov
addb
inc
cmp
call
loopne
inc
or
out
stc
stos
loopne
das
mov
repnz
adcl
andb
pusha
xorb
rolb
andb
and
test
cmp
addb
inc
jg
mov
inc
inc
xchg
out
rep
popf
rorb
adc
icebp
lods
andb
mov
or
fstp
jo
and
pop
push
add
icebp
mov
sub
push
inc
shr
iret
daa
adc
mov
jns
mov
fnstcw
and
mov
mov
arpl
movsb
mov
mov
dec
mov
sub
jp
add
icebp
addb
icebp
shlb
mov
and
aas
shl
std
jb
add
mov
pop
and
loopne
push
mov
loopne
push
add
stos
jb
or
add
stc
bound
inc
mov
loop
jne
inc
xor
pusha
dec
jne
pop
mov
jae
jne
jae
xchg
mov
ljmp
pop
cmp
push
mov
pusha
rclb
lods
inc
loopne
push
sbb
cmp
or
pusha
stos
andb
loopne
push
pop
sub
andb
shlb
lret
fildl
mov
push
mov
mov
mov
in
lret
dec
mov
test
add
adc
xorl
sbb
out
mov
inc
aas
loopne,pn
push
test
dec
hlt
ljmp
pop
xchg
pop
lods
pushl
lods
andb
mov
lds
jns
sub
pusha
sbbb
lods
and
add
mov
pusha
stc
iret
or
pusha
popa
inc
iret
in
leave
insl
cmp
mov
push
stc
or
xlat
adc
and
out
jg
pusha
andb
pusha
insl
jbe
dec
push
out
pop
cmpsb
pusha
inc
mov
out
subl
lcall
rclb
mov
insl
cmp
shll
sahf
sub
cmp
sbb
stc
fisubrs
inc
lahf
repz
clc
aam
out
xchg
stos
and
dec
jg
inc
mov
aas
ss
dec
scas
mov
andb
inc
sbb
mov
jp
sarb
mov
lahf
fwait
rcr
sbb
hlt
jnp
cld
gs
jnp
xchg
filds
ret
jnp
cmp
enter
mov
imul
mov
arpl
push
dec
adc
cmc
ret
imul
bound
cmpsl
rcrb
or
testb
xor
mov
int
iret
add
and
cmp
cli
add
inc
add
adc
stc
imul
pop
lahf
aaa
out
rolb
xorb
xorb
sub
loopne
or
mov
imul
cmp
xor
push
lret
mov
ja
fsubrs
inc
in
fisubl
movsb
andb
xor
jb
fcmovu
stc
push
out
cmp
loopne
pushf
mov
inc
jnp
jo
mov
loopne
sbb
add
inc
popa
xchg
testl
pusha
mov
repnz
div
movsl
cmp
or
test
add
xchg
ss
xchg
lds
test
int3
and
inc
nop
pop
cmp
mov
stos
add
pusha
and
out
rcr
or
xorb
jle
cmp
sahf
imul
mov
sahf
adc
mov
in
sbb
fiadds
and
jne
or
shl
scas
xlat
dec
out
cli
movsb
mov
add
sub
sahf
mov
in
dec
mov
xchg
in
sbbl
add
push
andb
or
loopne
mov
mov
cmc
arpl
js
push
shlb
mov
xchg
adc
or
jl
loopne
in
xor
pop
fucom
test
or
shrb
in
jp
lcall
int
fmuls
push
and
mov
push
inc
mov
xchg
enter
dec
inc
rorl
mov
mov
shl
sub
mov
mov
push
shrb
daa
or
jnp
cmp
ror
add
sti
inc
cli
mov
jo
pop
sub
inc
iret
mov
mov
push
aaa
std
inc
inc
loop
addr16
mov
add
mov
pop
ret
aas
adc
jnp
push
frstor
daa
popa
stos
mov
pusha
push
icebp
enter
jo
shl
cmp
pop
push
jbe
pusha
and
lds
and
pop
mov
cmpsl
and
shlb
adc
lds
call
enter
add
repnz
loopne
add
adc
and
sbbb
sub
inc
and
mov
xor
or
loopne
and
enter
popf
push
aas
xchg
mov
mov
andb
xchg
inc
xchg
or
repnz
pusha
sbbb
pusha
add
inc
mov
lret
mov
add
ds
cwtl
pop
dec
push
jp
addb
inc
pushl
and
daa
pushf
dec
imul
push
js
sub
scas
shl
pop
jno
xlat
add
xchg
std
loopne
outsl
mov
jbe
mov
cmpsl
adc
addb
adc
aad
nop
lahf
push
inc
jb
fs
dec
mov
aas
sbb
in
xchg
xchg
imul
cmp
fmull
shl
push
mov
imul
push
jle
cmp
aaa
leave
lcall
mov
and
orb
and
xchg
cli
outsl
lods
mov
add
xchg
and
sti
je
insl
call
mov
or
add
insl
ret
fildl
pusha
mov
inc
insb
clc
cmpsb
and
fisttpl
jno
adc
pusha
mov
iret
push
cmp
mov
sti
es
add
mov
pop
add
loopne
call
push
lea
inc
jno
push
mov
adc
aad
sub
loopne
outsl
hlt
dec
pop
cmp
andb
aaa
mov
inc
in
inc
pusha
lock
dec
cltd
jne
lods
js
mov
mov
arpl
mov
mov
add
fldl
enter
jp
sub
loopne
ret
sbb
add
inc
add
and
pusha
push
dec
lahf
stos
mov
pusha
outsl
movsb
and
xchg
mov
and
in
jo
xchg
aas
adc
sbb
cmp
nop
mov
fstpt
stc
push
and
mov
jge
rorl
inc
lahf
sub
adc
jnp
sbb
add
pop
add
mov
fsts
rolb
push
push
push
aad
mov
inc
aaa
push
movsl
aad
add
mov
cltd
pop
xor
xchg
loopne
mov
and
neg
mov
pop
movsl
jl
pusha
add
popa
outsl
fdivs
mov
sbb
inc
ret
mov
dec
ljmp
push
cwtl
or
loopne
pusha
sahf
dec
mov
into
dec
js
adc
mov
inc
add
inc
pop
and
or
xor
movsb
loopne
daa
adc
loopne
fsubp
imul
fadd
push
dec
cmp
add
inc
sub
mov
pop
leave
jae
les
shlb
daa
dec
jge
and
and
loopne
sahf
cs
int3
push
xchg
add
add
je
and
jnp
inc
inc
sub
loopne
dec
in
mov
andb
mov
pop
push
in
mov
sbb
cmpsb
loopne
popf
loopne
or
inc
xchg
mov
jb
add
ds
loope
inc
inc
jmp
or
je
adc
xor
pop
stc
sub
pusha
stos
scas
mov
insl
sti
sbb
loopne
fldt
imul
loopne
mov
sbb
idivb
pusha
sbbb
and
out
dec
sti
pop
mov
pop
lods
and
sbb
aad
lock
inc
xchg
mov
jae
push
cld
sar
enter
and
insl
pop
ds
lahf
insl
mov
add
push
xor
inc
cli
and
in
inc
mov
sub
and
out
sub
add
outsl
inc
cmpsl
cwtl
mov
xchg
lahf
imul
int
stos
ljmp
pop
je
inc
fstps
push
imul
dec
jnp
imul
add
into
jno
jo
dec
pop
int3
jno
pop
inc
aam
mov
or
std
fwait
clc
je
addb
daa
sub
add
rorb
cli
xor
mov
loopne
jge
mov
mov
pusha
mov
mov
mov
add
clc
sub
shrb
loopne
jmp
ffree
cwtl
push
loopne
mov
add
add
std
push
sub
mov
dec
addl
and
data16
inc
aam
and
shl
and
inc
push
rcrb
inc
xor
scas
mov
add
cmp
mov
inc
sub
pusha
stos
and
por
into
ret
into
mov
jge
cmpsb
addb
pop
leave
sbb
inc
ror
cmc
scas
outsb
aam
in
imul
and
ud0
je
add
pusha
inc
and
xchg
aam
cmp
and
imul
jo
jmp
add
xlat
loope
pop
fdivs
std
addb
pusha
mov
or
enter
popa
sub
sti
test
mov
jecxz
jae
pop
js
loopne
imul
test
mov
popa
sbb
sub
inc
rorl
add
xchg
and
xchg
scas
out
xchg
xchg
mov
sub
sub
inc
push
test
mov
pusha
ds
lret
dec
decl
or
xchg
cmpsb
mov
add
ret
inc
popf
and
and
and
cmp
fmull
shrb
mov
xor
mov
mov
inc
lcall
addr16
insb
adc
loopne
and
sub
adc
push
inc
sub
xchg
sub
xchg
and
mov
sub
add
loopne
imul
cmpl
je
addb
and
in
dec
jbe
test
cwtl
mov
outsl
sbb
xchg
gs
outsl
sbb
pusha
pusha
test
mov
mov
push
jnp
mov
or
push
repnz
lret
and
fistps
sub
jb
push
jmp
and
addl
mov
in
insb
iret
jge
cmp
dec
bound
enter
mov
xchg
fstps
pop
andb
sub
mov
pusha
shrb
shr
loope
add
push
inc
mov
and
adc
add
push
inc
pop
dec
add
andb
pusha
add
add
popl
mov
hlt
inc
cmp
mov
aas
or
lret
and
add
les
inc
add
pusha
inc
and
shlb
lds
lods
loopne
inc
arpl
xchg
sbb
js
loopne
sub
sarb
leave
bound
sbb
dec
mov
bound
fldl
inc
and
fiadds
mov
pop
test
lahf
push
addb
outsl
clc
adc
stos
pusha
add
loopne
test
mov
xchg
ret
rorb
mov
inc
adc
cs
add
mov
test
cli
xor
xor
icebp
jnp
shll
hlt
push
mov
sub
mov
adc
cmp
aad
or
add
push
jle
xor
stos
add
and
lahf
ret
pop
mov
out
loopne
loop
mov
popf
loope
sarb
dec
ja
lods
fdivl
jl
outsb
and
mull
test
negl
or
pop
loope
rolb
adc
pop
mov
shll
cmpsl
push
and
dec
mov
pop
fidivs
in
push
cs
pusha
jno
fistpl
add
shlb
hlt
mov
rolb
and
lea
or
loopne
mov
sub
jecxz
daa
cmpsl
inc
sub
and
xor
imul
xchg
mov
sbb
clc
ljmp
mov
inc
aas
test
outsb
rolb
in
cmpsb
and
push
sarb
icebp
xor
sub
mov
sub
lock
loopne
mov
orb
mov
xchg
dec
mov
addb
mov
ret
dec
cld
inc
adc
insb
arpl
xlat
jp
sub
jb
and
add
xchg
or
pusha
push
mov
inc
rorb
and
dec
cmp
imul
ss
rolb
sbb
aam
jne
xchg
add
mov
and
inc
popa
inc
push
pusha
dec
mov
push
adc
mov
adc
or
pusha
mov
addb
jne
or
sub
and
add
and
or
lret
inc
test
mov
mov
add
rcrb
adc
cmpsl
pop
lods
add
and
rcrb
add
and
in
test
shll
cli
jecxz
addb
push
xor
lret
sub
addr16
add
cmp
notb
mov
mov
lods
push
loopne
loopne
orl
inc
inc
cwtl
xor
in
pop
int3
xchg
jnp
stos
adc
jge
rol
in
pop
lret
das
inc
jge
sbb
or
push
fistpll
into
and
je
mov
xchg
cmp
test
add
push
ret
loop
out
jno
inc
pop
imul
cmp
andb
or
or
inc
pop
jle
fisubrs
in
xor
into
jo
jg
jns
or
imul
xchg
sbb
dec
jno
mov
push
mov
rolb
shlb
shlb
add
jns
xchg
lahf
in
out
lea
sub
loopne
pusha
shlb
inc
andb
stos
setp
nop
or
inc
test
push
sub
loopne
and
scas
xor
cmp
and
rolb
lock
in
daa
mov
rcrb
shlb
jecxz
inc
into
xor
add
xchg
aad
add
inc
scas
and
daa
dec
push
movsb
loopne
dec
sub
lock
mov
outsl
rolb
jecxz
and
inc
or
out
sub
loopne
inc
inc
andb
cmp
mov
pop
sbb
hlt
fstl
pusha
xlat
popf
dec
adc
add
seto
add
divb
or
es
inc
mov
pop
and
mov
sub
insb
andb
xor
adcb
and
sub
adc
ljmp
mov
xchg
mov
pop
fs
rcrl
mov
movsl
repz
loopne
in
jbe
xor
adc
pop
scas
aas
push
mov
and
loopne
mov
add
pusha
stos
pusha
mov
inc
daa
outsl
mov
push
sub
lods
pusha
add
fistpl
jecxz
mov
push
and
mov
xor
pop
sahf
cmp
lea
or
loopne
in
stos
rol
pop
aaa
xchg
add
pusha
mov
pusha
adc
loopne
push
xor
addb
add
fnsave
pop
mov
leave
sbb
mov
fldpi
imul
jno
jae
inc
pop
push
movsl
cmp
mov
xor
jg
les
shlb
adc
imull
cmp
mov
add
inc
in
jecxz
cmp
movsb
loopne
loopne
in
xchg
pop
mov
rol
mov
pop
add
mov
clc
das
push
mov
fstps
testl
rcrb
sub
clc
and
jbe
pushf
mov
jb
add
or
sarb
jne
inc
inc
or
into
cwtl
jnp
lods
add
subb
lods
pop
shlb
xor
xchg
int
cs
mov
dec
pop
xor
in
xor
fcompl
pushf
jne
xor
xchg
loope
jnp
loopne
and
pusha
lret
sbb
xor
xchg
pop
fists
dec
repnz
cmpsb
add
inc
sub
flds
out
roll
mov
add
mov
ja
xchg
repz
add
push
aas
inc
test
ljmp
jmp
insl
movsl
sub
or
in
add
lret
xchg
push
std
outsb
jge
adc
pusha
push
inc
sub
pusha
jmp
out
and
and
mov
sbbb
cli
push
insl
out
dec
pop
scas
sbb
test
jp
scas
pusha
inc
mov
push
jbe
in
rclb
sub
pop
mov
int
adc
hlt
lods
pusha
mov
inc
and
cmpsb
mov
or
xchg
fwait
loope
add
xor
shrb
aam
fsubl
out
sub
dec
popl
jmp
jl
cltd
push
inc
aaa
sbb
aam
and
jle
stos
addb
pusha
loopne
xchg
adc
mov
orb
pusha
add
inc
jl
push
push
or
pop
jb
push
jbe
and
cmp
push
test
and
rolb
call
hlt
andb
pusha
pop
dec
mov
movb
inc
jo
xor
mov
lea
jno
addr16
push
int3
aad
sbb
mov
adcb
aaa
push
shl
ds
sub
rorb
cwtl
add
imul
inc
pop
jns
test
pusha
out
cmp
mov
mov
jmp
cmpsl
pop
xchg
adc
out
arpl
pop
jb
aaa
xchg
mov
outsl
adc
out
loopne
sbb
add
and
dec
cmp
add
pusha
pusha
sub
mov
adc
pop
cmp
cmpb
jp
sub
sbb
outsl
inc
cltd
push
pushf
cmp
cmp
xor
push
add
mov
lret
hlt
je
xchg
ljmp
ret
dec
adc
andb
add
add
in
mov
xchg
subl
mov
push
andb
or
sbb
test
rcr
sldt
fistl
fcoml
data16
popa
mov
and
cld
pusha
push
add
rcr
in
loopne
in
arpl
cmpsl
xor
jae
sahf
fisubs
out
adc
test
add
xchg
dec
fs
or
push
loopne
sbb
pushf
sbb
adc
fwait
test
mov
and
mov
mov
rcrl
xchg
pusha
inc
push
pop
and
ljmp
rolb
insb
dec
aam
pusha
and
in
js
mov
xor
pop
adc
push
jno
loope
and
loopne
jne
andb
adc
andb
int3
int
pop
xor
and
daa
loope
mov
mov
push
mov
add
ret
mov
push
cmc
mov
adc
ret
loopne
xor
ret
push
push
cmp
repnz
pusha
enter
shlb
test
inc
lret
push
jno
js
inc
or
mov
cmc
jmp
lea
sti
cmp
dec
fucomp
gs
push
dec
sbb
pusha
repz
and
add
jle
cli
dec
or
and
fisubrs
pusha
xor
mov
push
lods
loopne
andb
inc
pop
and
pusha
out
dec
lds
pop
scas
loopne
es
add
or
xor
loopne
lret
enter
addb
cmp
add
push
sbb
add
pusha
mov
mov
outsb
adc
mov
add
mov
jp
ret
cmp
icebp
sbb
pop
dec
cmp
addb
push
iret
jo
mov
xorb
out
cmp
test
pusha
sub
sbb
repz
sti
enter
aas
imul
ljmp
add
cmp
psrad
sarb
push
shlb
pushf
sub
and
pop
imul
push
inc
or
ret
cld
pushf
adc
xor
mov
xchg
pusha
and
mov
loop
add
insl
rcrl
ljmp
loopne
mov
or
fs
xchg
jg
inc
mov
cli
push
sbb
jp
adc
fwait
lock
inc
add
insb
mov
pusha
sbb
push
cli
lcall
loopne
stos
mov
dec
iret
popf
push
add
mov
ja
fcmovnb
pop
loope
dec
xchg
in
add
add
outsl
stos
pusha
and
sbb
and
addb
mov
sub
jge
sti
imul
dec
fsts
mov
and
mov
sbbb
ficompl
shll
add
jne
movsb
and
test
cmp
mov
stos
pusha
rcl
push
pusha
pusha
and
fimuls
pop
pop
sub
jg
lret
lods
pusha
inc
push
fcmovnu
jl
shll
push
and
mov
test
push
aas
sub
mov
adc
sub
inc
data16
loopne
mov
inc
xlat
mov
xchg
xchg
shlb
pusha
jns
sti
out
andb
test
add
adc
push
pushf
lods
shrb
and
jae
and
jecxz
pusha
pusha
andb
xor
push
adc
movsl
aaa
mov
js
test
lcall
sarb
into
mov
call
stos
hlt
inc
scas
aam
jnp
mov
adcb
mov
mov
mov
sbb
dec
mov
cltd
in
fwait
outsl
enter
xchg
idiv
out
out
xchg
push
mov
mov
rol
pop
aas
mov
inc
add
cmp
lock
rolb
hlt
sti
jae
andl
insl
cwtl
insb
je
jno
lea
dec
mov
loopne
inc
cwtl
add
inc
addb
or
jno
mul
xchg
jle
sbb
nop
test
add
pop
push
in
or
mov
aas
and
nop
dec
aam
es
repnz
sbb
and
sub
outsl
sti
xchg
pop
jg
sbb
and
push
pop
rorl
xor
addb
icebp
ss
pop
mov
inc
add
arpl
dec
xchg
std
add
mov
pusha
aam
cli
xchg
test
mov
adc
mov
mov
pusha
mov
xchg
daa
xchg
pop
popa
mov
and
mov
and
pusha
in
inc
xorb
jecxz
mov
repnz
mov
mov
cmpsl
fistps
pusha
add
mov
cmc
cmpl
inc
pusha
sbb
inc
clc
and
aam
loopne
push
pop
mov
ljmp
xor
stos
out
addb
pop
imulb
sbb
dec
lea
iret
mov
dec
sahf
mov
inc
cmp
roll
and
je
mov
or
loopne
mov
fcompl
push
and
ss
sarb
sub
loopne
and
pop
xor
ss
pop
sub
rclb
push
sub
mov
mov
and
xchg
pop
dec
jb
and
sbb
rolb
lods
push
or
xor
cmpsb
loopne
cmp
dec
and
sub
shlb
notl
in
or
xchg
sarb
popl
pop
and
inc
push
inc
inc
sub
jle
fwait
into
push
sahf
jae
rcll
stc
mov
lea
loopne
mov
cltd
jl
mov
xorb
xchg
jne
scas
jecxz
jg
and
rolb
push
in
lods
lret
sub
loopne
dec
xlat
out
inc
lods
int
jae
push
je
lret
rcl
cwtl
xchg
inc
mov
ffreep
lret
loope
jg
inc
loop
pusha
rolb
xchg
ja
xchg
xorl
stc
push
and
and
pop
jno
notb
xchg
vmwrite
scas
inc
mov
mov
int
and
mov
and
rclb
sub
loopne
cltd
bound
stos
jl
and
xchg
cld
or
andb
shrb
ret
push
hlt
jg
sbb
outsl
ss
mov
mov
xchg
das
pop
mov
popa
jbe
int3
loopne
add
lea
lahf
popaw
jb
sbb
inc
sar
mov
js
mov
pusha
aam
dec
cmpsl
xlat
xchg
cli
dec
dec
andb
inc
pusha
loopne
add
and
push
add
mov
push
pusha
idiv
test
gs
leave
into
clc
lock
pop
mov
int
pusha
and
out
xchg
stos
std
cltd
je
and
in
insl
in
sub
hlt
xchg
mov
aam
out
add
addl
lret
dec
cmp
daa
imul
jae
clc
mov
adc
mov
xor
leave
fadds
xor
jg
dec
push
inc
jmp
pusha
scas
inc
dec
push
jmp
scas
jecxz
inc
xchg
inc
xorl
inc
and
or
loopne
mov
pusha
and
jg
jg
movsb
inc
inc
mov
and
pusha
inc
sbb
leave
addb
inc
add
loopne
rcrb
adc
mov
ljmp
add
adcb
out
ret
push
ret
jle
shlb
and
mov
aaa
repnz
pusha
mov
pop
jae
mov
pop
xchg
jno
xchg
gs
ss
inc
jl
call
cld
mov
decl
rclb
inc
cmp
pop
shll
mov
mov
sbb
test
inc
fildll
mov
pop
pop
and
lds
mov
sahf
popa
mov
mov
aam
push
sbb
imul
shlb
pusha
pop
inc
lahf
lea
leave
lods
cbtw
xchg
and
mov
xor
or
rclb
movsb
loopne
mov
out
repz
pop
fcmovnbe
sub
lahf
add
dec
pop
jnp
add
inc
inc
ljmp
cld
rolb
mulb
loopne
and
arpl
inc
rcrb
test
add
and
icebp
fs
fsub
cmp
inc
js
movsb
addb
loope
shlb
fwait
daa
fs
pushf
leave
and
and
push
jns
enter
pusha
inc
shrb
inc
in
loope
loope
push
shlb
std
mov
mov
xor
icebp
add
das
push
ja
add
mov
inc
mov
cmp
aaa
lock
cmp
je
inc
test
mov
mov
pop
mov
pusha
pop
or
loopne
ret
or
loopne
nop
push
inc
xchg
pop
ror
push
shl
shlb
rclb
add
mov
or
sub
ror
iret
push
leave
push
rcrb
and
pop
xchg
rol
jnp
in
call
sbb
sbb
and
inc
push
push
add
jnp
xor
jo
pop
add
hlt
and
and
mov
adc
dec
dec
iret
push
cli
sbb
pop
jo
js
leave
repnz
add
and
mov
push
jg
adc
divb
stc
in
mov
add
add
divl
add
test
xchg
mov
das
mov
mov
mov
mulb
lea
movsl
out
push
test
loopne
dec
jo
and
xchg
andb
andb
test
add
fcmovb
cwtl
or
mov
jl
cmc
push
loop
lods
inc
pusha
aam
mov
fwait
in
pusha
pusha
ja
dec
outsl
aam
jl
push
pop
mov
cmp
scas
pop
and
and
push
and
lcall
inc
dec
or
and
mov
mov
mov
out
addb
inc
rol
jecxz
mov
les
pusha
loopne
ja
dec
sub
sarb
jbe
icebp
lret
int
mov
in
inc
add
scas
dec
andb
addr16
out
ljmp
std
adc
mov
inc
and
jno
mov
pusha
inc
addr16
je
fsubrp
fnstenv
sbb
cs
pusha
enter
inc
add
and
testl
add
kmovw
cmp
jl
imul
dec
shrb
rcl
push
addb
push
mov
cmp
mov
inc
inc
mov
lret
adc
cli
jle
xor
push
add
int
inc
add
popf
xlat
std
xchg
lods
shlb
and
ficoms
dec
je
in
cmp
push
addb
push
loopne
scas
andb
mov
sbbb
shl
or
or
out
adc
adc
and
mov
xor
mov
add
inc
ja
rcrl
inc
add
loopne
ja
dec
andl
and
daa
pop
cmp
movsb
add
scas
and
mov
andb
addb
test
shrl
lret
mov
xor
fnsave
mov
frstor
rolb
jae
test
mov
std
add
push
sti
aad
pop
scas
addb
push
mov
shlb
push
aaa
cmp
xchg
mov
call
jle
sti
jp
call
sbb
pop
jb
loop
lret
loope
inc
inc
pusha
add
rclb
imull
inc
pusha
cmp
jl
inc
cwtl
inc
test
shlb
insl
pusha
ds
jl
adc
shl
shl
jo
jmp
dec
adc
popa
xorl
pusha
loopne
jp
push
jae
jg
xor
pusha
loopne
scas
mov
pushl
and
loopne
pushf
cmpsl
into
pop
pop
jno
pusha
loopne
rorl
shrb
pop
call
das
scas
add
add
or
pusha
enter
loop
mov
or
mov
shlb
inc
rolb
sub
sub
xchg
xchg
insb
dec
cmp
add
pop
adc
sahf
pop
mov
xor
adc
imul
and
or
mov
shlb
ljmp
loope
jnp
dec
pop
bswap
pop
jp
dec
imul
sub
and
and
mov
sahf
xor
mov
pop
ret
fiadds
sub
and
jle
mov
and
sub
or
loopne
test
add
outsl
jb
push
push
sbb
xchg
test
loopne
cmp
sbb
inc
xchg
inc
insl
mov
and
loopne
stos
inc
inc
addb
sbb
mov
data16
loopne
xchg
sub
mov
loopne
clc
lcall
xchg
inc
aam
leave
add
fldcw
rolb
cmp
mov
das
data16
andb
cmp
outsb
xor
pop
aad
je
in
pop
inc
mov
mov
ds
and
cmp
pusha
shrl
loopne
inc
pop
push
and
jecxz
mov
inc
shlb
test
loopne
adc
pop
push
push
xchg
add
and
shlb
sbb
sbbl
inc
test
and
fwait
push
and
inc
adc
shr
imul
aad
push
movsl
mov
mov
pop
iret
scas
inc
mov
sbb
gs
add
repnz
pusha
ret
stc
cmp
imul
test
shlb
xchg
lahf
stos
jb
pushf
sbb
jecxz
add
pusha
inc
aaa
pop
insl
inc
data16
xor
jmp
mov
sbb
xor
or
mov
mov
mov
enter
fnsave
int3
aad
sbb
add
add
pop
push
inc
jb
xchg
xlat
xor
mov
dec
sub
xchg
mov
popa
jmp
mov
pusha
mov
xchg
es
mov
inc
inc
or
inc
orl
popf
scas
inc
add
sbb
or
repnz
daa
cmpsb
andb
mov
inc
pop
and
inc
mov
sub
mov
daa
jns
out
dec
arpl
lods
mov
scas
xchg
fnstenv
inc
jge
arpl
cmp
movsb
rolb
adc
adc
sub
js
mov
pop
sub
add
xor
push
mov
lahf
dec
pop
dec
pop
mov
add
jmp
scas
add
cmp
iret
jnp
loop
pop
loope
jns
loopne
aaa
int
add
and
xor
into
in
pusha
cmp
xchg
inc
adc
fs
mov
pop
addb
sub
add
int
clc
mov
mov
gs
dec
pop
rcrb
fldl
mov
outsl
push
ret
popf
movsl
xchg
fnstcw
loop
cs
add
inc
cli
das
push
adc
inc
insb
mov
pusha
inc
popa
das
shrl
in
mov
cmp
cmp
cmpsl
test
and
into
dec
or
andl
xor
aas
push
pop
sti
cli
jmp
pop
mov
inc
add
adc
mov
xor
fldt
mov
shlb
out
inc
loopne
cmp
icebp
push
push
xor
ficomps
mov
and
and
jnp
movsb
addb
add
aas
and
shrb
mov
addb
cmp
pusha
adc
jle
lcall
mov
and
cmpsb
add
adcb
inc
xchg
dec
jg
push
mov
jb
mov
in
or
and
sub
lds
mov
dec
mov
mov
xor
mov
mov
inc
mov
mov
ret
pop
fidivrs
ss
add
mov
and
out
jmp
aad
dec
jbe
inc
aad
dec
mov
lahf
cmc
jne
loope
mov
and
lock
in
ds
push
fidivl
mov
mov
mov
shrb
int
shr
pusha
push
lods
andb
xor
popa
xor
pusha
mov
out
and
sub
lea
mov
mov
sar
jge
pop
je
inc
cmpsb
addb
jg
xchg
xlat
or
mov
xor
cmp
inc
popa
movsl
arpl
fucom
push
inc
ljmp
push
jbe
repnz
shrb
addb
pop
adc
and
aad
mov
lea
rorb
mov
out
cwtl
cmp
orb
dec
and
dec
test
inc
mov
pop
scas
jp
jecxz
mov
mov
and
pop
mov
pop
mov
mov
loopne
sub
sarb
push
lahf
test
stos
pop
cmp
xchg
xchg
out
fisubs
popf
mov
jnp
out
and
and
mov
or
jecxz
push
ror
cmp
hlt
lcall
mov
xchg
loopne
in
loope
push
mov
test
pop
lea
loopne
inc
xorb
add
scas
and
adc
loopne
rolb
and
lahf
mov
xlat
sub
add
cmp
pop
out
mov
ret
add
pushf
mov
mov
dec
cmp
inc
sub
mov
push
cmp
ljmp
xor
mov
jge
pop
dec
lret
cld
and
rcrb
lock
dec
dec
movsl
sub
add
test
test
jle
push
xor
add
mov
pop
pushf
shll
and
jns
jne
sbb
xchg
mov
loopne
and
mov
mov
adc
andb
jp
adc
add
push
andb
and
pop
xchg
ret
ret
loopne
and
pusha
leave
mov
adcl
nop
sarb
sbb
add
dec
pop
jl
jl
add
fistpl
hlt
scas
insb
adc
shl
xchg
and
cmpsl
sub
and
pusha
mov
imul
push
add
add
add
fbld
in
push
movsl
mov
inc
mov
loopne
cmp
mov
cltd
jnp
iret
xchg
mov
iret
test
and
jb
jg
or
in
andb
mov
pop
das
xchg
mov
jb
mov
fld1
dec
clc
xchg
and
je
mov
and
and
xchg
stos
jg
cmpsl
or
inc
dec
lahf
xor
cmpb
sub
add
add
inc
cltd
dec
pop
pop
mov
or
rcrb
movsb
and
aas
mov
subb
add
fnstenv
push
jns
mov
mov
into
mov
enter
addl
and
loope
xbegin
mov
cltd
loop
xchg
or
pop
hlt
xchg
ret
jg
pusha
inc
iret
stc
cld
sub
or
ret
sbb
fwait
ljmp
cld
mov
dec
xor
jl
pusha
jecxz
add
sbb
inc
scas
inc
shrb
pop
cwtl
mov
cmp
sub
loopne
adc
jb
mov
inc
push
cmp
dec
sbb
loopne
xor
mov
roll
push
mov
lock
aaa
push
inc
insb
loopne
dec
ror
jb
fcmove
incl
and
pop
popa
daa
xor
loopne
jecxz
mov
loopne
in
pop
xchg
inc
aas
pushf
xchg
rclb
dec
lcall
sahf
add
add
mov
inc
pusha
xchg
pop
int
and
xchg
xchg
cmp
js
pop
sbb
pop
andb
shlb
add
fxch
fmul
gs
dec
in
in
scas
add
dec
call
mov
add
rolb
pop
sti
mov
fistpl
push
outsb
push
and
add
and
mov
cmp
and
shlb
add
pop
jecxz
mov
mov
shl
mov
and
and
popw
xor
dec
outsl
cmpsl
ret
insl
push
fdiv
fisttps
js
sahf
out
rolb
test
rclb
push
jnp
loopne
sub
cmpb
bound
or
mov
pushf
cmp
and
ss
loopne
push
sarl
add
test
push
mov
add
xchg
xor
xchg
jg
push
lods
fwait
addr16
cmpsb
inc
mov
xchg
mov
andb
sub
js
pop
push
and
loopne
xor
into
and
cmpsb
pusha
mov
fstps
mov
add
subb
inc
or
lock
sbb
xchg
les
shrl
and
mov
and
rol
cmc
out
int3
dec
push
fcoms
shl
dec
xor
andb
or
inc
dec
fwait
pop
xchg
add
shlb
out
jo
stos
xchg
sub
and
aad
mov
jb
add
rolb
sbb
ret
cmp
shlb
outsb
mov
mov
movsl
adc
jmp
pusha
mov
pop
je
add
push
add
jmp
or
loopne
or
les
ret
ret
mov
pop
stc
lsl
pushf
dec
and
mov
repz
mov
stos
mov
bound
mov
repz
sti
call
insl
lahf
lret
test
sarb
insb
hlt
cmpsb
add
rol
dec
add
addb
lods
loopne
inc
fsts
xor
rol
daa
arpl
mov
into
jae
sub
dec
idivl
push
femms
mov
aad
xchg
mov
pusha
add
xchg
sub
push
mov
xlat
loopne
imul
rcl
pop
jecxz
push
out
add
pushf
inc
rol
rcrl
pop
test
fwait
rcr
dec
mov
ror
pop
out
repz
jae
dec
push
and
pop
test
mov
orl
cmpsl
rclb
cmpsl
outsb
call
or
add
inc
add
xor
or
ss
gs
je
test
and
arpl
imul
loopne
ret
sub
cmpb
andb
mov
jb
mov
mov
adc
imul
loopne
mov
and
les
mov
mov
jnp
add
call
cmpsl
call
and
push
scas
add
pop
pop
and
xor
mov
pop
bound
scas
and
jnp
mov
sub
rorl
pusha
shlb
pusha
sbb
xor
clc
and
or
mov
mov
lahf
jb
pusha
ja
fcoms
jg
call
cmp
sarl
insl
push
lds
es
je
addb
mov
add
loopne
addb
xor
add
mov
loopne
pusha
inc
cmp
cmp
adc
sbb
movsl
jne
jb
leave
mov
pop
out
stos
mov
sahf
and
inc
ret
add
leave
fdivrl
loopne
pushf
dec
out
in
stc
mov
dec
mov
cmpb
addr16
xor
loopne
icebp
iret
xor
xchg
in
and
mov
rcr
test
loopne
and
outsb
pop
xchg
push
out
cld
gs
xor
enter
movsl
int3
negl
jno
loope
rolb
aaa
out
add
pushf
mov
cmp
dec
pop
pusha
mov
sarb
jb
loopne
cmp
nop
repz
inc
pusha
push
mov
mov
adc
orb
jl
xchg
rcrb
and
xor
xor
das
movsb
inc
shrb
rcrb
into
xchg
jge
pusha
aam
sbb
repnz
movsl
lods
loopne
sahf
mov
pusha
mov
shl
std
sbb
and
dec
add
add
xorl
inc
in
inc
inc
enter
shl
outsl
ja
lea
repz
mov
loopne
mov
jge
mov
leave
jne
cld
push
andb
push
aam
mov
jnp
sub
dec
loope
mov
mov
push
add
addl
andb
and
inc
mov
adc
jecxz
xor
addb
or
loopne
into
pushf
mov
and
int
lret
or
loopne
xchg
sub
les
push
jb
xchg
addb
push
pop
jo
imul
scas
inc
mov
call
pop
sahf
pop
cli
lret
mov
xor
sub
inc
clc
lea
pusha
pusha
movsl
push
adcl
mov
jne
sbb
clc
adc
ror
imul
adc
lds
xchg
fdiv
mov
pusha
mov
stc
icebp
and
sbb
mov
mov
pop
dec
dec
or
cltd
popf
incb
mov
pop
dec
xlat
rorl
add
rcrb
in
pusha
and
push
ds
cmpb
mov
inc
adc
fidivrs
inc
jbe
sbb
mov
jo
mov
or
lock
mov
loopne
imul
repz
mov
inc
push
pusha
add
pop
inc
add
or
mov
xor
addb
push
pusha
pusha
cmp
shlb
fcomps
push
aam
add
push
loopne
adc
es
enter
cmp
leave
dec
rcrl
sarl
cmp
out
cltd
aad
pushf
stos
and
mov
pusha
and
shlb
mov
cwtl
xor
sahf
adc
ja
xchg
dec
inc
cwtl
xchg
inc
imul
and
ret
lahf
in
les
inc
xor
mov
mov
dec
addr16
dec
and
test
clc
push
int3
xchg
ds
imul
inc
xorl
sub
in
flds
cs
addb
dec
jmp
pusha
add
aas
cmp
std
stos
dec
and
scas
fidivl
ljmp
xlat
dec
jmp
mov
in
xor
mov
hlt
sub
add
dec
stos
addb
lahf
nop
cmpsb
loopne
cmp
stos
shlb
cmp
ss
call
mov
andb
aad
push
mov
test
mov
xor
loopne
and
jl
icebp
cmp
pop
mov
in
cmp
test
cmpsl
cmpsl
out
xor
add
mov
mov
stc
xchg
xchg
jge
inc
aaa
push
pop
push
flds
ds
jae
cmovl
aas
mov
inc
mov
and
cmpb
mov
imul
and
andb
loopne
mov
mov
xchg
outsl
loopne
pop
adc
push
inc
outsb
rcrb
xor
jno
scas
flds
pop
jne
shlb
push
daa
adc
hlt
aad
roll
mov
add
sbb
adcb
or
mov
mov
test
inc
add
andb
sti
inc
cltd
repnz
lcall
je
and
mov
mov
popa
adc
lea
mov
je
mov
sbb
loopne
xor
repnz
je
add
lcall
cltd
andb
mov
pop
push
xchg
jae
adc
repz
mov
fsubrl
and
sbb
and
push
inc
cmpb
pusha
fstps
xor
dec
jns
xchg
fldl
outsb
push
add
inc
or
xchg
pusha
sub
sarb
adc
addb
jne
incb
les
push
loopne
push
jne
fnstsw
shlb
data16
cs
rolb
sahf
dec
pusha
test
jl
pusha
pusha
hlt
jge
mov
add
jnp
insb
xor
loope
inc
sbbl
xchg
je
add
xor
cmp
pusha
loopne
cmpsb
mov
and
add
pusha
push
jne
or
loopne
scas
fstpt
loop
sahf
ficoml
mov
ja
pusha
pusha
ret
das
xchg
js
daa
aas
pop
jbe
mov
push
in
push
sbb
clc
fcmovnb
shr
pop
push
hlt
mov
dec
daa
sbb
xchg
push
es
and
jae
into
cmp
mov
cmpsb
mov
pop
adc
adc
loopne
test
xor
add
and
mov
sarb
inc
sub
inc
aad
jno
or
xchg
adc
push
repz
mov
loopne
or
push
pusha
mov
ljmp
xchg
popa
adc
push
sbb
inc
mov
pop
mov
inc
dec
adc
ret
inc
or
shlb
mov
or
inc
ss
pop
lea
push
pusha
inc
mov
add
out
rorl
xchg
push
xchg
ss
cmp
mov
in
shll
jg
lock
loop
fnstcw
mov
jb
xchg
ljmp
lods
inc
inc
mov
add
xor
add
fcoms
inc
cli
sub
inc
inc
pop
loope
xchg
lret
jnp
mov
and
testl
push
dec
inc
movsl
jle
inc
dec
cs
mov
mov
enter
loopne
and
cmp
xor
fcoml
pop
mov
call
rolb
pusha
mov
and
add
pop
cmp
andl
test
cmp
mov
sbb
mov
rolb
cmp
xchg
rcl
leave
and
test
shrb
out
or
inc
pop
divb
and
pusha
sub
clc
out
push
arpl
sub
add
cmp
inc
inc
sbb
jns
jb
shlb
andb
sub
adc
jb
inc
pusha
lods
adc
pushf
nop
mov
mov
sub
and
and
shlb
xchg
inc
xchg
ja
jb
mov
inc
jle
out
dec
out
or
loopne
scas
imul
mov
mov
loop
jns
loopne
bound
std
dec
imull
lea
and
xchg
pop
int3
cmc
pushf
add
xor
mov
loopne
out
xchg
call
and
mov
pop
xor
push
adc
fdivs
or
loopne
and
int
jge
andb
orl
lea
sbb
incl
and
shlb
shlb
jecxz
loopne,pn
sbb
repnz
lahf
xor
mov
jbe
in
je
push
inc
in
clc
jmp
inc
orb
and
push
lea
shlb
out
cmp
addr16
cmp
inc
xlat
jbe
push
jle
stos
andb
loopne
imul
in
mov
cmp
mov
add
stos
movsl
xchg
fidivrs
divl
push
insb
push
das
fnstsw
out
push
inc
pusha
nop
jnp
fcmovnbe
test
loopne
movswl
pop
jo
xchg
les
addr16
pusha
scas
push
mov
dec
mov
add
dec
jns
cli
in
push
jp
jle
pop
dec
es
mov
outsl
and
loopne
lods
or
add
loopne
dec
aaa
push
pusha
and
sahf
test
jbe
push
cld
push
and
and
adc
rorb
push
pusha
loopne
jae
mov
mov
pop
stos
shlb
adcb
add
jge
mov
pop
cltd
xor
jno
fldl
into
adc
fs
adc
mov
mov
ret
aas
insb
mov
xchg
mov
insl
pop
jb
jbe
addb
jecxz
nop
outsb
fistpll
fsubl
lret
iret
cmpsb
and
loopne
outsb
pop
test
push
cmpsb
mov
inc
and
cs
ficomps
insl
stc
testl
mov
rclb
mov
mov
dec
jb
add
inc
sarl
xchg
fsts
dec
jo
pop
xor
jge
call
sub
loopne
shll
pop
fwait
add
addl
jg
mov
fbld
mov
ss
fdivrs
loopne,pn
inc
repnz
jge
xchg
add
das
pop
cmp
or
add
adc
xor
jno
lods
rolb
xchg
movsl
movsb
add
outsl
mov
adc
mov
jmp
inc
loopne
addb
xor
mov
xchg
je
xchg
popa
sub
xchg
pop
enter
andb
pop
cli
dec
mov
cmp
mov
push
stc
jge
jb
jns
in
inc
stos
and
fwait
sub
inc
cmpb
ret
lret
and
inc
pop
adc
xor
shll
in
sbb
inc
clc
mov
in
mov
mov
sti
adc
push
pushf
mov
mov
xor
mov
push
inc
inc
sbb
add
adc
sarb
pushf
jns
jbe
test
shl
push
leave
outsl
jmp
push
sub
shlb
add
stos
pusha
shlb
add
mov
mov
xor
out
xor
into
mov
rclb
loopne
jnp
test
pop
test
roll
mov
rcrb
add
shl
popf
mov
and
je
jp
and
add
mov
add
cltd
push
pusha
inc
cld
mov
dec
data16
mov
fwait
and
jecxz
andb
ret
jns
xchg
jno
xchg
jae
adc
repz
daa
inc
iret
mov
inc
pusha
sub
mov
cwtl
out
mov
pusha
ror
mov
dec
jle
mov
and
arpl
jb
sub
andb
and
fnsave
sub
das
pop
xchg
shlb
add
mov
jne
dec
sub
inc
addb
sbb
movsb
loopne
xchg
pop
ficomps
dec
mov
dec
in
insb
pop
js
pusha
aam
cwtl
jnp
out
iret
into
sub
insl
cli
inc
jbe
jb
pop
out
inc
mov
mov
and
inc
mov
inc
test
push
mov
jp
xchg
inc
insl
xor
outsb
lcall
adc
dec
into
je
rolb
adc
and
xor
and
pusha
ljmp
jmp
dec
popf
cmpsb
shl
pop
sbb
imul
outsb
pop
pop
mov
pusha
xlat
add
pusha
cmp
fisubl
jle
mov
inc
shlb
lret
or
loopne
fildl
loopne
insl
xor
fdivs
cmp
mov
pusha
mov
lock
mov
and
lcall
bound
rolb
dec
xchg
test
xchg
push
cmpsl
bsf
aad
into
fidivrl
lahf
imull
mov
add
loopne
dec
icebp
jne
lret
outsl
rorb
lcall
rol
ljmp
pusha
outsb
lret
mov
js
sbb
add
mov
out
aam
cwtl
mov
icebp
adc
shlb
fcoml
movsb
mov
in
or
xor
ja
or
xor
daa
cmp
pop
cmp
inc
cmpl
loopne
mov
add
or
fs
test
shlb
pop
mov
pusha
add
aas
push
inc
cmpb
jecxz
ficompl
lcall
xchg
jnp
cs
jae
mov
mov
add
mov
and
add
mov
sub
and
sbb
repz
mov
lea
fiadds
jecxz
push
pusha
mov
arpl
fsub
inc
loope
shlb
repnz
lock
xchg
inc
loope
stos
pusha
pusha
add
adcb
cltd
fistps
shlb
and
addb
and
loopne
leave
mov
aaa
cli
rorl
loopne
mov
jle
push
fldz
sbb
and
rolb
mov
add
loopne
pop
adc
andb
pusha
pusha
xor
cltd
jl
mov
ljmp
adc
std
xor
inc
enter
inc
add
push
xchg
scas
cmp
mov
cmp
loopne
dec
jmp
gs
repz
and
subl
push
xor
inc
shrl
xor
shll
xchg
repnz
cli
scas
addb
inc
sbb
pop
adc
fmull
xchg
jp
pop
xor
arpl
test
and
jo
xchg
int
cmp
rorl
inc
bound
lds
pusha
mov
jns
das
xor
negb
dec
bound
repnz
mov
cmp
inc
outsb
mov
mov
and
pop
outsl
popf
cmp
addb
mov
test
mov
sub
sarb
jecxz
aad
stos
inc
jle
jae
add
mov
mov
loopne
add
lods
loopne
xchg
test
xorb
and
mov
mov
jns
or
pusha
clc
mov
and
sbb
pushf
cwtl
and
mov
push
mov
arpl
test
cmpb
enter
out
or
sbb
or
pusha
stos
lock
mov
lock
jge
lds
cmc
incl
ja
jo
cmc
pop
ret
mov
cmp
push
ror
scas
xor
aas
cmc
jnp
pusha
repz
lods
in
jbe
push
shr
lods
loopne
add
and
call
fwait
mov
fildll
xor
lea
addb
xchg
dec
xchg
ror
addb
popf
cmp
jg
mov
and
lea
cld
aad
int
jns
mov
xchg
dec
out
repz
mov
add
pop
mov
icebp
jle
or
imul
fstpl
fmull
add
insb
cmpsb
andb
or
pusha
lahf
or
add
sub
pop
imul
and
lods
mov
loopne
pop
inc
push
insl
pop
and
rclb
pop
test
pusha
std
mov
inc
cld
xor
sub
mov
xlat
cmp
or
mov
enter
mov
jecxz
insl
fcomps
add
jp
mov
sarb
mov
bound
pusha
loopne
add
mov
andb
add
ljmp
jecxz
fadds
pusha
sbbb
or
mov
mov
loope
mov
adc
aas
lahf
cmp
pusha
inc
sahf
out
and
jmp
add
ja
rorl
xchg
test
add
shl
add
mov
or
addb
aad
mov
xchg
add
and
mov
and
add
rorb
pop
mov
xchg
sub
inc
and
jle
hlt
inc
in
pop
test
lods
or
add
fimuls
pushf
cmpsl
fstpl
movsb
shlb
fnstcw
jb
scas
push
pop
xor
mov
cmp
pusha
rclb
cmp
divl
fldenv
pusha
pop
sub
mov
pop
pop
jmp
fs
sbb
cltd
add
push
test
xchg
testl
sub
mov
imul
repz
jo
and
xchg
cmc
pop
arpl
jae
repz
push
adc
shl
rolb
shl
mov
xchg
iret
or
xorb
xor
or
out
out
into
andb
test
and
xchg
lret
lret
scas
mov
push
push
pusha
add
push
mov
loop
inc
mov
jns
adc
jbe
mov
sbb
roll
mov
in
and
or
in
xchg
jmp
pop
loope
sbb
rorb
xchg
or
mov
scas
loopne
aas
mov
repnz
out
arpl
and
xchg
pop
cltd
in
jecxz
sbb
jle
scas
jle
sbb
ret
fmuls
sti
sub
loopne
test
dec
add
add
xchg
mov
cmp
mov
inc
lea
inc
inc
out
pop
inc
xchg
dec
cs
and
xchg
xor
sub
out
jb
jns
pop
or
addb
adc
fdivs
inc
loopne
mov
inc
das
icebp
inc
sbb
dec
adc
sarb
stos
mov
out
cs
xorb
je
mov
mov
insl
test
iret
das
aad
add
data16
xchg
sub
inc
inc
fs
test
stos
xchg
inc
in
aad
cmp
outsb
lcall
xchg
or
icebp
mov
loopne
mov
push
sbb
arpl
xchg
loope
sbb
into
pop
jo
aaa
mov
lret
and
mov
xor
pusha
insb
push
addb
movsb
add
jp
nopl
inc
inc
rolb
das
not
sbb
jl
subl
add
push
int3
xchg
xchg
lret
sub
stos
and
and
pusha
lret
push
lds
cmp
popa
mov
and
pop
xlat
mov
subb
rcrb
inc
add
into
loopne
shlb
icebp
mov
mov
mov
pop
daa
aam
lret
shll
and
loopne
mov
mov
xor
xchg
pushl
int3
sbb
cmp
xlat
mov
sbb
inc
outsl
mov
pop
les
fdivl
pop
out
nop
sbb
cmp
shlb
push
mov
push
leave
cwtl
repnz
xchg
test
adc
cmp
jg
mov
loopne
cmp
adc
pop
mov
jecxz
and
xchg
fcomi
loope
mov
jne
lret
addb
lods
andb
pusha
and
test
inc
roll
je
inc
pop
nop
sbb
mov
push
out
and
popa
sub
and
inc
push
jp
push
add
fcoms
aas
pushf
jns
mov
loopne
aam
movsb
and
pusha
pusha
cmpsb
mov
xor
lea
les
pusha
mov
movl
loopne
mov
cltd
sub
push
xchg
and
scas
loopne
arpl
inc
dec
or
add
push
mov
push
jb
adc
cmp
mov
std
lret
sarb
adc
pusha
dec
data16
insl
lods
sbb
mov
mov
jle
mov
andb
pusha
sti
xchg
test
popf
testb
loopne
xchg
jmp
lea
dec
mov
mov
push
xchg
leave
mov
andb
lods
shlb
in
adc
add
mov
add
enter
fcoms
jno
add
xchg
jl
clc
jno
cltd
pop
mov
shlb
pusha
mov
dec
stos
xchg
and
sbb
fcoms
aas
ja
adc
add
mov
inc
rclb
aaa
xchg
mov
loopne
mov
ja
lods
shlb
arpl
loopne
push
xchg
call
mov
stos
adc
and
jge
inc
mov
setbe
mov
aad
push
stos
and
push
cltd
and
and
jbe
loopne
sub
mov
mov
js
push
pop
popf
imul
push
xor
xchg
mov
add
pop
xor
add
and
inc
rclb
and
movl
cmp
push
add
pusha
lret
fwait
in
rcll
hlt
das
outsb
in
mov
jmp
pusha
adcb
mov
mov
and
pop
cmp
inc
pop
sub
shlb
pop
or
popa
dec
icebp
inc
shll
inc
add
incb
pusha
inc
imul
hlt
jle
inc
adc
fsubrs
cltd
jmp
pop
pusha
jae
test
shrb
mov
cli
pcmpgtb
stc
pushf
gs
mov
sbb
shll
mov
inc
popa
aaa
ss
xlat
pop
cmp
mov
mov
ja
pushf
rcr
add
sbb
out
negb
mov
pop
rclb
ror
movsl
jl
sub
mov
and
and
shll
mov
mov
cli
sbb
andb
out
insl
and
loopne
mov
je
mov
inc
and
popa
add
pusha
xor
inc
xor
movsl
outsb
jno
cmp
inc
cmpsb
loopne
hlt
jo
loopne
sub
xchg
mov
loopne
pusha
and
adcb
mov
add
xchg
ror
hlt
xor
push
cmc
repnz
jno
jb
lcall
xchg
mov
leave
mov
mov
arpl
push
and
inc
and
imul
mov
push
cmp
add
inc
enter
inc
mov
push
sbb
mov
test
shrb
pusha
and
fisubrl
pusha
inc
ljmp
mov
mov
mov
pusha
jl
and
stos
and
push
test
repnz
pop
xchg
mov
cmp
in
inc
add
xor
xor
ja
add
lods
pusha
pusha
adc
fwait
dec
pop
push
adc
mov
or
mov
out
push
loope
test
or
mov
inc
and
push
or
inc
pop
decl
add
out
jmp
xlat
cmp
push
repnz
addb
mov
sbb
cmp
sub
mov
mov
lret
xchg
lcall
inc
shll
movl
xchg
hlt
jp
popa
add
and
inc
orb
sbbb
stc
fidivrl
adc
pop
les
pop
loop
iret
aad
out
lock
les
cmp
sbb
icebp
out
daa
int3
lods
filds
add
pusha
andb
pusha
push
xchg
sahf
sti
mov
shlb
adc
and
dec
inc
adc
call
mov
mov
insb
add
sub
pusha
scas
cli
rolb
mov
dec
cmpsl
pop
fisubrl
out
fwait
das
scas
cld
in
shlb
mov
scas
aad
push
call
cmp
xchg
add
scas
iret
push
out
aam
clc
push
jb
add
add
lods
adc
mov
gs
dec
adc
sti
scas
jmp
mov
dec
dec
hlt
mov
jecxz
sbb
add
jb
pop
dec
jmp
and
pop
lock
jnp
pusha
loopne
pop
pushf
cmpsl
mov
aam
add
jge
and
push
sbb
jmp
cmp
mov
xchg
push
sbb
hlt
mov
gs
push
loop
mov
scas
mov
mov
fld
cli
xor
mov
adc
sub
push
add
xchg
sbb
inc
cmp
stc
adc
pop
sbb
inc
andb
es
shlb
js
lret
rolb
imul
pop
and
cwtl
sub
add
inc
lcall
mov
addb
in
jo
pusha
mov
push
daa
aas
adc
sub
andb
mov
je
inc
rolb
call
cli
fldl
sarb
and
ja
shl
aad
test
out
inc
test
and
shl
repnz
sti
in
and
cmpsb
rolb
mov
xor
pop
js
mov
ja
sub
mov
shl
jge
sub
mov
mov
pusha
push
sub
aas
cltd
inc
jle
pop
jmp
add
mov
jns
mov
fsub
add
lcall
div
ret
mov
shlb
popa
xchg
add
and
jecxz
sbb
arpl
pusha
add
addb
dec
and
rcrb
orl
cmpb
and
cmpb
xchg
hlt
and
mov
ret
jb
gs
inc
mov
and
inc
test
andb
les
addb
roll
add
scas
jp
movsb
pusha
and
pusha
add
fwait
mov
in
xor
loopne
lods
pusha
and
sub
adc
cwtl
leave
popa
pop
add
jb
inc
and
mov
and
xchg
incb
jl
enter
or
add
