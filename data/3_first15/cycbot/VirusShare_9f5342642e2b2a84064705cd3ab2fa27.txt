add
adc
addr16
xor
inc
and
and
push
add
and
push
jb
push
inc
xor
jo
add
add
adc
jbe
push
push
push
add
pusha
adc
pusha
adc
pusha
push
je
inc
and
pusha
jbe
adc
xor
add
xor
push
xor
add
inc
je
add
pop
add
inc
add
pusha
push
adc
push
add
je
add
pusha
add
inc
xor
add
xor
xor
add
xor
add
inc
add
jne
add
and
ja
jb
push
je
add
adc
add
push
push
push
add
xor
pusha
xor
push
adc
add
and
add
add
adc
and
fs
inc
and
add
xor
pusha
push
jo
add
adc
xor
push
inc
add
and
inc
push
inc
add
adc
push
adc
adc
adc
jae
adc
add
push
pusha
xor
arpl
and
add
je
pusha
push
push
adc
xor
and
inc
inc
add
daa
xor
xor
xor
pusha
push
add
inc
xor
adc
inc
adc
adc
jo
add
xor
push
add
add
pop
xor
push
xor
xor
and
push
add
jbe
inc
pusha
adc
push
add
push
add
ja
inc
add
inc
adc
xor
adc
push
inc
xor
and
add
inc
jae
aaa
jo
add
add
inc
jo
xor
add
push
jo
push
adc
add
inc
inc
add
adc
adc
inc
push
adc
inc
xor
inc
push
add
inc
push
push
push
jo
add
add
je
gs
pop
jo
pusha
es
popa
pusha
and
inc
jo
add
and
fs
aaa
and
xor
add
add
inc
push
jo
adc
inc
data16
add
inc
bound
jbe
add
push
push
pusha
adc
add
inc
add
arpl
add
xor
push
add
adc
and
inc
jbe
xor
je
push
add
push
adc
jo
popa
fs
adc
push
inc
add
xor
jo
fs
add
push
add
and
pusha
inc
adc
add
add
inc
add
xor
push
and
add
bound
add
add
and
inc
add
xor
add
and
and
je
inc
es
jae
pusha
push
add
and
add
pusha
push
bound
add
arpl
pop
add
pusha
inc
fs
add
push
and
inc
jbe
ss
inc
data16
add
adc
je
add
push
push
xor
inc
add
push
add
adc
pop
add
adc
add
daa
inc
add
add
and
inc
je
xor
inc
add
adc
push
add
push
jb
xor
jno
adc
push
and
pusha
inc
jb
xor
adc
add
pop
pusha
aaa
inc
push
inc
and
push
inc
jbe
push
add
pusha
jo
add
add
xor
pop
add
add
fs
add
xor
je
push
add
push
pusha
popa
inc
xor
inc
jae
add
adc
adc
and
inc
xor
jo
push
add
inc
inc
push
add
inc
xor
add
and
inc
jae
adc
add
push
push
push
inc
daa
inc
add
push
push
add
and
pusha
push
xor
add
jbe
adc
jo
addr16
push
adc
push
add
inc
pushaw
xor
inc
add
jb
push
push
aaa
inc
push
je
pusha
je
xor
push
inc
xor
add
inc
and
add
add
adc
bound
pusha
push
and
add
xor
inc
and
add
and
inc
push
add
pop
add
add
push
jo
xor
add
push
jo
add
add
pop
xor
adc
inc
adc
xor
fs
jae
add
fs
add
adc
push
adc
inc
push
es
inc
je
add
xor
arpl
inc
xor
add
add
inc
adc
inc
and
add
inc
xor
inc
adc
pop
push
add
inc
and
jo
inc
adc
xor
adc
add
adc
popa
adc
add
push
ss
arpl
jb
bound
jo
push
inc
add
fs
push
je
add
push
xor
add
inc
add
push
push
xor
add
fs
xor
popa
adc
ss
add
xor
inc
aaa
jo
inc
and
push
aaa
add
add
push
pusha
inc
add
inc
push
add
and
add
and
adc
adc
jo
add
inc
add
pusha
addr16
adc
inc
adc
jb
xor
inc
xor
add
xor
adc
add
inc
inc
and
inc
xor
pusha
and
jo
add
jo
add
inc
add
push
push
add
push
je
inc
je
inc
add
push
inc
gs
add
and
inc
add
push
adc
and
add
adc
xor
add
jb
inc
push
add
push
and
jb
add
add
fs
inc
add
add
push
and
and
inc
ss
inc
inc
and
adc
add
push
adc
inc
add
bound
xor
jb
es
jne
je
pop
inc
inc
jo
je
add
xor
jo
add
add
ss
xor
push
add
add
jo
add
push
adc
pusha
add
push
jo
adc
inc
adc
xor
xor
inc
pop
add
inc
push
inc
ja
inc
add
xor
add
je
inc
push
jo
push
and
add
adc
inc
pop
fs
inc
push
inc
je
add
add
adc
add
inc
add
xor
and
add
adc
inc
jne
add
inc
daa
fs
xor
pusha
and
and
xor
jo
add
adc
inc
pusha
adc
fs
and
and
adc
xor
add
inc
pop
inc
add
adc
and
add
pop
add
adc
and
daa
add
inc
jo
pusha
inc
add
pop
jo
add
add
xor
pop
add
adc
add
push
push
xor
xor
inc
aaa
adc
add
add
adc
adc
inc
add
push
daa
push
and
push
pusha
adc
inc
push
adc
and
push
add
add
xor
jae
adc
adc
push
and
inc
aaa
and
jae
adc
addr16
jno
inc
push
add
jo
inc
jb
je
and
inc
add
popa
je
add
adc
adc
jbe
xor
aaa
push
xor
push
and
xor
push
add
add
xor
xor
add
jbe
inc
pusha
jb
inc
inc
and
xor
ss
xor
and
push
push
add
add
xor
inc
jno
add
inc
push
xor
xor
jo
xor
add
adc
adc
add
xor
xor
je
add
pop
jo
and
add
adc
push
inc
push
pop
add
jno
push
je
add
push
xor
add
inc
adc
xor
fs
add
push
adc
push
inc
arpl
add
inc
pop
add
adc
inc
add
inc
inc
inc
adc
gs
and
push
adc
push
add
add
push
inc
je
add
jae
arpl
add
and
xor
add
xor
xor
add
gs
push
and
jo
je
add
inc
pop
adc
push
adc
xor
inc
inc
and
xor
push
je
xor
jae
push
and
aaa
and
add
add
es
inc
pusha
adc
inc
xor
adc
jo
add
add
push
adc
pusha
pusha
add
arpl
and
add
and
adc
add
and
add
add
xor
push
inc
add
push
adc
pusha
push
add
add
xor
add
pop
and
adc
xor
add
xor
jb
inc
add
xor
add
inc
inc
adc
inc
and
push
xor
bound
inc
je
xor
add
bound
push
data16
inc
and
inc
add
add
push
bound
add
push
jo
je
add
add
add
inc
push
xor
add
add
and
add
push
add
jo
adc
add
and
add
xor
adc
push
add
push
jo
inc
add
push
jne
inc
pusha
push
add
push
push
push
je
inc
push
push
xor
add
add
inc
xor
ja
fs
add
and
adc
add
add
inc
and
xor
add
xor
je
inc
inc
adc
inc
adc
push
add
inc
xor
push
push
pusha
add
jo
add
xor
je
add
fs
add
push
add
add
inc
and
push
popa
add
add
add
jb
xor
jno
data16
inc
add
arpl
inc
adc
add
xor
xor
jo
add
pushaw
adc
xor
add
pop
inc
xor
inc
inc
fs
fs
add
push
push
adc
add
inc
adc
and
add
xor
je
add
add
add
jae
pusha
inc
push
pusha
adc
inc
inc
pop
inc
add
push
add
inc
inc
add
and
and
and
adc
push
je
adc
adc
pusha
push
push
bound
inc
fs
adc
inc
pop
xor
inc
adc
jno
adc
inc
inc
inc
daa
add
inc
inc
add
inc
push
inc
push
push
inc
push
xor
and
add
inc
xor
inc
inc
push
pusha
jne
inc
je
add
add
bound
inc
and
pusha
es
add
add
and
adc
ja
add
xor
and
gs
jno
add
add
adc
push
xor
jo
xor
add
and
jo
add
gs
add
adc
push
push
jae
bound
add
xor
add
add
je
push
push
add
ss
pusha
adc
push
add
pusha
and
adc
xor
add
inc
add
adc
add
push
xor
adc
jo
and
aaa
adc
inc
inc
add
add
adc
and
add
inc
je
add
push
inc
adc
inc
ja
and
push
add
adc
and
and
jne
and
adc
add
adc
and
es
xor
pusha
adc
and
jo
inc
inc
push
adc
and
add
push
pusha
and
push
xor
xor
xor
jo
inc
and
add
and
jo
inc
inc
jo
inc
popa
xor
xor
xor
push
adc
inc
add
and
add
jb
pusha
fs
add
xor
popa
add
inc
ja
push
xor
inc
add
push
adc
adc
add
and
add
inc
and
push
add
inc
adc
xor
ja
pop
inc
gs
add
aaa
inc
jno
aaa
add
fs
adc
daa
add
adc
push
and
xor
inc
add
xor
add
pop
pusha
jae
inc
add
adc
xor
add
arpl
push
add
and
inc
push
inc
and
pusha
adc
jbe
add
adc
inc
add
push
inc
adc
push
add
adc
and
add
inc
inc
push
and
adc
push
inc
adc
xor
inc
and
add
ja
add
add
push
and
add
push
add
pop
add
xor
push
push
xor
xor
and
add
je
and
adc
inc
add
je
fs
adc
adc
push
inc
adc
adc
add
xor
add
add
xor
adc
jb
push
add
push
add
and
jo
jo
add
adc
add
add
and
adc
popa
add
xor
ja
inc
add
adc
fs
add
add
inc
inc
inc
inc
inc
jne
jbe
inc
and
jb
push
inc
xor
inc
bound
adc
jb
jne
push
push
push
add
inc
data16
adc
jo
add
and
push
adc
adc
inc
jbe
arpl
adc
and
inc
jo
adc
add
push
jne
and
push
push
and
jo
push
adc
pop
add
je
and
adc
add
inc
xor
pusha
jo
jb
pop
add
add
add
add
pusha
inc
push
push
inc
and
xor
and
and
jo
je
add
daa
and
push
and
gs
push
xor
push
add
push
xor
je
and
fs
push
inc
push
push
xor
xor
add
je
fs
pusha
adc
add
daa
xor
add
add
push
and
je
push
inc
adc
push
add
push
pusha
add
push
add
pusha
xor
es
and
je
jb
ja
jbe
and
inc
jo
add
and
inc
add
inc
add
add
ja
bound
add
fs
inc
add
inc
and
xor
push
inc
and
xor
je
and
adc
add
and
inc
adc
and
je
add
jo
add
arpl
jb
and
pop
adc
and
arpl
push
adc
push
and
push
inc
pop
jo
add
add
push
pusha
pusha
xor
and
inc
add
adc
xor
add
jo
add
je
inc
and
push
data16
adc
daa
xor
daa
xor
push
push
adc
inc
inc
add
adc
add
jne
arpl
add
inc
inc
adc
add
jo
add
add
inc
and
xor
pusha
pop
inc
inc
fs
inc
adc
xor
inc
push
jne
adc
inc
add
xor
and
inc
jo
push
add
and
adc
inc
jae
and
xor
add
adc
pop
adc
inc
add
inc
push
add
je
push
add
push
fs
bound
xor
adc
add
and
push
inc
and
add
inc
jo
adc
add
push
pusha
push
and
add
and
xor
jae
push
push
jne
push
inc
add
jb
je
jae
add
inc
push
and
xor
add
push
and
inc
arpl
add
pusha
ja
adc
push
xor
inc
inc
add
pusha
add
and
inc
push
inc
and
add
je
add
and
add
add
xor
push
inc
jno
and
add
push
push
bound
push
add
push
inc
inc
push
push
add
adc
aaa
inc
push
add
jbe
jae
push
inc
push
and
and
push
daa
add
fs
push
push
add
adc
add
je
add
add
and
add
ja
fs
bound
push
jo
adc
push
daa
inc
popa
pusha
add
pusha
xor
add
adc
adc
push
xor
and
push
adc
inc
jo
pusha
inc
jo
and
adc
add
je
pusha
addr16
add
add
push
inc
bound
addr16
inc
adc
add
and
je
inc
and
push
add
adc
jne
add
push
pop
add
and
xor
inc
add
xor
inc
xor
inc
adc
add
xor
and
xor
jo
add
fs
add
es
and
daa
add
and
and
push
add
and
daa
fs
add
jo
and
aaa
add
push
jbe
ja
push
inc
adc
and
push
add
aaa
push
adc
add
add
ja
inc
add
fs
inc
jo
inc
inc
inc
add
pusha
adc
add
and
add
pusha
jb
inc
add
jo
add
xor
inc
adc
pusha
xor
adc
jae
add
inc
push
inc
adc
inc
add
and
and
add
pusha
adc
jbe
and
add
inc
inc
inc
pusha
xor
adc
add
je
jo
push
adc
pusha
push
push
push
push
adc
add
inc
xor
adc
ss
add
jo
xor
and
adc
pusha
aaa
inc
jbe
add
add
add
ja
add
add
adc
xor
inc
ja
add
push
push
add
push
and
pusha
jo
inc
pusha
pusha
add
inc
adc
add
jb
and
aaa
xor
add
and
push
inc
xor
adc
data16
add
and
push
xor
and
push
add
push
add
and
add
and
jo
add
adc
add
add
push
add
and
xor
adc
adc
aaa
push
inc
and
add
add
adc
add
xor
adc
add
xor
inc
adc
add
pusha
pusha
add
jo
push
push
jo
add
push
push
bound
xor
jo
push
xor
ja
push
jo
push
adc
and
pop
add
adc
and
aaa
je
add
inc
inc
adc
add
and
adc
inc
fs
xor
jae
gs
add
add
xor
inc
inc
push
xor
adc
add
jb
pop
inc
inc
add
push
inc
add
push
add
and
je
je
ja
inc
jo
push
add
jo
add
adc
xor
inc
adc
inc
je
xor
push
inc
inc
push
add
add
add
add
and
and
adc
adc
xor
inc
push
inc
pop
inc
add
and
arpl
inc
fs
push
and
push
push
fs
add
adc
push
and
adc
inc
push
adc
and
inc
push
je
push
inc
arpl
pusha
and
and
xor
jb
and
xor
push
inc
pusha
adc
pop
add
adc
inc
adc
inc
adc
inc
add
data16
inc
adc
add
push
push
add
inc
jno
jae
and
add
adc
push
add
push
and
push
pop
inc
popa
and
add
je
add
push
xor
push
inc
pusha
and
push
pusha
and
and
pusha
push
add
aaa
add
and
addr16
inc
inc
add
and
bound
inc
xor
push
jno
jb
jno
inc
inc
popa
adc
xor
pusha
data16
inc
add
bound
push
xor
pusha
inc
xor
inc
je
xor
add
add
ja
jae
adc
pusha
push
xor
add
xor
add
inc
adc
inc
add
popa
jo
adc
add
push
jo
add
push
add
add
jae
and
and
xor
add
jo
inc
fs
add
inc
je
inc
jo
adc
and
push
add
push
arpl
adc
xor
and
adc
pusha
jb
popa
add
and
pusha
xor
add
adc
add
jo
adc
pusha
daa
add
adc
add
and
push
add
adc
jne
xor
and
and
push
inc
jae
jne
pop
inc
adc
add
adc
add
push
pusha
adc
add
push
jbe
pop
inc
push
add
adc
push
xor
xor
push
push
adc
add
push
inc
bound
adc
xor
and
inc
push
adc
inc
push
xor
daa
push
pop
add
inc
add
je
jo
and
and
add
adc
push
fs
pusha
adc
push
add
add
push
jo
push
add
add
adc
pop
push
add
add
inc
gs
pusha
adc
adc
add
inc
add
inc
jo
add
adc
bound
inc
add
addr16
adc
adc
and
add
adc
add
inc
add
push
and
add
xor
and
and
add
and
pop
push
push
inc
and
adc
add
inc
aaa
add
je
and
adc
add
inc
adc
xor
pusha
jno
xor
je
je
daa
je
add
fs
and
add
xor
xor
and
inc
and
add
xor
daa
add
add
add
inc
add
jo
inc
inc
bound
add
push
je
jae
push
inc
inc
pusha
jbe
push
jo
add
and
inc
aaa
pusha
popa
add
add
jo
adc
jne
adc
pusha
popa
add
pusha
addr16
jno
jae
xor
add
adc
inc
xor
inc
push
and
adc
jo
add
and
pusha
inc
push
push
push
add
add
pusha
add
add
add
add
daa
add
inc
inc
add
add
adc
add
and
ja
bound
fs
and
xor
push
xor
push
inc
and
inc
adc
ss
xor
xor
jbe
add
add
xor
and
pusha
push
adc
fs
push
and
inc
push
je
add
xor
and
and
inc
add
and
je
pusha
adc
xor
push
ja
xor
push
adc
inc
jno
xor
adc
xor
adc
add
push
inc
push
xor
inc
jo
xor
inc
and
daa
add
bound
add
xor
xor
push
inc
pusha
push
adc
pop
pusha
xor
inc
push
xor
gs
add
and
jne
adc
adc
push
inc
pusha
xor
jne
xor
and
add
inc
xor
xor
adc
add
xor
xor
and
add
adc
inc
jne
addr16
xor
je
gs
adc
push
and
jb
daa
add
inc
jo
je
add
xor
jb
jb
push
adc
push
xor
pusha
inc
push
push
xor
add
and
add
xor
ja
inc
add
push
xor
xor
and
inc
push
inc
add
inc
push
add
and
daa
add
push
inc
inc
jb
adc
jbe
arpl
jb
and
inc
add
inc
gs
pusha
adc
add
fs
add
pusha
inc
push
xor
push
adc
push
je
push
xor
adc
pusha
add
push
pusha
ja
jo
ss
inc
push
adc
fs
add
addr16
pop
xor
inc
and
and
add
pop
xor
je
inc
inc
add
adc
data16
add
and
inc
and
add
push
aaa
jo
je
add
push
inc
jo
and
add
push
inc
push
add
add
add
add
popa
adc
jo
inc
and
xor
jo
add
and
pusha
popa
inc
push
add
inc
and
ss
pop
inc
daa
inc
jb
add
add
push
add
jo
jo
inc
pusha
aaa
pusha
and
xor
adc
xor
inc
xor
and
and
and
pusha
inc
add
xor
add
add
add
and
adc
and
push
ja
xor
push
je
inc
adc
add
and
add
inc
bound
xor
add
fs
push
inc
add
and
add
xor
add
push
add
jae
inc
inc
and
inc
and
jae
push
jo
add
add
push
push
pusha
and
arpl
push
and
data16
xor
add
xor
add
add
adc
and
add
jo
push
adc
jne
and
and
push
add
inc
and
pusha
adc
popa
add
adc
pusha
ja
add
jb
arpl
inc
xor
push
adc
inc
adc
and
inc
inc
popa
xor
add
xor
add
add
inc
inc
add
adc
jo
xor
adc
inc
inc
inc
inc
gs
add
add
inc
and
jae
and
xor
push
inc
push
add
and
adc
add
adc
pusha
add
jne
adc
inc
inc
inc
add
xor
add
adc
xor
add
je
adc
add
pop
push
inc
add
inc
and
push
daa
fs
add
push
pusha
inc
adc
xor
push
inc
add
add
push
add
and
add
fs
push
inc
add
and
jo
inc
add
inc
inc
add
bound
inc
push
pop
pusha
fs
inc
xor
inc
and
add
xor
add
adc
push
jo
jo
adc
add
and
push
fs
add
xor
add
xor
add
add
push
adc
jb
inc
add
adc
inc
daa
add
push
adc
fs
inc
and
push
mov
insb
mov
or
mov
sbb
mov
sub
add
cmp
cld
inc
xor
lcall
add
mov
add
adcb
fildl
inc
les
push
fwait
sub
add
inc
mov
cmp
cmpsl
inc
js
xor
or
add
mov
adc
add
jmp
rclb
test
sbb
out
imul
lret
aaa
pop
subb
add
lods
out
in
push
xchg
xor
decl
mov
int
outsl
jbe
jl
insl
mov
add
inc
add
cmc
jb
imulb
adcb
xchg
mov
es
mov
xchg
push
and
gs
rorl
add
adcb
inc
enter
cmp
pop
je
pusha
mov
push
mov
in
xchg
out
stc
sbb
aam
xor
dec
and
xor
pop
aaa
out
mov
aaa
push
cltd
pop
popf
pushf
add
inc
mov
mov
movsb
mov
cmpsb
inc
mov
add
add
and
add
lods
push
int
cld
jle
sbb
sub
add
fstl
fwait
sub
rcrb
repnz
mov
pop
arpl
add
leave
ret
andl
mov
add
ss
lcall
pop
stos
js
pop
inc
mov
popf
aad
rolb
imul
pop
outsl
mov
sbb
sahf
insb
mov
inc
out
cmp
lock
pop
fs
xchg
push
xchg
jmp
mov
popf
xchg
and
mov
cmp
add
insb
mov
loope
mov
enter
pop
mov
sbb
xchg
add
sbb
pop
sub
adc
mov
subb
fld
pop
xor
addl
ficompl
fisubrl
sahf
sub
inc
mov
and
fcoml
xchg
mov
bound
sahf
jae
inc
rcrb
sub
repz
jg
scas
add
cs
addr16
or
test
sbb
in
int
jle
sbb
divb
add
test
xchg
mov
jns
lcall
popf
cmp
add
xor
mov
push
pop
in
lret
mov
mov
orl
mov
dec
leave
fdivs
add
cmp
xor
mov
cmp
lahf
mov
inc
lds
rcr
daa
shlb
mov
fildl
add
ror
and
add
rolb
repz
lds
or
rcr
jno
mov
pop
xor
in
les
aas
mov
shrl
inc
mov
push
dec
rorl
pop
rolb
addr16
jbe
aas
std
push
roll
out
lret
cmpb
add
aas
addr16
adc
repz
fadd
lahf
add
add
mov
lock
rol
mov
mov
mov
and
add
inc
mov
add
rolb
add
sub
jecxz
lret
enter
ds
push
ja
aas
adcl
sarl
rorb
sbb
lret
pop
pop
into
movl
jmp
xchg
daa
ds
adc
cmp
xchg
cmp
cltd
rorb
push
shrl
and
shll
mov
xor
in
sub
sub
push
lds
pop
les
ds
shll
rcr
mov
repz
das
enter
add
pushf
shr
jg
xchg
mov
mov
sub
sar
fadd
xchg
jle
mov
mov
ret
adc
xchg
add
out
jle
sar
fs
jle
push
add
outsl
mov
mov
out
rol
jmp
out
inc
aas
adc
jae
mov
pop
aas
icebp
repz
add
jae
icebp
in
rcrb
pop
into
enter
sbb
ret
ror
dec
or
add
sar
xchg
add
pushf
int3
adc
xchg
lahf
push
and
add
inc
in
push
pop
outsl
lret
dec
xchg
inc
sub
cmp
and
sub
jb
or
add
jmp
test
sarb
cmp
mov
sub
add
jb
and
pop
pop
insl
sub
inc
sub
movsl
jl
mov
mov
addr16
ficomps
mov
add
xor
mov
out
dec
mov
add
push
fcomps
add
add
mov
xchg
movsb
addr16
push
lcall
inc
cmc
loop
fldcw
mov
add
repz
add
lea
jo
cmp
mov
jae
mov
les
int3
adc
movsl
roll
mov
iret
lret
mov
loope
ret
and
int
loopne
sub
add
lods
mov
into
inc
jg
xor
ret
das
sub
add
add
inc
cmp
jb
and
mov
sub
add
int3
je
ret
inc
je
push
push
xchg
inc
mov
xchg
add
mov
xchg
arpl
pop
adc
cmp
sti
lds
xchg
push
cmc
or
mov
push
add
cmp
in
aas
sbbl
stos
stos
cmc
jnp
imul
mov
add
add
cmpsb
xor
xchg
or
jae
dec
mov
jmp
and
add
out
sahf
sub
mov
test
or
divl
stc
test
in
sub
add
lock
and
dec
out
ret
lret
inc
cld
xor
stos
pop
movb
add
xlat
loopne
xchg
ss
mov
fists
hlt
fs
mov
cwtl
lret
mov
shrb
movsl
mov
add
sub
mov
dec
mov
test
jns
and
clc
loope
cmc
mov
ret
fsubr
mov
jbe
sbb
add
adc
lahf
scas
mov
aaa
and
flds
add
or
movsl
pop
cmc
mov
lcall
jle
mov
mov
jae
outsl
adc
clc
arpl
xor
movsb
js
sub
je
test
add
mov
lahf
mov
inc
pusha
mov
add
movsb
stc
jmp
or
jno
cltd
lret
in
cmp
andl
lcall
cs
add
jae
sar
cmc
mov
daa
jae
sbb
daa
cmp
pop
jmp
pop
jo
inc
mov
push
xchg
xchg
popa
scas
sub
lods
jl
fstps
xchg
repz
mov
or
mov
mov
iret
add
mov
mov
xor
gs
loope
aas
sbb
or
shrl
push
stc
sub
scas
es
fs
aas
add
push
out
inc
psubq
daa
xlat
cmp
mov
mov
xchg
mov
xor
add
lret
aam
push
ret
and
test
mov
add
lods
jecxz
mov
xchg
pop
rcll
add
leave
test
cmovl
ja
adc
mov
adc
xchg
inc
mov
iret
mov
in
xchg
add
in
cld
in
out
pop
stos
ja
sbb
mov
lret
sub
sbb
or
mov
sub
push
inc
pop
xor
push
lock
call
or
xchg
pop
js
xor
jae
xor
xlat
sbb
iret
push
shll
addr16
mov
mov
add
lret
scas
mov
add
dec
gs
mov
cmp
daa
xchg
test
dec
fldt
dec
mov
push
xchg
rorl
lods
iret
outsl
cld
movsb
and
add
flds
or
add
add
mov
shrl
dec
leave
neg
icebp
sti
xchg
pop
incl
and
out
cmp
inc
pop
push
test
les
cld
subl
add
or
add
inc
jg
outsb
jge
push
sub
aam
mov
pushf
lahf
jae
lcall
out
mov
xchg
or
dec
xchg
bnd
ret
add
test
fnsave
pop
or
add
cmpb
push
mov
stos
stc
sub
add
int
pop
shl
in
in
test
test
mov
mov
push
mov
loope
mov
lret
out
xchg
mov
pop
sti
inc
dec
rcll
mov
or
xchg
incb
aas
arpl
add
icebp
sub
orl
jecxz
lods
adcl
outsb
fbld
add
and
icebp
divb
cmp
xor
add
sbb
mov
or
aam
ds
lods
in
mov
scas
cmp
add
inc
jae
mov
pop
dec
mov
push
sbb
mov
xchg
inc
mov
mov
adc
stc
lds
mov
dec
mov
or
mov
push
sub
lods
adc
mov
insb
mov
insl
insb
mov
adc
sbb
pop
sbb
cwtl
push
sti
add
dec
bound
stos
mov
data16
add
bound
jb
mov
xor
mov
or
add
add
lods
fisubrs
mov
out
and
add
fimuls
mov
mov
and
add
ljmp
xor
add
pusha
mov
rcrl
aaa
int
xchg
ret
adc
jmp
add
xor
dec
popl
pop
leave
stos
hlt
dec
lds
add
int
popf
fdivs
and
cwtl
iret
fs
xor
add
stos
inc
mov
lss
inc
mov
out
cmpsb
xor
stos
mov
imul
mov
lea
and
inc
shrb
vmovss
xchg
pop
lahf
mov
fs
sti
pop
add
add
out
adc
sarl
ja
dec
cmpsl
int
adc
test
int3
arpl
sbb
add
push
push
adc
dec
es
pop
cwtl
xor
aam
push
inc
cltd
push
das
shlb
in
jb
cmp
cmp
shlb
bound
cmp
jecxz
adc
cmp
add
les
mov
dec
mov
add
imull
add
ret
rolb
lcall
pop
inc
cmp
pop
mov
mov
jmp
xchg
inc
mov
xchg
pop
adc
pop
std
inc
mov
dec
xor
rol
cmp
add
or
mov
jp
cmp
inc
cld
push
cltd
sar
sti
cmpsb
push
sahf
sub
mov
jmp
mov
mov
cmpl
add
add
adc
lret
mov
adcb
inc
push
call
in
jmp
lods
imul
mov
add
iret
lods
mov
xchg
jge
sbb
adc
repz
push
pop
out
xor
insl
add
add
inc
out
int
sub
or
lret
jb
dec
mov
adc
pop
nop
adc
push
rclb
cld
jecxz
sti
sbb
iret
out
inc
xor
xchg
lcall
aam
xchg
std
fldenv
jnp
jbe
cwtl
inc
xor
mov
add
add
ror
lcall
adc
js
mov
xor
sbb
push
mov
daa
sti
jle
push
dec
mov
inc
addb
mov
mov
in
pop
movsl
orb
mov
icebp
call
push
or
inc
jmp
mov
mov
scas
in
mov
add
mov
push
push
push
sub
cmc
jae
outsl
adc
mov
push
out
add
add
or
jne
gs
push
mov
cmp
testl
mov
mov
cmp
jl
sub
adc
jns
stc
jne
fnsave
sbb
dec
inc
adc
xchg
add
lcall
js
mov
jmp
lret
loope
and
cmpb
fsubl
outsl
loopne
jne
jecxz
and
mov
lret
mov
emms
lcall
sub
mov
xor
popf
icebp
cld
pop
push
dec
mov
sbbb
mov
scas
cld
sub
cmpb
sbb
inc
mov
clc
pop
iret
cmp
sub
mov
shrb
mov
jnp
int3
xor
dec
xchg
int
push
xchg
inc
jae
pop
push
jbe
lods
mov
rorb
out
movsb
cmpsb
add
add
jle
mov
mov
adc
dec
xor
adc
xchg
mov
outsb
xlat
lods
xor
push
dec
movsb
xchg
jne
dec
mov
mov
outsl
cltd
cmp
xchg
mov
incl
roll
mov
cmp
sbb
outsb
das
fxch
lcall
add
or
mov
repnz
push
push
pop
in
dec
jnp
arpl
mov
ret
sahf
icebp
pop
mov
sub
mov
outsl
aaa
cmp
add
jg
push
mov
add
inc
mov
add
xorl
mov
testb
jbe
and
add
leave
out
jg
cmpsb
lods
fcomps
aaa
mov
lcall
mov
adc
and
int3
scas
shrl
das
daa
inc
mov
and
or
int3
dec
fcmovu
popf
mov
add
lea
stc
je
setp
cwtl
or
add
data16
mov
inc
fldt
jecxz
sbb
lahf
scas
and
out
mov
popa
lods
sbb
add
add
mov
mov
call
fdivl
in
repnz
push
jnp
mov
faddl
add
popa
imul
ret
add
sub
dec
dec
adc
xor
or
pop
inc
dec
roll
mov
mov
daa
ds
out
mov
mov
mov
outsl
pop
shlb
add
imul
addr16
sbb
test
pop
jle
inc
ja
pop
cmpsl
mov
cmp
inc
fldcw
jne
and
cli
sahf
fidivrl
pop
repz
sti
ljmp
or
sub
popa
and
xchg
adc
mov
fsts
xor
repz
sbb
in
insb
mov
std
aaa
and
lods
cwtl
ds
adc
adc
dec
push
mov
and
add
rorl
add
in
sarb
ss
inc
jmp
cmpsl
push
mov
add
sbb
sub
scas
mov
xchg
lods
or
add
rcll
dec
mov
sub
xor
add
xchg
psubusw
pop
repz
add
rclb
add
sbb
cmp
das
and
sub
cmpsl
mov
push
stos
idivl
add
push
and
mov
subl
add
add
fcmovne
xor
repnz
mov
nop
xor
or
add
pop
sbb
lods
js
out
cmp
jl
in
cmc
sub
daa
sub
add
xor
iret
and
int
sbb
mov
jno
dec
popf
sbb
lret
rorb
add
lret
test
add
ja
jmp
js
fistl
mov
ret
ret
add
lods
dec
cmpl
add
sbb
sub
add
clc
adc
sub
scas
mov
mov
add
jb
sub
push
shrl
pop
das
insl
cmpsl
sub
add
mov
xor
insl
sub
add
jns
mov
dec
sbb
push
sbb
jecxz
inc
cmpsb
sbb
pop
icebp
fsubrs
dec
mov
jge
cs
pop
popf
mov
sbb
jnp
aad
scas
or
add
hlt
jns
out
xchg
ljmp
mov
lods
hlt
sbb
fdivrs
sbb
mov
jge
xchg
mov
jle
inc
cmpsl
push
cwtl
shrb
imul
mov
leave
push
jmp
add
lcall
popf
pop
daa
ja
call
inc
sub
sub
add
es
leave
push
inc
addl
cwtl
dec
mov
lret
mov
pop
cmp
lea
test
inc
jl
push
cmc
lret
mov
pop
pop
ficompl
mov
jne
inc
jmp
cmp
or
xchg
out
push
jmp
inc
scas
inc
andl
push
aad
cmp
mov
mov
mov
inc
inc
add
sarb
int
mov
int3
std
jbe
inc
outsl
cmp
xor
popf
daa
push
xor
test
push
outsl
dec
ljmp
add
arpl
cwtl
bound
mov
xchg
adc
xlat
xor
fistl
mov
clc
pop
cwtl
add
sti
roll
mov
sub
add
mov
fdivl
ret
ficoms
hlt
into
cmp
mov
pop
dec
or
fiaddl
xor
testb
pop
xchg
mov
lahf
mov
fwait
mov
repz
push
xchg
and
sub
mov
or
stos
aas
cmp
popf
cmp
push
in
dec
stc
and
cmpsl
inc
pop
mov
fsts
data16
add
popa
jnp
sti
ja
or
mov
or
cs
push
scas
mov
xor
ds
xchg
outsb
or
and
enter
adc
mov
and
mov
and
add
notb
ljmp
add
insb
mov
dec
push
and
or
inc
ljmp
test
mov
mov
push
iret
icebp
pop
into
cltd
add
pop
sti
mov
xchg
lea
call
in
sub
call
cmp
jne
push
push
push
call
mov
shl
mov
add
push
push
push
push
push
call
leave
ret
mov
mov
mov
or
lea
lea
sub
shr
lock
and
ret
mov
lea
add
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
call
test
jne
push
call
test
je
leave
ret
arpl
lea
dec
mov
mov
stc
in
sub
andl
push
push
mov
iret
mov
in
int
pushf
daa
dec
rcl
dec
mov
mov
dec
mov
inc
cwtl
mov
mov
cmpsl
cli
mov
push
cwtl
jne
push
fistpl
lock
add
add
add
mov
mov
lods
std
jbe
flds
sub
add
push
js
cmp
jne
aam
push
mov
mov
popf
in
sbb
shlb
sbb
cmp
or
xor
adc
mov
fadds
gs
push
roll
push
add
inc
int3
sbb
cwtl
int3
mov
add
lret
mov
jecxz
mov
xor
pushf
push
push
fs
shl
sub
add
add
add
or
add
sbb
call
popa
scas
mov
sahf
lods
movsl
das
push
sbb
mov
ja
stos
pop
dec
inc
mov
stos
dec
mov
mov
je
aas
dec
subb
inc
dec
mov
pop
bound
fbstp
test
inc
testl
sub
push
push
aas
mov
repz
in
mov
add
cli
cmc
fdivr
inc
mov
mov
cmp
movsb
int
out
mov
add
sar
inc
outsl
loope
and
xchg
jp
loopw
scas
call
inc
sbb
jns
mov
push
inc
jle
movsl
enter
and
add
sbb
outsl
roll
sbb
in
imul
mov
std
xchg
cltd
pop
adc
rorb
or
add
enter
in
mov
mov
add
jmp
insb
mov
mov
mov
jg
idivl
dec
mov
outsb
mov
mov
sahf
loopne
lahf
inc
adc
fdivp
mov
fstpl
cmp
testb
fucom
add
push
dec
mov
mov
jp
push
push
push
aas
js
andb
add
and
and
loope
inc
sub
nop
shlb
fists
inc
dec
inc
push
push
inc
fisubrs
negb
ret
add
dec
mov
mov
jmp
das
je
jmp
jmp
mov
mov
pop
inc
cwtl
mov
je
rcll
iret
xchg
aaa
fwait
inc
testl
jns
add
test
loop
repnz
inc
or
add
je
push
cmp
leave
push
inc
cld
lods
leave
fbstp
lea
jp
pop
push
into
mov
mov
push
pop
out
sbb
jns
test
xor
mov
mov
scas
dec
fcoml
lds
add
fs
and
mov
mov
leave
setp
xor
ret
inc
xchg
dec
push
jno
mov
clc
orb
dec
mov
les
imul
test
and
out
xlat
out
fimuls
lahf
inc
ret
mov
dec
and
or
sbb
lcall
add
sub
hlt
mov
pushf
add
jmp
mov
xor
dec
mov
scas
pop
xchg
add
das
pop
mov
cltd
inc
adc
mov
inc
cmp
mov
lea
add
idivl
pusha
mov
mov
push
inc
adc
jae
pop
es
push
hlt
mov
stos
sub
add
and
and
lea
loopne
gs
lods
scas
push
cmp
add
mov
cmp
push
add
mov
add
leave
pop
dec
out
stc
roll
sbbl
movsb
adc
lcall
xchg
add
mov
nop
in
mov
dec
repz
mov
xor
lods
jge
cmp
or
pop
mov
add
sbb
shr
xchg
hlt
mov
add
adc
jmp
add
les
cmp
movsl
movsl
mov
aas
ljmp
cltd
push
push
inc
mov
divl
and
mov
loope
xchg
enter
inc
mov
add
idiv
insl
aam
adc
imul
mov
xor
pop
push
mov
scas
add
add
inc
insb
mov
mov
lea
into
ja
push
push
inc
in
cmpsl
and
clc
hlt
mov
xchg
mov
inc
cmp
jmp
push
push
cwtl
lea
add
cwtl
gs
bnd
lret
sbb
add
pusha
mov
mov
fadds
mov
out
xchg
mov
into
push
cwtl
fnstsw
push
mov
cld
mov
mov
stc
mov
adc
bound
pop
mov
aam
or
add
sbb
add
shrb
dec
ja
insl
out
sub
in
add
push
cmc
int3
repz
loopne
idivl
xchg
push
pusha
mov
sarl
push
sub
arpl
xor
in
inc
mov
sahf
in
add
icebp
hlt
dec
mov
test
push
or
mov
add
mov
push
ss
mov
int3
gs
add
test
mov
jbe
das
add
sub
pop
ds
lret
jle
xlat
popa
mov
ss
mov
pop
mov
ret
cmpsb
addr16
mov
movsb
aas
inc
mov
sub
mov
dec
mov
sbb
sbb
mov
mov
sbb
add
scas
outsb
ud2
loopne
dec
mov
mov
xchg
jg
repnz
push
int
sbb
jp
pop
fnsave
flds
jbe
or
mov
mov
push
or
cmp
sub
dec
inc
inc
hlt
jp
outsb
gs
out
test
add
and
lret
xchg
mov
cmp
fiaddl
lods
xor
cmp
cmpsb
xor
mov
cwtl
cwtl
testl
mov
aas
push
cmp
mov
divb
add
loopne
into
popf
cltd
ret
in
mov
es
ja
pushf
std
mov
mov
push
inc
mov
pop
push
sbbl
jg
js
jle
dec
dec
mov
add
and
mov
jo
xor
sbb
rol
stos
mov
sub
outsb
ljmp
or
mov
dec
clc
into
insb
mov
rol
mov
cmpb
popf
ret
xor
pop
cmp
add
or
add
and
pop
inc
out
lds
jbe
sbb
jns
lahf
aas
jo
movsb
dec
cmc
mov
pop
repz
adc
mov
hlt
out
jae
outsb
arpl
adc
mov
in
xchg
add
mov
pop
stos
or
shll
lods
xchg
ficoml
dec
mov
mov
sbb
jo
sub
sub
add
mov
test
push
or
mov
mov
jo
adc
or
add
xchg
lcall
xor
fldpi
addb
add
jp
aaa
leave
mov
in
mov
aas
aam
mov
add
call
dec
push
jge
and
add
and
ja
add
xchg
sti
ja
xchg
mov
cmp
mov
mov
mov
sbb
and
dec
and
xchg
sti
mov
jl
and
aaa
lock
mov
mov
mov
mov
fsubrl
xchg
dec
mov
push
and
mov
sbb
mov
sub
add
loope
mov
sub
mov
out
sbbl
lods
dec
mov
gs
xchg
pusha
mov
lcall
jo
mov
pop
push
jnp
das
mov
pop
dec
cmp
add
sbb
int
mov
add
mov
or
sbb
xchg
adc
pop
or
movl
out
mov
lret
mov
xchg
stc
cmp
push
lods
dec
lret
jne
pop
mov
fstl
mov
push
cmp
mov
in
mov
cmp
sahf
insb
mov
inc
mov
divb
sbb
jne
das
hlt
push
cmpb
in
lea
ret
or
in
std
rorb
add
daa
pop
out
mov
fbstp
in
inc
dec
inc
mov
xchg
stc
inc
subb
mov
mov
add
adc
into
dec
inc
jne
pushf
mov
fdivp
inc
mov
mov
movsl
lahf
shll
out
jg
les
jns
push
push
mov
add
sbb
mov
adc
add
cmp
sahf
mov
add
bound
sub
dec
int3
mov
andl
add
gs
mov
dec
mov
push
sub
rcrb
ljmp
adc
addr16
adc
popf
insl
pusha
mov
adc
int
inc
gs
cld
leave
repz
ja
adc
xor
jmp
adc
or
imul
into
mov
cmp
idiv
cmp
ret
cs
cmpsb
loope
bound
shr
data16
add
in
icebp
mov
mov
pop
sbb
lds
shrb
mov
mov
jle
roll
enter
and
add
adc
imulb
ds
pop
sub
cmp
or
jns
xor
popf
loope
lods
sub
nop
xchg
jns
bound
push
cltd
jl
subl
gs
arpl
fiaddl
cmp
mov
adc
enter
mov
pop
inc
inc
cmp
movsl
push
inc
inc
dec
adc
cmc
push
ljmp
push
pop
inc
jo
jo
cmp
add
js
std
pushf
or
out
flds
add
mov
pop
in
mov
lcall
adc
rcr
cmp
add
dec
and
aad
adc
ss
mov
nop
stc
sbb
sub
mov
xor
mov
fcmovnb
mov
mov
icebp
ss
lods
daa
pop
mov
add
sbb
and
add
mov
out
mov
jns
sbb
out
jo
dec
mov
add
and
add
mov
sub
cmc
pop
enter
adcl
mov
gs
mov
fwait
xchg
fisubrs
pop
jle
into
mov
mov
mov
out
adc
pop
mov
add
and
sbb
mov
add
xorl
lret
popa
inc
aam
mov
pop
pop
jg
int
pop
mov
fsubp
dec
pop
cmpsb
or
add
out
test
jnp
pop
cmpb
cmp
mov
es
xchg
push
cmp
mov
and
pop
rorb
and
xor
add
or
xchg
std
or
lods
add
jb
jmp
add
stc
rorb
mov
push
push
xor
add
lret
jb
loop
das
pop
push
cmp
lret
jmp
out
fsubrs
jmp
in
sbb
inc
jge
insl
add
add
movd
mov
push
aad
dec
fcmove
push
mov
mov
or
add
jmp
mov
mov
cmp
mov
stos
inc
mov
sbb
jae
btl
subb
xchg
cld
int3
inc
xchg
push
das
ret
mov
cmp
test
add
add
xor
pcmpeqw
out
pop
in
and
popa
push
lahf
jb
sub
inc
int
mov
mov
mov
outsb
insb
mov
rol
cltd
mov
dec
inc
stos
push
mov
mov
add
mov
inc
es
js
lds
pop
xchg
jnp
mov
adc
mov
aad
mov
mov
xchg
mov
cmpsb
popl
cmp
rclb
jmp
test
mov
mov
shlb
add
mov
cli
sub
mov
mov
jns
mov
pop
mov
xor
mov
lahf
clc
xlat
push
out
aad
imul
mov
pop
pop
popa
push
adc
into
scas
mov
adc
scas
cs
and
add
pop
adc
out
xchg
insl
shrb
add
cmp
adc
test
aad
gs
cmp
push
es
into
cld
sub
in
mov
mov
gs
add
sub
sub
cmc
sbb
push
sbb
add
cmp
mov
push
and
call
mov
jmp
dec
adc
mov
add
test
mov
xchg
hlt
jo
movsb
fs
jp
les
pop
filds
stc
inc
mov
pop
lods
mov
mov
enter
dec
jnp
cmpsl
mov
outsb
pop
mov
sahf
rcrb
add
out
jnp
insb
mov
sahf
mov
cmp
adc
add
add
imul
div
bound
mov
mov
int3
sbb
inc
sbb
adc
sahf
loope
imul
lds
std
jnp
mov
cmp
add
cmp
dec
push
mov
inc
mov
adc
stc
scas
lock
cmc
testl
popf
cmp
ja
mov
pop
dec
or
mov
mov
add
push
xlat
mov
and
scas
sub
add
popf
dec
mov
pop
scas
push
jg
test
rclb
lahf
ds
cmp
add
or
jecxz
test
adc
call
stos
and
add
cmp
push
cmp
mov
lds
cmp
stc
or
push
nop
push
mov
leave
nop
jmp
fwait
ret
add
add
mov
dec
mov
jmp
in
leave
nop
jmp
add
add
xchg
add
push
dec
adc
mov
xchg
ret
aam
testl
add
call
nop
push
mov
leave
nop
jmp
xchg
int
add
add
add
add
xchg
dec
adc
push
mov
leave
nop
jmp
add
fidivs
mov
add
clc
repnz
nop
nop
jae
jecxz
xchg
popf
mov
clc
repnz
nop
nop
jae
fidivs
mov
mov
push
push
mov
xchg
ret
add
and
aam
fwait
stos
aam
int
fiadds
add
dec
push
inc
add
add
add
les
push
mov
xchg
ret
add
add
add
sbbb
clc
repnz
nop
nop
jae
adc
add
add
add
fstl
repnz
nop
nop
jae
push
lcall
mov
add
dec
movswl
clc
repnz
nop
nop
jae
fnstenv
add
add
or
inc
add
repnz
nop
nop
jae
or
fwait
popl
dec
push
nop
push
mov
leave
nop
jmp
or
add
add
add
fisttpll
mov
xchg
ret
test
xor
testl
add
repnz
add
push
mov
xchg
ret
add
mov
add
jmp
popl
test
mov
mov
or
add
add
mov
mov
push
mov
xchg
ret
into
add
add
add
cmpsb
push
and
add
cmc
dec
clc
repnz
nop
nop
jae
xchg
mov
add
notl
add
add
repnz
nop
nop
jae
add
add
ret
add
add
add
clc
repnz
nop
nop
jae
int
add
test
push
test
add
clc
repnz
nop
nop
jae
add
lcall
clc
repnz
nop
nop
jae
add
sub
xor
add
lcall
clc
repnz
nop
nop
jae
mov
push
add
add
add
in
cltd
rep
clc
repnz
nop
nop
jae
add
fwait
mov
int3
add
add
xchg
ror
push
mov
xchg
ret
add
push
mov
add
add
push
mov
xchg
ret
into
add
into
add
ret
mov
outsb
es
cld
nop
nop
jae
testl
and
fwait
add
and
add
nop
push
mov
leave
nop
jmp
popl
inc
add
and
add
fisttpll
cld
nop
nop
jae
sti
add
jg
push
push
cmpsb
add
clc
repnz
nop
nop
jae
sub
sub
aam
mov
add
mov
nop
push
mov
leave
nop
jmp
xchg
fldenv
into
stos
mov
clc
repnz
nop
nop
jae
add
test
jb
mov
clc
repnz
nop
nop
jae
jb
add
add
add
aam
push
sub
clc
repnz
nop
nop
jae
add
adc
add
push
xchg
pop
pop
clc
repnz
nop
nop
jae
flds
add
jg
into
add
xor
push
mov
xchg
ret
subb
int3
xchg
cmp
iret
push
clc
repnz
nop
nop
jae
mov
adc
add
add
imul
cld
nop
nop
jae
xchg
mov
add
mov
outsl
mov
clc
repnz
nop
nop
jae
testl
add
flds
ret
les
repnz
nop
nop
jae
push
add
jecxz
add
imul
mov
add
add
xchg
scas
add
add
add
das
fld1
clc
repnz
nop
nop
jae
test
mov
ret
add
sar
repnz
nop
nop
jae
mov
add
cmpsb
incb
sub
push
push
incl
mov
xchg
ret
add
add
stos
push
lcall
hlt
mov
jge
clc
repnz
nop
nop
jae
add
mov
sti
fwait
lret
fwait
push
mov
xchg
ret
incb
decb
lret
movzwl
push
mov
xchg
ret
into
push
add
int
add
add
aam
push
clc
repnz
nop
nop
jae
xor
add
mov
mov
cmc
push
clc
repnz
nop
nop
jae
add
add
test
add
xchg
xor
push
clc
repnz
nop
nop
jae
int
xchg
or
into
add
jb
outsb
inc
mov
jb
add
clc
repnz
nop
nop
jae
add
bound
jb
push
filds
cld
nop
nop
jae
flds
add
push
cmpsb
add
into
sbb
in
leave
nop
jmp
and
add
mov
add
mov
pop
std
add
xchg
js
pop
nop
xchg
add
or
push
add
dec
push
dec
sub
push
mov
xchg
ret
imul
push
into
add
shr
mov
clc
repnz
nop
nop
jae
and
add
push
and
fwait
int
add
mov
adc
clc
repnz
nop
nop
jae
xor
add
add
pusha
clc
repnz
nop
nop
jae
xchg
add
test
adc
adc
mov
leave
nop
jmp
add
add
mov
jg
test
add
and
push
mov
xchg
ret
test
add
add
mov
push
mov
leave
nop
jmp
add
add
add
push
push
mov
xchg
ret
add
adc
add
into
add
fnstenv
add
push
mov
xchg
ret
jb
add
aam
add
nop
nop
jae
cmp
add
test
add
add
add
mov
leave
nop
jmp
jecxz
cmpsb
add
fwait
add
mov
add
inc
jmp
add
into
int3
mov
xchg
add
add
add
add
fld1
push
mov
xchg
ret
add
bound
into
add
stos
cmp
subl
nop
push
mov
leave
nop
jmp
aam
imul
add
inc
mov
inc
push
clc
repnz
nop
nop
jae
cmp
cmp
or
mov
into
add
pop
clc
repnz
nop
nop
jae
mov
add
aam
mov
add
xchg
mov
clc
repnz
nop
nop
jae
add
add
add
nop
push
mov
leave
nop
jmp
add
mov
add
add
add
xor
clc
repnz
nop
nop
jae
adc
add
add
popa
lods
push
mov
xchg
ret
add
push
push
add
add
test
cmpsl
popa
clc
repnz
nop
nop
jae
jg
mov
xchg
add
add
into
rorl
cli
jge
add
into
roll
xchg
mov
int3
dec
lret
mov
adc
repnz
nop
nop
jae
add
or
into
dec
mov
push
mov
xchg
ret
sub
mov
mov
adc
mov
mov
nop
push
mov
leave
nop
jmp
add
stos
stos
aam
into
and
rclb
fmull
and
or
add
into
add
test
add
loopne
mov
nop
push
mov
leave
nop
jmp
add
add
add
stc
mov
nop
push
mov
leave
nop
jmp
add
sti
lcall
ljmp
mov
xchg
ret
int
xor
int3
add
add
add
sub
repnz
nop
nop
jae
push
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
push
add
add
add
repnz
nop
nop
jae
add
xor
mov
sub
nop
push
mov
leave
nop
jmp
ret
add
add
fwait
xchg
xchg
clc
repnz
nop
nop
jae
add
add
jb
mov
aam
xor
clc
repnz
nop
nop
jae
xor
add
add
in
add
add
nop
push
mov
leave
nop
jmp
mov
add
or
mov
xchg
ret
add
add
testb
mov
test
nop
push
mov
leave
nop
jmp
add
xchg
mov
add
sbb
add
nop
push
mov
leave
nop
jmp
add
add
mov
add
cmp
push
mov
leave
nop
jmp
add
decb
push
xchg
jne
clc
repnz
nop
nop
jae
imul
add
test
nop
push
mov
leave
nop
jmp
add
xor
add
add
push
pop
push
in
leave
nop
push
mov
leave
nop
jmp
add
aam
add
add
out
popf
mov
clc
repnz
nop
nop
jae
add
sti
adc
je
sub
nop
jmp
add
xor
scas
sti
add
sbb
test
push
mov
leave
nop
jmp
push
add
lods
out
loop
push
mov
xchg
ret
scas
add
add
xchg
or
cmp
nop
push
mov
leave
nop
jmp
xchg
add
test
push
xchg
push
push
mov
xchg
ret
add
ret
xchg
aam
lcall
mov
xchg
ret
flds
push
jb
add
add
xchg
adc
clc
repnz
nop
nop
jae
push
add
add
aam
add
inc
fcoms
push
dec
mov
pop
clc
repnz
nop
nop
jae
push
add
mov
add
cmp
sub
stos
or
mov
xchg
ret
add
push
push
add
add
add
ss
sub
clc
repnz
nop
nop
jae
xor
xor
test
add
clc
repnz
nop
nop
jae
add
mov
add
add
add
into
jns
movl
jae
add
add
jecxz
add
add
mov
mov
leave
nop
jmp
aam
mov
add
add
testl
mov
clc
repnz
nop
nop
jae
add
dec
adcb
mov
sbb
shl
push
mov
xchg
ret
add
push
add
and
int3
xor
add
nop
nop
jae
jecxz
xchg
imul
clc
repnz
nop
nop
jae
add
add
test
add
loop
mov
push
mov
xchg
ret
add
xor
test
xchg
add
cld
nop
nop
jae
mov
add
fnstenv
add
xchg
add
jnp
mov
test
daa
mov
add
add
popf
in
mov
clc
repnz
nop
nop
jae
add
add
add
add
shll
arpl
push
mov
leave
nop
jmp
mov
add
mov
clc
repnz
nop
nop
jae
add
mov
add
lods
lea
in
leave
nop
jmp
sub
add
mov
add
cmpb
mov
xchg
ret
add
jg
add
fwait
add
orb
mov
mov
cmp
nop
push
mov
leave
nop
jmp
jb
add
roll
xchg
lret
inc
mov
jne
clc
repnz
nop
nop
jae
add
push
int3
xor
add
fwait
adc
shl
nop
push
mov
leave
nop
jmp
xchg
movb
jecxz
inc
inc
mov
clc
repnz
nop
nop
jae
add
xor
jg
add
add
add
ficompl
mov
xchg
ret
add
test
add
lcall
inc
and
test
nop
push
mov
leave
nop
jmp
int
adc
jecxz
into
add
mov
add
pop
mov
jbe
add
pop
pop
pop
insb
mov
mov
inc
clc
repnz
nop
nop
jae
mov
roll
add
ljmp
clc
repnz
nop
nop
jae
jg
incb
add
add
xor
inc
add
cmpsb
into
jb
xor
xor
add
add
push
clc
repnz
nop
nop
jae
cmpsb
add
sub
stos
add
adc
xor
stos
clc
repnz
nop
nop
jae
add
add
add
add
sbb
pusha
push
mov
xchg
ret
inc
add
push
mov
add
add
add
xchg
push
sub
add
addr16
mov
inc
add
xor
push
mov
add
jae
hlt
pop
add
add
add
mov
inc
in
clc
repnz
nop
nop
jae
into
fwait
ret
xor
add
add
clc
repnz
nop
nop
jae
add
add
stos
clc
repnz
nop
nop
jae
add
movb
into
xchg
mov
jmp
add
add
add
mov
dec
add
add
sub
add
mov
clc
repnz
nop
nop
jae
push
add
add
mov
adc
insl
xor
clc
repnz
nop
nop
jae
add
mov
add
aam
roll
xor
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
push
add
or
xor
inc
mov
add
add
sbb
repnz
nop
nop
jae
add
adc
xor
stc
fwait
clc
repnz
nop
nop
jae
and
int3
mov
add
cmp
test
outsb
rolb
lods
xchg
xchg
ret
add
test
add
mov
xor
mov
xchg
ret
add
add
test
add
sbb
clc
repnz
nop
nop
jae
roll
add
mov
nop
push
mov
leave
nop
jmp
cmpsb
mov
add
aam
add
push
mov
xchg
ret
add
add
ror
add
incb
lcall
add
nop
jmp
add
add
add
add
mov
pop
pusha
clc
repnz
nop
nop
jae
mov
add
jg
into
notl
push
mov
shr
push
mov
xchg
ret
add
add
add
jno
sub
push
add
nop
jmp
add
into
push
adc
mov
nop
nop
jae
int3
test
mov
add
add
add
mov
add
clc
repnz
nop
nop
jae
cmpsb
mov
add
mov
push
mov
xchg
ret
add
test
mov
jecxz
andb
clc
repnz
nop
nop
jae
into
add
add
cmp
push
push
mov
xchg
ret
jg
add
add
xor
push
mov
mov
incl
add
add
add
xor
add
add
ss
push
push
mov
xchg
ret
adc
push
or
roll
test
pop
nop
push
mov
leave
nop
jmp
add
roll
add
add
test
dec
call
push
mov
xchg
ret
add
push
test
add
add
repnz
nop
nop
jae
mov
add
add
add
call
nop
push
mov
leave
nop
jmp
test
add
jg
into
push
mov
clc
repnz
nop
nop
jae
add
add
flds
into
int
stos
push
ficoms
cmp
xor
mov
push
mov
xchg
ret
test
add
add
aam
xchg
add
enter
mov
add
clc
repnz
nop
nop
jae
add
add
loopne
jne
clc
repnz
nop
nop
jae
add
bound
dec
gs
clc
repnz
nop
nop
jae
mov
add
add
add
mov
push
add
push
mov
xchg
ret
mov
test
add
push
mov
nop
push
mov
leave
nop
jmp
add
add
dec
lea
clc
repnz
nop
nop
jae
scas
mov
add
ret
add
mov
add
jecxz
add
add
inc
mov
add
nop
push
mov
leave
nop
jmp
add
mov
add
xchg
add
nop
push
mov
leave
nop
jmp
imul
add
push
add
add
mov
cld
nop
nop
jae
test
mov
add
add
or
jmp
nop
push
mov
leave
nop
jmp
add
xor
xchg
add
mov
andl
nop
nop
jae
add
mov
push
add
aam
push
clc
repnz
nop
nop
jae
inc
add
add
test
add
fwait
clc
repnz
nop
nop
jae
add
aam
or
stos
mov
add
add
repnz
nop
nop
jae
add
test
add
sub
add
in
jmp
fiaddl
push
xor
add
inc
mov
add
add
push
push
mov
in
add
clc
repnz
nop
nop
jae
jecxz
add
popa
push
clc
repnz
nop
nop
jae
or
add
add
push
mov
int3
into
outsb
test
nop
nop
jae
add
stos
mov
add
add
push
rep
clc
repnz
nop
nop
jae
mov
and
xchg
add
mov
test
stc
clc
repnz
nop
nop
jae
add
add
cmp
rorl
add
repnz
nop
nop
jae
fcompp
add
adc
es
cmp
mov
xchg
ret
cmp
inc
push
add
add
add
jg
nop
push
mov
leave
nop
jmp
mov
lcall
adc
clc
repnz
nop
nop
jae
mov
add
int3
mov
mov
xchg
ret
test
add
add
add
inc
add
clc
repnz
nop
nop
jae
add
add
push
sti
add
notl
mov
add
xor
sub
add
aam
add
and
push
mov
xchg
ret
add
or
push
add
scas
adc
or
add
add
add
mov
add
and
add
clc
repnz
nop
nop
jae
int
xchg
sub
add
xor
cld
nop
nop
jae
add
ret
add
mov
add
hlt
xchg
pop
push
mov
xchg
ret
mov
flds
add
add
add
mov
call
loope
cmpsl
dec
popf
add
push
or
int
push
out
push
mov
add
push
sti
cmpsl
call
add
add
add
add
nop
nop
jae
mov
add
add
add
add
add
push
mov
xchg
ret
add
push
add
or
ljmp
nop
jae
add
movb
add
movb
and
nop
nop
jae
into
push
mov
add
jecxz
add
clc
repnz
nop
nop
jae
mov
fiadds
add
lea
mov
leave
nop
jmp
add
jg
add
adc
test
idiv
call
nop
jmp
int3
flds
test
mov
add
add
mov
push
add
stc
ret
insl
lret
sub
mov
clc
repnz
nop
nop
jae
add
jecxz
add
add
add
dec
push
clc
repnz
nop
nop
jae
bound
add
and
mov
clc
repnz
nop
nop
jae
add
add
add
mov
push
inc
add
and
movb
add
add
add
jo
and
add
clc
repnz
nop
nop
jae
add
aam
aam
lcall
add
push
mov
leave
nop
jmp
sti
add
add
es
lret
push
push
mov
xchg
ret
mov
or
mov
add
jg
cmpsb
into
into
mov
test
mov
leave
nop
jmp
add
add
add
mov
jb
mov
add
nop
push
mov
leave
nop
jmp
add
add
movb
cltd
and
clc
repnz
nop
nop
jae
xchg
add
jecxz
add
aam
add
clc
repnz
nop
nop
jae
movb
mov
push
lcall
test
repnz
nop
nop
jae
xchg
add
nop
nop
jae
add
add
stos
flds
je
clc
repnz
nop
nop
jae
divl
xor
add
add
inc
jb
clc
repnz
nop
nop
jae
add
mov
add
add
mov
clc
repnz
nop
nop
jae
and
into
add
add
jl
pop
push
mov
xchg
ret
fmulp
mov
add
jb
inc
add
roll
push
mov
leave
nop
jmp
mov
add
into
add
cmp
add
push
mov
xchg
ret
add
add
test
add
add
lcall
sar
cld
nop
nop
jae
addb
mov
add
fwait
jecxz
add
add
add
pop
add
clc
repnz
nop
nop
jae
add
sub
and
add
clc
repnz
nop
nop
jae
sti
mov
mov
jg
cmp
in
jnp
lods
adc
add
add
mov
fdivrl
push
mov
ljmp
addb
cmp
ret
add
add
add
add
pop
push
clc
repnz
nop
nop
jae
add
mov
add
add
aam
mov
icebp
clc
repnz
nop
nop
jae
xchg
add
add
add
xor
stos
cmp
sbb
add
add
mov
add
jecxz
aam
es
mov
clc
repnz
nop
nop
jae
add
add
aam
add
mov
jl
sbb
repnz
nop
nop
jae
and
into
add
add
add
push
mov
xchg
ret
add
add
lcall
add
ret
mov
push
clc
repnz
nop
nop
jae
add
jecxz
lcall
cmp
popa
clc
repnz
nop
nop
jae
cmp
add
add
push
std
mov
nop
push
mov
leave
nop
jmp
xchg
incb
add
imul
nop
push
mov
leave
nop
jmp
push
add
mov
test
stos
sbb
fstpl
mov
xchg
ret
add
inc
xor
fiadds
into
and
mov
lods
and
imul
cld
nop
nop
jae
mov
mov
push
lret
mov
clc
repnz
nop
nop
jae
add
add
add
xor
mov
push
cmc
fistpl
push
mov
xchg
ret
testl
push
test
je
clc
repnz
nop
nop
jae
add
aam
push
clc
repnz
nop
nop
jae
xchg
cmp
fiadds
test
add
mov
push
mov
xchg
ret
add
fwait
add
add
add
add
fld1
nop
push
mov
leave
nop
jmp
sti
push
mov
push
mov
add
nop
push
mov
leave
nop
jmp
add
xor
sub
add
popl
clc
repnz
nop
nop
jae
test
mov
incb
jb
jb
cmc
dec
push
mov
xchg
ret
add
xor
add
ret
xorl
clc
repnz
nop
nop
jae
add
mov
dec
cmp
push
mov
leave
nop
jmp
push
add
test
add
add
gs
clc
repnz
nop
nop
jae
add
test
add
add
fnstcw
push
nop
push
mov
leave
nop
jmp
mov
or
add
mov
add
push
mov
xchg
ret
add
addb
test
test
in
add
clc
repnz
nop
nop
jae
add
add
add
add
mov
push
mov
leave
nop
jmp
scas
add
add
add
push
mov
adc
repnz
nop
nop
jae
add
add
add
add
mov
and
add
jge
clc
repnz
nop
nop
jae
or
adc
mov
add
and
clc
repnz
nop
nop
jae
fwait
push
add
add
push
test
flds
push
lods
test
nop
nop
jae
add
add
xor
add
add
add
fsts
inc
mov
cmp
mov
jne
clc
repnz
nop
nop
jae
xor
test
scas
orb
in
leave
nop
jmp
add
into
adc
mov
push
mov
clc
repnz
nop
nop
jae
into
add
lcall
mov
clc
add
nop
jmp
test
xor
movb
mov
popf
pop
add
clc
repnz
nop
nop
jae
add
add
cmp
shr
clc
repnz
nop
nop
jae
xchg
jg
mov
push
sub
cld
jmp
incl
jg
test
ret
add
ret
dec
cmp
repnz
nop
nop
jae
add
add
mov
inc
add
add
and
jmp
into
add
scas
and
add
jecxz
into
push
bound
nop
nop
jae
fwait
add
add
adc
je
mov
sub
cld
nop
nop
jae
add
or
jne
clc
repnz
nop
nop
jae
adc
int
cmp
inc
mov
push
mov
or
fwait
inc
shrl
add
push
xchg
adc
repnz
nop
nop
jae
add
add
mov
push
add
int3
push
movsb
loope
pop
clc
repnz
nop
nop
jae
mov
xor
sarb
nop
push
mov
leave
nop
jmp
jb
add
stos
add
call
repnz
nop
nop
jae
fwait
mov
xor
sti
xchg
mov
add
cld
nop
nop
jae
test
push
add
cmp
add
add
pushl
nop
nop
jae
add
mov
int3
roll
add
test
cmp
es
repnz
nop
nop
jae
push
xchg
scas
add
push
mov
leave
nop
jmp
add
add
popl
add
mov
das
add
clc
repnz
nop
nop
jae
push
movb
xor
cs
stos
clc
repnz
nop
nop
jae
add
add
mov
cld
nop
nop
jae
add
add
ret
push
mov
xchg
ret
adc
add
add
add
xchg
pop
mov
int
test
add
nop
push
mov
leave
nop
jmp
int
mov
and
push
int3
mov
bound
repnz
nop
nop
jae
add
push
add
cmp
mov
jne
nop
push
mov
leave
nop
jmp
add
aam
add
push
mov
leave
nop
jmp
add
mov
add
xor
add
push
mov
xchg
ret
test
mov
inc
mov
sar
repnz
nop
nop
jae
scas
jb
add
test
push
push
mov
xchg
ret
add
cmp
push
add
and
adc
add
nop
nop
jae
add
push
add
sub
xchg
add
divb
sub
add
nop
jmp
ret
xchg
add
imul
push
mov
xchg
ret
add
push
add
add
inc
lcall
mov
clc
repnz
nop
nop
jae
add
add
add
ljmp
cld
nop
nop
jae
xchg
add
jecxz
mov
into
mov
mov
xchg
ret
add
imul
mov
cmp
adcb
jmp
mov
add
push
xor
jne
nop
push
mov
leave
nop
jmp
xor
add
ret
imul
repnz
nop
nop
jae
add
add
mov
lcall
stc
xor
clc
repnz
nop
nop
jae
add
add
fldl
mov
leave
nop
jmp
add
sti
add
divl
mov
int
sub
push
mov
xchg
ret
add
push
add
or
xchg
mov
push
mov
xchg
ret
sti
xchg
adc
add
and
or
add
lods
clc
repnz
nop
nop
jae
xor
add
add
jecxz
push
mov
xchg
ret
or
add
add
add
add
test
nop
push
mov
leave
nop
jmp
imul
push
add
add
add
clc
repnz
nop
nop
jae
rcll
add
add
xchg
dec
jge
inc
xor
clc
repnz
nop
nop
jae
andb
push
add
lods
nop
push
mov
leave
nop
jmp
jecxz
test
add
add
adc
cld
nop
nop
jae
testl
add
adc
repnz
nop
nop
jae
add
add
add
push
add
add
mov
inc
mov
cmp
cld
nop
nop
jae
add
xchg
add
add
repnz
nop
nop
jae
flds
mov
add
add
mov
pop
stos
clc
repnz
nop
nop
jae
int3
fstps
add
push
xchg
mov
rclb
inc
pop
inc
add
movb
stos
imull
call
add
cmp
repz
repnz
nop
nop
jae
add
add
movb
add
push
add
xorl
push
mov
xchg
ret
push
xchg
popl
add
repnz
nop
nop
jae
add
xor
add
or
jg
mov
xor
sub
repnz
nop
nop
jae
add
add
xchg
xchg
sti
add
lods
ret
clc
repnz
nop
nop
jae
add
add
push
and
push
lock
clc
repnz
nop
nop
jae
decb
add
pop
push
add
push
mov
xchg
ret
test
inc
fnstenv
add
add
mov
push
mov
xchg
ret
int3
add
add
add
jl
push
nop
push
mov
leave
nop
jmp
fiadds
push
shl
inc
xor
cmp
hlt
xchg
inc
add
add
add
add
add
add
jae
repnz
nop
nop
jae
add
cmp
add
push
add
popa
cmpw
nop
push
mov
leave
nop
jmp
cmpsb
mov
add
add
add
push
clc
repnz
nop
nop
jae
add
rorl
int3
test
test
repnz
nop
nop
jae
xchg
add
mov
mov
clc
repnz
nop
nop
jae
mov
add
add
add
add
test
xor
clc
repnz
nop
nop
jae
add
add
stos
add
or
repnz
nop
nop
jae
add
add
dec
stos
add
call
nop
push
mov
leave
nop
jmp
add
decb
rcr
fistpl
clc
repnz
nop
nop
jae
xchg
add
add
and
mov
leave
nop
jmp
and
xchg
add
out
push
nop
push
mov
leave
nop
jmp
add
incb
push
cmpsb
add
xor
clc
repnz
nop
nop
jae
mov
int3
mov
fiadds
add
xchg
and
clc
repnz
nop
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
add
xor
scas
cmp
clc
repnz
nop
nop
jae
cmp
mov
test
push
orb
nop
nop
jae
add
push
add
cmpsb
mov
add
add
push
add
push
xchg
ret
or
push
add
mov
xchg
ret
mov
into
addb
add
push
add
ficomps
clc
repnz
nop
nop
jae
add
add
push
add
adc
push
data16
mov
sti
nop
push
mov
leave
nop
jmp
push
add
stos
lcall
dec
pop
nop
push
mov
leave
nop
jmp
push
add
add
jg
mov
add
dec
fwait
jmp
xor
add
and
adc
add
ja
clc
repnz
nop
nop
jae
jb
add
add
push
push
mov
xchg
ret
push
add
mov
mov
cmp
incl
mov
add
add
add
add
stos
add
pop
clc
repnz
nop
nop
jae
add
add
add
add
cld
nop
nop
jae
add
fwait
add
mov
or
rcll
outsl
inc
add
add
add
adc
push
fwait
clc
repnz
nop
nop
jae
bound
xor
fidivs
roll
adc
repnz
nop
nop
jae
mov
mov
mov
dec
push
clc
repnz
nop
nop
jae
add
testl
jecxz
adcb
push
mov
xchg
ret
add
add
add
add
add
xchg
sbb
in
leave
nop
jmp
add
and
add
add
inc
sub
nop
jmp
scas
add
push
into
add
push
mov
leave
nop
jmp
add
aam
add
fiadds
xor
lock
roll
repnz
nop
nop
jae
lcall
fiadds
and
clc
clc
repnz
nop
nop
jae
mov
into
add
ret
mov
add
add
mov
clc
repnz
nop
nop
jae
add
sub
add
add
add
jmp
roll
add
clc
repnz
nop
nop
jae
into
push
push
xor
add
cld
nop
nop
jae
add
add
flds
test
xor
sbb
repnz
nop
nop
jae
int3
add
xor
push
scas
sti
mov
clc
repnz
nop
nop
jae
push
into
mov
jg
push
movsb
aas
pop
clc
repnz
nop
nop
jae
xchg
ret
xchg
roll
xchg
dec
out
mov
inc
clc
repnz
nop
nop
jae
and
add
add
aam
fidivrs
mov
nop
push
mov
leave
nop
jmp
add
test
jb
add
xchg
nop
push
mov
leave
nop
jmp
add
add
add
jecxz
into
xchg
jg
cmp
push
mov
xchg
ret
add
add
lods
add
nop
push
mov
leave
nop
jmp
add
add
test
add
enter
in
leave
nop
jmp
ss
add
cmp
fwait
add
mov
push
mov
xchg
ret
xchg
add
add
and
addb
inc
clc
repnz
nop
nop
jae
add
add
imul
es
fisttps
cld
nop
nop
jae
mov
jb
mov
fwait
xor
je
add
nop
push
mov
leave
nop
jmp
add
add
mov
push
xchg
outsb
jnp
push
mov
xchg
ret
add
add
add
push
add
outsb
js
dec
mov
inc
mov
add
and
add
add
add
int
sub
add
push
fld1
clc
repnz
nop
nop
jae
and
fiadds
jb
add
lods
cmp
nop
push
mov
leave
nop
jmp
xor
add
imul
jg
mov
adc
repnz
nop
nop
jae
jb
add
xor
xor
mov
add
push
mov
xchg
ret
add
lcall
add
push
idivl
repnz
nop
nop
jae
add
movb
jb
push
clc
repnz
nop
nop
jae
add
xor
xor
shll
pop
div
nop
push
mov
leave
nop
jmp
mov
add
test
xor
imul
and
repnz
nop
nop
jae
add
add
add
cmp
nop
push
mov
leave
nop
jmp
mov
sub
pop
je
clc
repnz
nop
nop
jae
add
add
add
shrl
mov
clc
repnz
nop
nop
jae
test
add
pop
nop
push
mov
leave
nop
jmp
add
jb
xchg
sti
and
testl
add
mov
or
jbe
clc
repnz
nop
nop
jae
popl
add
fnstenv
mov
gs
clc
repnz
nop
nop
jae
int3
mov
cmp
add
mov
add
repnz
nop
nop
jae
add
and
inc
add
and
add
add
mov
clc
repnz
nop
nop
jae
add
push
add
je
nop
push
mov
leave
nop
jmp
inc
add
aam
inc
push
clc
repnz
nop
nop
jae
or
push
aam
sub
add
cld
nop
nop
jae
mov
int3
jg
add
into
sbb
call
nop
push
mov
leave
nop
jmp
add
push
test
or
push
mov
xchg
ret
add
or
add
add
fwait
incb
imul
fwait
clc
repnz
nop
nop
jae
and
add
mov
add
mov
clc
repnz
nop
nop
jae
add
add
mov
adc
pop
call
nop
jmp
add
add
flds
dec
add
add
or
cld
nop
nop
jae
add
push
test
add
add
or
into
push
les
add
add
repnz
nop
nop
jae
mov
imul
push
mov
leave
nop
jmp
lcall
add
shr
clc
repnz
nop
nop
jae
jb
add
add
insl
push
push
mov
xchg
ret
and
addb
add
push
push
jno
leave
nop
push
mov
leave
nop
jmp
xor
xor
add
int3
ficompl
fistpl
push
mov
xchg
ret
add
test
mov
fwait
add
add
adc
insb
gs
repnz
nop
nop
jae
mov
into
add
adc
mov
leave
nop
jmp
add
sub
push
dec
lea
push
mov
xchg
ret
add
add
add
push
xor
into
scas
mov
clc
repnz
nop
nop
jae
roll
add
push
fistpl
clc
repnz
nop
nop
jae
inc
add
add
add
mov
stos
sarl
nop
push
mov
leave
nop
jmp
add
mov
xchg
popl
inc
fistpl
clc
repnz
nop
nop
jae
xor
xchg
jb
bound
add
push
mov
xchg
ret
add
ret
add
fs
jmp
clc
repnz
nop
nop
jae
push
adc
add
add
add
add
adc
imul
in
leave
nop
jmp
mov
add
mov
fldl
in
leave
nop
jmp
add
add
push
add
jmp
sti
clc
repnz
nop
nop
jae
shll
add
add
add
clc
repnz
nop
nop
jae
mov
add
push
add
xchg
pop
fwait
push
mov
xchg
ret
add
push
test
cmpsb
fwait
mov
and
call
inc
add
test
movb
mov
mov
xchg
ret
add
xchg
jg
aam
push
and
mov
push
nop
push
mov
leave
nop
jmp
add
push
add
roll
repnz
nop
nop
jae
add
and
popl
fisubs
push
mov
pop
lods
jae
add
add
add
lahf
fld
popf
lahf
add
add
push
clc
repnz
nop
nop
jae
cmpsb
add
add
add
lock
nop
nop
jae
add
xchg
add
aam
add
mov
add
clc
repnz
nop
nop
jae
push
sti
int3
add
aam
cltd
dec
push
mov
xchg
ret
add
cmp
jg
add
add
repnz
nop
nop
jae
stos
xor
test
scas
or
add
in
call
nop
jae
add
add
or
push
leave
push
push
mov
xchg
ret
imull
add
mov
popl
add
repnz
nop
nop
jae
add
push
mov
test
repnz
nop
nop
jae
push
push
mov
add
into
add
les
notb
xor
repnz
nop
nop
jae
int
and
add
inc
mov
add
sub
nop
jae
push
adc
popl
add
add
add
xor
nop
push
mov
leave
nop
jmp
xor
fwait
add
add
add
xchg
clc
repnz
nop
nop
jae
add
add
xchg
mov
movsl
clc
repnz
nop
nop
jae
add
mov
add
add
mov
sar
repnz
nop
nop
jae
add
add
add
add
imull
push
lea
push
mov
leave
nop
jmp
add
push
add
push
add
inc
mov
jmp
repnz
nop
nop
jae
mov
add
fld
xor
test
inc
nop
push
mov
leave
nop
jmp
into
or
add
add
es
mov
cmpsl
imul
int3
add
add
imul
mov
cld
nop
nop
jae
xor
push
add
add
add
fistpl
push
mov
xchg
ret
add
inc
cmp
add
stos
cmpsl
push
clc
repnz
nop
nop
jae
add
add
ss
fiadds
push
cmpsb
add
rcll
mov
xchg
ret
xchg
xchg
add
or
int
xor
outsl
imul
clc
repnz
nop
nop
jae
add
xor
add
add
mov
xchg
ret
add
add
add
mov
add
and
mov
xchg
ret
add
push
ret
add
lds
inc
add
add
add
add
add
in
test
sar
clc
repnz
nop
nop
jae
jg
mov
add
fdivrp
ljmp
into
add
add
int
push
add
clc
repnz
nop
nop
jae
push
test
add
add
push
clc
repnz
nop
nop
jae
and
add
push
lods
lea
cld
nop
nop
jae
fwait
mov
bound
add
pushl
clc
repnz
nop
nop
jae
sti
fwait
mov
cmpsb
add
cmc
popa
push
mov
xchg
ret
adc
add
add
lcall
scas
add
repnz
repnz
nop
nop
jae
xchg
add
xor
add
push
push
mov
xchg
ret
add
add
add
decb
imull
push
mov
xchg
ret
mov
add
push
sti
jg
add
mov
push
mov
leave
nop
jmp
add
and
add
jecxz
add
push
rol
add
repnz
nop
nop
jae
add
mov
push
add
add
jo
push
mov
add
test
test
add
add
cmp
add
sbb
fwait
test
xchg
ret
mov
add
add
add
out
fistpl
push
mov
xchg
ret
and
push
add
fwait
jno
test
repnz
nop
nop
jae
add
push
int3
stos
ss
mov
add
repnz
nop
nop
jae
scas
mov
add
mov
test
lss
clc
repnz
nop
nop
jae
add
add
add
mov
mov
inc
add
xchg
into
jecxz
int3
push
jg
push
xor
aam
push
add
cli
clc
repnz
nop
nop
jae
add
xor
xor
and
mov
xchg
ret
add
mov
imul
push
mov
leave
nop
jmp
add
add
mov
jne
clc
repnz
nop
nop
jae
mov
test
jae
cld
add
add
repnz
nop
nop
jae
fwait
roll
mov
xor
repnz
nop
nop
jae
add
into
mov
push
add
push
sub
sbb
clc
repnz
nop
nop
jae
lcall
add
add
dec
nop
push
mov
leave
nop
jmp
scas
add
mov
addb
int
add
push
add
clc
repnz
nop
nop
jae
add
jg
addb
lods
push
mov
xchg
ret
jb
add
add
add
add
add
clc
repnz
nop
nop
jae
int3
add
and
add
sbb
in
push
push
mov
xchg
ret
add
add
xor
into
int3
add
cmp
xchg
inc
add
add
xor
jg
add
fldenv
cmpsb
add
jp
xacquire
mov
clc
repnz
nop
nop
jae
xor
add
push
push
mov
xchg
ret
sub
add
push
push
add
add
enter
and
clc
repnz
nop
nop
jae
and
inc
push
sarl
add
adc
call
nop
jmp
inc
into
push
add
inc
mov
fld1
clc
repnz
nop
nop
jae
into
bound
add
add
add
sar
cld
nop
nop
jae
adc
add
mov
mov
mov
clc
repnz
nop
nop
jae
test
add
add
add
int
fidivrs
push
mov
imul
pop
pop
jmp
add
cmc
mov
push
clc
repnz
nop
nop
jae
add
add
push
test
add
int3
push
add
pop
nop
push
mov
leave
nop
jmp
addb
add
incb
roll
clc
repnz
nop
nop
jae
add
cwtl
mov
dec
cmp
repnz
nop
nop
jae
fdivrp
test
cmpsb
add
add
mov
push
push
clc
repnz
nop
nop
jae
push
test
add
add
cmp
xchg
clc
repnz
nop
nop
jae
add
add
add
push
mov
leave
nop
jmp
add
inc
jecxz
add
pop
fcos
clc
repnz
nop
nop
jae
add
cmp
add
mov
test
clc
repnz
nop
nop
jae
inc
add
add
add
xor
clc
repnz
nop
nop
jae
into
add
xor
mov
add
andb
push
mov
leave
nop
jmp
add
sti
add
add
add
mov
repnz
nop
nop
jae
add
add
push
adc
mov
clc
repnz
nop
nop
jae
add
add
cmp
in
stos
push
mov
xchg
ret
cmp
add
and
mov
add
push
mov
xchg
ret
add
add
add
add
flds
shrb
push
es
jecxz
repnz
nop
nop
jae
adc
or
adc
push
mov
leave
nop
jmp
fisubrs
shll
cmp
jecxz
sub
mov
add
clc
repnz
nop
nop
jae
add
add
add
and
clc
repnz
nop
nop
jae
add
sub
add
push
lahf
pushl
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
and
jecxz
ret
add
push
clc
repnz
nop
nop
jae
push
lcall
add
bound
add
nop
push
mov
leave
nop
jmp
add
fldcw
add
popf
mov
push
mov
xchg
ret
or
add
add
add
in
add
repnz
nop
nop
jae
push
add
add
testl
push
bound
clc
repnz
nop
nop
jae
xchg
add
add
es
call
clc
repnz
nop
nop
jae
addb
test
mov
clc
repnz
nop
nop
jae
mov
mov
push
mov
nop
nop
jae
xchg
add
imul
clc
repnz
nop
nop
jae
and
jb
add
xchg
cmpsl
push
clc
repnz
nop
nop
jae
add
add
add
add
mov
nop
nop
jae
add
push
mov
dec
mov
add
jb
mov
clc
repnz
nop
nop
jae
add
add
testl
cltd
add
clc
repnz
nop
nop
jae
add
addb
lcall
push
push
mov
xchg
ret
add
mov
add
add
add
cltd
push
mov
push
pop
add
add
add
add
inc
add
rclb
mov
xchg
ret
add
add
add
xchg
add
or
add
jns
add
clc
repnz
nop
nop
jae
add
add
fwait
sub
nop
nop
jae
sbbb
jb
add
aam
js
mov
out
dec
push
clc
repnz
nop
nop
jae
xor
fwait
sti
push
add
cmpsb
add
rcrl
outsb
addb
cmp
ret
imul
add
xchg
imul
clc
repnz
nop
nop
jae
add
add
push
jg
mov
int
or
add
mov
mov
clc
repnz
nop
nop
jae
or
or
add
add
xchg
mov
clc
repnz
nop
nop
jae
add
fiadds
push
and
mov
push
outsb
inc
add
mov
bound
flds
add
xchg
add
cmp
add
nop
jmp
add
int3
cmp
fwait
cmpl
nop
push
mov
leave
nop
jmp
add
cmpsb
or
add
cld
nop
nop
jae
or
add
bound
and
call
push
mov
xchg
ret
mov
ret
int3
add
clc
repnz
nop
nop
jae
adc
jb
add
add
les
push
mov
xchg
ret
add
fiadds
xor
scas
add
xchg
repnz
nop
nop
jae
add
add
mov
xchg
je
nop
push
mov
leave
nop
jmp
add
add
in
out
add
dec
add
scas
and
dec
add
cld
movl
clc
repnz
nop
nop
jae
add
xchg
int3
and
mov
push
mov
push
mov
fwait
add
addb
xchg
sbb
add
data16
add
or
cld
nop
nop
jae
add
add
add
roll
ret
or
sub
add
push
mov
xchg
ret
inc
add
add
push
add
mov
cld
nop
nop
jae
push
push
xchg
shll
test
and
cmp
lock
push
clc
repnz
nop
nop
jae
add
int3
push
mov
scas
add
int3
add
movswl
clc
repnz
nop
nop
jae
vpcomd
xorb
add
add
repnz
nop
nop
jae
add
adc
mov
mov
push
mov
add
xor
add
sub
inc
mov
add
pop
xor
add
push
mov
xchg
ret
push
inc
into
cmp
mov
mov
cld
nop
nop
jae
push
add
mov
add
add
add
xchg
push
mov
xchg
ret
add
add
add
stos
movb
nop
nop
jae
add
ret
lcall
aas
fwait
push
mov
xchg
ret
add
popl
push
fidivs
add
sub
scas
addl
cmp
ret
add
add
add
out
movsb
std
mov
push
mov
xchg
ret
cmpsb
add
roll
add
and
cli
sbb
push
add
mov
xchg
ret
and
add
add
imul
sti
fs
je
js
repnz
nop
nop
jae
push
xor
add
push
call
clc
repnz
nop
nop
jae
sub
add
scas
test
adc
push
or
repz
mov
xchg
ret
int
add
add
add
xchg
add
repnz
nop
nop
jae
mov
add
add
add
repnz
nop
nop
jae
add
stos
scas
stos
add
add
mov
add
repnz
nop
nop
jae
xor
push
xor
bound
add
xlat
pop
push
mov
xchg
ret
add
addb
add
xchg
pop
addr16
add
addb
add
add
add
scas
imul
cmp
ret
popl
test
xchg
add
xchg
leave
aad
clc
repnz
nop
nop
jae
xchg
lcall
cmp
adc
clc
repnz
nop
nop
jae
push
add
push
add
into
push
out
jae
sti
clc
repnz
nop
nop
jae
add
add
add
add
test
nop
push
mov
leave
nop
jmp
imul
add
cmpsb
jb
adc
cld
nop
nop
jae
add
add
mov
add
add
push
push
mov
xchg
ret
add
push
add
into
add
popa
push
mov
xchg
ret
ret
push
add
push
mov
add
add
mov
cmp
ret
add
add
lcall
xchg
fistpl
clc
repnz
nop
nop
jae
scas
test
or
add
xor
push
mov
xchg
ret
or
inc
mov
add
negl
nop
jae
add
scas
add
add
stos
xor
shrb
cld
nop
nop
jae
add
mov
mov
add
ja
jge
nop
push
mov
leave
nop
jmp
sub
add
add
add
jne
clc
repnz
nop
nop
jae
mov
fiadds
mov
xchg
ret
add
add
into
or
push
filds
in
andb
cmp
add
add
test
imull
add
add
ffree
jmp
nop
nop
jae
or
jecxz
jecxz
add
test
ret
mov
clc
repnz
nop
nop
jae
fwait
popl
add
add
inc
mov
push
mov
xchg
ret
incb
mov
sti
mov
push
and
add
push
clc
repnz
nop
nop
jae
sub
inc
xor
in
rclb
nop
jmp
push
or
add
add
jmp
into
addb
push
and
push
add
add
add
add
dec
shr
clc
repnz
nop
nop
jae
test
add
adc
add
repnz
nop
nop
jae
add
add
add
adc
sti
add
add
addl
xchg
ret
add
stos
add
mov
add
cld
clc
repnz
nop
nop
jae
add
jecxz
add
into
add
add
gs
clc
repnz
nop
nop
jae
add
test
test
add
cld
nop
nop
jae
add
add
push
add
jecxz
push
push
mov
xchg
ret
mov
mov
xchg
incb
add
repnz
nop
nop
jae
add
add
shll
add
add
mov
inc
add
into
int
push
add
push
mov
lcall
call
nop
jmp
add
add
add
xorl
clc
repnz
nop
nop
jae
push
add
add
push
nop
push
mov
leave
nop
jmp
add
mov
and
test
add
clc
repnz
nop
nop
jae
xchg
add
add
or
aam
call
clc
repnz
nop
nop
jae
add
test
xor
xchg
jbe
ret
nop
push
mov
leave
nop
jmp
mov
test
add
add
add
add
cmp
jle,pt
add
nop
push
mov
leave
nop
jmp
add
add
incb
add
rep
clc
repnz
nop
nop
jae
movb
add
add
mov
add
iret
fistpl
clc
repnz
nop
nop
jae
add
push
test
into
test
mov
inc
push
inc
add
add
add
add
mov
adc
push
xchg
xchg
ret
test
or
bound
test
push
faddl
add
repnz
nop
nop
jae
add
add
fdivrp
adc
loope
clc
repnz
nop
nop
jae
cmp
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
testl
mov
clc
repnz
nop
nop
jae
add
add
int
mov
xor
push
add
add
add
je
push
nop
push
mov
leave
nop
jmp
add
add
add
sub
add
mov
push
push
nop
push
mov
leave
nop
jmp
add
add
add
ret
add
repnz
nop
nop
jae
and
add
add
xchg
add
and
mov
xchg
ret
add
scas
push
add
mov
add
mov
mov
lea
push
mov
xchg
ret
push
and
stos
add
or
mov
mov
clc
repnz
nop
nop
jae
add
roll
add
ret
pop
push
mov
xchg
ret
lcall
add
add
push
adc
clc
repnz
nop
nop
jae
into
add
add
lcall
push
mov
xchg
ret
ss
jecxz
mov
adc
inc
jns
dec
sub
repnz
nop
nop
jae
mov
push
ss
add
and
inc
add
into
int
add
push
test
cmc
fld1
push
mov
xchg
ret
push
add
add
inc
clc
repnz
nop
nop
jae
and
push
add
aam
mov
add
sti
add
mov
xchg
ret
or
bound
add
add
pop
inc
mov
je
nop
push
mov
leave
nop
jmp
imul
push
clc
repnz
nop
nop
jae
xchg
add
push
inc
push
lea
nop
push
mov
leave
nop
jmp
mov
notl
adc
jp
pusha
clc
repnz
nop
nop
jae
jecxz
jecxz
push
add
ret
add
bound
dec
not
push
mov
xchg
ret
add
into
mov
lcall
push
mov
xchg
ret
mov
movb
add
mov
cmp
cld
nop
nop
jae
mov
xchg
mov
fwait
sub
add
scas
mov
fistpl
push
mov
xchg
ret
stos
mov
push
jg
add
stc
clc
repnz
nop
nop
jae
xchg
add
cmp
add
mov
push
mov
xchg
ret
int
add
add
add
sub
mulps
dec
insb
inc
add
adc
push
add
or
add
nop
push
mov
leave
nop
jmp
add
mov
add
test
push
mov
clc
repnz
nop
nop
jae
mov
xchg
and
add
fld1
clc
repnz
nop
nop
jae
rcll
xor
xor
jg
popl
cld
nop
nop
jae
push
xor
bound
add
push
xchg
ja
sbb
clc
repnz
nop
nop
jae
add
mov
cmpsb
jg
add
jne
push
mov
xchg
ret
flds
int3
fmulp
add
mov
push
mov
add
add
or
add
mov
add
and
pop
and
popa
push
mov
repnz
xlat
mov
push
add
add
add
scas
add
xchg
push
jp
adc
das
pop
test
mov
imul
mov
xor
push
xor
adc
lret
andl
inc
aas
pop
xchg
leave
dec
lock
cmp
jg
mov
sbb
mov
dec
or
loopne
enter
icebp
cmp
mov
fcompl
rolb
add
outsl
xor
mov
jno
ror
lret
mov
cltd
mov
mov
inc
fcomip
inc
fcmovnbe
sbb
xchg
cli
loopne
mov
test
sti
pop
out
rol
mov
sti
mov
mov
mov
aaa
and
push
or
jge
insl
sahf
hlt
xchg
aaa
inc
push
mov
lret
fsubrp
xchg
cmp
loop
into
rorb
or
push
pop
sub
cmp
sub
dec
push
leave
dec
push
sbb
push
add
hlt
out
push
cmp
xchg
mov
push
and
ds
sbb
adc
xchg
inc
mov
shrb
shlb
test
ret
sub
and
push
hlt
add
lock
jg
xchg
and
mov
dec
mov
in
sbb
adc
xor
int
hlt
dec
add
sahf
mov
push
es
sbb
mov
pop
jmp
mov
push
addl
out
and
aad
pop
inc
mov
dec
and
dec
mov
mov
icebp
mov
dec
mov
pop
cwtl
fsubrs
mov
add
mov
inc
dec
cs
xchg
mov
dec
sub
dec
aam
cmp
add
daa
and
mov
add
or
cmpsl
dec
mov
cwtl
ds
stc
loope
out
and
sub
and
lahf
or
sahf
cmp
add
mov
mov
and
mov
mov
sbb
sti
sub
out
sub
xor
or
add
orl
jne
mov
push
push
aaa
cmp
mov
mov
mov
mov
inc
rep
aam
pop
movsb
jnp
stos
xor
push
jge
aad
add
jnp
fdivs
mov
iret
cli
or
lods
mulb
add
pop
and
push
jb
cmp
jno
or
icebp
mov
sbb
inc
ret
cmp
mov
movsb
mov
fstpt
std
pop
push
mov
xor
ret
add
fisubrs
aas
add
add
sub
test
out
int3
pop
test
loope
push
xor
mov
push
pushf
inc
mov
dec
mov
int3
mov
and
nop
cmp
adc
xchg
xchg
leave
adc
mov
je
insl
sub
xor
or
ret
dec
out
inc
scas
repnz
ja
dec
lea
sub
or
loop
pushf
xor
push
push
jecxz
lods
cmpsl
jg
mov
es
std
jg
dec
mov
cmpsl
lret
mov
cmp
mov
jg
inc
std
sbb
or
sahf
pusha
mov
add
mov
mov
aam
cmpb
adc
add
in
roll
xchg
dec
mov
ds
jae
cmp
jp
sub
mov
rolb
xchg
outsb
pop
aam
push
dec
mov
js
adc
subb
mov
enter
mov
jg
pop
mov
loop
mov
push
fpatan
pop
dec
cli
test
dec
mov
rcl
aas
cwtl
inc
mov
popf
inc
mov
xlat
dec
mov
shl
mov
cld
pop
mov
aas
mov
mov
fistpll
mov
rcr
cmpsb
mov
outsb
int3
xor
inc
lret
add
roll
stos
pop
cmp
test
push
or
and
fucom
sub
add
or
andnps
pop
push
pop
xor
in
sbb
dec
mov
jge
and
inc
mov
push
sub
cmpsb
insl
jle
sahf
dec
mov
add
mov
testl
mov
sbb
mov
adc
inc
mov
shll
add
pop
dec
popa
int3
xchg
dec
nop
shl
dec
mov
push
movsb
push
cltd
repnz
xchg
test
stos
dec
shl
pop
mov
iret
shlb
sub
add
mov
add
xor
pop
shl
mov
add
je
test
xor
mov
jo
iret
push
and
ja
jne
sub
stc
pop
cmp
adc
adc
cli
inc
add
sbbb
sub
cmc
ja
and
add
std
les
push
dec
pop
repnz
lea
iret
inc
leave
pushf
outsl
push
cmp
add
add
loop
out
sub
fiadds
add
dec
sbbl
pop
hlt
jo
dec
mov
jg
push
and
jmp
xchg
dec
mov
inc
mov
into
lahf
pop
push
cmp
mov
add
les
ret
push
and
loop
jae
sub
mov
out
jo
dec
mov
add
mov
out
and
lret
cmp
mov
rolb
mov
jnp
or
jl
or
mov
jo
aas
push
hlt
fistps
ds
dec
mov
xor
jo
iret
sbb
mov
mov
stos
mov
daa
andb
rcrl
les
outsb
pop
stos
mov
jge
icebp
xchg
jge
popl
xlat
fs
imul
add
ss
add
enter
test
roll
inc
ljmp
add
sbb
lcall
lcall
fnstsw
pushf
xor
cmp
movsl
or
pusha
mov
pop
mov
pop
pop
pop
xchg
and
fisubs
push
movhlps
pushf
leave
push
jg
repnz
sub
jb
test
xor
insb
mov
repnz
jmp
lcall
add
add
mov
add
xchg
cmp
mov
repz
addr16
jno
mov
flds
mov
mov
es
jmp
mov
mov
ffree
dec
adc
imul
arpl
in
lret
mov
lahf
ret
dec
mov
mov
mov
mov
cmc
pushf
cmp
test
out
mov
cmp
sub
repnz
out
mov
inc
cld
jbe
fsubrl
std
das
testl
imul
push
mov
jae
lahf
xchg
nop
clc
mov
mov
repnz
push
xor
in
dec
nop
wrmsr
data16
jle
mov
mov
daa
and
mov
xchg
mov
es
stc
ss
aad
imul
adc
cmp
xor
add
inc
cmp
pop
xchg
pop
lret
movsl
add
add
mov
cmp
nop
xor
fidivrs
mov
push
test
jge
hlt
mov
mov
movsb
jne
pop
shlb
dec
repz
sbb
fbld
int3
imul
std
sahf
push
into
testl
add
je
out
out
dec
movsl
and
ret
mov
fs
roll
aam
xchg
jae
cmp
lahf
rclw
xchg
jl
inc
xchg
sbb
push
andl
add
mov
arpl
stos
inc
insb
mov
cmp
cmp
sub
jmp
lret
mov
pop
scas
pop
fcmovbe
push
adc
in
xchg
add
inc
fistpll
cmp
push
mov
jb
test
cs
data16
stc
mov
leave
shrl
into
add
sub
add
mov
in
mov
xor
add
shl
xchg
jge
movsl
gs
movsb
pop
fs
dec
mov
jp
pop
adc
aam
push
out
icebp
mov
dec
mov
aaa
aad
jle
jno
mov
mov
cmpsl
inc
out
or
xchg
add
lods
jp
aam
stc
aaa
push
xchg
cwtl
mov
jge
repz
mov
mov
add
push
pop
mov
sbb
add
add
data16
jno
int
gs
jo
aas
clc
inc
mov
stos
ficompl
aaa
mov
add
and
and
mov
sbb
popa
mov
sbb
arpl
jnp
arpl
add
adcb
and
cs
or
push
div
pop
pop
and
mov
add
pop
js
fdivs
cltd
test
out
fcomi
inc
mov
mov
sub
inc
dec
pop
cmp
xorb
cld
cmpsb
mov
bound
jno
mov
add
hlt
push
xchg
cmpsb
xor
mov
int3
xor
arpl
imul
lgs
sub
pop
aam
mov
cwtl
add
adc
xchg
ljmp
add
push
add
and
repz
add
mov
mov
add
out
aaa
push
push
pop
jb
int
out
ss
xchg
push
xchg
enter
nop
xor
cld
pop
and
push
cld
cs
orl
mov
push
push
fbstp
inc
mov
xchg
test
jo
mov
adc
lods
sti
adc
cmp
popa
xor
cmpsb
mov
jns
add
xchg
cmp
add
mov
xchg
aaa
aad
mov
lock
add
mov
and
sub
inc
xlat
adc
mov
insb
mov
add
sbb
add
insl
dec
jle
or
add
bound
xchg
ss
add
fdivs
and
push
xchg
and
aam
jecxz
mov
xor
shll
or
mov
imul
bnd
inc
push
and
ljmp
aas
test
aaa
cmp
mov
sahf
scas
mov
add
fwait
lds
fdivrl
mov
adc
cmc
ret
push
adc
mov
cli
sub
in
ljmp
or
add
xchg
push
mov
sbb
xor
pop
xchg
shr
ljmp
mov
loopne
rcl
mov
dec
scas
data16
sub
imul
xor
xchg
fstps
adc
enter
jb
mov
mov
add
mov
jnp
cld
ja
mov
popf
subb
pop
lret
or
pop
mov
or
xchg
outsl
and
mov
inc
testl
cmp
dec
mov
add
mov
mov
and
push
sub
icebp
sbb
loopne
repz
add
roll
mov
xchg
rclb
jg
dec
ds
fnstcw
movsl
int
inc
xchg
rcrl
mov
add
je
adc
dec
ror
out
test
into
xchg
pop
out
std
pop
mov
das
scas
pushf
adc
repz
pop
nop
cmp
ds
mov
add
lock
inc
iret
jg
inc
pushf
scas
aas
mov
add
add
add
loope
jp
aam
or
dec
loopne
ss
sarb
sub
push
xchg
jmp
hlt
jbe
mov
mov
movsb
data16
icebp
sbb
jp
fadd
pop
pop
lods
popl
lret
int
mov
mov
jnp
push
cmp
in
cmp
mov
in
cwtl
test
adc
dec
mov
sbb
in
mulb
jmp
ja
fs
push
mov
loope
repz
mov
je
pop
ljmp
ret
xor
adc
xor
test
xchg
pop
inc
mov
ds
jp
push
int3
jmp
xor
mov
dec
mov
in
pushf
mov
add
lock
ret
or
xchg
add
addb
xchg
mov
imul
add
scas
xorl
and
inc
mov
add
outsl
cmp
mov
add
xchg
add
add
imul
xlat
shr
xor
test
push
insl
mov
xor
push
js
mov
fiadds
jp
cwtl
xchg
in
jnp
push
pop
js
jmp
xchg
or
add
out
into
sbb
lret
clc
sbb
or
and
mov
add
inc
sbb
aas
stos
pop
cwtl
int3
fldcw
or
mov
sarl
adc
arpl
add
xchg
mov
mov
sbb
add
add
mov
cmp
vmread
add
cmc
fistpll
sbb
xchg
mov
jnp
stos
icebp
add
std
lock
popa
adc
or
xchg
add
add
ja
sbb
cmp
clc
xor
pop
push
lock
mov
sbb
lcall
mov
mov
lret
add
pop
mov
pop
shrl
data16
add
test
jae
mov
lahf
les
jp
sbb
mov
jns
mov
cli
dec
mov
mov
ds
lcall
and
jge
adc
js
les
imul
bswap
cwtl
sbb
and
inc
mov
add
pop
movsb
icebp
insl
pusha
mov
pop
lock
jmp
push
pop
sbb
and
sarb
lahf
adc
movsb
jb
andb
jne
rorl
sbb
jle
rorl
or
repz
mov
add
adc
xchg
mov
out
jbe
sub
mov
sar
fwait
ret
mov
or
shll
mov
push
fwait
xchg
mov
jl
cmp
je
repnz
push
shlb
add
mov
push
inc
or
mov
xchg
xor
xchg
iret
leave
cmp
stos
mulb
clc
jbe
cmp
add
add
mov
inc
sub
add
xor
dec
push
dec
orb
and
movsl
push
ret
orb
subb
insb
mov
mov
cld
and
mov
pop
jg
push
sbb
inc
xor
nop
int3
out
mov
testb
outsb
mov
popa
inc
loope
lock
add
add
adc
add
mov
pop
int
test
xor
mov
rclb
xchg
pop
dec
outsl
ret
pop
sub
mov
add
push
gs
mov
fsubl
mov
outsl
fidivs
pop
test
pop
lock
jns
ret
rcrb
add
je
adcb
pusha
mov
mov
lods
pop
add
add
loop
jg
pop
or
push
sbbb
inc
fdivrs
xchg
mov
adc
das
inc
lods
mov
addr16
mov
mov
and
or
mov
mov
push
xchg
pop
pop
rcl
push
fsubrl
in
cmp
add
sub
and
mov
sti
fisubl
scas
fisubl
add
xchg
mov
out
out
xor
enter
lods
mov
add
dec
and
add
mov
scas
rolb
popf
negb
fcom
mov
add
mov
test
push
dec
mov
into
fcomps
mov
mov
mov
ret
mov
add
icebp
push
ficompl
xchg
fs
add
test
add
lock
jp
mov
sbb
jmp
add
and
bound
add
fdiv
mov
pop
ret
mov
mov
mov
rcr
and
add
sbb
aaa
xchg
add
out
aam
push
push
insb
mov
inc
mov
addl
hlt
mov
sub
add
xchg
cmp
pop
in
clc
cmpsl
jbe
ffreep
aam
xchg
addr16
xor
cmp
and
out
ficoms
js
insb
mov
lods
jne
add
mov
fwait
adc
dec
jl
xchg
jp
fs
add
mov
xchg
cmp
add
lds
mov
jp
rcrl
cmp
ds
xorl
adc
xchg
adc
add
sti
lahf
push
sub
mov
and
shufps
jb
xchg
lea
mov
mov
xor
mov
filds
add
aam
loope
push
and
inc
xchg
fcmovne
mov
cld
add
xchg
inc
mov
aam
mov
aad
or
mov
add
adc
adc
push
jbe
outsb
cmp
push
mov
inc
push
cli
daa
enter
push
fwait
rcl
jmp
jge
clc
js
mov
outsl
xlat
jg
outsb
or
mov
mov
pop
aaa
sarb
mov
push
hlt
jmp
xlat
into
ljmp
mov
inc
mov
movsb
iret
in
nop
in
push
popf
pop
push
clc
mov
loop
mov
loop
out
mov
fistpll
push
dec
dec
mov
int
or
push
lahf
fbstp
mov
mov
in
out
pop
mov
imul
repz
lahf
in
or
out
push
pop
imul
aad
cwtl
hlt
adc
mov
add
scas
lret
aad
fldt
roll
fs
push
inc
mov
in
sub
add
xchg
repz
nop
lods
aaa
sti
cmpsl
shrl
fiadds
mov
adc
xchg
dec
pop
add
dec
mov
dec
das
aam
xchg
and
inc
or
sbb
dec
mov
mov
sarb
loop
mov
mov
hlt
cmp
imul
pusha
mov
cmc
cmc
daa
mov
idiv
adc
push
cmp
mov
mov
bound
mov
xlat
inc
mov
and
into
xor
add
int3
mov
dec
pusha
mov
loop
aad
nop
jge
push
loop
test
push
pop
outsl
js
or
repz
dec
inc
mov
shrl
add
scas
call
mov
lret
insb
mov
push
pop
jmp
sub
xor
and
mov
and
into
xchg
je
xchg
out
pop
call
mov
mov
mov
arpl
mov
daa
sbb
dec
cmc
cltd
push
mov
push
ja
mov
les
add
jns
dec
inc
cmpsl
lds
mov
ss
pushf
movsl
adc
aas
fadds
mov
mov
dec
js
xchg
enter
mov
mov
fwait
push
aas
sbb
xchg
xor
mov
and
fstl
test
mov
mov
lock
adc
iret
mov
jne
mov
xchg
mov
inc
out
sbb
add
lods
mov
add
mov
cmp
repnz
mov
mov
sahf
jns
mov
mov
test
clc
mov
push
mov
sbb
in
mov
and
scas
pushf
jno
popf
sbb
dec
sbb
mov
and
jnp
clc
pop
lret
mov
gs
into
mov
aad
loopne
mov
pushf
pop
cmp
add
add
pop
or
enter
out
push
aam
push
jno
in
sub
mov
mov
mov
mov
add
sti
nop
loopne
outsl
adcl
pop
mov
nop
jg
push
js
arpl
int3
push
loope
repz
push
stos
push
pop
leave
insb
mov
jecxz
sbb
push
mov
inc
mov
enter
pop
lods
or
jbe
mov
push
push
sub
pop
adc
lock
add
mov
add
es
cwtl
popf
xchg
cmpsb
push
lods
mov
dec
mov
dec
sbb
das
je
leave
icebp
jge
inc
or
add
inc
aaa
test
pop
and
es
repz
fimuls
jae
mov
and
add
popf
xor
add
pop
mov
sarb
xor
data16
and
push
dec
push
js
int
push
addr16
or
add
pop
ss
xchg
test
mov
add
mov
sti
cmpl
shlb
pop
filds
add
jae
mov
cmpsb
pop
xchg
xchg
sub
xor
insb
mov
inc
and
pop
pop
pop
inc
dec
xor
pop
or
addr16
or
aam
lds
mov
mov
mov
lods
imul
test
sahf
push
push
nop
fcomi
es
enter
sbb
cmp
add
mov
add
add
jp
cmc
sbb
pop
cmp
mov
mov
inc
repz
loop
sbb
push
push
aam
arpl
push
aas
inc
mov
int3
adc
ret
pop
out
mov
loopne
mov
push
or
dec
lcall
aaa
popa
pop
aam
mov
inc
dec
mov
scas
ficoml
mov
ss
mov
push
fildl
sti
inc
xchg
sbb
cli
sub
add
int
mov
repnz
inc
iret
mov
add
fcomps
lods
nop
xchg
push
aas
ficoml
mov
add
xor
mov
stos
adc
mov
xor
sbb
setp
cmp
sub
addr16
xchg
test
mov
pop
movsl
adc
xor
mov
pop
pop
or
add
test
sub
test
imul
lock
mov
sub
mov
mov
mov
es
add
inc
mov
movsl
aaa
out
sub
mov
lahf
xchg
cmp
add
mull
jne
adc
repz
mov
jl
adc
sub
data16
xor
daa
xchg
in
stc
es
test
pop
repnz
leave
pushw
mov
out
inc
push
cmp
jge
scas
mov
loopne
jp
int
push
pop
insl
or
xor
rorl
pop
ja
add
add
addl
roll
add
ljmp
jl
jl
mov
or
jge
daa
push
cmp
imul
mov
add
mov
gs
jg
xchg
inc
out
push
in
cmc
mov
dec
push
std
mov
sub
mul
jnp
jo
add
add
jmp
inc
leave
aad
fistl
mov
add
addb
fucomp
imul
push
cmp
and
xchg
ja
adc
add
hlt
fistl
fistpll
and
stos
sbbl
test
add
pop
fwait
mov
repz
or
sahf
test
jno
cmp
add
adc
lock
mov
add
imul
fmuls
xchg
scas
lods
lock
mov
mov
adc
add
mov
add
call
fwait
leave
in
mov
sti
mov
dec
pusha
mov
add
jo
mov
jno
std
notb
mov
scas
cmc
xor
add
mov
mov
shl
stos
fwait
cmp
add
pop
ja
in
stc
test
inc
faddp
cmc
push
sbbl
adc
jg
cmovg
clc
outsl
xchg
fnstenv
daa
mov
xor
xchg
xor
ljmp
inc
fimuls
dec
pusha
mov
mov
int
add
mov
test
insb
mov
lea
imul
cmc
out
rorl
add
add
cmp
popf
lret
xor
add
push
or
add
fiadds
mov
jno
hlt
or
or
add
inc
insb
mov
jbe
jmp
mov
int
das
das
xchg
jo
mov
adc
add
jnp
sti
sub
cmp
leave
sub
xor
jae
mov
cmpsl
and
mov
daa
icebp
xor
mov
or
sub
mov
rolb
cmp
sbb
mov
add
cmp
and
adc
mov
out
fcomip
mov
xchg
add
dec
mov
push
xor
fdivrs
add
movl
addl
mov
mov
mov
hlt
hlt
push
mov
lds
lea
xchg
jge
xor
ret
scas
fldt
andb
add
pop
imul
xchg
mov
notb
js
sbb
push
xchg
in
faddl
rol
inc
lret
fwait
popf
fimull
add
insb
mov
cwtl
hlt
mov
aam
mov
data16
loope
and
mov
mov
cmpsl
push
jb
sti
jmp
jno
addr16
mov
xchg
mov
push
movl
shlb
shrl
mov
add
notb
aad
sub
add
daa
mov
sub
into
cmpsl
test
outsb
push
sub
push
loop
fwait
outsb
dec
pop
or
add
inc
cmc
adc
pop
int
loopne
incb
add
mov
pop
rcrb
dec
pop
es
gs
out
lcall
mov
sub
outsl
bound
insl
adc
inc
insl
ficomps
jne
inc
mov
add
add
mov
jecxz
mov
xor
int
nop
lcall
push
out
repnz
add
negb
mov
aas
mov
psubusb
pop
and
cmc
outsl
dec
out
mov
es
cwtl
sub
scas
inc
in
stos
pop
ret
or
mov
negl
lock
add
mov
movsb
dec
or
push
shr
sub
mov
test
insb
mov
arpl
test
xor
lods
add
add
mov
sbb
arpl
pop
aas
xchg
pop
ret
sbb
rcl
adc
mov
adc
dec
stos
mov
lea
scas
out
mov
and
pop
dec
mov
mov
rorl
mov
xor
xchg
push
fnstcw
mov
mov
pusha
mov
mov
push
in
cmp
or
dec
loopne
fs
aad
scas
cmp
fadd
sbb
pop
lret
and
add
adc
add
inc
enter
pop
mov
add
push
or
pop
xchg
dec
mov
adcl
add
cmpsb
rcrl
add
xchg
xor
adc
mov
test
pushf
push
sub
add
in
lahf
cld
sbb
fidivrl
inc
mov
inc
sbb
jmp
rorb
aaa
rclb
xchg
sbb
sub
add
hlt
nop
dec
push
cmpsb
add
cmp
add
or
cmp
pop
inc
jp
aaa
cmp
pop
scas
mov
mov
mov
sbb
xchg
aam
shlb
add
pop
jns
xor
xor
jo
ljmp
add
and
add
mov
insb
mov
sbb
mov
cmc
mov
dec
js
jne
imul
mov
mov
test
cmp
mov
cli
and
ja
mov
add
dec
fisubrl
add
jne
enter
mov
adc
dec
sub
sbb
orl
add
repnz
xor
push
in
out
ss
loope
shlb
fdivs
cmp
add
dec
dec
xchg
pushl
or
mov
mov
or
mov
sub
add
loopne
out
fimull
adc
mov
jb
mov
lcall
rorl
add
cmp
dec
popa
sahf
mov
mov
pop
pop
mov
add
leave
loopne
sub
pop
push
loop
jo
insb
mov
dec
imul
je
notl
pop
xor
jne
fbstp
outsl
insl
jns
xor
dec
enter
fdiv
int3
mov
add
mov
push
sub
das
es
lods
lret
mov
in
mov
mov
lock
mov
ljmp
into
mov
cmpsb
addr16
and
add
jecxz
mov
imul
dec
mov
shrb
mov
es
daa
pop
jns
pop
mov
sbb
fisttpl
dec
pop
gs
inc
leave
push
xchg
xor
xor
sbb
add
add
scas
sub
add
out
inc
aaa
dec
or
test
out
jle
sahf
mov
mov
mov
inc
jo
dec
mov
addr16
shl
shr
mov
jg
push
pushf
jge
gs
xchg
sbb
pop
shrd
lahf
pop
jle
cmp
jl
rorb
mov
add
adc
pushf
lahf
mov
push
add
mov
cmp
xchg
shrl
sahf
sub
add
pop
mov
dec
nop
jmp
pop
mov
add
add
mov
cs
and
mov
mov
add
jo
fldcw
push
mov
loopne
loop
test
repz
fistl
mov
xlat
js
fcomps
inc
mov
dec
pop
dec
test
movsb
add
cmp
adc
in
xchg
dec
jb
mov
jmp
or
xchg
insl
mov
mov
jp
outsl
xor
dec
push
push
dec
dec
push
adcb
lea
sbb
loopne
cltd
scas
test
push
ror
mov
mov
mov
sub
pushf
jno
xchg
pusha
mov
push
push
lahf
dec
idivl
in
sbb
add
popa
mov
mov
popf
dec
mov
orl
dec
jo
pop
and
fsubs
fisttpl
dec
xlat
pushf
ret
lcall
stos
push
adc
or
sbb
jo
and
scas
fs
btc
loopne
pop
xlat
mov
jae
and
mov
mov
daa
aad
and
mov
mov
xchg
test
adc
mov
aam
mov
scas
pop
leave
pop
ds
sbb
inc
or
add
daa
mov
sbb
rcll
mov
push
fidivs
insl
outsb
fdivl
addr16
xor
sub
jnp
jne
clc
jb
aad
mov
aas
push
add
les
cmp
add
inc
mov
push
mov
outsb
neg
mov
add
inc
mov
xchg
mov
add
add
cwtl
inc
aad
inc
imul
mov
outsl
xchg
dec
stos
xlat
cmp
pop
or
hlt
fisttpl
sub
or
sbb
add
jnp
mov
fldl
sti
into
leave
push
xchg
xchg
cmp
sbb
decl
push
push
repnz
and
std
insb
mov
scas
jno
cmc
inc
add
and
inc
cld
std
inc
out
aas
inc
pop
aad
sub
fsubrs
mov
mov
push
sbb
pop
add
add
sub
mov
int
sub
sahf
test
out
adc
std
popa
mov
lock
xchg
sub
mov
mov
mov
jae
enter
outsb
push
ret
xor
inc
xor
or
out
orl
aad
fucompp
push
sti
adc
add
ds
and
add
test
xchg
gs
mov
test
jmp
lock
in
fsubl
lret
sarb
add
mov
pop
les
ds
add
aaa
xchg
or
add
leave
cltd
jns
cmp
mov
pop
mov
mov
jmp
cmc
cmp
dec
jecxz
mov
ret
pop
jns
xor
cmpl
ljmp
sbb
mov
add
movsb
inc
mov
add
fisubrs
add
rep
je
push
mov
fstps
das
push
test
popf
jmp
clc
jae
inc
jge
xor
cmp
push
jae
mov
les
add
add
mov
addr16
xchg
add
loop
add
xchg
out
jbe
lea
lahf
xor
popa
jmp
rcl
shll
pop
or
inc
mov
cmp
mov
cld
sub
jmp
fld
adc
ljmp
sbbl
add
mov
xchg
mov
dec
aaa
jbe
mov
cli
adc
iret
inc
mov
mov
faddl
lds
cmc
pushf
movsb
or
lahf
cmpsl
mov
add
cmp
lahf
sahf
cld
ss
add
cmp
das
enter
test
adc
add
aas
adc
mov
out
mov
out
mov
adc
cwtl
inc
out
shl
int
cmp
mov
fsubrl
dec
mov
ret
sub
jno
mov
iret
jne
pop
dec
daa
repnz
add
decl
mov
xchg
in
xor
push
jp
push
fldt
add
sbb
movsl
and
iret
jne
or
add
hlt
in
dec
push
sbb
sbb
push
int3
in
add
aad
repnz
popa
rcrb
cmp
jecxz
inc
enter
fidivrs
cwtl
jl
pop
fbstp
repnz
mov
lret
sub
add
jp
xchg
mov
repnz
jae
xchg
sbb
or
mov
xchg
lods
dec
pop
mov
out
sub
int
mov
pop
pop
mov
dec
lret
cmp
add
add
and
lcall
add
dec
mov
stos
adc
maskmovq
pop
inc
mov
les
add
lret
pop
add
aad
jae
and
add
cld
xor
mov
fwait
inc
mov
iret
adc
mov
mov
push
int3
push
inc
mov
add
push
loop
movsl
xor
inc
hlt
lea
mov
lret
scas
aad
cmp
push
leave
mov
add
sbb
mov
xor
xchg
iret
mov
dec
or
ret
jge
jb
mov
pop
mull
ja
pushf
nop
in
push
cli
sub
jecxz
addr16
mov
and
add
jbe
inc
mov
mov
fwait
mov
or
mov
mov
leave
leave
outsl
jg
out
mov
inc
jnp
mov
pushf
mov
lret
fnsave
dec
jp
test
ljmp
mov
xchg
sbb
add
adc
aam
mov
pop
mov
pop
add
add
push
jge
ret
mov
nop
pop
mov
cs
adc
mov
pop
in
imul
adc
sbb
jae
add
and
inc
mov
call
cmp
add
sub
mov
jl
xor
mov
hlt
dec
les
xor
and
cli
inc
jle,pn
mov
fists
xchg
ja
add
ret
push
add
add
add
ljmp
in
cwtl
test
out
and
jo
jecxz
fmulp
js
pop
ss
push
mov
cld
lret
push
into
jmp
mov
subb
jl
scas
cmp
mov
pushf
pushf
pusha
mov
stos
mov
inc
sti
inc
leave
xchg
inc
push
repz
mov
push
jns
mov
lahf
stc
leave
lock
push
and
je
roll
lods
sbb
sbbl
inc
mov
ret
xchg
and
xor
add
mov
jge,pt
insb
mov
pusha
mov
jmp
sub
cmpsl
sti
jnp
test
ret
loopne
insl
push
push
stc
fcmovnu
int
fs
cltd
sahf
fldt
dec
dec
jo,pn
dec
in
mov
push
stc
jno
imul
mov
sub
add
or
add
cmp
pop
scas
aad
lcall
and
test
fwait
or
mov
mov
mov
inc
adc
xchg
fs
add
add
ljmp
pop
pop
sub
sbb
bound
in
clc
in
and
into
mov
adc
sbb
sbb
imul
add
push
aad
out
or
pop
cmp
add
add
cwtl
xchg
pop
inc
das
lock
dec
cmp
inc
xchg
mov
add
pop
ret
jbe
push
cmp
insb
mov
mov
sbb
push
aad
in
mov
fisubl
adc
add
xor
fildl
repnz
mov
sahf
and
jno
mov
push
push
test
sub
into
ret
mov
sarl
es
call
xchg
jbe
xor
addl
filds
or
mov
mov
mov
push
ret
jp
lods
cwtl
loope
sbb
adc
push
inc
inc
xchg
dec
repnz
push
lret
inc
ret
movsl
dec
mov
pop
pop
out
push
mov
xchg
std
inc
mov
cmpsb
aam
lea
sbb
vrsqrtss
push
lods
in
clc
mov
lahf
cmp
mov
mov
test
jbe
insl
ja
fistpll
lret
repnz
aad
sbb
add
mov
mov
bound
loop
mov
cmc
pop
ret
js
ja
mov
fisttps
enter
add
sub
pop
or
jg
aad
lahf
xor
mov
das
std
test
add
lock
nop/reserved
or
add
push
jecxz
sub
add
jecxz
add
add
jg
xor
mov
add
jp
pop
fcmovb
inc
movsb
lock
pop
mov
lret
repnz
ret
xchg
movsl
mov
popa
sbb
pop
bound
cmp
ror
aaa
cs
dec
sbb
leave
fistl
jae
xchg
inc
js
mov
dec
dec
mov
cvttps2pi
xor
sub
inc
pop
add
fdivrl
popa
mov
dec
loop
cmp
daa
jp
data16
out
and
loop
adc
push
xchg
loope
int
in
mov
mov
fnstcw
rcrb
lahf
mov
sub
add
push
popa
outsl
movsl
xor
insl
xchg
js
inc
mov
shrl
jge
aas
ja
push
inc
lods
inc
std
cli
mov
adc
ffree
jne
pop
xchg
mov
add
insl
mov
xchg
push
ficomps
mov
push
cmp
and
add
jle
stos
or
and
dec
aaa
add
add
inc
insb
mov
cmp
or
pop
jmp
out
jnp
shl
xchg
inc
xchg
add
adc
cmp
mov
mov
xchg
cmp
pop
lods
pop
mov
clc
pop
outsl
pop
nop
lret
sarl
jle
imul
inc
add
dec
xor
into
and
mov
pop
scas
aad
xor
mov
pop
jg
repnz
sbb
add
push
inc
sub
jmp
ficomps
mov
fmull
imul
add
mov
jne
push
popf
movb
add
fwait
xchg
dec
iret
inc
mov
adc
mov
xor
andnps
addr16
cltd
or
stc
faddl
lahf
xchg
push
mov
mov
andl
add
add
jo
stos
setle
fstpl
enter
pop
and
xchg
lods
arpl
mov
aas
inc
aaa
clc
fidivrs
add
ss
pop
fwait
mov
sub
xor
subl
mov
mov
dec
mov
jg
test
jmp
sbb
add
ret
mov
mov
filds
icebp
call
inc
cld
push
jecxz
mov
dec
lret
sub
test
push
dec
mov
fs
mov
out
das
mov
mov
adc
lret
cmp
out
es
hlt
clc
fs
cmp
cmc
dec
pop
pop
jg
mov
add
mov
mov
jmp
xchg
shr
and
add
ret
jmp
lahf
xchg
cmpsb
adc
lods
xchg
fmuls
mov
adc
scas
fs
adc
sbb
pop
bound
pusha
mov
mov
or
push
outsb
jnp
push
jg
scas
bound
pop
outsb
xor
xor
in
in
xchg
in
fisttpll
daa
push
mov
ja
cmp
idivb
add
mov
mov
pop
inc
scas
les
add
lock
pop
pop
pop
ds
and
add
xor
sub
aaa
push
sbb
into
ss
mov
ss
mov
mov
cmp
add
aas
inc
lret
jmp
mov
shl
and
or
dec
mov
pop
repz
add
es
into
jo
in
fsubl
jnp
adc
shrl
movsl
sub
hlt
in
mov
cltd
push
inc
rclb
addb
add
fdivl
cmp
ret
add
pushf
sub
in
cs
push
rcrb
mov
fs
or
and
mov
or
add
je
sbb
fmuls
add
pop
dec
sub
mov
push
push
fsub
icebp
sbb
or
add
mov
cmp
sbb
fadd
icebp
jbe
fcoml
inc
arpl
inc
push
das
inc
and
push
sbb
lods
mov
add
mov
sti
test
mov
add
pop
jl
movsb
test
mov
nop
push
xchg
xor
add
cmp
loopne
fidivrl
xor
rolb
add
push
insb
mov
mov
mov
arpl
fwait
jmp
fsubl
mov
aaa
shl
push
inc
dec
fistps
push
repnz
int
je
jp
mov
dec
movsb
shrl
mov
inc
sbb
sbb
pop
les
pop
call
add
push
cmp
xlat
movsb
xchg
add
js
leave
pop
into
fdivrs
iret
xor
fbstp
push
mov
mov
dec
xchg
xor
ljmp
leave
dec
mov
fldt
pop
bound
inc
sub
pop
call
nop
xor
aam
dec
push
addr16
push
addb
mov
sar
or
out
sub
add
les
add
mov
xor
cmp
or
add
mov
xor
push
cmp
push
movsb
aam
scas
mov
cs
fidivs
pop
adc
mov
fbld
andb
leave
test
sbb
mov
dec
jg
js
jg
js
push
das
popa
sbb
fsubrs
add
pusha
mov
xor
mov
jb
sbb
punpckhdq
iret
mov
cmp
out
mov
repnz
add
cmc
adc
cmp
stc
andl
jecxz
fnsave
add
sti
pop
and
stos
adc
mov
adc
mov
clc
pop
lds
arpl
lret
sub
sbb
cwtl
add
xchg
sub
mov
mov
mov
lock
imul
dec
jnp
fiadds
fdivs
sbb
cmp
or
xchg
lea
call
cmpl
add
add
push
mov
mov
rol
sbb
mov
dec
mov
inc
dec
push
and
add
jg
cmp
aam
sub
andl
inc
daa
pop
pop
inc
ret
jbe
pop
scas
jne
mov
mov
lods
out
push
push
jp
xor
movl
and
popf
sub
push
iret
loope
rcr
mov
pop
push
xor
adc
fistps
pop
ret
mov
or
test
test
cmc
dec
push
xchg
push
scas
mov
dec
gs
jl
out
jo
pop
mov
push
cs
jnp
mov
or
dec
or
add
and
or
add
popf
mov
mov
inc
jg
repnz
cmp
mov
loopne
pop
in
icebp
inc
cmp
fsubl
lret
mov
inc
out
aaa
loopne
icebp
sub
adc
add
pop
add
add
fisttpl
ja
fsubrs
mov
enter
xchg
std
mov
inc
mov
imul
add
xlat
mov
arpl
push
push
pop
push
cmp
and
pop
in
mov
xchg
fwait
and
jl
or
add
icebp
mov
es
leave
subb
out
and
mov
mov
std
filds
outsb
and
add
push
sbb
outsl
push
lods
rclb
sbb
and
call
fwait
xlat
xor
add
rcrl
cld
inc
movsl
sub
add
jecxz
push
jmp
or
add
add
push
add
fs
outsl
dec
sbb
cwtl
in
orb
add
shr
and
pop
imul
xchg
cmp
test
out
cmp
mov
xorb
mov
shrb
add
daa
inc
mov
cld
loop
jmp
push
lods
aaa
and
adc
dec
mov
daa
pop
int3
mov
mov
stc
sub
add
push
fisubs
loopne
inc
lret
and
leave
rcrb
aas
cmp
mov
mov
enter
add
insb
mov
push
jnp
add
add
sub
add
stos
pusha
mov
call
sbb
xchg
sbb
mov
sbb
cmp
mov
mov
or
mov
pusha
mov
sbb
inc
inc
inc
enter
inc
insl
sbbb
mov
inc
cmpl
inc
adc
push
mov
movsb
loop
lahf
aam
push
pop
sbb
sbb
mov
fs
fnsave
mov
sbb
add
or
pop
stos
mov
call
push
dec
movsl
lods
repz
sbb
inc
mov
test
or
inc
test
push
leave
adc
lret
xchg
fs
mov
push
adc
cmp
mov
push
mov
push
mov
test
mov
pop
xchg
jnp
inc
cmp
push
or
add
das
or
jl
sahf
and
add
iret
or
add
shl
mov
cmp
mov
adc
ss
fld
int3
aaa
inc
or
imul
xchg
pop
jmp
add
push
xchg
shll
xchg
loope
or
clc
sbb
sbb
jo
jmp
mov
mov
pop
mov
fs
sub
jle
js
dec
mov
add
adc
cmpsb
sub
sub
mov
add
fnstenv
aas
arpl
ficompl
jns
mov
es
mov
aas
jnp
ficoms
add
xlat
add
ret
lds
movsb
pop
dec
aam
push
fs
xchg
inc
mov
mov
mov
jbe
pop
sub
mov
xor
mov
dec
adc
add
stc
ds
jge
mov
test
mov
mov
leavew
adc
lods
push
into
test
dec
lock
in
imulb
mov
xlat
sbb
add
incl
dec
sbb
xor
xchg
cmp
sbb
aas
mov
cmpsl
mov
add
xchg
or
add
in
loope
fdivs
mov
pop
mov
ror
cmp
mov
dec
cmp
iret
cli
out
xor
cmp
ror
fstl
adc
pop
or
dec
mov
sub
call
push
shll
inc
lahf
adc
pop
je
add
add
testb
or
add
flds
loope
mov
jb
fldl
xchg
in
stos
xlat
mov
xor
cmpsl
adc
cld
cmp
out
dec
mov
in
out
subb
lods
enter
jno
push
inc
mov
sub
cld
sub
mov
or
add
sbb
cmp
push
jne
movsb
dec
outsl
xchg
les
sbb
sub
and
add
ret
pmulhuw
movsl
out
popa
push
mov
enter
add
into
mov
inc
cmp
and
mov
hlt
jnp
fsubrs
jns
mov
adc
push
cwtl
dec
mov
mov
mov
mov
js
and
cmp
mov
int3
adc
rcr
out
pop
out
sahf
pushf
mov
dec
loopne
dec
insb
mov
inc
mov
in
xchg
mov
adc
mov
lret
imul
jle
arpl
dec
dec
push
clc
int
stc
incl
add
in
aad
or
addb
add
mov
pop
sub
xchg
in
mov
js
mov
push
inc
test
and
ja
mov
sub
add
xor
ret
ss
imul
mov
dec
mov
or
cmovnp
push
pop
loopne
lea
push
cmp
cld
add
add
dec
jp
insb
mov
and
sub
fiadds
arpl
add
mov
jp
addl
mov
insb
mov
add
movb
or
mov
mov
int
fmull
add
sti
in
scas
enter
roll
sbbb
orb
in
fidivrs
add
add
std
out
adc
cmp
mov
in
sub
mov
addl
xor
fcmove
xchg
loope
mov
adc
xor
fisubrl
popa
call
push
add
mov
das
mov
cmp
inc
fdivr
cmpsl
dec
in
push
or
add
sbbb
and
adc
inc
fsubrs
add
add
add
xchg
adc
ljmp
xlat
adc
into
shrb
mov
mov
inc
mov
push
repnz
inc
lock
add
xor
sub
pop
add
jne
stc
jno
pop
lds
icebp
subb
cltd
xor
daa
adc
add
lcall
mov
mov
je
divb
xor
fsubs
daa
dec
nop
or
xchg
mov
dec
shrl
lods
add
into
fisttps
daa
sahf
stc
jnp
xor
clc
sub
ret
jae
into
cld
fdiv
mov
fucomip
iret
js
mov
repz
or
mov
pop
push
scas
adcl
add
sub
xchg
jbe
inc
sub
mov
call
add
out
or
add
pop
test
dec
and
mov
out
into
sub
mov
icebp
pop
mov
lea
cli
adc
cli
mov
mov
es
push
jo
cmp
aaa
xchg
inc
pavgw
add
inc
sbb
add
loopne
loope
movsb
pop
fildl
lods
inc
mov
xchg
mov
and
mov
insb
mov
shll
mov
jo
jno
out
movsl
push
cmp
add
xor
jmp
push
mov
push
mov
mov
add
stc
xor
push
mov
loopne
lds
dec
frstor
jns
dec
nop
in
push
addr16
sbbl
pop
jle
arpl
xor
sub
add
dec
dec
inc
rorl
push
lret
es
or
add
inc
sbb
into
call
add
mov
push
jl
aas
mov
sub
mov
movsb
mov
bndldx
adc
mov
jnp
in
ljmp
add
dec
mov
andl
mov
add
adc
ds
cltd
sub
aas
cmp
sub
mov
dec
xchg
in
stc
iret
mov
es
mov
jl
lods
pop
xchg
shrb
mov
mov
mov
popa
scas
add
adc
jo
fistps
in
mov
ja
leave
movb
arpl
mov
ja
mov
xchg
sarl
and
scas
dec
jmp
leave
imul
iret
adcl
xor
lret
sbb
addr16
dec
mov
mov
dec
dec
push
jns
cmpsl
xchg
or
cli
pop
testl
mov
mov
adc
pop
outsl
les
adc
mov
mov
mov
xchg
lds
mov
outsb
popf
insl
cmp
mov
xchg
and
add
in
cmp
xor
mov
add
xchg
pushf
jnp
movsl
push
cld
test
jg
xchg
adc
add
add
fwait
jp
enter
cwtl
sbb
dec
mov
inc
ret
movsl
negb
pushf
jecxz
ret
cmpb
fisttpl
enter
mull
add
aad
test
stos
addb
mov
add
push
push
pop
idiv
add
cld
fxtract
iret
insb
mov
loopne
daa
push
test
aas
pop
aam
xchg
jp
add
xor
inc
ljmp
and
pushf
inc
mov
inc
mov
ss
cmp
orl
inc
mov
cmp
mov
add
stos
jmp
adcl
adc
dec
mov
mov
lods
and
inc
cmp
add
or
mov
mov
mov
leave
and
shlb
adc
push
jg
aaa
and
jo
dec
mov
sub
inc
out
insl
out
out
inc
in
jo
jno
add
add
dec
push
jno
sbb
add
sbb
jl
adc
lea
add
and
lods
lds
lcall
insb
mov
sbb
mov
and
dec
mov
mov
sub
fcoms
inc
subb
inc
mov
pop
cmp
mov
mov
inc
and
mov
xor
mov
pop
push
cmpsl
ss
out
leave
inc
push
data16
hlt
int3
clc
pop
fidivl
enter
add
or
or
add
mov
stos
adc
lret
repnz
add
jns
push
ljmp
cld
sbb
int3
cmc
pop
push
enter
nop
test
sbb
xchg
ja
mov
dec
pushf
sub
dec
xchg
mov
pop
test
add
mov
mov
push
sub
test
repz
adc
pushf
dec
hlt
in
loope
inc
fwait
testl
pop
daa
popa
cmp
mov
rcl
sbb
mov
dec
mov
xor
mov
sahf
or
add
or
imul
das
xor
insb
mov
shrb
sar
fwait
sti
mov
mov
xchg
mov
jmp
dec
aaa
and
frstor
sahf
sub
add
or
pop
js
ljmp
mov
orb
bnd
inc
mov
xchg
inc
mov
and
add
mov
xchg
test
shlb
xchg
mov
mov
or
loope
movb
jle
test
dec
mov
mov
sbb
shr
push
adc
jb
xchg
and
lahf
mov
xchg
mov
scas
add
add
andl
xchg
arpl
rol
loopne
xor
add
fiadds
call
sbb
inc
inc
mov
dec
test
inc
adcb
icebp
pop
xchg
repnz
fld
and
sbb
dec
jno
mov
popa
xchg
sbb
pop
mov
add
pop
inc
mov
je
pop
xor
lods
adc
or
push
push
bound
push
sub
lcall
fs
scas
sahf
repz
mov
std
push
dec
fisttpl
add
ret
outsl
lahf
add
and
cld
xchg
inc
mov
inc
mov
mov
xor
mov
bound
out
lret
pop
pop
xchg
mov
cmc
pop
pop
adc
data16
adc
fildll
mov
addr16
lret
adcb
subl
pop
push
push
adc
or
mov
mov
push
mov
rcl
push
dec
insb
mov
sbb
pop
jns
inc
cltd
jbe
dec
mov
enter
push
sub
jnp,pt
cmp
test
loop
mov
mov
lea
into
stc
fidivl
sarb
jns
pop
insl
adc
inc
mov
clc
in
mov
jnp
cmpsl
jmp
mov
loopne
pop
or
mov
sbb
mov
daa
cmp
je
int
push
xchg
sub
int3
push
add
add
sub
push
push
fidivrl
je
sub
mov
fdivrl
test
sbb
and
pop
jge
mov
mov
test
xorl
dec
sbb
std
mov
iret
mov
sub
add
mov
pop
rorb
dec
ficoml
pop
cli
sbb
roll
add
jae
mov
jp
pop
mov
add
loopne
stos
dec
mov
pop
shrb
lret
and
or
mov
inc
sahf
mov
test
push
addb
push
sbb
mov
ret
icebp
cmpsb
popf
jno
jg
ss
xchg
adc
pop
sub
mov
jp
repnz
jo
cli
call
imul
mov
or
mov
add
add
pop
pop
dec
mov
test
andb
orb
sub
jl
out
test
pop
outsl
or
add
jp
popl
pop
mov
push
lahf
xchg
add
and
sub
xor
add
cmp
add
sbb
lcall
mov
and
add
ja
int3
pop
dec
push
popf
aam
movsl
cmp
lds
bound
repnz
adc
enter
add
add
inc
aas
jae
aad
and
add
dec
lods
pop
mov
jae,pn
or
int3
jne
and
add
je
pop
arpl
test
imul
jns
mulb
mov
mov
leave
sub
pop
repz
pop
les
clc
fcmovne
ds
push
stos
outsb
cmpsw
je
std
dec
mov
movsb
jg
cmp
and
popf
dec
mov
cmp
addr16
pop
scas
mov
or
add
mov
fwait
inc
stos
dec
mov
add
loop
lds
adc
mov
mov
decl
mov
add
loop
sbb
adc
add
add
add
cmpsl
aad
in
out
data16
pop
pop
out
inc
inc
fs
add
xor
xchg
in
mov
inc
lods
mov
into
int3
xor
mov
inc
dec
mov
jo
ljmp
dec
mov
into
mov
in
sub
cs
scas
cmpsb
mov
movsl
pop
pop
aam
xchg
sub
mov
les
test
sbb
add
fcomps
sub
cmp
jmp
and
es
cli
popf
es
pop
shlb
call
inc
add
rcll
mov
mov
cld
cmp
cmp
sbb
scas
cli
out
add
add
cmc
popf
pop
fcomps
jp
insl
repnz
sub
mov
mov
mov
xlat
loopne
pop
jno
add
mov
rclb
xor
divb
fimull
into
sbb
mov
inc
mov
lret
mov
add
mov
vsqrtps
add
sub
pop
outsl
adc
add
hlt
push
mov
xchg
inc
xchg
sbb
cltd
or
and
daa
adc
aas
and
add
scas
stos
cwtl
add
cmpl
cltd
out
insb
mov
sbb
rclb
jns
mov
std
shll
mov
add
add
lods
call
daa
sbbb
lods
arpl
inc
pushf
sbb
ja
push
cmp
lret
jp
loop
push
push
std
pop
push
fsts
shll
sbb
sub
adc
pop
loopne
lret
icebp
push
pop
xorl
aam
pusha
mov
xor
lds
out
test
sbb
inc
fnsave
mov
cmp
movb
add
jecxz
mov
add
push
or
xchg
xchg
inc
mov
mov
stos
das
pop
sbb
add
jp
pop
jecxz
mov
push
mov
mov
mov
insl
push
mov
in
adc
push
imull
or
mov
mov
aas
mov
jecxz
imul
cmp
lret
shrb
mov
mov
enter
orb
add
push
popa
sub
jmp
out
mov
dec
mov
enter
xchg
xchg
push
push
push
sub
mov
popa
inc
ljmp
scas
xchg
inc
mov
adc
mov
ret
jecxz
xor
scas
sti
cs
pop
stc
out
outsl
sub
xchg
xlat
or
adc
xcrypt-ecb
cmpsl
iret
pop
inc
ljmp
mov
jno
lds
or
lea
sub
pop
mov
pop
pop
shlw
mov
lods
push
or
aas
bound
aam
mov
adcl
in
jo
fucomp
xchg
jno
out
gs
loop
ljmp
out
pusha
mov
repnz
aad
cld
cmp
jae
add
add
xchg
jne
jo
push
addl
pop
lds
sub
addr16
sub
dec
repz
dec
mov
adc
fs
stos
add
inc
mov
mov
adc
sahf
or
outsb
pop
popf
test
mov
enter
push
cmp
mov
jmp
mov
in
es
mov
sub
cmp
call
push
xchg
mov
push
push
nop
lds
add
daa
fdivl
lret
dec
mov
or
add
add
cmp
outsl
add
or
adc
mov
sbb
add
dec
pop
push
fs
enter
sub
pusha
mov
add
add
and
push
mov
push
fcomps
aas
fstpl
cld
scas
cmp
sub
add
js
mov
and
mov
mov
mov
cmp
or
add
and
add
or
into
sti
and
jecxz
or
ja
sbb
imul
mov
mov
inc
cld
dec
mov
push
push
rorl
in
jmp
xchg
ficoms
mov
ss
daa
inc
mov
add
add
add
mov
aad
add
scas
js
push
xor
add
mov
sub
pusha
mov
je
mov
aaa
rcr
xchg
adc
cmc
loop
jecxz
roll
add
and
add
and
add
sub
mov
or
add
mov
loop
aas
insl
add
fildl
dec
call
add
dec
insb
mov
jne
test
mov
push
jmp
stos
sub
add
sub
mov
insb
mov
adc
mov
and
mov
pop
jne
mov
cmp
aas
insb
mov
xchg
xor
gs
add
outsl
into
je
mov
cmc
ret
push
shrl
add
fmuls
xor
add
add
scas
jo
outsl
scas
xchg
cwtl
lret
pop
and
add
xor
loopne
push
add
add
mov
pop
pop
jae
aad
xchg
cmp
push
or
mov
push
push
xchg
mov
pop
xchg
sti
pop
div
mov
repz
repz
data16
xchg
cli
or
sbb
es
jmp
ljmp
mov
adc
mov
xchg
jle
mov
cmp
push
push
jmp
mov
lea
sti
dec
iret
sub
popa
mov
mov
pop
mov
mov
adc
push
stos
je
clc
jno
mov
jmp
and
jae
dec
pushf
and
mov
or
rcrb
push
loopne
outsb
dec
mov
mov
bound
fsubrp
pop
scas
xchg
ljmp
mov
rcrb
add
fistpl
mov
jmp
mov
ljmp
or
cmpsb
xor
jl
fs
mov
addr16
cmp
aam
int3
pop
push
add
mov
mov
or
dec
inc
fimuls
add
and
push
aas
das
shlb
push
cmp
mov
bound
mov
xchg
add
cmp
add
sbb
push
or
orb
divb
jmp
add
add
outsl
cltd
xor
inc
inc
mov
lret
iret
enter
ret
cwtl
push
cmpsb
ret
test
iret
mull
add
lret
dec
mov
cmc
sbb
decl
jmp
lret
xor
roll
add
icebp
push
push
push
sbbb
stos
or
push
idiv
mov
scas
xchg
xchg
add
push
cmp
inc
inc
pop
mov
dec
mov
and
outsb
jg
addr16
xchg
sbb
mov
test
jmp
mov
adc
sbb
mov
es
mov
gs
cmpsl
xor
std
cmpsl
jge
and
add
cmp
nop
gs
push
push
adc
aam
xchg
jp
pop
add
fwait
push
push
mov
or
pop
cmp
leave
sub
add
cmpsl
pop
nop
insb
mov
fwait
sbb
leave
out
fildl
mov
pushf
lcall
fisubrs
xlat
inc
popf
jns
mov
and
ret
or
jge
sbb
cltd
or
mov
or
mov
lea
sbb
subb
add
out
cmpl
test
mov
icebp
xor
popf
mov
jns
js
pop
scas
push
fs
xor
lret
mov
jne
gs
popf
cmp
mov
add
xchg
sbb
stos
fistl
dec
imul
and
out
cmp
lret
pxor
imul
xchg
mov
push
xor
cmp
push
andb
lret
xor
pop
jo
sub
dec
jno
xlat
push
cmc
test
adc
add
jg
adc
mov
add
mov
dec
cmc
xor
xchg
sbb
push
into
loope
mov
nop
rclb
inc
rcl
cmp
mov
cmp
mov
cmp
das
or
add
jno
and
xchg
movsb
test
jne
mov
das
loope
inc
sub
inc
dec
mov
xchg
inc
popf
xchg
pop
jno
nop
pop
popa
adc
xchg
lret
cli
adc
add
add
clc
add
les
clc
xchg
add
sub
and
nop
scas
sub
jns
outsl
sbbb
add
cmp
lahf
enter
add
xor
jp
or
add
add
inc
mov
jns
lret
sub
add
push
mov
and
fucomi
int
adc
add
add
fidivl
cmp
xchg
cmp
iret
mov
test
js
rcrb
test
out
lds
cmp
stos
pop
andl
mov
jo
adc
sbb
imul
push
test
jb
adc
adc
sbb
mov
push
jnp
add
mov
arpl
pop
scas
adc
repz
mov
fdivrs
pop
pop
addr16
pop
out
in
push
and
out
rolb
add
xchg
add
mov
mov
add
cmp
add
test
cmc
dec
push
cs
adcb
lahf
outsl
push
sbb
hlt
imul
sbb
cmp
mov
jbe
xchg
sub
mov
fldcw
add
mov
rorl
add
sbb
push
mov
lock
imul
jmp
in
call
gs
add
loopne
cmp
cmp
gs
loop
jo
cmp
mov
xchg
or
mov
loop
pop
adcl
add
pop
xor
sub
add
cmp
add
repz
or
hlt
and
push
jmp
test
cs
xchg
xor
or
add
add
loope
mov
jcxz
adc
leave
push
dec
and
dec
lods
xchg
mov
adc
push
mov
push
sbb
push
jmp
mov
xchg
add
cmpsl
sub
cld
mov
aaa
adc
pop
loop
mov
or
mov
sbb
dec
bsr
xchg
iret
sub
mov
ret
jne
inc
adc
inc
movsb
xor
ret
mov
daa
add
cmp
mov
cmp
mov
leave
mov
mov
bnd
sarl
mov
jmp
test
jb
push
push
dec
xor
sub
jb
xchg
out
mov
and
mov
mov
inc
mov
sub
stos
inc
cmp
add
xchg
xor
aad
out
adc
loop
mov
add
arpl
adc
mov
mov
jmp
cli
pop
dec
cmpb
shrl
mov
inc
hlt
ja
mov
inc
xchg
add
cmp
insl
fcomip
out
cmp
jnp
and
sub
test
mov
scas
sbb
pop
cmp
xor
int
mov
and
imul
add
push
dec
xor
jg
and
or
icebp
lods
mov
cmc
sbb
push
rolb
inc
jo
shl
sub
mov
push
adc
push
shll
xor
pop
push
or
pop
and
xchg
jmp
push
orl
sub
add
push
inc
mov
mov
jg
adc
add
cmp
lret
push
and
add
scas
sub
add
pmullw
xchg
mov
test
mov
add
in
xor
dec
mov
xor
add
xchg
add
inc
test
inc
xchg
mov
mov
mov
rorb
jnp
lcall
pop
inc
xor
test
inc
mov
sub
cmc
pop
test
test
cld
push
cmpl
mov
inc
add
add
inc
adc
dec
mov
mov
es
and
jnp
ds
sahf
fldcw
add
mov
mov
loope
fwait
mov
mov
mov
ret
sub
push
cmp
mov
add
nop
jp
testl
mov
mov
pusha
mov
xchg
je
pop
lds
mov
mov
out
test
fldcw
mov
mov
enter
mov
fwait
push
rcrb
mov
add
add
shrl
add
popa
adc
add
pop
insb
mov
xchg
jecxz
mov
jmp
out
mov
push
mov
in
cmp
add
pop
int
loopne
hlt
cmp
xchg
sbb
jmp
sub
add
gs
jae
adc
into
mov
gs
xchg
push
mov
scas
xor
in
pop
dec
lahf
cmp
mov
inc
adc
or
add
stos
js
shrl
add
fstpl
loopne
cld
fsts
push
push
ljmp
or
mov
hlt
iret
sub
cmp
push
in
das
inc
pop
xchg
cwtl
inc
loope
jp
pop
stos
adc
add
ficompl
cmp
das
inc
test
jns
out
mov
mov
lods
cmp
mov
lods
test
mov
jae
push
enter
add
out
adc
roll
pop
cwtl
dec
push
loope
mov
cwtl
inc
sub
adc
mov
inc
daa
mov
xlat
mov
jno
jle
xchg
lret
mov
mov
add
sbb
add
mov
lret
dec
mov
dec
jge
cmpsl
test
add
sub
mov
adc
push
pop
daa
xchg
int3
add
or
add
js
pushf
sahf
cld
imul
imul
or
add
loope
mov
sbb
add
add
cltd
push
mov
pop
jae
inc
push
cmc
repz
add
nop
and
xor
jne
inc
pop
xor
add
pushf
es
out
cmp
outsb
sbb
stc
jne
mov
loopne
out
scas
push
adc
cmp
jg
cld
mov
mov
xchg
push
loop
push
or
add
leave
ljmp
aam
arpl
and
out
daa
out
mov
push
cmp
sbb
push
jns
mov
add
push
test
gs
lock
notl
popf
pop
add
gs
out
lret
fildl
and
stos
aam
fidivs
out
lea
mov
aaa
push
mov
lock
test
jae
out
shl
add
call
jo
dec
mov
shlb
add
adc
and
jecxz
rclb
mov
in
cmc
mov
dec
enter
out
imul
pusha
mov
icebp
sbb
sub
repz
xlat
fs
sahf
sub
add
or
add
inc
add
inc
rcrl
stos
mov
push
xchg
insl
adc
add
xor
cmp
push
pop
lcall
decb
lock
add
cwtl
add
pusha
mov
aam
jns
mov
add
add
adc
add
mov
add
fmull
add
push
cmpb
mov
test
enter
xor
push
mov
iret
mov
sahf
or
push
cltd
cmpb
pop
or
dec
or
xchg
fnsave
cmp
mov
hlt
fnstsw
add
xchg
push
mov
fsubl
add
test
ds
ljmp
add
into
cmp
add
add
mov
les
cli
xchg
dec
es
shrl
xchg
add
cmp
nop
xor
cmp
nop
mov
and
enter
add
push
popa
add
mov
add
xchg
inc
and
mov
adc
cli
inc
data16
mov
call
lahf
je
xchg
xor
cld
cltd
sbb
sbb
dec
mov
ret
push
and
add
fwait
push
movsb
popf
les
pop
mov
pop
popf
pop
enter
scas
jmp
push
sti
pop
imul
and
stos
lcall
fwait
xchg
lods
stos
sub
add
mov
and
pop
lret
add
dec
jmp
mov
xchg
push
pop
push
stc
sbb
fstpl
daa
ret
or
out
lods
or
add
xor
sbb
lock
add
add
fcoms
add
or
loop
popf
pop
xorl
lock
lea
xor
inc
dec
mov
sub
add
loopne
rcl
pushf
xchg
adc
mov
pop
push
cmpsb
gs
leave
adc
dec
roll
dec
sbb
loop
mov
push
mov
add
mov
sub
mov
sub
stos
outsl
jo
mov
sbb
shrb
add
loope
mov
addr16
mov
cwtl
add
out
mov
divl
push
cwtl
cmc
mov
jo
js
mov
mov
mov
add
in
sbb
add
push
fdivr
mov
adc
mov
mov
sbbl
xchg
rcr
fiadds
add
mov
xchg
sub
std
ret
jnp
popa
addr16
mov
push
es
dec
mov
addb
sarb
add
icebp
mov
mov
dec
jo
inc
pop
loopne
and
dec
jno
jae
mov
mov
jecxz
push
add
add
jmp
mov
xchg
fiadds
add
mov
mov
sbb
lds
add
scas
test
dec
loope
mov
dec
ret
mov
fisubrs
push
enter
add
or
add
mov
jbe
sahf
hlt
jge
int
jns
cmp
lahf
cmp
lea
pop
pop
js
mov
lahf
cld
or
add
pop
sahf
sbb
dec
add
loopne
push
repnz
std
fdivl
sbb
cvtpi2ps
or
inc
mov
dec
mov
xchg
lcall
add
data16
push
popf
inc
mov
aam
dec
inc
mov
dec
pusha
mov
inc
mov
add
stos
pop
cmp
shlb
add
call
les
xor
mov
daa
dec
mov
lret
pop
mov
adc
xchg
leave
sbb
cmp
movsl
mov
xchg
jns
mov
or
add
add
test
dec
movsb
mov
leave
sub
sbb
xchg
push
lds
mov
sub
jns
sub
mov
and
mov
add
xor
pop
add
scas
lahf
test
add
add
push
outsb
fwait
inc
pop
or
rcrl
mov
loop
sub
add
push
jge
mov
leave
fstps
dec
ss
jb
xchg
adc
js
mov
fwait
mov
mov
ss
and
mov
pop
mov
xor
xor
add
inc
popa
ret
out
xchg
push
enter
add
pop
push
je
mov
push
dec
loopne
jecxz
pop
mov
add
sbb
mov
mov
fwait
sub
insb
mov
cld
mov
adc
and
fadds
sub
cwtl
clc
and
add
nop
pop
adc
mov
rclb
jmp
ja
in
leave
lods
mov
add
andb
xchg
dec
mov
mov
leave
mov
cmp
lcall
cmp
cmp
mov
sahf
push
repnz
test
lods
xor
outsb
jb
ja
hlt
pop
adc
out
mov
inc
xor
add
cs
mov
add
jns
and
in
xchg
stc
mov
add
imul
sub
ficoml
xchg
lock
add
ljmp
mov
mov
ljmp
repz
pop
add
inc
xchg
mov
mov
cltd
pop
inc
jecxz
sbb
cld
add
add
dec
mov
and
adc
add
add
jl
aas
orl
stos
popfw
call
inc
es
loop
fcoms
sbb
add
lds
mov
cltd
aam
add
inc
jp
pop
scas
mov
aaa
jmp
mov
or
hlt
in
into
call
fisttpll
sub
lds
inc
mov
cmc
daa
push
xor
or
daa
pxor
shll
fisttpll
inc
pop
mov
mov
push
pop
or
cmc
lods
lahf
xchg
sub
add
jle
int
or
add
push
push
call
fs
inc
mov
and
bound
push
in
or
add
or
ss
inc
mov
sarb
add
fnstsw
sub
add
push
push
push
enter
or
add
in
adc
dec
mov
inc
aam
xor
jecxz
cli
ret
shll
sbb
ret
or
sbb
mov
sub
add
cmp
pop
clc
addr16
jmp
mov
rorl
jb
rorb
jecxz
dec
mov
add
fildl
mov
pop
mov
fsts
or
cmp
aad
lahf
push
pop
mov
xor
sahf
mov
sub
add
out
mov
bnd
lods
mov
out
cmp
or
add
mov
add
add
xor
sti
shlb
add
sbb
stos
pop
enter
mov
push
pop
in
pop
and
aaa
lahf
jno
mov
repnz
cmc
loope
fld
add
cmpsl
dec
jl
dec
mov
sbb
mov
sub
int
pop
ret
in
sub
jno
mov
cwtl
cmp
inc
add
outsb
sbb
inc
cmpsl
stos
cmp
mov
pop
add
lds
add
in
push
aaa
imul
pop
leave
ja
sbb
sbb
mov
jb
mov
sti
inc
mov
sbb
icebp
push
pop
jnp
pop
in
test
add
inc
mov
add
push
sbb
xchg
inc
mov
push
stc
xor
and
pop
push
adcl
mov
sub
or
movsb
lods
push
in
mov
lods
repz
fwait
sbb
mov
jns
das
loope
mov
mov
pop
clc
mov
outsl
mov
popa
xchg
in
jg
fnsave
out
sti
sbb
sbb
mov
les
inc
mov
dec
xor
iret
js
inc
pusha
mov
nop
add
mov
add
daa
popf
add
inc
mov
imul
insl
sbb
add
pop
adc
jno
sbb
jp
fs
add
adc
push
pop
adc
mov
pop
addr16
inc
mov
enter
cmp
adc
es
pop
stos
dec
ds
mov
rcl
sbb
in
out
sbb
mov
cmp
iret
aad
add
imull
scas
testb
mov
xor
sbb
shrb
mov
mov
lret
cs
pop
push
inc
test
gs
loope
sarl
push
ret
inc
push
push
xchg
test
int
ret
or
mov
adc
cli
lahf
data16
mov
jb
push
sbb
add
or
loope
mov
fstl
stos
in
inc
mov
pushf
dec
push
pop
in
cmp
push
fisttpll
dec
and
iret
pusha
mov
jp
cmc
sbb
pop
sbb
pop
or
pop
dec
inc
push
adc
js
mov
rclb
hlt
rorb
cmp
add
jnp
dec
cwtl
xor
sub
inc
loope
daa
scas
mov
aam
mov
bound
jae
das
add
inc
mov
sbb
pushf
mov
enter
popf
les
mov
push
popa
or
arpl
sub
mov
cmp
mov
aam
xchg
xor
das
lret
mov
outsb
push
sbb
call
push
lds
pop
mov
fbld
add
jb
jnp
cmp
fstp
dec
and
add
add
jo
repnz
fs
in
sub
push
add
add
add
and
rol
rcrl
and
add
pop
mov
pop
movsb
jge
into
jb
out
mov
int3
dec
mov
lods
cvtpi2ps
mov
scas
fstl
into
xchg
adc
push
push
dec
sbb
xor
imul
mov
into
jbe
dec
hlt
stos
mov
mov
shl
out
sub
add
add
push
pop
cmpsb
cmpsl
cwtl
movsb
or
add
xor
push
dec
inc
sbb
adc
push
pop
mov
iret
into
push
lret
inc
mov
xchg
arpl
ficoml
scas
pop
into
jge
out
jb
dec
mov
cmp
mov
inc
mov
pop
inc
mov
sub
xchg
lcall
mov
testl
add
loop
adc
add
add
pop
lds
das
negl
mov
outsb
mov
mov
cld
mov
add
dec
mov
jne
cmpsb
or
mov
push
dec
and
jecxz
adc
sbb
add
add
ja
xor
lods
xor
xor
les
push
ret
sahf
cmpb
xchg
sbb
push
sub
cwtl
mov
push
call
push
push
mov
mov
scas
loopne
test
mov
mov
sti
pop
mulb
add
mov
stos
inc
jae
and
add
sub
jl
jecxz
push
or
and
inc
cmp
dec
mov
sbb
mov
sbb
mov
cwtl
add
dec
roll
cwtl
xchg
or
add
mov
lds
mov
aad
mov
inc
repnz
inc
sbb
inc
push
imul
push
or
add
push
mov
add
test
xchg
daa
call
mov
fldenv
popa
mov
add
xor
pop
out
xor
mov
sbb
push
cmp
sbb
sti
hlt
fisubl
jno
mov
test
pusha
mov
jecxz
sbb
inc
decl
mov
sbb
mov
mov
insb
mov
mov
push
mov
mov
add
mov
lds
xchg
aas
sbb
jbe
inc
out
push
addr16
mov
add
fmuls
add
mov
iret
rclb
cmp
xchg
adc
mov
rcrl
fisttps
push
or
sub
push
or
inc
insb
mov
mov
xchg
push
ljmp
adc
dec
mov
pop
aaa
and
gs
push
sbb
movntq
ss
cmp
stos
lock
jge
fildl
mov
pop
adcl
add
and
and
in
popa
inc
shrb
neg
xchg
stos
xchg
push
or
sbbb
adc
shrb
add
sbb
mov
in
enter
lret
jp
test
cld
ret
inc
mov
lds
mov
jns
push
outsl
call
inc
movups
in
aas
mov
adc
lret
in
mov
cli
adc
push
mov
xchg
and
inc
xchg
and
icebp
ja
mov
mov
sbb
dec
push
and
and
mov
jmp
idivb
sub
lret
inc
mov
lret
mov
bound
or
loopne,pn
out
notl
inc
mov
or
aad
movsb
sbb
jl
aam
dec
adc
mov
pop
add
inc
xchg
or
pop
test
cmp
test
xchg
scas
mov
sbb
mov
mov
test
jp
jge
mov
add
stc
xchg
push
xor
xor
add
add
xlat
in
xchg
xchg
rcll
pop
aad
push
xorl
mov
cmp
and
push
andl
lea
and
adcb
or
cmp
test
rcrl
std
xor
inc
mov
sub
ficoml
stc
rorb
test
rcrl
xlat
add
dec
mov
leave
dec
mov
in
popf
mov
ss
test
mov
add
add
add
mov
mov
jno
imul
mov
jne
sub
mov
cld
pop
inc
mov
push
add
cmp
push
sbb
push
push
mov
ret
mov
add
pop
push
dec
adc
mov
mov
loope
adc
outsl
inc
mov
idivl
cs
loope
mov
sub
sbbl
test
mov
shrb
add
mov
add
lcall
add
push
cmpsl
bound
lcall
sbbb
ss
mov
push
or
add
sahf
mov
mov
sahf
test
aaa
dec
jae
dec
push
adc
adc
js
fs
cwtl
push
call
test
xor
ljmp
mov
les
les
mul
pushf
iret
out
xor
aam
xchg
jbe
push
cmp
movsb
adcl
mov
mov
pop
outsb
into
sub
pop
sub
add
mov
adc
pop
and
add
push
mov
mov
or
daa
test
jbe
jmp
jbe
popa
out
inc
mov
filds
mov
pop
push
inc
jecxz
or
add
mov
or
jg
jl
roll
mov
push
lds
xchg
push
test
inc
mov
call
xor
daa
inc
or
mov
into
insl
ret
jecxz
add
ljmp
xchg
shll
push
lds
cmp
push
in
ret
sbb
mov
push
enter
sub
jecxz
xor
mov
loopne
mov
mov
enter
std
xor
add
xor
cmp
in
andl
mov
jle
clc
add
sub
jecxz
faddp
test
in
ficoms
das
cmp
mov
jl
mov
aas
pop
jg
aas
mov
mov
into
call
imul
pop
mov
test
push
loopne
int3
inc
pop
test
negb
push
iret
pop
shll
add
sbb
fdivs
in
dec
and
sub
adc
add
xchg
adc
mov
roll
add
test
xchg
mov
mov
sub
cmp
repnz
mov
loope
push
mov
fcompl
in
insl
insl
adc
pop
dec
mov
sbb
mov
in
dec
fs
sub
mov
mov
test
shl
addl
add
aad
mov
pop
xchg
sbb
push
fs
add
xchg
mov
out
adc
jbe
or
xchg
push
aaa
inc
xor
push
dec
roll
mov
jp
pop
and
lcall
xchg
sub
push
xchg
mov
push
jle
pop
fwait
sub
add
mov
mov
dec
out
jmp
push
test
jp
sub
in
out
mov
xor
xor
adc
mov
mov
add
add
or
mov
add
cli
test
stos
lods
shl
cmp
add
stos
mov
insb
mov
lock
aas
xor
dec
mov
add
sub
fcompl
mov
inc
xor
fimull
push
or
add
loop
push
ret
inc
aam
xor
imul
add
or
xchg
out
int3
daa
cmp
negb
popa
sub
clc
dec
mov
pop
xor
and
add
orl
ljmp
jns
neg
jb
into
push
in
mov
dec
mov
xor
mov
clc
adc
mov
push
jne
imul
push
fs
pop
and
dec
push
adc
mov
jl
ja
inc
mov
jo
add
add
jne
mov
pop
adc
stos
test
cmp
adcb
das
sbb
sarl
mov
mov
cmpsl
mov
add
xchg
stos
jbe
mov
aaa
nop
ja
loope
push
xchg
adc
sarl
and
push
or
add
cltd
pop
cmp
xor
mov
ljmp
or
lahf
sbb
les
ja
imul
jg
add
add
fdivl
mov
add
pop
jl
data16
jle
mov
add
add
lret
pop
inc
lret
stos
jne
lods
or
and
add
stc
xor
sbb
inc
jge
out
iret
jno
xor
mov
stc
outsl
test
add
outsb
test
xchg
xor
push
jo
inc
vmwrite
add
out
in
dec
mov
add
js
in
push
lods
in
jg
sub
leave
and
jbe
push
ja
aaa
ja
das
mov
fwait
cmc
xchg
repz
std
scas
sbb
sub
push
mov
mov
adc
mov
mov
popa
mov
xchg
push
mov
mov
and
pop
xchg
cmc
iret
jbe
fcomip
sar
cmp
dec
add
add
jp
ss
outsb
cmc
lea
lds
outsl
pop
test
inc
mov
inc
lea
sub
sahf
sbb
out
into
pop
aaa
sbb
rcrb
out
fnsave
jmp
add
filds
imul
dec
cmp
roll
inc
push
sub
mov
fstpl
pop
sub
cmc
cmpsl
mov
add
orl
xchg
call
add
sbb
loopne
test
adc
push
pusha
mov
cltd
xor
inc
or
inc
ror
rorb
pop
add
add
aaa
dec
mov
mov
fbstp
insb
mov
aam
push
orl
jmp
sub
add
jge
xor
mov
dec
out
mov
mov
out
adc
lds
jne
shrb
rcl
push
adc
add
mov
mov
xchg
das
jnp
in
test
fsubrl
mov
mov
shl
andb
add
push
aas
int3
lods
cmp
mov
add
int3
ret
mov
in
imul
rorl
mov
in
call
cmpsl
pop
jle
mov
mov
and
mov
cmp
inc
mov
sub
mov
stos
jb
inc
dec
mov
add
mov
mov
adc
add
fiaddl
mov
push
xchg
mov
push
rcrl
mov
int
xor
loope
loopne
adc
mov
pop
out
test
mov
sub
or
ja
addb
add
imull
mov
jge
sbb
or
inc
mov
mov
adc
lcall
loopne
mov
or
push
xchg
or
add
push
mov
lcall
sbb
push
fadd
push
mov
aad
out
push
xor
in
das
jecxz
aam
repz
mov
or
mov
or
sbb
and
lcall
or
mov
xor
icebp
fwait
sub
push
or
add
outsb
sbb
add
aad
in
xor
mov
addb
cmp
add
jbe
insl
or
lret
mov
add
sbb
jns
mov
arpl
mov
mov
out
cld
jecxz
cmp
sbb
loopne
hlt
scas
addr16
mov
std
and
dec
cld
fldcw
pushf
mov
mov
cmp
lods
sahf
mov
das
mov
mov
push
xorl
sbb
movsb
dec
mov
push
inc
out
mov
jne
push
pop
xor
xchg
cli
sahf
notl
and
add
add
adc
mov
adc
xchg
jnp
lret
ljmp
dec
add
cmp
add
add
sbbl
push
mov
inc
repnz
inc
xchg
lock
mov
push
fisttps
orb
mov
mov
push
ja
jmp
cmp
mov
xor
loope
cld
push
cmp
and
add
into
cmpsl
xor
loop
mov
mov
jnp
mov
scas
fcoms
mov
ret
dec
mov
jns
aad
pop
pop
sti
inc
mov
inc
push
xchg
inc
mov
jns
push
or
in
in
fnsave
jmp
add
inc
sub
ljmp
mov
pop
iret
lock
lea
aam
mov
cmp
fidivs
fsubr
cs
sub
out
mov
xor
movsb
fldenv
push
lock
adc
ja
inc
push
jnp
jecxz
xchg
jne
sbb
or
mov
inc
inc
out
loope
jo
sbb
dec
pop
sti
or
add
cmp
sarb
movsb
inc
sub
leave
dec
mov
js
fsts
jg
mov
mov
int3
and
andb
fadd
jbe
arpl
pop
add
rcr
adc
pop
test
add
push
cwtl
rcrb
sub
add
test
stc
lahf
pushf
cmp
inc
std
lock
add
jge
fcoms
mov
cmp
ret
mov
inc
mov
adc
add
les
cli
repnz
int3
inc
push
fs
shrb
add
sbb
insl
mov
data16
sub
sub
scas
mov
add
std
mov
daa
in
inc
or
add
addr16
or
xlat
xchg
add
mov
sbb
test
mov
loope
mov
push
into
xor
xor
add
add
add
out
cwtl
fcomi
pop
lds
mov
lahf
cmpl
push
cltd
aad
cli
push
cltd
mov
popf
and
xrelease
inc
insb
mov
add
lods
sbb
lcall
into
lods
push
mov
push
je
insb
mov
and
mov
mov
adc
xor
sub
cmp
outsl
sbb
sbb
mov
add
mov
fisubrl
loopne
lds
mov
shr
xor
cmp
add
lea
insl
les
mov
cmp
cmpsl
jp
pusha
mov
add
enter
xchg
pop
add
pop
andl
jmp
clc
push
inc
mov
mov
int
inc
neg
lods
xchg
cmp
js
xchg
outsl
stc
push
jnp
xor
mov
push
ret
js
rolb
add
or
popf
push
inc
or
jl
add
pop
lretw
loop
stos
pop
addb
add
pusha
mov
push
cli
sbb
fcoml
push
push
push
dec
ret
sahf
testl
cmp
xor
push
neg
adc
ss
mov
sub
in
insb
mov
fs
inc
js
pushf
bound
mov
or
add
lds
test
stos
mov
xchg
adc
inc
mov
cmpsb
mov
jb
js
ret
les
fnstsw
sbb
add
sti
push
inc
sar
insb
mov
je
add
inc
rclb
pop
mov
mov
xor
imulb
jle
bound
xchg
mov
fadd
add
mov
dec
andb
notl
or
adc
jmp
push
add
push
subl
insb
mov
rorl
neg
pop
adc
sahf
adc
jg
mov
mov
add
pop
movsl
inc
mov
sub
push
push
scas
nop
movsl
inc
lahf
jnp
push
std
rclb
mov
xchg
les
mov
mov
push
es
xchg
stc
jge
or
inc
mov
out
jmp
cs
xor
pop
push
inc
mov
cli
ja
inc
fwait
repz
rolb
adc
inc
inc
cmp
push
add
add
aad
mov
jg
enter
daa
test
lods
aaa
or
repnz
sub
add
push
cmp
cmp
stos
not
jg
mov
rcrl
adcl
ret
fnsave
mov
push
mov
dec
loop
mul
pusha
mov
sub
push
push
pop
inc
mov
aam
xchg
mov
cmp
shl
or
aas
into
cwtl
inc
mov
dec
iret
push
mov
adc
add
or
jecxz
les
jp
and
je
adc
mov
repnz
ficompl
mov
add
lods
pop
orl
xor
add
mov
aas
dec
mov
adc
js
push
or
pop
add
gs
add
cs
dec
push
inc
add
add
xchg
add
imul
outsb
sbb
adc
iret
cltd
xor
mov
inc
adc
xor
sub
add
adc
and
inc
inc
int3
add
push
push
jbe
jle
pusha
mov
sub
cld
cmp
leave
inc
mov
in
dec
mov
in
repnz
jae
lods
mov
adc
das
in
mov
pop
sbb
or
add
adc
popa
cld
inc
mov
insl
sahf
xchg
ja
mov
jo
inc
jl
rcrb
xchg
arpl
mov
push
adc
push
sbb
sbb
push
clc
shrb
xchg
add
cmp
stc
push
ja
push
cltd
orl
fucomp
test
xchg
mov
pop
pusha
mov
aaa
fwait
ja
inc
mov
cmp
mov
shrb
add
push
movd
flds
mov
cli
inc
aas
mov
add
loopne
cmp
shrb
xor
shll
xchg
lret
dec
jl
and
add
xor
rcll
sbb
jae
scas
hlt
pop
pop
mov
test
sbb
and
sbb
push
mov
fsubr
vcvttss2si
push
rcrl
adc
js
cwtl
and
pop
jno
insb
mov
pusha
mov
xor
inc
dec
pushf
pop
pop
inc
int
inc
mov
adc
push
aaa
inc
cmp
stc
fs
xorl
fsubrs
xor
pop
fisttpll
aad
test
pop
imul
lret
xor
std
and
pop
mov
mov
mov
jp
mov
mov
dec
test
add
sub
cmp
stos
xor
dec
mov
inc
adc
jno
jo
mov
add
outsl
push
loop
inc
scas
mov
mov
movsl
add
mov
mov
mov
jl
cmc
add
sub
dec
mov
mov
std
add
mov
inc
dec
mov
aad
cltd
cltd
and
push
pop
lods
fidivl
inc
arpl
add
popa
jns
cmp
xchg
lds
xchg
inc
and
jb
in
push
or
or
outsb
xchg
push
mov
js
add
sbb
mov
clc
std
sbb
mov
lods
ds
cltd
pop
adc
add
sbb
cltd
in
cmp
mov
sub
or
add
add
add
push
mov
dec
adc
add
pop
pop
inc
test
cmc
adc
xor
add
jae
mov
ja
clc
inc
push
jo
cmp
mov
mov
lea
nop
mov
repz
sbb
xchg
sub
out
shrb
jle
xchg
xor
push
mov
xchg
cmp
and
pop
test
pop
out
push
add
addr16
outsl
push
sarl
insl
outsl
sbb
jmp
out
loop
in
sub
ljmp
add
inc
scas
push
jno
cmp
sub
mov
mov
push
mov
mov
fldenv
pop
jge
add
emms
stos
ja
insl
sub
add
jl
mov
fcoms
test
adc
fs
out
add
cmp
sarl
loopne
push
bound
add
pop
flds
mov
inc
in
mov
andl
or
inc
std
or
push
inc
xchg
mov
inc
xchg
add
pop
sti
or
add
inc
mov
test
dec
into
mov
mov
or
inc
or
incb
or
add
clc
add
js
scas
cmp
mov
out
jne
push
es
lret
cwtl
mov
cmp
mov
rcll
push
xor
into
out
sub
cmovne
add
adc
mov
in
data16
mov
mov
push
push
mov
add
xor
inc
fcoms
jae
mov
xor
add
insl
lahf
aad
test
mov
jl
mov
sub
sub
add
dec
inc
mov
pop
dec
jg,pn
sub
xchg
outsb
repz
add
mov
add
push
ljmp
add
bnd
adcb
in
cs
je
jge
or
add
push
xorl
repnz
xchg
fsubrl
add
sub
push
lret
adc
sbb
mov
mov
jecxz
or
add
mov
xor
enter
pop
or
fs
xchg
cwtl
cmpsb
and
add
arpl
inc
loop
mov
mov
xor
mov
cmp
lods
cmp
jo
jne
test
lods
adc
add
inc
mov
in
push
dec
or
push
cmpsb
sub
fnstenv
adcl
pop
dec
push
xor
cmpsl
jae
fdivrs
fwait
in
sbb
jo
lret
dec
pop
scas
mov
rcrb
inc
adc
gs
cmp
dec
mov
sub
mov
lcall
fisubrl
xchg
add
fs
shrl
mov
push
sub
mov
adc
mov
sub
add
fisttps
ret
add
les
mov
xor
lret
add
pandn
mov
jbe
push
push
sbb
loopne
jmp
adc
push
cmpb
add
fs
dec
ljmp
mov
pop
mov
sbb
sbb
mov
or
add
inc
inc
mov
sarb
mov
mov
add
inc
mov
push
adc
dec
jae
push
movsl
fs
cmp
cli
mov
pop
aad
fistps
rcll
mov
sbb
mov
mov
jae
fldt
add
mov
xchg
or
add
mov
xchg
push
mov
ficoml
add
mov
dec
or
icebp
or
add
movsl
push
out
mov
rorl
jo
mov
push
add
add
push
jbe
lahf
imul
mov
popa
and
aaa
ret
imul
xchg
adc
push
test
mov
mov
mov
push
stc
cltd
in
mov
pop
add
lahf
dec
dec
mov
shll
scas
rorl
add
ss
nop
pop
jnp
or
lcall
jmp
cmpsl
rolb
addr16
mov
mov
add
fcoml
or
int
cmpsl
jl
pop
cmpsb
sub
add
sub
add
sub
add
xlat
dec
mov
sub
add
add
pop
jnp
mov
neg
inc
js
push
or
add
push
cmpsb
sub
add
dec
push
cmp
movl
jl
xchg
repnz
das
outsl
stos
data16
add
mov
xlat
mov
add
stos
aam
fdivp
into
dec
push
arpl
lods
jp
mov
mov
sub
cmc
sti
xchg
icebp
lock
pop
mov
bound
inc
mov
aam
imul
add
mov
mov
lods
mov
pop
adc
add
push
adc
mov
cmpl
push
add
mov
sbb
jle
loop
outsl
fadd
jle
jmp
pop
xchg
mov
mov
and
mov
lods
pop
sub
dec
adc
jb
jae
or
add
cwtl
out
mov
ret
sti
lret
add
and
add
mov
jge
mov
sti
pop
cli
enter
add
iret
inc
cli
sti
in
mov
mov
mov
shll
cmpl
icebp
add
lret
adc
or
add
add
push
scas
andl
add
and
mov
dec
mov
aam
add
dec
out
cmpsb
pop
or
int3
stos
xchg
add
xor
pop
lret
jle
lcall
rclb
fdivrl
data16
mov
outsb
jns
mov
std
les
add
dec
jl
jo
outsb
xor
lret
loopne
push
andnps
mov
add
add
sub
add
xchg
push
xor
mov
ja
mov
jle
cli
jle
add
lcall
lods
jecxz
jle
sarb
cs
mov
mov
fadds
mov
mov
sub
mov
add
pop
mov
cs
gs
mov
ds
pushf
fwait
loopne
jno
mov
js
outsb
add
jb
mov
arpl
loopne
js
add
adc
aaa
jle
push
add
repnz
xor
aam
and
add
mov
addb
mov
cmc
cld
dec
pushf
add
pop
push
fdivrs
bound
sbb
mov
negb
xor
adc
bound
sbb
int
adc
mov
inc
pushf
adc
add
rcr
pop
push
ret
mov
jne
loop
mov
mov
push
sahf
shll
push
add
mov
jl
shll
sub
ds
das
cltd
add
pop
or
inc
mov
lods
mov
and
mov
add
les
sbb
lds
lds
mov
add
loope
add
sub
xchg
push
aas
ljmp
mull
aas
or
ljmp
xor
lret
loop
call
mov
mov
lret
mov
adc
and
les
dec
add
add
negb
es
mov
push
xchg
adc
aaa
pop
inc
mov
sbb
popf
aas
jmp
pop
adc
add
inc
shlb
mov
test
imul
xor
and
add
inc
jle
fs
movsl
cmp
faddl
fs
cmp
push
cmc
pop
je
jbe
sbb
div
xchg
mov
add
jae
xor
adc
jge
clc
insl
adc
or
push
mov
cltd
inc
aad
mov
mov
loopne
lea
js
push
arpl
cwtl
shll
aaa
add
add
mov
xchg
ljmp
add
enter
sti
std
add
add
sbb
sbb
add
jmp
into
push
dec
mov
cmpsb
inc
sub
xlat
sar
sti
mov
pusha
mov
and
and
mov
add
test
das
mov
lock
jne
iret
or
int3
push
and
in
pop
adc
cwtl
adc
std
int3
mov
fiaddl
mov
add
inc
or
push
mov
add
add
adc
mov
scas
ja
arpl
pop
roll
jl
jb
cmp
cli
into
fnstenv
in
mov
mov
jp
into
pop
push
loop
jae
mov
inc
filds
pop
clc
inc
push
mov
push
mov
adc
loop
lods
add
lcall
push
xchg
jnp
mov
popa
stos
cmpsl
js
push
jb
pop
dec
and
mov
add
xchg
pop
int3
add
jne
adc
xlat
xor
jnp
adc
xor
addr16
mov
sahf
add
add
sub
dec
mov
popa
das
xor
add
push
add
pusha
mov
add
js
ret
movsl
daa
cmp
inc
mov
mov
mov
pop
cmp
in
sub
sbb
jne
mov
addl
in
xchg
pop
dec
sbb
repnz
cs
ljmp
mov
mov
ret
fdivrp
jns
loop
mov
sbb
dec
and
insb
mov
call
adc
pusha
mov
mov
xor
mov
mov
test
sbb
mov
call
jle
call
jbe
out
lcall
cmc
imul
mov
xor
mov
pushl
jp
mov
push
orb
add
mov
in
or
das
mov
sub
dec
mov
jo
ret
mov
jo
pop
sbb
xchg
mov
or
shlb
out
xchg
xor
mov
sub
cmp
add
mov
and
add
jge
push
push
hlt
aad
cmp
fs
mov
push
adc
movsl
lahf
orl
add
rcrb
xor
call
xchg
xor
add
mov
in
inc
in
stos
imul
push
jno
add
add
imul
lods
mov
sar
mov
xchg
mov
mov
inc
lahf
gs
dec
mov
dec
lea
dec
sbb
outsl
repz
add
test
and
xchg
jg
xchg
push
mov
pop
cmp
roll
sub
sti
nop
in
loope
or
add
add
cld
les
mov
pop
xor
mov
cmp
xlat
scas
fcmovnu
ret
popa
xchg
inc
inc
xor
adc
mov
cmpsb
or
popf
mov
stos
jge
adc
and
sub
jno
mov
mov
std
pop
jne
adc
test
fwait
jl
sub
mov
add
cli
jae
add
jl
test
cmp
pop
jns
test
daa
xor
shlb
push
mov
push
popa
clc
int3
js
inc
mov
adc
not
lock
add
xor
das
adc
imul
aas
movsb
pop
dec
push
mov
cmp
mov
mov
test
inc
negb
or
in
adc
sbbb
xor
subb
scas
add
outsl
or
cld
mov
push
daa
fmulp
stc
iret
testl
sbb
stos
cld
addr16
dec
mov
mov
mov
clc
dec
xor
mov
lcall
add
call
mov
mov
push
test
ds
lret
gs
ja
push
sub
int3
inc
outsb
push
stos
stos
sub
add
jno
mov
add
xor
pop
imul
mov
popf
nop
sti
add
add
push
xchg
pop
js
dec
mov
mov
mov
mov
add
stos
fsubp
xor
or
add
cltd
test
aas
mov
out
mov
inc
mov
or
add
cmp
jmp
push
mov
push
fcomps
inc
addr16
or
sub
inc
mov
notl
add
arpl
push
lcall
in
xchg
lret
xor
inc
fs
mov
jbe
outsl
pop
xchg
sub
ds
fcoms
mov
add
xchg
add
jno
clc
icebp
mov
mov
adc
or
scas
les
mov
fwait
mov
cmc
mov
cmp
or
add
out
cmp
inc
cmp
dec
das
inc
xor
dec
mov
mov
sbb
or
jle
pop
rorl
icebp
push
fsub
icebp
je
ret
xor
xchg
and
pop
adc
dec
lds
bound
cli
pushf
or
std
mov
push
andl
pop
roll
in
mov
add
add
addr16
idivl
cmpsb
pushf
cltd
lods
inc
mov
pop
cmc
mov
add
pop
mov
add
lcall
push
mov
jmp
xor
add
les
arpl
jg
ficoml
add
mov
aad
xor
mov
shll
in
shll
add
inc
arpl
sbb
push
push
es
outsl
push
rcll
mov
sub
sbb
jno
mov
add
shl
sub
add
pop
push
ss
insl
jle
mov
sbb
mov
add
mov
aam
shlb
add
or
add
pop
mov
add
inc
mov
imul
xor
rorb
or
add
sub
add
jbe
push
pop
jle
pop
lods
ret
jno
mov
cmp
push
in
movsb
xchg
mov
cli
dec
or
add
xlat
lods
addr16
mov
mov
je
xchg
scas
pop
xchg
xor
and
fiaddl
mov
add
add
es
jbe
fldl
add
movsb
pop
add
add
and
add
inc
mov
cmp
data16
mov
push
dec
inc
outsb
in
ret
enter
xlat
fdivl
mov
jecxz
in
daa
icebp
pop
lfs
jns
mov
subb
xchg
cmc
fistpl
add
add
pop
loope
cwtl
stos
sbb
xchg
rorl
loopne
mov
lret
clc
mov
jbe
push
xchg
xor
add
or
int3
imul
push
pop
cmp
gs
lcall
push
mov
add
cli
jecxz
roll
add
mov
mov
push
fisubl
mov
mov
and
add
sbb
mov
fucom
clc
fs
daa
cmpb
nop
mov
lret
dec
push
mov
syscall
mov
lret
jns
out
aas
test
xchg
scas
pop
bound
pop
shlb
addl
add
add
mov
int
xor
test
outsl
or
pop
mov
cmp
pop
clc
ret
jmp
ss
xor
xor
lret
push
push
out
jge
adc
pop
in
mov
or
add
imul
popf
mov
and
add
push
loopne
clc
insl
dec
mov
clc
add
add
xchg
push
jae
inc
mov
scas
dec
and
add
xchg
or
sbb
add
addr16
xchg
outsl
adc
add
pushf
lahf
push
inc
mov
aaa
push
mov
sbb
push
das
inc
jecxz
fcompl
adc
add
add
push
jbe
mov
pop
cmp
jmp
mov
push
pop
mov
pop
mov
dec
mov
call
sar
out
jns
test
inc
imul
mov
jo
xlat
gs
xor
pop
dec
mov
add
jbe
gs
sbb
rclb
ja
test
sbbl
sbb
js
adc
xor
mov
jns
in
fwait
mov
gs
dec
sbb
stos
mov
add
sahf
repnz
insb
mov
or
cmpsl
les
mov
out
scas
dec
out
or
add
nop
xor
loop
and
add
fidivl
daa
fimull
mov
sub
test
dec
inc
dec
adc
cli
push
arpl
add
jnp
insw
jno
and
add
dec
mov
sarb
jle
rclb
mov
outsb
push
jmp
inc
les
clc
push
or
mov
xchg
or
cwtl
xchg
out
mov
inc
inc
mov
add
sub
icebp
pop
mov
outsl
adc
mov
and
cmp
in
mov
scas
or
add
testb
dec
jno
cmp
das
cli
mov
or
push
data16
mov
add
mov
add
or
mov
test
or
add
mov
iret
sub
xchg
rorb
xchg
gs
incb
mov
jnp
xchg
cld
cld
sbbb
scas
fstl
add
pop
mov
sub
ret
es
adc
es
cmp
pop
scas
hlt
inc
ljmp
cmp
mov
mov
pop
pop
lods
pop
or
add
or
add
mov
mov
mov
out
bound
test
fs
push
fnsave
add
in
in
invd
mov
mov
popa
pop
and
aad
mov
add
sbb
jno
andl
push
mov
cmp
and
xchg
mov
adc
ret
stos
out
mov
iret
xor
xchg
xor
jecxz
mov
mov
dec
aam
out
dec
dec
rolb
add
sub
add
outsl
addr16
inc
mov
test
scas
rep
movb
mov
fists
add
add
into
sub
xor
sub
es
dec
mov
sub
in
in
xor
arpl
mov
add
add
push
dec
mov
mov
popa
cmp
add
test
push
add
jne
in
test
out
mov
mov
andl
filds
jl
mov
in
call
add
int
fwait
sahf
daa
sbbb
fistps
icebp
jmp
pop
lea
cmpb
mov
and
sub
add
mov
jle
mov
push
sbb
loope
mov
loop
jbe
mov
or
inc
mov
or
push
mov
mov
mov
mov
sbb
mov
imul
xchg
shl
jecxz
popf
outsl
mulb
sbb
scas
add
insl
lods
or
incl
add
aad
lahf
pop
scas
mov
add
daa
rclb
push
int3
je
push
lods
or
jl
int3
fists
add
orb
add
push
mov
push
int3
jl
inc
lock
icebp
xchg
or
pop
data16
adc
add
mov
add
out
fisubl
adcb
pop
cmp
add
pushf
xchg
mov
dec
sbb
imul
adc
orl
xlat
mov
fdiv
cmpsl
sbb
add
cmp
lods
inc
lods
push
dec
rcr
add
jecxz
arpl
add
mov
movsl
int3
inc
dec
insb
mov
mov
adc
cmp
pop
insl
or
xchg
adc
testl
imul
outsl
cmpsb
or
add
setne
mov
mov
add
jg
ljmp
sub
aaa
xorb
jge
xchg
jmp
mov
test
pop
mov
dec
ljmp
repz
add
sbb
add
int
sbb
cmp
sbb
mov
lods
xchg
dec
ret
int3
out
jmp
add
cmp
call
mov
mov
add
dec
cs
xor
hlt
fcomps
xchg
dec
jo
mulb
mov
push
jne
icebp
mov
popa
cltd
mov
push
push
xchg
push
inc
mov
outsb
xlat
in
sahf
mov
pushl
das
xor
dec
xor
shll
hlt
mov
movsl
daa
push
icebp
testb
sub
mov
sbb
mov
in
mov
sub
cmp
in
mov
dec
add
add
xchg
add
sbb
std
jo
adc
stos
enter
add
add
inc
mov
test
or
mov
cmp
inc
push
jg
push
nop
call
inc
pop
mov
mov
sub
add
test
sbb
cwtl
mov
xor
push
cmp
xchg
shrl
sahf
dec
cs
in
add
pop
andb
mov
cmp
sarb
mov
dec
mov
sarb
or
sbb
jns
push
popf
mov
imul
in
push
pop
adc
movsl
and
add
pop
mov
inc
mov
cwtl
subb
sub
or
add
jns
mov
xchg
inc
xchg
mov
add
insb
mov
xor
add
add
and
add
xor
ret
sub
jb
or
in
daa
mov
fisubrs
shll
out
mov
sub
add
xor
repnz
shll
mov
adc
inc
movsb
xlat
jno
jge
in
cwtl
test
test
icebp
xor
lret
xor
dec
daa
ja
xchg
outsl
jecxz
jnp
or
add
xor
imul
ss
add
xor
in
add
mov
addr16
mov
imul
mov
sti
cld
mov
mov
mov
mov
lcall
stc
inc
jae
insb
mov
jmp
pop
shrl
mov
xor
add
pop
mov
add
add
cmpsl
sbb
lods
xsha1
or
mov
push
je
push
mov
push
push
stos
popa
xchg
loopne
std
xlat
xor
mov
mov
pushf
loop
cmp
ret
inc
dec
fstps
arpl
xchg
dec
xchg
and
add
pop
flds
test
mov
lret
adc
sar
into
add
pop
lods
jno
sub
jo
mov
cmp
add
add
std
pusha
mov
mov
or
popa
into
filds
fsub
addr16
andl
push
hlt
mov
loopne
xor
jae
hlt
push
add
sub
adc
inc
ret
movb
mov
out
and
mov
mov
and
sbb
lea
adc
repz
push
test
push
jg
leave
aaa
xor
lcall
add
inc
shl
mov
adc
iret
faddl
adc
mov
jle
lret
insl
cs
add
add
xor
add
jb
jo
inc
mov
mov
ja
jae
jno
mov
cmp
fbstp
push
aas
push
mov
enter
out
adc
or
dec
mov
push
int3
sahf
jl,pt
xor
dec
mov
mov
ss
inc
mov
add
jae
aaa
jb
mov
add
lock
jl
or
add
pop
sbb
mov
add
imull
inc
mov
fcoms
inc
frstor
sbbl
mov
push
cmp
dec
mov
pop
lret
gs
pop
addr16
push
movsl
or
xor
jnp
and
and
mov
add
xor
fwait
xor
and
jg
inc
xchg
nop
add
cwtl
repnz
pushf
jbe
hlt
inc
mov
pop
pop
adc
movsl
fimull
lea
add
or
add
pxor
push
inc
mov
call
sub
xchg
popa
popf
xor
cltd
inc
jnp
in
fisttpll
xchg
push
jnp
jmp
mov
scas
lods
push
adc
ss
add
fucomip
daa
gs
and
mov
mov
xor
or
in
sbb
and
add
pop
xchg
pop
in
movsb
sbb
add
add
xchg
push
out
in
jbe
xorb
pop
mov
push
push
and
xchg
and
mov
pop
ret
lods
mov
sbb
testl
int3
sub
pop
out
mov
xchg
jb
mov
mov
dec
daa
fildl
mov
add
dec
in
nop
pop
xor
rorl
test
imul
into
es
pushf
bound
imul
add
out
out
mov
xor
mov
clc
shld
add
or
add
in
mov
pop
sub
pop
xor
push
inc
mov
xorb
xchg
jmp
addr16
mov
inc
inc
add
add
test
inc
mov
pop
lcall
mov
mov
mov
test
add
pop
cmp
and
add
daa
or
sub
add
mov
mov
or
add
jecxz
sbb
mov
les
add
stos
outsl
ds
xor
bnd
lock
sub
add
xor
sub
or
test
push
fbstp
jae
cmp
stc
imull
mov
add
add
add
fnsave
fwait
mov
ja
outsl
mov
dec
roll
or
push
and
add
test
or
dec
fldt
mov
mov
arpl
test
add
push
cmp
push
sbb
daa
pop
jne
sahf
loopne
mov
or
xor
inc
mov
ljmp
and
add
aas
push
fldt
jno
sbb
xor
lods
daa
sub
add
shlb
push
cmp
xchg
andb
push
fs
jne
mov
rcrb
mov
popf
pop
fs
adc
pop
adc
pop
mov
pushf
push
pop
pop
sub
out
mov
and
push
cmp
rorl
cld
mov
xlat
int3
jl
pushf
push
lods
mov
mov
lods
push
add
jl
mov
loopne
mov
and
test
out
fdivl
sub
fnstcw
clc
pop
xlat
dec
mov
xchg
gs
inc
jns
pop
rorb
inc
shlb
jge
ss
or
arpl
add
add
add
pop
mov
adc
js
jp
mov
add
mov
mov
add
add
add
in
adc
add
adc
and
xor
push
inc
shld
add
push
gs
xor
mov
ret
call
rorl
pusha
mov
add
push
into
dec
das
movsb
cli
ds
jbe
cmpsl
xchg
mov
mov
fildl
pop
or
std
add
add
jne
repnz
add
jno
mov
add
and
adc
mov
mov
out
jecxz
mov
lods
test
mov
mov
xlat
pop
or
out
outsb
pop
push
mov
adc
hlt
divb
mov
jle
lods
in
int3
repz
hlt
in
je
pushf
leave
sbb
lahf
rcll
inc
adcl
shr
sbb
dec
mov
ljmp
std
aam
mov
pop
cmc
lret
jp
pop
jne
out
mov
add
repz
nop
lcall
mov
push
cltd
rorl
imul
jae
in
daa
push
sub
loop
incb
add
push
call
inc
fcmovbe
stos
adc
out
mov
or
cltd
xlat
mov
aad
sarb
fiaddl
movsb
mov
inc
mov
daa
inc
mov
daa
loop
add
add
or
aad
push
orl
add
mov
imul
fildll
jo
push
or
roll
add
pusha
mov
add
stc
xor
stos
xchg
imulb
add
sbb
insb
mov
mov
mov
cmp
inc
mov
adc
out
jg
mov
pop
mov
xor
adc
sbb
cwtl
push
jnp
xchg
and
mov
adc
adc
inc
scas
mov
inc
mov
sbb
fidivrs
push
insb
mov
adc
push
sbb
aaa
and
add
addl
loopne
mov
std
inc
jo
xchg
pop
mov
cmp
inc
mov
sbbb
mov
adc
stos
in
jo
nop
and
add
scas
xor
inc
mov
aam
imul
mov
mov
pop
pop
test
sbb
mov
in
mov
xlat
ds
add
pop
add
add
lret
sti
xchg
or
lret
push
xlat
pop
aad
adc
mov
imul
xor
dec
fisubs
add
imul
out
inc
in
mov
insl
dec
pushf
pop
cwtl
mov
mov
adcl
add
iret
into
pop
and
addr16
aas
or
pop
stc
xor
jne
aas
sub
push
loop
cmp
inc
daa
adc
xor
pop
xchg
loopne
mov
xor
incb
mov
jp
add
sub
add
outsl
add
add
mov
ficoms
dec
mov
mov
add
add
mov
into
lcall
mov
jp
adc
adc
add
mov
mov
pop
imul
xor
into
sbb
ja
push
and
fnsave
sbb
mov
lock
jno
xor
inc
jno
push
jp
jle
mov
mov
out
mov
push
gs
pushf
push
out
pop
int3
and
add
sbb
mov
sbb
inc
shlb
mov
mov
test
or
add
cmp
add
pop
and
ret
push
int3
sbb
inc
adc
cmc
cltd
loop
pusha
mov
mov
push
push
mov
mov
or
or
fidivl
in
mov
inc
push
jae
mov
lahf
inc
int
xor
adc
out
sub
add
and
loopne
cmpsl
adc
in
inc
mov
fs
clc
fisttpll
add
daa
jle
add
add
ret
leave
jg
jmp
inc
cs
imul
cmpsl
aaa
call
in
or
pop
sub
add
mov
out
push
call
pop
inc
sub
mov
mov
jle
mov
scas
sbb
loopne
mov
mov
hlt
shll
loopne
cmp
xor
xor
outsl
sub
push
inc
or
add
lds
add
in
das
daa
nop
test
adc
xor
inc
outsl
pop
mov
std
sub
lret
pop
xchg
dec
dec
pop
mov
push
inc
inc
mov
leave
mov
sub
add
arpl
and
fs
stc
cmp
adc
aas
les
addr16
movb
xchg
ljmp
aaa
xor
pop
cwtl
cmp
mov
add
inc
pop
xchg
push
fisttps
add
sbb
inc
inc
into
outsb
into
repnz
sar
add
add
inc
xchg
scas
cmp
movsl
xchg
lret
dec
std
adc
or
add
ret
fcomp
inc
xchg
jno
mov
xchg
and
add
jmp
mov
in
lahf
push
hlt
sbb
adc
adc
push
adc
add
pop
pop
dec
xor
sub
add
subb
add
adc
outsl
pop
jo
mov
ret
dec
clc
shrl
scas
js
outsl
jb
xor
jb
lods
ret
dec
mov
into
movsl
inc
mov
fldt
xor
sbb
or
bnd
adc
add
repz
jmp
push
dec
data16
jns
mov
jp
inc
mov
mov
mov
add
push
fwait
mov
pmaxub
mov
neg
dec
xor
push
movsl
push
jmp
sbb
test
mov
lret
pop
gs
pop
clc
dec
push
outsl
mov
mov
insl
push
or
or
mov
dec
mov
inc
fisubrl
jmp
jno
push
mov
push
pop
and
and
mov
movsb
insb
mov
in
jge
pop
jne
mov
push
mov
add
gs
loop
xor
ljmp
add
rcl
in
mov
aas
xor
xor
test
jns
call
cmp
daa
add
into
adc
sbb
adc
xchg
sbb
cmp
xor
or
and
mov
aaa
lea
add
inc
mov
and
adc
jbe
inc
mov
loop
or
mov
loopne
or
add
div
iret
outsb
adc
or
jb
add
iret
imul
mov
or
mov
sbb
sahf
adc
mov
jb
fsubs
mov
lds
rcl
in
mov
pop
adc
push
pop
sub
add
mov
or
jp
or
decb
lods
repz
push
test
stos
mov
mov
mov
adcl
or
adc
sbb
sub
push
jg
push
sbb
add
adc
mov
adc
mov
push
add
add
nop
mov
push
add
subb
or
subb
jae
test
push
cmpsl
lahf
cwtl
push
test
js
aas
or
movsb
push
push
insb
mov
mov
shlb
test
in
cmpsb
mov
xchg
mov
mov
add
jo
fs
mov
jo
daa
inc
mov
add
shlb
out
jge
in
mov
test
in
dec
push
das
sbb
mov
popa
inc
insl
xlat
add
add
mov
pop
or
insl
cmp
mov
adc
add
icebp
mov
inc
sbb
push
gs
dec
pop
aad
sbb
inc
imull
add
inc
pop
ds
add
stc
or
mov
test
add
push
cmp
pop
adc
stos
mov
stos
xchg
pop
sub
cld
imul
sbb
negl
adcl
or
adc
pop
xor
insl
add
in
sbb
stos
sub
test
add
and
fs
sub
in
jp
push
movsb
sbb
mov
mov
popf
repz
xchg
xchg
and
add
add
ljmp
lret
imul
pop
mov
cwtl
loopne
xor
mov
mov
les
popa
cmpsb
sarl
sub
int
push
cmc
sub
add
or
and
add
ret
sbb
push
lock
add
add
out
fucomip
not
xchg
insl
rcll
lahf
push
xchg
xchg
cmp
mov
cmpsl
mov
and
add
test
inc
sub
lea
pushf
gs
push
dec
test
sub
inc
in
jnp
or
mov
mov
sti
cmp
mov
sarb
stos
pop
hlt
adc
jmpw
mov
mov
and
adc
pop
jecxz
xor
or
popa
int3
or
push
lock
dec
enter
jae
nop
dec
imul
test
cld
mov
mov
or
daa
ljmp
mov
cmp
mov
or
arpl
mov
and
dec
mov
sub
fwait
popf
and
mov
sub
dec
jns
xor
push
rolb
mov
lret
stos
jecxz
bound
jno
cli
adc
xchg
arpl
push
dec
pusha
mov
pop
pop
xchg
xchg
loop
aas
cli
dec
mov
dec
call
push
push
push
mov
aaa
and
add
imul
pushf
cmp
mov
mov
movsl
inc
lret
push
stc
decl
loopne
pop
jg
mov
mov
mov
add
dec
push
dec
pop
lods
pop
and
pushw
test
scas
ss
mov
ficomps
xchg
bnd
inc
test
pushf
mov
adc
mulb
xor
push
mov
mov
sbb
adc
cmpsl
popa
inc
mov
mov
mov
pop
out
push
test
add
pop
mov
sti
mov
or
inc
mov
movsl
int
pop
xor
and
add
push
mov
add
inc
mov
jo
mov
or
adc
rorb
fdivrl
inc
mov
and
clc
inc
mov
imul
aaa
rcr
dec
je
pop
pop
push
loop
dec
mov
lahf
mov
test
push
lret
icebp
in
bound
pop
and
shrb
mov
push
jo
test
sbb
pop
imul
loope
adcb
mov
repnz
mov
add
out
mov
mov
push
cli
into
push
push
mov
mov
add
adc
cmc
add
fs
pusha
mov
mov
push
push
pop
outsl
fisttps
xor
testl
inc
ja
roll
adc
stos
mov
shl
dec
mov
xor
xchg
mov
sub
mov
shll
mov
popf
popa
int3
or
add
inc
jg
mov
insb
mov
cld
xor
or
xchg
add
addr16
adcl
dec
mov
or
lcall
stos
outsb
jp
das
test
add
pop
lods
mov
dec
sbb
cmpsb
jns
add
or
gs
loope
test
jbe
mov
add
mov
mov
mov
xor
sahf
pop
xchg
inc
and
jg
and
pop
in
rcl
movsb
dec
les
addl
xchg
push
cmp
nop
push
and
addr16
call
adc
pushl
insl
xor
sbb
jns
push
inc
call
jecxz
and
push
mov
call
ss
ds
mov
lahf
push
push
pop
outsl
iret
inc
cmp
lods
or
adcl
mov
bnd
flds
adc
jg
mov
ret
ds
rolb
testl
addb
addr16
sub
cmp
jns
les
adc
push
sbb
add
hlt
adc
stos
out
int
push
sub
or
movsl
cmp
sbb
repnz
mov
pop
jb
mov
fnstenv
mov
dec
xchg
fs
enter
add
adcl
into
sub
add
in
ss
adc
rcrb
fisttps
cmc
mov
bound
mov
mov
fwait
add
add
cmp
add
fldl
or
popa
pop
mov
add
dec
movb
rcll
push
imul
pop
pop
fcmovnbe
sbb
cs
inc
test
leave
nop
push
or
fiadds
push
cmpsb
inc
jne
jmp
pop
fcom
jmp
adcb
add
ret
jmp
add
jno
mov
mov
mov
jle
mov
or
shlb
stos
push
jg
stos
xor
in
mov
shrb
add
adc
scas
push
loop
icebp
and
orb
adc
add
and
sub
icebp
push
mov
add
inc
mov
xor
or
leave
mov
push
mov
outsl
js
dec
fmul
scas
push
test
add
xchg
xor
sahf
outsl
and
out
cli
dec
sub
add
movsl
out
mov
jns
mov
add
icebp
loopne
stos
sbb
mov
int
adc
add
push
insl
xchg
pop
jnp
and
mov
and
add
and
mov
aam
iret
push
jne
mov
lods
lahf
rcll
mov
lods
mov
xchg
dec
xchg
decb
aad
inc
add
add
test
mov
and
inc
and
mov
mov
stos
pop
aaa
shlb
push
cmp
xor
inc
dec
mov
mov
roll
xchg
pop
cwtl
out
and
add
xchg
dec
add
insb
mov
mov
push
jl
mov
sub
add
inc
mov
push
pop
cli
jmp
add
lea
mov
in
pop
pop
pop
push
stc
imul
add
inc
xlat
cli
pop
negb
pop
imul
aas
cltd
cwtl
jns
imul
aaa
ret
add
daa
sbb
add
add
jns
mov
jl
cmp
jb
les
pop
adc
andb
and
repz
pop
mov
arpl
add
pop
xchg
addl
fs
lcall
add
jp
mov
mov
sub
add
jbe
inc
je
subb
xor
stos
bound
xlat
test
popf
aam
aam
adc
add
xchg
add
imul
add
mov
add
mov
mov
xchg
repnz
cmp
mov
loopne
dec
lods
les
xchg
popa
cmp
int3
popa
xchg
jne
stos
jne
cmpsb
stos
mov
push
push
add
stc
push
inc
mov
js
mov
rcrb
add
adc
add
mov
in
int3
mov
inc
jns
xchg
mulb
stos
std
ret
jbe
sti
sub
add
and
add
sbb
outsl
mov
dec
iret
add
push
jbe
xor
xlat
push
mov
shlb
ss
sbb
pop
faddl
xchg
repz
cmp
mov
rcr
xlat
mov
test
pop
jecxz
jno
int
push
cmp
pop
push
adc
cwtl
push
addl
add
aad
mov
add
rcl
out
std
add
mov
pop
cmp
add
outsl
pop
or
add
imul
out
jmp
xchg
cmp
sub
sbb
xchg
insl
icebp
xchg
mov
pop
and
add
jge
ret
xchg
dec
adc
mov
movsl
or
pop
jle
out
cli
push
xchg
dec
mov
sub
jmp
jp
inc
addb
add
mov
mov
lds
aad
mov
std
testl
inc
std
add
shll
sahf
cs
jo
xor
add
mov
add
aad
or
add
mov
sub
pop
cwtl
jo
shll
add
pop
sub
push
mov
mov
inc
mov
sub
xor
divl
pop
mov
paddusb
imul
sbb
fs
mov
sbb
pushf
and
add
sahf
push
in
stos
les
xchg
hlt
inc
and
out
mov
add
mov
sbb
and
fwait
xor
or
mov
inc
jno
add
in
test
jne
test
add
push
cmp
scas
shlb
mov
ja
repz
inc
mov
adc
out
bound
cli
jne
scas
xchg
jne
stc
mov
dec
add
dec
inc
adc
jne
call
ds
pop
les
or
add
rcl
jl
outsb
pusha
mov
xor
mov
mov
push
fildll
aas
xor
hlt
push
xchg
cs
jg
bound
js
mov
mov
jae
lret
inc
repz
mov
scas
out
arpl
mov
iret
sbb
sbb
add
daa
mov
add
add
push
pop
push
ret
scas
xor
or
add
mov
add
jns
jg
mov
or
lcall
jmp
imul
dec
mov
mov
xchg
adc
test
lock
add
div
or
nop
ret
and
stos
loope
add
int
cmp
in
stos
test
add
push
adc
xor
loope
inc
mov
inc
mov
pop
mov
push
xchg
fnstenv
inc
xorb
add
sbb
add
lea
adc
add
cmp
addr16
xlat
andl
adc
pop
add
add
cmpsb
cmp
add
and
int3
sbb
and
add
es
pop
push
cmp
cmp
fidivrs
push
pop
daa
cwtl
mov
js
cmp
or
adc
pop
inc
push
jb
outsb
mov
push
cmpsb
fsubr
add
add
mov
pop
mov
out
movsl
xor
int3
div
mov
js
in
pusha
mov
cmpsb
pop
mov
mov
mov
mov
inc
mov
add
mov
mov
inc
xor
mov
push
or
mov
lock
mov
sub
xchg
add
add
dec
mov
cmp
sbbb
es
adc
xor
or
mov
sub
loope
testb
es
xor
popf
adc
repnz
popa
sbb
mov
subps
popa
or
hlt
mov
jle
fcomps
mov
addr16
addr16
pop
test
cmpsb
cmp
add
mov
xchg
insl
fwait
sbb
jb
mov
push
and
mov
add
lret
mov
xchg
push
imul
mov
addr16
push
inc
sbb
pop
push
sub
mov
loope
lahf
aam
test
cwtl
adc
add
cmp
pop
adc
pop
dec
mov
shr
inc
mov
add
push
push
pop
ficompl
loop
inc
mov
lea
mov
add
add
rcrl
inc
mov
and
cltd
inc
mov
sub
xchg
pusha
mov
xchg
scas
leave
call
sub
insl
dec
sub
add
arpl
add
push
fdivs
movsl
in
dec
mov
cmp
cmp
mov
add
adc
lds
push
cmp
out
int3
cmp
mov
jnp
lock
mov
inc
mov
add
mov
mov
rclb
sub
add
mov
dec
lods
sub
add
xchg
outsb
popa
mov
mov
dec
mov
sbb
mov
hlt
stc
mov
shr
mov
mov
or
add
or
adc
pop
xlat
mov
iret
pop
push
mov
add
lar
je
test
lods
bound
add
add
and
fldcw
sub
and
add
das
lahf
pop
and
add
aad
stc
hlt
push
pop
jns
loopne
and
pop
mov
sbb
mov
cltd
push
dec
cmovo
cmp
add
sub
add
mov
js
jl
xor
pop
inc
repz
mov
mov
cs
pop
sbb
cmpl
stc
mov
lahf
lahf
lea
push
lods
jle
cmpsl
orl
mov
pop
jp
xchg
jno
mov
in
mov
adc
call
aaa
adc
sub
sub
rcrb
out
test
cmp
and
addr16
mov
roll
test
iret
ljmp
imul
add
add
mov
xchg
lret
call
mov
mov
xchg
adc
mov
mov
pop
pop
rorb
cmp
lcall
mov
ss
push
or
add
shll
and
mov
pop
inc
mov
xchg
push
mov
stos
mov
sbb
sbb
out
xchg
add
mov
in
ss
pop
psubd
dec
pop
das
push
mov
xchg
cmp
mov
out
pusha
mov
pop
mov
add
mov
popf
bound
insl
or
xchg
divl
jns
push
mov
lds
iret
nop
or
mov
add
dec
mov
xchg
push
sub
adc
adc
iret
jne
test
cmp
dec
jmp
fbld
out
add
add
push
arpl
jnp
jb
adc
jns,pt
adc
add
fs
xor
sarb
mov
jns
loopne
add
lods
test
ljmp
jg
jle
jmp
mov
pop
or
add
fimuls
add
pop
cmp
movsl
popf
jne
mov
in
adc
inc
int
sub
mov
adcb
test
out
movsb
sbb
jmp
subb
dec
cmp
pop
xor
push
movsb
sub
mov
and
fcmovb
add
sbb
pop
sbb
mov
xor
ret
inc
mov
and
popa
cmp
test
push
mov
inc
gs
or
leave
in
adcl
push
pop
or
dec
into
xchg
push
mov
stos
inc
mov
xchg
sarb
and
cmp
jnp
add
mov
movsb
pop
fwait
xor
xlat
inc
mov
xor
mov
add
xchg
sbb
stc
lds
add
xchg
or
add
add
push
sbb
stc
sbb
outsl
mov
mov
fistpll
mov
mov
aam
xor
stos
outsl
inc
cmp
add
sar
jle
sub
push
rorl
add
jmp
pop
push
das
out
mov
mov
stos
jns
dec
mov
mov
sbb
std
pop
out
fstpt
clc
cld
cwtl
sbb
fwait
or
ret
push
out
xor
dec
mov
push
daa
fcoml
push
add
xchg
pushf
push
sbb
aad
xor
xchg
xchg
sbb
pop
jmp
ja
xchg
xor
push
in
mov
rcll
add
loope
xchg
leave
cmc
rcr
insb
mov
push
loope
cwtl
loop
aam
pop
int3
ret
int
ds
aas
pop
inc
out
xchg
pop
cmp
iret
rclb
mov
cltd
outsb
add
data16
add
imulb
sbb
pop
pop
movsl
lahf
inc
cmp
shlb
cmp
test
xor
addr16
nop
in
dec
mov
loope
inc
mov
out
mov
sub
nop
sub
aam
cli
outsl
jmp
mov
xor
lret
mov
add
jge
and
add
pop
dec
xor
js
scas
mov
or
mov
subb
add
jns
scas
ja
inc
mov
cmpsl
sbb
cmp
jne
pop
inc
xchg
cvtdq2ps
inc
iret
adc
mov
pop
inc
jbe
in
sbb
sub
add
iret
pop
test
scas
pop
adc
outsl
push
mov
pop
je
stos
nop
roll
add
pop
or
std
stos
and
out
faddl
sahf
arpl
icebp
bound
adc
int
push
mov
ja
adc
shrl
add
rorb
mov
data16
shll
add
jbe
pop
xor
inc
pop
push
jns
test
pop
loop
xchg
cld
ss
mov
scas
fnstenv
inc
cwtl
push
loopne
push
test
and
add
insl
sbb
mov
jl
jmp
lock
or
mov
jne
cmp
faddp
push
sbb
pop
cwtl
jnp
sbbb
imull
jecxz
cmp
mov
arpl
enter
mov
jmp
bnd
pop
inc
cltd
xor
cmc
shl
pop
jl
or
cwtl
adc
xor
imul
pushf
cli
mov
cmp
sub
add
or
notl
jl
lods
xor
and
add
fdivs
sub
add
fisttpll
movsb
dec
add
push
inc
mov
adc
je
push
mov
aaa
push
je
xchg
sub
out
and
add
mov
int3
jge
jno
pop
aaa
leave
call
pop
or
xor
mov
out
push
or
xchg
jle
mov
mov
add
inc
mov
xor
push
lods
inc
inc
cmp
enter
insb
mov
mov
in
daa
jns
fwait
sbb
pop
dec
or
jnp
mov
mov
mov
add
nop
pop
imul
or
add
cmp
mov
fs
lods
inc
mov
clc
mov
fwait
mov
or
cmpsb
cmp
mov
dec
mov
repnz
mov
mov
xchg
or
inc
insb
mov
add
inc
jge
cmc
xlat
loope
daa
dec
mov
call
in
adc
mov
enter
icebp
mov
add
js
out
xor
fistps
subb
jp
push
push
aam
xchg
aam
pop
sbb
push
aad
pop
movsb
mov
fdivs
sub
mov
and
inc
add
xchg
lea
add
mov
lods
in
std
lret
jns
outsb
in
repz
popa
pop
sub
dec
mov
pop
inc
sbb
sbb
jb
cmp
pop
das
icebp
inc
inc
push
inc
mov
and
rorl
push
pop
and
dec
int3
testb
dec
aaa
enter
hlt
and
aad
cmp
cmp
dec
jl
mov
mov
inc
sbb
pop
test
sahf
push
dec
popl
arpl
cmp
push
insb
mov
pop
daa
pop
and
add
mov
add
dec
pop
notb
mov
loop
xchg
movsl
fs
push
mov
cmp
loopne
mov
in
push
xchg
out
cmp
add
push
mov
add
fildll
or
push
adc
imul
sub
fbld
sbb
mov
loopne,pn
insl
icebp
je
push
sbb
sbb
pop
clc
stc
pop
fs
jns
insb
mov
clc
int3
mov
xchg
imul
mov
js
pop
sub
add
int
das
push
repnz
and
fdivrl
push
lret
lock
push
jmp
push
jle
sbb
adc
jle
and
add
pushf
pop
in
aaa
fidivl
cli
or
add
and
add
add
jne
mov
inc
aas
bound
imul
sub
insl
mov
cmp
and
push
dec
mov
jmp
jmp
test
or
add
mov
enter
and
pop
ffree
pop
xchg
inc
xchg
sub
imul
shl
or
add
push
xchg
cmp
xchg
pop
and
add
stc
lods
dec
xchg
scas
aaa
mov
popa
add
xchg
in
arpl
pop
rol
mov
addl
cmovp
jno
fwait
push
cmp
mov
dec
in
ds
push
mov
sbb
pop
popf
out
xchg
xor
icebp
cmp
add
stc
jo
push
add
add
pop
xchg
mov
ret
xor
add
jne
adc
add
insb
mov
push
xlat
mov
popa
mov
pop
xchg
xchg
and
add
mov
sub
and
add
cmp
pop
and
add
test
loopne
pop
mov
scas
mov
enter
lock
adc
mov
adcl
mov
outsb
mov
popf
fcomp
sub
in
movsl
cli
mov
mov
sbb
mov
jns
pop
jecxz
imul
sti
jp
in
mov
add
in
or
add
sbb
mov
loope
cmc
dec
xchg
inc
mov
or
mov
inc
mov
mov
jecxz
mov
outsb
rcr
mov
into
cmp
jg
jbe
push
aaa
in
sbb
xchg
push
push
push
xor
add
push
or
inc
mov
sub
push
test
add
add
jbe
cmpsl
lds
inc
or
les
nop
addr16
inc
lds
dec
jg
scas
cmp
pop
rdtsc
xchg
or
repnz
scas
xchg
pslld
add
or
scas
or
ljmp
ret
int
fimull
add
pushf
push
ror
lods
shll
push
aam
shrl
adc
mov
dec
mov
xor
add
cmp
push
jne
popf
movl
add
jo
pop
sbb
mov
mov
cmpl
add
fwait
imul
cmp
mov
xchg
js
ja
lret
movsl
push
or
mov
out
jae
sti
ss
cmp
fdivs
inc
outsb
push
jle
mov
jne
dec
and
cmp
push
dec
lods
iret
sub
aas
insb
mov
add
add
push
jb
loopne
enter
insb
mov
dec
shll
add
in
sub
add
pop
pop
or
add
fsubs
int
cmp
mov
dec
mov
dec
mov
or
movsl
outsl
in
cmp
repz
sahf
sub
enter
imul
pusha
mov
data16
xor
pushf
fcmovb
and
add
iret
popa
add
addr16
xchg
cmp
int
inc
mov
shlb
adc
adc
dec
mov
mov
jae
rep
fsubl
test
ja
stos
and
add
dec
loopne
out
mov
test
dec
push
lock
decl
mov
xorps
adc
sub
sbb
push
dec
jge
movsl
leave
adc
hlt
or
jbe
iret
mov
enter
mov
mov
sub
add
shrb
pop
add
add
fcoml
add
sub
add
movsb
pop
pop
jge
mov
add
xchg
shlb
mov
cmp
xchg
pop
icebp
xor
shrl
insl
data16
mov
fstps
dec
jne
lods
and
add
inc
cli
inc
mov
cmp
pop
test
add
jb
or
mov
std
movsl
leave
lds
loope
jne
dec
jp
mov
enter
add
lret
outsl
xchg
push
or
add
loopne
dec
jecxz
out
out
push
xor
dec
mov
add
push
pusha
mov
daa
mov
fnsave
add
orb
inc
adc
push
dec
xchg
pop
xchg
rcl
ja
sahf
pop
andl
sahf
sbbl
sbb
mov
and
sarl
add
sub
add
xor
mov
adc
sarl
jge
or
popf
cmpsl
cmp
sahf
cmpb
xor
aam
or
in
inc
mov
pop
js
mov
in
sbb
iret
adc
xor
and
add
mov
add
popa
lock
repz
inc
mov
shrd
xlat
pop
fadd
push
ljmp
mov
fdivrl
and
jno
mov
cmp
ret
and
dec
mov
mov
push
mov
push
pop
or
xchg
mov
js
inc
add
xchg
mov
dec
fs
mov
pop
jl
and
daa
pop
sbb
xchg
or
add
xchg
test
mov
add
sbb
dec
mov
cmp
mov
dec
in
pop
imul
mov
fs
dec
mov
movsb
shlb
cwtl
fiaddl
add
mov
cmp
dec
lahf
scas
and
mov
mov
sbb
call
mov
add
xchg
push
aaa
add
add
stos
inc
loope
das
inc
mov
mov
nop
dec
xchg
jb
mov
cs
repz
add
sub
pop
sti
sbb
scas
xor
out
int
mov
add
mov
sti
mov
add
push
add
add
in
jmp
sub
fs
mov
mov
in
mov
add
pop
aas
stos
mov
add
test
ret
jo
xor
in
pushf
mov
pop
les
mov
lea
gs
sub
nop
xchg
sbb
cmpsl
pop
test
lcall
push
ret
xor
mov
xchg
pop
movsb
inc
test
mov
sahf
sub
add
test
mov
jl
negb
mov
mov
mov
adc
mov
mov
les
sti
or
add
add
push
insb
mov
sahf
xchg
xor
add
movsb
sbb
mov
loopne
mov
mov
test
bnd
stos
negl
rcrb
add
jnp
fdivrl
pop
pop
jo
xor
mov
cmp
call
cld
pop
fidivl
ljmp
cmpsl
adc
sub
add
mov
aam
ds
mov
scas
fimuls
xchg
loop
and
js
das
shll
lret
push
pushf
data16
mov
mov
inc
pushl
xor
fbld
mov
lret
fxch
out
mov
mov
add
adc
out
xchg
add
xchg
cmpsb
push
push
sbb
vmovdqu
das
sahf
push
mov
bound
mov
cli
pop
cmpl
daa
test
hlt
sti
add
test
rolb
add
xor
in
mov
and
mov
sbb
mov
sbb
xchg
icebp
push
inc
lahf
ss
rcr
sub
lea
xchg
lret
and
mov
add
jmp
orb
fcomps
mov
std
pop
push
and
mov
add
cmp
jge
pop
dec
xchg
adc
nopl
into
test
xor
pop
sbb
call
inc
mov
push
mov
mov
xchg
and
lea
sbb
iret
mov
pop
or
add
push
rcr
adc
pop
cmpb
or
shl
or
add
imul
xor
add
mov
sub
ja
shll
lock
fistl
cmp
mov
adc
sbb
cmp
mov
push
pusha
mov
adc
push
mov
fmuls
push
adc
je
add
cwtl
repnz
ficoml
movsb
scas
add
adc
and
loope
mov
mov
inc
jl
mov
andb
add
mov
popf
xchg
push
or
jge
mov
add
cmpb
mov
mov
repnz
add
popa
inc
iret
or
add
or
mov
jmp
inc
or
xchg
insb
mov
mov
mov
sbb
cmp
lock
jns
cli
arpl
add
or
fs
push
pop
adc
jbe
leave
dec
xchg
jne
and
mov
add
xchg
test
popa
divl
jbe
fwait
movsl
in
lods
mov
dec
mov
mov
xor
sahf
pop
mov
aam
outsb
test
mov
idivl
xchg
jge
add
std
jle
aaa
cmpsl
and
inc
mov
sti
lcall
cwtl
push
sub
push
push
inc
add
add
inc
imul
adc
bound
mov
mov
push
cli
xadd
push
xor
out
lcall
pop
push
inc
sub
add
clc
jmp
add
sahf
in
pop
imul
out
fcomip
jo
add
or
loopne
cmp
cmpl
mov
in
shlb
mov
cltd
stos
lods
or
dec
cwtl
outsb
push
scas
push
inc
sub
adcl
add
sti
sub
inc
les
cmp
cltd
mov
das
or
jnp
mov
add
ja
dec
mov
ficoms
xchg
sbbl
cwtl
xchg
leave
fs
sub
es
add
cs
add
push
xchg
add
enter
mov
adcb
decl
mov
cmp
sbb
scas
loopne
into
jbe
notb
mov
or
frstor
lea
xchg
stc
or
and
add
sub
inc
xor
mov
mov
dec
mov
dec
movsl
sbb
pop
inc
add
add
test
add
or
dec
notl
test
shll
sbb
inc
mov
or
aas
insl
sub
and
dec
adc
push
push
inc
mov
sti
lret
mov
into
sub
loopne
dec
dec
adc
xor
dec
cld
lret
mov
clc
dec
sub
jg
or
jno
and
add
jo
jo
push
push
imul
in
test
dec
js
and
fwait
in
pop
fbld
aas
sub
sub
ss
jns
mov
fwait
scas
dec
mov
jge
mov
movsl
dec
rcrb
mov
adc
add
push
pop
fiaddl
cmp
shlb
adc
dec
lcall
pop
dec
sti
rcr
pop
mov
dec
sbbb
fstps
fs
sub
rorl
outsb
mov
rclb
test
mov
fdivl
xor
and
inc
mov
or
je
or
add
jns
movsb
pop
xor
push
aas
sbb
fadd
cmp
add
cs
add
mov
push
xchg
or
xor
ja
adc
bound
mov
enter
add
xchg
popf
dec
pop
pop
das
ds
out
roll
dec
mov
add
cmp
jo
mov
es
fsubl
ss
xchg
lcall
adcb
adc
cmp
test
add
arpl
xchg
jnp
sahf
les
mov
aas
inc
mov
mov
push
loop
sti
jl
test
sbb
mov
push
add
add
dec
jge
icebp
mov
pop
fdiv
jmp
jae
shrl
xor
jg
ds
jmp
mov
mov
jp
movsb
or
mov
push
negl
jp
mov
jp
mov
ds
mov
mov
add
ds
cmc
push
inc
loope
mov
add
aad
iret
lea
add
lock
ret
pop
jle
dec
pop
and
insl
scas
shlb
and
add
mov
int3
xchg
shrl
add
xor
sbb
cmpsl
loopne
jp
dec
sti
mov
mov
jmp
mov
xchg
xor
jmp
mov
add
dec
rcll
mov
add
add
clc
aad
aas
dec
xchg
cmp
xchg
mov
sbb
movsl
iret
mov
popf
ja
imul
add
dec
test
pop
mov
inc
add
pop
fsubrs
mov
add
inc
jb
cltd
sub
push
ficoms
scas
andb
mov
push
mov
sti
dec
mov
sbb
insb
mov
cmc
notb
arpl
and
imul
push
nop
mov
mov
xchg
addr16
cli
cmc
or
dec
pushf
sub
jmp
dec
jo
mov
mov
mov
jb
int
std
inc
mov
jmp
sub
mov
mov
add
add
add
imul
add
push
push
jne
cmc
jg
push
push
andb
dec
mov
das
clc
lret
cli
dec
or
add
fwait
je
pop
mov
mov
test
xchg
je
inc
icebp
nop
inc
push
pop
cmpsl
daa
out
sub
add
jmp
add
add
pop
fwait
int3
dec
leave
arpl
pop
call
pop
sub
jp
jge,pt
jg
lcall
gs
mov
push
sub
mov
stos
test
or
jle
mov
fnstenv
inc
das
push
adc
cmpsl
popf
in
mov
int
pusha
mov
test
mov
stos
lret
popa
dec
daa
or
scas
fnstenv
mov
dec
mov
sbb
mov
fwait
je
xchg
pop
dec
mov
test
pop
jl
int3
add
lret
fstl
add
fistl
pop
mov
add
mov
mov
or
add
jb
and
mov
jg
mov
inc
xlat
ret
mov
add
and
add
and
fimuls
xchg
fadds
pushw
out
subb
mov
add
cmp
xor
push
sbb
add
jecxz
and
or
add
push
notl
cmp
push
mov
adc
mov
mov
cs
addr16
mov
test
jne
cwtl
sbb
add
lods
lods
rcrb
sub
inc
mov
dec
mov
movsb
xchg
cmc
aas
pop
mov
jo
add
add
dec
cmc
or
testb
dec
leave
and
add
call
rclb
lock
mov
dec
divb
push
mov
imul
mov
mov
add
lea
mov
and
add
xor
jp
sbb
push
jle
jnp
mov
movsl
clc
roll
lret
movsb
push
dec
in
mov
jle
cs
in
push
mov
mov
out
mov
negb
inc
mov
dec
mov
cmc
divl
xorb
fisttpl
xor
sbb
and
add
nop
je
mov
roll
add
sub
mov
and
jnp
cmp
and
idivb
gs
add
int3
and
mov
addb
nop
mov
sub
xor
or
fdivl
das
std
pop
inc
push
mov
inc
xchg
enter
testl
mov
sahf
jbe
sub
add
aam
push
cmc
inc
mov
inc
dec
adc
cwtl
test
xchg
popf
nop
cmp
testl
push
fsubrl
nop
jb
and
pop
iret
fldlg2
stos
lcall
aaa
cmpsl
adc
in
push
or
mov
adc
xchg
jg
je
pop
out
loopne
hlt
pushl
pop
mov
pop
mov
cli
lods
mov
dec
aas
rcr
add
add
mov
push
call
mov
inc
and
add
scas
push
dec
ljmp
push
arpl
adc
mov
test
ss
cmpsb
pop
cmpsl
mov
call
mov
lea
add
aad
ds
adc
add
icebp
inc
mov
adc
out
mov
dec
sub
lahf
cwtl
add
xchg
into
mov
mov
mov
add
pop
loopne
xchg
dec
movsl
test
pop
and
add
mov
pop
push
jmp
xlat
push
jno
sbb
cmp
fsubl
mov
xor
sti
xor
push
or
inc
movl
scas
sahf
sub
push
inc
pop
push
das
in
repz
mov
pop
xchg
pusha
mov
sbb
add
and
add
jmp
push
test
or
mov
je
cmc
inc
fisubl
adc
mov
aam
xchg
je
mov
hlt
pop
jg
dec
mov
mov
push
ret
scas
push
scas
push
jp
addl
and
xchg
jp
mov
lret
pop
enter
sub
in
mov
lret
xlat
cwtl
mov
inc
cmp
enter
jne
cmp
dec
idivl
adc
inc
xor
add
cmp
mov
cmc
xchg
mov
aaa
dec
xor
add
push
xchg
xor
je
dec
sub
fs
push
pop
jns
hlt
imul
std
inc
xor
pop
mov
add
push
std
cmp
jle
and
jecxz
test
ret
push
push
push
cwtl
pop
cmp
js
mov
orb
mov
je
ret
mov
or
pop
stos
cmp
jp
fdivrs
bnd
or
rorl
add
repz
popf
mov
xchg
adc
and
xor
add
add
mov
cmovb
pushf
pop
movsb
js
mov
repz
fistpl
lret
sbb
mov
mov
sbb
cmp
mov
mov
push
or
mov
jns
ss
adc
xchg
add
xor
add
ficoms
sub
out
xchg
and
add
sti
loop
test
dec
jmp
xor
rcll
divl
in
ret
pop
jg
adc
addr16
cmc
enter
lahf
iret
cltd
pop
inc
mov
push
movsb
addr16
nop
mov
add
sub
mov
sub
pusha
mov
iret
mov
adc
cmp
outsl
icebp
rorb
ja
dec
xchg
mov
mov
dec
xor
pop
xor
loopne
pop
and
push
sahf
cmp
in
jbe
test
xor
mov
cwtl
mov
lret
mov
daa
cltd
aam
mov
xchg
sub
mov
or
add
out
je
and
add
int3
pop
mov
add
cmc
xor
les
and
idivb
ret
mov
orb
cld
lea
lods
jecxz
adc
push
ja
ret
imul
or
add
cmc
arpl
mov
pop
add
inc
out
xchg
pop
or
cmp
leave
scas
dec
out
and
sbb
add
inc
mov
mov
add
push
sti
leave
push
jae
sbb
push
sysenter
sub
add
test
sub
jmp
call
fs
pop
push
jnp
pop
xchg
jmp
xor
xchg
inc
imul
fldl
add
add
cwtl
das
sbb
xor
sub
fisubrs
mov
ret
xchg
push
push
outsb
gs
ss
push
push
mov
pop
xor
mov
mov
cli
jno
mov
xor
jbe
repnz
faddp
mov
mov
mov
test
icebp
test
mov
or
mov
cmp
or
add
inc
cs
add
stos
divb
cmp
mov
adc
add
add
movsb
cmc
and
rorl
add
mov
mov
inc
mov
xchg
jae
mov
mov
mov
fdivs
jmp
sbb
lea
pop
or
jecxz
xchg
addr16
les
mov
fucomi
push
mov
sub
add
inc
fst
mov
nop
or
add
or
add
add
sub
dec
nop
ds
cmp
out
into
add
add
ficoml
xlat
xchg
cmp
sbbb
or
mov
hlt
jge
cmpb
pop
xlat
mov
cmpsb
xor
sub
add
sub
add
out
fadds
adc
add
add
data16
mov
cld
mov
dec
flds
add
pushf
push
popa
and
add
cmp
mov
pop
push
pop
loopnew
pusha
mov
lret
test
add
nop
jp
push
sti
outsl
dec
mov
pop
add
adc
fldz
or
sbb
mov
push
pop
adc
mov
push
push
pop
in
mov
adc
push
jno
jnp
inc
adc
inc
mov
push
adc
inc
mov
add
gs
sub
add
aad
rorl
xchg
push
mov
mov
bnd
pushf
pop
pop
sub
int3
dec
mov
enter
add
clc
push
jp
inc
mov
jmp
push
push
xchg
dec
rcpps
dec
mov
repnz
add
mov
mov
jo
jge
jnp
movb
out
movsb
shlb
fwait
jo
ja
pop
cld
push
shrl
push
jg
push
inc
mov
aaa
pop
mov
out
popa
test
xchg
fldcw
loopne
mov
pop
test
mov
add
in
inc
lahf
xchg
mov
pop
loop
mov
jge
ret
test
and
add
or
add
stos
cmpsl
lret
jecxz
dec
push
push
pop
sbb
pusha
mov
das
push
jge
mov
and
mov
adcl
loopne
inc
mov
jbe
cmp
or
lahf
add
mov
xor
pop
push
jnp
jp
sub
jl
les
fcomi
ljmp
pop
sbb
mov
shlb
stos
das
adc
mov
mov
mov
or
and
leave
movl
ja
push
push
pop
inc
jmp
add
lds
add
inc
mov
push
mov
and
add
cmp
addr16
dec
xchg
out
sub
ja
js
ds
lods
loope
mov
lret
cmp
cmp
dec
mov
add
add
out
into
leave
sub
into
add
sub
dec
push
fs
push
sarb
sbb
pop
lret
lock
push
movsb
adc
add
or
add
scas
xor
in
pop
mov
mov
mull
mov
lods
rol
jecxz
and
add
pop
xor
push
jbe
ret
mov
inc
mov
or
add
rolb
add
adc
mov
inc
mov
sub
into
fcmovne
scas
stos
das
lds
dec
xchg
js
pop
mov
add
mov
pop
outsl
mov
rol
sbb
daa
cltd
jnp
ja
cli
aaa
in
adc
xchg
adc
xchg
adc
add
mov
add
adc
add
pop
push
cmp
shll
mov
test
sbb
dec
in
inc
xor
outsb
inc
inc
iret
mov
sub
loop
notl
jnp
sbb
jg
dec
mov
jns
lcall
mov
add
xchg
mov
subl
lods
mov
add
ja
jb
sub
push
lret
movsb
sbb
stos
adc
imul
test
or
add
sub
and
aam
dec
mov
xor
mov
and
sarb
adc
add
cld
sahf
std
lret
inc
mov
add
std
popf
imul
scas
test
mov
hlt
xor
lods
rcl
mov
add
add
mov
ret
inc
jmp
lods
adc
inc
dec
lret
repnz
enter
into
test
mov
or
sbb
call
pop
fstps
pop
sti
inc
and
faddl
push
repz
mov
add
rcrb
add
inc
fdivl
pop
rcl
iret
lahf
movsl
ss
mov
or
add
cwtl
pop
push
or
jmp
and
jecxz
mov
outsb
mov
add
xchg
and
jge
out
scas
add
add
push
bound
add
shrb
xchg
fcompl
les
mov
fsts
lods
fisttpll
push
or
enter
cmp
test
mov
out
hlt
pop
push
les
mov
push
adc
add
add
jno
dec
mov
add
or
inc
call
xchg
pushf
sti
inc
jle
stos
das
mov
scas
mov
je
cwtl
sub
add
nop
cli
mov
jl
outsl
sub
lret
adc
add
or
jbe
outsb
hlt
push
xor
push
sarl
inc
mov
outsl
arpl
std
push
pop
mov
cwtl
std
loopne
cld
repnz
repz
jbe
enter
mov
add
add
int
cmp
and
cltd
push
and
jp
xchg
lock
jns
add
add
adc
lcall
add
inc
mov
push
pop
je
cwtl
mov
ret
sub
add
jl
pushf
pop
cli
inc
movsb
pusha
mov
mov
sub
dec
mov
repz
shll
jo
mov
insb
mov
lfs
add
loop
jp
int
jp
mov
cltd
daa
mov
xchg
mov
sbb
stc
pop
sub
mov
ret
pop
repz
cmp
cmp
add
icebp
dec
add
ja
jmp
add
add
mov
adc
hlt
push
xchg
pop
dec
cmp
pop
push
cltd
jge
cmp
aas
sbb
cmpsb
inc
inc
into
push
repz
push
cmpsb
mov
add
clc
ret
mov
sbb
inc
sbb
sahf
fs
jno
scas
inc
add
int3
cmp
andl
push
je
int
leave
bound
mov
mov
loop
push
adc
add
mov
dec
push
pusha
mov
cmpsb
push
mov
loope
or
aas
xchg
cmp
dec
sub
js
mov
push
leave
loop
push
or
lret
lods
in
and
incb
shlb
add
dec
mov
xchg
dec
push
jns
test
iret
cmp
lea
sbb
jecxz
lret
inc
mov
pop
xor
cltd
fstpt
loopew
repnz
icebp
inc
or
pop
frstor
adcb
add
lahf
mov
or
add
add
add
pop
adc
cmp
add
and
movsb
clc
lds
mov
in
mov
inc
mov
adcb
sahf
jmp
sub
add
push
mov
imul
test
in
jg
shrb
mov
mov
int3
stos
sti
sbb
mov
pop
pop
and
xchg
fmul
mov
icebp
movsb
mov
imul
adc
mov
xor
int3
mov
cld
xchg
btc
add
xchg
mov
xchg
sti
mov
cmp
mov
mov
pop
dec
xchg
and
hlt
mov
mov
add
shl
add
sub
add
fiaddl
mov
fwait
les
mov
addl
mov
icebp
sub
pop
ljmp
into
fs
mov
jne
pop
and
add
int3
jmp
mov
orl
mov
clc
mov
xor
mov
or
mov
adc
mov
mov
inc
out
inc
sub
addl
jp
mov
test
in
repz
jp
inc
repz
pop
add
sub
and
loope
insb
mov
les
sub
mov
movsl
add
jnp
popa
mov
adcb
xor
ja
outsb
stos
ljmp
mov
sub
mov
add
pop
icebp
lahf
test
push
paddd
jne
dec
push
sti
or
repz
mov
aaa
clc
fisubl
add
jbe
rcll
xchg
fucomi
or
les
add
fiadds
push
adc
scas
xor
addl
loop
push
sbb
add
push
int3
mov
fadd
test
pushf
shr
adc
xchg
adc
dec
xchg
mov
fs
adc
jecxz
mov
das
imul
sbbb
add
mov
ss
adc
fstps
fdivrp
or
negb
cwtl
test
lcall
cmp
cmp
mov
insl
and
add
mov
mov
inc
mov
cmovle
mov
add
mov
mov
mov
mov
repz
ret
mov
mov
ror
lahf
pop
xorb
add
mov
popa
pop
mov
pop
lea
lods
ret
cli
mov
sbb
add
add
mov
orb
inc
mov
fidivl
sbb
ds
stc
sub
xchg
clc
pop
pop
test
aam
scas
in
call
pop
je
jge
push
cs
add
or
inc
aam
mov
mov
jg
cmp
mov
jno
aaa
div
lret
out
out
rcpps
add
add
ljmp
mov
sbb
enter
in
inc
fs
aad
xlat
push
orl
add
inc
mov
ret
in
cwtl
sbb
fwait
push
cmp
fildll
add
mov
stc
pushf
call
insb
mov
jo
dec
stc
or
add
pushf
sbbb
pop
mov
negb
xor
jmp
mov
xchg
insb
mov
xor
or
jo
mov
clc
add
rorl
add
loopne
fdivs
movsl
sarb
cmpsl
jp
mov
jae
arpl
dec
xor
aaa
pop
adc
inc
mov
ret
sub
sub
testb
insb
mov
sbb
inc
fbstp
push
inc
mov
rorl
sbb
adc
movsl
dec
movsb
in
pop
sub
retw
pop
std
test
lods
mov
cltd
and
popf
lods
fnstcw
mov
add
mov
sbb
and
adc
shr
enter
jmp
inc
bound
adc
lock
push
fs
pop
adc
leave
sbb
std
gs
mulps
adc
sti
xchg
xchg
pop
loope
mov
addl
mov
mov
push
test
out
pop
sti
mov
sub
addr16
les
add
dec
jb
addb
inc
inc
test
add
fidivrs
jns
pop
or
lods
cmpsl
roll
xchg
mov
out
sbb
lds
jae
outsb
push
dec
js
inc
jns
imul
add
iret
xchg
mov
icebp
adc
push
fcomi
je
adc
test
lahf
stos
jnp
mov
out
and
add
popa
mov
jne
mov
fists
add
clc
loop
rcl
mov
add
idivb
mov
add
ljmp
aas
outsb
pop
imul
insl
fs
xchg
in
rcr
push
lods
jecxz
cmc
faddl
sbb
add
pusha
mov
mov
mov
call
cmp
in
and
add
sbb
test
stos
cltd
shrb
out
jnp
xchg
xchg
ds
lea
in
mov
or
andl
inc
xor
push
jle
pop
call
ret
cmp
mov
xchg
dec
mov
sbb
scas
gs
dec
fwait
mov
repz
into
mov
cmp
jg
mov
cmpsb
cmp
inc
mov
jp
inc
icebp
call
mov
rorb
add
mov
mov
add
lds
movsb
push
inc
mov
icebp
dec
mov
push
xchg
ret
add
xor
andl
mov
outsl
cwtl
xchg
dec
gs
outsb
mov
mov
gs
add
jo
cltd
aaa
movntps
jmp
mov
push
adc
or
sbb
clc
cmpsb
adc
add
inc
mov
mov
add
imul
add
inc
cld
cmp
nop
sti
lea
add
and
or
cli
add
in
ss
mov
int
or
add
jg
insl
jl
push
sahf
bnd
push
stos
xchg
bound
js
cwtl
jne
jae
iret
lods
sub
dec
xchg
das
imul
add
mov
pop
mov
adc
pop
mov
cld
push
adc
xor
adc
lock
test
rclb
jg
scas
inc
ficomps
es
rcrl
add
and
mov
cltd
rclb
mov
push
leave
sbb
push
add
insl
es
ds
mov
xchg
mov
xor
xorb
call
ret
outsl
mov
push
dec
jl
cmp
pop
out
and
add
pop
cld
wbinvd
cmpsl
mov
add
out
xchg
sbb
add
cmpsl
or
insl
call
add
mov
mov
add
xchg
fucomip
xchg
push
cmp
adc
testl
push
dec
mov
push
mov
push
cmpsl
ret
imul
call
mov
add
xchg
in
int
imul
insl
sub
mov
cmp
pop
mov
and
add
and
jle
out
mov
sub
insl
call
mov
aad
mov
je
mov
sub
dec
icebp
enter
mov
mov
lahf
enter
add
loop
lret
jae
mov
ss
out
popf
sub
pop
adc
mov
xchg
addr16
push
push
arpl
sbb
jge
push
mov
imul
cmp
ds
shlb
jp
lcall
mov
sbb
or
xadd
mov
mov
out
orb
ret
hlt
push
add
inc
icebp
jne
push
out
pusha
mov
imul
pusha
mov
add
jecxz
jae
mov
xor
mov
dec
mov
add
sbb
mov
mov
test
fnstcw
xchg
push
and
cmp
add
rcl
sbb
out
push
push
sbb
loope
sbb
sbb
std
dec
or
add
cmpb
mov
mov
mov
mov
add
push
insb
mov
mov
mov
add
pop
cmp
pop
es
je
test
and
cmp
xchg
adc
and
or
cmp
gs
inc
mov
mov
sub
cmp
stos
sbb
shll
arpl
negb
jns
movsb
dec
sbb
pop
roll
shlb
xchg
pop
out
mov
or
add
sbb
ret
sub
or
jecxz
lock
shll
add
add
add
push
ret
mov
mov
aad
out
sub
pop
push
cmc
and
outsb
fnsave
out
lds
ret
inc
mov
pop
ret
inc
sub
xchg
and
jecxz
push
sarb
push
jae
fsub
cltd
movsl
pop
mov
fs
add
push
jo
xchg
xor
cmp
or
add
jmp
xchg
jne
jae
out
dec
fs
and
add
adc
out
ljmp
mov
mov
enter
add
cmc
sbb
lret
xor
or
or
fnstsw
xor
inc
mov
xor
jno
xor
js
mov
iret
aam
shlb
mov
push
fs
dec
dec
mov
pop
cmp
add
cmp
add
add
lods
lss
gs
rorl
mov
test
adcl
mov
cmpsl
test
push
into
xor
add
sub
inc
sbb
jge
pop
negl
cmp
and
out
mov
xor
sub
jb
jo
pop
mov
pop
xor
xlat
movb
push
or
mov
cmc
lods
inc
loopne
div
mov
sbb
jp
ljmp
inc
fdivr
fisttpll
xor
lods
pop
pop
orl
and
hlt
orb
sti
pop
mov
adc
imul
imul
xchg
dec
movnti
pop
cmp
mov
fsubs
mov
add
sbb
or
cmpsl
mov
mov
add
mov
scas
scas
mov
mov
add
add
imul
dec
adc
mov
bound
mov
bound
add
cmp
lods
imul
inc
adc
adc
mov
popa
subl
mov
inc
outsl
xchg
mov
jp
testb
lcall
mov
out
shrb
dec
mov
call
daa
scas
pop
xorb
lret
out
pushf
mov
and
pop
rolb
xchg
jb
push
les
xchg
sub
mov
mov
neg
add
add
sub
ds
mov
dec
gs
mov
mov
popf
lock
leave
add
fistps
cmp
lea
out
daa
and
or
test
push
pop
cmp
ss
add
fsubrl
iret
fsts
add
out
mov
ret
fwait
cwtl
or
cmp
add
subl
dec
jns
int
dec
pop
in
test
cltd
outsl
mov
repz
cld
into
sbb
fstpt
in
lock
jns
aam
dec
mov
jg
mov
jge
aas
out
repz
lret
gs
les
xchg
shr
outsl
xlat
push
add
add
sahf
in
push
jmp
sar
mov
cs
xor
mov
aad
negb
ja
scas
aad
pusha
mov
outsl
xlat
add
popa
inc
pop
or
fdivrl
sub
mov
push
cmp
jne
adc
sti
out
mov
or
sti
push
out
pop
jmp
jne
ret
adc
add
cmp
dec
cmp
outsb
dec
xchg
pop
add
mov
cmp
add
adc
gs
cmp
push
mov
add
add
mov
pop
cltd
js
cwtl
pop
into
stos
inc
push
jmp
push
cmp
sbb
daa
in
xlat
ds
test
mov
push
or
neg
xor
test
sbb
add
mov
testl
addr16
in
arpl
addr16
push
sbbl
sub
add
cltd
mov
adc
mov
imul
inc
mov
dec
inc
mov
add
xor
out
cmpsb
pop
scas
jbe
dec
mov
add
push
mov
jg
mov
mov
or
js
imul
iret
popf
jne
sbb
cmpb
lea
jno
cmp
add
xlat
in
lock
ljmp
and
mulb
arpl
push
lahf
ret
aas
mov
add
dec
call
push
push
cmc
pop
mov
aad
push
add
add
shrl
mov
hlt
mov
sub
add
adc
out
dec
sarb
mov
mov
cmc
jbe
mov
sbb
add
mov
jns
gs
mov
repnz
fiadds
inc
decl
into
shlb
add
nopl
push
ss
shlb
pushf
daa
movsl
xchg
and
shll
jle
push
add
and
subb
mov
stos
fnsave
xor
imul
outsb
xchg
pop
jno
scas
xor
add
mov
scas
sbb
mov
add
mov
jo
pop
ret
xor
cmc
pop
pop
push
enter
adc
sbb
add
mov
hlt
fnstsw
or
push
jg
imul
cmp
out
nop
jno
out
xor
mov
mov
mov
mov
imul
xor
add
ss
fwait
pushf
lcall
mov
mov
int
xchg
mov
addr16
fistpll
jp
into
add
add
adcl
add
stos
imul
mov
sbb
ljmp
mov
jbe
push
cmp
test
sbb
rorb
xor
xchg
mov
mov
lea
lcall
mov
add
mov
hlt
and
add
and
and
xlat
loopne
mov
lret
inc
mov
dec
inc
sub
testb
inc
sbb
add
mov
sub
add
cmp
clc
push
mov
std
lea
mov
xchg
mov
xchg
nop
push
push
orl
lock
imul
rcrl
mov
xchg
and
add
shlb
add
add
add
add
jge
jl
xchg
hlt
dec
rorl
add
daa
imul
add
add
sub
in
mov
xor
add
mov
mov
add
test
add
push
lcall
add
add
push
arpl
aam
jb
popa
outsb
sarl
nop
inc
test
sbb
mov
sahf
test
iret
in
jge
icebp
xchg
pushf
xchg
mov
inc
mov
push
adc
movsb
dec
pop
ljmp
add
push
unpcklps
lds
fldl
ror
xor
test
push
xchg
stos
mov
data16
mov
or
xchg
jl
pop
push
and
add
test
push
addr16
jnp
or
cli
out
daa
sbb
and
add
xchg
jmp
negb
xor
push
push
add
cmpsl
dec
sub
pop
leave
imul
dec
cmp
movsb
sbb
mov
loop
test
ja
and
in
add
jp
cli
loope
xchg
jle
std
push
cmp
jl
jl
arpl
mov
dec
mov
sbbb
mov
mov
mov
add
add
and
inc
sti
mov
add
add
dec
xor
mov
ljmp
pop
pop
push
jne
adc
mov
mov
jge
lods
dec
push
sub
add
sbb
subb
je
stos
adc
jmp
pop
pop
add
mov
pop
pop
sbb
cli
or
add
sti
mov
ss
and
and
add
push
or
rcrl
and
scas
aas
or
add
cmp
fmull
cmp
jp
push
hlt
gs
ret
fiadds
addr16
mov
das
xor
mov
xchg
add
faddl
cltd
cwtl
cmp
cmp
leave
lcall
add
jle
jmp
fadds
test
test
lods
xor
xchg
jmp
rcll
jne
pop
sbb
mov
lret
daa
cmpb
pushf
mov
hlt
add
or
int3
mov
or
add
es
add
push
inc
inc
jmp
mov
into
jl
mov
pop
jge
stc
cmp
push
xor
mov
outsl
or
xchg
xchg
inc
jmp
in
les
std
lret
xchg
enter
js
mov
cltd
add
add
insb
mov
daa
add
rcll
ret
sahf
fwait
inc
and
push
xchg
mov
mov
lods
or
add
outsl
stos
bound
xchg
lahf
push
mov
lea
and
mov
inc
mov
jle
jmp
cmpsb
inc
mov
daa
inc
jns
mov
jne
mov
mov
inc
lea
shl
or
loopne
leave
mov
push
push
mov
test
and
dec
xor
in
and
sbb
xchg
out
jge
scas
movsb
ret
push
mov
cmp
repz
jae
xchg
xlat
jns
nop
mov
push
pushf
sub
loope
mov
notb
mov
adc
push
sahf
mov
addr16
jl
fimull
mov
int
es
sub
add
js
mov
push
pop
sarl
sbb
xchg
or
add
mov
int
repz
int
hlt
js
je
push
adc
pop
int
xor
add
test
mov
xchg
push
mov
mov
add
add
mov
mov
mov
jbe
sti
add
es
mov
jp
mov
das
pop
mov
add
adc
int3
lds
push
mov
add
cmpsb
subl
fildl
add
rcll
sti
xchg
repz
jno
sbb
dec
xchg
popf
xchg
cmc
popf
shll
hlt
popf
add
int3
jo
dec
mov
mov
mov
inc
push
jecxz
jae
adc
imul
mov
mov
mov
sbb
lret
int
into
xor
ljmp
add
shlb
add
and
add
stc
adc
adc
lock
inc
adc
add
pop
dec
xor
mov
outsb
js
sbb
mov
jl
sarb
push
sub
add
xor
jns
push
cmp
adc
adc
mov
and
add
arpl
gs
adc
jle
lock
add
enter
push
inc
cmp
fsubrl
add
add
ret
fidivrl
pop
cmp
adc
aad
or
mov
xchg
mov
adc
pop
in
sbb
sub
jae
dec
sub
loope
xchg
outsb
sbb
push
inc
sub
fadd
mov
fcoms
jg
ficoms
push
adc
mov
hlt
adc
cwtl
fnstcw
xchg
sar
lea
dec
xchg
jecxz
push
into
pusha
mov
popa
scas
lea
add
pop
sub
add
add
ja
lea
push
into
mov
add
test
add
call
add
xor
loope
jno
push
push
lret
pop
notl
sbb
in
stos
xor
lcall
mov
lret
jnp
sub
xor
xchg
ljmp
rclb
jo,pt
adc
and
dec
mov
add
add
imul
decb
inc
mov
mov
sbb
cwtl
repnz
imul
pushf
icebp
and
mov
mov
xchg
xor
pop
js
cmp
hlt
push
or
nop
loop
dec
cs
std
xchg
add
mov
mov
lret
nop
scas
xchg
or
add
gs
and
push
pop
mov
js
pop
mov
nop
mov
xchg
xchg
rcr
adc
aam
frstor
add
lds
sbb
fsts
stos
mov
push
rorb
aas
outsl
jae
out
mov
inc
dec
scas
adc
stc
aaa
aad
mov
push
mov
icebp
insl
nop
shll
push
aam
inc
sub
add
and
inc
popa
cmp
sbb
cmp
or
outsb
mov
mov
add
jnp
pop
cmp
mov
push
mov
lahf
movl
sysret
js
pop
adc
mov
sub
aam
add
cmp
mov
add
add
push
movsb
cmp
mov
outsb
mov
inc
mov
test
add
ja
xchg
adc
add
rcl
loope
mov
push
jecxz
mov
sub
add
xor
das
mov
sub
adc
inc
lock
jno
inc
test
lods
addb
sti
push
sbb
and
es
mov
lock
loope
jmp
imul
fildll
pusha
mov
addr16
or
idivb
mov
add
sbbb
divl
mov
ss
insb
mov
orb
movsb
pop
inc
adc
jae
mov
cmp
xor
cli
test
int
adc
frstor
jmp
and
loopne
outsb
mov
pusha
mov
lods
lea
fists
pop
pop
push
fadds
pop
ret
pop
les
push
jb
mov
ds
sbb
fs
jae
pop
repz
lahf
jno
jge
dec
push
subb
xor
dec
das
jne
jno
mov
int
pop
cmp
add
mov
or
push
push
pop
es
test
xor
add
cli
pop
xor
dec
adc
loope
test
jae
nop
js
insb
mov
add
cmc
mov
pop
sub
scas
dec
dec
enter
sbb
mov
gs
mov
ret
scas
mov
repnz
out
enter
fimuls
mov
xlat
cmpsl
std
mov
fs
lods
mov
add
mov
xchg
jnp
inc
mov
fsubrs
mov
sbb
testb
add
jl
js
fwait
sub
test
ljmp
push
xchg
les
test
jecxz
pop
bound
adc
mov
mov
mov
out
and
jecxz
popa
aam
inc
mov
rorl
in
mov
js
shlb
and
int3
inc
mov
mov
dec
mov
out
adc
ja
int3
push
dec
iret
sub
push
hlt
mov
imulb
sbb
lret
push
outsl
into
sub
cmp
add
mov
lcall
add
mov
hlt
fs
fldl
add
sub
data16
fcmovne
adc
mov
imul
cmp
imul
and
icebp
inc
adc
shl
cltd
mov
out
sub
push
sbb
xchg
jge
xchg
push
nopl
frstor
clc
testb
leave
lret
pop
popf
int
ficoml
adc
dec
ds
cmp
pop
push
outsl
pushf
cwtl
lret
ret
xchg
push
sbb
add
add
add
add
sarl
lgs
imul
mov
scas
lcall
aam
dec
sahf
push
jo
fnstsw
scas
std
pop
cmp
loop
imul
add
int3
lea
or
inc
rolb
add
dec
mov
add
pop
fcoms
mov
push
cmpsb
push
je
call
sub
fs
push
out
psubq
daa
cmpsb
lea
jmp
push
ficoml
mov
repnz
scas
ficoml
jbe
push
dec
mov
rorl
dec
popf
fstps
mov
mov
adcb
xchg
push
cli
pop
add
adc
xor
mov
popa
test
leave
cmovs
add
imul
scas
dec
pop
out
mov
xor
add
daa
mov
lcall
cli
sub
popa
sub
dec
adc
mov
cmp
xchg
stos
sbb
lcall
add
add
jl
jno
pop
sub
inc
cwtl
mov
mov
call
add
sahf
imul
ja
inc
and
and
cmpsl
rorb
cmp
test
cmpsb
jp
test
push
cmpb
loop
lock
fs
inc
mov
ret
mov
or
outsb
push
repnz
jne
imul
pop
cmp
sub
or
add
xchg
fistpl
bound
dec
sbb
or
cmp
fcoml
mov
into
arpl
adc
lcall
repnz
xchg
insl
fiadds
and
push
xchg
cmp
mov
int
nop
dec
mov
xchg
filds
add
test
pop
adc
mov
ret
in
lods
aad
std
mov
loopne
mov
cmp
loope
pop
dec
push
andl
cld
sbb
xor
mov
inc
fwait
stc
lea
out
sbb
cmp
ret
push
sbb
mov
loopne
popf
sbb
mov
add
dec
hlt
cltd
sbb
jmp
mov
imul
movsl
in
cmp
sub
rclb
aam
mov
push
cmpsl
pushf
aaa
ljmp
jg
mov
leave
shll
pop
dec
sbb
dec
ljmp
call
mov
rcrb
test
sub
mov
cwtl
adc
mov
sahf
out
inc
mov
xchg
insl
xlat
cmp
jo
fdivs
push
nop
repz
cmpsl
loop
ss
mov
push
pop
pop
or
add
xchg
sub
add
outsb
mov
push
push
shll
test
xchg
sub
add
xor
and
add
jno
lret
aad
mov
les
mov
out
cmp
test
sub
ret
ret
orl
out
pop
int3
and
clc
jp
jg
out
outsb
mov
jecxz
add
fs
gs
lahf
fisubs
dec
jns
push
out
jae
cli
and
out
and
mov
dec
shrl
jecxz
sub
mov
xor
repnz
cli
lahf
cmp
mov
mov
fldt
in
fxch
and
sar
clc
and
dec
cmp
add
int
mov
incb
add
loopne
push
cli
inc
aaa
lret
push
add
add
or
add
mov
push
mov
add
xchg
shrl
push
xchg
cmpsl
dec
fcmovu
cli
mov
cmpsl
inc
and
add
movsl
jecxz
xchg
sbb
push
add
dec
cld
pop
xadd
stos
idivl
insl
daa
scas
push
jmp
movsw
cmpsb
dec
mov
dec
jl
adc
mov
cli
mov
dec
mov
and
add
test
mov
dec
hlt
ret
xor
insl
pop
dec
mov
push
arpl
xor
and
add
add
mov
mov
sub
xchg
add
mov
aad
push
push
pop
add
into
scas
adc
mov
add
cmp
cli
ss
popa
js
sbb
mov
add
imulb
ret
lock
hlt
and
imul
pop
xchg
mov
mov
dec
lea
in
sub
cli
ja
mov
adc
orb
adc
xor
out
jns
adc
lret
dec
loopne
xor
imul
add
pop
sub
das
dec
sbb
xchg
sarl
std
push
mov
pop
mov
mov
mov
push
mov
mov
push
pop
enter
dec
mov
xchg
movsl
sbb
add
adc
gs
ja
or
mull
stc
mov
add
and
add
pop
or
stos
or
repnz
cmpsb
add
mov
mov
fcoml
mov
jnp
add
in
xor
pop
fcoms
stc
adc
pushl
xor
mov
mov
decb
add
scas
popf
cwtl
add
lret
fnstsw
add
add
cmp
aas
repz
mov
psrlq
cmp
cmp
cmpsl
js
fs
add
xchg
rolb
add
pop
and
inc
mov
fneni(8087
adc
xchg
lea
adc
rorl
and
add
out
push
je
mov
mov
jecxz
lock
rcrl
jns
push
pushf
sub
jmp
ret
enter
fildll
add
lds
fwait
rcrb
out
mov
sub
add
dec
mov
test
add
push
int
push
cmc
sub
cmpsb
pop
add
inc
mov
cmpsb
lcall
push
add
arpl
dec
pop
rcrb
mov
add
sbb
mov
cltd
test
scas
negl
sbb
in
int
arpl
aam
and
lret
shlb
loopne
pop
sbb
cwtl
cmp
int
cltd
inc
popf
repnz
aaa
or
add
add
or
add
push
adc
cmp
add
jo
in
push
das
ljmp
int3
decb
add
mov
into
sarl
or
fsubrl
or
inc
pop
mov
data16
mov
mov
push
jl
pushf
mov
add
lds
jo
ret
push
pushf
mov
mov
add
add
jp
mov
jae
jg
mov
dec
and
pusha
mov
sbb
sbb
rorb
sub
js
push
bound
mov
ret
outsl
push
ffree
xchg
dec
arpl
cmpsb
push
scas
mov
shlb
mov
xchg
inc
push
stos
popa
pop
aaa
pop
aas
mov
cmp
in
mov
mov
cmp
int
sbb
inc
std
adc
ret
xchg
adc
cmp
fistl
xchg
insl
cli
dec
call
mov
repnz
inc
mov
push
andl
add
nop
repnz
sub
add
rcrb
inc
mov
mov
and
loopne
push
test
jl
lods
pushf
cli
dec
mov
mov
cmpsb
and
add
shrl
add
add
jle
pop
jno
rol
in
inc
fdivrl
stc
and
stc
sub
add
dec
test
mov
jg
fisubs
fisttpll
mov
xor
iret
jnp
mov
cmp
ret
ljmp
jecxz
adc
jg
mov
enter
jne
pop
mov
adc
add
faddl
ljmp
push
shl
lret
ds
mov
sub
xor
das
repnz
add
mov
mov
push
divb
push
mov
mov
and
add
xor
ljmp
insb
mov
mov
rol
lcall
add
and
xor
iret
cltd
xor
add
mov
sti
xlat
push
jge
or
pop
cld
mov
iret
sti
cmp
out
pop
mov
imul
pop
bound
lea
ljmp
test
jle
pop
pop
ret
cltd
mov
and
mov
dec
mov
mov
add
add
push
dec
inc
push
sbb
add
fwait
push
add
mov
jbe
leave
cmp
push
sub
add
mov
push
in
sub
div
adc
ja
inc
dec
cld
push
mov
mov
add
rol
sub
jg
xchg
or
ja
adc
add
fs
int3
pop
add
mov
adc
ljmp
add
adc
add
and
add
jnp
sub
push
sbb
add
add
xchg
rorl
mov
dec
mov
mov
or
inc
mov
cltd
sahf
or
xor
xor
pop
jb
test
sbb
mov
push
jl
fistps
jle
icebp
sbb
xor
add
mov
mov
mov
mov
lahf
or
stc
mov
and
mov
loop
shr
repnz
xor
add
mov
pop
adc
and
mov
movsl
aas
add
mov
int3
sbb
popa
push
into
push
cwtl
mov
cmp
push
lea
loop
std
xlat
or
in
mov
and
add
jl
push
icebp
test
aad
testb
inc
mov
push
inc
sbb
ljmp
lcall
sbb
xchg
mov
mov
cmp
sub
cmp
push
jns
adc
jecxz
loope
xchg
es
cmpsl
adc
dec
ret
add
add
or
mov
jb
dec
adc
xor
sub
lea
xchg
into
cmp
xchg
sub
into
inc
shl
aam
pop
adc
ss
dec
movsb
and
add
rcll
pop
xchg
dec
inc
jle
jg
arpl
mov
add
ror
jae
pushf
push
and
or
mov
pushf
repnz
mov
pop
sub
add
sub
jmp
inc
mov
mov
lret
xchg
pop
mov
xorb
mov
rcl
hlt
aam
fisubl
add
inc
sbbb
mov
mov
sarl
pushf
push
sbb
inc
sti
test
leave
adc
jle
outsl
ret
mov
or
add
push
shr
mov
iret
or
jnp
push
dec
inc
mov
call
pop
jge
rcl
in
enter
push
jl
pop
test
imul
cld
stos
adc
in
xlat
push
mov
push
and
mov
jecxz
push
shl
and
test
and
in
ss
and
dec
mov
out
or
addr16
cli
dec
mov
hlt
jo
push
loopne
add
inc
in
xor
jne
dec
outsb
pop
testl
add
cwtl
mov
mov
pusha
mov
mov
cmp
bound
pop
or
pop
push
lods
add
arpl
xor
addr16
fwait
and
sbb
and
add
sbb
add
fldpi
cmpsl
xor
push
fcmove
scas
or
xchg
lcall
sbb
jno
lret
inc
push
and
add
pop
push
out
dec
mov
ss
movsl
adc
adc
dec
mov
in
aad
xchg
mov
leave
movsb
or
mov
sahf
push
mov
add
add
mov
cld
dec
mov
mov
std
arpl
repz
loope
push
test
lahf
pop
adcb
add
and
mov
mov
outsl
sub
lret
sub
adc
mov
fsubp
fs
jae
mov
jno
mov
pop
aas
int
fcomp
bound
mov
fildl
insb
mov
jge
push
movsb
pop
adc
loope
out
pop
and
repz
pop
outsb
jl
adc
mov
adc
fidivl
cwtl
fwait
jle
push
in
es
outsb
sbb
jp
aam
rol
xor
fsubrl
sti
mov
add
rolb
add
jp
and
add
add
mov
pop
inc
aaa
test
jle
cmpsb
sub
add
dec
das
add
add
fwait
hlt
pop
std
push
loop
shll
lret
cltd
in
nop
dec
sbb
call
mov
xchg
sub
insl
movsb
push
xlat
int
jecxz
mov
mov
xchg
mov
mov
add
icebp
dec
mov
iret
dec
adc
mov
roll
add
sbb
cmc
bound
fwait
loope
mov
mov
icebp
sbb
jmp
stos
cwtl
or
mov
or
test
add
pop
jp
push
pop
ret
mov
aaa
fisubrl
pop
in
add
in
sti
ss
push
bt
mov
add
mov
mov
stc
ret
jmp
adc
jmp
fildl
add
das
xchg
add
cmp
call
push
jl
xchg
or
shlb
add
lock
jl
mov
je
and
push
xor
xlat
push
adc
pop
cmp
rclb
mov
add
dec
mov
movsl
mov
fidivrl
rcrl
dec
xor
ret
out
lods
outsl
dec
jmp
vmovsd
shl
push
jb
repnz
lds
mov
ffree
nop
ljmp
jne
lret
mov
imul
sti
imul
cmp
or
and
add
out
cmp
fimull
aas
adc
cwtl
xchg
xor
test
add
pop
mov
inc
jmp
sub
sbb
xor
stc
fbld
sub
and
xor
mov
inc
fmul
cltd
adc
sub
add
push
lret
ja
sub
test
sahf
and
sbb
inc
mov
dec
ds
mov
lcall
movl
xor
js
iret
xchg
mov
jbe
cli
std
mov
mov
aam
and
mov
cmpsb
sahf
out
cmc
ss
mov
mov
loopne
pushf
fld
cltd
test
cmp
mov
mov
ror
mov
pop
sub
bound
lock
mov
test
cmp
test
ja
sub
xchg
xchg
sbb
daa
and
add
aad
pop
cmp
imul
stc
cmp
shll
mov
dec
mov
xor
dec
xchg
xchg
rclb
adc
test
jo
inc
mov
mov
mov
loope
mov
push
xchg
ljmp
mov
ss
push
lock
incb
shll
and
lcall
mov
push
xorb
and
enter
lods
ret
push
pop
sbb
adc
push
jle
scas
das
xor
xchg
jl
les
sbb
in
scas
ficoms
mov
enter
addr16
sbb
xchg
stc
pop
rorb
add
push
push
mov
cmp
xchg
xchg
adc
mov
add
mov
jle
data16
mov
adc
int
in
and
add
sub
inc
dec
les
add
push
fsts
jnp
adc
or
mov
cmpsb
xchg
or
push
mov
je
mov
inc
mov
jns
call
inc
mov
mov
lock
sbb
mov
add
popfw
mov
cltd
lods
enter
imul
xor
inc
jns
xor
and
push
and
add
out
popa
insb
mov
push
push
xchg
or
pop
dec
jmp
pop
mov
pop
enter
ja
mov
in
mov
mov
dec
pusha
mov
xor
movsb
adc
sbb
aaa
inc
mov
push
jl
sbb
les
adc
sarb
sbb
inc
mov
mov
data16
idiv
popa
pop
push
and
add
prefetch
xrelease
mov
inc
mov
test
je
lock
into
sti
mulb
push
cmp
fsubs
clc
jmp
pop
enter
pushf
dec
shl
inc
outsb
push
and
fwait
out
loopne
cmpb
les
pusha
mov
mov
mov
add
pop
mov
loop
add
cltd
push
mul
push
cmpsl
dec
pushf
jb
mov
cmpsl
mov
mov
xchg
pop
popf
xor
lahf
mov
cmpb
mov
xor
sbb
mov
leave
lahf
int3
xchg
and
bound
mov
jg
stos
pushw
xchg
add
mov
mov
or
mov
mov
add
pushf
ret
xchg
icebp
pop
mov
addr16
xchg
lea
aam
sbb
push
icebp
xor
or
or
push
mov
mov
inc
mov
xor
std
push
loopne
bound
add
sbb
aad
push
imul
add
addr16
mov
mov
add
fdivrl
jge
jne
sbb
dec
xchg
scas
sbb
xchg
ja
adc
aam
scas
rcll
pushl
gs
or
xor
ss
pop
xchg
xchg
repz
popa
shl
mov
xchg
nop
les
and
loopne
add
add
pusha
mov
or
add
out
into
inc
es
popa
push
xor
pop
daa
cltd
inc
fcmovne
jb
fisubs
dec
or
ds
insb
mov
add
loopne
mov
fmulp
adc
testl
je
scas
test
xchg
and
push
stos
sahf
out
enter
hlt
push
sarl
fs
aam
cmp
or
push
scas
xchg
pop
xor
push
aas
in
call
xchg
aad
pop
push
rolb
push
mov
shrl
out
imul
mov
xchg
mov
add
xor
jg
and
push
mov
sbb
aam
andb
sub
push
pushf
pop
mov
dec
add
add
jns
in
sub
pop
mov
push
mov
jnp
cmpb
dec
hlt
test
repz
int
xchg
loopne
leave
out
leave
pop
out
jnp
push
cmp
or
add
int3
inc
jbe
ds
dec
popa
lock
ljmp
xchg
data16
aas
stc
in
push
push
inc
jae
cwtl
inc
into
scas
call
push
and
pusha
mov
cmp
or
xchg
jne
aam
scas
pushf
mov
mov
pop
dec
mov
jns
scas
dec
gs
adc
mov
xchg
lret
and
xchg
test
mov
add
jne
imul
lahf
inc
mov
pop
pusha
mov
stos
push
add
add
mov
xchg
push
push
cld
in
push
fsts
rcrb
stos
mov
imul
nop
mov
outsb
sbb
sbb
push
sbb
les
les
lahf
sbb
add
hlt
sbb
dec
sbb
fstps
clc
ret
dec
sub
shll
imul
dec
mov
cld
push
mov
ja
inc
mov
push
inc
faddl
adc
or
add
add
mov
mov
cmpsb
jbe
pop
orb
dec
mov
pop
into
inc
imul
adc
jecxz
stos
or
jge
cmp
dec
outsb
pop
push
inc
jp
jmp
add
add
mov
dec
jmp
pop
icebp
pop
sahf
push
mov
pop
xchg
jb
test
mov
dec
mov
add
nop
gs
push
icebp
dec
mov
jge
xchg
cmp
jno
cmc
inc
mov
mov
or
add
shlb
dec
pop
leave
cmp
ficompl
xlat
jnp
push
popf
jecxz
jg
testl
add
push
jnp
xchg
sub
add
es
push
std
shr
sti
push
stc
daa
ret
inc
pushf
dec
jl
js
add
push
mov
imul
add
mov
aas
out
add
lds
mov
fists
mov
stc
mov
out
daa
test
mov
adc
shlb
add
dec
arpl
gs
pcmpeqw
rolb
mov
sahf
sbb
fwait
jmp
aam
sub
ds
ss
jge
gs
ficoms
add
add
fwait
enter
fnstcw
loopne
push
inc
mov
mov
jns
sub
stos
fdivl
in
fsubs
mov
daa
add
mov
add
add
rolb
and
inc
mov
addb
int3
xor
cmp
add
sub
xchg
jnp
outsl
pop
popa
rclb
dec
cmp
insb
mov
lret
mov
fildl
sub
inc
mov
ljmp
inc
jno
std
lea
movsb
or
cmp
movsl
mov
xor
js
xchg
push
ja
std
xor
sqrtps
daa
mov
mov
add
jmp
mov
into
dec
call
mov
out
lcall
push
repnz
cmp
movb
fimull
jae
inc
rclb
add
je
adc
fildl
pop
jnp
into
test
fs
push
sti
fwait
cwtl
xlat
sub
add
gs
xor
push
lds
data16
dec
mov
cld
shll
add
add
js
inc
mov
mov
inc
dec
xchg
cwtl
mov
in
orb
add
lret
pop
fld
cmp
push
cmpsl
sub
mov
fidivrl
add
and
pop
sub
add
and
or
rorl
mov
mov
add
jmp
xor
or
fdiv
xor
push
push
inc
sbb
add
aad
test
dec
fcompl
sbb
cld
jbe
scas
and
sub
mov
add
add
clc
jl
decb
jb
add
mov
mov
xchg
mov
in
dec
inc
dec
test
sub
add
mov
dec
mov
pop
xor
push
jbe
or
cmp
xchg
insl
inc
mov
xor
adc
add
lock
mov
cmp
fildl
inc
mov
mov
out
clc
mov
ss
iret
push
int
xchg
lret
cs
add
jns
sarb
test
mov
in
push
adc
loopne
pop
xchg
sub
inc
sbb
movsl
and
cmp
dec
mov
mov
lods
out
mov
sub
add
jle
adc
das
arpl
mov
dec
jecxz
insb
mov
sub
push
dec
mov
adc
and
fwait
lock
repnz
ljmp
dec
push
arpl
ret
stc
scas
jo
xor
jp
dec
mov
into
movl
fiadds
add
es
push
push
jg
into
lods
aas
imul
outsl
xor
or
pop
inc
mov
xchg
jae
adc
add
push
les
mov
fs
into
ret
fs
xor
dec
ja
pop
outsl
mov
int3
int3
shr
cltd
outsb
push
mov
lds
fisttpll
mov
sbb
adc
push
push
jno
cltd
mov
and
jns
sbb
pop
pop
fwait
ds
mov
cmp
mov
into
mov
pop
daa
sub
add
push
cmp
add
add
jp
jg
add
add
jnp
mov
jge
scas
add
cld
cmp
mov
pusha
mov
daa
sub
mov
or
aam
xchg
stc
add
out
mov
mov
mov
xchg
ret
xchg
add
sub
pop
ljmp
mov
mov
push
mov
xchg
lcall
outsl
and
test
cmp
add
mov
or
add
pop
mov
sbb
push
imul
mov
mov
adc
pop
pop
pop
dec
xchg
adc
dec
test
lods
dec
mov
popa
test
arpl
rcl
shlb
mov
rclb
mov
sub
ljmp
add
orb
jl
push
pop
push
dec
push
mov
push
add
dec
xlat
push
dec
mov
push
cwtl
incb
add
or
cld
aam
xorb
lods
test
and
dec
test
mov
sub
pop
xchg
pop
repz
inc
or
add
les
or
fisttpll
add
pusha
mov
xchg
sbb
xchg
or
test
leave
cs
adc
lcall
push
lds
pop
xchg
stos
shlb
sub
push
xor
mov
pop
pop
and
scas
sub
jno
mov
fistps
xor
cld
cmpsl
mov
fs
movsb
imul
stc
mov
pop
dec
out
fisubrs
xchg
loopne
jg
mov
call
add
add
mull
lret
xorb
push
dec
mov
mov
adc
fiadds
add
fstl
cmpsb
es
mov
dec
cmp
mov
mov
inc
mov
xchg
add
add
fistpll
leave
fs
mov
lret
mov
ljmp
add
pop
pushf
cmp
insl
ja
addl
sti
pushf
aaa
loopne
xchg
call
cmc
adc
aaa
cld
lods
out
xchg
sbb
mov
xchg
xor
subb
repnz
inc
enter
into
jo
jnp
jae
mov
int3
aam
jne
sub
add
jne
pusha
mov
pusha
mov
je
cmp
mov
lock
cmp
hlt
loop
repnz
xor
push
pop
or
jge
inc
lds
aad
cltd
add
add
or
add
shr
enter
xlat
push
xor
push
call
cmp
push
out
movsl
dec
mov
fistpl
lret
jnp
ret
imul
mov
add
mov
dec
xor
sbb
lea
clc
gs
dec
push
add
add
sbb
mov
xchg
jge
or
daa
inc
test
and
jle
push
cmpb
xchg
cmp
mov
xchg
push
mov
mov
add
lahf
add
clc
test
add
clc
mov
aaa
aas
or
inc
aad
jbe
mov
sbb
inc
xor
mov
mov
shrb
dec
push
push
aaa
imul
js
andl
sub
pop
adc
adc
scas
inc
push
pop
sbb
loopne
sbb
into
xor
mov
in
jnp
in
cmc
fs
fwait
xchg
xor
mov
add
orb
jg
mov
call
fimuls
cmp
in
lock
add
jbe
das
cmpsb
and
push
or
xchg
xchg
mov
or
jne
jne
dec
mov
mov
fadd
dec
xor
shlb
xchg
filds
add
and
movb
jle
mov
lret
xchg
mov
pop
hlt
mov
cmp
cmpl
mov
push
jae
mov
adc
add
stc
jne
int3
lods
xchg
stc
cmp
cs
pop
out
mov
jmp
rorb
add
stos
mov
aam
aaa
fsubrs
jg
mov
xchg
pop
movsb
mov
mov
mov
les
add
fdivrl
xor
js
inc
mov
push
mov
pushf
mov
inc
inc
mov
loope
es
testl
xchg
lods
popa
mov
outsl
rorl
mov
movsl
xchg
out
pop
xchg
pop
movb
add
push
xor
jge
addb
jo
pop
xchg
push
icebp
mov
scas
lret
rcrl
fs
inc
mov
dec
jne
push
jg
add
add
or
add
loopne
xor
cmp
xchg
out
mov
dec
jnp
cld
or
lds
add
sti
xlat
jno
cmp
imul
and
fcomps
xorl
mov
out
orw
add
fldl
jo
sbb
cmc
mov
mov
mov
add
add
ret
mov
mov
jnp
mov
pop
sbb
scas
aaa
push
sub
dec
sub
add
pop
lea
inc
mov
movsl
push
inc
hlt
das
lock
xlat
je
ja
sarb
int
sar
and
push
lret
lock
xor
dec
dec
mov
jns
cmp
pop
jae
mov
in
and
add
add
lds
movsl
aad
stos
clc
imul
or
add
fwait
inc
mov
pop
mov
outsl
dec
test
bswap
sub
cltd
mov
push
cmp
mov
stc
add
add
stos
mov
loope
sbb
cwtl
pop
mov
add
shll
jae
sub
add
mov
inc
cmp
cmc
pop
inc
je
sti
jae
add
fidivrl
fs
arpl
loop
jne
xor
ror
das
jae
mov
ss
bound
mov
mov
and
imul
mov
mov
xchg
les
stc
imull
jns
in
clc
lret
dec
mov
gs
iret
inc
mov
cmpsl
pop
repnz
mov
jb
fiaddl
lds
pop
push
mov
add
cmp
mov
add
scas
js
ret
xorl
jmp
add
nop
sbbb
stos
xor
inc
addr16
inc
mov
pop
dec
adc
push
jecxz
push
shll
scas
aad
mov
and
mov
mov
lahf
xor
xchg
aam
pop
aad
rorb
add
dec
mov
and
adc
dec
mov
ret
mov
mov
int
xor
ret
or
mov
dec
test
movsb
mov
into
ret
stos
add
add
push
shlb
adc
xchg
sub
je
adc
push
ljmp
mov
add
add
out
push
or
movl
mov
mov
lahf
stos
xchg
dec
dec
mov
insl
orb
aam
int3
xor
jge
inc
mov
stc
mov
push
mov
add
scas
outsb
sti
xchg
sbb
dec
shlb
sub
mov
push
data16
addr16
cmp
and
add
sub
pusha
mov
mov
dec
aas
aad
in
inc
mov
sub
mov
gs
xchg
mov
jno
outsb
movsl
xor
add
add
add
or
outsl
cmp
add
jecxz
je
mov
mov
add
push
es
mov
adc
loopne
pop
xor
inc
mov
imul
mov
sarl
shlb
cwtl
xor
fiaddl
test
mov
add
or
add
inc
pop
out
mov
jo
roll
jo
jnp
dec
push
sub
fidivrs
add
mov
add
int
cmc
and
inc
sbb
add
mov
stos
inc
mov
mov
psllw
jnp
cmp
add
leave
arpl
add
testl
push
lret
notb
arpl
pop
shlb
push
mov
lods
jl
ror
in
add
xchg
cld
and
mov
add
out
fiadds
adc
push
xchg
lds
mov
mov
stos
fisttpll
js
sahf
incl
dec
daa
dec
inc
jbe
and
xchg
jp
lds
rol
mov
xchg
ret
lock
in
fwait
mov
mov
xor
roll
loop
or
es
adc
pop
cltd
test
in
pop
cld
mov
xor
add
inc
pop
cltd
shrl
add
test
repz
sub
sub
add
fistps
mov
mov
clc
js
mov
dec
xor
call
pop
mov
dec
sub
ret
lds
push
dec
pop
fdiv
mov
mov
mov
mov
mov
mov
xlat
sub
add
loope
std
jo
mov
loopne
adc
dec
and
push
fisttpl
add
sti
aas
push
lds
loopne
push
std
sub
add
cmp
xor
push
add
mov
test
push
add
add
rcll
iret
inc
sub
mov
lcall
push
mov
or
in
out
test
xor
push
out
test
dec
fs
ret
test
movd
es
mov
ret
mov
cli
arpl
leave
mov
loop
iret
pop
addr16
inc
mov
xchg
mov
add
icebp
imul
pop
adc
and
lods
lea
stos
adc
adc
aad
mov
xor
hlt
insb
mov
cltd
btc
cli
xchg
clc
ret
push
xchg
sahf
add
jg
data16
push
scas
add
imul
fs
sub
fldenv
adc
ljmp
divl
cmp
mov
inc
nop
dec
lret
sbb
xchg
inc
inc
insb
mov
mov
jnp
dec
jo
popf
outsl
mov
pop
fxch
jns
sbb
lret
sub
xchg
stos
ror
inc
cmp
dec
cmp
mov
pop
add
or
push
outsb
push
sbb
jno
add
add
xlat
in
cltd
rcl
mov
inc
jnp
mov
adc
mov
adc
add
arpl
mov
je
lock
addb
sub
sti
mov
cmpsb
faddl
outsb
popa
aad
and
mov
add
sub
sbb
movb
xor
mov
mov
pop
shll
jg
mov
jge
pop
fisubl
or
push
sub
add
shll
dec
mov
add
mov
fwait
push
fwait
bnd
and
mov
negb
in
jo
inc
lds
icebp
lcall
mov
ret
dec
mov
dec
push
les
cmpsb
push
lods
out
mov
out
scas
in
adc
sbb
adc
cmp
jbe
ja
imulb
sbb
add
add
adc
imul
ljmp
xor
inc
aaa
adc
in
mov
jecxz
fwait
lds
js
ljmp
inc
push
insb
mov
cld
pushf
scas
add
ss
mov
lcall
fisubrl
push
sbb
push
xor
or
ljmp
mov
push
insb
mov
xchg
mov
sti
data16
jl
sub
add
xchg
popf
insl
push
in
adc
pop
mov
or
mov
leave
roll
push
mov
repnz
and
jmp
outsl
addr16
mov
int
mov
mov
es
psrld
push
imul
add
inc
ja
mov
mov
ds
xchg
add
mov
scas
call
mov
add
enter
pop
mov
nop
mov
add
mov
inc
test
sub
xor
mov
pop
scas
popa
cmp
mov
mov
rolb
jne
mov
imul
mov
fidivrs
sbb
pop
add
arpl
add
push
jl
mov
iret
fwait
hlt
pop
jmp
and
sbb
in
xor
push
add
inc
mov
loop
lahf
adc
xchg
cwtl
out
clc
fstpl
xchg
adc
lcall
sarl
sbb
jecxz
xchg
mov
jne
jp
imul
fstps
mov
cmc
pop
fidivrs
cmp
lcall
int
aas
lods
add
lds
pusha
mov
sahf
in
add
and
add
inc
mov
inc
push
inc
shlb
push
cmp
jge
mov
leave
cmp
faddl
sub
je
mov
cmp
pushl
orl
xor
test
ja
or
push
xchg
or
mov
xor
xlat
cmpb
cmp
mov
mov
add
add
mov
xor
fisttps
popf
gs
popa
push
sub
in
xchg
mov
mov
mov
add
xchg
subl
xor
mov
mov
mov
push
cmp
add
mov
dec
mov
loopne
mov
imul
enter
fistpl
push
test
pop
or
mov
jge
fnstsw
imul
pop
push
test
push
js
dec
pusha
mov
imul
mov
mov
cli
fistps
ret
mov
and
mov
and
aas
ret
jecxz
insb
mov
mov
push
xor
sub
push
jl
cwtl
mov
insl
jns
popf
mov
ja
add
lea
mov
pop
std
outsl
push
jno
xchg
fisubl
add
cs
push
jbe
adc
stos
js
jmp
jl
mov
insl
data16
adc
sbb
movsl
pop
jo
push
lcall
or
jmp
push
sbb
push
cmp
aas
rcrb
inc
les
fidivs
cmp
add
out
stos
into
add
lock
jl
pop
jno
mov
negl
sub
add
xchg
and
sbb
out
into
rorb
mov
add
pusha
mov
add
fisubrs
add
xor
sbb
rcl
pop
pop
cmpsl
mov
add
mov
and
add
lcall
jg
mov
push
cs
sub
fcoml
sbb
in
sbb
xor
xchg
xor
int3
or
xor
lahf
addb
sub
imul
mov
decl
add
mov
fs
add
shl
push
add
add
or
cmp
out
ljmp
mov
xor
add
mov
rclb
add
imull
xor
sahf
lock
mov
enter
inc
jp
pushf
push
aaa
pop
repz
andb
add
dec
and
add
mov
dec
jnp
mov
add
iret
icebp
test
xchg
iret
insl
test
xchg
popf
inc
sahf
mov
sbb
insl
rorb
pop
jg
sub
mov
add
lahf
cmp
roll
jnp
inc
and
mov
idiv
mov
xchg
cmp
jo
scas
push
xchg
pop
pop
bound
daa
pop
fcoms
push
cmp
lret
ret
lahf
jbe
mov
cmpsb
stc
add
xlat
xchg
inc
mov
mov
or
lret
jmp
mov
fistl
mov
xchg
mov
cmpb
pop
push
cwtl
out
or
add
pop
push
xor
in
lock
or
inc
mov
adc
and
mov
cmpsb
lahf
mov
lahf
dec
sahf
jno
test
rcrl
xchg
push
into
out
pop
out
xlat
pop
xchg
rol
jp
into
mov
ja
in
mov
mov
out
xchg
test
xchg
pop
lret
or
enter
jmp
nop
dec
cmp
mov
outsb
xor
add
les
shll
adc
xchg
mov
mov
seta
add
inc
dec
mov
jge
pop
push
mov
fwait
pop
stc
xchg
and
mov
loop
cwtl
sub
cmp
imul
inc
cmp
inc
cmp
out
jmp
add
aad
mov
xchg
sub
xchg
adc
xchg
jl
mov
ret
xor
negl
fwait
add
add
insb
mov
mov
jmp
xchg
imul
ret
test
jns
ss
test
add
mov
jmp
sbb
push
xchg
xchg
xchg
adc
jl
insb
mov
mov
pop
sbb
mov
hlt
jo
jle
ret
sub
loope
pusha
mov
xor
in
mov
push
shlb
scas
cld
xor
test
sarb
dec
mov
dec
mov
mov
xor
pop
sahf
adc
xor
mov
lret
stc
mov
fucom
dec
fdivrs
sub
add
scas
fdivl
ret
xchg
push
push
jb
mov
mov
fstl
add
and
ds
mov
lcall
pop
mov
lods
push
sbb
add
cmp
mov
data16
dec
mov
inc
mov
nop
hlt
test
lods
add
and
nop
jne
insl
pop
adc
cli
cli
mov
and
add
push
mov
lods
or
scas
jmp
cs
jmp
cmpsb
or
lret
cltd
call
fwait
push
enter
add
pop
data16
std
pop
lods
push
out
das
fdiv
bnd
sbb
loop
sub
add
in
or
add
and
pop
fsubl
test
jbe
mov
cmp
imul
roll
xchg
jno
rcr
jb
daa
into
jbe
jp
sub
add
pop
lock
sbb
mov
xchg
push
lods
and
dec
lahf
out
fwait
ljmp
ret
xor
sahf
push
sub
mov
repz
sub
add
inc
lcall
daa
loope,pn
mov
add
pop
inc
xchg
subb
add
setge
add
cmp
mov
push
jle
addr16
sbb
out
cmp
cmp
dec
pop
insl
mov
adc
mov
pusha
mov
mov
add
outsb
cmp
add
jg
add
clc
adc
mov
into
adc
pop
cbtw
out
sbbb
in
xchg
in
push
icebp
imul
mov
icebp
mov
sbb
test
pop
scas
xor
jp
mov
inc
mov
lods
inc
ret
loop
pop
mov
xor
sub
push
call
fstl
int3
cmc
mov
rcrl
mov
in
push
dec
jge
fstpl
mov
inc
fiaddl
fwait
mov
or
mov
mov
mov
jnp
lea
pop
sti
scas
mov
fwait
mov
mov
das
imul
adc
xor
cmpsb
es
push
pop
dec
mov
add
xor
cmp
lods
mov
cmp
add
in
popa
xchg
aad
fs
add
leave
aaa
mov
rolb
pop
and
mov
lock
jbe
inc
cs
xchg
stos
dec
mov
lds
and
add
mov
adc
mov
mov
test
add
cwtl
aad
jno
jmp
mov
dec
or
lods
jge
mov
scas
mov
lahf
fcomi
adc
loopne
scas
aaa
mov
jle
fisubs
outsl
insb
mov
and
adc
mov
dec
in
nop
pop
adc
hlt
pop
pop
adc
jbe
push
stos
idiv
and
loopne
mov
add
sarl
aaa
cmp
mov
das
xchg
aad
mov
nop
enter
test
call
inc
dec
mov
scas
xlat
js
jle
mov
ds
inc
lret
fimuls
mov
mov
shl
lods
repz
inc
mov
int3
xor
cld
repz
cmp
add
adc
add
sub
add
sbb
sbb
mov
cmpsb
adc
sub
dec
mov
add
fs
add
jno,pt
mov
inc
lret
or
jbe
cmp
xor
xor
lret
xor
or
jmp
sbb
daa
bound
fisttpl
sub
add
arpl
pop
xchg
insl
mov
mov
mov
mov
mov
test
stc
fcompl
lods
push
ficomps
dec
or
subl
testl
mov
nop
dec
push
mov
lret
test
sub
add
pop
fimuls
pop
aaa
lcall
out
pusha
mov
cs
outsb
in
sbb
jg
jmp
add
push
cmp
test
mov
mov
nop
mov
fs
xor
int3
xor
test
sub
mov
mov
push
pop
cmc
mov
es
lret
sbb
add
add
lea
dec
mov
or
add
imulb
fldl
pop
fistl
nop
xchg
adc
mov
xchg
outsb
or
mov
outsb
and
xchg
call
scas
inc
add
iret
sbb
xchg
stc
gs
dec
mov
mov
mov
outsl
repz
xchg
xchg
dec
pop
gs
add
push
adc
or
add
push
repz
jg
aas
in
int
imul
test
fstpl
std
testb
mov
push
das
xor
mov
sbb
in
and
into
pusha
mov
adc
add
mov
jo
mov
pop
sub
and
sahf
mov
loop
enter
mov
out
and
add
lret
sub
popa
pop
dec
mov
out
lock
sbb
dec
mov
mov
das
lcall
call
stos
xchg
cmp
push
push
cli
divl
push
enter
or
clc
cld
sbbb
imull
adc
jo
add
sub
add
std
or
add
push
loopne
mov
adc
jbe
xchg
xchg
icebp
sarl
jb
xchg
mov
add
shlb
push
cld
adc
jo
mov
movsb
and
add
mov
lcall
stc
sub
add
pop
dec
pop
test
push
sub
add
xor
ret
push
dec
cmpl
mov
mov
dec
add
mov
pushf
in
int
aam
mov
sub
rorl
xor
jmp
rol
cmp
jae
and
add
xor
lock
xor
ds
add
xchg
int3
mov
push
fsub
xor
test
je
mov
ret
jmp
jbe
xchg
decl
mov
xchg
das
jae
data16
sbb
inc
mov
in
cld
pop
pop
push
push
adc
leave
sbb
fisubrs
arpl
dec
mov
push
push
dec
push
adc
ljmp
mov
mov
fwait
lea
jg
loopne
mov
add
ja
or
cs
in
in
push
dec
mov
cmp
sbb
xlat
lahf
outsl
mov
ret
push
roll
ds
scas
jmp
sarb
jnp
sub
cwtl
test
bound
popa
cmp
ss
aas
xlat
out
orb
add
mov
mov
push
fnstenv
into
stos
or
mov
mov
jns
outsb
fdivl
sub
and
mov
ficoml
add
pop
shlb
je
xor
dec
mov
in
dec
aam
inc
push
or
jne
int3
divb
xor
mov
cmp
in
aaa
rcrb
je
mov
inc
sahf
xor
cld
dec
out
jmp
cmp
xor
bound
add
xchg
jmp
mov
xchg
je
dec
mov
int3
sub
aad
push
cs
lahf
inc
and
jnp
out
mov
mov
adc
add
rcrl
add
add
or
jbe
adc
cmpb
push
es
addr16
sbb
inc
mov
xchg
jmp
add
lahf
cmpl
pop
fsincos
jg
mov
nop
mov
mov
cltd
adc
aas
aam
shrl
add
mov
xchg
pop
mov
je
out
adc
sub
lods
outsl
outsb
mov
push
repnz
cli
xchg
std
out
pop
dec
mov
push
notb
adc
roll
orb
cmp
inc
mov
ret
out
cwtl
jg
pop
dec
js
mov
add
fisubrs
ja
xchg
pop
int3
inc
dec
mov
xchg
xchg
adc
push
mov
mov
dec
mov
ds
sbbl
mov
scas
xchg
adc
xlat
inc
mov
inc
pop
imul
or
dec
fcmovne
jecxz
mov
cmc
lret
add
mov
fistpl
mov
add
imul
shlb
or
scas
inc
mov
mov
push
xchg
rolb
xor
inc
aad
out
sub
roll
nop
push
pusha
mov
js
jge
mov
outsl
cmc
push
movsl
mov
xchg
mov
outsb
mov
mov
dec
inc
and
jp
loop
cli
cmp
and
add
xor
mov
mov
popa
rolb
rol
inc
pop
cmp
incl
xchg
icebp
daa
loop
jns
mov
or
sub
pop
rclb
add
idivl
jge
leave
inc
mov
ret
lret
stc
inc
loop
push
jg
dec
xchg
das
jbe
inc
pop
ljmp
mov
orl
pop
push
mov
incl
inc
aas
pop
out
cmpsb
adc
sbb
call
mov
out
pop
jo
outsb
push
cs
mov
or
repnz
or
mov
mov
xchg
xchg
std
fcmovnu
sbb
push
fldl
cmp
inc
enter
testb
push
jge
divb
insb
mov
add
sub
aas
sbb
xchg
dec
mov
fimull
add
pop
or
and
sub
les
jp
xchg
in
inc
mov
andl
add
repnz
push
mov
inc
test
js
movsb
iret
data16
in
jnp
mov
mov
nop
push
push
or
add
push
ret
repnz
and
inc
mov
fs
inc
mov
imul
jge
mov
scas
mov
push
cmp
add
xchg
mov
add
mov
mov
idivl
xor
movb
mov
jp
push
fistps
push
xchg
call
add
push
out
cmpb
mov
bound
mov
add
cmpsb
lahf
sub
imul
cmp
icebp
loop
out
xchg
cmpsl
push
add
add
ss
roll
jmp
add
or
mov
add
add
xchg
test
aad
adc
cwtl
add
add
mov
shrl
sbb
movl
and
cmp
out
cwtl
push
mov
and
add
mov
pop
inc
out
test
pop
popf
xor
and
add
jno
pushf
popf
and
xor
jge
mov
push
pop
clc
sub
pop
push
mov
jmp
jmp
loop
sbb
xchg
test
mov
push
xor
es
mov
sub
dec
sbb
insb
mov
lcall
cmp
in
aam
mov
daa
dec
inc
xor
lcall
cmp
pop
stc
mov
mov
add
add
int
inc
lret
mov
mov
and
and
cltd
inc
mov
inc
mov
clc
ljmp
mov
fcom
pop
clc
nop
addr16
cmpsb
sbb
add
shlb
add
pop
pusha
mov
xchg
mov
mov
aas
push
sahf
dec
mov
add
add
lret
jmp
xlat
sub
add
push
imul
sbb
notb
jl
inc
icebp
add
loopne
mov
test
ret
test
push
bound
xchg
adc
add
fs
int3
sub
mov
mov
add
add
inc
out
sahf
jmp
fmuls
mov
roll
or
push
leave
xor
add
or
mov
add
iret
pop
mov
inc
mov
test
iret
jecxz
inc
pusha
mov
jae
mull
lret
add
insb
mov
ds
dec
dec
outsl
add
add
pop
lcall
call
shl
notb
push
sub
add
jne
stos
mov
push
std
arpl
add
cltd
xchg
mov
xchg
stos
dec
mov
ret
jmp
mov
hlt
adc
add
icebp
aas
dec
mov
mov
pusha
mov
fcmovnb
mov
test
mov
cmp
movsl
xchg
lcall
mov
push
sbb
push
ret
xlat
cmc
and
add
mov
push
push
inc
adc
nop
push
mov
xchg
icebp
or
add
inc
inc
inc
push
dec
popa
inc
jp
inc
mov
and
and
dec
lret
and
int3
mov
cmc
jmp
cltd
push
jo
imul
lock
out
push
inc
mov
std
inc
mov
push
jge
lods
mov
es
pop
push
cmp
add
mov
push
lods
rcrl
dec
mov
sbb
jns
mov
iret
lock
loopne
outsb
push
shll
inc
jbe
inc
daa
shlb
cmp
insb
mov
add
mov
clc
sti
notb
mov
orb
dec
inc
adc
cli
and
or
mov
lods
leave
ret
mov
js
mov
cmc
pop
cmp
rol
fcmovu
pop
cmpsb
call
mov
cltd
test
add
mov
inc
ss
pop
mov
movsl
jb
jno
inc
sub
sub
jg
sbb
pop
lods
pop
jae
cmp
adc
int3
rol
mov
adc
scas
test
clc
addr16
xor
cld
call
add
jb
sbb
sub
push
mov
out
inc
bound
cmp
fstl
mov
pushf
test
xor
push
mov
mov
mov
ret
dec
mov
push
fldcw
mov
addr16
xchg
rorl
aas
mov
xor
xchg
dec
mov
add
cld
jecxz
mov
adc
out
insb
mov
rcl
fs
xchg
leave
sti
xchg
mov
lea
ret
mov
cmp
sub
pop
push
std
xchg
shll
enter
cmp
pop
loopne
andl
add
rolb
pushf
into
sbb
dec
cmp
add
pop
in
ret
jo
mov
mov
add
jp
lahf
inc
mov
push
add
add
clc
test
lock
lock
into
or
push
inc
push
out
and
add
jle
cmp
into
pushf
pop
stos
pop
cmp
add
add
xchg
push
push
outsl
cmp
popf
or
adc
shl
sbb
add
comiss
pop
adc
lcall
adc
inc
nop
jns
mov
ds
inc
in
rol
xlat
adc
xchg
jb
and
mov
xchg
in
lock
adc
stc
jae
jo
sbb
fwait
mov
mov
xorl
add
add
dec
mov
sub
add
xor
clc
pop
or
dec
xor
mov
cld
clc
adc
pop
mov
ret
mov
add
int3
adcb
mov
jg
mov
cmp
add
adc
mov
xor
popa
jne
test
cli
in
mov
sub
sub
xor
add
pop
leave
movsl
fimull
add
dec
mov
mov
mov
daa
mov
mov
mov
cmp
add
insb
mov
mov
mov
ds
and
mov
ljmp
inc
xchg
scas
xchg
jle
aaa
sbb
push
icebp
std
aas
cmp
inc
mov
xchg
inc
push
and
add
add
jbe
les
or
push
pop
popf
cmpsl
ret
icebp
inc
and
add
jp
subl
dec
pop
mov
add
lods
pushf
jns
mov
jns
push
es
mov
hlt
cmp
cs
pop
dec
mov
jno
mov
repz
add
iret
jb
stos
js
inc
bound
divb
int3
cwtl
inc
mov
add
push
lret
or
cmp
add
cltd
adc
mov
dec
lret
or
in
jnp
mov
sbb
and
lret
js
loop
into
push
adc
and
les
adc
jae
dec
mov
cmp
add
inc
jbe
cltd
hlt
inc
mov
jnp
mov
leave
dec
add
add
push
lret
rolb
mov
sub
inc
int
fildl
add
add
and
sahf
repnz
mov
fnstsw
pop
mov
into
in
xchg
dec
adc
sarb
rcll
fildll
dec
int
xchg
cltd
lret
and
add
mov
lods
mov
jp
cltd
mov
cmc
sbb
aas
push
push
sbb
rolb
add
sub
pop
mov
jns
stc
fadds
mov
std
movlhps
jbe
test
cmp
iret
fs
shl
cmp
negl
add
fwait
lds
inc
mov
mov
mov
sbb
sub
jecxz
xchg
xchg
mov
lahf
nop
mov
rcl
mov
push
cltd
jno
sub
aas
lret
call
inc
lods
cmpsb
push
iret
or
add
add
insl
sbb
mov
add
jo
mov
outsb
lcall
orb
les
jnp
cmp
lods
jl
pop
mov
and
xor
push
jae
in
cmp
sub
add
adcl
repz
mov
pusha
mov
mov
jg
sbb
insb
mov
dec
mov
add
pop
jbe
mov
or
add
push
mov
mov
out
cmp
push
in
insb
mov
adc
add
xor
mov
push
sub
or
repnz
xor
dec
mov
mov
outsl
dec
lahf
and
lods
push
outsl
stos
pusha
mov
imul
cmpl
push
adc
test
outsb
iret
sbb
add
in
fsubrl
xchg
mov
popa
cli
test
pop
rcrl
jno
mov
dec
mov
in
and
add
pop
adc
jmp
cmpsl
pop
daa
add
dec
mov
mov
loopne
popa
lods
test
push
pop
push
jmp
and
enter
inc
hlt
test
sub
adc
mov
sbb
add
dec
ret
mov
dec
or
imul
xchg
inc
mov
push
mov
add
add
mov
xchg
mov
xor
test
jo
sbb
dec
mov
call
add
arpl
cld
cmp
add
lods
pushf
loopne
xor
mov
push
dec
and
add
mov
repnz
and
or
or
jp
cmp
add
test
push
jbe
push
ficomps
ret
sub
lea
rorl
iret
push
mov
ret
fbstp
mov
pop
cmp
mov
ret
pop
add
add
in
dec
mov
icebp
mov
mov
das
jle
out
shr
mov
flds
ss
jnp
pop
push
pop
jg
xor
mov
imul
inc
data16
sbb
leave
sbbb
push
mov
push
pop
jae
stos
imul
pop
repz
test
movsl
dec
cmpsl
inc
mov
sbb
add
ds
jecxz
ss
inc
cs
lods
mov
in
ror
mov
jns
cwtl
ret
jge
lods
jb
and
add
adc
or
enter
cmp
call
mov
insb
mov
mov
add
dec
outsl
adc
repnz
and
add
xor
lcall
lods
jg
sbb
xchg
dec
mov
pop
outsl
jbe
push
mov
add
pop
add
jecxz
mov
int3
daa
std
cmpb
repz
stos
mov
cmc
icebp
xlat
sbb
mov
pop
push
or
scas
popf
jle
mov
push
mov
popa
sub
sbb
cmpsl
aad
mov
imul
inc
mov
rcl
cmc
cmpsb
sub
mov
mov
add
mov
mov
sbb
jmp
add
sub
jo
xlat
xor
pop
mov
ljmp
testb
addr16
subb
pop
jg
mov
add
mov
lock
mov
outsl
lods
sbb
mov
mov
add
mov
mov
sbb
push
push
sub
rclb
mov
jp
scas
sub
add
jno
and
divl
aam
dec
pop
xor
mov
and
add
imul
mov
stc
pop
add
add
mov
mov
dec
push
xchg
enter
mov
mov
in
rclb
jecxz
sub
fimull
push
fwait
shr
cltd
xorb
clc
in
sbb
out
cmpsb
pop
loope
sbb
cli
nop
out
xchg
cwtl
daa
mov
jno
adc
or
imul
xchg
std
pop
test
add
push
xor
fs
sbb
add
loop
aas
xchg
and
add
daa
cmp
add
dec
jns
fldcw
inc
sub
add
push
inc
xor
inc
mov
cmp
dec
ds
int3
int3
pop
inc
adcb
mov
inc
repz
testl
mov
xlat
clc
dec
cli
je
cmc
dec
mov
pop
add
and
shll
in
adc
push
or
and
sbb
mov
or
jne
push
int
out
outsl
cmc
cmp
test
in
out
cmp
add
or
sbb
daa
dec
mov
and
or
xor
negb
fwait
and
jae
call
dec
mov
add
add
fstp
mov
push
sbb
jmp
pop
ret
inc
ss
int
inc
or
sbb
gs
xchg
sub
jbe
inc
dec
cmc
fxch
lods
and
lret
mov
fwait
xor
mov
mov
mov
mov
loopne
mov
or
mov
lret
push
jg
push
and
add
mov
cmp
ljmp
loopne
push
bound
data16
sti
push
pop
cld
aas
adc
pop
xor
ljmp
rcrb
add
mov
push
jp
icebp
ljmp
mov
mov
add
dec
shrl
jo
mov
mov
dec
notl
pop
sub
add
iret
sarl
js
cwtl
sti
in
adc
mov
aam
ror
jg
fimull
add
fwait
dec
jge
adc
jae
sahf
dec
push
mov
adc
pop
jmp
sarb
mov
add
mov
add
ja
push
call
add
add
dec
push
movsl
push
decl
add
push
xchg
movsl
jp
daa
addb
add
sti
lcall
scas
leave
mov
aam
mov
cs
adc
cmp
and
loop
stc
frstor
add
gs
lods
dec
ljmp
jl
mov
push
leave
cmp
push
movsb
jo
xchg
or
inc
sub
xchg
icebp
clc
and
add
add
sub
mov
xchg
jecxz
jno
outsl
mov
mov
les
pop
mov
out
out
xchg
mov
and
js
pop
repz
mov
shl
fld
aaa
adc
xor
dec
mov
in
test
push
popa
nop
mov
add
loop
mov
test
mov
cmc
push
mov
mov
add
ret
hlt
sbb
dec
mov
cmp
arpl
icebp
in
push
lods
sub
repz
xlat
push
xor
pop
cmp
bound
enter
sti
nop
pop
add
loope
shll
xchg
gs
pop
sbb
mov
roll
add
pop
add
mov
add
xchg
cmp
popf
and
xchg
mov
xor
dec
mov
fs
enter
add
bound
es
inc
enter
or
fcoms
and
hlt
push
sub
insb
mov
xorl
cmc
sbb
repnz
inc
dec
enter
and
add
push
movsl
jp
add
and
jl
ja
or
inc
mov
mov
mov
sbb
jmp
sbb
dec
mov
adc
out
aam
aaa
mov
fistl
cmpsl
jbe
inc
cmp
cwtl
inc
mov
mov
cmc
or
and
dec
sub
stc
rcr
mov
xor
cmp
test
pusha
mov
push
dec
add
add
out
movsb
sbb
mov
push
fistpl
test
inc
test
mov
pop
add
ret
lahf
or
pop
push
js
mov
imull
add
pop
test
dec
loopne
ja
inc
pop
xchg
sub
loope
movsl
aam
int3
cs
mov
pop
int3
pop
int3
js
or
dec
lea
fwait
xor
mov
mov
or
add
iret
jbe
sub
xchg
mov
sbb
inc
in
negb
mov
mov
fmul
cltd
dec
mov
add
mov
inc
cld
andb
add
lods
push
xor
dec
mov
mov
cmpsb
js
jbe
lds
pop
mov
add
ss
loopne
stos
lods
ds
cltd
jle
jge
mov
xchg
imul
cmp
mov
cmp
xchg
inc
repnz
mov
movsl
jl
and
dec
xchg
mov
mov
pop
inc
dec
stc
push
outsl
inc
mov
xor
push
imul
dec
or
mov
jae
dec
inc
lods
hlt
fcomps
lret
insl
adc
jb
std
xchg
jge
and
add
lahf
xchg
jo
fldcw
addr16
insl
inc
faddl
outsl
je
inc
notl
fdivrl
mov
add
jmp
inc
int
sbb
mov
pop
mov
outsb
sub
add
mov
cltd
je
fisttps
scas
xor
add
pop
mov
in
and
cmp
das
lods
imul
aas
and
lods
mov
and
or
hlt
cmp
sub
cli
into
pushf
push
popf
icebp
enter
les
mov
jge
insl
int
sarl
sbb
js
inc
cmp
push
and
int3
call
inc
mov
xor
dec
out
loopne
es
scas
mov
mov
in
push
loopne
call
mov
inc
pushf
push
xchg
xchg
jp
and
or
pushf
lods
inc
addl
mov
jno
sub
mov
ja
rorb
lea
add
lock
pop
into
xor
dec
leave
xchg
jp
frstor
xor
mov
mov
int
fstl
mov
stc
xchg
push
in
cld
idivb
adc
loope
inc
sub
mov
fidivs
hlt
or
shll
movsl
jmp
stos
mov
mov
jp
in
stc
and
addb
lret
les
xor
jmp
jg
mov
out
nop
outsb
push
sti
movsl
rclb
jl
mov
inc
push
xchg
pop
push
sub
pop
jge
push
lret
mov
mov
xchg
mov
sbb
mov
jg
or
mov
or
lret
pop
das
pop
mov
add
add
cli
xchg
mov
pop
mov
movsb
cld
movsl
mov
mov
ds
pop
pop
cmpsl
mov
ficompl
sbb
movsb
push
sub
cmpsl
or
into
sub
mov
adc
mov
test
repnz
ret
jo
dec
mov
adc
pop
pop
xor
sbb
pop
cmp
add
pop
fnsave
push
pop
fbld
push
cmpsl
in
icebp
sub
mov
mov
mov
addr16
adc
xchg
outsl
int3
xchg
cld
dec
mov
ja
js
mov
and
leave
mov
cmp
xor
xor
ret
inc
mov
add
ss
add
and
mov
roll
in
or
sbb
add
sub
lcall
sbb
sbb
push
xchg
inc
ret
loopne
mov
mov
inc
adc
pop
lahf
loopne
mov
inc
repz
mov
insl
jle
and
lods
daa
inc
cs
fbld
clc
pop
add
add
adc
nopl
xchg
adc
cs
jmp
lcall
aam
lock
mov
arpl
loop
mov
xor
ret
ds
mov
add
aas
popf
and
or
jnp
aas
jg
lret
xor
bound
mov
in
xchg
mov
lret
push
out
or
mov
mov
mov
sti
lret
and
in
insl
cld
inc
js
jo
testb
pop
shl
push
jmp
mov
outsl
addr16
push
add
adc
popf
sahf
roll
and
cld
jno
out
cwtl
cmpb
cmpsl
sbb
mov
sub
add
cmpsl
pushf
fbstp
or
add
leave
xchg
add
mov
ljmp
jl
dec
or
jp
mov
clc
xor
add
add
inc
pusha
mov
fnsave
cmpsb
add
push
adc
xchg
pop
sub
loope
cld
pop
arpl
outsb
js
shlb
vunpckhps
xchg
add
mov
jmp
pop
dec
mov
pusha
mov
fsub
into
arpl
div
push
mov
mov
cs
outsb
loope
mov
aaa
sbb
push
jnp
scas
jmp
mov
jns
sub
leave
out
inc
mov
lret
ljmp
stc
mov
shll
mov
bound
mov
icebp
shll
xchg
jne
inc
fbld
mov
inc
stos
xchg
sub
rcl
rcll
shlb
inc
ror
mov
mov
shl
lret
mov
test
add
hlt
mov
add
xor
dec
sub
add
inc
dec
mov
mov
mov
xchg
cmpsb
aam
xor
add
mov
dec
inc
mov
nop
push
mov
mov
into
xchg
push
lret
adc
pop
mov
add
ret
gs
mov
inc
or
addr16
pop
pop
dec
cmpl
sub
mov
hlt
sarb
ficoms
pop
andb
in
sbb
popa
pop
out
mov
cmp
aas
xor
adc
xchg
mov
jns
aaa
or
cltd
in
dec
sti
sub
xchg
adcb
leave
cmpl
mov
mov
bound
repz
sbbl
arpl
iret
das
out
add
in
sbb
dec
inc
push
and
int3
jnp
clc
les
add
shll
imul
leave
mov
jl
adc
lds
mov
add
or
pop
int3
jne
clc
xor
xor
js
call
mov
add
lea
call
inc
daa
jae
mov
dec
mov
lret
cmp
add
je
mov
mov
mov
xchg
add
mov
scas
sbb
sbb
test
jle
arpl
in
mov
sub
and
jmp
nop
stc
stos
test
cmp
sub
add
jge
sbb
bound
mov
test
das
std
xor
jo
or
xor
xchg
imulb
out
xor
mov
mov
clc
dec
mov
lret
adc
les
andl
lahf
call
mov
inc
mov
repz
ret
mov
xchg
sarb
pusha
mov
add
std
cmp
mov
and
popa
shlb
dec
addb
add
mov
xchg
push
mov
mov
push
in
icebp
aad
iret
jb
jecxz
add
test
add
pop
pop
push
ret
adc
xchg
jp
aaa
sarb
cli
rclb
and
and
and
jnp
mov
inc
sbb
dec
jl
add
fiaddl
mov
mov
mov
repz
pop
push
imul
push
add
add
pop
stos
idivb
jae
outsl
sbb
jns
mov
aaa
fwait
inc
into
stos
lods
fisubs
aad
or
add
inc
int
mov
sar
sbb
inc
aas
cs
push
divb
dec
das
movsl
xor
xlat
lock
add
dec
test
ja
mov
leave
ljmp
out
jle
lcall
mov
maskmovq
divl
push
outsl
in
and
cmc
xchg
xor
icebp
inc
mov
andb
mov
xchg
mov
cmpsb
adc
out
and
aad
fs
divl
inc
pop
push
and
add
sbb
js
stos
jns
adc
pop
inc
push
push
hlt
xorl
in
test
or
add
ljmp
out
adc
test
sbb
jno
jae
push
dec
in
lcall
inc
or
mov
pop
dec
mov
add
sbb
mov
dec
inc
jg
test
inc
mov
mov
pop
add
add
mov
xchg
push
ds
cmp
xchg
lock
xor
ss
cs
sbb
fisttpl
add
xchg
int3
dec
mov
add
in
push
mov
xchg
leave
push
mov
lcall
add
push
int3
out
xchg
insb
mov
xor
cmp
dec
mov
mov
pop
sarb
test
cltd
jnp
mov
test
mov
mov
int3
daa
cmpsl
pop
stos
inc
push
mov
mov
out
cmpb
or
mov
aad
sub
sarl
inc
pop
cmp
push
lcall
insl
pop
dec
lods
cmpsl
adc
add
jp
mov
jle
icebp
lret
addl
jmp
mov
dec
nop
mov
mov
cmp
xchg
adc
or
clc
insl
cmp
mov
pop
pop
add
xchg
movl
dec
xlat
add
add
idivl
mov
sahf
or
add
xchg
shrb
clc
arpl
and
add
insl
test
rcrb
dec
ja
ja
movsb
aad
pop
push
scas
fstl
sub
mov
add
jae
sbb
cwtl
mov
or
mov
idivb
and
jle
xor
sar
cmp
inc
scas
ds
daa
cs
cmc
inc
pop
push
js
dec
push
pop
fs
mov
mov
fcmovnb
mov
push
cmpsb
mov
adc
inc
nop
fs
enter
faddp
aad
fidivs
aad
or
ss
push
inc
jecxz
mov
call
adc
orb
imul
in
outsl
iret
cmc
and
add
mov
add
outsb
leave
push
add
js
inc
test
sti
mov
mov
lea
inc
pusha
mov
sti
scas
inc
dec
mov
mov
mov
pop
outsb
fisttpl
add
add
fstpt
adc
aad
aaa
es
cmp
add
ret
lods
in
inc
cmpsb
xchg
loop
loope
test
mov
dec
mov
inc
jns
pop
and
mov
or
xchg
lods
jg
inc
push
inc
lods
adc
scas
dec
mov
jbe
push
fstp
or
xchg
inc
mov
mov
stc
lock
arpl
sarl
xor
mov
or
inc
mov
pop
mov
jns
xlat
scas
or
mov
dec
pusha
mov
and
hlt
mov
dec
out
pop
mov
cli
push
push
je
test
lret
jo
cmp
cwtl
lods
cmpb
push
sub
dec
jge
dec
sbb
push
xor
cmp
mov
pushf
dec
mov
das
inc
aam
mov
add
add
adc
xor
repnz
mov
adc
push
adc
in
jnp
test
push
out
add
inc
sub
out
jae
push
jmp
mov
push
lods
and
mov
jnp
aas
push
inc
mov
cmp
add
enter
inc
xor
in
fimuls
add
cmp
loopne
add
add
xor
mov
jle
push
sub
add
mov
or
aam
scas
rcrb
fsubs
test
jne
push
fldl
inc
loopne
out
fiaddl
cld
jge
cli
and
lock
hlt
sbb
lods
shll
inc
adc
mov
lea
rorl
inc
lcall
adc
mov
jbe
xchg
mov
mov
pushf
inc
mov
icebp
stos
mov
add
mov
xlat
jb
mov
sbb
mov
xchg
or
dec
mov
daa
aaa
stos
mov
xchg
ret
aas
orl
add
jns
fsubl
jge
mov
imul
add
es
andb
fxtract
outsl
lcall
add
lea
xlat
and
in
mov
add
push
add
stc
push
es
popf
movsl
dec
mov
pop
or
ret
div
sbb
cmp
cwtl
mov
sahf
pusha
mov
call
mov
push
jle
mov
pop
mov
dec
mov
mov
in
adc
add
lock
dec
mov
push
out
sub
ds
xchg
imul
xchg
mov
add
je
arpl
xor
jp
or
repz
mov
movntps
movsl
xlat
fidivl
mov
out
push
inc
push
pusha
mov
stos
xchg
add
dec
mov
imul
mov
out
test
add
sub
fidivl
jae
out
mov
push
roll
jbe
in
sti
inc
mov
mov
popf
push
pushf
and
sbb
mov
jmp
mov
jo
dec
dec
or
mov
xor
add
add
and
loope
pop
jl
jns
aaa
popl
jmp
add
mov
add
xchg
fiadds
iret
dec
push
push
mov
mov
xor
mov
lret
orl
adc
dec
dec
mov
aaa
cmc
in
aad
mov
inc
lret
xor
add
fbstp
push
jns
inc
mov
in
imul
rcl
lahf
roll
movsl
inc
add
lods
xor
push
and
add
pusha
mov
jbe
push
xor
rorb
inc
ss
call
js
dec
mov
mov
sub
mov
jecxz
shl
ret
stos
repz
sub
je
scas
out
jl
jecxz
mov
mov
mov
adc
enter
add
clc
mov
add
fmull
jns
push
mov
daa
nop
fdivp
cmp
mov
mov
inc
sub
push
sahf
cmc
jge
pop
cmp
push
ja
punpckhwd
or
sbb
leave
and
mov
arpl
mov
fldcw
cmpsl
xor
add
inc
fdiv
xchg
lds
mov
xchg
repnz
rcrb
dec
cltd
inc
mov
add
imul
inc
fsubs
add
mov
lcall
jecxz
in
popf
fnstsw
mov
rcl
inc
mov
vmwrite
mov
lret
sti
scas
dec
popf
xchg
mov
in
pslld
mov
add
ficomps
xor
and
rclb
pop
jbe
dec
fcmovb
loope
cmp
xchg
mov
mov
push
or
adc
and
dec
or
mov
lahf
ja
sti
leave
rcl
dec
xlat
cmpl
sbb
cmp
mov
jbe
out
and
mov
and
add
ret
mov
lar
addr16
bound
xor
mov
add
jle
jle
cld
push
dec
and
add
push
popa
call
add
bound
mov
xchg
jno
bound
pop
pop
cmp
faddp
xchg
out
out
push
sbb
stos
leave
or
fldt
push
mov
mov
inc
mov
iret
mov
aaa
cmp
xchg
call
jmp
ljmp
mov
mov
add
xor
or
add
mov
outsb
mov
add
dec
mov
sub
and
mov
push
push
inc
addb
mov
fldcw
lret
out
add
out
push
rolb
testl
push
push
mov
shrb
add
outsl
out
inc
jmp
test
add
mov
imul
mov
mov
fidivs
call
test
push
aam
popf
mov
icebp
bound
pop
inc
cmp
add
dec
cmp
mov
nop
cmpsl
jp
loopne
fs
mov
cwtl
ss
add
sub
sub
add
and
out
int3
bound
mov
adc
pop
and
cmp
fsubr
fwait
scas
push
sub
add
lret
ds
sbb
and
repnz
mov
dec
dec
test
in
push
sbb
mov
imull
and
dec
mov
cs
jge
dec
mov
sub
ret
mov
fwait
in
adc
mov
cmpsl
sbb
dec
test
and
xorl
dec
rorl
sub
add
cmovne
dec
sbb
mov
imul
adc
cmpsl
jge
jmp
add
enter
adc
rcrb
lret
ljmp
cltd
loope
cmc
loope
adc
stc
or
inc
or
mov
mov
mov
fidivrs
sub
and
stos
push
pop
icebp
ret
add
or
sbb
sbb
add
push
arpl
lret
dec
test
xor
shlb
aam
repz
andl
jmp
shlb
push
mov
and
testb
add
jae
inc
and
mov
mov
add
sub
push
cmovno
mov
add
cmp
test
jl
aad
jmp
pop
mov
mov
add
sub
rcl
adc
fimuls
add
add
out
inc
mov
pop
add
add
lds
xchg
faddl
xor
mov
mov
fwait
loop
fdivs
xchg
sbb
and
mov
mov
jg
push
in
sub
cmp
loopne
jle
dec
cmpsl
xor
stos
jge
pop
popf
data16
mov
inc
mov
daa
dec
mov
mov
sub
add
pop
add
cmp
stc
and
popa
jnp
iret
leave
imul
fcompl
xchg
adc
xchg
and
popf
add
mov
in
adcb
mov
jno
xchg
js
call
int3
xchg
scas
add
add
out
sbb
mov
mov
sti
dec
mov
add
jns
shrb
test
inc
pop
sti
in
cs
mov
adc
inc
lods
outsb
jb
scas
inc
arpl
add
je
and
divb
push
out
into
mov
mov
push
xchg
or
push
mov
dec
mov
fdivl
lods
arpl
scas
mov
cmp
jne
out
data16
test
insb
mov
cli
jecxz
lods
fcomp
or
push
out
mov
mov
aad
add
inc
aam
fcomip
or
ds
test
mov
or
dec
lret
mov
daa
aad
jnp
inc
mov
cltd
xor
sub
add
push
stos
out
push
mov
mov
add
loop
mov
xor
ror
pop
lret
out
sbb
xchg
xorb
and
xchg
jle
jne
inc
xlat
out
push
inc
mov
cmp
xchg
adc
inc
mov
int
subb
add
jo
cltd
popa
lret
and
add
test
or
das
pop
dec
fcmovnb
das
mov
inc
cmp
push
fistps
xchg
adc
ss
cmp
sbb
aas
xor
xor
std
inc
out
lock
mov
xor
add
mov
clc
inc
sub
push
push
out
psraw
mov
insb
mov
mov
xlat
pop
mov
lds
add
push
js
adc
dec
xchg
xor
adc
add
insl
loop
add
stc
jns
jno
adc
lret
stc
lret
fcoml
or
add
negb
mov
mov
cs
xchg
fadds
sar
dec
mov
adc
fiadds
add
mov
add
or
sbb
shll
cmpsb
lods
jl
shrb
mov
cmp
cmp
cltd
mov
pusha
mov
mov
mov
add
mov
dec
imul
mov
push
popf
pop
adc
pop
popa
or
les
mov
imul
lret
cwtl
xor
lock
xchg
pop
adc
mov
int
dec
cwtl
xor
xlat
jg
jb
mov
idivb
jns
rolb
add
pop
jnp
jnp
inc
fdivrl
inc
inc
xchg
imul
push
xchg
jmp
pop
xchg
aas
and
test
jp
mov
xorb
out
adc
inc
xchg
sbb
lahf
lahf
es
fstps
dec
xlat
fs
fcompl
sub
add
das
inc
mov
ret
cwtl
popa
pusha
mov
push
stos
xchg
rorl
aam
sti
or
add
mov
mov
out
mov
xor
lret
or
addr16
xor
aas
lods
push
sub
push
jno
xor
fisubrs
ss
mov
sbbl
sbb
cwtl
pop
push
ljmp
in
mov
xor
xchg
sbb
out
mov
add
aaa
rcr
rolb
mov
add
add
loop
push
dec
mov
mov
lcall
movl
mov
mov
dec
popf
jecxz
addl
add
jb
xchg
lret
in
pop
mov
add
out
cmp
jg
sub
sahf
pop
divb
push
mov
pop
enter
lahf
mov
xor
lcall
aaa
dec
and
mov
mov
pop
repz
std
out
lahf
scas
in
or
adc
xchg
scas
clc
daa
ja
inc
outsb
in
and
test
mov
add
jl
dec
mov
outsl
test
add
cmc
subb
add
inc
sub
add
mov
jb
lods
fwait
aad
xchg
mov
add
ret
xchg
mov
sbb
das
dec
imul
push
adc
xor
sub
fsubrs
add
jecxz
ror
sbbl
add
cmpsl
ds
push
xchg
ficomps
fmuls
mov
inc
mov
int
jmp
pop
daa
in
cmp
rcll
pop
out
decb
fucom
insl
adc
mov
push
xor
stos
pop
fdivrl
jo
lods
scas
xchg
call
dec
dec
mov
ljmp
loop
mov
add
lods
ljmp
add
fldcw
fsubl
xor
sub
push
js
or
aad
sahf
sbb
inc
addr16
stc
inc
sub
push
stos
mov
inc
ret
cmp
jno
mov
push
test
das
lcall
xor
xor
mov
or
add
adc
pop
xor
add
push
in
pop
cmp
xor
inc
mov
shlb
add
adc
add
xlat
nop
mov
inc
loopne
inc
dec
sub
imul
cmpsb
scas
and
add
jg
iret
ja
cmp
push
mov
mov
dec
fs
gs
jo
cli
push
iret
fstl
jmp
mov
sbb
mov
push
adc
out
mov
mov
and
push
cmp
add
cmc
xchg
in
adc
icebp
add
out
cld
dec
mov
negl
pop
mov
fsts
xor
aad
cmpsl
test
lds
movsl
add
mov
dec
mov
or
dec
imul
jge
adc
pop
ja,pt
pop
icebp
lods
out
jnp
gs
xor
adc
mov
inc
cmp
mov
lahf
into
mov
ja
test
in
dec
and
add
and
mov
pop
cmp
mov
cmc
inc
shr
int3
cmp
add
ror
pop
inc
repnz
lds
dec
fnstcw
or
test
sub
push
lcall
push
xor
dec
out
pop
cmpb
mov
pop
and
push
jle
mov
dec
xchg
cmp
dec
mov
mov
pop
mov
pop
xor
mov
imul
repnz
cmpl
pop
push
jbe
and
sbb
or
add
mov
cmp
ficoms
das
orl
dec
or
add
dec
mov
sbb
add
or
jmp
add
fcoms
jecxz
mov
sbb
push
shrl
sub
pop
aam
add
rcrl
sbb
xchg
fistpl
jecxz
repz
repnz
hlt
add
add
add
or
add
out
add
mov
sarb
mov
add
mov
push
popa
loope,pn
push
lret
fmulp
inc
daa
mov
mov
inc
mov
imul
cld
mov
push
das
jne
and
fdivrl
inc
mov
test
mov
and
jb
in
cmpsl
pop
fucomp
mov
xor
adc
fisubl
div
fidivs
sbb
add
add
imul
sbb
mov
add
ds
and
mov
add
out
mov
fcos
mull
inc
mov
inc
dec
mov
push
xor
inc
mov
rorl
add
mov
push
fs
and
fmulp
addl
and
adcb
jbe
mov
xchg
jmp
add
pop
push
mov
rcll
das
ret
add
lods
jne
or
hlt
into
xor
add
jae
fistps
xor
pop
adc
push
cltd
and
fadds
cmp
cmp
shlb
mov
pusha
mov
adc
mov
add
and
adc
pop
lret
stos
add
mov
jmp
jnp
mov
cli
xchg
aaa
out
mov
inc
adc
inc
shll
ja
stc
lods
into
inc
mov
mov
ja
fst
inc
mov
jle
dec
aaa
cs
mov
cltd
or
cmpb
arpl
push
mov
les
push
mov
dec
or
add
adc
jb
xchg
aam
je
enter
in
mov
rcll
fs
mov
enter
jge
push
lods
xchg
lfs
dec
out
add
ds
push
pop
pop
push
bound
xor
mov
xchg
add
add
pop
push
mov
add
add
add
test
lahf
xor
pop
sub
in
int
dec
neg
dec
mov
mov
mov
add
or
addr16
shl
arpl
cmp
mov
fisubrs
sub
loopne
call
jo
add
mov
insl
sub
add
mov
std
in
cmp
mov
lods
inc
daa
jge
idivb
or
mov
out
xlat
mov
clc
inc
pop
fld1
adc
and
mov
or
leave
dec
push
mov
outsb
or
das
add
add
mul
cwtl
shl
es
lock
jne
ljmp
loop
jno
mov
mov
mov
push
lods
lcall
fmuls
add
nop
xor
add
iret
dec
mov
sbb
imul
sbb
add
lea
mov
test
mov
scas
cwtl
push
add
add
inc
mov
mov
sarl
iret
dec
mov
test
out
push
scas
bound
mov
add
push
sub
and
lcall
mov
mov
pop
xchg
cmp
mov
pop
popf
nop
add
add
push
cs
add
mov
clc
xchg
dec
jp
push
jg
call
add
xchg
xchg
add
js
out
pop
dec
popf
gs
mov
lea
fistl
push
ja
mov
loope
mov
mov
fstl
add
inc
and
jns
lods
sahf
dec
insb
mov
add
imul
hlt
out
bound
jle
shr
mov
rcl
ljmp
fistpll
mov
enter
rorl
jne
add
add
pushf
sbb
sti
pushf
sbb
xchg
mov
cmp
pop
adc
mov
mov
movsb
push
bound
jbe
inc
cmpb
out
or
lea
aad
pop
lret
cmp
sbb
add
add
mov
add
adc
pop
pop
mov
cmp
push
insl
ret
and
add
push
mov
sbb
mov
xor
dec
call
add
rclb
xadd
ljmp
fistpll
xor
add
outsl
push
rcrl
xor
pop
mov
cli
or
or
mov
sub
add
fmuls
sarb
add
jg
push
dec
mov
fsubrl
jge
mov
rorl
hlt
test
xchg
jno
pop
insl
adc
adc
dec
mov
push
sbb
adc
jl
data16
sbb
jbe
add
dec
mov
outsb
pop
mov
xor
sub
sub
lds
add
xlat
ficoml
sbb
aas
dec
insb
mov
jmp
outsl
iret
out
test
jbe
aaa
fsubl
jns
xor
roll
add
movsl
lret
shll
in
mov
jo
and
pop
ret
inc
lods
addr16
mov
mov
jp
shrb
pushf
pop
enter
mov
icebp
lock
jl
ret
inc
mov
adc
mov
add
xor
mov
add
ret
xlat
imul
mov
and
xchg
out
sbb
sti
in
hlt
je
cmp
cmpsb
xchg
fwait
xchg
sub
fsubs
iret
ret
movsl
aam
mov
add
mov
add
dec
loopne,pn
sarl
movsb
insl
adc
jecxz
inc
sbb
adc
xchg
xchg
jne
aam
inc
xor
insb
mov
sbbb
inc
mov
xor
add
lret
push
icebp
lock
dec
inc
bnd
rcll
add
mov
sbb
add
xlat
adc
dec
in
push
xor
inc
fimull
mov
mov
pop
adc
pop
cmp
loopne
mov
aaa
or
xor
add
add
jbe
bound
push
mov
sbb
loop
or
sahf
sbb
outsl
mov
and
add
in
mov
clc
mov
sbbb
rcrb
aad
inc
loopne
sbb
cs
mov
test
cwtl
mov
mov
push
mov
dec
xor
pop
jnp
icebp
add
add
fcoml
nop
jl
push
out
test
mov
outsb
mov
mov
mov
xor
fdivrp
faddp
cmp
notl
stos
negb
sbb
push
or
push
sub
ljmp
inc
pop
sub
add
std
inc
dec
mov
adc
adc
mov
ret
fs
inc
test
jmp
or
push
and
idiv
je
jo
pop
and
popf
and
call
insb
mov
dec
push
push
and
and
sbb
add
mov
mov
int3
sub
in
jl
mov
sub
push
xchg
test
fmul
push
cmp
mov
stc
push
rolb
mov
mov
lods
bound
push
mov
xchg
fstpt
testb
mov
mov
addr16
sub
je
xorl
xlat
push
mov
jo
ds
mov
lods
lock
loop
fs
sti
or
orb
aad
inc
inc
mov
adc
push
jp
sub
add
fistps
dec
call
and
push
adc
add
psubsw
mov
test
int
test
xor
aad
shl
daa
ja
sbb
in
mov
dec
mov
jle
dec
and
shrl
fists
lahf
jne
mov
jl
jge
sbb
mov
ss
and
popf
pop
scas
xchg
pop
mov
sub
pop
or
sub
add
cmp
test
add
bound
add
nop
cmp
jl
inc
or
xor
jl
stc
adc
or
outsb
xchg
sub
mov
jl
cmp
sub
add
add
aas
xchg
hlt
xchg
xchg
shll
add
insl
add
add
fiaddl
lods
push
adc
or
lahf
test
fcmovnu
sub
add
xchg
nop
out
pop
sub
push
stos
and
add
jo
lock
xchg
xor
jbe
scas
movsb
and
jb
aad
mov
jnp
xchg
mov
shl
or
lret
std
inc
fnstcw
jo
js
outsl
incl
add
add
fcmove
mov
js
jnp
push
sub
sub
mov
in
pop
daa
int3
lahf
jmp
fimull
jecxz
jns
je
scas
test
cld
popf
es
jne
pop
pop
cmp
aam
xor
mov
mov
push
les
popf
fdivr
pop
push
and
rolb
mov
arpl
jge
adc
adc
mov
cld
xchg
sbb
push
push
ret
lods
dec
ficompl
out
jp
xor
add
mov
cld
repnz
cmp
xchg
push
jno
stos
xchg
cwtl
out
sahf
jnp
mov
push
aad
imul
mov
movsb
filds
add
lea
add
xchg
dec
dec
mov
cmp
inc
mov
loop
mov
add
add
idiv
shll
pop
sbb
in
sbb
sub
xor
pop
xchg
and
ljmp
cmp
pop
js
pusha
mov
mov
jbe
or
rolb
mov
std
dec
mov
hlt
psadbw
and
add
push
cltd
inc
mov
add
jb
sub
mov
fisubrs
add
imul
lods
frstor
add
into
mov
shlb
jno
sub
adc
sbb
in
fdivrp
cmpsl
cld
cli
push
xchg
out
fsubl
mov
push
jbe
adc
xchg
mov
jo
add
pop
in
cmc
mov
mov
add
gs
mov
xor
sbb
dec
mov
sbb
leave
or
add
sarl
loop
lret
jmp
mov
xor
and
hlt
push
shrb
add
mov
push
cld
dec
jle
mov
btc
sti
add
add
clc
adc
cmp
add
add
cmpxchg
adc
jae
add
pop
sub
add
mov
fwait
mov
add
inc
mov
pop
jle
outsl
rcrl
dec
mov
roll
sbb
hlt
adc
dec
mov
sbbb
add
hlt
out
xor
add
bound
xor
fs
sahf
neg
std
mov
lea
out
pop
js
xor
inc
insb
mov
mov
cmp
and
fldcw
lock
xor
add
xchg
aam
popa
or
nop
insb
mov
mov
rcl
mov
add
adc
dec
fadds
loop
xor
add
mov
cmpsb
sarb
push
push
loopne
or
mov
mov
jbe
fwait
sbb
leave
in
aad
mov
loopne
or
ja
dec
pop
mov
bound
push
test
jl
stc
dec
mov
mov
mov
mov
inc
adcb
xchg
out
mov
mov
mov
pop
cmp
ljmp
movsl
outsb
ret
pop
fbld
testb
mov
lea
jmp
add
outsb
mov
mov
add
mov
cli
push
nop
mov
and
shrl
and
cmp
lods
ficompl
cmpb
mov
pop
sbb
fs
stc
sti
pusha
mov
mov
mov
adc
mov
mov
int
xchg
rcll
cwtl
or
add
imul
mov
pop
inc
push
and
mov
nop
push
add
cmc
ljmp
js
xor
les
mov
add
xchg
xchg
xchg
stos
cli
mov
push
mov
sarb
fnstenv
les
jmp
push
cmp
lret
scas
sbb
inc
mov
add
int3
push
push
mov
jle
mov
hlt
mov
imul
mov
ret
sahf
mov
int
mov
add
inc
sub
and
inc
mov
push
lea
sub
add
cmp
sbb
jne
push
and
jns
aaa
jns
xlat
addl
jns
scas
inc
mov
add
xchg
popa
add
stc
jecxz
out
test
add
stc
loopne
loope
test
cli
lods
pop
jg
stos
fcmovb
cwtl
sub
ret
fsubrs
push
sub
add
ds
mov
stc
loopne
mov
in
jp
push
push
xchg
cmp
lcall
or
dec
cwtl
adc
sbb
add
fldenv
xchg
sti
arpl
jle
dec
out
adc
clc
inc
mov
call
add
pusha
mov
xor
cmpsl
or
repnz
mov
jp
and
out
fs
rolb
add
test
adc
nop
cmp
jl
jle
mov
push
add
mov
inc
sbb
inc
scas
mov
iret
out
pop
data16
cld
pop
fcompl
cmp
fidivrs
cmp
add
and
insl
repnz
les
add
pop
lret
jne
sub
xor
add
mov
jp
add
add
sbb
mov
mov
in
mov
jecxz
mov
enter
add
jnp
movsb
mov
jbe
and
mov
in
aad
ja
jno
fidivl
lahf
jmp
scas
mov
bsr
xorb
mov
iret
xor
wrmsr
xchg
insb
mov
into
add
xor
outsb
mov
aas
mov
cltd
rcll
push
sub
push
nop
cld
or
ret
xor
or
movl
add
add
mov
int
mov
sarl
and
xor
cmp
stc
add
add
fdivl
add
pop
mov
mov
mov
cmp
mov
enter
aam
push
mov
mov
sub
add
scas
push
scas
int
adc
xor
pop
xor
mov
pop
mov
dec
mov
lret
push
nop
xchg
mov
push
dec
push
or
add
jecxz
sahf
xchg
xchg
and
cltd
fimull
jl
mov
pop
sbb
add
add
add
mov
mov
add
mov
lock
push
out
cs
mov
jo
pop
jle
mov
jae
xlat
cmpsb
push
iret
rcrb
add
inc
mov
data16
sti
iret
ret
adcl
add
iret
jmp
pop
sub
xor
dec
jnp
in
pop
mov
add
add
adc
add
rorl
add
fisubl
add
inc
fldl
or
test
sub
cmp
mov
jmp
cmpsl
and
std
imul
dec
scas
mov
add
cmpsl
sbb
add
adc
cmp
pop
dec
mov
and
lret
sub
add
jp
gs
lahf
mov
je
aam
mov
stc
sbb
adc
add
mov
push
aad
or
aam
mov
mov
push
scas
int3
mov
pop
or
pop
jmp
fcoms
push
jle
mov
cwtl
inc
pop
cmp
jb
mov
mov
push
mov
add
sahf
sub
pop
and
push
fs
inc
bound
sti
mov
jne
xchg
mov
add
xor
pop
fsubrl
mov
mov
je
mov
pushf
loop
in
stos
inc
or
mov
adc
add
pop
leave
or
pop
xchg
aam
rorb
add
adc
lods
inc
fmull
add
add
add
loopne
into
ret
movb
push
mov
pop
xchg
call
aaa
dec
push
pop
add
out
or
popa
inc
gs
xchg
in
pop
js
xor
nop
inc
loope
imul
jle
or
push
sbb
jo
loope
adc
mov
popa
inc
pop
and
mov
rorl
xchg
iret
inc
out
add
test
add
ljmp
dec
lret
and
add
test
add
xchg
orb
jno
adc
loop
mov
mov
mov
nop
int
in
outsl
push
jecxz
and
add
lock
add
push
xor
mov
adc
repnz
ret
add
ljmp
movsb
jbe
push
and
add
or
xchg
push
clc
test
jne
jp
cmpsl
iret
outsb
add
add
sti
dec
or
cmp
mov
repnz
jle
jno
xor
bnd
jg
mov
pushf
outsb
adc
or
add
outsb
dec
fstpt
xchg
lret
dec
and
add
cmp
jge
in
shl
xchg
pop
data16
push
std
and
insl
out
mov
jp
add
cmc
mov
or
movaps
add
cmp
jno
loop
loopne
movsb
adc
cmp
add
inc
test
cld
fidivl
out
push
cs
notl
loop
pop
mov
cmp
nop
xchg
lahf
mov
aaa
leave
mov
les
pusha
mov
int3
jns
cmp
loopne
push
imul
and
test
sbb
addr16
and
fnsave
lods
sub
fbstp
mov
out
call
sub
cld
xor
add
mov
and
jno
mov
mov
mov
fs
call
mov
sub
aaa
inc
sbb
lea
mov
cvtpi2ps
stc
inc
mov
rolb
add
addps
adc
add
sub
mov
xlat
fcmovnbe
pop
xor
jl
jl
adc
jb
cmp
push
mov
sbb
add
dec
out
jle
add
dec
fisubrs
add
xor
pop
call
add
int
push
jge
je
pushf
mov
fldt
mov
aas
arpl
inc
call
add
jg
mov
mov
mov
pop
sbb
sub
add
xor
mov
outsl
or
push
out
push
dec
cmpsl
push
push
mov
jg
cld
xor
pop
outsb
push
lahf
divl
inc
mov
add
mov
mov
or
xchg
fldcw
jmp
push
stos
mov
push
push
icebp
push
aaa
jbe
pop
jmp
add
sub
in
mov
aas
jmp
dec
cli
push
mov
add
popa
mov
jp
iret
je
xor
dec
mov
lods
sbb
mov
xlat
cli
add
dec
mov
testb
adc
jae
fs
add
mov
dec
sub
mov
loopne
xlat
dec
test
add
or
or
cltd
icebp
and
rorl
es
push
push
xlat
ror
mov
lods
push
in
mov
test
xorb
add
add
cs
xchg
inc
mov
ds
add
sbb
nop
inc
ja
gs
xlat
sub
add
mov
iret
dec
dec
enter
xchg
adcl
les
out
mov
jl
add
ret
mov
pop
mov
xor
sub
add
mov
mov
mov
inc
ja
stos
mov
int
enter
pop
scas
std
pop
and
cwtl
jmp
push
pop
pushf
or
pop
lods
add
mov
add
hlt
outsl
ficoms
cmc
push
and
add
add
or
push
js
jnp
sahf
lods
and
add
aaa
out
data16
shrl
out
pop
imul
xchg
idiv
adcb
mov
cmp
dec
in
or
adc
pop
xchg
xchg
sbb
or
add
fimuls
call
iret
or
jne
mov
lea
mov
mov
sbb
add
jp
mov
enter
add
popf
pop
fwait
arpl
mov
add
add
xor
jg
mov
rcr
in
pushf
pusha
mov
add
mov
mov
add
sub
and
mov
add
jecxz
sahf
daa
dec
mov
or
fisttpll
add
pop
inc
mov
and
add
mov
inc
mov
negl
sub
add
dec
sbb
lock
aas
cld
movsl
imul
mov
mov
push
push
lea
add
push
pop
sub
jo
push
inc
or
sbb
inc
rcrb
mov
pop
pop
int
in
xor
stos
inc
aam
inc
popf
mov
sub
or
adc
pop
mov
gs
cmc
jg
adc
lret
call
add
test
lds
outsl
ret
lods
jp
xchg
push
xchg
add
mov
add
xchg
setb
add
xor
cmc
adc
add
dec
jnp
repz
push
ds
mov
cmp
cmp
mov
inc
movsl
push
jge
add
andb
add
dec
add
add
and
add
pop
dec
rcll
mov
push
je
jmp
xchg
cwtl
repnz
xchg
in
xchg
dec
mov
aas
sub
add
cld
push
cmp
ret
push
adc
dec
pop
push
mov
cs
repnz
and
repz
xchg
inc
sbb
adc
cwtl
add
add
push
scas
lahf
add
xor
xchg
lret
mov
add
jbe
add
sub
add
cmp
xor
adc
adc
arpl
xchg
pop
xchg
mov
dec
mov
jg
jl
dec
mov
test
mov
test
and
mov
aam
mov
lock
mov
adc
call
addl
mov
movsb
mov
push
sbb
ret
inc
mov
pusha
mov
push
push
dec
mov
dec
rclb
or
add
xchg
adc
lret
adc
ja
push
inc
add
add
lret
mov
mull
inc
orl
and
cmp
or
add
iret
mov
cmp
fidivrs
imul
push
nop
push
or
arpl
stc
das
pop
mov
add
inc
cli
push
int3
xor
or
add
mov
mov
dec
push
add
inc
out
out
mov
int3
stos
dec
out
stc
push
dec
mov
pop
icebp
push
add
ds
mov
in
sub
aas
enter
and
mov
sub
insb
mov
mov
sub
ss
mov
xor
mov
dec
mov
mov
lea
loope
andl
test
outsb
das
add
vmaxss
mov
jge
jbe
inc
mov
and
sbb
push
dec
push
cmp
pop
fxch
mov
cmc
imul
mov
mov
inc
mov
lds
mov
lcall
or
outsb
jecxz
xchg
xor
xlat
jge
int
rolb
add
mov
test
adcb
xchg
adc
mov
out
cltd
mov
xchg
push
push
xorb
std
fisubrl
xor
mov
lret
sbb
adc
das
sub
jl
mov
add
outsl
cli
outsb
aaa
mov
fs
push
aas
pop
dec
dec
mov
pop
inc
fwait
sub
push
mov
sub
xchg
xchg
pop
mov
rorb
xor
ds
mov
pop
vmovntps
mov
cmp
nop
sub
popf
ja
jno
xchg
mov
sub
push
mov
pushf
stos
lods
arpl
add
xor
jno
repnz
inc
mov
bound
jge
lret
in
xchg
push
sbb
cmpsb
pop
xchg
ret
pop
pushf
loopne
ret
mov
and
ja
dec
repz
add
testb
add
scas
dec
mov
js
filds
loop,pt
sub
add
mov
mov
and
add
iret
xor
cmp
and
mov
ja
fnstenv
push
sbbb
mov
ljmp
sub
inc
pop
cmp
arpl
rcll
es
mov
lret
out
push
movsl
int
imul
ja
popf
xchg
mov
aad
lret
arpl
inc
mov
mov
sub
add
push
jecxz
mov
mov
mov
mov
add
out
mov
push
fwait
mov
add
mov
push
push
ja
xor
mov
mov
add
cmp
cmpl
mov
rcl
or
mov
sbb
mov
sbb
adc
inc
stos
mov
add
aaa
cmc
dec
add
frstor
stc
sbb
cwtl
nop
movsb
pop
jmp
imul
jg
jle
leave
mov
mov
cmp
inc
jecxz
mov
inc
add
shrb
push
mov
or
mov
stc
out
xor
loope
lret
mov
pop
std
add
repnz
push
mov
out
jge
stos
inc
aad
int3
xchg
lods
adc
mov
pop
enter
adc
ret
mulps
mov
mov
enter
cmp
xchg
sub
add
add
xchg
sbb
dec
inc
xchg
pop
cmc
or
hlt
mov
jge
icebp
in
movsl
roll
xchg
xor
cmp
push
cld
and
aaa
push
jb
mov
add
jmp
adc
add
js
imulb
loope
sbb
fwait
lock
xchg
cwtl
ja
or
add
aas
push
mov
and
add
xchg
xor
mov
int
adc
jae
mov
mov
or
sub
push
cltd
int
mov
outsb
mov
cmpsl
xor
mov
adc
xlat
cs
jecxz
fcoml
cmp
push
sbb
add
push
sbb
add
add
leave
bound
dec
mov
add
xchg
mov
mov
and
add
pop
fildl
mov
mov
call
add
inc
push
sbb
add
ljmp
test
push
aad
inc
mov
sbb
cli
inc
lods
pop
lods
ljmp
add
jg
xor
adc
push
pop
or
lds
bound
sbb
ljmp
inc
jle
rclb
jb
adc
push
lock
mov
clc
xchg
mov
mov
xlat
aam
in
cld
daa
fdivr
cli
push
fiadds
ret
jo
xchg
push
adc
cmpl
mov
jl
mov
and
cmpb
add
xor
mov
mov
cwtl
stc
cmp
sbb
push
mov
addr16
ret
mov
enter
push
lret
mov
fildll
mov
add
sbb
int
push
mov
and
std
sub
nop
test
cli
out
pusha
mov
jb
mov
aam
mov
cli
inc
add
add
std
in
pop
jmp
jne
outsb
or
add
je
addr16
ja
jns
xchg
inc
ja
insb
mov
fs
cld
lds
popa
jb
push
and
add
cmp
and
xor
push
in
xchg
adc
mov
inc
mov
push
xchg
jle
mov
ret
mov
test
xor
mov
inc
shll
cmp
sub
add
inc
or
ficompl
cmpsl
mov
nop
jae
fs
mov
dec
mov
add
lock
add
loope
pusha
mov
push
out
adc
aaa
fnstenv
aam
ljmp
aad
sbb
js
xchg
imul
fsts
add
aaa
lds
add
jge
sub
add
xor
loop
mov
ret
and
scas
inc
in
shlb
mov
lcall
cmovns
jno
ret
push
add
sbb
xchg
jbe
leave
out
add
mov
insl
xchg
andb
enter
int3
jle
jmp
frstor
add
mov
jb
mov
movsb
clc
jg
ret
out
inc
lods
daa
add
add
dec
sar
jb
outsl
xlat
adc
imul
popf
or
add
dec
outsl
test
icebp
dec
addb
adc
aad
sub
push
loope
mov
inc
mov
call
add
lret
mov
mov
inc
inc
aas
jg
and
add
sbb
cld
adc
mov
inc
mov
insb
mov
inc
and
je
iret
pop
push
out
ret
mov
adc
and
mov
xor
inc
sbb
jecxz
xchg
jge
or
frstor
fldl
dec
inc
cmpsb
dec
mov
add
sbb
adc
inc
push
sub
add
std
xchg
stos
into
xchg
mov
add
std
pusha
mov
data16
imul
inc
mov
lods
movsb
stos
mov
lds
xchg
adc
sbb
loop
pop
adc
fidivrl
add
js
and
lods
cmp
add
and
inc
mov
sub
loope
ss
mov
rorl
mov
pop
add
mov
sub
add
inc
fisubrs
add
mov
add
inc
into
or
push
inc
mov
push
adc
mov
add
mov
loop
nop
xor
mov
and
aad
inc
ds
cmc
stos
lret
fldl
into
imul
in
xchg
sub
sub
add
icebp
mov
sbb
cs
rorb
sarb
xor
js
lahf
jns
cmp
fwait
pop
ljmp
adc
popf
int
ret
std
sub
add
push
popa
movsb
test
call
ret
test
xchg
push
push
sbb
or
ljmp
int
shlb
dec
dec
mov
addr16
shl
pusha
mov
mov
jmp
pop
pop
add
mov
pop
inc
sbb
add
push
jns
mov
jmp
mov
cs
mov
mov
dec
pusha
mov
jg
fs
sbb
lcall
dec
xlat
out
adc
fldt
mov
add
ja
mov
dec
mov
jle
mov
mov
mov
cltd
cld
daa
and
add
stc
mov
sub
inc
mov
addr16
cmp
add
cmpsl
push
or
pop
push
mov
fwait
adc
fisttps
dec
stos
push
xor
sbbb
inc
jno
je
pop
bound
fsts
jns
fldcw
pop
cs
dec
js
sbb
xor
add
mov
out
mov
out
pop
pop
mov
push
push
pusha
mov
fadds
lea
int
ss
cwtl
hlt
lahf
loope
or
add
and
ror
outsb
or
pop
jmp
rcrl
lds
xchg
dec
mov
adc
dec
movsl
xor
inc
ret
pushf
adc
ret
out
inc
xchg
push
test
shlb
add
in
mov
push
xchg
add
fnsave
cmp
or
push
sbb
call
inc
or
daa
fldenv
add
or
or
mov
stc
mov
cmp
jg
mov
jmp
mov
fstps
test
clc
ror
inc
test
add
jmp
inc
daa
js
or
add
dec
pusha
mov
pop
pop
aas
out
adc
ds
mov
int
rep
mov
mov
hlt
pmuludq
sbb
add
push
cmp
add
push
addb
add
or
dec
dec
test
pop
mov
add
add
and
clc
std
repz
cmpsb
inc
pop
in
mov
roll
add
xor
xor
sbb
loopne
in
jnp
loop
or
cmp
mov
jno
and
lret
sub
rol
push
push
cmp
mov
cmp
jns
std
dec
inc
cld
adc
push
ret
xchg
test
cmpsb
bound
xlat
push
push
mov
roll
scas
jnp
arpl
popf
mov
ret
cmpsl
push
mov
into
mov
ret
mov
cmp
add
mov
xchg
sarl
gs
repz
mov
inc
mov
pop
mov
iret
adc
or
cmp
adc
or
mov
aad
xlat
cmp
cmp
imul
jl
cmp
sub
jecxz
outsl
fadd
dec
or
add
mov
icebp
dec
mov
test
jnp
add
mov
or
loop
jnp
inc
mov
aam
dec
xchg
pop
mov
dec
insl
xchg
mov
xlat
xor
dec
xchg
or
dec
mov
jle
std
push
aaa
xchg
and
scas
pusha
mov
lock
hlt
lock
mov
fdiv
lcall
xor
lock
ss
jae
mov
xor
stos
imul
mov
addl
pop
cmpsb
xchg
dec
lods
fnstenv
cltd
mov
fistpll
dec
mov
rcrl
dec
mov
pop
pop
jle
or
rcr
add
scas
cmc
shl
stos
xchg
lods
enter
pop
fwait
sarl
in
loopne
or
jnp
ret
test
inc
mov
and
test
ja
inc
aaa
jmp
add
insl
das
sbb
jecxz
xor
pusha
mov
add
push
mov
add
int3
lods
icebp
stc
ss
into
faddl
dec
mov
out
ret
jb
mov
andb
sbb
jnp
ret
setle
addr16
mov
or
add
pop
mov
fld
push
push
js
in
xlat
xor
outsb
pcmpeqw
mov
push
jae
mov
int3
and
out
jmp
mov
xchg
shrb
popf
xor
test
xor
add
fbld
mov
jecxz
mov
inc
jb
movl
mov
xchg
rcrl
and
mov
dec
xor
nop
mov
out
out
jae
xchg
sahf
push
xchg
or
add
sti
ret
cmp
jle
cmc
jns
push
ds
sub
add
leave
pop
inc
mov
loopne
sti
xchg
dec
popf
roll
add
loopne
aam
dec
mov
jne
mov
mov
repnz
aas
mov
test
test
push
cmc
addr16
sub
into
xchg
cmpsb
pop
add
arpl
or
xor
out
mov
add
add
out
fmull
imul
iret
push
fidivs
outsl
pop
js
loop
pusha
mov
cmpsb
lcall
ljmp
add
in
sub
mov
call
add
bnd
shlb
les
inc
ds
cwtl
push
out
repnz
add
into
cli
inc
out
and
int
pop
iret
mov
mov
movsl
call
imul
xor
movsb
mov
pop
jne
jmp
push
dec
rclb
sub
xlat
popa
fldenv
add
cmp
sub
xchg
jbe
mov
ret
adc
orb
fsts
mov
stc
lods
pop
sti
push
mov
stos
jle
mov
rorb
leave
mov
push
inc
xor
adc
xor
dec
xor
jb
sbb
xchg
insb
mov
fstpt
test
mov
mov
push
xchg
sbbb
push
cmpl
enter
add
jecxz
dec
mov
shrb
pop
pop
lea
mov
fisubl
decl
fisttpl
mov
sbb
rcll
add
sti
xor
inc
or
pusha
mov
add
pop
in
imul
int
sub
repz
ds
xchg
mov
add
dec
mov
or
call
ffreep
xor
pushf
sbb
enter
inc
pushf
push
xchg
cltd
imul
pop
aad
pop
lock
mov
and
pop
push
sub
sbb
mov
lods
fidivl
lods
out
mov
mov
pop
aas
ja
cmp
sahf
add
imul
aaa
lret
jg
jns
ss
ret
xchg
fimull
cmpsb
mov
pop
dec
repnz
test
sahf
sub
add
push
mov
mov
leave
lods
push
xlat
mov
adc
aaa
pop
lock
jns
popf
dec
jo
mov
jmp
and
mov
cs
mov
jns
mov
dec
and
cltd
pushf
shlb
ficoms
inc
mov
rolb
pop
pushf
fidivs
dec
addr16
out
sbb
mov
pop
sbb
and
pop
rorl
and
into
insl
cmp
add
mov
shlb
fsubr
roll
xchg
jnp
dec
lret
xor
sahf
lds
mov
add
and
xor
mov
mov
imul
xchg
pop
iret
rcrb
cmp
ds
sub
add
mov
mov
dec
mov
add
repz
loopne
jns
stos
and
add
push
mov
popa
pusha
mov
mov
lock
insl
pop
mov
test
inc
sahf
outsl
push
scas
pop
sti
mov
fstpt
inc
lock
stc
insb
mov
movsb
shll
mov
xchg
mov
xor
ret
and
jg
jno
fmuls
add
aam
adc
divb
int
je
adc
mov
xchg
nop
and
add
outsl
dec
js
inc
add
add
js
jo
mov
inc
sbb
inc
mov
mov
pop
je
mov
sub
add
fimull
dec
xchg
mov
sbb
sbb
fld
inc
sbb
imul
add
add
add
jnp
ds
push
jne
dec
xlat
adc
sbb
pop
icebp
adc
sbb
add
dec
pop
xchg
out
mov
or
add
adc
jmp
xor
add
cmp
xchg
daa
cmp
mov
scas
imul
pop
or
fdivrs
sub
sub
or
outsl
and
jle
sub
add
add
and
rep
dec
mov
mov
mov
pop
clc
and
mov
jmp
aaa
les
jbe
dec
mov
mov
add
out
xor
sub
add
cmp
and
jae
idiv
mov
mov
rcrb
xchg
xor
jb
or
mov
shlb
out
sti
pop
xor
arpl
inc
or
mov
or
pusha
mov
mov
mov
inc
cmc
shlb
add
insl
flds
enter
xlat
push
inc
mov
mov
lret
inc
jns
dec
mov
push
mov
push
push
jo
testl
mov
mov
add
xchg
js
cmpsl
stos
jmp
pop
popa
or
inc
mov
mov
mov
mov
je
mov
mov
lods
and
mov
xchg
pop
insl
rol
mov
jp
dec
mov
fcmove
stos
mov
mov
adc
adc
dec
inc
mov
push
in
neg
adc
push
dec
mov
aas
out
mov
sbb
lret
cmpsl
pop
in
sti
inc
and
push
jl
aas
es
pop
adc
push
push
or
add
add
js
mov
call
popa
sub
add
cltd
xchg
mov
or
xorb
addr16
add
jns
addl
xorb
add
out
and
fimuls
add
int3
cmc
nop
mov
pop
mov
pop
fsubr
and
out
in
inc
loopne
std
dec
mov
mov
out
in
movsb
jecxz
scas
adc
cmp
mov
adc
mov
lret
mov
scas
mov
dec
out
push
in
mov
xor
push
daa
mov
and
insb
mov
fsubl
imul
imul
and
push
xchg
sub
int3
lock
dec
test
mov
and
fadds
mul
sbb
stos
xor
ds
sub
push
mov
stos
test
inc
push
mov
mov
cmp
rcll
add
fwait
add
mov
mov
das
test
jae
mov
add
cmp
push
cmpsl
test
enter
add
or
add
iret
cli
cmpsb
push
testl
inc
xor
cmpl
jae
test
dec
cmpsl
test
popa
cltd
imul
fcoms
pop
push
mov
imul
add
mov
jge
adc
or
and
adc
xchg
sub
push
int
xchg
int3
xchg
arpl
lret
gs
pop
addr16
lods
xor
jmp
test
add
cmp
mov
pop
sub
jno
jns
mov
int3
rorb
ljmp
addr16
cmp
sub
mov
add
test
fistpll
cmc
aas
out
lret
dec
sub
add
rcrl
addr16
outsb
jnp
dec
test
inc
xor
lds
dec
std
inc
mov
out
dec
mov
cmp
mov
aaa
add
mov
test
dec
fstpt
outsb
lahf
test
roll
gs
fadds
mov
or
dec
sub
into
push
aam
dec
frstor
mov
cmp
jne
adc
lods
out
mov
jge
mov
add
add
add
add
clc
cmp
jno
in
bound
cmp
aaa
jae
mov
call
jnp
mov
mov
jbe
clc
inc
sbb
push
and
rolb
imul
mov
scas
xchg
push
sub
mov
xchg
js
pop
and
add
push
pop
or
adc
movsl
or
jns
mov
enter
js
scas
sar
jb
pop
mov
push
test
subb
inc
sbb
lret
xchg
lods
shrb
mov
mov
mov
inc
mov
jnp
or
adc
mov
or
jmp
movsl
gs
cmp
lcall
adc
cwtl
or
add
pushf
je
cmp
jo
push
jb
sub
and
mov
push
test
stos
popf
pop
insl
pop
sbb
es
insl
out
jnp
es
xlat
sbb
add
dec
mov
mov
mov
ffreep
sub
std
addr16
hlt
inc
mov
or
out
mull
push
jge
adc
mov
sub
add
les
mov
mov
leave
pop
mov
push
stos
mov
ss
test
shlb
fs
sbb
push
pop
xlat
in
test
out
fisubrl
pop
dec
mov
std
add
xchg
mov
xchg
xor
das
and
jno
xchg
jg
stc
ja
loope
cmpsb
sub
xchg
dec
mov
mov
xor
cmp
fsubrl
js
adc
adc
pop
sti
cli
xor
sbb
nop
icebp
orb
inc
push
sub
sti
cmp
daa
out
mov
xchg
add
add
mov
test
scas
out
push
nop
dec
mov
sbb
push
adc
pop
jo
je
push
outsb
ds
dec
iret
push
lret
lcall
insb
mov
add
into
ljmpw
mov
loop
mov
sub
out
or
das
cli
inc
inc
mov
fcoml
mov
jecxz
test
add
pop
stos
stc
ss
ss
test
pusha
mov
sahf
xchg
in
sbb
lods
push
or
jge
or
add
and
jl
fmuls
add
sbb
lods
adc
cmp
mov
outsl
lret
adc
fs
or
daa
sti
pop
dec
mov
jns
mov
ret
mov
ljmp
mov
dec
pop
sarb
aaa
push
imull
mov
jno
add
mov
insb
mov
mov
push
xor
shrd
dec
or
mov
xor
inc
mov
xchg
inc
adc
inc
cld
push
pusha
mov
mov
pop
push
pop
jmp
adc
mov
push
push
bound
mov
iret
movsl
jns
and
aam
sti
push
or
int
add
lahf
sbb
fs
rcr
enter
xor
mov
jae
dec
movsl
inc
enter
xlat
out
mov
jae
fmuls
jo
dec
dec
mov
cmp
mov
fidivrs
mov
iret
enter
add
cmp
push
push
test
leave
inc
mov
es
clc
lods
test
pop
and
pop
dec
jnp
out
xor
mov
jge
popa
xchg
into
xor
push
sbb
lea
mov
bound
add
or
add
lret
mov
xchg
add
subl
pushf
sub
out
jmp
pop
mov
push
xchg
aam
arpl
mov
add
mov
decl
push
sbb
cmp
bound
jo
clc
lds
into
test
sti
cmpsl
cmp
fidivrl
mov
jecxz
jg
adc
add
cmp
subl
adc
icebp
enter
add
and
add
xor
aaa
mov
test
mov
imul
das
xor
jo
xchg
aaa
repnz
mov
std
xchg
ret
je
call
jl
dec
mov
inc
ja
or
out
leave
push
mov
cltd
subb
or
push
div
mov
pop
mov
mov
fstpl
stc
or
stos
adc
bound
adc
repnz
inc
insb
mov
mov
dec
mov
add
ss
ds
mov
pop
jmp
movsl
inc
popf
adc
xchg
mov
jae
scas
imul
subb
ret
inc
sub
add
sahf
mov
xor
push
xor
call
test
fwait
or
add
cld
jns
dec
test
sti
pop
cmp
les
cmp
dec
mov
in
movsb
iret
xchg
push
or
add
fldenv
mov
scas
inc
mov
jns
xor
hlt
add
mov
out
add
mov
mov
jl
inc
adc
outsb
sub
roll
insb
mov
lret
in
icebp
and
or
jle
cmp
inc
mov
aam
mov
sub
rorb
cmp
out
loope
shr
sbb
roll
out
test
add
jp
or
mov
and
es
mov
subl
xchg
sahf
out
push
insl
sbb
mov
mov
subl
jb
mov
nop
jle
in
shlb
fbld
mov
orb
xor
push
inc
cld
and
mov
dec
mov
pop
push
and
mov
jmp
aaa
add
add
mov
cwtl
or
hlt
loope
jno
or
add
jno
xor
aaa
pop
lds
mov
push
sub
cs
cmp
mov
xchg
mov
loop
adc
add
ja
das
imull
mov
pusha
mov
cmp
add
rorb
cmp
push
cmpsl
pop
xchg
loope
push
repz
add
add
rol
dec
sub
push
pop
in
imul
inc
sbb
push
add
dec
mov
add
add
bound
mov
test
add
insb
mov
push
jbe
add
ficoml
mov
xchg
cmp
dec
mov
lcall
shlb
subb
add
xor
lahf
jbe
sub
arpl
insl
fs
popf
mov
jns
xor
mov
or
xchg
mov
mov
and
add
sub
jecxz
add
xchg
xorl
add
mov
mov
jge
stc
outsb
inc
mov
dec
push
push
mov
mov
inc
sub
xchg
dec
loope
es
or
sbb
dec
mov
int
jno
test
xchg
inc
mov
mov
and
add
add
xchg
hlt
in
adc
addl
jns
xchg
push
gs
nop
xlat
cmp
in
or
mov
add
pop
pushl
pop
mul
sub
add
push
pop
or
or
dec
or
mov
sbb
test
dec
mov
bswap
pop
lods
jp
xchg
push
sub
mov
jne
das
and
add
or
add
lock
daa
sub
add
sub
adc
mov
arpl
mov
add
psubd
adc
mov
mov
add
sbb
mov
mov
imul
movsl
add
add
inc
inc
push
jno
andb
imul
jmp
adc
stc
dec
dec
mov
cmp
dec
xor
fists
js
jp
lods
mov
js
pop
add
mov
push
jns
dec
loopne
mov
imul
out
fwait
push
push
inc
mov
mov
cmp
mov
add
add
mov
sbb
add
add
jge
pop
pop
inc
mov
pusha
mov
or
cltd
fldcw
and
repz
ss
mov
push
jns
leave
pop
popf
pop
fmull
pop
aad
mov
or
add
test
dec
cmpl
and
add
or
lea
add
lea
mov
push
cltd
cltd
int
outsl
mov
xchg
orb
add
imul
popf
and
xchg
xor
shll
repz
shrl
mov
rolb
xchg
mov
stos
fimull
mov
stc
daa
in
or
pop
push
repz
add
fdiv
jl
xlat
mov
xchg
test
xchg
push
adc
negb
and
sbb
add
adc
ficoml
in
push
les
je
subb
or
aad
mov
dec
addl
push
sbb
pop
jg
call
pop
mov
mov
jg
add
pop
push
push
dec
pop
and
aaa
cli
mov
cmc
and
add
cmp
xorl
jge
sbb
mov
or
ja
fs
inc
mov
lret
ret
ds
out
jmp
pop
inc
shlb
jp
jae
dec
mov
add
dec
inc
mov
fnstsw
arpl
cmp
and
add
stc
pushf
push
aas
shrb
in
sbb
aam
loop
jle
dec
jns
mov
add
add
dec
sar
sbb
sbb
pop
or
push
outsl
iret
rcrb
add
aaa
lods
je
mul
lahf
popa
pop
dec
cmp
xchg
inc
push
cli
sub
dec
xchg
add
fnsave
mov
cmp
loop
mov
test
fisttpll
add
sbb
add
jb
adc
std
mov
add
push
add
add
ret
js
adc
mov
xchg
fldl
jl
jle
mov
mov
add
fwait
mov
xlat
mov
mov
push
scas
cmpsb
enter
or
xchg
mov
daa
inc
adc
or
pop
add
add
inc
mov
fs
test
add
push
and
add
jbe
pop
or
add
push
loopne
pop
aad
dec
jne
mov
xor
add
mov
add
inc
jb
dec
mov
dec
inc
mov
mov
sub
xor
jmp
dec
mov
mov
pop
lret
and
mov
xchg
adc
fwait
cmp
lcall
and
cld
or
mov
mov
inc
aaa
or
mov
aam
pop
out
adc
fistpll
pop
test
adc
jae
add
pushf
cmc
call
fxch
sti
pop
jg
mov
lahf
push
clc
or
add
mov
mov
notb
inc
jle
dec
pop
adc
lret
jp
lcall
addr16
bound
add
out
xor
xor
jecxz
and
mov
push
lcall
push
jno
test
test
xchg
leave
jg
inc
into
mov
inc
mov
enter
sbb
mov
test
stos
repnz
cli
cmp
iret
xor
sbb
xor
popf
test
and
addl
add
mov
jg
mov
mov
add
xchg
fsubrl
add
scas
fmull
or
loope
xchg
fists
sarl
test
or
or
add
lret
jecxz
add
fs
pop
inc
adc
add
js
mov
fwait
out
lds
lahf
adc
inc
push
aaa
sbb
add
inc
mov
dec
rol
pop
dec
adcl
and
data16
icebp
fcoms
mov
add
jmp
mov
lret
dec
sub
sbb
pop
jo
pusha
mov
dec
xchg
adc
or
add
mov
mov
pop
xchg
xor
cs
add
into
dec
add
add
dec
mov
mov
or
push
loop
stos
aad
push
cmp
add
lret
addr16
xchg
lret
les
mov
ja
les
lret
adc
stos
cmpsl
mov
pop
add
add
aad
pop
mov
xlat
jo
mov
neg
in
and
add
xor
sub
add
stc
push
hlt
fwait
in
loopne
and
add
dec
mov
into
dec
xor
pushf
aas
bnd
mov
shl
jns
push
add
notl
push
scas
stos
bound
mov
aam
sub
mov
out
mov
leave
xchg
jae
nop
mov
or
dec
in
inc
mov
mov
es
cmp
js
test
jno
cmpl
lahf
and
fisubrl
mov
add
push
mov
push
xchg
lods
push
mov
sti
or
add
cs
daa
ficompl
movsl
add
out
shlb
add
cmp
mov
add
mov
add
clc
push
mov
mov
add
xor
or
add
or
pop
adc
jo
mov
or
add
inc
xor
filds
mov
movsbl
pop
fucomp
test
or
adc
jg
pop
xchg
lcall
stos
or
or
in
jl
sub
add
fdivrs
cmp
mov
add
xchg
in
stc
xor
mov
mov
cmpsb
push
ficoms
lods
xor
sti
jnp
add
add
out
aas
or
add
inc
push
add
sub
add
stc
push
lock
xor
scas
mov
movsl
push
or
pop
push
mov
sbb
or
add
jmp
mov
cli
ja
das
dec
xchg
inc
int
gs
ja
subl
in
inc
mov
fistpll
rcr
xchg
xchg
push
mov
ror
dec
push
insb
mov
loop
das
jl
mov
inc
mov
dec
jle
bound
add
xorb
inc
mov
mov
aam
lahf
dec
stos
push
fisubs
lahf
cwtl
cmp
fs
lods
jns
shl
mov
adc
fwait
push
adc
mov
dec
push
fildl
addr16
add
xchg
repnz
aam
mov
insb
mov
pop
jmp
add
mov
mov
in
jo
mov
push
leave
sub
mov
add
lea
pop
sahf
inc
fwait
pop
pop
push
sbb
xor
add
mov
out
mov
inc
mov
je
mov
testb
mov
data16
outsb
nop
fsubr
sub
xchg
nop
flds
popa
mov
xchg
lea
clc
lods
sbb
pop
mov
bnd
cmp
add
add
stos
repz
setne
clc
fsubl
lods
sbb
add
mov
mov
cmp
push
sti
push
pop
push
jb
enter
add
in
icebp
arpl
add
mov
jne
mov
lds
xor
xor
add
mov
add
mov
mov
outsl
mov
jp
lret
dec
mov
xor
xchg
idivl
mov
test
fnstenv
or
fldl
ret
pop
mov
mov
mov
pop
mov
or
push
mov
mov
inc
push
mov
mov
jns
or
add
add
add
push
sub
jg
adc
add
test
lret
and
add
mov
mov
pop
sbb
add
mov
sub
dec
mov
stos
cmp
out
inc
das
mov
lds
js
mov
fimull
pop
je
mov
fstp
inc
sub
add
jmp
fyl2x
mov
and
add
jge
dec
mov
mov
pop
push
out
push
insl
adc
mov
add
jb
jns
or
fldt
aaa
inc
xchg
dec
andb
jmp
sbb
adcb
mov
inc
scas
in
pop
cmpsl
dec
inc
mov
shl
mov
mov
jns
push
je
xchg
push
mov
cmp
cltd
gs
cmp
mov
push
les
call
add
and
fmuls
add
scas
inc
add
cmc
scas
enter
fldcw
sbb
mov
mov
adc
js
xorl
mov
pop
adc
mov
inc
ljmp
shrb
add
pop
or
or
add
sub
jl
push
mov
mov
and
add
iret
xor
add
pop
std
cmp
sti
jnp
or
inc
je
xchg
sub
repnz
cmc
push
icebp
and
and
ds
imul
cwtl
loopne
pushf
mov
loop
or
xchg
add
sbb
dec
mov
into
fists
and
add
sbb
sub
jecxz
and
les
add
inc
push
jl
sbb
adc
ds
cmpsl
xlat
inc
inc
push
pusha
mov
out
aad
add
sahf
mov
jmp
mov
jmp
xchg
fsub
dec
enter
xor
icebp
repnz
arpl
push
jae
mov
mov
pop
sbb
sub
add
add
es
jl
fwait
cs
mov
fcompl
fdivrs
rorb
mov
cmpsb
mov
jae
push
pop
shl
daa
cmp
sti
fnsave
loope
rolb
push
pop
mov
jge
mov
ret
out
mov
das
in
mov
mov
fcomi
and
add
add
cwtl
or
movsl
and
out
or
das
inc
mov
jmp
cmp
sub
mov
insl
cmp
xchg
add
stos
push
xor
outsb
rorl
sbb
pop
or
add
cmpsb
test
clc
insb
mov
and
push
sahf
repz
in
mov
jl
pop
mov
imull
xor
into
cmpsb
mov
mov
pop
aad
dec
xorl
adc
mov
in
sbb
mov
iret
add
mov
add
scas
cmp
dec
mov
dec
or
dec
xchg
mov
pop
add
fs
lea
add
push
mov
add
lahf
dec
mov
push
aas
sti
pop
push
mov
ljmp
mov
mov
and
and
add
or
add
pop
call
fidivrl
add
add
and
dec
cld
pop
fsub
mov
sub
rorl
lcall
es
and
adc
outsb
dec
ja
outsb
add
add
mov
add
jecxz
push
in
and
push
lcall
mov
sub
scas
pop
nop
jecxz
cmpsl
outsb
addr16
shll
sbb
push
pop
data16
and
insb
mov
mov
dec
lret
cld
mov
sbb
add
out
popa
jae
add
inc
out
inc
cmpsl
outsl
cmpsb
jae
add
arpl
add
mov
gs
mov
mov
mov
push
dec
ja
lret
arpl
xchg
jbe
jne
push
jne
and
add
movsb
ds
and
and
fisttpll
add
outsl
pushf
push
pop
cmp
inc
int3
loop
adc
hlt
jg
out
mov
add
rcrb
das
cmp
inc
mov
sub
mov
add
jmp
cmp
pushf
jbe
xor
or
push
sub
loope
outsb
je
mov
int3
push
mov
dec
push
xchg
popa
inc
mov
outsl
fs
xchg
ret
xchg
ljmp
add
pusha
mov
ljmp
daa
mov
mov
shll
arpl
cmp
rorb
cmp
mov
xor
bndstx
int
sahf
xlat
push
xchg
pop
leave
movsl
cmpsb
in
jb
in
cmp
outsl
ret
pop
jmp
mov
mov
mov
mov
out
sub
add
xlat
push
push
dec
or
xchg
jno
repz
or
add
test
xor
add
in
cmp
push
pop
daa
daa
sbb
punpckldq
scas
xchg
lea
jg
cmp
fcoml
push
arpl
outsb
outsb
adc
mov
xor
leave
ss
mov
cli
popl
add
jne
sar
sbb
insl
in
imul
je
or
dec
repz
daa
ret
mov
outsl
inc
add
adc
pop
arpl
les
inc
ljmp
add
jns
into
pop
mov
inc
and
outsb
and
add
xor
sub
add
xchg
xchg
add
mov
bswap
jo
xchg
stc
mov
cmpsb
xchg
add
loope
mov
shll
mov
repz
fs
xchg
mov
add
stos
mov
bound
mov
push
popa
lock
xchg
adc
mov
outsl
xor
js
loopne
imul
jb
insl
ljmp
scas
in
mov
mov
jb
movsl
loopne
pop
mov
inc
inc
mov
aas
aaa
xchg
mov
jo
mov
hlt
or
add
dec
cmpsb
add
add
xlat
nop
jnp
push
addr16
xchg
outsl
and
mov
push
rolb
xor
xor
mov
iret
pop
loopne
pop
cli
cmp
mov
js
loope
or
outsb
mov
clc
ss
decl
push
pop
into
or
test
stos
jl
jbe
add
mov
fcoms
push
mov
xor
sbb
jp
fs
fbstp
cmp
sub
add
data16
inc
push
outsb
aad
imul
adc
pop
dec
inc
mov
cmp
add
mov
jp
jnp
enter
mov
rcll
inc
enter
nop
movsb
xlat
push
pop
pmullw
cmp
cmp
or
in
out
jl
pop
int
repz
mov
mov
mov
mov
add
ret
inc
push
pop
cli
sbb
insl
cmc
mov
add
sahf
or
stc
mov
out
sbb
mov
cmpb
cmp
stos
test
pop
cltd
mov
rcl
rdtsc
push
repz
repnz
inc
les
call
add
push
lods
pop
das
push
push
mov
add
lods
push
pop
je
or
or
test
mov
xchg
jge
insb
mov
mov
mov
es
es
daa
ljmp
icebp
pop
cltd
mov
mov
lret
sub
add
xchg
add
mov
sbb
dec
push
cmp
cmp
cmc
shrb
push
xlat
mov
add
insl
out
xor
jne
bound
add
inc
lds
sbbl
mov
and
rorl
inc
add
mov
xchg
call
jp
mov
ds
popl
ds
adc
insl
xchg
fucom
test
push
lahf
pop
dec
in
push
inc
xchg
pusha
mov
mov
pop
or
cli
dec
mov
add
shrb
add
cmp
jbe
sub
adcl
xor
sti
jo
out
mov
xlat
inc
pop
sbb
mov
add
rorb
pop
push
jnp
scas
lds
mov
add
pop
push
roll
outsl
mov
sub
add
or
pusha
mov
lods
jmp
mov
xchg
mov
add
add
mov
mov
xchg
in
inc
dec
mov
add
jle
pushf
sub
add
xor
cmp
add
or
aas
ss
jne
mov
cmp
add
in
mov
push
sahf
je
jecxz
xchg
xor
xor
add
pushl
mov
mov
aad
andl
mov
pop
push
mov
mov
mov
sub
test
pop
mull
stc
leave
push
add
jne
into
sub
add
imul
or
clc
pextrw
add
add
xor
data16
je
mov
mov
ficoml
mov
arpl
mov
mov
jnp
mov
or
add
cmc
es
imul
mov
popa
sahf
mov
movsb
fildll
mov
inc
mov
dec
mov
mov
or
inc
xchg
sbb
mov
add
mov
fs
and
jmp
xor
rcpps
into
or
inc
arpl
add
sar
jmp
sub
sub
sbb
add
sbb
nop
sub
lret
or
xor
call
cli
orb
mov
cmp
ret
aaa
hlt
iret
les
push
add
ss
jno
jmp
fsubrs
push
fwait
pop
mov
imul
dec
dec
fdivp
mov
cltd
icebp
cmp
fdivs
mov
inc
and
mov
adc
dec
and
dec
adc
mov
scas
cmp
outsl
popf
stc
xor
popa
cmpsl
mov
je
fcmovu
fisttpll
mov
leave
push
xor
shll
ret
fistpl
call
imul
pop
mov
push
sub
stos
jne
pop
or
out
jne
cmp
ljmp
add
lods
cmpsl
das
add
add
fs
scas
dec
sub
mov
add
and
in
jecxz
sbb
push
cld
dec
mov
dec
adc
fnstcw
adc
aam
mov
pop
andl
add
or
add
jae
or
add
xor
leave
adc
mov
jmp
stc
loop
test
int3
cmp
add
and
inc
test
cmp
jo
in
test
mov
aam
mov
in
add
add
neg
push
scas
shl
cmp
push
cmp
push
push
in
push
adc
mov
mov
dec
mov
xchg
xor
add
mov
inc
addl
add
or
cmp
or
mov
push
xor
adc
lahf
and
add
mov
cmc
fwait
arpl
fimuls
insl
lds
dec
inc
or
repz
arpl
nopl
add
jno
imul
das
scas
scas
mov
out
stos
ss
xlat
rol
subl
rcrl
imull
lcall
lret
shl
outsb
push
inc
insb
mov
mov
sub
add
pop
ljmp
pop
push
dec
mov
es
test
shrl
add
add
xor
mov
test
mov
add
or
stos
dec
cli
lret
ret
and
mov
test
pop
pop
inc
or
adc
add
dec
pop
or
int3
clc
int3
push
sub
add
or
add
adc
pop
push
adc
jne
fbstp
sub
mov
and
popf
mov
mov
add
sbb
push
pop
pop
push
rcrl
arpl
sub
add
cmp
jb
adc
mov
push
jp
adc
add
pop
rcrl
adc
xor
add
enter
pushf
pop
leave
sahf
stos
mov
sbb
leave
jae
sub
out
in
xchg
or
mov
scas
pop
or
shrl
add
add
ret
inc
mov
sbb
push
xchg
enter
mov
movb
sahf
add
inc
cmpsb
insb
mov
sub
mov
adcb
pop
sub
add
adcb
out
or
xlat
int
adc
idiv
cs
setno
repnz
mov
add
sub
pushf
push
jno
inc
jbe
and
add
mov
sbb
movsl
inc
push
data16
sub
mov
add
fimuls
pushf
into
and
daa
pop
shl
mov
mov
mov
fs
and
add
lahf
push
xchg
and
adc
mov
mov
push
push
out
daa
popa
or
jnp
jb
outsb
cmc
sbb
sub
add
pop
inc
pop
xchg
fwait
mov
fs
mov
adc
pop
xor
test
mov
lcall
pop
mov
movsb
mov
jbe
leave
sbbb
jge
bound
call
mov
out
out
in
fidivrs
int3
jno
xor
adc
sub
push
xor
adc
sar
cli
cmp
testl
cmp
aas
subl
add
pop
xchg
nop
cmp
dec
mov
xchg
pusha
mov
and
mov
cmp
jmp
divl
add
ja
mov
and
xchg
out
sbb
and
adc
jp
mov
pop
out
fldcw
out
jae
sub
push
lods
mov
jge
adc
or
jge
sub
and
push
dec
pop
mov
mov
cmp
cltd
lock
xchg
std
movsb
jns
in
sub
add
sbb
add
add
pop
xchg
inc
sarb
scas
addr16
divb
out
cmpsl
add
ret
das
cli
enter
bound
fsubrl
fs
push
add
add
test
adcb
sub
fs
testb
and
push
bound
xor
clc
test
mov
notl
mov
mov
dec
mov
in
dec
ja
js
pop
cmpsl
or
add
cmpsl
cmpsb
cmc
cltd
or
mov
add
push
mov
add
sub
add
add
adc
rol
mov
dec
pop
mov
cld
ret
cli
mov
mov
add
cltd
movsl
xchg
testb
mov
lods
pop
and
add
test
loop
aad
xchg
jns
rcrb
dec
mov
ljmp
mov
clc
cltd
mov
push
scas
push
add
adcl
mov
add
leave
adc
arpl
inc
mov
fldln2
xchg
divl
cmp
push
dec
mov
mov
add
pop
scas
pop
test
aam
dec
mov
jg
push
push
add
jmp
sbb
add
inc
dec
fwait
adc
das
ret
ja
mov
inc
jb
les
rorb
cmp
js
or
pop
ret
mov
testb
pop
pop
cmp
adc
mov
add
mov
jae
add
mov
out
cmpsl
in
mov
mov
add
xchg
bound
repz
jp
inc
mov
xor
cmpb
stc
ficompl
sbb
mov
inc
mov
mov
add
fsts
and
call
sbb
out
mov
int
xchg
cmp
or
xor
xchg
mov
cwtl
cltd
mov
rol
cmp
add
fwait
imul
mov
or
mov
mov
inc
dec
inc
mov
fs
push
jbe
in
inc
mov
je
add
inc
mov
outsb
xchg
adc
mov
adc
jnp
adc
lret
pop
sbb
xor
out
test
add
scas
xchg
mov
jne
jmp
inc
jmp
xchg
fstl
mov
mov
mov
and
jp
adc
cmp
jge
cmp
jbe
nop
add
cmp
mov
popa
add
add
aad
pop
add
add
xlat
jnp
sub
add
ds
mov
loop
xor
mov
ljmp
aam
mov
push
fcmovnb
push
ja
aaa
shrl
add
adc
sbbb
movsl
sub
scas
mov
sbb
or
adc
mov
mov
insl
into
arpl
add
scas
ja
ljmp
mov
orl
mov
aas
int
pop
mov
pop
dec
mov
add
call
jmp
cmp
mov
and
add
shll
mov
fiadds
add
or
xor
fstps
mov
jg
or
mov
add
enter
add
or
je
lea
xchg
jmp
and
inc
mov
stos
jo
or
push
std
lea
mov
cmp
mov
mov
pushf
xor
cmp
mov
push
and
test
push
push
sub
cmp
sbb
fstpt
add
xchg
loop
mov
ret
addl
mov
mov
inc
mov
mov
call
cld
or
add
sbb
mov
insb
mov
lea
or
pop
fcoml
fstp
sbb
mov
jo
adc
inc
mov
fwait
xor
addr16
mov
and
add
dec
jb
cmp
in
out
cmc
lods
lret
test
mov
fidivrl
sti
xor
jecxz
mov
cs
mov
and
sbb
mov
fmull
pslld
loope
popa
mov
inc
repnz
xor
faddl
or
add
mov
lret
inc
pop
push
stos
aaa
mov
bnd
fdivrs
pop
pop
pusha
mov
mov
or
add
insb
mov
xchg
push
cwtl
pop
cs
adc
lcall
cmc
scas
cmp
add
sub
xchg
repnz
sbb
stos
mov
mov
ret
ds
dec
aas
lock
mov
sub
inc
xor
lret
jns
push
or
into
mov
out
cmpsl
sti
shlb
out
jb
or
scas
ficomps
mov
cmc
shl
mov
fs
sub
push
mov
sub
add
xor
pop
xor
sub
inc
mov
les
push
mov
add
ret
call
add
fbstp
por
mov
int3
jns
and
out
daa
adcb
bnd
mov
scas
das
pop
insb
mov
add
fisubrl
movsl
test
jns
out
jle
sub
jno
xor
cmpsl
inc
js
mov
push
cmp
pop
loope
or
clc
sub
add
push
and
xchg
sbb
cmp
or
mov
sti
subl
cmp
push
inc
mov
cmp
jo
sbb
shll
adc
add
mov
cli
sahf
lea
loop
sbb
jb
jns
subb
xor
cld
xor
push
aaa
negb
inc
mov
cmpsl
push
scas
xor
sbb
cltd
imul
cmp
add
sub
jnp
mov
out
add
push
pop
in
mov
sbbl
sub
add
sbb
mov
iret
insb
mov
mov
mov
je
cmpl
scas
test
cli
in
mov
lahf
adc
stos
pop
sbb
cltd
das
mov
jge
xlat
out
push
fiaddl
add
clc
mov
cmp
iret
les
notl
sub
hlt
fs
add
cli
push
adc
jns
or
add
mov
inc
jge
jecxz
mov
add
mov
mov
arpl
adc
cmp
add
loop
pop
stos
jge
mov
dec
ds
movsl
dec
or
pop
xor
outsl
mov
popf
jmp
xor
mov
adc
cmpsl
inc
mov
xor
add
sub
out
mov
or
fwait
int
repnz
cmp
cmp
inc
stc
push
mov
mov
mov
lahf
in
leave
ljmp
sbb
mov
sub
dec
adc
or
lods
dec
pop
jmp
mov
add
add
call
adc
stc
lea
stos
test
jno
add
jns
add
inc
bound
gs
mov
add
jbe
mov
outsb
inc
fs
in
pop
iret
jmp
ljmp
mov
mov
aad
push
and
add
mov
xchg
xor
lock
loopne
addr16
popf
es
adc
arpl
fstl
mov
jne
dec
inc
adc
mov
mov
sbb
sbb
ds
pop
jns
mov
popa
fsts
or
sub
sbb
in
js
push
sbb
inc
fldcw
add
aas
dec
inc
mov
inc
jno
mov
jp
adc
mov
add
jne
inc
cmp
or
out
pop
and
push
insl
in
jb
jecxz
repnz
mov
xchg
ja
inc
sbb
test
lret
mov
int
int
mov
repnz
nop
ja
mov
add
add
push
fcoml
nop
iret
and
jl
push
repz
mov
and
mov
pushf
mov
jmp
or
add
sbb
add
cmpsl
add
addr16
lock
insl
sub
add
mov
mov
pop
and
and
sub
add
lods
sub
sbb
dec
pop
cmpsb
inc
loopne
lock
jne
je
pop
pop
pop
add
ljmp
test
mov
mov
sbb
push
jae
add
jne
xor
dec
fimull
jecxz
pop
mov
or
push
sbb
fwait
xor
inc
xchg
sub
add
sub
ljmp
mov
cmpsl
outsl
ja
test
xchg
mov
repnz
movsl
sbb
lea
sub
add
add
mov
fidivrs
mov
and
into
popf
fisttpll
add
iret
out
jb
test
stc
lahf
sbb
jge
or
xchg
out
push
and
add
inc
sahf
inc
int
scas
adc
mov
or
adc
push
or
imul
out
jl
inc
xor
mov
test
mov
xchg
dec
push
fstpl
movsb
js,pn
push
adc
cmpl
pop
add
jo
lods
test
jmp
inc
mov
jl
clc
pop
jo
cltd
push
lret
add
enter
and
add
insb
mov
out
adcb
mov
test
push
dec
mov
xchg
fs
fdivs
and
out
mov
mov
sbb
or
add
arpl
adcb
xchg
and
mov
pop
jle
xchg
mov
pop
mov
sub
std
and
cmp
jl
xchg
ja
mov
xor
mov
loop
push
sub
fnstcw
aaa
scas
inc
cmc
sub
xorl
xchg
fmulp
clc
jo
sub
mov
add
fs
mov
pop
xchg
shlb
cmpsb
xor
jne
sbbb
dec
mov
mov
cmp
testl
or
add
jmp
xchg
fists
daa
negb
insb
mov
rorl
mov
aas
out
mov
dec
add
xor
loop
jmp
adcl
add
sub
mov
cmp
dec
mov
lret
sub
add
and
out
dec
ljmp
imul
mov
sbb
inc
cmp
mov
xor
es
ss
add
leave
sub
add
pop
test
push
cmpl
or
adc
cmp
test
and
mov
adc
loopne
jl
adc
mov
push
jle
cltd
jp
inc
cld
divb
push
daa
adc
insl
cmpsb
call
add
out
push
divl
aad
sub
add
mov
jae
sbb
movups
mov
jo
and
push
shr
xorl
or
xchg
dec
jmp
add
insl
pop
in
pop
xchg
lds
or
mov
dec
cmp
aam
xchg
push
mov
out
icebp
and
add
sbb
add
pop
in
xchg
pop
lcall
jmp
pop
push
adc
and
inc
data16
adc
nop
pusha
mov
mov
and
and
xor
daa
les
mov
and
dec
adc
mov
fcmovne
mov
or
sbb
mov
add
add
sti
jbe
in
test
bound
dec
mov
popl
mov
jno
pop
push
xor
mov
bound
mov
add
cs
ss
xor
or
shlb
mov
out
icebp
or
add
fildl
adcb
push
sbb
ja
sbb
fs
addr16
mov
mov
push
lds
mov
mov
mov
fmulp
fldln2
inc
pushl
add
add
pop
popf
jl
dec
mov
iret
inc
xlat
or
add
push
repz
mov
sub
add
sub
add
cwtl
scas
add
mov
sub
pop
cmpsb
pop
js
add
lea
xchg
out
cmp
xor
add
or
fimull
mov
mov
add
lret
test
fcmovne
test
or
add
xchg
add
add
push
lret
xor
adc
cmp
add
mov
cmpsl
mov
push
pop
mov
mov
lods
mov
add
lret
repnz
mov
mov
add
xor
test
add
xchg
sub
xchg
cmp
mov
adc
cmp
mov
adc
add
jge
movsl
xor
repnz
outsl
hlt
lea
push
fdivrl
lea
mov
mov
pop
sbb
test
ret
cmp
mov
shrb
or
in
adc
jecxz,pt
xor
adc
shrl
shll
inc
test
lcall
mov
add
popa
push
xchg
lcall
insb
mov
outsb
fcompl
pusha
mov
xchg
gs
es
push
push
outsl
or
or
add
clc
pop
xchg
dec
cmp
add
js
loope
xlat
sub
into
push
inc
mov
push
fidivrs
ss
popa
ljmp
stos
aam
