cmp
mov
add
mov
mov
pop
enter
mov
aaa
and
mov
mov
xchg
inc
add
cmp
leave
pop
loope
sub
mov
push
adc
mov
in
loope
jbe
and
mov
sbb
xchg
es
jle
out
mov
popf
loop
mov
inc
push
in
stc
leave
out
inc
test
mov
mov
loop
mov
pop
xor
mov
add
and
mov
test
add
mov
das
and
mov
mov
dec
stc
pop
mov
mov
addb
cli
jnp
jp
add
mov
lods
fildl
mov
repnz
and
mov
lahf
cli
sahf
xor
mov
test
mov
out
lret
repz
pop
lahf
repz
add
xchg
inc
adc
mov
add
mov
add
popa
sub
push
lret
add
adc
pmuludq
int3
xchg
sbb
imul
mov
push
add
cmpsb
out
xlat
xor
out
xlat
test
and
mov
mov
mov
mov
sub
xor
add
mov
mov
mov
addb
pop
add
cs
pop
sub
aas
jg
push
pop
mov
stos
mov
adc
fldcw
ja
iret
imul
mov
add
dec
jmp
add
outsb
pushf
mov
mov
mov
add
mov
mov
add
xchg
pop
cmp
popf
fadds
dec
imulb
push
leave
or
add
xlat
xor
jl
arpl
lods
ret
lahf
push
popa
insb
je
add
add
add
add
fildll
jne
jnp
cmp
lea
ss
leave
es
out
fcoms
mov
shr
jmp
jecxz
pop
out
push
add
mov
or
add
add
cwtl
push
mov
mov
out
rcrl
sarl
movsb
pop
and
inc
leave
mov
cltd
inc
push
pushf
mov
mov
inc
jl
add
orl
add
ljmp
mov
add
add
je
add
add
xlat
inc
scas
pop
pop
inc
mov
dec
push
sub
add
repz
mov
add
mov
movsl
adc
add
stc
out
out
data16
push
ret
jne
push
sub
mov
mov
mov
xchg
daa
mov
add
data16
fistl
mov
mov
lahf
cld
dec
jae
pop
neg
pop
sub
add
ret
hlt
iret
jns
scas
cmc
lcall
and
mov
aas
mov
push
cmpsl
push
add
lds
out
add
push
add
outsl
mulb
xor
lret
add
pop
cmp
int3
jle
mov
pusha
add
mov
pop
out
movsb
cli
mov
xchg
add
mov
lahf
push
xor
add
jg
add
xchg
mov
jl
das
std
lret
mov
pop
das
and
mov
test
roll
cmpsb
push
and
rolb
mov
dec
dec
rolb
mov
jnp
pop
fsubrl
mov
cmp
mov
add
jbe
jns
dec
sbb
lods
xadd
dec
inc
add
add
inc
sbb
jns
enter
scas
sub
add
insl
cmp
in
sbb
pop
sbb
fdivl
das
jg
jb
mov
add
jle
ja
fisubl
movsl
cmp
jle
cmp
mov
jnp
test
cld
dec
or
imull
jno
add
mov
pop
sbb
and
mov
jb
mov
ds
stc
rolb
mov
or
ja
jb
mov
add
int3
mov
push
cld
outsl
mov
inc
add
dec
or
fmull
jne
jno
add
mov
movsb
sbb
iret
stc
std
adc
mov
testl
push
sti
or
mov
sbb
pop
stc
fcmovnbe
lahf
or
add
add
call
mov
mov
out
cmp
int3
fistl
lods
adc
mov
lock
fists
lcall
push
enter
cli
rolb
in
xchg
push
sub
xchg
insl
inc
popf
shll
cltd
or
aas
cmp
add
std
leave
jne
int3
fdivs
mov
mov
add
outsb
insb
mov
pop
jno
xchg
dec
movsb
mov
call
sub
sti
xlat
xor
adc
mov
add
std
jl
mov
dec
push
dec
jl
je
add
cmp
dec
fnstsw
xlat
roll
push
stc
scas
cmp
xchg
pmuludq
sbb
add
mov
cs
xor
mov
lods
in
add
pushf
xchg
sbb
add
mov
xchg
notb
dec
sbb
dec
pop
or
add
ljmp
adc
jo
mov
mov
test
fdisi(8087
add
mov
bound
mov
add
popa
bound
mov
jge
pop
decl
add
add
push
nop
add
pop
cmp
jp
mov
incb
movsb
fcoml
mov
add
ret
icebp
rcrl
int3
dec
sub
iret
ja
into
in
pavgw
mov
xor
mov
mov
pop
mov
or
movsl
repz
xor
add
sti
aas
dec
and
mov
cmp
mov
add
mov
aad
ds
jp
inc
add
sbb
jae
adc
call
xchg
mov
push
gs
test
xor
sub
jnp
mov
lea
sub
rolb
mov
add
add
adc
and
inc
xchg
xor
mov
adc
mov
add
and
mov
jmp
add
dec
roll
stc
mov
int3
xchg
push
sub
inc
add
divb
pop
dec
and
add
inc
add
sbb
cmp
and
cld
call
arpl
xchg
add
add
dec
faddp
into
mov
daa
jne
mov
out
xchg
sub
pop
js
add
push
rcl
add
mov
mov
cltd
cmc
adc
inc
jmp
pop
cmpsl
scas
mov
leave
and
xor
in
sbb
mov
mov
push
jns
mov
cmp
jbe
loop
mov
add
jb
mov
repnz
pop
test
jno
mov
test
mov
mov
push
mov
xor
imul
loop
mov
fnstcw
xor
jmp
std
adc
pop
ret
and
mov
xor
xchg
mov
or
inc
mov
jmp
ficomps
add
fildll
xor
mov
je
dec
sarl
bndldx
jne
pushf
xor
xchg
xchg
cmpsl
push
imul
add
data16
lret
mov
mov
mov
cmp
insl
rolb
cmp
add
repz
fpatan
add
mov
cmp
mov
mov
add
xchg
movl
mov
pop
leave
push
or
push
je
bswap
lods
in
cmpsl
ljmp
mov
xor
mov
enter
cmc
out
xlat
testl
xchg
insb
jg
mov
add
jp
or
fcmovnb
push
add
sbb
mov
add
js
pop
push
add
icebp
movb
aad
fs
pop
mov
add
stc
mov
ret
faddl
add
add
lea
ja
mov
add
inc
add
xor
mov
pop
movl
dec
and
test
mov
add
add
mov
push
jno
push
roll
lret
aas
mov
xchg
add
jns
sbb
adc
imul
rolb
mov
ret
mov
imul
fdivs
add
jmp
addb
sbb
out
movsb
push
out
or
add
jl
cwtl
dec
mov
fmul
sbb
into
iret
fildl
in
pushf
aas
aaa
sbb
std
je
mov
fs
add
push
stc
add
push
inc
lods
mov
xor
repz
and
mov
cmc
or
fldcw
fs
xchg
add
dec
push
outsl
lahf
or
xor
mov
pop
adc
sbb
add
movsl
lods
cmp
mov
add
addr16
add
mov
sbb
add
mov
sub
js
cli
sbb
add
adc
ljmp
xor
shrl
add
imul
rolb
mov
out
and
xor
xor
jmp
pop
and
mov
sbb
push
dec
loope
pop
testb
addb
clc
in
out
imull
cli
ffreep
xchg
fistl
push
pop
in
dec
push
pmaxub
sub
scas
adc
mov
stos
dec
jb
mov
jns
jne
lods
rorl
pop
mov
mulb
idivb
add
mov
mov
mov
jge
mov
xchg
outsb
mov
je
jo
mov
hlt
pusha
add
or
mov
xlat
push
bound
mov
mov
add
mov
mov
mov
mov
cmp
movsb
jmp
pop
outsb
jge
addb
cmc
sti
pushf
push
add
insl
jmp
idiv
lock
aaa
jno
jge
push
add
in
inc
fdivr
push
addb
xchg
std
aam
add
cs
mov
pop
add
ja
jmp
lods
adc
mov
pmaddwd
fwait
push
mov
add
sbb
int3
jae
test
lods
cmp
jns
dec
dec
mov
mov
mov
insl
pop
das
movsb
xchg
add
add
mov
push
mov
fidivl
mov
in
add
mov
jl
jecxz
stc
dec
cmc
jl
add
lahf
les
pop
repz
test
mov
push
addl
mov
cmp
add
jnp
jp
xchg
int
push
outsl
int3
dec
sbb
enter
add
rcr
pmaxub
mov
lret
xor
add
iret
mov
fdivr
cwtl
push
or
adc
loop
mov
js
push
add
loope
or
mov
insb
sub
ret
movsl
enter
divb
mov
add
xor
add
fistpll
js
lret
enter
add
cmpsb
call
xor
mov
leave
xchg
cmpsl
xchg
add
mov
jae
or
add
inc
push
loop
mov
inc
add
cmp
add
aam
pop
call
inc
shr
insb
loop
mov
mov
lret
cmpsb
and
xlat
iret
jl
jns
aas
out
sbb
rolb
mov
mov
mov
sub
mov
mov
test
fstpt
mov
add
je
add
je
repnz
in
lret
mov
mov
call
daa
fwait
cltd
lea
imul
add
mov
les
rolb
out
pushf
cmp
add
push
add
pop
out
cld
out
mov
push
sub
cli
test
dec
sbb
int3
inc
jmp
dec
cld
mov
inc
dec
call
fnsave
scas
in
add
mov
add
sub
add
mov
jne
popf
add
push
test
into
xchg
sti
xchg
sub
and
mov
mov
in
or
fildll
mov
pushf
stc
ja
out
mov
stos
xchg
dec
aad
add
add
cmp
push
aaa
scas
push
iret
xchg
lret
mov
xchg
cmp
and
mov
add
push
push
dec
xchg
mov
jle
adc
add
xchg
ljmp
int3
adc
mov
xchg
xchg
push
jg
mov
mov
jg
push
mov
or
add
pop
push
shll
in
pop
enter
pop
push
fdivl
aad
inc
pop
out
xor
dec
iret
lods
sub
pushf
or
xchg
or
push
add
cmp
add
add
or
mov
int3
sbb
cs
cmp
out
testb
jb
mov
mov
add
mov
dec
or
mov
push
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
test
outsb
in
cmp
add
mov
addb
push
mov
xlat
cmp
in
xchg
daa
rcll
in
mov
inc
add
pop
cmpsb
jns
push
add
add
clc
add
mov
inc
pop
rolb
mov
int
fstp
xor
scas
insl
xchg
mov
aas
adc
pop
sub
out
push
aam
repz
js
add
mov
and
hlt
flds
out
addb
cmc
ss
call
add
test
cs
sub
push
ret
fdivrl
inc
jo
mov
mov
add
sti
cmpl
inc
cmc
mov
leave
idivl
jno
aaa
sbb
mov
add
mov
dec
mov
aad
mov
ret
shl
aaa
dec
sub
repnz
ret
les
fsts
push
jne
test
sbbl
into
cmp
popf
inc
mov
int3
mov
divb
shrl
ficoms
mov
add
cmp
rcl
arpl
add
and
mov
add
jg
add
or
cld
call
cld
repnz
sti
rcll
and
mov
mov
test
add
ret
jb
mov
jne
mov
lcall
push
dec
jno
push
or
lret
mov
or
test
out
jbe
add
int3
cmc
ficoms
ret
add
mov
pusha
add
hlt
sub
fstl
xor
pop
leave
cmp
pop
outsl
xchg
add
std
mov
mov
iret
clc
js
cmpsb
loope
outsb
call
push
cwtl
mov
xchg
mov
mov
add
sub
add
sub
movb
pop
pusha
add
sbb
xchg
adc
mov
mov
mov
in
mov
movsb
xchg
lods
scas
out
sub
mov
cwtl
dec
imul
or
pop
dec
mov
lea
insb
push
call
add
mov
add
dec
lock
mov
insb
aad
js
mov
xchg
mov
pop
push
ds
sub
add
mov
mov
mov
lahf
rolb
insl
add
lods
cmp
xlat
xor
mov
xlat
jecxz
ficoml
cmp
test
int
jbe
mov
add
sbb
sub
cmp
or
cmpsb
mov
inc
mov
test
aaa
es
cld
rolb
mov
add
arpl
push
xchg
sbb
stos
add
mov
dec
fwait
sbb
jns
jp
add
lcall
push
lods
xor
mov
add
pushf
jns
inc
dec
mov
mov
jle
add
mov
xor
push
add
negl
add
add
aas
mov
stmxcsr
fsubr
inc
fldenv
add
mov
push
stos
or
das
dec
incl
cmc
inc
xchg
aas
sbb
fwait
ljmp
dec
cltd
dec
xchg
lcall
cmpsb
popf
cmp
rcrl
pop
aaa
ljmp
in
add
push
int
add
adc
add
or
adc
mov
mov
mov
add
negl
mov
mov
and
mov
mov
stos
xor
jb
mov
ss
jns
mov
add
stos
ficoms
mov
js
jne
out
mov
js
add
neg
xor
std
jmp
test
push
outsl
sbb
add
jmp
push
push
fiadds
add
add
mov
mov
mov
jno
xor
aaa
movb
or
rolb
mov
loop
mov
imul
push
add
and
and
mov
inc
negb
mov
icebp
xor
mov
imul
ds
sbb
add
add
mov
push
pop
fistl
add
shrd
mov
push
jl
stc
and
addl
out
les
pop
and
mov
inc
add
test
je
testl
xor
aaa
xchg
add
sti
sti
adc
dec
addb
das
gs
das
sub
sbb
add
jbe
das
stos
mov
add
clc
push
mov
mov
maxps
and
add
mov
mov
int3
pop
les
or
mov
xor
mov
mov
add
push
or
adc
add
mov
jge
xor
cld
xbegin
mov
test
aas
sbb
test
fildll
jb
mov
mov
cmp
add
and
cld
scas
stos
adc
sbb
pop
lcall
into
cwtl
cld
test
pop
repnz
iret
pop
scas
in
cmc
fstpt
cmp
dec
out
in
mov
push
in
push
xchg
add
cmp
add
cld
imul
jge
mov
sub
dec
dec
lods
data16
rol
sbb
mov
xchg
or
aaa
jmp
mov
inc
or
jecxz
push
adc
jp
movsb
cmp
daa
jne
enter
jae
xchg
add
mov
add
dec
lcall
lods
addb
test
mov
test
xor
fucom
inc
stc
xchg
add
dec
mov
sbb
jb
mov
add
scas
sub
xchg
or
xchg
fdivr
pop
sbb
inc
xor
add
mov
call
mov
mov
mov
mov
roll
divl
pop
repz
mov
mov
mov
icebp
inc
mov
loope
loopne
mov
testb
das
jb
mov
xchg
mov
mov
cmpsb
les
sub
out
mov
es
inc
testl
dec
jl
mov
dec
aam
pop
inc
add
loop
mov
pushf
xor
add
lret
das
lcall
lahf
rolb
mov
add
mov
daa
aad
add
adc
mov
pop
or
mov
fisubrs
mov
loop
mov
mov
js
xchg
add
add
movsl
jbe
adc
es
mov
xchg
jo
mov
mov
add
es
add
mov
inc
dec
movsb
test
mov
mov
aad
xchg
imul
ss
xor
mov
push
mov
mov
add
enter
imul
add
in
in
sub
test
mov
mov
aam
adc
ret
jns
fdecstp
loop
mov
stos
sbb
add
mov
mov
jo
mov
inc
pushf
inc
add
and
dec
inc
or
xchg
pop
and
pop
push
adc
mov
cs
dec
xor
xchg
adc
rolb
mov
xor
push
out
repz
mov
or
cltd
addb
mov
nop
add
insl
pushf
nop
add
or
popa
repz
sbb
stos
xor
add
and
jmp
add
paddd
mov
pop
outsl
dec
aam
roll
cmpsb
pop
loopne
mov
add
mov
or
sbb
add
add
inc
xor
push
and
mov
pop
push
std
pop
xchg
js
into
mov
push
cmc
movsb
mov
mov
rolb
mov
xchg
and
push
gs
jne
add
jge
mov
in
imul
fldcw
adc
mov
in
sub
pop
arpl
aad
in
sub
out
mov
mov
add
mov
mov
in
cmpsl
cmpsl
hlt
les
out
mov
add
add
std
jp
inc
mov
gs
stc
js
add
pushl
add
sbb
adc
mov
cld
and
arpl
add
adc
movsb
mov
add
adc
gs
sub
imul
arpl
sbb
add
iret
pop
pushf
adc
add
inc
inc
nop
add
mov
push
add
pop
lcall
adc
lcall
mov
mov
mov
and
mov
sbb
jns
mov
add
repz
add
fdivr
push
jns
pusha
add
loopne
mov
rcll
adc
mov
addb
dec
in
addr16
cmc
jle
popa
mov
mov
xchg
mov
push
dec
mov
mov
insl
sbb
pop
outsb
cwtl
jmp
repnz
lds
and
aaa
xchg
add
mov
xchg
xchg
sbb
add
jns
and
sahf
enter
ffree
mov
popa
xor
insl
jne
pop
ja
or
add
mov
push
ds
cmc
inc
pusha
add
mov
pusha
add
mov
jnp
or
mov
test
xchg
xlat
jg
mov
push
add
mov
addb
sbb
add
push
add
inc
sub
std
sub
iret
pop
mov
cmp
xor
mov
int3
roll
pop
mov
fs
inc
fsubl
mov
pop
into
stos
mov
js
popf
lock
add
or
stc
popf
leave
rolb
mov
dec
es
into
xor
inc
aas
mov
push
in
pushf
sub
add
mov
fwait
out
addb
ds
pop
dec
addb
dec
mov
mov
jg
add
add
and
cmp
add
inc
xchg
das
push
add
mov
adc
mov
add
mov
xchg
scas
loop
mov
add
cmp
pop
les
outsl
ljmp
lea
inc
add
rolb
sub
xor
gs
push
add
jg
add
xchg
add
sti
sbb
stc
aaa
jl
mulb
jl
and
sbbl
imul
in
sub
add
add
cmc
adc
push
cmp
mov
cmp
add
add
test
add
aam
sahf
xchg
nop
add
repnz
jne
push
mov
movsb
mov
xchg
cmp
jb
mov
and
adc
mov
add
inc
jo
mov
mov
cmp
mov
add
andl
fstpt
std
sbb
mov
dec
inc
dec
jge
cmp
sub
mov
sub
xchg
jb
mov
leave
les
call
sbb
add
mov
add
sbb
mov
ja
cmpsb
lret
and
add
cmpl
imul
icebp
lea
cmp
pop
xchg
xor
mov
jno
inc
rolb
mov
push
xor
inc
lcall
fisubrs
pop
jns
fsubl
movsl
inc
add
mov
xchg
or
mov
inc
pop
dec
or
and
mov
fstpt
add
push
jg
dec
or
mov
ljmp
cs
jp
incb
add
mov
leave
test
int
dec
out
movsb
repz
pop
xor
inc
add
out
loopne
mov
push
add
sbb
mov
mov
mov
jae
mov
cmp
push
jle
add
loopne
mov
jbe
pop
sarl
pop
sub
lahf
icebp
ja
pop
lret
insl
lock
add
xor
mov
xchg
add
or
or
add
not
add
push
sub
add
sbb
ss
mov
movsl
inc
add
xor
ret
xor
push
mov
out
cmpsl
push
lahf
lea
int3
push
and
mov
add
cmp
add
dec
addb
jae
add
jae
add
jbe
add
xchg
and
add
add
and
cmpl
adc
js
or
mov
fistps
cld
rcrl
lds
cltd
xchg
aad
imul
mov
test
dec
xlat
shr
fcomps
xchg
inc
sbb
pop
add
mov
add
sub
and
mov
pop
mov
add
mov
add
pop
pusha
add
xchg
imul
ss
mov
add
mov
cmp
push
lods
push
add
outsb
fdivrs
int3
aas
push
mov
add
add
lret
sub
fistpll
pop
sbb
dec
push
add
arpl
popa
jmp
iret
cmp
pop
inc
mov
dec
cs
jns
outsb
decl
sbb
xchg
or
xchg
mov
push
add
mov
add
xor
mov
sbb
cmpl
xlat
cltd
int3
cmp
test
repz
jbe
in
push
test
mov
and
in
or
add
enter
arpl
and
jmp
push
clc
add
add
xchg
cld
jg
pushf
xlat
push
mov
mov
inc
add
pop
ficompl
add
mov
mov
into
dec
xchg
rolb
mov
movsl
lods
mov
cmp
add
xor
pop
lock
cmp
dec
in
cld
vcmppd
movsl
mov
je
add
sbb
or
gs
mov
add
inc
sbbl
add
jae
add
out
inc
out
push
add
cli
jns
loop
mov
divps
xchg
mov
mov
dec
mov
add
jae
scas
xchg
add
inc
sub
jbe
cmp
aaa
scas
cltd
loop
mov
mov
add
mov
push
test
decl
xor
push
mov
mov
add
add
mov
lods
into
sbb
jne
pop
in
jle
fnstcw
add
cld
or
inc
sub
add
push
lret
xchg
mov
inc
adc
sub
imul
lods
sub
mov
jp
add
jno
js
xorl
jle
in
jne
adc
daa
mov
cmp
add
add
enter
inc
add
sarl
divl
ja
ds
and
enter
clc
aad
dec
pop
lret
push
fsubr
fwait
add
mov
fdivs
add
fsubp
shrl
jae
loopne
mov
cli
jb
mov
addb
adc
mov
jmp
add
addb
cwtl
push
ret
adc
lods
mov
mov
pop
leave
jmp
inc
in
mov
add
add
add
pop
fidivs
mov
stos
and
sbb
add
sub
fildll
add
add
mov
mov
paddsb
rolb
mov
mov
mov
movsb
xor
mov
add
in
fisubl
jnp
or
inc
xchg
les
mov
or
dec
cmpsl
sub
inc
add
imul
mov
mov
das
js
mov
mov
jmp
rcrl
dec
sbb
mov
sbb
add
and
mov
adc
mov
add
rolb
mov
pop
cmc
mov
mov
mov
add
lcall
pop
or
mov
mov
add
xor
mov
adc
mov
mov
fs
aaa
sbb
add
push
add
pop
mov
pop
sbb
lods
mov
add
mov
add
inc
lcall
and
mov
add
stc
insl
or
mov
insb
addb
out
outsb
fisubrl
mov
shrl
add
stc
jmp
mov
jecxz
cmp
loopne
mov
pop
sbb
mov
cmp
add
cmp
or
int
repnz
call
sub
fdivl
test
add
mov
aam
outsl
inc
add
pop
mov
ja
add
push
test
test
mov
aad
and
mov
pop
dec
callw
mov
mov
push
add
les
mov
mov
lods
mov
mov
jb
mov
cld
movsb
jne
popfw
adc
mov
push
int3
mov
mov
inc
sub
mov
test
cmp
neg
addr16
fs
or
cmp
test
push
push
add
sub
popf
inc
mov
cmp
push
add
sbb
add
jbe
popf
std
addb
mov
cs
addb
adc
mov
aam
stos
jne
pushf
or
outsb
pushf
roll
loopne
mov
fisubl
mov
mov
pushf
out
je
push
in
jmp
jl
add
mov
fnstsw
movsb
js
sti
scas
mov
jnp
out
rolb
xchg
jnp
add
cmc
fiadds
into
mov
cmpsl
out
fisttps
push
call
ret
push
pop
sahf
repnz
cbtw
scas
test
push
loop
mov
add
addb
pop
loope
sub
add
mov
cmp
dec
xchg
xor
mov
push
add
add
and
mov
out
mov
cmp
popf
in
fistps
jo
mov
js
mov
add
out
push
je
stos
jge
jge
add
insb
mov
nop
add
cmpsl
in
mov
ljmp
cwtl
hlt
aam
mov
mov
add
add
xchg
into
pop
in
sbb
push
mov
add
inc
faddl
add
fnsave
jmp
call
in
sub
lds
bound
mov
and
mov
sbb
cmp
pop
ds
xor
insb
xor
inc
dec
jge
jo
mov
popa
mov
inc
push
mov
and
lahf
or
pushf
mov
mov
jno
cmc
inc
fnstenv
push
dec
cmp
inc
add
std
iret
jae
repz
push
add
mov
mov
and
ds
and
ficomps
ds
inc
sub
mov
adc
movsl
mov
push
or
push
sbb
add
add
pop
insl
test
mov
add
inc
mov
sbb
and
mov
mov
pop
arpl
cmp
lock
push
sbb
add
std
pop
xchg
mov
adcl
mov
add
xchg
divps
mov
out
or
inc
push
mov
push
add
mov
std
jmp
cld
sahf
call
mov
cmp
es
mov
mov
add
mov
add
add
push
call
pop
jbe
gs
add
cmp
loope
xchg
jecxz
inc
mov
add
out
push
insb
test
sbb
add
adc
int3
mov
repz
out
cwtl
mov
sub
out
cltd
cmc
mov
rorl
xchg
sub
mov
pop
imul
mov
mov
ret
scas
pop
sbb
add
mov
pop
xor
and
add
daa
inc
ds
test
cmc
loopne
mov
ds
rolb
add
ss
gs
inc
add
sahf
push
gs
int
add
les
inc
ja
sub
sbb
add
sub
and
mov
mov
cwtl
lds
xor
mov
or
jnp
stc
pop
adc
cwtl
mov
test
loop
mov
mov
xor
faddl
xchg
bound
mov
cmpsb
adc
mov
stc
pop
jnp
xchg
add
mov
xchg
sub
out
cmc
and
mov
pop
cmp
add
mov
mov
testl
jb
mov
out
jl
cmp
scas
sbb
rolb
mov
out
adcl
mull
xor
mov
cli
mov
insl
or
icebp
mov
xor
mov
xchg
sub
lret
out
scas
int3
data16
inc
popf
pop
test
daa
jl
add
mov
mov
call
mov
add
mov
pop
xchg
add
dec
sub
add
add
pop
mov
or
test
xorl
jmp
add
aam
int3
daa
sti
dec
leave
int
rolb
mov
lret
jae
push
inc
add
cwtl
push
sub
sub
add
mov
mov
add
jne
out
add
movsl
icebp
dec
mov
add
pop
mov
std
mov
fsubrp
call
ret
pop
fcompl
push
rolb
mov
xor
hlt
call
add
add
imul
shll
nop
add
add
pop
scas
incb
rolb
mov
add
add
xchg
xor
mov
repnz
push
push
add
cmp
xchg
and
add
fs
push
dec
scas
leave
movl
mov
mov
lock
gs
cmp
dec
and
lea
jnp
into
adc
add
jb
mov
aas
jp
adc
add
add
ret
loope
xor
jo
mov
mov
xor
int
push
add
add
mov
add
mov
test
pop
insb
mov
imul
pop
filds
mov
subl
repnz
pusha
add
add
fadd
addb
or
ret
enter
xchg
leave
gs
dec
or
mov
mov
outsl
jns
enter
aam
add
mov
push
add
test
add
mov
imull
int3
xchg
mov
dec
addb
fsubs
mov
mov
jecxz
adc
mov
or
pop
test
mov
loope
fists
mov
mov
add
add
rolb
mov
mov
imul
pop
mov
mov
inc
add
int3
add
mov
fdivr
lds
push
enter
lock
or
mov
push
add
jle
jb
mov
dec
test
or
add
add
out
add
cmpsb
pop
cwtl
mov
jl
add
xchg
out
xchg
mov
adc
inc
rep
pop
dec
gs
enter
or
stc
inc
add
leave
fidivl
add
mov
mov
outsl
mov
cmp
add
pop
imul
add
mov
mov
leave
mov
mov
add
mov
mov
arpl
add
sub
add
xchg
cwtl
sub
sbb
inc
add
ss
into
int
jg
inc
lret
mov
repz
mov
mov
add
jmp
pop
int
scas
fbld
das
outsb
adc
mov
mov
push
inc
in
jbe
ret
popa
rcll
mov
xor
cltd
loopne
mov
mov
int
movsb
jnp
add
and
aaa
loopne
mov
add
fwait
loopne
mov
add
add
mov
mov
add
add
jmp
pop
cs
lret
push
rolb
mov
mov
or
add
and
cmp
mov
adc
or
incl
mov
pop
push
jmp
mov
cmp
out
xor
and
xchg
in
xor
mov
mov
jno
mov
dec
lcall
add
mov
add
mov
xor
insb
ret
jne
fs
popf
ds
mov
jmp
stc
inc
xor
stos
test
adc
sub
push
and
sub
lods
add
mov
mov
mov
jl
cmp
dec
popf
jl
jns
sbb
data16
add
mov
add
addb
int3
movsl
push
clc
xchg
dec
mov
mov
cmc
fwait
mov
std
cltd
jmp
pop
or
out
mov
popf
jae
xor
jg
sti
test
int
and
imul
fwait
or
dec
push
add
mov
sarl
xchg
out
mov
mov
add
dec
inc
and
mov
bound
mov
mov
xor
mov
sub
dec
negb
leave
stc
jle
or
repnz
push
movsl
hlt
push
roll
iret
mov
push
mov
cmp
push
add
adc
inc
push
and
mov
enter
mov
xchg
mov
jbe
aad
adc
xchg
xor
cmp
add
outsb
and
mov
cmp
cmp
mov
arpl
mov
adc
mov
jns
push
xor
mov
add
fidivs
sahf
adc
add
mov
mov
add
jo
mov
mov
add
stos
scas
repnz
xchg
aas
sbb
mov
insb
clc
pop
mov
add
nop
add
add
add
mov
fisttpl
sub
add
cs
mov
pop
shll
addb
in
adcl
enter
pop
test
imul
add
adc
push
inc
add
iret
rol
lcall
mov
xlat
inc
dec
ljmp
in
loop
mov
sub
adc
in
inc
adc
movsb
dec
and
add
mov
mov
xchg
data16
xor
mov
fildl
popa
pop
loopne
mov
popa
lods
int3
pop
jmp
addr16
jle
test
divps
in
daa
jb
mov
add
out
dec
clc
fbstp
add
lods
push
lods
inc
popa
test
mov
mov
or
inc
push
add
mov
and
data16
jo
mov
sahf
add
int3
dec
xor
stos
jns
jb
mov
push
add
inc
imul
mov
call
mov
or
rcl
mov
ret
jp
xchg
ret
lret
mov
mov
cmpsb
cmc
test
mov
jmp
or
add
fdivr
sub
add
xor
mov
jp
loop
mov
mov
imul
jle
xchg
adc
mov
or
xchg
add
adc
lds
mov
leave
mov
pop
movsl
push
bound
mov
mov
and
and
lret
cmp
lods
aad
add
sub
fldl
add
int3
dec
jo
mov
loop
mov
es
aas
sbb
mull
idiv
rorl
call
cwtl
js
jp
add
jl
mov
pop
mov
popf
mov
mov
push
pusha
add
ret
and
mov
xchg
fwait
loop
mov
jne
xchg
pop
dec
jo
mov
push
aam
push
add
inc
add
cmpsl
sub
scas
imul
mov
jecxz
les
xor
arpl
fdivrs
mov
stc
in
sti
mov
push
cmp
out
jae
add
mov
sbb
add
xlat
jl
out
add
and
inc
arpl
dec
mov
add
add
xor
mov
jb
mov
sbb
mov
or
cmp
pop
lcall
pop
pop
insb
je
dec
jle
sbb
push
int3
addb
int
mov
jle
pop
lods
cmp
and
mov
xor
add
pop
mov
ficomps
ja
add
mov
cmpsl
loopne
mov
cmp
pushf
cwtl
aam
dec
addl
mov
cmc
push
add
mov
cpuid
add
or
insl
mov
dec
pop
imulb
outsb
pushl
push
add
leave
pop
dec
movsl
jmp
pop
jl
add
and
mov
jle
xchg
idivl
repz
movb
mov
push
testl
add
mov
mov
jl
add
lret
xor
mov
aas
jmp
stos
aam
ds
mov
dec
mov
mov
repz
sbb
add
mov
leave
sub
shll
adc
mov
add
int
mov
add
lods
sbb
scas
jle
add
cmpsb
fs
insl
and
add
push
push
xchg
add
push
sbb
rolb
mov
dec
rolb
push
mov
test
mov
push
in
mov
mov
mov
add
or
loop
mov
pop
iret
cmpl
popa
add
mov
outsb
add
mov
adc
mov
pop
mov
xchg
shrl
pop
mov
cmp
sti
mov
ds
fucomi
jns
add
sub
add
push
fnstcw
mov
pop
or
add
mov
add
add
outsl
dec
sub
bound
mov
adc
pop
mov
mov
sbb
or
adc
mov
cmp
and
insl
dec
pop
movsl
jne
mov
jns
gs
xchg
scas
ja
push
dec
cmc
and
mov
adc
sub
lret
mov
out
sbb
lods
sbb
mov
outsl
xor
aam
adc
mov
pop
incl
fisubrl
mov
adc
mov
dec
or
add
mov
mov
ja
add
add
popf
in
out
imul
lret
movsb
ds
jnp
push
dec
into
dec
mov
call
roll
mov
xchg
jnp
mov
add
sbb
pop
mov
pop
sub
pop
adc
call
je
lods
pop
lret
imul
cmp
repnz
mov
sbb
jnp
xchg
cwtl
icebp
mov
mov
fisubs
add
mov
add
mov
and
mov
outsb
call
inc
lea
call
mov
lret
dec
sub
into
addb
inc
add
push
xchg
and
fisubrl
mov
add
dec
or
js
xor
adc
mov
add
add
mov
mov
dec
lret
push
jmp
pop
add
fwait
and
mov
cli
jbe
pop
sbb
dec
js
ret
sbb
and
mov
cmp
adcl
mov
add
sub
insl
inc
add
pop
loopne
mov
mov
push
addr16
cmp
lahf
push
lea
add
sub
stc
xchg
lods
push
add
mov
in
pop
lcall
push
dec
xchg
nop
add
mov
cmc
pop
cmpl
addb
fs
xchg
popf
xlat
in
mov
sbb
and
mov
shl
icebp
push
add
sbb
jp
push
mov
sub
lcall
sbbl
nop
add
mov
inc
pop
xlat
in
mov
movsl
rolb
mov
jg
sub
rolb
mov
addr16
inc
add
orl
mov
xchg
js
popl
jae
xchg
loope
add
adc
stc
test
cwtl
addb
cmp
negl
lods
inc
mov
push
push
xor
mov
push
lret
cmp
int
pop
jb
mov
dec
jge
adc
mov
stos
inc
addb
cld
test
mov
mov
insl
inc
idiv
and
add
and
mov
fs
jnp
pop
inc
cli
push
pop
mov
fnstsw
inc
inc
add
cli
mov
mov
xchg
lods
jge
cmpsl
and
mov
cmp
je
add
xchg
ljmp
sbb
cmc
dec
and
push
movsl
jmp
dec
testl
rolb
mov
cli
stos
scas
xor
mull
ds
jne
and
push
lcall
pop
xchg
dec
movsl
sbb
sbb
mov
dec
adc
pusha
add
movsb
pop
cs
mov
or
lahf
sbb
mov
sub
or
std
sbb
mov
orl
xor
leave
int
not
add
adc
mov
js
mov
js
xchg
loope
mov
add
mov
push
sbb
je
repnz
test
xor
add
ss
testb
mov
sbb
dec
test
jnp
je
add
mov
mov
add
pop
mov
ds
jbe
push
add
fldl
mov
adc
or
mov
pop
in
andl
repnz
mov
fwait
add
mov
cmp
sub
push
add
sbb
push
add
add
or
enterw
lahf
ret
arpl
push
add
add
pop
inc
push
add
pop
iret
xchg
add
scas
mov
lret
and
mov
rorl
pop
mov
les
mov
clc
jmp
jbe
jecxz
xchg
fnstenv
dec
pop
arpl
mov
adc
ds
add
ss
clc
adc
cmp
lret
mov
inc
sbb
ficomps
push
bound
mov
flds
add
xchg
adc
mov
mov
frstor
fisubs
repz
pop
enter
adc
xor
push
pop
popa
inc
xchg
jge
add
inc
add
sbb
setge
mov
dec
jl
mov
sub
pop
pop
inc
push
add
mov
cld
xchg
arpl
popf
xchg
rolb
pop
jb
mov
jo
mov
repnz
test
add
mov
repz
add
mov
add
pop
sbb
add
adc
mov
xchg
push
ficoml
add
call
sbb
jnp
out
xor
mov
mov
push
pop
enter
popf
and
mov
test
enter
xchg
mov
ret
cmp
and
out
sub
push
fldl
or
or
xchg
pop
sbb
sub
dec
fcmovb
add
setl
jmp
addb
popf
or
add
jbe
add
push
add
fmuls
jmp
add
test
mov
inc
push
popa
andl
sub
push
das
jle
rcrl
xlat
imul
sub
in
rolb
mov
sarl
mov
test
and
inc
add
add
add
push
inc
push
int3
push
pop
adcl
xchg
mov
sub
in
mov
mov
mov
jno
test
jb
mov
stc
xchg
addb
sub
xchg
imul
or
outsl
cwtl
ja
adc
mov
ljmp
addb
data16
mov
or
mov
imul
sub
pop
rolb
mov
sbb
and
xlat
aam
aad
lahf
jg
pusha
add
icebp
fnstenv
add
imul
mov
xchg
movsb
add
das
mov
jg
xor
mov
adc
addb
and
add
stos
push
push
lods
test
mov
adc
mov
add
mov
push
cs
push
iret
xor
cmp
xchg
jg
pop
mov
push
add
sbb
addb
dec
pop
loop
mov
pusha
add
mov
mov
rolb
mov
inc
ja
iret
testl
aam
adc
add
mov
lds
sub
or
cmpsl
push
lds
pop
movsb
sbb
cmp
xchg
aaa
pop
jo
mov
mov
les
cmpsl
and
add
adc
mov
jns
adc
xchg
sub
add
cs
and
mov
pop
js
enter
add
xchg
adc
mov
imul
movsl
cmp
in
mov
dec
dec
xor
mov
imul
addb
mov
popf
inc
mov
leave
lods
hlt
into
std
or
sub
mov
add
das
pop
addb
stc
sbb
and
mov
jmp
lcall
mov
jns
add
add
and
mov
jmp
cmp
jne
mov
push
add
push
stos
jnp
dec
scas
test
add
add
mov
cmpsb
addr16
cmpsl
adc
mov
movsl
mov
mov
mov
outsl
mov
mov
mov
or
mov
mov
addr16
lock
cwtl
call
loope
sbb
pusha
add
pop
inc
add
aaa
jb
mov
sub
mov
cmp
adc
and
int
jmp
mov
scas
ret
jp
rolb
mov
push
stos
lods
mov
mov
ja
mov
int
sub
add
mov
xchg
hlt
xchg
jns
dec
mov
mulb
hlt
and
sub
mov
sbb
imul
ss
push
mov
adc
mov
mov
xchg
cmc
jecxz
push
add
add
add
pop
push
int
xchg
aas
dec
aas
out
xor
and
sbb
int
ljmp
mov
push
mov
inc
add
dec
jb
mov
ljmp
and
mov
mov
fnstcw
sti
pusha
add
cwtl
lock
adc
jl
add
add
lcall
xchg
add
add
mov
outsb
fwait
push
cmp
insl
sbb
movb
xor
stos
sbbl
add
addr16
in
leave
jle
lods
lds
mov
xlat
xlat
cmp
inc
add
jns
rolb
mov
test
push
push
jns
inc
pop
aaa
xor
add
pop
sub
ss
sbb
add
lods
cmp
jecxz
cli
jns
clc
pop
jge
mov
xlat
mov
cltd
mov
sbb
call
popf
aad
add
sbb
mov
xor
add
mov
add
add
test
xchg
add
pop
mov
sbb
add
popa
imul
add
dec
inc
arpl
pushf
pop
mov
cli
dec
scas
mov
rolb
mov
aaa
addb
jns
add
xchg
mov
add
add
loopnew
mov
jno
pop
es
addl
cmp
mov
add
add
sbb
les
mov
sbb
inc
lods
jnp
cmp
mov
mov
mov
mov
loopne
mov
or
mov
inc
add
sub
add
add
fadds
sub
xor
mov
adc
xor
mov
cmpsl
fistl
mov
out
cltd
aas
jl
add
mov
mov
add
icebp
mov
push
sbb
add
fldenv
jnp
out
lret
fimuls
lret
mov
jp
cli
aam
jae
rorl
xor
mov
loope
rorl
inc
filds
outsb
lods
dec
adc
int3
pushf
lcall
sub
les
mov
add
test
test
mov
aas
rolb
in
cld
mov
add
cld
pushf
mov
jmp
out
mov
fdivrp
sub
xchg
pushf
push
mov
sub
rolb
mov
ret
sub
mov
add
dec
stos
pushf
mov
xor
lods
push
int
loopne
mov
cmp
cmpsb
rolb
mov
cmpsl
dec
xlat
dec
movsl
jnp
add
inc
sub
sahf
mov
or
cwtl
mov
or
mov
mov
loop
mov
adc
inc
sbb
test
popf
fwait
sti
jl
ret
test
xchg
arpl
icebp
divl
jae
lods
xchg
aad
add
xchg
insb
out
add
mov
shrl
pop
jle
sub
imul
and
enter
mov
or
iret
dec
fs
and
mov
outsl
cltd
movsl
and
mov
int
pop
sbb
std
int3
pop
mov
add
loope
add
mov
add
ret
lcall
add
clc
arpl
rolb
mov
sub
mov
or
adc
mov
in
mov
mov
add
and
jno
imul
nop
add
mov
jp
addb
push
mov
lods
push
fisttps
test
add
pushf
add
mov
sbb
add
insl
mov
leave
fxch
sbb
and
scas
aaa
jecxz
pushf
rcll
mov
mov
cmp
in
into
imul
sbb
sub
pop
and
in
cmp
and
mov
popf
test
sahf
addb
movsb
insb
ss
add
push
sbb
repz
in
and
daa
mov
lcall
pusha
add
popa
mov
add
mov
ljmp
add
mov
mov
sbb
or
pop
decl
add
pop
push
add
jo
mov
or
add
cld
xor
out
and
int3
pop
add
inc
xchg
add
mov
xchg
ret
das
jmp
sub
pop
repnz
and
cwtl
lds
add
je
daa
mov
mov
fwait
mov
xchg
jno
pop
mov
mov
add
addr16
arpl
xor
hlt
sbb
sub
push
aam
add
lds
push
add
lods
add
sbb
add
add
lods
mov
add
mov
mov
lods
sti
fnstenv
add
mov
fidivrs
call
sub
push
sahf
and
mov
mov
push
insb
xchg
mov
adc
mov
lahf
pop
outsl
pop
mov
je
and
out
es
add
popf
add
add
dec
scas
jp
add
mov
mov
lret
leave
cmp
xchg
sbb
push
enter
mov
mov
enter
xchg
jb
mov
iret
int3
hlt
sub
inc
insl
and
push
les
test
mov
movsl
pop
lods
or
cli
mov
push
std
adc
fcmovnbe
dec
stos
jne
mov
mov
dec
push
inc
ret
mov
in
mov
sub
cmp
mov
ss
repz
adc
mov
mov
push
pop
shll
adc
mov
adc
mov
add
jmp
dec
mov
xor
negb
xchg
sub
add
xor
pop
movsl
mov
sub
mov
mov
add
inc
mov
cmp
push
addb
stc
addb
xor
mov
add
data16
pushf
imul
inc
add
dec
mul
add
mov
jp
jecxz
fbld
add
cmp
mov
mov
les
dec
xlat
and
adc
mov
mov
mov
mov
and
mov
scas
dec
sbb
add
push
add
shll
xchg
pushw
sti
es
jo
mov
adc
mov
fwait
push
sub
sub
sbb
xor
mov
test
add
push
xor
mov
lods
les
add
mov
add
cmc
or
add
test
add
rolb
mov
inc
dec
mov
mov
cltd
or
pop
jo
mov
mov
les
sub
jne
adc
mov
sbb
add
fstpl
cmp
leave
cmc
aad
rolb
mov
push
add
sbb
add
sbb
mov
add
fidivs
cmp
and
adc
mov
scas
stos
mov
add
mov
jae
add
rcll
mov
add
cmp
sub
mov
add
nop
add
mov
xchg
in
lcall
fisubs
mov
insl
add
and
inc
add
imul
mov
test
stos
lods
jp
cmc
inc
push
add
adc
mov
fisubrl
add
cmpsl
push
pop
dec
stc
rolb
sbb
mov
mov
or
ss
add
cs
add
lds
jno
mov
add
push
xchg
inc
push
add
lgs
imulb
push
pop
clc
dec
mov
fcomps
inc
fwait
aam
loope
xlat
jbe
ja
mov
add
stos
movsl
add
add
pop
mov
cltd
pop
jl
mov
add
or
in
xchg
in
adc
xchg
add
xchg
xchg
fsubl
xor
mov
cmpsb
fcomp
imul
adc
mov
movb
cmpsl
xchg
dec
inc
cmp
mov
in
jb
mov
mov
mov
mov
out
dec
out
mov
mov
cmpsb
je
clc
sbb
mov
add
add
inc
out
lock
stos
adc
mov
scas
loop
mov
add
scas
stos
ja
imul
out
rolb
mov
mov
and
jo
mov
mov
mov
mov
cmp
adc
fsubl
or
lds
pop
mov
in
add
xchg
leave
bound
mov
add
add
mov
aaa
sub
lods
insb
mov
fcoms
mov
push
mov
sub
mov
add
push
test
fcomi
mov
fistps
adc
out
repz
push
icebp
xor
mov
add
cmpsb
xchg
mov
mov
ret
stc
lds
sbb
arpl
mov
cmp
rolb
mov
lret
scas
fstl
out
pop
daa
fsts
adc
mov
cli
inc
add
adc
mov
and
mov
add
add
addl
lret
adc
add
ja
jb
mov
mov
mov
mov
fs
xchg
xchg
je
add
rolb
mov
ss
ret
lods
nop
add
add
sbb
loopne
mov
mov
add
xchg
jb
ss
mov
push
add
jmp
rolb
add
jg
add
mov
xchg
incl
mov
mov
add
add
mov
and
imul
mov
dec
arpl
add
cmp
dec
cmp
sub
jno
push
imul
xchg
fcmovu
pusha
add
clc
test
add
jg
mov
out
add
mov
loopne
mov
mov
mov
add
jmp
add
sti
sbb
add
addb
insb
adc
mov
push
in
sub
std
ljmp
add
ret
xchg
add
mov
fxch
rolb
sti
sbb
cmp
popa
pop
movsb
jp
lcall
mov
test
les
ljmp
add
dec
movsb
rolb
mov
js
add
add
sbb
in
loope
out
sub
data16
xchg
jl
addr16
fs
aad
leave
stos
outsl
mov
jmp
call
mov
xor
movsb
rcrl
inc
push
addr16
mov
sbb
add
sub
clc
lea
ret
int3
mov
testb
cs
pop
movl
sbb
and
leave
mov
push
xchg
in
aam
cwtl
push
xlat
sub
xor
pushf
or
mov
mov
add
adc
mov
insl
push
add
adc
add
fstpt
jne
xor
push
pop
mov
stos
pushf
inc
jp
ret
jle
adc
into
aad
add
insb
fiaddl
outsb
sbb
imul
leave
xchg
add
ret
push
xor
mov
faddl
add
mov
adc
mov
lea
add
or
cltd
jl
add
scas
push
pop
pop
cld
mov
es
inc
jg
inc
add
sbb
es
or
mov
mov
mov
push
add
add
xor
lahf
je,pt
std
mov
cwtl
mov
and
add
fcmovne
push
out
xchg
dec
mov
pop
sub
mov
mov
mov
mov
xlat
add
mov
push
add
stos
mov
stos
or
out
cmp
pop
jno
lret
das
daa
sub
push
add
mov
clc
cwtl
sub
movsl
mov
rolb
lahf
stos
xor
xor
mov
jno
imul
mov
cmpsl
jbe
add
fmull
mov
pop
push
xor
mov
sub
addb
lea
pop
mov
jmp
xlat
xchg
add
mov
testl
jmp
movsb
sub
shrl
mov
pop
test
fistpll
add
xchg
pop
lea
jb
mov
cmp
je
add
pushf
sub
daa
icebp
stos
leave
jmp
scas
jns
and
mov
imull
and
rolb
adc
mov
add
xor
mov
mov
mov
arpl
push
dec
cmp
and
cmp
test
imull
mov
or
or
arpl
loopne
mov
mov
add
add
adc
mov
pushf
dec
ds
lret
mov
dec
insl
addb
pop
les
add
mov
add
push
add
rolb
mov
loop
mov
jmp
in
int3
insl
loope
sahf
fcomps
add
in
popa
and
dec
in
iret
mov
fs
lds
loopne
mov
jo
mov
add
mov
adc
mov
roll
mov
jl
ja
xor
mov
repnz
jg
je
add
repnz
add
push
add
mov
mov
sbb
inc
dec
int3
inc
sub
sbb
add
xor
cltd
add
jmp
add
add
sub
jns
jns
mov
adc
mov
fs
xchg
xchg
std
inc
mov
xchg
add
and
mov
mov
and
mov
adc
mov
lret
sub
cmpl
inc
add
mov
ret
sbb
add
aam
sbbl
loop
mov
jl
into
cmp
shr
cs
push
adc
mov
es
loopne
mov
jne
sub
xchg
scas
push
add
xchg
loopne
mov
mov
outsl
lock
cld
cmp
cmp
cmp
out
clc
add
and
add
mov
out
pop
std
roll
add
add
mov
sbb
js
andl
add
xchg
inc
add
mov
sub
pop
in
xchg
add
test
out
ret
fstl
add
insb
xchg
add
push
int
loopne
mov
mov
sti
jmp
mov
add
xchg
mov
push
mov
mov
add
add
mov
roll
hlt
call
icebp
sti
test
aas
lret
aas
rcll
jge
push
add
add
pusha
add
adc
mov
add
push
stos
jge
pop
cwtl
push
inc
add
dec
adc
fidivrl
or
pusha
add
mov
lods
fdivr
imul
cwtl
jb
mov
sbb
sub
add
ret
popf
hlt
jg
test
jl
xor
insl
es
xchg
mul
loop
mov
rcr
ja
inc
gs
sub
decl
movsb
and
add
loop
mov
mov
add
xchg
xor
pushf
or
xor
cmp
mov
jp
insb
add
jne
add
add
in
rolb
mov
push
dec
xor
ja
outsb
adc
mov
mov
add
xchg
pop
out
xchg
mov
or
cmpsl
dec
pop
xor
mov
daa
jecxz
ror
jge
aaa
aam
sub
sbb
repnz
int
fstpt
test
pop
xor
mov
fistpll
inc
adc
mov
loope
stos
mov
add
test
push
fnsave
dec
mov
mov
mov
outsb
test
add
push
sub
add
sbb
add
mov
fisttpl
sbb
push
inc
fs
add
mov
out
xchg
sarl
daa
and
mov
pop
aas
inc
xchg
add
mov
sub
or
fadd
add
inc
jb
mov
aam
call
dec
mov
fsubrs
stc
cld
fcmovnbe
mov
lahf
ljmp
ljmp
jbe
add
lods
mov
nop
add
std
test
sti
and
mov
mov
fisttpl
or
fdivp
dec
inc
into
cmp
push
jmp
shl
inc
repnz
mov
mov
and
mov
loope
adc
lret
cmp
cmpsl
push
cmp
bound
mov
fisttpl
aaa
or
jo
mov
ficompl
mov
push
popl
imul
add
jl
inc
sbb
inc
test
stc
loope
jno
hlt
out
sbb
add
mov
add
xchg
push
in
xlat
adc
mov
jecxz
rolb
mov
push
xchg
and
bound
mov
mov
icebp
xchg
loope
pushf
pop
in
and
mov
lds
fwait
jg
mov
add
rolb
mov
push
mov
xchg
dec
push
pop
add
inc
popa
add
mov
dec
mov
mov
ds
loopne
mov
jecxz
add
dec
aam
movsb
pop
add
mov
jge
add
add
icebp
in
inc
aad
jg
cmp
loope
mov
mov
sub
nop
add
add
jmp
add
in
add
push
mov
out
lret
movsb
push
cmpsb
movsl
int3
hlt
shll
gs
addl
insl
insb
jnp
loopne
mov
add
lret
jnp
rolb
mov
lods
je
cmp
add
xor
movsl
push
jno
mov
das
sbb
push
cli
adc
mov
popa
pop
lret
xor
jecxz
enter
nop/reserved
das
scas
shll
ja
push
hlt
pop
sub
mov
int
or
sub
mov
fucom
add
es
popf
int
adc
cmpsb
mov
aam
add
pop
push
mov
fcomps
rcll
mov
sub
xor
mov
push
hlt
bound
mov
mov
add
or
test
hlt
aam
add
inc
pop
jle
add
mov
add
roll
in
leave
and
mov
add
mov
sbb
or
icebp
sbb
xchg
add
ss
xor
or
mov
mov
insb
sbb
mov
mov
bound
mov
dec
lock
mov
mov
pop
mov
rolb
mov
loope
out
or
mov
sbb
mov
in
test
enter
dec
push
xchg
and
add
and
mov
mov
repz
and
mov
xor
mov
add
sahf
fisttpl
xorl
lods
outsl
push
enter
hlt
cmp
xchg
add
sub
sub
adc
xlat
idivb
das
xchg
mov
test
rolb
mov
mov
add
cwtl
inc
or
cmovnp
outsl
inc
add
pop
jl
gs
push
sbb
fcmove
dec
xor
jl
stc
sub
xchg
pop
mov
add
aam
pop
sarl
mov
jmp
xor
mov
mov
add
dec
sbb
or
jg
and
adc
and
in
and
pop
xchg
jecxz
vpsllw
hlt
pop
shrl
scas
je
loopne
mov
mov
mov
add
scas
cmp
test
fdivs
pop
pop
xchg
and
lcall
add
aaa
sbb
das
fs
dec
and
test
mov
bound
mov
sarl
aaa
mov
aas
and
scas
mov
xchg
cmp
push
pop
idiv
adc
mov
dec
or
insb
leave
pop
call
add
mov
add
xor
mov
add
fmull
sbb
lods
cmp
sub
mov
jno
cmp
sub
mov
mov
and
add
inc
pop
and
lds
add
mov
les
loopne
mov
rcrl
sbb
pop
das
test
xchg
in
ss
out
decb
push
add
rolb
mov
xchg
pop
in
push
enter
sub
addb
outsl
sub
mov
add
cli
and
mov
popf
in
cltd
lods
test
insl
lock
mov
add
mov
mov
das
rcr
add
add
add
nop
add
sub
mov
mov
jmp
jmp
sub
dec
rcrl
ss
mov
mov
neg
push
mov
add
xchg
or
jp
stc
jle
sbb
cwtl
repnz
sbbl
rolb
mov
bound
mov
jle
add
adc
mov
ret
cmp
inc
fnsave
xor
mov
pop
outsb
xchg
add
aas
cmc
int
add
inc
rcll
mov
mov
aam
ljmp
loope
ds
ljmp
mov
add
in
test
and
xor
cmp
in
fidivrs
mov
mov
jmp
sbb
inc
stos
or
dec
mov
lcall
add
add
add
add
cmpsl
mov
sbb
inc
push
arpl
loop
mov
loope
dec
push
add
mov
add
lods
sub
sub
push
xor
std
popf
scas
psllw
clc
inc
add
add
dec
mov
pop
sbb
jle
jne
das
pop
push
jmp
push
add
inc
or
add
int3
cltd
repz
add
mov
mov
pop
call
pusha
add
loopne
mov
push
push
fldl
adc
add
jae
mov
lods
sub
je
mov
add
mov
scas
insb
enter
out
addb
rolb
mov
stos
xor
mov
pop
jno
and
cmc
add
add
stc
pop
scas
js
ja
mov
pop
ret
sbb
add
mov
rcrl
push
cmp
in
insb
push
and
mov
inc
rorl
add
addb
xchg
add
mov
sub
stc
stos
aaa
sbb
mov
icebp
mov
fwait
xor
mov
mov
jb
mov
inc
pop
push
cmpsb
int
jo
mov
das
inc
mov
fcomip
pop
pop
xor
inc
lds
sub
add
mov
test
add
fnstsw
out
or
jns
out
cmp
test
xor
xor
mov
sbb
ja
jbe
or
cmp
add
add
mov
sahf
adc
mov
inc
pop
ret
mov
or
test
jnp
mov
mov
mov
mov
mov
add
jecxz
cmp
push
dec
push
mov
sub
add
push
add
scas
xor
mov
xchg
out
std
stos
addb
mov
dec
mov
jmp
mov
mov
aam
pop
push
push
add
fs
add
mov
mov
mov
add
adc
mov
jns
push
shr
add
mov
add
lea
js
pop
cmp
add
popf
sub
daa
dec
pop
push
adc
jne
add
test
mov
dec
jmp
in
add
sub
movsb
icebp
adc
pop
xchg
jae
add
mov
fsubrl
dec
out
lcall
pop
push
loope
add
xchg
sub
test
jmp
add
rolb
dec
sub
xlat
mov
sub
out
mov
lods
push
xchg
jae
add
add
add
addb
nop
add
bound
mov
insb
jl
dec
adc
mov
mov
mov
lahf
loopne
mov
stos
out
mov
mov
push
mov
movsl
pop
pop
jbe
add
cmp
jnp
add
inc
rolb
mov
xchg
mov
add
cmpsl
cmp
or
add
xor
add
addb
pop
or
push
add
inc
pop
jmp
xchg
mov
pop
js
cmp
add
sbb
popf
mov
rolb
mov
add
mov
mov
stos
ret
cmp
inc
add
add
rolb
mov
sbb
loope
jbe
imul
pop
loopne
mov
lods
jae
test
ficoms
and
sbb
sahf
inc
add
xor
mov
push
add
mov
rcl
add
mov
mov
pop
leave
jne
les
xchg
mov
mov
pop
loopne
mov
add
loope
mov
out
add
jb
mov
mov
sbb
imul
xchg
mov
and
add
testl
shll
jb
mov
or
pop
imul
out
data16
pop
mov
pop
nop
add
push
add
cmpsl
rcll
mov
mov
out
or
mov
cwtl
test
mov
pop
rsqrtss
mov
mov
add
aas
out
rolb
mov
or
fcomip
btr
add
add
sub
add
sub
cmpsb
pop
std
fcoml
mov
mov
sub
jg
xchg
or
imul
mov
add
mov
mov
pushf
ds
fldcw
mov
mov
bound
mov
int
add
mov
jne
sub
jo
mov
add
mov
dec
jno
add
lock
push
xchg
xchg
add
enter
ds
popa
bound
mov
dec
fnstcw
in
push
cmp
jno
sub
mov
mov
jecxz
shrl
jecxz
outsb
adc
mov
pop
push
shl
adc
xchg
sahf
mov
nop
add
add
pop
jmp
xor
mov
add
pop
mov
stos
adc
insl
hlt
out
call
or
lret
pop
inc
hlt
sbb
push
add
fwait
and
mov
add
xchg
cs
gs
loope
outsb
rcrl
inc
add
push
out
add
sbb
mov
jbe
cmp
and
je
add
mov
mov
mov
dec
fldl
das
pop
sbb
mov
mov
mov
pop
fisubrl
push
pop
out
std
sti
icebp
inc
call
jo
mov
fnsave
jmp
xchg
mov
mov
xchg
mov
add
add
rolb
mov
dec
or
inc
add
inc
lret
mov
mov
mov
testl
arpl
push
std
mov
xor
mov
dec
rcrl
inc
addb
sub
dec
std
push
outsl
adc
call
xchg
icebp
xor
ja
mov
jns
cmp
xchg
clc
ffree
push
and
jmp
add
and
mov
cmp
add
arpl
jne
pop
dec
cld
cld
loop
mov
mov
cld
shll
add
sbb
pop
or
add
outsb
sbb
add
scas
stos
mov
or
imul
out
add
mov
add
ljmp
add
stos
enter
insb
repnz
lret
push
jne
add
jle
mov
add
xor
mov
and
jns
fimuls
add
mov
mov
fbstp
mov
sub
xchg
mov
repz
loopne
mov
test
add
mov
add
clc
inc
sub
lahf
aas
roll
mov
mov
rolb
mov
adc
rolb
mov
inc
sub
mov
mov
insl
imul
add
pop
into
mov
mov
bound
mov
sub
int3
ficoms
jmp
mov
stos
das
loopne
mov
icebp
in
in
aaa
push
xor
add
gs
out
inc
add
mov
and
aam
iret
inc
addr16
add
mov
and
fwait
imul
dec
cmp
mov
pop
add
add
pop
xchg
movsl
cli
adc
xchg
jns
adc
aad
insl
icebp
push
inc
std
push
arpl
cs
xchg
mov
mov
lock
mov
mov
cld
cmp
fsts
xchg
jecxz
xor
std
je
add
add
daa
mov
fsubrs
mov
xchg
jle
add
add
imul
shll
mov
lock
xchg
add
test
add
mov
frstor
daa
add
lods
stos
mov
and
fwait
jge
sub
add
mov
decl
pop
sub
add
imul
xor
mov
loopne
mov
add
xchg
add
mov
push
xchg
cli
lods
mov
dec
xor
dec
mov
stos
shll
mov
cmc
pop
jns
jge
adc
mov
testl
add
pop
or
pop
jbe
jns,pt
dec
adc
and
xchg
push
pop
addb
stos
fwait
call
add
push
xchg
sbb
lods
adc
mov
push
adc
fidivrl
xor
jb
mov
outsl
gs
repnz
lcall
std
in
test
lret
mov
lods
pop
out
add
dec
orl
add
fs
sbbl
dec
mov
iret
addr16
xchg
or
add
adc
adc
mov
inc
hlt
lret
add
das
or
sti
imull
add
add
cld
nop
add
in
lds
pusha
add
mov
icebp
mov
ret
out
xchg
mov
xchg
jecxz
bound
mov
lret
cmp
rolb
dec
es
fcoml
add
ret
mov
mov
pop
xor
add
mov
adc
add
loop
mov
repnz
test
jne
jbe
fistpl
movsl
push
mov
mov
adc
mov
call
rolb
mov
jl
bound
mov
cs
movsl
iret
sbb
mov
mov
movhps
hlt
mov
mov
add
push
add
outsl
out
addr16
push
lea
mull
mov
stos
inc
cmp
mov
pop
outsl
out
in
dec
mov
pop
jo
mov
jp
adc
mov
inc
add
mov
fistps
out
aas
lods
xor
int
sub
lahf
xor
inc
aam
add
mov
bound
mov
add
lcall
add
mov
inc
add
mov
mov
add
mov
xlat
jb
mov
aad
movsl
mov
mov
inc
add
push
in
sub
dec
inc
stc
rolb
mov
mov
add
mov
sbb
scas
add
fnstenv
jns
add
mov
sbb
outsb
imul
push
add
clc
loop
mov
in
add
inc
popa
fsubs
lods
pop
addb
inc
jns
sub
mov
add
mov
inc
fstpt
pop
add
mov
sahf
mov
cmp
add
pop
cld
in
jg
icebp
dec
fsubr
jl
fidivrs
xor
adc
popf
jb
mov
cmp
mov
add
pusha
add
sbb
outsb
and
es
movsb
addb
and
shll
stos
mov
inc
add
mov
sub
test
test
push
xchg
mov
test
jp
adc
mov
mov
add
mov
ret
rolb
mov
xchg
adc
dec
mov
cld
xor
adc
mov
ret
pop
ljmp
mov
push
xor
fmuls
jns
daa
and
mov
inc
add
sahf
jle
and
mov
add
rolb
mov
faddl
add
fstpt
mov
push
add
mov
add
mov
cmpsl
cli
mov
jnp
or
jl
and
add
enter
mov
stos
sbbl
xor
jge
mov
or
add
bound
mov
jmp
cs
pop
or
fdivrl
negl
into
sbb
add
jg
sub
shrl
rolb
mov
or
iret
aad
add
jmp
add
and
jbe
add
imul
aad
subl
jno
add
mov
add
loopne
mov
sbb
pop
hlt
mov
and
mov
add
addb
or
pop
test
ss
sbbl
cwtl
xchg
cld
or
pusha
add
icebp
fldenv
cmp
add
je
mov
jno
les
mov
push
dec
mov
sub
or
mov
add
mov
push
cmc
pusha
add
push
add
add
add
mov
push
and
and
mov
iret
pop
imul
scas
mov
mov
add
or
mov
inc
sub
cwtl
lahf
or
test
vpcmpgtb
mov
repnz
xchg
jmp
mov
aas
movsl
pushf
cmp
add
mov
movsl
push
stos
inc
add
test
pop
popa
sub
cli
test
jle
insb
sbb
xor
icebp
ret
test
inc
add
mov
jmp
inc
add
fwait
popa
lret
test
adc
mov
dec
cmpsl
mov
addl
push
test
jne
shl
add
add
out
repnz
add
add
lcall
in
iret
push
imul
out
adc
mov
lret
addb
xor
ret
mov
stc
push
sub
rep
std
addr16
or
adc
lock
addr16
ret
xchg
test
insb
cmc
je
out
dec
fs
xchg
cmpsl
inc
add
les
and
jb
mov
scas
test
in
neg
mov
into
mov
mov
add
mov
jo
mov
push
clc
das
add
mov
add
add
adc
jo
mov
shl
movsb
mov
push
push
enter
add
cmc
es
mov
mov
xchg
mov
cmp
mov
mov
add
mov
ljmp
mov
pusha
add
bound
mov
int3
scas
cmp
lea
mov
int
arpl
mov
clc
cli
popa
ret
jb
mov
add
xchg
sbb
test
sbb
add
jns
add
dec
jb
mov
push
cld
dec
ja
leave
fstpt
decl
stos
lock
jle
add
push
add
push
pop
mov
add
les
add
sarl
repz
movsl
or
inc
mov
lds
mov
ljmp
dec
addr16
idivb
mov
scas
sbb
les
adc
mov
hlt
cmp
enter
cmp
cmp
jo
mov
xchg
inc
push
rolb
mov
insl
das
xlat
inc
xlat
ds
cmp
add
inc
aam
fistps
pop
inc
ljmp
in
add
pop
xchg
testl
push
inc
inc
push
xchg
cmpsl
rolb
mov
add
mov
dec
or
mov
inc
and
adc
cld
mov
add
std
and
cmp
add
add
test
in
push
add
sbb
or
mov
cli
adc
mov
aam
push
mov
xor
mov
add
push
mov
stc
in
stos
push
cli
jmp
frstor
inc
jmp
das
inc
add
add
pushf
aas
mov
test
push
iret
inc
add
rolb
mov
pop
lea
movsb
filds
mov
push
sub
xor
dec
hlt
and
cmp
test
mov
add
push
add
daa
mov
add
das
cmc
push
jae
aam
in
rolb
mov
add
xor
mov
cmp
dec
mov
mov
add
lcall
jne
dec
lret
and
mov
add
xor
arpl
fisubrs
mov
add
mov
mov
imul
mov
mov
xchg
mov
mov
loop
mov
jmp
fsts
add
faddp
push
lods
pop
fcmovbe
add
sub
ror
mov
jnp
decl
scas
imul
mov
in
add
mov
mov
mov
fld
lods
dec
gs
mov
add
mov
add
mov
pop
fldt
mov
mov
and
mov
add
jmp
add
aam
shll
add
mov
mov
movsl
adc
add
mov
lods
add
mov
mov
rolb
mov
mov
add
push
cwtl
push
fcmovu
rcll
pusha
add
or
cld
pop
cmpsb
push
jl
pusha
add
sbb
lret
mov
js
mov
scas
aas
movsl
cli
adc
mov
outsl
lret
mov
cmpsb
nop
add
rorl
jnp
in
add
mov
add
cmp
add
rolb
mov
add
cwtl
or
mov
stc
or
ret
into
xchg
add
jo
mov
outsl
lock
sbb
mov
mov
jnp
sub
adc
bound
mov
out
add
cld
dec
push
add
ret
sbb
add
mov
xchg
mov
adc
dec
jbe
cmpw
sahf
mov
mov
insb
mov
or
add
mov
das
dec
dec
cmp
push
rorl
shll
add
push
sbb
jne
enter
in
pop
mov
mov
push
repz
push
push
cld
sbb
insb
cltd
popa
movsl
fistps
fnstcw
fdivrs
push
mov
lcall
sub
mov
pop
or
or
xchg
push
in
std
aaa
jp
add
mov
add
insb
stos
jecxz
add
mov
mov
mov
add
mov
mov
aas
cmp
inc
cltd
mov
add
add
cmp
sbb
stos
xchg
mov
test
andl
add
stc
cmpsl
jge
les
addb
sahf
pop
dec
movsl
cmpsb
mov
fimuls
aas
mov
scas
stos
std
inc
xor
je
out
ret
shll
or
add
jp
add
in
fdivs
add
add
mov
ror
add
push
xchg
into
dec
cmc
lahf
dec
stos
cmp
mov
push
add
add
jno
mov
fs
je
and
inc
fdivrl
insb
scas
push
add
lcall
and
mov
call
xor
mov
jg
xchg
inc
in
mov
mov
jns
push
in
xchg
rcr
neg
pusha
add
dec
cwtl
dec
inc
notl
lret
clc
das
scas
mov
mov
add
and
add
into
out
add
cmp
add
sahf
xor
mov
add
cmpsl
sub
add
mov
mov
and
xor
adc
xlat
enter
movsb
and
lods
mov
mov
xor
mov
pop
adc
add
pop
mov
or
iret
ret
push
add
lods
icebp
mov
jns
insl
sti
out
add
xchg
xlat
jl
in
sub
xchg
loop
mov
mov
mov
or
mov
mov
sub
xchg
cmp
add
dec
pop
dec
mov
push
fldenv
add
add
rcr
in
ficomps
hlt
mov
outsb
mov
addb
cmp
daa
lods
sub
xchg
mov
push
aaa
imul
add
fs
rolb
mov
addb
sub
hlt
adc
ret
inc
add
cmp
add
cmp
in
add
push
outsb
jae
xchg
popa
sub
test
push
sahf
adc
mov
mov
jno
inc
out
fs
mov
xchg
xor
sbb
inc
movsl
sub
pop
addb
repnz
mov
add
addb
lahf
xchg
add
xchg
and
mov
add
mov
add
add
sti
pop
out
cmpsl
bound
mov
mov
mov
add
mov
jge
mov
jl
add
pop
mov
dec
int
cmpsl
ljmp
loop
mov
pushf
lret
in
adc
mov
mov
pop
cmpsl
std
pop
adcl
je
cmpsb
loop
mov
out
js
aam
cmc
ret
adc
test
dec
test
in
lods
mov
nop
add
movsb
inc
adc
mov
mov
jns
xchg
jo
mov
and
sbb
add
mov
add
add
clc
repnz
nop
cld
jae
jo
add
add
mov
clc
repnz
nop
cld
jae
add
xor
mov
jns
nop
nop
cld
jae
adc
flds
or
nop
add
leave
cld
inc
add
xchg
add
addl
add
push
mov
nop
leave
nop
jmp
test
lret
xor
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
flds
inc
add
mov
push
mov
nop
leave
nop
jmp
repnz
jns
clc
repnz
nop
cld
jae
or
add
ret
in
lret
mov
push
mov
xchg
ret
add
add
cld
incl
addb
mov
adc
mov
pop
mov
clc
repnz
nop
cld
jae
add
add
add
sbb
mov
nop
leave
nop
jmp
pusha
add
add
and
clc
repnz
nop
cld
jae
leave
and
add
push
mov
nop
leave
nop
jmp
stc
adc
push
add
cmc
pusha
add
push
mov
xchg
ret
movsl
add
jo
add
add
push
clc
repnz
nop
cld
jae
adc
fxch
xchg
mov
and
mov
xchg
ret
add
pop
sbb
nop
leave
nop
jmp
add
add
push
mov
xchg
ret
add
ret
call
mov
xchg
ret
cmp
add
pop
add
hlt
push
push
clc
repnz
nop
cld
jae
add
sub
inc
add
push
mov
nop
leave
nop
jmp
movsl
add
add
add
push
mov
nop
leave
nop
jmp
add
enter
mov
push
mov
nop
leave
nop
jmp
add
add
je
clc
repnz
nop
cld
jae
add
dec
push
push
mov
nop
leave
nop
jmp
cmp
add
nop
cld
jae
add
adc
cmp
sbb
add
repnz
nop
cld
jae
adc
lret
popl
clc
repnz
nop
cld
jae
cmp
outsb
in
mov
test
add
push
mov
nop
leave
nop
jmp
adc
add
add
in
nop
leave
nop
jmp
movl
test
add
jmp
incl
test
add
cmp
add
ret
out
call
clc
repnz
nop
cld
jae
push
add
add
clc
repnz
nop
cld
jae
sub
subl
shr
push
mov
nop
leave
nop
jmp
add
add
push
adc
add
clc
repnz
nop
cld
jae
cld
mov
xor
pusha
push
mov
xchg
ret
add
inc
add
flds
cld
lret
add
nop
nop
cld
jae
rcl
add
cld
push
clc
repnz
nop
cld
jae
fs
mov
nop
add
sar
nop
nop
cld
jae
add
mov
xchg
push
rolb
mov
add
repnz
push
add
outsb
incl
add
stc
add
pop
push
mov
xchg
ret
test
xorl
adc
mov
repnz
nop
cld
jae
addr16
adc
add
stos
mov
clc
repnz
nop
cld
jae
movsl
dec
adc
mov
clc
repnz
nop
cld
jae
repnz
mov
xchg
ret
add
dec
pop
add
pusha
add
enter
clc
repnz
nop
cld
jae
cmp
filds
mov
push
push
mov
nop
leave
nop
jmp
add
add
mov
mov
mov
ja
clc
repnz
nop
cld
jae
leave
sub
mov
xchg
ret
in
faddl
cmpsb
add
pusha
push
add
add
clc
repnz
nop
cld
jae
roll
outsb
add
add
mov
add
mov
nop
leave
nop
jmp
popf
add
ret
mov
nop
nop
cld
jae
fisttps
add
sub
push
mov
nop
leave
nop
jmp
xchg
add
add
repnz
nop
cld
jae
add
add
add
and
mov
stos
pop
push
mov
nop
leave
nop
jmp
and
mov
add
add
and
repnz
nop
cld
jae
adc
add
add
clc
repnz
nop
cld
jae
push
add
add
add
repnz
nop
cld
jae
add
sbb
mov
mov
push
mov
nop
leave
nop
jmp
rolb
add
add
xor
add
clc
repnz
nop
cld
jae
add
cltd
mov
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
adc
add
push
clc
repnz
nop
cld
jae
sub
add
add
adcb
nop
leave
nop
jmp
push
add
insb
add
repnz
nop
cld
jae
add
test
clc
repnz
nop
cld
jae
add
add
stc
jl
shlb
add
clc
repnz
nop
cld
jae
add
cmp
iret
mov
clc
repnz
nop
cld
jae
rolb
add
inc
mov
add
mov
xchg
ret
leave
repnz
ret
cli
and
push
mov
nop
leave
nop
jmp
add
dec
xchg
in
inc
xor
mov
add
mov
nop
leave
nop
jmp
stc
sub
add
loopne
push
mov
nop
leave
nop
jmp
repnz
enter
xchg
mov
test
mov
nop
leave
nop
jmp
repnz
dec
cltd
xchg
clc
repnz
nop
cld
jae
add
add
popa
or
pop
add
clc
repnz
nop
cld
jae
ljmp
xlat
and
add
clc
repnz
nop
cld
jae
movsl
pop
incl
sub
mov
sub
repnz
nop
cld
jae
add
xchg
xchg
jecxz
sub
adc
repnz
nop
cld
jae
push
inc
xlat
add
add
jne
clc
repnz
nop
cld
jae
fsts
mov
sbb
clc
repnz
nop
cld
jae
add
add
adc
pop
pop
push
mov
xchg
ret
add
mov
add
jecxz
adc
jmp
clc
repnz
nop
cld
jae
add
addl
add
mov
nop
leave
nop
jmp
add
add
je
clc
repnz
nop
cld
jae
add
rcl
add
sub
clc
repnz
nop
cld
jae
or
add
jns
push
mov
xchg
ret
add
add
in
lock
push
insb
add
add
add
add
add
dec
add
xchg
testl
mov
mov
idivl
inc
sbb
add
and
mov
loop
mov
nop
nop
cld
jae
add
cld
push
sbb
je
sub
repnz
nop
cld
jae
dec
stc
add
push
nop
cld
jae
add
lret
nop
cmpsb
les
mov
clc
repnz
nop
cld
jae
mov
out
dec
add
push
mov
nop
leave
nop
jmp
add
xchg
push
add
push
mov
nop
leave
nop
jmp
fstps
ret
pop
cmp
or
inc
add
add
mov
es
clc
repnz
nop
cld
jae
repnz
push
push
mov
xchg
ret
in
add
xchg
push
inc
add
nop
nop
cld
jae
add
fists
add
repnz
nop
cld
jae
or
lret
add
repz
mov
xchg
ret
add
add
add
add
cld
push
push
mov
xchg
ret
add
add
std
mov
push
mov
nop
leave
nop
jmp
nop
add
mov
push
clc
repnz
nop
cld
jae
add
nop
outsb
jge
push
mov
xchg
ret
lret
add
rolb
mov
jnp
mov
clc
repnz
nop
cld
jae
stc
push
loop
mov
or
out
inc
add
mov
add
sub
adc
xor
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
adc
addr16
ljmp
inc
add
movsl
xchg
add
add
inc
add
xor
clc
repnz
nop
cld
jae
mov
lret
mov
clc
repnz
nop
cld
jae
add
add
add
jge
leave
push
mov
xchg
ret
add
mov
addb
mov
mov
cmp
ret
add
popa
leave
add
out
jecxz
push
clc
repnz
nop
cld
jae
subl
mov
and
mov
push
push
adc
push
clc
repnz
nop
cld
jae
xchg
add
imul
orl
add
lret
add
lea
test
inc
add
add
add
cmp
out
cs
clc
repnz
nop
cld
jae
flds
mov
sahf
movzwl
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
popa
add
mov
xchg
ret
mov
xlat
jo
push
push
mov
xchg
ret
movsl
add
add
add
repnz
pop
push
mov
xchg
ret
add
add
add
jo
mov
bound
mov
sub
mov
xchg
ret
push
sub
outsb
addr16
add
lods
push
mov
xchg
ret
add
and
fnstenv
mov
xchg
ret
add
movl
outsl
popa
fs
mov
nop
leave
nop
jmp
adc
popf
popa
and
add
clc
repnz
nop
cld
jae
test
add
nop
nop
cld
jae
fnstcw
insb
je
clc
repnz
nop
cld
jae
add
adc
mov
clc
repnz
nop
cld
jae
add
jo
jns
idiv
repnz
nop
cld
jae
add
and
add
fwait
add
add
repnz
nop
cld
jae
push
enter
push
mov
xchg
ret
sub
add
cmpsb
rolb
dec
add
mov
xchg
ret
ret
mov
add
inc
cli
add
clc
repnz
nop
cld
jae
nop
add
add
add
pusha
clc
repnz
nop
cld
jae
add
ljmp
mov
add
or
inc
add
popf
sbb
faddl
clc
jl
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
nop
jmp
ret
add
add
mov
lods
call
push
mov
nop
leave
nop
jmp
add
mov
push
mov
xchg
ret
add
fcoml
xor
dec
add
mov
xchg
ret
add
push
add
add
cmpl
push
mov
nop
leave
nop
jmp
add
sbb
loope
add
add
cmpsb
add
xchg
add
sbb
nop
nop
cld
jae
add
test
inc
adc
mov
xchg
ret
mov
pop
add
or
adc
and
clc
repnz
nop
cld
jae
mov
xchg
add
push
mov
xchg
ret
enter
add
jo
jbe
popf
push
push
mov
xchg
ret
add
add
nop
popf
jo
and
mov
clc
repnz
nop
cld
jae
add
mov
test
inc
clc
repnz
nop
cld
jae
or
add
insl
and
clc
repnz
nop
cld
jae
add
xchg
xchg
ljmp
nop
nop
cld
jae
add
movsl
add
xchg
lahf
mov
clc
repnz
nop
cld
jae
in
add
lea
push
mov
nop
leave
nop
jmp
or
or
mov
mov
nop
leave
nop
jmp
mov
add
mov
rolb
nop
nop
cld
jae
add
shll
nop
nop
cld
jae
out
add
add
add
nop
nop
cld
jae
test
fists
mov
push
mov
nop
leave
nop
jmp
add
xlat
inc
leave
add
cmpsb
jmp
nop
cld
jae
sbb
add
xchg
and
sub
shl
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
push
push
add
add
stos
movswl
clc
repnz
nop
cld
jae
pop
add
fcomip
sti
push
mov
fmuls
add
add
push
jbe
add
dec
add
nop
cld
jae
popf
mov
add
push
add
mov
repnz
nop
cld
jae
or
add
push
cltd
mov
clc
repnz
nop
cld
jae
shrb
rolb
es
repz
repnz
nop
cld
jae
ret
add
push
add
mov
add
clc
repnz
nop
cld
jae
add
add
push
nop
cld
jae
add
popa
mov
add
add
add
mov
nop
leave
nop
jmp
add
lret
push
push
mov
xchg
ret
add
nop
mov
fdivr
push
clc
repnz
nop
cld
jae
ret
mov
and
jmp
call
dec
jo
xchg
cld
push
add
and
in
dec
push
mov
xchg
ret
mov
push
add
cld
pusha
mov
and
imul
clc
repnz
nop
cld
jae
popa
add
dec
mov
clc
repnz
nop
cld
jae
ret
mov
push
mov
xchg
ret
add
add
xchg
mov
mov
pop
mov
add
cmpsb
fldcw
flds
xchg
ret
add
add
push
xor
mov
fadds
xchg
ret
add
in
pusha
add
mov
push
mov
xchg
ret
push
add
add
push
movsl
enter
mov
incb
xchg
ret
movsl
add
xchg
mov
mov
mov
push
mov
nop
leave
nop
jmp
or
push
jmp
add
add
push
push
xchg
add
mov
add
push
mov
xchg
ret
add
movsl
aad
add
repnz
nop
cld
jae
add
leave
add
sub
dec
mov
push
mov
xchg
ret
mov
popf
add
add
inc
and
clc
repnz
nop
cld
jae
add
mov
mov
nop
cld
jae
movsl
add
add
mov
push
mov
nop
leave
nop
jmp
add
add
not
push
mov
xchg
ret
addl
cmp
add
arpl
sub
add
push
mov
nop
leave
nop
jmp
add
pop
stc
je
xlat
push
add
loopne
mov
lea
push
mov
xchg
ret
orb
add
mov
enter
nop
leave
nop
jmp
mov
addr16
add
add
mov
add
add
mov
cmpsb
or
mov
xchg
ret
dec
push
popf
add
and
roll
in
jne
clc
repnz
nop
cld
jae
add
test
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
popa
add
stc
mov
add
test
push
mov
nop
leave
nop
jmp
fsub
jo
movsl
movsl
ljmp
clc
repnz
nop
cld
jae
addr16
add
clc
repnz
nop
cld
jae
add
add
lret
add
xchg
add
add
repnz
nop
cld
jae
stc
add
and
mov
or
repnz
nop
cld
jae
add
addb
ljmp
leave
nop
jmp
add
add
popa
pop
mov
push
mov
xchg
ret
push
add
push
cmp
nop
nop
cld
jae
test
add
adcl
add
clc
repnz
nop
cld
jae
add
add
ret
out
add
clc
repnz
nop
cld
jae
push
add
add
dec
rep
push
mov
nop
leave
nop
jmp
add
mov
cmp
repnz
nop
cld
jae
add
cmpsb
ljmp
rep
clc
repnz
nop
cld
jae
fs
repnz
add
fildll
cli
clc
repnz
nop
cld
jae
mov
fs
add
clc
repnz
nop
cld
jae
add
add
xchg
sbb
mov
clc
repnz
nop
cld
jae
add
out
add
or
add
add
repnz
nop
cld
jae
test
inc
xchg
add
dec
jb
clc
repnz
nop
cld
jae
add
add
pushl
clc
repnz
nop
cld
jae
andb
add
mov
pop
clc
repnz
nop
cld
jae
add
add
sarb
clc
clc
repnz
nop
cld
jae
sub
add
loope
repnz
nop
cld
jae
add
popa
in
mov
push
clc
repnz
nop
cld
jae
mov
addr16
inc
or
cld
push
push
mov
xchg
ret
sub
add
add
jbe
sub
sar
repnz
nop
cld
jae
cld
enter
incl
push
out
mov
push
mov
xchg
ret
addr16
push
add
add
mov
add
clc
repnz
nop
cld
jae
add
add
adc
add
add
in
nop
leave
nop
jmp
addl
add
add
xor
add
clc
repnz
nop
cld
jae
add
xor
test
sbb
nop
nop
cld
jae
dec
add
push
nop
cld
jae
cmp
push
cmpsb
add
sub
repnz
nop
cld
jae
outsb
dec
add
add
push
mov
nop
leave
nop
jmp
leave
filds
outsb
flds
mov
aaa
push
mov
repnz
nop
cld
jae
or
rolb
add
add
mov
xchg
ret
dec
nop
in
filds
add
clc
repnz
nop
cld
jae
xlat
mov
in
add
add
add
repnz
nop
cld
jae
lret
dec
subl
push
mov
nop
leave
nop
jmp
xchg
add
mov
incl
clc
clc
repnz
nop
cld
jae
add
les
leave
mov
mov
xchg
ret
add
add
les
xchg
in
out
cmp
push
mov
nop
leave
nop
jmp
add
subl
clc
repnz
nop
cld
jae
add
add
flds
popf
adc
cmpl
in
nop
leave
nop
jmp
add
add
push
sbb
or
clc
repnz
nop
cld
jae
repnz
xorb
or
clc
repnz
nop
cld
jae
add
ret
jle
rclb
aam
add
add
add
jo
xor
mov
and
clc
repnz
nop
cld
jae
add
add
incl
gs
push
mov
nop
leave
nop
jmp
add
aaa
pop
add
push
mov
nop
leave
nop
jmp
out
mov
add
push
mov
nop
leave
nop
jmp
add
decl
nop
nop
cld
jae
add
add
add
mov
push
mov
xchg
ret
stc
add
out
pop
add
jmp
mov
ret
add
add
xchg
addr16
add
xor
mov
adc
repnz
nop
cld
jae
add
movl
pop
push
mov
xchg
ret
xchg
add
add
add
push
mov
xchg
ret
add
mov
add
lretw
and
push
mov
xchg
ret
push
leave
mov
mov
adc
cmpl
push
mov
nop
leave
nop
jmp
xchg
lret
add
push
push
mov
xchg
ret
add
add
add
cld
add
add
add
enter
add
clc
repnz
nop
cld
jae
xorb
stc
clc
repnz
nop
cld
jae
pusha
movl
jecxz
mov
push
mov
xchg
ret
add
sbb
xchg
or
nop
nop
cld
jae
movsl
add
test
repnz
nop
cld
jae
add
add
jne
push
mov
nop
leave
nop
jmp
roll
fs
nop
leave
nop
jmp
cmp
xchg
add
add
add
rolb
mov
loop
push
mov
xchg
ret
movsl
add
push
test
xbegin
jae
cmpsb
add
mov
mov
clc
repnz
nop
cld
jae
add
add
sar
je
push
mov
nop
leave
nop
jmp
push
add
repz
mov
push
mov
nop
leave
nop
jmp
jecxz
les
xlat
adc
push
clc
repnz
nop
cld
jae
movsl
out
or
roll
mov
xlat
inc
add
add
add
add
jo
add
clc
repnz
nop
cld
jae
add
add
pop
or
in
nop
leave
nop
jmp
mov
mov
add
add
push
mov
xchg
ret
add
sub
mov
mov
imul
push
mov
nop
leave
nop
jmp
add
pusha
add
addb
lahf
mov
clc
repnz
nop
cld
jae
mov
mov
push
clc
repnz
nop
cld
jae
add
outsb
add
test
add
nop
nop
cld
jae
xchg
sub
test
nop
cld
jae
add
popa
add
mov
add
clc
repnz
nop
cld
jae
add
mov
cmp
clc
repnz
nop
cld
jae
repnz
mov
mov
clc
repnz
nop
cld
jae
enter
sub
jo
mov
mov
pop
clc
repnz
nop
cld
jae
add
add
mov
add
mov
in
nop
leave
nop
jmp
xchg
add
or
add
movzwl
clc
repnz
nop
cld
jae
sub
add
or
inc
clc
repnz
nop
cld
jae
add
add
jp
jbe
clc
repnz
nop
cld
jae
add
popa
add
mov
xchg
ret
outsb
add
popa
pusha
mov
and
add
push
mov
xchg
ret
add
movl
call
clc
repnz
nop
cld
jae
add
movsl
add
nop
nop
cld
jae
add
pop
test
add
xor
adc
testl
push
mov
nop
leave
nop
jmp
xlat
add
shr
push
mov
xchg
ret
add
push
inc
or
dec
cmp
repnz
nop
cld
jae
add
fildl
nop
leave
nop
jmp
mov
fbld
jae
mov
clc
repnz
nop
cld
jae
push
add
fdivp
icebp
clc
repnz
nop
cld
jae
mov
dec
ret
add
dec
push
mov
nop
leave
nop
jmp
xlat
add
test
add
push
nop
nop
cld
jae
add
add
mov
nop
leave
nop
jmp
add
cmpsb
add
ret
pop
mov
push
mov
xchg
ret
mov
fmull
cld
inc
adcl
mov
xchg
ret
mov
pusha
fadd
add
pop
push
mov
nop
leave
nop
jmp
and
outsb
add
jo
add
clc
push
mov
xchg
ret
sbb
mov
add
cmp
clc
repnz
nop
cld
jae
addl
mov
sub
repnz
nop
cld
jae
add
add
stc
ret
clc
repnz
nop
cld
jae
add
add
mov
inc
in
repnz
nop
cld
jae
pusha
or
cli
add
clc
repnz
nop
cld
jae
mov
nop
nop
cld
jae
dec
mov
repnz
cmp
nop
nop
cld
jae
add
fmull
fsubrl
inc
add
pop
xchg
test
xor
mov
jmp
repnz
nop
cld
jae
leave
ljmp
je
push
push
mov
xchg
ret
or
add
add
add
call
clc
repnz
nop
cld
jae
mov
xchg
js
push
mov
xchg
ret
add
fdivr
add
repnz
add
inc
add
push
mov
nop
leave
nop
jmp
mov
add
add
cmp
test
cld
clc
repnz
nop
cld
jae
addr16
clc
repnz
nop
cld
jae
pop
test
rolb
pop
mov
push
mov
nop
leave
nop
jmp
push
cld
add
mov
aad
cmp
push
mov
xchg
ret
add
and
mov
clc
repnz
nop
cld
jae
add
incl
add
mov
mov
push
mov
nop
leave
nop
jmp
pop
addr16
sub
clc
repnz
nop
cld
jae
adc
add
call
clc
repnz
nop
cld
jae
adc
fcompl
mov
xchg
ret
add
mov
test
call
clc
repnz
nop
cld
jae
adc
ljmp
lcall
jae
add
add
jmp
nop
movsl
add
add
jecxz
test
push
push
mov
xchg
ret
sub
add
sub
sbb
mov
nop
leave
nop
jmp
in
mov
or
lock
fisttps
out
add
cmp
mov
nop
nop
cld
jae
xchg
add
pusha
adc
pop
rep
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
sbb
push
or
push
mov
xchg
ret
add
imul
add
add
nop
pusha
add
add
clc
repnz
nop
cld
jae
outsb
ljmp
sti
push
mov
nop
leave
nop
jmp
push
sub
and
aas
push
mov
xchg
imul
add
add
lldt
add
add
fisttpl
nop
cld
jae
add
andb
mov
push
mov
nop
leave
nop
jmp
in
push
sub
add
xor
add
clc
repnz
nop
cld
jae
add
outsb
lods
push
mov
xchg
ret
sbb
xchg
enter
rcrb
push
mov
clc
repnz
nop
cld
jae
fsubl
add
mov
mov
nop
leave
nop
jmp
sbb
popf
fsub
fisubrs
clc
repnz
nop
cld
jae
popa
add
add
add
imul
clc
repnz
nop
cld
jae
cmp
mov
clc
repnz
nop
cld
jae
roll
sub
add
cmp
clc
repnz
nop
cld
jae
dec
addb
add
xchg
add
ret
clc
repnz
nop
cld
jae
popf
add
cmp
jl
and
mov
inc
add
mov
add
add
stos
push
mov
nop
leave
nop
jmp
add
xchg
stos
add
push
mov
nop
leave
nop
jmp
nop
rolb
add
add
fldl
xchg
ret
add
faddl
push
mov
nop
leave
nop
jmp
leave
sub
cs
push
mov
nop
leave
nop
jmp
push
mov
dec
and
push
mov
nop
leave
nop
jmp
repnz
rolb
clc
repnz
nop
cld
jae
stc
add
adcb
or
clc
repnz
nop
cld
jae
add
jecxz
pop
xor
clc
repnz
nop
cld
jae
add
adc
add
xchg
add
inc
or
mov
xchg
ret
add
add
add
addr16
data16
jmp
enter
xchg
fs
popf
push
fld
dec
add
clc
repnz
nop
cld
jae
leave
add
mov
add
popa
clc
repnz
nop
cld
jae
enter
sub
pop
clc
repnz
nop
cld
jae
ljmp
add
clc
repnz
nop
cld
jae
add
sbb
or
repnz
nop
cld
jae
adc
xchg
nop
add
incl
push
mov
nop
leave
nop
jmp
jecxz
add
stos
les
clc
repnz
nop
cld
jae
add
or
test
add
push
mov
nop
leave
nop
jmp
inc
xchg
cmpl
and
mov
xchg
ret
mov
mov
dec
outsb
repnz
clc
repnz
nop
cld
jae
add
repnz
movsl
push
sub
push
mov
xchg
ret
mov
add
cli
call
in
nop
leave
nop
jmp
movl
test
push
mov
nop
leave
nop
jmp
incl
add
jo
insb
push
clc
repnz
nop
cld
jae
sub
add
mov
incl
popf
nop
add
or
sub
fsts
clc
repnz
nop
cld
jae
add
mov
add
inc
inc
add
repnz
nop
cld
jae
add
or
cld
or
add
in
nop
leave
nop
jmp
outsb
add
ret
stc
push
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
test
test
repnz
xchg
movsl
xlat
mov
add
repnz
add
lods
sub
clc
repnz
nop
cld
jae
adc
ljmp
push
mov
xchg
ret
pusha
ret
add
mov
mov
push
clc
repnz
nop
cld
jae
add
test
inc
outsb
xorl
clc
repnz
nop
cld
jae
add
outsb
lea
clc
repnz
nop
cld
jae
add
fwait
push
clc
repnz
nop
cld
jae
and
add
xchg
incl
aas
lea
push
mov
xchg
ret
add
cmpsb
adc
xor
add
clc
repnz
nop
cld
jae
add
loop
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
addr16
add
mov
push
add
call
mov
cmpsb
add
sbb
add
add
mov
push
mov
nop
leave
nop
jmp
add
inc
adc
inc
push
psubsb
clc
repnz
nop
cld
jae
add
add
cmpl
cmp
ret
add
add
mov
add
repnz
mov
filds
xchg
ret
out
ljmp
or
mov
nop
leave
nop
jmp
add
add
add
add
clc
repnz
nop
cld
jae
push
add
add
cmpb
sub
add
clc
repnz
nop
cld
jae
add
sar
nop
nop
cld
jae
inc
jecxz
add
mov
add
leave
inc
imul
add
cmp
dec
add
repnz
nop
cld
jae
xchg
adc
mov
jne
clc
repnz
nop
cld
jae
xlat
dec
add
xchg
decl
inc
in
inc
add
push
mov
add
mov
nop
leave
nop
jmp
mov
add
inc
sub
jns
call
in
nop
leave
nop
jmp
inc
push
adc
inc
adc
repnz
nop
cld
jae
outsb
add
or
inc
clc
repnz
nop
cld
jae
add
add
pusha
mov
incb
nop
nop
cld
jae
add
add
mov
nop
nop
cld
jae
leave
add
push
push
add
insb
pop
clc
repnz
nop
cld
jae
add
add
nop
add
decl
mov
xchg
ret
pop
popa
mov
addl
sbb
nop
cld
jae
sbbb
test
mov
scas
mov
clc
repnz
nop
cld
jae
outsb
add
loopne
mov
or
add
les
or
popf
andl
popf
sub
rclb
loope,pn
add
outsb
mov
xchg
add
and
clc
repnz
nop
cld
jae
mov
outsb
add
dec
movzwl
clc
repnz
nop
cld
jae
in
add
shlb
data16
mov
clc
repnz
nop
cld
jae
sub
push
add
mov
clc
repnz
nop
cld
jae
out
add
addb
scas
imul
clc
repnz
nop
cld
jae
add
mov
xchg
ret
xchg
decl
clc
repnz
nop
cld
jae
add
add
xchg
add
mov
add
mov
out
jecxz
mov
cmp
repnz
nop
cld
jae
add
iret
mov
clc
repnz
nop
cld
jae
add
add
pusha
adc
rolb
movsl
in
pop
clc
repnz
nop
cld
jae
enter
xlat
or
add
jbe
clc
repnz
nop
cld
jae
add
in
or
and
stc
inc
add
add
add
filds
xor
call
clc
repnz
nop
cld
jae
add
add
add
mov
push
add
xchg
ret
mov
jecxz
mov
add
add
repnz
nop
cld
jae
xlat
add
jmp
jp
push
mov
nop
leave
nop
jmp
add
add
push
push
mov
xchg
ret
add
xlat
xchg
add
add
jecxz
add
push
push
mov
xchg
ret
stc
mov
add
call
in
nop
leave
nop
jmp
add
mov
pushl
clc
repnz
nop
cld
jae
xlat
add
add
jo
jne
push
mov
nop
leave
nop
jmp
add
clc
repnz
nop
cld
jae
add
test
mov
das
jne
clc
repnz
nop
cld
jae
movsl
enter
mov
add
lods
iret
xchg
testl
jecxz
movb
xor
push
mov
nop
leave
nop
jmp
movl
mov
clc
inc
add
mov
add
add
add
repnz
nop
cld
jae
outsb
cld
outsb
add
mov
mov
xchg
ret
ret
push
sbb
incl
mov
mov
xchg
ret
xlat
add
leave
or
xchg
push
add
push
mov
xchg
ret
ljmp
dec
add
clc
repnz
nop
cld
jae
adc
add
popa
add
repnz
nop
cld
jae
push
fcoml
xor
mov
xor
clc
repnz
nop
cld
jae
add
les
sti
push
mov
nop
leave
nop
jmp
add
rolb
xchg
xchg
rorl
lods
lock
add
jo
add
popa
popa
fs
call
in
nop
leave
nop
jmp
outsb
sbb
fbld
insb
mov
jmp
incl
add
ret
add
test
add
repnz
nop
cld
jae
push
fsts
popf
push
clc
repnz
nop
cld
jae
pop
enter
push
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
push
inc
push
cmpsb
ljmp
nop
nop
cld
jae
xchg
repnz
add
add
mov
xchg
ret
mov
popa
add
push
inc
push
adc
clc
repnz
nop
cld
jae
sub
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
sub
fists
and
repnz
nop
cld
jae
add
add
adc
nop
nop
cld
jae
add
mov
cmp
repnz
nop
cld
jae
add
outsb
xorl
sub
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
movsl
add
push
add
rclb
sbb
inc
add
add
add
repnz
nop
cld
jae
xlat
add
dec
add
add
push
mov
xchg
ret
xchg
push
add
fildl
in
nop
leave
nop
jmp
add
adc
mov
adc
repnz
nop
cld
jae
sbb
add
add
or
add
repnz
nop
cld
jae
sub
add
or
call
clc
repnz
nop
cld
jae
add
add
stc
pop
clc
repnz
nop
cld
jae
add
push
add
ret
dec
mov
clc
repnz
nop
cld
jae
or
push
enter
mov
nop
leave
nop
jmp
xchg
add
xchg
add
in
nop
leave
nop
jmp
add
pusha
or
xchg
pop
xor
push
mov
xchg
ret
mov
xchg
add
add
out
add
clc
repnz
nop
cld
jae
add
add
cmpl
dec
clc
dec
inc
clc
repnz
nop
cld
jae
shl
add
jnp
add
add
clc
repnz
nop
cld
jae
fbld
add
sub
test
cmp
ret
add
in
nop
ret
mov
add
add
in
nop
leave
nop
jmp
add
jmp
clc
repnz
nop
cld
jae
add
repnz
dec
push
clc
repnz
nop
cld
jae
outsb
repnz
add
add
pop
cmp
repnz
nop
cld
jae
jo
add
add
stos
push
mov
je
add
into
add
xchg
dec
xchg
push
add
insl
xchg
cwtl
inc
bound
mov
push
testl
xchg
flds
jno
add
add
mov
push
mov
xchg
ret
add
add
mov
cmp
repnz
nop
cld
jae
add
dec
cmp
mov
arpl
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
push
cmp
roll
xchg
add
mov
push
mov
xchg
ret
add
add
push
mov
or
clc
repnz
nop
cld
jae
add
add
add
sub
dec
cmpl
push
mov
nop
leave
nop
jmp
popf
cld
add
mov
nop
leave
nop
jmp
add
popf
mov
add
adc
repnz
nop
cld
jae
dec
adc
nop
lret
das
push
push
mov
xchg
ret
add
cld
add
push
clc
repnz
nop
cld
jae
ljmp
fwait
mov
push
mov
nop
leave
nop
jmp
mov
xlat
push
adc
add
jnp
sar
nop
nop
cld
jae
push
add
push
shl
mov
push
add
mov
dec
add
jl
cmpl
xor
das
add
ss
movsb
sbb
insb
inc
jb
clc
repnz
nop
cld
jae
add
or
mov
jmp
add
popf
call
nop
dec
mov
clc
repnz
nop
cld
jae
add
filds
nop
nop
cld
jae
pop
pusha
add
mov
pusha
clc
repnz
nop
cld
jae
add
mov
in
add
add
pushl
push
mov
xchg
ret
fistpll
add
leave
addl
xor
add
repnz
nop
cld
jae
mov
add
stos
pusha
clc
repnz
nop
cld
jae
shlb
pusha
push
add
incl
jno
mov
clc
repnz
nop
cld
jae
rolb
mov
addr16
ja
add
and
clc
repnz
nop
cld
jae
sub
add
mull
repnz
nop
cld
jae
add
arpl
or
repnz
nop
cld
jae
popf
add
popa
clc
repnz
nop
cld
jae
add
repnz
add
lret
mov
je
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
push
add
cmc
mov
xlat
cltd
push
clc
repnz
nop
cld
jae
ret
add
add
shll
sub
clc
repnz
nop
cld
jae
fistps
mov
movzwl
clc
repnz
nop
cld
jae
add
add
lret
clc
repnz
nop
cld
jae
add
add
add
mov
xor
in
inc
add
add
fbstp
push
mov
nop
leave
nop
jmp
xchg
mov
add
clc
repnz
nop
cld
jae
xchg
add
enter
xor
mov
cmp
ret
add
add
sub
add
push
mov
xchg
ret
add
xchg
sbb
add
mov
add
add
repnz
nop
cld
jae
mov
mov
inc
clc
repnz
nop
cld
jae
add
pushw
vpaddw
repnz
nop
cld
jae
add
stc
mov
call
in
nop
leave
nop
jmp
test
add
push
cltd
and
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
sub
or
pop
add
mov
rcl
inc
add
or
add
or
mov
add
repnz
nop
cld
jae
add
add
into
in
dec
mov
add
add
mov
add
sub
add
push
mov
nop
leave
nop
jmp
add
addb
hlt
cmp
lods
fiaddl
xchg
ret
add
add
cld
movzwl
push
mov
xchg
ret
add
sbb
decl
sbb
mov
scas
add
mov
rolb
mov
mov
aam
fwait
push
clc
repnz
nop
cld
jae
xchg
sub
add
clc
repnz
nop
cld
jae
add
in
ja
dec
shr
clc
repnz
nop
cld
jae
add
roll
or
push
mov
nop
leave
nop
jmp
or
add
push
mov
xchg
ret
lret
mov
add
push
mov
xchg
ret
add
add
repnz
les
mov
lea
push
mov
xchg
ret
or
add
add
push
js
mov
xchg
ret
sub
jecxz
cld
fcompl
mov
xchg
ret
add
add
inc
and
fdivrp
push
mov
nop
leave
nop
jmp
xchg
add
movsl
add
movsl
addb
mov
add
push
mov
xchg
ret
mov
out
dec
mov
jmp
add
jo
or
add
add
nop
cld
jae
add
popa
push
mov
add
add
leave
nop
jmp
push
push
add
sub
fmull
lret
loop
add
in
add
add
cli
add
clc
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
movsl
add
push
xchg
cmp
repz
dec
clc
repnz
nop
cld
jae
add
add
leave
add
add
clc
repnz
nop
cld
jae
add
add
and
push
mov
xchg
ret
repnz
add
add
mov
xchg
ret
add
add
cmp
aaa
xchg
mov
clc
repnz
nop
cld
jae
add
add
cmp
pop
mov
push
mov
nop
leave
nop
jmp
add
inc
lret
popa
xorl
push
mov
nop
leave
nop
jmp
add
movsl
icebp
loop
mov
sti
add
add
in
nop
leave
nop
jmp
jecxz
andb
scas
mov
clc
repnz
nop
cld
jae
add
pop
ficoml
repnz
nop
cld
jae
movl
add
repz
nop
leave
nop
jmp
fisttps
les
mov
mov
clc
repnz
nop
cld
jae
xchg
in
add
mov
clc
repnz
nop
cld
jae
add
addr16
je
clc
repnz
nop
cld
jae
ljmp
jp
mov
add
call
mov
mov
clc
repnz
nop
cld
jae
incl
add
popf
jns
push
mov
nop
leave
nop
jmp
add
filds
add
add
cmp
push
mov
xchg
ret
enter
add
add
xor
repnz
nop
cld
jae
mov
add
mov
jmp
test
mov
jo
out
add
add
xor
push
mov
nop
leave
nop
jmp
add
xlat
xchg
mov
add
push
mov
xchg
ret
push
repnz
mov
push
mov
mov
add
add
out
das
add
sarb
add
les
push
mov
xchg
ret
add
add
fistps
repnz
nop
cld
jae
add
add
scas
call
clc
repnz
nop
cld
jae
adcb
xchg
filds
dec
cmp
repnz
nop
cld
jae
add
dec
add
in
mov
clc
repnz
nop
cld
jae
add
iret
add
clc
repnz
nop
cld
jae
stc
add
outsb
sbb
in
cmpw
clc
repnz
nop
cld
jae
add
rclb
in
nop
leave
nop
jmp
or
adc
mov
mov
lea
clc
repnz
nop
cld
jae
xlat
add
add
mov
or
in
incl
pop
mov
inc
aaa
add
jns
add
sub
dec
sbb
xor
mov
andl
mov
pop
icebp
mov
or
in
loope
xchg
mov
mov
jae
rolb
mov
int3
cltd
adc
mov
xor
negl
sbb
xchg
sub
dec
addb
cli
cs
mov
mov
mov
mov
mov
sub
cmp
and
inc
cmpsb
and
xchg
out
sbb
push
add
rorl
mov
push
add
dec
adc
pop
fs
adc
mov
mov
ss
push
ret
test
xchg
je
rolb
icebp
inc
xchg
add
cltd
incb
jns
or
lahf
fnsetpm(287
aam
dec
sbb
pop
outsb
mov
jbe
jecxz
bound
mov
aam
add
add
iret
repz
cmp
ret
dec
push
test
stos
data16
mov
jnp
or
add
add
cmp
mov
mov
add
add
mov
add
adc
mov
jmp
pushf
int
ds
cmp
daa
inc
inc
pop
push
add
push
cld
mov
add
pop
stc
rolb
mov
jecxz
xor
cmp
rolb
mov
mov
add
insb
test
or
sbb
hlt
fstpl
cmova
repz
shll
cli
ljmp
call
add
jp
scas
lret
jbe
inc
fldcw
inc
cmpsb
mov
outsb
or
add
sti
mov
mov
addb
pop
andl
mov
add
and
call
xor
jne
mov
add
mov
push
add
cmpsb
dec
cltd
gs
and
mov
mov
cmp
push
xor
add
xchg
gs
rolb
mov
add
xchg
mov
inc
add
mov
cmp
out
notl
ljmp
add
out
mov
out
add
mov
dec
xor
xchg
aad
jb
mov
lock
adc
aad
xlat
pop
xlat
sahf
sbb
adc
pop
out
xor
mov
dec
ret
mov
inc
cmp
mov
ret
mov
mov
icebp
sbb
mov
fstpl
or
stos
push
jmp
das
or
fs
mov
mov
lods
and
mov
add
add
adc
mov
push
jb
mov
in
pop
mov
xchg
outsl
jl
jno
xchg
add
inc
lret
les
sti
hlt
xchg
sahf
into
mov
aas
das
stc
loopne
mov
pop
mov
add
sbb
push
pop
test
out
addr16
and
xchg
nop
add
mov
mov
std
stos
scas
mov
mov
mov
clc
pop
lret
adc
add
dec
jo
mov
mov
adc
mov
rcll
aas
adc
lods
inc
mov
inc
add
lret
xlat
mov
mov
mov
stos
insl
inc
xor
cmpsl
sub
cmovae
or
add
hlt
mov
iret
clc
test
pop
cmp
pop
les
add
push
aas
sahf
dec
dec
and
mov
popf
rolb
mov
cld
rolb
imul
add
mov
mov
lods
add
pop
repz
sbb
fs
gs
inc
add
ljmp
mov
add
aam
addb
cmpsl
mov
mov
mov
mov
in
add
and
add
add
mov
outsl
add
add
hlt
xchg
sbb
cmp
xchg
add
aam
ss
shrl
add
pop
pop
sahf
fcomps
sahf
push
lds
xchg
mov
add
test
mov
lret
out
mov
pop
btr
lret
rolb
mov
loop
mov
inc
mov
addb
lds
ja
mov
jge
scas
jo
mov
add
add
lahf
dec
cmc
adc
outsl
mov
mov
in
aam
sti
push
mov
icebp
and
fdivl
stc
lret
jne
ljmp
add
movsb
inc
xor
mov
mov
dec
arpl
and
fadds
add
add
loopne
mov
xor
fimuls
sbb
push
jae
pop
adc
mov
add
mov
jg
add
and
sbb
dec
out
sub
sbb
push
add
inc
mov
mov
rolb
mov
or
add
add
jnp
pop
arpl
rcll
repz
pop
push
scas
iret
xchg
les
cmpl
pushf
dec
repnz
cmpsb
cld
loope
add
mov
ds
rolb
mov
adc
mov
sbb
mov
push
ss
mov
mov
and
cmpsb
and
inc
add
addl
add
mov
lock
jno
ja
add
mov
fmuls
addb
mov
out
dec
sub
mov
sub
sub
mov
pop
push
xchg
lds
insl
icebp
pop
add
mov
data16
or
pushf
sub
data16
push
jbe
mov
mov
pop
fs
and
push
add
or
shrl
cmc
and
mov
mov
push
loop
mov
sub
ror
icebp
xchg
popa
xchg
push
pop
cmp
cmpsb
push
aam
add
mov
add
xchg
bound
mov
cmpsl
cmp
lock
addr16
aaa
dec
push
cmp
jno
jb
mov
inc
adc
mov
add
mov
push
jns
mov
sub
push
popf
sub
mov
ljmp
dec
cs
mov
and
add
mov
testl
out
test
les
add
add
push
add
sub
push
xchg
adc
sub
or
add
frstor
fistps
lock
mov
mov
xor
mov
daa
jecxz
or
sub
add
inc
jle
sbb
stos
mov
jae
movsl
test
test
inc
push
int
rcrl
sub
sub
test
add
sbb
int3
movsb
imul
mov
add
pushl
xchg
add
mov
fdiv
add
xchg
xchg
test
mov
jne
test
adc
fldcw
cmpsb
lahf
fildll
cmp
sbb
ret
clc
and
shrl
sub
add
jle
cli
mov
jmp
mov
nop
add
adc
push
push
or
push
add
add
enter
jnp
add
add
mov
and
mov
add
in
ret
es
lods
iret
mov
stos
or
add
mov
mov
sub
push
dec
mov
aam
or
fcmovnbe
clc
outsl
out
sbb
mov
add
mov
addr16
mov
mov
fisubs
add
mov
pop
sbb
repnz
in
adc
mov
pop
fadds
mov
mov
push
jae
repz
inc
xchg
xchg
lahf
cmp
pop
fwait
mov
ds
sbb
mov
rolb
mov
lea
add
fcompl
loopne
mov
mov
rorl
sbb
add
xchg
cmp
mov
add
fisttps
cmp
lods
int
scas
jno
lods
push
cwtl
pop
or
pop
es
lea
mov
add
xlat
jg
add
pop
jnp
adc
add
sub
adc
mov
int3
pop
ljmp
mov
add
mov
mov
inc
pop
dec
sbb
sahf
cmp
imul
mov
pop
aad
add
cmp
cmp
mov
mov
dec
rolb
mov
cmpxchg
ds
aaa
int
inc
fsubrl
jmp
sub
add
jns
repz
add
xchg
push
jbe
add
mov
sub
insl
push
push
test
in
sbb
cmp
out
dec
jne
dec
jb
mov
add
jecxz
dec
push
ret
aam
fdivr
dec
sub
add
cmpsl
mov
add
add
push
add
push
mov
fs
in
stos
repz
add
cld
push
in
iret
push
or
iret
lods
dec
dec
pop
insl
mov
mov
mov
inc
popf
mov
pop
jae
add
xor
pop
insb
movsl
xchg
jb
mov
je
sbb
fldenv
out
mov
inc
jns
push
out
add
test
pop
lret
or
mov
aad
loopne
mov
push
rolb
mov
ret
dec
add
jo
mov
pop
out
add
xor
add
adc
in
cmp
mov
cmp
push
jle
add
cmp
rolb
out
inc
push
add
clc
mov
rolb
mov
pop
aad
in
and
and
mov
jb
mov
lods
pushf
push
dec
out
imul
mov
mov
and
mov
not
lret
mov
pushf
and
in
lret
lock
mov
adc
pushf
cmc
aad
pusha
add
fisttps
rolb
mov
test
repz
add
sub
add
jp
addl
mov
or
add
jb
mov
add
mov
mov
test
add
addb
cmpxchg
mov
enter
add
adc
mov
mov
jne
sub
test
xchg
dec
jmp
mov
rolb
mov
inc
xchg
sub
mov
xlat
addb
mov
mov
sub
jbe
jmp
iret
push
pop
into
shll
mov
sahf
out
jecxz
sbb
dec
pusha
add
add
inc
mov
cli
std
pop
and
xor
dec
mov
mov
addb
or
scas
sbb
add
xor
add
mov
push
in
mov
cltd
clc
xor
mov
out
orl
add
sbb
inc
daa
fisttps
pushf
push
push
add
push
mov
add
popa
imul
mov
mov
outsl
ja
add
cwtl
jnp
add
mov
repz
test
test
arpl
rcll
and
stc
xchg
cmp
push
mov
loop
mov
add
add
mov
movsl
rorl
sub
pop
sub
lret
pusha
add
stos
or
push
lea
sub
jb
mov
je
mov
add
mov
sbb
in
mov
mov
lds
sbb
loop
mov
lea
ljmp
jo
mov
repz
shrl
sub
in
repnz
mov
add
es
in
push
pop
xchg
cmpsb
mov
mov
std
jno
outsb
jge
xor
mov
inc
add
outsb
push
add
mov
ds
les
add
rorl
add
add
mov
adc
mov
add
bound
mov
mov
pop
mov
add
in
mov
jno
xchg
insl
ljmp
add
insl
push
btc
ljmp
rolb
mov
or
mov
int3
jecxz
add
jbe
dec
dec
mov
in
mov
mov
inc
add
add
mov
adc
mov
and
sbb
popa
loop
mov
add
fistps
xor
xchg
add
inc
mov
xor
push
fiaddl
add
push
push
jo
mov
test
sbb
lock
xor
insl
inc
dec
test
aaa
enter
add
orl
pop
cmpsb
jbe
cli
pushf
jl
nop
add
push
ret
into
insl
lahf
pop
fdivr
imul
loop
mov
imul
jo
mov
inc
add
xlat
xchg
add
pop
fwait
rolb
mov
add
xchg
nop
add
subl
mov
stc
outsb
loop
mov
add
xlat
iret
sbb
pop
xor
repnz
rolb
mov
mov
mov
push
add
xchg
cs
adc
imul
out
and
hlt
dec
xor
push
push
push
or
xor
fists
mov
cmp
outsb
xchg
pop
xchg
insb
enter
jmp
jmp
fists
lods
mov
stos
mov
add
adc
je
and
pop
hlt
xchg
pop
cmp
jo
mov
arpl
pusha
add
lods
mov
mov
and
add
loop
mov
rolb
fnstcw
dec
aam
adc
mov
shll
clc
idivb
stos
mov
dec
push
dec
push
xchg
mov
or
mov
aam
into
sbb
outsl
ja
shll
xchg
add
adc
push
and
mov
lea
mov
mov
jbe
addr16
sub
pop
jmp
fprem1
fcomip
add
add
aam
cmpsb
bound
mov
mov
add
mov
jg
push
clc
dec
arpl
add
mov
clc
imul
and
mov
or
mov
xchg
jno
je
lock
mov
cmp
insl
ret
adc
mov
inc
add
adc
mov
mov
mov
xor
enter
fdiv
rolb
dec
dec
outsl
rorl
scas
rol
cmpsl
inc
mov
rolb
mov
add
mov
cld
mov
pop
sub
pop
sub
mov
pop
lods
xchg
adc
mov
xchg
pop
xchg
hlt
mov
ds
pop
sbb
pop
popf
and
inc
sti
scas
and
sbb
mov
add
mov
xor
in
xor
mov
cld
loop
mov
sub
lret
mov
inc
add
loope
jmp
ss
js
jle
mov
and
push
sbb
pop
sub
loopne
mov
add
lahf
in
jno
outsb
arpl
push
pop
mov
iret
rolb
mov
add
cltd
rolb
push
fstps
test
pop
xor
ljmp
ds
sti
dec
sti
loope
xor
in
inc
push
scas
adc
push
add
xchg
add
push
ret
sub
sbb
add
cmp
mov
fdivrp
ficoml
mov
adc
mov
sub
mov
push
push
lods
jmp
mov
arpl
cltd
pop
pop
xor
mov
inc
pushf
rolb
mov
out
add
mov
and
mov
add
sub
add
mov
cmc
lret
testb
mov
stc
enter
pusha
add
jnp
les
add
enter
in
add
xor
mov
inc
aad
add
stc
outsl
out
mov
insb
std
rol
mov
and
dec
sbb
scas
fucomi
jae
add
dec
leave
sub
jge
add
or
add
add
mov
hlt
ret
outsl
popf
stos
dec
out
jnp
jecxz
cmpsl
insb
jp
sub
add
sahf
mov
getsec
jecxz
inc
sub
mov
repz
fldt
xchg
add
sbb
insl
leave
stos
fs
add
cmp
inc
add
js
shrl
push
xchg
adc
lods
xor
push
bound
mov
inc
jnp
notl
mov
movsb
mov
movl
add
ds
jmp
add
pop
pop
call
lret
mov
xor
mov
add
add
dec
sbb
or
pop
int
add
int
clc
das
sbb
and
add
and
mov
iret
mov
and
mov
lea
push
aam
add
in
inc
out
mov
mov
in
dec
in
in
add
lcall
mov
mov
insb
in
pop
xor
dec
rolb
stc
mov
jmp
dec
add
xchg
add
bound
mov
adc
int3
mov
popf
imul
repz
xchg
add
negl
shll
mov
dec
enter
rorl
xor
cli
and
add
lds
lea
mov
lods
int
pop
xchg
cmp
pop
xchg
xchg
jo
mov
jnp
and
pop
cmp
xlat
rolb
mov
xlat
mov
push
cmc
jl
dec
sbb
mov
ret
imul
rcl
ret
jae
dec
jl
cmc
cmp
sahf
rolb
mov
add
mov
ss
sti
mov
xor
push
add
mov
mov
mov
push
fdiv
sub
xchg
jl
add
mov
xor
mov
in
xor
mov
xchg
js
push
add
mov
dec
ret
frstor
add
adc
mov
push
add
jo
mov
add
ficomps
mov
add
mov
xchg
out
test
mov
sub
dec
sub
cld
pop
cmpsb
pop
jmp
outsl
bound
mov
lret
push
mov
addb
loopne
mov
push
enter
loope
aam
jb
mov
pop
inc
mov
mov
jecxz
icebp
leave
jb
mov
sbb
jne
lahf
nop
add
pop
in
nop
add
testb
loope
ss
adc
pop
mov
adc
mov
mull
add
loope
cmp
add
add
mov
pop
pop
mov
add
mov
cli
cmp
scas
mov
addb
sti
das
mov
inc
imulb
addr16
add
xor
stc
or
add
push
xor
mov
xchg
lret
mov
cli
mov
mov
mov
add
cli
daa
arpl
add
mov
xorl
cmp
fs
xchg
jg
ret
xchg
jle
dec
fs
loop
mov
imulb
mov
out
dec
dec
mov
daa
fsubrp
dec
not
mov
imul
cltd
dec
pop
jmp
sub
lods
enter
mov
call
sbb
add
and
mov
inc
inc
add
out
sub
add
add
mov
mov
xchg
lock
push
jo,pt
mov
gs
xor
mov
mov
xchg
xchg
add
mov
and
mov
mov
push
iret
mov
mov
sbb
or
add
cmp
add
adc
mov
fistpll
jecxz
lret
push
add
ja
scas
pop
pop
xor
mov
and
inc
or
ret
or
mov
add
fistpl
add
mov
dec
jne
jmp
push
mov
ret
fildll
mov
mov
jnp
pop
sti
adc
and
mov
add
shll
add
ds
out
or
arpl
ja
orl
adc
mov
popa
push
push
loope
add
dec
mov
add
mov
push
ljmp
mov
add
mov
mov
pop
or
sbb
add
add
mov
in
add
jg
or
mov
mov
cltd
pushf
aam
inc
fistpl
cmpl
add
xor
lcall
jle
lcall
jg
je
sbb
outsl
mov
daa
testb
mov
add
xchg
insl
div
xchg
add
imul
out
add
xchg
in
pop
jae
add
mov
loopne
mov
inc
out
push
add
xor
mov
iret
aad
data16
out
mov
add
and
loope
or
sub
outsl
mov
iret
in
or
je
ja
or
shrl
mov
pop
stos
add
mov
inc
movsl
push
add
jge
repnz
dec
loopne
mov
add
cli
xchg
sbb
cwtl
sarl
jl
into
cltd
rorl
jmp
add
cmp
jmp
add
mov
xor
jmp
rolb
dec
icebp
or
divb
add
lods
inc
add
or
pop
nop
add
xor
add
pop
jg
mov
sub
adc
inc
add
lock
mov
rcll
dec
push
add
rolb
mov
cmp
add
dec
sbbl
lcall
xor
into
xor
mov
movb
xor
jp
rolb
mov
idivb
or
popl
add
cmp
lahf
test
rolb
mov
int3
hlt
push
mov
or
and
stos
jb
mov
rolb
xor
mov
add
in
mov
mov
or
in
xor
mov
pop
mov
leave
movsl
mov
into
mov
mov
xchg
xchg
sub
add
cmp
or
add
int3
divb
mov
jge
mov
add
xor
dec
jge
cmpsl
test
jb
mov
add
xchg
scas
out
sbb
mov
inc
push
or
add
xor
fimuls
aam
inc
add
inc
sbb
pop
mov
mov
add
mov
xchg
mov
out
sbb
xchg
iret
xchg
das
mov
mov
pop
out
cmp
cmp
push
mov
push
cmp
add
and
addb
and
cli
pop
rcll
popa
aad
add
test
add
add
cmp
add
mov
imul
push
dec
push
add
into
push
stos
in
push
dec
lea
mov
dec
push
sbb
mov
fwait
sub
inc
lods
cmp
adc
les
enter
push
stos
and
mov
add
lods
adc
mov
popf
iret
jae
sub
adc
ljmp
xor
xchg
jno
loopne
mov
je
cmpsl
push
lods
sbb
mov
out
mov
daa
es
add
add
mov
cli
jge
das
scas
jp
cmp
or
stos
aam
push
mov
add
mov
pshufw
xchg
rolb
mov
push
add
mov
hlt
cmp
xchg
add
rcll
add
loop
mov
aaa
push
sbb
mov
test
repz
rolb
aam
add
pop
add
mov
or
mov
mov
add
addb
cmp
movsl
mov
sbb
dec
adcl
pop
mov
xchg
insb
call
pop
cltd
xor
mov
sub
xor
jno
jne
add
sub
add
mov
lea
fistpll
push
push
cltd
mov
mov
rolb
mov
aad
pop
addb
into
mov
pop
int
jne
addr16
pop
addb
pushf
and
mov
mov
out
out
pop
pusha
add
xor
int
add
insl
adc
mov
add
add
nop
add
cli
pop
stos
cmpsl
adc
mov
and
xor
movaps
int
add
sbb
or
cmp
add
into
pop
in
mov
mov
or
add
adc
aam
js
stc
xchg
adc
loope
dec
lods
adc
mov
mov
fildl
fsubs
imul
mov
rolb
mov
lcall
pop
and
lahf
repz
fldl
imul
add
sbb
and
mov
mov
add
out
ss
loop
mov
sub
adc
mov
and
addb
aaa
jg
aaa
push
mov
add
cmp
out
dec
mov
mov
sbb
xchg
push
sbb
adc
fwait
jp
out
jecxz
add
add
enter
movsl
into
lock
jecxz
dec
icebp
pop
lds
add
mov
dec
inc
cwtl
flds
or
add
sub
sub
loope
sbb
lret
pop
ljmp
lods
lods
and
mov
add
add
lahf
xchg
stos
mov
mov
push
jns
add
jno
add
or
cmc
sbb
rolb
mov
mov
addb
cltd
or
movsl
addb
add
ja
push
sbb
push
nop
add
lds
test
dec
rolb
mov
add
jo
mov
test
jmp
sbb
push
mov
pushf
jmp
xor
jmp
add
cmpl
inc
idivl
sub
jns
adc
cmp
add
ljmp
inc
add
imul
mov
push
pop
test
jne
mov
xor
rolb
mov
out
mov
jle
test
outsl
cmp
or
add
add
add
daa
std
jbe
mov
pop
mov
and
mov
in
rcr
sbb
dec
std
dec
adc
xor
mov
jno
in
mov
je
mov
add
mov
add
cltd
pop
inc
addb
imul
add
pop
jno
mov
mov
add
loope
push
pop
repz
imul
out
mov
add
out
add
add
mov
mov
pop
jg
add
test
les
mov
xor
inc
add
stos
sbb
inc
test
lods
xor
xchg
add
fisttpll
ja
add
pushf
or
inc
inc
ljmp
add
dec
mov
add
lret
or
fists
add
dec
push
sbb
pushf
add
popf
out
jge
mov
scas
lods
leave
aad
sahf
popl
mov
mov
je
rolb
pop
aam
repnz
mov
push
lock
mull
fwait
jle
mov
in
aad
out
add
mov
mov
jle
jmp
add
jp
orl
jl
pop
adcl
mov
jp
incb
cmp
sub
fildl
lods
fsts
movsb
xor
mov
mov
popf
inc
pop
add
pop
mov
push
add
clc
sahf
es
repz
out
add
pop
pop
bound
mov
out
hlt
fnstsw
inc
cmp
repz
mov
daa
test
clc
addr16
movsb
inc
sub
add
xchg
xlat
jb
mov
test
pushf
mov
inc
add
xchg
push
cs
dec
into
mov
adc
and
add
add
push
popf
addb
in
stos
mov
mov
inc
add
jg
add
or
xchg
push
xor
mov
std
or
jmp
inc
ret
push
add
ret
mov
call
cltd
add
mov
push
fadds
cltd
out
scas
jg
pop
mov
loopne
mov
xchg
nop
add
fdivp
cltd
repz
bound
mov
das
sub
das
mov
cwtl
lret
add
scas
sbb
in
sbb
push
rolb
mov
push
stos
popa
lea
cld
and
repnz
mov
out
jae
mov
in
add
test
jae
out
je
add
dec
xor
mov
pop
or
jmp
jb
mov
push
scas
mov
cltd
xor
mov
add
cld
pop
cmp
das
mov
push
add
and
sti
ss
adc
mov
mov
inc
cld
inc
cld
ljmp
mov
sbb
sahf
fisubrl
gs
add
mov
cli
les
sub
mov
pop
jg
loopne
mov
mov
in
dec
inc
add
jo
mov
add
xor
std
pop
jge
sub
add
scas
sub
in
jo
mov
psrld
mov
daa
aas
sbb
cmc
lahf
scas
jb
mov
ss
mov
mov
addr16
ljmp
mov
mov
mov
add
dec
mov
enter
fiaddl
mulb
add
mov
test
cmp
mov
mov
jo
mov
xor
jbe
pop
out
es
iret
push
pop
cwtl
mov
push
add
lahf
sbb
lock
mov
mov
lahf
cs
jmp
mov
jno
movd
pop
aaa
push
les
mov
cmp
push
add
hlt
sahf
frstor
jns
out
enter
mov
leave
jle
inc
add
fwait
test
dec
dec
adc
mov
movsl
or
test
add
and
mov
icebp
addr16
in
adc
mov
popf
add
icebp
loope
lock
cmc
add
mov
and
pop
daa
fnstcw
mov
add
jecxz
cmp
sub
dec
pop
leave
iret
push
push
mov
cmpsb
cmp
xor
mov
xchg
xchg
mov
and
mov
inc
mov
mov
push
jno
add
mov
cmp
lea
into
cmp
dec
push
add
outsl
lea
adc
push
das
mov
test
add
or
jne
add
add
test
lods
fstpt
or
mov
add
or
data16
sahf
in
in
add
lock
arpl
jne
fstpl
xchg
add
mov
add
addb
xchg
mov
add
mov
pop
iret
sub
fdiv
popa
cmp
and
test
out
add
jnp
pop
outsb
jp
inc
add
xor
mov
cmp
and
add
loope
push
lret
test
int
add
push
pop
loopne
mov
mov
add
mov
xor
mov
dec
inc
dec
aaa
xor
add
nop
add
push
scas
and
mov
js
add
mov
push
xor
push
pushf
orl
out
test
push
test
add
dec
lods
push
int3
std
sahf
ret
dec
loopw
mov
mov
push
insb
aad
xchg
icebp
pop
adc
adc
shll
icebp
mov
add
mov
mov
in
int
repz
jmp
mov
xor
jnp
mov
mov
dec
gs
mov
dec
in
fnstenv
pop
mov
mov
fs
jae
stos
mov
or
mov
add
adc
inc
add
mov
pushf
mov
xchg
out
pop
mov
mov
popa
pop
mov
jns
je
adc
mov
xor
jmp
mov
xchg
add
and
xchg
add
out
leave
cmpl
stos
out
xor
mov
imul
mov
add
cmp
mov
jmp
js
adc
add
mov
addr16
mov
add
mov
inc
add
add
cmpsl
add
cld
leave
push
cmpsl
lds
ja
pop
enter
rolb
mov
fiadds
mov
inc
xchg
xchg
sub
mov
mov
cmp
std
add
inc
mov
mov
jne
add
fmuls
add
mov
in
fwait
int3
cmpsb
cmc
outsb
int
imulb
mov
mov
add
xor
xchg
gs
enter
in
mov
dec
and
add
add
lods
jg
addb
out
add
cmc
push
add
ret
into
arpl
popf
ss
sbbl
addb
lods
and
mov
aas
fimuls
add
xchg
movl
call
addr16
jg
cmp
mov
cmp
mov
add
and
add
movsl
or
push
mull
dec
stos
lret
cmp
int3
sub
fstps
out
sbb
pop
repnz
ljmp
cmp
mov
push
int
sub
dec
mov
or
add
xorl
movsl
scas
inc
add
cmpsl
sbb
jno
sti
addb
lods
push
notb
add
pop
repnz
or
mov
add
stos
mov
fstpt
add
pop
or
jo
mov
adc
jmp
lock
xchg
push
add
rolb
mov
mov
mov
loop
mov
jp
dec
sub
lahf
mov
dec
or
sti
call
add
lds
and
popa
add
mov
fwait
mov
outsb
stos
mov
add
push
mov
add
jno
ret
mov
cmpsb
cs
add
aam
add
or
mov
add
adc
ret
sbb
adc
add
gs
jmp
jb
mov
or
add
add
mov
ljmp
jl
inc
cld
rorl
js
mov
mov
or
dec
out
out
mov
rolb
mov
push
add
push
mov
ja
jp
cld
aad
lret
loopne
mov
add
fiaddl
pop
pop
fcomip
add
lock
sahf
scas
add
std
cmpsl
xor
incl
mov
dec
inc
pop
enter
jno
xlat
pop
lahf
and
mov
and
add
adc
inc
add
mov
push
lock
faddl
mov
fisubrl
sbb
bound
mov
push
add
mov
movsl
adc
jo
mov
mov
test
add
daa
stos
dec
sahf
fsubp
add
push
xchg
clc
or
xor
add
gs
dec
testl
test
lock
mov
movsl
mov
lds
lods
stc
cmp
mov
pop
xor
cld
mov
fcmove
out
mov
inc
add
jle
js
insl
adc
mov
mov
xchg
fimull
and
fcmovnu
jmp
push
inc
add
xchg
xchg
xchg
add
dec
addb
cmpsl
stc
push
ss
jns
jns
daa
or
jp
in
rolb
test
or
add
pop
sub
inc
in
bound
mov
ret
inc
fmuls
dec
or
add
gs
aaa
ss
repz
andl
lahf
mov
add
pop
push
pop
add
add
sbb
test
jns
mov
test
add
fnsave
add
add
es
cmp
add
cs
loopne
mov
cmp
mov
mov
add
add
roll
or
mov
jb
mov
out
add
push
add
add
sbb
jno
and
push
add
nop
add
xchg
lahf
imulb
lds
add
mov
loopne
mov
add
inc
add
jo
mov
xor
xor
mov
inc
xlat
subl
testl
jb
mov
add
pop
dec
or
jns
xor
jbe
mov
adc
test
sti
cmp
mov
jno
pop
outsb
call
incb
add
popl
enter
out
dec
xchg
push
js
mov
addb
dec
aam
loope
push
inc
jae
lret
pusha
add
nop
add
into
mov
xchg
das
hlt
lock
popf
in
dec
mov
cmp
mov
push
popa
push
jns
cwtl
mov
add
push
mov
mov
imul
in
add
sti
not
add
add
add
inc
add
out
lock
jno
loop
mov
cmp
xchg
sub
add
push
mov
xor
mov
mov
mov
add
adcl
mov
jp
test
add
lea
arpl
popf
xor
mov
mov
addb
mov
cmp
pop
mov
mov
push
leave
sti
loop
mov
add
in
xchg
addb
jo
mov
jl
push
into
hlt
inc
add
cld
cltd
imul
add
lods
dec
lods
popf
jp
add
xor
dec
push
ss
add
mov
cmp
shrl
xor
mov
mov
ret
mov
cmpsl
scas
scas
test
dec
mov
add
mov
fmull
out
shrl
push
add
sub
add
mov
add
pop
rolb
mov
jg
jmp
lods
add
mov
addr16
ja
add
inc
add
hlt
ds
leave
lcall
pop
enter
add
sub
mov
add
mov
xor
mov
sbb
ret
xor
lahf
sub
mov
mov
add
push
add
xor
add
fcoms
sub
adc
xor
dec
sbb
sub
mov
mov
mov
jg
out
rolb
mov
pushf
outsl
in
test
cmc
rolb
mov
add
xchg
mov
pop
bound
mov
mov
mov
xchg
jbe
mov
mov
mov
add
into
insb
cwtl
fidivrs
push
dec
hlt
pop
lret
inc
iret
xchg
pop
mov
addr16
leave
push
add
cltd
xchg
aad
mov
cld
hlt
inc
aas
mov
sub
test
insb
out
mov
mov
mov
mov
addb
and
cmp
push
add
adc
dec
stos
mov
add
bound
mov
cs
add
mov
push
add
clc
insl
int
in
jge
ret
xchg
andl
sti
insb
cmp
test
mov
add
mov
jl
xor
mov
scas
mov
push
leave
lret
mov
push
es
leave
xchg
cmp
add
fldenv
mov
add
sbb
xchg
lods
pop
sarl
xor
mov
push
orl
cmc
or
pop
mov
or
out
sbb
popa
hlt
loope
or
or
dec
inc
and
inc
push
adc
rolb
mov
add
sbb
add
mov
aam
cmp
mov
push
add
and
mov
inc
add
push
stos
loopne
mov
push
fistps
mov
orl
leave
push
sub
jecxz
jmp
ret
ret
sbb
pop
add
or
daa
lahf
push
and
add
pop
test
add
sbb
push
outsb
jecxz
add
sbb
and
mov
mov
addb
dec
js
add
repnz
add
lds
add
jno
cltd
sub
mov
mov
jmp
or
xchg
lret
fbstp
mov
out
daa
sub
jmp
mov
imul
dec
sbb
dec
sub
sub
add
movsb
orl
add
mov
mov
add
repnz
xor
push
sti
pop
xchg
add
lea
add
out
fmul
es
xchg
loope
adc
mov
add
adc
mov
add
mov
mov
mov
mov
jnp
fidivrs
int3
jnp
add
add
xchg
or
and
adc
jne
out
test
mov
mov
in
pushl
mov
jg
rcr
icebp
cmpsb
dec
mov
sbb
dec
jp
pop
pop
sub
cs
xchg
sarl
inc
push
rolb
mov
loopne
mov
add
std
push
test
jl
in
fdiv
add
add
dec
push
in
mov
cmpsl
fdivp
add
pop
or
adc
and
pop
xchg
add
sar
pop
fisttps
rolb
mov
sti
stos
or
push
js
lret
or
lea
mov
call
imul
fwait
test
mov
jge
inc
add
int3
cmpsb
or
int
inc
pop
jecxz
ds
or
adc
addb
mov
aam
mov
dec
adc
pop
sub
add
lods
xor
lods
data16
fwait
cwtl
dec
nop
add
xchg
pop
dec
push
add
mov
rcll
lods
aaa
loopne
mov
pop
scas
sbb
movsl
stos
outsl
out
mov
push
std
jbe
fidivs
and
mov
mov
data16
add
pop
xlat
xchg
sbb
pop
jge
add
shrd
lock
push
sub
addb
jle
mov
faddp
add
jo
mov
push
leave
push
cmp
fs
out
adc
push
mov
into
sub
add
mov
add
mov
mov
add
ss
jbe
into
pop
push
sub
mov
std
popa
jns
dec
repnz
pop
pop
mov
cmpsl
js
push
in
ret
fwait
dec
into
jmp
add
adc
es
add
aam
pushf
add
rolb
mov
add
mov
nop
add
xchg
add
ret
cmp
adc
add
pop
dec
xchg
shl
stos
cmp
fldl2e
in
xlat
leave
push
inc
leave
push
bound
mov
imul
mov
cmp
pop
mov
add
fildll
fwait
sub
xchg
cmp
pusha
add
add
cld
add
jl
loope
loope
pop
dec
ljmp
push
ret
mov
add
add
or
mov
inc
add
mov
flds
push
pusha
add
mov
std
sub
sub
add
in
mov
mov
enter
enter
add
add
mov
mov
filds
and
add
addb
mov
inc
jp
jmp
push
enter
rolb
fdivr
sub
add
or
xchg
call
jbe
push
pop
and
mov
cwtl
xchg
stos
push
or
mov
ja
ljmp
clc
gs
mov
enter
xor
dec
dec
jle
in
repz
cmp
jns
sbb
or
xor
jne
sti
and
mov
add
aad
push
loopne
mov
in
pop
bound
mov
jg
leave
or
add
adc
mov
inc
jg
cmpsb
movsl
xchg
mov
sbb
mov
inc
lea
inc
push
xor
jbe
inc
data16
mov
lret
add
cli
add
sub
stos
and
mov
inc
add
mov
aam
arpl
jb
mov
add
adc
sub
mov
add
inc
add
and
inc
add
and
mov
push
cmpsl
pop
lret
mov
data16
xchg
loop
mov
lods
or
mov
pop
inc
add
mov
mov
loope
lods
add
lods
imul
mov
mov
mov
mov
out
das
xchg
cmp
or
sub
dec
mov
mov
mov
xchg
add
add
adc
mov
lret
dec
mov
mov
mov
fldcw
std
pop
rolb
mov
clc
call
xor
xor
mov
fmuls
mov
mov
inc
movl
inc
icebp
rolb
rolb
mov
call
add
and
imul
adc
mov
scas
or
mov
movsb
js
or
addb
pop
mov
cmp
xchg
fstpl
loopne
mov
add
push
ja
add
in
push
xchg
ja
inc
add
addb
jns
stos
in
aaa
xchg
add
add
push
mov
gs
aam
inc
dec
das
sub
dec
rolb
sahf
push
or
add
addr16
jge
add
add
adc
mov
insb
popa
mov
cmp
aad
inc
cld
int
add
add
jo
mov
or
mov
sub
in
cmp
sub
push
scas
in
bound
mov
les
add
inc
add
mov
mov
repz
jmp
add
xlat
add
jg
add
mov
or
jo
mov
stos
xor
sub
xchg
push
pop
mov
xchg
add
adc
push
sub
cmp
mov
jne
add
push
cmp
push
add
test
xchg
sbb
push
jecxz
sub
and
fildll
add
add
add
ret
adc
jnp
xchg
or
cmp
mov
mov
pop
mov
mov
xchg
xor
shll
lgs
inc
add
add
sub
sbb
mov
pushf
xchg
jnp
ja
xor
mov
add
in
sbbl
enter
add
mov
sti
xor
out
inc
inc
push
add
or
or
jno
add
adc
mov
popf
xchg
push
inc
adc
mov
add
fildl
sar
cmp
mov
add
mov
in
jl
test
outsl
int
add
cwtl
icebp
or
add
notb
rcrl
mov
jne
out
and
mov
lds
stos
push
rolb
mov
add
xchg
add
inc
mov
lods
cmc
push
add
mov
and
mov
inc
lock
int3
adc
mov
add
xchg
ds
add
add
or
push
add
repnz
dec
iret
insb
jno
lahf
or
add
loop
mov
xor
mov
ss
popa
movsl
mov
cmp
imul
dec
or
dec
ds
repnz
xor
add
pushf
fnsetpm(287
adc
add
or
pop
xor
jo
mov
push
or
inc
scas
lods
xchg
add
cli
adc
mov
push
popa
es
push
nop
add
dec
in
dec
or
stos
inc
add
add
into
push
lahf
fsubr
push
sbbl
add
or
add
add
pop
inc
xchg
or
jmp
montmul
cmpsb
add
mov
mov
mov
and
mov
mov
cmpsl
pop
sbb
pop
cs
dec
cs
ficompl
cld
mov
data16
sub
enter
inc
add
cli
adc
add
scas
sbb
test
push
jecxz
jmp
push
xor
cmp
pop
in
mov
popa
mov
xchg
sbb
add
cmc
sahf
jae
sbb
cs
add
or
decb
jecxz
xchg
icebp
push
add
mov
xchg
add
mov
mov
mov
pop
js
or
sahf
jmp
loopne
mov
adc
mov
jb
mov
jg
imul
add
mov
pop
push
push
iret
adc
mov
ret
sub
hlt
pop
adc
mov
mov
mov
push
test
fucom
mov
enter
adc
mov
add
sbb
mov
mov
aaa
dec
add
mov
pop
cwtl
pop
sub
sub
lods
pop
outsb
inc
add
cld
sbb
jmp
add
scas
outsl
or
aaa
enter
sbb
add
mov
jge
adc
mov
ljmp
ror
jns
dec
aaa
jbe
call
push
loop
mov
add
mov
add
add
in
cmpsl
jl
add
xchg
sub
add
rorl
insb
adc
call
xchg
test
inc
insb
pop
idivl
push
stos
dec
pop
push
enter
out
lret
sbb
subl
mov
insl
xchg
add
pop
arpl
and
add
mov
repnz
or
and
add
add
and
mov
fisttps
or
and
ret
cld
add
xchg
dec
adc
add
clc
sbb
add
mov
adc
mov
cmp
jne
cmp
add
insl
cmpl
mov
mov
add
pop
push
add
add
iret
jp
movsl
mov
mov
filds
mov
add
xchg
cmp
pop
sbb
and
pop
adc
std
inc
mov
out
pop
jle
add
test
push
add
jecxz
test
add
mov
arpl
inc
add
cmpsb
cwtl
mov
add
adc
mov
addb
sbb
xchg
jne
pop
lea
and
mov
rolb
pop
add
das
pop
addb
sub
dec
pop
pop
fbld
add
xchg
xchg
ja
add
add
shr
add
addb
jnp
imul
dec
das
jno
mov
push
nop
add
inc
pop
xor
sub
mov
mov
sbb
rolb
mov
mov
cs
insb
xor
das
add
or
push
and
add
mov
add
add
cld
inc
mov
pop
rolb
mov
add
in
dec
outsb
aam
and
mov
rcl
jge
mov
push
add
sbb
aaa
addb
clc
xchg
mov
cmp
test
inc
add
pop
adc
out
das
xlat
xchg
push
das
movsl
pushf
les
data16
mov
add
add
mov
pop
pop
lcall
mov
cmp
or
adc
ret
scas
cmpsb
fcomps
cld
jb
mov
mov
mov
mov
aaa
mov
mov
add
xor
xchg
stc
xor
mov
jne
cmp
add
add
add
add
xchg
push
aas
xor
mov
rolb
mov
mov
mov
insl
cmpl
sbb
add
mov
addb
mov
add
adc
xor
add
mov
add
pop
test
mov
add
jne
leave
addb
outsl
add
shrl
adc
mov
dec
sub
inc
jno
addr16
mov
sub
sub
aad
adc
and
add
lret
ja
fisttpll
ss
mov
add
xchg
sub
mov
test
mov
xor
sbb
and
add
mov
pop
xor
test
mov
repz
insl
adc
outsb
push
and
mov
add
xchg
mov
jno
add
mov
and
mov
fcos
sub
add
shr
das
dec
fadds
mov
scas
mov
pop
mov
jns
repz
mov
sarl
add
pop
inc
push
ficoms
test
pop
sbb
pop
jns
insl
shll
lret
mov
test
add
push
mov
in
xor
mov
add
and
mov
mov
mov
mov
and
cmpl
mov
dec
idivl
in
add
or
push
std
sarl
iret
lods
and
cmc
imul
cmc
loope
mov
inc
enter
or
add
imul
add
mov
dec
daa
jne
pusha
add
and
and
xor
dec
pop
out
in
into
adc
inc
add
push
add
insb
dec
add
lods
pop
cmp
add
mov
inc
add
jb
mov
cmp
addb
jb
mov
stos
fsubrl
mov
in
add
push
and
xchg
sbb
push
adc
mov
mov
push
add
popa
sbb
mov
cmp
movsl
mov
pop
movsb
jbe
jae
jp
add
enter
adc
mov
scas
int3
mov
jl
add
lods
mov
mov
rolb
mov
pop
xor
add
jle
mov
mov
mov
in
xor
mov
dec
mov
cmp
push
mov
add
test
out
movsb
movsl
pusha
add
and
mov
pop
add
mov
in
lahf
inc
ss
add
jns
dec
in
mov
mov
or
enter
mov
cmp
add
push
xchg
cmpsl
add
in
dec
lock
pop
mov
add
pop
test
test
mov
mov
mov
repnz
sbbl
push
icebp
repz
sbb
add
mov
xor
and
mov
rcll
mov
mov
repnz
dec
arpl
add
sub
ss
shrl
cmp
jle
rolb
mov
mov
add
jbe
pop
push
and
mov
push
rolb
mov
shr
dec
ja
lock
or
lds
mov
cmp
dec
and
mov
stos
fbstp
add
addb
jo
mov
repnz
clc
insb
dec
jno
hlt
inc
lret
loope
fisubrs
data16
xchg
add
mov
cmp
in
repz
mov
jne
jecxz
mov
and
pusha
add
mov
cmp
xchg
mov
scas
jg
out
sub
mov
syscall
adc
mov
pop
js
test
cld
or
fdivrl
arpl
pop
imull
not
xor
mov
stos
xor
pop
xchg
xchg
add
jg
int3
daa
notb
add
cmc
xor
mov
inc
add
aad
fsubl
sti
outsl
rolb
mov
test
ret
dec
mov
jb
mov
add
add
jge
add
outsl
popf
mov
cmpl
add
jno
add
mov
mov
repz
fsubrl
loop
mov
je
push
daa
xor
dec
jl
adc
nop
add
loop
mov
int3
mov
add
push
in
stos
ret
lret
cld
insb
iret
add
xchg
aam
xchg
out
outsb
inc
xor
mov
pop
mov
icebp
mov
in
cmp
push
inc
aaa
or
push
scas
in
push
add
mov
push
xor
add
add
push
cwtl
add
mov
testb
sub
lcall
mov
dec
shrl
dec
daa
shll
ss
scas
cmp
pusha
add
mov
jl
rorl
mov
aad
mov
mov
xor
mov
loop
mov
add
xchg
jecxz
js
push
adc
mov
sbb
into
pop
or
mov
jb
mov
adc
add
lods
cmp
pop
icebp
cwtl
push
test
daa
fcompl
leave
or
mov
xchg
stc
ja
inc
push
addb
addb
lret
dec
aad
pop
mov
push
pop
mov
mov
cltd
pop
sbb
mov
cld
stc
lods
movl
sbb
aam
add
add
mov
nop
add
mov
and
mov
sub
xor
mov
mov
popa
cmpsb
rolb
mov
in
mov
xor
mov
mov
add
insb
push
mov
sub
jno
mov
mov
rcrl
or
push
ret
rolb
mov
mov
pop
pop
jge
pop
mov
or
cld
sbb
bound
mov
insb
pop
and
clc
mov
sti
jl
cmp
sbb
jge
xor
mov
add
insl
xchg
add
or
or
repz
inc
or
pop
inc
push
xchg
jno
cmc
adc
cld
mov
movsb
mov
add
jnp
cmp
inc
roll
addr16
fsubr
or
dec
sbb
add
mov
and
mov
decl
add
out
loop
mov
mov
addb
lret
push
sbb
xchg
aas
repnz
in
push
mov
xlat
pop
or
ffreep
jl
mov
das
movsl
lods
add
add
dec
insl
mov
mov
sub
rcll
adc
pop
and
cmp
add
es
mov
xlat
adc
clc
test
xchg
dec
stos
mov
pop
pop
rolb
mov
mov
mov
mov
call
jmp
adcl
jb
mov
gs
das
push
pop
pop
xchg
add
sbb
dec
or
pop
sub
int3
jmp
rolb
mov
test
adc
add
mov
push
pop
mov
in
dec
ret
mov
mov
mov
aad
adc
mov
add
add
add
ret
lahf
push
push
loop
mov
adc
jl
add
push
add
ds
repz
adc
mov
jmp
xchg
sub
das
stc
roll
jo
mov
inc
add
movsb
rolb
mov
js
scas
mov
out
and
iret
jnp
into
mov
out
mov
xchg
pop
jl
cmp
out
pop
hlt
lret
add
jbe
mov
lret
jmp
mov
ret
cmp
ja
add
aas
fwait
addb
imul
cmp
push
add
mov
push
pusha
add
xchg
mov
mov
add
mov
push
xchg
xor
stos
dec
pop
aam
mov
mov
add
ficomps
mov
addr16
mov
jns
rolb
mov
pushf
imul
icebp
aas
cmpl
bound
mov
add
mov
mov
pop
xor
mov
lcall
adc
mov
movsb
cmp
lods
divl
jp
ljmp
mov
int3
push
std
jmp
sub
mov
mov
repz
mov
mov
mov
cmp
dec
ret
xor
fs
cmp
xchg
add
and
xchg
mov
jns
inc
imul
addr16
test
dec
or
mov
push
xchg
mov
cwtl
push
addb
adcl
mov
stos
int3
lock
lds
jno
popa
aad
add
mov
dec
and
scas
pop
movsl
sub
xchg
add
xchg
jle
out
push
jae
fistl
jnp
ljmp
add
and
jns
shll
add
aad
jl
in
add
mov
loope
add
xor
sbbl
jge
stos
and
int
arpl
pop
stos
push
add
push
movsl
hlt
mov
and
js
cmpsl
pop
xchg
add
pop
pop
fisubrs
js
ljmp
jnp
daa
xor
mov
fnsave
xor
mov
xor
outsb
mov
sub
jns
fucom
inc
add
pop
mov
push
pushf
rcrl
adc
stc
mov
mov
adc
mov
xor
mov
fldt
add
cwtl
into
insl
fisubl
add
mov
pop
addb
insb
cmp
stc
adc
aad
add
gs
add
mov
jle
and
aaa
loop
mov
and
loop
mov
cmpsl
out
loope
mov
add
add
pop
add
mov
jo
mov
add
mov
pop
sub
xchg
leave
cltd
ret
icebp
jnp
adc
mov
xor
add
mov
push
arpl
mov
mov
mov
pop
and
fiadds
mov
mov
and
mov
in
out
add
push
mov
add
dec
sub
xchg
je
divl
aam
add
stos
inc
xchg
mov
aam
push
rolb
sahf
dec
push
xor
fisubs
add
push
stos
adc
mov
test
and
mov
hlt
mov
xor
mov
out
push
mov
dec
lods
lret
mov
mov
add
mov
inc
mov
cwtl
mov
les
pop
ja
add
fadds
add
pop
rolb
mov
cmc
mov
or
pop
sub
scas
xor
mov
pop
lods
repz
lahf
fidivrl
addb
push
push
test
sub
adc
add
mov
sub
sahf
mov
rolb
mov
push
jnp
inc
loop
mov
add
add
cmpsl
insl
fcoml
mov
push
add
mov
pop
jl
add
jle
jmp
repnz
jp
and
adc
lods
pop
and
aad
push
lods
xor
or
push
add
jnp
rolb
dec
cmp
xchg
dec
inc
mov
adc
movsb
in
popa
push
out
iret
jg
in
add
arpl
and
mov
xchg
mov
aam
loopne
mov
add
adc
mov
push
aas
push
test
in
pop
insb
add
jp
dec
cmp
dec
popf
mov
hlt
stos
mov
pop
dec
mov
mov
push
ret
bound
mov
push
loope
and
mov
movsb
jl
mov
sbb
add
mov
daa
fists
mov
lcall
mov
pushl
stos
mov
jbe
xchg
xor
mov
inc
and
mov
jbe
dec
icebp
movaps
ljmp
xor
mov
add
das
fimull
add
addb
test
add
jge
add
gs
add
jno
fsts
xchg
cmpsb
push
out
stc
cmp
fldenv
icebp
stos
scas
or
pop
push
ds
mov
add
xchg
mov
adc
cmp
sahf
inc
or
lahf
jo
mov
add
shll
add
add
les
nop
add
inc
arpl
loopne
mov
add
pop
mov
filds
je
xchg
jne
ja
ss
outsb
sub
fcomps
lcall
and
mov
inc
sub
sahf
popf
pop
jae
mov
cli
cmp
pusha
add
mov
push
pop
out
ret
inc
mov
mov
cltd
out
cmp
mov
adc
mov
mov
int3
fisubl
outsl
and
mov
push
cmpsb
outsb
or
jns
ds
add
and
jb
mov
sti
stc
in
adc
loopne
mov
iret
adc
or
rolb
mov
idivb
lahf
test
cmpsl
xchg
pop
inc
add
add
add
jmp
idivb
cmpsb
push
add
xchg
sbb
test
xchg
dec
jl
and
addb
mov
imul
icebp
and
mov
out
enter
cli
inc
or
lea
stos
pop
imul
dec
cmp
sbb
add
lahf
mov
enter
push
and
mov
cmp
adc
mov
adc
mov
jne
push
fdivrp
inc
or
mov
add
jb
mov
jnp
xor
frstor
add
insl
addr16
cwtl
mov
add
mov
jb
mov
add
sbb
inc
add
ds
out
mov
movsb
jmp
mov
xchg
loope
xlat
and
daa
xor
cld
mov
mov
add
jp
lods
xchg
add
adc
mov
add
mov
cli
pop
push
pop
xorl
cmp
pop
xor
mov
mov
scas
push
movsl
stos
enter
mov
sub
pop
les
sbb
add
mov
mov
add
push
jp
sbb
add
fsubrl
mov
mov
or
aaa
dec
sub
pop
mov
and
inc
add
add
add
scas
jnp
cmpsl
cmp
xor
mov
jge
jge
xchg
add
sub
jnp
cmp
cmp
lods
sub
out
pop
push
lds
add
add
pop
ret
das
sbb
add
in
push
mov
test
cltd
jb
mov
pop
addr16
jmp
mov
mov
xchg
or
lret
mov
inc
test
mov
in
dec
inc
add
and
mov
adc
test
inc
sbb
test
mov
mov
add
out
fisttpll
sub
enter
and
sub
cmp
mov
mov
jae
lods
cmp
pop
js
inc
add
lret
add
add
mov
data16
add
dec
cmp
push
jl
cs
adc
fisubrl
pop
aad
not
add
xor
jno
add
or
mov
mov
addr16
test
aaa
push
mov
mov
clc
stos
hlt
mov
push
fstpl
inc
add
push
mov
xor
add
mov
rolb
es
ljmp
sub
mov
iret
jo
mov
in
out
mov
inc
test
add
int3
xlat
lahf
mov
add
add
mov
jae
add
test
add
dec
stos
adcl
jecxz
inc
call
xlat
scas
inc
scas
sbb
mov
mov
add
outsl
pusha
add
mov
cli
sbb
lods
idivb
mov
mov
pushf
ret
int3
adc
mov
mov
addb
xchg
je
loopne
mov
xchg
dec
adc
setg
add
cmp
icebp
daa
jl
roll
fcmovnu
daa
outsb
sahf
sbb
add
and
mov
imul
add
fstpt
addb
mov
and
xchg
sbb
mov
inc
mov
add
mov
loop
mov
jae
fldcw
popa
mov
inc
mov
mov
cmp
mov
add
imul
sub
cmpl
add
mov
test
fs
cmpsl
inc
rolb
mov
add
call
pop
in
xor
mov
mov
in
leave
pop
adc
testl
out
pop
and
testb
mov
mov
add
add
out
or
jge
add
addr16
mov
out
cmp
add
mov
fiadds
imul
push
and
mov
nop
add
push
mov
add
add
add
mov
or
push
dec
mov
or
mov
or
pop
nop
add
mov
pop
dec
es
cmp
add
test
inc
sub
cli
cmp
cmpsb
push
scas
repnz
push
incb
mov
mov
cmpsb
ja
daa
or
mov
mov
add
adc
mov
es
mov
sub
xchg
pop
push
cmp
rolb
mov
sub
xor
jns
sbb
jl
xchg
jge
movsl
ljmp
addb
js
and
add
cmp
jmp
jae
in
add
xor
mov
xchg
jmp
mov
rol
add
adc
add
push
add
mov
mov
add
fnstenv
mov
jns
adc
and
add
add
jg
fldl
mov
imul
add
cmp
mov
push
stos
and
mov
mov
xor
sbb
aaa
jle
pop
add
push
xchg
add
xchg
pop
sbb
add
xchg
sahf
jae
dec
es
mov
daa
cmpsl
or
jae
sub
scas
hlt
pop
test
and
mov
sub
cmp
jne
mov
testb
cmp
dec
xchg
out
dec
push
xchg
sub
int3
mov
rolb
mov
sbb
cltd
inc
xchg
xor
je
add
aad
xor
add
sbb
dec
xchg
add
mov
mov
arpl
mov
mov
je
loope
and
cmc
adc
mov
loopne
mov
out
inc
mov
xor
xchg
loop
mov
outsb
mov
test
jo
mov
jp
add
data16
bound
mov
mov
fnstenv
sbb
hlt
push
add
dec
add
inc
inc
mov
cmpsl
pop
cmpsl
jmp
lea
inc
jne
fwait
pusha
add
cmp
bound
mov
sbbl
js
loope
lret
sbb
out
cmp
add
inc
push
sub
and
mov
cld
inc
add
mov
xchg
or
mov
jae
test
hlt
cli
dec
pusha
add
aad
mov
mov
mov
jb
mov
add
in
scas
add
mov
mov
test
cs
sub
rolb
mov
scas
int3
test
mov
out
into
xor
movl
je
add
push
xchg
pop
into
dec
xchg
popf
negb
adc
dec
jne
xor
mov
push
add
imul
sbb
inc
idivl
movsl
mov
mov
pop
mov
mov
call
mov
gs
rolb
mov
in
mov
mov
pusha
add
addb
jb
mov
pop
lret
xor
mov
add
mov
jns
xchg
sbb
push
popf
push
add
add
add
mov
add
cmp
cli
and
mov
add
lahf
pop
imul
add
dec
pop
sbb
ljmp
mov
mov
inc
jns
pop
xor
mov
mov
jo
mov
in
jb
mov
lods
pop
mov
jl
xchg
add
and
mov
cli
int3
fimull
inc
test
or
sub
fdivl
out
push
sbb
add
outsb
leave
int
mov
adc
adcl
mov
mov
mov
hlt
pusha
add
mov
sbb
mov
loope
mov
in
fildll
push
lea
inc
add
add
xchg
scas
mov
mov
mov
pusha
add
mov
add
push
add
dec
mov
add
add
cmp
popa
popf
push
pop
enter
mov
xor
mov
sub
lcall
mov
or
cmp
js
repz
mov
inc
mov
out
sbb
pop
lea
lock
repz
inc
jmp
fidivs
adc
mov
testl
mov
pop
jl
push
pushf
inc
add
jbe
int3
test
addr16
aam
sbb
add
push
add
mov
sub
dec
adc
cwtl
bound
mov
cmp
cltd
mov
mov
ret
outsb
pop
inc
adc
mov
ja
push
add
gs
mov
cld
push
push
add
scas
pop
outsb
rolb
mov
stos
fs
add
mov
stos
js
cmpsl
test
daa
das
ret
cmp
and
mov
mov
repnz
add
loope
leave
in
cmc
jl,pt
sbb
repnz
mov
stos
in
lret
data16
mov
fidivrs
sbb
leave
xchg
cltd
or
cltd
fldenv
mov
xor
popa
popf
jne
mov
pop
scas
push
xchg
repnz
or
add
or
test
in
and
add
movsb
popa
fwait
push
scas
push
je
ss
mov
hlt
push
push
ljmp
cmpsb
xchg
iret
cmp
add
add
cs
mov
sbb
stos
xchg
notl
mov
rolb
ficompl
and
adc
mov
mov
mov
add
jl
addb
rolb
mov
inc
out
pop
daa
loope
push
add
imull
mov
mov
int3
rolb
mov
dec
mov
lret
daa
or
cmp
hlt
sar
add
add
pop
xlat
sbb
pop
int
mov
es
xor
clc
rolw
mov
jl
popf
sub
aas
lock
inc
jnp
outsb
lret
mov
add
addb
addb
test
retw
rolb
mov
iret
cmp
addb
push
rolb
mov
xlat
cmpsb
fldcw
popa
cltd
jp
pop
out
scas
pop
rolb
mov
insl
add
mov
add
jo
mov
mov
cmp
cmc
leave
cmpsb
aaa
clc
push
push
add
mov
mov
mov
lret
sub
add
inc
rolb
mov
out
add
sbb
dec
jno
adc
fsub
xlat
jmp
sbb
add
bound
mov
adc
leave
scas
lods
popf
movsb
loope
push
jge
jge
repz
dec
call
hlt
clc
rolb
stos
fwait
dec
mov
ja
mov
testl
lret
movsl
rorl
sbb
ficoms
xchg
mov
ret
push
mov
cltd
bswap
fnstenv
sub
sahf
pop
add
sahf
pop
inc
les
in
fimuls
add
adc
dec
daa
leave
pop
lock
add
add
mov
xchg
fptan
add
jge
cmpsl
jno
dec
add
mov
cmp
and
mov
imul
pop
and
lds
mov
call
mov
mov
add
jmp
xor
push
sub
mov
rcrl
icebp
cltd
dec
int3
sbb
pop
mov
adcl
mov
divl
lcall
fadds
push
fwait
sbb
mov
mov
inc
cltd
mov
loop
mov
dec
pop
pop
sub
rolb
mov
mov
push
xor
adc
mov
mov
push
arpl
jb
mov
jbe
aaa
xchg
inc
add
mov
push
add
in
mov
not
inc
scas
clc
push
fwait
decl
push
pop
jmp
into
std
mov
mov
movsl
sub
es
mov
add
inc
and
mov
ret
mov
pop
mov
stos
inc
add
sub
mov
pop
cltd
pop
push
xchg
cmp
aaa
rolb
mov
repz
add
addb
jnp
add
pop
test
rolb
sbb
pusha
add
aaa
push
push
lods
test
lods
movl
inc
mov
add
adc
stos
mov
add
mov
sub
icebp
xor
pop
idivb
aas
out
fildl
add
ret
mov
mov
fwait
dec
xchg
lret
add
dec
rolb
mov
divb
add
pop
fisubrs
add
add
push
mov
ficoms
or
ficoml
ja
std
cmp
add
and
mov
add
mov
add
cld
pop
mov
std
jg
sbb
fdiv
add
mov
mov
mov
test
mov
dec
movsl
xchg
movsl
cmp
xor
mov
test
inc
loopne
mov
bound
mov
dec
jmp
add
add
gs
xchg
add
repz
sbb
inc
incb
add
aas
scas
push
rcll
xor
mov
mov
loope
add
mov
fbstp
or
pop
dec
int
jle
jg
add
sbb
mov
in
jne
outsl
mov
fbld
mov
popa
cmp
rcrl
or
ret
int3
jecxz
and
mov
add
add
mov
sub
push
cmp
mov
lea
lret
cmp
call
add
ljmp
repnz
add
push
aaa
cmc
jo
mov
ljmp
addb
jp
jecxz
cmpsb
or
sub
sbb
addb
pop
dec
jb
mov
cmp
pushf
js
mov
inc
add
icebp
cmpsl
add
scas
mov
mov
mov
xor
mov
sbb
add
fwait
sbb
add
mov
pop
fcoml
lea
enter
dec
cmpsb
lods
xor
add
adc
add
mov
loope
and
mov
pop
xor
mov
sbb
addb
popf
jo
mov
mul
icebp
pop
aas
jnp
scas
arpl
add
mov
scas
fdivrl
add
inc
ret
adc
mov
xlat
adc
mov
int
lahf
inc
cmpsl
xchg
inc
add
push
jo
mov
outsb
or
lods
imul
add
or
out
mov
loop
mov
inc
jne
sbb
and
jp
ret
pop
pop
cmp
sti
popl
adc
or
add
dec
bound
mov
dec
sti
lea
add
testb
xchg
jnp
sahf
adcl
jmp
add
addb
lock
addb
fidivrs
repz
add
dec
push
xchg
push
push
loop
mov
xlat
adc
les
add
mov
xchg
xchg
stos
imul
add
or
scas
mov
mov
sbb
sub
xchg
mov
mov
ss
dec
iret
xor
mov
imul
repnz
add
mov
loopne
mov
mov
mov
mov
add
dec
mov
xchg
movsl
xor
mov
push
xor
mov
adc
lahf
inc
movsb
sti
mov
imul
sbb
imulb
add
add
out
fimuls
and
addr16
aam
cli
inc
add
mov
cmp
add
add
sbbl
add
mov
mov
sub
rolb
mov
inc
jecxz
xchg
cmp
pop
std
or
add
add
cmpsl
xchg
out
jg
lds
or
add
mov
cmp
add
xchg
jnp
add
push
add
dec
inc
add
jb
mov
lcall
mov
pop
jno
add
push
add
jb
mov
into
addr16
mov
add
mov
sub
imul
fcmovnbe
add
gs
add
shr
or
lahf
cmp
push
push
xlat
mov
fistpll
lods
or
and
push
or
addb
jecxz
scas
sbb
lods
fidivrs
nop
add
sbb
mov
mov
add
mov
adc
mov
in
or
push
outsl
dec
addl
xchg
add
dec
sub
mov
mov
ret
pop
mov
aas
je
add
rorl
dec
lahf
push
cmc
fcmovnu
in
jmp
jns
add
ret
or
test
add
mov
cmp
popf
ss
aas
arpl
add
mov
cltd
arpl
lock
lods
mov
cmp
in
jns
dec
les
les
mov
loop
mov
jp
or
stos
mov
add
mov
mov
mov
in
jae
scas
insb
ljmp
jge
sub
repnz
add
mov
aam
push
lock
pop
shll
mov
inc
add
push
and
shll
cmp
jge
outsl
rolb
mov
mov
add
xchg
mov
sub
mov
addb
lahf
setg
mov
add
rolb
mov
add
add
lcall
and
add
shll
mov
fs
or
adc
add
push
fldenv
mov
xchg
add
mov
jo
mov
dec
add
mov
and
lcall
or
mov
test
jnp
and
mov
push
test
pop
filds
mov
xor
push
out
adc
pop
je
ljmp
mov
ret
ror
add
aaa
clc
mov
add
adc
add
iret
inc
in
push
faddl
test
mov
mov
dec
cmp
mov
jle
cs
fs
pop
les
add
jae
push
loope
cmpsl
or
clc
leave
inc
add
mov
add
sub
out
jmp
adc
add
jno
sub
mov
in
inc
pop
xchg
sub
arpl
loopne
mov
mov
mov
xor
mov
add
mov
dec
and
ja
pop
or
hlt
xchg
dec
mov
or
pop
and
pop
inc
add
mov
add
call
mov
sbb
fmull
add
bound
mov
mov
int
add
adc
inc
add
popa
out
ja
mull
aaa
push
sbb
aaa
loope
mov
add
sbb
test
jge
addr16
xchg
jecxz
mov
bound
mov
xchg
add
add
mov
mov
pusha
add
test
jnp
ljmp
sub
add
mov
push
bound
mov
cmp
mov
in
pop
bound
mov
adc
mov
jae
arpl
repnz
or
iret
fwait
jle
jns
lret
jmp
test
rol
push
add
mov
out
sti
push
icebp
nop
add
dec
add
mov
movb
out
add
adc
aad
sbb
push
in
adc
popa
fsubrs
addr16
mov
mov
int
add
add
data16
lcall
add
add
shll
enter
icebp
addr16
imul
jbe
icebp
dec
xchg
xlat
test
mov
mov
pop
cltd
data16
push
inc
jle
add
inc
mov
icebp
rcrl
nop
add
add
mov
gs
je,pn
testb
add
ficoms
mov
add
push
mov
fwait
mov
test
add
jne
and
mov
addr16
cmpsl
sbb
popl
movb
add
movsl
call
mov
addb
lret
adc
xchg
push
add
mov
mov
push
mov
mov
jne
je
mov
add
mov
add
dec
daa
decb
pop
rolb
mov
aas
adc
pop
dec
push
xchg
fildl
pop
jno
add
inc
add
rolb
mov
addb
jmp
aam
sub
mov
push
dec
push
adc
xor
mov
pop
pop
icebp
push
sbb
and
add
sbb
add
dec
mov
aad
add
ljmp
fcoml
mov
push
inc
push
sub
shrl
rolb
inc
outsl
push
adc
mov
sub
mov
in
sub
sbb
lahf
and
add
fisttpl
mov
out
add
add
leave
cltd
xchg
cmp
push
mov
movl
mov
jnp
lahf
xchg
mov
lods
jbe
in
push
inc
je
out
ss
xor
xchg
add
adc
jg
pop
dec
pop
pusha
add
inc
add
mov
sub
sbb
add
pop
fistl
adc
jne
sbb
lahf
pusha
add
sbb
mov
push
push
cmpsb
ljmp
cli
or
inc
add
inc
push
movsl
js
cmp
aas
gs
sbbl
fistpll
aam
push
adc
mov
mov
xchg
sbb
add
add
xor
mov
mov
nop
add
inc
sub
pop
testb
mov
loopne
mov
sbb
add
fldt
mov
xchg
imul
add
repz
add
cltd
test
and
cmpsb
xchg
add
mov
add
repnz
addb
jo
mov
mov
or
mov
idiv
mov
pop
jg
in
iret
mov
cmp
add
cmpsl
xor
scas
test
xlat
fwait
jae
add
rcrl
or
ret
pushf
dec
notl
xchg
add
out
add
mov
cmc
add
add
fisubs
xchg
push
ds
jecxz
add
fs
in
sub
pop
int3
mov
lods
mov
xchg
mov
lock
jae
add
mov
add
enter
dec
loopne
mov
mov
xchg
leave
test
adc
bound
mov
cmc
push
add
add
mov
jg
addb
fstpl
jne
ja
fsubl
mov
pop
enter
mov
mov
hlt
xchg
adc
add
mov
popf
adc
add
addb
mov
test
cmp
pop
int3
hlt
cmpl
inc
mov
sub
fsubrl
inc
xchg
mov
mov
test
or
leave
movsb
inc
repnz
or
mov
lahf
xchg
imul
gs
pop
out
or
inc
call
sbb
mov
icebp
jo
mov
cmovnp
sbb
add
es
push
addb
inc
add
push
ss
inc
dec
shrl
mov
addb
lret
in
clc
push
xchg
dec
xchg
out
push
loop
mov
es
add
mov
mov
mov
inc
stos
fsubrs
imul
inc
sbb
testb
mov
pop
or
imul
lret
xor
sbb
andl
addb
xchg
add
cmp
sub
in
leave
pop
mov
notb
mov
cmpsb
inc
mov
mov
mov
mov
add
mov
mov
stc
jg
mov
jae
push
xchg
mov
pushf
fldcw
adc
enter
adc
xor
push
mov
mov
sub
add
mov
and
sbb
sub
xor
mov
mov
lods
xor
add
add
and
add
mov
test
in
aad
stos
test
rolb
pushf
push
rolb
mov
pop
loopne
mov
cld
movsb
daa
cmc
in
add
mov
inc
mov
pop
faddl
add
cmp
pop
lahf
outsl
add
mov
add
add
sbb
add
mov
pop
jp
loope
inc
jbe
mov
mov
add
mov
add
lahf
clc
mov
sahf
mov
or
xchg
in
fisttpll
pushf
in
in
cmpsb
andl
gs
insl
je
dec
and
mov
dec
iret
xchg
sarl
rolb
mov
add
mov
mov
jmp
fisubrl
push
bound
mov
bound
mov
test
outsl
push
mov
lea
mov
mov
mov
mov
add
jo
mov
add
add
cs
add
add
xchg
cmp
add
xchg
dec
push
popa
jl
xor
nop
add
mov
mov
cmp
mov
jmp
jg
add
mov
add
lods
dec
das
xor
pop
imul
xchg
dec
cmp
add
mov
push
mov
mov
jne
inc
leave
sbb
jg
pop
mov
je
mov
insl
mov
rolb
lcall
xchg
mov
add
and
outsb
xchg
in
dec
out
sarl
and
aam
loop
mov
add
mov
mov
lock
sbb
pop
sahf
sahf
adc
mov
ftst
add
mov
pop
jp
mov
mov
add
mov
js
cli
loopne
mov
std
push
clc
out
add
xor
mov
add
fsubs
pop
push
xor
inc
outsb
shrl
movsb
cmp
fs
mov
rolb
mov
in
es
enter
mov
scas
pushf
test
movsb
push
arpl
mov
mov
xor
ss
jl
inc
push
daa
push
pop
pop
sub
rcrl
push
enter
mov
mov
int
add
mov
add
cwtl
fdivs
pop
xchg
xlat
iret
rcll
call
add
lret
add
mov
sub
mov
mov
movsl
adc
dec
or
bound
mov
sbb
add
add
les
movsb
gs
adc
add
lret
es
outsl
sbb
cmp
jge
mov
add
hlt
notl
or
xchg
decl
clc
addb
mov
test
pusha
add
mov
out
sbb
outsb
push
test
in
dec
mov
loope
imul
add
mov
lea
aam
das
insl
addb
or
lods
out
stos
xchg
gs
in
mov
inc
or
xor
fucomip
lods
out
jbe
cli
xor
gs
xchg
loopne
mov
cmp
jecxz
jmp
mov
ja
xchg
push
aaa
sub
lret
jl
sbb
out
add
mov
sub
repnz
sahf
and
mov
mov
add
out
mov
les
lea
pop
imul
fdivrp
fucomp
jb
mov
pop
mov
or
sbb
mov
pop
jmp
add
fs
pop
aad
fildl
dec
fcoms
add
inc
jecxz
fdiv
test
mov
icebp
stc
cmpsb
rolb
xchg
jge
cmp
add
lret
outsl
mov
sti
pop
cmp
loopne
mov
popa
sbb
dec
das
xchg
test
add
ds
add
pushf
and
mov
mov
push
xchg
add
out
loopne
mov
xor
stc
inc
mov
std
cwtl
sbb
jo
mov
mov
add
mov
mov
mov
and
mov
out
add
add
int3
mov
imulb
pusha
add
aad
pop
jg
push
pop
rolb
push
add
nop
add
add
or
inc
pop
std
outsb
push
popa
mov
push
xor
xchg
sbb
fidivrs
jp
lret
jmp
add
cmpsl
push
jo
mov
xlat
mov
add
add
mov
mov
push
inc
sbb
sahf
lods
add
mov
pop
loop
mov
sub
dec
mov
jmp
jecxz
shl
fnclex
add
js
fwait
adc
mov
mov
push
cmpsb
enter
xor
adc
subl
add
add
mov
add
push
add
add
jmp
int
mov
jnp
pop
mov
jg
data16
repnz
pop
test
mov
jp
repz
add
add
das
mov
push
and
inc
test
add
fwait
js
adc
mov
pushf
pop
icebp
push
xor
rolb
mov
cli
pop
gs
cmp
pop
std
sbb
hlt
xor
lds
pop
cld
sub
nop
add
iret
popf
xor
mov
in
pop
loope
nop
add
jo
mov
clc
push
out
loopne
mov
pushf
jo
mov
out
iret
int
pop
mov
push
out
fistl
and
mov
out
dec
add
add
sarl
pop
inc
sub
or
dec
movsb
cmp
pop
xchg
add
add
sbb
add
mov
mov
ds
xor
inc
movsl
lcall
std
mov
mov
push
mov
pop
pushf
test
addr16
jp
insb
sti
daa
xor
mov
roll
mov
fistps
inc
or
pop
iret
cmp
pop
dec
addb
lods
hlt
insl
aaa
jecxz
add
loope
add
cmc
daa
pop
sbb
mov
add
mov
add
aaa
inc
addb
sbb
cmp
das
inc
clc
pusha
add
mov
sbb
add
cltd
add
push
in
mov
outsb
pop
enter
ss
mov
in
cli
gs
pop
cmp
mov
cld
add
aad
mov
add
popa
call
jns
push
add
insl
gs
das
enter
mov
jb
mov
dec
jg
stc
xchg
add
add
push
push
inc
mov
dec
and
adc
xlat
not
aam
xchg
xor
mov
or
mov
out
xchg
imul
movsb
push
sub
cmp
addr16
stc
lock
add
xor
mov
add
mov
dec
or
cmp
push
and
add
in
es
or
adc
mov
mov
mov
scas
xchg
push
add
das
xor
js
add
xor
adcl
stos
je
add
mov
xchg
into
pop
lret
rolb
mov
push
xchg
dec
add
mov
stos
push
iret
sti
lret
push
add
mov
pop
daa
jecxz
push
pop
mov
mov
push
lahf
xchg
and
mov
cld
inc
add
out
js
repnz
sub
fsubrl
xor
clc
cmp
lock
mov
sub
jno
mov
stos
xor
mov
inc
add
dec
hlt
sub
mov
jle
inc
lret
mov
add
ja
mov
call
push
add
popf
xor
sbb
inc
es
daa
bound
mov
in
imul
inc
cmc
jo
mov
mov
add
jg
rcl
xor
jge
mov
mov
imul
inc
push
add
ret
adc
flds
or
jp
daa
lahf
inc
ss
jae
lahf
push
pop
int
adc
xchg
mov
rolb
mov
sbb
sbb
pop
repnz
mov
rolb
mov
mov
es
ljmp
xor
mov
xchg
sub
add
jo
mov
in
mov
push
les
add
out
dec
in
xor
and
add
mov
mov
add
sahf
add
insl
lret
push
mov
push
xchg
sahf
mov
inc
add
add
mov
cmp
jne
add
inc
repnz
add
add
mov
sbb
add
out
mov
jae
outsb
add
mov
push
xchg
mov
mov
sub
push
jno
cltd
roll
add
popf
inc
add
fdivs
add
rolb
mov
testl
in
cli
push
es
or
out
imul
add
pusha
add
ret
adc
mov
inc
add
mov
in
mov
or
cmc
sbb
add
inc
test
mov
add
mov
jp
inc
jmp
or
out
inc
mov
add
sbb
fcoms
add
add
fcmovbe
add
js
jne
mov
out
sub
mov
cmp
push
rolb
scas
stos
aaa
mov
ret
sub
mov
xchg
jae
xchg
cmpsb
shrl
xor
arpl
xor
or
add
dec
outsl
or
add
mov
mov
push
out
comiss
mov
add
pop
mov
xor
mov
aas
cmp
dec
xor
sub
mov
fsubs
js
test
mov
inc
mov
mov
mov
or
push
sbb
scas
mov
push
movsl
les
fsubrs
shl
bound
mov
dec
mov
call
jl
cmp
addb
shl
inc
sub
cmovo
mov
movsb
dec
inc
adc
rolb
add
adc
add
cltd
rolb
cmpsl
scas
in
lret
xchg
add
inc
add
mov
cmpsl
es
addb
rolb
gs
lret
repnz
and
mov
add
je
jl
lds
popa
sbb
imul
iret
call
add
addb
cmp
in
mov
add
mov
gs
push
ret
icebp
xor
adc
jmp
mov
lds
inc
add
add
cmp
cld
jl
shr
push
imul
in
fmuls
call
mov
xchg
add
or
and
mov
aam
xchg
add
dec
dec
mov
mov
pop
popa
aas
push
cwtl
rolb
mov
nop
add
rolb
mov
leave
insb
nop
add
add
mov
mov
in
add
mov
hlt
push
rorl
add
dec
js
bound
mov
pop
fsubp
add
rcll
inc
enter
out
clc
mov
mov
ja
push
test
arpl
mov
pop
mov
add
outsl
xor
add
jno
sub
inc
xlat
andl
repnz
hlt
imul
fimull
push
xor
nop
add
add
arpl
aas
movsl
and
vpsubq
push
add
jno
mov
xchg
inc
add
adc
fisubrs
bound
mov
pop
mov
add
add
mov
mov
add
in
add
mov
insl
jns
cmpsb
into
mov
popa
cmpsb
push
add
cltd
cmp
daa
push
add
mov
add
add
mov
push
in
sbb
push
jle
insl
add
mov
xchg
xchg
pop
cmpsl
jecxz
loop
mov
add
cmp
mov
data16
push
adc
std
repnz
xchg
sbb
add
xor
mov
jl
rolb
mov
push
add
lods
mov
dec
or
cmpsl
push
jo
mov
pop
mov
ret
sbb
aaa
icebp
pop
into
jp
rolb
push
xor
mov
xchg
add
add
jg
fnstsw
std
rolb
sub
pop
rcll
out
mov
popf
inc
fwait
push
push
aad
cmp
add
xchg
outsb
out
pop
sub
out
cmp
pop
push
push
xlat
pusha
add
jne
or
mov
rolb
mov
ljmp
mov
add
add
mov
add
nop
add
mov
mov
add
xchg
fidivrl
sub
rolb
mov
mov
inc
xchg
negb
lods
cmp
jle
add
jb
mov
insb
inc
ja
mov
sbb
xor
pop
mov
inc
sahf
int3
mov
xchg
adc
rolb
mov
add
add
mov
pop
mov
mov
aaa
jb
mov
insb
cmp
fdivl
cld
arpl
push
push
outsl
cld
into
movsb
int
pop
xor
adc
aad
cmc
aam
sbb
mov
dec
add
mov
in
sti
je
mov
mov
mov
or
mov
add
push
in
sub
int
lds
jecxz
fisubrs
add
lods
adc
stc
add
mov
fistl
add
add
mov
stc
push
add
mov
inc
add
jge
mov
ss
addl
lret
xor
inc
cmp
add
adc
mov
cltd
test
frstor
mov
test
add
ret
fsubl
mov
add
stc
fisttpl
enter
mov
stos
cld
movsb
lods
sbb
into
mov
aas
xchg
out
fisubrl
sbb
pop
lods
arpl
mov
imul
in
push
add
mov
and
insb
sub
iret
fs
or
add
lret
dec
xchg
std
mov
lds
xchg
add
mov
add
popf
jg
adc
jnp
stc
ja
fsubs
in
mov
mov
gs
cmp
ss
fmuls
ret
inc
cmp
int3
in
dec
loop
mov
xchg
cmc
push
dec
sub
sbb
sbb
and
mov
in
push
mov
mov
inc
add
scas
jbe
faddp
rolb
mov
mov
or
addr16
mov
add
or
mov
xlat
inc
pop
pop
xchg
enter
dec
jo
mov
ficomps
sub
xchg
or
fs
lods
dec
dec
js
aam
std
push
sbb
pop
adc
lcall
mov
jmp
fcomi
add
sub
add
in
mov
test
in
cmp
add
xor
mov
inc
bound
mov
icebp
and
xchg
add
add
jns
stc
xchg
add
stos
es
int
add
jmp
jg
xor
push
rolb
mov
dec
das
loopne
mov
and
add
or
jo
mov
cmp
mov
popa
ret
or
mov
lcall
repnz
mov
jmp
xchg
xor
mov
xchg
popa
mul
add
dec
in
and
ljmp
sbb
adc
scas
pop
push
and
jbe
stc
add
mov
mov
jbe
lret
lea
or
in
pop
lret
add
adc
dec
and
add
add
addb
cmp
xchg
inc
dec
nop
add
sti
push
add
jns
push
cmpsl
or
add
mov
add
shl
add
add
add
out
mov
sbb
inc
add
rolb
mov
mov
pop
push
test
test
pop
xchg
repz
pop
mov
add
add
stos
repz
mov
add
mov
xor
mov
push
push
aam
ja
loope
movl
xchg
mov
inc
rolb
mov
lea
into
mov
aaa
jl
loop
mov
ja
ss
mov
das
push
mov
aam
fsubl
add
mov
imul
ret
cmpsb
insl
rolb
in
mov
mov
jg
pop
mov
cltd
cmpsb
adc
rcll
mov
mov
or
out
dec
mov
mov
mov
imul
adc
mov
cmp
arpl
pushf
xor
sbb
ss
jg
xor
mov
push
adc
add
add
mov
cwtl
lock
mov
dec
mov
into
and
fistl
adcl
notrack
fisttpl
add
leave
push
rolb
mov
jne
add
jge
push
sbb
lret
or
add
loop
mov
out
adc
mov
mov
mov
add
add
scas
stc
ret
add
xchg
cmpsb
dec
mov
out
mov
xchg
add
test
xchg
into
roll
fdivr
pop
adc
lds
and
mov
jbe
int3
xor
mov
hlt
sub
pop
fsts
mov
add
mov
lret
push
mov
dec
jle
sbb
stos
rolb
mov
not
xor
imul
mov
testl
mov
dec
scas
or
sub
mov
rolb
jno
inc
cmpsl
scas
push
add
mov
add
fwait
cli
pop
cmpsl
roll
add
inc
add
movsl
sbb
mov
add
add
pop
popf
jnp
sahf
insb
dec
or
sub
addb
lret
stos
adc
add
add
ds
push
sbb
jg
inc
mov
xorl
dec
pop
inc
xor
outsl
lods
pusha
add
int
push
call
call
ret
sti
popa
sbb
je
push
ljmp
mov
out
popf
sti
mov
mov
jle
pop
inc
add
int
loopne
mov
mov
mov
aas
or
or
add
pop
fldl
cs
push
xor
mov
test
mov
cwtl
mov
daa
xlat
lahf
scas
add
mov
outsb
in
icebp
xchg
aaa
rolb
mov
add
mov
rolb
mov
filds
mov
add
or
jge
add
add
add
ficompl
mov
xor
movsl
nop
add
ljmp
lods
pop
addb
mov
mov
and
add
inc
add
popa
sub
mov
pop
test
add
dec
dec
fistps
mov
xor
out
mov
mov
lahf
sbb
jno
cmp
add
lcall
mov
add
mov
push
movl
add
and
sahf
hlt
and
mov
mov
dec
sbbl
sbb
xchg
outsb
int
add
mov
add
push
popf
sub
add
insl
andl
mov
or
dec
stos
cmc
stos
int
xchg
xlat
jbe
in
mov
add
mov
add
fadd
add
hlt
pusha
add
test
sub
ret
xor
lods
fbld
stos
rcrl
xchg
xchg
aas
push
or
mov
add
dec
enter
shl
scas
sbb
cmpl
add
enter
add
jns
mov
add
add
sbb
jns
fs
mov
mov
daa
xor
insl
fwait
mull
fucomp
pusha
add
mov
xor
jle
jnp
jl
rolb
mov
push
push
xchg
ficomps
in
xchg
push
insl
pop
sarl
xchg
mov
add
add
loope
sbb
add
fnstcw
dec
pop
cmp
lods
inc
add
mov
popa
mov
outsb
iret
pop
sbb
pop
pop
pop
add
mov
adc
xor
cmc
fisttpll
push
shl
dec
shll
fnstsw
dec
cmpsb
divb
add
stos
movsb
sahf
rolb
mov
ja
dec
lahf
dec
cmc
xor
in
gs
xchg
clc
sahf
pop
inc
sbb
inc
add
cmc
dec
mov
imul
or
lea
pushf
mov
add
push
ds
in
add
add
mov
add
add
mov
nop
add
addr16
loopne
mov
pop
cmp
add
leave
mov
mov
mov
or
mov
lcall
sahf
shrl
jae
xor
jns
push
sbb
ret
xchg
adc
inc
push
and
mov
popf
push
or
arpl
add
add
mov
mov
pop
cmp
out
xlat
hlt
lcall
cli
fdivs
sub
ds
rorl
push
imul
movsl
dec
push
add
bound
mov
test
sarl
add
into
push
movsl
pop
or
add
pop
popf
jno
stos
adc
mov
mov
mov
jmp
add
mov
mov
sub
test
mov
dec
xchg
push
push
jb
mov
rolb
mov
mov
jae
push
xor
mov
add
in
iret
xlat
loop
mov
mov
mov
mov
addl
loope
push
fs
mov
push
and
leave
movl
inc
add
mov
add
movsl
cmpsb
xor
add
fisttpl
and
mov
je
xor
dec
mov
lret
xchg
add
fisttpl
icebp
push
pop
enter
mov
add
inc
mov
call
out
sti
inc
mov
cmc
cld
outsl
jle
push
dec
into
xor
push
xchg
jb
mov
adc
add
xchg
in
xor
scas
fwait
outsb
xor
mov
jmp
push
bound
mov
add
add
xor
mov
pop
loop
mov
add
cmp
test
and
mov
repz
push
aad
or
adc
pop
xchg
add
sbb
add
outsb
dec
outsb
and
mov
and
pop
and
or
addb
sbb
jo
mov
push
rolb
mov
dec
add
mov
loope
xor
mov
std
xchg
add
or
mov
mov
add
lret
pop
jg
in
lock
nop
add
xor
add
jge
and
add
test
xchg
or
jle
inc
clc
mov
xor
mov
add
add
out
pop
enter
lea
hlt
push
fwait
jecxz
push
scas
inc
mov
testb
filds
mov
mov
add
add
out
jle
les
jg
or
imul
fidivrs
rolb
mov
xchg
das
std
mov
bound
mov
mov
stos
or
roll
push
and
sbb
aas
out
push
mov
mov
push
mov
jle
and
pop
cld
lret
loopne
mov
add
es
adc
repnz
pushw
enter
mov
add
inc
add
pusha
add
mov
add
icebp
js
adc
push
mov
mov
mov
jl
repz
lret
mov
ds
jbe
fsubr
jno
aad
adc
mov
add
clc
jno
scas
shll
mov
icebp
pop
adc
scas
jge
add
add
add
pavgb
mov
addr16
sub
ljmp
push
dec
inc
dec
pop
jmp
fisubl
scas
daa
cli
addb
inc
xchg
je
repnz
loop
mov
lret
inc
jns
sti
fadds
out
icebp
or
push
add
ret
sub
fnstsw
icebp
jmp
int3
sbb
insl
loopne
mov
fisubs
add
cwtl
mov
jmp
test
out
xchg
jb
mov
rcrl
pop
xchg
mov
fmulp
addb
testl
inc
inc
jnp
testb
mov
in
push
add
mov
stos
jnp,pn
and
jp
int
call
mov
mov
add
or
fstps
sub
test
or
inc
adc
add
add
fisubs
loop
mov
iret
aaa
jns
add
sub
sub
shl
shll
add
pop
xor
inc
aaa
dec
bound
mov
mov
jo
mov
int3
popa
jbe
jno
in
fldl
stc
std
fisubs
add
cld
mov
dec
aam
aaa
loop
mov
xor
data16
gs
or
repz
push
arpl
nop
add
inc
ja
mov
in
add
cltd
repz
push
jmp
mov
sbbl
add
mov
add
mov
inc
pusha
add
test
outsb
clc
mov
int
jnp
add
call
gs
mov
xchg
jbe
ljmp
mov
int3
xchg
add
add
push
cmc
xchg
sub
add
adc
pop
mov
mov
sbb
fxam
mov
mov
iret
and
in
push
mov
add
daa
pop
xor
mov
daa
jae
cmpsb
nop
add
insl
push
add
das
sub
mov
add
add
add
mov
popf
mov
aaa
xor
sub
in
inc
add
repz
push
lea
mov
and
pop
rcll
leave
fwait
bound
mov
mov
xchg
xor
mov
pop
ucomiss
mov
lds
inc
add
dec
cmp
add
lea
aaa
rolb
mov
hlt
call
push
call
sahf
loopne
mov
jmp
aaa
push
add
mov
push
add
mov
outsb
sub
xchg
mov
xchg
pop
into
mov
sbb
inc
add
stos
mov
lods
sub
mov
mov
ljmp
stc
inc
push
and
mov
xor
mov
push
inc
push
push
mov
adc
mov
add
push
push
mov
jne
or
add
add
cmp
cmp
pop
scas
xrelease
mov
test
push
fwait
mov
add
mov
pop
mov
aas
std
pushf
cmp
sub
test
or
xor
popf
push
cltd
adc
jns
out
dec
rolb
mov
lret
callw
sub
add
add
sbb
push
stos
pop
mov
jno
adc
pop
push
add
add
sub
outsl
xchg
push
xchg
add
mov
lods
pushf
pop
mov
daa
add
add
and
mov
imul
xlat
sub
adc
cmpsl
repz
arpl
add
mov
add
mov
mov
scas
jl
pop
cmp
lea
push
adcl
das
nop
add
stc
push
stos
fisubrs
dec
sbb
cmp
nop
add
fwait
pop
jo
mov
out
add
and
mov
and
mov
aaa
imul
test
addr16
shll
push
imul
pushf
sahf
in
sbb
sbb
aam
ficoml
mov
mov
lret
mov
xchg
add
add
test
push
add
pop
pop
out
push
out
icebp
out
dec
or
addr16
imul
pop
pop
adc
add
or
addl
mov
add
jmp
xchg
mov
shll
int
or
neg
outsb
bound
mov
add
insl
mov
add
push
sbb
or
mov
popa
mov
adc
call
add
jns
adc
mov
xchg
add
div
repz
dec
push
dec
adc
mov
jbe
fidivrl
mov
mov
inc
push
ss
cwtl
cmp
jp
addr16
xor
mov
mov
nop
add
dec
stos
hlt
jb
mov
les
and
mov
pop
or
cmp
add
add
ret
lret
mov
iret
call
add
mov
inc
add
jp
jo
mov
sbb
repz
cwtl
je
xor
fcomp
lcall
or
inc
aas
or
mov
pop
insb
cs
add
sub
dec
xchg
pop
movsb
call
mov
add
movsb
inc
add
push
aaa
jne
xor
mov
push
add
add
push
add
stc
clc
jae
add
mov
or
mov
sbb
jle
lahf
dec
pusha
add
push
xchg
sbb
and
rorl
pushw
mov
add
mov
in
inc
add
insb
push
adcl
rcl
add
and
incl
adc
movsl
jg
inc
jle
pop
pusha
add
fsubrs
xchg
negw
push
fldenv
pop
cli
cmc
leave
xchg
mov
pop
inc
add
mov
int3
dec
sub
mov
jns
cltd
inc
out
fs
das
sbb
jmp
or
cli
adc
mov
add
add
xor
mov
fwait
jg
adc
mov
loopne
mov
dec
test
add
add
mov
cli
push
rolb
mov
jg
scas
in
sub
push
cmp
lods
inc
psubusb
scas
scas
push
cmpsb
leave
cmp
xlat
add
pop
aaa
loopne
mov
movl
aaa
push
add
pop
push
add
lahf
sbb
lds
rolb
mov
sbb
push
jae,pn
mov
test
add
jmp
out
adc
add
add
in
push
out
add
scas
pop
inc
sub
mov
inc
pop
adc
inc
push
jo
mov
shll
mov
in
cmp
scas
pop
cmc
repnz
lds
lahf
xchg
cmp
jl
add
call
addb
xor
mov
mov
or
mov
aad
lods
rsm
add
mov
sbb
add
add
add
ffree
xchg
sub
andl
xchg
fwait
cltd
gs
add
jnp
mov
in
adc
mov
xor
add
fsubrs
add
sub
xor
add
lcall
sub
ret
mov
dec
jecxz
push
push
outsb
test
add
adc
push
xor
add
push
sti
sti
stos
or
call
add
mov
lahf
push
adc
cmpl
inc
add
add
mov
mov
aas
jb
mov
mov
sbb
cmp
dec
pushf
jp
aaa
sahf
iret
jnp,pt
cmp
add
lods
xchg
test
push
test
aam
xor
add
dec
insl
inc
adc
add
mov
add
add
jle
inc
sub
sbb
add
xchg
add
sub
pop
mov
sub
jns
icebp
out
ret
lods
push
add
push
aaa
cmp
pop
stos
movsl
stos
sahf
push
lcall
xchg
add
inc
inc
and
mov
cmp
cmp
inc
cmp
mov
cs
std
les
mov
xchg
cwtl
push
loope
sbb
adc
into
mov
jnp
and
sub
mov
cmpsl
push
js
adc
ss
dec
inc
add
mov
lret
push
aas
push
jecxz
mov
push
add
xchg
lea
pushf
adc
out
xor
push
or
fbstp
je
mov
mov
mov
add
add
mov
in
out
adc
sub
negl
addl
add
les
dec
pop
scas
aad
mov
jle
jne
jp
imul
pop
xchg
in
popa
add
push
push
ds
sbb
push
pop
sahf
dec
dec
gs
mov
test
push
inc
int
add
pusha
add
adc
rolb
mov
outsl
lahf
fldl
add
add
mov
mov
sub
push
daa
addb
sbb
push
xor
into
mov
scas
mov
mov
mov
bound
mov
cmp
add
mov
lds
inc
add
in
add
inc
add
jo
mov
jl
paddusb
test
ret
inc
mov
addb
aas
push
pop
lds
xchg
sbb
mov
mov
jmp
cld
xor
mov
jo
mov
das
lret
mov
mov
push
add
lret
adc
mov
mul
add
fidivrs
cmp
mov
cmp
and
out
or
jnp
outsl
inc
hlt
xor
arpl
add
dec
pop
int3
repz
neg
addb
fmuls
mov
mov
addr16
add
sub
in
cmpsl
and
xchg
addb
repz
outsb
adcl
outsl
pop
or
loopw
mov
cltd
sahf
cmp
aas
xlat
insl
outsl
jg
sub
mov
push
mov
daa
in
push
pop
sbb
mov
add
mov
push
add
mov
test
sbb
jb
mov
mov
pop
mov
mov
cmp
loopne
mov
jb,pn
mov
add
and
add
mov
int3
mov
and
popf
ret
loope
lret
orl
clc
jnp
enter
and
mov
neg
hlt
je
adc
mov
lret
adc
mov
inc
addb
or
bound
mov
mov
jp
js
je
add
imull
add
mov
xchg
mov
sub
sub
mov
fnsave
sbb
cmp
adc
mov
ret
loope
stos
cmp
gs
in
mov
mov
cmp
cmp
xor
cmp
mov
es
ja
inc
je
mov
mov
xor
mov
movl
decb
pop
int
sahf
stc
dec
loopne
mov
pop
mov
mov
inc
lods
xor
mov
lret
jo
mov
movsl
cmp
or
js
daa
lret
add
add
add
je
and
mov
jecxz
push
cmp
pushf
mov
mov
add
add
leave
aas
sub
daa
sbb
mov
inc
dec
cwtl
jbe
aas
push
add
lds
scas
sub
shll
aaa
push
loopne
mov
push
dec
push
add
mov
cmc
imul
mov
mov
pop
bound
mov
jg,pt
and
aaa
loopne
mov
add
pushf
daa
dec
pusha
add
dec
push
add
scas
das
add
mov
sub
add
cmp
daa
sub
sbb
push
add
mov
add
mov
loopne
mov
jbe
add
imul
add
mov
sub
inc
mov
mov
cs
push
inc
dec
outsl
aaa
out
add
mov
cli
sbb
mov
lret
nop
add
std
jns
pop
outsl
inc
adc
mov
popf
cmc
mov
and
fwait
xchg
add
out
xor
mov
add
jo
mov
addr16
add
cmp
pop
mov
add
mov
mov
or
or
xor
mov
fistpll
sbb
or
call
sbb
add
sbb
cmpsb
out
xor
cmpsl
push
push
unpcklps
test
add
lret
insl
mov
cli
or
fwait
xchg
scas
sub
mov
sub
ss
sub
or
dec
repz
out
pop
in
leave
adc
inc
pop
fcoml
in
jg
jge
fdivs
mov
push
std
out
fbstp
ljmp
iret
pop
mov
cmp
add
inc
cmp
dec
mov
lcall
push
loop
mov
stc
gs
xchg
or
dec
xchg
arpl
sbb
add
lret
jg
imul
push
add
out
pop
data16
stos
ss
jg
hlt
sub
jns
add
jp
add
rolb
mov
add
pop
cmc
iret
cltd
sbb
mov
mov
stc
jl
adc
mov
xor
add
fldln2
imul
mov
hlt
inc
imul
mov
sbb
pop
xor
bound
mov
mov
mov
inc
inc
push
add
mov
add
and
stc
and
popf
aad
sar
cltd
adc
pop
dec
lcall
aas
mov
push
jecxz
pushf
adc
lret
dec
stc
adc
imul
xchg
add
jmp
or
ja
push
add
cwtd
push
sbb
inc
rol
add
mov
je
cmp
add
push
mov
cs
hlt
add
push
and
mov
push
in
inc
xor
add
loopne
mov
gs
sbb
mov
lret
add
mov
xchg
sbb
popf
aas
lahf
cmp
mov
out
mov
push
pop
jns
mov
mov
mov
add
cmp
mov
push
add
test
cmp
pop
inc
sbb
pop
repnz
mov
lahf
arpl
jge
dec
xor
mov
outsb
or
add
mov
add
cld
out
inc
add
fwait
pushf
mov
mov
ret
inc
pop
stos
addb
xchg
mov
mov
add
and
lds
and
add
cmp
fcmovbe
flds
cltd
movsl
mov
stos
mov
sbb
icebp
out
stc
int3
inc
add
mov
pop
repz
mov
loope
cmc
test
mov
dec
rolb
mov
mov
push
inc
add
add
call
cmp
ljmp
mov
add
mov
add
sbb
cmp
jae
sbb
hlt
fildll
pop
flds
icebp
push
jp
fimuls
push
aam
add
fwait
add
jmp
add
push
mov
es
daa
xchg
les
out
scas
adc
movsl
hlt
stos
rolb
mov
add
dec
adc
mov
push
ret
mov
mov
mov
int
add
xchg
dec
std
lcall
aad
add
cmpsb
loopne
mov
mov
inc
cmp
add
aad
jns
jns
mov
mov
inc
scas
cwtl
ret
ret
jo
mov
add
add
pop
loope
out
out
cmpsl
pop
dec
add
sbb
add
pop
and
mov
bound
mov
adc
loopne
mov
mov
dec
and
mov
jns
add
sbb
xor
mov
xchg
jb
mov
add
cmp
add
add
push
cld
and
and
mov
addl
mov
popa
scas
fnstsw
cltd
into
mov
mov
es
or
add
sub
lods
je
add
mov
xor
mov
inc
xchg
adc
push
sbb
mov
or
mov
lods
adc
insb
movsb
and
add
pop
and
push
inc
add
xchg
jecxz
sub
sahf
pop
test
addb
jecxz
and
or
in
push
add
push
jns
adc
mov
cmp
push
add
and
fwait
pop
cmp
add
mov
add
sbb
inc
loope
add
mov
or
add
dec
jmp
into
stc
cmc
inc
xor
mov
add
jge
call
daa
call
scas
or
mov
add
cs
mov
rolb
insl
cmp
pop
icebp
out
fucomip
pop
es
pop
fsubl
push
add
mov
leave
enter
add
popf
je
int3
mov
add
cmc
pop
addb
mov
mov
call
dec
and
mov
mov
pop
dec
jbe
cmp
or
mov
leave
loop
mov
push
pop
push
call
addr16
mov
lea
jo
mov
adc
ret
int
cmp
xlat
cmp
or
pop
nop
add
pushf
sbb
add
rolb
adc
and
outsl
lcall
out
std
mov
xor
add
mov
add
add
xchg
pop
inc
pop
or
fwait
inc
stc
pop
jno
fprem
jge
jmp
jne
pop
mov
xlat
adc
stc
cmp
lock
add
add
adc
mov
leave
sub
ds
ret
mov
adc
into
jnp
lods
cmp
cmp
jmp
jbe
leave
scas
lock
add
mov
mov
add
pop
imul
jmp
fdivp
push
add
into
ja
mov
add
xchg
mov
lods
add
bound
mov
mov
rolb
mov
insb
dec
dec
jmp
pop
dec
push
scas
fsin
dec
or
in
adc
mov
ja
stos
adc
fsubl
