add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
or
add
or
or
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
or
or
add
or
add
add
add
add
add
add
add
add
or
or
add
or
or
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
or
add
or
add
or
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
add
or
add
or
or
or
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
or
or
add
or
add
or
add
add
add
or
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
or
or
add
or
add
add
add
add
add
or
add
or
add
add
or
add
add
add
add
or
add
add
or
or
or
or
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
or
add
add
or
or
or
add
or
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
or
add
add
add
or
or
or
add
add
add
add
add
add
or
or
add
or
add
or
or
or
add
or
or
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
or
add
add
add
or
add
add
or
add
add
add
add
add
or
or
or
or
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
or
or
add
add
add
add
or
add
or
or
or
add
add
or
or
add
or
or
or
add
add
or
add
add
add
or
add
add
add
or
or
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
or
or
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
or
or
or
add
add
add
add
or
or
add
add
add
add
add
add
or
add
or
add
add
add
or
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
or
or
add
add
add
or
add
or
add
add
add
or
add
or
or
add
add
add
or
add
or
add
add
add
add
or
add
or
add
or
add
add
add
add
or
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
or
add
add
or
add
or
add
add
add
add
add
or
or
add
add
add
add
add
or
or
add
or
add
add
add
add
add
or
add
add
add
or
add
or
or
add
add
add
add
add
add
or
add
or
or
or
add
add
add
add
add
add
or
add
or
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
or
or
or
add
add
add
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
or
or
or
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
or
add
or
add
or
add
add
or
add
or
or
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
or
add
add
or
add
add
add
add
add
or
add
or
add
or
or
or
or
or
add
or
add
add
or
add
or
or
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
or
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
or
add
or
or
or
add
add
add
add
add
or
or
add
or
add
or
or
or
add
add
add
add
or
add
add
add
or
add
or
add
add
or
or
add
or
or
add
add
add
add
add
add
or
add
add
add
or
add
or
or
add
add
or
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
or
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
or
add
add
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
or
add
or
add
add
or
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
or
or
add
add
add
add
add
or
add
add
or
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
or
or
add
add
add
add
add
or
add
add
or
or
add
add
add
add
or
add
add
add
add
or
add
add
add
or
or
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
or
or
add
add
add
add
or
add
or
or
or
add
add
or
add
or
or
add
or
add
or
add
add
add
add
add
or
add
add
or
or
add
add
add
add
add
or
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
or
add
or
or
or
add
add
add
add
or
or
add
or
or
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
or
add
add
add
or
add
add
add
add
or
add
add
or
or
add
add
add
add
add
add
or
add
or
add
or
or
or
add
add
or
add
add
add
add
or
add
add
add
or
or
add
add
add
add
add
or
add
add
add
or
or
or
or
or
add
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
or
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
or
add
or
or
add
or
or
add
add
add
or
add
or
add
add
add
add
add
or
or
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
or
add
add
or
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
add
or
add
add
add
add
or
add
add
or
or
or
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
or
add
or
add
or
or
add
add
add
add
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
or
add
or
add
or
or
add
or
add
add
add
add
add
or
or
or
add
add
or
add
or
add
add
add
or
add
add
or
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
or
or
add
or
add
add
add
or
or
add
add
add
add
add
or
add
or
add
or
add
or
or
or
add
or
add
or
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
or
or
or
or
add
add
or
add
or
add
add
add
add
add
add
or
add
add
add
or
or
or
or
or
add
or
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
or
or
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
or
or
or
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
or
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
or
or
or
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
or
or
add
add
add
or
add
add
add
or
add
add
or
or
add
add
add
add
or
jae
cmp
inc
pusha
mov
ds
dec
dec
add
add
movsb
jmp
pop
mov
cltd
into
jno
pop
out
mov
xor
jno
add
add
and
adc
add
pushf
cmp
add
add
and
and
sbb
add
add
add
xchg
cwtl
push
push
add
je
mov
testl
sbb
add
pop
or
add
add
add
add
movb
inc
adc
add
mov
mov
jle
push
pop
in
lret
jns
and
add
add
xchg
addb
push
pop
cli
std
ret
lret
xchg
or
sbb
or
fcom
pinsrw
loopne
inc
out
mov
add
mov
ss
push
mov
xchg
xorl
movw
jo
popf
mov
pop
popf
std
out
inc
ret
adc
cmp
in
adc
pusha
add
add
shlb
test
jl
fs
push
shlb
xor
push
add
add
add
xorl
mov
add
add
sbb
dec
and
mov
add
add
sbb
dec
outsb
mov
aam
push
imul
jge
pop
jl
inc
loope
jne
add
add
add
cmpb
test
repz
mov
mov
stc
in
jb
cmpsb
xchg
mov
jo
sbb
mov
adc
fists
mov
clc
add
jb
loop
inc
call
or
add
add
test
mov
out
cmpsb
mov
push
xor
sub
add
add
int3
fwait
cmp
cltd
andb
add
not
sbbl
mov
and
jo
adc
bound
repnz
shll
sbb
cld
test
inc
add
add
mov
push
fdiv
xchg
dec
call
adc
div
fdivrl
pop
pop
movsb
sub
mov
or
add
add
push
stos
hlt
sti
call
fadds
or
ja
arpl
or
add
add
sbb
lret
adc
inc
cmp
add
add
cmovg
lods
outsb
and
add
add
sub
ficoms
cmp
jle
jge
and
xor
jb
bound
add
add
mov
xor
inc
mov
test
cmp
int3
cmp
and
mov
push
jmp
add
add
add
mov
push
sub
jecxz
jae
push
pop
shrl
lds
mov
dec
xchg
bound
xor
add
pushf
pop
imul
adc
test
mov
aam
sahf
xlat
pop
add
add
add
mov
mov
daa
inc
mov
add
jp
sbb
xchg
xchg
cmp
inc
mov
mov
pop
add
andb
outsb
divb
repnz
test
adc
cwtl
pop
inc
push
jnp
dec
add
add
sub
jo
ret
movsl
dec
out
dec
adc
add
fnsave
push
incb
add
add
repz
push
cli
adc
sub
add
add
outsl
dec
aas
and
es
int
or
add
dec
push
dec
inc
mov
cmp
stc
sub
dec
pushw
out
les
adc
xchg
fcoms
add
add
or
add
add
outsb
xchg
lock
mov
scas
push
mov
mov
pop
sti
push
xchg
xor
and
setbe
andl
pop
xchg
mov
call
data16
sbb
push
mov
lret
idiv
adc
add
loop
lods
lret
out
mov
sahf
mov
daa
sbb
sub
add
add
out
sti
lret
out
push
push
out
and
xchg
clc
inc
sarl
mov
js
cmp
add
das
pusha
mov
into
xchg
add
imul
rcrb
sub
add
add
int3
lods
cltd
pop
xor
out
das
push
out
push
je
push
jge
ja
mov
clc
adc
add
add
add
mov
add
add
jo
xor
int3
mov
icebp
xchg
mov
popa
mov
shl
scas
sub
jno
aad
cwtl
sbb
add
pop
ds
xor
mov
push
icebp
or
add
call
les
cld
xchg
sub
add
add
xchg
adc
imul
xor
lds
mov
inc
shlb
inc
inc
xchg
pushf
test
add
fisubrl
add
add
mov
mov
std
sbb
dec
add
add
adc
sahf
pop
ja
push
es
dec
repz
xchg
add
add
rep
add
add
mov
add
add
adc
add
or
ds
cmpsl
mov
pusha
mov
out
and
fiadds
push
xor
add
fistps
mov
out
dec
push
or
sahf
mov
fdivl
sbb
and
je
fimull
das
nop
cmp
mov
adc
lds
repz
out
mov
jle
pop
aas
mov
insb
add
add
shrb
ljmp
push
xorl
adcb
add
add
cmp
push
imul
mov
ret
dec
mov
jmp
adc
mov
pop
out
loop
into
mov
mov
mov
jl
add
add
add
pop
int3
pop
rorl
leave
or
inc
test
inc
add
add
popf
movsl
pop
inc
mov
test
int
scas
dec
jb
test
add
add
out
scas
out
mov
lods
popa
out
pop
lret
add
add
jae
sbb
sar
iret
fnstsw
push
lods
cmpsl
shl
sub
push
inc
lret
iret
test
repnz
fimuls
es
leave
test
mov
adc
movl
dec
faddp
lahf
push
mov
cmp
sahf
adc
fmuls
imul
fcoms
lock
jg
lods
ljmp
loopne
call
mov
cmpsb
out
ss
xchg
aad
clc
lret
add
add
movsb
sub
mov
lret
outsl
pop
loop
mov
add
add
sub
add
add
add
add
es
jae
inc
cmp
add
add
adc
stc
dec
mov
cli
aad
inc
movsl
cmp
ss
jg
lahf
pop
cltd
adc
add
xor
push
push
dec
test
jle
sarb
ret
mov
les
add
add
subb
mov
push
outsb
dec
add
add
xchg
fwait
pop
ret
ds
arpl
ja
arpl
xor
and
jbe
ret
mov
push
or
test
rcll
mov
aam
pop
mov
sub
xorl
sahf
adc
in
cmc
loop
cld
test
lahf
into
js
mov
push
mov
add
add
push
mov
pushf
pop
into
js
ret
pushl
add
xlat
int
mov
lods
and
add
add
scas
mov
faddl
ja
cmpsl
imul
jne
bound
add
enter
push
rolb
dec
xor
cwtl
lds
add
add
aad
imul
movsb
inc
add
add
iret
gs
mov
mov
add
add
loop
jbe
push
test
cmp
lock
dec
insl
cmpl
mov
ret
mov
sbb
insb
add
add
rol
pop
call
popf
sbb
add
add
xchg
in
into
icebp
popa
cwtl
jl
ds
inc
mov
fidivl
dec
sarb
add
add
push
mov
inc
xor
xchg
pop
cli
leave
jecxz
and
add
add
fnstenv
push
and
pop
roll
insl
cmc
sbb
fldt
xchg
jmp
cltd
out
in
subb
add
add
jnp
mov
roll
ds
xchg
stc
push
inc
mov
jbe
fsubr
mov
pop
in
cmp
and
mov
bound
pushf
movsl
sub
in
jle
int
imul
mov
sbb
movb
add
add
int3
xchg
test
jb
out
push
ret
cmpsb
and
xor
mov
shlb
loope
bound
fsubp
pushf
shll
add
add
add
add
out
jb
mov
movsb
mov
and
mov
cmp
cltd
sub
add
and
imul
or
sti
imul
sbb
add
add
adc
and
adc
add
mov
pop
aad
mov
mov
and
add
add
jmp
add
add
jne
cmp
je
repz
add
push
popf
aaa
das
pop
pop
rol
adcb
push
cmp
sub
push
nop
dec
adc
and
add
add
add
pusha
add
add
dec
xchg
push
test
jg
xchg
pop
mov
outsb
xor
popa
je
loope
rolb
iret
sti
sub
ret
jecxz
jbe
jb
movsb
ds
sub
mov
scas
adc
sub
enter
add
add
aam
enter
bound
jp
jae
xor
cmp
orl
mov
scas
mov
arpl
test
mov
add
add
div
mov
add
add
push
sub
jecxz
in
sub
add
add
pop
xor
movsb
cmp
add
jmp
mov
sarl
sub
jl
jno
mov
aad
lock
sbb
mov
call
mov
bnd
lock
add
mov
loope
fisubl
mov
rcll
sub
add
xchg
sbb
repz
movsl
pop
ficoms
cmc
mov
add
roll
add
add
xor
aad
jl
enter
in
push
and
add
add
mov
add
pushf
adc
push
insb
mov
sbb
insl
add
sbb
mov
fwait
sbb
fidivl
out
xor
mov
fsubr
aaa
icebp
adc
out
bound
mov
movsb
in
in
test
fcmovnbe
lcall
add
add
sbb
cltd
stc
inc
mov
pop
mov
mov
loop
mov
pushf
in
sti
lahf
inc
add
add
pop
std
cld
push
mov
ja
scas
rolb
sahf
xchg
test
inc
push
movsl
test
adc
sub
add
add
cwtl
or
lret
dec
push
fidivl
lcall
inc
ret
add
add
jp
cmp
cld
andl
je
add
add
or
add
add
insl
push
jl
mov
pop
aaa
out
mov
or
add
add
fdivrs
mov
mov
add
add
jl
inc
add
add
inc
adc
xchg
mov
inc
add
add
sbb
cmp
mov
push
xchg
test
fwait
xchg
sahf
pop
aam
jno
fwait
call
movsl
cmpsb
cmp
sub
mov
jne
lock
lret
call
add
mov
mov
jno
jnp
pop
sti
not
add
add
add
mov
icebp
and
add
add
mov
jg
inc
loopne
ljmp
xchg
cmpb
add
add
add
add
add
vmovupd
add
add
nop
inc
arpl
jl
mov
pop
push
sub
add
add
xlat
sub
push
add
add
add
mov
cmpsb
mov
fisubs
dec
mov
ss
pop
sahf
lret
test
mull
call
inc
addb
add
cmp
mov
ret
iret
test
mov
pushf
mov
add
add
es
bound
add
pushaw
mov
mov
loope
inc
add
add
movsb
cli
out
xchg
inc
out
test
scas
in
roll
add
mov
ljmp
fidivl
test
call
mov
or
cmp
pusha
mov
lods
andl
call
or
in
pop
aaa
mov
jge
repz
ss
xchg
scas
sahf
push
sub
add
add
and
or
movsb
mov
hlt
jno
inc
mov
mov
cmp
mov
add
mov
pusha
add
add
enter
sbb
addr16
jge
cmp
repnz
add
add
mov
add
mov
sub
dec
xchg
cli
mov
mov
add
add
ret
loopne
lret
mov
jns
dec
mov
movswl
pushf
in
mov
js
push
out
iret
in
inc
add
add
xor
mov
cmp
add
add
dec
je
adc
add
add
push
fisubl
add
mov
sbb
mov
add
mov
cmpsl
cmc
scas
fdivs
pop
pop
push
ret
dec
mov
das
xchg
mov
out
fwait
sub
pop
push
jg
sarb
test
pop
in
arpl
aam
mov
dec
mov
push
fidivs
push
pavgw
shlb
adc
ja
push
sbb
in
movd
add
add
icebp
or
in
orps
lods
push
pop
jbe
iret
data16
fwait
sbb
fldcw
ljmp
adc
dec
fs
std
sbbb
inc
add
add
jl
test
movsl
xchg
fsubrp
sbb
sbb
test
xor
pop
ja
sbb
lods
sbb
inc
lock
mov
pushl
inc
daa
nop
jne
jge
mov
test
jg
mov
fdivs
mov
call
add
pop
mov
inc
mov
rclb
or
je
in
xchg
add
fbld
cmp
mov
test
push
xchg
mov
mov
test
mov
hlt
imul
sub
add
add
xchg
or
add
add
sbb
xchg
test
jecxz
in
cmp
jo
jge
repz
jl
icebp
cmp
loop
hlt
mov
add
ds
sub
add
add
mov
test
jne
mov
or
cmp
xor
mov
add
xchg
test
popa
in
lds
fdivrl
cmp
subb
push
mov
mov
add
mov
lods
mov
into
addr16
and
cmp
or
add
add
inc
movsl
sbb
dec
push
push
xchg
pop
int3
ret
js
jecxz
movsb
adc
imul
pop
mov
and
add
add
clc
or
add
add
fdivrs
inc
iret
shll
pop
sahf
pushf
iret
add
xchg
or
imul
pop
dec
pushf
stos
ret
jns
mov
or
mov
cmc
pop
mov
add
out
dec
mov
test
add
add
push
push
xchg
nop
cvtpi2ps
or
add
add
cmc
adc
cli
xchg
adc
mov
sub
add
add
inc
jecxz
clc
lods
testb
jno
add
ss
lds
add
add
je
sahf
pop
and
dec
mov
push
cwtl
mov
std
mov
lret
mov
mov
cmp
jecxz
nop
sarb
push
jmp
in
sub
lahf
mov
pop
loopne
mov
data16
sbb
loope
and
add
add
test
mov
cmp
inc
dec
loop
int
add
add
loopne
mov
rcrb
add
jl
or
add
add
aas
adc
push
push
scas
mov
and
neg
andb
outsb
xor
nop
imulb
and
add
add
xchg
xchg
imul
or
add
add
cmp
push
aam
add
add
pop
into
and
xchg
mov
or
xor
xor
rcr
push
js
cmp
add
add
jge
xchg
push
outsb
sub
in
mov
test
sub
cmpsb
push
icebp
mov
imull
sub
add
add
scas
insl
fstps
cmc
nop
sub
add
add
icebp
out
dec
jge
stos
sub
or
add
add
push
xchg
imul
dec
push
sbb
hlt
push
pop
xchg
add
add
add
and
or
ret
xlat
mov
not
dec
cmpsb
mov
push
mov
sub
call
cmp
jne
lea
push
push
push
mov
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
je
mov
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
jne
push
bnd
cs
loope
outsb
test
jp
mov
adc
inc
dec
test
lock
or
add
add
mov
add
push
dec
rol
sub
stos
sub
cltd
and
push
jg
stos
sbb
sub
add
add
mov
test
add
mov
dec
mov
add
movsl
mov
mov
cmp
scas
add
add
and
mov
and
inc
jne
call
lock
cmp
mov
cmp
in
sbb
inc
data16
ja
arpl
outsl
fbstp
popf
loop
repz
loopne
cld
jno
inc
xchg
or
xor
add
inc
add
add
cmp
sub
dec
push
mov
jl,pn
jge
mov
mov
sub
add
add
add
add
adc
data16
lcall
nop
loopne
mov
jno
imul
shlb
xchg
push
shlb
add
add
dec
push
add
push
add
add
adc
out
int
outsb
xchg
repz
inc
sub
cmc
call
mov
lea
sbb
pop
movsb
pop
rcll
inc
addb
mov
inc
dec
gs
lcall
jecxz
mov
push
test
pop
jno
sbb
cmpb
add
add
popl
and
add
add
cltd
inc
fldenv
inc
rcl
pop
mov
xchg
subl
add
inc
mov
jmp
inc
call
mov
adc
jbe
sbb
jle
inc
sub
mov
inc
and
add
add
cld
cltd
mov
fimull
and
add
add
mov
xchg
jno
jl
movsb
repnz
test
dec
imul
push
mov
movsb
ja
mov
imul
and
jg
movsb
dec
jmp
add
add
ja
cmpsl
js
xchg
incb
and
adc
pop
lcall
add
cwtl
jns
adc
add
add
int3
mov
mov
ds
popf
stc
xchg
cmpsb
add
add
add
xchg
lret
adc
je
cmp
push
jl
sbb
ffree
fwait
outsb
out
fs
sub
pop
push
pop
pusha
add
add
inc
mov
stos
push
cpuid
push
insl
sbb
cwtl
movsb
xchg
sub
out
insb
mov
inc
imul
adc
add
add
mov
adc
cmp
lods
cs
or
add
subb
add
add
inc
mov
adc
mov
clc
inc
sbb
pop
out
mov
add
add
push
pop
pop
fneni(8087
arpl
jecxz
xor
xchg
cmovnp
dec
mov
idivl
fwait
hlt
sbb
cmpsl
mov
mov
aaa
pop
int
pusha
mov
cwtl
adc
add
add
add
inc
pop
lods
sub
or
add
add
repnz
lods
gs
sub
add
add
dec
push
iret
jbe
push
adc
add
xchg
repz
fadd
fbld
add
add
cmp
nop
pop
mov
movsb
cmpsl
repz
fsubs
inc
lods
fdivrs
mov
mov
sub
mov
ror
je
fwait
pop
out
roll
scas
mov
dec
add
add
fnsave
add
add
cmpsb
add
add
add
mov
dec
mov
add
stc
imul
scas
aaa
add
add
add
mov
sub
outsb
mov
push
and
enter
stc
insb
add
add
inc
sti
movl
dec
add
add
sbb
sbb
es
shrb
test
dec
jmp
aas
fwait
sbb
mov
fidivl
push
jp
dec
and
mov
lret
jb
mov
cmpsl
or
xor
out
fwait
lods
stc
xor
cmp
push
mov
lahf
jns
ret
or
xchg
adc
sbb
pop
test
mov
push
shlb
sub
sbbl
jae
out
cmp
add
cld
sbb
sbb
mov
pop
xchg
adc
mov
fwait
inc
pop
inc
test
ret
adc
xlat
repnz
add
add
jmp
sarl
das
dec
mov
daa
mov
jb
cs
pop
jge
add
add
push
push
mov
dec
bnd
aam
and
adc
add
add
jge
xchg
daa
jo
lahf
or
dec
mov
add
sub
loopne
sub
nop
pushl
lods
add
jns
pop
sar
insl
out
fnstsw
or
add
add
inc
mov
mov
push
mov
fbstp
aaa
jno
dec
repnz
jae
push
mov
popf
lahf
popa
lret
xchg
pusha
mov
mov
add
xchg
or
xchg
and
jcxz
inc
mov
add
insb
mov
pop
out
mov
add
add
add
inc
xchg
cmp
mov
add
stos
fldenv
add
add
cld
push
aam
pop
xchg
cmpsb
pop
movsl
js
mov
jge
lea
les
pop
stos
arpl
dec
stos
cmpsb
dec
add
add
mov
mov
add
ds
je
jp
idiv
stos
flds
or
mov
sbb
add
mov
mov
jo
adc
ret
lds
and
popf
add
mov
cli
outsb
ret
pop
mov
jmp
mov
sub
in
mov
and
push
loopne
int
lahf
push
lock
xor
or
add
add
jne
jbe
inc
pcmpgtb
jmp
push
mov
popl
and
out
inc
aas
ds
push
push
pop
sahf
sbb
inc
dec
mov
cltd
xchg
outsl
mov
lret
pop
xor
push
stc
xor
and
sub
add
add
mov
cmpsb
mov
cmp
pop
sti
jge
ja
aam
pop
cmpsb
int
insb
mov
xchg
scas
test
push
repnz
or
adc
cmpsl
xchg
add
bound
rcrl
das
add
xchg
or
xchg
dec
call
mov
inc
mov
dec
sbb
stos
int
cmpl
repnz
lods
xchg
sti
jo
and
in
cmp
add
xchg
mov
push
dec
mov
std
pop
pop
icebp
pop
push
adcl
jecxz
mov
cld
mov
push
jo
mov
add
add
int
adc
jnp
test
mov
jnp
out
mov
sbb
sti
aas
inc
testl
sbb
stos
icebp
ret
add
add
add
inc
push
leave
inc
mov
sub
add
add
push
xor
push
inc
adc
xor
mov
inc
clc
cs
sbb
stc
mov
loope
sbbl
fisubs
add
push
stc
repz
xchg
pop
fwait
dec
lods
call
add
jl
xchg
mov
mov
lock
pop
dec
xchg
jne
nop
push
push
movb
add
add
jg
xchg
jmp
ret
fptan
aad
stc
test
daa
dec
mov
pop
incb
add
add
packsswb
mov
shlb
je
add
add
outsl
fdivr
lahf
or
add
add
mov
xor
mov
adc
cmp
add
add
nop
jmp
dec
les
add
add
cld
xor
add
xor
add
add
int3
ror
cmp
fucom
mov
mov
mov
add
insb
mov
cmp
data16
fstpt
mov
mov
add
add
movsl
lret
dec
add
add
arpl
aad
insb
mov
loop
fistpl
cld
push
roll
mov
inc
add
add
pop
test
in
push
mov
add
add
push
ljmp
dec
cmpl
lcall
add
add
rorb
pop
dec
and
mov
hlt
enter
pop
popa
adcb
dec
insb
add
add
jl
push
ja
xor
pop
dec
scas
fcmovu
fldt
into
jnp
push
xchg
push
cmp
pop
pop
cmpsb
sarl
xor
add
add
loope
int
aam
test
cmp
xchg
mov
mov
add
add
dec
xchg
loopne
adc
add
add
pusha
add
add
jg
fs
and
add
add
mov
mov
sbb
add
add
movsb
or
movsb
mov
sub
add
add
jg
cld
sub
add
pop
incl
scas
mull
mov
das
mov
test
pop
lret
dec
mov
cmpsl
jp
cli
lods
push
pop
pop
lret
loope
sub
sub
add
push
xor
mov
shrl
mov
and
add
add
jp
xchg
adc
add
int
das
int
imul
repz
cmp
and
mov
dec
mov
pop
sub
add
add
add
add
inc
add
add
xchg
and
add
add
mov
outsl
mov
or
enter
test
loope
cmp
mov
cmp
add
add
or
add
add
outsl
inc
cli
inc
xorl
add
add
sbb
push
addl
add
add
aad
sar
inc
add
mov
cwtl
add
add
jnp
jecxz
push
in
call
cmp
in
repz
loopne
or
adc
mov
push
mov
add
and
jns
aam
jns
pop
in
inc
cmp
cmc
inc
xchg
jb
mov
cmp
sub
add
add
fcomi
incb
xchg
clc
neg
je
test
adc
mov
loop
test
les
js
add
jne
push
test
add
add
xor
cmp
jnp
mov
push
in
jg
mov
dec
mov
mov
pop
test
xchg
inc
jmp
jl
xchg
adc
jmp
add
xlat
aam
xchg
fwait
aaa
xchg
sbb
push
imul
iretw
mov
mov
sbb
or
add
add
vmwrite
pushw
mov
add
add
dec
mov
scas
subl
loop
or
add
add
push
outsb
shrb
add
add
xchg
lods
or
mov
mov
je
ret
int3
rorb
inc
mov
dec
repz
xlat
int
sub
add
add
fsubl
add
add
popa
mov
out
sub
xchg
add
add
insb
add
add
or
jecxz
inc
fsubrl
test
add
jmp
pop
sbb
das
into
cmc
imul
push
fcoms
clc
inc
xlat
sbb
test
sahf
hlt
pop
xor
cli
subl
mov
ds
mov
testb
add
or
imul
ret
xchg
push
rcr
pop
lret
xchg
movsl
push
pop
adc
xchg
pop
sub
add
add
add
add
add
and
add
add
stos
fwait
stc
sar
dec
mov
jnp
gs
arpl
test
jp
cmp
sub
add
add
add
pushl
in
das
adc
into
bound
add
add
fcoml
add
add
cmp
mov
add
into
aam
in
jle
cmp
pop
popf
sbb
addr16
imul
pop
pop
mov
add
in
rolb
add
add
add
add
decb
dec
roll
sti
stos
or
add
add
inc
pop
adc
cmp
jne
cmp
mov
jno
das
inc
lds
mov
add
add
dec
adc
dec
cmp
xchg
sbbb
shrl
inc
adc
repnz
adc
add
add
mov
jno
mov
test
mov
pushf
pavgb
xchg
stos
pop
sub
add
add
arpl
jne
fstl
int3
loopne
dec
add
add
jle
sub
add
jecxz
movl
push
icebp
aaa
stc
popf
aas
sahf
test
pusha
add
add
adc
push
dec
das
js
or
jecxz
xor
add
test
jae
test
mov
add
add
add
in
popa
sahf
dec
ljmp
jmp
inc
mov
jno
pop
adc
and
mov
mov
add
add
fsubrs
add
adc
lds
ljmp
add
add
ljmp
in
mov
push
adc
mov
mov
inc
outsl
inc
ret
jmp
lods
scas
fdivr
fs
or
dec
adc
gs
adc
mov
lock
sbb
in
fmull
js
sbb
cmp
add
add
jno
inc
mov
pop
pop
call
add
add
jnp
movsl
xchg
aaa
pop
pop
pop
mov
sbb
aam
int
stos
aaa
mov
lcall
add
add
mov
mov
fcomps
test
inc
shll
aas
sbb
aad
in
lret
insb
add
add
mov
addl
aad
shr
jle
loope
ds
pushf
mov
push
xor
cmp
pushf
call
les
sbbb
les
and
add
add
xchg
xchg
inc
adc
out
mov
add
add
add
cli
mov
ja
sub
sub
ret
pop
xlat
imul
push
outsw
inc
add
add
adc
daa
test
sub
xchg
adc
stos
xchg
cmp
out
sub
add
add
add
mov
aaa
dec
mov
push
clc
repnz
nop
nop
jae
cmp
add
outsl
call
nop
push
mov
leave
nop
jmp
add
push
enter
fisttpl
nop
nop
jae
add
pop
push
mov
push
scas
ds
xchg
xor
repnz
nop
nop
jae
sti
add
sahf
pop
add
pause
push
mov
leave
nop
jmp
add
pop
mov
dec
add
jnp
add
add
repnz
nop
nop
jae
add
ffree
inc
add
clc
repnz
nop
nop
jae
scas
ret
mov
add
add
mul
es
clc
repnz
nop
nop
jae
stos
add
add
add
inc
lea
mov
test
call
nop
jmp
add
add
push
fwait
mov
push
mov
xchg
ret
sti
adc
add
sbb
es
mov
clc
repnz
nop
nop
jae
mov
inc
scas
ret
mov
push
lea
nop
push
mov
leave
nop
jmp
add
cmp
aaa
popl
rol
shlb
mov
xchg
ret
stos
aam
stos
roll
mov
pop
add
mov
push
mov
xchg
ret
daa
pop
add
lcall
mov
sbb
leave
nop
jmp
scas
sbb
mov
stc
add
clc
repnz
nop
nop
jae
inc
sbb
add
dec
mov
inc
call
clc
repnz
nop
nop
jae
cmp
mov
sbb
fld1
clc
repnz
nop
nop
jae
leave
add
add
mov
stc
mov
repnz
nop
nop
jae
mov
push
add
mov
jo
add
push
mov
xchg
ret
stc
add
add
dec
add
xchg
add
jmp
clc
repnz
nop
nop
jae
add
add
add
cld
or
push
clc
repnz
nop
nop
jae
fldl
add
dec
sti
mov
add
add
cmpsl
push
clc
repnz
nop
nop
jae
into
add
gs
add
enter
jne
clc
repnz
nop
nop
jae
add
add
stos
inc
jo
test
nop
push
mov
leave
nop
jmp
add
add
add
pop
pop
scas
mov
add
clc
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
popl
xchg
push
aam
add
push
mov
xchg
ret
scas
push
add
enter
add
mov
add
clc
repnz
nop
nop
jae
dec
add
or
nop
nop
jae
mov
push
stc
mov
mov
clc
repnz
nop
nop
jae
add
sahf
add
add
pop
push
mov
xchg
ret
xchg
add
jne
add
push
mov
xchg
ret
stc
add
add
stc
jae
add
add
pop
je
jae
repnz
nop
nop
jae
sahf
add
ret
mov
nop
push
mov
leave
nop
jmp
add
jno
add
jno
push
sub
add
add
push
push
clc
repnz
nop
nop
jae
add
add
add
add
add
cld
nop
nop
jae
pop
add
add
inc
add
movb
mov
xchg
ret
mov
mov
add
push
pop
add
les
clc
repnz
nop
nop
jae
ds
nop
mov
add
clc
repnz
nop
nop
jae
fadds
leave
lcall
and
dec
arpl
xchg
ret
icebp
fcomps
inc
add
inc
add
add
push
clc
repnz
nop
nop
jae
je
xchg
add
add
mov
add
add
add
push
clc
repnz
nop
nop
jae
aam
inc
push
stos
ret
add
add
scas
scas
stos
test
nop
push
mov
leave
nop
jmp
shll
add
clc
repnz
nop
nop
jae
add
enter
mov
nop
push
mov
leave
nop
jmp
add
je
add
arpl
or
clc
repnz
nop
nop
jae
into
mov
add
sbb
xor
jp
add
add
add
pop
add
leave
adc
out
jno
clc
repnz
nop
nop
jae
aaa
xchg
mov
add
out
jne
clc
repnz
nop
nop
jae
add
add
dec
add
add
mov
nop
nop
jae
add
out
aaa
nop
enter
adc
jecxz
inc
push
mov
xchg
ret
mov
add
stos
add
add
pop
ds
pop
clc
repnz
nop
nop
jae
pop
add
leave
sti
add
ret
jmp
mov
add
add
add
add
stos
add
xor
push
mov
xchg
ret
add
mov
je
add
pop
lock
mov
clc
repnz
nop
nop
jae
roll
sbb
ret
add
add
into
dec
push
mov
xchg
popf
std
jne
add
add
or
add
add
add
sahf
repz
push
mov
xchg
ret
add
add
add
add
pop
push
clc
repnz
nop
nop
jae
add
adc
xchg
add
add
fistpl
clc
repnz
nop
nop
jae
roll
add
push
xchg
adc
dec
xchg
xchg
pop
push
clc
repnz
nop
nop
jae
add
add
js
push
push
mov
xchg
ret
jne
add
mov
dec
add
scas
mov
push
xchg
mov
clc
repnz
nop
nop
jae
je
jne
jae
inc
icebp
leave
mov
inc
jecxz
repnz
nop
nop
jae
inc
mov
jae
xor
dec
sub
repnz
nop
nop
jae
add
sti
add
shll
clc
repnz
nop
nop
jae
add
sti
add
sbb
nop
nop
jae
add
add
add
add
out
call
push
mov
xchg
ret
mov
enter
pop
add
repnz
nop
nop
jae
add
add
add
push
add
add
push
add
add
scas
sbb
mov
idiv
repnz
nop
nop
jae
mov
sahf
lcall
sbb
clc
repnz
nop
nop
jae
mov
add
pop
clc
repnz
nop
nop
jae
into
mov
roll
add
add
mov
call
in
sbb
mov
cmp
add
mov
dec
add
add
aam
xchg
mov
nop
push
mov
leave
nop
jmp
add
add
adc
mov
cld
nop
nop
jae
out
add
add
jne
add
cld
nop
nop
jae
add
xchg
add
add
add
pop
push
pop
nop
push
mov
leave
nop
jmp
scas
mov
add
add
stc
fstpl
add
mov
leave
nop
jmp
add
sbb
fldl
add
lcall
add
sbb
mov
mov
push
mov
xchg
ret
mov
push
sbb
pop
mov
jg
clc
repnz
nop
nop
jae
mov
add
scas
jno
pop
nop
push
mov
leave
nop
jmp
add
add
fucom
add
dec
mov
push
mov
xchg
ret
into
fadds
add
stos
mov
add
repnz
nop
nop
jae
add
add
mov
add
cmp
push
mov
leave
nop
jmp
xchg
sbb
add
jbe
push
or
lahf
push
clc
repnz
nop
nop
jae
add
leave
add
ret
daa
add
mov
push
clc
repnz
nop
nop
jae
add
add
add
add
adcl
jnp
add
add
xor
push
add
mov
inc
pop
nop
push
mov
leave
nop
jmp
cmp
sbb
daa
add
out
out
clc
clc
repnz
nop
nop
jae
fcoms
inc
add
call
clc
repnz
nop
nop
jae
roll
sahf
mov
mov
xorl
clc
repnz
nop
nop
jae
mov
add
fld1
push
mov
xchg
ret
add
out
add
add
mov
push
add
clc
repnz
nop
nop
jae
daa
inc
jno
add
mov
in
add
and
add
add
roll
add
inc
mov
std
push
clc
repnz
nop
nop
jae
dec
nop
jae
add
jno
add
loop
push
fnstcw
nop
push
mov
leave
nop
jmp
daa
jno
add
add
add
add
add
nop
nop
jae
mov
enter
push
add
push
xor
add
add
clc
repnz
nop
nop
jae
add
mov
dec
push
add
clc
repnz
nop
nop
jae
cmp
stos
add
add
out
push
push
clc
repnz
nop
nop
jae
push
add
push
sahf
mov
clc
repnz
nop
nop
jae
add
sti
xchg
add
push
mov
inc
add
xchg
xchg
add
add
add
add
addl
sbb
nop
nop
jae
jno
add
inc
add
stos
scas
xchg
mov
repnz
nop
nop
jae
add
add
add
add
push
add
nop
nop
jae
inc
add
mov
xchg
xchg
mov
add
nop
push
mov
leave
nop
jmp
add
cmp
leave
int
ja
test
add
nop
push
mov
leave
nop
jmp
fadd
xchg
push
sbb
sbb
in
leave
nop
jmp
jno
je
shll
add
icebp
mov
push
mov
xchg
ret
inc
scas
add
add
add
sbb
cld
nop
nop
jae
xchg
mov
add
xchg
jno
jne
push
stos
clc
repnz
nop
nop
jae
add
add
add
add
in
clc
repnz
nop
nop
jae
pop
inc
nop
scas
inc
stc
daa
add
add
rclb
pop
inc
add
add
int
mov
add
pop
clc
repnz
nop
nop
jae
add
add
inc
add
adc
xchg
add
scas
in
push
nop
push
mov
leave
nop
jmp
gs
dec
add
lcall
hlt
and
push
mov
leave
nop
jmp
add
add
stc
fldl
add
add
mov
clc
repnz
nop
nop
jae
pop
fnsave
sti
sbb
into
add
mov
push
mov
xchg
ret
fldl
push
sbb
stos
add
mov
rclb
adc
add
clc
repnz
nop
nop
jae
add
push
sarl
mov
clc
repnz
nop
nop
jae
add
roll
add
add
cmp
nop
jae
jae
add
add
out
add
xor
add
add
cmp
add
add
add
sbb
add
insb
gs
push
mov
leave
nop
jmp
add
add
add
jno
mov
lea
push
mov
xchg
ret
add
add
jno
scas
add
add
cld
nop
nop
jae
sti
add
add
add
std
mov
push
mov
xchg
ret
add
dec
sbb
add
pusha
add
add
mov
clc
repnz
nop
nop
jae
scas
add
scas
stc
aam
add
add
add
mov
add
add
add
ret
clc
repnz
nop
nop
jae
cmp
add
add
add
rorl
mov
xchg
ret
into
add
add
add
roll
daa
and
repnz
nop
nop
jae
fstl
add
sbb
stc
mov
clc
repnz
nop
nop
jae
roll
add
add
clc
repnz
nop
nop
jae
xchg
stc
popl
scas
popl
jae
add
loop
clc
repnz
nop
nop
jae
mov
jno
sahf
pop
add
mov
clc
repnz
nop
nop
jae
add
add
add
stc
ret
add
jmp
adc
enter
mov
xchg
stc
mov
add
add
repz
nop
push
mov
leave
nop
jmp
add
add
stos
inc
xor
clc
repnz
nop
nop
jae
mov
je
into
inc
pop
clc
repnz
nop
nop
jae
jne
int
add
add
add
inc
xchg
nop
mov
jle
clc
repnz
nop
nop
jae
add
add
out
xor
nop
push
mov
leave
nop
jmp
mov
stos
add
add
add
lds
nop
nop
jae
stc
add
add
add
add
enter
add
add
and
push
mov
xchg
ret
je
add
add
inc
inc
add
sbb
push
clc
repnz
nop
nop
jae
add
push
add
pop
add
add
add
repnz
nop
nop
jae
add
inc
roll
scas
add
add
aam
data16
fmul
imul
clc
repnz
nop
nop
jae
sar
roll
jne
add
add
push
mov
xchg
ret
sbb
add
into
add
rcrl
add
test
repnz
nop
nop
jae
add
aaa
add
je
sarb
inc
sub
testb
ret
add
stc
dec
add
add
mov
push
mov
xchg
ret
scas
adc
fcomp
add
add
aam
lds
movsb
dec
inc
add
inc
mov
int
push
add
outsl
arpl
add
repnz
nop
nop
jae
add
daa
aam
mov
xchg
mov
repnz
nop
nop
jae
add
xchg
add
add
into
push
stc
rcrl
push
clc
repnz
nop
nop
jae
mov
xchg
add
fadds
out
xlat
jne
clc
repnz
nop
nop
jae
add
scas
aam
add
clc
repnz
nop
nop
jae
dec
add
add
leave
add
add
rorl
add
add
shr
clc
repnz
nop
nop
jae
sahf
scas
aaa
jno
ds
into
add
sub
add
add
pusha
clc
repnz
nop
nop
jae
add
jno
jno
add
enter
inc
add
repnz
nop
nop
jae
add
mov
icebp
rorl
fistpl
clc
repnz
nop
nop
jae
add
sbb
add
add
int
fistps
repnz
nop
nop
jae
add
pop
cmp
add
add
add
add
mov
xchg
ret
add
add
add
add
dec
and
clc
repnz
nop
nop
jae
icebp
add
push
rcrl
jnp
sbb
clc
repnz
nop
nop
jae
add
add
add
pop
jge
call
nop
jae
add
fadds
dec
daa
add
add
mov
repnz
nop
nop
jae
ret
mov
add
rcrl
mov
xchg
ret
add
jae
cmp
sbb
mov
add
clc
repnz
nop
nop
jae
add
add
add
cmp
idiv
rclb
push
mov
xchg
ret
add
inc
sahf
cmp
call
push
mov
xchg
ret
add
add
add
inc
cmp
mov
xchg
ret
add
add
add
xchg
adc
mov
add
clc
repnz
nop
nop
jae
cmp
enter
add
pop
add
clc
repnz
nop
nop
jae
scas
add
mov
daa
add
mov
push
mov
xchg
ret
mov
inc
sti
inc
int
pop
sub
repnz
nop
nop
jae
ret
mov
add
fst
add
pop
mov
push
mov
xchg
ret
add
xchg
sahf
add
add
scas
push
add
sahf
adc
mov
xchg
ret
aam
jno
lcall
int3
push
xchg
cmp
mov
scas
fld1
clc
repnz
nop
nop
jae
add
xchg
add
sbb
rclb
jge
inc
add
leave
xchg
daa
xchg
jno
add
xchg
lods
inc
clc
repnz
nop
nop
jae
add
inc
popl
add
add
cmp
test
clc
clc
repnz
nop
nop
jae
mov
add
mov
enter
clc
repnz
nop
nop
jae
dec
fcoms
fadds
add
jno
add
shrl
inc
add
add
pop
fadds
add
xchg
add
pop
push
mov
xchg
ret
add
mov
add
add
icebp
enter
push
mov
xchg
ret
add
mov
mov
stos
xchg
sbb
cmpl
nop
push
mov
leave
nop
jmp
mov
sbb
adc
nop
nop
jae
jae
add
push
push
xchg
add
jb
mov
push
mov
xchg
ret
push
aaa
sti
add
jno
add
mov
jle
call
clc
repnz
nop
nop
jae
add
stc
lcall
push
mov
xchg
ret
add
add
add
aam
add
add
jbe
add
jge
clc
repnz
nop
nop
jae
sbb
cmp
nop
add
out
push
mov
xchg
ret
add
adc
roll
sbb
enter
stos
xor
sub
nop
nop
jae
mov
add
lcall
sub
imul
mov
leave
nop
jmp
xchg
stos
add
add
push
popl
enter
pop
nop
push
mov
leave
nop
jmp
add
add
stc
xchg
aam
jns
push
mov
xchg
ret
add
aaa
add
roll
scas
stc
xchg
push
mov
xchg
ret
mov
add
add
add
add
dec
scas
rorl
leave
nop
jmp
add
add
xchg
add
ds
add
push
in
inc
clc
repnz
nop
nop
jae
mov
add
inc
cmp
add
add
clc
repnz
nop
nop
jae
sti
add
add
scas
add
inc
mov
push
clc
repnz
nop
nop
jae
scas
jno
mov
into
add
pop
pop
cs
nop
push
mov
leave
nop
jmp
add
icebp
int
scas
xchg
add
jne
clc
repnz
nop
nop
jae
add
enter
mov
movq
xchg
ret
inc
add
ds
add
int
add
clc
repnz
nop
nop
jae
add
add
pop
clc
repnz
nop
nop
jae
add
add
add
pop
nop
add
add
jmp
push
mov
xchg
ret
jno
stos
add
push
mov
mov
add
repnz
nop
nop
jae
ret
add
sahf
add
xor
cmpl
add
nop
jmp
add
add
scas
icebp
sbb
addl
nop
nop
jae
mov
sbb
add
ds
push
mov
xchg
ret
icebp
add
stc
add
dec
enter
pop
jbe
add
clc
repnz
nop
nop
jae
scas
stc
add
add
xchg
fnstsw
add
xchg
call
nop
jmp
dec
mov
mov
mov
call
nop
jmp
dec
add
sbb
in
leave
nop
jmp
add
add
leave
add
add
add
clc
repnz
nop
nop
jae
rcll
aam
inc
mov
pop
push
mov
es
ja
ljmp
push
les
inc
and
mov
xchg
ret
daa
add
mov
add
sbb
push
inc
add
add
mov
stos
add
cmp
mov
jne
nop
push
mov
leave
nop
jmp
add
push
add
add
inc
xchg
dec
pop
mov
push
mov
xchg
ret
cmp
add
mov
sar
xchg
pop
push
clc
repnz
nop
nop
jae
enter
add
inc
je
add
add
insl
mov
push
mov
xchg
ret
enter
mov
into
add
mov
sahf
add
clc
repnz
nop
nop
jae
add
add
push
add
add
xor
clc
repnz
nop
nop
jae
leave
add
popl
add
add
mov
clc
repnz
nop
nop
jae
add
sbb
add
scas
mov
jns
add
add
jno
roll
mov
sub
pop
clc
repnz
nop
nop
jae
add
ret
add
scas
sbb
pop
jo
subl
clc
repnz
nop
nop
jae
sti
stos
add
add
rclb
bound
xchg
ret
add
stc
add
mov
or
add
add
push
clc
repnz
nop
nop
jae
add
add
ret
add
je
icebp
ret
fdivr
pop
push
clc
repnz
nop
nop
jae
stc
add
xchg
fldl
mov
mov
sbb
push
mov
xchg
ret
adc
add
adc
clc
repnz
nop
nop
jae
add
add
add
mov
repnz
nop
nop
jae
stos
rcll
mov
roll
add
xor
clc
repnz
nop
nop
jae
stc
sti
add
add
push
add
push
mov
xchg
ret
add
shl
aam
add
add
lods
orl
in
clc
repnz
nop
nop
jae
fadds
mov
call
nop
pop
sub
push
mov
leave
nop
jmp
popl
add
add
lds
repnz
nop
nop
jae
mov
cmp
je
scas
daa
add
clc
repnz
nop
nop
jae
add
add
add
jno
nop
cmpsl
lods
push
mov
xchg
ret
add
add
inc
mov
inc
pop
add
add
xor
push
mov
xchg
ret
add
add
add
add
adcb
mov
cld
nop
nop
jae
add
mov
jne
add
enter
dec
and
add
add
push
mov
xchg
ret
sahf
roll
fnsave
add
add
or
mov
xchg
ret
add
add
add
inc
add
add
or
add
add
add
push
mov
xchg
ret
aam
mov
add
jae
add
jb
push
mov
add
or
mov
aas
mov
push
out
cmpsl
cli
icebp
sbb
push
mov
leave
nop
jmp
add
enter
aam
sbb
add
or
or
nop
jmp
add
roll
add
add
and
clc
repnz
nop
nop
jae
add
add
rol
add
add
add
insl
je
nop
push
mov
leave
nop
jmp
add
add
dec
cmp
repnz
nop
nop
jae
scas
add
enter
push
stc
fisubs
clc
repnz
nop
nop
jae
add
dec
cmp
mov
mov
clc
repnz
nop
nop
jae
add
add
leave
aaa
jae
push
je
clc
repnz
nop
nop
jae
jne
mov
movsl
jne
clc
repnz
nop
nop
jae
push
pop
xchg
fldl
add
in
dec
cmp
repnz
nop
nop
jae
je
gs
stc
pop
sahf
add
add
cld
nop
nop
jae
add
roll
add
adc
add
pop
clc
repnz
nop
nop
jae
enter
cmp
gs
or
repnz
nop
nop
jae
pop
add
aam
jne
aad
clc
repnz
nop
nop
jae
add
inc
jno
inc
add
mov
rclb
inc
add
popl
add
add
or
push
mov
leave
nop
jmp
add
ret
mov
mov
add
rclb
jae
inc
add
xchg
add
inc
add
add
out
sbb
or
mov
xchg
ret
stos
mov
enter
add
add
adc
cld
nop
nop
jae
enter
add
into
push
enter
leave
push
mov
xchg
ret
enter
add
adc
add
add
cld
nop
nop
jae
add
roll
cmp
mov
add
pop
push
mov
xchg
ret
add
add
add
inc
add
add
and
clc
repnz
nop
nop
jae
inc
jae
gs
add
shlb
repnz
nop
nop
jae
jae
add
mov
ret
fldl
fwait
clc
repnz
nop
nop
jae
stc
lcall
add
stc
add
sbb
xchg
pop
add
clc
repnz
nop
nop
jae
add
add
add
sbb
add
subb
add
add
repnz
nop
nop
jae
int
aaa
add
int
jne
push
mov
testl
in
movsb
pop
ljmp
jecxz
lret
ss
lods
int3
cmp
in
mov
jb
add
nop
add
shrb
fwait
lods
mov
nop
push
mov
leave
nop
jmp
add
xchg
dec
add
into
adc
mov
call
clc
repnz
nop
nop
jae
stc
push
jno
add
sbb
mov
rep
clc
repnz
nop
nop
jae
stc
add
ret
push
add
sahf
add
stos
cld
cmpsl
add
push
mov
xchg
ret
add
sti
inc
add
add
aaa
add
xor
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
add
mov
jp
shl
push
mov
xchg
ret
add
adc
aaa
add
icebp
add
jno
dec
clc
repnz
nop
nop
jae
leave
jae
push
stc
jne
inc
add
add
int
test
call
nop
jmp
fnstsw
add
add
clc
repnz
nop
nop
jae
sahf
add
mov
clc
repnz
nop
nop
jae
add
aaa
daa
roll
mov
mov
cld
nop
nop
jae
int
je
add
mov
mov
adc
repnz
nop
nop
jae
add
leave
add
cmp
clc
repnz
nop
nop
jae
mov
jno
dec
inc
add
sub
fld1
nop
push
mov
leave
nop
jmp
aam
add
add
add
add
clc
repnz
nop
nop
jae
stc
push
fnstsw
add
mov
sahf
mov
shl
push
mov
xchg
ret
add
jae
add
and
repnz
nop
nop
jae
add
push
je
add
into
push
add
mov
leave
nop
jmp
dec
aaa
add
add
shll
sbb
mov
mov
leave
nop
jmp
jno
add
mov
add
add
jne
clc
repnz
nop
nop
jae
add
stos
fadds
stos
sbb
add
add
push
fld1
push
mov
xchg
ret
pop
enter
add
add
xchg
add
call
clc
repnz
nop
nop
jae
mov
enter
inc
add
add
xchg
cs
add
clc
repnz
nop
nop
jae
aam
ret
add
add
fistpl
clc
repnz
nop
nop
jae
add
add
xchg
add
xor
add
rcl
add
popl
push
add
push
adc
add
nop
push
mov
leave
nop
jmp
add
sbb
mov
inc
add
leave
add
add
add
test
nop
push
mov
leave
nop
jmp
fldl
add
int
aaa
mov
push
clc
repnz
nop
nop
jae
add
dec
nop
aam
sbb
add
add
test
nop
push
mov
leave
nop
jmp
add
add
add
mov
add
dec
push
push
mov
xchg
ret
mov
out
mov
cmp
push
push
mov
xchg
ret
add
into
add
mov
push
jne
scas
pop
xor
nop
push
mov
leave
nop
jmp
add
nop
add
rcrl
lods
fistpl
push
mov
xchg
ret
sahf
ret
inc
cmp
sahf
dec
add
leave
clc
repnz
nop
nop
jae
lcall
sbb
leave
add
stos
roll
and
repnz
nop
nop
jae
add
add
add
mov
add
sbb
xchg
ret
icebp
sti
ret
push
mov
add
aaa
test
sbb
add
sti
sbb
xchg
add
pop
add
add
xchg
mov
add
clc
repnz
nop
nop
jae
add
gs
xchg
add
mov
mov
cwtl
shlb
call
nop
push
mov
leave
nop
jmp
aam
push
add
add
nop
push
mov
leave
nop
jmp
icebp
scas
jno
roll
int
add
push
mov
xchg
ret
gs
push
dec
cmp
mov
pop
mov
nop
push
mov
leave
nop
jmp
sahf
add
sbb
add
pop
add
out
dec
push
clc
repnz
nop
nop
jae
inc
jne
add
dec
je
outsb
lock
lret
clc
repnz
nop
nop
jae
adc
icebp
add
roll
repnz
mov
clc
repnz
nop
nop
jae
scas
add
add
inc
adc
in
inc
xor
clc
repnz
nop
nop
jae
daa
inc
scas
add
imul
dec
nop
push
mov
leave
nop
jmp
dec
add
add
add
add
and
nop
push
mov
leave
nop
jmp
add
add
add
add
mov
push
push
mov
xchg
ret
lcall
leave
add
roll
sub
add
add
clc
repnz
nop
nop
jae
push
add
add
icebp
add
push
add
enter
inc
sub
repnz
nop
nop
jae
add
icebp
add
adc
add
mov
leave
nop
jmp
cmp
inc
xchg
add
int
xchg
mov
stc
clc
repnz
nop
nop
jae
add
sbb
add
test
add
push
mov
leave
nop
jmp
into
mov
add
add
lods
push
mov
xchg
ret
add
inc
add
xchg
add
add
add
or
mov
repnz
nop
nop
jae
inc
out
mov
add
clc
repnz
nop
nop
jae
add
stos
pop
add
cmp
mov
pop
movsb
add
add
add
adc
jb
pop
add
mov
xchg
ret
jno
daa
int
add
jno
mov
add
call
nop
jmp
add
aaa
sti
roll
jno
fwait
clc
repnz
nop
nop
jae
add
add
inc
cmp
add
pop
pusha
mov
add
clc
repnz
nop
nop
jae
gs
gs
pop
xchg
dec
add
insb
add
add
addr16
clc
repnz
nop
nop
jae
add
push
add
stc
lcall
push
mov
leave
nop
jmp
daa
stos
sbb
xchg
ds
shll
add
inc
add
clc
repnz
nop
nop
jae
sbb
add
add
pop
clc
repnz
nop
nop
jae
adc
dec
add
add
pop
scas
add
sub
test
repnz
nop
nop
jae
fldl
lcall
adc
imul
cmp
ret
sbb
push
rcrl
add
mov
pushf
xor
mov
call
clc
repnz
nop
nop
jae
stos
add
add
cmp
in
clc
repnz
nop
nop
jae
out
roll
add
xchg
inc
out
imul
mov
leave
nop
jmp
sbb
add
aaa
jae
mov
jo
fidivrl
add
imul
add
outsl
nop
push
mov
leave
nop
jmp
daa
mov
sahf
push
call
clc
repnz
nop
nop
jae
add
add
jae
xchg
cmpl
nop
jae
sbb
fadds
add
cmp
add
clc
repnz
nop
nop
jae
add
add
add
js
rep
clc
repnz
nop
nop
jae
je
scas
int
add
mov
add
cs
add
clc
repnz
nop
nop
jae
xchg
stos
add
xchg
mov
clc
repnz
nop
nop
jae
add
inc
add
add
push
add
clc
repnz
nop
nop
jae
add
add
dec
fcom
add
adc
clc
repnz
nop
nop
jae
add
fdivs
add
repnz
nop
nop
jae
mov
add
add
aas
mov
clc
repnz
nop
nop
jae
add
xchg
push
add
jno
add
testl
nop
push
mov
leave
nop
jmp
push
add
rorb
add
push
xor
mov
xchg
ret
sbb
add
cmp
push
push
dec
adc
cld
nop
nop
jae
into
shll
inc
stc
ljmp
mov
clc
repnz
nop
nop
jae
add
add
add
add
inc
loopne
repnz
nop
nop
jae
into
add
mov
pop
outsb
xor
repnz
nop
nop
jae
add
cmp
push
add
add
push
mov
fistpl
clc
repnz
nop
nop
jae
gs
add
add
add
and
cld
nop
nop
jae
add
xchg
sarl
enter
xor
or
clc
repnz
nop
nop
jae
add
add
add
fmuls
add
clc
repnz
nop
nop
jae
add
add
shll
cmp
repnz
nop
nop
jae
stos
add
add
jne
push
nop
push
mov
leave
nop
jmp
fldl
sti
jno
add
add
sar
cld
nop
nop
jae
add
jae
push
add
add
push
mov
leave
nop
jmp
add
add
leave
add
enter
call
clc
repnz
nop
nop
jae
add
aaa
add
add
add
repz
push
mov
xchg
ret
add
mov
add
stc
mov
jge
push
mov
xchg
ret
inc
add
leave
enter
xchg
add
jno
popf
jne
clc
repnz
nop
nop
jae
inc
add
aam
inc
stos
xchg
test
nop
push
mov
leave
nop
jmp
add
sbb
sbb
cmp
repnz
nop
nop
jae
mov
cmp
sbb
lea
nop
push
mov
leave
nop
jmp
sti
stc
add
mov
push
cmpsb
sbb
nop
nop
jae
add
stc
popl
ror
cmp
xchg
inc
clc
repnz
nop
nop
jae
aam
stos
fadds
enter
add
shr
jecxz
fistl
pop
js
add
jno
add
add
add
inc
add
mov
cmp
nop
push
mov
leave
nop
jmp
add
lcall
mov
dec
xchg
jae
add
jne
stos
add
add
or
add
add
inc
add
add
adc
cmp
nop
nop
jae
add
into
add
add
add
jecxz
sbb
push
mov
xchg
ret
jae
fisttpll
add
jb
and
test
clc
repnz
nop
nop
jae
add
enter
adc
repz
clc
repnz
nop
nop
jae
int
rcll
add
leave
adc
add
pop
add
clc
repnz
nop
nop
jae
add
popl
stc
add
add
xor
add
repnz
nop
nop
jae
add
ret
push
mov
nop
push
mov
leave
nop
jmp
add
pop
je
nop
add
stos
enter
in
jle
add
add
aam
add
pop
cmp
cld
nop
nop
jae
add
add
add
add
sar
repnz
nop
nop
jae
add
add
stos
je
push
fcoms
add
repnz
nop
nop
jae
add
cmp
cmp
add
add
add
jb
incl
add
add
adc
push
jno
inc
dec
stos
add
push
nop
push
mov
leave
nop
jmp
add
mov
sahf
jne
sbb
cmp
repnz
nop
nop
jae
lcall
enter
xor
push
mov
xchg
ret
add
add
adc
gs
ds
cld
nop
nop
jae
add
fldl
cmp
inc
daa
sbb
add
push
mov
xchg
ret
add
add
push
jne
das
call
clc
repnz
nop
nop
jae
add
dec
add
push
xchg
mov
clc
repnz
nop
nop
jae
enter
mov
add
nop
nop
jae
add
add
out
mov
cld
push
inc
sbb
repnz
nop
nop
jae
scas
push
add
mov
daa
add
push
nop
push
mov
leave
nop
jmp
lcall
add
push
mov
incl
adc
jno
add
add
add
mov
jne
clc
repnz
nop
nop
jae
add
shl
add
fld1
clc
repnz
nop
nop
jae
jno
add
add
mov
subl
cld
nop
nop
jae
cmp
add
int
add
clc
repnz
nop
nop
jae
add
add
xchg
outsl
xor
clc
repnz
nop
nop
jae
mov
push
add
sub
mov
xchg
ret
jno
add
add
add
leave
loopne
lds
cld
nop
nop
jae
add
add
add
add
sahf
stos
adc
lock
clc
repnz
nop
nop
jae
add
adc
dec
gs
add
xchg
jno
add
add
mov
adc
repnz
nop
nop
jae
pop
out
add
xor
mov
clc
repnz
nop
nop
jae
add
inc
add
dec
add
add
xor
clc
repnz
nop
nop
jae
icebp
mov
jne
add
add
mov
je
mov
das
clc
repnz
nop
nop
jae
add
add
rorl
orb
clc
repnz
nop
nop
jae
xchg
scas
add
push
xlat
fistpl
clc
repnz
nop
nop
jae
scas
add
sbb
nop
push
mov
leave
nop
jmp
xchg
dec
add
daa
out
ret
xchg
add
add
icebp
add
cmp
add
mov
lds
cld
nop
nop
jae
add
mov
xchg
add
call
clc
repnz
nop
nop
jae
mov
add
add
jg
inc
add
push
add
into
xchg
add
and
in
leave
nop
jmp
add
dec
add
stos
add
add
add
call
clc
repnz
nop
nop
jae
add
enter
fadds
rcll
cld
nop
nop
jae
enter
aaa
add
push
add
add
pop
nop
push
mov
leave
nop
jmp
cmp
out
add
add
sub
clc
repnz
nop
nop
jae
add
into
add
gs
xchg
test
clc
repnz
nop
nop
jae
mov
push
stos
sbb
add
mov
clc
repnz
nop
nop
jae
mov
jno
add
mov
fistpl
clc
repnz
nop
nop
jae
add
add
mov
add
shll
outsb
mov
mov
leave
nop
jmp
add
jae
into
add
add
clc
repnz
nop
nop
jae
add
popl
ret
add
add
mov
mov
push
mov
xchg
ret
add
add
icebp
popl
add
scas
imul
inc
add
add
mov
add
add
leave
push
clc
repnz
nop
nop
jae
stc
mov
add
fnsave
nop
nop
jae
aam
add
add
mov
je
nop
push
mov
leave
nop
jmp
add
daa
mov
push
push
mov
xchg
ret
inc
stc
cmp
xchg
add
push
add
shl
stos
clc
repnz
nop
nop
jae
add
add
int
daa
sub
add
add
push
clc
repnz
nop
nop
jae
add
rcll
push
mov
clc
repnz
nop
nop
jae
ret
add
jne
add
add
clc
repnz
nop
nop
jae
stos
add
cmp
jge
clc
repnz
nop
nop
jae
scas
add
sbb
add
add
pop
mov
clc
repnz
nop
nop
jae
scas
add
add
ror
add
ficoml
add
add
lahf
je
clc
repnz
nop
nop
jae
add
xchg
add
stos
inc
mov
push
stos
clc
repnz
nop
nop
jae
add
add
xchg
mov
add
add
and
mov
xchg
ret
cmp
add
add
ror
clc
repnz
nop
nop
jae
add
push
adc
pop
add
roll
in
pop
clc
repnz
nop
nop
jae
add
add
push
inc
add
push
clc
repnz
nop
nop
jae
add
mov
add
push
mov
leave
nop
jmp
push
inc
jae
cmp
add
jl
rcrl
repnz
nop
nop
jae
add
add
add
into
pop
roll
cmp
lds
push
mov
leave
nop
jmp
add
inc
add
add
sbb
mov
push
mov
leave
nop
jmp
add
add
add
je
sar
mov
xchg
ret
aaa
xchg
inc
dec
pop
push
add
dec
and
add
add
mov
push
mov
xchg
ret
add
add
add
add
add
xchg
ret
mov
clc
repnz
nop
nop
jae
jne
icebp
mov
add
add
clc
repnz
nop
nop
jae
sti
add
add
stos
adc
nop
push
mov
leave
nop
jmp
frstor
add
push
roll
dec
cmp
repnz
nop
nop
jae
sbb
xchg
xchg
add
jne
xchg
add
add
nop
jmp
add
add
add
cmp
fistpl
push
mov
xchg
ret
gs
add
aam
add
test
nop
push
mov
leave
nop
jmp
push
ds
sbb
add
add
add
add
test
nop
push
mov
leave
nop
jmp
cmp
add
dec
jae
out
dec
add
hlt
iret
movswl
clc
repnz
nop
nop
jae
pop
icebp
xchg
enter
roll
or
test
push
clc
repnz
nop
nop
jae
xchg
add
sbb
ret
add
add
sbb
enter
repnz
nop
nop
jae
scas
mov
mov
nop
add
clc
repnz
nop
nop
jae
sbb
roll
add
add
add
mov
push
push
mov
xchg
ret
jno
daa
sahf
add
add
add
jns
pop
adc
repnz
nop
nop
jae
add
jne
add
add
push
and
pushl
push
enter
add
pop
add
daa
add
sbb
data16
add
daa
add
add
pop
add
pop
pop
clc
repnz
nop
nop
jae
dec
cmp
leave
add
popl
dec
push
clc
repnz
nop
nop
jae
inc
jae
rcr
aaa
add
push
mov
xchg
ret
add
push
stos
xchg
daa
scas
inc
add
daa
div
nop
push
mov
leave
nop
jmp
mov
aam
add
jno
add
add
add
add
push
mov
xchg
ret
add
add
mov
mov
inc
imulb
add
add
cld
nop
nop
jae
adc
sbb
icebp
add
push
add
add
push
mov
leave
nop
jmp
mov
pop
add
roll
cmp
fimull
mov
xchg
ret
stos
rcll
inc
scas
pop
add
stos
push
sub
stos
clc
repnz
nop
nop
jae
aam
int
roll
aaa
add
clc
repnz
nop
nop
jae
add
scas
add
add
add
add
addl
xchg
ret
inc
je
icebp
add
aam
add
add
add
add
add
clc
repnz
nop
nop
jae
aaa
mov
enter
lcall
push
mov
xchg
ret
adc
sahf
push
out
aaa
enter
adc
mov
clc
repnz
nop
nop
jae
add
pop
add
mov
stos
stc
mov
nop
push
mov
leave
nop
jmp
add
rcll
mov
repnz
nop
nop
jae
push
sbb
stc
add
mov
add
push
mov
xchg
ret
lcall
add
ds
clc
repnz
nop
nop
jae
cmp
add
inc
add
fdivs
in
leave
nop
jmp
scas
nop
add
add
fmuls
add
add
mov
add
mov
mov
add
xchg
scas
adc
mov
nop
nop
jae
add
push
add
ret
fadds
stc
sahf
pop
add
mov
fwait
push
mov
xchg
ret
add
je
add
scas
fcomp
mov
or
add
nop
jmp
stos
add
jae
sbb
xor
cld
nop
nop
jae
enter
cmp
stos
mov
xchg
xchg
ret
push
inc
pop
add
mov
push
mov
add
add
std
add
add
add
xor
add
add
or
scas
sub
clc
repnz
nop
nop
jae
mov
mov
loop
sub
add
repnz
nop
nop
jae
sbb
sbb
add
add
pop
stc
xor
clc
repnz
nop
nop
jae
inc
ds
add
add
aaa
lea
push
mov
xchg
ret
add
scas
add
push
nop
push
mov
leave
nop
jmp
add
add
add
add
int
mov
push
mov
xchg
ret
stos
ds
cmp
fldl
add
fdivrl
mov
and
add
add
add
add
or
repnz
nop
nop
jae
add
leave
add
scas
push
add
ret
clc
repnz
nop
nop
jae
scas
add
add
stos
add
add
sbb
insl
dec
clc
repnz
nop
nop
jae
adc
cmp
add
add
icebp
call
clc
repnz
nop
nop
jae
adc
out
push
jno
add
aas
push
push
mov
xchg
ret
mov
add
sbb
negb
movsb
clc
repnz
nop
nop
jae
jno
add
scas
mov
cltd
pushl
nop
push
mov
leave
nop
jmp
nop
lcall
nop
inc
push
add
clc
repnz
nop
nop
jae
icebp
add
mov
add
push
stc
rcll
mov
xchg
ret
add
push
dec
nop
stos
sahf
sahf
dec
add
mov
clc
repnz
nop
nop
jae
je
inc
je
je
add
inc
adc
repnz
nop
nop
jae
enter
add
xchg
add
add
push
mov
leave
nop
jmp
add
add
push
clc
repnz
nop
nop
jae
add
add
push
add
push
mov
xchg
ret
add
ds
lcall
pop
mov
clc
repnz
nop
nop
jae
pop
add
jno
pop
push
mov
xchg
ret
add
sahf
add
mov
inc
mov
mov
clc
repnz
nop
nop
jae
add
mov
icebp
stc
add
inc
clc
repnz
nop
nop
jae
jae
add
add
add
shr
nop
push
mov
leave
nop
jmp
inc
mov
sahf
stos
scas
add
add
fdivr
clc
repnz
nop
nop
jae
je
add
jne
add
add
add
pop
mov
clc
repnz
nop
nop
jae
out
add
icebp
out
add
arpl
mov
repnz
nop
nop
jae
add
add
add
sti
add
add
nop
push
mov
leave
nop
jmp
add
push
mov
mov
pop
push
clc
repnz
nop
nop
jae
aam
add
out
add
jnp
test
enter
repnz
nop
nop
jae
scas
add
pop
pop
push
add
jne
push
mov
xchg
ret
add
jno
stos
add
adc
mov
or
add
push
mov
xchg
ret
add
add
dec
jno
mov
add
jg
test
clc
repnz
nop
nop
jae
add
into
gs
inc
pop
jno
clc
repnz
nop
nop
jae
add
push
mov
cmp
fs
add
add
sbb
add
push
add
add
xchg
pop
mov
clc
repnz
nop
nop
jae
xchg
icebp
icebp
sti
stc
add
mov
add
jne
push
mov
xchg
ret
sarl
mov
add
mov
mov
xchg
ret
inc
add
enter
push
add
fldl
pop
clc
repnz
nop
nop
jae
nop
push
push
push
add
add
out
add
clc
repnz
nop
nop
jae
cmp
stos
scas
fldl
add
pop
pusha
push
mov
xchg
ret
xchg
enter
add
jae
aam
ret
clc
repnz
nop
nop
jae
mov
add
cmp
sti
push
dec
mov
clc
repnz
nop
nop
jae
fdivrs
add
mov
pop
nop
push
mov
leave
nop
jmp
add
mov
add
add
mov
hlt
testb
add
lcall
nop
nop
jae
add
stc
mov
pop
push
mov
xchg
ret
daa
jae
ret
sahf
daa
cmp
jno
add
add
push
clc
repnz
nop
nop
jae
aaa
int
mov
mov
leave
lret
div
nop
push
mov
leave
nop
jmp
sti
xchg
add
add
push
add
push
push
insl
add
clc
repnz
nop
nop
jae
int
adc
inc
add
add
jnp
clc
repnz
nop
nop
jae
scas
sbb
inc
mov
enter
rclb
nop
jmp
add
xchg
mov
push
clc
repnz
nop
nop
jae
jno
int
add
mov
add
mov
clc
repnz
nop
nop
jae
add
inc
ror
gs
out
mov
jmp
mov
xchg
ret
push
add
sbb
sarl
jecxz
clc
repnz
nop
nop
jae
pop
fadds
roll
add
add
fistl
mov
cmp
ret
nop
add
aaa
add
add
add
mov
xchg
ret
add
add
pop
rcll
fsubs
daa
mov
clc
repnz
nop
nop
jae
mov
je
add
push
nop
push
mov
leave
nop
jmp
add
add
add
enter
add
lret
pop
clc
repnz
nop
nop
jae
add
enter
mov
mov
xchg
ret
xchg
add
xchg
enter
xchg
fadds
into
or
mov
fld1
push
mov
xchg
ret
add
add
inc
add
lcall
mov
xchg
ret
push
add
out
ret
add
stc
roll
out
cmpl
nop
push
mov
leave
nop
jmp
add
dec
mov
mov
repnz
nop
nop
jae
push
sbb
mov
stc
fsubs
mov
clc
repnz
nop
nop
jae
add
mov
add
inc
nop
push
mov
leave
nop
jmp
fadds
sbb
add
call
inc
add
mov
lcall
mov
in
add
add
nop
push
mov
leave
nop
jmp
inc
cmp
add
cld
nop
nop
jae
add
add
fldl
add
mov
repnz
nop
nop
jae
daa
nop
inc
add
shll
shll
imul
clc
repnz
nop
nop
jae
add
add
add
mov
clc
repnz
nop
nop
jae
add
aaa
xchg
xchg
stos
daa
push
mov
adc
nop
jmp
add
add
mov
int
nop
push
mov
leave
nop
jmp
add
add
into
add
icebp
movzwl
push
mov
xchg
ret
leave
xchg
enter
lcall
rclb
fs
add
cmp
add
push
add
push
adc
sub
clc
repnz
nop
nop
jae
aaa
add
out
xchg
stos
frstor
xchg
mov
clc
repnz
nop
nop
jae
add
scas
scas
aam
push
nop
stos
or
mov
xchg
ret
adc
dec
mov
lcall
sarl
clc
repnz
nop
nop
jae
push
xchg
xchg
int
and
mov
leave
nop
jmp
add
add
stc
add
add
add
aad
call
inc
add
fcomps
stos
fadds
add
mov
add
xor
repnz
nop
nop
jae
stos
add
ror
add
scas
es
shl
clc
repnz
nop
nop
jae
add
add
jae
push
paddb
nop
jmp
add
nop
jne
add
add
push
mov
xchg
ret
nop
sahf
stos
mov
add
mov
add
call
nop
jmp
add
add
xor
in
leave
nop
jmp
add
add
jno
add
add
popf
mov
nop
push
mov
leave
nop
jmp
add
sbb
mov
push
mov
xchg
ret
xchg
mov
add
xchg
jno
ds
add
lcall
push
clc
repnz
nop
nop
jae
add
add
leave
mov
mov
out
add
mov
mov
cmp
sbb
push
mov
rol
mov
fmuls
mov
add
mov
imul
imul
cmp
ret
roll
add
mov
add
sbb
jae
lea
nop
push
mov
leave
nop
jmp
mov
adc
icebp
add
add
inc
fwait
push
mov
xchg
ret
add
push
stc
add
stos
mov
inc
mov
add
add
addr16
push
mov
xchg
ret
add
sti
add
sahf
add
into
jge
mov
add
add
add
cwtl
pop
mov
adcl
repnz
nop
nop
jae
dec
add
dec
sbb
stos
stos
xor
push
mov
xchg
ret
push
fldl
add
add
sti
adc
test
std
clc
repnz
nop
nop
jae
mov
jae
add
fdivr
xor
clc
repnz
nop
nop
jae
add
add
int
lods
push
mov
add
add
pop
add
bound
add
rcr
add
clc
repnz
nop
nop
jae
add
add
out
aam
ds
jno
clc
repnz
nop
nop
jae
add
add
add
jae
cmc
cmp
nop
push
mov
leave
nop
jmp
jae
mov
shll
pop
nop
push
mov
leave
nop
jmp
pop
add
jne
add
push
fadds
inc
mov
clc
repnz
nop
nop
jae
push
add
ret
stos
add
stos
fistpl
clc
repnz
nop
nop
jae
add
add
mov
add
ds
add
add
mov
repnz
nop
nop
jae
add
add
add
adc
add
repnz
nop
nop
jae
add
cmp
out
call
nop
nop
jae
add
mov
aam
stos
lcall
in
arpl
xchg
ret
add
mov
add
push
add
clc
repnz
nop
nop
jae
stc
add
stos
sahf
add
pop
pop
clc
repnz
nop
nop
jae
add
add
add
mov
insb
repnz
incl
add
sbb
add
add
add
add
add
add
push
jne
pusha
nop
push
mov
leave
nop
jmp
leave
mov
stos
add
add
add
mov
jno
clc
repnz
nop
nop
jae
adc
add
lock
fdivrl
cmp
repnz
nop
nop
jae
add
int
dec
into
add
clc
repnz
nop
nop
jae
ret
add
roll
add
add
push
sbb
je
clc
repnz
nop
nop
jae
fldl
xchg
add
int
and
add
add
loope
scas
enter
nop
nop
jae
int
add
enter
add
jg
nop
push
mov
leave
nop
jmp
add
add
add
add
add
add
loop
jle
sub
nop
push
mov
leave
nop
jmp
add
add
add
jne
clc
repnz
nop
nop
jae
add
add
xabort
cld
nop
nop
jae
roll
stc
stc
push
add
clc
repnz
nop
nop
jae
inc
sarl
add
add
push
imul
cmp
ret
enter
xchg
add
popl
scas
sbb
nop
nop
jae
mov
roll
add
add
add
incl
add
jno
add
stos
add
add
add
push
clc
repnz
nop
nop
jae
adc
sbb
add
out
mov
pop
dec
inc
add
add
add
stos
add
sbb
push
add
sbb
repnz
nop
nop
jae
stos
roll
add
or
repnz
nop
push
mov
leave
nop
jmp
add
mov
add
adc
leave
clc
repnz
nop
nop
jae
sarl
aaa
fdivrs
nop
leave
add
add
mov
clc
repnz
nop
nop
jae
mov
nop
pop
add
add
push
mov
xchg
ret
add
lcall
sbb
xchg
ret
clc
repnz
nop
nop
jae
adc
add
add
add
dec
add
nop
push
mov
leave
nop
jmp
xchg
sahf
dec
add
add
jbe
inc
add
add
int
scas
xchg
rcrl
add
mov
add
mov
lock
ljmp
ret
add
add
stos
add
push
lods
pop
clc
repnz
nop
nop
jae
add
add
jno
add
pop
add
inc
add
push
mov
xchg
ret
add
add
scas
mov
add
mov
push
mov
xchg
ret
add
mov
jno
cmp
outsl
add
nop
push
mov
leave
nop
jmp
inc
jne
add
lcall
clc
repnz
nop
nop
jae
inc
add
add
xchg
clc
repnz
nop
nop
jae
add
add
enter
je
imul
nop
nop
jae
nop
add
mov
xor
add
repnz
nop
nop
jae
add
add
xchg
fwait
clc
repnz
nop
nop
jae
lcall
add
inc
add
fwait
shr
nop
push
mov
leave
nop
jmp
dec
mov
dec
roll
add
push
xchg
pop
clc
repnz
nop
nop
jae
add
add
out
mov
inc
add
repz
repnz
nop
nop
jae
mov
enter
add
push
push
mov
xchg
ret
sbb
int
add
push
ret
xchg
orl
rcr
incl
add
add
add
add
stos
xor
popa
clc
repnz
nop
nop
jae
add
xchg
add
enter
fistpl
clc
repnz
nop
nop
jae
mov
add
add
add
pop
push
mov
xchg
ret
mov
mov
scas
int
ja
loop
push
mov
xchg
ret
add
add
cmp
popa
mov
nop
push
mov
leave
nop
jmp
add
nop
add
cmp
push
add
push
mov
add
sub
mov
add
lock
sub
adcl
or
add
xchg
push
cmp
adc
jb
adc
sub
push
cli
popf
lds
inc
fsubrp
adc
mov
aas
cmp
loopne
lahf
sbb
cmp
mov
pop
jb
pop
cmpb
xor
bound
mov
fistl
mov
test
call
add
sub
add
add
dec
mov
lret
mov
push
add
lret
pop
xchg
jg
add
add
add
int
mov
pop
sub
jle
cmp
lcall
rcr
mov
or
add
add
stos
push
stos
test
sub
mov
outsb
jbe
int3
sbb
cmp
push
jle
and
pop
andl
push
mov
push
fs
pop
sub
ret
or
add
add
adc
add
mov
jne
adc
add
jmp
cld
and
out
lea
mov
add
add
add
add
fadds
or
cli
sub
sub
add
lock
inc
das
jns
jl
lds
js
pop
outsl
jno
fcmovb
cmpsb
push
out
test
mov
clc
shrl
add
sbb
mov
cs
cwtl
xchg
sbb
and
sti
lret
jnp
or
jno
dec
dec
sbb
test
test
inc
add
add
shr
out
jne
repnz
lret
pop
xchg
push
xchg
mov
add
ja
pop
lret
cmp
shrb
cltd
pop
sbb
add
js
sbb
lods
imul
add
jg
push
jns
xchg
fidivrl
add
add
push
ret
sbb
testb
out
outsb
and
mov
add
add
dec
mov
push
add
add
bndstx
repz
xchg
lods
test
add
adc
pushf
jmp
je
and
add
add
add
pop
scas
and
add
add
cmp
add
mov
popf
mov
sahf
mov
adc
sbb
lahf
add
add
add
ret
mov
jne
mov
in
add
add
jg
push
in
call
sub
icebp
ret
lahf
add
add
add
pop
lret
add
add
xchg
jae
mov
outsb
test
test
push
dec
pop
push
jp
mulb
add
insl
in
push
mov
inc
push
cli
push
cmc
dec
js,pn
add
add
iret
mov
add
jle
cmpsl
ret
int3
jg
cmp
cmp
add
add
sub
pop
pop
std
inc
pop
test
mov
or
aaa
lods
xchg
inc
mov
scas
js
es
clc
fisttps
inc
adc
inc
mov
inc
xor
push
dec
adc
in
test
cwtl
dec
push
push
add
mov
mov
data16
mov
jnp
cltd
test
push
scas
mov
push
jns
add
mov
cmp
add
add
mov
pop
xchg
mov
pusha
add
add
outsl
out
mov
repz
add
add
stos
aaa
cmpsl
test
pop
or
add
jbe
adc
stos
lahf
test
mov
call
scas
arpl
out
lds
aad
add
mov
mov
mov
jmp
jp
arpl
inc
scas
outsb
mov
rclb
xchg
fwait
mov
mov
fldt
add
add
shl
inc
adc
xorl
sub
dec
mov
dec
dec
mov
dec
jns
rolb
adc
fxam
mov
ret
mov
xchg
sti
dec
or
add
add
cmp
popl
mov
ret
push
add
lods
or
je
fwait
les
clc
dec
out
pop
stos
or
xlat
aad
fmuls
les
xchg
pop
in
jmp
test
jmp
jns
faddp
out
cmpsl
adc
mov
clc
and
pop
push
pop
in
lods
negl
sbb
cmp
mov
out
scas
ret
mov
rolb
mov
adc
divb
lock
add
add
add
fnstsw
mov
mov
loopne
cmp
cmp
pop
pop
adcl
add
add
leave
xlat
out
jae
cmc
fwait
sbb
inc
stos
and
test
mov
insb
mov
iret
ds
out
outsl
and
add
add
scas
rcr
fwait
std
and
add
es
xchg
jne
cmp
add
add
lahf
neg
xor
add
add
add
add
mov
mov
outsl
cmp
pop
jbe
fdivl
fidivrs
mov
and
pop
pop
aad
jnp
adc
add
adc
jb
std
inc
mov
pop
je
pop
mov
cltd
sahf
cmpb
sub
sub
inc
jae
sbb
add
add
scas
cmp
fcmovne
or
add
add
loope
scas
loopne
icebp
test
arpl
mov
out
sbb
out
ss
add
add
out
test
sbb
sbb
ds
xchg
xchg
ss
nop
pop
mov
mov
xor
adcl
jno
ret
dec
cmp
fsubr
sbb
aam
shlb
add
xchg
mov
imul
iret
inc
add
add
test
mov
add
dec
adcb
jmp
je
cmp
push
daa
movsb
xor
lcall
dec
dec
mov
xor
loopne
sbb
test
add
and
add
add
dec
data16
je
cli
jmp
sub
add
add
add
enter
lock
dec
mov
mov
scas
mov
nop
and
and
popa
notb
sub
mov
fsubrs
add
add
les
rol
pusha
mov
aam
rcl
imul
add
add
add
push
xchg
pusha
mov
aam
insb
add
add
out
cli
jge
pop
rorl
call
add
jmp
test
add
mov
add
out
pop
sub
inc
mov
sbb
pop
pop
mov
add
add
dec
mov
mov
xchg
mov
mov
mov
add
cmpsb
jb
push
mov
pop
jp
pop
rcrl
and
cltd
js
inc
outsb
adc
out
jnp
jno
jo
iret
pusha
add
add
js
xchg
fimuls
push
cmpsb
xchg
push
aam
mov
push
adc
ret
cmp
pop
pop
or
pop
out
push
in
decl
sub
lods
sub
or
add
add
xor
sub
mov
inc
add
add
in
dec
add
add
out
xchg
push
cmp
sub
mov
popa
lea
sbbl
je
or
add
add
daa
div
fnstenv
in
xlat
or
add
add
loopne
mov
add
add
iret
ret
push
push
insb
add
add
inc
mov
inc
popf
xorb
incb
add
cmp
inc
call
mov
cmp
or
add
and
add
cmpsl
popa
pop
cld
add
add
add
fwait
sub
mov
add
add
movl
add
mov
inc
rcrl
addb
add
add
inc
sti
in
xchg
add
add
and
pop
xorb
adc
inc
cli
push
cmp
adc
lret
or
mov
push
enter
enter
or
add
add
xlat
lret
add
add
aam
out
push
negb
mov
popa
xor
pop
shll
add
add
xchg
aam
mov
and
add
add
test
pushf
ljmp
mov
mov
mov
sbb
repz
add
add
sahf
icebp
lcall
iret
repnz
adc
enter
and
add
add
es
std
fwait
repz
lds
push
mov
sub
add
add
jns
mov
insl
mov
add
add
loopne
stos
stos
xchg
cmp
jp
mov
pop
aaa
xchg
hlt
sti
fisubs
mov
cwtl
das
mov
fidivrs
and
xchg
push
iret
jnp
int3
mov
sub
movsb
mov
push
cli
fsubs
xchg
icebp
pop
sbb
test
stos
pop
call
lcallw
add
mov
add
add
outsl
inc
mov
rcl
fucom
xchg
or
add
add
xor
in
mov
add
lret
mov
nop
jg
sub
in
jge
outsl
push
jbe
mov
and
add
lods
mov
test
je
daa
ja
subl
lods
xor
mov
mov
push
out
xchg
iret
mov
mov
sbb
jae
cltd
imul
enter
ret
scas
aad
orl
inc
jge
jge
fwait
cmpps
add
add
outsb
aad
xchg
stc
testb
andl
dec
lret
popf
push
pop
adc
fidivl
movsb
adc
push
pop
sbb
nop
jne
xlat
mov
in
jl
or
add
xor
iret
inc
add
add
in
mov
icebp
pop
inc
push
xchg
cld
jne
push
dec
mov
insb
add
add
out
cs
pop
pop
vrsqrtss
dec
jnp
jb
jl
and
outsb
xchg
pop
pop
jl
dec
sbb
inc
mov
or
movsb
aad
movsb
popf
pop
loopne
insb
mov
ja
or
inc
add
add
cwtl
fcmovnb
std
sub
call
js
jne
ficoms
std
pop
in
sub
call
imul
xor
push
sub
jle
pop
dec
mov
js
mov
cmc
out
pop
mov
pop
das
scas
lahf
pop
xchg
lds
jle
pop
push
jecxz
push
pcmpgtb
jmp
add
in
out
jns
addr16
pop
dec
test
lods
mov
in
adc
add
stos
mov
mov
dec
outsl
sbbb
jle
or
cmc
imul
sbb
ret
sahf
mov
pop
pop
ret
push
push
js
add
add
aad
jo
stc
sarl
add
add
add
jmp
push
hlt
jbe
adc
pop
sbb
adc
out
lods
repnz
jne
aaa
sub
add
add
or
aaa
and
add
add
add
sarl
lahf
mov
je
mov
and
add
popa
idivb
jecxz
test
sbb
sub
popf
sub
add
add
mov
aam
iret
xchg
into
testb
add
fildll
add
add
das
sub
mov
das
mov
sbb
push
sub
in
and
add
add
out
sub
pop
and
or
add
add
add
stc
xchg
pop
rolb
mov
mov
mov
add
and
std
aad
popf
pop
gs
subb
add
mov
cmp
add
jb
shll
mov
test
push
mov
pop
cmp
xchg
cwtl
dec
imul
mov
push
psubw
add
add
pop
mov
js
mov
jno
and
push
ljmp
xorb
and
cmc
xor
es
xor
ficomps
dec
inc
add
add
sarb
push
jb
mov
test
push
lds
add
outsb
cmpsb
add
add
add
add
add
stos
lcall
xchg
popa
test
imul
rolb
aad
adc
jmp
add
add
xor
les
xlat
push
or
add
add
lret
and
add
add
mov
out
mov
adc
add
mov
lahf
and
pop
flds
add
add
in
and
out
loop
movsb
sub
pop
mov
jecxz
inc
xor
cmp
dec
add
add
push
scas
push
add
add
cltd
cwtl
popf
sbb
mov
and
insb
add
add
roll
loopne
aad
pop
add
add
add
xchg
in
cmpsb
dec
shll
bound
mov
add
or
add
add
and
ficoml
clc
mov
add
and
insl
shrb
add
add
lods
loop,pt
iret
dec
push
call
inc
cld
gs
fwait
pop
push
xchg
addl
push
shll
shr
xor
repz
push
and
mov
xor
xor
cmpl
adc
add
add
pop
xchg
negl
mov
mulb
mov
sti
icebp
fiadds
dec
ds
cmp
jb
push
add
add
add
ja
push
or
sub
add
add
fists
adc
add
jecxz
clc
dec
fildll
mov
icebp
in
jb
mov
push
loope
adc
outsl
out
pop
push
dec
and
jnp
xchg
jns
push
lcall
mov
aam
add
add
or
mov
dec
jmp
xor
mov
sbb
or
mov
ds
fdiv
ret
cmpl
mov
repnz
stos
test
add
add
rcrl
js
push
pop
aam
mov
lahf
dec
stc
fisttpll
add
add
lret
in
mov
dec
pop
aad
mov
nop
scas
ss
sbb
mov
inc
adc
mov
sbb
add
lods
dec
popa
lock
pop
jge
or
or
jmp
adcl
test
idivl
out
mov
in
lds
es
xor
jmp
fs
divb
dec
mov
jne
push
xor
sahf
and
decl
inc
insb
add
add
pop
sbb
sub
das
jno
addr16
je
outsl
addr16
inc
mov
std
adc
jae
mov
cmpsb
js
iret
pop
repnz
test
cmp
add
scas
xchg
mov
shrb
mov
mov
sbb
lods
or
xor
daa
xor
movsb
je
xchg
ret
les
add
add
imul
in
xor
stc
mov
cmc
iret
mov
dec
arpl
add
add
mov
add
repz
add
add
pushf
jmp
test
add
add
lret
add
add
jae
fcmovb
imul
xlat
lcall
cmp
iret
cltd
loope
add
add
mov
out
adc
add
add
add
add
mov
sub
sbb
fdivl
pop
andb
leave
cmp
add
add
imul
add
loop
loop
xor
lods
or
add
add
mov
outsb
lcall
add
gs
jbe
pop
xor
inc
and
mov
pop
jmp
xor
add
add
push
jb
jo
pop
test
add
add
mov
adc
push
jmp
pop
pushf
pop
mov
dec
add
add
xchg
insb
mov
in
add
add
stc
in
lds
xor
ja
ja
mov
cmp
hlt
push
adc
out
adc
out
jmp
add
add
cmpsl
mov
popf
cmp
add
and
inc
mov
add
xchg
jnp
test
or
in
push
fidivrs
xchg
push
push
lret
pusha
add
add
pop
dec
add
sbb
and
add
add
mov
std
and
test
add
aam
pop
and
pushw
cwtl
repnz
pop
aad
pop
out
rcl
lods
mov
push
push
fcomps
jge
dec
mov
lods
lcall
subl
sahf
mov
lret
mov
xchg
sbb
sbb
xchg
iret
fwait
rcrb
add
pop
pusha
mov
mov
push
shl
add
add
popa
lahf
mov
test
int3
stos
xor
repz
in
mov
jg
insb
mov
inc
cmpsb
xor
mov
das
adc
ror
gs
dec
adc
push
scas
adc
mov
into
loopne
clc
popa
loop
bound
add
outsl
and
add
add
add
add
and
add
add
add
fwait
jne
pop
cmpsb
lret
rcrb
test
iret
popf
or
and
add
pop
adc
inc
fmulp
xchg
push
pop
push
inc
sbb
ja
imul
bswap
mov
dec
xchg
or
cltd
and
leave
xchg
fwait
in
jo
lea
into
ja
push
fwait
adc
popa
out
loopne
ja
cmp
insb
mov
imul
sub
cmp
out
popa
push
orl
mov
mov
scas
mov
mov
inc
add
add
xchg
arpl
in
enter
add
add
jecxz
pop
arpl
push
mov
and
push
imul
xlat
subl
jno
or
dec
xor
int3
cwtl
das
add
add
cli
jmp
int
mov
mov
icebp
and
test
push
test
add
and
add
add
mov
add
add
mov
inc
dec
sub
aam
mov
mov
and
add
cwtl
inc
test
or
sbb
add
add
add
push
out
sti
jecxz
loopne
xor
dec
jmp
mov
into
adc
add
add
movsb
sahf
cmp
mov
jbe
scas
call
shll
out
sbb
adc
push
push
dec
pop
sub
add
add
jecxz
mov
sub
out
stc
adc
jne
cltd
out
out
jns
add
int3
xchg
loope
jge
add
cmp
test
add
add
inc
push
xor
xor
fs
dec
mov
jns
push
ds
repnz
xor
fdivrs
dec
mov
mov
movsl
dec
ret
xor
je
adc
jmp
imul
mov
push
lds
add
sub
out
jl
xor
adc
add
shl
sub
add
add
pop
leave
mov
add
div
sbbb
jecxz
cmp
add
add
sub
pop
cmp
add
lea
mov
fwait
dec
add
add
fmul
push
push
mov
jno
mov
or
repz
cmp
enter
cli
arpl
add
repz
add
mov
stos
mov
test
jecxz
test
and
add
add
mov
leave
movsb
stc
icebp
out
negb
outsl
shll
xchg
shr
call
push
mov
and
add
add
mov
icebp
mov
sub
mov
aam
test
jno
xchg
jle
add
fwait
out
cmc
dec
cli
sbb
ja
lock
or
mov
ret
push
imul
inc
mov
aaa
imul
imul
dec
cs
mov
movsl
arpl
xchg
xchg
dec
std
call
cld
outsl
shll
in
xor
mov
shl
pop
test
popf
lret
call
mov
insb
add
add
in
stos
inc
add
add
jmp
add
add
scas
fidivl
xlat
add
add
add
inc
add
add
mov
add
add
xor
pusha
add
add
leave
adc
movsb
mov
cmpsb
mov
cmp
jmp
das
mov
sub
lret
repnz
add
add
sub
add
add
mull
mov
insl
lcall
add
add
test
into
dec
and
add
add
push
jge
leave
aaa
add
add
add
mov
ss
mov
notl
add
add
subb
add
add
lods
lcall
lds
aad
out
imul
cli
mov
inc
push
mov
mov
int
pop
pusha
mov
ljmp
and
push
pop
in
or
rorb
shrb
mov
inc
mov
pop
loop
out
ss
loope
sub
add
inc
dec
dec
stc
aam
mov
mov
dec
mov
les
add
mov
add
and
into
cwtl
repz
test
pop
push
pop
decb
push
sub
add
add
mov
or
add
add
add
aaa
and
add
add
push
in
mov
add
sub
add
add
sub
subl
add
test
mov
mov
jle
test
jp
add
add
pop
push
cmp
inc
xlat
and
add
add
int3
add
div
test
rcrb
imul
ret
scas
fcmovnb
test
rcl
and
add
add
loop
or
int3
sub
add
add
in
stos
nop
mov
add
add
sahf
mov
xor
into
jbe
add
add
mov
jno
mov
jbe
xchg
aaa
in
aaa
jae
jno
or
add
add
add
add
sub
pusha
mov
cltd
sbb
stc
addl
or
add
add
loopne
cs
clc
or
pop
icebp
jb
iret
in
sarb
mov
add
pop
add
lcall
mov
add
add
pop
call
add
add
xchg
xor
add
add
pop
jl
loopne
add
and
mov
clc
mov
mov
fimull
add
add
ss
inc
add
add
jle
push
xchg
or
mov
or
add
add
mov
scas
sahf
xchg
inc
out
stc
mov
add
add
les
les
add
pusha
add
add
aam
mov
dec
add
add
inc
inc
add
add
lds
lahf
sub
sti
pusha
add
add
shll
sbb
insl
shrl
out
sbbb
scas
cmpsl
push
dec
adcl
adc
push
lahf
aad
in
inc
mov
pop
xchg
popf
mov
mov
add
add
rolb
mov
fs
mov
add
popa
imul
add
add
mov
aam
out
cmpsb
pop
negl
ffree
sbb
xor
aas
mov
aas
mov
inc
mov
stos
mov
mov
sub
add
add
das
jle
jge
xchg
dec
mov
mov
lods
imul
pop
xchg
repz
inc
mov
xchg
jecxz
scas
in
clc
lea
jmp
das
data16
or
fsubrl
shll
add
out
sbb
inc
mov
push
mov
add
mov
dec
sub
decl
add
add
add
add
sub
outsl
xchg
jnp
iret
das
lods
cltd
pop
fcmovne
aad
pop
fwait
ss
pop
or
push
movsb
or
movsl
xor
add
add
mov
lods
stos
sub
daa
mov
mov
add
sbb
ljmp
add
add
sbb
sbb
in
call
fimuls
cmpsb
and
jmp
dec
jo
cmpsb
adc
add
cmpsl
stos
out
cmc
shr
iret
pop
push
push
outsb
cwtl
ds
jno
pop
mov
jbe
cmp
lret
pop
movb
xlat
mov
and
jnp
les
add
sti
dec
rorb
sbb
push
lcall
add
ljmp
or
add
outsl
scas
stos
or
add
add
lock
aaa
lahf
or
pop
paddsb
pop
jge
outsl
in
mov
xchg
mov
test
add
add
clc
dec
inc
mov
add
add
sbb
insl
fnsave
out
xchg
or
add
add
add
add
add
push
lock
ja
dec
add
add
stos
jp
in
lods
testl
stos
push
rorb
inc
das
and
add
add
ljmp
push
in
ja
addr16
arpl
push
stc
inc
daa
xor
add
add
nop
inc
mov
add
loop
add
add
mov
clc
pop
mov
test
outsb
cmp
in
lock
mov
cmpsb
lods
fstps
add
add
jl
cwtl
popf
xchg
outsl
mov
add
pop
mov
add
icebp
cltd
ret
pop
jbe
cmp
daa
idivl
popa
mov
pop
imul
add
add
xor
xor
into
cmpsb
aaa
neg
xchg
rorb
aad
scas
imul
stc
lds
mov
xchg
pop
push
adc
sub
and
enter
xchg
inc
pop
leave
xchg
mov
lret
pop
jle
fdivs
and
stc
popa
xor
pop
pop
add
dec
add
add
mov
shll
add
mov
add
add
pushf
dec
pusha
mov
add
in
pop
and
jge
sub
jns
sbb
stos
xor
push
pop
add
cltd
data16
sub
icebp
test
add
jnp
cmp
or
add
add
xchg
sti
pop
push
scas
loope
mov
mov
shll
pop
xchg
inc
fbld
fnstcw
push
into
pusha
mov
mov
dec
pusha
mov
inc
dec
xchg
pop
jbe
nop
cmpsb
pop
or
in
out
popa
push
push
and
push
jle
fisubl
mov
mov
test
xor
add
sbb
test
jecxz
ret
pop
jnp
fisttpll
add
add
adc
repnz
add
rcll
mov
scas
dec
xchg
adc
das
or
loopne
add
in
repz
aas
ret
pop
mov
add
mov
lahf
dec
mov
inc
mov
scas
mov
mov
add
loope
fisubl
cmpsb
mov
or
outsb
cmpsl
lods
pop
adc
xor
jmp
xlat
icebp
xor
add
pop
push
cmpsb
xchg
scas
cli
xor
cmp
outsl
and
add
add
sti
nop
cwtl
mov
add
cmp
mov
add
add
ret
push
out
jns
add
mov
mov
psubb
mov
loope
inc
pop
movsb
push
fwait
cmp
dec
mov
in
and
pop
sahf
repz
mov
push
call
cli
sbb
and
add
add
pushf
test
fisttps
rolb
dec
mov
jmp
cltd
loop
jbe
push
push
cmp
add
add
cmp
das
js
xor
jge
mov
mov
ret
pop
pop
loop
mov
xchg
aad
fnstcw
popl
lret
fbstp
test
pushf
sbbl
nop
fisttpl
add
jmp
sahf
aad
dec
sbb
add
add
test
mov
add
sbb
add
lcall
add
jge
sbb
xor
imul
xchg
push
test
pop
push
sub
add
mov
jg
js
xchg
adc
add
ucomiss
imul
add
add
leave
shll
jae
add
ret
add
add
add
add
add
add
mov
push
call
test
mov
mov
mov
scas
popa
push
jo
sbb
add
add
data16
addr16
inc
lock
iret
mov
es
mov
add
add
add
mov
std
push
mov
jo
cld
pop
bnd
mov
and
push
imul
popa
or
adc
add
add
pop
ja
pusha
mov
xor
add
add
add
add
pop
clc
xor
insl
int3
call
add
dec
lret
test
fsubrs
rolb
xchg
icebp
jecxz
lahf
dec
imul
dec
sub
add
push
cmc
xchg
jo
fidivs
std
pop
mov
dec
stos
outsl
stc
pop
mov
xchg
stc
stos
xchg
sbb
jmp
popf
sbb
or
inc
mov
pop
jno
cs
ss
data16
xchg
je
ret
xor
jno
and
jmp
mov
insb
mov
pop
in
cmpsb
mov
out
test
xor
inc
or
push
cmp
bound
and
add
add
add
mov
jmp
incl
mov
or
mov
negl
push
fstl
add
adc
stos
fmuls
ficoml
cmp
mov
and
xor
mov
loopnew
xor
repnz
jo
sbb
inc
push
dec
iret
std
test
shl
mov
dec
xchg
pop
inc
add
add
pop
pop
pop
mov
bound
jo
push
sub
add
add
dec
lret
lahf
or
dec
xor
bnd
inc
xchg
xor
xor
int3
add
mov
sub
add
add
hlt
les
mov
mov
ljmp
stos
xchg
icebp
mov
nop
hlt
jb
mov
std
sbb
and
dec
mov
aam
inc
pushf
push
pop
loopne
mov
xor
pslld
jno
sbb
std
enter
jne
mov
int3
pushf
adc
iret
or
add
add
in
pushf
xchg
add
test
cs
mov
mov
test
lcall
xor
outsb
fildll
pushf
adc
jno
add
jmp
add
add
jmp
mov
xchg
xchg
enter
mov
pop
in
pop
push
mov
addl
jns
dec
push
and
jl
pop
or
add
add
sbbb
movq
dec
fwait
jae
es
rcrl
loope
and
ret
inc
add
add
andb
mov
or
add
add
add
cmpsb
pusha
mov
adc
outsb
repnz
pop
les
mov
inc
cs
ljmp
int3
cmpsl
xchg
or
add
add
fdiv
lods
int3
adc
ret
std
sbb
fstp
sub
jle
adc
sub
add
add
out
into
cmp
jno
add
push
andl
jge
enterw
xchg
mov
inc
hlt
xchg
push
push
or
add
add
leave
mov
add
add
add
jge
push
and
dec
mov
add
add
jmp
push
or
cmp
add
add
sub
add
mov
mov
fnstcw
nop
dec
jae
icebp
mov
fiaddl
aas
nop
inc
add
add
adc
cmpsl
adc
js
lahf
or
add
mov
mov
int3
sub
adc
subl
jl
or
add
add
jp
sub
add
add
pand
jo
pop
enter
stc
dec
mov
mov
xor
cwtl
test
add
add
imul
dec
ja
add
add
and
sub
ja
loope
mov
add
add
add
xor
sbb
iret
mov
ret
movsl
cmp
lock
ds
jg
xchg
add
out
adc
pop
int
dec
cmove
add
add
inc
scas
jno
out
lds
mov
in
movsl
sbb
jns
or
in
mov
cmp
fsubrl
or
sbb
and
add
fisubs
insb
add
add
cmpsl
xor
in
xchg
mov
stos
in
add
pop
cmp
outsb
test
rcr
inc
stos
insb
mov
adc
mov
out
jns
cmpsb
mov
jl
loopne
cltd
fsubrl
mov
outsb
lret
sub
add
mov
scas
subl
add
add
pop
scas
clc
adc
mov
orb
xchg
andb
outsl
cmpsl
pop
addr16
add
fsub
ds
adc
jbe
push
push
pop
push
fsubs
mov
jb
in
lret
pop
jecxz
adc
lds
push
mov
outsb
pusha
add
add
mov
xchg
cli
add
add
add
xchg
insl
enter
lret
repnz
je
jb
jge
push
ret
sub
jae
jns
pusha
add
add
ret
into
pop
out
vcomisd
dec
mov
mov
add
add
push
mov
mov
add
add
lods
lea
pop
ss
les
rol
inc
adc
repz
mov
jecxz
pop
jg
ret
stos
sarb
mov
adc
movsl
in
jne
je
mov
mov
int
jno
cmpsl
adc
mov
add
pusha
add
add
mov
or
mov
fisubrl
add
in
mov
dec
bound
mov
jbe
ja
orl
call
ret
faddl
jbe
repz
lds
std
ljmp
out
add
add
mov
loop
adc
adc
int
sub
test
xor
add
add
cmp
cmp
lods
inc
mov
add
pusha
mov
call
xor
add
lods
sahf
decb
or
add
add
sub
fdivp
ret
mov
lock
xchg
call
lret
mov
lods
mov
sbb
and
add
add
add
add
add
add
add
add
add
mov
pushf
rcrb
or
jp
ds
and
in
imul
xor
fs
add
add
adc
jmp
or
leave
aad
add
vpcmpeqd
sub
fisttpll
mov
add
dec
ret
sbbb
cmpsl
data16
xor
lret
inc
aad
mov
sahf
lret
movsl
pop
pop
push
iret
jmp
int
scas
shrl
lods
push
xchg
in
mov
push
mov
mov
addl
loop
cmp
mov
mov
shl
pop
and
add
add
xor
ds
mov
scas
leave
aas
movsl
test
outsb
jno
fsubl
popf
lahf
pop
insl
int
push
movsb
jb
mov
mulb
enter
mov
mov
mov
push
add
xchg
pushf
ljmp
sti
cld
add
mov
jne
mov
or
sbb
add
add
adc
xchg
push
xchg
sbb
xlat
repz
cld
jp
dec
xor
fisubl
cltd
jecxz
pushf
push
push
rcl
cmp
hlt
pushf
ret
add
add
mov
dec
mov
jmp
add
sub
add
add
xlat
test
insb
add
add
insl
orl
stos
push
add
add
mov
loop
gs
add
add
in
sub
add
add
adc
dec
pushf
decl
push
pop
sub
pop
lods
pop
arpl
add
sbb
aam
divl
out
mov
add
add
pop
repz
add
add
data16
fsqrt
mov
mov
push
or
sub
sub
hlt
push
xchg
cld
loope
pop
mov
inc
mov
repnz
dec
imul
loop
in
hlt
pop
subl
rcrb
dec
add
add
mov
jg
fldl
sbb
jb
xor
inc
xchg
lret
call
imul
lea
sbb
add
add
pop
adc
iret
xchg
jp
sbb
test
cmp
push
mov
stos
js
aas
repz
cmpb
mov
pushf
mov
xchg
mov
lret
lret
movsb
sbb
dec
fcoms
test
xchg
fdivrl
iret
into
jnp
ret
popf
inc
xchg
dec
jnp
mov
sti
inc
mov
adc
incl
mov
in
push
daa
lods
push
shll
sbbb
add
add
adc
js
fildll
jl
addb
add
add
cmp
inc
mov
pushfw
and
popf
ds
push
sbb
fidivrs
aaa
add
in
add
jp
test
pushf
adc
add
and
out
xor
clc
push
mov
sub
mull
add
add
pop
sbb
dec
les
mov
in
ljmp
jp
sti
ljmp
lods
xor
or
inc
mov
add
add
add
lcall
sub
ja
data16
xchg
leave
std
and
xchg
movsb
add
add
int3
jns
jl
stos
push
xchg
fildll
divl
push
xchg
pushf
ljmp
mov
leave
xchg
iret
mov
pop
out
scas
fstpt
arpl
imul
push
cmp
add
mov
sub
iret
push
sbb
xchg
lcall
xchg
mov
adc
enter
add
add
in
ret
mov
fcmovnu
adcb
fnstenv
iret
les
shlb
cmp
gs
outsb
xchg
mov
xchg
sub
add
add
push
inc
xor
cmpb
cmpps
add
add
push
mov
ret
and
inc
insb
mov
imul
xchg
push
xchg
pop
call
adcb
adc
arpl
je
add
add
push
test
push
lret
mov
add
add
add
out
sbb
fistpl
mov
cwtl
nop
sti
xchg
xchg
cmpsl
stos
ja
push
ret
hlt
push
ja
xchg
inc
or
jb
and
add
add
lods
test
leave
mov
dec
add
add
scas
out
sub
mul
dec
add
add
push
push
in
pop
jbe
mov
lods
cwtl
scas
adc
fcmovb
sub
jb
mov
xor
mov
imul
mov
pusha
add
add
aam
push
aaa
jle
outsl
dec
add
add
lods
jp
adc
xchg
inc
out
stos
aaa
inc
out
mov
es
jge
push
pop
sub
mov
xchg
xor
mov
adcb
scas
repz
loopne
jl
mov
js
daa
dec
push
jno
popa
sub
jnp
adc
jae
movsb
xchg
cmp
inc
mov
fildll
aam
lea
stc
les
mov
inc
and
add
add
lods
and
daa
outsl
lock
movsb
sbb
jl
mov
test
or
add
add
add
or
add
leave
inc
arpl
jae
mov
rcrb
pop
scas
pop
int3
adc
jge
addr16
xchg
add
add
add
lea
sub
xchg
cltd
faddl
cmc
push
sub
push
sbbl
xchg
in
into
les
cs
inc
mov
sbb
jmp
and
add
add
cmp
div
adc
subb
mov
sub
jbe
les
das
ldmxcsr
pop
jb
das
test
lods
inc
fcom
sub
add
add
add
or
data16
mov
iret
stc
loope
fists
add
add
test
inc
add
add
and
add
add
xchg
jns
mov
jg
cld
cwtl
test
cmp
pop
adc
cmp
inc
das
aad
mov
mov
bound
rcll
ljmp
jbe
add
add
mov
out
push
sub
sti
je
add
mov
dec
mov
fsubs
fistl
mov
xchg
iret
inc
add
add
xor
add
add
add
stos
jmp
mov
push
test
cmp
jmp
and
add
add
outsb
xchg
mov
add
iret
sub
mov
mov
pop
imulb
add
push
mov
add
add
inc
push
pop
or
add
add
and
add
add
push
adcb
mov
xor
xchg
jno
movsb
pop
out
arpl
xor
add
enter
adcl
adc
mov
lock
xchg
adc
subl
aaa
lcall
add
pop
out
and
lods
mov
add
add
stos
in
outsl
aam
jo
test
mov
mov
stc
pop
sbbb
add
add
pop
rcr
insl
xor
neg
or
add
add
lret
jmp
sub
cwtl
xchg
add
lret
mov
xor
jmp
add
mov
jnp
loopne
jno
mov
cmpsl
mov
pushf
out
adc
push
push
rsqrtps
xchg
cltd
mov
jno
push
pop
and
in
push
inc
xor
bound
mov
cmp
mov
add
sub
add
add
mov
add
icebp
xchg
test
adc
push
fldt
popf
addr16
fs
cmp
cmc
cmc
dec
sub
add
add
inc
icebp
inc
cmp
mov
add
loopne
adc
or
mov
add
add
or
add
add
cmc
push
sbb
outsb
lret
mov
rcr
loopne
push
movb
add
dec
cltd
movsb
je
mov
or
add
add
fchs
pop
xchg
movsl
xchg
cs
scas
vmovdqu
add
loope
or
add
add
xchg
aas
and
popf
pushf
fldt
inc
insl
adc
jne
cli
mov
add
add
pushf
pop
imull
insl
rcr
and
push
sub
add
add
mov
testl
mov
add
add
pop
mov
xor
push
daa
mov
adc
sbb
adc
xor
fsubr
mov
in
cmp
or
jne
fisttpll
xor
add
push
push
push
pop
mov
mov
push
mov
jnp
sti
adc
pop
sbb
add
fxch
push
push
or
add
add
fistl
inc
dec
fwait
xlat
mov
add
and
xor
xchg
notl
cmp
add
add
cmp
push
stos
jns
jmp
inc
dec
lock
mov
insl
orb
add
fbld
fmull
mov
popf
dec
and
mov
aad
add
add
aam
xchg
add
add
add
add
or
movq
xchg
data16
mov
add
add
xchg
adc
pop
out
adc
leave
es
xlat
mov
aam
mov
add
add
sbb
loopne
not
rorl
popf
pop
cwtl
jmp
add
add
mov
pop
jge
or
xchg
jnp
xchg
cmc
cli
push
xchg
adc
add
add
add
push
andb
mov
stos
pop
mov
add
push
arpl
mov
int
jns
jnp
clc
outsb
jle
dec
mov
cmp
xor
xchg
inc
add
add
aam
adc
add
add
cli
imul
xchg
dec
jae
xchg
test
arpl
add
pop
leave
ss
xchg
xchg
mov
add
shrb
sbb
xor
hlt
push
sbb
sub
add
add
rorb
or
add
add
push
and
add
add
inc
adc
jo
or
repnz
mov
sub
cmp
dec
cmpb
mov
sub
add
add
jns
mov
ds
outsb
ja
das
clc
pop
push
out
jno
sarl
enter
lret
icebp
out
mov
aas
push
mov
mov
jge
in
adc
add
add
add
and
lahf
cmp
mull
jmp
cltd
add
add
add
aad
mov
add
add
negb
je
mov
xchg
xchg
sbb
add
add
add
mov
xlat
mov
add
pusha
mov
xor
inc
inc
iret
mov
imul
and
mov
mov
pop
je
cmp
add
add
mov
add
add
adc
add
add
xchg
cmp
xor
mov
and
xlat
stos
cmpsl
std
loope
mov
xchg
into
rorl
adc
pop
inc
in
dec
xchg
add
add
add
add
add
mov
ficompl
mov
push
jnp
push
pop
test
dec
push
dec
js
in
mov
pop
sub
or
lods
dec
loop
loop
mov
adc
dec
pop
pop
rorl
mov
mov
pushw
push
mov
test
jns
scas
jmp
dec
add
add
push
mov
xor
mov
inc
mov
xlat
push
rcr
pusha
add
add
mov
pop
mov
notb
push
fistpl
xchg
and
fwait
adc
into
mov
xchg
out
aam
fidivrl
fstpl
xchg
pushf
cmpsl
popl
add
outsl
je
add
jo
cli
pop
aas
pop
xorl
and
jp
cmp
pop
out
inc
jns
inc
mov
add
add
in
clc
aaa
clc
test
sbb
rorl
aas
push
das
pop
or
adc
mov
mov
out
mul
mov
push
lds
inc
xchg
or
mov
add
addl
and
lods
outsb
inc
add
add
aad
in
adc
add
add
fistl
sub
add
add
mov
push
in
int
cltd
clc
pop
repnz
adc
dec
add
add
fucom
xor
add
add
jb
mov
movlps
daa
push
shl
repz
cmpsl
aaa
mov
push
xor
les
push
cld
xchg
ret
sarb
or
cmp
es
jmp
add
add
add
mov
inc
ds
inc
xor
inc
out
aad
ret
gs
mov
fcoml
push
adc
pop
fmull
add
add
push
jnp
lds
sarl
js
add
add
add
aas
xchg
push
dec
mov
mov
and
inc
dec
mov
leave
movsb
push
inc
cltd
inc
pop
sbb
sbb
in
std
and
testb
and
add
add
add
pop
out
aam
mov
jae
insb
add
add
push
jge
pushf
push
xchg
xchg
das
sub
add
add
sbb
xor
scas
mov
jp
add
dec
mov
icebp
daa
shrb
mov
adc
cli
jl
aam
mov
pusha
mov
and
dec
pusha
add
add
es
sub
cmp
test
add
add
cmpl
add
sbb
mov
xchg
push
and
add
add
jle
add
add
add
into
das
jnp
into
es
xor
add
push
push
adc
ss
sbb
mov
mov
cmp
icebp
push
push
fimuls
shll
imul
or
mov
add
add
add
test
fsts
push
clc
ds
xor
lret
cwtl
jno
sub
in
imul
add
jle
sub
repnz
pusha
add
add
dec
ja
ror
pop
sub
cmp
sub
add
add
lahf
mov
push
inc
mov
cmp
sub
add
add
add
xor
add
add
mov
ret
and
add
add
add
insb
add
add
add
outsb
push
aam
scas
fwait
ja
xlat
ss
pop
bound
movsl
and
sbb
xor
add
add
mov
dec
outsl
pop
repnz
scas
mov
xchg
pop
mov
ja
out
movsb
and
add
add
sub
adc
push
addr16
and
add
add
add
add
lds
popf
orb
repnz
sub
add
add
and
mov
ja
cltd
insb
mov
pushf
cli
mov
adc
ljmp
jns
jno
dec
lods
xchg
hlt
iret
arpl
leave
mov
aaa
add
cmp
add
dec
inc
add
add
dec
fneni(8087
in
add
cmp
or
fs
ss
add
add
adc
mov
push
movsl
mov
mov
add
add
test
scas
xor
add
in
in
push
pop
push
xchg
mov
or
jnp
clc
lret
add
add
inc
sbb
cltd
push
pop
push
add
add
add
mov
je
mov
cmp
jecxz
nop
dec
add
js
movsl
cmp
sti
fildl
add
add
inc
inc
cmp
add
add
call
inc
movb
adc
sbb
jecxz
loop
dec
push
call
cmc
jge
mov
iret
arpl
insl
sub
add
add
jne,pt
pop
cwtl
stos
jmp
xchg
in
mov
jle
mov
adc
mov
cmp
outsl
adc
push
jge
inc
std
stos
scas
test
xchg
shll
add
add
sub
add
add
push
insl
inc
sbb
hlt
aaa
loopne
dec
inc
push
daa
bound
ja
mov
push
dec
and
pop
sbb
xchg
loopne
push
movsl
popf
repz
adc
mov
popa
xchg
imul
add
and
jbe
mov
or
add
add
in
add
in
insl
int
sahf
push
leave
and
xor
add
add
aam
mov
pushf
stos
jno
std
mov
xor
add
add
pop
enter
incl
push
loope
xor
add
or
add
add
mov
add
data16
and
mov
add
add
mov
mov
int3
push
cmpsl
dec
out
out
xor
mov
mov
movsl
sub
jp
mov
lcall
pop
mov
xchg
and
jmp
push
fstl
lods
int3
icebp
xor
jb
shufps
lahf
hlt
outsl
daa
push
sub
add
add
mov
or
aam
adc
sub
pop
pop
cmc
and
pop
jmp
push
into
rorb
xor
clc
sub
std
pop
test
pushf
out
mov
aad
adc
add
add
add
sbb
scas
pop
aas
out
xchg
dec
mov
insb
add
add
sbb
jnp
scas
loop
xor
aas
or
mov
add
sbb
mov
pop
xorb
add
add
add
scas
insl
dec
push
les
mov
mov
add
mov
scas
lods
lahf
mov
test
clc
mov
stos
sarb
xchg
test
dec
stos
cld
or
push
push
rclb
add
add
push
adc
jle
orb
add
loopne
int
jge
xchg
mov
cmp
add
iret
jecxz
loopne
int
jae
stos
or
add
add
je
xor
ret
dec
add
add
jno
imul
dec
add
add
mov
lea
popa
jb
jnp
lahf
leave
stos
push
jl
adc
int3
pop
adc
notb
and
adc
mov
add
add
pop
sti
xchg
cmp
aad
imul
add
sbb
jl
sub
push
sbb
add
add
mov
inc
or
popf
jge
pop
mov
dec
mov
pop
clc
mov
xadd
mov
add
push
xor
dec
repz
mov
mov
inc
ret
push
idivl
dec
cmp
cmp
dec
jo
sbb
std
inc
jb
fbstp
push
add
add
or
inc
test
int
icebp
inc
gs
bound
xlat
mov
adc
insl
mov
js
xor
xchg
out
ret
mov
dec
scas
mov
sub
sub
mov
mov
add
push
mov
out
pop
dec
dec
push
jbe
pop
int3
xchg
inc
inc
stos
stos
push
daa
xorl
cmp
jns
dec
mov
inc
es
and
add
add
xchg
sub
add
add
jbe
cmp
fsubs
sub
add
add
add
add
testl
cld
rolw
dec
jp
aad
jns
xchg
stos
loopne
mov
add
add
or
fistpl
loopne
xacquire
xchg
jb
push
in
ja
or
xchg
or
out
pop
add
nop
fs
inc
xchg
js
mov
sarl
pop
pop
mov
in
fists
push
pop
stc
pop
mov
jnp
pop
cmp
mov
in
mov
mov
add
add
add
add
bound
add
add
iret
cld
cmp
jecxz
mov
mov
mov
add
mov
mov
jbe
jmp
sbb
test
add
add
jmp
sub
add
add
jmp
cmp
mov
add
shr
stos
imul
add
add
add
mov
cltd
sub
aas
xchg
cmp
mov
add
add
mov
jle
mov
mov
or
fisubs
sti
lods
dec
add
add
les
or
enter
mov
out
dec
dec
add
add
or
in
xor
bound
xchg
sbb
data16
adc
add
cs
or
loop
fistl
mov
fstl
xchg
enter
mov
lahf
adc
add
add
popa
add
mov
xor
cmp
mov
sbb
lods
test
imul
sub
add
add
sar
movsl
dec
add
add
jbe
or
add
add
stos
lds
add
add
insl
dec
add
add
ds
add
add
xorb
cmp
movsb
arpl
stc
cltd
push
xor
xchg
popf
adc
sahf
pop
dec
pop
movsl
or
jp
pop
stos
sar
jns
jno
lods
jmp
rorl
add
add
xchg
jl
jae
ds
mov
mov
add
add
pusha
add
add
mov
mov
push
fistpll
or
and
arpl
mov
add
and
jae
out
cmp
mov
lret
jge
sbb
pop
sbb
pop
cmp
xor
jg
dec
xchg
pop
shll
xor
xor
mov
xchg
mov
iret
lock
aas
push
cmp
inc
in
and
mov
mov
sbb
scas
pop
stos
and
lahf
pop
mov
scas
popf
xor
xor
jmp
add
add
mov
add
add
loop
mov
mov
add
add
push
stos
add
mov
add
add
and
add
add
or
add
add
hlt
lahf
cmpsl
inc
add
add
cmp
pcmpeqd
pusha
add
add
jae
mov
rcrl
nop
jns
inc
je
jbe
jl
out
mov
sahf
mov
fldcw
negb
mov
loopne
cltd
lock
popa
inc
mov
add
add
sbbl
std
not
out
jl
in
mov
jbe
popa
xchg
rclb
out
icebp
das
and
andl
test
inc
pusha
mov
and
std
stos
pop
rclb
in
icebp
pop
in
mov
add
add
add
jns
repz
mov
add
add
pop
ja
sub
add
add
and
push
jne
inc
in
inc
sbb
test
jle
test
add
add
adc
dec
hlt
cmp
dec
les
and
add
add
ds
in
testb
add
push
es
push
inc
jno
mov
cmc
enter
dec
mov
imul
lcall
inc
movsl
fldenv
sets
fdivrp
mov
add
pop
bndldx
xchg
lea
movsl
cmp
inc
nop
dec
jnp
add
mov
add
add
sub
cmp
fsubs
ja
setb
adc
inc
enter
mov
xor
test
xchg
lods
insl
mov
cli
jg
jmp
jl
adc
mov
imul
add
add
mov
mov
add
add
add
jbe
mov
inc
call
leave
pusha
mov
pusha
add
add
sbb
add
incb
test
pop
mov
inc
ljmp
add
add
imulb
mov
xchg
add
add
adc
imul
mov
inc
stc
leave
daa
jmp
lret
push
das
jnp
jmp
dec
mov
sahf
pop
jmp
movsl
lret
xor
insl
and
push
popf
xchg
call
dec
mov
xchg
movsb
sub
add
add
add
js
test
add
popa
lcall
call
das
std
inc
pop
int
dec
imul
sub
dec
jbe
push
mov
fcmovnu
or
scas
pop
loopne
lcall
rorl
mov
jl
mov
pop
xchg
shll
pushw
out
scas
sbb
jno
jmp
mov
xor
mov
cmp
das
fld
aas
push
adc
mov
add
add
xchg
fdivr
add
cmpsl
loop
mov
adc
in
mov
mov
adc
cmpsl
adc
and
bound
dec
aas
std
mov
aam
test
pop
adc
out
repnz
add
add
add
pop
int
cmp
sbb
sar
idivl
nop
push
fsubl
xchg
or
bound
add
add
sub
loopne
imul
pop
lret
test
adc
dec
add
add
xchg
xor
std
sar
push
adc
movsl
and
jmp
sbb
add
add
add
stc
outsl
ficompl
nop
ljmp
inc
lret
xor
negb
add
add
push
inc
orb
pop
rcl
sub
repnz
add
push
dec
mov
xchg
bound
mov
mov
or
add
add
test
mov
ficomps
shr
inc
shl
subb
dec
xchg
enter
adc
add
mov
dec
adc
and
pop
lock
push
or
add
add
sub
add
add
push
lods
mov
add
add
es
rorb
fsubrl
add
add
cmpsb
cmc
leave
xchg
add
add
adc
rcr
aam
jne
add
add
jmp
dec
mov
jecxz
mov
mov
ja
push
pop
push
out
jne
mov
jmp
dec
xchg
sub
add
add
mov
ss
jmp
pop
rolb
add
add
inc
xchg
sarb
je
add
lds
adc
add
add
das
cmpsl
lret
ret
mov
popl
add
add
mov
and
loop
fbld
or
mov
jle
pop
icebp
lds
jp
mov
out
cmp
push
push
jge
mov
adc
or
add
add
pop
jo
outsl
mov
add
add
mov
mov
hlt
scas
dec
mov
jo
repz
add
sbb
or
add
add
add
add
test
add
add
add
jp
pop
outsb
dec
add
add
roll
add
add
add
adc
popf
out
push
sbb
addl
add
add
cmp
xchg
scas
inc
cmp
jb
mov
mov
ds
inc
insb
add
add
or
add
add
sub
das
mov
mov
mov
andb
add
push
or
add
add
rorl
stc
jmp
test
add
add
mov
jmp
das
loop
sbb
add
add
xchg
scas
xchg
mov
movsl
icebp
imul
jecxz
inc
mov
xor
fldcw
add
add
and
add
add
mov
mov
pop
push
ret
rcll
and
lret
jl
xchg
hlt
jb
cli
or
xor
hlt
mov
lret
jbe
ds
add
add
add
repz
or
xchg
adc
cli
shrb
inc
test
adc
inc
add
add
test
fimuls
ret
push
inc
enter
fwait
and
in
mov
subb
movsl
push
mov
mov
gs
sub
into
jmp
jne
inc
lods
fsubs
add
add
mov
dec
add
add
add
add
stos
test
stc
jmp
sbb
xchg
aad
insl
out
lret
cmp
mov
mov
add
add
cmp
dec
addb
pop
or
sub
xchg
adc
lea
aas
jbe
xlat
lock
mov
ret
fadds
add
add
addb
mov
add
movsl
mov
mov
add
add
push
cld
test
and
ds
shr
mov
add
add
in
inc
pusha
add
add
jns
and
hlt
mov
add
add
loope
mov
aad
lahf
jae
cmpsl
mov
xor
in
fdivrl
in
add
add
add
fisubrs
stos
je
cmp
cmp
sub
add
add
xor
xchg
out
out
or
add
add
lods
sahf
inc
sbb
and
mov
inc
out
push
sbb
jge
clc
test
add
repnz
mov
jp
cltd
insl
ja
cmp
out
or
add
add
mov
enter
add
mov
mov
inc
add
add
dec
mov
sarl
cltd
aaa
js
add
add
les
aad
mov
cmpsb
push
repz
add
add
and
in
xchg
decl
push
rclb
jmp
push
mov
add
add
es
mov
sub
push
sub
pop
add
sub
mov
push
jge
shrb
imul
dec
add
add
loopne
jae
pop
ja
cmp
sbb
add
add
adc
nop
adc
push
nop
or
testb
xchg
lcall
adc
mov
sub
fsubrs
outsl
and
jnp
push
mov
das
shlb
in
cwtl
adc
add
ss
je
mov
or
lea
add
add
js
push
fiaddl
mov
add
ljmp
mov
sbb
jnp
or
add
add
in
mov
mov
inc
mov
dec
add
add
jle
movsl
in
sti
push
fwait
bound
add
adc
push
push
mov
pop
fnsave
ja
idivb
adc
repnz
out
gs
push
dec
ret
mov
add
add
inc
fistpl
add
dec
jge
pop
pop
arpl
sub
jae
sbb
lret
or
in
clc
or
add
lahf
sbb
pop
and
add
add
mov
xorl
outsl
xlat
in
push
shr
lea
mov
lea
stc
jne
ja
lret
dec
cmp
movsl
mov
or
sub
stc
xorl
add
add
or
and
add
jne
sbb
mov
add
add
inc
ljmp
rcl
push
or
test
jg
js
daa
mov
cmpsl
lret
mov
leave
mov
dec
fsubs
add
add
mov
dec
test
push
add
ljmp
add
sbb
popa
ljmp
dec
xchg
jl
dec
lock
scas
shlb
add
add
inc
dec
movsb
lock
arpl
test
dec
fstpl
mov
xchg
and
mov
cmpb
sarb
pop
arpl
movsl
jno
and
add
add
xchg
test
or
xchg
imul
mov
sub
sub
add
add
adc
jo
in
jge
xor
fldcw
or
mov
sub
aas
je
loop
stos
imul
add
add
adc
xor
pop
in
mov
cld
das
lret
fwait
pop
jmp
or
ffreep
int
outsb
ret
mov
popa
pushf
popf
stos
add
jbe
xor
add
add
xor
mov
je
sub
xor
cmp
cmp
add
sub
inc
cmp
imul
mov
jle
out
mov
xor
add
add
fstps
xor
jecxz
push
mov
add
mov
mov
stos
iret
pop
loop
cs
call
pop
data16
add
jne
ret
es
jbe
mov
out
mov
pop
cmp
sbb
mov
mov
add
add
push
xchg
lret
out
adc
popa
dec
add
add
in
push
push
imul
das
pusha
add
add
ljmp
add
mov
inc
loope
ud0
push
fsubp
cmc
adc
xor
dec
shlb
js
subb
sbbl
imul
xor
add
imul
xchg
shll
add
add
sub
scas
dec
aas
jo
adc
push
stc
jg
in
icebp
les
mov
popl
adc
jbe
stos
push
inc
mov
cmc
fs
jae
movsl
into
inc
mov
mov
xor
mov
cld
shrb
es
mov
mov
cld
or
pop
xchg
mov
or
add
add
into
xchg
jmp
jmp
fdivrp
pop
lds
xor
add
je
mov
and
xchg
sbb
out
shl
xchg
sbb
add
loopne
imul
scas
adc
pop
shrb
jmp
jle
test
add
add
fistps
loop
fsubl
push
in
xchg
pop
rorl
sbb
outsb
mov
push
pushf
test
sar
cmp
mov
sub
xor
cmpsb
inc
pop
fidivl
mov
sarb
pop
mov
mov
pop
mov
out
mulb
add
add
add
add
add
jne
pop
and
sbb
fdivrs
fcmove
aam
push
test
mov
hlt
xchg
sbb
data16
idivb
repnz
add
add
imul
push
std
mov
push
or
fistps
cmp
daa
mov
pop
xor
push
in
jle
lahf
andl
xor
xchg
lea
add
mov
add
mov
subl
mov
inc
ret
add
add
xor
aas
add
add
add
jb
outsb
push
sbb
inc
or
loope
in
dec
movsb
sub
leave
xor
sbb
jo
or
jg
std
xchg
pop
push
mov
les
and
fldt
inc
cmp
add
add
add
sub
out
sbb
mov
js
or
pusha
add
add
lahf
mov
ficoms
sahf
inc
xchg
push
and
add
add
in
lods
adc
add
add
inc
add
add
scas
shl
cltd
xchg
mov
push
cmp
mov
orb
xchg
pop
idiv
rcrl
fnstsw
int
mov
jmp
add
popa
add
sbbl
add
add
loope
sarb
aas
inc
fistpl
inc
cmpsb
cli
and
add
add
scas
in
mov
cmc
sti
lods
or
cld
lock
ss
data16
icebp
enter
or
add
add
add
jle
jle
cwtl
in
dec
mov
jno
mov
mov
inc
mov
aad
add
add
ss
ret
fwait
mov
aam
mov
mov
scas
lret
das
cld
fwait
mov
inc
loop
push
jbe
pushw
xchg
insl
lret
add
add
cmp
add
push
pop
pop
cmp
dec
sbb
add
add
push
jmp
lret
call
inc
lds
sub
jecxz
and
add
add
fldl
or
add
in
cmp
add
add
cltd
data16
cmp
in
sub
add
add
mov
push
or
add
add
mov
lahf
fldt
add
mov
jl
or
pop
inc
add
add
add
mov
ja
mov
add
push
insl
inc
mov
cli
loop
sub
mov
test
add
add
inc
and
add
add
stos
jle
dec
mov
lret
dec
mov
popa
or
add
add
add
mov
sbb
add
push
sub
inc
repz
add
add
mov
mov
cmp
xor
mov
inc
adc
outsl
jmp
add
ror
mov
pop
movsl
out
in
push
mov
cmc
addl
imul
scas
pop
mov
adc
inc
jl
mov
data16
mov
cmp
push
adc
and
xor
cmp
filds
add
add
sub
add
leave
lret
arpl
sti
aam
mov
add
add
into
add
mov
or
add
sub
add
add
add
add
mulps
mov
sub
cmpsl
sbb
add
cmp
xlat
into
mov
es
mov
lock
test
dec
shlb
push
dec
out
repz
add
add
sti
mov
rcl
sbb
rcrl
mov
lret
jne
mov
lret
in
mov
jmp
add
inc
mov
inc
mov
gs
ja
add
add
dec
test
lock
das
lods
xor
add
mov
jns
mov
mov
cmc
xor
add
mov
and
jne
add
add
add
add
stos
nop
xor
add
add
mov
add
add
out
out
call
ret
in
pop
insb
mov
rcll
adc
int3
xchg
out
cmpl
in
fs
inc
frndint
daa
enter
sahf
mull
xor
add
jp
or
loope
push
loope
idiv
inc
outsl
cmpsb
jl
adc
insl
bound
dec
in
imul
std
ljmp
cmp
xchg
push
cltd
stc
xchg
aad
insb
add
add
xchg
sbb
inc
scas
arpl
add
add
add
push
push
jmp
sahf
ret
xor
add
add
jp
xchg
pop
inc
sbb
shrb
add
add
adc
jb
int
inc
or
mov
jae
and
ss
cmc
cmp
inc
mov
mov
lahf
popf
jle
int
cltd
les
mov
add
add
ret
push
cmc
iret
xor
pop
push
test
adc
hlt
mov
xor
cli
and
enter
mov
adc
add
add
scas
fidivrl
aad
and
mov
mov
xlat
inc
test
and
fmull
adc
cmp
rorb
out
and
add
add
add
add
icebp
xor
mov
mov
or
lret
add
push
subb
add
add
les
add
cmc
insb
mov
or
pop
repnz
adc
xor
int
test
movsl
je
mov
lret
pop
std
or
hlt
dec
or
and
add
add
or
add
add
jne
int3
mov
xchg
aaa
mov
mov
mov
add
push
movsl
ljmp
rcrb
pop
pop
jns
lahf
push
fwait
shll
sbb
test
fwait
sbb
shrl
add
add
add
ds
push
and
xor
mov
mov
call
ud2
popa
outsl
pop
cmp
mov
clc
enter
pop
jecxz,pt
adc
divb
mov
daa
mov
ja
inc
or
mov
push
imul
add
add
add
xor
int3
cs
sti
out
rcr
lcall
jecxz
daa
aaa
mov
lods
cmp
out
cmc
ja
inc
cs
xor
jmp
fwait
xchg
cmp
inc
bound
test
fimull
mov
loope
repz
cwtl
cli
jae
xchg
enter
xchg
mov
out
push
das
add
lret
ljmp
jecxz
call
int
pop
fsubrp
push
dec
or
add
add
ss
clc
test
std
ja
pop
ljmp
adc
pop
add
mov
pop
js
mov
jmp
mov
in
shrb
or
add
add
cmc
pop
mov
pop
js
clc
adc
js
jge
add
add
add
inc
add
add
sbb
inc
cmp
aaa
pop
inc
add
dec
icebp
adc
add
add
cmp
fisttps
mov
push
xchg
sbb
mov
add
add
add
add
cmp
push
push
and
mov
repnz
fisttpl
int
xor
jo
mov
mov
mov
fisubl
rcrl
sahf
or
add
add
mov
xor
bound
sarl
adc
iret
lea
aam
jns
faddp
iret
mov
add
lods
mov
lret
adc
mov
mov
push
inc
push
andb
or
add
add
nop
ja
out
rorb
sbb
add
add
mov
adc
add
add
sbb
sbb
es
add
add
add
add
add
jb
push
arpl
jge
sbb
push
mov
mov
out
loop
enter
mov
bound
cmp
loope
and
add
add
les
dec
sbb
or
push
fisubrs
pop
lods
out
mov
stc
stos
xchg
xchg
sbb
mov
data16
lods
mov
add
test
xchg
scas
and
lock
icebp
mov
mov
jno
push
inc
lahf
imul
add
jmp
test
adc
add
add
outsb
push
pop
inc
es
mov
cmc
mov
sub
mov
insl
and
mov
add
add
add
add
add
fucomp
jp
popa
xchg
mov
add
out
mov
add
add
cmp
add
sub
jno
loopne
scas
loop
cmp
loope
sbb
cmp
push
xchg
add
adc
jno
sbb
lret
sub
mov
in
cmp
into
loopne
jnp
mov
mov
std
push
xor
add
jb
cmp
enter
mov
add
add
sbb
add
enter
sbb
xor
fnstsw
push
push
or
je
frstor
lods
add
add
add
mov
mov
add
add
and
add
add
add
mov
mov
xchg
xor
inc
adc
inc
jo
and
inc
repnz
add
add
mov
xor
loope
pop
adc
ds
push
call
roll
add
add
push
fnsave
and
add
in
mov
jb
jmp
jg
dec
outsb
pop
ds
pop
movsb
push
add
jb
mov
pop
lods
outsb
push
mov
sub
and
add
add
push
push
or
push
mov
fdivr
popa
in
jmp
and
loope
stos
clc
fists
xchg
adc
inc
push
mov
xchg
and
add
add
testb
dec
lret
nop
mov
mov
adc
push
inc
lahf
and
shlb
mov
enter
add
subb
cmp
push
and
add
add
add
add
daa
mov
push
mov
das
mov
xchg
cmc
inc
or
ret
imul
jae
xchg
push
enter
jae
sbb
out
fnstsw
lret
inc
iret
enter
aas
cmc
mov
lods
out
imul
add
es
add
add
adc
movsl
or
sbb
mov
outsl
lcall
add
cmpsb
lret
lahf
pop
imul
pop
cld
in
rorb
add
add
mov
shrl
js
xchg
sub
mov
xor
shl
push
pop
mov
insb
mov
jo
rclb
inc
les
push
sbb
adc
push
mull
push
mov
mov
test
jmp
push
push
mov
add
jae
cld
pop
pusha
mov
push
dec
add
add
fmull
xchg
adcl
inc
pop
xor
mov
adc
call
add
add
xor
cmp
mov
ret
repz
mov
add
call
add
pop
xor
sub
stc
popa
xor
add
add
ret
fsubs
add
add
cld
mov
pop
and
xor
ds
call
adc
add
add
xor
add
scas
int
movsl
add
mov
add
mov
xchg
add
add
loopne
fnstsw
and
adc
mov
and
add
add
xor
add
loop
mov
cltd
mov
fisubrs
lds
sub
sub
inc
add
add
jl
jp
bound
lods
mov
sub
add
add
dec
cltd
cmp
mov
mov
sub
push
hlt
cmp
push
sbb
aas
movsb
popa
jp
add
add
sub
outsb
cmc
jo
sub
pop
cmp
insl
sarl
xor
cmc
std
sahf
cmp
xchg
adc
pop
or
fcmovb
loopne
out
inc
add
mov
sub
imul
imul
add
add
push
fs
sub
add
add
mov
lcall
out
push
xor
dec
or
xchg
in
leave
fcoms
pop
insl
mov
cmpsb
mov
cmp
mov
add
pop
fst
xlat
xor
sbb
lcall
insl
pop
dec
cmp
sbb
push
enter
dec
stos
sub
leave
aaa
les
ss
add
add
ss
or
in
arpl
mov
cmpsb
or
add
add
icebp
pop
jmp
and
stc
sub
add
stos
daa
sbb
add
daa
xchg
nop
loopne
outsl
cmpsl
lcall
pop
inc
pop
int
movsb
lahf
push
cmp
sub
pop
pop
mov
sub
add
add
mov
out
jnp
jle
mov
push
xchg
inc
cmp
rcr
push
lds
jmp
fimull
nop
jg
push
jo
clc
xlat
jmp
mov
mov
add
mov
dec
dec
mov
add
add
daa
xor
push
aas
xchg
outsl
fstl
inc
add
add
dec
mov
femms
inc
mov
add
stc
enter
sub
fcmovbe
jns
not
or
add
add
add
add
fidivrs
add
add
jb
and
add
add
cltd
pop
push
or
mov
rcrb
inc
mov
fistl
xor
outsb
mov
testb
add
mov
dec
roll
icebp
mov
add
add
cwtl
inc
add
add
loopne
outsb
push
mov
add
insl
pusha
add
add
dec
cmp
cmp
add
add
dec
add
add
xchg
adc
push
xor
mov
add
ljmp
add
test
scas
sbb
cmp
movsb
fwait
jne
out
ds
mov
cmp
stos
insl
cmpb
mov
add
insl
pop
adc
cmpsb
pop
mov
mov
add
add
movsb
inc
hlt
aam
lahf
pop
rcll
in
cmp
arpl
xlat
ja
mov
sarl
add
fisubrs
inc
add
add
aas
aaa
mov
jmp
mov
push
scas
das
xchg
jae
dec
leave
sub
shlb
add
add
cmp
lcall
sub
incl
data16
xor
test
sti
jbe
pop
rcr
mov
push
ret
push
adc
cmpsb
mov
lock
shrd
jge
push
movsl
mov
cwtl
mov
shlb
js
vpsllq
mov
lcall
jg
testb
add
jo
push
bound
pop
sbb
add
add
test
add
add
cmp
push
jecxz
sbb
jle
jp
adc
cli
fsubp
sub
xor
shrl
add
add
fsubrs
sti
cmp
mov
add
add
shrb
fstl
push
mov
mov
mov
pop
bound
add
add
insl
pushf
std
popf
negb
cmpsb
push
pop
outsl
dec
jbe
jae
and
lods
dec
data16
aas
fdiv
jecxz
pushf
pop
or
add
add
mov
js
xor
add
add
mov
pop
mov
mov
cmp
mov
cmp
dec
jne
aas
rcrb
add
add
add
add
cs
pop
jno
push
sub
xchg
fnsave
xchg
or
mov
movsb
jae
jno
mov
dec
pop
pop
jno
mov
lds
mov
push
in
jecxz
pop
dec
sub
mov
add
add
add
jbe
in
add
mov
dec
sub
add
push
dec
sbb
lcall
xchg
aaa
lcall
inc
mov
in
mov
inc
lods
les
aam
sti
aad
xchg
or
add
add
fisubrs
out
sbb
jns
lock
xchg
aad
inc
cmpsb
xor
dec
daa
in
jge
push
test
std
imul
leave
xor
movsb
lods
dec
push
lock
test
imul
xchg
cs
arpl
imul
sub
or
mov
movsb
dec
lock
aad
sbbb
insl
mov
lods
in
fdivrl
ret
and
add
add
add
add
add
and
std
push
flds
mov
in
icebp
pop
mov
je
xor
out
std
repnz
mov
add
mov
cmp
cltd
into
daa
pushf
lret
add
add
mov
shrl
xchg
mov
imulb
repnz
pop
aaa
push
dec
dec
aad
lahf
mov
add
je
sub
ja
pop
ss
enter
mov
ljmp
pusha
add
add
push
xor
nop
mov
mov
dec
add
add
sbb
fwait
add
add
add
jbe
pop
jecxz
push
pushf
mov
jns
inc
mov
je
inc
ficoms
inc
pop
shr
jle
mov
pop
daa
cmpsb
loopne
leave
sub
dec
sub
add
mov
or
lods
mov
xchg
stos
jle
dec
mov
inc
mov
cmp
test
lods
addr16
loop
add
mov
cmp
add
add
add
add
mov
clc
push
rcrl
out
push
and
adc
and
ret
pop
jb
cltd
mov
sub
add
add
mov
add
add
xor
jge
xor
push
or
add
add
xchg
or
cmpsl
es
sbb
imul
lock
and
int
xchg
cmc
or
les
jmp
ficomps
add
repz
mov
sahf
add
movsl
sbb
movsb
subb
mov
pop
inc
nop
mov
add
add
dec
dec
aaa
fcom
xchg
stc
cmp
scas
cmp
add
pop
dec
mov
mov
jl
mov
data16
mov
pushf
fldpi
shlb
mov
scas
leave
in
cmc
mov
sub
add
add
popf
stos
mov
dec
mov
dec
int3
cmpsb
insl
hlt
fnstcw
je
icebp
aas
lcall
ds
in
std
fs
inc
dec
out
adc
test
and
and
or
subl
add
fdiv
sbb
mov
sbb
add
add
cmpb
fs
push
cmp
mov
mov
pop
rol
repnz
out
pop
mov
test
mov
add
std
loopne
adc
dec
jg
fisubrl
push
add
add
add
pop
mov
in
bound
mov
cmp
fld
sarb
dec
jns
dec
je
jl
iret
mov
in
arpl
add
add
pop
and
test
mov
lret
imul
jecxz
ret
add
add
mov
mov
cmp
jbe
ss
mov
inc
push
stc
dec
xor
add
add
mov
mov
mov
add
arpl
push
decl
lock
mov
jnp
shr
inc
rorb
subl
add
fmuls
add
add
add
add
add
add
push
in
mov
sahf
sbb
in
aam
cmp
in
in
xchg
jg
jecxz
pushf
pop
pop
add
push
mov
or
add
into
sub
test
js
mov
cmp
cs
add
add
push
mov
add
add
les
add
add
xlat
xchg
xchg
mov
mov
add
add
push
stc
and
jo
imul
mov
xor
add
add
jb
and
js
lds
add
shll
xor
push
dec
xchg
dec
inc
jl
xlat
lret
push
fs
and
adc
add
add
xchg
jmp
pop
lds
das
leave
int3
test
jecxz
cwtl
mov
outsb
lahf
sahf
jne
cmp
das
or
add
lahf
ss
sti
jmp
pushf
xor
mov
add
push
shlb
in
or
add
add
imul
les
dec
mov
xlat
arpl
push
fldt
stos
lods
jnp
push
scas
xor
xor
js
inc
add
add
cmpsb
sbb
or
and
call
xchg
sbb
and
xor
rcrb
lds
ds
lahf
cli
mov
and
add
add
sub
add
add
jae
cmp
cmpsb
sbb
pusha
mov
mov
cmc
pop
xchg
push
fs
pop
adc
push
xchg
add
dec
daa
or
pop
push
jg
call
add
add
add
add
mov
outsl
dec
aas
pushf
hlt
or
add
add
loop
lods
sub
add
add
cli
mov
add
push
xor
xchg
and
mov
mov
inc
mov
test
and
ss
xchg
pop
xor
jle
imul
sub
rcl
sub
int3
mov
add
mov
add
xor
cwtl
inc
repnz
add
mov
adc
add
add
sub
js
bound
sahf
movsb
mov
add
add
pop
fnstenv
popf
add
int3
popa
cmp
fldl
cmpsl
mov
mov
hlt
pop
dec
sbb
rclb
sbb
cmp
scas
jb
and
add
add
xchg
rcll
add
xchg
pop
xchg
sbb
out
je
mov
jg
xchg
jmp
inc
enter
or
add
push
loop
inc
pusha
add
add
mov
add
cwtl
push
sub
test
add
ds
pop
mov
js
lds
sti
lods
mov
jl
push
icebp
stos
lret
adc
loopne
pop
test
lods
movsb
xor
xchg
cmpsl
mov
in
ja
add
add
inc
cmc
je
push
out
pusha
add
add
jns
jb
out
dec
iret
jge
add
das
mov
and
inc
fs
jg
ja
loopne
push
insb
add
add
jne
or
add
or
shrb
cld
ficoml
push
cmp
add
sarl
ret
cmp
cld
mov
test
cmp
add
adc
pop
push
rcrl
xor
pop
pushf
adc
sub
add
add
les
pop
mov
mov
mov
jns
xor
add
loopne
mov
or
add
add
jo
das
add
add
add
pop
sahf
int
stos
or
mov
dec
gs
add
add
pushf
enter
jae
clc
mov
sub
push
xchg
hlt
pop
adc
sbb
mov
aas
sub
add
add
add
sbb
test
sahf
fisubl
lahf
jp
test
scas
pop
in
in
push
stos
outsb
movsb
sbb
lea
xor
rol
dec
add
add
mov
push
sbb
mov
sbb
jmp
inc
mov
ret
je
add
add
sarl
loop
mov
sahf
xor
add
movb
add
add
mov
push
push
lea
or
push
push
mov
sub
or
xchg
sub
add
add
test
dec
rcrb
mov
lret
xchg
stc
xor
push
xor
arpl
add
add
add
add
add
out
dec
inc
add
add
arpl
and
pop
inc
or
add
add
mov
addr16
mov
ja
mov
std
add
xchg
int3
rorl
cmp
sub
ss
mov
pusha
mov
ret
jae
in
orl
scas
mov
cmp
jp
fwait
mov
push
in
es
push
mov
inc
mov
add
inc
add
add
dec
mov
add
add
xor
mov
xchg
leave
hlt
xchg
stos
push
add
add
adc
jns
sbb
mov
pop
xchg
or
mov
sbb
add
add
and
jmp
mov
aad
sbb
jp
int3
hlt
call
jge
jmp
lret
lret
out
inc
mov
popa
pop
pop
inc
not
mov
add
add
sti
jo
scas
sbb
push
outsl
jecxz
mov
mov
or
jbe
sbb
in
stos
sbb
iret
call
fdivrl
cwtl
rol
mov
aad
pop
loop
lahf
fcmovnbe
cmp
push
shrb
add
add
dec
pop
dec
jp
data16
cmp
pushf
out
dec
mov
and
aam
pop
popa
mov
add
enter
imul
imul
sub
adc
daa
mov
adc
add
movsb
cmpsb
fistpl
jg
xchg
add
add
add
mov
lcall
add
add
sub
imul
add
add
pop
cmpsb
sbb
dec
outsl
sub
sbb
sysexit
mov
add
adc
daa
sub
add
xlat
mov
sbb
shlb
cmpb
add
add
add
nop
jns
push
add
scas
es
push
negl
xlat
inc
mov
and
inc
add
add
add
in
iret
loop
pop
lcall
mov
sbb
imul
add
imul
push
sub
add
add
add
or
push
push
pop
popf
and
or
mov
enter
std
imul
call
add
std
mov
jge
popa
repnz
jg
sbb
jno
add
adc
repz
xchg
or
add
add
add
lock
push
pushf
mov
xchg
dec
and
xchg
jno
push
test
jnp
mov
sub
add
add
xor
stos
mov
mov
gs
xor
jmp
cmp
js
outsl
jp
loopne
mov
cmp
adc
arpl
test
jns
fwait
mov
inc
cmp
and
fs
addr16
lock
lcall
mov
inc
mov
mov
xchg
jo
mov
adc
fwait
inc
add
add
shl
call
add
push
inc
mov
push
xchg
mov
loopne
sti
pop
mov
push
add
push
je
mov
add
lahf
cs
iret
add
add
add
sbb
cmc
movsb
shlb
ja
xchg
daa
js
mov
cltd
and
mov
add
add
scas
xor
add
mov
inc
nop
mov
mov
je
cmp
pop
xchg
jnp
out
xor
movl
insb
add
add
inc
dec
mov
add
insb
mov
cwtl
jmp
xchg
aam
add
add
add
push
icebp
dec
cmp
andb
jno
clc
lea
aaa
aaa
or
rcl
inc
dec
add
add
lret
stos
mov
out
ljmp
aad
jo
add
add
jne
js
pop
dec
or
push
pop
mov
int
fsts
aam
adc
pop
sbb
popa
mov
mov
add
add
xorl
adc
mov
cmp
or
pop
cmpsb
les
sub
add
add
jge
push
jnp
mov
dec
xor
mov
or
add
add
scas
pop
in
lret
cmp
push
mov
or
add
add
xor
jle
test
dec
adc
adc
fsubp
int3
or
add
add
cltd
xor
fstpt
xchg
jge
rorb
adc
adc
xchg
pop
fnstcw
popa
int
shr
movsb
sbb
add
fldcw
add
add
stos
mov
jmp
add
sbb
fisubrl
add
add
cwtl
push
xor
cmc
push
add
add
add
add
or
add
or
add
add
add
add
dec
sbb
sub
mov
inc
jge
mov
xor
add
add
add
add
mov
pop
mov
stos
add
movsl
push
sub
add
imul
mov
add
add
push
pop
pushl
stos
xchg
and
icebp
mov
jae
push
cltd
pop
fsubl
push
pop
scas
subl
adc
mov
push
lcall
jl
das
sbb
int
xchg
pop
mov
adc
add
add
scas
push
pop
in
lock
pop
adc
dec
add
add
aad
sbbl
adc
outsl
out
test
mov
call
jo
aam
in
das
mov
sub
push
test
push
es
das
ret
xchg
mov
push
push
and
dec
or
addb
xchg
imul
scas
test
mov
mov
arpl
mov
movsb
scas
push
gs
jmp
pop
adc
rcrb
ljmp
add
pop
stos
adc
rol
dec
xchg
in
xchg
mov
inc
sbb
dec
add
add
popf
jns
cmp
push
fisttps
mov
mulb
dec
mov
xor
xor
cli
jb
inc
inc
add
add
dec
add
add
jns
orl
adc
cwtl
popa
sbb
lods
dec
jp
pop
ds
add
add
add
fisttpll
add
test
add
idivb
pop
ljmp
jp
mov
test
add
sub
add
add
ficomps
push
add
add
int
sbb
js
cmp
ret
pop
les
mov
mov
dec
sub
repnz
add
ret
adc
mov
inc
mov
dec
icebp
out
jb
sbb
add
add
mov
in
mov
inc
fistps
dec
xchg
scas
cmp
test
popa
adc
sub
sbb
mov
push
cmp
cltd
pop
push
mov
jecxz
mov
and
mov
add
adc
xor
push
cs
dec
add
add
addr16
adc
mov
mov
xor
mov
pop
mov
je
popa
adc
add
add
mov
ds
pop
pop
xor
add
add
adc
adc
add
add
repnz
xchg
stos
lret
loope
add
add
fcoms
xor
mov
jle
or
test
lock
cld
inc
mov
test
add
or
push
xchg
inc
mov
cwtl
outsb
imul
into
dec
aaa
movsb
dec
jae
and
mov
and
add
add
inc
enter
dec
add
add
and
repnz
inc
add
add
pop
outsb
and
add
cs
sbb
jp
cwtl
mov
jb
xchg
aad
enter
fsubrl
mov
add
cmp
xchg
jo
or
add
add
add
add
add
add
mov
fists
xchg
mov
fmul
mov
add
into
pop
push
leave
imul
sahf
mov
or
add
add
mov
or
hlt
or
pushf
loopne
mov
sbb
adc
or
xchg
fcomps
add
add
add
nop
mov
and
add
add
and
add
add
inc
mov
fwait
sbb
xchg
ds
xchg
push
loopne
hlt
mov
inc
sbb
jecxz
movsb
nop
aas
inc
push
flds
jmp
add
add
add
add
fsts
faddl
add
add
dec
movsb
push
mov
mov
hlt
cmp
add
and
mov
aaa
ljmp
out
in
jecxz
js
pop
sub
xor
jnp
dec
cmp
dec
mov
ret
enter
in
or
nop
push
and
popf
adc
ret
ja
stc
cltd
sbb
add
mov
inc
iret
inc
xchg
movsb
cmp
std
scas
sbb
daa
push
inc
std
add
jae
pop
sub
in
fcoms
popa
ss
lods
call
je
lea
cmpsb
dec
push
inc
add
add
mov
add
add
sub
scas
xor
xchg
rcr
pop
push
xchg
jmp
cmp
xor
std
mov
lret
pop
xor
add
inc
test
or
add
add
repz
mov
add
add
sub
add
add
addr16
enter
xlat
ljmp
jl
setb
mov
mov
dec
cmp
aad
mov
outsl
punpckhbw
add
add
xor
jl
sbb
lds
mov
nop
xchg
lcall
pop
push
push
repnz
add
add
enter
mov
fs
outsb
lcall
faddl
movl
mov
loope
xor
sarb
or
add
add
xor
mov
add
add
xchg
shll
int
stos
cmp
inc
add
add
mulb
mov
add
lock
xor
pop
mov
or
add
add
mov
pop
out
insb
add
add
push
outsl
push
pop
sbb
cmp
dec
sbb
js
int
mov
mov
add
fistl
add
mov
xchg
mov
mov
jnp
loop
jge
sbb
lcall
mov
add
add
ja
mov
and
dec
pop
repnz
xchg
xchg
xor
xchg
in
adcl
arpl
shlb
scas
mov
bound
cmp
xor
add
fucom
ljmp
std
adc
xor
aaa
jno
cmp
pop
pop
jbe
pop
je
add
add
add
mov
sahf
pushf
repz
sub
push
sub
std
jg
xor
xor
lds
lds
xchg
ljmp
jge
fisttps
arpl
rorb
sub
add
add
add
es
sub
add
add
add
add
add
add
scas
outsl
pop
std
mov
cmp
add
add
shrl
sti
int3
xchg
ret
xor
mov
push
iret
xchg
jmp
mov
aas
xchg
fidivrs
cmp
and
lods
fstl
xorl
sbb
call
enter
mov
out
mov
lods
je
xchg
hlt
out
pop
sarl
jo
sub
add
add
add
add
add
and
rclb
cwtl
aaa
daa
movsb
les
xor
add
or
add
add
xchg
stos
dec
movsb
mov
add
arpl
jecxz
js
jbe
fisttpl
cmp
xor
add
fwait
mov
ret
or
out
inc
das
jmp
cmpsl
sbb
in
test
mov
adc
and
cmp
jl
aaa
pop
mov
add
xor
inc
les
add
add
movsl
fxsave
jmp
add
add
in
cmc
dec
daa
or
add
add
fimull
outsl
cs
adc
out
clc
xchg
adc
lret
lods
inc
or
js
test
xor
popf
out
xchg
les
push
loope
mov
dec
jle
and
add
add
add
add
mov
lret
in
rolb
add
add
mov
sub
mov
inc
pop
push
add
sbb
pusha
mov
mov
add
add
lcall
aaa
lods
mov
arpl
out
xorl
mov
mov
add
add
aam
je
fwait
movsl
mov
mov
adc
add
xchg
pop
insb
mov
add
add
push
aam
inc
mov
mov
add
add
nop
dec
mov
dec
movsl
js
add
add
dec
sbb
jg
fadds
add
add
call
adc
lret
add
add
gs
jp
push
or
mov
jb
dec
test
add
jns
mov
mov
xchg
shrb
scas
popa
stos
aaa
sub
add
add
pop
and
pop
jle
add
add
add
mov
add
add
add
dec
add
add
add
push
mov
or
mov
lahf
xor
add
add
mov
push
sti
mov
add
subb
imul
ret
jns
dec
pop
adc
ds
inc
ljmp
sbb
mov
mov
cmp
aas
jge
or
lock
mov
shr
imul
cmp
out
sbb
imul
jge
imull
mov
into
movsb
push
pop
xor
aas
sbb
sbb
out
out
mov
add
add
xor
ret
add
mov
cmp
add
add
push
ja
sub
add
add
mov
mov
pop
jmp
lods
sub
dec
imul
xchg
ljmp
jns
jb
dec
mov
jb
rorb
inc
mov
pop
mov
inc
insl
add
cs
arpl
xor
jno
enter
std
pusha
add
add
inc
pop
jge,pn
loopne
push
xchg
repnz
add
add
add
inc
das
push
repz
gs
je
jl
jl
adc
add
in
add
add
lcall
jne
mov
pop
sub
add
add
mov
push
jns
sub
pop
inc
lar
loop
xor
cmpsl
pop
or
test
cmp
test
adc
sbb
add
lret
mov
loop
add
add
cmp
inc
add
mov
jae
xor
push
imul
int3
pop
pushf
xchg
mov
adc
mov
test
sub
fcmovbe
inc
pushl
push
mov
sti
test
movsb
imul
jne
jle
adc
mov
jns
jmp
sbb
sub
add
add
and
sub
add
add
ret
js
sub
aam
test
repnz
jle
and
pop
test
xchg
adcl
insb
mov
out
push
sub
add
pushf
push
ficomps
and
lods
pop
fisubrs
add
add
sbb
add
add
add
mov
dec
xor
add
xor
rorb
cmp
jecxz
and
xor
xor
mov
aaa
lock
add
add
add
add
add
sub
lahf
es
popf
pop
lea
add
add
mov
lret
sub
push
dec
jne
test
add
add
jecxz
jl
mov
adc
ljmp
add
test
scas
dec
add
add
push
outsl
mov
repnz
add
add
mov
test
jp
push
ret
xchg
and
mov
add
add
faddl
jge
xchg
aad
mov
add
add
push
nop
pop
sti
adc
adc
push
test
test
push
dec
mov
loope
lock
or
ss
mov
add
add
int
dec
and
add
add
test
sbb
clc
in
ljmp
adc
orb
rcr
into
jmp
mov
in
out
xor
mov
and
xchg
mov
add
add
orl
outsl
mov
xor
jg
ret
sub
loopnew
or
add
add
or
add
add
mov
mov
cwtl
lcall
pop
pop
orl
add
add
add
cs
xor
iret
out
push
aas
out
cmp
cmpsb
and
fldenv
sub
cli
xchg
lods
cmp
add
jecxz
mov
das
lret
les
scas
xchg
fwait
adc
push
out
dec
xchg
loop
add
sbb
push
push
movsb
popf
inc
sub
scas
sarl
xor
rcl
pop
adc
mov
test
add
add
jecxz
jbe
dec
test
mov
dec
pushl
icebp
xchg
addr16
xacquire
sbb
stos
cmp
xchg
push
rol
das
into
sbb
jge
xor
test
jp
mov
add
adc
pop
daa
mov
mov
adc
sbb
test
add
stos
pop
repnz
cmp
mov
test
xchg
xor
sub
add
add
cmp
or
js
xor
daa
ds
out
cltd
dec
sbb
negb
pop
dec
add
add
sub
xor
add
dec
jb
mov
add
add
mov
jnp,pn
adc
add
add
add
sub
add
add
or
in
add
lret
ja
and
mov
test
push
out
mov
sti
xor
icebp
sbb
mov
mov
call
jecxz
jecxz
dec
add
add
arpl
sbb
mov
inc
and
adc
mov
pop
loopne
scas
cld
repz
sbb
aas
mov
mov
loope
and
inc
mov
mov
mov
scas
dec
mov
test
clc
inc
mov
mov
mov
pop
push
ss
test
push
seto
fidivs
add
add
push
xor
dec
push
or
rorl
add
pop
mov
mov
fwait
mov
mov
pop
or
in
push
sub
add
add
xor
add
jae
cmpsl
ja
mov
test
sbb
cmp
and
lds
adc
mov
and
add
add
pop
pop
repnz
xor
push
rolb
xchg
enter
cwtl
xchg
inc
mov
xchg
mov
lods
adc
cwtl
mov
and
ud0
add
add
and
out
cs
fcom
in
cs
aam
mov
lret
push
or
enter
mov
notl
jns
push
clc
jg
mov
or
fcoms
outsb
or
cmp
inc
jmp
movsb
popa
mov
mov
mov
ja
jae
add
add
cmp
sub
cmc
fs
outsb
sti
or
xor
aad
xchg
mov
cmpsb
rcrl
push
sbb
add
add
shlb
add
cmp
xchg
mov
ret
cmp
cmp
xchg
lcall
int
dec
sti
add
add
add
test
add
add
inc
mov
dec
mov
mov
mov
das
leave
xchg
mov
shlb
bound
or
add
add
lock
iret
xor
insb
add
add
jno
xor
repz
add
add
mov
scas
fmul
mov
adc
xor
mov
mov
cmpsl
and
xchg
xchg
movsb
and
pop
mov
mov
xlat
ret
or
add
add
add
add
add
int
scas
and
jle
andb
sbb
mov
jge
jmp
stc
das
xchg
out
mov
sbb
pushf
call
mov
movsl
add
out
repz
cmpsb
mov
shll
add
add
add
lcall
mov
xlat
xchg
xor
cmp
mov
jns
fsubp
imul
mov
fsubrl
aas
mov
aas
imul
jae
pop
pop
mov
mov
aas
aam
call
daa
dec
mov
jbe
cmp
andb
add
jae
mov
inc
mov
fwait
mov
mov
loopne
dec
pushf
outsb
sbb
mov
icebp
loopne
xchg
cs
add
add
scas
out
jns
js
hlt
fidivl
sub
mov
test
aas
mov
test
not
addl
cmp
add
imul
stc
xor
add
out
ja
pop
or
xchg
dec
insl
cmc
xchg
cmpsl
xor
mov
jne
stc
cs
dec
sahf
adc
dec
cmp
push
or
add
add
fwait
scas
push
aaa
pop
push
jl
fadd
stos
add
add
push
sub
add
add
lock
das
lahf
add
mov
in
add
add
pop
fwait
in
les
mov
inc
adc
in
ss
lock
mov
add
add
add
or
add
lds
loope
mull
mov
mov
mov
jno
inc
sarb
lea
add
add
pop
ds
mov
into
mov
add
add
stc
xor
pop
es
mov
lret
sub
push
add
les
add
jns
sbb
xor
arpl
add
call
les
push
arpl
mov
shlb
add
mov
add
incb
add
add
add
or
add
add
fnstenv
push
mov
pop
xlat
jns
lcall
jecxz
mov
add
add
fs
cmp
add
add
ljmp
divl
or
add
cmp
addb
add
mov
stos
jns
mov
add
out
out
in
popa
inc
mov
test
lret
es
jb
fidivs
add
adc
xor
push
pop
out
imul
inc
loope
cmpb
pop
stos
rcl
mov
mov
adc
lock
mov
and
not
or
add
add
dec
adc
jmp
add
or
test
testl
add
xchg
mov
add
add
lds
mov
inc
and
add
add
mov
add
push
sbb
mov
shrb
add
add
inc
add
add
jl
test
xchg
add
lods
rolb
mov
psraw
xchg
ret
inc
vmaxpd
mov
add
add
add
in
pop
cmp
dec
loop
and
xchg
sbb
mov
add
add
lea
rolb
xorl
jbe
shl
sti
fcompl
or
mov
fdecstp
and
fimull
bound
sti
mov
xchg
mov
cmpb
loopne
push
push
sbb
dec
sub
js
pop
jle
popa
gs
icebp
jge
push
sahf
push
sub
subb
xchg
int3
adc
mov
mov
out
sbb
add
int3
mov
imul
mov
inc
xchg
push
xchg
pusha
mov
adc
sbb
in
xchg
mov
addr16
inc
mov
mov
dec
add
add
ret
jne
or
insl
cltd
fdiv
dec
add
add
aam
scas
addb
xor
push
movsw
mov
or
repnz
add
add
dec
push
xchg
sbb
mov
mov
mov
mov
mov
add
out
movups
cmp
push
jbe
repz
aaa
call
add
xor
add
adc
inc
dec
mov
cmp
sbb
fisttpl
inc
sub
mov
scas
jo
out
stos
inc
add
add
add
add
sbb
adc
mov
pop
rdpmc
arpl
scas
pop
mov
out
or
in
mov
xchg
dec
sbb
mov
cmpsb
push
mov
push
pop
cld
punpcklbw
sbbb
dec
in
in
push
addb
mov
xor
sub
lret
gs
xchg
mov
mov
add
add
ljmp
loop
and
sub
adc
test
test
mov
hlt
jecxz
dec
faddl
pop
add
xchg
out
outsl
pop
dec
je
aam
adc
add
add
jo
cmc
mov
pushf
or
mov
shlb
add
add
pop
jne
push
ret
stc
or
mov
mov
add
add
movb
and
add
add
repnz
out
jle
andl
add
outsl
lds
mov
ffreep
dec
lea
mov
inc
add
add
xchg
add
mov
mov
push
unpcklps
sbb
lock
div
pop
push
fbld
dec
mov
cmpsl
push
sbb
push
mov
adc
lock
data16
out
fdiv
lea
je
mov
mov
add
add
jge
xchg
mov
cmp
dec
scas
dec
scas
jp
dec
dec
xor
aaa
mov
add
add
dec
arpl
add
add
mov
fbld
or
or
iret
xchg
cmpsl
mov
int3
sub
add
add
add
add
cltd
or
jne
int
push
fisubrl
fsts
adc
inc
and
gs
push
js
mov
mov
adc
add
push
add
or
fs
pop
pushf
fcoml
jmp
popf
lret
loope
push
mov
xor
or
movsb
fbstp
mov
cltd
adcl
push
add
add
add
pop
xor
test
std
pop
ljmp
sahf
cli
dec
call
aas
jne
xchg
pop
inc
ret
push
add
add
lock
mov
xchg
lods
sbb
jo
add
mov
ljmp
add
ja
push
mov
cld
sub
add
add
pop
jnp
mov
push
imul
sbb
ds
add
add
incb
and
mov
lcall
cmc
mulb
jl
loop
movsb
shrb
add
add
add
add
daa
ljmp
push
into
jp
jl
dec
das
bound
adc
cli
jnp
cmpsb
xchg
xchg
push
add
add
add
sarl
in
push
fists
xchg
orb
and
add
add
sub
and
lods
daa
and
mov
or
add
add
ret
shrl
idivb
inc
mov
push
sub
add
pop
into
fidivs
lahf
int3
pop
data16
mov
push
int3
cmpsl
lret
jecxz
sub
enter
jnp
pop
push
in
iret
je
xchg
fcoms
stos
xchg
add
add
add
loope
cltd
insb
add
add
insb
add
add
test
pop
pop
shlb
mov
mov
outsb
outsb
sbb
sub
mov
add
add
lock
stos
popa
dec
fwait
pop
loop
push
in
and
add
add
pusha
mov
mov
sarb
cmpsl
mov
push
int
in
mov
add
addb
pop
mov
inc
pusha
add
add
xor
rorl
add
add
add
mov
adc
pop
jne
std
xchg
out
lods
sbb
dec
adc
add
jmp
add
movsl
inc
and
add
add
mov
sub
in
fwait
popl
add
xor
movsb
pop
mov
add
add
inc
add
add
gs
dec
add
add
inc
add
add
mov
clc
in
add
add
dec
data16
or
add
and
stc
push
or
test
jb
pop
out
lret
cmp
mov
repz
imul
lret
or
mov
mov
cmp
jg
jo
out
push
pop
jno
dec
xor
pop
pop
add
xchg
mov
inc
inc
add
add
mov
outsb
inc
js
rcr
or
dec
in
outsb
pop
inc
and
add
negl
icebp
mov
dec
sub
add
add
xor
cmpsb
xor
mov
sarb
cmc
adc
movb
inc
fcmovb
cmp
hlt
add
add
add
inc
mov
cli
pushf
lcall
das
mov
shr
mov
out
movsl
mov
dec
xchg
mov
mov
mov
mov
es
add
add
aas
sbb
add
add
mov
inc
add
add
popf
adc
add
test
pop
adc
lret
shl
cmp
sarb
js
arpl
outsl
xor
or
lods
jb
cmp
pop
lock
insb
mov
daa
pop
mov
dec
mov
mov
shll
add
pop
rorb
mov
movsl
ds
inc
cmp
ljmp
outsb
jnp
inc
or
mov
cwtl
pushf
xchg
dec
in
inc
dec
pusha
add
add
cmp
int
mov
cmp
aad
pop
fcompl
fnstenv
pop
ja
sub
add
add
cmpsl
xor
add
xchg
stc
inc
push
stos
mov
in
dec
xchg
popf
and
add
add
scas
cmp
lret
test
out
or
ja
inc
js
ss
imul
outsb
push
sbb
mov
add
mov
mov
dec
ds
hlt
mov
add
push
push
xchg
je
std
mov
ja
or
add
add
cmp
push
xchg
insl
xor
bound
jnp
jns
dec
push
scas
insl
or
movsl
add
add
mov
jmp
es
jne
sub
int3
mov
out
and
add
add
fidivrl
add
hlt
jae
fs
jp
or
add
add
jbe
mov
sbb
pop
nop
je
cmp
fidivrl
push
xchg
xchg
cmc
mov
add
add
add
add
movsb
loop
mov
ret
mov
ja
adc
nop
mov
sbb
inc
lahf
mov
addr16
cmp
jns
loop
push
popf
mov
ret
dec
mov
aam
ja
xchg
ret
dec
mov
gs
add
add
jl,pn
pop
pop
mov
xchg
and
add
add
jl
and
imul
ficompl
xchg
add
xchg
outsl
jne
in
sahf
das
jne
inc
pop
xchg
pop
inc
rcrb
or
lret
pop
xchg
test
call
xlat
stc
push
repnz
into
insl
adc
daa
ficoml
mov
aas
je
and
sub
add
add
adc
xor
xor
pop
int
mov
lahf
in
andb
ds
or
add
add
push
xchg
inc
add
add
inc
test
jl
add
add
daa
xor
xchg
shl
das
cmp
cltd
push
iret
daa
pushf
mov
mov
add
add
data16
pop
or
add
push
ret
lret
add
add
movsb
adc
adc
ficompl
jge
popf
cwtl
stc
shlb
stos
lods
js
or
addr16
mov
outsl
insb
add
add
dec
sbb
int
pop
push
insb
mov
pop
sahf
lods
pushf
out
test
and
mov
add
fdivrl
into
push
hlt
xchg
jmp
loope
into
jecxz
sub
inc
adc
call
add
add
add
lret
jge
test
jl
out
loop
sub
daa
inc
cltd
sub
add
add
mov
shl
cmpb
mov
pop
push
push
adc
stos
add
add
ss
push
ds
add
add
add
push
fwait
in
add
add
je
xchg
insl
cwtl
jno
int
in
or
add
add
imul
add
add
aaa
cmp
aam
push
cmp
movsl
andl
pop
sub
or
add
add
rcrl
mov
lret
push
xor
add
add
push
sbb
stos
cltd
scas
cli
insb
mov
mov
xchg
jg
scas
sub
mov
shll
or
aaa
loopne
jae
xchg
mov
add
xor
add
mov
push
out
push
pop
jnp
icebp
mov
mov
jno
arpl
mov
aas
sub
add
add
xlat
push
add
lods
insb
add
add
and
in
int3
shrb
push
notb
add
add
push
bound
scas
pop
cmp
adc
js
mov
add
xor
add
ret
sbb
insl
inc
in
dec
or
stos
test
jecxz
mov
lods
xorl
add
push
cld
sub
cmp
ror
mov
mov
arpl
adc
push
aad
addr16
mov
add
xor
gs
add
add
xchg
or
sbb
mov
roll
xchg
xor
push
jp
cltd
aam
mov
push
cltd
xor
inc
adc
adc
add
xchg
call
popa
lock
jg
xchg
xor
stos
push
bound
shr
sbb
mov
popf
jmp
cmp
push
and
xor
lahf
jns
idiv
mov
add
hlt
push
sahf
movsl
jmp
push
notb
and
cmp
cmpsl
inc
cmp
jae,pt
or
add
add
add
cmp
scas
sub
pop
xchg
imul
das
ja
cmp
add
add
fsubrs
mov
jno
add
add
aas
or
lahf
jns
jnp
mov
lds
pop
fnstenv
cli
inc
and
pop
cltd
stos
jne
jle
mov
rorb
xchg
xchg
cmp
mov
jnp
out
ret
ljmp
xchg
hlt
lods
push
test
add
sbb
mov
add
add
cmp
cmp
add
add
add
dec
mov
inc
xchg
int
inc
xchg
fcom
fiadds
data16
movq
sti
mov
movsl
sub
loope
adc
mov
or
add
add
sbb
jbe,pn
gs
imul
add
sbb
aam
insl
push
or
notl
cmp
add
add
add
add
jnp
add
add
cmc
adc
cmc
fcoml
cltd
pop
mov
xchg
cmp
adc
add
insb
add
add
jecxz
int
cmpsl
dec
jae
and
ret
mov
and
sbb
pop
dec
fldenv
jne
mov
jbe
test
inc
sbb
js
cmc
or
cmc
sbb
mov
add
movsb
mov
call
pop
iret
adc
xchg
aam
arpl
ss
pop
and
add
add
pop
mov
pop
gs
out
mov
xor
cmp
dec
ret
cmc
pusha
add
add
jmp
arpl
das
dec
add
add
fbstp
sbb
mov
jno
imul
dec
push
stc
inc
fidivrs
fcoml
pop
fwait
in
movzbl
stos
nop
scas
fwait
ds
out
dec
in
push
mov
cld
mov
mov
les
adc
imul
push
pop
out
add
cltd
pop
add
lret
pushf
push
rcl
inc
or
add
add
data16
add
test
xchg
sub
pop
daa
jmp
dec
jmp
outsl
jmp
add
insl
sbb
fcompl
cld
dec
xor
add
add
jp
test
aam
cmp
nop
and
jns
push
int3
shl
mov
push
hlt
cmp
add
add
push
xchg
sub
out
std
and
insl
stc
out
and
dec
mov
inc
dec
pushf
int
imulb
dec
fxch
sub
pop
mov
sub
add
add
push
push
fdivrs
ret
add
add
add
repnz
jmp
mov
das
jnp
les
fnstcw
cli
sub
add
add
push
ljmp
jns
add
add
cmp
shlb
adc
shrb
push
sub
mov
sbb
and
or
cmc
adc
sub
mov
jno
das
sbb
mov
mov
int3
dec
add
add
and
add
add
xchg
or
mov
ret
ret
cmp
fistps
icebp
sarl
or
add
add
add
add
stos
and
add
add
adc
gs
pop
loopne
pop
pop
push
ljmp
mov
or
add
add
lea
add
add
add
clc
xor
add
shll
add
add
cli
inc
jnp
mov
sub
lcall
xor
sbb
jno
cmpsb
push
add
add
lods
fldt
mov
jmp
add
add
pop
fsubrs
outsl
in
cmp
jns
dec
cwtl
movsl
and
push
sbb
pop
jne
aaa
sbb
or
add
add
add
mov
mov
cmp
add
add
add
add
add
add
xchg
jno
xlat
sbb
in
fbstp
das
js
sbb
add
add
sahf
pop
pop
lods
dec
add
add
scas
push
or
add
add
enter
inc
cmpsl
stc
inc
mov
xchg
enter
test
fcomps
mov
inc
addr16
pop
fildll
add
adc
sub
sub
add
add
jl
push
cli
rolb
mov
lcall
mov
scas
aam
pop
lods
adc
cltd
cmp
test
jl
pop
jbe
xchg
andl
clc
add
mov
add
fsubrl
add
add
add
rorb
cmp
lahf
push
ljmp
cmp
jns
fstpt
into
xlat
dec
in
loope
xor
xchg
sub
add
add
les
sbb
pop
repnz
jge
mov
add
add
lds
sub
mov
fwait
jne
jo
test
push
imul
jne
sub
mov
add
pop
pop
or
xor
in
lea
add
add
mov
add
add
ss
cmp
xor
adc
add
add
push
push
ja
into
scas
or
out
lret
stos
mov
jmp
hlt
add
add
add
pop
dec
ds
mov
jle
lods
mov
outsb
outsb
sbb
das
sub
pop
xchg
popf
idivb
adc
dec
aad
mov
mov
pop
int3
xchg
inc
pop
ja
mov
add
add
repz
lods
cmp
dec
pop
fnstsw
xchg
cmp
pop
push
lahf
loope
mov
cmpsl
out
push
jae
lret
sub
add
add
stos
andl
test
xor
add
mov
mov
cmp
loop
fiaddl
pop
fdivrl
jns
shll
add
add
fld
loope
leave
popf
dec
jg
jo
add
sub
add
add
aam
cmpsb
jmp
nop
in
or
push
rol
mov
push
setp
mov
pop
xchg
repz
add
add
mov
mov
add
add
and
in
fidivrs
mov
mov
mov
in
jl
mov
pop
cmp
adc
or
mov
jg
or
add
add
xor
bound
or
add
add
mov
add
add
arpl
inc
push
adc
xlat
cmp
mov
pushf
fisubl
add
add
sub
ljmp
loopne
mov
mov
shrb
inc
add
add
das
push
shrl
add
add
pop
shrb
push
adcl
dec
clc
scas
cmp
ret
mov
adc
scas
pushf
into
pop
rclb
sbb
insl
divb
jp
mov
shrl
cld
inc
insb
mov
adc
loope
imul
outsl
push
outsb
mov
fstl
addr16
push
aad
sbb
adc
mov
fnstenv
and
push
imul
add
add
in
sbb
fists
mov
xchg
hlt
xchg
daa
mov
add
add
add
sub
add
add
ja
jb
dec
sbb
in
jae
pop
sub
ret
push
adc
aas
jg
push
add
fcom
pushf
test
push
jo
cmp
aaa
out
in
jecxz
mov
in
ret
icebp
outsb
pop
push
inc
add
add
shlb
add
dec
jle
cli
in
push
stc
inc
adc
scas
aas
lock
xchg
adc
xor
add
add
rorb
into
ret
ds
mov
sbb
adc
xchg
inc
int
leave
idivl
add
add
imul
pop
fwait
mov
xchg
and
add
add
bound
mov
sub
add
add
idivl
jge
sub
add
add
lret
scas
fstpl
add
int
punpckhbw
push
or
add
add
mov
mov
and
jmp
fldcw
sub
jge
or
mov
into
sub
in
mov
add
add
add
add
mov
sub
add
add
add
mov
pop
pop
adc
add
add
dec
push
jle
ds
outsl
out
jo
cmp
push
fwait
fwait
int3
xchg
jns
mov
popf
mov
imul
test
or
dec
dec
das
les
cmp
cmp
sahf
and
cltd
push
lods
rorl
add
add
cwtl
ss
pop
gs
mov
add
xor
jne
inc
daa
in
dec
clc
fiadds
int3
popf
inc
jl
sarb
cwtl
inc
es
cmpsb
jmp
fsubr
lahf
lcall
add
add
sti
shll
add
add
xchg
testb
or
mov
dec
sarb
out
mov
and
in
std
mov
adc
ret
sub
ja
xor
stos
icebp
sub
add
add
add
add
cmp
outsb
adc
push
lds
pop
or
loop
das
jo
orl
sbb
in
and
inc
mov
fmuls
push
jmp
xchg
jb
adc
push
sbb
add
add
out
mov
mov
mov
add
add
and
add
cmp
xor
add
test
in
je
out
xor
mov
xchg
subl
imul
jle
mov
arpl
insb
add
add
in
popa
scas
out
test
repnz
jo
inc
mov
cmc
dec
lret
das
sbb
jne
clc
in
arpl
inc
das
loopne
int
push
scas
nop
dec
add
add
js
or
lahf
popa
aam
cmpsb
xchg
fcoml
xchg
and
add
add
pop
and
add
add
mov
insb
add
add
cmp
lea
mov
add
add
cld
aad
add
add
les
cmp
jae
shrb
jl
imul
inc
jo
aaa
daa
loope
int
pop
pop
icebp
inc
outsl
dec
das
xor
call
js
sbb
rcll
inc
mov
inc
pop
cmp
arpl
add
add
addr16
mov
outsl
sar
adc
scas
pop
lock
sub
add
add
mov
or
mov
add
add
mov
cmc
rorl
adc
test
add
add
sti
inc
rcrl
jg
mov
add
add
aaa
pop
ret
rolb
add
sub
mov
push
xchg
inc
xchg
subb
sub
and
sbb
or
push
sub
pop
in
sub
test
mov
negb
dec
xor
mov
xlat
sti
es
add
add
xchg
cmp
push
outsb
inc
add
add
testb
adc
fnsetpm(287
pop
mov
mov
add
add
icebp
inc
add
add
mov
pop
push
xor
fwait
mov
lock
push
lock
lahf
mov
ret
in
xchg
push
push
rcrb
lods
std
orb
add
std
stc
lret
mov
hlt
cmp
fdivs
sub
add
add
add
add
add
add
fcoms
inc
add
add
xchg
dec
mov
cmpsb
movsl
push
xchg
mov
js
or
test
add
add
add
adc
push
mov
faddl
mov
lds
and
add
add
es
xor
add
lods
push
sub
add
add
adc
lret
fcmovne
lret
enter
pop
jge
xchg
pop
or
ja
jne
add
add
lods
dec
push
shlb
pusha
mov
cmp
inc
mov
nop
mov
orl
xchg
cmp
test
jp
out
add
jns
std
mov
out
jl
xchg
mov
adc
push
loop
outsl
ljmp
add
add
jae
fnstsw
and
mov
mov
mov
add
add
lds
lds
int
pop
pusha
mov
aad
add
add
add
push
mov
add
jb
mov
pop
adc
shlb
jmp
add
add
repnz
push
mov
jb
pop
or
inc
add
add
ljmp
inc
adc
mov
out
mov
out
lcall
mov
jle
ret
pop
mov
xor
arpl
add
out
inc
hlt
mov
add
sti
jecxz
dec
lods
sar
dec
ss
xchg
add
hlt
push
mov
add
out
lds
iret
add
inc
push
and
test
sahf
pop
adc
and
mov
aad
cli
je
cmp
lock
xor
into
sbb
pop
and
add
add
push
jns
imul
fidivrl
jmp
add
icebp
dec
mov
rorb
loope
and
add
add
out
dec
sbb
add
add
stos
xor
push
push
mov
rolb
fldl
jno
mov
add
add
mov
mov
mov
pop
mov
add
push
lock
fcoms
pop
and
in
push
fcmove
mov
dec
sub
or
add
add
xchg
xchg
stos
mov
or
add
add
dec
lret
add
add
mov
lea
mov
insb
add
add
jl
iret
adc
mov
inc
mov
mov
add
add
iret
ret
mov
add
lcall
in
stos
and
mov
sub
add
add
das
sbb
mov
mov
fs
xchg
ret
sbb
notb
add
fcmovnu
jo
inc
mov
inc
mov
clc
mov
inc
ficoml
cli
rclb
lds
or
sub
xor
mov
rolb
push
icebp
pop
pop
push
cmp
inc
std
mov
sub
xchg
or
mov
adc
adc
xor
add
mov
xchg
xor
pushf
cmc
icebp
sbb
push
bound
ds
dec
add
add
out
sti
xor
xorl
imul
add
add
lds
je
addr16
add
add
mov
mov
cmp
inc
adc
add
add
in
pop
repnz
imul
fisttps
mov
add
testb
add
add
movsb
cmp
jle
inc
cmpsb
sub
lds
xchg
push
rclb
mov
lock
pop
in
jnp
mov
int3
mov
mov
or
ror
fadds
push
insb
mov
lret
cmp
stos
dec
add
add
pusha
mov
mov
rclb
xchg
inc
xchg
dec
mov
and
inc
cmp
or
add
add
xchg
xchg
inc
push
mov
xor
imul
add
push
lods
fisttpl
sub
outsb
in
mov
insb
mov
mov
mov
push
idiv
out
or
add
sti
faddp
fldt
add
add
rdtsc
cmpb
xor
ss
out
and
dec
fmuls
mov
add
push
mov
sub
xchg
sub
push
jae
or
pop
mov
mov
orl
mov
mov
add
outsb
xorb
add
add
mov
repnz
aad
push
imul
fcmovnbe
mov
mov
cmp
insl
jnp
and
add
add
in
int3
sub
sub
add
movsb
xchg
jecxz
ljmp
mov
jbe
cmp
mov
dec
cmp
dec
add
add
sub
lods
sbb
push
inc
add
add
scas
loop
nop
push
in
lret
adc
adc
les
add
testl
mov
add
add
pop
jbe
mov
mov
es
mov
into
mov
push
pop
add
mov
icebp
iret
out
inc
xor
filds
add
imul
mov
add
sub
jmp
pusha
add
add
pop
and
push
outsb
pop
push
ljmp
daa
cld
pop
ljmp
mov
add
cmp
adc
dec
enter
add
adc
mov
in
cmpsl
mov
scas
sub
add
add
fsubl
add
add
jge
inc
add
add
repnz
lret
mov
push
fnstcw
mov
inc
adcb
push
sbb
mov
dec
jmp
cld
adc
bswap
bound
sub
add
add
negb
jmp
shlb
mov
stos
mov
mov
push
cmp
outsl
jg
sub
lods
mov
adc
call
mov
dec
add
add
cltd
inc
xor
int
dec
add
add
dec
nop
pushf
stos
pop
add
mov
add
add
add
add
lret
xor
pop
add
mov
mull
addr16
push
dec
mov
lahf
inc
scas
xchg
daa
mov
lock
jbe
out
repnz
fistps
in
pop
cmp
push
outsb
xorl
cmp
add
add
add
push
fnstenv
into
sub
icebp
sub
inc
adc
xchg
sbb
add
mov
test
repz
cmp
mov
dec
das
inc
sub
sbb
add
or
add
add
sub
add
add
pop
xchg
lock
pusha
mov
iret
jg
jl
push
xchg
xchg
rolb
out
sbb
xchg
std
dec
jo
lahf
rcl
sub
add
add
popf
nop
gs
pop
mov
rol
mov
cmp
add
add
sbb
add
add
pop
or
xor
xor
incb
rorb
add
add
add
cli
sbb
jbe
fldt
add
or
dec
adc
sti
adc
fmull
sti
lea
decb
add
add
iret
mov
push
shrb
cmpsb
dec
fcoml
mov
sub
xor
push
rolb
adc
test
mov
addr16
dec
add
arpl
mov
xlat
pop
stos
clc
out
push
or
add
mov
mov
add
add
sub
sbb
loop
mov
inc
mov
xorb
add
add
pop
mov
add
sub
add
add
enter
jo
mov
push
and
mov
test
push
push
xchg
adc
cli
mov
aad
roll
test
jl
mov
inc
add
add
adc
add
add
xchg
jl
out
mov
pop
bound
dec
add
add
dec
jle
lock
jne
nop
lret
sti
pop
cmp
loop
lds
mov
add
add
mov
xor
enter
pop
das
test
lock
inc
push
stos
mov
cwtl
jno
push
mov
das
push
adc
add
add
test
hlt
pop
lock
push
leave
shl
xlat
push
clc
test
imulb
sbb
dec
insl
xchg
enter
push
add
add
sahf
push
outsl
repz
cltd
fsts
enter
mov
add
shll
scas
sar
enter
loopne
pop
cmc
fdivp
inc
mov
movsb
in
or
addr16
mov
mov
out
ds
cmp
cmp
add
inc
jb
mov
jnp
arpl
inc
add
add
imul
add
add
or
mov
loopne
sbb
cmpb
cmp
popf
mov
mov
push
lods
test
pop
cmp
adc
jg
inc
fwait
or
add
add
inc
dec
cmp
pop
and
add
add
call
lahf
inc
lods
repz
xchg
imul
add
or
fistps
imul
addr16
movsl
inc
adc
add
add
data16
pop
xor
xchg
test
loopne
std
pop
shr
mov
add
add
in
rdtsc
xchg
data16
cld
mov
test
add
add
xchg
iret
add
add
cmp
mov
add
add
add
add
push
lahf
popa
xor
pusha
add
add
les
pop
or
add
add
add
jne
sub
jp
xor
scas
xor
cmp
lahf
or
add
add
xchg
sti
sub
add
add
int3
mov
aas
out
addr16
add
ror
sub
add
add
fidivrs
mov
push
out
test
cmpsl
or
add
add
mov
inc
mov
inc
mov
cwtl
das
addb
cmpsl
iret
sbb
adc
and
or
add
add
push
daa
imul
inc
das
call
cwtl
cmovle
shll
dec
in
cmp
test
mov
mov
push
je
and
imul
pop
lods
push
and
pop
movsb
fistpll
sub
add
add
int3
imul
cmpsb
mov
pop
dec
fwait
ret
test
sbb
jbe
ss
sub
add
xchg
andl
mov
sbb
mov
add
mov
test
arpl
adc
xchg
dec
add
add
add
lcall
xor
add
lock
loope
out
push
and
add
add
xchg
push
push
in
pop
jmp
jecxz
roll
add
add
aam
mov
adc
les
std
aas
xor
dec
xchg
jbe
imul
call
rorb
sbb
add
add
cmpsb
mov
or
add
add
repnz
out
sarb
and
add
add
jp
adc
clc
out
mov
clc
add
xchg
out
cmp
sub
mov
mov
push
pop
loope
dec
mov
mov
mov
add
add
add
lods
cmc
mov
sbb
and
dec
loope
sbb
push
das
inc
mov
mov
cmc
pop
jmp
add
mov
mov
dec
pushf
mov
call
add
add
popf
ljmp
dec
adc
das
add
pop
pop
gs
jb
inc
aaa
fcoml
mov
loopne
enter
add
add
xchg
mov
jmp
loope
popa
inc
add
add
mov
jo
xchg
fists
xchg
adc
xchg
mov
add
cwtl
iret
mov
decl
shrl
add
add
out
sbb
xchg
sub
ja
push
call
xor
cwtl
lahf
int3
cmp
lock
add
add
dec
test
xchg
push
dec
sbb
push
adc
add
jno
adc
add
add
jl
inc
add
add
pop
sti
sbb
repz
mov
xchg
push
cli
fnstsw
jge
aam
push
inc
jmp
cs
nop
dec
cmp
cli
mov
or
add
add
in
aaa
das
lods
pusha
add
add
xlat
outsb
inc
ds
add
add
jo
jge
cmp
pop
insl
lret
jecxz
shl
mov
add
add
insl
ffree
aas
pop
mov
add
add
mov
or
add
add
fadds
add
add
subb
add
fstl
sub
aad
aaa
cmpsl
cmp
push
shlb
fs
nop
popf
and
add
pop
leave
aad
stos
xchg
mov
push
mov
sub
add
add
xor
shrb
les
mov
out
xchg
lods
dec
nop
ret
pop
sub
sub
outsb
pop
lds
mov
jbe
mov
inc
sub
add
xor
add
cmp
xchg
push
lahf
inc
mov
add
add
std
inc
xor
and
add
push
test
add
add
cwtl
sarl
mov
mov
pop
lods
imul
jnp
data16
and
fcomp
adcl
add
sarb
pop
inc
out
mov
xor
dec
add
aad
ds
lcall
std
stos
pop
xchg
jbe
xor
xchg
mov
mov
jl
xchg
cs
pushf
add
add
jl
aad
test
sbb
les
sbb
lret
pop
repnz
sbbl
aad
mov
jns
push
pop
out
std
les
push
sti
aaa
daa
jb
into
xor
jl
add
add
add
add
test
mov
cmp
mov
cmc
pop
repnz
xchg
or
push
inc
into
cmp
mov
mov
add
rorl
mov
jg
jmp
add
pop
aaa
jnp
mov
xorl
ljmp
dec
mov
nop
cli
sbb
add
ror
mov
add
add
fcomps
add
pop
push
add
hlt
stc
inc
fildll
je
mov
pop
push
mov
jg
fsubrl
add
add
jb
cs
sbb
add
add
sub
add
add
int
mov
lds
mov
cli
and
fnstcw
mov
dec
push
leave
lock
mov
pop
dec
xlat
xlat
jb
add
add
sarb
sbb
add
add
arpl
add
into
outsb
pop
std
jb
mov
mov
dec
sbbl
and
or
add
add
lcall
aad
mov
xchg
ja
dec
or
scas
stc
pop
xor
addl
add
sbb
loope
std
sub
hlt
xlat
out
mov
fists
sub
mov
repz
mov
enter
out
lds
loopne
nop
push
jne
mov
dec
push
sahf
fldt
add
add
xor
sti
scas
inc
lcall
int3
lds
arpl
push
pop
add
xchg
test
mov
dec
pop
movsl
jle
adc
add
aam
mov
lcall
xchg
jge
add
add
push
pop
pop
ds
in
arpl
rol
cmc
pop
fistps
sbb
pop
mov
hlt
sbb
hlt
out
cmpsb
repnz
lahf
incb
and
in
sbb
add
movsl
xor
ljmp
lods
fbstp
pop
fmul
and
adc
add
add
jecxz
insb
mov
cmp
xchg
dec
es
adc
icebp
stos
inc
mov
mov
divb
xor
adc
int
gs
test
es
cmovg
lret
daa
and
jge
fcoms
xlat
push
mov
js
ss
daa
inc
inc
scas
and
push
lock
bound
sub
add
add
add
add
test
add
add
add
add
daa
xchg
inc
cmp
add
int
stos
lods
addb
test
xchg
rcrl
dec
mov
movsl
cwtl
mov
sub
add
add
iret
sbb
frstor
pop
jo
add
add
jg
into
mov
add
sbb
insl
in
negl
ja
lea
adc
sbb
aad
inc
add
add
add
add
in
mov
add
add
pop
mov
icebp
test
add
cwtl
bnd
das
mov
push
mov
cmp
mov
stc
pop
inc
adc
setns
adc
je
mov
sarl
fwait
icebp
arpl
outsl
xchg
cltd
jo
sbb
push
in
push
or
inc
sar
or
arpl
sub
imul
shlb
add
add
xor
mov
hlt
sub
add
add
data16
rorl
cltd
xchg
lods
jmp
jo
add
add
in
mov
sub
jno
dec
add
add
sti
xchg
fsubl
add
popf
or
sbb
add
xchg
add
add
add
adc
mov
add
push
mov
shlb
daa
add
daa
lea
mov
popf
movl
sti
pop
call
mov
xchg
mov
add
insb
mov
stos
roll
add
out
outsb
sti
std
stos
data16
add
add
dec
xor
imul
cmp
test
pop
loopne
jge
add
mov
popa
int
cmpsl
pop
or
add
add
repz
jle
mov
add
add
gs
push
into
jl
mov
xchg
dec
popf
jle
sub
and
or
inc
leave
cmc
cld
xchg
xchg
and
add
add
popf
popf
mov
std
stos
or
add
add
sbb
adcl
add
lds
inc
inc
testl
loop
ret
nop
out
mov
fstl
arpl
add
add
repnz
test
sbb
test
lahf
cmp
pop
push
add
push
jo
ret
inc
repz
sbb
mov
in
cmp
cmp
stos
sbb
mov
dec
mov
ds
inc
inc
adc
rcr
arpl
jle
shlb
mov
xchg
push
cmpsb
loopne
sbbl
mulb
hlt
sbb
out
rol
popf
fdivr
mov
jne
out
call
ljmp
add
add
mov
sbb
mov
push
xchg
loope
out
cmpsb
lods
dec
mov
xchg
les
add
add
je
popf
movsl
jns
inc
sub
add
add
jp
mov
push
shlb
loopne
or
in
adc
aaa
xchg
lahf
pop
iret
dec
mov
xchg
dec
sub
add
add
push
js
fwait
aas
sbb
fisttpll
add
add
addr16
push
xchg
lds
mov
add
ret
jno
xor
jge
rorl
pusha
mov
push
repz
push
js
mov
nop
mov
dec
add
add
sarb
repnz
leave
sbb
lock
dec
je
and
adcb
adc
loop
mov
lahf
mov
push
sub
ja
scas
and
xorl
loop
mov
or
add
add
mov
pop
mov
call
in
mov
mov
insl
push
ds
or
add
jge
xchg
dec
cli
or
popa
xchg
stos
mov
add
enter
cltd
sbb
rolb
add
add
adc
add
mov
inc
add
add
jne
mov
mov
push
jns
adc
hlt
sti
call
xchg
test
add
add
push
adc
xor
add
add
pop
and
pop
stos
cwtl
inc
ror
loope
movsl
sub
aam
adcb
icebp
adcb
jle
inc
add
add
xlat
outsb
xchg
outsb
add
mov
inc
add
add
mov
sahf
mov
xor
mov
movsb
mov
xor
add
add
adc
rcrl
insl
push
je
dec
test
mov
inc
add
sbb
rorl
add
fistpll
fwait
outsb
add
add
add
mov
push
shlb
cmp
cwtl
arpl
push
stc
pop
pop
in
push
sbb
add
lcall
cld
in
fmul
or
xor
lret
fcomps
add
add
add
push
mov
mov
sbb
call
mov
loope
aaa
outsl
sahf
unpcklps
pop
adc
mov
push
addl
mov
out
inc
icebp
mov
cmc
mov
cmp
xor
rorl
add
insl
pop
popa
repz
jl
movl
fwait
pop
faddl
or
add
pop
dec
js
push
mov
cld
jae
sub
in
push
lea
push
je
ja
mov
pop
mov
fstpl
add
add
pop
mov
jecxz
pop
inc
loop
or
add
add
push
mov
and
ss
addr16
sbb
mov
add
add
sbb
inc
add
add
cmc
mov
mov
insb
add
add
sti
mov
sbb
por
shlb
cmc
jae
test
jmp
mov
push
xchg
push
and
sbb
push
stos
mov
in
pop
mov
cmp
jl
outsl
lods
in
lods
movsl
leave
adc
add
add
and
repz
jl
xor
dec
inc
mov
push
mov
mull
jns
pop
sbb
stc
push
mov
add
add
jb
or
add
add
cmpsl
sub
cli
cmp
lcall
add
das
pusha
add
add
jns
iret
mov
fbld
outsb
xlat
push
scas
imul
mov
in
loopne
mov
adc
sbb
xchg
outsb
pop
sub
sub
inc
push
test
mov
add
add
adc
repz
enter
lret
scas
dec
in
xchg
cmpsb
stc
xchg
mov
push
pop
mov
add
popl
add
add
push
lods
adc
xchg
inc
and
add
add
and
add
xlat
out
mov
xchg
mov
jae
aam
imul
xor
pop
mov
and
add
add
xor
outsl
jo
subl
push
sub
icebp
loopne
pop
mov
aam
mov
shr
xchg
jnp
iret
dec
icebp
inc
pushf
ja
cmpsl
pop
mov
fisubs
in
int
jmp
sbb
lret
dec
or
ljmp
cmc
insl
popf
jae
fs
add
add
add
xchg
fcomi
and
add
add
sti
sub
add
scas
cmp
push
popf
xor
pop
push
mov
testb
add
clc
mov
push
filds
inc
mov
ds
mov
int3
cld
jle
loope
lea
sub
lock
mov
test
pop
aam
cmp
std
mov
out
rorw
outsb
xchg
mov
ljmp
push
push
nop
mov
and
add
add
pop
in
add
fnsave
hlt
std
sub
out
xchg
xlat
test
xor
add
add
dec
shr
adc
cmpb
mov
pushf
lcall
sbb
and
out
add
add
aas
lods
jb
scas
loope
fsubrs
cmp
mov
aad
push
mov
daa
test
lcall
add
in
mov
icebp
scas
adc
xchg
dec
add
add
or
popf
mov
jp
bound
fwait
daa
xor
pushf
adcl
lock
sub
test
testb
add
jne
lahf
mov
dec
mov
add
add
cltd
insw
sbb
mov
pop
lds
push
jnp
icebp
add
push
das
or
pop
cmc
mov
faddp
dec
jg
xchg
incb
mov
xchg
loop
movsb
lods
xchg
push
sbb
add
adc
add
add
lods
cmpsb
flds
mov
shll
scas
jge
xor
inc
ja
outsb
ret
dec
sbb
insb
add
add
fdiv
clc
das
enter
add
push
daa
pop
push
mov
lahf
jecxz
cmc
cmp
or
add
add
out
xor
rclb
jnp
aaa
push
loopne
add
add
pop
pop
in
mov
fimull
divb
add
add
aam
popf
mov
out
test
popl
add
sub
add
add
pop
push
shl
das
inc
stos
ds
push
xchg
push
ficoms
fsubrs
add
xor
add
adc
out
mov
push
mov
repnz
xor
ss
dec
mov
movsl
push
pop
lock
and
add
add
rclb
std
dec
add
add
mov
out
xor
jae
cwtl
sbbb
add
arpl
loope
mov
add
add
add
mov
add
jl
jb
sub
add
mov
test
add
test
add
add
add
shll
add
add
mov
mov
imul
inc
add
add
fldenv
sti
dec
add
add
jnp
shr
loope
and
int
cwtl
adc
ja
vmulss
push
mov
add
jmp
jo
popa
mov
xchg
dec
ret
jmp
add
xchg
jmp
jns
shrb
add
add
lock
add
fdiv
xchg
inc
push
inc
push
or
mov
mov
clc
or
add
add
push
sub
sub
add
add
add
fucom
rcrl
enter
jae
ffree
leave
xchg
mov
add
add
sbb
movsl
stc
fsubs
sti
jmp
popa
mov
add
add
dec
mov
push
jmp
cmp
rol
xchg
clc
cmp
add
xor
pop
cmpsb
mov
mov
fisttps
mov
mov
in
std
imul
mov
push
cmp
decl
icebp
in
mov
add
add
add
mov
and
add
add
leave
aaa
cld
cli
in
mov
aad
pusha
add
add
out
in
or
add
add
add
add
insl
jo
xchg
add
add
sub
add
add
dec
data16
sar
mov
dec
cmp
repnz
pop
imul
rclb
mov
nop
and
add
add
push
inc
add
add
mov
pop
enter
sti
adc
sbb
or
adc
popf
mov
pop
rcr
lods
dec
xorb
stc
cli
push
fs
add
add
clc
sub
mov
dec
mov
jae
inc
add
add
sbb
add
add
pop
sbb
aas
rolb
pop
sbb
imul
fcmovnb
jp
xchg
lret
ljmp
or
add
add
xchg
jbe
mov
jp
fwait
and
jno
add
add
cli
shl
je
ljmp
insb
add
add
scas
xchg
sarl
nop
rorb
add
jecxz
cli
xchg
xchg
push
ja
push
ja
push
add
fimuls
sub
add
add
aam
add
add
clc
and
add
add
xchg
pushl
mov
push
cmp
pop
pop
mov
and
ja
mov
cld
pop
jae
dec
add
add
and
add
mov
sti
andl
jo
and
add
add
xor
lods
push
lds
jl
xorps
pop
repnz
inc
ret
sub
add
add
cmp
sub
mov
push
mov
fldl
push
inc
xor
leave
jecxz
imul
or
add
mov
push
xchg
add
add
clc
pop
mov
sar
cmp
mov
call
mov
lea
dec
lret
add
add
adc
jmp
rclb
sarl
xchg
add
add
ljmp
add
add
add
or
mov
dec
add
stos
sbb
add
add
fistl
jae
es
pop
dec
xchg
sub
add
add
jno
dec
xchg
mov
adc
lea
jl,pn
or
add
add
loope
dec
cmc
test
ret
push
dec
cmp
cltd
pop
pop
lds
cmp
out
xchg
ficompl
hlt
sbb
outsl
jne
std
jmp
sahf
in
push
call
adc
pop
push
aaa
cmp
rorb
add
add
repnz
dec
mov
mov
add
add
hlt
mov
ret
sub
add
add
jp
sahf
insb
mov
shrl
insl
mov
mov
or
sti
rorb
sbb
fldl
add
add
sti
xor
aas
in
xchg
add
add
enter
lea
xor
inc
fwait
test
mov
add
mov
inc
inc
inc
fwait
or
arpl
jge
jae
or
mov
jo
stos
lret
pop
xchg
fistpl
sbb
push
cmp
cwtl
scas
int3
sbb
jle
cmpsl
incl
jle
idivb
push
leave
pop
add
add
add
add
add
inc
pop
pop
push
mov
xchg
stos
movsb
mov
test
lcall
rcll
inc
icebp
pusha
mov
adc
xchg
and
add
add
add
add
js
mov
sub
aad
call
repz
jnp
pop
leave
mov
xor
shll
add
add
add
iret
inc
and
daa
sub
data16
xlat
fs
add
add
lcall
movsl
mov
dec
or
faddl
nop
loopne
leave
jnp
popa
jle
xor
mov
movsl
popa
inc
add
add
add
add
add
inc
add
add
and
adc
pop
imull
mov
add
add
lea
rorb
xchg
pushf
mov
or
xchg
in
inc
add
add
test
sbb
add
mov
inc
inc
ljmp
jno
test
mov
add
add
cmp
and
inc
frstor
fistpll
hlt
adc
mov
lret
das
xlat
stos
inc
addr16
das
push
mov
add
add
out
add
mov
add
add
xor
add
jbe
cmp
xchg
push
jecxz
repz
loop
rol
mov
aas
jo
roll
pusha
mov
inc
lret
mov
ret
rcll
cmp
xor
add
dec
jno
push
add
ljmp
mov
push
or
add
add
dec
mov
inc
sbb
cmpb
sbb
add
add
adc
leave
pop
and
mov
pushf
in
insb
mov
xchg
popf
fldenv
std
loope
add
add
je
mov
dec
scas
shrb
in
shll
cmp
shl
push
push
rcrl
cs
jg
mov
sbb
jo
insl
pop
and
xor
int
inc
outsl
loop
mov
xchg
sbb
or
mov
mov
add
add
sub
cmpsl
mov
jbe
or
add
mov
in
xchg
jmp
push
lock
cmp
in
out
push
sub
add
add
xor
in
xor
aam
add
add
jmp
xchg
and
add
add
pusha
add
add
ss
pop
jecxz
aam
aad
ret
push
add
insl
lods
and
add
sub
add
add
add
mov
push
stc
dec
push
mov
xchg
scas
add
sahf
dec
inc
pop
in
xor
mov
inc
mov
imul
test
loop
movsb
lahf
push
ror
mov
sub
mov
xor
imul
cli
imul
add
add
sar
sbb
sbb
in
popa
pop
outsl
rolb
pusha
mov
int
enter
mov
add
add
or
add
or
loopne
jg
jge
rcr
sub
cltd
adc
pop
ljmp
push
xor
and
push
add
add
pop
lods
stos
jge
test
movsb
jb
outsl
aaa
cld
xchg
jb
mov
fs
jns
pop
sbb
jb
xor
add
add
cmp
xor
add
add
lcall
sahf
add
add
add
imul
add
add
add
mov
mov
push
outsl
push
cltd
sub
add
add
daa
sahf
inc
repz
jl
imul
mov
add
sahf
ljmp
or
fistps
pop
dec
or
lahf
push
arpl
mov
adc
add
rcr
ret
insl
xchg
rolb
add
add
stc
rclb
out
out
out
pop
addr16
add
add
add
mov
xchg
add
pushl
dec
mov
add
add
add
or
pusha
add
add
int3
addr16
mov
shll
and
inc
adc
lcall
jmp
push
mov
push
adc
outsl
cmp
jl
and
sti
out
pop
cltd
mov
test
ret
cmp
add
add
test
fstl
add
add
mov
add
add
bound
cmpsb
jns
mov
arpl
xor
add
test
lods
leave
mov
outsb
and
mul
outsl
dec
adc
in
xor
test
hlt
pop
or
add
add
adc
dec
add
add
sbb
mov
add
hlt
cmp
add
test
cmpsb
subb
or
mov
pop
inc
mov
mov
jg
jle
sub
in
push
adc
outsb
dec
loope
mov
clc
adc
mov
add
inc
aad
lret
outsb
jecxz
pop
and
enter
or
movsl
scas
jb
adc
inc
push
mov
pop
jno
enter
stos
fimuls
add
lcall
ss
stc
sbb
addl
repnz
push
jns
mov
fsubrp
pop
adc
xorb
add
dec
imul
add
add
js
mov
add
dec
sbb
add
mov
mov
jl
cmp
push
cmc
shlb
add
add
repz
inc
pop
cmc
push
stos
loop
cmp
add
add
push
inc
fcomps
xchg
imul
add
mov
adc
mov
inc
pop
sub
add
add
add
add
lods
cwtl
outsl
dec
mov
push
out
jge
ss
inc
ret
mov
jae
repz
push
push
in
mov
in
add
enter
lret
lret
adc
xor
mov
and
mov
loopne
dec
adc
clc
push
pop
dec
push
je
mov
mov
outsl
inc
xor
add
mov
insl
scas
jno
mov
pop
xor
add
adc
mov
mov
jns
dec
mov
push
std
sbb
add
add
pop
loopne
shll
jbe
cmpsl
jle
sbb
add
add
adc
rorl
or
pop
clc
arpl
sbb
sub
push
add
pusha
mov
add
add
jp
cmpsb
scas
xchg
cmp
fdivrs
pop
jne
test
lea
sbb
lea
mov
cmp
lods
add
add
add
pop
clc
arpl
push
outsl
pop
fcmovnbe
mov
mov
lods
test
xor
mov
fcompl
fmuls
sbb
mov
ret
arpl
xchg
es
out
es
mov
jae
inc
mov
popf
push
int3
test
dec
sub
add
add
pop
push
imul
cltd
adc
mov
mov
dec
mov
xchg
subl
stos
xchg
pop
leave
test
cmp
fxtract
cmpsl
les
xchg
jne
sti
or
add
add
add
add
jbe
sbb
inc
mov
hlt
ret
arpl
fdivl
add
insb
mov
ja
add
add
jecxz
shll
out
int
or
in
in
insl
jecxz
imull
mov
in
out
movsb
rcll
cmp
mov
adc
add
add
out
push
nop
push
icebp
mov
or
jb
test
pop
push
les
xchg
jne
fstps
mov
lods
cwtl
add
add
add
stos
idivl
loope
lret
loope
pop
stos
push
fcompl
adc
lock
add
or
mov
movsl
lahf
test
scas
add
in
popf
fcompl
add
add
cli
mov
popa
faddl
iret
adc
lods
subb
jge
ljmp
add
scas
inc
pop
mov
add
xchg
mov
ljmp
add
add
ret
stos
push
xchg
xchg
loope
repz
push
mov
lea
lods
imul
mov
mov
fistpl
shr
mov
clc
sti
fists
ds
cmpsb
fdiv
out
and
inc
ret
ss
orb
add
add
dec
xor
enter
add
lea
or
add
or
sahf
lods
and
add
add
add
mov
rcrb
inc
xchg
daa
ficoms
add
add
add
add
clc
mov
fsts
loope
aaa
fimuls
add
xchg
jns
out
sub
add
add
inc
pop
pop
inc
or
add
add
add
add
xlat
pusha
mov
fs
or
add
add
movsl
inc
cmp
testb
repz
pop
cld
adcb
xchg
xchg
lahf
xchg
scas
pushf
stos
push
je
cmpsl
jmp
add
add
in
add
add
mov
push
and
push
iret
repnz
add
add
sub
jecxz
fwait
inc
dec
in
stos
sti
insl
hlt
test
xchg
jg
or
fldl
add
add
lds
adc
out
xchg
mov
gs
mov
aaa
push
rorb
sub
inc
lahf
rcll
repz
gs
out
pop
out
sbb
inc
mov
daa
mov
push
and
cmc
aad
push
aam
std
inc
dec
sbb
lcall
mov
mov
pop
or
jae
sahf
pushf
mov
push
in
lret
sbb
mov
ret
xor
add
add
enter
fcoml
cltd
pushf
lret
lock
xchg
les
stc
mov
ret
sub
add
scas
and
add
add
cli
jg
js,pn
stos
sbb
mov
data16
or
call
mov
cmpsl
cmpsl
cltd
xchg
jns
mov
pop
mov
add
outsl
iret
arpl
xchg
sub
fbstp
les
aas
push
jmp
dec
outsb
lock
pop
ffreep
addr16
inc
jge
and
sbb
mov
add
sbb
int3
add
add
add
cmp
adc
out
sbb
push
mov
xor
mov
adc
add
xchg
mov
fsubl
add
add
push
xchg
dec
add
add
in
out
mov
cmp
mov
imul
mov
sbb
push
xchg
jg
lock
mov
adc
xchg
orb
add
add
gs
add
mov
mov
ja
or
fneni(8087
add
orl
add
popa
cmpsb
imulb
ja
adc
add
clc
or
lcall
fldenv
inc
sub
add
add
add
push
fs
aam
negl
aam
inc
mov
pop
in
rcrb
add
add
out
jns
jg
sub
call
aas
lret
outsl
movsl
xlat
stc
mov
shll
sbb
sub
add
sarl
cltd
and
add
add
and
add
add
popl
adc
test
add
jns
push
add
out
push
imul
cmp
mov
lea
add
add
leave
rclb
sub
add
add
add
add
add
dec
add
add
sbb
shl
gs
mov
ljmp
rcrl
ja
jo
cmpb
into
jo
adc
into
inc
add
add
scas
xchg
dec
mov
or
imul
call
add
xor
cmpsl
test
and
shl
sub
clc
lods
imulb
push
mov
inc
and
add
add
and
push
sub
push
notb
adc
loopne
sbb
add
mov
pop
ljmp
dec
pop
add
sub
fwait
shl
dec
push
mov
add
shll
fimull
add
add
mov
pop
nop
sbb
xor
xchg
lcall
in
in
cli
je
movsb
daa
lods
in
outsl
clc
scas
lret
mov
test
add
add
lcall
aaa
push
adc
mov
inc
pop
loop
adc
sbb
or
test
shlb
xchg
xchg
dec
mov
add
movsl
adcl
mov
push
shl
neg
xlat
mov
cmp
ss
mov
adc
pop
std
jle
cmp
add
add
add
mov
xor
dec
mov
lea
icebp
mov
add
add
jb
gs
or
add
add
mov
jecxz
add
add
push
pop
sub
push
sbb
ret
mov
jg
mov
mov
sbb
pop
mov
fldt
jg
xor
add
add
in
mov
sub
add
add
jbe
pop
mov
rcrl
adc
dec
jnp
add
add
addl
add
inc
mov
lahf
cmp
mov
icebp
insb
mov
inc
fbstp
lcall
add
add
addl
add
pop
aad
push
fdivp
out
inc
pusha
add
add
loope
jne
js
pop
hlt
inc
test
add
add
xchg
rcll
cli
mov
lahf
jmp
xchg
cmp
arpl
pop
xlat
push
loopne
mov
hlt
imul
ret
gs
jl
sub
add
add
mov
add
add
dec
xchg
jo
mov
bound
pop
movsb
push
test
inc
cmovnp
mov
lcall
jg
aam
push
inc
or
xchg
lock
add
add
mov
add
add
andb
add
fucomp
in
repnz
mov
mov
or
dec
push
test
ss
fs
jns
mov
sub
add
add
mov
add
fiaddl
mov
add
add
pop
lcall
mov
icebp
cmp
mov
fimuls
mov
add
js
test
mov
push
insb
mov
push
push
cmp
inc
mov
mov
insb
mov
lcall
sbb
enter
movsb
das
mov
sbb
aaa
add
jns
fwait
dec
adc
xor
call
dec
xor
ss
jp
xor
add
cmp
jecxz
mov
das
movsb
gs
outsb
jp
jbe
xor
add
add
add
mov
sbb
add
add
lods
jecxz
adc
and
add
add
test
pop
add
js
xchg
sbb
loopne
dec
scas
cmp
xor
add
inc
add
add
push
dec
fldcw
push
test
frstor
add
add
mov
add
add
ret
and
add
add
adc
add
add
cmp
stos
call
jl
push
mov
lods
pop
push
outsb
iret
add
and
add
add
aas
add
out
xchg
mov
mov
pop
mov
mov
enter
pop
lds
add
add
mov
call
add
add
shl
push
adc
push
jge
rolb
inc
ret
or
add
add
fnstenv
add
lret
fnstenv
movsb
ljmp
inc
les
add
add
mov
jnp
ja
int
and
add
add
lds
cmpb
cmp
xchg
mov
imull
cmp
sbb
pushf
add
cwtl
and
rep
mov
dec
lcall
add
adc
jae
sti
test
ds
add
mov
xchg
inc
adc
mov
fwait
inc
add
add
popf
xor
jp
mov
ljmp
mov
addl
cmp
stos
cwtl
movsl
lret
adc
int
test
fnstenv
nop
fadds
je
mov
or
mov
pop
cmp
pop
push
into
daa
mov
stos
push
dec
mov
cld
mov
xor
int
cli
mov
add
add
add
lret
mov
inc
push
pop
mov
add
add
add
mov
sub
sahf
add
lds
inc
scas
mov
jbe
out
inc
in
push
stos
movsl
outsl
outsb
xchg
imul
js
mov
jno
xchg
push
mov
add
add
add
add
add
scas
xor
out
fs
out
sbb
notl
mov
and
cmp
inc
hlt
add
add
add
sbb
mov
mov
sub
add
add
adc
stos
subb
adc
test
add
inc
add
add
test
cld
in
fs
lcall
add
cwtl
jecxz
sbb
add
add
adc
sahf
pop
xchg
test
or
jmp
sti
xchg
das
push
int
clc
les
sti
mov
fnsave
fdivp
icebp
test
je
lea
out
dec
jno
push
mov
jnp
rolb
xchg
fs
mov
jo
fucomi
mov
iret
inc
push
movsl
pop
ljmp
add
dec
push
push
mov
xchg
movb
scas
fiadds
xchg
pop
mov
jne
hlt
sbb
add
xor
test
fisubrl
adc
gs
and
add
xor
bound
add
mov
dec
push
mov
rcrl
popf
mov
fistl
xchg
pop
daa
xchg
or
add
add
xor
in
sbb
arpl
fisubl
sbb
xchg
cmpsl
add
add
add
cwtl
test
add
add
lret
and
mov
jnp
das
insb
add
add
ret
fistl
jo
lcall
mov
test
sti
xor
sub
test
in
add
add
mov
and
add
add
lock
xor
add
add
add
data16
stos
jno
adc
aam
push
mov
mov
sbb
orb
add
sbb
lds
loop
jl
add
add
push
push
mov
ss
add
add
ret
stc
lods
jp
adc
mov
sbb
or
and
fisttps
ficompl
ja
sbb
add
pop
jmp
test
add
add
add
push
ljmp
add
test
push
loope
push
push
inc
mov
cld
insl
inc
mov
leave
test
mov
add
cltd
rcr
adc
pop
xchg
push
pop
out
in
dec
cmp
push
jmp
add
add
cmp
add
add
mov
or
jns
jecxz
add
add
jg
pop
loop
pop
fidivs
mov
xor
xor
clc
mov
jmp
cltd
jge
mov
shlb
add
add
add
add
into
inc
add
add
outsl
fdivl
sub
jns
sub
test
testb
rorl
mov
mov
push
or
aas
shll
test
xor
pop
aad
pop
fcmovnb
aam
or
iret
sbb
rorl
shll
popl
inc
add
add
fiadds
add
add
and
ret
repnz
or
add
add
movb
push
dec
inc
add
add
testb
add
or
das
xor
dec
mov
int
in
call
add
add
push
jbe
sub
add
add
xor
bound
xor
mov
jbe
or
xchg
stos
ljmp
mov
xor
mov
pop
or
jecxz
dec
shll
add
mov
int3
repnz
add
cmp
nop
mov
repnz
mov
mov
push
xor
leave
adc
lock
cmp
dec
cmp
imul
add
mov
mov
add
add
add
jo
jge
cmp
add
lret
cmp
jae
jmp
lret
inc
repnz
add
add
leave
xchg
clc
insl
stc
out
cmc
arpl
fcompl
push
push
pop
enter
loope
mov
jecxz
sbb
stc
xchg
sbb
add
add
pop
pop
push
aas
push
xor
es
cmc
and
add
add
adc
daa
cmp
or
pop
cs
mov
mov
mov
adc
add
add
xchg
push
fisubl
or
mov
aad
sbb
xor
mov
pushf
int3
sbb
or
lds
cmc
ja
subl
imul
add
sub
add
add
xchg
pop
scas
scas
sbb
lods
stos
pop
xchg
pop
lock
xchg
mov
dec
jg
cmp
mov
pop
data16
ror
jecxz
or
xchg
xor
dec
js
add
and
jae
lea
decl
jae
and
movsb
xchg
sbb
or
outsb
pop
push
gs
push
stc
sub
add
add
dec
jbe
push
loope
insl
xor
in
sub
add
add
jnp
add
add
sbb
pop
ss
sub
gs
dec
or
pop
jmp
add
add
add
push
nop
dec
add
add
int
ss
xor
sbb
loope
sbb
sub
stos
fwait
shll
pop
repnz
fs
cmc
sbb
loop
enter
add
mov
xor
mov
add
add
add
add
push
jno
push
mov
dec
mov
loop
sbb
push
xchg
dec
mov
pop
inc
int
xor
xchg
add
pop
sub
add
add
add
loop,pt
imul
mov
loopne
adc
add
add
sarb
lds
mov
js
add
add
add
xchg
test
loope
xor
sahf
jnp
in
pop
cld
sbb
pop
pop
pop
mov
push
aam
cmp
pop
mov
inc
in
fbstp
or
jle
xchg
xor
test
or
add
add
xchg
xor
inc
mov
test
jbe
xchg
jb
pop
out
cltd
pop
out
dec
mov
ss
in
fadds
cmpl
neg
sahf
jecxz
add
add
sub
xchg
dec
loopne
mov
sub
push
int
mov
mov
es
cmp
ss
in
jae
push
pop
cmpsb
jno
repnz
outsb
nop
jns
jns
lret
loop
mov
mov
lods
cwtl
ret
pop
mov
cs
fadd
cs
pushf
xor
sub
arpl
cmpsl
pop
or
add
add
sbb
lods
je
xchg
sarl
jmp
cmpsb
inc
mov
add
iret
mov
pop
ret
call
outsl
xor
sarl
add
push
sub
add
add
xor
adc
add
push
push
stc
cmp
sub
dec
hlt
scas
inc
or
mov
mov
loopne
xchg
pop
enter
add
add
or
out
jb
test
movsl
push
das
adc
or
cs
aam
add
add
mov
pop
inc
add
add
fisubl
stos
das
fs
mov
xchg
mov
cmp
pop
jmp
lret
in
and
add
fcom
nop
nop
xchg
sti
js
or
add
jg
lahf
sub
add
add
cmp
jnp
mov
and
das
add
add
stc
sahf
mov
sbb
sub
lcall
ss
pusha
add
add
jno
add
add
std
jo
jecxz
or
add
add
mov
in
xor
popa
jo
dec
add
add
fucomip
outsb
cld
loope
lods
fwait
dec
add
add
mov
or
adc
add
add
add
add
add
imul
xor
add
roll
subl
sbb
aam
addb
stos
add
and
pop
ds
add
fwait
pusha
add
add
pusha
add
add
mov
test
add
add
add
int3
adc
xchg
add
add
icebp
sbb
add
jl
jecxz
xchg
xlat
jp
add
ljmp
add
push
loop
mov
jp
push
in
mov
push
aam
push
lret
xor
adc
scas
aad
mov
push
or
add
add
sbb
xor
arpl
scas
pushf
pusha
mov
sub
add
add
jbe
repz
add
add
jl
cwtl
add
add
add
mov
daa
mov
add
add
add
dec
insl
rorb
hlt
mov
in
cs
and
outsb
mov
call
and
lret
fists
icebp
sub
add
add
add
addr16
inc
int3
ljmp
pushf
fisttps
cld
cmp
push
cmp
dec
ljmp
popf
push
outsb
push
mov
cmp
sbb
mov
loopne
movsb
lret
popf
push
pop
pop
xchg
mov
push
fisubs
or
and
dec
add
add
add
sbbb
jno
fmulp
data16
add
add
dec
jl
push
repnz
stos
lahf
sub
push
mov
add
pop
imul
mov
add
add
mov
pop
dec
lret
rcl
pop
cmp
xchg
cmp
loopne
scas
inc
mov
sub
popa
jno
das
je
and
mov
adcb
mov
shl
sbb
mov
add
add
xchg
icebp
in
push
xor
add
add
inc
scas
adc
pop
add
cmp
sub
jne
clc
daa
fsts
sbb
ret
addr16
mov
test
movsl
sub
add
test
mov
fisubs
inc
inc
xchg
fsubs
add
add
movsb
sbb
ret
dec
mov
out
mov
hlt
jg
fstps
cmc
cmpsb
lcall
mov
pop
xchg
stc
imul
add
mov
pop
sub
fstpl
push
xor
add
mov
mov
jbe
xor
xchg
pop
lea
add
jbe
pusha
mov
pop
repz
cwtl
aaa
aad
pop
test
cmpsl
inc
mov
data16
add
add
or
inc
jg
ret
aas
sbb
popa
repz
lcall
jns
out
mov
jns
lock
call
stos
jo
cltd
arpl
push
cmp
in
pushl
fmuls
mov
sbb
mov
mov
jo
rorl
and
sahf
js
loopne
out
mov
push
les
test
xor
les
and
nop
mov
add
add
add
icebp
je
jmp
mov
xchg
add
lea
add
add
push
jb
pop
shrb
add
fstps
aad
pminub
fmulp
jge
and
adc
test
fisttpl
mov
add
sbb
jge
adc
cmp
cmpsl
add
add
add
dec
in
dec
mov
push
lock
les
inc
push
lret
mov
sarl
add
add
nop
add
jae
push
loopne
or
test
leave
push
xchg
aaa
mov
inc
shll
dec
jns
sbb
das
pop
or
add
add
add
add
shl
cmp
jge
mov
mov
or
add
add
pop
mov
mov
iret
mov
stc
push
xchg
mov
sub
mov
int3
or
pop
pop
lahf
inc
ret
inc
clc
test
stos
jle
popa
inc
mov
add
xor
or
mov
fisttpl
add
sbb
mov
pushf
jmp
movsl
int
mov
mov
push
out
sti
int3
push
sub
add
add
add
add
pop
adcb
push
lea
lret
or
mov
add
mov
add
add
mov
popl
loope
cmp
ficoms
rorb
add
add
mov
sub
and
pop
shlb
in
cmp
add
add
aam
add
add
ss
incb
mov
dec
fildl
add
add
hlt
add
add
add
sahf
jmp
movsb
sub
add
add
pop
sub
add
add
xchg
jb
nop
add
fwait
arpl
lds
add
dec
mov
inc
cmp
add
add
out
aam
outsl
and
insl
inc
add
add
sub
dec
mov
push
add
inc
mov
hlt
push
dec
jp
mov
or
mov
cmp
lock
cmp
fisttpll
xor
pop
mov
adc
add
add
inc
iret
loope
fadds
add
add
xor
inc
mov
cmpl
xor
leave
outsb
mov
sbb
jl
mov
push
and
jbe
or
mov
sub
add
add
ret
lahf
pop
adc
fldl
push
testl
xor
das
cmpsb
mov
mov
iret
xor
xor
xchg
and
loopne
in
inc
or
jge
mov
dec
mov
add
add
inc
mov
add
add
add
clc
mov
outsb
jecxz
sub
pop
inc
push
hlt
jb
mov
add
pop
mov
shrb
dec
movsl
adc
jbe
arpl
repnz
inc
ja
add
out
jl
add
add
add
add
add
scas
adc
and
add
add
pop
addr16
ds
add
bound
xchg
in
add
dec
out
xchg
adc
sbb
add
add
mov
add
add
cmpb
mov
sub
push
pop
and
add
add
add
add
cmp
repnz
dec
mov
pop
pop
mov
hlt
dec
jnp
jge
cmp
cmc
sbb
dec
mov
add
add
add
fists
in
bnd
inc
call
dec
sbb
push
hlt
add
push
in
popf
mov
out
lret
xor
imul
jp
push
cmpsl
mov
xor
repz
sbb
push
cmp
push
inc
add
pop
push
mov
stc
xchg
inc
mov
sbb
imul
out
add
add
add
rorb
add
add
in
rcrl
in
inc
cld
gs
inc
scas
scas
sub
test
xlat
jne
ljmp
nop
pop
jno
sub
pusha
mov
adc
add
add
push
or
add
add
pop
ja
mov
xchg
sub
xchg
popa
inc
xor
mov
xchg
mov
mov
cltd
sub
scas
dec
mov
test
loop
inc
and
add
add
mov
push
sbb
dec
mov
add
add
stc
adc
add
add
add
hlt
stos
jmp
outsl
std
jnp
cmp
or
cli
loopne
repnz
pop
dec
sbb
mov
lds
inc
mov
popf
loop
iret
jns
decl
add
add
mov
andl
fwait
rsqrtps
xor
add
push
test
pop
rolb
adc
in
pop
inc
notb
inc
jne
in
mov
xor
insb
mov
aad
add
add
and
add
add
cli
movl
sbb
imul
adc
mov
push
mov
in
js
inc
lret
jecxz
das
mov
daa
mov
add
ret
fwait
xor
lods
outsb
pop
nop
in
imul
add
enter
sti
jnp
jbe
daa
cmp
add
add
add
cli
xor
add
add
add
add
or
sti
xchg
inc
mov
push
adc
jne
imul
mov
rcl
mov
sub
push
inc
pop
mov
fsts
sub
insl
cmpsb
jne
cmp
xor
hlt
add
cs
imul
mov
ret
out
sbb
jae
add
inc
add
add
imul
out
test
adc
add
or
add
add
shr
lret
pusha
mov
inc
mov
icebp
inc
mov
mov
push
mov
add
add
lods
aam
inc
mov
out
xchg
push
inc
out
ljmp
rcll
dec
push
mov
inc
fs
mov
fdivr
sub
test
movl
mov
sub
add
add
or
add
add
ds
fbld
adc
jecxz
cltd
stos
bound
push
push
stos
shll
add
add
cmpb
mov
call
add
movsb
cmpsl
pop
push
in
enter
xor
mov
add
pop
in
inc
add
add
inc
sbb
shrl
add
imul
add
in
data16
jp
lea
add
test
sbb
jno
adc
movsl
and
pop
add
fiadds
add
adc
lret
jmp
xchg
mov
loopne
mov
fmull
cmp
test
adc
mov
xchg
xchg
or
push
sub
sub
add
add
sbb
add
add
test
adc
testl
adc
jbe
test
jae
daa
inc
dec
ret
aaa
in
out
cmp
ret
mov
in
out
xor
leave
mov
add
faddl
pop
adc
movsb
js
and
aam
jecxz
mov
test
and
inc
add
add
cmp
add
add
leave
sub
repnz
dec
enter
icebp
les
test
sbb
cmpsb
pop
dec
mov
pop
mov
je
sbb
lret
dec
mov
incl
jecxz
xor
adc
push
dec
imul
rorl
add
push
push
aam
mov
add
mov
add
pop
adc
add
add
mov
mov
or
movsb
into
jno
mov
add
push
dec
add
add
cmpsb
ljmp
add
fcompl
pop
lahf
sbb
add
add
or
jno
dec
mov
add
add
xchg
add
add
add
fcom
jns
in
enter
mov
testb
stos
jmp
ficomps
inc
add
add
jecxz
mov
lock
pushf
sub
in
xchg
cmc
in
inc
sub
cmp
int3
jbe
or
xchg
ret
aas
inc
add
add
xchg
sub
add
add
cltd
movsl
inc
add
add
in
mov
lret
int3
push
adc
pop
bound
adc
jl
fsubs
lret
subps
xchg
into
jb
in
jo
aas
mov
das
mov
std
xor
push
cs
scas
jae
push
mov
aad
add
add
lret
xchg
sbb
sahf
jne
sub
jg
imul
ss
add
into
or
and
mov
loope
pop
lds
inc
mov
add
add
add
ret
add
pop
lods
jb
add
add
cmpsl
out
jne
xchg
and
lcall
mov
call
push
jns
add
mov
mov
sub
sub
cld
or
icebp
jge
jno
popa
inc
cmc
and
orb
add
add
shrl
das
repnz
int3
mov
mov
adc
mov
imulb
pop
das
int
mov
add
xchg
and
inc
add
add
in
adc
add
add
repnz
mov
addr16
test
mov
in
movsb
loopne
mov
rcll
mov
bound
lret
rcrb
add
add
pop
repnz
rorl
insl
fiaddl
stos
les
sub
jl
mov
mov
add
pop
xor
mov
dec
movsb
push
popf
rclb
inc
pop
ret
mov
add
add
xchg
fcmovnb
sbb
adc
scas
jno
arpl
pop
lret
mov
or
add
xchg
push
add
add
add
push
loopne
scas
es
mov
mov
and
jns
jl
xorb
out
clc
fbld
mov
sbb
lea
xor
add
add
pop
mov
or
cli
dec
rcr
sub
xor
imul
fwait
negb
adcl
notb
add
sub
add
add
add
adc
add
add
popa
idivb
mov
mov
and
add
add
test
out
xor
xchg
repz
mov
rcll
and
add
add
dec
add
add
into
enter
sub
add
sub
dec
pusha
add
add
decl
add
cmpsb
mov
or
xchg
dec
dec
mov
int
stos
push
xchg
adc
dec
mov
aas
xor
inc
or
das
mov
jecxz
mov
imul
add
add
into
mov
xchg
jecxz
hlt
imul
add
out
add
add
inc
add
add
sub
sub
add
adc
mov
mov
add
add
mov
hlt
xchg
cmp
add
add
add
out
add
add
add
mov
push
push
mov
cwtl
enter
xchg
sbb
mov
and
cld
idivb
push
add
add
add
stos
lea
jns
jp
add
addr16
adc
add
add
inc
mov
jo
dec
jne
cmp
fcmovu
push
or
xchg
push
sub
aad
lods
xchg
stos
mov
sbb
stos
jp
mov
jmp
push
mov
dec
pop
jl
inc
jmp
sub
lret
aam
add
xchg
push
sub
sub
add
add
and
add
add
pop
stc
xchg
sbb
mov
pavgb
sbb
pusha
mov
add
add
jno
in
sbb
outsl
pop
aam
test
add
add
mov
pop
stos
mov
xchg
dec
add
add
pop
fiadds
xor
mov
cmp
xchg
add
add
lods
mov
ljmp
add
adc
in
add
add
adc
pop
scas
out
add
add
icebp
in
and
loope
repz
imul
jp
push
jp
mov
mov
inc
decl
add
add
jecxz
sti
imulb
ror
sti
js
sub
add
add
add
add
fmuls
pop
dec
add
push
subb
loope
stos
mov
rolb
add
add
or
add
add
and
pop
mov
popw
shlb
add
add
repnz
pop
and
add
add
jg
ficoms
hlt
sbb
add
add
cmp
pusha
mov
fsubrs
add
add
add
std
das
mov
mov
gs
mov
cmpsl
pop
jbe
mov
mov
stc
lcall
out
cs
push
les
push
pusha
mov
clc
cmp
inc
lods
rclb
mov
xchg
xor
push
push
inc
sti
add
sub
pop
push
mov
popf
faddl
les
js
add
add
add
out
pop
mov
add
add
in
mov
inc
mov
and
add
mov
lds
mov
cltd
and
push
dec
add
add
jno
add
add
or
add
test
add
add
pop
out
pop
imul
cmp
add
add
pusha
mov
lahf
and
add
add
push
and
or
cmp
adc
insl
jns
mov
push
cs
push
stos
iret
fadd
jb,pt
in
ss
in
sbb
dec
loope
xor
aaa
leave
mov
or
add
add
sub
lahf
push
sbb
fxch
and
or
daa
add
sbb
push
pop
jle
lret
mov
hlt
and
and
ja
pop
arpl
test
int
and
xchg
sbb
loopne
imul
mov
add
add
add
add
sub
mov
sub
mov
add
mov
cwtl
call
ror
jnp
or
sti
cmp
js
wbinvd
fisubrs
adc
push
jl
gs
fucom
sbb
xchg
push
out
sbb
arpl
mov
push
outsl
adc
sar
les
dec
cmp
inc
scas
imul
xor
dec
nop
dec
jbe
xor
mov
bound
mov
inc
int3
sti
xor
sti
mov
cmp
mov
jmp
lea
ret
mov
arpl
push
scas
push
mov
xchg
xor
add
gs
fcmovnu
mov
and
ret
jo
add
add
leave
dec
ljmp
mov
es
xchg
pop
mov
xor
mov
shlb
pop
cwtl
loopne
xchg
fdivrs
sub
add
add
les
fsqrt
movsl
out
and
inc
fadd
inc
cltd
sbb
sbb
add
add
dec
jle
mov
add
adcl
ds
lods
gs
pop
pop
and
cwtl
movsb
aam
push
testb
mov
rorb
pusha
mov
add
enter
das
stos
mov
sub
add
in
cltd
sbb
inc
lret
sbb
ja
adc
into
pop
sub
push
std
test
xor
mov
enter
inc
xchg
and
pop
push
mov
jno
addr16
push
lods
ret
jge
test
fwait
sarb
test
scas
cs
dec
ljmp
add
mov
cmp
inc
add
bnd
fsts
mov
add
add
mov
pop
cmpsl
pop
out
fdiv
push
jnp
enter
add
js
repz
aad
shll
mov
add
int
inc
sub
sub
in
mov
and
xchg
out
addr16
das
xchg
outsb
lods
and
and
add
je
mov
add
xchg
cmp
cli
hlt
ja
xchg
add
and
jbe
and
mov
jnp
mov
shrl
pop
fbstp
dec
xor
jmp
xchg
loop
popa
cs
mov
outsb
cmp
add
add
shll
add
add
sub
mov
pop
and
add
add
mov
add
mov
or
add
add
dec
daa
rclb
mov
add
add
add
test
jne
cmp
add
add
inc
xchg
xchg
pop
inc
adc
ljmp
cmpsl
ds
js
repz
loopne
dec
xchg
pop
dec
data16
add
icebp
and
add
add
out
jne
lods
push
sub
add
add
cltd
test
int
pop
sub
add
add
scas
add
add
ja
movb
rorl
mov
clc
sbb
das
jo
xchg
jmp
in
push
mov
loope
ljmp
adc
loope
add
jno
xchg
popa
mov
add
add
outsl
rol
stc
test
add
add
push
dec
xor
in
shrl
sbb
or
imul
fstpt
push
arpl
mov
outsl
fidivl
jne
xor
aas
sub
and
add
add
mov
inc
imul
pop
jne
fldt
add
add
out
push
pop
mov
mov
lcall
pop
push
push
jp
int
stc
sbb
lock
imul
pop
add
add
add
sbb
daa
dec
cmpsb
or
add
add
cmp
mov
popf
ror
push
std
jb
cmpsb
mov
cmp
jecxz
cmp
lcall
mov
test
leave
adc
mov
jp
aam
shll
ds
scas
lahf
cltd
and
pop
cmp
mov
mov
nop
pop
adc
add
add
lock
mov
adc
incb
add
jbe
jmp
movsb
mov
repnz
inc
mov
add
or
xor
xor
add
test
int3
dec
mov
insb
mov
loope
test
add
add
test
add
out
add
add
add
cmp
lahf
and
hlt
cli
dec
jb
adc
add
add
mov
or
add
add
repz
sbb
cmp
sbb
sub
xorb
das
daa
pop
and
add
add
loope
and
and
mov
sbb
jo
adc
movsl
aas
add
add
add
ja
lret
out
jns
fsubl
push
fdivrl
jp
add
add
add
outsb
push
mov
sbb
adc
add
add
aad
out
cwtl
fcmovb
pop
insl
jbe
add
add
in
sahf
loopne
jl
sbb
pop
jns
dec
pop
je
add
add
ds
in
jae
mov
sbbb
mov
mov
add
or
pop
and
jmp
push
mov
movsl
or
mov
mov
add
add
sahf
push
sbb
icebp
push
sarl
mov
dec
insl
and
mov
idivb
cli
mov
add
xor
pop
std
sarb
ret
add
add
cmp
movsb
ds
add
add
xlat
adc
loop
mov
shll
dec
adc
pop
mov
mov
add
add
scas
sbb
pushf
test
nop
inc
add
pop
mov
cld
mov
into
stc
rorb
mov
add
jbe
mov
xor
push
popa
add
dec
sbb
mov
cmpsl
push
les
mov
adc
bound
mov
add
add
xchg
mov
add
add
add
lret
and
out
cmpsb
mov
jge
inc
push
mov
mov
mov
ljmp
lea
add
add
xchg
in
mov
rcrb
push
imull
add
add
mov
add
push
rolb
das
xor
add
add
hlt
cmp
jge
mov
pop
repz
cmp
xchg
and
add
add
jb
mov
mov
push
mov
or
and
and
cmp
das
in
out
ret
std
dec
add
add
push
sbb
xchg
push
or
add
add
and
mov
add
enter
rorb
jns
sbb
es
leave
mov
mov
dec
mov
add
add
inc
xchg
mov
stos
outsl
clc
test
cmp
insb
mov
test
inc
lods
mov
iret
movsl
cmp
insl
insl
push
pop
pop
movsb
or
add
add
je
fsts
ljmp
sub
pusha
mov
xchg
movsb
dec
imul
cmp
push
fcoml
add
add
add
ret
add
add
mov
mov
sti
loopne
dec
mov
push
lahf
push
daa
es
addl
data16
in
loopne
sbbb
test
adc
shrl
mov
into
bts
add
cmp
mov
pop
repnz
adc
mov
fs
aaa
call
stos
scas
sbb
fdivl
std
das
xor
test
es
aam
mov
add
add
movsb
sbbb
lret
sbb
xchg
cltd
mov
dec
arpl
imul
lods
cmpsb
popa
push
das
mov
pop
jle
or
jb
sub
out
xchg
mov
mov
sti
stc
add
sbb
inc
jmp
add
add
jbe
mov
sub
add
pop
jo
adc
lock
fidivl
add
jno
ret
inc
loope
add
add
xor
adc
clc
push
loope
mov
add
add
enter
jp
lahf
mov
and
clc
loopne
fwait
mov
mov
ljmp
add
add
into
bound
nop
or
cmp
lea
cmp
cmp
xor
xchg
xchg
idivl
mov
add
pop
aaa
jge
mov
incl
les
fstpt
insl
mov
push
xor
leave
loopne
enter
das
pop
imul
loopne
les
xor
xchg
xchg
xchg
add
and
mov
aaa
fucom
ret
and
add
add
bound
and
add
add
or
xchg
out
xchg
aaa
xchg
push
jne
inc
add
add
push
shlb
add
add
add
dec
inc
mov
scas
mov
add
pop
imul
add
iret
adc
push
out
fwait
xchg
shl
pop
jae
out
add
add
repz
mov
scas
jl
fdivr
stos
jns
data16
jg
sub
stos
lea
cmp
int3
mov
outsl
mov
mov
cli
scas
mov
cwtl
cmpsb
add
add
add
add
add
sbb
add
add
pushf
cmp
lds
mov
iret
push
stos
mov
test
push
dec
mov
pop
gs
xchg
sti
sqrtps
test
test
mov
or
add
add
fisttpll
fmul
adc
addr16
je
lret
add
add
vpcomq
cmp
outsb
jne
and
mov
add
scas
js
pop
test
outsb
rcr
pop
and
or
sarl
lea
lock
add
add
or
repz
add
rolb
or
add
add
in
xor
imul
loop
jecxz
adc
mov
mov
xchg
sbb
fisubrl
add
add
mov
cmp
ret
push
lds
inc
mov
mov
jo
pop
add
add
add
adc
sti
xor
or
add
add
dec
pop
movsb
dec
add
add
test
add
and
or
push
adc
add
add
shl
sub
xchg
sbb
sub
fnsetpm(287
fwait
iret
mov
add
add
sbb
sub
add
int
xor
mov
mov
ja
add
xor
mov
outsb
mov
and
xchg
jb
mov
movsl
sub
add
add
push
jecxz
and
add
add
adc
and
jmp
ds
xor
fistps
dec
bound
add
mov
jne
pop
movsl
fs
mov
ss
xchg
movsb
push
adc
insl
adc
mov
cwtl
ret
cmp
notb
xchg
js
push
inc
mov
jmp
mov
fimull
xchg
cmc
inc
lock
lock
mov
leave
idivl
mov
in
dec
inc
mov
cmpsb
ds
pop
faddl
pop
xor
adc
cltd
data16
movsb
call
sub
add
add
sti
mov
pop
dec
jg
dec
add
add
pop
adcl
out
xlat
pop
pop
dec
add
add
call
jmp
test
push
jne
inc
add
add
mov
insl
xchg
cltd
movsl
std
pop
ljmp
scas
or
add
add
rclb
clc
ficoml
sub
push
jmp
lret
jge
lcall
dec
roll
add
add
xor
add
add
pop
xchg
sub
scas
arpl
std
jae
mov
rcrl
add
add
sub
pop
push
test
dec
mov
and
mov
sbb
arpl
adc
cmp
push
adc
add
pop
mov
enter
mov
adc
cmp
sub
add
add
mov
add
add
add
xor
rolb
or
add
add
add
mov
cld
add
sbb
xor
pop
pop
xchg
out
inc
lea
push
enter
mov
add
mov
fbld
mov
add
xlat
rcrb
add
add
addr16
stos
and
loop
ret
icebp
sbb
add
mov
test
test
push
xchg
mov
fadds
ficoms
call
mov
add
fsubrs
jo
mov
xor
cwtl
cmp
sub
add
add
dec
clc
fadd
add
mov
mov
cmpsb
ljmp
mov
adc
and
push
pop
xchg
jae
pop
add
add
add
ja
insb
add
add
add
mov
xchg
arpl
aam
fadds
or
add
add
aas
aad
aad
sub
add
add
push
pop
and
mov
add
xchg
rcr
in
sar
sarl
in
jmp
repnz
add
pop
sbb
nop
jmp
pop
mov
mov
add
xchg
sub
add
add
or
cmp
subl
jno
fstl
push
adc
pusha
add
add
and
dec
mov
dec
add
add
and
call
icebp
ss
leave
dec
sbb
mov
add
add
add
cltd
xchg
adc
add
jo
mov
xchg
in
into
fwait
mov
divl
test
cmp
bound
add
add
add
add
fisubl
cmp
jno
in
sbb
pop
int
test
sub
add
add
mov
sti
push
jbe
xor
add
add
sub
add
add
and
add
add
xor
dec
mov
inc
pop
mov
xor
sbb
js
add
add
pop
les
add
cmp
sar
xor
dec
push
add
and
jmp
and
add
add
rep
pop
mov
add
add
adc
cwtl
rclb
mov
ret
pop
lods
mov
int3
xchg
add
jg
fnstcw
out
lea
or
add
add
lock
les
ficoml
adc
mov
cmpl
lods
aas
int3
dec
popa
lret
sub
add
add
mov
pop
jp
jb
and
add
add
stos
les
pop
clc
int3
add
add
add
mov
pop
dec
lock
xchg
add
add
das
add
pop
arpl
push
pop
mov
add
add
mov
out
mov
push
adc
into
imulb
mov
ret
inc
mov
movl
add
cmp
dec
ja
std
sub
xlat
xchg
and
inc
mov
push
mov
shrl
repnz
stc
mov
xchg
cmp
pushf
jge
pusha
add
add
pusha
add
add
cli
adc
or
pop
pop
call
add
add
sti
mov
add
add
adcb
dec
mov
lds
pop
add
add
loopne
or
push
xsha256
cmpsb
push
mov
sub
inc
inc
inc
add
add
jne
movsb
adc
das
pop
js
out
sub
scas
and
add
add
in
adc
clc
dec
inc
lahf
mov
cmp
popa
add
pop
fildl
movsl
pop
and
adc
add
cmpsl
and
lods
stc
popa
cmp
mov
pop
push
test
jno
addr16
inc
mov
add
add
sbb
adcb
inc
cmpsb
scas
punpcklwd
add
mov
dec
jmp
or
addr16
lock
fldl
imul
jmp
mov
int3
sbb
lods
sub
push
add
arpl
xchg
sub
add
add
jmp
cmp
sbbl
add
pop
or
add
add
jns
test
jne
rorl
rclb
add
add
insl
leave
aad
dec
mov
inc
test
push
repz
mov
es
call
fiaddl
call
jns
mov
add
jnp
insb
mov
jge
push
push
out
add
push
xchg
shlb
mov
mov
sbb
jb
js
js
and
xor
sbb
fistps
cli
cmc
mov
imul
pop
sub
repz
mov
pop
xor
loope
dec
jle
ljmp
add
cs
fsts
in
repz
add
inc
aad
ja
fwait
test
in
addl
xlat
xchg
popa
cmp
lods
fsubs
add
add
popa
orl
cmp
addr16
pusha
add
add
out
subb
add
add
adc
and
imul
mov
outsb
dec
add
add
sbb
mov
pop
repz
sub
inc
decb
cmp
xchg
cmp
pop
pop
lcall
ret
xchg
xchg
pop
movsb
push
jge
es
pushf
mov
iret
push
dec
mov
cmc
push
lods
setns
push
ds
ljmp
vmwrite
jbe
roll
add
add
dec
js
cmp
sbb
pop
je
pushf
sbb
mov
add
dec
mov
add
mov
stos
xor
popl
xchg
cs
movsb
scas
in
jne
test
jns
push
mov
push
inc
add
add
sbb
add
add
icebp
add
xchg
hlt
push
sub
or
add
add
push
add
add
add
mov
lret
adc
mov
mov
xor
fnstsw
pop
and
jge
mov
inc
mov
fwait
dec
lcall
out
xchg
sar
fwait
xor
iret
test
sbb
loope
fldcw
lds
pushf
inc
pop
outsl
mov
mov
xchg
inc
inc
mov
jno
mov
and
add
add
inc
call
movsl
test
sbb
add
push
sarb
hlt
cs
shl
pop
cmp
push
repz
mov
mov
ljmp
cmp
std
jbe
or
sub
out
popa
pop
jne
mov
add
add
dec
mov
mov
push
lods
xchg
inc
icebp
pop
or
add
add
mov
mov
add
mov
add
add
bswap
test
mov
mov
leave
xor
addb
pop
cs
aas
movsl
test
leave
sahf
aaa
ret
xchg
sbb
insl
les
add
add
sub
leave
xchg
dec
add
add
test
push
sbb
loopne
test
pop
ds
add
add
dec
sub
int
loop
aad
incb
jle
push
ret
xor
mov
dec
add
add
xor
dec
add
inc
add
add
sbb
push
push
push
push
jle
push
sti
data16
test
daa
lcall
jo
int3
mov
mov
hlt
mov
cwtd
sub
add
add
jnp
cmpsb
jge
adc
xchg
lahf
mov
pushf
inc
jp
add
add
cmc
cmp
push
xlat
subl
add
push
imul
add
testl
sahf
ljmp
scas
inc
dec
test
push
jp
subl
iret
scas
popf
stos
xchg
daa
mov
in
mov
mov
jge
cmc
xchg
mov
insb
mov
mov
xchg
sub
add
add
sbb
ds
aas
push
aad
ds
inc
mov
aaa
stos
test
fnstenv
or
add
add
add
add
add
push
decl
dec
aaa
lahf
cmp
jle
and
mov
and
shl
mov
push
xlat
mov
jmp
in
xchg
pop
ljmp
or
add
add
dec
add
add
jae
inc
xor
adc
sbbb
mov
and
push
sub
add
add
sti
lea
loopne
jno
mov
or
testb
add
add
cmp
add
movsl
mov
add
add
loop
or
mov
jbe
push
jge
mov
test
add
add
pop
outsl
sub
mov
inc
jne
xorb
jae
mov
push
lret
xor
aas
dec
mov
mov
std
mov
dec
add
add
push
cmp
mov
cmpsb
mov
or
cmc
stos
fstpt
popa
jmp
add
nop
mov
mov
aaa
lcall
insl
pop
adc
add
aas
adc
pop
nop
in
lods
out
jp
mov
roll
js
sub
add
add
mov
fdivrl
dec
xchg
dec
and
add
add
cmc
mov
xchg
in
inc
stos
out
mov
dec
inc
dec
push
repz
xor
int3
adc
cwtl
stc
insl
adc
add
add
fildll
loopne
or
scas
or
sbb
jmp
stos
maxsd
pop
pusha
add
add
test
xchg
data16
xchg
enter
data16
ss
cmp
aaa
push
add
dec
mov
xchg
pop
in
data16
push
mov
outsl
frstor
xchg
sub
pop
sbb
int
cltd
push
lret
jl
add
add
inc
mov
jo
mov
sub
push
test
add
dec
add
add
std
cs
cmp
sbb
scas
push
sub
sub
movsl
xchg
and
mov
sub
fbld
mov
in
mov
orl
mov
mov
mov
xor
sbb
xor
enter
fisttpll
and
lods
aad
push
stc
and
add
add
loope
jbe
jp
dec
xor
xchg
dec
add
add
jne
sub
mov
aad
fistpll
ds
flds
mov
std
inc
push
jle
in
mov
mov
xchg
push
fidivrs
lods
sbb
add
add
add
in
movsl
jge
xchg
add
add
aas
enter
lahf
nop
imul
cmp
sub
add
add
adc
imul
aas
je
add
add
cld
or
imul
into
int
cmp
mov
out
mov
rolb
add
add
jp
daa
ret
loop
push
pop
inc
mov
addr16
sbb
mov
xchg
sbbl
loopne
adcb
xor
sub
add
add
add
add
lcall
cltd
sbb
or
add
add
add
sar
bound
add
iret
rclb
pusha
mov
cltd
sahf
mov
outsb
push
sub
testl
and
jno
sbb
cmp
frstor
decl
inc
add
add
add
fsubrs
add
cmp
sub
and
add
add
jmp
fstpt
ljmp
mov
add
add
sub
jl
or
add
add
fiadds
daa
xchg
fwait
pop
jecxz
dec
mov
in
jmp
mov
movsb
xchg
sbb
mov
add
dec
incl
mov
lret
xchg
cmp
cli
hlt
call
dec
mov
lret
dec
add
lcall
jb
add
add
add
xor
mov
add
add
jo
frstor
add
add
add
add
out
mov
add
add
test
repz
add
add
sub
enter
movsb
xchg
repnz
mov
inc
mov
inc
add
add
and
js
gs
pop
sub
add
add
jmp
add
outsl
jge
std
ljmp
dec
mov
daa
cld
not
jecxz
std
dec
mov
call
xchg
insb
add
add
mov
add
sbb
push
sub
imul
movsl
inc
mov
inc
shlb
add
add
xorl
add
add
push
fwait
sbb
add
je
jo
jnp
sbb
repnz
mull
cmc
cmpsw
cld
fnstcw
adc
enter
dec
cmc
and
test
out
and
adc
lret
testb
and
add
add
into
jle
add
push
nop
push
add
dec
mov
push
mov
dec
jb
mov
xor
mov
in
aaa
test
ret
add
add
cltd
xchg
outsl
xor
ret
mov
gs
fbld
imul
add
add
pop
fsubl
mov
mov
pop
adc
lret
xchg
cld
cli
xor
add
add
hlt
es
lret
sub
pop
jb
outsb
fstpt
mov
add
add
jno
mov
add
add
add
or
or
cmp
xchg
add
add
cmpl
cmp
jge
pop
out
pop
xchg
add
add
sti
mov
pop
loopne
xor
push
push
pop
mov
fidivrs
cld
pop
mov
mov
loope
js
addl
sti
add
add
add
add
mov
es
jl
mov
push
ds
push
push
lock
and
push
adc
mov
sub
sbb
mov
add
shrb
mov
mov
test
pop
pop
movsl
mov
ret
xchg
fucomp
pop
and
add
daa
shlb
add
add
xchg
mov
aam
into
ljmp
inc
aam
divb
add
add
xchg
psubsb
mov
in
and
add
add
ret
rcll
popa
xchg
jb
bound
add
loopne
sbb
sub
pop
lret
pop
adc
mov
ret
jmp
push
mov
add
add
in
inc
cmpsl
mov
icebp
jo
fwait
adc
mov
dec
jmp
cmp
sbb
add
das
add
add
add
sub
add
add
stc
jbe
inc
mov
add
jl
aas
shlb
out
mov
xchg
cmpsb
push
insl
inc
shlb
ja
mov
push
sub
xor
cwtl
mov
lods
loop
mov
in
jp
sbb
mov
fstl
mov
push
lock
es
jl
xor
clc
or
xchg
loop
dec
mov
js
or
add
data16
fwait
mov
add
cmp
xchg
push
lds
mov
pop
sub
ss
repnz
mov
add
cmpsb
sbb
test
sahf
dec
sbb
movsb
adc
testb
push
jbe
jae
cmp
insl
pop
shll
inc
add
jb
pop
cmpl
xlat
jg
xchg
outsl
mov
es
push
rclb
pop
out
jae
or
add
add
shlb
pop
push
into
and
out
leave
arpl
cmp
gs
lret
xor
cmpsb
adc
adc
loop
xor
pop
add
add
sarb
cmp
in
mov
pop
stc
pop
stos
cmp
add
add
loopne
mov
sub
mov
mov
mov
add
add
mov
push
mov
mov
mov
xor
add
add
mov
pop
in
and
add
mov
jecxz
mov
add
pop
jo
add
add
and
cmp
xor
jne
enter
add
loop
and
pop
add
add
jns
ss
cltd
idiv
jge
mov
lahf
sahf
test
adc
mov
mov
shll
add
imulb
rcll
mov
add
add
subb
adc
xchg
sub
add
add
add
fwait
xchg
test
hlt
dec
ud0
mov
adc
scas
out
mov
or
xor
sbb
and
lods
add
aam
dec
or
add
add
faddl
mov
lods
clc
imull
pop
add
hlt
nop
add
add
lahf
popa
pop
cmp
jmp
ds
add
add
add
hlt
test
mov
dec
out
cmpsb
push
add
inc
xor
jae
mov
inc
mov
insl
scas
cld
add
add
add
mov
bound
add
add
inc
les
jmp
negb
add
add
mov
js
mov
cld
test
fldcw
jnp
insb
add
add
sbb
add
add
xchg
or
add
add
scas
popf
in
xor
gs
jnp
shrb
xchg
push
test
xor
cmpsb
inc
pmaxsw
in
dec
add
add
add
icebp
out
mov
add
add
shll
imul
cli
pushf
and
add
add
mov
in
les
daa
lret
inc
lahf
fildl
sbb
shl
xchg
addr16
pop
or
mov
outsl
or
add
add
mov
cmp
out
add
int3
aad
roll
mov
sub
adc
inc
out
bound
push
jg
stos
pop
jno
lods
jmp
movsl
pop
sbb
cmpsl
push
jmp
xor
and
add
add
test
add
add
aam
out
inc
pop
ficompl
adcl
fimull
xor
imul
and
scas
addb
mov
or
add
add
daa
loope
into
pusha
add
add
inc
subb
adc
cli
aaa
push
jne
sbb
in
popa
dec
fdivrl
xchg
push
and
add
add
sbb
add
sub
cmp
xor
adc
adc
mov
fistpl
mov
pop
in
mov
sub
add
add
hlt
movsb
and
push
in
add
add
xor
xor
inc
mov
sbb
cmp
stc
dec
pop
push
xadd
fwait
in
test
dec
test
push
pop
aaa
jg
adc
or
mov
inc
add
add
lea
add
push
rolb
lods
xor
xchg
jl
cmp
dec
push
inc
add
add
pop
pop
repz
inc
push
dec
movsb
popa
test
aaa
dec
iret
frstor
add
add
add
add
sub
jns
mov
sub
add
add
jmp
mov
out
add
add
imul
add
add
movsl
jge
adc
add
dec
loop
jno
xchg
mov
add
add
in
outsb
sub
xchg
jnp
sbb
cmc
stos
adc
xchg
sbb
add
loopne
mov
push
mov
mov
push
sub
jo
jns
jnp
fsubs
repnz
adcl
dec
and
add
add
mov
pop
std
adc
push
push
xchg
dec
stc
loopne
dec
push
sub
mov
popf
scas
dec
movsl
lret
push
loop
lahf
loop
push
pop
sahf
mov
inc
add
add
xor
pop
imul
sbb
lret
push
mov
enter
push
adc
and
mov
cmc
ljmp
fsubp
add
mov
fnstcw
mov
jo
arpl
cwtl
adc
sbb
mov
add
and
add
add
ret
cmpsb
pop
xchg
les
lea
jnp
sbb
hlt
or
add
add
sahf
test
lods
cwtl
unpcklps
push
in
into
mov
in
xor
fcoml
xchg
add
jle
or
repz
inc
sbb
push
fisttpll
add
xchg
mov
cmp
add
add
add
mov
arpl
mov
insb
add
add
test
shrl
add
add
iret
in
imul
jle
sbbb
jns
xchg
jb
inc
jae
ljmp
mov
and
add
add
jmp
dec
jne
sbb
into
xchg
js
lret
or
shll
add
add
and
inc
mov
ss
jno
and
and
xchg
orl
or
mov
cmpsb
mov
inc
push
mov
mov
mov
lock
xor
arpl
test
js
pushf
xchg
ret
sbb
mov
fwait
clc
mov
ret
dec
adc
push
add
add
add
leave
push
fists
mov
and
inc
mov
add
add
cmpsb
ds
cmc
add
ljmp
mov
adc
adc
or
add
push
movb
push
add
idivb
cmp
adc
mov
add
add
push
or
pusha
add
add
jp
add
add
adc
mov
push
ljmp
cmp
das
or
adc
inc
xlat
stos
aad
xlat
imul
sbb
push
xchg
shlb
pop
add
in
mov
lret
mov
insb
add
add
mov
ret
fdivs
fdivr
imul
aad
pushf
aam
cmpsl
sub
rorb
jno
mov
adc
mov
inc
mov
add
add
mov
pop
out
push
aam
jnp
push
in
dec
imul
mov
frndint
negb
xchg
mov
shrl
test
or
add
add
rclb
mov
or
sbb
xlat
and
int
cmp
pop
xlat
adc
cwtl
mov
push
add
push
dec
add
add
push
or
push
fstl
add
add
add
ds
repz
xchg
adc
add
insb
mov
mov
sbb
mov
iret
pop
pusha
mov
out
dec
jbe
icebp
push
ss
cmp
adc
pop
add
das
lret
lods
pop
cwtl
add
adc
mov
pop
pop
lret
add
inc
pop
out
jle,pt
mov
sbb
sti
dec
mov
jae
dec
add
add
nop
shlb
das
jb
in
cmc
nop
in
incb
add
add
mov
add
add
push
push
bound
in
std
mov
dec
xor
xchg
sub
ds
sbb
dec
add
add
pop
sbb
add
add
dec
pop
nop
push
or
add
add
mov
in
cwtl
adc
jns
xlat
pusha
add
add
out
pop
insl
xchg
xor
cmc
sbb
scas
pop
jge
mov
fistpll
add
cltd
push
mov
add
add
add
sub
js
shrb
jmp
loope
sbb
test
ja
daa
fimuls
add
add
mov
mov
jno
and
add
add
imul
mov
repz
sbb
test
inc
ds
mov
xchg
stos
mov
dec
call
cmp
jecxz
rcl
jae
add
add
mov
push
lret
xchg
rcll
jmp
inc
xchg
fildl
add
add
dec
jnp
cwtl
jno
mov
mov
push
mov
jno
loope
sti
je
or
arpl
add
jmp
cmp
mov
mov
mov
and
add
add
lds
push
lock
add
add
mov
outsl
inc
pop
dec
add
add
add
push
mov
jecxz
pop
jg
or
call
xor
fucomi
cmp
dec
pop
dec
mov
xchg
push
push
sub
and
add
sahf
int3
fnstsw
xchg
fidivrs
out
jb
lcall
jbe
clc
add
add
add
mov
sbb
adc
fdivrs
add
add
pop
pop
icebp
test
lret
dec
add
add
rcll
loop
inc
mov
lahf
sub
ja
inc
mov
or
push
ja
xchg
int
dec
add
add
in
jecxz
xchg
lret
add
add
add
add
lea
mov
jae
mov
in
mov
add
add
add
dec
pushf
mov
mov
add
jne
sbb
je
ss
repz
stc
dec
xor
cld
gs
add
add
mov
mov
sub
in
mov
in
fs
jl
es
popa
js
sbb
inc
arpl
pop
jns
test
jnp
xchg
jmp
add
pop
fmuls
cmp
les
adc
imul
dec
push
je
push
sub
pop
xchg
mov
jle
mov
xor
add
adc
push
sti
pop
xchg
insb
mov
sbb
push
shll
adc
or
movsl
ja
push
fidivrs
push
xchg
push
out
jbe
sub
lods
mov
loopne
pop
ja
inc
jg
stos
mov
mov
lock
add
int3
fldt
jns
hlt
push
push
mov
add
add
dec
fildl
mov
add
out
leave
mov
xor
add
ret
cmpsl
test
and
inc
int3
push
sub
push
mov
xor
jae
sub
mov
xchg
mov
and
lahf
popa
add
ss
jbe
or
add
add
mov
repnz
ss
stos
es
mov
ret
xlat
push
mov
dec
push
pop
lahf
les
xor
add
add
push
cmpsl
jp
mov
loope
fldenv
add
add
ret
popa
das
test
out
bound
adc
std
mov
ret
movsb
jno
popf
inc
loopne
je
sbb
inc
cmpsl
stc
mov
add
rorl
mov
testb
ljmp
and
lahf
jb
adc
hlt
test
push
into
in
sub
cli
mov
add
add
imul
shlb
adc
push
daa
mov
add
add
fisubrs
sbb
int3
pop
add
das
xchg
adcl
jl
mov
mov
mov
add
add
inc
mov
std
aam
dec
mov
loop
pop
in
dec
mov
std
sahf
arpl
add
add
push
jg
cmp
or
mov
iret
into
iret
or
in
mov
jbe
xor
testl
stos
mov
cmc
mov
roll
mov
rcll
xor
add
jnp
sub
mov
xchg
sbb
push
dec
je
xor
mov
popa
lods
pop
xor
movsl
les
lea
add
add
rcll
push
jbe
hlt
xor
lea
push
jge
ljmp
add
add
add
jae
loop
add
add
jle
jl
jne
shll
out
das
ds
daa
out
arpl
cmp
adc
popa
xchg
cmpsl
push
cld
jle
movsb
fstpl
xchg
mov
ret
es
pop
roll
add
in
cmp
inc
xchg
pusha
mov
std
dec
in
add
out
dec
push
sbb
cli
push
mov
or
mov
or
pop
dec
mov
daa
cmpsl
jns
mov
push
aas
dec
inc
mov
bound
std
loopne
outsl
jmp
dec
pop
pop
popf
test
push
cld
mov
ljmp
or
add
add
insb
mov
fsubr
pusha
add
add
sbbb
sbb
jge
gs
xchg
pop
sbb
js
adc
add
add
xchg
mov
add
add
add
in
inc
mov
nop
mov
js
inc
out
into
cmpsl
cmp
cmpsb
test
mov
mov
in
add
mov
adc
iret
orl
adc
clc
jb
sub
xchg
mov
add
xor
inc
adc
mov
stos
pop
scas
imul
add
add
test
inc
add
add
xorb
add
add
add
scas
in
pop
insb
add
add
int3
inc
mov
xchg
mov
jbe
jmp
lods
ud2
in
jno
addr16
cmpsb
orb
mov
ss
cmp
add
pop
add
push
lock
fmul
or
sbb
bound
sbb
pusha
add
add
cwtl
movsl
mov
add
add
xor
outsb
call
std
and
add
add
movsl
cmp
shrl
add
add
daa
inc
mov
fincstp
mov
jnp
add
add
sbb
int
add
add
jns
jnp
push
pop
sbb
mov
sahf
js
stc
push
repz
mov
repz
into
test
sahf
adc
add
add
add
add
mov
addr16
mov
call
xchg
adc
xchg
or
sub
outsb
or
divb
lods
outsb
adcl
movsl
dec
popa
mov
sub
arpl
andl
add
add
push
push
inc
lds
aas
insl
mov
mov
bound
xchg
cltd
add
pop
inc
mov
add
add
outsb
dec
mov
pushf
xor
mov
xor
xor
add
sub
mov
cmp
outsb
or
jecxz
xor
rcrl
and
jns
hlt
add
daa
lods
xchg
cmpsb
xchg
call
clc
ret
push
lahf
or
dec
fisubrs
add
add
outsb
fdivs
test
or
adc
ret
lret
fbstp
test
add
sbb
in
dec
sub
add
add
add
sub
mov
inc
add
add
dec
inc
jg
xchg
cltd
dec
mov
cmp
popa
sbb
dec
add
add
fs
mov
jnp
jno
popa
mov
xor
gs
add
add
mov
sub
or
push
popf
test
sbb
sub
jae
jl
test
neg
xorl
push
push
popa
rcrl
or
cmpsb
sub
add
and
xor
mov
lods
dec
sbb
fnstenv
pop
pop
lock
ja
mov
pop
les
add
add
mov
out
test
xchg
mov
shlb
inc
mov
mov
rcr
icebp
sub
out
cmp
add
add
into
mov
gs
sub
out
mov
inc
imul
add
inc
adc
mov
add
add
xorb
xchg
adc
and
pusha
add
add
pushf
cmp
add
add
add
mov
pop
imul
cs
scas
jo
test
mov
outsl
cmp
add
jle
mov
add
add
sti
clc
testl
add
sbb
sbb
add
add
add
lret
lds
mov
stc
add
mov
mov
dec
jp
or
fstl
lahf
out
jno
mov
cmpsb
shll
lcall
es
or
loope
cli
xlat
into
jg
sarl
repnz
push
xchg
lods
cld
xor
into
pop
jo
cmp
das
mov
xor
add
add
ljmp
pop
shlb
jno
scas
jg
es
lret
stos
push
lods
or
lock
lea
xor
bnd
lds
ja
cmp
pop
ror
ljmp
stos
ret
jbe
mov
mov
aam
and
add
add
mov
add
add
lock
sbb
in
mov
add
add
push
lods
cld
mov
sbb
adc
add
add
xor
adc
xchg
imulb
add
add
xchg
fadds
push
xchg
mov
or
add
add
mov
mov
loopne
scas
repnz
push
daa
sub
add
add
std
stos
add
imul
add
pop
mov
push
xchg
decb
ss
mov
pop
push
roll
cmpsb
lds
mov
pusha
mov
jo
jno
data16
add
add
cld
and
jbe
jmp
ret
mov
or
popf
fwait
xchg
pop
mov
xor
out
cmp
or
add
add
add
jae
mov
ror
pop
sbb
shl
hlt
and
cmp
push
cmpsb
or
add
jge
in
cmp
pop
outsl
fistpll
aam
daa
test
mov
scas
pushf
pop
outsl
jge
jmp
cltd
cmpsl
pop
test
movsb
bswap
jo
lods
fucomp
add
add
add
mov
jecxz
jecxz
jp
or
add
add
jg
mov
js
jmp
dec
adc
mov
lock
ret
xchg
push
inc
add
add
mov
lahf
iret
mov
jb
push
cmp
and
es
and
add
add
fsub
cmp
mov
jle
stc
mov
scas
jo
outsl
sahf
ret
sbb
mov
mov
loope
mov
pop
add
mov
mulb
into
popf
push
mov
add
add
add
mov
stc
aam
or
add
add
mov
sub
add
add
mov
gs
add
add
outsb
stc
jne
push
lret
cmp
shlb
jp
jbe
cmpsb
jg
add
add
inc
mov
mov
pop
test
fmull
dec
call
in
push
inc
mov
jl
mov
mov
add
add
insl
push
int3
lret
in
in
push
sub
xchg
popfw
into
js
adc
ds
adcb
cmovg
sbb
add
add
mov
imul
cmp
sub
add
repz
push
test
add
add
test
in
add
add
ud0
mov
add
add
out
mov
sub
jns
in
push
mov
mov
cs
mov
mov
sub
shr
mov
and
mov
push
fs
aaa
adc
add
shrl
sub
add
add
shlb
jmp
shrl
decb
add
add
mov
bnd
add
add
pop
fisubs
cwtl
ds
and
add
add
mov
aam
mov
popa
add
add
add
cmp
xchg
jp
cli
shrb
mov
add
add
add
popf
mov
pushw
inc
mov
movsl
ret
iret
and
mov
inc
pop
les
add
and
dec
mov
es
aam
mov
adc
adc
pop
add
mov
fidivrl
push
mov
jmp
mov
fbld
add
movsb
xor
mov
test
rcrb
xchg
in
test
ds
out
mov
and
add
add
scas
jo
mov
mov
fistpl
iret
stos
dec
add
add
push
add
pushf
ja
movsl
mov
mov
mov
pop
cmpsl
push
cs
cld
inc
shrb
stos
cmc
lcall
inc
lods
mov
outsl
xchg
push
mov
jg
sbb
imul
push
sub
adcl
mov
add
add
rep
cmpsb
rcrb
or
nop
xchg
into
out
fildll
out
cmp
jnp
daa
xchg
xchg
mov
stc
sub
sub
add
add
adc
dec
aas
sbb
or
add
add
xchg
adc
adc
dec
pop
cltd
pop
lea
xchg
divl
pop
mov
ja
mov
fldt
xchg
ficoml
xchg
out
mov
push
add
add
popa
xchg
fiadds
adc
mov
xor
add
add
cli
pop
dec
dec
mov
mov
add
lea
data16
add
add
and
jne
push
mov
movsl
lock
hlt
pop
and
add
add
add
add
lea
es
stos
pushf
dec
inc
add
add
cwtl
cmpl
leave
cmp
pop
mov
add
push
mov
xchg
out
test
mov
adc
add
movsl
dec
gs
mov
cmp
mov
dec
add
add
push
ret
sbb
add
add
jge
mov
sub
xor
add
add
add
cmp
imul
lock
enter
inc
push
lahf
fildll
dec
mov
pop
mov
and
and
jno
shrl
mov
add
and
pop
repnz
loope
stc
leave
ret
sub
add
add
add
add
or
adc
shl
adc
fstps
pop
push
sub
vandps
jbe
push
or
inc
mov
lret
xor
push
jns
mov
jp
je
push
jle
unpcklps
or
clc
jmp
mov
mov
add
add
scas
sub
add
add
mov
out
adc
movsl
scas
xor
mov
jecxz
filds
shrb
jbe
scas
add
add
add
fwait
cmp
mov
add
push
jns
jmp
add
add
add
add
mov
mov
push
inc
fisubrl
jecxz
lds
add
add
add
rcrl
inc
sub
add
add
xchg
mov
sahf
aad
lcall
out
xor
add
add
mov
mov
ficomps
lock
mov
or
int
out
rcrb
dec
out
in
je
jnp
mov
add
add
mov
jp
mov
xchg
dec
add
add
xor
add
mov
enter
out
mov
push
jp
adc
jbe
icebp
jno
xor
cmp
and
mov
add
add
cmp
cld
rclb
sbb
and
cmpsb
mov
adc
lds
sti
sar
loopne
cld
xor
or
push
sub
add
add
add
add
xor
add
add
fadds
add
addb
adc
mov
and
cmp
push
cld
jge
sub
add
int3
in
pop
imul
xor
mov
add
and
jle
cmpsl
sub
add
add
add
add
add
add
inc
cmpb
lea
mov
adc
fimull
out
inc
mov
add
push
sbbb
mov
mov
test
fst
pusha
mov
movsb
push
pop
inc
mov
add
add
ljmp
ret
sbb
dec
mov
imul
add
addr16
dec
cmpsl
mov
sbb
mov
add
add
mov
xor
test
fwait
pushf
cld
mov
clc
adc
jne
mov
sti
jb
mov
fdivs
insb
mov
test
movb
or
sbb
xor
popl
test
mov
add
add
dec
fsubl
mov
rcll
bound
xchg
rorb
fwait
jmp
mov
add
add
outsb
ljmp
scas
xlat
sub
add
add
add
add
cmp
pop
fimull
add
add
jl
lret
xor
dec
dec
adc
fiaddl
xadd
xor
jge
pusha
mov
inc
adc
add
repnz
in
jmp
lcall
stos
mull
add
mov
nop
mov
mov
out
stos
adc
popfw
daa
lahf
imul
sbb
in
lods
pop
outsb
dec
popf
fcoml
add
xchg
idivl
mov
addr16
dec
cs
repz
jbe
add
add
push
xor
xchg
add
movsl
jl
subb
rolb
push
pop
sahf
or
faddp
lods
aas
movsl
cmp
mov
std
pop
rolb
add
add
xchg
pushf
lcall
xor
cmp
lods
rclb
das
sti
adc
fiadds
fisubs
cmpl
pop
mov
pusha
mov
or
ds
call
add
rcrb
mov
jmp
jb
je
call
sti
scas
mov
pop
jmp
push
add
add
add
mov
fdivs
xor
loop
cmc
xchg
cmpsl
mov
push
and
add
add
and
loopne
popa
call
aas
xlat
mov
mov
ds
add
add
imul
fdivl
add
mov
pusha
mov
dec
pop
inc
dec
mov
scas
cs
leave
call
dec
mov
mov
mov
add
add
in
out
jle
sbb
popa
inc
inc
jbe
push
repz
add
add
cltd
filds
das
insb
add
add
in
push
mov
mov
xor
xchg
add
adc
or
add
add
clc
sbb
mov
add
xchg
and
outsl
aam
stos
or
out
cs
fcoml
add
cltd
cmp
mov
gs
xlat
test
faddl
add
add
loopne
push
xor
and
add
add
dec
or
add
add
cmp
add
add
stos
or
inc
sbb
in
push
push
inc
outsb
cli
out
mov
add
sti
cmp
add
js
hlt
cld
xchg
cmpsl
mov
mov
pop
jo
es
fimuls
pusha
add
add
cld
jno
pop
add
add
pop
out
lods
out
mov
movsb
mov
cmp
sbb
cli
stc
dec
test
fmuls
lcall
add
fstl
pop
dec
mov
data16
xor
and
ss
and
add
mov
and
or
sbb
stc
nop
or
mov
jne
nop
std
add
loopne
imul
sbb
xor
add
add
add
lods
ret
dec
insb
mov
mov
pop
out
mov
add
add
adc
fs
xchg
jle
mov
adc
cs
rclb
pop
shll
xchg
notb
add
ds
jnp
mov
int3
push
stos
movsb
jl
dec
adc
mov
aaa
xor
pop
adc
push
sub
add
add
xchg
add
adcb
dec
mov
inc
mov
cli
pop
cmpsl
xchg
fwait
xor
daa
les
or
add
add
bound
push
stos
jno
and
lods
fsts
inc
mov
add
add
mov
jg
jno
clc
faddl
cli
sarb
mov
xor
clc
add
loope
dec
sbb
jge
in
push
jle
add
add
fldcw
add
add
popa
push
fdivp
mov
inc
fdiv
ret
subl
mov
adc
inc
sbb
cmpsb
stc
push
cmp
add
add
pop
jg
mov
jns
and
mov
cmp
dec
mov
test
mov
or
add
add
ljmp
add
fisubs
add
add
icebp
bnd
mov
in
cmpb
in
mov
clc
push
mov
lcall
rcrb
and
and
fmulp
or
iret
int3
and
fs
fisubrl
mov
aad
aaa
inc
cwtl
mov
cmp
shl
stc
adc
aad
out
leave
push
or
dec
add
add
push
scas
pop
jle
cmc
or
pop
scas
shrb
add
test
add
xchg
xor
fisubrs
mov
mov
add
sbb
pop
fcmovb
and
add
stos
pop
cmc
fs
mov
scas
sub
sub
test
mov
ror
add
pmaddwd
add
add
add
add
test
idivl
cs
add
add
lock
dec
mov
adc
mov
mov
fnstcw
xchg
stos
jo
cwtl
loope
add
add
sbb
add
jne
push
int
cmp
push
adc
and
inc
imul
add
sub
cmp
dec
cmp
scas
cmpsl
mov
lahf
pop
loope
and
or
add
add
cmpsb
push
psllq
add
add
mov
jno
inc
out
mov
stc
shll
jmp
aad
or
add
add
cmp
mov
and
jmp
inc
in
pop
in
inc
fbstp
and
xchg
push
outsb
cltd
lods
outsl
lea
lods
mov
loope
sub
add
add
cmpsb
gs
hlt
jmp
imul
pop
int3
aam
adc
in
and
rcr
jne
out
adcl
into
fdivl
frstor
and
xor
out
mov
add
stos
imul
pop
sub
add
add
in
add
in
and
add
imul
es
sbb
inc
sbb
pusha
add
add
mov
jae
pushf
rcr
sbb
add
add
and
add
add
lods
adc
inc
xchg
sbb
sahf
data16
cmpsb
add
add
sub
lods
fimull
jmp
add
repnz
in
inc
jle
pop
gs
pop
mov
add
add
jns
cld
lahf
adc
adc
enter
and
sti
outsl
xor
cmp
clc
add
add
jnp
jl
cld
cmp
data16
ret
or
mov
mov
mov
inc
xchg
xchg
loop
mov
das
cmpsl
push
adc
xchg
sbb
sub
add
add
pushf
lods
rclb
add
add
pop
mov
addr16
fucom
icebp
pop
push
sbb
insl
dec
xchg
xor
add
add
aaa
fisubrl
xor
sub
sbb
addr16
adc
push
adc
add
add
out
cmp
or
sbb
outsl
mov
aad
cmp
test
sbb
pushf
push
dec
mov
dec
outsl
aad
fiaddl
out
dec
add
add
fnsave
dec
mov
leave
inc
dec
add
add
mov
cwtl
rolb
push
jnp
test
push
xor
pushf
adc
dec
jb
and
add
add
jecxz
mov
ficomps
or
mov
lahf
jnp
stos
push
sbb
sbb
jg
shlb
repz
push
jle
dec
pop
pushf
pushf
popf
push
mov
pop
mov
xchg
or
add
add
out
cmp
or
jne
adc
sbbl
push
les
add
add
sub
add
add
ja,pt
jg
int3
enter
dec
fdivrs
xor
xor
imul
add
add
outsb
and
add
add
stc
adc
mov
jmp
roll
add
add
fildll
mov
add
mov
fistpll
push
or
leave
cmp
jg
mov
add
inc
mov
xchg
stos
xor
lahf
fldenv
mov
mov
js
or
add
add
in
outsl
fwait
push
xchg
cld
clc
adc
inc
mov
std
jnp
aad
je
aam
test
xorl
nop
stos
cmp
ret
lret
dec
lods
ret
aad
mov
add
ds
mov
or
push
dec
out
jne
aam
lods
jg
cmp
xor
mov
scas
xchg
fists
mov
mov
repz
xlat
pop
or
add
add
add
add
loop
mov
shlb
out
cli
hlt
xchg
fwait
icebp
pop
mov
jae
xchg
push
popf
cs
sbb
sbb
inc
pop
jno
cld
test
xchg
pop
fs
bound
add
lahf
xchg
jl
push
es
aaa
mov
outsb
add
mov
adc
add
add
in
cmp
push
add
add
cld
push
fstl
stos
hlt
pop
cmp
mov
hlt
dec
leave
sarb
fcmovnu
stc
add
add
add
fistps
sarb
or
add
add
add
cmp
and
adcb
rorb
add
imul
lds
addr16
lahf
mov
add
add
into
lea
add
rcr
push
sbb
rolb
pop
pcmpgtw
ss
add
add
fucomi
xor
es
roll
push
aam
inc
add
add
sbb
ja
stos
jns
dec
scas
and
push
mov
add
outsb
dec
daa
mov
rorb
add
xorl
imul
add
add
pop
pop
or
call
adc
adc
std
mov
jge
pop
pop
jmp
mov
cmp
add
add
pop
inc
dec
xchg
push
mov
pop
scas
cmc
lds
ficoml
pop
cmpsl
pop
mov
cmpb
pop
mov
lcall
add
add
mov
mov
sub
and
add
add
add
add
aas
xchg
pop
mov
scas
or
add
add
mov
ljmp
popa
out
into
jmp
fsts
js
stos
add
add
jno
xchg
dec
mov
jns
mov
jp
stos
ja
add
add
lret
hlt
imul
popf
sbb
adc
add
add
cs
add
add
add
add
int
push
adc
xchg
inc
mov
dec
sahf
jle
cltd
mov
les
repz
add
js
or
or
add
add
jne
pop
mov
es
fcoml
jo
adc
push
jne
jnp
pop
xor
jno
jp
pop
lcall
sbb
add
add
std
adc
pop
in
add
sbb
push
lea
cmp
dec
push
sub
add
dec
in
xchg
push
insb
mov
xchg
out
shl
int3
pop
xchg
es
lret
dec
pop
jbe
cli
jle
add
and
cmp
cmp
mov
scas
xchg
jnp
xor
in
sarl
mov
fidivs
std
pusha
mov
adc
rcr
out
add
add
les
xor
mov
fsubr
fs
arpl
dec
sbb
mov
das
outsb
ss
add
add
add
movsl
fcmove
out
mov
shl
lret
loope
xchg
fs
dec
fstpt
pop
mov
movsb
inc
iret
aam
dec
scas
sbb
sbb
mov
mov
mov
in
pop
and
popa
or
add
add
jnp
xchg
or
aas
xchg
iret
fildl
in
leave
xor
jne
mov
mov
sbb
jbe
pop
dec
add
add
les
and
add
repnz
add
sbb
outsl
mov
xchg
push
xor
cmp
add
add
mov
xorb
es
dec
add
add
adc
pop
sub
jmp
add
mov
sbb
sbb
js
test
test
push
sar
test
add
add
add
xor
jne
outsl
rcll
adc
mov
xor
std
dec
fisttpll
mov
add
add
cltd
inc
stos
or
enter
stc
push
enter
push
cmp
fdivp
mov
sbb
add
add
add
test
lds
mov
mov
repz
inc
push
ret
inc
mov
xchg
jae
xor
mov
in
push
adc
loopne
cltd
mov
jmp
std
imul
inc
add
add
push
mov
inc
add
add
pop
insb
add
add
pop
rcrl
add
lret
or
cwtl
enter
and
add
add
add
adc
push
xlat
or
add
cs
mov
icebp
xchg
and
jl
lods
aam
xor
in
cld
xchg
out
push
rcll
icebp
pop
add
add
add
and
push
pop
js
shlb
add
add
das
fnstcw
mov
or
push
pop
sub
hlt
inc
mov
je
fbld
add
add
add
add
popf
jns
je
in
inc
inc
lret
pop
xchg
add
dec
inc
add
add
add
add
xchg
orl
js
outsb
xchg
lods
js
or
add
add
add
outsb
or
pop
or
orb
mov
jge
fucomi
xor
mov
loope
push
into
mov
mov
add
push
dec
sub
add
add
adc
add
add
mov
pop
out
mov
inc
xchg
shll
push
xor
call
xor
jmp
push
outsb
inc
add
add
insl
mov
sub
aas
pop
pop
lcall
repnz
mov
or
add
add
and
mov
ficomps
ficompl
out
frstor
jbe
pop
mov
add
popa
or
mov
aas
stos
pop
mov
ds
nop
loop
jns
movsb
inc
mov
call
mov
jnp
pop
xchg
ss
cwtl
shlb
add
add
dec
pop
movsb
ficoml
or
add
add
mov
imul
mov
rcl
mov
mov
add
mov
add
add
adc
add
add
mov
mov
loope
fldt
add
add
cmp
inc
les
lcall
mov
add
add
mov
ljmp
lahf
movsb
adc
mov
hlt
inc
repz
pop
xor
mov
adc
add
fs
dec
cmp
jb
andb
mov
sti
fmull
add
add
sub
add
add
in
jmp
mov
sub
xor
xchg
cmpl
add
add
mov
into
rorb
stos
movsl
fwait
outsl
repnz
lahf
int3
xchg
arpl
out
test
test
xchg
cmc
add
ljmp
jg
add
add
xor
dec
add
add
sti
sub
addr16
or
lods
push
jns
mov
scas
fwait
mov
inc
mov
push
in
clc
loope
mov
mov
lea
adc
push
or
add
add
fcmovb
mov
push
test
jns,pn
cmpsl
or
sbb
fildl
sub
add
add
test
idiv
movsl
dec
add
add
sti
push
dec
push
in
test
ret
push
leave
enter
push
cmp
sahf
sub
out
mov
jbe
jno
add
add
inc
mov
mov
ss
and
loopne
mov
add
add
adc
test
add
add
adc
cld
das
sbb
dec
popf
mov
xchg
push
cltd
aaa
add
adc
repnz
add
add
add
mov
add
add
add
mov
xor
aad
dec
push
push
jle
ss
inc
mov
jg
clc
pop
popf
fiadds
add
mov
enter
pop
adc
sub
xchg
outsb
dec
aas
iret
inc
pop
jecxz
cli
test
dec
adc
push
lret
stos
subb
in
cmc
mov
addl
jae
and
add
add
xchg
fdivl
jecxz
jbe
clc
mov
add
mov
jno
jmp
mov
sub
add
add
add
xor
repz
cmc
mov
add
add
pop
or
mov
pop
pop
pop
arpl
push
push
push
push
mov
ss
mov
je
adc
or
xchg
sub
adcb
push
xor
test
fildl
xchg
stos
cwtl
imul
in
stos
jecxz
xor
ja
or
jne
lea
cwtl
sub
push
cmp
add
add
add
mov
fidivl
add
add
add
or
mov
cmp
dec
cmp
out
out
xchg
lcall
inc
mov
outsl
mov
pop
push
mov
add
push
rcrb
lods
movsb
mov
iret
test
arpl
aam
inc
or
add
add
add
jl
mov
push
adcl
popa
cmpsb
pop
test
jns
mov
sub
call
jmp
in
out
cs
pop
mov
sbb
shl
popf
leave
jp
fildl
cmp
push
mov
pusha
add
add
mov
xchg
mov
loope
jge
jge
xchg
testl
repz
mov
mov
xor
cmp
push
mov
inc
ss
cmp
add
bound
test
ret
add
add
add
xchg
lods
es
aaa
fisubrs
mov
sub
add
add
stos
mov
mov
fists
add
and
stos
jbe
xor
ror
nop
mov
cmp
xchg
mov
in
sti
cmp
js
xchg
add
add
dec
out
sub
mov
add
lcall
test
push
lock
add
mov
fldcw
jl
pop
push
inc
mov
insl
lods
jecxz
mov
add
add
pop
push
add
jb
sti
jns
movsl
pusha
mov
inc
es
sub
push
pusha
mov
aaa
orb
stc
mov
fistl
popf
lret
sub
pop
ficoml
out
mov
mov
mov
xor
fistpll
xchg
in
mov
shll
xor
mov
and
dec
cmp
dec
call
push
jmp
aam
sti
insb
mov
mov
cmp
dec
push
mov
push
fadds
add
add
push
xchg
xor
add
in
call
mov
movsl
push
dec
inc
ss
jnp
jbe
cltd
aaa
push
mov
mov
stc
das
ljmp
decl
add
dec
inc
mov
pop
sbb
pop
and
out
inc
pop
jmp
mov
inc
ljmp
ficomps
out
mov
sub
add
add
add
rorl
cmc
fisubs
mov
mov
and
add
add
mov
add
add
add
add
add
movsb
insb
add
add
hlt
inc
add
add
shlb
gs
mov
mov
hlt
outsl
scas
add
rcrl
les
mov
xchg
in
mov
orl
pop
mov
lahf
icebp
jge
daa
dec
sbb
mov
sahf
dec
rcll
jb,pt
lock
enter
testl
push
dec
dec
add
pusha
mov
fs
push
js
stos
enter
loop
add
add
add
mov
mov
jno
lods
xor
shll
fisttps
add
add
cwtl
movsb
outsl
addr16
xor
add
fnsave
arpl
clc
test
mov
lods
movsb
dec
cmc
scas
or
xchg
pshufw
dec
push
xor
mov
enter
add
mov
sub
add
add
pusha
mov
sbb
push
push
dec
sbb
out
sbb
jl
pop
fwait
cli
mov
shlb
pop
inc
sbb
dec
mov
mov
mov
add
add
or
add
add
ss
xor
out
add
add
ljmp
add
popa
pushf
mov
je
sbb
stos
lret
sbb
into
push
test
lret
subb
mov
jecxz
out
and
jl
jecxz
add
add
rclw
setbe
mov
push
xlat
fdivrs
sbb
pop
dec
add
add
inc
add
add
rcll
mov
cmp
xchg
mov
int3
mov
sahf
xchg
sbbl
and
fs
sub
add
add
inc
dec
sbb
repnz
testb
add
subb
and
add
add
add
add
push
sub
cmpsb
xchg
sbb
mov
scas
cmp
push
fnstsw
call
cmp
add
add
ja
xchg
adc
xor
mov
rolb
mov
sbbb
stos
cmp
jmp
adc
mov
add
add
adc
in
mov
add
and
cwtl
mov
in
imul
add
add
add
mov
ss
sub
add
add
cmpsl
xchg
fisubl
repz
or
mov
jne
or
add
add
jmp
adc
add
mov
loopne
add
mov
enter
push
adc
pop
adc
cmp
dec
nop
push
int
sub
add
add
imul
xchg
stos
and
add
add
pop
es
fcmovb
call
pop
sahf
mov
insl
idivb
movsl
stc
pop
cwtl
jg
mov
aad
loope
lret
gs
add
add
adc
pop
push
cmc
pop
mov
cmpb
xchg
stc
xor
out
dec
or
add
add
movsb
jmp
push
lcall
add
pop
dec
and
sbb
push
jg
adc
add
add
pop
pop
daa
insb
add
add
push
aaa
ds
mov
and
push
dec
cmp
add
add
add
cmpsb
shll
fs
cmp
mov
sarb
aas
xchg
leave
scas
add
push
bound
decl
or
add
add
jo
lcall
jle
add
add
sub
add
add
out
inc
jecxz
adc
roll
xchg
int
jnp
imul
add
add
dec
out
mov
inc
jge
mulb
and
add
add
data16
xchg
fsubp
sub
sbb
ja
cmc
xchg
pop
or
cld
sti
inc
and
push
mov
ss
mov
out
mov
sbb
inc
in
cwtl
out
fsubl
sub
iret
out
sbb
fcmovu
cmp
add
add
or
add
add
ljmp
cmpsl
aas
scas
xchg
inc
mov
cmp
inc
jbe
add
add
sub
nop
add
mov
fnstsw
ja
adc
xchg
mov
add
mov
sub
jl
xor
dec
gs
mov
add
add
rorl
add
sahf
jo
outsl
pushf
mov
mov
add
sar
jae
mov
sbb
out
mov
pop
nop
jns
imul
inc
pushf
sbb
inc
cmc
insl
or
sub
sbb
inc
or
mov
cmp
or
jecxz
mov
fistps
mov
fldz
ficoml
mov
mov
add
add
or
add
add
mov
add
inc
mov
loopne
dec
mov
jge
xchg
jbe
xchg
mov
xchg
push
pop
aam
bnd
cwtl
mov
ret
mov
add
add
pop
mov
push
js
icebp
negb
cltd
movsl
jae
call
int
cmp
add
rcl
movsb
iret
imul
and
add
add
mov
and
fwait
outsl
sub
mov
repnz
xor
sub
ret
inc
shr
xchg
lcall
push
xchg
imul
inc
in
or
mov
adc
shlb
add
mov
dec
jns
leave
fdivl
mov
jae
mov
daa
inc
mov
add
add
sbb
jbe
mov
pop
cmpsl
pop
push
int3
and
add
add
adc
sahf
cli
test
cmp
aaa
push
pop
push
push
scas
jl
mov
mov
xor
rolb
add
int
lods
mov
push
add
add
add
jp
mov
rol
and
cmc
and
add
add
leave
ret
test
add
into
ja
mov
movsb
arpl
jbe
add
in
add
add
outsb
hlt
jecxz
inc
lcall
mov
js
push
data16
or
fsts
fisubrs
add
jle
mov
sub
pop
add
push
push
sub
add
mov
xor
mov
mov
dec
jmp
sbb
out
xchg
or
fwait
mov
ljmp
shlb
incl
scas
enter
mov
mov
imulb
cmc
stc
fdivr
fists
sbb
dec
outsb
and
lret
cld
int3
lock
push
sbb
add
pop
repnz
jmp
clc
imul
sarb
add
add
int
adc
inc
xlat
jmp
xor
add
add
outsl
movsb
pop
push
aad
xor
adc
je
and
add
add
inc
add
cmp
shlb
add
add
xor
mov
mov
add
add
cmp
aaa
cli
fsubrs
add
bound
add
add
loop
cmp
and
add
add
mov
add
cmp
mov
add
pop
inc
inc
and
add
add
ss
aaa
dec
mov
and
add
xor
test
enter
add
add
push
sbb
jb
pop
int3
mov
add
add
xor
stos
insl
fs
or
in
sbb
xchg
imul
int
jae
fwait
push
sbb
rep
jne
adc
sub
adc
cmpsb
jle
cs
sub
mov
add
add
add
jg
hlt
add
sbb
mov
idivl
xchg
repnz
dec
or
arpl
ss
ret
mov
add
add
adc
stc
int3
mov
mov
aad
add
ret
int3
ds
push
cmp
push
cmc
stos
lret
stos
xor
lods
aas
sub
sbb
xor
adc
sub
int3
add
xchg
lods
popa
add
pop
inc
or
pusha
mov
cmp
add
add
add
add
repnz
fimull
mov
and
push
mov
and
out
sub
or
mov
or
pop
mov
inc
add
add
popa
xchg
stos
and
add
add
add
popf
push
lcall
daa
popa
inc
add
add
addr16
repz
popf
push
or
mov
pop
in
dec
jnp
sbb
pop
mov
movb
cld
test
mov
popf
dec
cmc
cmpb
test
lcall
fdivrs
imul
mov
sub
out
adc
sarb
repnz
loop
out
push
popf
mov
dec
call
in
jae
lcall
mov
or
mov
mov
pop
inc
out
adc
mov
push
or
add
add
fldl
fwait
dec
sub
out
ret
cltd
pop
add
add
add
mov
mov
adc
rolb
je
fiadds
rcr
loopne
xchg
inc
insb
mov
popa
roll
adc
push
mov
add
loop
clc
mov
adc
add
test
xor
add
add
leave
lods
push
int
push
pop
lods
mov
adc
call
add
push
inc
mov
mov
jae
mov
push
jl
inc
sti
jo
fimull
jae
add
add
or
testl
sbb
add
add
ja
fimuls
xchg
out
test
test
mov
push
int
mov
add
adc
jne
pop
fisubs
sti
test
shlb
movsl
inc
add
add
jo
add
add
add
mov
add
add
add
sbb
inc
mov
and
add
add
cld
and
push
push
mov
jo
add
sbb
test
mov
cwtl
int3
gs
cmc
cmp
xor
add
mov
andb
test
add
add
sbb
push
sbb
inc
imull
std
rolb
sbb
add
add
pop
int
jmp
pop
sub
cmp
jp
xchg
fwait
pop
fsubl
jmp
shll
add
xorb
icebp
sub
push
push
mov
or
add
add
add
mov
nop
imul
mov
cmp
and
add
adc
ss
adc
fwait
xchg
sbb
loopne
in
xchg
add
gs
scas
mov
mov
push
mull
fistpll
hlt
mov
pause
inc
hlt
xchg
out
lods
lahf
add
repz
bound
dec
bound
add
xchg
xorb
add
add
mov
pop
xor
fadds
scas
push
int3
cli
lcall
add
add
mov
add
xchg
lock
add
add
fistl
or
add
mov
and
and
imull
add
pop
stos
addr16
stos
xchg
jno
push
cs
in
dec
mov
add
add
pop
jbe
add
data16
xchg
mov
testb
and
add
add
push
mov
add
add
dec
pop
sti
lahf
and
cld
add
inc
fsub
jecxz
jmp
clc
adc
push
adcb
nop
mov
aas
js
mov
mov
add
add
mov
mov
add
inc
adc
jmp
mov
and
loop
or
adc
xchg
fwait
push
sub
add
add
cmpb
popf
xchg
ret
fisttps
add
add
sub
add
add
lods
mov
adc
popf
jnp
int
xor
cmp
sub
sbb
mov
mov
add
cltd
in
cs
jo
xchg
add
add
add
add
dec
cltd
in
clc
or
aam
mov
add
xor
add
add
add
iret
sub
mov
je
mov
cli
lods
cmpsb
adc
xchg
pop
into
mov
add
insl
scas
inc
or
add
add
ds
outsl
mov
add
add
pop
js
dec
mov
sbb
xor
or
out
outsb
push
cmc
daa
dec
fwait
pusha
mov
lock
mov
mov
outsl
repz
idivl
push
test
mov
negl
cmp
add
add
into
shll
add
add
inc
js
cmp
pushl
add
add
pop
and
xchg
insb
mov
test
jecxz
and
fwait
inc
jg
jae
test
mov
inc
sub
add
add
xchg
bound
iret
cmpsw
cmpsl
jl
in
mov
mov
repnz
fstl
add
add
adcl
xchg
jae
and
or
lret
inc
add
and
add
repnz
stos
icebp
clc
orl
loop
in
ljmp
std
das
aas
in
cmp
enter
sub
add
add
mov
mov
test
jbe
popa
test
repnz
add
inc
push
dec
mov
mov
bound
fsqrt
ja
aad
insl
sbb
int3
insb
add
add
dec
jge
xor
mov
adc
push
in
xor
xchg
pop
outsl
daa
mov
lcall
lahf
add
xor
dec
mov
cwtl
cmp
lret
adc
xchg
push
ret
push
cmp
dec
add
add
sbb
pushf
sub
add
add
mov
dec
cmc
pop
push
repz
lods
fdivrs
lret
scas
sbb
xor
ljmp
add
or
or
mov
inc
or
xchg
pop
fdivs
shll
sbb
les
mov
add
pop
mov
pop
test
addl
add
out
mov
mov
sbbl
arpl
pop
xchg
add
jno
inc
aam
mov
mov
add
jo
jns
mov
jle
add
add
jge
subb
jecxz
lock
aad
and
pop
insl
in
popl
mov
add
imull
add
mov
fs
mov
sbb
decb
pop
pop
pop
ss
fmuls
loope
adc
xlat
mov
add
add
adc
popa
call
ror
xlat
ror
je
adc
cli
addr16
sub
xchg
inc
repnz
arpl
add
movsl
shl
add
add
add
xchg
test
mov
in
cmp
outsl
lock
out
fimull
sub
dec
xchg
mov
add
lret
shlb
aaa
rcll
call
add
push
jns
int
mov
xorb
xchg
xchg
stc
test
add
add
aad
push
inc
dec
mov
add
pop
lds
push
dec
mov
fldt
and
or
add
add
loopne
pop
gs
test
push
xorl
pusha
mov
outsb
testb
add
add
add
add
scas
dec
fisubrs
mov
add
cmp
mov
cltd
adc
es
cmpsl
repz
add
add
fsubrp
popa
and
fsubrl
jae
jno
loop
add
add
xor
mov
mov
mov
cmp
rorb
add
add
sarb
test
inc
push
inc
adc
imul
mov
lock
xor
add
add
add
cltd
mov
test
add
add
aaa
test
es
int3
fidivs
add
add
or
add
add
mov
pop
rcr
mov
ficoms
test
add
add
xchg
fiaddl
or
test
outsb
cmp
add
sub
xlat
inc
mov
add
or
ds
adc
dec
scas
mov
fbld
inc
loopne
test
int
ds
add
add
cmpsl
or
add
add
call
mov
sub
mov
sbb
cmpsl
mov
inc
ss
jae
call
ffreep
cmpsb
mov
cmp
or
add
test
push
ja
sub
dec
add
add
jge
stc
loope
jge
aaa
enter
or
add
int3
xor
cmpsb
fisttpl
add
jp
sub
jmp
mov
push
popf
aaa
jno
stos
fistpl
pushf
xchg
call
testl
cli
sbb
add
add
insl
mov
add
jecxz
push
rorb
mov
push
pop
mov
fisubrl
add
add
add
fisttpll
loope
pop
pop
sbb
adc
xor
cmp
in
mov
pop
arpl
cmpsb
cmc
and
xchg
shrb
cmp
dec
mov
adc
add
add
add
rorb
xor
cmp
xchg
test
xor
mov
hlt
dec
add
add
pop
jne
sub
jne
add
add
imul
push
mov
inc
std
dec
outsl
jo
repz
mov
gs
and
cmp
es
cld
pop
pop
fs
fisubl
les
dec
push
jo
mov
lock
dec
or
xchg
repz
mov
pop
and
add
add
dec
mov
mov
add
popa
sub
add
add
cmp
add
add
mov
mov
std
daa
inc
jbe
or
add
add
fwait
loope
inc
fs
cmp
add
add
test
pop
xor
mov
iret
xor
add
add
add
add
add
add
out
xchg
insb
mov
scas
sbbl
mov
out
mov
in
stos
outsl
lea
push
shlb
add
add
push
mov
movsb
lret
mov
add
pop
popf
xor
or
and
cmpsl
dec
pop
imul
add
sbb
in
inc
pop
jl
pop
push
mov
cwtl
gs
inc
scas
rorb
into
ja
push
pop
push
pusha
mov
mov
lret
js
mov
adc
clc
mov
add
add
sbb
mov
pop
mov
or
inc
cmp
call
mov
add
add
add
add
out
add
add
add
outsb
aam
sti
in
aad
cmpsl
fucomip
mov
xorb
and
add
add
fcoml
cmp
add
add
fstp
inc
mov
and
jnp
ja
movsb
jl
push
jnp
mov
jne
mov
jo
fstp
nop
out
ds
hlt
xor
mov
mov
mov
cmpsb
inc
ds
xor
popa
jne
addr16
sarb
lods
fisubrl
pop
pop
jl
xchg
arpl
fidivl
add
add
add
out
xor
cmp
add
add
mov
aad
jp
inc
lret
loope
push
mov
or
cmp
xchg
mov
mov
out
fimuls
push
ret
jno
aaa
hlt
xor
pop
ror
rolb
add
sbb
mov
orb
add
pushf
pop
aaa
and
mov
push
int
mov
mov
data16
xor
mov
imul
int3
test
dec
mov
dec
mov
inc
mov
mov
adc
ret
outsl
fs
mov
addr16
gs
mov
inc
push
mov
enter
jae
adc
add
stos
lds
lret
loope
xor
cs
insl
js
xchg
cmpsb
into
sbb
add
mov
add
add
inc
mov
xchg
xchg
mov
cmp
clc
fdivs
sbb
rcl
fmul
adc
xchg
mov
outsl
insl
shrb
adc
rorl
mov
mov
mov
push
push
call
add
add
mov
addb
mov
or
call
mov
out
out
pop
mov
xor
pop
scas
movsb
jle
dec
sbb
pop
dec
ds
add
lret
jno
push
clc
jecxz
pusha
add
add
idivb
filds
ljmp
add
add
add
xchg
jb
iret
dec
jbe
sahf
fcmovnb
gs
mov
push
outsl
scas
pop
addr16
pop
adc
js
sub
mov
ja
mov
push
fildl
out
cwtl
dec
inc
mov
cmpsl
les
clc
push
lds
add
add
testl
mov
cmc
pop
das
pop
or
or
sbb
mov
cli
inc
add
add
pop
pop
scas
stc
sbb
cmp
pop
xor
add
add
test
add
add
out
push
fcompl
ss
sub
pop
xor
mov
xor
jg
popa
dec
mov
test
add
inc
sbb
add
adc
mov
push
lret
or
mov
xor
add
cmp
int3
pop
cli
or
add
add
dec
or
lahf
inc
mov
daa
insb
mov
jns
fstl
inc
popa
dec
leave
adc
js
add
test
cltd
sbb
mul
ret
test
fwait
sub
mov
or
hlt
pop
ficoml
dec
bound
add
scas
scas
aam
and
add
add
ficompl
xor
add
fcomi
mov
add
add
lods
mov
inc
loope
jb
cmpsl
lcall
inc
icebp
xchg
or
add
add
in
mov
push
mov
dec
pop
cmp
adc
push
xchg
test
mov
mov
dec
mov
test
mov
sbb
fpatan
xor
cmp
lods
in
loopne
mov
xchg
add
add
add
daa
stos
fmuls
sub
jae
push
cld
in
add
ret
lcall
xchg
jecxz
scas
adc
jl
icebp
add
add
add
pop
movsb
push
dec
roll
inc
inc
mov
jne
inc
test
icebp
nop
cmpsb
repz
ret
dec
aas
test
or
pop
out
fildl
test
add
add
xchg
mov
xor
dec
hlt
fiaddl
dec
pop
icebp
out
ljmp
push
sbbb
ret
and
add
add
and
sub
add
add
add
add
pop
lahf
jno
dec
mov
into
stos
rcr
movsb
test
stc
pop
add
test
jnp
xlat
lea
push
mov
movsb
fs
lcall
cmp
sub
and
add
add
sti
or
add
add
leave
dec
mov
imul
loope
push
jecxz
push
dec
lods
lret
pop
jmp
jle
rclb
mov
push
adcl
int3
cmp
xchg
add
pop
jo
add
cmc
cmpsl
insl
push
ja
sbb
mov
inc
add
add
cltd
mov
mov
mov
inc
cmp
loop
leave
push
nop
and
mov
je
mov
add
add
jnp
xlat
add
add
add
dec
aaa
loopne
add
dec
add
add
gs
adc
add
add
inc
into
aas
and
loopne
push
fnstsw
jmp
add
or
scas
mov
push
jae
xor
aam
fimull
mov
jae
dec
mov
cmp
mov
jmp
scas
pop
iret
or
push
push
dec
mov
mov
repnz
arpl
aaa
pop
je
or
loopne
sti
xlat
inc
add
add
ret
call
test
xchg
and
xchg
test
jecxz
fsub
std
cmp
stos
sbb
mov
inc
mov
dec
icebp
inc
pop
mov
repnz
pop
pop
cmc
hlt
ja
add
add
add
leave
cmpsl
and
push
and
mov
subb
push
jg
mov
cmp
mov
mov
in
invd
mov
add
add
addr16
mov
arpl
add
add
or
mov
xchg
loope
ret
xor
repnz
or
jl
loopne
ljmp
sahf
push
js
xor
call
add
add
mov
sarb
pop
mov
cmp
loopne
pop
insl
push
mov
xchg
setns
sbb
inc
inc
dec
sub
lret
or
jae
iret
adc
jo
add
mov
add
add
add
push
and
rcrb
mov
cltd
xchg
mov
test
rep
add
add
test
mov
dec
addr16
jl
mov
xchg
out
lods
test
add
cmp
or
add
add
sub
add
xchg
ja
stos
inc
cltd
cli
clc
jg
push
stos
push
nop
mov
add
mov
pusha
add
add
movsl
jns
pop
stc
mov
addl
cmp
mov
jecxz
xchg
cmp
les
aas
shl
pop
mov
add
add
add
jae
xor
out
imul
mov
mov
cmp
addr16
pop
movsb
in
pop
cmp
or
adc
in
jno
xor
and
add
add
int
or
sti
popf
gs
add
add
add
or
push
aam
insl
fwait
or
mov
add
add
out
aad
insl
pop
inc
out
mov
andb
popa
push
inc
jl
sub
sar
les
add
adc
inc
or
jo
sub
fcmovne
ret
xor
add
add
insl
cmpb
push
fcoml
loopne
push
dec
mov
shr
push
hlt
or
add
add
lea
push
call
or
jno
negl
test
cmp
lahf
imul
or
add
add
push
test
xor
test
mov
out
jg
in
mov
push
idivb
shll
xchg
aas
std
clc
repz
or
mov
and
or
into
push
xor
or
int
add
add
add
xor
jns
xchg
sub
add
add
add
add
sub
add
add
push
adc
sti
push
pop
pop
cmp
scas
popf
test
loop
mov
dec
jne
sbb
scas
jecxz
push
aaa
xchg
push
jle
les
dec
ror
out
mov
shrl
add
push
repnz
push
stos
push
leave
push
sub
add
add
out
loop
jle
dec
mov
icebp
cmpl
sub
add
add
arpl
sub
fwait
xchg
and
add
add
mov
out
jbe
mov
mov
jnp
data16
xor
mov
popf
int
xor
cmc
rolb
xorb
or
add
add
inc
mov
lcall
ret
add
adc
xor
ds
pushf
sbb
in
aaa
in
iret
pop
enter
inc
add
add
add
add
add
add
test
sbb
jge
add
test
lods
push
push
imul
add
add
or
mov
test
xor
mov
add
add
dec
ret
roll
mov
mov
xor
test
dec
imul
fisubrs
add
add
bound
xchg
pop
sub
add
add
imul
xor
dec
fimuls
das
mov
mov
add
add
aaa
sub
stc
in
arpl
inc
test
aaa
dec
sti
out
int3
dec
pop
add
jle
in
mov
mov
add
add
add
xchg
idivb
ja
jnp
frstor
bound
xchg
add
in
push
cmp
call
loopne
cld
xchg
and
lock
nop
pop
dec
call
add
sbb
int
push
mov
jmp
add
add
mov
mov
shl
pop
dec
sub
and
add
add
out
pop
pop
jo
aas
cmpsl
das
xchg
gs
pop
cmp
cmp
push
jbe
dec
add
sbb
rorl
add
into
cmp
in
lcall
add
jo
rclb
repz
pop
hlt
or
xlat
mov
add
add
dec
or
cmpsb
pop
stos
stc
dec
add
add
or
aad
mov
les
sbb
sub
add
add
jnp
push
rcrl
cmp
pop
and
mov
mov
add
scas
mov
pop
pop
push
inc
mov
pusha
add
add
mov
aas
aad
xor
lock
mov
fwait
mov
sbb
lds
mov
add
or
add
add
add
add
in
imul
dec
lret
sbb
shlb
pop
dec
add
add
push
dec
push
icebp
push
leave
ret
mov
add
add
inc
lea
mov
mov
push
negb
movsl
cmp
add
add
jb
cmp
and
add
add
cwtl
rclb
loop
lods
xor
movb
add
add
call
cmp
xchg
cmp
ss
das
loope
and
test
ljmp
cmp
and
add
add
jb
or
add
pop
ja
xchg
dec
in
mov
adcl
push
mov
adc
imul
add
add
std
neg
rclb
sub
xlat
orb
cmp
arpl
push
sub
add
add
add
add
push
int
je
call
add
add
lret
push
loopne
inc
dec
sub
add
add
inc
push
arpl
sbb
pushf
scas
jl
adc
icebp
stos
test
add
jmp
mov
add
add
sub
add
add
pop
jge
jno
push
push
sub
add
ja
jmp
lret
pusha
add
add
out
inc
mov
pop
mov
jp
addl
add
add
add
movsb
pop
mov
add
add
push
mov
pop
push
mov
scas
cmp
xor
xchg
jp
mov
inc
jecxz
sub
mov
add
aaa
js
xchg
xor
push
mov
cmp
fdivl
mov
inc
add
add
ja
xchg
add
add
and
sbb
add
add
pushf
in
inc
xchg
lock
arpl
add
add
add
jl
icebp
dec
cli
pop
fdivl
xchg
divl
add
add
cwtl
ficomps
add
add
mov
adc
xchg
inc
jp
inc
jb
ljmp
inc
mov
jo
mov
mov
aas
hlt
mov
rcrb
add
mov
push
jl
call
adc
outsl
pop
shr
fistpl
clc
and
add
add
fwait
mov
add
add
sbb
cli
push
arpl
add
add
lahf
arpl
or
cld
movsb
cmpsb
mov
and
jge
iret
mov
call
dec
push
ret
jae
sub
xchg
cltd
stos
adc
jg
in
jl
push
xor
arpl
movsl
pusha
add
add
mov
bound
not
jge
aaa
push
jecxz
sub
outsl
inc
sbb
add
stos
xor
in
mov
add
sbb
mov
loopne
aas
out
das
adcb
push
cmp
mov
or
fdivs
sarl
add
add
adc
add
add
repnz
jl
aam
jg
divb
add
add
pop
xor
sub
cmpsl
int
arpl
adc
shlb
add
mov
outsl
push
pop
ljmp
add
add
imul
and
push
inc
jg
jecxz
mov
cmp
orb
mov
int
inc
add
add
push
icebp
sbb
bound
push
js
jnp
fbstp
add
movb
jb
pusha
add
add
push
or
mov
sti
int
push
add
add
lea
repz
sbb
cld
mov
fs
cmpsl
sub
cs
adc
les
jle
and
add
add
sbb
cmp
xlat
in
imul
cmp
pop
cmp
repnz
xlat
gs
mov
add
add
lcall
cmc
test
les
std
sub
add
add
and
jg
fcmove
int3
jns
pop
jb
add
add
xor
or
add
add
dec
dec
mov
shrb
sub
mov
or
fstp
pop
es
fwait
test
sub
fildl
push
add
add
mov
pop
cmpsb
add
add
add
mov
pop
push
push
pop
pop
jl
and
jg
imul
push
mov
iret
das
mov
push
cltd
and
add
add
adc
enter
jecxz
mov
aam
mov
scas
dec
cmp
lods
xlat
int3
out
imulb
aad
into
test
mov
aad
sbb
pushf
or
mov
lret
dec
add
add
mov
mov
jp
test
insb
mov
add
xchg
mov
add
add
mov
add
add
aaa
xchg
add
shl
sbbb
mov
add
or
mov
adc
xor
jmp
xor
inc
pop
lret
mov
stos
inc
mov
xchg
movsl
and
movsl
push
imul
push
fidivrl
jmp
add
add
ljmp
insb
add
add
or
push
bnd
stos
sbb
dec
add
add
add
fisubs
add
add
dec
cmp
ret
jge
addr16
add
cmp
add
sub
or
leave
fwait
pushf
sub
movb
add
add
aaa
test
fbld
jmp
cwtl
or
add
add
cmpsl
mov
pop
pop
dec
sbb
fdivr
aaa
jmp
add
dec
push
cmp
mov
addb
int3
inc
and
add
add
mov
push
lcall
in
xchg
shlb
mov
arpl
push
jno
pop
bound
lahf
dec
xchg
jb
mov
push
cmp
rcr
dec
mov
mov
xorl
hlt
pop
xchg
subl
test
dec
mov
es
xchg
jbe
gs
mov
mov
cmpsb
ret
pop
xor
sub
nop
lcall
add
add
push
add
add
ret
daa
in
dec
aas
sbb
push
ljmp
add
add
fstps
jecxz
add
pop
movsb
push
xchg
mov
mov
add
add
and
xchg
xchg
das
xor
rcll
sub
adc
jb
push
xchg
and
add
add
cmc
cmp
or
add
add
adc
xor
mov
mov
aam
shll
leave
xchg
popf
xor
cli
or
add
add
cmp
mov
cs
push
es
jns
mov
iret
js
sbb
adc
xchg
ja
add
test
adc
sub
add
add
sti
lcall
add
add
add
add
add
jo
mov
push
adc
in
or
mov
jmp
xorb
sbb
xchg
and
out
les
push
lock
push
cmp
and
test
mov
mov
sahf
rorl
mov
jmp
cmp
lea
xchg
mov
add
mov
sbb
cmp
ftst
cmp
mov
jno
call
add
add
fisubrl
add
add
and
add
repnz
cmp
mov
inc
mov
mov
cmp
sub
xchg
pop
mov
test
jg
dec
mov
push
negb
add
add
mov
js
out
or
add
add
xor
inc
xchg
add
add
clc
or
int
mov
mov
in
adc
hlt
jo
add
add
pusha
add
add
lret
pop
outsl
cmp
loop
pop
cmp
mov
xchg
sahf
mul
add
sub
ds
pop
mov
in
inc
clc
sub
cmp
adc
xor
and
pop
loop
dec
or
push
std
test
sarb
mov
into
add
sub
add
add
into
ss
ja
sub
fsubp
push
clc
xchg
push
xor
push
int3
loop
ds
lcall
dec
cmp
ret
lods
data16
mov
lahf
add
and
lock
les
add
add
add
out
sub
xor
lods
pop
hlt
mov
fdivrl
add
add
lods
mov
push
ljmp
ljmp
into
cltd
mov
stos
shll
mov
shll
add
add
andb
dec
mov
mov
and
mov
xchg
shr
std
leave
mov
jae
adc
adc
js
jnp
add
add
mov
mov
sbb
add
add
add
jecxz
add
add
mov
lock
add
loop
mov
hlt
jecxz
cmpsl
notb
mov
aas
adc
adc
loope
arpl
cmp
mov
add
add
add
fldcw
enter
adc
pop
push
pop
les
mov
add
pop
xchg
sub
add
add
mov
push
imul
cmc
cmpsl
add
int
das
mov
add
add
mov
mov
arpl
fdivrl
hlt
push
addb
add
int3
mov
icebp
bound
add
add
jmp
push
ja
xchg
test
rolb
ja
in
call
mov
or
add
jl
ficoml
mov
push
fiaddl
in
xor
sub
call
fldl
add
add
std
je
clc
mov
add
data16
sub
add
add
popf
push
dec
push
test
sbb
xlat
test
test
dec
mov
mov
rclb
mov
out
mov
iret
insb
mov
push
movsl
shll
mov
mov
loopne
je
push
in
cmp
dec
fcompp
dec
xlat
xchg
iret
nop
popf
sbb
cmp
cmp
hlt
jg
mov
icebp
mov
xchg
push
inc
jp
mov
mov
add
test
in
sbb
jmp
mov
divb
push
std
sub
loopne
adc
sub
add
add
mov
subl
mov
push
xor
push
mov
movsb
lods
repz
fistpl
jnp
sub
push
pop
mov
add
add
jmp
add
add
aaa
stos
add
mov
and
xlat
sbb
test
inc
les
test
insb
mov
xchg
in
cmpsb
xor
pusha
add
add
outsb
cmp
cmpsl
es
icebp
mov
add
add
imul
add
add
jl
stos
dec
mov
filds
test
inc
add
add
mov
jmp
loop
out
add
add
out
add
pop
sub
add
add
inc
and
cmc
pop
cmp
add
add
mov
jno
adc
shrl
js
insb
add
add
sub
add
add
test
das
push
dec
or
lret
push
and
push
scas
push
lds
xor
xchg
xlat
test
scas
sub
xor
mov
add
add
add
fs
dec
add
add
add
add
xchg
fs
int
fstpt
mov
add
xor
adc
and
mov
lret
adc
xchg
mov
xor
stos
dec
mov
rolb
cld
xchg
sub
add
add
inc
mov
cmc
scas
pop
add
mov
cmpsb
xor
add
add
push
mov
add
das
mov
sbb
dec
cmpsl
jnp
std
dec
mov
mov
inc
mov
fwait
add
std
aaa
push
imul
leave
dec
es
test
xchg
xlat
adc
adc
pop
shll
add
mov
jl
dec
int
adc
pop
nop
or
mov
gs
adcb
pop
inc
mov
inc
inc
add
add
jp
mov
arpl
add
add
mov
mov
cmp
jl
stc
clc
push
aad
adc
mov
pop
sarl
cmpsl
iret
jmp
add
add
in
and
add
add
fisubl
add
add
icebp
movsl
pop
jge
pop
sub
push
lds
outsb
shrl
push
cmp
insl
pandn
aas
addl
aaa
je
add
add
pop
imul
mov
test
xchg
outsl
shlb
push
or
add
rcrl
and
add
add
mov
xlat
ljmp
jge
jae
push
mov
mov
cmp
mov
aaa
arpl
and
jbe
test
mov
sbb
push
jbe
gs
nop
lds
mov
adc
or
lock
add
add
xchg
mov
jae
shrl
andb
add
aas
add
xchg
stos
js
mov
das
leave
sbb
gs
in
jmp
cmp
je
xchg
out
mov
xchg
pop
jmp
rorl
add
add
test
mov
movsl
push
call
jnp
outsl
int
mov
mov
out
out
adc
cli
xor
dec
arpl
leave
lods
or
add
add
add
add
jg
mov
mov
add
add
rcl
sub
cld
sub
sub
push
add
adc
dec
out
xchg
mov
sub
popa
mov
add
add
shrb
pushf
cmp
sub
add
add
inc
aad
add
mov
mov
lods
lret
pop
pusha
add
add
rcr
fidivs
or
imul
add
xor
test
dec
sti
add
xor
mov
in
and
iret
pop
cli
lods
bound
add
clc
mov
aad
add
add
add
add
push
jns
in
std
push
test
sbb
ss
and
sahf
testb
pop
jne
pushf
push
xor
mov
addb
push
cmp
nop
outsl
outsb
cld
jno
imulb
dec
add
add
push
mov
jno
pop
inc
jg
push
repz
fucomip
adc
mov
ret
fldcw
add
add
dec
jb
add
add
pop
xchg
call
subl
add
add
sub
add
add
icebp
jl
ss
mov
add
mov
aad
jns
push
call
sbb
dec
push
mov
lock
fldt
inc
add
add
dec
je
pop
dec
add
add
jo
mov
mov
cmpsl
ret
stc
les
cmp
push
lock
in
push
test
or
mov
dec
xchg
outsl
lods
loopne
mov
xchg
mov
add
add
mov
shrl
pop
mov
cld
test
test
cs
and
add
mov
test
sbb
add
add
sarl
mov
insl
stos
loopne
inc
mov
inc
loopne
adc
fwait
inc
add
add
bound
xchg
push
xor
cmp
imul
add
add
add
mov
sahf
lods
add
sbb
jp
std
push
stc
mov
adc
mov
push
add
lods
lods
jle
scas
mov
push
dec
push
jge
out
leave
sbb
xchg
test
mov
rclb
pop
or
hlt
sub
and
add
add
scas
push
inc
push
xor
xchg
mov
emms
repnz
icebp
mov
mov
xor
cmc
mov
add
add
mov
and
add
sub
xchg
adcl
pop
inc
mov
add
icebp
jo
sub
add
add
jge
shlb
add
enter
add
xchg
jne
pop
cltd
test
scas
fistpl
jg
sub
push
fsubrl
pop
cmp
add
add
hlt
xchg
fdivs
in
in
dec
mov
inc
inc
push
jo
dec
pop
aad
in
int
add
xlat
test
adcl
cmp
cli
xor
fiaddl
in
sbb
dec
loop
adc
add
add
fistps
das
in
jbe
inc
jle
decl
mov
sub
add
add
icebp
pop
inc
jno
cmp
test
add
add
mov
jge
sti
jbe
dec
in
xchg
push
push
add
popa
add
add
add
pop
dec
push
stos
pop
jne
lret
or
add
add
insl
mov
cmovs
ffree
faddl
jmp
push
mov
xchg
pop
dec
or
ja
sbb
push
repz
lock
andl
shl
insl
ret
xorl
icebp
imul
sbb
jg
js
in
imul
inc
cmpsb
push
push
lods
inc
xchg
or
fs
xor
js
call
cmp
add
add
mov
xchg
sub
out
out
lea
pop
daa
cmovle
shl
xor
add
add
add
xchg
cltd
or
add
cmovl
add
add
dec
mov
int3
pop
cmpl
decl
add
lret
jl
stos
pop
dec
fdivrs
lods
xchg
neg
mov
add
add
mov
movl
adc
scas
bound
cmp
mov
cs
jo
dec
push
enter
adc
add
add
loope
fiadds
add
call
cltd
outsb
addb
add
cmp
mov
ror
mov
in
pop
fsincos
shrl
and
add
add
add
add
xor
imul
dec
add
add
xchg
outsb
and
add
add
pop
ret
mov
scas
inc
mov
or
xor
or
add
add
mov
xchg
popa
pop
mov
insb
mov
xchg
pop
push
rcll
jbe
xor
pop
cmc
clc
cmp
les
pop
data16
xor
shl
sti
adc
add
cmp
jno
inc
push
dec
jmp
add
add
or
aaa
sbb
mov
add
jmp
add
add
jmp
ljmp
frstor
add
add
add
add
sbb
or
insb
add
add
fldl
rorl
das
xor
insl
cmc
sbb
mov
sbb
gs
add
jnp
push
and
add
add
movsl
icebp
pushl
add
sti
cwtl
mov
mov
out
mov
xchg
test
rcll
dec
fcmovu
or
add
add
sbb
mov
out
aad
fldl
insl
out
mov
out
fwait
xchg
test
xchg
psubusw
add
push
aaa
inc
shlb
pop
mov
add
cwtl
push
or
add
add
and
xlat
xlat
inc
add
add
jbe
lods
or
add
add
leave
imulb
mov
cmp
lds
sbb
add
add
add
lods
adc
lahf
add
aad
mov
pop
add
add
add
xor
add
add
jno
jne
insl
mov
xor
push
cmp
xchg
xchg
mov
add
in
movsb
sub
lods
in
mov
arpl
xchg
mov
jae
insb
add
add
imul
int3
mov
loopne
add
add
add
cld
xchg
faddp
ja
xor
jmp
mov
dec
js
js
clc
fs
mov
outsl
lock
xor
mov
cli
adc
xchg
dec
clc
push
and
sbb
mov
cld
movsb
mov
add
add
outsb
jmp
blcfill
and
mov
adc
xor
or
mov
lock
in
stc
xor
mov
xchg
lret
data16
pusha
add
add
cltd
dec
mov
mov
jo
in
stc
cltd
loopne
popf
loop
jecxz
xchg
repnz
jbe
mov
cltd
rorl
or
insl
xchg
mov
add
add
popa
inc
clc
inc
mov
mov
insl
lahf
dec
push
adc
mov
mov
add
test
push
add
add
add
push
stos
cmp
int
mov
lds
add
add
add
push
dec
loopne
sbb
movsb
adc
add
outsl
nop
dec
dec
add
add
add
sub
int
pop
fs
cmp
int
ret
and
loopne
mov
add
mov
cld
aad
jle
and
mov
pop
test
out
or
inc
js,pn
push
imul
test
jmp
jl
sub
add
add
add
add
add
xor
add
add
cmp
inc
mov
clc
loop
add
jge
in
pushf
mov
mov
mov
enter
addr16
pop
pop
dec
cld
xchg
mov
pop
jl
iret
aad
push
std
push
xchg
inc
ja
pop
das
aad
mov
testl
repnz
stos
xor
dec
or
gs
sub
add
add
cld
xchg
pop
jle
mov
add
jnp
in
sbb
arpl
or
mov
out
sbb
add
add
or
mov
add
add
cmp
lret
adc
mov
cld
int
mov
mov
loopne
lock
dec
les
frstor
add
jge
push
outsl
sub
push
loopne
test
pop
dec
inc
int
out
sub
or
cld
xlat
stos
xor
add
movsb
fiaddl
or
cmpsl
out
fadds
add
repz
mov
insl
xor
insl
push
notl
sub
add
add
jae
cmpsl
add
fistl
mov
push
mov
xchg
mov
mov
sub
add
add
add
add
jns
mov
daa
sti
adc
pop
or
mov
nop
cmp
mov
ljmp
fimull
mov
imul
jmp
xchg
pop
cmp
repz
pop
lret
ds
push
add
cmp
daa
push
xchg
jae
shll
sahf
lock
pop
fsubs
add
add
cmpl
mov
mov
leave
decl
mov
adc
imul
add
cmp
mov
pop
test
fwait
scas
add
dec
mov
or
mov
add
add
mov
or
sbbl
mov
jge
jo
out
sbb
mov
dec
xchg
add
icebp
es
dec
add
add
mov
mov
cmp
dec
add
sub
inc
or
add
add
add
add
mov
std
mov
arpl
ss
and
and
ret
inc
dec
das
movsb
pop
xchg
xchg
sbb
dec
add
add
add
nop
mov
rorb
mov
or
add
add
loop
xor
pop
imul
pop
out
bound
add
mov
jl
mov
sti
inc
mov
nop
aad
mov
test
add
add
push
push
repnz
adc
popa
push
loop
andl
fisubl
icebp
loop
adc
idiv
ja
mov
sbb
cmpsl
cmpsl
xor
push
fcomp
test
dec
add
add
gs
dec
mov
lcall
pop
xchg
or
xchg
jecxz
or
add
add
add
in
mov
adc
xchg
nop
cld
aaa
sar
add
add
lods
cmpsl
loop
loopne
sbb
lret
stc
inc
aaa
ja
mov
xchg
js
lahf
xchg
and
dec
pop
cs
lds
xchg
ret
and
pusha
mov
leave
les
xchg
inc
jo
negb
ljmp
cltd
imul
test
adc
push
xchg
sub
out
inc
adc
add
test
sarb
dec
xchg
or
iret
jb
jle
jb
mov
mov
inc
mov
pushl
jb
repz
shr
orl
shl
push
repz
add
add
repz
inc
stc
cmpsb
jno
adc
add
mov
jne
iret
pop
mov
out
push
gs
test
jno
sti
leave
pop
sub
add
add
inc
mov
mov
mov
imul
add
sub
insl
in
mov
add
dec
jo
fiadds
jmp
dec
pop
dec
mov
icebp
dec
clc
inc
xchg
outsb
sahf
jbe
shrl
add
add
pop
test
sahf
adc
sbb
inc
jecxz
mov
lcall
sbb
jne
gs
mov
jmp
int3
jl
pop
sub
add
add
mov
dec
mov
mov
jb
test
push
ds
cmp
xor
das
add
in
dec
cmp
stc
lcall
mov
xchg
imul
xchg
mov
inc
jmp
scas
push
lods
data16
mov
rcrl
sbb
mov
movhps
xchg
outsb
outsl
inc
sarb
add
add
clc
mov
adcb
jle
ret
jecxz
inc
testl
fwait
xchg
inc
cmp
xchg
insl
sbb
add
add
add
jl
std
xchg
and
scas
mov
jne
inc
cmp
dec
mov
sub
test
add
add
pushf
lahf
mov
xor
les
call
add
add
add
add
xchg
cltd
sub
add
add
push
stos
cmpsl
pop
stos
dec
fwait
jmp
sub
add
add
js
mov
pop
sub
add
add
test
pop
adc
add
add
mov
mov
cmp
or
fs
push
insb
mov
adc
in
inc
popf
cmc
pop
gs
test
push
icebp
jno
adc
jp
add
add
outsb
dec
mov
add
cld
loop
sub
add
clc
fsubs
cmpsl
sbbl
punpckhdq
in
das
xchg
sbb
xor
add
add
clc
xchg
mov
int3
test
hlt
adc
jl
mov
push
inc
pusha
add
add
sarl
outsb
mov
cmp
jo
enter
mov
xchg
jno
fisttps
add
add
xor
push
push
popa
mov
pop
pushf
mov
ja,pn
nop
inc
add
add
out
mov
push
sbb
fnstsw
hlt
mov
jl
pop
cmpsl
push
cmc
push
xacquire
add
add
rcrl
mov
mov
adc
mov
cmp
pop
mov
loopne
add
add
scas
mov
add
add
add
jne
shlb
jg
lcall
dec
sub
add
add
aaa
pop
mov
jo
adc
andl
add
cli
in
cmpsb
xor
lcall
add
add
and
jb
and
mov
push
sbb
add
add
pop
cwtl
pop
lahf
add
ja
mov
jne
mov
mov
add
add
add
adc
mov
insb
mov
cli
lahf
pop
idivb
pop
aaa
sahf
rorb
int3
jmp
sbb
negl
data16
add
add
add
les
pop
movsl
out
jl
and
cmc
insb
mov
jne
rorl
hlt
les
and
add
add
cmp
mov
add
add
leave
es
mov
testl
sub
dec
mov
nop
cmp
flds
adc
pop
jecxz
mov
or
popf
sbb
add
and
loop
add
add
in
mov
testl
add
add
add
add
add
sub
mov
push
adc
fcoms
mov
nop
xchg
jmp
jb
jno
sbb
inc
imulb
add
inc
dec
xchg
loope
scas
or
sub
or
fiadds
add
das
inc
js
push
sub
xchg
stos
and
add
add
mov
pushf
add
popf
mov
fwait
xchg
add
mov
dec
mov
dec
jmp
ret
mov
xchg
xor
daa
adc
inc
mov
arpl
mov
or
sbb
out
lods
push
out
push
pop
mov
push
sbb
jae
pop
movsl
pushf
adc
mov
inc
mov
pop
in
adc
xchg
sub
stc
mov
or
push
or
add
add
mov
addl
mov
leave
or
ja
inc
push
aam
shll
mov
jo
lods
lock
xchg
cmp
add
add
add
sbb
sub
add
add
gs
add
add
cmpsl
ljmp
add
mov
mov
mov
in
or
add
add
mov
notl
jg
jl
shrl
add
add
cltd
xchg
movsl
mov
sbb
dec
sub
stos
fwait
in
xchg
insb
mov
nop
loopne
jae
adc
fdivrl
repnz
add
add
mov
popf
push
xchg
std
cwtl
insb
mov
ret
inc
aam
aaa
popf
and
lahf
mov
add
add
insl
aad
jg
ds
add
add
jb
add
add
add
pop
ss
scas
daa
cmp
mov
arpl
inc
mov
stos
shlb
int3
popf
fs
or
add
add
jbe
daa
push
sub
pusha
add
add
cmp
enter
push
js
cltd
xchg
lcall
add
add
jns
mov
mov
outsl
scas
mov
jmp
push
icebp
dec
fidivs
insl
push
jg
mov
scas
mov
add
mov
add
add
push
cmp
mov
add
cmpsb
mov
and
add
add
sub
sub
in
sbb
and
xor
mov
lea
lea
inc
sti
loop
xor
lcall
insl
jl
sahf
xchg
xchg
sbb
add
mov
cmc
sub
add
add
lret
ljmp
mov
mov
sbb
inc
dec
outsb
pop
and
nop
xchg
nop
mov
hlt
sbb
jb
adc
lods
outsb
jle,pt
pop
inc
and
lods
adc
sti
lds
into
mov
test
add
xor
ss
mov
add
add
rcr
xor
mov
testl
cmp
ds
stos
or
stos
inc
mov
mov
cmc
mov
cltd
inc
leave
lods
popa
fmull
mov
xor
gs
add
push
or
cmp
add
mov
add
add
loop
test
sarl
pop
es
subb
das
mov
test
mov
mov
addr16
pop
sahf
js
add
stos
cmp
or
add
add
ret
sbb
gs
pusha
mov
aad
push
insl
mov
add
add
cs
test
aaa
testl
xadd
add
inc
cmp
mov
sub
add
add
rorl
add
cmp
fcomps
icebp
arpl
fdivl
add
add
stos
imul
add
fwait
ds
enter
add
add
add
adc
cmc
push
loop
fcmovu
mov
mov
add
jno
sbb
add
add
mov
lds
sahf
ja
jae
insl
repnz
pop
dec
movsb
sbb
pop
sarl
gs
push
rcll
jbe
pop
pop
mov
stos
cmp
repz
cmpsl
ror
sbb
mov
nop
lea
add
push
xor
adc
jle
ret
and
add
add
mov
dec
ja
sub
pop
test
lea
outsb
cwtl
xchg
mov
mov
add
cmpsb
mov
jnp
sarb
mov
add
add
add
add
outsb
cmp
and
add
add
fmuls
mov
mov
cld
fs
mov
dec
lods
fwait
andl
test
cmpsb
mov
cmp
xchg
aas
pop
push
and
push
scas
into
cwtl
xlat
add
add
rcl
jo
xor
dec
gs
subl
iret
movsl
mov
pop
xchg
pop
repz
cmp
add
add
lea
out
mov
add
add
push
out
out
jmp
push
mov
loop
fnsave
mov
pop
ja
lahf
jmp
add
add
adc
push
fwait
inc
mov
pop
jge
jno
inc
inc
mov
mov
push
sbb
pop
es
pop
mov
add
add
stos
int3
insl
rep
mov
scas
fsubs
sbb
aam
jns
in
add
add
or
jbe
arpl
pop
into
jmp
mov
add
add
pop
mov
mov
nop
scas
push
xchg
pop
cmp
in
xor
mov
cs
ljmp
add
add
add
xchg
mov
xor
add
add
sti
push
test
cmpsl
fdivs
adcb
scas
jge
lock
hlt
cmp
sar
arpl
add
add
dec
add
add
inc
jb
push
cwtl
fucom
adc
xchg
add
scas
mov
gs
cmp
add
add
inc
dec
inc
pop
dec
add
add
dec
mov
push
fsts
lcall
dec
aaa
enter
mov
lahf
inc
jno
mov
lock
movsb
push
adc
loop
es
add
add
or
mov
cmp
add
sbb
sarb
xchg
xchg
test
clc
aaa
lods
dec
add
add
fwait
subl
add
insl
repz
addr16
mov
idiv
add
add
add
xor
stos
sbb
push
pop
test
outsl
fisttpl
mov
sbb
and
xor
push
scas
mov
loope
and
add
add
add
add
push
jnp
popf
mov
cmpb
mov
cmpsb
clc
loopne
jg
roll
les
inc
add
add
push
push
in
insb
mov
mov
enter
imul
pop
or
add
add
andl
pop
scas
lea
sbb
ret
sbb
mov
push
dec
pop
test
mov
lds
add
repz
mov
cmp
add
aas
hlt
xor
add
in
pushf
stc
push
ficompl
mov
lock
aas
add
add
fbld
push
or
xchg
ja
jb
sub
add
add
imul
ja
cmpsb
adc
dec
cmp
sbb
add
repz
inc
scas
daa
xor
sbb
sub
iret
shll
cmp
pusha
mov
dec
mov
jp
mov
leave
pop
push
jmp
add
or
jp
pop
add
add
add
push
pop
test
cmpsl
jg
ud0
test
pop
and
shr
divb
repz
inc
mov
ret
imul
add
sub
add
add
adc
stos
dec
push
add
scas
into
les
add
add
xchg
add
jnp
icebp
mov
xchg
add
add
scas
sub
pop
dec
mov
add
add
push
cmp
mov
and
add
add
add
xor
or
mov
xor
mov
mov
lods
imul
jecxz
orl
fiadds
add
lsl
in
and
in
movsl
pop
loopne
pop
or
filds
js
jmp
aas
clc
fisttps
bound
and
add
add
mov
mov
mov
add
lds
cmp
cmc
out
or
add
mov
xorb
in
aad
cmpsb
push
xchg
jge
xchg
mov
adc
mov
add
pushf
and
add
add
push
xorl
mov
mov
push
ljmp
xor
mov
lret
mov
jg
adc
add
ret
xor
add
add
push
jmp
cltd
inc
mov
mov
adc
icebp
xor
dec
ret
loopne
push
idivb
mov
stos
insb
add
add
cmp
or
add
add
scas
rorb
dec
add
add
push
xlat
push
xchg
push
out
mov
push
push
gs
xchg
sbb
add
add
ja
mov
cmp
data16
push
popf
and
test
xor
add
add
jp
or
mov
add
sahf
mov
aaa
dec
cmp
js
js
push
and
pop
stos
mov
cmp
mov
sub
fsubs
stos
adc
test
inc
in
pop
outsb
inc
add
add
subl
ret
xor
adc
jg
add
add
jne
dec
add
add
popa
test
pop
and
popa
pop
ret
shll
sbb
pop
popf
jl
mov
inc
add
add
jmp
add
aam
stc
addb
add
add
dec
mov
lret
add
push
jno
test
xchg
xchg
or
add
xor
add
add
add
add
add
hlt
out
add
mov
dec
push
fldl
add
add
hlt
stos
cmp
adc
push
stc
pop
push
inc
loope
inc
jmp
jno
out
cmp
jns
mov
push
mov
xchg
xchg
jle
inc
add
add
dec
push
rcll
cmpl
mov
mov
mov
sbb
add
cltd
xchg
jmp
push
or
enter
inc
mov
or
jmp
add
add
subl
mov
test
adc
xchg
add
call
add
and
jbe
add
add
loopne
xor
add
xor
and
add
add
fwait
cmp
jl
pop
mov
pop
lods
cmpsb
mov
add
or
add
add
add
add
dec
mov
loope
push
dec
sub
bound
fnstsw
add
add
add
lret
or
dec
xor
out
stos
ftst
enter
pop
sub
ss
add
adc
mov
add
pop
or
hlt
addr16
and
scas
xor
mov
mov
add
add
sub
cmp
xchg
pop
xchg
cli
imul
add
sbb
cmp
cmp
and
mov
add
add
outsl
xchg
push
push
pop
xchg
mov
xor
add
in
aaa
mov
sub
decb
add
add
fldenv
or
add
add
mov
in
imul
nop
lret
iret
repnz
aad
inc
mov
adc
mov
add
add
cmc
and
add
outsb
pop
fsts
fwait
sub
xchg
mov
insl
call
scas
xorb
jno
pop
jne
data16
shrb
add
add
push
mov
test
std
cmc
jnp
pop
loope
mov
cmpsl
or
sub
jbe
sbb
mov
pop
pop
loope
cmp
icebp
les
inc
aas
aad
inc
jp
jnp
fidivrs
and
jo
shl
imul
jne
add
add
mov
dec
push
arpl
sub
add
add
jb
xchg
fwait
cmpsb
mov
imul
add
add
das
xor
dec
add
mov
sbb
fsubrs
jmp
mov
aaa
jmp
mov
add
sub
add
and
pop
stos
sbb
ljmp
mov
or
add
add
pop
sahf
ds
orb
stos
sahf
mov
mov
pop
jb
sbb
lea
out
sti
xchg
sub
inc
outsl
adc
out
cmpb
pop
rcl
mov
jb
dec
add
add
adc
xor
pushf
mov
lret
mov
fdivrs
outsb
sub
dec
jbe
or
fimuls
clc
mov
into
aad
testl
add
add
int3
pop
sahf
insl
jo
mov
inc
sysexit
mov
lret
gs
ret
cmp
cmp
mov
add
call
popf
inc
add
add
jge
test
dec
and
fstpl
add
push
mov
sti
je
aad
or
test
cmc
sbb
or
add
add
inc
mov
sarl
in
push
fwait
sub
add
add
int
cli
lcall
ja
lret
xchg
and
add
add
hlt
dec
add
add
stc
lock
mov
add
add
mov
or
pop
ret
inc
imul
les
loop
push
faddl
jne
add
add
lea
stos
or
out
mov
xchg
or
pop
jbe
pop
dec
sti
inc
dec
mov
lcall
add
add
outsb
cltd
mov
orl
jle
add
xchg
xor
add
lds
adc
push
int3
aam
xor
repnz
push
xchg
imul
scas
loop
mov
add
cmpsb
jo
inc
mov
cmpsb
into
push
inc
aas
int3
int3
or
sbb
mov
iret
mov
sub
movb
xchg
les
lds
add
nop
ret
add
add
or
add
add
pop
cld
xchg
pop
push
jbe
jle
fbld
orb
xor
je
orl
add
add
add
mov
mov
or
add
add
dec
int
int3
mov
inc
mov
push
xchg
xor
push
in
clc
jle
shll
add
add
dec
add
add
sbb
daa
imul
add
lds
enter
pusha
mov
pop
mov
test
fildl
fidivrs
cmp
int3
scas
xchg
or
dec
push
in
in
lcall
cmc
icebp
lods
testb
or
pop
push
imul
out
xchg
inc
aas
and
gs
loope
aas
add
add
add
and
daa
js
arpl
mov
jb
nop
in
pop
or
or
mov
sub
iret
dec
sbb
ret
cltd
jo
xor
xor
shl
call
push
bswap
fsubs
pop
mov
dec
imull
and
add
add
add
add
push
lds
jmp
mov
lahf
arpl
punpckldq
jnp
repnz
sahf
push
cwtl
sbb
mov
push
adc
test
sahf
cmp
icebp
sarl
stc
dec
add
add
adc
pop
dec
stos
fisttpll
shrb
mov
add
add
push
cmp
xchg
in
ja
mov
rclb
movb
dec
xor
notb
mov
fimull
je
stc
lods
mov
loopne
add
add
add
pushf
cmp
pop
mov
add
add
mov
jmp
xor
cli
popa
std
ret
sbbb
adcb
aad
pop
lret
cmpsb
xor
or
add
pop
aam
jecxz
and
cmp
or
add
add
and
fwait
cmp
mov
jb
add
add
leave
sub
pop
push
ljmp
cmp
xchg
cld
lods
stc
xchg
aas
push
fpatan
hlt
or
add
add
popf
cld
pop
daa
cmp
mov
aad
out
sbb
sbb
add
add
lds
inc
mov
jnp
sub
xchg
xor
add
add
xchg
sbb
add
add
jle
scas
jge
je
out
or
mov
ds
or
add
fstp
sub
add
add
roll
aaa
jg
fiaddl
ja
mov
mov
add
sub
add
add
add
add
iret
lock
xchg
xchg
push
daa
mov
add
add
mov
and
les
ljmp
push
adc
rolb
enter
std
or
add
add
sbb
push
sub
push
dec
mov
das
loop
push
bound
aam
and
add
add
mov
and
add
mov
add
pop
jp
inc
test
ret
std
jmp
pusha
mov
add
and
push
add
add
add
add
push
xor
jmp
and
fildl
add
out
xchg
inc
mov
loop
fsub
add
stc
cmc
jmp
repnz
jmp
sbb
add
fisubs
fchs
repz
xor
sub
jg
filds
movsb
orb
add
pop
mov
rorl
lods
aas
mov
cmp
insb
mov
mov
mov
cmp
iret
adc
add
add
add
jmp
mov
frstor
pop
cli
dec
push
imul
push
imul
add
add
rorb
add
fs
sbb
aas
inc
and
add
add
rcl
or
add
add
leave
sarl
cmp
ds
enter
add
scas
mov
add
imul
xorl
scas
data16
data16
mov
ss
daa
clc
sub
or
add
add
xchg
repnz
cmpsl
pop
mov
fs
sub
add
add
mov
stos
out
cli
mov
daa
int
add
cmp
jns
dec
ret
fmull
xchg
popa
notl
mov
and
add
jecxz
adc
fmulp
or
xor
cmp
shlb
dec
jbe
mov
cltd
sahf
ss
fcomps
add
add
or
add
pop
stc
test
icebp
lods
enter
iret
add
add
add
xchg
or
cltd
nop
in
push
rclb
nop
sub
jp
fwait
cmpsl
xor
setl
push
out
sub
add
add
mov
mov
movsb
mov
or
test
aad
movsl
aaa
jb
sbb
add
mov
lods
cltd
mov
mov
loopne
pop
inc
adc
je
inc
out
dec
jg
lods
pop
in
test
aam
adc
pop
jno
nop
dec
lahf
mov
std
cmc
push
test
int3
inc
aas
push
xchg
mov
rcll
testl
mov
cmpsl
pop
rclb
jg
iret
adc
inc
mov
aad
out
in
lds
add
add
or
pop
nop
add
add
pop
loope
fsub
push
mov
lods
nop
fxch
fxch
movl
inc
add
add
pop
aaa
lods
sbb
dec
mov
mov
jecxz
hlt
and
fdivs
mov
mov
dec
lds
je
pop
xor
xchg
sbb
xlat
inc
xor
sub
add
add
add
add
sti
inc
in
mov
add
add
add
cmpl
adc
in
xor
fiadds
mov
je
fdivrs
imull
sub
add
add
mov
orl
jl
mov
ljmp
add
std
mov
inc
test
add
add
pop
fidivs
in
push
pusha
mov
xchg
mov
and
add
add
or
insl
inc
mov
sub
add
add
pop
nop
adc
ret
cmpsl
pop
inc
fdivrp
push
ja
xor
das
pop
push
addb
mov
xlat
adc
ret
jle
mov
arpl
add
add
prefetch
add
fldcw
out
outsl
adc
add
push
cmp
and
add
add
nop
inc
test
mov
add
add
sub
add
add
sbb
lds
jle
cmp
and
je
mov
fldl
movsb
scas
xor
out
push
jmp
add
mov
aaa
jnp
in
mov
add
add
jge
mov
add
pop
inc
mov
jl
lock
sbb
loopne
adc
ficoml
push
push
stos
and
add
inc
add
add
mov
cmpsb
pop
mov
add
and
in
fnstcw
decb
mov
rorb
add
push
pop
or
test
fimuls
cld
pop
jecxz
dec
add
in
es
sbb
sbb
xorl
loop
pop
mov
sbb
int3
lea
cmc
inc
add
add
das
xchg
fs
test
loope
or
add
add
cwtl
sbb
imul
cmp
ds
dec
mov
popa
decb
mov
clc
mov
xchg
fdivrl
fldcw
push
ds
popf
cmpsl
test
sbb
aad
xchg
fildl
mov
lods
popf
fsubrl
pushf
insl
movsb
mov
mov
sbb
test
out
adc
and
add
add
xor
int
push
pop
aas
pushf
adc
int
mov
roll
cmp
add
add
inc
dec
adcl
lcall
push
es
adc
add
mov
movsl
add
add
add
jne
sub
add
add
jmp
les
add
add
and
add
add
jge
cltd
shl
out
xchg
lret
mov
sbb
lahf
cmp
xor
lock
fisubl
add
jns
js
roll
sbb
cmp
inc
subb
add
add
mov
dec
cmp
test
shrb
add
cld
cmc
mov
pop
pop
ljmp
pop
in
push
imull
mov
mov
mov
stc
sub
pop
mov
adc
and
ret
push
aad
inc
mov
fsubrs
fisttps
mov
js
jp
push
fnstsw
xchg
xor
or
dec
out
mov
and
add
add
jecxz
xor
add
fbstp
faddl
dec
mov
rorb
mov
addr16
mov
subl
add
sti
jno
and
repz
pop
iret
fbld
jg
scas
adc
insb
mov
jl
push
jno
or
fwait
enter
push
test
push
repnz
mov
add
add
add
and
add
add
or
mov
lahf
add
movsl
xor
push
cli
aas
pop
mov
sub
add
add
out
mov
jl
ss
out
int
pop
aam
jne
or
nop
adc
imul
add
and
push
mov
xor
fstps
lods
pushf
aad
mov
sub
cltd
inc
adc
daa
inc
ljmp
lcall
add
rcrb
in
push
cli
jbe
fisubrl
sbb
add
add
hlt
mov
dec
cmp
pop
jno
out
in
pusha
add
add
dec
add
add
push
addb
add
mov
sbb
add
and
inc
fwait
push
je
xor
lret
and
mov
unpcklps
outsl
jp
mov
adc
add
add
mov
inc
test
out
dec
iret
loop
mov
scas
sarl
cli
and
jle
imul
add
cltd
pop
adc
add
add
add
mov
xor
ret
sub
add
add
stos
call
add
cwtl
scas
decl
xorb
pop
jmp
push
cmp
cmp
add
xlat
xor
inc
mov
xor
add
outsl
into
and
cmp
add
add
jp
pop
shrb
pop
cltd
cs
ljmp
movl
test
sarb
pop
das
mov
movb
cmp
add
add
adc
jbe
or
mov
dec
xchg
fs
add
add
add
lods
lods
rcl
aad
cmp
sbb
adc
push
pop
ja
dec
or
inc
test
xor
cmpsl
pop
fstpt
push
and
add
add
sbb
and
mov
or
add
add
push
inc
mov
push
arpl
add
add
ja
fadds
jmp
in
sbb
sub
add
add
hlt
cmp
add
add
add
add
and
add
add
inc
imul
add
sahf
cmp
mov
push
sub
adc
add
cmp
rcr
lods
popa
and
add
add
hlt
mov
ds
fcmovbe
icebp
stc
addr16
cmp
add
cwtl
push
jbe
mov
add
ds
shlb
bound
pushf
insb
add
add
mov
add
add
loopew
outsl
adc
cmpsb
jl
iret
and
add
or
add
add
outsb
mov
add
add
add
mov
insl
std
and
cld
xchg
mov
fcmovb
push
mov
push
fildll
jnp
mov
jp
or
jb
add
add
xchg
sub
add
add
in
inc
xor
rolb
aam
jns
sbb
push
fsubl
inc
iret
and
add
add
push
bound
add
and
push
rcrl
push
adc
sbb
ret
std
je
mov
and
out
lret
xchg
sub
sbbl
mov
jge
pop
mov
out
inc
add
add
xor
fbld
lcall
je
jno
insb
add
add
test
push
ja
mov
movsb
or
jae
push
stos
jns
call
dec
or
call
in
iret
inc
cmpsl
mov
push
cmp
das
cmc
push
mov
fsubl
add
add
test
data16
add
mov
int
and
dec
jne
jno
pop
repz
cmp
outsb
add
add
loope
pop
push
outsl
subl
add
add
int3
rcrl
mov
xchg
lea
sbb
test
pop
sahf
insl
sub
lcall
and
add
add
add
lret
mov
or
add
add
mov
add
add
sbb
and
mov
iret
cmpsb
test
inc
popf
lcall
mov
daa
mov
xorb
mov
xor
or
add
xchg
push
push
sub
push
jecxz
dec
lret
mov
push
adc
btr
adc
lds
aam
or
add
add
jmp
mov
add
inc
add
fimuls
mov
mov
pop
testl
push
mov
es
loop
sbb
xchg
cmc
adc
push
push
sub
add
add
push
inc
mov
push
inc
add
add
ljmp
dec
xor
out
test
fdiv
bound
add
adcb
pop
dec
stos
push
pop
push
or
out
rcl
jmp
gs
sub
sbb
lret
inc
mov
sbb
add
hlt
pop
subb
mov
sbb
pushw
pop
xor
add
aam
push
cmp
movsl
ret
cmp
sarb
out
rcrl
add
fisttpll
add
add
sbb
inc
adc
add
fnstsw
mov
mov
pop
fwait
cmp
fwait
inc
fs
jl
jne
fcomps
aaa
cmp
pop
test
mov
add
add
mov
lret
xchg
xchg
mov
ret
mov
je
out
inc
sbb
les
lahf
lock
mov
call
jne
inc
cmp
push
out
mov
cmc
adc
loopne
push
mov
push
adc
and
add
add
adc
test
xchg
pop
cmp
push
shr
out
aad
int
lea
fsts
xchg
sbb
stc
fildll
mov
mov
add
iret
mov
popa
cmpsb
rolb
jge
jae
xchg
mov
add
add
pop
adc
add
and
dec
lock
add
add
add
add
push
fistpll
push
inc
pop
push
arpl
mov
jns
or
adc
sbb
xchg
mov
add
int3
loopne
push
rcll
ficompl
mov
mov
add
add
cmp
lcall
add
dec
mov
pop
push
dec
add
add
in
fiadds
int3
test
inc
adc
jbe
fcoml
andl
xor
out
xor
add
add
fs
mov
clc
popa
xchg
adc
add
sbb
dec
nop
mov
sub
dec
mov
cmp
add
add
add
add
dec
arpl
push
icebp
mov
mov
imul
stc
or
pop
sub
mov
xor
add
scas
pop
dec
push
mov
sbb
add
add
add
xor
add
add
test
nop
lods
addr16
js
cmp
imul
movsb
xor
push
ret
add
insb
mov
sbb
stos
push
loope
mov
ja
fldt
add
add
mov
fisubrs
test
loop
add
add
mov
cltd
dec
fisubrl
add
add
sub
sti
scas
dec
call
in
jp
jmp
gs
or
add
xchg
push
add
add
out
mov
outsb
dec
mov
and
add
add
cmp
jo
push
or
add
add
popf
inc
daa
stc
pop
sbb
xchg
sub
add
add
mov
daa
leave
xor
sbb
cmpsl
inc
mov
push
xchg
inc
mov
popa
xchg
push
out
loopne
mov
fstpt
test
insb
add
add
and
add
add
pop
stc
jg
mov
add
pusha
add
add
dec
push
mov
das
stos
sbb
add
fisubl
add
add
pop
subb
add
xchg
push
rcrb
call
xor
aam
mov
dec
stos
in
push
lret
mov
out
icebp
inc
dec
xchg
jp
add
add
jns
adc
test
and
add
add
fcmovnb
addr16
pop
push
mov
ljmp
cmp
add
mov
add
add
push
js
pusha
add
add
popa
cmp
rclb
lock
testb
cld
sub
push
mov
sub
bnd
mov
add
add
jl
test
hlt
inc
add
add
cmp
lret
cmc
adcb
mov
lods
sub
add
add
cwtl
jle
andl
add
add
sahf
mov
test
test
add
fcomp
je
mov
mov
add
add
in
mov
mov
jo
mov
add
and
add
cmpsl
and
push
stc
adc
lds
mov
es
xchg
mov
push
push
or
xlat
js
push
xchg
in
mov
xchg
pop
ss
cmp
aam
inc
daa
and
ljmp
add
cmp
mov
push
cmp
xor
mov
add
add
dec
xor
ret
clc
or
add
add
dec
xchg
pop
push
or
push
lods
subb
pop
dec
ret
sarl
jb
sbb
ss
aam
add
add
jno
in
call
sbb
add
je
mov
dec
into
pop
out
sub
push
xor
xchg
je
mov
ret
xchg
mov
xor
push
negl
mov
or
add
add
dec
add
add
adc
or
add
add
dec
fisttpl
inc
xchg
jl
cmp
pop
dec
in
inc
and
sbb
mov
add
push
add
add
mov
push
pop
gs
add
add
sbb
es
sbb
xor
dec
mov
aaa
stos
inc
scas
jne
add
add
lods
add
add
add
in
xchg
mov
lods
jb
dec
add
add
xorl
add
add
cmp
mov
push
jmp
mov
cmpl
ret
add
add
add
push
jb
fsts
out
or
pop
lock
jno
dec
add
add
mov
enter
leave
shlb
add
aam
mov
bound
fdivrp
cmp
fnstcw
fnstcw
mov
iret
movsl
mov
sarl
incb
clc
ret
lea
mov
int3
das
cmp
in
add
add
xchg
and
add
add
ljmp
mov
jg
fsub
imul
data16
xor
aaa
cmp
push
xor
lahf
loope
pop
ret
xor
repnz
cmc
lret
push
cmp
push
test
sub
mov
add
add
outsl
pop
xor
cli
stc
nop
call
cltd
enter
add
add
aam
sub
inc
nop
pushf
push
insb
mov
out
ret
inc
jl
jno
repnz
fidivrl
lock
mov
testl
jmp
fadd
dec
mov
and
in
div
sub
add
add
adc
mov
or
add
add
add
xchg
xchg
pusha
add
add
push
cmp
gs
aad
test
mov
fnstsw
cltd
and
ret
jb
int
inc
mov
inc
xchg
mov
int
loopne
sub
gs
fsubrl
add
add
dec
mov
mov
addr16
shll
inc
negb
jo
pop
ja
pop
mov
repnz
and
add
add
das
mov
add
dec
xchg
cld
add
xorl
ret
cmpsl
or
mov
jb
movsb
xor
arpl
arpl
xchg
loop
sbb
mov
mov
dec
and
sbb
add
add
or
jg
js
bound
mov
lahf
xchg
inc
xchg
inc
add
add
mov
fdivrs
cs
fnstcw
xor
pop
popf
sbb
nop
stos
push
xchg
and
push
sti
out
mov
aam
dec
out
sahf
ficompl
add
adc
add
add
add
jl
subb
add
in
stos
push
lahf
add
lock
lods
fiadds
dec
add
add
xchg
sbb
xor
add
add
add
add
hlt
pop
test
mov
dec
cmpl
add
xchg
jl
xor
add
add
add
lea
xor
xchg
cmp
add
add
shl
push
xchg
in
and
add
add
pop
pop
icebp
std
fwait
imul
dec
mov
fcmove
fsts
iret
push
dec
push
mov
sub
xor
inc
mov
xlat
mov
sbb
mov
iret
lods
out
cltd
mov
mov
jg
stc
sub
testl
rcrb
mov
mov
sbb
cld
mov
inc
add
add
push
or
loopne
imul
add
cmpsb
lahf
lods
xchg
sbb
add
add
or
add
add
insl
je
adc
mov
mov
lahf
enter
add
hlt
imul
add
clc
roll
loop
mov
ss
or
push
inc
fidivs
mov
cmp
add
mov
cmp
insb
mov
mov
sbb
lods
mov
add
sbb
scas
insl
call
cmp
insl
fcmovb
dec
fiaddl
or
popf
xor
pop
pusha
mov
jmp
add
mov
fadds
mov
mov
aaa
mov
mov
imul
push
jmp
fldt
mov
add
dec
xchg
cmp
insl
bound
lods
add
xchg
jg
inc
fdivrl
mov
mov
mov
or
xor
es
arpl
stos
lods
xchg
sub
cs
xchg
push
inc
add
add
jno
jg
popf
cmp
fcmovnb
mov
rorb
lret
fdivrp
push
sar
addl
sub
hlt
cmpsl
sub
add
add
fdivrl
cmpsb
in
inc
add
add
call
inc
add
add
hlt
cmp
sti
add
add
add
mov
lea
mov
mov
test
pop
je
mov
and
fs
cmc
or
mov
pop
jmp
add
add
push
jg
add
in
sahf
or
add
add
iret
cmpsl
mov
add
add
push
xchg
jl
pop
xor
sub
add
add
pop
or
inc
xor
sarl
push
pop
fdivl
push
notb
dec
roll
xchg
mov
pop
mov
dec
pop
cli
mov
loope
add
add
cmp
outsb
xchg
dec
mov
scas
filds
dec
sub
jno
add
mov
sub
mov
shll
jl
sub
shrd
insb
add
add
sub
test
add
add
sahf
orps
mov
add
js
mov
mov
aad
mov
xchg
gs
pop
out
arpl
divl
mov
sub
add
add
mov
jns
add
add
and
les
mov
int
add
add
rcr
xchg
add
pop
dec
sti
clc
out
shll
mov
mov
pop
pop
outsl
stos
pmullw
mov
add
stos
bound
xchg
mov
repz
mov
xchg
jo
out
dec
test
add
adc
cmp
or
add
add
xor
pop
movsb
mov
add
jmp
pop
xchg
lods
loope
ja
movsl
sub
add
cmp
xor
jno
add
add
divl
sbb
in
sahf
gs
xor
jl
fsubl
add
add
test
lcall
ret
add
add
outsl
and
inc
jge
dec
mov
mov
jno
mov
mov
repz
scas
adc
movsb
cwtl
jle
arpl
add
add
shr
int3
lods
push
mov
aam
mov
jne
sahf
jb
push
scas
jno
nop
in
jge
push
scas
fchs
pop
das
pop
xor
pop
pop
into
clc
fcomps
mov
dec
or
aaa
test
das
data16
std
jecxz
daa
lret
adc
pop
sub
add
add
xchg
jle
insl
jl
jle
movsb
pop
sub
inc
add
add
sbb
mov
in
fwait
gs
add
mov
lods
loope
fdivrs
das
jge
and
cld
add
add
push
shrb
adc
mov
insb
mov
ret
enter
inc
adc
pop
loopne
imul
mov
sti
sbb
cmp
mov
lcall
fldenv
add
in
xchg
repz
add
add
mov
sti
test
add
jns
ljmp
push
sbb
dec
je
sub
or
in
sub
sub
inc
bound
add
add
push
lock
pop
scas
ljmp
aaa
fists
sub
add
sbb
or
add
add
fsubs
test
in
repnz
inc
add
add
jl
mov
jae
mov
add
mov
add
outsl
aad
mov
add
add
xchg
add
xor
add
add
loopne
pop
mov
call
mov
mov
xchg
pop
imul
mov
add
mov
xor
lret
outsl
mov
or
mov
lods
aam
idivb
incb
aaa
addr16
dec
or
add
add
mov
ja
lods
fcomps
add
cltd
jo
mov
ret
or
adc
or
stos
jmp
stc
ss
add
add
add
add
push
mov
in
inc
daa
jmp
add
push
xchg
adc
cltd
jmp
jmp
mov
add
add
out
inc
pop
inc
mov
inc
out
or
in
dec
dec
add
add
or
add
add
add
add
lods
arpl
jp
inc
push
dec
mov
test
jl
jmp
ret
lods
pushf
jmp
int3
insl
enter
add
add
xchg
cltd
jle
cmpsb
sbb
sub
pop
stos
mov
inc
mov
sbb
jnp
push
movsb
dec
xor
push
cmp
mov
push
mov
aam
test
pop
or
add
add
inc
ss
inc
pop
push
insb
add
add
xlat
mov
data16
lret
mov
mov
mov
repz
lods
sub
lods
stc
ljmp
push
inc
sbb
aaa
inc
mov
ret
cltd
xor
sub
dec
xchg
lock
out
xor
jle
mov
fdivs
enter
inc
sbb
add
out
adc
dec
sbb
out
js
sti
pop
cwtl
inc
dec
loopne
sub
add
add
pop
mov
scas
jmp
ret
cmpsb
mov
xchg
jmp
add
add
mov
sarl
js
adc
add
add
nop
int3
cmpsb
adcl
loopne
popa
testl
add
fistpl
bound
add
in
mov
mov
add
add
jnp,pt
sbb
push
aam
and
out
frstor
test
sub
lods
jp
pop
xor
xor
mov
push
iret
xor
xchg
adc
sbb
xchg
fisubrs
lods
and
mov
push
inc
add
add
loope
xor
mov
mov
loopne
enter
and
and
imul
repnz
sub
add
add
pop
icebp
aam
pop
or
jmp
cmp
int3
ffreep
cld
fadds
add
add
mov
iret
fs
sar
sub
test
inc
dec
push
jbe
test
mov
in
in
sub
loopne
mov
insl
and
add
xor
add
adc
int
pop
imul
std
cli
push
add
add
push
ljmp
mov
dec
int
ja
and
repz
cmp
hlt
les
mov
mov
add
xlat
pop
xchg
out
jge
mov
add
jg
sub
add
add
imul
gs
jb
pop
adc
cwtl
fwait
jge
pop
mov
pop
inc
or
jb
inc
mov
pop
sub
add
add
pop
jecxz
ja
pop
pop
sbb
rcl
inc
mov
mov
xor
in
pop
push
push
cmp
pop
lds
add
add
add
add
mov
xchg
ljmp
lahf
in
data16
and
pop
inc
shll
mov
add
add
and
add
add
add
add
or
add
add
fisttps
xchg
mov
add
les
add
add
dec
jl
add
add
xchg
ss
cmpsb
ret
data16
and
adc
sub
or
push
dec
add
add
inc
add
add
and
add
add
jmp
sbb
stos
out
mov
addr16
push
push
lcall
push
outsb
stc
loop
aaa
pop
mov
push
mov
jmp
lds
imul
pop
jmp
add
jbe
mov
add
or
add
add
in
cmc
aas
fcomps
and
xor
mov
popa
or
clc
sbbl
push
cmp
stos
dec
add
add
mov
xorb
shll
lock
jno
out
mov
add
add
mov
ja
mov
data16
ljmp
cmpsl
fldt
sti
stos
inc
ja
and
push
in
jne
addr16
xor
es
add
mov
fsubrl
add
mov
fildl
add
dec
xrelease
insb
mov
aam
leave
stos
test
fs
popf
xchg
sbb
add
dec
shll
jns
nop
jbe
mov
sbb
pop
jbe
add
add
mov
mov
pop
icebp
rcrl
dec
add
add
scas
or
sahf
ds
jp
mov
xor
add
push
rol
sbb
je
sti
jp
adc
adc
mov
cmp
sti
xchg
orb
add
lret
je
push
test
lods
jb
push
fwait
sahf
sahf
jg
inc
add
add
xchg
fdivrl
jae
adc
push
shlb
push
jle
xlat
mov
adc
scas
imul
add
inc
mov
inc
mov
or
and
xchg
out
and
test
jb
div
dec
jb
pop
xor
sbb
add
inc
imul
add
add
xchg
adc
ja
xchg
insb
mov
or
sbb
imul
dec
jmp
dec
xchg
jge
addr16
insl
call
cmpsb
add
pop
cld
xchg
cmp
stos
lcall
jae
jle
fstpt
adc
cmc
cld
or
add
add
outsb
adc
mov
sahf
mov
mov
lock
mov
js
std
lret
andb
and
add
iret
jle
mov
add
jmp
in
aam
divl
sub
dec
outsl
push
push
rcl
sarb
lock
add
callw
adc
scas
loope
add
add
call
pop
rcr
daa
test
mov
xchg
testb
add
add
lods
shlb
or
add
add
push
pop
push
xlat
js
and
add
add
fsts
fsubrl
and
add
add
sbb
xchg
adc
insb
mov
pushf
cmp
hlt
push
cld
ljmp
mov
add
dec
xchg
aad
jmp
lcall
add
mov
inc
add
add
xor
inc
popa
fdivs
in
jmp
fiadds
lcall
add
inc
and
add
add
mov
and
testl
add
fsubs
mov
pop
adc
sarb
aas
fnsave
cmp
pop
inc
add
add
add
add
sbbb
sub
inc
push
aas
mov
push
xchg
js
fistpl
cmp
mov
or
add
add
inc
inc
mov
xchg
and
add
add
mov
add
add
inc
inc
lret
adc
add
xchg
pop
xor
icebp
mov
xchg
js
add
add
movl
loop
mov
xor
or
add
add
enter
pop
mov
clc
jle
add
add
je
popa
jge
xor
inc
mov
int3
outsl
test
adc
pop
idivl
add
xchg
cmc
xchg
scas
dec
loop
mov
jge
or
push
push
xchg
jo
pop
pushf
int
push
push
in
call
add
add
shll
add
data16
xchg
lcall
out
ficomps
fs
std
jnp
sub
out
addr16
pop
xchg
ret
mov
or
notl
cmp
cltd
lods
pop
popa
and
fcmovnu
mov
add
or
add
add
arpl
loope
mov
add
add
inc
aam
jmp
rcll
add
add
aas
pushf
cmp
loop
mov
call
mov
orb
fadd
and
add
popa
jae
scas
scas
mov
add
add
sbb
mov
pop
and
adc
dec
or
push
and
add
add
cmp
inc
sbb
add
aad
ljmp
in
and
aas
rcr
dec
xor
push
pushf
popf
cmc
pop
mov
outsl
jge
je
jne
out
mov
adcb
add
xor
stos
addl
fmuls
add
add
addb
sub
ret
xor
jb
int3
pop
mov
insl
inc
add
add
js
sti
or
add
add
pop
popa
dec
lea
add
sbbb
inc
test
jbe
mov
sub
nop
push
lods
xor
mov
mov
outsb
pop
divl
sbb
add
dec
xchg
sbb
stos
lahf
push
mov
out
mov
sarl
add
add
jl
fmull
add
add
inc
mov
into
cld
in
push
fistps
add
out
scas
mov
test
xchg
or
inc
js
mov
dec
mov
mov
sarl
cmp
jbe
imul
hlt
icebp
xchg
cmp
leave
adc
fcomip
lds
hlt
lret
test
xchg
add
jmp
aaa
dec
mov
jl
add
add
dec
and
xor
add
add
pop
sbb
andb
xor
add
push
push
cmp
sbb
repz
sub
and
mov
mov
push
mov
add
add
fcomps
leave
js
dec
inc
xor
add
add
aaa
fs
das
in
dec
inc
out
es
notb
jno
testb
adc
inc
add
add
nop
adc
mov
call
cmpsb
leave
mov
xlat
sti
or
add
add
ds
add
add
add
add
add
xor
mov
add
add
lods
dec
mov
mov
rclb
xor
add
add
add
add
add
cld
movsl
adc
repnz
jnp
xchg
int
pop
jle
sti
lods
js
out
mov
inc
mov
pop
lock
jge
jle
test
add
add
add
add
aas
xchg
xchg
push
lret
pop
adc
push
jl
inc
add
add
js
jmp
sub
add
add
and
add
add
std
scas
sbb
or
jb
cmp
add
add
in
in
je
testb
add
add
sbb
sub
mov
sub
mov
repz
inc
add
add
add
and
add
add
sbb
jae
popf
xor
stos
icebp
mov
test
or
adc
mov
add
add
inc
mov
out
push
rol
jl
and
insb
mov
inc
faddl
dec
and
mov
xor
sbb
stc
pop
push
xchg
scas
ds
push
adc
mov
sbb
fdivrl
mov
xchg
add
add
sub
add
add
fs
mov
lods
les
push
cmp
xor
sbb
cli
push
cmp
scas
repz
enter
add
push
push
movsb
aad
sub
add
adc
imul
mov
cmpl
jae
mov
fisubrs
sahf
lret
cmp
jbe
ja
lods
mov
mov
pmovmskb
mov
xor
add
add
and
add
add
pop
sub
add
add
and
mov
repnz
rorb
or
push
jmp
aaa
hlt
and
mov
in
movsl
lcall
mov
cli
pop
inc
jmp
call
in
aas
imul
sub
ljmp
add
push
sub
add
fimull
mov
push
mov
imul
cmp
lcall
xchg
shlb
iret
xor
movsb
adc
ret
mov
mov
sbb
add
add
mov
das
sbb
mov
lret
dec
ss
outsb
or
add
add
pop
and
adc
add
mov
fcoml
aam
mov
push
int
repnz
addr16
add
add
xor
mov
lds
cltd
fsubrp
into
loope
lahf
out
xchg
dec
add
add
add
add
mov
jecxz
in
mov
sub
shll
fildll
loopne
jp
mov
jp
xchg
pop
pop
jae
inc
add
add
std
mov
add
add
add
scas
add
add
add
mov
sub
dec
mov
int3
add
ss
outsl
fisubrl
cltd
dec
jnp
xor
sub
add
add
adc
sbb
add
add
or
mov
jg
cld
sbb
add
cli
xor
pop
enter
push
xchg
xchg
sarl
mov
xor
push
call
add
add
dec
dec
jmp
xlat
xor
cmp
je
pop
inc
iret
lock
add
add
mov
bound
xchg
mov
mov
mov
popa
fcompl
add
add
loope
inc
add
add
cmp
adc
sti
sbb
fmull
fcoml
mov
rcl
mov
push
mov
mov
sub
cs
inc
mov
aaa
notl
sub
add
add
popa
movsb
cltd
test
inc
test
push
addr16
dec
mov
lea
lcall
sub
add
popf
mov
add
sub
add
out
inc
fwait
loop
xorb
lahf
adc
mov
out
sub
flds
add
add
outsb
mov
push
cmp
add
add
jg
aas
jno
call
es
jne
inc
adc
add
add
lock
mov
lret
dec
jne
fldt
pop
cmp
xchg
data16
out
int
inc
mov
icebp
sbb
xor
add
mov
jae
or
mov
pop
xor
movsl
ficomps
xor
loopne
pusha
add
add
and
add
add
ret
jg
mov
cmc
data16
rclb
sub
out
dec
fsubr
orb
sub
fcmovb
data16
add
add
push
cli
lods
inc
movsl
cmp
add
lret
movsl
cmp
push
iret
xor
adc
add
add
cld
sub
ja
fadds
decb
ja
mov
push
dec
cmp
aas
arpl
icebp
and
mov
sbb
cmp
sbb
add
xchg
ret
xchg
sbb
jne
mov
xchg
pop
jne
lahf
cmp
add
fisubl
cs
fimull
in
fiaddl
adc
test
ret
popa
push
cld
xchg
cs
add
add
enter
add
add
jnp
test
nop
sbb
loop
cld
stos
cmp
das
aam
mov
dec
mov
add
add
add
mov
inc
mov
xor
or
in
sbb
jecxz
mov
stos
jle
mov
add
add
or
mov
mov
cmp
arpl
adc
mov
xlat
js
add
add
add
movsb
and
add
add
push
call
hlt
jo
inc
and
mov
call
pushf
inc
push
loop
or
add
add
jbe
add
add
pop
dec
cmp
add
add
add
pop
xor
hlt
js
push
jbe
sets
jmp
imul
xor
xlat
mov
in
mov
pop
pop
std
push
push
and
add
add
push
adc
test
cmp
mov
add
xchg
sub
add
add
mov
lock
cmc
dec
nop
jne
hlt
xor
jno
mov
lret
add
add
loopne
xlat
sub
out
dec
pop
jne
adc
int
xchg
sub
xor
add
insb
mov
jmp
gs
in
xlat
cmc
mov
cmp
rol
or
add
add
add
rorb
mov
adc
dec
shl
mov
out
or
add
add
out
xchg
lret
scas
or
fidivl
add
add
add
mov
add
add
imul
push
xchg
add
dec
lea
pushw
rcr
adcl
jnp
sahf
inc
into
add
add
add
add
call
push
push
hlt
into
mov
mov
add
xchg
pusha
mov
imul
add
repnz
cmp
and
in
lahf
xor
lahf
dec
mov
inc
adc
add
js
mov
pop
xchg
cmp
cld
test
dec
int
int
jl,pt
cmp
ffree
mov
jbe
jg
sbb
jecxz
inc
mov
add
add
jo
icebp
sbb
xchg
cmp
pushf
aaa
adc
nop
sbb
pop
and
incb
add
add
pop
lret
mov
add
add
insl
or
mov
cwtl
mov
mov
and
add
add
push
or
add
add
rorb
idivb
xchg
cli
icebp
call
pop
ss
pop
mov
cmp
jge
negb
jae
mov
add
adc
fcompl
fld
pop
std
xchg
push
mov
xchg
lea
add
dec
stos
adc
gs
mov
add
add
dec
or
add
add
sahf
dec
add
add
mov
jl
cmc
add
mov
pop
and
adc
sbb
fisubrs
sbb
and
add
add
dec
mov
aad
call
cmp
stos
xlat
fwait
test
mov
int
pop
leave
fwait
pop
push
cmp
je
fiaddl
pop
sub
add
add
dec
mov
mov
pop
dec
xor
subb
add
sbb
fisttps
fisttpl
cmp
loop
inc
mov
fwait
inc
pop
mov
add
add
fwait
loopne
imul
or
cmc
cld
mov
mov
int
lds
jno
or
add
add
add
ja
shll
sbb
loopne
xor
add
add
add
add
nop
dec
push
lcall
out
add
add
add
add
add
fwait
xor
add
add
arpl
hlt
and
jg
incl
add
add
adc
add
add
add
add
or
add
add
mov
inc
add
add
mov
jae
emms
and
popa
lods
js
mov
mov
test
ffreep
mov
push
push
lods
jle
mov
data16
pop
and
add
add
xor
fldenv
in
arpl
jg
mov
adc
scas
popa
daa
mov
pop
add
mov
mov
pop
pop
fwait
subb
add
add
shlb
jo
cmp
xchg
mov
sarl
imul
push
adc
and
add
add
pop
gs
mov
add
add
ret
pop
push
cs
jo
mov
pop
cmc
mov
dec
add
add
pop
test
sub
mov
rol
push
pop
jbe
inc
adc
xor
add
scas
ret
cmp
add
add
iret
adc
imul
add
add
add
add
xor
leave
or
xchg
shl
pushf
aaa
icebp
xor
jg
xchg
push
pop
test
add
add
movsl
jge
sbb
lock
xchg
es
xchg
outsl
ja
stc
xor
sub
adc
add
sbb
ret
test
addr16
add
add
xchg
popa
cmp
add
jmp
sahf
xor
je
testb
add
jns
jmp
cmp
addr16
addr16
mov
or
xchg
stos
cmp
arpl
dec
lock
push
bound
add
mov
or
sub
push
fldt
ss
sahf
xchg
das
cmp
dec
mov
mov
cmp
or
mov
popf
test
jmp
jg
pop
inc
int3
mov
xchg
xchg
cs
sbbb
dec
jle
scas
sub
decb
cs
imull
add
add
add
scas
call
je
xor
mov
add
arpl
sbb
stos
mov
and
mov
jp
xchg
insl
jmp
sahf
ficoms
mov
push
flds
adc
add
xor
ret
sub
add
add
imul
mov
cmp
lea
add
add
cmpsb
adc
or
bswap
div
push
xor
add
sbb
push
cmpsl
icebp
std
sbb
je
mov
roll
popf
leave
push
icebp
push
insl
push
test
and
dec
les
xor
lods
ds
push
sbb
push
inc
flds
add
add
mov
mov
sbb
xor
sub
add
add
cld
imul
dec
jo
outsb
enter
ret
fcompl
cwtl
cmc
add
add
add
mov
sbb
cmp
jecxz
jno
cwtl
fcmovbe
xchg
notb
xor
nop
add
add
add
push
sub
add
add
add
add
push
sahf
jg
cmpsl
ror
cld
loop
add
push
cmpsb
cmp
in
call
add
add
sbb
int
dec
sbb
xor
add
add
add
mov
lcall
mov
arpl
add
add
add
add
add
add
in
xchg
push
mov
add
add
or
add
add
jecxz
int
mov
mov
dec
cmp
out
pop
xchg
std
sub
add
add
stos
jb
push
decb
mov
imul
push
mov
cs
and
add
add
mov
jae
inc
mov
and
add
add
dec
iret
mov
jge
and
xor
xchg
out
dec
xchg
bound
pop
ret
mov
adc
in
cmc
lds
jmp
shl
and
popf
and
fcompl
stc
repnz
enter
cmp
lods
push
dec
jmp
lret
mov
mov
pop
xorl
mov
dec
dec
add
add
xor
mov
xor
sub
shlb
inc
and
int
mov
cmp
arpl
in
rorb
add
mov
