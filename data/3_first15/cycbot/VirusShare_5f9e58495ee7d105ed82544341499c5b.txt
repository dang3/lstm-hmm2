dec
add
fcmovu
add
negb
pop
pop
pop
pop
mov
mov
mov
mov
mov
mov
jge
into
into
into
mov
mov
mov
mov
mov
mov
mov
mov
add
int
aas
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
repz
or
add
xor
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
jle
add
fildll
into
add
add
es
add
pushf
pushf
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
std
or
addb
add
cmp
add
push
mov
mov
mov
mov
mov
mov
in
in
in
test
add
add
loopne
loopne
loopne
add
add
insb
insb
insb
insb
insb
insb
insb
insb
add
in
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
lea
popf
popf
popf
popf
popf
popf
add
add
add
add
pop
pop
pop
pop
add
add
add
add
add
cmpsl
cmpsl
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
aad
add
add
add
add
loope
loope
loope
loope
add
add
cld
roll
add
add
add
add
mov
add
add
add
jno
jno
jno
add
add
mov
xchg
xchg
xchg
xchg
xchg
add
add
arpl
enter
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
add
fcomp
fadds
pop
es
insb
add
sub
pop
pop
pop
add
loopne
add
add
pop
pop
pop
pop
pop
pop
add
mov
imul
imul
daa
daa
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
stos
stos
stos
add
insl
insl
insl
insl
insl
add
add
add
fcomp
add
inc
sub
add
add
add
add
je
jmp
stos
add
imul
data16
add
add
scas
jne
jne
jne
jne
jne
jne
jne
jne
jnp
jnp
stos
stos
stos
stos
stos
repnz
add
adc
adc
adc
adc
adc
adc
add
add
add
and
mov
mov
fwait
add
fildll
sub
sub
int
add
add
add
faddl
add
add
in
in
add
or
push
fcomp
and
add
add
add
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
cs
fs
add
pop
pop
pop
pop
add
add
sub
sub
add
add
add
add
add
add
jl
jl
imul
add
add
popf
popf
popf
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
inc
add
jle
jle
add
lcall
sub
sub
add
div
add
add
adc
add
les
xchg
xchg
xchg
stos
addl
add
add
add
int3
int3
int3
add
add
add
dec
dec
dec
aas
aas
aas
aas
sbb
sbb
sbb
sbb
sbb
jg
jg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
add
add
add
in
in
xchg
xchg
xchg
add
add
addr16
sub
sub
pop
pop
pop
add
cmp
sub
add
fcomp
fadds
add
add
add
rcrl
sbb
sbb
pusha
pusha
pusha
daa
daa
in
in
in
in
in
test
repnz
add
pop
pop
pop
pop
pop
pop
pop
add
add
add
xchg
xchg
xchg
push
insl
insl
insl
insl
insl
insl
add
add
add
fistpl
sbb
sbb
sbb
add
add
add
or
or
push
push
add
add
clc
clc
clc
add
add
add
mov
mov
add
cmp
cmp
cmp
add
add
add
push
lret
out
out
out
out
arpl
arpl
nop
nop
push
add
int3
int3
int3
int3
sbb
add
sub
sub
sub
sub
sub
sub
sub
sub
rcl
roll
add
fdivrl
add
xchg
xchg
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
push
push
add
add
add
add
push
push
lret
lret
lret
pop
pop
lods
lods
lods
adc
adc
adc
adc
adc
adc
adc
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
add
add
out
out
out
add
add
sbb
sbb
testl
cmp
rol
rol
rol
das
das
das
das
das
das
das
das
das
das
das
das
in
in
add
mov
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
jle
sti
sti
sub
minps
pop
mov
lea
mov
cmpsb
inc
jl
jl
jl
jl
add
je
jns
inc
or
or
add
sub
sub
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
inc
inc
add
sub
sub
add
pop
pop
pop
pop
dec
inc
inc
inc
inc
inc
inc
inc
in
in
in
add
add
in
in
in
in
in
in
in
in
ror
lret
lret
lret
lret
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
loop
loop
loop
div
div
div
testb
out
jecxz
jecxz
add
add
repz
rcl
rcl
add
add
add
xchg
sldt
inc
inc
inc
mov
add
add
ret
ret
ret
add
incl
add
add
push
push
push
push
add
add
lcall
add
add
add
add
je
je
je
and
mov
mov
mov
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
mov
std
int
int
int
int
mov
mov
mov
mov
mov
dec
add
add
fistps
outsl
outsl
outsl
outsl
outsl
rol
shrb
add
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
movsl
add
adc
adc
adc
adc
cmp
sbb
sbb
movsb
movsb
movsb
inc
add
add
add
xchg
xchg
xchg
xchg
add
pop
pop
pop
pop
jl
sub
add
cmp
add
xor
repnz
cmp
add
jno
adc
adc
adc
adc
repz
cmp
add
add
data16
mov
clc
clc
clc
clc
clc
clc
clc
clc
add
es
dec
dec
dec
dec
add
add
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
cs
int3
int3
int3
add
sub
sub
add
add
add
add
cmp
cmp
cmp
pop
pop
add
add
jg
jne
add
loop
loop
loop
mov
cmp
cmp
cmp
cmp
in
in
add
add
add
addb
fiadds
data16
stos
stos
cmp
cmp
cmp
add
fcmovu
fcmovu
add
add
aad
aad
aad
adc
adc
adc
adc
and
add
stos
stos
stos
inc
fidivrs
repz
add
mov
adc
adc
cld
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
add
add
add
in
in
add
add
add
add
add
je
add
add
add
push
scas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
int
int
dec
dec
push
imul
add
add
push
push
push
add
repnz
pop
pop
pop
pop
pop
pop
pop
add
add
call
call
call
icebp
sub
sub
sub
sub
sub
add
and
and
add
jno
jno
jno
add
add
lea
lea
addl
add
cmp
push
push
add
ficoms
add
add
mov
adc
adc
add
add
ret
ret
add
lret
lret
lret
lret
lret
lret
lret
out
out
out
out
out
out
out
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
iret
iret
nop
nop
nop
nop
and
pop
pop
mov
mov
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
and
and
and
xchg
push
push
push
push
push
mov
pop
lret
lret
sbb
lock
add
inc
addr16
jmp
jmp
add
div
div
div
div
testl
add
add
sub
mov
push
push
push
push
imul
lcall
rcl
rcl
rcl
rolb
or
in
insl
insl
insl
dec
dec
jmp
add
add
add
daa
daa
daa
daa
daa
daa
daa
daa
add
add
sbb
jno
cmp
cmp
cmp
add
add
add
rol
add
lcall
sbb
sbb
sbb
sbb
sbb
sbb
add
fcompl
sbb
sbb
add
mov
add
incb
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
inc
inc
inc
inc
pusha
inc
inc
inc
inc
inc
inc
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
push
push
push
aam
add
add
inc
inc
add
insl
dec
dec
dec
add
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
add
jge
jge
add
addb
add
add
add
dec
dec
dec
dec
jb
les
add
add
in
in
in
in
arpl
int
int
int
add
or
add
repz
icebp
icebp
icebp
leave
leave
icebp
icebp
icebp
icebp
add
add
clc
clc
clc
clc
push
push
push
push
push
push
push
push
and
loope
loope
loope
ret
ret
ret
add
ja
ja
ja
jne
jne
jne
jne
bound
repnz
pop
pop
pop
pop
add
add
mov
add
jne
jne
add
js
add
add
add
cli
cli
cli
cli
cli
ret
ret
sub
pop
pop
pop
pop
pop
pop
pop
add
add
je
lahf
lahf
lahf
lahf
lahf
mov
mov
lcall
xchg
xchg
xchg
add
add
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
cmp
xor
xor
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
cmp
add
adc
adc
add
add
add
add
push
add
inc
inc
inc
inc
inc
inc
inc
inc
outsl
outsl
jae
rol
add
add
add
add
int
int
int
mov
gs
sti
sti
sti
sti
sti
sti
sti
in
adc
adc
adc
adc
jle
icebp
icebp
icebp
icebp
add
sbb
sbb
sub
mov
add
vmread
add
add
jmp
add
popa
add
or
xlat
test
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xadd
shlb
add
sub
sub
sub
add
xor
xor
xor
xor
jo
add
adc
adc
adc
adc
adc
js
js
add
xor
jmp
test
add
dec
dec
dec
mov
gs
imul
rcl
rcl
rcl
shll
add
add
add
dec
jnp
jnp
pop
pop
pop
pop
fnstcw
jecxz
jecxz
jecxz
jecxz
into
into
into
into
into
into
push
push
push
push
push
push
add
add
xor
xor
xor
xor
add
add
add
add
or
or
or
or
or
or
or
or
or
or
add
add
or
or
or
add
add
lcallw
add
pushf
or
addb
ss
add
add
sti
sti
sti
add
add
ficoml
icebp
icebp
dec
mov
add
add
push
push
push
push
push
push
push
add
add
add
add
add
add
add
testb
add
add
aam
aam
add
cmp
cmp
add
add
add
loop
loop
jb
jb
jb
jb
lds
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
addl
addl
adc
add
add
in
in
in
in
in
in
in
in
in
rolb
lret
lret
lret
lret
pop
pop
add
add
add
mov
sub
sub
sub
sub
add
jmp
or
or
add
div
div
div
testb
out
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
mov
mov
mov
mov
mov
inc
es
mov
add
ret
ret
ret
addl
fcmovnu
fcmovnu
fildl
int
add
add
fwait
fwait
fwait
fwait
fwait
fwait
add
add
sub
sub
sub
sub
add
add
add
add
call
call
add
add
add
add
add
xlat
push
add
add
sbb
sbb
sbb
push
add
in
in
in
in
in
in
in
in
in
in
jmp
and
and
inc
inc
inc
inc
inc
inc
add
into
into
into
into
into
into
into
into
into
into
in
in
add
add
sbb
sbb
jmp
add
add
inc
ja
mov
add
push
push
push
leave
leave
leave
leave
leave
leave
leave
cmp
add
mov
add
or
or
pop
push
push
add
jge
xchg
xchg
stc
popf
popf
popf
or
or
adc
adc
stos
in
in
ss
add
add
add
mov
mov
mov
mov
mov
mov
jl
or
or
xchg
mov
add
add
loope
loope
add
ljmp
adc
fcmovu
fcmovu
ficoml
push
push
sbb
sbb
add
dec
dec
add
add
add
or
in
in
outsb
outsb
bound
bound
add
add
add
pop
add
loopne
inc
inc
inc
inc
inc
inc
inc
rol
rol
rol
add
add
insl
insl
insl
insl
insl
insl
cmp
pushf
pushf
sbb
sbb
adc
mov
mov
add
add
add
data16
or
or
clc
clc
cmc
add
cltd
cltd
cltd
lret
lret
add
add
rolb
add
add
inc
inc
inc
inc
add
and
add
mov
add
add
aam
aam
aam
aam
aam
add
lock
add
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
add
enter
add
pop
or
or
add
add
add
leave
leave
leave
add
push
push
push
add
jmp
push
push
push
push
push
push
push
push
push
push
push
outsb
outsb
outsb
outsb
outsb
fs
in
in
cmp
lcall
add
outsl
outsl
outsl
outsl
outsl
outsl
mov
mov
xor
pop
outsb
outsb
outsb
outsb
outsb
mov
add
add
sbb
push
push
add
cmp
cmp
cmp
cmp
cmp
cmp
pop
push
push
push
je
bound
add
cmc
add
sub
pop
pop
pop
xor
xor
xor
data16
add
add
in
add
add
enter
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
push
push
push
push
push
push
pop
sti
pushf
pushf
sldt
add
add
add
add
pusha
pusha
add
push
push
push
add
add
sub
add
mov
mov
mov
faddp
add
add
add
or
or
or
jl
jl
add
lods
lods
lods
add
movl
add
pop
pop
pop
pop
lea
add
dec
dec
dec
dec
dec
dec
dec
dec
mov
add
push
push
push
push
push
dec
dec
dec
add
inc
inc
inc
add
nop
nop
nop
nop
nop
add
rcl
rcl
rcl
rcl
rcl
shll
add
dec
dec
dec
add
mov
sbb
sbb
sbb
test
rcl
rolb
add
add
add
add
cmp
test
add
add
add
lea
lea
ja
cs
ds
add
add
add
int
add
testb
add
add
js
add
lahf
lahf
lahf
and
es
stc
stc
out
add
add
mov
add
add
mov
addl
xchg
xchg
xchg
xchg
xchg
ljmp
leave
leave
leave
leave
add
add
xchg
clc
clc
add
add
adc
inc
add
jmp
call
call
call
outsl
or
add
or
add
jb
jb
jb
lods
lods
add
add
add
inc
inc
inc
inc
bound
lea
out
out
out
out
out
out
out
out
aas
in
in
in
in
add
jle
push
push
add
add
into
into
into
into
popf
popf
popf
popf
popf
popf
popf
sub
sub
sub
add
add
add
js
mov
ds
sti
repnz
repz
stc
stc
stc
or
or
repnz
add
mov
mov
mov
mov
mov
addr16
add
popf
popf
popf
add
in
push
inc
inc
inc
inc
inc
inc
inc
xor
xor
addl
add
nop
nop
nop
add
aaa
aaa
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
jbe
sahf
sahf
sahf
sahf
sahf
pop
pop
pop
rol
jns
jns
add
in
in
in
in
in
in
in
in
add
ljmp
rcl
rcl
rcl
add
add
lret
lret
lret
lret
lret
lret
push
push
add
add
rol
rol
rorb
mov
in
and
stc
stc
jg
jg
add
addr16
lret
lret
add
test
test
xor
xor
xor
xor
xor
xor
add
in
div
idivb
jns
add
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
inc
inc
repz
or
or
add
add
mov
mov
mov
mov
mov
mov
mov
add
cmp
incb
add
add
add
push
add
popa
popa
dec
dec
dec
add
out
add
jge
jge
jge
jge
jge
jge
jge
jge
jge
add
jl
jl
jl
jl
jl
jl
jl
jl
jl
xor
xor
xor
xor
xor
xor
out
jp
jp
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
or
or
or
or
or
or
add
add
add
pop
pop
popa
popa
popa
or
sahf
sahf
sahf
sahf
sahf
sahf
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
into
add
cwtl
add
add
cmp
cmp
cmp
cmp
cmp
add
lods
lods
lods
lods
lods
lods
lods
add
add
mov
add
add
add
or
or
incl
add
add
add
add
mov
mov
adc
test
test
test
test
cld
cld
in
in
add
add
add
mov
add
add
add
dec
dec
add
add
add
add
add
jge
rcl
rcl
add
add
add
xchg
xchg
add
add
add
fstp
add
add
jmp
filds
add
add
or
aad
aad
add
and
and
and
and
and
ret
ret
ret
ret
ret
ret
ret
add
add
push
push
dec
dec
inc
add
or
or
or
or
or
or
or
or
or
add
add
es
add
add
std
scas
scas
add
cs
add
sub
add
add
pushf
add
add
adc
adc
adc
adc
add
adc
adc
adc
int
int
int
or
add
ss
leave
leave
leave
leave
rol
cmp
cmp
cmp
push
push
add
add
nop
nop
nop
rol
rol
rcl
add
add
lea
jns
jns
jns
jns
jns
jns
jns
jns
jns
add
xchg
xchg
cmp
add
add
add
sbb
sbb
dec
adc
adc
add
add
add
xor
xchg
add
add
mov
add
add
add
add
add
push
add
xor
add
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
int
int
int
int
int
int
and
and
and
std
std
std
std
std
add
add
pop
pop
pop
pop
pop
add
add
sub
adc
adc
add
inc
inc
test
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
imul
add
add
add
aad
aad
aad
aad
adc
adc
adc
in
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
scas
scas
les
dec
add
add
out
out
dec
sub
sub
sub
sub
sub
sub
sub
sub
add
popf
popf
popf
add
in
in
in
xchg
xchg
xchg
xchg
xchg
add
push
push
sbb
sbb
add
add
add
dec
dec
dec
xchg
inc
inc
inc
inc
inc
inc
inc
add
and
clc
clc
clc
clc
clc
clc
clc
or
add
icebp
icebp
add
ds
and
leave
sbb
int
int
int
int
add
add
pop
pop
sbb
push
push
push
jbe
jbe
add
add
add
add
add
pop
pop
pop
pop
orl
into
into
fimuls
mov
mov
add
and
and
add
add
add
leave
leave
leave
leave
leave
add
add
fcmovu
fcmovu
fcmovu
fiaddl
add
mov
mov
adc
adc
add
add
add
rcl
roll
stos
stos
stos
in
sub
adc
movsl
movsl
movsl
addl
xorl
aam
aam
aam
add
add
push
push
push
push
cltd
cltd
cltd
cltd
add
add
add
inc
add
xor
add
pop
pop
pop
pop
pop
add
sub
add
add
aad
aad
aad
add
add
add
adc
sbb
sbb
sbb
jns
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
aas
div
div
div
div
div
div
div
add
add
add
add
add
mov
stc
stc
add
push
in
in
in
in
in
in
in
in
in
in
in
in
inc
add
pop
pop
pop
cmp
jecxz
jecxz
jecxz
jecxz
add
add
jnp
add
add
add
pop
adc
ja
add
add
add
pop
pop
add
lcall
mov
mov
add
leave
leave
leave
xchg
add
adc
adc
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
cmp
cmp
dec
dec
mov
add
add
mov
je
je
je
je
je
xor
xor
inc
inc
inc
inc
push
add
add
add
pushf
pushf
pushf
pushf
aaa
jo
jo
jo
fldt
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
or
add
add
test
pcmpgtd
add
jmp
repz
fcmovu
fisubl
sbb
add
fcoml
fcmovu
fcmovu
fcmovu
fcmovu
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
and
addb
add
add
add
push
push
push
xlat
xlat
xlat
xchg
xchg
push
push
push
mov
or
xchg
cmc
cmc
cmc
cmc
cmc
jne
out
rcl
rcl
rcl
rcl
add
cmp
cmp
cmp
cmp
cmp
push
xor
xor
xor
pop
aaa
aaa
aaa
add
add
add
fs
je
add
sub
call
add
push
push
push
push
push
ret
ret
ret
ret
ret
ret
cmp
cmp
cmp
jno
jno
jno
jno
jno
dec
dec
dec
dec
dec
add
add
add
add
add
add
add
or
cmc
cmc
cmc
cmc
add
in
in
in
in
in
in
in
in
add
add
add
add
add
or
add
add
add
jno
add
add
add
add
add
inc
inc
inc
ljmp
add
add
xchg
xchg
xchg
xchg
add
add
out
out
add
add
dec
dec
dec
add
lea
out
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
bound
add
add
mov
or
mov
mov
test
nop
nop
pop
movsl
mov
mov
mov
mov
mov
mov
mov
mov
bound
cmc
cmc
cmc
cmc
add
push
push
add
mov
mov
mov
lahf
lahf
lahf
add
add
add
add
int
add
repnz
add
add
xor
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
push
push
push
push
push
push
push
push
push
push
sbb
jmp
add
jns
jns
add
add
add
add
gs
push
add
add
pop
fs
add
loop
loop
loop
loop
aam
aam
aam
mov
add
add
add
add
add
add
add
lret
jp
jp
push
push
push
push
push
push
add
jl
dec
dec
dec
dec
dec
dec
add
scas
scas
scas
scas
add
xchg
add
add
add
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
inc
inc
inc
inc
inc
inc
inc
cld
cld
cld
cld
cld
cld
xchg
xchg
add
add
sbb
sbb
sbb
sbb
xor
xor
add
add
popf
popf
popf
popf
popf
popf
popf
mov
pop
pop
incl
add
mov
xor
add
xchg
xchg
xchg
test
add
add
add
pop
pop
pop
pop
pop
pop
pusha
pusha
pusha
add
add
add
cmp
mov
add
add
mov
icebp
icebp
push
addb
push
jae
jae
sbb
sbb
sbb
sbb
sbb
outsb
outsb
js
add
mov
xor
add
pop
pop
pop
ja
ja
ja
add
add
add
cmp
mov
mov
pop
pop
pop
pop
pop
pop
pop
adc
adc
pop
pop
pop
jns
jns
jns
mov
mov
add
cld
add
mov
add
ret
ret
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
add
add
mov
mov
rcl
sarl
jge
jge
pop
pop
mov
inc
ss
dec
popf
ljmp
pop
jnp
shlb
add
and
andb
xchg
leave
xlat
lcall
test
mov
fimuls
fsubr
push
cmp
and
scas
loopne
rcll
test
push
pusha
loopne
imul
arpl
outsb
inc
cmp
jp
adc
inc
xchg
inc
cmpl
mov
inc
or
mov
add
inc
jecxz
xchg
add
and
xchg
adc
add
in
fs
aam
jmp
dec
jge
push
sub
sbb
and
es
pop
out
mov
mov
and
hlt
cltd
or
ja
sub
push
push
sub
jmp
add
add
loopne
pop
add
xor
add
add
cmpsb
mov
popa
xor
push
cwtl
push
inc
add
mov
jp
add
in
pop
pop
mov
pop
jge
into
clc
sbb
and
int3
dec
push
xor
sub
in
pop
push
and
rol
leave
popf
nop
cmp
sahf
lcall
cli
aaa
stc
andb
jne
jl
dec
mov
icebp
sbb
int3
addr16
bound
je
add
mov
je
sub
loopne
cld
mov
xchg
and
sbb
pop
lahf
cwtl
std
inc
pop
outsl
dec
sub
xchg
pusha
cltd
adc
int
fcmovnb
push
mov
inc
pusha
repz
rolb
add
inc
test
mov
xchg
add
xor
sub
in
rcl
xor
jns
push
push
out
mov
and
negl
ret
in
scas
dec
pop
ret
lahf
shl
fucomip
inc
icebp
jae
icebp
or
and
loopne
inc
scas
rolb
mov
inc
lret
pop
push
movsl
mov
xorb
cs
andb
cmp
arpl
loopne
idivl
add
rcl
movsb
loopne
cli
int
test
lods
out
adc
mov
ror
leave
pop
jns
les
mulb
mov
ja
pusha
mov
push
add
lea
or
ret
test
inc
insl
xchg
andb
bound
dec
std
adc
pusha
add
push
movsb
inc
inc
cwtl
test
and
mov
dec
jge
pusha
inc
and
pusha
mov
pop
and
mov
fistl
push
pushf
je
fstp
jae
loopne
add
inc
inc
out
lea
ja
into
mov
loopne
out
adc
ds
mov
or
sahf
push
add
and
lcall
cmp
adc
mov
pusha
loopne
loopne
or
xchg
pusha
adc
mov
inc
repnz
fs
loopne,pn
mov
add
jge
sub
or
dec
mov
repz
cwtl
adc
lret
lcall
mov
loopne
sub
test
inc
loopne
pop
add
add
add
jnp
stos
push
mov
mov
jge
xchg
add
mov
add
shlb
ret
cmp
pop
mov
mov
test
pop
adc
xchg
pushf
dec
out
pop
cmp
mov
push
hlt
inc
sub
test
mov
add
addb
out
push
andb
add
xor
fdivl
and
and
xor
add
insb
dec
jmp
mov
push
sub
mov
and
cwtl
jne
jne
cli
cld
jl
repz
iret
mov
sbb
fmuls
add
inc
mull
pusha
rcrb
enter
dec
repz
dec
ds
pusha
adc
loopne
or
mov
xchg
xchg
cwtl
aas
fcompl
add
mov
add
xchg
sub
in
jae
fsts
pusha
xchg
mov
sub
pusha
lods
inc
or
jecxz
add
mov
sub
addb
notl
imul
dec
das
test
xchg
fcoms
xchg
addb
ret
jmp
mov
inc
pusha
mov
mov
movsb
mov
or
and
jbe
pusha
shl
rol
out
inc
mov
pop
andl
je
repz
ja
mov
mov
mov
pop
push
inc
popf
loopne
popf
lret
pop
mov
jl
add
enter
pusha
add
pusha
lahf
push
movsl
xchg
xor
aas
xchg
or
adcb
movsl
dec
dec
ficompl
daa
lods
loopne
pop
xchg
icebp
out
std
xchg
pop
in
movsb
loopne
stos
rol
ret
mov
sti
mov
aaa
pushf
mov
outsl
adc
push
pop
cmp
mov
add
insl
outsl
mov
pusha
lock
mov
ja
adc
xchg
imul
loopne
and
mov
inc
out
notb
or
and
les
shlb
sub
shlb
pop
daa
out
xchg
imul
pop
pushf
xchg
clc
out
lret
mov
push
pop
mov
clc
jmp
aad
mov
pop
div
fsubp
mov
imul
add
imul
push
sahf
add
adc
push
mov
fsqrt
inc
and
add
pop
mov
jnp
fwait
pop
xor
and
andb
test
mov
mov
cmc
adc
loop
and
test
inc
sar
cli
insl
jo
shl
xchg
push
xchg
addl
mov
and
clc
jge
loope
test
and
cmp
adc
shlb
xchg
clc
loope
and
insb
fwait
scas
inc
aaa
inc
mov
sarb
adc
leave
shlb
add
pop
les
push
adc
ficomps
xor
dec
sbb
push
xchg
cltd
sti
sub
pusha
ss
aas
jl
and
loopne
pusha
adc
sbb
movl
xchg
testl
sbb
shlb
int
inc
jmp
mov
loopne
sub
xchg
movsl
push
lea
add
mov
and
jmp
push
inc
pusha
mov
mov
test
rol
clc
ds
or
and
xor
mov
cmp
mov
cwtl
int3
imul
sub
fisubs
inc
xchg
inc
fsubrs
gs
loopne
inc
xchg
pop
xor
xchg
test
jbe
mov
cwtl
rolb
mov
dec
inc
out
jl
push
add
orb
jecxz
dec
mov
fisttpll
popa
and
loopne
fistpll
and
mov
pusha
mov
mov
addb
push
pop
popa
jp
adc
insb
xor
xor
push
fstl
andb
addb
fcmovb
cmp
pop
jbe
fmuls
cmpb
push
mov
dec
subl
pusha
mov
push
pop
push
andb
sub
ds
push
adc
jns
cli
outsb
inc
icebp
push
movsb
shl
inc
imul
jge
mov
std
loop
mov
outsl
int3
push
add
out
call
addb
imul
and
imul
jns
loopne
push
andb
jle
out
xchg
sub
cwtl
pop
cmp
pop
jne
fisttpll
inc
ljmp
mov
rclb
dec
adc
int
ret
inc
and
rcll
xor
test
loopne
lods
inc
loopne
add
adc
out
loop
jb
fsubs
pusha
and
shlb
andb
inc
clc
call
dec
mov
and
jne
mov
xchg
pop
dec
adc
add
loopne
pop
lds
pop
mov
and
sub
xor
sbb
cmpsb
add
inc
xor
mov
cmp
pop
inc
fs
mov
out
cmpsl
sub
repnz
xchg
xchg
in
loope
popf
jae
cmp
xor
push
pop
cwtl
inc
mov
fildll
or
xchg
shrb
insb
bound
sysenter
push
dec
test
shlb
push
jne
xor
push
clc
adc
imul
or
pusha
mov
loopne
cmc
les
or
pusha
fdivrl
and
add
pop
xor
and
push
sbb
mov
fwait
out
dec
sbb
andb
cmovs
jg
inc
sbb
and
lcall
loopne
sub
mov
imul
addb
andb
add
mov
sbb
das
pushf
imul
mov
orb
pusha
inc
push
les
lods
rolb
mov
loopne
fsub
lods
inc
mov
ds
mov
clc
and
mov
cmp
out
adc
add
leave
fbld
bound
addb
scas
mov
dec
fdiv
popa
push
dec
push
xchg
pop
stc
push
cmp
scas
inc
shrb
pusha
add
mov
mov
add
mov
mov
out
dec
jecxz
loopne
mov
add
call
and
lods
inc
add
cwtl
pop
fstps
adc
pop
jecxz
lret
mov
xchg
mov
inc
sub
pusha
cmc
outsl
mov
dec
and
inc
inc
dec
add
shlb
loopne
ret
mov
inc
leave
sub
xlat
mov
jns
addr16
loopne
shlb
enter
or
or
inc
fcomip
test
and
rolb
mov
sub
mov
pusha
jo
movsb
add
loop
movsb
pusha
and
sar
lds
pop
pop
mov
dec
mov
xchg
enter
fwait
lds
loopne
dec
cld
fucomip
sahf
data16
and
outsl
sbb
mov
int3
inc
adc
jmp
xor
or
pusha
es
sbb
and
pop
loop
into
out
jns
xchg
testb
test
pusha
arpl
fildll
inc
jb
xor
pusha
inc
xchg
arpl
xor
mov
data16
jae
mov
dec
pop
mov
imul
cmp
push
cld
arpl
lret
fdivp
xor
repnz
mov
arpl
sti
pop
adc
scas
shlb
arpl
aam
adc
or
addb
mov
xorb
nop
cmpsb
pusha
mov
pusha
cmc
lea
inc
rcl
cmp
mov
xchg
cmc
inc
addb
cld
cmpl
push
addb
cmc
jg
ficompl
jmp
jge
jg
rolb
jne
sub
sarb
or
fists
rcrb
jmp
je
pop
sbb
inc
dec
sub
inc
mov
lcall
mov
repnz
xor
pop
ds
jo
daa
add
ss
movl
cmp
mov
addb
xchg
or
pop
add
je
sarb
sub
icebp
jg
ja
mov
pop
loope
xor
xor
out
inc
loope
stc
dec
jecxz
sti
dec
xchg
je
push
sub
orb
inc
gs
xor
loopne
addb
jg
mov
dec
inc
mov
inc
and
jp
sub
loopne
fadds
rol
fisubrs
fmuls
jno
test
mov
and
rolb
and
inc
mov
lret
xchg
ror
out
and
sbbb
pop
pop
push
inc
mov
pushf
dec
in
scas
mov
xchg
fsubrs
mov
addb
and
dec
xchg
mov
push
sub
shlb
loop
and
add
orb
loopne
sbb
shll
notl
pushf
jns
jbe
inc
dec
fs
dec
mov
cmp
mov
cmpb
mov
mov
mov
add
iret
arpl
xchg
mov
bound
inc
pusha
sbbl
daa
ljmp
testl
push
jge
and
xor
addb
push
shlb
ret
cwtl
cmpl
pusha
das
fwait
pop
inc
out
out
xor
pop
das
pop
mov
mov
mov
add
pushf
push
xchg
call
add
or
mov
enter
in
xchg
pop
test
xchg
lds
pusha
loopne
rolb
jmp
or
loopne
pop
jmp
inc
ljmp
fnstcw
pop
jns
lock
aam
lods
pop
push
inc
mov
pusha
and
add
sub
ret
loopne
push
cmpsl
pop
dec
xor
mov
xchg
dec
imul
addb
rcrb
loopne
lock
lcall
testl
push
loopne,pn
popf
fcomps
cmpsb
pusha
loopne
or
rolb
pusha
loopne
andb
lcall
cld
dec
in
sbbl
pusha
dec
dec
cmc
rcrb
xchg
adc
sub
rolb
mov
rolb
or
and
jno
dec
lods
shlb
lcall
sbb
xor
pusha
add
mull
pusha
inc
mov
add
gs
in
mov
mov
adc
dec
fsubs
sbbb
in
push
inc
pop
ret
push
out
notb
icebp
inc
inc
fisttps
and
and
add
add
shlb
jb
sbb
cli
std
xchg
dec
pop
cmc
and
inc
outsl
dec
xchg
cmp
loopne
push
outsl
aas
cmpsl
fisttpl
pop
loopne
iret
add
rorb
mov
rorl
movsl
lahf
test
xchg
test
mov
add
rolb
fstl
cli
aam
loopne
inc
cmpl
mov
mov
out
xchg
fsubrs
push
jbe
add
loopne
cmpsl
cwtl
sbb
inc
rclb
mov
inc
mov
inc
lea
ljmp
addr16
cmp
loopne
addb
and
inc
fs
imul
loopne
mov
mov
xlat
nop
jmp
mov
out
lea
add
daa
xor
mov
shl
cmpl
or
orb
mov
cmp
inc
inc
call
jbe
pusha
mov
xchg
mov
lock
and
adc
mov
inc
add
add
xchg
les
mov
cmpsb
addb
das
shrb
jp
push
mov
mov
jl
mov
or
pusha
cli
and
pop
sub
lcall
mov
insl
hlt
inc
push
mov
cmp
push
push
sbb
jmp
and
and
fidivl
mov
repnz
push
repz
push
js
xor
hlt
sub
nop
cmpsb
addb
jg
inc
js
mov
imul
les
bound
and
push
mov
clc
sti
ljmp
sarb
lret
add
ja
movsl
jg
cmc
adc
fadds
push
lret
mov
outsl
aas
jb
lret
out
inc
es
pusha
mov
cld
inc
inc
je
arpl
enter
leave
pop
push
loopne
bound
add
addb
inc
ror
dec
jb
mov
cmc
outsl
mov
shlb
add
stc
out
fwait
fs
pusha
pusha
leave
push
int
mov
imul
xchg
pop
or
inc
pop
inc
mov
add
mov
orl
add
add
nop
fstpl
outsb
fdivs
mov
add
fwait
outsb
sti
arpl
mov
mov
rolb
dec
loope
xchg
xchg
jnp
add
sub
inc
or
loopne
mov
pop
xor
push
jbe
inc
mov
loopne
jae
inc
fistl
mov
out
xchg
sub
loopne
shlb
imul
and
rcll
push
loopne
pop
inc
testl
cwtl
mov
aam
idivb
inc
and
dec
dec
fistl
and
inc
daa
pop
cli
jmp
mov
subb
add
xor
je
pushf
loopne
stos
mov
enter
ret
ret
mov
add
in
jno
test
add
sbb
mov
pushf
test
dec
call
fdivl
adc
xor
out
filds
add
inc
movsb
inc
inc
cmpl
mov
pusha
rcrb
jmp
cwtl
mov
loopne
jno
out
sub
add
and
mov
inc
repz
movsb
pusha
loopne
mov
stos
dec
mov
rclb
out
lcall
in
scas
mov
data16
cmpb
loop
push
inc
pusha
enter
jmp
daa
ret
pop
dec
insb
lock
ret
inc
sti
mulb
cld
lcall
int
mov
std
add
cmp
shlb
adc
ds
scas
and
sbbb
add
rolb
pop
iret
inc
pop
insb
in
aas
and
sub
loopne
and
notl
lods
add
pop
js
xor
in
and
jmp
ret
addr16
inc
mov
or
cli
ljmp
push
or
and
xor
scas
add
test
clc
leave
push
loopne
sbb
mov
jmp
and
cli
xlat
xchg
mov
cmp
loopne
jbe
add
cwtl
inc
cmp
pop
xorl
mov
and
ss
xor
les
add
loopne
movsb
inc
sar
xchg
sbb
inc
rclb
push
rcrl
dec
and
andb
xchg
jne
lods
loopne
pop
repnz
and
add
orl
or
and
cmp
aad
add
add
repnz
rolb
andb
jne
and
mov
int
mov
js
lds
and
out
sbb
push
xchg
rolb
cltd
mov
and
sbb
mov
or
sbb
mov
aam
fcoml
sbb
loopne
lret
add
nopl
addb
popf
adcl
fistpll
cltd
mov
mov
add
dec
je
ss
out
fcom
repnz
mov
sub
inc
fidivrl
and
cmpb
loop
cld
mov
and
cmp
inc
sbbb
xor
jl
inc
fisttpl
addb
loopne
movsl
push
js
mov
imull
out
mov
cmp
imul
stc
popa
adc
dec
pop
jmp
mov
mov
and
test
pop
movsb
shlb
inc
mov
or
inc
ffree
ret
cmp
int
push
and
mov
mov
js
popf
sti
mov
cwtl
addb
clc
mov
pusha
mov
arpl
or
mov
inc
sar
cltd
push
daa
jb
sbb
or
and
cmp
push
popa
mov
popa
out
sub
mov
sub
iret
lahf
lods
addb
daa
daa
mov
xchg
mov
rclb
xchg
xor
mov
dec
dec
mov
sahf
inc
mov
xchg
ret
hlt
gs
dec
aam
inc
test
push
mov
add
cmpsl
or
js
jmp
push
addb
push
inc
and
shll
mov
sbb
test
pusha
jle
inc
mov
and
or
imul
andb
pusha
imul
out
lea
repnz
push
test
loopne
in
je
dec
sbb
jg
sbb
sbb
or
push
inc
xchg
jl
dec
push
pop
jge
mov
dec
mov
dec
loopne
test
cli
addr16
lret
out
mov
mov
in
mov
aaa
das
jns
inc
fisubs
inc
shlb
divss
pusha
add
mov
inc
adcb
push
lds
lret
or
add
jb
hlt
inc
negl
jmp
divl
fadds
xchg
cmp
rclb
xor
inc
push
imul
mov
sub
add
inc
cmp
arpl
pop
lret
pop
jbe
mov
enter
and
aad
andb
cmp
pop
dec
into
in
lret
or
adcb
fwait
sub
and
inc
adc
and
gs
mov
test
jmp
shrb
jmp
popf
cli
cmp
scas
jae
add
add
mov
pop
add
xchg
mov
leave
sub
and
pop
jl
mov
fs
rolb
fimuls
pusha
mov
push
jg
sahf
add
cli
cmp
iret
test
and
ds
mov
add
rcll
and
loopne
fld
adc
loopne
test
pop
or
jmp
dec
inc
aam
test
loopne
mov
adc
xchg
stos
pusha
add
les
xor
mov
cs
daa
and
xor
ret
insb
loopne
mov
jle
outsl
push
roll
and
xchg
ljmp
pop
rolb
inc
jecxz
add
and
jl
sti
push
andb
adcb
mov
addb
xchg
mov
push
push
xchg
mov
and
mov
dec
daa
xchg
mov
std
lods
add
xor
push
lods
mov
pusha
and
ds
jns
pop
fidivrs
dec
enter
ljmp
loopne
xor
jne
aam
mov
mov
movsb
andb
dec
xchg
repz
inc
rcl
movsl
xlat
loop
xor
movsl
jle
sbb
adc
popf
or
or
shlb
cld
mov
xchg
inc
mov
out
push
outsl
add
rcrl
shufps
pop
outsl
and
loop
add
shlb
xor
leave
mov
sub
or
push
xor
addb
add
push
mov
lahf
imul
pusha
outsb
aaa
mov
xchg
loopne
and
or
in
cmp
pusha
add
lahf
fbstp
setne
loopne
add
lahf
popa
insb
mov
and
insl
cmp
dec
addb
mov
adc
adc
fdivs
pop
in
daa
mov
aas
dec
mov
adc
mov
cmp
hlt
movsl
dec
addb
or
addb
subl
jp
fistpll
lret
mov
sbb
and
mov
dec
scas
and
div
mov
add
inc
jg
loopne
jnp
hlt
notl
jecxz
inc
inc
jns
lock
pop
mov
cld
mov
and
shll
rol
cmp
bound
enter
mov
cld
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
jmp
lea
movl
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
xor
fisttpll
xor
imul
add
add
mov
jl
je
dec
dec
hlt
push
xchg
inc
sub
pusha
test
sbb
iret
jecxz
and
nop
dec
mov
push
add
and
popa
cwtl
inc
xchg
out
cmpsb
addb
push
jo
stc
jnp
add
andb
push
jmp
lods
add
xchg
sahf
mov
jo
inc
cmpsb
mov
stos
loopne
mov
fldl
xchg
jns
cltd
xchg
add
out
mov
add
or
sub
int
cmp
jnp
xchg
inc
xchg
jg
lock
push
in
call
xlat
loopne
fs
add
cmc
cltd
inc
lock
xor
add
pop
cmp
sbb
xor
add
push
sbb
push
negb
pop
sbb
sub
fbld
jle
sub
inc
insl
les
shll
jmp
out
mov
mov
lret
xchg
pop
fwait
mov
push
xchg
add
mov
pusha
mov
push
inc
push
out
fadds
and
add
in
push
jae
adc
xor
mov
mov
aas
push
popf
cltd
mov
sbb
cmp
repnz
shl
xchg
push
rol
cs
and
or
pusha
andb
mov
ds
xchg
xor
scas
ret
movsl
sbb
push
add
push
int3
data16
inc
popf
xor
adc
mov
fstl
and
adc
mov
mov
pop
lods
fpatan
hlt
xchg
inc
repz
sub
pop
daa
pop
mov
and
mov
add
cli
xor
sti
lods
and
jne
mov
pusha
push
rolb
jmp
outsl
inc
mov
loopne
ficompl
dec
into
pop
pushf
push
fldenv
and
add
inc
loope
aas
fdiv
nop
lcall
mov
or
cmp
inc
pop
repnz
add
stos
insl
inc
stc
aad
xchg
std
jp
jnp
cli
jge
into
or
aaa
outsl
cmp
cmpb
pop
jecxz
jno
idivb
pusha
inc
cmc
mov
loopne
push
aam
shlb
lcall
shlb
dec
xor
loop
andl
xor
sbb
dec
jbe
add
mov
sub
shlb
xchg
xor
dec
inc
and
and
mov
and
cs
mov
cmp
sub
and
arpl
mov
pusha
jns
rolb
pop
aad
and
cli
inc
out
fdivrs
mov
mov
sub
xchg
dec
mov
mov
dec
mov
ret
jb
xchg
xchg
push
call
jl
mov
ljmp
sub
shr
cltd
lods
shlb
adc
cmp
iret
cwtl
inc
in
movsb
mov
mov
shlb
add
loopne
leave
mov
mov
loopne
aad
rolb
popa
jno
stos
lock
mov
cmpsl
dec
ljmp
in
add
inc
jns
jmp
pusha
pusha
imul
loopne
xor
xchg
or
ror
xlat
int
rclb
xor
cmpsb
pusha
loopne
orl
loopne
punpckhbw
loopne
mov
inc
shlb
inc
adc
xchg
rcr
das
lahf
or
add
fcomps
shrb
test
inc
test
shr
data16
shl
mov
cltd
and
push
pusha
xorb
pusha
shlb
pop
push
hlt
cmc
repnz
sbb
inc
add
push
push
gs
arpl
pop
sub
xor
fdiv
mov
das
pop
pushf
jp
lods
xor
in
loope
int
test
and
subl
add
rcrb
and
loopne
addb
in
mov
bound
pusha
or
adcb
fs
xor
pop
lret
fcmovnb
popl
shrb
xor
aad
adc
and
pop
enter
dec
mov
sti
insl
fbstp
lods
mov
add
fidivl
sub
mov
jno
faddl
xchg
cwtl
and
shrb
loop
sbb
push
cmpsb
loopne
test
icebp
std
dec
mov
enter
mov
stos
jae
add
xchg
jne
shll
push
and
clc
and
add
js
aam
sub
mov
mov
cmp
xchg
xchg
mov
shlb
xchg
adc
test
mov
pusha
pusha
mov
and
scas
cmp
xor
mov
jmp
ss
mov
inc
fcmove
call
push
add
out
add
leave
mov
push
hlt
mov
push
pusha
and
inc
mov
sub
jecxz
sbb
sbb
addb
xchg
mov
loopne
push
les
pop
pop
mov
repnz
shlb
scas
or
add
fistps
into
fwait
xchg
and
negl
mov
xlat
ljmp
sub
loopne
mov
mov
push
ds
rcr
sbb
mov
std
xchg
cmp
repnz
aad
insl
rcll
mov
push
xor
xor
mov
fwait
xor
pop
lahf
xchg
fs
stc
lret
fwait
cmp
loopne
addb
add
andb
mov
add
shrb
push
pop
hlt
lret
aaa
adc
push
inc
jae
cmc
cmp
lods
je
mov
mov
andb
pop
insb
jge
xor
and
mov
fldl
push
addb
and
add
add
cmp
mov
addr16
xchg
cmp
and
je
lea
mov
popf
adc
pop
mov
imul
mov
lds
shlb
rol
inc
loopne
xchg
leave
push
mov
xor
sbb
movsl
cmp
pop
sbb
jmp
insl
sbb
shll
stos
add
ljmp
xchg
cmp
imull
andb
sbb
jg
in
adc
popa
sbb
mov
popf
or
mov
mov
mov
and
add
jno
pop
add
addr16
fisttpl
loope
outsl
stos
pop
lds
orb
inc
incb
loopne
sbb
int3
pop
mov
outsl
das
pop
xchg
xchg
in
adc
ficomps
push
insl
inc
adc
pop
sarl
fmul
jp
insb
add
shlb
add
xorl
xchg
and
xor
push
jge
in
and
mulb
and
dec
iret
subl
lahf
test
adc
jl
es
xorb
sbb
clc
push
push
loope
xor
sti
push
add
sbb
fcomps
dec
addb
les
sbb
or
rorb
loopne
mov
and
add
fwait
push
xchg
xchg
add
pusha
and
jmp
inc
xchg
inc
adc
lea
mov
addb
loopne
xlat
dec
jno
mov
xchg
in
sti
pushf
push
clc
in
inc
xchg
mov
shlb
hlt
in
pushf
mov
and
and
or
mov
loopne
shll
and
pusha
and
rolb
popf
jns
pusha
pusha
stc
mov
mov
jae
fwait
push
loope
rol
repz
mov
loopne
lret
rcll
das
sub
outsb
das
ret
and
sahf
cmc
idiv
sti
fld
pop
fnstsw
pop
aaa
inc
sbb
jno
sarb
push
xchg
mov
mov
lahf
loope
incb
inc
push
mov
mov
lea
sub
pusha
test
shl
movsl
push
add
sub
sbb
push
test
loopne
pop
sub
lahf
xchg
jns
jnp
or
insb
lret
out
cmc
lret
and
mov
pop
mov
add
xchg
dec
jge
add
dec
cwtl
ret
and
jmp
pushf
pop
and
popa
jl
test
mov
xchg
push
aad
leave
lods
rol
or
add
loopne
jo
mov
sbb
jecxz
addb
adc
add
pop
int3
mov
in
jnp
pop
pop
lea
stos
aaa
jl
shlb
xchg
mov
enter
stc
scas
and
inc
sub
loopne
jno
cs
rcrb
pop
sahf
sbb
sbb
call
fidivrs
mov
movsb
addb
mov
and
cli
enter
stos
mov
and
adc
ret
dec
out
cwtl
inc
idiv
pop
dec
mov
repz
jp
dec
xchg
xor
imul
push
shll
ret
dec
mov
pop
fdiv
imul
insl
cmpsl
add
sub
add
xchg
xchg
jns
and
clc
jnp
inc
imull
inc
out
cmp
cwtl
push
das
pop
loope
stos
add
mov
add
xchg
jg
inc
add
and
sahf
mov
loopne
xchg
push
xchg
jl
iret
inc
push
cmc
out
leave
jae
les
cmpsl
incb
and
dec
dec
test
pusha
add
and
test
and
cmp
out
imul
inc
lds
enter
in
push
jp
loope
lods
aad
mov
mov
lock
inc
xchg
cli
xlat
add
pusha
repnz
es
and
lea
push
jl
pushf
mov
in
or
inc
mov
idivb
andb
mov
and
mov
add
notl
xor
pop
and
sar
std
mov
add
add
rcr
sub
cs
rcl
insl
data16
loopne
pop
sahf
xchg
fldenv
and
loopne
sub
xorw
pop
adc
int3
mov
pusha
sti
fimull
add
pusha
mov
push
add
enter
mov
mov
sbb
loopne
movsl
pop
or
cmpsb
shl
dec
in
mov
xorb
arpl
sbb
in
stos
rolb
cld
jb
fists
movsb
and
div
sti
repz
aam
sub
cwtl
lea
sbb
mov
addb
pop
pop
sub
sub
imul
addb
pusha
mov
mov
and
out
rclb
cwtl
sbb
jmp
test
ds
sbb
loopne
add
sarb
sti
sti
sbb
cmp
icebp
arpl
addb
fs
push
xchg
pop
lret
pusha
outsl
popa
xchg
adc
and
rol
sbb
cltd
jecxz
sub
mov
mov
and
dec
pop
xor
fisttps
loopne
test
add
push
pusha
pusha
inc
sub
inc
adc
pushf
mov
loopne
andb
lretw
call
loopne
into
sbb
cmp
mov
shlb
in
scas
mov
and
push
mov
aad
in
or
dec
xlat
or
sahf
addr16
pop
inc
sbb
sub
mov
lods
and
cmc
insl
sahf
and
add
pop
mov
lcall
sbbl
inc
xorb
rol
jnp
pusha
or
cmpsb
addb
out
imul
pusha
jg
adc
pusha
loopne
mov
insb
dec
nop
int
aam
hlt
inc
rcr
dec
jae
jnp
int
dec
loop
int3
outsb
loope
jg
sbb
pusha
imul
rolb
add
pop
pop
andl
out
loopne
mov
sbb
push
fucomip
jmp
cli
clc
fmull
or
mov
shr
push
loop
addb
adc
loope
sahf
pop
sbb
ret
push
and
dec
inc
push
scas
rolb
repz
testb
test
loopne
add
std
pop
rcll
lods
xlat
and
sarb
imulb
and
pop
jmp
fimull
into
in
jmp
push
mov
ret
dec
and
mov
cmpl
inc
jb
jecxz
push
adc
inc
adc
inc
sti
jo
mov
aam
lahf
lods
add
das
andb
dec
enter
popf
es
andl
pop
pop
xor
sbb
jmp
add
cmp
rcrl
xor
out
push
sub
orb
pusha
xchg
cmp
adc
and
or
subb
jb
push
out
mov
inc
add
popa
xchg
inc
cmp
push
add
rorb
dec
int
rclb
dec
andb
stos
add
add
pushf
add
pop
push
sar
sub
ffree
aam
shll
arpl
mov
dec
aaa
ss
fxtract
stc
adc
ja
in
xor
pusha
inc
push
push
push
in
mov
add
jnp
lods
or
adc
dec
xchg
mov
outsb
les
lods
loopne
inc
adc
sub
sahf
add
and
push
mov
jno
sub
xor
inc
notb
out
xor
mov
fbstp
push
nop
mov
pop
rclb
cmp
loopne
sbb
jnp
and
sub
loopne
loopne
fadd
pop
lds
and
jbe
out
sti
sbb
mov
sbb
fucomp
inc
inc
add
mov
sbb
jp
loop
aad
jo
add
sbb
dec
sbb
scas
out
aad
andb
aad
add
dec
enter
loope
scas
repnz
inc
aad
mov
mov
pop
adc
mov
movsl
nop
lcall
inc
inc
stos
sbb
add
pusha
outsl
sbb
dec
xchg
add
dec
pop
stc
arpl
and
xchg
xor
test
in
add
add
and
pop
and
mov
add
arpl
pop
mov
pop
inc
enter
pusha
lcall
loopne
repz
addb
push
and
orb
mov
dec
xor
pusha
loopne
repnz
cld
jbe
or
jae
or
cmpsl
sub
push
gs
pusha
add
pop
pop
popf
jb
cltd
cmpsb
inc
loopne
lods
pop
mov
rcr
out
lds
ja
jecxz
jno
xchg
xchg
jp
rolb
sti
andb
inc
cli
out
mov
das
adc
outsb
scas
loopne
inc
xor
add
cmp
push
clc
repnz
nop
cld
jae
xor
add
bound
inc
push
jmp
xor
add
add
add
and
add
mov
clc
repnz
nop
cld
jae
bound
xlat
inc
je
shlb
push
mov
leave
nop
jmp
add
xchg
add
nop
push
mov
leave
nop
jmp
cmp
in
pusha
mov
mov
xchg
ret
push
add
je
cmp
sti
add
clc
repnz
nop
cld
jae
ljmp
sbb
push
mov
leave
nop
jmp
add
add
add
gs
mov
clc
repnz
nop
cld
jae
lcall
push
push
mov
xchg
ret
scas
sti
xor
add
add
popa
call
clc
repnz
nop
cld
jae
xchg
jno
adc
push
clc
repnz
nop
cld
jae
add
popf
gs
sub
push
mov
xchg
ret
xor
add
add
xlat
inc
mov
call
nop
push
mov
leave
nop
jmp
jmp
aad
inc
sbb
imul
ret
add
add
add
adc
rclb
loop
inc
add
adc
add
add
xchg
fwait
clc
repnz
nop
cld
jae
add
xlat
rol
sub
add
jb
inc
add
push
jmp
push
push
mov
xchg
ret
add
xlat
add
add
dec
mov
mov
and
sar
repnz
nop
cld
jae
aam
add
sub
pusha
inc
jmp
add
gs
inc
add
aad
sub
aas
out
pop
add
clc
repnz
nop
cld
jae
add
jno
add
lea
push
mov
xchg
ret
push
add
shlb
push
repnz
nop
cld
jae
mov
add
add
push
mov
xchg
ret
xchg
fldenv
add
fimuls
adcb
jg
clc
repnz
nop
cld
jae
dec
inc
and
add
nop
cld
jae
jne
mov
test
pusha
dec
repz
push
mov
xchg
ret
inc
add
add
add
cmpsl
mov
push
mov
xchg
ret
popf
popf
in
add
push
mov
nop
nop
cld
jae
ljmp
mov
sbb
push
mov
xchg
ret
add
jne
add
xor
push
push
mov
xchg
ret
add
add
je
xor
psubq
subl
mov
leave
nop
jmp
add
fsts
test
and
sti
clc
repnz
nop
cld
jae
lcall
aad
call
leave
nop
jmp
test
jno
jne
add
push
pop
push
mov
xchg
ret
add
dec
add
pop
clc
repnz
nop
cld
jae
inc
add
ret
gs
outsl
mov
push
mov
xchg
ret
je
and
add
test
add
clc
repnz
nop
cld
jae
jne
data16
add
cltd
add
clc
repnz
nop
cld
jae
mov
add
add
iret
sbb
add
nop
jmp
add
lcall
clc
repnz
nop
cld
jae
dec
xchg
xor
mov
xchg
ret
add
and
push
clc
repnz
nop
cld
jae
add
add
addl
sbb
clc
repnz
nop
cld
jae
add
jge
sbb
clc
repnz
nop
cld
jae
add
and
pop
out
mov
or
add
dec
cmovne
gs
add
ljmp
xchg
clc
repnz
nop
cld
jae
roll
push
xor
clc
repnz
nop
cld
jae
xchg
mov
jne
add
je
clc
repnz
nop
cld
jae
mov
add
add
push
mov
xchg
ret
add
aas
add
add
movl
add
add
add
mov
push
aaa
xchg
clc
repnz
nop
cld
jae
xor
add
lcall
cmp
nop
push
mov
leave
nop
jmp
push
push
push
mov
xchg
ret
je
add
add
and
add
nop
push
mov
leave
nop
jmp
add
data16
add
mov
xchg
ret
add
push
add
lea
clc
repnz
nop
cld
jae
inc
add
data16
or
loopne
lret
mov
clc
repnz
nop
cld
jae
add
pop
or
mov
xchg
ret
add
sti
aam
xor
ljmp
adc
repnz
nop
cld
jae
add
gs
add
inc
mov
mov
xchg
ret
add
jno
add
push
xlat
popf
add
push
mov
xchg
ret
lcall
wbinvd
mov
clc
repnz
nop
cld
jae
popf
add
or
subl
inc
add
in
add
xor
nop
push
mov
leave
nop
jmp
add
mov
sbb
mov
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
mov
add
push
add
arpl
test
and
add
repnz
nop
cld
jae
or
add
fstpt
add
jmp
push
lock
jmp
push
mov
xchg
ret
or
jb
test
jno
adc
jge
les
push
mov
xchg
ret
push
add
pop
clc
repnz
nop
cld
jae
adc
and
inc
rep
clc
repnz
nop
cld
jae
add
inc
cmp
pop
push
mov
xchg
ret
pusha
data16
cmp
add
adcb
add
add
nop
push
mov
leave
nop
jmp
add
xchg
add
andb
shlb
sub
repnz
nop
cld
jae
push
test
add
inc
loopne
sbb
push
mov
leave
nop
jmp
aam
gs
jne
push
jno
push
push
mov
xchg
ret
test
and
call
add
sti
jno
ret
and
push
xchg
aam
loopne
mov
mov
leave
nop
jmp
xchg
add
xchg
add
scas
outsl
push
nop
push
mov
leave
nop
jmp
popf
dec
add
add
adc
arpl
and
add
repnz
nop
cld
jae
add
add
add
nop
push
mov
leave
nop
jmp
add
add
jae
jne
add
push
mov
inc
adc
repnz
nop
cld
jae
mov
xor
jno
xor
clc
repnz
nop
cld
jae
ljmp
clc
repnz
nop
cld
jae
add
mov
mov
and
loope
clc
repnz
nop
cld
jae
add
bound
add
test
pop
rep
clc
repnz
nop
cld
jae
dec
cmp
add
push
push
mov
xchg
ret
add
adcl
ss
mov
clc
repnz
nop
cld
jae
add
add
sbb
mov
leave
nop
jmp
aas
or
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
dec
jp
xor
mov
xchg
ret
test
push
mov
add
mov
and
rcr
jmp
cld
jae
add
add
nop
cld
jae
add
push
scas
aas
shrl
repz
repnz
nop
cld
jae
xlat
sti
pop
add
jne
call
leave
nop
jmp
add
dec
jno
xor
cli
sahf
ljmp
nop
cld
jae
cmp
lcall
sub
add
fnsave
add
add
bound
ja
nop
cld
jae
xchg
add
add
mov
add
clc
repnz
nop
cld
jae
add
push
mov
add
clc
repnz
nop
cld
jae
aas
add
pop
add
nop
cld
jae
sub
add
or
add
repnz
nop
cld
jae
test
add
inc
fld
xchg
jmp
add
je
add
aas
add
mov
add
push
mov
xchg
ret
lldt
test
push
push
mov
xchg
ret
pop
push
add
add
or
jo
nop
push
mov
leave
nop
jmp
add
add
shr
cmp
nop
push
mov
leave
nop
jmp
and
aad
mov
nop
push
mov
leave
nop
jmp
or
dec
add
repnz
nop
cld
jae
add
je
dec
lds
nop
nop
cld
jae
inc
add
add
ret
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
add
nop
push
mov
leave
nop
jmp
dec
fs
add
fs
clc
repnz
nop
cld
jae
ljmp
aas
test
inc
outsl
ret
nop
push
mov
leave
nop
jmp
xchg
in
push
jge
push
loopne
mov
xchg
ret
or
xchg
add
add
xbegin
jae
add
pusha
push
inc
add
aad
clc
repnz
nop
cld
jae
add
add
ljmp
clc
repnz
nop
cld
jae
add
push
call
clc
repnz
nop
cld
jae
add
inc
stc
rol
push
mov
xchg
ret
add
add
add
add
mov
push
mov
xchg
ret
add
test
add
xchg
scas
loopne
test
mov
leave
nop
jmp
inc
push
psubusw
sbb
clc
repnz
nop
cld
jae
push
add
shll
clc
repnz
nop
cld
jae
push
mov
add
in
sbb
nop
nop
cld
jae
ret
outsl
add
push
mov
xchg
ret
jno
xor
cmp
mov
adc
push
mov
leave
nop
jmp
sti
data16
dec
and
push
mov
xchg
ret
add
or
clc
repnz
nop
cld
jae
aad
and
add
popf
mov
clc
repnz
nop
cld
jae
add
add
sub
pusha
and
mov
leave
nop
jmp
test
and
inc
add
add
add
repnz
nop
cld
jae
add
ret
pop
push
mov
xchg
ret
mov
push
mov
leave
nop
jmp
push
add
add
adc
xchg
nop
push
mov
leave
nop
jmp
add
xor
subl
rcrb
repnz
nop
cld
jae
ret
dec
jno
xor
nop
nop
cld
jae
lcall
fwait
nop
push
mov
leave
nop
jmp
mov
add
arpl
repnz
nop
cld
jae
data16
ret
add
push
mov
xchg
ret
sti
add
mov
call
mov
leave
nop
jmp
jno
je
inc
add
aad
sbb
mov
xchg
ret
add
mov
jbe
mov
sti
clc
repnz
nop
cld
jae
sub
sldt
loopne
sub
mov
xchg
ret
xchg
in
mov
sub
jne
jg
clc
repnz
nop
cld
jae
sti
in
xlat
mov
xor
push
mov
xchg
ret
add
jmp
push
imul
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
test
push
aas
adc
nop
jmp
ljmp
repz
clc
repnz
nop
cld
jae
or
fs
ror
test
add
repnz
nop
cld
jae
fs
push
add
clc
repnz
nop
cld
jae
jmp
mov
or
xchg
and
add
mov
jge
clc
repnz
nop
cld
jae
add
add
addl
clc
repnz
nop
cld
jae
orl
pop
mov
push
mov
xchg
ret
push
add
mov
and
add
repnz
nop
cld
jae
add
inc
dec
stc
jne
clc
repnz
nop
cld
jae
test
aam
push
push
mov
xchg
ret
dec
add
add
push
mov
das
add
add
pusha
add
mov
inc
out
add
fiadds
push
jmp
or
add
add
aam
add
jne
push
push
dec
xor
mov
xchg
ret
add
add
jno
sub
leave
nop
push
mov
leave
nop
jmp
adc
test
add
ljmp
nop
cld
jae
dec
dec
xor
add
aad
dec
add
clc
repnz
nop
cld
jae
xlat
add
inc
add
ret
add
clc
repnz
nop
cld
jae
dec
add
xor
mov
fld1
push
mov
xchg
ret
sti
add
add
add
test
dec
cmp
repnz
nop
cld
jae
add
outsl
popf
add
pushl
call
mov
inc
add
push
push
inc
inc
add
clc
repnz
nop
cld
jae
pminsw
or
pop
mov
add
mov
clc
repnz
nop
cld
jae
aad
push
jmp
addb
xor
clc
repnz
nop
cld
jae
scas
fs
add
xor
fistpl
clc
repnz
nop
cld
jae
mov
jp
mov
fmull
mov
clc
repnz
nop
cld
jae
add
or
xlat
sub
pop
dec
mov
clc
repnz
nop
cld
jae
add
add
pusha
adc
pop
clc
repnz
nop
cld
jae
and
add
jecxz
clc
repnz
nop
cld
jae
inc
aam
add
adc
pusha
push
cmp
nop
push
mov
leave
nop
jmp
sti
or
je
xchg
nop
push
mov
leave
nop
jmp
inc
add
sub
clc
repnz
nop
cld
jae
jno
add
jno
mov
nop
push
mov
leave
nop
jmp
mov
and
jne
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
xchg
add
add
gs
xchg
shr
call
clc
repnz
nop
cld
jae
aad
add
ret
push
mov
xchg
ret
add
add
add
add
pop
imul
clc
repnz
nop
cld
jae
mov
add
push
mov
xchg
ret
add
add
xor
ret
lret
mov
nop
push
mov
leave
nop
jmp
popf
dec
lcall
add
jg
inc
add
add
mov
mov
xchg
ret
add
add
pusha
add
mov
add
test
add
aad
sbb
call
clc
repnz
nop
cld
jae
inc
push
clc
repnz
nop
cld
jae
add
add
test
test
add
clc
repnz
nop
cld
jae
jb
or
add
xor
nop
cld
jae
add
adc
lcall
xor
clc
repnz
nop
cld
jae
add
add
int3
cmp
shl
test
nop
push
mov
leave
nop
jmp
sti
add
out
pusha
sbb
mov
push
clc
repnz
nop
cld
jae
and
add
jo
and
clc
repnz
nop
cld
jae
add
fs
mov
xchg
ret
orl
dec
jb
pusha
nop
push
mov
leave
nop
jmp
dec
jne
add
xor
push
clc
repnz
nop
cld
jae
add
add
jne
add
icebp
pop
clc
repnz
nop
cld
jae
outsl
push
aad
add
add
xchg
pop
clc
repnz
nop
cld
jae
add
ret
adc
push
mov
xchg
ret
mov
add
or
repnz
nop
cld
jae
jno
mov
add
int3
gs
clc
repnz
nop
cld
jae
xor
test
add
sbb
loopne
pushf
ret
push
mov
xchg
ret
add
add
addl
inc
call
inc
add
and
add
add
mov
add
push
mov
xchg
ret
lcall
xlat
not
push
mov
xchg
ret
in
jb
add
mov
repnz
nop
cld
jae
popf
jb
test
add
shr
nop
push
mov
leave
nop
jmp
add
xlat
inc
push
inc
push
dec
nop
push
mov
leave
nop
jmp
add
add
out
or
and
push
mov
leave
nop
jmp
dec
mov
add
out
jmp
push
mov
xchg
ret
outsl
add
lcall
jge
add
add
add
push
push
mov
xchg
ret
add
dec
test
add
pop
and
repnz
nop
cld
jae
jmp
add
les
dec
push
clc
repnz
nop
cld
jae
add
mov
lcall
clc
repnz
nop
cld
jae
add
add
ljmp
call
nop
jmp
je
add
jmp
add
xchg
mov
add
add
fwait
clc
repnz
nop
cld
jae
jmp
add
nop
nop
cld
jae
mov
xchg
mov
adc
repnz
nop
cld
jae
jmp
fdivrl
clc
repnz
nop
cld
jae
push
scas
add
add
out
sbb
les
repnz
nop
cld
jae
add
ljmp
mov
leave
nop
jmp
or
inc
or
sub
loopne
sub
jne
clc
repnz
nop
cld
jae
lcall
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
add
add
fs
xlat
fs
into
mov
jbe
add
xchg
add
add
add
iret
mov
nop
push
mov
leave
nop
jmp
jmp
add
pop
sub
push
mov
xchg
ret
add
flds
inc
dec
add
and
jbe
add
push
mov
xchg
ret
add
mov
subl
push
mov
xchg
ret
jno
add
add
and
add
clc
repnz
nop
cld
jae
sub
gs
inc
lea
sbb
and
mov
add
inc
sbb
add
repnz
nop
cld
jae
add
adc
movb
loopne
and
push
push
mov
xchg
ret
add
jmp
stos
add
cmp
test
push
mov
xchg
ret
add
add
add
ret
loopne
aas
stos
push
mov
xchg
ret
ljmp
rcl
sub
clc
repnz
nop
cld
jae
or
in
psllq
add
xchg
aad
mov
test
cmp
mov
nop
nop
cld
jae
xor
or
add
ret
xor
decl
add
inc
ret
or
pcmpeqb
repnz
xchg
ret
add
adc
add
clc
repnz
nop
cld
jae
add
add
push
add
add
add
nop
jmp
in
sub
mov
out
nop
push
mov
leave
nop
jmp
add
add
dec
sub
repnz
nop
cld
jae
test
jb
mov
ljmp
inc
add
add
add
rorl
mov
xchg
ret
add
mov
push
push
rorl
nop
nop
cld
jae
jmp
add
and
pushf
sti
push
clc
repnz
nop
cld
jae
jno
add
dec
or
pusha
js
fistpl
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
add
inc
inc
test
add
add
mov
leave
nop
jmp
add
ljmp
add
push
mov
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
ljmp
add
adc
push
mov
leave
nop
jmp
add
add
add
add
ret
and
push
mov
xchg
ret
add
add
add
push
push
mov
xchg
ret
sub
pop
add
sti
add
xchg
pushl
clc
repnz
nop
cld
jae
mov
test
test
push
mov
leave
nop
jmp
adc
mov
dec
add
stos
add
add
add
add
nop
cld
jae
add
add
roll
and
shlb
lea
push
mov
xchg
ret
scas
inc
push
js
loopne
xor
nop
cld
jae
adc
pusha
test
xlat
jmp
nop
cld
jae
pusha
aam
add
in
push
adc
add
nop
jmp
inc
or
gs
push
mov
xchg
ret
rcll
add
add
sub
addl
nop
cld
jae
push
add
add
xchg
pop
add
push
mov
xchg
ret
add
add
cmpw
nop
push
mov
leave
nop
jmp
inc
inc
add
push
mov
xchg
ret
sti
sti
add
add
loopne
pusha
and
loope
push
mov
xchg
ret
add
pusha
add
dec
push
push
mov
xchg
ret
push
add
clc
repnz
nop
cld
jae
add
add
add
add
and
add
mov
jns
nop
push
mov
leave
nop
jmp
or
add
mov
nop
push
mov
leave
nop
jmp
xor
roll
repnz
nop
cld
jae
add
add
pusha
and
pop
clc
repnz
nop
cld
jae
outsl
inc
add
mov
sub
mov
xchg
ret
mov
sti
add
inc
gs
clc
repnz
nop
cld
jae
aas
add
mov
nop
push
mov
leave
nop
jmp
inc
or
scas
add
gs
movzwl
clc
repnz
nop
cld
jae
dec
test
shll
mov
xchg
ret
mov
jno
dec
add
add
push
clc
repnz
nop
cld
jae
test
roll
add
nop
cld
ljmp
clc
repnz
nop
cld
jae
pop
outsl
mov
fwait
clc
repnz
nop
cld
jae
roll
inc
or
push
clc
repnz
nop
cld
jae
jno
add
inc
inc
add
fdivrs
push
clc
repnz
nop
cld
jae
add
xlat
pusha
ljmp
lea
mov
xchg
ret
add
push
bound
call
clc
repnz
nop
cld
jae
dec
add
sub
fwait
push
mov
xchg
ret
test
add
pusha
int3
cmp
mov
leave
nop
jmp
add
add
inc
cmp
in
leave
nop
jmp
add
ljmp
fildl
andb
xchg
ret
add
add
nop
cld
jae
add
add
test
nop
push
mov
leave
nop
jmp
add
add
push
mov
clc
repnz
nop
cld
jae
inc
add
add
clc
repnz
nop
cld
jae
xlat
add
add
add
xchg
jo
mov
clc
repnz
nop
cld
jae
bound
or
push
clc
repnz
nop
cld
jae
xchg
ret
add
outsl
add
popl
clc
repnz
nop
cld
jae
and
cmp
add
clc
repnz
nop
cld
jae
or
jb
add
dec
pop
nop
push
mov
leave
nop
jmp
add
dec
add
add
shl
push
mov
xchg
ret
add
jb
inc
add
inc
and
clc
repnz
nop
cld
jae
add
and
jnp
nop
push
mov
leave
nop
jmp
add
dec
add
aam
cmp
nop
push
mov
leave
nop
jmp
test
test
clc
clc
repnz
nop
cld
jae
dec
add
inc
fistpl
clc
repnz
nop
cld
jae
add
xchg
add
add
inc
inc
add
add
xlat
mov
clc
repnz
nop
cld
jae
test
je
add
adc
clc
repnz
nop
cld
jae
dec
add
or
push
mov
xchg
ret
add
add
ljmp
push
mov
xchg
ret
test
add
inc
add
mov
clc
repnz
nop
cld
jae
test
outsl
add
adc
mov
nop
push
mov
leave
nop
jmp
add
ret
inc
sbb
add
clc
repnz
nop
cld
jae
aad
add
mov
je
clc
repnz
nop
cld
jae
cmp
push
mov
xchg
ret
add
add
xlat
pusha
add
jo
add
push
mov
xchg
ret
mov
bound
add
xchg
into
mov
mov
xchg
ret
xchg
add
aad
mov
stos
push
mov
xchg
ret
jno
add
push
add
xor
repnz
nop
cld
jae
test
syscall
shr
push
mov
xchg
ret
jb
add
add
clc
repnz
nop
cld
jae
mov
test
clc
repnz
nop
cld
jae
ret
jno
add
in
pop
push
clc
repnz
nop
cld
jae
shrl
add
mov
push
push
mov
xchg
ret
je
add
adc
add
inc
shlb
in
leave
nop
jmp
add
in
add
jns
movsb
clc
repnz
nop
cld
jae
add
add
test
jmp
rorl
test
add
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
pop
add
in
hlt
mov
scas
enter
nop
cld
jae
aad
mov
xor
sar
mov
xchg
ret
add
xlat
add
add
test
nop
push
mov
leave
nop
jmp
add
add
jb
jge
add
icebp
inc
add
xlat
gs
add
sub
inc
sub
add
repnz
nop
cld
jae
add
xor
add
nop
push
mov
leave
nop
jmp
add
push
dec
adc
fs
add
or
orl
add
repnz
nop
cld
jae
popf
or
adc
push
mov
leave
nop
jmp
push
xor
stos
test
nop
push
mov
leave
nop
jmp
add
in
mov
aad
inc
push
clc
repnz
nop
cld
jae
add
xlat
xlat
add
ljmp
nop
cld
jae
add
or
sub
js
gs
clc
repnz
nop
cld
jae
sub
xor
push
nop
push
mov
leave
nop
jmp
mov
lcall
clc
repnz
nop
cld
jae
pusha
mov
mov
xchg
ret
inc
dec
mov
add
inc
inc
das
add
clc
repnz
nop
cld
jae
ret
add
mov
and
xchg
enter
or
clc
repnz
nop
cld
jae
dec
sub
inc
out
shrl
adc
xlat
clc
repnz
nop
cld
jae
aas
add
add
clc
repnz
nop
cld
jae
add
add
adc
add
clc
repnz
nop
cld
jae
add
add
add
orl
in
clc
repnz
nop
cld
jae
add
mov
xchg
ret
add
xor
test
call
clc
repnz
nop
cld
jae
xor
iret
add
clc
repnz
nop
cld
jae
mov
je
mov
call
inc
add
mov
add
and
shrb
repz
repnz
nop
cld
jae
add
inc
andb
and
jne
push
mov
xchg
ret
or
add
add
cltd
push
clc
repnz
nop
cld
jae
ljmp
test
andb
clc
repnz
nop
cld
jae
xchg
mov
add
test
or
add
repnz
nop
cld
jae
add
xor
mov
add
repnz
nop
cld
jae
jno
mov
add
shlb
cmp
clc
repnz
nop
cld
jae
cmp
add
sbb
mov
clc
repnz
nop
cld
jae
add
inc
add
loope
call
nop
jmp
or
adc
pop
nop
push
mov
leave
nop
jmp
add
add
pusha
mov
pop
rorl
nop
nop
cld
jae
jno
dec
xor
gs
mov
clc
repnz
nop
cld
jae
add
je
je
xor
clc
repnz
nop
cld
jae
add
add
add
cmp
push
mov
xchg
ret
outsl
ret
mov
pusha
cli
int
add
nop
nop
cld
jae
add
je
fcompl
push
mov
xchg
ret
add
add
add
les
mov
clc
repnz
nop
cld
jae
or
add
in
loope
clc
repnz
nop
cld
jae
xor
or
push
mov
xchg
ret
lcall
add
or
pusha
popf
xorl
clc
repnz
nop
cld
jae
bound
cltd
push
clc
repnz
nop
cld
jae
adc
repz
call
nop
jmp
xlat
add
dec
add
clc
repnz
nop
cld
jae
xor
add
or
gs
nop
cld
jae
add
and
ljmp
mov
nop
push
mov
leave
nop
jmp
xor
add
fistl
dec
pop
inc
add
push
add
add
xor
push
clc
repnz
nop
cld
jae
xor
mov
jb
mov
or
push
mov
leave
nop
jmp
cmp
add
inc
adc
mov
clc
repnz
nop
cld
jae
push
add
or
add
dec
imul
test
xchg
ret
add
add
add
scas
add
sti
mov
clc
repnz
nop
cld
jae
in
push
add
je
clc
repnz
nop
cld
jae
test
add
fstps
push
mov
leave
nop
jmp
outsl
data16
jne
add
mov
sti
incl
aam
or
add
test
adc
enter
or
repnz
nop
cld
jae
or
add
xor
mov
jne
clc
repnz
nop
cld
jae
adc
or
add
clc
repnz
nop
cld
jae
add
add
add
jmp
nop
cld
jae
add
test
inc
add
fwait
clc
repnz
nop
cld
jae
add
add
jne
add
clc
repnz
nop
cld
jae
bound
inc
mov
clc
repnz
nop
cld
jae
add
or
jne
clc
repnz
nop
cld
jae
jb
add
and
push
fs
repnz
nop
cld
jae
add
jb
dec
pop
nop
push
mov
leave
nop
jmp
add
add
add
and
inc
push
adc
clc
repnz
nop
cld
jae
mov
sbb
mov
xchg
ret
add
subl
add
nop
push
mov
leave
nop
jmp
mov
add
aam
or
nop
nop
cld
jae
add
or
add
push
mov
xchg
ret
lcall
mov
push
mov
leave
nop
jmp
add
and
je
add
insb
inc
jb
clc
repnz
nop
cld
jae
xlat
jmp
mov
clc
repnz
nop
cld
jae
add
add
test
nop
push
mov
leave
nop
jmp
mov
add
add
add
fistpl
push
mov
xchg
ret
add
add
and
sbbl
nop
nop
cld
jae
xchg
push
add
jno
jmp
jae
clc
repnz
nop
cld
jae
add
dec
ret
add
testl
add
repnz
nop
cld
jae
add
mov
xchg
ret
sldt
xor
dec
popa
sub
clc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
add
sqrtps
jmp
push
mov
leave
nop
jmp
add
add
xor
sub
cmp
repnz
nop
cld
jae
add
add
and
nop
nop
cld
jae
cmp
add
and
xor
push
mov
xchg
ret
add
add
pop
jecxz
jge
clc
repnz
nop
cld
jae
popf
pusha
dec
add
jne
clc
repnz
nop
cld
jae
add
bound
push
je
sbb
cmp
mov
leave
nop
jmp
add
add
jno
ret
in
add
add
clc
repnz
nop
cld
jae
sub
add
or
and
jmp
nop
cld
jae
sti
sub
add
push
add
jmp
dec
push
clc
repnz
nop
cld
jae
dec
add
add
mov
clc
repnz
nop
cld
jae
in
add
xchg
std
fwait
nop
push
mov
leave
nop
jmp
inc
or
aad
add
xchg
clc
repnz
nop
cld
jae
outsl
mov
add
dec
add
cmp
pop
aad
clc
repnz
nop
cld
jae
push
or
inc
mov
push
mov
xchg
ret
add
jne
add
add
repnz
nop
cld
jae
add
xor
fld1
clc
repnz
nop
cld
jae
ret
add
or
sub
xchg
sub
nop
push
mov
leave
nop
jmp
scas
add
test
mov
xchg
ret
xlat
add
add
add
pusha
pop
sub
clc
repnz
nop
cld
jae
dec
add
add
add
mov
clc
repnz
nop
cld
jae
popf
je
add
add
outsl
xor
mov
jmp
add
xchg
add
flds
add
add
add
popa
clc
repnz
nop
cld
jae
test
add
add
addl
cmp
ret
add
jne
add
add
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
jmp
repnz
nop
cld
jae
pop
mov
mov
push
push
clc
repnz
nop
cld
jae
add
gs
or
repnz
nop
cld
jae
push
pop
dec
and
pusha
fld1
nop
push
mov
leave
nop
jmp
inc
add
aas
add
add
clc
repnz
nop
cld
jae
inc
jne
add
movsb
and
repnz
nop
cld
jae
jne
add
test
jno
pusha
add
xchg
xchg
inc
add
xlat
cmp
add
repnz
nop
cld
jae
add
add
add
add
jne
nop
push
mov
leave
nop
jmp
sldt
mov
push
mov
xchg
ret
or
push
mov
call
mov
xchg
ret
outsl
dec
add
popf
pop
add
clc
repnz
nop
cld
jae
add
ret
data16
mov
push
mov
xchg
ret
add
add
add
nop
push
mov
leave
nop
jmp
add
aas
mov
add
clc
repnz
nop
cld
jae
or
add
add
adc
repnz
nop
cld
jae
add
outsl
add
add
clc
repnz
nop
cld
jae
inc
mov
ja
cmp
nop
push
mov
leave
nop
jmp
inc
add
add
mov
testl
nop
push
mov
leave
nop
jmp
add
or
dec
dec
push
mov
xchg
ret
add
or
add
inc
outsl
pushl
clc
repnz
nop
cld
jae
push
add
pop
xor
push
mov
xchg
ret
add
add
int
clc
repnz
nop
cld
jae
add
pusha
bound
or
push
les
pusha
clc
repnz
nop
cld
jae
add
add
add
test
inc
clc
repnz
nop
cld
jae
add
add
or
and
nop
nop
cld
jae
add
add
and
inc
loopne
addb
div
nop
push
mov
leave
nop
jmp
aas
and
mov
jno
jmp
dec
cmp
mov
xchg
ret
inc
add
cmp
mov
ja
movb
pusha
nop
inc
add
adc
aad
dec
cmp
repnz
nop
cld
jae
add
add
sti
inc
push
inc
and
inc
cmp
mov
xchg
ret
mov
and
inc
mov
pusha
mov
mov
leave
nop
jmp
jno
mov
outsl
mov
outsb
ficoms
pop
shl
clc
repnz
nop
cld
jae
addl
jp
call
nop
push
mov
leave
nop
jmp
pop
addl
clc
repnz
nop
cld
jae
in
add
dec
aad
and
movsb
and
add
nop
push
mov
leave
nop
jmp
rorl
add
dec
add
mov
nop
push
mov
leave
nop
jmp
test
aam
add
nop
nop
cld
jae
shll
add
mov
stc
mov
nop
push
mov
leave
nop
jmp
test
dec
popf
ljmp
nop
cld
jae
bound
add
mov
inc
push
mov
xchg
ret
add
jno
add
add
test
sub
mov
add
clc
repnz
nop
cld
jae
seta
pop
inc
movsb
mov
pop
je
clc
repnz
nop
cld
jae
xor
and
jns
call
inc
add
jne
dec
roll
xlat
and
nop
nop
cld
jae
add
jne
add
lret
clc
repnz
nop
cld
jae
mov
or
in
fistpl
push
mov
xchg
ret
dec
add
verr
add
rolb
inc
loope
mov
xor
cmpsb
add
mov
pusha
add
adc
add
clc
repnz
nop
cld
jae
bound
add
jmp
clc
repnz
nop
cld
jae
add
add
aam
test
pusha
push
and
fwait
clc
repnz
nop
cld
jae
add
add
inc
into
pop
mov
nop
push
mov
leave
nop
jmp
add
sti
add
clc
repnz
nop
cld
jae
jno
or
shr
clc
repnz
nop
cld
jae
mov
aam
addb
sub
jmp
repnz
nop
cld
jae
or
jno
add
add
push
mov
leave
nop
jmp
inc
jne
push
add
fidivrl
nop
nop
cld
jae
add
xor
add
adc
push
mov
mov
leave
nop
jmp
add
add
mov
add
add
nop
jmp
or
lret
clc
repnz
nop
cld
jae
dec
add
in
add
pusha
orb
jno
mov
add
add
add
push
int3
pushl
push
mov
xchg
ret
add
add
add
xor
call
nop
push
mov
leave
nop
jmp
psubusw
xor
jb
cld
nop
push
mov
leave
nop
jmp
adc
cmp
test
pop
clc
repnz
nop
cld
jae
xor
push
add
dec
dec
nop
push
mov
leave
nop
jmp
add
lcall
mov
push
mov
leave
nop
jmp
mov
add
add
lea
clc
repnz
nop
cld
jae
add
add
mov
popf
xchg
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
add
add
add
xlat
bound
popa
inc
add
aas
add
je
push
dec
jno
fpatan
movsb
clc
repnz
nop
cld
jae
add
add
inc
add
push
clc
repnz
nop
cld
jae
sti
add
mov
mov
adc
push
mov
leave
nop
jmp
dec
test
test
add
mov
xchg
ret
aam
sti
add
xlat
inc
push
push
mov
add
ret
mov
mov
add
add
bound
pusha
std
pusha
clc
repnz
nop
cld
jae
add
scas
mov
adc
nop
cld
jae
inc
inc
add
bound
mov
loopne
clc
repnz
nop
cld
jae
aam
push
add
pop
push
clc
repnz
nop
cld
jae
xlat
or
or
mov
clc
repnz
nop
cld
jae
inc
dec
ljmp
mov
push
mov
xchg
ret
xor
jmp
inc
lcall
clc
repnz
nop
cld
jae
add
add
jne
jns
cmpl
jae
inc
add
and
repnz
nop
cld
jae
add
or
add
cmp
nop
push
mov
leave
nop
jmp
dec
add
add
add
shrl
push
mov
xchg
ret
fs
jno
push
xlat
xor
sbb
clc
repnz
nop
cld
jae
mov
add
or
mov
leave
nop
jmp
ret
or
add
add
stos
xorl
clc
repnz
nop
cld
jae
mov
pop
push
push
mov
xchg
ret
mov
fs
add
outsl
ficomps
gs
add
bound
jb
test
xor
push
mov
xchg
ret
add
dec
push
xor
add
jne
rolb
push
imul
nop
nop
cld
jae
add
add
lds
jae
add
add
stos
clc
repnz
nop
cld
jae
add
addl
iret
mov
clc
repnz
nop
cld
jae
add
adc
mov
inc
andl
add
add
xor
popf
aad
sub
mov
clc
repnz
nop
cld
jae
add
add
rol
stos
loopne
ja
ret
clc
repnz
nop
cld
jae
add
add
add
aas
sbb
nop
push
mov
leave
nop
jmp
xor
add
add
inc
mov
clc
repnz
nop
cld
jae
add
mov
mov
push
mov
xchg
ret
mov
add
test
nop
push
mov
leave
nop
jmp
xlat
xor
inc
adc
mov
xchg
ret
aas
add
jecxz
inc
or
mov
xchg
ret
xor
ret
inc
add
pop
mov
loopne
mov
clc
repnz
nop
cld
jae
sysenter
add
adc
mov
clc
repnz
nop
cld
jae
add
or
aam
ljmp
mov
cmp
inc
add
cmp
mov
aas
push
mov
clc
repnz
nop
cld
jae
test
sti
inc
or
pusha
cmp
and
clc
repnz
nop
cld
jae
sti
push
mov
push
mov
xchg
ret
push
xchg
add
test
je
add
jne
clc
repnz
nop
cld
jae
popf
and
push
jne
clc
repnz
nop
cld
jae
add
popf
add
add
call
nop
jmp
in
or
outsl
fistpl
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
sub
add
ror
push
mov
xchg
ret
mov
test
sub
stos
push
push
mov
xchg
ret
jmp
add
inc
add
cmp
clc
repnz
nop
cld
jae
add
cpuid
stc
xor
clc
repnz
nop
cld
jae
adc
pusha
and
add
out
add
push
mov
xchg
ret
dec
ljmp
add
clc
repnz
nop
cld
jae
mov
ret
inc
in
in
clc
repnz
nop
cld
jae
jno
xor
add
shll
jns
add
inc
add
add
mov
pop
clc
repnz
nop
cld
jae
add
add
lret
andl
in
leave
nop
jmp
scas
jno
mov
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
sti
add
push
clc
repnz
nop
cld
jae
add
dec
add
mov
push
mov
xchg
ret
jno
or
add
add
loopne
push
push
mov
xchg
ret
mov
and
add
or
clc
repnz
nop
cld
jae
unpcklps
add
sub
shl
push
out
mov
clc
repnz
nop
cld
jae
add
jne
push
andb
xchg
push
mov
leave
nop
jmp
data16
add
add
nop
push
mov
leave
nop
jmp
add
add
push
push
clc
repnz
nop
cld
jae
add
add
scas
test
rep
clc
repnz
nop
cld
jae
jb
xchg
add
add
mov
pop
mov
clc
repnz
nop
cld
jae
flds
add
jno
sbb
repnz
nop
cld
jae
rorl
xor
dec
inc
xor
in
leave
nop
jmp
inc
add
add
pusha
jp
mov
clc
repnz
nop
cld
jae
jmp
test
jne
clc
repnz
nop
cld
jae
test
aad
mov
nop
cld
jae
popf
add
add
aas
or
sbb
repnz
nop
cld
jae
add
aam
mov
xchg
inc
add
and
xor
add
mov
clc
repnz
nop
cld
jae
gs
jne
xor
pusha
push
mov
xchg
ret
pop
mov
add
xor
mov
shl
clc
repnz
nop
cld
jae
aam
add
add
imul
je
add
push
add
fld1
clc
repnz
nop
cld
jae
add
pusha
add
xlat
cmpl
nop
push
mov
leave
nop
jmp
add
add
or
repnz
nop
cld
jae
add
mov
fwait
push
mov
xchg
ret
or
aam
add
xor
test
push
mov
leave
nop
jmp
inc
cmp
clc
repnz
nop
cld
jae
push
bound
add
repnz
nop
cld
jae
push
or
push
aas
mov
nop
push
mov
leave
nop
jmp
add
in
add
inc
pop
push
clc
repnz
nop
cld
jae
add
ljmp
add
clc
repnz
nop
cld
jae
and
je
jne
mov
or
in
leave
nop
jmp
fnstenv
stos
add
clc
repnz
nop
cld
jae
aam
aas
add
dec
fdivrs
inc
clc
repnz
nop
cld
jae
test
sahf
pop
inc
clc
repnz
nop
cld
jae
pusha
add
inc
add
jmp
clc
repnz
nop
cld
jae
test
push
jno
push
mov
xchg
ret
add
add
inc
leave
xor
clc
repnz
nop
cld
jae
or
xlat
scas
and
and
inc
clc
repnz
nop
cld
jae
add
dec
inc
add
loopne
sti
add
clc
repnz
nop
cld
jae
add
into
inc
xchg
sahf
lods
mov
nop
push
mov
leave
nop
jmp
add
xchg
push
add
call
clc
repnz
nop
cld
jae
addl
jg
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
sub
add
jns
clc
repnz
nop
cld
jae
lcall
xor
mov
nop
push
mov
leave
nop
jmp
ljmp
jle
inc
add
add
outsl
xor
das
inc
clc
repnz
nop
cld
jae
or
add
shll
or
shlb
mov
adc
xchg
ret
add
bound
flds
add
adc
sbb
repnz
nop
cld
jae
xlat
jmp
stos
xor
clc
repnz
nop
cld
jae
add
xlat
addr16
push
mov
xchg
ret
add
add
mov
ret
dec
pushf
cs
pusha
test
add
dec
sub
pop
jb
add
subl
mov
clc
repnz
nop
cld
jae
adc
test
add
dec
movl
cmpl
call
xor
push
ret
clc
repnz
nop
cld
jae
add
add
add
mov
add
add
push
fldl2t
inc
sbb
dec
jns
outsl
imul
lds
jl
in
mov
cld
nop
mov
mov
add
mov
cmpsl
xchg
test
xor
rcrb
fcmovb
push
sub
les
sahf
push
add
loopne
xor
mov
aas
movsb
add
hlt
cmp
loopne
push
loopne
pop
xor
inc
and
mov
loop
or
mov
jle
lret
add
dec
pop
aaa
push
inc
push
xchg
clc
or
out
into
cmp
add
idiv
xor
jle
scas
loopne
cmp
cld
cli
enter
shlb
fisttpl
add
and
lock
aad
or
rolb
scas
mov
xor
and
xchg
fs
out
call
mov
mov
rorb
adc
shll
fsubrl
and
pusha
ja
pusha
and
xor
add
xchg
sbb
cmpl
pusha
shl
aam
data16
cmpb
lahf
adc
jl
les
jge
mov
dec
xlat
adc
inc
dec
je
insb
dec
dec
mov
roll
inc
rol
inc
and
outsb
jns
mov
pop
decb
imul
and
cmp
mov
add
fisttps
xor
dec
dec
xchg
pusha
daa
sbb
int3
stc
adc
loopne
mov
inc
je
les
mov
xchg
push
inc
and
inc
sub
ret
mov
loopne
inc
shll
stos
mov
sar
xor
mov
rol
fisubrs
sahf
jno
std
pusha
xchg
dec
xchg
xchg
adc
lcall
add
loopne
clc
insl
cld
iret
add
repz
or
fadds
pusha
and
lret
aaa
adc
push
shl
incl
push
cwtl
cmc
xor
popf
or
add
repnz
push
dec
fdivr
mov
shlb
or
and
pop
arpl
rcrb
jns
xchg
ss
push
mov
fcompl
mov
sahf
xor
xchg
and
rorb
sub
loopne
push
jle
mov
lcall
mov
dec
aaa
pop
lahf
insb
andb
repz
fucomp
xchg
mov
rclb
push
mov
mov
xor
fldt
addb
das
xchg
cmp
sbb
sub
pusha
push
in
adc
bound
shl
xchg
in
xor
add
ret
loope
push
cmp
or
jbe
mov
dec
jg
adc
insl
push
mov
sub
mov
hlt
mov
add
shlb
add
pusha
rcrl
lret
int
push
add
sub
xor
ds
sub
mov
stc
mov
hlt
xor
lret
cmp
mov
outsl
aad
ljmp
or
pusha
aaa
mov
push
loopne
mov
std
or
mov
into
mov
and
jb
lds
jl
xor
cmp
rol
mov
shlb
shr
add
loopne
inc
mov
pop
push
shll
mov
pusha
sarb
rolb
ss
mov
ret
cltd
or
test
xorb
dec
test
cmp
mov
ss
test
jle
dec
sbb
ret
idivb
jg
loopne
inc
dec
pop
lret
push
in
mov
xchg
out
jo
push
out
mov
rcl
mov
xchg
pusha
rclb
push
sahf
scas
pop
test
add
sti
and
orb
in
mov
enter
shlb
adc
dec
je
arpl
ljmp
lret
popf
int3
jl
mov
inc
or
loopne
sub
sbbb
js
cltd
int
inc
xor
enter
and
push
adc
mov
inc
push
xorl
rclb
and
mov
inc
jecxz
lcall
inc
and
cmpb
adc
mov
and
loopne
xchg
movsl
cwtl
arpl
mov
adc
pop
or
loopne
xchg
stc
pop
std
outsl
sarl
outsl
xor
das
inc
out
cld
popf
sbb
xchg
add
mov
dec
sub
and
pusha
pusha
testb
loopne
inc
insb
dec
xor
fstpl
and
cmc
and
pusha
or
imull
stos
jmp
divl
test
xchg
loop
cld
adc
add
popf
cmpsl
fcompl
hlt
int
inc
aad
jge
and
nop
mov
mov
jb
andb
push
int3
lods
mov
mov
push
pusha
loopne
add
mov
xchg
ror
icebp
xchg
xor
lods
stos
pop
or
repnz
lcall
es
dec
mov
mov
sbb
jge
pop
into
adc
ljmp
push
pop
roll
sbb
fwait
imul
and
inc
pusha
std
or
pushf
xlat
jecxz,pt
pop
into
cmc
sub
sbb
jle
sbb
test
pop
inc
inc
push
xor
inc
mov
ffree
test
mov
add
mov
or
loopne
mov
rolb
cmp
pusha
das
xor
push
mov
inc
mov
or
fisubrs
inc
inc
fucom
push
add
mov
mov
pop
jg
and
int
mov
arpl
push
pusha
inc
mov
mov
add
in
push
pusha
add
jge
out
pop
int
call
pushf
add
nop
sahf
dec
dec
dec
leave
jb
pop
in
sub
cltd
data16
add
in
incb
adc
cmp
or
mov
addr16
jg
scas
mov
rolb
jno
sub
loopne
mov
mov
sbb
fwait
pop
pop
pushl
cld
dec
pop
repz
sbbb
or
inc
mov
sbb
and
loopne
fcoml
push
pusha
pusha
mov
out
xchg
cs
pusha
push
andb
outsb
add
je
add
jo
sub
out
adc
add
mov
outsb
adc
cmp
mov
aas
or
xorb
lock
loope
jmp
push
sbb
mov
aam
dec
aaa
xor
adc
into
gs
and
mov
push
addb
mov
fdivrp
sbb
cwtl
test
inc
leave
sbb
cmp
inc
add
and
adc
mov
imul
and
sbb
lods
popa
pusha
lret
and
jb
int3
pusha
sahf
ss
sbb
mov
loopne
jle
loopne
jbe
jns
or
gs
add
fcomps
lcall
idivb
inc
shl
insw
push
xor
mov
and
ljmp
inc
jns
loopne
adc
xchg
push
xor
loopne
mov
pusha
inc
push
push
out
int
mov
mov
pop
or
shlb
lahf
push
test
and
sbb
mov
cmp
dec
mov
push
jno
movsl
outsb
push
call
aas
pop
and
std
int3
and
loopne
arpl
dec
sbb
inc
subb
loopne
mov
rolb
pop
outsl
sahf
test
mov
loopne
or
pop
jecxz
add
adc
outsl
adcl
jo
addb
push
mov
inc
xor
arpl
mov
addb
sub
sub
add
pusha
fisubrl
add
jge
daa
jmp
orb
mov
cmc
sub
inc
pop
add
pusha
or
and
mov
push
push
jp
xor
movsb
loopne
or
or
das
jbe
and
inc
ret
push
cltd
test
aad
dec
andb
lahf
ljmp
andb
sti
xor
popa
in
push
andb
ss
iret
and
rsm
and
leave
xor
ljmp
fildll
lcall
les
lea
mov
call
jo
xor
sbb
pusha
sbb
and
icebp
insb
shll
int
jo
dec
mov
sarb
repnz
xchg
jl
mov
adc
ljmp
andb
or
outsb
lret
cmpsb
mov
mov
cmpsl
push
in
mov
mov
add
aas
adc
sarb
inc
lds
inc
sub
mov
cmp
fwait
inc
push
test
add
popa
mov
mov
mov
dec
leave
out
mov
mov
mov
mov
adc
lods
pop
test
pusha
xor
fwait
stos
movsl
stc
fnsave
mov
pop
int3
fcmovnb
and
mov
cwtl
or
test
fwait
lcall
lods
push
sbb
loopne
jmp
sub
and
or
mov
xchg
fists
jo
addb
add
push
mov
nop
stos
cmp
add
xlat
pop
jmp
inc
xorb
andb
jae
mov
maskmovq
divl
jle
fld
cmp
aaa
in
sbb
popa
movsb
and
ljmp
test
add
add
ret
addb
sarb
xchg
sbb
je
mov
push
lods
imul
rcrb
pusha
lock
imulb
cmp
and
jmp
push
mov
test
mov
xchg
jmp
and
pusha
mov
or
loopne
and
inc
shlb
lds
js
and
dec
fbld
stos
jne
sarb
stc
inc
mov
sbbb
add
lret
and
in
xchg
stos
add
cmp
cmp
lods
xor
and
iret
js
xor
mov
mov
sbb
incb
rolb
and
mov
mov
jnp
mov
pusha
adc
neg
insb
mov
loopne
cmp
mov
and
loop
add
out
sbb
nop
dec
scas
pop
xchg
or
mov
push
pusha
shlb
mov
mov
add
and
mov
shr
mulb
shlb
pop
jmp
pusha
shl
movsb
shl
fs
dec
inc
xchg
cmp
inc
andb
sbb
mov
pop
pop
stc
cmp
xchg
js
pop
cmovge
mov
inc
and
lds
jo
push
repnz
and
addb
ds
or
pusha
and
loopne
cmp
lds
loop
push
mov
inc
mov
fnstcw
out
lods
icebp
ret
xor
inc
ret
mov
loopne
inc
sbb
ret
mov
or
add
outsb
repz
xchg
cld
leave
or
das
lahf
cld
movb
les
cs
or
icebp
push
xchg
pop
or
push
cs
pusha
add
hlt
ds
outsl
xchg
or
loopne
fstl
addr16
and
mov
lahf
mov
data16
sarb
or
nop
cmp
rorb
jge
stos
ja
lods
aas
xor
leave
pop
insb
inc
inc
push
int3
mov
xchg
aam
xchg
inc
in
and
add
loopne
in
ret
fcoml
push
jge
add
repz
mov
lds
out
push
and
aas
xlat
mov
negl
add
inc
sub
leave
or
int
cli
ret
adc
mov
xchg
and
subl
mov
aam
jnp
aaa
inc
xchg
dec
mov
jb
mov
jp
mov
cmp
push
inc
mov
pop
sbb
adc
inc
push
lods
add
cmp
and
mov
pusha
mov
arpl
lcall
test
and
imul
iret
sub
int
inc
iret
sub
pusha
add
mov
jle
call
xor
mov
mov
orb
mov
pop
mov
mov
loopne
and
shlb
in
loopne
cwtl
nop
int
or
shl
leave
ficomps
xchg
sbb
test
sarb
in
insb
popf
and
pusha
sarb
rolb
je
push
jg
or
mov
xchg
push
jmp
sub
xchg
addr16
pop
ret
push
mov
dec
cld
adc
gs
std
jae
xor
sub
cmc
scas
and
popa
lret
in
daa
fsts
ror
xor
lods
mov
jp
xchg
adc
inc
sub
andb
mov
ror
sub
and
stos
andb
inc
adcb
loop
push
fld
add
mov
inc
jo
dec
popf
lock
hlt
icebp
mov
cmp
pop
xchg
in
sahf
xor
cld
mov
inc
xor
sarl
mov
push
fsts
scas
popa
push
clc
adc
adc
outsb
sbb
aas
lods
adc
pop
xchg
push
stos
xor
out
mov
add
es
inc
push
xor
push
mov
in
and
jecxz
xor
popa
or
loopne
popf
out
pushf
jno
jge
and
pushf
adc
xlat
mov
sbb
mov
imul
movsl
push
test
xchg
and
aas
jge
and
sub
popf
sbb
jb
bound
rol
xlat
or
mov
outsb
dec
insb
mov
xchg
les
sbb
mov
imul
xchg
fwait
inc
loope
inc
mov
fs
leave
mov
loopne
icebp
and
pushf
mov
adc
mov
push
sub
mov
mov
mov
inc
push
mov
dec
imul
es
mov
pusha
mov
in
mov
adc
clc
and
jle
pop
sbb
mov
add
add
inc
xchg
and
pop
sbb
mov
sti
hlt
fsubrs
addb
xchg
cmp
pop
scas
add
addb
mov
mov
cld
fchs
mov
cmpsb
inc
inc
lcall
outsb
add
adc
and
cmp
lret
pusha
jbe
int3
iret
ds
out
xchg
sti
test
add
mov
lret
mov
movsb
loopne
cmp
out
add
push
loopne
and
sahf
adc
addb
fsubl
ss
pusha
add
or
and
cmp
xchg
pop
xor
ret
loopne
lea
jl
add
repz
jo
mov
add
pop
ret
mov
mov
addb
shlb
pop
jg
mov
jge
adc
ds
xor
or
add
jmp
jo
mov
pop
sub
sub
mov
sti
in
cmpsb
addb
loopne
popf
out
ret
lods
bound
mov
inc
loopne
and
jge
jnp
and
and
pop
in
out
rcrl
lods
xor
inc
fs
lea
add
outsb
and
push
mov
rorb
sub
orb
shl
imul
xor
sbb
testb
iret
push
mov
mov
popa
mov
xchg
mov
lea
inc
push
jg
adc
movsb
addb
inc
pop
loop
into
jns
rcr
jle
add
outsl
movsl
aaa
das
inc
mov
xor
sub
and
dec
push
cli
xlat
cld
stos
xor
adc
lahf
mov
add
mov
pusha
add
loopne
sub
push
clc
outsl
jno
shlb
addb
jecxz
pop
pop
mov
and
pusha
xchg
mov
adc
rcrb
mov
outsl
jb
andb
pusha
insb
test
loopne
fistpl
hlt
jg
int3
mov
rclb
rcrb
and
inc
mov
ljmp
jle
inc
shlb
test
or
dec
adc
jne
inc
addb
sbb
rolb
add
mov
add
adc
rcl
pop
lds
mov
and
hlt
inc
jmp
push
sbb
stc
sbb
add
push
adc
rolb
and
loopne
dec
daa
mov
lock
fsubrs
pusha
inc
sbb
popa
stos
js
mov
js
test
inc
xor
pusha
sbbb
push
push
sbb
jl
pop
inc
sbb
jno
push
lea
pop
add
pushf
dec
out
std
lea
sbb
cmp
adc
jae
xlat
jecxz
loope
xor
rorl
dec
jb
and
push
sbb
pusha
sbbb
mov
ljmp
out
add
or
mov
and
and
xchg
pushf
jae
xchg
sbb
add
fsubp
push
dec
xchg
cwtl
call
mov
cmpsl
icebp
xlat
fisttpl
arpl
and
test
mov
jmp
dec
mov
cmp
dec
inc
out
xchg
inc
js
pop
pop
sbb
stos
add
std
xor
insb
shrl
sbb
pusha
shlb
mov
pop
cmp
aas
pusha
xor
sbb
int
mov
fsubrs
fisubs
addr16
push
rolb
repnz
pop
xchg
jnp
call
push
mov
andb
dec
inc
je
pusha
inc
jne
call
mov
arpl
push
addb
dec
adc
inc
imul
xchg
not
xor
pop
in
inc
lds
call
and
popa
pop
push
outsb
repnz
and
pop
inc
lea
mov
xor
xchg
pop
add
lds
mov
inc
mov
lods
pusha
sub
sbb
pop
addb
int3
inc
fldcw
jmp
sbb
pop
pop
inc
xchg
insl
pop
push
add
push
mov
enter
add
and
lds
shlb
mov
nop
pop
mov
dec
inc
mov
jae
out
adc
pop
cmc
mov
inc
sub
repnz
xor
mov
stc
arpl
repz
imul
and
subb
pushf
jns
push
lret
ret
xor
lods
and
test
mov
les
lea
add
sbb
sub
and
add
push
jne
int
loop
push
idivb
nop
or
inc
xchg
lods
pusha
rclb
and
push
sub
inc
cld
xor
jmp
add
pop
ret
mov
ss
and
loope
fwait
sbb
lea
das
mov
rolb
and
cmpsb
and
pop
out
pusha
loopne
andb
sub
pop
push
inc
sbb
addb
add
sbb
and
inc
or
mov
push
lods
rolb
mov
rorl
insb
negl
mov
add
cmp
and
pusha
and
stos
sbb
jne
shrl
nop
push
andb
mov
pop
jae
jp
dec
push
lods
andb
dec
inc
pop
shlb
sub
fistl
mov
pop
push
neg
scas
pusha
add
adc
xchg
pop
scas
rol
adc
lret
cmp
dec
loopne
jge
push
les
mov
adc
rolb
xchg
push
lock
cmp
shlb
push
cmp
popf
aam
sub
pusha
adc
icebp
adc
sarb
rol
shlb
out
js
push
popl
ret
test
orb
inc
addb
xor
rorb
lret
dec
leave
jnp
iret
call
inc
idivl
jp
xchg
pusha
insw
jb
cltd
add
xchg
std
dec
outsb
xor
dec
iret
loopne
imul
outsl
jb
pop
in
scas
mov
imul
mov
jmp
jecxz
call
cmp
aad
adc
insl
lret
ficomps
in
jle
and
dec
rcrb
push
loopne
dec
add
inc
shrb
mov
sbb
dec
add
fsubrl
mov
pop
loope
mov
xchg
pushf
cmp
jle
add
mov
xlat
jle
and
fbld
scas
rol
mov
shlb
or
mov
inc
mov
pusha
adcl
rol
adc
scas
inc
mov
and
nop
pop
sbb
sub
dec
pop
ret
sti
daa
dec
outsb
push
jl
bnd
loop
add
mov
jo
out
loopne
inc
inc
add
shlb
push
and
mov
incl
add
xchg
aad
imul
sub
daa
xchg
cwtl
cmp
xor
orl
pusha
and
mov
inc
dec
insl
mov
xchg
int3
rcrl
shlb
stos
iret
dec
mov
pop
outsl
mov
cmp
icebp
sbb
push
movsb
mov
test
loopne
rolb
repz
fwait
push
pop
inc
into
push
pop
jnp
insb
sub
shll
pusha
push
inc
mov
push
xchg
cwtl
test
inc
push
ror
andb
adc
loopne
and
pusha
fld
loopne
ja
pusha
loopne
or
add
adc
mov
push
pusha
pusha
push
out
loopne
xchg
pop
or
jb
jne
stos
or
mov
sahf
test
inc
xchg
add
jo
jo
lock
loopne
mov
push
cmc
test
rorb
insb
cwtl
orl
cmp
mov
es
shrl
add
dec
adc
add
aad
inc
dec
jle
or
dec
pop
push
inc
pop
lea
pop
mov
xchg
popf
fdivr
mov
pusha
mov
int3
scas
sbb
pop
push
xchg
fcmovnb
out
loopne
cmp
add
subl
shlb
mov
pushf
insb
jecxz
pop
add
add
pop
repnz
aad
pop
pop
xor
add
mov
call
mov
inc
inc
cmpsb
and
cmp
shrl
jbe
or
loopne
inc
jno
call
mov
xor
iret
mov
cmpsl
scas
rolb
notl
add
xor
jne
mov
in
ljmp
inc
add
lods
add
cmp
or
popa
or
test
shl
pop
xchg
sahf
mov
ret
ss
fnstenv
addl
dec
jg
nop
scas
xchg
add
jp
adc
inc
out
lahf
jle
xor
add
and
movsb
pusha
mov
inc
add
std
adc
dec
and
lea
pop
dec
insb
and
into
mov
mov
add
mov
add
pusha
xor
jle
std
pop
leave
add
fildll
pusha
pusha
fcoml
inc
lods
leave
fists
pop
sarb
xor
pop
dec
mov
or
scas
mov
push
cmp
ss
or
loope
scas
shlb
aam
jg
or
dec
in
mov
test
mov
pop
dec
xchg
jmp
lret
mov
cmp
mov
adc
push
mov
and
add
popa
stc
test
dec
xchg
cld
xor
pop
xchg
xor
hlt
sub
sarb
add
dec
aaa
sbb
les
jns
pop
jl
andb
adcl
push
push
jge
jnp
in
push
dec
push
jmp
jecxz
jmp
rcrb
in
xor
shl
mov
and
pusha
push
pusha
and
rcrb
push
pusha
add
loopne
push
cmp
mov
adc
repz
mov
loopne
fsave
das
jo
add
add
scas
addb
shlb
jp
inc
xor
add
pop
aas
jbe
xchg
negl
cltd
jmp
mov
pop
or
inc
shlb
rolb
cld
arpl
mov
and
sub
cmpl
outsl
adc
sub
and
pusha
xor
push
sbb
loop
leave
cmpsl
popf
adc
call
nop
mov
pop
xchg
pop
movsl
shlb
jge
mov
out
and
adcl
scas
adc
xlat
jns
add
mov
cmp
movsl
jnp
mov
shr
int3
hlt
xchg
push
je
adc
mov
jg
and
shll
addb
cmpsl
imul
ret
inc
jecxz
jg
scas
rolb
fxch
mov
orb
lret
push
sub
in
xchg
fnstsw
cmp
sub
dec
adc
rol
pusha
andb
pop
mov
stc
mov
or
inc
scas
and
mov
mov
andb
cmovo
dec
or
loopne
inc
mov
sbb
cmp
fcmovnb
repz
and
js
jo
inc
pusha
pop
mov
adc
add
in
enter
dec
cli
jnp
out
mov
sub
and
mov
xchg
dec
addb
jae
sbb
dec
jae
jge
std
push
jbe
cmp
dec
repnz
ss
daa
pop
xchg
mov
and
je
into
ljmp
mov
mov
mov
add
and
out
ret
mov
lcall
pusha
push
pop
daa
test
add
inc
jle
and
mov
push
aas
call
xchg
cmp
pusha
add
je
lea
rcrl
lahf
filds
sbb
fistpl
xor
xor
pusha
inc
shrb
fstpl
aad
mov
cmp
add
or
mov
push
shlb
and
sub
mov
cmp
call
add
rclb
addb
mov
push
sub
pop
into
jle
hlt
aad
mov
or
xchg
add
test
and
shr
pop
xor
test
roll
pusha
push
mov
pop
pop
cltd
jae
mov
mov
imul
inc
sarb
dec
das
push
sbb
add
and
loopne
inc
add
rcl
sti
pop
scas
mov
sub
subb
sbb
adc
cmp
fidivs
push
xchg
mov
negb
dec
incb
fidivs
push
pop
int3
sub
shll
xor
add
test
sbb
out
mov
jno
inc
and
inc
cmp
adc
sbb
and
nop
pop
mov
shlb
dec
ja
fcomp
fsts
mov
sahf
jp
add
rcl
mov
jle
mov
dec
dec
out
dec
xchg
sbb
mov
fwait
insl
push
or
and
sbb
jecxz
jnp
leave
mov
out
aam
xchg
mov
sar
imul
out
mov
lods
andb
mov
dec
adc
mov
pushf
jo
insb
sub
inc
add
outsl
add
lds
rorl
dec
lcall
inc
scas
mov
inc
loopne
push
and
pop
xor
mov
leave
ja
lods
mov
push
jle
fidivs
int3
xcrypt-ecb
cmpsl
cpuid
shl
std
push
inc
mov
dec
pop
ret
inc
inc
out
sub
sub
push
mov
int
bound
mov
cmp
es
add
inc
ret
xor
xchg
or
clc
rol
lds
inc
filds
rolb
inc
xor
repz
add
out
data16
int3
xor
pusha
cwtl
stc
cmp
add
stos
imul
test
lcall
imul
nop
jnp
pop
mov
das
jnp
xlat
xchg
insl
aas
xchg
inc
sub
sbbb
cwtl
js
into
cmp
mov
arpl
fisttpl
and
rorb
and
arpl
and
rclb
nop
cmc
aam
xchg
in
and
push
adc
push
icebp
cmp
rolb
loopne
imul
push
lds
aas
test
rorb
pusha
or
cmpsb
loopne
std
icebp
lahf
or
add
mov
mov
pushf
xchg
loope
mov
mov
inc
aas
pushf
lea
loopne
idivl
imul
outsb
std
divl
aad
movl
xchg
cmc
fwait
mov
fimull
mov
adc
out
das
test
add
adc
cmp
or
inc
fildl
jnp
mov
out
fdivs
mov
rolb
mov
and
sbb
sbb
sahf
jno
fildl
jle
in
cmpsb
and
jmp
sub
and
inc
lods
mov
rolb
fsubrs
mov
loopne,pn
stos
pusha
pusha
lea
es
scas
scas
inc
sbbb
repnz
popa
pop
addl
pop
push
dec
add
rcrb
enter
rolb
mov
jne
pop
jecxz
and
popf
pushf
jbe
lret
mov
and
and
mov
xchg
mov
jecxz
loope
insb
out
mov
orb
arpl
scas
sahf
shrb
mov
mov
aaa
jno
rolb
pop
negl
pop
fs
xor
adc
icebp
xor
adc
cmc
pavgw
pusha
add
push
add
clc
imul
jbe
dec
scas
and
das
pushf
and
xchg
out
xor
adc
fldt
cmp
in
nop
sub
int3
pop
rolb
jle
movsl
push
andb
cmp
fiadds
dec
test
pusha
pop
into
rcl
fnstsw
arpl
pusha
mov
adc
test
pusha
ret
mov
bound
scas
loopne
xor
repnz
lock
mov
loopne
rorb
sub
push
push
addb
addb
add
nop
mov
push
and
out
mov
pushf
into
andb
mov
in
dec
scas
shlb
sbb
pop
out
out
pop
or
pusha
pusha
fdivs
pop
int3
lret
shl
bound
xchg
push
rolb
das
lds
data16
test
sbbl
or
adc
in
jae
ds
jle
in
lods
cwtl
dec
shlb
push
pop
shrl
push
out
or
loopne
push
lcall
aad
std
insl
mov
pusha
xchg
call
test
enter
inc
popa
pop
jno
call
add
ret
mov
xchg
pop
movsl
jb
mov
push
mov
je
scas
add
inc
mov
shll
mov
inc
pop
int
pop
stc
pop
inc
jns
sub
inc
testl
mov
sbb
mov
emms
jl
std
shrb
and
imull
dec
xchg
out
xchg
cmp
pop
stos
pop
cltd
pop
add
mov
dec
fsubrl
sbb
or
shlb
mov
lods
rolb
push
call
insl
pusha
shlb
shl
jns
mov
data16
cmpsb
and
cmp
inc
sub
in
mov
dec
mov
das
push
mov
xchg
adc
test
loopne
ss
fs
sbb
push
int3
or
addb
push
pop
dec
inc
jno
push
out
push
mov
rcrb
xchg
pusha
add
and
add
ret
mov
and
add
inc
hlt
es
in
adc
scas
pop
movsl
adc
mov
jbe
mov
aam
loopne
mov
jmp
xchg
and
shlb
xor
xchg
mov
into
cmp
imul
test
loopne
lods
shlb
xchg
out
scas
and
and
shlb
into
push
add
cld
xchg
rclb
dec
dec
jmp
enter
sbb
sbbb
popf
sbb
xchg
sti
xchg
ret
rolb
cmp
inc
cmp
xchg
and
cmc
aaa
mov
dec
jmp
xlat
fxch
in
sarb
pop
test
inc
pusha
mov
sub
in
icebp
arpl
dec
adc
loopne
add
adc
mov
cmp
enter
cmc
mov
and
subb
adc
lea
stos
daa
or
pop
ss
lret
fwait
add
xchg
sub
mov
mov
and
add
cs
add
sbb
bound
mov
pushf
adc
ds
mov
gs
pusha
adc
sar
dec
xchg
sbb
sbb
add
inc
inc
push
insb
or
pusha
movzwl
js
mov
mov
push
xchg
xchg
and
jbe
lods
lds
andb
pusha
mov
add
out
push
loopne
out
popl
xchg
inc
push
inc
cwtd
pushf
es
sarb
mov
filds
repz
push
pusha
or
lahf
and
add
cmpsb
pusha
rol
jmp
add
test
loopne
lods
inc
divb
lods
pusha
add
dec
repz
andb
pusha
in
push
mov
inc
mov
enter
test
add
loop
mov
cmp
repnz
jnp
jns
push
inc
add
and
jp
sub
and
push
push
mov
ret
in
icebp
adc
mov
add
rolb
orb
mov
jl
add
loop
fwait
push
insb
mov
mov
loopne
or
pusha
xchg
dec
icebp
lcall
out
rol
pop
push
pop
sbb
in
jnp
ss
xor
lea
sahf
js
scas
loopne
ja
jl
dec
add
fsubrl
rolb
lea
andb
mov
loopne
and
lods
int
add
xchg
pop
sahf
enter
add
sbb
ja
mov
in
je
add
xchg
fstl
xchg
aas
das
gs
popa
inc
std
fst
popa
pushf
xor
lods
mov
add
mov
sbb
les
mov
loope
call
in
rcl
lds
fs
xor
rcll
push
inc
push
scas
mov
loopne
mov
mov
and
cmp
xchg
fiaddl
xchg
fwait
jo
sub
mov
sbbb
mov
test
dec
xor
arpl
cmp
xchg
iret
stos
loopne
frstor
aam
xchg
push
xor
popf
ror
add
int
loopne
ficomps
and
and
mov
lret
or
rcll
jmp
movsb
loopne
jp
jecxz
out
dec
mov
pop
test
mov
rol
in
pop
gs
or
sub
ljmp
push
fiadds
les
fdivrl
lcall
inc
punpckldq
xchg
decl
pop
sbb
xchg
pusha
loop
pop
mov
push
sti
sub
and
pop
cmp
add
or
sub
addb
inc
inc
packssdw
cmp
loopne
ja
and
loopne
addb
jo
aaa
sub
pusha
dec
add
jns
adc
mov
jo
mov
mov
and
outsb
scas
and
call
sbb
enter
sub
add
fwait
jnp
pop
leave
dec
and
jmp
notl
xchg
lahf
hlt
lea
pop
inc
in
xor
gs
mov
cmpsb
addb
jecxz
cmp
andb
cwtl
imul
sbb
add
and
rcrb
decl
dec
or
add
cmc
std
xor
je
inc
int
rcll
cs
adc
call
add
jecxz
sti
and
and
sbb
lahf
jg
and
adc
sub
daa
les
addr16
push
orl
and
xor
jb
test
and
pop
fstpt
and
loopne
pop
scas
rolb
dec
jnp
movsb
and
stos
and
mov
cmpsb
inc
mov
pusha
ror
cmc
inc
adc
jne
adc
add
pusha
mov
sbb
and
cmp
mov
add
in
adc
cmp
mov
jnp
push
add
test
jb
mov
push
inc
ficompl
rol
mov
call
mov
shll
add
test
arpl
inc
test
loopne
dec
subl
inc
rorl
add
pusha
and
into
mov
test
sar
xorl
inc
fs
pusha
cli
out
shrb
pushf
add
andb
jp
add
and
repnz
cmc
aaa
mov
ja
sarl
out
icebp
lods
mov
mov
mov
scas
inc
cmpb
inc
xchg
jg
jmp
imul
and
jae
mov
orb
and
dec
mov
andb
out
stc
and
xchg
sbb
or
xlat
cli
dec
repnz
xlat
hlt
fs
sub
sbb
and
pop
and
pusha
test
mov
add
mov
jecxz
jnp
mov
push
adc
rorb
pusha
mov
lods
shlb
pop
pop
push
ret
xchg
ja
rolb
lahf
jl
fstps
push
mov
push
xchg
lods
loopne
push
das
dec
sar
dec
lods
and
andb
mov
add
scas
sub
xlat
lahf
pop
inc
xor
inc
push
loopne
add
ja
jno
mov
mov
test
and
inc
dec
or
and
jbe
jl
popf
mov
xor
cwtl
mov
pop
cmpsl
mov
dec
mov
jae
push
mov
mov
pusha
mov
shlb
adc
cmp
inc
adc
mov
inc
stc
mov
inc
loopne
jo
addb
imul
mov
mov
rcrb
mov
cmp
dec
mov
rclb
dec
shl
sub
loopne
pop
test
and
andl
aaa
pop
and
inc
repz
xchg
hlt
lea
fisttps
nop
lcall
ds
lret
lcall
pusha
loopne
roll
dec
mov
mov
mov
loopne
jnp
ljmp
xchg
inc
inc
hlt
fs
fnsave
loopne
cmp
rolb
adc
cmp
cmp
mov
adc
idivb
das
imul
mov
insb
inc
stos
lods
les
sub
xor
fists
fmuls
mov
stos
add
into
call
loope
and
jle
inc
add
cwtl
sbb
stc
xchg
movsb
addb
xchg
mov
das
sbb
push
dec
aam
clc
jmp
test
add
pusha
fndisi(8087
test
scas
inc
sub
xchg
rclb
repnz
dec
push
add
loopne
cmp
fstps
push
lods
loopne
dec
sbb
push
pusha
addb
stos
sub
inc
enter
shlb
aam
popa
fldt
mov
mov
scas
loopne
xchg
les
mov
and
xchg
into
jecxz
in
or
adc
or
jmp
imul
and
aad
bound
cmp
jae
mov
cli
mov
xchg
inc
int3
rorb
hlt
and
and
les
addr16
and
les
mov
push
das
adc
mov
and
ficompl
mov
or
xor
push
daa
add
inc
xchg
jo
mov
xchg
loopne
pusha
fsin
cmpsl
cltd
push
and
shlb
or
ss
imul
jae
inc
add
adc
add
fildl
sub
loope
shlb
push
push
loopne
stos
loopne
lods
xchg
adc
rolb
sbb
bound
and
add
xor
dec
popf
push
mov
and
sbb
dec
arpl
xchg
dec
insl
or
xor
dec
popa
mov
andb
pop
and
mov
xor
or
rorb
mov
mov
jp
pop
cmp
jmp
sbb
nop
ficomps
fsubrl
rorb
loopne
jne
lock
aad
nop
les
pop
imul
inc
xchg
inc
scas
pusha
inc
gs
in
shrb
pop
mov
and
mov
leave
setle
xchg
int
mov
push
push
test
push
and
add
and
cmp
dec
adc
jno
jmp
add
mov
andb
movsl
pusha
adc
mov
orl
fs
lods
pusha
and
pusha
sahf
cmp
bound
movsb
and
scas
add
shr
lret
syscall
xor
pop
popf
mov
sbb
loop
push
inc
add
bound
scas
rolb
xor
pop
sbb
pop
xchg
jne
pusha
and
das
jmp
test
rorb
add
dec
cmp
in
rclb
mov
daa
mov
mov
sahf
dec
aas
mov
lea
int3
jno
rolb
or
loopne
imulb
lret
pushf
ss
mov
andb
lea
push
leave
ja
xor
xchg
mov
shlb
iret
iret
jg
in
xchg
cli
jns
out
ja
pop
push
mov
cmp
inc
add
loopne
cwtl
jae
sub
sarb
inc
daa
sub
sar
and
pop
push
fdivrl
loopne
pusha
add
fldenv
pusha
and
cmp
sbb
lock
mov
adc
and
jb
scas
add
mov
xor
and
inc
cs
and
pusha
loopne
ret
and
pusha
data16
cld
enter
loopne
addb
inc
mov
or
pusha
jae
push
nop
xor
jb
push
mov
out
adc
movsl
inc
mov
fidivs
rcll
mov
test
cmpsb
loopne
test
mov
out
xorl
push
or
int3
out
mov
mov
mov
inc
pusha
push
mov
incl
cld
push
movsb
mov
aam
add
aad
inc
mov
aam
and
inc
pusha
adc
add
mov
jno
sahf
jg
sub
gs
xor
cmp
stc
xor
push
dec
mov
xchg
lret
mov
xor
notl
pop
cmp
and
inc
jp
fsqrt
push
psubw
pop
adc
dec
mov
and
mov
loopne
mov
sbb
out
xchg
and
pusha
sub
pusha
loopne
or
inc
sbb
fwait
jno
cld
lds
rorl
inc
mov
or
jg
jp
inc
rorb
rol
xor
xchg
insb
aaa
dec
xchg
rcrb
inc
or
add
js
andb
jmp
fiaddl
es
test
shrb
and
xchg
or
add
das
pop
sbb
ss
cmpsb
add
inc
mov
adc
loopne
mov
mov
shlb
mov
fbstp
mov
loope
fs
lcall
out
loopne
xchg
incl
je
pop
test
movsb
inc
loopne
popf
fbstp
unpckhps
pop
out
dec
dec
pushf
cmp
inc
pusha
shrl
sti
xor
stos
shlw
nop
aad
dec
pop
dec
sti
jge
in
es
imul
and
adc
lahf
xchg
cmp
add
adc
pop
and
xor
and
xor
test
loopne
hlt
nop
push
pusha
sarb
dec
lock
rorb
adc
mov
stos
loopne
int
mov
jmp
popa
pop
das
inc
or
and
push
pop
ret
jo
insb
lods
inc
ror
cmpsb
addb
mov
sahf
inc
dec
jno
popf
popa
lret
rcl
test
fwait
pop
cs
add
testl
add
inc
inc
push
loopne
fwait
addb
add
cmc
sti
cmpsb
rolb
mov
jno
mov
jno
dec
sarb
xchg
das
and
mov
idiv
das
push
call
push
jl
jge
inc
fiaddl
sahf
notb
jge
jmp
fisubl
jns
pop
add
andb
shll
adc
sub
fmuls
or
pop
lds
jge
and
test
ud1
adc
loopne
pop
std
mov
jecxz
mov
and
into
std
mov
xchg
push
or
mov
inc
imul
push
inc
mov
sub
in
adc
cmc
mov
test
icebp
push
loop
inc
and
add
xchg
jg
popf
push
mov
loopne
mov
adcb
mov
sub
inc
addb
aas
mov
mov
movb
rcl
cltd
sub
shl
dec
dec
mov
mov
add
rorb
ljmp
and
xchg
out
int3
jbe
push
jmp
ror
xlat
sbb
inc
add
pop
push
or
fucomi
mov
aam
mov
add
fisubs
mov
loop
nop
jg
cmc
loop
or
sbbb
nop
daa
pop
xchg
fildl
dec
add
in
and
and
xchg
addb
pusha
loopne
adc
add
movsb
loopne
stos
mov
pusha
mov
push
and
push
rcrl
mov
sub
loopne
hlt
jns
shlb
sti
lahf
mov
shr
xor
mov
sub
cs
sbbl
fisttps
and
xrelease
add
adc
movsb
shlb
mov
add
mov
out
pusha
pusha
or
adc
pop
dec
pop
add
or
pusha
out
adc
inc
add
loop
add
inc
xchg
fnstsw
lds
ficoms
mov
andb
xchg
add
dec
fcompl
mov
imul
test
loopne
lds
and
add
rcll
loope
mov
dec
rep
adc
scas
insl
inc
inc
lods
je
add
add
inc
cmc
stos
inc
and
mov
adc
dec
or
pop
mov
push
jbe
js
jb
lock
insl
and
mov
cmpsb
and
jmp
das
mov
cmpsb
add
inc
inc
pop
push
push
loop
mov
inc
ror
or
add
mov
fcmovnu
push
mov
inc
xchg
lret
pop
jp
rol
pusha
repz
mov
cmpsl
loop
pop
out
movsl
mov
inc
add
lods
and
add
popa
xchg
scas
pusha
add
sar
xor
dec
mov
pop
test
loopne
outsl
das
fdivl
jbe
into
xchg
add
mov
out
idivb
addb
popa
jmp
and
add
loopne
pop
aaa
sub
mov
mov
loopne
icebp
nop
mov
loopne
push
xchg
neg
xchg
cld
xchg
cld
test
xlat
scas
loopne
push
out
mov
addb
roll
add
add
pusha
mov
ror
add
xchg
aaa
rcll
dec
mov
mov
shrb
pusha
mov
add
pusha
push
addb
sub
and
dec
xchg
addb
and
sar
sti
jae
out
pusha
pusha
and
adc
pop
sbb
addr16
js
inc
xor
stc
adc
loopne
inc
ds
mov
pusha
add
ljmp
lahf
push
addl
sub
pop
repnz
jmp
mov
inc
jns
and
adc
jb
scas
rol
sbb
inc
and
in
rolb
jbe
add
jle
jo
push
rolb
shlb
fiadds
and
push
mov
daa
outsl
inc
cmp
push
mov
add
ja
ljmp
add
cli
fwait
pop
xchg
sahf
ret
int3
dec
mov
movsb
mov
shlb
xor
mov
push
mov
dec
mov
cmp
dec
sti
jg
fldt
cmp
mov
and
stos
loopne
loopne
jb
dec
es
mov
cli
popf
and
jnp
pusha
mov
ds
and
addb
and
loop
xor
les
and
jae
add
gs
add
mov
data16
int
rol
shlb
arpl
mov
add
dec
bnd
inc
pop
pop
mov
pop
mov
or
and
nop
and
and
jnp
jmp
pusha
inc
popa
nop
add
aaa
clc
int3
fbld
and
cmp
push
dec
rorb
loopne
inc
cmp
fdivrp
mov
loopne
cmpsl
jno
shl
pop
jb
insl
mov
les
mov
ret
sub
stos
les
pop
loopne,pn
lds
shl
sbbl
and
jp
cmp
jp
add
shlb
xor
xor
add
ficoms
push
das
pop
inc
insb
pop
pushf
lret
bound
inc
rolb
or
pop
nop
push
cld
aaa
lods
mov
in
adc
fcomps
test
sbb
pop
out
mov
pop
mov
lret
ljmp
bound
push
mov
pop
mov
inc
dec
pop
lcall
negb
xor
aad
push
push
pop
mov
push
aad
push
xor
pusha
xor
lret
mov
cmp
xchg
jle
pop
and
inc
xchg
lods
decb
lods
and
std
xchg
in
test
andb
mov
and
ds
sub
cltd
sahf
rclb
cmp
and
mov
out
outsb
jnp
stos
or
lods
popa
dec
addb
jno
rcrl
mov
orl
add
fwait
test
scas
pusha
andb
xor
andb
cmp
add
add
insl
push
cltd
adc
fs
adcb
aas
and
cmp
repnz
mov
loop
daa
xlat
in
xor
cwtl
inc
xor
sbb
sti
push
testl
pusha
lret
lcall
hlt
or
fsubrl
push
shlb
and
out
dec
shrb
in
jp
inc
inc
insl
sub
dec
leave
icebp
dec
movsb
andb
pop
insl
cmp
cli
loope
add
cmpsl
mov
mov
popa
jb
out
mov
push
mov
fldenv
inc
jmp
jmp
decb
mov
loopne
pusha
add
cld
daa
xchg
mov
cmp
and
mov
fwait
cmp
negl
xchg
jne
cmovnp
mov
popa
jge
pop
addb
or
add
push
cmc
cltd
mov
sbb
cs
fadds
out
ds
movsl
adc
dec
stc
cmp
mov
mov
and
mov
mov
shll
outsl
nop
xchg
jmp
ret
lret
mov
lock
aad
mov
nop
inc
std
sbb
jbe
and
cmpsb
mov
ss
cmpsl
mov
add
pusha
jge
dec
pop
jb
cmpsl
xor
scas
loopne
or
pusha
xchg
in
jge
pop
into
fstl
andb
sbb
int3
xchg
fildll
rcr
test
dec
daa
pop
xor
pop
xorl
ret
push
fadds
movsl
jg
add
loopne
sahf
les
mov
jb
pop
into
les
xchg
repnz
insl
or
shrb
je
scas
adc
jnp
andb
jne
loop
jp
dec
pop
fiaddl
lahf
cmpsl
jne
adc
cmc
xor
and
repnz
stos
or
mov
adc
cmp
dec
push
out
mov
jl
mov
add
int
shlb
fcoml
push
dec
imul
lds
mov
fimull
mov
mov
icebp
xchg
insl
pop
scas
push
pusha
xchg
pop
pop
pusha
mov
lahf
jae
out
out
adc
fsubrp
into
jnp
or
and
sub
dec
in
push
mov
pusha
add
ret
add
cmp
dec
mov
sti
inc
das
sbb
cmpsb
shl
mov
sbb
aad
push
add
in
addb
ds
shl
xor
xchg
stos
inc
rolb
pusha
addb
xor
loopne
sti
mov
mov
fsubrl
repnz
rolb
and
and
push
mov
jbe
mov
and
sbb
and
rol
and
pusha
inc
cmp
adc
push
dec
cld
dec
push
jg
xor
stc
sahf
mov
popf
loopne
xchg
dec
lods
cwtl
outsl
ret
ljmp
std
or
cwtl
nop
inc
or
xorb
pop
jl
popa
das
js
in
scas
adc
or
inc
inc
es
sarb
push
mov
jns
xchg
sahf
outsb
xchg
ss
outsb
rol
cmp
outsb
sub
xchg
loop
icebp
stos
pusha
rclb
insl
lea
loope
sub
xor
xor
sbb
add
jle
mov
mov
paddsw
add
in
pop
jp
fmul
pusha
mov
and
mov
pop
mov
and
xor
pushf
iret
scas
add
mov
sub
add
inc
add
inc
inc
lds
testb
mov
inc
inc
sti
push
sub
cltd
xor
xchg
icebp
addb
jbe
leave
clc
push
dec
daa
test
mov
and
inc
fs
jle
add
into
int
and
and
icebp
imul
sub
insb
shrl
jo
ret
jo
jb
loopne
test
inc
mov
fs
sbb
test
subb
push
xor
lcall
inc
stc
insl
push
or
jno
repz
mov
lret
mov
das
pop
push
jl
rolb
push
dec
and
jmp
mov
xchg
addb
fadds
popf
sti
les
xchg
popa
mov
add
pusha
mov
mov
loopne
mov
xlat
and
loopne,pn
movsb
shlb
mov
sbbb
loopne
mov
mov
enter
mov
and
andl
jbe
insl
and
and
sbb
pusha
and
add
add
test
or
imul
cmpsl
dec
das
leave
lea
pop
cmpsl
aaa
dec
in
jne
push
mov
inc
arpl
vcvtpd2dq
idiv
pop
adc
fdivs
dec
lret
sbb
inc
inc
jge
aas
lods
andb
inc
imul
xor
pop
mov
xchg
adcb
push
mov
test
sarb
add
inc
outsl
mov
and
stos
inc
shl
fisubs
loopne
xchg
ret
lea
repnz
rcrb
sbb
ret
cli
pop
fidivrs
insb
xchg
lods
ja
inc
mov
or
inc
test
sahf
arpl
loopne
inc
mov
mov
jbe
sbb
jl
jmp
mov
cmp
add
mov
loopne
sahf
xchg
xchg
dec
ja
shlb
mov
and
add
cltd
mov
loop
rcrl
das
sub
subb
shlb
jno
fstps
add
inc
xlat
cwtl
pop
test
fstpt
or
and
es
rcr
add
dec
data16
add
fcmovnb
lret
mov
insb
pop
test
mov
adcb
adc
pusha
and
loopne
pop
lcall
xchg
cmpsl
in
and
imul
std
ret
loopne
addb
insl
test
inc
addb
andb
dec
sbb
or
mov
addr16
inc
shrb
lods
and
mov
testb
movsb
addb
mov
and
inc
rcrb
inc
and
and
push
pop
in
and
or
and
loopne
cli
mov
sbb
loopne
shlb
bound
jae
enter
mov
ret
inc
loopne
shlb
sbb
insb
rorl
pusha
loopne
movsl
ret
aaa
cmp
int
jb
sbb
pop
aad
mov
add
inc
and
xchg
jl
daa
dec
sbb
xor
pusha
add
lods
or
mov
aas
mov
shrb
pop
imul
dec
mov
fnstsw
dec
cmp
incl
xchg
add
add
or
mov
test
iret
std
and
lret
inc
les
and
out
sub
cli
iret
loopne,pn
popa
push
mov
add
mov
int3
loopne
test
inc
adc
inc
js
inc
push
fisubl
and
inc
shl
cwtl
sahf
xchg
mov
pusha
insl
dec
sbb
xor
in
std
jno
push
rolb
ljmp
xchg
jo
ja
inc
inc
push
and
add
mov
ss
and
aad
and
pusha
cwtl
adc
mov
pop
mov
stos
fnstenv
dec
insl
add
xorl
mov
andb
les
add
inc
pusha
mov
pusha
cmpb
mull
mov
lods
ljmp
push
and
or
cmpb
mov
and
rolb
and
sub
inc
jne
clc
mov
jg
and
pushf
sti
pushf
mov
mov
push
lods
jae
xchg
gs
sub
push
arpl
andb
pusha
mov
push
stos
loope
lock
leave
into
adc
rclb
lods
inc
mov
and
outsl
repnz
loop
dec
inc
fdiv
test
adc
xorl
aad
les
mov
inc
mov
adc
pop
mov
lret
inc
xchg
adc
cmp
rolb
movl
mov
sub
loopne
and
mov
mov
push
negb
mov
rcrb
mov
pop
push
lock
incl
jne
cmpsl
pop
cmp
mov
and
dec
cwtl
push
andb
fadds
nop
in
mov
movsl
and
and
aad
and
jp
cmpsb
loopne
sbb
test
mov
mov
mov
cmc
mov
add
jle
lods
adc
xchg
test
scas
mov
hlt
push
mov
je
or
and
pusha
add
insb
xchg
and
cld
adc
pusha
mov
add
and
pop
xchg
pop
pop
enter
inc
repz
sbb
jle
adc
lea
and
int
fistpll
pusha
mov
popa
lds
shll
push
inc
pop
out
test
and
sti
repnz
cwtl
cmp
sbb
jmp
loopne
xchg
xor
and
and
es
adcb
add
mov
dec
bound
or
xorl
sub
mov
push
lea
jmp
mov
jle
xchg
loop
jo
int3
push
loopne
push
and
inc
or
stc
or
inc
or
push
jle
dec
pop
cmp
pusha
add
inc
sub
jae
xorl
cwtl
addb
les
and
and
jno
or
loopne
andb
xchg
push
adc
subb
push
addb
lret
mov
rolb
loopne
mov
faddp
scas
repnz
and
inc
sbb
add
and
fnsave
ret
dec
and
pop
aad
jo
ljmp
fbld
shlb
rolb
mov
pop
push
inc
add
faddl
in
cltd
in
mov
and
inc
dec
pusha
loop
int
xor
test
or
add
sbbb
jne
inc
mov
mov
mov
or
pusha
test
mov
push
or
inc
shrb
loopne
mov
xchg
lock
mov
loope
lea
in
div
mov
in
shll
cld
jmp
and
inc
adc
loopne
repz
inc
loopne
pop
mov
mov
dec
outsb
add
pop
push
jnp
fdivr
mov
jb
pop
pop
sub
pusha
mov
ror
icebp
inc
sub
loopne
loopne
pusha
jo
adc
add
mov
insb
aas
rcr
movsb
andb
inc
loopne
pusha
add
lods
rolb
and
das
mov
hlt
mov
fbstp
inc
and
ja
les
push
pop
xchg
ljmp
mov
loopne
cmp
jae
add
mov
shlb
cmpsb
addb
and
out
mov
pusha
rclb
scas
popf
fcmovne
add
cmp
stc
xorl
ljmp
inc
popa
add
mov
inc
sbb
lea
std
mov
fs
inc
inc
inc
and
jae
lds
outsb
push
add
pop
lss
push
push
stos
pusha
loopne
jg
mov
mov
inc
mov
fisttpll
jo
lock
test
adc
pslld
fcmovu
xchg
and
loopne
inc
pusha
mov
cmp
mov
xchg
push
cmp
mov
mov
pusha
dec
mov
sbb
jl
jns
out
inc
pop
mov
sbb
xor
rol
addb
pushf
test
dec
cmpsb
pusha
loopne
andb
fsub
out
inc
loopne
pusha
mov
fldt
inc
loopne
das
or
int3
in
add
subb
pusha
outsl
pop
negl
inc
add
add
pop
fdivl
int
and
subb
pop
cli
xor
int
dec
lea
lods
shrb
mov
xchg
int
int3
mov
and
add
add
sahf
and
mov
enter
jns
and
add
outsl
push
out
dec
out
inc
inc
test
loopne
sub
rcrb
loopne
inc
test
sub
and
lock
inc
loop
push
push
arpl
inc
cmp
dec
dec
ror
mov
shlb
test
lock
or
xchg
into
xchg
inc
mov
loopne
int
cmc
and
add
loopne
mov
and
push
popf
sti
cmp
shl
lret
addr16
mov
pusha
sub
xchg
sbb
mov
mov
rcrb
or
rclb
cmp
rolb
add
add
mov
inc
and
addb
jg
jge
mov
test
shr
mov
pusha
push
cmp
xchg
fisttpll
pusha
mov
mov
mov
mov
rclb
push
cs
mov
mov
push
push
inc
sarb
add
mov
pop
jne
ss
adc
dec
fsubs
dec
xchg
out
mov
mov
sbb
pusha
mov
shlb
adc
pop
add
xchg
mov
js
shll
mov
scas
mov
dec
sub
imul
rolb
cmp
shlb
ss
dec
imul
pusha
sub
mov
shlb
add
outsb
mov
or
xchg
stos
pxor
cli
mov
add
sarb
je
loopne
or
pop
add
or
mov
pop
loope
test
mov
dec
movsb
inc
pusha
in
out
mov
andl
mov
rclb
xor
lods
insl
pop
das
jp
or
adc
or
notb
stos
pusha
add
add
scas
hlt
addr16
sar
xor
cmp
andb
xor
loopne
cli
sub
sub
add
inc
pop
loop
xchg
sarl
aad
push
jns
jns
xor
cmp
push
pusha
and
addb
imulb
int
outsb
cmp
push
inc
inc
inc
mov
inc
mov
mov
add
data16
daa
je
xchg
push
push
add
push
and
pop
lods
pusha
add
lcall
scas
mov
dec
cli
mov
mov
shlb
and
or
movsl
imul
stc
lods
test
or
cmp
mov
sub
push
lahf
jne
and
dec
addb
push
pusha
loopne
imul
aaa
inc
sahf
bound
loopne,pn
xor
enter
sbb
stos
bnd
in
mov
loop
rclb
inc
and
cmp
rolb
cmp
adc
inc
mov
loopne
inc
test
rclb
movb
inc
aaa
mov
jae
fmull
stc
stos
cmp
insb
insb
push
push
inc
jge
push
pop
scas
mov
shll
and
add
lods
add
enter
sbb
pop
lretw
addb
mov
in
andb
test
sarb
pop
xor
addb
cmp
movsb
andb
xlat
sbb
pusha
add
pop
jb
inc
sbbb
inc
add
dec
inc
inc
push
cbtw
or
pop
cs
cmpb
mov
rolb
ret
pusha
inc
dec
or
leave
pop
testb
pusha
imul
andb
xchg
jecxz
shl
addr16
imul
or
test
sbb
push
push
mov
inc
xchg
mov
inc
mov
and
loopne
mov
push
out
inc
jmp
add
lds
loopne
push
add
and
testb
lcall
nop
sub
sub
out
xchg
jb
inc
fcoms
push
xchg
dec
cmp
repz
xor
pusha
cmpsb
inc
inc
add
shl
push
addb
jg
adcl
mov
lds
mov
loopne
ror
sub
cli
fnstenv
fadd
mov
std
inc
sbb
nop
pushf
mov
out
inc
inc
sbb
mov
sbb
in
mov
movsb
pusha
shr
cmp
xchg
ljmp
inc
nop
js
and
inc
nop
nop
js
or
and
and
je
xchg
mov
cmpb
mov
pop
es
addb
jecxz
add
call
add
rcrb
xchg
jne
add
dec
out
mov
fwait
xchg
shrb
addr16
mov
mov
inc
dec
add
and
and
daa
ds
andb
inc
shrb
out
stc
repnz
push
cwtl
sub
push
movsl
sahf
inc
push
rcll
fldenv
mov
pop
lods
stc
or
and
shlb
adc
mov
mov
inc
andb
insb
cmp
sub
mov
mov
pop
loopne
in
cmpsl
fs
jge
sbb
sbb
pop
mov
addl
aad
movups
add
sub
sub
loope
shl
mov
adc
aam
in
push
jg
mov
inc
flds
insb
stos
and
in
jecxz
sbb
and
clc
sbb
or
pusha
addb
pusha
mov
and
loopne
std
lcall
in
push
and
add
adc
imul
jns
add
dec
inc
xor
andb
lods
andb
pushf
push
test
and
sbb
andb
jmp
bound
addr16
leave
stc
lods
das
mov
xchg
lcall
push
add
sub
pushf
movsl
leave
test
ljmp
mov
pusha
das
sbb
pop
idivl
jmp
pop
mov
dec
mov
fcmovnb
int3
aaa
lock
nop
inc
mov
loopne
shlb
mov
loopne
pop
insb
fildll
add
pop
data16
cld
lahf
call
outsb
in
adc
cmpsb
add
or
push
cmp
icebp
pushw
mov
je
inc
loopne
sbb
fwait
xor
inc
jge
jbe
lret
loopne
or
pusha
outsb
mov
dec
out
call
sbb
and
pop
loope
imul
sub
loopne
add
dec
inc
cltd
cmp
loopne
lcall
adc
in
pop
out
xor
ror
aad
sbb
sarb
pusha
push
shlb
push
pusha
inc
stos
inc
lret
mov
divl
in
xlat
xchg
xchg
loopne
ds
call
inc
inc
scas
add
stc
mov
mov
lcall
rolb
stc
hlt
pop
or
xlat
lea
addb
and
pusha
jp
jp
aas
cltd
inc
adc
retw
addb
fwait
mov
add
add
jae
sbb
iret
xchg
outsl
aaa
push
cmp
xchg
and
pushf
sub
add
cmp
jg
stc
xor
scas
outsl
imul
outsb
mov
addb
cmp
jg
dec
les
add
ret
add
pushf
xchg
pop
or
cmp
pushf
stos
mov
push
ret
inc
clc
pushf
sub
inc
bound
inc
push
dec
mov
aaa
cld
lahf
dec
aad
movq
rcrb
jbe
inc
mov
fnstsw
bnd
mov
fmuls
rol
mov
lea
mov
and
jns
or
clc
test
inc
sarb
sbbb
enter
and
sub
mov
cmc
leave
and
loopne
mov
loopne
mov
rol
mov
dec
jne
out
add
and
jmp
rolb
loopne
xor
call
add
loopne
adc
mov
dec
cld
pop
pop
test
jecxz
dec
pop
and
loopne
insb
std
or
addb
xchg
pop
jmp
scas
add
fisttpll
idiv
and
sarl
mov
and
pusha
dec
push
add
jne
adc
aas
int
scas
mov
add
ret
jno
call
xchg
sub
gs
xor
push
lret
leave
mov
rolb
inc
js
addl
cmc
fnstsw
cmp
sahf
pushl
mov
sub
hlt
add
mov
lods
dec
sbbl
cmpl
pop
fadds
scas
in
dec
adc
fwait
adc
test
pop
adc
ret
fcoml
xor
push
xchg
mov
bound
insb
inc
shr
adc
inc
adc
movsl
leave
xor
add
sti
sbb
xor
sbb
enter
rorb
and
sub
imul
and
scas
addb
push
add
fwait
sub
mov
and
in
loop
test
xchg
inc
fucomip
popf
and
icebp
push
add
movsl
loop
lret
mov
icebp
stos
mov
pop
inc
jbe
sti
jne
jne
pop
xchg
mov
out
mov
insb
test
int3
fistps
ficomps
cmp
inc
fsubr
xchg
xchg
mov
fistpl
andb
and
or
andb
xchg
jl
inc
rcr
xor
jge
movsl
and
jg
pop
loop
mov
jne
cmpsb
andb
rorb
sbb
jle
pop
push
aas
lods
mov
and
repz
sbb
push
andb
aas
insb
mov
push
inc
mov
mov
fwait
mov
inc
divb
addb
pusha
sub
sub
push
or
add
adc
push
shlb
mov
or
mov
mov
and
push
das
jmp
dec
jae
ret
andb
shrl
mov
addb
rolb
push
loopne
push
mov
lahf
mov
out
xor
push
xor
dec
mov
sbb
dec
and
shl
je
sub
inc
imul
cmpsb
loopne
rorl
lods
rolb
and
imul
dec
pop
push
inc
inc
inc
push
movsl
imul
loopne
mov
add
loopne
mov
sbbb
adc
rcl
insl
cmc
fnsave
xor
xchg
add
fbstp
inc
and
sub
std
sub
shl
cmp
inc
int
dec
cmp
push
inc
inc
fbstp
in
sbb
js
inc
inc
push
pusha
outsl
pop
inc
xchg
inc
xor
imul
push
xor
outsb
and
shlb
negb
sub
imull
add
adc
pop
or
pusha
inc
lahf
mov
rolb
rcr
or
test
pmuludq
arpl
loop
rolb
adc
or
push
and
adc
sbb
xchg
loop
lods
stos
rol
mov
jae
inc
rcr
sub
mov
sub
mov
rcrb
rolb
pop
pop
in
cwtl
ss
ficoms
sub
inc
xchg
xor
loope
addb
xor
loopne
popf
sub
loopne
mov
repz
mov
xchg
add
fadds
jo
xchg
mov
dec
mov
mov
sbb
mov
mov
repz
scas
aas
das
cwtl
sub
add
push
rolb
add
and
cs
cli
push
pop
test
js
mov
inc
loop
pusha
pusha
pop
fs
lret
and
fildll
xor
nop
stos
andb
jno
dec
jge
mov
loopne
cmpsb
mov
fwait
sahf
lds
imul
rolb
pushf
pop
inc
cld
mov
out
jge
fnstsw
test
dec
jmp
test
mov
rol
dec
je
and
adc
xchg
mov
pusha
and
jg
scas
add
loopne
inc
scas
inc
loopne
out
push
loope
xor
negb
inc
mov
xchg
and
adc
add
add
shlb
add
and
cltd
and
faddp
testl
das
call
mov
aas
stos
jl
aaa
xchg
ja
xchg
vfrczps
pop
jg
popf
inc
cmp
stc
pop
hlt
dec
sub
loopne
jo
dec
loop
loopne
lock
add
sub
cmpb
push
xor
xchg
mov
loopne
aaa
xchg
clc
sti
push
cmp
idiv
sub
loopne
lea
push
and
mov
mov
popf
lret
sbb
pop
imul
aaa
mov
pop
dec
ljmp
lret
in
mov
inc
popf
dec
xchg
inc
fsubrl
imul
mov
add
loopne
pop
push
and
and
in
bound
add
adc
pusha
and
imul
adc
xor
fnstsw
clc
je
add
sbb
rolb
and
mov
and
add
shll
and
xor
jo
aam
movsb
inc
or
or
inc
insl
sbb
notb
push
das
adc
bound
add
push
cmp
dec
outsl
pop
cmc
pop
jno
dec
in
add
cmp
js
pop
std
or
loopne
fwait
repnz
lods
aad
or
add
mov
mov
inc
lods
inc
mov
mov
push
in
test
shr
cmp
inc
inc
jl
inc
loopne
negb
loopne
sbb
fimuls
imul
dec
in
enter
cwtl
arpl
jecxz
shlb
loopne
sub
pusha
bound
and
hlt
xor
fs
int
das
xor
mov
cwtl
sub
inc
pusha
cli
imul
adc
cli
sub
push
es
std
out
sbb
nop
jl
fsubl
stos
push
mov
stos
jbe
dec
int
or
mov
outsb
aas
das
dec
lods
xchg
sahf
stc
mov
std
aad
add
jne
mov
add
pop
movsl
lock
mov
movhps
cmp
mov
adc
cmp
jg
cwtl
add
inc
cli
add
icebp
mov
aam
mov
mov
mov
and
shlb
aad
dec
xor
in
sbb
inc
enter
test
test
mov
pusha
loopne
lret
inc
cmp
mov
loopne
pop
out
out
and
and
dec
adc
daa
xchg
aad
add
in
lahf
mul
in
cmc
xchg
decl
repz
mov
mov
mov
xor
imul
push
insb
jecxz
pop
rcrb
mov
cli
jbe
add
fbld
mov
add
jmp
add
call
stos
and
push
push
insl
fdivrs
jp
sub
and
fmuls
les
add
mov
pusha
pusha
test
dec
mov
mov
stc
pop
stos
rolb
sub
pusha
pop
aam
pusha
adc
cmc
shrb
push
loopne
lods
inc
inc
dec
decb
push
jg
or
loopne
cs
lcall
js
bound
mov
and
mov
outsl
xchg
adc
imul
rcr
aad
cmp
mov
cli
xor
adc
push
push
ret
sbb
into
or
and
in
addr16
pushf
push
rorl
inc
int3
sub
hlt
pop
enter
mov
sbbl
in
inc
inc
adc
jnp
jp
out
fs
dec
sub
pusha
dec
cmpsl
ljmp
loopne
and
add
mov
jae
add
mov
sub
xor
mov
inc
pop
push
imul
icebp
jns
mov
fnstsw
fists
mov
mov
mov
shlb
mov
sub
shrb
pop
pop
out
sti
or
pop
and
setns
add
jne
fwait
mov
inc
adc
testl
push
jg
lods
aaa
mov
or
out
xor
xor
andb
imul
pop
xchg
jecxz
push
or
sbb
inc
ror
popa
outsl
loope
cli
out
scas
mov
adc
dec
movsl
pop
sub
add
pop
xchg
and
mov
mov
cmp
fsincos
idivl
sub
add
andb
out
cld
mov
pop
mov
test
mov
pusha
and
arpl
mov
imul
shl
sbb
xor
ljmp
jge
dec
mov
add
xor
gs
dec
inc
adc
mov
sbb
shlb
hlt
push
push
clc
dec
rcrb
add
push
dec
lods
inc
inc
jge
int
xor
dec
cmpsl
outsl
mov
adcb
dec
bound
add
pusha
xorb
loopne
clc
test
mov
subb
daa
push
les
cmc
mov
mov
cmpsb
add
xlat
xchg
pop
andl
cmp
mov
test
pop
dec
dec
fmuls
loop
jg
pusha
add
and
mov
test
push
jbe
jne
and
addb
mov
cmp
cmp
gs
movsb
rolb
push
push
pushf
mov
cmpsl
mov
aaa
xor
es
inc
or
mov
leave
mov
in
push
out
push
and
loopne
mov
or
inc
mov
sub
and
aas
push
popf
sub
addb
and
sub
add
icebp
nop
jl
cwtl
icebp
shlb
daa
mov
and
notb
int
loope
pusha
stc
mov
arpl
pusha
and
popa
xchg
pop
vfmsub231sd
andb
xchg
mov
data16
jo
mov
cmp
mov
and
leave
xor
mov
es
pusha
mov
mov
inc
pusha
mov
andb
movsb
pusha
add
add
aaa
stc
mov
add
pusha
rcr
mov
cmpsb
rolb
jnp
and
fldcw
popf
cmpsb
loopne
pop
push
adc
clc
add
and
sbb
and
loop
ss
ljmp
sub
loopne
xor
dec
movsb
mov
push
shll
out
inc
pusha
cmp
push
ficoml
push
mov
mov
sub
add
test
shlb
sbbb
push
pop
divl
sub
loopne
enter
data16
xor
pusha
add
pop
mov
pusha
and
mov
xchg
pop
movsl
ja
je
adc
mov
es
leave
push
and
aad
push
lods
inc
inc
pop
pop
pop
in
lods
rolb
or
inc
xchg
shr
xor
lock
add
out
addb
mov
sbb
notb
push
sarb
movsb
add
dec
xchg
loop
imul
dec
popaw
pushf
pop
lods
mov
pop
std
pop
cwtl
ja
xlat
jecxz
fwait
push
adc
pop
add
and
cld
cmp
into
popl
sub
rcrb
jbe
out
je,pt
add
jae
imul
fnstenv
les
add
and
sarb
sub
cmp
push
lods
inc
int
in
push
mov
adc
jg
pusha
mov
inc
fmul
xchg
pop
cs
loopne
mov
adc
aad
ror
loopne
jae
mov
pop
fsubrs
inc
pop
sti
les
xorb
lret
insb
test
pusha
jns
movsb
mov
loop
xor
add
loop
loopne
mov
nop
push
sti
add
loopne
rcll
xchg
dec
add
sbbb
rol
jb
js
sub
sbbb
push
push
repz
loopne
imul
lahf
out
mov
es
and
xor
clc
inc
adc
add
and
xchg
and
mov
xor
mov
pusha
add
mov
aad
repnz
sar
loopne
or
adc
jle
adc
jno
sbb
shlb
mov
shrb
jne
icebp
into
mov
lods
es
rorb
addb
jnp
and
nop
dec
mov
and
mov
and
mov
in
adc
push
push
sub
call
adc
dec
ljmp
jbe
cmp
and
pop
loope
test
shlb
lds
int3
daa
in
pusha
pusha
fmulp
loopne
lret
or
jecxz
je
out
jp
xchg
addb
popa
mov
inc
clc
dec
or
outsb
jecxz
lgs
data16
out
xchg
dec
lcall
icebp
inc
jmp
mov
or
and
rclb
in
cmp
loopne
pop
xor
aad
ds
shlb
loopne
out
call
in
dec
popa
add
loopne
cmpl
rclb
and
fists
inc
and
lret
dec
inc
push
ret
xor
push
outsl
addl
mov
push
xor
mov
jmp
xor
cmpsb
loopne
imul
jae
test
out
rorb
dec
mov
test
and
cmp
into
int3
and
pusha
fidivrl
sahf
js
or
mov
loopne
sbb
loope
loope
jecxz
shl
addb
xor
push
addr16
lods
add
add
and
push
outsl
or
add
mov
sahf
adc
mov
inc
pusha
mov
or
loope
mov
sti
jne
imul
jo
out
push
xchg
lods
and
lods
inc
loopne
lods
mov
push
jecxz
mov
cmp
mov
add
mov
das
xchg
mov
mov
bound
test
and
std
mov
in
sub
xchg
mov
sahf
xor
add
aaa
in
inc
adc
add
pop
insb
mov
cmpb
mov
mov
imul
inc
mov
mov
cmp
cmp
jmp
shrb
jbe
xchg
or
inc
sbb
add
cmp
mov
loopne
daa
sub
adc
mov
inc
cmc
or
pusha
out
sub
or
loopne
aaa
rolb
and
pushf
outsb
mov
or
and
leave
adc
in
je
jge
jbe
shl
cmp
inc
sbb
sub
and
fwait
mov
sbb
nop
jbe
and
loopne
pop
jecxz
in
repnz
jne
outsl
jb
jp
mov
inc
imul
xchg
jo
jp
popa
pushf
repnz
sub
ret
das
out
mulb
inc
addr16
pop
inc
les
or
inc
add
pop
arpl
add
inc
dec
dec
mov
pop
push
outsb
aaa
ja
xchg
jns
dec
int3
mov
mull
xchg
aad
popf
or
sbbb
pusha
rolb
pop
mov
push
mov
and
lock
pop
cmp
in
cmpsb
and
jbe
in
pop
adc
xchg
xlat
cmp
popf
sub
loopne
pop
mov
cld
inc
cli
leave
es
lods
add
ja
fistps
rcl
scas
addb
xchg
loop
inc
add
and
mov
push
jnp
xor
xchg
fldl
inc
loopne
mov
fistpl
pop
rorl
xchg
cltd
test
pusha
popa
mov
cld
in
outsb
xor
das
xor
lahf
pop
fisttps
dec
cmp
rcrb
sub
adc
pop
push
and
jge
xor
mov
sbb
andb
mov
ljmp
inc
rclb
add
adc
inc
sbb
xor
in
roll
lcall
lods
inc
and
inc
or
mov
aas
or
or
sti
aam
xchg
pusha
movsl
std
inc
mov
xchg
xor
mov
test
pusha
mov
int3
push
mov
loopne
jl
sbb
xchg
jl
add
clts
inc
add
je
add
push
xchg
and
fs
mov
movsl
addr16
shlb
mov
xchg
inc
icebp
loope
dec
push
cmp
adc
out
push
jne
push
imul
sbb
adc
mov
imul
or
repz
xchg
adc
loopne
movsb
and
or
mov
cs
sbb
push
adc
adc
xor
adc
stos
push
cmp
imulb
xor
push
inc
sbb
cmc
jg
xchg
xchg
imul
loopne
and
xchg
xor
push
loop
loopne
xchg
jg
push
push
repz
andb
or
loopne
shlb
inc
and
and
sbb
and
inc
add
inc
inc
cmpsb
inc
mov
add
adc
push
mov
mov
repnz
inc
xor
inc
add
sub
add
sub
jle
movsl
es
add
inc
xchg
aad
sbb
dec
and
addb
xor
dec
dec
mov
insb
jo
insb
test
orb
ja
pop
mov
dec
dec
lcall
sub
xchg
into
cmpsb
add
sti
repz
les
repz
iret
and
addb
xor
sub
rcl
add
sbb
cld
in
jne
mov
rcl
lret
mov
inc
cld
loope
fists
nop
lahf
inc
fwait
rcrb
xchg
sbb
mov
jl
xchg
aam
xor
adc
loopne
clc
jmp
mov
and
xchg
dec
mov
pusha
enter
mov
aaa
mov
fcomps
test
jno
inc
mov
inc
cwtl
insb
imul
loopne
out
jne
sti
mov
and
dec
je
and
mov
insb
push
or
fisubs
cmc
popa
jns
insb
push
jno
inc
sub
mov
add
inc
mov
pop
mov
push
cltd
idivb
rcl
adc
aas
mov
and
pusha
fistpl
cmpsb
mov
test
jecxz
pushf
adc
push
rol
lcall
loopne
fsub
dec
mov
pusha
xchg
lahf
sbb
sub
ja
out
loopne
lahf
sub
inc
loopne
out
popf
int3
pop
mov
jns
xor
mov
sbb
push
test
inc
nop
jbe
push
cmp
mov
loopne
adc
add
add
popf
ja
push
rolb
push
test
xchg
lock
adc
cld
push
dec
das
icebp
das
lds
add
in
and
pop
popf
in
push
int3
nop
fnstcw
push
loopne
das
fabs
arpl
aad
mov
push
sub
inc
mov
cmpsb
addb
and
pusha
mov
dec
add
lock
dec
jl
ror
dec
outsl
sub
shrb
mov
xor
int3
sub
mov
test
loopne
pop
inc
and
leave
test
pusha
xor
fidivrl
or
inc
inc
add
fstpt
pop
leave
test
inc
in
mov
loopne
stc
cmpsb
addb
push
mov
pop
pop
sbb
pop
xchg
hlt
xor
jge
call
cmp
clc
jnp
rolb
addb
repnz
stos
and
rcll
loopne
adc
loopne
lret
sub
and
pop
out
pop
xchg
fistl
xchg
cmpsb
and
stc
ljmp
pop
clc
sub
addr16
push
inc
adc
cmp
pusha
shrb
imul
sahf
add
dec
repz
lcall
insl
stos
pusha
rclb
cwtl
xchg
mov
and
mov
or
lcall
and
add
and
push
pusha
add
hlt
add
dec
push
inc
push
aaa
mov
je
pop
sub
add
add
adc
sub
loopne
jne
jnp
addb
adc
stos
add
inc
pusha
jnp
pop
adc
cmpsb
loopne
sbb
inc
loopne
add
shlb
bound
fadds
pop
fwait
icebp
mov
inc
rolb
pusha
adcb
and
ss
mov
push
jle
inc
jnp
mov
shl
sub
mov
jg
mov
pop
xchg
mov
mov
fldl
mov
xchg
js
mov
icebp
mov
push
adc
fwait
stos
add
out
cmp
push
push
pop
mov
sbbl
xchg
mov
addl
push
mov
inc
stc
inc
or
gs
andb
xor
mov
andb
sub
and
xchg
push
xor
leave
mov
pusha
jg
jns
clc
aas
mov
in
sub
sub
sbbl
std
push
dec
push
pop
xlat
out
or
and
shl
fmull
or
inc
push
arpl
das
pop
aad
add
inc
cli
pop
fs
sahf
push
and
push
mov
sub
rolb
bound
cld
and
mov
mov
aaa
stos
lea
xchg
sbb
mov
mov
dec
pop
sbb
int
xorl
gs
adc
jg
mov
pop
xchg
xchg
push
jg
in
popl
pop
lock
sub
addb
cmp
sbb
xchg
ljmp
pop
inc
leave
out
es
inc
push
pushf
cmp
cwtl
inc
push
scas
addb
iret
xchg
mov
xor
xchg
mov
jg
and
sbbb
je
pusha
adcb
aas
adc
loopne
shll
mov
sub
and
sbb
int3
sahf
push
scas
or
xorl
cld
xor
iret
stos
mov
add
loopne
in
in
and
shlb
fimull
pusha
and
mov
std
lds
pusha
int
mov
and
mov
push
mov
loopne
movsb
shlb
xchg
xchg
fstpt
andb
add
add
mov
push
fwait
lret
inc
pusha
faddp
popf
in
or
fnstsw
xor
imul
test
push
iret
mov
insb
nop
push
cltd
jmp
pop
leave
fstpt
xchg
push
rol
ljmp
cmpsb
add
test
push
or
and
jmp
push
idiv
sti
loopne
jle
in
das
mov
inc
sti
cmp
mov
shlb
mov
shl
sub
cmp
stos
pusha
add
fsubs
adc
jns
fbld
add
or
mov
dec
insb
iret
and
fistpl
mov
mov
cmp
out
pop
shrb
loopne
jno
popa
sub
and
xor
mov
inc
iret
cli
inc
les
icebp
in
lock
sbb
fnstsw
das
flds
imul
or
mov
andb
adc
sti
inc
enter
lock
lret
bound
xchg
addb
loopne
push
inc
inc
xchg
add
dec
jne
loope
call
xchg
add
test
daa
test
sbbb
and
pusha
enter
mov
xor
mov
cmp
int3
out
ljmp
pusha
inc
pop
xchg
add
loopne
inc
in
xchg
jge
nop
jne
add
cmp
inc
pop
mov
push
addb
loopne
sbb
iret
mov
dec
cmc
aam
jbe
ja
leave
shrb
jo
jae
mov
lods
addb
adc
test
roll
jp
orl
imul
push
popf
insb
negb
sti
sbb
fildll
xorb
out
aam
sub
loopne
and
push
addb
andb
ljmp
clc
lds
and
mov
sub
rolb
mov
movsb
mov
mov
mov
mov
daa
es
pop
dec
xchg
xchg
loope
aad
inc
sub
adc
mov
sarb
jecxz
sarl
jecxz
popf
fisubl
aad
mov
sbb
or
loopne
addb
push
jmp
test
rcll
hlt
dec
xchg
ja
add
loopne
je
jge
push
flds
add
inc
insl
int
sahf
icebp
and
inc
stos
and
loopne
movsb
loopne
mov
inc
roll
mov
loopne
mov
das
xchg
popa
repz
jae
mov
sub
pusha
or
icebp
push
or
cmp
mov
dec
test
popf
stc
std
mov
shl
jg
fs
xchg
aaa
mov
mov
and
fbld
push
add
shll
add
shll
push
bound
shlb
mov
sub
shlb
cli
mov
sti
rorl
sub
and
add
mov
loopne
andb
xchg
dec
cmpsb
pusha
orb
inc
dec
ds
push
pop
cmpsb
loopne
sbb
fcmovnbe
inc
inc
out
outsb
sahf
jae
push
inc
test
add
icebp
mov
and
iret
mov
int
or
pusha
inc
mov
rcll
test
and
or
inc
iret
out
mov
cmp
jno
push
cmp
push
add
pusha
add
mov
dec
insl
add
adcb
or
lods
and
into
pop
imull
mov
pop
dec
sub
cltd
loop
pop
pusha
pop
aam
jl
sub
mov
mov
xchg
and
or
inc
test
loopne
leave
aaa
movsl
test
pusha
movsl
sub
mov
das
fs
lods
mov
loopne
iret
inc
insb
mov
addb
or
imul
rclb
cmpb
push
and
mov
pushf
cmp
scas
add
add
add
rolb
subb
fnsetpm(287
adcl
or
jnp
loopne
leave
inc
jo
jo
test
and
out
addb
shlb
loopne
pop
les
shrb
loopne
sub
mov
jae
mov
loopne
xchg
mov
and
mov
sbb
jp
mov
es
mov
jno
and
mov
scas
add
inc
into
lret
inc
add
addr16
push
sti
fisubrs
imul
sahf
in
xor
rolb
pusha
add
dec
out
stos
add
mov
add
mov
sbb
push
cmp
shlb
rolb
ret
sub
cmpsl
int
out
test
hlt
pushw
daa
loop
add
loopne
cmp
mov
cmp
and
addb
cmp
out
andb
out
xor
loopne
jg
fs
addb
pop
push
and
loopne
or
mov
popf
outsb
xor
andb
inc
pop
imul
loopne
ffreep
push
cmpsl
mov
rcl
repz
mov
or
inc
and
xor
add
out
in
push
das
pushf
adc
loop
leave
mov
fcompl
outsl
repnz
test
inc
jge
loopne,pn
data16
inc
mov
movsb
mov
pusha
add
inc
mov
fs
popa
or
shlb
loopne,pn
rolb
add
pop
cli
movsb
pusha
mov
push
xchg
test
gs
roll
mov
xchg
ljmp
mov
les
bound
sbb
leave
repz
bound
stos
shlb
dec
loope
and
lret
mov
addb
inc
or
mov
jne
cmp
ret
lea
sahf
and
idivl
cmp
inc
rorb
mov
pop
gs
hlt
daa
cmp
mov
mov
inc
ss
inc
mov
xchg
je
loopne
push
cld
mov
inc
sahf
jg
push
sbb
pop
rorb
add
mov
add
sub
mov
pop
fbstp
loopne
andb
repz
imul
mov
and
pusha
sti
xlat
jbe
aad
out
les
add
addl
sub
arpl
mov
and
test
loopne
push
push
imul
cltd
repnz
js
int
andb
aad
shrl
and
arpl
pusha
mov
cmpsl
mov
ret
jmp
or
and
cwtl
addl
ret
outsb
fsubrs
inc
add
jo
rorl
sub
xorb
out
xor
aad
stc
pop
cmp
mov
test
icebp
fdivrl
scas
push
mov
inc
adc
inc
mov
test
dec
in
enter
popa
hlt
inc
adc
cltd
push
orl
out
mov
jns
outsb
sub
out
imul
jbe
jbe
je
in
sub
shlb
je
sbb
sub
mov
inc
mov
mov
mov
loopne
xlat
andb
mov
mov
gs
ja
loopne
sub
inc
arpl
cwtl
mov
lahf
adc
dec
push
and
add
popa
lcall
push
ss
cmp
jns
push
ss
dec
fiadds
jmp
jns
inc
pusha
imulb
loopne
in
test
and
inc
fldcw
stos
xlat
addr16
mov
mov
and
inc
dec
addb
mov
and
jl
sub
jle
ficompl
push
push
loopne
pop
dec
sti
jns
jns
and
iret
jno
repz
inc
ficompl
sbb
sbb
test
loop
inc
rcll
fisubrs
add
loopne
add
push
jns
mov
lret
int3
cmp
cmp
push
pusha
movsb
mov
inc
jbe
pusha
mov
xor
pusha
add
imul
fldenv
jbe
inc
call
xchg
std
rcrl
push
add
mov
push
iret
mov
mov
jmp
ljmp
sbb
xor
mov
mov
setl
mov
and
pusha
gs
mov
adc
inc
pop
or
add
stos
mov
xchg
arpl
pop
cmpsl
or
and
jno
iret
push
dec
mov
mov
jno
mov
aam
lock
test
loopne
addb
ljmp
lahf
lock
fsts
ljmp
cmpsl
push
cmp
jnp
cs
loopne
stos
mov
mov
mov
cmp
addb
int
pop
xchg
imul
xlat
shlb
mov
cmpsl
sub
andb
inc
rol
xor
jle
mov
mov
dec
cmp
pop
adc
mov
ds
inc
or
mov
add
lock
xchg
bound
xor
and
or
or
mov
decb
popf
imul
ficomps
fcmovb
shlb
inc
sarb
loopne
inc
scas
pusha
and
inc
addb
mov
xchg
mov
aas
mov
inc
mov
xchg
push
pop
das
gs
mov
push
js
cld
cltd
jne
cmp
rclb
xchg
jmp
xchg
shlb
pusha
pusha
and
push
dec
in
es
repz
jbe
xchg
push
fisubs
xchg
test
inc
xlat
aaa
nop
mov
in
aad
scas
mov
imul
icebp
daa
movsb
mov
mov
shrd
sahf
or
loopne
icebp
mov
jns
sub
outsl
push
push
rolb
and
and
addr16
sbb
sub
fists
mov
pusha
test
mov
and
mov
pusha
ss
loopne
addb
mov
out
and
or
and
mov
aaa
addr16
nop
and
mov
int
cmc
outsl
or
pusha
lea
push
loopne
adc
pop
push
cli
ret
mov
and
repz
ret
inc
push
pusha
mov
arpl
pop
xchg
mov
jg
or
add
dec
mov
rcrb
mov
rolb
inc
orb
loopne
mov
loopne
andb
inc
inc
fstpt
mov
sbb
test
leave
int
in
xor
ljmp
jge
das
push
das
cwtl
xor
mov
cmpsb
addb
cmp
fidivrl
mov
lahf
sbb
das
mov
pop
cmc
jbe
sub
out
sbb
aad
fcoms
cmpsl
imul
mov
inc
popa
cmpsb
add
sub
or
andb
movsb
loopne
insb
dec
pop
xor
inc
fnstenv
push
sbb
pusha
pusha
cmp
stos
add
pop
jns
sbb
sbbl
push
mov
pop
mov
mov
push
iret
jo
mov
sbb
add
add
cli
scas
mov
inc
pop
bound
xor
aaa
push
jg
andb
push
loop
sahf
stc
lods
rclb
or
rorb
outsl
pop
or
test
add
sbb
jne
adc
inc
imul
rolb
inc
lods
and
or
shlb
pusha
add
je
andb
push
loopne
lock
mov
add
dec
rclb
je
add
cld
aad
inc
shlb
jb
or
sub
xor
inc
pop
push
pop
mov
test
jbe
mov
inc
jnp
loopne
loopne
dec
adc
popf
adc
sbb
xchg
ret
inc
jmp
lret
sub
pusha
adc
decl
cmp
add
aam
lahf
leave
or
and
or
in
mov
jp
imul
dec
cmpsb
add
jne
packuswb
in
mov
outsl
popf
pop
rol
or
loopne
mov
test
repz
test
imul
out
mov
loopne
out
lods
inc
pusha
pop
les
ss
sbb
shlb
add
andb
inc
test
jo
jno
popa
loopne
cs
pop
add
ja
std
xchg
inc
fdivrs
inc
stc
flds
mov
and
cmpsb
loopne
xchg
lods
ret
adc
inc
mov
out
and
add
scas
rolb
test
inc
iret
ret
fisttpll
fmull
add
xorb
pushf
shr
sbb
mov
or
mov
loop
mov
and
sahf
mov
push
iret
xchg
inc
icebp
jae
out
cld
pop
imul
repnz
push
inc
inc
fdivrs
ds
cmp
add
and
add
inc
cmc
inc
mov
or
mov
rolb
les
les
sarb
sub
dec
aaa
out
jb
loope
xchg
xchg
add
inc
push
icebp
mov
int3
mov
xchg
jns
and
addb
jae
sarl
pusha
rolb
mov
out
dec
jl
ret
and
rorl
pushf
mov
popa
fs
mov
sub
sub
push
jnp
shlb
shlb
adc
sub
and
inc
dec
hlt
sahf
call
mov
inc
test
adc
aas
andb
fs
fimull
outsl
out
xor
in
sbb
fsubl
mov
or
loopne
push
insb
lods
jne
cld
fstpl
pusha
pusha
xlat
mov
mov
inc
pusha
imul
outsl
add
loopne
inc
lahf
dec
mov
push
popa
cltd
scas
or
jle
dec
shrl
add
mov
in
xor
nop
mov
test
sbb
sbb
sub
xchg
mov
push
mov
popa
jg
xchg
or
cwtl
call
mov
jmp
mov
add
dec
or
xor
ret
inc
mov
cmp
pop
scas
addb
pusha
shrb
addr16
mov
and
rolb
and
sbbb
lcall
loopne
aam
and
insb
lret
sti
xchg
sub
les
iret
mov
fcomip
cmp
lret
push
andb
add
push
sti
push
add
roll
add
subw
aaa
test
gs
js
stc
sub
xchg
mov
test
mov
rolb
out
mov
push
mov
pusha
aas
pushf
sbb
loopne
stos
push
and
inc
add
inc
out
fs
pushf
pxor
addr16
shlb
jnp
stos
andb
cwtl
fwait
mov
xchg
push
pop
push
cld
dec
inc
cmp
loopne
fiadds
inc
into
pop
scas
nop
cmp
pop
and
xchg
xchg
lahf
scas
add
mov
mov
arpl
dec
dec
cmp
popa
jp
adc
cmp
xor
push
addb
mov
pop
out
lret
loopne
popa
daa
sbb
idivl
pusha
loopne
add
pop
mov
je
lahf
aaa
dec
fnsave
nop
ss
jp
mov
shlb
inc
imul
hlt
ds
divl
cmpsl
in
and
rclb
hlt
and
ret
add
fbstp
movsl
hlt
daa
ret
add
inc
push
mov
push
sub
push
jecxz
mov
sub
and
sbbb
out
sbb
inc
sarb
add
xor
push
fisubrl
inc
jno
sbb
sub
and
pop
dec
out
inc
arpl
push
lcall
or
add
jmp
hlt
xchg
mov
rcrb
fistl
jmp
popf
and
and
insb
pushf
jecxz
jecxz
pusha
andb
daa
dec
mov
jb
push
xchg
out
or
in
xchg
fwait
mov
fisubl
inc
shr
cmpsl
push
lods
loopne
mov
adc
add
add
fucomi
out
pop
cmpsb
and
test
sbbb
loopne
jbe
out
pop
stc
push
and
je
mov
ja
dec
fs
mov
sti
in
add
dec
jo
ss
jbe
insl
cmp
jbe
mov
das
and
ds
or
subl
jnp
mov
jg
lret
imul
orb
std
sub
mov
sub
adc
shlb
scas
and
pusha
push
pop
xor
mov
xorl
out
add
cmp
pop
jne
mov
add
dec
pop
pop
hlt
or
mov
pop
sub
xchg
mov
xor
and
andb
xchg
inc
push
fwait
dec
in
xchg
or
leave
xor
and
fisubs
negl
in
bound
cmp
pusha
pusha
jne
xchg
jb
add
mov
popf
inc
dec
mov
mov
test
stos
and
mov
mov
push
addb
mov
loopne
mov
pusha
mov
adc
or
add
or
rcrb
push
loopne
in
sub
sbbb
addb
mov
push
or
mov
inc
pop
in
leave
push
adc
add
adc
xchg
sbb
mov
mov
insb
xchg
pop
pop
inc
and
js
ss
mov
jns
frstor
les
mov
and
dec
adc
push
loopne
pop
and
inc
into
mov
or
pop
mov
out
scas
push
add
dec
push
inc
mov
mov
rclb
stc
js
roll
mov
sbb
shl
mov
scas
jb
push
insl
movsl
sbb
adc
mov
loope
or
rclb
mov
xor
mov
adc
out
loopne
inc
shlb
in
mov
push
jnp
jns
pop
out
xchg
jnp
jns
dec
pop
lahf
and
gs
ror
fsts
mull
inc
test
add
or
lods
mov
movsl
jbe
in
stos
mov
loopne
daa
mov
dec
subl
cmpsl
push
test
xchg
sbb
cltd
push
mov
mov
mov
jle
cwtl
aam
arpl
or
shlb
je
xchg
adc
sbb
pop
and
fidivs
mov
addr16
dec
xchg
sub
icebp
ss
loopne
ret
jae
je
mov
add
mov
mov
pop
insb
test
mov
cltd
lea
test
pusha
mov
and
sbb
lcall
out
inc
test
and
xor
dec
loop
and
js
cli
mov
lds
adc
jmp
or
cmp
mov
inc
inc
jne
add
or
loopne
sbb
dec
jmp
xor
ljmp
pop
xchg
or
loopne
shl
jmp
cmp
imul
or
pusha
clc
cwtl
add
add
mov
pop
xor
and
rclb
jl
inc
loopne
inc
clc
inc
mov
loopne
jo
xor
xchg
clc
nop
shlb
stc
fldcw
jo
add
add
shlb
andb
jl
addb
and
fwait
push
mov
inc
xor
sarb
stos
es
shlb
in
cmp
dec
or
rclb
loopne
loopne
arpl
fsubrs
mov
out
mov
lcall
mov
sub
mov
xchg
mov
xchg
imul
pusha
mov
cmc
jno
mov
loopne
dec
adc
jg
ds
dec
mov
loope
or
xchg
ljmp
push
addb
mov
arpl
xchg
add
es
bound
pop
insl
push
sahf
pop
pop
nop
add
orb
push
mov
jne
test
jmp
movsl
and
ds
inc
cld
jae
mov
sub
inc
sub
fwait
cld
pusha
dec
jmp
loopne
fists
les
lret
pop
test
xchg
xchg
cmp
stos
inc
std
push
pop
jns
js
loopne
and
cmp
inc
stos
addb
popa
popf
and
add
push
inc
test
cmp
outsl
jno
ds
mov
fidivrs
jge
shlb
call
mov
inc
mov
jae
repnz
and
rcll
sbb
iret
adc
je
stos
shlb
mov
jbe
cmpsb
add
pusha
pusha
add
inc
imul
and
cmp
and
mov
add
dec
mov
or
fcomps
insl
fistpl
adc
inc
push
mov
add
cmp
add
jne
mov
dec
inc
xchg
pusha
js
push
insb
popf
addb
xchg
shl
xchg
push
aad
add
mov
and
inc
adc
std
mov
add
fldt
sub
inc
test
mov
xor
mov
push
xlat
xor
inc
jge
mov
pop
pop
push
pusha
sub
push
sbb
adc
pop
sahf
mov
subb
or
addl
jg
cmc
pop
mov
mov
fcmovu
ss
mov
push
mov
adc
sub
adc
add
pusha
xchg
xchg
pushf
andl
fcoml
shrb
xchg
and
mov
lret
lret
scas
mov
xchg
lret
cmc
mov
pop
inc
hlt
arpl
mov
mov
cli
cmc
and
and
aam
loopne
sbb
sti
inc
je
out
mov
ja
xchg
imul
pop
pushf
int
and
leave
bound
sarb
stos
shlb
clc
mov
sbb
in
stos
inc
shlb
imul
add
loopne
dec
lds
and
xor
aam
xchg
test
pushf
pop
aas
je
xor
jle
cld
fstps
mov
add
sbb
test
and
scas
pusha
rcrb
mov
inc
es
and
inc
add
dec
scas
mov
rclb
clc
push
loopne
sahf
push
pop
testb
add
iret
test
and
xchg
jge
sbb
stos
pusha
inc
test
xor
data16
pop
pop
testb
sub
cli
cmp
lret
mov
mov
loope
fs
add
push
shlb
or
mov
xchg
jne
pusha
dec
lock
push
add
mov
add
pusha
addb
int3
adc
shlb
mov
inc
lods
mov
es
mov
add
popa
aad
shl
push
mov
sbb
ficoms
xchg
call
inc
xor
jge
xor
xor
fnsave
jecxz
pusha
orb
and
dec
lock
sub
mov
fmulp
seta
inc
dec
pop
jns
mov
jp
inc
stc
mov
cmp
and
adc
aas
jno
push
add
mov
xchg
mov
mov
andb
xchg
xor
cmp
push
ljmp
inc
mov
gs
pop
sub
and
adc
mov
addb
daa
lods
pusha
inc
fiadds
add
adc
sbb
add
dec
push
les
jo
rol
shlb
scas
loop
repnz
add
shl
loopne
cmp
xor
aam
loopne
jns
push
mov
cli
push
into
mov
outsb
rcrb
pusha
lret
icebp
pop
pop
scas
add
addb
pusha
or
push
adc
xor
fcmovbe
push
and
enter
addb
fsubrl
pusha
xorb
xor
ljmp
xlat
mov
loopne
fnsave
aam
icebp
movsl
icebp
push
leave
mov
neg
and
mov
and
mov
aam
xor
rol
hlt
add
xchg
dec
dec
sbb
in
mov
add
mov
push
mov
add
pushf
pop
push
xor
loopne
pop
rorl
add
in
jl
jp
jle
inc
mov
dec
ja
and
lea
jmp
idivb
fcomp
stc
in
jae
stos
addb
and
fs
jno
inc
push
or
sub
mov
xchg
add
daa
aam
pusha
cmpb
dec
add
mov
push
xor
loopne
cltd
fwait
dec
bound
cmp
popf
out
lret
andb
or
mov
pusha
mov
xchg
andb
outsl
sahf
fs
loope
rcr
rcll
ret
movsb
add
xor
enter
mov
xchg
outsb
push
inc
shrb
cwtl
fs
jecxz
add
push
lcall
cmp
inc
std
push
movsl
arpl
sbb
add
and
addb
mov
and
xchg
and
xorb
xor
xchg
pop
dec
and
loopne
out
es
mov
pop
lods
inc
or
jl
loopne
and
push
sub
cmc
xor
mov
daa
xchg
push
pop
or
loopne
pop
mov
inc
cmp
xor
test
xchg
mov
xlat
addb
stos
fcmovne
mov
add
rcl
inc
loopne
mov
cwtl
andl
add
cs
inc
and
push
jne
add
jns
adc
fisubrl
mov
xchg
dec
inc
in
push
fadds
cmp
into
cmc
sub
lret
adc
fsubrs
test
rolb
or
mov
addb
ret
rolb
and
pusha
lret
fmuls
inc
fimuls
mov
add
push
pop
cmp
and
push
or
ds
shrb
xchg
cmp
shlb
xor
pop
add
shll
adcb
inc
mov
inc
pusha
sub
pusha
dec
ss
push
dec
aad
or
insl
sahf
and
and
sarl
ja
repnz
in
and
push
add
addb
shr
jmp
daa
and
in
adc
or
mov
add
adc
fsubrs
movsb
and
push
xadd
movsl
sub
xchg
cmp
inc
insb
add
rclb
out
shl
bound
hlt
sub
rclb
mov
xor
pop
sbb
mov
fisttpll
loopne
cmc
push
loopne
sub
out
push
testl
push
lea
outsb
inc
rorl
shr
sbb
and
fimuls
dec
fcompl
outsl
fnstsw
popf
or
andb
push
pop
jg
push
and
mov
lret
push
xchg
lods
add
and
add
jne
jmp
out
add
pusha
xchg
movsl
cmp
ficomps
imul
xor
and
cltd
pop
push
push
aaa
lahf
out
das
push
pop
lahf
adc
out
in
imul
xor
push
in
inc
cmp
cld
rolb
add
ss
xchg
out
inc
mov
dec
jmp
imul
and
mov
stos
mov
or
std
xchg
je
sub
fcomps
push
mov
mov
int
adc
lods
add
and
and
mov
mov
cltd
push
stos
inc
add
cs
pusha
test
loopne
call
pusha
inc
int
in
mov
sbb
nop
pop
lahf
cmc
cmpsl
scas
adc
cli
mov
mov
addb
push
cmpsl
dec
cmpsb
add
test
mov
scas
lea
mov
sbb
push
xor
movsb
loopne
mov
les
add
andb
and
sti
mov
idivl
jo
lret
add
add
pushf
into
aad
pop
jbe
push
clc
test
loopne
mov
sub
pop
xor
outsl
ffreep
dec
cmp
imul
cmp
sbb
and
mov
inc
and
idiv
mov
aad
jp
je
and
call
fimull
pusha
and
mov
mov
rclb
mov
popa
push
addb
jmp
xchg
push
inc
shlb
mov
dec
sub
and
add
clc
add
mov
mov
mov
into
xchg
push
push
cmpsl
inc
ss
push
mov
jns
or
and
inc
xchg
in
or
pusha
mov
cmp
and
inc
sbb
pusha
dec
mov
xchg
mov
jecxz
sub
mov
inc
sub
subb
mov
arpl
or
popf
out
cwtl
out
add
mov
inc
cs
and
push
pusha
rcr
pop
cmpsl
push
outsb
and
jmp
push
filds
mov
xchg
xchg
loope
mov
push
cwtl
adc
das
and
in
dec
jecxz
or
inc
cmpsb
mov
and
arpl
and
cmp
pusha
mov
lods
jg
pop
imul
xchg
xor
movsl
cs
outsl
lods
add
jl
push
sti
sbb
ja
sub
pop
sub
pop
test
inc
fs
and
mov
call
js
shl
xor
xchg
cli
sti
sbb
adc
data16
mov
inc
mov
lods
push
lret
or
and
pusha
xor
sub
rolb
jle
xor
push
scas
push
aad
push
ficompl
mov
je
into
loopne
push
add
pusha
subb
add
lea
imul
shlb
inc
sbb
pop
insl
in
test
mov
and
cmp
out
cltd
ss
in
mov
pushf
cltd
mov
outsb
subl
aad
push
loopne
or
xchg
enter
push
jns
and
lcall
jnp
dec
dec
ljmp
pop
or
sub
jg
clc
gs
mull
mov
add
mov
mov
sbbb
rcrb
push
pusha
loopne
test
mov
xchg
or
inc
mov
mov
sub
add
inc
js
fnstcw
dec
scas
push
stos
pusha
loopne
scas
loopne
lea
add
adc
roll
pusha
mov
out
jge
cwtl
adc
xchg
and
shr
and
push
shlb
sbb
and
clc
mov
rclb
push
into
jbe
test
and
inc
repnz
out
mov
stc
int
mov
mov
sti
cli
jae
sbb
negl
sbb
add
rclb
or
pusha
inc
xchg
sbb
push
insb
and
push
mov
jns
push
addb
andb
bound
imul
mov
rolb
xlat
test
sub
sub
sub
xchg
add
rolb
or
add
test
mov
testb
enter
loopne
sbb
cmp
js
ds
mov
jno
dec
cmpsb
loopne
aaa
jno
arpl
into
lock
dec
movsl
mov
jl
je
sarl
jmp
jnp
cltd
test
fisubs
ss
mov
sti
dec
add
pusha
rorl
insb
sbb
inc
and
scas
adc
xchg
int3
jecxz
shlb
add
jb
mov
add
outsl
push
push
and
cmp
cmp
adc
stc
hlt
data16
mov
or
adcl
in
fdivrl
lcall
pusha
test
insl
xor
sbb
mov
adc
mov
pop
sub
pop
in
mov
jp
outsl
mov
add
loop
add
push
mov
push
cmpsl
mov
xor
pusha
add
add
mov
lods
lds
stc
mov
push
nop
xor
loopne
shll
lcall
inc
cmp
xchg
je
aam
loope
aaa
and
inc
in
loop
and
in
dec
jmp
jp
fwait
icebp
shlb
fxch
popf
pop
sbb
pusha
add
jl
lock
pusha
or
shl
ret
test
xor
pushf
gs
loope
or
pusha
add
pusha
sti
fcmovbe
ljmp
add
mov
arpl
cwtl
andl
dec
daa
sub
test
pop
into
sub
loopne
fldcw
inc
mov
insl
add
add
ss
hlt
shr
les
sub
jnp
aas
jne
jae
cmpsb
add
jno
or
sub
add
mov
xor
inc
loopne
lea
adc
andb
add
mov
push
jle
montmul
cmpsb
addb
das
aad
cmp
jne
pusha
inc
fcomp
jb
xchg
sub
rclb
add
jl
xor
add
sub
fistpl
jecxz
xchg
ret
fwait
sub
inc
insl
pop
xchg
xorl
ret
outsl
iret
push
sti
data16
das
xor
cmp
add
mov
mov
or
and
pusha
mov
ficomps
sarb
push
add
mov
loopne
roll
lahf
sub
jmp
stc
inc
pop
xchg
mov
xchg
loopne
mul
mov
mov
rolb
scas
and
mov
loop
stos
cmp
loopne
push
jo
incl
addr16
cmp
loopne
popf
scas
mov
lds
in
mov
and
test
shl
inc
add
adc
int3
jb
fcoml
mov
or
and
mov
imul
lds
mov
mov
ret
lret
jns
popf
aas
inc
sub
aad
mov
loopne
loopne
es
rclb
pop
inc
repnz
idiv
fucomi
jle
inc
inc
jmp
in
repnz
jg
rolb
pusha
inc
adc
loopne
push
shlb
mov
int3
cli
dec
fstpt
stos
inc
inc
imul
leave
adc
orl
orb
mov
jecxz
pusha
loopne
mov
mov
pop
push
pop
sbb
lcall
cwtl
push
sbb
in
add
mov
push
aas
mov
popf
lahf
ret
mov
pusha
mov
mov
or
repz
pop
dec
iret
into
jne
mov
fdivrs
adc
adc
dec
dec
dec
stc
cmp
loopne
xor
rclb
clc
js
push
xor
shlb
or
addb
addb
xchg
jns
ds
push
adc
out
mov
loope
andb
emms
aam
xor
ret
orl
add
cmp
lods
xchg
mov
test
mov
dec
push
mov
pop
scas
aaa
sub
lods
andb
sbbb
mov
mov
popa
pop
lods
mov
pop
cmpsl
mov
cmp
nop
ror
push
adc
shlb
addb
dec
js
mov
dec
mov
mov
jnp
mov
in
pop
sti
fiadds
mov
cmpsb
loopne
pop
clc
add
loopne
loop
push
pusha
jae
sub
push
addb
push
out
sbb
cmp
cwtl
sub
mov
sbbl
cs
add
movsl
cli
lret
pop
test
jecxz
scas
addb
fwait
lret
push
mov
test
dec
leave
cli
inc
test
ljmp
gs
int3
mov
dec
lret
xor
mov
mov
addl
out
inc
fisubl
mov
addr16
dec
test
jl
mov
andb
sub
rcr
add
pop
jl
fwait
mov
push
aaa
outsb
gs
and
nop
das
test
insl
mov
and
pop
and
lods
loopne
jno
mov
push
xchg
cmp
mov
inc
or
push
inc
dec
mov
rcrb
shrb
cli
lcall
pusha
ror
jge
inc
add
icebp
ja
leave
clc
aas
push
mov
test
andb
or
mov
xor
add
rclb
mov
jmp
push
ret
cltd
xchg
test
mov
dec
pop
mov
stos
shl
pop
cmp
loopne
insb
push
lcall
pushf
xchg
jmp
stc
jno
aaa
xor
into
stos
adc
mov
adc
or
shlb
hlt
stc
outsl
or
inc
sysexit
loop
repz
test
or
adc
outsl
cmp
stos
add
pushf
cld
jmp
fadd
loope
neg
jge
aad
add
cmp
inc
add
divl
add
add
adc
push
addb
mov
or
mov
loopne
shlb
jbe
loop
push
mov
add
inc
dec
jbe
test
loopne
cwtl
rol
fldcw
shlb
mov
sub
inc
dec
mov
xchg
sbb
inc
pusha
repz
and
push
cld
pushl
in
test
fwait
add
mov
sbb
gs
inc
addl
inc
dec
mov
mov
push
fwait
jnp
sub
subb
inc
sub
mov
outsl
xlat
jno
cmp
lock
lcall
push
adc
aaa
fwait
ret
sti
dec
xchg
call
pusha
test
and
orb
pusha
jae
leave
sub
rol
push
test
movsl
adc
loopne
rolb
xchg
fdivrl
aad
push
and
icebp
inc
iret
testl
and
cld
add
rolb
push
loope
jo
scas
sub
xchg
dec
fs
enter
negl
cmp
test
rcrb
loopne
add
sbbb
or
pop
jmp
add
jns
adc
inc
add
fisttps
rol
negb
int
sti
and
test
add
add
dec
enter
mov
sub
push
js
add
rcrb
int
dec
test
stos
add
lret
mov
sahf
cmp
sub
add
mov
bound
fs
pusha
jle
out
mov
sarb
out
popf
xor
das
cmp
rcl
push
addb
pop
jmp
xchg
add
lock
rol
xor
inc
xor
repz
icebp
mov
mov
adc
jb
or
mov
xchg
push
pop
xchg
movsl
loope
icebp
xchg
pop
sbb
and
sbb
ljmp
pusha
iret
lret
loopne
nop
jmp
loope
cli
dec
pop
xor
shl
imull
pusha
adc
hlt
adc
xchg
ret
jp
mov
sti
pop
aaa
ja
movsb
pusha
and
popl
lcall
add
mov
xchg
jecxz
div
xor
lahf
stc
ds
sbb
mov
xlat
inc
bound
clc
push
add
and
dec
jle
adc
and
push
lahf
lea
dec
sti
ljmp
and
mov
xchg
add
inc
mov
mov
adc
pusha
cmpb
cmp
scas
inc
loopne
fwait
jge
ret
test
inc
rorb
sbb
and
cmc
ret
ss
inc
xchg
loop
mov
rorl
loopne
push
inc
push
loop
xor
das
nop
xor
stos
jl
and
addb
push
sbb
ret
loop
stos
pushf
cmc
xor
cmp
sahf
fcoms
insb
mov
inc
and
xchg
imul
ljmp
cmp
jae
pop
mov
shll
test
pusha
orl
add
dec
xorl
and
in
fnstsw
mov
inc
push
dec
rcll
fildll
iret
push
rcl
clc
lea
xchg
cmp
inc
mov
mov
cmc
cltd
pop
xlat
jbe
push
add
loopne
xchg
dec
test
pop
mov
jl
adc
lret
lcall
icebp
call
pop
cld
ret
jae
addb
add
pusha
shlb
shlb
xchg
and
add
rorl
stos
test
andb
outsl
dec
shll
lahf
pop
xchg
xor
add
setnp
inc
xchg
lret
xchg
pop
popf
int
jg
mov
dec
add
rcrb
loopne
insl
jmp
repnz
pop
cmp
lods
xchg
or
mov
aas
jne
out
xor
flds
push
cmp
aad
das
or
and
shlb
dec
jae
cmc
popa
ss
enter
andb
addb
pusha
pop
in
call
adc
add
adc
jne
or
mov
cwtl
or
pusha
popf
add
ficompl
mov
iret
jae
ja
jp
pop
adc
cmpsb
and
add
mov
aaa
loope
or
loopne
popf
loopne
add
rcrb
and
loopne
sti
arpl
push
or
pusha
adcb
loope
pop
pop
mov
aam
mov
and
mov
pusha
mov
mov
pop
add
and
cmpsl
sub
addr16
push
pusha
fisubl
lods
inc
and
dec
fcompl
loop
addb
lods
mov
loopne
mov
jno
cmp
xchg
mov
push
inc
adc
test
jb
dec
adc
adc
add
call
push
pop
jmp
and
sub
mov
mov
mov
arpl
das
pop
sti
mov
inc
jle
out
push
mov
pusha
shll
inc
push
add
cli
mov
and
shr
dec
cmpsl
xor
jg
mov
xchg
lods
jo
and
rolb
mov
je
mov
or
or
dec
sbb
add
loopne
push
add
jge
add
add
fwait
js
imul
push
xchg
or
addb
mov
and
jae
mov
loopne
pop
in
fildl
pusha
loopne
add
fs
and
pusha
and
pop
out
rolb
cmpsl
imul
mov
sub
pusha
repnz
and
push
in
jnp
arpl
push
cmp
subl
addr16
incb
rorb
mov
andb
and
sbb
in
adc
sbb
add
xchg
lds
jbe
or
orb
and
push
mov
mov
add
adc
loop
push
lahf
pop
xchg
add
cs
les
and
out
dec
cld
pop
sbb
sub
loopne
mov
icebp
dec
jecxz
sub
xchg
out
or
and
into
xor
mov
loopne
and
mov
mov
add
pusha
xor
mov
pop
repnz
add
loopne
xchg
jae
je
int3
cmc
and
dec
xor
inc
mov
fucomp
mov
adc
insl
dec
hlt
pop
xchg
xor
rolb
enter
rclb
mov
rol
fistps
inc
cmp
outsl
lea
daa
into
push
int
inc
mov
inc
int3
pop
xchg
repnz
loope
dec
adc
ja
pusha
mov
pusha
mov
add
loopne
xor
sahf
cld
ja
pop
rolb
out
jne
sub
inc
dec
cmp
pusha
and
adc
mov
sub
insl
push
test
loopne
mov
stos
sub
add
lock
repnz
or
jmp
mov
fwait
cmpsl
fs
adc
push
adc
xchg
xchg
adc
or
pusha
fcomps
inc
pop
pop
in
imul
aam
arpl
andb
and
andb
or
sbb
into
sub
shlb
pusha
inc
push
xchg
rcrl
out
and
repnz
mov
dec
mov
pusha
rolb
icebp
lret
dec
and
sbb
mov
sbb
mov
and
loopne
shl
or
out
inc
out
test
inc
add
pusha
popa
cmp
insl
ljmp
jo
stc
repz
xchg
add
pusha
dec
jp
pop
ss
xor
test
sub
mov
test
mov
ret
jno
push
sahf
mov
fcoms
mov
pusha
into
in
icebp
dec
and
push
sar
add
sub
mov
sub
sbb
add
cmp
adc
cmp
subl
inc
mov
jns
cmp
mov
add
andb
pop
cmp
mov
xor
dec
hlt
mov
in
and
pop
inc
sti
mov
ret
dec
and
mov
loopne
mov
mov
add
shrb
roll
push
push
inc
add
sahf
or
mov
add
pusha
mov
pusha
xchg
mov
xchg
xchg
loopne
push
jmp
adc
cmp
sub
sbbb
push
jno
lds
ljmp
sahf
jge
or
outsb
notl
lret
icebp
inc
arpl
sbb
pop
mov
xchg
inc
mov
loopne
mov
dec
out
xchg
cmp
lods
rolb
js
mov
add
and
and
in
mov
rclb
push
and
push
shrb
mov
dec
mov
pop
fcomps
loop
or
ficomps
nop
or
and
in
mov
addb
mov
iret
or
popw
subl
mov
mov
sub
mov
rolb
fildll
movsl
add
push
add
xchg
push
inc
adcb
insb
push
popf
pop
lock
pop
jge
cmp
inc
pop
or
scas
push
addb
fidivrl
inc
pusha
jb
pop
jg
popa
jno
cmp
xchg
fldenv
sbb
add
pusha
push
jp
hlt
mov
outsl
and
and
ret
inc
mov
cmp
pusha
fcmovbe
loope
jg
inc
shlb
mov
sbb
xchg
add
mov
adc
inc
mov
add
divl
imul
mov
push
loopne
popa
xchg
add
adc
sbb
mov
ja
addb
xchg
loopne
shll
imull
inc
fsubrl
pusha
cmp
shlb
inc
add
jns
mov
cs
sub
cwtl
push
xor
pusha
and
cmp
loopne
and
inc
aad
pop
push
and
in
les
fs
pusha
fstl
mov
cmp
and
outsb
js
pusha
pusha
dec
and
mov
xchg
cmc
mov
add
or
mov
les
and
fstpl
jns
dec
dec
mov
xchg
dec
dec
data16
stc
call
and
and
rorb
add
mul
sbb
cltd
outsb
dec
mov
xlat
out
lods
and
pop
cmp
out
jae
jbe
push
sbb
sub
mov
loopne
inc
dec
push
inc
in
jnp
inc
mov
lods
and
scas
loopne
sbb
ds
pusha
out
dec
or
loopne
fcomps
mov
or
rcrb
shrb
xor
pop
lods
pusha
inc
dec
xchg
shlb
pop
push
dec
pop
cs
add
and
mov
xor
fisubrs
shlb
shl
in
cmpsb
inc
xorb
jns
inc
add
in
into
jmp
xor
xor
push
adc
loopne,pn
out
push
rcrb
xchg
or
inc
insl
jne
xlat
xchg
jns
ret
ja
dec
movsb
inc
pusha
lahf
outsl
add
inc
andb
aaa
jns
int
jp
das
imul
pop
aam
sbb
inc
add
push
scas
sti
fdivrs
pusha
rorb
adcb
xlat
mov
mov
pop
cmp
dec
push
mov
subb
jne
push
ss
shll
or
leave
sub
imul
int
lock
data16
pusha
cld
or
add
jnp
call
aam
loopne
mov
loopne
adc
cs
subb
inc
ljmp
test
pusha
test
aad
stc
js
sbb
shll
add
adc
inc
mov
xor
fsubrp
ss
sbb
lcall
mov
sahf
or
shlb
mov
fsub
mov
pusha
inc
cmpsb
mov
out
pusha
loopne
inc
shl
fmul
ljmp
fs
cld
dec
xor
cmpsb
mov
push
inc
ss
jle
in
sub
sbb
shlb
inc
loopne
iret
es
shlb
cli
test
xchg
jl
idiv
or
out
mov
jns
mov
pusha
ret
xchg
mov
mov
jmp
jns
loopne
pop
cltd
cmp
jb
loopne
ss
mov
add
and
or
and
add
push
cmp
movsb
mov
mov
fdivr
lea
adc
jp
add
pop
mov
mov
loop
fiaddl
push
outsb
dec
clc
pusha
xor
repz
sbb
dec
addb
sbb
shlb
mov
xchg
stos
sub
mov
into
mov
dec
add
int
shl
ret
cmp
mov
shlb
andl
repz
mov
sbb
cmp
enter
rclb
aad
mov
test
mov
inc
sbb
out
mov
xchg
and
orb
inc
mov
mov
outsl
pop
or
inc
in
add
loopne
push
lahf
fstpl
pusha
and
sti
clc
repnz
shlb
jo
inc
mov
bound
sbb
int3
cmp
dec
nop
dec
cmpsb
loopne
addr16
sub
pop
mov
shlb
inc
xorb
fwait
cwtl
nop
mov
jmp
sbb
add
xchg
cmpsb
add
or
pusha
rorl
jmp
xchg
mov
loopne
loopne
loop
mov
mov
rorl
xchg
pop
leave
pop
jecxz
sbb
aas
push
test
add
rolb
aas
pop
pop
loop
add
or
sub
mov
cmpb
aas
xchg
push
and
fldenv
and
and
cmc
shll
pop
add
loopne
push
mov
vprotb
xor
das
ror
push
mov
xchg
push
xchg
pop
inc
jnp
shll
pusha
adc
mov
mov
sbb
ds
pop
push
in
or
inc
push
outsl
xor
fsts
mov
and
dec
push
mov
cmovle
xor
mov
out
mov
push
xor
mov
out
adc
xchg
jp
jb
enter
mov
lahf
push
cld
fisttpl
xor
push
mov
mov
movsb
inc
loopne
outsb
inc
push
inc
fxch
imul
jg
inc
cmpsb
inc
loopne
xor
jp
insl
imul
sahf
xor
lret
pop
fsub
mov
pusha
mov
xchg
sub
rorb
sbb
and
es
inc
xchg
dec
xlat
in
insl
add
fwait
adc
outsb
add
and
jecxz
cmpsl
lcall
inc
xchg
ja
decb
jge
jl
lds
inc
sbb
pusha
xor
and
push
cmp
das
push
pusha
pusha
adc
inc
test
pusha
andb
shlb
xchg
dec
rorb
lret
je
punpckldq
add
fsubl
sbb
jmp
and
add
add
js
bound
jnp
lret
mov
loopne
inc
cmp
shr
dec
popf
fdivrl
jnp
ret
or
lret
addb
adc
jns
mov
jb
dec
inc
push
push
out
loopw
xchg
loopne
sbbl
cmp
sub
rolb
mov
popa
adc
adc
rolb
and
and
das
cwtl
mov
adcb
inc
mov
jg
fs
hlt
pop
mov
jne
les
insb
in
inc
daa
jl
out
inc
aas
jmp
mov
sarb
mov
ud1
stc
lcall
inc
push
aam
add
mov
lcall
xchg
xchg
push
loop
cmp
pusha
rcrb
hlt
inc
jbe
mov
mov
sub
push
mov
add
dec
aas
sti
cmc
test
cmc
frstor
loopne
xchg
xor
stos
shlb
mov
pusha
cmp
sub
out
pushf
loopne,pn
push
addl
cmp
fucomip
sarl
shr
pushf
sub
pusha
pushf
jae
loopne
mov
mov
loopne
pop
ja
inc
xor
aad
loopne
popf
roll
loopne
fisubs
and
mov
mov
push
adc
push
aad
cmp
fcoms
icebp
mov
pusha
orb
push
mov
call
xor
negl
clc
mov
sbb
jl
shlb
repz
xor
add
out
jnp
loopne
ljmp
mov
cmp
ret
jbe
and
jge
jno
jl
xor
aaa
and
dec
push
out
mov
and
ds
das
pop
xchg
clc
fnstcw
dec
inc
adc
xchg
mov
mov
ret
loopne
icebp
and
mov
int
movsb
shl
stos
push
cmp
andb
push
sub
add
fisubl
xchg
scas
pusha
rcl
loopne
sub
xor
loope
negb
jno
out
push
inc
stos
mov
rcl
lret
inc
aaa
dec
pop
fnstenv
mov
cwtl
cwtl
jb
pop
mov
pop
pop
sub
pusha
sarb
sub
mov
pusha
rolb
pusha
cli
push
push
add
add
sbbb
adc
mov
js
lds
mov
rolb
loopne
call
jmp
fisubl
add
loopne
aad
and
push
xchg
cltd
jno
scas
sub
and
es
shrb
andb
mov
lds
or
pop
clc
data16
push
and
pop
addb
and
inc
fcompl
mov
int3
movsb
and
aaa
fcom
push
and
mov
fdivrs
adc
adc
mov
in
test
inc
popf
push
imul
inc
cmp
jmp
gs
inc
icebp
movl
out
add
leave
mov
inc
sub
inc
nop
sub
mov
jnp
stos
and
ret
jg
pusha
orb
fildll
xor
xor
and
jge
xchg
dec
adc
js
subl
popa
cli
loope
movd
dec
ficoml
test
andb
daa
bound
test
mov
cmpsl
push
out
pop
sbb
sbb
lret
aas
mov
cmp
push
popf
pop
pop
xchg
mov
loopne
pusha
rclb
xor
xchg
frstor
pop
jle
or
or
mov
push
xchg
mov
pusha
call
and
loope
sub
inc
mov
and
idivb
out
into
pop
dec
hlt
or
shr
mov
cmc
pushf
xchg
cld
jnp
cmp
mov
and
dec
pop
stc
push
inc
cs
push
addb
ljmp
mov
inc
mov
lds
stos
cs
sub
loopne
outsl
popa
andb
fildl
shrl
repnz
mov
aaa
leave
lret
lods
addb
sub
rorb
test
push
lahf
xor
sub
dec
sarb
inc
shlb
add
mov
loopne
andb
int3
lods
rolb
je
aam
cmpsb
andb
icebp
pushf
sub
xorb
sub
and
push
adc
dec
loopne
fsubrs
push
cmp
std
rcrb
and
loopne
loope
hlt
pop
push
and
xchg
cmp
and
sbb
or
xlat
jnp
cltd
lcall
pusha
mov
jp
jl
jo
mov
jns
pop
in
adc
shr
adc
out
outsb
incl
and
or
ror
insl
xlat
sbb
ljmp
pusha
cmp
dec
push
jns
lret
stos
jecxz
andb
pusha
add
adc
ds
sbb
mov
add
out
and
sub
push
icebp
mov
addr16
add
das
add
and
pop
or
int
je
test
mov
int3
sbb
jle
inc
loopne
push
push
pop
xor
mov
pop
inc
bound
rcll
and
push
and
test
add
loope
pop
cmp
push
sbb
push
and
cmc
cmp
pusha
and
xor
xchg
shlb
addb
push
push
and
sarl
and
addb
leave
jmp
inc
inc
test
aas
mov
and
or
andb
push
jle
mov
add
inc
out
movsb
and
dec
rorl
cmp
aas
into
test
mov
inc
fildll
enter
insl
rcll
inc
addb
jp
enter
and
fs
out
sub
push
cmpsl
xlat
test
inc
out
movsl
hlt
imul
loopne
sub
popf
ret
dec
fs
jbe
fwait
jns
jo
or
push
jmp
mov
add
xor
mov
cmp
rol
fbld
push
mov
mov
rolb
jle
mov
mov
mov
mov
jmp
popa
hlt
jnp
sub
sbb
mov
cli
sub
inc
cmp
jg
mov
xor
jbe
out
dec
pop
mov
es
sar
add
shr
xchg
insb
xor
ret
jno
jg
lock
cmp
add
pusha
xchg
jae
sarb
mov
ss
pusha
inc
jne
push
xlat
pushf
outsb
test
cmpb
andb
push
imull
xchg
lahf
addl
add
call
jae
repnz
xor
mov
mov
mov
pushf
xor
pusha
push
add
mov
pop
jae
arpl
imulb
push
inc
and
add
fsubl
add
inc
fmuls
ret
jnp
xor
lds
mov
sbb
mov
loopne
inc
notb
imul
mov
add
and
add
fisttpll
cmpsb
loopne
decl
add
push
pusha
and
rep
pusha
inc
push
mov
in
xchg
pop
mov
inc
shl
pusha
inc
loope
push
mov
mov
mov
xor
dec
mov
xor
xor
xchg
mov
mov
and
push
cmpsb
inc
loopne
outsb
mov
scas
lods
loopne
rcrl
mov
mov
call
pusha
xor
or
add
inc
loopne
lret
jge
subl
popa
into
clc
fisttpll
rol
loopne
jbe
loope
jmp
cmp
or
mov
rorl
push
sbb
fs
popf
aad
or
loopne
leave
inc
lods
shlb
shl
sbb
and
jae
inc
repz
rorb
add
jno
add
aam
mov
ljmp
shlb
rol
test
jmp
leave
loop
andb
lds
pusha
and
xor
cmp
filds
sti
pop
xchg
shl
insl
mov
lret
sbb
cmpsb
loopne
and
and
fistl
loopne
jb
loop
rol
arpl
or
inc
or
xchg
mov
loopne
sbb
adc
sub
mov
sti
sub
aaa
repz
dec
clc
adc
mov
lock
or
mov
into
in
sub
xor
jno
mov
pop
mov
pushf
fwait
out
push
sahf
mov
add
loopne
dec
imul
dec
dec
je
in
dec
and
and
les
aam
xchg
das
lret
loop
and
mov
mov
add
loopne
cmp
add
add
and
jecxz
out
addb
jae
add
xor
lret
add
inc
add
add
popa
sti
test
repnz
daa
dec
test
pusha
and
outsl
andl
mov
fisttpl
xchg
lods
or
gs
inc
mov
adc
or
push
and
jbe
fsubrl
xchg
push
or
aas
or
loopne
xor
mov
add
xchg
int
daa
xchg
and
xchg
mov
and
repnz
idivb
jne
and
sbb
jo
movsb
pusha
mov
jge
cmp
dec
shll
sub
inc
jbe
and
mov
arpl
jbe
arpl
xor
push
jl
mov
shlb
call
pop
xor
loope
loopne
inc
dec
push
jo
push
and
fwait
es
pusha
jne
mov
mov
sbb
test
loopne
xor
mov
int3
or
inc
mov
mov
insb
cmpsb
mov
aad
hlt
repz
push
sub
and
pop
xchg
add
add
lea
sub
sti
in
nop
jae
adc
lahf
sbb
inc
sbb
pop
mov
cmp
nop
les
shl
ds
scas
xchg
dec
ds
addb
fistpl
sbb
int
jbe
scas
push
pop
sub
inc
adc
push
inc
jnp,pt
and
cmc
push
nop
jg
dec
push
adc
add
cmp
add
mov
sahf
bound
add
inc
lcall
shrb
mov
add
dec
mov
fwait
pop
xchg
mov
inc
outsl
and
loopne
fwait
insl
push
or
pusha
mov
imul
xchg
xchg
lea
pop
cmp
dec
xchg
dec
jmp
ljmp
sub
ret
stos
pusha
pusha
gs
loopne
or
add
in
in
lea
add
lock
test
lods
arpl
rorb
pop
mov
aas
nop
in
in
jg
test
rolb
pop
and
pop
sbb
das
cltd
call
adc
add
inc
les
pop
dec
xlat
idiv
pop
out
imul
xchg
lret
outsl
add
out
in
inc
nop
addb
inc
inc
mov
push
jg
lods
sub
pusha
stos
add
adc
cmpsb
mov
inc
aad
divl
movsl
push
inc
ljmp
cltd
fistl
fstpt
or
in
and
lods
rcll
cmpsl
push
clc
nop
mov
sahf
sub
push
lock
imul
sbb
sbb
popf
inc
and
rcrl
mov
orl
mov
or
loopne
mov
imul
mov
rcl
mov
adc
and
and
push
xchg
push
jg
loopne
aaa
sub
and
push
pusha
sar
push
scas
mov
rcrb
mov
mov
inc
jp
roll
and
data16
pusha
add
ja
mov
setne
mov
inc
mov
leave
jl
inc
xorb
pusha
xlat
sbb
sub
pusha
mov
shlb
inc
xchg
aad
add
repz
bound
iret
fstl
shr
xchg
sub
sbb
xor
add
adc
aad
inc
and
jnp
movl
or
subb
inc
xchg
push
mov
ds
pop
jae
mov
mov
or
inc
push
cmp
mov
xorl
mov
xor
fcomps
outsb
insl
dec
imul
lret
js
cltd
add
std
stos
mov
dec
and
incl
ja
int3
lret
test
scas
mov
and
add
fdivs
minps
lret
loopne
bound
pop
dec
cmp
and
cmp
and
out
sub
adc
pop
or
sarb
adc
mov
ja
xchg
repnz
jo
or
push
push
mov
jge
popa
dec
dec
push
inc
cmp
inc
ficomps
dec
pop
xor
mov
adc
test
aam
mov
and
pusha
inc
pop
aas
outsl
test
movsb
mov
scas
add
pop
flds
add
ffree
mov
xor
and
push
sub
dec
in
xchg
std
jns
rcll
lret
xchg
mov
push
xchg
sbb
pusha
mov
test
das
push
je
pop
imul
fs
xor
and
nop
repnz
icebp
add
test
sbbb
pop
out
addr16
and
mov
jno
loopne
mov
inc
jne
and
lods
xor
sbb
lods
and
push
pusha
inc
xlat
test
pusha
mov
xor
test
rcr
xlat
shl
cmpsb
rol
or
mov
xchg
out
jbe
mov
push
xor
push
or
jbe
jbe
lods
and
jns
addb
lret
dec
push
lahf
jnp
mov
in
xchg
cmpb
add
pop
imul
fsts
sbb
rcr
mov
lret
xorb
out
cmovb
jmp
xchg
sbb
dec
mov
add
ljmp
repnz
loopne
insb
cmp
rol
rol
repnz
idivb
mov
mov
mov
pusha
xorl
jmp
pop
add
add
orl
and
popf
fsubrp
and
pop
and
mov
movsl
out
sub
pusha
inc
mov
iret
incl
push
movsl
jmp
repnz
and
loopne
inc
lock
pushf
out
or
cmp
loopne
and
loopne
addl
sbb
add
rcl
imul
sub
aad
jl
jp
aad
inc
sub
pop
xchg
repnz
test
in
cmp
cmp
sbb
push
mov
mov
add
dec
xor
and
mov
push
stos
js
rolb
jne
imul
dec
dec
jns
mov
andb
jb
mov
sub
inc
repz
movsl
inc
push
sbb
mov
cmp
push
ljmp
fiaddl
mov
push
add
mov
cwtl
push
test
cmpb
insl
sti
enter
bound
addb
mov
cmpsb
and
aam
loopne
insb
jg
mov
ds
shlb
pop
scas
mov
push
mov
mov
andb
out
dec
jl
loopne
push
in
mov
mov
jmp
push
push
xchg
cmpsl
rclb
int
addr16
clc
cltd
mov
pusha
cmp
sub
out
loope
xchg
rolb
xchg
stos
pop
cld
lods
rolb
adc
loopne
stc
shr
dec
adc
pop
adc
test
dec
arpl
loopne
sbb
test
int3
mov
push
movsl
out
mov
jae
out
sarb
sti
jp
sub
inc
inc
sbb
loopne
cmp
or
gs
in
stos
mov
and
cmp
jb
mov
aaa
dec
ret
test
inc
sub
add
rclb
pop
iret
jo
enter
pop
rcrl
ror
add
mov
shl
sub
loopne
jge
mov
mov
xlat
adc
scas
fdivl
sub
pusha
add
pop
mov
repnz
sbb
cmpsb
mov
cli
mov
div
stos
mov
add
inc
in
add
hlt
outsl
lock
loopne
jbe
push
nop
test
arpl
adc
jnp
add
subb
inc
add
mov
xor
pop
jnp
sub
adc
rorl
pusha
and
aam
out
outsb
aas
iret
xor
jmp
inc
addb
xchg
and
lock
enter
push
and
pop
cmpsb
loopne
fadds
mov
loopne
xchg
xor
pop
leave
test
mov
mov
or
xorb
loopne
xor
sti
pop
mov
mov
and
and
out
dec
sbb
push
hlt
mov
xlat
push
pop
cmc
xchg
or
and
mov
inc
push
cmc
cmp
adc
sub
pusha
lods
and
loopne
pusha
sub
shrb
pusha
mov
shlb
push
lcall
sti
sbb
cmpsl
outsb
jae
push
out
mov
stos
inc
pusha
lcall
call
int
push
fmul
int3
inc
push
sar
adc
loopne
fsubrl
gs
test
outsb
or
and
fsubs
das
out
addb
mov
inc
dec
out
lret
or
loopne
test
loopne
mov
js
je
out
mov
cmpsb
loopne
adc
sti
inc
inc
sub
shl
sub
pop
int3
add
decl
push
popa
jmp
dec
pop
jo
in
cmc
and
add
push
mov
addb
dec
or
jg
andb
inc
sub
or
and
or
testb
inc
subb
dec
les
hlt
lcall
nop
inc
aaa
adc
inc
into
in
pop
dec
stos
push
sbb
orb
xor
cmp
outsb
inc
js
cmp
loopne,pn
stos
shlb
or
loopne
ficompl
ja
shlb
test
loope
inc
mov
and
loopne
add
mov
ss
add
push
mov
pusha
push
insl
and
xchg
in
cmp
jge
in
idivl
xchg
into
xchg
andb
push
cmp
add
sub
inc
cmp
mov
mov
adc
insb
addb
sub
and
xchg
call
lret
test
and
xchg
fs
xchg
shrl
mov
sbb
shlb
icebp
cmpsb
pusha
add
mov
jb
pusha
add
and
push
pop
mov
pusha
lret
shrb
pusha
addb
rclb
nop
jge
andb
or
inc
and
cli
adc
aas
dec
cmpsl
pop
fneni(8087
in
xchg
loopne
rol
mov
add
sbb
cwtl
out
les
dec
push
push
dec
cltd
int
and
push
cmp
or
mov
sarb
dec
pop
lods
add
sbb
mov
lods
and
outsl
lods
addb
cli
inc
filds
and
clc
mov
sbb
lea
push
pusha
jne
and
aad
cwtl
or
and
inc
test
sahf
xchg
outsl
pop
inc
add
mov
inc
cwtl
subl
jp
dec
add
add
adc
dec
andb
lahf
ja
inc
jne
call
and
inc
lret
xor
jmp
popf
fsubrs
shl
push
xlat
imul
push
movsb
loopne
pop
sub
xor
pop
cmpl
add
sbb
pusha
sar
push
add
addb
adc
xchg
xchg
xchg
rcr
add
mov
xorb
xchg
aaa
stc
add
addb
jnp
mov
pusha
inc
pop
adc
fisubl
aam
and
ja
popa
stos
mov
and
add
mov
loop
iret
xor
xchg
xchg
rclb
and
inc
add
pop
ljmp
adc
and
push
adc
dec
cmc
leave
insb
cmpsb
addb
fisubs
add
imul
add
cmp
pop
fsubl
inc
add
jmp
scas
lds
add
jmp
loopne
sub
jecxz
mov
inc
shlb
andb
cmpsl
and
pusha
jge
jnp
mov
loopne
adc
fldcw
sbb
pusha
inc
ss
add
shlb
sar
insb
mov
ljmp
cmp
arpl
mov
cmp
jmp
imul
lret
sbb
jnp
lds
and
test
mov
jg
dec
mov
mov
add
cltd
lahf
or
jmp
cmc
xor
jge
push
ret
cli
imul
mov
jbe
or
ja
mov
inc
and
xor
jmp
sub
popf
cwtl
inc
pop
push
jbe
rcrb
inc
add
mov
loopne
inc
jo
mov
mov
loop
gs
pop
loopne
lahf
out
pusha
loopne
shlb
stos
js
cli
mov
add
jnp
test
xor
mov
push
pusha
orb
add
mov
pusha
and
scas
mov
inc
and
popf
push
cmc
aam
gs
andb
je
cwtl
adc
sbb
aaa
insb
mov
xchg
andb
lea
lds
adc
and
ss
pop
inc
xlat
addr16
dec
cmc
push
fwait
sbb
in
std
fsubs
push
add
xorl
pop
outsl
jb
fimuls
add
ja
jb
jle
add
pop
in
fs
fildl
adc
mov
mov
loopne
ja
in
in
aaa
ds
mov
repnz
xor
sub
mov
dec
inc
loop
aas
adc
hlt
add
loopne
in
cmp
push
andb
pusha
mov
cmpb
inc
pop
adc
sbb
lds
mov
out
rorb
pusha
add
int3
out
sbb
rolb
lock
xchg
pusha
mov
mov
iret
hlt
aas
fcmovnbe
xor
xchg
inc
sbb
fcomi
fnsave
mov
outsl
std
call
inc
mov
lret
add
jp
sub
jo
cli
sub
paddw
dec
jno
or
outsb
das
push
aad
inc
punpcklbw
scas
inc
loopne
movsb
and
sbb
push
adc
jno
xor
adc
fdivl
addb
and
inc
pusha
mov
pop
lods
sub
mov
cmovae
or
enter
loope
lock
and
sub
sub
adc
jbe
call
push
inc
xchg
inc
arpl
mov
mov
imul
cmp
mov
sbb
and
addr16
adc
lods
push
into
lcall
pusha
ret
sub
mov
imul
out
arpl
pop
das
pop
nop
dec
bound
jl
sbb
cmp
jg
mov
mov
add
bound
add
mov
inc
add
lcall
test
shl
mov
ss
mov
mov
loope
ljmp
cmp
add
inc
fildll
mov
cli
ror
std
xlat
pop
mov
or
stc
outsb
cltd
add
out
aas
sbb
lcall
jo
mov
loopne
pusha
add
sub
mov
rorb
and
mov
dec
xor
jp
cmc
dec
jb
and
fists
cli
andb
and
repz
mov
mov
pop
cwtl
sub
shlb
sub
out
inc
fstl
or
shl
mov
imul
jo
mov
fstl
js
test
subb
lods
and
clc
inc
sti
pop
in
xchg
sub
add
or
mov
cmp
pop
cmp
sub
jecxz
cmc
mov
addb
dec
push
push
loop
into
sahf
negb
adc
aas
mov
jmp
out
out
inc
enter
and
cmpsl
push
cmp
xchg
jae,pt
cmp
pop
or
call
je
dec
les
inc
adc
jb
lret
inc
popaw
push
push
fstl
aam
mov
in
pusha
in
lret
inc
inc
mov
addb
rolb
jae
add
xor
and
adc
and
and
in
dec
cltd
and
inc
and
mov
cmp
push
popf
cmp
xor
jmp
rolb
adc
mov
mov
je
in
mov
ds
pusha
inc
in
xor
rcrl
inc
cmp
sti
pop
cmp
ljmp
sub
rclb
sub
and
push
leave
movsl
fnsave
xor
cmp
or
pusha
push
lahf
lahf
mov
rolb
sbb
and
cmp
test
mov
loope
fldcw
rol
adc
inc
rorb
mov
insb
filds
lods
test
add
push
andb
inc
fiaddl
dec
in
loop
xchg
addb
or
mov
add
aad
jmp
icebp
add
arpl
pop
test
jbe
lgs
loopne
cmp
and
xchg
mov
xor
bound
xorb
mov
rolb
jb
loopne
jmp
loopne
and
loopne
sbb
fistps
inc
js
mov
and
cmc
lods
loopne
sbb
incb
loopne
pop
arpl
leave
inc
inc
xor
bound
popl
cmp
imul
mov
pop
iret
mov
push
dec
icebp
mov
inc
add
cli
mov
insl
sbb
cmc
test
mov
clc
jmp
pop
inc
sub
mov
mov
imul
xchg
lcall
test
jg
out
loopne
jp
cmp
cmp
shll
add
mov
in
mov
jecxz
xchg
je
sub
inc
add
sub
test
pusha
and
add
pop
dec
xor
dec
ret
adc
inc
in
int
das
fiaddl
inc
add
xchg
xor
mov
mov
sbb
dec
pop
rcll
and
xchg
das
mov
lret
jge
fidivs
divl
test
sti
insb
pusha
adc
shlb
jp
outsb
leave
add
loopne
imul
mov
mov
repnz
push
ja
imul
sub
sarb
and
inc
push
icebp
pop
push
jmp
xor
and
inc
ret
mov
loopne
rolb
pushf
ja
pusha
pusha
xor
cmp
es
pusha
push
mov
test
or
mov
test
mov
mov
lret
repnz
inc
push
or
jmp
inc
sbbb
pop
mov
mov
jecxz
mov
cmp
pop
inc
jb
test
pushf
ds
cmp
pusha
nop
fists
xorl
ja
lods
mov
xchg
mov
dec
xchg
inc
dec
and
and
mov
adc
jno
or
and
mov
inc
sahf
dec
sub
pusha
and
add
push
inc
cmp
incl
mov
out
notl
test
pop
test
addb
mov
stc
xor
call
fldcw
xor
das
icebp
and
flds
cmpsb
and
mov
stos
shl
orl
fwait
or
inc
subb
inc
loop
mov
rclb
test
push
jb
xor
inc
jge
andb
and
cmp
lret
mov
add
cmpsb
rolb
je
adc
insb
adc
mov
or
fwait
push
mov
ss
dec
sbb
xchg
fildll
and
mov
dec
xlat
push
das
jmp
mov
inc
or
addb
or
mov
aam
movsl
lret
popf
or
pop
add
loopne
ficoml
inc
cmc
outsb
outsl
mov
add
repnz
out
fisttpl
xchg
sarb
rorl
mov
jb
sub
or
inc
mov
sbb
jg
stc
ss
adc
mov
filds
mov
ret
addb
mov
scas
inc
shlb
xchg
inc
sar
dec
or
aaa
iret
mov
xchg
and
rol
sub
ds
mov
and
or
jno
xchg
mov
movsl
enter
in
mov
sbbb
rcll
dec
shrl
inc
pusha
inc
xor
pop
or
test
mov
out
loopne
pop
inc
mov
orb
and
pusha
iret
lret
rcrl
sub
dec
stc
insl
add
mov
mov
inc
mov
add
mov
jne
arpl
addb
xchg
lret
sbb
daa
sbb
shll
push
push
pusha
inc
int
push
mov
and
in
fmull
loopne
clc
pop
in
icebp
mov
mov
addb
out
mov
in
jns
stc
adc
or
inc
in
movsb
rol
lret
cmpsb
loopne
daa
mov
add
inc
mov
insl
add
aad
fwait
cmp
sbb
pop
sbb
inc
shlb
pusha
aam
cmpsl
std
jecxz
mov
mov
imull
rclb
int
xchg
cmp
lret
jge
cmpsl
lods
add
lahf
sbb
sbb
dec
ret
jecxz
jmp
sub
orb
inc
loopne
notl
call
addb
inc
icebp
shr
add
inc
cwtl
enter
andb
cmp
std
push
and
loopne
addr16
outsb
ja
out
mov
push
xor
cmp
fxch
jg
pusha
shlb
sub
gs
mov
clc
mov
jmp
push
mov
sti
pop
test
bound
and
mov
xor
shll
pusha
rclb
incb
mov
pop
mov
loopne
adc
outsb
mov
mov
and
xor
stos
cmp
loopne
mov
aam
repnz
push
adc
addb
xor
call
mov
adc
pusha
jne
test
pushw
push
cmp
inc
adc
enter
add
sub
ljmp
loopne
int3
ja
xor
fdivs
shlb
push
das
dec
inc
addl
out
push
inc
insl
fmull
std
sub
pusha
bound
jbe
sbb
mov
mov
adc
inc
ret
rorb
loopne
cld
pushf
aad
jnp
cmp
je
call
xchg
xor
mov
jle
xchg
daa
clc
decl
leave
test
ret
mov
cltd
pushf
lcall
jp
xchg
rcrb
sub
sarb
loopne
cmp
pusha
inc
fcmovne
pushf
adc
or
pop
movsb
andb
adc
mov
rclb
xor
out
xchg
and
add
jo
aaa
test
jge
fbld
pusha
test
jmp
jbe
push
clc
pop
push
rcll
andb
sub
js
pusha
addb
sbb
out
lock
add
sub
leave
sbb
jge
aam
pop
jno
sbb
loop
push
xchg
pop
lods
mov
mov
jae
shrb
xchg
jae
lock
add
test
inc
pushf
jnp
mov
jle
andb
adc
inc
mov
add
imul
inc
lods
inc
mov
addl
pop
daa
pop
iret
jno
sbb
xor
call
and
ja
cmp
int
inc
inc
lods
andb
leave
mov
rorl
inc
pop
jecxz
add
jg
pop
sbb
and
mov
aas
cmp
das
inc
sub
loopne
aad
mov
test
sbbb
cmc
xlat
ror
int
sub
jo
gs
aaa
sbb
loopne
cltd
add
andb
mov
std
stos
add
shr
movsl
dec
test
addb
xchg
ljmp
cmp
lret
xchg
xchg
inc
and
sarl
negl
xor
mov
and
pop
pop
adc
sahf
sbb
dec
mov
inc
push
mov
cmp
movsb
andb
pushf
xorl
pusha
aas
add
rolb
xchg
andb
add
and
ss
inc
jp
pusha
shlb
arpl
mov
pusha
adc
js
insl
int
jmp
into
jg
mov
movsb
andb
mov
loopne
jmp
inc
shlb
sarb
adc
sbbb
test
rcrb
in
cwtl
mov
mov
imul
xlat
mov
pop
scas
shlb
and
and
and
loopne
adc
es
rolb
pusha
and
aas
stos
and
mov
js
shlb
and
stc
pop
dec
ljmp
mov
inc
jge,pt
imul
es
pusha
lods
loopne
fdivl
inc
cmpsl
or
mov
addb
scas
xchg
lods
and
jns
push
dec
test
test
add
cmc
adc
add
ss
rcll
pop
inc
fistl
mov
dec
xor
push
imul
inc
xorb
cs
rorl
jbe
add
stos
mov
mov
clc
xor
je
sub
inc
popa
xor
add
cmc
and
mov
cmpb
xchg
and
inc
pusha
rorl
push
adc
je
cmpsl
js
sub
addb
int3
insl
or
push
sbb
jp
bound
loopne
decl
int
mov
addr16
xor
sar
sub
imul
call
loopne
sbb
mov
xor
mov
jmp
addr16
fcoml
lea
mov
push
jae
add
dec
jp
pusha
loopne
inc
pusha
xlat
leave
mov
add
and
shrb
es
shlb
adc
push
bound
mov
add
sbb
jl
xor
data16
jno
sbb
inc
rolb
cmp
cmc
cmpsl
incl
xchg
dec
mov
mov
add
add
nop
and
insl
mov
repz
mov
addr16
pusha
mov
addr16
sub
pop
xchg
mov
mov
sbb
notb
xor
add
add
fildl
and
aas
sub
lret
add
xchg
js
add
and
clc
jbe
ficoms
and
pop
cmc
sahf
call
and
loopne
int3
test
ror
lahf
jecxz
push
jno,pt
jno
cmc
cmp
cmp
adc
mov
ja
fucom
push
inc
iret
cmp
mov
pusha
div
in
add
cmp
sahf
test
xchg
pop
mov
cmpsl
loop
rolb
jle
scas
pusha
pusha
inc
insb
mov
jge
mov
add
movsb
addb
rorb
loopne
xor
pop
sbb
lds
and
fnsave
mov
out
movsl
lods
and
mov
test
lcall
data16
sbb
mov
cmp
mov
andb
mov
pop
popa
inc
ds
and
subl
and
loopne
mov
cmc
test
adcb
test
dec
pop
mov
sbb
test
inc
loope
xor
inc
mov
or
addr16
push
mov
dec
and
pop
or
push
pusha
pusha
rorb
or
pusha
jo
clc
outsl
mov
addb
test
cwtl
jmp
mov
inc
lcall
inc
xchg
mov
lds
mov
scas
mov
mov
xchg
push
cmpsb
loopne
lahf
ffree
cmp
cli
shrl
or
push
xchg
test
add
sbb
mov
and
cwtl
add
xchg
imul
adc
loopne
test
shrb
xchg
adc
sbb
rcr
xlat
scas
pusha
mov
push
leave
in
and
pop
sbb
dec
stos
shl
in
sub
inc
inc
fcomps
xor
xchg
and
shrb
xchg
jge
pop
aas
ret
es
shr
sub
mov
cmp
or
inc
ljmp
inc
std
adc
inc
ret
rol
and
mov
pop
fcoms
imul
lret
push
je
mov
ss
lock
mov
mov
add
mov
in
mov
enter
shl
inc
pusha
mov
test
sbbb
lcall
movsb
rol
xchg
cmpsl
inc
loope
je
jp
rclb
mov
sarb
add
sub
ljmp
icebp
out
out
jbe
mov
cmp
les
sbb
data16
push
fdivrl
stc
or
xor
shrb
addb
add
mov
pusha
in
push
jp
scas
loopne
cmpsl
dec
pop
fstl
repz
pop
aas
xchg
pop
fldl2t
test
lahf
and
jb
lret
mov
or
xorb
push
pusha
inc
inc
shr
outsl
hlt
sbb
popf
mov
pushf
aad
add
loopne
cmp
sar
adc
std
and
xchg
notb
inc
or
andb
rcll
subb
gs
xor
stc
dec
test
sbbb
stc
adc
and
call
add
inc
jno
stos
push
stos
shlb
sbb
sahf
insb
push
in
mov
fistpl
add
loopne
fdivrl
mov
jb
sbb
pop
pusha
mov
insl
push
popa
xchg
add
mov
xchg
cmp
or
mov
imul
frstor
lcall
dec
cmp
pop
push
jle
pop
xchg
out
add
jnp
addb
push
mov
push
push
daa
gs
mov
jnp
mov
andb
dec
pushf
loope
fwait
popf
movsl
jge
fdivrl
xchg
rcr
mov
push
mov
roll
inc
bound
test
sti
mov
jno
addr16
mov
out
adc
fldl
gs
xor
aam
int
movsb
shlb
push
loopne
and
outsl
sub
mov
shlb
mov
addb
in
sarb
lret
pop
dec
rolb
fcom
pop
scas
movsb
shlb
lods
or
andb
clc
inc
jne
or
mov
loopne
andb
loopne
cmpsb
add
lahf
cld
mov
xor
sub
orb
adc
in
mov
fisttpll
shrl
pop
jg
cld
inc
mov
push
movsl
into
loope
inc
movsl
into
data16
jmp
jmp
mov
push
aaa
sbb
xchg
add
clc
insl
mov
adc
or
mov
fwait
adc
pop
add
inc
in
outsl
ja
and
xor
mov
subb
mov
push
loopne
jb
sub
xor
inc
lcall
cmp
leave
or
out
mov
rolb
out
repz
cmc
push
mov
cmp
leave
xor
inc
jae
outsl
mov
mov
lea
lahf
out
dec
xchg
out
sbb
jle
in
push
and
fwait
adc
adc
pop
mov
cmp
mov
fs
cmpsb
inc
shrb
test
inc
push
jmp
test
jo
fbstp
cmp
sub
les
int3
ja
fdivs
leave
aam
test
pusha
jbe
rcrl
fwait
scas
inc
add
andb
out
jmp
pop
cmp
jle
sarb
cltd
mov
pop
sahf
std
repz
mov
inc
and
loopne
pushf
xlat
pop
xchg
cmp
loopne
lock
push
add
loopne
mov
rolb
mov
lods
addb
std
sub
addb
lock
add
adc
cmpsl
push
jne
cmp
pusha
loopne
cmc
incb
and
and
add
shll
in
mov
and
loopne
mov
ret
jle
negl
lcall
ss
divb
call
orb
pop
jmp
inc
inc
lret
out
xchg
loop
adc
mov
cmp
xorl
or
add
sub
imul
addr16
lea
inc
add
movsl
pushf
movsb
pusha
add
addr16
jl
mov
sbb
jae
mov
fnstsw
rolb
and
out
ja
loop
fdiv
mov
ja
mov
fildll
add
push
flds
mov
and
repnz
jno
or
mov
testl
lods
or
cmc
push
push
mov
and
mov
loopne
divl
clc
xchg
cmpb
push
mov
jne
pop
mov
xchg
fs
arpl
and
shlb
sub
add
stos
push
mov
and
add
int
pop
jle
pop
call
sub
adc
lcall
sbb
insb
out
notl
pusha
mov
mov
cmp
fnsave
add
out
mov
pop
add
pop
xor
cmp
lods
and
orb
pop
xchg
pusha
fwait
out
cmpsl
test
or
adc
pop
dec
or
add
jae
test
xorb
mov
subl
repnz
int3
ror
cmp
cltd
inc
out
repnz
je
popa
out
jno
lcall
ds
inc
lcall
push
pop
xor
lea
or
cmpb
inc
and
popf
sti
loop
lock
imul
std
inc
cwtl
roll
addr16
pushf
adc
sub
rcr
fsubr
jne
sbb
inc
push
sub
sbb
dec
jl
cmc
popa
inc
out
xlat
loope
mov
mov
xchg
push
daa
inc
mov
inc
pusha
mov
andl
mov
dec
hlt
jl
in
jge
icebp
mov
inc
shrb
es
movsb
add
jb
andb
or
fs
sub
inc
jle
mov
mov
nop
stc
popf
mov
mov
or
rol
add
and
sbb
sbb
xchg
mov
xor
int
loope
loopne
fnstenv
lea
inc
mov
mov
lea
mov
jecxz
lea
xchg
mov
loop
icebp
cmc
xor
loopne
testb
sub
mov
mov
shlb
addb
orb
mov
xor
adc
fcomps
push
stc
cmp
mov
loopne
sbb
rcrw
xchg
movsl
iret
sbb
mov
test
jnp
gs
sub
pop
cmp
scas
mov
push
sbb
loopne
mov
and
push
fldcw
cltd
and
or
data16
dec
xchg
ss
ss
aaa
cmp
cmp
mov
testb
je
punpckhwd
popa
or
loopne
sbb
call
cmp
push
insl
cs
and
dec
jp
je
mov
cmp
and
fcompl
mov
pusha
xorb
push
nop
mov
inc
and
and
sbb
xchg
hlt
cmp
xchg
or
ficoml
cmc
pusha
iret
push
jp
jge
cmp
js
scas
xchg
inc
xchg
mov
push
sub
inc
icebp
insb
lcall
fbstp
aad
mov
outsl
xchg
fisubl
mov
dec
addb
out
xor
pusha
mov
adc
sti
push
lahf
and
and
pop
mov
mov
add
cli
dec
sub
rolb
js
out
inc
addb
movsb
inc
addb
jne
lret
lods
mov
mov
sbb
lock
loopne
addr16
jge
and
adc
mov
mov
cmp
outsl
ss
push
in
sti
push
ret
push
decb
inc
loopne
xor
rorb
add
adc
or
push
adc
pusha
sar
call
sar
aad
addb
jg
scas
fistl
push
pop
pop
int
adc
inc
sahf
pop
sbb
sbb
fmuls
mov
andl
cmp
pusha
iret
mov
inc
pop
mov
sub
inc
jle
loop
add
cmp
test
loopne
mov
xchg
xchg
addb
push
push
dec
js
cmp
jle
add
cmp
pop
neg
xchg
loopne
push
cwtl
cmp
add
inc
fisttpll
adc
jae
test
pop
and
cltd
adc
pop
ds
rcrb
push
insl
mov
andb
lods
mov
scas
jl
lods
adc
inc
stc
scas
stos
cli
or
ljmp
and
jecxz
mov
fwait
mov
jge
test
scas
pop
and
jns
in
bound
push
mov
add
in
fdiv
out
xor
insb
push
mov
sbb
fs
or
insl
fnstsw
inc
outsl
andb
mov
jbe
mov
fistl
stos
pusha
and
andb
mov
mov
imul
xchg
loopne
mov
popf
sbb
pushf
sub
xchg
inc
xor
dec
mov
mov
repz
and
xorb
sti
pop
pop
add
pop
or
inc
psraw
push
movsb
shlb
jmp
lds
addb
inc
add
adc
pusha
and
ljmp
add
xor
mov
xchg
cmp
or
loopne
sbb
cwtl
lret
dec
mov
add
pop
mov
rcrb
clc
mov
inc
lret
pusha
rcll
adc
loopne
andb
cmc
sub
mov
jo
cmpsb
rol
dec
roll
pusha
and
jg
insb
movsb
and
sub
and
addb
and
jge
pop
cld
stc
ss
and
jnp
ljmp
lods
dec
fucomp
sbb
and
add
bound
jns
mov
and
xchg
sbb
adc
je
pusha
and
stos
shlb
or
dec
xor
adc
push
test
arpl
pop
jae
add
push
pusha
loopne
and
xor
jl
pusha
loopne
mov
rol
pushf
mov
mov
xchg
popf
jle
lds
mov
lcall
sbb
or
adc
push
jmp
test
orb
cmp
ds
pop
movsl
stos
fwait
and
push
lods
addb
shlb
inc
and
cld
rep
mov
and
jae
sub
and
mov
pusha
xchg
stc
push
gs
les
jmp
imul
dec
lcall
inc
push
mov
stos
test
scas
mov
and
scas
pop
push
andb
pusha
mov
shl
mov
cmpsl
inc
incb
jmp
and
add
stos
and
xchg
lahf
mov
mov
xchg
push
dec
addb
inc
add
push
push
sbb
inc
adc
loope
add
adc
mov
shrb
inc
add
mov
inc
xor
rcll
andb
lea
mov
jmp
addb
mov
add
inc
ja
ds
arpl
jns
inc
cmp
add
mov
pushf
cld
xor
jo
add
andb
mov
add
xor
push
rolb
mov
sti
loope
rcrl
and
mov
rorl
pop
push
repnz
imul
outsb
adc
lock
aaa
and
aas
pop
clc
cwtl
mov
movsl
pop
mov
inc
or
add
inc
data16
orb
mov
in
int
fidivl
inc
sbb
xchg
cld
add
sub
mov
dec
test
inc
cmp
movsb
and
into
and
rcrb
popf
hlt
insb
shrl
inc
and
and
mov
cmc
stos
jg
das
jo
lret
lock
repnz
sbb
xchg
test
inc
lods
pop
aad
mov
push
add
scas
andb
pop
or
loopne
ret
bound
add
add
add
cmp
dec
mov
test
add
loopne
insl
cmp
push
xchg
mov
inc
loop
lock
and
cltd
adc
add
aad
stos
inc
inc
int3
mov
jge
mov
in
popa
mov
popa
lret
adc
leave
clc
cmpl
and
movsb
inc
and
mov
and
push
mov
pop
lods
frstor
xlat
imul
xchg
cmp
pop
es
rcr
rcl
xchg
sub
stos
push
rolb
addr16
mov
ror
stc
xchg
cli
push
adc
rep
pop
jl
sti
pushf
and
add
addb
push
scas
shlb
je
fisubrl
pusha
and
dec
loope
or
pusha
cld
mov
or
fdivrs
adc
repz
dec
inc
outsb
mov
movsl
and
andb
adc
push
rol
adc
addb
lock
fdivr
lea
jp
cld
sarl
cmpsl
dec
sbb
jl
aam
fwait
lcall
addb
rorl
mov
inc
inc
jb
or
inc
lea
push
jmp
pusha
loopne
outsb
push
loop
out
mov
pop
fidivs
cwtl
inc
aad
jge
and
or
es
loopne
sub
cmpb
mov
or
mov
dec
dec
pop
cmp
das
movsb
loopne
mov
jge
sbb
daa
sbb
pusha
cli
xor
mov
fstpl
enter
fnstsw
and
inc
repnz
add
dec
test
push
lods
pushf
outsb
rol
pop
imul
test
je
rolb
and
jmp
loopne
cli
cmpsb
pusha
shr
mov
lods
pusha
sbbb
aas
out
insb
mov
add
mov
lock
shlb
aas
and
shlb
shlb
cmp
sub
cltd
xor
popa
xchg
or
and
mov
cmp
mov
das
das
inc
mov
mov
mov
dec
and
inc
mov
pusha
movsb
mov
cmpsl
mov
mov
mov
loopne
xchg
dec
push
rolb
add
test
es
mov
sbb
insl
nop
fcmovu
sub
push
push
push
or
pop
push
mov
jecxz
incb
fbstp
mov
mov
push
fistpl
pop
je
jl
mov
mov
fwait
add
pusha
notb
mov
jb
dec
fldenv
andb
push
add
pusha
add
ret
fstl
push
shl
je
sub
and
mov
int3
pop
inc
pop
mov
scas
and
lahf
ss
pop
pushf
sbb
dec
int3
imul
push
into
out
mov
push
cmp
aam
cmp
ret
fs
adc
xchg
or
or
aad
jle
imul
in
inc
sbb
js
dec
add
adc
cwtl
cld
dec
icebp
mov
xor
jl
fldenv
std
rolb
incb
inc
loope
xchg
lods
mov
push
inc
out
mov
xchg
jge
std
dec
sbb
push
aam
inc
pusha
push
test
jno
mov
fldcw
mov
mov
into
mov
pusha
pop
jb
push
mov
imul
add
adc
cmpb
mov
loopne
push
addb
loopne
push
ja
mov
mov
loopne
aaa
imul
xchg
test
cmc
sub
loopne
es
pushf
inc
push
xchg
cmc
enter
je
dec
pop
pop
xchg
lcall
inc
loopne
add
inc
push
lahf
bound
mov
addb
mov
and
sti
sbb
jmp
ja
out
rorl
mov
and
add
mov
div
outsw
lret
roll
dec
inc
aaa
inc
idivb
ret
bound
out
nop
jle
adc
mov
sbb
fiaddl
out
loop
adc
mov
sahf
push
in
jae
shlb
add
gs
adc
rcrl
repnz
cmp
loopne
sbb
out
and
xor
push
mov
push
xor
movsl
xchg
dec
adc
inc
pop
std
mov
fsubr
fidivrl
inc
shrb
mov
pop
das
or
andb
jmp
repz
inc
add
std
rcrl
loope
jl
jg
jne
lret
ficompl
push
pop
aam
pusha
sarb
das
std
push
fldl
inc
cmpsb
inc
add
fisttps
jnp
xchg
sub
mov
push
bound
add
movsl
sahf
sti
xchg
dec
ds
mov
lret
stos
and
jp
xchg
cmpsl
or
and
xor
pusha
dec
push
dec
fnstenv
xor
mov
mov
xor
lcall
fmull
pusha
add
sarb
push
add
das
mov
xor
adc
xchg
mov
addb
fsts
inc
les
jge
cld
in
loop
add
fidivrl
lea
cltd
inc
sarl
pop
lock
adc
test
add
mov
inc
test
mov
imul
push
push
sahf
test
or
jae
dec
inc
jmp
test
test
loopne
lods
pusha
and
push
xor
and
rclb
in
lods
add
gs
idivl
and
mov
aad
negl
pop
inc
fs
mov
or
push
xor
ja
adc
loopne
fsubrp
int
dec
out
pop
and
jl
sbb
inc
rcl
lret
and
pusha
jecxz
push
sarb
sti
test
xor
mov
and
dec
xor
divl
jbe
mov
andb
push
xor
mov
loopne
ret
ds
in
jbe
lods
loopne
dec
addr16
jnp
pop
mov
negl
repz
clc
and
das
pop
rorb
and
jo
pushf
fidivrl
call
xchg
sbb
std
mov
and
fs
repnz
in
ret
test
mov
shl
mov
rolb
jg
rol
mov
inc
testb
jne
fmuls
orb
lds
in
xchg
jg
addb
and
and
clc
outsb
aam
adc
add
inc
loop
stos
cmpsl
sub
sub
andb
cmp
loopne
xchg
cmp
pushf
push
loope
add
add
add
inc
orb
inc
in
gs
push
mov
sbb
mov
xchg
xor
xor
adc
dec
mov
or
sub
shlb
xbegin
sbb
jge
aam
ljmp
test
xor
outsl
jbe
pop
mov
and
mov
or
add
jne
bound
lret
pop
mov
mov
fidivs
jne
dec
mov
inc
dec
ficompl
cmp
dec
adc
aaa
andl
pop
mov
andb
rorb
jecxz
daa
push
xchg
in
push
sbb
and
shr
rcl
add
pop
jae
xchg
fidivl
je
jp
jl
andb
mov
cmp
loopne
insl
jb
cmp
dec
jb
cltd
and
cli
dec
lcall
sub
mov
fst
nop
mov
mov
or
pusha
pusha
inc
ret
stos
mov
pop
test
mov
insb
test
ja
out
sub
mov
loop
mov
xchg
jp
fxch
and
pusha
shrl
insb
aad
dec
pop
je
test
inc
inc
rorb
cltd
mov
rolb
popa
mov
sarb
jbe
pushf
and
xchg
lret
jnp
push
or
xor
jge
cmp
das
pushf
lods
fisubl
loopne
add
and
mov
fisubl
arpl
repz
std
addb
or
aad
pushf
and
in
mov
lods
out
jnp
or
mov
pushf
pop
mov
add
pusha
shlb
cmpsb
pusha
add
pushf
dec
pop
sti
adc
loopne
aad
shlb
sbb
aas
or
outsb
test
ret
sbb
jne
push
je
outsl
xchg
or
loopne
hlt
add
dec
rorl
cmp
add
push
inc
shlb
mov
int
cld
addl
jb
loopne
and
loopne
ja
pop
hlt
jmp
rcrl
xor
dec
adc
cs
and
mov
pop
cmp
sub
lret
mov
add
inc
nop
sbb
test
sbb
add
lock
add
movsb
addb
data16
xor
fs
mov
add
enter
or
shlb
fdiv
sahf
jno
loop
jne
xor
inc
cmp
ljmp
sti
push
dec
shrl
sbb
insl
inc
adc
xchg
fidivl
outsl
mov
and
mov
dec
mov
mov
test
pop
cwtl
mov
and
mov
pop
loope
outsl
mov
inc
push
pop
test
std
dec
sarl
and
inc
outsb
jbe
cmp
loopne
xor
jecxz
mov
enter
nop
xchg
in
adc
add
addpd
and
xchg
aaa
sbb
sbb
push
mov
push
shlb
xorl
mov
mov
add
mov
hlt
push
dec
iret
lahf
nop
cmp
and
mov
leave
roll
add
mov
lahf
sbb
loopne
call
loopne
lds
popa
fcompl
inc
int3
inc
imul
stos
cmp
inc
inc
inc
xchg
push
pop
cmp
xchg
aam
pop
out
mov
std
int
outsl
ljmp
mov
xorb
test
inc
push
lahf
or
push
call
loopne
nop
outsl
add
iret
dec
cmp
jle
and
in
notl
lret
popf
push
add
sti
add
loopne
xchg
pop
add
loopne
stos
loopne,pn
xlat
out
jle
mov
jne
push
loopne
sub
mov
jp
xchg
cli
jp
icebp
or
movsl
aam
in
push
data16
mov
jl
sub
add
mov
cli
inc
and
repz
pusha
mov
add
mov
xchg
xlat
out
fs
sbb
mov
add
movsb
and
pop
paddw
adc
inc
lock
clc
dec
pop
xchg
cltd
movl
mov
jns
cmp
jle
out
mov
pusha
and
repnz
xor
cmc
lock
hlt
jns
xchg
and
rolb
add
ds
cmpsl
pusha
iret
lcall
and
test
loopne
cs
orb
movl
sarb
shrl
and
ljmp
cld
popf
shll
pusha
loopne
pusha
test
inc
jecxz
mov
dec
push
lcall
cmp
xlat
cmc
xor
lea
xchg
rcl
into
leave
ss
call
dec
js
pusha
mov
add
test
into
lds
imul
inc
cmp
adc
addb
xchg
fs
clc
jp
pop
cmp
inc
jg
rolb
dec
xor
mov
sbb
cmc
cltd
rolb
out
push
mov
leave
sti
dec
xor
and
xchg
and
outsl
adc
ja
mov
and
jmp
sbb
and
pop
and
pop
rcrl
sbbl
xchg
pushf
aaa
lea
subl
rclb
mov
jg
lret
pop
test
inc
mov
in
adc
or
shrb
mov
in
push
decl
inc
xchg
inc
clc
xor
cli
xchg
and
stos
mov
adc
pusha
addb
xchg
data16
iret
jnp
loope
pop
xchg
gs
pusha
clc
or
xchg
add
push
ds
sbb
rorb
nop
sbb
add
imul
inc
imul
and
js
aas
add
mov
pusha
stos
inc
pusha
lcall
xchg
xchg
jo
hlt
jecxz
ss
and
jns
inc
repz
xor
inc
add
cmp
stos
inc
cmpb
and
cmp
push
inc
or
inc
shr
test
adcb
sbb
dec
push
sar
test
xchg
xchg
aas
mov
mov
pusha
mov
mov
outsb
divl
jo
mov
shr
and
pusha
negl
add
stc
jge
insl
loope
sbb
cmpsl
out
ja
inc
rcrl
sub
sub
popa
sahf
jb
sbb
inc
addr16
pusha
jg
add
mov
dec
mov
addb
mov
mov
jmp
xchg
push
lahf
cwtl
pop
mov
jle
mov
aad
xor
addr16
lds
lret
shrl
add
xchg
aaa
add
xor
inc
push
mov
xor
insl
stos
loopne
mov
push
sarl
xchg
aas
lret
and
ljmp
ds
insl
mov
push
push
insl
mov
mov
pusha
rclb
dec
in
addb
int
gs
inc
je
jb
clc
iret
xor
mov
loopne
cmp
or
sub
inc
xor
add
sub
jmp
add
adc
in
mov
data16
fcmovne
or
and
pop
cld
pop
add
add
fildl
addr16
fistpll
sub
xor
punpcklwd
add
and
adc
sub
inc
mov
pop
aam
in
arpl
cmpsb
mov
mov
or
and
and
mov
pop
dec
cmp
rolb
sbb
mov
mov
xor
js
sub
into
sbb
lahf
jo
xchg
xor
in
mov
xor
or
jl
inc
mov
test
pusha
cmpsl
aad
push
ds
adc
inc
mov
loopne
popl
or
mov
mov
data16
fildl
push
mov
mov
ret
inc
inc
ss
add
mov
cwtl
aaa
pop
addr16
pusha
loopne
mov
dec
push
icebp
pop
ror
je
pusha
inc
les
mov
popa
xchg
mov
dec
jmp
cltd
cmpsb
and
push
jae
xor
pop
hlt
mov
inc
aas
cmp
cmp
and
inc
ret
xchg
jbe
push
inc
mov
xor
inc
and
add
cmp
cmp
daa
and
shlb
rolb
and
stos
cwtl
fcomi
lret
and
push
add
sbb
imul
push
inc
rolb
cmp
inc
repnz
add
fwait
inc
inc
sbb
outsb
push
jp
mov
lcall
iret
sub
dec
cmp
or
outsl
test
idivl
in
nop
or
and
mov
and
mov
add
add
outsl
inc
or
mov
mov
aam
sahf
xchg
mov
mov
inc
lods
mov
push
rolb
jns
jo
sub
addb
movsb
pusha
and
dec
out
cmp
jbe
int3
repz
pushf
pop
cmp
add
out
sarl
fnsave
inc
arpl
je
or
add
lret
out
lret
xor
mov
lret
jb
lods
pusha
shlb
dec
std
shrl
andb
inc
out
not
sub
add
sub
pusha
push
pusha
shlb
iret
loop
in
lock
add
mov
cmp
or
aam
cmp
aas
jp
jecxz
mov
roll
or
mov
inc
popf
dec
sbb
and
popa
test
adcb
insl
pop
jl
imul
imul
js
and
pusha
rorb
push
xlat
jns
mov
loopne
jl
xchg
dec
jge
xor
or
test
pusha
pusha
bound
xchg
andl
or
inc
cmp
fldcw
ljmp
js
pop
sti
jb
xor
xlat
hlt
jb
out
fsubrs
shlb
add
cmp
inc
add
mov
call
push
cmp
pop
inc
push
mov
push
jbe
popa
pop
xor
addl
mov
xchg
fnstenv
sub
push
lret
js
cli
xchg
mov
xchg
push
and
cmp
andb
sahf
fcmovnbe
inc
jmp
stos
cld
dec
outsl
inc
mov
dec
jmp
ja
dec
neg
mov
pop
push
scas
inc
pusha
sbb
iret
pop
add
and
and
leave
repnz
rcrb
data16
out
fistpl
adc
pusha
adcb
testb
add
mov
push
ss
loopne
jne
inc
inc
dec
dec
notl
jno
into
addb
sub
fcomps
push
push
push
mov
loopne
shll
inc
sub
add
pop
sbb
lea
xchg
dec
inc
push
mov
arpl
push
movsl
sub
mov
test
pop
std
add
or
mov
scas
loopne
int3
outsb
js
inc
jle
sbb
ss
adc
fdivp
jbe
and
xchg
mov
dec
xor
data16
mov
loopne
rorl
in
xchg
popf
push
movsl
movsb
and
dec
xchg
repnz
cmc
gs
push
or
mov
add
movsl
xor
aaa
push
push
stos
mov
xor
and
aam
xchg
rclb
pop
cmp
mov
jo
mov
and
inc
and
stos
addb
rorl
mov
mov
xchg
out
shll
mov
add
add
mov
sub
sbb
clc
nop
fcmovnbe
cli
insb
inc
sbb
addb
jl
mov
std
mov
pop
popa
jge
out
hlt
mov
loopne
fcoms
cwtl
inc
jb
or
mov
pusha
pusha
in
adc
repz
popf
and
cmp
mov
and
mov
mov
cld
add
mov
adc
inc
shl
pop
inc
cmc
aad
call
mov
lret
in
inc
add
mov
inc
sub
add
mov
inc
add
ret
push
jge
and
xchg
enter
mov
sbbb
mov
add
adc
push
sub
inc
mov
and
xchg
jne
xchg
add
add
xchg
cmp
inc
mull
test
mov
mov
out
lods
inc
and
into
push
adc
cli
inc
and
loopne
out
fwait
repnz
enter
push
jnp
jbe
jmp
xlat
cmp
adc
fs
xchg
dec
ja
jb
arpl
add
rolb
and
and
mov
or
cld
call
sbbb
arpl
mov
orb
jo
test
pusha
and
imul
sahf
enter
inc
test
sub
sbb
and
push
std
inc
cmp
mov
stc
fisubs
and
xor
xor
das
pop
test
sub
add
mov
loopne
dec
jg
lds
pusha
mov
inc
loopne
std
js
mov
cld
cmp
pop
xchg
pop
hlt
push
mov
sub
and
inc
add
jae
les
mov
imul
add
rolb
jp
scas
add
cmp
dec
push
test
ss
and
mov
pusha
popf
cmp
pop
jp
cmp
arpl
fmull
scas
mov
mov
jl
lods
addb
xchg
iret
loope
mov
test
rorb
add
jecxz
xchg
mov
xor
pop
in
scas
pusha
add
mov
inc
lods
add
xor
mov
inc
mov
imul
pusha
shl
aam
or
xor
add
inc
sarb
in
je
push
mov
mov
int
movsb
mov
enter
dec
push
jmp
test
xchg
sbb
or
xchg
dec
test
dec
daa
add
rcrb
sub
loopne
into
mov
loopne
dec
fs
cmc
mov
fucomp
aaa
nop
into
jo
out
inc
loop
lods
insb
stos
mov
pusha
rolb
adcb
addr16
outsb
rorl
add
or
std
mov
jno
int3
xor
negb
scas
inc
andb
pusha
add
sub
cs
mov
xchg
mov
and
test
inc
and
cmpsb
mov
mov
cwtl
push
cmp
jle
mov
popa
pop
add
mov
mov
shrb
notb
insb
xor
xchg
sbb
sub
cmp
or
shlb
lods
jmp
xor
pushf
stc
mov
inc
inc
dec
jns
shlb
inc
jp
imul
outsl
int3
scas
loopne
mov
push
mov
xchg
pop
inc
sti
add
mov
inc
mov
cwtl
jge
mov
addb
inc
andb
ror
pop
ss
pop
aam
mov
and
mov
outsb
ss
je
or
xorb
insl
push
sbb
out
outsl
and
les
cmp
rcr
ljmp
inc
or
pusha
add
loopne
cmpsb
add
sub
and
mov
loopne
jns
hlt
sub
lods
xorl
fsubrl
std
inc
imul
fsubr
sarb
mov
mov
outsb
sub
push
mov
rcl
fwait
push
mov
mov
mov
xor
lods
inc
inc
xchg
outsb
lds
in
test
shlb
add
or
xor
mov
jns
add
sub
in
fnstcw
push
fiadds
pusha
inc
lock
mov
clc
cld
popa
lret
in
fwait
pop
je
pop
jne
xchg
mov
jp
mov
test
mov
repnz
addr16
pop
xchg
add
stos
loopne
xchg
cmpsb
and
sub
add
mov
pusha
movsb
add
les
repnz
sub
add
jne
mov
xlat
mov
push
add
and
or
test
pusha
mov
imul
and
andb
outsb
cmp
inc
and
js
popf
mov
loopne
jnp
fmuls
mov
add
mov
orb
in
xchg
dec
andl
add
pop
mov
pop
jmp
daa
push
lods
js
inc
or
mov
hlt
loop
cmpsb
pusha
orb
mov
sti
cwtl
fldcw
mov
addb
shr
and
sarb
jmp
enter
cmpl
insl
jp
pop
push
push
cmc
xor
imul
test
mov
and
mov
xor
mov
iret
sbb
out
fldenv
and
push
mov
mov
add
addb
scas
add
shrb
shlb
mov
aad
test
addb
not
mov
pusha
pusha
jg
movb
add
jbe
roll
rolb
rol
shlb
cmp
pusha
inc
movsb
add
mov
push
add
mov
leave
enter
sbb
inc
dec
leave
xlat
icebp
or
pop
pop
in
sbb
lods
add
hlt
xchg
xchg
add
test
cld
cld
or
add
mov
adc
pop
mull
mov
pop
jp
jge
rcll
shr
mov
dec
push
jp
and
lcall
rolb
je
xchg
movsb
add
dec
rorl
and
adc
and
ret
idivl
xchg
mov
sbb
inc
cmp
adc
xor
stos
mov
cli
dec
sbb
cli
dec
lea
lock
adc
xchg
movsb
loopne
add
xchg
xor
jno
mov
lahf
push
inc
inc
dec
enter
mov
push
and
cld
push
pusha
inc
jecxz
cmp
pop
pusha
inc
insl
dec
inc
jbe
rcrb
inc
pusha
arpl
xchg
pop
test
inc
mov
inc
loopne
jb
mov
ds
ss
inc
and
adcb
ds
pushl
lret
mov
fldt
cmpsl
je
xlat
loopne,pn
vmwrite
gs
testl
and
xchg
ss
mov
dec
in
rol
add
push
shlb
std
jl
inc
add
push
mov
jno
loopne
lods
shlb
shrb
mov
adcl
mov
push
dec
mov
dec
adc
cmpl
xchg
sti
xchg
jnp
mov
insl
jb
dec
xchg
js
rolb
rolb
shlb
inc
jmp
lods
and
call
movq
add
sub
push
fs
lcall
cmp
mov
mov
shlb
mov
fcmovnb
movb
dec
into
dec
cmp
ret
push
push
mov
jge
loope
jnp
lret
inc
mov
ja
mov
stos
mov
cmp
sub
loopne
stos
int
loopne
inc
fcompl
mov
call
dec
out
sbb
add
iret
cli
jns
das
mov
jns
fisubl
mov
dec
mov
icebp
mov
mov
add
add
lret
dec
adc
push
inc
mov
insl
test
cld
sub
mov
add
pop
mov
in
repz
andb
fsub
adc
movsl
repz
loopne
add
and
fldenv
and
add
mov
xchg
inc
pusha
push
imul
add
or
je
pushf
lret
push
jge
scas
shlb
push
inc
inc
cmp
sub
mov
inc
pop
fcompl
stos
adc
add
add
call
loopne
mov
shlb
iret
call
addr16
and
jge
cmc
cld
jnp
jl
sbb
int3
push
repz
inc
lret
pop
jno
int3
test
loopne
leave
rol
xor
enter
mov
dec
adc
in
cld
les
jg
fmull
mov
and
jno
in
ds
ja
cld
and
dec
and
adc
shlb
pop
adc
aas
aas
pop
insb
int
in
jns
jl
add
repz
addb
mov
sarb
fdivrp
cld
and
fisttpll
mov
push
andb
int3
jl
inc
pusha
cld
cmp
mov
pmullw
inc
xchg
je
mov
inc
loopne
adcl
add
and
add
mov
mov
push
loopne
add
shl
push
cmp
shlb
sub
mov
mov
loopne
cmpsl
sbb
pop
fwait
or
subb
getsec
outsl
clc
inc
movl
push
iret
stc
inc
mov
dec
fs
pop
std
lock
mov
mov
push
mov
inc
add
push
cwtl
sbb
and
addl
imul
mov
out
std
aas
xor
out
dec
push
lods
mov
orl
jp
aam
aaa
fcoms
mov
push
mov
insl
mov
rorb
add
lret
sub
mov
xchg
mov
cmp
aad
fsubrs
loopne
xchg
out
popf
dec
adc
fstps
and
or
loope
mov
and
pop
aas
sub
jp
sub
and
leave
cmp
inc
push
or
jb
mov
mov
shlb
push
jno
inc
mov
inc
mov
ds
jmp
mov
and
loopne
std
push
jp
inc
testl
ljmp
mov
mov
and
xor
push
lods
pusha
and
lret
or
loopne
pusha
add
sub
and
gs
rorl
cmp
mov
jns
xchg
notl
incb
shr
xlat
scas
pusha
adcb
les
push
mov
lret
jge
shlb
shl
cld
xchg
and
push
xchg
mov
shlb
inc
test
add
dec
xlat
sub
and
add
pusha
orb
or
roll
cli
jmp
and
inc
leave
xchg
inc
adc
fisttpll
loopne
sbb
pop
pop
or
mov
mov
or
andb
xor
sarb
adc
xor
inc
enter
js
cltd
add
pusha
out
jb
sub
add
shrb
jo
std
adc
mov
sbb
or
pusha
mov
mov
mov
pop
das
mov
push
add
xchg
icebp
inc
fs
addb
in
in
bound
sub
and
andb
sub
xor
addb
inc
add
inc
sbb
sub
js
jecxz
mov
scas
inc
mov
negb
sub
add
or
lods
loopne
out
push
and
loopne
mov
lods
and
push
fisubrl
and
adc
add
aas
out
xchg
mov
dec
push
ss
add
and
pusha
pusha
dec
fwait
mov
add
push
jbe
mov
pusha
mov
stos
sub
loopne
stos
rolb
andb
jmp
fisttpl
lahf
inc
fnstcw
dec
mov
adc
mov
cmp
adc
xchg
int3
push
mov
xchg
lcall
sub
pusha
and
icebp
xor
fildll
pop
jle
call
gs
data16
ja
insb
or
sub
inc
test
mov
and
gs
fcmovb
jl
jmp
jno
sub
mov
out
xchg
jg
sti
adc
cmp
aad
cmp
js
stc
xor
mov
mov
loopne
sbbl
pop
ret
insb
xchg
cli
cmp
stc
push
fs
in
pop
or
push
pop
pop
insl
lahf
mov
ret
pusha
je
inc
pusha
adc
add
xor
stc
test
and
rcr
jge
push
outsb
inc
mov
pusha
and
pop
xchg
jno
add
add
dec
scas
and
adc
add
and
mov
cli
aas
pop
mov
jne
push
pop
out
aad
add
and
std
jecxz
mov
mov
lahf
adc
xor
in
adc
dec
push
and
mov
movsl
int3
dec
enter
clc
daa
jnp
negl
mov
push
and
push
mov
and
pop
sti
mov
pusha
orb
shlb
loopne
fs
xor
add
xorl
pop
push
mov
mov
push
inc
and
int
or
push
jp
mov
aad
outsl
or
rol
in
js
mov
inc
lret
orb
add
sti
ret
call
arpl
jae
rolb
dec
cmpsl
js
mov
loopne,pn
cld
dec
test
orl
mov
popf
mov
outsl
inc
and
inc
dec
xor
and
mov
inc
int
sub
jnp
push
cmpb
mov
jbe
gs
jbe
rcrl
lods
outsl
jl
andb
cmp
xchg
ja
cmp
pusha
lahf
js
xor
lock
cmc
sub
loopne
andb
xor
push
in
mov
in
ficoms
mov
jmp
jecxz
aad
nop
cmp
dec
ret
inc
out
enter
or
add
jg
pop
cs
inc
xor
xor
and
and
mov
mov
push
andb
cmpsl
lock
rclb
pop
inc
lods
inc
xor
mov
dec
xor
mov
nop
jo
cltd
jns
loopne
scas
test
add
and
and
cli
nop
into
div
enter
mov
loopne
addb
xchg
andb
mov
sub
pusha
test
push
imul
push
add
cs
adcb
pusha
rcrb
inc
mov
mov
sbb
inc
xlat
sub
ds
xor
mov
mov
repnz
inc
pop
sub
subb
out
inc
lods
dec
fnstcw
and
add
and
pop
stc
and
push
test
push
inc
pusha
pop
ds
xchg
loopne
stc
lcall
xor
out
mov
sub
mov
mov
pusha
jp
test
sti
pop
sbb
in
divb
or
pusha
sldt
and
dec
test
inc
call
or
add
mov
mov
call
in
add
lock
sub
inc
mov
andb
mov
and
xor
mov
out
and
pop
mov
add
imul
add
lock
cltd
scas
inc
js
cmp
inc
pusha
and
mov
loopne
data16
mov
loopne
in
sbb
push
mov
fwait
cmc
mov
fisttpll
mov
lahf
in
xchg
fwait
jo
gs
insb
cmc
cmpsl
fbstp
mov
iret
aaa
cli
inc
jae
js
or
mov
in
shlb
and
xor
rcrl
addb
in
or
sub
pusha
mov
movl
out
cli
jno
into
mov
loopne
inc
daa
sbb
push
movsl
out
mov
fsqrt
xchg
mov
repz
lret
add
movsb
and
dec
and
and
insb
popa
jo
mov
and
loopne
xor
in
and
and
movsl
out
dec
fisttpll
scas
loopne
arpl
andb
fisubrl
fucom
xor
ljmp
subb
addb
adc
jecxz
in
mov
inc
loopne
stos
and
ljmp
cli
cld
ret
jno
adc
loopne
and
adc
adc
cmp
xchg
ret
into
adc
test
movsl
or
shlb
or
cmpb
mov
mov
jbe
or
rolb
or
mov
fists
push
xorl
mov
cwtl
mov
in
adc
loopne
sbb
xchg
js
repnz
push
mov
shrl
push
loopne
or
rclb
jnp
andb
mov
xor
movsb
shlb
loop
and
and
addb
out
and
xchg
push
mov
add
pusha
adc
jae
inc
lcall
in
push
fldl
and
mov
mov
and
andb
xchg
and
xor
pusha
ljmp
dec
pushf
cmc
inc
jbe
add
mov
add
popa
sub
mov
and
and
lods
pop
jne
mov
pop
xchg
mov
add
out
repz
and
stos
loopne
xchg
jg
fnstsw
inc
aam
rolb
adc
inc
xchg
dec
loope
push
adc
sbb
sub
inc
cmc
cmc
push
add
imul
popa
mov
and
and
push
loopne
mov
cmp
ret
sbb
andb
popf
cmpsb
addb
psllw
shlb
jb
imul
and
push
and
sbb
mov
rolb
jl
add
xor
mov
push
in
add
fiaddl
pushf
dec
iret
leave
mov
cld
scas
pusha
aad
push
js
mov
sti
jbe
rol
jmp
inc
scas
loopne
push
jo
andl
adc
movsb
inc
and
iret
inc
movsl
pop
rep
addb
imul
sbb
pop
mov
loop
gs
loopne
cltd
icebp
pop
push
or
dec
jp
stos
and
imul
dec
cmp
sub
cmpb
xchg
sub
mov
pusha
cld
stos
rolb
add
and
fistps
sbb
dec
loopne
lock
cmp
mov
shlb
ret
jp
loopne
loope
lods
loopne
adc
jge
dec
icebp
jp
and
fwait
mov
fiadds
adc
cmpsb
mov
pop
xlat
sub
pushf
fninit
dec
sbb
mov
dec
mov
pushf
adc
pop
addb
fists
and
xchg
jo
pop
pop
mov
add
inc
shll
addb
pusha
mov
lret
mov
orb
cmc
sub
loopne
or
loopne
sbb
mull
add
pusha
ds
popa
adc
ds
addb
jle
std
mov
imul
pop
aad
cmp
test
cmp
mov
add
lret
sbb
cmpsb
inc
mov
mov
cs
mov
mov
and
sarb
cli
mov
pop
mov
andb
rclb
cmp
shlb
pop
scas
loopne
out
loopne,pn
movl
add
jno
nop
sarl
outsb
fisttpll
and
dec
jl
lds
out
outsb
mov
sti
test
sbb
sti
lock
test
add
inc
jmp
mov
inc
add
adcb
xchg
fwait
lret
cmpsl
mov
inc
sub
jg
jne
push
out
arpl
mov
andb
fidivrs
jecxz
add
jb
stos
and
dec
lds
and
movsl
daa
cld
jp
imul
and
loopne
fucomip
sti
cmp
insl
pop
inc
int3
dec
sti
cltd
pushl
mov
sub
adc
and
mov
xor
pusha
pop
sbb
xchg
repz
jecxz
imul
jo
fidivl
sarb
jne
push
fstl
rol
xchg
scas
pusha
mov
mov
cmp
ss
cli
loope
and
leave
shrl
dec
movsl
mov
cltd
test
loopne
das
mov
push
pop
mov
lock
sub
inc
mov
mov
shr
inc
mov
rcl
adc
in
xchg
mov
cmp
add
aad
aad
lret
mov
mov
cmp
pop
js
and
inc
jmp
add
addb
shll
mov
inc
add
xor
add
and
out
cs
xchg
mov
adc
inc
xor
pusha
mov
pop
jge
mov
dec
mov
xor
clc
pushf
mov
loopne
dec
push
mov
jmp
enter
push
lahf
push
add
xchg
adc
shlb
pusha
adc
push
fcoms
mov
push
mov
orl
jmp
fidivrl
mov
dec
cmp
pusha
add
xchg
pusha
mov
pop
mov
pop
cmp
jb
mov
aad
loopne
adc
inc
outsb
cmp
ss
or
orb
aaa
inc
cltd
roll
loopne
or
inc
add
mov
andb
mov
fidivrs
test
repnz
loopne,pn
push
repz
adc
xlat
cmc
or
cli
call
les
xchg
pushf
pop
sti
lcall
adc
add
xchg
leave
dec
inc
jmp
rol
cmp
mov
nop
inc
es
sub
mov
or
sarb
xor
clc
and
addb
shrl
pusha
cs
rol
into
pminsw
add
jae
and
fisubs
cmpsl
ja
ss
jp
add
inc
andb
xchg
lahf
dec
adc
insb
push
cltd
xchg
xor
jecxz
fsubl
or
adcb
ss
mov
sub
nop
dec
add
enter
xor
int
and
lcall
lock
div
call
loopne
sub
loopne
inc
jae
pusha
inc
mov
nop
rorl
repz
push
pop
ja
movsb
pusha
inc
push
push
sbb
andb
inc
mov
cmp
push
out
or
inc
insb
call
pop
push
xchg
out
scas
loopne
testb
adc
sbb
lahf
dec
insl
fnsave
inc
imul
mov
and
jg
fwait
scas
pop
dec
push
xchg
shlb
outsl
lret
or
add
mov
pop
out
cmpsb
mov
in
popa
fiaddl
pusha
shlb
nop
out
cmp
mov
loopne
inc
inc
andb
imull
loopne
dec
iret
mov
scas
andb
int
shrb
test
mov
cmpsb
inc
add
repnz
mov
xchg
sub
cmp
or
mov
cltd
insl
jo
xchg
lock
cmp
insb
pop
adc
out
out
leave
sbb
inc
and
data16
mov
add
inc
jmp
es
pusha
mov
and
push
mov
negl
mov
add
out
js
rclb
movl
pusha
pusha
pop
jecxz,pt
lret
repnz
pusha
loopne
or
and
add
xchg
add
push
int3
adc
and
mov
dec
imul
cmpsb
loopne
or
fisubrl
inc
sub
jmp
inc
push
out
aas
lret
into
and
mov
xchg
rorb
mov
pop
shll
push
jns
jo
ret
jbe
pusha
and
xlat
inc
gs
outsl
inc
or
rorb
xchg
ret
decb
addb
ds
rcl
cli
arpl
and
sbb
in
fs
imul
hlt
cmp
pusha
sbb
leave
sbb
cmp
push
xchg
outsb
adc
jnp
jg
addr16
pusha
mov
andb
xchg
sbb
dec
hlt
pop
dec
xchg
sub
and
add
movd
and
ss
addb
mov
fisubrs
call
rep
arpl
xchg
mov
xchg
mov
and
or
std
add
adc
or
in
mov
fidivrs
and
iret
xchg
rcl
lcall
loope
jb
and
incl
rolb
lds
mov
andb
push
outsl
xor
andl
and
sub
pusha
mov
ja
aaa
loop
xchg
clc
sub
and
mov
mov
ja
xchg
pop
mov
call
cmp
mov
or
cs
cmp
add
mov
or
decb
loopne
dec
xor
pop
stos
cmp
icebp
dec
enter
inc
and
dec
cmpsb
inc
shlb
pop
out
shlb
int
xor
sbb
fstp
xchg
div
out
mov
add
add
push
xor
gs
adc
fwait
les
xor
add
push
clc
lcall
mov
jl
shlb
gs
scas
shl
cmp
pop
add
and
and
cmp
fucom
in
loope
mov
mov
pusha
push
add
and
pop
ja
das
jmp
aad
inc
pop
repz
mov
shll
pop
xchg
mov
add
daa
sbb
and
xchg
clc
xchg
mov
je
xor
ds
sbb
mov
xor
shlb
and
pusha
push
shlb
nop
outsb
dec
push
int3
jge
out
pop
test
pusha
adc
js
push
push
cmpsb
pusha
add
mov
rolb
inc
xlat
cltd
sub
pusha
sbb
arpl
loopne
dec
xchg
ljmp
andb
mov
push
cmp
cs
rcr
es
test
call
inc
or
imulb
push
add
push
and
addr16
pusha
shlb
push
sub
rcr
jp
addb
sub
add
jmp
mov
test
outsl
sbb
jl
daa
mov
push
orl
out
nop
push
push
movsb
inc
mov
sbb
xchg
and
sbbb
mov
mov
and
or
ljmp
loopne
adc
cs
add
add
imul
js
pusha
add
xor
xlat
xor
pop
ja
sahf
push
js
test
jo
and
call
loope
or
xchg
leave
mov
dec
icebp
pusha
loop
addb
and
lock
sbb
loopne
mov
in
mov
sub
add
add
xchg
inc
dec
in
add
leave
icebp
pop
aas
sti
push
shlb
mov
jo
or
jl
add
cmp
outsl
jl
mov
mov
inc
andb
rolb
rolb
pop
jne
in
sbb
mov
jnp
sub
pusha
xchg
dec
sub
add
negb
icebp
inc
sub
cltd
ds
push
inc
inc
pop
jo
rolb
outsb
lcall
lods
jmp
xchg
mov
push
movsl
idivl
cmp
pushf
add
cmpsb
mov
add
outsl
cld
or
sub
inc
in
and
repz
push
add
jo
insb
imul
and
adc
jp
cmpsb
shlb
add
int3
out
and
inc
test
mov
cwtl
scas
rol
push
icebp
decl
add
push
nop
int
mul
jle
mov
negb
and
or
pusha
inc
push
fcomps
push
test
jae
fcomps
ret
in
mov
cmc
sbb
das
cwtl
xor
cltd
aas
call
jbe
cmp
and
jne
ret
mov
enter
rep
dec
call
add
rol
lahf
push
sahf
inc
sbb
ljmp
test
mov
sbb
sbb
inc
sub
pop
jmp
loope
add
mov
mov
dec
sub
rorl
jg
insl
aas
js
xlat
cmp
push
lods
aas
dec
cmp
push
fucom
inc
dec
xor
xchg
scas
andb
mov
jmp
movb
scas
loopne
outsb
mov
nop
fdivs
std
pop
call
out
pusha
mov
add
dec
test
inc
mov
mov
pop
aas
mov
mov
mov
add
cmpb
hlt
xchg
jae
pop
lds
and
sbb
int
dec
xchg
adc
and
mov
cmp
pop
clc
push
push
andb
push
mov
out
pop
or
or
ror
adc
ss
das
xor
loopne
sbb
or
gs
push
inc
loopne
idivb
push
inc
in
dec
jcxz
scas
shlb
and
push
outsb
mov
mul
mov
fadd
cli
and
dec
jl
cmp
and
in
mov
ret
push
out
bound
add
test
out
sbb
js
andb
into
add
xchg
loope
ja
lods
pop
mov
mov
xlat
pushf
adcl
inc
inc
mov
les
sar
xchg
shrl
lret
inc
andl
xor
je
test
inc
push
pop
add
mov
out
loopne
lds
paddusw
push
pusha
ds
add
sbb
pusha
cmp
mov
sub
mov
jg
pusha
add
call
fisttpl
dec
loope
and
aad
sbb
pusha
and
lret
mov
dec
fxch
int3
cmp
adc
sbb
xor
out
lock
cmpb
fwait
popa
ret
das
mov
xlat
jae
stos
sbb
lahf
push
lds
dec
mov
xor
insb
das
cwtl
mov
mov
sub
pusha
mov
push
fldenv
lods
std
mov
inc
shrl
loopne
and
mov
jo
ja
rcr
push
rol
out
cmpsl
shrb
and
jne
loopne
fbld
jge
pusha
mov
mov
jle
je
mov
xlat
jl
std
or
adc
loopne
fcmovu
mov
bound
sarb
push
pop
pop
shll
xor
pop
cmpsl
lcall
and
dec
mov
pusha
cmp
stos
pusha
loopne
adc
fisubrl
loope
mov
fnsave
rolb
lods
lahf
fistpl
adc
mov
in
jge
sub
std
repz
cwtl
jle
cmp
repz
ja
mov
fwait
aas
cmp
test
cmp
shlb
test
loopne
or
inc
jae
daa
subl
test
inc
xchg
push
jle
loopne
xchg
lcall
add
inc
jno
arpl
and
push
dec
cs
pusha
ret
adc
dec
mov
mov
in
jecxz
add
loopne
adc
jae
fildl
sbb
mov
std
les
test
and
lods
aam
xor
and
inc
cmp
mov
sbb
fcmovu
repz
data16
mov
shrb
pusha
sbb
pop
push
jg
push
xor
mov
sbb
adc
adc
push
pop
pushf
shll
es
sarb
sub
or
aad
push
ss
das
sbb
test
mov
test
mov
rolb
stos
pusha
and
lods
add
les
sbb
mov
jo
mov
xchg
mov
jmp
mov
push
xchg
dec
int3
bound
shll
inc
outsl
cmp
stc
push
shl
rolb
aam
hlt
inc
and
pusha
xchg
imul
dec
and
pusha
dec
xor
or
rclb
fmuls
cmp
mov
stos
and
mov
shlb
pop
in
push
nop
jae
loopne
insb
mov
jne
pop
loop
add
insl
sbb
pop
aad
fisttpll
hlt
fs
pushf
push
xchg
xchg
sbb
mov
gs
call
out
in
cwtl
fildll
fcomi
pushf
cmp
jno
fistpll
xchg
ret
cs
popf
cmp
lds
mov
pusha
pop
add
and
fwait
setge
add
lea
jmp
or
subb
out
inc
sbb
imul
loopne
jae
cld
pop
sub
rorb
loopne
out
and
pusha
lret
mov
xchg
cwtl
mov
and
or
pusha
mov
sub
shl
dec
enter
les
stos
imul
in
inc
add
push
daa
inc
and
pop
mov
inc
mov
and
loopne
stos
inc
cmpb
cmp
mov
sbbb
pop
out
fisubrs
or
mov
pushf
push
fdivp
daa
sub
dec
inc
inc
pop
cmp
lahf
jno
jl
enter
clc
dec
mov
add
and
icebp
jnp
pop
test
inc
xorb
push
cmpsb
pusha
loopne
cmp
das
ficompl
shll
and
sti
rorl
sub
xor
add
and
fidivs
test
add
lock
pop
hlt
lods
mov
les
fbld
mov
inc
mov
loopne
jg
repz
push
xor
xchg
rorb
and
mov
inc
data16
push
mov
orb
push
scas
dec
cmpsl
popl
rolb
rcrl
sbb
fld
or
fnsave
cmp
in
ds
cmp
cmpl
add
mov
pusha
adc
rolb
xor
mov
loopne
rorl
add
dec
cwtl
xlat
pop
insl
mov
stos
movsb
add
push
fmul
ss
lcall
mov
mov
mov
pop
pop
mov
pop
add
shlb
pusha
inc
and
cmp
pusha
jno
and
inc
cmp
jnp
or
fidivs
stos
inc
mov
jmp
int3
or
adcl
rolb
sbb
out
loop
dec
cmp
loopne
pop
add
inc
jo
jb
dec
mov
insl
insl
outsl
lret
mov
pop
repnz
lock
mov
cwtl
or
adc
mov
inc
mull
rol
popa
mov
sar
rorl
pop
pop
sub
fs
call
xorl
cmpsl
fisttps
leave
sti
pop
icebp
jle
or
and
mov
inc
jecxz
outsb
cmc
popa
out
sub
jo
lret
xchg
mov
icebp
ljmp
push
repz
cwtl
push
xor
cwtl
xchg
push
inc
lcall
xchg
icebp
cmpsb
pusha
pusha
dec
test
inc
push
mov
aaa
mov
cmp
shlb
jbe
add
adc
add
inc
leave
fildl
imul
out
pusha
pusha
inc
and
sbb
cmp
jnp
stc
xcrypt-ctr
cmpsl
pop
dec
add
stc
mov
outsl
out
adc
or
mov
aas
lods
add
in
mov
cltd
icebp
mov
xlat
sbb
pop
lahf
fbstp
jno
mov
xor
adc
inc
inc
iret
int3
mov
push
mov
cmp
inc
ror
jb
andl
into
cld
jmp
cmpsb
inc
rorb
stc
inc
pop
test
mov
dec
stc
cmpsl
in
jle
ja
shlb
fwait
in
fdivs
out
sarl
ja
xchg
xchg
dec
int
iret
ss
mov
pop
test
mov
inc
or
pusha
cmp
test
pusha
and
loopne
mov
aam
add
ljmp
fcoml
pop
mov
add
xor
sub
jp
add
bound
rcrl
pop
xor
in
mov
and
out
in
cmp
clc
cmp
lret
jo
jge
xor
gs
sub
shr
cmp
dec
test
mov
dec
test
mov
and
arpl
xor
ret
psadbw
add
sub
inc
ds
outsb
jbe
in
cmpsl
or
data16
aad
imul
xchg
pusha
and
add
push
sbb
test
inc
jge
xchg
or
inc
or
pusha
fisttpl
xlat
out
cmp
dec
mov
lret
dec
repz
mov
dec
inc
mov
mov
shr
pusha
sbb
jnp
sub
and
and
mov
leave
orl
repnz
movsb
add
add
mov
lock
lahf
out
popf
movsl
adc
add
stos
jmp
test
pusha
jmp
fldl
xchg
pusha
mov
adc
mov
iret
jno
int
sbb
dec
movsb
mov
xchg
loopne
jle
inc
bound
outsl
xchg
enter
sbb
add
shrb
ds
mov
and
fs
inc
sub
ja
mov
iret
sti
adc
sub
mov
sbb
jg
fadds
inc
adc
loopne
or
fcompl
out
push
pusha
cmpb
jg
or
lret
mov
stc
lds
mov
outsb
fisttpll
mov
adc
mov
psrad
scas
ds
testb
jecxz
mov
outsl
pop
xchg
lods
pusha
loopne
addb
shl
xchg
mov
mov
in
mov
pusha
add
insl
sahf
nop
pop
loopne
shr
adc
shlb
pop
jae
xor
jae
dec
jle
lds
shlb
inc
lahf
fs
xor
sub
pusha
jno
fstpl
or
pusha
adc
sbb
pusha
shlb
fnstcw
sub
out
out
enter
insb
into
add
add
push
xchg
cwtl
or
and
pop
cmp
push
stos
add
fiadds
add
mov
loopne
xchg
inc
je
inc
sub
rclb
jnp
inc
dec
lahf
clc
sub
inc
jae
pop
out
out
and
dec
outsb
sub
mov
mov
sub
dec
enter
mov
mov
out
test
dec
mov
cmc
in
inc
add
pusha
mov
loop
cmp
sbb
push
and
in
and
aaa
pop
scas
mov
mov
push
add
popf
das
sub
and
loopne
shrb
pusha
mov
and
aad
and
loopne
test
pusha
cmpsl
lods
andb
dec
cld
movsb
rolb
adc
popf
mov
outsb
xlat
rcrl
xchg
xorl
lcall
inc
rolb
mov
add
insb
mov
icebp
adc
inc
or
sarl
add
repz
cmpsb
loopne
icebp
mov
cmp
mov
das
pusha
sub
es
pusha
mov
lret
hlt
cltd
test
pusha
mov
or
dec
inc
xchg
pusha
clc
fldenv
jle
addb
and
mov
add
mov
addb
pop
inc
ss
and
addr16
mov
xorb
xchg
mov
push
out
shlb
lods
pop
and
sub
add
add
repz
sub
xchg
in
xor
sbb
xchg
fwait
xor
sub
mov
and
mov
notl
push
lds
push
ficomps
popa
ds
aaa
negl
pop
mov
loopne
aas
xor
cmp
xorb
stos
add
push
xor
add
incl
inc
jmp
jo
insb
popa
jno
inc
nop
ja
rol
inc
andb
rol
clc
jmp
add
fs
add
ret
in
xlat
xchg
outsl
outsl
ljmp
bound
or
add
xor
cmpsb
loopne
xor
adc
adc
rolb
addb
sahf
push
inc
out
xchg
mov
ja
in
xchg
and
mov
insl
fs
stc
mov
cmp
and
loopne
mov
push
and
lea
cld
pop
das
mov
lock
inc
test
icebp
gs
fbstp
push
pop
arpl
pushf
add
inc
adc
mov
ret
scas
rolb
addb
test
and
loopne
pop
and
mov
pusha
inc
shrl
lcall
mov
mov
add
push
test
xchg
aam
int3
and
push
sbb
xor
js
xchg
insb
addl
add
and
xchg
mov
stc
in
jp
mov
mov
test
fdivrl
les
add
xor
xor
outsb
cmp
xchg
mov
scas
and
dec
mov
and
pusha
cwtl
addr16
ss
jg
in
xor
sbb
test
stc
clc
and
and
push
cli
sbb
and
pop
loopne,pn
stos
and
icebp
xchg
pop
add
push
cmp
je
aad
dec
pop
sbb
jne
push
sahf
push
insb
in
outsl
daa
pop
repz
add
xor
mov
mov
jl
push
push
dec
fnsave
xor
pop
in
inc
aaa
int
mov
xor
xchg
adc
and
rcl
fsubp
into
dec
push
push
add
jae
addb
addb
pusha
sub
and
inc
mov
inc
and
sbb
aaa
dec
fbld
sub
inc
das
xor
mov
jae
add
jmp
push
clc
sub
pusha
popf
nop
jge
and
pusha
and
outsb
push
pop
add
xor
shr
mov
inc
mov
add
cmpsb
loopne
gs
mov
ret
add
or
and
adc
pop
mov
aam
and
and
rcrb
shlb
add
mov
inc
jmp
lret
lcall
add
mov
inc
ds
stc
and
mov
int
jmp
mov
sti
out
out
iret
mov
mov
or
outsb
pop
ret
dec
into
pop
popf
xor
fsts
clc
mov
add
insb
mov
insl
xchg
pop
popa
lods
mov
dec
loope
pop
bound
in
cwtl
sbb
add
sbb
mov
pusha
sbb
cli
dec
repnz
andb
mov
cld
cmc
test
les
adc
pop
loope
jl
loop
or
xchg
xor
xchg
test
xchg
cmpsb
mov
and
xchg
sti
fwait
lods
adc
xchg
sbb
shrb
jg
cs
mov
dec
push
std
jno
loopne
cmpl
and
pop
mov
or
int3
push
add
rolb
repnz
xchg
jne
push
fdivp
jle
insb
scas
loopne
cmpsl
ss
and
rol
andb
repnz
cs
cmp
arpl
cmc
fadds
rorb
imulb
inc
and
out
sti
cmp
cmp
adc
sub
rol
ja
add
jge
cmp
pop
repnz
and
inc
or
shlb
ret
lock
ds
push
xchg
xchg
test
dec
adc
mov
popf
cmp
cmp
andb
decl
inc
loopne
mov
pop
sub
and
stos
inc
dec
xchg
call
and
cmpsb
add
mov
lds
pop
rcr
loop
fldl
scas
inc
add
cli
push
sub
inc
mov
imul
pusha
loopne
jno
cmpsb
inc
mov
and
lods
add
lret
push
inc
mov
mov
jo
mov
ja
and
jle
inc
inc
pop
lock
mov
mov
shlb
add
add
aad
adc
aam
imul
dec
adc
xchg
scas
addb
mov
shrl
repz
test
pop
out
lds
scas
jae
stos
and
flds
shlb
push
rolb
mov
xchg
xlat
aas
jecxz
and
mov
sbb
loopne
jge,pt
addb
popf
inc
xchg
push
mov
inc
insl
inc
sbb
jo
jecxz
std
add
mov
mov
in
out
mov
xor
and
add
adc
das
pusha
ss
mov
jbe
jne
out
sti
mov
add
add
lock
int
testb
aad
pop
sub
pushf
lock
sbb
adc
mov
mov
pop
outsl
hlt
xchg
sarb
jns
test
pusha
mov
sbb
xor
imul
and
loopne
and
push
inc
adc
add
call
addb
orl
mov
pusha
rorl
loopne
mulb
insl
fcoml
and
andb
ror
lods
inc
adc
mov
out
cmp
and
shl
jb
add
mov
push
outsl
adc
jecxz
je
loop
loope
xchg
xlat
dec
ss
xchg
sar
andb
inc
pusha
mov
push
loopne
xchg
jbe
test
dec
inc
sub
fldcw
mov
push
mov
fs
scas
and
lret
stos
cmp
or
xchg
xor
icebp
add
and
mov
movl
sub
loopne
iret
pop
xor
add
mov
out
mov
insb
cwtl
xchg
ds
ficoml
lds
mov
add
loopne
add
jecxz
add
mov
add
jl
push
mov
andb
lcall
add
add
