add
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
testb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ds
ds
xor
xor
xor
xor
jp
jp
jp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
gs
gs
gs
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
inc
inc
inc
inc
inc
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
rcl
rcl
rcl
rcl
rcl
rcl
pfcmpge
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
iret
iret
iret
popf
popf
popf
popf
popf
popf
popf
popf
popf
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
jg
jg
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
scas
scas
scas
scas
scas
scas
mov
mov
pop
pop
pop
pop
pop
pop
pf2id
sbb
sbb
sbb
sbb
sbb
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
repz
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
dec
dec
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jae
jae
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
xchg
insl
insl
insl
insl
insl
insl
nop
rol
rol
rol
rol
mov
mov
mov
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
je
je
fcmovnu
fcmovnu
fcmovnu
fsubl
and
and
and
jmp
ds
ds
ds
in
in
in
in
in
in
in
in
in
in
in
in
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
in
in
in
in
in
addb
addb
xor
xor
xor
xor
xor
xor
xor
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rol
rol
mov
mov
mov
lcall
lcall
lcall
lcall
lcall
nop
nop
nop
jl
jl
jl
jl
jl
jl
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
enter
enter
enter
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
adc
adc
adc
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
addl
addl
adcl
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ja
ja
ja
ja
ja
ja
ja
ja
ja
nop
nop
nop
nop
nop
nop
lea
lea
lea
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
stos
stos
stos
stos
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
std
std
std
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
aam
aam
aam
aam
aam
aam
aam
aam
aam
add
add
add
add
add
add
add
add
add
or
or
or
or
or
or
or
nop
nop
nop
nop
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
gs
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
div
notl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
loope
loope
loope
loope
loope
loope
loope
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
roll
test
test
test
cs
cs
cs
cs
and
and
and
jge
jge
nop
nop
nop
nop
nop
add
jo
jo
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
cmc
cmc
cmc
cmc
cmc
cmc
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movntps
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
jle
jle
jle
ja
ja
ja
sbb
push
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repnz
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
jbe
jbe
jbe
jbe
jbe
jbe
nop
nop
nop
nop
nop
cs
xchg
xchg
xchg
xchg
xchg
xchg
jne
jne
jne
jne
jne
jne
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
mov
mov
fwait
fwait
fwait
fwait
fwait
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
addl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ss
jnp
jnp
jnp
jnp
jnp
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
ret
ret
ret
ret
mov
hlt
hlt
mov
mov
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
fsubs
daa
daa
daa
daa
daa
daa
daa
daa
daa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jg
jg
jg
mov
nop
nop
nop
nop
nop
nop
mov
or
or
or
or
or
or
or
or
or
or
or
or
jl
jl
jl
jl
mov
mov
mov
mov
mov
or
or
or
or
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
nop
nop
nop
nop
nop
nop
rcl
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
div
div
idivb
jns
jns
jns
jns
jns
jns
jns
jns
fs
fs
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
addb
addb
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loope
loope
loope
loope
loope
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fstp
ljmp
ljmp
ljmp
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
push
push
push
loop
loop
loop
loop
loop
loop
fs
xor
xor
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
data16
data16
data16
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jbe
cmp
cmp
ljmp
nop
nop
nop
nop
nop
cmp
cmp
cmp
xor
xor
xor
xor
xor
xor
xor
xor
adc
adc
adc
adc
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
add
add
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
adc
nop
nop
nop
nop
nop
nop
nop
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
out
out
out
out
out
out
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
addr16
addr16
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repnz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sbb
sbb
test
test
xchg
xchg
xchg
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
arpl
arpl
arpl
arpl
cwtl
cwtl
cwtl
cwtl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jne
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
or
loopne
loopne
loopne
loopne
loopne
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
sub
rcl
rcl
rcl
or
or
or
or
imul
imul
imul
imul
imul
imul
imul
imul
data16
data16
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
inc
inc
inc
and
and
mov
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
in
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
mov
mov
mov
mov
nop
nop
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
js
js
js
js
js
js
js
js
js
js
pop
pop
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jecxz
jecxz
jecxz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
add
xchg
xchg
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
lods
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
fs
fs
cmc
cmc
cmc
cmc
cmc
nop
mov
mov
rcl
rcl
rcl
rcl
shrb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
nop
nop
nop
nop
gs
gs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
aam
aam
aam
aam
aam
int
int
int
int
int
int
int
int
int
int
nop
nop
mov
mov
stos
stos
stos
stos
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
int3
int3
int3
int3
int3
daa
daa
daa
daa
daa
daa
daa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmc
cmc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
push
push
push
push
push
push
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
and
and
and
and
and
and
and
and
and
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
xor
xor
xor
xor
xor
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
mov
mov
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
jnp
dec
dec
dec
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
and
and
and
and
and
and
and
and
and
and
and
and
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
pop
pop
sbb
sbb
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
les
aas
aas
aas
aas
aas
nop
nop
mov
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
xchg
xchg
xchg
xchg
xchg
xchg
push
push
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
xbegin
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
insb
cmp
test
cltd
das
pop
add
mov
add
jb
jno
int3
out
add
popf
test
lds
out
mov
sbb
push
add
xchg
push
rcl
mov
inc
add
add
inc
mov
add
aam
add
mov
sbb
ret
push
add
jmp
in
popa
cmp
push
push
sbb
adc
add
add
xlat
dec
add
sar
nop
mov
sub
add
push
add
inc
add
data16
mov
idivl
cmpb
xchg
jmp
jge
and
testl
add
inc
jae
add
xchg
or
fbld
push
add
jle
ficomps
mov
add
mov
add
add
add
xor
add
fwait
cmp
imul
jno
add
ret
push
add
xchg
adc
dec
lods
cwtl
pop
add
add
fildll
mov
add
add
out
jns
xchg
sarl
fwait
add
mov
add
test
push
add
sub
jnp
xchg
push
add
add
add
pop
and
add
add
sub
sbb
add
test
inc
mov
hlt
inc
dec
add
xor
xor
and
jbe
jle
sub
pop
add
add
test
add
movsb
or
push
push
add
and
inc
add
mov
fstl
or
adc
in
pop
add
dec
add
dec
add
lds
add
pop
add
cwtl
insb
add
addb
stos
sarb
lods
js
mov
js
xlat
push
add
or
mov
add
dec
pushf
mov
add
add
jae
add
cmc
rorl
add
pop
add
test
add
add
cmpsl
bound
mov
in
pop
add
pop
mov
jge
add
add
cmp
xchg
and
jno
add
mov
fcoms
jmp
popa
jmp
dec
add
icebp
popl
mov
or
test
das
xor
jle
add
add
imulb
movsl
mov
add
outsb
add
and
bound
in
sub
in
jle
das
testb
push
in
push
add
add
pop
add
or
ja
xor
sub
popf
out
sub
das
scas
and
movsb
std
ret
sbb
jo
jbe
ret
cwtl
xor
dec
add
jle
jmp
add
pusha
add
add
sti
mov
inc
add
xorl
mov
pop
dec
pop
add
cmp
pop
jns
push
movsl
call
ret
mov
lock
mov
cmp
jbe
or
mov
flds
fistps
push
add
add
fucomp
jnp
mov
push
add
or
push
add
cmpsb
dec
add
and
push
add
add
sub
ret
sbb
in
jno
pop
add
add
pusha
add
rcl
repz
test
js
outsb
add
add
inc
add
das
lock
add
mov
arpl
add
xchg
call
loopne
cmp
push
add
aam
je
clc
adcb
inc
add
movsb
popa
mov
out
test
adc
test
dec
add
add
into
push
add
wrmsr
add
into
in
insb
add
or
sub
add
add
xchg
out
add
xchg
cmp
je
hlt
out
js
loopne
fcmovu
adc
xor
cmc
lret
aas
ficoms
mov
add
adc
mov
or
movsl
and
sti
insl
sbb
mov
icebp
out
call
lahf
and
out
arpl
add
int3
mov
out
inc
add
pop
add
lret
fmull
pop
add
add
sti
add
repz
fildl
fisubrl
cmp
fildl
jge
lcall
dec
add
add
pop
stc
adc
rorl
xor
and
add
dec
jns
ljmp
inc
add
add
sub
stc
and
ljmp
data16
mov
cmpb
add
cmp
xor
int3
mov
cmpsl
lds
add
add
xchg
push
movsb
aam
mov
add
adc
push
cmpsb
pop
out
cltd
jno
leave
adc
bound
mov
add
inc
or
into
ret
push
ljmp
add
test
pop
pop
call
es
and
xor
xor
sub
add
add
add
add
ret
mov
xor
push
add
aas
cmp
pusha
add
add
loope
out
shll
push
add
add
or
jecxz
fidivrs
add
jecxz
inc
add
pop
xor
outsb
add
xor
aam
push
add
dec
push
add
xorb
add
add
aam
add
xor
add
or
ljmp
add
add
mov
or
dec
add
add
aaa
repz
or
adc
fisubrl
add
sub
outsb
add
pop
mov
or
cmp
sbb
adc
sub
or
imul
pop
add
xor
in
mov
add
data16
leave
nop
mov
icebp
test
pop
add
mov
add
jns
or
and
xchg
iret
in
out
xor
js
movsl
inc
add
loope
mov
add
imul
mov
in
add
add
add
out
push
add
mov
adc
mov
add
adc
and
test
aas
in
mov
inc
add
es
mov
xor
mov
mov
ss
negl
add
jmp
mov
add
add
test
mov
jle
movb
or
sbb
repnz
lret
mov
in
jge
sahf
or
stos
incl
push
add
rolb
mov
mov
daa
jnp
add
cltd
mov
add
or
into
push
add
add
ljmp
jp
sbb
jge
xor
add
inc
add
push
add
add
sbb
pop
add
sbb
daa
aad
into
std
mov
mov
or
mov
mov
aaa
sbb
push
cmp
jle
xchg
adcb
int3
shr
jo
push
sub
data16
adc
and
add
rolb
add
repz
add
imul
test
mov
add
add
push
cmp
bound
cmc
ljmp
pop
add
pop
add
movb
jmp
enter
mov
mov
rclb
sbbb
mov
popa
add
pop
add
pop
xchg
mov
enter
je
dec
push
push
push
scas
xor
std
sbb
dec
add
mov
in
inc
add
push
adc
jle
lcall
adc
cld
in
shrl
add
gs
loopne
add
lret
roll
add
add
ljmp
add
add
enter
add
jl
xor
pop
mov
loop
dec
add
enter
psrad
ret
add
add
in
push
add
add
out
scas
iret
xor
shl
and
aad
and
pop
or
test
add
cwtl
inc
push
add
adc
pop
xchg
mov
add
dec
add
arpl
add
add
push
add
rorl
cmp
insb
add
call
or
ret
push
add
add
sbbl
repnz
jns
out
sub
add
in
add
and
pop
add
mov
add
xor
cmpsb
bts
add
test
add
and
or
lret
add
xlat
push
aas
movsl
xchg
push
push
add
mov
sbb
out
imul
add
sbb
mov
xlat
inc
pop
jnp
sub
xor
sarb
mov
inc
add
pop
add
int3
and
mov
movsl
sbbl
inc
add
lds
sbb
adc
sub
popa
vmovaps
mov
shlb
add
nop
xchg
pop
add
mov
sbb
cmp
adc
sub
into
ret
add
inc
add
mov
out
add
lods
scas
lods
push
add
add
add
ret
add
jns
test
mov
add
jmp
mov
jmp
add
adc
bound
in
or
fwait
xor
sub
adc
lods
mov
add
ja
jb
ret
dec
add
or
sbb
mov
cmp
je
mov
mov
imul
add
dec
pop
add
mov
das
cmp
pop
push
add
or
imul
dec
add
add
add
add
in
testb
add
add
add
int3
fs
bound
imul
rorl
dec
add
aam
add
mov
jmp
mov
jecxz
notl
arpl
fcompl
lret
rcrb
aas
aad
mov
sbb
lret
inc
add
add
outsb
add
sti
cmp
or
mov
add
ja
cmpsl
insb
add
add
dec
add
repnz
cwtl
push
mov
fdivs
cld
xchg
jae
mov
and
inc
add
add
add
add
ja
cmpsb
xchg
stc
mov
add
fimull
add
jbe
push
add
dec
add
cmpsb
xchg
jmp
add
iret
jo
pusha
add
jb
out
add
add
inc
add
dec
shlb
pop
jbe
mov
lock
inc
or
leave
dec
call
sti
repz
lret
dec
sbb
aad
add
lret
inc
add
test
add
jae
xchg
or
in
fs
pop
add
insb
add
jmp
mov
xchg
test
add
add
outsb
add
leave
pop
add
sub
je
mov
add
lret
roll
aas
sub
lcall
add
jae
dec
add
lds
add
push
add
xchg
xor
add
arpl
cmp
inc
in
add
adc
xor
sub
cmpsb
xchg
jge
cltd
sar
daa
cmp
mov
add
ret
push
push
add
add
and
sbb
and
arpl
fidivl
std
fdivs
cmc
xchg
cli
pop
sti
inc
sub
mov
mov
push
add
add
jo
xchg
push
add
add
push
add
add
sub
cltd
bound
imul
jp
cmp
in
test
and
pop
pusha
add
jns
mov
sahf
enter
jp
icebp
cld
stc
jge
add
and
xor
add
arpl
add
xor
mov
cmp
and
add
loope
std
xchg
inc
mov
aam
iret
push
add
add
int
enter
push
add
fcmovne
and
stc
test
add
add
push
add
cld
in
mov
add
stos
addr16
mov
add
loopne
inc
add
fisttps
fsubr
mov
cmc
repnz
add
sbb
iret
outsb
add
call
cmp
cmp
xor
xor
push
add
gs
jmp
push
add
xchg
sub
jo
daa
add
add
cmp
adc
loop
popa
xor
into
addr16
add
jg
push
add
add
dec
add
dec
add
ret
loop
mov
pop
add
les
lds
add
loop
add
add
mov
dec
lret
add
shl
std
inc
add
outsl
mov
add
add
or
sti
fsubr
xor
lcall
xor
cmp
add
add
insb
add
sub
push
mov
adc
push
add
add
pop
jo
sti
imull
cmpsl
xlat
add
mov
shrb
xchg
add
int3
mov
add
fwait
mov
mov
mov
push
add
cmpsl
stos
outsb
add
push
and
hlt
jns
mov
popf
orl
lahf
push
add
push
add
ret
aam
jno
inc
add
fwait
aad
xor
xor
jecxz
add
loop
or
insb
add
ljmp
jno
add
out
mov
dec
popa
ss
add
add
add
jmp
adc
add
lcall
pop
add
add
cmp
pop
add
dec
add
push
ljmp
and
add
xchg
mov
leave
add
add
call
dec
add
jns
add
add
test
stos
lcall
cmp
mov
mov
jmp
jae
sbb
or
out
push
sbb
ret
pop
je
dec
add
sahf
sbb
sub
adc
adc
das
inc
add
xor
mov
sub
push
add
pop
test
flds
loop
movsl
mov
lods
xor
inc
push
add
add
fsubrs
and
inc
add
leave
insl
outsl
cwtl
xchg
add
add
nop
xor
mov
dec
add
enter
sbb
sbb
jno
imul
lds
repz
push
add
inc
mov
jnp
dec
add
mov
sbb
test
add
xor
xlat
push
add
add
add
add
testl
jb
pushf
xchg
sbb
xlat
pop
incb
add
jecxz
out
rcll
jmp
lcall
test
idivl
jno
mov
add
add
sub
mov
dec
add
mov
add
adc
jae
add
fcom
or
pop
sub
add
add
add
push
add
sbb
int3
popa
scas
push
loope
aam
sbb
or
fidivs
dec
add
in
mov
push
add
mov
add
and
add
add
int3
shl
mov
jp
rcl
xchg
pop
inc
je
sub
cmp
nop
gs
pushf
cwtl
cltd
xchg
mov
mov
jo
je
pop
add
add
mov
pop
iret
out
pusha
add
sub
cmp
fcoml
scas
jae
add
mov
cmp
mov
notb
cld
jmp
add
popa
sti
sarl
dec
insl
pop
dec
add
arpl
push
mov
inc
aaa
inc
mov
mov
cmpsb
ret
dec
push
add
jle
or
gs
mov
inc
add
add
dec
or
mov
add
add
mov
or
jae
xchg
and
iret
xchg
or
jb
push
add
add
mov
add
xor
fwait
jo
mov
add
push
add
sbbb
dec
push
in
mov
pop
add
add
sub
gs
push
add
stc
mov
add
in
dec
add
add
jmp
and
sub
add
xchg
and
lds
sbb
cmpsl
lea
data16
gs
add
in
rep
in
add
gs
test
lret
dec
xor
xor
xchg
add
jno
mov
add
sub
and
cmp
ljmp
int3
dec
xchg
push
mov
lods
add
or
sub
xchg
pop
ret
add
mov
pusha
add
cmp
inc
add
add
add
int
add
pushf
out
and
adc
dec
add
add
add
adc
mov
in
mov
xchg
push
pop
add
or
and
daa
into
sub
mov
cld
popf
int3
call
dec
clc
cmp
push
gs
add
in
out
jno
popl
xchg
jge
sbb
aaa
jle
xor
adc
sub
je
mov
add
mov
inc
rcrb
call
pop
xor
adc
cltd
sbb
fdivl
jnp
or
cmp
pop
add
into
mov
mov
add
add
push
jae
add
mov
popl
inc
mov
sahf
ja
cmpsb
and
push
add
pushf
jge
aas
xchg
je
xchg
rclb
add
loope
sbb
add
add
add
imul
push
add
in
push
add
inc
push
add
lcall
std
dec
adc
add
xor
popf
pop
cli
or
push
add
mov
enter
cld
jno
add
sub
lds
rorb
add
sub
and
mov
mov
jno
cli
loop
pop
scas
ret
rolb
mov
out
in
and
flds
xor
jbe
icebp
add
stos
js
dec
add
jnp
add
inc
add
push
fld
mov
push
in
je
and
in
add
sbbl
ret
add
push
aas
call
repnz
scas
mov
rorl
sub
xchg
push
iret
push
jle
push
mov
mov
sub
movl
lea
push
clc
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jne
loop
add
push
add
mov
add
add
jmp
movb
add
add
add
add
data16
data16
leave
sbb
out
cmpsb
mov
jb
arpl
mov
push
test
lcall
push
add
push
add
dec
fnsave
dec
add
data16
add
faddl
xlat
jle
sub
add
add
push
add
add
mov
rclb
mov
push
push
add
movsl
cmp
add
add
cmp
dec
aaa
idivb
cmpsb
into
ficompl
cld
loope
call
mov
mov
ficompl
cmp
mov
outsb
add
adc
les
pop
add
adc
jnp
dec
add
pop
add
lds
fists
test
add
add
inc
iret
cmp
inc
scas
push
sahf
fiaddl
cmp
inc
push
add
push
add
int3
mov
test
addl
add
fiaddl
jo
into
jnp
xor
pop
add
test
and
push
cmp
outsb
add
jbe
push
shlb
add
out
jg
insb
add
sbb
fsubs
dec
add
mov
add
data16
xchg
std
jecxz
xchg
test
add
push
add
lahf
add
out
fxch
test
mov
ret
fistpll
imul
insl
xchg
mov
add
popa
das
bound
cmp
sub
je
out
pop
add
ljmp
inc
cmp
cmp
iret
testb
les
outsb
add
ficompl
fwait
sbb
jg
jp
sbbl
sub
cli
jge
pop
xor
ret
sti
cltd
sbbb
cltd
aad
mov
add
filds
add
add
push
add
imull
add
jb
jae
decl
add
inc
add
cmp
sub
jb
push
add
stc
add
mov
dec
add
ss
push
add
mov
mov
jnp
xchg
dec
add
pop
add
sub
cmc
cmp
cmp
int3
inc
pusha
add
lods
add
jecxz
add
add
add
dec
add
or
pusha
add
addb
ret
sbb
add
sub
subb
cwtl
push
add
jo
fidivrl
insb
add
add
shrl
add
aas
shll
adc
add
sub
cmpl
pop
add
movsl
mov
xlat
jnp
cmp
loope
test
cmp
jbe
pop
pop
sbb
hlt
fwait
shrl
fucomp
push
lahf
ror
xchg
adc
or
into
xor
ja
shll
add
dec
jne
out
mov
mov
pop
add
add
jns
mov
adcl
sub
movsb
iret
hlt
sbb
add
icebp
sub
loopne
push
mov
mov
add
add
stc
jns
or
add
pushf
adc
add
add
dec
add
add
frstor
enter
clc
fsub
dec
cmp
jnp
or
add
cmpb
add
jb
cmp
scas
fisttpl
cltd
push
add
or
out
lods
sbb
cmpsl
pop
add
loopne
rorb
add
add
fwait
push
add
adc
add
fnstcw
add
add
add
add
pop
add
data16
fwait
mov
add
add
mov
mov
aas
std
add
into
jp
aam
add
lods
jecxz
add
mov
in
jne
subl
or
sub
add
add
je
addr16
bound
sub
lahf
movsbl
cmpsl
xchg
sbb
jbe
into
fdivrl
fiaddl
lahf
mov
mov
add
pusha
add
fsubrp
sub
lcall
and
jno
mov
add
jno
call
add
sub
les
roll
addr16
xchg
mov
add
cmp
xchg
jecxz
add
add
mov
rorb
add
push
add
push
push
add
shrd
addr16
out
rol
sub
leave
lea
orb
std
lret
cmp
imul
imul
mov
shr
jg
adc
or
mov
pop
mov
ds
mov
orb
sar
cmp
add
cld
or
add
mov
mov
fucomip
add
adc
or
push
xor
add
sbb
cs
cmp
pop
cltd
stos
stos
aam
add
add
mov
add
adc
lea
leave
pushf
add
aaa
icebp
call
jecxz
xlat
or
add
add
popa
jmp
pop
add
test
and
icebp
cmp
js
xor
out
fstps
inc
pop
add
add
pop
mov
add
add
nop
shll
jl
dec
add
jbe
mov
les
pop
add
add
mov
add
add
add
pushf
mov
jae
add
jmp
imul
dec
add
add
dec
add
aas
iret
push
leave
mov
add
lock
mov
xchg
jno
std
add
add
jmp
xchg
fsubrl
inc
add
jnp
mov
sub
arpl
int3
fucomp
mov
mov
add
jl
ret
or
sti
fcmovbe
out
dec
dec
jl
mov
adc
cmp
jle
fscale
jbe
inc
add
adc
pop
add
pop
outsb
add
pop
mov
add
add
add
dec
add
jecxz
add
lret
inc
sbb
pop
push
add
add
xchg
sub
jg
js
or
xchg
adc
and
push
add
sub
push
or
mov
clc
repz
add
add
aaa
shll
js
in
xor
xchg
int3
repz
inc
add
add
scas
imul
xor
jmp
pop
mov
out
jnp
pop
add
inc
test
cltd
cmp
pop
add
sub
cmpl
lods
popa
leave
sti
lock
xorl
lret
inc
jmp
xor
data16
xor
negl
push
pop
xchg
mov
add
and
fsubrl
stos
push
add
add
incb
out
scas
cmpsb
ret
subb
adc
sub
add
pop
add
enter
popa
jmp
add
cmp
icebp
lret
rcr
out
mov
add
inc
add
xor
pop
mov
loopne
sbb
xor
dec
sbb
add
stos
adc
cmp
mov
popa
mov
inc
add
add
lahf
inc
mov
add
icebp
mov
add
mov
mov
add
lea
call
cmpsb
imull
les
cmc
rcrb
cmp
add
add
add
jp
insl
fcomp
nop
daa
xor
add
adc
dec
xor
mov
cmpsl
mov
sub
add
push
cmp
or
cmc
scas
pop
xchg
push
add
add
test
inc
andl
lock
or
add
add
and
push
lret
enter
jl
add
add
add
lods
sub
jb
std
nop
push
add
or
sbb
mov
ja
add
add
add
push
jnp
cwtl
daa
pushf
push
xlat
ret
fstps
push
add
mov
add
jnp
add
and
cmp
cmp
sti
fstl
lcall
lods
bound
pusha
add
add
xor
rcll
add
pop
add
insl
dec
add
pop
insl
addb
mov
mov
and
mov
imul
pushf
and
mov
add
xor
add
repnz
popf
test
jge
add
xor
add
add
out
fistl
outsb
add
and
inc
add
andb
add
push
add
add
inc
add
sub
mov
pop
add
mov
jo
int
sti
add
add
ja
jle
mov
jle
testl
ja
or
lock
jle
ja
insl
mov
push
add
add
xorl
dec
add
push
add
jns
cmp
add
andl
add
in
iret
out
pusha
add
cmpsl
mov
cld
sti
icebp
xchg
mov
add
daa
loop
fisubl
popa
push
add
inc
ss
sub
std
mov
shrl
gs
add
add
xchg
jl
and
push
xor
daa
mov
leave
cmp
jge
andl
sbb
xorl
dec
add
mov
repz
cld
outsb
add
insb
add
mov
add
dec
add
add
in
dec
pop
add
jo
aam
cmp
outsl
dec
xchg
hlt
js
in
xchg
das
push
add
add
data16
push
add
ret
cwtl
stos
lods
adc
mulb
add
sub
mov
xor
add
std
push
add
sbb
xor
das
mov
ja
add
pop
add
bound
xchg
inc
lods
mov
idivl
pop
add
add
or
out
and
add
sub
fstpt
and
dec
dec
add
pop
fidivrs
movsl
and
add
sub
push
add
inc
add
sub
sub
jae
test
jle
clc
call
add
jae
pop
scas
xchg
sub
inc
add
je
pop
add
xchg
adc
or
mov
mov
mov
jne
add
insb
add
cmp
mov
jo
aam
add
repnz
or
push
or
test
sbb
dec
add
test
add
add
sbb
add
add
sbb
subl
test
xchg
mov
add
add
fmull
add
addr16
push
leave
repz
dec
add
iret
scas
sbb
inc
jnp
add
ljmp
add
cs
inc
add
js
sub
mov
mov
std
cmp
cmc
sub
xchg
add
add
add
sbb
sub
xchg
out
in
xchg
insb
add
push
add
test
clc
pop
add
add
lods
and
data16
mov
sub
or
aad
testb
add
add
outsl
ja
add
fldl
add
add
andl
cmp
rcrl
loop
mov
add
push
add
jno
add
repz
dec
add
inc
mov
add
push
add
add
lahf
push
add
mov
xchg
dec
in
shll
add
mov
dec
push
add
test
or
ret
add
jnp
lods
mov
aam
push
lods
push
mov
sarb
add
or
loopne
add
arpl
mov
sub
jle
fstpl
cltd
fcmovnu
push
repnz
add
add
push
add
add
popl
mov
rcr
rcl
push
add
jnp
add
push
add
js
inc
add
add
sub
outsb
add
addl
or
jo
mov
add
lahf
push
xchg
or
push
add
pop
mov
add
pop
add
add
and
mov
je
jg
imul
movsb
add
jo
jae
ljmp
sarb
add
inc
add
sub
int3
xor
add
jae
add
add
in
nop
xchg
push
or
mov
out
adc
sub
mov
int3
in
rol
inc
add
add
add
xchg
add
xor
or
incl
fisttps
mov
or
mov
add
add
sbb
scas
sub
das
or
add
add
or
js
pusha
add
jb
out
imul
add
clc
push
add
das
and
js
jnp
add
mov
cmpsb
mov
cmp
lcall
dec
add
shl
jecxz
mov
les
scas
dec
popa
add
and
jbe
mov
scas
sti
or
xor
pop
jne
push
add
or
push
clc
jmp
int3
aad
add
add
push
add
jp
mov
adc
dec
add
add
sub
mov
test
cmc
jl
stos
xor
test
inc
sbb
dec
add
inc
repnz
add
mov
jne
add
ja
dec
add
scas
divl
test
dec
add
push
insb
add
add
xchg
add
js
lcall
mov
push
add
insb
add
add
add
push
add
lods
cmc
loop
add
add
daa
mov
inc
mov
xchg
inc
lret
sarb
loope
jb
jp
pop
mov
dec
adc
clc
pop
add
xchg
jbe
push
add
mov
pop
dec
push
lcall
add
cltd
mov
add
filds
sbb
mov
outsb
add
push
add
jle
mov
and
inc
sbb
lods
add
add
nop
xor
scas
adc
pop
push
mov
sub
int3
popf
test
xor
push
add
repz
sub
loopne
stos
in
xchg
int
mov
lods
movsb
push
adc
add
pop
mov
add
pop
add
add
xchg
adc
les
xor
repnz
xlat
jno
add
std
in
xchg
hlt
mov
add
pop
and
mov
mov
rorb
mov
iret
xor
ret
xchg
mov
lahf
call
fwait
loop
mov
data16
add
dec
add
clc
repnz
nop
nop
jae
fldl
add
mov
aam
add
clc
repnz
nop
nop
jae
iret
add
pop
les
mov
repnz
nop
nop
jae
add
push
mov
leave
nop
jmp
add
add
add
fistpl
clc
repnz
nop
nop
jae
jg
add
add
push
clc
repnz
nop
nop
jae
add
or
ss
or
adc
mov
xchg
ret
add
mov
add
pop
jbe
jne
push
sub
nop
jmp
das
add
movsb
out
faddl
nop
push
mov
leave
nop
jmp
add
add
push
mov
clc
repnz
nop
nop
jae
fiaddl
add
cmpsb
add
push
and
out
outsl
add
add
add
enter
movb
mov
xchg
ret
or
das
add
mov
add
pushl
push
mov
xchg
ret
add
add
ret
add
arpl
pusha
inc
add
pop
ret
xor
shrl
inc
add
add
out
cltd
mov
clc
repnz
nop
nop
jae
mov
add
clc
repnz
nop
nop
jae
add
sub
add
add
cld
nop
nop
jae
add
add
add
jns
sbb
add
push
mov
xchg
ret
or
fnsave
add
mov
clc
repnz
nop
nop
jae
add
outsb
add
jl
and
repnz
nop
nop
jae
popf
push
sub
add
leave
cmp
nop
push
mov
leave
nop
jmp
cmpsl
add
cwtl
push
add
pop
add
add
add
nop
jmp
add
cltd
or
nop
push
mov
leave
nop
jmp
add
stos
add
cltd
mov
popl
mov
leave
nop
jmp
add
movsb
sub
pop
inc
add
add
in
xor
mov
clc
repnz
nop
nop
jae
pop
add
add
ret
push
clc
repnz
nop
nop
jae
add
add
fdivl
insb
inc
jb
clc
repnz
nop
nop
jae
sarl
stos
shl
nop
push
mov
leave
nop
jmp
cltd
or
out
add
lds
cld
nop
nop
jae
add
out
push
add
cmp
jle
icebp
xor
clc
repnz
nop
nop
jae
fidivl
fiaddl
or
nop
nop
jae
add
add
add
in
leave
nop
jmp
sub
add
add
dec
add
je
clc
repnz
nop
nop
jae
add
cmpl
leave
nop
jmp
add
movsb
jg
fld1
push
mov
xchg
ret
addb
mov
cmpsl
add
add
clc
repnz
nop
nop
jae
shl
add
add
lock
clc
repnz
nop
nop
jae
sub
jge
dec
add
imul
clc
repnz
nop
nop
jae
jmp
mov
popf
outsl
mov
clc
repnz
nop
nop
jae
mov
or
fwait
push
mov
xchg
ret
add
add
stos
add
in
sub
clc
repnz
nop
nop
jae
add
add
test
clc
repnz
nop
nop
jae
stos
mov
add
js
cmpsl
mulps
nop
jmp
add
add
add
or
movzwl
clc
repnz
nop
nop
jae
pop
add
add
add
add
clc
repnz
nop
nop
jae
cltd
pop
add
outsb
add
add
pusha
nop
inc
add
add
add
mov
push
mov
xchg
ret
add
sbb
repnz
nop
nop
jae
jmp
xor
add
add
repnz
nop
nop
jae
out
fiaddl
out
add
mov
xchg
ret
add
cmpsl
xor
add
clc
repnz
nop
nop
jae
or
ret
add
push
ss
repz
clc
repnz
nop
nop
jae
add
cmpsb
out
jge
xlat
rep
clc
repnz
nop
nop
jae
add
add
sbb
lret
nop
push
mov
leave
nop
jmp
or
add
in
sub
mov
push
nop
push
mov
leave
nop
jmp
iret
add
add
clc
repnz
nop
nop
jae
out
add
scas
add
nop
push
mov
leave
nop
jmp
cltd
or
out
fstps
inc
add
add
rcr
out
es
clc
repnz
nop
nop
jae
add
add
dec
das
dec
add
lss
clc
repnz
nop
nop
jae
add
push
mov
xchg
ret
in
or
or
pop
add
test
mov
clc
repnz
nop
nop
jae
jns
add
mov
add
nop
push
mov
leave
nop
jmp
pop
add
jg
fildl
cmp
pop
sub
push
mov
leave
nop
jmp
cmpsb
add
repnz
nop
nop
jae
pop
add
addb
rcr
call
nop
jae
add
add
add
add
push
mov
xchg
ret
push
sbb
popf
add
adc
nop
nop
jae
add
sbb
je
inc
add
cltd
es
xchg
add
js
push
add
push
clc
repnz
nop
nop
jae
movsb
cmpsl
add
jle
add
cli
jle
push
mov
clc
repnz
nop
nop
jae
add
add
xor
sub
test
and
add
repnz
nop
nop
jae
xchg
out
addr16
clc
repnz
nop
nop
jae
add
add
or
jl
xchg
fwait
push
mov
xchg
ret
add
push
addb
add
add
add
lock
push
push
mov
xchg
ret
add
pop
pop
add
nop
push
mov
leave
nop
jmp
std
fisttpl
or
in
sub
clc
repnz
nop
nop
jae
add
dec
nop
push
mov
leave
nop
jmp
add
add
add
or
pop
mov
nop
push
mov
leave
nop
jmp
std
add
decl
add
int3
leave
fwait
nop
push
mov
leave
nop
jmp
or
xor
jg
add
mov
leave
nop
jmp
add
add
xor
add
mov
xchg
ret
or
add
stos
or
pop
push
clc
repnz
nop
nop
jae
add
out
add
lods
out
call
clc
repnz
nop
nop
jae
iret
std
add
xchg
mov
push
mov
xchg
ret
pop
jge
cltd
add
sbb
clc
add
ds
push
mov
xchg
ret
mov
xor
cmp
outsl
mov
nop
push
mov
leave
nop
jmp
decl
add
push
ja
clc
repnz
nop
nop
jae
add
add
xchg
pop
clc
repnz
nop
nop
jae
add
in
out
add
cmpsb
add
in
leave
nop
jmp
or
add
clc
repnz
nop
nop
jae
mov
in
push
fstpt
jns
shrb
mov
xchg
ret
pop
add
add
or
add
nop
push
mov
leave
nop
jmp
add
jge
cmp
pop
add
and
xorb
jbe
clc
repnz
nop
nop
jae
cltd
add
add
mov
dec
sub
repnz
nop
nop
jae
js
add
xor
xor
nop
push
mov
leave
nop
jmp
add
add
movsb
or
add
sbb
mov
add
pop
or
push
mov
leave
nop
jmp
mov
add
pop
xor
push
mov
leave
nop
jmp
add
push
add
add
cmp
mov
clc
repnz
nop
nop
jae
xor
add
data16
inc
and
repnz
nop
nop
jae
add
add
out
sahf
xor
repnz
nop
nop
jae
jle
pop
add
jg
and
clc
repnz
nop
nop
jae
pop
jns
jge
call
push
mov
xchg
ret
add
add
jae
inc
adc
repnz
nop
nop
jae
add
add
in
add
clc
repnz
nop
nop
jae
incl
or
add
add
jmp
out
das
add
add
or
add
add
add
popa
inc
add
add
movsb
incl
or
sub
icebp
clc
repnz
nop
nop
jae
add
add
add
add
push
mov
call
clc
repnz
nop
nop
jae
mov
add
jae
push
es
jecxz
repnz
nop
nop
jae
add
stos
add
jno
dec
sub
repnz
nop
nop
jae
outsl
add
popf
pop
mov
add
imul
or
add
repnz
nop
nop
jae
or
add
cld
nop
nop
jae
ss
out
fldl
fldl
pop
add
add
repz
clc
repnz
nop
nop
jae
add
add
add
ret
dec
add
add
jg
nop
push
mov
leave
nop
jmp
add
add
jmp
add
nop
push
mov
leave
nop
jmp
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
or
add
adc
clc
repnz
nop
nop
jae
add
add
sbb
or
repnz
nop
nop
jae
add
push
or
or
out
push
push
mov
xchg
ret
pop
add
sub
jle
out
add
clc
repnz
nop
nop
jae
xor
cmpsb
iret
or
mov
push
mov
xchg
ret
iret
sub
movsb
add
pop
out
call
iret
or
nop
jae
in
xchg
jge
jg
push
mov
xchg
ret
add
add
add
add
ss
repnz
repnz
nop
nop
jae
jge
add
push
push
mov
xchg
ret
add
or
js
std
out
xchg
nop
push
mov
leave
nop
jmp
out
jge
jge
pop
pop
shrb
mov
add
repnz
nop
nop
jae
fiaddl
ds
call
out
out
clc
clc
repnz
nop
nop
jae
or
add
repnz
nop
nop
jae
popf
cmpsb
add
xchg
add
mov
jmp
decl
add
add
add
repnz
nop
nop
jae
add
add
add
fld1
nop
push
mov
leave
nop
jmp
add
add
fldt
xor
add
push
mov
xchg
ret
xor
in
push
mov
leave
nop
jmp
xchg
add
add
add
add
shlb
or
add
repnz
nop
nop
jae
movsb
add
nop
push
mov
leave
nop
jmp
jns
add
pop
add
test
cld
nop
nop
jae
pop
in
xchg
fsts
repnz
nop
nop
jae
add
in
add
mov
and
dec
pop
nop
push
mov
leave
nop
jmp
add
add
mov
xchg
ret
or
push
es
in
jne
clc
repnz
nop
nop
jae
add
cltd
mov
mov
adc
repnz
nop
nop
jae
jmp
in
std
in
jmp
add
clc
repnz
nop
nop
jae
roll
enter
jb
clc
repnz
nop
nop
jae
xor
or
add
clc
repnz
nop
nop
jae
add
adc
stos
pusha
inc
add
add
mov
push
xchg
fld1
clc
repnz
nop
nop
jae
cmpsb
add
add
add
xor
push
pop
mov
push
mov
xchg
ret
add
add
add
sub
push
clc
repnz
nop
nop
jae
jns
cmpsb
pop
push
call
lret
inc
div
nop
push
mov
leave
nop
jmp
ds
add
mov
add
and
mov
push
push
mov
xchg
ret
js
add
add
pop
add
cmc
pusha
nop
push
mov
leave
nop
jmp
add
push
iret
add
add
fsubrp
in
pop
clc
repnz
nop
nop
jae
roll
push
popf
or
imul
nop
nop
jae
add
jns
or
cmc
call
clc
repnz
nop
nop
jae
add
push
add
add
clc
repnz
nop
nop
jae
or
or
movsb
add
or
push
add
es
add
movsb
add
sbb
mov
xchg
ret
add
add
add
clc
repnz
nop
nop
jae
sub
push
add
add
rorl
add
repnz
nop
nop
jae
add
sub
xchg
nop
push
mov
leave
nop
jmp
add
pop
jge
adc
repnz
nop
nop
jae
std
add
or
push
in
clc
repnz
nop
nop
jae
xchg
jmp
add
or
add
nop
nop
jae
ss
iret
fldl
cmpsb
add
cmp
push
mov
leave
nop
jmp
out
add
add
mov
sbb
clc
repnz
nop
nop
jae
fildl
or
add
popa
push
mov
xchg
ret
add
add
add
mov
mov
clc
repnz
nop
nop
jae
roll
out
ret
test
nop
push
mov
leave
nop
jmp
add
add
pop
add
addr16
add
xor
add
add
push
mov
xchg
ret
add
add
popf
add
add
nop
nop
jae
add
add
add
cmpsb
add
add
push
or
repnz
nop
nop
jae
xchg
popf
add
add
dec
cmp
add
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
addb
add
xorps
xchg
ret
add
sub
add
mov
jg
nop
push
mov
leave
nop
jmp
std
add
imul
cmp
repnz
nop
nop
jae
pop
js
add
cld
imul
push
mov
xchg
ret
js
add
xchg
xchg
fwait
nop
push
mov
leave
nop
jmp
add
mov
add
mov
add
push
push
mov
xchg
ret
add
out
in
pop
add
lret
clc
repnz
nop
nop
jae
das
add
jmp
cltd
jo
cld
nop
nop
jae
add
add
popf
add
movsb
lods
xor
cwtl
ljmp
mov
leave
nop
jmp
add
out
push
pop
push
xchg
jne
nop
push
mov
leave
nop
jmp
add
es
add
sub
clc
repnz
nop
nop
jae
add
add
es
jle
push
add
add
aad
sar
mov
xchg
ret
add
out
rcrl
nop
jae
cltd
mov
add
add
out
cmpsl
add
nop
push
mov
leave
nop
jmp
iret
push
pop
add
jns
add
mov
push
mov
xchg
ret
out
add
or
in
leave
nop
jmp
add
add
add
or
into
inc
mov
clc
repnz
nop
nop
jae
add
pop
jmp
add
push
push
mov
xchg
ret
add
popf
jns
push
add
frstor
mov
xchg
ret
mov
popf
add
add
int3
jno
jg
nop
push
mov
leave
nop
jmp
pop
add
or
add
dec
add
repnz
nop
nop
jae
add
out
add
pop
add
or
das
mov
clc
repnz
nop
nop
jae
std
popf
add
jmp
js
repnz
nop
nop
jae
iret
out
jge
add
sub
clc
repnz
nop
nop
jae
or
add
xchg
and
clc
repnz
nop
nop
jae
add
or
clc
repnz
nop
nop
jae
pop
xor
cmp
and
arpl
repnz
nop
nop
jae
or
sub
add
inc
add
add
jg
add
out
add
push
nop
push
mov
leave
nop
jmp
mov
xchg
popf
adc
or
movsb
cltd
pop
nop
push
mov
leave
nop
jmp
jge
std
cmpsl
xchg
push
popf
add
addr16
clc
repnz
nop
nop
jae
or
ret
out
add
xor
xchg
ret
popf
in
push
jns
jg
dec
dec
push
mov
xchg
ret
in
fistpl
or
mov
loopne
inc
add
add
add
pop
mov
push
mov
xchg
ret
add
add
add
add
mov
rep
push
mov
xchg
ret
add
cltd
pop
sub
add
nop
push
mov
leave
nop
jmp
pop
add
std
movsb
ds
add
nop
push
mov
leave
nop
jmp
pop
jg
lock
test
nop
push
mov
leave
nop
jmp
jg
fcmove
xor
je
sub
repnz
nop
nop
jae
push
add
ds
cwtl
sbb
sbb
clc
repnz
nop
nop
jae
add
add
sbb
cmpsb
incl
std
out
add
add
sbb
mov
mov
add
nop
push
mov
leave
nop
jmp
fcmovu
popf
std
xchg
mov
cld
nop
nop
jae
or
pop
add
pop
add
daa
mov
clc
repnz
nop
nop
jae
sbb
add
push
push
mov
xchg
ret
or
movsb
out
fimull
pop
add
mov
push
mov
leave
nop
jmp
add
xor
add
std
mov
clc
repnz
nop
nop
jae
add
adc
add
rcrl
add
cmpsl
add
xchg
sub
push
push
add
jle
cmp
add
and
mov
jle
add
fiaddl
ds
push
clc
repnz
nop
nop
jae
or
sbb
add
mov
clc
repnz
nop
nop
jae
add
std
push
add
mov
pop
push
mov
xchg
ret
popf
add
xchg
add
add
add
nop
nop
jae
popf
add
add
das
out
add
clc
repnz
nop
nop
jae
in
das
add
add
pop
xor
int
mov
add
add
cwtl
cmp
lcall
incb
add
or
das
add
jg
or
add
add
mov
clc
repnz
nop
nop
jae
add
add
bound
and
cld
nop
nop
jae
add
add
and
repnz
nop
nop
jae
stos
mov
add
nop
push
mov
leave
nop
jmp
add
cmpsl
std
sbb
repz
push
mov
xchg
ret
add
add
ret
clc
repnz
nop
nop
jae
add
add
fiaddl
fimull
out
push
push
mov
xchg
ret
in
jg
add
add
rolb
add
not
push
mov
xchg
ret
cmpsl
add
mov
push
add
push
add
adc
mov
popl
clc
repnz
nop
nop
jae
pop
add
out
ss
mov
clc
repnz
nop
nop
jae
rol
shll
push
push
mov
xchg
ret
push
add
cmpb
jg
loop
add
les
in
leave
nop
jmp
in
mov
out
add
pop
push
mov
xchg
ret
out
popf
add
add
jg
addb
int3
push
mov
xchg
ret
add
add
add
or
pop
push
nop
push
mov
leave
nop
jmp
std
ret
out
add
jns
lret
add
clc
repnz
nop
nop
jae
add
add
push
in
mov
push
mov
xchg
ret
add
xor
push
push
mov
xchg
ret
cltd
jle
add
std
fiaddl
imul
jmp
sbb
imul
nop
push
mov
leave
nop
jmp
add
fld1
clc
repnz
nop
nop
jae
add
add
fidivrl
xor
push
mov
xchg
ret
add
push
cltd
sub
les
push
mov
xchg
ret
popf
add
movsb
std
movsb
add
nop
nop
jae
sub
add
add
cltd
add
or
nop
jmp
pop
mov
popf
or
lods
pop
nop
push
mov
leave
nop
jmp
das
fnsave
pop
add
push
add
repnz
nop
nop
jae
add
add
jg
mov
jb
inc
add
jmp
add
add
xor
repnz
nop
nop
jae
or
add
add
or
mov
push
mov
xchg
ret
add
add
add
jne
jmp
add
add
add
add
push
add
mov
clc
repnz
nop
nop
jae
xchg
push
add
add
mov
clc
repnz
nop
nop
jae
fisubl
addb
push
xchg
jne
push
mov
xchg
ret
adc
add
or
add
push
mov
leave
nop
jmp
add
in
or
mov
rep
clc
repnz
nop
nop
jae
add
add
add
cltd
in
or
enter
xchg
add
nop
push
mov
leave
nop
jmp
xor
xor
jle
lds
mov
xchg
ret
mov
popf
mov
push
add
repnz
nop
nop
jae
add
add
add
sub
test
push
mov
xchg
ret
popf
das
add
cmp
sbb
nop
push
mov
leave
nop
jmp
add
pop
add
add
push
clc
repnz
nop
nop
jae
fildl
add
repnz
add
sub
sarb
add
ja
add
out
add
sti
mov
clc
repnz
nop
nop
jae
das
sub
add
sti
pop
clc
repnz
nop
nop
jae
add
pop
add
push
mov
adc
add
mov
jge
push
loopne
add
add
mov
clc
repnz
nop
nop
jae
sub
pop
add
add
mov
nop
push
mov
leave
nop
jmp
add
fldl
movb
push
mov
leave
nop
jmp
add
add
std
cs
jle
imul
cld
nop
nop
jae
in
add
dec
add
mov
nop
nop
jae
sbb
cmpsl
push
jge
mov
push
mov
xchg
ret
or
add
insb
add
fwait
push
mov
xchg
ret
or
jg
add
push
push
mov
xchg
ret
fistpl
add
iret
or
jns
inc
and
push
mov
leave
nop
jmp
add
pop
addb
sbb
insb
add
es
clc
repnz
nop
nop
jae
add
mov
test
push
mov
xchg
ret
add
add
add
add
stos
subl
nop
push
mov
leave
nop
jmp
ret
stos
add
std
xchg
stc
add
nop
jmp
std
jge
or
jl
aas
push
push
mov
xchg
ret
js
push
add
jg
std
add
xor
push
mov
xchg
ret
push
mov
jle
add
outsl
cmp
icebp
jne
add
addb
push
add
add
push
and
add
in
mov
out
add
and
nop
jae
add
add
sbb
cmpl
jae
jns
add
mov
cld
nop
nop
jae
add
jmp
popf
pop
adc
popa
clc
repnz
nop
nop
jae
popf
out
rorl
out
add
test
nop
push
mov
leave
nop
jmp
in
ss
jle
add
lea
nop
push
mov
leave
nop
jmp
or
add
add
sbb
cmp
mov
mov
push
mov
xchg
ret
add
std
pushl
repz
nop
push
mov
leave
nop
jmp
add
mov
movswl
clc
repnz
nop
nop
jae
mov
rep
nop
push
mov
leave
nop
jmp
std
or
add
add
mov
repnz
nop
nop
jae
ss
xor
push
mov
xchg
ret
push
in
out
add
add
pop
mov
clc
repnz
nop
nop
jae
mov
add
add
add
clc
repnz
nop
nop
jae
std
out
xor
jmp
add
xor
xchg
incl
push
roll
pop
add
or
nop
nop
jae
adc
jns
add
add
loop
clc
repnz
nop
nop
jae
push
xchg
add
or
clc
repnz
nop
nop
jae
jg
push
iret
adc
inc
add
clc
repnz
nop
nop
jae
add
xor
repnz
nop
nop
jae
push
mov
add
add
addb
push
mov
xchg
ret
add
add
movsb
add
sub
stos
sbb
pop
push
push
mov
xchg
ret
out
add
insl
mov
clc
repnz
nop
nop
jae
add
pop
add
add
fidivrs
movsb
push
mov
xchg
ret
or
stos
add
add
push
mov
xchg
ret
push
add
std
mov
add
insl
call
clc
repnz
nop
nop
jae
add
sbb
ljmp
add
add
cltd
jge
add
repnz
repnz
nop
nop
jae
add
popf
add
js
inc
je
clc
repnz
nop
nop
jae
cmpsl
std
std
or
repnz
nop
nop
jae
cltd
add
out
add
add
add
mov
leave
nop
jmp
add
roll
std
jmp
push
lods
ret
adcl
add
nop
push
mov
leave
nop
jmp
mov
in
dec
nop
push
mov
leave
nop
jmp
jmp
fildl
pop
add
add
in
clc
repnz
nop
nop
jae
pop
add
inc
call
nop
push
mov
leave
nop
jmp
ret
add
push
loopne
add
push
mov
xchg
ret
or
push
add
jo
xchg
mov
clc
repnz
nop
nop
jae
in
add
outsl
sub
pand
push
mov
xchg
ret
mov
xchg
sub
xchg
add
adc
mov
xchg
ret
or
cmpsb
jle
add
cltd
add
dec
add
add
clc
repnz
nop
nop
jae
mov
sub
repz
xchg
ret
out
pop
add
add
jbe
push
mov
xchg
ret
add
iret
adc
jmp
add
in
leave
nop
jmp
add
add
mov
add
add
ja
add
add
bound
add
add
push
add
cld
nop
nop
jae
add
xor
jge
jle
fld1
clc
repnz
nop
nop
jae
jg
popf
ss
push
mov
xchg
ret
out
or
add
push
clc
repnz
nop
nop
jae
pop
xchg
out
add
in
movzwl
push
mov
xchg
ret
cltd
add
dec
shr
clc
repnz
nop
nop
jae
incl
add
add
or
sbb
push
mov
leave
nop
jmp
add
in
add
mov
notb
pop
add
clc
repnz
nop
nop
jae
std
outsl
add
pop
push
cmp
add
nop
push
mov
leave
nop
jmp
dec
add
lods
push
mov
xchg
ret
add
add
sbb
add
sbb
mov
add
repnz
nop
nop
jae
add
jge
add
outsl
cmp
push
add
nop
push
mov
leave
nop
jmp
xor
std
add
out
add
add
clc
repnz
nop
nop
jae
popf
add
xchg
sub
pop
add
add
pop
nop
push
mov
leave
nop
jmp
adc
ss
adc
subb
clc
repnz
nop
nop
jae
xchg
add
out
stos
add
call
clc
repnz
nop
nop
jae
add
add
cwtl
loope
call
inc
add
add
add
jge
stos
mov
add
nop
push
mov
leave
nop
jmp
das
add
add
cmpsl
add
clc
repnz
nop
nop
jae
add
or
add
jmp
or
repnz
nop
nop
jae
add
add
sub
out
clc
repnz
nop
nop
jae
jmp
push
xor
cmpsb
add
in
add
add
clc
repnz
nop
nop
jae
pop
mov
mov
add
inc
clc
repnz
nop
nop
jae
add
iret
or
ss
add
add
add
sbb
pop
or
repnz
nop
nop
jae
std
add
std
add
add
cmpsb
cltd
fistpl
clc
repnz
nop
nop
jae
push
in
out
add
add
nop
jmp
mov
add
xchg
mov
mov
xchg
ret
mov
add
push
add
mov
add
add
add
add
or
add
add
repnz
nop
nop
jae
mov
add
in
cmp
int3
dec
pop
clc
repnz
nop
nop
jae
or
add
add
add
clc
repnz
nop
nop
jae
add
pop
add
or
jno
add
mov
adc
add
add
add
icebp
rol
nop
push
mov
leave
nop
jmp
mov
add
xor
xor
sbb
push
mov
leave
nop
jmp
add
pop
sub
add
mov
push
mov
xchg
ret
add
jns
add
mov
xchg
ret
add
push
add
add
orl
mov
jge
fiaddl
out
ss
dec
push
push
mov
xchg
ret
add
add
xor
or
add
sbb
data16
add
push
std
mov
push
test
sub
push
mov
xchg
ret
or
xor
out
add
lods
fs
add
in
out
add
fst
add
clc
repnz
nop
nop
jae
pop
push
xor
pop
add
clc
repnz
nop
nop
jae
or
popf
std
add
shll
mov
push
mov
leave
nop
jmp
xor
movsb
mov
add
add
roll
mov
xchg
ret
add
add
pop
or
test
repnz
nop
nop
jae
sbb
shrl
repnz
nop
nop
jae
das
add
roll
lods
push
mov
xchg
ret
ss
add
add
add
ja
clc
repnz
nop
nop
jae
add
add
or
pop
add
push
nop
push
mov
leave
nop
jmp
or
ret
std
or
or
push
clc
repnz
nop
nop
jae
add
add
pop
add
inc
inc
add
repnz
nop
nop
jae
push
mov
or
aad
inc
and
nop
push
mov
leave
nop
jmp
add
fisttpll
add
jmp
out
mov
add
push
in
add
ds
sbb
pause
push
mov
leave
nop
jmp
mov
xor
xchg
add
clc
repnz
nop
nop
jae
das
push
add
fildl
jl
js
mov
push
mov
xchg
ret
pop
out
add
add
add
mov
leave
nop
jmp
rcrl
jno
ret
mov
xchg
ret
sub
add
ds
xchg
inc
mov
clc
repnz
nop
nop
jae
or
add
xor
push
mov
xchg
ret
cmpsl
add
add
add
add
clc
repnz
nop
nop
jae
out
add
out
es
xchg
xchg
ret
movsb
add
add
add
mov
add
dec
jne
nop
push
mov
leave
nop
jmp
std
popf
jle
sbb
repnz
nop
nop
jae
movsb
jge
add
add
cmpsb
cmpsb
and
nop
push
mov
leave
nop
jmp
sbb
add
cld
nop
nop
jae
add
add
push
add
cmp
nop
push
mov
leave
nop
jmp
add
add
jg
add
add
xor
push
mov
xchg
ret
in
add
fnsetpm(287
outsl
sub
addl
clc
repnz
nop
nop
jae
sub
add
outsl
sub
clc
repnz
nop
nop
jae
iret
jle
add
add
mov
subl
clc
repnz
nop
nop
jae
add
add
mov
push
clc
repnz
nop
nop
jae
stos
sub
out
fistpl
clc
repnz
nop
nop
jae
add
add
xchg
mov
in
rclb
mov
xchg
ret
movsb
out
add
in
jge
push
nop
push
mov
leave
nop
jmp
add
add
xor
call
inc
add
push
jle
movsb
or
ss
add
add
push
mov
xchg
ret
add
iret
add
adc
sti
mov
clc
repnz
nop
nop
jae
add
js
add
je
clc
repnz
nop
nop
jae
fldl
out
shr
clc
repnz
nop
nop
jae
add
push
add
add
push
mov
nop
nop
jae
addb
add
mov
add
xor
nop
push
mov
leave
nop
jmp
add
pop
jns
add
gs
nop
push
mov
leave
nop
jmp
add
roll
push
mov
xchg
ret
add
stos
add
xchg
add
add
repz
clc
repnz
nop
nop
jae
pop
mov
xor
mov
leave
nop
jmp
jge
add
out
out
aaa
mov
clc
repnz
nop
nop
jae
adc
mov
call
clc
repnz
nop
nop
jae
add
out
xor
clc
repnz
nop
nop
jae
add
popf
add
xchg
je
nop
push
mov
leave
nop
jmp
outsl
add
sub
xchg
inc
add
cmpsb
add
std
pop
xchg
add
lret
clc
repnz
nop
nop
jae
cmpsb
add
add
in
jge
add
jns
mov
or
add
mov
xor
sti
movswl
clc
repnz
nop
nop
jae
add
outsl
in
in
mov
clc
repnz
nop
nop
jae
add
outsl
push
add
loop
nop
push
mov
leave
nop
jmp
or
adc
add
jno
sar
cld
nop
nop
jae
jns
mov
add
out
je
clc
repnz
nop
nop
jae
stos
outsl
cltd
out
pop
clc
repnz
nop
nop
jae
pushl
add
insb
add
push
mov
xchg
ret
ret
add
mov
jge
add
add
push
mov
xchg
ret
fiaddl
fiaddl
or
test
mov
leave
nop
jmp
add
sti
jne
clc
repnz
nop
nop
jae
add
pop
push
add
out
je
clc
repnz
nop
nop
jae
xor
push
mov
xchg
ret
add
or
popf
add
add
add
jne
clc
repnz
nop
nop
jae
add
repnz
nop
nop
jae
pop
add
add
mov
push
fmull
in
leave
nop
jmp
iret
jge
add
or
sahf
push
add
push
clc
repnz
nop
nop
jae
mov
in
add
outsl
or
nop
nop
jae
js
add
add
pop
cmpsl
cmp
xchg
mov
clc
repnz
nop
nop
jae
add
push
add
push
add
clc
repnz
nop
nop
jae
add
cmpsl
pop
pop
push
mov
xchg
ret
add
jg
add
or
cltd
fistpl
mov
xchg
ret
or
pop
cmpsb
jmp
fildl
add
mov
nop
push
mov
leave
nop
jmp
add
add
sub
jmp
repnz
nop
nop
jae
pop
std
add
add
xchg
imul
clc
repnz
nop
nop
jae
out
add
jge
add
and
add
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
pop
std
das
add
fildl
push
add
sub
nop
nop
jae
add
add
jmp
add
aaa
add
clc
repnz
nop
nop
jae
push
ret
in
out
mov
clc
repnz
nop
nop
jae
add
outsl
xor
mov
xor
nop
push
mov
leave
nop
jmp
add
jg
push
nop
push
mov
leave
nop
jmp
out
stos
std
cmpsl
add
pop
repnz
mov
clc
repnz
nop
nop
jae
sub
add
add
adc
push
mov
xchg
ret
add
sbb
cmpsl
xchg
pop
push
mov
xchg
ret
pop
add
mov
add
add
mov
xchg
ret
add
ret
add
add
lods
lock
push
mov
leave
nop
jmp
ffree
add
xor
push
mov
xchg
ret
stos
push
add
std
ret
add
add
inc
add
mov
xchg
ret
add
pop
mov
mov
add
push
push
mov
xchg
ret
fildl
push
pop
add
add
mov
dec
clc
repnz
nop
nop
jae
add
add
add
add
test
add
push
mov
xchg
ret
or
in
sbbb
inc
lock
push
mov
leave
nop
jmp
add
js
add
daa
mov
clc
repnz
nop
nop
jae
add
sbb
add
push
push
mov
xchg
ret
add
add
ss
push
add
clc
repnz
nop
nop
jae
add
movsb
add
or
push
nop
push
mov
leave
nop
jmp
add
pop
cltd
xchg
es
cmpsb
repz
clc
repnz
nop
nop
jae
js
add
or
out
mov
add
lea
repnz
nop
nop
jae
fiaddl
add
std
ss
jle
mov
add
clc
repnz
nop
nop
jae
add
ret
mov
fisubl
clc
repnz
nop
nop
jae
out
add
add
jg
add
add
repnz
nop
nop
jae
pop
add
fcmove
or
mov
insb
lcall
add
dec
add
call
or
jae
out
pop
iret
add
mov
xchg
dec
mov
clc
repnz
nop
nop
jae
or
or
popf
subb
mov
cld
nop
nop
jae
add
add
or
add
cwtl
or
cld
nop
nop
jae
or
add
add
add
mov
jnp
add
add
nop
jae
add
jmp
lock
xor
clc
repnz
nop
nop
jae
add
or
fildl
add
mov
clc
repnz
nop
nop
jae
add
movsb
add
add
clc
repnz
nop
nop
jae
jle
add
add
ds
push
mov
xchg
ret
add
fildl
add
add
add
cld
nop
nop
jae
jmp
es
add
add
mov
clc
repnz
nop
nop
jae
jg
rcr
movsb
jns
test
repnz
nop
nop
jae
pop
add
add
add
ja
clc
repnz
nop
nop
jae
cmpsl
xchg
add
in
add
push
pop
push
mov
xchg
ret
outsl
add
add
push
push
mov
xchg
ret
add
fcmovnu
add
add
ret
out
mov
fdivrp
call
nop
jmp
pop
popf
add
sbb
stc
jg
std
add
cmpsl
or
out
add
add
cld
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
or
or
pop
mov
xchg
nop
push
mov
leave
nop
jmp
iret
add
add
add
add
push
mov
xchg
ret
add
jle
cmpsb
js
push
add
clc
repnz
nop
nop
jae
add
cltd
and
add
stos
clc
repnz
nop
nop
jae
add
add
pop
add
add
add
cld
nop
nop
jae
add
add
fsts
push
mov
leave
nop
jmp
stos
add
mov
test
jae
repnz
nop
nop
jae
add
add
mov
sbb
nop
push
mov
leave
nop
jmp
roll
add
push
add
jp
int3
mov
repnz
nop
nop
jae
cmpsl
std
fildl
jg
test
mov
xchg
ret
adc
add
mov
add
push
push
mov
xchg
ret
add
out
iret
ds
add
inc
clc
repnz
nop
nop
jae
iret
add
add
add
std
adc
dec
jmp
sub
add
add
jge
or
add
add
push
mov
leave
nop
jmp
stos
push
add
add
clc
repnz
nop
nop
jae
outsl
push
in
add
shl
clc
repnz
nop
nop
jae
fldl
in
add
testb
jmp
clc
repnz
nop
nop
jae
add
nop
mov
call
nop
jae
stos
add
out
pop
or
add
add
je
nop
push
mov
leave
nop
jmp
cltd
std
add
pushf
cmp
call
nop
jmp
add
cmp
sbb
clc
repnz
nop
nop
jae
add
or
pop
or
cld
nop
nop
jae
add
xor
mov
mov
clc
repnz
nop
nop
jae
shrl
jns
sbb
inc
add
cmp
mov
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
add
jg
call
stos
push
clc
repnz
nop
nop
jae
xchg
add
addb
add
pop
push
nop
push
mov
leave
nop
jmp
fnsave
adc
fistpl
clc
repnz
nop
nop
jae
add
in
add
xor
pusha
add
push
mov
leave
nop
jmp
sub
add
or
add
mov
xchg
ret
or
pop
out
add
or
mov
clc
repnz
nop
nop
jae
add
add
sub
mov
leave
nop
jmp
add
ret
add
jmp
sub
clc
repnz
nop
nop
jae
add
add
cltd
add
add
leave
nop
jmp
add
add
xchg
outsl
pop
nop
push
mov
leave
nop
jmp
mov
addb
movsb
add
push
push
clc
repnz
nop
nop
jae
stos
sub
fcmovnu
lea
clc
repnz
nop
nop
jae
cmpsl
add
add
add
clc
repnz
nop
nop
jae
fiaddl
ret
jmp
add
fistpl
clc
repnz
nop
nop
jae
cmpsb
sub
add
icebp
add
clc
repnz
nop
nop
jae
xor
add
add
mov
cmpl
nop
push
mov
leave
nop
jmp
add
or
add
push
clc
repnz
nop
nop
jae
add
fiaddl
or
js
pusha
clc
repnz
nop
nop
jae
out
pop
ds
add
add
push
mov
xchg
ret
in
rcll
rorb
daa
add
clc
repnz
nop
nop
jae
mov
add
das
ds
add
add
clc
repnz
nop
nop
jae
std
add
rorl
popa
push
clc
repnz
nop
nop
jae
xor
add
add
add
and
cmc
cmp
nop
push
mov
leave
nop
jmp
fldl
ret
pusha
add
fcompl
jb
clc
repnz
nop
nop
jae
in
movsb
or
loopne
clc
repnz
nop
nop
jae
pop
add
pop
add
dec
nop
push
mov
leave
nop
jmp
mov
loopne
add
adc
repnz
nop
nop
jae
add
add
add
mov
xchg
ret
or
add
add
js
fsubrs
in
leave
nop
jmp
pop
cltd
add
add
push
mov
add
add
lea
mov
fwait
push
push
mov
xchg
ret
fildl
popf
add
push
pop
movsb
fisubs
add
push
mov
xchg
ret
jg
add
add
ds
add
inc
and
clc
repnz
nop
nop
jae
pop
add
sub
mov
outsb
and
repnz
nop
nop
jae
fcmovnu
das
add
lcall
push
push
mov
xchg
ret
add
add
add
pop
add
mov
dec
nop
push
mov
leave
nop
jmp
sbb
popf
xchg
add
lds
push
add
addl
adc
inc
mov
clc
repnz
nop
nop
jae
mov
jg
add
sub
nop
jmp
add
add
xor
repnz
nop
nop
jae
or
sbb
clc
repnz
nop
nop
jae
add
mov
mov
push
add
in
sub
add
repnz
nop
nop
jae
cmpsb
add
add
in
push
sbb
sub
aas
call
clc
repnz
nop
nop
jae
add
xor
insb
add
add
mov
jg
ret
pop
or
mov
add
incl
mov
push
mulb
xor
clc
repnz
nop
nop
jae
add
pop
and
nop
push
mov
leave
nop
jmp
sarl
jns
clc
repnz
nop
nop
jae
out
pop
push
es
add
push
add
add
jne
clc
repnz
nop
nop
jae
xchg
pop
push
sti
xor
push
mov
xchg
ret
add
add
cmp
nop
nop
jae
stos
mov
pop
std
sub
inc
add
xchg
fdivr
repnz
nop
nop
jae
pop
iret
add
je
clc
repnz
nop
nop
jae
add
in
lea
clc
repnz
nop
nop
jae
add
jle
add
addr16
clc
repnz
nop
nop
jae
add
xor
sbb
mov
mov
xchg
ret
outsl
add
add
xor
fld1
clc
repnz
nop
nop
jae
pop
sub
add
add
shll
push
mov
leave
nop
jmp
add
std
add
push
or
sahf
fisubl
add
rclb
jno
add
das
add
std
cmpsl
add
dec
mov
clc
repnz
nop
nop
jae
add
std
add
adc
nop
nop
jae
jge
pop
in
popf
add
dec
add
repz
repnz
nop
nop
jae
add
pop
add
add
push
clc
repnz
nop
nop
jae
popf
out
adc
pop
add
add
clc
repnz
nop
nop
jae
pop
fildl
std
popf
out
lods
push
mov
xchg
ret
add
add
or
xor
clc
repnz
nop
nop
jae
ret
add
mov
push
mov
xchg
ret
pushl
add
rcrl
mov
add
clc
repnz
nop
nop
jae
add
sbb
movsb
sub
leave
pop
nop
push
mov
leave
nop
jmp
add
add
add
roll
ror
mov
clc
repnz
nop
nop
jae
add
in
or
idiv
incl
push
cmpsb
incl
cmpsl
add
jne
clc
repnz
nop
nop
jae
add
sar
pushl
nop
push
mov
leave
nop
jmp
add
pop
add
push
call
clc
repnz
nop
nop
jae
or
out
popf
pop
mov
clc
repnz
nop
nop
jae
add
push
push
add
repnz
nop
nop
jae
movsb
sarl
add
clc
repnz
nop
nop
jae
pop
add
add
insb
xor
nop
push
mov
leave
nop
jmp
add
jns
loopne
jne
nop
push
mov
leave
nop
jmp
add
push
adc
inc
add
nop
push
mov
leave
nop
jmp
add
pop
add
add
fisttpl
nop
nop
jae
xor
frstor
add
das
dec
push
clc
repnz
nop
nop
jae
popf
in
movsb
add
fimull
push
clc
repnz
nop
nop
jae
or
or
xor
clc
repnz
nop
nop
jae
add
add
jp
nop
push
mov
leave
nop
jmp
mov
cltd
out
lea
clc
repnz
nop
nop
jae
or
xor
in
bound
pop
pop
clc
repnz
nop
nop
jae
add
push
add
push
add
or
incl
outsl
std
sbb
or
add
out
insb
add
repnz
nop
nop
jae
push
out
add
add
fistpl
nop
push
mov
leave
nop
jmp
add
push
add
or
nop
nop
jae
das
add
add
test
nop
push
mov
leave
nop
jmp
add
add
or
adc
nop
nop
jae
add
add
popf
decl
repnz
nop
nop
jae
or
jge
push
add
add
clc
repnz
nop
nop
jae
add
out
add
add
pop
pop
nop
push
mov
leave
nop
jmp
or
ret
roll
rcrl
add
jb
pop
mov
nop
push
mov
leave
nop
jmp
add
pop
add
push
add
repnz
nop
nop
jae
add
add
add
mov
clc
repnz
nop
nop
jae
jg
out
daa
pop
push
mov
xchg
ret
add
add
add
out
xor
jb,pt
nop
push
mov
leave
nop
jmp
jle
push
add
pop
push
mov
xchg
ret
add
add
outsl
pop
or
add
xchg
cli
clc
repnz
nop
nop
jae
or
pop
add
repnz
nop
nop
jae
add
push
std
add
push
call
nop
jmp
or
mov
inc
pop
clc
repnz
nop
nop
jae
cltd
fiaddl
jns
out
iret
jmp
clc
clc
repnz
nop
nop
jae
pop
add
cld
icebp
add
clc
repnz
nop
nop
jae
add
stc
clc
repnz
nop
nop
jae
add
add
add
cld
nop
nop
jae
add
or
push
out
xor
repnz
nop
nop
jae
add
add
add
hlt
rorb
pop
call
nop
jmp
das
add
push
push
mov
xchg
ret
stos
jge
add
sbb
jne
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
std
sub
add
pop
iret
mov
nop
push
mov
leave
nop
jmp
sub
or
add
in
mov
add
add
jns
add
push
add
push
sti
into
xor
enter
push
add
int
add
fildl
clc
pop
loope
add
push
mov
and
mov
fwait
movsl
and
push
add
aam
adcb
add
and
sti
popa
into
mov
xor
jl
add
add
sbb
or
pop
mov
sahf
push
add
push
add
add
xor
pop
add
sti
jp
cmp
test
mov
inc
add
push
add
pop
inc
add
push
popf
divl
sub
popa
and
sbb
in
jne
add
cmp
xchg
mov
cmp
push
add
inc
add
and
gs
inc
sahf
test
jne
xchg
pop
add
outsl
push
outsb
add
enter
add
inc
lds
pushf
sti
bound
std
movhps
mov
add
lcall
add
add
pushf
pop
sbb
cmp
mov
dec
add
movsl
ja
add
add
mov
cmpl
andl
add
add
loopne
add
cld
loope
shrb
lds
mov
add
mov
add
icebp
mov
add
xor
add
xchg
push
add
add
aam
scas
insb
add
cmova
jge
sub
ljmp
icebp
inc
add
add
push
add
cmp
push
out
lods
mov
enter
inc
and
fiaddl
xchg
cmp
icebp
hlt
leave
and
daa
pushf
cltd
jmp
fsubrl
add
mov
xor
mov
inc
add
js
stc
add
roll
add
fildl
mov
mov
pop
adc
mov
in
mov
jnp
add
add
fwait
mov
add
in
cmp
mov
orl
add
xor
stos
add
call
add
add
dec
and
cmpsl
jno
jbe
fdiv
mov
add
cltd
jo
jb
fwait
lock
add
push
add
outsl
ljmp
and
jl
movsl
mov
dec
add
dec
add
mov
insb
add
xorl
bound
mov
sbbl
add
aad
add
jmp
push
add
iret
lock
test
aas
sub
clc
mov
xor
sub
mov
cmp
sbb
mov
xor
mov
mov
pop
movsb
adc
mov
popf
mov
cmpsl
xchg
scas
mov
sub
nop
aas
ja
movsb
movsl
mov
sbb
call
add
lods
add
jae
push
add
pusha
add
movsb
and
scas
sti
mov
ret
add
inc
movsb
pop
in
push
add
push
mov
adc
movsb
pop
dec
repz
mov
add
add
inc
add
out
dec
ret
mov
add
lock
jg
add
aas
sbb
add
xchg
subl
add
adc
mov
aad
add
jno
lock
cmp
in
test
add
cmp
adc
aaa
repz
sbb
add
jle
stc
push
add
add
ja
add
pop
gs
xchg
mov
add
movb
add
out
insb
add
data16
xor
cmc
rorl
add
movsl
rorl
movsl
jnp
sbb
mov
or
jmp
pop
imul
add
lahf
xchg
jmp
and
inc
add
lods
mov
add
or
sub
jg
add
lret
and
or
rcr
inc
jo
mov
add
popf
dec
add
xorl
add
mov
jnp
ja
loope
fcompl
xor
lds
fcmovnb
mov
adc
pop
add
add
add
mov
push
test
repnz
sahf
mov
sub
mov
ret
and
lcall
outsl
daa
leave
pop
add
add
add
lds
add
out
xchg
into
popf
roll
dec
mov
xchg
cmp
sub
or
add
inc
add
push
add
bound
add
addr16
adc
loop
mov
mov
cli
cmp
and
lret
das
test
add
mov
addr16
cmpsb
mov
leave
and
mov
int
adc
sahf
mov
popa
in
fildll
inc
add
add
aas
mov
add
std
std
iret
push
add
add
rcrl
add
iret
dec
test
mov
mov
mov
add
pop
add
aam
pop
mov
into
in
pop
add
scas
pop
add
add
add
add
xchg
fmul
cmp
das
mov
add
into
mov
test
fstpt
xor
sub
cmc
scas
adc
stos
clc
pop
add
test
add
inc
dec
add
daa
mov
aaa
inc
xor
mov
rolb
out
shr
or
rcll
add
dec
data16
movsb
dec
add
push
add
xor
repz
jge
lock
mov
and
inc
add
sarb
scas
jp
shrb
add
mov
cmpsb
lcall
add
or
and
cmp
mov
dec
push
or
mov
daa
pop
add
nop
mov
mov
add
push
add
andb
add
mov
repnz
add
add
test
pop
adcl
add
add
add
add
stc
jne
js
inc
add
test
repz
ret
movsl
rclb
ret
out
add
iret
or
push
add
add
lcall
add
xchg
popf
mov
mov
add
scas
fwait
cmpsl
lcall
add
xchg
iret
aam
add
add
dec
cmp
pop
or
dec
sbb
xor
add
sbb
mov
add
add
rcrb
andb
push
sbb
test
push
add
dec
enter
jmp
push
add
icebp
xchg
andl
test
popa
dec
cli
enter
add
mov
fisttps
testl
add
push
add
fisubrs
outsb
add
push
xor
sub
jg
loopne
push
add
add
xchg
and
hlt
aam
add
adc
adc
lret
mov
cltd
aas
xor
or
jecxz
sbb
repnz
add
insb
add
add
add
inc
mov
shl
stos
int
clc
inc
jl
addl
int3
cmp
jp
push
add
hlt
dec
scas
stc
mov
or
sub
sbb
int
fiaddl
pop
popa
xor
stos
adc
push
add
add
frstor
mov
cli
mov
lcall
jle
dec
lods
aam
jle
iret
loop
adc
ljmp
sbb
ljmp
add
jg
add
add
aas
inc
add
clc
mov
mov
add
mov
push
add
add
push
dec
mov
enter
add
cmpsb
adcb
ret
mov
lods
aas
pop
add
pop
movsl
or
dec
xchg
cmpsl
loope
add
add
lock
fwait
cmp
or
push
out
mov
insb
add
test
fwait
std
or
push
add
fdiv
mov
add
pop
dec
add
adc
repz
ret
pop
aaa
jae
mov
jns
lcall
dec
mov
adc
addr16
add
rcl
xlat
push
add
icebp
loopne
push
add
add
lcall
push
cwtl
bound
mov
gs
add
or
pop
sbb
mov
fisttpl
add
push
push
add
outsl
mov
add
cli
push
add
enter
add
out
loope
adc
sti
sarb
add
mov
jne
sti
test
add
repnz
push
add
sbb
dec
add
fldl
jle
add
mov
mov
movsb
sub
cmp
test
pop
jl
sarl
dec
add
sbb
test
lock
cmovno
loopne
add
sub
add
dec
add
or
outsl
dec
mov
int
shll
lcall
movsb
addl
sbb
push
add
add
out
push
add
fscale
stos
lds
in
jmp
add
cmc
bswap
add
mulb
add
in
lcall
xchg
mov
rcrb
jmp
add
leave
pop
dec
add
mov
jo
push
add
jne
fstpt
test
iret
scas
andb
pop
aas
cli
dec
add
cmp
and
add
cmp
mov
add
add
add
out
dec
add
add
xor
sub
cmp
sub
loop
inc
add
add
add
mov
stos
cld
aas
jmp
push
add
lds
fs
out
add
sbb
add
add
imul
add
add
cmp
je
daa
dec
jne
lock
popf
inc
lret
mov
jnp
les
add
push
add
icebp
jg
add
xor
push
addr16
push
hlt
jmp
adc
sbb
xchg
pop
fadds
out
cld
daa
inc
leave
mov
mov
mov
fidivs
xor
cwtl
in
lret
adc
int
add
xor
xchg
and
cmp
add
std
mov
dec
push
add
loopne
add
add
andb
add
add
lds
out
icebp
cmpsl
dec
fisttps
fisubrs
ja
add
sub
push
pop
insb
add
incb
mov
pop
xchg
sti
pop
clc
call
mov
push
jl
dec
lret
into
enter
mov
jae
adc
popa
outsl
xchg
movsb
push
add
mov
add
add
push
add
jle
neg
add
add
cmp
cwtl
movsl
pop
enter
into
add
insl
xor
in
sbb
and
cli
imul
add
das
push
dec
dec
add
sub
xor
inc
add
jbe
loop
out
push
add
add
add
arpl
xchg
pop
add
push
add
add
adc
pcmpgtb
stos
mov
push
add
je
pop
add
aas
cmp
mov
cmp
add
rcrl
sbb
enter
xor
xchg
lret
jns
add
cmp
mov
lods
adc
and
xor
xor
sarb
inc
push
into
stc
movsl
mulb
add
push
xor
jns
lret
jecxz
loopne
add
inc
add
and
repnz
lret
scas
xchg
mov
adc
data16
add
xor
jo
jmp
mov
mov
ljmp
inc
add
add
mov
adc
mov
sbb
jmp
add
xchg
mov
sbb
push
in
add
aaa
nop
loop
add
push
add
scas
adc
lret
sbb
insb
add
stos
scas
cmp
jb
push
add
movsb
and
int
add
jmp
add
pop
add
mov
movsl
mov
pop
xchg
add
add
mov
mov
add
add
mov
dec
inc
add
sub
push
inc
add
addl
push
add
add
test
jge
repnz
insl
jmp
add
xor
aam
add
lds
dec
add
mov
sub
sarl
imul
add
mov
push
add
push
add
leave
xor
aas
aaa
xlat
dec
add
pop
aaa
mov
add
cmp
lods
dec
and
hlt
mov
sub
nop
outsb
add
push
push
lahf
jns
in
ss
jbe
cld
jle
out
pop
jmp
mov
cmp
jae
add
gs
mov
mov
in
into
in
add
pushf
add
hlt
adc
popf
mov
gs
mov
add
loope
add
cmp
imul
add
add
add
push
dec
inc
rcll
fucomi
ret
aaa
cltd
test
xchg
jge
or
jle
xchg
mov
aas
scas
mov
xchg
xor
fstps
test
fadds
add
rcll
enter
adcb
mov
pop
add
push
add
or
nop
xlat
negl
or
out
push
add
add
add
push
add
popf
and
arpl
jp
xor
fimuls
fmull
shll
add
sahf
cli
repz
xchg
in
test
sbb
inc
add
cltd
or
sbb
and
push
add
add
bound
notb
sbb
repz
sub
rcr
jl
into
out
sti
sarl
add
xor
mov
and
enter
dec
add
dec
sbb
cmpl
iret
ds
adc
pusha
add
in
sbb
cltd
mov
mov
jl
inc
push
add
pushf
insl
cld
hlt
mov
imul
mov
sbb
adc
add
shl
add
dec
add
loop
iret
std
add
rorb
sbb
adc
notl
sub
dec
push
jmp
orl
or
fstl
add
addr16
aam
add
in
xchg
mov
cmp
inc
pop
sub
test
fcomp
cmc
mov
add
push
movl
cmc
scas
or
cld
push
add
mov
repnz
mov
das
add
shlb
add
popa
lock
add
add
sahf
out
mov
add
les
inc
add
pusha
add
shrl
fwait
inc
jne
add
add
add
test
subb
inc
jne
arpl
cmc
mull
sub
pop
cmp
push
add
adc
nop
lret
shl
add
hlt
xor
or
sub
xlat
movsl
std
pop
add
fidivrl
rcll
fwait
xchg
jecxz
aas
or
add
add
add
mov
xchg
test
add
inc
add
lret
add
enter
push
pop
lods
aaa
sbb
aad
jg
add
adc
sti
loop
dec
test
neg
rcll
pop
add
cmp
aam
xor
mov
aam
or
dec
loopne
les
add
insl
sbb
push
add
add
add
jo
cmpsb
dec
inc
or
add
pop
push
add
fidivs
nop
cld
xadd
add
push
add
lods
loope
cmp
stc
sarl
adc
dec
mov
sbb
mov
inc
sti
leave
or
test
inc
ja
shr
test
dec
add
pusha
add
int3
bswap
bound
ret
add
sbbb
adc
push
add
and
int
jecxz
icebp
or
lods
loop
mov
inc
mov
int
jmp
sbb
or
jecxz
mull
add
adc
les
mov
add
add
add
add
inc
add
add
add
dec
or
call
add
and
xchg
lock
xor
aaa
addr16
add
jge
add
sbb
add
pop
add
mov
add
or
xchg
inc
add
add
add
nop
mov
xchg
movsl
adc
dec
add
cli
test
scas
or
insl
sbb
xchg
mov
mov
jbe
dec
ret
lods
mov
add
add
bound
test
andb
mov
xchg
dec
test
data16
mov
icebp
ret
adc
push
add
inc
lea
adc
shr
cltd
mull
ja
lahf
or
into
jne
mov
test
js
faddp
xor
or
aam
add
iret
mov
add
sbb
add
push
add
repz
shll
pop
adc
sub
dec
mov
add
add
sub
stos
sahf
mov
add
pop
pusha
add
fwait
push
and
mov
mov
add
sub
xchg
sbb
adc
mov
add
lahf
clc
add
gs
push
add
cmp
adc
or
loop
imul
mov
adcb
xlat
das
inc
add
add
pop
add
shll
add
or
xchg
in
inc
hlt
movsb
mov
bound
stos
daa
cld
pop
add
mov
sub
or
adc
stc
mov
add
lea
add
imul
add
jge
test
int3
and
sbbb
add
test
inc
add
add
xchg
add
in
mov
jmp
sbb
xchg
cld
xchg
fwait
pop
and
sbb
pop
add
add
pop
add
add
loop
scas
mov
inc
add
mov
sub
in
add
add
add
dec
inc
jae
add
dec
add
jno
and
popf
xor
xor
dec
add
aam
sub
aaa
mov
add
jb
or
int3
xor
lods
xchg
bound
sarb
push
add
dec
cmp
pop
lea
mov
add
loopne
jmp
fisttpll
jle
sbb
outsb
add
add
xchg
ret
and
in
test
test
xorb
add
jecxz
add
jmp
ret
xchg
ret
mov
add
add
mov
add
shlb
sub
dec
add
addb
rcrb
repnz
aam
dec
add
cmp
add
into
out
and
inc
push
add
cmpsb
in
pop
dec
stos
sbb
shll
pushf
inc
and
fmul
pop
cwtl
push
mov
popa
leave
fsubr
ret
sub
int3
dec
add
lret
test
subb
stc
dec
add
data16
jbe
stos
jmp
add
loop
add
adc
shll
cmp
xchg
xchg
ljmp
add
inc
add
mov
add
or
scas
inc
add
inc
xchg
addr16
pop
add
sub
xchg
adc
cmc
push
add
add
add
test
pop
sub
stc
fcmovu
out
das
cli
leave
cmp
idivl
fwait
test
pop
cmpsb
push
add
add
or
add
pop
hlt
in
xor
cwtl
lret
js
xchg
sub
sbb
ja
push
mov
xor
pop
cld
pop
inc
add
push
push
add
and
mov
incb
add
lret
add
cmpsl
enter
adc
cmp
or
inc
add
xor
ret
or
mov
leave
add
sti
data16
add
add
pop
fidivl
add
xchg
or
in
inc
sub
test
add
test
test
das
frndint
xchg
ljmp
add
inc
packssdw
add
pmaxsw
test
out
in
rorl
movsb
xor
dec
add
add
dec
add
fs
int3
ret
inc
fstpt
dec
cld
add
xlat
jl
xchg
cltd
repnz
jnp
jno
cli
lret
add
lahf
adc
add
movsb
in
mov
stos
pop
add
add
dec
add
aam
ljmp
dec
push
add
cli
lret
add
loopne
sub
addb
add
in
shlb
jo
gs
fwait
xor
cli
adcl
add
fwait
pop
add
mov
dec
add
jg
out
mov
and
sahf
mov
push
add
sbbl
popf
hlt
mov
mov
add
loope
add
add
add
stc
cmpsl
rorb
xor
fwait
jle
mov
fnstsw
add
add
fildl
xor
dec
popa
adc
idivl
inc
add
aad
add
adc
cld
lock
xchg
add
int
in
cmc
ret
mov
and
dec
adc
sub
ret
sub
fcomi
adc
dec
add
inc
add
stc
pop
add
sub
test
mov
scas
mov
mov
dec
mov
push
add
enter
test
lods
daa
ljmp
stc
outsb
add
pop
add
ja
ja
cmp
add
in
jns
fwait
popf
sbbl
mov
movsl
mov
add
insb
add
inc
les
lock
add
add
subb
fsubl
cld
cltd
mov
and
push
xchg
cltd
repnz
add
lcall
in
dec
add
aaa
push
add
add
sub
scas
inc
xlat
movb
add
add
add
and
loope
add
inc
add
cmp
inc
cmpb
je
dec
imul
add
mov
or
jbe
jbe
out
inc
dec
fstl
mov
push
jle
andb
add
jbe
sbb
movsl
aam
lea
push
add
add
xchg
lret
adc
hlt
adc
mov
xchg
fsubrs
or
dec
xor
inc
add
fwait
int3
das
mov
xchg
add
jle
mov
add
ljmp
mov
add
popa
sbb
sbb
loope
rorb
jle
fnsave
add
adc
sub
addr16
lods
fnstcw
add
sub
dec
add
xor
adc
lret
add
scas
jae
add
mov
movsb
or
mov
aam
add
pop
add
cmc
test
arpl
add
pop
add
mov
enter
sbbb
ret
push
add
cli
cmpsb
flds
sahf
ret
ja
loop
push
add
loope
out
add
sbb
daa
mov
pop
add
std
aad
xchg
lcall
in
repz
jb
jae
fwait
orb
add
add
arpl
add
add
mov
and
lcall
cltd
ja
add
mov
sbb
cld
insl
repnz
test
in
dec
add
mov
add
leave
inc
pop
add
jl
lds
scas
mov
shrb
add
add
push
add
hlt
jns
lds
xchg
daa
jne
xchg
loope
dec
in
js
and
pop
pop
mov
mov
jns
mov
jle
inc
add
pop
insl
cltd
mov
push
add
add
idivl
out
add
push
add
mov
add
and
fcompl
mov
sub
inc
add
add
mov
fwait
shl
cwtl
jnp
into
xchg
push
pushf
bound
mov
add
add
mov
je
xor
add
test
add
cmp
jge
add
or
icebp
cmp
jae
test
rorb
mov
or
sub
jbe
xor
adc
pop
inc
inc
cli
cli
or
fsubr
fstl
mov
inc
xlat
shlb
clc
adcb
add
add
cmp
fnstenv
leave
mov
add
push
add
dec
or
fiadds
iret
movsl
lea
ret
adcl
fimull
mov
out
nop
inc
hlt
xchg
jg
lret
add
add
mov
mov
add
mov
mov
add
ja
lahf
imul
sbb
jnp
inc
add
cmc
pop
std
xchg
andb
push
lods
into
into
lods
dec
add
xor
cmp
sub
inc
lea
mov
add
pop
add
cli
inc
dec
add
add
xchg
call
scas
pop
or
movsb
mov
add
inc
add
call
push
add
xchg
push
add
cltd
inc
adc
jb
mov
jl
aaa
pop
in
jno
icebp
out
sahf
insl
add
or
xor
cmp
pop
add
xor
sahf
cli
xor
sarb
adc
add
add
lock
add
dec
and
push
add
add
loop
mov
imul
sbb
mov
sti
xchg
pop
add
pop
add
ds
cli
cwtl
sbb
cmp
jnp
add
xor
cwtl
xchg
in
mov
out
mov
add
pop
outsl
stos
or
push
adc
add
cmp
add
gs
push
ret
add
adc
sub
and
push
add
pop
repz
icebp
push
lods
mov
mov
pop
lret
jle
sub
loopne
lods
adc
cwtl
xor
les
dec
add
add
sbbb
jecxz
cli
fdivrs
cmp
out
xchg
out
add
ret
adc
jno
adc
rolb
mov
add
repnz
sar
mov
push
xchg
mov
adc
outsl
adc
pop
jbe
mov
add
jmp
dec
add
add
cmp
sub
push
add
and
jb
imul
repnz
or
mov
cmp
sbb
add
xchg
mov
add
dec
add
into
dec
add
idivb
cmp
push
stos
divb
into
pop
mov
jg
add
add
add
add
imul
xor
fnstcw
pop
int
add
inc
sub
je
fidivs
add
add
lds
jns
add
add
int
add
lods
mov
insl
cmp
cwtl
jp
cmp
sub
pusha
add
xchg
mov
xor
add
add
adc
pop
sbb
mov
add
pop
into
cmp
xchg
xchg
push
pop
data16
xorl
out
sub
mov
bound
stos
mov
loope
add
cwtl
lods
xor
xlat
mov
cld
pop
add
insl
test
add
cli
adc
pop
add
add
sub
push
push
adc
test
cld
jge
xor
out
arpl
loop
add
cwtl
inc
imul
scas
jnp
cmp
xchg
cmp
gs
jae
add
mov
add
pushf
idiv
or
add
addl
add
scas
nop
sbb
sbb
mov
das
dec
into
dec
call
cmp
add
xor
out
lret
sbb
and
insb
add
stos
adc
int3
or
mov
add
or
mov
xchg
lods
cmpsb
fiadds
imul
mov
adc
dec
mov
add
ljmp
add
test
adc
adc
add
add
call
adc
int3
das
test
imul
sbb
lods
popf
mov
lret
pop
add
cli
lret
add
add
jno
sbb
sbb
in
mov
loope
add
add
mov
inc
aas
imul
add
lret
popa
push
add
add
in
int3
push
mov
jmp
add
cmp
fwait
scas
sbb
lods
push
add
and
orl
enter
add
push
inc
iret
mov
lds
push
add
push
fisubrl
add
sbb
test
test
pop
insb
add
scas
roll
add
in
clc
out
mov
cmp
push
add
out
loop
add
mov
nop
inc
add
jecxz
or
add
add
xchg
jbe
xchg
data16
movsl
in
add
inc
fnstenv
add
mov
add
add
add
leave
scas
push
mov
sahf
cltd
mov
add
lock
repnz
xorb
out
add
mov
add
xor
mov
add
fiaddl
pop
add
xchg
sub
add
lret
mov
hlt
adc
jo
xor
mov
add
pop
sbb
xchg
test
daa
pop
add
js
cmp
mov
in
sbb
cmp
das
sbb
sahf
pop
mov
xchg
movsb
cmpsl
jns
push
add
add
add
lods
pop
add
mov
add
popa
lds
in
or
rorb
add
add
lds
cmp
mov
daa
adc
aad
shll
pop
sbb
dec
add
add
in
fmul
inc
add
push
add
divps
popf
rcll
or
push
add
add
dec
mov
mov
adc
sub
psrld
jno
add
fbstp
add
cmp
shrl
shlb
add
add
bound
adc
outsl
sbb
insl
ret
mov
add
cmp
mov
add
add
add
fisubl
subl
or
add
cmpsl
orl
pop
test
push
lds
add
mov
push
add
add
and
mov
push
jae
dec
out
add
add
cld
sbb
iret
out
pop
add
out
jge
mov
mov
add
add
mov
xchg
dec
sti
xchg
sbb
frstor
pop
add
add
icebp
popa
sbbl
jns
mov
incl
add
add
jb
push
add
sub
testb
push
add
push
fsubrl
fsubrs
add
add
push
dec
push
add
int
scas
decl
int3
and
push
add
inc
out
add
fstl
and
xchg
loop
fwait
pop
jl
es
inc
mov
mov
inc
scas
bound
add
add
mov
cmpsl
mov
ret
fidivrl
mov
ret
and
xchg
cvtdq2ps
push
dec
je
and
sti
push
add
mov
push
add
add
jle
loope
icebp
jo
push
stos
mov
bound
adc
jo
scas
js
or
jns
add
sub
add
add
push
add
iret
sbb
add
jl
sub
jo
mov
stos
sub
or
insl
jo
into
inc
xor
cmp
lods
test
add
xor
dec
add
add
add
test
add
lds
repnz
adc
or
jnp
add
outsl
add
add
decl
test
mov
inc
dec
aam
add
std
stc
lock
dec
add
int
leave
inc
add
rcll
sbb
add
outsb
add
add
add
sbb
insl
sub
mov
add
test
insl
pmovmskb
inc
repz
jne
cld
xor
sub
xor
cli
shrb
stos
jecxz
test
addr16
and
lret
jl
sub
and
cmpsb
cltd
imul
xor
xorb
dec
add
sub
push
add
add
add
int
add
xchg
daa
cs
pusha
add
push
add
lock
add
add
fcmovnu
lea
mov
add
movsl
mov
cmp
or
mov
sub
in
add
add
push
add
xchg
mov
add
mov
iret
xchg
sbb
or
cmpsb
out
mov
pop
add
sub
xchg
stc
aad
aas
jg
mov
and
jp
add
add
add
cltd
testb
dec
xchg
xor
or
sub
arpl
inc
add
push
mov
add
and
jbe
jne
fldenv
mov
ja
jecxz
add
icebp
pop
jnp
add
cli
roll
inc
add
cli
mov
aad
std
xor
imul
dec
mov
add
mov
and
xor
mov
xor
outsb
add
xor
fists
movb
and
ja
icebp
xor
mov
add
enter
add
outsb
add
icebp
and
cmp
add
mov
mov
add
arpl
add
push
pop
add
mov
dec
inc
add
add
xor
add
pop
gs
add
mov
jbe
lahf
decb
add
lea
add
popf
fstl
push
add
aad
add
rorl
jg
add
inc
add
inc
add
loope
add
add
nop
dec
add
add
jecxz
add
push
xchg
in
data16
jmp
inc
add
add
dec
leave
push
add
jg
push
jo
das
jnp
add
shrl
xor
bound
mov
popf
add
dec
add
popf
mov
dec
add
mov
add
xor
sti
mov
out
subb
mov
loop
xlat
add
dec
add
pusha
add
aam
adc
jle
out
push
add
mov
add
cld
aad
add
enter
jb
sub
lcall
push
daa
cs
push
ds
icebp
jne
hlt
jle
inc
inc
xchg
sbb
jp
or
movsb
cmp
push
and
icebp
scas
imul
in
sbb
adc
adc
jnp
add
jae
test
add
sub
ja
loop
lret
mov
sub
add
inc
lods
jne
add
add
mov
in
or
push
add
pop
scas
xor
in
or
stos
dec
leave
xchg
mov
add
cmp
and
lock
cmp
mov
stc
or
jle
repz
add
add
shlb
dec
add
ret
push
mov
add
adc
das
shrb
inc
lahf
ja
mov
jne
add
rcr
mul
dec
add
add
daa
mov
xlat
xor
dec
sbb
sub
mov
fsub
in
dec
add
shlb
je
aad
test
or
dec
sub
jne
add
add
mov
outsl
pop
pop
add
xchg
adc
sbb
lds
cmp
jbe
add
movsb
pusha
add
push
add
dec
add
add
sub
daa
movsb
add
outsl
mov
mov
lds
roll
xchg
call
pop
add
aaa
jo
in
mov
push
ret
mov
push
xchg
mov
add
adc
jb
aas
xchg
sbb
in
call
add
stc
or
jb
lret
add
adc
inc
shrl
mov
pop
and
xchg
jne
add
popl
add
daa
inc
add
lcall
cmc
inc
add
inc
cmp
mov
orl
add
mov
loope
cwtl
std
cmpsb
gs
mov
sub
mov
jne
sbb
add
repnz
sbb
cld
loopne
loop
lods
sub
aam
add
sub
mov
jge
add
jae
cmpsb
ret
xor
add
jmp
add
xor
jg
inc
or
data16
add
cmp
push
add
add
mov
ds
loope
add
mov
add
fmulp
out
xor
subb
leave
mov
mov
bnd
pop
add
in
mov
cmp
lods
mov
add
or
mov
adc
insl
jnp
add
xor
dec
cmp
adc
ficomps
push
push
add
xor
add
movsb
and
outsb
add
in
mov
fistps
into
or
dec
push
add
jno
jo
in
cli
mov
push
add
or
cltd
aaa
das
call
add
call
nop
nop
mov
shlb
cwtl
out
std
sub
aad
xchg
popa
or
add
cmp
xchg
int3
mov
dec
and
xor
scas
mov
mov
dec
add
add
ret
push
push
cmc
add
add
gs
je
lahf
loop
scas
push
les
add
or
xor
icebp
dec
add
and
add
mov
and
add
jbe
jmp
add
and
add
jecxz
inc
add
add
icebp
adc
cli
dec
add
test
push
add
sbb
cwtl
mov
out
add
adc
leave
je
inc
repz
mov
mov
add
add
add
add
test
pushf
cmp
cld
cmp
or
iret
jle
xchg
pop
mov
push
add
test
mov
xor
pop
xchg
jmp
pop
movsb
xorb
shrl
jp
sahf
cmp
pop
add
add
add
stos
push
add
aas
cltd
in
xor
lods
rol
mov
mov
push
leave
sbb
cmpsl
aas
mov
lret
or
pop
add
inc
add
ret
add
add
push
add
fdivrl
int
sarb
xchg
loope
add
js
add
add
outsb
add
dec
mov
add
add
imul
sbb
pinsrw
xor
aas
insl
test
lds
and
and
mov
ret
dec
add
out
popa
push
insb
add
mov
xchg
mov
fsubrs
xchg
pop
inc
add
stos
jae
imul
shlb
mov
add
adc
mov
or
aas
fidivs
xchg
xor
add
mov
faddl
lcall
jle
xor
ret
cmpl
add
add
adc
push
add
sub
pop
push
pop
outsl
add
sub
pop
add
add
mov
add
add
fisubrl
add
call
fcomps
jb
scas
xchg
leave
dec
mov
in
sbb
add
dec
dec
jae
fwait
aam
mov
test
mov
pop
add
outsl
mov
xchg
add
jo
ja
dec
add
pop
jb
lds
stos
mov
mov
rcrl
push
add
cld
dec
xor
add
test
pop
sarb
add
cmp
push
add
adc
pop
xor
mov
jno
outsb
add
add
arpl
add
add
pop
add
mov
push
add
xchg
scas
cmp
mov
stos
dec
add
scas
ljmp
idivl
jmp
push
add
bound
xlat
sarl
xchg
mov
pop
rorb
fdivrl
add
add
xlat
lods
push
add
or
test
sub
jbe
cmp
mov
out
jae
add
nop
xchg
in
adc
out
dec
cmp
jmp
sub
iret
inc
add
mov
rorl
add
add
adc
add
xor
notl
pop
bound
test
pop
inc
add
arpl
and
dec
outsl
aaa
cmp
sahf
sub
xchg
jmp
add
add
or
hlt
jb
mov
add
add
sbb
xlat
jle
cmp
fistps
xor
in
sbb
or
and
cli
add
inc
movsb
shrb
push
add
and
add
mov
in
push
shll
cmpsl
push
add
lcall
add
pop
fisttps
mov
out
push
sbb
mov
sub
cltd
test
pop
fnsave
add
sbb
into
cmp
pop
xchg
xchg
add
or
mov
add
mov
sub
lods
lods
jne
enter
add
daa
fsubrp
cmp
sti
ljmp
xor
add
jmp
jne
sbb
aaa
stos
mov
repnz
pop
cmp
repnz
in
enter
mov
cmc
ud2
imul
pop
mov
add
fimuls
sub
jne
add
pop
add
jae
add
push
in
add
add
add
push
mov
add
addl
je
sarl
mov
mov
insl
add
xor
push
add
add
add
pop
dec
add
add
mov
or
popa
sub
push
add
ds
jp
ficompl
enter
push
loopne
arpl
add
rolb
out
scas
scas
js
or
mov
fcmove
out
xchg
fcompl
mov
add
add
addr16
add
jle
jl
mov
dec
repz
cmp
decl
xlat
xchg
mov
add
jns
add
jmp
add
leave
aaa
sub
add
ja
jge
jmp
add
add
addr16
mov
test
dec
add
cwtl
fstpl
and
loopne
jecxz
cs
hlt
stc
arpl
push
add
add
adc
cwtl
loopne
and
add
add
aaa
fimull
lods
gs
pop
out
mov
outsb
add
out
jl
std
les
adc
mov
xor
jno
xor
add
dec
add
sahf
std
aas
cmpb
negl
mov
jo
xor
mov
add
push
add
mov
add
pop
ljmp
inc
out
jb
sbb
add
lret
sbb
add
pop
add
lahf
rolb
sbb
lret
stos
jb
pop
add
mov
add
das
cmp
lock
add
shl
cld
add
push
loopne
mov
loop
mov
add
insb
add
inc
xchg
repz
sbb
pusha
add
push
add
lock
popf
jnp
inc
mov
lock
cmc
ds
or
sub
jb
sub
gs
add
mov
loop
add
add
inc
add
in
dec
add
in
pop
enter
loop
add
add
pusha
add
or
out
add
aas
pop
or
mov
and
aas
sahf
dec
push
add
push
add
or
loop
push
faddl
add
mov
lock
shlb
xchg
mov
mov
add
add
add
and
add
lret
add
lds
mov
add
fwait
in
ret
icebp
add
dec
mov
adc
imul
imul
add
sub
rcr
je
push
add
add
or
pusha
add
sbb
iret
mov
add
xchg
xchg
dec
lock
mov
in
cmc
adc
ret
or
leave
jne
xchg
add
or
bound
add
sbb
mov
xorb
stos
addb
data16
add
cmp
setnp
mov
push
add
xchg
cmp
rorl
inc
add
xchg
push
add
aad
pop
push
add
inc
add
add
add
xchg
mov
pop
sbb
inc
mov
and
sub
icebp
lock
test
enter
add
add
add
add
aaa
mov
add
add
movsl
mov
xor
cmpsl
push
add
mov
add
mov
jle
cld
popa
mov
jae
add
and
sub
add
mov
inc
add
pop
ljmp
aad
ds
stos
repz
repz
add
add
mov
add
cld
pop
xchg
and
sub
push
fldt
sbb
ret
loop
call
or
addb
pop
in
stos
mov
scas
jno
lods
push
rcl
inc
fdivrs
xchg
jo
push
scas
addr16
dec
add
out
sbb
jl
imul
mov
outsl
lea
sbb
loope
jl
pop
shll
push
push
cltd
pop
add
or
add
add
add
push
add
bound
negb
mov
xor
add
repz
imul
inc
sbb
push
add
add
xor
inc
pushf
jg
xchg
fsubl
mov
in
push
add
adc
add
fsubs
xchg
in
add
test
add
add
sub
test
add
and
xchg
push
add
add
xchg
jge
add
xor
jp
js
push
add
add
add
dec
add
inc
push
add
mov
and
popf
pushf
adc
xchg
shlb
xchg
or
xchg
jo
sbb
and
add
adc
or
out
add
ret
addr16
mov
mov
ss
dec
icebp
jne
lea
clc
push
add
sahf
cmpsl
add
or
add
popa
cwtl
adc
ja
lods
xor
jnp
xchg
mov
je
or
and
in
mov
inc
mov
lock
mov
mov
add
push
lahf
clc
add
popf
daa
cmpsb
aam
fwait
shlb
movsb
iret
test
int
fstpt
das
or
add
jmp
add
xorb
in
cmp
add
pop
mov
aas
add
or
clc
test
data16
sub
cltd
incb
add
jnp
dec
or
in
into
inc
cmpl
mov
jecxz
iret
sahf
inc
add
sbb
int3
mov
mov
mov
xchg
mov
jmp
ficoml
pop
stos
test
push
add
add
add
imul
jge
in
add
outsl
pop
das
add
xor
popa
data16
add
fwait
cs
scas
jecxz
adc
inc
add
stos
imul
cmpsl
mov
xlat
in
mov
cld
sub
add
add
aam
add
add
add
add
mov
push
add
aam
sub
mov
dec
add
sarb
out
fnsave
std
xor
leave
js
pop
add
addr16
data16
mov
lds
shrb
fdivrl
xchg
mov
fst
jl
ret
xor
mov
push
add
xchg
pop
add
sbb
aaa
or
or
xlat
notb
dec
add
cmp
add
push
imul
xor
cmp
or
mov
imul
clc
jno
add
jle
dec
add
stos
imul
cwtl
and
xlat
mov
mov
test
loope
add
mov
imull
add
sti
int3
inc
or
iret
and
dec
add
mov
lock
cmp
fldenv
in
pop
push
add
outsb
add
add
mov
movsl
mov
add
rol
sub
or
dec
add
mov
add
cmp
cmpsb
lea
das
mov
and
loope
mov
mov
sbb
push
add
add
jecxz
add
add
adc
and
add
xlat
xor
xchg
mov
add
mov
add
insl
sub
mov
add
clc
mov
inc
add
cmp
sub
rcll
add
mov
jno
push
das
xchg
in
push
xchg
ret
ja
fidivl
jl
inc
cld
jnp
adc
leave
movsl
int
add
stc
gs
loop
xchg
aaa
jg
in
sbb
xchg
fisubl
into
aam
dec
add
or
ret
jp
and
mov
test
shll
add
push
test
out
mov
repnz
mov
add
pop
cwtl
jns
jae
popf
jmp
xchg
jg
add
jge
mov
outsb
add
popa
sbb
addr16
dec
mov
mov
mov
add
add
ret
sub
sbb
scas
stc
fwait
aaa
xchg
lods
pop
sbb
mov
add
push
add
add
sbb
sahf
lcall
lahf
cmp
jg
aam
mov
std
jl
arpl
sbb
mov
rcll
add
add
cmp
jge
fsubs
add
add
add
dec
mov
add
add
add
add
add
xor
leave
lret
jb
mov
jne
adc
in
add
add
aam
je
and
cli
shll
add
arpl
mov
mulb
add
add
pop
add
enter
dec
add
jnp
add
add
mov
out
add
cltd
fsubl
cmp
lock
add
aam
adc
add
add
xchg
jmp
loop
orl
cmp
test
or
aam
dec
add
add
xchg
inc
adc
loopne
add
add
sbb
rorl
sbb
loope
add
mov
int3
shlb
pop
xchg
add
pop
lret
int
cltd
rcrb
pslld
leave
rolb
pop
cmc
lret
imul
mov
lret
sub
mov
shrb
outsb
add
add
and
mov
fadds
inc
add
test
adc
add
mov
add
xor
and
jg
stos
cmp
add
xor
sbbb
add
inc
add
add
add
or
pop
jno
cld
inc
dec
cmp
mov
jne
mov
add
int
cmp
lcall
int3
adc
xor
add
or
push
mov
add
test
movsb
inc
add
pop
std
loop
inc
add
add
add
in
iret
out
fisubrl
mov
jecxz
add
sbb
fildl
pop
mov
mov
cmp
pop
ss
bound
aad
loopne
add
jl
mov
inc
jmp
mov
leave
gs
leave
je
mov
out
std
dec
fadds
out
mov
add
mov
adc
add
ja
bound
sub
lcall
jnp
add
imul
daa
mov
out
add
insb
add
shl
add
cmpsl
mov
add
sbb
dec
add
dec
mov
push
add
pop
add
rorl
add
add
stc
and
ficoml
add
movsl
setl
sarb
xchg
inc
add
xchg
sti
mov
sbb
adc
push
scas
int
pusha
add
jno
add
enter
add
add
inc
add
add
insl
adc
repz
out
das
pop
sarb
push
add
cltd
loop
pop
mov
scas
mov
add
add
sbb
add
movsl
clc
and
add
cmp
push
add
shll
dec
add
mov
add
test
ret
mull
rcr
sbb
gs
add
flds
cmp
jp
add
add
js
mov
cmp
xchg
in
push
fnstenv
mov
or
stc
mov
xor
inc
add
add
lds
or
add
stos
icebp
push
add
lret
mov
xchg
aaa
enter
add
add
xchg
lods
icebp
orl
sbb
xchg
bound
outsb
add
add
push
add
popl
dec
pop
add
add
pop
add
jmp
cltd
dec
add
loopne
pop
jl
adc
out
scas
add
sbb
movsl
inc
add
cmp
sbb
add
in
adc
xchg
mov
inc
add
ror
adc
xchg
movsb
testb
inc
aad
add
add
ficoms
push
inc
mov
gs
pop
add
add
inc
mov
push
add
add
push
add
leave
shl
ficoms
mov
pushf
adc
cmp
xchg
xchg
pop
ss
test
movsl
cmp
imul
call
or
rcll
cmpsl
add
arpl
mov
add
cmpb
dec
cmpsb
fsub
cmp
shrl
or
mov
xchg
mov
add
mov
add
jg
stos
pushf
aad
add
addl
cmp
pop
lock
aad
loope
xor
add
add
adc
movsb
xor
mov
jp
push
add
inc
add
add
add
add
das
jbe
mov
add
pusha
add
add
lret
das
sub
insl
push
add
mov
add
add
test
add
pop
add
sbb
adc
adc
add
sbb
inc
int
xor
outsb
add
mov
cltd
push
add
add
add
les
add
iret
repz
add
pop
mov
add
or
shrl
rcrl
popf
mov
pop
std
aam
add
cmp
int
add
add
adc
add
insb
add
mov
icebp
xchg
jnp
add
std
js
ror
add
mov
mov
ret
les
rorb
jecxz
pop
fbstp
add
add
int
dec
add
add
inc
add
add
add
idivl
test
sub
mov
push
add
jne
adc
inc
add
mov
add
leave
cltd
mov
fstps
out
add
int3
add
inc
add
das
push
fimuls
mov
add
fsubl
add
add
add
incb
cli
jle
std
xchg
jns
mov
jbe
adc
cli
pop
sbbb
jle
push
out
in
or
add
mov
add
push
add
pop
add
cmp
add
pop
jb
mov
add
and
xchg
pop
cmp
insl
mov
fcoms
popf
cmpb
sub
das
test
add
iret
add
inc
add
lea
out
lods
xchg
out
je
rorb
std
subb
test
adc
in
push
add
cmp
cld
sbb
lret
add
outsl
das
mov
dec
push
inc
pop
xchg
mov
mov
xchg
insb
add
adc
test
je
mov
mov
insb
add
add
add
add
stos
daa
icebp
mov
mov
jno
xor
add
stc
hlt
jmp
sahf
and
xchg
xor
lds
and
jle
int3
xchg
push
fcompl
stos
fisttpl
rcrl
imul
mov
push
pop
or
dec
in
add
movsb
and
mov
in
in
add
add
jl
aaa
ja
add
stos
out
xor
ret
mov
push
add
shlb
add
add
jb
shll
sub
add
les
push
add
xor
mov
repz
loop
nop
ljmp
and
add
test
jl
popa
ds
mov
add
out
cmpsl
ljmp
pop
xorl
sbb
mov
add
add
push
add
in
mov
daa
gs
cmp
gs
mov
fs
test
push
add
sbb
sbb
push
mov
test
das
insb
add
cli
pop
shrb
and
mov
iret
mov
or
mov
sub
xor
pop
outsb
add
push
add
loopne
add
clc
fldl
add
xor
inc
add
push
add
add
xchg
add
cmpsl
test
mov
xchg
xchg
dec
and
add
add
push
add
add
mov
ljmp
sbb
jne
aad
add
or
mov
add
xor
std
or
sarl
and
jne
cmp
add
add
or
inc
mov
add
push
pop
push
add
jmp
add
sub
add
lcall
xchg
jb
and
add
or
add
mov
cmp
cmp
xor
shlb
xor
mov
add
hlt
pop
gs
push
add
add
add
inc
add
add
add
cmovno
add
jecxz
jo
icebp
add
xor
enter
fwait
in
fwait
mov
sbb
push
add
lret
add
fsubl
add
or
sti
sub
mov
pushf
mov
repz
fisttpl
mov
inc
push
add
xchg
je
push
sbb
stos
mov
in
push
add
outsb
add
add
add
add
add
loop
mov
dec
add
push
dec
add
and
xor
mov
js
jle
mov
fiadds
add
xlat
jge
lret
outsl
sahf
inc
jns
push
mov
sbb
repz
add
in
lcall
add
add
mov
std
push
add
aad
mov
add
ja
add
cwtl
hlt
das
pop
mov
add
sbb
lds
jbe
outsb
add
add
pop
sub
mov
add
rorb
add
test
push
add
dec
add
xor
push
add
inc
add
add
outsb
add
add
mov
jmp
mov
xor
inc
add
xor
cs
add
dec
add
or
mov
ljmp
popf
push
add
sub
xchg
xor
add
mov
add
add
mov
outsb
add
mov
dec
rcrb
add
inc
add
ror
movsb
loop
mov
cmp
add
scas
or
jecxz
add
leave
sbb
aad
pop
lods
loope
inc
add
xor
int3
sub
sbb
push
add
mov
add
xlat
insl
xchg
pop
xor
jb
int
andb
sbb
inc
test
add
inc
mov
adc
xor
xchg
out
inc
add
sbb
add
mov
add
addr16
sub
add
mov
add
sub
cli
dec
add
lahf
push
add
dec
je
lods
push
add
cld
push
add
mov
xchg
xchg
stos
xlat
dec
cmp
add
add
shll
cmp
fcoms
scas
add
add
out
xor
add
mul
xchg
outsb
add
add
add
stos
in
mov
test
sub
dec
or
pop
adc
ret
repz
adcb
jnp
ret
jle
inc
add
jp
stc
pop
pop
cmc
sub
jne
add
add
stos
adc
addr16
mov
add
jle
enter
lock
stos
fs
ret
arpl
ja
xor
push
add
push
add
add
outsb
add
in
add
nop
adc
pop
add
ficoml
add
filds
add
add
jmp
jge
dec
add
jo
das
xchg
jl
scas
mov
xchg
repz
std
mov
aaa
push
add
sarl
pop
call
add
das
test
and
arpl
jge
movsb
dec
add
xchg
cmp
cmpsb
clc
cli
cmpsb
int3
push
popa
jns
push
add
imul
add
adc
mov
mov
outsl
pop
mov
xchg
xchg
mov
add
add
push
add
cmp
add
push
add
jo
mov
mov
sub
inc
add
xchg
pop
sbb
shrb
stos
push
add
fistpll
sub
xlat
fxch
pushf
test
jge
addb
add
mov
popa
add
jp
iret
repnz
push
add
push
imul
push
xchg
repnz
push
shrl
inc
jl
xlat
push
sbb
add
sbb
add
add
dec
cli
sbb
push
add
mov
add
adcl
add
add
mov
inc
mov
mov
xor
jne
scas
lods
mov
and
add
pop
add
add
mov
mov
add
add
adc
hlt
aad
aas
stc
lds
push
fldl
stos
jo
in
ret
out
movsl
into
push
cmp
stos
push
add
mov
add
add
sub
rorl
xlat
int
add
add
loopne
add
add
jae
add
les
xchg
add
sahf
jb
ret
iret
scas
push
add
add
xchg
lods
sbb
add
add
lret
pop
scas
int3
pusha
add
add
lds
imul
push
and
scas
lods
lret
xor
push
add
mov
mov
add
add
gs
in
int
idivb
add
scas
sbb
xchg
in
adc
adc
xchg
test
loopne
mov
int3
dec
add
adc
xor
adc
ljmp
jne
out
jae
push
mov
pop
jne
inc
add
xor
test
jbe
inc
idivb
pop
ja
inc
fldl
add
pop
sbb
ja
test
add
or
xchg
mov
add
add
add
add
fld1
push
add
cltd
or
aad
loope
dec
add
add
sbb
add
jg
add
jae
in
call
nop
and
cmp
rcll
sbb
popa
fwait
jge
xchg
jne
in
pop
mov
and
xor
and
mov
xchg
cwtl
cld
insb
add
addr16
add
add
add
add
mov
push
add
xchg
outsb
add
ljmp
mov
emms
imul
mov
iret
rolb
add
imul
mov
fidivrs
fbld
push
add
xlat
dec
sub
add
sbb
push
add
add
ljmp
add
pop
jne
add
es
xchg
dec
daa
push
add
lahf
jb
mov
mov
insb
add
add
jle
andb
rcrl
mov
and
push
push
cmp
or
cmp
add
pop
in
imul
mov
pop
add
sub
dec
add
add
add
daa
jmp
inc
add
mov
xchg
xor
add
cmp
cld
pop
in
repz
stos
sahf
sub
sbb
ret
adc
sub
dec
add
cmp
add
shlb
jo
lahf
out
sub
add
add
pusha
add
scas
push
add
add
add
sbb
loop
add
repnz
push
adc
fiadds
push
add
hlt
pop
stos
lret
pop
add
mov
ja
dec
add
add
fdivl
push
add
add
dec
jg
cmpsb
data16
adc
loope
inc
add
inc
add
add
mov
cmpsl
add
add
pop
adc
add
cld
push
pop
mov
add
fnstsw
push
add
add
test
xchg
fnsave
xchg
loope
popf
test
dec
add
cmpsl
in
jmp
inc
ds
xor
mov
xor
pusha
add
add
in
and
cltd
adc
add
movsl
add
dec
sub
mov
add
fmul
dec
add
add
dec
add
add
int
add
xor
pop
add
mov
add
pop
sarb
add
add
pop
mul
dec
add
mov
xor
pop
call
es
and
insb
add
dec
pop
add
adc
out
add
cmp
add
add
or
mov
add
or
stos
mov
push
in
pop
add
inc
sub
fldt
imul
add
add
add
mov
push
clc
and
out
loopne
dec
ja
add
sahf
stos
lcall
mov
pop
lods
jnp
loopne
add
add
mov
incl
add
or
mov
jge
adc
dec
add
add
mov
mov
add
add
jno
inc
jb
ja
add
add
out
jle
insl
adc
xchg
push
add
pop
add
fwait
xchg
dec
loopne
sbb
scas
mov
cmc
add
data16
add
sti
add
pop
add
fistpll
mov
sbb
data16
cmp
add
and
or
add
sub
jbe
push
jg
sub
je
cmp
imul
xchg
inc
jb
add
icebp
sbb
sti
dec
add
xor
or
dec
in
test
loope
add
roll
add
ss
sbb
inc
add
pusha
add
dec
add
add
loope
add
add
add
add
add
or
xchg
mov
push
pop
adc
call
add
push
sbbb
add
mov
sub
sbb
add
cmp
out
pop
add
cmp
lods
inc
int
add
push
xchg
push
add
sbb
bound
mov
pop
rcll
add
jge
add
in
add
cs
cmp
in
mov
xlat
sbb
pushf
and
add
xchg
mov
add
cmpb
jge
add
jbe
add
ljmp
add
mov
or
or
xor
scas
enter
cmp
rol
jb
or
add
add
mov
add
rep
push
add
add
dec
add
add
add
xchg
mov
into
pop
add
adc
out
add
inc
add
add
shll
add
mov
outsl
out
popa
das
jg
add
lret
cmpsl
lock
add
pop
xchg
nop
mov
jo
push
ret
jb
gs
cmpsb
xor
iret
leave
rol
add
iret
xchg
lret
cmpsb
dec
add
add
xchg
sub
outsb
add
push
mov
sbb
jecxz
fstpt
add
bnd
xor
mov
add
stos
xor
scas
call
cmp
popa
aaa
sbb
and
pop
add
aas
out
mov
add
dec
cmp
xor
dec
int3
inc
cmp
add
add
shlb
add
cmp
int
jne
outsl
lea
inc
add
cli
out
cmp
adc
imul
adc
mov
pop
mov
test
adc
pop
sbb
movsl
dec
add
aad
or
and
mov
movsl
and
in
out
mov
cmp
jp
fwait
bound
fdivrs
add
into
scas
jb
dec
es
rolb
add
mov
xchg
jge
add
add
in
lds
adc
push
add
add
popa
shlb
add
jge
adc
hlt
add
sub
loope
je
enter
xor
add
add
ret
add
jnp
repnz
stos
and
add
bound
and
push
add
add
pop
outsb
add
mov
mov
add
add
add
stos
testb
add
add
push
add
mov
iret
cli
mov
add
add
in
push
add
bound
jg
add
add
add
lcall
and
add
cmpsb
fdivrs
pop
inc
add
adc
cmp
add
in
ret
bound
mov
add
shll
movsl
cmp
stc
push
jp
repnz
add
lds
jmp
dec
add
add
cmp
out
movsb
bound
fwait
mov
data16
add
test
xadd
add
add
lods
dec
add
add
les
sarl
insl
push
add
ret
mov
mov
lcall
jl
push
mov
les
pop
arpl
lds
inc
jle
cwtl
mov
movl
dec
jbe
je
cmpsl
jp
jns
imulb
add
in
fsub
test
jle
fwait
adc
sub
xor
jmp
std
xorb
jecxz
sbb
pop
jbe
pop
add
cld
loope
fisttps
mov
mov
push
add
xchg
mov
add
add
ficompl
mov
push
xlat
cmp
add
pushl
outsl
pushf
outsb
add
xor
xchg
push
add
add
add
add
pusha
add
xor
add
mov
ret
mov
stos
cmpsl
dec
add
mov
add
mov
push
add
add
sub
push
jmp
lahf
add
aas
pop
add
lret
roll
int
adc
push
add
add
adc
pop
imul
sbb
sub
mov
ret
xchg
stos
in
push
icebp
stc
adc
or
add
fwait
inc
add
add
push
add
add
mov
ret
int3
inc
stos
jb
pop
add
jns
sbb
dec
add
rcll
push
add
mov
test
cmpb
add
repnz
in
fstp
xor
add
add
sbb
gs
pop
or
sahf
aas
and
jle
fnsave
or
add
add
lcall
xor
inc
add
ficoml
int3
lods
fdivr
jb
and
mov
add
add
mulb
add
pop
add
pop
movsl
lret
add
sbb
jg
mov
sub
add
cld
dec
loopne
aas
lahf
ja
rolb
add
add
inc
lods
pop
fwait
hlt
movsb
notl
sbb
xlat
stos
inc
add
inc
add
xlat
or
ja
mov
add
pop
add
loop
push
out
mov
pushf
push
loop
add
fiadds
mov
push
add
int3
mov
fidivl
push
add
add
add
adc
mov
jg
int3
loop
add
xor
and
or
add
jb
sbb
push
push
add
inc
add
add
push
add
adc
pop
push
xlat
fcom
fwait
aad
add
or
push
add
push
sub
mov
mov
add
add
add
aaa
adc
add
add
add
add
stc
xor
cmp
add
sub
in
stos
and
jae
add
and
cmp
mov
add
add
push
add
gs
lahf
stos
mov
lcall
jns
add
push
add
pop
push
add
rcl
push
iret
stos
out
xlat
xchg
nop
adc
ret
pop
add
add
fsubrl
pop
bound
or
xchg
mov
scas
iret
jl
sbb
add
lods
push
add
psrlw
je
or
iret
jnp
cmpsl
orl
jb
mov
aad
add
rcrb
xor
add
pop
dec
popa
insl
inc
add
add
dec
xor
movsl
pushl
test
add
bound
add
jecxz
pop
cmp
mov
in
add
xchg
xchg
les
add
out
js
pop
add
sbb
pop
into
dec
rol
pop
leave
imul
and
hlt
cmc
dec
mov
xchg
sbb
aam
add
add
add
inc
add
push
adc
test
mov
jmp
or
add
xchg
and
sahf
mov
mov
in
or
adc
pop
jo
fwait
jecxz
lods
or
dec
add
sbb
lahf
les
arpl
add
in
in
add
sbb
mov
notb
adc
insb
add
add
stc
ficompl
add
jae
add
push
add
sub
jecxz
notl
add
bound
out
pop
add
daa
and
sub
add
sbb
push
jmp
mov
lods
daa
hlt
fcmovb
cmp
pop
aam
and
popf
sbb
and
mov
inc
stc
cmp
movsl
push
add
xchg
xor
sahf
mov
daa
insb
add
movsb
xorl
adc
sbb
dec
movsl
pop
in
popa
dec
add
pusha
add
or
icebp
fadds
jg
in
push
cli
xchg
add
cmp
add
mov
add
mov
aam
add
mov
daa
add
jnp
cltd
lods
shlb
into
pop
add
sub
add
add
push
lcall
loopne
ret
fsts
add
sbb
mov
add
ja
clc
imul
add
dec
add
xchg
inc
add
jae
test
add
je
push
cltd
mov
mov
cmp
dec
add
xor
sti
in
mov
add
jp
mov
js
cs
ret
ret
or
stos
adc
std
mov
in
add
pop
add
sahf
sbb
lea
add
push
mov
cmpsl
mov
add
add
add
pushf
adc
add
fidivrl
aaa
dec
sbb
mov
fdivs
add
in
and
jb
cli
pusha
add
add
add
fcoms
add
dec
test
add
cmc
cltd
xchg
aad
cmpsl
mov
jne
in
add
xchg
icebp
leave
mov
cmp
add
out
add
lea
add
add
movsb
sbb
test
mov
mov
sub
xor
insb
add
into
in
addb
add
pop
add
sub
mov
and
loop
push
add
mov
das
sbb
insb
add
push
mov
xchg
incb
int
aad
add
clc
lods
test
rcrb
add
scas
xchg
test
imul
mov
dec
add
and
sbb
and
or
push
add
add
add
cmp
add
push
add
mov
add
cmp
gs
mov
ljmp
data16
fnstenv
insb
add
jbe
mov
fwait
add
fwait
ljmp
cmp
lcall
pop
mov
shl
dec
add
mov
ret
xchg
test
add
stos
js
and
add
push
sbb
add
arpl
add
add
out
in
xor
mov
cmp
out
sub
cmpsb
xchg
imul
call
add
aam
movsb
inc
iret
push
add
and
mov
add
dec
orb
push
add
add
add
fimull
rolb
mov
mov
imul
dec
add
pop
add
mov
add
push
add
ret
jge
inc
add
lods
test
jp
rclb
mov
sub
add
inc
add
add
add
scas
and
sub
add
cmc
sbb
dec
sahf
inc
add
or
mov
iret
fidivrl
ds
inc
push
add
loope
sub
std
sbb
dec
add
cltd
arpl
insl
repz
mov
das
cs
add
mov
lods
leave
fwait
or
test
testl
mov
insb
add
fidivrl
xor
int
imul
pop
add
add
mov
dec
and
scas
fcoml
inc
mov
dec
add
sbb
mov
mov
dec
add
add
fdivl
xor
aas
outsl
hlt
add
push
mov
sahf
add
divb
add
pop
arpl
loop
mov
push
jns
lcall
test
push
add
xchg
jecxz
add
in
pop
xor
out
outsl
movsl
fnstcw
xchg
addps
movsb
push
fidivrl
add
cmc
aam
mov
mov
imul
mov
push
add
cli
sbb
pushf
xchg
imul
mov
add
xor
fnstcw
xchg
jnp
std
test
jp
cld
or
lret
push
add
rol
cltd
and
cmpsl
adc
imul
and
push
add
hlt
repnz
add
add
sbb
xor
data16
dec
sub
scas
ljmp
das
loopne
xchg
test
add
add
xchg
bound
cltd
cltd
pop
mov
pop
add
lahf
adc
pop
cmp
les
cmp
jno
add
or
adc
pop
add
leave
add
pop
add
fistpl
and
inc
ja
andb
adc
cmpsl
repz
adc
fcoms
push
add
outsb
add
and
inc
add
push
dec
xchg
mov
add
sbb
add
je
cld
dec
shrb
mov
add
add
call
pop
add
push
add
cmc
aad
daa
stos
adc
cmp
and
sub
push
jp
arpl
cmp
add
mov
jmp
jmp
loop
push
adc
push
add
xchg
lea
add
cmp
and
xchg
xchg
mov
xchg
or
movsb
cmp
dec
xchg
push
add
add
out
pop
add
sar
xchg
arpl
enter
push
add
lcall
add
jge
and
sub
add
push
add
aam
ljmp
pop
shll
or
out
inc
test
shrb
mov
lret
push
add
dec
xchg
pop
and
decb
add
sbb
sar
or
jo
movsb
push
add
adc
adc
mov
xchg
pop
add
popf
pop
adc
dec
test
testl
add
icebp
int
add
and
add
dec
push
add
inc
add
pop
das
add
add
shlb
mov
push
rcrl
test
add
jne
xchg
lcall
ret
jnp
xor
add
jnp
cmp
xchg
in
mov
add
push
add
test
sbb
arpl
add
push
add
dec
mov
jp
les
test
add
or
adc
subl
push
add
push
add
subl
add
jae
add
inc
cmp
imul
inc
ljmp
sti
xor
push
add
pop
add
lds
or
or
inc
add
sub
sbb
inc
add
lods
fwait
dec
out
add
shll
lret
test
and
dec
add
mov
insb
add
jecxz
adc
fsubl
movsl
xchg
sub
add
xchg
sti
popa
dec
mov
imul
shr
mov
xlat
imul
cmpsb
xchg
push
cmp
add
push
add
popf
mulb
enter
sub
xchg
arpl
adc
sbb
add
adc
add
inc
in
sahf
arpl
dec
xor
in
cmp
andb
add
add
sbb
bound
jg
push
lret
mov
enter
jbe
inc
scas
loop
xchg
lds
mov
cwtl
mov
push
add
cmpsl
add
adcb
arpl
insl
dec
xor
inc
add
daa
push
push
add
call
add
add
stc
pop
in
push
pop
add
mov
test
add
ja
xchg
jg
add
xlat
je
xchg
jns
jecxz
pop
mov
xor
add
repz
lret
dec
sar
cmp
aad
and
js
mov
aam
lcall
adc
add
icebp
aad
xchg
adc
test
or
pop
add
dec
adc
inc
add
jmp
add
mov
js
mov
add
mov
add
push
add
or
std
push
add
lret
push
add
sete
mov
je
jle
sub
mov
aam
jp
imul
stos
push
jg
in
daa
add
push
add
add
and
pop
adc
lock
in
add
and
mov
mov
sbb
add
add
outsb
add
inc
add
fcmovnb
dec
add
dec
add
push
add
add
mov
popa
inc
add
cmpsb
outsl
fwait
repnz
mov
and
xor
push
add
add
fstpt
jo
test
adc
add
enter
jge
mov
add
fldl
add
pop
mov
add
add
lock
inc
add
push
add
jle
sahf
or
xchg
scas
lock
cmp
cwtl
jge
add
add
push
add
add
rorb
add
add
cld
sahf
popa
cmp
sub
add
adc
fxch
cmovg
add
imul
add
jnp
add
cmc
pop
adc
pushf
mov
cmpsl
scas
sbb
jl
movsb
cmpsl
fwait
stos
sbb
popf
aad
out
cwtl
ljmp
xchg
bswap
adc
push
add
les
jns
data16
add
lds
add
pop
add
add
adc
jae
xor
test
add
jne
xor
mov
cli
jmp
fsubrl
mov
dec
add
cmp
les
add
xchg
xchg
iret
or
cwtl
sub
es
repz
mov
add
push
add
add
adc
add
mov
hlt
dec
mov
insb
add
test
add
add
add
add
lret
or
mov
xlat
stos
scas
xchg
scas
add
add
fnsave
push
add
jle
loop
mov
add
mov
add
in
ret
or
push
add
add
add
jg
add
jecxz
sbb
xchg
ja
fnstcw
add
fbstp
adc
cmpsl
cli
and
xchg
add
add
add
ja
fimull
add
popf
jg
add
scas
jmp
dec
add
out
and
xlat
dec
mov
scas
cmpsl
out
inc
xor
popa
adc
xchg
enter
add
add
add
es
enter
cmp
add
notb
in
xor
data16
rol
cmp
into
cmp
or
cmp
push
add
loope
cmp
enter
aad
sub
daa
loop
add
jne
add
mov
add
push
add
cmc
mov
subb
std
or
mov
ss
icebp
mov
add
add
push
add
push
aaa
je
push
add
add
cli
sub
add
imul
shll
add
xchg
dec
adc
mov
adc
mov
jecxz
add
or
mov
imul
adc
ja
loope
xchg
pop
jp
add
bound
mov
xchg
pop
cmp
and
push
add
or
inc
add
xor
aad
add
add
mov
and
add
arpl
lods
aad
std
lods
inc
add
adc
negb
stos
xor
aas
arpl
sub
fidivrl
and
dec
ja
mov
aaa
dec
mov
adc
ret
and
jnp
add
push
add
daa
lret
push
add
adc
out
adc
lret
add
sbb
mov
adc
mov
xor
aas
cmp
imul
jne
or
add
movsl
idivl
leave
lock
sahf
mov
adc
pop
add
pop
add
aam
dec
add
add
add
add
jno
sarl
pop
add
pop
inc
arpl
add
cmp
add
or
add
addl
mov
add
pop
add
add
shlb
inc
add
push
lods
pop
mov
xor
xchg
sbb
inc
sbbl
movsb
inc
add
popf
popf
push
add
int
bound
lock
or
sub
repz
pop
mov
add
add
bound
inc
add
add
add
add
and
add
adc
aaa
and
jmp
fimuls
movsb
sbb
mov
add
add
sub
add
add
das
pop
adc
mov
add
add
or
in
mov
add
xchg
insb
add
pop
dec
movsl
ljmp
add
add
push
add
out
push
insb
add
add
adc
hlt
out
ret
push
add
outsb
add
adc
sbb
ficompl
or
push
add
sbb
sbb
add
dec
xchg
jne
nop
decb
outsl
push
add
sbb
pop
jo
dec
xchg
test
jne
add
imul
out
push
cltd
cmpsl
int3
mov
pop
add
sub
xchg
ret
mov
in
add
xchg
mov
stos
and
inc
add
sbb
add
mov
sbb
dec
add
shr
sbb
into
mov
push
add
sbb
inc
add
add
inc
cmc
lea
in
add
add
add
lret
sbb
mov
mov
loop
pop
add
add
add
add
xchg
pop
add
cmc
mov
mov
lret
scas
outsb
add
and
add
aaa
jne
inc
jnp
hlt
add
js
in
mov
add
cmp
or
sub
add
add
add
add
add
mov
push
add
enter
stc
xor
leave
lcall
cli
faddl
pop
jl
jp
xlat
cwtl
inc
adc
mov
add
mov
add
pop
filds
movsl
inc
stos
cmp
add
add
std
add
add
and
cmp
into
jnp
dec
add
push
add
add
add
jae
add
add
mov
add
clc
mov
add
sbb
jle
insl
mov
aas
mov
popa
sbb
sub
inc
pop
add
mov
pusha
add
sub
xchg
mov
and
mov
add
xor
in
push
add
outsl
add
mov
mov
add
aam
mov
cmp
mov
lahf
add
mov
inc
add
inc
add
xlat
pop
ret
add
add
add
lea
ret
sti
inc
addb
rcrl
nop
rcll
pop
add
jnp
mov
enter
add
add
cmpsl
popa
lcall
jne
add
or
add
add
jp
arpl
jle
add
sbb
cmp
out
inc
cmc
hlt
mov
setno
add
push
outsb
add
add
add
xchg
jo
and
add
and
xor
out
push
add
add
add
daa
xor
popf
addb
jnp
add
add
jp
jmp
add
add
add
scas
mov
and
mov
mov
adc
lods
shlb
add
adc
push
add
mov
rcl
das
sub
dec
add
pop
add
mov
pop
loop
add
add
add
add
add
sbb
mov
movsb
cmp
outsl
je
push
mov
pop
adc
jge
rep
repnz
mov
jle
or
shl
pop
add
add
cld
add
repnz
add
push
sbb
inc
pusha
add
inc
inc
add
mov
inc
outsb
add
fstps
fidivl
add
add
arpl
jecxz
add
sbbb
xchg
cmovo
xchg
pop
add
jnp
add
add
mov
addl
add
jb
sbb
lods
adc
mov
mov
push
loop
ret
add
or
stos
mov
add
repnz
fldl
sbb
stos
insl
shll
in
data16
js
rclb
cmp
xchg
lcall
mov
add
insl
cwtl
leave
jns
test
add
add
add
pop
add
xor
mov
add
add
mov
add
add
add
add
cmpsl
dec
add
mov
into
lods
fistpl
adc
popf
cmpsb
mov
das
push
sub
outsl
sub
jo
lock
imul
fdiv
pop
pop
ret
inc
dec
movlps
ret
add
ljmp
add
std
jns
bound
clc
fmuls
mov
add
sub
sti
add
jae
sahf
xor
adc
movsl
inc
add
mov
orb
cld
mov
mov
fwait
inc
mov
pop
add
jae
popf
or
jnp
arpl
add
jle
mov
or
lret
cmp
add
cmpsb
cld
jecxz
sbb
lea
repnz
xchg
into
fisttpl
mov
clc
jmp
shlb
jb
idiv
into
test
ljmp
add
push
jns
dec
fwait
nop
push
add
int3
divb
ret
mov
add
pushf
out
gs
and
repz
sbb
fwait
hlt
imul
mov
mov
xchg
sbb
test
mov
std
cli
outsl
sub
int
xor
out
cmc
push
add
jo
cli
adcb
sti
pop
adc
addb
add
mov
add
pop
add
add
outsb
add
add
add
add
daa
push
add
jnp
sbb
loopne
add
adc
add
out
add
imul
add
jmp
mov
data16
adc
sbb
add
push
add
std
lret
add
add
adc
lea
add
les
xlat
ret
iret
enter
aas
fnsave
inc
add
negl
pop
pop
jmp
xor
or
add
aam
mov
fwait
dec
shr
sbb
adc
add
xchg
incl
add
in
inc
cmc
mov
cli
cltd
fcmovnb
mov
push
push
cmp
add
sbb
mov
mov
shll
stc
add
loopne
repnz
pop
add
push
add
mov
add
add
add
push
add
pop
add
adc
shl
add
add
pushf
dec
add
mov
add
mov
add
xchg
aaa
fimull
add
jg
xchg
xchg
orb
push
add
add
xchg
in
xchg
fisttps
pop
bound
push
mov
loopne
add
push
add
add
fwait
adc
insb
add
mov
pop
add
ljmp
push
add
mov
clc
imul
sbbb
mov
outsb
add
jno
pusha
add
jae
xchg
test
pop
or
sub
add
lret
dec
pop
sub
push
or
sbb
andl
popa
test
pop
mov
aas
push
sub
popf
lds
enter
pop
rcr
mov
jg
xor
sahf
xchg
stc
mov
add
add
ret
jl
in
outsb
add
xor
ficomps
xor
sbbl
jo
movsb
pop
fdivl
sti
add
lock
sub
mov
add
xchg
mov
add
mov
add
jnp
adc
test
add
insl
insl
inc
add
add
xlat
scas
adcb
pushf
sub
jnp
add
push
add
dec
jns
mov
mov
sbb
add
add
pop
stc
adcl
lcall
fiadds
add
add
daa
sub
or
andl
add
xchg
cld
stos
scas
xlat
xchg
push
iret
mov
int
cmp
jge
scas
js
add
in
sub
mull
mov
cmp
push
enter
or
int
pop
fcmovnbe
dec
lret
cwtl
call
cmp
lods
push
fbld
and
fisubrs
imul
add
popa
das
and
add
add
scas
sbb
mov
iret
sbb
imul
data16
add
pop
add
add
push
add
gs
inc
add
sub
jbe
shrb
sahf
rorl
dec
add
test
add
sub
mov
mov
in
add
test
dec
shrb
push
add
into
inc
add
xchg
addr16
sub
nop
sarb
adc
add
mov
add
mov
int3
and
out
add
rcll
ret
cmp
add
add
in
aad
add
lret
inc
add
lret
jo
pop
add
test
add
pop
popf
add
cmp
mov
add
std
lods
in
scas
dec
mov
das
lahf
sbb
add
repz
add
push
data16
and
adc
add
add
mov
mov
loope
sarl
pop
hlt
out
daa
lods
sbb
mov
mov
out
scas
cmpsl
sahf
neg
ret
pop
add
out
pop
xchg
inc
mov
shrl
add
mov
dec
add
add
add
lcall
add
pop
add
mov
hlt
push
add
pop
sbb
sti
xchg
and
insb
add
xchg
sarb
pusha
add
pop
dec
add
loopne
dec
add
cmp
xchg
xchg
push
add
push
mov
sub
lods
popa
xor
add
in
je
inc
add
add
mov
add
arpl
in
cmpsl
pop
jg
repz
js
lret
test
xchg
add
jne
mov
add
cmp
leave
jle
xchg
push
add
decl
add
adc
push
add
adc
idiv
das
add
adc
pop
add
cmp
cmp
in
cmp
push
xor
add
test
sti
xor
jge
lahf
xchg
add
push
add
add
ret
pop
add
pop
add
pop
add
mov
ret
add
aaa
sti
inc
xor
popf
inc
add
popa
mov
ret
sub
push
int3
or
dec
add
add
popa
add
scas
mov
add
mov
data16
inc
xchg
jno
add
into
dec
add
stos
into
add
xchg
jg
add
lcall
add
aas
imul
add
mov
imull
sbb
xchg
rolb
mov
xchg
addr16
add
push
enter
loopne
add
push
add
dec
add
xchg
loope
mov
cwtl
mov
cmc
mov
pop
in
pop
shlb
add
add
je
and
sbbl
pop
aas
cmpsb
lds
add
add
in
pop
mov
call
dec
jle
jle
jmp
add
imul
or
add
sar
add
out
cmc
int
jne
imul
fldl
adc
xchg
je
rcrl
imul
outsb
add
add
mov
add
pop
jns
movsb
ljmp
add
add
lcall
or
mov
data16
pusha
add
add
cwtl
cltd
lret
in
popf
push
add
in
xor
sub
stos
push
sub
outsb
add
add
clc
call
mulb
test
shr
cmp
dec
add
sub
in
dec
add
add
pop
add
cmc
shlb
jecxz
aaa
jo
sahf
jo
adc
fnsave
dec
cmp
lods
aam
add
test
push
mov
or
add
lcall
cmp
add
out
push
sbb
xlat
fsubrl
and
incl
cmp
sub
int
addr16
add
inc
xchg
sbb
or
rcrb
add
in
addl
int3
mov
aas
jecxz
mov
mov
add
add
outsb
add
add
fstps
push
add
xchg
fdiv
dec
add
jns
add
adc
add
mov
jns
lds
int3
fucom
test
scas
cmc
in
fs
jl
adc
pop
add
xchg
add
das
mov
add
add
inc
xchg
mov
leave
push
add
movsl
mov
adc
xor
inc
add
insb
add
mov
xor
xor
sahf
xor
add
add
or
xchg
pop
int
pop
push
add
fmull
les
add
push
add
pop
inc
hlt
pop
sahf
adc
jb
mov
add
add
neg
mov
ret
add
loope
push
add
data16
mov
cmpsb
shll
dec
and
mov
xor
add
cmp
arpl
stc
cltd
shrb
lcall
add
add
fidivrl
push
add
bound
iret
mov
insb
add
add
loopne
in
pop
add
xor
add
data16
or
ljmp
mulb
xchg
xor
dec
and
sub
add
add
add
add
dec
xchg
scas
cmc
mov
add
mov
ja
add
imul
repnz
rorl
adc
sbb
jns
sbb
dec
into
ja
inc
add
dec
add
pop
add
adc
xchg
lea
mov
or
movsl
push
sbb
cltd
sbb
or
cmp
add
shll
add
pop
add
jecxz
jo
inc
sub
push
add
push
add
add
test
add
mov
shl
jle
bound
dec
add
pusha
add
test
mov
jo
scas
push
add
add
and
test
lods
inc
ret
orl
imul
add
lret
mov
cmp
loopne
add
dec
add
out
push
add
adc
dec
mov
addr16
or
inc
add
jb
adc
ficoms
bound
mov
movsb
test
xchg
jle
add
jmp
mov
cmp
in
sub
or
cltd
shll
jge
dec
lock
dec
add
cmpsl
imulb
add
imul
push
sub
jg
add
sbb
mov
or
cmp
loope
pusha
add
mov
add
imul
jmp
rolb
loop
dec
add
push
add
push
add
aaa
filds
shrl
sbb
cmp
push
add
jo
adc
aad
cltd
pop
jne
or
cmp
stos
dec
add
push
add
add
mov
call
push
psadbw
mov
push
add
popf
sti
jb
ret
pop
mov
int
addr16
jmp
xorb
xlat
lcall
lret
ja
sbb
mov
push
add
push
add
add
shll
add
add
lahf
add
add
add
add
mov
lods
loope
fs
insb
add
mov
add
popa
inc
cld
push
and
pop
add
jae
jl
jecxz
loope
push
loopne
pop
add
mov
in
sub
stos
cmp
dec
push
add
fsubrl
imul
fwait
fwait
pop
mov
pop
xor
mov
push
add
cmp
mov
adc
push
add
cmp
push
pmovmskb
dec
add
clc
cs
dec
pop
mov
mov
add
mov
add
je
mov
ljmp
incl
add
add
lea
jb
cmpb
xor
dec
add
neg
fwait
push
add
arpl
cwtl
xor
add
ljmp
arpl
mov
or
or
push
pushf
aad
ja
iret
rolb
cmpsl
add
cmpsl
sbb
push
add
mov
add
inc
add
jle
out
sbbl
adc
cmc
sub
add
add
fsts
jns
sub
mov
ja
adc
add
insl
xlat
stos
int
mov
icebp
setno
addr16
add
xor
jbe
and
test
in
add
fidivl
lods
dec
and
inc
mov
add
add
or
add
add
pushf
dec
add
ret
cs
mov
fmul
mov
add
scas
push
and
fwait
movsl
jbe
or
sti
mov
jp
push
add
add
pushf
in
add
nop
mov
add
in
xchg
mov
mov
scas
and
pop
add
add
rcll
push
add
add
filds
cmp
jnp
add
rclb
lea
mov
and
add
add
sarl
add
sbb
push
or
call
add
pusha
add
add
add
shll
xor
add
test
pop
enter
lret
fisubrl
pop
push
dec
mov
adc
jg
add
ja
add
add
add
fwait
pop
add
add
add
sub
repz
mov
mov
and
and
mov
cmp
dec
add
xchg
and
pop
xor
les
add
movsl
pusha
add
xchg
add
jae
add
lret
loopne
mov
gs
xor
mov
ret
js
push
mov
add
inc
sbb
sbb
add
add
add
cmp
out
and
fsubrl
roll
add
jne
cmp
aas
data16
pop
add
fcomp
mov
jmp
adcb
add
inc
add
pop
add
add
push
add
inc
inc
add
out
ret
test
jne
in
movsb
dec
mov
out
jae
iret
jg
cmp
ja
add
xlat
imul
popa
xchg
lods
out
add
jnp
jp
in
jae
sbb
xor
in
test
add
dec
add
jmp
jns
cmp
add
sbb
clc
mov
fcomip
push
inc
add
aam
mov
jns
fcomps
add
add
imul
out
push
loopne
xchg
xor
cmp
test
and
add
mov
cmp
lock
pop
add
lahf
hlt
jmp
mov
in
data16
push
add
stc
gs
jae
push
dec
add
add
xchg
arpl
sarl
add
push
add
dec
add
dec
add
push
add
inc
add
lds
or
addl
insl
mov
sarl
cmp
dec
jg
add
mov
jecxz
pop
mov
je
jg
jmp
mov
adc
divl
aas
pop
rcrl
sbb
call
lods
loopne
jmp
outsl
ljmp
js
in
scas
mov
add
adc
mov
jno
add
fwait
xor
daa
aam
dec
add
add
pop
add
andl
add
mov
adc
xor
int3
push
add
push
push
add
adc
repnz
data16
dec
add
xor
lret
bsf
mov
jle
icebp
mov
jmp
mov
xchg
les
pusha
add
lds
mov
loope
add
das
leave
cmp
jle
mov
adc
dec
jns
jp
in
or
push
pop
add
daa
xlat
cmpb
push
sbb
lods
pop
xchg
pop
add
jle
pusha
add
cmc
clc
inc
add
add
leave
in
js
ja
add
pmaddwd
add
addr16
pop
ficomps
scas
and
outsl
push
add
ljmp
sub
leave
out
shrl
add
fldln2
loop
pusha
add
xor
and
mov
add
add
xchg
fxch
adc
or
pop
adc
lock
test
lods
fwait
in
xchg
pop
add
add
faddl
mov
xlat
push
sti
or
xchg
fdivl
add
dec
in
cmpsl
xchg
pop
add
add
mov
mov
push
add
add
stc
pop
add
mov
or
fimull
sbb
adc
push
xlat
sub
sbb
adc
pop
add
jb
xor
outsl
xchg
ror
rolb
add
dec
add
xchg
mov
add
mov
add
add
inc
add
call
or
dec
add
rcl
mov
ret
sbb
inc
xor
cmc
iret
xor
cld
inc
add
inc
add
ret
jbe
pop
out
icebp
orb
sbb
jmp
add
fsubs
iret
loopne
and
lods
test
push
add
add
aam
mov
add
cltd
xor
loopne
sbb
add
sbb
fs
push
shlb
add
mov
add
add
cwtl
add
mov
data16
inc
decl
add
xorb
bound
mov
mov
push
add
inc
pushf
in
dec
xchg
push
add
add
jbe
cmp
add
add
into
mov
push
ljmp
cltd
loope
movsl
adc
jmp
inc
add
push
add
int
add
add
daa
outsl
movsl
mov
rol
jmp
push
xor
data16
arpl
jmp
add
jmp
call
lret
xor
pop
add
fldcw
add
add
lret
and
dec
add
loope
lock
ror
sub
scas
cltd
inc
sbb
jmp
pop
mov
cld
shll
iret
pop
add
dec
inc
add
mov
mov
inc
add
xor
add
sbb
cmpsb
lock
imul
add
jge
jne
mov
fcmovne
jns
movsl
stos
inc
mov
clc
pop
add
add
sub
and
cmpsl
sbb
add
sbb
shlb
cmpsl
mov
cmc
ljmp
adc
cmpsb
bound
fcompl
inc
add
iret
lea
xor
fdivrl
ljmp
fisttps
std
sahf
add
add
cmpsl
ljmp
add
stos
inc
mov
cmc
mov
negl
ss
imulb
int
aas
out
sahf
jne
and
pop
add
je
cmp
mov
add
into
inc
test
lea
pop
out
jge
ficoms
add
xchg
sbb
ja
lds
add
push
add
sahf
push
lds
add
or
add
sbb
inc
add
sbb
cmp
add
add
mov
mov
adc
lret
adc
in
cmp
ljmp
mov
psllq
aad
xlat
mov
ljmp
cmc
aas
lods
sarb
add
add
add
and
lcall
adc
lock
insb
add
int
push
add
jae
fidivrl
loopne
push
popl
lahf
jnp
out
add
sahf
insl
hlt
push
add
dec
jnp
sub
neg
fscale
cli
fsubp
das
test
mov
jge
xchg
bound
aas
dec
add
push
mov
add
push
mov
pop
add
fistl
lret
test
and
inc
ja
test
cwtl
sub
add
or
add
inc
add
xlat
adc
push
add
add
fildl
add
add
mov
ret
sub
sbb
fyl2x
dec
xchg
xchg
or
xor
inc
add
add
adc
cmp
addb
add
xor
bts
mov
sbb
mov
mulb
in
pop
cmp
lds
dec
ficomps
adcl
xor
push
add
add
sbb
sub
push
scas
loope
int
add
pushf
movsb
push
sahf
std
mov
xor
adc
sti
cltd
push
aaa
mov
rolb
mov
aas
fucom
ja
add
push
add
cmp
repz
mov
fwait
inc
add
push
add
enter
jbe
sub
mov
js
jbe
mov
inc
add
cmp
xchg
add
cmp
mov
add
add
dec
sbbb
add
jecxz
lds
cltd
lret
dec
adc
xchg
jo
loope
cmp
or
js
push
add
add
adc
mov
jp
imul
enter
xchg
sub
mov
cmp
clc
inc
add
mov
jp
pop
adc
popa
addr16
enter
sbb
push
add
add
add
lcall
add
in
enter
add
jecxz
daa
cmp
test
add
jl
out
cmp
add
out
inc
xchg
stos
inc
cwtl
add
ljmp
sti
test
or
dec
add
add
add
aas
and
popf
jge
ja
lock
ficoms
loope
and
add
dec
adc
cmp
add
mov
add
fists
jns
adcb
xchg
cmpsl
rcrb
pop
add
inc
add
scas
ja
add
add
shll
adc
cwtl
imul
mov
add
stc
adc
jg
movsl
dec
add
xchg
or
mov
pop
lret
ja
add
add
adc
add
fcoms
and
cmp
add
add
add
inc
loop
les
in
jge
dec
add
add
pop
mov
fistps
xchg
pop
add
mov
scas
push
add
mov
int3
mov
dec
loop
add
push
lahf
xchg
cmp
xor
pop
ljmp
in
mov
add
pop
and
fnsave
popa
mov
test
dec
add
lret
fstpt
add
add
add
add
jecxz
addr16
adc
and
sbbl
stos
jnp
add
push
add
add
add
imul
ror
push
add
mov
inc
add
add
pop
add
or
add
add
insl
dec
or
dec
adc
xchg
xchg
push
add
adc
daa
sbb
seto
push
add
xchg
nop
jbe
data16
jge
add
add
add
ret
pop
jle
add
add
add
cmp
pop
xor
scas
hlt
inc
add
add
xchg
pop
add
add
loopne
mov
mov
dec
add
add
push
add
add
fld1
xchg
push
andl
and
push
add
add
sti
xchg
sbb
xchg
test
je
xlat
decb
fwait
and
out
push
neg
gs
lret
or
mul
mov
insb
add
sbb
lock
decl
fsubs
add
js
mov
cwtl
bound
push
jl
out
nop
and
dec
add
mov
data16
leave
cld
or
mov
sbb
adc
inc
add
sbb
add
leave
outsl
movsb
xor
add
pop
mov
outsl
popa
test
add
add
insb
add
sbb
fistl
adc
rcrb
xor
add
sbb
cmp
cmpl
and
dec
add
jle
sbb
mov
fnsave
sbb
mov
cmpsb
xchg
jmp
dec
add
and
push
sbb
fldcw
mov
scas
bnd
imul
adc
lret
add
mov
xchg
movsb
pop
enter
in
lret
jo
xchg
pop
cmp
out
inc
add
add
push
mov
add
test
add
in
add
aad
lahf
std
pop
in
push
dec
imul
add
lds
mov
cmpl
add
test
mov
mov
lahf
lods
popf
sub
negl
jnp
pop
les
jg
rcrb
inc
sub
push
add
add
add
add
stos
loopne
add
xchg
bound
adc
incl
inc
add
add
mov
add
mov
and
xor
add
add
int
or
leave
jge
add
add
mov
add
cmp
add
loop
jmp
pop
add
paddb
mov
in
hlt
sarb
inc
add
pop
mov
cli
dec
add
add
out
imul
xchg
or
insl
test
add
lcall
test
sti
repnz
xlat
out
add
jecxz
mov
ud0
into
popf
cmp
int3
outsl
jge
lahf
scas
push
jle
mov
mov
add
dec
fucompp
or
dec
xchg
adc
loopne
add
add
dec
mov
mov
add
clc
bound
popf
inc
add
sar
add
add
jmp
outsl
push
pop
jge
mov
add
and
push
add
rcrb
cli
lret
sub
add
leave
cli
mov
leave
fstps
jecxz
add
add
add
decb
add
idivl
dec
add
add
push
clc
mov
inc
add
add
test
loopne
add
add
sub
pop
ds
add
add
cmp
or
dec
mull
mov
xchg
iret
scas
push
add
sbb
mov
sbb
out
sbbl
jb
imul
aad
add
xchg
add
add
sub
cli
pop
and
ret
sti
sub
mov
jo
into
inc
inc
ja
addb
inc
sub
add
pop
add
add
mov
aas
inc
push
add
jl
rolb
fildl
icebp
movsl
loope
mov
add
mov
in
add
add
pop
inc
add
mov
push
add
add
add
mov
test
jg
add
inc
loope
mov
add
mov
mov
add
cmp
lods
lret
dec
rorb
mov
jns
jo
out
pop
jl
mov
std
add
jb
popa
jbe
ss
stc
mov
or
mov
es
and
and
lea
data16
inc
insb
add
mov
sub
add
inc
add
insl
rclb
movsb
push
add
add
mov
shll
add
out
outsl
xchg
mov
add
add
fwait
pop
add
push
add
add
outsl
ja
add
jle
addr16
add
lock
mov
add
xor
idivb
or
add
sbb
outsb
add
inc
add
add
sbb
nop
inc
add
in
fsubl
ret
add
xorb
mov
lods
push
outsl
add
add
sub
add
add
push
add
add
int
out
add
xor
mov
inc
add
adc
or
sbb
add
mov
push
add
dec
cmpsl
add
mov
add
stos
dec
add
imul
mov
add
ljmp
add
add
movsb
mov
iret
cmp
push
cltd
js
fs
fnstsw
add
aad
push
outsl
stos
xchg
add
add
cmp
data16
and
pop
xlat
testb
daa
rolb
xor
js
pop
inc
add
mov
sbb
jno
adc
add
add
add
fisubrl
roll
adc
add
xor
sbb
sub
sbb
movsb
movsb
mov
mov
adc
add
rclb
orb
loopne
daa
and
mov
dec
add
pop
add
mov
push
jb
pop
add
mov
inc
ret
sbb
lds
mov
mov
xchg
lret
dec
xchg
or
data16
add
mov
cmpsb
shlb
cmp
add
add
add
xor
loop
imul
add
mov
add
rolb
in
xor
inc
incb
imul
cmpsl
inc
add
jecxz
aas
sbb
in
jl
int3
in
ret
arpl
push
add
or
pusha
add
sbb
lods
cmpsl
jmp
add
inc
add
es
inc
adc
add
add
inc
mov
negb
add
xchg
mov
movsl
clc
jnp
sbb
fdiv
add
scas
mov
add
dec
add
mov
dec
add
push
add
dec
out
add
sbb
imul
add
sub
push
add
iret
rcll
mov
cld
fcomp
aaa
xchg
stos
add
int3
add
xlat
test
int
add
add
stos
xchg
dec
push
pushf
movsl
xor
mov
in
mov
loop
add
mov
leave
mov
aad
add
sub
sbb
add
aaa
jecxz
adc
ljmp
adc
add
out
xchg
add
cmp
jb
nop
pop
add
in
and
xchg
fcomps
sarb
add
jl
xor
cmp
pop
filds
stos
push
sbb
lds
add
push
add
add
sarl
add
or
adc
fldenv
or
mov
mov
sbb
add
push
add
jle
arpl
add
mov
push
add
lahf
ja
lret
nop
push
lds
add
add
arpl
dec
add
out
and
shll
lahf
mov
dec
lock
sub
xchg
add
push
add
add
xchg
das
cmpl
add
add
add
add
add
xor
iret
mov
sub
push
lret
mov
fwait
add
fsubrl
jbe
in
movl
stc
cmp
cmp
sub
lea
stos
mov
cwtl
aad
add
jno
jno
lret
insl
pop
pushf
mov
add
pop
add
xchg
test
add
add
jo
out
mov
pusha
add
jmp
push
add
add
je
inc
or
int
mov
xchg
xchg
add
std
arpl
insb
add
fwait
mov
add
call
out
int3
popa
stc
add
add
add
add
push
mov
pop
jecxz
add
test
or
or
in
add
sbb
add
cli
cld
xchg
les
add
scas
xchg
sarb
mov
add
mov
cli
sbb
or
enter
inc
cmp
xor
mov
ret
cmp
push
dec
xor
testb
jno
inc
add
or
cmpsl
xchg
in
mov
clc
add
fwait
sub
lahf
lods
cmp
add
pop
or
mov
xor
cmc
cltd
pop
add
xchg
sub
add
insb
add
or
nop
fbld
dec
mov
pop
add
push
add
addr16
cmp
mull
aam
fcmovu
add
psubb
or
xchg
out
jge
dec
add
pop
add
inc
add
push
add
bound
dec
add
and
repz
cmp
xor
shl
movntps
cmp
add
pop
and
scas
lret
outsl
adc
xor
inc
add
insb
add
sbb
ficoms
insl
pusha
add
sub
jg
out
or
movsl
jae
lods
repz
int3
imul
scas
cmp
mov
add
xor
mov
jnp
add
pop
xor
idivl
add
mov
add
lcall
add
fcompl
imul
jg
lmsw
out
sub
add
mov
add
popa
icebp
xchg
jbe
imul
movsb
test
xor
mov
cmp
push
add
and
shlb
decb
lods
outsl
aas
and
add
jae
add
xor
xlat
push
adc
pop
pusha
add
add
mov
cmp
imul
insb
add
sbb
sub
fidivl
mov
xlat
pop
jnp
jne
cmp
add
movsl
mov
add
dec
mov
mov
in
fwait
lret
xor
in
mov
test
mov
add
jecxz
dec
mov
add
test
pop
jbe
sbb
cli
test
icebp
sbb
add
ret
push
add
imul
add
addr16
pop
add
jg
les
sub
sahf
inc
add
imull
jo
cwtl
aad
stos
arpl
cmp
lods
xchg
xchg
xchg
pusha
add
mov
and
mov
add
pop
nop
jmp
mov
shr
add
test
shll
dec
sub
or
and
lret
dec
add
sbb
out
jge
add
pop
mov
xor
and
or
add
adc
add
movsl
arpl
jno
push
add
loopne
icebp
sub
roll
cmc
cld
and
inc
sub
pop
add
sti
mov
lods
cli
fbstp
inc
add
push
add
and
daa
mov
out
sbb
js
add
loope
and
dec
add
add
popf
jae
jne
rcll
sub
scas
jecxz
add
xchg
lcall
xorb
mov
add
nop
cmp
adcl
fwait
jae
add
arpl
and
cmc
mov
dec
add
lret
fsubl
add
jmp
add
add
add
add
out
jl
lcall
jo
leave
pop
jo
negl
xor
sbb
inc
ss
mov
adcl
add
mov
loopne
add
add
popf
pop
jmp
pop
add
jb
xor
fisttpll
loopne
xchg
popa
cmp
shlb
xchg
rolb
dec
cmp
mov
cmp
cltd
xor
jecxz
lahf
loop
outsl
and
arpl
add
enter
xlat
adc
jg
add
sub
or
lea
add
hlt
dec
add
pop
scas
pop
add
data16
jne
rclb
sarb
daa
pop
add
mov
inc
add
add
sahf
mov
dec
add
add
mov
in
jno
jae
jmp
inc
add
movsl
pop
add
in
add
inc
arpl
xchg
adc
add
jno
out
addr16
dec
cmpl
andl
push
add
out
dec
dec
add
cmp
stos
xchg
fst
xor
addr16
inc
add
pop
mov
add
xchg
add
add
bound
mov
add
fstpt
add
cmp
xorb
push
add
cmp
jmp
insb
add
push
add
add
lds
dec
jno
push
add
ss
shr
imul
lods
bound
arpl
adc
aad
mov
andb
call
add
add
add
pop
sbb
mov
push
add
fmull
add
add
stc
sbb
mov
add
cmp
sub
cmp
cmp
sub
mov
add
pushf
cli
loope
daa
scas
popf
jo
add
outsb
add
add
mov
add
jno
add
cmp
push
loopne
inc
sahf
adcb
push
and
add
adc
sbb
in
int
push
cmp
subb
xchg
call
arpl
call
add
fcomi
mov
add
sub
icebp
jg
sbb
rcll
mov
dec
dec
mov
or
aad
add
xchg
push
add
test
pop
add
or
or
jp
rorb
add
add
pop
add
lret
push
add
shr
mov
out
mov
add
xchg
pusha
add
notl
rcr
pop
add
data16
out
dec
test
stos
call
mov
add
lods
idivb
or
lock
jp
mov
loop
mov
add
add
push
int
cmp
pop
add
add
add
dec
add
and
add
mov
add
add
mov
insl
aam
xor
add
push
or
push
mov
mov
addl
xchg
push
outsb
add
xchg
decb
addr16
int3
lret
fmuls
lret
mov
imul
stos
push
add
and
inc
add
xchg
jo
sbb
cmp
inc
add
add
std
into
negb
pop
adc
adc
xor
aas
push
add
add
loopne
iret
dec
add
cld
mov
add
dec
fbstp
ret
loope
push
dec
add
dec
add
add
lcall
lahf
ret
or
or
jno
mov
jbe
adc
loop
out
pop
inc
stos
fnstcw
outsl
mov
sub
add
leave
insb
add
add
add
xor
xor
add
cld
dec
add
mov
pop
add
mov
loop
jae
mov
mov
add
daa
fldt
push
add
add
add
inc
add
add
xor
call
jge
pop
add
adc
sarb
out
rolb
mov
xchg
lods
lea
icebp
arpl
or
xchg
mov
inc
adc
std
pop
rcrb
aas
test
ljmp
and
adc
scas
jne
jl
sub
fcmovnu
rcrl
lret
mov
adc
fdivl
dec
jo
mov
push
xchg
xchg
arpl
fdivrl
daa
cmpsl
inc
add
jp
sbb
sub
mov
pop
add
sub
outsl
insb
add
mov
inc
imul
js
sbb
jecxz
clc
shll
add
cwtl
lods
xlat
call
xor
add
add
jnp
out
inc
add
sub
outsb
add
inc
add
add
cmpsb
repz
xor
stc
add
arpl
mov
add
and
pop
add
dec
sbb
xlat
pushl
sbb
add
pushf
scas
pop
shrl
add
call
mov
add
jecxz
push
add
or
xchg
add
jns
add
sbb
jo
rcrb
jae
and
stos
out
icebp
xchg
int
cmp
test
iret
enter
mov
xchg
hlt
xchg
add
lahf
out
dec
add
add
lcall
imull
add
add
push
fbstp
lahf
cmp
and
stos
fsubrs
icebp
mov
pushf
jmp
subps
shlb
dec
add
mov
add
add
inc
popa
xchg
inc
dec
add
inc
sti
mov
addl
push
inc
rcrb
add
add
jns
add
lret
outsb
add
cmc
pop
aam
repnz
add
push
mov
and
andl
pusha
add
bound
xchg
mov
clc
sahf
lods
push
add
mov
fistps
pop
data16
pop
add
sub
data16
dec
sbb
and
push
lea
add
int3
push
add
repz
mov
fsubp
icebp
mov
add
cmp
cmp
pop
add
xor
and
stos
bound
pusha
add
mov
mov
pop
nop
jae
xchg
sbb
iret
sbb
add
inc
xchg
cmp
add
mov
mov
xchg
lcall
pop
add
lods
xchg
xor
stos
movsl
and
sub
test
stos
fmul
jg
add
add
gs
add
leave
pop
add
and
fld
cmpb
clc
add
dec
sub
aad
fldl
sub
cmc
sub
dec
or
lcall
add
jmp
sti
sbb
pop
xlat
stc
xor
jns
push
orb
add
sbb
sub
inc
ror
mov
push
add
stos
fcmovu
pop
inc
add
add
xor
pop
sbb
orb
add
stos
mov
rolb
cmp
fcmovnbe
pop
xchg
mov
mov
jl
cld
int3
jp
mov
sti
test
fsubrs
mov
add
xor
add
add
mov
sub
jmp
movsb
test
lods
js
icebp
push
add
add
lcall
add
xor
dec
add
add
jl
cs
fwait
mov
add
ljmp
sbbb
shl
scas
mov
insl
test
arpl
shlb
add
add
add
mull
jne
lahf
sub
and
sub
loop
mov
mov
mov
add
add
sub
into
shll
iret
fcomps
pop
add
add
pusha
add
jb
push
add
sbb
mov
push
add
cld
lea
and
sub
add
pop
sbb
popa
nop
icebp
imul
shlb
add
add
cld
test
add
cmp
mov
cmpsl
dec
add
lods
sub
movsb
cmpsl
adc
xlat
mov
mov
jns
add
repnz
fwait
aam
add
pop
add
cmp
push
jns
dec
xor
inc
pop
add
add
shrb
pop
pop
add
fcoml
add
add
dec
add
cmpsb
xchg
dec
jae
jns
and
cmp
data16
add
and
add
add
negl
jae
int3
scas
popf
test
pop
leave
pop
add
lcall
mov
add
sbb
add
jecxz
xchg
fdivr
cmp
add
add
add
add
out
add
inc
repz
add
add
and
add
unpcklps
arpl
mov
mov
add
sbb
aad
add
add
aam
repnz
data16
imul
sbb
add
xor
mov
rclb
pop
push
add
mov
jb
pop
add
jmp
or
cmp
fwait
data16
gs
dec
add
repnz
dec
add
repz
loopne
imul
add
mov
ja
push
popa
push
loop
or
pusha
add
add
add
adc
adc
jnp
popa
int
nop
jmp
popf
call
repnz
mov
pop
sbb
add
add
ret
call
in
loope
add
mov
in
mov
add
call
add
icebp
add
sbb
sbb
aaa
jb
mov
sbb
dec
push
add
add
stos
bound
pop
lret
mov
ffree
jae
xor
pop
outsl
test
call
cmp
clc
vpaddsw
mov
jmp
mov
aaa
in
sbb
fistpl
lock
sub
fnsave
push
add
xor
add
add
add
jp
push
add
pusha
add
mov
push
add
mov
add
cmp
addr16
xor
add
add
outsl
imul
xchg
lahf
jge
sbb
push
add
mov
rclb
add
call
aam
jo
sahf
mov
data16
add
ss
inc
lret
mov
add
into
repz
imul
or
add
add
add
or
mov
dec
mov
loope
add
test
jmp
add
subb
lret
mov
inc
dec
add
add
popf
icebp
test
mov
push
add
add
add
mov
fistl
add
dec
add
xor
add
sahf
adc
sbb
add
sbb
add
cmp
mov
add
mov
aas
addr16
outsb
add
add
add
jo
fcoms
add
movsl
sbbl
fisttps
xchg
adc
pop
add
mov
les
and
mov
dec
fistpll
add
addb
push
enter
mov
add
js
iret
inc
push
mov
add
stc
mov
enter
add
aad
mov
add
addr16
xchg
mov
je
mov
test
add
jne
and
stos
fcmovnb
dec
xchg
dec
in
pop
pusha
add
out
add
jne
xrelease
insl
cmp
add
fcom
push
add
sbb
sbb
mov
stos
in
mov
andl
inc
pop
add
loopne
fcoms
adc
jle
xor
cmpsb
loop
in
pop
add
mov
mov
ficoml
mov
pop
test
cmp
mov
dec
add
xchg
dec
jns
mov
iret
in
add
xor
lcall
add
jmp
fldl
stos
hlt
push
fistl
lds
add
add
mov
or
sbb
movsl
enter
sbb
test
jno
adc
mov
add
inc
add
add
mov
add
out
push
xchg
and
mov
jns
mov
add
dec
add
add
add
cmp
imul
cmc
dec
add
out
add
fcmovne
imul
filds
cmp
or
mov
in
add
dec
jno
ret
out
data16
movsb
inc
add
add
and
popa
dec
add
je
mov
jp
sbb
cmp
cmp
sub
add
push
add
mov
ljmp
dec
cmp
mov
or
data16
inc
add
push
add
and
sub
pop
xchg
ds
adc
imul
out
adc
comiss
pop
add
sbb
leave
and
jno
add
cmp
jp
aam
gs
inc
add
add
push
add
add
lret
inc
add
cmc
das
jns
cld
jle
pop
sbb
sbb
sti
mov
lret
sahf
int3
push
add
pop
pop
adc
mov
add
add
add
movsl
lods
mov
push
add
add
add
xchg
jl
inc
add
add
xor
xor
jo
sbb
dec
add
add
movsl
ret
or
add
fdiv
push
add
xchg
xchg
jb
push
cwtl
iret
mov
adc
add
mov
add
in
add
fmuls
add
add
add
sti
ljmp
jb
or
jp
dec
pop
push
add
push
add
das
jae
sbb
add
dec
add
xchg
mov
test
outsb
add
add
add
roll
mov
add
xor
xchg
fadds
add
cmp
xor
lsl
cmp
add
test
add
ficoms
add
je
jmp
or
aaa
xor
mov
add
add
cwtl
jo
addr16
add
mov
add
or
sbb
xlat
scas
out
push
stos
pop
push
add
push
xchg
xor
adc
insb
add
pop
add
sbb
mov
stc
in
mov
movsb
dec
cltd
outsl
adc
stos
mov
mov
fidivs
pop
fdivp
sub
pop
and
cld
pop
adc
push
imul
daa
mov
iret
gs
add
add
add
rol
jge
stc
jne
add
pop
or
inc
lret
iret
pop
add
bound
roll
jg
add
push
add
inc
add
stc
push
add
aad
xchg
cmp
mov
insl
add
jle
push
add
jno
inc
add
cwtl
or
add
cltd
ret
das
push
add
rcll
mov
mov
and
mov
scas
shl
in
outsl
ret
pushf
roll
add
xacquire
mov
sub
leave
cmp
jo
adc
and
imul
out
mov
add
add
cmp
test
jmp
adc
pop
sub
mov
add
push
scas
in
lds
add
mov
sub
cltd
sbb
mov
and
mov
mov
add
xor
insl
inc
add
pop
iret
mov
mov
mov
pop
dec
add
fldl
add
movb
into
sbb
add
add
add
add
push
add
cmpsb
mov
add
pop
stc
jp
push
cli
sbb
adc
leave
mov
xlat
pop
add
add
pop
fcoms
push
add
mov
add
dec
inc
jnp
fdivl
insb
add
into
test
lret
mov
pop
sub
or
mov
add
iret
scas
push
add
in
add
and
add
add
add
add
popl
pop
add
xor
imulb
xchg
xlat
data16
addr16
insb
add
bnd
pop
add
add
jmp
loopne
add
add
or
inc
add
add
lds
dec
dec
gs
dec
add
sbb
mov
add
push
test
fdivrl
icebp
out
inc
popa
aas
or
sbb
clc
or
mov
into
fdiv
inc
add
pop
add
mov
add
push
add
addr16
fisubs
test
add
scas
or
nop
sub
inc
sub
lea
data16
add
popf
add
rcl
stos
adc
and
dec
lcall
mov
mov
push
cwtl
mov
in
pop
fildll
and
adc
mov
add
add
das
movsl
pushf
xor
mov
inc
add
sti
jmp
ret
outsl
lods
push
add
test
adc
mov
or
dec
mov
imul
cmpsb
dec
add
push
add
pop
movl
cmpsl
adc
mov
add
ror
cmp
and
add
add
dec
add
in
pop
movsb
add
nop
mov
or
fdivr
mov
insb
add
lock
dec
add
add
add
mov
xor
or
in
mov
add
pop
add
fiadds
add
cwtl
add
sbb
lock
dec
cltd
xchg
dec
add
xchg
add
loop
sbb
push
repz
rcl
sbb
lcall
add
jbe
repz
sbb
mov
push
xchg
pop
mov
pop
add
mov
pop
xchg
push
add
cmp
rolb
add
fmul
shrb
mov
lret
mov
xor
pop
or
movsl
shll
bound
xchg
xchg
ret
add
add
imul
dec
add
rorl
push
cli
pop
inc
add
enter
lea
adc
sub
or
or
add
push
add
cmp
ja
push
jmp
add
add
les
sahf
mov
add
adc
fcmovbe
dec
mov
mov
in
inc
add
add
add
xchg
cmp
cli
add
or
por
icebp
push
add
mov
loop
add
add
add
insl
add
add
lods
imul
lcall
leave
hlt
cmpsb
fnsave
inc
add
add
lahf
sub
testl
jae
repnz
inc
pusha
add
inc
xor
add
add
shrl
nop
aas
pushf
sbb
jl
sub
mov
push
add
jl
jecxz
cs
sbb
insl
bound
cwtl
enter
cmpsl
std
and
out
or
cmp
lahf
xor
push
add
add
add
add
xor
int
aaa
sti
sbb
push
add
stos
mov
add
cli
pop
add
add
adc
jp
add
pop
add
mov
dec
add
xor
dec
and
add
xor
movntps
cmovle
call
adc
push
add
sbb
fdivl
add
stos
scas
cwtl
and
je
repz
fnstenv
add
add
cmc
cmp
mov
stos
std
add
adc
xor
push
add
pop
add
add
mov
push
add
mov
popf
fwait
scas
cs
xchg
dec
cld
and
pop
int3
pushf
mov
add
add
dec
add
add
xchg
test
pop
flds
jl
ftst
hlt
mov
mov
add
ror
lods
pop
xchg
add
out
add
gs
add
jmp
jae
and
cmp
lret
ret
std
push
xor
mov
inc
add
add
iret
in
ficoml
movsl
dec
add
add
cmp
add
aaa
js
in
pop
mov
add
scas
pop
add
lret
xchg
sbb
ficomps
lock
xchg
inc
or
sub
add
andps
fiaddl
in
sub
or
push
jl
lret
lea
adc
stos
sbb
fsubrs
xor
sbb
ret
scas
movsb
fndisi(8087
adc
xchg
cwtl
jns
add
mov
pop
add
push
xchg
into
inc
aas
fidivrs
add
add
fwait
pusha
add
js
inc
add
add
shlb
pop
push
add
add
aam
adc
mov
cmc
test
mov
push
add
fsubs
add
add
push
add
ljmp
sbb
fld
cmp
aas
cmp
jne
mov
inc
loope
inc
jecxz
add
add
std
dec
add
addb
inc
add
cmpsb
int
cld
aad
cmp
in
pop
dec
add
add
adc
xor
pop
add
es
or
sub
sub
dec
add
aam
fisubl
mov
mov
sbb
in
add
mov
loop
int
add
sti
add
xor
add
add
add
inc
and
repnz
and
mov
adc
mov
fdivrl
jl
rcl
sahf
push
xchg
insb
add
push
add
sub
test
mov
out
add
xlat
adc
add
mov
ja
push
cmp
xchg
add
xchg
repnz
mov
addr16
out
out
mov
mov
mov
subl
mov
mov
add
add
add
cmc
movsl
sub
addb
gs
inc
and
pop
pop
add
into
imul
push
pop
adc
and
xchg
mov
add
lods
xor
mov
or
lea
add
add
aas
shr
mov
stos
clc
jg
adcb
xchg
xor
ja
ret
pop
add
jle
insl
pop
add
add
sti
mov
lds
add
int
add
push
stos
pusha
add
gs
push
mov
gs
add
fwait
stos
cmp
aas
sbb
cmp
cmpsb
scas
lret
pop
xorb
adc
push
add
add
add
push
pop
pop
add
inc
add
rcrb
ds
dec
out
add
sub
pop
dec
add
add
add
push
add
adc
jnp
in
aas
ljmp
stc
cltd
test
xchg
lock
ja
sub
or
push
add
add
or
ret
jl
jo
push
pop
pop
jecxz
int
xchg
outsl
adc
ret
push
add
or
test
dec
xchg
pushf
cmp
test
xchg
into
push
add
ja
add
push
add
push
add
mov
add
or
xchg
leave
pop
add
jns
add
int
xchg
ss
mov
cli
push
mov
add
mov
add
outsl
dec
les
jge
push
add
decb
add
add
cmp
jae
fildll
add
add
lock
add
mov
adc
popf
add
jno
add
jb
icebp
lods
jns
hlt
mov
add
jnp
dec
add
fnstenv
dec
add
mov
pop
add
nop
lods
or
mov
leave
xor
add
add
push
add
xchg
add
add
in
cmp
pop
dec
add
scas
cmc
jmp
outsl
xchg
fcmovne
data16
cmp
adc
xchg
data16
xor
ficoms
add
clc
jmp
es
adc
jp
or
sbb
adc
lds
in
lcall
add
nop
cwtl
add
lods
es
mov
or
outsl
mov
sub
insl
or
xchg
cli
jge
xor
xor
xchg
sti
push
add
inc
add
out
stc
popl
subb
popl
addr16
or
add
pusha
add
pop
jl
stc
xor
gs
add
add
divb
in
out
jle
or
xchg
sarb
mov
fs
push
inc
add
les
in
lea
mov
add
push
add
add
sti
lahf
inc
cld
or
and
xor
test
add
stos
add
sbb
bound
das
in
mov
add
jne
add
inc
adc
jno
out
add
pushf
sbbb
xor
jbe
addr16
mov
push
push
out
dec
add
pop
add
dec
lock
mov
cmp
fst
pusha
add
aad
hlt
in
mov
add
adc
dec
add
les
outsl
aam
add
adc
bound
repnz
test
add
das
adc
mov
push
add
cmpsl
pop
xorb
add
in
rcll
add
inc
add
add
and
push
cwtl
ss
icebp
es
sub
add
adc
in
les
add
mov
pusha
add
sbb
xor
das
cmp
jle
add
cli
scas
ja
xchg
and
cwtl
aaa
int
dec
add
add
jb
fldl
mov
add
jp
mov
jmp
add
and
xchg
adc
rorb
das
data16
xor
int
pop
mov
ficomps
add
inc
add
popa
xor
movsb
sbb
out
fcmovnu
test
add
push
add
sbbb
imul
inc
push
add
cmc
xchg
mov
sub
loop
add
adc
jle
cmp
add
lret
add
jbe
push
add
dec
adc
add
add
mov
jne
add
pop
fsts
fdiv
mov
and
xchg
pop
inc
pop
dec
aas
and
adc
pop
cmp
add
xor
mov
cmp
and
imull
add
mov
stc
gs
ja
frstpm(287
test
inc
add
and
add
push
sti
mov
mov
mov
xor
cmp
mov
fisttpl
pop
shrl
push
out
and
push
fistpl
add
inc
add
mov
add
xchg
and
js
or
inc
add
aam
jb
and
in
jg
dec
add
add
push
and
sub
add
add
pop
add
add
pop
invd
add
push
add
add
mov
mov
loop
cmp
add
mov
iret
fldcw
jae
add
add
shll
add
and
arpl
jbe
or
hlt
fcoms
xlat
insl
scas
xchg
push
or
mov
add
js
sub
jl
lds
ficoml
call
pop
add
fs
and
xchg
sbb
into
cltd
repz
add
loop
add
cmp
cltd
sbb
das
ljmp
mov
jg
jg
cmp
adc
int
add
xor
mov
imul
incl
push
add
and
fcoml
mov
cmpsb
scas
push
add
lods
sbb
fdivrs
add
add
loop
add
mov
add
out
add
add
mov
fistpll
add
add
mov
and
cmpl
dec
add
fidivrs
aam
and
sahf
lds
mov
add
dec
shll
aas
int3
xchg
mul
iret
in
add
adc
stc
cmc
mov
cmc
movsl
xor
dec
add
add
outsl
mov
insl
pop
add
cld
mov
and
xchg
add
out
lods
sbb
add
and
jle
aam
mov
cmc
xor
add
and
xlat
fdivrs
in
nop
and
bound
imul
inc
add
add
fistpll
sbb
cmp
add
mov
lds
adc
add
int
mov
lods
adcb
pop
int3
xchg
cld
inc
sub
sub
add
frndint
xchg
jo
jb
xor
dec
add
bound
xchg
lock
pop
fimuls
add
lds
add
inc
add
popa
xchg
push
add
mov
jae
add
in
add
mov
sub
test
add
add
jno
shll
stos
sub
mov
add
push
mov
push
adc
mov
mov
add
daa
cwtl
mov
ja
inc
mov
fistpll
in
add
pop
mov
ficomps
adc
scas
xor
testl
lds
add
aas
popa
jmp
pop
pop
add
cmc
loopne
mov
push
add
mov
add
add
bound
int
adc
or
jmp
fisttps
dec
add
jecxz
add
add
mov
loopne
out
add
add
pop
jae
insl
xchg
dec
add
cmpb
mov
enter
jnp
sub
add
push
add
add
bound
add
insl
sti
pop
stc
enter
add
add
mov
aad
cli
push
add
out
jae
add
aaa
data16
dec
int3
stos
ficomps
add
jmp
pop
aaa
ret
push
stc
lcall
add
pop
mov
sub
xchg
inc
add
jae
pop
mov
icebp
mov
lret
add
jo
pop
lods
xor
lcall
xlat
sahf
gs
add
insl
or
xlat
int3
adc
push
mov
lea
add
mov
pop
add
pop
add
add
pop
add
jbe
pop
sti
cld
mov
popf
sub
sub
push
add
push
add
push
add
ja
sub
add
add
mov
sub
and
imul
add
rorl
jg
lcall
sbb
add
jnp
add
inc
push
add
add
jbe
or
test
xlat
jp
js
xor
mov
inc
add
add
pop
add
add
shll
add
outsb
add
cmp
loop
add
leave
test
adc
icebp
mov
outsl
xor
lea
inc
add
and
sahf
out
or
sub
jne
sbb
das
mulb
fcoms
inc
add
shr
add
pop
add
cmpsl
pop
add
fcom
push
add
add
cltd
cmp
add
pop
add
mov
cmp
mov
and
add
add
adc
cmpsl
mov
cmp
push
shl
dec
add
xchg
add
call
inc
mov
enter
data16
add
add
push
pop
mov
jns
icebp
mov
movsb
loop
popf
lret
ja
jg
and
xchg
pop
jl
sub
push
add
push
add
ret
add
jno
add
mov
stos
and
sbb
add
hlt
enter
mov
xchg
std
xchg
pop
in
imul
sub
gs
ja
add
add
lods
shl
push
add
pushf
adc
cmpsl
push
hlt
inc
pop
add
mov
add
stos
out
data16
and
xchg
inc
add
out
adc
push
add
cmc
pop
mov
cmpsl
jmp
scas
sbb
cmpsl
pop
rcl
nop
cmpsb
xor
sub
jb
mov
repnz
pop
ret
ret
fwait
pop
fwait
lds
popf
dec
add
add
cmp
add
sub
jns
lcall
loopne
xlat
add
adc
pop
fmul
dec
dec
add
add
cmpsb
js
out
dec
mov
inc
inc
mov
fstps
add
hlt
iret
aas
pop
add
mov
mov
rorb
daa
jmp
inc
test
add
loope
jae
jle
aas
push
add
add
insl
stos
test
test
add
or
push
add
jbe
ljmp
mov
add
add
in
add
add
pop
lods
pop
ja
add
add
adc
in
adc
add
rcrl
enter
inc
inc
add
add
pop
xchg
push
jnp
add
mov
adc
cs
pop
jo
sar
ljmp
add
pop
out
xchg
push
add
mov
out
xlat
and
pop
push
add
inc
cmpl
dec
jb
scas
sub
xchg
in
lret
enter
xchg
and
dec
add
stos
loop
lcall
sub
mov
and
inc
mov
je
inc
inc
add
add
adcl
mov
inc
add
mov
stos
lock
js
xchg
aad
filds
sub
push
add
sahf
daa
mov
ja
shl
popa
xchg
je
notb
mov
mov
or
cmp
push
add
jl
push
add
or
mov
push
add
out
adc
shll
cmp
pop
sti
loopne
add
stc
lahf
push
add
adc
mov
add
lods
andl
pop
pop
push
xor
or
mov
add
add
xchg
add
adc
outsl
jns
mov
or
add
in
aam
add
add
outsb
add
xchg
nop
imul
xor
enter
pop
add
add
fwait
repz
out
add
add
testl
add
enter
sbb
bound
je
sti
pop
add
add
into
add
arpl
push
daa
jne
insl
btr
add
add
adc
push
add
data16
jno
add
xchg
daa
sbb
test
push
add
xchg
push
mov
jne
pop
add
int3
cmpsb
and
xor
add
loope
add
and
pop
add
push
fstps
test
mov
and
testb
add
add
add
mov
add
add
add
rolb
mov
add
inc
add
mov
roll
xchg
inc
add
stc
lods
inc
inc
add
fidivl
pushf
dec
add
std
pop
add
dec
add
fs
loopne
pop
add
add
mov
mov
pushf
add
push
jne
add
jne
out
pop
push
stos
inc
add
pop
mov
mov
in
jo
das
sbb
lcall
jmp
shrb
fstps
cltd
mov
fisttpl
or
stos
data16
rcr
test
cmpsl
sbb
pop
test
int
add
mov
sarl
jle
add
add
mov
lds
cmp
push
add
add
add
mov
xchg
dec
add
fldcw
inc
fwait
mov
aam
in
push
add
loop
imul
imul
adc
sub
sbb
dec
add
mov
mov
jno
inc
add
mov
add
add
movsl
adc
cmpsb
push
inc
sub
xor
xchg
rclb
add
lods
test
ror
ret
aaa
sbb
outsl
js
cmc
jmp
test
out
call
add
add
outsb
add
xor
jae
pop
fwait
mov
add
jo
jae
push
add
mov
xchg
xor
aas
and
insl
or
in
add
dec
add
push
mov
pop
add
jo
shlb
out
sbb
sbb
jno
xlat
addr16
fucomip
adc
add
sbb
add
ss
in
add
in
xchg
js
xchg
jne
rclb
xor
push
in
sbb
pop
mov
pop
add
data16
fisubrl
mov
fnstenv
mov
jae
int3
nop
mov
add
add
mov
mov
push
add
push
add
call
mov
out
xor
cli
repnz
std
add
add
loopne
add
add
pop
aad
add
cmp
mov
add
jle
mov
fstps
add
push
add
addl
xlat
stos
jmp
add
xor
clc
clc
jp
rcrl
sub
xchg
in
add
add
add
add
je
gs
inc
sbb
fsubr
ja
sub
icebp
mov
mov
xlat
imul
add
sbb
push
add
and
test
add
add
lds
pop
pop
add
aad
add
mov
add
in
adc
js
inc
add
cld
sub
mov
test
and
or
jle
dec
iret
mov
push
add
mov
lret
jne
add
shl
sub
loope
arpl
icebp
js
stos
repnz
data16
add
add
xor
aad
add
add
mov
jne
roll
add
out
repnz
push
stc
cwtl
xchg
loopne
add
add
loopne
in
add
pop
inc
inc
mov
add
add
jne
pop
or
loope
push
add
das
fisttpl
lds
add
gs
push
add
push
fcmovnb
mov
xor
fnstsw
je
xchg
add
pop
sarb
pop
fs
add
add
push
add
icebp
rolb
xor
ficompl
jnp
mov
mov
aad
jae
cmp
mov
add
push
add
adc
movsl
lds
add
mov
sub
call
test
push
adc
or
add
test
data16
adc
pop
iret
or
shll
fcmovnu
pop
sub
push
add
sub
pop
add
jmp
dec
add
add
cmp
adc
nop
nop
jnp
add
sub
testl
mov
mov
sbb
bswap
push
cmp
js
mov
add
sbb
adc
insl
data16
add
repz
movsb
in
pushl
pop
xor
cmp
mov
add
add
ret
add
add
add
push
add
test
add
push
add
cmpsl
mov
mov
ljmp
or
add
enter
sub
and
sbb
vpshaw
add
add
adc
xor
add
mov
jb
pop
mov
dec
in
jmp
aas
in
inc
add
scas
nopl
outsb
add
mov
nop
xor
mov
xchg
xchg
xor
lods
enter
or
es
push
add
add
add
out
push
add
add
add
icebp
arpl
add
add
cmpsb
xchg
add
ret
add
ja
sbbb
add
jne
push
sbb
push
add
jnp
add
adc
mov
loope
add
add
in
add
add
push
add
pop
dec
add
dec
add
xlat
mov
add
test
add
in
add
in
add
or
ret
jb
cmp
jge
add
sub
loop
sbb
xchg
push
mov
lock
mov
loopne
add
inc
pop
add
push
pop
adc
mov
push
add
add
adc
jno
mov
or
cmp
and
insb
add
out
add
adc
jle
aam
dec
std
dec
inc
add
add
call
cld
inc
jle
aaa
or
and
int3
jae
and
and
sub
lock
sub
stos
daa
sub
add
sub
mov
data16
aad
mov
add
xchg
add
enter
add
fisubl
fsubs
add
mov
add
loopne
cmp
jmp
mov
test
rcrb
jne
fistpl
inc
add
cs
adc
add
xor
lea
int3
jg
sub
mov
outsl
call
mov
pop
add
add
ffreep
cmp
js
cmc
jns
add
add
dec
add
add
call
add
ljmp
inc
dec
add
or
scas
sbb
dec
aad
enter
inc
mov
add
xor
and
or
mov
jne
add
fldcw
add
daa
push
add
jb
add
add
mov
add
xchg
ja
sti
mov
add
ja
add
aas
mov
shll
add
mov
ds
mov
ljmp
add
add
repnz
add
inc
add
cmpsl
xor
inc
stc
jae
fsubrl
insb
add
cmc
inc
add
dec
mov
in
push
add
add
movsb
mov
pushf
dec
add
add
jle
data16
cmp
jno
xor
push
out
add
pop
add
dec
cli
push
add
rcrl
and
add
adc
shl
mov
add
jl
cmp
push
add
add
add
mov
sub
arpl
outsb
add
sub
mov
add
hlt
mov
add
add
add
or
shlb
outsl
in
shr
xchg
push
es
fwait
repz
fwait
loopne
in
cmp
ret
xchg
test
adc
aad
add
sbb
movsl
add
insb
add
jge
adc
loope
add
sub
enter
jle
movhps
jbe
push
add
out
add
xchg
clc
jae
dec
xchg
mov
add
xor
mov
jns
into
dec
add
fsincos
add
shll
mov
pop
add
mov
mov
push
add
pop
imul
mov
pop
or
inc
push
add
outsb
add
xchg
inc
add
jnp
inc
adc
add
mov
add
shrl
in
adc
mov
testb
mov
or
inc
cmp
push
add
pop
add
inc
roll
pop
lds
add
mov
and
shrl
inc
in
pop
add
pop
aam
add
pop
add
add
daa
cmp
jl
push
adc
mov
mov
mov
jp
jg
add
cmp
fbld
lods
pop
and
jmp
add
xchg
sbb
sbb
mov
add
dec
mov
popa
dec
les
pop
inc
mov
mov
pop
gs
dec
add
xchg
jle
shrl
dec
add
out
in
xor
jns
dec
add
inc
add
add
fldl
add
dec
push
insb
add
lea
cmpsb
enter
pop
stos
add
sahf
push
andl
add
and
xchg
int
sti
popa
mov
or
out
add
add
loopne
pop
add
aam
add
add
add
rcl
dec
ja
add
out
inc
add
sub
dec
add
sub
add
push
jo
push
jp
pop
mov
pop
add
pop
add
jno
mov
popf
adc
add
call
call
add
mov
xchg
hlt
bound
push
rcrl
icebp
jne
or
add
insb
add
mov
clc
add
fstl
push
sub
cmp
cmp
pop
cmp
ficoml
add
aaa
inc
add
add
punpckldq
scas
std
test
dec
inc
add
add
inc
inc
add
daa
stos
pop
addb
mov
mov
cli
cld
loope
add
add
pushf
cmp
jb
iret
cwtl
gs
clc
cmpsl
mov
add
and
or
call
inc
add
mov
je
fldcw
sub
push
imul
push
mov
add
add
fisttpl
add
adc
out
pop
in
insl
jmp
imul
je
aaa
loop
xchg
mov
jmp
add
movsb
fildll
imul
mov
and
jnp
dec
cwtl
jg
add
xchg
xor
add
cmp
jge
cmp
add
add
pop
stc
mov
cmp
jecxz
mov
fwait
lcall
cmc
ret
add
add
and
push
jno
xchg
add
dec
add
mov
rorl
lret
mov
mov
mov
ljmp
daa
adc
add
push
cmpsb
fcoms
add
push
add
mov
data16
jecxz
inc
test
jno
stos
int3
dec
add
stos
sub
xchg
loope
sbb
popa
dec
add
incl
add
and
push
add
add
add
add
xchg
test
pop
add
adc
add
inc
add
in
jp
inc
or
outsb
add
pop
test
mov
les
add
ja
fildll
add
xchg
mov
add
cltd
mov
add
add
xchg
xchg
mov
test
cmp
xor
lret
sbbl
clc
cmp
jecxz
add
addr16
hlt
clc
and
add
add
lcall
in
mov
mov
and
sti
repz
mov
xor
sti
add
idivb
push
add
add
jno
add
popa
dec
mov
dec
add
and
add
add
fneni(8087
dec
fxtract
imull
ds
pop
add
stos
or
stos
sub
stc
hlt
cltd
sbb
pop
add
out
add
in
push
jo
jbe
lock
pop
fcmovnb
lock
lcall
adc
hlt
aaa
mov
leave
xchg
repz
scas
ret
fidivrs
jecxz
sub
cmpsb
mov
mov
mov
add
arpl
push
add
lock
mov
pop
push
add
ljmp
dec
add
add
bnd
adc
mov
push
xor
inc
pop
xchg
stos
cmpl
dec
jl
jnp
push
inc
add
add
sub
push
mov
push
ljmp
push
add
pop
lea
push
scas
push
and
insb
add
mov
add
testl
push
add
add
push
rcl
hlt
jge
fistpl
add
mov
xchg
jbe
mov
add
add
add
mov
or
sahf
pop
add
mov
je
pusha
add
or
test
inc
add
loope
pop
push
add
sub
sbb
or
pop
pop
jg
fdiv
xor
call
xchg
jp
or
add
jo
enter
adc
pop
jmp
outsl
movl
sub
jge
add
pop
add
outsl
imul
adc
xchg
add
mov
outsb
add
cli
xor
ljmp
add
add
dec
add
and
jp
inc
xchg
jno
add
negb
fisttpl
mov
stc
xchg
push
add
jno
dec
add
add
jmp
lea
inc
sti
add
fisttpll
dec
movl
imul
sbb
ret
cmp
add
add
sub
add
repnz
or
jecxz
add
nop
fisttpll
insb
add
lret
mov
mov
or
mov
add
call
arpl
mov
mov
pop
dec
add
add
sahf
ret
mov
lods
push
add
adc
mov
rorl
add
add
add
insb
add
add
xlat
add
add
xor
or
mov
sub
add
add
add
shlb
arpl
pusha
add
lock
add
add
stc
mov
add
mov
in
hlt
xor
lods
mov
push
add
inc
add
sub
lcall
add
vphaddbd
cmc
xor
or
sub
hlt
hlt
dec
inc
jns
add
xor
or
into
rcrl
sti
ficoml
or
push
jmp
pop
xchg
add
dec
push
xor
pand
push
add
add
sub
call
add
mov
ds
and
mov
rol
insb
add
mov
sbb
stc
or
xchg
andb
lcall
js
add
addl
and
aam
movsb
add
pop
pop
inc
out
add
inc
add
jg
out
add
out
add
add
sub
dec
scas
les
add
cmc
lret
or
addl
add
push
cld
movsl
xlat
add
add
bound
sti
push
add
data16
mov
sbb
mov
fnsave
mov
rcrb
bound
arpl
add
or
inc
or
jmp
dec
mov
add
int
dec
add
push
add
outsb
add
adc
add
dec
add
fcmovne
rcrb
add
ljmp
xchg
adc
or
mov
mov
mov
pop
jg
add
or
cmp
popa
adc
jge
add
loopne
icebp
xchg
mov
add
lfs
add
add
add
add
int
mov
lret
loope
add
mov
push
test
fsubl
stc
lret
mov
sbb
pop
outsl
jle
mov
xor
add
add
dec
iret
xor
leave
jae
mov
mov
imul
jae
add
outsb
add
stc
ss
mov
add
sbb
rcrl
bound
repz
add
lret
mov
loope
mov
je
mov
addr16
iret
test
add
pusha
add
pop
pop
add
add
mov
add
ret
cltd
in
adc
cmp
lds
cli
repz
cmp
mov
lea
in
cwtl
dec
add
cmp
sbb
pushf
pop
pop
repnz
add
push
mov
xchg
aaa
xchg
adc
pop
add
pop
enter
inc
shl
add
xchg
xchg
and
aam
add
add
xchg
rorb
push
pop
cld
adc
xchg
or
and
add
mov
add
nop
rcrl
push
lock
lock
add
aad
cmp
xor
mov
sub
xor
mov
add
lcall
mov
or
push
add
push
add
adc
pop
pusha
add
call
std
data16
cmp
jmp
mov
add
je
movsb
xchg
push
sub
add
mov
or
rorb
aam
mov
and
rcrl
out
cmp
add
mov
add
push
hlt
aas
jmp
div
ljmp
add
add
cmp
pushf
fdivl
inc
add
arpl
xor
test
push
add
push
arpl
into
daa
or
data16
push
add
push
jo
test
add
dec
mov
push
sbb
xchg
inc
add
mov
mov
add
sahf
jbe
scas
aas
pusha
add
cmpsb
loope
add
add
add
add
add
add
xchg
sarl
jg
add
dec
add
add
add
imul
cmp
xchg
fmul
popa
into
rol
mov
inc
add
xchg
push
push
add
jnp
mov
add
or
cmp
out
add
inc
add
add
add
outsb
add
fisubrl
add
add
lock
sbb
fnstcw
in
inc
add
or
push
add
js
push
add
mov
pop
add
and
add
add
lods
fdivl
jge
add
jb
shlb
jmp
and
shrb
xchg
jb
add
add
cmp
add
add
lret
xchg
test
add
push
inc
add
in
jnp
jmp
not
imul
add
add
adc
or
mov
mov
add
jns
pop
add
popa
out
add
add
add
rcll
add
insb
add
xor
push
add
mov
lcall
loope
je
mov
add
test
sbb
push
add
imul
xor
fisubrl
je
sahf
mov
sub
mov
push
add
inc
add
add
sbb
in
flds
jmp
mov
add
push
push
add
jb
dec
sti
aam
add
jae
jmp
add
pop
add
add
inc
push
add
inc
add
add
mov
mov
add
inc
add
icebp
mov
imul
add
add
stos
add
das
je
ljmp
int
add
add
ret
or
add
pop
insl
pusha
add
mov
xor
fldl
pop
popa
push
cwtl
mov
adc
jo
fld
push
add
scas
push
add
add
mov
data16
mov
stos
bound
loopne
fsubrl
mov
add
add
add
cmpsl
pop
adc
cmp
inc
add
aad
add
push
outsl
cmp
or
shlb
or
add
arpl
outsl
cmp
in
cmp
fcomi
inc
pop
jbe
or
cmc
lds
loopne
test
ds
cmp
add
add
lahf
repz
mov
cmp
jle
pop
add
rorb
mov
add
std
pop
add
add
push
add
push
jbe
sahf
xor
out
push
add
add
mov
sub
dec
add
push
and
and
jl
jp
mov
nop
inc
mov
scas
and
inc
popa
sti
push
pop
cmp
mov
xchg
das
or
add
add
out
sub
inc
or
scas
shrl
mov
jno
pop
add
mov
add
dec
add
push
divb
push
add
or
fstpt
mov
cltd
pop
add
and
inc
add
sub
pop
or
push
add
lret
movb
enter
add
cltd
js
mov
dec
jns
pop
dec
add
xchg
test
jne
add
lcall
mov
fcompl
pop
imul
pop
jecxz
dec
add
jo
jge
bswap
mov
add
add
test
fistl
dec
leave
aam
and
add
cmpsb
sbb
add
les
mov
sahf
mov
cmc
je
and
jl
lock
pop
imul
dec
add
jae
nop
call
add
shll
inc
jl
jmp
add
add
mov
sbb
add
cli
add
stos
pop
push
ffree
sbb
xchg
mov
mov
dec
jae
add
push
jo
mov
loopne
movb
lret
sbb
scas
push
add
add
cmc
in
xchg
sub
dec
add
add
addr16
and
pop
add
cwtl
xchg
push
add
sub
push
push
clc
hlt
pop
fwait
lea
add
mov
aad
lds
push
sub
jne
mov
cmc
loope
add
fimuls
adc
daa
in
add
clc
aam
mov
pop
add
mov
cmpsl
outsl
ret
loope
add
xlat
clc
mov
add
add
mov
adc
test
mov
std
mov
sbb
pop
add
mov
add
sbb
cwtl
and
ljmp
cmp
pop
add
imul
add
add
pop
add
adc
sub
ss
fildl
int
add
test
mov
xchg
out
xchg
push
add
in
adc
addr16
add
add
add
push
add
add
add
push
daa
lods
lds
add
xor
cmp
adc
xchg
push
add
and
inc
add
loop
repz
add
adcl
xchg
cmp
mov
fimuls
mov
xchg
mov
sub
pop
add
gs
add
xchg
in
and
or
mov
add
push
aas
fdivrs
popf
ret
cmpsl
mov
in
and
fstl
add
inc
in
pop
jo
adc
pop
cltd
jmp
mov
sbbl
add
pop
fildl
add
adc
mov
inc
shlb
insl
mov
scas
clc
fnstcw
lea
hlt
fisubrs
add
adc
dec
add
addb
mov
sahf
insl
test
sub
sbb
xor
xchg
imul
mov
xchg
push
adc
inc
push
adc
sub
and
mov
adc
mov
cltd
dec
add
add
je
xlat
data16
add
jo
mov
jl
add
add
pop
mov
es
dec
add
arpl
ja
add
lea
std
fwait
mov
add
out
pop
add
pop
or
ret
inc
mov
dec
add
shll
add
jb
push
add
xchg
js
push
adc
stos
shrb
dec
add
xchg
testl
sub
pop
add
add
and
mov
add
jns
loop
and
pop
adc
nop
dec
lret
ret
jmp
add
test
mov
add
out
pop
cmp
jg
dec
lock
mov
xlat
or
push
add
push
add
sbb
icebp
rolb
add
xor
sub
ret
xor
pop
add
add
pop
add
add
out
jp
loop
add
lcall
inc
out
ret
add
dec
add
add
adc
int3
mov
xchg
jns
dec
add
pop
add
inc
adc
jne
add
add
inc
std
rorb
push
pop
pop
mov
mov
fnstenv
loopne
pop
add
stc
and
xor
sahf
jnp
sahf
xchg
aaa
mov
add
push
lock
int
pop
mov
lods
jne
jl
mov
add
ficoms
je
sub
mov
sbb
mov
add
insb
add
mov
fstpt
dec
add
in
push
add
add
adc
ljmp
in
inc
jp
xchg
cmpsl
adc
cmpsb
inc
cmp
mov
mov
pushf
lods
add
jo
push
add
pop
add
xchg
sbb
enter
pop
add
add
aaa
imul
arpl
add
add
loopne
imul
aad
sahf
cli
enter
sbb
pop
add
sti
movsb
and
pop
add
add
les
push
mov
jnp
add
add
add
pushf
xchg
enter
xchg
ds
jmp
add
lock
lock
add
int3
in
add
test
add
bound
and
add
add
add
sahf
add
add
push
or
or
je
or
add
cmp
dec
add
mov
mov
pop
add
add
pop
mov
add
add
fcompl
aaa
test
das
add
fnstsw
into
pop
add
xchg
lods
fldt
ret
mov
cltd
inc
int
push
add
add
inc
add
cmp
mov
add
icebp
test
aam
mov
add
cmp
inc
in
xor
push
add
add
add
add
sub
mov
dec
test
sahf
stc
movaps
mov
int
add
inc
add
xor
add
cmp
push
stos
je
cmp
add
add
xchg
add
add
add
std
xchg
nop
adc
fbstp
add
ljmp
test
inc
mov
lods
nopl
cmp
cmpsb
repnz
sub
movsb
dec
add
shrb
jbe
loop
divl
dec
add
sub
pop
adc
add
add
imul
add
or
cs
mov
daa
inc
sbb
enter
inc
add
xorb
cmp
jl
xor
push
add
flds
and
push
add
push
cli
popa
inc
mov
xchg
and
inc
add
into
rorl
cmpsl
mov
and
cltd
xor
xor
movsb
sub
cmpsb
sbb
xchg
aam
add
fcomp
xchg
insb
add
subb
sbb
lock
in
add
mov
das
or
gs
cmp
adc
mov
add
mov
sar
cli
dec
adc
ja
and
nop
clc
mov
mov
add
mov
pop
add
lret
lods
cmp
mov
std
jb
sbb
add
add
pop
pushf
ljmp
dec
mov
add
add
cmp
sbb
add
fucomip
out
and
pop
aaa
cmc
movsb
sbb
adc
and
cmpsl
xor
mov
divl
mov
rorb
outsl
or
jno
out
fisubl
rorb
dec
add
push
push
add
inc
add
shrl
mov
out
ss
lahf
pusha
add
and
and
add
add
enter
movsb
jno
sbb
dec
add
cltd
scas
pop
lods
ret
mov
divb
lret
es
pop
add
add
mov
pop
cld
add
fsts
iret
dec
add
dec
add
mov
test
inc
cld
shlb
scas
aad
adc
sbb
jne
lods
jb
mov
xor
das
mov
jb
fwait
pop
enter
add
lods
xchg
mov
pop
push
sub
les
cmpsb
popa
mov
jg
insb
add
add
out
cltd
into
xchg
clc
adc
push
add
add
mov
inc
add
jp
adc
xchg
decb
add
mov
cmp
add
add
pusha
add
daa
ja
mov
xchg
outsl
je
rcll
add
outsl
add
add
jle
dec
add
enter
jmp
fucomp
insb
add
es
cltd
cld
mov
add
cli
adc
out
repz
mov
jg
add
bound
insl
pop
mov
mov
outsl
lods
xchg
inc
add
xorl
test
fwait
xchg
push
test
add
sbb
rclb
data16
jecxz
iret
mov
add
mov
add
test
pop
cmp
and
and
loope
add
xchg
out
add
repz
movsl
jns
add
add
lret
daa
xor
mov
jns
mov
inc
add
js
cmp
hlt
scas
adc
jecxz
add
andl
mov
dec
add
scas
add
ret
loope
mov
add
add
add
add
lahf
sbb
das
jae
dec
sub
cltd
test
jns
cmp
cmp
pop
add
jmp
mov
add
sub
in
sbb
lock
mov
bt
xchg
jne
mov
add
in
or
lea
mov
mov
push
popa
push
add
add
add
add
addb
push
add
add
dec
pop
add
inc
add
mov
icebp
mov
and
fcmovu
jo
push
fistps
in
pop
push
push
pop
imulb
add
xor
add
jecxz
add
and
outsl
rol
add
inc
mov
inc
cmp
imul
ret
add
add
out
pushf
scas
mov
mov
les
push
mov
add
dec
add
pop
xor
add
fdivrs
movsl
test
sbb
cmc
push
add
lret
push
add
adc
lret
add
rcrb
jle
mov
add
rorl
push
add
or
mov
add
add
push
add
scas
push
dec
add
sub
lock
and
sbb
add
outsb
add
mov
sub
bound
bt
pushf
mov
add
sub
push
add
add
add
mov
add
pop
test
mov
in
adc
xchg
mov
roll
cmp
cmp
mov
mov
inc
add
add
mov
shlb
add
xor
ja
pushf
add
cltd
test
cmp
notb
add
insl
loop
add
or
arpl
add
xchg
fucomp
hlt
mov
and
sbbb
xlat
add
jne
or
sbb
shrl
xchg
notb
add
xchg
aaa
inc
femms
add
dec
adcb
sub
add
xorl
insb
add
test
repnz
pop
add
cwtl
mov
inc
add
add
les
sbb
popa
mov
push
add
mov
cmpl
mov
cmpsb
mov
mov
pop
add
add
shl
sbb
mov
jge
hlt
loopne
jns
mov
jb
ljmp
push
add
add
add
add
sub
cmp
out
push
add
jnp
mov
jae
mov
push
add
hlt
rcrb
add
adc
loope
mov
dec
add
out
inc
add
jle
test
lcall
push
fldt
outsl
lds
rcrl
mov
push
add
adc
inc
add
test
rcl
adc
add
sub
add
jns
add
bound
mov
add
mov
add
in
pop
dec
xchg
mov
or
int3
and
out
imul
xchg
push
push
add
add
add
into
cmc
nop
aas
push
add
push
add
add
stc
jl
jbe
test
scas
cwtl
adc
mov
push
add
int3
xchg
cli
dec
add
push
add
and
pop
mov
push
hlt
adc
add
sub
add
cmpsl
loopne
sub
ret
movsb
cmp
out
out
movsl
pop
add
add
data16
jnp
arpl
add
pop
les
dec
push
add
jbe
mov
sub
dec
jmp
in
dec
outsb
add
or
cli
push
and
dec
cltd
sbb
popf
mov
outsb
add
add
ret
xchg
js
xchg
aad
out
cmp
in
dec
add
sbb
add
add
sahf
jae
add
adc
adc
out
add
and
add
cld
fmuls
mov
lea
bound
loopne
lret
bswap
repz
add
add
add
sub
cs
jmp
add
mov
mov
pop
add
repnz
add
jge
xor
dec
dec
cmp
mov
add
mov
loope
add
fcoml
cmp
add
in
aam
add
pop
add
mov
fidivs
dec
and
dec
add
and
mov
enter
xchg
outsl
inc
inc
push
orb
or
pop
xor
pop
add
push
cli
ret
add
add
sub
popf
gs
add
inc
imul
push
add
add
lock
mov
test
lcall
inc
dec
ret
jl
outsb
add
jge
sahf
mov
lock
jb
insb
add
add
pop
add
mov
out
add
jp
add
lds
jno
pusha
add
movsl
mov
ret
aas
aam
cmp
add
push
add
add
or
in
xchg
jbe
add
jmp
shlb
mov
push
daa
aam
add
add
push
add
sbb
test
add
add
add
sbb
add
push
xchg
and
cwtl
mov
add
sub
fldt
outsb
add
pop
sarb
sbb
hlt
cmp
add
adc
aam
xchg
imul
lds
add
add
inc
add
sub
lods
mov
pop
cwtl
aad
add
cmpsb
imul
add
sub
pusha
add
add
bound
imul
add
add
xchg
add
call
mov
out
lret
adc
test
add
add
cmp
sbb
popf
sub
js
cmpsl
adc
enter
jae
add
sub
jecxz
add
add
jge
daa
push
add
loope
test
dec
add
add
mov
add
cmp
add
jecxz
push
popf
xor
push
add
adc
sti
insb
add
and
add
mov
popl
sub
popf
add
add
add
clc
sub
mov
cltd
add
add
pop
or
int3
push
pop
scas
cmc
data16
fcoms
push
add
shr
sub
mov
sub
cmp
dec
cmp
dec
stos
or
add
cmpsl
fimuls
add
lahf
pop
sbb
in
lock
imul
aad
stos
add
cmpsb
dec
ret
clc
dec
add
sbb
lea
add
jp
lret
sub
push
add
add
pop
add
inc
xor
pop
test
xchg
dec
and
loopne
cli
inc
add
push
add
add
cmpl
add
adc
adc
aad
sarl
add
jbe
jge
pusha
add
add
add
and
jns
add
mov
pop
add
xchg
add
and
pop
add
fiadds
cmp
push
out
pop
add
pop
xchg
add
into
xchg
xor
add
push
icebp
and
aad
add
add
add
pop
out
add
dec
sub
aaa
data16
add
xor
mov
add
mov
into
add
iret
push
sbb
frstor
sar
testl
mov
out
add
xchg
fldcw
sarl
mov
aaa
xchg
in
and
hlt
jmp
jns
add
int3
cmp
add
push
add
pop
add
push
pop
pop
add
push
add
add
out
push
add
test
inc
add
pop
add
pop
add
aad
test
mov
loope
data16
dec
lock
cmp
mov
add
jb
lahf
shlb
add
and
and
add
add
add
xchg
cmp
out
mov
arpl
add
fld
add
mov
add
mov
xchg
mov
push
add
add
add
std
int3
in
cld
stc
ja
xor
movsl
test
push
add
add
add
add
add
sub
fcom
mov
cmp
jb
dec
cmp
scas
pop
out
xacquire
jns
addl
hlt
add
mov
gs
or
repnz
add
xor
and
mov
lds
add
add
mov
pop
pop
add
add
addr16
lods
fwait
cmp
push
mov
add
fdiv
mov
pop
insb
add
cmp
jbe
leave
shll
add
fmuls
rclb
sarl
cmp
gs
add
popa
sub
or
xchg
adc
cmc
inc
test
and
int3
mov
call
inc
scas
inc
add
test
sub
xchg
mov
xchg
add
jne
test
add
popf
leave
xor
les
cmp
not
sbb
xor
int
inc
in
xor
sub
and
lea
add
jo
mov
jne
cmp
in
add
fadds
add
inc
dec
add
dec
add
sub
ja
push
add
rol
adc
fucomi
jg
add
mov
in
ja
sub
fidivs
in
sbb
add
adc
push
add
mov
movsb
mov
cmp
arpl
add
add
adc
and
repz
xchg
lahf
int
lods
jmp
out
in
xchg
adcb
data16
sbb
pop
arpl
jae
loopne
add
dec
add
jl
jmp
out
sti
pop
lock
insb
add
jmp
clc
insb
add
and
in
sbb
jne
jno
add
or
xor
pop
cmp
gs
add
cmp
cmpsl
pop
pop
pop
scas
imul
ret
imul
add
gs
inc
add
cmpsb
mov
fwait
out
xchg
out
mov
insl
xor
pop
call
std
rol
lods
xor
inc
add
or
and
aaa
sbb
add
pop
add
sbb
imul
add
add
xchg
aad
jle
mov
mov
sbb
data16
adc
int3
clc
insl
cld
call
add
cmp
push
add
cltd
cmp
cmpsl
sub
mov
mov
add
mov
in
sub
mov
sbb
stos
icebp
out
mov
push
flds
ljmp
jg
xchg
or
and
mov
cmp
or
ffree
popa
iret
cmp
xchg
movsl
in
sbb
sbb
les
loopne
mov
and
jp
repz
cmp
cld
dec
add
add
lds
pop
cmp
sbb
cld
ja
pop
xchg
ja
add
xchg
or
push
add
out
cli
adc
shll
mov
ret
push
add
add
out
add
loopne
inc
add
pushf
adc
das
dec
scas
add
add
mov
cmp
movb
ja
sub
sahf
stc
mov
pushf
mov
pop
add
and
shrl
add
in
add
mov
add
add
mov
add
in
xor
add
sbb
push
outsb
add
aaa
push
add
xchg
daa
in
add
add
or
xor
xchg
dec
add
sti
mov
scas
and
mov
add
out
movsb
nop
pop
add
lds
aas
push
xchg
repz
dec
jae
test
push
xorl
popl
fldcw
push
add
in
xchg
lods
dec
add
out
fildl
mov
push
add
scas
in
push
push
add
loopne
add
cmp
inc
or
pop
add
adc
add
xchg
inc
add
add
loopne
add
inc
add
sbb
mov
add
xor
cmp
paddb
out
aam
add
jae
in
orl
jo
enter
jb
mov
push
fbld
add
add
sti
push
cmc
cmp
icebp
xor
pop
add
aam
fwait
sbb
mov
aas
jb
sahf
addb
push
add
add
cmp
imul
outsb
add
add
fisubrl
imul
add
ret
push
add
fwait
push
add
xor
add
adc
xchg
sahf
and
jmp
add
add
enter
pop
dec
add
insl
ljmp
add
dec
add
bound
xor
mov
cmpsl
movsb
and
mov
add
jmp
push
add
add
pop
lea
add
adc
sbb
add
add
add
or
movsl
mov
ljmp
add
push
add
movd
mov
add
jp
mov
out
nop
loope
pop
add
mov
add
adc
ror
mov
inc
add
fldenv
and
inc
cltd
pop
add
lods
fsubp
test
add
shll
add
add
xchg
mov
add
scas
dec
add
add
mov
pop
add
sarb
and
aas
add
test
add
mov
jl
repz
sub
in
add
loopne
lret
push
add
pop
add
mov
add
xor
movsl
stc
sub
push
add
adc
push
jecxz
inc
jne
bound
imull
mov
sbb
dec
int3
test
add
dec
add
jns
icebp
mov
add
add
mov
cltd
adc
mov
push
neg
ljmp
add
shll
arpl
add
mov
mov
ljmp
cli
ss
std
mov
mov
mov
mov
add
mov
pop
cli
stos
stc
mov
xor
fisubrl
sbb
hlt
push
add
addr16
add
scas
fs
xchg
jl
and
cltd
add
loope
add
stos
test
and
aaa
cmpsl
pop
add
bound
and
mov
add
add
jmp
enter
add
scas
ss
stc
sbb
int
xchg
lret
mov
aam
std
sub
rcr
int3
xor
mov
mov
ljmp
add
add
add
xchg
pusha
add
out
rcrl
add
imul
xor
js
loop
add
scas
mov
lret
adc
int
pop
sub
or
xor
sbb
adc
mov
imul
insl
inc
add
inc
add
add
addr16
add
add
arpl
test
jecxz
in
add
cli
adc
add
add
xor
ss
js
lods
mov
add
add
outsl
add
add
dec
outsb
add
out
add
push
test
push
add
popf
aas
add
arpl
movd
imul
add
jo
mov
sbb
push
add
test
fwait
scas
imul
cmp
xor
in
js
call
dec
add
popa
shrb
sbb
jge
sub
or
clc
int
leave
add
cmp
sahf
shrl
push
add
stos
rcl
jae
mov
mov
popa
and
clc
xor
add
fwait
cmp
and
in
je
mov
bnd
and
aam
sti
mov
add
add
sub
push
dec
add
cmp
push
add
dec
add
add
and
pop
add
or
jns
jle
aaa
ja
jae
add
or
and
iret
add
adc
cmp
add
les
mov
sub
mov
xor
int
imul
mov
pusha
add
mov
jg
push
add
pop
add
pushl
dec
sub
notb
sbb
mov
pop
loopne
add
mov
stos
and
pop
add
aaa
xor
add
add
sbb
test
movsb
mov
add
clc
sub
dec
sub
cmp
cltd
mov
inc
sub
insb
add
jnp
movsl
adc
insl
jne
add
push
push
or
test
mov
add
fwait
int
add
cwtl
out
in
dec
add
push
dec
add
pushf
xchg
xor
inc
add
lods
test
cmpsb
add
or
add
pop
jecxz
mov
bound
int
imul
add
add
adc
nop
icebp
mov
dec
add
movsb
jo
imul
push
pop
adc
push
add
mov
pop
add
getsec
lahf
cltd
mov
inc
add
add
inc
add
test
adc
dec
add
push
add
add
lds
jo
xchg
cwtl
push
out
jg
cmp
mov
add
imul
mul
lret
xchg
xchg
xor
mov
add
mov
add
cmpsl
sbb
jmp
out
push
add
mov
pop
add
inc
add
mov
inc
push
add
popa
arpl
testb
adc
jns
pop
add
cli
and
mov
movsl
cld
repnz
pop
add
mov
outsl
lcall
mov
add
pop
add
scas
divb
add
dec
les
popa
and
add
adc
or
scas
mov
xor
mov
mov
add
add
int3
cmp
cmp
mov
xor
jbe
rol
cmp
add
call
ret
sbb
movsl
adc
fisubs
cli
mov
loope
cmp
cmp
test
add
xchg
pop
add
mov
lods
sbb
cmovb
inc
add
pop
roll
pop
mov
mov
add
mov
test
jo
jns
add
js
pop
xchg
adc
aas
push
add
mov
or
je
push
add
push
add
dec
add
imul
or
jle
dec
add
hlt
iret
add
add
popa
and
aaa
dec
jo
icebp
mov
or
xor
add
add
dec
lahf
push
in
popa
movsl
pop
adc
push
add
sbb
mov
add
int
mov
inc
dec
add
add
cli
pop
mov
jae
mov
mov
cmc
xchg
push
add
xlat
aas
lock
add
out
dec
adc
adc
add
mov
out
lock
dec
out
add
stos
lods
mov
lea
stc
fwait
cwtl
cmp
outsb
add
push
mov
in
and
cmp
test
push
add
cmp
fcompl
add
lock
inc
xchg
jo
add
adc
loopne
inc
sbb
test
shrl
lods
jae
and
bound
xor
jne
outsl
xchg
and
add
add
xor
lret
mov
mov
xchg
add
or
fcmovnb
testl
les
add
movsb
bound
dec
add
xor
scas
mov
add
add
add
mov
add
add
add
add
cli
lods
add
inc
add
add
psadbw
je
pop
lahf
orl
cltd
fptan
in
inc
xchg
addr16
daa
xchg
test
dec
add
pop
nop
adc
dec
add
add
movsb
pop
xchg
clc
adc
divb
add
add
sbb
inc
lds
insl
je
pop
cmpsl
cmpsl
add
ror
add
add
add
mov
int
test
mul
std
add
clc
add
stos
ret
mov
aad
add
mov
scas
ja
and
jns
sarl
push
add
inc
add
jo
and
stos
in
out
pop
data16
pop
add
adc
add
xchg
xor
sbb
add
dec
add
mov
inc
sbb
mov
pop
pop
add
out
inc
sti
popa
aam
add
mov
stos
sahf
add
iret
mov
add
add
dec
xchg
dec
add
lods
inc
add
mov
add
add
adcb
or
add
sbb
sbb
mov
decl
add
pop
mov
test
jnp
add
pop
decl
loop
pop
call
sub
pop
nop
int3
scas
adc
stc
push
add
add
add
lret
mov
inc
add
add
mov
adc
js
enter
js
mov
add
mov
pushl
repz
into
sbb
in
aam
add
iret
out
add
add
std
movsl
jae
mov
daa
lcall
xchg
lods
int3
mov
sbb
sbb
test
add
divb
xchg
jge
add
out
rorb
popa
jno
add
add
aas
ret
xrelease
add
push
add
add
add
adc
sub
lea
add
add
add
cmpsl
xchg
sbb
xor
fmull
fidivs
mov
in
push
add
add
cmp
add
int
add
add
add
mov
add
mov
mov
hlt
pop
nop
xchg
push
add
mov
mov
mov
add
sub
mov
pop
add
add
add
push
add
inc
loopne
jmp
scas
pop
add
jp
push
add
addb
add
add
add
add
adc
mov
jmp
sbb
aad
rol
popa
call
mov
add
out
sahf
ret
imul
cld
xchg
xlat
adc
rcl
adcb
add
mov
add
add
xlat
insb
add
scas
outsl
mov
frstor
xlat
inc
add
add
pop
add
add
mov
ljmp
add
scas
test
add
xor
adc
js
and
icebp
pop
add
add
add
add
rclb
aam
xchg
push
mov
pop
add
int
push
add
iret
and
data16
sbb
cmp
xor
sub
das
xchg
inc
add
adc
add
xor
fsubs
dec
add
insb
add
add
push
add
add
add
lret
mov
mov
loop
push
push
add
cmp
scas
xchg
mov
jle
mov
mov
add
jb
jae
pop
aas
movsb
xchg
iret
out
outsl
outsb
add
mov
or
add
add
add
mov
cmpb
jp
call
dec
add
add
leave
lret
jno
sub
xor
insb
add
test
add
cmc
inc
shr
in
jb
hlt
shlb
das
popa
mov
add
add
add
adc
sbb
dec
add
roll
add
or
jns
push
test
push
mov
add
xchg
stc
data16
add
or
sbb
je
sub
cmpl
test
and
repnz
pop
roll
add
jno
add
enter
fnstsw
or
mov
mov
sub
loopne
add
add
add
xchg
bound
addr16
inc
add
add
test
or
mov
add
pop
push
stc
sbb
loop
add
add
pop
add
add
push
add
not
out
add
stos
rcll
divb
mov
in
mov
adcl
popf
add
icebp
cmpsl
fnsave
jns
add
add
inc
pop
add
push
jno
pop
mov
inc
add
test
cltd
or
jp
aam
sar
insb
add
push
add
test
add
add
aas
pushf
mov
adc
popf
dec
add
into
jo
pop
add
ljmp
clc
add
xchg
push
add
dec
add
lds
xchg
push
add
add
add
and
loope
and
mov
push
mov
shrl
vmulpd
xchg
loop
repz
lcall
dec
add
movsb
jo
outsl
pop
pop
adc
pop
cmp
mov
add
add
add
jecxz
cmc
data16
add
jb
fstps
and
lret
sub
push
add
roll
movsl
jo
or
and
mov
add
sbb
ret
loop
add
xchg
cltd
movb
les
add
dec
cmp
add
add
icebp
and
add
push
add
test
add
sar
adc
out
jae
add
outsl
dec
sub
or
aad
add
inc
add
mov
aas
subl
dec
cwtl
mov
sbb
dec
add
mov
push
add
jl
or
cmpsl
cltd
inc
xchg
dec
adc
test
into
cmp
cmp
xor
pop
pop
lds
outsl
inc
add
sbb
jge
insb
add
push
and
xchg
push
push
add
rol
bound
add
ljmp
cld
push
sti
add
pop
or
out
add
ljmp
out
adc
xchg
add
sti
mov
add
pusha
add
add
in
clc
test
add
leave
repz
pushf
movsb
sub
dec
xchg
fdivl
sub
ret
xor
fdivp
pop
add
add
push
add
add
cli
cli
jb
daa
adc
loop
mov
aam
add
jo
lock
dec
mov
sbb
add
add
icebp
add
cli
xor
inc
hlt
pop
mov
das
lahf
adc
add
cmpsl
addr16
add
cli
scas
sub
xchg
inc
add
xchg
jo
shr
mov
insl
xor
mov
xor
mov
add
dec
add
rcr
adc
or
ret
insl
mov
pusha
add
in
add
cmpsb
mov
imul
add
mov
add
nop
sbb
outsb
add
add
rorb
add
sub
xchg
pop
cld
mov
add
sar
add
add
aas
sbbb
arpl
add
mov
add
pop
dec
sub
lods
mov
add
xchg
faddp
push
mov
and
mov
ficomps
or
push
pop
pcmpeqb
xchg
imul
jb
mov
add
add
out
mov
jo
lock
add
cli
leave
mov
add
fwait
das
out
jg
aaa
mov
fdiv
andb
lahf
out
subl
add
add
push
pushf
jno
loop
add
ljmp
pop
jmp
mov
add
add
lret
add
fldl
add
add
fiaddl
xlat
lods
dec
add
loop
adc
jl
int
add
sub
test
cli
mov
sub
dec
hlt
dec
add
pop
arpl
imul
daa
dec
pop
xor
xchg
mov
add
jo
or
pop
lock
push
xchg
mov
shl
lahf
dec
add
movsl
mov
repz
jg
add
sub
sbb
pop
int3
lods
js
pop
add
mov
push
fwait
fwait
repnz
arpl
xlat
sbb
fisubl
add
ljmp
and
push
add
sub
mov
mov
add
push
add
cmp
insl
stos
mov
addl
xor
add
repz
add
bts
sub
jo
dec
push
adc
jnp
enter
stos
stos
notl
pop
ljmp
add
inc
add
add
lock
cmc
mov
add
jns
fmull
add
mov
aam
sti
xor
add
pushf
cmpsb
mov
out
push
movsb
pop
add
ficoms
or
push
add
xor
imul
ret
pop
add
mov
enter
add
add
lea
adc
sub
lret
enter
add
add
sbb
ret
add
mov
xchg
add
dec
add
sbb
xchg
sbb
xlat
pop
add
into
lock
add
add
add
cmp
repz
inc
add
mov
enter
add
leave
fadd
adc
mov
dec
fsubrl
jne
cltd
cmp
push
cs
dec
lods
push
mov
inc
push
add
mov
in
jecxz
pop
push
add
push
add
inc
xor
scas
mov
xchg
mov
add
add
into
xchg
lcall
sbb
dec
xchg
xor
repnz
adc
cli
lret
call
movsb
fidivrs
or
pop
insb
add
sub
pop
push
add
xor
and
cli
stos
pop
or
xor
lea
jo
sub
dec
add
std
lret
xor
mov
cmp
add
add
ret
arpl
push
add
add
or
push
push
add
xor
add
stos
notb
pop
add
push
add
push
add
dec
add
out
adc
and
scas
lahf
jae
add
ficomps
aad
cmp
xor
std
ss
pop
pop
xchg
add
cmp
ret
or
aas
outsl
dec
add
add
or
imul
xchg
cmp
out
jmp
add
xchg
add
add
and
push
add
sub
xchg
sbb
add
add
outsb
add
loopne
adc
mov
add
add
outsl
mov
dec
int
add
orb
stos
rcrb
lret
inc
cli
leave
test
jae
fstpl
add
jle
push
add
in
and
fidivrs
push
add
pop
jnp
cmp
add
add
sbb
add
pop
inc
movsb
leave
loop
stos
aaa
ret
jp
jp
mov
lcall
ficoml
lret
das
add
mov
pop
mov
xchg
push
and
mov
dec
add
insl
sbb
loope
xor
sub
ret
test
pop
add
xchg
add
lcall
push
add
jp
add
xchg
data16
dec
add
lods
les
add
pop
add
mov
lea
cli
adc
mov
pusha
add
frstor
cmpsl
insb
add
loope
js
mov
sub
sbb
mov
add
cmp
mov
add
add
push
enter
sub
test
insb
add
sbb
adc
stos
inc
add
pop
add
jo
lret
std
enter
push
add
xchg
ljmp
add
int3
dec
add
ljmp
and
cli
in
add
xchg
jl
mov
add
cmp
xchg
outsl
ja
gs
sub
dec
add
in
jmp
jns
push
add
bswap
cmpl
add
into
mov
mov
and
add
add
dec
add
add
aaa
or
in
add
cli
dec
dec
ret
add
add
add
fists
mov
mov
add
push
add
adc
xor
sbb
jge
mov
inc
ja
push
xchg
xor
sub
add
insl
xchg
iret
jnp
sbb
add
xor
fisttps
das
xchg
xor
in
ja
ja
add
add
add
jb
push
add
jg
cmpsb
add
xor
popa
js
jecxz
mov
test
cmc
pushf
adc
out
je
jle
mov
add
push
add
or
addr16
mov
add
ret
out
inc
mov
loop
mov
ret
pop
xchg
pop
movsl
xchg
fistpll
sub
jae
mov
xchg
push
add
add
add
add
add
add
mov
sub
or
enter
adc
mov
add
mov
fcoml
fmuls
shl
imul
in
daa
and
push
add
or
and
dec
data16
adc
dec
or
dec
add
push
jns
ret
push
sbb
scas
lock
je
or
add
sub
stos
das
mov
scas
inc
add
dec
cmp
mov
test
mov
cmp
mov
add
adc
jo
xchg
lcall
add
mov
sbb
jl
jo
js
add
filds
fistpl
hlt
repz
cld
std
xor
inc
add
aaa
decb
cmp
add
lcall
cwtl
scas
loopne
add
pop
add
das
popf
xor
add
or
add
outsb
add
add
add
test
add
scas
or
bound
sbb
push
mov
fildll
add
add
jecxz
pop
add
loop
mov
test
pop
out
sub
movsb
add
add
outsl
or
out
call
xchg
mov
pop
iret
mov
adc
test
lock
icebp
and
in
add
aad
add
push
dec
gs
dec
pop
scas
addr16
mov
ds
xchg
out
cwtl
sbb
lods
inc
adc
mov
fistpl
leave
ret
xor
mov
or
inc
add
int3
icebp
imulb
add
and
aas
fsubl
addr16
mov
or
push
add
lods
add
add
mov
inc
add
in
shl
lods
roll
nop
inc
add
lret
test
and
adc
dec
nop
sbb
jp
fsubrl
push
add
aas
inc
mov
test
fisttpl
add
pop
add
pop
or
gs
xchg
in
add
pop
add
lret
js
mov
pcmpeqd
insl
xchg
insl
ja
dec
leave
mov
mov
pushf
pop
add
or
mov
add
arpl
add
add
add
add
pop
lret
add
sar
dec
add
mov
sbb
xlat
cli
pop
shll
cmc
lods
call
cli
mov
jnp
add
mov
xor
cmp
sub
add
push
add
push
push
lea
test
clc
jecxz
dec
imul
xor
les
scas
mov
jns
mov
fnstsw
sub
mov
out
cmpsl
dec
add
add
fwait
jno
adc
mov
into
sbb
add
cmp
and
rorb
adc
shlb
ret
mov
add
add
add
push
add
ljmp
sbb
in
fdivrs
stos
push
sub
adc
pop
add
ja
sbb
sbb
add
out
add
add
add
jp
and
movsb
clc
or
insb
add
rorl
sub
imul
add
mov
lret
fisttpll
daa
pop
add
add
and
pusha
add
sbb
xchg
sar
xor
add
add
add
add
jg
add
mov
stos
and
xchg
das
loope
jp
aaa
sub
movsb
rorl
scas
xchg
push
add
int3
jp
cmpsb
icebp
xchg
jle
mov
xchg
add
out
cld
xor
mov
dec
add
mov
lds
mov
add
add
fisubrl
bound
adc
mov
fidivs
sbb
add
imul
sbb
ret
lock
add
jge
add
mov
mov
push
ja
add
out
mov
push
mov
in
inc
xlat
gs
xchg
add
arpl
jns
add
push
adc
mov
mov
cld
mov
add
pusha
add
add
add
or
stos
loop
bswap
jo
add
push
add
cltd
in
add
add
add
inc
add
add
add
mov
xor
shrb
mov
pop
add
mov
mov
popa
fmul
push
add
lock
pushf
cmp
pop
addb
lods
cli
inc
add
add
outsl
lret
ljmp
lea
add
and
jg
pop
add
jb
push
add
movsb
mov
add
lret
push
scas
into
outsl
or
add
nop
loop
popa
mov
push
add
iret
scas
jecxz
adc
inc
add
jbe
dec
js
mov
cmc
adc
cmpsb
rorb
sti
add
add
sub
add
inc
add
add
mov
lods
mov
in
add
cld
mov
cmpl
dec
push
test
adc
push
add
add
test
sbb
icebp
add
stc
cltd
sub
mov
inc
add
add
fldcw
loopne
add
add
add
sub
out
add
rorl
cmpsl
ret
pop
add
add
push
outsb
add
mov
adc
cmpl
xor
mov
mov
xchg
add
in
cli
jb
testl
cmp
fadds
mov
jnp
adc
gs
es
dec
cmpsb
add
mov
add
sbb
mov
add
sub
pop
add
add
stos
push
fldt
add
mov
std
lcall
inc
cmp
add
xchg
jb
cmp
xchg
inc
jg
add
add
sahf
imul
add
add
ja
lds
push
push
add
mov
add
insb
add
xchg
push
add
cmp
jae
and
dec
add
sub
js
aad
adc
dec
add
mov
add
add
xor
pushf
push
mov
cwtl
out
xor
rclb
add
pop
mulb
sti
mov
gs
negl
out
mov
rcrl
mov
add
add
jae
add
loopne
add
adc
adc
clc
shrl
loope
movsl
in
add
add
add
test
lea
cmpsl
sub
mov
jae
in
cmpsl
pushf
jne
dec
add
xchg
inc
out
add
push
add
shlb
pop
int
pusha
add
add
and
movsb
sub
daa
mov
cmp
test
inc
add
popa
xor
add
or
xchg
dec
add
add
add
push
jl
cmp
jmp
inc
add
cmp
mov
jnp
repnz
inc
add
add
cmpsl
pop
jp
push
add
add
repnz
add
push
add
pop
mov
mov
add
add
imul
or
pop
sub
ror
adc
add
jo
test
add
daa
lods
cmp
push
data16
add
add
sbb
in
add
add
gs
int
std
cld
sbbl
inc
std
adc
mov
add
pushf
leave
pop
mov
pop
add
lock
mov
lods
cmpl
and
mov
and
or
add
jg
mov
push
mov
les
jb
pop
mov
add
add
add
add
add
pop
add
enter
or
pop
push
add
fsincos
jae
insb
add
mov
mov
pop
sbb
cmp
push
add
cli
sbb
add
xor
pop
add
pop
inc
add
inc
add
cwtl
cmp
sbb
stos
sub
pop
mov
mov
add
xchg
ret
iret
pusha
add
testb
repz
lret
push
add
add
add
in
popa
sbb
lahf
out
add
divl
cmp
jp
sub
enter
or
out
jg
roll
mov
repnz
jb
notb
nop
jbe
std
loope
add
ja
xchg
mulb
repz
jnp
xor
adc
add
popf
pusha
add
push
add
dec
add
add
cmpsb
jbe
mov
sub
add
mov
dec
add
adc
mov
daa
scas
mov
mov
add
insb
add
les
add
jge
xchg
and
add
push
add
add
add
out
sub
and
jbe
insb
add
fstpt
fisttps
add
add
add
pop
add
mov
mov
mov
imul
pop
xchg
pop
add
add
cmp
xchg
add
pop
jnp
pop
das
xor
cmpsb
jmp
pop
add
fwait
and
arpl
sbb
cmp
or
adc
sub
jb
imul
add
sbb
jno
pop
add
cmc
cmp
add
add
adc
int
repnz
jb
lret
push
add
mov
mov
fbstp
jo
dec
pop
add
jmp
add
test
add
data16
adc
add
sbb
mov
mov
add
sub
add
xor
pop
pushl
lds
stc
mov
in
insb
add
add
mov
int
outsb
add
mov
add
rcrl
insl
jge
pop
add
add
xchg
rolb
add
add
sbb
data16
xchg
sub
inc
cltd
jae
pop
and
add
dec
stos
xor
out
aam
jnp
in
fadds
sub
push
add
movsb
loope
out
rolb
add
sti
fwait
stos
leave
shlb
and
mov
add
sbb
add
ja
ljmp
popf
rclb
jbe
les
add
aam
outsb
add
pop
sbb
mov
add
xor
js
dec
fildl
push
add
mov
add
xor
ss
push
insb
add
les
mov
add
add
sub
mov
add
fs
stos
aaa
ss
test
mov
out
add
add
dec
add
xchg
add
lcall
xor
add
in
lods
in
add
jle
fidivrl
add
cld
xchg
hlt
mov
add
mov
xchg
dec
lods
loop
add
add
mov
add
inc
mov
add
add
add
loop
cmc
mov
arpl
add
scas
rcll
add
data16
das
jmp
sbb
jg
add
mov
addr16
stos
inc
xchg
cmp
sbb
mov
add
fwait
add
daa
xor
sahf
mov
add
popf
or
cld
push
pusha
add
lods
je
jne
roll
clc
pop
push
sbb
je
xor
loope
cmp
sbb
sub
sbb
pop
shrl
mov
add
lods
je
mov
add
push
add
add
cmp
or
cmpsl
xchg
in
cmpsb
insl
out
inc
sbb
add
jb
xor
jno
adc
or
lret
dec
or
int3
mov
jl
sbb
scas
add
push
add
push
add
pop
call
scas
pushl
lcall
jo
bound
push
add
add
pop
sub
sti
gs
aad
add
push
add
add
outsl
jge
cmp
add
add
je
inc
add
xchg
lods
out
jbe
ja
jo
cmp
stos
pop
jnp
stos
call
jnp
mov
loope
xchg
cld
enter
out
fbld
mov
jge
fnstsw
add
imul
push
add
in
or
xor
iret
shrl
add
jb
mov
cmpl
das
jg
jae
dec
scas
push
add
add
jle
addr16
add
mov
aaa
push
dec
jnp
add
xor
fwait
mov
add
add
outsb
add
push
sahf
sub
shll
mov
pop
aam
outsb
add
add
add
mov
scas
mov
inc
add
add
test
mov
add
add
pop
add
add
sub
add
add
add
dec
jl
mov
pop
sub
outsb
add
adc
pop
dec
jb
mov
jmp
add
add
stos
pushf
mov
dec
xor
aad
add
dec
lret
push
subb
insl
enter
test
or
or
enter
mov
fcomip
push
sbb
fadds
inc
add
or
aaa
pop
sbb
jne
push
or
push
add
inc
aam
or
adc
jecxz
add
sub
jge
sbb
mov
add
dec
add
jecxz
cltd
mov
add
mov
lcall
scas
imul
inc
cmc
stos
fnstenv
nop
push
add
adcb
fstpl
or
push
add
add
add
sbb
popl
add
add
add
fisubs
out
jae
add
mov
add
pop
add
fcmovnu
pop
enter
pop
inc
add
loope
test
xor
pop
add
outsb
add
add
test
add
inc
add
xor
cmp
leave
mov
add
loop
add
mov
sbb
jb
add
adc
add
pop
add
pop
dec
add
cmpsb
dec
add
add
inc
add
add
add
jnp
add
add
lahf
xchg
adc
into
sbbb
aam
add
add
test
pop
dec
add
call
fcoml
add
dec
mov
add
and
int3
add
cli
fcom
mov
pop
add
sub
stc
pop
add
pusha
add
ficoml
pusha
add
add
nop
push
in
sbb
inc
add
in
xchg
jp
sahf
scas
insb
add
test
add
mov
push
add
add
popf
pop
or
and
add
pop
add
add
mov
push
add
dec
add
pusha
add
cwtl
jecxz
into
xchg
popf
mov
ja
mov
adc
int3
dec
cmp
mov
add
cmp
ja
addr16
inc
mov
in
adc
out
out
add
outsb
add
adc
mov
cmp
pop
leave
mov
repz
outsb
add
add
xor
jmp
scas
mov
pop
ljmp
add
add
adc
test
mov
ret
psubusw
imul
push
add
pop
add
mov
out
jno
dec
imul
test
xchg
in
add
sbb
dec
shrb
mov
test
xor
mov
sarl
add
add
jp
sahf
dec
fmuls
inc
add
mov
mov
xchg
xchg
lahf
xor
jo
cltd
ret
pop
push
add
shl
adc
add
cmpsl
xchg
dec
lret
dec
add
add
add
push
add
jns
or
add
adc
dec
sbb
push
add
fwait
mov
into
sbb
inc
add
loopne
adc
iret
xor
add
add
in
jns
add
jne
sub
add
xchg
insb
add
cmp
inc
add
stos
xlat
and
fisubrs
and
add
bound
dec
add
imul
add
pusha
add
add
and
and
sbb
and
push
push
push
add
xchg
sub
adc
lods
pop
add
dec
add
jnp
cmp
and
lods
and
pop
push
add
mov
add
inc
add
xchg
add
push
into
mov
hlt
into
add
stos
xchg
mov
add
leave
add
popf
pop
add
xchg
adc
scas
arpl
sbb
push
add
mov
add
mov
sbb
sbb
dec
add
fnstcw
add
test
nop
loop
data16
add
add
sub
xor
or
in
push
add
pop
add
fwait
ja
cmpsl
sbb
xchg
ret
jle
jnp
add
mov
testl
dec
add
jp
xorb
clc
pusha
add
out
inc
add
loop
aas
repz
out
add
pop
add
add
add
clc
pop
add
push
sbb
jl
jno
inc
xor
cmp
pop
repnz
xchg
dec
stos
ja
mov
add
adc
les
jecxz
adc
les
fwait
jp
sbb
jecxz
jle
dec
add
sub
hlt
xlat
jecxz
and
cmpsl
dec
dec
stos
dec
sub
adc
test
sub
enter
push
add
add
jne
cmp
fildl
add
dec
add
mov
subl
mov
sbb
cs
insb
add
add
rclb
add
add
or
imul
daa
push
add
enter
pop
and
cwtl
test
notb
dec
add
add
push
add
mov
fld
test
add
add
add
ss
mov
icebp
fwait
adc
lret
xchg
jbe
mov
fwait
pop
add
mov
dec
add
add
add
cmp
int
add
push
mov
xchg
idivb
push
add
add
inc
add
sti
imul
add
shl
int3
pop
mov
mov
mov
cmpsl
out
mov
add
addr16
addps
dec
rcll
cld
cwtl
sbb
movsl
enter
pop
mov
sbb
and
push
outsb
add
cmpsl
into
pop
add
or
hlt
add
cld
lret
sbb
fildl
dec
enter
add
cmp
repnz
fwait
popa
cli
icebp
jp
jbe
in
xor
push
dec
add
add
or
mul
sbb
sub
mov
aad
adcl
add
add
cld
and
or
scas
mov
add
lahf
enter
inc
inc
jns
jmp
jb
lods
jbe
ljmp
cmpb
mov
data16
outsl
mov
inc
add
mov
xor
add
add
imul
mov
add
clc
std
cmpsb
out
and
ja
xchg
push
push
roll
pop
nop
lcall
rcrl
test
pushf
jp
pop
mov
add
sub
stos
xchg
push
and
add
push
add
mov
xchg
ljmp
add
aaa
cmp
jb
subl
ret
add
add
add
cmc
outsb
add
xor
shl
das
cltd
leave
xchg
push
add
orl
inc
add
add
mov
add
pop
pop
mov
add
inc
add
sbb
add
xor
inc
add
insl
jo
ret
pop
mov
mov
das
ret
neg
repnz
xor
clc
test
stc
jmp
scas
jae
inc
add
aas
push
sbb
adc
dec
fisttpll
sbb
fadds
push
add
test
add
add
add
fisttpll
ror
ret
fadds
jb
cwtl
cltd
or
imul
mov
ja
add
sbb
jo
push
push
add
cli
jp
je
ja
add
add
or
xchg
mov
movsb
push
out
aaa
loop
adc
jl
xchg
xchg
dec
add
add
fmul
sub
lahf
or
mov
dec
add
add
add
add
pop
mov
inc
add
arpl
add
pushf
nop
movsb
push
add
ret
jno
add
leave
lds
add
xor
push
xchg
lcall
adc
loope
add
add
add
add
into
in
hlt
cmp
mov
xor
sti
push
stos
roll
mov
ret
dec
jmp
fcompl
or
sbb
je
mov
add
xchg
dec
mov
cmpsl
clc
mov
lods
lods
and
add
fiaddl
xchg
or
jmp
xchg
pop
setge
out
int3
test
add
push
add
cmp
nop
xor
xchg
call
sub
popa
adc
xchg
subl
call
aam
add
adc
outsb
add
pop
jns
mov
inc
call
fcomi
mov
cmp
mov
xor
pusha
add
push
sub
popf
fwait
mov
jp
pop
add
mov
add
test
adc
and
or
mov
lds
add
xlat
cld
lock
mov
mov
ja
icebp
jle
scas
add
sti
or
clc
push
add
add
pop
jmp
mov
mov
add
sub
push
add
add
xchg
imul
add
js
pop
and
push
add
nop
insl
sarl
add
push
add
in
mov
sub
les
data16
cmpxchg
jg
out
stos
add
xchg
sbb
and
std
push
add
xor
add
add
mov
push
add
add
mov
int
add
sarl
adc
nop
mov
sub
fisubs
ret
jns
cmp
jmp
add
cmpsb
loop
add
push
add
sbb
add
adc
push
add
imul
add
aaa
xorl
dec
sbb
mov
ja
das
popf
outsl
stos
out
fnstenv
add
push
add
aad
lods
push
add
add
dec
add
sar
shrl
das
hlt
sub
mov
add
add
dec
push
add
push
daa
add
pop
xchg
xchg
rcrb
sub
xor
cmc
xchg
in
call
aaa
xchg
dec
into
pusha
add
sbbl
sahf
hlt
add
add
xchg
cwtl
push
add
xor
jae
or
push
add
xor
lret
fisubl
add
aad
jl
jns
push
add
fwait
push
add
add
dec
or
or
mov
add
add
lds
or
add
mov
dec
add
jo
test
add
inc
add
cmp
addr16
jnp
test
fldenv
lods
add
addr16
or
pop
add
add
add
notb
sti
xor
add
xor
jnp
add
popf
xchg
or
mov
adc
bound
sar
push
add
dec
add
js
mov
or
pop
ret
mov
mov
enter
add
out
sub
mov
inc
add
xchg
and
add
or
xor
aas
fnstenv
stos
cld
fdiv
sub
std
adc
inc
add
cwtl
lods
push
sahf
adc
ret
add
sbbl
add
jmp
dec
add
loopne
inc
jmp
popa
pop
in
data16
nop
stos
mov
adc
xor
loopne
push
or
in
add
and
lcall
mov
ficoms
add
iret
jmp
pop
ficoms
and
fidivrs
popa
pop
inc
add
add
xor
add
and
aaa
and
xchg
xchg
js
inc
and
mov
add
pop
lods
movhps
add
lea
ds
in
mov
add
aad
dec
dec
xlat
scas
sub
xlat
add
popl
xlat
pop
add
push
add
add
incb
add
push
add
ret
add
mov
jmp
pop
add
add
inc
in
pushf
fs
mov
add
insb
add
xor
add
arpl
mov
shl
mov
add
and
lea
add
add
sbb
jmp
ret
mov
xor
cwtl
push
add
add
daa
add
mov
dec
loop
pop
and
add
and
out
mov
loop
push
add
fcom
or
ja
mov
push
add
add
ret
rcll
add
add
out
adc
loop
sarl
cmp
repz
mov
mov
add
add
add
and
mov
dec
xchg
ja
push
add
add
jns
push
add
scas
push
add
cltd
rcr
xor
cltd
ror
pop
add
add
stos
mov
cmp
jbe
jp
jp
pop
mov
cmpsb
xor
cmpsl
sbb
dec
add
out
outsb
add
in
push
sub
in
xchg
jno
add
jo
loop
add
dec
cmp
jge
add
iret
cltd
lods
testl
dec
sbb
stos
aas
hlt
aas
cwtl
push
add
add
xchg
and
sbb
sahf
out
mov
dec
push
add
or
and
mov
mov
pop
add
and
jbe
jne
add
popf
adc
and
add
jnp
dec
add
daa
xlat
add
add
aad
cmp
xchg
inc
add
add
add
add
iret
aam
add
add
add
addr16
mov
push
add
add
lret
xlat
jnp
dec
add
push
add
pop
add
jmp
int
add
enter
arpl
outsl
sub
cmp
or
add
hlt
adcl
aas
mov
fmull
jl
test
repz
push
add
outsl
sbb
leave
inc
add
add
add
out
leave
xor
add
add
add
pop
into
mov
in
data16
mov
aad
xchg
out
fxch
das
push
add
into
movsl
or
in
lcall
ret
divb
icebp
inc
add
ret
add
mov
push
pop
add
mov
cmp
in
sub
xchg
push
or
add
lcall
ljmp
test
xchg
adc
mov
std
aas
inc
cli
shll
cmp
xchg
dec
add
insl
push
add
add
out
xchg
cwtl
leave
inc
add
data16
decb
add
test
cs
sub
add
mov
sbb
push
mov
inc
push
add
cmp
adc
adc
mov
fucom
imul
int3
popf
lds
add
repnz
mov
popl
add
adc
aad
push
push
mov
add
add
add
mov
inc
add
xchg
jb
test
test
add
push
add
inc
add
lea
or
xor
inc
test
add
push
je
jg
adc
mov
xor
add
cmp
scas
sbb
fstl
hlt
adc
repz
add
inc
add
aas
sub
add
jo
add
add
std
xchg
or
in
lahf
and
sbb
enter
movsb
std
popa
cmpsb
mov
or
into
test
sub
add
mov
add
fwait
xor
mov
pushf
shrb
adc
gs
icebp
sahf
pop
repz
mov
ljmp
scas
test
aam
add
adc
fs
mov
or
lods
pop
mov
pop
xchg
add
cmp
add
push
add
add
xchg
mov
add
inc
or
cmp
pop
add
leave
sbb
push
mov
mov
jbe
add
sub
rcll
pop
jns
cmpsl
xor
rolb
sub
aam
add
shl
test
add
and
loop
sub
pop
add
rcrb
push
add
inc
xor
mov
movsb
lcall
xlat
ret
dec
lcall
inc
xor
inc
add
add
add
fwait
or
xchg
mov
add
add
xchg
and
sbb
add
repnz
pushf
int
mov
add
imul
mov
push
adc
lahf
incl
xchg
call
mov
int3
fnstenv
icebp
mov
adc
pop
add
in
add
ja
mov
xor
pop
sub
iret
mov
jg
mov
add
sbb
jns
mov
add
inc
add
jmp
lahf
aas
lock
lea
add
jne
or
dec
add
cmp
cmp
xchg
pop
adc
cld
mov
test
mov
fmulp
into
dec
imul
add
fldz
push
sub
pop
and
push
add
lock
incb
xor
push
add
add
je
push
dec
add
add
add
shrl
cwtl
sub
shrl
push
lahf
aam
dec
mov
in
mov
cvtpi2ps
cld
push
add
pop
adc
add
push
add
mov
mov
mov
add
push
push
dec
add
insb
add
lods
dec
add
add
jbe
data16
scas
scas
or
add
mov
pop
dec
add
dec
xor
mov
add
add
add
lcall
xchg
add
add
xchg
lcall
adc
js
ret
ja
jg
add
out
lret
jp
stos
cltd
test
sub
pop
add
out
add
push
add
dec
add
fs
xor
fisubrl
pop
add
cmp
cmp
add
add
out
ret
lret
sub
fnstsw
iret
lcall
push
add
lods
jae
push
dec
add
cmp
mov
cli
mov
outsl
sbb
cli
repz
mov
decb
fists
add
fildll
jecxz
cmp
xchg
test
and
mov
add
add
movnti
add
add
jmp
add
inc
add
cmp
test
sub
add
test
ljmp
add
inc
add
stos
fimull
lahf
fidivrs
jmp
pusha
add
add
loopne
cmp
fwait
je
ja
mov
add
add
pop
add
cs
repnz
jg
add
sbb
add
pop
add
stos
sbb
mov
ret
mov
enter
imul
bound
or
sbb
jl
dec
add
push
add
add
add
loopne
cltd
arpl
add
sbb
or
inc
add
in
ljmp
add
cltd
add
lret
test
or
adc
aad
add
add
scas
add
xor
sbb
lods
xchg
sub
sarl
and
push
add
xor
and
mov
mov
mov
mov
push
add
jb
rol
push
add
add
fimull
loopne
add
xlat
je
mov
ret
xlat
movsb
orb
inc
add
add
jp
xchg
inc
add
or
push
add
and
sbb
outsl
mov
add
add
xchg
shll
mov
data16
jecxz
pop
int
add
jnp
adc
mov
xchg
js
nop
fnstsw
mov
add
or
add
push
add
popl
popf
push
cmp
add
sbb
xchg
sub
inc
inc
icebp
outsl
push
sbb
bound
and
je
cmp
stos
scas
cmp
mov
add
add
add
pop
add
sub
add
roll
iret
xchg
or
insl
lahf
add
inc
add
divps
xor
push
add
inc
cmc
and
or
in
add
out
shrb
data16
sbb
or
add
mov
dec
add
inc
sahf
in
insl
push
or
jno
sub
jb
or
mov
add
movb
paddb
adc
sub
add
mov
add
xchg
fisttpl
mov
jmp
add
and
mov
add
dec
aas
shll
add
or
dec
add
les
add
mov
ficoms
lret
add
mov
add
fiaddl
add
mov
jae
add
add
add
mov
add
test
add
xchg
or
add
push
add
mov
push
add
cmp
mov
add
mov
icebp
jmp
js
shr
inc
add
add
push
fstpt
add
add
jecxz
mov
daa
mov
push
cmpsb
cmpsl
clc
adc
ret
imul
shll
test
add
add
xor
xchg
outsb
add
mov
ret
push
add
mov
negb
dec
add
push
add
cmpsb
sub
fnstsw
lds
pop
dec
add
add
in
add
repnz
push
stos
addb
add
sar
or
cvtps2pi
add
mov
leave
ljmp
ja
add
add
fdivrs
outsb
add
add
or
mov
enter
mov
add
add
push
add
gs
pop
fisttpl
inc
mov
jne
add
jp
dec
add
add
fnstenv
xchg
addb
repnz
mov
pop
sbb
add
jl
and
add
add
enter
jbe
adc
add
inc
cmp
pop
add
xchg
cmp
add
outsl
rcr
adc
pop
fmuls
xchg
fists
inc
push
push
sub
cmc
inc
add
push
cmc
mov
xor
add
mov
or
mov
add
fiadds
ffreep
xor
lcall
add
add
sbbb
roll
jae
gs
mov
movsl
inc
add
xchg
aas
lret
mov
inc
add
add
mulb
add
add
lret
add
js
movsb
cmp
pop
add
cmp
outsl
xorl
jmp
stos
out
add
add
out
adc
xor
and
xor
lret
lret
rol
fisttpl
jae
add
cmp
jg
loopne
lods
shl
call
add
fadds
and
and
mov
mov
adc
int
add
mov
add
int
add
add
stos
test
cmp
sub
push
add
add
and
xor
fcomps
push
mov
add
je
mov
push
add
enter
and
jne
add
add
scas
mul
lret
add
in
add
out
lahf
or
add
push
add
fistpl
enter
mov
data16
add
jl
inc
stc
pop
xchg
jo
add
fdivp
pop
add
fsts
rsqrtps
or
pop
add
xchg
add
add
imul
push
or
add
pop
jbe
and
lcall
mov
clc
and
test
or
gs
das
xchg
push
add
and
cmp
xchg
jne
js
mov
insl
into
dec
lret
push
add
sbb
or
jo
das
cmpsl
idivl
push
add
add
add
outsb
add
add
add
data16
lret
push
add
add
pop
je
cmc
mov
out
leave
outsl
incb
je
test
jno
lds
push
add
cwtl
js
lock
hlt
sahf
in
add
flds
pop
shlb
adc
cmp
jbe
xchg
loope
pop
add
in
cmp
add
lds
add
push
adc
dec
add
icebp
shrb
push
add
mov
add
cmp
mov
adc
and
add
cltd
daa
add
push
add
inc
add
add
sub
out
sahf
sbb
mov
xor
ja
loop
aam
dec
add
lahf
adc
add
cvtps2pd
jp
movsb
cmpsb
cmp
movsl
xchg
lods
lock
sbb
sbb
add
mov
cmpsl
dec
add
and
sbb
jmp
xor
xchg
or
jae
add
mov
andl
mov
sbb
sbb
adc
xchg
ret
repz
xor
push
add
nop
adc
xchg
pop
pop
add
rorb
jnp
ficompl
add
pop
ljmp
xchg
xchg
aad
add
popf
cli
cltd
ds
jae
lea
add
sub
das
xchg
lret
iret
dec
add
cs
xor
add
pop
add
sarl
xchg
aaa
sub
sbb
lds
dec
add
lret
and
add
inc
add
jg
add
mov
add
and
and
and
add
outsl
popf
ret
jae
add
push
add
add
loop
add
ja
push
das
mov
test
out
mov
cmpsl
sub
cmp
cmp
aas
mov
jb
inc
dec
mov
dec
out
inc
push
sahf
out
inc
add
popa
jb
cmp
mov
cmovg
jle
test
add
mov
mov
add
add
mov
add
dec
add
fisubrl
add
inc
cwtl
in
and
stc
add
add
dec
mov
int
ror
aaa
or
dec
add
add
add
add
mov
cmp
push
add
push
add
packssdw
ret
and
je
je
ljmp
inc
dec
add
and
add
jle
imul
fcmovnbe
sbb
filds
xchg
lcall
imul
add
pop
cltd
ret
pop
add
xor
jae
push
add
out
aas
ret
sub
push
add
add
aaa
sub
sub
push
out
insb
add
add
add
mov
push
sbb
add
add
mov
in
je
ret
add
jmp
xor
add
mov
add
add
add
stos
hlt
fnsave
stos
leave
out
hlt
mov
cld
popf
cmc
adc
add
add
lret
clc
into
sub
int
add
shrb
cwtl
mov
imul
pop
add
popa
orb
xchg
cmpsb
xchg
jg
out
adc
insb
add
push
add
mov
pop
add
test
jae
ljmp
addr16
sub
pop
movsl
add
add
sti
hlt
cmpsb
mov
rclb
inc
jmp
rorl
int3
or
fldenv
and
cmp
or
loopne
jae
jno
add
add
mov
add
cmc
jae
ret
clc
pop
add
adc
xchg
mov
ja
xor
gs
scas
pop
repz
pop
add
pop
add
into
cwtl
ja
leave
imul
xlat
xor
xor
sbb
aaa
fisubrl
jmp
loope
add
clc
push
push
add
add
sub
xor
mov
sub
aam
add
int
add
fidivrl
dec
adc
shl
pusha
add
or
add
add
mov
add
or
sbb
or
ret
add
lods
push
add
fdivrs
add
push
add
ret
mov
and
cmp
add
add
pop
add
data16
push
in
popf
shlb
and
jno
sbb
jae
scas
test
inc
add
es
or
bound
sbb
mov
std
xor
or
sahf
mov
add
stc
hlt
pop
add
and
sbb
insl
xchg
mov
add
xchg
ljmp
or
dec
enter
and
scas
jp
sahf
imul
jne
fcoms
xorb
into
mov
insb
add
cmp
stos
gs
xor
cmp
popa
sbb
dec
cmp
mov
fcmovne
gs
add
rcl
ja
data16
lock
dec
add
out
cltd
mov
and
xchg
inc
pop
les
call
add
lea
and
add
and
and
dec
inc
in
push
add
in
fistpl
xchg
add
and
and
mov
popf
or
push
add
cld
mov
add
add
pushf
sbb
add
push
add
xchg
add
in
pushf
aam
xlat
mov
popf
nop
movd
out
cwtl
pop
add
clc
push
add
xchg
aam
mov
ret
sbb
cli
lods
inc
push
add
cwtl
lcall
mov
jo
add
or
fucomi
push
out
pop
add
aam
xchg
or
aam
sub
bound
icebp
or
nop
lds
add
je
imul
mov
add
mov
add
inc
add
sub
add
leave
pop
add
xor
xor
clc
testl
add
stos
inc
add
outsb
add
add
scas
inc
inc
sub
jl
and
punpcklwd
loopne
xor
push
dec
jecxz
adc
sub
andl
jg
in
ja
add
adc
lahf
int3
in
push
add
or
outsb
add
data16
add
repnz
and
add
addr16
cmp
add
mov
nop
in
fistpl
mov
call
sub
cmp
pusha
add
add
mov
add
add
mov
lret
push
pop
filds
popa
out
add
jae
add
sbb
push
add
xor
xor
dec
add
sbb
lret
lods
ret
pop
lret
imul
adc
pop
add
jne
arpl
add
inc
imul
or
enter
jl
loop
test
add
clc
insl
pop
add
mov
add
sub
lret
call
or
jg
sub
mov
add
cli
inc
jg
cmpsl
dec
add
pushf
jo
sub
mov
mov
add
add
into
sbb
push
mov
add
leave
mov
mov
add
sbb
cmp
mov
adc
cmp
std
or
add
xor
pop
add
add
sub
xchg
add
jge
sbb
push
add
xor
adc
outsb
add
leave
out
xchg
int3
push
add
dec
mov
rcrb
icebp
ficoms
cmpsb
pop
jne
add
adc
or
cld
rorl
and
mov
movsl
mov
aam
inc
jge
sbb
add
dec
jecxz
pop
jp
test
mov
dec
add
sbb
sti
cmp
lods
jp
xor
push
push
icebp
or
xor
xor
mov
stc
xor
add
mov
or
jnp
leave
sbb
stos
xor
cwtl
adc
fcoml
cmpsb
insb
add
add
ret
jnp
dec
add
and
xchg
fnsave
add
add
inc
xor
jge
add
jge
mov
push
add
add
out
test
dec
add
xchg
leave
addr16
repz
add
and
sbb
lds
mov
fwait
dec
add
rcrb
inc
mov
cmp
lcall
std
and
mov
ljmp
mov
add
add
add
mov
and
mov
jecxz
fisttpll
jo
inc
push
add
mov
xchg
adc
icebp
xchg
imul
xor
push
add
jle
lret
inc
add
add
in
push
add
push
add
out
dec
add
loope
dec
xchg
add
das
add
jl
repz
pop
add
loop
fstpt
jp
add
lds
int
add
xchg
inc
add
inc
add
add
dec
push
add
add
or
add
in
add
aam
mov
and
xchg
and
xor
mov
cmp
add
jnp
add
daa
fdivrl
and
pop
iret
out
adc
mov
pop
adc
push
add
add
or
lods
cmc
popa
insb
add
or
and
sahf
into
mov
js
and
jo
sub
je
lcall
add
push
add
mov
insl
xor
fisubl
ja
jg
pop
in
dec
xchg
sarb
jae
loope
dec
add
mov
insl
enter
addr16
mov
add
hlt
fdiv
pop
cmc
hlt
stos
add
sbb
add
xchg
sarl
jnp
mov
pop
add
shr
push
lea
add
sbb
aam
xchg
inc
add
and
mov
pop
in
mov
lret
repz
into
stos
pop
add
in
push
sbb
mov
lods
insb
add
orb
mov
add
subb
movsl
add
orb
add
mov
adc
push
sub
ret
xchg
xor
add
pop
add
xor
adc
jle
jne
outsl
fistl
add
xchg
mov
adc
xor
clc
in
add
shl
xchg
outsb
add
xor
add
loop
or
inc
add
aaa
adc
cmpsb
in
mov
lock
add
cmc
stos
insb
add
add
and
insl
add
sbb
shlb
add
fsubs
push
add
movsb
dec
ret
sbb
out
mov
outsl
mov
xchg
in
jmp
add
add
stc
in
lret
bound
not
xchg
jge
push
pop
sbb
adc
test
jbe
pusha
add
sub
push
add
lock
xor
gs
lea
pusha
add
vcvtps2pd
pop
push
arpl
add
push
xchg
jbe
dec
add
arpl
in
pusha
add
inc
mov
pop
repz
add
loopne
xchg
xor
pop
add
ljmp
push
add
mov
mov
sbb
or
pop
jae
lret
push
add
cmpsl
mov
mov
adc
cwtl
je
xchg
mov
add
add
outsb
add
add
sub
xor
jecxz
add
add
inc
and
fs
add
lods
cli
vhsubps
lods
and
pusha
add
lods
and
aam
inc
add
sub
pop
fisubs
dec
add
cltd
adc
mov
cmp
ljmp
dec
add
gs
addl
add
movl
jg
cmp
push
sti
int3
pop
add
add
in
jbe
pop
pop
loop
add
pop
roll
fcmovnu
push
add
add
add
add
and
mov
sub
dec
add
fldenv
add
add
cmp
inc
das
shlb
xchg
lcall
ja
lret
imulb
add
add
add
xchg
int
jns
add
add
add
mov
add
add
add
cmp
xlat
stos
dec
push
xlat
adc
mov
gs
xchg
push
add
cli
std
pop
add
test
cmp
cmp
pusha
add
push
add
cmpsl
jge
xor
push
add
in
adc
add
xorb
add
jb
pop
mov
add
add
add
add
xchg
sbb
xor
int3
push
add
add
mov
test
add
add
data16
in
imul
stos
xor
add
add
push
add
mov
addl
add
sub
add
and
or
arpl
sub
scas
add
subb
aaa
aad
fucom
popa
sbb
adcb
adc
add
mov
mov
pop
add
add
cmp
rcr
repz
inc
add
add
add
fcmovu
outsb
add
sbb
ljmp
add
or
or
out
aad
mov
lock
stc
jno
add
sub
mov
outsl
push
add
add
nop
or
xor
nop
xor
push
push
add
cmpsl
inc
add
mov
outsl
sbb
dec
adc
push
add
cmc
jns
add
inc
add
fbld
jbe
fists
fwait
cmc
dec
popf
movsb
and
mov
outsl
push
add
dec
xchg
or
pop
jb
shll
test
aam
inc
push
test
add
mov
fxch
mov
add
decb
in
sub
sub
add
in
into
mov
js
pop
out
push
add
leave
aaa
cmp
or
pop
add
add
push
add
mov
dec
jge
je
inc
arpl
pop
add
in
add
data16
in
stc
shll
lcall
inc
cwtl
and
cmp
loope
ja
ss
inc
add
cld
pop
dec
movsb
dec
add
xchg
push
adc
xor
test
testb
orb
leave
dec
add
jbe
insb
add
pop
into
sub
enter
ljmp
pop
lock
add
inc
add
sbb
gs
out
add
aam
and
xchg
mov
ljmp
add
add
aad
call
add
add
pop
inc
sbb
push
add
dec
cmpl
dec
add
dec
nop
ret
hlt
cmp
sub
add
add
add
and
push
add
push
add
sbb
lods
cmp
push
add
add
add
sub
les
gs
add
iret
add
dec
xchg
add
imul
fwait
lds
mov
in
add
add
fwait
shl
outsl
mov
adc
fcmovnbe
ja
fidivl
add
xchg
add
jno
test
test
ficoms
add
sbb
push
add
lcall
stos
cmp
lret
negl
add
cwtl
xchg
add
mov
add
add
jbe
cmpsb
cwtl
dec
add
repz
add
in
ret
cmp
out
mov
dec
loop
movsb
test
add
jg
add
xor
push
in
test
stc
mov
xchg
call
ja
mov
enter
add
lahf
mov
jg
in
push
cwtl
clc
mov
loop
xchg
or
adc
add
lcall
fidivrs
add
or
fildll
mov
sub
in
test
cli
mov
or
cmpsb
xchg
hlt
dec
add
or
sub
ja
ja
add
cli
je
mov
xor
push
lock
jb
stos
or
mov
xchg
lcall
add
in
pushf
les
mov
add
add
and
popa
push
add
add
into
add
pop
scas
std
ja
movb
pop
out
add
and
mov
push
add
jne
xchg
jbe
xor
cmp
mov
fwait
or
repz
std
call
fucomip
mov
add
add
add
add
jns
or
mov
jmp
dec
cmc
dec
xchg
lds
pop
add
inc
movsb
hlt
and
add
or
jmp
lock
add
les
push
add
movsb
push
add
sbb
aaa
or
sbb
xor
mov
cmp
add
pop
dec
xor
add
addr16
sbb
adc
icebp
sub
in
push
add
add
adc
negb
add
cmp
sub
outsb
add
add
popa
lahf
pop
adc
jp
sti
adc
xchg
jno
add
add
bound
mov
pop
add
push
xchg
icebp
hlt
imul
and
out
out
xchg
pop
dec
adc
dec
add
add
jo
jmp
mov
loope
sahf
push
add
add
inc
inc
bound
and
leave
in
fdivs
mov
dec
dec
add
cmc
lods
das
sbb
and
push
add
ficoms
mov
iret
filds
adcl
nop
inc
add
mov
add
sar
loopne
mov
add
ret
clc
inc
dec
add
add
sub
movl
hlt
insb
add
add
add
movsb
pop
out
mov
add
ljmp
shlb
or
loopne
add
and
testb
push
add
sbb
xchg
push
jae
fcmovnb
leave
mul
nop
lahf
cmp
add
push
add
xchg
mov
jo
ss
sub
hlt
adc
dec
add
add
add
jge
shlb
inc
add
xchg
pusha
add
test
sbb
xchg
aad
pusha
add
push
add
push
ja
push
out
and
je
xchg
or
inc
add
sahf
stc
lret
and
jp
cmp
sub
mov
dec
pusha
add
hlt
inc
add
repz
add
out
outsl
aam
enter
fidivl
stos
pop
mov
fisubrl
add
or
cli
fbstp
push
aas
mov
xlat
movsl
aas
icebp
and
scas
fs
mov
cmpsl
bound
xchg
pop
rolb
add
add
insb
add
pop
ret
test
adcl
outsl
ret
pop
rol
mov
add
sbb
add
pop
add
xor
add
lea
test
add
lea
add
rcll
test
pop
push
add
push
aam
add
inc
add
xchg
call
mov
push
add
stos
aam
sbb
test
add
ja
icebp
sar
ljmp
loopne
add
cmp
or
fcoml
jle
clc
sub
cmp
enter
push
fstp
push
cli
stos
mov
sub
add
jl
dec
add
and
jbe
or
add
orl
pop
in
mov
or
add
repz
imul
mov
js
test
add
xor
lock
je
lcall
pop
xchg
orb
push
pop
add
pushl
add
add
or
add
mov
add
mov
loope
jbe
into
in
pusha
add
rorl
add
or
jne
add
fnstsw
outsb
add
jge
nop
mov
add
dec
lea
xchg
inc
adc
ds
ja
add
lret
cs
pop
add
jbe
lods
dec
mov
daa
jmp
inc
add
xchg
outsl
jno
xchg
push
test
orb
lret
sti
movsl
or
imul
jb
jmp
adc
add
push
add
and
mov
inc
mov
xor
or
lret
lret
mov
je
jns
add
inc
adcb
add
jmp
cltd
dec
push
sub
icebp
xor
lret
jp
test
add
add
mov
inc
aas
jmp
push
add
jns
lock
andl
lds
add
xor
in
push
cmp
add
sub
into
clc
xor
or
inc
add
rclb
add
add
and
xchg
cmp
push
mov
add
inc
add
frstor
repz
in
cltd
repz
sub
add
add
adc
enter
adc
jmp
pusha
add
dec
add
adc
pop
add
push
add
mov
sahf
mov
scas
dec
pop
in
add
adc
pop
and
ret
push
add
add
pop
loopne
sbb
cli
nop
in
add
mov
add
lea
out
ret
mov
add
arpl
jg
daa
mulb
aaa
hlt
push
add
shlb
jmp
xorb
push
add
jge
sub
inc
fmull
add
mov
mov
push
add
lahf
mov
movsl
popa
mov
addr16
ret
add
add
add
mov
xchg
jp
rdtsc
sub
mov
clc
psubsb
add
imul
inc
iret
or
shrb
aaa
jb
or
xor
hlt
push
add
shlb
xchg
add
mov
fwait
cmp
add
out
je
adc
movsl
cmp
xor
jp
test
std
jno
xchg
cwtl
push
add
or
ljmp
add
add
add
inc
add
dec
adc
inc
xchg
dec
add
add
or
xchg
dec
add
iret
out
add
add
inc
push
add
ret
push
pop
mov
add
rclb
dec
sub
shlb
jbe
mov
loope
and
add
lods
cmp
push
add
cmp
roll
push
add
js
jmp
inc
push
add
add
xchg
cmp
cwtl
sub
test
inc
jae
add
xchg
hlt
jg
push
add
mov
fbstp
mov
sti
sub
and
add
add
ret
add
sub
jle
stc
cwtl
and
push
xchg
aas
push
sub
popa
dec
xchg
mov
ret
mov
push
add
mov
add
pop
add
arpl
fidivs
add
imul
addr16
ja
jae
add
mov
pop
add
add
mov
js
cmp
add
pop
add
mov
add
in
add
jecxz
add
and
add
lock
lahf
xchg
outsb
add
jp
nop
rcr
subl
daa
int3
loope
pop
in
and
add
xor
les
push
movsb
sbb
aam
addr16
inc
aad
add
mov
lea
repz
jle
push
add
inc
add
mov
add
pop
add
cmpsb
repnz
jg
mov
loop
ret
in
dec
add
stos
push
add
add
push
mov
sub
pop
add
add
xor
sub
enter
add
pop
push
in
mov
jl
add
shrb
or
mov
out
sbb
inc
add
add
jb
mov
out
gs
add
lock
mov
mov
add
jne
shlb
fadd
mov
add
call
imul
and
add
pusha
add
movsb
push
add
bound
push
lods
fidivs
aad
xchg
dec
insb
add
sbb
xor
cwtl
cmp
loopne
sub
cmp
adc
fwait
jge
add
add
dec
cli
cmpsb
adc
out
jns
ret
or
jle
and
xchg
addb
imul
jge
and
aaa
ret
mov
add
add
ljmp
and
setb
adc
push
add
add
add
fwait
ret
pop
enter
push
add
add
sbbb
add
mov
adc
popf
call
push
add
cmp
mov
cwtl
inc
push
lods
lret
insb
add
add
pop
push
repnz
sub
inc
xor
cmpsb
or
xchg
jl
cmp
add
cmpsl
out
jbe
shlb
stc
test
sarl
fisubrs
shll
xorb
data16
dec
mov
push
add
push
pop
mov
xchg
add
mov
lret
xchg
fs
xor
mov
add
cmp
xor
add
rorb
insl
jg
add
in
daa
sahf
cmp
insb
add
add
mul
cmp
in
sub
dec
mov
inc
out
ljmp
dec
add
add
add
cmp
sub
xlat
mov
add
rorl
sbb
into
ficoms
cmp
adc
add
stc
lds
sub
add
add
dec
scas
mov
mov
loope
lahf
add
lcall
jnp
outsb
add
movb
aad
fmul
jge
jl
mov
addr16
add
add
pop
add
add
test
pushf
push
jmp
out
loop
stos
and
call
add
inc
add
lods
fdivs
rcrb
jno
add
add
and
or
test
fiadds
mov
jns
add
jg
mov
and
add
push
add
clc
jae
pop
add
arpl
inc
add
das
cltd
xor
arpl
add
add
add
mov
jge
mov
aad
repnz
jge
pop
lods
test
lods
lock
jecxz
add
test
jg
push
add
outsb
add
outsl
fstpl
mov
dec
add
ret
cmpl
mov
xlat
and
icebp
mov
scas
jns
or
jbe
insl
add
add
dec
xchg
push
push
int3
mov
xchg
lahf
jbe
pop
sub
sbb
rcr
cwtl
mov
adc
mov
xor
scas
mov
sahf
int3
sahf
pop
mov
fcmovb
mov
int3
add
mov
stc
adc
daa
rolb
add
inc
mov
mov
out
sbb
xlat
lcall
add
js
cwtl
incb
add
add
repz
xchg
jge
add
mov
outsl
add
dec
add
xchg
sub
sbb
add
stos
fmull
add
faddl
iret
add
inc
cmp
jp
std
xchg
xchg
pop
add
inc
adc
mov
sub
mov
lret
sbb
pop
pop
add
scas
xor
xor
fbstp
hlt
add
sub
adc
jnp
inc
add
push
push
add
xchg
mov
pushl
dec
add
pop
add
xor
outsl
lods
push
xor
cmpsb
jns
add
ret
mov
or
adc
shlb
push
add
adc
add
stos
testb
je
gs
add
add
mov
aas
sahf
imul
pop
xchg
add
push
add
sbb
in
mov
add
inc
add
lret
ljmp
add
jnp
repnz
xchg
mov
mov
out
mov
addr16
jno
std
stos
jne
lock
cmp
divl
and
mov
add
cli
jae
das
std
in
nop
xorb
sarb
shl
add
inc
add
sub
and
xchg
iret
sti
loopne
add
jae
lret
out
xchg
add
mull
cmp
ficoms
sub
inc
add
mov
add
mov
adc
data16
xlat
push
add
add
testl
add
fnsave
mov
add
pop
int3
cmp
sbb
xchg
pop
add
add
xchg
pop
add
jge
pop
add
add
jmp
shl
test
lgs
add
fistl
jns
add
mov
inc
pop
inc
add
dec
or
stos
sarb
icebp
pop
pop
xchg
mov
mov
sahf
and
mov
pop
stos
mov
dec
adc
pop
lret
add
cmp
inc
std
loopne
rcr
inc
add
test
push
leave
addr16
or
mov
push
adc
mov
fsubs
in
add
cwtl
mov
or
xor
loope
adc
jle
jns
add
mov
lods
jecxz
sub
sbb
loope
and
loopne
js
add
add
add
adc
stos
jbe
or
add
jne
rcll
add
add
and
pop
mov
jbe
push
mov
daa
dec
data16
mov
add
xchg
jns
push
add
add
lret
add
jge
lea
add
add
fcmovnbe
stc
movsl
divb
nop
popf
add
mov
jmp
add
mov
add
mov
out
std
ffreep
rol
pop
add
test
add
add
into
adc
aam
add
aaa
inc
add
add
fwait
rclb
pop
jmp
jno
fistl
add
jmp
add
mov
adc
call
rcrl
sub
fmuls
xchg
dec
iret
cwtl
sub
in
adc
mov
xchg
jo
stc
and
pop
cltd
cmp
add
rcl
and
add
and
imul
push
add
pop
leave
sub
xchg
cmc
bound
sti
xchg
cmp
add
fldenv
add
lods
add
outsb
add
or
add
sti
cmp
cltd
adc
dec
add
je
sbbl
jns
add
push
add
repz
jge
add
out
pop
add
or
xor
mov
addb
or
add
add
clc
add
sub
hlt
fwait
shlb
pop
aas
mov
dec
mov
mov
jl
cmp
add
mov
arpl
inc
add
add
dec
add
jle
leave
fsqrt
and
stos
jge
cs
dec
mov
or
add
lds
jb
adc
lock
testb
add
add
testl
mov
or
add
add
sub
mov
shlb
and
lods
clc
lock
xlat
pop
dec
xchg
fstpt
pop
mov
out
fadd
dec
add
fisubrs
sbb
add
call
push
add
mov
mov
jge
mov
add
adc
icebp
sub
mov
bound
sahf
icebp
jl
pop
out
add
pop
aam
add
enter
push
add
add
cwtl
rcrb
fmul
xchg
in
enter
mov
ret
out
add
push
add
xchg
xor
inc
add
sub
out
into
push
add
add
mov
mov
mov
jae
aad
mov
fcmovbe
xchg
xchg
inc
sarl
mov
bound
pop
aam
mov
and
leave
outsb
add
xor
add
das
jmp
fnsave
add
pop
inc
xchg
cmp
inc
add
lods
lock
jne
pop
jmp
popl
mov
inc
sbb
push
add
cltd
sbb
popf
mov
pop
lcall
add
movsl
lds
add
cmpsb
cwtl
std
sbb
or
cld
sbb
push
add
add
and
mov
add
ja
add
cmpsl
cmc
inc
dec
mov
add
das
push
add
jno
pop
add
add
outsb
add
out
add
xor
dec
add
fdivrl
cmpsl
fsts
dec
call
add
das
inc
cmp
push
aam
add
push
add
orb
add
adc
and
icebp
push
push
fcomip
or
jo
mov
mov
add
inc
add
cmp
fwait
pop
dec
push
add
inc
add
iret
rol
push
add
add
cmp
add
add
push
sub
add
sbb
gs
sub
sub
add
dec
add
inc
mov
hlt
xor
xchg
movsb
fdivl
cmp
fcomp
add
mov
push
xchg
clc
ficompl
jae
inc
add
xor
sub
sub
push
dec
mul
fidivl
add
or
test
add
ret
xchg
mov
ficomps
cwtl
push
add
cs
lret
xchg
or
adc
add
out
inc
add
add
mov
add
inc
add
add
add
mov
add
cltd
jne
test
push
imul
imul
ret
rolb
add
aad
xchg
push
add
xor
dec
add
add
add
pop
add
adc
add
ret
xor
xlat
add
add
add
add
add
jne
add
pop
adc
repnz
jle
je
pop
mov
lods
das
jb
lds
pusha
add
inc
add
sbb
add
add
imul
sti
cld
popf
or
dec
add
cmp
pop
add
test
or
ljmp
jae
stos
add
nop
data16
cmp
out
xchg
mov
movsb
ret
mov
cmp
jecxz
nop
sarb
add
add
int3
std
inc
stos
mov
sbb
cli
add
imul
fxam
adc
pop
lock
xor
adc
lahf
dec
jnp
pop
add
jns
pop
shll
push
mov
gs
aad
jae
cli
aaa
fstpl
push
sbb
loope
cmp
loope
into
movsl
pop
or
jp
cmp
sbb
unpckhps
cmp
imul
add
add
pop
pop
push
add
jmp
push
add
mov
add
jle
and
jmp
add
add
jbe
cli
nop
push
ret
sub
lret
ud2
stos
jl
fwait
lock
jl
pushf
cli
rcrb
pop
addl
cmp
inc
or
pop
add
and
call
lods
add
mov
xlat
or
xchg
add
aaa
push
add
add
add
cmp
add
jmp
mov
push
add
movsb
insb
add
out
adc
add
add
pop
stos
int
xchg
test
add
xor
mov
add
jo
add
add
and
mov
add
scas
xor
call
add
pop
add
in
imul
mov
loop
add
add
add
add
outsb
add
gs
add
in
add
out
lock
cmp
dec
cmpsb
inc
add
xchg
push
add
jno
add
push
movsl
jns
add
movsb
mov
sub
or
pop
jl
add
mov
inc
or
shll
lods
cli
or
cmpsb
mov
mov
add
inc
int3
push
add
mov
or
addr16
repnz
mov
adc
cld
pop
add
add
add
call
jecxz
pop
add
mov
dec
fisubs
add
in
xchg
fldcw
sti
inc
inc
add
ffreep
push
add
mov
xorl
sbb
aam
sub
out
mov
lods
jg
sbb
pop
add
pop
mov
dec
fwait
xor
std
std
pop
xor
push
add
push
add
lea
add
adc
sub
sbb
repz
xchg
mov
add
jmp
inc
sbb
dec
js
lret
xchg
testl
mov
je
pop
or
add
mov
xchg
add
jle
cmp
test
cltd
and
addb
pop
shl
or
mov
xchg
jns
cmp
inc
add
add
add
out
lret
add
cltd
movsb
add
add
bound
int3
ret
mov
xchg
ja
push
push
add
add
mov
jb
xchg
js
pop
add
jge
sub
add
dec
pop
add
inc
movsl
dec
add
sbb
mov
lcall
sarl
sub
loop
daa
out
fcomps
add
jecxz
add
add
inc
xor
aam
add
aad
inc
add
push
fisubrs
add
les
fdivs
mov
inc
add
aam
add
push
add
sarl
lahf
in
mov
xor
out
lret
add
pop
and
mov
daa
mov
cmp
inc
add
add
add
push
and
mov
inc
add
inc
add
stc
push
add
imull
push
sub
cmp
daa
shrl
in
sbb
orl
aas
rorl
out
cwtl
sub
pop
add
add
leave
push
add
aas
popa
dec
add
cmc
rolb
fwait
cmp
xchg
bound
cmp
data16
jno
rcll
lcall
add
cmp
add
cmp
inc
mov
add
or
dec
jo
bound
cmpsl
scas
ja
jae
sbb
aam
out
xchg
add
js
daa
sbb
xchg
jecxz
gs
add
add
add
add
into
sbb
sbb
hlt
push
add
xchg
or
fmuls
sbbl
add
fcomp
sbb
pop
add
mov
jo
and
jge
inc
add
out
test
jle
adc
add
mov
test
in
cmpl
add
shl
sbb
or
scas
mov
and
inc
int3
xchg
pushf
adc
das
add
xlat
orps
out
aam
add
dec
js
in
add
aam
pop
jno
add
movsl
mov
outsl
jno
jg
pop
adc
jg
jo
jno
add
subb
jo
mov
inc
add
pop
add
pop
add
loop
add
add
add
add
popf
mov
lcall
xor
pop
mov
in
jl
shrb
jo
push
add
scas
in
sub
shll
add
arpl
add
pop
add
xor
repnz
and
mov
add
add
arpl
adc
push
add
nop
mov
add
xchg
and
lret
sbb
call
jmp
imul
add
icebp
negb
adc
test
adc
inc
add
adcl
lods
adcb
mov
xchg
pop
cmp
enter
lret
push
add
mov
loopne
xchg
lret
mov
adcl
pop
imul
les
cli
clc
or
push
add
push
add
add
jle
sbb
mov
mov
inc
cmp
jmp
add
out
push
add
jne
rorl
xor
xchg
lods
testl
xchg
in
aam
add
aad
lods
cmp
mov
cwtl
push
jp
pop
xor
and
push
add
add
mov
shll
push
xor
outsb
add
jo
push
add
jne
push
add
adc
movsl
jbe
repnz
jo
std
push
add
add
add
add
jg
add
xor
add
add
jno
push
mov
add
gs
rolb
fcmovnbe
fsubs
sbb
rol
mov
and
mov
dec
add
jo
in
mov
add
sbb
add
out
dec
fstp
push
aaa
aam
add
xchg
xlat
add
or
add
mov
stos
sbb
pop
add
enter
dec
add
push
repnz
add
in
dec
add
mov
add
mov
add
dec
add
lods
movsb
dec
jbe
test
jle
clc
or
aad
test
notb
mov
in
stos
mov
call
stc
pushf
cmp
je
ljmp
pop
add
sbb
add
test
mov
add
sbb
scas
add
pop
push
add
push
mov
add
repz
sbb
daa
jne
add
xor
or
pop
add
add
sub
push
add
dec
add
add
mov
xor
mov
jl
shl
add
or
outsb
add
xchg
jg
add
adc
das
lods
push
sbb
mov
add
add
mov
out
test
add
fstp
daa
mov
out
imull
add
pop
mulb
or
add
add
pop
add
adc
xchg
out
jmp
cmp
adc
xor
push
add
or
and
add
jmp
sub
mov
add
mov
xlat
or
roll
jg
lret
lods
sub
inc
add
add
daa
jmp
jl
jno
je
jne
add
jg
push
add
mov
push
add
adc
pop
mov
repnz
add
test
add
add
lcall
add
out
push
add
and
push
add
popa
cltd
add
imul
add
sbb
mov
add
fistpll
not
pop
test
add
add
add
jne
push
add
aam
jecxz
sbbb
add
fwait
cmp
sbb
ror
ss
rorb
add
icebp
inc
add
pop
fstp
add
ljmp
test
lods
pop
shll
mov
jmp
add
add
ret
add
neg
or
sahf
loop
add
add
or
pop
add
add
add
dec
stos
bound
psubw
add
inc
add
xor
add
add
dec
sbb
adcl
add
std
or
jbe
test
adc
or
ret
sbb
inc
xor
orb
out
dec
add
add
add
cmpb
jo
jb
loope
sti
push
add
into
mov
imul
imul
in
test
out
scas
in
add
sub
scas
aaa
js
add
add
lahf
insb
add
add
and
add
out
or
inc
add
xor
add
inc
lods
popa
in
and
and
int
insb
add
sub
sbb
cmpb
and
mov
pop
add
mov
aad
testb
fiaddl
add
add
cli
enter
add
add
jnp
mov
mov
bound
add
leave
xchg
cmpsl
adc
inc
bound
insb
add
mov
jnp
hlt
sbb
sbb
cs
imul
popf
sbb
fcoms
data16
add
fists
out
data16
int3
icebp
or
jmp
dec
popf
sbb
dec
dec
outsb
add
add
cltd
dec
add
and
jne
ret
ret
push
add
cmp
cmpsb
push
add
add
mov
cmp
pop
pop
add
adc
pop
add
ret
ljmp
inc
add
lahf
jecxz
insl
ja
add
add
cld
mov
add
stc
pushf
shlb
dec
lea
add
add
mov
add
scas
bound
out
repz
jl
mov
and
adc
cltd
add
xchg
add
mov
clc
mov
inc
sub
out
daa
nop
dec
add
mov
push
mov
loop
add
daa
lahf
or
test
xchg
jge
mov
xchg
repnz
das
adc
scas
xor
mov
dec
ljmp
in
add
push
add
push
add
lret
add
fmuls
xor
or
add
xor
lea
add
stos
lret
xchg
std
jo
movl
mov
cwtl
pop
rorl
mov
repnz
add
mov
mov
data16
jno
adc
push
add
mov
aam
add
mov
rorl
jecxz
cmp
popa
xchg
lea
mov
cmpsb
and
loop
and
pop
fmul
push
add
jnp
add
add
mov
xor
test
dec
add
xor
xchg
xor
inc
mov
subl
in
aas
pop
xchg
xor
adc
imul
ja
mov
add
popf
dec
push
pusha
add
hlt
cwtl
dec
add
orb
adc
dec
add
add
push
add
mov
mov
add
pop
cltd
bound
cli
in
or
add
add
xchg
addr16
add
xor
es
push
insl
mov
cmp
je
xchg
mov
mov
add
push
add
xchg
cli
mov
add
adc
xor
or
imul
add
es
int3
add
add
cmp
cld
and
xchg
fdivr
ljmp
add
add
jae
lret
stc
insl
aad
loop
add
push
jmp
sub
mov
jge
jecxz
sahf
lods
inc
dec
cmp
push
add
mov
aas
cmp
jle
in
xor
add
add
add
xchg
repz
mov
pop
popf
lds
lret
push
add
outsl
pop
add
std
fcmovnu
add
push
bound
ja
in
mov
add
add
fwait
dec
push
add
or
cmp
loope
pextrw
arpl
imul
add
mov
dec
add
outsb
add
cltd
mov
add
inc
add
lret
add
add
add
lods
add
add
dec
add
mov
jae
add
or
enter
fxch
lea
sub
inc
add
inc
jge
clc
mov
jae
add
or
jno
add
xorl
inc
clc
jmp
cmpl
fimull
imul
pusha
add
add
inc
add
rol
push
add
jl
mov
add
fwait
sbb
xor
stc
xor
data16
mov
les
or
adc
xchg
push
add
sbb
xchg
pop
add
sbb
mov
mov
add
add
imul
popa
push
add
add
xchg
add
pop
add
fstpl
add
pop
add
lret
in
popf
aam
dec
add
aaa
decl
movsl
lods
fcmovbe
movsb
pop
add
add
aad
and
push
hlt
dec
or
addr16
dec
add
push
add
inc
ja
mov
add
sbb
cmp
rcrb
add
xchg
inc
add
int
add
add
dec
or
cmpsl
cltd
mov
add
cmp
pop
mov
xor
sub
xor
add
push
add
jb
cmpsl
lahf
inc
dec
add
js
cmp
mov
pusha
add
arpl
mov
add
mov
xlat
dec
jnp
lcall
inc
int
add
stc
sub
xor
and
add
mov
inc
add
test
add
inc
dec
add
jnp
add
in
add
mov
inc
add
roll
jmp
out
cltd
pop
movl
and
dec
push
loop
add
add
pop
sti
popl
pop
mov
enter
stos
xchg
stos
cmp
mov
add
xchg
sbb
mov
loop
fcmovbe
jmp
or
outsb
add
add
adc
jge
dec
xor
fdivr
dec
add
sarb
add
add
mov
aad
sub
pop
ret
add
cmpsb
fidivrl
cwtl
jb
xchg
jns
xchg
test
adc
in
add
dec
add
cmp
icebp
or
xchg
add
cmpsb
movsb
dec
or
mov
push
ret
dec
add
in
data16
ror
cmp
push
add
add
add
xor
add
fsubl
jp
cmpsb
mov
pop
jne
xchg
push
add
out
jno
unpcklps
ror
xchg
sub
sahf
pcmpgtd
jae
xchg
cli
fucomi
lock
adc
dec
add
push
inc
add
insb
add
add
aam
stc
xor
es
push
add
cmpsl
mov
add
add
add
mov
and
cmp
cwtl
aam
cmp
mov
movsl
imul
add
adc
jmp
add
jns
xchg
test
lock
stos
popf
out
mov
fsubrl
mov
dec
fnstcw
ss
enter
pushf
jle
fildll
mov
push
add
xor
add
inc
add
add
sub
push
lcall
pop
pop
push
add
add
mov
aas
push
add
mov
sbb
test
sarb
lret
add
imul
pushf
cltd
sbb
test
sbb
in
add
add
mov
mov
ljmp
paddb
jl
fisubl
xor
add
add
pushf
xor
mov
aam
add
add
dec
add
jl
leave
push
add
adc
add
cltd
clc
push
add
stc
mov
xchg
xchg
add
test
inc
add
add
jmp
add
add
or
xor
ret
add
fisubl
adc
leave
or
das
add
push
jecxz
sar
sub
aaa
xor
add
add
jo
fstpl
scas
or
mov
lret
fisubrs
add
or
mul
xchg
scas
aas
xchg
pop
add
add
mov
push
add
jmp
cwtl
stc
enter
add
sti
jbe
pop
aaa
lret
add
inc
lret
xchg
fdivrl
add
mov
add
or
cld
lcall
add
add
sbb
out
cltd
sbbb
ficoms
sub
cmpsl
fstpl
mov
mov
fsubl
in
data16
nop
int
addr16
add
lock
cwtl
jmp
movsl
mov
jae
inc
add
add
sbb
or
mov
add
mov
aaa
push
push
add
add
loopne
add
mov
push
mov
iret
mov
pop
add
rorb
aad
loopne
sbb
xlat
insb
add
add
addl
add
roll
rolb
out
cmc
cmp
add
repz
add
mov
add
sub
andl
add
add
add
mov
fidivl
add
fisttpl
out
ljmp
nop
adc
mov
sbb
xor
loop
add
rcll
mov
mov
xor
pop
add
repnz
add
add
roll
add
aad
add
cmp
adc
in
add
std
lea
popf
repnz
leave
xor
add
mov
fbstp
add
pusha
add
add
mov
or
push
add
cmpsl
mov
mov
pop
add
pop
data16
add
push
add
scas
dec
daa
or
push
add
dec
aam
push
add
add
xchg
dec
mov
cwtl
in
jns
add
add
hlt
popf
popa
xor
xor
sbb
in
xor
lahf
sbb
xor
ds
arpl
add
add
dec
int
add
add
add
or
mov
mov
push
shll
xchg
cmp
pop
lahf
subb
cltd
jge
inc
sub
hlt
jb
push
cmp
sahf
jecxz
add
xchg
mov
mov
lock
mov
ret
leave
push
inc
mov
add
into
xchg
lret
outsb
add
add
cmp
lcall
mov
xchg
andl
jnp
loop
add
popa
sbb
test
imul
add
jle
cs
aam
lahf
push
bound
and
dec
add
mov
arpl
add
test
add
dec
xchg
jecxz
add
arpl
stos
or
and
jno
ret
call
test
sub
sub
bswap
mov
mov
lods
mov
push
pop
mov
mov
scas
dec
add
inc
add
add
mov
xor
cmpsb
lods
push
add
aam
add
mov
add
fists
cmp
outsb
add
sbb
and
jne
push
dec
aaa
jle
dec
add
xor
cmp
xchg
mov
add
add
popa
jbe
jge
scas
fbld
lods
lock
sub
testb
leave
sub
lods
mov
icebp
lock
sub
add
inc
add
out
cltd
jge
add
fimuls
lcall
and
add
mov
xchg
mov
in
push
mov
int
sub
mov
add
je
idivb
mov
popa
lds
shrb
nop
arpl
dec
and
add
lock
mul
or
dec
sub
mov
adc
xchg
pushf
cmp
clc
push
add
test
push
add
mov
sbb
cmc
lcall
add
and
add
sbb
xchg
stos
inc
sub
pop
add
add
push
inc
imul
sarb
xor
lcall
pop
lods
or
add
add
scas
xor
clc
mov
xor
add
mov
add
add
add
cmp
or
pop
int
out
jb
lock
sub
jns
ret
sbb
in
adc
cmp
add
movsl
add
movb
shll
add
push
xchg
rcr
bound
push
add
in
out
stos
sar
add
add
add
cmp
rcr
lcall
add
lea
add
push
add
mov
push
dec
add
mov
pop
add
add
mov
clc
movsb
outsl
pop
add
sub
stos
nop
mov
out
out
daa
adc
and
into
add
sub
push
lea
xor
addr16
into
fwait
cmp
xchg
push
add
sbb
fbld
mov
xor
pop
add
add
add
add
mov
xchg
roll
addl
add
mov
bound
pop
cmp
ret
out
sbb
outsb
add
add
loope
int3
jae
sarb
add
cmp
cwtl
test
pop
add
cs
mov
jl
inc
add
add
pop
add
mov
les
data16
push
add
mov
add
add
in
dec
add
sub
addl
aam
mov
popa
add
inc
mov
sub
mov
jnp
sahf
into
adc
ret
outsb
add
add
rcll
mov
adc
inc
add
adc
jno
mov
cmpl
sbb
or
cmp
jbe
mov
add
add
fs
push
add
add
mov
jno
bound
sub
inc
add
jne
and
xor
mov
in
ret
mov
dec
add
fcmovne
aaa
sahf
pop
add
mov
lret
outsl
xor
stos
xchg
and
push
jg
add
out
popa
xchg
je
sbb
adc
inc
mov
mov
mov
xor
popf
mov
lods
mov
inc
add
pop
loopne
add
add
sbb
and
das
or
or
dec
xchg
jle
xor
scas
ficomps
add
add
sbb
fdivs
mov
add
lret
add
add
sub
cld
or
xlat
outsb
add
adc
adc
push
add
cmp
jmp
add
xor
repnz
dec
add
add
mov
pop
leave
fildl
push
add
or
cmp
aaa
xor
add
jp
push
xchg
les
mov
cwtl
out
add
jne
mov
sbb
add
add
add
pop
loop
rolb
add
mov
or
ret
pusha
add
fmuls
scas
std
jmp
cwtl
sbb
jge
add
rcrb
cli
fists
cmp
dec
aad
insl
sub
xlat
sbb
test
add
add
test
xor
add
lret
jmp
add
sub
cmpsl
add
jecxz
push
lret
jno
aaa
in
movsl
mov
sbb
add
push
add
add
inc
sbb
mov
add
adc
xchg
mov
mov
add
mov
push
mov
xchg
dec
mov
nop
mov
push
outsb
add
jae
xchg
inc
add
call
lret
mov
add
lods
mov
push
add
push
add
adc
or
rolb
pop
dec
add
mov
addr16
add
lahf
sub
inc
inc
add
push
add
aaa
lret
inc
cmpsl
inc
jge
inc
add
inc
add
stos
adc
jno
add
movsl
xor
jmp
andl
lods
out
sub
add
add
aad
add
add
pusha
add
xorl
pop
mov
pop
add
sbb
jmp
das
pop
fs
mov
add
add
pop
add
psadbw
push
add
add
pop
test
mov
shlb
arpl
sub
fsub
fld
dec
repz
adc
or
add
sub
mov
cmp
dec
add
int
mov
xor
dec
add
jg
xor
sbb
add
adc
lods
cmp
mov
inc
add
mov
mov
add
mov
and
sub
add
loopne
push
sbb
add
fcomp
cmp
loope
mov
inc
add
das
std
andb
add
pop
add
add
sub
jo
aas
dec
add
push
add
add
add
bound
push
add
fiadds
addr16
or
add
data16
imul
push
add
bound
popa
icebp
xor
stc
mov
mov
gs
add
fidivrs
mov
jo
mov
xor
divl
fs
push
add
in
xor
adc
sbb
add
std
inc
add
and
les
and
movsb
bound
in
mov
js
fistl
gs
icebp
cmp
fs
sbb
rcll
add
add
inc
stos
pop
add
stos
popa
cmpsl
ljmp
add
loope
add
leave
pop
insl
xor
jno
insb
add
stos
mov
pop
mov
cmpsb
roll
add
add
out
mov
mov
mov
shlb
clc
inc
add
add
loope
jae
xchg
daa
lret
cltd
jle
cmpsl
aad
add
leave
mov
add
dec
pop
loope
dec
add
xlat
ficoml
mov
stc
jno
mov
pop
add
sbb
mov
roll
popf
xor
out
add
cmp
clc
and
les
xchg
cli
mov
or
in
sub
out
aaa
jo
sti
out
or
aad
fwait
sub
lods
jbe
cmp
or
pop
xchg
inc
add
xchg
fstpt
add
cmp
mov
xchg
push
add
add
je
test
arpl
xchg
push
cmc
adc
mov
inc
add
or
ljmp
pop
xor
ljmp
dec
add
out
inc
add
fpatan
adc
ds
fistpl
add
add
push
add
mov
mov
add
mov
xlat
in
cmp
into
or
add
or
dec
sbb
mov
add
lret
mov
jmp
add
add
push
jp
into
mov
cmp
add
inc
fidivrl
sub
inc
insl
lret
lods
ljmp
iret
mov
mov
mov
add
cli
and
ret
add
pop
ds
data16
add
add
xorl
jae
mov
aas
lahf
lcall
mov
add
xor
jg
add
leave
cltd
push
add
fcoms
repz
add
add
iret
mov
xchg
pop
xchg
dec
repz
test
add
xchg
cli
test
aad
adc
push
add
mov
add
add
aad
mov
sub
ljmp
add
js
jge
mulb
add
gs
add
mov
pop
hlt
shlb
imul
in
add
inc
add
add
adc
cmp
add
dec
push
jl
dec
cmp
mov
outsl
and
jo
jmp
fnstenv
add
push
add
sub
inc
jno
dec
jbe
add
add
sbb
add
inc
rcrb
int
mov
add
into
add
das
dec
add
in
bound
inc
mov
pop
add
xchg
jno
add
mov
fsubrl
xor
dec
add
shlb
sbb
jb
or
aaa
lahf
sub
mov
bound
pusha
add
pop
and
cmc
pop
mov
add
nop
sub
push
push
add
in
bound
mov
dec
xchg
sahf
ret
and
cmp
mov
mov
mov
sub
jns
jg
fisubs
push
adc
add
add
sub
fisubrs
gs
dec
mov
in
data16
adc
iret
cltd
push
add
add
and
pop
add
inc
add
sub
xchg
idivb
mov
mov
add
xchg
test
push
add
repnz
out
pusha
add
jl
pop
ljmp
movsb
add
adc
rcl
outsb
add
dec
add
jecxz
add
ficompl
xchg
mov
pop
add
add
xlat
out
lret
imul
sub
pop
and
fcoml
add
enter
add
add
add
cmc
dec
shll
fwait
scas
test
cmp
mov
inc
add
addb
add
push
add
add
stos
repz
add
shll
jg
add
add
mov
add
sub
ja
add
cld
sub
das
arpl
cmp
gs
push
add
add
and
add
xchg
insl
test
fdivrl
push
add
imul
sub
adc
add
hlt
testb
sub
mov
xor
or
mov
es
ret
push
push
in
clc
mov
add
add
scas
mov
add
add
xchg
stos
or
or
ja
add
mov
cmp
mov
sarl
lahf
stos
inc
add
jg
push
in
pop
cmpsb
dec
mov
add
add
mov
hlt
or
adc
sub
insb
add
and
and
mov
jbe
shll
push
add
push
mov
adc
ret
daa
movsb
int
aam
sub
cmp
cmp
sub
loopne
fisubrs
pop
sub
jmp
or
add
add
add
add
add
insl
xchg
lahf
addr16
mov
xor
add
les
add
add
and
fidivl
mov
sar
hlt
pop
xor
add
pop
loop
add
or
sbb
xchg
aam
sbbb
add
xchg
movsb
push
add
add
or
roll
add
jno
cli
mov
xor
out
test
inc
add
xsha256
cmpsb
adc
shll
fstpl
das
inc
ljmp
fs
enter
and
movsl
mov
jae
add
mov
add
add
insb
add
push
add
cmp
outsb
add
enter
clc
movsl
popa
pop
add
add
stc
mov
dec
js
popl
cmp
rcrb
add
sub
add
xorl
jmp
mov
mov
add
jb
and
xor
cmc
int3
daa
lods
dec
add
xor
pusha
add
add
push
add
add
call
push
add
cmp
rcrb
outsb
add
mov
rorb
and
add
push
add
icebp
rorb
jo
mov
out
add
popa
jge
cmp
add
add
cmpsl
aas
adc
js
int3
inc
loope
or
cmp
int
bound
loopne
and
arpl
mov
push
lret
pop
add
add
leave
fiaddl
mov
ja
jnp
add
add
hlt
mov
gs
outsl
push
jns
in
shlb
and
pusha
add
mov
aaa
rcr
nop
dec
popf
mov
add
ja
push
add
sbb
and
add
add
add
push
add
dec
mov
fwait
dec
sub
add
add
adc
mov
or
test
pushf
push
add
inc
add
scas
dec
jbe
mul
xchg
sbb
xchg
mov
repnz
sti
jmp
std
ficoms
insb
add
xchg
jno
sti
sbb
sti
jmp
push
add
sub
sbb
mov
lret
mov
xchg
jb
jge
aam
mov
or
cmp
out
lds
cmpsl
mov
jl
push
cld
bound
insl
mov
rcrl
pop
scas
out
add
pop
pusha
add
fucom
shrb
mov
add
mov
cmp
add
push
add
shrb
clc
jns
push
add
lds
stc
gs
bound
test
out
gs
push
xchg
cmp
packsswb
push
add
orb
inc
add
xorl
cwtl
mov
shl
jmp
jns
fisttpll
stos
xlat
fwait
or
outsl
loopne
out
xlat
loope
xchg
je
inc
cmc
insb
add
add
push
add
xchg
loopne
repz
movsl
jecxz
add
in
push
add
jo
stos
inc
jns
out
inc
cld
icebp
push
add
add
lds
add
jmp
push
add
iret
pop
hlt
adc
pop
add
ljmp
jmp
jae
in
out
add
fbstp
adc
jns
add
mov
lock
add
add
insb
add
sbb
dec
mov
stos
adc
add
add
add
and
lahf
outsb
add
xchg
out
testl
add
jne
add
add
jno
add
or
sub
add
add
packssdw
inc
scas
mov
add
inc
add
fstps
add
add
xchg
ljmp
push
repz
lods
cli
push
add
fstl
add
add
mov
call
dec
rcrb
xchg
or
fwait
shlb
lods
mov
insb
add
add
add
mov
add
inc
add
push
add
movsl
and
add
mov
add
jbe
mov
les
adc
pop
add
sub
jne
out
jle
ret
add
fnstenv
sub
add
mov
add
je
std
mov
idivl
loopne
add
jnp
stos
stos
adcb
enter
xchg
xchg
sbb
mov
mov
and
add
rcrb
fwait
adcl
add
sbb
loop
lret
adc
mov
xchg
in
xchg
jle
daa
push
add
insb
add
add
out
add
mov
inc
and
daa
and
mov
xchg
pop
add
cmp
popa
mov
add
loope
adc
fcmovnb
shr
mov
subl
and
pop
movsl
add
adc
push
add
or
pop
add
mov
lock
into
outsl
push
push
add
push
loope
cmpsb
out
sbb
in
inc
add
mov
fwait
idivb
add
add
or
adc
xor
jl
enter
sub
cwtl
dec
inc
jl
push
add
cs
in
inc
add
xor
pop
scas
out
fcmovnb
jno
sub
push
add
add
movsl
js
mov
test
add
mov
pop
hlt
imul
xchg
add
bound
xor
lods
movsb
mov
add
mov
in
out
loopne
nop
rorl
push
add
aaa
repz
dec
pop
fdivp
pop
xor
add
add
xchg
dec
add
cmp
add
add
mul
or
out
lret
sahf
push
push
sbb
fimull
push
add
add
jno
and
mov
mov
xor
lret
add
fisubl
add
xchg
and
jp
lret
cmp
aam
add
jb
push
add
mov
cmp
lret
inc
add
add
mov
push
add
jp
inc
add
sub
xor
cmpb
jg
pop
add
add
lahf
fwait
clc
add
mov
add
inc
lret
xchg
ret
add
add
add
nop
sub
mov
jae
pop
add
rcr
insb
add
add
ss
pop
imul
lcall
int3
push
add
mov
lea
out
add
movsb
mov
das
pusha
add
mov
popa
jecxz
gs
add
sbb
mov
pop
xchg
int
mov
fdivrp
test
add
sub
pop
jecxz
test
adc
scas
orb
add
add
push
add
add
push
add
add
fildll
add
add
movsl
push
add
mov
add
push
xchg
jg
into
pop
add
fcoml
popa
sub
enter
iret
cmp
xchg
popf
or
test
scas
xchg
imul
xchg
leave
lods
in
dec
icebp
vcmpsd
and
mov
cmpsb
shll
ret
or
fwait
cmc
and
cmc
inc
add
add
lret
pop
lret
add
xchg
nop
xchg
inc
stc
mov
xchg
ret
mov
add
add
add
add
hlt
mov
add
mov
jnp
add
stos
in
call
out
outsb
add
dec
test
xchg
mov
sbb
les
add
call
lock
add
pop
inc
add
divl
xchg
push
add
loopne
icebp
scas
repz
mov
mov
pop
fs
jmp
fcoms
sahf
aad
add
dec
adc
das
and
fbstp
push
add
add
lods
xchg
adc
cmpsb
fbld
mov
rcrl
xchg
inc
in
mov
subb
lods
scas
cmp
add
scas
dec
xchg
xchg
add
mov
lcall
pop
dec
add
cli
cltd
pop
je
sub
add
and
mov
clc
and
sub
add
in
mov
mov
add
add
sub
add
hlt
cmp
add
xchg
sbb
bound
push
add
add
mov
xor
add
add
add
add
or
add
add
add
mov
add
add
and
add
pop
insb
add
pop
add
lea
mov
mov
add
cltd
xor
movsl
ror
push
cltd
pushf
cwtl
adc
pop
cmpsl
push
add
mov
xor
pop
mov
push
fldcw
fcmovne
outsb
add
add
add
add
sahf
mov
das
pop
dec
add
sub
add
std
ja
fwait
and
repz
rclb
mov
inc
add
ret
inc
add
arpl
add
add
shlb
mov
add
jb
mov
dec
add
insb
add
scas
jo
xchg
mov
fildl
inc
add
loop
leave
mov
sub
in
dec
push
add
pop
jae
add
mov
add
add
leave
fisubrs
mov
jl
pop
add
sti
add
test
dec
add
add
scas
sbb
cld
pop
jmp
movsl
xor
in
mov
inc
repz
filds
add
sahf
test
movsb
add
or
sub
jg
add
xchg
cmp
cmpsl
cmp
push
add
pop
add
and
add
into
icebp
aam
movsl
push
add
xchg
jecxz
add
mov
add
push
add
jp
out
pop
or
push
mov
pop
imulb
ficoml
add
mov
or
add
add
enter
add
hlt
sbb
test
jle
add
sub
jb
ljmp
add
mov
adc
add
mov
mov
mov
stos
scas
dec
sub
add
mov
nop
sub
pop
cmp
scas
aaa
movsl
sub
sub
dec
dec
add
jo
aad
fstps
repnz
loope
add
pop
pop
add
loop
add
add
push
add
add
jl
lods
mov
repnz
nop
add
incb
and
add
rcrb
inc
nop
or
movsb
arpl
push
inc
dec
add
rcrl
popa
inc
test
aaa
mov
mov
mov
add
inc
mov
daa
into
popa
mov
add
into
inc
ja
add
xchg
and
pop
add
fwait
jno
imul
pushf
or
add
add
pop
into
xchg
or
int
add
xchg
adc
fnstcw
sub
and
push
add
add
mov
or
sbb
jo
test
pop
popf
bound
jp
sbb
lock
jl
jmp
add
xor
test
add
add
lcall
aas
into
enter
mov
mov
test
loope
xorl
sub
xor
jmp
repnz
mov
bound
xchg
aas
pop
add
orl
add
int3
mov
ficomps
dec
add
push
add
add
shll
mov
ror
add
or
dec
add
jle
lahf
das
jbe
fbld
add
and
cmpsb
jnp
push
add
add
add
add
pop
and
mov
mov
js
inc
add
jo
inc
fbld
cmc
std
lcall
mov
jmp
sbb
inc
add
mov
xchg
sbb
icebp
cltd
sub
add
sub
mov
mov
cmp
lcall
xor
out
mov
add
adc
add
fldt
mov
add
cltd
cltd
push
insb
add
add
and
add
scas
in
test
les
sbb
fnstsw
add
add
hlt
mov
sbb
sbb
rcrl
rorb
add
add
or
stos
jb
mov
out
inc
add
and
cld
pop
cmp
sbb
inc
pop
outsl
sbbb
cmc
lea
mov
ficompl
out
pop
dec
add
inc
add
sub
pushf
mov
pop
in
cmp
cmp
test
mov
add
jecxz
mov
mov
add
add
add
in
mov
js
xlat
xchg
sti
in
push
fsubrs
xchg
adc
cmp
test
add
out
pushf
rcl
insl
in
add
lock
or
pop
inc
xchg
stos
mov
lds
jl
negl
add
xlat
int
add
int3
adc
add
rorl
mov
arpl
add
into
stos
mov
enter
sub
fnstenv
xlat
les
add
add
mov
in
ret
add
call
lret
dec
sbb
mov
add
shlb
dec
jmp
in
add
enter
mov
xor
enter
add
push
dec
and
xchg
xlat
insl
popf
add
dec
add
mov
xchg
enter
mov
and
jmp
test
lcall
iret
inc
add
add
adc
js
mov
cmp
and
and
sub
add
add
add
jo
xchg
mov
add
or
jmp
cld
cltd
imul
psllw
lret
jns
inc
add
add
addl
add
in
adc
lock
subl
add
add
add
add
xchg
rorb
add
xorb
enter
jmp
and
cmpsb
xchg
ret
add
mov
icebp
jbe
dec
add
sbb
int3
ret
jae
add
repz
add
add
cmp
into
dec
int
or
cmpsl
pop
add
mov
or
dec
adc
lret
dec
add
inc
jnp
ljmp
cmpsl
and
iret
loop
int
lods
insb
add
out
cli
and
xchg
enter
aam
add
dec
add
dec
add
in
daa
push
add
in
dec
daa
or
mov
inc
add
je
int
dec
or
add
xorb
add
pop
lods
mov
pop
add
jle
mov
ret
mov
daa
adc
pop
add
add
outsb
add
add
adcl
mov
in
das
sbbb
xchg
pop
add
inc
lea
stc
clc
pop
pop
inc
outsb
add
add
jbe
ja
add
jecxz
sub
xchg
jns
repnz
push
add
cwtl
out
insb
add
ret
jo
pop
fsts
add
xor
add
add
mov
and
fildl
add
mov
repnz
fstps
dec
add
lock
vshufps
push
mov
clc
or
fucom
or
add
subl
sbbb
adc
cmpsb
loope
dec
add
pusha
add
fimuls
xchg
mov
lcall
dec
add
push
add
xchg
sahf
dec
add
jge
sbb
dec
add
or
add
adc
andl
lret
and
add
push
data16
inc
movsb
mov
dec
outsl
mov
or
sub
add
fs
xchg
add
outsl
xchg
inc
mov
add
jae
imul
add
pop
cmp
mov
mov
movsl
xor
and
popf
push
add
dec
add
add
arpl
mov
in
and
test
add
push
add
add
add
xlat
cmp
in
xor
mov
add
add
xchg
mov
adcb
xor
lods
mov
nop
stc
jge
shl
or
mov
mov
js
mov
ret
add
mov
add
jbe
pop
add
add
add
cmc
ss
sahf
push
add
pop
add
fsubrp
mov
cmpsl
movb
add
dec
or
lods
and
cmpl
push
add
dec
mov
add
lea
add
mov
stos
inc
inc
jg
add
lock
mov
mov
imul
add
add
and
add
adc
rcrl
add
sbb
mov
xchg
jge
adc
or
stc
inc
add
add
imul
add
add
add
jbe
popa
sbb
push
add
in
mov
add
ja
inc
fildll
pop
in
iret
outsb
add
lods
mov
ret
push
add
sub
jmp
add
sbb
subl
jmp
add
pop
inc
xor
pop
add
add
inc
fldenv
add
adc
jno
dec
add
xor
push
add
cld
cld
add
add
push
add
add
test
enter
stc
xchg
scas
jge
xor
pop
out
mov
adcb
enter
inc
add
push
cmc
es
adc
add
jmp
pop
or
sub
fmul
in
add
sbb
inc
add
jl
dec
add
pop
bswap
shl
out
mov
dec
add
ss
call
int3
mov
push
add
inc
add
in
mov
push
add
mov
in
aad
add
iret
sbb
loop
in
add
add
hlt
out
jo
loopne
add
lret
stos
jo
cmpb
add
icebp
cli
mul
fstps
sub
rolb
add
pop
loop
push
add
inc
add
int3
xor
test
and
jns
mov
mov
add
out
in
jge
mov
push
add
jle
repz
cmp
mov
add
fwait
sbb
fnstcw
jns
add
and
jmp
dec
add
aam
add
jmp
ljmp
add
lock
repz
add
xor
jbe
inc
add
push
inc
cmpsl
mov
cmpsl
adc
sarl
add
add
out
aas
hlt
pop
mov
mov
or
in
lret
jne
xchg
je
std
dec
mov
rol
insl
jns
mov
dec
pop
xchg
jns
push
add
push
ja
add
les
add
cmpb
mov
rorl
leave
dec
add
xchg
sbbb
add
mov
add
and
mov
or
adc
mov
push
stos
int3
mov
push
rol
jg
add
adc
mulb
mov
push
mov
outsl
push
add
sbb
pop
add
test
xlat
leave
aas
sbb
shlb
lret
shlb
push
dec
fstpt
aas
shl
inc
add
inc
mov
cld
push
orb
push
add
add
push
add
and
add
inc
in
dec
add
cmp
mov
stos
sub
inc
add
das
sub
dec
add
add
dec
add
insb
add
jl
sub
pop
inc
add
xchg
vmovaps
lock
cmpsb
pop
add
lea
add
fdivrl
and
mov
add
add
add
adc
in
add
rclb
movsl
stc
addr16
xor
std
and
or
sub
mov
xchg
shll
add
mov
xor
or
scas
jb
pusha
add
mov
cmpsl
dec
sbb
xchg
mov
call
aaa
jno
lret
and
dec
lret
addr16
mov
inc
add
lods
dec
add
and
popf
cmp
jge
in
lahf
and
popa
sub
bound
add
jp
in
insl
inc
std
adc
aas
popa
test
sbb
or
cli
sbb
andl
ret
add
dec
add
push
add
lret
jg
lods
sub
add
xor
inc
dec
iret
xchg
add
jae
or
lds
cmp
add
in
imul
fdivs
add
inc
add
add
inc
add
adc
pop
push
add
loop
pop
add
gs
add
gs
add
mov
or
bound
inc
xchg
pop
je
push
out
add
imul
xor
fdivl
add
and
xchg
loop
adcb
add
and
and
add
psrlw
inc
add
add
add
xchg
test
push
add
add
pop
add
push
add
aad
add
mov
stos
sub
sbb
push
add
add
ja
add
test
mov
add
jne
ljmp
add
xchg
lods
ljmp
inc
add
inc
add
xchg
lcall
adc
mov
insl
xchg
popf
inc
add
in
jno
inc
add
in
add
pop
add
mov
outsb
add
adc
aas
cmpsb
push
data16
orb
inc
add
add
les
sub
jle
cli
adc
pop
dec
add
add
int3
xor
jno
bound
or
sarb
mov
add
push
add
inc
add
push
add
add
test
mov
mov
cwtl
clc
sub
faddl
xchg
jns
add
jecxz
add
sub
push
js
adc
adcb
jno
add
add
dec
mov
rorl
and
movsb
inc
add
jb
sbb
mov
lods
fstpl
popf
mov
testl
add
cmp
lods
add
test
adc
dec
add
dec
add
and
add
xchg
ja
dec
add
jno
sub
add
pop
and
outsb
add
add
cwtl
sbb
add
add
repz
cmp
add
ret
aaa
sbb
cmpsb
cmp
sbb
movsb
ret
add
int3
cmp
lods
test
add
ret
add
rorl
add
adc
xchg
out
push
add
fs
fldt
mov
cmp
xor
add
xor
ret
mov
add
xor
xor
cltd
xadd
and
leave
and
fnsave
imul
inc
add
add
add
sub
neg
rolb
pop
sbb
add
in
add
or
stos
comiss
mull
pop
add
dec
add
add
jb
or
adc
inc
add
or
add
popf
lds
cltd
xchg
inc
cld
push
add
or
cld
into
lods
fnsave
pushf
sbb
xor
jno
lock
jne
mov
add
add
add
push
add
fnsave
jnp
in
push
jp
lods
jb
jle
lds
add
mov
into
pushf
icebp
fidivrs
cmp
add
xchg
pop
add
icebp
out
cld
jnp
add
incb
iret
inc
sahf
fs
cmp
add
movsb
leave
xor
xor
push
add
pop
dec
add
pop
jae
add
cmpsb
or
add
ljmp
dec
add
cmp
jg
mov
add
add
pusha
add
negl
sub
inc
add
add
mov
mov
lea
or
add
lret
popa
pushf
sbbl
int3
or
add
add
cmc
dec
add
push
xlat
lcall
daa
mov
in
add
add
iret
mov
imull
dec
mov
add
push
add
add
add
lret
jge
push
add
and
jns
add
sbb
jo
int
add
cmp
aam
mov
and
inc
add
add
jo
pop
out
add
or
rcll
out
add
mov
push
add
lret
inc
adc
lret
cmp
xor
out
rcll
lock
and
clc
andb
test
add
jg
mov
sbb
subl
add
sub
pop
add
sub
add
loopne
add
add
inc
mov
enter
add
add
sub
and
or
add
add
pop
xchg
inc
add
push
add
pop
je
cld
add
dec
add
mov
add
ja
dec
add
mov
or
clc
push
mov
bound
or
inc
jge
imul
js
push
push
add
mov
dec
inc
add
push
add
add
add
call
je
insl
adc
push
out
add
and
int
inc
scas
push
add
add
add
scas
and
mov
cmp
adc
in
jmp
inc
add
adc
popa
scas
lahf
or
cli
cmp
push
jno
sbb
jnp
push
ljmp
arpl
add
stos
leave
mov
cmpl
add
dec
add
push
add
or
imul
movsl
stos
cmc
mov
cltd
jmp
in
or
lea
in
mov
subl
push
add
inc
sbb
jns
lods
add
inc
xchg
mov
mov
xlat
sub
fistl
add
inc
add
rcll
add
mov
jae
add
xchg
cmpsb
or
add
dec
add
jmp
and
out
mov
cmp
add
cwtl
pusha
add
call
fbld
add
add
in
pop
sbb
pop
lcall
add
sub
inc
add
add
and
mov
and
add
dec
add
push
add
test
add
mov
add
or
cmp
jns
ja
add
lcall
bound
mov
add
insl
cmp
pusha
add
cmp
add
cmp
push
cmp
rcrb
fimuls
or
adc
pop
dec
add
add
add
add
add
pop
sbb
sbb
les
add
xchg
or
or
add
into
mov
pusha
add
scas
mov
add
add
idivl
in
out
ficoms
add
inc
inc
es
sub
stos
xchg
add
test
or
mov
pop
add
inc
add
cmp
mov
add
add
adc
cmpsb
adc
jb
fcomps
push
adc
movsb
daa
in
add
add
cwtl
std
mov
add
dec
mov
adc
inc
add
sub
fnstcw
mov
add
test
div
pop
add
mov
jb
jecxz
push
sbb
and
adc
xchg
sar
andnps
gs
xor
or
add
add
orl
and
push
pop
xchg
shl
add
ja
add
adc
sbb
jne
cmpsl
jo
ja
pop
or
xchg
loope
popf
cmp
dec
add
jns
add
add
jmp
add
add
add
fcoms
xchg
xor
pusha
add
jp
xor
dec
add
fsubrl
add
or
cmpsl
mov
xor
or
inc
add
call
sub
fists
popa
imulb
mov
mov
add
sbb
movsl
imul
sbb
or
inc
add
add
jmp
xchg
shlb
insl
test
sbb
add
add
call
dec
sbb
xchg
in
inc
add
xor
mov
std
mov
xor
int
cmpsb
sbb
shrb
adc
stc
or
adc
mov
add
inc
add
scas
popl
add
sarb
pop
add
add
sbb
add
jae
pop
fimuls
imulb
jo
fcomp
add
cmc
scas
repz
fsubrs
cmc
divb
jnp
add
or
cmp
sub
mov
mov
add
push
cmpsb
cmp
lea
out
sbb
rcrl
add
fiadds
clc
dec
ja
add
add
add
lret
push
add
xchg
add
push
add
inc
lahf
jl
jmp
or
cmp
or
push
lock
sub
daa
mov
lea
add
lock
mov
mov
inc
add
sub
iret
cmc
test
imul
add
and
mov
jecxz
lret
jbe
movsb
add
add
lahf
mov
add
aam
add
add
cmp
jns
add
clc
adc
push
add
jl
or
pushf
adc
mov
lods
mov
inc
add
inc
add
iret
cld
icebp
in
add
dec
add
add
fldenv
adc
ja
cmp
jbe
mov
add
add
jnp
lea
fwait
and
mov
mov
mov
sbb
inc
add
cld
mov
ja
push
lahf
mov
mov
add
xor
push
add
or
addb
mov
mov
or
jne
std
mov
outsb
add
lret
dec
add
sub
ja
dec
xchg
dec
lcall
add
sub
mov
add
shll
add
sahf
lret
in
inc
add
nop
cltd
or
loop
aad
movsl
mov
mov
ret
jne
xor
add
dec
add
inc
add
jmp
fcmovnb
pop
add
add
push
jmp
repnz
xor
cmpsl
sbb
add
insb
add
or
jae
lds
ss
lods
and
fldenv
or
cmpsl
loop
xchg
mov
add
cmp
mov
ja
xchg
imul
add
in
hlt
filds
adc
aam
imul
std
sahf
mov
cwtl
fstps
or
or
pop
add
sub
add
les
fbstp
popa
into
add
scas
data16
jmp
not
pop
add
pop
or
pop
add
jno
imul
add
lahf
mov
add
into
andb
sub
push
add
mov
xchg
movsb
inc
add
push
mull
add
ret
pop
push
add
adc
popf
add
adc
add
mov
sbb
pusha
add
aaa
mov
cmp
add
outsl
cmp
aaa
add
fnstcw
adc
out
std
jne
xor
add
add
fadd
xor
scas
sahf
scas
adc
divl
nop
or
adc
jae
imul
add
jae
dec
add
add
push
add
addr16
dec
add
sub
sub
sti
pusha
add
test
popf
adc
xchg
mov
jge
add
xchg
in
add
pop
adc
xchg
jb
pop
imul
shll
add
push
add
push
jb
xor
pop
cmpsl
das
xor
sbb
movsl
fiaddl
clc
sbb
cld
testl
or
and
cmpsb
clc
pushf
outsl
push
add
add
scas
sub
jge
sbb
dec
mov
add
sbb
pop
add
xchg
add
add
sbb
add
add
add
add
mov
sub
icebp
pop
outsb
add
jl
sarl
movsl
repz
sub
leave
outsl
rcr
mov
dec
add
clc
ja
js
sub
rorl
xchg
sbb
fsubl
pop
or
dec
in
bound
and
adc
xchg
add
jnp
xor
add
add
add
loopne
pop
add
add
fcomps
adc
fstl
push
add
in
out
paddb
inc
xchg
add
xor
mov
sub
pop
add
cli
mov
outsb
add
into
incl
add
sbb
mov
or
push
add
add
add
add
add
cli
je
ficoml
mov
mov
jg
jge
fnstcw
dec
add
push
add
mov
mov
add
shll
add
mov
cmp
jo
lret
or
push
dec
add
add
jns
add
xchg
into
push
add
add
cltd
add
add
add
jbe
cltd
dec
add
add
sbb
add
cwtl
add
jnp
or
dec
add
add
add
add
lock
add
push
add
add
es
cmp
sahf
mov
sahf
rcl
xchg
or
popf
sarl
popa
push
das
sbb
add
jmp
add
in
cmp
push
add
xabort
jnp
add
fsub
notb
scas
mov
sub
add
dec
repz
lcall
sub
cmp
dec
add
bound
cmp
jo
add
loopne
aaa
jb
sub
add
sub
xor
fiadds
add
add
out
add
lds
mov
add
inc
add
push
add
pop
add
or
jno
add
add
dec
add
add
push
aaa
inc
add
dec
add
mov
repz
add
add
int3
hlt
dec
cmpsb
hlt
xor
cmp
adc
in
mov
lds
cmp
jmp
jne
pop
add
sub
hlt
sub
scas
adc
inc
cmp
and
sbb
repz
mov
popa
mov
std
mov
jae
lcall
or
jp
in
push
add
flds
add
add
push
add
mov
iret
jno
enter
das
xchg
add
add
add
popa
add
add
mov
jnp
roll
inc
pop
add
ja
add
shll
add
push
add
jge
add
aaa
cmp
dec
add
push
add
cmp
arpl
add
data16
pop
pop
fwait
adc
pop
add
fcomip
stc
nop
dec
add
je
pop
add
andb
xor
mov
adc
insl
arpl
and
ds
lods
jle
add
or
mov
add
add
mov
mov
add
ja
or
mov
cld
jmp
jl
arpl
push
add
in
iret
jno
or
push
add
pop
add
cmp
lods
pop
repz
push
loopne
mov
xchg
mov
pop
add
les
add
in
add
sub
cld
jl
mov
add
mov
push
add
add
addr16
add
add
les
adc
sbb
mov
add
stc
mov
sbb
insl
decl
push
add
add
mov
add
enter
pushf
outsl
shl
sub
ljmp
movsb
cmpl
mov
add
test
lcall
call
sti
mov
adc
or
bound
lock
add
scas
sub
ret
xchg
mov
icebp
dec
push
add
mov
mov
xlat
dec
add
xchg
jne
icebp
cmp
ret
mov
sub
fndisi(8087
ficompl
xchg
xor
mov
inc
add
add
xchg
cmpsl
subb
add
sub
ficoml
add
add
pop
sbb
filds
add
jne
add
aaa
add
sub
pop
add
daa
lret
popa
xchg
iret
leave
push
add
add
stos
arpl
push
add
add
add
imul
xchg
add
mov
mov
adc
add
idivl
fnsetpm(287
xchg
cmpsl
loopne
arpl
cmp
in
inc
add
push
mov
daa
dec
add
fwait
lret
cmovae
mov
and
shl
out
lahf
fistpl
dec
add
jno
rcll
mov
add
loopne
add
mov
stc
pop
mov
jle
lret
push
add
add
scas
lods
in
add
push
add
pusha
add
add
dec
add
ds
fs
mov
je
xor
cmp
pop
add
lahf
scas
mov
add
add
add
add
xchg
add
and
arpl
add
cmp
sub
jp
sbb
clc
and
lret
add
mov
ret
jg
lds
add
add
push
add
in
cld
push
jp
lods
add
cmc
icebp
mov
add
add
lcall
fsubrs
mov
jb
mov
mov
lea
cld
adc
nop
dec
int3
mov
add
push
add
popa
jne
pop
inc
add
dec
add
jne
add
ss
and
pop
add
jns
popf
jnp
fimuls
add
add
add
add
add
mov
add
add
nop
shrl
add
sbb
add
movsl
mov
add
scas
dec
add
push
add
stos
js
les
add
stos
mov
add
ret
xor
add
dec
je
xorl
sub
cmpsl
cltd
test
add
mov
loopne
push
push
add
pop
cld
popf
or
jae
lock
data16
add
add
test
add
xchg
data16
add
cmp
test
cmpsl
mov
add
sbb
mov
add
aaa
fcmove
in
stos
lcall
insl
ficoml
sub
pop
add
out
dec
shl
in
push
add
add
mov
or
cltd
pop
inc
add
add
add
sub
sub
sti
xorl
popf
adc
xchg
mov
cmp
shll
cmp
sbb
adc
push
add
push
add
lock
jp
push
mov
jge
cltd
cli
cmc
cld
aas
mov
pop
xchg
mov
mov
sub
adc
xor
jp
mov
add
cltd
or
inc
xor
lods
movb
mov
add
sbb
hlt
or
pop
xor
popa
mov
pop
int3
and
jp
add
jmp
xor
rcr
pop
dec
test
push
add
pop
dec
add
ret
dec
add
xor
add
or
dec
add
add
mov
pop
movsl
or
add
cwtl
out
shrl
js
insb
add
dec
add
mov
cmp
data16
aam
decb
cwtl
xor
imul
mov
mov
or
pop
rcrb
add
add
jge
frstor
lcall
out
or
jno
mov
mov
shlb
xlat
dec
add
cli
adc
add
xchg
jge
orb
out
fmul
cmpsb
mov
dec
addl
fcoms
imul
add
add
push
add
inc
add
jmp
add
add
add
and
jno
test
and
jle
push
shll
adc
add
int3
fcmovb
jno
sub
add
mov
stc
loope
add
add
icebp
fistps
xchg
or
in
push
arpl
roll
cltd
jle
inc
add
test
push
add
fimull
movsl
mov
mov
fistpl
xor
and
add
add
mov
add
jae
adc
or
les
add
ss
loopne
jl
out
insb
add
insb
add
orb
mov
add
adc
mov
inc
xor
dec
add
pop
add
mov
add
nop
pushf
adc
add
shl
jnp
pop
xchg
add
in
loop
add
add
bound
xlat
sbb
int3
in
add
push
aas
mov
jae
jl
in
dec
outsl
ret
addl
add
mov
add
out
scas
jnp
add
jge
add
imul
scas
dec
je
xor
pop
enter
pop
adc
sahf
or
dec
call
ljmp
sbb
add
add
loope
add
sub
lret
pop
into
xchg
pop
inc
add
sbb
sbb
push
add
ret
xchg
icebp
arpl
call
add
jb
mov
and
adc
pushf
cmp
test
add
lock
pop
add
pop
arpl
push
add
add
frstor
add
add
add
add
add
mov
out
insl
mov
add
imull
push
add
in
mov
fnsave
jne
in
adc
repz
push
pop
add
push
in
add
shl
sub
fwait
or
mov
imul
cwtl
adc
adc
inc
add
sti
incl
fimuls
add
stc
sub
fwait
or
add
sub
stos
fwait
ljmp
add
movsb
add
mov
lret
add
add
sbb
push
aaa
jle
dec
add
add
add
xchg
push
push
add
jle
inc
jecxz
mov
fdivp
jno
dec
add
inc
pop
add
adc
add
or
jo
in
mov
add
inc
add
lock
add
push
add
dec
xor
pop
add
int3
push
out
and
sbb
out
cmp
push
out
in
push
add
das
stos
outsb
add
push
fdivr
insl
pop
add
push
add
inc
add
add
add
cmp
ljmp
les
add
push
add
clc
pop
repz
push
test
add
test
into
or
dec
add
adc
lcall
jmp
jbe
cld
and
test
add
rcl
movsl
call
into
mov
cmp
jle
inc
add
add
cmpsl
push
add
cmp
add
add
add
pop
mull
add
aam
stos
test
and
pop
popa
and
int3
in
cld
adc
mov
arpl
enter
add
jp
pop
xchg
test
outsb
add
add
xchg
arpl
imul
cmp
pop
push
add
and
mov
add
add
fistps
push
add
jl
andb
sahf
dec
rorl
insl
sub
ret
fs
mov
lcall
jb
call
add
sbb
pusha
add
add
test
ficoml
cmp
pop
test
int3
mov
add
or
pop
push
xchg
cmpsb
inc
sub
outsb
add
inc
jecxz
ret
xchg
fsubs
push
pop
add
in
push
add
loop
pop
add
add
sti
or
inc
aad
add
das
xlat
lahf
ret
mov
nop
test
or
das
cmp
cmc
dec
add
scas
xchg
inc
xchg
roll
dec
add
mov
subb
add
cmpsb
sbb
aad
add
pop
add
lahf
mov
mov
mov
imul
mov
add
sub
pop
add
ja
add
jl
xor
jecxz
add
mov
icebp
dec
add
into
sbb
bnd
add
lcall
xchg
lds
add
add
imul
inc
add
add
inc
mov
add
aam
add
dec
cmp
jl
ret
mov
pop
add
cmp
add
add
xchg
std
push
add
dec
add
inc
add
in
push
xor
das
pop
lahf
mov
fcmovu
mov
scas
cmp
imul
adc
xor
inc
add
add
add
add
add
add
add
iret
int3
ret
inc
repnz
adc
fiaddl
add
cmp
cmpsl
add
stc
mov
lds
add
add
adc
addb
int3
xchg
aas
jne
pop
dec
rcrl
add
and
sbb
fimull
pop
int
jmp
xor
add
add
xchg
jle
adc
lcall
in
in
dec
push
add
xchg
push
add
std
cmp
add
sub
push
add
ds
dec
add
inc
add
push
add
add
mov
add
sub
push
add
test
jne
xlat
cli
lods
push
add
or
mov
stos
cmc
out
out
cmp
mov
xor
mov
cmp
mov
add
imul
inc
add
xchg
les
sub
enter
pop
add
add
mov
add
pop
add
add
adc
mov
cmp
jl
add
cmp
add
insl
lahf
sub
fsubrl
add
inc
push
add
add
insb
add
push
add
mov
scas
subb
add
stos
aaa
je
add
xchg
mov
add
pop
into
mov
xchg
pop
add
pop
icebp
and
mov
add
jmp
add
ja
loopw
jbe
cmc
lahf
sbb
sbb
das
int
cmpsl
and
je
xor
fldenv
sbb
nop
std
test
sub
add
xor
and
cmpsl
sbb
add
ret
add
or
add
sub
test
jp
mov
lods
or
sbb
incl
insb
add
jge
add
or
popf
sti
mov
add
jbe
xchg
roll
xor
js
sub
mov
stc
lret
shlb
movsb
mov
add
add
stc
out
shl
adc
ja
add
mov
lds
cltd
add
out
je
arpl
imul
mov
mov
lock
fdivl
adcl
fsubs
add
add
addl
add
jmp
movsl
or
add
add
jle
dec
test
cld
mov
add
lret
jnp
add
fildll
add
add
add
inc
scas
cmpl
cmp
push
out
xchg
jle
ljmp
add
lods
inc
add
fdivrl
pop
add
rclb
add
add
cmp
add
movsl
in
push
jns
pop
xchg
cmpsl
mov
sbb
dec
dec
sbb
mov
mov
sub
add
inc
pop
add
add
add
cmpsl
sahf
pop
add
add
mov
mov
add
add
add
jge
add
mov
add
add
add
push
add
add
adc
sbb
out
add
es
and
jne
xchg
pop
testb
add
cmpsb
push
adc
dec
xor
icebp
push
out
popa
cwtl
and
js
in
push
pop
add
shrb
mov
into
add
adc
or
cmpsl
mov
mov
push
add
add
add
add
add
add
add
imul
insb
add
loop
dec
push
add
add
hlt
call
xchg
add
xchg
enter
push
add
cmpsb
mov
and
clc
xor
int
add
idivb
dec
add
add
andl
or
add
jne
sub
imul
xchg
mov
jno
inc
mov
add
add
add
inc
add
push
add
or
mov
cwtl
cmp
xor
int
xchg
sarl
add
add
inc
add
add
sbb
rorb
add
cltd
aaa
daa
and
add
add
push
add
push
add
jae
mov
xchg
pusha
add
add
loopne
cmp
jmp
push
add
add
add
add
outsl
loopne
mov
and
bound
stc
in
add
shrb
add
popa
lods
mov
cmp
sahf
sub
jbe
sub
sbb
mov
outsl
jb
fiadds
mov
jmp
add
sub
lcall
shll
sub
mov
mov
mov
data16
cmpsb
push
push
es
pop
add
add
or
sti
and
mov
dec
add
add
xor
andb
mov
sbb
jbe
mov
leave
mov
jbe
dec
cmc
inc
add
shr
movsb
cld
xchg
and
js
mov
stos
imul
mov
call
lods
cld
or
repnz
xchg
inc
jl
sbb
pop
sti
mov
sub
add
movsl
mov
add
test
add
aam
in
bound
adc
jge
ret
out
mov
add
loop
outsl
sbbb
pop
add
sub
push
mov
sub
cmp
gs
out
jp
insb
add
rolb
in
imul
add
mov
add
inc
iret
ficompl
jge
add
test
mov
push
imul
push
add
lock
jno
add
add
sbb
lock
pop
add
jo
fdivs
push
nop
pop
add
xor
ficompl
jmp
mov
jae
dec
cmc
aas
xchg
call
lea
add
dec
add
stos
cmpsb
loop
add
sub
sbb
daa
imul
sub
and
jmp
imul
rdtsc
test
ja
sub
push
add
lret
and
add
pop
add
addr16
xor
hlt
cs
dec
nop
inc
and
add
add
shrl
add
add
out
int3
jnp
add
outsl
xorb
add
stos
outsb
add
xchg
scas
mov
mov
mov
les
stos
sarb
add
or
cmc
icebp
dec
add
stc
out
mov
mov
inc
sahf
pushf
lahf
test
aam
push
add
lock
jnp
pop
add
add
inc
insb
add
outsb
add
lea
cwtl
add
shll
test
dec
xlat
mov
addr16
insl
jge
add
das
jecxz
inc
add
jb
test
test
ret
add
mov
xchg
add
sbb
xor
sub
cmp
lret
jp
push
outsb
add
insb
add
cld
outsl
ljmp
jg
add
sbb
pop
add
les
mov
add
add
add
int3
pop
add
add
cmpsl
gs
xor
jecxz
add
push
add
jle
inc
add
mov
xchg
xchg
outsb
add
shlb
add
and
mov
or
adc
add
in
cmpsb
outsl
or
add
or
repz
popa
fnstenv
loopne
adc
jp
push
add
cwtl
adc
add
insb
add
jge
sbb
lret
shr
movsb
movsl
xorl
dec
add
gs
imul
add
sub
add
pop
add
mov
and
mov
test
addr16
xchg
mov
pusha
add
add
jg
test
add
mov
pop
lret
add
add
gs
add
add
adc
cmp
repnz
cmpl
mov
mov
lcall
testl
cld
test
mov
add
jecxz
add
out
pop
xchg
rcrb
add
add
add
mulb
jne
cmp
test
orb
add
lods
pop
data16
rcrb
xchg
or
mov
cmp
mov
sub
add
pushf
jl
into
xor
lods
cld
icebp
push
add
add
lock
add
nop
out
pop
add
aas
mull
add
sbb
inc
add
lock
iret
imul
add
cld
ret
stos
cmp
out
xchg
inc
cmpsb
dec
add
jecxz
add
loope
out
add
add
js
negl
lock
add
mov
add
add
add
jecxz
cld
inc
xchg
cmp
gs
cmp
push
je
sbb
movsl
and
cmpsl
mov
imul
mov
fs
ja
add
and
add
test
mov
out
add
mov
cmp
leave
xchg
sti
jecxz
pusha
add
ror
sub
inc
cwtl
cmp
in
mov
fiadds
add
add
fnstenv
xchg
pop
xchg
orl
inc
add
add
push
add
add
cld
jp
aad
movsl
lret
daa
sbb
cmp
into
mov
add
add
add
push
notb
ds
push
add
ficoms
dec
add
fstp
inc
add
inc
add
add
add
and
outsl
add
popf
inc
add
add
jle
mov
sub
add
stc
xchg
add
adc
add
lods
pusha
add
add
xchg
dec
add
add
fs
aas
lock
jl
loop
ret
push
mov
cmpsb
mov
add
call
mov
fidivl
add
sbb
add
mov
jo
lret
fisttpll
add
add
clc
lods
add
pusha
add
mov
add
inc
or
add
add
add
add
add
add
xor
lahf
clc
inc
orl
pop
add
add
adc
ljmp
mov
add
add
add
ja
add
jp
test
aam
jb
cmpsl
push
arpl
repz
add
popf
lds
sbb
adc
push
add
data16
dec
cmp
out
int3
iret
sub
xchg
xlat
sti
adc
jne
add
sbb
nop
mov
in
fdivs
cmpb
push
pop
add
mov
movsb
fsubl
and
pop
add
jns
add
pop
lods
xor
mov
or
mov
add
add
push
add
add
jb
push
add
mov
inc
sbb
jl
lea
sub
push
add
add
ljmp
add
add
insl
add
mov
mov
add
inc
adc
add
ljmp
push
fsubrs
add
in
js
sub
mov
shrl
mov
ja
add
leave
call
add
add
int
add
add
sub
cmp
sub
add
adc
xor
xchg
lret
and
testb
adc
imulb
add
jmp
inc
add
add
imul
add
push
add
add
adc
mov
mov
lcall
and
add
xchg
pcmpgtd
push
bnd
xor
cld
sbb
mov
bound
push
add
ljmp
add
push
or
sub
mov
stos
adc
push
xlat
jge
cmp
mov
push
add
jp
push
add
add
xchg
mov
mov
add
orb
dec
add
popa
sbb
adc
pop
add
inc
inc
add
push
add
cmp
sub
fildl
test
add
cwtl
xor
sbb
inc
shlb
cmpsl
pop
add
sub
sub
shlb
movsb
rol
test
cmp
pop
js
sub
mov
xchg
adc
sbb
adc
pusha
add
bound
xor
ret
js
and
jge
mov
fnsetpm(287
movsb
fdivrs
xchg
fcmovnb
add
and
sub
add
jp
sbb
xor
adc
rcrb
les
das
movb
push
add
add
pop
add
pop
das
hlt
add
mov
clc
or
fiadds
add
cmpl
add
add
cmp
xorb
stos
xor
push
lea
inc
shll
add
inc
mov
lea
cmc
iret
pop
nop
lods
mov
jne
add
icebp
jae
add
out
aad
adc
add
movsl
into
add
xchg
dec
add
cmp
int3
inc
add
fsubl
bound
dec
jp
mov
add
lds
daa
fisubrl
xchg
add
test
add
mov
nop
xchg
sbb
and
push
lret
xchg
test
mov
mov
xor
nop
xchg
scas
jb
inc
add
xchg
les
fwait
hlt
jg
nop
xchg
cwtl
das
push
or
or
popl
jg
xchg
test
add
add
fs
hlt
in
pop
add
fwait
out
push
add
mov
dec
std
push
pop
call
jne
push
add
add
dec
add
fidivl
xor
jl
jg
cltd
int
add
pusha
add
test
mov
pop
add
add
push
add
dec
mov
jle
ret
jg
add
jo
out
add
and
in
and
push
add
pop
popa
cli
or
andnps
sub
pop
add
xchg
je
repnz
divb
xchg
sub
loope
lods
loope
inc
jl
push
add
cwtl
mov
xor
mov
sbb
add
dec
add
mov
xor
add
stos
push
xor
je
mov
adc
xor
and
ljmp
jge
adc
out
mov
jbe
sbb
sub
mov
add
jo
or
lock
pop
add
add
addr16
add
jmp
adc
jmp
add
mov
cmp
xlat
push
add
pop
ja
add
dec
movsl
inc
add
add
shlb
push
add
sbb
xor
clc
inc
add
cmc
dec
in
sub
rorb
mov
cs
xchg
cltd
dec
pop
xchg
inc
add
lods
push
add
sbb
aaa
aas
sbb
negb
pop
add
push
push
add
popa
fistl
loope
jno
femms
add
lds
add
add
add
rolb
sti
data16
push
xchg
cmp
cli
cmp
stos
mov
dec
add
push
dec
add
add
cli
adc
data16
rorb
mov
sbb
dec
add
add
cmp
arpl
les
add
repnz
add
add
cld
sbbl
adc
push
add
add
enter
pop
add
or
jne
fwait
rol
add
add
add
lods
cwtl
cmpsl
inc
dec
add
add
ljmp
pop
pop
adc
iret
dec
into
mov
cmpl
shlb
push
mov
add
add
iret
inc
or
pop
add
cld
loopne
mov
add
leave
test
mov
rcll
and
sub
or
movsl
aam
mov
aad
inc
repnz
add
xchg
sbb
sub
aad
test
sub
shrl
add
sti
iret
hlt
sub
in
add
arpl
aad
inc
add
push
add
add
add
dec
sub
sbb
adc
add
mov
push
clc
lret
mov
xor
cmp
add
add
inc
xchg
push
stos
mov
mov
jle
dec
pop
add
inc
add
lret
add
leave
adc
mov
adc
out
add
mov
out
add
sbb
add
add
add
pop
lret
lds
push
add
add
insb
add
in
adc
add
int3
daa
dec
add
std
push
add
scas
imul
insl
pop
js
push
add
andb
add
add
add
and
mov
add
push
add
add
lock
push
add
add
negl
sbb
mov
rcrb
pop
mov
push
add
add
aad
scas
lods
out
add
mov
mov
add
fcomi
frstor
add
push
push
add
ja
dec
dec
add
lds
jns
add
bound
mov
data16
lea
add
idivl
push
add
dec
add
pop
pusha
add
movsb
mov
out
out
adcl
add
add
dec
mov
xchg
sti
stos
aas
push
add
jbe
and
add
add
add
add
add
