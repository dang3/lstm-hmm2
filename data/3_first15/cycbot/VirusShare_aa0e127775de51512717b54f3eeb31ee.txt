mov
jo
outsb
in
xor
add
imul
mov
lods
fs
frstor
add
inc
add
or
int3
sbb
int3
mov
cmpsb
push
mov
out
insl
cmc
mov
ret
out
jecxz
mov
cmc
xchg
dec
icebp
xor
cmc
leave
cmpsl
or
sti
mov
add
or
fdivrl
bound
cmp
mov
pop
aaa
call
pop
mov
jmp
xor
std
inc
mov
in
and
inc
dec
pop
and
lcall
aad
daa
mov
pop
xor
xchg
add
lods
out
xor
movsl
rolb
loopne
xor
addl
push
xchg
jecxz
sub
pop
jg
ja
test
mov
sbb
lock
inc
xchg
cmp
test
mov
jge
inc
add
push
shll
add
popa
js
add
cmp
add
ss
cs
dec
push
adc
movsb
sub
pop
mov
jg
movsb
loopne
mov
inc
adc
push
in
jns
mov
sbb
in
mov
data16
jle
jae
inc
pushf
push
ret
xchg
mov
lcall
and
sbb
fcoml
test
xor
shrb
dec
cmp
xor
out
adc
fldl
or
xchg
push
sub
add
and
fdivr
out
xor
jmp
in
in
dec
jno
lcall
mov
add
das
test
imull
jg
addb
add
cmc
and
adc
arpl
and
aaa
stos
jmp
stc
dec
sahf
inc
add
ja
in
repnz
add
or
lock
add
and
pop
add
mov
add
cli
call
add
rcr
leave
out
out
dec
adc
sub
and
cli
stc
jnp
mov
mov
insb
decb
je
jno
add
add
pop
popa
movsb
lcall
shl
js
push
mov
jb
xchg
nop
add
xchg
dec
pop
testb
and
sub
jo
mov
adc
push
push
test
lcall
cmp
hlt
or
add
push
add
add
ret
fwait
jno
mov
or
mov
push
add
in
dec
ja
mov
dec
lds
sbb
popf
inc
pop
imul
dec
cmp
outsl
mov
into
xorl
cmp
or
inc
add
divb
jno
enter
sar
adc
mov
repz
ja
mov
jo
push
mov
lods
int3
int3
lods
pusha
add
flds
fidivrl
dec
mov
push
add
lret
xchg
nop
movsb
rclb
lcall
in
cmp
or
test
loop
es
sbb
in
xor
sahf
sti
lcall
jmp
bound
xchg
sbb
mov
add
lcall
pop
loop
jmp
pop
sahf
mov
fimuls
jge
mov
mov
lea
movsl
pop
jns
xor
shlb
fdivrs
jecxz
mov
add
adc
addb
mov
fwait
push
mov
jp
popa
lret
jne
xchg
pushf
popa
adc
sbb
add
adc
sub
push
add
fldenv
das
xlat
dec
mul
xchg
dec
cmp
dec
outsl
outsb
in
cmp
inc
and
push
sub
add
xchg
fisubrs
xor
iret
mov
es
jnp
jo
js
std
addb
xor
bound
ficompl
notl
jmp
jns
inc
fisubrs
aam
jns
arpl
or
dec
in
fistpl
fdivs
jb
xor
in
mov
insb
jb
loope
rolb
add
push
es
sub
add
dec
sbb
or
adc
rolb
adc
jbe
call
mov
add
xchg
or
movsl
shll
into
icebp
dec
into
out
mov
add
push
stos
sub
push
pop
movsb
nop
dec
loop
xchg
pop
xchg
add
je
push
mov
dec
mov
xchg
mov
das
jle
mov
add
fldenv
xchg
pop
mov
xchg
mov
dec
in
push
fsubr
push
bound
popa
pop
fimuls
xchg
add
xchg
dec
push
fsubs
add
xchg
pop
pop
sti
insl
mov
cli
push
pop
pop
pop
sbb
xchg
es
add
into
repz
das
adc
or
aas
mov
mov
out
mov
push
and
add
cli
dec
xor
aad
fs
inc
add
sbb
out
push
ficoms
sbb
cmpsb
xchg
and
xor
add
pushf
cmp
add
mov
inc
notl
lock
push
out
insl
jmp
fisttpll
xor
mov
or
mov
into
lea
gs
je
jecxz
inc
xchg
mov
loop
leave
mov
add
push
clc
gs
pushf
popf
into
int
popa
in
inc
aaa
and
push
xor
adc
fldcw
and
dec
lahf
bound
push
aaa
push
add
sbb
lods
xchg
lahf
stos
cmp
insl
addr16
add
sarl
aas
pop
mov
mov
jl
push
sub
xchg
dec
jno
pusha
add
negl
xor
addl
pop
jae
into
push
jne
and
pop
dec
enter
add
cld
lret
cltd
sub
pop
int
mov
mov
add
ss
pop
sub
cld
das
and
mov
ficompl
mov
mov
lods
and
or
imul
cltd
inc
add
add
sbb
cmp
add
div
pop
mov
jle
out
mov
xor
cmp
and
jmp
stc
call
add
jp
adc
jmp
mov
shrb
into
cs
rcr
push
mov
enter
mov
dec
push
mov
jge
fcompl
dec
bound
jle
popa
int3
mov
add
sbb
and
testl
jp
dec
fmull
mov
stos
sbb
push
in
sub
pop
out
push
out
pop
xor
mov
lods
jno
adc
int
mov
and
add
cs
jne
xchg
mov
cmp
in
mov
lret
fs
inc
add
add
mov
push
xchg
inc
add
pop
adc
ret
jmp
repz
nop
pop
sbb
mov
jb
pop
xchg
leave
imul
idiv
push
sahf
call
lds
add
jo
or
fwait
mov
xor
add
or
inc
cmp
dec
mov
imull
and
stos
test
xchg
push
add
dec
adc
in
ss
jnp
dec
add
sub
stos
push
mov
mov
out
mov
add
mov
dec
and
data16
push
mov
and
pop
in
inc
add
mov
push
inc
jg
dec
aaa
cwtl
mov
mov
xchg
addb
jns
jnp
sbb
pop
enter
call
addb
hlt
jae
add
in
repnz
cmpl
push
mov
addps
ja
lods
out
inc
adc
xor
push
shlb
add
inc
add
incb
mov
jno
cmp
outsb
dec
mov
addr16
nop
out
xor
push
out
in
add
scas
scas
cltd
xor
sahf
cld
dec
jnp
negb
filds
or
loopne
pushf
sbb
pop
sub
icebp
clc
push
daa
fistl
jge
inc
add
aam
daa
sahf
inc
add
jl
out
pop
inc
add
icebp
ds
add
addb
dec
hlt
out
das
lods
push
cmp
jp
and
mov
jp
and
add
jge
pop
lea
movb
add
and
dec
lret
mov
stos
xchg
jg
or
mov
and
faddl
clc
idivl
movsl
cmp
add
int
sbb
push
popf
sahf
lock
rol
add
jbe
out
xchg
mov
rcll
lret
bound
fistpl
popa
pop
and
shl
jno
cmp
test
lods
in
or
add
jae
lods
inc
add
movsl
inc
stos
xor
inc
testl
sbb
clc
imul
mov
cli
or
pop
dec
movsl
pop
or
add
xor
xchg
push
add
and
scas
lret
jp
ljmp
cmp
or
stc
xchg
mov
sbb
inc
scas
add
jnp
xchg
loope
std
or
in
add
xor
xchg
mov
mov
mov
xlat
jnp
repz
add
xor
inc
add
mov
aam
push
scas
in
add
xchg
cld
pop
jo
adc
pop
dec
dec
or
insl
nop
mov
mov
add
fmuls
mov
pop
cltd
mov
pop
push
mov
lahf
cmc
pop
jecxz
add
fstpt
sub
push
inc
hlt
fadds
leave
mov
lds
xchg
mov
cmp
jae
add
aad
movb
inc
cmp
adc
inc
add
insl
cwtl
outsb
lods
inc
add
cmp
test
mov
xchg
push
inc
mov
in
cs
add
jno
sbb
jg
nop
cmp
push
filds
insl
lock
imul
add
pop
popa
push
ljmp
pop
addr16
cs
sub
outsb
fdivrl
nop
dec
out
mov
scas
adc
stos
sub
negl
test
and
cld
movsb
addb
rolb
sbb
jnp
sbb
cwtl
mov
in
inc
add
outsl
sub
adcl
sti
mov
movb
jmp
add
and
push
pushf
imul
sbb
jmp
daa
cmp
xlat
cmp
or
dec
jne
in
add
iret
fnstsw
add
add
int
push
xor
jp
cli
fldenv
mov
mov
push
add
test
jp
daa
data16
xor
push
ljmp
cmpsb
xor
and
xchg
lret
jbe
lods
sub
adc
jne
inc
add
out
or
push
lea
pop
loope
fisubl
xor
rolb
mov
jl
mov
out
add
decb
in
movsb
lock
mov
aad
enter
cwtl
andl
ss
das
mov
sub
add
cs
push
push
aam
mov
and
cld
push
jb
pop
pop
pop
mov
cmc
insb
rorl
insb
jne
test
dec
cwtl
mov
xchg
and
out
fs
cli
in
sub
jb
ds
je
mov
cmp
pusha
add
rolb
push
xchg
insb
pop
jbe
mull
sub
divb
add
add
adc
push
inc
push
out
lea
inc
add
jb
sbb
add
jbe
jae
cmp
mov
arpl
sub
add
add
lods
or
addb
test
adc
enter
mov
dec
and
dec
adc
test
hlt
sub
imul
les
pop
mov
test
loop
sub
fs
fcmovnb
inc
add
fldcw
mov
popa
clc
hlt
popf
push
movsl
inc
popa
inc
jge
or
and
hlt
je
cwtl
cmpsl
or
cmpsl
repnz
cmpsb
inc
imul
xor
stc
fimuls
hlt
xchg
push
and
dec
sbb
scas
das
ss
jmp
jecxz
dec
out
inc
mov
mov
mov
sbb
fmull
and
fisubrs
xchg
ds
pusha
add
mov
fistps
xchg
jp
jmp
jbe
lods
in
or
or
cld
aaa
push
mov
sub
insb
das
in
inc
leave
sahf
out
dec
mov
xchg
cli
sub
push
jg
pop
dec
jp
mov
pop
xor
or
and
jne
sub
xchg
loop
cmc
sub
mov
add
loop
or
mov
outsb
dec
loop
mov
push
roll
and
mov
loopne
mov
aam
fcomp
pop
mov
mov
in
in
add
dec
repz
test
or
add
faddl
jb
mov
loope
mov
out
into
adc
add
xor
fistl
sub
and
cmpsl
jae
test
movb
cmp
stos
inc
dec
xor
pop
and
sahf
ret
aas
mov
sbb
pusha
add
sub
addb
inc
leave
rcrl
push
or
mov
int
xchg
mov
movb
int
cli
les
xchg
lret
mov
test
lcall
mov
sub
push
and
adc
out
push
pop
lods
cmpsl
add
mov
xchg
loope
sub
comiss
add
mov
addb
add
nop
rorb
push
xor
inc
shr
cmpsl
pusha
add
repnz
inc
or
pop
push
xlat
push
pusha
add
mov
sbb
in
adc
ficompl
mov
mov
cmc
lahf
ret
in
jb
cld
into
outsb
jae
push
repz
call
ljmp
out
sbb
mov
add
shrl
das
mov
lds
pushf
loop
push
ljmp
mov
and
cmc
cmp
xchg
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
lret
add
add
jno
inc
in
inc
add
push
inc
cs
aaa
add
aad
or
inc
mov
add
test
and
mov
xchg
es
scas
cmp
mov
add
inc
fcmovnb
add
cmpsb
in
add
jno
add
les
xlat
push
add
scas
push
mov
lret
cmpl
dec
jne
outsb
adc
stc
pop
bound
imul
mov
std
inc
fsubr
cltd
clc
fildll
cmp
in
fwait
in
xchg
fwait
mov
cmp
stc
and
mov
xor
into
rolb
add
push
flds
cmp
xor
cmp
dec
in
mov
sarl
cmp
xor
ret
jnp
cmp
xchg
xchg
jae,pt
scas
pop
mov
jmp
dec
xchg
ljmp
pop
xchg
pop
fnsave
pop
xor
sub
jg
inc
mov
testl
call
cli
outsb
push
into
adc
inc
add
push
and
mov
push
jge
ja
in
jl
in
and
cmp
insl
fldcw
cmpsl
in
shl
pop
sub
fld
add
or
into
inc
add
popa
in
cmp
bnd
xchg
popa
das
push
jnp
outsb
notl
and
mov
cmp
mov
add
or
pop
and
call
add
jl
inc
rolb
mov
push
jnp
ret
ss
fldl
adc
insb
lea
jbe
add
leave
push
cmp
stos
pop
sub
add
lahf
insl
loope
cld
sub
ja
and
lds
bnd
mov
rcr
sbb
xchg
je
mov
repnz
cltd
mov
aad
push
mov
add
adc
add
push
add
enter
cs
add
adc
pop
jnp
sti
cmpsl
insb
repnz
jmp
shrb
incl
push
pop
sub
cmp
pusha
add
dec
inc
add
fcmovbe
out
fsubl
int
add
inc
add
ret
xor
mov
xor
call
adc
test
pop
or
xchg
lret
xorl
add
dec
psubw
add
sub
in
lock
pop
stos
lock
jnp
push
cmpsb
xor
sub
jl
pushf
test
dec
repz
outsl
xchg
pop
stc
push
jp
aad
movb
shrb
ds
ret
xor
sbb
mov
add
roll
fdivs
and
inc
add
cli
xor
ja
das
lret
add
pop
inc
add
pop
push
and
mov
cmc
jns
xchg
mov
imul
jmp
inc
clc
in
gs
push
push
inc
add
test
mov
inc
add
dec
xlat
test
dec
fs
stos
fstl
aaa
shrl
ja
push
jecxz
je
and
pop
inc
add
add
es
cmc
call
add
fdivl
fxch
iret
fwait
addb
inc
test
jp
sti
mov
lret
ret
test
xlat
movsb
sub
sub
xor
add
lock
push
decl
fs
or
pushf
or
addb
add
mov
or
and
lods
push
mov
xchg
pushf
cmp
add
sub
data16
hlt
push
lds
lods
sbb
mov
in
ljmp
jno
inc
push
mov
cmp
popf
sbb
push
jmp
add
xchg
inc
je
xchg
clc
leave
sub
imul
and
movsb
sub
push
cmp
add
mov
inc
add
sbb
pop
mov
ss
adc
or
outsl
scas
push
push
pop
inc
gs
add
jnp
addr16
add
rolb
jo
insb
addr16
cmpsl
js
push
andl
or
les
jae
cmc
jae
cwtl
mov
pop
lds
add
sbb
sbb
rorl
mov
cmc
dec
cs
and
sbb
xchg
jmp
fdivs
sarb
mov
add
pop
je
fisubrs
test
add
in
jno
jge
stc
xor
out
cmp
das
fmull
pop
mov
ret
mov
jne
and
xor
addr16
mov
out
add
scas
imul
pusha
add
xchg
pop
fcmovu
mov
xchg
rol
push
mov
mov
push
outsb
ficompl
in
dec
jnp
daa
mov
adc
sbb
fidivs
xor
pusha
add
add
dec
pop
mov
or
inc
cmp
aaa
push
shrl
dec
jbe
jno
es
xor
pop
xchg
add
fadd
add
add
and
cmp
pop
mov
add
iret
xchg
pusha
add
pop
int
pop
dec
ja
add
insb
das
or
sbbl
pop
je
stc
sarl
add
add
xor
loope
pop
outsb
pushf
or
hlt
ret
add
add
push
pop
pop
pusha
add
inc
out
lods
push
cmpsl
lcall
xchg
add
out
cld
xorl
pop
pop
mov
push
or
pop
jge
push
stos
enter
hlt
mull
mov
sti
stos
movsl
cmpsl
mov
lods
inc
add
mov
movsl
into
dec
sub
add
xor
addr16
adc
aam
inc
add
push
push
and
lds
xor
sub
rolb
sar
push
aam
or
cwtl
mov
insb
jne,pt
pushf
xchg
outsb
data16
cld
mov
fldl
add
mov
add
mov
aam
jns
xchg
jmp
stos
js
loopne
clc
in
inc
add
rolb
or
jmp
lods
movsb
push
xchg
rcrb
pop
push
adc
fldcw
andl
push
addb
lods
jge
push
movb
push
fmul
dec
xor
add
je,pn
push
push
add
hlt
adc
xchg
and
add
sbb
add
rclb
xor
addb
cmp
ret
mov
hlt
jno
pop
subl
pusha
add
sbb
pop
jb
add
xchg
cmp
nop
das
nop
adc
xor
outsb
xchg
inc
add
add
int
out
pop
leave
adc
add
ja
push
jae
add
enter
xchg
mov
add
dec
ficompl
or
pop
iret
xor
mov
addb
lds
dec
jae
in
inc
add
push
xlat
sbb
lds
add
mov
stc
mov
das
jl
mov
jmp
inc
add
fnsave
outsl
sbb
div
imulb
adc
test
dec
sub
sbb
xchg
les
adc
push
mov
push
bnd
fidivl
inc
xor
push
push
jg
insb
xor
sub
add
xor
js
mov
inc
add
pop
ret
icebp
rcll
lcall
cmpsb
les
ja
jmp
hlt
push
test
out
jmp
push
mov
jns
cltd
rorl
pop
sub
mov
lcall
ret
jnp
aad
inc
loopne
pop
pop
add
lods
jae
lea
sbb
add
scas
cmp
add
fcomp
adc
pusha
add
pusha
add
ds
test
mov
or
adc
mov
push
add
frstor
enter
pop
repnz
cmpsl
stos
jb
outsb
inc
mov
inc
add
xchg
pop
hlt
test
lret
pop
enter
rdmsr
cmpsl
clc
leave
pop
rolb
call
rolb
and
pop
sub
mov
fiadds
dec
sub
push
in
push
mov
jb
mul
dec
cmp
outsb
repz
pop
pop
mov
ja
popf
inc
add
jle
add
outsl
rorl
add
fsubrl
imul
out
inc
mov
ds
push
sahf
in
or
add
fs
ljmp
and
pop
stos
cs
scas
lret
mov
je
mov
lret
ret
mulb
iret
rclb
jg
data16
xor
mov
and
loop
add
adc
xor
bnd
jle
mov
loopne
repnz
add
or
dec
push
shlb
cltd
mov
pusha
add
jle
pop
mov
xchg
std
xor
pop
lea
testl
xchg
loope
inc
add
lods
in
int3
jae
push
decb
or
ljmp
ljmp
xor
push
sub
rep
fidivs
insl
movb
add
and
hlt
pop
or
push
or
imul
lock
out
push
add
jo
mov
push
std
clc
adc
and
ljmp
add
xchg
fcomp
mov
mov
fsts
add
jae
pop
iret
rolb
add
or
xlat
testb
outsl
pushf
push
lds
mov
xchg
adc
dec
adc
or
loope
addb
add
lea
jne
push
dec
or
or
push
pop
out
add
bound
hlt
mov
jp
sbb
xchg
pop
xchg
cmp
mov
ds
fmull
lcall
lret
sub
negb
add
and
sarb
dec
rolb
add
cmp
mov
jno
jo
jp
int
cmp
push
add
mov
cmp
mov
icebp
or
dec
xlat
aad
cmp
mov
addb
xchg
cmp
jp
add
add
pop
addb
sbb
cmp
fdivr
push
mov
and
popf
push
jg
repz
sbb
scas
or
js
inc
ss
mov
sbb
fs
mov
xor
mov
adc
or
js
add
push
mov
test
stos
mov
dec
cmpsb
psrld
outsl
push
add
bnd
or
pop
lcall
jno
sub
pop
cli
mov
dec
inc
add
popf
xchg
std
jge
sbb
iret
stc
js
cld
xor
insb
dec
test
add
xor
mov
sarb
daa
jne
sub
and
loopne
xchg
pop
sti
mov
pushfw
mov
sbb
out
in
jecxz
mov
in
cltd
xor
inc
lods
xchg
ret
pop
popf
stos
in
mov
and
add
lods
jl
push
push
push
push
mov
dec
add
pop
mull
sbb
stos
dec
xchg
notl
push
gs
lock
pop
pop
fwait
inc
add
fildl
rclb
mov
sub
sahf
sub
push
aam
pop
rcll
xor
sub
inc
add
mov
mov
or
xor
gs
cmp
repz
repz
push
inc
add
lret
jns
cltd
lock
sub
fnsave
mov
ret
inc
in
les
ss
mov
lods
dec
imul
add
aaa
cmp
sub
ljmp
leave
inc
or
lods
shll
dec
pusha
add
inc
add
mov
mov
imul
addb
add
add
add
add
pop
ret
sbb
push
mov
arpl
dec
popa
rorl
push
mov
stos
loope
cmpsb
push
fsubl
in
lods
fs
sbb
mov
pop
and
in
xor
mov
gs
pop
cmpsb
jns
imul
addb
jne
insl
mov
mov
lock
push
mov
fistl
cmp
nop
push
jg
jae
pop
daa
pop
mov
outsb
pop
mov
stc
mov
orl
mov
aaa
leave
lea
addb
xor
into
inc
add
sbb
test
cmp
bound
outsl
cli
push
mov
lods
xchg
jmp
add
addb
cld
and
cwtl
mov
outsl
jle
xor
sbb
mov
test
push
and
sbb
xchg
ja
jmp
fdivs
lea
push
or
push
daa
push
adc
add
sub
mov
sub
jbe
sahf
jp
paddsb
not
mov
add
mov
das
adc
out
xor
std
xchg
movsl
mov
in
cli
enter
cld
fwait
adc
gs
adc
sahf
adc
shlb
cltd
cs
add
mov
lcall
outsb
ret
inc
add
sahf
in
adc
aad
out
mov
fstpt
into
and
pop
ss
and
clc
sbb
adc
in
fisubrs
nop
stos
xchg
call
cltd
add
xchg
in
movsb
cli
or
imul
int
mov
insb
incl
ds
cld
or
push
add
fstl
inc
sbbl
push
addr16
mov
jg
scas
mov
in
push
add
popa
ljmp
stc
imul
push
enter
ja
sbb
lahf
push
sub
push
sbb
sbb
xchg
test
sarl
or
das
or
push
add
dec
xlat
adc
xor
dec
insb
and
mov
cmp
cld
out
insl
clc
repz
std
pop
into
xor
fwait
or
add
inc
adc
ret
pop
pop
mov
rolb
test
shll
add
xor
test
add
or
and
add
sub
add
daa
jo
and
cltd
sbb
jb
lahf
sbb
cli
mov
lods
lock
out
cmp
fdivrp
lcall
pop
sub
add
stos
and
add
dec
push
push
push
push
enter
xchg
cmpsb
adcl
xor
outsb
push
jg
sbb
out
loopne
rolb
fisubrs
xor
sub
jne
inc
lods
cwtl
inc
pop
pop
xchg
xlat
insb
or
xchg
fldt
xor
daa
fcompl
sbb
cld
pop
and
xlat
dec
xchg
adc
ljmp
add
cmp
rcl
mov
add
cld
mov
or
add
lret
push
inc
add
nop
add
and
ret
jmp
mov
cmp
into
push
mov
add
out
inc
cmpsl
sbb
jle
mov
push
jae
add
dec
or
mov
add
icebp
lret
pop
les
ss
sahf
sub
rep
or
iret
js
add
mov
inc
and
and
sub
hlt
add
addb
ljmp
bswap
arpl
fimull
adc
cmp
in
stos
cwtl
and
jno
add
mov
xchg
inc
add
stos
pop
imul
test
cmc
xlat
es
cmp
jo
out
std
std
xchg
mov
dec
dec
xchg
cmc
mov
inc
add
aaa
lea
sub
adc
xchg
test
inc
add
sub
adc
test
pop
cli
lds
negb
pop
je
mov
mov
add
dec
add
mov
ds
movsb
out
pop
add
mov
icebp
in
lods
push
dec
push
nop
nop
lcall
addb
hlt
into
dec
jmp
inc
add
hlt
xor
adc
hlt
dec
or
out
jge
push
in
lock
andl
shlb
lods
cmp
xlat
ja
test
push
arpl
inc
add
and
jb
clc
xchg
add
pop
pop
add
adc
mov
or
add
xor
add
cmp
add
mov
mov
pop
or
fildll
fs
nop
add
mov
mov
xor
in
sahf
inc
xchg
push
push
sbb
idiv
push
sbbl
mov
iret
cmp
and
jno
out
and
out
cmp
loop
mov
lods
sub
xor
aas
xchg
xchg
cs
mov
hlt
test
fidivrs
inc
add
int
stos
int3
jns
cmp
adc
gs
les
cmp
or
push
add
rol
add
into
xor
mov
jge
pop
insb
mov
in
roll
lea
jmp
repnz
stos
jns
lock
add
add
loop
mov
bnd
pop
xchg
inc
mov
sahf
push
dec
rorl
cmp
jae
pop
push
add
cmpsb
dec
inc
add
mov
dec
addb
aaa
mov
add
shll
cmp
mov
aam
scas
pop
xchg
add
popf
movsl
jp
mov
lret
test
insb
dec
ja
and
mov
addr16
fildl
movsb
test
mov
dec
push
jmp
cmpsb
shl
pop
xchg
mov
scas
mov
and
sub
xor
ret
and
mov
adc
add
xor
push
je
mov
adc
mov
js
cmp
mov
jne
es
dec
mov
add
cmp
add
je
add
stos
cld
cmp
add
xchg
xchg
adc
fsubs
movsl
pop
testl
stos
cwtl
insb
outsl
out
mov
hlt
cwtl
or
sub
add
adc
and
cli
clc
sahf
jecxz
xchg
jae
test
lock
sbb
divb
sbb
clc
add
or
dec
push
test
xchg
dec
push
aas
dec
sbb
gs
jno
add
xchg
pop
cltd
addb
hlt
ss
and
xlat
aam
ss
sbb
sub
lret
cmpsl
fld1
fcmovne
dec
dec
out
movl
pop
xor
mov
aaa
mov
xor
lock
insl
or
cmp
sub
ret
fidivl
ror
aaa
jl
and
add
cmp
mov
add
jle
jecxz
pop
iret
test
and
aad
jmp
jge
jp
pop
pop
std
push
clc
outsl
or
and
cmp
pop
and
scas
cs
lods
xchg
insb
mov
inc
add
stc
fidivs
stos
ljmp
add
sub
sbb
mul
test
addb
data16
or
push
xchg
pop
cmp
bound
pusha
add
cvtdq2ps
xchg
lahf
and
pushf
hlt
test
aas
jp
or
ret
out
ljmp
popf
fs
push
in
loopne
out
mov
xchg
loop
add
mov
jge
xchg
or
arpl
shrl
cwtd
cs
push
xchg
cli
into
rolb
leave
xchg
mov
add
add
mov
xchg
imul
notb
dec
sub
sti
mov
jg
jp
lods
sub
fs
in
cmc
xchg
pop
mov
sti
or
mov
sub
rolb
adc
dec
rolb
sbb
add
mov
add
addb
and
int
or
dec
fmul
imul
push
dec
sbbl
leave
mov
pop
imul
xor
outsb
cwtl
xchg
out
stos
or
movsb
push
pop
jg
in
orl
clc
xchg
xor
add
int3
and
cli
inc
add
add
pushf
cmp
push
adc
mov
mov
pop
out
imul
dec
je
test
scas
lahf
dec
xor
xchg
adc
imul
xor
arpl
push
test
sbb
ret
xchg
cmp
sbb
es
and
fwait
xchg
add
pushf
jae
cmp
adc
add
push
add
repnz
xchg
ret
sbb
add
pop
mov
push
or
or
pop
inc
add
add
xor
pop
lcall
push
xor
outsl
sbb
stc
pop
movb
lods
adc
jecxz
sub
jbe
add
jnp
jmp
insl
nop
cmpsl
push
add
sahf
sub
pop
inc
ja
xchg
popa
pop
jmp
cmp
inc
fmuls
enter
lahf
aam
push
incb
add
mov
mov
ret
gs
adc
inc
add
repnz
dec
cmpsw
jle
cs
push
or
push
ret
push
add
push
test
pop
hlt
subl
ror
bound
xchg
pop
dec
lahf
cmp
movb
insb
ret
daa
mov
mov
insb
adc
fisttpl
sub
push
sbb
mov
add
lea
jmp
negb
add
sarl
cs
adc
mov
pop
pop
dec
lea
pop
jb
es
subl
push
add
add
add
jb
inc
and
xor
and
addb
mov
fpatan
in
iret
fisttps
sub
add
and
mov
add
sti
sbb
push
mov
push
out
xchg
pop
xor
and
test
or
add
data16
loope
shrl
rcll
jg
sbb
push
and
fcmovnu
or
jnp
and
adc
in
testl
int
mov
jb
adc
cltd
xchg
cmp
fdivl
or
mov
inc
lods
fadds
in
jo
add
jb
add
add
or
push
mov
loop
hlt
ljmp
ds
inc
sahf
out
mov
sbb
xchg
jl
jb
fdivr
xorl
dec
ss
add
mov
fcomps
xchg
out
sarb
add
mov
outsb
divb
push
clc
fadds
shll
add
flds
lcall
jp
jns
mov
dec
pusha
add
ja
aad
test
push
jge
mov
aam
xor
mov
or
shr
imul
int3
inc
fisubrs
cmp
xor
push
aas
dec
jae
fwait
cs
jne
dec
adc
and
leave
push
aas
lds
mov
jle
xchg
add
bound
sbbl
movb
out
inc
add
fstp
in
pushf
ljmp
scas
rolb
addb
add
xor
xchg
jae
imul
stos
and
bound
push
js
or
loop
mul
add
dec
lahf
dec
and
sbb
add
jmp
xor
in
mov
pushf
push
jno
fistl
test
push
add
arpl
inc
add
mov
rol
add
mov
imul
and
and
pop
insl
test
xorl
dec
cmp
mov
sarl
stos
std
out
adc
push
xchg
addb
cmp
xchg
sub
add
jnp
dec
inc
add
test
das
add
pusha
add
or
mov
insl
add
sub
cmpsb
adc
nop
test
sub
add
cs
pusha
add
add
mov
sub
add
out
add
mov
sti
das
mov
jns
int
push
xchg
roll
add
add
fcmovbe
inc
sahf
cmp
mov
mov
add
mov
add
mov
dec
loopne
cmp
cmpsl
mov
add
scas
imul
inc
aad
and
lret
fiaddl
movsl
lret
and
add
jp
add
cmp
add
or
shll
pop
add
mov
out
loope
jnp
mov
push
sbb
adc
mov
push
add
xchg
dec
lds
add
clc
test
or
lds
dec
or
movsl
push
seta
pop
pop
rcll
test
dec
inc
add
xchg
in
lea
aas
push
hlt
xchg
ss
shrl
bound
sbb
hlt
test
mov
call
inc
mov
out
dec
mov
loop
add
or
inc
ss
testb
dec
sahf
inc
add
lret
pop
addb
sbb
or
inc
mov
cmp
and
add
or
stos
cli
repz
mov
mov
fisubrl
into
adc
mov
ja
pop
ret
icebp
aaa
dec
pop
shr
std
add
mov
mov
mov
rcrb
ficompl
jae
and
imull
in
iret
aaa
push
dec
mov
and
push
rclb
add
adc
repnz
ja
jno
out
jb
mov
out
enter
loope
fchs
addr16
adcl
add
xchg
xchg
dec
fwait
dec
lods
sbb
test
rcrb
test
dec
mov
mov
sti
or
push
pop
scas
les
das
addb
mov
addr16
out
lcall
rclb
notl
aam
icebp
ret
fldenv
xorl
stos
dec
roll
daa
cwtl
rsqrtps
out
mov
mov
addr16
jl
int
add
inc
add
xchg
stc
in
mov
dec
pop
jnp
mov
inc
add
pop
pop
adc
xor
add
je
and
outsb
or
jnp
pop
stos
dec
sti
scas
leave
mov
add
xchg
fadds
pop
mov
es
fdivs
imul
mov
mov
jg
pop
mov
aas
fs
xlat
cld
cs
add
push
out
dec
aas
jl
mov
stc
push
sub
in
xchg
loope
jp
lods
push
stos
pushf
les
pop
repnz
jbe
lret
or
mov
mov
mov
and
dec
cmp
pop
jb
mov
jno
push
in
jl
addb
xor
idivl
add
sti
mov
outsb
push
scas
inc
add
por
aam
bnd
das
sub
pop
cmpsb
fmuls
icebp
insl
pop
es
scas
shll
pop
sub
mov
clc
lock
dec
icebp
mov
mov
packuswb
std
cmp
mov
mov
cwtl
push
add
pop
mov
movsl
in
insb
mov
in
imul
mov
xchg
and
movb
mov
xor
imul
loope
je
fadds
out
sti
dec
and
add
sahf
add
dec
stos
test
add
add
sbb
cmpsl
adc
add
xchg
call
add
cmp
enter
xchg
pop
inc
sbb
in
pop
sbb
inc
mov
rolb
xchg
pop
das
out
cwtl
adc
repnz
jmp
mov
xor
ret
add
in
das
push
add
ss
cmc
gs
ljmp
fcmove
pusha
add
addb
mov
mov
outsb
gs
aam
inc
add
outsl
pusha
add
clc
shlb
xchg
int
push
addr16
cmpsl
xchg
dec
xchg
jecxz
andl
add
push
mov
in
sbb
int3
sahf
mov
daa
jnp
add
jle
inc
add
das
mov
xchg
arpl
add
fcomi
in
outsl
cmp
lea
fwait
push
test
mov
sbb
add
jbe
or
inc
add
hlt
icebp
inc
add
sub
inc
cmp
call
sbb
test
sbb
aad
mov
pop
mov
dec
mov
fsubrp
push
jmp
add
cli
stos
adc
xor
ds
rolb
add
fsub
jle
sub
add
stos
adc
mov
push
xchg
ret
add
addl
and
sbb
or
out
jge
sbb
sbb
cwtl
inc
add
mov
data16
sub
sub
add
aam
cmpsb
inc
jno
adc
mov
int
cmpsb
xchg
fcoml
arpl
dec
lods
es
push
dec
pop
mov
pop
jmp
fcoms
mov
mov
cmc
xor
dec
and
fidivrs
pop
pop
push
mov
lds
mov
bnd
add
mov
cli
push
sub
mov
push
loop
mov
hlt
repz
jp
sti
sbb
add
int
sub
mov
push
or
rorl
and
and
hlt
jmp
popf
in
mov
add
add
lock
popa
ja
stos
sub
pop
and
and
mov
inc
mov
mov
add
jnp
push
add
les
pop
jnp
push
add
push
push
scas
mov
sbb
loope
aad
mov
add
jecxz
jge
add
fildl
cmpsb
push
lret
addb
jge
cmc
insl
xor
push
testb
cmp
sbb
mov
sbb
fwait
sbb
xchg
add
mov
cmpsb
fldcw
push
cld
fwait
inc
add
ret
sbb
mov
add
cmpsl
and
mov
fwait
push
pop
sbb
add
clc
aas
mov
xor
cmpl
mov
out
fnstsw
lods
lock
push
cs
or
xor
aam
add
add
pop
js
loopne
add
inc
movb
addb
jg
xor
bound
push
push
xor
sub
jne
sub
in
xor
mov
xor
pop
xchg
push
add
add
sbb
scas
lahf
loopne
call
adc
push
std
jmp
rcrl
sub
aam
fbld
mov
cmp
xchg
inc
cs
add
fnstcw
movsl
mov
rclb
mov
pop
push
sbb
push
add
add
sub
push
insl
pusha
add
adc
loop
push
fs
mov
mov
dec
or
sbb
push
dec
in
add
imul
imul
and
or
test
decb
test
xor
subl
and
xchg
xor
movsl
mov
xchg
xchg
xor
std
loopne
ss
scas
cmpxchg
push
mov
sbb
sub
lcall
adc
aad
push
add
jno
inc
add
pop
cli
xor
pop
pop
cmpsb
hlt
das
xor
dec
sbb
aas
sbb
in
mov
bswap
dec
mov
or
sahf
lcall
aaa
mov
jbe
enter
aam
add
pushf
xlat
inc
jecxz
adc
idivb
inc
pop
imul
outsl
ss
outsl
call
ja
sub
jne
stos
mov
les
into
sbb
mov
fcmovnu
ja
out
lret
out
lcall
les
or
les
jo
xchg
xchg
or
push
les
ss
jbe
cmpsl
sbb
insb
push
add
fimull
pop
mov
rolb
inc
add
mov
ret
sub
lods
fsubp
mov
add
in
int3
jb
push
mov
xor
out
in
mov
shl
push
ds
dec
xor
rolb
add
pop
xchg
mov
add
adc
cmp
lret
adc
das
add
pop
negb
inc
add
cmpsl
dec
pushl
fidivs
mov
jl
add
sub
sbb
adc
ljmp
sbb
ffree
inc
add
xor
sub
sub
dec
jg
push
jb
or
jnp
imul
rep
mov
out
or
out
out
sbb
arpl
scas
xlat
mov
xor
pop
add
add
jmp
inc
add
add
lret
sub
inc
fsub
insb
and
pop
xor
jb
cld
push
pmaxsw
push
add
addb
sbb
push
dec
mov
push
add
pop
lea
into
lret
push
adc
mov
aad
dec
fdivs
enter
sub
sbb
xor
add
cwtl
adc
inc
stos
adc
movsl
pop
addb
inc
add
repz
mov
data16
add
in
repz
sbb
jne
xor
add
inc
pop
rolb
mov
add
add
and
outsl
and
cmpsl
push
sub
cwtl
rcrl
xorl
es
jo
repz
mov
adc
addb
icebp
stos
iret
push
add
jp
lea
and
sub
movsb
mov
add
mov
pop
stos
push
aas
pop
adc
mov
stos
daa
popa
or
xlat
aaa
and
jne
jp
inc
es
aam
mov
ja
jo
cmp
addr16
add
out
jl
inc
add
xor
push
and
std
xor
add
dec
in
jmpw
xchg
sbb
adc
add
dec
pop
mov
rcrl
pop
xor
mov
mov
add
ret
mov
add
call
loop
sbb
jecxz
rcrl
add
push
out
adc
test
pop
xchg
sbb
sbb
rdmsr
gs
sub
stc
push
add
xchg
out
jp
js
in
jbe
addb
xchg
sub
out
icebp
and
jmp
jmp
add
das
cmpsb
inc
add
aas
add
mov
adc
pop
cli
inc
add
xchg
mov
cmpsb
jmp
sarl
cltd
add
dec
mov
lahf
std
inc
xor
fisttpl
outsb
repz
cmp
sbb
add
sti
fwait
pop
adc
dec
mov
dec
cmp
xchg
outsb
cmp
push
loope
mov
add
cmp
mov
xor
out
add
and
cmp
lret
dec
mov
or
fsubs
push
popa
jl
push
add
lret
fbld
mov
pop
or
test
mov
add
mov
sahf
sbb
jnp
push
jmp
pop
jecxz
js
adc
sub
mov
pop
dec
pop
or
add
aas
mov
repz
lret
out
sbb
je
mov
mov
pop
jmp
jo
pushf
rclb
pop
xor
fsubs
out
incb
cmp
and
fbstp
add
insb
pop
out
ret
lds
loopne
stc
xchg
jle
popf
jo
repz
cmp
xchg
test
fldl
pop
sub
fisttps
sub
shlb
xor
hlt
mov
mov
aad
adc
cltd
xor
cmp
add
clc
or
add
and
pusha
add
dec
cmpsb
fildll
add
jle
das
adc
frstor
dec
test
fnstsw
add
sbb
arpl
enter
std
lcall
mov
movb
sbb
adc
jnp
iret
data16
jns
aas
pop
roll
dec
push
sub
add
adc
mov
cli
arpl
add
cmp
xchg
mov
dec
addb
xchg
pop
ja
cmp
jmp
lea
pop
push
cmp
imul
pop
int
adc
inc
add
mov
pop
xchg
ljmp
add
jns
jo
jle
jae
clc
sub
addl
stos
and
in
in
cli
mov
sbb
push
push
add
int
aas
push
adc
add
jne
stos
bound
jp
scas
std
hlt
xor
imul
lret
sub
fnstenv
dec
or
sarb
nop
pop
ret
fidivs
mov
xchg
in
sub
sub
jmp
dec
aaa
cs
fistl
or
jg
mov
jecxz
jle
mov
jnp
add
enter
gs
inc
roll
lahf
or
mov
xchg
ds
ds
mov
aas
push
cltd
andl
je
jg
sub
imul
and
in
imul
test
cs
jg
mov
mov
or
add
les
dec
mov
jmp
adc
push
mov
jne
out
xor
add
mov
adc
mov
dec
ficoml
add
clc
mov
ffree
sbb
xlat
aas
arpl
dec
xchg
xor
lret
push
cmp
aas
or
mov
sub
sbb
out
jp
sbb
xchg
test
add
cmpl
mov
pop
adc
pop
scas
inc
add
or
scas
dec
popf
gs
fists
arpl
push
xlat
pushf
mov
cli
xor
mov
adc
push
scas
lcall
icebp
insl
and
jbe
mov
add
xlat
adc
int3
leave
inc
dec
aam
inc
lret
stos
mov
leave
ss
push
push
add
rolb
pop
mov
fsubl
jbe
add
mov
stos
in
ds
not
mov
and
aas
mov
mov
add
jmp
push
mov
add
add
adc
and
arpl
jmp
xor
sar
cmp
inc
jno
loop
cmpsb
sar
cmp
mov
pop
pusha
add
testl
and
ss
imul
mov
mov
cs
call
pop
hlt
sbb
mov
add
mov
inc
out
fiadds
daa
xchg
cmc
or
fdivrs
xlat
outsl
je
ja
add
xor
movb
add
push
insl
or
out
sahf
lret
add
cld
pop
mov
lods
cwtl
mov
aam
pop
sub
hlt
loopne
add
mov
push
mov
mov
lods
popa
rcll
push
ljmp
stc
mov
mov
addb
ljmp
lcall
xor
jge
dec
scas
lods
mov
xorl
add
add
push
addb
inc
add
enter
testl
mov
pop
sub
mov
jmp
add
mov
movb
mov
test
mov
ret
dec
pop
int3
loop
push
xor
imul
stc
addb
adc
xor
leave
stos
xlat
sub
ds
cs
dec
sbb
shll
pop
outsl
addb
push
test
pop
or
subl
ret
pop
imul
add
dec
jnp
add
les
sub
sub
adc
add
inc
add
mov
inc
fs
sub
pop
xor
inc
pushf
cld
sub
add
add
mov
outsl
xchg
rcrb
dec
push
cs
fiaddl
mov
aas
popa
inc
xchg
jnp
clc
lret
insb
adc
int
aaa
scas
int
jmp
add
push
aaa
xchg
xchg
js
add
add
and
fistl
imull
ds
cmp
cmpsb
push
add
popf
ja
pushf
incb
xchg
pop
pop
mov
push
xor
jb
loop
add
jbe
mov
add
mov
inc
pop
adc
enter
dec
push
mov
out
xchg
lahf
sbb
fs
cltd
mov
mov
mov
mov
sbb
cmpsl
add
inc
add
in
and
ret
mov
notb
repz
push
add
out
aam
popa
dec
pop
or
loop
dec
pop
setge
or
push
addb
push
cld
xlat
fs
addl
icebp
pushf
sub
imul
addr16
add
rolb
sbb
pop
nop
mov
shrl
bound
arpl
pop
bound
add
xchg
addb
mov
add
add
insl
in
stos
mov
cmp
imul
mov
push
dec
das
data16
xchg
idivl
jae
icebp
lret
add
xlat
leave
pop
rcrl
in
es
gs
cmp
insb
add
fcomps
jp
cli
push
sub
scas
cmp
lcall
add
mov
add
xchg
in
aas
and
pop
xor
clc
mov
add
jae
testl
stos
cmp
cmpsl
test
xor
mov
mov
sub
rcll
cli
push
jne
push
xchg
adc
push
testb
mov
xchg
inc
add
addb
into
xchg
or
dec
fcomp
jmp
insb
insb
cmc
add
jae
xorl
jl
dec
pop
call
add
pop
mov
aas
ret
add
xchg
and
adc
dec
je
loope
cmc
daa
sarl
pop
mov
add
sbb
out
or
lret
inc
add
ja
add
rsm
inc
add
movsl
mov
movb
loop
jmp
push
add
push
ret
cmp
das
dec
popf
or
cmpsl
loopne
add
sub
pop
jmp
fistps
adc
shlb
mov
sub
push
add
mov
push
fcmove
in
movsb
inc
inc
sub
out
popf
xchg
aam
xchg
mov
add
lcall
push
add
sbb
and
add
out
jns
mov
cmp
mov
fdivr
cmc
mov
sbb
lret
popf
movsl
loope
add
add
enter
in
lret
arpl
and
mov
or
inc
add
es
daa
pop
cmp
dec
jl
add
or
inc
xor
xor
xchg
mov
push
sbb
out
addb
xchg
xchg
inc
add
ljmp
mov
out
jne
xchg
and
insl
sti
test
cmpsl
xor
mov
jne
adc
or
jmp
sbb
sub
loop
sub
ret
nop
pop
sahf
aam
cmp
jnp
sbb
fwait
jns
adc
pop
sbb
mov
cmp
cmc
mov
rolb
mov
clc
repnz
cwtl
push
push
data16
mov
push
dec
testl
jno
cltd
xchg
adc
jbe,pn
jo
xchg
sub
je
pop
sub
loop
mov
mov
imul
pop
ret
aam
or
aaa
popa
fwait
rcll
loope
pop
xlat
xor
call
mov
mov
sub
mov
jns
lods
mov
mov
lret
xchg
xchg
lock
sbb
add
icebp
cmpsb
js
popf
jno
push
xor
hlt
push
sub
imul
outsb
js
cmpsl
or
push
jb
sbb
lods
ret
adc
add
and
jecxz
adcl
popf
mov
inc
outsl
out
js
add
xchg
and
cltd
mov
inc
outsb
mov
add
mov
mov
push
in
outsb
jne
sti
frstor
mov
cltd
stc
jb
lahf
mov
add
add
xchg
test
daa
jge
jl
mov
int3
push
mov
push
mov
outsl
int3
mov
scas
pop
jb
mov
dec
jo
clc
mov
push
imul
pop
daa
aaa
add
cwtl
sahf
pop
jg
jmp
add
or
push
add
je
mov
imul
add
adc
das
fldl
aaa
loopne
out
testb
cmc
leave
js
push
xchg
addb
sbb
add
scas
dec
inc
add
or
lahf
ret
or
push
add
pusha
add
in
addb
popf
adc
out
pop
ret
or
push
xchg
bound
add
push
xchg
push
scas
mov
das
xor
outsl
rcpps
int
fisttpll
sbb
ds
fldl
addl
xchg
jne
cltd
mov
bound
jmp
add
movsb
adc
add
lret
mov
or
aad
inc
adc
cs
icebp
sarl
push
jge
cmp
clc
imul
xlat
addb
xlat
repz
movl
xchg
or
jecxz
pop
cwtl
push
mov
mov
jg
pushf
loop
movsb
and
movb
shll
rcl
data16
fistpl
mov
add
fnsaves
addb
aaa
in
cmp
stos
cmp
mov
loop
test
cmpsl
xor
cmpsl
dec
cmp
out
iret
pop
xchg
sbb
inc
add
movsb
mov
sbb
outsl
pop
pop
rcrb
push
cmp
push
imul
sar
lods
lock
hlt
hlt
fs
inc
add
mov
pop
push
mov
add
test
adc
cwtl
test
aad
movsl
addr16
rorl
adc
adcl
pop
scas
lahf
jo
sub
rclb
push
inc
add
xchg
in
cmp
xor
cmp
mov
lods
cmpsb
cmp
ja
adc
into
or
mov
movsb
daa
push
mov
jp
pop
cmc
aas
jns
test
incb
dec
cwtl
mov
ret
adc
cltd
xor
sub
add
sahf
xchg
xor
dec
cs
gs
push
and
pop
das
int
jge
ffree
add
jns
popa
dec
lods
xor
ljmp
and
out
insl
fidivl
cli
jecxz
or
sbb
or
sbb
stos
xchg
insb
subl
sub
hlt
aam
addb
add
aas
xor
push
inc
daa
and
pop
inc
add
push
mov
ret
xor
pop
test
outsl
mov
ljmp
outsb
push
mov
aaa
add
dec
pop
call
bnd
push
add
outsl
push
mov
dec
rcll
dec
lods
aas
ljmp
dec
scas
and
out
mov
in
sub
sbb
loop
push
push
outsb
sbb
rolb
scas
xchg
mov
imul
setnp
xchg
aaa
inc
mov
stc
lret
mov
adc
jno
pop
mov
sbbl
imul
test
hlt
repnz
repnz
pop
data16
add
mov
adc
incl
pop
jb
outsl
cwtl
lahf
iret
push
outsb
xor
cli
int
add
cmpsb
add
jge
mov
add
fmuls
cli
jg
mov
in
daa
fidivrs
add
sub
insb
sub
xchg
test
popf
xchg
cmpsl
outsl
cmp
push
arpl
loope
jmp
ljmp
out
mov
pop
mov
test
cmc
or
shrl
add
icebp
jae
iret
shl
mov
push
jb
and
pop
loopne
negb
mov
inc
add
inc
outsl
cmp
push
sbb
mov
add
adc
lea
or
addr16
fcomps
push
stos
push
outsl
push
pop
repnz
add
add
add
add
out
movb
jo
inc
add
fstpl
out
cli
insl
cmpsb
out
push
int3
jo
fldt
dec
jbe
xor
outsb
jg
add
mov
and
dec
movsb
shll
clc
loop
dec
and
pop
xchg
aaa
pop
or
inc
add
loop
push
push
idivl
cmp
mov
add
leave
das
add
dec
dec
or
or
mov
inc
fistpl
add
sbb
loope
shll
pop
xor
mov
ljmp
out
aad
jne
test
fwait
or
lods
jge
daa
sub
dec
ds
push
push
jo
inc
iret
cmp
movsl
out
cld
mov
xchg
addb
dec
loopne
std
mov
dec
aas
lock
std
sti
adc
pop
clc
xor
movsl
rcrl
push
int3
xor
test
push
test
addr16
aam
dec
xchg
hlt
stc
mov
add
mov
outsl
inc
stos
sub
pop
mov
push
and
nop
les
sti
push
insb
pop
jae
xchg
into
and
inc
add
jle
imul
lock
sahf
cs
sub
ja
fisubl
inc
add
add
insb
ficoml
std
arpl
icebp
adc
sbb
jp
bound
xchg
les
sub
pop
or
add
mov
or
push
add
fcmovnu
int3
adc
imull
mov
mov
jmp
add
ds
mov
adc
cld
jae
xor
shlb
jg
fstp
addr16
aam
jle
cmp
lea
fcmovb
add
ljmp
mov
dec
push
enter
enter
addr16
cmpsl
mov
and
sbb
shl
fwait
xorl
test
imul
jne
mov
orl
movsl
lock
js
cmpsb
xchg
negb
roll
arpl
sahf
sahf
xlat
nop
in
xchg
fstpl
add
sbb
roll
xor
hlt
outsl
ret
add
and
je
insb
jae
sbb
test
sar
in
cmp
push
inc
std
movsl
xchg
test
add
xor
mov
mov
mov
and
ret
jns
push
js
sub
stc
add
push
aas
jecxz
fadds
mov
int3
push
cmp
ljmp
or
add
add
stc
ja
jle
xor
cmc
lret
outsb
dec
dec
inc
add
loope
outsb
clc
add
popa
aas
add
int
xor
pop
sbb
pop
mov
notb
add
imul
icebp
out
mov
loope
repnz
adc
pushf
jnp
ss
mov
mov
rorb
add
stc
xor
cmp
rcll
add
and
add
jg
mov
cmp
dec
inc
add
inc
add
fcompl
add
add
hlt
mov
cwtl
std
nop
sub
fbld
sar
inc
ret
add
pop
or
add
xlat
add
cmp
cs
mov
ljmpw
int3
lods
push
fidivrs
cmp
pushf
push
inc
addb
pop
sub
cmp
xor
jl
or
mov
add
cmp
mov
insb
xchg
mov
cmp
imul
cmpsb
aaa
mov
pop
mov
and
mov
cli
cltd
aam
loopne
ret
scas
flds
mov
mov
sub
addb
and
icebp
or
lock
pusha
add
dec
dec
jmp
sbb
add
mov
mov
mov
icebp
adc
pop
sti
icebp
loopne
repz
jl
add
xchg
inc
add
xor
sahf
iret
addb
jg
lock
sahf
jo
aad
lret
mov
stc
movsb
aad
repnz
add
mov
sbb
outsl
xchg
cmp
jb
into
dec
and
mov
dec
icebp
xchg
js
stos
xor
mov
add
gs
mov
stc
and
leave
in
xchg
inc
and
icebp
push
adc
mov
sarl
mov
mov
lret
xor
insb
test
test
jae
adc
inc
adc
enter
int
ret
neg
ss
cld
out
mov
sar
sahf
pop
mov
mov
cmp
pushf
lret
cld
dec
enter
dec
fstpl
add
push
cmp
xor
sbb
fwait
mov
cmp
rclb
lret
lret
dec
jl
mov
shll
xor
fstps
lods
ja
pusha
add
xor
insb
dec
pop
data16
xchg
sbb
add
out
bndldx
int
jo
dec
mov
dec
aam
rcll
or
add
sbb
and
gs
adc
mov
mov
fisttpl
xchg
sub
dec
jp
cli
xchg
in
je
xor
xor
lea
cmpsl
push
idivb
mov
loope
or
mov
push
xlat
or
cmpsb
inc
push
mov
ja
repz
inc
sub
gs
push
sbb
inc
js
rorb
sub
xor
imul
gs
xor
sbb
or
lret
adc
push
jo
clc
cmp
jecxz
xchg
sbb
int
fbstp
adc
or
mov
jnp
loopne
lcall
rorb
pop
and
jl
pop
or
mov
movb
aas
xchg
arpl
pop
pop
fmull
jl
and
enter
xorl
ret
dec
ja
inc
cmpsb
mov
jb
inc
pop
jns
add
test
rolb
push
add
and
add
jecxz
jns
or
and
cmp
pop
inc
lcall
jne
sbb
sbb
lcall
dec
xchg
data16
adc
inc
push
jb
and
jb
mov
fistpl
xor
inc
add
pop
mov
cmpsb
xchg
dec
lret
add
and
cld
push
pmullw
bound
lock
xchg
enter
lock
mov
fidivrl
or
xchg
push
pop
dec
cwtl
jmp
add
and
push
dec
inc
mov
nop
fs
xor
dec
sahf
inc
add
not
jno
shll
adc
fnstcw
stc
in
inc
test
push
sbb
push
aaa
jne
dec
stos
mov
add
mov
add
add
pop
cmpsl
jle
std
sbb
add
or
cld
pusha
add
movl
adc
push
lods
testl
fwait
movsl
gs
add
mov
aaa
cs
inc
add
dec
nop
ja
inc
add
xor
cltd
rcl
lcall
dec
jg
sti
test
pop
pop
sbb
mov
cmp
out
mov
jmp
cmp
jmp
fisttps
in
inc
add
les
fs
movb
ja
popa
je
jb
test
mov
insl
mov
ret
lahf
scas
mov
cmpl
testb
pop
fists
push
incb
or
pop
fisubl
add
mov
jns
arpl
xchg
mov
adc
push
lods
popa
fiadds
idiv
pop
or
adcl
mov
sbb
mov
cli
mov
add
pop
in
and
rol
mov
push
ret
aas
addb
in
sub
mov
inc
cltd
cmp
inc
pop
dec
push
leave
fdivrl
int3
jge
repnz
jo
mov
cwtl
jns
int3
leave
test
jl
in
add
mov
aam
sbb
imul
and
sub
sbb
jle
mov
add
je
mov
bound
sbb
popa
inc
add
dec
arpl
inc
add
or
je
jno
movb
int3
fildll
add
rcll
push
and
outsl
push
test
cmp
mov
add
or
adc
hlt
xchg
pop
xchg
xor
mov
and
mov
fdivrp
mov
sub
xchg
inc
loope
es
ret
mov
xor
scas
punpckhwd
out
add
clc
push
popa
mov
add
daa
ja
sti
pop
dec
jg
xchg
mov
xchg
cli
adc
mov
push
pop
lcall
mov
cmp
loopne
adc
pop
out
out
cs
add
xchg
mov
fsubl
push
sbb
sub
add
test
jmp
mov
fcoml
jle
test
xor
or
ljmp
ficompl
lock
xor
pop
jb
jnp
pop
xor
outsb
insl
aam
rcll
lock
repz
sub
add
pandn
scas
arpl
mov
push
aaa
test
lock
mov
aas
adc
and
xchg
dec
hlt
push
pop
ss
mov
add
inc
add
ret
shll
adc
out
add
jb
and
add
add
and
hlt
leave
loope
fs
and
pusha
add
mov
sub
xor
aam
pop
mov
inc
cs
lds
sbb
push
and
mov
addr16
cmpsl
cmp
popa
jae
nop
jge
aad
pop
pop
xor
mov
stc
push
push
addb
rcr
xchg
pop
inc
add
movsl
daa
lea
test
xchg
fistps
jae
ret
sahf
adc
in
shll
lock
push
outsl
ret
cmpsb
and
jmp
xchg
mov
cltd
xchg
inc
add
and
dec
ret
lcall
enter
leave
sub
in
fdiv
mov
sti
push
cmpsb
xor
jge
daa
std
inc
mov
pushf
xor
xlat
lcall
pop
nop
xchg
push
mov
mov
add
ret
dec
cwtl
ljmp
push
call
scas
je
rorl
add
cmpsb
div
and
mov
pushf
cld
dec
xor
jmp
das
pop
adc
pop
pop
mov
ret
test
xchg
xlat
je
out
hlt
xor
or
or
rolb
lret
cltd
shr
jns
data16
inc
add
ret
cmp
add
insl
or
push
jne
test
add
fdivl
imulb
adc
movsb
add
loopne
or
addb
jne
add
orl
sbb
or
push
movaps
test
add
sti
dec
adc
test
es
dec
adc
dec
test
dec
jbe
and
add
pop
sbb
imul
out
xchg
dec
push
lret
push
mov
jle
mov
lods
mov
add
popa
xchg
xor
xchg
bound
xchg
lret
mov
push
call
insb
and
mov
inc
add
mov
inc
add
cltd
jg
les
push
bound
inc
add
fiaddl
lahf
add
jle
pop
mov
popa
lret
cmp
pop
dec
ret
xchg
jo
shrl
testb
add
dec
clc
movb
ljmp
addb
and
fldcw
mov
add
in
add
outsl
jns
sbb
pusha
add
mov
and
stos
pusha
add
inc
loope
cmp
aas
leave
sahf
lret
mov
inc
fnsave
in
bound
inc
add
lret
mov
jmp
std
jmp
push
arpl
es
lods
sbb
add
loopne
mov
add
sbb
fistl
inc
and
xchg
inc
add
add
add
insl
test
mov
mov
sahf
mov
xlat
bound
lcall
jge
dec
cmp
mov
lods
and
add
int
inc
add
inc
sbbl
and
mov
and
jno
repnz
sbb
add
push
add
popa
inc
fisubrl
fimull
adc
and
subps
test
lock
out
adc
mov
pop
ret
xchg
mov
dec
pop
shrb
lods
mov
fsts
scas
push
movb
mov
xchg
push
mov
add
inc
add
add
je
sub
lds
push
ds
pop
or
pushf
sbb
fscale
mov
pop
dec
mov
push
addb
cwtl
rclb
sbb
or
pop
int
pusha
add
add
jg
js
cli
mov
adc
int
cmp
dec
loop
aam
dec
adc
dec
mov
les
stos
cmp
adc
add
add
add
jno
cld
push
data16
jne
dec
jge
out
pushw
stos
fidivl
popa
nop
psrlw
popa
int
adc
enter
mov
push
push
xchg
stos
jge
movb
js
addr16
aas
int3
mov
push
mov
mov
aaa
mov
and
imul
scas
stos
cmp
mov
std
movsb
jno,pt
mov
push
sbb
imul
js
lea
in
adc
add
test
xorl
sbb
mov
add
out
cmp
out
mov
mov
push
repz
jbe
sbb
popa
addb
gs
lods
cmp
jbe
les
fwait
decb
jecxz
dec
sar
xor
bound
add
push
add
dec
xchg
bound
outsl
xchg
push
inc
add
movb
pop
xchg
jle
dec
fwait
stos
jb
add
jle
dec
insl
sarl
rcrl
xor
mov
ljmp
mov
idiv
int3
outsl
mov
add
add
sub
or
sbb
xchg
add
pop
pop
insb
fstl
mulb
lock
add
ljmp
mov
pop
xchg
mov
jno
bnd
into
pop
rolb
xchg
inc
add
sbb
dec
xor
pushf
mov
pop
pop
scas
jns
in
pop
sarl
dec
decb
in
dec
sub
inc
add
fisttpl
into
aad
sub
mov
mov
mov
loopne
sub
les
cwtl
push
inc
cmp
adc
mov
fwait
in
jmp
mov
add
popf
das
scas
push
pop
push
add
sub
fwait
test
jl
mov
pop
mov
add
dec
cmp
in
in
daa
jg
sbb
add
in
add
das
inc
and
int3
mov
repnz
daa
int
pop
cld
and
xorl
lcall
iret
cs
mov
mov
jl
into
insb
jp
xor
cmpsb
cltd
mov
gs
pop
and
push
popa
pushl
dec
adc
add
outsl
push
jno
add
rolb
repz
add
push
ja
aam
dec
test
inc
lea
jmp
addl
bnd
mov
stc
iret
cmp
into
fs
mov
add
rcll
and
adc
xlat
add
sahf
dec
sub
cmc
pop
push
rorb
fcompl
in
and
adc
aaa
mulb
add
sbb
aam
sahf
cmp
test
add
fldcw
inc
add
gs
addb
loop
imul
dec
stos
mov
aad
sbb
lret
xchg
add
fistl
test
adc
outsl
sbb
pop
repnz
xor
stc
das
cs
dec
out
sarl
rcll
and
dec
mov
les
stos
hlt
inc
test
stos
ja
popa
ss
and
jl
add
mov
imul
sbb
cmp
add
add
add
mov
shl
xorl
aaa
scas
in
add
notl
movsb
test
add
add
leave
and
int
mov
jns,pt
xchg
call
sti
test
xor
mov
fs
adc
mov
lods
and
rsqrtps
cmp
into
pop
movb
frstor
jge
aaa
push
jge
cmp
cltd
sbb
movsl
dec
add
jb
adc
stos
fs
sbb
rorl
adc
and
add
adc
sub
jp
dec
pop
dec
xchg
lods
mov
lcall
and
sbb
add
push
movsl
popf
xchg
jl
ret
push
gs
xchg
sub
jle
out
ja
in
xor
test
test
ret
sbb
adc
cs
push
addb
fnstcw
mov
inc
jb
xor
dec
ds
flds
scas
int3
pusha
add
xor
push
add
xor
repz
push
or
repz
sbb
push
sbb
daa
outsl
jmp
cmp
push
xor
xchg
pusha
add
insl
inc
add
in
xor
ficoms
inc
add
lods
aaa
cmpsl
mov
add
xchg
add
push
ffreep
hlt
jecxz
mov
ss
push
in
lods
cmpsl
pop
movsb
cmpsb
adc
cltd
mov
add
test
popa
pop
inc
add
inc
add
fistps
jnp
imul
add
sub
add
push
add
dec
adc
inc
gs
xor
or
mov
test
or
ret
add
cmc
inc
add
xlat
sbb
add
push
add
adc
xor
or
inc
add
ds
or
jmp
add
mov
push
add
nop
mov
push
ss
sbb
ljmp
daa
jle
push
inc
sbb
mov
push
push
out
lods
mov
cmp
add
dec
jecxz
xchg
inc
movsb
sbb
add
mov
cld
mov
sub
enter
xchg
pop
std
add
add
push
jg
dec
mov
push
repnz
aam
add
adc
push
adc
test
int3
addl
fistpll
mov
add
xchg
xchg
aad
sub
cmp
xor
outsb
or
xchg
test
sbb
imul
mov
add
test
cltd
pop
out
pop
rolb
mov
inc
add
xor
div
dec
lods
adc
add
int
fwait
or
add
lcall
adc
mov
in
pop
mov
pop
cmpsb
adc
inc
add
cmpl
popf
std
outsl
outsb
out
imul
aaa
stos
cmp
dec
sub
xchg
leavew
pusha
add
cltd
sbb
cmpsb
into
jnp
add
mov
aad
xchg
add
pop
mov
sbb
inc
add
push
bound
sbb
out
inc
mov
out
rolb
jmp
and
jl
xor
stos
push
dec
dec
xor
and
add
xchg
lahf
out
imulb
mov
lret
lcall
jb
scas
fisubl
mov
push
movsb
or
xchg
outsl
mov
or
mov
add
mov
xor
pop
mov
inc
jge
add
xchg
pop
cli
xor
dec
jb
mov
sbb
js
mov
imul
sub
mov
xor
dec
and
shrb
push
pop
xor
push
pusha
add
dec
xchg
and
cmp
pop
sub
popl
outsb
inc
mov
leave
cmpsb
test
sbb
xor
lods
inc
and
in
daa
cmp
cmp
add
mov
inc
movb
je
adc
cmp
stos
pop
xor
out
js
call
mov
fwait
push
stos
inc
int
pop
test
lcall
rorl
loopne
fistl
add
imul
popa
in
pop
mov
add
lret
xor
ja
mov
lea
add
xlat
cmp
dec
sbb
rolb
jle,pt
out
inc
add
es
add
xchg
or
je
shlb
cmpsb
out
inc
mov
and
or
movsb
cmp
mov
and
js
add
icebp
in
dec
cmp
xchg
push
leave
psubq
out
jmp
add
nop
cltd
cltd
inc
inc
outsl
out
jg
and
pop
xchg
lock
xchg
push
push
mov
pop
add
mull
push
mov
add
std
dec
cmc
push
inc
pop
sub
clc
test
sub
cmpsl
mov
test
aad
sub
in
lret
mov
lds
or
out
jle
fdiv
adc
and
inc
push
bound
stos
mov
pop
out
add
lods
test
stos
push
enter
popa
test
add
imull
and
push
mov
adc
add
lods
adc
rclb
xor
ret
push
dec
and
mov
cmpsb
in
ljmp
inc
adc
out
lret
mov
out
jbe
cmp
and
imull
stc
mov
loop
or
in
mov
mov
xchg
pand
sbb
xchg
shl
gs
or
js
std
push
in
inc
shlb
dec
jecxz
add
push
and
sub
jo
daa
adc
mov
popa
mov
push
aad
mov
add
mov
sbb
add
les
inc
add
add
insb
pusha
add
bound
mov
jae
mov
mov
popf
std
dec
xchg
repnz
add
dec
dec
jo
jnp
inc
lahf
add
adc
std
mov
mov
jmp
push
adc
cld
aam
add
lock
lods
dec
aad
add
pop
mov
pop
pop
fsub
out
inc
add
inc
add
test
arpl
cmp
jo
into
xor
push
repnz
push
lret
daa
dec
jno
in
add
nop
pop
mov
cmp
mov
inc
add
aam
sti
loope
add
popf
rcrl
stc
ljmp
add
and
aas
adc
add
inc
add
icebp
stos
iret
and
xchg
fwait
mov
lret
add
sbb
inc
nop
push
jmp
out
xchg
movnti
mov
xor
sbb
jno
test
mov
out
add
fstpt
or
ds
push
sub
adc
cmc
mov
lahf
cmpxchg
mov
sub
stos
aam
adc
imulb
or
lock
pop
pop
cli
inc
add
loope
mulb
sub
mov
or
test
mov
repz
mov
inc
add
add
pop
xchg
xchg
sahf
lods
xlat
pop
in
test
hlt
fdivp
scas
adc
mov
repz
nop
jle
xchg
push
add
jg
in
inc
shll
xlat
mov
inc
and
sub
test
scas
mov
and
je
rcrb
add
nop
pop
shll
lahf
inc
xor
add
add
fcmovu
xchg
enter
xchg
mov
and
nop
inc
add
mov
in
aam
stos
pop
mov
enter
das
add
add
loope
pop
xchg
push
pop
push
mov
push
add
mov
into
add
add
dec
jb
insb
and
xchg
sbb
add
ja
daa
fdivl
dec
push
pop
fmull
ss
dec
es
xchg
orl
out
mov
arpl
insl
sbb
inc
add
push
ja
add
sahf
inc
sbb
mov
nop
jns
mov
mov
mov
cmp
sbb
outsb
jnp
mov
mov
dec
adc
stos
stos
push
in
lahf
add
outsl
test
push
add
add
adc
test
push
or
sbb
sbb
sti
xor
add
out
add
addr16
outsl
das
arpl
jge
sub
jmp
hlt
stc
jg
jae
aam
lods
xor
lods
leave
push
pop
stc
fwait
push
sbb
add
sbb
aas
movsl
mov
test
repz
add
add
pop
mov
add
add
cmp
xchg
lock
daa
leave
cmp
sbb
dec
mov
mov
mov
negl
es
mov
outsl
sti
lods
mov
add
lock
pop
lret
cmp
iret
decl
sbb
test
adc
push
inc
or
inc
add
mov
pop
dec
sbb
fadd
cmp
fmuls
movsb
cmp
je
mov
adc
adc
lods
xor
push
xor
aam
popa
in
dec
lcall
hlt
inc
add
addb
fcompl
and
lea
stc
sub
push
push
pop
fsts
js
not
fidivs
cli
shrl
lret
rorl
loopne
mov
inc
add
push
sahf
cmpsl
pop
xor
add
lret
add
sbb
fidivrl
movb
dec
adc
cwtl
sbb
push
push
adc
std
push
in
repz
rolb
adc
ret
mov
xor
enter
push
out
mov
and
call
mov
and
cmp
arpl
mov
aad
jnp
jl
mov
sti
lds
aaa
addr16
xchg
adc
out
and
sti
ljmp
daa
push
add
xor
xchg
ffree
add
adc
adc
add
xchg
add
pop
ds
xchg
add
in
cltd
fdivl
divb
and
mov
inc
imul
sahf
jmp
add
cltd
add
adc
sbb
shll
add
call
sbb
es
daa
lods
mov
cmp
inc
add
add
addr16
inc
and
rolb
lock
and
add
ret
adc
into
dec
and
iret
test
movsb
pop
sti
in
aad
pop
ds
xlat
inc
add
mov
lods
add
sbb
lods
push
lcall
mov
push
xchg
mov
sbb
xor
popa
shlb
push
arpl
push
jno
int3
adc
push
addb
xor
adc
jb
repnz
mov
sbb
lret
rcrb
ljmp
pop
adc
xor
mov
addr16
shrl
cld
nop
dec
push
add
mov
outsb
mov
loope
dec
mov
dec
mov
cmp
inc
add
add
lret
push
jb
pop
outsl
mov
dec
in
popf
popa
push
jp
add
movb
test
mov
dec
mov
and
movsl
and
xchg
sub
inc
mov
imul
testb
mov
jmp
add
xchg
insb
cs
sbbl
xor
das
sub
adc
aam
mov
pop
popa
or
jbe
adc
pmaxub
jae
lahf
dec
sub
or
aaa
pop
add
add
into
add
fdivs
add
jge
sbb
push
cld
mov
fisubl
add
insl
mov
mov
scas
rcrl
add
cmp
xchg
jno
jle
add
add
sub
cli
and
dec
push
mov
push
add
adc
data16
pop
imul
outsl
inc
js
icebp
iret
sub
aam
decb
inc
xchg
and
and
mov
fisubl
into
out
std
or
mov
lock
js
bound
lret
adc
fimuls
pop
xor
add
cmp
and
pop
push
icebp
int3
les
das
and
jns
add
pop
pop
shl
push
xchg
add
xor
sub
add
lods
xor
loope
test
int3
dec
pop
mov
in
out
jns
xchg
sti
and
xchg
in
or
jecxz
and
imul
dec
ret
sbb
insl
push
inc
add
mov
lret
shll
add
jno
dec
cmp
hlt
xor
inc
add
add
pop
enter
mov
sti
xchg
cmpsb
pop
xlat
and
lods
and
lahf
and
mov
xchg
mov
in
add
lea
or
add
cmp
je
popa
cwtl
fistl
dec
mov
mov
adc
inc
jbe
push
jge
cmp
daa
loopne
add
xor
enter
and
arpl
imul
add
push
aas
cmp
aad
int
js
frstor
cmpsl
rol
xchg
or
insl
sbb
dec
cmp
test
ljmp
dec
movb
dec
jae
ret
fcoms
pop
iret
push
or
sbb
aad
inc
add
jns
pop
cld
push
jno
mov
cmp
pushf
and
jp
sbb
mov
mov
sub
mov
mov
and
mov
test
call
inc
ret
add
push
js
or
inc
add
repnz
push
jp
lea
add
dec
out
popf
in
dec
cmp
inc
add
xchg
inc
add
ret
scas
test
jle
pop
pop
inc
cmp
les
fdivs
dec
sub
sub
mov
xor
in
movsl
mov
xor
mov
or
enter
xor
test
sub
pusha
add
aam
sbb
mov
hlt
xor
clc
push
clc
popw
data16
mov
or
mov
sbb
cmpsb
das
push
mov
and
dec
inc
add
push
sub
cli
mov
ffree
add
mov
inc
sub
add
jae
push
sub
sbb
adc
mov
mov
shl
imul
add
outsl
cld
orl
je
xor
add
movb
mov
sub
xor
xchg
sub
out
pop
xlat
lock
push
add
ss
out
int
add
add
pop
cli
mov
inc
add
rolb
push
int
pop
add
dec
mov
add
and
cmpsl
push
pop
inc
add
aam
push
or
add
jne
sbb
mov
hlt
rol
movb
add
scas
inc
add
pop
jp
pop
incl
fisubrl
xor
addr16
pop
dec
mov
cld
push
or
push
add
addb
sub
jecxz
ja
ret
dec
pop
sub
insb
fldcw
stc
rclb
enter
or
sbb
outsb
add
shlb
lods
cs
dec
sbb
out
enter
insl
jp
pop
cmc
push
mov
mov
in
push
cmp
lea
lret
ss
mov
pusha
add
push
push
xor
add
out
sbb
dec
leave
out
nop
add
and
adc
cwtl
push
jmp
addb
add
out
jg
xchg
sub
add
dec
inc
pop
hlt
inc
add
mov
out
jmp
add
aaa
ret
jnp
add
clc
shlb
sbb
mov
movsb
push
add
dec
push
test
lods
invd
mov
aas
ret
push
mov
mov
roll
imul
shr
mov
mov
lea
adc
pop
test
push
stc
loopne
les
mov
add
mov
repnz
ds
push
jle
mov
mov
into
push
jmp
xchg
fistl
cmp
out
imul
clc
lods
sub
xor
sbb
stos
cmp
sbb
shl
les
fidivrs
enter
daa
sub
mov
mov
adc
sub
aaa
sub
jge
in
sahf
in
testl
mov
add
add
fwait
repnz
jmp
jbe
test
xchg
lret
das
inc
add
sahf
xchg
outsl
test
jge
inc
add
add
push
jb
dec
js
mov
xor
xchg
add
cwtl
xchg
shl
push
add
loopne
test
cmp
pop
rep
inc
add
loope
adc
add
in
pop
in
cmc
pop
lods
sahf
shll
popa
pop
scas
insb
xor
mov
lea
add
cwtl
xchg
cltd
mov
loope
or
sbb
dec
hlt
sub
adc
and
mov
loope
sahf
inc
add
pop
jo
ret
cmp
aam
enter
inc
add
repz
jle
pop
js
movsb
loop
add
stos
mov
fs
lods
mov
add
or
and
lock
or
pop
adc
hlt
cmp
inc
add
xchg
cmp
imul
lods
adc
adc
pop
mov
push
inc
movsb
or
mov
pop
dec
ja
lods
sub
packssdw
push
cmp
pop
jnp
add
pop
test
inc
jbe
pop
flds
movsb
sbb
cmp
lret
out
mov
icebp
cmc
outsl
popa
push
xchg
sahf
push
lcall
add
mov
mov
sbb
add
imul
add
pop
mov
pop
es
jle
add
xchg
sbb
cmp
ljmp
jl
mov
xchg
iret
addl
push
inc
xchg
add
les
mov
sub
lahf
mov
push
insl
aas
mov
add
movsl
mov
adc
add
jb
stos
inc
add
inc
mov
inc
add
cmp
inc
add
sbb
dec
addb
push
mov
and
xchg
pop
mov
or
sti
imul
jns
push
fwait
in
ror
test
jge
mov
test
lods
mov
test
fs
add
and
sbb
test
into
cmp
sarl
mov
cld
jnp
mov
push
mov
testb
insl
test
xchg
movsl
inc
add
cltd
pop
stos
xchg
insb
mov
mov
mov
rcrb
add
adc
lock
addl
add
fwait
lods
imul
cld
jg
scas
lock
cmpsl
xor
in
lods
xor
add
xchg
or
push
test
std
add
es
or
mov
ret
push
pop
or
sbb
mov
roll
repz
cmp
cmp
pop
fdivl
xchg
divl
add
shl
sub
or
or
jle
subl
inc
add
sub
push
push
sarl
push
mov
cltd
jns
mov
leave
dec
ret
leave
lds
mov
arpl
dec
imul
movsb
mov
lret
stos
mov
lcall
pop
mov
push
out
mov
push
ljmp
cli
into
push
addb
jo
jne
test
out
push
in
pop
xor
enter
scas
adc
stc
jp
add
repnz
xchg
cmpsb
and
or
add
sub
cwtl
int
add
les
fs
push
das
jb
cltd
xchg
mulb
add
add
daa
jp
mov
les
mov
xor
or
xor
mov
add
pop
pop
cmp
mov
je
out
cli
and
into
negb
jo
or
aam
mov
pop
xor
ss
cmp
add
jb
mov
call
clc
xchg
mov
jl
jnp
pop
fwait
jle
add
xor
cmp
mov
idivb
fwait
cmp
add
xchg
fnstenv
loop
dec
dec
inc
or
cmp
sub
icebp
xchg
sub
mov
ljmp
out
and
loope
mull
jp
pop
and
sub
cmpsl
mov
add
fsubrs
rcrb
adc
fwait
bound
stos
cmp
pop
les
stc
frstor
cmp
mov
mov
mov
into
mov
adc
push
das
mov
sarl
jns
and
add
push
lcall
fnstenv
popa
test
mov
xor
js
sub
xchg
sti
jb
or
or
push
push
push
inc
add
adc
mov
pushf
nop
test
add
cmp
scas
and
xchg
jecxz
ret
mov
pop
inc
sbb
sub
fmulp
pop
push
xor
sbb
add
add
jno
les
aad
inc
add
das
add
sbb
insb
mov
sub
mov
jb
cmp
aas
dec
out
out
or
and
inc
lds
ljmp
rcll
xlat
mov
lret
scas
jns
aam
lret
mov
fadds
cmp
cmp
fs
jb
sbb
nop
addb
aam
pop
jle
outsl
lods
mov
or
in
add
fisttpll
add
and
cmp
repnz
lret
pop
xor
pop
push
stos
int
mov
into
cld
lahf
mov
aas
subl
in
js
stc
mov
push
cmp
stos
rorb
ljmp
or
call
cmp
data16
outsb
in
lcall
cmpsl
adc
jbe
int
cli
int3
xchg
pushf
or
adc
icebp
mov
insl
xchg
jne
xor
negl
cmp
shrl
or
rorl
das
lods
repnz
mov
push
mov
mov
pop
dec
das
or
jns
xchg
test
arpl
inc
add
daa
mov
and
inc
out
pop
mov
out
lahf
iret
insb
loop
adc
pusha
add
inc
test
aad
xchg
jbe
push
push
pop
cmp
xchg
xchg
add
cli
pop
rorl
cld
mov
dec
jg
dec
sbb
dec
repz
mov
mov
add
pop
mov
xor
repnz
mov
int3
scas
fidivs
push
or
mov
je
add
add
or
insb
push
mov
add
test
or
in
es
push
mov
xchg
jnp
mov
inc
sbb
mov
add
cmc
dec
cmp
inc
icebp
daa
gs
sub
adc
loopne
add
mov
xor
add
push
xor
inc
ss
bound
fcoml
stos
roll
mov
add
les
push
jmp
add
cmp
rolb
sub
add
cmpsl
cs
add
iret
test
out
push
xor
jno
mov
push
xchg
pop
cwtl
ja
nop
shlb
arpl
sub
fildll
add
dec
pop
xchg
es
pop
rolb
scas
icebp
daa
mov
cmp
cmp
mov
shl
pop
cmp
stos
xchg
dec
repnz
xchg
movsl
sti
adc
or
mov
mov
ja
mov
jno
add
std
cld
add
addb
push
mov
arpl
add
pop
xor
add
addb
or
mov
cmpsb
in
jge
pop
adc
dec
and
adc
add
aas
lret
test
mov
sbb
filds
add
rolb
popf
and
xchg
mov
dec
push
jne
pop
push
cmp
lcall
rcrl
sbbl
outsb
cmp
in
sbb
xchg
pop
jno
jb
adc
cmpsl
jge
mov
and
dec
pop
jecxz
mov
mov
cmc
push
sahf
bound
mov
testb
xchg
addb
testb
scas
sbb
mov
sbb
sarl
xchg
cmp
movsb
test
pop
popa
aam
imul
cmp
fbstp
imul
clc
mov
ret
inc
add
mov
int
ja
fwait
scas
lods
mov
aas
cmp
jo
fs
and
push
pop
loope
ds
fidivrl
pusha
add
stos
sbb
xchg
xor
add
push
scas
jecxz
shrb
mov
stc
jb
fstps
push
mov
xchg
ret
add
or
mov
loop
pop
nop
jmp
or
add
stc
jb
clc
push
add
jg
fisubl
add
stc
jb
cwtl
idivl
mov
in
add
add
cmp
xchg
ret
mov
stc
jb
add
or
add
bound
add
mov
add
xor
push
sub
ret
add
mov
ret
push
lea
push
mov
xchg
ret
add
mov
dec
mov
stc
jb
add
add
fmull
test
add
stc
jb
inc
or
sbb
mov
xchg
ret
cli
add
inc
add
add
jb
add
xchg
add
mov
arpl
jg
stc
jb
add
stc
jb
add
add
loopne
mov
push
mov
xchg
ret
popf
add
add
addb
push
push
mov
xchg
ret
add
add
sbb
mov
xchg
ret
loope
add
add
ficoml
jmp
add
add
lcall
sarb
adcb
add
add
push
loop
jne
stc
jb
add
insb
insb
stc
jb
add
mov
jne
stc
jb
or
jg
add
nop
jmp
cmp
clc
add
sub
mov
insl
imul
nop
jmp
mov
inc
xchg
sub
and
add
add
inc
pop
lcall
push
add
arpl
push
add
add
jb
push
pop
rclb
xor
stc
jb
data16
or
incb
xchg
ret
xchg
repnz
add
movsb
xor
out
test
adc
jb
flds
add
leave
push
mov
xchg
ret
data16
add
arpl
jne
push
mov
xchg
ret
insl
push
add
mov
stc
jb
rcr
inc
push
cmpsb
pop
mov
nop
jmp
add
or
les
jb
add
add
sub
repnz
jmp
add
add
add
jg
add
push
stc
jb
add
cli
add
add
stc
jb
add
add
add
add
in
add
add
stc
jb
add
add
add
add
jb
repnz
adc
jns
stc
jb
add
add
add
arpl
movb
inc
add
mov
cmp
add
add
mov
xchg
ret
add
mov
xchg
sub
jb
add
add
mov
mov
stc
jb
mov
or
mov
xchg
ret
hlt
lahf
add
or
gs
mov
xchg
jmp
mov
xchg
ret
cltd
add
add
add
mov
ja
arpl
adc
into
in
inc
add
imul
push
outsb
push
nop
jmp
or
mov
add
jae
inc
cmp
popa
add
jb
add
popl
or
lret
add
jne
bound
movb
mov
stc
jb
in
add
add
rcrl
insb
inc
jb
stc
jb
add
mov
mov
push
mov
xchg
ret
mov
jmp
stc
jb
push
add
add
jb
dec
add
jne
aad
ret
mov
nop
jmp
mov
imul
addb
add
sahf
push
mov
add
add
add
jbe
inc
sbb
icebp
nop
jmp
loopne
add
cli
imul
inc
add
add
mov
jmp
jg
add
jne
xchg
inc
sub
lret
add
mov
inc
add
add
add
jb
add
insb
subl
stc
jb
add
or
call
jb
or
add
xchg
fisubl
or
and
add
cwtl
inc
dec
add
add
stc
jb
add
std
mov
push
mov
xchg
ret
add
add
jne
nop
jmp
inc
fnstcw
add
dec
push
mov
xchg
ret
mov
add
arpl
add
jb
div
repnz
movb
mov
stc
jb
add
add
rep
stc
jb
add
add
mov
xor
fiadds
inc
add
push
add
adc
add
xchg
ret
mov
cmp
loopne
jmp
nop
jmp
add
dec
add
push
jmp
add
add
jb
add
push
add
pop
pop
stc
jb
cmp
arpl
fcmovb
nop
jmp
inc
dec
add
lret
add
push
stc
jb
pop
add
mov
pop
stc
jb
add
add
mov
mov
mov
push
mov
xchg
ret
add
add
mov
stc
jb
add
cmp
sbb
lock
add
add
add
add
stc
jb
flds
add
push
push
ja
mov
mov
xchg
ret
add
lahf
mov
inc
add
inc
movzwl
stc
jb
loope
add
fcomps
mov
xchg
ret
mov
dec
je
stc
jb
mov
stc
jb
cli
pop
imul
push
add
push
push
mov
xchg
ret
add
lret
lods
push
push
mov
xchg
ret
add
add
add
test
sbb
add
jb
jg
add
and
jmp
add
add
je
stc
jb
add
add
push
mov
xchg
ret
sub
lcall
stc
jb
push
add
add
mov
stc
jb
add
imul
sbb
xor
add
stc
jb
add
add
stc
jb
add
mov
stc
jb
xchg
add
mov
call
add
mov
inc
and
jb
add
repnz
mov
push
mov
xchg
ret
ja
push
ja
add
aaa
inc
sbb
aas
stc
jb
add
add
lcall
repnz
add
fisttps
add
xchg
ret
add
jg
arpl
xchg
mov
mov
push
mov
xchg
ret
sub
mov
stc
jb
loope
clc
xchg
in
jp
fmull
test
jb
add
add
push
push
mov
xchg
ret
add
add
xchg
jb
fists
mov
xchg
ret
add
mov
push
mov
xchg
ret
add
stc
jb
lahf
mov
outsw
add
stc
jb
repnz
add
jg
hlt
xchg
push
add
nop
jmp
add
rclb
add
xchg
ret
xchg
or
mov
stc
jb
add
rolb
mov
sub
push
sub
andb
add
add
add
inc
inc
sbb
loope
jb
jg
add
call
stc
jb
add
insl
adc
jb
mov
add
jae
jmp
loopne
cwtl
insl
hlt
call
jb
loopne
add
jmp
jg
push
add
flds
add
call
nop
jmp
add
mov
push
jb
jb
shr
lahf
lahf
push
adc
lea
push
mov
xchg
ret
cwtl
add
cmpw
nop
jmp
add
add
push
mov
xchg
ret
add
inc
xor
stc
jb
push
add
xchg
add
jg
enter
mov
arpl
add
insl
pop
stc
jb
jne
add
add
push
popl
test
push
add
ds
stc
jb
add
add
add
popa
nop
jmp
add
cmp
xchg
stc
jb
fiaddl
add
pop
jmp
stc
jb
xchg
imul
push
mov
stc
jb
mov
push
add
sar
incl
add
xchg
mov
ret
stc
jb
mov
add
add
add
or
jp
xchg
add
clc
add
jmp
nop
jmp
jg
mov
cwtl
cltd
add
mov
push
push
stc
jb
cwtl
ja
mov
xor
stos
push
mov
xchg
ret
mov
imul
add
add
dec
cwtl
cwtl
je
nop
jmp
or
mov
les
push
inc
jno
dec
pop
push
mov
xchg
ret
push
add
add
loopne
stc
jb
xchg
dec
add
add
inc
lret
mov
stc
jb
repnz
or
jb
testl
out
mov
nop
jmp
add
add
add
add
sub
stc
jb
cwtl
arpl
xor
testl
nop
jmp
add
jb
add
add
add
push
sub
add
inc
add
add
add
nop
jmp
sub
in
data16
ja
add
iret
mov
stc
jb
inc
add
mov
das
mov
stc
jb
hlt
inc
addb
lretw
je
add
jb
add
add
jmp
add
xchg
add
rcll
or
xchg
ret
mov
call
stc
jb
test
xchg
sub
add
xchg
ret
subb
notl
cmp
mov
xchg
ret
add
jne
add
or
add
xchg
add
pop
sub
mov
fsts
ss
pop
stc
jb
add
add
mov
push
mov
xchg
ret
add
add
stc
jb
add
add
mov
add
es
incl
mov
add
sbb
incl
xchg
ret
add
pop
loopne
mov
push
mov
xchg
ret
inc
arpl
mov
xchg
ret
add
repnz
mov
stc
jb
mov
loopne
js
adc
jb
mov
adc
mov
stc
jb
add
add
xorb
incl
cli
add
add
add
adc
incl
add
add
or
jb
hlt
inc
lahf
add
add
movzwl
stc
jb
lcall
mov
stc
jb
cli
or
mov
inc
sub
jb
add
arpl
mov
stc
jb
or
add
fstps
pushf
testb
sub
ret
add
inc
imul
adc
jb
add
add
xchg
sbb
pop
stc
jb
add
arpl
add
add
shr
mov
stc
jb
add
add
dec
sub
imul
stc
jb
add
cmp
mov
push
sldt
loope
clc
repnz
xor
add
push
add
je
stc
jb
add
xchg
flds
dec
cmp
jb
push
fincstp
mov
mov
dec
cmp
jb
sub
arpl
add
loop
add
stc
jb
add
add
xchg
push
call
orb
add
mov
rcl
push
nop
jmp
add
add
add
sub
mov
loope
add
hlt
hlt
add
adc
js
clc
push
mov
xchg
ret
push
popl
add
cmpsb
idiv
stc
jb
add
push
stc
jb
sub
cmp
pop
mov
stc
jb
add
push
add
add
push
mov
xchg
ret
add
pop
push
stc
jb
mov
lcall
stc
jb
add
loopne
add
jb
sub
cld
stc
stc
jb
add
insl
loopne
push
stc
jb
mov
xchg
add
mov
jmp
xor
add
add
sub
cmp
add
pop
add
jg
add
test
nop
jmp
or
add
or
cmp
imul
cltd
adc
add
xchg
add
aad
inc
add
mov
popl
nop
jmp
xchg
or
cmp
rolb
jg
or
stc
jb
testl
in
push
stc
jb
mov
dec
push
lcall
ret
in
add
add
push
flds
jb
add
rclb
add
mov
mov
xchg
ret
rolb
mov
or
stc
jb
pop
lret
add
lretw
push
stc
jb
lds
or
loopne
or
add
push
mov
xchg
ret
add
add
jns
push
mov
xchg
ret
inc
add
ja
add
nop
jmp
add
add
ret
and
push
cmp
sar
jb
lret
jp
add
not
push
mov
xchg
ret
add
inc
adc
jb
ja
or
imul
hlt
incl
inc
add
data16
add
jb
lahf
push
jp
fisttps
test
incl
repnz
clc
add
mov
jb
loope
add
push
add
cmp
stc
jb
add
add
mov
push
pushf
lea
nop
jmp
add
add
push
loopne
add
push
mov
xchg
ret
add
inc
push
sub
mov
xchg
ret
hlt
mov
add
sbb
pop
or
add
add
add
inc
add
hlt
in
imul
stc
jb
mov
fidivrl
push
stc
jb
jp
cli
popl
add
add
add
or
jb
rclb
add
sbbl
mov
stc
jb
mov
cli
xchg
int
push
or
jb
sub
repnz
mov
sahf
push
stc
jb
lahf
add
add
arpl
cmp
jb
inc
jg
xchg
add
add
sbb
jb
add
add
add
mov
add
clc
pushw
lcall
rcll
add
lcall
jb
or
add
in
add
pop
mov
nop
jmp
loopne
add
jbe
stc
jb
add
sub
ja
fisttpll
mov
sub
jb
add
insl
add
mov
sbb
inc
add
mov
test
jb
hlt
addb
add
stc
jb
inc
add
or
push
addb
fmull
adc
add
add
data16
cmc
inc
fisttpl
adc
inc
add
push
add
push
stc
jb
xchg
push
add
jne
or
adc
jne
stc
jb
cmp
mov
stc
jb
ja
loope
lcall
out
add
add
aam
test
je
js
mov
xchg
ret
add
add
stc
jb
lahf
add
addb
sub
inc
and
jb
mov
add
popa
add
jmp
add
add
ja
add
scas
rep
stc
jb
push
cltd
mov
jmp
add
stc
jb
add
cmp
mov
add
add
add
jo
sub
jb
rolb
push
add
pusha
add
push
xor
lock
loop
push
stc
jb
add
add
add
mov
stc
jb
cmp
cli
icebp
adcl
add
add
jb
xchg
or
jb
sub
fimull
lret
add
stc
jb
add
jne
add
push
mov
xchg
ret
dec
add
pop
mov
mov
stc
jb
loope
add
mov
jb
add
lahf
divl
dec
rep
stc
jb
insl
clc
data16
add
jb
and
and
mov
stc
jb
add
add
lcall
inc
add
add
loopne
mov
sub
stc
jb
push
add
lret
test
aas
adc
incl
xchg
add
add
inc
add
sbb
and
add
add
add
xchg
push
cwtl
mov
stc
jb
xchg
add
in
testl
add
jb
add
add
jne
mov
pop
repnz
jmp
mov
add
out
call
stc
jb
sub
in
lahf
cmp
dec
adc
jb
jg
add
or
hlt
out
add
push
mov
xchg
ret
add
add
cmc
sbb
cmc
inc
add
add
mov
xchg
ret
mov
jp
outsb
and
mov
xchg
ret
mov
fwait
test
nop
jmp
lds
mov
stc
jb
cmp
add
mov
loopne
mov
jb
sub
add
add
xchg
jg
dec
cmp
jb
add
add
add
inc
add
stc
jb
add
add
add
or
stc
jb
add
je
jmp
nop
jmp
mov
data16
mov
sti
add
lcall
add
jg
inc
or
jb
push
add
add
add
call
stc
jb
push
mov
data16
icebp
inc
add
sub
or
stc
jb
add
mov
nop
jmp
add
add
decl
push
mov
xchg
ret
add
sarb
stc
jb
push
xchg
add
add
push
nop
jmp
add
add
add
or
mov
cmpsb
ljmp
add
cld
mov
stc
jb
add
repnz
mov
push
mov
xchg
ret
add
popf
mov
stc
jb
mov
dec
push
nop
jmp
pop
arpl
cli
inc
add
adc
stc
jb
xchg
add
aad
mov
stc
jb
add
popa
stc
jb
mov
jg
add
mov
stc
jb
cltd
lcall
or
add
jb
add
add
stc
jb
add
add
mov
push
mov
xchg
ret
repnz
jbe
add
stc
jb
loopne
jne
sub
lods
push
push
mov
xchg
ret
mov
stc
pop
push
mov
xchg
ret
add
add
add
mov
push
mov
xchg
ret
add
stc
add
stc
jb
lahf
jg
add
add
jno
nop
jmp
add
cmp
mov
call
stc
jb
add
cmp
mov
xchg
ret
in
add
xchg
nop
jmp
inc
mov
add
push
stc
jb
xchg
inc
add
flds
addr16
clc
arpl
add
add
fisubrl
loopne
mov
pop
stc
jb
or
add
jp
loope
inc
add
or
mov
push
stc
jb
xchg
add
xchg
mov
mov
push
stc
jb
in
add
add
mov
jb
add
repnz
incl
dec
lds
add
out
cmp
nop
jmp
push
add
mov
push
push
mov
xchg
ret
testl
fstl
jb
add
cmp
cs
stc
jb
add
add
jp
push
shrl
je
stc
jb
jp
mov
jmp
stc
jb
add
jg
push
add
nop
jmp
lret
flds
mov
add
jno
addr16
in
add
mov
add
out
push
nop
jmp
add
sub
roll
jmp
sarb
add
out
mov
stc
jb
jg
xor
or
cmp
jb
jne
add
adc
sub
inc
cmp
mov
xchg
ret
add
insl
leave
jne
stc
jb
jne
mov
jae
stc
jb
rolb
sub
push
inc
popf
sub
nop
jmp
add
ja
rolb
mov
stc
jb
hlt
hlt
cmp
es
stc
jb
or
add
stc
jb
or
fiaddl
clc
add
mov
push
mov
xchg
ret
mov
push
push
mov
xorb
incl
add
mov
add
stc
jb
add
add
cmpw
stc
jb
clc
add
nop
add
add
jb
add
add
nop
jmp
add
add
add
add
stc
jb
add
imul
imul
incl
loopne
push
add
jne
and
repnz
jb
add
cmp
add
icebp
pop
mov
stc
jb
push
or
repnz
negl
pusha
push
mov
xchg
ret
imul
aaa
insb
je
stc
jb
add
leavew
add
stc
jb
add
lds
leave
xor
nop
jmp
add
data16
add
jmp
inc
stc
jb
sub
popf
add
push
stc
jb
xchg
add
add
add
jbe
xchg
xor
aad
shl
stc
jb
add
mov
add
stc
jb
push
lret
or
xor
stc
jb
testl
push
movzwl
nop
jmp
add
loopne
or
mov
jb
imul
dec
add
jb
xchg
add
arpl
ret
mov
addb
push
inc
add
add
movb
popa
stc
jb
add
add
mov
mov
stc
jb
lahf
loopne
mov
ljmp
add
call
add
push
mov
xchg
ret
mov
mov
nop
jmp
mov
add
add
jb
lcall
jae
fistpl
jb
add
add
add
add
ljmp
incl
push
arpl
add
add
enter
jmp
add
add
xchg
mov
movb
popa
stc
jb
mov
add
cmp
jmp
add
add
add
mov
and
nop
jmp
add
add
cltd
mov
stc
jb
mov
add
cltd
add
lods
push
mov
xchg
ret
sub
push
hlt
jae
add
jb
add
mov
push
push
mov
xchg
ret
xchg
add
xchg
or
mov
stc
jb
add
mov
jecxz
mov
push
mov
xchg
ret
mov
mov
sar
sbbb
cli
rcll
jmp
and
add
lret
pop
stc
jb
mov
add
add
mov
push
nop
jmp
push
add
or
add
rclb
hlt
inc
add
add
xor
cmp
nop
jmp
cmp
sbb
pop
std
fiaddl
lcall
stc
jb
push
xchg
add
add
inc
xchg
fstl
jmp
add
add
cmp
test
out
stc
jb
ja
add
jae
fmuls
test
and
add
testl
xchg
icebp
inc
add
add
push
mov
stc
jb
sub
or
push
stc
jb
inc
add
imul
jb
mov
mov
lret
movsl
cmc
incl
xchg
jg
add
sub
lea
nop
jmp
flds
add
mov
push
mov
xchg
ret
loopne
ja
push
cmp
icebp
nop
jmp
sub
in
or
lahf
popl
cltd
mov
nop
jmp
fidivrl
insb
mov
stc
jb
add
cli
xchg
add
mov
push
mov
xchg
ret
add
lret
or
stc
jb
add
add
test
add
add
stc
jb
shl
push
add
mov
xchg
ret
add
jne
ds
stc
jb
add
data16
stos
jl
nop
jmp
mov
add
push
mov
xchg
ret
lahf
add
sbb
stc
jb
inc
add
push
xchg
add
push
stc
jb
loopne
mov
mov
add
sbb
jmp
testl
add
push
nop
jmp
add
add
add
pop
and
mov
dec
nop
jmp
mov
lahf
add
xchg
add
inc
mov
push
add
mov
stc
jb
loope
add
lcall
stc
jb
add
xchg
cmpl
add
add
lds
add
jmp
add
add
add
cmp
mov
xchg
ret
add
mov
add
stc
jb
add
add
sbb
call
lcall
or
aam
stc
jb
mov
adc
rcr
push
push
mov
xchg
ret
data16
add
add
stc
jb
xchg
add
cltd
add
ja
add
nop
jmp
add
add
mov
in
xor
stc
jb
add
add
push
sbb
sar
sub
incl
inc
add
mov
push
mov
xchg
ret
add
fsts
adc
jb
cmp
orb
test
repz
stc
jb
jp
in
jo
and
mov
stc
jb
pop
hlt
xor
add
jb
jg
ja
add
add
or
rclb
mov
dec
add
or
jmp
in
in
cmp
imul
dec
push
nop
jmp
pop
add
xchg
clc
add
push
leave
jne
stc
jb
cltd
mov
out
push
nop
jmp
mov
pop
jne
lcall
data16
jmp
push
add
inc
addb
add
nop
jmp
add
in
or
stc
jb
or
mov
data16
and
push
mov
xor
add
stc
jb
add
or
popa
add
jb
add
loope
and
nop
jmp
add
mov
and
mov
lahf
in
incl
add
xchg
add
mov
stc
jb
notl
add
cs
stc
jb
fisubrl
add
pop
add
ret
push
and
add
jb
incl
add
push
add
xchg
in
shrl
ljmp
jg
ja
push
cwtl
and
push
mov
xchg
ret
cwtl
imul
cmpb
sub
repz
jne
stc
jb
mov
rcrb
jb
add
add
add
in
stc
jb
add
ret
push
push
mov
xchg
ret
add
add
jne
mov
push
mov
xchg
ret
add
push
mov
xchg
ret
pop
push
add
loopne
cld
pushl
nop
jmp
xchg
lahf
add
inc
sub
stc
jb
add
add
gs
outsb
stc
jb
repnz
lcall
jb
add
popl
add
cmc
sti
popa
push
mov
xchg
ret
flds
mov
movsl
icebp
or
mov
xchg
ret
mov
loopne
pop
push
mov
xchg
ret
add
push
inc
add
repnz
icebp
add
add
add
add
push
mov
xchg
ret
or
add
or
out
incl
or
ja
cwtl
push
cmp
add
stc
jb
or
data16
dec
push
stc
jb
add
add
rorb
test
fs
cmp
push
mov
xchg
ret
add
add
mov
mov
mov
xchg
ret
push
mov
movsb
stc
jb
add
add
arpl
fucomp
or
call
jmp
add
mov
jmp
hlt
data16
add
jmp
xchg
popf
cmp
sub
stos
stc
jb
add
add
add
push
je
sub
jb
lahf
dec
add
stc
jb
push
cli
add
push
rol
add
mov
add
fists
jo
add
mov
subb
incl
popl
jge
add
nop
jmp
push
xchg
add
jne
nop
jmp
xchg
add
add
push
mov
xchg
ret
in
shrb
push
jnp
stc
jb
add
dec
add
push
mov
mov
stc
jb
add
js
mov
push
mov
xchg
ret
add
lcall
jb
or
mov
add
mov
jne
jb
shlb
add
and
jb
add
push
stc
jb
or
mov
add
or
incl
imull
add
mov
out
sub
push
mov
xchg
ret
cmp
popa
add
mov
xchg
ret
inc
add
out
xor
dec
dec
stc
jb
dec
add
pop
mov
add
ret
jp
mov
and
xor
add
mov
dec
add
mov
xchg
ret
adcb
mov
xchg
ret
jp
mov
xchg
fildl
sti
nop
jmp
idiv
hlt
add
add
nop
jmp
push
popf
mov
add
lea
hlt
clc
inc
add
loopne
idivb
sar
jb
imul
push
inc
add
push
jb
jb
xchg
xchg
add
int3
shl
stc
jb
add
mov
imul
incl
data16
cmp
add
mov
stc
jb
data16
add
jb
lahf
decl
stc
jb
xchg
or
add
mov
in
add
add
test
pop
add
aad
pushl
stc
jb
loopne
mov
or
popa
add
jb
add
xchg
push
inc
pop
and
push
mov
xchg
ret
add
loopne
mov
push
mov
xchg
in
call
out
pop
mul
insb
xor
jmp
flds
clc
add
add
idivl
shl
push
mov
xchg
ret
jne
xchg
add
pop
mov
nop
jmp
add
cmp
lea
in
incl
add
add
cltd
xchg
std
inc
stc
jb
pop
mov
add
imul
jmp
loopne
add
cwtl
loopne
and
stc
jb
push
add
or
mov
xchg
ret
add
repnz
or
mov
xchg
ret
add
insl
inc
loope
add
mov
stc
jb
add
add
jmp
stc
jb
mov
add
fwait
push
stc
jb
cltd
testl
add
add
incl
cmp
dec
lds
push
repnz
ljmp
add
add
add
stc
xor
push
mov
xchg
ret
loopne
add
test
push
mov
xchg
ret
mov
adc
jmp
in
cltd
add
inc
jg
cmp
popf
idiv
call
loopne
jp
cmp
lds
mov
stc
jb
add
add
imul
jb
mov
pop
xchg
and
popa
adc
mov
stc
jb
arpl
movsb
int
test
jb
jp
or
jecxz
inc
stc
jb
add
add
sub
jb
add
rcrb
xchg
nop
jmp
add
dec
add
add
add
push
mov
xchg
ret
lcall
ficoms
ljmp
inc
loopne
add
push
or
pop
mov
push
mov
xchg
ret
cmp
pushl
stc
jb
inc
add
add
add
cli
pop
push
mov
xchg
ret
push
mov
and
stc
jb
add
sbb
movsb
stc
jb
mov
add
mov
test
call
decl
add
mov
stos
stc
jb
lds
or
add
rep
nop
jmp
lcall
xchg
repz
loopew
movzwl
stc
jb
add
lahf
shl
sub
sub
call
push
jp
dec
cmp
jmp
add
add
jo
incl
add
cli
add
add
xor
stc
jb
add
mov
pop
inc
adc
jae
inc
add
add
in
mov
clc
push
stc
jb
mov
cmpl
nop
jmp
xchg
push
or
push
cmp
push
push
mov
sub
inc
inc
add
incl
cmp
mov
loopne
stc
jb
popl
add
lea
stc
jb
add
or
out
push
push
mov
xchg
ret
add
pop
push
stc
jb
add
add
addb
add
stc
jb
lret
add
xchg
and
sub
jb
add
dec
add
inc
push
mov
xchg
ret
add
add
mov
add
stc
jb
add
loopne
add
call
stc
jb
popf
lret
fwait
cld
push
mov
xchg
ret
data16
or
mov
fdivr
stc
jb
testl
and
push
mov
xchg
ret
mov
jb
clc
add
add
jp
mov
jb
lret
add
popl
add
add
stc
jb
lcall
mov
stc
jb
jne
xor
xor
stc
jb
add
add
les
stc
jb
add
xor
mov
enter
push
mov
xchg
ret
mov
cld
cmc
stc
jb
pop
jl
xchg
add
add
jb
idivl
inc
aam
call
stc
jb
loope
add
jb
data16
ficompl
sarb
add
sub
add
popa
add
jge
push
push
mov
xchg
ret
add
insl
inc
sub
jmp
mov
xchg
inc
pop
mov
cmp
nop
jmp
add
inc
mov
lret
lea
stc
jb
add
add
push
decl
mov
adc
jb
popf
cmp
push
or
lods
jmp
lcall
aam
push
mov
add
add
add
add
sahf
mov
fidivl
add
aas
xchg
stos
adc
pop
ja
mov
pusha
add
js
rolb
sahf
lods
dec
push
fistpl
mov
rorl
ret
stc
movb
shr
mov
bound
add
jecxz
test
xor
js
aad
cmp
or
cmp
add
aaa
jp
cmp
popf
mov
adc
hlt
add
in
test
adc
jnp
cmp
sub
dec
outsb
pop
cli
cmpsl
addb
lret
fs
push
sub
jnp
mov
dec
xlat
dec
push
add
orl
mov
sbb
dec
fcmove
movsl
das
mov
inc
add
mov
jmp
xchg
mov
inc
add
mov
cmc
jno
iret
iret
jl
inc
lods
lds
jb
cmp
and
jne
and
cmpsl
lcall
outsl
inc
insl
cmp
inc
ss
push
cltd
fstpt
lahf
jg
push
jge
inc
add
and
add
and
xchg
sti
xchg
push
xor
add
push
aas
bnd
insb
in
std
xor
lret
inc
add
pop
daa
outsb
adc
pop
sub
inc
add
pushf
rolb
out
cmp
sub
cmp
daa
stc
stos
lock
ljmp
push
pop
sub
insb
mov
es
loop
or
loope
dec
push
movb
add
test
xor
jno
inc
add
sbb
rolb
in
ret
addb
mov
mov
int
push
ja
add
xorl
lahf
add
inc
add
out
out
cmp
dec
je
les
repz
mov
add
movsl
dec
lock
outsl
cli
lret
mov
push
pop
mov
icebp
imul
rcrl
mov
lea
jmp
repz
adc
pop
mov
xor
push
loopne
lret
lret
ljmp
push
stos
sub
stc
cwtl
and
add
icebp
xlat
rolb
add
add
or
dec
pop
fsubrl
pop
daa
pop
cltd
cmpsl
xchg
insb
lret
outsb
das
mov
inc
add
test
nop
pop
xchg
xchg
je
out
aas
dec
mov
or
jb
dec
ds
ljmp
sbb
lret
popl
loope
das
lret
or
inc
lahf
mov
jb
mov
jecxz
or
inc
add
xchg
sbb
scas
push
inc
add
lods
sub
arpl
hlt
jne
sub
adc
inc
add
call
sub
add
rcl
or
cmp
add
fildl
add
stc
xchg
cmc
add
push
ret
movsl
lret
imul
xchg
rcrl
bound
out
mov
push
sub
movsb
sti
fwait
push
popf
lcall
and
lock
insb
mov
sahf
xchg
popf
je
pop
fcoml
out
push
loope
stos
add
adc
mov
jmp
add
leave
inc
add
lcall
movb
or
xchg
push
aas
pop
sbb
out
fnstsw
push
mov
fisttpl
mov
jmp
addb
int
inc
add
mov
push
dec
xchg
jns
adc
scas
pop
mov
xchg
mov
xchg
mov
push
xor
mov
xor
sub
cmpsb
aam
ds
rorl
dec
jb
adc
leave
cmp
cli
and
test
insl
rcl
and
popf
loop
loop
or
movsb
divb
ss
or
rolb
jle
addr16
mov
das
xor
pop
shr
lods
xor
incl
push
cs
push
imul
sahf
cmp
add
add
dec
imul
cli
sbb
fwait
mov
nop
push
mov
adc
fwait
adc
lods
push
notrack
daa
push
sbb
dec
movb
add
rorb
pop
or
or
inc
add
add
jno
test
cltd
iret
out
loopne
sbb
pop
and
xchg
lock
inc
xor
fcmovnu
jge
mov
add
call
add
pop
or
in
notl
aas
sub
xor
add
jecxz
mov
xor
mov
jnp
jno
call
lods
mov
addb
cwtl
ljmp
mov
mov
pop
add
or
aad
frstor
outsl
dec
aas
rorl
scas
sbb
shrb
push
movl
add
sub
push
mov
cmp
mov
add
or
dec
push
aas
sti
sahf
jne
xchg
insl
cwtl
cmp
add
push
mov
mov
pop
sub
in
loope
cmp
add
add
jo
mov
add
aad
movsb
int
test
pop
addb
cmp
add
mov
int3
and
pop
cmp
add
mov
mov
data16
inc
add
push
inc
roll
push
inc
xchg
xchg
sbb
loopne
inc
add
add
add
adc
das
notb
into
dec
dec
inc
add
xchg
mov
add
mov
std
inc
jg
xchg
xor
xorl
jbe
mov
xchg
fsubrl
mov
insl
icebp
jns
cmp
mov
cs
cs
xchg
and
inc
pop
ja
push
inc
add
add
pushf
dec
inc
add
or
push
mov
imul
pusha
add
mov
cmc
xchg
sti
mov
repz
dec
iret
loop
mov
push
mov
sub
sahf
mov
xlat
sbb
mov
sbb
loop
cmp
lods
cmp
filds
mov
ds
adc
mov
aad
add
pop
cmp
rorl
mov
int3
jge
pop
mov
xchg
jecxz
insb
xor
in
inc
add
mov
loope
add
je
jae
aaa
clc
dec
jnp
push
fmull
cmp
add
out
jle
lock
stos
dec
mov
lds
cmp
scas
sti
addb
sbb
add
xor
add
inc
add
mov
jl
or
stos
shrl
cmp
xchg
test
aam
js
xor
test
test
adc
ret
sti
fwait
dec
mov
bound
or
and
push
rcl
outsb
out
lahf
inc
add
shrb
mov
push
fs
add
sbb
xor
add
shrb
push
insb
xchg
bound
repnz
ds
cmp
xchg
cli
repnz
push
iret
push
in
sbb
or
aaa
test
ljmp
add
fidivl
jle
add
sahf
sbb
flds
add
jl
scas
aad
push
add
shll
addb
and
push
nop
out
lcall
ss
add
mov
sub
insb
inc
add
jge
fbld
jae
fwait
pop
mov
pop
in
aad
sbb
push
add
aam
mov
daa
ret
hlt
push
xor
dec
mov
cmpsb
pop
lds
or
and
fisubs
jb
addb
cmpsb
jge
fdivrs
sbb
popf
push
gs
xchg
jne
cltd
jnp
or
js
cwtl
add
dec
iret
fbld
add
mov
add
pop
mov
int
imul
movsl
push
inc
add
sbb
or
out
pushf
cmc
dec
mov
mov
in
and
sub
push
out
testb
jg
sbb
mov
sub
sbb
xor
outsl
and
aaa
ss
rorl
pop
push
and
inc
hlt
sub
add
or
mov
adc
add
sahf
push
mov
outsb
mov
add
lods
stc
imul
cmovne
xor
loop
inc
add
iret
cmp
mov
jmp
dec
aad
sarb
mov
test
test
xchg
inc
and
movq
inc
ret
push
ja
xchg
mov
add
cmp
test
out
mov
sbb
pushf
fwait
jns
outsl
lret
or
cmp
popa
push
mov
add
xor
add
add
adc
aaa
jle
add
inc
add
out
in
or
add
dec
jbe
out
out
andnps
pusha
add
cli
std
movsl
movsb
push
mov
mov
push
jp
mov
jg
jecxz
mov
imul
xchg
pop
mov
xchg
call
xorl
add
les
mov
add
orl
pop
mov
add
int
add
cwtl
pop
pop
mov
sti
dec
fwait
add
jo
jge
pop
sub
addr16
add
or
jmp
xor
or
mov
mov
scas
pop
and
dec
mov
int
int3
push
shll
mov
and
fidivrs
scas
lock
jl
fadds
push
sbb
push
pop
aam
shll
jb
add
add
dec
arpl
fidivs
movsb
mov
add
sub
adc
subl
cmp
pop
mov
pop
test
movsl
pcmpeqb
fisubl
loope
add
mov
imul
addb
add
jo
in
cld
mov
leave
pusha
add
lret
sbb
mov
aad
jno
xchg
mov
cwtl
ss
cmp
out
enter
or
add
jg
incl
std
adc
push
int
aad
mov
add
bound
bound
mov
sahf
xchg
jg
das
inc
or
sbb
ja
mov
mov
sub
add
call
in
in
addb
movsl
pushf
out
insl
stos
jmp
jecxz
mov
xor
adc
sahf
enter
mov
clc
pop
cmc
rorl
stos
dec
jbe
pop
pop
push
cmpsb
daa
pop
and
fstpt
jne
push
mov
add
call
cmp
lock
xor
push
movsl
clc
jo
rolb
add
bnd
nop
dec
mov
cmp
add
mov
push
dec
dec
sahf
call
push
and
repz
add
insb
xchg
rcr
add
or
aas
pop
dec
sbb
hlt
stos
xchg
les
mov
cmp
add
clc
sbb
int
mov
fldl
mov
fidivrl
out
out
notrack
mov
dec
stos
pushf
mov
xor
pusha
add
sbb
sarb
jecxz
jp
xor
addb
mov
out
push
adc
es
fwait
xlat
icebp
pop
scas
and
pusha
add
movsl
add
cmp
dec
addb
mov
push
and
inc
dec
aas
sbb
jae
add
out
add
cmpsb
sti
bndstx
dec
lea
or
addb
dec
fwait
jl
pop
lret
add
or
dec
jo
aas
mov
or
mov
xchg
mov
mov
dec
adc
inc
add
getsec
popa
adc
xchg
pop
mov
ret
mov
sbb
arpl
popa
mov
jmp
mov
sub
and
test
fldt
sub
ljmp
les
notl
xchg
js
pop
mov
adc
rcl
insl
into
cli
mov
call
cltd
xor
fwait
insb
test
fstpt
mov
outsb
jmp
icebp
dec
lods
mov
aad
add
int3
push
add
push
sbb
inc
pop
dec
mov
jae
test
fbld
mov
cmpl
add
fs
mov
add
mov
sbb
lock
xor
add
mov
call
cmp
jo
xor
mov
stc
mov
pop
pop
pushf
jg
pop
lock
fistl
add
add
shlb
ror
cmc
and
ret
xor
mov
test
dec
jle
icebp
jo
mov
add
mov
lret
cmp
add
jb
dec
sbb
cs
test
outsl
inc
roll
inc
add
rcl
jae
add
and
in
or
jp
enter
out
shlb
xor
add
or
loop
xchg
stos
jg
movsb
xchg
inc
add
xlat
aaa
icebp
push
jge
push
in
in
outsl
cmpsb
sub
inc
add
mov
fdivl
pop
int
jae
jmp
mov
add
dec
inc
add
cmpsb
and
out
fs
add
dec
movb
inc
add
mov
add
bnd
loope
add
pop
xor
pushf
lods
daa
call
lods
push
movb
cmp
lcall
outsb
stos
les
mov
jmp
push
push
test
add
icebp
push
rcrl
mov
andl
sarl
jno
jl,pt
fistl
cwtl
add
scas
ret
lcall
popf
ljmp
mov
in
xchg
cs
xchg
ret
add
dec
notb
stc
dec
push
int
xor
mov
xchg
das
pop
addb
movsl
repnz
js
loope
mov
mov
cmp
int
xchg
ret
scas
leave
adc
mov
adc
in
into
mov
mov
and
add
jae
ds
and
adcl
cld
in
in
lahf
xor
push
dec
xchg
and
and
sbb
stos
inc
add
insb
mov
fistpll
in
addl
mov
push
sub
mov
or
hlt
ror
mov
out
fcomps
adc
sub
mov
inc
add
xor
dec
jne
aas
loopne
jae
in
repnz
sti
imul
add
add
jb
dec
iret
dec
movsb
pop
sbb
pusha
add
repz
inc
add
movb
jb
adc
fwait
mov
and
and
ret
adc
add
stos
xor
adc
push
pop
mov
pop
xor
cwtl
pop
jecxz
add
jg
inc
push
test
sub
imul
add
mov
add
lret
addb
mov
das
sarl
push
and
mov
push
ficomps
cli
insl
push
push
add
leave
ss
add
jmp
mov
add
fimuls
sub
add
xchg
mov
dec
sub
ja
gs
aam
popf
call
pop
pop
xchg
and
inc
add
xorl
sbb
and
movsl
pop
xor
mov
cld
ja
mov
cwtl
cmc
mov
add
pop
xor
mull
movb
movb
out
mov
mov
into
add
or
dec
lahf
roll
xchg
popa
xacquire
and
adc
jne
lods
mov
or
movsl
jns
in
add
adc
push
push
scas
clc
frstor
insl
cld
inc
out
fisubs
lret
push
mov
xchg
and
imul
insb
xchg
negl
pop
daa
inc
add
js
outsb
push
shll
insl
stc
inc
add
les
in
mov
add
jns
add
add
cmp
mov
inc
inc
add
cld
scas
enter
loop
in
pop
mov
mov
add
rolb
xchg
mov
xchg
movb
add
pop
xchg
mov
mov
fcompl
ljmp
xchg
pop
les
scas
fnstsw
mov
push
add
flds
ds
repz
cmp
jge
aam
cmpsb
sbb
movb
jbe
test
add
add
outsl
imul
cmc
mov
pushw
repz
repz
add
js
test
mov
inc
lahf
imul
mov
lods
and
std
getsec
repnz
outsl
std
je
mov
aaa
push
orl
pop
addb
jb
out
addr16
test
mov
imulb
inc
add
daa
divb
jmp
push
clc
das
push
lret
addr16
sets
bound
repz
push
cmp
enter
and
sub
jge
push
add
inc
add
fstl
lcall
cli
outsb
jbe
test
rolb
pop
cld
repnz
into
inc
add
stos
rorl
outsb
xor
stos
xchg
jo
loope
mov
jge
jl
and
xor
or
jne
cmpsb
imull
mov
inc
add
ds
idivb
fstps
pop
mov
sbb
movsb
jge
inc
cmp
fiadds
lods
popf
iret
mov
aas
cmp
lds
adc
jecxz
test
out
mov
inc
add
sub
add
rdtsc
mov
push
pop
xchg
pop
cmp
out
dec
push
add
push
outsl
sbb
xor
jnp
dec
jg
xchg
xor
fs
push
pop
ljmp
pop
mov
pop
cmp
add
mov
pop
sbb
or
inc
add
xor
cmp
ret
pop
fcoms
and
jmp
les
aas
loope
int
std
movsb
mov
xor
fisubrs
add
ret
lock
add
mov
inc
add
mov
lods
push
std
das
out
mulb
add
or
test
sub
mov
sub
movl
insb
addl
popf
call
lret
repz
fdivrl
std
pop
ljmp
add
cs
mov
adc
cwtl
cmp
negl
adc
popa
lahf
xor
inc
add
dec
pop
xlat
jle
add
hlt
inc
add
stc
xchg
dec
pop
cmc
daa
call
push
cwtl
icebp
ret
ds
mov
in
fnsave
add
lock
mov
pop
lcall
and
test
aaa
pop
cltd
adc
push
inc
inc
add
sahf
in
mov
lds
add
pushf
sbb
scas
inc
repz
pop
inc
mov
add
inc
add
xchg
jmp
add
xor
out
rcr
inc
add
mov
pusha
add
jnp
js
addr16
mov
add
outsb
rorl
in
test
dec
sub
pop
mull
or
jb
or
push
cs
sbb
jne
mov
test
mov
pop
push
pop
in
outsl
jb
jb
ja
jnp
add
and
aaa
inc
add
mov
repnz
mov
inc
add
mov
test
call
sub
gs
js
inc
push
add
add
or
or
addb
sbb
idiv
scas
lods
int3
xor
loop
jg
add
xorl
cmpl
mov
arpl
xchg
xchg
roll
sti
sub
addb
inc
add
into
xchg
neg
push
in
cld
addb
add
jne
iret
mov
mov
xor
mov
add
stos
negl
jg
push
out
add
in
adc
xchg
add
sbb
jbe
mov
sub
mov
adc
rolb
mov
aaa
dec
int3
outsl
fwait
fwait
xchg
cmp
dec
scas
repz
cmp
mov
sahf
stos
mov
lods
sbb
xchg
fadd
add
push
dec
cwtl
outsl
je
test
shr
jne
mov
fbld
mov
push
mov
sbb
jg
dec
cmp
ror
xchg
sub
test
fdivrl
add
xor
inc
pop
das
dec
jne
lea
test
call
bound
enter
add
loop
lahf
lock
mov
pop
cmpl
pop
idivb
inc
add
js
mov
pushf
fwait
call
pop
out
addb
aam
add
fcmovbe
dec
daa
pmaxub
sbb
aad
popf
xorl
jmp
xchg
bound
xor
xor
push
xlat
adc
iret
dec
xor
xor
xchg
sbb
mov
mov
mov
jmp
loopne
xor
dec
jl
mov
ja
and
mov
lea
sbb
add
mull
or
lret
inc
bound
jecxz
xchg
add
test
lret
inc
jb
xchg
dec
mov
jbe
popa
movb
mov
jb
mov
mov
fstps
dec
xchg
xchg
jp
adc
adc
in
adc
pop
dec
ljmp
and
push
stos
sub
jnp
sbb
ds
mov
jno
arpl
stos
ja
pop
popa
icebp
lods
pop
sub
jns
ficompl
push
jp
push
stc
mov
and
notl
imul
jecxz
jbe
mov
setle
jb
setne
je
orl
cmp
add
adc
loop
movb
add
stos
psrld
mov
sub
or
mov
insb
call
add
xchg
or
mov
test
test
sbbl
lret
lret
sub
mov
arpl
ret
add
loop
push
add
mov
sbb
call
sbb
mov
cmp
pop
ds
mov
xlat
in
test
sub
mov
jo
ja
cltd
xor
cltd
rolb
inc
add
mov
xor
sub
insl
aas
add
push
in
shlb
popa
jo
dec
mov
mov
pop
sub
pop
mov
fnstcw
divl
fwait
loop,pn
push
loope
jecxz
js
imul
add
fisttps
push
jl
cld
xchg
pop
ret
xor
roll
xchg
shll
add
lods
jecxz
outsl
jmp
xor
std
pop
lea
mov
dec
pop
push
addb
xor
call
call
push
xor
sbb
adc
mov
sub
pop
daa
add
cmp
pushf
repz
jge
inc
add
mov
lcall
rcr
mov
adc
inc
dec
mov
mov
sub
or
test
and
cmpsb
jae
add
cmp
mov
add
mov
test
repnz
xchg
cs
push
dec
aad
fidivrl
inc
add
push
jbe
outsl
or
push
jecxz
add
pop
dec
imul
add
int
or
push
push
fidivs
mov
mov
arpl
xor
dec
jp
ret
mov
add
gs
jg
xlat
push
repz
icebp
cmc
xor
cmp
jae
aas
leave
mov
xchg
lods
in
movsb
dec
ss
outsb
pop
adc
fwait
inc
push
add
mov
adc
mov
lods
gs
xor
rcrl
dec
sbb
enter
addr16
ret
jns
adc
cmp
add
add
jl
dec
aaa
mov
lods
inc
add
fxam
pop
addb
or
into
jae
or
and
mov
fsubr
arpl
mov
and
lret
jae
jno
mov
adc
pushl
mov
add
sub
xor
mov
faddl
movb
mov
mov
pop
inc
out
dec
cmp
bound
push
pop
sbb
imul
pop
xchg
sbb
stos
outsl
fnsave
insb
out
push
iret
push
push
add
jl
cmp
test
jl
mov
imul
out
adc
cltd
daa
push
inc
inc
inc
add
test
sarl
mov
mov
jo
je
or
push
leave
jnp
xchg
into
jmp
mov
push
nop
inc
add
outsb
push
mov
xor
mov
xchg
mov
call
jb
aad
loope
xor
or
mov
mov
push
cmp
ljmp
add
mov
popf
mov
fwait
in
add
add
add
stos
addb
push
cmp
mov
stc
cmc
add
jp
lods
inc
push
bound
ljmp
mov
add
lods
jbe
pop
xchg
popa
rcr
mov
outsl
dec
test
in
push
add
out
movsl
and
or
adc
rolb
pusha
add
xorps
add
add
in
cli
adc
mov
pop
inc
pusha
add
mov
mov
cwtl
lahf
pop
inc
add
add
xor
stc
push
dec
addb
sti
les
rclb
std
or
xchg
push
mov
mov
and
test
jne
add
daa
out
leave
scas
cmp
mov
push
push
fwait
clc
or
and
addb
add
stc
xchg
jp
insb
aas
rcll
lds
dec
nop
dec
mov
jmp
mov
lea
in
push
mov
addb
outsb
jle
and
adc
fidivl
jle
or
dec
push
inc
and
add
cmpsb
mov
sub
push
sarl
int3
jne
loope
xchg
dec
jb
popa
sar
pop
fbld
and
cli
jbe
in
mov
mov
xchg
int3
jne
or
addr16
push
je
add
add
pop
loope
xor
je
push
movsl
mov
xchg
insb
int
mov
xchg
and
data16
sahf
jg
shl
xchg
rolb
and
in
xor
mov
push
lds
sahf
ja
les
and
add
or
repz
inc
mov
clc
lcall
lds
add
cld
xor
and
add
jl
jp
movb
addr16
xchg
pop
and
fld
add
int3
xor
stos
cmpsb
dec
das
jp
sbb
rolb
cmpsb
stc
cmc
jno
pop
stc
mov
pop
add
mov
scas
cld
frstor
jl
or
loop
pop
popf
and
add
lahf
dec
push
mov
jmp
dec
lods
sbb
mov
jecxz
cs
xor
mov
aas
dec
xor
inc
mov
movsl
xchg
push
jns
ficoml
mov
xor
jle
mov
cmp
das
test
enter
xchg
movsb
xchg
add
xor
das
sbb
adc
jge
fsubrl
scas
ds
xchg
mov
add
imul
js
mov
add
sbb
sahf
and
add
sub
push
mov
aad
fcomip
imul
sbb
add
add
popf
popa
mov
xchg
or
out
push
push
xchg
sbb
into
xorl
adc
push
add
loopne
dec
add
aad
lret
mov
mov
icebp
adc
add
push
mov
push
fxch
popa
pop
add
cmpsb
sub
test
cltd
movsl
push
aad
mov
nop
leave
rcll
aam
fwait
shll
mov
push
sbb
xor
mov
mov
aas
adc
push
movsl
inc
pop
adc
mov
xchg
test
std
xorl
jl
shlb
rol
add
jge
bound
fcomip
in
and
pop
into
adc
cmp
add
mov
lret
insl
xor
pop
imul
dec
out
test
outsb
add
clc
xchg
incl
add
add
pop
leave
pop
ss
mov
lcall
add
inc
popa
pop
or
push
push
mov
add
jae
jae
arpl
dec
dec
mov
jns
push
xor
scas
jmp
les
ficoms
pop
addb
inc
cmp
pushf
mov
cltd
out
cmpsl
dec
movsl
leave
jne
jl
fsts
addb
inc
push
add
xor
cmp
add
js
xchg
nop
jg
outsl
inc
add
sbb
lods
stos
or
jo
loopne
mov
add
add
movsl
cmpsl
add
loop
loop
push
punpcklbw
xchg
pop
outsl
pop
push
dec
mov
adc
mov
add
xchg
popl
add
pop
xor
loop
mov
push
shlb
lret
sarb
sbb
pusha
add
push
rcr
sti
faddp
xor
loop
ficoms
add
add
add
add
shlb
pop
outsb
lret
call
rcl
adcl
jp
xlat
cltd
pop
push
add
sbb
iret
es
outsl
xchg
inc
push
pop
xor
hlt
or
mov
addb
adc
mov
loopne
pop
pop
xchg
mov
add
int
push
push
hlt
mov
dec
fnstsw
jns
adc
mov
or
orl
lea
shrl
push
jns
add
mov
pop
push
aaa
rcll
jge
cmc
inc
jno
add
cs
movb
pop
push
out
sahf
mov
std
sbbl
out
push
xchg
inc
shll
lea
pop
pop
push
mov
adc
das
lea
outsl
and
mov
push
add
push
dec
mov
cli
test
sbb
dec
cwtl
xlat
imul
bound
inc
add
mov
rorl
je
test
jge
movsb
sub
add
dec
pop
push
mov
xor
dec
rcl
cvtps2pd
xor
clc
sbb
stos
lods
jb
cmp
lods
mov
jle
aad
out
out
jg
xor
add
add
push
add
arpl
bound
arpl
mov
aad
jne
mov
idiv
iret
pop
out
int3
adc
cmpsb
arpl
ds
jge
jecxz
sub
aad
std
fsubp
pop
stos
mov
add
pop
dec
xchg
sub
inc
add
add
add
adc
ds
in
fnsave
cmpsb
pop
roll
adc
jo
cmc
lods
and
movl
mov
dec
cmp
adc
pusha
add
inc
and
xor
adc
mov
pop
test
inc
add
fiaddl
into
jp
repnz
xchg
addr16
pause
lods
pop
mov
add
icebp
pop
mov
add
fsubs
adc
in
cld
mov
arpl
push
cmc
cmp
out
stos
fisttps
sub
pop
arpl
add
mov
cmp
xor
add
add
inc
add
xchg
outsl
push
test
mov
sub
lods
aaa
sub
sbb
cmpsl
xchg
jmp
sbb
cmp
cltd
arpl
jb
sbb
mov
adc
insb
fwait
add
outsb
or
add
pop
outsb
cmpsb
mov
pop
movb
xor
xlat
mov
pop
or
fwait
mov
push
fs
fcmovbe
cld
loop
pop
popa
mov
mov
imul
sbb
add
add
or
icebp
xor
jno
sti
bound
andl
ficoms
cwtl
pop
or
cs
je
mov
fildl
add
pop
cld
hlt
or
into
pop
sbb
adc
mov
push
adc
fwait
bound
lods
sbb
in
out
in
mov
lcall
pop
sub
loope
sbb
in
fwait
adc
pop
cmp
mov
push
bound
adc
adc
fistps
mov
cmpsl
popw
hlt
out
outsl
jp
add
mov
cmp
pop
add
addb
pop
rolb
add
sbb
pop
xchg
ja
movsb
cs
mov
fwait
jno
push
fwait
scas
add
and
sti
rolb
push
adc
out
mov
cmp
fidivs
push
pop
sbb
fwait
pop
push
aaa
pop
lods
hlt
jmp
lods
jg
fimull
fimuls
lods
idiv
sub
pop
call
adc
bound
jns
and
sbb
xor
fcoms
out
xchg
or
add
mov
sub
pop
int
out
das
ret
shl
cmpsl
aas
test
arpl
ljmp
mulb
fdivs
out
and
push
or
mov
dec
adc
add
shl
sbb
sub
push
leave
xor
fldl
dec
pop
jl
adc
add
cli
icebp
add
add
lea
sbb
jae
adc
push
lds
xchg
inc
fcmovb
pop
push
pusha
add
pop
xchg
lea
xchg
scas
lock
xor
add
add
roll
aam
dec
int3
inc
idivl
jle
insb
mov
add
in
xchg
adc
test
lret
je
sbb
sub
setns
or
mov
and
inc
add
dec
pop
ja
push
rcll
push
inc
cs
cmp
pop
xor
pusha
add
lahf
jae
add
cmp
dec
xchg
pop
mov
leave
inc
add
out
add
mov
filds
inc
rolb
jge
jae
out
std
xorl
movzbl
scas
sti
cmpsb
nop
add
add
je
sbb
mov
pushf
cwtl
pop
xchg
outsb
lods
sub
dec
in
mov
mov
add
push
nop
fwait
mov
hlt
in
sbb
mov
cmpsb
inc
mov
sar
adc
push
cld
popa
or
out
xchg
and
xchg
out
push
pop
std
divl
add
movb
les
lcall
out
iret
out
fsincos
mov
add
xor
pop
enter
lret
rol
add
mov
sub
mov
add
mov
dec
insl
pop
sbb
add
or
and
add
call
sbb
pop
xchg
mov
insb
out
daa
mov
scas
jecxz
call
popa
fimull
xchg
mov
sti
xchg
movsb
dec
cmp
jle
mov
adc
xchg
inc
jg
adc
xor
adc
adc
sbb
out
add
add
inc
movntps
add
std
push
cmp
cli
add
nop
sarb
popf
and
xchg
push
xor
movb
sub
cld
and
sub
fsubrl
iret
xor
outsl
lret
das
or
add
mov
inc
subl
in
xor
push
add
and
aam
add
gs
inc
mov
add
out
sbb
jbe
lock
movb
lcall
cs
pop
sbb
stos
hlt
sub
mov
push
push
test
repnz
cld
dec
push
add
lahf
mov
arpl
les
cmp
out
cmc
roll
dec
jb
push
int
in
add
sarl
mov
call
push
or
adc
and
add
add
int
fidivs
or
rcl
xor
sub
or
inc
rolb
jge
dec
ja
jl
add
add
mulb
ret
sub
push
cwtl
mov
sbb
mov
push
and
loope
xchg
and
mov
fcmovnu
inc
add
push
xchg
and
cmp
push
pop
test
lea
jg
repnz
rcr
nop
xchg
mov
jb
enter
push
mov
movsl
insl
mov
loop
scas
push
push
add
add
inc
ds
int
xor
sbb
js
jecxz
pushf
js
lcall
jmp
add
adc
adc
dec
pushw
add
loop
xor
cli
xor
add
stc
cmc
xor
clc
lods
jp
popa
mov
addb
jno
xchg
adc
inc
stc
mov
ret
and
pop
xchg
cmp
sub
add
xor
jb
out
dec
inc
je
add
add
push
call
nop
pop
jle
and
adc
ss
and
icebp
ja
jae
xor
int
mov
nop
imul
mov
insl
or
jmp
enter
leave
cmp
jb
dec
cld
out
sub
push
sbb
cmp
pop
xchg
inc
add
movb
push
jns
loop
add
xor
add
icebp
xchg
shl
jne
inc
add
push
xor
or
sbb
push
mov
mov
jmp
fdiv
mov
adc
ss
sbb
data16
lret
loope
mov
roll
add
push
jns
negb
leave
and
dec
aad
add
xorl
pop
or
ficoms
ret
jge
dec
cs
and
repz
cld
adc
adc
cs
scas
dec
xchg
mov
popf
sbb
sub
fisubrs
dec
fidivl
jbe
cltd
lret
repnz
leave
or
addb
ds
sbb
push
je
fiaddl
dec
aad
add
iret
sub
clc
sahf
add
sub
add
ret
lahf
add
call
es
add
dec
popl
add
add
xchg
sbb
add
cmp
add
hlt
daa
rol
add
push
adc
mov
cmp
mov
rol
add
mov
or
sub
std
adc
pop
add
push
add
in
addr16
jp
shll
mov
inc
add
shl
xchg
pop
xchg
fldl
dec
push
pop
mov
xor
push
and
iret
push
fidivrs
push
mov
aaa
mov
into
stos
add
mov
inc
lret
bound
js
and
mov
das
mov
incl
js
mov
gs
stc
xlat
add
pusha
add
mov
add
add
sub
call
sbb
pop
rorb
inc
add
mov
cmc
ljmp
js
outsl
stc
rolb
dec
jne
scas
mov
ds
jmp
or
gs
jle
imulb
call
out
inc
add
outsb
in
mov
jle
sbb
hlt
lock
sub
iret
jge
int3
pop
xor
mov
into
daa
xchg
jg
add
mov
or
mov
jnp
out
push
mov
and
jb
out
fisubrl
lea
add
loope
add
mov
adc
test
sub
in
mov
jl
into
mov
nop
mov
cmp
add
xor
dec
xchg
and
add
aam
sbb
in
jp
adc
xchg
popa
or
add
fiaddl
jo
xchg
ljmp
outsb
push
mov
add
xor
jno
inc
add
ss
mov
sub
sahf
adc
dec
int3
movb
xchg
pop
dec
pop
popf
mov
jp
lea
fsubs
xor
lods
fnstcw
imul
add
add
xor
in
aaa
sub
enter
loop
mov
add
xchg
fwait
sbb
cmp
gs
inc
push
mov
les
inc
in
cmp
jo
aad
xchg
sbb
loop
add
es
add
xchg
mov
add
cmp
pop
inc
add
jmp
lret
push
ja
jns
out
rolb
dec
sub
xlat
xor
xchg
lret
cmp
mov
decl
push
inc
mov
rcr
cli
addb
pop
mov
addr16
dec
xchg
pop
in
mov
sub
inc
jnp
cld
inc
add
das
int
shll
xor
jo
bound
sub
mov
add
lcall
idivl
mov
mov
fcomp
lock
popa
xor
ds
sub
out
sbb
fwait
mov
add
test
loop
adcl
in
adc
sub
popl
xor
mov
cltd
lods
push
out
mov
pop
rolb
test
popa
inc
mov
fdivrl
add
hlt
inc
push
dec
sub
jb
cwtl
scas
add
mov
xor
cld
enter
shll
cmc
pop
cwtl
xchg
cmp
inc
add
and
data16
mov
cwtl
dec
mov
cmp
std
lahf
lret
xchg
xchg
jecxz
fildll
call
negb
fstpl
sbb
fistpll
sub
mov
call
push
cmp
ret
and
nop
mov
subl
sbb
lahf
mov
xlat
dec
loop
push
xor
lret
inc
inc
add
subl
lea
dec
mov
mov
pop
fnstcw
cli
or
xchg
sbb
outsb
and
mov
add
inc
add
sbb
sarl
shl
mov
mov
dec
push
jg
cmp
mov
cltd
stc
mov
neg
fidivl
xor
cltd
lock
inc
push
call
leave
lods
fadds
add
sub
or
movsl
daa
sub
insb
aas
mov
dec
cmp
mov
inc
lods
and
imul
push
out
adc
inc
add
clc
jo
fstps
enter
xchg
mov
jle
popa
pop
dec
or
xor
push
xchg
xchg
movsl
aad
push
lahf
add
mov
fxch
aad
adc
ret
movb
and
and
psubsw
daa
adc
dec
add
iret
das
in
jo
add
pushf
adc
and
add
or
test
rclb
sbbl
xchg
xor
jb
dec
out
adc
push
pop
shr
out
testl
clc
das
test
fs
inc
add
scas
daa
lods
mov
mov
xor
loope
lods
and
loopne
add
insb
fcomi
pop
xchg
pop
mov
fisttpll
add
mov
mov
and
jne
jno
add
and
jns
add
rolb
lock
mov
lahf
ja
gs
jb
lods
ret
add
jecxz
adc
add
lds
fcomps
cld
mov
jns
jnp
loope
pop
dec
pop
sbb
add
repnz
or
push
or
cmp
stc
push
mov
aam
add
fucomp
rcrb
lods
sti
pop
loopne
add
or
add
outsb
mov
mov
add
into
jge
add
or
stos
int
in
addr16
pop
sbb
mov
push
sbb
push
clc
sub
mov
pop
xor
ljmp
test
aas
mov
jns
call
add
add
push
and
daa
inc
add
add
dec
orl
dec
dec
mov
mov
mov
cmp
mov
arpl
jne
xchg
dec
push
add
adc
inc
jne
repz
dec
sti
cltd
lods
xchg
mov
fsubp
adc
in
dec
add
sbb
sti
mov
imul
stos
or
aad
cmp
and
pusha
add
mov
mov
mov
adc
xchg
push
mov
cltd
sarl
pcmpgtw
xor
cmpsb
xchg
mov
jecxz
add
sbb
stc
insb
dec
scas
adc
push
inc
add
push
inc
add
test
push
add
add
cs
in
je
inc
push
fidivs
pop
jl
out
daa
jnp
lcall
jns
jnp
rolb
add
out
mov
xchg
das
ret
fsts
aam
adc
jnp
add
lret
cs
add
les
adc
push
push
aas
std
jno
jg
pop
addb
add
ljmp
sbb
pop
push
add
fldenv
inc
mov
mov
push
dec
test
xchg
or
stos
mov
push
pop
fwait
loopne
int3
or
mov
cmpsl
addr16
push
mov
mov
adc
aad
jmp
idivb
in
adc
push
icebp
sbb
ficoml
scas
fistl
push
fmull
or
dec
es
ficoms
test
out
filds
icebp
mov
pop
mov
xchg
mov
lcall
add
mov
pop
cmpsl
iret
jne
add
insl
adc
dec
pop
test
addr16
cwtl
jp
add
add
mov
add
xchg
xor
xlat
dec
subl
popf
push
fimuls
cmpsb
addb
ds
dec
test
popa
push
addr16
arpl
adc
mov
adc
pop
jae
int
pushf
inc
push
mov
lods
pop
jb
int
cmp
ljmp
sbb
push
std
int
in
push
jbe
mov
sub
test
adc
xchg
sub
and
dec
jle
inc
add
movsb
addb
je
mov
add
push
or
js
adc
shlb
mov
bnd
sbb
mov
jne
mov
rolb
add
mov
loopne
lods
notl
add
and
inc
sbb
xchg
push
add
cwtl
sbb
ja
dec
lods
lret
repz
mov
es
mov
pop
jo
outsb
scas
and
mov
fildl
popa
leave
mov
mov
pop
test
mov
push
imul
js
popf
push
push
sbb
mov
mov
add
mov
aam
lret
mov
cli
loopne
add
mov
sub
enter
aaa
aam
dec
sbb
loopne
sub
test
cld
mov
adc
out
lret
addb
je
and
cmp
cmc
xor
rcl
rolb
push
mov
mov
push
call
mov
fwait
aaa
fnsave
cs
inc
test
out
insl
jns
pop
clc
inc
add
mov
dec
repnz
push
dec
inc
add
cmp
jb
dec
mov
add
call
inc
pop
daa
cwtl
mov
inc
add
cmpsl
test
mov
mov
xor
and
lods
mov
inc
add
js
mov
pushf
mov
jmp
add
add
xchg
jo
fistpl
in
add
pushf
movsl
sahf
inc
add
mov
push
scas
and
xchg
inc
add
add
adc
mov
jno
insb
jmp
adc
cld
cmpsb
adc
mov
addb
mov
add
cmp
stc
out
js
jno
xor
mov
cld
mov
fstp
add
push
pusha
add
add
nop
std
cmp
lret
xlat
xor
inc
add
scas
push
shr
mov
xchg
push
scas
lods
fildll
in
add
xor
icebp
jecxz
push
sub
add
std
cmp
shll
call
mov
mov
push
flds
lods
dec
sbb
xchg
out
jo
pop
ret
sti
jne
repz
fwait
sti
je,pt
push
out
sub
rolw
and
cmp
subps
push
test
cmp
and
and
lods
ja
decl
mov
mov
addr16
rolb
mov
add
popa
push
add
add
orl
pusha
add
inc
add
adc
jl
idivb
mov
push
addb
cmpsb
mov
gs
cmc
in
push
add
movb
pop
adc
sub
inc
add
add
in
jp
add
rcrb
loope
pop
mov
or
pop
jmp
mov
push
loopne
push
pop
popf
lret
cltd
pop
int
adc
inc
add
push
aaa
and
xchg
adc
clc
jge
fmull
movntq
push
fs
mov
fisubrs
fstl
ret
pop
inc
add
gs
sbb
bound
sub
lock
negb
std
pushf
pop
jo
lds
call
add
aas
negb
pop
jns
push
repnz
push
inc
adc
jmp
ret
lods
pop
xchg
add
je
add
sbb
hlt
mov
adc
sbb
sub
add
add
loope
and
loop
inc
add
lds
cli
add
in
hlt
xor
out
mov
push
add
mull
outsl
inc
add
les
adc
int3
push
ret
add
mov
add
aaa
pop
dec
adc
ret
je
rcll
xlat
dec
mov
call
movb
sbb
call
and
add
lahf
mov
add
xchg
xchg
addb
push
add
adc
sbbl
push
and
sub
mov
mov
int
add
jecxz
jnp
repz
sti
or
test
and
out
add
out
xchg
cld
inc
add
shlb
mov
in
pop
pop
gs
in
mov
push
add
loop
xchg
cli
test
mov
jge
jno
dec
jno
xchg
aas
push
cmpsb
pop
jge
movsl
mov
aam
inc
add
ss
xchg
insb
mov
dec
sti
cwtl
pop
pop
jmp
and
push
xchg
insl
fisttps
mov
add
and
in
fcoml
std
or
add
mov
inc
add
mov
jb
loopne
xchg
imulb
in
jge
mov
test
cli
lahf
pop
stos
mov
stos
js
push
add
frstor
sub
sar
roll
cld
cmc
rcl
cltd
ret
mov
movb
repz
iret
enter
in
lcall
push
sbb
and
xor
inc
or
pushf
lahf
rolb
inc
or
adc
rolb
lods
sbb
push
arpl
jle
jmp
cld
pop
enter
ds
imul
jmp
jecxz
mov
jno
jo
pop
fmull
lahf
cmpsl
scas
xchg
cmp
lahf
out
cmpsl
ret
lods
sub
xor
push
push
test
add
or
int
outsl
test
addb
inc
add
and
pop
nop
and
push
pop
sahf
insl
sub
ja
xor
sub
cmpsl
test
dec
and
lahf
in
sbbl
testb
xorl
sub
movb
lock
jnp
add
add
cwtl
mov
pop
dec
jp
add
sub
lcall
inc
call
or
sbb
sub
jb
sub
call
mov
add
inc
add
lret
idiv
sub
sbb
pop
ret
lods
out
shll
fsubs
sub
ret
sbb
mov
mov
cmp
jmp
pop
jbe
movb
hlt
and
or
adc
mov
cwtl
leave
lock
mov
jnp
mov
inc
jae
jle
sbb
das
inc
add
mov
jp
fmull
inc
cmpsb
mov
cmp
and
and
ds
add
add
pop
pusha
add
ss
add
pop
mov
pop
ret
inc
add
pop
popa
lret
xchg
fcompl
inc
add
push
xchg
int
out
cmp
dec
movsb
loope
add
push
add
dec
cld
inc
add
mov
add
add
ret
or
sbb
add
les
ja
ret
cmp
add
lock
rolb
mov
stc
push
in
lahf
adc
fcomi
inc
add
push
jne
fldcw
lret
mov
cmp
adc
pop
cmp
ficoms
subl
and
pop
lds
jge
aas
mov
fwait
and
inc
add
pop
sub
insb
xchg
adc
outsb
mov
call
cwtl
fcomi
mov
jge
call
add
jne
je
push
and
out
sub
gs
fisubrl
fmulp
daa
mov
sbb
jnp
incl
jns
test
scas
cmpsl
cmpl
xchg
jne
jle
push
shlb
adc
popa
sub
cmp
sub
mov
mov
cmp
pusha
add
sbb
jae
shll
jns
mov
rcrl
cmp
aas
fs
push
clc
xchg
cmp
loopne
je
xor
sub
ret
inc
add
add
mov
dec
dec
ljmp
pusha
add
sbb
mov
add
push
adc
aad
push
add
mov
rclb
and
fmuls
mov
mov
sbb
add
mov
or
mov
add
or
test
fildll
aam
in
inc
mov
lock
mov
xchg
or
scas
jae
movb
adc
ret
clc
aas
lock
sbb
xor
sarl
and
mov
sbb
xchg
popf
ljmp
mov
dec
mov
add
cmp
jne
push
push
inc
add
leave
wbinvd
movsl
nop
sarl
in
rcr
outsb
push
and
lret
pop
jmp
movsl
nop
js
pushf
xchg
or
jb
add
sbb
addb
pop
hlt
xchg
inc
dec
mov
fsubl
xor
jbe
data16
sub
sbb
add
xchg
mov
dec
jne
jecxz
push
and
jbe
outsb
or
out
addb
mulb
dec
mov
cld
push
out
aas
popf
sbbl
xlat
cmp
addr16
xchg
adc
adc
add
xchg
cltd
fildll
repz
xor
call
dec
cli
movsl
inc
add
jnp
in
cmp
or
jne
rcrb
mov
add
cltd
mov
pop
lret
xor
stos
fcomps
or
cmp
lds
pop
or
xchg
test
dec
rcll
jecxz
add
jbe
add
xchg
mov
dec
addb
mov
mov
mov
sub
outsl
cmp
pop
popl
mov
dec
lcall
add
in
sub
je
add
or
movsl
mov
iret
popf
dec
test
mov
push
add
pop
lcall
jmp
dec
and
push
mov
sti
inc
add
xchg
or
sahf
adc
mov
cmp
sbb
jns
sub
pop
imul
pop
ss
lea
scas
mov
addb
dec
daa
ret
pop
add
ficomps
iret
inc
add
xor
mov
repz
stos
cmp
lret
sub
sahf
xchg
mov
mov
add
lcall
mov
lods
add
aam
std
ja
sbb
xchg
cmpsl
imul
mov
movsb
mov
arpl
sub
arpl
insb
jmp
ljmp
scas
in
cmc
xchg
flds
add
cmp
mov
test
fistpl
mov
shr
aad
sahf
cmp
loope
jmp
lret
and
jb
int
clc
jns
cmp
sub
dec
sub
sbb
movsb
mov
mov
xor
or
idiv
inc
add
jns
rorl
or
lahf
pop
arpl
icebp
lods
mov
cld
sub
push
xor
ja
push
orl
js
cmp
lods
add
dec
addb
or
out
inc
add
arpl
add
add
in
lods
jp
test
jl
inc
add
shrl
movsl
dec
xor
dec
or
lods
sti
xor
stos
iret
mov
push
inc
add
xchg
les
dec
repz
dec
xchg
lock
shlb
in
adc
mov
add
push
sbb
add
sub
lock
mov
pop
shll
add
push
filds
inc
dec
add
mov
add
cld
mov
mov
arpl
add
sub
ds
mov
lods
xchg
pushf
push
xchg
aas
jg
clc
int
inc
loop
enter
add
add
dec
roll
mov
stc
notl
push
mov
das
xchg
cmp
inc
iret
sti
mov
sub
out
xor
stos
iret
push
inc
add
aam
pop
mov
or
adc
push
bound
fmull
stc
hlt
incb
es
fisttpl
sub
and
mul
inc
add
jb
outsb
stc
xor
xchg
mov
ds
add
lds
push
dec
pop
mov
outsb
xchg
bound
xor
xor
sbb
pop
clc
sub
mov
mov
out
dec
outsb
mov
std
mov
and
sub
imul
fs
icebp
loop
out
ja
jge
jecxz
fadds
insb
lods
lret
push
or
sub
fcoml
test
push
popa
pop
insb
rcr
mov
repz
jecxz
loopne
les
or
imul
mov
pop
daa
pop
push
test
clc
test
repnz
add
mov
inc
xor
push
cmpsb
arpl
mov
add
ficomps
add
test
mov
pop
jo
jno
sahf
lret
shll
mov
xor
shl
jb
xor
jo
push
add
mov
das
clc
pop
movsb
sti
ja
jb
add
stos
adc
push
adc
add
mov
jmp
sbbl
shrb
inc
add
adc
outsl
call
mov
arpl
add
push
or
in
movsl
and
fdivp
cmp
bound
xchg
cld
pop
insl
pop
in
lock
enter
loope
test
sbb
sti
xor
xchg
cli
jno
lret
sahf
data16
add
sub
inc
add
add
or
mov
scas
inc
mov
loope
inc
add
imul
add
xchg
add
je
cmpsb
dec
dec
inc
add
and
cld
sub
jbe
or
stos
pop
pop
push
jo
loop
or
dec
jb
ret
and
inc
add
pop
cmpsl
mov
cwtl
mov
sub
outsb
daa
outsl
test
xor
insb
stc
pop
in
leave
pop
pop
loope
dec
adc
dec
movnti
xchg
arpl
lahf
pop
jne
sbb
js
sub
mov
push
aam
cmp
add
jmp
icebp
mov
movb
add
lock
or
imul
mov
jle
jmp
push
cld
data16
into
cmp
jmp
lds
cs
inc
add
dec
data16
fists
in
icebp
push
push
lock
stc
add
pop
and
mov
jl
leave
xor
push
stos
mov
jg
movsb
xchg
es
ds
fcomps
nop
adc
push
inc
sbb
fwait
mov
dec
outsl
enter
xor
fucomip
push
int
jae
aaa
dec
bound
jmp
and
idiv
xchg
in
jge
ja
lock
movb
cmp
push
addr16
sbb
add
add
push
aam
cmpl
pop
out
add
mov
fnstsw
or
movb
inc
mov
mov
add
test
in
hlt
cmp
cmp
and
mov
and
mov
lret
ljmp
shll
add
mov
movsl
and
bound
outsb
xor
cmp
jbe
sar
mov
push
loop
aaa
sub
add
popa
sub
xchg
imul
xorl
jp
addb
mov
in
lret
push
cmp
push
scas
insl
fldt
and
cmc
shll
add
movb
bound
sti
jle
mov
popa
push
lret
push
push
add
daa
dec
in
push
sbb
add
xor
ficomps
ss
push
xchg
int
mov
xor
call
add
rolb
fldl
add
pop
ja
aam
xor
in
push
test
jnp
ds
xchg
dec
addr16
stc
jno
in
stc
frstor
add
cltd
sarl
xor
mov
test
iret
push
lods
pop
sub
jnp
dec
daa
pop
popa
adc
add
ret
lea
cli
sti
std
sahf
imul
sub
or
lock
lcall
xor
fcom
sbb
addb
sti
scas
lock
nop
pop
lds
or
js
mov
and
jg
das
fbld
pop
cmp
cwtl
clc
shlb
mov
inc
xor
lcall
pop
loop
add
add
enter
imul
daa
push
add
imul
jnp
adc
xor
add
dec
ja
dec
mov
loope
dec
mov
and
pop
mov
add
or
mov
jns
pop
shl
outsl
xchg
leave
inc
add
adc
aam
adc
clc
fbld
shrb
fstl
and
sub
in
cmp
adc
cli
ret
out
lock
outsb
sti
cmpsl
and
int3
pop
mov
lahf
lods
cmp
and
jae
xchg
jecxz
daa
mov
push
push
sarl
and
movsl
dec
push
pop
mov
adc
mov
add
pop
cmp
add
dec
fidivl
dec
xchg
inc
arpl
fmul
cmp
push
lahf
jecxz
and
popa
mov
lea
daa
mov
inc
add
in
xor
add
sub
inc
xchg
iret
out
ja
mov
sete
pushf
xchg
sbb
clc
loopne
imul
add
mov
mov
out
mov
movsb
xchg
mov
inc
sti
clc
xchg
xor
jo
cmpsl
ljmp
add
jge
jle
test
adc
pop
mov
add
mov
popa
shlb
fidivrs
add
jbe
movsl
cmp
sub
fs
scas
xchg
add
gs
scas
jbe
icebp
dec
dec
test
pop
xor
add
rorl
push
int
addb
sbb
and
or
xchg
loope
jp
sub
xchg
jmp
push
jo
mov
cs
xchg
adc
mov
ja
cwtl
push
mov
dec
loopne
sub
add
and
mov
pop
fwait
adc
add
add
stos
adc
pop
xchg
mov
movsb
dec
add
mov
push
add
ret
out
popf
dec
mov
fsubrp
rolb
or
addb
dec
enter
push
cltd
pop
int
adc
iret
sahf
cmp
pop
inc
add
mov
scas
addb
jle
xlat
icebp
dec
stos
jmp
add
decl
rolb
add
cmpsb
inc
add
in
jp
into
out
mov
stos
in
push
clc
mov
push
xor
mov
add
mov
add
arpl
movsl
inc
cmc
les
into
or
push
mov
lods
movsb
push
shlb
popa
stos
es
adc
addr16
insl
stos
cs
stc
push
and
push
pop
dec
push
cmpsb
cmp
das
sbb
xchg
add
push
push
mov
jo
fcoml
pop
xchg
jl
jl
in
out
pushf
pop
mov
pop
and
xchg
sub
loop
cmp
inc
fucomip
aad
divb
cmc
cltd
mov
and
addr16
loope
inc
cltd
adc
adc
popf
into
imul
stos
mov
mov
add
mov
adc
add
repnz
add
jmp
lods
sub
mov
pop
imul
lds
sub
shlb
pop
mov
dec
fcmove
cmp
aad
imul
inc
lods
pop
xchg
fnstenv
pop
push
mov
mov
jmp
mov
and
xchg
jl
fadd
add
dec
mov
cmp
mov
push
cmp
pop
fcoml
fsubr
or
add
or
pop
xchg
and
jns
xor
push
sbb
xchg
mov
cmp
jecxz
mov
and
int
loop
cmc
mov
pop
pop
and
out
xor
sbb
and
fmulp
psrlq
sub
xchg
dec
pop
daa
cld
icebp
xchg
xchg
movsl
lret
sbb
mov
mov
xchg
and
xchg
mov
mov
sub
sub
inc
xor
mov
pop
leave
xchg
lahf
pop
push
pop
sub
sub
dec
pextrw
icebp
dec
repz
adc
in
adc
fwait
les
add
loopne
xchg
popf
les
or
push
gs
or
divb
add
bound
add
inc
loope
cwtl
mov
lret
sbb
sub
int3
sahf
jo
add
mov
xor
mov
dec
lock
jns
add
add
movsl
jbe
cmpsb
test
adc
stos
mov
mov
inc
sub
xchg
cmpsl
add
mov
jbe
mov
pop
push
or
mov
mov
lahf
jle
or
in
bound
call
aas
or
xor
push
push
lret
xchg
xchg
mov
inc
iret
cmp
iret
jle
cmp
mov
pop
pop
adc
xor
xor
movsl
fnstsw
sahf
sbb
add
cld
cld
sahf
add
insb
pushf
in
scas
fldenv
lods
xor
ja
daa
imul
test
int3
pushf
push
popf
add
fisttps
roll
sub
or
pop
jae
mov
lahf
adc
hlt
mov
fcomps
jle
jecxz
xchg
adc
jb
out
aas
lcall
loopne
repnz
add
stc
stos
out
sbbl
inc
add
loop
inc
sbb
xchg
pop
sub
jbe
mov
je
std
sbb
push
mov
jnp
mov
lret
add
js
dec
xor
pop
in
push
outsl
cltd
push
jp
inc
add
pop
cmp
dec
and
jae
cmpsb
jecxz
ds
inc
add
insb
ret
sub
jno
push
aam
dec
or
xchg
mov
in
outsb
mov
push
dec
dec
pop
xchg
and
cmp
mov
xor
fsubrl
insl
les
xchg
adc
mov
jo
mov
mov
mov
ds
sub
jg
mov
push
push
stos
gs
cld
in
xchg
roll
rcll
out
xlat
test
enter
and
add
sub
add
pop
fwait
lock
lods
xchg
add
sbb
in
sti
orl
repz
push
inc
add
in
sub
push
inc
add
aaa
push
cmovae
ret
mov
jnp
jnp
aaa
ret
push
or
add
push
add
and
mov
mov
add
lret
test
scas
mov
add
mov
loopne
movl
movb
or
clc
adc
popf
xchg
mov
inc
add
add
push
repz
jbe
jne
aaa
adc
push
sbb
add
cmp
out
push
add
add
pop
fstl
sarb
adc
sbb
add
cmp
pop
jae
xchg
sub
add
scas
mov
or
mov
pop
popf
rorl
inc
add
ror
pop
sbb
xchg
clc
sbb
pushf
fwait
insb
sbb
repnz
mov
and
push
mov
adc
dec
inc
add
sub
jg
repz
xchg
dec
fs
inc
add
setg
add
int
mov
mov
clc
dec
or
pop
jb
test
jo
rolb
sub
lahf
daa
andl
inc
fs
inc
fsubrl
add
pop
aaa
ficoml
cmpl
mov
mov
lods
inc
add
mov
repz
imul
in
xlat
jle
dec
mov
ja
xlat
push
xchg
std
dec
dec
dec
ljmp
add
or
mov
pusha
add
add
push
nop
pop
jo
add
add
lds
fwait
enter
add
inc
not
mov
inc
scas
pop
inc
das
jmp
add
mov
sbb
ss
std
push
sbb
sub
test
ret
jle
cmp
idivl
push
insl
pusha
add
jnp
add
sub
xchg
repnz
pop
add
bound
xchg
mov
pop
out
jg
aaa
sub
ret
sar
cmp
pop
cmpl
aad
xor
add
lock
inc
add
push
cwtl
icebp
inc
mov
out
ss
push
pop
push
fnstenv
sbb
mov
lahf
and
cwtl
xchg
in
pop
jno
mov
filds
jne
pop
push
fldlg2
movb
inc
aam
enter
cmp
sti
xor
sti
sbb
je
cmp
mov
and
addr16
stos
inc
add
add
sub
pop
fdivr
data16
arpl
and
add
add
jo
mov
bound
add
enter
add
pop
outsb
jecxz
hlt
sbb
mov
loopne
pop
pop
jmp
xchg
push
js
mov
mov
mov
add
or
addr16
sub
mul
adc
xor
add
dec
in
pop
fstsw
mov
sub
fwait
shlb
arpl
push
or
out
ficoms
lods
call
subl
add
xchg
bound
in
ficomps
pop
push
mov
lock
jl
add
dec
mov
roll
and
or
scas
dec
lcall
add
mov
lds
lds
sub
sbb
repnz
push
fadds
fsubp
imul
pushf
pop
jne
int3
cmc
mov
sub
insb
mov
inc
pusha
add
sbb
repz
mov
jge
cmp
add
mov
fxch
jbe
pop
ja
mov
add
or
dec
mov
add
jae
pop
xchg
addb
cltd
jae
test
dec
sti
add
insb
mov
or
jp
arpl
push
jl
or
in
xchg
mov
adc
sub
cmp
jb
adc
cmp
or
add
inc
inc
mov
out
fstl
inc
stos
xor
pop
inc
sub
sbb
aad
add
mov
xchg
mov
and
out
pop
push
scas
inc
out
sub
loope
pop
fcomp
or
insl
sub
push
call
lock
mov
fisubs
xchg
xchg
lock
cmpl
jmp
insb
test
add
push
mov
jge
add
add
sbb
aad
pop
lods
inc
cmp
cli
loope
and
lret
dec
xchg
aam
imul
sbb
add
sbb
lods
ret
movl
stos
mov
in
movb
in
aaa
pop
xchg
dec
neg
rcll
dec
sbb
add
test
in
das
add
xchg
aad
sti
sarl
in
mov
popf
push
subl
cltd
cmp
rolb
ret
fwait
jnp
popf
sub
mov
ret
hlt
cmp
mov
push
push
sub
xchg
pop
repz
or
test
cmc
mov
movsl
mov
pop
ss
add
repz
popa
push
push
stos
in
fistps
out
cli
adc
cmp
or
aaa
cs
je
push
clc
ret
shrl
cmp
add
sbb
rol
pop
std
dec
push
cltd
jnp
jg
in
aam
imul
add
mov
fsubrl
cmpsb
xchg
into
cmp
xchg
or
adc
fdivrs
cmpl
in
lcall
lods
dec
into
nop
jbe
cld
lret
jge
push
les
mov
enter
jb
pop
jecxz
daa
nop
pop
jnp
stos
pop
xor
push
stos
sub
xchg
pop
jge
fdivrl
inc
add
inc
jbe
cltd
sbb
ror
pushf
movb
push
mov
add
cmp
cltd
or
int3
inc
pop
or
or
mov
rolb
das
loopne
pop
and
sbb
add
pop
mov
repz
addb
xor
ds
mov
push
rolb
jecxz
js
rolb
add
pushf
movsb
xchg
xchg
cmp
xor
inc
stc
pop
mov
xor
loop
in
scas
mov
lods
jecxz
movsl
or
dec
rcrl
mov
xchg
pop
rcr
mov
mov
stos
shlb
inc
add
sbb
adc
mov
inc
lods
test
int3
rclb
enter
or
stos
fmuls
insl
iret
xor
add
fmull
insb
sahf
lock
stos
mov
or
sub
mov
orl
pop
dec
sbb
push
add
pushf
cltd
pop
fmull
in
pushfw
jbe
divl
clc
imul
add
mov
add
addb
mov
dec
out
andl
mov
cwtl
addb
adc
xchg
and
pop
push
mov
lock
lock
sub
ja
fmul
lahf
inc
pop
cmc
add
sub
loope
inc
nop
inc
and
fcmovnb
add
lock
mov
add
insl
insb
add
jbe
mov
ljmp
fwait
aam
leave
in
aad
scas
test
xchg
push
insb
scas
ljmp
jne
enter
sbb
test
jbe
adc
in
int3
imul
mov
rcr
sub
add
or
fwait
lcall
dec
add
addb
movb
sbb
mov
mov
adc
add
int
add
add
mov
jl
es
pop
data16
add
push
punpcklbw
aam
jbe
test
dec
bound
inc
mov
jp
mov
pop
lret
inc
adc
sbb
cmp
inc
add
filds
add
or
repnz
iret
movsl
repnz
mov
adc
fldenv
dec
dec
mov
add
scas
into
inc
mov
sahf
pusha
add
sbb
mov
mov
cli
pop
in
divl
sbbl
jecxz
add
push
add
mov
jae
mov
lcall
test
jg
lods
sbb
fcom
cltd
xor
xchg
and
icebp
push
aaa
movsb
shrb
add
imul
hlt
pop
scas
lcall
rep
push
add
les
push
sbb
add
cltd
sub
mov
pop
mov
inc
push
and
flds
into
jl
fisttpl
iret
mov
add
push
loopne
addb
mov
sbb
icebp
mov
dec
inc
add
out
nop
mov
les
jecxz
stc
and
ret
adc
add
jmp
vpmulhuw
adc
pop
push
jge
jg
or
mov
mov
lret
cmp
in
jae
ja
aad
lds
push
inc
add
xor
pop
mov
and
in
lahf
sbb
stos
xchg
xor
popf
dec
orl
mov
push
test
inc
add
ja
cmp
add
add
sarl
js
push
fcompl
lea
dec
xchg
mov
clc
cli
and
sti
xchg
xorl
push
insl
mov
pop
pop
push
sbb
pop
xchg
jae
imul
stc
in
cltd
fcoms
push
out
call
subl
add
jecxz
xor
popf
ret
int
stos
mov
dec
ret
stc
movb
push
addr16
add
stos
and
test
cmp
movb
nop
push
stos
scas
loope
add
sar
mov
mov
add
enter
push
popa
cltd
jmp
mov
sahf
xor
or
fsubrp
aaa
scas
cmp
addr16
jnp
pop
lcall
add
imull
loop
jp
cli
gs
out
cltd
sahf
add
repz
cmc
je
leave
mov
cmp
les
test
jnp
push
mov
les
jp
inc
add
clc
mov
mov
jnp
sbb
jnp
add
mov
bound
aam
cwtl
or
arpl
in
cld
cli
adc
scas
or
loope
push
mov
add
inc
repz
jno
testl
loope
out
cmp
mov
mov
sub
pop
leave
xchg
enter
sti
daa
jl
scas
push
lahf
hlt
sti
push
sub
add
in
dec
cmp
ljmp
sub
add
maskmovq
notl
or
std
and
mov
add
dec
and
and
xlat
nop
insl
pop
jne
out
fwait
dec
repnz
icebp
lret
int
mov
sarb
inc
lcall
je
js
dec
pop
sbb
sub
pop
jb
in
in
rcrl
sub
outsb
test
add
aas
or
adc
imul
and
lahf
shl
push
bound
shr
ja
ret
and
lods
repz
int
mov
cmp
and
pop
mov
pop
rorl
mov
mov
cmp
push
lret
sub
lcall
xlat
add
pop
cltd
out
add
fwait
into
or
lahf
push
push
idiv
fsubrs
mov
sub
iret
pop
jo
mov
or
lods
inc
mov
add
add
add
dec
and
mov
mov
xchg
mulb
sarb
cmp
call
and
loope
popf
adc
or
sbb
stos
jmp
add
movsl
fdivrs
outsl
lods
or
mov
xor
test
xor
cmp
js
add
mov
xor
sub
add
es
add
adc
scas
add
imul
xor
insl
xchg
je
hlt
sub
aas
cmpsl
dec
pop
add
mov
stos
addb
cmpsb
cmp
call
add
adc
jo
add
push
aam
icebp
lock
xor
dec
ds
add
int
inc
sub
mov
mov
xor
sub
cmpsb
into
je
mov
or
add
int3
pop
stos
arpl
push
cmp
jae
and
adc
or
add
sti
popa
sbb
aaa
scas
pop
and
and
sti
xchg
mov
add
push
add
add
test
dec
ljmp
ljmp
sub
repz
jge
int3
jg
icebp
outsb
xchg
incb
enter
aam
push
push
add
flds
pop
adc
xchg
adc
ds
push
pop
pop
dec
xchg
lods
push
lods
sbb
cmpsl
neg
or
push
lock
or
in
cmp
movsb
shrl
dec
hlt
xchg
neg
mov
sahf
sub
fcomps
fcmovnb
push
dec
loopne
sub
mov
inc
xchg
and
ljmp
push
add
mov
cwtl
inc
pop
bound
sarl
popf
push
push
push
jp
mov
mov
mov
dec
mov
ret
cltd
pop
sub
xor
popa
das
mov
fcomps
jae
xor
sbb
rclb
les
ja
xor
pop
ficoml
hlt
loopne
adc
sbb
das
aaa
sbb
fldl
imul
std
mov
addb
inc
add
pop
test
mov
ja
cmp
add
scas
inc
testb
xchg
fldl
lcall
sahf
mov
int3
in
mov
mov
addb
loopne
movsl
scas
sahf
lret
bound
push
cwtl
push
test
cmpsb
pop
sub
jp
imul
push
jge
jg
fstpl
pop
hlt
out
lret
loope
mov
add
sti
addb
cltd
add
in
xchg
movsl
fbstp
and
and
aaa
fsubrs
pop
cltd
fstpt
stos
mov
adc
mov
aaa
add
pushf
mov
outsl
jo
add
push
pop
loope
add
dec
mov
das
ljmp
stos
mov
aam
mov
out
cmp
add
add
add
aad
mov
sub
call
push
cmp
cmp
pop
xor
add
lds
mov
lahf
xor
inc
add
pop
movb
jno
sti
sahf
sbb
mov
dec
fdivr
ss
fcmovb
add
in
ret
mov
and
and
add
lods
hlt
jb
push
add
jp
add
aaa
jo
add
fcomps
sub
or
popf
mov
mov
ss
pop
loope
mov
cmp
xor
jle
pop
int3
ss
mov
mov
mov
in
lods
das
push
decl
cmp
rolb
mov
scas
xchg
outsb
jnp
mov
cld
shlb
push
push
or
add
pop
ret
push
add
add
mov
dec
lock
mov
dec
mov
mov
rolb
add
cs
or
es
or
bound
add
inc
add
fsubrs
sbb
in
dec
mov
mov
adc
inc
mov
push
cmp
add
mov
rol
dec
sub
adc
shrl
pop
sbb
xchg
jbe
pop
pop
lret
addb
movl
jbe
orl
mov
fcmovbe
jge
dec
inc
inc
add
jg
outsb
sbb
jno
pop
mov
addr16
adc
clc
loope
mov
pop
jnp
xchg
add
int
int
xchg
push
bound
xchg
inc
iret
loope
jmp
add
add
xchg
mov
loopne
add
idivl
add
fwait
inc
mov
loop
and
jne
jbe
jo
push
pop
fsts
aam
cmp
sub
pmaxsw
into
hlt
jmp
rolb
xor
mov
mov
add
xor
jg
mov
sub
rcll
cmp
add
sbb
xchg
rolb
iret
mov
lea
out
mov
push
add
xor
pop
push
pop
jmp
or
xchg
mov
lcall
dec
mov
sub
das
jae
xchg
pusha
add
mov
dec
leave
xor
sub
test
push
jb
and
out
fildll
sahf
pop
dec
inc
add
call
jo
adc
mov
xor
outsb
inc
add
mov
imull
fwait
pusha
add
dec
popf
loopne
cmp
fiaddl
add
dec
lock
adc
push
int3
dec
pop
subl
ss
iret
push
xchg
mov
adc
rolb
jae
mov
ret
sbb
and
inc
add
in
or
mov
popa
adc
add
add
rolb
sub
xor
mull
mov
cmpl
inc
mov
push
imulb
push
loop
jnp
xchg
xor
pushf
or
add
push
jecxz
pushf
xor
push
fdivs
dec
sub
repz
cld
pop
add
or
mov
add
pop
test
in
lock
push
xlat
push
pop
sub
js
jle
add
cmp
inc
nop
ret
add
inc
fldl
add
cmp
fisubl
rcr
fsubl
jne
cmp
push
addr16
cmpsl
out
leave
movsl
or
mov
push
mov
lods
fld
jmp
mov
test
sub
jbe
jbe
mov
push
or
mov
pop
mov
cli
or
lahf
and
inc
add
js
sahf
ret
clc
in
jne
lcall
cmc
xor
enter
lods
popa
rcrb
cmpsl
sub
mov
add
jo
rolb
insb
out
push
sahf
dec
jl
in
stos
fwait
push
mov
add
aam
test
fisubrs
cli
enter
push
movb
clc
repnz
mov
jg
cmp
mov
xor
fsts
dec
out
pop
imul
cmp
push
fwait
xor
leave
jmp
ja
ret
movb
inc
add
lock
lea
push
std
xchg
cwtl
insb
repz
push
inc
mov
adc
test
sub
shrb
xchg
or
mov
push
rolb
mov
mov
ja
pop
hlt
loope
movsl
fsubrp
imul
xor
ds
jnp
mov
inc
out
pop
add
adc
add
cs
test
popf
popf
movb
or
mov
in
clc
ljmp
fs
xchg
sahf
pop
daa
pop
xlat
shl
pushl
jae
add
jno
dec
and
add
aaa
mov
sub
mov
push
xchg
and
add
pusha
add
popa
ds
aaa
sub
ds
push
addb
add
cmpsb
aam
insb
out
clc
lds
and
dec
rolb
add
jg
add
dec
imul
mov
add
outsb
xchg
stc
stos
dec
jge
sbb
fidivrl
mov
addb
mov
cmp
into
movsb
outsb
sbb
in
pushf
or
adc
push
repnz
xchg
and
out
fisttps
ds
sub
mov
movb
add
adc
sbb
cmp
xchg
int
xchg
fucom
lds
mov
mov
in
add
xchg
add
add
pop
mov
cs
andl
inc
int3
mov
cmp
dec
popf
aam
sub
inc
dec
mov
xchg
in
add
or
or
adc
push
and
in
xchg
lea
xor
call
je
es
xchg
in
pop
adc
ja
pushf
add
inc
cmp
inc
add
add
jle
mov
inc
clc
jecxz
sub
xchg
imul
sub
xchg
fdiv
mov
pop
and
in
add
mov
out
leave
jae
dec
mov
xor
or
stc
out
sbb
or
dec
in
mov
cmp
mov
loope
icebp
pop
and
in
push
ljmp
jmp
mov
fistps
call
pop
jae
inc
add
add
stc
xchg
cmp
sbb
or
sbb
pop
iret
push
in
xchg
out
jbe
dec
inc
sbb
fdivl
shrl
jle
mov
lret
pop
mov
jle
add
sub
mulb
add
sub
adc
hlt
notb
aad
int3
push
add
dec
push
jb
mov
fadds
add
add
mov
add
push
add
pop
push
stos
xor
aas
lcall
mov
xor
sahf
dec
pusha
add
mov
sahf
and
aam
sub
mull
add
pop
es
in
xor
arpl
mov
inc
add
sarl
arpl
cmp
cmp
popa
iret
into
lahf
and
add
aas
sbb
xchg
rcrb
imul
je
dec
adc
dec
mov
jnp
call
mov
lahf
sub
repnz
loopne
cmp
dec
sbb
ss
ret
imulb
stos
mov
inc
rcl
adc
ds
je
or
xor
into
int3
ret
sub
icebp
jo
pop
mov
cmc
and
dec
iret
mov
jg
fisubs
out
push
push
inc
add
ffreep
add
call
nop
jp
lea
das
test
dec
jo
mov
dec
aaa
mov
les
cmp
inc
jae
add
int
sbb
push
sbb
add
outsl
popa
xchg
push
jne
js
cltd
push
cmp
pushf
lcall
ja
ja
je
mov
ja
inc
pop
xadd
dec
xor
test
inc
add
lahf
adc
andl
bound
and
in
push
sbb
mov
push
imul
sysret
std
sbb
add
push
gs
mov
add
cmpsl
push
jnp
cs
cmc
out
ret
xchg
stos
push
out
addb
xchg
int
popl
in
cmp
leave
ret
jecxz
fcom
mov
sahf
inc
popf
icebp
loope
mov
pop
or
inc
add
dec
es
jecxz
iret
test
and
gs
pop
sbb
jl
push
inc
sub
sub
sub
pop
sbb
gs
bound
sbb
and
stc
or
mov
add
cmp
popf
jg
out
push
xor
or
inc
add
bound
daa
aaa
cmc
and
dec
push
les
xor
cmpsb
fldenv
test
jbe
loop
incb
cmp
dec
repz
sub
sub
push
pop
out
jae
cmp
dec
movb
popf
dec
inc
lret
push
sbb
data16
add
xor
mov
insb
xchg
or
add
xor
ds
lret
notb
repz
loope
lret
mov
shlb
add
jo
pop
or
jecxz
xchg
out
rolb
repz
push
cli
jae
loop
outsl
flds
inc
js
jecxz
mov
in
cltd
out
div
cmp
mul
je
inc
add
icebp
lcallw
add
push
sub
addl
jle
mov
adc
jmp
xchg
mov
jecxz
mov
roll
add
sub
test
inc
js
das
fwait
test
and
push
add
mov
cs
stos
ljmp
repnz
cwtl
shrb
das
mov
mov
or
mov
and
mov
mov
push
add
aad
data16
jnp
inc
add
negb
cmp
xchg
cmpsl
sti
ret
cmp
aaa
mov
enter
and
jne
addb
nop
rcrl
test
dec
sbb
add
in
add
mov
pop
repnz
in
call
add
js
add
loop
outsb
jne
push
mov
std
mov
mov
cli
mov
pop
adc
stos
jmp
stos
adc
inc
add
pop
add
hlt
pop
sub
add
push
scas
out
mov
pop
mov
cld
rolb
push
movb
in
xlat
pop
hlt
ja
aam
push
add
cmp
out
mov
cs
cs
mov
inc
loop
scas
sub
insb
or
in
iret
sahf
mov
jns
jmp
mov
loopne
sbbl
xor
outsl
mov
pop
or
push
sbbl
dec
cltd
push
lods
incl
shll
fldcw
add
ret
int3
in
loop
cld
mov
int
fisubl
cmc
test
jb
push
xchg
leave
jl
test
xchg
call
and
rcrb
repz
push
mov
es
decb
ljmp
xchg
jb
add
inc
add
sbb
cmc
cmp
mov
cmp
ret
cld
insl
push
pop
out
sti
add
loop
mov
mov
push
push
outsb
cmpsb
and
xchg
in
outsl
setne
js
gs
sbb
and
sbb
push
xor
stos
out
sub
jmp
mov
lret
outsb
flds
mov
xlat
sub
fidivs
in
dec
scas
mov
jmp
fs
lret
fcomps
add
pop
jge
insl
daa
add
pop
cmpl
enter
mov
xchg
xor
inc
cmp
stos
movb
sbb
mov
daa
hlt
clc
cld
lods
jg
sbb
add
add
fdivl
xchg
imul
int
insl
dec
sub
add
cwtl
iret
dec
mov
or
cmp
add
mov
mov
add
dec
call
mov
jg
inc
fidivl
add
sbb
faddp
add
rolb
dec
dec
aad
sbb
xor
shl
jl
popa
fnclex
xchg
test
repnz
sub
addr16
shl
cmp
fadd
test
lret
mov
std
lods
jno
mov
xchg
sti
jl
inc
add
xlat
pop
pop
fdivrs
pop
xor
or
cmc
add
adc
mov
or
jp
addb
rcr
xchg
test
mov
xchg
scas
or
addb
fsubrl
xchg
pop
fldl
fldenv
mov
addb
jmp
mov
sub
stos
mov
ret
mov
ret
arpl
add
add
dec
mov
sbb
mov
cmp
das
push
adc
mull
add
sbb
pop
pusha
add
jmp
jo,pt
adc
xchg
sti
aam
out
jb
mov
lods
fsub
clc
jmp
mov
adc
stos
mov
xchg
outsl
push
stos
lods
xor
hlt
lret
sub
sbb
jbe
push
clc
jbe
mov
lods
scas
jmp
adc
popa
mov
in
inc
add
or
adc
je
dec
mov
mov
adc
mov
mov
out
or
cld
inc
fs
jae
sbb
imul
lds
jp
out
adc
add
add
outsb
or
sbb
js
sub
xor
mov
inc
add
scas
add
mov
dec
xor
cld
adc
fmul
test
insb
add
pmaddwd
sub
and
jg
mov
daa
mov
stos
sbb
and
das
movsb
addb
shlb
xchg
test
mov
push
or
add
negb
les
mov
add
add
test
add
pusha
add
add
rcr
lods
addr16
inc
push
cltd
or
lret
scas
mov
cbtw
pop
in
popf
xchg
mov
add
jne
dec
cltd
cmp
cmp
push
stos
imul
push
jmp
loop
push
imul
jo
push
xchg
xchg
fildl
and
mov
mov
pop
rol
add
adc
ja
add
iret
add
subl
hlt
movsb
bound
sbb
sbb
inc
test
pop
into
push
in
jmp
add
sub
fldl
add
add
push
adc
arpl
testb
add
add
mov
xor
insb
or
rolb
shrl
and
je
cmpsl
in
test
mov
xor
negl
out
add
cmp
xchg
stos
add
add
shr
imul
adc
add
jns
pop
iret
adc
fsubs
dec
mov
xchg
dec
movb
add
ja
shll
in
mov
push
sbb
xor
or
arpl
cmc
xchg
cmp
inc
pop
xor
mov
add
aam
push
scas
adc
aam
rcrl
mov
add
add
notb
fidivs
inc
imul
stos
inc
add
push
fwait
add
rolb
push
sbb
outsb
jns
push
shr
adc
push
pushf
stos
dec
inc
inc
or
cmpsb
hlt
arpl
jge
sti
mov
mov
cs
sahf
pop
xchg
xor
mov
mov
xchg
jnp
ror
adc
add
imul
push
jbe
sub
mov
addb
cli
sbb
scas
cmp
inc
out
rorl
rolb
xor
test
push
fmuls
das
add
adc
push
dec
add
lds
add
jns
in
dec
mov
aaa
cmpsb
arpl
add
in
leave
addb
mov
mov
mov
pop
add
cs
add
add
cmp
add
je
mov
mov
add
add
adc
dec
xchg
insb
xor
aaa
addb
sbb
mov
jp
ja
add
add
mov
xor
das
sbb
and
outsb
jns
push
movsl
aad
pop
incl
inc
and
fisubl
fnstsw
dec
jge
add
cmpps
lods
pushl
pop
add
xor
shlb
add
jg
pop
in
lods
jg
pushf
mov
dec
les
sub
and
push
add
leave
ficompl
jo
fisubrl
push
jo
pop
setnp
jecxz
aad
mov
inc
stos
push
xor
iret
cmpsb
pusha
add
dec
fs
sbb
sub
mov
pop
mov
jnp
mov
int3
cli
pop
je
ds
cmp
std
cmpsl
and
insb
jl
mov
adc
lcall
add
add
outsl
push
leave
dec
jbe
ljmp
xchg
inc
add
mov
mov
sbb
testl
pop
or
mov
into
addb
cmp
lret
push
addb
stos
push
push
dec
xlat
mov
fwait
bound
mov
add
adc
jns
imul
addb
add
jne
pop
dec
daa
sti
popf
arpl
ret
add
push
jmp
in
sub
test
inc
add
mov
fildll
mov
add
daa
pop
in
inc
dec
test
pop
nop
lods
cwtl
divb
xlat
clc
adc
add
std
mov
dec
dec
xchg
jne
shll
fmuls
lret
stos
lock
das
fnstenv
out
cltd
cmp
mov
dec
mov
jg
add
and
add
add
mov
insl
sarb
imul
enter
push
dec
rcl
sub
dec
pop
out
add
mov
movsl
les
xchg
mov
jmp
push
and
ret
push
out
es
pop
pop
push
lret
ja
add
add
add
and
pushf
jmp
pop
xchg
out
in
mov
out
add
and
imul
add
and
mov
int3
pop
cmp
xchg
xchg
repz
pop
fcomi
testb
xchg
les
jne
stos
or
xorl
repz
mov
jl
cwtl
push
outsb
test
push
das
test
add
add
test
test
leave
aaa
hlt
sbb
data16
ds
pop
or
repz
push
add
ljmp
dec
in
xchg
inc
add
int3
shll
sub
sub
push
add
out
add
push
aaa
pop
hlt
pop
test
arpl
call
fsts
push
mov
imul
enter
dec
pop
push
jecxz
push
xor
loopne
xchg
jns
dec
xor
stc
push
iret
push
iret
test
mov
jl
pop
cmp
mov
xor
jo
inc
add
mov
add
cmpsl
fwait
or
mov
es
pusha
add
mov
rolb
or
nop
int
mov
sahf
enter
hlt
nop
notl
bound
cltd
aas
mov
add
dec
cld
jmp
scas
or
std
push
flds
inc
add
ljmp
mov
sub
pop
add
mov
add
bnd
adc
lcall
or
jl
xchg
mov
addb
rcr
mov
sar
sti
sub
rorb
sahf
negb
mov
stos
add
jmp
mov
xor
mov
scas
jo
adc
je
add
push
add
movsl
jmp
fcompl
push
movsl
lret
sahf
jmp
jne
cmp
push
shll
jge
add
xor
dec
test
add
adc
outsl
bound
sub
ss
inc
flds
and
push
dec
insl
xchg
push
pop
insl
rcrl
mov
add
jmp
cld
insl
fisttpll
dec
or
testl
cmpsb
push
fs
or
xor
add
add
dec
jbe
jns
adc
add
adc
test
iret
jle
adc
jmp
xor
fldl
mov
ljmp
popf
inc
lock
popa
fs
inc
add
pop
push
add
fbld
sub
sbb
sbb
test
jge
add
aad
jmp
mov
sahf
dec
stc
fcmove
shll
imul
pop
jno
data16
add
imul
add
add
lret
mov
add
stos
inc
movsb
cmp
jge
scas
jl
lcall
inc
add
dec
adc
push
push
inc
add
insb
cmp
movsl
jbe
add
jns
dec
push
adc
mov
push
mov
fisubl
mov
sub
or
lock
xchg
push
ret
dec
xchg
xchg
mov
xchg
xchg
mov
std
lock
mov
add
insb
push
cs
or
sub
push
jae
inc
inc
add
add
mov
pop
scas
test
add
jg
mov
push
pop
stos
lea
adc
orl
jecxz
xchg
mov
iret
je
addb
imul
mov
insb
dec
in
scas
mov
push
flds
sbb
inc
shll
push
into
push
adc
push
jmp
arpl
inc
add
gs
loop
cli
arpl
addb
ja
pop
jnp
xchg
jbe
dec
sub
pop
std
push
add
lcall
jecxz
push
sbb
push
sub
xchg
and
push
or
ret
cmp
fisubl
ljmp
inc
popf
pusha
add
shll
push
or
mov
xor
pushaw
add
cld
jb
popf
jmp
sbb
xor
xor
jle
bound
int3
les
dec
xchg
out
leave
iret
pop
xor
inc
fistps
add
sbb
cld
jbe
push
cmc
in
or
dec
add
cmp
aas
jmp
call
enter
dec
xor
aas
jg
add
lcall
ret
outsl
notb
and
push
xor
cmpsl
adc
sbb
and
clc
mov
add
add
pop
pop
xchg
mov
outsl
push
xchg
mov
add
pop
and
aam
inc
jmp
cmp
mov
movsl
popa
notb
int
into
xor
das
lock
dec
add
xor
test
iret
mov
call
adc
jge
adc
or
add
mov
jecxz
add
dec
rolb
push
sub
sub
in
divl
adc
add
cli
movb
ljmp
jg
int
add
pop
lds
dec
insl
sub
lds
jp
add
stos
sbb
jmp
scas
sub
js
dec
sbb
loop
rcrb
lds
cmpsl
sbb
jmp
xor
mov
fnsave
sub
add
cmp
sub
inc
add
mov
inc
add
cli
jmp
js
push
bound
or
add
add
mov
fisttps
or
mov
sub
xlat
enter
add
int3
leave
in
add
bound
jle
je
push
flds
das
loopne
and
xor
scas
cmpsl
int
add
inc
out
jmp
fadds
or
push
pop
outsl
loop
push
mov
or
aaa
mov
xchg
imul
mov
dec
lret
mov
xor
pop
ret
mov
or
hlt
cld
dec
mov
outsb
push
add
push
add
push
call
pop
or
xchg
dec
mov
shll
testb
sbb
add
or
dec
xor
mov
roll
push
jp
jne
mov
jns
call
lea
lret
fwait
xor
push
mov
addr16
or
xchg
movb
mov
add
ud0
iret
mov
add
pop
pop
pop
or
cmp
or
dec
add
xchg
jmp
and
and
loopne
xchg
cld
sbb
mov
jb
cmp
push
xchg
scas
lods
mov
mov
in
fidivrs
mov
mov
or
addl
adc
mov
and
inc
or
inc
add
cmp
bound
test
add
sbb
mov
mov
add
mov
fdivs
cld
cmp
mov
cmp
add
jmp
fcompl
fwait
jecxz
std
in
mov
xlat
pusha
add
out
out
cmp
rorl
int
add
cld
inc
ficomps
imulb
test
pop
mov
or
push
push
lret
pop
in
mulb
jmp
and
cmp
movsl
or
sbb
rolb
arpl
stc
jle
icebp
mov
loope
imul
in
mov
add
insb
or
bound
push
in
mov
add
sub
aad
push
dec
xchg
add
sbbl
arpl
int
outsb
std
xchg
inc
movb
inc
add
dec
mov
xchg
sub
bound
xchg
fucomp
cmc
dec
sbb
mov
cmp
add
xor
mov
add
sahf
test
into
and
xor
mov
daa
xchg
push
adc
mov
push
inc
mov
add
mov
jae
mov
add
pop
movsb
mov
mov
add
sub
cmp
test
outsl
mov
add
inc
adc
lock
push
xchg
push
les
xlat
jns
mov
xlat
sti
icebp
shlb
and
adcl
rolb
movb
xor
nop
lods
cmp
cs
pop
inc
cmp
push
inc
add
xchg
push
jecxz
notl
push
add
pop
insb
jae
jle
dec
mov
inc
add
mov
js
xchg
pop
outsl
add
pusha
add
mov
pop
cs
stc
je
arpl
inc
and
dec
jbe
clc
enter
jno
jns
out
push
das
daa
dec
pop
leave
sub
jno
add
cltd
sub
add
add
aaa
xchg
shlb
add
scas
sub
add
jns
sub
jle
rolb
adc
pop
jmp
je
or
cmpsl
sub
popf
in
mov
jno
add
mov
cmpsb
jg
arpl
mov
iret
lcall
mov
shl
xchg
add
vmwrite
fisubrs
std
sti
jmp
add
ja
xchg
incl
stc
and
pop
nop
negl
pop
sbb
xlat
in
cwtl
add
jmp
insl
mov
jmp
into
push
add
in
xor
inc
nop
test
fldt
call
clc
pop
inc
mov
mov
les
add
dec
stos
sub
pop
jl
addr16
add
add
jl
mov
sbb
ljmp
or
mov
sub
sahf
pushf
ss
test
int
jmp
dec
jb
add
inc
add
inc
add
bound
aas
scas
cmp
add
xor
add
cltd
cmpsl
add
add
ret
xchg
fwait
js
add
xchg
outsb
out
sbb
add
dec
outsl
adc
mov
and
sbb
push
call
add
loopne
subl
push
add
cmp
mov
jmp
in
push
out
mov
ljmp
push
sub
add
push
cmp
add
or
std
sbb
xchg
xor
xor
pop
lcall
shll
push
outsb
gs
push
mov
mov
mov
add
icebp
loopne
lret
in
mov
pop
xor
push
mov
add
sub
imul
in
mov
leave
sbb
add
adc
dec
cmpsb
dec
daa
mov
add
jmp
pop
adc
sbb
mov
add
push
loop
and
in
mov
stc
cmpsl
aas
pop
dec
xchg
push
mov
add
repnz
adc
aas
adc
imul
inc
add
popf
addr16
mov
rolb
mov
rolb
rorl
mov
dec
sbb
pop
jge
test
add
inc
xlat
pop
mov
movb
fwait
hlt
mov
loopne
dec
add
out
sub
push
icebp
push
xchg
sbb
mov
jmp
mov
mov
mov
add
adc
hlt
jp
addb
movsb
sti
jb
xchg
out
mov
data16
out
mov
add
jmp
cmpsb
push
rorl
cli
mov
loope
dec
add
bound
mov
insl
scas
xor
rolb
or
or
push
lahf
popa
icebp
out
movsb
jno
popf
jle
scas
mov
dec
jo
loopne
and
stos
add
mov
icebp
adc
add
outsb
mov
jns
in
cmc
and
movsb
adc
fs
mov
and
rolb
add
scas
into
xchg
inc
add
push
mov
mov
in
fs
outsb
test
sbbl
pop
ja
adc
insb
jbe
or
bound
cmpsb
sti
cli
stc
jnp
fadds
add
stos
in
outsb
outsl
test
add
xchg
adc
push
sbb
pop
shl
mov
loopne
or
fldcw
out
cmp
mov
das
mov
xor
xor
cmc
mov
mov
push
xor
dec
popf
xchg
push
les
sbb
or
repnz
lret
pop
push
push
add
push
jp
addr16
xor
mov
add
out
pop
ja
push
in
fistpl
out
sti
lds
jbe
dec
push
add
cmpl
sub
push
add
enter
inc
clc
std
pop
mov
addb
or
xchg
in
and
xchg
push
hlt
pushf
jno
mov
lock
mov
rolb
lock
xchg
mov
inc
add
rcr
movb
fldt
sahf
dec
das
loope
mov
lcall
cmpsl
jp
aas
pop
in
jo
mov
out
or
cmp
xor
sbb
mov
mov
enter
jge
and
xchg
scas
sti
mov
mov
sahf
push
lds
sahf
mov
pop
mov
pop
sbb
cld
jle
add
stc
bnd
dec
outsb
stos
arpl
negb
cmp
mov
adc
ret
lret
fimuls
add
gs
popf
adcl
test
movb
add
in
shlb
addb
addb
add
mov
fcmove
jo
push
add
sbb
xchg
jae
pop
mov
sbb
sub
test
pop
hlt
dec
scas
inc
mov
add
cmp
lret
add
stc
dec
popa
xchg
cli
mov
push
xor
add
push
pusha
add
out
add
add
shll
mov
cmp
out
arpl
jnp
stos
mov
negb
sbb
sub
push
mov
pop
fldcw
jle
jbe
in
mov
adcl
ds
fnstsw
cmp
xchg
inc
add
push
add
rolb
mov
push
rolb
bound
out
sub
lret
add
mov
jb
shl
test
push
and
repz
les
scas
aad
pop
lcall
js
add
jmp
rcrb
movsl
bound
cltd
dec
ljmp
adc
push
adc
fisttpl
pop
and
pop
dec
insb
incl
fists
or
loope
js
mov
sub
aad
insl
xlat
lds
add
cmpl
add
in
add
je
sbb
int3
xchg
fwait
jbe
shrb
je
iret
imul
push
pusha
add
mov
sete
mov
iret
mov
mov
xorl
cmovo
daa
aad
in
mov
sbb
xorl
fwait
mov
inc
add
cmp
popf
jb
ja
and
sarb
adc
add
cmp
add
push
loopne
push
pop
lcall
and
add
ret
in
and
and
arpl
pop
mov
inc
cld
mov
ret
mov
cmp
add
dec
movb
push
out
inc
add
test
test
ret
dec
add
add
mov
rolb
ret
mov
cmpsb
fiadds
je
sub
fdivrs
in
mov
mov
add
addr16
add
addr16
loope
cmp
pop
sbb
cltd
lcall
test
daa
inc
add
gs
ja
aaa
cs
jb
outsb
jae
fsubs
mov
jns
xor
push
add
aas
jge
addb
aam
pop
mov
inc
add
imul
mov
and
jno
iret
and
lcall
sarb
bound
clc
add
xor
mov
arpl
out
test
inc
add
mov
or
add
ljmp
mov
jns,pn
cmp
fs
test
jle
jp
loope
and
push
and
ja
mov
popa
daa
sub
add
push
mov
jle
or
dec
out
out
mov
add
mov
adc
sti
fnsave
push
jbe
sub
xor
fwait
inc
inc
cmp
stos
inc
test
cmp
repnz
jl
jnp
mov
mov
and
loope
insb
addb
cli
mov
mov
push
xchg
pushf
adc
adc
inc
add
bound
dec
fs
std
jno
mov
mov
mov
dec
pushf
popa
dec
sbb
in
movsl
std
cmpsl
push
push
jle
fbstp
jnp
add
add
mov
jbe
xor
cmp
mov
jo
adc
sub
jle
icebp
mov
mov
and
mov
pop
push
insl
sub
idivb
jmp
les
jbe
sbb
fmul
push
ss
push
add
dec
enter
inc
mov
push
push
insl
inc
sbb
ds
in
aam
push
rorl
jmp
push
int
add
ret
fwait
mov
xchg
insb
mov
add
cwtl
fistl
mov
push
mov
mov
notl
xchg
in
lret
sub
gs
add
xor
adc
loop
push
call
popa
fmull
xor
or
out
sbb
mov
jp
sbb
xchg
mov
fcmovbe
out
dec
jle
add
sbb
xor
cmp
enter
fdivs
fsts
stos
lods
xlat
cmpsw
xchg
mov
pop
shl
xor
das
push
test
mov
ret
dec
dec
jne
movsb
loope
xor
add
fdiv
or
imul
dec
fs
or
lss
lock
inc
add
jno
addb
mov
add
lock
mov
lock
notl
out
add
sub
ja
lret
mov
add
push
out
jno
nop
rcll
fisttpll
add
ja
and
inc
sar
mov
insb
mov
cmp
popf
aas
mov
popf
insb
xor
mov
jecxz
outsb
movb
and
rorl
jns
testb
cmp
jle
add
outsl
sbb
aad
add
frstor
add
xchg
cltd
movsb
mov
push
or
push
add
sti
rorl
addr16
cld
inc
mov
add
pop
sub
ror
mov
dec
jne
jp
outsl
xor
out
mov
icebp
inc
add
mov
jb
push
in
xor
xchg
out
lret
fstl
mov
rolb
je
fistpll
sub
dec
xor
mov
adc
fmull
lret
add
adc
aaa
sbb
pushf
ds
aaa
test
shll
hlt
xor
je
insl
fistpll
insl
popa
pop
fwait
out
sub
adc
add
stos
outsl
push
or
jle
je
inc
add
shrl
and
sub
scas
and
mov
inc
add
cmp
cs
xchg
cli
loopne
pop
aam
movsl
cmp
pop
imul
movb
adc
aam
mov
and
inc
add
mov
push
aam
fcomi
or
inc
add
std
xchg
out
inc
add
mov
push
xchg
clc
and
push
mov
fsub
sbb
out
jne
cmp
mov
dec
add
es
movsb
in
mov
out
sbb
rolb
jno
sub
arpl
inc
add
rcrb
insl
inc
add
mov
sti
or
add
lods
push
fwait
add
and
in
cmp
fildll
inc
add
popf
icebp
fistps
add
out
call
xchg
sti
xor
jne
add
add
outsl
mov
adc
cmc
and
sbb
pop
lods
rcll
pop
xchg
rclb
fsubr
and
jmp
xor
xchg
jbe
out
jge
dec
pusha
add
mov
xlat
cmpsl
and
js
add
jmp
gs
scas
incl
push
mov
rorb
and
mov
and
je
leave
mov
add
test
and
pop
jecxz
repz
lret
enter
xchg
xchg
xor
out
shll
jo
jl
addb
roll
inc
add
fcomps
pop
sbb
scas
andl
cmp
jb
jmp
es
inc
add
add
add
sub
imul
add
mull
add
icebp
pop
mov
jecxz
bound
inc
imul
test
add
addr16
mov
mov
outsb
jge
lods
cmp
add
adc
or
xchg
mov
mov
add
jno
push
popw
cmc
adc
add
cltd
mov
sub
mov
aam
inc
sbb
aaa
scas
outsb
mov
adc
lods
inc
pusha
add
lret
clc
addb
insl
xchg
das
jmp
cs
mov
jle
sub
test
insb
aaa
xlat
push
jae
jmp
jae
mov
lea
lock
adc
js
add
ds
push
imul
mov
push
imul
mov
add
push
and
in
push
jge
push
and
loop
mov
sub
add
mov
add
mov
push
jg
int
outsl
push
add
xchg
sarb
lods
movb
push
ljmp
or
ds
inc
xor
sub
pushf
shl
daa
sbb
int3
or
xchg
inc
add
into
out
pop
cld
inc
add
cli
push
lds
lahf
out
call
adc
or
or
mov
pop
ljmp
add
iret
mov
jge
aam
add
and
cmp
cmp
push
shll
stos
or
mov
outsb
ret
mov
aaa
add
jmp
mov
push
cs
mov
stc
in
icebp
xchg
and
mov
xchg
xor
rcl
adc
sbb
out
mov
xchg
iret
or
outsb
mov
rolb
cmpsb
shrb
sbb
inc
add
in
les
cmc
jno
jb
xchg
shl
scas
scas
cmp
cli
xchg
mov
inc
add
stc
leave
fcompl
cld
stos
xchg
cmpsl
in
xlat
sbb
sarb
jno
mov
leave
add
out
adcl
decl
out
cmpsb
push
push
inc
add
push
mov
ret
push
in
xor
cltd
loope
or
rcll
ljmp
fwait
rorl
xchg
xor
push
shrl
aam
push
dec
and
stc
fwait
jae
sti
sbb
sub
mov
into
sbbl
out
and
dec
int3
loopne
imul
popf
mov
jg
into
xor
inc
add
jmp
xor
out
xor
adc
addb
push
push
test
jno
mov
dec
jp
adc
stos
stc
clc
lods
inc
add
into
sub
imul
sbb
incl
xchg
jbe
jo
pop
inc
sub
sub
or
decl
dec
int3
clc
jge
movsl
cmpsl
test
loop
fildl
ret
add
in
call
jns
cmp
jmp
inc
cwtl
sbb
mov
xchg
inc
sbb
xchg
pop
adc
lods
scas
xor
rolb
fucompp
cmp
or
pop
ret
sub
shll
adc
das
mov
cmp
mov
cwtl
xchg
adc
mov
cltd
inc
add
add
inc
push
fcompl
mov
push
sahf
ljmp
add
in
dec
roll
lods
push
scas
cmp
loopne
sti
push
dec
dec
jnp
add
xchg
jp
add
stos
jns
bound
mov
sti
rep
add
lea
mov
pop
push
je
aam
xlat
add
mov
cmpsb
xor
test
outsb
inc
addb
scas
or
rolb
mov
filds
test
sahf
cmpsl
mov
mov
out
adc
cmpsb
out
mov
ljmp
shlb
mov
adc
sbb
stos
leave
and
sub
add
test
int
cs
add
xchg
push
daa
inc
jp
sbb
push
inc
pop
into
mov
fbld
addb
dec
fiaddl
push
sub
sti
cmp
cmp
in
push
or
ljmp
mov
add
in
lea
cmp
dec
mov
dec
xchg
clc
inc
add
dec
mov
push
adc
out
xchg
lret
loopne
or
xchg
roll
lock
sub
fimuls
shlb
jb
ja
ds
sti
gs
jmp
mov
fimuls
mov
jle
add
not
ds
lcall
dec
stc
hlt
repz
add
pop
jmp
pop
scas
pop
dec
push
push
into
sti
sub
mov
cmp
movsl
push
int
xchg
sahf
or
lea
div
or
cmp
sbb
add
mov
mov
sti
scas
arpl
lret
pop
pop
cli
dec
adc
not
and
xor
cli
and
xchg
or
cmpsl
ret
add
adc
mov
push
mov
pusha
add
jge
xchg
add
dec
cld
jmp
add
add
inc
add
mov
xor
cmc
or
xchg
ret
or
loope
scas
pushf
add
jnp
stc
jge
popf
jmp
lock
aad
scas
xchg
es
mov
pop
sbb
insl
mov
xchg
enter
jge
lods
xchg
xchg
fsubs
stos
and
xchg
out
addb
jle
add
mov
bnd
mov
sti
fsubrl
popa
xchg
das
fs
add
and
push
mov
adc
add
addr16
cltd
add
sbb
push
pop
outsl
addr16
sub
sbb
std
std
movsb
push
ret
jl
sub
mov
cld
ljmp
jl
ja
je
pop
or
and
mov
in
or
fistpl
lods
adc
addb
mov
mov
jge
jb
add
add
jnp
cmc
iret
addl
pop
adc
adc
jnp
jns
pop
ret
rorb
aad
cmp
jmp
pop
inc
jnp
cmpsb
popa
sahf
incb
push
cmpsl
xchg
push
sub
pop
mov
out
add
add
fcompl
add
int
dec
movsb
mov
jbe
cltd
out
aaa
data16
js
add
inc
add
pop
cmpsb
adc
in
add
adc
std
ret
dec
outsb
cmpsl
jge
cmp
imul
sbb
stos
stc
xor
call
imul
sub
and
jbe
das
sbb
push
cmova
imul
pop
in
movsl
lahf
xchg
aam
test
shl
ror
iret
mov
xor
push
hlt
sub
mov
push
xchg
pop
adc
add
sub
bound
cmc
sbb
pop
jb
pop
pop
scas
cltd
mov
int3
fldenv
hlt
test
xchg
loope
popa
cmp
sbb
adc
add
or
aad
xchg
pop
ds
ret
ret
mov
push
add
pop
adc
cmp
add
jle
std
fsubl
add
mov
push
pop
mov
paddsb
add
sbb
and
andl
push
addb
testb
fs
dec
push
add
lods
mov
aam
add
inc
mov
adc
add
mov
movsb
lods
adc
cwtl
xchg
sub
xlat
dec
push
jns
out
jg
inc
add
add
out
xorl
pop
adc
pop
mov
imul
addr16
jb
in
pusha
add
mov
adc
sub
cmp
add
xchg
or
aaa
pop
jp
lcall
xchg
xor
mov
cmpsl
enter
cmc
dec
cltd
dec
jg
jmp
mov
test
sub
pop
lret
xlat
in
jae
ror
test
inc
add
and
repz
mov
cld
mov
scas
xor
test
pop
adc
aad
add
xchg
nop
dec
fld
sub
push
lods
outsl
fisttpl
and
das
in
movb
lods
sub
push
or
push
xchg
xchg
sub
pop
sbb
nop
stos
ja
repnz
in
and
fldl
out
bound
adc
test
xchg
repz
repnz
add
jbe
or
add
jl
aas
pop
psrlw
stos
xchg
jo
insl
mov
movsl
out
imul
mov
add
lret
les
fxch
cld
adc
add
jo
push
pop
jne
jns
add
mov
add
jl
sub
test
imul
shrl
pop
aam
mov
cmp
ljmp
cmp
cmp
dec
cmp
popf
lahf
daa
ss
imul
bound
pushf
movsl
or
jb
xor
outsl
jecxz
outsl
xor
fdivrs
fucomi
xlat
in
cltd
inc
jo
aad
push
sbb
fisubs
mov
cmp
add
test
scas
rcr
or
mul
sub
cs
stos
adc
test
jbe
mov
not
bound
loope
sbb
in
mov
adc
xorl
inc
lahf
cwtl
mov
pop
sti
enter
or
mov
cmpsl
cmc
cli
lret
jbe
les
mov
jns
mov
pop
adc
dec
mov
mov
sbb
and
cs
sub
xor
lret
ror
push
add
outsb
mov
rclb
jae
outsl
insl
addb
add
addb
add
test
int3
aam
lock
imul
add
and
xlat
int
mov
pop
jbe
fcmove
sbb
xchg
cmpsb
popf
ljmp
add
and
push
hlt
mov
add
mov
jnp
shll
rorb
cmp
gs
fstps
mov
addb
or
xchg
test
xor
add
add
xor
and
mov
dec
rorl
test
arpl
insb
lock
add
mov
inc
leave
xor
mov
push
fidivs
into
bound
stos
xchg
aad
cmc
jbe
test
xchg
movsb
movsb
ds
mov
sarb
push
mov
adc
int
xchg
add
add
test
xchg
je
lock
arpl
mov
mov
push
mov
pop
movsb
xlat
pop
test
dec
jp
les
jp
sub
add
add
add
push
insl
cld
ret
mov
dec
je
aas
test
imul
shrl
addr16
cmc
stc
push
jmp
nop
add
addb
shrl
or
cmp
adc
or
sbb
fnstenv
scas
adc
cmp
dec
mov
lods
jb
pop
ljmp
hlt
sub
ret
rolb
cwtl
fwait
mov
lea
add
cld
aad
fwait
bound
add
add
out
inc
out
inc
add
xor
add
inc
add
inc
bound
js
inc
add
add
arpl
xchg
outsb
cmp
push
sbb
jnp
leave
insb
int3
fs
mov
pop
inc
add
push
stc
lds
pop
mov
add
pop
dec
aad
shl
or
push
add
cmpl
add
imul
lods
mov
in
and
and
pop
sbb
mov
xor
fcomip
sahf
addb
push
into
inc
add
mov
inc
add
cltd
arpl
das
mov
cmp
inc
add
popa
mov
cmp
mov
jle
in
ss
jo
xrelease
test
aam
add
mov
push
cmp
jne
dec
dec
outsl
arpl
insl
js
add
and
dec
fnstcw
inc
pop
shrl
cmp
dec
lahf
xor
fldl
jl
sub
xor
addb
addb
add
nop
mov
or
jg
ss
dec
mov
std
loop
shl
aam
dec
xor
sub
clc
add
xchg
jnp
mov
inc
pushf
mov
jo
aaa
icebp
pop
mov
adc
add
or
add
dec
or
stc
sbb
and
push
push
or
add
jo
rorl
js
add
add
add
clc
fs
stos
insl
inc
add
or
loopne
sub
es
gs
add
push
add
rolb
outsb
adc
movsb
sahf
ljmp
sbb
push
lret
mov
in
mov
sbb
or
lret
int3
scas
mov
push
xor
lret
cmp
sub
and
add
xchg
fidivrl
bound
dec
mul
mov
inc
or
enter
add
fs
int3
add
jl
pop
clc
pop
filds
add
fwait
clc
jbe
mov
add
lcall
add
sbb
test
aas
or
dec
sbb
xchg
nop
ror
mov
dec
arpl
shrb
xchg
ret
fisubrs
fdivl
add
xor
jge
ficomps
clc
mov
jns
js
pop
pop
movsb
insb
mov
cmp
mov
out
or
xor
test
jo
movsl
divl
cmp
fwait
push
ja
bndstx
xchg
or
mov
push
gs
popa
push
push
shrl
test
sub
ds
mov
jno
pop
sbb
add
jne
jg
and
add
cmc
insl
cmpsl
out
jecxz
cmp
xchg
pop
sti
fwait
lds
int
int3
sbb
mov
sbb
addr16
or
add
add
add
sbb
repz
cmpsl
or
mulb
andl
xchg
cmpsl
addl
int
in
sbb
add
out
arpl
xchg
mov
sbb
push
xchg
jno
adc
lret
add
aam
mov
idiv
xorl
fisubs
push
out
dec
mov
ja
ret
out
lock
ja
jge
xor
push
pop
sti
or
xor
adc
pop
push
int3
ljmp
cmc
ljmp
push
pushf
not
jne
lods
hlt
outsl
push
add
push
inc
in
jecxz
xor
lret
mov
mov
sub
sbb
aas
fisttps
xor
cmpl
pop
inc
in
sbb
mov
push
add
push
inc
add
into
test
sbb
xchg
rcrl
sarl
push
jp
push
add
icebp
sarb
mov
das
sub
rolb
sub
jno
xchg
data16
sub
and
rolb
and
sahf
cmp
stc
push
ret
hlt
push
dec
xchg
push
mov
add
push
addb
xchg
das
ja
inc
add
add
cmp
add
mov
adc
push
or
xchg
push
add
scas
jp
movsb
ret
ret
cltd
shll
sbb
iret
out
enter
push
lcall
fcomps
test
ret
jnp
sbb
xchg
inc
add
pop
scas
call
loop
pushf
mov
roll
add
or
push
cmp
sahf
mov
fisubl
cmpsl
test
sahf
aaa
in
pop
sbb
add
dec
xchg
or
insl
and
cmp
lahf
xor
xor
sti
pop
lret
jo
pop
call
mov
outsl
xchg
popf
and
sub
or
mov
in
push
add
ret
inc
aam
mov
add
push
pop
sub
bnd
hlt
xor
test
jg
iret
fwait
mov
shll
les
addb
movsb
pop
pop
in
les
mov
add
fisubrl
add
shlb
mov
stos
push
lock
adc
and
pop
loopne
movsl
pop
fs
addb
xor
push
ret
sti
int
out
cmpsl
repz
add
cld
sub
fs
in
test
enter
mov
sbb
add
stc
lds
pop
mov
add
loope
aas
lcall
rorl
dec
cmp
outsl
jnp
imul
xchg
popf
adc
jp
xchg
and
cmp
add
loop
jmp
rcrb
pop
pop
hlt
xor
repz
sbb
add
sahf
repz
add
rolb
adc
push
rcl
lahf
fisttps
jne
or
loopne
cli
enter
stos
loop
cmovo
call
or
movsl
imul
popf
movb
imul
pop
and
pop
stc
les
or
lcall
imul
fiadds
gs
sub
pop
cltd
inc
push
mov
xchg
cs
incl
push
cmp
stc
xchg
in
mov
add
into
dec
mov
inc
out
stos
adc
es
sub
xor
loopne
lds
pop
lcall
repnz
cmp
dec
fsts
jne
ret
sti
daa
jg
lds
or
pop
jl
add
dec
cmp
push
sahf
sbb
adc
fstps
or
add
fimuls
xchg
imull
add
out
daa
movsl
dec
outsb
sbb
lods
out
jb
mov
push
aad
mov
add
add
scas
or
fwait
push
das
and
mov
add
add
mov
cmpsl
add
flds
mull
add
cmpsl
jg
jmp
sarb
lcall
inc
add
jp
mov
add
add
xchg
cld
and
es
hlt
mov
inc
push
mov
ds
inc
add
add
add
testl
xor
xor
stc
mov
lret
nop
arpl
add
aam
mov
mov
call
add
or
or
cld
addb
mov
add
scas
mov
mov
pop
insb
jo
jae
push
add
xchg
cld
mov
mov
mov
jle
add
add
cli
adc
add
xchg
xor
adc
sbb
jne
pop
hlt
mov
in
test
jb
add
cli
add
fildll
mov
repnz
push
mov
push
mov
imul
js
sbb
jmp
mov
ljmp
icebp
arpl
xlat
push
inc
push
inc
add
inc
inc
xchg
sbb
and
sbb
cld
add
cld
fs
fsubp
pop
mov
mov
rolb
pmullw
add
add
or
xor
into
nop
push
mov
cmp
clc
and
fcomip
sub
das
iret
and
arpl
mov
lds
imull
movsb
jb
cmp
mov
aam
stos
jg
mov
jg
adc
jbe
jbe
movsb
jo
lcall
mov
insl
sub
add
cmc
jnp
jne
xor
lret
pop
scas
cmp
nop
inc
enter
add
loope
scas
push
lods
gs
dec
rolb
or
and
sub
xchg
sarb
inc
add
outsl
lods
sub
add
sub
add
cmp
pop
lea
inc
add
inc
iret
fcoml
sbb
cmc
movsb
adc
jo
and
xchg
sbb
in
js
pop
bound
xchg
call
out
jmp
push
popa
bound
mov
pop
jmp
cwtl
outsl
xchg
mov
test
mov
jle
test
mov
inc
add
lcall
jno
mov
cmpsb
dec
xor
jmp
leave
rolb
sbb
jp
pop
movsl
bnd
in
subl
dec
push
mov
pusha
add
push
pop
add
aam
add
push
aad
xor
fs
popl
sub
jno
sbb
mov
test
push
or
test
test
out
pop
fistl
xor
push
je
sub
add
add
