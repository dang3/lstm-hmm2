ja
loopne
cmp
loopne
loop
loopne
push
movsl
loopne
xchg
loopne
call
mov
loopne
inc
test
mov
mov
loopne
in
loopne
scas
cmpsl
loopne
in
loopne
jae
loopne
push
loopne
adc
loopne
scas
mov
loopne
cmp
mov
movsb
loopne
adc
loopne
inc
mov
loopne
push
test
mov
movsl
loopne
mov
mov
test
mov
movsl
loopne
push
cmpsl
loopne
and
loopne
popf
mov
loopne
and
mov
loopne
mov
mov
loopne
andb
push
movsb
loopne
mov
loopne
cmp
mov
movsb
loopne
and
loopne
test
mov
loopne
jmp
mov
movsb
loopne
movsb
mov
loopne
test
loopne
out
loopne
pop
test
mov
cmpsl
loopne
push
cmpsb
loopne
and
loopne
mov
test
mov
mov
loopne
add
movsl
loopne
add
loopne
lret
mov
movsl
loopne
loopne
nop
movsb
loopne
int
loopne
dec
mov
loopne
inc
test
mov
mov
loopne
clc
cmpsl
loopne
nop
cmpsb
loopne
shll
loopne
dec
mov
loopne
mov
cmpsl
loopne
push
test
mov
cmpsl
loopne
movsb
movsb
loopne
jno
loopne
sbb
mov
movsb
loopne
out
cmpsb
loopne
inc
test
loopne
imul
mov
movsb
loopne
bound
loopne
movsb
loopne
xchg
test
mov
mov
loopne
mov
test
mov
mov
loopne
cwtl
mov
loopne
ret
mov
loopne
adc
movsl
loopne
mov
loopne
insb
movsl
loopne
ret
mov
loopne
jo
loopne
mov
loopne
mov
test
mov
cmpsb
loopne
jecxz
loopne
or
movsl
loopne
dec
test
mov
test
mov
cmpsb
loopne
mov
loopne
or
mov
cmpsl
loopne
shrl
loopne
sub
loopne
pop
movsl
loopne
xor
cmpsl
loopne
add
loopne
adc
cmpsb
loopne
add
mov
movsl
loopne
cmpsl
loopne
mov
loopne
jne
loopne
pusha
mov
loopne
inc
test
mov
mov
loopne
dec
movsl
loopne
inc
cmpsl
loopne
pop
test
mov
cmpsb
loopne
int
loopne
jno
loopne
sbb
mov
test
loopne
insb
movsb
loopne
adc
loopne
movsl
loopne
movsl
movsb
loopne
fisubs
mov
movsb
loopne
sbb
loopne
push
test
loopne
mov
loopne
jecxz
loopne
push
movsb
loopne
aaa
test
loopne
dec
mov
loopne
test
loopne
shll
loopne
test
mov
movsb
loopne
jecxz
loopne
dec
cmpsb
loopne
dec
mov
loopne
cmp
loopne
shll
mov
test
mov
movsl
loopne
pop
test
mov
cmpsb
loopne
loopne
mov
mov
cmpsl
loopne
hlt
movsb
loopne
hlt
movsl
loopne
lods
mov
loopne
insl
mov
loopne
out
loopne
dec
cmpsl
loopne
sti
mov
loopne
push
mov
loopne
ret
cmpsl
loopne
sti
movsl
loopne
mulb
loopne
iret
mov
loopne
mov
cmpsb
loopne
lret
mov
movsl
loopne
inc
mov
loopne
add
loopne
mov
loopne
andb
mov
mov
loopne
lret
mov
loopne
mov
loopne
mull
loopne
push
mov
loopne
xchg
movsl
loopne
lcall
mov
mov
loopne
pop
movsb
loopne
sbb
cmpsl
loopne
and
loopne
fs
mov
movsb
loopne
hlt
cmpsl
loopne
stos
mov
loopne
das
movsl
loopne
in
test
mov
cmpsb
loopne
pop
test
mov
mov
loopne
lock
loopne
xchg
mov
loopne
mov
loopne
pop
cmpsl
loopne
pop
test
mov
mov
loopne
mov
loopne
xor
test
mov
mov
loopne
jae
loopne
imul
loopne
scas
test
mov
test
mov
test
loopne
andl
loopne
fsubs
mov
mov
loopne
xchg
cmpsl
loopne
pop
mov
loopne
int
loopne
push
mov
loopne
ja
loopne
cmp
loopne
in
loopne
sub
loopne
add
loopne
sbb
loopne
or
loopne
jbe
loopne
icebp
test
mov
mov
loopne
pushf
movsb
loopne
fisubl
loopne
cmpsl
movsl
loopne
inc
mov
loopne
pop
mov
loopne
int
loopne
test
loopne
jbe
loopne
aad
loopne
lock
loopne
test
loopne
push
movsl
loopne
or
loopne
andl
loopne
mov
loopne
cmp
loopne
test
loopne
pop
test
mov
mov
loopne
mov
loopne
std
mov
loopne
int3
cmpsb
loopne
nop
cmpsb
loopne
int3
cmpsb
loopne
das
cmpsl
loopne
scas
mov
loopne
sbb
loopne
push
cmpsb
loopne
popa
movsb
loopne
xchg
loopne
fwait
movsb
loopne
xchg
loopne
into
cmpsl
loopne
dec
mov
loopne
cmp
loopne
jae
loopne
jno
loopne
cwtl
mov
loopne
icebp
movsb
loopne
mov
loopne
out
loopne
dec
movsb
loopne
aas
movsb
loopne
test
loopne
xchg
movsl
loopne
mov
loopne
mov
cmpsb
loopne
inc
movsl
loopne
pop
cmpsb
loopne
pushf
cmpsb
loopne
push
test
mov
movsl
loopne
shlb
mov
cmpsb
loopne
int
loopne
pop
cmpsl
loopne
push
loopne
xchg
mov
loopne
mov
mov
loopne
push
movsl
loopne
insl
cmpsb
loopne
andb
mov
movsl
loopne
mov
mov
loopne
arpl
loopne
shll
loopne
xor
loopne
stos
test
mov
movsb
loopne
adc
movsb
loopne
shll
mov
movsl
loopne
xlat
test
mov
movsl
loopne
aad
loopne
xchg
mov
loopne
mov
cmpsb
loopne
andb
mov
movsb
loopne
fbld
loopne
sub
mov
loopne
push
movsb
loopne
xor
loopne
and
loopne
insb
test
mov
movsb
loopne
movsl
loopne
fisubs
loopne
loop
loopne
cmc
mov
loopne
sub
movsb
loopne
and
loopne
push
cmpsb
loopne
in
movsl
loopne
push
movsl
loopne
inc
movsb
loopne
pop
movsl
loopne
sub
loopne
sub
loopne
out
mov
loopne
shll
loopne
xchg
mov
loopne
shlb
mov
movsl
loopne
xchg
mov
loopne
fwait
cmpsl
loopne
fldcw
loopne
sub
loopne
sub
test
mov
mov
loopne
sbb
mov
movsb
loopne
shll
loopne
ja
loopne
jle
loopne
cmc
mov
loopne
xchg
loopne
push
mov
loopne
out
movsb
loopne
pop
test
loopne
mov
mov
mov
loopne
test
loopne
cmp
loopne
push
test
mov
movsb
loopne
push
loopne
enter
in
cmpsb
loopne
jne
loopne
ljmp
mov
cmpsb
loopne
cli
mov
loopne
pop
cmpsl
loopne
xlat
mov
loopne
mov
mov
loopne
leave
test
mov
movsb
loopne
repz
loopne
mov
mov
loopne
pop
cmpsl
loopne
mov
loopne
cld
test
mov
mov
loopne
sub
loopne
out
loopne
push
cmpsb
loopne
shll
loopne
mov
loopne
jb
loopne
clc
test
mov
test
loopne
int3
mov
loopne
test
loopne
cmpsl
loopne
xchg
mov
loopne
or
loopne
sub
loopne
push
movsb
loopne
mov
loopne
out
cmpsl
loopne
mov
loopne
jb
loopne
jp
loopne
push
cmpsb
loopne
movsb
loopne
mov
loopne
pop
movsl
loopne
sbb
cmpsl
loopne
add
loopne
lcall
mov
test
loopne
cmp
loopne
mov
loopne
inc
mov
loopne
out
movsb
loopne
adc
loopne
sahf
mov
loopne
shlb
mov
movsl
loopne
mov
mov
loopne
hlt
mov
loopne
or
loopne
push
movsl
loopne
xchg
mov
loopne
mull
mov
movsl
loopne
sahf
mov
loopne
pop
cmpsb
loopne
sbb
loopne
dec
cmpsb
loopne
jo
loopne
in
loopne
dec
movsl
loopne
jp
loopne
mov
movsb
loopne
pop
cmpsb
loopne
shll
mov
cmpsl
loopne
or
mov
test
mov
movsb
loopne
jl
loopne
xchg
loopne
cmpsb
movsb
loopne
mov
mov
mov
loopne
les
loopne
add
loopne
mov
loopne
mov
loopne
dec
movsb
loopne
fildll
loopne
in
movsb
loopne
adc
mov
test
mov
cmpsl
loopne
sahf
mov
loopne
jae
loopne
fwait
test
mov
cmpsb
loopne
bound
loopne
adc
loopne
sbb
loopne
mov
cmpsb
loopne
mov
mov
cmpsl
loopne
add
loopne
dec
cmpsb
loopne
and
loopne
adc
mov
test
mov
mov
loopne
xchg
mov
loopne
addr16
bound
loopne
test
cmpsb
loopne
shll
cmpsb
loopne
sub
loopne
insl
mov
loopne
adc
loopne
arpl
loopne
mov
loopne
insb
mov
loopne
mov
loopne
jb
loopne
jae
loopne
sub
loopne
jmp
cmpsl
loopne
pop
cmpsb
loopne
inc
movsl
loopne
les
mov
cmpsl
loopne
movsb
cmpsb
loopne
scas
test
mov
cmpsl
loopne
andl
loopne
xor
mov
loopne
mov
loopne
pusha
mov
loopne
mov
movsb
loopne
cmp
loopne
jo
loopne
ret
mov
mov
loopne
dec
movsl
loopne
sbb
loopne
repnz
loopne
dec
cmpsb
loopne
push
movsl
loopne
sti
mov
loopne
arpl
loopne
mov
loopne
in
loopne
sub
loopne
out
movsl
loopne
push
mov
loopne
jmp
loopne
mov
test
mov
mov
loopne
pop
mov
loopne
mov
test
mov
mov
loopne
xchg
loopne
pop
test
mov
cmpsb
loopne
pop
cmpsb
loopne
push
movsb
loopne
cmp
loopne
das
cmpsl
loopne
ds
loopne
dec
mov
loopne
push
cmpsb
loopne
push
mov
loopne
mov
loopne
data16
loopne
movsb
mov
loopne
sbb
loopne
sbb
loopne
out
movsb
loopne
mov
loopne
pop
mov
loopne
xchg
mov
loopne
xor
loopne
mov
movsl
loopne
in
loopne
push
test
mov
cmpsb
loopne
in
test
mov
mov
loopne
inc
mov
loopne
lret
mov
mov
loopne
cmp
loopne
adc
mov
mov
loopne
into
movsb
loopne
dec
test
loopne
movsl
mov
loopne
sbb
loopne
loope
loopne
jbe
loopne
cmp
loopne
fisubs
mov
movsb
loopne
bound
loopne
push
cmpsl
loopne
push
cmpsl
loopne
mull
loopne
mov
loopne
pop
test
mov
movsb
loopne
lods
test
mov
cmpsl
loopne
stc
movsl
loopne
test
test
loopne
add
loopne
inc
test
mov
cmpsl
loopne
cmc
movsl
loopne
hlt
test
mov
movsb
loopne
mov
cmpsl
loopne
and
loopne
aam
loopne
jns
loopne
mov
mov
loopne
dec
test
loopne
jae
loopne
mov
test
mov
cmpsb
loopne
and
loopne
insl
cmpsb
loopne
test
loopne
in
loopne
shrl
loopne
cmpsl
cmpsl
loopne
pop
cmpsl
loopne
push
movsb
loopne
jmp
loopne
movsl
mov
loopne
mov
loopne
lret
mov
cmpsb
loopne
cmpsl
movsb
loopne
jmp
loopne
loopne
loopne
pop
mov
loopne
andb
mov
mov
loopne
sbb
loopne
mov
loopne
lea
loopne
sahf
movsb
loopne
fisubs
loopne
adc
movsb
loopne
mov
movsb
loopne
cmp
loopne
cltd
cmpsl
loopne
cmpsl
cmpsb
loopne
mov
movsl
loopne
push
mov
loopne
mov
mov
loopne
push
loopne
fldenv
mov
movsb
loopne
xchg
cmpsb
loopne
pop
movsb
loopne
push
movsl
loopne
mov
loopne
movsb
loopne
pop
movsl
loopne
mov
mov
loopne
cmpsw
loopne
pop
movsl
loopne
les
mov
test
mov
movsb
loopne
movsl
mov
loopne
mov
movsl
loopne
pop
mov
loopne
cmpsl
cmpsb
loopne
mov
loopne
push
movsl
loopne
repnz
mov
test
loopne
js
loopne
inc
movsb
loopne
cmpsl
mov
loopne
push
loopne
or
loopne
ret
mov
movsb
loopne
cmpsl
movsl
loopne
lret
mov
mov
loopne
mulb
loopne
mov
loopne
sbb
movsl
loopne
sbb
loopne
js
loopne
movsb
loopne
lret
movsl
loopne
arpl
loopne
out
mov
loopne
xchg
test
mov
mov
loopne
sub
movsb
loopne
popf
mov
loopne
inc
test
mov
movsl
loopne
and
loopne
imulb
loopne
leave
movsl
loopne
andb
mov
movsl
loopne
insl
mov
loopne
push
mov
loopne
fisubl
loopne
pop
test
loopne
imul
mov
test
mov
movsb
loopne
movsl
loopne
add
loopne
insb
cmpsl
loopne
stos
movsb
loopne
pop
mov
loopne
dec
mov
loopne
ljmp
mov
mov
loopne
out
loopne
and
loopne
insl
mov
loopne
xor
mov
loopne
pop
cmpsl
loopne
jne
loopne
inc
cmpsl
loopne
jl
loopne
sbb
loopne
xor
loopne
pop
test
loopne
sbb
test
mov
mov
loopne
push
test
mov
movsb
loopne
inc
test
loopne
fldt
loopne
push
mov
loopne
fisubl
mov
cmpsl
loopne
shll
loopne
inc
test
mov
test
loopne
cli
test
mov
mov
loopne
mov
movsl
loopne
cmpsb
mov
loopne
fbld
loopne
push
test
mov
test
mov
mov
loopne
pop
movsl
loopne
inc
cmpsl
loopne
mov
loopne
jns
loopne
enter
xor
loopne
dec
test
loopne
sbb
loopne
mov
loopne
xchg
mov
loopne
mov
loopne
shlb
loopne
in
movsl
loopne
push
cmpsl
loopne
mov
mov
loopne
andl
mov
cmpsb
loopne
nop
movsl
loopne
pop
movsb
loopne
cmp
loopne
fldenv
loopne
nop
cmpsb
loopne
mov
mov
loopne
mov
test
mov
cmpsl
loopne
pop
test
loopne
fildll
loopne
mov
loopne
lret
mov
test
mov
mov
loopne
fldcw
loopne
lcall
mov
mov
loopne
icebp
mov
loopne
mov
loopne
pop
cmpsb
loopne
out
loopne
iret
movsl
loopne
mov
loopne
pushf
movsb
loopne
into
mov
loopne
pop
test
loopne
cpuid
loopne
dec
movsb
loopne
aam
loopne
out
loopne
outsl
mov
loopne
dec
movsb
loopne
inc
cmpsl
loopne
inc
cmpsl
loopne
jno
loopne
mov
test
mov
cmpsb
loopne
daa
mov
loopne
xor
loopne
xor
loopne
stc
cmpsl
loopne
lods
mov
loopne
lret
mov
loopne
sahf
mov
loopne
js
loopne
push
mov
loopne
pop
cmpsb
loopne
mov
loopne
shll
mov
mov
loopne
jp
loopne
out
cmpsl
loopne
push
cmpsb
loopne
add
cmpsb
loopne
sbb
loopne
clc
movsl
loopne
xor
loopne
andl
loopne
jl
loopne
pop
test
mov
mov
loopne
jg
loopne
popa
mov
loopne
movsl
loopne
adc
cmpsb
loopne
jge
loopne
mov
loopne
dec
cmpsb
loopne
test
loopne
insb
mov
loopne
andb
in
movsl
loopne
in
loopne
mov
loopne
jge
loopne
sub
loopne
mov
loopne
mov
cmpsb
loopne
push
cmpsb
loopne
inc
cmpsb
loopne
pushf
movsl
loopne
loop
loopne
pop
cmpsb
loopne
test
loopne
jl
loopne
pop
movsl
loopne
pop
test
mov
test
mov
test
mov
movsb
loopne
int3
test
mov
cmpsb
loopne
out
movsl
loopne
mov
loopne
or
loopne
mov
loopne
shrb
loopne
or
loopne
push
cmpsb
loopne
scas
mov
loopne
push
movsb
loopne
movsl
loopne
jge
loopne
pop
mov
loopne
repnz
loopne
add
loopne
sbb
loopne
xchg
loopne
cmp
mov
movsb
loopne
call
test
mov
movsl
loopne
adc
loopne
push
test
mov
cmpsb
loopne
shlb
loopne
jbe
loopne
fldenv
loopne
insb
mov
loopne
aaa
mov
loopne
je
loopne
push
test
loopne
pusha
mov
loopne
jp
loopne
gs
mov
cmpsb
loopne
or
loopne
inc
test
loopne
dec
movsl
loopne
mov
loopne
add
loopne
sbb
mov
test
mov
test
mov
mov
loopne
jle
loopne
lods
mov
loopne
adc
loopne
repnz
loopne
hlt
test
mov
cmpsb
loopne
cmp
loopne
mov
loopne
aam
loopne
mov
test
mov
mov
loopne
or
mov
loopne
shlb
loopne
aad
loopne
mov
loopne
shll
mov
test
loopne
cld
mov
loopne
add
loopne
xchg
mov
loopne
enter
mull
loopne
std
test
mov
cmpsl
loopne
dec
cmpsl
loopne
mov
loopne
lea
loopne
dec
mov
loopne
int3
test
mov
mov
loopne
shll
loopne
jmp
test
loopne
movsb
loopne
adc
mov
mov
loopne
mov
loopne
aad
loopne
movsb
cmpsb
loopne
outsl
mov
loopne
out
loopne
enter
cmpsb
loopne
test
loopne
dec
cmpsl
loopne
shll
loopne
je
loopne
lods
movsl
loopne
mov
loopne
cmp
loopne
frstor
loopne
adc
loopne
int3
mov
loopne
xchg
loopne
mov
loopne
push
test
mov
test
mov
movsb
loopne
aas
test
loopne
ljmp
mov
movsl
loopne
sbb
loopne
or
test
loopne
push
loopne
inc
movsb
loopne
push
mov
loopne
cld
mov
loopne
cmp
loopne
xchg
loopne
mov
loopne
or
loopne
add
mov
mov
loopne
mov
movsb
loopne
dec
movsb
loopne
xchg
cmpsb
loopne
adc
loopne
push
cmpsb
loopne
jl
loopne
adc
movsb
loopne
xchg
loopne
mov
loopne
cmp
loopne
call
cmpsb
loopne
mull
loopne
out
loopne
shlb
mov
test
loopne
xor
movsb
loopne
arpl
loopne
loop
loopne
or
mov
loopne
jp
loopne
ljmp
loopne
pop
cmpsb
loopne
push
test
loopne
repnz
loopne
xchg
movsl
loopne
jg
loopne
js
loopne
shlb
loopne
inc
movsl
loopne
adc
loopne
mov
loopne
mov
loopne
xchg
test
mov
movsl
loopne
jle
loopne
test
loopne
push
test
loopne
sbb
loopne
aas
test
loopne
fsubs
loopne
xchg
mov
loopne
int3
movsb
loopne
arpl
mov
mov
loopne
and
loopne
repz
loopne
jno
loopne
lret
mov
cmpsl
loopne
push
loopne
shll
loopne
jne
loopne
add
mov
movsb
loopne
mov
test
loopne
leave
movsb
loopne
pop
mov
loopne
sub
loopne
mov
loopne
dec
cmpsl
loopne
stos
mov
loopne
pop
mov
loopne
sti
test
mov
movsb
loopne
xor
movsb
loopne
xor
loopne
sbb
loopne
xor
loopne
shlb
mov
movsl
loopne
insl
mov
loopne
mov
mov
loopne
dec
test
mov
cmpsl
loopne
cmp
mov
mov
loopne
mov
loopne
loopne
loopne
lahf
mov
loopne
and
loopne
push
mov
inc
add
gs
xor
add
or
sbb
pop
cld
cmp
sub
int
pop
pop
repz
pop
clc
adc
add
mov
xchg
mov
clc
sub
clc
lahf
aas
adc
add
add
mov
cmp
add
add
dec
jbe
clc
push
add
pop
ljmp
add
add
ds
pop
imul
popf
and
adc
add
clc
mov
xchg
stc
cmp
or
lods
enter
adc
add
cmc
xchg
mov
xor
lret
jl
repnz
clc
in
sti
scas
cwtl
cmp
xchg
pop
sbb
clc
shlb
lret
rol
clc
ret
clc
adc
add
sbb
clc
and
clc
clc
enter
jno
add
ret
clc
enter
add
jns
clc
repz
int3
xbegin
add
mov
loop
pop
dec
loope
mov
add
test
pop
fildl
add
sbb
xchg
or
add
insl
sub
pop
mov
add
js
clc
pushf
mov
adc
add
pop
jno
add
cmp
jo
add
sbb
xabort
cmp
clc
mov
fwait
cmc
adc
clc
nop
pusha
add
sub
adc
add
dec
jmp
add
data16
add
add
outsl
jge
fucomi
lahf
test
fs
movsl
clc
outsb
mov
clc
arpl
add
add
add
pop
jns
xabort
inc
add
cmp
clc
fwait
icebp
in
and
clc
xbegin
fs
mov
jmp
push
clc
leave
cmp
xabort
rcll
popf
test
cmp
push
iret
sar
shlb
clc
xchg
popa
add
in
sub
mov
clc
mov
clc
pop
scas
mov
dec
push
clc
jl
sub
add
adc
add
clc
sar
dec
sbb
xchg
and
fwait
out
inc
add
xor
add
add
push
add
xchg
cmp
and
add
inc
clc
inc
add
adc
add
add
xor
repnz
add
rcr
adc
mov
xbegin
inc
clc
and
push
sbb
add
cmp
jne
dec
data16
fistl
add
adc
add
push
add
loop
push
cltd
cmp
inc
clc
pushf
ud0
es
cli
lods
cmp
mov
cs
aad
add
and
or
movsl
clc
jecxz
xor
adc
add
aaa
fwait
negb
cmp
out
xchg
jbe
clc
jp
add
int3
add
add
clc
pushf
xchg
push
add
jns
or
add
pop
ret
out
int
clc
push
jo
add
add
addr16
cs
add
out
pop
or
add
push
add
fwait
jmp
add
mov
movsl
clc
xchg
loop
add
add
dec
scas
xor
add
mov
adc
jge
clc
sti
out
sub
add
hlt
push
stos
dec
stos
rorl
and
pop
inc
add
int3
jg
dec
ja
clc
push
add
push
add
push
add
mov
push
lret
add
mov
clc
test
sbb
pop
sbb
add
in
cmp
cwtl
mov
xor
add
dec
std
pushf
push
push
imul
cmp
sysret
clc
test
loopne
ljmp
add
popf
movsb
clc
pop
es
loope
fcmovnb
clc
push
push
add
push
insl
push
jp
add
xchg
xabort
movsb
clc
ret
clc
push
add
cmp
pop
mov
fs
inc
add
mov
inc
clc
ret
clc
cmp
add
mov
cmp
or
movd
jno
add
mov
clc
repnz
add
dec
mov
imul
imul
pop
jecxz
stos
sar
sbb
es
call
mov
leave
jle
clc
outsb
call
lahf
in
ljmp
inc
clc
push
add
ss
jbe
cmp
sub
pop
imul
cld
imul
test
clc
add
add
cmp
bound
add
pusha
add
mov
push
add
fcmovbe
push
lcall
jmp
add
mov
clc
call
xchg
out
jge
clc
xchg
pop
mov
clc
mov
out
mov
push
add
jo
add
icebp
xor
inc
clc
mov
sti
iret
push
add
enter
jno
add
aam
push
add
adc
mov
in
add
add
jne
loope
mov
sbb
clc
sub
in
pop
jne
jno
add
add
xchg
clc
mov
jl
ficompl
push
ljmp
rcrb
test
movsl
clc
or
mov
jg
scas
imul
pop
in
or
add
mov
add
mov
clc
in
cmp
clc
cli
dec
fnstenv
int
aam
lds
repnz
test
in
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
cltd
movsb
clc
maxps
stos
adc
add
add
add
mov
add
xor
add
clc
sub
inc
add
xchg
scas
fs
pop
and
clc
sbb
and
add
ljmp
cld
jmp
test
jg
pop
xchg
call
xor
add
rorl
pop
push
pop
dec
mov
cld
psrad
cmc
pop
in
jl
popa
add
mov
add
push
push
add
cld
jmp
and
ret
ss
ret
adc
sub
in
lahf
push
es
dec
loope
test
popf
pop
jl
pop
sbb
mov
ret
clc
jl
mov
int
roll
add
shll
clc
mov
loop
inc
clc
add
add
inc
add
leave
pusha
add
push
in
mov
clc
xor
and
add
pusha
add
pop
push
lea
cld
jmp
nop
insb
add
fwait
mov
push
jmp
sub
or
int3
pop
std
aad
push
cmp
add
fsubs
add
add
add
push
leave
cld
jmp
subb
sub
jp
clc
cs
test
inc
clc
mov
ljmp
clc
add
add
cld
insb
mov
outsb
dec
dec
testb
clc
mov
test
imul
clc
jno
add
add
cmp
clc
push
cs
clc
push
cmp
clc
imul
lret
jmp
clc
fisttpll
cmp
dec
aas
stos
dec
mov
lods
mov
loope
clc
push
sbb
inc
cld
jmp
sub
scas
dec
sub
ss
faddl
add
push
dec
cltd
inc
clc
enter
clc
icebp
jge
clc
sar
in
out
fsubrl
enter
and
add
cwtl
pop
pushf
fwait
mov
push
ljmp
jmp
sub
es
sar
add
rorb
adc
and
add
in
dec
lods
jbe
and
add
add
clc
push
clc
aam
movsb
clc
mov
clc
sbb
in
add
add
clc
pop
popl
add
push
add
sub
inc
clc
negb
mov
xor
mov
ljmp
mov
add
add
clc
aam
and
mov
clc
push
add
push
add
in
popa
add
inc
clc
xor
add
add
clc
jg
clc
xchg
clc
push
movsl
cld
jmp
mov
sub
sbb
test
addb
cld
jmp
lock
add
fs
and
not
cld
jmp
push
push
cmpsb
sub
ret
clc
test
imul
mov
add
add
add
and
add
clc
dec
jno
add
clc
add
add
add
inc
clc
sbb
add
cld
mov
adc
add
jae
add
adc
add
lret
xor
add
add
cmp
add
push
mov
cld
jmp
mov
push
int3
or
add
add
add
sub
mov
clc
jp
clc
hlt
lock
clc
lret
add
inc
clc
adc
add
add
pop
push
xor
add
add
into
aas
inc
add
mov
jmp
popa
aaa
sub
jno
add
mov
pop
loopne
lret
mov
add
es
or
clc
add
add
dec
mov
movsb
clc
imul
ret
and
add
cmp
jle
repz
clc
mov
clc
sbb
add
je
popf
pop
cmpsb
clc
dec
inc
add
mov
clc
leave
dec
movsb
clc
in
push
pop
inc
clc
cmp
popa
add
mov
add
cs
jb
add
add
stos
pop
pusha
add
aas
push
add
xchg
mov
out
mov
cmp
mov
popf
inc
clc
scas
imull
rorl
cmp
negb
add
xchg
cmpl
add
sub
pop
clc
and
add
add
inc
clc
arpl
add
mov
aam
rcl
aam
push
or
mov
mov
mov
hlt
xchg
mov
sub
outsb
enter
in
cmpsl
clc
cld
mov
jae
add
mov
sbb
jmp
inc
lea
dec
xor
jge
in
pop
in
fiaddl
clc
or
cmp
sub
clc
mov
movlps
add
mov
clc
fwait
sarl
out
test
xor
add
mov
aad
push
or
add
cmp
mov
xor
test
jmp
cmp
push
pusha
add
push
add
or
add
cmp
cld
jmp
cmp
clc
std
mov
mov
clc
cmp
movzbl
sbb
jbe
cld
jmp
add
das
add
add
jmp
aas
xor
test
lahf
int
clc
repnz
add
add
sub
add
mov
add
clc
enter
add
add
add
jle
stos
adc
add
add
test
and
adc
sub
jmp
inc
add
iret
pop
ja
add
jns
add
jle
clc
lea
sti
cld
jmp
dec
sahf
or
insb
add
testl
xabort
bound
add
dec
mov
add
clc
sub
xchg
pop
sub
ficoms
decl
ss
ret
sub
add
add
add
xchg
adc
push
add
jno
add
or
add
test
add
fnstsw
cld
jmp
outsl
push
or
adc
add
lods
cmp
clc
rcrb
and
add
adc
add
add
sbb
clc
cmp
clc
cwtl
sar
add
or
clc
lods
push
jg
cmpsb
clc
push
pop
xor
add
or
add
xor
add
cmp
clc
insl
and
add
iret
sar
add
or
enter
add
lock
pop
lods
inc
clc
stos
xor
add
mov
cmp
mov
and
add
movsl
clc
pushf
xor
add
clc
js
clc
scas
mov
add
jle
clc
xor
add
add
mov
sbb
push
add
fldt
add
add
clc
sar
data16
das
test
clc
cs
outsb
es
xchg
mov
std
mov
xor
add
ret
clc
pusha
add
test
data16
dec
fidivs
mov
out
and
inc
add
scas
dec
dec
std
push
push
mov
add
out
lret
add
clc
insb
mov
clc
fs
cmp
or
in
xor
add
xchg
push
inc
clc
outsl
std
cmp
sub
xabort
add
scas
mov
cmp
add
jmp
cmp
ja
add
add
or
mull
clc
dec
cmc
bound
add
add
sub
xchg
mov
test
repnz
add
xor
add
mov
cld
jmp
adc
add
and
add
add
into
mov
shrb
cs
mov
pop
nop
inc
add
jle
mov
clc
int3
and
push
add
pusha
add
in
lea
outsl
jecxz
dec
test
mov
push
sar
clc
inc
clc
nop
dec
popf
push
push
sub
xchg
lret
dec
fs
push
loopne
sahf
dec
inc
add
aad
mov
bswap
outsb
insb
push
fsubp
clc
mov
pop
xbegin
fs
push
push
into
and
sahf
push
add
in
dec
or
add
pop
sub
pop
inc
clc
ret
clc
and
add
sbb
mov
add
leave
loop
sbb
out
js
aad
jbe
stos
mov
clc
xor
add
add
iret
lods
dec
fcomps
cmp
clc
rcll
add
enter
add
loopne
jo
add
push
cld
jmp
dec
je
dec
dec
insb
inc
clc
inc
add
jge
add
add
add
test
push
xchg
pop
clc
push
push
clc
mov
pop
dec
add
loopne
enter
dec
ja
pop
shrb
cmp
jmp
sub
clc
out
inc
add
idivl
clc
and
add
add
lods
dec
cmp
clc
sar
in
sbb
idiv
arpl
add
sub
fstp
pop
pop
rorl
cli
cld
jmp
cmp
das
pop
imul
mov
add
fiaddl
add
or
gs
and
add
add
scas
in
and
add
add
loope
mov
clc
in
fprem
dec
repnz
add
add
or
inc
clc
ss
mov
xabort
inc
add
jle
add
cld
push
add
mov
sbb
push
ret
sub
insl
dec
jo
add
jmp
sub
popa
jp
shlb
add
xchg
push
add
and
clc
pushf
pushf
add
add
mov
ljmp
and
add
sub
push
insl
pop
cmp
clc
inc
add
mov
clc
iret
lods
pop
inc
clc
std
pusha
add
mov
xchg
adc
add
jp
fcmovnb
clc
enter
clc
pop
into
inc
clc
mov
jns
dec
xor
add
clc
data16
xor
bound
add
jge
clc
sahf
or
add
das
mov
clc
shl
cld
or
cmp
insl
mov
cmp
clc
cmp
adc
push
sti
aas
add
pop
pushf
inc
clc
push
cmp
add
or
inc
add
mov
add
gs
shr
sbb
clc
jne
clc
setnp
push
clc
xlat
clc
mov
push
pop
cli
mov
xor
add
jmp
inc
add
xchg
out
aam
in
cli
fnstcw
pop
fcoms
add
mov
add
inc
clc
xchg
stc
aad
xlat
pop
jae
add
mov
cmpsl
clc
and
clc
add
cmp
xbegin
clc
inc
add
pop
pop
and
and
imul
cmp
add
push
repz
add
clc
insl
sarl
add
test
popa
add
pop
clc
insl
jbe
clc
mov
pop
data16
push
and
add
push
bound
add
fstp
cli
dec
mov
inc
add
inc
add
cld
cmp
lret
ret
clc
cmp
clc
mov
mov
mov
cmc
and
mov
add
jle
mov
daa
clc
sub
inc
add
inc
clc
push
inc
clc
arpl
add
loop
jmp
lahf
lret
sub
sub
clc
fsubp
clc
dec
mov
add
jns
clc
mov
imul
out
add
xor
or
stos
arpl
add
add
or
add
xlat
add
add
sahf
icebp
fdivs
add
and
add
popf
das
cli
shrl
pushf
mov
cmpsl
clc
adc
add
bound
add
clc
xor
add
mov
clc
outsb
int3
nop
jno
add
and
add
ljmp
sti
push
pop
cld
jmp
ja
nop
dec
push
sub
and
add
or
clc
jp
clc
jnp
nop
push
add
push
sub
cmp
cmp
clc
imul
xchg
loop
dec
fdivrp
dec
sub
add
cmp
xchg
push
add
add
add
adc
add
clc
push
adc
add
add
mov
and
add
clc
inc
add
jae
add
add
sahf
mov
clc
daa
clc
mov
test
mov
cli
pop
imul
add
std
cmp
mov
cld
jmp
and
imul
add
xchg
mov
test
mov
add
add
inc
clc
enter
push
add
dec
jmp
dec
lcall
add
pop
ret
add
pop
out
test
pushf
mov
push
fsubl
add
xor
add
sub
clc
inc
add
cmc
mov
lret
jno
add
das
adc
aam
test
xor
add
imul
inc
add
or
cmpsl
clc
inc
clc
mov
pop
es
data16
scas
fs
pop
xor
add
clc
cmp
and
add
pop
pop
jmp
add
scas
data16
or
jbe
pop
cld
jmp
sub
nop
je
int
clc
sub
clc
jl
nop
xbegin
cmp
add
inc
clc
mov
cmp
jmp
orb
mov
sar
pushf
std
xchg
sbb
clc
mov
rolb
lock
mov
clc
push
add
push
lea
add
loop
data16
stos
sub
loopne
addr16
pop
push
repz
add
add
jnp
add
popa
add
push
add
and
add
sub
pop
adc
add
adc
stos
jns
mov
and
add
add
jae
add
clc
cmp
and
jmp
mov
add
sarb
imul
ret
dec
pop
sub
adc
ja
clc
mov
push
lock
scas
add
add
add
add
mov
cld
jmp
sahf
movsb
cwtl
test
add
out
mov
clc
ss
add
call
add
jo
add
leave
push
clc
aad
lret
fwait
dec
test
ret
clc
out
mov
cmp
rcr
sbb
xor
add
add
add
clc
rclb
add
clc
and
add
add
stc
adc
add
mov
sahf
push
gs
imul
mov
fwait
cmp
clc
insl
int3
push
int
add
mov
clc
cltd
xabort
add
and
add
clc
aam
sub
in
xchg
divb
add
add
add
push
pusha
cld
jmp
or
cmp
inc
add
outsl
outsb
jle
mov
cld
jmp
and
push
sub
add
add
js
add
leave
out
pop
daa
clc
jnp
mov
jo
add
sahf
inc
add
jl
cld
in
mov
jns
add
sbb
jmp
sub
sbb
add
jp
xor
sub
fists
add
push
repnz
add
clc
dec
inc
cld
jmp
sub
xchg
sbb
testb
fistpl
add
add
add
add
sbb
mov
push
outsb
int3
push
add
add
loopne
sub
adc
add
or
inc
add
lcall
and
add
lods
psadbw
clc
fnsave
add
in
inc
clc
lahf
fcmove
add
add
add
std
ds
call
adc
add
fstp
cmp
mov
jg
inc
clc
leave
mov
test
mov
ljmp
pushf
sarb
bound
add
pop
arpl
add
and
add
mov
bound
add
jae
add
cmp
clc
imull
fstpl
xor
add
clc
scas
pop
mov
add
stc
add
ret
add
add
clc
setbe
dec
inc
clc
mov
jmp
dec
pop
add
push
mov
je
or
add
cmp
inc
add
ja
inc
clc
repnz
mov
add
cmpsb
incl
lea
jmp
cld
jmp
dec
lea
clc
mov
cmp
add
push
jo
add
add
add
add
add
jno
add
add
pop
jae
add
or
loop
sub
add
lret
clc
sub
add
or
hlt
adc
or
add
gs
push
jns
clc
dec
add
add
add
add
clc
add
add
jno
add
popa
add
fnclex
clc
clc
stc
jmp
clc
mov
cmp
fbld
add
mov
add
push
inc
clc
or
jo
add
xchg
es
inc
clc
mov
push
add
jl
or
add
push
or
add
and
jg
pop
stc
movsb
clc
or
and
add
push
aaa
pop
or
clc
xchg
lea
fisttps
mov
xchg
ljmp
jno
add
cmpsl
clc
sub
add
jmp
insb
sub
clc
dec
jno
add
sub
inc
clc
icebp
sub
cmp
xchg
test
clc
in
push
add
add
add
add
cld
jmp
nop
xor
xchg
and
add
cmp
add
add
and
rcrb
jmp
clc
fs
mov
out
fwait
popf
mov
test
push
add
cld
jmp
add
add
add
frstor
clc
adc
add
adc
add
shll
add
scas
mov
add
cmc
mov
pop
mov
adc
add
fs
xchg
clc
add
inc
add
push
std
outsb
push
clc
nop
adc
lods
push
outsl
dec
notb
add
add
and
add
cld
jmp
dec
sub
flds
add
sbb
add
bound
add
add
inc
clc
or
xor
add
clc
sarl
clc
pop
jbe
add
fnsave
add
add
sar
inc
clc
jo
add
daa
clc
push
add
mov
clc
decl
add
jmp
xchg
int3
jne
clc
pop
mov
inc
clc
jg
pop
int
mov
or
sub
mov
fcompl
test
sub
mov
sbb
mov
mulb
add
cmc
jge
call
insb
insb
cld
jmp
orb
lock
add
add
add
fdivs
add
xor
clc
fnstenv
add
popf
mov
mov
add
mov
fisttpll
push
add
imul
clc
mov
add
not
mov
and
add
inc
add
popa
add
xchg
adc
add
data16
xchg
test
push
add
mov
jae
add
add
clc
sub
jmp
inc
cwtl
ja
pop
imul
cld
jmp
movsb
push
mov
inc
add
fisubrs
adc
add
fpatan
icebp
rcrl
clc
jb
add
add
aam
push
add
sub
scas
aaa
shrb
clc
cmp
jg
jbe
ret
clc
push
clc
pop
pop
in
pop
test
lret
leave
lcall
clc
in
pop
pusha
add
xor
sbb
add
gs
pop
outsb
inc
add
adc
add
xor
ss
ret
jno
subb
add
add
clc
imul
cmp
clc
stc
adc
push
call
cld
jmp
sahf
adc
add
int3
mov
cmc
push
push
cmp
add
cmpsl
clc
stc
pop
jg
inc
add
loopne
pusha
add
sar
inc
clc
push
mov
sbb
pop
cld
jmp
and
add
mov
or
add
sar
addr16
loope
sbb
mov
mov
clc
js
add
jecxz
test
dec
in
add
add
add
cmp
add
jmp
and
or
incb
in
cmpsl
clc
outsl
imul
int3
cmpsb
clc
mov
clc
rcrl
clc
push
add
dec
ss
xchg
push
mov
add
push
and
inc
data16
push
add
sub
jmp
inc
popa
das
popa
pop
repz
cwtl
or
mov
jae
jmp
lods
aaa
push
push
add
sahf
mov
clc
cmp
add
cld
jmp
adc
add
mov
mov
or
add
add
lock
lcall
mov
mov
cld
jmp
test
clc
in
lcall
add
jo
add
or
mov
ss
ret
jp
adc
add
push
mov
pop
jl
pop
cwtl
dec
push
cmp
test
in
mov
clc
xor
add
xchg
push
add
lcall
mov
clc
aam
pusha
add
mov
dec
xor
mov
mov
test
ss
js
clc
mov
outsb
ret
add
popa
add
or
add
shll
insl
mov
data16
mov
rorl
outsl
ret
clc
xchg
inc
clc
mov
clc
call
imul
popf
jns
pusha
add
xchg
loop
and
add
dec
jb
add
int3
push
jg
clc
call
dec
loope
shl
sbb
or
add
inc
clc
and
add
push
add
mov
jns
stos
popa
add
add
add
mov
adc
add
dec
pusha
add
pop
fcmovne
loopne
push
aam
clc
test
gs
lods
rolb
call
clc
loopne
dec
sahf
mov
mov
int
inc
add
in
mov
fisubs
add
cmp
jecxz
pop
jp
push
and
add
clc
sti
call
clc
fadds
repnz
scas
jmp
push
ret
insb
jg
ja
out
pusha
add
and
add
xbegin
cmpsl
clc
or
jae
add
add
outsb
and
add
shlb
clc
push
or
clc
jbe
outsl
call
dec
xbegin
push
add
add
add
xchg
mov
cmp
clc
pop
loope
pop
shrl
clc
in
imul
add
add
jae
add
movsl
clc
dec
mov
clc
push
add
xchg
mov
add
or
movsl
clc
fsts
add
clc
pop
mov
mov
cmp
insl
adc
add
push
sub
cld
xchg
add
add
add
xchg
iret
stos
jmp
cmp
lods
push
add
jne
rep
cld
jmp
jp
nop
push
fwait
cmp
sub
adc
add
add
jo
add
clc
cmpsl
clc
mov
xlat
xchg
aad
pop
clc
ss
clc
xchg
icebp
in
call
pop
lcall
sar
repz
movsl
clc
cs
xchg
addr16
sub
add
fs
aas
or
mov
cld
jmp
outsl
adc
sbb
xchg
or
adc
add
push
lods
inc
clc
loop
cmp
sar
push
add
sahf
mov
mov
clc
inc
add
loopne
or
push
inc
add
sub
sub
jns
add
jno
add
cmp
add
clc
jnp
clc
enter
clc
popa
add
xchg
movsl
clc
cwtl
adc
clc
xchg
cs
add
pop
xchg
adc
cld
jmp
popa
sub
aaa
jp
lock
cmp
and
add
cmp
sbb
outsb
fldl
sbb
push
xor
add
add
jmp
test
clc
incb
clc
adc
add
clc
ljmp
add
adc
pop
stc
xchg
jae
add
hlt
cmp
cmp
push
ret
test
mov
cld
jmp
sbb
js
movsb
clc
scas
xor
add
push
lea
cld
jmp
add
inc
add
gs
adc
add
jge
clc
loope
lock
add
add
mov
and
add
clc
lret
sub
test
xchg
cmc
das
gs
push
xor
cld
jmp
sub
jno
add
add
fisttpll
clc
mov
popa
add
push
adc
cmp
inc
clc
icebp
push
add
pop
xchg
pop
sbb
add
add
push
or
jmp
dec
push
fwait
pop
clc
cmp
clc
mov
inc
add
xabort
adc
add
bound
add
add
jle
dec
cld
jmp
jp
cmpsb
adc
add
add
bound
add
add
add
xchg
xor
add
jb
add
push
add
outsl
mov
adc
add
adc
add
clc
std
mov
cmp
ret
das
sub
je
rcrb
lods
rcrl
add
add
push
add
mov
testl
inc
add
int3
push
add
sbb
or
adc
add
clc
inc
clc
mov
cmp
outsb
lock
gs
jo
add
mov
xchg
pop
clc
cmp
movsl
clc
jbe
rorb
and
jmp
add
clc
pop
clc
sub
adc
movsb
clc
std
sar
pop
into
loope
pop
roll
add
cwtl
imul
clc
fnstenv
or
call
sbb
add
add
mov
jmp
sub
add
add
dec
dec
fwait
mov
push
add
cli
cmp
clc
cmp
clc
faddp
clc
add
add
add
imul
clc
pop
inc
clc
fnsave
popl
dec
int3
dec
std
cltd
stos
jno
add
clc
fistps
popa
add
mov
adc
add
add
mov
aaa
adc
lret
add
fdivl
add
shr
cld
jmp
jge
jno
mov
sub
out
sub
ds
aam
clc
ficompl
mov
pop
xchg
sub
sub
inc
clc
push
add
jo
add
add
outsl
mov
jge
cmp
fisubl
add
loopne
ret
leave
int3
movsb
clc
js
clc
push
cld
pop
mov
jp
push
das
sahf
in
xabort
mov
ljmp
add
lea
add
jmp
sub
pop
cmpsl
clc
stos
clc
jecxz
mov
dec
push
jg
dec
scas
xchg
xchg
mov
pop
shlb
lods
imul
add
movsl
clc
adc
add
mov
int
add
push
add
inc
add
bound
add
push
ret
clc
fsub
clc
cmp
jbe
clc
into
mov
inc
add
incl
cltd
sbb
push
pop
pop
xor
add
clc
pop
add
inc
add
scas
xchg
mov
cld
jmp
xor
ljmp
dec
dec
jle
clc
jl
icebp
aam
clc
sar
clc
or
add
add
pop
imul
xchg
sbb
or
add
push
sub
cmp
add
cmp
fisubs
jno
add
xor
add
xchg
lods
xor
fs
add
add
add
fisubs
or
ss
ret
push
adc
pop
add
dec
sti
xbegin
lahf
jg
mov
add
sub
clc
sbb
add
add
jo
add
add
mov
popf
aas
fisttpll
gs
clc
jl
xbegin
cmp
fmuls
add
jnp
adc
add
sahf
xchg
lods
scas
pop
and
add
clc
ja
clc
jle
clc
jbe
fcoml
jmp
into
xchg
jns
push
cld
jmp
cmpsb
clc
xlat
jle
cmp
inc
add
sbb
add
aaa
call
lret
ljmp
ljmp
mov
xchg
out
pop
aad
clc
jno
add
fisttps
clc
gs
loopne
popa
add
movsb
clc
adc
add
or
add
lods
mov
add
leave
adc
add
sbb
out
test
cmp
clc
and
add
xlat
cmpsl
clc
roll
add
clc
ljmp
data16
sbb
pop
push
pop
add
add
inc
add
in
add
add
clc
mov
push
add
mov
clc
mov
lret
add
in
fmul
add
add
add
add
sub
or
test
clc
mov
jmp
adc
add
push
push
ret
xor
inc
add
int3
addr16
jbe
pop
mov
mov
adc
add
movsb
clc
ds
xor
add
add
shr
fldcw
add
sub
movsl
clc
sarb
add
xchg
cmp
leave
push
push
mov
add
sarb
add
enter
int
clc
loopne
or
loop
and
add
jecxz
scas
xlat
push
or
cvtpi2ps
add
pop
sbb
clc
mov
decb
out
mov
mov
add
cmp
push
add
ret
clc
jno
add
add
xor
add
xor
add
lahf
pop
push
sub
pop
in
and
fstpt
add
in
das
jp
jle
clc
or
xchg
imul
mov
dec
test
mov
xchg
aas
fstps
mov
cld
jmp
inc
popa
sub
pushf
loopne
dec
in
out
mov
xchg
sub
add
inc
add
shll
add
or
clc
push
int3
sub
add
mov
xchg
xor
add
add
ret
add
pop
cmp
add
add
xchg
jno
add
pushf
and
add
mov
lcall
add
insl
mov
add
fs
sub
add
add
hlt
loope
xor
add
xchg
pop
dec
mov
mov
fimull
in
xor
add
push
call
fstpt
aad
and
add
gs
frstor
fsubs
clc
bound
add
clc
mov
sub
clc
sub
clc
aas
and
add
clc
stc
inc
add
xbegin
add
clc
icebp
sti
dec
xchg
repz
jmp
out
jae
add
mov
and
add
add
out
aaa
cmp
xchg
cmp
cmp
mov
add
clc
xchg
dec
xchg
xlat
ficoml
add
lods
xor
add
sbb
inc
add
fdivrl
mov
clc
stos
leave
and
outsl
mov
lea
add
dec
testl
jge
add
lods
insb
sti
insl
out
jnp
testl
clc
inc
add
clc
pop
sub
mov
inc
clc
mov
jns
clc
mov
clc
push
inc
clc
lock
cmp
mov
push
add
sbb
clc
sti
push
xbegin
clc
ret
clc
mov
clc
adc
clc
mov
add
jmp
xchg
or
add
shrl
add
add
clc
and
add
or
outsb
xchg
fsub
clc
enter
and
add
clc
mov
jp
mov
stos
shlb
push
mov
shlb
xor
add
sbb
add
jb
mov
clc
mov
test
loope
loope
bound
add
xor
add
add
clc
fs
out
icebp
scas
and
dec
push
jecxz
jecxz
out
in
dec
repnz
cmp
add
aaa
push
dec
adc
clc
inc
clc
sub
add
into
mov
push
clc
clc
jbe
add
or
shrb
sbb
xchg
sub
ja
mov
call
dec
xor
add
inc
add
mov
clc
pop
mov
jns
clc
cmp
ds
clc
sbb
dec
push
inc
add
sub
mov
test
pop
clc
scas
mov
add
mov
aad
ffreep
clc
fwait
cld
div
stos
dec
dec
mov
jecxz
ljmp
sbb
add
mov
clc
lea
add
pop
dec
mov
add
lods
shrl
clc
data16
nop
cmp
clc
out
push
scas
xor
sbb
cmp
clc
xor
add
shrb
pop
clc
cmp
xor
inc
clc
or
jmp
sub
dec
sbb
sub
jmp
int3
mov
stos
fisubrs
add
call
add
push
push
cld
jmp
pop
sbb
addr16
mov
fyl2x
adc
add
lods
xchg
mov
clc
sti
xchg
mov
clc
push
int
aaa
mov
add
out
aam
clc
or
or
clc
jl
clc
mov
push
adc
add
jbe
clc
adc
jns
inc
add
arpl
add
clc
or
pusha
add
jmp
cmpsb
clc
cs
clc
push
clc
xor
add
movsb
clc
dec
imul
xchg
out
popa
add
and
inc
clc
cmp
pop
mov
xor
add
dec
enter
or
cld
jmp
adc
or
clc
dec
mov
clc
cmp
decl
sub
add
lahf
xor
add
add
mov
cld
jmp
cmp
pop
clc
jae,pn
add
pop
clc
sbb
clc
cmp
clc
xbegin
pop
insb
dec
das
movsl
clc
imul
clc
pop
sub
add
movsb
clc
add
add
leave
ret
call
aas
push
cmc
cmp
add
mov
fimull
adc
add
add
ret
clc
pop
pop
mov
add
xbegin
fidivrs
jp
mov
dec
jnp
push
add
adc
add
arpl
add
fimuls
sbb
jmp
push
sub
lock
loope
push
add
in
mov
jmp
jno
sub
loopne
adc
add
add
push
or
jp
add
imul
repnz
clc
jae
add
add
stos
insb
pop
repnz
dec
bound
add
pop
out
push
clc
call
jae
add
inc
clc
xchg
aaa
jno
add
add
jnp
sbb
add
mov
add
adc
add
mov
add
sub
cwtl
stos
imul
mov
add
cld
jmp
mov
sub
leave
xlat
jl
cmp
add
scas
add
add
mov
mov
xbegin
add
fs
nop
push
lret
add
arpl
add
add
imul
push
add
cmp
mov
clc
xor
add
je
or
clc
clc
xchg
inc
add
cli
movsb
clc
pop
clc
or
jnp
clc
adc
add
ret
clc
sub
adc
mov
add
push
aas
sub
mov
clc
es
jno
add
sbb
sub
clc
pop
movsl
clc
aad
clc
lea
add
xor
add
push
xor
ss
ret
sub
clc
sahf
mov
add
insl
and
add
adc
add
mov
mov
out
adc
add
add
push
shr
cld
jmp
and
push
add
xor
add
je
decl
jmp
jno
xchg
cmpsb
xor
xabort
inc
clc
or
clc
lcall
cmp
clc
mov
inc
clc
cmp
rcl
ffreep
clc
pop
ds
arpl
add
inc
add
cmp
mov
add
mov
pop
das
icebp
dec
add
or
sub
mov
push
out
xor
add
leave
sub
jmp
pop
pop
pop
push
add
jae
add
pop
call
add
add
mov
jg
add
sub
jne
push
je
cld
jmp
in
and
add
add
clc
ljmp
mov
mov
pop
fdiv
mov
sar
cmp
clc
cli
push
movzwl
cld
jmp
sahf
cmpsb
scas
pop
mov
sar
add
add
out
push
mov
mov
sub
clc
dec
aas
mov
clc
stos
mov
cmp
scas
mov
clc
mov
cli
or
test
push
add
rorb
lret
into
sar
and
add
ret
clc
add
dec
and
add
pop
xor
std
mov
clc
push
add
mov
xchg
adc
fbld
add
mov
mov
xlat
jmp
inc
add
add
add
clc
mov
test
mov
clc
jmp
add
mov
fnsave
add
cmpsl
clc
bound
add
add
push
jmp
jg
push
jns
mov
loope
iret
scas
into
inc
add
aaa
cltd
out
jno
add
clc
xchg
xchg
addr16
imul
mov
clc
out
sbb
dec
add
push
sub
inc
lahf
stos
data16
adc
add
push
and
add
lock
jmp
push
add
push
add
pop
clc
add
add
in
dec
and
loopne
out
xchg
cmp
scas
xlat
shlb
add
inc
and
cld
jmp
sub
jno
add
add
loop
sbb
iret
sahf
jbe
cmp
or
lcall
add
clc
mov
clc
or
or
outsb
mov
clc
cmp
add
nop
in
mov
sub
cmp
push
add
cld
jmp
push
inc
ja
clc
imul
sahf
mov
xchg
outsl
mov
and
add
add
add
xor
add
clc
mov
add
clc
ror
mov
push
clc
call
add
sub
mov
clc
or
cmp
add
rdseed
sbb
clc
xor
add
add
or
clc
mov
clc
decl
mov
push
mov
add
sub
dec
and
mov
sub
jmp
clc
and
add
sar
xor
add
jle
clc
pop
cs
mov
add
add
scas
jle
test
jmp
pop
xchg
loop
or
clc
pop
xchg
cli
add
cmp
sti
xor
add
cld
outsl
or
clc
out
inc
add
cwtl
scas
pop
imul
stc
push
add
arpl
add
cwtl
sub
sub
clc
pop
add
add
add
cmp
data16
pop
out
mov
clc
decb
clc
call
sar
sar
out
fsubr
fwait
lcall
push
add
inc
add
jno
add
pushf
fxtract
xchg
icebp
add
add
add
aam
sbb
jle
mov
add
sahf
and
add
add
mov
add
stos
jmp
add
arpl
add
adc
cmp
add
fsubr
in
push
imul
add
iret
mov
add
aam
in
cli
pushf
stos
fcompl
dec
inc
add
jae
add
inc
add
xlat
xchg
arpl
add
add
in
add
add
clc
pop
data16
push
in
ljmp
sub
and
add
jne
cmp
clc
adc
add
pop
cld
jmp
inc
cmp
pop
jno
pop
xchg
push
call
add
push
addb
jge
test
push
adc
add
add
jl
add
jb
add
and
shrb
dec
xchg
push
add
cld
jmp
xor
sub
add
jle
ja
clc
ret
add
push
add
gs
lret
add
clc
jo
add
rclb
loope
mov
mov
add
out
sub
pop
mov
mov
inc
clc
cmp
add
jge
ficoml
add
in
cltd
test
rcll
daa
clc
je
push
add
fistpl
fldcw
pusha
add
mov
leave
movsb
clc
dec
out
dec
es
xchg
out
mov
clc
psubsb
and
add
jl
cmp
add
add
and
add
add
inc
add
and
add
int
xchg
rclb
and
add
mov
xchg
pusha
add
imul
and
add
jg
clc
ss
rolb
add
add
cmp
sar
jge
gs
aad
and
add
mov
add
fimull
push
sahf
in
jg
add
test
inc
add
repz
int
clc
fdivs
add
add
mul
clc
out
clc
leave
pop
enter
mov
clc
int
add
and
xchg
adc
add
jbe
imul
clc
xor
add
popf
pop
es
push
clc
cmp
outsb
mov
or
add
sub
sbb
add
add
mov
push
adc
ljmp
notl
clc
cwtl
lods
mov
clc
ljmp
clc
xchg
sub
fs
rcll
jmp
subb
pop
mov
jl
bound
add
pop
js
xlat
xchg
notl
adc
add
cmpsl
clc
cmp
clc
mov
jns
jns
push
add
iret
xor
add
add
out
xor
add
dec
inc
add
call
sar
add
in
cli
sbb
clc
jecxz
sub
fs
ds
jae
add
imul
ja
clc
sbb
sar
mov
stos
ja
push
add
lods
das
dec
xabort
clc
ficomps
dec
jp
sar
pop
ret
clc
mov
clc
or
add
clc
and
add
add
jne
add
lahf
fildll
mov
add
pop
fildll
clc
enter
jo
add
flds
gs
dec
int3
clc
mov
test
enter
add
push
cld
jmp
cmp
inc
add
enter
or
add
clc
cmp
clc
jmp
add
mov
add
stc
aam
and
add
mov
mov
inc
add
int3
jo
add
xchg
repz
jmp
stos
clc
loope
sub
push
add
dec
fstl
clc
sub
icebp
xlat
or
mov
dec
inc
clc
dec
add
add
xchg
mov
add
pusha
add
cmpsl
clc
mov
clc
insl
sar
lods
adc
add
sbb
clc
xchg
push
clc
loopne
fnsave
add
cli
aaa
mov
jmp
sub
sahf
iret
cmp
stc
in
cmp
clc
hlt
add
add
mov
scas
int
icebp
xbegin
adc
sar
pusha
add
data16
mov
cld
cmp
clc
out
push
push
add
mov
movsb
clc
cmpsl
clc
adc
jb
add
vrsqrtps
add
data16
adc
imul
imul
add
add
call
ljmp
testl
add
add
mov
iret
fidivl
xchg
dec
stos
mov
fadds
add
add
jae
add
mov
add
add
push
add
loopne
std
lcall
or
es
mov
fdivrl
mov
push
add
pop
dec
xor
add
add
add
ret
clc
in
leave
test
faddl
add
ret
clc
mov
xor
add
jp
int
xlat
or
pushf
mov
add
clc
idivb
cmp
mov
clc
mov
clc
mov
ljmp
push
clc
mov
int3
das
mov
or
prefetch
add
adc
add
xbegin
add
mov
stos
fsubs
ficompl
add
insl
cmp
fisubrl
clc
imull
repnz
in
movsb
clc
and
pop
and
fsubrp
mov
insb
add
imul
dec
in
lcall
cltd
push
xchg
sbb
add
or
push
clc
or
add
sub
ds
adc
add
popa
cld
jmp
xor
push
pop
mov
clc
sahf
inc
clc
inc
clc
pop
cmp
add
add
clc
mov
xor
add
fimull
cmp
cld
jmp
sub
aas
sub
cmpsl
clc
in
fdivl
clc
daa
clc
push
clc
ljmp
lds
adc
xor
push
add
mov
push
mov
add
inc
clc
rolb
loopne
mov
add
rclb
add
pop
mov
xor
add
inc
clc
cmp
lods
sub
push
add
push
lods
mov
add
je
push
add
pop
fwait
scas
sbb
ficoml
sahf
call
loop
push
ret
and
sub
clc
loopne
lea
clc
out
in
adc
clc
adc
add
jmp
jbe
dec
cmp
add
pop
xchg
inc
clc
stos
loope
dec
movsl
clc
sub
and
add
test
mov
add
add
mov
or
clc
xor
add
add
movsl
clc
sbb
xchg
inc
clc
aad
ret
mov
cld
jmp
je
sub
rorb
add
or
pop
jae
add
add
repz
add
sar
clc
cld
inc
add
sbb
inc
add
out
test
mov
out
outsb
inc
clc
and
add
add
add
clc
xchg
loop
add
add
add
das
movsb
clc
mov
add
dec
bound
add
pop
cld
jmp
mov
divb
add
jnp
loope
mov
imul
xchg
inc
add
dec
cmpsl
clc
popa
add
sbb
jl
add
cmp
add
adc
add
popf
iret
es
lret
push
add
mov
je
loopne
jmp
nop
in
cmpsb
clc
lret
mov
mov
mov
add
add
scas
test
pushf
out
divl
add
dec
mov
jl
cld
arpl
add
loopne
jo
add
add
clc
js
in
roll
jns
add
cs
mov
popf
icebp
xchg
cmp
dec
xor
add
add
jp
aas
pop
mov
cmp
clc
fisttps
repnz
fs
mov
cli
dec
cmp
mov
mov
sar
mov
add
push
add
fistpll
cs
test
clc
push
loop
pop
scas
stos
ficompl
movsb
clc
mov
add
cld
jmp
sbb
lods
outsl
xchg
add
add
inc
clc
xchg
xchg
sub
jne
cld
jmp
repz
mov
daa
clc
fsubr
xchg
daa
clc
inc
add
cmp
xor
call
ss
ret
xor
mov
add
sub
clc
add
xchg
push
ret
sub
int3
pushf
idivl
xchg
add
add
fmuls
xchg
insl
xchg
leave
mov
jmp
imul
add
cmpsb
clc
sbb
add
cld
jmp
insb
sub
cmp
clc
mov
push
idiv
das
loope
push
push
mov
pop
add
in
adc
push
pop
xlat
stos
lahf
jbe
jg
push
clc
out
jb
add
xchg
jnp
clc
inc
add
in
pop
fs
mov
clc
jae
add
push
clc
mov
clc
cmp
fiadds
repz
clc
and
add
clc
and
add
add
in
aad
mov
add
add
test
cmp
add
fimull
fisubrs
add
jle
push
add
data16
in
dec
aaa
xlat
fwait
inc
add
test
mov
add
jb
add
cmp
int
clc
xchg
xor
add
jmp
sub
mov
dec
dec
cmpsl
clc
frstpm(287
clc
xchg
dec
jns
clc
or
in
ljmp
mov
add
add
adc
aas
xchg
ss
dec
push
add
adc
add
push
lods
add
sahf
jp
jbe
cmp
mov
sbb
push
fwait
sub
add
push
push
mov
inc
add
sub
lods
jl
icebp
out
inc
add
insl
push
dec
mov
and
add
nop
scas
cmpsl
clc
dec
cmp
clc
sbb
test
ds
ficoms
bound
add
clc
outsb
nop
lods
mov
jns
movsb
clc
push
add
arpl
add
inc
cmp
jmp
or
mov
inc
add
clc
cld
in
xchg
and
add
in
jae
add
inc
clc
mov
add
mov
push
cld
jmp
insb
sub
mov
add
clc
pop
and
add
add
add
mov
add
push
cmp
addr16
inc
add
in
hlt
add
add
sub
loop
cld
jmp
dec
adc
clc
test
inc
clc
movsb
clc
je
clc
mov
xor
add
ss
push
dec
mov
jecxz
nop
mov
addr16
add
jmp
dec
mov
rclb
add
mov
clc
out
stos
and
add
dec
push
and
add
mov
mov
in
pusha
inc
add
jmp
or
cs
sbb
mov
xchg
cld
es
lods
mov
clc
clc
idiv
jne
cld
jmp
in
pop
mov
cmp
pushf
dec
vpmacsdd
sub
clc
ja
dec
fcmovnu
push
add
sbb
in
ljmp
sar
clc
int3
lock
insl
and
mov
lahf
inc
add
test
push
mov
mov
add
add
push
cmp
add
lcall
add
scas
jecxz
popf
inc
clc
push
pop
xchg
fs
sbb
clc
mov
pop
clc
add
add
clc
mov
adc
add
and
cmp
add
bound
add
pop
clc
test
clc
enter
pop
outsb
jbe
mov
add
mov
adc
add
add
pop
cmpsb
clc
aas
out
adc
clc
jge
add
mov
pop
in
ljmp
rclb
add
cmp
movsb
clc
mov
xor
inc
add
cwtl
xlat
mov
or
cmpsb
clc
inc
clc
or
in
scas
cmp
arpl
add
jmp
addr16
in
fsubrl
dec
dec
jo
add
call
and
add
mov
addr16
or
clc
pop
mov
xlat
push
pusha
add
adc
add
mov
jbe
add
ret
sub
cld
jmp
popa
popa
imul
add
clc
movsb
clc
lahf
push
add
aam
clc
add
sbb
ret
cld
jmp
mov
sahf
sbb
outsl
or
clc
into
mov
add
add
test
push
sar
sar
fcoml
add
add
mov
out
sub
loopne
test
cmp
push
sbb
add
xchg
xchg
fidivl
pusha
add
jmp
into
aad
clc
mov
xor
add
outsb
jmp
mov
je
pop
data16
cmp
clc
loop
cmp
clc
test
int
pop
adc
add
mov
cmp
jmp
test
das
fcomps
aad
es
adc
add
add
xchg
cmp
inc
clc
data16
xor
add
cltd
sar
clc
xchg
ja
and
add
add
add
add
cmp
add
clc
mov
fdiv
ret
add
enter
lods
push
aas
mov
cmpsl
clc
in
das
fs
mov
add
mov
clc
out
lods
inc
clc
xor
add
fstps
push
cld
jmp
sub
push
movsb
or
clc
mov
mov
lcall
or
add
adc
add
xabort
add
pop
adc
add
sbb
lahf
mov
add
or
add
fidivs
inc
clc
inc
add
xor
lods
sub
testb
add
mov
add
adc
paddw
jg
cld
jmp
xchg
xor
dec
mov
add
sbb
and
add
nop
cmp
jg
mov
sahf
xor
clc
repnz
clc
sar
in
push
add
push
add
jle
xor
add
add
inc
clc
fimull
jns
add
or
cld
jmp
push
aas
adc
clc
sbb
loopne
add
xor
sub
add
int3
cli
test
cltd
xbegin
add
add
dec
repz
clc
pop
inc
clc
cli
sar
mov
add
sub
scas
jle
ss
clc
jp
decb
clc
cmp
add
lock
adc
jo
add
and
adc
add
inc
add
into
push
scas
in
lcall
popa
insb
scas
sub
mov
cld
jmp
lea
sub
mov
pop
push
add
inc
add
pushf
ja
dec
mov
cmp
push
out
data16
int3
clc
js
cmc
mov
jb
add
add
sbb
add
cmc
cwtl
sbb
cmpsb
clc
pushf
outsl
add
pop
inc
add
pop
cmp
add
push
add
cld
jmp
and
aaa
dec
popa
add
icebp
stos
push
mov
cld
jmp
add
inc
add
std
pusha
add
xor
add
jl,pt
add
mov
inc
add
mov
add
push
add
sar
push
add
xchg
std
inc
add
cld
ss
add
jp
dec
mov
inc
clc
aad
sub
int3
dec
jle
jle
ja
add
inc
clc
mov
add
add
add
xchg
sar
clc
mov
xchg
mov
adc
add
or
jmp
pop
nop
cmpsb
sbb
add
add
es
mov
clc
or
dec
mov
xchg
mov
cmc
icebp
rorb
mov
cmpw
cld
jmp
sub
pop
mov
inc
add
ljmp
jmp
clc
stc
add
add
cmp
mov
clc
pop
xor
add
outsb
xchg
cmp
cs
jne
add
das
pop
adc
add
add
leave
dec
mov
loop
adc
add
mov
dec
jbe
pop
es
dec
ja
clc
push
add
cmp
es
xchg
sbb
add
sbb
and
scas
lea
clc
outsb
add
clc
or
clc
push
or
cs
bndldx
mov
hlt
aaa
sbb
push
in
jmp
add
dec
outsl
popa
fs
jmp
lea
pop
inc
clc
push
add
mov
lods
stc
xabort
pop
xbegin
jecxz
xor
clc
fs
and
add
add
xabort
jne
dec
push
add
testl
cs
adc
add
xchg
add
add
dec
lcall
add
clc
mov
clc
xchg
mov
lea
add
in
xchg
push
cmp
add
add
addr16
adc
add
clc
test
add
add
clc
and
jmp
jg
add
mov
and
fdivl
add
push
add
jg
mov
and
add
add
add
dec
daa
clc
sub
mov
jmp
jge
sub
adc
add
add
and
jmp
sbb
clc
mov
add
add
add
mov
ror
dec
aas
dec
cmp
movsb
clc
jle
fisubrl
shlb
adc
add
add
movzwl
add
xabort
clc
mov
add
push
add
cld
jmp
out
out
cmp
fistpl
or
add
sbb
adc
inc
add
xchg
adc
cwtl
enter
add
cli
xchg
cmc
decl
mov
adc
jmp
pop
sub
add
bound
add
test
sbb
or
cld
jmp
fs
mov
push
repnz
fwait
popf
adc
add
mov
inc
add
pop
loop
cld
cmp
lock
aam
clc
mov
clc
pop
jl
add
lea
insb
sar
add
or
arpl
add
clc
lods
movsl
clc
insb
insb
jl
cmp
movsb
clc
std
or
inc
clc
xchg
push
add
loop
fiadds
clc
push
add
add
cmp
add
xchg
mov
pop
mov
lcall
cld
jmp
add
cmp
clc
cmp
xor
call
sbb
add
pop
clc
adc
in
push
add
test
aam
or
clc
movsb
clc
loop
mov
pop
xbegin
jb
add
jecxz
int
sub
clc
scas
xchg
mov
xchg
clc
cltd
cwtl
mov
aad
js
xor
sub
dec
in
or
jecxz
pop
clc
lret
adc
push
cmp
outsl
stos
stos
test
repnz
fsubrl
pop
test
in
adc
add
mov
insb
fnsave
clc
cli
movsl
clc
mov
jp
fbstp
pop
das
mov
add
xor
add
add
pushf
cs
mov
push
pop
mov
xbegin
sbb
add
sub
lea
in
stos
ret
add
iret
out
into
adc
mov
add
pop
sbb
clc
and
push
clc
inc
clc
dec
out
mov
or
add
adc
add
test
imul
push
dec
test
add
add
sbb
pushf
xchg
xchg
test
sub
sar
mov
es
xbegin
clc
sub
clc
clc
mov
clc
adc
add
add
mov
add
clc
lahf
xchg
pop
xabort
inc
clc
bound
add
clc
adc
xor
add
div
mov
fs
xor
clc
jnp
or
lahf
gs
shrb
mov
xchg
rorb
add
add
add
imull
cmp
das
fwait
xchg
lods
es
mov
push
add
iret
inc
clc
out
mov
jmp
sbb
sbbb
cld
jmp
ja
sub
sub
mov
adc
jmp
cmp
add
clc
add
aaa
cmp
push
data16
cwtl
pop
clc
jae
add
js
sahf
or
xor
add
clc
jns
jb
add
mov
cs
ljmp
or
inc
add
add
add
dec
rep
sub
clc
shlb
aaa
and
add
push
mov
adc
add
clc
xchg
pop
adc
add
add
add
fsub
clc
cmp
add
mov
add
xbegin
add
ss
hlt
jo
add
dec
movsb
clc
sar
clc
lret
inc
add
mov
add
push
test
cld
jmp
popa
popa
test
jo
add
mov
add
xor
jnp
xor
pop
jbe
sub
clc
dec
bound
add
adc
popf
add
mov
add
push
cld
repz
mov
sbb
out
test
xchg
fucomp
fcomi
adc
jl
into
sub
xchg
push
ja
sub
clc
jge
enter
shll
add
xchg
in
mov
mov
cmp
in
mov
test
clc
sarb
clc
aam
fsubs
mov
ret
pusha
cld
jmp
or
add
inc
clc
stc
roll
clc
insb
mov
jmp
add
sar
push
add
sarl
mov
ret
dec
sub
mov
or
clc
sar
outsl
mov
insl
test
call
and
add
inc
add
sub
add
jne
jg
sbb
mov
or
pop
xor
add
mov
adc
add
clc
mov
pminub
cli
mov
mov
clc
lods
outsl
cmp
clc
and
add
pushf
sti
ja
mov
lcall
pop
or
nop
ret
clc
mov
test
jno
add
clc
xor
fldcw
clc
dec
sti
xchg
sub
push
add
cmp
add
clc
shr
mov
jno
add
repz
dec
jle
decl
add
jmp
outsl
adc
add
pop
clc
xchg
rcr
sti
pop
sahf
adc
or
clc
fisttpll
jmp
call
cld
jmp
dec
mov
add
insl
lock
outsb
sbb
in
add
nop
stos
jge
fsubs
data16
mov
clc
cli
xabort
jne
clc
outsb
dec
jae
add
sbb
inc
imul
sar
jmp
das
xbegin
clc
or
xchg
in
fisubs
clc
xchg
stos
and
adc
add
adc
add
add
mov
loope
mov
add
add
add
add
xchg
xchg
pusha
add
lret
int
add
add
push
clc
inc
add
jae
add
xchg
fcomps
cld
jmp
pop
or
mov
or
pusha
add
push
add
xor
add
out
sub
inc
clc
mov
clc
push
inc
clc
inc
add
mov
sar
adc
add
shll
add
add
test
sbb
sub
incl
add
iret
adc
push
repnz
add
adc
add
add
jae
add
sahf
fcmovnu
imul
das
add
add
les
cld
jmp
adc
clc
cmp
inc
add
dec
loop
ljmp
jo
add
add
mov
mov
jmp
cmp
xchg
fwait
jl
add
data16
adc
add
std
in
add
add
clc
sbb
in
call
jmp
mov
and
add
and
inc
add
js
xor
add
add
xabort
imul
push
add
add
pop
pop
mov
clc
pop
inc
clc
sar
out
pop
and
add
mov
adc
add
add
cmp
push
xchg
jp
xor
add
data16
data16
inc
add
sbb
lahf
sar
xchg
mov
add
sub
lret
clc
cmp
inc
clc
mov
jno
add
dec
ja
push
popl
clc
cmp
in
mov
pop
rcrl
jb
add
test
mov
lods
fnstcw
inc
add
mov
mov
mov
mov
cmp
add
add
inc
add
inc
clc
insl
cmp
push
add
cld
jmp
cmpsb
push
imul
out
or
clc
daa
clc
and
add
cs
add
jns
add
pop
clc
stos
adc
dec
add
add
clc
leave
jbe
clc
shl
clc
mov
inc
clc
inc
add
pop
clc
movsb
clc
xchg
lods
pop
jb
add
ja
clc
leave
xchg
xor
add
dec
je
mov
add
lea
mov
das
sti
cmp
xchg
into
cmpsl
clc
cmp
add
stos
xchg
sub
sbb
add
arpl
add
add
cld
jmp
add
jo
add
add
xchg
cmp
inc
add
and
add
clc
xlat
cmp
clc
cmp
sub
cmp
cld
jmp
cmp
aad
pop
push
ss
ret
inc
outsl
mov
ja
ljmp
imul
jmp
xbegin
faddp
clc
jnp
ja
cmpsb
clc
mov
clc
add
add
test
gs
mov
add
icebp
xor
add
fld
clc
jnp
clc
loopne
hlt
pop
clc
sbb
clc
in
pop
cmc
int3
pusha
add
xbegin
pusha
add
dec
add
add
loopne
jns
pushf
mov
add
cld
jmp
fwait
add
and
jmp
pop
sub
fcmovnbe
jne
out
cmp
clc
sub
add
add
lret
and
add
add
pop
sqrtps
add
clc
pushf
cld
sbb
out
cld
jmp
or
scas
idivl
cli
adc
loopne
stos
pop
jmp
xchg
daa
clc
outsl
repnz
and
cmp
fnstenv
lods
xor
stos
sbb
pop
pop
xchg
xor
add
adc
add
mov
add
sar
pop
ja
adc
add
add
lods
jl
clc
xchg
ret
clc
inc
clc
imul
clc
lahf
cli
popa
add
adc
add
jno
add
and
add
jno
add
clc
and
add
ret
clc
bound
add
clc
push
add
mov
mov
add
cld
jmp
clc
mov
xabort
or
pop
mov
mov
add
adc
add
jno
add
add
add
xor
clc
popa
add
mov
add
cld
jmp
sahf
movsb
sub
loopne
adc
add
add
add
sbb
xchg
sub
add
pop
in
mov
add
sar
mov
cld
jmp
sub
sub
add
add
mov
push
lret
clc
mov
lea
loopne
cmc
adc
add
add
xor
add
fucomi
mov
xor
clc
dec
enter
add
add
clc
int
clc
lahf
xchg
out
rcl
xabort
outsb
dec
ja,pn
inc
clc
leave
dec
jge
add
not
fmul
push
push
cld
jmp
popa
sub
sub
xchg
out
movsb
clc
jmp
pop
inc
add
cmc
or
sbb
push
add
or
add
jp
clc
xchg
out
xor
add
sar
xchg
mov
push
add
cld
jmp
sar
pop
fadds
clc
push
add
inc
clc
cwtl
mov
fsubs
daa
clc
outsb
push
add
int
mov
dec
aas
and
add
imul
clc
fs
aas
pop
bnd
add
add
and
add
add
aas
loop
cmp
push
mov
scas
adc
add
add
mov
sti
inc
add
and
add
clc
jbe
clc
mov
clc
mov
hlt
adc
add
or
add
imul
add
xor
push
cwtl
pop
aam
push
lea
outsl
fistpl
dec
fcompl
add
or
add
repnz
add
or
add
cwtl
xchg
jmp
jmp
jno
aaa
add
mov
cwtl
lods
jbe
xor
clc
jecxz
jle
gs
in
negl
mov
cs
shll
add
mov
add
add
stc
and
packuswb
gs
dec
insb
push
mov
cld
jmp
sahf
or
adc
add
xchg
movsb
clc
push
clc
and
add
clc
dec
dec
mov
icebp
xabort
add
inc
add
into
push
mov
add
xchg
loop
stos
xchg
pop
scas
xchg
dec
mov
add
xlat
scas
mov
add
repz
pop
push
imul
clc
lahf
xchg
push
add
jnp
arpl
add
add
dec
mov
add
add
mov
clc
xor
add
push
sub
lods
data16
dec
xabort
test
cmp
push
ss
ret
scas
aas
push
sub
test
xchg
popf
add
add
add
aad
clc
jb
add
xchg
idivl
push
add
and
add
clc
sub
sub
cld
jmp
xchg
sub
aad
jg
and
add
add
inc
add
cmp
add
pop
push
inc
clc
iret
xor
add
mov
ss
ret
sahf
scas
sub
pop
or
add
push
fisttpll
add
mov
add
and
push
mov
clc
push
pop
sti
imul
cmp
clc
mov
movsb
xor
add
test
mov
cld
jmp
aas
jg
or
clc
mov
sar
aad
or
jno
add
add
add
out
adc
add
es
mov
fldenv
cmp
mov
clc
clc
push
clc
ss
add
mov
das
adc
add
sar
jmp
and
enter
cld
jmp
test
ja
jbe
cltd
inc
add
pop
test
dec
cmp
add
mov
add
stos
push
add
ja
enter
sbb
clc
and
lret
xor
add
fs
mov
and
add
add
aas
outsl
xchg
cs
and
jmp
pop
movsb
push
in
addr16
pusha
add
jbe
dec
xor
add
pop
daa
clc
in
mov
jecxz
loope
nop
movsl
clc
inc
add
mov
adc
add
add
ja
add
xor
add
inc
add
mov
clc
pushf
mov
pop
xchg
stos
dec
sar
clc
fiaddl
push
add
arpl
add
mov
ss
mov
sub
jecxz
addr16
cld
ljmp
add
scas
out
idivb
scas
sub
add
scas
addb
test
adc
and
add
clc
push
clc
mov
dec
rorb
clc
repz
pop
add
cld
jmp
and
in
data16
loop
je
ljmp
lods
inc
clc
mov
into
jns
add
cld
adc
add
clc
aaa
mov
clc
and
add
nop
inc
clc
pop
mov
jmp
add
daa
clc
loope
mov
data16
out
pop
clc
js
scas
xchg
scas
fiadds
add
add
sbb
mov
loope
or
push
cld
jmp
inc
das
mov
in
push
jne
push
mov
mov
fiadds
pop
add
xor
add
push
jmp
dec
sub
clc
ds
xchg
imul
icebp
je
fs
mov
leave
cmp
clc
notb
add
pop
jmp
out
xchg
pop
lock
cmpsl
clc
or
pusha
cld
jmp
cmpsb
das
jno
sub
add
jl
iret
scas
sbb
popa
add
pop
jne
addr16
inc
clc
in
bound
add
clc
aam
pop
cld
jmp
pop
xor
lods
lea
xabort
insl
sar
mov
clc
into
jmp
outsl
xchg
dec
xbegin
lea
push
adc
jmp
sahf
push
sub
xlat
pop
or
jge
add
cmp
fisubs
clc
lahf
jns
mov
movsl
clc
pop
dec
xchg
test
clc
push
add
push
enter
add
clc
mov
clc
popf
rcrl
es
scas
mov
cld
jmp
sub
or
ds
clc
xor
add
mov
lods
and
add
pop
xchg
lcall
dec
xor
fs
adc
add
inc
clc
and
add
xor
sar
mov
cmp
jle
je
cmp
lods
jnp
ja
xor
add
add
clc
lahf
pop
cmp
xchg
rcrl
adc
mov
or
sub
cmpsb
clc
bound
add
mov
lcall
int
xor
add
data16
mov
add
mov
clc
sub
and
add
and
add
jecxz
sub
xor
add
fnstenv
cmp
nop
loope
adc
add
add
sbb
inc
xor
cld
jmp
sbb
clc
dec
rorb
jne
or
call
cld
jmp
mov
inc
add
shll
add
daa
clc
inc
clc
fcmovnb
clc
adc
add
inc
cld
jmp
and
stos
inc
clc
popa
add
cmp
inc
clc
add
add
stos
mov
cld
mov
push
clc
xor
clc
in
inc
add
shr
movsb
clc
pop
test
sub
fs
sarb
inc
add
out
inc
add
dec
xchg
push
mov
ss
ret
mov
cwtl
dec
adc
mov
cld
jmp
cmpsb
andb
lea
xchg
cmp
add
xlat
fs
xchg
cli
inc
add
cli
jbe
stos
xchg
data16
in
sub
sub
xbegin
clc
enter
clc
xor
add
cld
insb
adc
loopne
dec
repz
inc
clc
repz
clc
push
add
mov
clc
stc
repz
clc
mov
hlt
fwait
or
addr16
sub
add
lea
int
jge
nop
adc
loop
into
dec
and
cmpsl
clc
pop
mov
add
dec
or
or
jmp
sbb
jmp
scas
inc
add
repnz
clc
push
pop
mov
lods
jnp
imul
repz
lahf
dec
out
insb
add
add
pushf
testl
stos
ljmp
push
mov
push
jmp
push
scas
out
push
add
inc
add
cmpsl
clc
daa
clc
mov
push
jno
add
cmc
bound
add
add
or
mov
shlb
mov
clc
jne
sbb
mov
sub
clc
scas
jns
cmp
add
clc
xchg
pop
dec
or
add
add
add
in
sbb
sbb
in
mov
fisttpl
out
lods
aas
pusha
add
not
push
add
xlat
sbb
sar
push
jl
movsb
clc
fsubrs
mov
add
xchg
sbb
inc
clc
inc
cld
jmp
sub
jg
adc
mov
pop
dec
shll
clc
leave
divb
mov
sar
mov
repz
jg
add
scas
xor
clc
lods
out
rcll
dec
sahf
movsb
clc
dec
js
pop
scas
loopne
jmp
fisubl
xor
add
add
cmp
push
add
cld
jmp
xor
scas
sub
clc
cmp
data16
arpl
add
clc
loope
push
lcall
dec
push
clc
cmp
insl
roll
ljmp
out
xor
add
pop
hlt
adc
add
push
fwait
adc
add
ss
add
lock
mov
cltd
pushf
cs
loop
adc
add
add
stos
mov
clc
jl
xchg
xchg
faddl
mov
adc
add
mov
cld
jmp
sub
sub
clc
arpl
add
add
jo
add
clc
lret
sahf
pop
imul
mov
jo
add
popf
jb
add
clc
movsl
clc
mov
dec
pop
ds
dec
fs
push
sub
fstpt
clc
shlb
add
mov
in
rol
clc
inc
add
dec
sbb
jmp
push
ja
sub
or
pop
aad
add
icebp
loope
jae
add
jns
adc
in
push
sub
or
clc
sbb
clc
pop
adc
add
negb
lahf
mov
jp
or
mov
add
lahf
xabort
ficoms
cs
stc
outsb
jg
ss
pop
not
es
loope
iret
adc
add
clc
mov
mov
add
imul
movsb
clc
ljmp
add
mov
push
pop
icebp
clc
loopne
jmp
dec
mov
clc
xchg
stos
icebp
xchg
add
add
jne
jl
cmp
ja
cmp
add
jae
add
add
add
push
add
xor
add
lock
hlt
cmc
dec
in
pop
std
das
js
clc
ja
add
add
clc
mov
adc
add
add
mov
jmp
lods
jp
xabort
clc
jae
add
in
xchg
push
dec
pop
sbb
add
mov
sti
into
fwait
repnz
xor
add
clc
scas
lea
sbb
clc
fwait
xor
push
add
cmp
movsl
clc
clc
pushf
cltd
add
add
xchg
sahf
cmp
add
add
lods
ret
clc
mov
add
jl
clc
mov
add
cmp
aam
and
add
and
add
clc
dec
dec
scas
lahf
ja
adc
add
add
pop
lods
or
add
insl
sub
bound
add
clc
std
sub
add
clc
dec
adc
add
clc
ljmp
xor
add
add
adc
add
and
js
jmp
mov
and
add
in
test
add
sub
clc
and
clc
cld
jmp
push
sub
add
add
xor
lcall
stos
or
xchg
dec
and
sub
sub
clc
and
add
add
add
bndstx
add
add
cmp
cmp
jbe
clc
int3
mov
dec
stos
or
arpl
add
out
cmc
addr16
mov
fistpl
jne
cld
jmp
out
mov
bound
add
popf
jno
add
test
lret
pop
stc
push
pop
mov
push
dec
xchg
dec
fidivs
jl
add
mov
imul
test
stos
or
add
sub
sub
add
js
add
push
push
mov
arpl
mov
add
in
sahf
cmpsl
clc
arpl
add
clc
pop
gs
fwait
test
cwtl
inc
clc
sbb
push
popl
add
add
out
sbb
clc
jnp
clc
cmp
jbe
pop
adc
mov
pop
cmp
jl
scas
pop
sbb
jmp
clc
dec
cmp
testb
xchg
js
icebp
fildl
add
fwait
icebp
fsts
add
pop
adc
cmp
clc
shll
add
in
shrl
add
mov
jmp
sbb
push
cld
jmp
sub
xor
add
mov
clc
das
in
add
add
add
xor
add
adc
inc
clc
jmp
jb
add
cmp
clc
cld
xchg
sahf
nop
stos
loope
clc
stos
cmpsl
clc
fwait
pop
into
mov
mov
clc
out
xchg
packuswb
cmp
sub
adc
add
xlat
xchg
ds
movsb
clc
fcmove
clc
ss
lret
stos
or
cmp
cs
push
outsl
imull
clc
gs
dec
mov
pop
fdivp
das
pop
mov
loop
and
add
push
add
jmp
cmp
xor
add
test
repnz
clc
gs
out
xor
fdivrl
nop
pop
xabort
jp
clc
pop
xabort
add
push
adc
add
add
xor
mov
cld
jmp
sub
add
repz
call
xchg
out
pop
clc
sbb
cmp
add
sub
inc
clc
add
add
mov
mov
add
or
cli
fmuls
xchg
out
and
add
mov
jbe
cmp
mov
clc
cltd
aam
rcr
in
lret
fimull
clc
pop
mov
lods
mov
mov
ss
ret
jge
call
in
add
add
add
push
setno
clc
mov
mov
push
dec
inc
add
xchg
xchg
inc
clc
pop
or
clc
sti
enter
clc
mov
adc
add
add
jl
push
stos
push
add
and
sbb
fdivrp
lcall
or
add
add
into
add
add
mov
out
push
clc
cmp
cmp
add
je
aad
add
and
add
add
mov
add
lea
test
push
add
dec
pop
xor
jp
repz
clc
push
xor
add
clc
cmp
clc
add
add
dec
xchg
cmp
clc
sub
clc
jo
add
clc
adc
add
clc
cmp
adc
add
and
add
sub
stos
push
clc
push
add
lcall
add
je
addr16
jle
xchg
sbb
clc
mov
add
jp
and
lods
mov
add
push
out
mov
and
add
pop
movsb
clc
dec
jmp
outsl
xchg
mov
pop
scas
adc
add
add
loopne
xchg
xchg
add
add
jae
add
add
pop
mov
clc
stos
cld
dec
aad
add
test
add
add
lahf
fdivrl
adc
add
clc
or
clc
jb
add
mulb
add
into
xabort
push
jb
add
jo
add
or
into
pop
inc
add
fiaddl
fwait
sti
jne
cli
fisubs
add
lcall
cmp
add
jmp
xchg
test
mov
add
sub
loopne
rcrl
rcll
add
pop
ss
ret
sbbb
cmc
jmp
clc
add
add
jle
loopne
mov
cltd
test
xor
add
mull
add
or
clc
jle
loopne
push
add
int
clc
push
dec
pop
clc
sub
inc
clc
dec
xor
add
inc
clc
xchg
scas
push
add
out
sub
add
add
pushf
lret
lcall
add
cld
jmp
pusha
add
sub
add
clc
je
cmp
and
add
sub
jae
add
dec
aaa
jmp
add
add
loopne
or
add
cmp
add
and
add
xchg
and
add
add
add
das
ficoms
push
jnp
ja
imul
add
jnp
jne
clc
push
cmp
inc
clc
inc
add
cs
add
pushl
cld
jmp
sub
add
push
test
cltd
push
add
xchg
bnd
ja
add
pusha
add
add
repnz
add
clc
je
add
scas
mov
sahf
ljmp
mov
sub
add
imull
sarl
cmp
xbegin
add
je
xchg
lcall
add
clc
and
add
add
outsl
mov
clc
push
add
add
add
add
add
add
pop
jne
clc
leave
xchg
mov
jmp
aas
push
dec
dec
stos
movsl
clc
xchg
loopne,pn
sub
add
mov
clc
outsb
dec
mov
inc
inc
add
jmp
mov
shlb
add
lret
into
sub
add
das
clc
data16
ss
pop
clc
test
lahf
mov
add
push
cmp
add
sub
add
cmp
inc
add
xor
add
xchg
jb,pt
add
popf
dec
add
cmp
in
flds
add
clc
imul
add
clc
push
clc
imul
int
or
dec
cmpsb
clc
pusha
add
sub
jnp
add
pop
divb
add
clc
ret
sar
add
add
add
shrl
add
into
mov
xlat
fucomip
jg
clc
jl
add
inc
add
mov
lods
out
data16
xor
add
clc
xchg
scas
in
in
add
add
and
add
add
lock
mov
add
jb
add
push
mov
bound
add
push
or
lock
nop
dec
in
or
mov
clc
lods
pop
xchg
neg
pop
fwait
lcall
add
mov
and
add
clc
push
add
clc
push
add
cmp
clc
dec
jo
add
push
add
lret
mov
add
jp
mov
addr16
outsl
sbb
nop
jns
or
push
loop
mov
cmp
xchg
inc
clc
test
out
mov
jl
xchg
outsb
jne
enter
movsl
clc
test
xchg
sbb
sub
xor
call
add
push
inc
clc
fiadds
add
cmc
inc
add
ja
pushl
cld
jmp
outsl
or
and
add
push
cld
jmp
push
adc
test
push
sar
or
movsb
imul
sar
push
cld
jmp
xchg
push
jo
add
mov
sub
add
clc
insl
mov
clc
xbegin
cld
adc
clc
inc
clc
mov
test
add
mov
and
jne
clc
arpl
add
add
mov
mov
dec
xchg
mov
clc
cld
mov
inc
clc
bound
add
mov
data16
push
nop
sub
add
fsts
dec
scas
inc
add
jb
add
std
cld
inc
clc
imul
adc
add
add
jp
test
xchg
xchg
int3
insl
mov
add
imul
inc
clc
xchg
sub
aaa
nop
clc
push
inc
clc
test
dec
loope
out
adc
jae
add
add
test
xor
clc
mov
push
add
jmp
inc
call
xor
add
mov
sub
add
add
sub
clc
ret
clc
xlat
das
mov
mov
clc
push
adc
add
add
arpl
add
clc
sub
add
into
pop
cmp
je
cld
jmp
insb
jmp
jmp
push
movsb
xor
push
add
loope
xchg
fisubrl
clc
stos
mov
push
push
add
or
add
cld
jmp
cmpsb
cmpsb
imul
loope
dec
jle
jno
add
mov
cld
jmp
lods
push
adc
outsl
jns
clc
cld
xbegin
std
jecxz
inc
add
or
mov
clc
mov
jns
push
add
cmp
add
inc
clc
nop
cmp
clc
mov
in
sar
cli
mov
fidivs
add
add
sub
clc
ret
dec
lcall
jmp
push
xor
es
leave
mov
add
mov
add
clc
fcmove
fistpl
jmp
add
mov
add
icebp
xchg
movsb
clc
adc
clc
xchg
mov
cld
jmp
sub
insb
stos
cmp
out
push
pop
inc
add
subb
pop
out
decl
repz
ljmp
adc
outsl
xchg
in
sti
mov
lods
add
add
lcall
add
add
add
clc
mov
clc
loop
cmp
clc
push
cmc
sub
inc
clc
sub
test
fcoml
add
xor
shrl
add
add
dec
inc
add
pop
push
mov
cmpsb
clc
dec
cmc
cmp
clc
out
adc
add
mov
ljmp
inc
clc
mov
mov
jle
xchg
add
add
mull
cmp
inc
mov
pop
pop
add
mov
add
add
clc
fidivl
add
clc
mov
cld
jmp
cwtl
scas
nop
test
aad
clc
cmp
fwait
mov
sar
jb
add
add
ds
adc
add
mov
dec
adc
jmp
cmp
add
mov
add
jo
add
add
arpl
add
fstl
and
add
in
dec
test
xor
mov
fcmovbe
push
add
fisttpll
leave
push
add
and
ret
clc
pop
clc
sub
in
fcomps
fnsave
aam
scas
out
gs
push
jmp
call
clc
sub
into
sahf
data16
imul
clc
hlt
jecxz
jmp
jnp
in
into
pop
stc
adc
add
pushf
and
cmp
je
mov
clc
mov
add
jmp
inc
lods
xor
add
add
push
pop
mov
lret
loope
data16
lahf
sarl
and
add
icebp
dec
add
dec
iret
and
sbb
iret
std
test
jbe
stos
add
add
and
add
mov
clc
negl
add
in
int
lods
loop
jl
test
repnz
fdivl
cmpsl
clc
out
aas
inc
clc
stos
cmp
add
insl
test
sub
mov
pusha
add
fwait
daa
clc
cmpsb
clc
ret
clc
xor
add
sbb
jmp
sahf
sbb
clc
mov
mov
add
xor
add
clc
sarl
add
jmp
cmp
add
icebp
shl
clc
popf
push
inc
clc
cmp
das
ljmp
cmp
add
pushf
clc
mov
sbb
jp
clc
adc
add
jae
add
cmp
xchg
cmc
xlat
gs
cmp
cld
jmp
jp
and
test
add
pop
push
push
cld
jmp
jp
sub
imul
mov
movsl
clc
sbb
fwait
pop
clc
push
clc
dec
jb
add
sbb
sbb
mov
clc
push
add
jp
pusha
add
dec
or
movsl
clc
in
sbb
jb
cld
jmp
or
shlb
add
jb
add
sbb
push
test
mov
clc
jbe
pop
cwtl
push
xor
clc
xor
pop
inc
clc
shl
clc
dec
mov
clc
sar
lea
ja
mov
jmp
cmp
sar
addr16
out
mov
add
adc
clc
or
mov
mov
and
add
faddp
clc
addr16
push
or
add
mov
sbb
clc
lahf
push
fisubrs
clc
cmp
mov
cmpsl
clc
loopne
dec
sbb
cmp
clc
mov
jp
mov
adc
add
clc
lock
xbegin
push
xlat
lock
push
clc
js
push
add
sahf
sub
add
pop
xor
add
add
fs
xchg
aad
jl
mov
pusha
add
and
add
inc
clc
imul
cld
jmp
sub
cwtl
push
aaa
push
pusha
cld
jmp
sub
or
add
sti
sub
inc
add
xchg
jns
popf
push
add
jmp
add
add
fwait
cmp
sti
out
pushf
cmp
inc
cld
jmp
jno
dec
pop
cmp
xchg
jg
jnp
lret
adc
add
add
xchg
out
mov
leave
cmc
test
clc
data16
ds
clc
cwtl
push
mov
cwtl
scas
mov
clc
loop
xor
add
scas
push
clc
add
arpl
add
pop
aam
jge
add
or
xchg
sbb
sar
mov
icebp
inc
add
dec
fwait
sub
clc
roll
add
dec
xabort
add
add
dec
pop
inc
add
adc
add
popa
add
add
add
add
add
test
and
add
add
mov
clc
icebp
daa
clc
and
add
mov
add
push
clc
inc
clc
xchg
data16
mov
clc
fists
push
clc
cli
mov
dec
cmp
jb
add
add
cmp
add
call
cld
jmp
fwait
jno
into
fsubp
clc
jge
push
and
xor
add
add
add
imul
sub
add
rorl
sub
mov
clc
bound
add
sti
jp
das
fs
sbb
jno
add
xchg
sub
adc
add
mov
out
in
mov
clc
pop
cmp
testl
clc
sbb
and
push
inc
add
cmp
lea
add
push
cmp
cld
jmp
test
popa
add
sti
push
out
mov
loope
clc
pop
pop
push
mov
cld
jmp
das
mov
add
loopne
jmp
fidivrl
add
add
add
add
leave
es
in
repz
fisttpll
xbegin
xchg
cltd
cmp
push
add
mov
add
push
xbegin
push
js
in
clc
ret
push
cld
jmp
popa
or
dec
sbb
scas
sbb
scas
decl
clc
add
add
add
and
jo
add
add
add
xor
add
data16
mov
cmp
icebp
mov
add
int
xor
add
gs
jbe
jmp
lcall
clc
call
addr16
xchg
test
xchg
ljmp
scas
xor
add
add
xchg
or
pop
leave
stos
test
clc
jle
clc
sub
clc
aad
clc
popa
add
adc
scas
popa
add
mov
mov
clc
mov
addr16
add
xchg
cmp
sbb
add
xbegin
sub
lea
add
pop
fs
loope
mov
mov
add
pop
push
fs
mov
clc
mov
fldl
add
or
add
cmp
clc
lea
imul
add
cmpsl
clc
adc
sahf
ret
sub
inc
clc
or
dec
xchg
nop
lods
sub
loopne
cmp
cld
jmp
adcb
loope
xchg
dec
ja
add
pop
pusha
add
push
aam
mull
clc
mov
outsl
cmp
dec
inc
add
and
add
inc
add
stc
fcomps
inc
add
mov
clc
leave
cmp
and
add
add
xchg
js
inc
clc
stc
pop
clc
cmp
in
push
xor
arpl
add
jmp
xor
inc
add
call
lcall
clc
inc
clc
lret
pop
mov
add
stos
mov
add
icebp
test
jne
and
add
clc
lods
fstpl
gs
pop
jecxz
nop
cld
mov
ret
clc
and
add
xor
clc
add
cwtl
out
into
push
jmp
jp
mov
add
dec
stos
roll
icebp
cmp
clc
jl
clc
adc
add
ljmp
add
or
popa
add
jo
add
jl
xchg
rcll
enter
clc
sahf
push
add
xchg
cmp
clc
mov
mov
sar
cltd
xchg
vminps
add
ja
add
xor
add
mov
cmp
adc
add
ss
add
mov
pop
fs
rol
clc
repnz
adc
add
add
or
test
sbb
scas
push
add
mov
fcmovbe
sbb
mov
cld
jmp
insb
imul
clc
popa
add
lock
clc
push
mov
sbb
push
fldenv
clc
inc
clc
mov
add
jne
clc
cmp
js
add
clc
stos
jmp
clc
pop
leave
xchg
lret
mov
sbb
jmp
test
adc
rorl
clc
mov
xbegin
leave
xbegin
add
lahf
sarl
add
pop
pop
lods
into
add
add
clc
aas
adc
add
cwtl
cmc
mov
add
inc
add
lahf
mov
je
inc
add
or
clc
pop
inc
clc
dec
pop
or
clc
in
cmp
add
dec
cmp
mov
clc
loopne
mov
scas
xor
add
push
add
jnp
adc
arpl
add
clc
xchg
mov
test
add
outsl
add
dec
sbb
clc
inc
add
mov
fcomi
push
scas
loop
lret
pop
mov
add
mov
cmp
clc
out
pop
push
clc
dec
pop
cmp
adc
sub
fbld
xor
add
call
add
mov
cmp
clc
out
sbb
cmp
lret
xabort
dec
ret
clc
mov
data16
repz
clc
outsl
mov
sbb
sub
jmp
mov
dec
fstpl
rep
cld
jmp
je
sbb
fistpl
add
mov
cld
jmp
adc
clc
xor
add
clc
pop
pop
pop
push
add
mov
dec
lcall
mov
iret
cld
leave
sbb
imul
pushf
nop
stos
jle
dec
cmp
aaa
imul
mov
clc
ss
clc
pop
daa
clc
mov
dec
stc
xor
add
clc
insl
div
dec
cmp
test
pop
cld
jmp
and
sub
jecxz
push
pushf
adc
add
xchg
xor
xchg
bound
add
cld
jmp
xchg
inc
clc
xlat
dec
stos
or
mov
or
push
xor
add
jb
add
and
add
add
sbb
clc
sahf
jle
sbb
call
clc
sbb
jmp
inc
mov
in
loopne
push
das
icebp
pop
ljmp
cld
lea
clc
adc
add
add
fsubrs
push
cmc
test
dec
icebp
clc
sub
clc
nop
lret
mov
clc
loope
jmp
and
add
std
mov
jnp
outsl
fiadds
add
outsb
jmp
clc
jne
mov
imul
lret
adc
inc
clc
sbb
pop
int
decl
jg
cmp
clc
sbb
cld
adc
add
mov
lret
add
call
cld
jmp
jno
sbb
add
inc
clc
mov
adc
add
and
jmp
xor
clc
pop
and
add
mov
scas
in
mov
mov
clc
fucomip
add
clc
imul
ret
clc
addr16
or
inc
clc
es
push
adc
cs
mov
insl
mov
add
or
push
mov
cmp
add
or
das
push
clc
dec
lcall
xchg
mov
int
xchg
add
add
add
push
ss
ret
sbb
pop
or
clc
lods
pushf
adc
add
mov
add
dec
outsb
add
or
clc
dec
cltd
ljmp
mov
clc
movsl
clc
js
add
dec
jns
add
adc
add
mov
mov
cld
jmp
push
push
sub
lcall
clc
jp
mov
add
clc
shl
clc
add
fisttps
cmp
in
mov
xor
add
add
cltd
add
popa
add
push
mov
adc
add
clc
push
add
leave
push
add
fadds
add
sub
sub
sti
sbb
test
jmp
cld
jmp
push
es
or
fs
mov
mov
adc
add
inc
clc
jo
add
add
add
add
lret
xchg
ja
add
mov
pop
pop
xlat
inc
add
mov
data16
pop
stc
add
jmp
add
pop
xchg
add
add
xor
add
add
popa
add
sub
xor
clc
lea
mov
jmp
add
hlt
in
and
fsubr
mov
ljmp
sub
add
add
add
add
add
add
and
add
add
aas
jno
add
clc
sub
sbb
clc
jno
add
mov
ss
ret
pop
sbb
ret
and
add
jmp
jp
fwait
push
sub
ss
ret
fs
dec
push
push
add
cld
jmp
cltd
xchg
xor
icebp
mov
push
cli
dec
ss
insl
cmpsl
clc
int
popf
sbb
mov
cld
jmp
mov
pusha
add
outsb
int3
lock
clc
cs
clc
imul
xchg
imul
clc
call
stos
adc
imul
incl
sub
jno
push
add
jbe
clc
adc
add
ret
std
xchg
cmp
jae
add
cmp
cmp
clc
popa
add
test
dec
loopne
repnz
clc
jb
add
pop
call
push
add
cli
cltd
out
or
cld
jmp
cmpsb
test
sub
addr16
dec
mov
out
adc
add
out
mov
aam
pop
xbegin
mov
clc
mov
clc
out
into
in
cmpsb
clc
xor
add
add
add
clc
ret
clc
push
call
add
mov
clc
xor
test
clc
es
xabort
mov
lcall
add
cld
jmp
sub
popa
add
jp
insb
push
in
hlt
in
lcall
mov
fnstenv
add
in
inc
clc
iret
mov
push
ss
ret
je
movsb
addb
cli
leave
out
dec
int3
jne
clc
gs
outsl
push
add
sub
clc
jno
add
mov
clc
mov
mov
mov
add
dec
ja
sar
clc
push
fcmovnb
clc
jae
add
sbb
test
fildl
add
addr16
pop
push
movsb
clc
pushf
pop
sub
clc
xchg
mov
clc
sar
sbb
jmp
cmpsb
adc
add
sar
fistpll
into
test
enter
mov
iret
sub
sar
enter
ret
clc
fimuls
dec
sbb
popa
cld
jmp
push
or
sub
sub
cld
jmp
sub
add
lock
in
add
pop
add
add
xlat
lcall
jmp
xchg
sbb
insb
ljmp
sar
xchg
ljmp
sahf
mov
in
pop
push
add
cld
jmp
insb
xor
or
sub
jp
jmp
and
mov
add
and
leave
mov
test
jge
add
cld
jmp
pop
test
cmp
insl
jmp
movzwl
cld
jmp
sub
inc
clc
out
cmp
in
popa
add
ucomiss
add
or
cmpsl
clc
pop
add
add
dec
fisttps
clc
shll
and
pop
push
movsb
clc
fs
clc
pop
cmp
sub
add
lret
or
sbb
aad
clc
cmpsb
clc
xchg
inc
add
cmp
jp
js
adc
add
add
lea
mov
add
sub
push
add
mov
call
add
clc
pop
aas
adc
add
clc
push
add
inc
add
lret
sub
add
fs
in
mov
or
jne
in
push
adc
add
int
clc
cmp
xbegin
mov
call
jmp
or
popa
xor
js
cmp
ja
clc
addr16
out
cmpsl
clc
cmp
add
mov
pop
jmp
xbegin
add
cld
jmp
addb
mov
clc
insb
ret
fsub
clc
pushf
mov
addr16
icebp
mov
add
push
add
xor
add
clc
fcomps
add
add
add
inc
clc
sar
push
dec
fistl
add
jl
mov
cld
jmp
sub
clc
cmp
or
lcall
ss
ret
or
lea
add
popf
popf
and
add
pop
cmp
clc
push
add
fisttpll
cmp
sbb
bound
add
fidivrs
sar
loope
lea
add
xchg
out
mov
scas
adc
add
xchg
adc
dec
lods
cmp
iret
dec
daa
clc
inc
add
int
push
lcall
ret
clc
cmpsb
clc
pusha
add
cli
inc
clc
imul
clc
negb
mov
add
imul
clc
add
add
push
cld
jmp
das
sahf
adc
inc
add
lods
mov
movsl
clc
mov
add
sbb
xchg
leave
test
clc
xchg
into
imul
mov
cmpsb
dec
or
xchg
scas
or
fwait
test
pop
in
dec
mov
call
add
push
stos
cld
out
sbb
push
cmpl
cld
jmp
jno
add
add
add
jno
add
pop
or
clc
out
fmull
adc
add
add
push
mov
aaa
cwtl
aas
push
fimuls
cld
popa
add
outsb
cwtl
imul
clc
ss
or
jns
imul
jl
inc
add
lret
sbb
add
clc
rcr
xbegin
clc
cmp
mov
mov
mov
cmp
jne
clc
cli
mov
dec
dec
push
add
cmp
insl
mov
add
add
add
add
add
clc
and
add
xor
add
clc
sub
push
fwait
js
cmp
clc
jno
add
xchg
xor
add
clc
jne
push
test
outsb
stc
adc
lcall
add
mul
clc
pop
lret
and
add
dec
imul
add
aam
sub
into
mov
je
xchg
sbb
clc
nop
mov
push
fstpl
in
push
add
pop
clc
mov
test
enter
push
cld
jmp
push
lods
jle
lea
clc
and
add
sbb
addr16
dec
and
add
in
dec
add
add
add
add
inc
add
jge
inc
clc
add
pop
fldt
jl
fdivrs
clc
enter
add
jb
add
jo
add
add
sti
sbb
test
idiv
cld
jmp
sbb
clc
jl
clc
xbegin
mov
add
inc
add
push
add
cld
pop
cli
and
scas
repz
add
mov
clc
push
jne
cld
jmp
js
rcr
call
add
cmp
clc
fdivl
sub
clc
mov
mov
in
fs
jg
outsl
loopne
mov
iret
pop
int3
movsb
clc
xor
add
pushf
enter
fst
imul
clc
mov
inc
add
iret
or
add
mov
out
or
inc
clc
call
jmp
dec
sub
xchg
mov
cwtl
sti
cld
jmp
data16
jno
add
add
push
cs
dec
cld
or
add
xbegin
clc
jge
pop
into
sbb
mov
movsb
clc
lock
cltd
xlat
mov
clc
jle
clc
dec
or
clc
dec
das
test
js
decl
popf
sar
lcall
clc
mov
jmp
das
popa
lretw
mov
cld
jmp
sub
pop
adc
add
into
inc
add
sbb
pop
mov
ds
sbb
sti
cld
jmp
or
test
and
clc
imul
add
sbb
sub
add
clc
out
adc
add
add
arpl
add
clc
push
add
mov
stos
fs
sar
sarb
add
mov
clc
adc
add
sarb
add
sahf
xor
add
xchg
ficoms
inc
add
decb
cmp
clc
arpl
add
add
int
je
mov
clc
popf
mov
fwait
cmp
clc
cmpsl
clc
shll
mov
clc
mov
sbb
add
xor
add
mov
add
push
aaa
lods
jle
jmp
js
jecxz
dec
and
add
add
sub
in
out
jg
jecxz
and
add
add
add
jae
add
add
add
dec
cmp
clc
ds
shl
pop
or
leave
push
add
es
xchg
sub
negl
clc
pop
pop
scas
repnz
add
xchg
repnz
add
adc
daa
clc
int3
mov
mov
sub
int3
mov
mov
clc
inc
add
clc
mov
xor
add
add
add
clc
aad
xchg
cld
jmp
xor
mov
xchg
sar
add
mov
gs
fidivs
sti
ss
ret
sub
mov
outsl
xor
add
pushf
rolb
jae
add
cmp
pop
cld
inc
add
xbegin
add
fwait
push
sbb
pop
xor
add
xor
imul
fwait
mov
sarb
and
add
jbe
cmp
add
sbb
cltd
out
or
clc
aas
mov
xchg
in
loope
faddp
clc
repnz
cli
and
clc
jmp
cmp
clc
stos
cmp
daa
clc
clc
nop
mov
mov
cmp
cld
jmp
ja
inc
clc
in
add
add
clc
push
add
mov
fsubr
xor
test
out
or
dec
out
dec
xchg
sti
jg
cmc
cmp
mov
push
mov
cmpsl
clc
inc
add
mov
add
xor
add
jge
add
fdivr
dec
loope
mov
add
cld
jmp
jge
sub
fildl
add
pop
sbb
jmp
cmp
jg
jl
clc
sbb
pop
cmp
jmp
inc
sub
inc
clc
and
out
imulb
xchg
mov
out
mov
clc
sbb
add
dec
fwait
aad
add
push
jl
or
das
sti
sbb
into
cmp
add
add
add
inc
add
xor
mov
clc
insb
ret
clc
out
push
clc
jbe
repnz
fnstcw
add
xabort
ja
ljmp
int3
aaa
pop
push
add
jge
iret
shrb
add
add
add
sar
jmp
out
jg
add
adc
add
arpl
add
mov
xchg
cmpsb
clc
mov
clc
jb
add
clc
cmp
add
outsl
and
add
mov
add
cmpsl
clc
mov
sub
clc
clc
or
clc
mov
cmpsb
clc
arpl
add
lods
push
sbb
add
add
movsb
add
cld
jmp
popa
aas
cmp
and
mov
lret
inc
clc
in
ja
xchg
mov
adc
add
add
xor
add
icebp
movsl
clc
decl
test
das
add
cld
jmp
je
clc
jbe
arpl
add
insb
mov
shrb
adc
add
stos
or
dec
mulb
inc
add
rclb
add
jg
pop
push
mov
cmp
je
imul
imul
add
sbb
sti
xlat
ljmp
mov
pop
add
clc
cltd
mov
mov
add
dec
cmpsl
clc
ja
xor
add
clc
push
add
and
clc
fmull
add
fldt
ss
clc
mov
out
jg
imul
cmp
lahf
cmp
jnp
cld
clc
push
push
lret
lods
push
pushl
ss
ret
and
push
mov
mov
add
sarb
xbegin
jne
cld
jmp
mov
iret
hlt
decl
scas
enter
clc
pushl
popa
sub
clc
mov
add
add
and
add
add
pushf
cmp
add
dec
aam
out
test
mov
mov
add
mov
add
xchg
test
add
add
jecxz
dec
int3
ds
clc
xor
movsl
clc
xor
add
dec
sub
scas
sar
add
fcmovbe
dec
in
xchg
ret
clc
adc
jno
add
fadds
dec
xor
add
add
adc
add
hlt
outsb
sbb
jl
dec
push
push
cld
jmp
sub
push
add
lret
dec
cmp
jmp
sub
push
sahf
xor
add
add
mov
hlt
sbb
sub
xchg
fs
wrmsr
add
adc
add
push
cld
jmp
aas
xor
sub
clc
mov
imul
loope
inc
add
and
sbb
aam
clc
push
clc
cmc
sub
jecxz
mov
sarl
clc
testb
adc
add
add
fistps
add
aaa
insb
sub
sub
clc
gs
cld
cld
jmp
xchg
aas
movsb
es
mov
dec
jno
add
xlat
add
xchg
pop
pop
iret
add
add
mov
jmp
stos
out
xchg
sub
fwait
pop
fs
adc
add
sbb
lods
int3
js
clc
jp
ret
clc
outsl
repnz
sar
pusha
add
fmulp
cmp
sub
int
mov
cld
stc
add
add
add
add
clc
out
in
addr16
or
push
or
clc
add
mov
lret
lock
int3
push
clc
push
cmp
adc
or
clc
fnstcw
sbb
lret
pop
xbegin
mov
cmp
add
mov
pop
mov
add
mov
xbegin
add
jecxz
in
xbegin
xchg
mov
pop
ficoml
scas
mov
dec
pop
fldcw
cmpsb
clc
gs
and
add
call
jge
lcall
imul
mov
cld
jmp
push
sbb
cmp
cmp
idivb
jle
clc
sbb
add
push
add
xchg
sub
in
stos
xchg
sbb
push
add
movsb
clc
cmp
cld
jmp
inc
es
test
clc
dec
sar
add
test
lahf
ss
clc
pop
setb
cld
mov
fimuls
add
xor
add
mov
imulb
clc
lret
fidivl
js
mov
clc
inc
add
mov
test
jae
add
popa
add
outsl
or
sub
inc
add
in
mov
movhps
clc
data16
data16
popf
jbe
fisttps
xabort
add
add
clc
pushf
pop
xchg
dec
xchg
gs
cmp
clc
inc
add
loope
sub
repnz
clc
dec
mov
push
mov
and
add
add
cmp
je
clc
mov
push
cld
jmp
and
cs
xchg
cwtl
sub
pop
stos
outsl
pop
and
add
cld
adc
add
add
sub
lret
and
inc
add
pop
addr16
sbb
sbb
xlat
cmp
clc
dec
daa
clc
sub
clc
jmp
add
sub
jno
add
clc
mov
loope
cmp
sahf
push
inc
clc
add
mov
shlb
xabort
add
dec
add
add
add
lahf
cmp
jnp
add
push
mov
mov
add
sub
clc
inc
clc
sbb
cs
xchg
xor
dec
or
clc
arpl
add
jmp
push
ret
jge
push
sub
fsubs
dec
into
and
add
clc
jbe
clc
bswap
icebp
icebp
xor
add
stos
test
mov
jmp
clc
push
sbb
adc
add
add
test
add
xor
add
mov
mov
jle
xchg
sbb
push
add
xabort
add
and
add
mov
xlat
incl
je
sub
jmp
imul
add
divl
aaa
cli
sbb
clc
adc
add
mov
call
sub
popf
mov
clc
adc
add
or
clc
jge
inc
add
xor
xchg
or
pop
xor
add
add
test
mov
test
inc
add
popa
add
inc
clc
lods
xchg
fldcw
gs
imul
ljmp
xchg
cmp
and
in
adc
add
nop
adc
add
add
cld
jmp
mov
cwtl
push
test
mov
inc
clc
xlat
mov
sbb
clc
xchg
imul
clc
flds
add
add
add
cld
jmp
cmpsb
clc
adc
add
sar
clc
lcall
add
clc
jbe
clc
cltd
pusha
add
pop
loop
sbb
sbb
cli
sar
add
push
clc
leave
dec
sub
clc
mov
decb
fs
add
add
imul
mov
sub
cmp
daa
clc
add
add
stos
inc
clc
test
imul
push
ja
push
idiv
out
cmp
pop
clc
jp
iret
pop
mov
push
mov
add
dec
popl
xor
mov
addr16
xbegin
push
loopne
pop
sub
clc
and
pop
fnstenv
clc
je
xchg
aam
add
dec
loop
sub
cmp
test
lods
pop
xabort
clc
sub
add
and
add
jno
add
clc
sbb
cwtl
sbb
adc
add
inc
clc
pop
pushf
decl
test
lcall
xor
add
pop
dec
and
add
mov
inc
clc
pop
xchg
mov
adc
add
push
clc
es
cltd
clc
push
clc
fldcw
cmp
add
add
std
leave
ret
jno
add
lock
clc
xor
clc
in
mov
in
fmul
mov
aad
insl
ret
outsl
mov
clc
jb
add
mov
mov
clc
cwtl
xor
add
testb
arpl
add
pop
lcall
push
add
pushf
lods
sahf
filds
add
fs
and
add
stc
daa
clc
clc
inc
clc
pop
jnp
pop
jecxz
popf
add
add
pop
clc
leave
mov
imul
jbe
mov
jo
add
add
mov
clc
mov
dec
sbb
sbb
fs
test
ret
clc
pop
cmp
mov
inc
clc
inc
add
in
pop
mov
add
push
add
add
fwait
dec
repnz
inc
add
int3
sbb
or
and
mov
pusha
add
in
or
lahf
inc
clc
push
data16
push
es
gs
push
add
jbe
clc
cmp
mov
add
in
pop
xor
add
xchg
cwtl
in
data16
jp
fdivrp
jne
cwtl
add
xor
add
adc
add
add
clc
sar
imul
pop
addr16
mov
xchg
add
daa
clc
mull
dec
addr16
out
jo
add
xchg
in
bnd
loopne
xor
add
add
add
add
cmp
clc
lahf
and
add
pop
or
cmp
jmp
push
adc
jle
clc
mov
aas
js
inc
add
sar
pop
loope
pop
clc
cmp
fistps
sub
add
sub
add
cmp
testl
mov
cs
xchg
inc
clc
popf
dec
jl
fucom
clc
repnz
addr16
movsb
clc
adc
add
inc
clc
sub
mov
cld
jmp
or
cmp
in
xchg
outsb
out
es
and
add
stc
mov
sub
sub
add
scas
add
add
sub
mov
cld
jmp
sub
jg
imul
xchg
sar
cmpsl
clc
or
xor
add
jmp
sub
lock
inc
clc
push
lock
ret
jno
add
clc
or
sbb
jbe
add
add
clc
mov
xbegin
add
mov
cmp
clc
pop
cmp
mov
sbb
add
add
jmp
aam
add
mov
mov
clc
mov
cli
mov
add
divb
push
add
js
clc
mov
add
xor
add
clc
mov
pop
out
adc
sub
xor
clc
jns
add
out
add
add
clc
jp
popa
add
xchg
clc
nop
mov
cwtl
negl
adc
add
clc
popf
or
mov
clc
mov
inc
add
cmp
clc
aas
pop
mov
push
mov
add
hlt
mov
cmp
aas
xor
add
add
push
add
shrb
in
test
inc
add
cmpsl
clc
mov
sar
repz
lods
cmp
clc
imull
out
jl
add
xchg
scas
add
pop
inc
add
scas
xabort
xor
add
test
aam
shll
ds
jnp
clc
je
fildl
ret
clc
shlb
adc
add
mov
add
xlat
ljmp
mov
and
add
fnstcw
popf
pusha
add
adc
add
scas
cmp
or
cmp
add
aad
clc
arpl
add
jo
add
clc
ja
shrl
xbegin
enter
inc
clc
or
clc
add
add
rorb
and
clc
xbegin
xchg
add
add
clc
xor
add
add
add
add
add
popf
sbb
out
test
mov
clc
pushf
mov
pop
push
add
adc
add
dec
mov
lahf
ja
call
int3
jb
add
aam
add
xabort
clc
dec
test
mov
jns
fistl
aad
clc
adc
add
add
dec
and
cld
jmp
add
push
lea
add
mov
clc
js
js
mov
jo
add
data16
ss
xchg
jmp
mov
sahf
cmp
xchg
mov
add
test
cld
jmp
outsl
ss
cmp
clc
jns
add
or
clc
arpl
add
test
ds
cmp
and
add
clc
cmp
adc
add
clc
loopne
loop
mov
mov
clc
jp
push
movzwl
ss
ret
xor
clc
or
clc
loop
adc
add
clc
sub
sbb
cld
jmp
push
das
ja
or
xbegin
mov
jmp
clc
xor
clc
xor
add
jg
cld
jmp
cmp
add
mov
jp
jb
add
or
enter
mov
sub
add
cmp
add
loopne
mov
clc
sub
clc
mov
lcall
push
inc
cld
jmp
cmp
xchg
or
bound
add
add
out
pop
add
add
dec
cld
jmp
movsb
or
cmp
cmp
mov
clc
mov
int3
popf
clc
jg
clc
mov
outsb
inc
add
sbb
nop
jle
dec
arpl
add
mov
call
cmpsb
clc
cs
push
clc
add
clc
test
xchg
lods
in
mov
into
mov
add
test
daa
clc
pop
pop
inc
clc
mov
stc
pop
sar
test
add
clc
decl
aaa
inc
add
nop
aas
mov
add
loopne
push
jnp
clc
movsb
clc
xbegin
mov
dec
or
mov
fptan
cmp
in
mov
mov
dec
push
push
jmp
sub
xchg
lods
mov
scas
and
add
clc
or
inc
add
cmc
popa
add
cmp
clc
pop
rorl
out
call
sub
loope
loopne
int3
inc
add
cmp
clc
add
add
inc
clc
sahf
clc
sbb
pusha
add
jmp
adc
add
imul
fwait
inc
add
adc
add
cmp
cmp
lods
mov
xor
cld
jmp
or
add
xchg
xor
add
sbb
or
in
das
inc
add
fisttpl
in
push
jge
clc
mov
clc
das
and
add
mov
add
mov
mov
ss
ret
push
push
push
mov
mov
out
cmp
pop
pop
bswap
dec
enter
fwait
inc
add
pushf
lea
mov
clc
hlt
and
add
mov
cld
jmp
sbb
add
dec
hlt
cld
jmp
fmuls
add
mov
push
push
adc
add
ret
clc
je
insl
addr16
aam
jno
add
adc
ret
lcall
mov
clc
pop
clc
data16
sub
add
push
add
cld
jae
add
add
cld
jmp
sub
add
cmc
sbb
jmp
add
je
cwtl
mov
add
out
xchg
std
into
pop
fcomp
jnp
in
sar
ljmp
and
add
add
mov
clc
fstps
mov
pop
rcr
cmp
pop
ss
ret
add
outsl
xchg
mov
clc
jge
stos
hlt
inc
add
loope
sub
jno
add
push
add
pop
mov
add
je
sbb
clc
add
add
add
and
add
repz
add
dec
addr16
jmp
push
lock
cmp
lret
add
add
dec
addr16
jb
add
xor
add
jmp
jmp
jg
push
cmpsb
test
adc
add
ss
js
adc
add
out
mov
or
out
add
add
out
cmc
mov
xchg
pop
adc
sub
test
xor
add
arpl
add
outsl
pop
pusha
add
scas
adc
add
add
aad
add
push
js
clc
daa
clc
pop
ss
inc
add
out
push
xor
cld
jmp
fwait
add
push
out
icebp
jle
inc
clc
jge
fnstenv
adc
add
and
add
pop
sub
clc
jns
sbb
test
std
cld
jmp
and
add
add
das
out
fsts
add
inc
add
cs
clc
sbb
push
ret
movsb
outsl
add
xor
add
jp
xchg
mov
inc
clc
fcoml
jecxz
adc
add
scas
cmp
mov
add
jge
popa
add
sbb
sti
fistl
int
in
pop
xor
add
outsb
inc
clc
jns
xchg
out
jns
movsl
clc
lret
push
add
mov
clc
fldl
clc
pop
out
scas
outsl
leave
and
add
clc
mov
clc
push
cs
in
inc
add
js
dec
xor
add
sub
push
add
xor
add
pop
call
xchg
js
lods
inc
clc
jo
add
mov
push
pop
pop
lahf
fldl
pop
por
xchg
add
outsl
call
outsb
sti
sarl
out
into
xchg
push
xchg
push
cmp
jmp
lea
add
add
aad
clc
cmp
push
mov
movsb
clc
push
lods
cmp
mov
jle
mov
enter
daa
clc
mov
mov
pop
add
mov
cmp
scas
daa
clc
sbb
mov
adc
jmp
scas
or
mov
and
add
mov
adc
xchg
aas
jp
clc
jo
add
out
push
clc
fnsave
mov
xchg
data16
repz
clc
aaa
lea
outsl
sub
clc
fs
push
add
push
add
out
and
mov
clc
js
add
jbe
add
daa
clc
leave
push
add
insl
into
decl
inc
jp
jge
fwait
cs
jne
fwait
test
out
ja
clc
push
cmpsb
clc
int3
scas
push
mov
cld
jmp
pop
cmp
pop
test
clc
add
add
add
jmp
jp
mov
cmpsl
clc
arpl
add
add
bound
add
clc
iret
mov
cmp
xor
add
mov
sub
clc
and
add
cmp
add
xor
add
nop
cwtl
loop
iret
xor
add
add
aad
ds
fwait
jae
add
jb
add
sar
clc
jg
ret
clc
ljmp
clc
inc
clc
notb
imul
je
lea
cmp
imul
clc
iret
cs
rorb
sar
je
add
sub
clc
add
jno
add
aaa
xchg
cs
clc
add
add
sub
jecxz
or
jl
fsubrl
jp
xbegin
add
mov
sbb
sub
dec
mov
push
icebp
cld
jmp
pop
push
adc
cltd
mov
add
add
addr16
mov
add
cmp
clc
data16
add
add
clc
fdivrl
clc
addr16
sub
clc
cmp
sti
add
add
clc
notb
add
fimuls
sar
pop
arpl
add
add
xchg
std
fucomp
mov
mov
cmp
add
aad
jp
pop
or
inc
add
xlat
rorl
clc
test
jne
repnz
clc
in
dec
int
mov
push
cmp
clc
loop
pop
sbb
clc
or
mov
cld
jmp
pop
jno
clc
or
lar
add
mov
ss
ret
lea
cmpsb
clc
mov
fstpt
rcl
sub
add
add
aad
clc
jmp
add
scas
mov
adc
add
cmp
fidivrs
fiaddl
add
lahf
sahf
mov
lea
xchg
notl
push
mov
clc
cmp
add
dec
imul
add
pop
xor
add
mov
cmp
clc
aad
inc
clc
in
pop
fnstsw
cmp
cmpsl
clc
mov
fcoml
add
sub
insl
add
add
add
add
add
add
add
std
insl
xchg
rclb
sti
jb
add
clc
je
adc
add
add
in
adc
add
jle
loopne
dec
sbb
add
sbb
inc
add
leave
push
or
add
lcall
data16
xchg
cs
cwtl
loopne
leave
xchg
push
clc
ret
clc
mov
clc
lcall
push
add
xor
add
lcall
jns
addr16
sar
leave
mov
inc
clc
push
arpl
add
clc
mov
test
test
ret
clc
mov
out
outsb
jle
clc
cli
add
add
add
cmp
mov
add
sbb
ficoms
aam
pop
lahf
jnp
sbb
or
add
add
cmp
add
lret
or
dec
adc
add
xor
push
dec
rolb
add
stc
jae
add
add
inc
clc
push
add
cmp
stc
cltd
aad
mov
ja
clc
loope
jl
mov
mov
clc
cmpsl
clc
pop
sar
aam
jns
add
out
repnz
cwtl
push
add
cld
jmp
cwtl
mov
fdivr
imul
cld
jmp
imul
dec
sahf
test
inc
clc
sub
clc
sub
clc
daa
clc
lods
inc
clc
dec
in
test
dec
in
and
add
add
add
mov
add
stos
or
nop
inc
add
add
jno
add
xor
add
in
fdivs
je
sbb
test
jmp
mov
clc
call
popf
adc
add
pop
sub
es
cmp
push
fsts
push
clc
jmp
dec
mov
push
pop
and
mov
sub
mov
add
xchg
cmp
add
notl
clc
xchg
sahf
mov
sar
clc
jno
add
sbb
adc
jae
add
stc
bound
add
add
add
add
clc
sbb
dec
push
add
movsl
clc
dec
mov
cmp
fcmovnu
int
add
cmp
in
cmp
out
outsl
cmpsb
clc
mov
add
clc
cmp
mov
ret
cld
jmp
cmpsb
xchg
or
xor
add
pop
ficoms
divl
sar
fisttpl
cld
jmp
je
add
xchg
and
clc
dec
xchg
scas
inc
add
mov
cld
jmp
sub
test
loopne
sbb
add
inc
clc
push
add
fwait
test
test
dec
pop
cmp
add
stos
out
imul
inc
add
xchg
mov
dec
in
pop
xchg
sub
lods
sub
add
add
loop
out
xlat
or
test
sub
clc
test
xchg
xor
add
jge
add
data16
cmp
add
sbb
data16
aas
mov
in
jno
add
add
clc
pop
fisubl
imulb
push
xbegin
jg
in
or
addr16
cmp
mov
cmp
mov
lods
cld
jmp
cwtl
add
sub
cli
test
sbb
clc
and
add
inc
clc
mov
cld
jmp
scas
sub
dec
es
scas
or
clc
jge
clc
fcoms
pop
outsl
jl
aas
cmp
pushf
aad
cmp
clc
push
jl
add
pop
gs
scas
cltd
xor
add
clc
mov
add
add
mov
clc
sar
add
xchg
dec
push
clc
pop
jb
add
inc
add
ss
in
repz
clc
inc
add
dec
add
sub
clc
arpl
add
xchg
sahf
jmp
cmpsl
clc
and
add
clc
xchg
jns
ds
fstps
sub
out
push
add
pop
test
dec
xbegin
and
add
add
outsb
imul
add
mov
adc
add
add
cld
jmp
or
leave
js
xchg
cld
jmp
add
add
lcall
stos
rcrl
cwtl
js
clc
inc
add
ficompl
mov
fbld
push
add
push
clc
cmp
clc
sbb
push
ret
cmpsb
je
insb
xor
jne
cld
jmp
push
pop
ss
ret
add
movsb
pushf
ret
clc
call
add
repnz
mov
clc
mov
pop
mov
clc
cltd
sar
jae
add
clc
inc
add
push
lret
cld
cmp
add
imul
pop
xbegin
fildll
or
mov
xchg
decl
clc
jle
mov
test
addr16
inc
add
sar
clc
pop
testb
repz
mov
xabort
push
and
sar
sbb
mov
clc
pop
xchg
add
add
add
cmp
fbld
cmp
outsl
cmpsb
inc
add
cwtl
cmpsb
test
inc
add
rcrl
mov
dec
sbb
cli
das
jp
sbb
aad
jo
add
add
clc
xchg
sbb
mov
clc
xor
add
add
mov
sbb
or
cld
jmp
and
inc
or
add
add
add
add
movsb
clc
inc
add
xchg
xchg
cli
jl
mov
pop
dec
add
add
inc
add
cli
cmp
mov
cmp
clc
test
clc
sub
sub
clc
add
add
pop
adc
add
inc
add
dec
cmp
out
cld
jmp
xor
add
add
cld
inc
clc
or
add
ret
loope
loopne
hlt
inc
add
std
xchg
je
adc
add
dec
pop
mov
clc
push
loop
jecxz
cmp
icebp
clc
inc
add
fmull
sbb
lea
add
movsb
popa
mov
pushf
mov
clc
cmp
mov
push
add
or
add
cld
jmp
or
out
add
add
add
pop
cmp
clc
xchg
gs
jle
inc
add
test
dec
sahf
loope
clc
repnz
gs
or
xor
add
xlat
stc
inc
clc
aam
dec
fadds
adc
add
rorb
xor
add
clc
mul
clc
mov
clc
int3
adc
clc
sub
lret
cmp
testl
xor
add
add
mov
clc
adc
clc
pop
in
bound
add
adc
add
clc
lods
in
push
pop
test
add
mov
xor
add
jmp
xchg
or
clc
mov
add
clc
jb
add
sbb
inc
add
fldenv
add
movsl
clc
movsb
clc
scas
dec
jb
add
into
lock
pushf
fdivrs
add
push
clc
fwait
ds
add
add
or
repnz
pusha
add
jmp
clc
jl
data16
lret
clc
adc
stc
mov
negb
cwtl
leave
je
push
out
insb
jae
add
inc
clc
mov
add
xlat
lock
add
clc
and
add
movswl
cld
jmp
insb
cmp
xor
add
inc
clc
jmp
in
pusha
add
ljmp
arpl
add
clc
or
cmp
vcvtdq2ps
out
sbb
pop
cld
jmp
sub
clc
lea
std
roll
mov
dec
pop
clc
push
push
cmp
add
clc
mov
xchg
sub
clc
cmp
cld
mov
pop
nop
dec
ffreep
clc
cwtl
repnz
jp
jne
clc
aas
cld
add
add
js
mov
add
loopne
inc
add
out
mov
sbb
push
jmp
cmpsb
pop
outsl
ret
inc
clc
mov
add
mov
mov
mov
lods
inc
clc
movsl
clc
ljmp
clc
sub
clc
jmp
das
push
add
dec
leave
jbe
addr16
repz
mov
out
add
add
gs
not
lret
mov
add
repnz
mov
loope,pn
fiaddl
add
xlat
ret
clc
adc
add
and
inc
add
lret
fbstp
clc
fidivrl
dec
jp
mov
add
mov
push
add
push
pop
aam
clc
fnstenv
clc
cmp
add
mov
popf
movsl
clc
cli
adc
add
add
clc
push
inc
add
mov
mov
add
stos
mov
clc
cltd
cmp
ljmp
sub
jbe
sbb
pop
sar
cmp
sti
out
idivb
clc
popf
repz
clc
push
add
vcvtdq2ps
fistps
clc
mov
clc
mov
add
repnz
js
sub
ss
clc
stos
xchg
xor
clc
mov
cwtl
dec
dec
xor
call
mov
clc
mov
add
dec
adc
add
rcl
loopne
fstl
adc
add
mov
repz
add
jnp
je
clc
add
add
lock
sub
clc
mov
clc
xor
add
clc
out
jecxz
xor
add
ret
clc
push
add
mov
clc
mov
add
shrb
sub
inc
add
xlat
push
es
cmpsb
clc
pop
data16
push
or
insb
rcll
add
clc
jo
jae
add
clc
add
pop
in
push
add
jmp
cmp
int3
fiaddl
add
pop
and
ss
clc
push
xabort
push
clc
cmc
pushf
sbb
sbbb
popf
lock
add
clc
jle
clc
add
add
cmpsb
clc
out
or
out
lock
std
repz
add
or
mov
add
sbb
movsl
clc
xchg
stos
or
add
mov
add
test
scas
dec
xlat
dec
mov
cmp
add
inc
test
clc
cmp
mov
or
add
mov
clc
sar
push
push
mov
stos
sbb
inc
add
add
leave
or
jnp
mov
jo
add
inc
clc
aad
clc
js
inc
add
mov
add
clc
push
add
cltd
iret
xchg
add
add
dec
sbb
and
add
in
clc
pop
mov
sahf
loope
or
push
add
xchg
repnz
cwtl
stc
mov
mov
add
jmp
sub
clc
cmp
jo
add
add
lock
cmp
jb
cld
jmp
dec
sar
cmpsb
clc
lret
clc
inc
add
add
add
in
xlat
sar
add
dec
loope
mov
aam
movsb
clc
mov
gs
popa
add
jmp
add
add
dec
xchg
out
shl
clc
pop
clc
stc
data16
jecxz
mov
add
add
push
das
xchg
mov
jne
xbegin
clc
cmpsl
clc
imul
or
in
push
clc
iret
sbb
add
scas
stos
leave
jg
add
imul
add
jmp
mov
fstps
clc
fs
sub
clc
inc
clc
mov
jge
push
add
or
call
cmp
out
xchg
inc
add
mov
add
adc
add
icebp
mov
in
push
clc
fcomps
add
cmp
and
add
pop
clc
repnz
nop
mov
ret
jmp
add
xchg
xchg
sub
into
jno
add
clc
or
and
add
add
arpl
add
xlat
clc
pop
fucom
clc
out
pop
clc
jae
add
inc
clc
mov
jp
ljmp
ja
push
adc
add
sahf
in
mov
add
mov
cld
jmp
sub
xchg
sahf
lret
add
add
out
xor
add
clc
pop
or
sbb
jmp
xchg
movsb
cmp
push
and
xlat
add
add
cmp
clc
ret
clc
cli
stc
dec
out
dec
in
jnp
clc
sbb
mov
add
add
xchg
setg
mov
add
add
add
xchg
sar
xchg
aad
cli
dec
dec
pop
clc
xor
clc
mov
clc
dec
js
scas
cwtl
add
nop
int
clc
dec
adc
add
out
dec
lahf
jmp
arpl
add
pusha
add
mov
sar
jl
lock
add
push
add
sub
lret
add
fwait
loop
inc
add
xchg
add
add
clc
mov
int3
cmp
lea
loope
out
icebp
xor
add
test
add
and
add
push
aad
jge
or
add
add
inc
fwait
incl
add
add
mov
xchg
adc
add
es
into
add
add
jp
mov
add
cmp
push
ss
ret
jge
sub
push
add
push
inc
add
stos
fcomps
clc
fdiv
movsb
clc
or
add
mov
jns
adc
add
add
cmpsl
clc
mov
pop
clc
fwait
ret
pushf
cmp
insl
stc
scas
add
add
add
jno
add
add
sti
or
pop
sar
mov
cld
jmp
fs
and
jae
add
add
lahf
and
add
add
add
add
sar
clc
mov
sbb
sbb
add
dec
sub
inc
clc
jb
add
push
adc
add
lret
insb
lods
scas
dec
mov
cld
jmp
pop
test
cs
lcall
hlt
sbb
inc
clc
test
aad
je
clc
scas
sbb
clc
int
mov
stos
lcall
jp
aaa
outsl
bound
add
add
cmp
mov
call
jle
mov
in
adc
dec
inc
clc
xchg
into
cmc
dec
clc
lahf
mov
pop
daa
clc
jae
add
dec
xchg
and
lcall
scas
mov
clc
sbb
push
add
xchg
xbegin
mov
clc
add
add
clc
pop
clc
pop
lret
add
add
stos
pop
fisttpl
push
ret
imul
xor
add
clc
inc
clc
cmp
shl
clc
sbb
mov
cld
jmp
push
or
cmp
add
adc
add
xabort
add
clc
lods
pusha
add
pusha
add
xor
addr16
rcll
clc
mov
add
js
popa
add
cmp
clc
sub
clc
and
cmp
clc
xor
jmp
dec
mov
cmp
mov
clc
fdivs
add
add
add
insl
inc
add
in
loop
dec
adc
add
add
dec
jmp
mov
clc
std
int
mov
add
iret
ja
fs
out
sub
clc
stc
adc
add
stos
push
push
clc
adc
cmp
pusha
add
loop
and
add
dec
fcomps
in
push
add
rcrb
dec
or
mov
add
loopne
stc
out
scas
sub
mov
clc
fldl
sub
dec
stc
inc
add
dec
in
scas
sbb
add
ss
ret
lea
add
add
and
add
add
cs
data16
mov
inc
add
and
adc
add
clc
stos
inc
add
inc
add
mov
repz
in
imul
clc
insl
jecxz
push
sar
mov
test
adc
test
pushl
push
ret
clc
jl
daa
clc
adc
add
add
aam
fs
ss
add
lret
clc
cmp
xchg
inc
add
loopne
mov
jg
mov
or
mov
add
pop
mov
add
fs
shl
clc
pop
pop
adc
lock
clc
jno
add
mov
clc
push
add
xchg
mov
clc
xlat
add
add
scas
sar
fwait
pop
push
pop
das
jg
inc
add
jge
clc
or
stos
dec
jmp
aaa
push
add
jo
add
add
sti
psllq
imul
loop
clc
js
pop
aas
cwtl
popa
add
push
add
add
inc
int
jo
add
and
add
mov
clc
sahf
sar
fwait
and
jg
xchg
adc
add
test
cli
cwtl
ljmp
mov
inc
add
sahf
sub
fs
jmp
sub
add
lahf
cmp
ss
stos
fnstsw
and
add
clc
xor
add
add
aam
clc
mov
mov
and
add
clc
pop
cmp
imul
inc
clc
mov
mov
add
xbegin
enter
add
fstps
clc
push
mov
lcall
aaa
adc
add
addr16
and
sub
popf
jl
mov
add
movsl
clc
xor
add
ljmp
xbegin
inc
add
add
add
clc
and
add
lods
fstpt
lcall
cmp
fs
cmp
add
cld
cltd
das
jns
pop
clc
push
sbb
or
add
filds
xor
add
sti
movsl
clc
cwtl
jecxz
dec
outsl
fnstenv
sar
jmp
jp
sub
test
pop
and
add
pop
push
mov
inc
aaa
fs
pop
js
inc
add
imul
add
inc
add
mov
stos
ss
ret
or
xor
clc
mov
clc
in
inc
clc
inc
add
sub
add
push
add
idivb
popa
add
stos
mov
cmp
xchg
imul
dec
or
xor
clc
pop
jg
pop
aam
mov
sti
mov
clc
in
out
cmpsb
clc
inc
add
out
pushf
in
movsb
clc
enter
sar
cli
test
ljmp
nop
inc
push
mov
jno
xor
mov
divl
out
jno
add
or
cmpsb
clc
imul
sbb
out
jp
mov
pop
xchg
out
inc
add
fstpl
pop
stc
cld
jmp
aaa
cmp
xor
cld
jmp
adc
and
add
clc
lea
add
add
scas
mov
fcomp
fadds
add
add
sub
ficoms
clc
imul
clc
xbegin
fs
or
popf
push
stos
sbb
push
add
push
rclb
sar
dec
insl
dec
ja
sub
push
add
mov
jl
mov
add
add
add
xor
adc
test
pop
cld
lods
sub
sbb
mov
es
cs
push
scas
or
xchg
mov
mov
clc
popa
add
clc
xlat
push
add
clc
in
loop
lret
add
add
call
jmp
mov
mov
add
cmp
movsl
clc
add
add
fs
sar
jbe
clc
jbe
add
cmp
sar
clc
pushf
sub
xbegin
clc
jmp
inc
add
popa
add
dec
xbegin
jmp
push
sub
shll
inc
add
mov
and
add
xor
add
imul
clc
inc
add
cmp
jns
inc
clc
out
cmpsb
clc
fs
in
dec
push
add
ss
ret
and
sub
outsb
popa
add
jp
js
test
popf
mov
clc
jmp
nop
inc
clc
jbe,pt
jb
add
inc
clc
adc
add
sbb
ss
clc
push
fildll
add
sbb
test
int3
cld
jmp
mov
push
cmc
sub
add
bound
add
cwtl
adc
add
fisubrl
push
add
cld
jmp
inc
lock
sbb
pusha
add
push
add
mov
cmpsl
clc
xor
add
clc
cmpsl
clc
jno
add
jl
clc
jp
outsb
sahf
adc
add
add
lock
imul
push
lahf
es
and
jmp
mov
sub
or
add
popa
add
jecxz
mov
jle
lods
push
add
pop
and
add
bound
add
ds
clc
jp
add
loopne
je
addr16
pop
ljmp
or
gs
xor
add
loopne
sbb
clc
into
mov
call
add
pop
push
add
pop
xbegin
add
lods
lods
dec
sar
jns
bound
add
add
push
clc
movsl
clc
jmp
inc
add
adc
add
add
and
jmp
add
add
xchg
pop
sbb
clc
popa
add
cmp
add
add
cmp
add
mov
cmp
sbb
mov
add
add
daa
clc
push
add
cld
stos
mov
pop
aas
dec
es
cmpsb
clc
js
add
add
mov
and
add
add
clc
cs
movsb
clc
push
cmp
clc
xor
add
es
insb
es
dec
stos
xor
pop
js
sub
add
shl
clc
or
bnd
sar
clc
ja
jb
add
adc
add
das
sarb
fldenv
xchg
test
lret
jbe
pop
and
add
clc
jmp
clc
dec
dec
push
add
js
sub
clc
pop
sub
clc
mov
out
xchg
pusha
add
mov
clc
add
lock
clc
lock
je
push
int3
roll
xor
add
clc
and
jmp
and
test
loop
in
into
mov
and
add
jmp
mov
outsl
mov
shrl
cmp
cwtl
sbb
fsubs
clc
cmp
jmp
cmp
push
dec
jge
clc
out
sbb
clc
test
in
xchg
inc
clc
out
ja
clc
nop
dec
scas
std
bound
add
out
add
add
clc
enter
clc
xchg
dec
xabort
pop
into
push
add
jg
add
dec
xor
clc
xor
add
jnp
mov
clc
cmpsb
clc
fst
scas
xor
clc
xor
add
clc
xabort
popf
xlat
or
and
bswap
lea
icebp
mov
dec
xchg
push
and
add
push
stc
test
jnp
add
dec
sar
pop
pop
cmp
lahf
mov
fstl
add
in
add
or
inc
add
add
cwtl
imul
cmp
clc
mov
arpl
jmp
cmp
add
fisttpll
mov
mov
add
mov
adc
add
negb
es
xchg
enter
leave
test
data16
jge
xchg
adc
add
fwait
sub
and
ret
clc
jo
add
cli
ss
sbb
adc
add
lock
adc
add
movsb
clc
inc
add
aad
ret
pop
lods
or
clc
pop
rcrb
add
popf
hlt
push
or
int
clc
daa
clc
test
and
add
clc
outsl
cwtl
pop
divb
add
cmpsb
clc
dec
in
aam
dec
dec
icebp
out
ficoml
add
clc
fcmovnb
clc
xor
add
lock
fists
xchg
pop
es
or
mov
add
add
pop
mov
or
data16
jbe
or
sbb
add
cmc
outsb
repnz
add
in
repz
clc
pusha
add
cwtl
mov
movsb
clc
xor
add
addr16
mov
clc
cmp
js
cmp
je
cld
jmp
ja
or
add
in
cmp
pushf
int
mov
cld
jmp
mov
clc
sbb
mov
add
xor
add
push
mov
xchg
add
clc
cmp
out
cmp
fdivl
and
add
add
hlt
pop
clc
jmp
add
push
bound
add
jnp
clc
popf
pop
cmp
negl
mov
data16
rcll
popf
and
add
enter
xabort
repnz
out
insl
jo
add
jbe
and
add
add
jg
clc
rorb
pop
mov
sti
outsl
out
fdiv
jmp
clc
imul
pop
gs
fwait
sar
add
jbe
sub
outsl
clc
sbb
cltd
dec
mov
clc
jg
mov
cmp
mov
sbb
dec
mov
sbb
es
sahf
add
fidivrl
mov
inc
add
sbb
fs
loop
cld
jmp
push
adc
add
xor
lods
dec
mov
mov
add
jl
sub
fstp
lock
mov
jne
add
sti
push
cmc
cmp
add
add
xlat
or
sbb
push
ret
sbb
or
adc
add
add
mov
add
sub
add
clc
leave
loopne
test
pusha
add
mov
jmp
mov
push
add
mov
add
clc
adc
add
iret
adc
clc
push
add
mov
outsb
cli
lods
mov
clc
hlt
xor
mov
mov
push
add
push
pop
or
add
pop
stos
adc
add
decl
jns
incl
imul
add
add
jno
add
cmp
daa
clc
xor
add
pop
je
sti
push
clc
mov
ss
sar
xchg
ss
std
mov
clc
nop
nop
dec
roll
sub
push
add
mov
xbegin
pop
pop
clc
mov
std
cwtl
dec
push
push
cld
jmp
push
sahf
inc
dec
sub
clc
pop
test
pop
clc
es
lods
xchg
add
dec
ficoms
cld
jmp
je
cmp
add
pop
adc
addr16
cmp
aam
add
mov
enter
mov
mov
addr16
sub
xchg
call
cld
jmp
inc
jno
add
hlt
das
test
mov
add
data16
adc
pop
fs
inc
add
test
xchg
xor
add
dec
lock
push
add
xchg
loop
dec
inc
add
inc
clc
dec
js
std
ja
or
mov
add
dec
inc
clc
fwait
xchg
lock
jge
jo
add
clc
mov
pushf
sub
jp
add
test
mov
imul
clc
repz
out
cs
in
xchg
sub
add
sub
cmp
add
add
add
sub
cmp
clc
gs
inc
clc
mov
clc
push
mov
clc
ja,pn
enter
or
ljmp
xchg
add
add
or
enter
sarb
mov
sbb
je
cld
jmp
sbb
repz
jmp
inc
push
adc
ljmp
lcall
and
mov
cmp
and
int3
outsl
scas
hlt
cs
or
cmp
mov
movsl
clc
in
xchg
ja
sub
clc
push
push
clc
jp
dec
adc
add
add
sti
sbb
in
and
gs
mov
add
dec
iret
add
add
add
add
xabort
fdivrl
jle
and
add
add
clc
mov
jmp
cwtl
outsl
sbb
push
clc
jne
clc
lahf
cmp
add
enter
add
or
add
mov
mov
mov
stos
push
add
and
xbegin
clc
cmp
inc
add
and
add
pop
in
pushf
aam
aam
dec
es
xchg
sub
fwait
sub
add
push
sub
dec
xor
add
cld
xor
add
adc
add
add
clc
inc
add
or
clc
xchg
arpl
add
xor
add
xor
clc
aam
fildll
lock
aad
in
jp
clc
loopne
fstpl
fdivs
test
ja
cmc
stos
leave
js
push
push
add
inc
clc
stos
inc
clc
hlt
cmp
clc
or
add
scas
mov
or
out
mov
dec
inc
add
mov
add
and
add
add
add
clc
mov
add
rcrl
sbb
add
inc
add
fldenv
clc
gs
xchg
ror
lods
aam
leave
fisttpl
daa
clc
add
add
in
push
clc
add
add
addr16
stos
mov
add
lret
add
push
add
and
and
lods
hlt
add
add
clc
cli
jmp
xor
add
pop
pop
pop
xchg
mov
add
xchg
bnd
xchg
nop
and
xchg
inc
clc
jg
mov
add
pop
or
and
add
clc
xchg
inc
add
add
add
clc
dec
add
add
clc
or
leave
cmp
clc
aad
sub
add
aad
leave
dec
test
sbb
add
clc
hlt
sbb
clc
dec
jp
mov
cmp
push
push
or
cwtl
outsl
inc
add
mov
cli
and
add
add
inc
add
cmp
cmp
xchg
bound
add
jmp
in
ret
clc
fistpl
mov
sbb
and
add
out
ljmp
add
addr16
dec
sub
sbb
clc
jg
xchg
or
add
repnz
xor
add
add
popf
sbb
add
xor
add
stc
mov
std
dec
mov
clc
push
clc
sub
cmp
add
jne
cld
jmp
push
xchg
or
clc
cmp
fsubs
add
push
in
sahf
faddl
js
jge
adc
add
and
aad
int3
lahf
scas
jg
pop
mov
add
cli
adc
add
cmp
push
sar
and
add
clc
xor
add
ss
jbe
clc
push
add
lret
add
xor
mov
cwtl
push
add
add
sbb
add
testb
in
sub
lahf
adc
add
dec
mov
push
ret
sub
lret
xbegin
cmp
clc
and
add
jg
add
mov
stos
adc
clc
out
pop
dec
ret
cmp
gs
add
and
cmp
mov
add
push
inc
add
test
mov
clc
int3
lea
adc
add
add
pop
ljmp
inc
clc
xchg
insb
xor
stos
cmp
std
and
add
add
push
add
and
add
add
mov
clc
dec
out
fwait
dec
sbb
clc
cmc
pop
push
xor
add
into
or
inc
add
sar
add
ss
ret
add
cli
fists
add
jnp
clc
mov
add
push
mov
sbb
test
jmp
inc
clc
add
add
add
add
clc
mov
xor
cld
jmp
xor
push
clc
into
ret
xor
cld
jmp
jp
nop
or
inc
clc
xor
add
xchg
loopne
loop
dec
sar
fisttpll
in
cmpsl
clc
ja
mov
notl
cwtl
mov
jmp
cwtl
jno
sub
repnz
ja
mov
ret
jb
add
clc
jae
add
clc
push
dec
or
fstp
cmp
clc
pusha
add
std
div
dec
out
xchg
fbld
arpl
add
dec
int
clc
sahf
and
add
jp
or
ficoml
inc
clc
out
jmp
push
cld
jmp
cmpsb
xor
jno
mov
add
gs
frstpm(287
clc
sti
stos
jae
add
add
clc
std
pop
and
jns
xor
add
dec
push
mov
add
clc
mov
add
pusha
cld
jmp
insb
sub
xchg
flds
scas
dec
pop
ficoms
dec
repz
jns
inc
add
lahf
ljmp
daa
clc
pop
sub
cmp
clc
enter
jecxz
idivl
push
xchg
sarb
add
das
xchg
clc
sub
and
loope
mov
clc
xor
add
cmpsl
clc
cli
test
sub
jmp
adc
xchg
cmpsb
clc
movsb
clc
mov
add
leave
pop
mov
mov
jle
repnz
mov
add
add
push
mov
add
mov
fldcw
push
clc
jno
add
add
int
add
cld
in
filds
clc
sar
mov
cltd
mov
mov
clc
cmp
add
in
adc
outsl
add
add
push
je
cld
jmp
pop
xchg
sar
clc
out
cmp
dec
jae
add
mov
jmp
sub
mov
add
mov
inc
clc
dec
arpl
add
sbb
push
cld
inc
clc
test
push
add
push
add
aas
dec
outsb
push
add
pop
cs
cmp
popf
decl
fsubrs
lcall
add
out
jb
add
xchg
cmp
clc
push
or
jbe
mov
push
imul
js
ds
dec
cld
jmp
aas
sub
sbb
jmp
xor
jno
jg
clc
adc
addr16
cmc
or
stos
jg
push
pusha
add
xor
add
xchg
mov
scas
mov
inc
pushf
cld
jmp
mov
dec
lret
loop
cmpsb
clc
aas
popa
add
arpl
add
imul
clc
clc
aas
xchg
or
push
xor
cld
jmp
sub
lea
pop
jnp
cmp
push
xchg
cmpsb
clc
dec
mov
adc
add
repnz
add
inc
clc
outsb
sbb
scas
popa
add
cli
mov
lock
add
dec
push
pop
mov
and
cld
jmp
inc
push
jno
adc
add
jge
jne
pushf
add
add
push
push
fisubs
push
mov
push
ret
jno
and
add
mov
or
or
sbb
add
sahf
popf
or
mov
jecxz
imul
add
in
fdivrs
clc
enter
add
xchg
mov
add
scas
clc
lcall
jmp
nop
sahf
sub
xchg
mov
add
and
add
cli
ret
clc
cld
icebp
dec
ss
dec
sub
jmp
popa
jge
je
clc
stos
and
test
jnp
std
stos
imul
xchg
loope
mov
clc
cmp
scas
pop
popf
out
mov
int
dec
ljmp
sub
xchg
add
add
mov
add
lods
stos
inc
clc
add
mull
add
add
push
sub
pop
js
sahf
adc
add
mov
fwait
sbb
dec
sbb
test
cld
jmp
into
cmp
adc
add
sbb
cld
jmp
lods
mov
clc
jns
clc
sub
mov
repz
cmp
loop
pop
adc
add
ja
jmp
cld
jmp
sub
add
ss
dec
and
add
add
jle
add
and
add
jp
and
add
cmp
jns
jge
pop
clc
and
add
repz
clc
and
add
sub
add
add
sub
mov
clc
mov
dec
ljmp
add
sbb
add
clc
data16
loop
out
mov
jne
clc
loop
mov
adc
push
xor
push
add
and
add
clc
dec
aam
stos
xchg
push
add
loop
lcall
and
add
ljmp
lcall
clc
js
out
mov
clc
pushf
leave
mov
add
add
fsub
clc
xor
add
jle
jge
dec
int
call
ss
ret
sub
cmpsb
clc
push
jmp
sub
add
add
js
clc
imul
dec
mov
clc
into
pop
pop
and
add
mov
cld
jmp
insb
inc
sub
pop
clc
sub
push
clc
mov
loope
fnstsw
jnp
add
int3
mov
xor
mov
cld
jmp
cmpsb
sub
and
addr16
ss
stos
sbb
sub
xchg
divl
add
scas
ret
sti
add
add
ja
push
flds
sbb
mov
cld
jmp
icebp
or
sbb
clc
ss
mov
pop
scas
stos
jns
in
sub
xor
add
test
shrb
jge
clc
mov
add
inc
clc
add
add
add
pop
nop
push
add
add
add
adc
add
or
imul
icebp
xor
add
adc
add
cmp
sbb
push
sub
push
lea
cld
jmp
imul
and
add
add
jl
hlt
push
jmp
imul
add
ret
clc
out
push
jmp
test
cmp
out
push
add
xchg
hlt
pop
rcll
ss
arpl
add
mov
repnz
psraw
cmp
data16
outsl
cmp
and
enter
add
test
xchg
loopne
int
std
call
push
ret
outsl
sub
xabort
clc
jle
clc
mov
mov
sbb
mov
jns
cld
jmp
xchg
mov
pushf
iret
cld
aaa
mov
push
rep
cld
jmp
es
sub
aam
clc
or
cmp
loop
ljmp
clc
jnp
adc
pop
popa
add
jmp
xor
jne
add
ljmp
loopne
inc
clc
hlt
ror
push
add
mov
add
or
xlat
lret
loopne
lahf
pop
cmp
add
pusha
add
xlat
jbe
ret
clc
xlat
sbb
cld
jmp
push
data16
mov
clc
adc
add
dec
adc
add
clc
lret
in
daa
clc
stos
jl
clc
mov
in
sbb
repz
xor
add
jmp
push
cld
jmp
dec
xchg
je
sub
add
xchg
add
addr16
xor
add
add
imul
clc
add
mov
clc
and
add
cli
dec
jle
pop
inc
clc
adc
clc
add
add
clc
cmp
xchg
lods
std
int
add
shll
or
clc
clc
push
clc
sti
into
cltd
adc
add
clc
jl
fldenv
add
das
xchg
cmp
cltd
adc
add
std
push
jp
pop
leave
cmpsb
clc
aam
insb
lea
add
jno
add
add
cld
jmp
mov
clc
jp
add
or
add
std
cltd
ja
inc
clc
pop
rorl
xor
jb
add
add
mulb
add
shrb
and
add
enter
add
add
pop
clc
lock
clc
addr16
outsb
call
jmp
test
clc
test
out
insb
pop
and
add
sub
ret
clc
movsl
clc
jne
stc
mov
clc
cs
push
and
and
dec
add
add
lock
add
or
imul
and
add
jmp
sub
add
mov
push
jno
call
sub
setno
dec
mov
add
clc
addr16
mov
add
rol
clc
xor
add
clc
xchg
enter
mov
sub
test
sub
add
sub
add
cmp
out
outsl
push
sub
add
push
or
insl
iret
cmp
call
in
inc
add
sbb
add
cld
jmp
nop
dec
mov
arpl
add
mov
lods
push
xchg
sbb
in
mov
cmp
add
insb
dec
push
add
daa
clc
xor
add
pusha
add
sbb
nop
xabort
add
imul
dec
aas
adc
jmp
sbb
clc
adc
add
clc
scas
cltd
sub
add
sar
xlat
cmp
mov
icebp
fstps
aas
pushl
idiv
jmp
movsb
dec
xchg
je
add
add
add
aad
mov
add
jb
add
or
rol
clc
sub
add
mov
cs
sbb
add
dec
jmp
add
pop
xabort
inc
add
outsl
push
cmpsl
clc
push
ss
mov
add
cmp
pusha
cld
jmp
clc
xchg
and
pop
arpl
add
sbb
cmp
add
fidivs
clc
sbb
rcl
and
clc
mov
add
xlat
ljmp
pop
cmp
nop
or
add
cmpsb
clc
jno
add
clc
and
add
clc
and
add
clc
cltd
sar
add
imul
bound
add
clc
jb
add
or
sbb
ret
in
pop
mov
ror
cld
jmp
sub
icebp
xor
add
stc
imul
push
xchg
popa
add
push
adc
add
push
add
out
mov
mov
ss
repz
fninit
clc
out
int
mov
push
test
dec
push
add
scas
insb
movsl
clc
sbb
clc
hlt
fmull
add
pop
std
cmpsl
clc
sbb
cli
clc
dec
inc
clc
ficoml
sbb
popf
add
add
add
add
fidivs
xchg
gs
push
dec
repz
inc
add
dec
aas
movsl
clc
fnstenv
clc
inc
add
insb
mov
add
js
pushf
adc
add
and
add
repnz
xchg
call
in
mov
loopne
cli
mov
add
sbb
cmp
clc
outsb
xchg
jle
fldcw
decb
mov
icebp
push
clc
pop
ss
add
mov
cli
fadd
clc
fdivrs
cmp
add
fs
or
clc
add
add
and
clc
pop
lock
jge
dec
in
jmp
cmp
dec
mov
and
add
clc
test
cmp
clc
cmp
sbb
clc
sbb
mov
add
mov
divb
mov
clc
leave
loop
pusha
add
and
add
mov
add
sbb
jg
test
loop
mov
insl
add
add
push
adc
add
add
clc
adc
add
in
ds
push
loope
out
js
clc
mov
addr16
lods
xbegin
rclb
adc
add
mov
cmp
clc
cltd
pop
lcall
clc
jbe
lods
aad
in
insl
xchg
pop
hlt
pop
clc
dec
and
add
mov
cmp
clc
and
loope
ret
clc
rorl
cli
jecxz
mov
imul
clc
push
add
dec
and
add
aam
dec
jb
add
push
or
jmp
stos
shll
clc
push
clc
pop
pop
pushf
popf
pop
jmp
push
xor
xor
add
sub
mov
add
pop
clc
push
in
leave
stos
popf
xchg
sub
clc
pop
fnstenv
in
daa
clc
test
push
xor
add
add
or
leave
mov
out
sub
add
mov
popf
xchg
stos
cmp
clc
push
call
repz
clc
cs
cmpsb
clc
clc
sub
add
or
in
repnz
jl
push
popf
pushf
daa
clc
sbb
adc
add
or
clc
dec
lea
or
push
mov
hlt
lahf
push
imul
pop
ja
add
or
adc
add
add
cmp
das
jle
clc
xor
add
adc
adc
sti
mov
add
mov
xor
add
cmpsb
clc
mov
clc
int3
xchg
js
pop
mov
clc
sub
add
loop
sbb
jno
add
cmp
clc
pop
clc
sbb
or
mov
add
add
inc
add
dec
jnp
mov
add
std
push
es
std
xchg
or
add
dec
or
mov
clc
add
add
jge
pop
mov
push
notb
add
mov
jl
sar
clc
jle
ds
clc
cmp
mov
push
add
insb
fcomps
xbegin
push
add
icebp
addr16
xor
add
or
clc
popf
aad
dec
mov
mov
xor
add
add
jb,pn
add
cli
pushf
dec
pop
std
xor
add
clc
imul
js
clc
fists
add
clc
lock
jne
add
sub
add
cld
sbb
mov
clc
clc
xchg
push
add
rolb
mov
mov
addr16
xor
add
push
imul
inc
add
xchg
or
add
adc
add
jge
dec
cmp
dec
jmp
clc
mov
in
inc
add
lret
imul
jb
add
clc
sarb
add
lret
or
add
add
and
add
add
scas
pushf
scas
xor
add
cmp
add
add
add
clc
dec
lahf
xchg
xchg
into
ficoml
add
clc
scas
jecxz
test
mov
clc
scas
and
add
rolb
test
test
adc
add
push
add
ret
mov
or
add
inc
clc
mov
adc
add
clc
fwait
test
mov
lahf
cmp
cmp
dec
push
add
and
add
clc
push
cltd
je
adc
add
cli
outsl
lcall
out
imul
add
es
pop
adc
in
nop
ret
clc
jne
or
add
mov
clc
cmp
jno
add
cmpsb
clc
xor
dec
xchg
in
sub
cli
xlat
aad
xchg
sub
out
xchg
jge
sar
or
ret
imul
mov
add
sbb
ja
add
xchg
pop
in
jg
sbb
clc
dec
adc
add
cli
pop
test
out
pop
cmp
dec
add
pop
cmpsl
clc
or
test
jle
rclb
pop
clc
push
add
fst
out
adc
add
sub
mov
add
add
add
clc
dec
imul
dec
out
and
out
mov
push
add
sbb
adc
add
add
imul
mov
clc
mov
add
cld
jle
in
inc
clc
fimull
sub
clc
cmp
push
lret
add
notl
add
fistpl
stos
sar
add
add
xchg
test
mov
cmp
push
add
sub
inc
clc
cmp
shll
insl
out
aad
in
fsubp
clc
scas
sub
add
insl
lahf
add
add
add
push
lret
stos
shl
xchg
es
loop
or
mov
clc
stos
add
add
add
fs
inc
clc
sar
movsl
clc
push
ja
add
icebp
add
nop
mov
pop
cs
mov
data16
cmp
xor
push
dec
and
add
add
pop
mov
stc
jne
inc
clc
lcall
jecxz
cmp
clc
or
mov
clc
ffree
clc
jl
cld
sbb
xchg
ret
clc
and
add
clc
cmp
clc
lcall
clc
hlt
stc
pop
clc
inc
clc
outsb
sub
cwtl
xor
clc
test
lret
aam
je
xor
clc
aad
pop
ficompl
mov
add
and
xchg
sub
pop
out
adc
add
add
add
mov
loop
jnp
daa
clc
cmp
add
adc
add
dec
mov
add
sub
mov
add
lahf
push
add
out
in
mov
shl
clc
mov
out
bound
add
add
add
mov
jg
mov
pop
push
cmpsb
clc
jmp
sbb
sub
mov
clc
out
scas
cmpsb
clc
nop
data16
mov
inc
add
outsb
inc
clc
je
sbb
clc
jl,pt
clc
fs
sub
push
jl
nop
cmpsl
clc
mov
adc
add
inc
clc
loopne
out
dec
mov
push
add
std
out
inc
add
fs
aam
xor
add
mov
in
js
clc
int3
inc
add
daa
clc
cmp
lahf
pop
jecxz
cmp
repnz
push
clc
push
jo
add
and
add
mov
ljmp
add
add
clc
xor
add
clc
imul
lcall
add
jecxz
sbb
cmp
push
add
iret
ds
insl
inc
clc
mov
sbb
data16
loope
popf
out
add
add
clc
sar
push
or
mov
test
xor
add
mov
clc
cmp
jp
movsl
clc
mov
clc
daa
clc
xchg
and
add
outsl
int3
int3
adc
add
test
and
cmp
cmp
add
add
inc
clc
loop
xor
add
out
push
add
jno
add
mov
clc
mov
pop
mov
xor
add
xor
int3
sbb
out
sbb
clc
pushf
aad
or
add
sbb
jo
add
mov
add
popf
cmp
clc
test
mov
add
fnstcw
clc
test
scas
scas
fcmovnu
cmp
rclb
leave
lcall
xabort
clc
cmp
xlat
pop
in
sbb
das
add
dec
xchg
jle
gs
add
jp
and
add
add
cmp
add
add
add
loop
cmp
dec
xor
or
clc
aad
clc
add
loope
mov
mov
clc
pop
mov
or
scas
xchg
cmp
inc
add
and
add
mov
adc
add
cmp
clc
push
add
jge
mov
mov
clc
cmp
rorl
pcmpeqd
add
scas
sbb
xor
add
add
clc
sarb
xbegin
leave
mov
mov
cmp
lea
add
inc
clc
outsl
mov
push
and
add
add
ficomps
clc
sahf
mov
outsl
in
mov
pop
and
add
or
clc
jle
add
es
lret
cwtl
fmuls
add
add
xor
add
inc
add
test
popa
add
repz
clc
fbld
clc
and
add
jge
sub
add
pop
data16
loope
xchg
movsb
clc
dec
mov
je
out
push
add
adc
int3
aad
clc
add
pop
jl
inc
add
pop
dec
sub
xor
add
clc
call
int
clc
cmp
loop
clc
xor
add
stos
fisubs
add
lcall
pop
xor
add
mov
add
add
add
fcoml
dec
shrl
sbb
clc
xor
clc
sahf
cmp
iret
mov
aas
icebp
sub
lret
dec
sar
dec
mov
add
jge
test
sar
cmp
rcll
add
mov
dec
jns
mov
clc
dec
iret
testb
add
inc
add
fcmovnu
mov
mov
outsl
cs
cwtl
jge
clc
inc
clc
xabort
fwait
xchg
xbegin
add
imul
add
add
xchg
clc
pop
ja
clc
push
cs
cmp
out
sbb
jecxz
xor
add
clc
mov
add
clc
ret
clc
sub
or
rorl
push
cmpsl
clc
enter
cmp
pusha
add
pop
push
fwait
ljmp
adc
add
or
add
add
add
outsl
mov
ret
clc
inc
add
dec
fsubrl
leave
gs
cmp
push
clc
cs
xchg
pushf
test
clc
cmp
adc
out
iret
jae
add
add
mov
aas
daa
clc
cli
arpl
add
fldenv
clc
xor
fs
and
ljmp
add
and
add
stos
test
into
jae
add
xor
add
int
add
and
add
aad
jl
clc
push
int
arpl
add
add
pop
sub
add
dec
in
or
mov
or
clc
addr16
icebp
dec
mov
repnz
xchg
insb
mov
gs
adc
clc
test
push
add
lret
stc
sahf
push
push
jl
xbegin
push
add
fwait
dec
sahf
fists
jo
add
jg
clc
cli
push
push
add
mov
insb
leave
dec
xor
add
add
add
add
add
inc
add
sar
xbegin
push
int
add
cmpsl
clc
inc
clc
pop
sbb
add
pop
clc
dec
insb
outsl
adc
clc
inc
clc
push
add
mov
clc
dec
pop
or
cli
adc
add
add
hlt
mov
push
sbb
add
add
clc
jo
add
add
cmpsl
clc
cltd
mull
add
clc
jmp
cs
clc
mov
add
and
add
sub
add
aas
or
roll
cmp
ja
js
clc
sar
mov
cmp
add
pop
xor
mov
add
mov
inc
clc
and
add
popf
mov
clc
mov
pop
fbld
add
lret
add
clc
test
daa
clc
jnp
clc
lock
fiaddl
pop
mov
clc
cmp
clc
xor
xchg
add
add
inc
add
jnp
movsl
clc
xor
add
out
add
and
add
cmpsb
clc
mov
enter
pop
arpl
add
add
lret
je
clc
loope
ss
test
add
cmp
inc
add
imul
add
add
add
jge
test
loop
dec
dec
icebp
pop
clc
enter
add
clc
jl
dec
cmp
clc
aad
add
cmp
add
add
or
pop
adc
add
pop
inc
clc
int
dec
pop
pop
mov
pushl
clc
jne
adc
add
add
lods
pop
pop
adc
add
add
mov
add
sbb
in
cmp
cltd
cmp
xchg
fsubs
add
insb
jne
loope
add
add
jo
add
clc
mov
or
xchg
lods
push
add
in
into
ret
clc
shll
test
repnz
add
xchg
dec
ret
clc
cmp
clc
popa
add
mov
clc
sbb
clc
stos
mov
clc
pop
xchg
arpl
add
push
clc
cmp
add
add
hlt
shl
nop
mov
clc
movsb
clc
fwait
cmp
add
iret
fistl
mov
add
mov
clc
test
adc
add
sub
add
sbb
sub
push
add
pop
mov
add
pop
imul
int3
or
jnp
sbb
clc
and
add
in
es
test
out
insb
data16
mov
es
sar
in
addr16
or
add
out
push
fwait
mov
lods
repnz
test
in
mov
imul
cmp
add
call
xor
add
add
rclb
in
sarb
mov
add
aad
jecxz
out
xlat
js
clc
ficoml
and
add
fidivrl
mov
sarb
loopne
fldenv
clc
cwtl
mov
add
jl
aad
adc
add
mov
dec
pop
add
ja
push
add
mov
clc
push
jno
add
notl
add
add
xchg
insb
fstpt
inc
clc
dec
jo
add
add
jns
popf
xchg
push
lods
loop
inc
clc
jecxz,pn
imul
out
arpl
add
daa
clc
jg
mov
mov
lods
push
clc
mov
stos
inc
add
jl
xchg
push
enter
mov
mov
push
clc
cmp
cmp
dec
add
add
enter
clc
push
add
ss
dec
inc
add
fwait
ds
dec
push
jne
add
xchg
xlat
push
add
cltd
imul
inc
clc
cmp
incl
lea
push
jo
add
outsl
fwait
clc
call
add
push
or
jo
add
mov
add
cvtps2pi
gs
into
pop
xchg
sbb
or
stc
out
mov
add
out
sbb
out
xor
add
lret
test
outsl
push
sahf
jmp
clc
inc
clc
sbb
add
ret
clc
adc
cli
xchg
pop
push
dec
inc
add
pushf
movsb
clc
mov
clc
pop
sar
outsl
sahf
cmp
cmpsl
clc
gs
cmp
popa
add
test
and
add
mov
das
mov
add
clc
inc
add
inc
clc
mov
clc
hlt
push
mov
add
mov
mov
in
test
push
jo
add
adc
add
sbb
add
clc
cmpsb
clc
aam
clc
cmp
clc
movsl
clc
arpl
add
clc
imul
lods
lcall
cmp
scas
push
leave
addr16
jl
add
sti
mov
clc
into
cmp
gs
jmp
insb
xchg
pop
add
daa
clc
loop
cmp
call
clc
into
lfs
mov
ret
clc
stc
jle
jl
cmpsb
clc
xor
add
clc
pop
test
mov
adc
lret
stc
into
in
mov
mov
sbb
add
sahf
je
inc
clc
dec
xchg
std
adc
add
add
and
add
add
clc
cmp
imul
add
das
and
add
gs
fildl
add
add
cmp
mov
nop
movsbl
clc
shrb
sar
data16
dec
mov
add
clc
fcoms
add
je
cmp
lods
xor
mov
sub
inc
clc
mov
arpl
add
cmpsl
clc
pop
jb
add
aad
clc
pop
cmp
out
or
int3
sbb
add
jecxz
lods
sbb
add
cmpsl
clc
sub
dec
sub
xchg
mov
leave
das
and
xor
add
add
mov
iret
in
push
test
movsb
clc
fisttpll
or
sbb
sahf
sbb
mov
mov
add
add
hlt
daa
clc
push
add
mov
adc
rcl
xchg
testl
cmp
add
inc
clc
sbb
adc
add
clc
xor
lret
push
add
sar
arpl
add
clc
dec
xchg
dec
fsubrl
add
mov
add
cmp
gs
stos
push
aas
in
out
push
jo
add
call
adc
add
mov
add
ret
and
xor
add
xchg
mov
push
dec
arpl
add
stos
inc
clc
ljmp
fdivl
stc
jnp
clc
pop
clc
js
push
add
add
addr16
scas
dec
jnp
jmp
scas
adc
cmp
popf
mov
nop
mov
and
xor
add
add
adc
add
lret
scas
pop
adc
add
fucom
clc
and
add
pop
clc
leave
shrl
das
ds
int3
and
leave
fs
adc
negb
scas
or
clc
ret
clc
repnz
stc
in
inc
add
ljmp
jo
add
clc
icebp
xchg
pop
lock
mov
xor
xbegin
stos
push
iret
fstl
add
clc
mov
hlt
push
add
xchg
xlat
dec
loopne
stc
imulb
push
aad
jmp
clc
dec
stc
push
clc
and
add
mov
push
jge
js
dec
push
gs
jo
add
mov
jp
dec
cmp
cmp
add
xchg
popf
sar
add
push
add
out
and
pop
addr16
jecxz
ja
ffree
clc
out
sbb
mov
add
sub
fnsave
cli
xchg
add
add
jmp
test
clc
mov
clc
movsl
clc
pop
std
addr16
pop
cwtl
popf
dec
and
add
adc
add
add
cmpsl
clc
add
add
xabort
dec
push
add
cltd
icebp
mov
add
int
mov
clc
jl
add
inc
add
push
cmp
cmc
xor
psubb
pop
xchg
jbe
add
je
jne
insb
in
dec
insb
pop
fsubrs
push
xchg
es
mov
mov
cmp
sbb
test
cmp
lock
jge
xor
add
mov
add
jne
insl
lods
mov
imul
clc
push
add
pop
adc
add
jmp
enter
clc
jbe,pn
mov
sub
pop
icebp
add
add
sbb
add
fcmovnu
mov
lods
loop
int3
dec
clc
jno
add
repnz
mov
add
mov
clc
cmp
not
icebp
xchg
loope
cmp
clc
jecxz
xor
add
push
aas
cli
sbb
add
jmp
mov
cwtl
daa
clc
inc
add
inc
add
push
test
mov
clc
pop
pop
xbegin
aad
js
clc
dec
jle
repz
add
clc
cmp
add
mov
sub
mov
add
add
add
add
fdiv
lea
clc
rorl
loop
outsb
sbb
out
popf
xor
add
add
dec
push
add
sub
sbb
add
inc
clc
inc
clc
jb
add
add
fdivrs
mov
mov
sahf
in
jg
clc
xchg
mov
mov
add
add
fwait
xor
inc
clc
xabort
add
sbb
add
sbb
mov
add
adc
add
aaa
cli
xchg
pop
cmp
lock
add
int3
jg
clc
dec
aaa
cmpsl
clc
lret
jecxz
push
clc
or
fs
add
add
add
xlat
lret
pop
clc
nop
adc
add
test
ljmp
push
add
or
sbb
add
or
dec
lock
cmpsl
clc
test
mov
clc
mov
and
add
lock
aaa
test
lret
mov
clc
outsb
push
fwait
shl
shrb
clc
aam
mov
rcl
xchg
mov
add
pop
sti
push
clc
ret
push
clc
cld
jp,pn
add
xor
add
in
mov
test
clc
lods
push
add
push
clc
ljmp
add
or
rcr
mov
mov
mov
clc
mov
push
add
inc
add
sbb
adc
add
sub
add
lods
in
clc
stos
lods
aaa
imul
clc
push
add
aad
sbb
cmp
clc
inc
add
inc
clc
push
add
in
mov
add
add
loope
call
mov
shll
clc
hlt
test
popa
add
stos
loopne
test
enter
mov
add
push
add
or
inc
clc
mov
clc
int
add
arpl
add
loop
hlt
dec
or
add
clc
inc
clc
je
jo
add
add
cmp
cmp
fstl
xor
repz
xor
add
add
push
add
gs
push
in
xor
xlat
mov
out
pop
pop
std
test
adc
add
sar
cmp
add
push
shlb
add
dec
inc
add
mov
xor
jb
add
add
xor
add
aam
adc
clc
inc
clc
mov
add
in
xchg
sub
sub
mov
repnz
add
jecxz
jne
push
mov
inc
add
vmovlps
add
clc
outsb
icebp
adc
add
add
mov
clc
mov
clc
adc
sbb
add
addr16
mov
jecxz
mov
clc
pop
inc
clc
jecxz
aaa
repnz
jmp
clc
dec
xabort
clc
xor
mov
cmp
fists
ljmp
clc
xchg
lea
fcoml
out
xor
add
add
or
movsl
clc
dec
cmpsl
clc
arpl
add
add
mov
sbb
clc
push
add
mov
dec
xabort
add
add
add
clc
data16
aam
xor
add
aad
repnz
out
jae
add
add
sub
clc
pop
sub
fs
data16
cmpsb
clc
sbb
imul
add
xlat
dec
stos
mov
jns
mov
into
add
add
add
xabort
clc
dec
jg
shld
bound
add
sub
cltd
movsl
clc
int3
jecxz
mov
and
add
stc
push
add
fwait
sub
mov
sbb
clc
sbb
add
adc
add
clc
xor
add
enter
inc
add
ret
clc
xor
add
add
clc
popa
add
adc
pop
jle
clc
dec
pop
pop
clc
inc
add
dec
cmp
pop
mov
mov
clc
adc
add
aaa
sub
inc
add
sar
xchg
sub
scas
std
call
ja
xchg
aam
clc
add
add
adc
add
mov
add
mov
add
add
add
add
into
or
out
sbb
clc
enter
mov
add
sar
movsb
clc
and
add
add
ds
cli
mov
clc
iret
hlt
jbe
stos
pop
dec
dec
xchg
test
mov
clc
fimuls
add
jge
clc
mov
in
mov
adc
push
add
call
pop
nop
or
mov
leave
sarl
fnstcw
mov
stos
fstpt
lret
xbegin
clc
mov
clc
jmp
mov
add
clc
jbe
inc
add
mov
clc
pop
clc
cmp
pop
add
add
sbb
add
clc
sub
clc
scas
sahf
mov
add
push
cs
sub
mov
lock
pop
sub
add
pop
and
add
dec
test
pop
ja
insl
dec
fcoms
add
fnstcw
inc
clc
lcall
add
clc
enter
jne
cli
icebp
addr16
in
adc
add
gs
xchg
mov
sub
add
out
popf
scas
mov
push
xor
add
test
clc
add
add
add
add
and
add
add
ret
rorl
stc
pop
ds
push
jae
add
fdiv
dec
adc
mov
sbb
or
add
dec
inc
add
cmc
loop
adc
add
enter
push
add
fisttpll
add
add
cmp
jno
add
jp
clc
or
xor
xchg
out
clc
push
loope
push
cmp
clc
inc
add
mov
add
sar
xchg
mov
clc
stos
push
mov
clc
push
cmc
in
pop
push
loope
lock
add
clc
fsubrl
clc
int3
cmp
pop
sbb
ret
fdivrl
fists
lret
add
add
jbe
sub
stos
lcall
cld
adc
add
clc
inc
clc
in
dec
pushf
js
cmc
notb
add
cwtl
std
lods
out
fistps
adc
add
push
scas
cmp
clc
cmp
das
xchg
in
xor
add
jne
test
xabort
clc
xchg
bound
add
es
fcoml
movsb
clc
sub
pop
out
xor
fmul
in
into
push
cs
push
add
jecxz
mov
xchg
stos
or
mov
clc
cmp
dec
push
int
push
add
daa
clc
pusha
add
repnz
sub
inc
clc
pop
scas
cwtl
cwtl
pop
ret
clc
outsb
aam
push
call
scas
jae
add
fldenv
xchg
popf
aas
sbb
cmp
cld
dec
aas
push
test
mov
add
xchg
data16
out
aas
int
lea
clc
idiv
add
add
clc
stos
adc
add
or
call
aas
lods
or
outsl
sar
ret
clc
xor
clc
mov
push
add
int
or
clc
packuswb
iret
int
add
mov
xor
add
ds
mov
cmc
mov
clc
and
add
xchg
repz
add
shlb
clc
cld
xor
add
clc
ficomps
mov
repnz
clc
and
add
movsb
clc
sbb
jbe
push
filds
cmp
in
cld
sar
sub
das
daa
clc
dec
popa
add
ja
clc
aas
pop
clc
xbegin
sub
inc
add
sub
pop
and
add
js
clc
pop
xor
add
lock
push
mov
add
in
shll
jne
add
sti
pop
cmpsl
clc
scas
in
shll
inc
add
movsb
clc
xchg
nop
call
mov
inc
clc
mov
mov
int
outsl
mov
jns
jmp
lock
push
add
aad
jecxz
adc
rcll
add
dec
or
lock
mov
add
inc
add
into
test
jae
add
clc
pop
mov
out
fadd
clc
mov
in
cs
clc
sti
nop
loope
pop
out
push
fidivrs
lods
lret
cmp
clc
imul
mov
inc
add
data16
jo
add
scas
in
xchg
inc
clc
not
cld
and
add
inc
add
push
add
xabort
clc
mov
add
add
mov
sbb
es
je
add
jns
sub
mov
add
jle
out
mov
mov
cwtl
xor
add
inc
clc
push
cs
clc
ja
inc
add
inc
add
add
add
clc
inc
clc
and
add
add
pop
dec
and
add
test
cmp
inc
add
jecxz
movswl
clc
jae
add
clc
mov
clc
jmp
add
add
pop
dec
hlt
inc
add
xor
sbb
dec
xor
add
add
clc
jae
add
clc
cmpsb
clc
in
add
adc
push
add
jbe
clc
mov
stc
fs
jne
imul
add
clc
mov
aam
sbb
jl
testl
dec
scas
aam
and
add
xor
add
add
out
mov
pop
cli
cmpsl
clc
add
add
add
add
in
adc
add
fs
push
int
das
xor
add
clc
imul
and
add
aad
add
lahf
sub
out
pop
add
add
sbb
cmp
es
shrl
mov
sbb
bound
add
clc
cmp
in
iret
jo
add
add
iret
cmpsl
clc
incl
add
enter
add
js
clc
cmp
xor
fwait
adc
add
push
pop
sti
mov
clc
dec
cmpsl
clc
call
or
popa
add
mov
clc
call
push
add
mov
add
roll
testl
or
clc
sub
aad
es
dec
das
mov
aad
push
out
nop
mov
repnz
or
clc
mov
cmp
add
add
jg
clc
sub
rcrb
xchg
jmp
pop
fmull
and
add
xlat
iret
add
mov
fwait
inc
clc
bound
add
loope
ret
test
xor
mov
repnz
lcall
adc
add
add
inc
add
arpl
add
and
add
fadd
clc
in
inc
clc
jl
arpl
add
clc
pop
test
fbstp
add
fs
clc
outsb
mov
cmp
fildl
add
clc
jns
and
clc
lret
outsl
call
clc
and
add
add
test
sub
cmpsl
clc
cmp
add
cmp
add
inc
add
cmp
clc
test
dec
xchg
lock
cli
dec
adc
add
add
cmp
add
into
push
aam
decb
clc
aaa
mov
add
loopne
xchg
test
cmp
loopne
test
push
add
xor
add
clc
adc
jp
clc
mov
clc
hlt
dec
das
mov
pop
clc
std
jo
add
jne
inc
clc
xor
add
add
mov
add
add
ljmp
add
fists
clc
iret
repnz
insb
icebp
fmuls
lods
cmpsl
clc
insl
pop
clc
push
dec
push
add
insl
jmp
or
es
adc
add
xchg
pop
jle
iret
xchg
push
clc
in
ss
fisttps
add
data16
push
add
dec
adc
add
xchg
mov
clc
ljmp
clc
cmpsl
clc
loope
dec
adc
jge
in
fistpll
dec
dec
or
sar
add
jo
add
add
or
clc
mov
dec
push
clc
scas
std
clc
jl
fistpl
mov
add
sar
and
rol
clc
cmp
or
cltd
ja
gs
leave
sbb
add
dec
sbb
je
add
sti
xor
add
fbstp
jae
add
in
xor
add
clc
outsl
push
rorl
clc
or
mov
push
add
xbegin
clc
xor
add
dec
imul
clc
adc
add
xchg
das
sub
cmp
add
or
repz
push
add
stos
loope
sarl
mov
cli
bound
add
repz
clc
pop
push
mov
add
test
movsl
clc
jb
add
mov
clc
xlat
stos
xchg
inc
add
jl
add
fstpl
dec
jno
add
xor
push
mov
add
clc
pop
jp
add
xchg
mov
clc
mov
icebp
or
push
loope
fists
jns
jns
int3
ret
clc
dec
stc
mov
movsb
clc
mov
cmp
xchg
xor
add
clc
or
dec
push
add
pop
inc
clc
sub
ja
add
jb
add
popa
add
add
mov
es
jns
clc
add
int
push
cmp
clc
dec
or
sub
clc
call
jmp
mov
clc
pusha
add
mov
lods
kmovw
loopne
and
add
loop
mov
dec
movsb
clc
mov
psraw
xchg
gs
fiadds
insl
pop
gs
mov
push
mull
std
cmp
fisubrl
add
movsl
clc
negb
iret
cmp
clc
test
add
ss
cmpsl
clc
mov
push
add
pop
adc
clc
push
add
lret
xchg
pusha
add
mov
ds
test
clc
jns
xchg
add
fisubs
clc
pop
clc
je
clc
cmp
roll
lods
mov
aad
clc
cmp
sub
jmp
shlb
inc
clc
push
add
stos
jg
mov
clc
dec
push
dec
jns
mov
jno
add
or
pop
clc
nop
push
xchg
jb
add
sbb
add
sub
add
jl
or
stc
lcall
clc
mov
into
mov
inc
add
addr16
js
clc
add
add
clc
mov
clc
gs
dec
and
add
dec
jecxz
inc
add
jo
add
add
add
clc
stos
lahf
lods
cmp
clc
pusha
add
fldl
jnp
cs
clc
fsubrl
xchg
pusha
add
mov
clc
cmp
add
xor
add
add
dec
xchg
movsl
clc
fmulp
lahf
mov
lock
clc
jae
add
xlat
inc
add
mov
sti
or
popa
add
add
cmp
sti
fsts
add
xchg
adc
add
aad
add
cmp
sbb
add
push
add
mov
clc
xor
add
clc
push
add
cmp
add
inc
clc
sarb
pop
lret
adc
add
clc
in
cld
or
add
adc
clc
mov
add
clc
mov
mov
jo
add
adc
lahf
xor
add
clc
clc
dec
in
cld
inc
add
mov
test
clc
or
mov
add
add
xor
add
mov
leave
jl
add
aaa
repz
push
add
inc
clc
jecxz
lods
pop
xchg
into
mov
fsubl
xchg
mov
cli
pop
and
popa
add
sbb
fs
rcrb
sub
sub
xor
add
pop
clc
cwtl
pop
int3
cwtl
xor
add
fldl
clc
ljmp
clc
or
add
clc
push
jmp
clc
int
and
clc
sbb
add
test
sbb
cmp
sbb
clc
int
xor
add
enter
mov
sub
gs
and
add
clc
stos
xchg
dec
daa
clc
mov
add
inc
add
xor
push
sub
xor
clc
dec
sar
into
mov
adc
add
in
inc
clc
sub
stos
test
aas
mov
imul
xbegin
in
xchg
jo
add
cmp
ret
ret
and
add
or
jo
add
pop
add
add
add
clc
or
clc
sahf
scas
aam
mov
mov
cmp
clc
pop
or
mov
clc
mov
xor
clc
sub
clc
add
add
mov
clc
pop
cmp
sbb
outsb
je
clc
sub
add
scas
inc
clc
adc
add
pop
mov
lahf
std
dec
or
add
push
repz
pop
sbb
repnz
lahf
xchg
add
add
add
out
std
add
add
ds
imull
jo
add
push
or
clc
xchg
out
cs
dec
xchg
pop
cmc
test
xbegin
clc
sahf
or
add
in
loope
xbegin
add
clc
push
cmp
inc
add
out
push
add
jp
xchg
inc
add
arpl
add
cmp
inc
clc
jecxz
jp
popa
add
add
mov
cmp
dec
pop
cmp
popa
add
cmp
add
dec
shl
clc
mov
mov
mov
jnp
ds
clc
dec
jecxz
mov
add
inc
clc
push
xor
add
xchg
into
ds
sub
bound
add
cltd
ror
clc
mov
and
add
add
ljmp
clc
dec
jl
idivb
clc
dec
or
repnz
clc
add
add
add
cmc
or
add
inc
clc
xor
add
adc
add
pushl
add
lock
clc
into
mov
push
adc
imul
jbe
pop
call
xbegin
add
cmp
xchg
sub
clc
pop
imul
add
jecxz
mov
add
push
imul
decb
clc
jp
clc
cmc
faddl
or
pop
cmp
dec
clc
in
loope
popf
cmc
jp
pop
in
adc
add
mov
add
clc
pop
rorb
add
cmc
outsb
test
sub
outsl
add
add
clc
add
add
sbb
clc
sub
push
clc
testl
pop
js
clc
dec
jno
add
clc
je
clc
jp
ds
mov
push
add
xchg
mull
add
dec
fs
cmp
add
lret
shlb
jae
add
stos
lcall
adc
je
negb
clc
data16
adc
add
xchg
push
add
xor
add
imul
ss
jnp
add
nop
and
add
xor
incl
or
out
push
daa
clc
inc
add
cltd
xchg
scas
adc
add
clc
imul
add
mov
cmc
repz
clc
mov
push
or
cmp
and
add
clc
add
push
test
test
stos
jle
pop
dec
xchg
fisubrs
test
sub
dec
repz
lahf
lea
clc
test
outsl
inc
clc
ret
mov
dec
jge
dec
mov
pusha
add
push
scas
inc
add
test
or
pop
xchg
adc
jbe
clc
pop
or
mov
dec
ja
cmp
add
ja
sar
inc
add
fisubrl
pop
jle
clc
mov
add
push
sub
jae
add
add
lock
cld
mov
add
add
add
faddl
add
sar
mov
arpl
add
push
xor
dec
mov
cld
mov
clc
mov
add
out
cmpsl
clc
out
stos
pop
jmp
sbb
and
add
push
fldcw
sbb
jne
aam
movsl
clc
sub
aam
clc
xchg
js
jmp
imul
loop
sbb
je
clc
adc
mov
clc
out
repz
xchg
das
dec
sub
test
xor
add
xchg
inc
clc
hlt
imul
add
call
ja
clc
sbb
add
and
add
fcmovne
jp
std
call
push
test
enter
add
jmp
clc
adc
add
add
lret
es
pop
jne
clc
loope
mov
sub
add
clc
arpl
add
in
leave
mov
clc
loop
scas
js
add
push
or
add
mov
out
and
add
sub
cs
add
sub
sub
cmp
or
mov
sub
clc
insl
lods
add
add
mov
clc
fwait
xchg
dec
stos
mov
jg
cmp
clc
mov
rcll
add
xabort
adc
add
clc
nop
and
add
fstl
add
iret
lods
mov
clc
xchg
dec
dec
mov
inc
clc
scas
add
add
adc
add
and
enter
dec
lret
sub
hlt
xchg
inc
add
cmp
xchg
mov
clc
adc
push
add
and
add
mov
ficoml
add
fsubrl
aam
clc
cmp
add
clc
outsb
lods
mov
adc
add
clc
in
dec
sbb
popa
add
push
clc
push
mov
add
cmp
add
xbegin
stc
lret
insb
jne
lea
jecxz
enter
pop
or
fldl
fsubr
imul
fwait
mov
mov
clc
test
insl
in
sahf
mov
repnz
jns
fbld
add
dec
popa
add
insl
fimull
lret
jno
add
and
xbegin
jbe,pn
add
mov
clc
add
add
clc
inc
add
dec
aas
dec
push
add
jl
xor
add
inc
clc
cmp
cwtl
int3
jb
add
cmp
clc
push
add
and
add
dec
lock
and
add
jbe
xlat
in
in
cmp
fstps
add
add
add
adc
add
clc
inc
add
test
adc
add
adc
add
mov
inc
add
add
add
outsb
icebp
or
in
push
add
fwait
enter
clc
pushf
jg
int
popf
or
in
ja
adc
in
mov
add
jns
clc
jmp
gs
icebp
dec
xor
add
pop
lea
nop
es
cwtl
vmovntps
jo
add
clc
push
inc
clc
icebp
clc
mov
mov
add
cwtl
mov
stos
loope
xchg
xor
add
sub
xlat
jo
add
clc
out
xor
add
pop
mov
clc
push
inc
clc
sbb
jp
mov
clc
push
test
lcall
push
clc
rolb
add
adc
add
outsb
jo
add
add
mov
cmp
mov
push
clc
and
add
clc
ds
add
add
cmp
add
adc
dec
xabort
cmp
cmp
push
movsl
clc
cs
add
mov
fucom
clc
xlat
cmp
int3
mov
cmp
clc
movsb
clc
enter
sub
and
add
add
cmpsl
clc
fwait
inc
clc
sbb
add
aam
mov
add
push
jo
add
add
mov
cmp
cmp
clc
fldcw
aas
pusha
add
or
lcall
addr16
mov
call
mov
add
roll
add
jge
clc
mov
ret
clc
xchg
or
push
add
inc
clc
mov
add
adc
add
push
pop
push
add
dec
insl
ret
mov
cmp
nop
lret
dec
jnp
dec
es
xchg
jmp
mov
mov
clc
inc
add
lock
imul
in
jnp
clc
clc
adc
add
imul
cmp
add
loop
xor
das
ss
push
cvtpi2ps
adc
add
xchg
jmp
xor
add
inc
add
mov
mov
clc
push
fcoml
fdivs
add
add
or
pop
lods
cmpsb
clc
or
or
sbb
mov
clc
data16
mov
xlat
enter
insb
or
add
sub
ret
clc
add
add
add
mov
icebp
dec
into
leave
nop
lret
fsub
clc
pop
lret
sar
stc
and
sbb
cmpsl
clc
inc
clc
add
add
dec
xchg
test
arpl
add
mov
sbb
add
outsb
sbb
add
dec
fbstp
add
cmp
mov
clc
stos
adc
add
aam
push
add
push
js
mov
mov
pop
xchg
sub
jne
clc
xchg
push
fisubl
mov
add
mov
or
push
jle
mov
clc
jecxz
je
clc
bnd
cmp
add
dec
and
stc
cmp
cmp
cmp
int
jle
clc
icebp
cmp
add
inc
clc
dec
add
add
repnz
xlat
pop
ret
clc
push
add
and
movsb
clc
adc
add
inc
add
arpl
add
loop
movsl
clc
push
jb
add
es
xor
add
insb
push
mov
pop
sub
aad
add
mov
clc
mov
jns
clc
lea
push
cmp
mov
clc
stos
fisttpll
add
pop
jle
std
jl
cli
int3
cmp
add
pop
add
add
mov
enter
clc
cmp
jns
outsl
dec
repz
int3
and
dec
rolb
lahf
in
dec
test
xor
ds
clc
lea
popa
add
mov
dec
sar
mov
add
clc
mov
pop
xchg
xchg
ss
fadd
clc
sar
push
adc
add
add
cmp
add
repz
ffree
clc
mov
sub
add
mov
js
clc
enter
insb
hlt
mov
add
add
or
dec
push
add
or
cmp
add
dec
jge
clc
sar
rclb
add
inc
add
adc
add
pop
repz
add
aam
clc
or
repz
mov
dec
cmp
add
xor
add
testb
mov
clc
cmp
or
cltd
mov
add
push
stc
mov
add
or
add
lret
lods
push
or
leave
inc
clc
movsl
clc
jp
fs
lods
mov
and
pop
jo
add
clc
xchg
jl
sar
clc
xor
add
jl
add
cmpsl
clc
jge
clc
es
pop
clc
imul
popl
add
gs
fxch
hlt
movd
test
or
test
jae
add
add
adc
xchg
dec
bound
add
aas
xlat
dec
xor
xor
add
clc
push
xchg
xor
xchg
into
ror
sbb
mov
cmp
repz
fdivrl
aad
mov
mov
clc
shlb
clc
iret
fsubs
cmp
arpl
add
pushf
push
and
add
push
add
mov
pop
std
out
xchg
cwtl
cmp
pop
nop
sar
mov
mov
lea
lret
adc
jle
clc
jb
add
add
int
push
mov
out
add
add
push
mov
clc
shl
clc
pop
clc
adc
add
sub
fisttpl
clc
ficoml
add
add
add
mov
je
mov
add
sbb
dec
or
xor
add
add
jne
clc
or
add
mov
clc
add
push
in
jne
iret
mov
rcll
add
sar
clc
jle
clc
add
add
clc
jecxz
sbb
add
mull
xchg
push
daa
clc
sahf
sbb
test
fisubrl
xor
clc
jp
add
pop
add
add
mov
xchg
mov
clc
push
cmp
out
xor
add
inc
clc
arpl
add
xor
add
idivl
clc
shrl
jnp
inc
clc
sub
ss
mov
cs
divl
add
jecxz
rcl
mov
sbb
push
out
jmp
nop
test
add
mov
addr16
push
clc
scas
adc
add
clc
cmp
clc
outsb
push
mov
add
pop
movsl
clc
dec
cltd
sbb
add
mov
sti
fsubrl
pop
sub
fmul
push
add
mov
clc
mov
cwtl
sbb
mov
gs
insb
sub
inc
clc
adc
clc
jle
and
add
add
mov
clc
ja
add
cmp
mov
add
sub
test
cld
data16
dec
out
xbegin
add
jnp
push
mov
stos
and
add
add
pop
adc
add
and
add
clc
inc
add
cltd
scas
lods
test
push
add
push
je
push
push
lret
pop
int
or
add
leave
cltd
hlt
jb
add
clc
jns
imull
clc
mov
push
push
mov
mov
push
add
pop
sar
sub
add
cwtl
mov
add
imul
add
outsb
fs
inc
add
in
sub
add
add
mov
xor
call
add
incb
add
data16
cmp
add
push
add
add
dec
dec
fldt
clc
xchg
lret
mov
mov
add
and
nop
and
pop
filds
dec
sbb
clc
jge
pop
mov
inc
clc
pop
sti
out
inc
clc
dec
test
fnstsw
clc
jbe
push
add
scas
pusha
add
int
mov
scas
inc
clc
shl
clc
js
pusha
add
push
fisttpl
push
add
sbb
add
aas
lock
out
dec
xchg
inc
add
adc
insb
xchg
cmp
clc
jne
insl
inc
add
ror
xchg
adc
add
sti
fmul
lods
cmp
sub
add
clc
pushf
jecxz
pop
mov
pop
xchg
xabort
add
lock
ljmp
add
clc
das
out
scas
dec
sbb
add
fldcw
clc
and
leave
push
xchg
jne
cmc
xchg
inc
add
shll
lock
xchg
jp
clc
jbe
clc
psubsw
ja
aas
jo
add
push
pop
fsts
add
clc
push
push
inc
clc
xabort
xchg
test
add
push
mov
xchg
mov
xchg
lahf
clc
imul
cli
sar
adc
add
add
lock
add
clc
push
xbegin
not
push
scas
and
add
add
pop
fisttpl
cmp
sub
add
xor
add
mov
clc
sar
clc
in
cmp
sbb
add
xlat
gs
dec
cmc
xor
add
xabort
add
out
jle
popf
fcmovnu
int
clc
xchg
xchg
fs
cmp
jo
add
add
sti
test
adc
and
pop
xchg
push
add
dec
loope
fnstsw
push
clc
dec
and
add
fs
imul
add
mov
add
data16
jecxz
ficompl
cs
jg
add
add
add
clc
xor
add
add
lret
in
adc
add
add
xchg
shll
inc
add
out
ja
mov
sbb
leave
clc
xchg
imul
repnz
popa
add
push
lock
xchg
cmp
adc
add
add
cld
data16
cli
insl
cmp
into
popa
add
xlat
jb
add
data16
mov
add
cmp
or
clc
fldl
mov
jp
and
add
mov
sbb
clc
sub
add
outsl
inc
add
fs
adc
clc
xchg
inc
add
je
mov
push
add
arpl
add
xlat
or
aad
mov
ret
add
ror
stos
enter
clc
xchg
cmp
sub
push
stos
xor
scas
icebp
pop
cltd
dec
xor
mov
clc
inc
add
inc
clc
aad
xor
add
pusha
add
ret
movsl
clc
mov
push
add
popa
add
add
add
add
clc
test
inc
clc
filds
pop
inc
clc
jae
add
add
insb
enter
call
mov
clc
and
jns
clc
outsb
rorb
aam
add
rol
clc
mov
add
jl
movsb
clc
imul
add
fsubr
mov
mov
das
xor
clc
hlt
mov
ret
clc
sbb
jb
add
jle
negb
clc
insb
rolb
inc
add
xor
add
and
add
mov
and
clc
rcl
push
jmp
mov
add
xor
add
clc
loop
pop
push
mov
add
xor
add
push
jle
cs
sub
xor
add
clc
push
lea
clc
iret
dec
mov
xor
add
idiv
jae
add
clc
jge
add
sbb
mov
stos
pusha
add
es
inc
clc
insl
cmp
data16
fiaddl
add
add
fucomp
mov
clc
jmp
cmp
add
clc
or
mov
stos
fldcw
ret
clc
mov
clc
in
stos
jle
clc
adc
add
mov
sub
push
add
sbb
imul
jg
clc
mov
clc
fwait
push
clc
xor
add
add
das
and
add
push
add
jno
add
or
cmp
adc
add
sub
push
clc
mov
clc
mov
pop
clc
push
xor
add
push
push
xlat
and
add
xlat
fistpl
push
dec
loopne
pop
popa
add
mov
call
clc
test
ljmp
lret
pop
insb
inc
add
adc
add
cmp
add
push
add
inc
clc
xabort
xor
inc
add
aam
sar
rorb
fs
or
cmpsb
clc
fnstsw
clc
cmp
rorb
jne
push
rep
sub
sbb
sti
pop
notl
add
push
or
push
add
inc
add
test
xchg
jp
clc
sub
clc
adc
push
add
gs
filds
clc
inc
clc
ja
pop
add
add
jno
add
clc
adc
add
push
xchg
int
add
add
movsl
clc
mov
clc
icebp
cmc
sbb
pop
clc
hlt
dec
ret
clc
stc
mov
in
shr
and
add
xor
iret
icebp
xlat
loopne
lods
jmp
add
mov
mov
clc
mov
pop
loope
or
add
gs
cld
inc
add
mov
pop
out
cmpsl
clc
mov
xchg
es
cmp
sar
clc
lahf
cli
data16
lea
mov
pusha
add
icebp
mov
bound
add
add
scas
ret
clc
jbe
xor
add
add
fld
clc
jne
decl
add
add
inc
clc
and
add
dec
dec
je
xor
dec
jl
add
jge
clc
add
add
add
sub
add
mov
sbb
add
cmpsl
clc
loope
add
pop
clc
jns
xchg
enter
add
dec
out
jno
add
std
jb
add
xor
add
cmp
clc
pop
mov
add
daa
clc
call
iret
mov
push
add
test
incl
clc
dec
cmp
and
add
add
add
add
push
pop
aad
ss
push
add
or
dec
popa
add
notl
mov
jnp
fs
dec
sahf
mov
and
add
push
inc
add
pop
dec
jo
add
fistpll
or
clc
xor
add
ss
mov
inc
add
jmp
mov
sbb
inc
clc
push
insb
ja
push
add
ja
clc
scas
pop
fisttpl
daa
clc
mov
jnp
sub
xor
sbb
clc
repz
add
clc
inc
clc
inc
clc
popa
add
sbb
loopne
ret
clc
popa
add
or
pushf
outsl
sub
jo
add
add
sar
dec
hlt
lcall
jnp
clc
repnz
iret
sub
push
inc
clc
mov
jge
and
add
decb
aaa
pop
clc
repnz
loope
into
mov
prefetchwt1
dec
icebp
mov
mov
lcall
sub
add
out
sub
clc
or
cli
mov
pop
push
add
add
clc
push
call
mov
test
jno
add
mov
clc
xchg
or
cmp
add
in
inc
add
fimuls
inc
clc
mov
or
push
adc
add
add
ret
clc
test
sbb
add
mov
lods
imul
push
mov
movsb
clc
push
clc
fwait
pop
outsl
inc
add
sub
lods
jecxz
and
add
clc
mov
int
sub
clc
hlt
xor
add
test
je
xor
add
add
adc
add
add
lods
and
add
clc
add
insb
sbb
add
clc
adc
mov
clc
mov
add
add
add
xchg
dec
cmp
add
sahf
xchg
cwtl
cmpsb
clc
daa
clc
leave
testl
iret
inc
add
cwtl
or
int3
cmp
inc
clc
fnstcw
rolb
add
add
jge
add
mov
notb
add
inc
clc
cmp
mov
clc
jecxz
jmp
push
in
pop
rcl
jb
add
ljmp
in
xor
add
add
add
push
add
pop
ss
cmp
sbb
add
cltd
and
add
in
loope
push
mov
jnp
outsb
mov
mov
mov
cmp
jo
add
cmp
ljmp
sbb
clc
pop
mov
dec
dec
stos
test
add
std
jp
test
add
loop
push
clc
inc
clc
xabort
repz
mov
stos
fmuls
pop
lret
clc
loopne
pop
xchg
add
fisubs
add
clc
aam
in
iret
or
add
add
shrl
push
add
xabort
clc
repnz
hlt
xchg
inc
add
adc
add
mov
mov
mov
jnp
xchg
cld
xor
or
pop
es
pop
lcall
add
pusha
add
int
jne
add
add
add
sbb
jno
add
lods
hlt
pop
mov
clc
inc
add
loopne
push
add
add
xor
add
clc
ret
clc
sbb
fs
out
test
xor
add
add
jmp
clc
sbb
clc
sub
inc
clc
push
xchg
jo
add
loope,pt
lahf
test
sub
xor
clc
in
dec
vmulps
mov
push
push
clc
insl
inc
add
repz
inc
add
int3
pop
imul
sub
nop
adc
fs
cwtl
cld
sub
popa
add
inc
clc
mov
mov
mov
ret
rcr
xchg
jb
add
adc
add
jl
clc
scas
es
sub
aas
jno
add
mov
push
jne
jmp
adc
add
jle
pop
mov
sub
lods
cwtl
push
add
mov
cmp
clc
pop
out
test
add
sub
insb
or
test
xchg
mov
ljmp
cmp
add
clc
push
add
lahf
lock
aad
clc
movsb
clc
mov
mov
and
jae
add
lahf
or
mov
adc
push
mov
scas
or
add
fmull
clc
cmp
mov
jmp
cmp
clc
push
push
in
mov
mov
clc
mov
sbb
mov
fsubrp
add
add
add
add
add
add
int
clc
sub
add
movd
mov
out
cmp
sar
add
xchg
xchg
in
test
test
rorl
jecxz
repz
test
jnp
clc
cmc
arpl
add
add
clc
outsb
cs
loope
ss
jmp
add
clc
insb
xchg
mov
xchg
out
cmp
inc
clc
cmp
add
xor
and
rcr
push
jnp
add
cmc
push
add
mov
out
test
in
and
add
scas
cmp
mov
add
add
rorl
sub
clc
and
testl
clc
fstpl
mov
int3
cmp
mov
clc
xchg
cmp
popf
out
sbb
cwtl
mov
add
test
test
add
add
inc
clc
adc
add
mov
xchg
in
test
fnop
mov
clc
add
add
jbe
add
in
ds
es
and
clc
cltd
xor
add
in
and
add
sarb
lcall
imul
push
add
xbegin
js
leave
and
flds
cmp
push
sub
clc
mov
lret
ret
clc
push
add
add
out
mov
clc
or
or
cwtl
pop
adc
add
adc
fcmovb
clc
and
add
out
mov
cmpsb
clc
push
add
clc
mov
flds
add
imul
lret
setge
enter
add
xchg
and
dec
push
add
inc
add
aad
clc
scas
cltd
jo
add
imul
add
movsb
clc
adc
add
add
insb
insl
push
inc
clc
clc
jmp
and
add
out
push
mov
leave
mov
cmp
add
hlt
fwait
clc
jmp
clc
fldlg2
test
movsl
clc
lods
out
sub
jns
add
xabort
sub
jg
clc
repz
pop
loope
imul
jo
add
xchg
mov
add
mov
jle
clc
push
arpl
add
add
inc
clc
mov
add
xchg
das
dec
lods
ds
int
mov
jp
mov
add
add
imul
add
popa
add
lahf
clc
fs
js
push
clc
out
ret
clc
pushf
gs
mov
fbld
add
pop
xor
add
add
add
pushf
sahf
rcl
outsl
xchg
insb
pop
imulb
and
stc
int
clc
fistps
clc
push
add
and
add
lret
loope
xor
dec
mov
push
sarb
add
add
jno
add
cmp
inc
add
lcall
add
xchg
push
add
inc
clc
dec
or
pop
add
add
dec
jp
clc
dec
leave
lods
sar
clc
xor
add
adc
popf
inc
add
mov
lret
decb
add
cmp
inc
add
pop
ret
clc
add
push
add
nop
in
xlat
cld
push
add
loopne
movsb
clc
cmp
sub
jnp
mov
jmp
or
mov
add
add
dec
stos
adc
add
stc
es
xchg
pusha
add
add
lahf
cmp
cmpsl
clc
dec
ficomps
or
jg
clc
int3
dec
daa
clc
inc
clc
je
clc
xabort
into
cmp
add
jb
add
movsb
clc
jp
fucomp
cmpsb
clc
dec
jmp
inc
clc
jae
add
je
cmp
mov
xor
add
add
clc
popf
cmpsb
clc
jle
sub
push
add
dec
out
inc
clc
outsl
rorl
add
mov
xchg
push
add
push
call
clc
scas
jns
clc
loope
insb
xchg
adc
clc
pop
movsl
clc
mov
add
hlt
push
add
loope
lods
sub
add
stc
sbb
adc
add
add
shlb
add
mov
mov
test
jg
clc
pop
in
pop
xor
clc
mov
add
rorl
add
sbb
add
into
clc
fistps
mov
clc
mov
pop
adc
add
clc
mov
jns
mov
dec
jmp
add
sub
clc
ljmp
in
lret
xchg
xor
add
xbegin
mov
adc
clc
es
add
add
fisubrl
sbb
fwait
into
push
popf
jp
push
inc
clc
lret
pusha
add
xor
add
fisttpl
dec
pop
incb
fcomps
add
jle
clc
adc
add
clc
xor
add
mov
movsl
clc
xchg
mov
cld
xchg
jmp
scas
and
ljmp
add
xchg
sbb
inc
add
lret
sub
and
add
fisttps
lods
mov
add
mov
vorps
clc
xlat
jae
add
clc
pop
jle
hlt
mov
add
push
add
add
popa
add
lret
add
push
add
shlb
mov
es
cmpsb
clc
pop
pop
clc
test
push
add
fwait
dec
add
add
clc
cwtl
or
sbb
add
jno
add
or
clc
inc
clc
mov
add
xlat
dec
addr16
pop
fs
jp
mov
clc
jns
clc
add
push
gs
stos
inc
clc
cli
pop
mov
add
sub
xchg
pop
in
mov
fisubs
add
popf
push
add
inc
add
push
clc
es
loopne
sbb
clc
jp
sbb
add
sahf
xchg
jb
add
fistl
add
fiadds
add
add
test
push
jne
push
pop
pop
outsl
jmp
add
add
add
outsb
pop
xchg
push
ret
clc
mov
and
adc
add
clc
cmp
clc
jae
add
mov
mov
sbb
lcall
push
clc
popa
add
loopne
movsb
clc
push
fs
aaa
mov
xor
clc
mov
clc
test
or
add
jmp
lods
mov
add
clc
sbb
adc
mov
clc
stos
xchg
cld
mov
pop
cmp
incl
clc
or
xchg
inc
add
or
cmpsl
clc
push
clc
push
add
mov
mov
rcrl
push
add
sbb
add
add
add
test
mov
loop
cmpsl
clc
xor
adc
xor
clc
gs
fistpll
clc
fadd
clc
fs
pop
jns
add
add
sbb
mov
mov
iret
pushf
pop
clc
jmp
test
rorl
test
add
add
dec
sub
clc
mov
or
pop
and
clc
imul
idivb
clc
sahf
and
add
clc
mov
sub
pop
mov
mov
clc
or
clc
sub
fs
push
add
clc
jbe
pop
aam
or
add
xbegin
setg
clc
xchg
push
add
cld
iret
xchg
ljmp
mov
and
mov
push
cmp
jae
add
add
inc
clc
vshufps
lcall
clc
cmp
add
xchg
or
jecxz
pop
mov
clc
cmc
out
mov
clc
xor
add
clc
cmc
enter
mov
inc
clc
cmp
loop
pop
cld
xor
add
dec
fsubrl
jl
aas
pop
and
push
add
xor
add
sti
push
dec
int
clc
or
jae
add
push
clc
daa
clc
fisttps
push
sti
push
xchg
pop
fiaddl
or
add
cld
pop
pop
add
add
fidivrs
add
arpl
add
lea
clc
jle
mov
add
clc
sub
mov
clc
arpl
add
cmp
sti
xor
add
popa
add
popf
std
ret
loopne
into
cmp
add
add
stos
push
cmpsl
clc
movsl
clc
jmp
add
push
popa
add
scas
gs
sub
xchg
add
add
xchg
sub
clc
insl
sahf
ret
clc
stos
scas
rcr
sub
clc
shrl
sub
repnz
sbb
clc
and
add
hlt
cmp
clc
pop
dec
mov
mov
mov
gs
jbe
out
mov
cmp
mov
dec
ljmp
data16
adc
add
clc
sbb
iret
pop
mov
sub
cmp
add
push
add
test
sub
clc
push
cmp
push
clc
xchg
out
push
out
repz
es
ljmp
clc
cmc
aas
xabort
mov
or
lods
dec
mov
clc
cmc
scas
ficompl
cmc
fadds
xchg
mov
jae
add
repz
clc
adc
add
push
add
jecxz
sahf
jbe
mov
cmp
clc
out
ret
clc
mov
jae
add
bound
add
cmc
cltd
mov
xchg
jno
add
add
mov
push
add
cmp
add
clc
jns
clc
es
cmp
mov
clc
pusha
add
vminps
ds
clc
stc
hlt
cmp
add
call
bound
add
sahf
push
add
nop
popf
pusha
add
cmp
repz
add
clc
mov
clc
or
sub
clc
sbb
add
inc
add
pop
clc
aas
xchg
clc
hlt
mov
clc
cmp
mov
pop
cmp
clc
leave
cmp
loopne
popa
add
adc
xchg
popa
add
mov
add
adc
add
clc
sbb
clc
lcall
add
jbe
clc
push
test
jno
add
jle
push
and
add
adc
add
clc
cs
mov
add
jge
aad
mov
dec
jle
dec
aam
clc
jae
add
inc
clc
push
add
and
add
add
mov
vmovlps
add
cmp
pop
arpl
add
clc
dec
pop
iret
fs
fimuls
pop
test
fsubl
ret
clc
jae
add
mov
inc
clc
push
push
add
sub
adc
add
loopne
dec
sbb
clc
cmpsl
clc
popa
add
icebp
pop
lods
jp
adc
add
in
vzeroupper
int
rcll
add
add
add
test
clc
test
scas
idivl
jl
cmp
clc
mov
jg
out
xlat
sbb
clc
push
add
inc
clc
pop
or
xchg
pop
jmp
cmp
clc
test
inc
add
mov
decb
repnz
add
mov
lahf
mov
add
rorl
mov
pop
fs
loopne
jp
clc
xchg
adc
fildl
imul
add
push
clc
push
add
fsubrl
dec
jb
add
cmp
xchg
clc
ja
cltd
sub
jae
add
add
scas
adc
shll
push
add
mov
add
aam
clc
enter
ljmp
mov
adc
add
add
divb
add
push
cmp
clc
jbe
mov
clc
add
add
mov
lret
jo
add
clc
sarl
add
xchg
inc
clc
or
inc
clc
ljmp
cmpsb
clc
ret
and
add
dec
jecxz
sldt
add
add
fdivr
xbegin
add
clc
xor
add
add
add
mov
push
call
sbb
test
pusha
add
mov
lahf
loop
push
cmp
sub
clc
daa
clc
sar
adc
add
and
jp
mov
bnd
cs
clc
enter
arpl
add
out
sub
fs
insl
js
fidivs
add
add
clc
xor
adc
add
mov
ss
clc
cmp
add
add
pop
ret
clc
rcl
and
add
push
add
in
pop
pop
stos
lret
mov
mov
add
cltd
in
adc
movsl
clc
mov
enter
add
add
lods
out
dec
adc
add
cli
fisubrs
add
in
data16
mov
clc
add
add
loope
mov
mov
add
out
jbe
clc
test
aam
cmp
clc
mov
adc
add
fldenv
mov
cmp
movsb
clc
mov
pop
clc
cmp
dec
fsubl
lcall
clc
add
add
clc
or
mov
add
pop
imul
pushf
cmp
add
add
je
arpl
add
clc
xchg
mov
add
frstor
add
mov
clc
xchg
sub
pop
sbb
scas
rcll
clc
ss
adc
push
add
xchg
pop
outsl
inc
add
cmp
push
add
pop
sbb
xchg
push
add
mov
mov
sti
fcomps
shrl
mov
push
add
jmp
ja
mov
inc
clc
add
add
clc
xchg
or
add
push
add
xchg
ret
clc
adc
add
insb
mov
add
xchg
pop
jmp
cli
adc
add
add
clc
pop
mov
cmpsl
clc
clc
adc
add
add
insb
sbb
push
add
imull
sbb
clc
pop
jo
add
stos
push
clc
mov
pop
add
add
daa
clc
mov
mov
xor
add
mov
or
clc
mov
pop
sti
rolb
add
add
add
mov
jo
add
in
cmp
and
add
sub
movsb
clc
sub
mov
cmc
add
add
sbb
add
mov
add
push
push
add
sbb
push
push
addr16
push
clc
cmpsb
clc
iret
jle
inc
clc
cmp
outsb
lret
cmp
clc
imul
lods
sar
xabort
or
pop
mov
stc
gs
cld
cmp
and
add
pop
std
sbb
fs
js
pushf
leave
and
add
sub
xor
add
xchg
mov
jmp
add
clc
jo
add
clc
push
lret
loopne
push
arpl
add
jp
add
pusha
add
mov
jl
mov
add
es
push
out
repnz
insb
xor
add
or
aas
mov
add
lahf
imul
inc
clc
jb
add
and
add
movsb
clc
mov
mov
lret
mov
clc
push
dec
jl
xchg
outsb
stc
lods
sub
clc
push
add
lods
xchg
cld
in
loope
push
add
add
add
pop
jge
cwtl
dec
dec
cmp
clc
or
cwtl
leave
repnz
clc
pop
out
je
das
bound
add
inc
add
xchg
xchg
and
clc
push
jge
clc
mov
sub
clc
pop
dec
movsl
clc
mov
xor
clc
inc
add
ljmp
pusha
add
mov
clc
ret
clc
fs
std
std
xor
clc
sbb
jg
cmp
in
push
fildl
ret
outsb
lock
or
add
inc
clc
shl
clc
aad
cmp
in
adc
sub
pop
mov
add
dec
nop
in
push
pop
push
add
in
sbb
mov
out
sbb
lock
pop
pop
xor
add
add
mov
mov
mov
add
icebp
cmp
add
data16
and
bound
add
in
outsb
pop
sti
jne
je
aam
clc
adc
add
hlt
into
leave
jnp
and
add
add
and
add
ljmp
enter
clc
hlt
insl
dec
xabort
clc
mov
insl
jmp
clc
xor
add
mov
mov
jnp
clc
bound
add
int3
mov
lret
push
mov
pop
popa
add
cmp
sar
ret
mov
sub
clc
mov
add
mov
cwtl
sbb
add
sahf
xchg
sbb
clc
fwait
mov
pop
lock
sbb
add
sbb
dec
fstpl
sti
push
ds
in
popa
add
sti
fs
daa
clc
cmp
mov
add
jl
add
enter
add
add
mov
imul
clc
vmulps
clc
jmp
add
std
cli
popf
int
clc
and
add
cmp
add
cmp
loope
insb
pop
pop
je
clc
xabort
clc
push
add
cmp
xchg
sbb
clc
js
add
mov
add
clc
stos
je
out
cmp
fwait
pop
or
add
in
jecxz
or
mov
js
clc
jecxz
or
inc
add
and
add
add
xor
and
add
add
or
cld
pop
or
add
xchg
mov
pop
cmpsb
clc
and
add
push
xor
add
sar
jno
add
sbb
outsb
dec
push
gs
jp
cmp
xchg
mov
cmc
pop
clc
dec
push
clc
jo
add
clc
sbb
pop
cmp
add
inc
add
sbb
idivl
aad
pop
movsb
clc
pop
clc
push
ljmp
jns
sub
add
mov
outsb
jno
add
clc
test
mov
pusha
add
mov
add
mov
fs
scas
jl
add
xabort
clc
mov
clc
mov
or
clc
ret
adc
add
cli
push
jle
clc
ds
jbe
push
push
add
sahf
mov
es
cmc
and
mov
repz
clc
push
inc
add
mov
jle
imul
pop
popa
add
adc
add
xchg
popa
add
ss
clc
ja
clc
lods
lret
xor
add
sbb
nop
sbb
clc
ljmp
in
jg
xor
add
inc
add
pop
dec
sbb
outsl
fadds
clc
jmp
clc
add
dec
dec
ret
clc
pop
iret
pop
mov
cmp
add
push
add
jo
add
and
add
clc
or
cmpsb
clc
insb
push
add
stos
mov
ds
clc
adc
add
cmp
clc
sahf
inc
add
loope
lahf
pop
gs
mov
add
mov
add
mov
clc
test
add
sbb
add
clc
dec
push
add
xchg
fs
xor
add
clc
mov
add
mov
stos
repnz
add
imul
mov
xchg
insb
or
pushf
dec
inc
add
inc
clc
lret
pop
mov
out
adc
add
add
sahf
sub
jge
add
cs
and
adc
add
insb
mov
or
add
push
adc
add
mov
clc
ficomps
clc
or
cmp
add
cld
or
fiadds
add
mov
jno
add
and
add
add
inc
clc
ljmp
clc
or
clc
or
and
pushf
xchg
mov
add
add
sar
popa
add
gs
pop
bswap
mov
in
pop
clc
sub
bound
add
mov
clc
insl
ja
mov
cs
add
popa
add
fwait
dec
stc
ja
cmp
clc
fwait
aad
xor
add
push
clc
sbb
mov
inc
clc
mov
push
cmp
mov
clc
pop
int
cmp
sbb
and
add
clc
inc
add
int
clc
mov
insl
xchg
scas
and
add
cmp
xor
clc
test
mov
push
mov
clc
aas
cmpsl
clc
dec
adc
add
clc
jb
add
clc
stos
dec
pop
clc
stc
or
clc
insb
xchg
push
lods
popf
dec
adc
add
jmp
and
xor
add
clc
test
jo
add
cmp
jne
clc
fiaddl
inc
add
mov
call
add
loopne
jp
add
clc
add
mov
out
mov
clc
jns
xor
add
add
int3
je
clc
cli
lods
lods
jp
sbb
imul
enter
jg
add
cmp
hlt
inc
clc
popf
pushf
aam
dec
cmp
add
fiaddl
add
push
cmp
insb
adc
add
add
sbb
mov
xchg
xchg
ret
int
sbb
test
mov
add
add
cltd
inc
clc
adc
je
icebp
into
ret
clc
cmp
or
add
insb
dec
lea
mov
xchg
push
filds
add
arpl
add
cltd
adc
add
outsb
adc
add
push
add
push
mov
clc
mov
cwtl
ja
mov
xlat
lret
add
add
add
add
fwait
mov
and
add
mov
clc
cmp
adc
clc
lock
mov
clc
xchg
adc
add
sbb
jne
ljmp
je
inc
add
or
cmp
lcall
pop
nop
sar
cmc
and
add
das
push
push
add
xlat
xor
add
add
mov
out
mov
xor
add
add
lret
cmp
cli
scas
sub
add
clc
arpl
add
jnp
cmpsl
clc
movsl
clc
push
add
lods
cltd
sub
sbb
rorb
clc
sub
pop
repnz
clc
dec
xor
add
mov
clc
daa
clc
clc
out
jo
add
clc
repnz
mov
clc
pop
clc
cmp
data16
lock
add
sub
clc
sti
fs
sub
or
popf
lret
mov
add
pop
fimuls
add
fsubl
sbb
add
add
push
clc
aad
xbegin
sbb
add
add
daa
clc
push
add
fists
add
pop
out
icebp
dec
cmpsl
clc
mov
push
pushf
sbb
pop
mull
out
xor
add
add
loope
lcall
add
add
lea
sub
test
gs
fmull
clc
adc
add
and
add
add
push
add
or
clc
js
nop
dec
jbe
add
xchg
or
lea
clc
movsl
clc
and
call
xor
add
clc
jl
pop
in
ret
fs
in
movsb
clc
mov
sbb
out
add
add
hlt
add
add
add
add
in
leave
mov
and
add
dec
pop
cmp
decb
xor
add
jp
clc
insb
mov
inc
clc
aaa
mov
clc
xlat
enter
fnstenv
add
mov
add
dec
push
add
jecxz
ret
movsl
clc
dec
add
sbb
add
cmp
dec
out
mov
pop
jo
add
fmuls
add
mov
push
xchg
push
clc
sbb
cmp
scas
rorb
push
xor
outsl
imul
add
add
clc
ss
jnp
lods
add
add
imul
fistps
cmp
xchg
jle
sahf
aam
inc
clc
stos
test
adc
clc
xchg
outsl
outsb
fldl
loope
pop
pop
clc
push
testl
cmp
add
dec
dec
push
std
inc
add
mov
add
add
ja
push
add
cmp
clc
pushf
mov
clc
xchg
add
add
add
pop
lret
mov
xchg
dec
std
pop
clc
daa
clc
lea
mov
clc
sbb
clc
add
add
in
jns
shrl
add
jae
add
pushf
ja
sar
scas
jge
daa
clc
mov
add
xabort
aaa
mov
lret
push
arpl
add
lea
iret
leave
sub
cld
call
clc
pusha
add
sar
push
int
xor
add
clc
hlt
adc
clc
test
int
xchg
ss
add
sub
clc
dec
add
stos
inc
add
insb
cmp
js
add
push
sti
jle
sar
clc
jl
leave
lcall
push
add
sbb
in
cmp
clc
mov
repnz
add
ds
lcall
scas
sbb
cmc
fucomp
push
lret
clc
adc
mov
out
iret
stc
cmp
loope
fnstsw
clc
and
pcmpgtw
imul
adc
add
add
clc
push
out
push
clc
dec
test
and
insb
mov
dec
push
aas
xor
add
clc
jl
add
push
xchg
pop
nop
std
js
clc
inc
clc
je
cmp
ret
pushf
mov
xchg
mov
jo
add
add
jmp
sar
clc
or
dec
inc
add
scas
sub
add
fwait
repz
add
add
inc
add
xor
add
jnp
into
test
jns
lods
and
add
clc
dec
cmp
add
add
add
xchg
xchg
add
add
daa
clc
loopne
aad
out
test
repnz
outsl
aaa
icebp
shrb
and
add
es
sti
cmpsb
clc
jbe
outsl
jae
add
dec
fmull
ljmp
clc
lret
fadds
add
add
fstl
jge
pop
jnp
jmp
cli
into
enter
clc
out
inc
clc
mov
xchg
int
xchg
xor
int3
sbb
clc
sar
pusha
add
mov
lret
clc
jb
add
repnz
clc
jno
add
inc
add
cld
xchg
mov
dec
clc
cmc
push
jmp
add
clc
clc
mov
cmp
test
cmp
clc
add
add
rorb
dec
mov
clc
into
cmp
sub
jno
add
stc
mov
adc
clc
push
loopne
pop
push
clc
or
push
add
fbstp
add
cmp
std
push
add
and
add
lret
je
jae
add
clc
add
add
add
bound
add
clc
xchg
sub
mov
add
addr16
sub
clc
ret
clc
in
dec
sub
push
or
add
cmc
xbegin
xchg
dec
inc
add
xchg
sbb
mov
data16
in
loop
jle
xchg
out
ds
clc
inc
clc
daa
clc
rdpmc
add
xchg
pushf
iret
push
and
add
sbb
xabort
add
pusha
add
jbe
imul
fstps
push
bound
add
add
add
add
clc
sub
sub
add
dec
push
lods
or
ja
add
push
sbb
clc
mov
add
fisubrs
lods
cs
jno
add
pop
clc
sub
add
adc
pop
repz
cmp
outsl
mov
sar
push
add
inc
add
imul
test
xchg
cmp
clc
xchg
xlat
push
and
add
xor
add
test
xchg
or
add
into
jno
add
mov
clc
jno
add
add
mov
out
pop
push
dec
cmp
clc
cmc
fstpt
jg
adc
add
add
cmp
je
add
fisttpl
add
pop
pop
sub
ret
lock
mov
pop
movsb
clc
fcoms
mov
aam
jae
add
jle
clc
adc
add
pushf
clc
fs
jo
add
add
adc
add
mov
test
fldl
add
add
add
add
pop
mov
cmp
clc
gs
adc
add
cmp
add
or
lods
inc
clc
inc
add
add
inc
clc
pushf
or
idivb
pusha
add
jno
add
test
mov
mov
xchg
mov
inc
add
adc
add
fnop
scas
aad
cld
add
add
bound
add
add
fldcw
sahf
sahf
jmp
clc
ljmp
clc
aam
jno
add
iret
mov
xchg
xchg
jae
add
add
or
lods
inc
add
sub
add
push
add
nop
mov
mov
inc
clc
inc
add
and
sar
push
add
fsubl
daa
clc
mov
mov
add
fists
mov
clc
xabort
xchg
mov
xchg
cmp
add
sbb
popf
jb
add
add
add
lods
rsm
pop
or
clc
pop
aad
jnp
push
jp
add
push
add
daa
clc
push
add
adc
inc
clc
lahf
mov
clc
stc
jge
clc
fsubs
clc
imul
cmc
imul
xchg
clc
xchg
cli
jns
pop
cmp
xor
add
add
sbb
add
pushf
jb
add
push
loopne
inc
add
insb
or
cmp
add
out
dec
sub
and
mov
and
add
ja
add
and
add
cmp
mov
push
loopne
and
add
fsubs
add
jae
add
sub
clc
xchg
cmp
add
add
test
cltd
test
mov
xadd
adc
add
mov
add
sbb
clc
ja
mov
test
xor
clc
mov
push
add
mov
or
add
add
shlb
sar
mov
clc
inc
clc
movsb
clc
out
mov
xbegin
dec
xor
add
clc
sbb
sar
add
call
push
mov
xchg
jg
ss
push
add
clc
test
sar
mov
lret
jmp
clc
jo
add
sar
add
pop
inc
add
lods
push
clc
add
add
add
in
nop
adc
add
push
add
and
add
clc
inc
clc
ret
paddusw
add
outsl
stc
adc
clc
mov
cmp
jbe
fldl2e
jne
clc
cmp
ret
fwait
adc
add
clc
imul
sbb
and
add
cld
jae
add
add
jle
add
loop
add
add
add
ficoms
clc
data16
mov
loope
ljmp
inc
clc
jo
add
xor
add
add
loope
pushf
xor
add
insl
xchg
mov
clc
xchg
rcl
xchg
mov
pop
jae
add
add
add
inc
clc
jl
nop
xlat
out
dec
outsb
test
add
insl
das
imul
movsl
clc
gs
imul
pusha
add
fistpll
fisubrs
xchg
dec
cmp
test
pinsrw
jo
add
pop
jo
add
clc
cmp
sti
mov
cwtl
push
loop
xchg
mov
insl
push
xor
add
hlt
or
fstl
add
jbe
clc
outsb
add
mov
mov
add
ret
clc
movsb
clc
clc
stc
push
add
insl
inc
clc
ss
push
clc
rcrb
call
test
cltd
cli
add
add
add
stos
pop
mov
adc
add
clc
scas
scas
xchg
fs
cmp
fistpl
xabort
and
add
cmp
clc
sar
push
add
xor
clc
loope
sbb
scas
inc
add
int
scas
fstpl
add
add
sbb
call
cmp
add
add
clc
jnp
clc
push
clc
cmp
add
jecxz
mov
js
mov
add
movsb
clc
xchg
divb
sub
clc
or
mov
clc
aas
imull
clc
ret
aam
add
add
clc
add
adc
add
cs
mov
dec
daa
clc
in
int3
dec
push
cli
mov
pop
mov
clc
mov
clc
es
add
add
push
add
or
mulb
add
or
add
mov
clc
aaa
mov
clc
imul
jnp
movntq
out
das
xlat
cld
sbb
push
add
sub
inc
clc
lcall
pop
push
das
movsb
clc
pop
stos
add
stos
scas
fdivl
add
daa
clc
sarl
clc
repz
push
add
dec
sub
add
cmpsb
clc
int
dec
xchg
sar
clc
or
add
add
pop
clc
notl
mov
cli
mov
mov
jne
mov
mov
call
cmc
xor
add
add
enter
clc
inc
add
sar
call
push
insl
or
and
cmp
jne
sarl
dec
push
dec
xor
add
cmp
clc
cmp
outsb
rclb
hlt
push
jno
add
and
sar
add
mov
add
jo
add
push
push
add
inc
clc
dec
aas
jns
mov
adc
add
inc
add
cmp
add
push
push
outsb
inc
clc
push
add
aad
and
add
gs
mov
nop
push
add
pop
ret
clc
clc
pusha
add
jns
lahf
dec
int
dec
or
sarb
add
cmp
rcll
add
mov
add
mov
or
or
testb
sti
inc
clc
adc
add
mov
or
clc
and
add
clc
mov
lahf
sub
add
xor
add
add
dec
bound
add
sahf
cmp
mov
xor
add
imul
add
and
add
or
mov
xchg
or
into
adc
add
fisubs
add
push
xchg
iret
repnz
or
test
push
cmp
clc
test
fdivrp
push
add
bound
add
add
outsb
fisttps
dec
clc
inc
add
lea
cmp
or
mov
push
pop
xchg
pop
leave
addr16
in
mov
clc
jmp
xabort
shl
mov
sbb
push
cwtl
pop
clc
rolb
sbb
jmp
xchg
stos
outsl
in
sti
jge
push
cmp
add
jle
clc
cwtl
aam
pop
jp
bound
add
add
test
pop
add
add
sbb
sub
add
stos
es
mov
add
mov
lcall
fsubp
clc
jl
clc
xlat
rcrl
aas
ljmp
add
lahf
dec
shlb
add
clc
lods
and
add
and
imul
clc
scas
out
stc
mov
xchg
xchg
idivl
clc
sub
pop
popf
clc
cmp
jae
add
inc
add
and
add
add
cmc
pop
clc
scas
popa
add
test
and
add
add
adc
add
clc
loopne
jge
pop
out
aad
sbb
and
clc
das
jge
add
out
mov
mov
loop
inc
clc
dec
push
dec
push
add
cmp
scas
repz
mov
clc
adc
add
stc
pushf
add
clc
xor
add
movq
clc
jecxz
popf
mul
clc
loop
pop
and
add
pop
mov
sarl
mov
xabort
clc
xor
jb
add
add
jnp
mov
jnp
add
popa
add
inc
clc
outsb
add
add
add
clc
aaa
dec
aad
out
rol
clc
xchg
call
shr
push
mov
add
ss
adc
add
aas
xor
add
mov
or
add
lods
pusha
add
fisttps
pop
scas
fidivs
add
add
dec
xor
add
add
push
fstl
movntps
xchg
mov
clc
cmp
add
out
cmp
fcomps
push
add
hlt
sarl
xchg
pushf
push
and
add
pop
mov
xor
add
cmp
xor
add
clc
jnp
clc
adc
add
shrl
aaa
lret
jecxz
add
add
add
clc
xor
add
jge
clc
pmaxub
adc
add
jne
imul
mov
clc
cmp
dec
or
popf
loope
push
sar
jb
add
clc
cmpsl
clc
sbb
xchg
jge
mov
add
mov
add
sub
fisubs
mov
pop
inc
add
aaa
and
add
pop
adc
clc
mov
mov
and
fwait
sti
pop
pop
clc
jne
ficompl
data16
ljmp
stos
lret
sub
aas
jno
add
pop
out
push
icebp
das
pop
sbb
clc
xlat
shlb
clc
out
popa
add
sbb
dec
mov
mov
in
dec
rclb
add
aad
mov
ljmp
add
add
jl
clc
es
mov
pop
jns
add
jmp
cmp
clc
cli
and
add
jae
add
xor
add
sahf
sub
sbb
add
sub
sbb
add
mov
cmp
leave
mov
clc
push
clc
cmp
add
mov
in
ds
add
fwait
enter
lea
push
aam
das
cmp
mov
add
lret
add
ds
and
pop
nop
sub
pop
clc
pop
shll
add
mov
jle
add
pop
or
add
cmp
add
mov
clc
cld
jg
clc
pop
mov
fwait
jl
add
scas
jmp
clc
arpl
add
push
pop
mov
jae
add
add
add
xchg
jne
push
clc
std
push
negl
or
lods
xabort
lcall
xbegin
add
add
rorb
iret
mov
int
int
sahf
rorb
mov
xchg
js
in
jp
test
jg
int3
mov
add
or
add
sub
xchg
pusha
add
mov
add
jae
add
clc
repnz
add
mov
clc
scas
popa
add
adc
popa
add
jb
add
cli
cs
push
lods
xbegin
in
je
pop
in
aam
add
inc
add
vmulps
clc
clc
hlt
push
push
mov
inc
clc
pop
clc
and
add
add
imul
add
loopne
xor
aad
and
gs
fwait
lods
pop
into
jnp
inc
clc
xchg
imul
add
add
adc
add
mov
add
lods
aad
mov
push
add
adc
add
loope
push
add
xor
add
sub
clc
inc
clc
dec
dec
and
add
jp
in
cmpsl
clc
cmp
dec
mov
out
sbb
inc
add
xor
add
inc
clc
test
adc
pop
mov
test
test
ss
clc
jg
add
xchg
sub
test
mov
sub
push
out
clc
movsb
clc
popf
mov
add
cmpsl
clc
adc
mov
or
jmp
mov
xbegin
sar
nop
xor
add
xchg
gs
aad
sub
xlat
lods
mov
scas
clc
out
and
add
cmp
shlb
add
enter
negl
enter
mov
push
add
sbb
xor
cltd
cmp
clc
lods
sbb
clc
xchg
shll
add
jl
dec
ss
clc
or
add
mov
sub
add
and
add
or
clc
in
xabort
clc
adc
add
xabort
clc
hlt
cmc
and
add
addr16
aas
xabort
clc
and
add
clc
leave
lods
mov
mov
add
add
add
sbb
add
add
das
cmp
clc
push
clc
das
loope
push
mov
sarb
xbegin
cmp
add
add
mov
cvtps2pi
add
mov
repnz
xchg
mov
add
adc
add
add
add
add
add
mov
xlat
inc
add
or
clc
push
add
and
add
clc
aad
add
xor
sbb
popa
add
sub
test
incl
out
jne
clc
add
add
add
clc
mov
jbe
xor
add
sub
add
push
jno
add
nop
mov
clc
aam
and
lahf
jl
stos
lock
pop
add
mov
xchg
lods
repz
clc
xor
add
clc
push
add
pop
pusha
add
sbb
in
fbld
call
add
sub
outsb
test
int
cli
mov
scas
xchg
jp
sarb
lock
add
add
lea
jae
add
pop
sar
add
mov
xchg
lods
pop
mov
stos
lret
or
loope
cmp
clc
dec
stos
pushf
mov
movsl
clc
cmp
add
add
add
pop
test
aas
out
popa
add
in
pop
jne
lahf
jmp
xchg
incb
clc
jb
add
clc
or
push
sub
clc
pop
lret
pop
and
add
jbe
xor
add
cmp
test
add
add
add
mov
add
jns
or
sub
cld
dec
cmpsb
clc
jmp
aas
mov
das
imulb
or
add
add
clc
cmp
hlt
add
add
mov
jbe
sub
adc
adc
mov
cmp
mov
repz
pop
sub
ss
mov
fcoml
add
lock
out
or
add
mov
xor
add
add
mov
pushf
fiadds
add
int
add
rclb
add
scas
loope
cmp
stos
mov
clc
push
imull
aad
xor
test
outsb
pushl
leave
xchg
mov
nop
adc
enter
enter
add
clc
lret
pop
mov
clc
das
push
hlt
mov
push
add
or
cmp
dec
add
add
add
fisubrl
sub
clc
clc
iret
sar
mov
push
xor
add
ljmp
clc
je
loop
pop
mov
clc
push
add
loope
or
add
rcrb
loopne
xchg
mov
clc
or
push
sar
push
adc
add
clc
leave
mov
stc
fwait
dec
sub
add
pop
xchg
clc
test
in
inc
clc
jmp
and
add
xor
loop
insb
mov
ds
in
push
add
fisubrs
mov
cmp
xabort
inc
add
add
add
push
fimull
jmp
push
add
mov
lcall
test
jp
mov
add
mov
cwtl
ret
clc
mov
xchg
fsubs
add
mov
jecxz
mov
add
pushf
xchg
decb
inc
clc
fcompl
fstpl
out
push
sar
insb
jns
and
add
pop
mov
popa
add
aad
add
std
inc
add
add
add
cmpsb
clc
dec
mov
repnz
jns
clc
out
in
sub
inc
clc
gs
jae
add
add
enter
clc
adc
add
add
sub
clc
daa
clc
push
add
cmpsb
clc
repnz
lcall
pop
out
jmp
push
pop
stc
push
data16
lcall
add
idiv
popf
or
jae
add
add
add
inc
clc
cmpsl
clc
jg
inc
clc
or
loopne
out
mov
add
dec
jmp
pop
adc
add
add
and
add
aas
aaa
inc
clc
in
mov
add
imul
sub
clc
imul
add
cmp
add
cli
or
cmp
add
push
in
cmp
sbb
clc
jne
pop
mov
push
iret
inc
add
mov
push
add
xor
add
dec
mov
pop
mov
or
in
cmpsb
clc
cmp
clc
pop
jo
add
cmp
mov
cmp
js
clc
clc
push
add
and
add
xchg
iret
adc
add
test
sbb
mov
dec
cs
cmp
or
fstp
jne
rcll
add
xor
add
add
push
jmp
add
lret
add
jbe
push
add
nop
xchg
pop
fadd
clc
pop
lret
negl
add
out
mov
insb
test
mov
mov
push
add
pop
imul
sub
fs
testl
add
sbb
movsl
clc
out
xchg
pop
clc
xor
clc
add
add
outsb
xor
add
test
pop
clc
clc
xchg
mov
clc
punpckhdq
fcompl
mov
add
jb
add
cmp
mov
mov
add
add
mov
add
mov
clc
xchg
lock
clc
divb
add
clc
pop
icebp
add
add
cmp
add
add
xchg
inc
add
cmp
add
adc
clc
mov
add
add
sub
insl
mov
add
clc
jae
add
xlat
imul
mov
nop
out
pop
ror
shlb
add
cmp
jle
clc
bound
add
add
clc
mov
pop
jbe
lock
clc
lods
or
sbb
outsl
sub
lret
add
pop
or
and
add
addr16
mov
aas
push
add
cmp
jmp
clc
cmp
lret
pop
std
pop
and
add
mov
add
add
clc
jo
add
inc
add
jge
lret
jae
add
arpl
add
lods
xabort
clc
lret
xchg
scas
jo
add
fisubrl
mov
ljmp
xabort
add
test
add
mov
fldt
add
ror
das
fld1
sub
je
sub
ret
sub
add
xbegin
clc
inc
add
sub
clc
inc
add
mov
out
mov
imul
out
push
add
cmp
add
sar
mov
sti
testl
and
add
inc
clc
shrl
mov
clc
add
add
adc
add
clc
cltd
jge
clc
cltd
adc
add
popa
add
push
add
inc
clc
sti
in
push
add
push
add
sar
add
push
outsb
cmp
negl
push
stos
out
int3
cmp
cmp
xabort
xchg
mov
ljmp
xor
add
jo
add
mov
lods
pop
loope
cmp
or
sbb
aas
aaa
jne
clc
mov
add
push
add
add
popf
hlt
cwtl
adc
add
add
test
sbb
cmp
leave
jne
clc
ds
mov
stc
lcall
clc
xchg
push
or
inc
clc
cwtl
inc
add
wbinvd
mov
std
movsl
clc
xor
add
icebp
bound
add
add
lods
testb
sar
clc
sbb
mov
clc
push
es
dec
gs
scas
sub
clc
divb
pop
fldt
dec
movsl
clc
fs
add
xabort
dec
call
fiadds
insb
push
add
push
add
sbb
loop
jl
loop
mov
xchg
fldt
clc
or
pop
push
clc
mov
push
add
data16
adc
add
icebp
adc
add
add
imulb
lods
movsl
clc
jl,pt
pop
iret
inc
clc
fidivrl
clc
stc
mov
adc
add
lods
int
xchg
aam
out
loope
popa
add
pop
loopne
mov
dec
test
call
add
mov
clc
mov
iret
mov
add
clc
jmp
js
daa
clc
call
add
xor
add
add
add
stos
adc
add
in
pop
sbb
pop
mov
arpl
add
add
add
pushl
xabort
add
jl
cmp
cmp
test
es
mov
std
dec
add
int
add
sbb
xor
add
pop
out
push
mov
in
and
add
mov
loopne
cmp
jo
add
push
add
ja
and
add
clc
int3
icebp
jle
clc
int3
es
push
jne
mov
mov
iret
or
push
sub
out
adc
add
sub
add
addr16
test
add
cld
mov
lcall
mov
add
call
push
adc
add
or
es
scas
and
sldt
add
add
test
add
add
int
cmpsl
clc
mov
fstl
xor
mov
add
mov
mov
sti
push
outsb
xchg
sub
pusha
add
inc
add
data16
loope
push
add
or
cmp
pop
xchg
xlat
cltd
rolb
add
pop
jbe
clc
jl
scas
mov
or
sub
adc
add
add
cmp
mov
add
pop
addr16
es
sbb
clc
adc
add
cmp
adc
add
mov
xor
add
add
repz
das
das
mov
inc
clc
mov
cli
jle
pop
dec
inc
clc
pop
push
add
or
imul
enter
clc
int3
push
clc
ds
xchg
or
push
fbld
bound
add
adc
push
add
ljmp
test
clc
daa
clc
je
clc
push
jg
outsb
mov
dec
inc
add
fs
out
inc
add
test
clc
adc
add
add
mov
clc
mov
xabort
lods
aaa
jbe
cmp
mov
add
ljmp
pop
fsubr
rolb
clc
icebp
and
add
loop
dec
mov
clc
push
add
mov
aas
push
cltd
fisubrs
clc
data16
pop
mov
clc
mov
push
add
iret
jne
sub
clc
xchg
mov
add
add
hlt
pop
fwait
cmp
push
int3
pop
out
and
add
clc
mov
adc
add
clc
pop
shrb
ja
dec
mov
mov
out
inc
clc
push
add
pop
fnsave
add
add
mov
clc
data16
stos
lcall
ljmp
push
lret
jae
add
lea
in
mov
mov
add
nop
aaa
xchg
mov
fldenv
add
cmpsl
clc
adc
add
add
sub
out
mov
xchg
add
add
adc
xor
add
push
fs
xchg
sub
das
leave
int3
cmpsb
clc
addr16
sarl
cmp
loope
mov
ret
clc
pop
xchg
pop
test
clc
cmp
inc
clc
cld
fdivrl
ja
add
out
aam
clc
ss
add
in
push
add
or
js
clc
adc
add
push
add
incb
sbb
pop
clc
mov
fwait
mov
add
adc
add
add
xabort
clc
nop
repz
je
cmp
xor
add
clc
mov
clc
stos
insl
sbb
sub
add
cs
push
xchg
pop
cmpsb
clc
xlat
and
scas
repnz
push
clc
push
add
jp
clc
xchg
xchg
mov
jbe
clc
mov
ljmp
js
add
add
add
push
enter
clc
jg
dec
inc
clc
nop
xor
add
mov
clc
ja
clc
std
and
add
xor
add
jno
add
mov
clc
das
repnz
clc
fsts
or
clc
sti
hlt
sahf
mov
mov
mov
loop
fidivl
push
call
scas
mov
pusha
add
lret
clc
mov
arpl
add
mov
sub
movsb
clc
lcall
add
iret
sar
inc
clc
js
rcll
xor
add
clc
jbe
push
fildl
outsl
in
sbb
mov
negl
add
ret
clc
push
sbb
aas
xlat
and
cmp
loop
and
add
stc
mov
push
add
sbb
add
lret
pop
and
cmp
data16
mov
push
add
dec
insl
mov
add
mov
add
incb
repnz
xchg
neg
adc
add
add
cmpsl
clc
std
cmp
pop
fcomip
mov
inc
add
es
push
lods
lcall
xor
add
mov
jge
sti
jl
mov
adc
scas
lahf
mov
sar
cmpsl
clc
inc
clc
push
dec
fisttps
clc
fnstenv
add
imul
aas
add
add
clc
mov
clc
stos
rcl
test
ret
clc
clc
pop
shrl
inc
add
mov
mov
lea
adc
cmp
clc
sti
push
pop
cmp
clc
cmp
clc
movsl
clc
call
mov
sub
add
mov
add
cli
sar
int3
pop
clc
int
cltd
lret
imul
jbe
es
inc
add
push
clc
sub
fstp
push
xlat
cmc
stos
mov
adc
inc
clc
cmp
jmp
cmp
leave
cld
in
mov
clc
stos
push
clc
outsl
xor
add
cmp
clc
sbb
clc
pusha
add
movsb
clc
fcmovbe
lret
adc
add
dec
in
xor
add
fnstenv
add
stc
xor
add
add
clc
push
lret
clc
je
jae
add
jge
insb
pop
pop
jae
add
add
xchg
inc
clc
lret
push
add
nop
and
outsb
lret
push
mov
add
mov
mov
and
xchg
xchg
mov
or
lea
sbb
ljmp
push
rorb
add
iret
daa
clc
sti
and
inc
add
xchg
adc
add
add
imul
icebp
bound
add
cmp
cmp
xor
push
movsl
clc
cmpsl
clc
sbb
pop
mov
jmp
sbb
pushf
mov
add
js
sarl
mov
in
rcll
add
jp
mov
jle
clc
out
xor
add
add
jp
clc
in
sbb
mov
clc
jle
clc
sbb
into
dec
stc
xchg
jnp
cmp
add
push
cmp
fld
clc
notb
xchg
aam
clc
xor
add
push
test
inc
clc
push
sti
insb
leave
stos
pop
cmpsb
clc
fldl
clc
gs
inc
add
inc
add
pop
inc
clc
jmp
mov
call
repz
add
sub
clc
xor
add
clc
xor
cmp
xor
add
add
add
inc
add
pop
enter
add
inc
clc
ss
clc
cmp
cld
aaa
fisttpll
push
add
out
pop
movsl
clc
push
jge
mov
cmp
scas
stos
jae
add
stc
loopne
ret
clc
iret
shrl
add
int
std
aad
inc
add
lea
add
into
cmp
add
and
add
mov
clc
push
add
call
add
dec
clc
lahf
push
add
rcrb
add
lret
cwtl
and
sub
clc
and
sub
xor
add
addr16
xor
add
sub
clc
mov
add
inc
clc
jg
xor
das
mov
add
lahf
fadds
clc
pop
adc
add
add
add
add
add
add
pop
test
fldcw
das
push
in
lods
gs
pushf
cmp
fidivrs
add
in
xchg
cmc
fwait
cld
fcompl
test
test
mov
add
cli
jmp
clc
sbb
clc
add
cmp
mov
add
xor
add
clc
mov
addr16
ret
clc
jnp
ret
clc
sbb
mov
sar
fwait
pop
clc
jne
sub
add
clc
in
in
cmp
jns
clc
and
add
push
add
adc
clc
jo
add
clc
sar
clc
fldenv
clc
mov
inc
clc
fwait
cmp
mov
daa
clc
cltd
int3
fstpl
xor
add
loopne
jo
add
das
add
add
xor
add
aam
ret
clc
sbb
out
std
inc
clc
cmp
sub
imul
or
clc
and
addr16
out
adc
add
jb
add
rcrb
add
add
add
clc
push
add
and
add
and
add
clc
inc
add
icebp
scas
sbb
add
call
movsb
clc
xbegin
add
clc
ja
inc
clc
mov
add
test
jne
pop
into
xbegin
jnp
clc
inc
clc
clc
outsb
test
pop
clc
fcmovu
xchg
adc
add
jns
xchg
rorb
ret
clc
jmp
imul
clc
cmp
push
inc
add
adc
cwtl
lods
scas
pop
jno
add
add
sbb
clc
mov
iret
cmp
clc
adc
add
xor
add
clc
clc
jle
test
iret
cmp
clc
shl
clc
cwtl
inc
add
xchg
shl
xchg
hlt
jmp
add
div
sub
mov
sbb
push
lret
imul
rcrl
jmp
iret
push
clc
inc
add
mov
add
sar
jmp
clc
sar
clc
mov
cs
repnz
add
gs
jge
add
mov
add
data16
mov
sub
aam
push
clc
cltd
lret
mov
lock
icebp
int
pop
and
in
xor
loopne
sbb
clc
dec
xchg
scas
lea
xchg
inc
clc
shlb
add
push
jle
add
add
push
add
mov
pop
mov
imul
push
popa
add
mov
clc
out
arpl
add
add
not
jae
add
insl
aaa
out
ljmp
and
add
add
clc
mov
out
pop
dec
or
jbe
mov
clc
mov
int
add
pop
clc
repnz
jle
mov
or
add
sbb
pusha
add
sar
xabort
push
add
in
mov
test
add
add
add
pop
movsl
clc
arpl
add
xchg
sub
repz
clc
inc
add
sbb
push
add
push
add
loopne
add
push
add
add
add
int3
pop
insl
sti
outsb
jl
pop
test
push
jecxz
xchg
push
add
dec
fwait
push
iret
outsb
lods
mov
add
cmp
xbegin
data16
sahf
jae
add
sbb
jp
fs
shll
add
mov
rcrb
sub
addr16
insb
outsl
pop
clc
pop
sbb
test
xor
add
jb
add
data16
adc
clc
test
add
clc
adc
add
add
push
cmpsb
clc
pop
xchg
imul
mov
or
mov
in
mov
data16
dec
sti
mov
clc
ljmp
add
cli
clc
nop
in
negb
add
xchg
nop
dec
fsubrl
add
fdiv
test
xchg
mov
jae
add
clc
lret
aam
add
das
pusha
add
pop
mov
cmp
out
jecxz
inc
add
fsubrl
aam
xor
add
loop
in
hlt
cmp
clc
sub
mov
mov
lods
dec
inc
add
dec
sbb
push
repz
add
push
in
addr16
mov
clc
sub
clc
cmp
iret
mov
and
clc
jp
xchg
push
add
mov
add
jo
add
add
insl
and
clc
sub
xor
add
push
loopne
cli
jge
jne
mov
insl
je
scas
jbe
jl
cmp
pop
and
add
test
int3
test
xchg
fistl
testb
pop
clc
add
add
clc
mov
lods
leave
and
add
clc
enter
clc
ljmp
add
enter
dec
mov
cmp
adc
xchg
push
sbb
pop
inc
add
mov
and
add
sub
cwtl
stos
es
mov
add
add
mov
add
dec
jp
lahf
mov
lock
lret
dec
fidivs
clc
arpl
add
fmuls
add
mov
clc
scas
mov
cmp
add
add
fistpl
add
jp
stc
cltd
enter
stos
ficoms
test
aad
gs
test
clc
aad
aas
fidivl
add
dec
pop
jmp
out
cmp
add
cmp
sub
mov
add
adc
loope
sub
cmp
sar
inc
clc
test
ss
add
mov
add
and
add
fwait
shrb
push
dec
gs
cli
or
add
clc
roll
sbb
clc
arpl
add
and
jnp
into
pop
sbb
mov
out
ljmp
mov
clc
out
push
stos
sbb
add
jl
add
bound
add
jb
add
add
out
daa
clc
cmp
rol
clc
jae
add
add
clc
cmp
add
pop
ss
add
cmpsl
clc
dec
gs
pop
mov
and
add
in
cli
add
test
cmp
add
adc
add
sbb
int
leave
call
clc
in
mov
pop
xor
add
js
pop
fnsave
xor
add
xabort
add
xlat
cmpsl
clc
dec
lret
mov
and
add
stos
insl
sar
push
add
pop
leave
test
clc
fnsave
add
push
clc
inc
add
jl
clc
dec
pop
cltd
clc
xor
pop
clc
add
add
cmp
xor
add
add
mov
in
es
and
fistps
sbb
xchg
out
jne
add
add
adc
scas
lea
add
mov
repz
xchg
xabort
cld
push
test
clc
add
add
test
jbe
gs
loop
hlt
inc
clc
loopne
insb
xchg
insl
shr
dec
imull
add
mov
test
out
and
lret
inc
clc
cmp
push
lock
push
add
imul
cmp
clc
sbb
add
data16
dec
push
or
and
add
add
mov
arpl
add
clc
xor
add
jo
add
clc
lret
clc
adc
add
add
clc
dec
mov
pop
fwait
inc
add
push
loop
cltd
jmp
xbegin
inc
clc
adc
add
dec
test
clc
push
sub
add
mov
mov
mov
jns
xbegin
or
push
ret
clc
mov
sahf
insb
jge
push
or
add
or
add
mov
lahf
sar
xlat
mov
clc
push
xchg
mov
add
sub
clc
mov
or
add
jl
add
jnp
add
outsb
xor
add
clc
popf
ss
xbegin
add
and
xor
add
inc
clc
loopne
clc
cmp
add
add
mov
rorl
push
mov
testl
mov
pop
clc
inc
add
out
mov
add
popf
xabort
jo
add
add
pop
jl
pop
das
cmovae
add
in
mov
popa
add
jmp
clc
sbb
add
sar
clc
insb
and
add
pop
add
lret
sub
pop
mov
xchg
push
add
mov
jecxz
movsl
clc
sbb
xor
add
inc
add
dec
ret
es
sar
xor
add
and
add
lea
pusha
add
push
mov
jecxz
cmp
js
popa
add
xchg
mov
mov
add
mov
clc
sti
cwtl
rorb
jbe
mov
ficompl
clc
pop
enter
cmp
cmp
enter
clc
int
and
cmp
jle
in
je
add
push
clc
clc
mov
sbb
loopne
leave
or
ret
clc
sbb
clc
movsl
clc
mov
add
aad
cmp
popl
pop
ja
pop
jl
clc
xor
add
clc
js
test
mov
sbb
imul
clc
jb
add
cmp
mov
add
arpl
add
jno
add
push
out
imul
mov
mull
add
adc
add
sub
add
dec
sub
ret
clc
or
test
imul
inc
clc
mov
sar
clc
dec
mov
inc
clc
out
out
out
inc
clc
cwtl
pop
adc
add
clc
sbb
clc
mov
fsts
add
clc
mov
add
add
repnz
xlat
mov
mov
push
add
push
add
add
adc
add
js
pop
sub
cld
sub
add
imul
test
jns
aaa
dec
hlt
pop
rcrb
push
and
add
cmp
gs
jmp
in
in
adc
add
outsb
mov
mov
mov
xor
out
stos
mov
fcomip
xbegin
clc
icebp
imul
and
add
mov
pop
lret
std
fwait
push
push
adc
add
add
dec
mov
clc
sar
lret
test
mov
add
bound
add
rcll
lahf
dec
jge
add
add
add
out
in
idiv
fs
ret
add
jecxz
icebp
cmp
shlb
in
xchg
sub
dec
enter
add
add
cmp
mov
sub
lret
mov
jae
add
jp
push
add
int
repnz
mov
xlat
mov
jecxz
lahf
mov
push
xchg
cmp
add
pop
dec
pop
popf
lock
adc
cmp
or
pop
gs
lret
sub
mov
xchg
mov
sbb
clc
inc
clc
aad
sar
lock
add
lea
jecxz
xor
add
clc
pop
jae
add
fmuls
pusha
add
or
loopne
cmp
out
sar
clc
inc
clc
in
iret
jp
sarb
sbb
add
add
clc
cwtl
mov
inc
clc
inc
clc
aaa
xor
repz
ja
test
neg
add
add
xor
add
pusha
add
sub
add
add
add
aas
and
jge
leave
mov
mov
sar
push
xor
add
clc
sti
fwait
inc
clc
xchg
cmp
imulb
mov
pop
nop
and
add
sbb
movsl
clc
xor
add
fcomip
mov
add
clc
push
rcl
push
add
xor
add
xchg
out
xlat
mov
add
mov
clc
dec
outsl
jg
jp
clc
mov
ds
and
add
mov
clc
xlat
jmp
xchg
aam
inc
add
add
sar
ss
lahf
scas
movsl
clc
fucomp
aad
xor
add
test
fmull
add
cmp
jle
mov
mov
dec
mov
clc
cmpsb
clc
or
xor
add
clc
insb
push
lods
jl
jecxz
inc
add
xor
add
add
xchg
pushf
sbb
clc
in
push
addr16
dec
aas
xbegin
cmp
add
arpl
add
clc
adc
add
or
dec
ds
out
mov
leave
mov
imul
int
push
stos
insb
adc
add
clc
mov
sub
mov
cmc
xchg
stc
int3
sub
clc
xchg
jns
lret
jmp
mull
add
cltd
imul
in
xchg
or
add
mov
add
push
mov
or
mov
stc
cmp
sarb
clc
mov
clc
jmp
and
add
push
clc
fdivs
clc
xabort
sub
or
add
repz
sbb
add
frstor
add
mov
out
popl
fnstsw
in
fisttpl
dec
shll
clc
fs
fnstsw
es
adc
add
clc
nop
jle
divb
add
pop
dec
and
clc
sbb
mov
clc
xlat
popl
clc
sar
clc
out
push
dec
rcrb
jns
in
mov
fiaddl
mov
add
add
fstpt
add
adc
mov
push
add
adc
add
out
mov
add
add
add
clc
xbegin
add
xbegin
clc
or
sub
clc
xchg
jne
mov
push
clc
add
add
mov
push
and
add
add
cmc
cwtl
popf
ficompl
pop
ret
clc
or
pop
clc
in
in
push
dec
and
add
data16
out
cmp
std
sbb
lods
nop
adc
add
lcall
jmp
xor
add
clc
inc
add
repnz
xchg
popf
test
clc
dec
pop
mov
clc
mov
cmpsl
clc
cmp
inc
add
mov
push
popl
addr16
mov
mov
add
out
xchg
rcrl
clc
add
test
es
pop
out
pusha
add
push
repz
mov
clc
idivl
and
js
ljmp
stos
adc
add
clc
ds
hlt
xchg
imul
ds
lcall
pop
ljmp
and
add
add
push
add
mov
js
xchg
int
push
jns
imul
cli
jge
fiadds
fidivs
pop
pop
lret
hlt
lods
add
add
add
imul
bound
add
add
cmp
inc
add
in
cmp
fsubl
add
inc
clc
loope
jno
add
test
clc
out
xchg
xchg
add
stos
test
jnp
pop
clc
mov
add
cmovs
clc
mov
add
mov
add
mov
mov
adc
add
mov
inc
add
pop
cltd
aam
movsb
clc
rorl
in
test
enter
clc
jnp
add
sub
clc
and
add
mov
pushf
jecxz,pn
push
outsl
ret
clc
fdivl
mov
cwtl
push
fs
enter
clc
mov
mov
cmp
repnz
jnp
push
add
ljmp
add
mov
sbb
dec
pusha
add
xchg
dec
mov
jbe
add
inc
clc
mov
or
stos
divl
add
xchg
aam
add
jno
add
bound
add
aas
das
xchg
pmulhuw
int3
cmp
out
inc
clc
mov
clc
jns
or
or
mov
cltd
mov
mov
ljmp
pop
add
add
adc
add
fcomp
sub
xchg
mov
add
cmp
clc
push
mov
add
rcll
repnz
lods
pop
push
jg
cmp
jge
add
jnp
fidivl
or
or
add
inc
clc
mov
clc
adc
add
lret
out
fsubl
add
int
or
jecxz
sbb
mov
fs
push
cmpsl
clc
ds
in
sub
adc
cmp
clc
gs
push
clc
mov
add
xchg
push
add
jae
add
loope
xor
add
clc
cmp
dec
pop
ds
push
lods
mov
fs
cmp
popf
inc
clc
jmp
add
add
add
nop
dec
sahf
test
lods
xor
in
push
cmp
add
clc
jno
add
add
mov
add
add
jg
adc
add
clc
insb
lea
mov
clc
sub
pop
xchg
cmp
sub
in
push
lahf
loopne
test
lock
add
add
pop
or
ljmp
mov
mov
cmp
sar
add
repnz
fcomps
inc
add
lea
push
sar
dec
lock
rclb
add
test
mov
add
lods
or
ja
in
cmp
in
and
add
jg
adc
add
gs
push
jnp
add
add
mov
daa
clc
cld
jmp
add
lods
xor
add
movsb
clc
mov
pusha
add
nop
movsb
clc
sti
fstps
ret
mov
lahf
dec
mov
add
fdivrs
mov
ss
mov
mov
pop
pop
xchg
mov
add
cmp
sar
clc
cwtl
xabort
jo
add
add
shl
clc
shll
clc
fs
std
dec
mov
adc
test
add
cmp
rorl
in
cmp
add
push
fs
sbb
ret
clc
iret
xchg
dec
mov
pop
jnp
sar
clc
mov
add
add
dec
push
rcl
cmovs
in
cmp
testb
push
jmp
decb
clc
movd
push
add
aad
add
repz
aam
js
clc
cmc
mov
push
cli
xchg
pop
pop
dec
adc
test
dec
sub
lret
sub
adc
clc
nop
push
add
cmp
lret
adc
sgdtl
add
add
cmp
add
jnp
add
scas
pop
cmc
inc
add
mov
lret
pushf
mov
clc
mov
push
add
icebp
lods
and
add
add
mov
dec
stc
repz
inc
clc
dec
in
dec
dec
mov
mov
add
sbb
clc
cmp
clc
mov
js
movsl
clc
fsubrs
jge
add
mov
jmp
clc
in
mov
popa
add
repnz
and
mov
push
add
inc
clc
std
testl
xor
or
add
clc
iret
scas
lret
xbegin
clc
cwtl
cwtl
xor
jp
jnp
dec
aas
clc
adc
add
clc
xbegin
push
cmp
mov
cmp
add
cli
sbb
into
sbb
add
push
clc
hlt
jne
jno
add
adc
clc
and
xchg
aam
int3
cmpsb
clc
sahf
frstor
add
xchg
cmp
fsubs
add
clc
pusha
add
or
add
into
mov
in
fucomi
dec
mov
clc
dec
and
push
or
jl
inc
clc
jecxz
adc
add
xchg
mov
clc
repnz
add
dec
sbb
xchg
mov
add
clc
pop
clc
ljmp
jp
push
add
imul
loop
mov
insl
aad
add
cmp
mov
call
and
add
out
jle
mov
or
clc
adc
add
xor
add
clc
inc
add
push
add
push
jmp
cmp
add
add
cmp
xchg
mov
clc
inc
clc
inc
clc
outsl
movaps
push
add
mov
clc
inc
clc
iret
cmp
insl
in
test
add
add
mov
jo
add
movsb
clc
jns
inc
add
lods
xlat
or
clc
das
aaa
mov
sbb
test
inc
clc
mov
clc
cltd
aaa
cmc
inc
clc
loope
push
nop
lret
add
pop
adc
add
clc
daa
clc
ret
clc
jge
cltd
mov
test
mov
lods
inc
clc
addr16
repnz
inc
clc
sbb
add
or
jle
clc
dec
sub
imul
cmp
mov
aas
js
test
cld
cltd
pop
push
cmpsb
clc
leave
pop
mov
add
add
cs
and
jne
mov
push
add
cmp
cmpsb
clc
scas
mov
add
sar
lahf
xor
add
sahf
pop
clc
dec
iret
ss
sub
lock
lock
add
add
fisttpl
rdpmc
add
adc
add
clc
cwtl
xabort
add
cmp
mov
add
out
jecxz
fucomi
pop
jne
sbb
out
mov
clc
imulb
add
ret
clc
shlb
add
clc
mov
push
clc
movsl
clc
addr16
push
add
popf
dec
cmp
jae
add
lahf
repz
lcall
push
add
lahf
test
pop
es
xchg
aam
clc
adc
jg
out
int
add
fcomps
xor
clc
fwait
xchg
inc
clc
sarl
add
mov
mov
sub
in
cmp
add
jl
clc
pop
xchg
xchg
xchg
jecxz
sbb
mov
xabort
jb
add
add
push
dec
push
fidivrs
clc
mov
add
mov
add
ds
lahf
mov
out
mov
daa
clc
xlat
push
pop
insb
sbb
pop
clc
push
add
outsb
sbb
mov
mov
add
sub
pop
fadd
clc
add
add
imul
xor
out
or
clc
or
clc
ret
clc
adc
add
add
clc
arpl
add
add
loope
push
dec
clc
adc
add
ds
add
add
add
call
ljmp
lea
pop
and
jae
add
add
mov
jno
add
clc
rcr
repnz
insl
or
add
pop
cmp
ss
jge
clc
and
push
jns
out
lcall
js
clc
push
out
out
addr16
mov
dec
fbstp
dec
gs
jns
jns
jns
dec
jne
mov
incl
add
arpl
add
clc
aad
push
add
test
dec
lret
add
cmpsb
clc
test
cmp
gs
mov
add
fbld
add
cs
pop
pop
test
inc
add
in
popa
add
aad
cmp
xor
add
add
or
clc
cmp
mov
clc
xabort
jae
add
fidivl
add
pop
fcoms
out
jbe
cmp
pop
ret
aam
pop
movsb
clc
fnstcw
clc
jns
test
mov
fsts
add
adc
add
jno
add
add
mov
clc
fistps
clc
xor
lahf
adc
fbld
cmp
bound
add
add
fldl
add
cmp
test
cmpsb
clc
push
ljmp
pop
lret
push
icebp
mov
inc
clc
jno
add
clc
jp
clc
clc
scas
mov
aas
jns
jne
or
clc
cmc
mov
gs
mov
clc
inc
add
ss
push
decl
clc
aam
cld
mov
add
xor
add
add
clc
jle
aad
clc
xor
add
cwtl
insl
in
push
dec
test
paddusb
cwtl
movsl
clc
mov
push
in
lods
sbb
iret
mov
daa
clc
stos
mov
add
sub
push
sub
in
stc
fadd
clc
test
clc
ja
repnz
sbb
mulb
xabort
clc
adc
add
mov
mov
je
clc
adc
stc
mov
es
test
int3
cmp
mov
mov
clc
ret
clc
ja
add
in
sar
mov
sbb
fcomp
out
pop
and
add
ljmp
push
addr16
pop
clc
jg,pt
cmp
xchg
cmp
or
clc
jg
mov
fimull
clc
cld
inc
add
insl
leave
cmp
add
data16
aas
mov
jne
sub
pop
cmp
add
cmp
clc
ja
xchg
insl
fnstcw
jne
add
pop
push
add
sar
adc
add
add
push
std
mov
imul
adc
dec
fadd
clc
sar
clc
lods
or
jbe
clc
cmp
call
sub
fildl
add
or
call
clc
mov
clc
mov
pushf
js
test
cwtl
xlat
fstps
clc
mov
push
add
and
add
add
clc
pop
clc
mov
leave
mov
clc
mov
roll
clc
clc
cli
push
aaa
dec
mov
adc
add
in
mov
jae
add
add
popf
sub
mov
clc
scas
pop
clc
icebp
sahf
dec
lods
or
mov
dec
cmc
sub
mov
cvttps2pi
mov
jmp
clc
pusha
add
jb
add
add
movd
into
push
xlat
xor
add
and
add
push
jae
add
in
mov
adc
add
clc
add
add
mov
add
xabort
xchg
test
push
sbb
and
add
mov
call
clc
push
js
push
jb
add
inc
add
cs
add
dec
lods
fiaddl
leave
lahf
dec
out
outsl
mov
das
mov
add
mov
fidivrl
mov
sub
repnz
cmp
add
cmpsb
clc
sbb
jne
push
add
es
xor
add
and
add
es
cmp
clc
mov
add
arpl
add
clc
hlt
mov
inc
clc
loope
sbb
push
add
xor
add
sub
sbb
clc
clc
inc
clc
push
into
cmp
rcll
add
data16
dec
ret
clc
cmpsl
clc
cs
cmp
add
sub
clc
divb
add
push
and
add
mov
clc
cmp
jo
add
mov
punpckhbw
clc
xchg
lahf
movsb
clc
nop
mov
add
clc
mov
clc
xor
add
add
jmp
xchg
mov
stc
mov
ret
add
ds
clc
lret
clc
dec
adc
add
add
arpl
add
add
insl
cmp
pop
movsb
clc
stc
je
adc
add
cmp
pusha
add
sar
inc
add
aam
clc
repnz
add
test
xor
add
clc
sbb
jae
add
add
test
test
cwtl
ret
data16
nop
mov
cld
jle
dec
mov
jg
lahf
mov
add
jb
add
sbb
add
add
je
inc
clc
int3
ljmp
adc
cmp
ret
clc
test
sub
add
cmpsb
clc
in
lea
sub
clc
lret
jge
repnz
clc
add
popf
bnd
fwait
sbb
or
test
dec
cmpsb
clc
mov
jns
jnp
add
into
cmp
add
cs
and
dec
jb
add
push
add
add
add
clc
mov
clc
push
add
push
xor
add
add
add
push
fiadds
or
sar
fstl
aaa
xchg
hlt
mov
and
push
out
in
clc
jp
add
jmp
into
ficoml
loopne
inc
add
lea
add
sbb
add
lret
scas
xchg
cli
and
inc
add
sbb
lea
clc
xchg
pop
mov
fcoml
add
pop
clc
push
add
dec
push
cmpsl
clc
mov
push
push
clc
jmp
add
xabort
add
inc
clc
jb
add
cmp
dec
cmp
into
sub
clc
jl
lea
insl
xchg
pop
pxor
add
inc
add
jg
enter
lret
add
add
add
add
add
sar
pop
incl
clc
sbb
push
add
test
clc
filds
clc
sbb
jbe
sbb
aaa
mov
or
clc
pop
cmp
push
add
clc
mov
clc
xor
add
aad
add
or
clc
mov
popa
add
in
icebp
mov
and
add
add
test
pop
and
add
add
adc
add
clc
rcrl
es
sarb
outsb
movsl
clc
fwait
daa
clc
fldcw
add
add
jle
and
add
and
sahf
fs
sti
call
xor
add
clc
cmp
aam
dec
mov
jmp
add
repz
std
ret
clc
push
aaa
insb
sar
jae
add
popf
and
fsubrl
sti
lods
xchg
rcrb
aas
jge
scas
cltd
jge
clc
sbb
clc
aam
clc
fistpll
lahf
jge
clc
add
jb
add
test
add
push
clc
mov
clc
dec
clc
dec
pop
clc
push
push
fldenv
clc
imul
lret
and
add
lcall
mov
clc
fs
pusha
add
test
pop
stos
lods
lret
test
clc
js
cmp
mov
psubw
or
clc
xchg
cmp
mov
test
out
push
pop
inc
add
lock
add
xchg
push
push
add
int
out
fldenv
lea
add
clc
or
xor
leave
iret
aas
jecxz
outsb
ficompl
xchg
mov
add
adc
add
jno
add
mov
push
test
nop
sub
es
mov
imul
test
pop
ficoms
add
push
add
mov
jnp
inc
add
lcall
clc
push
and
add
jae
add
test
clc
lahf
inc
clc
arpl
add
add
lods
cmc
sbb
clc
dec
cmp
cmpsl
clc
shrl
into
sub
add
out
pushf
or
clc
popa
add
pop
in
xor
add
lahf
clc
mov
mov
clc
scas
mov
add
add
or
and
add
xchg
inc
clc
sbb
xor
add
clc
mov
push
add
daa
clc
push
lcall
clc
push
clc
enter
add
add
lods
mov
push
mov
clc
push
daa
clc
nop
sbb
fistl
leave
insb
rcrb
mov
add
jns
add
add
add
sub
mov
or
mov
mov
aam
push
add
xor
add
push
add
fidivl
ret
clc
in
push
int3
mov
repnz
push
jecxz
inc
add
sub
outsb
popf
cmp
and
add
clc
inc
add
pop
mov
mul
clc
mov
xchg
das
and
jno
add
jae
add
jb
add
push
cmp
sti
stos
jne
add
xchg
pop
add
add
add
push
mov
scas
jb
add
mov
lret
movsb
clc
xor
lea
xor
add
out
rcrl
jnp
jno
add
add
fldt
cmp
add
cmpsb
clc
add
add
mov
call
and
add
aam
mov
clc
inc
add
inc
add
cmp
sar
pop
push
outsb
adc
cltd
add
add
inc
add
pop
or
push
mov
clc
out
and
add
xor
add
clc
mov
add
push
add
mov
loope
cmp
jno
add
mov
add
cwtl
dec
jecxz
flds
clc
stc
sbb
imul
in
jae
add
add
xor
add
mov
add
clc
daa
clc
xabort
mov
sub
dec
lock
sub
clc
dec
dec
in
ja
fidivrs
clc
and
into
enter
sub
repnz
add
imul
clc
je
in
ljmp
pusha
add
push
add
inc
clc
bound
add
clc
loopne
out
pop
sub
clc
jmp
daa
clc
pusha
add
mov
inc
clc
fsubs
add
add
add
mov
clc
inc
add
jge
adc
add
clc
pop
gs
loope
or
add
stc
cmp
add
pop
dec
outsl
cmpsb
clc
leave
pop
xor
clc
or
clc
test
add
push
cmc
or
clc
inc
clc
cmp
xor
add
jns
out
aaa
xor
add
xchg
adc
add
add
dec
enter
dec
jecxz
sub
ljmp
mov
cltd
dec
push
add
push
mov
out
hlt
popa
add
cmp
add
dec
stc
sbb
lods
sarl
std
push
adc
inc
add
cmp
xchg
xbegin
add
imul
mov
leave
jmp
cmp
jge
xor
add
hlt
add
add
add
adc
add
add
scas
cmpsl
clc
mov
add
ja
ret
clc
mov
push
clc
mov
clc
lret
in
fsubrl
jl
scas
popf
or
insb
sbb
add
cmp
cmpsb
clc
inc
add
cmp
call
add
add
clc
clc
outsl
sub
inc
add
inc
add
testl
xchg
lcall
push
lock
xchg
cmp
test
test
push
cmp
push
add
lret
xabort
cmp
clc
dec
hlt
pusha
add
repz
inc
clc
in
mov
sbb
mov
sbb
clc
xbegin
push
add
movsb
clc
and
push
add
push
in
xor
add
dec
cs
cwtl
negl
ss
add
fs
sub
inc
add
sbb
scas
sub
xor
add
add
cmp
add
add
repz
clc
lods
mov
cmc
int3
fdivs
add
mov
prefetch
add
lcall
clc
fwait
imul
xchg
xor
add
jg
inc
add
sbb
jb
add
fldenv
xchg
hlt
addr16
out
gs
or
imul
adc
add
add
js
xchg
fstpl
pop
sbb
add
add
dec
cwtl
outsl
fldenv
add
clc
jmp
icebp
lea
xabort
add
sar
add
movhps
add
jle
jne
bound
add
and
add
pop
out
je
addr16
movsl
clc
add
add
mov
add
add
add
sub
add
xchg
out
in
addr16
xchg
xor
outsl
push
fidivrs
pusha
add
mov
mov
add
clc
mov
push
shlb
add
push
add
jns
add
push
divl
clc
jecxz
push
push
cltd
or
mov
xbegin
ret
ficoml
add
dec
jle
mov
clc
push
add
adc
add
add
xor
adc
add
cltd
dec
jmp
jnp
clc
cli
lods
pop
push
clc
add
add
into
pop
into
pusha
add
icebp
lods
mov
xor
add
cmp
clc
inc
add
fcmovbe
cmp
lret
xchg
popa
add
gs
adc
add
add
add
clc
xchg
and
js
pop
sbb
popa
add
add
add
add
xchg
jae
add
jp
cmp
adc
add
aad
mov
and
add
add
idivl
test
aad
add
add
jl
dec
adc
lods
sar
xor
add
data16
jmp
clc
es
into
dec
pop
ret
clc
and
add
xchg
scas
lcall
lock
pop
sub
imul
add
repz
fsubrl
clc
jns
clc
pop
mov
add
pop
das
dec
addr16
mov
adc
sbb
add
outsb
inc
add
mov
sahf
loope
loop
insb
test
mov
add
add
add
mov
lea
push
sbb
add
clc
adc
add
add
and
add
enter
mov
clc
insb
mov
int3
or
xchg
mov
clc
imul
xor
add
sar
add
mov
jo
add
add
dec
inc
clc
daa
clc
pop
loopne
ficoms
add
push
fwait
cli
mov
add
add
adc
negb
add
add
jb
add
xor
add
pushf
insl
fs
adc
add
xor
clc
jle
fcomi
dec
add
add
jmp
clc
bound
add
push
aaa
cmp
clc
cwtl
stos
push
sti
ret
pop
scas
jge
cmp
xchg
xchg
or
clc
dec
arpl
add
clc
mov
icebp
pop
popa
add
fs
and
add
or
ret
inc
clc
xchg
imul
xchg
mov
movsb
clc
jb
add
aad
mov
add
add
jmp
imul
add
add
pop
js,pn
clc
jg
ljmp
fstpt
clc
insb
fildl
add
dec
dec
cmp
clc
mov
adc
add
scas
sbb
in
dec
sbb
mov
clc
and
add
add
clc
shlb
cmp
mov
cmp
test
data16
ja
fsts
clc
cmp
adc
add
daa
clc
mov
clc
loope
push
mov
add
or
pop
jg
mov
and
add
clc
stc
fistps
sub
add
cmp
clc
pop
jmp
xabort
in
or
clc
add
add
add
xchg
out
or
clc
ss
fisttpl
ja
mov
jb
add
mov
add
dec
push
pop
dec
fstpl
and
add
addr16
call
pop
pusha
add
insl
icebp
xor
add
push
add
cmp
and
clc
shl
clc
xbegin
add
imul
cli
outsl
popf
cs
outsb
insl
shlb
cli
repz
add
outsl
aad
roll
add
in
add
clc
jmp
jecxz
shrb
lahf
pusha
add
xabort
or
clc
mov
vunpckhps
and
add
clc
daa
clc
pop
test
push
add
push
xchg
js
clc
push
xor
add
jg
mov
add
and
in
lock
add
repz
sar
pop
test
cli
inc
add
stc
out
lock
add
mov
push
out
push
add
mov
add
xchg
dec
loope
and
add
ljmp
xchg
aad
xor
test
inc
add
inc
clc
fists
and
add
fdiv
mov
push
add
sahf
add
add
mov
adc
add
hlt
rclb
clc
jl
mov
add
or
packssdw
clc
mov
clc
pusha
add
in
ret
clc
stos
sar
pop
push
daa
clc
fidivrl
add
adc
add
ja
clc
dec
gs
clc
cmpsb
clc
bound
add
and
add
xor
sub
out
mov
lock
add
dec
add
add
das
add
add
add
add
pop
jmp
add
pop
rcrl
fisttps
mov
add
jns
push
loop
add
add
add
aaa
sbb
arpl
add
int3
popa
add
pop
clc
stos
mov
loope
repnz
lods
sahf
pushf
pop
jmp
jbe
adc
inc
add
inc
add
imul
pop
cmpsb
clc
loope
clc
jae
add
pop
jnp
fwait
scas
out
bnd
clc
js
fwait
add
add
clc
mov
and
ret
clc
pusha
add
insl
and
add
cli
xor
add
clc
jbe
sbb
clc
or
and
add
insl
lcall
repnz
add
push
add
add
add
mov
pop
cltd
push
add
ss
sub
or
outsl
into
cmpsl
clc
inc
clc
xor
add
ja
or
clc
mov
add
repz
sub
sahf
lret
add
into
mov
add
lods
insb
jp,pt
add
loope
cmp
push
add
xchg
add
add
clc
xabort
add
jp
clc
mov
ljmp
xor
xor
add
push
lahf
fcomi
sub
add
cld
and
add
clc
sub
add
pusha
add
cwtl
mov
inc
add
adc
add
jb
add
cwtl
xabort
rolb
out
mov
test
add
leave
stos
xchg
jne
lret
cmp
lea
fwait
sbb
fwait
mov
and
add
sub
clc
add
add
out
cmpsb
clc
add
add
clc
inc
add
push
push
add
imul
loop
outsb
jns
xor
or
ret
clc
mov
add
clc
inc
clc
test
add
cmp
clc
insl
out
ds
dec
rcl
mov
pop
xchg
inc
clc
idivl
xabort
popa
add
pop
xchg
int
cmpsb
clc
pushf
cs
add
add
mov
add
repz
sarl
and
outsl
add
outsl
clc
mov
push
clc
dec
inc
add
lret
fnstenv
add
push
aaa
jge
aam
clc
add
push
add
and
add
insb
sub
adc
add
push
gs
aam
notl
add
lods
inc
clc
inc
clc
data16
mov
clc
lret
sar
lods
cmp
jp
cmp
push
cli
inc
add
lret
mov
dec
mov
xor
arpl
add
jae
add
mov
jae
add
add
mov
ret
clc
addr16
mov
das
add
add
clc
inc
add
ja
mov
clc
shrb
addr16
jge
loopne
jmp
mov
pop
sahf
mov
xchg
outsl
mov
scas
mov
push
inc
add
scas
or
add
mov
clc
mov
clc
pop
adc
bound
add
xor
add
clc
jbe
mov
add
je
push
ret
jo
add
fsubrl
inc
clc
mov
add
repnz
mov
clc
insl
xor
jle
fadds
jp
add
sar
jmp
adc
add
adc
cmp
stos
xchg
pslld
outsl
ret
clc
sar
xor
add
inc
clc
insl
pop
pop
xor
clc
xbegin
inc
add
fs
dec
and
add
cltd
fsubrp
notb
add
movsl
clc
out
popa
add
mov
mov
lahf
divb
add
add
dec
mov
lahf
lret
pop
call
adc
add
or
sbb
mov
add
pusha
add
pop
push
cmpsb
clc
in
mov
sar
aam
clc
clc
jp
add
push
add
cmp
test
clc
inc
clc
mov
push
clc
mov
cs
clc
mov
jb
add
scas
and
hlt
shll
add
insl
dec
xchg
xor
clc
or
clc
push
mov
add
data16
sbb
and
test
clc
push
ja
adc
add
add
aam
add
mov
out
sbb
clc
or
clc
fcomps
clc
mov
lock
add
sbb
clc
push
clc
jnp
out
or
clc
cmp
icebp
xchg
sbb
dec
push
sub
clc
and
add
hlt
shrb
inc
clc
sbb
shll
add
add
jns
pop
jp
clc
push
insl
or
shr
js
sbb
jns
push
add
and
add
pop
fistpl
add
adc
push
clc
addr16
ficompl
add
movsb
clc
mov
add
push
push
and
add
ret
clc
sar
add
loope
lea
add
push
add
aaa
mov
clc
outsl
clc
inc
clc
insb
js
adc
add
xchg
fimuls
clc
or
add
adc
and
add
clc
fldpi
inc
add
mov
clc
xabort
clc
ja
clc
mov
add
pop
xchg
dec
fwait
mov
iret
mov
icebp
dec
jp
clc
enter
jecxz
mov
imul
and
in
cmc
cld
inc
add
mov
das
sub
fwait
mov
cmpsb
clc
mov
enter
cmp
mov
clc
lods
es
arpl
add
add
clc
adc
add
add
loopne
inc
add
sar
add
and
add
enter
jno
add
add
add
xchg
push
add
and
add
add
pop
fs
pushf
push
fistpll
pop
bound
add
jae
add
xlat
pop
clc
mov
clc
xchg
aaa
jmp
push
adc
add
bound
add
add
cmp
clc
cltd
fldt
adc
add
sub
clc
aam
sub
clc
std
jmp
dec
pop
mov
add
arpl
add
add
and
add
jmp
mov
jle
add
mov
stc
in
lods
mov
push
and
enter
adc
add
clc
cmp
clc
pop
add
add
jg
clc
test
pop
in
ja
add
loopne
jecxz
arpl
add
jge
pop
xor
add
data16
or
clc
fildl
add
mov
out
fs
sti
push
push
movsb
clc
xabort
cmp
data16
pusha
add
sbb
add
add
insl
rcr
cmpsb
clc
insl
jo
add
add
pop
mov
clc
lods
push
add
inc
clc
lods
and
add
xbegin
clc
leave
hlt
push
add
dec
cmp
leave
adc
push
push
add
xchg
xor
insl
add
ss
add
inc
clc
or
xor
adc
cwtl
dec
cs
or
clc
ljmp
xchg
popf
xchg
push
imul
outsb
jb
add
add
sbb
jl
push
clc
or
pusha
add
jns
leave
dec
insl
sahf
pop
pushf
ljmp
clc
and
add
clc
fwait
cs
clc
cmp
repz
fidivrl
sar
add
and
add
add
add
add
fildl
jne
clc
and
add
clc
mulb
mov
icebp
insb
outsb
push
sub
add
mov
pop
cmpsb
clc
jmp
mov
adc
add
roll
repz
cld
cli
mov
clc
mov
scas
adc
add
add
stos
push
mov
lahf
cmp
test
cmp
clc
in
pop
jbe
add
sar
jne
es
repnz
cli
push
clc
and
add
clc
aaa
jg
aas
mov
clc
xchg
daa
clc
add
add
sub
sbb
clc
scas
call
xor
add
clc
scas
cmc
push
push
push
add
mov
test
fldt
inc
add
dec
jns
leave
mov
clc
mov
cmp
add
insb
ds
add
cmp
pop
mov
clc
xor
stos
in
sbb
cld
mov
and
insb
xchg
cmp
inc
clc
jl
mov
jg
cmp
clc
jl
into
mov
dec
lret
clc
sub
sbb
mov
add
and
add
cmp
mov
clc
mov
clc
sti
add
add
clc
out
outsl
cmp
jp
add
sbb
add
fsubr
mov
clc
pop
addr16
loop
and
add
clc
das
movsl
clc
cmpsl
clc
xchg
je
fimull
mov
clc
xchg
fs
xchg
dec
int3
pop
push
add
mulb
add
ret
clc
add
add
jl
enter
add
adc
add
mov
movsl
clc
nop
hlt
or
xchg
pop
cmp
or
sbb
clc
mov
lahf
mov
loopne
shlb
add
add
daa
clc
arpl
add
fcoms
adc
add
jg
add
jmp
sbb
xchg
pop
lret
add
clc
jmp
clc
xchg
jno
add
mov
add
sar
jge
pop
movsl
clc
push
clc
out
bound
add
dec
sbb
sbb
add
or
add
add
xor
add
das
in
outsl
jae
add
add
clc
jo
add
pop
clc
loop
inc
add
and
add
mov
outsl
xchg
mov
std
in
sar
adc
add
push
xbegin
icebp
das
mov
std
mov
xor
fstl
iret
xchg
mov
clc
cmp
insl
mov
and
add
sbb
push
add
xabort
clc
out
cmp
clc
push
pop
xlat
xchg
jns
mov
movsb
clc
dec
fnstenv
sar
fstpt
mov
sub
xchg
imul
and
pop
clc
addr16
lret
add
and
rcr
push
clc
mov
popa
add
es
push
add
es
leave
cs
addr16
rorl
dec
cmp
clc
jno
add
pop
pop
xchg
lcall
add
sub
int3
mov
xor
add
add
mov
pushf
aas
pop
jo
add
sub
pop
jbe
add
mov
neg
addr16
mov
hlt
mov
mov
fcmovne
lcall
push
add
pop
push
mov
add
jns
jnp
add
testl
dec
sbb
add
lret
xchg
dec
pop
mov
xchg
dec
pusha
add
in
push
fistpl
clc
adc
add
add
push
loope
xchg
dec
leave
rorb
add
add
add
pop
push
jecxz
loope
mov
jle
xor
add
mov
add
add
hlt
inc
clc
pop
test
xabort
ficoml
clc
clc
aas
xor
add
clc
sahf
out
dec
cli
jns
clc
imul
out
pop
pop
jmp
shrl
jl
or
add
mov
into
inc
add
daa
clc
adc
or
aas
enter
shl
clc
mov
popa
add
cwtl
bound
add
js
jp
sub
aad
clc
cmp
add
dec
and
add
add
pop
cmp
add
popf
call
push
add
add
clc
jl
dec
mov
pop
test
clc
je
and
and
loopne
adc
add
add
bound
add
cmp
add
xor
add
loop
inc
add
dec
sub
fsubs
shr
imul
mov
pop
xbegin
cmp
shlb
insl
cmp
loop
ret
add
or
or
clc
adc
add
add
dec
sbb
xchg
cmp
aaa
sub
addr16
mov
mov
sub
repnz
imul
add
jbe
jae
add
stos
cmp
outsl
pusha
add
mov
jecxz
jbe
add
sbb
ds
xlat
fwait
push
sbb
gs
jnp
xchg
insl
dec
lea
clc
iret
push
add
insl
idivb
pusha
add
inc
add
xabort
xlat
ljmp
push
add
sbb
clc
out
jno
add
xchg
cmp
push
call
aam
add
push
add
gs
idivl
clc
push
add
xchg
jb
add
add
xor
jg
pop
pop
lahf
dec
and
add
in
dec
xor
add
ss
push
cmp
xor
add
pop
or
clc
pop
lahf
pop
clc
or
test
mov
clc
mov
roll
sbb
clc
mov
das
sub
clc
xchg
test
in
xchg
fdivr
scas
sar
clc
cmp
clc
dec
add
add
add
jbe
mov
clc
xchg
and
add
push
add
sub
clc
inc
clc
push
push
inc
add
mov
add
lea
cltd
mov
and
add
dec
mov
jnp
clc
loop
imul
add
cmp
fstpl
clc
loop
mov
clc
cltd
pop
out
add
jecxz
imul
add
sbb
push
add
loop
lods
and
or
mov
es
cmp
xbegin
pop
imull
add
cmp
push
fsubr
sub
clc
insl
adc
add
nop
loop
repz
jge
test
dec
sbb
insb
pusha
add
jle
movsl
clc
jge
insl
negb
clc
int3
filds
add
mov
push
cmc
xchg
and
pusha
add
push
clc
out
cwtl
xor
add
add
cmp
add
daa
clc
add
push
jge
add
aad
mov
in
jl
push
add
push
or
add
add
dec
mov
adc
add
nop
out
iret
push
clc
sbb
add
add
add
add
call
add
add
lods
jnp
mov
test
add
ljmp
add
mov
mov
adc
add
or
jbe
int
popf
mov
repnz
fcmovnu
scas
filds
leave
dec
cmp
js
adc
or
add
test
dec
mov
test
pop
xchg
cli
pop
xchg
jecxz
movsb
clc
lcall
mov
mov
add
clc
addr16
cli
int3
insl
inc
add
sbb
clc
clc
outsl
cld
daa
clc
pop
clc
es
push
add
aad
inc
add
dec
sbb
idiv
xchg
in
arpl
add
jmp
add
or
add
and
add
pushf
push
add
sar
sbb
xbegin
mov
aas
lods
jmp
cs
xchg
push
add
cmp
cld
xor
pop
repz
lret
push
mov
clc
shlb
mov
negl
imul
cs
xchg
out
and
add
sub
add
test
mov
add
mov
mov
clc
xchg
jmp
jg
clc
xchg
call
mov
xor
add
inc
add
xchg
mov
sar
ljmp
das
xchg
in
mov
add
add
push
cmpxchg
das
fcomi
add
add
clc
std
xchg
cvtps2pd
movsb
clc
or
jnp
clc
jl
clc
mov
mov
clc
fildl
add
lock
lods
sub
mov
test
fwait
int3
push
jl
jnp
jp
add
adc
add
lods
mov
mov
clc
fadd
clc
and
pushf
sti
pop
clc
ss
clc
and
add
je
test
es
ss
mov
inc
clc
icebp
ror
mov
inc
clc
push
clc
jmp
popa
add
popa
add
clc
jl
sbb
xor
add
loope
inc
add
iret
aad
xor
inc
add
pop
clc
jbe
mov
add
insb
bound
add
dec
cmp
es
jbe
xchg
pushf
dec
js
add
incl
mov
add
clc
cmp
lods
cmpsl
clc
out
pmulhuw
jb
add
scas
inc
clc
movsb
clc
aam
add
mov
sbb
lret
mov
clc
inc
add
cmpsl
clc
push
xchg
mov
pop
repz
mov
add
and
cld
test
add
jmp
mov
add
addr16
stos
add
pusha
add
pop
push
add
stc
flds
mov
ss
add
clc
cmp
mov
cld
scas
or
clc
pop
pop
clc
aam
mov
add
popf
xabort
test
xchg
mov
cmp
xchg
and
add
add
add
add
jns
aam
sti
fisubs
add
adc
add
add
je
clc
inc
add
add
add
adc
sbb
adc
add
add
mov
xchg
popl
add
push
enter
fs
sub
decl
clc
insl
xor
or
or
cmp
dec
jnp
pop
clc
mov
add
pusha
add
adc
add
pop
xchg
je
clc
fnsetpm(287
clc
xchg
std
jmp
push
jnp
dec
mov
add
and
add
xchg
call
jge
xor
add
clc
testb
clc
js
loopne
scas
rcll
enter
lret
fiaddl
add
or
push
add
popa
add
push
push
xor
add
clc
addr16
xabort
sub
and
add
pop
add
adc
jle
add
lret
pushf
imul
clc
and
add
add
dec
or
filds
add
clc
lock
icebp
mov
shlb
outsb
cmp
pop
cmc
cmp
xbegin
xchg
test
mov
mov
stos
xor
add
add
pushf
je
add
and
add
add
inc
clc
cmp
clc
inc
add
insb
repnz
sti
es
dec
pop
out
clc
adc
add
push
add
in
ffree
clc
adc
add
rcr
stos
sbb
clc
push
xchg
dec
inc
clc
stos
sub
push
jp
or
clc
mov
popf
in
xchg
dec
pushf
mov
add
cmp
es
mov
and
add
sub
add
or
mov
inc
add
in
dec
lret
adc
add
add
cmpsl
clc
push
sub
jg
mov
adc
add
mov
clc
sub
clc
add
mov
jb
add
pop
leave
mov
ss
inc
clc
test
inc
add
iret
mov
add
in
icebp
arpl
add
in
or
add
push
mov
add
add
cmpsl
clc
cmp
inc
add
xchg
jecxz
xor
clc
fsub
clc
movsl
clc
idivl
jae
add
pop
inc
clc
cld
out
and
mov
sarl
je
sbb
test
sub
add
add
clc
sar
or
xchg
xor
nop
vmovaps
xor
and
add
cmc
or
int3
lcall
add
loopne
mov
xabort
xchg
loopne
mov
out
int3
and
add
clc
mov
clc
sbb
add
dec
fisttpll
inc
add
inc
add
push
add
mov
cmp
clc
mov
arpl
add
pop
leave
cltd
adc
add
add
adc
add
sti
outsb
hlt
xor
add
jae
add
add
clc
sar
cmpsl
clc
cmp
iret
adc
add
icebp
sbb
sar
icebp
and
add
xor
add
sbb
add
add
add
jmp
sti
cmp
ret
xlat
inc
clc
cld
adc
add
clc
xor
add
pop
sub
jne
out
stos
xor
clc
sub
cli
stos
and
add
adc
add
add
aaa
dec
scas
mov
mov
clc
std
clc
cld
inc
clc
mov
add
ret
addr16
pop
or
mov
inc
clc
and
add
add
cmp
hlt
ret
or
add
mov
clc
adc
add
ds
fadd
clc
int3
pop
sub
adc
add
add
cmp
inc
add
adc
clc
bound
add
icebp
andps
dec
stc
fistpll
pop
inc
clc
out
xor
pavgb
out
or
arpl
add
das
push
adc
add
mov
clc
xbegin
ljmp
sbb
out
xor
add
xor
in
fsubrs
pop
repz
cmp
pop
rcrb
xchg
dec
repnz
out
cmpsl
clc
imul
gs
pop
sbb
insb
out
clc
sub
add
sub
clc
mov
out
mov
and
add
add
repz
lahf
or
clc
push
add
stos
pusha
add
jbe
cmpsl
clc
mov
lock
clc
mov
bound
add
clc
mov
clc
testl
iret
xor
mov
es
sub
pop
aas
cmp
pop
daa
clc
mov
mov
scas
jge
mov
loop
scas
xchg
hlt
fdivs
aaa
jne,pt
stc
int
push
add
jp
add
frstor
add
and
add
mov
pop
jae
add
stos
sub
add
mov
add
xchg
jnp
clc
jmp
dec
push
pusha
add
push
mov
clc
pop
sbb
lret
pusha
add
scas
adc
addr16
mov
loope
mov
outsl
cmp
ret
clc
push
add
out
mov
add
dec
xlat
stos
movsb
clc
jo
add
scas
clc
jl
clc
push
icebp
add
add
clc
add
pmullw
add
or
or
sti
lret
popf
mov
clc
mov
xor
add
cwtl
push
add
inc
clc
cmp
clc
jmp
lock
clc
pop
mov
inc
add
and
add
clc
leave
int3
gs
mov
add
lcall
clc
push
or
add
inc
clc
add
add
ss
mov
and
add
lret
int
add
aaa
inc
clc
data16
jecxz
push
movlps
add
xchg
lahf
testb
rclb
add
nop
fbld
loopne
mov
leave
sbb
add
add
add
mov
xchg
clc
fisubrs
shl
clc
insb
sar
add
cmp
fistpll
test
imul
clc
scas
mov
clc
mov
add
scas
cmc
fidivrl
add
data16
mov
clc
xor
xchg
je
add
adc
add
pop
add
add
clc
clc
sub
clc
mov
sub
mov
aad
pop
adc
add
aaa
mov
jle
clc
sbb
enter
clc
mov
clc
fcmovbe
inc
clc
loop
daa
clc
aad
call
add
int3
jle
add
pop
mov
in
xor
add
add
imul
add
mov
pushf
xchg
add
add
cmc
mov
sbb
push
xchg
mov
iret
pop
add
das
push
clc
jmp
mov
xor
add
clc
fsubrl
xchg
add
add
add
mov
aas
jo
add
add
scas
jmp
clc
inc
add
sub
inc
add
dec
pop
clc
push
insb
mov
dec
pop
clc
fsubl
add
ds
test
add
add
add
add
hlt
movsb
clc
leave
adc
add
loop
mov
adc
add
or
sub
cmp
add
clc
or
clc
sbb
push
jo
add
pop
stos
xor
add
lret
add
add
add
pop
repnz
adc
add
fidivs
clc
int3
fs
sub
cmp
clc
daa
clc
sub
xchg
cwtl
frstor
add
jmp
or
cmp
clc
jl
sbb
out
fsts
add
gs
pop
mov
inc
add
mov
add
mov
clc
out
xchg
sahf
mov
mov
adc
add
add
cmp
clc
sbb
clc
xchg
or
add
imul
xchg
in
shrb
icebp
pop
jb
add
add
int3
ja
add
clc
aas
or
negb
add
outsb
pop
mov
mov
out
je
shl
xchg
inc
clc
out
mov
add
xor
fwait
gs
jo
add
mov
cmc
jnp
clc
mov
add
add
jno
add
jno
add
mov
daa
clc
inc
clc
cmp
inc
clc
inc
add
repnz
imul
clc
lods
mov
rorl
clc
pop
das
nop
insl
cmp
lcall
clc
push
clc
sub
xchg
repz
add
in
insl
and
add
inc
add
and
push
add
cmp
add
jle
mov
fdivrs
jecxz
xor
add
lret
cmp
sbb
add
sbb
add
xchg
pop
add
add
clc
ds
inc
clc
sbb
fwait
pop
insl
call
insl
outsl
mov
jge
std
clc
xor
add
add
add
jg
je
fwait
jl
add
sbb
inc
add
pop
imul
into
mov
fistps
jecxz
cmp
mov
stos
pusha
add
lret
out
lret
cmp
add
mov
ds
cmp
xchg
or
test
push
add
js
test
xchg
aas
xor
sbb
pop
jns
jae
add
add
add
nop
inc
clc
je
inc
add
stos
or
clc
ss
ljmp
push
add
movsl
clc
data16
push
clc
xchg
xor
add
add
add
clc
jbe
pop
addr16
mov
sub
gs
inc
clc
out
xchg
clc
adc
add
add
pop
inc
clc
push
repnz
clc
xor
add
dec
dec
sub
movsl
clc
gs
sti
cmp
into
in
and
add
pop
and
add
add
enter
sbb
out
push
xor
add
cmp
jg
sarb
push
cmp
clc
stc
mov
mov
sarl
lcall
add
imul
mov
mov
adc
add
testl
lods
ret
clc
repnz
jo
add
arpl
add
cmp
push
add
cmp
push
dec
ret
add
sub
add
xchg
into
out
xchg
scas
or
pop
push
ret
jmp
push
cmp
out
inc
add
xor
add
clc
lods
push
sbb
clc
cmp
clc
adc
jl
aad
clc
ds
clc
or
fistpll
lret
daa
clc
ja
push
add
scas
mov
clc
xchg
int3
hlt
pop
js
clc
adc
or
jnp
pop
adc
add
clc
lods
rclb
and
add
add
mov
testb
push
pop
decb
pop
adc
xchg
mul
clc
add
add
clc
mov
clc
inc
clc
add
test
fsubl
add
add
shrb
xchg
push
add
rcrl
add
je
and
icebp
ss
mov
add
add
gs
mov
clc
push
add
rcll
and
add
clc
or
clc
or
push
add
jg
add
and
add
lret
adc
add
clc
or
add
std
out
std
cld
into
js
jae
add
imul
jae
add
in
das
jo
add
inc
clc
jl
add
daa
clc
sar
clc
sub
pop
inc
add
roll
divl
add
sbb
mov
add
xchg
xor
add
inc
add
cld
dec
mov
mov
enter
nop
jl
add
outsl
xabort
clc
lea
xchg
pop
iret
pop
repnz
xabort
mov
rorb
jb
add
clc
das
loope
mov
add
mov
adc
add
dec
pop
xor
dec
or
fcmovnb
clc
cs
jnp
clc
insb
int3
mov
inc
clc
daa
clc
mov
sub
lret
out
fldl
sub
clc
mov
xchg
enter
bound
add
add
cmp
add
add
into
cli
out
cld
and
add
clc
repnz
add
lcall
add
cmpsl
clc
adc
add
add
sahf
bound
add
fidivl
add
cmp
hlt
sub
clc
fwait
ljmp
add
lods
mov
cli
xchg
push
add
sub
insb
outsb
jl
push
mov
clc
lret
cmp
clc
sbb
popf
pop
mov
pop
mov
insb
cmp
xor
add
push
sbb
scas
inc
add
call
add
out
mov
cs
clc
dec
or
lret
xchg
pop
push
clc
push
lods
fldt
xchg
bound
add
sbb
clc
insb
add
xchg
cmp
pop
mov
fs
xor
add
je
add
add
push
clc
inc
add
cli
cmp
clc
xor
add
aad
add
jge
clc
sub
js
or
scas
add
add
add
fucomp
cmp
sbb
clc
sub
clc
and
add
dec
jecxz
pop
xor
add
lcall
xor
add
movsl
clc
jmp
jmp
jb
add
clc
xchg
push
arpl
add
add
lea
fyl2xp1
ret
xchg
xor
clc
and
add
dec
mov
loopne
arpl
add
jmp
add
adc
add
mov
jae
add
mov
clc
cmp
add
jno
add
add
mov
inc
clc
aam
clc
inc
add
test
leave
aam
clc
fcompl
popa
add
cmp
jne
mov
or
sub
and
add
add
imul
clc
test
ficoml
lcall
add
cli
add
push
nop
cmp
mov
push
add
add
add
iret
dec
outsl
loopne
mov
clc
cli
pushf
adc
pop
or
ja
push
insb
lock
clc
lock
out
mov
jns
bound
add
clc
sub
clc
sbb
mov
and
push
dec
fldt
clc
push
add
jbe
xchg
mov
push
popa
add
xchg
hlt
push
cmp
push
clc
ss
mov
add
push
iret
xor
add
or
add
lock
add
push
add
data16
mov
outsl
cmp
jb
add
jo
add
imulb
clc
and
sbb
pop
cmp
clc
loopne
add
add
push
ret
clc
test
pop
sti
scas
in
push
add
xchg
outsb
add
add
jno
add
cmpsb
clc
scas
imul
jae
add
sbb
xor
mov
clc
xbegin
insb
jmp
imul
or
stc
inc
add
xchg
cmp
clc
scas
ds
add
loope
sbb
clc
mov
jnp
clc
mov
mov
clc
jg
imul
push
clc
dec
inc
add
cmp
inc
add
pop
cmp
or
clc
or
cmp
add
cld
outsl
gs
sbb
pop
ret
clc
aas
repz
xchg
out
aam
clc
popa
add
push
lock
clc
sar
add
int3
mov
repz
inc
add
in
jne
add
mov
pop
insb
xor
clc
xchg
push
aad
pop
jbe
push
mov
and
add
jle
in
sahf
jmp
ret
add
xchg
negl
loopne
add
add
sar
xchg
in
out
or
inc
add
pop
or
clc
jae
add
jae
add
icebp
or
add
push
add
ds
add
dec
sub
add
mov
jp
mov
stc
sub
sar
ret
loopne
adc
sub
jmp
cmc
push
icebp
fs
mov
or
in
ja
add
mov
clc
aad
push
mov
cmpsb
clc
sti
cmp
fisttps
add
int
clc
repz
sbb
clc
outsb
cmc
push
iret
loop
mov
adc
add
add
das
int3
push
lods
mov
pop
clc
ds
cmp
clc
or
push
fimuls
pusha
add
repnz
jne
fcoml
mov
jmp
sbb
clc
es
mov
jle
add
add
xbegin
cmp
cmp
xor
add
or
add
fmull
clc
adc
jo
add
lods
adc
add
insl
inc
add
jne
push
add
add
cmp
dec
mov
jle
daa
clc
push
inc
clc
or
mov
jg
loopne
ljmp
mov
and
add
cli
or
push
or
sub
inc
add
adc
adc
dec
stos
shrl
mov
add
jl
jae
add
add
out
and
add
roll
clc
lret
add
mov
neg
mov
clc
imul
add
add
fimull
or
adc
add
push
sar
mov
scas
lea
jle
lea
je
aam
fs
movsl
clc
in
xlat
xchg
jb
add
add
xchg
sbb
inc
clc
xlat
mov
sub
loopne
sbb
dec
mov
cmp
add
test
lods
mov
adc
add
or
xchg
or
cs
popf
sub
clc
dec
add
add
sub
stc
lods
fdiv
cli
mov
insb
test
lahf
mov
loope
adc
add
cmp
scas
lods
xor
add
add
adc
add
div
in
scas
gs
ud0
dec
pop
call
add
add
mov
mov
jbe
sar
adc
add
clc
adc
push
pop
insl
dec
xchg
rcl
mov
lret
mov
clc
loopne
scas
fidivrl
adc
add
add
xabort
jbe
and
int
pop
test
out
cmpsl
clc
pusha
add
loope
mov
test
loopne
xchg
inc
clc
mov
add
cmp
clc
pop
call
clc
lret
cmp
inc
add
shrb
add
xor
mov
ds
jp
test
in
inc
add
js
add
add
xchg
mov
ss
inc
clc
mov
icebp
cmc
loop
jl
jns
jp
xbegin
add
cmp
xchg
not
insb
leave
sub
sub
xchg
add
sbb
data16
jge
mov
mov
pop
and
adc
out
cwtl
jae
add
mov
das
outsl
call
ss
inc
clc
or
clc
sub
clc
lret
xlat
jb
add
add
sahf
aam
add
sub
clc
icebp
movsl
clc
push
inc
clc
sub
clc
xchg
xchg
or
push
add
mov
dec
icebp
fwait
inc
add
in
dec
jp
ret
pop
push
xor
add
loop
iret
pop
mov
and
add
clc
inc
add
lea
xchg
mov
cmp
jg
cmp
xchg
dec
test
imul
mov
loopne
lock
adc
add
add
pop
push
ss
out
xchg
mov
add
pop
cmp
fwait
and
add
mov
add
jl
pop
fnstsw
fiaddl
xor
add
add
fcomp
pop
mov
fisttpl
cmp
clc
inc
add
jno
add
push
adc
add
repnz
jecxz
loop
xchg
sbb
cmp
mov
add
js
adc
clc
addr16
add
clc
xlat
in
sbb
mov
insb
fidivrs
mov
push
cmpsl
clc
jmp
add
lret
mov
mov
nop
outsl
ret
clc
cmpsb
clc
cmp
push
imul
fsubrl
mov
bound
add
cs
and
add
stos
push
jmp
clc
jmp
clc
pop
pop
shrl
pop
dec
mov
test
add
lret
push
add
mov
dec
xor
add
fs
jp
add
lret
clc
adc
add
jb
add
in
lret
mov
jge
add
xor
add
add
add
adc
add
add
jae
add
sub
clc
sub
add
out
fs
dec
aas
mov
das
clc
xchg
jae
add
clc
cmp
jae
add
stos
imul
cmp
add
add
add
add
in
cmp
push
jge
xchg
adc
add
mov
add
fistpl
clc
int3
imul
mov
add
sbb
add
add
jnp,pn
cltd
rolb
add
lret
xor
add
pop
addr16
pop
outsb
or
push
into
mov
add
fimuls
int
clc
mov
xchg
aas
hlt
and
add
out
mov
clc
aam
and
add
xor
add
dec
mov
clc
and
ds
add
mov
jmp
clc
jae
add
mov
mov
add
clc
inc
add
and
add
add
pop
and
mov
jg
dec
mov
add
add
xor
add
dec
dec
jg
mov
clc
ja
cs
bound
add
add
add
clc
mov
clc
sahf
fucomip
inc
clc
push
push
add
push
add
idivl
mov
add
stos
pop
cmp
inc
clc
or
clc
jmp
in
inc
clc
add
add
ljmp
sbb
cltd
sub
adc
lcall
inc
add
pop
cmp
ret
clc
fs
mov
add
gs
mov
jecxz
xor
popf
inc
add
xbegin
sub
pop
pusha
add
enter
add
pop
xor
clc
mov
cmp
clc
inc
add
lods
sbb
cmp
gs
iret
mov
clc
clc
test
jo
add
clc
xbegin
call
cmp
sbb
inc
add
mov
add
add
clc
outsb
adc
aaa
push
add
pop
ljmp
fisubrl
adc
clc
adc
cmp
clc
out
paddsw
stos
cltd
jle
push
cmp
clc
hlt
push
je
add
add
clc
cli
in
sbb
jne
or
mov
clc
push
mov
push
clc
pop
lret
add
pop
clc
sub
jg
clc
ret
push
add
mov
add
js
clc
adc
add
add
shrb
mov
push
loopne
call
pushf
int
test
dec
xor
add
cmp
add
jo
add
ds
mov
clc
pop
ret
add
movsb
clc
pusha
add
jne
fidivs
clc
aad
clc
jmp
icebp
test
push
pop
and
test
cwtl
pushf
std
dec
and
push
add
cltd
inc
clc
push
add
jns
clc
push
clc
test
je
add
add
push
clc
fiaddl
clc
pop
jp
clc
mov
clc
mov
int
ret
clc
xor
clc
sub
lret
push
add
pusha
add
out
jp
clc
cmp
clc
movsb
clc
outsb
mov
add
or
add
fldenv
add
in
fs
dec
dec
sub
add
lock
aam
add
mov
pop
or
clc
inc
clc
xor
nop
loop
xor
add
clc
cmpsb
clc
pop
add
add
and
aad
dec
in
aam
clc
ljmp
sub
mov
mov
ljmp
add
fsubrp
push
add
nop
mov
popa
add
push
add
pop
jae
add
pop
cmp
mov
cmp
loope
and
add
dec
fwait
sub
lcall
add
rclb
clc
xchg
jae
add
clc
xbegin
call
outsb
jbe
pop
pop
sbb
clc
fs
push
and
add
push
mov
clc
mov
clc
ljmp
decl
inc
clc
pop
data16
cmp
xchg
mov
outsl
repnz
clc
mov
shl
clc
or
sub
mov
movsl
clc
push
add
int
clc
pop
and
fmulp
flds
clc
lret
shll
add
mov
cwtl
cmc
sbb
mov
clc
insl
clc
fucomip
jo
add
clc
arpl
add
sbb
clc
xchg
push
add
clc
mov
add
cmp
aas
xchg
fs
mov
ds
push
add
adc
loope
xchg
inc
clc
cmp
clc
adc
add
outsb
sub
mov
xchg
aad
clc
and
add
mov
add
clc
test
pusha
add
and
add
clc
xor
add
lods
add
add
cld
lods
ret
clc
cmp
clc
jge
add
cmpsb
clc
jmp
cmp
add
popf
fistpl
add
add
add
clc
in
sbb
add
stos
fdivs
add
pop
mov
add
sub
dec
dec
pop
clc
add
lods
cmp
add
xor
cmp
fmul
jl
add
ljmp
mov
fsubr
push
add
mov
xchg
sub
testb
clc
mov
add
add
cmp
cmc
inc
clc
mov
js
clc
bound
add
cs
add
sarl
cmp
fwait
jmp
sar
jno
add
jno
clc
jle
sti
inc
clc
cltd
movsl
clc
clc
push
jno
add
clc
rolb
lcall
pop
dec
int
cmpsb
clc
jl
popf
sub
clc
mov
dec
mov
imulb
lock
jecxz
cmp
je
and
add
add
add
jecxz
mov
lret
shrl
push
or
add
or
xbegin
clc
xor
add
clc
cmp
mov
clc
jg
clc
mov
inc
add
mov
xchg
fcomp
dec
add
add
mov
add
sahf
jo
add
rcrl
add
push
xor
add
mov
clc
test
icebp
sbb
add
lcall
sub
sbb
js
xor
jno
add
push
lahf
dec
add
and
add
inc
clc
imul
fldcw
repnz
cmp
push
in
cwtl
mov
jns
clc
mov
test
ds
xor
add
add
cld
icebp
xchg
sbb
add
in
mov
sahf
mov
push
add
imul
mov
test
ret
clc
arpl
add
adc
add
clc
push
cmp
repz
add
add
pop
enter
inc
add
dec
cmp
push
lea
push
mov
push
xor
add
clc
inc
clc
scas
mov
add
mov
popf
in
std
ja
jnp
pop
or
jmp
xchg
jo
int3
mov
pop
pop
pop
mov
cmc
stos
mov
std
add
test
xchg
aad
sahf
xchg
sub
jp
and
mov
clc
xchg
fs
cmc
scas
xor
add
cwtl
push
add
shl
sahf
popa
add
cmpsb
clc
aam
add
add
clc
cli
sar
clc
push
xchg
das
cmp
add
add
add
lahf
mov
insl
sub
jb
add
cmp
sbb
add
sbb
clc
push
add
popf
repnz
add
out
jo
add
add
in
faddl
add
cld
mov
dec
out
in
pop
mov
in
cmp
fcoms
sahf
cmp
adc
add
movsb
clc
push
add
sbb
push
mov
add
jbe
sbb
clc
dec
xor
add
icebp
sbb
cmp
adc
clc
jp
rcl
outsl
gs
jecxz
imul
pop
pop
jo
add
add
xchg
hlt
in
mov
clc
imul
repz
xor
add
sbb
push
clc
add
add
xor
mov
into
fs
xchg
test
sbb
pop
scas
push
and
cmp
add
into
movsl
clc
or
clc
push
cli
fidivrl
je
pop
fnstcw
iret
push
add
lahf
jae
add
mov
dec
aas
lock
add
jl
cmc
nop
inc
clc
jge
add
add
add
daa
clc
repz
mov
sub
push
cli
in
ret
clc
push
pop
inc
add
lods
pop
jg
clc
inc
clc
pop
inc
add
lea
add
mov
clc
jg
mov
clc
xchg
jmp
loopne
int
jle
add
adc
add
bound
add
jne
mov
dec
aad
cmpsb
clc
lods
xchg
out
mov
lock
out
call
mulb
add
pop
push
add
pop
xbegin
fcom
mov
pop
mov
clc
jecxz
minps
add
mov
pop
clc
cli
xchg
stos
jge
lcall
adc
add
jno
add
aam
clc
xlat
ljmp
cmp
aam
cmp
and
add
test
xchg
clc
xbegin
or
mov
add
xchg
loop
into
icebp
or
inc
clc
mov
mov
add
add
jae
add
shrb
daa
clc
mov
sub
add
xor
add
add
mov
nop
ds
clc
jo
add
dec
or
scas
je
ljmp
aaa
inc
clc
cltd
push
mulb
add
clc
cmp
add
clc
add
add
clc
jb
add
pop
into
arpl
add
jp
adc
add
clc
dec
cs
push
clc
ja
jl
mov
clc
scas
xchg
test
push
jp
add
insb
add
add
clc
or
clc
stc
out
push
cli
sub
push
add
pop
clc
sbb
inc
clc
push
jb
add
add
dec
cld
inc
add
cmpxchg
ds
sar
pop
clc
cld
inc
clc
mov
push
add
jmp
cwtl
imul
hlt
push
clc
push
mov
fidivrl
jb
add
cwtl
mov
int
loopne
clc
lods
mov
pushf
fisttps
int3
leave
or
clc
popa
add
lcall
clc
sti
data16
sar
das
sub
add
push
jo
add
clc
mov
clc
scas
push
hlt
notb
add
dec
sahf
xchg
int3
pop
fidivrl
lock
xor
add
add
ljmp
cs
xor
clc
adc
add
jle
bound
add
inc
clc
or
hlt
ret
clc
sbb
mov
pop
addr16
xchg
push
add
mov
add
inc
clc
iret
push
and
add
add
push
clc
out
jp
ret
popa
add
daa
clc
push
add
mov
sbb
push
clc
mov
dec
sub
add
lock
lret
add
jle
sub
cmp
sbb
push
stos
and
add
add
clc
imul
loopne
fsubs
add
test
sbb
cmp
test
clc
or
pop
nop
mov
mov
add
add
rolb
jge
test
inc
add
mov
jge
and
add
push
and
add
insb
mov
cmpsb
clc
mov
add
and
add
xor
add
or
jae
add
add
inc
clc
test
mov
sub
jp
pop
clc
cmp
add
repz
pmaxub
loop
std
jae
add
cmp
sar
mov
fdivs
and
add
cmp
add
cmp
clc
xor
add
clc
or
clc
lcall
mov
sub
jmp
xchg
sbb
add
cmp
lock
in
mov
pop
adc
add
es
arpl
add
cs
jle
loopne
fs
sub
jg
pusha
add
jno
add
mov
cmpsb
clc
test
push
cmc
or
add
add
add
call
xor
add
aas
mov
clc
mov
push
add
rcr
mov
clc
test
sub
icebp
clc
sar
xchg
insl
daa
clc
push
sub
add
cmp
clc
mov
mov
mov
cmpsb
clc
sbb
ja
mov
add
and
add
add
scas
jle
fmul
dec
dec
es
pop
mov
jb
add
dec
mov
add
loopne
dec
loopne
sbb
div
cmp
out
jb
add
clc
lock
sub
adc
add
add
add
pop
sar
dec
push
add
sar
add
sub
add
add
sti
fs
cmp
dec
fcoml
add
clc
test
lret
pop
xor
add
pop
sti
jno
add
jge
aaa
in
dec
jl
ja
aas
leave
inc
add
data16
jnp
clc
pop
clc
mov
add
mov
mov
clc
and
add
fucomp
sub
minps
clc
xlat
xor
add
out
call
add
sub
clc
data16
mov
aas
xchg
jne
add
pop
clc
cmc
xbegin
in
cmp
add
clc
pop
movsl
clc
outsl
cmp
sub
add
test
aaa
sbb
clc
leave
sub
vcvtps2pd
lcall
xor
add
adc
add
add
add
imul
add
stos
je
outsb
mov
and
mov
clc
dec
dec
fcos
jno,pt
add
xor
add
sub
into
outsb
movsl
clc
jno
add
loope
adc
add
cli
clc
in
and
clc
mov
jg
fs
and
rcrl
ret
clc
inc
add
cmc
pop
clc
dec
dec
scas
add
cmp
add
pop
jb
add
cwtl
mov
shll
push
clc
dec
lods
std
test
out
call
add
xabort
out
push
stos
loop
pop
and
add
in
fcmovbe
cmc
push
add
sti
ds
cmp
add
dec
inc
add
nop
xchg
cwtl
out
fistpl
dec
inc
add
nop
xchg
and
out
adc
sub
movsb
clc
cmp
xchg
push
mov
and
fistps
addr16
fwait
pop
cmp
dec
faddl
cmp
int
inc
clc
mov
add
inc
add
lret
daa
clc
cmp
clc
mov
ret
clc
and
add
test
xor
add
jge
mov
movsl
clc
mov
clc
xor
add
outsb
movsb
clc
fdivl
pushf
lea
adc
add
add
dec
add
add
xor
add
add
add
or
clc
add
add
add
das
jmp
clc
xor
add
clc
mov
clc
cli
gs
sub
clc
cmp
adc
add
test
pop
clc
ja
clc
cmp
dec
out
push
dec
mov
cmp
lcall
add
add
cmp
add
sbb
clc
inc
add
cltd
push
add
sahf
outsb
jl
clc
scas
jns
xor
add
cmc
imul
push
lahf
push
add
add
cmp
imul
cwtl
adc
add
int
add
push
sub
adc
add
add
mov
faddp
clc
ss
pusha
add
aam
data16
dec
scas
ja
out
mov
pop
std
sbb
clc
push
clc
add
add
xor
dec
or
mov
mov
addr16
push
pop
push
insb
fnstcw
clc
cmp
out
pop
lock
jae
add
cmp
clc
fistl
shll
add
add
roll
clc
cltd
xchg
ss
cmc
dec
xchg
cmp
push
push
add
sahf
cmp
movsb
clc
fcoml
add
pushl
add
inc
add
add
add
add
add
or
add
add
mov
lcall
jmp
add
sub
mov
add
in
dec
inc
add
pop
arpl
add
add
xchg
in
adc
add
clc
xor
and
add
add
adc
add
clc
lods
cmpsl
clc
ret
clc
xbegin
fdivrs
inc
clc
sahf
xchg
adc
xchg
fs
xchg
dec
cltd
hlt
outsb
xor
add
inc
clc
cmp
clc
sub
add
mov
es
pop
lahf
and
jbe
lahf
and
add
pop
mov
cmp
insl
data16
adc
add
add
add
add
lret
or
add
pushf
and
add
ds
add
add
pop
cmp
clc
sti
es
cmp
push
mov
mov
mov
ficompl
mov
sub
pop
out
pop
xabort
cltd
xor
add
add
das
hlt
cmp
add
push
clc
mov
add
and
add
add
add
add
jp
add
popf
std
enter
and
add
cmp
adc
add
loope
xchg
into
cmp
add
es
test
int3
inc
clc
imul
adc
add
add
jge
adc
add
lods
jl
clc
insb
xchg
in
xbegin
mov
clc
call
clc
hlt
or
clc
push
cwtl
popf
sub
add
sub
fcmove
loop
pop
imul
imul
inc
add
mov
xchg
sahf
test
ret
clc
inc
clc
push
rcr
ja
clc
pop
clc
push
add
inc
add
xor
add
insb
fildl
loope
mov
jg
and
add
and
add
jno
add
and
add
clc
xchg
push
sar
add
mov
add
add
add
add
sub
imul
sub
push
clc
repz
adc
add
or
add
cmp
clc
jl
cmpsb
clc
jge
clc
cmp
add
imul
bound
add
pop
sbb
hlt
xor
add
mov
jb
add
aam
xbegin
add
push
adc
add
and
data16
inc
add
push
add
sbb
jmp
clc
cmp
mov
out
xor
add
push
clc
sub
das
popf
pusha
add
xchg
mov
clc
or
dec
stos
jmp
mov
xor
lcall
and
clc
push
add
pop
cltd
mov
pop
inc
add
ret
cmp
fwait
out
dec
test
sub
xchg
imul
add
mov
loopne
rolb
add
test
iret
jns
add
int
clc
pop
cmc
jns
inc
clc
clc
mov
clc
imul
clc
and
add
jne
int3
jb
add
add
fisttps
aas
movsb
clc
stos
sub
data16
sbb
and
add
add
pusha
add
aad
or
pop
iret
pop
lock
test
test
or
mov
clc
mov
clc
jae
add
add
add
ja
inc
add
enter
cmp
clc
adc
add
cmp
clc
pusha
add
jge
add
arpl
add
add
cmp
jb
add
xor
cmp
xbegin
ja
xor
add
dec
cmpsl
clc
xlat
pop
out
call
add
in
xabort
popf
jnp
dec
mov
clc
jne
pop
clc
cmpsl
clc
rorl
clc
adc
add
and
add
es
dec
cwtl
out
mov
add
push
add
mov
sbb
add
insl
mov
add
cltd
add
add
clc
daa
clc
jp
clc
iret
inc
clc
sub
add
jnp
clc
js
add
out
or
clc
jne
add
lcall
movsl
clc
sti
clc
stc
clc
pop
cmp
jbe
clc
sar
clc
ljmp
and
add
mov
stc
cs
cmpsl
clc
add
mov
outsl
xor
add
inc
add
lods
push
ja
clc
dec
cs
pop
mov
clc
mov
iret
pop
test
rcr
leave
mov
clc
pop
repz
adc
add
ret
clc
xor
add
add
movsb
clc
adc
add
aad
clc
dec
sub
add
add
cmp
jb
add
aaa
sub
test
xchg
imull
inc
add
push
mov
test
cmp
xchg
out
fadd
clc
jp
add
popf
aad
inc
add
test
fs
aas
sub
fs
xor
sbb
cmp
dec
pop
clc
flds
clc
leave
jle
push
xor
add
out
sar
add
or
xchg
dec
lea
popa
add
out
out
pop
out
ret
clc
adc
add
sbb
clc
sar
outsb
fldcw
loope
popa
add
rcrb
xor
cmp
fsubs
add
popa
add
inc
add
pop
push
inc
clc
or
sti
xchg
mov
and
add
clc
addr16
push
push
into
mov
add
mov
fprem1
leave
mov
scas
gs
ficoms
add
add
lea
add
xor
add
add
mov
clc
jnp
sbb
clc
cs
movsl
clc
mov
sahf
mov
out
push
cmpsl
clc
sub
inc
clc
cmp
addr16
push
sub
dec
repnz
mov
inc
add
inc
add
push
je
push
inc
add
out
push
gs
jb
add
jl
ja
lock
add
add
cs
mov
cmp
dec
or
pop
pop
inc
add
mov
adc
add
add
adc
popa
add
shlb
add
cmp
add
push
clc
push
xchg
mov
clc
mov
jge
pusha
add
mov
jp
clc
mov
test
scas
lcall
pop
cld
xor
add
test
mov
add
add
stos
sar
loopne
mov
pop
clc
in
gs
test
loop
jecxz
xor
add
and
dec
mov
add
xchg
cmpsl
clc
add
fisttps
clc
pop
cld
iret
xor
add
or
test
inc
clc
mov
mov
clc
test
dec
repnz
xchg
cs
clc
xchg
jno
add
jle
stos
ja
ds
std
popa
add
cli
fcompl
cwtl
sar
hlt
clc
dec
cmc
daa
clc
fs
repnz
add
popf
into
cmp
add
cmc
std
mov
pop
cli
jbe
imul
push
clc
push
add
cs
outsl
out
sub
add
add
add
dec
ret
clc
mov
clc
fisubrl
add
sbb
shll
clc
sar
add
xabort
mov
clc
pop
pop
inc
clc
lret
aas
outsb
fs
jl
xchg
test
fildll
add
jl
adc
add
clc
cmp
sbb
clc
clc
lahf
pop
add
fsubrl
js
cwtl
mov
scas
into
aad
clc
int
clc
xchg
sbb
mov
sub
int
clc
jno
add
sahf
sahf
inc
clc
sub
scas
pop
dec
mov
clc
lahf
das
mov
add
mov
add
clc
jmp
cmp
and
add
add
push
add
stos
call
aas
jo
add
mov
xchg
gs
add
clc
adc
clc
adc
add
add
or
inc
clc
fsubrl
iret
enter
clc
push
xor
jecxz
rorb
mov
cmp
add
sar
dec
cmp
shll
clc
std
jmp
pop
sbb
add
mov
clc
movsl
clc
out
out
jle
push
popa
add
mov
add
clc
push
icebp
aam
int3
ficoms
sub
addr16
inc
add
xchg
push
clc
outsb
mov
pop
gs
dec
and
sbb
and
sar
fnstenv
add
add
add
add
clc
jne
out
push
sbb
clc
jg
dec
repz
dec
sub
jecxz
gs
mov
xchg
clc
add
add
add
sbb
add
es
pop
repnz
add
add
sub
out
filds
add
data16
add
add
mov
xchg
mov
add
aam
mov
clc
push
clc
push
add
outsl
scas
clc
loopne
mov
daa
clc
call
xchg
lret
loopne
ja
out
mov
mov
clc
push
add
mov
add
cmp
dec
divl
mov
mov
ret
es
pushf
ffreep
clc
shr
push
mov
je
mov
xor
add
sub
add
or
sub
dec
jns
add
mull
add
sub
xor
adc
add
outsb
pop
mov
xabort
add
in
or
mov
dec
xchg
js
cmp
add
lock
add
addr16
movsl
clc
mov
cs
add
xbegin
mov
insl
or
rcrb
clc
mov
in
mov
clc
clc
leave
xbegin
xor
add
dec
mov
clc
xchg
cli
push
sbb
add
mov
fiaddl
mov
cmp
dec
mov
out
dec
js
clc
ds
cwtl
shl
clc
add
add
data16
inc
clc
or
jp
pop
out
js
test
clc
mov
cmp
add
in
cmp
clc
sti
push
add
jo
add
add
loopne
xabort
leave
jmp
imul
push
push
add
lods
xchg
inc
add
cmp
lret
rolb
clc
ja
sub
jp
clc
daa
clc
das
pusha
add
sbb
sub
add
add
adc
add
mov
add
dec
in
inc
add
mov
xchg
xor
add
lahf
bound
add
sti
je
imul
push
mov
jno
add
push
cmp
cwtl
or
aam
or
mov
pop
xor
mov
cld
dec
bound
add
clc
pop
push
bound
add
sahf
fs
cmpsl
clc
and
add
add
cld
mov
jne
clc
fstps
pop
cmp
add
enter
cli
pop
out
jl
clc
mov
clc
and
add
call
clc
pop
movsb
clc
rorl
mov
add
jne
out
jp
lahf
jnp
clc
daa
clc
xchg
insl
loope
dec
mov
and
add
dec
sub
clc
hlt
inc
clc
je
clc
or
push
add
lods
cmp
lahf
inc
clc
mov
mov
xor
add
cmpsb
clc
icebp
jg
test
clc
inc
clc
mov
insb
mov
cmc
repz
out
inc
add
movsl
clc
es
mov
pop
lcall
test
cld
mov
shll
add
xor
add
lea
ret
clc
mov
aam
stos
fdivl
add
add
jge
sbb
add
in
jnp
add
sub
psraw
xchg
xabort
sti
and
add
clc
jle
push
add
shr
call
clc
push
sbb
mov
add
lret
add
jne
clc
out
jmp
adc
add
clc
sbb
pusha
add
mov
add
cmp
jnp
fsts
add
add
sbb
sar
dec
push
cmp
lss
add
imul
add
cmp
clc
lods
dec
fs
scas
data16
scas
fsubl
divl
movsl
clc
inc
clc
jo
add
add
iret
out
das
enter
clc
es
lahf
outsl
or
mov
add
sar
add
into
inc
add
mov
inc
add
loopne
mov
mov
add
jns
cmp
clc
dec
dec
rolb
add
repnz
add
cmp
add
repnz
jl
lahf
arpl
add
mov
push
cltd
push
mov
add
mov
out
ret
clc
repnz
add
add
add
bound
add
iret
push
imul
xchg
fsubrl
clc
outsb
pop
sub
in
mov
popf
aas
inc
clc
fucomp
lock
jae
add
sub
pop
xchg
mov
add
pop
pushl
mov
mov
sahf
push
sbb
clc
pop
cli
mov
add
clc
dec
and
inc
clc
xor
add
clc
sub
xchg
addr16
nopl
add
ret
clc
and
add
add
clc
dec
nop
es
ficoms
add
cwtl
adc
add
incb
pop
xor
in
sbb
clc
sbb
add
add
add
sub
aad
add
dec
jo
add
dec
pop
rcll
add
add
cmpsb
clc
xor
add
push
shll
loope
add
mov
mov
mov
cmp
mov
and
add
cltd
push
outsl
ss
leave
mov
sub
add
add
xchg
ret
clc
fidivs
add
add
or
cmp
add
xchg
cwtl
xor
add
clc
jb
add
fnsave
clc
sar
add
mov
add
sarl
jno
add
add
cmpsb
clc
cli
aas
sbb
clc
add
add
mov
clc
ljmp
enter
out
inc
clc
fimull
xor
add
clc
xor
add
sub
sub
sub
ret
adc
add
clc
call
clc
jmp
loope
cmp
add
clc
inc
add
imul
add
rolb
push
clc
xor
add
xor
add
add
xor
add
repz
jno
add
add
mov
jecxz
mov
mov
inc
clc
mov
add
scas
push
push
dec
inc
clc
xchg
xor
add
aad
in
lock
outsl
mov
clc
clc
mov
add
dec
xchg
cltd
adc
add
clc
iret
lea
lret
stos
pop
jo
add
cmp
add
sbb
add
pop
mov
mov
sub
jecxz
or
add
add
lods
js
clc
and
in
call
jo
add
add
mov
clc
pand
add
add
adc
add
inc
clc
dec
pop
pop
imul
clc
push
add
jp
clc
in
and
add
bound
add
add
push
add
mul
clc
xor
add
sub
inc
add
pop
xchg
dec
mov
add
add
clc
mov
stos
in
adc
add
push
and
add
jmp
push
add
out
jle
filds
mov
into
jo
add
sbb
add
mov
xchg
and
pop
and
sti
mov
insl
add
add
clc
dec
popf
push
adc
add
xchg
and
add
add
add
cmp
jno
add
pop
out
jo
add
arpl
add
add
sbb
clc
imul
loopne
xabort
clc
fsubr
jecxz
add
add
add
cmpsl
clc
lcall
leave
pop
movsl
clc
push
dec
push
lock
pop
je
clc
cmp
clc
xchg
jnp
clc
sarl
dec
push
int
mov
clc
out
xor
pop
gs
cmp
dec
pushf
push
in
or
arpl
add
test
mov
cmp
clc
fists
cld
xabort
mov
clc
pop
adc
add
jno
add
cmp
mov
fucom
clc
adc
add
clc
mov
inc
clc
cmp
cmpsb
clc
out
jne
test
mov
stc
inc
clc
data16
adc
add
cld
iret
sbb
testl
scas
rorb
insl
xlat
xchg
inc
clc
xchg
ret
clc
or
add
clc
xchg
jl
and
add
mov
add
dec
mov
clc
imul
add
icebp
es
inc
clc
or
dec
fildll
pushf
cmp
clc
mov
mov
sub
add
add
add
xchg
and
add
insb
pop
clc
loope
movsb
clc
fs
xor
movsb
clc
push
add
mov
add
inc
clc
std
and
add
ficomps
adc
add
dec
mov
clc
mov
ret
clc
hlt
sbb
clc
push
sarb
clc
scas
mov
clc
push
out
into
push
dec
ss
add
add
xbegin
add
add
adc
jge
clc
adc
add
sub
xlat
incb
stos
add
add
add
mov
jo
add
mov
aas
or
lods
and
add
add
add
add
add
fmuls
stc
push
add
cmpsb
clc
sti
xchg
mov
pop
pop
xor
push
cmp
lret
sbb
inc
clc
in
mov
mov
je
pop
push
add
clc
xchg
push
jecxz
outsl
clc
scas
cmp
movsl
clc
jne
add
fisttpll
add
cmp
clc
adc
add
add
out
daa
clc
push
sub
xor
jg
clc
pop
lods
pop
add
add
xchg
or
clc
ret
outsb
inc
clc
in
cmp
add
and
add
add
fimuls
clc
out
push
add
sbb
daa
clc
pusha
add
aam
clc
adc
mov
and
or
clc
mov
cmp
clc
not
in
es
cmp
add
pop
add
add
add
dec
xchg
in
xor
add
sbb
data16
jb
add
push
lods
inc
clc
daa
clc
push
add
in
or
pop
xchg
imul
xbegin
add
aam
clc
ds
add
arpl
add
clc
and
add
adc
add
mov
sarl
mov
loope
idivl
add
mov
clc
mov
mov
mov
clc
popa
add
imul
add
je
add
outsb
jae
add
clc
and
add
or
add
pop
cmp
test
cmp
clc
sub
enter
cmp
push
aad
das
adc
add
jno
add
and
rcr
push
cltd
push
add
outsl
dec
je
clc
sbb
leave
aam
clc
push
inc
clc
mov
ret
clc
int
clc
add
add
clc
push
mov
add
adc
add
sar
fwait
xor
add
cmc
ljmp
add
sbb
add
mov
in
sub
add
clc
jle
sbb
test
and
add
clc
add
add
clc
fisubs
clc
loop
mov
pop
sar
clc
sahf
test
dec
inc
add
inc
add
imul
push
add
sbb
add
mov
add
jge
fs
push
add
in
dec
out
adc
adc
add
clc
lret
jbe
out
jg
xchg
sbb
add
dec
cli
es
mov
stc
inc
clc
mov
fbstp
cs
leave
cmp
push
add
arpl
add
xbegin
shrl
push
inc
clc
xor
dec
xchg
in
popa
add
leave
scas
cmpsb
clc
push
pop
xabort
sub
add
or
add
sbb
jnp
push
add
pushf
lret
inc
add
jo
add
mov
clc
push
call
pushf
mov
mov
ja
add
mov
add
push
add
int3
sbb
xor
add
add
lock
movsl
clc
adc
add
add
add
adc
add
add
add
inc
clc
push
sub
scas
addr16
or
sbb
add
outsl
jmp
iret
sub
clc
cli
sbb
clc
cmpsl
clc
arpl
add
add
mov
clc
test
lea
insb
iret
imul
sar
and
jl
test
jp
clc
and
add
add
pmulhw
push
mov
cmp
pop
scas
cmp
into
mov
add
mov
push
cmp
add
clc
or
test
clc
sub
in
cltd
xchg
out
mov
clc
push
pop
into
pusha
add
sub
add
popa
add
lret
add
cmp
scas
add
add
clc
adc
push
add
repnz
lods
jae
add
std
rorl
adc
adc
add
clc
das
cmovl
clc
addr16
int3
addr16
jle
add
cmp
pop
adc
add
aaa
dec
cmp
pop
clc
popf
cmp
js
clc
divl
dec
inc
add
adc
add
dec
add
add
ss
mov
mov
clc
ss
clc
pop
pop
jne
pusha
add
cmpsl
clc
dec
or
add
call
xor
add
int
clc
add
sub
add
imul
cltd
shr
pusha
add
pop
cwtl
push
add
dec
jg
adc
add
pop
and
add
clc
jle
pop
pushf
frstor
stos
cwtl
fcoms
aad
aad
out
cmp
clc
imul
xchg
jmp
add
sbb
bound
add
cmp
clc
adc
add
cmp
sub
cmp
popl
clc
push
data16
adc
clc
movsb
clc
cmpsb
clc
jns
and
ss
loope
push
fisubs
add
push
mov
add
pop
pop
cmp
dec
popa
add
mov
clc
out
ret
add
clc
and
add
out
daa
clc
bound
add
clc
pop
fldl
xabort
sub
add
add
out
incb
clc
lea
push
add
in
cs
sbb
mov
mov
add
cld
push
fldcw
clc
pop
std
js
clc
lock
add
push
add
test
stos
arpl
add
xchg
cmp
clc
sbb
sub
cmp
clc
int
add
add
popa
add
stc
mov
inc
add
leave
jno
add
in
sub
clc
xchg
out
scas
jo
add
push
xchg
pop
jne
add
in
xor
add
add
jecxz
cmpsl
clc
mov
test
cmpsl
clc
popf
jp
clc
mov
clc
mov
pusha
add
cmc
clc
fnstcw
add
clc
jg
add
scas
fs
clc
nop
cmp
cli
movsl
clc
sbb
mov
sub
data16
sbb
test
xlat
or
inc
add
mov
add
mov
mov
clc
lods
mov
push
outsb
adc
add
lcall
pop
mov
mov
mov
clc
incb
clc
pop
pop
ja
inc
clc
push
add
add
stos
pusha
add
pusha
add
idivb
jns
cmp
scas
sbb
mov
xor
add
cwtl
aas
popa
add
scas
xchg
and
add
add
roll
clc
ja
clc
xchg
cmc
push
dec
push
pushf
cmp
or
pop
jg
add
insl
push
add
je
clc
and
add
clc
repz
clc
push
inc
clc
scas
xor
add
pop
aas
xchg
mov
mov
add
mov
clc
lret
inc
clc
xor
add
sub
cltd
sub
sub
sub
jnp
jns
add
dec
mov
add
push
add
aad
dec
call
add
cmp
add
lcall
sar
sahf
repz
out
mov
iret
xor
add
decb
fcomps
adc
add
mov
xor
add
lea
clc
mov
pop
clc
add
add
xlat
or
dec
data16
mov
jle
or
ret
clc
mov
pop
int
ss
enter
insl
imul
or
xor
add
add
test
popf
incb
add
jns
jle
imul
cmp
out
push
add
divb
add
jle
add
jae
add
and
cmp
enter
mov
clc
dec
sbb
adc
add
pop
clc
test
in
xor
add
aad
jl
std
xchg
pop
push
inc
add
outsb
out
cmpsl
clc
or
mov
stos
inc
add
jnp
xor
lods
pop
mov
clc
call
jbe
enter
or
add
mov
xchg
inc
add
lea
add
lret
mov
add
repz
fists
aas
mov
repz
pop
push
fcmovb
clc
dec
mov
xor
add
add
clc
pushf
push
add
loope
ljmp
add
fldl
add
add
add
clc
into
dec
bnd
clc
mov
add
add
mov
and
add
lret
add
jp
jmp
add
pop
lock
pop
dec
test
aad
add
jnp
clc
sar
mov
aam
clc
adc
dec
mov
cmpsb
clc
in
jb
add
add
clc
lock
add
jns
je
fwait
xor
add
clc
out
lret
and
add
fidivrs
cmp
and
add
clc
inc
add
xchg
sbb
clc
pop
adc
add
clc
out
ret
add
mov
add
cmc
aaa
js
test
push
mov
gs
pop
push
sbb
pop
mov
jb
add
clc
xchg
sbb
clc
adc
add
clc
jp
insb
icebp
lret
popf
and
add
cmp
add
bound
add
mov
and
add
clc
push
fsts
add
xor
add
and
and
add
xor
add
hlt
pop
leave
mov
xchg
dec
mov
loopne
mov
fmul
inc
add
cmp
mov
add
clc
xlat
pop
clc
fs
in
shlb
add
or
mov
add
clc
cmpsb
clc
sub
push
push
stos
gs
mov
add
mov
fcmovb
clc
imul
outsb
adc
popf
or
addr16
pop
mov
out
pop
adc
clc
in
dec
gs
fcmove
aam
lea
leave
cwtl
in
ljmp
inc
add
sub
mov
add
scas
int
lret
ficoml
pop
pushf
adc
add
add
lret
mov
mov
inc
add
inc
add
inc
clc
gs
fcomip
ret
clc
xchg
iret
sbb
add
lea
clc
xchg
rdpmc
add
bound
add
inc
add
in
mov
push
mov
add
sahf
pop
fists
jno
add
add
je
mov
xlat
xor
clc
rol
clc
xor
add
lea
fwait
aad
jge
mov
movsl
clc
sub
add
add
add
clc
cmp
data16
leave
nop
sbb
add
add
push
add
sbb
arpl
add
clc
cltd
rolb
add
add
lahf
clc
cmp
add
popa
add
sbb
clc
popf
stos
addr16
jg
clc
in
insl
xabort
fisttps
add
add
add
fistpll
mov
clc
out
pop
scas
xchg
aaa
mov
inc
add
popf
dec
int
repz
clc
popa
add
leave
mov
add
xchg
jae
add
jb
add
sub
loop
jno
add
pop
lea
add
ret
push
add
lods
sub
lret
lock
adc
add
add
mov
clc
push
jle
inc
add
out
call
in
and
add
add
popf
fs
movsb
clc
je
sbb
xlat
lahf
add
add
clc
clc
add
add
push
out
sub
lea
add
add
shll
add
loope
mov
loopne
dec
outsl
mov
cmpsl
clc
push
mov
scas
stos
add
xchg
or
and
add
aad
add
push
clc
xchg
inc
add
mov
add
lahf
jle
or
mov
jge
inc
clc
xor
add
pop
dec
ss
mov
test
dec
sub
add
rcr
sbb
and
add
clc
inc
add
mov
cmp
sahf
and
in
lahf
pop
fimull
sub
pop
clc
loopne
xchg
fs
stos
sarl
dec
adc
add
xchg
pop
fnsave
ret
dec
pop
push
sub
adc
add
in
mov
clc
inc
add
pop
xchg
add
add
es
xor
xchg
adc
add
mov
clc
mov
add
add
cltd
cmp
dec
add
add
add
xbegin
add
xchg
cmpsb
clc
insl
add
add
fdiv
mov
xchg
sti
dec
jmp
clc
and
add
xchg
mov
mov
add
cltd
pusha
add
pop
mov
xchg
loop
inc
add
fbld
add
or
clc
sti
adc
add
adc
add
add
loope
xor
add
not
frstor
fld
clc
inc
add
lcall
jp
add
dec
mov
or
sbb
mov
mov
add
add
add
add
xchg
pop
mulb
add
clc
adc
insb
mov
loop
outsl
cld
push
das
cmpsb
clc
rep
shlb
add
push
add
inc
add
loopne
ja
pushf
aad
sub
in
mov
iret
out
ds
imul
sbb
xor
add
dec
or
clc
push
js
ficomps
scas
out
fstpl
jbe
clc
mov
cmp
add
addr16
xchg
and
inc
clc
add
add
add
call
test
loopne
fidivrl
xchg
ljmp
add
cmpsb
clc
xchg
div
and
add
and
add
add
mov
add
and
add
add
add
add
add
clc
cwtl
inc
add
sbb
and
clc
enter
pop
sbb
gs
bound
add
add
xchg
and
add
clc
pop
dec
jp
aad
sar
add
arpl
add
add
fistl
add
lahf
lahf
ljmp
add
das
jg
add
cmp
xbegin
mov
adc
add
pop
xchg
sbb
testb
and
jns
mov
clc
dec
mov
add
dec
sbb
clc
ljmp
add
pop
pop
fidivrl
mov
clc
sub
ljmp
sahf
mov
sub
add
clc
incl
clc
dec
pop
cmp
clc
nop
or
inc
clc
mov
pop
ret
add
in
adc
clc
pop
jle
cmp
es
mov
pop
sbb
xchg
in
push
jb
add
add
add
mov
clc
divb
add
cmp
xchg
cmp
clc
push
add
cwtl
in
aam
pushf
fs
sub
add
clc
xor
add
xabort
xchg
ss
add
ss
sub
mov
ret
add
add
clc
mov
clc
push
imul
into
mov
jle
inc
clc
pop
popf
in
sbb
cmp
and
add
clc
addr16
hlt
push
dec
mov
cmp
mov
add
xchg
ret
lea
xor
clc
ljmp
cmp
and
add
inc
clc
mov
add
add
add
cmp
add
ds
sub
add
sub
daa
clc
pop
or
clc
or
xchg
mov
add
clc
pop
test
mov
sub
pop
clc
xor
add
cltd
and
add
shll
add
push
add
xbegin
bound
add
xchg
mov
add
clc
add
add
add
fs
add
add
test
add
in
std
popa
add
pop
lods
stos
push
jo
add
add
xor
add
add
mov
mov
pusha
add
stos
adc
jns
ja
clc
cmp
mov
das
mov
adc
add
clc
xor
add
iret
mov
int
mov
sbb
push
jb
add
es
inc
clc
jmp
enter
add
push
add
sbb
clc
lcall
xchg
scas
decb
xor
add
cltd
add
xor
movsl
clc
add
add
clc
add
dec
mov
cli
clc
dec
jecxz
movsb
clc
inc
add
jbe
pop
inc
clc
mov
scas
jbe
xchg
xchg
inc
clc
push
hlt
out
xbegin
push
lret
fildl
leave
push
std
pop
aaa
imul
out
mov
out
lea
clc
loopne
shrl
inc
clc
testb
clc
mov
leave
lret
clc
sub
lock
clc
sar
test
xchg
jae
add
inc
add
pop
cmp
xabort
outsb
push
fwait
push
xchg
movsb
clc
or
add
jmp
stos
stc
sbb
xor
add
loopne
push
push
addr16
xchg
inc
clc
stc
js
fisubrs
clc
loopne
push
pop
lods
test
aam
in
or
ljmp
ret
clc
inc
clc
lret
cmp
sar
inc
add
fninit
clc
test
js
clc
lret
add
add
incl
add
sarl
rep
sbb
mov
in
and
add
jge
imul
pop
clc
mulb
cmp
xchg
mov
add
clc
dec
je
xchg
add
add
mov
add
je
clc
dec
jle
add
repz
clc
js
add
scas
mov
push
pop
clc
jmp
inc
add
notl
add
data16
stos
mov
add
vmovlps
add
pop
mov
add
cmp
jmp
clc
cmp
sahf
stos
dec
jo
add
clc
adc
mov
mov
stos
add
add
add
add
xchg
cmp
jmp
stc
test
cs
cmp
add
mov
lea
mov
jno
add
jnp
fucom
clc
push
and
add
pop
clc
adc
clc
xchg
xor
add
dec
rol
clc
int
sbb
iret
leave
out
jg
sbb
xbegin
cmp
js
dec
inc
add
iret
inc
clc
inc
clc
or
add
aas
dec
sbb
cmp
xor
add
xor
push
movsl
clc
in
outsl
cltd
pop
test
addr16
sub
clc
jl
add
fsub
clc
jno
add
add
fsubs
add
xchg
push
xchg
adc
add
clc
xor
add
cmp
icebp
pop
jle
add
mov
xchg
test
xor
add
popa
add
pop
mov
push
mov
xchg
addr16
cmp
clc
sahf
sub
push
cmp
add
js
push
add
dec
sub
and
add
pop
or
add
add
adc
add
es
jbe
clc
mov
clc
xchg
sbb
dec
add
add
add
xchg
pop
clc
dec
out
inc
clc
outsb
dec
xor
add
iret
mov
add
xchg
and
add
mov
scas
add
pop
arpl
add
jmp
scas
std
sbb
aaa
add
add
clc
aas
pop
sbb
test
clc
mov
push
or
xchg
data16
jg
ja
or
add
push
add
sub
cmc
cmp
cmp
into
inc
clc
in
dec
mov
mov
jo
add
dec
and
add
add
sbb
inc
add
jmp
clc
out
call
push
add
movsl
clc
inc
add
bnd
add
jge
sar
and
inc
add
mov
add
ret
clc
fisttpll
cmp
xchg
mov
push
add
mov
clc
cmp
xbegin
insl
dec
data16
or
clc
cli
sahf
sbb
pop
imul
mov
test
cmp
add
icebp
aad
clc
lock
clc
fs
clc
add
push
sub
flds
push
clc
push
jns
scas
imul
xor
pop
or
add
add
add
repz
insb
sub
add
repz
jmp
jae
add
clc
xor
add
clc
mov
clc
jns
add
inc
clc
dec
push
clc
fxch
movsl
clc
push
sar
xabort
add
mov
add
pushf
or
adc
cmp
pop
xchg
lret
gs
xchg
mov
mov
int
mov
sbb
push
stos
xor
mov
add
push
add
lret
clc
repnz
push
jns
movsb
clc
inc
clc
push
add
push
add
cmc
hlt
lahf
adc
add
jns
add
jl
xchg
mov
adc
add
clc
pop
mov
int3
bound
add
clc
ffree
clc
int
or
js
jp
shll
dec
dec
hlt
scas
add
jecxz
jecxz
inc
clc
test
and
mov
sarb
mov
clc
decb
add
mov
clc
leave
inc
clc
mov
clc
pop
sub
clc
adc
jp
clc
ficomps
dec
icebp
sbb
mov
js
clc
inc
add
cmp
jl
xabort
clc
imul
mov
inc
add
jno
add
add
xabort
test
aam
clc
fsubp
clc
cmp
xchg
fwait
inc
clc
test
pop
out
out
jg
clc
inc
add
inc
add
push
clc
adc
add
add
jle
clc
pop
pusha
add
dec
mov
cld
mov
dec
xchg
ja
or
mov
cmp
fdivs
mov
add
popl
add
aas
mov
mov
clc
sahf
ss
btc
ss
add
jle
js
xchg
inc
add
daa
clc
clc
call
push
add
xchg
mov
cmp
cli
idivl
jns
lock
or
imulb
jmp
mov
clc
xchg
xchg
cmp
mov
clc
add
aas
sbb
xlat
mov
sbb
daa
clc
mov
clc
outsl
xor
inc
add
sub
lods
outsb
lods
notl
add
lret
fsubr
out
pop
loop
add
add
shrb
clc
cmp
cmp
inc
clc
test
movsb
clc
add
or
mov
loope
ljmp
add
push
sbb
add
imull
stc
out
das
and
add
clc
xlat
pop
sbb
ret
and
add
add
jmp
clc
icebp
aad
ja
clc
jne
into
cmp
clc
sub
clc
rorb
sbb
add
jg
inc
add
pop
leave
out
jg
mov
idivl
ds
xor
mov
clc
push
adc
add
push
clc
or
adc
add
cmpsb
clc
repz
clc
out
fs
xor
add
add
mov
loopne
push
push
add
mov
add
add
add
xchg
mov
insb
cmpsl
clc
daa
clc
cmpsb
clc
and
add
add
sar
ljmp
insb
jb
add
xchg
mov
mov
add
daa
clc
nop
gs
cmp
jno
add
fcomps
jmp
mov
lods
pop
cmp
push
mov
add
add
inc
clc
dec
popf
and
push
clc
jo
add
sti
push
test
clc
jne
mov
sarb
clc
push
mulb
clc
jbe,pt
add
add
cmpsl
clc
fwait
icebp
loope
adc
add
xchg
enter
cmpsb
clc
pop
data16
xor
add
jns
pushf
push
cmp
clc
cld
ljmp
movsl
clc
loopne
xchg
jo
add
push
add
dec
mov
mov
lods
xchg
fstpl
mov
fcmovnb
clc
cmp
xchg
mov
test
addr16
inc
clc
cmp
pop
xchg
imul
insb
or
add
cmp
dec
jl
mov
and
add
add
inc
add
test
mov
sbb
cmc
roll
stos
sbb
pop
test
pusha
add
jnp
clc
clc
mov
call
adc
add
add
test
pop
lret
clc
aas
jl
bound
add
add
pop
mov
dec
clc
cmc
dec
fstps
pushf
jmp
clc
jnp
jge
clc
jb
add
clc
gs
xor
add
cmp
repz
clc
dec
arpl
add
stos
or
rcl
inc
clc
mov
mov
clc
cmp
cmp
sahf
pop
incl
sub
clc
jae
add
or
lea
push
clc
push
add
xor
add
push
fsub
clc
push
jae
add
add
xchg
push
popa
add
jnp
mov
add
jns
popa
add
daa
clc
es
mov
add
adc
add
add
add
add
sub
mov
stos
xchg
sbb
mov
add
xchg
notl
add
ljmp
add
inc
add
cmc
fucom
clc
rorb
xchg
lods
mov
clc
ret
clc
or
inc
clc
es
add
dec
test
xchg
test
mov
mov
or
rol
clc
jne
movsb
clc
and
add
add
inc
clc
push
add
xchg
call
add
add
add
push
cltd
push
dec
mov
add
jg
mov
add
xchg
rcrb
lods
and
add
clc
mov
sub
lock
jge
and
add
lea
add
sar
dec
jb
add
sar
or
repz
mov
enter
mov
stos
mov
mov
sbb
in
scas
dec
mov
popa
add
xchg
adc
xor
add
add
sti
add
add
jmp
clc
jp
push
lea
jae
add
popf
sub
add
sbb
push
dec
nop
sbb
sbb
jbe
into
add
add
add
mov
cmpsl
clc
cmp
add
cmp
daa
clc
clc
out
out
xor
add
clc
fbstp
add
stos
adc
add
fcoml
add
fstpl
add
leave
clc
push
cmp
add
inc
clc
daa
clc
pop
bnd
negl
xor
add
add
clc
sar
fst
or
jmp
add
hlt
fisubrs
insl
mov
jnp
clc
mov
or
add
clc
into
xchg
or
sub
lock
add
pop
push
clc
enter
nop
inc
add
cmp
call
jmp
fiaddl
clc
out
iret
jns
push
add
dec
and
add
pusha
add
cmpsb
clc
inc
add
ret
clc
mov
std
jecxz
mov
loopne
xchg
add
add
pop
leave
lahf
mov
fs
cmp
xchg
js
fnstcw
xor
add
mov
lods
inc
add
stos
loopne
push
add
add
lret
inc
clc
jp
gs
xchg
sbb
hlt
add
add
cmp
mov
mov
pop
shlb
add
pop
pusha
add
sub
clc
ret
push
clc
ss
cwtl
cmp
cmp
call
inc
clc
loop
std
cmp
sub
inc
clc
clc
mov
clc
movsb
clc
jnp
pop
jp
ret
clc
push
add
push
clc
enter
lahf
mov
jbe
inc
clc
dec
pop
mov
clc
popf
mov
clc
clc
dec
xchg
cmp
clc
out
data16
aad
clc
nop
out
mov
daa
clc
je
add
std
pop
clc
stc
stos
dec
xor
add
testb
pop
ret
clc
adc
add
add
mov
cmp
add
dec
stc
jae
add
xchg
scas
insb
mov
mov
push
gs
imul
xchg
mov
rorb
xlat
cltd
inc
add
cmp
clc
mov
cmc
enter
fs
push
shl
clc
dec
rcll
add
test
clc
outsl
movsl
clc
arpl
add
adc
add
std
imul
add
add
add
mov
add
in
inc
add
cmp
stos
loop
cltd
insl
leave
sub
in
stc
outsb
data16
jae
add
pop
clc
cmp
xlat
and
add
add
push
in
sar
add
mov
stc
jae
add
add
insb
push
int
clc
addr16
lock
incb
add
sub
data16
pop
shl
ljmp
add
clc
xor
test
movsl
clc
jg
ljmp
inc
clc
aas
sub
fucom
clc
dec
xchg
xlat
adc
add
xchg
xchg
xchg
sub
jno
add
lods
push
clc
sub
dec
lret
mov
sub
add
adc
jns
cmpsb
clc
add
test
lods
clc
cld
rorl
clc
jmp
loop
cmc
ss
xchg
mov
clc
dec
push
add
xor
add
lcall
mov
cmp
add
mov
cmp
mov
xchg
fsubrs
clc
pop
insb
fs
leave
and
add
add
insl
jae
add
cmpsl
clc
cltd
inc
add
or
enter
jns
jne
arpl
add
pop
clc
cs
clc
lret
clc
or
cli
or
mov
pop
xor
add
adc
sub
clc
jbe
and
add
cmp
push
xor
js
inc
add
sbb
add
xlat
or
clc
sub
and
add
push
adc
add
xor
add
xor
stos
clc
push
jns
clc
shrb
add
push
add
add
pop
clc
in
xchg
cs
add
add
mov
popf
clc
repz
and
add
notl
add
jnp
cld
rorl
add
and
loopne
add
xor
outsb
fcomps
add
add
clc
xchg
scas
pop
cmp
push
icebp
xor
add
addr16
mov
js
daa
clc
lret
mov
adc
add
mov
clc
shlb
jae
add
add
add
clc
jecxz
jmp
fwait
or
cmp
add
fildll
loopne
pop
xchg
div
adc
add
add
pusha
add
xchg
fs
push
add
xabort
or
insl
xor
push
add
clc
add
add
lcall
negl
and
add
clc
addr16
gs
sbb
sub
jns
push
sub
mov
clc
or
add
ret
push
add
sub
dec
and
scas
inc
clc
sub
imul
and
add
clc
sbb
xor
clc
xor
push
clc
add
add
add
jb
add
stos
ret
lods
outsb
sub
push
adc
add
add
clc
in
insb
out
inc
add
lcall
in
or
fldcw
cmovs
add
jl
sar
xchg
adc
stos
lret
add
add
mov
clc
daa
clc
cmp
ds
imul
hlt
repnz
test
stos
sbb
jle
in
and
add
clc
cwtl
mov
clc
and
add
add
add
jecxz
shlb
add
add
add
clc
jbe
int3
outsb
or
add
add
jl
sub
repnz
test
dec
sub
jae
add
fbstp
push
clc
xor
pop
test
cmp
add
xchg
je
clc
or
test
clc
dec
mov
mov
clc
sub
xchg
rclb
add
mov
clc
xchg
jle
cmp
sub
jle
dec
imul
add
add
xor
add
movsl
clc
push
sub
jge
leave
and
add
into
push
push
add
mov
pop
cmp
push
add
xchg
jp
cmp
mov
fimull
xchg
loope
xbegin
notl
sbb
cmpsl
clc
xchg
or
add
push
jmp
clc
knotw
mov
push
add
shrb
clc
out
push
popa
add
mov
lret
add
stc
std
mov
clc
add
cmp
addr16
aad
cmp
add
xbegin
add
push
add
cmp
clc
adc
add
add
and
add
xor
add
in
cmp
sti
mov
stos
js
jnp
cmp
clc
xor
pop
sbb
sahf
xchg
or
mov
cmp
ret
clc
shll
pop
scas
dec
loop
xchg
dec
jne
xor
add
add
clc
repz
push
es
pop
push
or
add
in
push
or
aad
jbe
add
sbb
add
cmc
fwait
aad
mov
mov
clc
cmp
clc
mov
adc
add
add
test
and
add
ljmp
push
add
pushl
dec
arpl
add
pop
mov
cmp
popf
sbb
in
in
mov
add
clc
outsb
mov
clc
cmp
add
mov
sahf
add
mov
fcmovne
push
mov
cltd
leave
jg
lcall
clc
cmp
lock
clc
sub
clc
dec
mov
clc
mov
clc
cmp
mov
clc
inc
clc
or
cmp
gs
adc
adc
add
jo
add
add
test
test
add
and
add
xchg
jg
lahf
arpl
add
fs
cltd
gs
mov
cmp
jns
clc
fisubs
add
pushl
fsub
clc
call
clc
mov
clc
sub
add
add
inc
clc
push
adc
add
add
jne
inc
add
dec
insb
sar
cmp
xchg
jecxz
or
clc
stos
jne
mov
movsb
clc
inc
add
push
xabort
aam
clc
xor
pminsw
clc
and
add
xchg
cs
in
and
add
insl
add
add
sbb
in
cmp
clc
cmc
pop
sbb
addr16
into
cltd
mov
popa
add
mov
xchg
ja
cltd
sbb
call
add
add
jbe
xor
inc
clc
pop
xchg
dec
scas
add
add
push
in
mov
add
cmp
add
mov
clc
int3
dec
clc
repnz
add
add
into
or
clc
or
add
clc
and
pop
mov
add
lret
add
clc
xlat
inc
clc
pop
mov
add
add
clc
adc
clc
pusha
add
fidivl
add
add
pusha
add
push
pop
pop
mov
push
add
jmp
add
cmp
push
add
dec
sar
pop
bnd
xbegin
clc
daa
clc
rcr
minps
clc
aam
add
jg
clc
or
add
clc
adc
add
icebp
xchg
cmp
jmp
out
out
jmp
add
cmp
outsb
add
add
add
clc
fisubrs
clc
movsb
clc
xchg
popf
pop
clc
or
add
mov
add
add
arpl
add
out
scas
jae
add
or
clc
sbb
add
pop
outsl
or
mov
add
int3
cwtl
mov
clc
add
add
inc
add
jl
cmpsb
clc
cs
scas
roll
push
fistpl
or
scas
jg
movsb
clc
xbegin
add
add
jb
add
int
add
pushf
insl
lock
mov
clc
fstpl
push
clc
xlat
adc
add
gs
pop
ret
fisttpll
jnp
clc
dec
pop
xchg
mov
add
into
or
clc
insb
pop
jl
iret
push
test
imul
clc
stos
jp
clc
int
clc
mov
popa
add
push
bnd
inc
add
add
add
clc
mov
add
repz
xabort
enter
or
sbb
clc
outsb
mov
push
cmp
movsb
clc
jne
clc
push
popa
add
or
push
loope
sahf
sahf
movsb
clc
sub
add
xor
add
clc
sbb
add
loop
sbb
add
add
or
clc
int3
aam
fdiv
insl
lret
pop
cs
gs
pop
test
inc
add
pop
bnd
add
clc
jmp
repz
dec
fidivs
enter
clc
mov
add
clc
push
sub
add
inc
add
insl
jmp
insb
fmull
sbb
add
xchg
xor
add
test
adc
add
add
add
jb
add
clc
jno
add
clc
das
fidivs
dec
and
add
mov
clc
cmp
loope
ret
scas
fcmovb
clc
into
lcall
cmp
add
push
clc
mov
add
mov
clc
mov
test
xabort
aad
clc
out
jecxz
gs
xchg
mov
clc
test
inc
add
inc
add
sub
add
add
mov
sbb
fidivl
add
cmp
sbb
add
xchg
pop
cltd
inc
clc
cmp
clc
dec
pop
loope
insb
cmp
dec
jecxz
xchg
or
vminps
clc
sbb
or
add
sub
bound
add
test
jp
clc
jbe
fsubs
add
add
push
rorb
add
mov
clc
cmp
xbegin
add
add
clc
and
add
test
mov
clc
cmp
xor
add
ds
cld
stos
jp
mov
cmp
sbb
add
mov
xlat
clc
lods
mov
add
in
divl
add
add
add
jp
call
clc
xchg
loopne
mov
das
mov
add
add
add
fldt
xchg
shlb
push
hlt
sar
out
jmp
jnp
xor
add
sub
add
sbb
add
add
add
in
lret
cmp
add
jo
add
add
mov
mov
sar
mov
dec
dec
repz
xchg
test
clc
inc
add
jo
add
push
clc
loopne
add
add
fbstp
pop
loop
push
inc
add
mov
add
push
cmp
add
cwtl
xlat
sbb
cltd
fimull
data16
int3
push
mov
add
xor
jp
clc
fimuls
scas
das
dec
jns
cld
xor
add
popl
aas
cmp
sbb
sub
loopne
dec
pop
jns
aam
clc
repz
clc
test
sub
imul
add
push
add
scas
and
add
mov
adc
add
clc
pop
fmull
clc
stc
cmpsl
clc
outsb
sub
loop
cmp
sbb
inc
clc
mov
fsubrs
jne
inc
add
cli
pop
adc
add
xor
add
clc
add
add
mov
mov
add
adc
add
lea
rcll
add
pop
and
add
mov
push
push
add
pop
add
xlat
fidivl
gs
cmp
or
dec
pushf
fwait
and
add
dec
bound
add
adc
add
and
dec
gs
mov
push
shl
xchg
dec
gs
outsb
jecxz
lret
add
clc
sbb
add
cs
ret
clc
leave
out
xor
add
add
ficoml
dec
ficoml
adc
add
clc
adc
clc
shlb
add
mov
add
out
push
add
dec
rcrl
add
insb
int
cmp
jnp
adc
add
push
clc
leave
cmp
clc
xchg
out
loop
xor
add
add
sub
popa
add
fs
pop
clc
push
add
jae
add
push
add
loope
xchg
das
gs
ret
stos
dec
push
add
test
test
add
sbb
in
ds
clc
sub
sbb
adc
add
add
and
add
clc
jle
outsb
xbegin
fdivrl
add
daa
clc
pop
inc
clc
adc
add
ja
clc
negb
mov
clc
imul
jne
cmp
add
push
mov
clc
jmp
adc
add
add
xchg
sbb
add
pop
jmp
fsubs
xlat
mov
or
cs
add
testb
lret
lret
scas
rcrl
sbb
lods
xabort
cld
iret
shr
ljmp
add
push
add
mov
cmp
xchg
insl
inc
clc
int3
into
leave
repnz
clc
push
add
jbe
popa
add
int
daa
clc
into
ds
or
xor
and
add
leave
stos
sbb
add
mov
clc
mov
ds
clc
inc
clc
dec
add
add
lock
xchg
and
in
lea
adc
add
loope
ja
cmp
js
pop
and
add
add
add
sbb
bound
add
clc
incl
add
loopne
iret
loope
inc
clc
inc
clc
mov
clc
gs
loop
jo
add
push
dec
mov
add
ja
sahf
pop
outsl
jno
add
add
sar
pop
clc
iret
push
mov
clc
int
add
add
clc
nop
sbb
push
das
push
xlat
cmpsl
clc
xchg
stos
outsl
sar
add
aas
lcall
add
pop
or
ljmp
adc
add
mov
sahf
cld
ljmp
add
ljmp
clc
push
pop
dec
ds
pop
inc
clc
adc
in
dec
pop
adc
add
imul
loopne
js
cmp
add
mov
add
insb
data16
sub
add
add
add
arpl
add
mov
xchg
xchg
xchg
lods
scas
pushf
mov
fistps
add
sub
clc
aam
sar
pop
fld
clc
out
movsl
clc
xbegin
cmp
loop
roll
add
add
clc
sbb
cld
or
xor
add
idivl
push
add
pop
ss
adc
clc
movsb
clc
repnz
pop
ret
add
es
push
and
add
popa
add
scas
in
push
add
ljmp
clc
inc
clc
add
add
jle
clc
movups
add
add
adc
add
out
inc
add
or
xor
filds
popf
jmp
xchg
ss
clc
sub
pop
mov
add
mov
sub
clc
mov
out
jge
clc
loopne
insl
cmp
cmpsb
clc
dec
inc
clc
xchg
pop
cmp
lahf
and
add
sub
jge
clc
test
mov
add
out
or
sbb
clc
pop
sub
mov
push
add
jle
popa
add
mov
add
sbb
add
add
cmp
pop
arpl
add
or
fnstsw
pop
mov
cltd
dec
jl
aam
jns
imul
add
xor
add
push
clc
cmp
clc
or
clc
push
sbb
and
add
cmp
fisubrs
add
fcmovu
sub
clc
add
push
add
clc
push
push
cmc
cmpsl
clc
jb
add
clc
das
jo
add
dec
lock
cmp
clc
insl
clc
push
mov
adc
add
mov
push
add
into
icebp
cmp
daa
clc
and
add
outsb
xor
decl
sbb
in
xor
add
clc
insb
es
dec
and
ret
jno
add
std
leave
sti
sti
jne
mov
add
es
jnp
mov
clc
jmp
shll
gs
repnz
popa
add
jp
aam
ja
mov
pop
mov
lret
jecxz
sbb
int3
call
clc
int3
es
sub
inc
clc
das
mov
add
sahf
mov
pop
cmp
jnp
cwtl
faddp
clc
or
sub
clc
jne
clc
mov
std
outsb
mov
call
gs
loope
jle
je
mov
xchg
insb
inc
add
cld
imul
inc
clc
das
pop
pop
add
jmp
add
sub
pop
xabort
dec
imul
add
clc
jg
push
xchg
repz
push
clc
sbb
jne
add
xchg
jge
add
cmp
mov
nop
pop
push
push
cmp
clc
pop
clc
sbb
and
add
sub
popa
add
and
mov
pop
xchg
cmp
sub
clc
test
sub
add
mov
loopne
dec
lret
push
add
add
xchg
repz
pop
movsb
clc
dec
push
add
cmc
fnstsw
jle
bound
add
clc
lods
arpl
add
sub
clc
imul
pusha
add
mov
xbegin
cmc
stos
in
inc
clc
testl
clc
jg
sub
add
fists
xor
jno
add
add
add
add
add
mov
add
cmp
out
jne
clc
loop
jnp
add
jmp
add
mov
add
inc
add
mov
add
fimull
xchg
jp
inc
add
sbb
adc
add
clc
clc
loopne
jle
leave
imul
sarl
mov
fs
dec
lea
popf
xchg
push
add
cmp
clc
bound
add
add
add
clc
jecxz
imul
mov
add
hlt
stos
mov
clc
push
mov
cmpsb
clc
cmp
pop
std
mov
mov
add
push
int
mov
sbb
jg
leave
das
sub
aaa
push
add
inc
clc
xchg
jae
add
add
jge
mov
adc
add
add
clc
out
mov
add
sar
jge
add
adc
add
and
jecxz
cmp
add
clc
fimull
pop
inc
add
stos
mov
jb
add
das
mov
adc
add
clc
fsubs
sahf
xchg
jmp
push
adc
add
test
add
test
addr16
xlat
push
dec
sar
sar
clc
clc
lret
clc
xchg
data16
push
mov
add
add
dec
jl
clc
inc
add
cmp
clc
es
or
jmp
add
add
js
clc
dec
pop
aam
push
add
sbb
clc
sbb
inc
add
loope
cmp
add
jno
add
xor
add
clc
mov
or
clc
cmp
clc
enter
in
push
sub
movsl
clc
jg
in
sub
xlat
mov
clc
push
add
jae
add
mov
mov
add
mov
popa
add
nop
loop
nop
fs
add
add
add
fcomip
jb
add
clc
cmp
pop
pop
ljmp
mov
jg
add
xchg
daa
clc
addr16
xchg
aad
adc
add
xabort
mov
dec
out
xchg
hlt
push
add
or
or
jmp
out
inc
clc
das
daa
clc
xchg
fisubrl
mov
movsb
clc
push
add
add
clc
stc
mov
fistpll
cwtl
bound
add
clc
xor
cmp
push
xchg
lret
xor
rorb
ficoml
add
loop
or
add
add
ucomiss
add
push
add
int3
lock
pusha
add
cwtl
push
inc
add
push
cmpsl
clc
bound
add
mov
enter
shl
clc
aaa
xor
add
mov
add
out
mov
and
add
jnp
fwait
or
test
stos
jmp
or
sub
mov
or
out
mov
or
aaa
mov
add
add
out
mov
mov
scas
fwait
pop
xlat
and
add
mov
dec
scas
bound
add
psubd
clc
dec
dec
test
cmp
divb
push
sar
push
ja
scas
or
xchg
mov
dec
adc
add
jecxz
ss
clc
mov
cs
inc
clc
dec
lock
add
xlat
xchg
xabort
leave
movsb
clc
add
add
add
push
push
dec
push
add
add
jmp
fcompl
cmc
mov
das
pop
lret
mov
mov
add
mov
mov
mov
add
repz
add
fisubs
add
in
add
add
js
clc
mov
lret
clc
ret
clc
mov
or
mov
clc
arpl
add
inc
add
scas
aam
add
jno
add
test
leave
mov
cmp
add
xchg
jbe
add
mov
clc
adc
mov
je
xabort
cmp
clc
lcall
xchg
sbb
jns
add
out
push
aas
mov
pop
or
clc
push
and
fstps
clc
inc
clc
pop
imul
add
mov
or
cmp
cld
ss
add
mov
fildll
sar
inc
clc
mov
sbb
stos
mov
enter
ja
arpl
add
clc
jbe
xchg
lahf
divl
dec
mov
add
sub
add
iret
fsts
add
sbb
clc
cmp
and
add
jns
jge
or
movsl
clc
dec
inc
add
pop
and
add
fsts
ja
cmpsl
clc
add
push
add
aaa
bound
add
addr16
js
mov
cs
sub
imul
in
stos
jnp
clc
xor
add
mov
add
add
dec
in
lret
aaa
inc
add
sub
pushf
push
in
push
push
xabort
add
xbegin
ret
clc
mov
add
fwait
xchg
daa
clc
mov
dec
dec
ljmp
push
add
xor
add
push
or
adc
add
clc
or
push
cmp
xor
add
and
add
aad
pop
jno
add
ljmp
push
mov
aas
dec
in
sbb
lock
add
xor
add
in
inc
clc
clc
aaa
nop
cltd
jnp
mov
jno
add
js
add
and
add
add
clc
and
add
clc
sbb
clc
icebp
pop
movsl
clc
jmp
add
gs
pop
cmp
xchg
addr16
ss
or
clc
nop
pushf
pop
hlt
mov
ret
clc
pushf
notb
stc
push
clc
repz
add
mov
add
aad
push
add
clc
sub
rcrl
je
clc
imul
nop
cmp
rsqrtps
add
clc
nop
xchg
and
add
sbb
int
ror
jmp
bound
add
cld
pop
clc
fs
and
add
add
add
mov
pop
jle
or
dec
popf
stos
push
add
mov
clc
int3
data16
xchg
dec
push
icebp
jmp
pop
dec
jg
jns
mov
popf
clc
pop
cmp
add
clc
cmpsb
clc
clc
dec
mov
cmp
clc
cmp
sub
add
inc
add
fidivl
push
add
push
int3
sub
clc
xchg
dec
in
xabort
add
add
clc
sbb
inc
clc
add
add
movsb
clc
pop
sub
xor
add
and
add
data16
push
mov
adc
add
clc
fs
mov
clc
pop
testb
push
xor
add
clc
int
in
push
clc
ljmp
hlt
in
xbegin
shrb
and
or
jmp
clc
mov
xor
adc
add
cmp
add
aas
sbb
add
inc
clc
sbb
add
cmp
js
add
scas
out
clc
dec
sub
xchg
movsb
clc
fnstcw
mov
push
push
and
add
clc
cmpsl
clc
push
sub
xbegin
clc
pop
clc
stos
out
add
add
clc
int3
test
outsl
mov
xchg
xchg
adc
pusha
add
rclb
add
outsb
mov
clc
dec
aad
push
mov
push
cwtl
xabort
clc
mov
clc
lcall
or
add
lods
fwait
cmpsl
clc
push
jbe
or
pop
daa
clc
pop
jo
add
clc
push
add
inc
clc
sbb
clc
adc
add
test
jno
add
inc
clc
stos
xbegin
das
in
mov
clc
inc
clc
push
cmc
dec
dec
testl
push
add
or
xchg
xchg
in
xchg
loope
fs
mov
int
popa
add
xchg
clc
adc
add
add
imul
cli
movsb
clc
sarl
inc
clc
mov
pop
clc
leave
or
add
jg
clc
xor
add
add
add
lods
cwtl
xchg
xor
add
add
pop
dec
xchg
jmp
push
add
test
mov
clc
sbb
add
jae
add
add
xchg
xchg
sbb
movsb
clc
out
pop
outsl
ds
xchg
mov
clc
in
or
fs
fistpll
xchg
lock
add
sub
add
and
cmp
push
add
cmpsb
clc
jmp
add
and
add
push
cwtl
enter
clc
lea
neg
mov
clc
cmpsl
clc
cmp
repnz
call
add
xchg
mov
push
add
ret
clc
test
outsb
and
add
clc
icebp
std
adc
inc
add
push
imul
clc
cmp
add
cmp
clc
xchg
adc
jae
add
xchg
faddl
add
add
gs
daa
clc
mov
add
ss
test
adc
add
xchg
sbb
sub
mov
xor
add
mov
clc
lret
xchg
and
add
clc
fdivrl
clc
mov
pusha
add
pop
push
gs
sub
lret
dec
mov
or
mov
add
aas
cmp
clc
or
add
or
add
aad
add
ljmp
mov
clc
add
add
mov
add
lods
jg
ficoml
push
clc
pop
mov
add
xor
add
add
hlt
mov
and
add
clc
scas
sbb
xchg
sar
clc
fcompp
fadds
add
lea
dec
bound
add
xor
add
dec
std
loope
sub
stos
mov
add
sub
clc
xchg
inc
clc
xor
add
insl
ret
in
cmp
add
sbb
sar
mov
movsl
clc
sbb
stos
in
mov
add
mov
clc
push
int
xlat
adc
add
insb
data16
out
pop
xor
out
or
out
dec
inc
clc
cmpsl
clc
xchg
jnp
add
pop
clc
mov
pop
sar
add
imul
clc
sbb
sbb
clc
notl
scas
mov
clc
test
outsl
cltd
sar
clc
xor
add
clc
pop
xor
add
cmp
test
push
out
in
cmpsl
clc
lods
push
int3
and
add
add
gs
into
mov
clc
xlat
inc
clc
add
lcall
add
fsubs
pop
fidivl
add
add
std
arpl
add
mov
sbb
sbb
add
in
stos
fidivrs
or
xchg
or
test
jl
ret
clc
jne
daa
clc
mov
xbegin
xchg
icebp
in
jbe
mov
ret
clc
sar
clc
sar
jne
cmpsl
clc
dec
das
sti
stos
inc
add
cli
inc
clc
pop
mov
push
xchg
sar
outsb
fimuls
cmpsb
clc
pushf
xor
xchg
add
add
clc
or
clc
outsb
lods
loope
push
clc
add
clc
adc
add
out
fs
icebp
jno
add
add
sbb
mov
clc
insl
or
clc
out
cmpsl
clc
pop
insl
and
add
aam
lret
ljmp
sbb
add
vaddps
jb
add
in
ja,pt
test
shr
es
xor
add
aaa
mull
add
sar
clc
ja
add
jns
add
pusha
add
aaa
mov
add
jecxz
xor
add
aas
movsl
clc
push
outsl
pop
fidivs
add
sub
add
insl
mov
clc
cmp
sub
clc
cltd
xor
ret
clc
out
fimuls
jmp
sar
fisttps
inc
clc
out
arpl
add
and
add
cmp
cmp
xor
clc
nop
cmc
inc
add
xor
add
clc
cmp
pop
fdivl
clc
push
clc
lcall
add
mov
movsb
clc
rol
clc
stc
push
add
repz
sar
mov
imul
popf
enter
cs
clc
sub
cli
sbb
clc
push
xchg
or
add
ss
pop
xchg
test
inc
add
cmpsb
clc
mov
hlt
add
mov
add
iret
add
add
clc
mov
add
sbb
lcall
in
cmp
dec
pop
ret
pop
int3
fstpt
jo
add
add
add
cld
cmpsl
clc
cmp
in
jnp
cmp
add
popa
add
xor
push
add
mov
cmpsl
clc
cwtl
adc
add
add
adc
sbb
clc
out
scas
cmp
imul
dec
adc
add
clc
push
mov
clc
sbb
clc
push
iret
sub
add
or
or
clc
addr16
pop
inc
clc
sbb
in
decl
add
sub
nop
mov
mov
add
mov
add
mov
dec
hlt
sbb
add
jp
clc
pop
cmp
add
jmp
jl
and
add
add
push
clc
dec
gs
clc
jnp
clc
mov
lea
push
xchg
aaa
pop
clc
cltd
cmpsb
clc
mov
jl
clc
pop
mov
clc
int
clc
push
clc
and
add
cmp
add
add
add
clc
jle
sbb
clc
push
add
test
xbegin
jge
test
out
cmc
xor
clc
lret
add
add
int3
add
add
jo
add
sti
pop
jle
clc
or
add
fisttps
sbb
daa
clc
in
xbegin
or
add
lahf
data16
push
mov
xchg
pop
jle
add
call
out
dec
lea
inc
add
lahf
stc
mov
int3
mov
add
jno
add
xabort
add
pop
mov
clc
fsubrs
mov
mov
inc
add
rcrb
cli
mov
xor
jbe
jb
add
xchg
dec
scas
xchg
pop
and
add
push
mov
clc
sbb
sbb
daa
clc
insl
inc
clc
jmp
add
gs
xchg
dec
push
popf
inc
add
test
sub
imul
scas
addr16
push
jmp
add
cmpsl
clc
cmp
mov
jae
add
call
push
jp
xor
add
add
add
into
mov
add
cmp
lock
add
insb
sub
jnp
push
clc
test
in
mov
mov
clc
xlat
je
push
push
sbb
add
or
clc
jns
clc
cmp
add
mov
scas
iret
daa
clc
pop
std
pusha
add
rorl
pop
inc
clc
in
inc
clc
jae
add
jmp
clc
xor
add
clc
jno
add
dec
pop
xchg
stos
ret
clc
or
clc
sub
add
mov
add
push
pop
jo
add
inc
add
mov
xor
add
dec
inc
add
adc
lods
fidivrl
call
push
add
popf
fbld
add
add
clc
push
das
inc
clc
xchg
mov
add
pop
hlt
pushf
mov
stos
fadds
add
add
push
add
popf
sbb
cwtl
adc
add
add
add
nop
push
int
test
mov
lret
push
cmp
add
bound
add
clc
arpl
add
cmp
fucomip
bswap
jns
je
add
enter
add
add
clc
push
mov
clc
int3
xchg
shlb
inc
clc
icebp
mov
push
xor
add
into
or
out
aad
or
add
add
inc
clc
jg
in
xchg
inc
add
xchg
aaa
sub
cmpsl
clc
je
int
fcmovne
xchg
ror
mov
cwtl
mov
add
cmp
xchg
mov
sti
fldt
and
add
add
in
fdivrs
mov
clc
out
jne
clc
push
add
arpl
add
andnps
push
add
xor
add
loope
xlat
dec
jo
add
add
inc
add
dec
and
inc
add
pusha
add
xor
add
cld
imul
in
mov
adc
mov
pop
sar
add
inc
add
pop
push
imull
pop
data16
dec
ds
insl
dec
fbld
inc
clc
ja
outsl
mov
sub
add
dec
dec
stc
cmp
cmp
clc
push
jbe
xchg
aam
into
mov
stc
test
xchg
cwtl
out
adc
mov
xabort
pop
jo
add
add
dec
or
add
mov
repnz
int
cmp
clc
sbb
and
add
lea
mov
add
stos
mov
or
clc
mov
lods
clc
xchg
popf
sar
mov
or
cmp
daa
clc
push
add
lods
popa
add
mov
in
sub
cmp
stos
cmp
add
cmp
add
add
fs
fwait
dec
xabort
bound
add
add
jbe
clc
xabort
clc
mov
lea
clc
jno
add
adc
add
add
clc
mov
xchg
push
lods
and
add
clc
nop
mov
clc
daa
clc
in
adc
add
pop
sbb
adc
add
ss
cmp
lret
inc
clc
mov
test
insb
ret
mov
and
add
sub
clc
leave
cmp
inc
add
jne
clc
jle
cmc
es
push
jb
add
cld
sbb
jns
mov
xchg
stos
aaa
inc
add
fmull
cmpsl
clc
or
clc
in
dec
cmp
clc
and
add
add
xabort
clc
int
fs
sub
pop
test
mov
clc
cmp
out
inc
add
cmp
addr16
jne
aam
addr16
cmp
cmp
push
mov
out
enter
add
out
or
pop
cmp
push
clc
nop
mull
clc
shll
or
cs
cli
pop
clc
mov
clc
lret
add
add
lcall
sbb
xabort
jbe
inc
add
stos
popf
cs
insb
cmpsb
clc
arpl
add
add
and
add
bound
add
add
add
add
in
xchg
clc
inc
clc
fnsave
add
in
xor
add
dec
cmc
das
clc
push
add
xor
push
add
lret
clc
cmp
dec
add
add
add
in
push
dec
ljmp
loop
xor
add
push
xbegin
loop
or
add
ret
clc
jne
mov
sti
mov
aam
add
add
shl
pop
lock
popa
add
outsb
dec
pop
clc
xor
add
add
xchg
fmuls
add
push
fisubrs
and
add
xbegin
clc
push
mov
adc
add
clc
and
add
add
mov
add
cmp
jo
add
and
xor
add
clc
mov
cmp
push
add
cmp
jmp
pop
jmp
inc
add
xor
mov
out
ja
clc
xabort
add
add
adc
add
xchg
mov
sbb
test
lock
xor
add
inc
add
loop
push
fwait
sar
add
mov
in
dec
ss
cs
shrl
jae
add
repnz
clc
sti
or
sbb
fs
mov
add
and
add
clc
add
cmp
mov
cmp
add
add
add
mov
adc
add
clc
popa
add
dec
dec
loope,pt
fldpi
fwait
or
and
in
inc
clc
enter
clc
pop
hlt
pop
testl
mov
mov
adc
add
add
ret
jne
pop
jo
add
shll
aas
xchg
insb
jb
add
jne
clc
cmp
clc
dec
sub
cmp
pop
add
add
pop
std
cmp
inc
clc
dec
push
xchg
sar
sar
lahf
test
clc
imul
dec
cmp
ljmp
data16
dec
stos
loope
add
add
add
sbb
add
fsubr
arpl
add
push
decl
ss
add
fdivrs
daa
clc
inc
add
jge
shl
mov
scas
out
gs
add
add
pop
adc
add
pusha
add
test
inc
clc
mov
or
add
adc
call
data16
cmpsl
clc
aaa
fistl
add
jno
add
clc
icebp
das
stos
mov
clc
hlt
cmp
add
xchg
xchg
outsl
mov
jmp
push
add
jbe
fsubp
clc
es
inc
clc
aaa
and
add
mov
push
clc
ds
xchg
xor
aam
jae
add
loopne
xor
add
push
add
addr16
pop
popf
aad
add
js
and
add
jle
clc
shlb
sbb
notl
ret
clc
ret
clc
cmp
push
movsb
clc
jmp
xchg
mov
pop
lock
xchg
paddusw
mov
leave
nop
shrb
add
cmp
arpl
add
lret
cmp
add
bound
add
add
inc
add
clc
rclb
add
inc
clc
sbb
ret
clc
rorl
and
add
gs
xchg
mov
clc
imul
add
out
jbe
clc
inc
clc
xchg
push
clc
or
add
lea
clc
xor
add
pop
out
int
add
fstps
add
dec
inc
clc
test
mov
add
mov
imul
mov
add
int
add
pop
sti
ds
clc
inc
add
fst
mov
xor
add
popa
add
jae
add
jae
add
pop
ds
cmp
stos
gs
sub
iret
inc
clc
fldcw
cli
movsl
clc
mov
add
clc
popa
add
mov
clc
cmpxchg
gs
outsb
xor
add
bound
add
mov
add
repz
push
add
mov
pop
push
add
addr16
imul
jne
stc
fisubl
out
push
sar
das
adc
add
mov
clc
dec
aam
clc
repnz
jnp
inc
add
or
test
jmp
clc
stc
sbb
add
sbb
add
add
add
cwtl
sbb
das
test
fs
add
popf
jp
cmp
test
lcall
add
imull
clc
or
jmp
dec
push
xor
add
xor
or
cmp
lock
lods
cmp
pusha
add
int
ljmp
ss
out
sti
out
mov
lret
outsl
ret
clc
inc
clc
repnz
inc
clc
inc
clc
pusha
add
sahf
bound
add
pusha
add
sub
cmp
mov
test
mov
inc
add
jno
add
mov
mov
clc
xchg
adc
add
shll
xchg
insb
je
add
repz
xchg
loopne
cmp
dec
mov
xlat
loope,pn
sarb
add
fmul
clc
ja
mov
addr16
cmc
sti
push
mov
fstp
lahf
in
jne
or
clc
cmp
clc
nop
or
add
sar
mov
or
sub
clc
jae
add
add
fs
pop
cwtl
ja
or
clc
outsb
dec
mov
add
es
pop
xbegin
cmc
add
add
add
cmp
add
bound
add
stc
cmp
pop
cmpsl
clc
xor
pop
data16
cltd
push
xchg
stc
push
add
lcall
je
adc
clc
jno
add
insb
sub
xbegin
sub
push
add
and
add
clc
mov
clc
pop
cmp
add
add
xbegin
clc
sub
scas
mov
jg
add
inc
add
dec
aad
mov
push
add
clc
outsb
mov
add
aaa
cmp
cmp
and
and
adc
add
add
add
clc
aad
clc
adc
add
shl
sahf
xor
add
dec
pop
clc
popa
add
ja
sub
xor
add
add
jnp
pop
imul
push
add
mov
or
clc
leave
cmp
push
sti
or
xchg
mov
addr16
cmp
stc
adc
add
ja
insl
cmp
jge
xchg
inc
clc
xbegin
xchg
xor
sbb
mov
stos
push
add
mov
push
xlat
inc
clc
jae
add
add
test
inc
add
adc
add
push
add
push
add
xchg
idivl
jns
mov
bound
add
cltd
stc
into
or
sub
add
mov
clc
test
add
cmpsb
clc
pop
mov
jo
add
add
test
clc
push
xchg
cmpsb
clc
pop
ds
icebp
lea
jb
add
and
add
jmp
clc
dec
cmp
popf
int3
lret
js
clc
cmp
clc
outsb
xchg
jae
add
or
add
push
clc
sar
data16
mov
push
xlat
xchg
pusha
add
pusha
add
xbegin
jae
add
add
add
inc
clc
push
add
cmpsb
clc
mov
or
sti
add
mov
mov
ds
or
clc
ret
clc
fistps
clc
sahf
div
dec
mov
or
add
cmp
clc
or
clc
push
clc
dec
popa
add
cltd
fwait
aam
add
popl
and
add
add
pushf
mov
add
fcmovb
clc
ja
mov
mov
inc
clc
xor
add
cltd
mov
xchg
out
int
clc
and
add
mov
add
jp
add
pop
clc
je
add
jg
cmp
xor
add
add
cmp
fnstenv
add
jge
or
add
jnp
pop
xchg
pop
cmp
add
xbegin
clc
aas
cmp
xchg
shr
dec
fs
add
add
add
jae
add
in
cmp
fisubs
clc
sbb
add
setp
outsl
aas
mov
add
mov
dec
xor
add
add
add
dec
dec
push
stos
jno
add
inc
clc
sbb
clc
cmp
inc
add
mov
into
dec
mov
add
add
jg
add
xlat
mov
in
lock
add
in
test
lock
add
add
clc
out
scas
and
or
repz
push
dec
cmp
inc
clc
xchg
int
add
cmp
or
clc
xor
add
add
dec
push
add
test
loopne
pop
mov
jl
lahf
nop
dec
jne
clc
ja
clc
inc
add
mov
clc
repnz
out
or
nop
cld
add
arpl
add
inc
add
nop
repnz
clc
loope
cmpsl
clc
mov
test
inc
add
and
add
add
pushf
mov
fimuls
clc
out
add
adc
add
clc
and
push
mov
test
xlat
outsb
push
add
fdivl
add
xchg
lea
add
mov
add
pop
xor
add
sub
clc
mov
add
cmc
lcall
clc
es
cltd
out
out
mov
or
add
cmp
or
push
add
in
inc
add
cmp
test
fistl
and
add
mov
push
add
nop
pop
clc
lods
data16
dec
stos
or
add
push
push
lret
inc
add
dec
dec
cmp
aas
push
pop
fldcw
pushf
data16
out
cmp
add
sub
clc
inc
clc
xor
add
ljmp
add
mov
mov
add
lret
sti
ficompl
push
add
xchg
mov
jle
pop
sbb
sar
out
sahf
aad
out
dec
repz
das
sahf
jb
add
leave
lret
in
insb
loop
xor
add
add
pop
dec
mov
mov
mov
clc
jno
add
sub
pop
push
push
add
cmp
adc
add
aaa
int3
mov
add
loop
pop
out
out
xchg
and
add
clc
pop
adc
add
mov
add
mov
cmp
add
sbb
add
aas
ficoml
push
add
scas
xchg
and
add
ret
clc
sub
add
imulb
jb
add
dec
sbb
frstor
add
lret
mov
clc
into
jae
add
clc
mov
mov
sbb
add
sahf
push
add
mov
push
dec
pop
mov
push
push
and
add
xor
mov
sbb
clc
inc
clc
iret
sbb
add
push
clc
and
add
mov
mov
fbld
add
pop
stc
inc
add
add
add
clc
lahf
cmp
add
clc
fucom
clc
mov
xchg
inc
clc
leave
sub
inc
clc
or
call
add
inc
add
andps
ja
clc
xchg
lahf
pop
mov
lods
inc
clc
push
add
push
cmp
clc
add
add
rcrl
fsubrs
dec
test
add
mov
xchg
ficoms
jp
pop
fs
insl
stos
insb
loopne
xor
add
arpl
add
popf
inc
clc
inc
clc
adc
jbe
pushf
and
sbb
clc
mov
ss
add
clc
fdivr
cmpsb
clc
outsl
inc
clc
mov
je
pop
lahf
pop
adc
clc
push
adc
jo
add
testl
roll
add
insb
cld
sbb
add
add
or
push
or
clc
adc
add
cmpsl
clc
mov
clc
mov
add
mov
mov
pop
sahf
pop
or
clc
outsl
stos
pop
clc
push
and
leave
cmp
add
add
mov
or
call
xor
add
xchg
gs
lcall
pop
into
sbb
clc
fbld
add
imul
std
lcall
add
sbb
sub
clc
call
ja
dec
lods
jmp
clc
xor
add
cmp
clc
sub
lret
mov
aad
push
add
dec
stos
divb
inc
add
cmp
insl
xor
add
or
add
adc
add
je
cmpsl
clc
popf
icebp
scas
adc
add
mov
add
mov
filds
fistpll
dec
pop
sub
adc
clc
test
test
lret
push
clc
pop
jns
and
repnz
and
add
clc
xabort
es
xor
add
push
add
hlt
aad
clc
mov
inc
add
cltd
daa
clc
inc
clc
mov
xor
add
add
insl
vpmacsww
adc
adc
add
aam
out
jmp
pop
test
mov
pop
mov
clc
mov
fwait
mov
inc
add
lahf
pop
dec
inc
clc
cmp
jg
dec
mov
xchg
scas
cmpsb
clc
mov
add
add
mov
sar
stos
enter
push
clc
and
add
clc
sar
adc
add
loope
cmpsb
clc
mov
add
add
add
clc
add
add
inc
add
in
xchg
cli
imul
cmp
add
add
add
or
mov
sbb
mov
cmc
mov
adc
add
cmpsl
clc
pop
hlt
push
stos
cmp
clc
pop
clc
sub
pop
jne
push
call
push
inc
add
mov
mov
add
cwtl
jecxz
dec
clc
sbb
dec
jge
int
sub
imul
es
push
add
sbb
fldenv
sub
clc
sbb
arpl
add
pop
mov
xchg
adc
add
or
sub
mov
jo
add
cmc
push
addr16
and
add
mov
add
xchg
std
xchg
cld
scas
pushf
outsb
add
xbegin
add
clc
pop
xor
xlat
in
scas
or
lods
cs
clc
sahf
or
fstp
aad
cltd
dec
xor
add
jmp
jo
add
jns
adc
add
add
add
clc
push
add
jne
sahf
pop
stc
gs
mov
loopne
jg
out
mov
add
push
add
inc
clc
xchg
xlat
fadd
clc
cs
and
add
jae
sub
jle
out
repz
cmp
add
sar
repnz
clc
sub
clc
in
fxsave
add
clc
adc
add
xchg
aas
imul
clc
and
pop
mov
add
add
add
clc
sub
add
push
repz
int
add
add
cmp
imul
dec
adc
add
clc
xchg
in
lcall
aaa
jmp
mov
addr16
add
dec
gs
in
fstl
add
adc
add
pop
scas
lcall
add
add
test
cmp
js
add
sbb
clc
stos
or
xbegin
add
jge
jns
add
xchg
mov
xor
add
sar
pusha
add
mov
clc
and
add
cmp
push
push
add
lods
sub
clc
jae
add
icebp
or
mov
divl
add
mov
sarb
clc
jecxz
cmp
clc
dec
ror
push
add
jb
add
add
add
int3
and
add
and
clc
int3
lcall
mov
push
add
fdivl
add
clc
jne
clc
push
mov
clc
mov
pop
pop
mov
cwtl
xchg
addr16
jns
add
xchg
repnz
clc
inc
clc
cmp
pop
sar
pusha
add
pop
sbb
out
in
xor
add
es
jns
lret
mov
add
add
or
ja
and
pop
dec
call
clc
jne
add
dec
mov
fists
jns
in
push
add
adc
add
add
xbegin
outsb
pop
cmp
movsl
clc
cmp
stc
push
add
loopne,pt
inc
clc
jae
add
lret
clc
leave
push
add
sub
push
jnp
shll
jbe
clc
imul
ja
inc
add
xlat
xor
add
ret
sar
movsl
clc
inc
add
sbb
add
enter
mov
dec
js
imulb
xchg
xor
clc
or
cmp
out
sub
xchg
adc
add
add
pop
dec
cmp
mov
repz
addr16
shll
clc
push
or
clc
ljmp
xchg
cmp
xchg
inc
add
rcr
add
add
clc
jbe
inc
add
shl
dec
pop
clc
inc
add
jb
add
add
aam
data16
or
inc
clc
pop
imul
insl
icebp
sub
xchg
dec
and
add
mov
and
add
and
add
inc
add
aas
or
testl
mov
clc
sti
dec
ds
fwait
inc
add
icebp
jb
add
arpl
add
add
and
rcl
movsb
clc
frstor
add
push
jb
add
sar
clc
ret
clc
or
push
add
dec
jecxz
pop
js
divl
lret
mov
clc
push
add
test
mov
add
xor
add
clc
loop
pop
clc
push
je
dec
jns
mov
clc
and
lock
add
add
add
mov
jbe
clc
mov
add
popf
pop
lods
mov
add
sub
or
mov
clc
insl
dec
stc
call
popf
add
add
add
pop
sar
xchg
or
clc
aas
ficomps
jmp
movsl
clc
scas
mov
mov
add
lods
out
aaa
add
add
push
clc
dec
lret
test
mov
outsb
dec
jecxz
sti
xchg
jg
cmpsb
clc
push
clc
dec
cmp
add
mov
gs
sub
jno
add
and
cmp
sub
add
nop
cltd
iret
clc
push
cmp
scas
xchg
or
cs
mov
clc
imul
sbb
inc
clc
jbe
pop
nop
into
sar
fcmovb
clc
mov
lcall
clc
mov
add
and
add
inc
clc
repnz
add
add
pop
xchg
loopne
clc
adc
add
rcr
mov
add
clc
sub
jp
mov
movsb
clc
pop
fs
scas
mov
test
or
add
add
out
mov
xchg
dec
sbb
clc
xor
add
out
xor
cmp
add
clc
mov
daa
clc
insb
xchg
or
add
int3
cs
add
cwtl
cli
in
loopne
mov
aaa
clc
inc
add
imul
clc
and
push
test
out
negb
test
cmp
push
add
and
add
cmp
add
jg
clc
fcomp
sar
push
and
add
xchg
jo
add
shll
add
add
test
mov
xchg
cmpxchg
cmp
xchg
lods
push
cmp
popa
add
sub
add
add
pop
leave
sbb
xor
add
sar
xchg
loop
lret
clc
pop
push
aad
clc
insl
mov
add
cwtl
fstpt
push
add
cmp
in
lea
movsl
clc
cmp
imul
mov
mov
add
add
or
add
fmulp
insb
iret
dec
stos
adc
or
kmovw
add
add
loop
push
mov
add
mov
cli
cmp
add
lret
jo
add
and
add
add
std
testl
add
add
and
cmp
clc
ds
xchg
fdivs
add
add
xabort
ss
xor
clc
cmpsb
clc
iret
jns
pop
mov
add
inc
clc
mov
popa
add
aad
clc
call
add
es
out
sbb
mov
cmpsb
clc
sarl
clc
in
outsb
push
lods
mov
arpl
add
push
clc
and
add
add
clc
push
push
mov
clc
shrb
push
add
add
and
push
icebp
mov
add
js
clc
inc
add
jb
add
scas
daa
clc
bound
add
pop
ds
addr16
repnz
fildl
jle
inc
clc
cwtl
xabort
lock
and
add
cmp
clc
xchg
xchg
fwait
adc
add
add
add
pop
add
int
inc
clc
jmp
add
add
xchg
out
movsl
clc
sub
add
mov
stc
jo
add
clc
iret
ds
mov
movsb
clc
hlt
cmp
clc
fst
xor
movsl
clc
push
add
sar
clc
icebp
iret
lods
rclb
add
lock
fdiv
jge
sbb
xchg
out
out
jae
add
clc
stc
ret
add
aad
cmp
pop
dec
data16
mov
clc
cs
jns
add
pop
or
pop
push
inc
add
sar
cmp
push
inc
clc
sub
pusha
add
or
clc
jmp
clc
fiaddl
mov
add
mov
add
clc
ds
out
call
dec
mov
clc
iret
aad
add
mov
lret
sub
add
push
adc
xbegin
enter
xor
lods
cs
add
add
inc
clc
adc
sub
push
add
cmp
clc
cmp
cmp
inc
add
sub
scas
push
add
xchg
inc
clc
cli
jo
add
clc
mov
out
sub
inc
clc
fwait
add
push
lcall
add
jg
clc
or
add
mov
add
add
add
add
clc
sub
sbb
and
add
stos
test
and
add
push
add
mov
xbegin
loope
push
stos
xor
add
pop
ret
add
sbb
push
jecxz
fisttpll
xadd
jbe
clc
call
ret
clc
xbegin
clc
jge
add
data16
jno
add
add
push
pop
fs
nop
mov
cmp
sub
testl
add
xchg
dec
adc
scas
dec
mov
ret
mov
and
add
xchg
ja
sar
clc
mov
fdivrs
clc
mov
mov
leave
or
add
out
inc
clc
out
pop
jecxz
std
cmp
add
adc
add
cmp
add
rcl
aad
jg
jp
push
add
call
daa
clc
bound
add
mov
jg
cmp
add
xor
mov
in
xchg
aaa
mov
and
bnd
cs
out
scas
scas
or
clc
sub
or
int
clc
into
loope
push
adc
add
add
push
pop
leave
nop
pop
cld
bound
add
sar
sti
sub
clc
adc
add
mov
push
add
xchg
data16
imul
clc
aaa
jne
lock
inc
clc
inc
clc
xor
add
push
popa
add
pop
stos
jecxz
and
add
add
lods
sahf
stos
mov
mov
clc
mov
das
ret
clc
int
clc
pop
sub
icebp
jge
mov
clc
std
mov
mov
add
xchg
mov
clc
mov
add
mov
aad
iret
test
leave
jecxz
cs
insb
and
add
clc
inc
clc
pusha
add
icebp
jmp
adc
add
lods
outsl
lcall
nop
mov
clc
aaa
sbb
clc
faddl
add
jbe
nopl
add
mov
js
fildll
popf
in
sbb
clc
jecxz
jnp
clc
scas
cmp
add
cltd
neg
inc
clc
jne
cs
movsl
clc
jae
add
push
jo
add
insb
in
mov
add
lods
jge
add
data16
xchg
dec
adc
add
mov
decl
jno
add
call
add
push
add
clc
daa
clc
inc
clc
divl
test
mov
aas
inc
clc
xchg
sbb
pop
cmp
movsl
clc
lea
clc
jecxz
fisubl
sub
clc
pushf
insl
out
mov
push
add
cmp
cwtl
test
jo
add
pop
fimull
rcll
add
add
adc
add
jp
xchg
dec
pop
fidivs
mov
adc
into
lods
inc
clc
xor
add
cmp
or
add
add
add
fisubrs
add
push
inc
clc
aas
or
addr16
xchg
out
sti
test
pusha
add
sbb
jl
push
enter
jl
add
gs
and
xor
add
cmp
outsb
mov
lret
div
std
or
insl
jnp
clc
xor
or
dec
loope
pop
mov
je
mov
add
mull
ja
add
sbb
lahf
data16
jmp
cmc
jl
add
outsb
or
add
clc
aaa
lea
add
sarl
mov
jl
clc
pop
xor
add
aad
add
push
sub
cmc
xchg
daa
clc
pop
push
add
mov
add
clc
xchg
lods
dec
mov
add
mov
clc
xchg
xbegin
sbb
rcrb
loop
imul
add
pusha
add
jmp
enter
adc
mov
sub
mov
jb
add
imul
add
add
add
jecxz
jno
add
xor
add
clc
xchg
sub
mov
clc
rol
clc
ss
ret
clc
movsb
clc
iret
pcmpeqb
clc
fnsave
pop
and
add
clc
xor
add
ds
push
push
add
ds
add
mov
add
ss
mov
arpl
add
pop
pop
clc
and
add
add
cmpsl
clc
int
mov
xor
add
sahf
xor
clc
add
add
add
mov
add
mov
add
pop
adc
add
pop
pop
pop
mov
add
fidivl
add
clc
mov
add
inc
clc
add
add
jg
push
add
sarb
dec
cmpsl
clc
out
insl
cmpsb
clc
jecxz
xor
add
push
mov
stc
jl
xchg
jb
add
add
mov
clc
pushf
es
adc
add
loop
scas
out
and
add
push
clc
adc
add
mov
add
inc
clc
jne
add
add
add
std
sahf
dec
enter
adc
add
add
inc
add
and
xabort
xor
add
add
mov
lcall
add
xabort
clc
mov
add
mov
clc
std
ljmp
pop
clc
xchg
popa
add
pop
movsl
clc
test
sbb
clc
dec
mov
jmp
clc
push
fmull
out
add
add
add
sbb
clc
aas
inc
clc
dec
inc
add
and
mov
mov
add
jbe
cmc
aas
push
add
jbe
clc
data16
negb
repnz
add
clc
clc
xchg
enter
push
add
add
jbe
add
inc
add
fs
pop
mov
mov
insb
xchg
pop
addr16
lahf
daa
clc
mov
clc
sbb
xbegin
insl
xor
add
fldt
cmp
cmp
add
xchg
fsubrl
adc
add
imul
or
add
ret
add
add
cmp
rcrl
in
inc
add
xchg
jbe
xchg
cld
call
icebp
and
add
imul
clc
jle
sti
cmp
inc
add
cmp
rcr
in
mov
add
cmp
clc
or
std
notb
clc
lock
add
cmp
add
loop
dec
int
add
pusha
add
xabort
clc
adc
add
inc
add
cmp
add
xor
add
ljmp
std
or
cmc
sub
clc
arpl
add
clc
add
add
cmp
mov
cmovnp
scas
lcall
repnz
add
add
xor
inc
clc
rcrl
xor
add
insb
add
xchg
call
clc
sbb
cwtl
push
mov
push
add
imul
clc
imul
add
add
clc
mov
clc
sub
clc
pop
enter
cltd
pop
adc
add
sub
sbb
clc
push
clc
jb
add
cld
pop
jae,pt
add
stos
mov
add
imul
xor
add
scas
fcoms
add
add
add
add
clc
xor
mov
add
adc
add
and
add
xchg
xor
add
clc
mov
clc
int
add
enter
clc
pop
pop
mov
push
clc
pop
push
add
sar
clc
xchg
or
and
clc
jge
clc
aaa
repnz
add
cmp
clc
xchg
test
add
xlat
adc
add
imul
imul
sub
jg
stc
xor
add
add
popf
lahf
or
sub
lret
inc
add
inc
add
ljmp
pusha
add
cmpsb
clc
add
add
bound
add
mov
add
clc
frstor
push
add
sbb
add
inc
add
jbe
clc
jg
mov
scas
cmp
addr16
mov
cs
push
sbb
xchg
movsb
clc
lods
into
jge
clc
out
lahf
sar
je
test
jno
add
add
ja
mov
cmc
fisttpll
aad
clc
push
clc
int
dec
loopne
test
mov
xbegin
xchg
cli
jno
add
sub
rorl
cwtl
cmp
jae
add
insb
mov
outsl
adc
add
add
add
add
cmp
loop
jae
add
clc
jg
clc
sbb
or
add
clc
pop
fistl
mov
psadbw
icebp
lock
or
jae
add
cmp
stos
xor
add
add
clc
or
adc
add
pop
sub
clc
jmp
add
pop
pop
cmp
push
add
mov
enter
mov
stos
out
mov
cmp
fstpt
aas
push
clc
jae
add
add
repz
fadd
clc
fstpt
pop
sub
xabort
imul
rep
clc
fwait
or
xabort
in
mov
icebp
out
adc
add
add
cmp
mov
clc
sub
mov
shrb
cld
or
xchg
xor
add
stc
decb
push
clc
mov
cmp
inc
clc
stc
xchg
in
ss
lea
adc
push
imul
add
add
clc
mov
popa
add
sbb
pusha
add
es
int
add
in
std
sahf
sub
clc
adc
add
add
jle
xchg
mov
mov
add
lea
jl
sahf
test
mov
clc
cltd
pop
push
add
aas
cmpsl
clc
sbb
jecxz
adc
fs
movsb
clc
push
ds
cmp
mov
ja
jns
add
dec
adc
add
fcmovb
clc
enter
insl
fldcw
test
in
jl
cld
mov
clc
fs
jne
and
add
add
fistpl
xchg
push
jge
push
add
or
add
cmp
test
jge
dec
test
jge
inc
add
jno
add
out
popa
add
xchg
popa
add
pop
cmp
cmp
add
inc
clc
mov
inc
clc
test
add
mov
fcomi
dec
jno
add
dec
inc
clc
cmp
add
enter
fdivs
add
clc
mov
xor
add
sbb
add
add
and
add
clc
outsl
mov
pop
jnp
mov
xchg
cmpsl
clc
or
incb
mov
or
cmp
jl
clc
fnop
or
data16
add
add
clc
lret
rorl
cmp
add
pop
cltd
dec
enter
jp
clc
cmp
add
add
or
scas
mov
add
add
imulb
and
xor
sbb
stc
xor
adc
add
pop
jmp
and
fstpt
add
inc
clc
or
clc
movsb
clc
lods
stos
rorl
call
pusha
add
fs
dec
into
xor
add
clc
pmaddwd
dec
cwtl
xlat
adc
add
add
clc
jge
pop
sar
mov
clc
push
mov
mov
clc
aam
fidivs
addr16
cmp
clc
mov
imulb
add
or
scas
es
adc
sub
add
and
xchg
xchg
sub
sbb
clc
sub
clc
dec
insl
mov
clc
out
xchg
cld
adc
add
fnstsw
pop
sbb
jns
add
xor
add
or
in
ror
clc
or
adc
jmp
pop
shlb
add
stos
push
add
cmp
movsl
clc
cmp
clc
dec
cmp
fisubrs
mov
clc
das
aaa
scas
test
rep
loopne
push
pop
int3
sar
cmpsl
clc
out
push
clc
and
push
add
cwtl
push
xchg
addr16
cmp
inc
clc
daa
clc
sbb
pusha
add
out
xor
add
dec
sub
add
add
mov
jne
clc
sarb
add
add
in
ja
pop
adc
add
add
rol
clc
loop
jo
add
adc
add
add
out
sbb
clc
cmp
add
rorl
loope
jg
xor
add
add
add
shlb
add
repz
stos
mov
add
xchg
je
add
jae
add
clc
xchg
leave
cmp
leave
lods
insl
pusha
add
fidivs
ficoml
add
dec
fcomps
popa
add
mov
pop
inc
clc
sub
and
lret
pop
pop
aas
mov
stos
sar
xchg
and
add
stc
imul
add
inc
add
dec
jecxz
push
int3
lods
inc
clc
xchg
xchg
xor
add
sub
lret
enter
add
sub
fldcw
clc
fbld
add
push
outsl
jbe
iret
mov
or
jg
data16
sti
sub
jne
pop
push
popa
add
adc
nop
xchg
or
add
adc
add
add
add
ljmp
mov
xchg
and
pop
daa
clc
sub
popa
add
inc
add
pop
cli
xlat
xor
add
clc
out
mov
pop
push
add
loopne
xabort
xor
xabort
clc
and
add
mov
xor
add
fsubrl
clc
dec
insb
lods
cld
test
ja
clc
fs
push
jo
add
mov
add
fcomps
push
add
xchg
cmp
add
jns
clc
adc
add
add
leave
scas
xchg
mov
add
hlt
hlt
sbb
clc
sub
xbegin
clc
ss
jb
add
ss
mov
clc
fcomps
add
add
add
mov
and
add
push
inc
add
xor
add
add
shlb
add
cmpsb
clc
mov
add
xchg
mov
mov
clc
add
xchg
popa
add
jg
fcomps
add
mov
gs
sar
clc
mulb
clc
loop
movsl
clc
in
jno
add
divb
xchg
mov
add
clc
mov
add
add
clc
rorb
call
ljmp
loope
or
and
add
add
jmp
add
xor
add
add
clc
and
je
clc
jmp
xor
in
int3
cmpsl
clc
cmp
sbb
add
rcl
push
ss
test
lock
cmp
cmp
add
adc
add
push
add
xor
add
pop
std
rclb
add
fstpt
add
js
clc
stc
pop
das
movsl
clc
sbb
push
add
xchg
adc
add
clc
sahf
push
xchg
push
cmp
clc
cltd
js
xor
add
add
dec
adc
add
aas
xchg
insl
call
sbb
pop
jbe
fwait
mov
mov
add
mov
jnp
push
imul
sub
shrb
clc
pop
push
mov
clc
xchg
jbe
clc
outsb
js
dec
mov
mov
add
xlat
loop
nop
or
pop
jne
mov
int
clc
inc
clc
fisttpl
enter
jns
clc
ss
and
add
add
cld
pop
and
hlt
arpl
add
clc
movsb
clc
and
add
add
add
bound
add
bound
add
daa
clc
pop
cmpsl
clc
data16
adc
mov
mov
out
pop
add
add
xbegin
imul
cmp
sub
fwait
mov
add
add
mov
push
clc
adc
xor
add
xlat
in
aas
xor
add
add
jne
cltd
mul
clc
xlat
sub
jo
add
pop
outsb
fmul
or
cmp
sub
mov
sub
sbb
outsl
jae
add
push
xchg
loope
xor
add
add
cmp
mov
xor
add
and
add
fisttpll
sar
xbegin
add
jg
mov
or
and
add
arpl
add
sbb
push
add
test
mov
hlt
popf
aad
push
lret
xchg
sub
out
sar
clc
test
jb
add
add
mov
mov
add
aam
fidivs
add
add
add
add
pop
mov
push
add
sub
push
xchg
insb
arpl
add
sbb
clc
or
mov
clc
js
clc
adc
add
clc
fsubr
test
mov
out
negb
push
xor
add
test
add
sahf
ret
mov
add
and
icebp
imul
or
jmp
jns
push
popa
add
stos
xlat
adc
pusha
add
adc
add
add
into
int
icebp
addr16
stos
mov
stc
mov
clc
jp
clc
add
add
int3
loope
jnp,pn
xsaveopt
cmpsl
clc
cmp
bound
add
clc
enter
dec
out
mov
test
xchg
add
add
clc
bound
add
push
add
data16
lcall
sub
add
mov
xor
sub
enter
fnstsw
inc
add
in
aaa
xchg
popf
repnz
pop
ror
push
dec
add
add
add
add
add
add
pop
test
lock
jle
loope
add
add
pop
sub
sbb
pop
xlat
pop
inc
clc
pop
mov
gs
pop
pop
jo
add
pop
and
add
add
clc
rcrb
clc
mov
imul
ja
push
add
inc
add
shl
stos
sub
add
jp
clc
jecxz
push
add
jmp
clc
and
add
jnp
inc
add
lret
push
add
adc
add
xor
add
clc
movsb
clc
out
push
cld
jne
mov
ficoml
imul
shll
add
add
dec
and
cmp
add
and
cli
xor
add
clc
cmp
add
cmp
ds
adc
add
ret
clc
mov
sbb
into
add
sbb
out
gs
pop
lahf
aaa
sbb
and
add
cli
scas
movsb
clc
dec
or
sbb
lcall
clc
mov
add
or
repz
jp
test
adc
add
jmp
clc
scas
gs
sbb
add
pop
push
into
xchg
scas
mov
sbb
notl
clc
adc
add
adc
add
pop
int
shrl
dec
aam
in
shlb
add
clc
fwait
shr
js
adc
clc
mov
xchg
fcom
jbe
scas
add
adc
add
jnp
jns
mov
mov
cmp
add
inc
clc
sar
sbb
dec
jl
xchg
lcall
stc
xchg
test
lea
add
sub
clc
dec
push
clc
inc
clc
adc
std
lock
sub
fs
mov
mov
pop
mov
gs
or
add
xor
add
add
xor
adc
add
clc
aaa
or
add
inc
add
pop
xabort
movsb
clc
dec
out
inc
add
xchg
push
sub
push
mov
cmp
nop
scas
push
lret
sbb
sarl
clc
in
add
add
add
clc
and
inc
clc
xchg
or
in
mov
clc
xor
sub
ret
clc
jae
add
cmp
int
or
fcmovnbe
cs
gs
fucomip
adc
add
clc
int
lret
add
mov
lcall
xchg
push
add
jns
mov
scas
mov
mov
mov
pop
cmp
clc
mov
clc
push
add
push
cmpsb
clc
push
std
pusha
add
mov
add
add
pop
lret
add
adc
add
clc
sub
addr16
loope
scas
mov
lret
add
add
clc
clc
jne
and
add
movsb
clc
fs
test
cmp
jle
add
sub
cmp
call
test
movsb
clc
jmp
mov
cmpsl
clc
inc
clc
mov
enter
add
sbb
outsl
push
bound
add
sub
loopne
div
je
push
add
scas
scas
hlt
push
add
add
clc
pusha
add
pop
inc
clc
fs
xchg
mov
ficoml
sub
add
in
jl
insl
rol
clc
and
add
sbb
icebp
mov
push
add
or
loop
popa
add
cmp
pop
xor
fidivrs
clc
inc
add
mov
ja
jmp
test
push
outsb
and
add
add
vunpckhps
inc
clc
xor
add
lea
ljmp
sbb
clc
int
cmp
ret
clc
push
push
add
add
push
sbb
xlat
sbb
adc
clc
ss
mov
mov
rorb
in
mov
add
inc
add
xor
add
add
jmp
icebp
sbb
cmp
add
xchg
dec
sbb
add
gs
test
data16
dec
ret
push
add
shll
or
add
clc
xlat
fsubrs
mov
mov
pop
iret
and
add
movsb
clc
pop
clc
push
idivl
mulps
add
ja
clc
xchg
and
cmpsl
clc
scas
jg
cld
mov
clc
sub
inc
clc
fisttpll
cld
add
add
outsl
xchg
sub
and
add
aad
mov
add
add
fsts
add
mov
movsl
clc
ja
loopne
outsb
loopne
aaa
iret
add
add
add
mov
mov
add
das
ss
clc
fwait
sbb
add
je
mov
add
mov
mov
clc
fnsave
add
out
jge
icebp
loope
icebp
adc
add
add
mov
sbb
mov
add
inc
add
mov
cmpsb
clc
push
add
jns
clc
push
data16
call
mov
xor
add
mov
outsb
cmp
mov
clc
data16
cmpsb
clc
popf
mov
pop
mov
ss
mov
add
clc
jno
add
or
out
lods
out
xchg
adc
add
hlt
fnstsw
inc
add
imul
adc
add
mov
sub
inc
add
mov
insl
fiadds
add
jne
js
sbb
cltd
test
ret
jb
add
add
cmpsb
clc
insb
jmp
inc
clc
mov
gs
mov
repnz
pop
in
and
add
int3
sbb
clc
pusha
add
lcall
lcall
and
add
fidivrl
add
and
add
add
clc
add
add
cmp
imul
cmp
add
add
add
cmp
adc
jmp
ret
clc
mov
cmp
add
push
add
push
mov
clc
xor
clc
insl
mov
fstps
push
sub
pop
dec
test
sbb
mov
mov
out
bound
add
call
aad
clc
ret
clc
mov
pop
iret
sbb
add
push
cmp
add
mov
inc
clc
cmp
add
mov
mov
ljmp
mov
clc
mov
fcmovu
adc
add
mov
clc
cmp
clc
sub
rorl
clc
add
add
stc
add
or
out
enter
adc
add
clc
aas
xor
adc
mov
add
add
stos
mov
xor
add
clc
int3
sti
pop
call
adc
push
das
add
add
jae
add
sbb
clc
enter
sub
mov
sub
fists
add
arpl
add
clc
sahf
lret
stos
shl
or
add
add
repz
or
test
add
inc
clc
xchg
int3
mov
clc
push
clc
loop
pop
clc
and
add
test
mov
add
xor
add
clc
or
add
inc
clc
pop
inc
clc
dec
mov
xor
add
inc
add
pop
lea
push
clc
mov
add
sar
inc
add
icebp
push
add
adc
add
clc
dec
pop
dec
mov
cmp
jl
ljmp
clc
stc
cmp
add
adc
stos
mov
push
mov
cmp
addr16
enter
inc
clc
test
jns
xabort
jmp
xchg
mov
add
jne
cmp
sub
clc
mov
dec
pop
or
clc
bound
add
testl
idivl
bound
add
clc
inc
clc
pop
fidivrl
cli
fcoml
add
rcl
adc
add
add
lods
jl
jnp
add
mov
adc
add
jge
hlt
inc
clc
leave
add
addr16
mov
clc
into
pusha
add
adc
add
xabort
sti
dec
add
add
adc
imulb
push
add
inc
add
movsb
clc
sar
clc
jge
clc
insl
data16
mov
add
addr16
xor
add
aad
add
mov
add
popf
sub
adc
add
add
mov
in
xchg
or
pop
jns
fwait
lcall
push
fdivrs
jp
rorb
lcall
push
add
cmp
mov
loop
add
add
dec
outsl
sahf
or
add
clc
add
add
call
call
push
mov
add
mov
clc
mov
dec
xchg
sbb
jl
std
hlt
lahf
rolb
add
add
icebp
arpl
add
clc
int3
or
pop
negb
fstpt
jle
add
pop
sahf
insb
mov
in
xchg
mov
clc
pop
mov
je
add
xchg
aad
fldt
int
loop
inc
clc
and
mov
clc
lcall
iret
clc
or
clc
aam
mov
mov
add
dec
scas
rolb
clc
jb
add
clc
ret
clc
dec
popf
adc
add
clc
ret
clc
mov
insb
imull
sub
xor
add
add
cmp
add
add
pop
and
fdivrs
arpl
add
clc
or
fwait
and
add
ljmp
inc
add
push
add
push
out
mov
inc
clc
push
pop
push
pop
das
push
add
scas
stos
sbb
clc
or
out
aas
and
add
add
add
add
add
add
into
scas
jecxz
ret
clc
data16
int
fs
lret
xchg
test
dec
and
enter
lret
gs
push
push
bound
add
add
clc
or
decb
cmp
stc
push
out
insl
mov
lret
das
xchg
mov
jns
clc
bound
add
lcall
dec
add
add
clc
or
add
clc
sbb
push
inc
clc
mov
clc
adc
add
insl
sbb
dec
pop
sub
clc
pusha
add
jnp
sbb
jl
leave
mov
add
rcrl
clc
jne
cld
mov
stos
clc
jbe
outsl
add
add
scas
adc
add
sar
scas
dec
mov
dec
cmp
mov
add
inc
clc
rolb
add
or
add
and
into
add
add
clc
fs
mull
add
test
mov
mov
add
adc
add
mov
add
jmp
cmpsl
clc
mov
add
push
clc
dec
movsb
clc
and
mov
inc
add
jo
add
out
das
scas
add
loop
sub
add
dec
int
hlt
aam
add
xchg
or
pop
lods
int
clc
inc
add
enter
dec
insl
dec
cmp
clc
aam
int3
add
add
clc
mov
clc
push
fsubrs
add
inc
add
mov
ret
clc
fcom
sbb
fidivrl
std
mov
pop
mov
mov
clc
jae
add
test
sti
leave
pop
mov
mov
flds
xor
add
cmc
fs
loopne
clc
pop
xor
sbb
clc
jne,pt
or
insb
xor
add
stos
adc
add
cmp
push
rcl
in
cmpsb
clc
mov
cltd
sbb
jb
add
lock
clc
mov
inc
add
jecxz
cmp
mov
mov
pop
insl
xchg
mov
iret
sub
add
inc
add
pop
ja
clc
lea
xchg
push
jnp
clc
inc
clc
mov
push
mov
dec
cmp
pop
sub
addr16
dec
cmp
clc
rorb
add
jno
add
loope
out
imul
mov
cmp
clc
mov
clc
outsb
mov
fisubl
loopne
je
icebp
adc
add
clc
clc
out
outsl
add
add
add
or
add
xor
add
push
cmp
clc
es
cld
add
add
clc
mov
mov
adc
add
add
lods
sbb
clc
push
pop
mov
repz
add
jne
lahf
xabort
in
cmp
adc
add
aad
rcl
pop
es
and
add
add
cmp
mov
inc
clc
clc
xor
add
add
cltd
sbb
clc
pusha
add
mov
add
jl
cmp
add
xchg
dec
jo
add
add
clc
mov
add
add
mov
cld
rol
clc
dec
fldt
test
dec
lods
push
add
ret
clc
dec
push
add
add
movsb
clc
or
clc
lcall
xabort
adc
add
clc
inc
add
ret
clc
or
mov
mov
scas
adc
add
add
adc
xor
add
imul
data16
js
clc
adc
test
add
inc
add
mov
push
and
test
sahf
addr16
jb
add
add
xchg
stc
cltd
test
lahf
cmp
clc
jecxz
mov
clc
xchg
lods
mov
cmp
mov
call
mov
aaa
cmp
push
or
clc
clc
jne
shrl
adc
add
add
add
out
sub
add
add
sar
inc
clc
out
in
test
jl
pop
imul
cli
jo
add
add
adc
add
clc
dec
dec
fidivl
xchg
das
jne
sub
addr16
inc
add
add
idivl
dec
sar
clc
popf
int
xchg
cmp
imul
iret
lea
add
out
popl
into
jno
add
inc
add
jnp
pop
mov
jge
clc
cld
popa
add
rcl
pop
outsl
jl
jge
adc
add
push
es
lods
movsl
clc
xchg
sub
sbb
mov
daa
clc
cmp
clc
int
add
mov
add
call
cld
in
shll
xchg
fbstp
add
jbe
cmpsb
clc
mov
xor
add
scas
dec
mov
xchg
imul
clc
xor
add
sti
pop
cld
mov
add
mov
clc
daa
clc
mov
in
xbegin
pop
or
add
mov
and
add
jne
hlt
ljmp
or
mov
clc
cli
mov
clc
push
add
cmp
cmp
dec
mov
add
add
cs
stos
inc
clc
pop
shrl
clc
ret
clc
pop
fwait
into
ss
clc
daa
clc
push
add
push
push
fcompl
adc
add
fstps
clc
fldt
test
add
or
push
int3
jecxz
daa
clc
outsl
popf
push
dec
jno
add
clc
ret
repz
clc
rcr
xchg
lret
sub
add
fsubl
add
clc
jns
addr16
repz
add
add
add
std
pop
mov
outsl
psrlw
flds
add
dec
xchg
daa
clc
ljmp
outsb
cmc
lock
clc
and
add
add
clc
inc
clc
pop
es
add
add
add
ss
aad
clc
xchg
loope
pop
push
xor
add
in
mov
add
add
stos
pushf
icebp
inc
clc
cmc
sub
test
test
pop
loop
lret
loope
ja
in
mov
jnp
xor
inc
add
jg
adc
add
adc
add
jp
fs
pop
ds
push
pop
clc
sbb
mov
clc
adc
add
add
cmp
pop
fidivs
dec
sub
xlat
or
add
add
add
cmpsl
clc
cmp
xchg
pusha
add
push
inc
clc
mov
clc
es
push
jge
dec
pop
and
push
es
dec
fwait
sbb
cltd
xor
add
or
pop
data16
cmp
push
icebp
push
add
mov
daa
clc
adc
add
jg
add
jnp
ret
mov
pop
cld
mov
jo
add
in
xchg
sub
push
push
add
sub
adc
add
pop
xor
add
mov
clc
loop
or
push
jae,pt
add
popf
jnp
movsb
clc
xchg
and
add
add
cmp
jecxz
push
add
mov
clc
cmp
add
inc
add
cmp
add
inc
add
and
add
add
mov
dec
or
mov
loope
pop
jns
aas
daa
clc
sub
cmp
adc
add
clc
and
add
fnstenv
sar
lcall
repz
loope
mov
out
pop
cmp
cmp
jmp
cmp
mov
ljmp
enter
lret
filds
add
cmp
sbb
shll
sub
cmc
xchg
and
jge
jp
cmp
clc
lret
ret
clc
out
xor
add
or
mov
add
lock
and
cltd
cwtl
es
sar
clc
loope
jo
add
pop
or
clc
dec
and
add
xchg
adc
clc
inc
clc
aaa
leave
push
xlat
test
in
into
fnstenv
add
add
clc
mov
js
icebp
out
ret
clc
add
add
add
xabort
sbb
cmp
inc
clc
imul
mov
pop
pusha
add
cmp
clc
insl
fcomp
xchg
shll
pop
cmpsb
clc
dec
xlat
in
lret
jno
add
push
jl
aaa
mov
mov
jl,pt
clc
mov
push
stc
scas
xchg
xor
add
mov
and
add
push
js
pop
insl
or
dec
outsl
inc
add
mov
clc
jo
add
lahf
mov
and
add
and
add
jo
add
sbb
or
pusha
add
shll
add
add
dec
adc
add
daa
clc
inc
clc
inc
clc
scas
sar
or
cmp
clc
jmp
iret
inc
add
or
pusha
add
fs
pop
out
or
data16
aaa
mov
xor
add
clc
push
clc
fistl
add
clc
decb
rol
clc
into
lcall
outsl
das
bound
add
adc
call
mov
dec
push
dec
mov
xchg
and
add
add
lahf
outsl
call
mov
sti
addr16
mov
clc
arpl
add
clc
inc
clc
pop
pop
stos
decb
clc
pop
je
push
fsubrl
inc
clc
sbb
mov
clc
xor
add
push
clc
pop
xor
add
mov
fnsave
clc
xchg
sgdtl
add
push
pop
dec
or
push
mov
inc
add
and
jle
outsl
and
add
add
sub
add
xlat
movsl
clc
enter
add
clc
adc
add
clc
sub
clc
push
adc
stos
xor
add
mov
add
lret
jp
pop
scas
rol
clc
outsb
aaa
adc
add
movsl
clc
insl
inc
clc
inc
add
mov
dec
pop
mov
sbb
in
sbb
dec
sub
push
add
gs
jb
add
sar
push
add
aaa
or
mov
arpl
add
cmp
mov
loop
dec
mov
clc
cli
fnstsw
or
add
jns
xlat
sar
clc
sub
add
scas
xor
add
popa
add
inc
add
or
clc
cmc
bound
add
clc
mov
ret
clc
or
into
or
add
jle
or
clc
dec
or
outsl
mov
clc
sti
push
add
ret
clc
xbegin
cmc
repnz
jb
add
mov
clc
sbb
ret
cs
mov
dec
pop
sti
sbb
test
outsb
das
lret
mov
std
stos
cmp
xor
add
imul
dec
fcoms
mov
pop
jg
or
in
mov
clc
pop
clc
mov
mov
and
add
and
ret
add
ret
clc
dec
aas
pop
aad
jae
add
lea
add
add
clc
cmp
jmp
add
roll
add
add
sar
add
lock
adc
xchg
arpl
add
add
sahf
cmp
clc
mov
xor
add
add
mov
add
add
add
data16
aaa
movsb
clc
push
movsb
clc
insl
in
push
add
out
push
push
mov
add
imul
clc
inc
add
push
push
test
sbb
cmp
add
sub
clc
aad
mov
iret
repnz
mov
or
popf
pop
mov
loop
add
inc
add
fsubrs
xchg
jbe
add
add
add
xchg
push
add
fstps
imul
cs
mov
js
xor
add
mov
mov
xchg
icebp
arpl
add
in
ret
mov
clc
xor
clc
sub
pop
rcrl
adc
clc
in
or
push
cli
add
add
and
add
clc
xabort
int
xor
add
cmpsl
clc
sub
clc
aam
add
xchg
inc
clc
iret
sar
and
add
add
outsb
cwtl
or
add
cld
out
mov
out
pop
pop
shlb
add
clc
nop
sbb
add
clc
sar
add
daa
clc
outsl
ret
clc
loopne
mov
int
insl
negb
mov
add
mov
out
ja
cmp
fldenv
add
clc
mov
inc
add
pop
mov
arpl
add
aaa
fwait
nop
repz
add
das
sti
mov
clc
adc
add
pop
mov
in
imul
pushf
mov
adc
clc
pusha
add
or
clc
dec
lea
div
out
sbb
clc
fisttps
ja
clc
jge,pn
xchg
cmp
clc
inc
add
mov
jne
jbe
clc
push
cmp
ret
add
push
add
int3
fstl
add
call
call
add
es
jmp
clc
hlt
xor
add
clc
jp
xor
add
add
add
mov
cmpsb
clc
fldenv
add
adc
add
cmp
clc
outsb
mov
push
push
push
lahf
testb
and
dec
jl
add
cmp
add
add
clc
rcr
inc
clc
and
add
mov
clc
pop
faddl
add
add
ljmp
adc
sti
xor
add
sahf
cs
lret
sar
addr16
jecxz
add
add
loopne
cmpsl
clc
stos
idiv
bound
add
add
idivb
imul
jnp
push
add
xor
add
dec
and
add
and
je
clc
or
lret
dec
push
and
jge
lea
pop
insl
cmp
clc
test
lea
mov
jb
add
clc
cmp
pop
shl
clc
xchg
out
popa
add
pop
push
add
imul
xor
add
add
shll
jg
es
jne
clc
sbb
mov
or
clc
in
sub
ret
clc
aam
clc
mov
movsb
clc
pop
out
cmp
clc
int
in
movsl
clc
or
gs
adc
clc
iret
inc
add
clc
shl
clc
stc
or
outsl
xchg
xchg
out
sbb
fisttps
xchg
mov
add
mov
adc
add
cmp
cmp
push
push
add
lahf
sbb
ss
push
sub
lock
add
inc
clc
inc
add
xchg
mov
in
ja
out
sbb
clc
add
add
add
into
add
add
jge
add
cwtl
and
add
sbb
insb
outsl
push
add
add
stos
jmp
xchg
cmp
clc
aas
mov
xchg
jb
add
xchg
adc
add
lods
fcoml
clc
adc
cmp
add
add
dec
addr16
mov
push
add
inc
add
or
arpl
add
add
mov
call
stos
dec
cmpsl
clc
dec
xlat
xor
jmp
add
in
ds
filds
inc
add
or
add
nopl
add
iret
cmc
dec
dec
fsubrp
lret
sub
mov
clc
mov
sub
add
xor
add
cmp
clc
mov
add
mov
adc
add
add
clc
and
add
cmp
ss
clc
dec
test
pop
cmp
sbb
into
fsubrs
repz
daa
clc
neg
int
cmpsb
clc
clc
push
cmp
add
inc
add
ds
clc
push
imul
xchg
bound
add
add
push
jnp
cmp
jo
add
xor
add
mov
clc
stos
stc
shll
add
jecxz
jne
clc
xor
xchg
fildll
xchg
push
xchg
jns
add
mov
mov
push
and
add
in
out
test
ss
lods
js
add
sbb
mov
sub
xor
add
stc
lret
dec
mov
rcll
movsb
clc
cs
sub
mov
add
mov
add
sbb
or
cli
pop
pop
clc
sar
clc
or
imul
pop
clc
pop
xor
add
sar
in
pop
xchg
cmp
add
movsl
clc
xchg
mov
clc
xor
add
clc
iret
test
pop
pushf
sar
xor
clc
mov
pop
adc
pop
adc
add
clc
mov
insl
cmp
in
iret
stos
imull
lods
dec
jbe
clc
lcall
add
insb
cmp
sub
add
add
add
clc
fs
mov
dec
int
hlt
jne
not
jns
hlt
cmp
mov
add
dec
xchg
js
pusha
add
mov
sub
sub
inc
clc
daa
clc
f2xm1
out
lcall
and
add
shlb
ds
clc
or
gs
decl
cltd
jg
popa
add
inc
add
cmp
clc
dec
xor
sti
mov
inc
clc
and
add
dec
js
outsb
push
add
jne
aam
clc
mov
add
bound
add
cld
outsb
movsl
clc
imul
clc
xchg
decl
xor
sar
add
testl
jecxz
sar
daa
clc
push
pop
jg
sbb
clc
cmp
push
adc
add
fists
mov
or
jb
add
cmp
loopne
daa
clc
or
add
add
jne
mov
clc
xor
add
add
clc
cmp
add
dec
jp
xlat
fs
or
mov
add
adc
add
lods
in
test
mov
outsb
inc
clc
shl
cmp
xor
add
cmp
call
and
add
add
lret
add
xabort
insl
push
jb
add
add
add
hlt
jmp
adc
clc
lret
add
loopne
and
add
int3
jne
jp
test
add
push
sahf
inc
clc
push
pop
insl
icebp
add
add
clc
and
add
cmp
fsubl
xchg
or
aad
xchg
sbb
test
clc
add
add
mov
lods
test
in
fistpll
inc
add
lods
xchg
fildll
loop
cld
mov
sub
or
leave
mov
cmp
push
add
je
inc
add
sub
add
frstor
add
cmp
add
cmp
xchg
ss
sub
out
fdivrl
add
addr16
ja
and
add
jne
popl
add
jne
dec
xchg
pop
int
clc
lcall
pop
loopne
fcmovne
jbe
mov
pop
push
mov
clc
repz
dec
sahf
pop
imul
mov
add
or
clc
push
clc
add
add
pop
push
and
add
dec
cld
pop
call
imul
clc
pop
mulb
add
test
jns
clc
mov
cli
sub
ds
cmp
clc
sar
iret
mov
cmp
aad
xor
add
clc
mov
add
dec
and
add
xabort
test
mov
add
clc
mov
inc
clc
push
xchg
inc
add
xor
mov
leave
pop
add
clc
sbb
clc
push
aaa
pop
and
add
xchg
pop
sbb
call
cli
roll
add
std
or
daa
clc
pop
clc
outsb
pop
rorl
clc
jbe
clc
or
repz
cmp
jb
add
add
pop
clc
sbb
mov
add
xchg
insb
or
je
negb
add
divl
add
arpl
add
jp
sub
clc
mov
add
clc
adc
add
ja
add
add
