add
add
add
aaa
aaa
aaa
aaa
aaa
std
std
std
std
std
std
std
std
add
lea
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
add
out
out
out
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
jle
jle
jle
jle
jle
jle
add
lods
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
es
add
add
add
fcomp
fcomp
fcomp
fcomp
fcomp
add
add
lret
lret
lret
add
adc
adc
add
repnz
add
jmp
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
add
add
mov
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fs
add
jmp
addb
add
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
add
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
add
in
add
add
cs
add
add
sub
sub
sub
sub
sub
add
rol
roll
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
and
and
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
add
xlat
xlat
xlat
xlat
xlat
xlat
add
add
sub
mov
mov
mov
mov
mov
add
sbb
add
mov
mov
mov
mov
mov
add
out
out
out
out
out
out
out
add
xchg
add
add
add
add
add
xchg
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
or
push
mov
add
add
test
fcmovnu
or
add
sub
sub
sub
add
add
mov
add
add
mov
pop
pop
pop
repnz
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
xor
xor
xor
xor
xor
xor
add
add
and
and
add
cli
cli
cli
cli
cli
cli
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
sub
sub
sub
add
loope
loope
loope
loope
loope
loope
add
add
rcl
rcl
rcl
rcl
rcl
add
add
int
int
int
int
int
int
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
mov
add
fstp
fldl
add
or
or
or
or
or
or
or
or
or
or
or
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
xor
lods
lods
lods
lods
lods
lods
lods
lods
add
add
add
ja
ja
ja
ja
add
add
sub
sub
sub
add
fiadds
or
or
or
or
or
or
or
or
or
or
or
or
or
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
repz
add
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
add
loope
loope
loope
loope
loope
loope
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
add
addl
addl
stos
stos
stos
add
arpl
add
push
push
push
flds
add
add
add
sub
add
sbb
sbb
sbb
sbb
sbb
sbb
add
add
mov
mov
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
jle
add
or
or
or
or
add
add
gs
rcl
rcl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
sti
sti
sti
sti
sti
sti
sti
sti
add
add
incl
add
add
add
add
repz
add
add
popf
popf
add
push
push
add
inc
outsb
dec
psubusw
sub
fcompl
pop
div
jae
addb
rolb
mov
inc
jae
cli
int3
imull
and
push
aam
das
xchg
and
cltd
mov
mov
sbb
lock
movsl
xchg
loope
jecxz
dec
mov
add
dec
shlb
in
into
lods
rolb
and
shlb
loopne
jmp
sbb
mov
add
inc
jmp
and
jl
jl
pusha
loopne
rolb
imul
roll
inc
and
shrb
pop
jg
addb
dec
push
fwait
and
int3
fcomps
xor
cli
aad
sbb
inc
sub
or
mov
rorb
sbb
imulb
add
or
jb
test
inc
aaa
fcompl
lock
fdivl
xor
mov
and
push
and
adcl
loopne
cmpsl
out
sbb
repz
jns
ja
mov
and
fistpl
inc
cmp
add
shlb
dec
inc
jne
mov
cmc
pop
pushf
xor
pop
testl
adcb
clc
xor
pop
outsl
sub
add
je
nop
dec
pop
add
repz
test
jb
insb
jns
movsl
mov
inc
shlb
pop
adc
dec
repnz
ret
xorl
out
pusha
imul
loopne
fcomi
inc
push
and
add
rclb
pop
test
jl
sbb
push
in
inc
sbb
test
sbb
mov
enter
mov
inc
add
loopne
outsl
shlb
jg
sub
out
loopne
sahf
jb
sub
test
addb
inc
mov
out
in
and
sarb
lock
jns
dec
and
mov
jae
movsl
add
andb
fsubrs
xchg
inc
pop
mov
into
adc
mov
sbb
das
repnz
les
insb
dec
lahf
dec
jne
out
and
andb
push
rcrb
outsl
pop
adc
mov
dec
outsb
es
mov
cli
mov
fmull
inc
mov
shr
fdivr
push
lret
jle
xchg
out
dec
push
add
rclb
mov
cmp
loopne
es
xor
imul
loope
and
xchg
repz
int3
cld
lahf
pop
inc
std
jae
mov
mov
into
call
lock
and
rolb
fisubl
xchg
mov
push
add
lret
loopne
pop
xchg
pop
ja
push
aad
sbb
cmp
or
inc
mov
and
int3
sub
inc
out
fwait
imul
sub
call
or
inc
dec
fstps
add
jb
ret
stos
loopne
add
sbb
inc
push
shlb
and
in
inc
add
add
aas
popa
sub
and
stc
dec
dec
jl
and
sbbb
inc
int
movsl
dec
push
add
pusha
aaa
std
daa
loop
roll
lret
lahf
inc
xor
sub
pop
or
scas
mov
dec
or
cltd
lahf
xor
mov
in
pop
xchg
xor
add
cmp
mov
lahf
js
outsl
add
mov
andb
mov
lods
push
push
loopne
dec
xor
xor
push
mov
mov
shl
jnp
push
js
xchg
es
mov
xor
mov
and
hlt
les
xchg
pop
xchg
rcrb
pop
jb
or
std
push
push
pop
gs
cmpsl
ds
mov
clc
mov
inc
clc
jge
or
add
enter
add
cmc
in
push
into
fsubs
add
and
push
fisubrs
in
pop
roll
pop
mov
nop
out
jae
inc
int
sbb
mov
movsb
loopne
mov
cltd
or
mov
fs
js
mov
jle
jae
mov
test
cmpb
nop
jae
inc
and
ror
lds
or
loopne
push
inc
inc
and
divl
and
arpl
pop
push
aad
lods
int
int3
jp
fistps
in
jnp
sbb
pushf
pop
xor
jne
and
pop
add
pusha
inc
call
loopne
jecxz
cmpsb
add
adc
jbe
mov
pusha
loopne
add
add
rorb
repnz
addb
lret
pop
ss
fcoml
sbb
inc
int3
mov
stos
jg
loop
les
test
inc
pop
add
sub
and
push
sub
mov
cmc
cmp
push
xchg
xlat
add
outsb
push
movsb
pusha
loopne
mov
adc
jl
mov
mov
inc
mov
into
cmpsb
add
jns
jno
imul
cld
and
sbb
dec
inc
sbb
ss
outsb
mull
and
test
mov
xchg
loopne
or
lfs
mov
add
in
or
add
loop
je
arpl
jns
xchg
cmp
xor
mov
cmc
fdivl
loop
pop
cmp
ljmp
call
adc
aad
andl
pusha
outsb
call
and
inc
inc
sahf
fldcw
rol
js
fldenv
inc
mov
mov
pusha
mov
ror
add
or
inc
xchg
mov
stos
loopne
mov
mov
and
shll
mov
mov
orb
and
push
jp
xchg
xor
and
fists
mov
add
sub
inc
fs
xlat
js
int3
call
das
nop
mov
andb
jmp
int3
rorl
pop
scas
pusha
inc
jbe
mov
int
and
pop
mov
out
stos
mov
imul
in
shll
lahf
and
loopne
adc
mov
out
call
add
std
addr16
or
popa
rcrl
int3
popf
inc
inc
pushf
and
movsb
andb
and
mov
add
fistl
mov
stos
sar
pop
adc
xchg
pop
sbb
shlb
outsb
out
pop
xchg
adc
mov
repz
jbe
in
cld
sbb
or
loopne
shll
xchg
lods
and
pusha
mov
sub
mov
push
fwait
jle
inc
andb
mov
loopne
cli
lods
and
fadd
push
adc
data16
mov
dec
rol
fwait
jbe
xchg
xor
jb
jo
pushf
ret
pop
mov
loopne
push
xchg
fldenv
jne
mov
cmp
dec
mov
inc
jg
jne
sbb
mov
stc
mov
mov
decl
les
sub
shl
pop
mov
xor
ljmpw
imul
push
cmpsb
loopne
dec
pop
pop
jns
lahf
add
adcb
inc
mov
add
mov
cltd
in
sub
ljmp
add
jp
imul
rclb
mov
or
and
push
std
mov
mov
add
ret
lret
jno
andb
cld
dec
cmp
mov
add
rolb
xor
lds
or
fwait
outsl
aad
sbb
jb
bound
les
mov
loopne
int3
scas
movsl
sub
add
push
repnz
and
push
inc
ror
cmpsl
xor
mov
popf
mov
sahf
jp
ret
rcrl
ljmp
loopne
push
or
jmp
add
inc
inc
dec
loop
jae
das
ret
sbb
and
mov
lret
aas
loop
dec
imull
xchg
insb
movsl
dec
xor
bound
inc
xchg
mov
outsl
push
popf
push
dec
jle
jge
add
and
rcr
rolb
mov
sub
shlb
rolb
aaa
adc
lods
and
adc
cmp
enter
cmc
mov
jecxz
inc
dec
shl
add
fldenv
mov
ret
dec
push
imull
sub
fsubl
cli
sbb
lods
inc
shlb
pusha
shrb
push
jae
mov
push
mov
loopne
jb
dec
cmp
dec
fsubr
pop
add
mov
repz
outsl
loope
xlat
sbb
mov
mov
jne
cmpsl
repnz
adc
xor
inc
mov
add
mov
fs
adc
inc
fwait
lds
sub
jle
subl
movl
mov
sbb
in
jb
mov
imul
sub
xor
movsl
cli
pop
hlt
popa
sbb
pop
pop
inc
dec
addb
enter
push
push
push
in
dec
sub
loopne
add
mov
dec
fsubrs
jp
push
pusha
inc
hlt
pop
mov
mov
jno
shlb
push
xor
fimuls
ja
mov
scas
inc
mov
push
in
movsl
pop
pushf
add
and
mov
rolb
jl
mov
dec
inc
movsb
mov
mov
movsl
jle
adc
sub
xorb
jne
cmp
loope
test
inc
push
loopne,pn
stc
adc
add
xor
push
flds
gs
leave
ret
mov
adc
fistps
mov
xchg
out
mov
and
mov
mov
arpl
arpl
sbb
addb
fwait
push
sub
mov
fldcw
push
cmp
pop
fcoms
mov
shlb
mov
mov
cltd
enter
je
out
sub
inc
in
sub
cmp
pop
xlat
jnp
mov
cmpb
lods
and
cmp
adc
and
lahf
lret
pop
into
mov
add
aaa
imul
sbb
adc
adc
mov
adc
cmp
mov
cmp
clc
push
add
mov
insb
scas
and
inc
mov
mov
rolb
cmp
or
shrb
pop
fstpt
mov
jns
hlt
sbb
fcomps
repz
sbb
lcall
cs
rcrb
jecxz
js
pusha
and
add
and
inc
sahf
fwait
mov
out
rcl
mov
and
adc
rolb
and
inc
or
mov
outsl
or
sub
push
mov
add
xchg
or
pusha
jle
inc
psadbw
shl
jl
iret
sub
dec
shrb
jecxz
add
loopne
out
orl
iret
push
rorb
mov
test
std
push
mov
repnz
lret
xchg
dec
jle
or
mov
dec
add
loopne
rolb
jmp
fdivr
mov
loopne
fmuls
and
jecxz
pop
movsb
andb
imul
mov
ret
repnz
mov
mov
loopne
cmp
push
das
ret
ret
or
sbb
pop
loopne
loopne
mov
xchg
xchg
js
jg
testl
icebp
dec
call
inc
sarb
dec
xor
ror
shll
push
and
jne
mov
test
push
xor
mov
pop
mov
mov
adc
repz
insb
test
xorb
inc
ret
shlb
push
push
aad
adc
push
jae
out
addb
fs
xchg
fsubp
fsubr
jne
in
inc
xchg
movsl
test
and
cli
xchg
jmp
pop
int
shlb
dec
imul
pop
jle
lods
and
or
insb
jns
add
stc
jge
cmpsl
add
mov
rorb
pop
stos
enter
repnz
inc
lcall
loopne
aam
sti
jne
loopne
add
fwait
pop
mov
loopne
push
xor
stos
add
pop
add
outsb
repz
shl
inc
shl
inc
lods
mov
jne
jae
and
sbb
add
mov
inc
push
call
xchg
int3
or
pusha
xor
insl
in
xor
xlat
clc
sbb
loopne
aam
pop
sbb
out
pop
dec
xor
fstps
inc
push
jmp
pop
icebp
xchg
mov
jae
or
sub
sub
add
shl
add
movsb
inc
inc
jmp
pop
andb
ret
mov
inc
arpl
cmp
andb
jecxz
sahf
clc
int
hlt
xchg
xor
addb
xor
sbb
mov
mov
adc
xchg
pop
adc
adcl
xor
xchg
push
fstps
and
mov
push
mov
jne
sbb
mov
xchg
xor
cld
xchg
fdivrs
sub
adcb
loopne
jne
orl
hlt
xchg
and
xchg
mov
jg
pop
sub
rol
nop
cmp
inc
loope
cmp
cmp
shlb
stos
and
int
dec
jg
xor
adc
in
pusha
int3
and
rcr
aam
pop
int3
sub
loopne
add
inc
xchg
outsl
dec
movsl
add
pusha
jnp
ss
lds
mov
mov
mov
cmpsb
shlb
inc
addb
fcompl
shl
in
stos
stos
shlb
clc
fucomip
in
ja
or
out
inc
out
loop
leave
push
lahf
mov
xor
movsl
cmp
mov
sbb
inc
and
mov
cwtl
xchg
lods
and
arpl
xchg
or
mov
mov
call
call
scas
and
jno
mov
bound
sub
xor
mov
jl
or
loopne
shll
sti
cmp
or
lods
imul
test
add
jnp
out
and
popf
sub
jmp
andb
fidivs
andb
dec
cli
inc
scas
cmpsl
mov
and
jne
and
mov
rorb
andb
jns
xor
lock
and
inc
fcmovnbe
repnz
ja
popa
fcmovnbe
shll
rcrb
mov
pop
out
inc
and
sub
imul
mov
add
push
out
sti
xor
xor
mov
and
stos
xchg
rolb
shlb
add
outsl
ljmp
pusha
pusha
or
adc
pop
push
mov
pop
xchg
inc
and
pusha
test
and
ljmp
adc
adc
pusha
lret
push
sub
or
and
push
mov
test
inc
cmp
dec
sub
fisubs
push
stos
sub
push
mov
sti
pop
std
jmp
and
inc
mov
inc
mov
xchg
xlat
jno
mov
add
scas
rolb
pop
xchg
fcomip
das
in
cmpsl
inc
add
or
add
push
push
pusha
add
pop
cmpsb
pusha
and
or
loopne
jno
xor
inc
sub
mov
add
shl
mov
push
addb
ds
das
dec
mov
jbe
mov
cmpsl
rclb
xor
mov
test
mov
sbb
sub
shll
cmp
or
sbb
mov
data16
push
repnz
shr
cmp
scas
and
ret
popa
sahf
and
and
pop
push
or
mov
movsb
loopne
xchg
sbb
pusha
sbb
dec
movsl
add
sarb
jno
mov
xor
inc
xchg
inc
lret
daa
popf
push
addb
sub
rcrl
xchg
sub
loopne
inc
rcrb
aas
push
sbbb
fcoms
sub
fcompl
jne
push
and
add
pushf
cld
push
and
jmp
pop
cmp
jle
or
loopne
shlb
int3
test
ffree
add
mov
add
mov
mov
push
pusha
subb
add
pusha
pusha
mov
push
jmp
aad
inc
loopne,pn
push
xchg
pushf
push
jb
outsb
fcomi
in
out
cli
imul
add
add
mov
mov
mov
and
add
imul
xchg
sbb
jbe
popa
mov
pusha
shrb
cmpsb
andb
add
repz
pusha
or
and
aaa
adc
cld
and
and
pop
aas
ja
mov
in
mov
xor
sarb
fistpll
mov
mov
addb
sbb
lods
xor
inc
xchg
sub
mov
lcall
jo
mov
aaa
fsubl
cwtl
aam
data16
xchg
test
mov
data16
inc
scas
inc
and
add
scas
shlb
cld
dec
push
cwtl
data16
loope
call
pop
or
push
push
add
pusha
lds
pusha
sarb
sbb
mov
and
fwait
add
int3
dec
mov
out
or
fs
scas
mov
dec
out
in
iret
imul
push
xchg
pop
push
popa
dec
mov
pop
pusha
xor
lock
loope
dec
repz
addl
xor
pusha
add
addr16
add
out
and
hlt
jmp
enter
dec
test
mov
mov
mov
push
sar
mov
idivb
jnp
pusha
pusha
lock
ss
and
std
addr16
out
outsb
ja
or
push
mov
sbb
insl
push
pop
mov
ret
andb
sbb
lahf
aaa
mov
add
sarb
add
push
jmp
pusha
movsw
fisubl
fsubl
andb
test
inc
pusha
mov
mov
stos
out
push
add
inc
fcoml
into
dec
in
movsb
loopne
cmp
scas
shlb
push
cmp
stos
mov
lret
pop
pusha
fcmovne
mov
mov
lods
pusha
rclb
in
mov
dec
pop
roll
pop
aad
xor
std
sub
pusha
adc
jle
jnp
add
xor
add
adc
lods
loopne
cmp
fcoms
scas
insb
push
daa
aaa
in
loopne
movsb
and
repnz
stos
and
iret
dec
pop
movsl
iret
sub
loopne
cld
push
jno
addl
pusha
loopne
xor
call
out
adc
mov
adcb
mov
add
and
in
or
or
sbb
xchg
sub
shl
pop
or
add
inc
mov
inc
dec
test
inc
xlat
xchg
push
repz
mov
sub
xchg
lds
pusha
or
mov
sub
cmc
lahf
roll
add
add
pusha
xor
push
mov
andb
test
dec
mov
jns
cli
andb
pusha
and
outsl
push
jo
int
xchg
mov
dec
bound
sbb
sbb
aas
xchg
shl
mov
adc
xor
jne
cmpsl
mov
push
stos
inc
inc
lret
pusha
sub
lret
repnz
add
jle
in
add
push
out
push
mov
out
arpl
scas
addb
adc
in
inc
and
nop
bound
jo
inc
sbb
rcr
lahf
jns
addb
je
mov
daa
or
addb
sbbb
and
fcomip
call
dec
lock
rolb
sbb
lcall
fimuls
sub
inc
push
les
xor
inc
loopne
and
ffreep
and
shlb
mov
fsubrs
ret
jnp
lahf
into
stos
in
nop
sbb
loopne
rolb
lahf
push
mov
xor
pusha
add
pusha
inc
insl
inc
jbe
inc
pop
adc
xor
mov
repnz
aas
stos
out
cmp
mov
mov
inc
xor
mov
inc
loopne
ss
stos
loopne
inc
and
push
add
pop
mov
andb
xchg
push
mov
sbb
cltd
clc
adc
or
mov
fisttpll
jg
andb
xchg
je
cli
cli
testb
loope
lods
pusha
pusha
cmp
nop
jg
mov
andb
loopne
or
shlb
or
add
scas
mov
xor
sbb
hlt
in
mov
int
add
xor
stc
adc
inc
jecxz
andb
loopne
andb
shrb
and
ror
xor
add
and
out
pop
inc
cmp
push
addb
sub
ret
mov
mov
xor
lds
and
cmpb
dec
pop
cld
out
xor
hlt
mov
mov
inc
mov
inc
pop
add
add
xchg
sbb
add
rclb
sbb
xchg
daa
or
xchg
xchg
sbb
xchg
sub
lock
shrl
adc
loopne
xchg
cmc
cmpsb
add
jo
cwtl
sbb
inc
lret
js
and
lea
rol
test
mov
or
mov
add
and
mov
pop
out
sub
and
xchg
or
add
add
add
bnd
outsb
mov
inc
leave
mov
loopne
push
fiadds
xchg
and
and
xlat
add
aaa
sbb
out
sbb
out
jmp
pushf
imul
xor
arpl
or
loopne
push
int
add
and
fistpll
adc
ret
movsl
push
and
addb
lret
jo
cwtl
cwtl
fsubl
jno
and
mov
inc
outsl
rcrb
inc
pop
adc
adc
cld
je
leave
mov
dec
or
xchg
and
enter
xor
sbb
cwtl
popa
cltd
mov
loopne
mov
jle
add
and
int3
mov
adc
addb
dec
lahf
mov
mov
add
inc
orb
mov
inc
and
out
mov
sbb
jbe
fnstsw
sbb
lods
and
daa
pop
xchg
lcall
lea
std
dec
inc
push
mov
xor
jns
dec
daa
scas
out
lcall
inc
lahf
and
pusha
mov
ja
and
add
inc
lds
test
mov
ret
sbb
cli
mov
mov
test
inc
mov
adc
cmp
cmpsb
add
and
pusha
or
pusha
mov
sbb
cmp
aam
iret
sub
andb
loopne
shl
pusha
xor
xor
dec
dec
mov
shll
rcrl
xchg
sahf
xchg
scas
pusha
and
test
js
and
rolb
fbstp
clc
dec
adc
mov
cwtl
xchg
mov
add
loopne
push
jmp
cmc
xchg
mov
rolb
mov
rcrb
loopne
scas
andb
pusha
or
cli
aad
lahf
push
lcall
int
inc
add
mov
pusha
negb
adc
inc
and
ja
mov
push
and
jmp
into
inc
std
push
pop
ja
pusha
inc
ret
shlb
xchg
pop
imul
xchg
or
pushl
subl
cmc
pop
cmp
fcomi
shll
or
andb
cmpb
inc
mov
fisubrs
loopne
mov
pusha
sbb
sub
addb
add
jno
ja
fisubrl
std
ret
lods
push
xchg
inc
je
adc
mov
incl
andb
add
mov
out
xchg
js
jle
inc
and
repnz
inc
loopne
add
dec
push
out
xlat
stc
imul
cltd
sbb
mov
loop
divl
add
shlb
shlb
lds
or
cmpsb
shl
inc
and
mov
aaa
mov
xor
adc
xor
jg
ds
dec
inc
ror
lahf
shl
jg
mov
pop
iret
xchg
mov
aaa
test
jo
addb
and
mov
addr16
popa
fcompl
adc
mov
jo
jmp
and
jno
movsl
adc
cmpl
pop
adc
dec
mov
mov
loopne
sti
rclb
lcall
cmp
sar
jl
add
aad
add
xor
loopne
xchg
mov
sub
adc
mov
xchg
andb
rorb
andl
dec
inc
fs
jne
cmovle
lds
add
lret
bound
mov
ja
dec
mov
stc
jae
and
aad
daa
sub
inc
sti
push
push
sub
fbstp
sbb
mov
lds
ds
popa
jne
and
mov
mov
push
stos
inc
mov
stos
push
jg
and
sbb
repnz
or
cmpsl
aas
sbb
mov
scas
and
nop
and
cmp
loopne,pn
or
rclb
aas
push
mov
scas
call
ret
loopne
adc
loopne
dec
pop
js
loopne
aad
adc
rcrl
sub
dec
mov
test
repz
andb
scas
shl
mov
loope
xor
jge
jbe
dec
and
and
arpl
repz
xor
shlb
mov
inc
and
or
adc
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
ret
divb
loopne
rolb
xchg
repz
movsl
cmpsb
and
mov
loopne
js
stc
ret
push
loopne
mov
mov
mov
inc
rclb
pusha
pop
stc
xchg
or
filds
pop
mov
test
movsb
mov
and
sarb
and
rolb
aaa
xchg
pop
stos
outsb
fidivs
jle
jl
push
sub
pop
xchg
jmp
add
sbb
andb
jo
sbb
push
push
pusha
sub
mov
and
adc
and
mov
push
andl
mov
rolb
fcompl
repz
cmp
jl
sub
addb
loopne
push
push
pusha
inc
mov
or
negb
sub
stc
fisttps
adc
addb
fstpt
fildl
mov
mov
test
inc
inc
dec
jno
leave
lret
in
add
push
in
in
rol
decl
loopne
push
jecxz
enter
icebp
jmp
adc
and
dec
dec
sub
pop
fs
xor
addb
push
mov
dec
shrl
mov
pusha
pusha
lahf
xor
mov
lods
loopne
xchg
addb
imul
push
inc
aad
pop
and
inc
mov
in
iret
fwait
stos
movsb
inc
add
pop
pop
and
push
mov
pop
dec
inc
sub
notb
add
add
sub
and
mov
aas
aam
mov
fiadds
rorb
push
pop
push
and
mov
cmc
pop
sbb
sbb
cmp
lods
pusha
pusha
fs
call
test
and
test
scas
and
add
mov
popf
lcall
inc
xor
shlb
lahf
mov
inc
ret
addb
pop
scas
mov
pusha
xchg
dec
cmp
rcll
in
add
clc
add
cmp
jle
and
inc
adc
fwait
arpl
arpl
jbe
imul
ret
sahf
mov
mov
in
xchg
adc
mov
inc
aad
rol
or
sbbb
rolb
sub
mov
mov
cmpsl
mov
xor
sbb
sbbb
inc
lods
fisubrl
pop
push
cmp
push
gs
mov
adcl
cltd
cltd
pusha
idiv
add
lods
mov
sti
sbb
icebp
out
xor
jg
pop
lock
sub
subl
loopne
mov
jnp
ja
and
xor
rol
jmp
iret
call
cmp
pusha
shlb
ljmp
cli
cltd
stos
jl
pop
cwtl
out
clc
mov
fildll
and
gs
jbe
scas
cwtl
fstpt
mov
les
and
and
pop
push
dec
xchg
stos
mov
mov
push
mov
call
insb
lds
int
mov
inc
js
insl
xchg
test
mov
inc
adc
mov
mov
jp
push
shll
dec
repz
inc
and
or
dec
xor
sti
mov
movsl
outsb
adc
stos
add
call
dec
add
mov
repz
and
dec
aaa
pusha
shlb
pop
clc
add
or
mov
xchg
adc
cs
loopne
pop
and
inc
inc
aam
push
or
inc
dec
aad
xchg
sahf
clc
ljmp
pusha
and
pusha
mov
xlat
mov
add
addb
and
xor
and
addb
dec
lcall
inc
mov
dec
xor
iret
into
cmp
idivl
call
aas
sbb
andb
mov
mov
rol
sub
inc
data16
insl
pop
adc
stc
sbb
in
add
mov
adc
add
andb
inc
inc
pop
or
inc
inc
sbb
mov
out
iret
data16
loopne
jns
movsb
and
call
out
data16
mov
mov
pop
mov
inc
shrb
test
pop
outsl
test
add
sbb
jg
scas
roll
push
mov
pushf
rcrb
mov
cld
add
and
mov
inc
sbbb
fs
scas
shlb
and
movsl
filds
push
adc
rolb
dec
andb
inc
jno
inc
fistl
arpl
into
mov
add
scas
cmp
push
pop
std
aam
cltd
inc
test
and
sahf
cmp
dec
fstl
js
pop
push
jae
pop
iret
inc
outsb
ljmp
dec
xor
push
inc
shlb
or
outsb
fdivl
fsts
dec
dec
mov
in
aas
ds
pop
pop
adc
add
lahf
mov
push
xchg
add
add
mov
clc
and
push
hlt
xchg
or
mov
ja
jb
xchg
ja
addb
mov
cmp
and
dec
push
jecxz
or
dec
lods
and
lds
pop
js
jmp
outsl
pusha
cld
dec
test
shlb
mov
add
sub
inc
sbbl
xchg
rolb
hlt
fcomp
in
loopne
xor
pusha
pusha
not
roll
addb
cltd
loope
in
addb
mov
xchg
andb
and
inc
sub
cmpsb
add
ret
mov
mov
lret
jae
sbb
and
in
cmp
add
loopne
cli
out
std
dec
push
cmp
sbb
enter
cmpsb
loopne
les
pop
or
aad
int
xor
in
xchg
pusha
testl
inc
call
mov
nop
das
daa
cmc
pop
mov
mov
pop
ja
mov
push
dec
pop
or
pusha
int3
xor
rclb
mov
jp
pop
mov
jo
pusha
and
adc
mov
mov
rorb
xchg
cmpsl
jae
dec
pop
call
sub
fs
popf
xchg
outsb
pushf
adc
push
sub
stos
push
sbb
xchg
pop
push
inc
mov
iret
popa
rcrl
sub
subb
xchg
test
test
mov
mov
pop
in
xor
pop
and
hlt
mov
mov
pop
push
inc
xorb
fwait
inc
jmp
inc
dec
or
outsb
sbb
cmp
sub
jb
and
cs
mov
loop
and
mov
inc
xchg
orb
sahf
inc
inc
add
jle
sarb
ficoml
aad
xchg
clc
adc
int3
ret
ja
mov
popf
lds
sbbb
shll
loopne
inc
repz
add
jbe
add
rorb
aad
repz
pop
add
add
mov
xchg
insl
ss
sbb
shlb
rolb
inc
and
dec
rcll
and
rorl
in
js
cmp
enter
adc
add
or
out
out
aam
inc
and
ds
jl
into
adc
daa
fs
aas
sub
mov
repz
das
xchg
mov
orl
pop
jg
add
shlb
and
mov
addb
xorb
lds
pop
or
push
mov
push
lods
bound
inc
bound
std
ret
push
rclb
jl
cmp
ss
loopne
repnz
or
addb
andb
das
pmaxsw
and
cltd
pop
jno
mov
mov
dec
xchg
xchg
test
cmpb
mov
loopne
repnz
bound
jecxz
adc
hlt
out
jl
loopne
in
sbb
imul
mov
inc
cmpsb
rolb
mov
pop
sbb
dec
movsl
addb
adc
pusha
mov
adc
clc
push
ja
adc
insb
fsubr
outsb
push
mov
pusha
inc
xor
mov
xchg
xchg
inc
xor
sti
enter
fwait
shll
push
push
into
dec
ror
rcrb
shlb
mov
sub
pop
pop
insb
inc
mov
inc
movb
cmpsb
pusha
rclb
inc
inc
lahf
addb
fiaddl
mov
movsb
addb
jg
scas
and
je
or
incl
rcll
adc
mov
xchg
ja
xchg
xchg
mov
and
and
fdivl
push
inc
rolb
jae
jae
addb
mov
adc
cmp
jae
jge
fstps
fs
xor
jmp
movsb
inc
pusha
mov
mov
outsl
pop
fistps
sar
movsb
loopne
test
mov
int
jmp
loopne
test
fildll
mov
loopne
mov
inc
inc
mov
dec
jg
cwtl
xor
inc
arpl
sbb
sbb
inc
jle
ds
dec
out
rol
or
out
shr
push
arpl
add
nop
jb
pop
adc
sub
rorb
inc
jae
xor
jl
jno
and
pusha
add
and
cltd
jmp
push
fcomp
loope
adc
push
aad
pusha
shrb
loope
dec
sti
mov
dec
dec
call
or
mov
xlat
nop
jl
pop
fsubrp
pusha
lods
addb
test
add
mov
outsl
mov
shlb
lret
aam
dec
xchg
mov
ror
dec
mov
mov
enter
xlat
repnz
mov
pusha
scas
js
decb
repnz
sbb
andb
sbb
in
out
mov
and
jl
xchg
or
push
shrb
dec
cmc
out
or
addb
and
mov
xorb
xchg
into
push
fcmovnu
mov
jmp
push
pop
inc
lods
add
test
jmp
sti
pop
add
inc
addr16
rol
out
xlat
fcoml
loopne
fwait
inc
stos
and
fdivs
xor
pop
inc
lret
xchg
add
and
jmp
nop
inc
ficoml
loope
outsb
xchg
dec
test
ds
jnp
or
add
pop
lock
adc
xchg
sbb
mov
xchg
into
lret
shl
jecxz
pop
sbb
gs
inc
cmp
scas
call
jp
adc
mov
xlat
out
mov
or
jb
and
mov
pop
lock
inc
cmp
ljmp
pop
je
dec
dec
into
ss
loope
dec
inc
push
repz
jmp
push
inc
pusha
addr16
lods
inc
lret
sub
xchg
sbbl
lods
inc
and
arpl
out
xchg
mov
addb
data16
inc
push
imul
subl
sub
loopne
inc
cmpb
xchg
fdivrs
mov
sbb
arpl
sti
sub
pusha
dec
rolb
icebp
xor
xchg
sti
movsb
pusha
cmpb
mov
inc
test
add
xor
add
adc
cmp
mov
fsubl
cmp
shlb
sbb
mov
addl
add
out
js
and
fmull
sub
pusha
sbb
inc
clc
fwait
adc
mov
std
mov
xor
mov
or
inc
xor
pop
dec
xor
push
push
push
push
fcomps
or
scas
add
call
gs
push
push
pop
sahf
jae
add
push
pop
mov
sarl
aam
fidivrs
leave
pushf
cwtl
test
mov
int
jmp
dec
mov
les
mov
repnz
jl
outsl
hlt
sbb
out
push
test
adc
cmpsl
sar
popa
add
icebp
add
inc
mov
or
loopne
mov
pop
xchg
lea
mov
pop
fstps
sahf
jns
je
shlb
pusha
xlat
aaa
test
add
add
xchg
loopne
mov
das
int3
xor
into
mov
xor
and
std
dec
mov
js
push
inc
loopne
pop
pushf
mov
shlb
loopne
mov
aad
mov
addb
cmp
and
xorb
lds
movsl
les
imul
cmp
sub
shr
push
ss
test
fsubl
rolb
outsl
js
pusha
mov
lods
add
inc
popf
push
add
in
xchg
icebp
xchg
pop
sbb
sbb
aad
shl
push
in
addb
mov
lcall
std
sub
cmp
mov
sbb
xor
hlt
cmp
imul
mov
and
jl
pop
dec
xor
xlat
pop
sahf
andb
das
call
mov
mov
mov
loopne
mov
ret
inc
loopne
lods
in
lret
ret
or
mov
dec
stc
pop
or
pusha
push
orl
pusha
xchg
or
pusha
clc
push
mov
aad
push
and
mov
das
pop
aam
leave
lea
mov
mov
pusha
dec
mov
sbb
shl
fmul
int3
mov
andb
shrb
addb
pop
leave
mov
scas
add
jle
rcll
pusha
jns
mov
pusha
rcrb
aas
cmpsb
pusha
and
fmul
adc
sbb
idiv
test
pop
xor
inc
shlb
in
xchg
jo
xchg
int3
rorb
pop
inc
cmpsb
add
mov
sub
loopne
lret
shlb
xchg
sti
ds
stos
adc
loopne
cld
xor
cmc
xchg
aam
and
sti
int3
jl
andb
inc
add
ljmp
push
mov
pusha
loopne
adc
mov
sub
movsb
loopne
sbb
subb
mov
pop
xor
ret
pop
daa
stos
outsl
jmp
inc
push
cmp
sbb
lock
test
stos
loopne
push
es
and
daa
popa
push
dec
lahf
rorl
loopne
repnz
aam
xlat
out
push
xor
aaa
fdivr
pusha
or
mov
and
and
push
sti
mov
aas
lahf
mov
imul
test
mov
imull
cmp
mov
mov
add
mov
bound
xor
push
clc
repnz
nop
cld
jae
dec
mov
xor
dec
ss
nop
push
mov
leave
nop
jmp
mov
jo
cmp
xlat
je
clc
repnz
nop
cld
jae
add
mov
nop
push
mov
leave
nop
jmp
add
sarb
add
or
jg
clc
repnz
nop
cld
jae
mov
add
nop
cld
jae
xor
add
add
cmc
mov
dec
inc
clc
repnz
nop
cld
jae
or
add
jne
clc
repnz
nop
cld
jae
ret
or
fs
fwait
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
sbb
jbe
ret
mov
loopne
fsubrl
add
clc
repnz
nop
cld
jae
jp
rolb
mov
aas
lods
pop
clc
repnz
nop
cld
jae
push
or
pop
add
add
sbb
insl
mov
nop
push
mov
leave
nop
jmp
add
add
dec
add
cld
clc
repnz
nop
cld
jae
push
loopne
add
movsb
clc
jne
push
mov
xchg
ret
or
cli
insb
stos
push
clc
repnz
nop
cld
jae
add
add
ret
or
add
clc
repnz
nop
cld
jae
add
add
lods
push
mov
xchg
ret
movsb
xchg
add
mov
push
add
mov
sti
clc
repnz
nop
cld
jae
into
pop
lds
add
mov
nop
nop
cld
jae
add
flds
cli
add
lds
add
inc
add
loopne
add
jecxz
fwait
sbb
add
repnz
nop
cld
jae
cli
add
add
mov
andb
pusha
cmpb
lea
nop
push
mov
leave
nop
jmp
addb
mov
jb
clc
repnz
nop
cld
jae
add
push
pop
add
hlt
stos
pop
push
mov
xchg
ret
loope
add
push
lods
loopne
popa
jne
nop
push
mov
leave
nop
jmp
add
mov
nop
cld
jae
flds
and
ja
add
je
lea
nop
push
mov
leave
nop
jmp
shll
or
add
les
mov
push
clc
repnz
nop
cld
jae
push
dec
or
push
mov
xchg
ret
add
add
cmc
mov
clc
repnz
nop
cld
jae
add
dec
ja
pop
clc
repnz
nop
cld
jae
cmc
add
add
lock
pop
clc
repnz
nop
cld
jae
rolb
cmc
and
add
pop
push
shll
rclb
popl
xchg
ret
into
add
push
ret
add
nop
cld
jae
and
movb
xor
nop
cld
jae
add
nop
or
xor
add
ja
add
aas
mov
add
mov
pusha
inc
add
clc
repnz
nop
cld
jae
add
add
add
mov
add
mov
push
mov
xchg
ret
or
push
jnp
cmc
mov
mov
clc
repnz
nop
cld
jae
cmp
ja
sbb
push
mov
xchg
ret
mov
add
outsb
and
mov
xchg
ret
movsb
jnp
add
add
in
mov
add
sbb
clc
repnz
nop
cld
jae
add
cmp
cs
sbb
imul
cmp
ret
add
popl
add
push
add
ret
cwtl
daa
add
add
mov
add
nop
andb
jbe
and
adc
repnz
nop
cld
jae
add
add
mov
test
add
repnz
nop
cld
jae
add
dec
mov
clc
repnz
nop
cld
jae
add
inc
dec
add
fstps
add
clc
repnz
nop
cld
jae
add
loop
add
fcomps
clc
repnz
nop
cld
jae
pop
mov
ret
push
add
nop
push
mov
leave
nop
jmp
add
add
add
inc
push
mov
clc
repnz
nop
cld
jae
or
add
push
push
cmp
push
mov
xchg
ret
add
add
add
lds
sbb
mov
clc
repnz
nop
cld
jae
cmp
add
add
aas
add
clc
repnz
nop
cld
jae
lock
add
or
push
mov
xchg
ret
xor
add
add
jnp
jns
popa
nop
push
mov
leave
nop
jmp
orb
jnp
add
inc
shll
repnz
nop
cld
jae
mov
add
add
sbb
nop
push
mov
leave
nop
jmp
xchg
sbb
roll
and
add
dec
jp
mov
xchg
push
xor
lock
and
add
jbe
lock
add
movsb
add
push
add
or
nop
push
mov
leave
nop
jmp
add
mov
mov
xchg
sahf
mov
xchg
nop
push
mov
leave
nop
jmp
push
fldenv
pusha
pusha
pop
imul
clc
repnz
nop
cld
jae
cli
add
add
add
mov
nop
push
mov
leave
nop
jmp
cmp
inc
add
nop
nop
cld
jae
add
loop
add
mov
ss
fcmovnu
call
inc
add
add
rcl
add
push
rorl
nop
nop
cld
jae
add
mov
loop,pn
inc
stc
mov
push
mov
xchg
ret
add
mov
nop
in
push
clc
repnz
nop
cld
jae
xchg
add
roll
push
add
jbe
in
pusha
clc
repnz
nop
cld
jae
add
add
mov
shl
clc
repnz
nop
cld
jae
pop
dec
add
roll
push
push
push
mov
xchg
ret
pop
mov
pop
add
jecxz
movb
push
mov
leave
nop
jmp
add
xor
repz
mov
xchg
ret
pop
or
add
nop
add
push
mov
leave
nop
jmp
add
loopne
cli
add
mov
clc
repnz
nop
cld
jae
add
add
add
dec
je
pusha
loopne
mov
clc
repnz
nop
cld
jae
mov
add
add
add
clc
repnz
nop
cld
jae
pop
add
pop
ljmp
in
leave
nop
jmp
add
mov
rep
clc
repnz
nop
cld
jae
movsb
add
mov
movzwl
nop
push
mov
leave
nop
jmp
add
nop
or
clc
repnz
nop
cld
jae
add
sbb
repnz
nop
cld
jae
add
add
rorl
push
clc
repnz
nop
cld
jae
or
add
jnp
pop
add
outsl
pop
clc
repnz
nop
cld
jae
add
add
add
add
adc
repnz
nop
cld
jae
add
xchg
add
jne
clc
repnz
nop
cld
jae
push
xchg
ja
push
mov
clc
repnz
nop
cld
jae
add
jb
lahf
push
nop
push
mov
leave
nop
jmp
rorb
add
add
jnp
and
push
fs
repnz
nop
cld
jae
xchg
pop
push
nop
push
mov
leave
nop
jmp
add
popl
nop
add
lret
clc
repnz
nop
cld
jae
movsb
add
dec
mov
inc
clc
repnz
nop
cld
jae
add
add
jmp
in
leave
nop
jmp
add
shll
or
xlat
push
clc
repnz
nop
cld
jae
add
add
add
movsb
xchg
mov
clc
repnz
nop
cld
jae
pop
add
jbe
ja
dec
imul
call
nop
jmp
nop
xchg
test
and
repnz
nop
cld
jae
movsb
lock
add
push
clc
repnz
nop
cld
jae
sbb
or
add
fisttpl
nop
nop
cld
jae
jp
add
loop
add
loopne
hlt
movsb
add
jmp
repnz
nop
cld
jae
add
pop
push
pop
add
mov
push
mov
xchg
ret
add
cmc
lds
pop
clc
repnz
nop
cld
jae
add
add
aas
add
mov
shrb
and
cmpsb
pushf
add
clc
repnz
nop
cld
jae
sbb
mov
rolb
push
clc
repnz
nop
cld
jae
roll
or
add
and
clc
repnz
nop
cld
jae
movsb
dec
add
add
inc
mov
push
mov
xchg
ret
add
loope
add
xchg
mov
add
clc
repnz
nop
cld
jae
mov
shll
rol
fildl
ret
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
pop
add
add
add
nop
push
mov
leave
nop
jmp
into
add
add
mov
nop
cld
jae
loop
loope
and
aas
add
lods
pusha
sarb
mov
adc
repnz
nop
cld
jae
push
add
aas
add
push
mov
add
mov
cmp
add
mov
pop
add
add
clc
repnz
nop
cld
jae
pop
add
into
jg
add
ret
popl
clc
repnz
nop
cld
jae
add
rol
test
nop
push
mov
leave
nop
jmp
dec
mov
aas
and
push
mov
xchg
ret
pop
add
add
rolb
into
test
pusha
ss
gs
clc
repnz
nop
cld
jae
cli
add
loopne
mov
pushf
ds
test
nop
push
mov
leave
nop
jmp
add
or
cmc
jg
pushf
inc
aas
mov
clc
repnz
nop
cld
jae
sbb
mov
loopne
push
mov
add
add
repnz
nop
cld
jae
ret
mov
nop
nop
cld
jae
and
add
or
repnz
nop
cld
jae
jp
loopne
roll
lock
add
lock
and
push
mov
xchg
ret
movsb
movb
fsqrt
jns
push
mov
xchg
ret
or
push
add
add
add
push
mov
xchg
ret
into
cmp
or
add
add
jbe
add
jg
push
sbb
add
add
mov
dec
cmp
repnz
nop
cld
jae
add
add
movsb
clc
repnz
nop
cld
jae
cmc
cmp
add
pop
add
mov
pusha
adc
add
repnz
nop
cld
jae
add
jp
jbe
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
add
cmp
add
add
sub
mov
xchg
ret
push
add
push
mov
and
push
mov
leave
nop
jmp
add
add
push
pop
std
fistpl
clc
repnz
nop
cld
jae
cli
mov
mov
sbb
nop
jmp
push
mov
xchg
add
je
mov
xchg
push
mov
leave
nop
jmp
mov
je
sub
addl
cmp
ret
xchg
or
dec
and
inc
fcomps
inc
clc
repnz
nop
cld
jae
into
mov
or
adc
mov
leave
nop
jmp
add
dec
add
adc
inc
sub
clc
repnz
nop
cld
jae
cmc
add
mov
clc
repnz
nop
cld
jae
add
jg
popa
mov
clc
repnz
nop
cld
jae
xchg
add
movl
orl
add
nop
add
or
mov
popa
push
push
mov
xchg
ret
mov
add
add
loopne,pn
pushf
and
push
mov
push
add
add
repnz
nop
cld
jae
rorl
sbb
jne
clc
repnz
nop
cld
jae
ret
mov
pop
push
mov
xchg
ret
jbe
add
add
add
xchg
popa
clc
repnz
nop
cld
jae
jnp
add
jo
test
or
add
nop
push
mov
leave
nop
jmp
add
aas
pop
out
leave
clc
repnz
nop
cld
jae
dec
and
add
test
loopne
mov
je
clc
repnz
nop
cld
jae
ja
mov
fistpll
clc
repnz
nop
cld
jae
add
into
aad
mov
mov
add
push
add
add
sahf
add
inc
call
clc
repnz
nop
cld
jae
roll
xor
popa
lea
push
mov
xchg
ret
nop
xor
dec
add
add
nop
cld
jae
add
add
fmull
and
add
add
ret
mov
mov
push
mov
xchg
ret
mov
mov
fdivs
data16
and
clc
push
jmp
add
nop
add
add
or
add
in
mov
clc
repnz
nop
cld
jae
roll
add
xchg
ljmp
nop
nop
cld
jae
loope
into
add
inc
push
inc
stos
clc
repnz
nop
cld
jae
ret
add
cli
add
sbb
repnz
nop
cld
jae
dec
addb
xchg
aaa
mov
push
mov
xchg
ret
movsb
add
jg
add
faddl
mov
xchg
ret
into
rorl
add
lea
clc
repnz
nop
cld
jae
cmc
add
add
andb
adc
xlat
clc
repnz
nop
cld
jae
or
add
and
add
repnz
nop
cld
jae
add
imul
cmp
ret
add
add
add
add
push
mov
xchg
ret
cmc
push
sbb
add
jbe
mov
push
mov
xchg
ret
add
add
add
repnz
nop
cld
jae
add
mov
ja
ja
push
clc
repnz
nop
cld
jae
add
ret
fildl
add
repnz
nop
cld
jae
add
movsb
inc
stos
addb
rolb
movsl
clc
repnz
nop
cld
jae
loop
push
inc
add
add
rcr
jb
push
push
mov
xchg
ret
cmp
pop
add
xchg
add
mov
fld1
clc
repnz
nop
cld
jae
add
sbb
cli
add
add
clc
repnz
nop
cld
jae
cli
jnp
cmp
nop
cld
jae
add
or
or
xchg
mov
arpl
nop
nop
cld
jae
sbb
add
roll
cmp
push
mov
xchg
ret
pop
add
cmc
add
add
repnz
nop
cld
jae
add
mov
cmc
cmc
fcmovu
sub
clc
repnz
nop
cld
jae
dec
add
clc
repnz
nop
cld
jae
or
push
aas
cmp
add
nop
jmp
add
mov
mov
mov
addb
cmp
ret
jg
add
rcr
add
nop
nop
cld
jae
mov
cli
add
add
add
add
leave
nop
jmp
add
mov
sub
nop
jmp
add
xchg
inc
inc
xor
push
mov
xchg
ret
and
mov
push
and
push
addb
clc
repnz
nop
cld
jae
cmc
pop
lock
imul
clc
repnz
nop
cld
jae
add
adc
inc
clc
repnz
nop
cld
jae
push
mov
nop
add
ret
push
push
mov
xchg
ret
mov
add
add
dec
xor
xchg
inc
add
add
cli
push
add
pop
mov
mov
incl
add
repnz
nop
cld
jae
add
mov
cmpsl
push
nop
push
mov
leave
nop
jmp
shll
add
xchg
pop
clc
repnz
nop
cld
jae
push
push
pop
add
add
and
add
mov
and
repnz
nop
cld
jae
add
add
add
add
nop
push
mov
leave
nop
jmp
ret
addb
lret
cmp
nop
nop
cld
jae
dec
add
dec
or
filds
nop
nop
cld
jae
add
add
add
lret
xor
clc
repnz
nop
cld
jae
jg
push
mov
clc
repnz
nop
cld
jae
jg
push
add
add
clc
repnz
nop
cld
jae
rolb
add
sbb
lea
xchg
ret
inc
mov
into
rcrl
loopne
adcl
nop
nop
cld
jae
add
add
roll
jnp
add
add
lock
add
push
push
mov
xchg
ret
pop
add
add
and
add
sbb
add
repnz
nop
cld
jae
add
xor
xor
repnz
nop
cld
jae
add
xor
add
add
rol
mov
clc
repnz
nop
cld
jae
add
add
lds
mov
jl
and
ja
inc
add
add
add
and
repnz
nop
cld
jae
aas
pop
or
inc
or
dec
pop
sub
clc
repnz
nop
cld
jae
loop
push
add
add
cmp
mov
nop
push
mov
leave
nop
jmp
add
call
cld
jae
or
add
sbb
mov
xchg
ret
pop
add
add
sub
mov
leave
nop
jmp
add
or
and
push
mov
xchg
ret
add
push
sbb
push
clc
repnz
nop
cld
jae
add
jbe
push
mov
andb
cs
mov
clc
repnz
nop
cld
jae
add
add
loop
sub
and
mov
leave
nop
jmp
mov
add
add
push
mov
xchg
ret
add
push
add
mov
push
mov
xchg
ret
add
jnp
sbbb
nop
push
mov
leave
nop
jmp
add
add
nop
sbb
mov
fdivrp
insb
je
outsb
and
rolb
cld
jae
movb
add
add
add
inc
jmp
clc
repnz
nop
cld
jae
push
add
mov
xchg
ret
add
mov
inc
add
cmc
pop
push
mov
xchg
ret
rcl
fldenv
add
push
clc
repnz
nop
cld
jae
dec
xor
cmc
movsb
andb
cs
clc
repnz
nop
cld
jae
cmp
add
dec
push
clc
repnz
nop
cld
jae
add
add
xor
pop
push
mov
xchg
ret
mov
add
xchg
add
cmp
push
inc
add
mov
loopne
or
jae
add
add
add
mov
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
jg
mov
rcrb
mov
xchg
ret
and
add
movsb
addr16
push
mov
xchg
ret
nop
add
push
nop
push
or
insb
or
addb
add
repnz
nop
cld
jae
add
add
xchg
jbe
push
mov
xchg
ret
add
movsb
add
dec
sahf
cld
push
andb
testb
add
add
nop
push
mov
leave
nop
jmp
mov
add
andb
push
clc
repnz
nop
cld
jae
jnp
add
xchg
rol
nop
push
mov
leave
nop
jmp
push
nop
add
push
push
jle
add
aas
push
push
add
xor
clc
repnz
nop
cld
jae
loopne
add
loopne
add
mov
jg
nop
push
mov
leave
nop
jmp
jp
add
rorl
mov
leave
nop
jmp
or
add
add
clc
repnz
nop
cld
jae
cmp
push
push
mov
xchg
ret
jbe
mov
add
add
or
jne
clc
repnz
nop
cld
jae
mov
ja
push
nop
push
mov
leave
nop
jmp
cli
add
add
xor
nop
push
mov
leave
nop
jmp
dec
add
stos
push
push
mov
xchg
ret
push
add
dec
push
dec
inc
ret
rep
clc
repnz
nop
cld
jae
jp
add
into
loope
and
mov
nop
push
mov
leave
nop
jmp
add
add
push
and
push
mov
leave
nop
jmp
add
mov
mov
orl
inc
add
shlb
cli
lock
mov
nop
push
mov
leave
nop
jmp
add
pusha
push
mov
xchg
ret
or
push
dec
mov
add
add
mov
clc
repnz
nop
cld
jae
movsb
add
and
repnz
nop
cld
jae
jnp
add
cmp
add
mov
into
cmp
add
push
mov
xchg
ret
roll
add
fistpl
push
mov
xchg
ret
add
cmc
cmc
xor
add
out
daa
add
clc
repnz
nop
cld
jae
ja
add
dec
add
mov
xchg
ret
add
add
into
add
sbb
in
leave
nop
jmp
add
andb
std
pop
nop
push
mov
leave
nop
jmp
and
add
daa
add
clc
repnz
nop
cld
jae
and
jp
inc
xorb
add
incl
nop
push
mov
leave
nop
jmp
add
loop
out
xor
clc
repnz
nop
cld
jae
xchg
jp
add
add
push
xchg
push
clc
repnz
nop
cld
jae
mov
add
dec
sub
shlb
add
xchg
xor
mov
clc
repnz
nop
cld
jae
and
mov
mov
mov
ss
aaa
repz
add
add
sub
int3
nop
push
cwtl
jno
clc
repnz
nop
cld
jae
mov
subb
lret
mov
add
nop
push
mov
leave
nop
jmp
inc
dec
push
push
cmp
add
repnz
nop
cld
jae
add
add
nop
cld
jae
addb
push
add
add
pop
clc
repnz
nop
cld
jae
movb
add
mov
nop
push
mov
leave
nop
jmp
roll
es
and
clc
repnz
nop
cld
jae
or
and
test
add
add
repnz
nop
cld
jae
add
nop
cld
xchg
fld1
push
mov
xchg
ret
add
xchg
adcl
jae
cmc
add
add
push
add
xor
pop
push
mov
xchg
ret
or
jg
add
jnp
dec
sub
add
fs
add
add
push
ret
xor
add
clc
repnz
nop
cld
jae
xchg
add
add
roll
mov
xchg
ret
add
push
add
adc
repnz
nop
cld
jae
and
addb
jg
clc
repnz
nop
cld
jae
sbb
pop
rcl
mov
add
nop
cld
jae
add
or
fs
mov
clc
repnz
nop
cld
jae
add
cmc
loopne
add
mov
xchg
ret
cmp
sbb
loop
jp
dec
push
mov
xchg
ret
or
add
sbb
add
clc
repnz
nop
cld
jae
xchg
or
jbe
push
clc
repnz
nop
cld
jae
xchg
mov
or
sub
loopne
mov
clc
repnz
nop
cld
jae
add
dec
add
nop
nop
cld
jae
lock
lds
nop
push
mov
leave
nop
jmp
jbe
add
sbb
flds
es
mov
mov
xchg
ret
cli
add
cmp
add
loop
mov
pusha
inc
xor
clc
repnz
nop
cld
jae
add
repnz
out
pop
mov
clc
repnz
nop
cld
jae
add
add
cmc
add
add
push
mov
xchg
ret
nop
or
lds
add
shl
nop
push
mov
leave
nop
jmp
pop
shl
into
cmp
add
xchg
inc
and
repnz
nop
cld
jae
cmp
mov
sbb
dec
cmc
xchg
add
clc
repnz
nop
cld
jae
loope
cmp
push
push
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
and
mov
cmp
add
loopne
sbb
clc
repnz
nop
cld
jae
into
add
pop
add
xlat
push
push
mov
xchg
ret
add
add
flds
mov
mov
clc
repnz
nop
cld
jae
ret
or
add
adc
nop
nop
cld
jae
pop
jg
add
sahf
call
and
clc
repnz
nop
cld
jae
add
push
cmc
cs
sbb
inc
mulps
inc
xchg
inc
add
dec
cmc
add
cmc
add
adc
out
cwtl
inc
add
add
add
into
add
lods
loopne
xchg
imul
clc
clc
repnz
nop
cld
jae
add
jg
repnz
loopne
xor
nop
push
mov
leave
nop
jmp
add
add
loopne
test
mov
leave
nop
jmp
add
add
inc
loopne
ja
repz
repnz
nop
cld
jae
dec
add
into
add
or
inc
subb
mov
nop
nop
cld
jae
sbb
add
add
or
xchg
sub
repnz
nop
cld
jae
add
popl
loop
add
nop
cld
jae
add
roll
add
add
repnz
nop
cld
jae
add
loope
inc
ds
dec
idiv
clc
repnz
nop
cld
jae
mov
add
cmpsb
and
shr
nop
push
mov
leave
nop
jmp
add
or
cltd
cmpw
nop
push
mov
leave
nop
jmp
add
or
call
nop
jmp
pop
add
push
xor
nop
push
mov
leave
nop
jmp
rcll
fldenv
fdivp
clc
repnz
nop
cld
jae
cmc
add
mov
clc
repnz
nop
cld
jae
push
and
add
or
add
nop
push
mov
leave
nop
jmp
and
push
push
mov
xchg
ret
mov
pop
jp
push
push
clc
repnz
nop
cld
jae
dec
add
shll
fwait
clc
repnz
nop
cld
jae
loope
add
add
add
mov
adc
repnz
nop
cld
jae
mov
addl
nop
cld
jae
add
add
add
nop
push
mov
leave
nop
jmp
aas
add
add
push
fists
repnz
nop
cld
jae
xchg
into
or
dec
or
add
clc
repnz
nop
cld
jae
rol
lock
and
loopne
add
clc
repnz
nop
cld
jae
add
add
add
cmp
push
mov
leave
nop
jmp
mov
add
aas
clc
fs
call
clc
repnz
nop
cld
jae
mov
dec
clc
repnz
nop
cld
jae
add
inc
pop
add
add
adc
inc
sub
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
pop
add
flds
add
clc
repnz
nop
cld
jae
cmp
mov
mov
orl
xchg
inc
add
or
cmp
movsl
xor
push
mov
xchg
ret
add
nop
add
and
enter
nop
nop
cld
jae
jbe
add
or
std
fistpl
push
mov
xchg
ret
add
jg
add
push
iret
push
mov
add
lds
pop
daa
xor
sbb
aas
mov
clc
repnz
nop
cld
jae
add
xor
add
push
mov
leave
nop
jmp
or
add
lock
cmp
inc
pop
clc
repnz
nop
cld
jae
sbb
into
lds
add
aad
push
or
repnz
nop
cld
jae
mov
add
inc
add
clc
repnz
nop
cld
jae
add
pop
add
xor
repnz
nop
cld
jae
and
or
mov
leave
nop
jmp
pop
add
add
add
add
nop
cld
jae
add
add
mov
push
rolb
add
clc
repnz
nop
cld
jae
loopne
mov
loope
ret
add
nop
jmp
add
add
add
push
jae
scas
enter
nop
cld
jae
push
add
dec
mov
icebp
dec
nop
push
mov
leave
nop
jmp
add
or
add
add
aas
mov
clc
repnz
nop
cld
jae
add
ja
add
nop
nop
cld
jae
add
cmp
push
push
mov
xchg
ret
mov
add
add
add
jnp
clc
repnz
nop
cld
jae
add
add
xchg
addb
push
mov
xchg
ret
ret
add
add
and
repnz
nop
cld
jae
sbb
cmp
mov
imul
nop
push
mov
leave
nop
jmp
add
xchg
pop
nop
push
mov
leave
nop
jmp
add
shl
add
mov
out
mov
push
mov
xchg
ret
add
cmc
cmp
add
addb
add
nop
push
mov
leave
nop
jmp
rorl
scas
pop
clc
repnz
nop
cld
jae
add
mov
hlt
ja
mov
nop
nop
cld
jae
into
and
test
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
pop
or
jmp
test
in
clc
repnz
nop
cld
jae
popl
add
sbb
clc
repnz
nop
cld
jae
cmc
add
add
add
push
mov
jle
add
mov
push
leave
inc
bound
add
les
push
mov
leave
nop
jmp
add
add
add
inc
xor
clc
repnz
nop
cld
jae
add
nop
loopne
scas
test
nop
push
mov
leave
nop
jmp
push
lock
add
popf
push
clc
repnz
nop
cld
jae
add
sbb
loop
mov
push
fwait
clc
repnz
nop
cld
jae
jbe,pn
pop
add
add
push
mov
xchg
ret
cmc
add
add
add
ljmp
cld
jae
add
add
add
add
lock
nop
nop
cld
jae
or
add
jnp
add
fwait
push
mov
xchg
ret
add
add
push
andb
fwait
push
mov
xchg
ret
jnp
add
add
add
and
nop
nop
cld
jae
add
mov
or
mov
nop
cld
jae
mov
and
ret
add
clc
repnz
nop
cld
jae
mov
add
loop
push
test
loopne
andb
lods
push
mov
xchg
ret
flds
into
jbe
inc
lock
mov
clc
repnz
nop
cld
jae
add
push
add
mov
int
les
push
mov
leave
nop
jmp
add
add
add
mov
clc
repnz
nop
cld
jae
mov
add
nop
nop
cld
jae
roll
mov
test
nop
cld
jae
add
or
cmp
add
xlat
mov
clc
repnz
nop
cld
jae
add
ret
rcrl
push
mov
leave
nop
jmp
jnp
add
add
add
nop
cld
jae
add
add
mov
add
dec
lcall
repnz
nop
cld
jae
dec
roll
dec
add
mov
xchg
ret
add
dec
ja
push
nop
push
mov
leave
nop
jmp
add
mov
dec
add
mov
clc
repnz
nop
cld
jae
push
add
mov
iret
or
inc
add
add
add
or
mov
loope
clc
repnz
nop
cld
jae
loope
add
add
mov
nop
push
mov
leave
nop
jmp
loop
add
add
repz
clc
repnz
nop
cld
jae
ja
add
dec
mov
inc
pushf
push
lahf
mov
clc
repnz
nop
cld
jae
add
jg
add
inc
xchg
call
clc
repnz
nop
cld
jae
push
push
add
push
clc
repnz
nop
cld
jae
add
add
sarb
add
scas
loopne
adc
addb
nop
cld
jae
or
cmp
push
cmc
add
adc
sub
and
ret
clc
repnz
nop
cld
jae
add
rolb
jp
addb
cmp
nop
push
mov
leave
nop
jmp
sbb
add
repnz
nop
cld
jae
push
add
and
pop
push
mov
xchg
ret
add
xchg
mov
lds
inc
clc
dec
jo
lahf
push
push
mov
xchg
ret
add
jbe
add
add
mov
repnz
nop
cld
jae
xchg
jbe
lock
movl
xchg
ret
add
add
add
cld
inc
push
clc
repnz
nop
cld
jae
mov
xor
mov
repnz
nop
cld
jae
mov
add
add
add
and
fcmovnu
sbb
push
mov
xchg
ret
or
flds
add
sti
add
clc
repnz
nop
cld
jae
add
add
add
andb
push
push
mov
xchg
ret
mov
add
roll
pop
movsl
xchg
push
mov
xchg
ret
mov
add
add
add
mov
nop
nop
cld
jae
add
add
add
or
pusha
pop
push
clc
repnz
nop
cld
jae
or
cmp
add
cmpl
nop
push
mov
leave
nop
jmp
push
jbe
add
add
mov
lea
push
mov
xchg
ret
mov
mov
pusha
mov
dec
nop
push
mov
leave
nop
jmp
cli
sbb
add
add
roll
add
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
mov
loopne
notl
mov
xchg
ret
mov
mov
add
add
jo
enter
repnz
nop
cld
jae
xor
add
mov
dec
mov
jns
add
add
add
push
push
mov
xchg
ret
cli
add
add
jae
add
repnz
nop
cld
jae
mov
add
sub
nop
cld
jae
add
add
add
fistpll
nop
push
mov
leave
nop
jmp
add
mov
adc
add
repnz
nop
cld
jae
add
ret
add
repnz
nop
cld
jae
or
addb
pop
add
push
mov
xchg
ret
add
add
push
mov
xchg
ret
mov
mov
push
jmp
mov
xchg
ret
addb
push
loopne
mov
mov
sub
nop
jmp
or
add
ja
lcall
push
mov
xchg
ret
add
mov
dec
mov
clc
repnz
nop
cld
jae
add
jnp
add
repnz
nop
cld
jae
add
aas
add
mov
or
cld
push
mov
xchg
ret
add
add
add
add
mov
repnz
nop
cld
jae
or
push
repnz
nop
cld
jae
add
add
pusha
inc
push
mov
cmp
ret
shll
sbb
fmuls
mov
clc
repnz
nop
cld
jae
or
add
pop
add
mov
clc
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
add
loopne
loop
pop
push
mov
xchg
ret
add
add
dec
add
and
nop
nop
cld
jae
and
pop
or
or
nop
nop
cld
jae
or
add
pop
jg
decb
clc
repnz
nop
cld
jae
ret
loop
subl
push
mov
xchg
ret
xor
mov
sub
push
mov
xchg
ret
xchg
sbb
jle
mov
clc
repnz
nop
cld
jae
addb
push
je
clc
repnz
nop
cld
jae
add
pop
push
notl
repnz
nop
cld
jae
add
into
push
add
add
push
nop
push
mov
leave
nop
jmp
aas
or
add
lds
lds
add
shlb
and
test
nop
nop
cld
jae
add
ret
mov
jecxz
movb
nop
nop
cld
jae
add
or
nop
add
outsb
inc
add
loop
and
push
jbe
lret
push
push
mov
xchg
ret
cmp
pop
add
flds
stos
add
add
add
add
add
jg
add
das
add
clc
repnz
nop
cld
jae
add
jnp
inc
adc
repnz
nop
cld
jae
cmc
and
popf
add
clc
repnz
nop
cld
jae
add
push
add
push
mov
sub
nop
jmp
or
add
add
push
clc
repnz
nop
cld
jae
mov
add
clc
out
test
and
push
push
mov
xchg
ret
pop
ja
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
mov
mov
mov
xchg
ret
mov
movb
cmp
add
addb
call
nop
jmp
or
inc
clc
repnz
nop
cld
jae
xchg
and
jbe
add
cmc
mov
repnz
nop
cld
jae
add
add
add
mov
int
pop
jae
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
dec
mov
mov
clc
repnz
nop
cld
jae
nop
add
jp
push
and
jne
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
ja
cmc
or
add
add
clc
repnz
nop
cld
jae
add
inc
xchg
jne
clc
repnz
nop
cld
jae
jnp
lock
call
inc
add
movsb
jp
push
add
mov
and
ljmp
cld
jae
mov
cmp
push
cmp
dec
js
add
or
add
inc
add
stos
lea
clc
repnz
nop
cld
jae
add
cmp
add
pusha
clc
repnz
nop
cld
jae
cmc
nop
roll
xchg
addb
fs
inc
add
addb
push
add
add
jecxz
nop
push
mov
leave
nop
jmp
sbb
add
add
add
stos
nop
push
mov
leave
nop
jmp
add
add
mov
add
add
add
mov
xchg
ret
add
roll
mov
loop
mov
clc
repnz
nop
cld
jae
add
add
and
push
mov
xchg
ret
add
or
popl
add
repnz
nop
cld
jae
shll
add
in
mov
nop
push
mov
leave
nop
jmp
add
add
add
xorb
nop
nop
cld
jae
add
rolb
or
mov
jns
clc
repnz
nop
cld
jae
mov
mov
repnz
nop
cld
jae
mov
add
nop
mov
jne
clc
repnz
nop
cld
jae
add
add
add
push
and
repnz
nop
cld
jae
movsb
add
call
cld
jae
add
add
movsb
add
mov
xchg
ret
jg
mov
lods
add
nop
push
mov
leave
nop
jmp
and
into
cmp
add
mov
nop
push
mov
leave
nop
jmp
movb
pop
xchg
add
repnz
nop
cld
jae
add
lock
push
mov
leave
nop
jmp
add
mov
fs
fmuls
inc
shlb
out
clc
repnz
nop
cld
jae
popl
add
aad
clc
repnz
nop
cld
jae
jnp
add
mov
clc
repnz
nop
cld
jae
mov
add
mov
fwait
clc
repnz
nop
cld
jae
add
dec
rolb
push
add
lret
cmp
nop
push
mov
leave
nop
jmp
add
dec
add
mov
leave
nop
jmp
add
add
add
inc
inc
fwait
push
clc
repnz
nop
cld
jae
lds
jg
sub
and
rolb
andl
nop
cld
jae
add
add
push
rep
clc
repnz
nop
cld
jae
loope
add
mov
clc
repnz
nop
cld
jae
dec
add
jp
add
mov
and
nop
nop
cld
jae
add
add
add
loope
aas
mov
push
mov
xchg
ret
shll
cmc
loope
clc
repnz
nop
cld
jae
add
add
add
add
lea
pop
and
repnz
nop
cld
jae
add
add
or
xchg
xchg
ret
loopne
cs
jp
add
cltd
push
clc
repnz
nop
cld
jae
add
add
or
mov
out
xchg
pop
nop
push
mov
leave
nop
jmp
xor
add
addb
add
loop
push
mov
xchg
ret
add
add
out
add
push
mov
xchg
ret
add
add
add
add
adc
mov
push
mov
xchg
ret
add
add
or
push
cli
cwtl
sub
inc
mov
nop
nop
cld
jae
popl
push
mov
add
nop
push
mov
leave
nop
jmp
jbe
add
inc
adc
mov
xchg
ret
mov
mov
add
ret
fistl
ret
addr16
add
add
add
flds
inc
push
popa
push
push
mov
xchg
ret
add
add
add
shl
lods
mov
clc
repnz
nop
cld
jae
add
mov
dec
add
cmpl
nop
nop
cld
jae
add
add
sqrtps
cmpsl
js
add
movsb
add
add
loop
mov
inc
addb
nop
cld
jae
cmp
mov
xlat
add
clc
repnz
nop
cld
jae
or
pop
or
add
mov
mov
clc
repnz
nop
cld
jae
add
orb
jg
add
mov
clc
repnz
nop
cld
jae
add
add
roll
inc
sub
pusha
mov
nop
nop
cld
jae
pop
add
add
nop
xor
or
call
cld
jae
push
movb
lods
xchg
push
mov
xchg
ret
cli
cmc
fnop
cmp
jg
dec
jne
nop
push
mov
leave
nop
jmp
and
call
push
mov
xchg
ret
add
mov
add
dec
push
push
mov
xchg
ret
addb
add
add
cmpsb
mov
out
clc
repnz
nop
cld
jae
add
push
lods
and
imul
nop
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
push
add
push
nop
push
mov
leave
nop
jmp
add
add
add
add
mov
clc
repnz
nop
cld
jae
jp
add
jno
push
es
jecxz
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
cmp
inc
cmpb
push
nop
push
mov
leave
nop
jmp
add
cmc
add
add
loope
push
mov
nop
push
mov
leave
nop
jmp
mov
add
into
jno
jmp
in
leave
nop
jmp
add
add
mov
mov
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
jg
ret
add
nop
nop
cld
jae
add
rol
add
cwtl
out
jl
clc
repnz
nop
cld
jae
mov
cmpl
nop
push
mov
leave
nop
jmp
mov
adc
je
clc
repnz
nop
cld
jae
and
lock
fadd
add
clc
repnz
nop
cld
jae
add
cmpsb
mov
mov
add
repnz
nop
cld
jae
sbb
jbe
cmc
sbb
jmp
add
xchg
rorb
dec
push
cli
add
jg
xchg
cmp
lcall
in
leave
nop
jmp
pop
rcrl
add
icebp
mov
xchg
ret
or
add
xchg
xchg
ret
and
iret
call
nop
push
mov
leave
nop
jmp
cli
add
push
mov
xchg
ret
add
mov
add
add
sbb
push
mov
xchg
ret
push
add
add
flds
in
leave
nop
jmp
orb
loope
add
xor
movzwl
clc
repnz
nop
cld
jae
or
rcll
mov
xchg
ret
sbb
add
add
mov
clc
repnz
nop
cld
jae
shl
push
mov
mov
leave
nop
jmp
pop
add
loope
aas
and
rep
push
mov
xchg
ret
add
cmc
mov
add
or
clc
repnz
nop
cld
jae
mov
jmp
mov
cmc
add
add
nop
cli
cmp
push
subl
clc
repnz
nop
cld
jae
add
add
sbb
je
clc
repnz
nop
cld
jae
loopne
inc
mov
inc
push
mov
xchg
ret
add
addb
push
clc
repnz
nop
cld
jae
or
or
add
jo
incl
pop
add
loopne
popl
add
add
push
add
mov
mov
xchg
ret
add
or
sbb
cmpb
nop
push
mov
leave
nop
jmp
and
add
ja
sbb
jmp
clc
repnz
nop
cld
jae
mov
sbb
mov
adc
repnz
nop
cld
jae
dec
add
mov
clc
repnz
nop
cld
jae
add
flds
inc
rcl
add
clc
repnz
nop
cld
jae
xchg
inc
xor
clc
repnz
nop
cld
jae
add
add
pause
push
mov
leave
nop
jmp
add
rolb
add
loope
loopne
andb
inc
rcrb
add
clc
repnz
nop
cld
jae
xchg
jbe
add
mov
popa
nop
push
mov
leave
nop
jmp
loop
dec
ja
add
mov
push
mov
xchg
ret
add
mov
add
pusha
xorb
roll
mov
xchg
ret
add
addb
and
in
clc
repnz
nop
cld
jae
pop
add
jmp
dec
add
aas
add
add
roll
ja
jnp
inc
push
push
mov
xchg
ret
dec
rolb
add
inc
popl
cli
or
loopne
clc
nop
push
mov
leave
nop
jmp
add
popl
xchg
cli
pop
add
and
nop
push
mov
leave
nop
jmp
mov
ret
fld1
push
mov
xchg
ret
pop
add
add
clc
repnz
nop
cld
jae
xor
add
movsb
mov
and
test
clc
repnz
nop
cld
jae
movsb
ja
in
pop
call
nop
jmp
mov
sbb
clc
repnz
nop
cld
jae
loop
add
into
add
jbe
loope
adc
clc
repnz
nop
cld
jae
nop
add
adc
andb
jmp
add
lds
sbb
add
add
movsb
add
mov
adcl
repnz
nop
cld
jae
add
and
xchg
loop
push
into
movsl
dec
nop
push
mov
leave
nop
jmp
jp
add
add
mov
cmp
repnz
nop
cld
jae
sbb
mov
sbb
inc
add
add
add
add
subl
inc
add
push
sarl
add
ja
test
lret
clc
repnz
nop
cld
jae
and
add
push
mov
xchg
ret
cmc
add
add
nop
ss
stos
clc
repnz
nop
cld
jae
and
add
dec
or
push
jmp
dec
add
loop
xchg
mov
add
add
cmc
pop
fwait
add
clc
repnz
nop
cld
jae
xchg
dec
or
mov
mov
xchg
ret
jbe
cmp
add
sbbb
adc
push
mov
leave
nop
jmp
add
cld
xor
mov
xchg
ret
sar
xchg
popl
add
inc
pushl
clc
repnz
nop
cld
jae
add
add
hlt
das
push
clc
repnz
nop
cld
jae
inc
mov
ret
jp
fisttpl
in
leave
nop
jmp
and
dec
loop
fstps
sbb
mov
xchg
ret
push
add
add
repnz
nop
cld
jae
add
xchg
add
mov
rcll
cld
xchg
xchg
ret
push
jp
add
shll
add
adc
in
add
out
add
cmp
mov
add
add
sar
clc
repnz
nop
cld
jae
dec
loop
and
sar
nop
nop
cld
jae
lds
ret
or
cmpsb
inc
cmp
dec
and
rcr
mov
adc
and
sub
xchg
xchg
pop
cltd
sarb
xor
inc
sub
jg
shll
dec
dec
cmp
cli
lret
gs
aaa
inc
mov
mov
cmp
cmp
pop
adc
sbb
xor
dec
push
or
sarb
mov
cs
cmpsl
fdivrl
popf
test
test
push
xchg
pop
and
inc
sub
mov
inc
test
add
add
cwtl
mov
add
and
jb
and
mov
lock
sbb
adc
jl
stc
xchg
add
add
jmp
mov
lahf
ljmp
addb
sbb
in
loopne
push
loopne
sbb
add
ja
shlb
inc
pop
ret
int
aaa
call
imul
pusha
xchg
pop
shr
adc
adc
push
daa
iret
shrl
add
dec
aas
ret
insl
addr16
mov
and
lods
idivl
call
clc
enter
adc
mov
jae
jge
push
jle
pop
popf
xchg
insb
jmp
mov
pop
std
mov
jmp
inc
insl
mov
movsb
pusha
sbbb
add
jl
mov
fisubrs
add
aaa
mov
mov
or
push
rep
add
out
xchg
jo
mov
fiadds
ror
dec
dec
cmp
push
fildll
rolb
and
mov
or
mov
rclb
shl
and
loopne
cmpsl
mov
loopne
sbb
shl
in
les
cmp
xchg
xor
aas
pushf
in
add
and
orb
shll
mov
mov
inc
cmp
xchg
push
sbb
adc
mov
cmp
imul
xchg
out
mov
mov
mov
and
push
dec
push
scas
xchg
out
cmpsb
add
lods
andb
dec
jnp
xor
jno
inc
loopne
sbb
and
jmp
inc
dec
leave
into
loope
jae
test
pusha
adc
std
ljmp
jmp
je
das
mov
sbb
fmul
pop
stc
lds
sbb
popf
repz
xorl
test
sti
sbb
inc
sub
mov
sbb
pop
mov
mov
or
and
les
and
cmpsl
sbb
cmpsb
pusha
pusha
push
icebp
xchg
stos
inc
add
mov
jns
or
pusha
hlt
jg
or
push
pop
dec
inc
outsb
inc
xor
jg
push
dec
cmpsl
lea
je
inc
xchg
mov
jb
cmp
pusha
and
sbb
or
test
inc
clc
mov
mov
xchg
mov
push
push
daa
or
add
pop
cmp
mov
out
fisubs
jmp
add
xchg
test
ja
cmc
mov
mov
rclb
jnp
lds
push
pusha
add
push
and
xor
push
dec
loope
mov
sub
into
insl
mov
addb
inc
clc
stos
and
add
push
js
adcl
mov
add
pusha
inc
out
fwait
adc
sub
adcb
and
inc
push
out
push
mov
mov
mov
fistpl
fisubs
shll
fsubrs
add
loopne
sub
loopne
mov
call
mov
cmpl
test
mov
mov
ret
aaa
push
out
dec
out
hlt
cmp
pushf
jg
and
inc
xlat
loop
pop
roll
or
mov
inc
andb
pusha
jns
xor
loopne
ffreep
push
fnsave
gs
mov
mov
imul
shl
lahf
rorl
mov
mov
jns
test
ror
add
rcrb
adc
or
mov
mov
fsubrp
js
andb
cmpl
addb
mov
and
pusha
add
pop
pop
hlt
jp
dec
pop
pop
jmp
jo
int
or
and
push
shl
rcr
mov
xor
jno
hlt
or
and
jl
sub
rolb
add
jmp
rorb
pop
cld
lds
roll
popa
jp
adc
push
cmp
cld
xor
shl
cmc
mov
inc
jno
fprem
cmp
rorb
cltd
lahf
mov
inc
cmpsb
mov
fsubs
shrb
inc
cmp
fldenv
pusha
loopne
in
mov
jnp
adc
add
cli
mov
andb
sbb
push
xor
inc
in
loopne
mov
pusha
and
inc
sub
pushf
mov
lcall
je
inc
adc
addb
int3
push
and
cmp
pusha
leave
add
pusha
cmp
movb
add
es
addb
inc
into
sub
mov
xchg
xor
ret
mov
addb
loopne
jmp
and
fwait
pop
xchg
in
mov
fcmovu
xchg
inc
ret
stos
cli
aam
cli
xchg
dec
inc
sbb
jecxz
cwtl
imul
shl
lcall
add
hlt
adc
addb
xchg
mov
pop
popa
daa
lods
lock
sbb
dec
push
mov
stos
inc
shlb
cld
out
adc
pop
mov
rcr
loopne
lea
pop
ljmp
and
cld
fldl
std
inc
cld
xor
js
xor
and
adc
loopne
rorl
fisttps
mov
mov
mov
ja
add
adc
jg
jbe
mov
nop
or
mov
sub
inc
mov
cmp
inc
sahf
in
sub
iret
push
inc
and
mov
mov
test
adc
pop
pop
ds
imul
sbb
shl
addl
add
orl
mov
jno
mov
andb
and
leave
add
mov
cmp
xor
scas
add
inc
pop
testb
andb
push
jg
fstps
fs
into
lock
xchg
or
aaa
lahf
movsl
adc
cld
in
sbb
std
mov
sub
add
gs
arpl
stos
loopne
dec
fistl
fwait
mov
add
fs
jnp
shlb
and
pusha
sti
jg
loopne
inc
pop
and
mov
jmp
lds
cld
call
iret
xor
popf
in
inc
pop
dec
inc
lahf
int3
ljmp
stos
rolb
jge
and
out
or
ss
daa
enter
cmp
addb
lret
fmuls
jp
sarl
in
xchg
leave
push
sahf
das
leave
popf
mov
dec
into
test
test
loopne
int3
jbe
rcl
mov
rol
leave
push
inc
and
icebp
int3
xor
push
mov
jns
aaa
outsb
call
int
lds
aas
mov
in
cmp
cld
push
stos
cmp
dec
mov
lock
aaa
cmp
jmp
aaa
daa
xor
push
lret
icebp
roll
shlb
adc
xchg
div
mov
and
xor
mov
xchg
jno
pusha
sar
adc
xchg
push
mov
lea
xor
adc
mov
push
and
movsb
shlb
sub
ret
popa
das
pop
mov
mov
pop
xor
inc
or
repnz
shlb
fists
pusha
pushf
jno
xchg
jp
dec
sbb
fsts
cs
push
pusha
shll
pop
lock
aad
push
mov
int
lea
mov
je
mov
push
movsl
jno
ret
je
inc
add
lods
aas
push
xchg
fwait
xchg
push
pusha
inc
pop
lods
js
in
inc
ljmp
cwtl
in
mov
dec
adc
lods
and
stos
insb
mov
out
mov
mov
push
sti
data16
ror
cmpsb
and
add
sub
pusha
bound
add
fldt
shlb
mov
lahf
dec
xchg
add
fcom
jmp
cmp
and
inc
lods
clc
jnp
dec
pop
test
lods
shlb
stc
mov
and
scas
add
scas
rolb
shlb
jnp
pop
addr16
mov
movsl
xchg
mov
add
add
push
jl
rclb
les
jbe
and
dec
test
jno
inc
fists
ret
sbb
mov
loopne
and
or
or
and
add
test
inc
inc
lock
pushf
mov
xchg
or
into
cmpsb
inc
mov
pusha
inc
jecxz
adc
pop
sub
loopne
jb
fs
xchg
inc
mov
stc
dec
sbb
or
popa
shl
sbb
dec
pop
movsl
jne
cmp
dec
movb
mov
inc
sbb
add
lock
adc
test
cs
mov
inc
xor
int
mov
outsb
inc
mov
mov
rcll
fs
ljmp
or
adc
cs
and
lock
adc
xor
nop
push
sub
mov
xchg
mov
and
pop
jnp
addb
mov
mov
loopne
sub
or
mov
or
lods
add
add
jle
loopne
push
push
mov
lcall
aad
and
adc
jmp
push
loopne
stos
add
inc
xlat
idivl
and
imull
shl
inc
adc
cmp
add
cs
loopne
cli
loope
xchg
pusha
or
addb
cmp
shlb
std
clc
insl
std
cmp
scas
and
inc
pushw
or
pusha
cmp
enter
sarl
rcrb
push
adc
mov
inc
out
jns
sbb
repnz
inc
push
sbb
inc
jae
data16
push
xchg
pop
sbbl
pop
jecxz
pop
adc
mov
push
jmp
mov
mov
addb
bound
rcll
cmp
lret
addb
imul
fsubl
jae
in
and
addb
fldenv
or
rolb
add
inc
inc
inc
sbb
mov
or
mov
mov
xchg
pop
int3
push
andb
ljmp
int
addb
cmp
pusha
dec
insl
fisubl
mov
xor
outsl
jbe
icebp
jo
loopne
or
mov
xchg
out
loopne
loopne
cmpsl
push
test
inc
loopne
out
sbb
cltd
ret
fcmovbe
repnz
scas
or
dec
sub
add
add
stc
loope
rorb
aas
dec
or
out
ret
js
out
pop
sub
mov
or
rolb
rorb
in
sbb
pop
dec
in
or
and
cwtl
lret
push
bound
lods
mov
pop
mov
mov
and
xchg
popa
test
daa
dec
fisttpl
stos
dec
adc
xor
inc
cld
xor
mov
js
mov
and
aam
cmp
loopne
sub
mov
add
outsb
int
lret
lods
cld
xchg
leave
and
cmp
push
and
mov
pop
sbb
rol
int3
scas
cmc
rol
lret
xchg
jnp
xor
and
push
dec
lcall
and
fdivl
pop
add
mov
and
movsb
add
inc
insb
xor
cld
dec
or
insl
ret
lds
dec
test
loopne
sbb
mov
fldt
popa
mov
and
repnz
std
pop
jecxz
pop
mov
pusha
inc
int
jnp
pusha
mov
inc
push
mov
or
push
pusha
rcrb
test
mov
inc
jno
or
add
movsb
mov
ficoml
inc
sub
stc
pop
jbe
push
pusha
loopne
rorb
add
addb
stos
pusha
mov
add
mov
mov
inc
test
outsl
rcl
adc
mov
adc
cmpsb
and
stc
xlat
cmp
imul
fisubrs
fsubrp
jb
add
and
pusha
pusha
push
push
add
rol
outsb
std
sub
push
and
add
incl
add
insl
scas
addb
pusha
loopne
push
push
adc
cli
inc
scas
add
jle
push
xchg
addb
shrb
pusha
imul
and
andb
add
out
popa
sbb
insl
inc
ret
cmp
daa
loop
or
and
add
andb
pop
adc
shlb
hlt
sti
call
shrl
adc
push
and
dec
push
fidivrs
ds
and
xor
fbstp
loope,pt
jae
push
out
mov
es
and
or
and
mov
std
inc
ljmp
cmp
enter
mov
mov
rcll
dec
jo
lcall
add
mov
pop
stc
leave
xor
pop
rorl
test
pushl
mov
inc
xchg
add
sti
sub
mov
xor
and
pop
jmp
add
xchg
loopne
add
xchg
sti
xor
test
hlt
mov
push
into
push
clc
por
inc
mov
aad
cmpsb
loopne
pop
ds
hlt
sub
xchg
mov
xchg
adc
sbb
inc
imul
add
xchg
das
inc
leave
push
xchg
cwtl
out
and
xchg
dec
ss
in
daa
and
add
repz
shlb
punpcklbw
dec
dec
adc
roll
and
cmp
sub
sbb
loopne
movsl
or
movsl
pop
xchg
and
jl
andb
dec
add
in
and
mov
pop
les
clc
add
fidivrl
shl
ljmp
out
and
mov
cmp
jle
jg
xorl
pusha
pusha
rolb
or
xchg
sub
cmp
fucomi
sahf
xor
imulb
lock
add
testb
mov
loopne
adc
mov
cmc
push
neg
test
loopne
xchg
pop
ja
arpl
push
andb
loopne
rorb
adcb
or
js
rcrl
mov
ljmp
pop
lahf
les
add
pop
xchg
ret
add
rcrb
sbb
enter
add
sbb
add
dec
jp
fidivrl
push
inc
loopne
jge
sbb
sub
in
sub
rcll
and
jbe
mov
mov
rclb
mov
das
mov
ror
and
add
xchg
lret
pop
fwait
adc
xor
inc
and
mov
pusha
fisttps
outsb
add
inc
push
andl
imul
or
sbb
loop
cmp
test
fs
cmp
ficoms
and
jo
pop
pop
sbb
add
negl
cmp
mov
int3
imul
pop
push
addb
mov
sbb
iret
test
pop
cmpsb
loopne
mov
mov
sbb
adcl
pop
push
add
cmp
imul
in
dec
in
jno
gs
push
inc
add
mov
pusha
sub
iret
mov
and
inc
les
pusha
nop
sbb
std
aam
je
cli
mov
pop
insl
loope
pop
fcompl
inc
je
mov
orb
test
mov
cmpsb
mov
add
loopne
stos
mov
adcl
mov
jmp
and
jno
and
push
stc
dec
mov
dec
ljmp
xchg
xor
in
xchg
push
dec
dec
xchg
mov
pusha
in
shll
pusha
jl
pusha
orb
xchg
bound
adc
pop
jno
inc
sub
mov
xchg
add
in
push
aas
int3
je
and
lret
or
popf
aaa
push
popf
data16
int3
scas
mov
pop
cmp
clc
insl
daa
in
lcall
and
cmc
jl
mov
pusha
rorb
dec
sbb
data16
call
stc
inc
xlat
and
lahf
imulb
and
ret
and
aaa
xor
mov
adc
add
and
push
call
sbb
inc
or
xchg
adc
sub
loopne
cld
push
ja
loopne
je
jns
pop
addb
sbb
aam
cmpsb
pusha
mov
shlb
cmc
out
mov
xchg
mov
in
repz
mov
ret
je
jecxz
add
mov
xchg
cmc
in
into
xchg
cmp
jmp
loopne
repnz
out
push
and
popf
movsb
inc
add
test
andb
into
and
fldcw
rolb
push
imul
loopne
decl
mov
fsubl
pusha
inc
mov
add
js
mov
iret
dec
add
add
mov
repz
mov
sub
inc
hlt
fcmovnbe
and
pusha
sahf
mov
rolb
mov
out
js
dec
push
xor
sbb
andb
or
add
jae
mov
fs
sti
jnp
mov
inc
loopne
shll
stc
aaa
frstor
ficompl
push
jnp
add
into
jmp
hlt
jns
movsl
ja
or
mov
adc
nop
push
and
mov
mov
addb
aad
mov
mov
add
xchg
leave
lds
push
xor
repz
cmc
pop
or
or
or
pusha
adc
ljmp
inc
lret
and
fcmovne
jno
pop
out
dec
pop
sbb
pusha
pop
sbb
sarb
xchg
insl
shrb
movsl
das
push
xor
push
xchg
aam
xor
sbb
sbb
in
xor
std
mov
loopne
sub
rcl
fistl
inc
inc
test
rcr
ja
xor
out
mov
jb
je
lods
fidivrs
pop
sub
loopne
addb
hlt
mov
call
rcl
push
mov
fisubl
mov
sub
insl
and
shr
push
pop
out
jno
sbb
pusha
add
out
in
popa
loopne
sti
popf
mov
popf
lcall
mov
rcl
push
pushf
and
orb
inc
mov
add
stos
andb
add
jmp
jl
mov
mov
mov
mov
mov
jmp
movsl
dec
inc
jle
mov
adc
rolb
cmp
push
movsl
or
loopne
imul
mov
mov
fisubrl
mov
inc
shlb
iret
dec
bound
push
jns
xor
xchg
lret
mov
add
loopne
repnz
add
jbe
cwtl
lds
inc
add
mov
icebp
loop
mov
and
mov
sar
mov
inc
test
xor
js
andb
dec
ror
push
inc
in
xchg
inc
pop
notb
imul
loop
sar
pop
xchg
imul
bswap
fstps
add
mov
pop
lods
pusha
rorb
inc
imul
lahf
push
shlb
ljmp
cwtl
cld
inc
int
pop
data16
popl
and
jb
push
jl
or
popf
jns
cmpsl
inc
shrb
sub
addb
and
notb
repnz
and
into
pop
sti
mov
inc
jo
aad
adc
add
xorl
cmp
fnstenv
insb
mov
das
sub
pusha
mov
shlb
mov
mov
dec
fisubrs
data16
ror
and
jp
pop
fldenv
rolb
andb
cmp
shlb
lcall
add
sub
push
mov
enter
pusha
xchg
push
repz
loopne
adc
mov
inc
and
shl
outsb
sbb
cmpl
xchg
push
pop
pusha
enter
lock
mov
repz
add
int3
rclb
into
push
data16
mov
xor
push
out
mov
test
mov
loopne
pop
cmpsl
movb
jae
jmp
rclb
out
and
pusha
or
nop
pop
or
aaa
cmpsb
loopne
arpl
dec
mov
lret
fnstcw
and
rolb
inc
iret
les
xlat
adc
lea
jo
dec
andb
test
add
lds
fsubr
fisubrl
jo
mov
rorb
jb
dec
sub
leave
test
inc
jle
or
test
adcb
jae
ds
push
sub
add
or
and
and
xor
and
loopne
push
jb
loop
push
and
sbb
mov
sahf
sub
pusha
push
cmpsl
mov
pusha
scas
adc
mov
loopne
int
out
mov
pop
xor
shlb
lock
inc
add
shlb
sub
loopne
in
and
mov
in
leave
inc
pop
xchg
in
add
fdivrl
fucomi
ds
mov
js
adc
cmp
dec
jne
fwait
sub
out
dec
sub
pusha
nop
test
addr16
js
arpl
push
add
jle
jle
aad
add
je
dec
nop
bnd
movsl
negb
push
push
push
cmp
adc
pause
ret
or
add
push
shrl
movsl
in
sti
pop
and
and
insl
loope
jg
adc
mov
push
dec
sub
adc
addb
jge
clc
fbld
andb
cli
add
mov
and
imul
and
and
and
and
xchg
cmp
fsubs
push
push
jp
lds
dec
cmpsl
pop
loopne
aad
pop
bound
andb
cmp
sub
rol
hlt
xchg
jle
test
rol
lds
cmpsl
mov
mov
push
jecxz
pop
add
pop
push
pop
xchg
icebp
cli
sub
pop
ljmp
rolb
dec
mov
ficoml
xor
test
pusha
mov
xorb
fistpll
lea
pusha
inc
into
test
jbe
jae
push
clc
sarb
xchg
mov
ficomps
xor
inc
orb
cmp
add
and
cmpsl
sub
imul
mov
and
movb
rolb
and
mov
cmp
mov
mov
sbb
je
les
sbb
mov
push
loopne
addl
adc
push
lret
into
int
add
jp
mov
add
shlb
shrb
cmp
cmp
push
sbb
lods
and
loopne
inc
loopne
or
jmp
inc
loopne
jae
sbb
adc
mov
pop
repnz
inc
pop
xor
ds
loopne
cmp
or
xchg
cmpsb
add
push
xchg
sub
addl
push
add
insb
sbb
mov
push
int3
push
and
jp
add
inc
mov
mov
pop
and
and
ficomps
out
sub
daa
sub
cltd
mov
jo
pusha
loopne
adc
out
out
popf
ret
hlt
xor
sti
dec
inc
mov
mov
and
andb
mov
jp
sar
sahf
mov
imul
add
lcall
adc
ret
scas
add
lods
and
cmp
inc
mov
pusha
add
mov
cmp
cmpsl
cmp
add
sub
mov
lahf
mov
lds
pmaxsw
lcall
dec
scas
and
pop
xchg
push
lea
xchg
sti
lahf
repnz
xor
sbb
loopne
mov
add
inc
imul
mov
xchg
dec
movsb
rolb
fisttps
and
call
das
cwtl
scas
std
sub
imul
repz
xor
and
dec
mov
mov
mov
test
pop
es
lods
mov
les
andb
das
je
mov
fldt
and
adc
add
loopne
jne
xchg
sbb
mov
addb
rolb
and
adc
enter
add
rclb
xor
and
and
mov
add
pusha
cs
inc
lret
pop
xchg
out
jns
dec
mov
hlt
lods
push
pop
mov
xor
inc
rorb
cmp
popf
lds
lods
add
icebp
pop
or
lods
shlb
pop
les
fidivl
dec
ffree
int
jbe
test
rclb
inc
roll
shlb
push
lods
mov
fimuls
dec
cmp
jle
mov
adc
adc
jne
ja
rolb
push
sbb
daa
inc
aam
jo
push
daa
int
add
mov
and
loopne
ficompl
pop
in
mov
push
pop
sbb
pusha
arpl
push
push
and
adc
or
pop
pop
or
add
rcrb
aad
jge
mov
in
inc
and
int
daa
push
ja
rolb
fistpll
movsb
add
adc
xchg
fdivrl
mov
out
push
pusha
rolb
and
mov
inc
pop
js
mov
adc
hlt
js
xor
mov
mov
addr16
adc
test
pusha
sbb
ja
negl
mov
test
sub
loopne
and
mov
add
fisubl
mov
jl
and
in
outsb
xchg
pop
je
out
xchg
cmp
icebp
push
push
mov
stos
out
pop
out
pop
push
nop
sbb
andb
stos
dec
outsl
add
mov
fwait
mov
pusha
aad
les
movsl
and
std
or
test
orb
inc
sbb
add
and
inc
inc
sub
shlb
gs
mov
cltd
insb
or
add
jb
insl
dec
xchg
and
loop
cmpsb
shlb
stos
mov
sarb
adc
xor
dec
sbb
cs
pusha
fsub
dec
mov
and
std
jl
add
pop
mov
add
shlb
popa
sub
inc
add
jmp
push
pusha
pusha
fsts
pusha
pusha
ret
jae
add
xchg
and
fdivl
sbb
push
sbbl
fsubp
mov
pop
mov
shlb
sbbb
loop
in
fsubl
cmp
pusha
loopne
mov
inc
sahf
xchg
ret
data16
mov
mov
mov
pusha
icebp
sbb
mov
mov
or
mov
fidivl
negb
bound
loopne
sbb
insl
add
imul
and
inc
inc
int
lods
je
cmp
in
inc
fisubl
cltd
xor
nop
mov
testl
rcll
push
and
std
mov
xchg
or
and
mov
xorb
icebp
aaa
push
jo
loopne
mov
pop
xor
inc
and
push
in
ret
xchg
push
xor
int3
jne
add
nop
jo
daa
add
pop
cmc
dec
adc
pop
and
cld
pop
xor
out
jg
inc
test
mov
rolb
test
pop
in
dec
pop
lods
xor
int
jnp
mov
xorb
push
popa
repnz
rcrb
mov
les
mov
pop
dec
mulb
pusha
pop
pusha
jp
xchg
iret
loopne
add
outsl
lcall
and
outsl
test
loopne
pop
mov
sarb
addb
sbb
push
push
cltd
insb
sub
sub
pusha
mov
mov
sub
pusha
mov
addb
xchg
pusha
js
pop
mov
mov
cmpsl
out
and
popa
xchg
repz
or
xorl
out
iret
push
xor
and
adc
clc
insl
adc
mov
loopne
aad
ficompl
cmpsl
add
test
andb
jae
adcl
adc
mov
dec
sbb
pop
adc
or
pusha
repz
pop
xchg
pusha
pusha
mov
stos
andb
add
sar
sbb
adc
pusha
add
pop
xor
inc
inc
or
loopne
test
mov
dec
sub
mov
xchg
push
or
cmp
xchg
jbe
add
inc
sbb
and
jecxz
insl
jbe
stc
loope
jmp
push
daa
fucom
mov
cmpsb
pusha
add
mov
daa
push
jecxz
xchg
loopne
or
shlb
aad
lcall
push
add
rol
aam
subl
add
lcall
mov
aaa
add
imul
cmpsb
loopne
xor
loopne
popa
dec
loopne
daa
pop
mov
and
fistps
sub
add
lods
pusha
add
dec
not
jecxz
ja
jecxz
loop
aad
jp
pop
int3
mov
xor
mov
shrb
imul
mov
adc
dec
inc
xor
loopne
or
shll
ljmp
loopne
mov
inc
insb
bound
jmp
daa
ss
add
je
inc
lods
inc
rolb
sbb
das
mov
pop
jl
clc
add
xchg
mov
xlat
mov
push
ret
gs
popa
dec
cmpl
xchg
in
std
hlt
leave
out
jo
int3
push
andb
loopne
outsl
rol
fdiv
dec
cmova
jg
pop
bnd
pop
flds
nop
push
icebp
push
mov
movl
cmc
jns
clc
shll
mov
insb
leave
or
cld
dec
leave
ja
xor
rcll
and
pusha
gs
ja
and
in
or
rolb
pop
push
cmpsl
loop
xorl
pusha
adc
jg
inc
inc
mov
loopne
jle
test
shlb
shlb
cmp
add
push
jecxz
inc
mov
out
vmwrite
or
and
mov
shr
in
xor
stos
add
pop
jb
push
inc
mov
add
xor
aam
jbe
cli
or
and
es
inc
int3
mov
fcoms
jmp
movsl
mov
inc
filds
inc
and
sub
insb
mov
es
rcrb
lods
ja
jg
add
mov
and
loop
jmp
push
cmc
fwait
or
inc
and
add
pop
lods
add
sub
mov
fcmovbe
ficompl
fildl
inc
mov
scas
andb
bound
ds
cwtl
sbb
hlt
add
inc
pop
fwait
cmp
push
pop
into
dec
and
mov
jae
jnp
xlat
inc
rcrl
andb
xchg
mov
test
loopne
jp
in
xor
jl
mov
stos
add
loopne
dec
jne
or
or
lea
adc
dec
add
and
inc
and
cmpsb
rol
inc
xor
jg
push
push
shlb
jge
jmp
cmp
and
int
mov
stc
jne
jl
inc
and
out
add
inc
and
dec
fucomp
pop
cld
mov
sub
inc
xchg
data16
jno
mov
sbb
jno
sub
lods
jae
loopne
movsb
pusha
add
sbb
add
fldenv
mov
pusha
mov
loopne
lods
pusha
pusha
mov
fisttps
fadds
inc
or
ror
pop
pop
mov
test
pop
test
dec
xor
lods
cltd
jae
sbb
inc
pop
and
shlb
fistps
loopne
cmc
mov
andb
cmp
je
enter
arpl
adc
pop
mov
and
or
sbb
xor
pusha
add
jb
mov
adc
or
mov
inc
xchg
jno
mov
mov
or
mov
in
pop
inc
pop
insb
add
psrlq
scas
aas
jb
xor
mov
jnp
repz
and
in
imul
mov
inc
fwait
mov
cltd
xlat
adc
push
or
sti
shlb
and
and
ss
test
cmpsb
add
xchg
add
add
daa
add
adc
or
add
jbe
adc
add
and
mov
fs
and
pop
jmp
lahf
mov
mov
addr16
cmpb
adc
stos
andb
dec
jo
pop
ret
sub
mov
cmpsl
mov
pusha
inc
lcall
mov
jmp
lods
pusha
add
fstpt
ret
cmpsb
mov
inc
pusha
aaa
add
inc
and
shll
mov
pop
xchg
and
std
lods
loopne
push
xchg
out
repnz
shlb
or
scas
lea
sbb
popa
fwait
cli
and
adc
sbb
pop
mov
mov
pop
insb
sub
pusha
jno
call
adc
rolb
xchg
stc
xor
fcoml
lret
dec
pop
sub
jle
sub
pop
xchg
scas
out
cwtl
decl
loopne
or
addb
cld
enter
icebp
fcompl
xor
shrb
jg
jp
out
fsubrs
dec
sbb
and
mov
mov
mov
xchg
jp
insl
push
mov
push
jo
cmc
xchg
mov
mov
pusha
or
cmp
ljmp
out
fucomip
push
aad
jo
jge
dec
in
sub
aaa
hlt
cmp
xlat
clc
push
filds
mov
lea
add
rorb
jmp
loopne
push
mov
cltd
cmp
leave
dec
stos
andb
and
movsl
jg
ret
dec
adc
push
add
stos
pusha
shlb
dec
test
loopne
pop
mov
arpl
nop
dec
pop
pop
lea
leave
daa
fmuls
bsr
pop
cmp
push
add
mov
rcl
fisubrs
loopne
in
mov
mov
scas
sub
shlb
sbb
push
je
pop
mov
and
sub
mov
out
test
xchg
push
pusha
pusha
jmp
adc
add
pop
adc
push
lret
push
call
or
add
inc
add
mov
cli
int3
jge
and
pusha
scas
inc
add
sub
add
inc
inc
jecxz
mov
cmpsl
mov
push
push
insl
lret
daa
mov
cmpsl
loopne
loopne
sbb
dec
lret
int3
lahf
lahf
jl
andb
add
pusha
xchg
mov
xorb
dec
popf
xor
or
enter
shlb
and
mov
pop
mov
shlb
xor
push
js
das
xchg
pusha
loope
and
pop
fcomps
mov
dec
cltd
mov
aas
add
aam
and
push
rolb
sbb
dec
popa
cmpl
dec
inc
jmp
rol
jnp
shl
flds
rcrl
rolb
mov
jmp
in
and
data16
sub
rcrb
push
and
pop
sbb
cwtl
pushf
scas
andb
and
loopne
pop
jmp
hlt
cltd
stos
andb
andb
push
popf
pushf
leave
dec
inc
fdivr
mov
pusha
lods
and
jno
rclb
inc
cli
imul
out
dec
call
pushw
or
loopne
or
push
test
rcrb
and
and
mov
pop
sbb
andb
sbb
mov
inc
or
pusha
aas
mov
cmp
andb
add
pusha
mov
inc
call
outsb
add
fwait
xlat
mov
pop
inc
addb
iret
and
loopne
cmp
cmp
fdivl
addr16
mov
stos
mov
ret
pop
hlt
xchg
mov
pusha
mov
add
inc
mov
inc
mov
and
mov
pop
incb
pusha
add
mov
stos
push
clc
ret
lahf
in
cli
movsl
add
mov
addb
mov
push
and
inc
inc
ja
fdivl
test
mov
xchg
xorb
and
loopne
fs
in
xchg
cmc
add
mov
notb
pusha
and
push
pusha
inc
cmc
cmp
test
rolb
pusha
mov
push
pop
dec
int
or
repnz
jo
and
shrb
xor
inc
pop
loop
repnz
or
and
and
ficoml
mov
or
and
jp
lods
out
and
stc
add
data16
sbb
adc
movsb
mov
add
mov
or
jecxz
addb
xor
daa
mov
subl
add
rcr
scas
rcrb
pop
add
cwtl
into
lds
loopne
imul
popf
cmp
cmp
addr16
dec
adc
sar
sarb
xchg
pusha
push
inc
mov
iret
inc
stos
outsl
cmpsb
pusha
mov
loopne,pn
sbb
mov
xor
pusha
sar
movsb
inc
inc
lods
shlb
xchg
hlt
fbld
cwtl
push
popf
repz
add
dec
xor
cmp
shlb
imul
inc
out
aas
push
cmp
jno
lret
rol
add
inc
and
xchg
jo
sti
sbbl
sub
mov
loopne
scas
inc
and
dec
xor
mov
fistpl
aaa
push
ret
push
test
pusha
push
mov
in
xor
gs
cmp
inc
adc
push
xchg
fwait
or
and
in
enter
fimull
loop
sub
mov
add
in
xchg
lods
out
sub
js
shr
inc
add
mov
cld
movsl
and
cli
pushf
cwtl
mov
xor
push
add
out
jecxz
and
movsb
rolb
ljmp
xchg
inc
jnp
shrb
sub
lret
jns
fimull
loopne
iret
ja
inc
mov
imul
mov
clc
adc
adc
lret
movsl
or
mov
leave
arpl
ds
sarl
mov
mov
add
rolb
sbb
insl
lret
lods
loopne
pop
stc
pop
ja
sbb
and
fsubrl
addb
pop
or
and
dec
popf
daa
ds
stc
cs
and
fsubp
inc
enter
pusha
cmp
loopne
dec
ret
testb
or
add
mov
cltd
aam
add
loopne
xchg
and
xchg
and
adc
and
outsb
test
shl
hlt
push
mov
imul
shrb
pusha
inc
mov
pop
in
notl
aaa
repz
inc
and
pop
add
movsl
test
pusha
pusha
and
lock
pushf
movsl
movsl
pop
xchg
in
dec
sub
pop
xchg
enter
insl
sbb
daa
mov
inc
lock
stc
js
and
mov
pusha
adcb
pop
gs
xchg
mov
xor
repnz
enter
jle
les
fadds
lods
and
pop
xchg
mov
aam
gs
inc
and
jo
aaa
or
cltd
rclb
andb
pushf
call
daa
jns
repnz
xchg
es
mov
xor
aaa
or
mov
jge
cmp
xor
ljmp
pop
jle
dec
inc
insb
into
push
sbb
std
arpl
jle
aad
fiaddl
rolb
push
jb
daa
addr16
lods
pusha
pusha
dec
jg
loopne
addb
data16
or
pusha
test
sub
mov
pop
arpl
loopne
xchg
add
cld
push
mov
add
mov
sbb
outsl
pop
inc
xor
jge
rorl
inc
out
mov
pusha
into
dec
rcrb
adc
ss
sbb
inc
sbb
fwait
mov
inc
add
and
jns
or
add
andb
mov
loopne
xchg
mov
jmp
loopne
add
cmpb
out
jb
inc
jg
pop
jne
ljmp
adc
out
in
lcall
loopne
aam
insb
aas
mov
mov
and
or
test
mov
in
fistl
mov
int3
mov
push
jecxz
sarb
push
xchg
popl
pusha
push
insl
fs
cmc
sub
test
mov
dec
mov
add
insb
inc
test
add
add
in
ds
xor
pusha
shlb
push
nop
adc
adc
nop
hlt
add
shll
mov
push
out
je
and
pusha
dec
enter
mov
dec
aaa
movsb
rolb
jnp
inc
aas
and
daa
mov
test
in
cmp
insl
xchg
shl
leave
ret
mov
loop
std
jmp
lods
in
shrb
daa
shrb
xor
and
xchg
cmp
inc
sub
jg
mov
mov
sarl
cmpsl
bound
ret
jne
lods
push
mov
inc
and
and
not
scas
or
and
lret
rolb
out
shlb
inc
imul
pusha
enter
andb
mov
push
je
stos
bound
loopne
or
xchg
sub
mov
daa
jae
sub
rcrb
lret
lret
insb
pop
divl
sub
and
xchg
jl
inc
test
sbb
jg
adc
sbb
xchg
cli
stos
pop
pop
mov
sahf
andnps
insb
repz
test
and
hlt
xchg
adc
mov
push
and
outsb
clc
addb
inc
adc
xor
xchg
mov
dec
out
jns
mov
cmpsb
addb
xor
sub
add
loopne
dec
cmp
add
mov
pop
mov
cmp
and
pusha
inc
pop
pop
rol
and
aam
imul
nop
les
aaa
or
stc
add
inc
mov
push
jnp
ljmp
add
pop
dec
and
int
push
shl
add
shlb
insl
shl
adc
cmp
stc
shrb
adc
divb
ljmp
adc
lods
jns
leave
add
or
rclb
xchg
arpl
sub
adc
mov
cmpsl
sub
pop
cld
sete
pop
cmp
mov
les
push
inc
and
and
outsb
fwait
rclb
jg
fwait
push
call
pusha
arpl
pop
loopne
leave
subl
and
sarb
jae
pusha
pusha
dec
and
loopne
lock
in
test
ret
pop
hlt
add
pop
jg
mov
imul
fbld
jne
lahf
mov
cmp
call
add
int
cmp
push
xchg
xchg
mov
adc
or
inc
mov
and
jecxz
xor
imul
inc
cmp
mov
mov
sub
popf
sub
loopne
lahf
std
jnp
addb
enter
rorb
data16
mov
mov
hlt
test
sbb
sbb
mov
and
inc
xor
scas
fpatan
andb
movsl
fs
movsb
and
andl
js
cmpsb
shlb
mov
cmp
dec
inc
insl
jg
fs
and
dec
add
loopne
xchg
push
push
mov
or
add
lret
push
lea
movsl
cmp
inc
mov
push
imulb
pusha
and
mov
daa
pusha
jo
or
cmpb
into
mov
dec
movsb
mov
dec
loop
gs
xchg
out
add
lahf
add
push
adc
cwtl
data16
sarb
sub
shll
and
loopne
rolb
enter
movsl
xor
sbb
mov
push
mov
mulb
loopne
push
mov
loopne
adc
sub
inc
cmc
pop
push
jne
sub
push
scas
addb
addb
push
cmp
loop
lcall
inc
in
sbb
mov
mov
or
and
xchg
loope
inc
js
hlt
inc
pusha
xchg
mov
fwait
adc
dec
xor
js
rcrb
in
add
xchg
mov
dec
stos
mov
or
push
loope
pop
je
add
inc
rcrb
inc
or
rcrb
xor
mov
insb
add
imul
repnz
int3
clc
dec
rolb
shl
fnstcw
subb
and
add
pop
loopne
cmp
test
cmpb
mov
pusha
cwtl
nop
mov
shl
mov
xchg
cltd
call
je
andb
adc
mov
nop
or
loopne
push
push
nop
addb
or
loopne
cli
fldenv
sahf
enter
inc
push
rol
xchg
lret
push
cmp
cmpsl
push
lods
add
rclb
cmp
inc
into
xchg
cmp
gs
shlb
add
repz
sahf
adcl
and
fstpt
mov
inc
lock
or
mov
add
rclb
dec
add
das
add
jns
add
mov
fdivl
jns
js
or
sbb
add
jae
cmpsb
inc
inc
mov
loopne
mov
inc
ja
cmc
pop
xor
mov
mov
arpl
dec
nop
dec
add
pusha
mov
fldl
dec
sbb
inc
iret
sub
loopne
icebp
fbstp
and
test
loopne
mov
mov
out
pop
fwait
cmp
xchg
xor
loop
sbb
push
in
rcll
mov
inc
loopne
sub
loopne
shl
jmp
test
faddl
mov
aad
repnz
cmp
mov
bound
and
loopne
mov
inc
scas
loopne
ret
in
mov
lahf
sub
adc
bound
mov
push
imul
repz
and
adc
dec
cmp
cmp
es
loopne
pop
ja
push
ror
stc
in
add
lahf
insl
lcall
cmp
pop
push
pop
xor
repz
push
and
pop
ds
or
popa
subps
movsl
popf
mov
add
mov
mov
and
je
xlat
sub
insb
mov
add
neg
pop
push
addb
lock
lock
fsubrl
add
fcmovnu
mov
add
fisttps
rolb
nop
adc
xor
sub
dec
adc
adcb
loopne
xchg
adc
and
mov
mov
mov
movsb
mov
out
ja
mov
sub
or
sarb
mov
dec
lea
mov
mov
push
aam
dec
mov
pusha
inc
shlb
and
insb
sbb
add
std
adc
xor
mov
mov
and
push
ss
push
push
jb
push
rolb
push
mov
and
leave
push
cmpsb
pusha
pusha
loope
sbb
xchg
xchg
shll
mov
inc
sbb
pop
fcmovnu
mov
fadds
add
loope
data16
mov
cmpsb
loopne
in
mov
js
shl
addr16
sub
mov
loopne
test
add
xor
inc
mov
addb
rolb
loope
fstpl
loopne
mov
add
mov
hlt
xchg
sub
pusha
sbb
enter
inc
loope
and
add
inc
jae
and
jne
and
xor
mov
xchg
xchg
xor
inc
outsl
xchg
loopne
push
and
loopne
sti
xchg
ja
aad
mov
aam
mov
imul
mov
mov
jne
adc
sahf
scas
not
jmp
pop
and
and
loopne
jge
stos
sub
add
scas
loopne
pop
cmp
mov
sbb
xor
inc
mov
mov
in
mov
jl
das
js
shlb
andb
sarb
repnz
jecxz
cmpsl
and
les
jbe
add
xchg
jmp
dec
pushw
andb
push
lahf
cltd
mov
mov
fnstenv
mov
sbbb
andl
pusha
bnd
pop
fsub
push
jbe
xlat
stc
les
and
jne
xor
stos
scas
shlb
xchg
push
inc
pop
pop
les
mov
loopne
ja
mov
sub
mov
adc
pop
or
mov
sub
adcb
cli
add
adc
fistps
jbe
add
jecxz
fcmovnbe
ds
xchg
pop
push
mov
push
movsb
and
incb
push
push
andb
push
leave
mov
sbb
test
sbb
and
aad
xor
test
mov
mov
add
push
and
adc
mov
cmp
data16
mov
ret
and
addb
dec
and
cmp
ret
push
jmp
inc
mov
popa
or
popa
sahf
pop
out
push
add
xchg
sahf
hlt
inc
cmc
in
pusha
lds
incb
cmpsl
push
pop
sub
in
into
pushf
pop
pop
inc
sbb
test
mov
pop
xor
add
sti
lock
and
and
incb
shlb
adcb
inc
rcrb
inc
push
fdivrs
loope
inc
pop
push
jbe
xchg
mov
xchg
sbbb
fcomps
rcll
shrb
pop
das
inc
sbb
xor
lret
imul
and
pop
inc
sub
inc
mov
adc
mov
shl
mov
inc
add
mov
pusha
pusha
jb
stos
and
aam
les
mov
cmp
push
add
pusha
and
inc
nop
xor
or
add
mov
cmp
xor
dec
xchg
sub
xor
fists
pop
cwtl
jns
cmp
mov
lcall
xchg
mov
add
shlb
add
add
and
outsl
or
loopne
movsl
shr
xor
nop
into
jno
dec
aas
xor
clc
icebp
dec
adc
mov
adc
cmc
and
mov
jle
rol
ja
das
ret
sahf
sub
repnz
popa
psllw
mov
fmull
cwtl
inc
dec
pusha
cmp
inc
ret
xchg
sub
fiaddl
mov
sahf
cmp
rorl
inc
pusha
adc
leave
mov
stc
inc
adc
arpl
jo
out
dec
lock
test
xor
loopne
inc
pop
and
add
lret
rcrl
and
repz
lret
and
dec
or
add
gs
aaa
cmp
clc
testb
je
dec
sub
and
ret
jmp
adc
ss
jmp
out
aam
mov
sti
pop
mov
mov
add
rolb
popa
js
sahf
dec
cmp
dec
incb
in
push
mov
mov
rcl
scas
and
xchg
jnp
push
sub
sbb
add
arpl
and
test
shlb
pop
pxor
push
ficoml
mov
orl
movsb
andb
inc
push
add
addb
sub
and
inc
lock
faddp
out
jbe
fs
xor
inc
pop
aam
bound
shlb
movsl
xchg
iret
call
in
cmp
rolb
adc
sub
pusha
cmpb
out
mov
and
outsb
jb
dec
ret
mov
inc
adc
pusha
push
adc
pop
dec
add
fcom
test
loopne
xchg
imul
cwtl
cmp
mov
popa
xchg
lea
rorl
sub
and
and
and
dec
sbb
add
dec
mov
cmp
inc
fwait
xchg
mov
pop
sbb
in
inc
and
pusha
hlt
and
cmc
popa
jp
inc
add
addb
xchg
in
pop
jb
aaa
mov
in
or
std
fucomp
shl
aaa
aas
sbb
jo
add
sbb
roll
pop
sub
adc
pop
addb
movsb
loopne
dec
ds
and
lret
ljmp
rcll
sarl
sub
shlb
push
adc
xchg
bnd
andb
jle
sbb
loopne
mov
je
pusha
mov
cli
or
and
sbbb
xchg
push
add
popf
cli
pop
repz
add
cli
test
rolb
mov
mov
cli
jl
or
mov
inc
pop
shll
subb
and
push
push
inc
and
popf
ljmp
mov
cld
push
xchg
mov
inc
jnp
push
aaa
mov
pop
xchg
in
test
and
xor
pop
or
loopne
pushf
sahf
imul
cmp
jl
mov
shlb
out
andb
and
push
fimuls
loopne
pusha
pop
pop
pop
sub
mov
sbb
and
loopne
and
inc
xchg
int
incb
daa
scas
pusha
inc
insl
loope
ror
inc
rcr
fstps
daa
xor
outsb
cmpsl
sub
rclb
rcrb
mov
addr16
and
fcoms
add
cmp
mov
lods
mov
ret
push
cli
push
inc
rorb
mov
loopne
ror
out
dec
in
shll
negb
repz
mov
js
scas
stos
add
jbe
sub
in
fstl
loopne
mov
loop
mov
int
test
pop
aad
arpl
mov
add
mov
shl
mov
sahf
iret
add
adcb
push
call
outsb
mov
es
popf
movsl
sub
pop
in
mov
xor
scas
add
xchg
stc
in
mov
add
pusha
loopne
rolb
loopne
sbb
hlt
pop
test
in
out
andb
rolb
imul
xchg
jle
ret
fidivl
or
movsl
dec
adc
rol
dec
sahf
mov
xor
loop
sbb
or
add
imul
cmp
cli
lea
lock
push
int3
cwtl
aad
negl
and
mov
test
rolb
push
cli
les
lea
cmp
mov
mov
pop
insl
into
loopne
push
rolb
rolb
shll
ja
adc
mov
mov
mov
xorb
sbb
jb
dec
cmpsb
and
sub
loopne
les
and
add
mov
shll
mov
pop
std
sbb
and
negl
mov
inc
loopne
loope
and
add
insb
fwait
mov
sub
push
push
adc
and
loop
jg
test
inc
lcall
pop
inc
in
shrb
loopne
xchg
and
push
mov
movsl
mov
cmpb
mov
cmpsl
adc
daa
adc
add
dec
sbb
test
mov
xor
sub
mov
jp,pt
sub
adc
sti
bound
inc
inc
ja
or
loopne
and
sbb
or
loopne
xor
scas
mov
or
add
in
xchg
pop
pop
jno
pop
mov
rcrl
add
jmp
mov
cmc
mov
sub
add
add
sbb
pop
lods
loopne
addb
addr16
push
scas
or
xorb
xchg
cmp
xchg
cwtl
shrl
mov
push
enter
pusha
dec
sti
mov
nop
pop
and
rcl
push
mov
rolb
add
sub
rolb
xchg
sbb
loopne
movsl
dec
jne
adc
test
int3
aam
push
loopne
popa
push
inc
pusha
fdivr
dec
mov
popa
adc
add
xorb
mov
mov
loopne
jmp
scas
add
aas
sbb
inc
add
shrb
jle
inc
out
shld
faddl
insb
clc
cltd
les
inc
push
out
sbb
aas
bound
loopne
es
mov
sti
mov
pop
lods
add
add
pusha
sbbb
sub
mov
cs
jno
and
loopne
mov
outsb
fadds
fsubrp
xchg
sbb
adc
mov
jne
rcr
pop
push
adc
cmpb
loopne
and
inc
sub
shr
adc
and
add
cmp
jo
lahf
fnstenv
pusha
and
mov
push
aam
push
test
add
xor
repnz
ret
scas
fnstsw
mov
ret
andl
xchg
test
loopne
scas
addb
hlt
lret
cmpsb
add
int3
lds
inc
out
jmp
pop
or
addb
pusha
mov
mov
das
cmc
and
push
or
mov
mov
mov
lods
and
push
leave
loopne
cmp
and
jae
lret
mov
mov
pop
xlat
cmp
inc
mov
and
cli
or
rclb
or
pop
insl
jl
cld
add
and
and
sbb
ret
and
inc
loope
mov
push
inc
inc
call
add
scas
hlt
pop
aas
mov
adc
dec
ficoml
popf
sahf
or
adc
pop
jl
sbb
es
shlb
dec
mov
inc
inc
insb
outsl
mov
lret
pop
inc
lret
sub
pusha
xor
inc
in
xchg
sub
sub
loopne
mov
push
mov
addb
inc
sahf
or
and
jl
cmp
rcll
xor
mov
fdivrl
addb
jns
jae
shlb
sbb
shll
pusha
pusha
stc
scas
push
sbb
or
adc
dec
push
ret
movsb
and
inc
ljmp
cli
stc
push
pop
mov
sti
jge
and
dec
or
loopne
cmp
nop
dec
stc
insb
les
inc
hlt
lods
rol
pop
jmp
stos
add
cmp
sub
inc
cwtl
data16
rorl
in
addb
cmpsb
rolb
outsl
leave
test
inc
loopne
mov
add
ljmp
push
lds
lods
inc
jecxz
es
push
inc
mov
sbb
xor
xchg
mov
push
or
add
mov
pop
or
mov
add
rorb
cmp
pusha
loopne
sbb
cmp
popa
dec
fdivl
das
add
div
test
inc
sbb
das
ret
pusha
ret
cmpl
gs
inc
cltd
cmp
push
adc
dec
sub
lea
jle
popf
sbb
and
sarb
and
out
ljmp
sub
pusha
shr
jge
and
xchg
push
fisubs
push
pop
dec
lahf
pop
fistpl
imul
cmp
das
mov
sarl
scas
andb
or
repz
or
jo
dec
std
cmpsb
addb
movsl
ja
jg
add
jbe
cmpl
pop
test
adc
cmpsl
adc
pop
ds
daa
stos
adc
lods
stos
nop
mov
dec
jmp
dec
movd
or
std
and
and
fs
pop
xor
data16
cmpsb
loopne
and
loopne
mov
pusha
add
loop
inc
pusha
call
testb
ror
pop
sub
inc
fisttpll
lock
and
jbe
bound
and
rolb
jne
pushl
add
xor
pop
or
add
clc
cli
mov
lcall
loopne
jl
xor
add
hlt
xor
gs
add
pusha
aaa
add
adc
add
outsb
push
loopne
outsl
lods
and
inc
pusha
add
addb
les
pusha
xchg
or
loopne
pop
rcr
cmp
cmc
pop
sahf
pop
notl
sbb
idivb
pop
and
xchg
pop
and
mov
movsl
cli
pop
ret
clc
ret
fdivs
sbb
daa
inc
shrl
dec
pop
stos
inc
and
push
add
popf
andb
in
cs
andb
test
out
xchg
addb
mov
icebp
lahf
rolb
test
mov
loopne
lcall
pop
es
loopne
xor
mov
lcall
daa
mull
fst
addr16
push
mov
rolb
push
sub
rclb
inc
fsubp
nop
jl
mov
mov
andl
mov
xchg
popa
addb
sbb
incb
pop
push
and
mov
test
sarb
addb
or
xchg
out
pusha
mov
mov
pop
pop
popa
ret
cmc
jae
jecxz
add
mov
das
addl
add
xchg
inc
test
loopne
sbb
xor
cld
push
out
jle
mov
into
movsl
lcall
xor
and
mov
sbb
cwtl
inc
iret
pop
adc
and
rorl
stc
mov
mov
cmc
jle
mov
in
xchg
sub
pusha
into
inc
adc
mov
andb
adc
cwtl
sbb
xor
jg
aad
test
cmp
imul
stc
jg
push
mov
insl
push
push
mov
pusha
ja
lahf
fnsave
adc
pop
ret
sbbb
jle
cmc
adc
cmp
xlat
push
shlb
inc
ljmp
loopne
andb
loopne
jo
loope
mov
rorb
mov
loopne
cmp
loopne
mov
pusha
pop
out
je
mov
push
call
cmp
or
and
out
loopne
xchg
ret
add
xchg
loop
ret
and
arpl
push
xlat
lods
loopne
xchg
xchg
inc
and
mov
mov
addb
dec
aam
insl
cli
aam
rolb
xchg
and
push
andb
push
mov
fs
jnp
imull
iret
clc
cmp
shrb
add
adc
and
cld
xor
shlb
add
cmp
out
fwait
aad
dec
mov
call
cmp
int3
mov
and
fistl
adc
xchg
out
pusha
loopne
movsl
jmp
filds
mov
sub
add
xchg
pop
mov
mov
and
sarb
sbb
jle
shlb
pop
sbb
rolb
leave
and
inc
push
sub
inc
jne
out
adc
jg
sbb
arpl
inc
pusha
cli
mov
sbb
sub
cmpb
popa
scas
shl
repnz
stos
push
dec
cmpsl
add
lret
pusha
sub
daa
push
or
pop
fsub
aad
andb
out
dec
fbstp
mov
and
movsb
loopne
pop
ret
cmp
dec
es
aaa
and
fcmovnb
arpl
loopne
lds
clc
in
test
add
inc
sub
add
ror
scas
dec
push
cmp
mov
shlb
adcl
mov
mov
or
shlb
sub
pop
xchg
ret
push
inc
loop
rcll
inc
notl
int3
test
xor
repnz
rcr
jl
ret
jae
insb
inc
mov
jmp
cltd
in
mov
lea
and
sti
dec
jg
insl
inc
andb
shrl
push
lods
sub
mov
aam
rorb
loopne
xchg
imul
mov
sub
and
pusha
mov
cltd
mov
mov
sbb
fwait
sahf
int
mov
int3
inc
ljmp
mov
iret
fsub
cmc
out
pusha
movsb
pusha
shrb
cmp
scas
pusha
inc
movsb
mov
pop
cwtl
iret
and
cld
out
fistpl
dec
inc
pop
loopne
insb
xlat
sbb
push
cmp
and
pop
xchg
mov
addb
pusha
add
xchg
scas
inc
add
mov
lret
shlb
outsl
inc
lock
pop
xchg
pop
shr
push
cld
loopne
mov
mov
mov
or
pusha
rol
lock
sbb
xchg
push
sbb
pop
roll
js
sub
jnp
inc
ljmp
and
mov
xchg
popa
or
mov
into
scas
shlb
btr
mov
mov
add
bound
aaa
imul
rorb
inc
or
adc
push
ja
test
orb
aad
fcoms
and
out
das
mov
fmuls
icebp
mov
cmp
sbb
bound
add
pop
sbb
scas
shlb
icebp
stos
rolb
ficomps
or
xchg
addr16
dec
adc
pusha
mov
adc
mov
push
mov
inc
mov
jne
push
jp
imul
jb
stos
andb
mov
add
inc
shll
jno
jg
or
mov
push
cmpsb
loopne
pop
and
push
push
lcall
pop
xchg
out
add
shl
out
leave
mov
loopne
add
fiadds
push
int3
dec
es
and
push
ret
xlat
hlt
cld
push
inc
add
mov
xchg
push
sti
ret
mov
dec
dec
insb
cmpsl
dec
stc
sub
lock
inc
sub
push
jo
push
sti
incb
cmp
xchg
add
and
call
aam
aaa
in
fistl
insl
lods
mov
cmp
sbb
in
pop
mov
cmp
inc
fistps
push
imul
das
das
outsl
sub
mov
pusha
push
xor
test
dec
dec
loope
sbb
push
push
loopne
sarb
fcmovu
arpl
shlb
mov
rol
mov
rolb
mov
shll
andb
cli
lods
xchg
adc
and
das
or
add
add
xor
push
das
pop
test
and
mov
mov
ja
add
pop
push
shrl
mov
mov
nop
psrlw
orl
loopne
push
push
lret
lds
mov
inc
pop
data16
sub
shrb
inc
jns
shlb
out
aad
add
push
test
rclb
mov
cmp
adc
stos
pusha
cmpb
sub
push
imul
xchg
or
add
xor
shlb
and
dec
lds
cld
pop
jl
mov
and
jbe
hlt
jg
mov
jo
mov
cmpsl
out
pop
adc
and
and
lods
mov
test
loopne
rolb
test
dec
ret
and
inc
pop
inc
lock
out
incl
xor
fwait
jmp
adc
cmp
xor
pusha
shlb
inc
push
cmp
fmulp
sbb
xorl
pop
push
or
loopne
mov
outsl
pop
out
mov
jecxz
mov
inc
cmp
pop
jp
das
xchg
in
dec
aad
xchg
cs
pusha
icebp
aam
imul
inc
cwtl
faddl
and
sub
add
loopne
icebp
fsubs
add
stc
fcmove
sar
mov
jecxz
jnp
cwtl
xor
int
xor
mov
mov
sub
inc
push
and
stc
push
sub
jnp
loopne
add
loopne
pop
push
cs
mov
xor
sub
and
dec
hlt
cmp
push
int
add
jo
aam
jae
daa
adc
mov
xchg
pop
mov
mov
and
sub
or
loopne
push
outsb
mov
outsl
imul
inc
dec
icebp
fstl
ror
das
ret
and
rolb
pop
ret
stos
add
inc
add
push
fsubs
movsb
andb
fisubl
mov
scas
inc
mov
shl
sbb
pop
xchg
cli
adc
and
out
push
mov
in
pop
gs
mov
sub
pusha
outsb
test
rolb
rcl
fidivrs
or
jg
xchg
dec
movsl
and
mov
pusha
inc
push
rol
loop
inc
push
inc
sbb
adc
mov
sbb
mov
movsb
rolb
or
sub
inc
add
loopne
pop
cmp
sbb
shlb
js
outsb
pop
imul
andl
mov
pop
xor
int
pusha
dec
in
aaa
int3
pushf
push
mov
jne
cli
push
lret
mov
pop
jno
and
insl
jne
xor
out
lock
push
lea
into
sub
mov
and
addb
mov
shrb
jmp
add
out
ret
sarb
movsl
lock
pushf
mull
sbbb
inc
mov
mov
jnp
lcall
mov
mov
rorb
inc
test
pusha
xchg
jbe
and
scas
loopne
adc
and
cmp
sbb
or
mov
push
pop
gs
pusha
xor
and
jmp
xchg
mov
mov
add
shlb
and
stos
loopne
cltd
aas
fistps
xlat
fcmovbe
cmp
sbb
rcll
pop
xor
pop
cmp
rol
sarl
jae
loopne
push
loopne
insl
ja
mov
shl
cmp
imul
jcxz
icebp
cmp
mov
and
shlb
in
mov
pop
push
pop
shlb
out
mov
jle
popa
adc
mov
pusha
sub
inc
mov
inc
mov
pop
movsl
and
mov
mov
iret
adc
xchg
aad
insl
pop
popa
xchg
stc
pop
js
jo
lods
roll
ja
add
and
dec
dec
pop
std
cmp
in
xchg
xchg
mov
sub
jg
andb
int3
jmp
mov
ljmp
rcrb
das
dec
bound
fs
adc
icebp
lahf
mov
insb
rcrl
add
sbb
pop
push
and
inc
loopne
fsubl
inc
pusha
pop
add
push
sbb
cmp
inc
mov
stos
add
mov
pop
mov
out
mov
loopne
add
push
adc
and
cmp
mov
bound
jb
mov
loopne
sub
rorb
jae
jmp
insb
mov
pop
xor
inc
loopne
cmp
and
and
pop
and
outsb
xor
push
push
dec
outsb
cmpsb
rolb
pop
inc
das
ljmp
lret
mov
leave
in
push
lret
movsb
shlb
mov
sub
inc
xchg
cmpsb
mov
rorb
in
icebp
ss
push
lods
stc
cmp
int
mov
and
mov
sbb
divb
adc
ds
cmpsl
div
adc
pop
cmp
mov
sub
fwait
jae
xor
adc
inc
mov
ss
rorb
adc
xor
inc
fistpl
cli
pop
rclb
lods
and
push
addb
mov
pusha
cs
mov
ss
mov
shlb
and
dec
xor
mov
push
and
iret
arpl
or
rcr
hlt
fdivl
inc
push
sbb
cmpsl
insl
pop
xchg
int3
mov
stos
xchg
mov
ds
ja
in
cmp
pop
xchg
rcrb
pop
dec
push
or
rorb
push
mov
outsb
ds
scas
rolb
sbb
push
or
xor
dec
and
cmp
inc
pop
xor
mov
rolb
shlb
fwait
out
aam
jg
loopne
jle
jns
insl
mov
pusha
pusha
inc
push
mov
mov
add
je
sub
add
jno
cmpsl
je
sbb
ret
jge
jmp
les
es
aad
dec
iret
mov
add
rol
sbb
push
sub
push
mov
shlb
and
insb
sarb
push
mov
inc
imulb
rolb
movsl
dec
iret
push
mov
push
jl
fcmovnu
push
andb
inc
xchg
push
ljmp
pusha
sarb
rcr
imull
sub
inc
insl
movsl
ja
fucomip
outsb
lret
out
and
ror
xchg
xor
aam
mov
xchg
leave
add
mov
mov
or
nop
xor
and
sbb
sub
rclb
or
pusha
push
mov
xor
jns
inc
lock
andb
fwait
addr16
jecxz
xlat
xchg
jge
rcrl
loopne,pn
loope
dec
dec
mov
loopne
and
dec
and
mov
xchg
mov
dec
js
flds
outsb
sbb
push
addb
sbb
xchg
mov
dec
jns
mov
arpl
leave
xchg
cs
sbbb
popf
mov
jge
jmp
dec
in
lods
ficoms
pusha
movsb
inc
mov
pusha
jne
in
inc
dec
jp
add
loopne
and
and
add
mov
mov
shll
fisttps
movb
jb
stos
and
push
andb
shl
dec
cltd
mov
sbb
cmp
add
call
repnz
fldl
inc
add
and
add
ljmp
mov
and
lret
imul
sbbb
jle
aaa
inc
stos
out
pop
pop
add
and
push
pop
or
and
loopne
loope
sub
aad
loopne
jp
push
add
rolb
shlb
fidivrl
pop
adc
and
inc
test
inc
jle
mov
and
or
and
sbb
or
loopne
inc
inc
mov
in
add
adcl
cmc
outsb
mov
cmp
aam
push
mov
mov
mov
push
scas
jl
shlb
push
cmp
mov
adc
xchg
cld
movsb
mov
mov
inc
cmp
xrelease
push
ljmp
mov
sbb
lret
add
loopne
push
popa
pop
xlat
lcall
dec
aaa
lea
inc
movq
aaa
add
mov
push
popf
add
pusha
in
pop
out
ds
cmpsl
cmp
pusha
and
jle
ret
push
addr16
ret
lea
mov
add
aas
daa
mov
mov
xor
mul
jmp
divb
cli
pop
sbb
xor
mov
ja
cwtl
mov
mov
jae
pop
mov
test
fs
push
fs
shr
loopne
push
lea
mov
mov
xchg
adc
mov
out
pop
xor
andb
shlb
sub
cmp
dec
sub
call
mov
sub
push
adc
sbb
push
or
pusha
and
iret
call
insb
test
loopne
xchg
dec
mov
out
mov
lcall
sub
adc
loope
mov
pusha
ja
addr16
rcll
aaa
arpl
lahf
fcomi
ffreep
pushf
loope
rolb
add
xor
fs
loope
pusha
mov
ret
addb
in
sahf
jmp
xchg
dec
mov
add
dec
sub
and
clc
dec
fsubl
shlb
inc
jp
push
mov
notb
cmpsl
sub
lcall
lret
inc
adc
pushf
lods
daa
dec
cld
mov
and
and
movsl
out
pop
jmp
pop
loopne
rolb
mov
sub
notb
mov
mov
mov
in
andb
sub
add
mov
sub
and
and
and
mov
mov
sbb
jp
dec
insl
ljmp
or
loopne
loope
push
sub
loopne
inc
xchg
fildll
in
lods
cmp
inc
jl
push
add
scas
andb
inc
repz
fisttpl
loopne
imul
popa
je
push
insb
or
cmc
stos
inc
and
push
pop
dec
lds
test
and
pop
dec
cmpsl
fisttps
clc
fcompl
and
arpl
pop
je
es
and
mov
rolb
sbb
jge
push
out
sub
addb
jb
or
jb
scas
add
pop
mov
repz
push
push
js
ja
aam
pop
ja
adc
imul
xchg
pop
pop
pop
mov
mov
pop
inc
inc
clc
pop
push
jns
push
cmp
sbb
push
pop
add
xor
xlat
cmc
das
lret
out
pop
xchg
daa
sub
and
lret
fisubrs
shlb
add
je
je
jo
addr16
into
popf
jnp
testl
push
pop
and
inc
nop
pop
lret
inc
mov
inc
sarb
iret
pop
sub
pop
fcoml
scas
loopne
xchg
insl
leave
add
loopne
xchg
push
adc
adc
mov
xor
dec
in
jp
pop
sub
inc
icebp
stos
enter
loopne
xchg
and
and
fildll
add
mov
rolb
add
out
or
and
loopne
cmc
adc
pop
mov
pop
stos
pushf
sbb
bound
add
movsb
andb
je
into
stos
iret
dec
add
cmp
mov
lcall
sarb
mov
pop
xchg
push
gs
sbb
mov
testb
and
out
mov
mov
or
or
addb
loopne
test
test
andb
ja
dec
push
mov
mov
adc
rolb
mov
es
shlb
add
mov
xchg
test
sub
daa
mov
or
dec
push
movsl
jno
mov
push
sub
jne
cltd
addr16
lcall
push
pusha
add
mov
ljmp
mov
call
or
cmpsb
andb
jne
ljmp
adc
in
xchg
out
cmc
bound
mov
mov
popa
test
pop
lret
loope
loop
or
popa
push
cmc
cmp
inc
push
xchg
bound
and
ror
xor
shlb
les
testb
cmp
pop
jns
jge
pusha
sar
rol
sarb
sbb
nop
mov
mov
push
push
adc
add
xchg
and
add
jae
or
popf
lock
movsb
mov
sub
mov
stc
dec
int3
add
add
mov
lods
stos
popa
mov
rol
fstpt
or
loopne
xchg
or
loopne
fdivrs
subb
cmc
mov
int
sbb
xchg
ffreep
out
addb
leave
add
xchg
test
addb
rcrb
es
out
stos
mov
or
pusha
dec
or
pusha
add
adcb
loopne
mov
scas
rolb
stos
loopne
stos
and
inc
mov
imul
add
fcmovne
fisubrl
std
ja
mov
aad
and
adc
mov
mov
enter
std
inc
and
stos
jp
cmp
mov
leave
in
daa
inc
repz
inc
mov
repz
pusha
lock
xchg
xor
push
inc
mov
dec
pop
and
and
or
inc
stc
push
rolb
lds
inc
dec
xorl
sub
add
out
push
sub
push
push
xor
sub
loopne
jg
add
sbb
leave
ret
xor
jecxz
shlb
lret
xor
xchg
addr16
xchg
pop
fldt
xchg
inc
stos
and
rolb
sbb
inc
sbb
sti
pop
and
cwtl
push
pushw
inc
and
test
mov
aaa
ret
mov
jo
jle
jmp
pusha
nop
shr
cmp
push
pop
mov
inc
data16
cmp
loopne
jae
rolb
ror
sub
jl
ss
add
and
fidivs
sarl
lret
scas
bound
xchg
adc
shll
xchg
enter
xor
pop
or
pusha
repnz
icebp
xchg
jle
jle
orl
inc
lea
arpl
fstpl
mov
add
ret
xorl
leave
xor
and
rolb
mov
sub
mov
fcmovnbe
pop
xlat
aad
test
pusha
cltd
fidivrl
loope
and
fs
inc
enter
pusha
xor
sub
pop
mov
or
popf
daa
loope
mov
loopne
xchg
cmp
iret
inc
or
adc
push
out
out
push
pop
imul
les
ljmp
movhps
lahf
mov
pop
int3
xchg
scas
mov
inc
xchg
int
mov
sbb
ss
rcll
fiadds
pusha
sbbb
push
and
inc
push
mov
stos
scas
mov
mov
lods
cmp
insl
inc
xchg
shl
pop
aam
test
mov
inc
addb
inc
mov
andb
stc
sahf
aad
push
cltd
fwait
sbb
mov
jmp
jo
mov
push
pop
sub
pusha
inc
imul
insb
cmpsl
inc
or
loopne
dec
not
push
dec
sbb
andb
and
add
lods
add
mov
sarl
int
movl
xchg
sti
leave
xchg
es
xchg
xchg
lock
inc
jbe
andl
lock
xor
cmp
pusha
lea
cmp
jmp
test
jno
imul
popf
ljmp
and
jle
cmp
into
push
cmpsb
and
repz
movsl
jns
jecxz
jns
inc
andb
inc
cmp
outsb
scas
mov
les
xor
xchg
sbb
xchg
cmc
cmp
cmp
add
mov
mov
cmp
sub
loopne
cltd
adc
add
pop
imul
mov
xchg
add
ljmp
or
pusha
cmc
in
xor
push
divb
rorb
loopne
and
mov
test
add
stos
cmp
inc
mov
andb
in
icebp
push
inc
inc
xor
sbb
dec
push
sub
ja
xchg
hlt
jp
pop
xchg
sbb
cmp
and
mov
rorb
mov
cwtl
add
icebp
jge
mov
jbe
outsl
jl
shlb
movsl
mov
out
sbb
insl
into
push
mov
cld
sarb
pop
sarb
xor
loopne
jmp
loopne
ficompl
sub
xorb
sbb
sub
inc
std
mov
adc
jg
mov
rolb
mov
mov
shlb
xchg
xor
mov
aad
sub
xor
and
lods
or
pop
out
pusha
add
and
lea
test
adc
or
mov
and
loopne
sbb
mov
dec
fwait
jb
pusha
and
out
inc
sahf
cmp
xchg
fistps
int3
aaa
stos
ljmp
xchg
std
fistps
addb
icebp
arpl
jge
sbb
bound
xor
dec
aad
mov
mov
call
das
mov
test
mov
pop
and
push
mov
rolb
and
mov
jmp
xchg
sub
pop
jo
addb
rolb
loopne
ljmp
and
movq
shr
addr16
mov
jmp
loope
ja
mov
jne
sub
mov
andl
and
loopne
mov
inc
dec
out
fstps
and
push
mov
pusha
inc
ret
adc
cmp
loop
sub
mov
lret
push
or
xchg
mov
push
inc
rcrb
dec
test
mov
adc
inc
addb
aaa
sbb
outsb
negl
or
pusha
push
mov
mov
pusha
inc
cwtl
ret
xchg
rorb
push
pop
fidivs
fdivp
ret
mov
and
or
loopne
test
and
xor
push
jle
jb
jg
divl
and
pusha
xor
mov
inc
mov
jecxz
mov
iret
push
repnz
jb
xchg
mov
scas
dec
popa
xlat
sti
sti
push
cmp
aas
jno
fiadds
arpl
nop
iret
lds
mov
and
mov
mov
movsl
cli
and
pushf
xchg
inc
mov
xchg
jnp
dec
add
rol
mov
mov
mov
ss
xor
or
xchg
mov
fisubl
jae
sti
jae
cmc
jbe
cmp
and
shlb
mov
pmullw
notb
push
inc
inc
repnz
stos
pusha
rcrb
and
cmpsl
into
lds
loopne
xchg
push
aas
adc
call
lock
pop
aas
mov
pusha
loope
xor
sbbl
or
xor
xor
xor
shlb
repz
stos
mov
mov
and
loopne
adc
addps
push
lahf
addb
fistps
xor
mov
cmp
jg
sbb
lret
add
outsl
mov
mov
sbb
lret
mov
pusha
mov
sub
add
mov
or
and
xor
inc
push
xlat
lods
inc
add
mov
mov
sub
scas
mov
mov
pusha
imul
xchg
rep
jmp
movsb
mov
mov
xchg
dec
mov
jbe
pop
jno
out
lret
cli
xor
out
loop
add
clc
mov
jecxz
and
mov
mov
icebp
aad
loopne
loop
stos
dec
mov
fmull
sbb
and
ds
add
and
cwtl
fbstp
outsb
stos
mov
clc
add
test
cmp
leave
xchg
rcrb
rorb
into
xor
add
idivb
jns
lea
add
adcb
repz
rorb
cmp
push
and
cmp
je
pushf
cmpsl
pop
arpl
push
cmc
shlb
loopne
pop
sbb
outsl
pop
sub
inc
or
shrb
push
in
pushl
xor
loope
mov
mov
sbb
and
dec
scas
addb
sbb
push
sbb
or
add
add
fistl
push
push
pop
sarl
sbb
push
rolb
mov
fnstenv
mov
mov
or
add
and
add
shlb
mov
int3
xlat
js
pushf
les
int
leave
adc
xor
aaa
push
mov
jns
jne
andb
js
add
nop
lock
xor
push
inc
shlb
movsl
clc
in
pop
mov
movsb
shl
pop
xor
mov
std
mov
loopne
sbb
mov
xor
andb
and
out
nop
mov
cmp
dec
xor
push
movsl
mov
mov
filds
psubq
pop
shll
mov
or
mov
pusha
imul
inc
mov
sbb
mov
push
dec
ja
call
jno
and
pop
mov
icebp
icebp
adc
mov
pusha
pop
mov
mov
jb
jg
adc
xchg
fsubrs
inc
pusha
xchg
xchg
jb
sub
addb
and
repnz
loopne
sbb
cwtl
or
pusha
hlt
mov
loopne
pop
aad
dec
pop
pop
mov
imull
sub
rolb
pop
adc
mov
jge
and
shlb
dec
lea
mov
loopne
scas
pop
inc
outsl
movsb
and
cmp
and
and
sub
dec
test
shrb
or
and
sbb
add
pop
mov
out
popf
push
push
aam
aam
inc
inc
push
mov
xchg
push
mov
loopne
and
rolb
lahf
inc
dec
jg
and
push
movsb
pusha
add
in
lret
mov
add
inc
dec
cltd
cmp
les
push
cwtl
cli
cld
iret
call
mov
pusha
add
xor
mov
mov
mov
xchg
pop
into
andb
pop
lahf
fwait
jo
jl
imulb
mov
add
pop
fimuls
xchg
incl
jae
add
xor
xchg
lahf
mov
lds
xorb
cmp
mov
stos
inc
loopne
sub
rclb
std
stos
addb
add
andb
adc
scas
stos
add
cwtl
mov
add
pusha
inc
and
mov
jle
xchg
mov
arpl
cmp
cwtl
repnz
mov
sub
shlb
push
rol
mov
fisubrs
movsl
mov
inc
pusha
mov
lret
testb
rorb
add
jp
inc
jnp
mov
jne
fimull
add
rolb
lcall
jle
sahf
cmc
nop
push
aad
nop
adc
xchg
sarl
inc
addb
jbe
out
or
aam
popl
pavgb
and
sub
shlb
jp
stos
mov
in
add
inc
pop
mov
dec
sahf
imul
jg
pusha
addb
jg
andb
nop
into
test
lcall
lret
cmp
jge
add
mov
in
add
rcrb
or
pusha
jp
lahf
inc
xchg
fstps
aam
sub
and
jbe
xor
arpl
inc
pusha
mov
add
js
or
leave
test
mov
test
lock
xlat
clc
cmp
adc
out
and
shl
sti
push
dec
xor
sbb
xchg
addb
cs
xchg
sahf
sarb
leave
rolb
inc
mov
rcr
xor
mov
add
insl
push
inc
jns
movsb
addb
xchg
lods
addb
stc
lret
aad
jo
mov
add
add
pop
in
add
ret
push
cmc
add
mov
in
inc
sbb
fwait
mov
sbb
mov
xlat
lahf
ret
fisttpll
iret
inc
test
push
jge
in
call
loopne
push
sbb
lock
and
and
dec
enter
outsl
hlt
sbb
iret
pop
rol
xchg
je
sub
add
cltd
cmpsb
shl
or
xchg
xchg
sub
call
add
imul
and
js
dec
xchg
push
fcmovu
test
inc
mov
dec
idiv
fistpl
loopne
fldl
mov
xchg
mov
andb
je
push
xchg
notb
inc
shl
pusha
pusha
adc
add
sbb
xchg
add
shlb
inc
loopne
lds
mov
lds
insb
xchg
mov
or
loopne
enter
cltd
jp
inc
and
dec
and
inc
dec
stos
pusha
mov
jnp
leave
inc
cmpsl
mov
push
or
inc
sarb
rorl
popf
out
pop
mov
and
or
add
addb
cmc
in
push
and
ss
sub
loopne
inc
rcrb
fwait
or
loopne
icebp
lret
or
inc
lods
cli
xchg
mov
add
out
jae
sbb
rcrl
loopne
and
fwait
and
loopne
mov
and
sahf
sbb
insl
mov
and
mov
xor
xchg
aad
scas
add
dec
leave
loop
clc
and
add
loopne
push
mov
sbbb
adc
mov
xchg
lahf
outsl
scas
xor
add
push
insb
pop
ljmp
stos
loopne
jae
pop
ljmp
hlt
mov
mov
or
lods
andb
pop
sbb
xchg
icebp
fiadds
insb
and
sub
je
fnstcw
rorl
lock
stos
and
incb
or
in
dec
inc
and
add
dec
lahf
incb
aam
rolb
jnp
add
cltd
mov
jb
es
jge
push
fcoms
jmp
mov
add
jnp
cli
jb
mov
pusha
loopne
rolb
stos
addb
or
pusha
inc
fdivr
ds
js
out
sbb
loopne
psubsb
add
mov
das
rorb
pusha
loopne
dec
xchg
pop
inc
fincstp
xor
inc
inc
push
xor
lret
adc
mov
lcall
mov
cmc
pop
sti
mov
xor
add
and
sub
dec
loopne
add
adcl
ret
call
xchg
mov
mov
or
inc
mov
push
icebp
fsub
push
loopne
flds
pusha
and
addb
lea
sub
mov
xor
mov
sub
dec
cli
in
mov
rcr
in
adcl
xchg
mov
lahf
and
push
addr16
push
bound
mov
sbb
mov
mov
out
and
inc
sti
addr16
or
inc
inc
andb
and
mov
jecxz
xchg
inc
dec
imul
pusha
cmc
xchg
add
push
sub
dec
daa
cmp
sbb
dec
dec
jns
lods
lea
inc
mov
mov
shlb
xlat
mov
rolb
repz
out
in
mov
fsts
sti
je
dec
cmp
loopne
test
mov
cmp
jg
inc
add
and
lds
arpl
in
xlat
lds
lcall
cmp
addb
daa
cwtl
dec
adc
stc
imul
pusha
andb
pop
ret
shl
add
stc
inc
shr
call
loopne
mov
add
mov
sbb
je
cmpsl
or
and
shlb
push
lea
push
pusha
sarb
sub
pop
jl
mov
xchg
mov
dec
addr16
mov
mov
leave
repnz
insl
xor
and
inc
test
loopne
cmp
inc
loopne
ficompl
lock
mov
popa
sbb
add
testl
hlt
rcrl
mov
lock
push
js
jb
mov
lea
mov
inc
sti
mov
sarb
in
sbb
and
pop
adc
insl
bound
cmpsl
out
out
cmp
adc
sub
sbb
jbe
jmp
nop
inc
ja
call
inc
inc
shll
cmp
xchg
daa
xchg
jb
ds
enter
insb
and
add
xchg
add
loopne
sub
div
mov
cmp
mov
fwait
sub
jo
add
xchg
mov
into
imul
enter
js
push
enter
add
pusha
and
mov
jge
adc
mov
loopne
sahf
das
test
movsl
cwtl
add
add
ss
test
ss
sbb
jl
mov
fwait
das
shrb
sub
add
mov
out
stos
sub
push
int
stos
mov
lods
inc
loopne
fdivrl
push
andb
and
in
andb
addr16
ror
mov
sub
fnsave
dec
adc
fimuls
sbb
pop
pushf
sahf
out
push
jne
mov
sbb
rcrb
pop
into
cwtl
das
or
sbb
jle
adc
mov
cmp
cmp
sahf
inc
in
or
outsl
cmpsb
pusha
rolb
and
ret
mov
and
cli
out
rcl
mov
fs
daa
pop
mov
rol
push
mov
sub
and
or
mov
cmpsl
inc
repnz
popa
mov
loopne
mov
jmp
pop
xchg
push
into
push
push
and
cmp
loope
push
add
daa
cmp
or
inc
pusha
jnp
adc
ds
inc
sub
cmpsb
and
stc
mov
mov
dec
xchg
sub
loopne
shlb
dec
arpl
push
inc
and
push
jns
mov
fnclex
add
andb
rclb
hlt
pusha
jp
push
lcall
shl
dec
mov
pusha
sub
mov
and
xchg
jg
xchg
mov
fistpl
push
or
loopne
sbb
mov
pusha
push
addb
sbb
int
andb
add
pop
pop
jl
pop
lahf
mov
mov
xor
testb
and
mov
loopne
lods
addb
mov
add
pusha
leave
jle
jbe
adc
adc
and
insb
cmp
push
cmp
and
jge
mov
stc
out
daa
repz
push
xchg
sbb
imul
pop
push
dec
adc
fistl
shlb
movsb
inc
add
inc
or
xchg
mov
mov
jbe
inc
mov
mov
out
mov
mov
mov
mov
and
push
cmp
cli
ljmp
js
mov
sub
xchg
shlb
inc
cld
ficompl
and
call
sbb
jne
ja
cmpsl
fsts
js
scas
xorl
pusha
pusha
xchg
inc
stos
push
inc
sbb
rorl
mov
xor
outsb
inc
push
jae
mov
test
add
push
mov
mov
xor
push
xchg
cwtl
push
fnstcw
pushf
sbb
or
inc
pop
in
inc
adcb
jmp
aam
jo
test
pusha
js
or
push
popa
ret
orb
outsb
jnp
sbb
jge
jno
lds
push
les
aaa
or
pusha
inc
lret
fcmovbe
negl
call
icebp
jge
pusha
hlt
push
add
insl
fnsave
jle
ss
mov
sbb
in
add
out
sub
mov
scas
and
xlat
and
mov
sub
ret
pop
add
sbb
add
ljmp
pand
jb
ret
rclb
dec
outsb
int3
popf
sahf
dec
lock
loope
add
inc
lret
or
add
lock
lret
loopne
ss
sub
pop
sbb
inc
daa
popa
lret
int3
inc
outsl
in
enter
test
and
cli
pop
inc
pop
and
mov
and
xchg
cmp
ss
dec
inc
das
push
sub
pop
lret
sub
clc
fstpl
or
push
add
addb
pop
and
test
data16
jmp
xor
sbb
jno
clc
imul
popf
mov
xor
or
lds
and
mov
cli
jb
push
shlb
xor
lret
cmp
gs
and
dec
and
xlat
std
popf
and
cmc
sbb
shlb
arpl
aam
ss
dec
pop
fmull
add
jge
pop
adc
jo
cmp
shlb
rolb
or
mov
loope
push
shll
insl
lock
mov
repnz
int
mov
jno
andl
mov
lahf
dec
popa
mov
sbb
andb
loopne
push
shr
dec
mov
push
aad
arpl
mov
sub
pusha
test
dec
sbb
icebp
xchg
xchg
scas
or
inc
in
les
lods
and
mov
cmc
mov
ret
outsb
inc
or
and
or
stc
and
or
shlb
and
shrb
fdivs
fistl
or
ror
andb
push
or
mov
dec
cmp
loopne
push
fwait
xor
and
add
fldt
mov
dec
clc
leave
mov
test
daa
mov
pusha
sbbb
add
xchg
lods
pusha
shr
dec
push
lds
clc
sahf
cli
mov
mov
inc
fisubs
sarl
lods
mov
lods
add
add
rol
dec
cltd
cltd
mov
adc
jnp
and
int
mov
inc
in
and
addb
pusha
add
xchg
pusha
rorb
shlb
rorb
jp
add
xchg
int3
mov
sub
or
dec
xchg
dec
pop
inc
push
pop
stos
shlb
xor
fdivrs
fdiv
mov
shlb
mov
add
call
shrl
mov
lret
push
or
es
shlb
addb
shlb
add
ds
and
xchg
jl
sub
cmpsb
loopne
dec
add
or
pusha
pusha
add
adcb
pusha
sti
xlat
ja
test
in
cmc
icebp
shl
lret
fs
sub
inc
fs
cmp
nop
shll
fsubr
cli
enter
mov
cmp
jne
int
not
shll
popa
jmp
sbb
pop
inc
int
sub
and
rcll
push
and
fwait
in
dec
xor
pusha
add
inc
adc
add
adc
loopne
push
adc
sti
addb
pop
dec
mov
gs
mov
pusha
add
data16
mov
stos
and
hlt
cmpsb
inc
and
mov
mov
sub
xchg
in
pop
mov
sti
mov
sbb
mov
inc
cs
mov
inc
cli
movsl
pop
cmp
nop
pop
sbb
jae
out
xor
ror
test
les
jl
dec
mov
out
lods
lds
xor
int3
sbb
dec
pop
add
add
pusha
and
fadds
filds
dec
xor
shl
dec
mov
bound
pop
mov
mov
pop
clc
ja
or
add
and
mov
cli
repz
test
pusha
mov
push
add
xor
testb
mov
scas
in
sbb
push
sbb
mov
insl
push
fcomip
ja
fcompl
mov
in
in
push
mov
add
push
rol
pop
jecxz
shlb
mov
cld
loopne,pn
popa
jno
movsl
or
push
rorb
push
loop
add
push
imul
aas
daa
inc
insl
xchg
sbb
shr
cmpsb
shlb
pop
test
xor
inc
mov
test
inc
pop
xchg
push
lahf
movl
fcmovu
jo
dec
dec
cmp
xlat
xchg
xor
push
scas
and
es
and
rcrb
push
dec
mul
xchg
movsb
loopne
pop
iret
fwait
in
pop
lahf
cmp
add
and
jp
clc
sub
rolb
sub
movb
inc
inc
loop
adc
testl
addb
mov
jae
daa
fs
subb
and
shlb
mov
cmp
pusha
or
inc
pop
dec
int
inc
rorb
and
mov
lahf
lahf
adc
nop
push
or
inc
and
in
mov
outsb
jo
test
or
dec
xchg
mov
loopne
inc
mull
loopne
pop
pushf
or
dec
cmc
xorl
jnp
mov
mov
inc
sub
and
xchg
aas
cmc
dec
add
and
add
mov
add
mov
and
shr
sti
pop
imul
and
in
mov
imul
add
jns
sbb
aaa
imul
push
pop
mov
and
xchg
push
mov
xor
loope
xchg
xor
push
bound
in
loopne
cmpsl
lods
mov
mov
add
and
out
mov
or
mov
call
rolb
mov
jmp
pusha
and
jbe
push
bound
pusha
and
roll
sub
mov
or
loopne
add
push
sbb
jo
dec
pushf
scas
add
out
adc
xchg
cmc
and
popf
jg
pop
decb
out
xchg
dec
push
dec
mov
repz
add
sbb
or
inc
xor
jb
and
xor
push
pop
pop
leave
sbb
andb
lret
mov
cmpsb
add
sbb
loopne
mov
mov
mov
mov
inc
call
xchg
mov
and
aad
pop
popf
rorl
loopne
xchg
jle
addb
outsb
mov
loopne
jp
pop
leave
push
jnp
dec
leave
inc
pop
xor
mov
dec
out
rolb
test
dec
xor
xlat
push
aad
jecxz
inc
add
fwait
xchg
jecxz
aas
scas
cmp
in
stos
pusha
fsubr
jnp
mov
mov
mov
loopne
mov
adcl
loopne
loope
jo
loopne
mov
adc
adc
and
lock
xor
inc
pusha
xor
add
or
rcrb
mov
stos
andb
mov
lahf
mov
loopne
leave
in
and
jae
mov
mov
andb
and
push
inc
loopne
jae
test
sarb
test
add
cmp
lock
stos
cmp
pcmpgtd
dec
es
pusha
and
push
mov
jnp
std
shll
pop
inc
xor
xor
add
shl
ja
stc
add
and
cmp
pop
iret
f2xm1
and
or
imul
mov
fs
xchg
aas
sbb
jmp
pusha
and
pusha
rcl
sti
leave
dec
sub
jbe
or
xlat
inc
fucomip
fs
shrl
loopne
jns
mov
pop
cwtl
mov
loopne
mov
jmp
mov
pushf
xchg
insl
out
push
andb
cltd
sbbl
mov
insl
push
dec
nop
lock
jp
inc
andb
cmp
out
push
or
mov
loopne
sahf
inc
inc
arpl
mov
mov
xor
xchg
adc
xchg
jno
sub
inc
aam
stos
loopne
xchg
iret
dec
push
sar
pusha
loopne
mov
xchg
sbb
movsb
add
arpl
fwait
ljmp
pop
mov
inc
inc
jge
imul
int
outsb
sarb
push
lods
adc
imul
aad
mov
mov
shl
cmp
into
mov
mov
decl
rolb
sbb
pusha
subl
pop
dec
ret
push
in
js
mov
stos
inc
pop
sbb
cmpsb
loopne
xrelease
loop
dec
add
cmp
pop
aam
ja
icebp
dec
mov
cli
mov
fists
testl
xlat
and
shlb
loopne
sbb
sbb
cli
sbb
xchg
sahf
leave
in
pop
adc
daa
dec
out
js
mov
movsb
loopne
jbe
scas
pusha
add
loope
push
repnz
inc
hlt
sub
inc
mov
pusha
add
mov
andb
dec
es
inc
aad
inc
mov
sbb
mov
mov
ja
outsb
dec
add
and
das
fsts
imul
lret
idivb
cld
push
stos
shlb
out
outsl
clc
dec
aaa
mov
stos
push
lock
inc
push
sbb
mov
cmpsb
mov
add
mov
push
scas
repnz
mov
sbb
rcrl
sub
loopne
pop
lcall
mov
cwtl
xchg
not
mov
adc
mov
or
pusha
ret
cmp
test
pusha
and
adcb
fldcw
inc
pushf
mov
pusha
add
ret
dec
out
sub
sarl
xchg
leave
lea
rol
jbe
ljmp
and
mov
repnz
nop
jnp
push
xchg
mov
pop
js
fisubs
shlb
andb
shl
and
rolb
sub
lods
pusha
add
cs
and
aad
xchg
cmova
lds
into
xchg
mov
loopne
pop
lcall
hlt
xor
stos
jg
or
and
xor
inc
inc
inc
and
stc
jno
in
je
icebp
mov
jp
and
mov
shrl
pusha
rclb
jbe
add
jle
les
scas
repz
and
push
jns
shlb
stos
pusha
mov
add
mov
icebp
pop
push
sbb
movsl
cltd
sahf
jne
inc
push
mulb
sti
adc
les
js
aam
cmp
add
cmp
test
inc
inc
xor
add
xchg
dec
xor
ss
and
xor
lcall
fwait
in
rol
sub
dec
inc
aaa
xchg
and
pusha
inc
aam
stos
mov
ret
pusha
dec
in
mov
mov
addb
sbb
push
jo
into
sub
loopne
and
pop
pop
cmp
pop
lods
add
mov
add
push
div
out
aas
das
bound
and
inc
lret
push
movsl
mov
dec
outsb
or
lock
add
sub
ret
lret
inc
scas
loopne
ja
lds
adc
jp
lea
add
sub
and
testb
mov
loopne
enter
shr
data16
jo
adc
sbb
mov
in
dec
je
add
out
push
mov
pop
insl
test
mov
mov
add
mov
jnp
jge
or
mov
mov
lcall
idiv
inc
stos
add
rcr
sbb
xchg
int3
push
xor
loopne
adc
cmpsb
pusha
pusha
push
shl
and
loope
js
ret
rol
stc
loop
sub
add
push
cltd
add
mov
in
mov
and
mov
shlb
movsl
xchg
mov
adc
arpl
mov
lcall
mov
inc
lock
and
mov
mov
inc
mov
into
jl
or
out
ret
dec
mov
gs
cli
push
dec
cmc
je
test
cmp
call
adc
out
lahf
lcall
and
inc
out
or
pusha
sahf
push
pop
fs
mov
cld
divb
hlt
push
sahf
and
rorb
sbb
das
push
dec
popa
or
aaa
lods
and
shll
loopne
jo
inc
adc
xchg
sti
lret
ljmp
xor
xchg
cmp
pusha
loopne
ljmp
ret
stc
aad
cmc
je
ja
and
pop
sti
and
subb
add
push
lea
mov
jo
outsb
push
je
fsubs
mov
mov
and
push
inc
das
rcrl
or
and
psllw
repz
mov
out
stos
rolb
dec
sub
pusha
jl
rol
rol
cmp
inc
inc
stos
addb
xor
bound
data16
mov
loopne
aas
jb
xchg
cmpl
nop
cli
outsl
mov
stos
pusha
loopne
xchg
xchg
mov
aad
stos
mov
sbbl
sub
rol
arpl
imul
nop
addb
cmp
sbb
push
outsb
mov
popa
dec
ljmp
mov
loopne
repnz
ss
ret
je
or
aas
xlat
lods
pusha
mov
sbb
lahf
mov
sti
repnz
and
sub
or
inc
or
xchg
mov
ja
int3
outsl
jno
les
loopne
lock
clc
xchg
cmp
push
loopne
das
adc
jge
lret
andb
in
stos
andb
mov
ret
repnz
sarl
sbb
hlt
inc
cs
xorb
mov
popf
cmp
orl
xchg
dec
mov
xorl
rcrl
mov
dec
xor
cmc
jg
cmp
add
inc
stc
popf
push
jge
hlt
pushf
aas
lods
push
ss
loope
pop
out
lea
inc
rcl
mov
test
fnstsw
xor
pop
mov
movsb
pusha
shlb
fdivrl
mov
icebp
ljmp
loopne
add
addb
ljmp
push
mov
int
and
lcall
pusha
inc
test
add
addb
pusha
call
shrb
loopne
leave
rorl
add
dec
mov
add
aaa
gs
xchg
in
lds
lock
mov
mov
andb
add
je
mov
xor
std
test
lret
js
mov
or
jno
push
js
fcmovb
insl
pop
mov
je
xchg
push
rolb
push
mov
or
loop
inc
fwait
mov
iret
scas
mov
xor
sbbl
jo
in
shlb
jo
addb
ljmp
jo
enter
pop
and
lds
loopne
adc
repnz
push
pusha
inc
and
loopne
and
lret
in
inc
or
and
xchg
dec
xor
repnz
fstpt
mov
jne
push
inc
out
out
inc
out
push
sbb
out
enter
and
mov
or
fwait
cld
std
xchg
fsubr
jo
jnp
mov
inc
mov
mov
ljmp
add
js
add
mov
mov
int
test
loopne
push
sbb
fidivl
inc
ja
mov
popf
mov
xchg
pop
or
loopne
sub
add
in
xlat
jne
aaa
nop
std
jno
lahf
outsb
push
and
leave
push
mov
pop
ljmp
loope
lock
sbb
cmp
mov
and
subl
inc
dec
xchg
popf
push
dec
dec
pop
mov
outsb
push
std
add
fstps
mov
mov
mov
mov
lcall
and
mov
add
les
outsl
aas
and
addb
addb
xchg
mov
loopne
pusha
pusha
mov
sbb
xor
sahf
sti
mov
or
shrb
xchg
fistpl
push
jle
fcomp
int3
jb
insb
fisubl
pop
out
sub
rol
lret
mov
pop
inc
bound
pop
movsb
inc
inc
repnz
lods
and
sbb
pop
cmp
push
loopne
sbb
sbb
dec
cmp
andb
rcr
mov
mov
in
mov
or
add
outsb
or
and
andb
dec
pop
push
xchg
iret
xor
repnz
cmpsl
mov
in
pushf
push
cs
mov
daa
iret
rorb
sahf
lahf
push
out
and
rolb
mov
in
sti
inc
xor
jmp
add
ljmp
adc
pop
lret
insb
cltd
cmp
clc
dec
shll
jo
xchg
cltd
pop
in
inc
rcl
add
pop
inc
mov
mov
fstpt
subl
xor
lahf
push
rolb
xor
and
add
lea
orb
loopne
mov
jne
fs
cltd
jns
scas
mov
fisubrs
shlb
loopne
push
dec
mov
daa
add
mov
pusha
sub
add
lcall
push
repz
pop
lds
movsl
int
dec
out
shrl
inc
adc
repz
aas
rcll
ret
out
mov
add
mov
loopne
and
rcrb
sbb
or
mov
cmc
adc
and
inc
sbb
sub
pusha
mov
dec
popa
push
roll
rorl
fwait
xchg
xor
fsubrp
pop
sub
pusha
jo
movsl
sbb
in
xor
mov
clc
imulb
push
jmp
mov
in
mov
pusha
test
mov
repnz
mov
inc
mov
add
cmp
mov
add
mov
insb
fnstsw
gs
rolb
xor
or
pusha
pusha
cmpsb
addb
adc
in
out
scas
and
push
sbb
shrl
in
lock
and
dec
cmp
mov
ret
je
out
xchg
and
loopne
and
add
mov
mov
and
sbb
aad
loopne
lods
shlb
pusha
mov
pusha
rcrb
jae
mov
jl
push
mov
adc
jmp
inc
jmp
pop
outsb
xlat
iret
mov
inc
mov
icebp
mov
pop
test
mov
add
pop
dec
mov
mov
incw
mov
xchg
mov
inc
and
lcall
jmp
sub
and
cmp
in
sub
sar
jg
addr16
ror
shr
mov
inc
loopne
add
rolb
loopne
scas
addr16
aad
mov
push
or
mov
arpl
xor
or
out
addb
loope
cmp
mov
pop
hlt
cmp
sbb
movsb
addb
hlt
imul
pusha
and
pop
or
xorb
aas
xor
imul
and
cmp
loopne
and
pusha
fistl
insb
pop
mov
inc
mov
movsb
pusha
subb
loopne
jge
push
je
cmp
aad
cli
andb
and
mov
clc
jge
push
jb
outsb
fiaddl
cmp
lret
lcall
inc
and
and
sub
and
loopne
std
inc
mov
decb
sldt
rclb
xor
jo
cltd
adc
cmp
rclb
jg
test
aas
outsb
xchg
test
add
pop
push
jae
add
ss
or
andl
inc
push
and
add
pop
xor
and
lods
add
jnp
jp
adc
inc
repz
and
sub
loop
xchg
sahf
lahf
push
pusha
dec
inc
ret
call
test
inc
in
insl
aas
out
or
pusha
enter
lods
sbb
inc
stos
add
jo
mov
jns
mov
jo
pop
mov
or
lret
xchg
scas
add
decb
into
xchg
test
pusha
mov
inc
loopne
and
mov
dec
insb
push
mov
loopne
push
mov
inc
loopne
and
sbb
sub
aas
mov
sub
mov
mov
jne
xchg
mov
dec
hlt
xlat
mov
push
jp
fcoms
inc
shlb
enter
cmp
pop
dec
push
dec
cmp
gs
sbb
mov
push
in
das
lret
adc
jmp
js
dec
aam
add
loopne
pusha
sti
pop
and
pusha
enter
and
xor
xor
orl
pop
ljmp
jmp
sarl
adc
dec
cmc
dec
mov
xorb
lods
inc
mov
inc
mov
mov
dec
jno
and
fistpll
repnz
jae
mov
mov
xchg
stos
pusha
add
pusha
loopne
sub
mov
cmp
and
push
mov
or
and
andb
mov
xchg
adc
xor
inc
pusha
jp
jp
into
sar
jb
fildll
subl
inc
ss
jnp
xor
rclb
or
inc
cld
mov
stos
inc
mov
js
ret
push
mov
popf
dec
test
mov
add
jne
cmp
xor
inc
push
add
js
mov
shlb
mov
mov
mov
rclb
xor
repz
xor
xchg
pop
cltd
inc
hlt
or
rorb
mov
fwait
test
pop
jle
push
testb
mov
loopne
xchg
add
addb
stos
add
ds
jge
mov
pop
insb
or
add
mov
cmp
andb
in
xchg
data16
mov
sub
gs
push
mov
mov
popf
sarb
cmp
add
sbb
sarl
jbe
das
fisttpll
into
test
push
and
mov
addb
adc
inc
mov
std
add
addb
pusha
mov
addb
push
movsb
inc
loopne
lea
push
jle
mov
mov
and
fwait
js
xchg
adc
pushf
and
adcb
sub
ss
aaa
mov
mov
xchg
inc
lods
mov
pop
pop
xor
and
xchg
mov
call
mov
mov
shlb
and
sarl
out
out
outsl
out
push
pusha
add
addr16
jecxz
lcall
loopne
ljmp
mov
aam
inc
mov
xchg
adc
and
and
adc
add
loopne
rclb
xor
stos
add
cmp
test
adc
in
mov
es
add
loop
popf
mov
add
stos
sub
pusha
inc
jae
loopne
sbb
pop
mov
mov
add
mov
cltd
lods
pusha
add
sbb
fsubl
mov
int3
cltd
pusha
mov
jnp
xchg
add
and
je
inc
sbb
shr
ja
xchg
mov
pop
sbb
ljmp
invd
inc
loopne
ss
adc
dec
xor
push
push
rol
dec
repz
pop
test
rolb
test
push
scas
andb
pop
bound
movntq
out
xor
add
push
es
dec
std
and
rclb
je
xchg
out
sahf
mov
sbbb
mov
cltd
mov
inc
aam
stos
iret
add
inc
jo
push
and
es
out
jp
pop
dec
push
loope
push
dec
xor
ret
jnp
jnp
insl
and
fdivl
sbb
and
inc
andl
mov
mov
jecxz
insb
aas
repnz
xchg
ja
jb
lods
mov
push
outsb
shlb
sbb
push
aad
fimull
rolb
pop
aam
mov
mov
lods
add
and
push
inc
pop
fcomip
dec
push
mov
shrb
lahf
sbb
mov
inc
inc
lcall
mov
and
in
aaa
ds
lret
pop
dec
inc
vpsubsw
mov
inc
mov
pop
xchg
insl
fs
xchg
mov
push
inc
add
sbb
rolb
inc
inc
insl
mov
and
mov
notl
xor
fdiv
cwtl
icebp
mov
clc
push
pop
cmpsl
or
mov
xor
in
pop
adc
add
or
inc
jecxz
pop
lret
xchg
fiaddl
loopne
dec
jecxz
add
add
xchg
fmulp
test
loopne
shrl
xor
mov
and
lods
lods
lret
movsl
aas
pop
rcrl
xor
jle
loopne
mov
xchg
in
adc
fs
inc
inc
daa
cmp
aam
pop
pop
ficoml
dec
movsb
rolb
add
loope
fisubrs
pusha
mov
insb
push
dec
cwtl
int3
lods
push
cmp
jl
dec
mov
pusha
pop
cmp
lock
rolb
pop
xor
fcomps
mov
jecxz
add
push
dec
xchg
jmp
pusha
mov
xchg
mov
fwait
lds
add
mov
into
xor
pusha
pusha
movsb
pusha
inc
cmp
and
mov
aad
mov
lret
arpl
or
arpl
imul
insl
cld
pop
adc
sahf
or
push
jg
xchg
push
mov
inc
inc
in
push
cwtl
push
shll
sti
adc
xchg
fisttpl
rolb
aas
stos
ljmp
cmpsb
rolb
pusha
mov
mov
dec
int
rolb
into
cmpsb
and
addb
int3
stos
pusha
mov
mov
aas
push
andb
cmp
or
xchg
mov
and
loopne
sub
inc
push
pusha
sbb
call
aaa
filds
imul
inc
dec
sub
push
mov
xchg
lcall
or
sbbb
add
mov
or
fneni(8087
push
ds
pusha
jo
fcoml
andb
leave
adc
cmp
addb
inc
cmpsb
rolb
sbb
cmp
and
adc
cmpsl
xchg
adc
lretw
push
and
mov
shlb
inc
andb
and
lods
shl
inc
dec
into
cmp
ret
dec
test
mov
out
scas
loopne
ljmp
mov
adc
insl
cmp
sbbb
loopne
out
pushf
in
popf
pop
bound
jg
mov
inc
pusha
add
ret
adc
sub
out
clc
aaa
dec
fsubrs
jge
gs
adc
push
push
sbb
in
andb
scas
int3
in
addb
sahf
es
imul
data16
ds
pop
flds
and
push
and
addb
gs
out
mov
xchg
and
add
push
shlb
jmp
inc
aaa
and
xchg
pop
xor
cmpsl
mov
adc
lret
pop
fs
mov
loopne
inc
pop
push
xchg
fldenv
loopne
cltd
cmpsb
loopne
out
int3
dec
out
pusha
and
xchg
mov
loopne
in
dec
test
ds
xchg
mov
xchg
push
fnstsw
in
hlt
out
icebp
lret
pusha
or
and
repnz
loopne
xchg
in
out
mov
pop
in
divb
pusha
int3
xchg
rcrb
jl
movd
fisubs
inc
inc
mov
movsb
add
test
addb
andb
xchg
xchg
pop
sahf
fsubrs
mov
cmpsl
jns
stc
fwait
cmp
rolb
mov
loopne
push
pop
inc
pop
sbb
vcvttpd2dqx
or
cmp
es
mov
adc
aas
xor
add
loopne
nop
jns
cltd
xchg
addb
add
add
jecxz
shlb
pusha
cld
push
aas
divl
push
shlb
jge
and
push
iret
or
enter
and
arpl
jmp
test
loopne
or
rolb
rolb
loopne
sar
cmpsb
shlb
jle
pop
sbb
add
inc
bound
mov
cmp
enter
jle
pop
in
addb
jl
dec
sbb
loop
add
stos
dec
imul
xor
ficomps
dec
stos
notl
jo
sub
or
loopne
mov
rolb
les
jecxz
les
sub
mov
and
popa
xor
pusha
pusha
fidivs
mov
out
aas
sub
shlb
pusha
filds
shlb
inc
imul
push
loopne
pusha
push
das
or
shlb
add
es
mov
pop
and
andb
dec
jecxz
and
inc
into
xchg
xchg
xchg
pop
mov
jo
outsl
push
mov
test
sub
pop
clc
les
pop
lcall
cltd
add
fs
shl
mov
and
fnstenv
xchg
stos
inc
pusha
or
xchg
dec
out
pusha
and
mov
aas
add
mov
and
and
cmp
ficomps
rcrl
rolb
mov
test
pop
xor
mov
cmp
inc
and
cmpsl
ljmp
outsb
and
and
mov
add
rcl
in
mov
mov
mov
add
jp
mov
adc
push
loopne
insl
lods
and
rolb
xchg
addb
and
xor
cltd
out
sub
ss
out
xchg
inc
loop
push
push
mov
mov
andb
test
popf
pop
push
outsb
mov
and
mov
inc
and
addr16
or
lock
aad
add
cld
push
xor
pop
call
rolb
add
inc
sub
and
sub
mov
stos
cmp
xlat
test
add
inc
or
add
pushf
aas
adc
fdivrp
cmc
mov
push
repz
testb
pusha
ret
sub
imul
scas
addb
mov
andb
dec
inc
sub
pop
xor
adc
push
xchg
and
push
dec
adc
mov
nop
mov
loopne
jns
mov
mov
addr16
pusha
mov
add
add
cmpsb
shl
xor
addb
dec
dec
cwtl
push
push
mov
or
inc
insl
jp
pop
insl
int
mov
test
sub
xchg
clc
js
cmp
and
mov
inc
pusha
or
and
or
inc
sahf
push
and
or
add
pusha
rolb
dec
daa
cmpsb
and
cmpsb
rol
test
loopne
sub
insb
std
xchg
add
push
insl
sub
sub
add
pusha
pop
and
and
adc
or
add
and
imul
mov
add
mov
pusha
fistl
ret
sar
dec
xchg
pusha
aad
hlt
repnz
pop
les
fsubs
add
xchg
cli
in
and
js
imul
fdivr
js
and
rolb
dec
mov
mov
pusha
add
pusha
pusha
lahf
andb
rolb
pusha
pusha
pop
jns
nop
adc
not
in
cmp
inc
repz
mov
and
jge
in
xor
ds
adc
add
scas
inc
rorb
mov
bound
xor
shlb
rcrb
push
add
fnstsw
or
pusha
sbb
jge
pop
sbb
ret
and
and
int
stc
js
pop
xlat
in
adc
cmp
mov
mov
pop
es
rorb
orb
pop
fadds
add
scas
inc
mov
sub
mov
and
jecxz
cld
add
xor
imul
in
xor
insb
cld
outsl
pop
test
cmp
push
fnsave
xchg
cmp
lcall
mov
inc
mov
fdivs
pop
pop
or
add
shlb
xchg
decl
ret
jno
divb
inc
xor
movsb
inc
inc
call
repz
cmpsl
cmp
int
sti
les
adc
and
loopne
cmpsl
inc
aad
fcmovb
rcll
xchg
jb
rolb
jp
enter
ret
shl
rol
add
add
and
jbe
lods
shl
inc
pusha
dec
sbb
mov
mov
inc
add
lret
xchg
popf
mov
inc
add
adc
inc
mov
cli
push
fadds
inc
pusha
shl
stos
inc
inc
jbe
nop
in
fstps
inc
jle
mov
mov
jge
and
lods
cmpsl
adc
add
sub
stc
cmp
mov
mov
adc
mov
xor
dec
hlt
mov
test
shlb
inc
test
add
xchg
push
lret
mov
mov
and
stos
inc
orb
inc
pusha
cltd
js
std
and
mov
pop
sti
push
add
mov
nop
stos
loopne
mov
mov
pop
push
int
stc
inc
xor
shr
enter
hlt
into
xlat
adc
inc
insl
push
dec
repz
cmp
pop
lcall
shrb
add
xor
test
adc
int3
cmp
pop
push
push
and
push
stos
fsts
xor
loopne
adc
jne
sub
rolb
mov
aam
cmp
jns
cmp
sub
and
test
or
shrb
xlat
pop
andb
cmp
xor
inc
adc
xorl
les
pop
mov
insb
mov
jne
mov
and
mov
scas
loopne
dec
mov
xor
xor
inc
inc
mov
pop
es
xor
and
addb
xor
orl
inc
shl
adc
lea
mov
dec
insb
cmp
inc
loope
jg
and
add
xchg
push
shlb
jno
jmp
xor
clc
fmuls
pusha
inc
pop
adc
outsl
jbe
fs
xor
mov
or
adc
inc
lea
out
adc
dec
dec
jmp
lret
mov
inc
mov
inc
fcoms
outsl
mov
ljmp
loopne
pop
in
xchg
scas
xor
add
add
pusha
cmp
das
lods
add
in
jno
sti
repnz
jle
mov
and
scas
add
pushf
or
mov
sbbb
aad
filds
pop
mov
outsb
mov
movsb
add
out
add
push
loop
insb
jae
sbb
inc
sbb
addb
and
hlt
inc
call
scas
ljmp
sbb
mov
addb
lret
shlb
test
rcll
loope
lea
out
jmp
inc
jle
push
sahf
loope
int3
xchg
mov
add
pop
add
lret
inc
leave
dec
push
add
lcall
xor
loope
inc
inc
pop
inc
and
adc
sbb
rol
pop
mov
push
fidivrl
out
or
pusha
roll
lea
push
adc
jo
add
jg
sahf
in
loopne
or
inc
cmpl
push
xor
pop
std
sbb
adc
stos
and
cmp
fmuls
aad
mov
stc
xchg
loop
sub
mov
inc
xchg
sub
add
pop
cmpsl
push
sahf
and
mov
add
add
rclb
mov
inc
inc
icebp
rclb
dec
xor
mov
mov
loopne
sahf
pop
mov
lahf
mov
pusha
idivb
cld
lret
in
pop
push
sub
inc
add
mov
stos
mov
add
push
pop
test
loopne
fsub
out
xor
lods
inc
shl
js
aam
aam
add
sbb
mov
pusha
xchg
in
dec
stos
aas
loop
out
adc
das
dec
and
sbb
cmp
xchg
xlat
test
cmp
xor
dec
jbe
add
push
popa
daa
pop
sbb
imul
loopne
push
mov
sti
movsl
mov
sti
sti
inc
lods
jns
push
sbb
push
add
movsl
mov
add
jle
mov
jno
pusha
inc
push
loopne
jle
and
pusha
jbe
adc
sub
popaw
adc
mov
jle
cltd
inc
jge
jecxz
jg
inc
test
out
sbb
lods
idiv
push
sub
add
adc
ljmp
fwait
mov
or
out
mov
test
loopne
lea
loopne
cld
pop
inc
movsb
add
pusha
and
mov
fistpl
cmp
mov
push
repnz
movsb
and
int
out
mov
push
lcall
mov
test
add
lcall
xor
push
mov
xchg
mov
pusha
roll
out
loopne
lea
xor
fwait
scas
and
inc
fucompp
daa
mov
dec
js
xchg
out
jl
iret
adc
aam
js
aas
mov
mov
pop
jno
pop
or
add
cmp
out
test
andb
ret
mov
push
xchg
add
sahf
in
pop
cmp
cmpsl
or
stc
xor
aaa
adc
push
cmpsl
lock
mov
add
mov
lahf
sahf
gs
mov
call
xchg
mov
inc
andb
xlat
or
push
jl
and
mov
mov
xchg
shl
push
bound
add
pop
mov
sub
inc
ficoml
push
pop
sbb
pop
cmp
add
pusha
cli
dec
aam
fistpl
fisubrl
add
incl
ja
ret
mov
rolb
rcrb
cmp
lahf
je
dec
scas
inc
inc
decl
test
loopne
cmp
ffree
popa
jne
xor
inc
jmp
and
cmp
mov
gs
pop
pop
fcom
jge
pop
testb
cwtl
int
adc
inc
shlb
sub
add
or
shlb
dec
in
xor
mov
or
mov
dec
mov
mov
xchg
cmp
psllq
lock
je
xor
and
pop
mov
rcrb
sarl
and
and
loopne
enter
pmuludq
pusha
mov
and
inc
inc
iret
fisttpll
cmp
test
loopne
les
rorl
xchg
inc
xchg
xor
lahf
xchg
pusha
mov
pop
lret
xor
inc
daa
outsl
pop
pop
mov
loopne
add
add
and
mov
push
add
sbbl
loop
jle
dec
cli
scas
loopne
jns
dec
jns
inc
mov
add
rorb
cli
inc
adc
sbb
ret
out
out
xchg
movsb
mov
and
ja
stos
sarl
cltd
sbb
aam
icebp
sub
sarb
ret
dec
cld
out
mov
jge
jbe
add
mov
xor
mov
dec
jecxz
and
rolb
cmp
push
push
xor
jbe
mov
jle
dec
add
add
fsubrl
loopne
dec
sub
mov
pop
cmp
xchg
add
pusha
xchg
pusha
push
lds
adcl
push
mov
xchg
std
mov
jmp
loopne
pop
imulb
jmp
add
mov
ds
jg
out
xor
cmp
dec
mov
mov
idivl
std
stos
xor
xlat
js
sub
push
dec
sbb
sahf
pusha
and
and
in
adc
xor
dec
repnz
pusha
mov
xchg
stc
fcomps
ljmp
and
add
aas
clc
ror
stos
xor
loopne
ss
adc
sti
cmp
pusha
rcl
sar
inc
lods
loopne
jmp
push
and
jl
and
cmp
sbb
dec
gs
test
mov
lahf
add
test
add
mov
add
sub
add
add
addr16
xor
divps
or
adc
mov
dec
and
and
mov
jbe
jo
insb
stos
pusha
and
push
aad
and
push
push
test
cmp
sub
add
mov
jne
loopne
xor
rorb
loopne
test
jge
inc
pusha
ja
or
mov
xchg
cmp
cmp
cmp
or
fists
sbb
std
rcrl
sbb
mov
inc
mov
sbb
mov
fcoml
push
out
sahf
and
gs
jp
fisttpl
arpl
add
es
shlb
or
mov
shlb
mov
inc
shlb
mov
movsb
loopne
xor
sub
movsb
add
lods
loopne
pop
mov
mov
pop
je
and
inc
sbb
andb
popa
inc
push
rorl
pusha
mov
mov
pusha
pusha
and
mov
add
sub
bnd
push
test
je
aam
xchg
mov
sti
insb
xchg
fsubl
andb
sub
dec
mov
mov
stos
aad
mov
mov
pusha
inc
scas
shl
js
pusha
mov
and
aad
insl
js
push
lret
jp
cmp
xor
inc
inc
lods
or
pusha
adcb
and
imul
and
sbb
mov
pop
sub
popf
testl
pusha
sub
inc
push
das
fsubrs
mov
insl
mov
fisttps
push
call
loopne,pn
sbb
sub
mov
mov
mov
jmp
xchg
into
jmp
inc
dec
xor
addb
negl
add
out
fwait
stos
pop
icebp
cwtl
add
xor
jmp
andb
pusha
add
mov
sbb
je
pop
ss
mov
sub
je
les
out
inc
xchg
pop
je
mov
fisubl
lahf
mov
imul
mov
mov
and
lock
pusha
pusha
es
rolb
sub
or
rcl
push
addr16
or
and
ficoms
lea
cmp
push
call
cmp
aas
sbb
bound
mov
out
mov
push
sub
sbb
in
or
std
mov
rolb
add
out
pusha
rclb
cmp
xchg
push
adc
rcrl
gs
das
ss
js
rorb
lea
jns
rcr
pop
and
wbinvd
imul
stc
and
cmp
add
pop
mov
jb
movsl
fldcw
mov
pop
push
xchg
dec
movsb
and
pop
xor
jecxz
shl
fiaddl
jnp
loopne
arpl
insl
pushf
arpl
ljmp
push
shlb
mov
aaa
mov
push
jle
fs
inc
pop
pop
lahf
mov
xchg
in
insb
scas
dec
sub
add
out
xor
aad
push
pushf
dec
lods
call
push
push
shlb
enter
push
pop
pushf
xor
xchg
dec
mov
mov
sub
bound
js
scas
inc
addb
popl
test
orb
pop
jp
cmp
cmpsl
and
ret
jno
and
mov
or
mov
jae
ret
lds
pusha
and
shlb
pusha
add
pop
xchg
xor
test
rol
or
jl
inc
shll
mov
repz
out
xor
pop
out
movsl
aam
cmpl
pusha
loopne
ds
inc
mov
stos
inc
subb
mov
fidivs
orl
push
xor
dec
push
loopne
ret
loop
and
mov
loopne
xchg
jge
clc
shrb
loopne
adc
jo
addb
mov
out
adc
test
mov
mov
or
add
add
push
out
mov
cmp
mov
mov
nop
sbb
loopne
xor
ret
sub
call
inc
loopne
loopne
dec
loope
sub
imul
and
add
cs
addb
and
and
ror
or
mov
fimuls
pusha
xor
loopne
cmp
add
and
and
inc
ja
divl
cltd
push
cmc
mov
shlb
and
pminsw
jmp
sbb
mov
shrb
push
std
aas
mov
xorl
pusha
ds
and
inc
ret
outsl
popf
push
and
dec
sbb
sbb
mov
or
dec
loop
mov
sti
push
xorl
sub
xor
add
add
gs
addr16
loop
mov
movsl
stos
add
cmp
xchg
repz
jge
in
out
aaa
mov
add
lret
ret
mov
adc
cmp
adc
and
or
and
add
repz
sbb
dec
mov
xchg
dec
mov
dec
mov
add
inc
mov
mov
aad
mov
ficoml
dec
sub
inc
sbbb
fcom
aam
clc
xor
das
sub
rcrb
ror
dec
jne
iret
imulb
loopne
and
cmpsl
mov
pusha
push
jns
inc
and
cmc
mov
insl
in
call
loopne
push
mov
xchg
dec
dec
push
bound
test
pop
cli
enter
push
aam
pop
rorl
jle
add
lahf
cmp
or
adc
push
add
sbb
fsubr
ljmp
addr16
and
stc
fiaddl
add
movsb
add
mov
sbb
and
adc
shl
cmp
mov
lahf
test
mov
shlb
repz
push
and
pusha
addb
shr
dec
lret
cmp
or
pusha
and
negl
shl
dec
int3
mov
mov
pop
lea
sub
loopne
imul
mov
add
pop
dec
pop
and
cmp
adc
cmc
fcom
inc
jmp
and
andb
xchg
add
addb
push
hlt
scas
and
mov
sbb
jge
cwtl
rcrb
in
mov
daa
cmpsl
filds
mov
pop
or
pusha
inc
pop
or
int3
hlt
mov
inc
xchg
fimull
lods
mov
rorl
and
pushf
fwait
xchg
push
push
sbb
jge
loopne
pop
andb
add
mov
jge
aas
int3
cmpsl
xchg
inc
pop
mov
pusha
loopne
add
push
loopne
daa
pop
xchg
lret
popf
rolb
ret
into
pop
fcomp
pop
inc
mov
jns
push
pop
and
mov
add
stos
loopne
push
loopne
sub
aaa
adc
addr16
or
cmp
andb
inc
out
shlb
and
call
pop
mov
es
add
rcrl
sbb
pop
mov
and
and
and
and
loopne
push
mov
sub
hlt
mov
sub
rclb
ror
mov
mov
int
and
push
out
mov
sbb
and
scas
addb
and
sbb
add
jge
inc
add
add
cli
lret
pop
fstpl
dec
testb
mov
andb
and
xor
je
and
test
lret
loopne
adc
hlt
xchg
sbb
and
add
and
add
and
loopne
inc
cmpsb
loopne
adc
lods
loopne
xchg
mov
inc
inc
xchg
fadds
gs
ret
add
mov
lcall
xchg
sbbb
shr
daa
idivl
mov
hlt
rolb
xchg
mov
dec
xchg
fisubl
xor
dec
cmp
pusha
loopne
sar
mov
add
add
loopne
rcr
repz
in
insb
fdecstp
je
mov
mov
ror
dec
push
pop
sub
ljmp
imul
inc
cmp
lods
andb
xchg
out
cmc
push
lea
lahf
arpl
sbb
pop
adc
jo
inc
int
mov
shlb
mov
lret
pop
outsl
dec
pusha
cwtl
in
pop
icebp
imul
shlb
shlb
loopne
jl
js
cmp
loopne
and
mov
xchg
inc
inc
es
shl
popf
call
xabort
sub
dec
mov
addb
push
jp
mov
adc
sarb
jno
xor
stos
scas
mov
cmpb
shll
push
pushl
push
sbb
lods
add
adc
cmc
mov
push
popf
iret
fs
popa
lds
push
hlt
mov
rolb
adc
subl
les
sbb
lods
inc
inc
fldt
loopne
clc
repz
mov
popa
enter
mov
sarb
lods
ljmp
and
or
in
lret
gs
bound
and
and
xchg
mov
and
test
inc
xor
test
and
addb
rol
push
cmp
mov
rdpmc
outsb
xchg
in
mov
lods
in
mov
loopne
mov
add
shrb
rcl
sahf
shrb
inc
inc
clc
xchg
out
jl
cmp
pusha
and
pop
jo
out
mov
js
icebp
adc
adc
bound
cltd
jne
push
pop
testl
pop
subl
jne
jne
aam
push
cmp
pusha
lds
xlat
addr16
push
rol
stos
out
mov
pop
sbb
clc
xor
andb
lods
loopne
std
and
pusha
xchg
dec
orl
out
pcmpeqd
stc
mov
pop
loope
outsl
loop
jb
mov
enter
loope
mov
inc
mov
es
and
lea
fs
sti
cmp
fdiv
popa
push
pusha
loopne
or
lods
loopne
mov
je
pushf
xchg
ja
out
int3
fmuls
jne
xor
andb
inc
in
popa
cmpsl
dec
push
lret
add
add
out
xchg
es
notb
inc
sub
shlb
jp
mov
jge
push
loope
push
add
sarb
and
and
jle
and
pop
dec
into
jl
gs
in
test
sbbb
mov
add
ljmp
test
mov
ja
out
ret
pop
cmpsl
stos
add
jge
sub
and
ja
enter
push
pushl
pop
adc
rcrl
sub
xchg
in
add
pusha
lods
in
fcomps
mov
cmp
jge
inc
jno
pop
jle
mov
imul
rcrb
sbb
jp
cwtl
insb
in
mov
das
xor
lods
pop
addb
inc
mov
sbb
or
shl
add
push
cmp
mov
call
sti
mov
mov
inc
jb
rolb
jge
pushf
outsl
loopne
loopne
cli
mul
out
inc
loopne
add
call
cs
pusha
sbb
lds
mov
loopne
iret
dec
in
or
aad
sbb
push
pushf
mov
pusha
or
mov
hlt
sub
dec
in
pop
inc
out
sub
loopne
cmp
das
je
out
pushf
lret
xlat
jbe
test
mov
pop
imul
insb
ds
pop
ss
sub
mov
add
sbb
inc
sub
xchg
testb
pusha
pop
adc
fiadds
and
in
in
mov
andb
sahf
mov
inc
ja
addb
cltd
jb
cmpsl
scas
scas
and
andb
ficompl
add
sti
mov
mov
ds
fwait
adc
and
dec
dec
scas
pusha
loopne
xor
insl
push
loopne
pusha
push
pop
test
addb
sti
xchg
aad
cwtl
adc
sar
movsb
inc
sbb
scas
and
xor
mov
into
cltd
repnz
daa
out
movb
or
inc
out
addr16
sub
xor
xchg
pusha
add
pop
outsb
and
rorl
push
inc
and
into
sar
add
mov
jnp
leave
aad
mov
pusha
pusha
pop
mov
and
pop
cmpsb
loopne
and
orb
outsb
push
and
ret
add
gs
fwait
stos
shlb
shlb
mov
mov
rolb
rcrb
adc
pop
mov
inc
and
cmp
xchg
or
cmpsb
add
mov
cmp
jg
cmp
or
add
enter
jge
cmp
jp
mov
xor
lret
and
and
mov
sub
call
adc
add
fwait
xchg
xor
enter
mov
hlt
pop
jg
pop
mov
push
and
mov
jo
mov
xchg
mov
and
or
mov
mov
rclb
add
aaa
call
mov
shll
jae
ja
push
adc
ljmp
dec
cli
lods
mov
adc
jge
and
mov
and
stos
loopne
iret
inc
xchg
loope
cli
ret
scas
jmp
das
jbe
outsb
mov
ljmp
in
emms
xor
je
mov
mov
hlt
jl
sbb
dec
mov
out
shlb
xor
and
sub
rclb
push
and
insl
divb
add
mov
xor
add
add
inc
add
test
jb
xchg
andb
int
xor
or
fcmovnbe
cmpsb
pusha
and
inc
rorb
cmp
cmc
cmp
inc
pop
pop
in
sbb
xor
and
mov
jb
mov
cmp
ret
ja
fldt
sahf
push
add
mov
inc
mov
into
mov
sahf
mov
in
pop
mov
aas
xor
pushf
dec
mov
sbbb
out
xchg
sarb
ljmp
inc
pusha
lods
sbb
inc
mov
hlt
mov
xchg
pusha
daa
mov
ja
lds
sbb
mov
loopne
mov
loop
jle
mov
mov
jo
adc
repz
fwait
pop
inc
lea
push
movsl
call
cmp
andb
aad
sub
loopne
add
push
out
push
and
mov
add
mov
cmpsl
repz
mov
jo
xchg
lcall
shl
repnz
daa
mov
lods
sbb
adc
add
loope
pop
scas
sub
rcr
scas
pop
leave
loop
mov
int
jecxz
dec
ret
test
add
data16
loopne
in
mov
rcr
cmpsb
shl
mov
xor
mov
push
gs
xchg
xchg
shll
sahf
sub
jmp
pop
xchg
fimuls
loopne
sub
mov
inc
andb
jbe
andb
jo
jnp
fwait
mov
mov
mov
arpl
cmp
mov
std
imul
jbe
push
mov
pusha
out
rol
jl
adc
shlb
pusha
push
push
repz
jb
jbe
or
loopne
lret
cmp
push
push
test
rolb
jecxz
movsb
and
add
and
and
repnz
loope
xchg
mov
and
rclb
sub
and
mov
scas
dec
mov
es
rcrb
mov
mov
imul
xor
loopne
pop
xchg
jnp
nop
and
mov
inc
jp
mov
and
mov
mov
pusha
insb
mov
jns
enter
pop
mov
cmp
xchg
dec
mov
pusha
mov
repnz
divl
lret
scas
loopne
mov
mov
add
xor
xchg
icebp
cmp
xlat
ljmp
cmpsb
add
iret
fld
jp
lods
jnp
lods
inc
mov
add
and
in
xor
cmp
loopne
and
adc
pusha
xor
in
push
fisubrl
inc
push
inc
sar
add
mov
ljmp
cli
mov
xlat
loope
or
mov
or
lret
push
cmc
out
jnp
and
pusha
mov
pusha
in
pop
mov
pusha
and
outsl
mov
dec
inc
test
adc
sarb
pusha
pusha
mov
enter
push
movsb
mov
jmp
and
xchg
jecxz
gs
dec
pop
or
push
cli
inc
mov
orb
mov
xchg
cli
int
mov
inc
inc
mov
cmp
push
or
lea
ss
ret
xchg
cs
inc
je
movsb
mov
mov
pushf
add
or
xor
adc
lods
mov
cwtl
out
jne
mov
ja
mov
pusha
and
adc
gs
jp
into
ja
jb
in
mov
shlb
shlb
in
jbe
and
std
into
mov
and
jp
stc
andb
shrl
mov
push
or
xor
js
push
xor
mov
inc
xchg
sbb
add
add
ja
push
cmpsb
pusha
shrb
das
fwait
cld
push
andb
mov
sub
inc
pusha
or
pusha
shl
scas
loopne
inc
and
inc
pop
inc
loope
jnp
loopne
dec
xchg
adc
call
and
inc
loopne
aas
cmp
into
adc
rolb
sub
loopne
inc
mov
jecxz
shrl
sbb
cltd
addr16
jbe
in
es
cmp
negl
xorl
out
jmp
or
es
and
inc
cmp
cmpsb
pusha
inc
daa
adc
mov
pop
sub
jno
xchg
inc
push
pusha
add
and
nop
pop
xor
pop
xor
sbb
add
ficoml
add
pusha
fidivrs
and
inc
cmpsb
add
pusha
xchg
sti
insl
cld
fcoms
ret
add
mov
fistl
hlt
push
inc
loopne
das
inc
mov
dec
xor
in
stc
sub
mov
cmp
sbb
push
push
pop
mov
sub
sbb
cwtl
ficoms
lret
shll
int
insl
bound
xor
je
jge
insl
and
loopne
mov
andb
movsl
pop
sbb
and
xchg
aas
std
xor
mov
cmp
mov
insb
cmpsl
jo
xor
cmp
mov
xchg
add
sub
pusha
mov
shl
push
neg
orl
test
jecxz
xor
sarb
inc
dec
es
arpl
pusha
sbb
mulb
std
push
out
fstpl
or
icebp
test
xchg
jg
dec
cmp
lds
mov
push
lcall
add
stos
xchg
pop
cmp
lock
out
enter
test
and
adc
and
into
orl
dec
add
sbb
lods
scas
rolb
pop
xor
addb
loopne
xchg
dec
ror
cli
push
aas
mov
aad
loopne
lahf
mov
add
jp
dec
jmp
adc
pop
mov
jb
repnz
xor
cwtl
jbe
shrb
mov
inc
or
mov
ret
aaa
jg
jno
loopne
inc
mov
push
sbb
pop
mov
inc
xchg
add
add
jae
andb
loopne
add
and
inc
dec
or
and
in
mov
call
test
loopne
popf
inc
popa
mov
push
inc
cmp
addb
addb
fmul
loopne,pn
vmovaps
jnp
sbb
fistpll
add
movsb
add
loopne
loope
and
movsb
and
pop
mov
mov
fsubrl
mov
loopne
out
in
sbb
add
mov
mov
shl
inc
push
aad
push
scas
shlb
negb
cmc
sub
shlb
push
and
nop
sbb
arpl
add
pusha
repz
shlb
test
jo
inc
and
ror
movsb
loopne
addb
movsl
or
negl
fisttps
mov
lcall
cltd
jnp
push
inc
xor
and
sbb
into
pop
cmp
inc
shlb
pusha
test
adc
rcrl
ds
rol
adc
xchg
mov
inc
loopne
mov
add
sbb
and
shr
cmp
out
jbe
insl
or
add
inc
ss
dec
dec
mov
add
repz
ret
fcmove
adc
adc
je
addb
and
inc
mov
add
js
imull
sbb
dec
push
mov
add
sbbb
iret
xchg
sub
rcrb
add
add
shrb
or
rclb
xor
rclb
shlb
or
popfw
arpl
xor
and
ja
inc
rclb
mov
pop
inc
test
rcl
mov
adc
add
add
cmpsl
jl
mov
inc
adc
jl
dec
es
orb
scas
testl
ret
sub
in
jg
inc
xor
mov
and
mov
inc
flds
push
mov
jae
cmpsb
pusha
and
add
or
xchg
pop
jp
pop
mov
add
pop
jp
out
aaa
xchg
or
push
pushf
inc
test
jp
xchg
sahf
push
pop
aad
fisubrs
or
rclb
add
rorb
stc
push
pop
add
add
jecxz
jecxz
pop
nop
cli
and
mov
add
push
xchg
leave
inc
xchg
sbb
shlb
jns
mov
cmp
or
shlb
lds
inc
pusha
sub
xchg
mov
les
shl
inc
loopne
movsl
pusha
nop
adc
ret
out
xchg
xor
int
loopne
mov
cmp
add
inc
das
testb
addb
mov
pop
inc
pop
mov
jae
cli
lods
adcl
in
movsl
jns
jns
pop
dec
sbb
xchg
add
and
hlt
pop
imul
out
pop
cmp
or
inc
pushf
dec
pop
mov
add
andl
sbb
ss
rolb
pusha
inc
aaa
xor
ja
pop
mov
in
repnz
inc
push
mov
inc
iret
mull
mov
adc
rcll
sti
mov
push
ljmp
in
push
dec
adc
cmp
mov
cmpsb
rolb
pusha
lods
and
jno
xor
ds
dec
or
addr16
or
loopne
out
xlat
orl
mov
pusha
test
sar
or
mov
addr16
push
inc
and
cwtl
in
or
hlt
jp
ret
scas
and
mov
clc
stos
mov
cmpsl
or
loope
adc
pop
push
dec
dec
fwait
or
loopne
pop
pop
adc
out
adc
cmp
test
inc
es
fistpl
or
popa
mov
jl
rolb
mov
cmp
data16
and
push
add
xorb
xchg
and
adc
pushf
sub
and
loop
movsb
inc
and
add
lahf
lcall
push
andb
dec
ret
push
lea
inc
pusha
mov
sub
adcb
jecxz
sbb
cmp
in
cmp
jo
inc
inc
mov
and
mov
add
add
sbb
push
xchg
adc
inc
xchg
loopne
sbbl
jl
jnp
into
cmc
mov
and
mov
inc
push
mov
pusha
mov
jno
xchg
inc
pop
jle
jae
sub
fcmovu
pop
cmc
ds
inc
mov
add
mov
pop
call
popa
lret
or
mov
les
add
roll
loopne
xchg
nop
lds
jne
shll
xor
pusha
add
loopne
mul
sarl
cli
inc
jnp
mov
pusha
mov
rclb
rolb
or
mov
jmp
in
jnp
lcall
int
outsl
jle
jae
push
push
and
mov
loopne
mov
ja
mov
lock
sub
cmp
insl
mov
aam
cvtpi2ps
fists
scas
inc
inc
pop
cmpsl
mov
or
adc
scas
loopne
jbe
aad
inc
and
out
jecxz
push
dec
cmc
xor
push
lcall
mov
inc
mov
movsl
jns
and
sub
scas
pusha
rol
stos
je
jle
cmp
in
or
mov
dec
lret
mov
and
and
cmp
addr16
xchg
scas
add
pusha
mov
imul
roll
add
and
sarb
dec
shll
push
push
push
out
cmp
and
mov
mov
dec
dec
stos
andb
imul
jecxz
cltd
addr16
adc
ret
adc
sbb
stos
int3
mov
jecxz
sub
jns
cltd
sahf
adc
pop
sbb
inc
add
into
dec
out
mov
mov
push
inc
imul
out
mull
cmp
jne
push
cwtl
jo
dec
mov
movsb
pusha
loopne
pop
adc
daa
je
in
jge
mov
inc
das
mov
and
and
imul
sub
and
pusha
faddp
mov
shl
test
inc
add
cltd
adc
lea
arpl
rcrb
mov
mov
adc
cli
dec
xchg
cmp
mov
and
pop
push
cli
not
pusha
mov
aam
pop
cs
add
jle
inc
inc
in
or
shll
jns
mov
jp
mov
cmp
call
xor
pop
jnp
movsl
mov
jns
js
inc
jne
les
cwtl
aam
pusha
add
jne
shlb
pop
sbb
push
sbb
adc
pushf
mov
inc
pop
mov
icebp
jae
icebp
xchg
push
mov
and
rolb
add
data16
push
mov
je
mov
stos
data16
mov
cltd
add
popa
push
mov
loopne
mov
cmpsl
adc
jno
cld
filds
lock
pop
scas
add
les
cld
arpl
and
cli
cmc
inc
mov
inc
loopne
popa
cwtl
dec
mov
jno
jp
scas
inc
rolb
cltd
add
insb
mov
sub
mov
add
cmp
pop
shlb
dec
push
rcll
add
outsb
gs
inc
push
fsubp
xor
movsl
lds
xchg
lret
adc
movsb
inc
pusha
push
push
fdivrp
mov
xchg
dec
mov
scas
sub
loopne
and
jb
fwait
push
mov
xchg
ja
add
sarb
xchg
sub
mov
inc
sub
add
mov
inc
mov
mov
mov
aaa
xor
add
loope
sbb
push
inc
and
rolb
lock
insl
insl
cmp
sbb
jge
adc
lds
cmpsl
mov
and
pusha
loopne
andb
loopne
ja
mov
loopne
insb
push
outsl
inc
scas
and
mov
pusha
mov
rcrb
push
pusha
in
test
xor
jns
mov
out
imul
lds
cmp
andb
adc
mov
and
xor
add
test
pop
push
xor
xchg
dec
enter
lock
decl
jae
stos
rolb
mov
jmp
lcall
or
rorb
inc
shll
adc
pop
aaa
push
jg
addr16
cmc
push
andb
push
in
pop
adcl
leave
adc
sub
pusha
sbb
sbb
inc
add
jns
insl
push
lret
dec
pop
cltd
add
mov
ds
and
sub
jo
sbb
mov
lcall
sti
add
loopne
aam
movsb
addb
pop
shr
or
pusha
sub
sub
sti
cmpsl
cmp
sti
mov
andl
sbb
inc
mov
pop
lods
and
xchg
sub
add
cmp
mov
mov
mov
xchg
lea
dec
add
xchg
das
or
pop
jle
mov
gs
sbb
inc
stc
xor
movsl
rcrb
dec
test
loopne
dec
pop
ljmp
cmpsl
jne
lock
ret
sub
add
mov
adc
pop
mov
fwait
cltd
jno
cwtl
rcrb
mov
jbe
leave
mov
enter
adcb
mov
pop
data16
jae
add
pop
daa
mov
inc
cmp
insl
xor
fisttpl
lret
xchg
stc
icebp
push
dec
jne
jae
jecxz
fildl
mov
adc
adc
ja
stc
xchg
aad
into
mov
sbb
pop
leave
fwait
aaa
cmc
xchg
cmpsl
or
negb
ljmp
aas
imul
and
ret
cmpsl
stc
loop
loopne
nop
sub
inc
inc
fs
into
sbb
adcl
xchg
popa
test
clc
xor
sahf
mov
inc
or
loopne
and
loopne
pop
or
andb
ret
jle
jnp
and
subb
and
pusha
dec
mov
cld
cmc
cmp
scas
loopne
imulb
mov
loopne
push
mov
push
inc
es
andb
dec
xor
mov
fists
cmp
jns
into
movsb
add
stos
and
mov
test
loopne
es
adc
insl
push
add
pop
lods
add
xchg
fcoml
mov
scas
dec
dec
mov
enter
sbb
mov
loop
lods
stos
and
add
loopne
sub
mov
inc
movsl
cmp
jnp
loopne
pop
inc
mov
insb
mov
loopne
stos
mov
jmp
and
movsl
add
mov
dec
dec
push
scas
loope
sbb
xchg
jecxz
imul
lods
repz
outsl
mov
cs
add
jmp
int
jl
andb
xchg
aam
nop
mov
inc
push
cltd
into
mov
add
divl
and
mov
dec
shlb
jecxz
loope
in
or
mov
dec
imul
push
cmp
loopne
stos
jmp
es
cmp
inc
loopne
pusha
stos
addb
pop
pop
pop
jmp
inc
cmpl
cs
and
cltd
dec
ret
inc
fsubrl
push
scas
loopne
jle
sub
lcall
push
xchg
inc
hlt
mov
adc
and
pusha
pusha
xlat
fbstp
sbb
sub
xchg
fs
test
inc
dec
scas
mov
push
sti
pop
push
stc
add
jmp
add
cmp
test
loopne
daa
iret
xchg
repz
inc
mov
xchg
dec
pop
sub
mov
std
fnstcw
adc
jmp
cmpsl
sti
lods
cmp
loopne
fistps
jbe
stc
push
insb
idivb
push
nop
in
mov
int3
int
std
dec
push
sub
add
push
push
cli
cmc
lcall
inc
inc
pop
clc
test
lock
pusha
add
push
ljmp
cwtl
fcomp
sbb
jo
xor
or
stos
inc
loopne
sahf
pop
fcompl
jg
xchg
stos
jmp
shlb
pop
xchg
ljmp
mov
sbb
xorl
inc
or
push
jmp
pop
sahf
fdivl
int3
jmp
out
cmp
and
pusha
adc
mov
pusha
jno
inc
shr
sub
dec
enter
rcrl
and
mov
mov
pop
rorl
enter
xchg
ror
add
mov
sub
pusha
inc
jnp
fcoms
andb
pusha
jge
or
loopne
out
and
mov
xchg
mov
add
pop
and
pop
aas
inc
xlat
inc
adc
mov
sub
andb
add
inc
aaa
fstpl
adc
bound
mov
inc
inc
add
mov
and
call
mov
add
ja
fst
jecxz
cmc
pop
sbb
mov
lret
or
mov
lds
mov
and
pop
fcmovu
adc
into
in
sub
loopne
int3
and
mov
sbb
rol
cmpsb
and
jmp
push
or
sub
sarb
clc
jecxz
shl
fidivs
inc
pusha
cmp
jecxz
inc
add
in
imul
xor
adc
adc
addr16
ficompl
jle
shl
pop
dec
pop
xor
data16
jle
rol
sbb
lcall
int
mov
mov
mov
jbe
aaa
cmpsl
xorl
andb
add
mov
sub
addb
movsl
test
inc
xor
mov
rolb
xchg
inc
cmp
js
cmp
xchg
andb
mov
lcall
outsl
imul
andb
repnz
inc
xor
std
inc
push
and
inc
sbb
and
test
nop
movsl
arpl
and
mov
inc
mull
and
sti
repz
sti
out
sarl
pop
and
mov
xchg
mov
andb
rol
inc
je
inc
addb
call
addb
cmp
jno
outsb
or
jne
and
push
addb
push
xor
pushf
mov
inc
jo
lcall
adc
addb
pop
mov
andb
mov
icebp
dec
sub
shlb
jle
dec
mov
jae
pusha
mov
andb
xor
out
cmp
sbb
inc
inc
cmp
shlb
pop
mov
mov
add
add
std
mov
int3
inc
pushf
iret
xchg
mov
and
add
pop
stos
and
ja
xor
addb
and
imul
jl
push
mov
push
dec
mov
arpl
xor
and
movsw
loop
sbb
and
and
pop
xchg
pusha
mov
adcl
xor
pusha
stc
lock
jl
xor
fcom
test
loopne
pusha
mov
inc
jae
cmpsl
rcr
pop
scas
mov
inc
xchg
mov
imul
add
jg
mov
and
fwait
cli
mov
test
and
or
and
pusha
not
repz
mov
inc
pop
push
ret
or
adcb
movsb
pusha
and
sahf
outsb
jns
xor
sbb
mov
loopne
imull
jecxz
andb
les
lods
inc
outsb
mov
push
add
pop
mov
push
repnz
and
and
repz
jl
pop
or
addb
out
test
xchg
adc
xchg
sub
rcr
dec
inc
nop
out
add
loopne
push
cmpl
lcall
pop
jns
dec
mov
icebp
cmp
push
add
push
cwtl
xchg
push
sub
sbb
jno
inc
imul
andb
add
add
lret
pop
jecxz
shrb
dec
dec
into
mov
pop
addb
scas
add
sub
inc
shlb
test
pop
dec
push
xchg
and
stos
inc
mov
pop
roll
and
into
in
pop
xor
dec
aad
mov
addb
mov
into
in
cmp
add
out
popf
jl
lsl
xchg
pusha
movsb
mov
outsb
push
mov
sbb
addr16
faddl
sti
cmp
cmpb
inc
and
js
repnz
mov
adc
shl
lret
pop
fisttpl
mov
inc
in
call
pusha
aas
mov
lret
or
into
mov
outsb
cmpl
jb
add
sti
fcoml
addr16
cmp
pusha
inc
mulb
leave
cmp
mov
ret
mov
add
add
loopne
sub
add
ja
mov
sbb
sub
and
orb
std
xor
push
pop
mov
inc
xchg
sub
inc
or
pop
xor
pop
mov
insl
push
popf
push
add
lods
pop
mov
in
xchg
out
push
xchg
leave
mov
loopne
pop
fs
add
add
loope
fisttpll
pop
jmp
mov
movsl
fs
mov
inc
and
ficompl
inc
mov
pop
push
aas
lcall
loop
loopne
shll
push
xor
aam
lret
add
xchg
inc
xchg
cmp
dec
add
add
aad
ss
add
mov
rolb
movl
and
sbb
icebp
cli
loop
dec
adc
int3
mov
stos
mov
cmc
aaa
mov
pop
pusha
push
push
fwait
hlt
mov
popa
sbb
sti
pop
cmp
call
loopne
adcl
lret
aad
ss
aas
js
pusha
shl
repz
lods
hlt
popa
dec
jb
jnp
add
jae
pop
pop
mov
adc
pop
rcrb
add
xchg
inc
push
cmp
lahf
and
and
fistl
push
sbb
outsb
addb
jp
popf
sub
inc
shll
loopne
mov
push
andb
push
aad
xchg
sarl
out
mov
push
jb
rcl
nop
test
pusha
into
mov
push
mov
push
inc
loopne
imul
or
inc
ss
xchg
js
cmp
and
movsl
outsb
mov
push
aaa
popf
cs
loopne
pop
xorl
loopne
testb
pusha
out
adc
mov
mov
sbb
mov
or
ds
cmp
andps
or
xor
pusha
das
mov
add
cmpsl
cld
jae
ss
add
and
leave
shrd
sbb
loope
test
and
cmpb
nop
lret
pop
leave
mov
popaw
ret
add
mov
add
pop
sbb
cmp
xchg
cli
test
stos
inc
pusha
mov
fs
rcrl
test
and
pusha
je
adc
stos
mov
mov
add
addb
clc
jle
xchg
mov
push
push
inc
or
into
inc
test
jp
in
cmc
pop
dec
imul
push
pushf
jmp
push
inc
rorb
and
les
lods
xchg
pop
cmp
jl
sbb
stos
inc
cmpb
add
dec
dec
jae
sahf
arpl
mov
rorb
jae
mov
out
movsl
sub
adc
in
add
jmp
cmc
fnstcw
pop
mov
out
andb
sbb
sub
loop
int3
movsb
add
daa
inc
test
enter
add
fwait
add
inc
push
loopne
das
xchg
lods
aaa
xchg
pushf
dec
mov
xor
test
icebp
jb
pop
add
inc
and
loopne
dec
insl
push
wbinvd
repz
stc
imul
int
loop
ret
jae
call
push
mov
loopne
push
sub
or
pop
and
sbb
adc
mov
add
jb
mov
lahf
fisubrl
or
jl
push
add
rorb
cli
les
jo
mov
cmp
cmp
std
pop
scas
shlb
mov
fidivs
loopne
std
andb
enter
add
loopne
or
outsb
loopne,pn
inc
mov
mov
pusha
jl
cmp
and
addb
jle
sub
fmulp
inc
sub
daa
ret
sar
ret
divb
ja
fisubrs
push
dec
rolb
rolb
sti
test
mov
jmp
xchg
inc
adc
rcrb
ja
pop
addb
je
les
and
fnstcw
shll
cli
xor
ljmp
pop
jae
jmp
add
ss
inc
fs
rclb
sbb
xchg
and
cmp
gs
sarb
fcmovnbe
cli
fidivrs
sbb
out
push
mov
jae
mov
or
rolb
rolb
sbb
xchg
mov
add
loopne
xor
pop
mov
ds
inc
add
jb
push
cmp
add
jno
mov
pusha
loopne
pop
sahf
fiadds
andb
jmp
cmp
in
jno
inc
mov
add
add
mov
add
addr16
sbb
scas
inc
and
test
loopne
or
pop
or
inc
cmp
addb
or
mov
mov
rcrl
mov
fs
fstpt
std
jp
cmp
ret
cmpsl
xchg
push
lds
sbb
xchg
xor
sub
fs
adc
sarb
jbe
loopne
addps
pop
shll
mov
jl
and
sub
inc
mov
gs
imul
pusha
inc
in
out
add
add
das
mov
arpl
xor
or
pusha
mov
pop
ret
gs
fucomp
scas
dec
xor
cli
dec
and
cmp
add
lods
or
cmp
frstor
jns
sbbl
pusha
jae
fisubrl
inc
add
loopne
fcoml
jne
std
imul
outsl
add
mov
dec
stos
and
adc
in
add
loopne
add
add
ret
jne
xor
cmpsl
ret
hlt
test
loopne
add
mov
pop
push
std
das
test
inc
sub
or
push
and
sbb
sub
pusha
js
pop
out
pusha
inc
mov
add
in
aas
jno
jb
add
insb
outsb
mov
dec
das
out
fs
addb
ret
addl
mov
mov
aas
shlb
add
mov
inc
and
xlat
push
sbb
lret
mov
adc
mov
psubw
cwtl
xor
out
sti
insb
in
int3
cmovae
aad
fnstenv
gs
xor
inc
ud0
cli
sar
inc
shrl
loopne
test
sub
andb
mov
sti
jbe
mov
jo
jle
and
mov
mov
mov
jecxz
or
ss
andb
sbb
filds
in
shl
xchg
inc
mov
and
jmp
bound
dec
inc
into
pop
sti
imulb
es
mov
and
xor
mov
and
cli
enter
inc
aad
loopne
pusha
loopne
lea
sahf
dec
pop
aad
addr16
sub
and
or
mov
je
test
arpl
dec
mov
xor
and
push
arpl
cmp
dec
pusha
pushf
push
sarb
cmc
cmpsb
and
loopew
sub
in
cmp
xchg
mov
mov
movntq
addb
adcb
rclb
loopne
lret
mov
inc
rolb
add
dec
lea
and
stos
pop
inc
flds
inc
mov
adc
mov
ds
jnp
push
and
jge
mov
add
push
cmpsl
imul
mov
and
mov
mov
filds
rol
jnp
loopne
add
mov
cmp
stos
loopne
mov
adc
test
pop
movsb
pusha
mov
pushf
insb
fnstsw
into
scas
mov
lods
add
lret
loopne
je
lret
xchg
rol
movsl
aad
push
inc
xchg
filds
mov
int
jmp
dec
cmc
xor
mov
inc
pusha
jbe
enter
ret
dec
inc
xchg
and
add
add
mov
or
mov
inc
push
and
cltd
adc
scas
out
lods
cmp
lea
mov
loopne
out
and
into
dec
pop
rolb
dec
shr
xor
sbb
add
add
es
mov
repz
pop
scas
and
fisttpll
push
and
negl
subl
jge
lods
mov
sar
cmp
xchg
cmp
xor
lahf
mov
add
stos
pusha
and
add
inc
mov
mov
icebp
imul
std
out
lods
loopne
sbb
mov
shrb
adc
pusha
lret
mov
movsl
lret
sbb
int
or
pop
rolb
inc
mov
test
and
push
rcll
cmpsb
inc
add
test
inc
cmp
adc
dec
jbe
mov
orb
test
lods
xchg
adc
out
lret
clc
mov
ror
jbe
int
idivb
sub
adcb
arpl
lret
cmpsl
in
inc
dec
push
xchg
mov
lods
mov
idiv
nop
cmp
in
mov
iret
lods
add
xchg
push
pushf
push
jecxz
mov
and
mov
loop
dec
xor
aad
inc
mov
lds
jb
mov
mov
jge
and
pop
fldl
addr16
roll
mov
push
mov
cmp
or
push
pop
repnz
push
inc
frstor
loopne
add
es
aad
mov
or
fildl
pop
xor
pop
sub
call
mov
clc
and
inc
jns
mov
loop
mov
out
sub
lahf
sbb
test
daa
aaa
sub
add
rcl
add
shrb
inc
lock
lcall
popa
mov
jb
in
dec
and
xchg
mov
add
pusha
add
subl
pusha
mov
and
insb
cmp
in
sbb
addb
mul
jnp
imul
mov
add
pop
mov
shlb
arpl
mov
test
mov
push
aam
and
mov
add
inc
cmpsb
loopne
push
loopne
ret
stc
mov
movsl
ret
sbb
in
jge
enter
out
mov
pop
and
inc
mov
push
pop
gs
test
mov
cld
push
push
lea
mov
loopne
jl
push
add
loop
pop
xchg
jno
lea
dec
jg
pusha
pusha
and
dec
jne
add
inc
or
cli
or
mov
mov
sbb
rolb
stos
hlt
lods
loope
pop
outsl
lcall
lods
xor
or
loopne
xchg
insb
outsl
les
mov
ret
add
rcrl
out
andb
leave
out
push
cmp
loopne
mov
add
jbe
ret
add
inc
xor
rcrl
inc
jo
stos
add
adc
test
inc
pusha
push
adc
popa
andb
popa
inc
sbb
iret
mov
pusha
divl
je
add
lret
ret
pusha
and
jle
inc
mov
inc
rcr
lock
and
cmp
xchg
ret
add
je
dec
ja
sub
jg
popf
gs
pushf
pop
test
inc
jp
ss
jbe
cs
icebp
push
loope
sub
and
loopne
and
sbb
push
dec
cwtl
out
les
dec
inc
dec
cmc
lret
dec
jno
inc
fucomp
inc
xor
xchg
and
popf
cmp
loopne
lods
enter
dec
xor
stc
pop
mov
adc
cld
push
lcall
cmp
cmp
and
inc
pusha
mov
add
js
data16
pop
xchg
jne
jle
in
gs
xchg
arpl
in
jns
jno
movsb
add
mov
test
inc
mov
shrb
xchg
fcoms
test
pusha
shl
leave
bound
std
jns
pop
add
and
mov
imull
add
in
repnz
mov
or
dec
fbld
lcall
mov
jl
out
lcall
idivl
mov
mul
cmp
cltd
mov
mov
outsb
jae
pop
test
shrb
addb
test
xchg
mov
push
pushf
xchg
jmp
test
cs
add
pusha
push
shlb
fldenv
inc
mov
shl
sub
outsl
cli
dec
pop
out
push
adc
clc
pop
add
pusha
add
jge
mov
mov
icebp
cmpl
shlb
test
cmp
inc
push
in
notb
push
daa
test
out
sub
pusha
and
mov
inc
add
and
pushf
add
inc
or
shl
loopne
push
test
or
cld
jl
pop
call
and
mov
dec
or
std
xchg
mov
xor
xchg
sbb
test
inc
rcrl
push
mov
cli
xlat
xor
sub
mov
mov
push
loope
push
sbbl
popa
inc
mov
jg
mov
sub
std
inc
pop
add
add
daa
pop
jbe
addb
loopne
ss
into
aaa
js
xor
inc
js
aaa
mov
in
iret
test
inc
pushf
arpl
lret
and
pusha
jle
sbb
nop
aad
aam
stos
addb
in
jle
scas
aaa
pop
jo
lahf
jne
lret
jge
lcall
and
jl
scas
or
inc
xor
mov
adc
mov
nop
dec
push
dec
outsb
test
xchg
cmpsb
loopne
lds
mov
arpl
sti
xchg
cli
test
jmp
pop
loope
pop
cmp
adc
or
fldt
loope
bound
rorb
sub
andb
jle
loopne
mov
and
insb
push
xor
je
add
xlat
in
call
and
lret
cwtl
push
shl
dec
add
andl
sarl
and
sbb
outsl
cli
jecxz
adc
pusha
inc
jl
and
cmp
ja
cmc
imul
enter
movsl
sbb
and
loopne
and
loope
cmp
xor
call
pushfw
fucomp
and
add
add
mov
out
cmpsl
data16
out
addl
test
and
pop
jle
mov
pop
out
ja
adc
enter
ret
addb
mov
out
faddl
scas
addb
orb
loopne
frstor
xchg
push
out
in
and
lds
pop
push
mov
sarl
leave
or
ds
pop
push
daa
imul
inc
pusha
xchg
adc
mov
and
loopne
mov
shlb
movsb
andb
loopne
ljmp
data16
shll
add
rol
insb
call
mov
addb
loopne
orl
andb
rcrb
outsl
jmp
and
fbld
ljmp
rdtsc
fcmovnb
loope
jbe
pusha
sarb
dec
andl
adc
movsb
shl
and
rcll
inc
sub
shrb
repz
enter
pop
sub
cmpb
pop
js
push
seta
add
cmp
and
scas
clc
mov
push
fsub
jle
cld
xchg
shr
adc
pusha
cmpsb
mov
jns
aad
out
ror
xchg
subb
stc
push
mov
pusha
pop
cmp
xlat
mov
mov
loopne
je
xor
mov
testl
pusha
or
add
jl
dec
mov
test
add
inc
sub
mov
pushf
or
jg
in
pop
lods
and
mov
out
int
xchg
jl
dec
lcall
inc
fisubs
add
mov
sub
lds
out
pop
rorl
cld
and
imul
and
popf
rorl
inc
xchg
sub
sar
rcrb
cwtl
lcall
add
xorb
inc
mov
adc
movsb
mov
out
fwait
mov
nop
nop
push
mov
mov
mov
mov
aas
dec
sbb
scas
and
sbb
inc
loopne
fisttpll
loopne
add
pop
or
loopne
mov
ljmp
adc
lret
push
ror
clc
and
rol
call
dec
out
cmp
jo
xchg
jnp
lods
mov
inc
adc
push
xlat
out
or
dec
push
push
sbb
cmc
lret
adc
jmp
add
js
loope
addr16
sbb
xor
ss
mov
xor
inc
lcall
mov
add
lea
inc
add
addb
jo
xchg
cwtl
xor
out
mov
xor
movsb
mov
mov
or
mov
inc
sub
mov
mov
pusha
and
fldcw
mov
into
test
dec
jg
and
dec
hlt
adc
add
mov
cmpl
mov
push
add
mov
pop
outsl
or
cmpb
push
roll
lods
push
rorl
and
mov
and
cmp
mov
cwtl
xchg
fs
mov
jbe
mov
inc
jno
and
js
sub
sarb
xchg
or
xor
lods
mov
inc
imul
push
fistpll
ja
shr
jno
mov
scas
mov
insl
add
push
mov
cmp
test
dec
dec
scas
jne
andb
inc
mov
add
sub
and
jl
jns
movsl
mov
cmp
push
inc
lea
xor
add
dec
fsubr
lret
jle
or
mov
ljmp
aam
xchg
jmp
dec
inc
shrb
loopne
stos
inc
pop
pop
in
lahf
and
rclb
sub
gs
inc
pop
popa
and
add
dec
repnz
call
mov
cwtl
divl
inc
pusha
cltd
or
add
andb
mov
andb
and
inc
loop
jns
roll
iret
adc
and
push
inc
inc
mov
ja
mov
dec
cmp
pop
dec
movsb
inc
mov
pusha
push
and
repz
cmp
cltd
pop
clc
ret
ror
mov
dec
jecxz
ljmp
dec
push
pusha
add
push
lahf
add
add
push
mov
inc
mov
cwtl
push
stc
ffreep
lahf
xor
sub
cli
sub
shlb
imul
sbb
dec
sti
outsb
mov
outsl
mov
loopne
sbb
xor
adcb
adc
xchg
jb
data16
fisubl
daa
xor
inc
inc
sti
les
push
and
pusha
sbb
and
push
outsb
jle
andl
push
cwtl
and
xchg
mov
fstp
dec
ret
jle
testl
lret
pop
push
push
add
add
test
inc
mov
or
mov
test
shrb
rorb
xchg
lret
xchg
push
cmp
push
clc
jbe
shl
mov
xor
fimull
fninit
pushf
xchg
pop
xor
sbbl
sahf
cmpsl
mov
cmp
mov
push
inc
or
ljmp
add
dec
mov
jl
pop
mov
lret
add
ljmp
stos
andb
subb
pusha
and
mov
dec
stc
mov
mov
xchg
jae
leave
ljmp
add
pusha
and
sahf
test
loopne
pusha
rclb
mov
loopne
outsl
mov
rclb
xchg
push
loopne
mov
cmp
rol
inc
sub
ficoms
cmp
cmp
je
sti
and
cmpsb
and
idivl
adc
dec
aam
push
and
mov
xor
sub
shll
mov
cmp
inc
andb
mov
rcrb
add
int3
stos
mov
and
push
ds
out
adc
mov
pusha
ljmp
adc
push
sbb
fldl
fcomps
dec
mov
xchg
popf
stos
and
and
cmc
lea
and
mov
rorl
and
inc
lock
and
inc
sub
inc
out
sub
cwtl
stc
or
dec
cmpsl
and
sbb
dec
jb
sbb
shlb
bound
repnz
addb
out
sti
fstpt
push
scas
mov
jnp
je
mov
shlb
andb
ret
xchg
add
jb
mov
pusha
add
shrl
and
jnp
pop
adc
sahf
nop
test
inc
sarb
sub
fnstcw
rorb
leave
jl
pusha
ret
rolb
add
mov
loopne
jno
push
ret
sbb
inc
loopne
xor
lods
aam
xor
dec
cli
test
pop
dec
int3
sbb
ret
dec
ljmp
inc
and
inc
sub
jg
mov
mov
cwtl
mov
in
jne
dec
sub
or
push
andb
rolb
jle
sbb
aad
notb
jecxz
add
adc
xchg
rol
add
out
cld
add
pusha
and
adc
and
gs
adc
stc
jbe
pop
aas
in
ret
dec
mov
out
pop
cltd
mov
pusha
loopne
loopne
fidivrs
pop
int3
pop
add
call
dec
push
call
addb
aam
and
pop
jmp
and
arpl
mov
loopne
and
inc
call
jge
xor
inc
and
push
sub
and
xlat
add
add
cmp
pusha
mov
inc
xor
jmp
icebp
sub
pusha
decl
push
mov
adc
push
mov
cmp
dec
outsl
lods
insl
cmp
xchg
les
mov
xchg
aas
cmp
movsb
shl
test
sbb
push
mov
dec
imul
adc
leave
xchg
cltd
dec
cs
and
inc
cmc
std
insb
and
lods
shrb
xchg
pushf
add
xor
dec
sub
sub
add
inc
daa
scas
mov
sbb
xchg
mov
shlb
nop
add
dec
push
adc
sub
rolb
rorb
pop
adc
mov
jno
adc
mov
test
mov
sub
addb
loopne
stos
and
fists
sbb
add
fmuls
mov
lea
push
mov
or
jnp
jle
test
adc
mov
and
xor
cli
les
xchg
pop
xchg
mov
add
cmc
test
inc
sub
adc
es
jbe
outsl
jle
pop
jmp
popf
int
inc
rolb
nop
mull
mov
iret
mov
xlat
std
jmp
add
fcoml
xchg
imul
pop
mov
mov
sbb
pop
dec
int
imul
sub
or
sbb
sbb
dec
in
mov
cli
sti
mov
and
sub
loopne
sbb
jmp
mov
add
jmp
aam
push
xor
call
data16
dec
ss
pusha
rolb
add
popf
loop
ror
stos
jle
sarb
dec
dec
or
and
enter
mov
ret
sbb
loopne
adc
inc
mov
outsb
lret
push
lods
pusha
add
mov
loopne
je
inc
rolb
inc
sbb
orl
loopne
sub
mov
mov
or
std
lcall
sbb
lods
xorl
pusha
mov
xchg
push
les
xchg
outsl
ljmp
and
add
mov
cmp
pop
mov
xorb
add
cmp
inc
loopne
adc
add
pusha
xchg
inc
mov
cmp
gs
dec
nop
dec
push
fwait
xchg
pop
xchg
movb
push
jle
pusha
inc
es
in
and
and
mov
jo
inc
xor
dec
mov
arpl
mov
inc
xchg
cld
insb
out
faddl
push
jg
xor
mov
daa
pusha
out
mov
mov
mov
or
inc
push
cli
push
and
xlat
int3
dec
js
dec
stos
pop
imulb
rorb
ffreep
mov
and
inc
add
clc
ljmp
push
and
les
sub
add
cmc
cmpsl
jae
jp
les
adc
jnp
push
add
inc
and
aaa
or
and
in
sub
fnstenv
fadd
leave
adc
loopne
and
push
shrl
inc
mov
and
add
pusha
pop
push
hlt
jge
fsubl
fsubl
mov
out
inc
and
inc
add
add
push
jl
loopne
inc
or
inc
mov
arpl
and
sub
movsb
and
jo
das
pop
in
lock
mov
push
jbe
fsubrs
cmp
testl
jno
or
lock
mov
insb
push
mov
fcmovnbe
mov
push
xchg
inc
xchg
daa
lcall
ss
sub
mov
sub
addb
add
leave
and
pop
andb
movsl
mov
mov
pusha
xor
mov
cmp
fwait
lahf
jb
rorl
les
addr16
pusha
pusha
inc
cmpsl
cmc
sbb
shlb
testb
mov
adcl
pushf
test
jecxz
orl
and
add
mul
xor
dec
cwtl
mov
pusha
hlt
movsb
pusha
add
xchg
cltd
fwait
jne
adc
push
iret
xchg
mov
icebp
xor
loopne
rcll
xorl
aad
stos
arpl
mov
pop
or
lahf
adc
aas
addb
sahf
pop
mov
add
mov
mov
push
and
paddusw
in
mov
andb
push
and
inc
pminub
ss
loopne
add
sbb
add
push
out
xchg
mov
loopne
sti
xchg
loopne
xor
les
loop
mov
fstps
mov
and
jo
repnz
xor
loope
and
fwait
inc
stos
mov
vpunpckhwd
movsb
loopne
std
add
std
imul
jae
sub
jmp
aas
inc
push
dec
adc
sahf
or
repnz
add
add
add
sub
addb
sti
inc
sbb
sub
andb
fs
stos
and
sub
mov
rcl
js
xor
addb
adc
pop
int3
mov
mov
in
inc
pop
in
daa
push
jne
and
andb
sbb
dec
xchg
mov
adc
push
inc
je
insb
stos
and
jmp
int
mov
push
test
outsl
dec
aad
mov
popf
xchg
test
rorb
pop
push
frstor
lret
and
mov
pop
jbe
das
cmpsl
adc
mov
add
mov
or
cld
mov
lods
loop
leave
add
shr
daa
xor
ss
loopne
jg
mov
xor
pop
jb
pusha
rcl
mov
fildl
jge
imul
lret
pop
sub
pusha
loop
sbb
rol
pushf
outsl
in
jmp
xchg
fwait
xchg
rorl
pusha
and
sub
mov
add
jns
xor
sub
rcr
leave
mov
add
cmp
rcrb
push
sub
jnp
roll
add
insl
dec
loope
adc
mov
dec
nop
mov
loope
mov
or
rclb
loopne
in
das
ficomps
jbe
xchg
add
add
cmp
arpl
nop
sub
je
xchg
cmc
dec
nop
or
mov
in
pusha
loopne
scas
inc
and
pop
pop
adc
rolb
cmp
sbb
xor
ficoms
rcrl
xor
dec
pusha
aad
mov
lock
popf
mov
shlb
xchg
add
jno
lahf
xchg
insl
mov
cmc
pop
lods
xchg
sti
xchg
add
andb
pusha
andb
into
rorl
mov
jo
or
sub
pusha
sbb
sub
jg
movsl
outsl
mov
push
mov
pusha
fcomp
int3
mov
push
fstps
inc
sbb
or
mov
addb
pushf
dec
pop
inc
addr16
rcrb
jae
gs
push
and
xor
mov
add
push
add
sbb
mov
or
inc
bound
js
jnp
cli
sub
push
xchg
cmp
rolb
addr16
and
and
and
lcall
fdiv
outsb
pop
sub
cmp
xchg
inc
xchg
sub
inc
and
shlb
insl
mov
inc
arpl
sti
or
mov
lahf
lret
mov
hlt
mov
dec
add
pusha
jne
rcrb
loopne
xor
push
mov
imul
pop
pop
loopne
jmp
adcl
test
ljmp
scas
pusha
pusha
dec
fistpl
pusha
cmpb
fs
sbb
mov
aas
cmp
lods
mov
pop
in
nopl
mov
notl
cmp
xchg
xor
andb
mov
ret
movl
fbld
into
jnp
sub
add
js
add
add
nop
jb
sub
scas
add
dec
pop
pop
ja
dec
mov
mov
adc
or
mov
mov
mov
loope
and
jl
push
lahf
mov
subl
inc
cltd
hlt
jl
pop
ficoms
icebp
loope
outsl
add
mov
popa
and
loopne
mov
fucom
xor
sub
xor
ljmp
and
mov
js
pusha
mov
add
daa
mov
cmpsb
pusha
add
sbb
addb
add
mov
add
cmp
sbb
into
lcall
mov
and
loopne
subl
pop
pushw
cwtl
or
inc
mov
jns
fistl
mov
pusha
scas
test
jbe
icebp
fcomi
inc
jb
sahf
jae
nop
cmp
pop
add
mov
imul
inc
shlb
xchg
and
sar
leave
cmc
insb
in
ds
gs
sub
ss
cmp
sub
xchg
xchg
sub
loopne
fwait
dec
sub
mov
inc
sbb
inc
xchg
test
loopne
sbb
push
xlat
sub
imul
cmp
or
add
in
pop
repnz
inc
inc
shlb
andb
test
push
ret
int
test
in
add
jne
pop
pop
fs
mov
into
mov
push
fmulp
std
jno
sub
pusha
pop
scas
or
sahf
jmp
and
pusha
cmc
ljmp
dec
cmc
fdivrl
mov
lds
dec
subl
or
pusha
scas
and
mov
lea
push
sub
pusha
shll
cltd
std
push
sub
mov
and
pop
shll
add
rcll
fst
xchg
in
test
inc
out
push
add
add
mov
mov
loopne
int3
adc
hlt
and
jecxz
insl
sbb
shl
sahf
cwtl
add
and
and
or
add
mov
mov
jmp
shlb
shlb
push
into
jmp
or
popa
shlb
addb
hlt
xor
mov
inc
icebp
loope
or
and
and
inc
add
ds
mov
adc
pop
adc
fisubl
addb
testl
mov
mov
sub
sar
pusha
mov
loopne
sti
push
add
sub
dec
imul
add
sarb
ljmp
bound
or
inc
ret
dec
sbb
pop
jmp
or
mov
lods
loopne
adc
mov
sar
paddsb
dec
mov
xorb
adcb
arpl
pop
test
lods
add
mov
scas
inc
cmp
andl
loopne
ss
pop
lods
and
add
inc
and
sbb
add
and
rcrl
and
dec
stos
andb
scas
mov
or
pop
je
repnz
jmp
movsl
loope
test
loopne
xchg
push
jg
shrb
mov
daa
xor
pop
decl
sti
out
adc
pop
movsl
xor
fs
mov
and
pusha
sahf
into
cmp
shll
add
mov
xor
and
inc
jnp
dec
dec
out
inc
sbb
aam
cmp
pop
stos
inc
mov
xor
into
mov
gs
loope
mov
cmp
iret
je
xlat
inc
arpl
xor
shl
adcl
and
call
and
loopne
push
dec
test
sarb
jmp
shlb
test
loopne
in
pusha
loopne
pop
addb
pop
mov
mov
scas
inc
mov
repz
pop
cwtl
jle
pusha
ss
inc
lods
inc
ljmp
add
pusha
inc
push
mov
loope
shlb
and
test
addb
mov
loopne
stos
mov
stos
pusha
loopne
pop
mov
mov
add
insl
mov
shll
mov
arpl
sbb
mov
inc
orb
clc
pop
test
and
pusha
mov
mov
iret
mov
sub
andb
mov
gs
jnp
adc
add
xchg
sbb
popf
fsts
add
push
addb
mov
lcall
ljmp
subl
mov
jge
xchg
aam
mulb
icebp
lods
add
mov
mov
jmp
add
and
cwtl
test
sbbb
mov
dec
in
jb
mov
fmul
pop
inc
cmpl
rolb
and
pusha
subb
lock
mov
inc
dec
iret
xchg
sub
daa
not
in
cmp
pop
adc
add
outsb
push
cmp
and
mov
leave
or
loopne
rcrl
pop
push
mov
popf
testb
or
rolb
aad
addb
mov
pop
adc
addr16
or
and
lock
mov
cmpsl
and
and
add
loopne
clc
lahf
pop
inc
outsb
pusha
push
lcall
and
lods
push
and
mov
sub
pop
cmp
mov
orb
inc
sahf
addb
push
rclb
sub
cmpb
rcl
addb
ja
xchg
and
sarb
sub
je
xchg
push
xchg
and
fcomps
cmpl
push
add
out
loope
loop
xchg
inc
shl
cmp
mov
push
push
sbb
mov
arpl
aad
adc
inc
mov
add
jnp
aam
xchg
mov
bound
mov
andb
sub
rolb
cld
cmc
mov
loopne
fistpll
cmc
cmp
shl
mov
push
or
dec
lock
pop
push
push
in
push
jg
xchg
mov
add
push
sub
loopne
cmp
or
jmp
insl
jne
and
into
sub
add
data16
push
mov
xor
or
hlt
or
sbb
int
add
jno
aaa
shrb
loopne
inc
rolb
push
and
gs
push
addr16
mov
xchg
xchg
mov
fwait
sti
cltd
mov
push
ja,pt
pop
out
push
push
fidivs
test
imulb
jne
pusha
and
sti
mov
bound
andb
xchg
cmp
sub
les
scas
addb
mov
dec
sti
pop
fwait
xorl
adc
add
xchg
mov
fnstcw
push
xor
pop
aaa
movsb
and
jno
cltd
mov
add
loopne
xchg
and
mov
stos
cmp
pushf
out
and
rol
mov
cmpsb
add
out
negl
mov
adc
rorb
jmp
inc
jne
in
cwtl
mov
data16
addb
pop
mov
jl
cmc
mov
and
loopne
and
pop
lods
mov
push
loopne
clc
aas
pop
inc
sbb
mov
push
mov
cmpps
cmc
fsubl
sarb
and
imul
jg
out
cld
or
loopne
pop
rolb
in
sub
shl
int
dec
and
mov
cmpsb
mov
sarb
dec
pop
popf
cmp
fidivs
loope
sub
dec
lahf
stos
mov
es
shlb
or
mov
sub
mov
addb
aas
mov
sbb
or
je
mov
ret
jno
std
shl
lea
and
mov
test
loopne
add
inc
cli
stos
jle
jno
sbb
or
loopne
sbb
loopne
mov
loop
addl
stc
in
repnz
sti
mov
orb
and
enter
loopne
cmpsl
cld
push
mov
inc
call
sahf
dec
ret
add
mov
pusha
in
xchg
imul
div
push
pusha
loopne
in
pushf
dec
in
push
add
inc
fmuls
sub
loopne
fiadds
jle
inc
xchg
xchg
adc
sub
inc
sbb
add
inc
divb
loopne
or
cmp
popf
mov
mov
loopne
inc
andb
cltd
and
jbe
cs
mov
xchg
mov
add
loopne
mov
loope
ja
and
xor
or
aas
push
clc
mov
xor
mov
cli
jns
hlt
jecxz
xor
mov
xorb
pop
cmp
and
shl
dec
loop
or
stos
inc
cmpb
loopne
sbb
cmc
inc
or
jg
scas
arpl
dec
not
add
rcrb
sbbb
fs
es
mov
add
jb
push
out
jg
andb
cmc
data16
arpl
sarb
loopne
lock
pusha
add
sub
lock
cwtl
cmp
int
inc
in
and
add
mov
int
ljmp
pop
call
adc
xor
inc
xor
mov
std
mov
xlat
insb
int
outsb
dec
rorl
lock
push
and
mov
in
adc
daa
dec
mov
and
mov
pusha
xchg
test
add
mov
rolb
out
adc
repz
and
pop
dec
movsl
lret
mov
inc
pusha
sub
mov
add
xor
notb
or
mov
push
shl
push
pusha
loopne
popf
mov
and
mov
sarl
cld
out
mov
das
outsb
negl
dec
loopne
dec
in
inc
outsb
scas
pusha
lret
mov
std
popf
lock
mov
aaa
repnz
mov
add
rcr
sbb
pusha
adcb
loopne
mov
repz
and
xor
mov
or
loopne
loopne
mov
add
fnstenv
and
in
out
subl
loopne
scas
addb
loopne
inc
cld
rclb
test
loopne
add
xchg
mov
lods
shlb
pusha
pusha
test
add
sub
mov
inc
loop
andb
mov
cwtl
pop
test
js
pop
pop
popf
lcall
dec
test
nop
stc
addb
pusha
inc
mov
pusha
popa
xchg
sub
mov
pusha
subb
shrb
insb
sub
inc
sbb
jno
lea
mov
inc
xchg
fdivl
xchg
xor
and
ds
pop
and
pusha
pop
je
into
ret
inc
insb
mov
inc
fidivrl
mov
dec
jbe
push
fwait
in
add
or
fimuls
shlb
xorl
or
sarb
add
out
mov
inc
and
and
mov
shll
loopne
add
adc
cwtl
repz
add
add
cmpsb
loopne
or
cmp
loopne
cmp
movsl
aad
and
or
rolb
inc
pusha
sahf
mov
cmp
sbb
imul
inc
rolb
pusha
jno
jge
in
adc
loopne
dec
mov
or
call
in
out
pusha
mov
out
xchg
scas
inc
lcall
pop
cmp
and
push
stos
add
pusha
pusha
mov
lret
inc
and
test
int3
push
add
xchg
mov
mov
fldt
mov
adc
leave
push
cmpsl
sub
loopne
ss
fistps
push
and
pusha
ja
lcall
cli
mov
cmp
dec
xor
leave
imul
xor
mov
and
cli
mov
aaa
push
mov
cmp
out
ja
cmpsl
jae
ret
adc
add
lea
push
pop
popa
mov
loopne
cli
in
push
jne
push
mov
and
inc
out
aam
addr16
sbb
cmp
andb
pop
mov
lahf
clc
xor
inc
mov
and
and
lret
movsl
and
dec
sbb
xchg
pop
pop
jmp
std
adc
inc
add
mov
in
ja
pusha
cmpb
xchg
inc
mov
and
or
test
inc
xor
fdivl
shlb
sbbb
cli
arpl
lret
fldcw
loop
add
xor
rolb
xchg
dec
jae
loopne
add
and
dec
arpl
in
jp
jmp
leave
fists
adc
leave
ja
xor
and
outsb
sub
mov
push
pop
push
mov
popf
inc
add
loopne
test
andb
dec
sub
cmp
pusha
inc
fnstenv
push
jle
loopne
mov
movsl
aad
inc
or
and
shrl
dec
add
mov
aas
sahf
mov
outsl
ror
out
imul
push
sti
imul
pop
pop
test
call
cmp
andb
push
andb
and
or
add
movsl
insl
jmp
jnp
ret
and
inc
adc
cltd
dec
es
loopne
movsl
push
outsl
jb,pt
andb
fcomi
push
jnp
andb
test
inc
mov
mov
out
test
cli
or
xorl
push
addr16
sar
in
add
loopne
xchg
int
push
sbb
and
pop
mov
loope
pusha
pusha
sbb
dec
cwtl
push
test
orl
add
add
and
pushf
add
fdivs
push
jecxz
aam
add
pusha
xchg
and
pslld
jb
pop
pop
mov
sub
pop
sub
stos
aam
xlat
mov
mov
and
loopne
or
cwtl
pop
sub
loopne
mov
and
and
pusha
rclb
and
pop
mov
pop
fstl
add
or
and
xor
push
adc
pop
and
inc
inc
or
mov
push
or
push
call
rorb
and
cmp
pusha
shll
add
loopne
lcall
loopne
add
jmp
and
sbb
loopne
and
mov
sub
inc
xor
push
addl
stc
mov
sub
sub
pusha
pop
push
and
ret
sub
inc
popaw
ss
mov
adc
call
mov
inc
fnstsw
inc
add
inc
insb
lcall
call
mov
rorb
mov
dec
out
pusha
mov
loopne
shr
mov
adc
pop
or
scas
and
pop
cltd
sub
and
pusha
dec
lods
mov
xor
ss
add
pop
mov
call
mov
sbb
or
add
inc
and
cmpsl
mov
nop
push
rol
ss
mov
int
push
test
inc
cmp
dec
jmp
scas
mov
imul
mov
sbb
in
addb
cmp
pusha
mov
and
xchg
sbb
add
or
pop
push
and
fistps
xor
gs
sbb
loopne
push
mov
push
sbb
jo
xor
mov
sbb
and
and
aad
decb
xchg
mov
push
clc
daa
push
addr16
iret
ss
lret
enter
shlb
sub
inc
fs
and
xchg
leave
mov
pop
mov
mov
loopne
pop
xchg
and
jnp
cmp
lahf
and
inc
cmp
into
rolb
push
testb
test
inc
mov
loopne
daa
aad
test
pusha
dec
dec
xchg
push
inc
jg
clc
int3
or
jb
mov
shl
mov
mov
or
fldcw
pusha
loopne
add
gs
inc
sti
insl
sbb
sub
mov
jmp
lods
fsts
cmp
jp
into
lahf
dec
nop
xchg
inc
jl
dec
scas
loopne
xor
fldl
inc
loopne
add
or
inc
xor
cmp
and
mov
jnp
fldpi
mov
loopne
ja
or
inc
lock
addb
xor
pop
jle
and
xchg
mov
mov
cmp
rcrb
dec
into
mulb
pusha
pusha
cmp
mov
fwait
lret
std
and
inc
out
mov
xor
jne
inc
adc
lea
sbb
jg
addb
mov
mov
das
jae
sarl
mov
jo
dec
aaa
shl
icebp
sub
add
push
addr16
push
push
leave
mov
in
es
shlb
dec
bound
addl
fwait
inc
inc
repnz
mov
mov
jns
jmp
xor
cmp
inc
pusha
push
loopne
fdivp
aas
je
rol
shll
jecxz
orl
out
rorl
mov
aam
std
jne
sarb
cmpsb
pusha
pusha
loop
testb
sti
push
fcomp
lret
shlb
dec
mov
pop
mov
aad
jge
pusha
andb
in
fistpl
bnd
xor
nop
int
dec
pusha
mov
loopne
je
shll
lods
inc
push
pusha
sub
cwtl
enter
lahf
lea
clc
arpl
jle
inc
lret
add
mov
push
sub
lret
xor
inc
ffreep
dec
mov
movsb
pusha
rorb
sub
pusha
dec
sub
add
fidivrs
stos
pusha
or
xchg
add
or
loopne
je
out
xchg
sbb
adc
sub
xor
adc
pusha
mov
push
and
loopne
add
jae
add
pop
jge
dec
add
adc
jecxz
insb
lods
push
and
fdivrs
jns
das
or
loopne
and
push
dec
dec
cli
mov
repnz
jne
pusha
loopne
ret
lods
loopne
push
pop
stos
inc
orb
in
out
mov
cmc
das
cwtl
test
and
loopne
scas
jp
adc
xchg
call
fisubrs
loopne
enter
xlat
icebp
inc
mov
loopne
or
andb
outsb
and
push
and
in
test
fadd
xchg
imul
fisubs
mov
xchg
mov
fcmovnbe
xor
mov
push
jmp
addb
xchg
cmp
xor
mov
push
jmp
lret
pusha
xor
repnz
xchg
jg
std
mov
cwtl
xchg
sbbb
adc
sbb
push
cli
icebp
arpl
lds
daa
mov
rolb
dec
cmp
enter
pop
cli
imul
and
push
sbb
shlb
push
fisubrs
and
into
aaa
jno
xlat
fisubs
out
ret
or
jmp
fnsave
inc
pop
dec
or
mov
loope
add
nop
mov
inc
subl
andb
mov
mov
push
sbb
jmp
loopne
ret
add
mov
push
into
call
pop
cmc
bound
xlat
test
pusha
out
fstps
das
or
and
xlat
icebp
push
inc
push
mov
mov
inc
add
mov
popa
in
inc
push
mov
push
and
sti
hlt
or
xchg
inc
in
sbb
mov
ss
jno
popf
xchg
dec
cmpsl
sbb
scas
mov
inc
lret
mov
add
inc
adc
and
add
movsb
pusha
loopne
mov
pop
mov
pusha
cmp
push
mov
push
and
or
mov
mov
aam
scas
jmp
add
inc
fwait
cltd
mov
mov
stc
pop
inc
leave
lods
loopne
push
std
lret
out
pop
cmp
sub
xchg
cwtl
addr16
loop
rolb
enter
aad
mov
adc
scas
inc
mov
xlat
push
inc
jae
xchg
lods
xor
add
daa
push
loopne
notl
xor
pop
dec
shl
mov
rol
iret
jp
mov
dec
loopne
loopne
cmp
roll
inc
mov
arpl
xor
adc
rolb
lods
ret
hlt
jns
movsb
add
andb
inc
mov
test
rcrl
and
insb
pop
add
sbbb
sub
mov
jp
push
xor
pop
arpl
mov
inc
mov
pop
cmpsl
arpl
push
mov
lahf
and
inc
xchg
fbld
inc
pusha
cltd
inc
mov
or
jb
xchg
mov
sbb
push
lds
inc
inc
mov
shll
loop
pushf
cmpsl
lahf
or
inc
inc
mov
enter
dec
jbe
sub
add
pusha
cmpb
sti
cld
outsb
mov
push
mov
stos
rolb
mov
jge
loopne
jae
in
fs
pusha
mov
or
add
mov
jnp
mov
push
pop
xor
idivb
clc
out
call
push
push
mov
nop
jne
push
mov
ljmp
stos
xchg
xchg
out
out
repnz
jns
push
dec
loopne
mov
push
das
loopne,pn
cmpsb
pusha
loopne
hlt
cs
shlb
and
inc
fucomip
scas
loopne
lea
jecxz
mov
and
cmc
and
ds
in
notb
pop
shll
dec
add
inc
lods
jnp
scas
inc
add
insb
pop
insl
pop
lock
add
rcrb
inc
add
sub
sub
push
inc
and
scas
push
sbb
jecxz
push
jecxz
out
div
or
andb
addb
mov
sbb
and
and
adc
notb
sub
mov
mov
lds
inc
dec
sbb
sub
inc
leave
xchg
mov
sbb
pusha
sarb
lret
je
xchg
in
pop
test
or
pushf
sub
fwait
out
rcll
xchg
xchg
pop
push
pop
cmp
call
aas
in
aaa
pop
push
cld
mov
stc
xor
inc
clc
sbb
fiaddl
int
and
cmpl
fimull
jae
loope
mov
and
and
xor
pop
fsts
sbbl
add
cs
loopne
or
inc
mov
xor
cmp
or
dec
mov
ficoms
cmp
das
rcrl
pop
cld
int
inc
pusha
outsb
nop
out
cmp
repz
pusha
sbbb
pushf
xor
and
mov
mov
jnp
mov
imul
inc
add
inc
mov
in
inc
loopne
rorl
adc
adc
andb
push
or
sahf
add
pusha
inc
and
mov
push
inc
mov
pop
ret
loopne
popa
jae
add
mov
inc
insb
xor
hlt
stc
sub
std
jbe
in
sbb
sbb
push
ljmp
fisubrs
push
loopne
or
loopne
call
xchg
adcl
xchg
mov
mov
xchg
ret
mov
mov
cmpsb
inc
andb
mov
js
mov
inc
int
std
out
inc
inc
rcrb
int3
cmp
sub
dec
repnz
sti
add
test
sub
lret
push
mov
aas
sbb
aad
sub
sbb
aas
mov
aas
push
mov
dec
or
inc
mov
jle
out
push
adc
fidivl
sarb
mov
rolb
in
push
push
sub
lock
jns
movsl
push
dec
mov
and
cmp
and
addb
rcl
jne
lret
mov
shlb
ds
cmp
stc
pop
sti
xchg
push
aaa
sbb
add
lods
add
inc
xlat
and
and
mov
jnp
adc
xlat
xchg
push
outsb
rcll
loopne
rolb
sahf
xor
inc
insl
xchg
jge
arpl
or
pusha
or
xchg
jecxz
div
mov
pop
mov
xor
and
rol
xchg
test
subb
jmp
fstpl
sarb
out
les
gs
pop
mov
pusha
sub
inc
push
popl
ret
jo
inc
sahf
scas
add
in
inc
mov
fwait
jle
pop
jbe
xor
adc
adc
and
clc
test
stos
andb
xchg
dec
dec
mov
adc
scas
outsl
add
test
add
jecxz
push
push
push
addb
fdivp
repz
dec
enter
loopne
inc
add
add
loopne
pop
ja
pop
dec
xlat
and
shr
push
mov
pop
int3
or
and
cmp
or
add
sbb
inc
lods
sbb
stos
xchg
cmp
inc
add
pusha
mov
xchg
inc
mov
shlb
js
stc
enter
mov
add
mov
int
loope
pusha
loopne
repnz
push
sbb
loopne
cmp
ss
fildll
or
push
stos
pop
mov
test
inc
daa
pop
imul
add
test
call
loopne
mov
sbb
testl
decb
jne
in
aad
push
mov
idivl
mov
and
dec
shrl
fmuls
mov
sbbb
pop
and
add
inc
push
loopne
mov
xor
in
inc
sbb
add
sti
dec
mov
add
mov
pop
add
lea
inc
jp
rolb
adc
mov
in
loop
ljmp
mov
sarb
sub
and
cmp
add
xchg
push
and
jo
test
inc
test
shl
cmp
jp
jp
pop
mov
scas
and
lods
mov
shlb
sub
inc
sub
ss
pop
sbb
in
mov
inc
mov
inc
and
insb
das
ror
jne
lods
mov
xchg
sbb
push
andb
sub
or
pusha
cmc
xchg
or
cli
xor
mov
daa
jno
cmp
jmp
jbe
mov
scas
pusha
shl
shlb
shr
cmp
sbb
and
push
push
rolb
sbb
adcl
push
into
mov
inc
xchg
mov
bound
dec
xchg
sub
adc
sub
and
movsb
inc
pusha
ss
rolb
sbb
rolb
pusha
out
out
es
and
inc
push
add
sub
jmp
mov
out
fcmovnu
leave
push
scas
add
or
loopne
sahf
mov
lret
cmp
sbbl
pop
loopne
xor
pusha
fildl
pusha
popf
iret
mov
or
add
sub
mov
pusha
push
stos
fcmovnb
and
scas
and
mov
movsb
add
cmc
ret
fmul
mov
mov
lea
push
fmuls
and
out
movsb
rolb
loopne
cld
sub
into
arpl
sahf
les
cmp
es
loopne
mov
pop
inc
cwtl
mov
sbb
xchg
mov
mov
and
dec
mov
shrb
outsb
mov
lahf
test
loopne
jbe
adc
pmaddwd
jp
sub
loopne
inc
insl
mov
test
aam
add
in
mov
pusha
call
adc
hlt
imul
add
xor
mov
jg
lcall
pop
sbb
add
pusha
mov
or
sbb
mov
punpcklbw
cmc
xchg
out
out
ss
xchg
pop
lock
or
push
aad
es
inc
rcrb
loop
pop
sbb
cmp
mov
mov
stos
loopne
cmpsl
dec
fisubl
loopne
scas
jo
xor
cmp
inc
mov
mov
xor
sbb
in
mov
fcmovnu
pusha
hlt
xchg
sarl
data16
or
pusha
push
loope
inc
leave
adc
add
sub
pusha
sub
add
lret
sub
lea
test
pop
clc
pop
adc
int
add
sub
inc
and
add
loopne
xor
loopne
add
pop
fnclex
cld
adc
ja
daa
nop
cli
add
add
sub
loopne
sub
and
jmp
clc
dec
in
ficompl
scas
ja
cwtl
pop
mov
test
testb
and
sub
adcb
mov
loop
out
sbb
and
and
pusha
jbe
decl
lret
and
loopne
arpl
scas
add
jecxz
xchg
loopne
and
pusha
sbb
sub
inc
jnp
xchg
add
lahf
cli
jae
push
ret
and
jb
jb
mov
pusha
xorb
dec
push
rolb
cmpsb
pusha
shrb
pushf
cmc
aam
popf
test
rclb
and
and
ret
jo
add
mov
and
and
cwtl
not
sub
imul
and
mov
arpl
mov
pusha
pusha
add
call
cmp
adc
xchg
pop
fildl
sbb
call
add
test
lods
push
cld
cmp
dec
mov
imul
cmc
pop
and
mov
and
repnz
shlb
xor
out
push
add
loop
mov
mov
and
mov
mov
xlat
sbb
pop
dec
hlt
xor
shlb
xor
insb
mov
stc
jne
cmpsl
adc
mov
cmp
cmc
dec
dec
and
je
aaa
xchg
orb
add
scas
lds
sbb
adc
sti
int3
lds
aad
inc
std
fbstp
dec
stos
clc
and
mov
shlb
test
ret
pop
iret
dec
incb
lret
adc
xor
loopne
cmp
psubsb
outsb
std
adc
add
loopne
inc
and
mov
jge
cmpsb
mov
out
push
mov
inc
outsl
sub
add
jmp
inc
jp
add
clc
fistpl
push
inc
fwait
push
sub
xchg
mov
mull
inc
jmp
iret
movsl
or
mov
int
idivl
cmp
cli
mov
cmp
cmpsb
mov
xlat
fsubr
nop
js
int3
rorb
and
sbb
push
shld
iret
dec
aam
repz
cmpsl
lock
add
add
mov
aaa
lahf
cmpsb
mov
imul
lret
das
imul
aam
and
sub
shlb
and
jbe
cmc
test
dec
sbb
inc
loopne
filds
pusha
pusha
mov
push
ret
jmp
xor
clc
and
mov
sub
sbb
or
xor
jge
pop
hlt
sar
and
shlb
shlb
lds
push
das
outsl
outsb
clc
sub
cli
push
xchg
mov
clc
push
cwtl
fsub
shrb
or
fsubs
pop
push
loopne
pusha
mov
addl
bound
push
mov
stos
andb
mov
mov
shlb
dec
pop
dec
dec
xchg
out
jno
xchg
idivb
add
add
dec
xchg
test
and
faddp
dec
rolb
es
mov
jp
fstpl
in
push
lods
pusha
add
fcompl
sub
mov
in
movsb
add
ret
ja
and
or
jae
ds
mov
rolb
pusha
mov
ds
imul
in
andb
or
icebp
jbe
in
sbb
jecxz
and
imul
xchg
jp
stos
pusha
pusha
jl
and
inc
and
popf
xchg
out
data16
pop
xor
js
or
sti
push
pushf
jecxz
inc
adc
mov
and
loopne
lcall
dec
or
loopne
pop
dec
jp
cmp
pop
imul
dec
or
and
test
xchg
cmp
sbb
stos
insl
fsubp
mov
andb
pusha
add
dec
pop
push
sbb
mov
pop
int
shlb
mov
jmp
push
sahf
jg
repnz
mov
add
ret
cmp
and
pop
in
in
nop
push
imul
inc
xlat
mov
out
inc
or
xor
xor
sub
and
loopne
pop
xor
imul
inc
jle
lods
andb
jns
cmp
mov
ljmp
rorb
add
mov
pop
push
jecxz
mov
ret
inc
xchg
in
and
or
mov
and
adc
insb
and
xchg
and
out
adc
xchg
adc
in
sahf
sub
mov
pusha
add
jnp
flds
pusha
addb
mov
and
sahf
and
cmpsb
loopne
ss
popf
jo
pusha
mov
mov
adc
jne
cld
pop
test
mov
shlb
jg
cwtl
test
movsb
inc
and
lods
and
rcrb
jo
mov
push
ret
div
add
mov
loopne
dec
push
andb
mov
out
cmp
sub
lahf
int
sub
inc
or
and
in
mov
adc
push
pusha
rclb
jne
fcmovnb
xlat
push
mov
je
into
sbb
test
rorb
mov
and
inc
push
js
lret
insl
ret
aaa
jge
addb
xor
xchg
push
out
orl
sbbb
and
add
pop
or
cmpb
and
mov
lods
add
and
xor
mov
shlb
mov
push
cmp
xchg
inc
data16
les
add
inc
loopne
sbb
inc
push
ljmp
pop
dec
mov
popf
cmpsb
and
in
into
shl
lock
arpl
add
inc
movsb
loopne
flds
lock
sti
fnstcw
inc
test
and
std
imul
mov
subb
stos
daa
incb
xor
imul
pop
push
fcmovne
ja
lods
addb
lcall
roll
bswap
mov
pusha
addb
mov
insb
xor
repz
out
loopne
shlb
cs
mov
mov
add
mov
loopne
or
and
xchg
enter
loopne
out
mov
pusha
repnz
addr16
aam
adc
xchg
sbb
pushf
rolb
rolb
les
pusha
inc
in
rorl
pusha
enter
and
mov
and
mov
add
loopne
adc
mov
pusha
pop
adc
dec
stc
xchg
aad
enter
add
and
or
add
dec
outsl
pusha
test
shrb
enter
cmp
cmpsb
rolb
int
arpl
sub
xchg
add
xchg
add
fcompl
mov
jne
stos
mov
les
rcrb
int3
add
pusha
jge
add
cmp
stc
fs
arpl
and
inc
inc
int
das
inc
lcall
jecxz
scas
mov
add
mov
inc
cmp
movsb
inc
loopne
cmp
jnp
sbb
shl
and
pop
shlb
push
hlt
sub
rolb
add
inc
mov
and
in
jnp
pop
adc
dec
leave
xor
jno
push
sahf
add
ficomps
ret
hlt
mov
mov
inc
and
mov
jb
rolb
cli
jno
mov
mov
pusha
call
cmp
push
lret
adc
andb
and
push
loopne
adc
icebp
mov
mov
pusha
inc
mov
sarl
data16
mov
jne
lret
dec
jp
push
or
aas
dec
push
fiadds
das
ret
dec
and
shrb
popa
mov
stos
addb
and
mov
lea
mov
in
pusha
rclb
lock
mov
fwait
in
push
mov
cmp
je
mov
sbb
pusha
rorb
cltd
inc
or
inc
sub
shlb
pop
sub
cmp
cmp
pusha
inc
add
mov
sbb
int
sub
sbbb
sbb
cld
aas
fsubrl
inc
jge
or
rclb
dec
xor
sar
insb
xchg
inc
std
mov
mov
and
lods
push
pop
xor
cmp
add
or
sbb
inc
jo
mov
out
fwait
and
lock
dec
mov
mov
bound
addb
rolb
pusha
jbe
jnp
lret
rorb
inc
iret
out
out
pop
loop
mov
pop
je
jp
pusha
add
push
mov
fsts
push
add
mov
movsb
loopne
call
das
dec
mov
jne
sub
inc
cwtl
xchg
cmpsl
xor
mov
in
lods
mov
loopne
jg
and
and
jno
in
inc
push
push
sub
aas
fsubrs
shlb
call
add
lcall
pop
out
cmpl
in
inc
mov
int
movsb
and
and
loopne
rolb
pop
push
ds
fsubl
rolb
pop
jl
jne
icebp
mov
jns
pop
shl
mov
push
and
ret
and
stos
pusha
and
inc
adc
mov
push
push
shlb
jmp
xor
aas
addr16
jle
push
pop
mov
and
pusha
push
int
loopne
or
rclb
dec
outsb
decl
stos
xchg
ret
loopne
jo
lock
and
dec
mov
std
popw
xchg
insb
mov
jno
add
shlb
or
inc
jle
jae
pusha
pusha
int
rcrw
fnsave
inc
dec
xor
imul
int
les
mov
cmp
pop
jecxz
sbb
insl
pop
jg
sbb
loopne
test
and
lcall
mov
pop
into
inc
jg
add
and
xor
add
rclb
pop
sub
into
mov
inc
inc
mov
shlb
mov
leave
cmp
movsl
daa
add
mov
mull
rol
mov
push
xchg
orl
and
loopne
adc
and
rol
mov
cmpsb
inc
inc
addl
loopne
movsl
aas
pop
aas
cmpsb
pusha
rcrb
inc
orb
loopne
cmp
loopne
mov
pop
inc
mov
cmc
aas
rolb
lds
out
aam
mov
lcall
inc
popf
or
and
pop
add
sbb
mov
inc
mov
push
add
icebp
cmp
repnz
or
orb
mov
call
mov
movsb
and
adc
inc
notb
lahf
sbb
shll
loopne
sub
inc
and
loopne
aaa
mov
je
inc
add
or
and
jecxz
decl
fs
push
adcl
loopne
je
movsb
add
sub
add
shlb
xor
inc
das
sbb
test
mov
aaa
mov
sarb
pusha
mov
jbe
inc
add
aaa
or
add
loopne
or
pusha
imul
sbb
insl
xor
xor
hlt
test
rcl
fs
in
mov
in
and
mov
inc
ds
mov
mov
add
pusha
testl
and
and
subb
out
xor
lds
call
loopne
sbb
hlt
pop
sub
movsb
loopne
cli
out
xchg
sbb
mov
addr16
jp
outsb
push
daa
jge
addb
sbb
lcall
arpl
inc
xchg
xor
xchg
mov
mov
add
loopne
lret
jg
hlt
add
adc
pop
stc
fwait
jno
push
sbb
push
out
or
fcmove
and
neg
or
sbb
lods
fdivl
sub
inc
hlt
add
dec
add
mov
repnz
rolb
add
inc
stos
shlb
mov
jg
jg
bound
insl
fstl
or
add
push
mov
lret
mov
mov
and
mov
jle
inc
inc
insb
fs
std
xor
aaa
dec
inc
scas
jmp
aad
mov
insl
stc
shrd
rorb
add
lcall
cmp
cmp
inc
xchg
cmp
aaa
iret
xchg
dec
cmpsl
in
imul
mov
inc
rclb
push
inc
daa
dec
push
push
pop
in
mov
iret
movsb
mov
inc
mov
sbbb
jecxz
xor
push
addb
lods
pusha
cmpb
js
ud1
and
add
addb
mov
mov
cmp
and
and
gs
sub
dec
loopne
jbe
jnp
adc
or
sbbb
inc
js
addb
inc
inc
in
jb
jne
movsb
rolb
mov
shlb
fistl
add
mov
mov
and
inc
pusha
add
call
ret
cs
loopne
and
mov
pop
xchg
cs
rcrb
fldenv
shlb
and
and
cmp
mov
movsb
mov
loope
xchg
clc
push
les
mov
roll
xor
pop
ret
aam
lahf
push
scas
pop
cltd
sbb
and
jnp
and
pop
push
frstor
inc
daa
cmpsb
mov
add
xchg
loopne
lock
ljmp
mov
addb
push
lret
ret
and
mov
mov
loop
insl
pop
push
push
mov
addb
pusha
cltd
leave
mov
jns
cmpsb
inc
mov
hlt
repnz
inc
subb
mov
dec
lods
xor
add
add
adc
mov
mov
push
stc
sbb
ds
pop
or
xchg
xchg
scas
mov
movsb
add
out
dec
add
loopne
insl
fwait
inc
negl
shll
xchg
xchg
rcl
and
rcl
jp
scas
loopne
sub
add
lods
inc
sbb
mov
hlt
lahf
fwait
iret
xor
loopne
lds
arpl
daa
jbe,pt
in
or
inc
or
mov
and
fcmovne
mov
lgs
lea
in
pushf
inc
push
mov
push
in
add
xchg
add
jo
int3
adc
mov
add
rcl
inc
cli
hlt
jne
aam
outsl
jnp
in
and
mov
sbb
or
mov
mov
pusha
testb
cli
xchg
test
mov
ret
addb
pop
in
xchg
push
fnstsw
inc
mov
push
aam
inc
add
sub
adcb
in
stos
and
cmc
pop
sarb
mov
mov
cmpsl
dec
insb
push
cmp
xchg
lds
fwait
pop
push
and
rol
xchg
js
js
test
sar
add
testl
in
les
push
mov
cmp
mov
inc
mov
rolb
push
mov
sti
rclb
mov
jae
or
rclb
leave
add
inc
xor
fs
idiv
pshufw
shr
das
loop
add
inc
cmp
push
outsl
mov
test
jl
mov
add
add
shl
inc
pusha
and
int
mov
pop
cmp
iret
mov
loopne
test
inc
add
mov
aam
push
sub
rorb
lcall
xor
pusha
and
mov
mov
ljmp
and
pop
sub
push
lock
inc
das
or
rcrb
sub
in
push
popa
cmpsb
rolb
sahf
sub
sar
andb
adc
lods
mov
xor
loopne
push
jno
mov
and
cmp
xor
negb
jp
pusha
pusha
pop
mov
xchg
sbb
mov
dec
inc
push
jb
mov
and
les
mov
push
ficompl
mov
icebp
jmp
sub
daa
cmp
xor
mov
rolb
jns
lods
daa
sbb
repz
enter
and
mov
nop
andb
lods
loopne
cmp
in
mov
inc
out
cmpsl
cs
add
push
adc
mov
push
jecxz
sti
or
sbb
lret
pop
ja
xor
loope
fcomps
add
and
push
inc
clc
mov
adc
dec
in
sub
aaa
xor
sti
daa
xor
dec
pop
cmp
dec
jb
xor
push
jns
push
loopne
notl
popa
and
add
push
dec
int
inc
mov
and
add
and
insb
aaa
std
jle
sbbl
stos
dec
lea
and
and
fcmove
sbb
js
ret
or
cmp
sbb
fadds
and
xchg
push
addr16
sbb
mov
inc
aas
cmpsb
loopne
addb
inc
frstor
mov
pop
cmp
ffreep
shlb
cmp
or
add
add
add
