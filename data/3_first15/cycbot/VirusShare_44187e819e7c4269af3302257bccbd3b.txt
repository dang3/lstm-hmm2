test
mull
jb
and
jmp
mov
clc
push
xor
add
xchg
call
add
mov
or
test
mov
dec
xchg
add
mov
add
add
inc
add
add
push
add
xchg
add
add
cwtl
mov
imul
data16
out
add
jb
dec
data16
scas
jp
add
and
mov
pop
aas
push
add
xlat
std
xor
jmp
test
jne
in
repz
mov
aad
ljmp
xorl
push
add
int
push
add
sub
add
add
mov
push
sbb
jle
xchg
lret
rolb
sub
jg
clc
add
mov
addr16
add
aam
pop
mov
inc
cmp
sbb
pop
in
xor
imul
jbe
sbb
mov
add
cmp
cmp
lahf
xchg
add
jns
add
jbe
jbe
jle
pop
mov
insl
add
push
xlat
mov
ja
push
daa
inc
add
push
adc
scas
out
add
add
push
fistps
add
insb
test
das
fstp
dec
pop
adc
sub
jo
or
fs
xor
jns
pusha
add
data16
cmpsb
add
movsl
and
pop
aam
add
stos
cmp
pop
mov
fdivs
lret
fiaddl
add
fldl
aas
mov
lods
mov
add
js
add
inc
loop
or
jg
dec
or
inc
add
add
add
add
addr16
jb
mov
int
aad
mov
hlt
add
mull
xor
pop
scas
xchg
add
loop
push
add
fnstcw
xchg
xchg
imul
xor
ja
xor
xor
dec
xor
add
fucom
jmp
cmc
xor
and
mov
or
addb
add
or
jmp
pop
push
out
push
add
je
pop
lods
mov
daa
fnstenv
adcl
repnz
add
add
mov
push
stos
jnp
or
or
add
add
and
inc
add
dec
imul
add
test
add
sbb
fcmovnb
add
movsl
or
add
add
mov
sub
xlat
hlt
add
add
push
stos
fstpt
jno
add
jbe
adc
in
mov
add
sti
movl
add
lods
sarl
clc
clc
dec
aas
dec
addb
lea
dec
inc
cmp
add
add
sbb
add
mov
mov
mov
cmpsb
add
adc
stos
sbb
je
test
loopne
popf
stc
xchg
add
std
repz
add
out
jnp
add
int
ficomps
jns
add
mov
add
rolb
jge
insb
sbb
testb
sub
mov
fcmovbe
cwtl
leave
divl
adc
jp
repnz
cwtl
mov
cs
aas
cwtl
xchg
add
repnz
dec
pop
leave
stos
xchg
add
fstp
mov
add
add
shrl
mov
adc
add
lret
add
lret
mov
add
cmp
loopne
insb
push
pushf
xchg
pusha
add
sahf
mov
add
bound
mov
and
shr
add
movsb
add
add
add
movsl
je
les
pop
mov
sarl
mov
sbb
jle
adc
add
mov
arpl
stc
imul
repz
adc
add
mov
ret
fstpl
adc
fldl
inc
add
rolb
fdivrp
int3
pop
mov
add
pop
cld
inc
add
jp
add
addb
add
add
add
add
scas
jge
bound
mov
xchg
push
xchg
add
lret
xchg
add
add
loop
xchg
jge
dec
pop
mov
leave
dec
add
mov
push
add
inc
sti
push
add
sbb
in
fdiv
loopne
xor
out
add
xchg
or
push
add
add
pop
and
sub
add
add
stos
sbb
cltd
or
mov
add
add
pop
cli
mov
push
push
xchg
popf
outsb
sub
add
add
mov
cli
pop
add
add
das
imul
call
aad
dec
and
or
push
addb
add
add
sbb
xor
mov
aad
in
mov
adc
lods
adc
mov
pop
dec
jg
paddsw
mov
jmp
pop
in
gs
mov
sbb
pop
fidivl
inc
add
cmp
inc
add
cmp
int3
adc
add
mov
xchg
add
lods
daa
cwtl
sub
aaa
dec
enter
out
add
addb
in
push
sbb
mov
push
add
push
jl
repnz
jecxz
imul
add
xor
bound
mov
addb
add
mov
adc
sbb
add
xor
mov
cmp
pop
mov
add
add
add
cmp
add
in
add
arpl
aas
into
outsb
jle
sbb
add
nop
add
int3
mov
pop
xchg
sahf
xlat
into
scas
out
add
push
mov
or
adc
loope
inc
cmc
testb
add
cmp
push
add
nop
add
and
mov
loopne
jbe
stos
cmc
movsl
cld
loope
inc
add
xchg
xchg
jns
out
sahf
add
mov
sub
pop
out
bound
mov
add
mov
push
dec
in
icebp
fcoml
xorl
testb
popf
jbe
dec
mov
add
arpl
stos
jmp
jle
data16
push
add
pop
sub
add
add
lea
mov
pusha
add
les
cmc
rolb
lcall
xchg
add
dec
xor
add
rolb
ficompl
cmp
or
dec
push
add
fidivrl
add
mov
sbb
add
push
inc
mov
push
inc
ret
or
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
xchg
add
xor
rolb
addb
pusha
add
sub
xor
les
inc
add
adc
test
data16
add
sub
sbb
sub
adc
add
cld
fcompl
loopne
sbb
sub
out
int
stos
in
and
xchg
ja
hlt
add
imul
ret
mov
cltd
mov
add
pop
sbb
dec
loope
addb
test
pop
adc
jb
pop
pop
aad
add
pop
push
mov
or
int3
xor
clc
dec
inc
add
fdivr
lods
aad
xchg
and
add
stos
push
call
mov
add
lods
shrl
pop
sub
add
xor
or
add
jae
xor
cmpsl
xchg
add
mov
mov
fbld
shll
adc
out
add
add
mov
mov
and
mov
add
pop
sub
xchg
dec
jnp
add
add
add
imul
flds
add
inc
add
ja
xchg
add
into
push
add
fwait
iret
loope
and
add
cmpsl
sbb
mov
inc
xlat
in
and
aaa
idivl
push
pop
mov
or
push
outsb
aam
xchg
mov
fnsave
sub
dec
arpl
aaa
pop
mov
rolb
pop
test
rcrl
lock
or
dec
mov
mov
add
arpl
add
adc
lock
add
adc
or
and
jnp
nop
add
add
dec
int
cli
lret
test
mov
add
add
jnp
test
mov
xor
jle
inc
add
push
add
jmp
sub
push
clc
pop
sub
add
addb
das
xchg
xchg
call
pop
pushf
jle
push
push
fwait
inc
int3
ljmp
add
add
sub
pushf
cs
push
jle
add
cmp
add
nop
add
pop
lods
out
add
jge
add
add
je
sub
cli
enter
push
repz
dec
cmp
add
jo
pop
adc
push
add
hlt
add
jecxz
pop
insb
bound
mov
add
stos
push
add
and
add
mov
add
add
loope
add
xchg
add
add
inc
insl
out
adc
mov
adc
add
mov
add
cmp
aad
cmp
inc
add
stc
inc
add
js
mov
movsl
div
add
add
or
add
pop
aas
clc
in
lods
cltd
inc
loope
or
cmp
dec
xor
aas
inc
xchg
cltd
rolb
fsubl
mov
add
and
mov
loop
sub
add
add
test
add
data16
add
push
add
mov
test
push
sbb
add
mov
add
push
loop
aam
fsubrl
sub
lahf
sub
or
and
das
mov
add
add
xor
fwait
cld
data16
add
pusha
add
fdivp
jge
cmc
stos
lods
aaa
mov
xchg
push
call
movsb
add
push
sbb
push
mov
aam
sub
xchg
mov
lods
push
jmp
xor
add
nopl
and
add
out
pop
mov
jno
add
xchg
add
stc
sbb
fcmovu
addb
test
inc
mov
adc
cmp
fdivrl
mov
pop
sbb
inc
xchg
inc
push
add
add
mov
nop
add
add
mov
add
mov
stos
mov
add
xchg
jae
repz
bound
mov
pop
push
add
pushf
nop
add
mov
cltd
in
aaa
xchg
sbb
movb
mov
ljmp
rolb
cmc
and
ret
sbb
mov
hlt
add
add
or
sub
add
inc
add
in
pop
int
and
mov
mov
mov
xor
add
or
jae
xchg
add
or
mov
sbb
add
mov
daa
out
jne
sbb
daa
mov
xchg
sbb
add
add
cmp
call
xor
test
mov
or
mov
mov
add
add
push
add
xchg
mov
push
add
pop
lea
xchg
pop
int3
test
adc
or
add
dec
mov
loopne
mov
add
les
insl
lea
setle
prefetch
add
jnp
add
sub
add
add
popf
jnp
mov
xor
add
fwait
push
cmp
add
jno
adc
mov
aad
add
or
add
add
cmc
iret
add
adc
dec
popf
jle
pop
cs
fwait
ljmp
dec
sub
add
add
jae
stos
xchg
add
jo
fiadds
sti
rolb
repnz
add
or
add
add
test
repnz
sub
mov
push
cmp
add
jae
clc
adc
jns
add
sbb
sub
inc
add
mov
loope
rolb
add
mov
lock
add
push
add
add
in
jle
loope
js
dec
ds
movb
add
pop
insl
xor
imul
add
xchg
jge
cmc
out
xor
das
add
mov
pop
xchg
add
push
add
stos
stos
add
mov
nop
add
jb
sub
push
add
mov
xlat
rolb
xchg
add
and
cli
out
loop
adc
cmpsl
imul
and
mov
mov
pushf
pushf
hlt
add
mov
mov
cmp
rolb
and
mov
loopne
fdivp
cltd
lahf
test
xor
mov
jg
enter
add
dec
enter
dec
jne
add
dec
fildl
push
add
add
pop
dec
push
sub
pushf
cmp
add
mov
mov
aad
mov
cli
xor
mov
arpl
inc
outsb
jl
add
add
loopne
dec
inc
add
add
or
mov
add
xor
or
fisttpll
hlt
add
add
add
jg
add
test
jno
sbb
loop
xlat
push
add
add
test
out
stc
pop
push
add
sub
rolb
add
xchg
add
mov
int
mov
add
out
lret
add
mov
ja
add
add
add
mov
xchg
addb
add
add
add
add
inc
in
push
add
adc
push
add
cwtl
or
std
push
or
std
stos
out
arpl
divps
cmp
inc
add
mov
mov
fsts
call
jne
paddw
add
jns
add
mov
push
add
popa
gs
iret
push
add
nop
add
adc
lock
inc
add
add
arpl
cmc
sti
aad
cmp
mov
push
rolb
xlat
mov
rolb
add
insl
inc
add
jl
dec
loope
add
sub
les
xor
push
add
dec
addr16
addb
loopne
test
mov
xchg
xlat
sub
stos
adc
dec
testb
jg
add
add
add
add
scas
cmc
cmc
je
push
dec
call
mov
mov
add
jb
adc
icebp
fisubl
push
add
add
mov
add
enter
stos
push
add
mov
add
cmp
xor
sub
cmp
sbb
fnstenv
cmp
fldl2t
sbb
add
daa
add
mov
fidivs
add
cmpsb
add
add
add
mov
mov
scas
hlt
add
movswl
add
pop
add
jae
add
add
add
add
add
sbb
stos
and
clc
jp
ds
xchg
ja
add
add
add
sbb
sub
jmp
push
fmuls
add
mov
pusha
add
push
inc
pop
lods
jb
mov
xchg
add
or
scas
pop
pop
int3
data16
add
mov
jae
sbb
insl
rolb
lret
xor
or
xor
add
lock
pop
jge
push
add
push
add
mov
dec
jl
cltd
adc
and
mov
add
sti
lods
cld
outsl
mov
jbe
test
xchg
pop
outsb
push
dec
xchg
add
shrl
out
mov
sbb
lcall
mov
pop
js
outsl
popa
sub
xchg
xchg
push
add
add
frstpm(287
fsubs
addb
inc
add
add
xor
push
mov
shrl
add
dec
and
negl
mov
and
mov
mov
add
js
rolb
pop
repz
add
ljmp
add
pushf
movb
or
testl
adc
or
insb
and
movb
add
popl
xchg
add
clc
in
cmp
testl
add
mov
add
loopne
lods
pop
insl
xchg
data16
mov
nop
add
add
mov
mov
lds
mov
add
xchg
add
push
add
push
add
add
xchg
dec
or
add
dec
mov
les
loop
fwait
mov
repz
and
mov
addr16
or
sbb
xor
sbb
adcl
les
cmp
add
add
ja
cmpsb
add
int3
pop
inc
lahf
in
and
mov
add
sahf
fdivs
xor
push
pushf
jmp
mov
push
jmp
mov
add
js
lods
and
mov
add
xor
push
xchg
jnp
add
mov
scas
into
adc
jns
push
add
shrl
mov
add
add
sbb
int
add
mov
pop
repnz
add
jbe
cmc
test
xchg
addl
add
aas
inc
push
xchg
mov
pop
in
or
bound
mov
js
lods
adc
add
rolb
out
or
add
ja
dec
xchg
add
add
js
popf
lea
lret
sti
ret
mov
adc
hlt
add
xchg
xor
xchg
add
jmp
add
jns
mov
addb
js
pop
lods
movsb
add
inc
add
aad
movsl
and
jo
rolb
adc
lahf
fldcw
in
add
add
mov
testb
mov
arpl
pop
jno
add
add
and
mov
and
mov
xor
loop
sti
out
add
repnz
push
add
cmp
outsb
push
add
add
out
int3
jae
add
add
and
mov
add
test
jl
add
pusha
add
add
in
inc
xchg
and
push
add
add
les
mov
lret
inc
sub
fdivrs
aam
xchg
jns
add
iret
les
mov
sub
das
fildl
add
loop
pop
lods
jle
and
popf
pop
fwait
mov
fdivrl
mov
add
addb
lcall
push
aam
add
mov
add
or
mov
add
dec
xchg
add
mov
data16
jle
bound
mov
roll
fldl
and
mov
add
add
cmp
add
sub
ljmp
pop
adc
mov
add
add
or
xchg
add
add
add
pop
mov
sbb
cltd
movb
or
data16
icebp
addb
add
push
nop
add
rolb
xlat
dec
and
add
mov
js
das
xor
fwait
test
mov
xor
add
push
add
mov
mov
dec
mov
sahf
xchg
add
add
add
sbb
add
mov
or
add
xor
jnp
add
nop
add
add
add
cmpsb
add
stc
flds
push
jg
and
xchg
mov
xor
testb
pop
jb
lea
nop
add
jbe
inc
fisttpl
jnp
not
add
imul
cmp
out
outsb
fidivrs
jbe
mov
mov
jb
lret
scas
outsb
adc
addl
shll
lret
inc
add
mov
outsb
loopne
gs
jb
adc
mov
in
mov
add
mov
mov
push
add
pop
mov
mov
daa
xchg
add
add
shll
cs
add
ret
xchg
pop
push
lret
sarl
sbb
dec
movb
add
sti
leave
push
cmp
scas
pusha
add
mov
jp
mov
cwtl
xchg
pop
mov
mov
jne
add
mov
add
cmc
mov
rolb
mov
js
gs
add
add
add
mov
cld
or
stos
lock
aaa
and
add
sbb
jns
xor
cmp
xchg
push
xor
push
add
gs
add
mov
inc
add
add
xchg
add
add
addb
add
std
jo
sahf
xor
xchg
jae
data16
in
add
or
adc
in
cs
mov
sbb
xchg
add
add
add
push
add
xchg
cmp
pop
xchg
add
add
rolb
in
cmpsl
dec
cld
pushf
scas
data16
push
add
mov
in
inc
lea
stos
andl
in
mov
add
add
xor
adc
cmp
add
or
sti
mov
fwait
mov
rcrl
add
inc
push
jg
data16
dec
movb
add
mov
arpl
mov
loopne
sub
pop
push
imul
loop
xchg
fs
mov
xchg
std
mov
add
pop
sbb
add
mov
cmp
add
add
add
ss
dec
add
push
add
mov
add
add
ja
add
inc
add
ret
jae
add
movsl
loope
add
push
add
ficoms
and
mov
jp
add
adc
push
pop
jbe
arpl
add
add
sub
push
aam
daa
mov
add
cli
pop
ljmp
adc
pushf
xchg
dec
mov
or
push
addb
mov
pop
lds
add
xor
pop
ss
loopne
xlat
mov
add
push
ljmp
aad
add
lret
pusha
add
mov
in
xchg
add
and
mov
mov
add
mov
jne
pop
or
and
jne
sub
add
sbb
jo
dec
cli
popf
adcl
sub
xchg
testb
lods
ret
add
bound
mov
bound
mov
push
fiaddl
xor
adc
fistpl
sbb
add
int
add
or
pop
in
shll
pusha
add
hlt
add
or
dec
jle
add
xchg
add
mov
push
add
pop
jmp
mov
les
dec
addb
inc
clc
stc
xor
mov
arpl
xchg
pop
push
add
sbb
inc
arpl
ret
mov
jne
pushf
add
mov
push
mov
xchg
cmp
push
or
mov
fwait
rolb
mov
mov
adcl
add
ljmp
addb
mov
xor
sbb
xor
adc
clc
les
filds
mov
pop
imul
jl
out
aam
dec
shr
lods
add
add
and
mov
mov
ret
addb
add
stos
out
sbb
add
jae
pusha
add
add
daa
pop
adc
jne
add
sti
fdivrl
sbb
test
adc
ficoms
add
add
in
lret
inc
add
sub
dec
fdivrl
push
add
adc
dec
cmp
add
or
clc
mov
jle
imul
fidivl
adc
adc
icebp
mov
test
pop
xor
inc
mov
and
mov
testb
sbbl
jae
add
xlat
shll
pop
fcoml
push
add
out
pop
aad
loopne
mov
imul
add
add
lcall
int3
xor
add
mov
add
add
and
mov
inc
add
ret
add
in
mov
jmp
rcll
mov
mov
mov
jo
sbb
jmp
addr16
cwtl
jo
inc
into
or
jg
add
add
pop
testl
lret
sub
mov
cltd
push
add
aad
fidivl
add
movb
xor
dec
inc
add
dec
std
dec
mov
add
out
xchg
xlat
add
add
add
xchg
fsubs
add
jns
pop
loop
cld
hlt
add
rolb
inc
add
add
ds
mov
hlt
add
add
or
and
das
addb
aad
add
jo
sbb
add
add
movb
pusha
add
add
sbb
pop
pop
lds
imul
push
add
add
mov
push
jle
xlat
add
shrl
out
and
jecxz
test
mov
clc
idivl
dec
outsb
mov
mov
add
les
adc
data16
push
outsl
dec
cld
or
pop
leave
cmp
pop
rolb
push
add
mov
sbb
or
mov
jmp
jg
call
repnz
add
add
fsubrs
push
add
rolb
in
pop
add
jmp
xchg
fucomi
push
add
mov
mov
insb
mov
imul
mov
add
mov
sbb
add
add
outsb
pop
and
mov
add
lahf
cmp
je
cmpl
lock
add
mov
jl
pusha
add
and
mov
imul
or
mov
xor
addr16
add
push
jmp
push
add
add
icebp
aaa
push
int
fs
add
stos
add
sub
add
jb
add
mov
incb
add
mov
push
add
pop
sbb
sbb
in
add
add
add
add
add
add
add
cmpsl
mov
fsts
xchg
jecxz
dec
ljmp
add
add
or
mov
add
out
add
xchg
add
dec
push
add
xor
sub
add
int3
in
jle
pushf
add
cmp
test
insb
shll
mov
call
mov
add
loopne
mov
lods
int
xchg
xor
lods
icebp
out
imul
movsl
cmpsb
add
sbb
mov
inc
jae
cmp
ret
scas
or
mov
xchg
or
add
push
add
dec
out
xchg
and
cmc
andnps
push
jge
cmc
mov
loopne
pop
pmaxsw
jmp
mov
mov
sbb
cmp
add
iret
dec
push
add
mov
arpl
fwait
aaa
jg
enter
add
popa
cmc
and
mov
xchg
push
add
dec
insl
repnz
and
clc
data16
add
add
addr16
lea
ret
push
stc
mov
add
test
and
in
cmp
xor
push
addr16
pop
icebp
stos
jno
mov
add
jle
or
xchg
add
cmp
add
and
mov
lods
push
add
add
dec
mov
fmull
out
xor
arpl
dec
cltd
xchg
add
or
mov
mov
jnp
test
push
xor
mov
aad
jecxz
jg
xchg
rol
inc
add
adc
adc
xchg
sbb
cmp
ret
xchg
and
pop
cwtl
shl
rolb
xor
addb
cmp
shll
mov
aaa
loopne
xor
add
sub
test
push
add
add
movb
add
add
cmp
icebp
xor
pop
xor
mov
add
add
je
pop
xchg
outsl
dec
inc
add
cltd
sub
sub
xchg
pop
call
lret
int
call
lock
mov
stc
jno
ss
jno
add
or
jne
int
pop
dec
or
outsb
jno
pop
push
dec
icebp
dec
lock
std
popa
pop
int3
pop
mov
js
stc
add
cmpsl
fcmovne
rolb
add
gs
xchg
je
cmp
add
push
add
fwait
test
mov
add
loop
sahf
pop
and
clc
bound
mov
inc
mov
inc
add
mov
cmpsb
add
mov
std
iret
push
add
push
pop
xor
add
xchg
iret
jb
or
hlt
add
sub
cmp
nop
add
add
pop
pop
jbe
movnti
add
inc
jns
add
add
add
je
push
add
jno
add
imul
inc
add
add
xlat
xchg
push
xchg
pop
stos
jge
insb
dec
cmpsb
add
fucom
add
pop
jmp
sub
jl
mov
add
add
add
cmp
sbb
push
add
add
icebp
aaa
popa
into
xlat
mov
into
or
repnz
mov
insl
add
dec
pop
lods
syscall
xchg
add
add
mov
xchg
xor
jns
sbb
movsb
add
leave
ds
loope
push
movsb
add
add
fsubrs
add
mov
insb
rolb
sbb
add
xchg
aas
ss
xor
sti
adc
add
add
add
loop
pop
add
dec
cltd
lret
mov
ss
into
and
mov
outsb
cld
call
pop
sbb
movsb
add
rcrl
mov
jge
add
add
xchg
add
dec
out
repz
sub
add
add
add
xor
inc
add
or
movsl
cmpl
stos
addr16
fucomip
adc
ficompl
add
out
fdivs
mov
addb
repnz
outsb
pop
add
mov
or
ret
cmp
rolb
add
jle
sub
je
jno
mov
pop
adc
add
inc
add
add
push
inc
add
loop
sub
add
mov
add
jmp
pop
mov
mov
mov
push
adc
pop
pop
pop
jno
lods
sub
vpsubusw
add
inc
jecxz
insl
js
add
add
add
lea
xor
adc
addb
lods
jae
mov
add
into
adc
sub
jle
cmc
ja
add
repz
and
lea
add
add
add
mov
jp
add
add
add
add
add
and
mov
mov
jg
mov
outsl
fsubrl
mov
add
inc
out
icebp
fcompl
lods
pop
das
fidivs
add
jo
aad
add
xchg
add
pushf
cltd
mov
iret
pop
dec
add
out
add
aas
pop
je
jne
add
out
push
clc
lea
addb
and
sbb
repnz
add
imul
add
jl
add
jo
insb
xor
add
clc
icebp
sub
rolb
stc
je
add
add
cmpsl
xlat
outsl
push
add
add
sub
add
add
add
mov
cmpsl
mov
test
inc
xchg
xchg
add
arpl
add
add
add
add
add
pop
jecxz
add
xchg
cmp
rolb
mov
push
add
xchg
add
add
sbb
add
add
sub
jecxz
add
add
add
mov
cmp
dec
mov
mov
cmc
cmp
sub
out
jp
xlat
add
aaa
jp
add
mov
je
icebp
jbe
clc
push
sahf
bound
mov
scas
addb
fisubs
add
mov
inc
add
add
movsl
mov
add
add
add
mov
jmp
int3
mov
and
mov
dec
clc
push
cli
in
sbb
cli
and
arpl
clc
mov
dec
repz
or
lods
pop
ljmp
aas
int
es
jnp
insl
icebp
push
add
fdivs
inc
add
fistpl
and
inc
add
insl
out
xchg
jne
aaa
outsl
xor
ret
sub
outsl
adc
add
ja
and
jae
cli
cld
icebp
adc
lcall
dec
pop
inc
cwtl
shll
add
push
add
hlt
add
cmp
cwtl
insl
mov
int
add
mov
push
add
pushf
sub
and
cmp
add
add
lret
jge
add
add
jmp
cwtl
sti
loop
fldenv
push
add
icebp
sbb
test
add
cmc
xor
inc
add
add
add
orl
xchg
sub
add
add
add
add
add
add
add
push
or
popa
push
jmp
popf
lret
xchg
xchg
add
mov
cmp
sub
stos
xlat
jge
add
shr
sar
add
inc
jle
sahf
cs
jbe
icebp
lock
add
movsl
xor
add
add
shll
cmp
push
add
stc
sub
add
lds
add
add
mov
add
rolb
jmp
add
mov
lret
stos
stos
pusha
add
repnz
aaa
inc
add
insb
dec
into
int
sub
xor
xor
aad
mov
add
push
sbb
adc
stos
data16
lods
mov
lock
pop
pop
jbe
nop
add
add
les
mov
test
add
dec
adc
xor
add
outsb
leave
call
inc
add
mov
xor
add
sub
popf
dec
cld
mov
xchg
add
out
in
aas
imul
xchg
sti
mov
adc
lds
cmp
loopne
icebp
fxch
push
mov
add
fsubrl
add
sbb
and
mov
popf
adc
cmpsb
add
add
mov
lds
pop
jg
add
or
add
add
push
add
add
add
add
scas
mov
fnstsw
and
mov
add
lcall
cs
ljmp
hlt
add
and
mov
mov
frstor
mov
mov
pcmpeqw
add
pop
push
pop
xchg
add
add
daa
frstor
jge
add
pop
repnz
loop
or
push
add
aas
sbb
add
add
addb
fnstcw
out
or
mov
stos
jl
add
das
cmpsb
add
test
dec
fidivl
mov
add
mov
sbb
xchg
stc
jno
add
xchg
push
add
add
ja
jg
dec
rolb
in
add
push
add
sub
iret
ljmp
jnp
add
xchg
add
jmp
mov
lods
or
pop
xor
aam
xchg
fcmovnu
inc
fists
fadds
mov
rolb
adc
enter
cmp
mov
mov
test
rolb
push
fmulp
inc
push
push
add
adc
push
add
add
decb
pusha
add
mov
inc
add
repnz
mov
xchg
add
add
scas
movb
mov
push
cmp
jge
xor
or
mov
mov
add
add
jp
lock
inc
add
add
daa
movb
adc
mov
xor
xor
jo
dec
mov
add
fistpll
je
sbb
add
mov
sbb
inc
add
out
aam
sti
dec
loopne
in
add
mov
pop
xor
and
sbb
in
dec
test
mov
adc
aaa
ficoms
add
add
push
add
shll
mov
dec
inc
dec
and
mov
leave
dec
addr16
mov
dec
mov
les
xchg
cmp
push
sub
and
hlt
add
add
add
outsl
add
adc
mov
sbb
add
mov
sbb
test
jns
add
add
xchg
add
aam
mov
cli
add
mov
dec
lahf
decb
xchg
out
gs
add
inc
xchg
jecxz
mov
dec
xchg
mov
addr16
inc
fcompl
addb
fldcw
mov
lret
add
in
in
sti
das
stos
dec
jbe
xor
in
jle
lods
push
add
add
add
xchg
aas
pop
lds
scas
outsl
jne
pop
mov
add
jbe
cmc
frstor
shll
or
addb
mov
mov
cltd
mov
mov
add
mov
add
scas
leave
push
stos
stos
inc
pop
pop
mov
add
arpl
add
fdivl
add
mov
xlat
pop
dec
or
pop
add
movb
add
mov
fldl
pop
xor
add
test
jne
push
add
popa
add
pushf
mov
or
add
cmp
add
adc
adc
push
cmp
add
test
mov
add
add
addb
add
sub
add
sub
add
addb
xlat
jp
jecxz
add
add
mov
mov
iret
mov
xor
inc
add
inc
push
add
sub
cmp
rolb
mov
fisubrs
insb
stos
fst
add
push
add
add
loop
insl
sub
adc
cwtl
xor
add
dec
or
inc
add
jnp
mov
test
ljmp
outsl
mov
nop
add
add
adc
mov
add
scas
repnz
and
mov
add
add
testb
add
or
jge
addb
leave
in
int
add
add
out
imul
add
shll
xor
mov
jbe
lock
fwait
cmp
aad
mov
push
adc
add
fwait
inc
add
js
sub
mov
fmull
push
add
jb
out
sub
inc
add
out
out
rolb
sub
add
add
add
add
in
mov
loope
jns
insl
inc
lret
inc
add
stc
sbb
add
sub
add
sub
rolb
hlt
add
in
mov
or
roll
or
or
in
sbb
add
xor
shll
pop
or
in
aas
in
mov
add
push
inc
cmc
popf
jge
push
cmpsb
add
pop
lret
aas
pop
xchg
add
pushf
mov
dec
pop
pop
icebp
out
jb
mov
adc
loop
int3
inc
pop
je
test
hlt
add
out
mov
add
bound
mov
das
mov
or
add
loopne
cmp
outsl
gs
notl
imul
add
adcl
sahf
xchg
xchg
add
adcl
stos
and
rolb
jge
push
add
mov
aas
jl
dec
mov
cmc
push
mov
add
sbb
ljmp
add
imul
cmpsl
mov
xchg
add
jb
add
mov
xlat
pop
dec
sub
inc
and
dec
icebp
add
dec
addb
jl
xchg
pushf
and
dec
iret
rcll
add
dec
and
in
add
pusha
add
cmp
enter
mov
add
mov
or
add
xchg
add
add
cmp
add
push
adc
add
sub
into
or
int3
jbe
adc
bound
mov
cltd
fadds
rolb
add
cmpsb
add
repnz
gs
dec
cmp
mov
add
add
or
cmp
add
scas
and
fldlg2
mov
lret
add
add
dec
jbe
xchg
mov
add
scas
mov
pop
fsubr
jecxz
js
cmc
sbb
lods
rolb
test
xchg
rolb
popf
push
mov
add
insl
cmp
std
in
mov
add
mov
arpl
add
jecxz
xchg
movb
inc
add
in
adc
stc
fwait
arpl
or
add
add
mov
dec
cwtl
mov
movsl
mov
add
and
ret
add
add
rolb
add
mov
pop
cld
xchg
add
add
leave
sub
loop
cmp
add
sub
jmp
add
jl
lcall
dec
jmp
add
mov
ret
out
dec
mov
jl
add
add
fsubl
inc
add
mov
adc
xchg
xor
cli
ficompl
out
adc
and
xchg
xor
xchg
xor
int3
and
and
mov
add
add
and
mov
push
add
adc
and
rolb
jnp
stos
or
mov
jg
ds
das
insb
mov
sbb
add
loopne
sbb
test
xchg
add
rolb
rcll
imul
sbb
addb
pop
dec
stc
adc
mov
or
out
int3
imul
add
add
jle
lock
add
jo
inc
add
jbe
out
outsb
and
iret
pusha
add
test
inc
add
aas
inc
add
pop
jg
mov
inc
add
and
pushl
cmp
add
xor
sub
add
push
das
dec
add
pop
pop
jle
testb
add
push
add
repz
into
jecxz
ja
add
push
jb
sbb
loopne
xchg
movb
add
shrl
push
add
iret
sahf
pop
cwtl
in
dec
outsl
mov
insb
xchg
add
add
add
das
or
add
dec
subl
pop
mov
or
hlt
add
pushf
pop
mov
add
add
test
ret
mov
mov
mov
std
push
enter
jbe
sub
add
cmpsb
add
add
xor
mov
clc
int3
outsb
mov
rcll
add
pusha
add
xlat
cli
fsubs
inc
add
shll
add
mov
movb
into
movb
imul
add
idivl
pop
adc
sbb
clc
scas
jl
out
mov
add
jne
sub
jno
add
in
ljmp
adc
insl
jmp
ss
mov
repz
loopne
leave
scas
ds
repz
mov
repz
and
jg
add
sbb
into
adc
and
mov
jae
cs
xchg
icebp
mov
test
dec
push
add
lods
dec
adc
jge
mov
decb
pop
test
std
jbe,pt
and
mov
add
push
add
xor
enter
add
add
add
sbbl
mov
sub
jbe
push
mov
xchg
cmpsl
sub
pop
leave
subl
popa
lret
add
fsts
push
mov
dec
hlt
add
pop
push
add
cld
adc
test
sbb
add
cmp
jae
out
inc
add
call
and
push
add
sbb
fnsave
add
testb
cmp
add
mov
int
mov
movsb
add
addb
imul
add
and
add
mov
add
inc
add
add
jmp
lods
mov
add
add
xchg
add
xor
aas
xchg
add
jns
pause
add
ret
fs
add
add
ret
add
test
adc
std
scas
cmc
js
negl
stos
add
lahf
xor
dec
or
movb
add
mov
add
inc
ljmp
add
add
ret
xchg
add
cmp
addr16
xchg
mov
cmpsb
add
or
mov
in
cmpsl
pop
mov
add
cmpsb
add
or
insb
adc
push
add
cwtl
mov
jb
dec
aad
or
add
mov
ret
cmc
mov
add
inc
add
clc
dec
mov
fdivrs
mov
mov
add
fwait
inc
add
insb
aaa
mov
sahf
lock
add
pop
or
cmpsl
pop
push
psrld
bound
mov
add
mov
lock
or
imul
iret
mov
lret
xchg
rolb
mov
lea
push
lcall
add
add
add
movsb
add
xor
addb
in
aad
xchg
ja
pop
cmpsb
add
lret
jmp
cld
nop
add
push
add
mov
insb
cld
int3
int3
lods
loope
add
add
sub
mov
xor
jmp
sub
add
mov
cmp
jecxz
add
dec
out
cmp
jae
mov
jg
add
add
add
adc
jns
push
add
jbe
mov
in
or
xchg
add
add
movsb
add
pandn
inc
fldl
add
pop
mov
add
nop
add
add
js
add
add
add
add
add
pop
or
mov
stos
push
jmp
push
add
lea
add
xchg
iret
xchg
add
mov
pop
mov
lahf
and
push
stc
dec
mov
mov
clc
push
cmp
mov
outsb
cld
hlt
add
sbb
aad
subl
sbb
je
in
and
loope
xchg
add
leave
mov
subl
add
xor
mov
mov
les
xchg
dec
add
mov
pop
rcll
add
into
push
sti
or
data16
mov
add
sub
add
xor
out
bound
mov
shl
out
inc
xchg
add
lds
std
push
dec
ljmp
sahf
add
push
add
add
fdivrs
push
add
add
push
add
inc
je
inc
add
addb
in
inc
jnp
add
int
add
pop
adc
sbb
addb
cmpsb
add
add
add
mov
mov
repnz
push
lret
imul
pop
inc
add
cwtl
push
add
out
add
pop
jb
fildll
jo
and
mov
stc
xchg
icebp
add
mov
mov
int3
dec
arpl
push
add
fnstenv
mov
dec
rolb
enter
mov
pop
mov
jecxz
pop
xor
add
movsb
add
aas
cmp
or
cmpsb
add
mov
push
add
pop
lods
mov
scas
and
add
jle
mov
notl
and
mov
lret
insb
mov
mov
add
pop
mov
add
fisttpl
add
add
dec
cmp
add
xor
test
testb
add
add
call
xchg
in
outsb
push
add
rolb
sub
inc
add
les
dec
jno
movsl
pop
inc
sti
dec
int
movsl
lods
mov
ficompl
inc
add
mov
pop
cmp
mov
pop
push
add
out
fimuls
add
adc
add
dec
push
and
add
xchg
scas
sub
cmp
add
sub
mov
xor
add
jbe
sbb
mov
pop
and
mov
aas
cli
sub
movsl
out
add
adc
aad
stc
inc
add
pushf
push
repz
test
ljmp
jns
add
addb
cltd
sub
xor
nop
add
push
add
cmpsl
mov
add
mov
and
call
jmp
sub
jmp
add
add
add
inc
out
add
add
mov
scas
lret
fildll
add
inc
add
add
sbb
jmp
nop
add
add
add
adc
mov
push
add
mov
and
mov
add
jnp
data16
imul
leave
mov
cs
add
mov
mov
jne
add
bound
mov
add
dec
loop
rolb
addb
lret
cwtl
or
sbb
movb
pop
scas
jp
add
add
jno
scas
das
cld
inc
cmc
push
cmp
add
add
xor
movsb
add
xchg
ret
stos
xchg
dec
or
xchg
aad
add
xlat
in
repz
jmp
jnp
add
add
jbe
gs
sub
aam
push
ja
loopne
jge
outsl
sbb
add
mov
insl
inc
add
push
adc
jge
cmp
loopne
xor
add
dec
mov
dec
xor
add
add
push
jmp
jl,pn
jno
or
pop
cmpsb
add
data16
xchg
add
add
jb
pop
add
mov
add
cs
pop
sub
add
jo
dec
dec
jb
cwtl
pushf
jb
mov
mov
or
sbb
inc
add
add
in
lods
rolb
add
pop
data16
add
add
pusha
add
and
xor
lods
cld
into
adc
or
add
adc
dec
and
xchg
add
add
cli
and
sbb
dec
cmp
push
jge
add
add
add
lds
add
add
les
nop
add
add
test
fisubl
xchg
add
push
mov
jge
fldl
das
jns
lock
sbb
arpl
pop
nop
add
pop
andnps
add
aas
sbb
sbb
addr16
add
xchg
repnz
movsl
mov
insl
mov
add
add
mov
int
jne
add
addr16
add
sbb
sub
and
int
add
sub
sahf
or
testb
add
jb
xchg
movups
insb
flds
push
add
add
in
loop
inc
add
mov
mov
stc
cmpl
or
andl
sbbl
add
add
gs
test
inc
js
add
add
lods
ret
push
add
popa
fstps
xchg
add
rorl
add
nop
add
mov
add
add
add
test
add
cmpl
fimull
add
add
jne
add
pop
das
enter
add
add
add
movb
int3
daa
mov
lret
jge
add
mov
xchg
push
add
adc
mov
pop
mov
sbb
add
loopne
popa
push
add
mov
out
rolb
stos
or
push
das
cmp
fldcw
pop
or
ret
add
xor
mov
add
mov
stc
mov
sbb
add
add
loope
mov
add
popf
xorl
sbb
outsb
sub
add
cs
jle
inc
fdivrs
sbb
stc
test
adc
cmpsb
add
jmp
sub
add
add
cmpsl
inc
repnz
and
mov
add
xor
pushf
insb
test
insl
xchg
sub
mov
rolb
adc
mov
add
mov
inc
mov
stc
addb
add
adc
add
and
add
push
clc
push
add
bound
mov
add
andl
out
movsb
add
add
arpl
xor
add
or
add
or
cmp
sub
stc
fwait
lret
cmp
inc
add
add
add
jmp
add
add
add
call
add
push
jb
out
hlt
add
add
nop
add
add
xchg
je
pop
mov
xor
daa
icebp
aad
add
js
mov
lahf
jae
mov
jg
add
enter
lods
outsl
mov
xchg
add
jle
pop
inc
mov
mov
daa
or
loop
outsl
push
add
add
push
xchg
into
adc
xlat
cltd
jecxz
cs
dec
es
lret
dec
pop
cwtl
or
jnp
add
add
outsl
scas
mov
out
aad
add
lods
aas
or
dec
add
inc
add
mov
add
mov
mov
cmpsb
add
adc
pop
js
add
add
jmp
add
fwait
mov
lea
cwtl
xchg
add
add
ljmp
mov
repnz
add
mov
push
mov
jne
adc
repnz
aam
xor
xchg
add
out
add
add
sbb
aaa
cwtl
xor
cmp
leave
out
jle
mov
jl
mov
mov
std
sub
mov
call
add
jmp
or
add
in
sub
icebp
jbe
add
add
test
sub
add
out
loopne
lds
iret
out
add
mov
mov
mov
jno
add
iret
jb
in
sub
cmp
mov
out
and
mov
scas
push
add
xchg
outsl
sub
add
pop
adc
sti
psrad
aam
add
mov
call
mov
mov
or
roll
std
loop
jmp
add
pop
push
add
std
dec
push
add
xchg
mov
add
outsl
add
add
ljmp
pop
cld
aam
jge
rcl
int
add
xor
je
dec
lret
sti
in
in
testb
mov
adc
jle
sti
push
add
add
and
mov
add
add
add
outsl
rcr
add
xor
sub
adc
lea
into
test
add
add
rolb
add
add
pop
mov
jl
cmp
xchg
call
popf
movsb
add
push
add
dec
dec
addb
adc
and
mov
push
mov
adc
mov
sahf
jb
int
jle
cltd
imul
lcall
xor
into
or
sub
add
mov
add
dec
fistl
push
cltd
popf
jns
add
inc
add
adc
jo
jo
gs
pop
in
xor
mov
mov
add
or
push
xor
add
sbb
test
sbb
add
pop
sub
into
jg
rcrl
add
mov
sbb
lret
testl
add
stc
testl
add
cmp
cmp
xchg
add
dec
xor
xor
push
xor
cmp
mov
jecxz
lock
orl
dec
add
mov
add
add
mov
sbb
cwtl
mov
fisubrl
mov
out
outsb
xlat
inc
add
imul
rolb
adc
or
fbstp
imul
iret
push
inc
add
in
mov
pop
fwait
push
ret
mov
ja
or
mov
test
nop
add
cmpl
add
lea
aas
out
add
mov
in
dec
cmp
mov
add
jnp
popf
mov
add
push
or
mov
insb
insb
xor
ret
stc
pop
xor
imul
mov
subl
lret
int3
sahf
xor
add
js
pop
lds
inc
add
sbb
xchg
sub
inc
add
pop
sub
add
add
add
cltd
jne
movsb
add
loop
pop
mov
imul
lret
add
mov
mov
dec
cwtl
cmp
jnp
add
add
das
mov
add
stos
mov
add
pop
test
in
in
ror
pusha
add
xor
icebp
dec
popl
add
cs
or
es
dec
pop
gs
imul
aaa
into
outsl
adc
ja
fimull
mov
aas
mov
sub
dec
push
add
sahf
icebp
pop
inc
add
pop
clc
and
mov
add
out
mov
sub
aam
adcl
add
cmc
mov
add
lock
fidivrl
add
mov
ret
add
jg
stos
imul
pushf
xor
add
in
in
and
inc
or
push
imul
mov
fnsave
add
add
jp
add
add
testb
and
mov
jmp
push
add
sbb
add
adc
dec
xchg
mov
cmc
addb
add
stc
or
add
jg
dec
movb
add
mov
add
movb
cmp
iret
rolb
push
add
dec
pop
pop
rolb
outsb
outsb
insb
jl
cwtl
fcoml
push
loop
adc
inc
jae
addb
mov
cmp
mov
adc
rolb
mov
add
add
filds
mov
pop
xor
add
mov
add
adc
add
stos
xor
stos
out
xchg
int
sahf
ds
lcall
and
test
outsl
pop
dec
pshufw
data16
out
mov
mov
add
loope
push
add
lret
ljmp
lock
sub
add
ret
add
push
dec
testl
mov
lret
outsb
jmp
mov
shl
add
sbb
inc
lods
add
mov
add
arpl
add
daa
mov
pop
dec
inc
cmpsl
mov
stos
movsl
je
add
popf
xchg
int
xchg
popa
dec
aaa
cmc
ds
xchg
add
fistpll
movb
add
add
inc
add
sbb
lret
pop
jmp
sub
in
mov
int3
cld
ljmp
test
test
les
mov
test
push
and
mov
gs
out
adc
cmc
repz
mov
add
inc
add
mov
imul
addb
add
add
add
jmp
push
add
mov
and
mov
mov
sbb
jnp
add
add
hlt
add
mov
add
imul
das
jl
dec
call
jae
add
xchg
pop
cmc
sub
mov
testb
mov
pop
inc
xchg
add
add
in
add
mov
mov
cli
jl
lret
repz
add
add
add
add
inc
add
xchg
in
sub
mov
out
add
push
add
add
popl
push
add
jbe
or
add
xor
mov
cmp
jo
loop
sub
pop
out
out
sti
es
add
in
sub
pop
adc
add
dec
mov
add
add
movb
mov
mov
loope
ds
cli
nop
add
xchg
push
add
mov
or
add
inc
push
add
or
jnp
cmp
les
mov
js
add
test
lock
or
add
xchg
add
fmulp
jl
add
xor
mov
popa
sbb
sub
int3
cmp
dec
mov
pop
int3
and
push
add
add
fucomip
jmp
mov
add
rolb
outsl
sub
add
sub
cmc
ljmp
add
add
test
jmp
add
into
mov
add
ficompl
add
add
add
inc
aaa
cmp
rolb
pop
cmp
aas
orl
dec
std
cmp
add
stc
adc
pop
fnsave
sub
mov
popa
mov
mov
add
add
pop
clc
out
test
rcll
push
add
loope
lods
fsubrs
sahf
icebp
pop
lcall
add
jg
dec
mov
xchg
mov
movsb
add
add
enter
or
scas
adcl
arpl
push
mov
lods
lret
dec
jle
ljmp
add
cltd
sbb
dec
mov
imul
add
jne
xor
cmp
xchg
push
enter
push
add
dec
je
outsb
sub
popf
leave
mov
add
pop
add
mov
mov
cmp
jbe
inc
add
add
in
fcmovu
or
jne
mov
xchg
xor
mov
bound
mov
lret
pop
xchg
les
mov
jl
and
add
add
add
add
mov
add
add
loope
adc
dec
mov
add
nop
add
add
mov
lret
lcall
in
enter
inc
lret
cmp
decb
enter
outsb
fists
push
mov
adc
dec
cmp
cmpsl
xor
and
mov
movb
inc
add
mov
movl
cli
stc
add
mov
add
add
mov
adc
aam
jno
in
into
xor
xor
add
pushf
mov
mov
add
sbb
cmc
pop
mov
loope
adc
insb
push
add
sub
jmp
add
push
push
add
sbb
fmuls
into
fildl
mov
add
xchg
and
pop
gs
mov
aaa
dec
mov
je
mov
xchg
enter
push
sar
sub
sub
add
out
cmp
popf
bound
mov
ret
movsb
add
add
test
or
cmpsl
sub
and
stos
dec
clc
cmp
and
icebp
mov
xlat
push
adc
jp
lock
lea
add
add
arpl
add
mov
js
and
or
aad
pop
pop
js
lcall
push
add
loop
repnz
cmp
scas
dec
sti
mov
sbb
lret
aam
sub
add
pop
insl
mov
dec
push
pop
out
adc
jbe
mov
push
fiaddl
mov
adc
adc
daa
xchg
mov
mov
push
add
out
xchg
push
add
add
inc
stc
xchg
sbb
add
pop
rolb
and
mov
jne
fimull
stc
rolb
add
arpl
mov
adc
xchg
daa
sub
fists
ret
adc
add
add
pop
pop
test
add
test
adc
or
mov
shl
mull
adc
inc
push
add
add
test
add
mov
push
add
fwait
add
mov
loop
dec
arpl
add
add
out
leave
mov
lcall
add
add
rolb
adc
dec
xchg
in
rorl
ja
jae
add
loopne
jmp
add
push
push
mov
cld
push
cmpsl
rolb
mov
js
mov
mov
dec
stos
xchg
mov
mov
add
add
xor
sbb
repnz
push
push
jns
int
push
fnsave
mov
subl
xor
je
mov
inc
add
clc
movb
add
fucomp
xchg
cwtl
arpl
or
add
xor
mov
adc
and
mov
xchg
sub
add
dec
cmp
testb
push
add
add
dec
adc
push
add
cli
lahf
jno
loope
mov
lret
insl
xlat
fs
leave
fldt
mov
sub
add
add
add
mov
mov
mov
or
movsb
add
add
mov
clc
pusha
add
add
lock
clc
lahf
sub
scas
cmp
add
mov
add
add
jns
push
mov
cmp
outsb
or
mov
cmpsl
cmp
out
jno
add
adc
lods
inc
add
pop
iret
pop
jge
xchg
mov
xor
fwait
je
or
mov
dec
xchg
add
add
xor
add
jle
add
inc
sbb
mov
add
cmp
rcl
add
add
dec
mov
add
in
dec
test
xchg
cli
add
out
jno
dec
lahf
aad
inc
mov
sub
lret
add
jae
add
add
add
mov
mov
add
add
add
or
add
add
mov
into
mov
roll
addr16
fidivrl
arpl
leave
sub
scas
mov
ret
iret
pop
push
add
or
insb
and
jg
out
xchg
lea
cs
xor
popf
inc
add
cmpsl
mov
inc
xchg
ljmp
add
out
test
jmp
add
add
inc
add
add
sbb
je
jmp
add
sbb
add
add
jl
adcl
scas
mov
jb
addr16
add
xlat
mov
adc
sbb
sbb
inc
add
add
sbb
and
mov
sbb
add
xor
ds
or
popf
cmp
mov
sbb
dec
call
jmp
loope
outsb
lret
adc
and
xchg
add
sbb
hlt
add
mov
call
xchg
add
mov
enter
add
testb
mov
lods
test
repz
add
push
add
add
cmp
int
ret
push
add
stc
ficompl
jne
mov
int3
lds
add
clc
jns
add
push
add
pop
jbe
xor
rcrl
andl
fcoms
cwtl
int3
and
or
add
imul
pop
cmp
movsl
mov
mov
mov
sub
add
movb
add
add
ds
cmpsl
or
push
add
aad
rcll
mov
daa
outsb
push
add
and
mov
nop
add
call
dec
mov
jbe
jmp
sub
sbb
das
cmp
out
pop
imul
addb
add
movnti
aam
fwait
imul
movb
jp
popa
xlat
mov
mov
add
add
std
loop
mov
lods
xorl
push
cmp
dec
lods
lods
sub
add
jno
bound
mov
add
aaa
xchg
int
fiadds
cmc
outsb
mov
icebp
movsb
add
mov
dec
jp
add
add
jg
add
ja
hlt
add
adc
insl
sub
pop
test
pop
je
sub
cmp
gs
inc
aad
or
out
pushl
pop
inc
jmp
sub
add
out
or
cwtl
jno
fdivl
add
bound
mov
ja
add
out
mov
inc
add
cmp
lods
mov
add
cmc
cmc
cmpsb
add
add
push
nop
add
daa
enter
fsub
pushf
cmp
sub
je
movsb
add
lea
rolb
mov
sub
fistpll
sub
into
xchg
pushf
fiaddl
add
subl
xor
add
adc
inc
dec
ljmp
jo
pushf
mov
js
add
scas
pop
sub
add
sbb
add
cmp
jo
outsb
sbb
icebp
or
cwtl
dec
lea
popl
add
add
add
jne
xor
dec
sahf
cmp
loope
mov
mov
pushf
xor
repz
add
mov
xor
xchg
add
repz
cvtps2pi
mov
adc
add
dec
add
mov
pop
ds
pop
popa
jp
sti
aam
ljmp
add
sbb
or
add
jmp
out
mov
movsl
jbe
adc
lods
cs
test
cmp
xchg
add
and
pop
adc
movsl
mov
inc
push
shrl
int
pop
xor
push
add
aas
cltd
jge
xor
adc
cmpsb
add
add
jg
cmp
cmpsl
push
add
into
adc
nop
add
add
sbb
add
sbb
or
push
add
les
xchg
add
add
pop
xchg
nop
add
add
push
add
add
mov
add
imul
xchg
add
mov
add
in
cmc
push
add
xchg
imul
add
mov
mov
mov
jp
insb
adc
inc
add
mov
sub
lods
add
hlt
add
xlat
shld
add
xchg
add
scas
pop
cmp
jg
mov
stos
mov
push
pushf
adc
out
dec
gs
popa
lret
scas
movl
leave
push
cmp
add
add
and
add
mov
sti
adc
add
mov
sub
scas
adc
in
pop
and
lock
push
add
add
inc
add
aad
push
xor
hlt
add
out
mov
stc
iret
adc
add
imul
mov
add
mov
lret
or
out
add
add
stos
and
mov
jnp
popf
pop
jno
lods
jle
add
or
xor
push
add
mov
push
add
or
add
movsb
add
xor
repz
fdivl
jmp
add
imul
inc
addr16
xor
jo
xchg
sti
out
nop
add
add
mov
adc
testb
push
mov
aas
mov
add
pop
cwtl
adc
into
testb
jecxz
ror
lret
filds
mov
add
add
dec
xchg
add
ds
inc
out
add
add
rolb
pop
jns
mov
icebp
xchg
loope
ret
mov
iret
sbb
rolb
add
push
movsb
add
in
lret
fbstp
cmp
lock
fnstenv
int3
add
ret
add
add
fistps
add
mov
or
add
add
lods
out
cmp
add
mov
pop
repz
dec
mov
pop
mov
das
lds
aaa
lock
mov
andl
adc
push
in
fcmovnbe
add
add
push
dec
fnsave
mov
add
and
add
add
add
pop
fs
adc
dec
xchg
pop
inc
mov
fsubrl
mov
push
and
addb
cltd
add
cmp
fsub
out
add
jg
mov
cmp
leave
pusha
add
mov
add
mov
testb
add
fwait
in
add
jle
scas
mov
lret
andl
ja
add
pop
dec
inc
add
out
ljmp
xor
add
add
mov
push
add
fiaddl
xchg
fcmovu
movsl
pop
adc
sbb
push
add
add
or
and
mov
add
mov
push
xorl
jg
add
add
movsb
add
lods
pop
mov
andl
add
jne
add
add
mov
loope
hlt
add
add
sub
jo
fdivrl
jmp
add
add
adc
aas
mov
fwait
or
push
loopne
addb
rolb
push
add
gs
in
add
cld
jo
addb
cwtl
adc
rolb
add
hlt
add
cmp
add
lods
jnp
les
xchg
add
and
or
cld
hlt
add
and
std
mov
mov
bound
mov
pop
insb
dec
fidivrs
or
xchg
sysexit
mov
add
add
lcall
add
sub
rolb
dec
decb
sahf
in
mov
stos
fistpll
test
inc
add
add
pop
xchg
fiadds
leave
push
mov
clc
push
enter
add
xlat
test
pop
cld
mov
push
loop
sub
add
jno
add
sti
dec
movsl
jle
je
movsb
add
add
or
mov
mov
xchg
addb
add
aaa
pop
xor
rolb
add
mov
cmp
cmc
add
mov
xchg
mov
nop
add
add
push
add
add
aam
mov
add
fsubl
aas
mov
sbb
xor
sbb
add
out
fcmove
cmp
pop
jle
pop
fisttpl
outsb
lods
sub
jne
mov
add
xor
sub
add
add
insl
stc
mov
clc
fcompl
movsb
add
add
ret
enter
add
add
add
mov
add
or
push
add
push
add
add
mov
cmp
rorl
test
sub
ja
or
or
inc
stc
push
add
add
add
leave
stc
pop
cltd
mov
out
push
add
adc
push
add
sbb
stos
jmp
add
test
mov
add
xor
sub
xchg
mov
add
loopne
push
add
cmc
sbb
movsb
add
jl
aam
adc
add
dec
push
add
sbb
fsts
add
fs
les
gs
adc
jns
imul
xor
ja
adc
mov
fnstsw
repz
mov
mov
iret
mov
add
mov
loopne
push
add
add
add
mov
pop
jnp
add
mov
pop
imul
lret
bound
mov
xor
and
mov
out
and
mov
dec
jle
and
sbb
mov
sub
add
add
clc
cmp
jge
insb
sti
lds
mov
xchg
mov
les
jl
out
not
add
int3
add
into
rolb
mov
inc
lcall
into
xor
mov
mov
stos
jns
mov
pop
test
in
add
adc
lahf
mov
xchg
mov
js
jecxz
add
jle
fcomps
shll
movb
mov
out
push
test
mov
pop
lahf
mov
aam
pushf
gs
fisttps
add
fwait
jno
scas
mov
add
add
xchg
add
inc
add
add
add
hlt
add
add
jb
sub
fcompl
out
fsub
add
xchg
push
push
mov
aad
inc
or
adc
fistpl
outsl
sbb
xchg
stc
insb
jl
add
pusha
add
sbb
loop
dec
mov
add
inc
add
adc
xchg
jecxz
jg
push
xor
push
je
loope
nop
add
add
hlt
add
inc
nop
add
stc
js
cmp
enter
pop
or
aas
test
add
add
dec
ljmp
pop
or
and
cs
mov
loop
sbb
or
js
add
add
sub
add
add
mov
cltd
push
push
add
mov
pop
jecxz
add
mov
adc
xchg
out
adc
stos
push
add
or
add
mov
mov
cmp
xchg
imul
lods
stos
inc
add
jle
add
outsb
xchg
aam
pop
add
test
add
ljmp
mov
or
out
sub
fsubrl
add
jg
sbb
cmp
mov
adc
and
mov
or
add
jae
add
xchg
add
add
push
das
jle
xlat
add
js
addb
hlt
add
add
in
add
ret
fldenv
in
xor
mov
lock
repnz
add
add
xor
cli
cli
push
add
pop
mov
add
add
sub
add
jecxz
jae
mov
pop
inc
jg
pmaxub
and
testl
faddl
lds
pusha
add
push
add
add
dec
xchg
add
into
jl
dec
inc
push
add
mov
adc
test
out
sub
jl
xlat
nop/reserved
out
xchg
add
mov
add
ja
loope
add
insl
ficoms
add
cmp
imul
rolb
pushf
push
pop
dec
into
cmp
sub
test
fistl
adc
nop
add
add
add
dec
jns
popf
sbb
or
jo
sub
add
add
lcall
add
or
xchg
mov
adc
movsb
add
add
rolb
jne
add
mov
jno
add
add
aam
fadd
jmp
and
add
add
mov
mov
add
xchg
add
add
add
adcl
addb
jmp
or
fwait
js
out
les
inc
add
insb
gs
leave
cmpl
jne
or
sbb
add
in
loope
pop
sub
pop
mov
mov
add
add
xchg
add
rolb
data16
fdivp
pop
cltd
add
cmp
out
add
xor
dec
xor
fcoml
add
pop
jl
aas
fildll
aad
add
les
inc
pusha
add
jo
mov
inc
add
add
mov
add
mov
dec
data16
outsb
mov
add
dec
clc
mov
cltd
push
add
in
jnp
adc
movsl
imul
adc
dec
lret
dec
push
add
add
inc
add
add
add
mov
add
inc
add
sahf
std
repz
sub
mov
addr16
int
icebp
xchg
and
mov
pop
ret
and
mov
xchg
test
pop
or
leave
sub
xor
push
jg
jecxz
dec
rep
sbb
add
lods
ret
mov
addb
add
sahf
outsl
jg
add
mov
fistps
pop
add
or
add
ret
add
fld
add
push
mov
pop
mov
mov
sub
aam
pop
rcrl
jg
push
add
bound
mov
push
and
mov
mov
pop
rolb
ds
out
lret
add
sub
clc
clc
sbb
clc
push
ret
push
add
repnz
mov
lret
movsl
dec
xchg
lods
js
add
movb
add
xchg
repnz
sbb
cli
inc
add
add
add
addb
or
dec
std
in
jecxz
gs
jnp
in
or
jmp
add
push
xchg
adc
mov
lea
add
mov
ret
cltd
and
and
add
jns
out
and
mov
rolb
daa
mov
pushl
and
out
fsubr
jno
cmc
in
add
add
test
mov
stos
pop
add
mov
add
add
cwtl
sub
jnp
pushf
and
leave
dec
in
jle
mov
in
dec
leave
dec
mov
aam
push
je
add
into
lods
add
add
add
xor
mov
aas
movb
xor
mov
cmp
xor
add
add
mov
mov
add
add
sbb
add
mov
mov
sahf
nop
add
jne
pop
leave
pop
dec
mov
scas
cmp
ret
or
mov
rolb
js
ficoml
aam
dec
test
add
aas
loopne
movsl
lea
add
arpl
lahf
and
push
data16
jmp
add
dec
addr16
test
add
add
add
mov
mov
inc
pop
shl
add
add
mov
adc
fdivl
xor
or
or
sahf
jmp
jno
add
rcll
mov
add
enter
roll
inc
fisubl
cwtl
push
add
addb
shll
mov
add
inc
ds
leave
cli
test
add
scas
inc
add
mov
loopne
in
add
and
push
clc
ja
sub
add
mov
sti
xor
int
xor
pusha
add
xor
cmp
push
add
jae
jecxz
mov
inc
add
sub
pop
insb
jp
movsb
add
std
jb
mov
push
add
add
pusha
add
add
add
add
xor
repnz
xor
lds
add
sbb
in
ds
cli
jno
ljmp
add
add
add
add
add
fmuls
fbstp
add
add
fdivr
mov
fstpt
ret
stos
jg
add
add
popa
xchg
add
add
add
xchg
xchg
cltd
dec
sti
mov
mov
mov
add
js
push
add
dec
aas
xchg
add
clc
imul
mov
add
push
inc
loop
jg
add
movsl
loop
pop
fwait
jge
mov
mov
add
sub
push
add
imul
mov
in
inc
gs
mov
mov
push
out
push
add
mov
add
add
add
mov
pop
inc
add
add
pop
add
or
jae
sbb
movsb
add
orl
in
movb
add
dec
fmul
add
mov
lods
adc
test
ljmp
cld
mov
decl
scas
xchg
add
add
mov
ja
add
in
ds
fidivrs
push
mov
and
mov
sub
add
sub
add
pusha
add
ds
jbe
loop
xchg
add
addb
add
add
scas
and
sbb
mov
add
add
mov
imul
mov
add
ss
pop
outsl
jl
add
incl
mov
bound
mov
push
imul
push
add
add
inc
add
mov
cmc
fists
test
cmpsl
imul
push
mov
add
lret
shll
add
inc
add
inc
add
mov
add
add
add
mov
jbe
clc
cmp
or
adc
xchg
inc
clc
imul
add
imul
mov
sub
mov
pop
push
sti
in
mov
out
lods
pop
arpl
in
mov
add
add
add
test
or
add
xor
and
enter
dec
addb
add
enter
add
sbb
add
ljmp
and
push
addb
nop
add
cmc
loop
mov
adc
iret
jecxz
ss
add
push
add
test
enter
inc
add
std
addr16
add
mov
aaa
xchg
fstpt
mov
rolb
jbe
pushf
pop
mov
dec
inc
add
mov
data16
add
add
add
jg
and
mov
xchg
popf
imul
pop
or
dec
jge
push
add
mov
sub
and
mov
roll
lea
add
cmp
ljmp
dec
lock
scas
add
scas
cli
sti
out
add
add
inc
add
mov
push
add
mov
add
mov
inc
mov
add
jl
pop
push
add
ret
gs
sub
sahf
mov
add
and
mov
mov
mov
das
mov
jnp
rcl
add
xorl
fcompl
xchg
inc
add
dec
cwtl
fcoml
push
loopne
xchg
cmpsb
add
add
add
sbb
add
cli
mov
aas
ret
add
add
aas
ficomps
mov
add
xchg
add
insl
xor
add
shll
mov
jnp
movl
mov
add
fistpl
xor
rorl
add
dec
fwait
sub
outsl
loopne
mov
add
add
add
add
push
add
push
loopne
fdivs
movsb
add
dec
or
add
pop
ret
pop
sbb
add
and
mov
pop
movb
add
stos
pop
mov
add
add
add
inc
in
aas
lds
add
ret
add
or
fisttpll
xor
ja
xchg
mov
inc
add
imul
addb
ja
or
add
add
cmp
xlat
lcall
jnp
pop
adc
and
and
and
mov
enter
call
mov
push
add
jbe
ljmp
mov
and
add
call
mov
loope
add
out
xchg
push
scas
inc
loope
movsl
inc
cmpsb
add
adc
fidivrl
pop
inc
add
dec
rcrl
pop
scas
insb
addr16
push
add
mov
add
add
arpl
jge
add
add
rolb
cmp
xchg
add
clc
dec
add
mov
and
mov
add
mov
incl
add
add
jnp
fisttpl
call
add
xchg
aas
inc
arpl
jae
sti
dec
in
xchg
add
daa
add
mov
in
jo
mov
add
test
jo
xlat
or
data16
mov
outsl
jg
pushf
loop
in
lods
rolb
fwait
testb
negl
jne
sbbl
or
adc
adc
sub
add
add
shll
add
mov
jbe
mov
pushf
ljmp
rol
mov
add
add
iret
and
add
inc
and
jmp
xchg
add
add
add
xchg
xchg
mov
xchg
add
add
lds
rolb
in
push
add
les
jbe
inc
add
sbb
push
jmp
add
add
or
mov
add
add
lret
add
jg
add
movsb
add
adc
add
sub
xchg
add
mov
and
dec
jne
add
add
pop
sbb
add
add
push
mov
movb
push
add
mov
dec
stc
mov
mov
add
mov
inc
data16
add
cmp
icebp
cmc
mov
add
add
add
mov
jbe
leave
ds
xchg
mov
lods
ljmp
rolb
clc
adc
or
repnz
add
rcll
outsl
out
data16
loop
cmpsl
mov
add
mov
movsl
loop
in
mov
stc
mov
add
lcall
jae
loope
rolb
decl
push
add
shrl
adc
popa
inc
mov
and
int3
repnz
nop
add
inc
add
repnz
lods
in
cltd
nop
add
imul
mov
jne
add
add
push
or
add
std
fisubs
repnz
jmp
add
add
add
mov
jns
add
cmpsb
add
dec
jp
cwtl
add
and
add
add
js
movsb
add
push
add
les
test
cmpsl
fldlg2
fdivl
add
add
leave
mov
nop
add
aas
sbb
jo
addr16
xor
mov
inc
add
jbe
outsb
lea
xor
fsubs
add
add
mov
mov
add
adc
movb
add
lret
pushf
inc
bound
mov
insb
push
lock
fucom
add
iret
cltd
push
cmc
js
cltd
push
mov
inc
add
add
push
add
add
addb
dec
test
addb
add
int
sbb
add
add
scas
jl
add
add
add
mov
add
sbb
clc
jb
movsl
fdivs
mov
jns
and
mov
add
push
push
gs
mov
inc
stos
addb
fists
sbb
add
xchg
add
inc
add
inc
add
pop
and
mov
sbb
mov
icebp
rorl
daa
inc
mov
addb
pop
jp
and
mov
mov
sahf
mov
jns
jns
add
and
and
add
iret
xor
add
add
mov
add
dec
dec
shrl
nop
add
xchg
mov
jae
sbb
adc
bound
mov
dec
sbb
add
add
clc
xchg
add
lret
mov
pop
pushf
fstl
jnp
add
add
add
push
daa
mov
adc
mov
fidivs
movb
js
cmp
aaa
icebp
addb
adc
pop
cld
imul
or
insl
fnstsw
add
jns
sti
jle
inc
add
shll
mov
xchg
scas
js
add
mov
jne
adcl
xchg
add
lods
add
sub
popf
adc
call
adc
add
push
sbb
dec
imul
add
sbb
push
imul
out
add
inc
push
add
sbb
lods
mov
jno
add
and
mov
cmp
ljmp
pop
xor
mov
add
mov
jo
jmp
push
add
pop
jge
ficoml
add
outsl
lcall
cmpsl
rolb
pusha
add
fmuls
in
ret
and
sbb
aaa
pushf
inc
add
xchg
shll
int3
data16
lret
out
inc
loope
sub
add
mov
push
add
dec
icebp
push
add
add
add
add
aam
inc
add
fdivrs
add
mov
int3
les
pop
rolb
lods
mov
add
in
mov
inc
add
repnz
jae
add
fisttpll
test
add
add
repnz
jae
add
cmpsl
adc
mov
cld
nop
jmp
sbb
add
lea
add
fwait
cld
nop
jmp
mov
add
andl
jmp
add
mov
jmp
push
mov
xchg
ret
stos
mov
add
add
push
clc
repnz
jae
mov
add
jae
add
dec
push
push
mov
xchg
ret
movsl
or
aad
add
xchg
or
add
repnz
jae
add
sbb
pusha
clc
repnz
jae
push
add
rclb
mov
add
pushl
clc
repnz
jae
popa
mov
add
mov
clc
repnz
jae
xchg
and
mov
add
clc
repnz
jae
movsb
pop
add
test
imul
clc
repnz
jae
xchg
add
push
sbb
add
cld
nop
jmp
add
int3
mov
clc
repnz
jae
add
mov
add
cmp
push
mov
xchg
ret
add
sbb
popa
nop
das
mov
push
mov
xchg
ret
push
mov
add
adc
fwait
cld
nop
jmp
pop
add
add
roll
in
stos
push
clc
repnz
jae
add
sub
and
mov
jae
stos
add
popa
sbb
stos
add
inc
push
mov
xchg
ret
add
add
add
arpl
nop
jae
mov
mov
add
jecxz
lret
add
cmp
nop
jae
pop
add
sbb
add
nop
jae
add
repnz
jae
test
inc
add
add
popa
jne
add
mov
xchg
ret
arpl
cs
fwait
cld
nop
jmp
add
pop
les
push
mov
xchg
ret
add
jmp
mov
stos
mov
mov
push
jle
loop
clc
repnz
jae
rolb
xchg
inc
add
pusha
clc
repnz
jae
add
push
mov
push
mov
xchg
ret
sub
in
push
mov
dec
add
clc
repnz
jae
or
inc
mov
cld
nop
jmp
add
add
stos
pushf
xor
jecxz
jmp
jae
xor
xchg
add
cs
add
mov
push
mov
xchg
ret
add
cs
add
add
repnz
jae
add
jle
fwait
cld
nop
jmp
add
add
add
add
add
mov
add
adc
pop
lea
clc
repnz
jae
add
inc
add
rorl
jae
add
and
test
fwait
cld
nop
jmp
mov
add
jae
nop
jae
movsl
nop
movsb
add
add
repnz
jae
mov
add
push
add
popa
clc
repnz
jae
add
push
mov
add
add
repnz
jae
add
add
mov
repnz
jae
sub
add
mov
fwait
cld
nop
jmp
add
sbb
add
add
repnz
jae
add
add
adc
nop
jae
push
add
xchg
repnz
jae
add
add
add
in
push
mov
push
mov
xchg
ret
add
push
mov
xor
imulb
mov
add
sbb
add
add
inc
add
nop
jmp
mov
xchg
pop
popa
add
and
pop
push
clc
repnz
jae
add
add
xchg
jae
push
inc
mov
repnz
jae
les
xchg
in
mov
repnz
jae
add
str
mov
fwait
cld
nop
jmp
mov
call
clc
repnz
jae
mov
pop
add
push
add
les
clc
repnz
jae
mov
sbb
and
mov
xchg
ret
mov
add
push
mov
xchg
ret
mov
aad
and
push
sbb
add
repnz
jae
and
mov
in
cmp
mov
sbb
add
repnz
jae
add
and
mov
fwait
cld
nop
jmp
add
pop
xor
scas
mov
push
mov
xchg
ret
add
push
and
mov
mov
xchg
ret
add
add
add
fwait
cld
nop
jmp
aas
lea
add
inc
xchg
cmp
jmp
jae
or
cmp
test
cld
nop
jmp
add
pop
add
nop
jmp
add
test
mov
add
clc
repnz
jae
les
mov
xchg
push
add
lea
clc
repnz
jae
add
mov
jae
xchg
clc
repnz
jae
and
and
mov
scas
mov
push
mov
xchg
ret
add
add
add
cld
nop
jmp
add
arpl
les
loope
pop
clc
repnz
jae
call
xor
cld
nop
jmp
jae
add
mov
nop
jmp
push
sbb
push
add
popa
call
repnz
jae
add
add
aas
add
push
push
mov
xchg
ret
jae
add
add
mov
repnz
jae
pop
add
add
pop
stos
add
push
fwait
cld
nop
jmp
movsb
mov
add
outsb
add
mov
call
clc
repnz
jae
add
in
mov
repnz
jae
stos
lea
add
cmp
mov
cmp
ret
push
aas
add
clc
repnz
jae
add
xchg
or
movb
ret
add
add
and
clc
repnz
jae
add
add
jb
sub
push
mov
xchg
ret
add
add
cmpl
add
add
add
pop
outsb
mov
clc
repnz
jae
cmp
add
stos
add
imul
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
add
push
jae
je
fwait
cld
nop
jmp
add
add
mov
fwait
cld
nop
jmp
add
add
jmp
xchg
pushf
stos
mov
pop
mov
mov
int3
and
clc
repnz
jae
push
mov
sti
add
clc
repnz
jae
nop
mov
xchg
clc
repnz
jae
pop
add
add
test
fwait
cld
nop
jmp
arpl
movsb
mov
dec
mov
clc
repnz
jae
test
add
imul
xchg
add
outsb
mov
outsb
or
xchg
jae
mov
dec
mov
clc
repnz
jae
push
add
push
pop
jne
fwait
cld
nop
jmp
mov
add
popa
add
cld
nop
jmp
les
add
add
clc
repnz
jae
stos
xor
movsl
mov
clc
repnz
jae
mov
pop
push
push
testb
add
push
add
cmpl
fwait
cld
nop
jmp
add
mov
xchg
jge
ret
sbb
bound
add
add
movsl
rclb
clc
repnz
jae
push
push
pop
movsl
mov
clc
repnz
jae
mov
inc
addb
inc
push
add
stos
clc
repnz
jae
add
inc
add
mov
repnz
jae
xchg
mov
add
or
rcrl
nop
jae
jae
add
add
cs
clc
repnz
jae
add
mov
add
sarl
clc
repnz
jae
stos
mov
inc
lcall
or
add
add
add
popa
pushf
pop
ret
add
add
add
mov
xchg
ret
push
push
pop
cmp
add
and
mov
add
push
mov
xchg
ret
sub
mov
lahf
test
fwait
cld
nop
jmp
add
lods
mov
clc
repnz
jae
in
and
pop
les
push
push
mov
xchg
ret
mov
add
arpl
pop
dec
add
push
mov
xchg
ret
mov
inc
inc
cs
mov
dec
push
mov
xchg
ret
rorl
test
add
clc
repnz
jae
add
add
add
pop
cmp
fwait
cld
nop
jmp
add
pop
es
add
call
clc
repnz
jae
add
shlb
mov
stos
push
mov
insl
adc
add
add
push
pop
lea
adcl
add
add
repnz
jae
add
add
test
jae
mov
jmp
lcall
add
movsb
add
nop
jae
mov
add
and
je
clc
repnz
jae
outsb
nop
add
xor
fwait
pushl
fwait
cld
nop
jmp
pop
mov
movsl
movsb
add
mov
repnz
jae
pop
nop
push
mov
cmp
mov
movzwl
push
mov
xchg
ret
add
adc
add
repnz
jae
call
and
clc
repnz
jae
mov
insl
mov
clc
repnz
jae
or
add
push
clc
repnz
jae
add
les
addb
push
clc
repnz
jae
mov
or
sbb
decl
fwait
cld
nop
jmp
add
add
add
jecxz
std
push
clc
repnz
jae
add
add
sbb
insb
test
fwait
cld
nop
jmp
rolb
jae
xchg
adc
repnz
jae
mov
stos
mov
jmp
jae
lea
mov
mov
imul
nop
jae
inc
stos
add
testl
jns
clc
repnz
jae
mov
test
add
pop
subl
push
mov
xchg
ret
or
je
clc
repnz
jae
pop
rolb
push
add
mov
clc
repnz
jae
sub
call
repnz
jae
pop
les
aas
outsb
add
mov
jae
add
push
imul
fwait
cld
nop
jmp
add
add
stos
mov
add
add
jne
clc
repnz
jae
add
and
and
clc
repnz
jae
xchg
add
add
cs
insb
clc
repnz
jae
xor
xor
dec
jecxz
add
add
xchg
push
clc
repnz
jae
add
clc
repnz
jae
add
mov
add
add
cli
mov
clc
repnz
jae
pop
mov
pop
mov
mov
clc
repnz
jae
divps
out
ret
add
add
add
add
mov
add
arpl
adc
sbb
add
add
add
add
clc
repnz
jae
nop
mov
inc
and
add
mov
clc
repnz
jae
inc
outsb
add
pop
mov
add
repnz
jae
pop
inc
add
mov
clc
repnz
jae
add
add
mov
xchg
ret
mov
les
mov
faddl
xchg
ret
add
in
add
popa
jmp
jne
push
mov
xchg
ret
push
mov
add
in
jne
clc
repnz
jae
mov
add
add
fwait
cld
nop
jmp
movsb
les
cmc
push
mov
clc
repnz
jae
ucomiss
add
cwtl
and
fwait
cld
nop
jmp
add
add
stos
add
insb
imul
clc
repnz
jae
lea
arpl
mov
clc
repnz
jae
push
push
add
push
push
mov
xchg
ret
lea
add
pop
add
push
fwait
cld
nop
jmp
test
pinsrw
aaa
stc
add
clc
repnz
jae
les
ret
testb
add
clc
repnz
jae
add
lods
xor
clc
repnz
jae
add
nop
push
push
mov
xchg
ret
arpl
and
add
add
add
or
clc
repnz
jae
outsb
xchg
add
test
mov
movsb
push
mov
xchg
ret
or
add
xlat
punpcklwd
repnz
jae
pop
add
nop
movsl
xorb
add
push
mov
xchg
ret
mov
mov
dec
mov
fwait
cld
nop
jmp
aas
outsb
pop
lea
outsb
lock
add
clc
repnz
jae
cmp
je
clc
repnz
jae
mov
mov
add
clc
repnz
jae
push
add
call
ret
test
xor
jecxz
mov
clc
repnz
jae
xchg
add
mov
jbe
addb
pop
clc
repnz
jae
add
cmp
aad
add
xchg
clc
repnz
jae
add
push
add
mov
clc
repnz
jae
add
les
stos
add
sub
clc
repnz
jae
sbb
mov
xchg
push
data16
xor
fwait
cld
nop
jmp
add
pop
add
add
out
add
add
or
add
add
iret
mov
clc
repnz
jae
add
pop
les
add
add
fwait
cld
nop
jmp
add
stos
add
sbbl
cli
incl
pop
add
add
aad
add
repnz
jae
call
in
xchg
adc
push
add
test
repnz
jae
pop
add
mov
clc
repnz
jae
add
add
shr
fwait
cld
nop
jmp
push
add
add
add
clc
repnz
jae
pop
pop
mov
add
imul
sbbl
pop
mov
nop
jae
les
add
clc
repnz
jae
stos
add
add
nop
jmp
and
rolb
pop
push
clc
repnz
jae
mov
add
adc
add
sub
clc
repnz
jae
and
je
fwait
cld
nop
jmp
push
add
mov
repnz
jae
add
pop
add
add
cmpsl
inc
add
nop
jae
add
and
mov
add
aam
jae
mov
fwait
cld
nop
jmp
movsl
pushf
add
add
rolb
insl
push
clc
repnz
jae
add
mov
outsb
add
add
jg
mov
push
mov
xchg
ret
mov
sbb
lret
add
add
add
add
push
xchg
outsb
mov
pop
clc
repnz
jae
les
stos
mov
fwait
cld
nop
jmp
pop
stos
add
add
add
out
inc
add
add
pop
stos
pushf
add
clc
repnz
jae
add
push
sub
add
call
mov
xchg
ret
rcrb
add
stos
mov
jb
push
mov
xchg
ret
add
stos
or
mov
xchg
ret
add
pop
add
pushf
push
int3
je
fwait
cld
nop
jmp
mov
add
mov
xchg
ret
les
add
add
mov
xchg
ret
add
add
clc
repnz
jae
add
mov
sar
repnz
jae
popa
add
verr
cld
nop
jmp
push
xchg
mov
jae
sub
add
cmp
in
add
pop
inc
add
add
sub
movl
xabort
nop
jae
xchg
ss
sub
jae
cmp
add
mov
mov
clc
repnz
jae
test
add
add
dec
fwait
cld
nop
jmp
cmp
outsb
add
mov
cmp
push
mov
xchg
ret
add
test
enter
jae
add
cmp
inc
add
mov
clc
repnz
jae
or
add
ss
clc
repnz
jae
add
movb
mov
clc
repnz
jae
pop
add
leave
sub
sbb
add
push
mov
mov
nop
sbb
nop
jae
add
add
cmp
clc
repnz
jae
pop
add
and
pop
popa
clc
repnz
jae
movsl
cs
add
cmp
jae
push
mov
xchg
ret
add
add
xor
clc
repnz
jae
pop
les
add
nop
jae
call
and
add
mov
add
xchg
mov
sub
jl
repz
mov
xchg
ret
mov
add
add
or
cld
nop
jmp
add
add
lret
push
clc
repnz
jae
popa
pop
pushf
andb
rolb
add
add
pop
clc
repnz
jae
add
and
faddl
add
repnz
jae
lea
xchg
jae
pop
xor
add
add
add
cld
nop
jmp
pop
add
or
in
mov
fwait
cld
nop
jmp
add
add
pushf
inc
add
add
clc
clc
repnz
jae
xchg
mov
aad
add
push
mov
xchg
ret
pop
add
push
mov
xchg
ret
push
and
add
pop
lcall
or
add
add
stos
inc
lcall
nop
jae
mov
aad
pop
lea
clc
repnz
jae
sub
add
add
and
push
mov
xchg
ret
push
add
push
clc
repnz
jae
rolb
mov
add
push
mov
xchg
ret
stos
or
sbb
clc
repnz
jae
push
sldt
test
add
repnz
jae
xor
inc
add
repnz
jae
add
jne
clc
repnz
jae
mov
aas
sub
rclb
leave
inc
add
xchg
or
push
mov
xchg
ret
xchg
les
rolb
clc
repnz
jae
add
mov
mov
add
aam
add
popa
add
add
mov
ljmp
fwait
cld
nop
jmp
mov
mov
push
mov
xchg
ret
add
stos
nop
mov
nop
jae
sldt
mov
in
mov
cld
nop
jmp
movsb
inc
movsl
xorb
dec
call
clc
repnz
jae
add
add
hlt
add
jle
add
clc
pushl
arpl
lea
clc
repnz
jae
popa
add
add
daa
flds
xchg
ret
add
add
add
jns
clc
repnz
jae
add
movsb
add
add
dec
inc
clc
repnz
jae
in
push
test
add
clc
repnz
jae
inc
les
shlb
mov
xor
add
clc
repnz
jae
add
pop
push
clc
repnz
jae
stos
roll
inc
mov
std
push
clc
repnz
jae
les
aad
mov
lea
sub
nop
jae
pop
mov
add
aam
pop
add
add
rclb
add
add
popl
inc
cmp
mov
xchg
ret
add
add
inc
cmc
clc
repnz
jae
pop
or
cli
push
push
mov
xchg
ret
aad
add
add
xor
add
clc
repnz
jae
add
sbb
mov
xchg
ret
add
sbb
stos
mov
fwait
cld
nop
jmp
add
xchg
mov
mov
add
cld
nop
jmp
mov
add
add
cld
nop
jmp
add
mov
add
cld
mov
clc
repnz
jae
inc
lea
pop
rep
clc
repnz
jae
addb
mov
mov
clc
repnz
jae
add
push
sub
repnz
jae
and
cmp
jg
clc
repnz
jae
add
push
clc
repnz
jae
push
popa
add
je
imul
mov
incl
push
sbbb
add
jae
mov
clc
repnz
jae
mov
add
addb
add
xor
clc
repnz
jae
add
jnp
jne
clc
repnz
jae
add
xchg
cs
sbbb
test
out
lcall
or
add
stos
add
jae
leave
clc
repnz
jae
add
add
pop
push
fwait
cld
nop
jmp
add
mov
pusha
add
nop
jae
and
mov
jmp
mov
add
sbb
pop
pop
add
jo
imul
cmc
jmp
mov
add
sub
sbb
inc
add
sub
mov
clc
repnz
jae
movsl
les
lea
jae
xor
imul
dec
call
nop
jae
mov
ljmp
jmp
lea
add
add
push
clc
repnz
jae
mov
add
mov
add
jl
jne
push
mov
xchg
ret
outsb
pop
push
add
aad
sbb
clc
clc
repnz
jae
inc
push
add
add
das
sub
clc
repnz
jae
sldt
add
lea
nop
jae
add
push
call
add
test
mov
xchg
ret
les
add
add
mov
push
mov
xchg
ret
sldt
xchg
add
data16
jbe
clc
repnz
jae
add
push
jnp
jmp
add
clc
repnz
jae
sbb
mov
shrl
repnz
jae
in
stos
xchg
mov
daa
sbb
push
mov
xchg
ret
push
mov
push
add
add
dec
lea
clc
repnz
jae
mov
stos
add
add
mov
clc
repnz
jae
add
ja
add
add
clc
repnz
jae
jae
pushf
xchg
mov
clc
repnz
jae
sub
add
add
arpl
clc
repnz
jae
pop
xchg
xchg
fwait
cld
nop
jmp
xchg
push
stos
add
add
or
enter
jmp
pushf
subb
pop
jb
fwait
cld
nop
jmp
add
add
push
dec
mov
fwait
cld
nop
jmp
pop
jae
stos
movzwl
clc
repnz
jae
add
cmpw
fwait
cld
nop
jmp
add
leave
fwait
cld
nop
jmp
or
pop
add
test
in
je
clc
repnz
jae
jae,pn
mov
add
fwait
cld
nop
jmp
or
shrl
jne
clc
repnz
jae
add
add
movzwl
clc
repnz
jae
jae
push
push
stos
iret
push
mov
add
add
add
and
add
add
push
inc
xor
xor
mov
clc
repnz
jae
movsb
add
add
fwait
cld
nop
jmp
xchg
add
cmpsb
add
mov
xchg
ret
pop
push
push
push
add
imul
adc
incl
pushf
add
add
add
clc
repnz
jae
add
cmp
push
mov
xor
movsb
dec
flds
add
dec
add
nop
add
cmpsb
add
mov
nop
jmp
add
sti
dec
fwait
cld
nop
jmp
mov
add
mov
add
push
mov
xchg
ret
add
add
clc
repnz
jae
add
jae
cwtl
pushl
clc
repnz
jae
aad
mov
insb
inc
jb
clc
repnz
jae
sub
push
add
push
mov
xchg
ret
mov
mov
xor
clc
repnz
jae
add
movsb
call
repnz
jae
mov
add
dec
add
clc
repnz
jae
add
stos
add
pop
fcoml
repnz
jae
add
or
lea
pop
add
test
repnz
clc
repnz
jae
pop
add
inc
add
test
lock
clc
repnz
jae
add
add
or
clc
repnz
jae
mov
cmp
xor
clc
repnz
jae
mov
add
mov
fwait
cld
nop
jmp
add
popa
sub
add
repnz
jae
add
adc
repnz
jae
add
stos
lldt
add
clc
repnz
jae
or
addb
add
xchg
mov
add
add
sub
mov
call
mov
sub
clc
repnz
jae
add
mov
add
clc
repnz
jae
add
mov
clc
repnz
jae
add
pop
inc
add
mov
add
add
test
mov
and
clc
repnz
jae
add
xchg
add
pop
xor
clc
repnz
jae
popa
add
add
add
addb
xor
clc
repnz
jae
cmp
add
push
push
mov
xchg
ret
push
inc
mov
add
fidivrl
clc
repnz
jae
add
cmp
nop
jae
add
add
mov
fwait
cld
nop
jmp
add
in
add
rolb
add
cmp
cld
nop
jmp
push
add
add
call
nop
jae
mov
pusha
fwait
cld
nop
jmp
push
les
and
das
mov
clc
repnz
jae
pop
add
stos
add
clc
repnz
jae
pop
add
xchg
mov
add
clc
repnz
jae
add
mov
add
add
clc
repnz
jae
add
add
xchg
clc
repnz
jae
add
mov
mov
call
fwait
cld
nop
jmp
add
add
fwait
cld
nop
jmp
add
add
add
xor
add
clc
repnz
jae
add
ljmp
add
repnz
jae
add
push
clc
repnz
jae
push
movsl
add
inc
addb
push
mov
add
sti
mov
add
add
test
fwait
cld
nop
jmp
add
jae
push
movzwl
clc
repnz
jae
mov
popa
outsb
outsb
pop
mov
clc
repnz
jae
or
stos
and
add
clc
repnz
jae
mov
pop
inc
adc
aam
pop
test
push
mov
xchg
ret
mov
pop
inc
arpl
mov
clc
repnz
jae
pop
push
test
inc
sbbb
and
outsl
add
add
or
mov
clc
repnz
jae
outsb
add
add
add
repnz
jae
aad
ret
fucomip
lock
lcall
hlt
pushl
mov
jne
fwait
cld
nop
jmp
sub
add
imul
jae
add
mov
mov
xchg
ret
xor
push
sub
sbb
repnz
add
add
repnz
jae
pop
add
xor
pop
add
clc
repnz
jae
add
call
rolb
jge
icebp
fwait
cld
nop
jmp
add
add
iret
or
inc
add
xchg
and
or
dec
out
lcall
repnz
incl
cs
add
clc
repnz
jae
and
mov
add
push
add
mov
clc
repnz
jae
test
aas
les
add
clc
add
push
mov
xchg
ret
add
pop
add
clc
repnz
jae
or
add
psubsw
add
add
arpl
icebp
clc
repnz
jae
lea
add
add
mov
lods
mov
clc
repnz
jae
add
jg
stos
clc
repnz
jae
stos
and
les
mov
into
mov
clc
repnz
jae
stos
mov
sub
shlb
jnp
dec
and
fwait
cld
nop
jmp
push
add
in
sub
idiv
add
fwait
cld
nop
jmp
add
aad
add
clc
repnz
jae
or
jae
xor
push
mov
xchg
ret
add
xchg
xchg
inc
add
nop
jae
mov
cmc
je
sbb
inc
add
inc
add
push
add
push
add
add
fwait
cld
nop
jmp
add
or
dec
and
clc
repnz
jae
xchg
roll
pop
movsb
mov
mov
inc
add
add
add
clc
repnz
jae
push
add
xchg
add
clc
repnz
jae
add
lea
inc
mov
sub
int
inc
add
inc
add
add
pop
or
repnz
jae
mov
movsb
je
add
repnz
jae
add
add
add
clc
repnz
jae
add
pop
add
add
test
fwait
cld
nop
jmp
aad
add
add
inc
add
add
mov
xor
clc
repnz
jae
add
out
and
clc
repnz
jae
add
mov
inc
aad
add
mov
adc
cld
nop
jmp
inc
xor
mov
aas
pop
add
clc
repnz
jae
add
push
mov
add
add
add
add
clc
repnz
jae
sbb
mov
mov
clc
repnz
jae
add
add
roll
push
pop
stos
push
mov
xchg
ret
sbb
add
cmp
xor
and
rep
fwait
cld
nop
jmp
push
add
add
fwait
cld
nop
jmp
call
add
test
fwait
cld
nop
jmp
add
test
add
mov
sahf
inc
push
mov
xchg
ret
stos
or
pop
lret
clc
repnz
jae
mov
push
add
mov
xchg
ret
and
xor
outsb
pop
pop
clc
repnz
jae
and
sub
add
add
inc
add
xor
fwait
cld
nop
jmp
pop
jae
pushf
or
or
repnz
jae
or
aas
add
add
add
add
add
xchg
push
pop
in
dec
dec
clc
repnz
jae
add
add
xor
fwait
cld
nop
jmp
mov
xchg
mov
clc
repnz
jae
add
ret
lcall
jae
cs
stos
rolb
mov
call
clc
repnz
jae
andb
xchg
add
xor
and
repnz
jae
verw
pushf
pop
add
add
clc
repnz
jae
popa
jae
xlat
mov
lea
clc
repnz
jae
add
popa
add
rcrl
jae
inc
add
mov
pop
popa
push
jp
inc
and
push
mov
xchg
ret
add
or
clc
repnz
jae
pop
push
pop
mov
add
mov
xor
clc
repnz
jae
xchg
lods
push
push
mov
xchg
ret
add
mov
jae
and
nop
jae
stos
add
xor
xchg
add
add
repnz
jae
add
mov
add
pusha
add
fwait
cld
nop
jmp
push
add
mov
stos
add
xorl
push
mov
xchg
ret
add
nop
cmp
add
cmpsl
mov
add
clc
repnz
jae
add
adc
testb
add
add
push
mov
xchg
ret
add
mov
clc
repnz
jae
rcll
outsb
outsb
and
clc
repnz
jae
mov
mov
add
push
add
lea
clc
repnz
jae
pop
arpl
add
repnz
jae
add
add
jl
clc
repnz
jae
push
add
les
push
pop
les
pusha
push
mov
xchg
ret
lea
call
push
clc
repnz
jae
add
add
mov
insb
push
fwait
cld
nop
jmp
aas
add
addb
push
xchg
out
pop
push
mov
xchg
ret
add
sbb
sub
repnz
jae
add
add
sbb
test
pop
je
xor
fwait
cld
nop
jmp
movsl
add
add
and
add
clc
repnz
jae
and
test
clc
repnz
jae
aas
les
add
repnz
jae
add
add
add
add
fldl
jo
fwait
cld
nop
jmp
add
les
add
add
push
mov
xchg
ret
popa
rolb
add
call
fwait
cld
nop
jmp
inc
add
and
push
fs
repnz
jae
push
add
xor
add
fwait
cld
nop
jmp
inc
jae
subl
add
fwait
cld
nop
jmp
add
les
add
clc
repnz
jae
push
pushf
rol
pop
mov
sbb
push
add
add
sar
repnz
jae
pop
add
xor
xchg
lock
decl
push
push
popa
aas
add
push
inc
add
push
mov
fwait
cld
nop
jmp
add
arpl
clc
clc
repnz
jae
add
add
mov
insl
xor
fwait
cld
nop
jmp
add
add
add
push
fmuls
cld
nop
jmp
add
mov
xor
add
out
dec
fwait
cld
nop
jmp
add
movsl
add
nop
mov
pop
pop
mov
clc
repnz
jae
add
inc
add
add
fwait
cld
nop
jmp
add
rolb
add
push
add
repnz
jae
and
mov
sub
add
jae
jae
add
mov
xchg
ret
sbb
add
mov
fistl
adc
inc
add
pop
add
pop
call
clc
repnz
jae
outsb
xor
sub
push
mov
xchg
ret
cs
cs
mov
jne
fwait
cld
nop
jmp
add
pushf
add
push
mov
xchg
ret
add
pop
addb
add
add
jne
clc
repnz
jae
add
add
lret
pop
fwait
cld
nop
jmp
and
add
mov
inc
add
clc
repnz
jae
cmp
mov
mov
add
mov
add
fwait
cld
nop
jmp
call
or
jg
fwait
cld
nop
jmp
add
add
pop
les
nop
add
adc
repnz
jae
add
mov
cmp
popa
add
repnz
jae
aad
pop
add
inc
addb
mov
clc
repnz
jae
add
push
push
mov
mov
pusha
add
mov
xchg
ret
pop
mov
adcb
adc
cld
nop
jmp
roll
add
add
mov
clc
repnz
jae
add
repnz
jae
add
arpl
mov
repnz
jae
mov
add
outsb
add
mov
sbb
add
jmp
add
add
pop
add
les
in
add
pusha
push
mov
xchg
ret
and
nop
add
jge
fwait
cld
nop
jmp
pop
mov
sbb
pushf
cs
push
mov
xchg
ret
add
mov
mov
je
clc
repnz
jae
sbb
add
mov
clc
repnz
jae
xchg
jge
clc
repnz
jae
add
push
movsb
pop
push
mov
clc
repnz
jae
mov
movsl
pop
add
mov
fwait
cld
nop
jmp
add
aas
and
add
sub
jae
add
and
add
ja
push
fwait
cld
nop
jmp
add
in
movsl
add
mov
nop
jae
mov
add
add
add
add
popa
add
cld
nop
jmp
add
add
stos
and
and
mov
add
push
clc
repnz
jae
mov
xchg
add
xchg
clc
repnz
jae
add
xchg
loopne
imul
jmp
add
stos
pop
mov
adc
repnz
jae
add
out
mov
lcall
aam
incl
add
mov
add
pop
clc
repnz
jae
pop
push
in
add
add
clc
repnz
jae
add
xchg
icebp
sbb
mov
nop
jae
push
add
mov
mov
nop
jmp
add
add
cld
push
mov
add
add
ljmp
jecxz
fists
orl
add
roll
and
pop
fwait
cld
nop
jmp
add
push
add
push
movsb
clc
repnz
jae
add
add
dec
add
clc
repnz
jae
add
arpl
rolb
jecxz
inc
add
add
push
mov
xchg
ret
sbb
shlb
mov
push
mov
xchg
ret
add
in
and
xor
clc
repnz
jae
mov
add
add
repnz
jae
mov
add
mov
jmp
lcall
add
addb
sbb
add
arpl
mov
pop
popl
clc
repnz
jae
pop
push
or
in
and
mov
push
fwait
cld
nop
jmp
add
mov
mov
jmp
add
sbb
daa
insb
push
push
mov
xchg
ret
add
mov
add
add
cmpsl
add
add
repnz
jae
xchg
mov
add
push
clc
repnz
jae
les
rcrb
mov
push
push
mov
xchg
ret
xor
jae
add
add
fmuls
repnz
jae
mov
add
clc
repnz
jae
shlb
xchg
and
clc
repnz
jae
in
add
aas
push
add
mov
clc
repnz
jae
xchg
xor
stos
testb
decb
jmp
add
mov
or
add
repnz
jae
pop
pop
add
add
repnz
jae
mov
add
xchg
pusha
add
xor
add
clc
repnz
jae
mov
xor
add
repnz
jae
push
popa
stos
xor
add
add
fwait
cld
nop
jmp
les
jne
clc
repnz
jae
push
add
mov
repnz
jae
mov
popa
add
push
fwait
cld
nop
jmp
add
or
add
push
mov
xchg
ret
add
mov
paddb
repnz
jae
pop
xchg
add
andl
add
push
popa
rcrb
cs
jmp
decl
pop
or
pop
push
add
push
fwait
cld
nop
jmp
add
mov
add
add
test
movzwl
clc
repnz
jae
mov
mov
cmp
repnz
jae
add
sbb
add
repnz
jae
xchg
jae
cmp
popa
clc
repnz
jae
stos
les
fisttpll
nop
jae
mov
pop
add
inc
jp
fwait
cld
nop
jmp
add
test
test
mov
clc
repnz
jae
add
int
mov
push
fwait
cld
nop
jmp
nop
les
shrb
sbb
clc
repnz
jae
pop
push
and
add
mov
loopne
mov
xchg
ret
add
sbb
add
sub
clc
repnz
jae
push
les
mov
stos
shrl
sub
jnp
lahf
add
add
sub
bound
mov
out
iret
lret
test
push
xor
addb
add
fnstcw
jne
pop
bound
mov
jmp
sub
xor
test
add
leave
adc
push
cmp
add
mov
inc
rorl
xor
cmp
cmp
fdivrl
mov
pop
add
test
add
add
lea
and
mov
ds
xchg
add
xor
sbb
enter
ret
push
add
push
sbb
push
addb
fisttpl
enter
xchg
sub
xor
je
pop
repnz
add
mov
fsubl
add
or
mov
xor
cld
dec
out
ret
push
lcall
push
rolb
dec
addl
pop
cmp
aaa
mov
lock
jp
faddl
pop
out
xchg
add
mov
add
mov
and
xchg
add
jge
add
imul
add
sub
dec
movsl
push
pusha
add
iret
jnp
imull
mov
add
jle
add
mov
sti
pop
fiaddl
mov
cltd
out
cmpsb
add
add
add
frstor
push
mov
mov
dec
pop
inc
add
mov
nop
add
push
add
dec
dec
pop
or
xor
mov
out
out
cwtl
dec
mov
addb
add
jb
and
adc
cmp
add
add
add
add
add
mov
aam
aam
loopne
imul
add
pushf
mov
mov
add
or
mov
add
push
sahf
aas
adc
add
push
addb
add
jnp
add
out
movl
add
push
add
mov
push
xchg
dec
out
fcoml
add
xchg
gs
aam
xchg
add
add
add
clc
das
int3
dec
insb
cmp
xlat
movsb
add
cli
iret
jge
add
movsl
fwait
loope
jl
ret
cmpsl
faddl
sub
add
and
xchg
add
push
add
add
jo
jae
add
inc
imul
or
test
fbld
add
inc
add
sbb
push
add
stc
fistpll
push
add
and
mov
cmp
mov
push
add
lods
jg
lret
iret
xor
xchg
jnp
push
add
ss
rcll
imul
add
fwait
leave
xlat
inc
movb
add
mov
adc
jbe
movb
add
lahf
stos
rolb
ljmp
cmp
add
add
arpl
xor
dec
lds
mov
push
add
repz
add
mov
xor
xchg
fsubrl
push
add
in
addr16
dec
cmp
add
dec
aas
lret
push
mov
ljmp
into
lret
sbb
sbb
je
out
lret
lret
add
push
ja
test
sbb
add
stos
in
xchg
in
das
xchg
dec
xor
lahf
jne
add
jne
jecxz
add
adc
mov
fcmovb
arpl
mov
iret
cmp
add
add
fstps
sbb
adc
int3
inc
dec
or
mov
cmpsl
jo
adc
fucomp
jp
and
inc
sub
cmp
add
xchg
add
mov
popa
pusha
add
lods
sub
in
test
cli
xor
shld
stos
loope
add
pop
fcompl
xor
les
nop
add
repz
jnp
mov
sbb
mov
add
push
add
add
add
int
xchg
jg
enter
enter
add
inc
add
les
sbb
imul
rolb
lea
iret
jns
or
add
data16
add
cmp
add
or
sahf
mov
aaa
test
mov
maxps
stc
jp
add
scas
enter
add
add
add
out
pop
xchg
inc
iret
and
push
add
or
popa
mov
xor
add
mov
imul
fs
test
sbb
ljmp
add
adc
fldt
add
add
mov
and
mov
aaa
jne
add
add
loope
add
cmp
fldl
dec
cmp
cmp
pop
test
sbb
std
mov
aas
leave
popa
iret
jg
add
add
add
ret
enter
fbstp
add
mov
lds
popa
dec
xor
adc
lods
pop
cmp
clc
inc
pop
addl
add
sub
cltd
js
add
repz
adc
add
add
add
add
push
add
repnz
cmp
adc
cmp
xchg
mov
pop
xchg
add
jmp
add
xchg
pop
mov
addr16
xchg
add
insb
xor
pop
pop
cli
xchg
test
out
mov
loopne
sub
push
xor
add
add
dec
test
mov
add
mov
sub
sbb
jne
fiadds
add
mov
add
dec
loop
mov
negl
into
movsb
add
pop
mov
mov
adc
mov
xchg
mov
jge
pushf
and
mov
add
add
imul
in
add
std
stos
inc
add
pop
xor
pop
xchg
data16
mov
mov
inc
icebp
out
data16
dec
inc
add
mov
jp
out
mov
lds
xor
inc
dec
hlt
add
and
add
add
mov
or
sahf
cmpsl
dec
lcall
add
mov
into
xor
add
cwtl
mov
dec
popf
icebp
mov
mov
add
add
mov
add
out
les
dec
in
add
mov
lods
lret
mov
fstp
or
addb
shll
mov
push
outsb
xchg
dec
xchg
nop
add
addb
insl
out
mov
add
rorl
or
fwait
movsl
arpl
rcl
inc
sbb
cs
dec
ret
add
push
add
mov
test
cmc
xor
sub
add
inc
gs
xor
mov
cld
addb
insb
rolb
jbe
add
xor
add
movsl
xor
push
add
jb
push
add
push
pop
inc
jl
inc
in
call
lock
out
fidivs
mov
jb
das
pop
das
dec
cmpxchg
xchg
insb
enter
add
add
pop
ret
add
mov
nop
add
ret
add
add
jle
loopne
jle
insl
mov
add
add
hlt
add
insb
sub
pop
cmp
data16
xchg
fldpi
dec
and
mov
or
mov
movsl
scas
je
sbb
add
add
dec
shrl
imul
add
add
add
add
add
pop
fld
add
adc
fiaddl
loopne
dec
mov
jp
add
mov
mov
push
in
push
scas
test
xchg
aad
push
add
test
stc
out
add
or
add
cli
push
add
or
testb
mov
lea
dec
rolb
testb
add
dec
wrmsr
add
jge
andl
mov
test
or
cli
jae
and
mov
add
mov
adc
inc
add
mov
negl
push
addb
imul
jo
push
add
add
add
ror
sbb
adc
mov
or
sub
xchg
xor
push
add
dec
jg
mov
enter
stc
bound
mov
insb
stos
push
add
adc
jne
add
adc
mov
and
xor
or
adc
sub
cmp
addb
add
inc
sub
scas
mov
inc
add
out
push
sahf
ret
xchg
ret
out
push
add
add
in
pop
lods
xchg
add
fwait
aas
leave
loope
gs
add
lcall
mov
mov
inc
int3
or
cmp
and
sti
push
inc
ret
int
mov
xor
sub
aas
std
xchg
add
xor
jmp
sbb
push
add
xchg
add
add
dec
add
mov
cmpsb
add
or
lock
std
pop
jge
add
xchg
testb
sub
add
jecxz
cli
nop
add
xchg
and
mov
mov
add
jbe
push
add
sub
mov
lock
ja
jae
add
dec
mov
mov
lds
leave
sub
mov
sbb
jne
xchg
add
add
xchg
add
push
add
xor
mov
lret
sti
in
and
lea
popa
xchg
add
insb
xor
dec
leave
push
adc
js
lret
xchg
add
pop
je
ljmp
jg
add
loopne
out
cmp
add
mov
xchg
add
mov
sub
scas
dec
jge
mov
mov
jae
movd
cmpps
add
add
add
sbb
sub
sarl
mov
push
cmp
pusha
add
add
add
rolb
lret
jecxz
adc
div
add
xchg
add
mov
add
aad
mov
add
push
add
adc
inc
lds
daa
gs
fimull
fstpt
xor
and
mov
fwait
inc
add
mov
enter
jnp
addr16
add
xorl
xor
add
aam
ficompl
mov
pop
ret
dec
jmp
add
sub
add
pop
sub
mov
loop
pusha
add
cmpsb
add
push
add
notl
jp
push
fidivrs
push
add
ja
pop
inc
add
push
add
add
fmuls
add
pop
rorl
lods
pop
inc
add
add
dec
outsb
xor
add
add
imul
daa
xor
cmp
add
in
stos
push
add
sub
add
das
repnz
pop
lock
mov
lods
dec
imul
es
add
mov
add
xchg
addr16
jo
ret
sub
repnz
add
pop
add
ss
add
add
push
add
mov
jp
or
push
add
jae
sahf
ret
lock
fnstenv
aaa
sahf
adc
fstl
add
test
int
add
sti
push
push
cmp
sbb
jecxz
in
rcl
testb
rolb
les
sub
ds
jb
loop
mov
push
add
add
in
fwait
mov
and
mov
add
add
sbb
or
add
sub
js
or
add
test
imul
xor
and
dec
in
pop
lods
push
mov
mov
mov
scas
add
add
fildl
add
add
ret
sti
xchg
add
das
xor
addb
clc
mov
add
add
add
add
cmpsb
add
xchg
add
addb
add
or
adc
mov
sahf
lret
std
andl
mov
mov
fwait
insb
jecxz
add
mov
sbbl
add
xor
mov
mov
jecxz
and
add
fwait
outsl
or
jbe
je
test
sbb
pushf
cmpsl
test
out
xlat
int
add
inc
add
clc
fisttps
adc
adc
ficoml
into
jno
iret
sub
movb
or
add
xlat
lods
testb
xchg
dec
fisubrs
std
mov
or
add
popf
out
pop
scas
popf
push
add
sub
add
mov
aas
fildll
push
add
cmp
and
dec
addb
add
int3
xor
push
mov
add
push
add
dec
sub
sub
iret
rolb
iret
add
jle
movb
mov
aad
cmc
mov
fdivr
jne
add
outsl
xchg
bound
mov
add
push
xchg
enter
mov
adc
inc
add
xor
into
loop
stos
mov
add
popf
fistps
add
add
leave
sub
fildl
imul
iret
mov
dec
outsl
nop
add
enter
sahf
movsb
add
sbbl
fwait
clc
cmpsl
fdivrs
loope
stos
fmulp
pushf
mov
cmp
addb
adc
sbb
enter
cmpsl
inc
add
add
ja
lods
movb
arpl
add
mov
add
mov
add
push
add
inc
add
add
add
shll
add
add
jne
add
das
rcrl
mov
mov
add
add
add
push
mov
mov
or
cmc
sbb
decl
cli
cmp
in
push
add
popf
jge
add
dec
xchg
mov
add
pop
lahf
es
xchg
add
hlt
add
sub
outsb
fsubl
sub
mov
add
add
mov
sbb
loopne
or
lds
iret
add
mov
push
xchg
add
add
add
lea
ret
inc
add
insl
jnp
in
sbb
jg
add
add
jne
and
add
fs
inc
pop
jno
lods
outsl
pop
int
pop
lds
cmp
jne
add
rorl
and
addr16
inc
rcll
xor
inc
mov
cltd
lcall
push
add
add
push
inc
mov
ljmp
xchg
out
stos
fstps
sbb
add
dec
pop
out
sub
add
xlat
ja
add
mov
js
das
mov
add
jns
pop
sub
add
sub
inc
mov
add
fstpt
divl
add
add
test
test
inc
add
cmp
add
mov
jnp
add
push
sub
add
push
std
sub
dec
jo
clc
add
cli
cmpsb
add
xchg
mov
iret
movsb
add
data16
add
push
fwait
push
data16
mov
jne
testb
mov
or
xor
rolb
in
add
mov
cmp
testl
add
movb
or
lcall
cmp
inc
add
data16
add
fimull
jp
xlat
cmp
add
add
stos
xchg
loop
jb
aam
loopne
mov
out
sbbl
fs
ret
leave
xchg
dec
std
inc
loop
pop
repnz
lea
push
mov
add
mov
dec
fadds
add
mov
fucomip
test
jg
push
add
add
add
fsubr
es
test
cmp
add
add
rolb
adc
or
cmp
mov
mov
add
lret
sbb
ds
add
mov
add
push
add
mov
mov
ja
lods
movsl
cmp
ds
out
sub
cmp
sbb
and
add
xchg
add
add
xor
lcall
jmp
add
jle
mov
out
xchg
add
jecxz
sub
movsb
add
ds
lds
add
push
ret
je
in
push
add
arpl
movsb
add
dec
faddl
out
addb
pusha
add
mov
dec
push
add
orl
add
das
sbb
xor
mov
add
add
add
aam
push
inc
add
pop
mov
test
pop
movb
add
pop
ja
fildl
add
add
mov
push
cmp
fprem
add
mov
roll
pop
mov
insb
test
lds
rolb
je
add
push
sub
cwtl
mov
das
pop
jg,pn
cltd
mov
add
jns
push
push
xor
test
into
lock
test
ficoml
ffree
jecxz
sub
inc
add
nop
add
xor
add
mov
out
imul
add
mov
add
inc
add
test
outsb
insb
cmc
cltd
sahf
xor
lret
sahf
xchg
add
jae
mov
cld
flds
scas
mov
add
arpl
mov
mov
pop
movsl
scas
js
and
sub
cwtl
adc
fwait
dec
scas
repz
call
push
adc
lahf
aaa
fimull
movb
add
pop
xor
mov
movsl
mov
inc
add
push
add
cwtl
lods
sub
xchg
ds
add
add
add
into
push
add
daa
test
add
iret
pushf
addr16
cmp
sbb
xchg
add
dec
xchg
push
add
mov
cmpsl
scas
mov
mov
fimull
xor
mov
sbb
add
sbb
testb
adc
rcrl
mov
addl
data16
pop
testb
jne
jge
push
mov
iret
mov
gs
clc
inc
lock
pop
imul
add
xlat
xor
aam
and
push
ret
add
jbe
fmull
xor
addb
testb
pusha
add
addr16
inc
lcall
not
add
push
add
add
add
add
jb
rol
das
push
add
or
add
dec
pop
ret
sbb
int3
push
add
ret
add
dec
das
cmp
sub
add
inc
jl
mov
add
sti
in
jl
add
sarl
add
add
and
xor
xchg
add
push
add
mov
cs
jg
cs
movb
or
add
mov
jg
movsl
ss
add
mov
cmp
std
push
js
push
add
mov
sub
dec
and
add
aaa
iret
mov
add
lahf
in
add
inc
dec
ja
xlat
add
add
add
pop
mov
add
sbb
lcall
out
xchg
cmp
pop
lret
add
mov
add
jp
xchg
cmp
sbb
add
mov
cmp
cmp
je
mov
dec
lods
sbb
xor
shrl
adc
mov
pop
cmc
mov
subl
add
add
jns
cmp
jno
xor
sub
add
add
add
dec
in
jp
ja
xchg
add
and
stos
pop
jle
adc
mov
inc
rolb
lds
mov
mov
cmpsb
add
cmp
mov
push
cmp
lret
sahf
xor
mov
hlt
add
push
inc
lahf
rolb
push
add
cmc
lret
data16
loop
mov
xor
add
push
mov
add
add
scas
inc
mov
fadds
add
push
call
jno
daa
dec
or
fistpl
enter
or
sub
in
pop
mov
mov
lods
or
push
add
push
push
add
add
mov
rolb
xor
rcrl
mov
add
into
andl
mov
mov
fnstenv
add
add
test
xchg
cld
sbb
mov
add
ljmp
lods
cmpsl
sub
adc
movsl
cmp
add
das
xor
iret
arpl
or
add
add
pop
mov
js
jmp
cwtl
les
jecxz
and
add
outsb
inc
add
add
add
push
cmpsl
rcrl
pop
mov
add
add
jo
xor
loop
mov
add
adc
stos
mov
cmp
inc
add
inc
dec
mov
popa
add
add
dec
or
and
mov
addr16
add
popa
cmc
pop
mov
mov
adc
testb
add
cmp
ret
sub
add
jne
in
bound
mov
jge
outsl
adc
pop
push
push
mov
rcr
cmp
xchg
jo
add
imul
jo
lods
dec
sahf
jle
fwait
sbb
cmp
mov
add
jge
push
add
add
add
add
jl
inc
stos
add
in
xor
and
adc
lock
fs
mov
out
inc
push
add
jbe
in
add
mov
pop
cmp
xor
jns
btc
add
add
mov
add
pop
xchg
push
movsb
add
push
add
call
sbb
sub
add
mov
in
in
jl
sbb
xor
jle
pop
call
mov
jle
lods
or
in
xor
add
nop
add
mov
nop
add
std
in
icebp
pop
mov
cmpsb
add
test
add
vmread
add
xchg
rolb
je
jbe
jae
setbe
popf
dec
loope
sbb
add
testb
ds
dec
inc
add
mov
add
add
cmc
inc
add
mov
out
jge
add
add
mov
lahf
rolb
mov
movsb
add
add
out
outsl
lods
subl
mov
cmp
add
cltd
mov
icebp
inc
mov
shll
jecxz
push
add
xchg
add
add
lret
rolb
xchg
sbb
out
sub
xchg
gs
xor
add
or
add
outsb
in
cs
movb
test
add
mov
adc
dec
push
pop
sar
xor
leave
dec
in
add
add
lods
sbb
add
add
jle
pop
cmp
add
fisubl
lds
add
movsl
lret
add
mov
sub
dec
cltd
in
mov
inc
int3
popl
sub
add
add
add
add
add
add
add
add
enter
adc
pop
push
add
ficompl
daa
xchg
add
movsl
cwtl
pop
cmp
add
popa
popl
mov
mov
rorl
insl
xchg
inc
add
pop
andl
adc
fsubrs
add
add
mov
and
mov
sub
add
add
add
rolb
sub
mov
icebp
loop
add
xchg
add
add
mov
dec
movb
cld
dec
add
xchg
jmp
add
dec
leave
sub
add
add
add
add
sbb
add
jns
inc
xchg
in
loope
pop
scas
mov
add
addr16
inc
inc
lret
add
cmp
add
rolb
mov
add
add
test
add
les
repz
stc
ss
add
xchg
testb
pop
imul
fadd
jp
or
fcoml
mov
leave
cmpsl
gs
int3
and
aaa
data16
add
pop
adc
movsb
add
add
cld
dec
lds
mov
mov
add
lcall
ret
add
sbb
adc
das
pop
push
add
mov
add
roll
ds
cmp
mov
mov
cltd
mov
lea
aas
push
add
add
pop
mov
add
lahf
je
sti
outsb
dec
add
and
add
cltd
add
adc
adc
add
add
add
push
sbb
add
in
jp
add
je
push
sbb
mov
test
add
insb
popf
mov
xchg
add
add
add
xor
pop
sbb
addr16
mov
add
aam
inc
add
rcll
mov
repnz
popf
mov
test
push
repnz
mov
add
sbb
mov
xchg
enter
scas
addr16
add
out
or
imul
or
dec
sbb
add
cwtl
mov
inc
dec
inc
mov
mov
icebp
loopne
fsubl
mov
jmp
xchg
pxor
add
addr16
jmp
rolb
push
cmp
data16
call
mov
fcmovne
jnp
lcall
add
scas
xor
dec
cmc
das
testb
jo
add
mov
bound
mov
adc
add
adc
pop
or
cmc
push
addl
dec
pop
cld
sbb
add
movsl
out
sub
out
insl
addr16
aad
lret
dec
inc
ja
rolb
inc
movl
add
mov
xlat
xor
les
mov
aaa
mov
aas
mov
or
add
out
add
xchg
das
add
and
mov
add
fcomi
add
mov
movsb
add
jo
stc
sahf
sbb
enter
stc
sub
jns
xlat
dec
sub
add
add
xchg
mov
shll
jmp
cmp
sbb
pop
mov
xchg
mov
xor
test
hlt
add
ss
subl
xchg
ljmp
add
mov
stos
scas
ret
lret
sbb
add
or
mov
sub
mull
add
pop
mov
leave
stc
pop
cmpsl
mov
repz
mov
cli
fldt
pop
lret
add
rolb
rolb
add
gs
inc
add
xchg
add
ret
xor
in
outsb
adc
lock
rolb
rolb
je
out
mov
inc
add
add
pop
mov
add
lahf
fnstenv
mov
add
mov
clc
xor
cmpsl
add
aam
outsl
repz
int3
jnp
add
jne
jns
add
mov
mov
xchg
add
add
addb
mov
jmp
mov
pop
jns
fdivrl
ja
add
gs
movb
loop
dec
push
add
mov
sub
add
mov
add
push
dec
imul
addb
loopne
xor
mov
jmp
add
pop
btr
add
add
popa
fcom
stos
out
das
addb
cmpsb
add
mov
aas
and
add
mov
sub
mov
add
xor
jmp
add
cmp
jo
push
dec
jb
push
pusha
add
cmp
mov
sub
lods
jecxz
das
rolb
inc
add
mov
pop
rolb
mov
add
aas
sahf
ljmp
pop
fsubl
hlt
add
rolb
xor
in
inc
addb
add
movsb
add
add
adc
sti
cmp
add
mov
add
lods
scas
out
add
mov
loopne
dec
dec
pop
push
add
push
xor
out
xor
add
mov
data16
les
enter
add
add
inc
inc
add
add
jnp
add
cmpsb
add
add
mov
sub
fwait
dec
mov
add
push
push
out
mov
add
add
dec
daa
sbb
mov
jg
mov
add
sti
pop
jns
ficoms
add
testb
mov
add
add
scas
in
lea
xchg
negl
add
mov
insb
mov
push
sbb
bound
mov
scas
mov
sub
pop
cmp
test
add
add
mov
repz
leave
add
add
mov
sbb
add
mov
mov
jp
sbb
sbb
add
sbb
cmp
in
mull
lea
add
ret
out
ffree
add
push
dec
arpl
add
xchg
xchg
add
xor
add
push
xor
add
dec
je
push
push
add
xchg
add
push
test
jo
scas
lods
lods
or
add
add
dec
add
ja
mov
add
daa
mov
add
ds
jle
mov
xchg
dec
es
pop
inc
add
add
sbb
adc
mov
add
fstps
das
jmp
add
aad
mov
dec
daa
cs
jno
repnz
pushf
mov
cltd
xor
add
stc
mov
xlat
fiaddl
idiv
inc
add
jg
or
jg
add
js
mov
lods
jae
movsb
add
cmpsl
ss
popf
jecxz
or
jmp
cltd
incl
cli
sub
aad
mov
ret
add
add
cmc
mov
push
add
ss
add
cmpsb
add
add
inc
test
inc
popa
into
arpl
add
pop
popf
push
mov
pop
mov
inc
adc
add
scas
cmc
pop
push
add
add
xchg
pop
push
add
xchg
xchg
or
jns
fsubs
add
add
testl
leave
cwtl
mov
add
add
mov
mov
mov
jl
stos
in
adc
add
add
push
in
lret
vmulps
add
testl
add
add
mov
add
sbb
add
enter
mov
pop
jl
cwtl
jae
add
lods
divl
add
dec
jle
push
add
and
push
add
repnz
bound
mov
mov
xorl
add
in
dec
sarl
add
add
scas
inc
adc
mov
add
mov
add
scas
orl
add
addb
pop
adc
mov
cmp
pop
stos
add
xchg
jns
imul
movsb
add
or
xor
mov
cmpsl
addb
add
lret
push
add
push
add
adc
push
add
fnsave
adc
push
add
cmpsb
add
pop
dec
pushf
repnz
lret
cmpsb
add
jns
adc
mov
push
or
mov
add
add
lret
xor
in
mov
rolb
xlat
inc
sbb
add
aam
inc
imul
jb
mov
add
and
inc
pop
jle
test
dec
jecxz
aad
loop
sti
mov
add
mov
pushf
cmp
loope
add
mov
test
inc
add
jb
mov
or
and
inc
push
add
push
mov
fst
add
ret
push
mov
dec
loope
hlt
add
outsb
leave
xchg
sub
lcall
push
add
xchg
adc
sbb
add
push
add
push
add
jb
inc
add
leave
in
pop
xor
test
js
mov
cmp
pop
pop
leave
out
into
daa
jg
imul
cmp
lahf
jo
ret
lods
jg
nop
add
add
jl
in
inc
add
sti
jmp
cld
mov
add
add
daa
stos
jp
test
jmp
dec
rolb
shl
add
fidivrl
insb
or
add
movb
out
shll
mov
add
sbb
add
ror
imul
add
xor
adc
ret
cmp
andl
add
int
add
int
add
xchg
pop
movb
add
mov
jbe
fisttps
std
cltd
push
add
mov
mov
les
testb
add
add
mov
add
inc
add
add
add
mov
pop
mov
rcrl
ret
inc
add
iret
pushf
cmp
ret
pop
ja
add
loopne
fnstcw
cmp
inc
bound
mov
stos
sbb
testl
and
add
push
add
lea
imul
inc
add
add
aas
rolb
xchg
lods
dec
sbb
testb
and
mov
inc
add
add
cld
popf
push
fcoms
mov
mov
pop
cli
push
mov
add
xchg
cmp
mov
add
pushf
push
add
sub
add
clc
adc
movsl
inc
je
add
mov
fnstcw
xor
push
xlat
test
xchg
repnz
int
out
cld
loopne
add
add
add
fstps
add
outsb
cmp
pusha
add
add
xor
pop
lods
xchg
lret
add
pushf
sbb
mov
xchg
add
sti
inc
add
add
ret
fcoml
cli
je
fcom
xor
fcom
add
cs
in
repnz
in
mov
or
pusha
add
inc
add
lcall
mov
add
outsl
mov
add
filds
xor
mov
addr16
add
jno
add
xchg
push
add
shrl
add
mov
add
xchg
add
shll
add
xlat
mov
add
jnp
add
and
mov
mov
xchg
jns
pop
push
add
xor
add
add
testb
aam
out
ret
int
or
sub
add
mov
add
xor
scas
mov
mov
into
fildl
mov
inc
add
lods
sbb
add
in
in
xchg
cmpsb
add
rcrl
add
add
mov
add
scas
push
mov
test
popa
cltd
movb
mov
mov
ss
or
out
push
add
repnz
shll
fldcw
push
add
add
add
pop
dec
adc
cmpl
ds
mov
add
adc
dec
test
mov
add
aam
or
mov
add
aad
dec
test
cmp
sub
add
and
cltd
jne
and
mov
pop
scas
dec
inc
add
add
pop
mov
imul
adc
mov
lock
movsl
mov
mov
add
add
jne
xor
xor
fwait
int3
adc
shr
pushl
lds
pop
fidivl
and
add
stc
mov
into
cmp
add
or
repz
jg
add
mov
push
add
shll
add
add
jne
mov
add
outsb
xchg
add
cmp
adc
lock
cs
out
push
inc
scas
or
add
add
mov
subl
xchg
aad
sbb
popf
std
jg
inc
cmp
addb
jb
or
add
jae
les
mov
add
mov
add
push
test
add
mov
and
mov
push
add
add
loopne
cltd
movsb
add
hlt
add
xchg
xor
fcoml
add
subl
inc
add
les
movsb
add
push
add
arpl
js
aas
in
cli
mov
jno
sbb
adc
or
sti
lahf
lret
inc
in
cli
in
fwait
in
jmp
add
aad
push
add
out
sbb
gs
add
loope
dec
jle
add
mov
push
add
rolb
add
push
rcll
add
mov
jge
add
and
mov
mov
pop
mov
sub
mov
ja
xchg
add
js
jg
or
hlt
add
add
ret
test
repnz
add
cmp
loop
cmpsb
add
sub
add
sbb
movsb
add
aad
dec
pop
cmc
xchg
add
add
movb
mov
std
push
add
cs
add
cwtl
and
mov
aam
mov
add
add
sbb
lcall
sar
psubb
nop
add
jae
add
add
jmp
insl
add
adc
imul
daa
iret
add
call
xchg
add
add
add
mov
hlt
add
cld
cmp
xchg
loope
loope
add
mov
outsb
xchg
xchg
cmp
add
dec
mov
xor
lahf
mov
add
add
push
add
mov
dec
add
add
cmc
testb
pop
mov
mov
mov
insb
std
xchg
add
test
push
add
fs
add
movb
push
push
adc
jge
mov
add
popf
sub
bound
mov
add
add
in
add
mov
mov
lea
js
xor
or
cmp
sub
xor
and
mov
add
jb
add
mov
add
fnsetpm(287
add
adc
hlt
add
roll
mov
std
cmp
dec
outsl
push
pop
jp
mov
sub
mov
out
push
add
and
lds
mov
add
lahf
test
inc
mov
add
add
je
in
lods
mov
ss
push
int
add
mov
xor
xchg
add
lret
dec
nop
add
or
inc
add
sub
addb
add
mov
add
add
ds
call
ja
mov
push
add
mov
add
aam
lcall
loop
repnz
inc
add
inc
push
fbld
add
and
add
movb
adc
jecxz
into
push
sub
add
in
mov
jp
inc
std
mov
mov
add
jmp
mov
lods
and
pop
push
add
add
add
cmp
mov
add
or
pop
ss
decl
les
xchg
add
pop
mov
pop
jl
cld
add
mov
add
mov
sub
add
pop
cld
mov
mov
mov
mov
cwtl
stc
cmp
xchg
xchg
dec
repnz
add
leave
inc
cmp
add
mov
xor
je
ja
add
add
fnclex
add
add
pop
mov
add
mov
mov
test
ljmp
add
cs
add
mov
pop
cmp
sub
adc
mov
pop
inc
add
mov
add
push
add
xchg
add
add
add
add
jecxz
aam
pop
in
or
pop
out
add
leave
out
inc
or
inc
pop
movsb
add
add
rolb
add
addb
lds
lahf
or
imul
add
aam
testb
add
mov
je
pop
push
add
int3
lcall
iret
mov
jge
cld
mov
pop
xor
daa
push
add
mov
jle
add
add
xchg
add
xchg
add
adc
inc
add
icebp
das
lds
add
sub
gs
fistps
movsb
add
add
sbb
push
inc
mov
enter
fwait
dec
add
das
fmuls
loop
leave
sub
enter
addr16
jmp
aaa
dec
popf
adc
cwtl
aas
cmp
add
add
icebp
push
test
push
sahf
jp
sub
cli
ds
jge
add
ljmp
lret
and
mov
add
or
lret
jne
les
pop
dec
pop
pop
stos
push
add
add
js
xchg
push
cmpl
outsl
andl
mov
push
stos
in
xchg
add
in
dec
push
sbb
sbb
lret
sti
xor
shll
jmp
movsl
jne
into
xlat
sub
stos
mov
add
cmpsb
add
sub
out
data16
mov
add
stos
jo
pop
mov
pushf
dec
rolb
add
xor
fimull
sub
filds
sub
inc
add
mov
sbb
test
add
adc
fiaddl
inc
add
xor
popa
cmp
and
mov
fsts
jecxz
mov
cwtl
pop
daa
mov
adc
iret
pop
lret
fcomps
dec
xor
and
mov
mov
push
add
add
mov
fwait
dec
xor
aad
sbb
jmp
sbb
jmp
mov
mov
add
and
mov
or
add
xchg
add
adc
pop
test
pushf
mov
mov
pop
je
pop
cltd
xchg
aam
ljmp
add
add
mov
add
add
pop
lcall
sub
add
pop
mov
leave
nop
add
add
sub
add
add
add
pop
inc
sub
sub
scas
xchg
add
lahf
mov
fsubrl
xor
xor
add
mov
fstpl
mov
gs
and
adc
in
mov
mov
push
pop
inc
add
stc
test
mov
addb
lea
add
add
repnz
jbe
bound
mov
hlt
add
add
dec
or
add
mov
test
cli
dec
mov
add
add
aas
lret
sbb
push
mov
pslld
in
pop
les
movsl
add
push
xor
mov
xor
arpl
xor
add
adc
mov
inc
add
sub
xchg
add
add
push
add
jae
add
mov
lods
adc
add
xchg
addb
add
sub
add
js
sar
mov
add
add
sub
inc
add
mov
mov
jl
mov
xchg
mov
mov
add
pusha
add
add
loop
mov
add
mov
add
add
push
lret
pop
cmpsb
add
sub
add
testb
mov
fwait
and
mov
in
jbe
sub
hlt
add
je
adc
fistpl
and
or
add
lret
add
add
xchg
add
mov
aad
and
cltd
jp
mov
push
shrl
fstl
add
push
aam
cltd
push
add
bound
mov
add
add
iret
nop
add
dec
data16
push
icebp
push
cmc
dec
cmp
aam
stc
and
xchg
add
mov
mov
add
mov
gs
add
inc
jae
sub
mov
add
add
add
jno
or
add
repz
jae
sub
pop
leave
xor
xchg
add
add
sbb
stc
out
adc
movsb
add
xchg
mov
and
add
add
xor
adc
add
sbb
jns
add
cmp
movsl
aaa
ljmp
add
stc
insb
test
aad
add
pop
ja
les
mov
mov
mov
push
add
lea
add
xor
push
mov
add
scas
mov
into
repnz
xchg
add
add
mov
add
loope
push
add
aam
scas
mov
nop
add
add
cmp
add
add
popf
adc
xchg
mull
add
sub
out
add
mov
mov
lea
int
add
mov
and
sub
add
test
xchg
inc
add
mov
loop
iret
pusha
add
add
lahf
cltd
std
mov
add
and
in
mov
add
adc
addb
add
mov
pop
idivl
lods
ljmp
ja
mov
add
mov
fstpl
cli
mov
sub
decl
and
and
mov
add
add
bound
mov
xchg
cs
mov
mov
stos
testl
flds
mov
pop
jge
dec
sub
add
sub
mov
mov
mov
rorl
jg
movsb
add
dec
push
popf
push
add
inc
add
sti
pop
fs
xchg
lcall
test
mov
adc
out
mov
test
add
add
fidivrl
lcall
add
or
add
lds
jg
and
cmp
lea
pop
mov
out
mov
cmp
mov
mov
mov
xor
mov
dec
mov
pop
mov
dec
aad
ljmp
mov
push
add
dec
dec
mov
loope
add
mov
add
add
xchg
add
mov
sbb
mov
adc
jnp
push
mov
mov
cmp
add
add
mov
mov
inc
add
pop
in
bound
mov
mov
addr16
incl
pop
inc
popa
pushf
xchg
mov
jl
aaa
fxch
ja
add
add
mov
or
fdivs
pop
pushf
int
sub
add
add
adc
das
mov
addb
inc
icebp
pop
bound
mov
fwait
out
push
add
cli
lea
lock
sbb
mov
sbb
add
add
add
addb
pop
ret
dec
dec
arpl
inc
loopne
dec
cmp
dec
dec
lahf
adc
add
mov
std
pop
repnz
pop
pop
mov
sub
xchg
dec
cli
xor
ds
xor
out
in
xor
or
cld
adc
repz
mov
add
movsb
add
addr16
aam
xor
inc
fsubrl
leave
movsl
lret
loope
push
add
add
xchg
adc
add
mov
mov
add
mov
add
and
jbe
sbb
inc
add
mov
int3
add
mov
rorl
lret
mov
int
add
add
cmp
add
add
pop
add
or
lds
scas
xor
dec
or
jne
cmp
jle
add
pop
add
mov
add
mov
pushf
cmp
add
add
in
pusha
add
sti
rolb
push
pop
movsl
xor
fcomi
int3
lahf
sub
mov
inc
pop
xchg
lahf
adc
pop
xchg
rolb
stc
ret
gs
add
stc
adcl
call
lods
sub
lret
rolb
jbe
sbb
insl
movsl
rol
repz
fwait
push
add
cmpsl
mov
shl
scas
nop
add
add
mov
jl
decl
mov
cs
fst
add
loop
sub
add
lahf
fisttpl
push
add
test
add
pop
pop
jb
xor
jnp
push
clc
push
xor
add
mov
add
add
jge
add
pop
enter
ja
dec
test
cli
jbe
mov
and
add
out
popf
pop
sbb
mov
sbb
out
testb
sub
add
cltd
mov
and
add
xor
nop
add
loop
mov
call
imul
ljmp
push
add
mov
pop
icebp
outsb
sbb
sub
sub
outsb
add
add
sbb
out
call
scas
cmp
aad
add
sub
add
jmp
cmp
adc
sub
popf
roll
cli
nop
add
push
mov
add
imul
xchg
add
pop
insb
sti
jb
fcmovnbe
sub
add
aad
imul
and
mov
movb
add
popa
push
add
je
jl
add
xchg
imul
imul
add
mov
inc
lret
dec
adc
pushf
mov
dec
fst
push
add
rolb
or
xchg
add
add
loope
mov
lods
dec
add
add
push
add
addb
sbb
pushf
jecxz
add
add
xor
daa
movb
mov
push
jg
mov
dec
cmp
inc
add
popl
add
xlat
add
cld
pop
adc
or
test
movb
xchg
sahf
dec
cwtl
xlat
ss
add
add
mov
add
inc
add
cltd
mov
add
cmc
dec
xchg
add
sbb
addb
add
sub
loopne
loope
sbb
add
movb
add
outsb
cmc
mov
mov
xchg
rolb
mov
add
add
mov
js
insb
inc
in
mov
add
pop
cltd
push
xchg
loop
popa
push
add
fmuls
cmp
push
jmp
add
lahf
faddl
dec
hlt
add
add
add
mov
in
pop
addb
add
hlt
add
add
add
pop
adc
into
repz
in
out
faddp
aaa
sub
int
mov
or
add
add
and
movsb
add
xchg
add
mov
add
mov
add
sbb
mov
sti
fcoml
push
imul
add
mov
testb
xchg
push
add
mov
fdivs
jbe
jae
clc
fcomi
shll
pushf
loope
incl
jno
add
sub
lea
aaa
adc
inc
pop
mov
add
add
daa
cmp
pop
fwait
sub
add
scas
sbb
stc
add
add
gs
add
sub
cmp
add
mov
in
add
rcrl
and
or
aas
jmp
add
cmp
jne
push
add
push
js
add
add
xchg
add
test
adc
add
leave
xchg
add
add
add
cltd
rolb
test
sub
popa
dec
repz
dec
in
lods
mov
mov
mov
xor
lods
dec
in
data16
fucomip
test
mov
cmp
inc
sub
mov
sbb
lcall
add
lods
inc
cmp
jl
lret
add
rolb
test
mov
add
add
loopne
inc
ja
adc
sub
inc
cmc
dec
out
aad
sub
add
mov
sub
add
xchg
add
imul
inc
and
mov
add
mov
rolb
ret
fbstp
cmpsl
sub
ret
or
decl
jo
iret
bound
mov
mov
sub
add
pusha
add
mov
ja
lahf
inc
stos
fiaddl
sub
pop
jae
repnz
roll
cs
js
cli
cmp
xor
add
jle
mov
mov
inc
add
hlt
add
add
push
add
imul
int3
mov
aaa
out
xchg
or
sbb
add
in
repz
cmp
mov
notl
daa
ret
dec
cwtl
insl
call
mov
loopne
and
dec
int3
adc
or
add
add
add
or
enter
add
pop
lea
add
add
add
fdivrs
in
and
mov
sbb
clts
add
bound
mov
leave
js
adc
add
and
mov
add
add
dec
fisttpl
add
mov
add
stos
aad
xlat
push
add
push
addb
add
inc
dec
dec
or
js
mov
push
add
push
js
add
loope
or
pop
mov
repnz
sub
rolb
testb
add
test
out
and
mov
add
add
loop
loop
xchg
push
add
jecxz
inc
xchg
cmp
ljmp
addb
pop
sub
add
sbb
rolb
lret
ljmp
out
add
add
add
add
lret
and
mov
cmp
rol
aad
pop
fdivrp
mov
jge
nop
add
jmp
dec
pop
adc
add
push
add
mov
insb
and
add
xchg
inc
jo
jmp
add
add
loopne
push
add
fsubp
add
add
add
add
ret
add
add
aaa
lcall
data16
cmp
and
sub
sub
dec
sub
sub
add
add
sub
mov
lock
pop
in
ficoms
sub
inc
mov
or
lock
mov
and
jno
notl
add
add
add
jae
adc
or
stos
cltd
mov
add
cwtl
adc
add
out
mov
jb
inc
add
mov
add
sbb
jo
sbb
cli
imull
jne
add
mov
add
mov
add
cwtl
mov
mov
jne
add
repnz
add
mov
adc
xchg
xor
in
mov
fs
sbb
je
cmpsl
cmpsb
add
push
xchg
add
mov
lcall
lds
add
jl
jnp
inc
iret
sbb
add
sti
sbb
add
stos
xchg
mov
add
jne
gs
pop
xor
or
dec
pop
jo
subl
add
push
aad
jmp
rorl
jge
add
cmp
mov
fsts
add
add
outsl
or
pop
xor
add
fsubrs
mov
mov
pop
in
jno
addr16
orl
add
sbb
pushf
jb
mov
fdivl
add
adc
fdivl
push
in
add
aas
stos
hlt
add
iret
fwait
mov
loope
sub
add
inc
mov
outsb
mov
loopne
and
adc
test
add
std
add
addb
jp,pt
arpl
add
dec
push
aaa
ds
mov
addb
add
jns
pop
aas
arpl
int3
dec
push
adc
xchg
imul
sub
mov
adc
sub
ret
add
jge
inc
add
xchg
add
and
js,pn
out
testb
mov
mov
xchg
add
add
cwtl
or
dec
pop
faddl
imul
loop
push
addr16
mov
cmpsb
add
add
les
xor
sub
std
outsb
enter
rolb
fidivs
mov
or
add
add
add
add
mov
sti
test
ds
push
add
add
bound
mov
add
adc
lds
test
cs
jge
adc
add
fmulp
xlat
dec
push
pop
add
mov
inc
add
add
jnp
push
add
push
xchg
add
inc
dec
ss
add
mov
hlt
add
data16
in
lret
add
add
add
pop
scas
je
jb
in
popa
insl
adcl
test
add
push
add
cmp
sub
add
add
mov
mov
push
push
adc
add
add
popa
dec
rol
add
sub
mov
popa
sbb
add
pop
cwtl
stc
mov
add
outsl
lahf
sub
enter
add
jmp
jge
pop
int
add
push
add
sbb
add
add
mov
jge
cld
push
add
jg
push
add
ja
add
out
fcompl
add
cmp
jnp
dec
push
add
add
repz
add
mov
or
mov
mov
add
add
loop
cmp
mov
add
add
jne
nop
add
dec
jg
stos
dec
and
mov
testb
add
popf
sbb
scas
jo
mov
dec
dec
insl
sti
jl
add
loop
pusha
add
mov
dec
or
add
mov
mov
add
push
lock
rcll
incb
and
inc
add
add
mov
adc
jns
add
add
xchg
cmp
je
stos
test
adc
data16
repnz
pop
ja
ds
mov
adc
add
adc
pop
shll
add
popf
or
add
mov
bound
mov
add
out
push
add
add
mov
test
mov
cmp
add
loope
push
and
mov
mov
adc
stos
pop
std
dec
pop
add
cmp
mov
add
mov
dec
jne
sahf
xor
adc
and
mov
pop
in
push
add
mov
data16
js
add
out
jg
hlt
add
lock
xchg
das
jnp
cmp
nop
add
rolb
leave
jns
in
or
add
mov
add
aas
xchg
xor
xchg
mov
add
and
mov
fwait
test
push
inc
add
add
nop
add
pop
rolb
aad
sub
jmp
xor
xchg
adc
or
pop
fstl
xchg
dec
mov
push
movsb
add
mov
jns
fnstcw
leave
and
mov
add
push
out
mov
add
xchg
cmc
mov
sub
aaa
xchg
add
pop
sti
scas
sbb
push
mov
jb
jecxz
out
mov
mov
add
add
add
add
fwait
rolb
out
and
mov
pop
adc
sbb
pop
lock
jge
cltd
ret
add
pop
mov
movb
out
addb
out
lret
data16
inc
add
lcall
add
ljmp
aad
add
sub
insl
pop
inc
add
xor
xchg
jge
add
xchg
repnz
fidivrs
adc
mov
outsb
call
daa
arpl
data16
add
add
cmpsb
add
add
mov
mov
dec
jge
dec
cli
pop
rcrl
aad
push
add
add
add
mov
cs
push
add
add
popl
add
jne
add
jae
mov
lahf
jmp
imul
jns
das
ficoml
addb
sahf
or
add
jmp
jmp
mov
stos
pop
les
inc
add
jle
mov
cld
sbb
subl
push
add
mov
adc
leave
cmp
lds
push
add
fadd
stc
cmp
mov
ret
add
push
add
inc
sub
push
fiadds
mov
push
dec
std
cltd
bound
mov
add
jne
adc
testb
add
sub
add
lret
enter
add
call
xor
aad
and
mov
test
sbb
mov
testb
add
jbe
xchg
sahf
in
mov
in
repnz
lea
and
aam
lcall
xchg
frstor
mov
xchg
add
pop
jecxz
add
fadds
add
pop
or
bound
mov
add
add
stos
call
add
outsb
or
mov
sbbl
imul
iret
push
sub
mov
and
mov
add
push
add
repnz
int
jg
leave
mov
in
dec
pop
mov
lock
add
cltd
lahf
jg
jp
xor
add
loopne
add
pop
data16
add
shrl
pop
pop
adc
cltd
cmp
add
loope
psrlw
lods
push
add
inc
add
add
xor
or
adc
sub
push
mov
add
adc
dec
sbb
add
jecxz
add
cmp
aas
jo
in
rorl
cmp
ds
clc
fistl
mov
add
mov
dec
popa
rolb
icebp
cmp
mov
add
in
into
xchg
das
push
add
nop
add
movb
add
add
sub
lcall
pop
iret
sarl
ljmp
out
xor
dec
ret
xchg
jle
add
add
xchg
and
test
add
mov
leave
call
mov
add
adc
add
mov
test
or
out
lods
and
add
dec
popa
mov
add
add
add
leave
mov
pop
or
add
adc
cmp
repz
add
mov
xor
stos
push
sbb
test
sbb
scas
aaa
fisttps
in
xchg
and
pop
imul
add
sahf
and
adc
loope
add
add
or
dec
pop
jge
push
imul
gs
fisubs
pusha
add
fwait
std
add
mov
mov
clc
inc
add
dec
fldenv
pmovmskb
push
xchg
movb
inc
aas
cmp
cmp
add
test
movb
lahf
test
add
add
mov
cmpsb
add
and
mov
add
mov
add
inc
push
int3
insb
mov
iret
cmpsb
add
ficoms
add
pmulhw
in
xor
mov
sbb
test
add
add
cmp
add
cmp
test
add
mov
out
sbb
cmpsb
add
data16
add
or
jne
add
jl
pextrw
jb
sub
push
add
jmp
mov
fidivrl
dec
sub
mov
pop
leave
add
cmp
aam
out
and
clc
mov
fistpl
shrl
test
int
xor
jo
ljmp
jno
pop
and
mov
push
add
cs
dec
sarl
add
xor
jge
aaa
test
test
add
add
jo
sub
xlat
mov
rcll
add
add
cwtl
jne
add
add
xor
add
sbb
movsl
std
push
add
int3
inc
mov
nop
add
popf
cmpsb
add
push
add
scas
loopne
popf
pop
negl
or
xor
dec
xchg
iret
jg
fcmovu
dec
aad
cmp
daa
mov
das
xor
push
add
push
add
adc
add
movb
mov
push
pushf
or
hlt
add
mov
std
out
add
sahf
push
je
xchg
enter
add
xchg
add
sub
sub
adc
sbb
ss
in
add
scas
add
cwtl
shrl
add
in
xchg
add
lahf
lods
jbe
sti
leave
sti
mov
inc
add
mov
mov
in
daa
mov
dec
push
add
mull
es
mov
in
xor
add
add
mov
lret
xchg
ret
aad
gs
cmp
add
out
mov
mov
mov
add
push
add
pop
xchg
add
add
mov
sub
xchg
stos
inc
add
dec
sbb
sti
lock
mov
add
in
add
push
add
add
add
xor
add
xor
jnp
repnz
add
sarl
jecxz
mov
adc
std
in
test
mov
xchg
decl
push
sbb
add
test
push
sub
push
add
int
add
bound
mov
sub
in
ret
jbe
dec
or
in
adc
cmp
add
xrelease
cmpsl
in
mov
jnp
add
cmp
sub
mov
add
mov
orl
mov
jp
add
dec
xor
lahf
xor
out
into
fmull
inc
add
xchg
add
rolb
in
or
mov
inc
xchg
add
cs
cltd
stos
call
popa
dec
xlat
push
add
inc
add
add
add
dec
testb
add
nop
add
stc
add
mov
and
rcrl
add
popf
data16
add
add
out
rolb
push
dec
mov
mov
or
mov
notl
lock
and
mov
add
scas
lods
or
mov
adc
rolb
movsl
mov
test
ret
add
add
or
stc
pop
adc
sub
add
mov
xlat
scas
dec
push
out
ds
add
dec
int3
roll
arpl
xrelease
mov
xchg
pop
sbb
mov
add
mov
fisttpll
clc
xchg
pop
pop
cmp
add
dec
es
inc
add
add
stos
outsl
push
add
dec
push
add
add
add
and
mov
sub
sub
or
je
outsb
inc
push
repnz
adc
inc
add
xchg
or
int3
leave
btr
call
push
inc
and
add
pop
lods
xchg
add
add
jge
xor
push
pop
fucomi
nop
add
ficoms
or
pop
add
mov
cmp
cmp
push
mov
out
faddl
add
or
fldt
add
cmpsl
cwtl
add
xchg
add
daa
leave
mov
pushf
inc
add
add
mov
roll
mov
test
xor
adc
inc
pushf
addb
imul
outsl
mov
aad
loopne
cld
adc
enter
add
clc
cmp
and
mov
std
cwtl
jnp
add
add
stos
roll
add
pushf
in
aas
add
mov
add
add
cmp
cmpsb
add
push
out
sbb
movb
inc
add
in
xchg
and
cmc
lcall
sub
mov
outsb
pop
sbb
jecxz
loop
subl
sub
mov
add
push
add
adc
repz
data16
sbb
or
dec
dec
stos
lahf
int
ja
xchg
sbbl
repnz
add
add
mov
add
add
mov
add
add
push
add
cmpl
sub
mov
add
dec
outsb
lock
scas
addr16
mulps
and
mov
add
add
add
pop
xor
push
add
xchg
pushf
xchg
mov
xor
add
jno
and
int3
ljmp
mov
add
xor
pop
sub
add
add
frstor
add
push
and
mov
inc
add
add
loop
mov
test
cs
add
pop
jecxz
or
add
inc
or
cmp
lcall
adc
jo
and
addb
ficoms
add
mov
out
mov
ret
pop
pop
test
shll
data16
adc
rolb
nop
add
add
add
cld
jl
add
push
stos
mov
cmp
pop
ljmp
add
cmp
jnp
add
add
pop
add
mov
add
push
add
add
pop
jmp
add
add
lahf
aam
rolb
inc
add
inc
add
add
fstl
inc
add
cmp
dec
addr16
adc
fsub
add
mov
or
jecxz
mov
leave
push
add
add
ljmp
add
insb
lock
xchg
mov
push
add
add
notl
push
mov
sub
add
inc
aam
sbb
sbb
cmpsb
add
mov
dec
add
mov
lret
movsb
add
ret
xchg
sub
mov
ret
pop
jl
add
mov
jbe
xor
add
mov
cmp
cmpl
cmp
add
mov
and
mov
pop
imul
add
inc
add
test
pop
inc
add
pop
mov
add
lret
add
add
dec
sbb
test
rorl
add
daa
inc
add
lret
inc
mov
push
xchg
add
add
loope
add
call
add
mov
jo
add
add
add
sti
sub
jge
mov
dec
stos
lret
pushf
fimuls
and
mov
add
hlt
add
add
add
add
or
mov
add
inc
add
add
xchg
add
mov
in
dec
add
mov
cwtl
or
movb
xchg
divl
add
mov
inc
rolb
add
std
mov
insb
call
and
cmpsb
add
ss
xrelease
sub
les
dec
leave
jae
out
std
das
and
test
add
jno
mov
fcoml
lods
add
mov
lods
les
rcll
add
in
pop
mov
in
cmp
std
insl
adc
jecxz
faddl
inc
add
mov
add
add
lods
mov
add
add
add
dec
enter
test
rdmsr
add
pop
mov
mov
repnz
repz
fdiv
jnp
fucomip
jns
mov
mov
xor
cltd
mov
test
add
push
sbb
jg
enter
std
std
clc
pop
test
push
filds
push
pop
test
add
add
cli
sbb
inc
xchg
add
faddl
sbb
add
jo
imul
jnp
push
dec
inc
jle
sub
mov
add
std
jns
stc
or
xchg
add
fimull
sbb
lods
push
call
add
ficompl
mov
add
or
and
enter
add
sbb
mov
jbe
outsb
call
dec
mov
jo
insl
mov
sbb
mov
add
add
pusha
add
dec
ficoms
add
imul
add
add
cmpsb
add
push
xchg
rolb
and
cmpl
jns
js
add
cltd
cmp
mov
mov
ficoms
xchg
rolb
pop
pusha
add
int
jg
ret
jae
pop
dec
xor
loope
pop
subl
test
dec
movsl
call
jecxz
add
add
add
cmp
pop
in
jl
out
ficoms
cmp
add
jnp
add
add
add
inc
add
pop
jns
add
ds
jp
jnp
add
stos
aam
fcomps
nop
add
dec
dec
sub
gs
and
cwtl
or
cmpl
sbb
jecxz
dec
data16
adc
cmc
jno
push
fdivrs
lds
inc
add
lcall
add
add
scas
lret
sub
mov
mov
mov
ljmp
add
push
push
fwait
enter
mov
inc
add
add
cltd
mov
cmp
sarl
xor
dec
jp
push
add
mov
add
sub
xor
cld
jbe
int
adcl
gs
adc
mov
add
mov
dec
sub
sbb
or
xchg
movb
adc
dec
ret
leave
hlt
add
inc
pop
cmp
adc
dec
cmp
adc
sti
int
imul
mov
subl
out
neg
inc
add
cmp
repnz
add
add
lock
movb
cmc
mov
icebp
sbb
add
sti
aam
jl
out
rolb
rcrl
insb
std
in
ficoms
andl
cltd
push
add
add
negl
add
ds
add
movsb
add
xor
xor
dec
xchg
sub
mov
mov
adc
addb
add
push
and
cvtpi2ps
jge
mov
add
sbb
arpl
jge
add
sub
mov
std
xchg
filds
add
xchg
insb
outsb
fwait
test
or
add
inc
lods
cld
add
add
fcmovnb
fildl
or
add
add
add
add
add
jae
add
stos
push
add
outsl
int
leave
fiaddl
push
lcall
add
or
adc
lea
into
test
inc
add
lahf
leave
popf
add
add
pushf
dec
inc
add
jne
daa
adc
scas
mov
aam
mov
mov
mov
je
jmp
add
add
call
sub
add
addr16
mov
sahf
sub
int
mov
add
jnp
psubsb
push
add
jo
ret
loopne
int
add
sti
sbb
daa
jno
add
xlat
dec
cmp
add
aaa
ljmp
push
push
std
mov
popa
movl
jno
jmp
fwait
inc
fcmovnb
add
sbb
adc
xchg
add
xor
por
int
add
add
enter
aas
test
add
add
dec
les
scas
and
mov
cmp
add
add
imul
xlat
rcr
add
add
cmp
add
sarl
fdivrp
mov
and
rolb
loop
cmpsl
rolb
lods
cmp
into
mov
fstpl
pop
fmul
xor
pop
jmp
mov
rolb
push
repz
jg
sub
add
pop
es
inc
add
inc
xchg
mov
mov
and
mov
adc
sub
lods
cmpsb
add
mov
je,pn
mov
in
push
data16
add
add
data16
jmp
add
add
add
xchg
or
aad
and
sahf
repz
add
add
and
mov
roll
add
fidivrl
lods
mov
adc
sub
push
add
jne
rolb
das
aam
mov
add
add
nop
add
test
adc
add
add
push
movsl
sbb
add
add
add
push
add
stos
aaa
loope
jecxz
rolb
dec
mov
pop
leave
ret
sti
push
add
add
pop
push
add
mov
repz
sbb
mov
jno
adc
cltd
xchg
out
cmp
rcr
lea
mov
mov
mov
aam
addl
add
add
mov
add
into
jo
sbb
add
add
inc
xorl
add
pop
cli
cltd
xchg
sub
add
aam
add
add
fnstenv
add
aad
pinsrw
add
mov
sub
adc
ror
pop
out
pop
push
add
jmp
add
and
sub
je
lea
push
mov
add
fbstp
hlt
add
loope
bound
mov
xor
addb
add
dec
mov
mov
add
fwait
sbb
iret
jg
add
js
xchg
add
add
fimuls
add
xchg
outsb
dec
sbb
or
add
xor
fwait
or
sahf
scas
sahf
inc
popf
dec
insl
aas
hlt
add
gs
add
jg
add
les
test
dec
leave
lds
mov
add
mov
jmp
das
mov
jnp
add
adc
add
hlt
add
pop
sbb
lret
cmp
int3
jnp
sahf
rolb
iret
mov
into
aad
add
leave
mov
sub
std
lcall
fimuls
jae
loope
add
cwtl
xor
jae
ja
add
addb
ljmp
out
jno
call
pop
repz
fcomps
lret
xchg
fistpll
jp
sub
add
add
mov
add
inc
adc
add
mov
jbe
in
adc
pop
xchg
add
push
cltd
add
add
xor
out
sbb
rolb
sub
mov
lret
add
rcrl
sbb
add
mov
xlat
pop
scas
and
mov
cli
add
pop
lret
add
add
jl
into
flds
add
mov
mov
nop
add
imul
aam
sbb
jmp
xchg
fwait
xor
push
mov
push
add
mov
add
add
add
mov
arpl
dec
and
mov
add
mov
inc
add
mov
sub
mov
push
cmp
push
add
jnp
jg
imul
fcmovb
adc
jae
fwait
cmp
mov
add
xchg
add
mov
add
cmpsb
add
add
hlt
add
push
add
add
cmp
xor
inc
add
add
add
and
mov
repz
xor
add
adc
in
fsts
sub
or
loop
cmpsl
fists
xchg
add
test
leave
repnz
hlt
add
rolb
stc
data16
mov
add
adc
adc
dec
dec
les
test
add
add
and
enter
jp
movsb
add
push
pop
jg
xchg
xchg
mov
imul
addb
add
scas
pop
pop
pop
stos
or
add
jne
and
inc
jo
mov
cmpsb
add
mov
push
add
ljmp
or
pop
and
mov
jge
rcll
dec
lret
cmp
pop
adc
xlat
xor
fiaddl
mov
popa
mov
mov
mov
add
pop
sbb
ljmp
add
int
out
outsl
movb
lahf
mov
stos
inc
add
gs
dec
dec
sub
xchg
add
push
add
inc
and
mov
adc
aaa
jg
out
loope
jp
sub
pop
fwait
add
out
fcmovnbe
test
mov
add
idiv
push
push
pop
addr16
iret
dec
dec
rcl
add
push
add
add
test
mov
int3
adc
mov
lock
pop
or
movsb
add
or
dec
int
jl
add
add
sbb
fwait
mov
icebp
pop
out
add
sbb
push
add
add
mov
cmp
out
aam
xor
inc
fs
mov
mov
add
mov
dec
adc
xchg
add
add
push
add
xlat
pop
aas
jb
pop
dec
lahf
and
mov
jbe
sbb
and
dec
or
movsb
add
and
dec
dec
add
mov
jecxz
sub
xor
out
daa
xor
add
add
push
cmpsb
add
add
add
stc
or
mov
add
insl
pop
out
adc
inc
sub
and
addb
jge
add
inc
mov
mov
cmp
add
inc
add
in
shrl
sub
xor
add
aaa
icebp
fisubl
in
push
mov
mov
leave
outsl
pop
inc
add
es
add
adc
add
sub
add
rolb
adcl
sbb
sti
add
add
js
xor
dec
and
xor
mov
xchg
pop
cli
roll
test
scas
popf
pop
in
in
add
sub
cmp
aas
rolb
outsl
cmpsl
pop
addb
iret
xor
xor
lds
cmp
add
add
mov
jnp
mov
push
enter
testb
pop
leave
into
push
push
xchg
and
mov
push
add
out
jge
add
pop
mov
add
jbe
mov
fdivs
add
add
sbb
ret
mov
outsb
dec
push
add
mov
scas
push
add
lret
arpl
mov
add
add
push
add
dec
xor
adc
adc
lock
mov
call
adc
or
sub
mov
mov
dec
ja
into
mov
js
add
int
push
add
dec
add
jl
cmc
out
clc
stc
mov
add
push
add
jecxz
push
add
jb
or
add
add
icebp
into
sub
movsl
adc
dec
xchg
xchg
xor
mov
mov
add
nop
add
add
push
mov
add
pop
sahf
fmull
xchg
mov
add
mov
imul
add
xor
adc
inc
mov
add
add
or
add
inc
add
pop
xchg
mov
add
xor
testb
shll
xor
out
nop
add
call
dec
jecxz
add
add
jae
add
test
add
rolb
fidivrs
lret
add
add
addb
add
add
ret
push
add
or
out
jb
insl
testb
xchg
clc
adc
rolb
add
aad
add
xor
mov
pop
mov
das
mov
add
les
jp
test
aaa
loop
or
add
cmp
cwtl
pop
sbb
add
xchg
cmp
add
mov
call
mov
je
cmpsb
add
add
pop
in
sub
pusha
add
int3
rolb
xchg
stos
shr
cmp
mull
add
add
lods
pop
nop
add
rolb
rolb
inc
add
and
addb
sub
mov
imul
fisttpll
lods
push
jecxz
sub
lret
push
leave
mov
movsl
push
test
cld
sbb
add
add
jbe
sbb
add
cmp
add
add
add
add
add
add
or
push
add
sti
mov
adc
mov
add
add
add
push
add
inc
add
add
add
mov
add
mov
loopne
dec
shrl
data16
inc
xor
imul
arpl
xor
and
pop
stos
cmc
jl
add
add
mov
int
inc
fcoml
add
xchg
add
gs
fmull
out
push
lock
sbb
mov
fistps
mov
xchg
add
repz
test
cmp
fdivp
add
pop
push
lods
sbb
jno
fistl
add
add
dec
sahf
lods
push
add
sti
test
nop
add
add
add
sarl
inc
add
mov
push
add
fs
mov
fldenv
add
lret
add
in
adc
cld
in
add
xorl
ret
xor
cmpsb
add
inc
add
pushf
stos
andl
add
inc
pusha
add
add
mov
sbb
aaa
stos
rolb
push
inc
add
ret
push
xchg
add
jne
aaa
lret
add
ljmp
or
add
add
aam
mov
add
add
xchg
loope
rolb
pop
out
push
add
push
add
adc
cmpsl
push
add
cmpsl
add
push
scas
push
add
cwtl
pusha
add
add
or
add
add
mov
push
or
or
adc
add
mov
add
scas
and
cmp
repnz
lods
xor
add
mov
add
or
shl
cs
cmp
add
cltd
or
rep
dec
stc
dec
jmp
rcrl
add
add
rolb
fisttpll
add
jbe
push
aam
and
aaa
inc
add
idivl
add
add
mov
out
jno
inc
add
add
jnp
pop
in
mov
mov
pop
les
popa
sbb
and
adc
add
inc
add
mov
add
inc
movsb
add
push
pop
sub
add
mov
mov
mov
add
cmp
add
jo
movsl
inc
add
add
add
mov
cli
xchg
add
mov
mov
adc
jp
and
mov
jb
in
pushf
jp
sub
int
add
jae
xor
add
int3
cmc
adc
xchg
sbb
mov
insb
mov
aaa
sbb
add
out
into
mov
jmp
addl
mov
jle
shr
add
rep
inc
add
inc
sbb
add
add
mov
pushf
lods
push
repnz
popa
cmp
scas
xchg
into
popf
adc
push
lods
in
jmp
fistpll
in
imul
add
push
xchg
testb
add
int
lahf
mov
ljmp
addb
and
mov
xlat
dec
mov
fdivp
mov
add
cmp
aam
mov
cmp
into
lahf
mov
scas
mov
fwait
pop
js
mov
or
repz
pushf
mov
sbb
mov
and
nop
add
adc
std
mov
add
nopl
add
arpl
std
call
cwtl
fistl
add
call
pop
icebp
mov
add
add
andl
add
add
je
es
rolb
stc
xchg
dec
insb
sbb
hlt
add
add
std
push
mov
ljmp
jg
sub
mov
stos
push
arpl
add
pop
xchg
and
cltd
in
std
cmp
add
xor
adc
cli
movsb
add
add
jge
sub
popf
out
adc
call
add
outsl
xor
pushf
es
and
add
or
inc
jp
add
add
add
in
inc
push
cmp
push
add
icebp
leave
jecxz
add
lods
lret
add
mov
bound
mov
add
mov
add
add
sbb
push
add
mov
fistpl
add
in
dec
cmp
add
in
add
mov
jecxz
in
ret
pop
xchg
ret
pop
scas
mov
jnp
mov
dec
repnz
mov
mov
xor
and
push
mov
sub
add
aam
dec
jbe
int3
das
mov
cld
nop
add
out
fadds
add
in
jno
xchg
add
jg
mov
jecxz
add
cmp
mov
aas
pusha
add
sub
outsl
and
mov
xchg
jg
and
mov
dec
pop
in
notl
add
sahf
cmc
imul
cmc
mov
pushf
add
stc
ljmp
test
push
add
repz
lods
rolb
outsb
lret
push
loop
add
add
add
add
add
push
adc
pushf
xor
mov
pusha
add
add
add
lock
dec
mov
and
mov
xor
sahf
in
cmp
cs
sub
add
jb
xor
add
add
add
mov
dec
push
add
add
mov
aaa
and
mov
add
add
mov
icebp
xor
dec
mov
inc
rolb
mov
add
add
add
mov
test
inc
add
addr16
movsb
add
mov
push
add
add
movsb
add
cld
insb
stos
mov
add
mov
add
loope
add
add
add
lahf
sbb
add
add
lcall
add
insb
add
mov
add
add
xlat
or
add
lret
dec
mov
shll
roll
add
mov
cmp
dec
loop
pop
imul
sub
add
fldl2t
sbb
mov
add
pop
movb
add
inc
sti
loope
sub
dec
int3
movsl
jmp
push
add
add
inc
add
add
movsl
mov
sahf
push
add
add
mov
add
mov
outsl
or
pop
or
add
sub
add
inc
add
jge
insb
mov
dec
or
mov
add
sub
popf
mov
mov
add
adc
jb
mov
lds
nop
add
add
push
and
mov
mov
add
sti
in
mov
stc
movsb
add
add
inc
mov
lcall
test
push
push
add
add
add
and
add
add
dec
add
mov
add
jmp
addb
or
pop
fnsave
add
xlat
dec
lock
sub
mov
pop
inc
adc
pop
inc
add
push
testl
add
jns
push
aad
dec
jns
dec
mov
cli
repz
cli
and
mov
and
push
lcall
aam
adc
pop
push
add
add
sub
mov
add
jbe
inc
cltd
inc
xor
jge
xchg
add
mov
add
inc
add
movb
nop
cmp
push
add
add
jnp
push
add
mov
stc
cmp
add
mov
add
or
add
and
mov
pop
mov
adc
xchg
mov
gs
pop
jg
add
out
testb
adc
arpl
inc
pop
out
and
mov
mov
fwait
test
mov
xor
rolb
jb
lahf
xchg
mov
add
xchg
imul
add
cs
cmp
push
dec
shrl
sbb
dec
cli
pusha
add
outsb
push
add
mov
add
mov
arpl
add
rorl
loope
aad
mov
lcall
add
mov
fwait
cmc
cmpsb
add
mov
cmp
or
jb,pt
int3
ret
aam
push
add
add
mov
jbe
sbb
outsl
rolb
aaa
call
cmp
stos
mov
cs
mov
mov
sahf
cs
fldl
lods
sbb
add
scas
imul
add
and
rolb
push
mov
in
in
xlat
dec
daa
inc
add
dec
les
sbb
cmp
add
mov
mov
cmp
or
rolb
movsl
mov
add
mov
add
fcomps
jg
mov
push
add
push
add
add
add
outsb
movsl
ficoml
lret
add
xchg
add
fwait
mov
mov
add
lods
push
inc
cltd
push
add
fstp
xchg
mov
loop
cmp
xchg
jecxz
pop
jge
push
popf
pop
test
fiaddl
add
cltd
lods
jno
jne
add
stc
pop
jecxz
push
ficoms
mov
add
mov
mov
pushf
push
add
jno
testb
mov
leave
add
sti
mov
push
add
ljmp
add
add
add
jl
pusha
add
sbb
jb
fwait
push
repz
shr
fldcw
jp
cli
add
inc
popa
mov
hlt
add
add
and
mov
add
mov
jo
lock
mov
les
fneni(8087
add
xlat
add
aad
xlat
sub
add
mov
fbstp
add
rolb
sti
push
inc
pop
sbb
bound
mov
fsts
aad
ja
add
add
adc
inc
add
pop
and
mov
fwait
test
in
lret
ljmp
sti
sbb
add
in
pusha
add
jbe
pop
or
push
add
add
ss
jmp
add
push
fimull
or
sahf
push
add
stc
ja
add
add
cmp
push
adc
jmp
enter
mov
inc
add
pusha
add
fbstp
lea
imul
xchg
add
dec
cmpsl
inc
adc
add
iret
test
adc
add
cmp
inc
add
dec
testb
mov
inc
xor
clc
dec
pop
data16
mov
mov
jg
jnp
add
imul
inc
inc
add
add
addr16
push
mov
aas
xchg
add
add
mov
and
sbb
add
ror
insl
into
cmpsb
add
jge
add
add
add
inc
das
pop
pop
push
add
add
das
enter
cmp
add
leave
mov
mov
stos
imul
ljmp
sbb
xchg
add
add
add
adc
inc
mov
cmpl
mov
dec
gs
xor
and
mov
inc
add
fstps
lods
mov
xchg
mov
faddl
pop
push
add
jg
xor
sbb
mov
sahf
add
frstor
jns
inc
or
add
add
adc
enter
pusha
add
out
mov
add
and
dec
jo
mov
add
mov
add
mov
jno
pop
adc
scas
mov
and
ret
addb
stos
add
mov
xchg
add
add
iret
adc
nop
add
add
add
pusha
add
add
in
xor
mov
ja
jns
add
mov
mov
xchg
cltd
dec
lods
sub
pop
sub
xlat
repnz
push
hlt
add
add
mov
add
bound
mov
add
nop
add
mov
daa
out
dec
push
add
orl
inc
add
outsb
clc
and
sbb
add
push
mov
lods
cmp
outsl
jmp
pop
cmp
add
mov
add
insb
pop
sbb
hlt
add
or
push
add
call
outsl
add
into
in
and
outsb
into
mov
enter
or
lods
cmp
fisttpll
add
out
pop
jb
ret
xchg
inc
or
int3
or
je
adc
jge
in
push
add
fidivrl
stos
fistl
add
repnz
xor
orl
test
clc
repz
jb
push
add
dec
leave
jmp
add
int
jae
cld
lcall
int
mov
mov
popa
popa
hlt
add
xchg
mov
in
mov
arpl
add
in
in
add
inc
add
call
sub
jg
add
add
adc
mov
xchg
sub
data16
test
and
mov
adc
pop
pop
jmp
test
cwtl
pushf
jo
or
add
add
aam
jo
push
jbe
mov
and
fwait
adc
repnz
cmp
lcall
jecxz
add
xor
jle
add
add
add
pop
jbe
addb
nop
add
jb
jg
call
leave
and
xchg
add
and
int
adc
add
jnp
ds
jge
add
add
ljmp
push
inc
xor
xchg
and
mov
add
mov
mov
add
mov
pop
or
aam
loopne
insl
lahf
xchg
add
pop
inc
add
stos
add
mov
sub
add
addr16
arpl
test
dec
sub
mov
sub
adc
fstl
das
xchg
push
mov
xchg
add
add
add
lods
xchg
sbb
push
add
jno
sti
addb
outsb
jno
insb
jmp
or
data16
ret
stos
test
fistpl
xchg
in
mov
xor
les
repz
lahf
sbb
pop
sub
scas
test
or
outsl
call
sub
mov
fistpl
jbe
rolb
xchg
rolb
pushf
adc
mov
add
push
clc
out
clc
std
lret
jns
cmp
add
add
push
add
and
mov
xor
repz
dec
xchg
mov
inc
cmp
repz
sti
adc
jnp
pop
ret
fistpll
push
add
mov
dec
fimuls
push
add
pushf
call
test
test
and
sub
mov
lds
mov
into
cli
int
adc
xor
mov
pop
mov
inc
add
sub
adc
add
jns
outsl
popa
xchg
mov
add
xor
add
sub
mov
add
dec
lret
sbb
int3
push
add
lahf
mov
add
in
loope
add
add
aad
rolb
xchg
add
add
add
xchg
adc
add
mov
popa
arpl
jo
mov
in
add
mov
and
cmp
inc
add
sub
add
add
add
js
lcall
mov
mov
fsubs
add
iret
adc
lods
sub
push
push
add
out
aas
inc
add
dec
jne
add
mov
add
add
add
pop
pop
loop
jecxz
mov
add
sbb
mov
rcrl
fisubl
rolb
inc
test
sbb
add
pusha
add
sbb
aas
jp
sahf
fwait
lds
add
testb
cmc
pop
lret
jns
add
add
mov
add
xchg
inc
std
js
cmp
add
adc
jns
jp
add
adc
xor
mov
jg
add
jg
rolb
add
jp
add
adc
out
inc
xor
add
jecxz
sbb
push
add
add
ja
mov
add
das
loope
in
movl
add
rolb
mov
xchg
mov
stos
cmp
mov
sahf
pusha
add
lock
xchg
add
and
lret
push
add
push
push
add
and
shll
add
add
cmp
sahf
push
add
addr16
add
add
enter
outsl
int
add
cmp
pop
rorl
add
add
jae
add
or
add
daa
icebp
test
push
lods
xchg
addb
add
add
mov
lea
add
pop
popa
xchg
add
mov
in
scas
sahf
or
add
add
in
mov
loopne
insb
pop
movb
mov
add
push
push
jecxz
in
push
add
inc
mov
xchg
add
xchg
add
push
push
add
sub
pushf
repnz
cmp
sub
mov
aas
jae
add
adc
jp
fwait
sub
sub
add
add
sbb
add
mov
add
or
mov
push
add
ret
dec
sbb
into
stos
popf
xchg
jne
popf
pop
cmp
adc
dec
pop
xchg
rorl
orl
out
and
push
add
loopne
and
xor
add
je
int3
sarl
rcll
add
loopne
sub
add
add
mov
mov
add
add
popf
mov
mov
xor
rolb
aaa
add
add
cmp
jne
mov
inc
add
out
lods
sub
rolb
rolb
jmp
mov
add
add
inc
test
add
and
xchg
pop
mov
je
popa
and
sahf
adc
lods
push
imul
lret
mov
add
mov
xor
jge
lods
arpl
mov
test
xchg
add
sub
jg
add
add
flds
push
add
add
insb
ja
fwait
xor
inc
add
or
add
pop
jl
pop
cmp
add
pop
push
add
mov
add
into
dec
lods
sub
add
mov
fwait
in
pushf
enter
jno
sub
add
add
add
jecxz
sub
dec
ljmp
outsb
popa
mov
jo
mov
stos
mov
scas
cli
sbb
fstl
addb
dec
pop
jmp
cmp
popa
inc
add
push
add
cwtl
nop
add
jge
push
add
cmp
fwait
loope
xchg
add
jle
add
add
add
sub
stc
lcall
aaa
mov
mov
mov
loopne
lock
inc
mov
push
or
add
test
xor
jns
mov
add
add
pop
push
jle
loope,pn
enter
out
inc
aaa
mov
push
mov
cld
dec
jns
push
or
sbb
add
movsb
add
and
add
addb
add
mov
add
mov
or
or
xchg
push
push
add
bound
mov
icebp
xor
sbb
add
xor
jnp
add
add
pop
mov
add
cwtl
adc
neg
lock
mov
scas
jns
cmp
arpl
add
xchg
iret
lret
pusha
add
lods
in
xchg
add
push
lock
add
pop
or
add
jp
nop
add
push
rolb
add
add
jne
sub
mov
mov
add
lods
aas
cmp
std
movsl
dec
imul
mov
add
jp
aam
adc
enter
mov
sub
mov
ret
xor
jle
pop
xchg
push
repnz
and
ret
add
add
mov
add
xor
add
movb
add
add
loop
insl
sub
add
sbb
in
mov
jp
add
inc
add
add
fmuls
push
mov
loope
add
add
push
add
lds
xor
mov
iret
pop
int3
xor
imul
add
mov
mov
and
out
cmp
and
mov
add
sub
push
mov
aad
lds
add
mov
or
add
add
add
xchg
stos
push
cli
sbb
sub
sbb
add
addr16
cmp
mov
inc
popf
or
insb
pop
sbb
add
cmp
js
pop
mov
int
add
add
add
bound
mov
add
add
add
outsb
js
aas
mov
sbb
add
add
mov
ljmp
sbb
add
add
inc
add
add
sbb
xchg
sub
or
fisubs
mov
push
add
add
mov
ud2
cmp
dec
xor
clc
adc
push
mov
icebp
cmp
add
mov
push
add
mov
mov
pop
sub
lret
or
mov
add
mov
add
mov
push
add
push
cli
inc
jmp
pushf
pop
fisubrs
cmc
sahf
lret
add
add
mov
add
add
add
or
pusha
add
add
rolb
ljmp
mov
add
push
inc
add
icebp
rolb
push
add
add
pop
push
add
add
lods
push
insl
shrl
les
mov
add
sub
lcall
mov
add
mov
add
mov
add
add
sbb
sbb
pop
mov
in
sbb
xchg
dec
adc
dec
movb
xchg
add
jae
add
mov
fiaddl
mov
das
nop
add
out
pop
incl
add
in
push
add
into
mov
add
addl
inc
add
jnp
add
mov
add
cmpsl
rep
pop
xor
cmp
add
fistpl
pop
xchg
dec
mov
aad
adc
inc
inc
or
xlat
test
sub
stc
ret
inc
pop
pop
popf
stos
cwtl
adc
inc
add
mov
cmp
and
dec
sbb
cmp
xchg
add
mov
add
add
dec
push
jnp
std
sbb
add
rolb
sub
or
mov
fisubrl
data16
add
push
fisubrl
add
add
xor
inc
add
add
add
rcrl
mov
or
or
imul
mov
add
push
add
data16
aaa
pop
mov
add
sbb
ret
or
and
idivl
xor
or
sbb
test
fimull
fwait
call
xor
jmp
jae
add
aam
cmp
push
mov
into
arpl
mov
add
add
ljmp
std
xor
leave
jnp
repz
movsb
add
ds
add
lret
jl
xor
adc
hlt
add
add
add
add
xor
mov
addb
add
lret
in
lcall
add
repnz
jmp
inc
add
call
sbb
push
add
movsb
add
mov
add
add
loop
in
xor
sub
add
cmp
add
add
sub
stc
push
add
roll
lock
add
mov
pop
push
add
fldpi
cmpsb
add
dec
jecxz
xor
aad
cltd
fsubrs
addb
jae
lods
add
mov
jnp
add
ret
sub
movsl
jge
add
push
cmp
fst
add
or
pop
push
fwait
mov
push
xor
stos
cmpsl
aas
mov
out
sbb
repz
clc
inc
mov
testl
mov
movsl
push
add
add
les
test
add
cmp
into
movsb
add
sub
movsl
loope
sbb
shrl
inc
add
pusha
add
scas
fstl
cmc
dec
jg
arpl
jno
add
stc
sub
add
out
inc
pop
stos
in
repz
jne
mov
xchg
add
gs
add
push
add
xchg
push
sbb
jmp
and
push
add
jecxz
shll
sub
and
add
lcall
or
add
inc
push
add
lcall
leave
sub
mov
cmpsb
add
sar
adc
dec
adc
sbb
add
add
add
add
push
add
jb
rolb
ret
add
add
mov
add
mov
mov
mov
shrl
add
pop
lods
into
outsb
pop
rolb
fwait
mov
movb
add
inc
add
jmp
mov
mov
sbb
arpl
stos
into
cmp
iret
aaa
arpl
add
mov
push
add
add
dec
hlt
add
dec
test
xor
or
push
mov
mov
add
add
jo
aam
mov
test
xlat
or
add
add
add
mov
add
jp
inc
add
add
addb
add
add
add
add
add
sbb
add
xchg
add
adc
movb
outsb
jge
addb
add
add
add
rcrl
sbb
pop
mov
pop
push
mov
mov
lahf
hlt
add
mov
mov
popa
fidivrs
lea
add
ficompl
lcall
sub
jl
mov
add
push
loope
incl
dec
pop
movb
lcall
and
sti
repz
repz
mov
xchg
push
dec
popa
jo
add
mov
pop
mov
add
out
xor
movsb
add
xchg
mov
mov
imul
lds
add
inc
and
pop
inc
add
pop
scas
ficomps
mov
int
xor
mov
lcall
jge
adc
mov
scas
add
or
and
mov
mov
or
pop
addb
add
lods
out
inc
add
inc
add
hlt
add
push
add
mov
add
cmp
fwait
add
mov
mov
add
mov
popa
popf
rolb
outsb
movzwl
imul
add
cs
cltd
inc
xchg
jecxz
add
pop
jmp
mov
add
jo
or
push
loopne
xchg
mov
testb
or
outsl
dec
cmp
or
rolb
iret
fildl
jge
gs
cld
pop
lcall
neg
adc
push
fists
loop
jnp
jle
icebp
imul
pop
iret
adc
fsubs
sbb
sbb
sub
vmovd
fdivl
popf
popf
fsubrs
add
add
rolb
sub
testb
add
add
add
push
or
jmp
mov
addb
add
add
sti
xor
push
pushf
add
add
add
or
add
in
mov
icebp
cld
push
add
mov
ret
pop
scas
sbb
add
sbb
sub
aas
pusha
add
add
jmp
in
lea
adc
popf
addb
and
mov
add
dec
add
cmpsl
and
popa
xor
mov
mov
mov
mov
sbb
add
rolb
or
mov
inc
or
sub
add
cmp
rolb
orl
in
or
mov
outsl
test
pop
dec
pop
cmp
add
add
in
pop
cld
inc
add
add
les
mov
add
add
and
mov
mov
add
push
cwtl
and
add
add
and
push
jo
push
fcmovu
inc
add
add
cltd
in
shrl
mov
add
and
mov
mov
add
xor
lea
stos
xchg
jle
dec
xor
lahf
out
or
add
add
cmp
jmp
js
sub
popa
lods
jae
inc
add
pop
pop
mov
xchg
add
push
add
cli
scas
add
mov
and
mov
cmp
add
rolb
mov
mov
add
aaa
insb
mov
xchg
cmovle
sahf
je
pop
or
add
sbb
sub
add
mov
les
mov
and
bound
mov
mov
insb
mov
cld
out
adc
das
xor
popf
popa
mov
pop
mov
lcall
mov
add
shll
mov
mov
push
add
jge
add
add
push
add
add
int
in
insb
xchg
cmp
sub
pop
pop
sub
pop
mov
add
cmp
or
push
cwtl
lods
cwtl
rolb
ljmp
jb
sub
ss
push
add
pop
int3
hlt
add
dec
xlat
fwait
ljmp
pusha
add
sbb
add
pop
das
sti
and
ljmp
add
push
add
cmc
sbb
jae
add
add
imul
or
call
xchg
and
add
lret
aad
mov
push
add
mov
test
add
add
add
cmp
iret
adc
add
out
add
daa
mov
push
adc
add
push
pusha
add
add
push
xor
hlt
add
jbe
enter
add
jns
mov
gs
divl
xor
pop
aam
jno
mov
imul
lock
jp
mov
mov
add
or
xchg
add
aad
cmp
mov
pop
xchg
repnz
loop
pop
jo
scas
inc
ret
sti
ret
add
test
addb
add
loopne
mov
inc
add
add
add
push
dec
mov
and
iret
sbb
insb
pop
pop
add
mov
add
mov
xor
add
pop
mov
lret
mov
sbb
add
mov
add
add
mov
add
inc
add
add
add
mov
inc
mov
pop
dec
arpl
add
js
mov
adc
outsb
sbb
add
mov
add
stc
xchg
loopne
pop
or
add
ret
and
push
add
add
xchg
add
psubw
or
mov
rcll
testb
add
or
and
insl
das
testb
add
jl
add
scas
das
mov
push
add
sbbl
mov
add
pop
fsubs
fmull
adc
add
add
add
fs
mov
add
xchg
add
clc
fbstp
lods
std
add
in
addb
stc
sbb
popl
add
addb
add
pop
xor
leave
cs
js
mov
add
add
add
xchg
roll
add
add
add
mov
cmp
add
add
jge
ss
fsub
addb
mov
add
mov
hlt
add
cwtl
cmp
add
add
push
add
jb
jnp
add
add
cmp
pop
data16
mov
mov
add
out
lods
inc
jbe
add
mov
lods
jmp
mov
out
cmp
loopne
stos
insb
xchg
add
lods
inc
add
cmp
push
add
add
mov
das
call
rolb
addb
xor
enter
add
addb
add
in
add
push
add
jecxz
inc
xor
pop
sub
add
repnz
mov
xorl
sub
xchg
add
adc
cmp
dec
out
xor
jno
frstor
mov
fdivrl
dec
pop
adc
mov
push
mov
dec
addr16
repz
add
push
lahf
ljmp
cmpsb
add
add
add
add
lods
adc
add
lret
les
mov
outsb
mov
add
fstpl
mov
clc
cmc
cmp
cwtl
add
ja
mov
pushf
int3
mov
test
jmp
add
add
cs
repz
pop
sbb
out
push
add
pop
rolb
pusha
add
jnp
add
add
add
add
rolb
add
sub
rolb
stos
mov
sub
add
rolb
pushf
and
xlat
jae
add
call
test
add
add
and
imul
hlt
add
ljmp
add
fists
out
push
xchg
add
sub
pop
mov
in
xchg
jns
repz
jle
jae
inc
add
inc
mov
lock
out
cmc
inc
add
stos
popa
sub
jge
in
add
cmp
fimull
push
mov
js
iret
icebp
mov
add
add
add
mov
add
add
add
push
add
and
fmuls
pop
push
add
addb
rolb
repz
int3
imul
scas
push
add
into
gs
in
push
add
dec
icebp
xchg
stc
sbb
add
jge
mov
mov
aaa
pop
sbb
mov
push
fwait
cli
ljmp
mov
add
shrl
aaa
movsb
add
mov
enter
add
fcoml
add
add
adc
add
pop
testl
cmp
mov
inc
add
mov
scas
mov
mov
add
aam
inc
add
repnz
add
cmp
aam
pop
rolb
xchg
add
adc
inc
mov
and
shll
mov
add
xchg
iret
das
mov
sahf
push
fcompl
outsb
outsl
push
add
add
lods
mov
mov
pop
idivl
outsl
inc
add
and
mov
cmpsb
add
inc
add
dec
fst
inc
add
inc
and
mov
xor
scas
sbb
mov
cltd
cmp
lea
add
dec
cmc
jp
mov
jp
add
add
jnp
mov
sub
add
mov
add
testb
add
mov
add
scas
popf
enter
icebp
mov
add
add
sbb
fisubrl
leave
nop
add
jnp
pushf
dec
sub
mov
add
mov
scas
std
leave
ret
arpl
add
cmp
add
add
adc
add
fistpl
add
add
add
lcall
ret
xor
cmp
mov
movb
push
add
cli
ja
add
mov
ss
pop
cmpsb
add
fucomip
lea
mov
cmp
icebp
daa
adc
dec
mov
add
mov
dec
in
loopne
xchg
add
outsl
in
jl
xchg
inc
arpl
mov
add
or
sbb
xor
insb
int3
rcll
test
std
mov
sti
xchg
add
mov
add
mov
add
mov
add
mov
ficoms
mov
xchg
or
repz
cwtl
cmp
mov
xchg
xchg
jns
mov
sbb
aas
jle
mov
add
add
add
jmp
lds
pop
pop
push
mov
ja
mov
fcoml
add
push
sub
repnz
fcmovnu
push
clc
sub
scas
push
jo
push
add
test
xchg
outsb
inc
jns
dec
in
mov
cli
popa
jle
jp
jno
sub
and
xorl
mov
jb
adc
and
repz
outsl
lods
lods
daa
pop
pushf
mov
stos
cltd
mov
push
add
xchg
add
mov
add
add
add
mov
or
add
mov
jecxz
out
inc
add
addb
add
ffree
hlt
add
inc
movsb
add
xchg
add
imul
les
push
sub
add
mov
cwtl
out
imul
add
sarl
pop
dec
mov
andl
add
clc
lock
mov
dec
loopne
jnp
add
sbb
mov
mov
and
add
add
add
fcmovnb
add
add
add
lods
sbb
add
add
fcomps
mov
fists
insb
jmp
pop
iret
cmp
push
add
fnstenv
push
add
add
xchg
adc
std
xchg
outsb
jge
les
imul
pop
movsb
add
xor
in
fstl
mov
add
stos
addb
pop
lds
rcrl
adc
mov
pop
xor
jb
dec
jecxz
je
loope
cwtl
outsl
xor
gs
mov
rolb
add
mov
mov
jl
lret
jnp
add
jbe
inc
add
cs
scas
mov
addl
sbb
notl
push
ret
test
in
repnz
xor
add
mov
aas
repnz
es
mov
add
mov
push
cmc
bound
mov
dec
mov
loopne
insl
leave
cwtl
js
add
jmp
insl
mov
call
add
pop
xchg
add
dec
jp
movsl
xorl
icebp
jns
adc
test
dec
fwait
jne
inc
sub
add
enter
sbb
in
push
fucomip
pusha
add
cmp
gs
add
enter
add
add
add
cmp
add
add
mov
cmpsl
movsl
cmpsb
add
test
mov
cmp
mov
adc
push
outsb
adc
jge
add
xchg
add
mov
into
loope
add
add
pop
push
add
add
fsubs
cmpsb
add
mov
or
mov
and
cltd
repz
jl
add
jae
xchg
frstor
add
fistps
mov
mov
test
push
add
adc
and
add
lods
push
add
stos
movb
pop
jl
add
inc
add
lret
les
lret
movb
leave
xchg
add
mov
add
jmp
add
jae
xor
lahf
cwtl
push
pushl
add
fld
add
add
add
jae
test
je
mov
adc
sub
pusha
add
adc
pop
inc
add
push
pop
addb
or
test
push
pop
cmp
ljmp
fsubl
add
dec
push
add
div
add
add
ret
addr16
enter
sub
add
add
add
mov
add
mov
cld
sbb
pop
mov
add
and
add
aad
add
pop
mov
push
add
add
pushf
jle
add
stc
gs
add
add
mov
rolb
sub
and
add
add
or
lcall
daa
ror
add
xchg
sbb
mov
add
add
add
jge
push
mov
pusha
add
add
inc
cmp
ja
mov
sub
das
clc
push
pop
dec
mov
pushf
push
cmp
pop
and
test
add
add
mov
add
add
add
or
pop
leave
adc
sarl
fidivrl
push
mov
sti
mov
add
shl
pop
aas
cmpsl
push
add
lcall
cmp
mov
add
dec
sub
cmp
dec
loope
add
adc
aam
test
aad
push
aaa
test
add
mov
or
or
add
mov
cli
push
add
mov
mov
lret
add
les
or
les
icebp
push
fdivp
add
lret
rolb
popa
inc
add
ljmp
xchg
mov
inc
fldenv
mov
mov
add
adc
stos
addb
add
inc
fst
adcl
dec
hlt
add
mov
mov
inc
add
cltd
sbb
clc
sahf
sbb
sahf
or
add
psrlq
add
xor
mov
mov
sub
add
add
xor
add
scas
cmp
add
push
cmp
out
out
mov
and
add
fsubrl
add
add
ss
or
sub
enter
add
cli
add
popf
jno
add
mov
add
add
mov
add
jge
iret
out
addb
scas
sbb
add
push
xor
int
fadds
stc
mov
repnz
add
add
add
add
push
add
fistps
movb
pop
and
mov
add
mov
out
ret
jle
mov
cmp
xchg
mov
out
fistps
dec
outsl
push
add
add
or
jge
add
stos
mov
out
add
add
and
mov
inc
cmpsl
test
add
into
jo
mov
mov
mov
and
cmp
and
add
mov
std
data16
fisubs
sbb
testb
mov
xlat
dec
sbb
cs
mov
cmp
mov
scas
lcall
add
js
add
add
lcall
lock
add
testl
cmc
sbb
pushf
inc
mov
pushf
loop
movsl
repz
pop
jns
bound
mov
add
dec
cmp
add
pop
inc
cmpsl
popf
outsl
inc
add
jo
call
jae
mov
aaa
mov
subl
addb
cli
mov
add
add
daa
sub
in
aaa
movsl
loopne
push
data16
pop
repnz
add
mov
cwtl
mov
rolb
jmp
add
loope
fwait
mov
add
pop
nop
add
add
fldl
add
cld
lret
pop
fwait
xor
pop
sbb
xchg
and
pop
je
mov
xlat
ret
push
add
add
mov
mov
mov
arpl
or
pop
aad
sub
add
lret
les
imul
mov
into
add
fwait
dec
xchg
add
add
add
stos
cmc
imul
outsl
hlt
add
sub
adc
add
xchg
add
mov
inc
add
mov
add
mov
inc
or
lods
jno
xor
jb
or
add
test
jge
scas
ljmp
xchg
add
cmpsl
cmp
lret
sbb
inc
add
xor
mov
push
push
mov
je
cwtl
bound
mov
mov
rolb
push
mov
aad
and
cwtl
ds
mov
in
add
cmp
add
inc
jl
mov
and
lcall
add
jmp
add
add
sub
jo
addr16
mov
stc
push
mov
add
addr16
enter
mov
test
fnstenv
add
add
add
cli
or
add
insb
and
stos
cli
loop
pushf
aam
mov
pop
lahf
call
sub
xchg
add
out
scas
mov
and
mov
bound
mov
pop
mov
aaa
add
mov
mov
in
jns
add
add
testb
pop
mov
add
adc
pop
cmp
lret
jb
idivl
mov
add
add
add
std
enter
cmp
adc
add
add
or
xlat
shll
add
loopne
add
mov
inc
add
bound
mov
xor
lea
sti
cmp
add
add
add
aad
add
sbb
js
add
aas
fadd
add
aad
inc
daa
mov
repz
dec
push
aas
mov
cmp
pop
mov
inc
stos
jne
mov
mov
das
js
mov
xor
dec
mov
add
pop
mov
jns
mov
push
add
add
in
sub
sub
sahf
add
fidivs
mov
jmp
xor
mov
mov
popf
add
outsl
mov
cwtl
adc
ja
test
jae
cmc
adc
repz
addr16
ficomps
mov
xlat
inc
add
add
outsb
test
mov
or
inc
add
add
ret
pop
call
insb
stos
clc
pop
lds
fnop
add
pusha
add
addb
cwtl
lock
call
in
ficompl
and
fwait
sub
mov
add
rcrl
push
pop
ds
adc
xor
insb
arpl
push
add
mov
sub
mov
dec
aam
inc
add
add
pusha
add
add
mov
dec
xchg
add
fidivs
insb
adc
rolb
jl
in
mov
out
pushl
add
aaa
add
push
add
cwtl
and
and
adc
dec
cmp
or
push
call
add
mov
xchg
test
cmpsb
add
add
add
loop
in
mov
inc
add
daa
push
add
pop
mov
adc
mov
add
int3
inc
add
in
push
add
or
testl
add
add
push
add
add
add
cmp
addb
lods
loop
xchg
daa
or
rolb
pop
mov
cmp
push
sub
adc
and
mov
sbb
pushf
jg
push
add
cld
jnp
incl
lock
ret
and
mov
add
add
add
cli
out
jnp
jbe
inc
test
dec
cld
pop
or
adc
push
add
add
xchg
add
imul
insl
adc
aam
movhps
sahf
xchg
cwtl
add
xlat
add
add
jbe
add
loopne
fwait
test
add
out
add
dec
add
add
rcrl
loop
push
add
add
mov
add
pop
scas
mov
sahf
add
dec
dec
xchg
add
adc
pushf
lock
mov
rolb
cltd
aam
adc
loop
xor
adc
jg
sti
or
mov
add
add
mov
mov
push
add
or
ret
inc
add
ror
cld
addb
jnp
jne
inc
add
ret
pop
mov
lret
fdivrs
fwait
push
mov
sub
ret
mov
add
xchg
xchg
add
test
addr16
add
inc
cld
jns
loop
lahf
arpl
push
add
pop
mov
lea
jne
add
das
popf
mov
push
pop
xor
dec
and
testb
or
roll
jmp
push
add
jmp
std
adc
mov
aas
push
add
push
add
mov
les
inc
add
popf
sahf
ja
or
adc
xor
xlat
push
es
add
movsl
ljmp
xchg
xchg
inc
loop
push
mov
pop
xor
les
mov
ret
add
lahf
inc
int3
mov
out
inc
add
in
push
lods
in
and
mov
add
jbe
push
add
aas
inc
add
js
stc
ror
add
dec
outsl
and
testb
add
iret
lock
add
out
jl
sbb
add
add
mov
inc
cmpsb
add
jne
mov
mov
pop
jge
push
sbbl
add
add
add
add
ss
push
add
sub
hlt
add
add
fiadds
xchg
iret
xchg
dec
xchg
add
addb
in
dec
int
add
push
add
add
add
lahf
rolb
and
dec
mov
leave
cmp
add
add
sub
add
push
add
inc
add
insb
fwait
mov
cmpsb
add
lret
sub
jae
add
pop
out
pop
fildll
adc
in
sti
push
add
jnp
pop
mov
into
enter
push
dec
mov
add
mov
fisubs
dec
adc
test
add
add
pop
or
add
push
mov
in
fs
ficomps
pop
adcl
addb
inc
add
jae
add
dec
pushf
rcrl
dec
xor
stos
nop
add
and
xor
les
roll
add
add
rcll
les
push
pop
insb
xor
push
jl
gs
iret
jg
mov
std
push
fildll
test
incb
add
in
jp
popf
pop
addr16
sti
pushf
jae
in
xor
repnz
lea
add
scas
aam
mov
add
or
stos
rcrl
loop
insl
or
push
add
push
add
adc
insl
clc
mov
das
mov
add
lret
sbb
push
fwait
inc
stos
sub
dec
xchg
mov
movb
in
aam
xlat
aas
data16
clc
pcmpgtb
movsl
and
mov
cmp
add
add
adc
add
rolb
out
out
xor
jl
add
or
add
add
add
add
leave
sbb
lock
repnz
add
lds
add
add
rolb
sbb
mov
int
add
mov
push
add
mov
sbb
sub
jp
leave
or
sbb
add
stos
flds
cmpsl
cltd
jae
inc
add
mov
mov
mov
leave
lock
sbb
add
push
add
shr
rolb
das
loopne
rolb
pusha
add
add
test
ret
sbb
xchg
adc
and
mov
dec
clc
xchg
add
inc
add
mov
jns
adc
cltd
mov
and
add
add
loopne
push
add
fnsave
insb
jno
cmp
cmpsb
add
ret
sbb
and
add
add
dec
cli
in
add
rolb
add
and
mov
out
bound
mov
sbb
add
lahf
add
ds
aaa
fwait
xchg
add
add
mov
pop
lret
pop
mov
xor
repz
ficomps
mov
or
pop
add
add
cwtl
inc
add
dec
mov
frstor
add
inc
add
sbb
mov
add
sbb
inc
pop
cwtl
shrl
fmulp
fs
mov
add
add
mov
bound
mov
mov
jbe
mov
add
pushf
cmp
imul
loopne
enter
mov
add
mov
add
mov
and
mov
add
or
add
add
add
and
mov
mov
mov
inc
lods
jbe
pop
mov
add
mov
add
out
pop
lock
xchg
add
data16
add
mov
mov
add
mov
add
in
popa
lret
lea
pop
jnp
adc
xchg
std
testb
rolb
jne
loope
add
data16
add
sbb
andl
add
cmp
add
jns
push
add
idiv
into
scas
cmp
add
jmp
rolb
lcall
add
in
mov
out
test
addb
ja
add
lret
daa
jne
add
jo
sbb
hlt
add
mov
imul
sbb
js
add
scas
scas
loop
in
xchg
add
pusha
add
inc
popf
xor
clc
hlt
add
mov
add
adc
push
mov
pushf
leave
cmc
and
mov
add
repnz
add
add
push
add
out
adc
xchg
out
inc
add
mov
mov
call
mov
fldt
pop
aad
add
push
addl
iret
inc
add
add
mov
and
mov
dec
push
xchg
add
pop
sbb
jno
test
add
jle
jp
adc
sbb
loope
fmul
gs
fwait
xchg
add
mov
dec
cmp
add
push
add
std
and
mov
push
mov
imul
inc
das
sbb
fdivr
daa
dec
addr16
cmp
jno
add
add
add
ret
add
add
jnp
dec
fiaddl
push
add
add
sbb
add
test
pop
pop
add
jmp
rolb
daa
scas
dec
mov
add
pop
push
sbb
das
push
std
jnp
sahf
inc
mov
imul
add
add
add
add
je
outsb
insb
add
aad
add
mov
fisubs
jbe
sbb
add
ds
cld
int
lcall
push
add
xchg
repz
fisubrl
inc
add
aam
fwait
lods
fsubs
xor
and
mov
add
testb
bound
mov
add
add
insb
mov
test
add
cmp
je
insb
jno
add
sub
movsl
add
inc
add
xchg
add
inc
inc
inc
add
cmpsb
add
xchg
and
xor
add
sbb
xchg
add
or
adc
mov
aas
cmp
add
test
repz
add
and
mov
add
add
adc
xor
int
ret
push
xor
and
xchg
cld
lret
add
in
rolb
lock
pop
xchg
jp
xchg
add
ds
mov
add
add
mov
add
mov
inc
loop
xchg
add
cmp
add
add
arpl
pop
int
add
loope
add
sbb
cmpsb
add
jg
subl
jecxz
in
xchg
stc
data16
push
add
and
arpl
add
and
inc
xor
mov
add
sbbl
add
into
test
insb
repnz
push
add
test
lea
jnp
pop
enter
pop
mov
ret
cmp
and
addb
add
add
rolb
or
inc
add
aaa
cmpsl
push
add
hlt
add
push
add
add
lcall
add
mov
iret
fdiv
add
add
add
loop
push
mov
rolb
add
mov
ret
imul
jne
add
add
jecxz
lcall
out
and
jl
add
jbe
add
add
mov
add
movb
add
popf
jp
daa
mov
xor
enter
add
pop
test
cmovnp
sbb
lret
sub
mov
imul
add
lcall
sahf
jno
arpl
sbb
pop
sbb
jno
imul
lret
ret
and
mov
mov
or
mov
mov
add
stos
sub
mov
add
add
cwtl
ret
xchg
addb
add
rcll
dec
negl
add
sbb
lock
mov
fisttps
in
mov
jae
add
add
pop
repz
out
mov
lds
pusha
add
dec
sub
mov
jns
add
add
inc
add
pop
fsts
push
pusha
add
rolb
pop
jecxz
xchg
bound
mov
add
sahf
mov
insl
rolb
movb
mov
fwait
xchg
push
add
js
test
add
add
add
push
mov
add
jg
rolb
add
sub
add
mov
add
out
in
jns
inc
or
xchg
outsl
mov
add
add
add
fsubs
fmuls
xchg
out
xchg
cmp
addl
push
add
dec
xor
stc
imul
jge
adc
stc
in
out
roll
mov
data16
stos
fiaddl
mov
arpl
or
jl
aad
bound
mov
jge
jo
adc
push
add
inc
add
mov
insb
jno
add
or
filds
icebp
pushf
out
add
mov
add
mov
fidivl
cmp
add
cltd
adc
sbb
mov
xchg
add
fisubl
jbe
sbbl
cmp
mov
mov
add
jnp
add
add
or
pop
dec
test
adc
repnz
push
add
sti
cld
inc
add
pop
cltd
aad
aas
movsb
add
dec
rolb
mov
cli
push
mov
pmulhw
add
add
roll
push
mov
adcl
add
sbb
add
lcall
add
sbb
test
aad
outsb
addb
mov
xor
add
or
fs
iret
adc
lock
popf
jno
shll
add
mov
inc
add
or
add
mov
jg
arpl
rcll
mov
jns
pop
and
sbb
fldcw
mov
fisttpll
std
xchg
cld
shll
add
xor
add
mov
xchg
add
addb
add
mov
sub
sbb
aas
daa
test
mov
out
cli
out
and
fiaddl
add
sub
jmp
xchg
mov
addb
jg
add
add
add
add
xor
add
inc
add
mov
add
cwtl
adc
mov
add
addb
stc
daa
ret
inc
add
sbb
cmp
std
push
add
add
pop
out
jb
sbb
add
cmc
dec
mov
sub
add
mov
cli
xchg
add
jae
add
jns
add
add
fdivl
or
add
add
xchg
push
and
or
add
add
leave
loop
js
mov
add
add
add
sub
pushf
out
scas
enter
inc
add
sahf
dec
push
add
pop
repnz
add
int3
call
add
sub
add
ja
jecxz
scas
popa
xchg
dec
and
or
add
add
adc
decb
xchg
add
adc
sub
add
shr
add
mov
add
pushf
dec
loope
fsubl
int3
jns
push
add
addb
jcxz
xchg
hlt
add
add
dec
or
add
shrl
add
add
add
add
add
jmp
stos
xchg
push
add
js
add
add
add
add
jmp
sbb
add
cmc
jp
add
shl
xor
push
add
movb
cmp
lods
mov
mov
inc
hlt
add
xchg
add
sbb
out
in
test
aas
mov
mov
rolb
aad
mov
sbbl
sbb
dec
and
outsl
xchg
add
add
mov
jne
enter
ficompl
pop
mov
out
sahf
ficomps
push
add
aad
adc
add
mov
out
mov
mov
inc
add
add
movsb
add
imul
jp
rolb
dec
xor
adc
xchg
add
rolb
push
add
mov
sbb
jge
mov
inc
add
add
les
rolb
repnz
lds
add
jo
dec
xor
pop
add
xchg
or
mov
xorl
addb
jnp
mov
add
inc
add
add
sub
add
ja
add
and
data16
lahf
mov
push
add
inc
dec
or
sub
scas
adc
cld
pop
xchg
repnz
add
mov
popa
inc
add
xlat
fildl
add
jle
lret
addr16
add
iret
outsl
les
leave
out
push
add
add
int
and
add
cmpsl
push
add
add
fistpll
rolb
xchg
add
pop
xlat
and
mov
sub
mov
adc
sbb
adc
mov
mov
jb
aas
cld
dec
fiaddl
push
out
mov
mov
mov
mov
push
les
jns
mov
cli
lcall
inc
frstor
cmp
aad
add
ds
add
cmpsl
clc
les
and
mov
add
aad
jp
leave
std
std
mov
in
sub
add
addb
add
js
add
push
add
das
pop
inc
add
mov
sub
push
ljmp
adc
scas
add
mov
int
add
inc
add
pop
bound
mov
xchg
sub
stos
or
add
lcall
mov
fsubl
lods
fdivrl
jns
add
xchg
test
lods
stc
imul
add
mov
mul
add
clc
insb
out
inc
and
mov
popf
adc
push
add
add
add
pop
mov
xor
stos
adc
cltd
fxch
adc
sahf
out
sahf
xlat
cmp
jne
arpl
stc
add
pop
out
dec
jmp
mov
int3
scas
nop
add
add
mov
add
dec
addr16
inc
add
outsl
xchg
jle
sarl
add
add
push
add
test
mov
cmpsl
movd
add
add
jb
rcl
add
push
xor
inc
add
xchg
add
add
fdivr
and
fs
daa
xchg
add
xchg
add
jbe
add
mov
dec
mov
sub
mov
mov
stc
lahf
cmp
pushf
loopne
cmc
add
mov
mov
scas
movb
jl
push
dec
mov
push
sub
sbb
add
stos
push
add
push
add
mov
cmp
lea
mov
push
lret
add
fsubr
ja
xor
push
add
rolb
add
stos
mov
hlt
add
add
jns
add
mov
imul
and
add
xor
jae,pt
sub
add
insl
imul
xchg
xchg
add
add
lret
inc
xor
cmp
or
add
fucomip
jp
add
repnz
add
cmp
pop
in
inc
cmp
adc
cwtl
pop
outsl
pusha
add
add
push
lahf
pusha
add
outsb
fwait
sub
push
add
mov
sub
add
loop
or
sub
mov
or
add
imul
adc
push
lea
scas
imul
dec
jp
out
fdivrs
xchg
and
mov
rolb
nop
add
lock
add
cmpl
mov
addb
jle
rolb
insb
aas
filds
movb
push
add
mov
aas
lahf
jne
mov
mov
pop
xchg
lret
in
add
inc
stc
pop
movsl
adc
push
sbb
and
mov
add
or
arpl
and
xor
lea
push
add
add
fistps
xor
mov
mov
add
and
mov
add
push
add
jb
xor
jge
out
add
je
jo
pushf
sbb
aas
vmread
or
mov
add
inc
mov
rolb
stc
fwait
pushf
add
add
add
adc
push
add
add
push
jnp
add
pop
jo
push
add
cmp
xor
mov
add
dec
and
mov
dec
push
mov
lods
sbb
aas
pushf
inc
add
loop
fdiv
cvtdq2ps
ljmp
lods
cmpsl
dec
dec
dec
sahf
sbb
push
add
mov
mov
push
add
aaa
test
outsb
cmc
pop
call
aad
lods
xor
ljmp
push
cmp
mov
xor
add
xchg
add
in
mov
add
ret
cmp
add
xlat
xor
sbb
sbb
push
add
sbb
add
