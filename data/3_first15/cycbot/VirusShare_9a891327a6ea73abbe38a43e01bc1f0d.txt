into
ror
dec
aad
pop
mov
add
add
sbb
pop
and
jmp
mov
adc
add
mov
sbb
ss
sbb
add
add
popf
pop
mov
inc
add
mov
int
add
inc
add
jbe
aad
cmpsb
jno
or
test
sub
push
in
add
ret
scas
out
imul
mov
dec
dec
mov
cld
lret
data16
fs
add
addb
mov
xchg
mov
inc
add
rol
cli
inc
add
out
add
cmpsb
mov
rcrl
xor
insb
cwtl
addb
addr16
lock
fimull
adc
fucomip
jle
inc
add
sbb
lds
mov
mov
adc
mov
and
sub
inc
add
insb
insl
cwtl
lds
push
add
xor
jnp
gs
cmp
sarl
iret
test
push
int
aam
outsl
cmp
mov
cld
aaa
imul
jo
add
inc
add
testb
add
jnp
mov
mov
movsb
pop
sbb
xor
jbe
into
lods
push
cli
pop
mov
sbb
cli
sarl
inc
adc
mov
pop
hlt
dec
repnz
mov
lahf
loope
mov
negl
adc
xchg
mov
add
rorb
scas
lock
lret
sbb
or
in
sbb
inc
add
pop
cmp
es
cmp
repnz
lcall
rol
add
in
xor
fcomps
out
sub
in
inc
add
ljmp
gs
dec
int
add
sub
mov
sbb
out
jb
xchg
sti
mov
or
mull
or
mov
mov
fcomip
sti
sub
das
imulb
pop
test
jge
pusha
add
xchg
cmp
add
repz
or
cmc
in
add
call
push
repz
aad
add
aaa
inc
add
repnz
das
sbb
mov
fucomi
cmpsl
repz
mov
dec
mov
push
add
shrd
fcomp
dec
add
leave
fnstcw
pop
inc
jecxz
in
rcll
popf
cmp
addb
add
test
or
test
out
jecxz
add
dec
lret
xchg
push
and
mov
dec
pop
in
lahf
sbb
repnz
add
add
cltd
pop
jl
addb
je
fs
mov
jo
shr
stc
dec
loop
cmpsb
addb
daa
jo
popf
fistpl
push
add
add
mov
call
hlt
push
lret
movsl
shlb
xchg
xchg
cmpsl
push
sbb
ret
rcll
add
lods
sub
in
imul
lcall
add
jecxz
adc
xchg
jae
test
loop
lret
ret
sub
lret
rcr
or
insl
int3
or
push
jnp
sub
dec
rolb
arpl
inc
jnp
jle
jle
push
lret
xor
add
add
repnz
add
pop
jmp
clc
and
andl
loop
jb
or
mov
mov
mov
sbb
and
xor
shll
add
dec
mov
dec
or
mov
into
dec
push
out
and
mov
bound
mov
in
mov
into
cld
sub
inc
pop
sub
push
dec
ret
mov
push
pop
dec
jmp
mov
daa
vphaddwd
into
adc
pop
cltd
sub
xchg
je
sub
ret
mov
add
jo
nop
mov
out
push
and
dec
bound
pop
fmuls
scas
and
sub
sub
fsubrl
cmpsl
fs
sahf
clc
and
js
add
icebp
aas
je
lret
loope
jl
popa
fwait
imul
repnz
push
add
mov
das
jecxz
hlt
xor
dec
gs
and
jbe
pop
jb
addb
scas
out
sub
mov
adc
or
scas
mov
iret
aad
sbb
cmp
movb
dec
loopne
bound
sbb
rcrl
test
mov
cmp
aam
int3
loopne
ret
add
cltd
or
mov
xor
loop
lods
addb
lods
jecxz
jl
xchg
mov
sub
add
fnstcw
mov
add
pop
adcl
es
in
jae
arpl
mov
mov
add
sahf
inc
add
sub
movsb
xchg
stos
rsm
dec
push
fwait
or
shrl
add
cltd
push
std
jae
lahf
mov
testb
test
idiv
scas
mov
add
shlb
fldenv
add
mov
mov
rolb
add
add
outsl
int3
dec
outsb
sbb
lods
mov
jae
add
fwait
mov
outsb
arpl
stos
xchg
cli
jmp
je
inc
add
imul
out
lcall
add
inc
aaa
jecxz
sub
in
push
xor
jle
jns
and
and
jnp
dec
inc
jmp
cli
rolb
into
in
sub
jae
movsl
inc
add
sub
jne
xchg
push
push
test
inc
add
stc
imulb
adc
mov
mov
rcl
cmpsb
pop
mov
xchg
jbe
stos
clc
les
xchg
es
cmpsb
or
fdivl
mov
inc
shrb
aas
mov
imul
mov
arpl
leave
sbb
cmp
sub
adc
leave
xchg
sub
sbb
popa
xchg
dec
jb
loop
insb
xor
jecxz
and
movd
loope
js
ja
das
cmpl
push
mov
sbb
ljmp
mov
cmpsb
jl
mov
cmp
xor
pop
mov
push
adc
out
lea
les
aam
add
dec
xor
sub
fcoml
mov
mov
mov
jae
fisubl
xchg
repnz
push
in
pushf
aam
push
addr16
rolb
pop
ret
jle
push
scas
in
cli
pop
rolb
popa
mov
out
sub
pop
insl
fstp
test
xchg
sub
int
adc
add
mov
mov
push
adc
pop
data16
or
fidivrl
cmp
out
jnp
pushf
inc
add
add
test
pop
jbe
leave
mov
lcall
xchg
lcall
mov
jg
mov
or
fildl
lahf
outsb
test
lcall
lock
cli
mov
adc
clc
in
repnz
sahf
xor
in
hlt
int3
subl
mov
mov
add
call
xchg
xchg
and
inc
mov
sub
and
mov
je
add
sti
shll
sbb
mov
loope
mov
dec
mov
or
mov
repnz
dec
xchg
test
sub
adc
mov
shlb
pop
incb
adc
popa
neg
mov
add
pop
or
pop
shl
int
std
mov
sbb
add
adc
stos
jp
add
rcrl
pushf
js
in
mov
push
jae
mov
jb
sti
sbb
movsb
push
pusha
add
inc
add
jns
mov
add
mov
repz
adc
rolb
mov
lcall
dec
jno
and
mov
pop
movsb
sub
fcmovnu
mov
jne
sub
inc
outsl
out
arpl
in
pop
leave
mov
enter
mov
xor
lods
cmp
and
add
inc
sti
and
and
inc
add
test
adc
fisttps
in
aaa
add
stos
and
les
cmc
inc
add
leave
dec
das
push
add
inc
mov
add
mov
hlt
pushf
xor
enter
mov
mov
add
dec
outsb
call
fsubl
movsb
inc
jg
aas
add
je
xor
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
test
or
cmp
nop
cmpsb
adc
add
and
push
add
or
fs
sbb
pop
insb
int3
sbb
mov
mov
int
mov
mov
dec
cmpsb
and
cmpsl
inc
push
push
lods
das
mov
add
and
or
adc
xor
inc
add
jnp
addb
movb
push
add
fdivp
mov
repnz
dec
add
mov
add
adc
aaa
in
xor
lret
dec
cltd
cmc
popa
shrb
fmull
add
cmp
jecxz
xchg
pop
inc
add
adc
cmp
pop
xchg
dec
stos
fucompp
cmp
dec
hlt
nop
mov
push
inc
add
imull
cld
mov
cmp
test
aam
cmp
cs
ss
add
inc
sbb
add
daa
call
push
out
das
popa
mov
sti
mov
add
pusha
add
in
xlat
push
iret
dec
addb
add
mov
sub
les
jo
es
pop
ret
sub
jl
and
and
int
pusha
add
dec
mov
repnz
nop
cmp
pusha
add
mov
sbb
cmp
movsl
dec
decl
jnp
outsb
movsb
clc
dec
mov
sbb
or
push
fstps
or
or
add
add
pushf
mov
loopne
sub
or
test
repnz
jge
addr16
pop
xchg
outsl
arpl
test
rclb
addr16
pop
and
cld
gs
fidivrs
push
jle
xorl
repnz
mov
add
aad
enter
cld
imul
movsb
push
add
out
outsl
and
sub
mov
out
cmp
fdivrl
pop
push
dec
dec
inc
add
addb
add
add
jnp
mov
sbb
jmp
movsl
ret
ficomps
ficoms
cld
pop
mov
bound
repnz
leave
and
addr16
mov
addb
or
mov
lods
popa
mov
add
xor
lods
insb
call
push
inc
sub
inc
cwtl
or
jge
jo
or
or
add
lcall
in
rolb
icebp
les
in
inc
add
sti
jnp
adc
push
das
sahf
lcall
dec
je
outsl
daa
pop
idivl
add
out
adc
rcrl
inc
cmp
add
dec
mov
cmpsb
dec
xchg
sbb
jns
xchg
loope
adc
mov
jne
sahf
rorb
xor
ss
ljmp
mov
repz
add
add
and
dec
ret
add
sti
pop
rcr
xor
neg
les
pop
and
add
xchg
addr16
fcos
notl
xchg
aaa
xor
cltd
inc
add
cmp
daa
pop
dec
fdivl
push
lock
aad
mov
xor
mov
push
pop
pop
xchg
ret
lcall
imul
or
add
or
sahf
je
mov
xchg
fmulp
outsl
and
gs
jmp
frstor
out
in
cmp
dec
add
mov
ficoml
add
ret
xchg
xchg
cmpsb
in
or
mov
mov
aas
adc
adc
sbb
cmp
roll
add
ss
xor
xchg
pop
jl
mov
leave
xchg
jbe
dec
fwait
mov
adc
and
jecxz
out
jg
addb
imul
mov
xor
scas
cs
cld
test
cmp
jbe
dec
rorb
sub
dec
jecxz
and
imul
insb
movsl
addb
stc
outsb
mov
lods
pop
lcall
jge
in
xchg
pop
lret
ds
enter
mov
fcomps
jmp
fs
movb
mov
cmp
aaa
pop
dec
test
fcoml
lock
mov
mov
jbe
scas
push
xor
xchg
mov
cmc
out
push
push
bound
test
rclb
aad
add
inc
lods
cld
pop
mov
add
aaa
ljmp
jbe
mov
push
and
pop
lods
fcmovnu
mov
gs
adc
jbe
mov
jo
fs
pop
mov
sub
jb
add
hlt
outsl
dec
out
mov
cld
stc
stos
mov
pusha
add
repnz
cli
imul
mov
das
outsb
add
cltd
xchg
adc
xchg
push
fmuls
adc
cmc
mov
xor
divb
lcall
and
sub
inc
add
shrl
cmpsl
lret
shl
adc
imull
addb
xchg
lock
loop
fisubrl
cld
inc
add
fcmovne
je
jg
mov
aas
sahf
sub
dec
xchg
push
add
dec
dec
cltd
adc
xchg
sbb
sti
inc
out
int
cmp
push
add
add
clc
in
xchg
scas
mov
insl
sbb
inc
add
stc
inc
add
ret
push
mov
cmp
add
sbb
jbe
push
imul
sub
aad
sbb
fsubrp
xor
std
loop
idivb
mov
aas
aam
add
ljmp
push
fists
out
in
push
cmp
sub
adc
sbb
les
scas
sbb
add
imul
add
arpl
lods
jle
xchg
or
fistl
movsl
dec
les
ret
pop
inc
add
gs
test
sub
jns
test
cmp
xor
and
pushf
fstl
and
push
mov
jmp
shrb
push
add
jno
or
and
push
pop
movb
pop
addb
subl
mov
add
inc
cmp
and
in
addb
mov
mov
add
add
pop
sbb
jns
lods
inc
cmp
insl
ds
iret
cmp
lret
xchg
in
adc
xor
add
inc
adc
push
int3
es
scas
dec
repz
sti
test
mov
jg
out
add
cmp
pop
dec
fimull
lahf
push
push
dec
popa
out
arpl
popf
cmp
scas
mov
and
push
add
or
adc
or
hlt
stc
int3
add
insb
bswap
mov
mov
cmp
test
jbe
sub
dec
lcall
icebp
cmp
add
call
add
sub
nop
mov
add
cmp
rol
pop
test
into
insb
jp
out
sbb
enter
add
stos
out
and
push
mov
aas
movb
cmpsb
adc
xchg
mov
cmp
callw
aam
mov
addr16
mov
dec
xchg
mov
std
mulb
pop
mov
push
xor
lea
add
pop
inc
add
add
sti
jae
mov
add
loopne
in
mov
pop
ds
jmp
inc
and
dec
lods
dec
mov
inc
in
out
pop
addb
lds
cmpsl
add
add
xchg
dec
decb
in
test
lret
fists
lcall
icebp
inc
push
add
movb
mov
sub
dec
rolb
je
fwait
pushf
mov
mov
fmulp
mov
xor
lods
in
int
frstor
add
cltd
aas
hlt
sbb
test
fildll
xchg
inc
testb
ss
sahf
popl
cmp
add
loope
outsl
cmp
mov
add
inc
add
adc
std
imul
ss
pop
mov
stos
cmp
add
adc
jg
jp,pn
sub
add
sub
mov
pop
sti
dec
mov
scas
dec
cmp
add
cmp
add
xchg
xor
cmp
cltd
mov
dec
sub
jecxz
popf
test
jge
cmp
ret
lods
mov
movb
or
xchg
es
mov
shrl
testl
xchg
sub
xchg
sti
jns
popa
mov
es
jbe
add
mov
ds
int3
cli
outsl
stos
mov
jnp
inc
add
pop
or
cltd
imul
mov
sbb
lds
add
xchg
dec
xchg
push
mov
gs
insb
movsl
in
mov
mov
test
lock
lret
adc
ds
push
ja
xorps
inc
add
iret
jnp
mov
mov
dec
rcl
in
std
push
cmpsl
out
pop
imul
inc
add
roll
lods
outsl
sub
adc
jecxz
or
repz
xchg
or
and
adc
insb
jno
xchg
adc
and
je
jne
lcall
or
inc
add
fcom
icebp
xor
push
cmpl
or
rcl
push
sub
lret
push
xor
daa
fidivs
adc
movsb
mov
or
das
out
into
dec
bnd
addr16
jecxz
sbb
lcall
add
scas
jbe
sub
jmp
push
cmp
pop
sahf
push
std
outsl
inc
ud0
jmp
add
fwait
fs
icebp
scas
addb
ja
add
xor
add
adc
lods
xchg
mov
ficoms
jge
rorl
je
imul
and
sbb
mov
mov
enter
cmp
sarb
ja
mov
int3
xchg
sub
aaa
add
adc
imul
add
xchg
xor
repz
fsubl
xlat
xchg
movb
mov
push
inc
out
add
push
inc
mov
in
push
inc
add
xor
daa
movsb
out
push
shll
insl
ret
xor
out
xchg
pop
push
std
sub
movb
mov
jns
xchg
fistl
leave
pop
mov
stos
jo
pop
xchg
repz
mov
add
clc
in
and
or
sbb
test
mov
add
cmp
dec
insb
scas
mov
testb
pushf
push
cs
lods
dec
sbb
push
aaa
gs
stos
loopne
imul
sbb
cltd
jb
imul
loope,pt
inc
add
outsl
push
fldt
add
lods
sbb
test
push
popa
outsl
sbb
sub
add
mov
mov
mov
mov
xor
addb
sarl
arpl
sbb
or
lds
inc
fsubs
out
mov
add
loopne
loopne
pop
jp
shrl
xor
and
mov
test
inc
mov
aam
cmp
sbb
lods
les
addb
pop
lahf
jg
adc
cmp
add
adc
incl
add
add
add
push
xchg
cwtl
pop
in
push
add
popa
addb
mov
fdivrs
les
enter
mov
movb
lea
addb
arpl
pop
lahf
adc
stc
iret
mov
ret
ss
pop
repz
add
sbb
test
mov
rolb
cmp
and
frstor
add
lock
test
jae
add
push
mov
mov
int
iret
jo
add
aam
and
rcrb
mov
push
loop
add
dec
mov
bound
inc
add
xor
movb
mov
insl
lods
cmp
jp
mov
jmp
aaa
inc
add
push
inc
stc
mov
mov
jge
cmp
iret
loopne
add
cmp
dec
and
ds
scas
shlb
sahf
push
int3
xor
pop
mov
nop
dec
lret
addr16
mov
pusha
add
add
pop
outsl
add
push
dec
pop
push
inc
add
cmp
pop
mov
jae
jg
sti
dec
scas
jb
aad
pop
fmuls
lock
mov
icebp
push
stos
rcr
pop
sub
fcmovnbe
and
leave
stc
idivb
add
ss
add
jb
fisubrs
mov
push
or
jle
mov
test
cmp
jle
jg
imul
jp
ljmp
inc
cs
fidivrs
mov
jge
add
arpl
jae
mov
fwait
adc
add
jge
fsubrp
lock
pop
xor
fsubrl
pop
pop
or
aad
stos
sub
lds
jmp
int3
sub
or
mov
cmp
iret
inc
pop
pop
push
pusha
add
test
pusha
add
mov
pop
ret
jb
inc
add
mov
lock
mov
je
add
loop
jecxz
pop
xor
adc
lds
movsl
out
xor
add
test
add
cld
jns
inc
add
mov
push
push
xor
and
stos
inc
mov
out
dec
das
int3
xchg
mov
in
jmp
fbld
add
add
mov
mov
push
xchg
xor
je
inc
add
das
int
in
push
aas
dec
in
add
insb
adc
add
jns
add
add
inc
add
enter
fiaddl
sub
lods
cmp
cli
hlt
mov
add
mov
xor
cmc
lea
std
sbb
mov
sbb
dec
mov
cld
jmp
aaa
ljmp
dec
lds
int3
xchg
addb
jne
popa
push
add
fs
adc
cmc
test
adc
sbb
cmp
pmullw
cmpsb
xchg
mov
daa
int3
adc
xchg
mov
ret
movsl
push
add
test
and
arpl
dec
in
cmp
decb
add
shlb
cmpsb
pop
rclb
cmpsl
sub
adc
pop
cmp
js
xchg
or
scas
mov
scas
call
inc
shlb
pop
sub
add
popf
xchg
ljmp
and
orl
push
stos
inc
pop
cmc
dec
jp
movsb
pop
pop
mov
mov
sub
add
mov
jns
pop
repz
movsb
push
js
scas
dec
rolb
dec
mov
cmp
adc
dec
ret
pop
lock
push
stos
lea
pop
xlat
daa
call
shlb
cmp
xchg
and
or
adc
aaa
movsb
cmp
rolb
add
in
adc
ja
sbb
jecxz
nop
lods
pop
and
les
pop
push
jmp
add
or
lods
pop
test
and
icebp
int3
or
adc
sub
aas
mov
je
in
movb
dec
fildl
adc
add
orl
xchg
sbb
xchg
pushf
fdivrl
xlat
hlt
jge
mov
mov
sbb
xor
adc
xor
mov
sub
mov
fcomi
mov
int3
nop
mov
add
faddl
and
sbb
xchg
subl
leave
jmp
leave
cmc
add
inc
mov
je
mov
add
add
jp
lcall
or
adc
mov
mov
cmp
sub
mov
adc
jns
xchg
push
aaa
loope
add
push
roll
add
aad
cs
jbe
jno
les
jecxz
fwait
repz
jecxz
add
jmp
inc
repnz
in
adc
mov
sbb
je
repz
and
clc
dec
push
and
pop
std
fsubl
rorb
movb
pop
addb
add
xor
jns
push
jb
add
xchg
in
aad
inc
lock
out
mov
cli
dec
int
add
hlt
rcll
push
add
into
lahf
in
add
jmp
pusha
add
mov
lcall
in
adc
call
dec
add
and
inc
mov
lock
dec
sub
gs
mov
mov
insb
xor
sbb
pop
shr
in
xor
dec
dec
dec
mov
add
sub
pop
xor
push
mov
push
adc
pop
and
jne
and
popl
daa
addr16
aad
pavgw
add
xchg
jo
movsb
outsl
adc
and
xor
stos
lret
sub
ja
and
xor
scas
loope
add
es
add
test
test
and
cmpsl
fs
arpl
jo
test
mov
lods
adc
test
xor
mov
out
in
ret
jne
pop
aad
mov
xchg
inc
add
clc
addr16
mov
loop
mov
add
dec
and
push
rcr
adc
mov
jmp
es
cltd
mov
add
mov
fidivrl
addr16
cmp
sbb
rclb
enter
repz
push
jle
ja
sbb
xor
inc
cmpsl
mov
loop
js
bswap
sbb
int3
movsl
pusha
add
subl
mov
pushf
cmp
addb
and
test
jae
mov
adc
push
add
add
nop
int3
add
repnz
mov
addr16
jmp
cmpsb
icebp
xchg
push
test
roll
pusha
add
add
sbb
mov
sbb
push
aas
in
add
orl
rol
jae
fstl
call
or
jl
sbb
ret
cmp
bound
pop
cmpsl
and
dec
insb
test
mov
in
dec
bound
out
movsl
xchg
mov
push
aas
cmp
xchg
test
xchg
adcl
test
hlt
add
popa
rolb
add
data16
adc
inc
add
adc
cmp
and
push
xchg
imul
repnz
xor
lods
inc
add
cwtl
jg
xor
cli
rolb
sub
aad
aaa
nop
jae
push
and
int3
stc
ja
adc
cli
loopne
loop
mov
das
outsl
inc
sbb
lahf
cmpsl
test
loope
push
dec
xor
jge
scas
xor
adc
pop
jmp
add
or
dec
loopne
mov
je
scas
push
mov
sahf
add
cmpsl
daa
cmp
addb
sbb
mov
add
xor
mov
push
inc
jne
and
push
add
adc
xchg
cltd
out
test
rcr
xor
mov
push
mov
sub
add
int
or
push
insb
push
dec
data16
mov
mov
ds
or
sti
call
xchg
in
adc
data16
cmpsl
and
pushf
fiaddl
adc
int3
dec
shr
sbb
pushf
xchg
push
dec
data16
add
movsl
push
ja
jns
loop
js
xchg
lds
sub
addb
mov
xchg
xor
pop
dec
js
dec
mov
cwtl
stos
add
mov
xchg
mov
add
xchg
mov
sahf
lock
cmp
push
ficoml
mov
mov
or
add
sbb
leave
inc
int3
mov
or
mov
mov
xchg
jae
test
mov
sahf
mov
add
mov
mov
js
mov
xchg
lds
jecxz
cmp
imul
pop
add
mov
cmc
or
jge
jge
add
jmp
pop
movsl
sub
or
xchg
add
push
in
cmp
jno
mov
add
ficompl
sbb
add
add
add
mov
xor
outsl
addr16
add
loope
jno
add
ja
mov
mov
adc
jae
insl
popa
je,pn
stos
sbb
addb
add
insb
sbb
ja
lahf
mov
mov
sbb
push
je
xchg
pop
jae
inc
push
shll
add
push
aam
or
or
outsb
in
cmp
rolb
add
ficomps
mov
rcll
jg
and
imul
or
mov
add
arpl
jg
fbld
insb
nop
scas
xchg
ss
cld
jle
pop
mov
int
xchg
xchg
out
call
lret
xlat
lret
sbb
dec
push
loopne
ljmp
mov
mov
rorl
jge
lock
test
add
add
sahf
decl
adc
add
dec
lods
pop
mov
mov
or
fs
add
or
push
and
cwtl
lods
ss
jmp
out
mov
fdivp
mov
hlt
cmpsl
mov
pop
ret
lea
pop
xchg
dec
add
into
push
xchg
jge
pop
popa
loop
pop
fiadds
or
mov
insb
dec
and
lea
ja
addb
or
jno
lds
dec
enter
imul
add
nop
daa
xorl
cwtl
pop
jnp
in
push
movsl
lret
mov
outsb
dec
jb
in
or
rcll
add
mull
add
aad
mov
mov
add
clc
repnz
pop
jns
and
mov
lret
into
sub
xchg
and
dec
and
mov
out
or
in
rorb
inc
add
xchg
mov
outsb
add
gs
push
add
jp
movb
add
add
and
jmp
jge
and
aaa
jns
daa
out
add
mov
add
pusha
add
xchg
int
jle
das
in
push
push
dec
lods
sub
lret
xchg
shrl
xchg
lods
pop
sub
loope
leave
pop
call
mov
int3
out
out
unpcklps
add
add
or
sbb
movsb
cmp
jmp
add
ret
sti
js
orl
std
inc
and
dec
int3
jbe
movb
daa
enter
push
push
add
push
mov
mov
jecxz
add
mov
movb
cmp
xchg
mov
pop
icebp
mov
mov
aad
add
shll
dec
cmp
mov
data16
xchg
or
adc
push
movl
pop
int3
jbe
mov
pop
out
lea
movsl
fnstsw
add
add
popl
loopne
adc
rolb
ret
add
ljmp
call
mull
les
mov
xchg
and
push
dec
sbb
xlat
ret
nop
xchg
or
cmc
outsl
jmp
inc
add
add
pop
jg
mov
mov
rolb
jg
adc
mull
add
fcmovnu
out
cwtl
hlt
aad
add
sbb
repnz
aam
and
fcoml
lahf
ljmp
jle
add
pop
adc
scas
rcrb
xchg
dec
xchg
sub
push
enter
add
jo
sbb
push
pop
fnstenv
outsl
xchg
sahf
xchg
push
jns
int3
pop
mov
cmp
dec
mov
imul
cmp
sti
stc
dec
push
inc
add
jo,pt
adc
mov
ret
loope
scas
sti
addb
add
jg
jle
adc
das
inc
test
add
lahf
push
inc
adc
push
add
cmp
push
sub
cli
dec
aam
mov
add
inc
pop
pop
int3
adc
xchg
inc
add
jmp
inc
add
fstpl
mov
popf
ret
add
inc
mov
mov
in
pop
sbb
mov
fstl
pop
es
pop
es
test
add
pop
jg
xor
pop
fwait
not
insb
gs
divb
faddl
add
add
in
mov
dec
out
or
leave
aam
and
add
push
stos
fs
outsl
mov
shr
mov
push
dec
and
mov
ljmp
loop
add
out
sti
ret
push
roll
cmp
jno
xchg
pop
push
mov
pop
cmp
cmp
add
add
push
and
lds
or
fidivrl
pop
popf
lds
sbb
push
xor
push
fcmovu
inc
add
add
mov
ficompl
xor
cwtl
outsl
push
add
data16
outsl
dec
jbe
in
cmc
ret
sub
and
add
xchg
dec
bound
mov
cmp
leave
fistpll
cltd
pop
insl
adc
xor
scas
inc
in
test
add
mov
or
loope
std
cmpsb
mov
push
jbe
xchg
mov
imul
or
repnz
push
cmpsl
adc
add
cltd
sbb
xchg
fistl
lret
call
insb
inc
push
stos
adc
mov
std
ja
cmp
loop
bound
filds
sub
out
aam
xchg
das
lods
push
cmp
std
out
jge
scas
sti
mov
or
xlat
stc
roll
add
pushw
popf
push
xchg
movb
popf
in
xchg
lock
nop
out
jle
sbb
xlat
jge
inc
add
cmp
add
mov
mov
testb
cmp
bound
mov
addb
pop
push
add
pop
pusha
add
movsb
loop
or
nop
cli
or
sbb
inc
pop
and
xchg
jge
add
call
sub
lahf
inc
add
inc
add
push
add
movb
mov
add
add
mov
and
cmp
jnp
int3
int3
gs
dec
gs
or
lods
imul
hlt
gs
xchg
fsubrl
and
mov
and
or
mov
test
ret
jg
mov
push
add
ret
pushf
mov
fimull
sbb
fimull
xchg
lods
sub
dec
and
mov
sub
inc
push
iret
jg
lret
lcall
les
ret
inc
add
lock
mov
add
and
push
jno
shrl
in
dec
ljmp
add
add
dec
inc
add
mov
pop
fbstp
out
sti
mov
pop
xor
les
cmc
dec
push
aaa
call
shrl
inc
add
inc
fsubr
ret
sub
fmuls
outsl
mov
sub
mov
sbbl
pop
push
addr16
dec
pop
dec
mov
les
lret
inc
add
xchg
mov
cmp
cmp
ficompl
pop
add
mov
je
mov
cs
aas
sub
jg
dec
lods
das
sub
dec
cmpl
dec
movb
popa
popa
xchg
loop
pusha
add
mov
sbb
inc
add
inc
jmp
jnp
cmp
add
push
xchg
aad
cli
das
arpl
and
add
add
pop
cltd
xor
addr16
xchg
jp
rolb
cld
dec
xor
jecxz
inc
dec
push
add
movsb
pop
jne
inc
aad
pop
sub
aaa
repnz
push
jmp
mov
test
mov
enter
pop
xor
ljmp
xchg
cli
pop
xchg
rolb
scas
rolb
jae
and
xor
aas
loop
cld
out
decl
xor
sbb
dec
push
jl
sbb
add
sbb
pusha
add
in
sahf
mov
push
std
fucomip
pop
pop
jb
shlb
mov
push
nop
sub
xchg
xor
dec
or
add
fcomip
mov
add
dec
pop
mov
add
frstor
mov
es
in
iret
or
mov
mov
inc
add
mov
push
xor
adc
add
jge
sbb
mov
shlb
frstor
xchg
xorl
add
ja
iret
out
or
mov
pushf
es
fisttps
xchg
js
xor
pop
fildll
dec
in
int3
push
cwtl
lcall
sbb
push
sarl
out
add
repnz
fmulp
fwait
xchg
jns
pop
out
iret
mov
add
jmp
shlb
fmull
invd
cltd
mov
or
xor
jb
dec
xor
cmp
ret
mov
xchg
sub
cmp
add
jl
sbb
add
push
ret
add
sub
sub
push
rcrl
jno
cmp
ja
xor
lods
nop
stc
movsl
es
dec
mov
movsb
cmpsb
js
xor
lret
les
dec
sub
leave
fstl
xlat
cltd
mov
loopne
inc
add
les
dec
mov
mov
addr16
addb
push
ds
cmpsl
std
dec
popa
daa
les
aad
mov
aam
movb
fimuls
out
adc
enter
xor
outsb
sti
js
aaa
sub
mov
ljmp
or
ja
sub
sarl
lock
lcall
stc
mov
sub
add
or
jne
jl
add
sbb
add
pop
fyl2xp1
shrl
cli
jle
sbb
ds
xchg
add
pop
push
cs
aaa
out
and
leave
adc
adc
push
xlat
dec
mov
add
cld
in
int3
mov
mov
ljmp
pop
mov
adc
inc
add
xchg
lret
in
aas
insl
in
das
in
add
add
imul
jmp
cmpsl
cld
adc
dec
outsl
jl
out
fistps
enter
and
add
sbb
jg
add
dec
jns
movb
repz
aaa
jge
push
mov
fadd
add
cltd
mov
or
cld
or
pusha
add
insb
out
sbb
dec
mov
xor
cmc
sbb
ficomps
mov
mov
je
mov
rcr
mov
add
inc
andl
add
rorl
and
rolb
jmp
add
das
inc
add
inc
add
sti
sub
mov
xor
push
add
rcll
add
ret
add
cld
sbb
nop
les
ljmp
lea
pushf
xchg
adc
lret
movb
popa
push
and
push
nop
sahf
clc
push
aas
push
loopne
inc
add
xor
mov
mov
inc
add
xor
sub
push
pushf
cmp
or
fiaddl
clc
cmp
add
xor
mov
mov
mov
mov
addps
lods
movsl
dec
dec
xchg
icebp
add
xchg
lods
dec
rcrl
dec
out
push
cmp
fmulp
add
push
add
mov
dec
das
push
push
jae
addb
mov
jge
and
xchg
lcall
cs
cmp
adc
addb
incb
push
gs
aas
mov
sub
shlb
add
icebp
cmp
aad
or
fs
xchg
jbe
popf
popf
add
push
mov
inc
icebp
pop
xchg
les
pop
icebp
notl
lret
incl
mov
mov
or
aas
sbb
pop
or
add
in
pop
pop
cmpsb
sbb
addb
add
jle
cmp
add
add
outsb
add
movsb
lods
push
cmp
add
sbb
add
add
std
sahf
adc
fwait
fs
outsl
mov
add
xor
inc
add
std
jnp
cmp
add
hlt
jl
sbb
or
mov
inc
mov
adc
in
or
pop
addb
call
add
out
sub
and
mov
aas
sti
xchg
adc
cltd
push
jo
mov
add
aam
pop
cmp
hlt
inc
add
add
scas
and
adc
hlt
and
or
mov
bound
adc
aaa
jge
icebp
rcll
push
mov
sbb
out
dec
loope
add
pop
add
jmp
cld
addl
ds
pop
lods
adc
ss
jbe
xor
mov
and
lods
stos
jl
mov
push
movsl
ret
lret
insl
lock
mov
xor
dec
ds
rolb
add
addb
ficoml
jle
int3
aam
or
sub
addr16
cmp
add
dec
pop
ret
aas
sbb
movsl
push
sahf
stos
nop
scas
sbb
add
xchg
lea
mov
xchg
sub
test
adc
mov
xchg
ja
stc
je
pop
pusha
add
inc
add
fldcw
in
lcall
xchg
or
mov
addr16
into
lret
sub
add
pop
sarb
icebp
or
clc
nop
lret
cld
adc
aad
push
sbb
loopne
stos
pop
jle
fmulp
rcrb
bound
gs
loope
pop
notl
out
jp
add
sbb
jns
mov
ret
xchg
fst
or
sbb
adc
add
movb
push
push
sub
cmp
movb
cmpsl
pop
lea
jecxz
addb
out
jae
cmp
xor
rolb
mov
test
add
les
lret
jnp
loopne
daa
jnp
lock
pop
xor
cs
or
movb
sbb
and
test
add
movsb
add
imul
dec
pop
mov
and
cld
mov
pusha
add
lea
add
cmp
fnsave
sarb
cmp
sbb
insb
dec
xchg
or
repz
int
jl
mov
sub
or
addb
add
popa
fmull
jo
cmpl
icebp
cmpsl
ret
les
push
cmp
mov
call
lret
aaa
mov
mov
inc
dec
cmp
lds
int3
lock
jns
mov
movsl
xor
jl
and
lds
push
sub
cld
in
and
test
add
push
jb
cwtl
rcr
leave
mov
call
add
ret
je
iret
imul
push
pop
inc
add
ljmp
jmp
cmp
jae
adc
rolb
outsl
in
outsb
jno
lods
add
push
mov
or
mov
push
jg
ret
scas
leave
push
and
cmp
scas
xor
dec
rolb
popf
jecxz
jecxz
lods
xor
add
outsb
sub
imul
movsb
inc
and
cmp
xchg
mov
mov
mov
imul
sbb
jae
ljmp
jp
add
std
roll
sarl
data16
repnz
inc
pop
les
ds
das
push
mov
push
out
mov
popa
sub
pushf
movsb
std
faddl
mov
cli
push
mov
faddl
sbb
adc
shll
mov
lock
xor
stos
and
adc
enter
bound
fldcw
aaa
leave
sub
mov
leave
dec
repz
data16
std
mov
test
in
outsb
rcll
popf
xchg
mov
jns
ret
add
xor
mov
icebp
rcrb
es
adc
xor
pop
dec
iret
add
fsts
mov
xlat
jge
xchg
repz
and
xchg
ljmp
mov
ljmp
jb
jo
add
js
dec
test
lret
test
mov
dec
dec
test
fcmove
mov
aam
sahf
imul
fwait
je
inc
add
pop
insb
mov
push
dec
dec
dec
adc
xor
inc
add
leave
jecxz
sub
sbb
out
jecxz
roll
push
mov
add
jle
add
addb
das
push
xchg
push
mov
scas
mov
mov
out
mov
hlt
xor
lcall
sbb
and
xchg
ffreep
add
inc
add
pop
ds
push
pop
out
int
cs
xor
cmpsb
addl
lds
mov
add
std
sar
xor
xor
xor
sbb
jne
inc
add
cld
fstpt
leave
ret
xchg
mov
push
or
popf
movb
mov
add
std
jns
xchg
add
les
fs
xor
scas
arpl
jbe
stos
fidivs
or
inc
push
sbb
call
add
arpl
mov
lahf
shl
mov
sbb
add
mov
outsl
lods
insb
aad
js
rcrl
inc
cmpl
xor
add
add
ja
loope
repnz
jns
mov
jmp
rcrb
adc
loop
in
lcall
nop
add
mov
ret
mov
ret
fsubp
add
int
sahf
std
mov
pop
push
pop
inc
add
mov
or
cli
or
adc
xchg
lahf
xchg
mov
inc
add
fcompl
movb
scas
cltd
ja
mov
inc
add
mov
aad
sahf
pop
cmpsb
mov
jnp
add
and
test
addb
out
push
add
lret
add
sarb
cwtl
pop
sub
outsl
scas
repnz
add
sbb
add
test
mov
lret
cwtl
mov
popa
ss
push
ficoms
push
mov
xchg
inc
add
add
pop
inc
dec
xor
cld
ja
in
push
or
inc
add
push
fdiv
roll
dec
mov
jecxz
add
loopne
dec
xchg
push
cmc
mov
ljmp
js
mov
cld
inc
add
test
sub
repnz
ss
stos
mov
add
pop
faddl
add
sub
addb
cmp
or
add
and
fwait
sub
cli
xlat
outsb
es
cmp
dec
es
pop
aas
push
outsb
je
cmpsl
inc
enter
mov
aas
addb
rolb
push
mov
das
inc
movsl
adc
add
lahf
inc
add
repnz
aaa
dec
mov
aam
ret
fsubr
push
mov
xor
les
dec
cmp
dec
xor
iret
dec
popa
jns
adc
pop
clc
imul
inc
addb
enter
add
arpl
shrl
arpl
xchg
push
xchg
inc
add
mov
mov
mov
cwtl
stos
movb
cs
mov
aas
fsubrs
test
or
inc
add
sbb
add
idivl
dec
out
cmp
sub
in
jns
dec
pop
sahf
or
mov
sub
popf
mov
ja
std
cld
mov
ljmp
cmp
add
jle
icebp
gs
imul
dec
or
pop
lahf
lock
out
or
incl
bound
mov
addb
xor
xor
fidivl
js
shl
ret
xor
xor
ss
frstor
lret
test
jae
rclb
test
xchg
out
jmp
cmpsb
pop
dec
js
stos
mov
or
xor
xor
arpl
inc
or
jp
loopne
mov
clc
xor
mov
jl
pop
test
jnp
sub
shl
adc
and
fiadds
dec
mov
inc
ds
jbe
xchg
nop
xor
pop
sub
or
pop
std
pop
and
xlat
out
rolb
jp
jge
dec
add
clc
and
push
mov
fimuls
dec
jle
out
addb
cwtl
add
xchg
mov
arpl
mov
mov
jl
pop
mov
out
xor
hlt
sbb
dec
in
add
pop
lcall
add
mov
cmp
add
dec
icebp
inc
add
mov
fsubp
es
fcomps
push
xor
mov
add
mov
inc
add
pushf
mov
pop
aad
mov
out
call
ja
clc
sti
jae
mov
pop
hlt
lea
or
xchg
add
fidivs
fdivl
cli
fdivp
jne
push
add
leave
xor
fucomi
mov
les
divl
add
ret
rcll
fsubr
jb
mov
fwait
cmpsl
adc
sbbl
or
xor
test
or
pop
fisubs
lret
mov
movsb
out
ss
xchg
jnp
pop
jae
add
cmpsb
call
xor
dec
faddp
cmp
add
adc
mov
sbb
adc
mov
push
sub
in
jle
xchg
outsb
cld
icebp
push
add
dec
xlat
vmovdqu
movsb
stos
mov
mov
mov
sub
pop
sub
pop
push
test
loopne
sub
mov
addb
stos
xchg
sbb
pusha
add
jb
aas
mov
addb
sub
outsl
addl
xchg
and
dec
movsl
in
xchg
pop
sarl
lods
dec
push
mov
imul
inc
add
xchg
pushf
cmc
vmptrld
popf
jmp
inc
dec
mov
int3
nop
int3
sbb
or
ds
sub
cmp
add
addb
ja
xchg
lods
insl
pushf
jmp
or
xchg
add
sbb
faddp
add
xor
add
scas
aad
jg
add
mov
arpl
in
fdiv
imul
jmp
mov
inc
add
outsb
inc
addb
scas
pop
ret
add
movb
dec
push
or
cwtl
lds
stos
pop
mov
mov
ret
sub
adc
jb
jle
mov
mov
and
jo
jne
and
daa
pop
notl
mov
mov
das
jb
mov
cmp
push
add
jp,pn
push
mov
mov
or
dec
into
xchg
daa
ds
add
or
ljmp
dec
xchg
je
mov
and
stos
xlat
repz
xlat
dec
pcmpeqb
stc
xchg
xor
dec
sub
imulb
das
ljmp
adc
repnz
add
add
mov
lds
imull
mov
inc
add
pop
push
add
mov
inc
add
jbe
ss
jno
ss
and
loope
add
mov
jb
push
ror
jno
jge
pop
push
xor
sbb
xor
rolb
push
mov
mov
dec
cmp
xchg
cmp
sub
test
dec
mov
lahf
adc
test
jae
lret
adc
jmp
das
cld
lahf
or
mov
mov
int3
rcl
xchg
add
sti
lcall
outsl
lods
popf
pop
sbb
mov
inc
jl
pushf
fs
push
loope
loopne
inc
add
stos
pop
js
add
add
jae
add
adc
iret
insb
xchg
jne
cmp
cmpsb
fs
jmp
inc
add
test
repz
inc
add
add
leave
inc
stos
mov
stos
inc
xlat
adc
decb
loop
push
scas
inc
add
jle
add
cmp
popf
int
pushf
aaa
int3
mov
push
popa
sub
xor
jnp
add
pop
repnz
add
daa
es
add
push
pop
adc
jge
dec
and
lret
add
pusha
add
decl
repz
lods
pop
adcl
lds
pop
pop
adc
push
adc
inc
add
pop
pop
pop
sub
sbb
bound
imul
lea
inc
add
cmp
rolb
pushf
lods
into
sbb
loop
loopne
insb
sbb
lock
cmp
sbb
popf
xor
jecxz
pop
xchg
ret
xlat
pop
pop
fiadds
call
flds
mov
mov
add
nop
pmuludq
int
lret
je
enter
stos
lret
cmp
mov
cmpsb
rcrl
mov
cltd
in
push
mov
inc
in
mov
inc
mov
add
xchg
bswap
inc
add
test
sbb
mov
lea
add
fldl
ret
xchg
add
ja
xchg
cmp
pop
mov
push
or
or
rolb
hlt
push
mov
lock
movsl
mov
lea
inc
jle
add
push
xchg
xchg
fnstenv
mov
push
add
in
inc
mov
fs
hlt
dec
flds
inc
add
push
xchg
or
das
inc
add
pop
bound
xor
and
nop
std
xchg
dec
sti
ja
push
add
mov
mov
nop
ficompl
pop
and
ret
imulb
mov
cmpsl
inc
add
cmp
push
push
in
movsl
dec
xor
inc
push
add
dec
inc
add
lcall
cmp
xchg
fsts
imul
iret
and
add
imul
xor
add
int3
leave
pop
push
push
or
pop
in
inc
xchg
cmp
push
and
movsl
ljmp
out
mov
sub
mov
addl
add
and
xchg
push
lock
scas
xlat
out
inc
add
dec
mov
mov
push
scas
nop
mov
lods
cltd
mov
pop
sbb
jne
push
cmp
fwait
lods
inc
add
shrl
data16
les
jno
adc
mov
mull
stos
jne
int
push
das
mov
imull
dec
jb
cwtl
movb
out
ret
lcall
aas
xchg
push
fmull
insl
inc
mov
inc
add
lods
and
test
jno
pop
pop
cli
dec
enter
sbb
out
or
lods
lods
pop
mov
loopne
call
rolb
out
pop
addb
movsb
lds
add
sarl
test
repz
jecxz
cmpsl
jge
and
mov
pop
das
adc
cli
insl
repnz
shll
cltd
add
jecxz
shll
es
addb
out
sub
mov
je
movsb
repz
mov
adc
out
mov
dec
mov
add
push
push
cmp
add
cmp
aaa
popa
jge
inc
lea
addb
popl
add
push
pop
xlat
dec
xor
fcmove
xor
sbb
add
pusha
add
mov
jae
aam
and
pusha
add
ret
mov
ljmp
test
fnstsw
sahf
arpl
jp
add
lock
xor
fnstcw
jmp
push
add
kmovb
mov
je
leave
pop
jp
sbb
test
adc
int
clc
int
daa
sub
and
stos
and
mov
cmpsl
push
bound
les
mov
xor
add
sub
bnd
push
in
mov
cmc
mov
add
aaa
stos
jecxz
add
inc
jno
cmc
fmulp
sub
popa
imul
loope
std
add
and
xchg
inc
add
add
cmc
inc
add
dec
popf
insb
in
cwtl
or
test
sbb
xor
add
xchg
sbb
adc
jnp
lods
adc
add
mov
mov
ret
push
addr16
outsl
push
dec
and
add
aam
in
faddl
les
cltd
sbb
add
adc
popa
fs
add
int3
test
lods
aas
inc
add
inc
add
add
hlt
adc
add
jecxz
dec
bound
mov
ja
fdiv
mov
mov
mov
xchg
mov
fwait
inc
add
in
or
push
scas
fldl
adc
add
pop
jns
adc
fisttps
ret
mov
popf
fisubrl
sti
pop
aad
sbb
ret
xchg
loopne
push
add
sub
jo
jns
xchg
push
ja
pop
push
cmp
hlt
jmp
cmpsl
inc
nop
aas
cmp
lahf
hlt
lret
or
jp
sbb
loop
popf
in
add
xor
push
pop
iret
ljmp
data16
ficoms
aad
sub
add
faddp
add
jp
jecxz
rolb
add
mov
mov
lcall
sbb
jl
inc
add
stc
popf
mov
mov
into
andl
lods
movsb
jmp
add
push
dec
and
dec
test
ss
xor
push
jmp
mov
add
jge
cmpsb
popf
std
dec
popa
in
cmpsb
ret
lea
out
cwtl
sub
inc
jle
xchg
loop
rorl
mov
xchg
dec
movsl
cmp
push
xor
add
sbb
mov
ret
mov
push
sbb
xorl
stc
cmp
add
adcl
push
mov
loopne
incl
ds
lret
movsl
jno
xor
rolb
clc
dec
xchg
sub
fisubrs
or
jle
add
mov
xchg
sti
rorb
jne
imul
push
outsb
add
daa
jne
decl
inc
aad
repnz
add
mov
add
and
sub
cltd
stos
pop
iret
jb
jb
sub
xchg
or
push
mov
cmpsl
adc
xor
dec
icebp
repz
adc
add
and
cmp
add
imull
or
loop
xor
call
add
pop
and
ret
push
jbe
repnz
shrb
xor
icebp
js
mov
movb
std
inc
add
roll
xlat
idivb
dec
xchg
lret
mov
ss
mov
or
sbb
add
sub
mov
xchg
fisttpll
loope
pop
xchg
int
pushf
push
fwait
jmp
mov
ret
add
repnz
xor
rolb
or
xor
cmpsl
jge
imul
iret
call
fildl
imul
daa
out
les
sbb
or
add
add
cwtl
outsb
inc
fwait
lcall
sbb
inc
push
add
add
xor
add
test
mov
and
lock
add
scas
lretw
add
in
dec
cmpsb
jbe
das
in
roll
add
add
xchg
mov
mov
loope
aam
sbb
push
jae
lods
test
aad
add
pop
dec
mov
xchg
push
cmp
xlat
jge
movsb
cs
and
enter
sbb
xchg
je
in
inc
add
add
pop
idivl
sahf
jnp
icebp
and
sub
jne
fnsave
je
out
test
addb
call
pop
mov
and
inc
sub
ds
pop
lods
add
loope
mulb
test
mov
xchg
movsl
int
inc
jle
mov
in
add
jmp
add
pop
cli
je
or
into
push
lock
push
push
adc
jle
imul
mov
in
movsb
popf
int
sti
pop
cld
push
test
or
add
lods
ljmp
iret
push
cmp
bound
cmp
push
mov
jmp
mov
pop
fucomp
mov
rcrl
lods
test
sub
dec
addr16
mov
fs
push
ret
or
xchg
addb
pop
sbb
std
dec
or
and
insb
imul
sbb
dec
mov
or
xchg
lea
aad
idivb
aaa
pop
xchg
int3
push
js
mov
add
lahf
mov
or
add
outsb
pusha
add
push
sti
push
fsub
shr
and
mov
add
loope
or
jmp
add
sub
mov
frstor
int
pop
hlt
call
addb
mov
lret
add
push
push
gs
jmp
aad
js
es
addb
mov
in
push
addb
icebp
js
sti
test
jmp
aad
test
xlat
cmp
jl
loop
lahf
inc
add
xor
sbb
test
xor
add
sti
in
pop
shl
xlat
shr
les
sbb
imul
icebp
mov
add
add
mov
arpl
pop
rorl
pop
out
xchg
mov
enter
popf
pop
gs
ret
adc
stc
icebp
cwtl
pop
mov
mull
pop
and
dec
dec
pop
mov
or
mov
loop
addr16
push
jne
cmp
out
jl
adc
jge
addb
add
gs
lcall
addr16
cmp
cld
ja
xor
lcall
jmp
sub
lods
pop
pop
cmc
sarb
ror
push
cltd
xor
repz
xchg
mov
add
add
repz
icebp
mov
sbb
movsb
dec
mov
sub
pop
out
movsl
lahf
popa
mov
inc
add
push
mov
push
cmpsl
fisubrs
and
jle
pop
mov
in
cmp
dec
xchg
inc
lods
fwait
and
cmp
or
jmp
je
shlb
and
xor
pop
stos
insb
cmp
adc
lods
pop
out
and
sahf
cmp
add
aaa
jae
jecxz
je
ret
or
lret
inc
rcl
push
xor
add
add
inc
cmp
add
push
mov
inc
cmp
repz
pop
and
cwtl
add
mov
leave
push
fsubrs
aam
add
add
jmp
dec
leave
lock
jmp
movups
fmuls
or
iret
or
mov
and
sub
cs
xchg
dec
gs
xchg
push
hlt
enter
lret
add
ja
mov
add
das
adc
jno
scas
cmpsl
xchg
dec
lcall
add
bound
jne
cmp
add
adc
sbb
mov
dec
hlt
enter
ss
iret
jmp
push
stc
stos
fmuls
mov
popf
out
ficompl
fcom
cwtl
ds
push
fwait
mov
idivb
fmull
rcl
inc
add
jp
clc
imul
add
or
cmp
push
ljmp
xchg
fst
loopne
inc
adc
and
add
sbb
jg
dec
lret
mov
cs
jle
insl
incb
sbb
out
js
sub
mov
mov
mov
push
dec
inc
add
out
daa
xchg
xor
add
icebp
sti
xchg
mov
cld
cli
fstps
inc
push
or
jle
mov
jb
gs
pop
pop
adc
ljmp
loope
movsl
mov
pop
xchg
loop
xchg
and
pop
movsb
sub
cmp
pop
les
sub
aad
cmc
fnstenv
jp
gs
sbb
int3
and
sub
aas
notb
mov
xor
add
addb
std
xchg
or
dec
neg
jp
test
add
dec
jbe
jg
xchg
add
call
sbb
mov
sarb
cs
add
sbb
cmp
addr16
mov
add
iret
push
bound
mov
insl
or
jno
pop
or
jle
movsb
mov
aas
dec
ret
iret
pop
cmp
insb
repz
test
addb
cmp
or
fbld
mov
add
fwait
dec
or
lahf
stos
shl
xor
gs
mov
cwtl
cs
xchg
out
mov
jp
adc
cli
int3
xchg
mov
jmp
inc
and
hlt
mov
sub
adc
jmp
cmp
push
pop
out
xchg
mov
inc
add
subl
add
cmp
jl
add
outsb
loop
push
mov
pop
cmp
sub
aaa
or
or
aaa
inc
add
add
dec
xchg
in
xchg
out
inc
add
gs
add
stc
sti
repz
pop
fnstcw
mov
add
les
and
xor
fimuls
mov
outsb
ljmp
xor
add
ljmp
cs
mov
outsb
mov
cwtl
jae
add
repnz
xlat
shl
xchg
jne
jae
fnstenv
movb
push
add
mov
test
jl
out
movb
nop
mov
nop
out
jno
or
dec
mov
outsl
mov
pop
repnz
rolb
mov
rorb
lret
out
inc
add
dec
call
call
push
adc
jb,pn
ds
inc
sbb
jmp
add
rclb
xchg
adc
push
cltd
jo
mov
add
lock
xor
jb
pop
enter
mov
je
add
lea
sub
punpckhwd
scas
cs
pop
addr16
cwtl
xchg
sub
idivb
push
push
inc
add
dec
adc
pushf
mov
inc
add
mov
jmp
loop
dec
push
in
push
gs
imul
push
out
fsubrl
aas
test
jecxz
hlt
dec
xlat
out
push
add
add
rolb
xchg
mov
inc
aam
add
jbe
pusha
add
ss
cmc
mov
or
loope
inc
add
or
call
fistl
repnz
icebp
outsl
lret
icebp
cli
jo
mov
sbb
cmp
les
outsl
xchg
ds
into
call
mov
lods
and
rol
fimuls
sbb
add
inc
fs
test
inc
add
push
mov
inc
add
mov
mov
ss
inc
mov
pop
clc
jae
inc
add
negl
test
jp
mov
pop
sub
pop
mov
pop
add
and
pop
xchg
xchg
and
insl
rep
shrb
jnp
add
add
xor
test
in
xchg
xchg
jns
loope
xor
push
lcall
mov
inc
add
sbb
fwait
mov
and
add
mov
pop
ret
jae
popf
insb
fisttps
out
mov
lds
add
dec
rcr
pop
mov
call
fstpl
inc
add
sbb
ficompl
stc
pop
enter
les
sub
out
popf
fsub
cld
insb
dec
mov
fcmove
mov
mov
xchg
movsb
push
add
ds
add
dec
and
aam
push
dec
cltd
sahf
xor
mov
stos
xor
mov
push
mov
mov
xor
in
cmovae
pop
lock
push
and
bound
orl
mov
dec
mov
inc
lret
mov
add
xchg
mov
fs
inc
xchg
cmc
xchg
fbstp
shrl
pop
test
inc
add
pop
daa
idiv
jg
add
sub
xchg
pop
adc
jmp
pop
nop
push
sbb
ja
adc
sbb
push
add
lahf
fidivs
jb
add
mov
arpl
add
jp
lock
mov
add
sarb
jl
and
cmp
or
mov
mov
inc
add
hlt
aad
add
popf
movb
vcomisd
fwait
test
pop
or
pop
push
add
sub
aas
fwait
dec
xchg
push
pop
adc
xor
in
dec
inc
add
add
dec
jmp
mov
inc
roll
adc
and
mov
enter
mov
popf
or
dec
fbld
icebp
cltd
imul
mov
fnclex
in
xchg
sub
mov
jmp
add
aad
nop
daa
movsl
leave
lahf
sub
mov
cmp
loope
nop
loope
add
outsb
mov
mov
xor
add
in
mov
jo
add
dec
cmp
out
rol
add
xchg
pop
test
stc
orl
shll
add
push
sub
mov
add
addb
inc
add
les
pop
insb
stos
mov
decl
add
and
daa
ljmp
ljmp
addb
in
aas
fnstsw
mov
pop
icebp
in
jae
push
mov
in
mov
iret
popf
mov
fistpl
mov
aad
add
psrad
add
stos
push
movsb
out
or
pop
sub
jns
leave
mov
sbb
aad
les
mov
movb
pushf
xor
pop
je
mov
cld
test
pop
push
cmc
or
fdivrl
add
outsl
in
mov
roll
js
xlat
addr16
push
lret
and
sub
outsb
jae
adc
mov
mov
imul
in
mov
cmp
add
jg
add
sbb
cmp
ret
gs
push
shll
xchg
jb
jbe
lahf
cmp
rolb
add
add
mov
cltd
daa
or
lea
add
adc
jecxz
test
push
mov
loop
cmp
test
add
stc
icebp
inc
sbbl
add
add
add
dec
pop
fldcw
pushw
add
dec
into
or
sub
push
pop
mov
pop
stos
add
sub
xchg
and
ds
mov
sub
dec
mov
xchg
mov
in
sar
pushf
movsb
cld
xchg
dec
xchg
add
arpl
push
mov
pop
dec
xlat
test
xor
les
lods
push
mov
hlt
jmp
adc
in
cmp
arpl
stos
insl
xor
add
push
or
add
mov
int
arpl
addb
sbb
les
lret
mov
and
sub
inc
add
ds
shl
pop
dec
push
push
addb
fsubl
jnp
rcr
mov
sub
hlt
adc
movb
mov
scas
cmp
into
std
adc
add
popf
orl
push
bound
jg
leave
hlt
push
add
xlat
mov
in
into
movsl
cmp
fcomip
outsl
imul
jle
mov
ja
popl
lahf
shrb
loope
push
sbb
pop
rorl
je
clc
movsl
aam
add
add
xchg
cmp
push
addb
mov
cmpsl
rcll
mov
xor
lods
pop
inc
add
daa
cmp
mov
add
movb
cmp
orl
sti
pop
das
mov
cld
inc
add
push
les
mov
add
inc
inc
or
mov
sbb
sub
add
lods
es
add
fidivs
out
sbb
dec
fs
sahf
mov
andl
dec
xchg
mov
add
lock
insb
sub
into
jns
add
repnz
and
insl
popf
cmpsb
cmp
push
mov
mov
mov
mov
adc
js,pt
jecxz
add
jnp
movsl
stos
cmpsl
and
and
cmpl
insb
dec
or
cmp
adc
rclb
sub
add
add
stc
incl
sti
ret
or
cmpl
push
push
pop
dec
dec
mov
push
rorb
push
sbb
push
hlt
push
jmp
cltd
push
cmp
js
mov
add
mov
push
push
dec
hlt
fisttpl
pop
mov
pop
lods
aaa
jecxz
cli
or
adc
sbb
hlt
cmp
mov
gs
jge
popf
cmp
adc
sbb
pop
lods
out
cmpsl
rcrl
jne
shl
xor
das
or
mov
mov
ss
add
sbb
add
or
loope
inc
xchg
mov
inc
add
sbb
dec
push
jp
cs
mov
xchg
sbb
inc
add
ss
pop
push
clc
fnstenv
in
cwtl
movb
add
or
mov
lea
push
mov
mov
mov
mov
mov
dec
inc
loope
push
pusha
add
fimull
sub
inc
sbb
int
out
out
push
jle
loop
inc
add
data16
lret
fimull
jp
addr16
dec
loopne
add
mov
cmpsl
pop
inc
push
mov
push
fistpll
data16
or
pushf
pop
xlat
inc
rcll
push
loope
jg
jns
popf
sub
ds
or
cmc
movb
or
or
mov
lds
mov
mov
cmp
push
xchg
lock
or
aaa
lock
jecxz
inc
add
loope
rcll
sub
loope
jl
inc
pop
mov
mov
out
xlat
xor
inc
ret
dec
clc
shll
leave
lock
stos
popl
test
and
mov
dec
cmpsb
lret
push
or
lea
testl
jle
pop
sub
mov
cmp
mov
ljmp
and
jg
aas
icebp
loope
stc
pusha
add
inc
repz
or
sahf
lods
insl
sar
pop
dec
sbb
add
jne
add
out
xchg
mov
cwtl
or
add
add
xchg
add
bound
and
ret
push
lcall
cld
sbb
aas
ljmp
outsb
jecxz
mov
mov
sahf
cmp
cltd
lret
lret
xchg
incb
insl
shl
jnp
jne
mov
iret
cld
mov
adc
push
ud1
jno
xchg
cmp
lahf
pop
cmpsl
jg
nop
push
daa
or
lret
xchg
iret
sbb
push
mov
cld
jns
cltd
in
les
lock
jl
xchg
mov
add
dec
inc
add
inc
loopne
mov
xchg
pop
lds
lods
scas
mov
out
dec
lcall
fs
in
push
mov
mov
sub
loop
push
test
mov
jo
addb
loop
xchg
or
mov
cs
fnstcw
loop
or
add
inc
add
loop
xchg
arpl
mov
or
add
adc
sahf
leave
in
out
test
xor
mov
cli
sbb
into
loopne
sahf
pop
mov
cld
dec
into
mov
in
scas
push
inc
add
scas
pop
jne
or
mov
pop
fucomi
jns
sahf
iret
jge
cmp
aaa
xchg
pop
xchg
scas
jecxz
jg
cwtl
or
mov
mov
xchg
xor
push
int
pop
rcrl
fistpl
cmp
dec
mov
std
addb
cli
iret
lock
add
xchg
dec
movb
movsl
ret
pop
pop
leave
pop
movsb
mov
mov
push
adc
sub
add
inc
divl
mull
in
icebp
aam
pop
in
or
inc
add
nop
popl
and
enter
xchg
ljmp
inc
outsb
cli
fcomps
js
add
jbe
cmp
lods
movsb
push
addb
pop
mov
jg
push
jmp
sub
rolb
pop
mov
push
mov
jbe
sbb
repnz
scas
add
scas
js
mov
cltd
and
out
jo
pop
jg
sbb
add
cld
push
movb
adc
fwait
lret
pop
popl
mov
imul
inc
add
mov
sbb
lock
cli
das
pop
xlat
xchg
push
cmp
add
and
jg
outsl
je
xchg
lods
push
dec
cmpsb
lret
adc
add
add
mov
movsl
xchg
xchg
test
and
lcall
mulb
xchg
ss
fxtract
scas
ficomps
in
pop
and
aad
xchg
xchg
sahf
add
fsts
outsb
sub
xchg
jo
mov
xchg
adc
lret
jl
add
xchg
stc
add
mov
mov
jb
dec
and
repnz
sbb
lret
movsb
adc
add
loop
push
and
xchg
daa
adcl
imulb
inc
push
add
insb
adc
mov
inc
add
push
scas
out
jge
pop
rcrl
insb
mov
lahf
cmp
cmc
cmpsb
mov
je
fucomi
jp
xorl
xlat
sbb
and
repnz
das
cwtl
lods
test
lcall
rcrb
jg
mov
outsl
das
lret
xchg
inc
add
jb
pop
sub
add
add
inc
add
nop
and
int3
push
pop
call
sbb
fcmovnbe
out
mov
push
mov
xchg
push
clc
sub
pop
mov
push
stos
dec
fstl
jl
bound
mov
dec
xor
and
sbb
dec
mov
push
add
movb
or
jo
mov
adc
add
push
stos
enter
mov
push
mov
sbb
mov
out
scas
xchg
or
addb
mov
cmp
leave
mov
sub
iret
int3
mov
mov
rcrl
out
pop
push
out
addr16
mov
and
mov
mov
jo
push
rolb
and
xchg
pop
outsl
jmp
add
pop
push
dec
addb
xlat
pop
in
add
sbb
lcall
mov
out
enter
add
add
cmp
cmpsb
ss
pop
push
repnz
subl
jl
clc
addb
add
cld
or
mov
lods
pop
aad
icebp
and
enter
cmp
dec
xor
ss
in
daa
cmc
bound
sub
add
xchg
jecxz
cmp
push
add
jns
add
mov
jecxz
jns
data16
xor
cltd
xchg
and
insb
jnp
adc
inc
inc
and
icebp
jg
out
fcmovb
add
lea
fcmove
es
insb
adc
sti
int3
or
jp
jo
iret
test
clc
lret
add
jecxz
pop
mov
xchg
push
sbb
xchg
mov
mov
add
add
cmp
dec
ret
nop
mov
cmp
xchg
xor
cmc
repz
lret
pushf
les
dec
dec
mov
or
fildl
xorl
adc
push
mov
aaa
inc
add
mov
loopne
ficoml
cmp
cmc
jecxz
je
sbb
lock
into
addr16
cs
addps
les
mov
icebp
or
out
xchg
dec
xchg
inc
add
jbe
pop
mov
pop
outsl
xor
or
add
jecxz
add
iret
stos
shrl
dec
out
notb
call
add
cmp
and
cmp
xor
popf
cs
out
xchg
fisttpll
sarb
movb
rolb
inc
pusha
add
std
xor
jmp
or
dec
cmp
insb
cmp
cmp
jne
call
add
adc
es
lock
mov
addr16
sub
dec
aam
lods
stos
out
addb
lret
sub
pusha
add
nop
cli
mov
movsl
out
fidivrs
pop
adc
jecxz
dec
lret
pop
xchg
adc
push
js
add
mov
add
jmp
out
push
insb
jmp
add
test
fs
jb
movsb
loope
xchg
ficomps
lock
loope
int
jne
mov
mov
sti
ret
lahf
loope
mov
rolb
push
and
addb
dec
mov
xor
jnp
mov
lcall
sti
mov
push
push
jno
and
cmpsl
push
jne
les
xlat
nop
mov
or
pop
push
xchg
jne
ret
push
add
add
scas
mov
pop
dec
xor
ljmp
pop
push
arpl
repz
add
stc
xchg
int3
pushf
push
xorl
dec
lock
push
popf
adc
mov
js
xor
mov
shll
loopne
shll
aaa
ret
push
jnp
mulb
fildll
dec
fcoms
ja
js
inc
add
and
insb
mov
stos
xchg
sub
fcmovbe
mov
imul
sbbl
pop
mov
aas
enter
shl
ljmp
xchg
xchg
and
cmp
mov
jb
or
pop
sub
mov
add
push
jecxz
xor
xchg
orl
cli
mov
xlat
popa
inc
add
mov
jmp
dec
xor
lods
imul
cltd
jg
pop
les
jo
mov
stos
iret
lods
mov
aas
xchg
leave
jae
hlt
jb
jle
aad
dec
pop
fs
cli
jnp
aam
mov
fcomp
or
movsb
addb
add
cmpsb
repz
call
into
negb
mov
dec
jle
cmp
add
xor
mov
add
xor
fsubrs
xchg
mov
fcompl
mov
das
test
mov
call
mov
and
aam
mov
mov
add
aad
add
add
call
mov
mov
add
addb
add
adc
add
add
xor
lods
es
shll
add
imul
dec
rcr
shrl
mov
xchg
sbb
fnsave
movsb
cli
xor
fsubr
or
outsb
cmpsb
sbb
adc
pop
xor
sbb
repnz
inc
add
add
test
pop
lret
lcall
pop
pop
test
fadds
out
lea
popa
pop
pushf
scas
sti
mov
in
aad
dec
adc
lahf
pop
or
fildll
fnstsw
out
cwtl
dec
cli
lret
add
clc
lods
jecxz
stos
gs
aam
sub
mov
adc
lds
push
scas
add
sub
add
mov
jne
add
pop
sub
add
shr
int3
cmp
in
mov
push
fidivrs
outsb
outsb
pop
adc
lret
xchg
adc
dec
out
and
imul
jno
jbe
dec
mov
pop
int3
popa
xchg
lcall
ret
xor
mov
mov
adc
repnz
or
add
cli
pmovmskb
sarb
push
jecxz
stos
in
pushf
lds
ret
xor
fsubrl
inc
cmp
mov
push
leave
leave
movsb
mov
xchg
adc
mov
push
cmp
add
inc
add
mov
mov
aas
popf
in
mov
in
lret
pop
pop
mov
mov
cmp
mov
lret
cmp
xor
fcmovb
icebp
push
repnz
push
add
jnp
aas
or
nop
xchg
cmp
or
adc
or
rcrl
scas
xchg
mov
jo
sub
sbb
sarl
jb
fcmovb
add
loopne
popa
dec
ss
lcall
add
add
clc
mov
add
pop
addr16
lea
xchg
cld
cmp
xchg
xor
jnp
adc
in
xor
ds
add
int
ja
sbb
add
mov
jne
and
adcl
pop
mov
adc
mov
mov
mov
cmp
mov
sbb
pop
and
dec
jb
jno
lcall
gs
sub
add
inc
add
xor
and
and
adc
daa
adc
push
arpl
jle
roll
add
popf
push
push
push
loop
add
bound
mov
mov
cld
mov
outsb
push
add
out
mov
xor
pop
inc
add
out
leave
xchg
mov
cmp
jne
add
add
add
adc
int3
xchg
jae
das
push
cli
insl
addl
testl
inc
jns
aam
ret
sbb
xor
push
in
adc
aam
imul
sbb
add
dec
loop
mov
sub
ds
mov
push
push
addb
jns
xchg
pop
push
mov
and
lcall
repnz
into
add
gs
or
xchg
cltd
rolb
pusha
add
add
cmp
or
push
mov
out
les
outsl
out
fstpl
lret
pop
in
push
clc
in
mov
xchg
jecxz
out
or
jb
cmc
add
add
rolb
mov
jp
pop
movb
add
xorl
pop
cmc
sbb
jne
aaa
lods
cmp
add
mov
add
pop
jne
jb
push
gs
mov
cmp
addb
xor
nop
ljmp
add
mov
xor
jl
fwait
xchg
ret
pop
sub
sub
iret
sub
mov
jb
outsl
mov
fs
jbe
sub
push
add
enter
ds
mov
and
leave
cli
sub
es
push
roll
ljmp
add
jecxz
pop
lret
rolb
mov
les
push
inc
and
shl
mov
popf
pop
jnp
ror
stos
stos
or
out
add
jecxz
inc
dec
shlb
add
loop
addr16
sub
mov
scas
das
adc
stc
xchg
push
jno
inc
add
loop
lahf
ret
les
xchg
jb
sub
mov
add
mov
test
aam
mov
adc
call
fs
and
cmp
xchg
pop
sub
xlat
movsb
jp
add
xlat
cmp
stos
data16
xchg
insl
cmp
sub
outsb
icebp
mov
in
sbb
out
dec
mov
sub
pop
fsts
int3
repnz
sub
push
iret
ss
xor
mov
pusha
add
dec
dec
mov
es
mov
imul
pop
sahf
mov
xchg
lret
add
xchg
enter
mov
and
hlt
ljmp
or
push
imul
adc
add
js
push
cmpsb
int
loope
add
mov
fadds
and
lahf
xor
fnstsw
ss
add
cmp
addb
popf
addb
hlt
jno
add
and
in
add
cld
sub
idivl
sub
out
fdivrl
out
nop
ficoml
dec
es
xor
lahf
dec
shrb
pop
js
push
adc
or
stc
add
push
enter
fnsave
lods
gs
lods
in
mov
scas
out
xchg
out
xchg
cli
imul
mov
mov
cmpsl
push
xchg
sti
cmp
push
inc
add
jno
push
add
je
subl
popa
pop
or
push
sahf
rcl
test
int3
out
push
sti
sti
aaa
ja
addb
call
es
xchg
aas
nop
addr16
sbb
dec
ds
jmp
insl
ss
add
dec
jp
lds
push
shrb
outsl
lock
imul
imul
pop
dec
jle
mov
pop
in
mov
das
nop
jo
stc
pop
jmp
sahf
push
dec
dec
mov
add
inc
add
xchg
stc
orl
xchg
xor
mov
js
hlt
push
fsubr
xor
mov
shlb
adc
ss
scas
addb
sbb
idivb
addb
sub
cmp
enter
cmp
jnp
mov
add
hlt
dec
aas
aad
subl
jg
mov
mov
gs
adc
sbb
and
pop
pop
mov
inc
dec
repnz
xchg
dec
add
fcompl
scas
mov
out
fcmove
scas
xor
pop
daa
adc
bound
jg
sub
add
add
dec
fsub
lcall
mov
sbb
and
or
cmp
jae
in
sbb
add
imul
add
dec
push
aas
insl
sti
fsubl
add
xchg
imul
add
das
mov
add
cmp
mov
roll
cmp
imul
adc
hlt
arpl
adc
pop
or
pop
fsubrl
xchg
push
jb
mov
in
xchg
scas
jp
stc
sbb
mov
push
sub
std
pusha
add
cld
jg
addr16
mov
clc
mov
mov
push
pushf
cmp
stc
in
sbb
add
das
in
push
cmpsl
scas
je
lahf
sbb
xlat
in
inc
add
std
imul
in
xor
les
mov
movb
add
lea
adc
mov
mov
data16
clc
jno
stc
pop
push
add
sbb
add
add
loope
mov
push
sub
dec
jge
fs
adc
push
dec
stos
push
sbb
pusha
add
or
sub
push
or
jne
sbb
iret
dec
movb
std
notb
aad
or
push
jmp
jmp
ja
pusha
add
repz
jmp
xchg
or
add
lds
sbb
std
movsl
lret
lea
negb
push
movsl
pop
test
mov
jge
cmpsb
mov
pop
mov
sbb
ljmp
outsl
scas
and
lods
mov
into
inc
jmp
jnp
enter
cmc
imul
frstor
add
xor
in
insl
in
cmpl
sti
sub
out
out
mov
or
xchg
les
xchg
mov
and
and
dec
daa
inc
icebp
int3
lods
mov
mov
aam
add
repnz
js
pop
xorl
pop
sub
xor
fdivrs
sbb
icebp
sbb
adc
pop
xchg
or
ds
cmp
add
mov
pop
lods
leave
push
and
push
mov
push
fadds
imull
xchg
lods
ja
mov
sub
mov
lock
mov
sbb
xchg
add
mov
pop
enter
pop
mov
stos
addr16
roll
xchg
inc
andl
stos
mov
dec
mov
xchg
cmp
rcrl
xlat
mov
les
mov
iret
xchg
dec
enter
pop
xchg
stos
xlat
xchg
shrl
sarb
sub
inc
pop
mull
add
sbb
jae
bound
rolb
inc
add
add
or
sub
add
sti
mov
mov
pop
fwait
mov
mov
add
xchg
xor
add
inc
add
mov
push
sbb
mov
inc
add
jl
aam
lods
fcom
dec
bound
mov
push
add
loop
dec
dec
sub
or
rcrb
call
cmp
xchg
xchg
movb
cmpsl
cli
daa
test
into
xchg
ret
cli
mov
or
mov
pop
lock
lods
es
movsb
dec
or
mov
add
pushf
sar
mov
add
add
out
mov
jecxz
icebp
arpl
enter
add
daa
push
jbe
movb
cwtl
fsub
mov
add
inc
add
mov
stos
fs
mov
or
push
add
je
test
inc
add
cmp
mov
xor
rcll
jb
dec
inc
add
in
xor
in
mov
and
sub
cs
xchg
int3
inc
add
push
xchg
jno
cmpsb
ss
jecxz
adc
das
jge
cmc
aad
mov
mov
unpckhps
mov
push
fstpt
cli
enter
xor
fsubrs
rolb
dec
jne
add
xchg
movsb
sub
push
std
mov
push
adc
int3
xchg
and
mov
jg
push
js
das
jg
movb
pop
arpl
cmp
add
in
add
add
rcll
xchg
mov
push
divl
xor
test
pcmpeqd
testl
outsl
adcl
mov
popf
jmp
call
dec
pop
and
pop
call
mov
test
stos
mov
add
cs
ficomps
addb
xchg
jp
add
rcl
lea
and
add
adc
mov
mov
xor
mov
push
fmull
push
call
xchg
pop
adc
and
addb
mov
pop
jns
cmpl
and
push
pop
aad
das
imul
rcll
movb
aas
cmpsb
test
push
daa
out
jo
sub
not
mov
cld
lcall
dec
imul
fwait
mov
inc
loop
fsubs
mov
add
mov
adc
adc
dec
testl
push
out
lock
fwait
push
lock
add
jae
mov
jno
int
js
mov
addb
xor
xchg
repz
jecxz
xchg
sub
mov
rolb
arpl
add
mov
jg
sub
fidivrl
dec
and
mov
sub
add
push
lret
and
xchg
push
or
fldcw
sti
pop
fnstcw
add
pop
cwtl
lds
push
mov
add
pusha
add
cwtl
sarl
fidivl
mov
jo
test
rolb
add
push
sahf
jb
test
mov
push
stc
cli
jge
aas
push
dec
push
add
callw
addb
mov
jnp
stos
test
push
fsubp
das
push
xchg
push
movsl
or
out
mov
sub
add
adc
jo
lahf
push
and
int
pusha
add
sub
push
xchg
ja
add
inc
add
ljmp
inc
jl
ffree
or
lods
fldenv
add
xchg
inc
add
and
sbb
rcl
movb
add
mov
stos
shrl
xor
sbb
lcall
mov
push
add
scas
nop
cmpl
fs
jo
or
loope
je
addr16
in
nop
repnz
aad
add
in
cltd
sub
cmpsl
and
outsl
xchg
pushf
cmp
cmp
add
adc
pop
mov
xor
aad
add
jmp
ss
lret
mov
scas
add
pop
pop
or
mov
mov
xchg
ds
in
mov
es
mov
fwait
mov
sbb
addb
dec
loop
cltd
pop
mov
sub
inc
mov
rolb
and
cmc
mov
sbb
sbb
addr16
pop
jg
push
add
mov
sbbl
push
pop
sub
lods
fs
hlt
jbe
enter
call
xor
mov
les
imul
cltd
xchg
jecxz
mov
popf
ljmp
push
jbe
add
and
in
add
pop
pop
in
pusha
add
add
mov
push
scas
add
cmc
popa
inc
pmulhuw
add
adc
sbb
xor
sarb
sbb
push
fldl
add
ljmp
cmp
dec
dec
out
mov
add
jmp
ficoms
pop
loope
add
pop
jmp
inc
repnz
mov
add
and
dec
enter
lea
cmc
cmpsb
in
ss
cmpsb
or
xchg
arpl
mov
add
and
jns
pop
bound
xor
add
jae
add
stc
push
mov
xchg
sub
mov
inc
add
or
dec
ljmp
bound
push
lret
adc
in
sarl
add
and
mov
add
aad
add
jecxz
shll
mov
movsl
enter
jecxz
add
add
pop
mov
test
popa
pop
sub
addr16
push
sbb
adc
inc
pop
out
ja
add
inc
psubsb
mov
mov
lret
add
aas
enter
mov
iret
aaa
push
negb
xchg
inc
pop
lcall
xor
add
out
repnz
add
or
dec
scas
jns
add
loopne
cmp
stc
nop
jb
add
add
add
push
mov
xchg
ret
icebp
add
inc
lock
jp
jle
stc
nop
jb
out
pop
add
js
loop
push
mov
xchg
ret
lods
add
push
xchg
add
push
mov
sbb
add
stc
nop
jb
add
mov
nop
cld
jmp
xlat
add
xchg
add
ljmp
andb
add
add
add
add
push
mov
roll
adc
lods
mov
add
mov
stc
nop
jb
add
nop
jb
add
push
push
mov
xchg
ret
sbb
adc
xchg
pop
mov
add
nop
jb
add
and
nop
jb
xlat
rolb
movsl
push
sbb
jb
outsb
sahf
bound
sbb
nop
jb
cmp
movsl
add
add
push
mov
xchg
ret
add
add
nop
jb
add
mov
mov
nop
cld
jmp
mov
lock
add
nop
jb
leave
sti
insb
test
nop
cld
jmp
add
mov
stc
nop
jb
add
adc
stos
jmp
nop
cld
jmp
add
lahf
test
nop
jb
jns
add
fisttps
arpl
inc
add
sbb
cltd
add
stc
nop
jb
push
add
add
je
cmpl
nop
cld
jmp
test
int
jne
stc
nop
jb
mov
adc
adc
mov
push
mov
xchg
ret
pop
inc
xchg
hlt
cmp
jb
leave
xchg
add
xor
push
mov
xchg
ret
add
add
pop
mov
push
mov
xchg
ret
xchg
mov
pause
cld
jmp
xor
mov
jecxz
xchg
jo
movswl
nop
cld
jmp
add
call
nop
cld
jmp
add
add
xchg
dec
imul
stc
nop
jb
aam
cli
iret
xor
mov
mov
stc
nop
jb
movsl
add
out
test
dec
cmp
nop
cld
jmp
add
jg
arpl
jae
nop
jb
pop
add
stos
push
mov
xchg
dec
add
add
add
add
push
stc
nop
jb
pop
add
add
lock
mov
xchg
ret
add
cld
jmp
sahf
add
add
add
mov
cmpl
nop
cld
jmp
out
icebp
bound
add
push
stc
nop
jb
add
pop
mov
add
cmpw
nop
cld
jmp
add
bound
testb
stc
nop
jb
mov
outsb
add
jmp
stc
nop
jb
add
outsb
add
add
pop
add
stc
nop
jb
mov
in
push
add
add
add
pop
sub
jb
add
add
fwait
pusha
stc
nop
jb
sbb
add
nop
push
clc
mov
stc
nop
jb
test
add
stc
nop
jb
test
add
mov
cld
jmp
add
add
add
nop
fs
add
push
jl
popa
add
mov
xchg
ret
and
mov
stc
nop
jb
add
add
jne
stc
nop
jb
add
push
mov
xchg
ret
add
xchg
xchg
sub
add
stc
nop
jb
aam
dec
mov
stc
nop
jb
xchg
xchg
sti
add
inc
push
mov
xchg
ret
lods
xchg
pop
dec
add
not
push
mov
xchg
ret
add
add
cmc
sub
pop
add
stc
nop
jb
add
jp
xchg
adc
pop
push
mov
xchg
ret
add
mov
xchg
push
in
jne
stc
nop
jb
xchg
and
stc
nop
jb
add
shlb
xor
jb
fnstcw
sub
mov
xchg
ret
jg
add
fnstenv
fwait
add
stc
nop
jb
pop
iret
or
jo
mov
stc
nop
jb
mov
add
sub
cld
jmp
add
ret
sbb
add
add
test
jns
pusha
add
lea
nop
cld
jmp
add
adc
xlat
add
xchg
push
mov
stc
nop
jb
add
sti
add
call
movsb
add
add
push
mov
xchg
ret
add
jg
pop
sbb
movsb
push
mov
xchg
ret
xchg
xchg
pop
bound
stc
nop
jb
add
add
pusha
add
popa
add
mov
xchg
ret
adc
dec
adc
add
nop
jb
mov
add
cld
and
push
mov
xchg
ret
mov
nop
cld
jmp
add
gs
add
jmp
jb
add
pop
add
jl
stc
nop
jb
mov
xor
movb
pop
add
stc
nop
jb
dec
lahf
adc
push
mov
xchg
ret
add
dec
push
stc
nop
jb
add
inc
jge
push
push
mov
xchg
ret
add
in
push
push
mov
xchg
ret
out
cltd
stc
cmp
mov
stc
nop
jb
or
add
pop
add
push
mov
xchg
ret
add
xor
nop
jb
add
inc
ljmp
bound
icebp
pusha
add
add
jle
add
add
out
movsl
add
sub
inc
and
nop
jb
add
add
add
jae
cld
jmp
add
add
sbb
fisttpl
add
nop
cld
jmp
add
xlat
sbb
add
stc
nop
jb
lahf
add
out
push
nop
cld
jmp
add
cltd
mov
add
nop
cld
jmp
add
add
jmp
bound
xor
or
bound
stc
nop
jb
jns
dec
add
leave
add
cmc
inc
add
or
lods
dec
mov
nop
jb
gs
add
movzwl
stc
nop
jb
sbb
aas
and
push
mov
xchg
ret
mov
jno
stc
nop
jb
stc
add
mov
mov
nop
cld
jmp
std
jp
pop
pop
pop
mov
stc
nop
jb
and
sar
nop
jb
sbb
add
jb
xchg
add
add
ljmp
orb
add
leave
add
mov
xchg
ret
sbb
add
add
pop
pushl
push
mov
xchg
ret
test
rclb
decl
outsb
add
dec
dec
sti
popl
stc
nop
jb
add
add
stc
nop
jb
add
pop
and
push
mov
xchg
ret
add
xchg
add
lahf
mov
stc
nop
jb
push
add
stc
nop
jb
xchg
add
mov
push
push
mov
xchg
ret
aam
add
stc
nop
jb
mov
popa
add
nop
jb
add
push
add
stc
nop
jb
icebp
cmp
xlat
sti
xor
jle
test
or
add
nop
jb
cmp
lds
je
add
nop
jb
pop
add
xchg
jb
dec
pop
stc
nop
jb
add
jp
rolb
mov
add
add
nop
jb
add
lret
stc
nop
jb
stc
jo
inc
xchg
dec
mov
mov
push
mov
xchg
ret
lods
add
sbb
mov
xchg
ret
add
iret
add
popa
stc
nop
jb
push
mov
add
movzwl
stc
nop
jb
xor
add
and
nop
cld
jmp
xlat
add
xchg
dec
aam
xchg
or
test
nop
jb
add
cmp
jb
push
xchg
and
call
nop
cld
jmp
dec
add
xchg
jge
mov
xchg
ret
add
push
push
mov
xchg
ret
add
add
stc
nop
jb
lods
add
stc
nop
jb
flds
mov
cld
jmp
add
add
add
mov
add
nop
jb
add
icebp
cmp
cld
jmp
add
add
add
xchg
jns
inc
inc
add
nop
jb
iret
add
push
fildl
sti
nop
cld
jmp
cli
sbb
mov
and
sub
jmp
pop
and
xchg
jns
sbb
add
nop
cld
jmp
add
jbe
add
stc
nop
jb
add
mov
stc
nop
jb
dec
fldl
jb
bound
mov
nop
jb
add
movsl
mov
testl
leave
sbb
add
stc
nop
jb
mov
xchg
or
jae
nop
jb
xchg
add
shr
stc
nop
jb
add
xchg
jle
pop
cmp
nop
jb
add
dec
adc
mov
xchg
ret
add
sbb
sub
cld
jmp
add
iret
mov
leave
ret
stc
nop
jb
es
add
add
notl
inc
push
mov
xchg
ret
add
inc
add
stc
nop
jb
add
pop
nop
cld
jmp
add
xor
add
xor
cmpsb
jle
test
stc
stc
nop
jb
xchg
add
push
nop
cld
jmp
aam
jg
add
add
movsl
mov
nop
cld
jmp
lods
cli
mov
pop
push
push
mov
xchg
ret
add
dec
jns
lods
push
stc
nop
jb
pop
add
jp
test
push
mov
xchg
ret
out
test
test
nop
cld
jmp
xchg
add
bound
push
mov
xchg
ret
bound
inc
add
jnp
or
push
mov
xchg
ret
leave
add
push
add
stc
nop
jb
xchg
out
pop
push
mov
xchg
ret
add
add
xor
add
stc
nop
jb
add
jb
pop
mov
jbe
dec
mov
push
mov
xchg
ret
add
add
sub
inc
add
sbb
add
add
stc
nop
jb
add
test
jne
stc
nop
jb
add
pusha
add
sub
nop
jb
rcrb
add
mov
xchg
ret
sti
pop
xchg
icebp
jmp
stc
nop
jb
aam
out
jl
push
mov
xchg
ret
add
adc
fmuls
jmp
add
movsl
add
add
push
stc
nop
jb
iret
dec
add
adc
mov
xchg
ret
cmp
add
push
mov
xchg
ret
test
dec
nop
cld
jmp
jo
add
out
mov
stc
nop
jb
mov
add
push
xchg
cmpsl
xchg
xor
nop
jb
add
dec
jg
leave
mov
nop
cld
jmp
and
push
mov
aam
add
jg
add
inc
add
add
cmpsl
mov
jb
sti
add
icebp
add
pushf
push
stc
nop
jb
xchg
add
add
xchg
movl
push
push
add
xchg
pop
add
mov
push
stc
nop
jb
add
add
imul
nop
cld
jmp
inc
incb
bound
add
add
add
stc
nop
jb
add
add
outsb
pop
stc
nop
jb
add
add
add
inc
add
pop
push
stc
nop
jb
dec
push
add
stc
nop
jb
add
pop
xlat
aas
mov
push
mov
xchg
ret
add
jo
pop
les
stc
nop
jb
sbb
fstpl
nop
jb
sbb
xor
and
stc
nop
jb
cmp
lahf
add
popa
stc
nop
jb
add
test
daa
pop
push
stc
nop
jb
add
flds
outsb
rcrb
es
hlt
je
add
add
push
mov
xchg
ret
add
add
cmp
add
test
add
xor
decb
mov
adc
nop
jb
sbb
repnz
mov
test
stc
nop
jb
sbb
add
add
nop
jb
sbb
pusha
stc
nop
jb
add
add
dec
or
add
lahf
xor
add
cmp
nop
cld
jmp
add
jne
stc
nop
jb
test
add
bound
faddl
xchg
ret
out
add
add
push
stc
nop
jb
add
sub
add
stc
nop
jb
mov
popa
add
nop
jb
add
test
in
call
nop
cld
jmp
add
dec
cwtl
add
nop
cld
jmp
add
add
add
sar
nop
jb
mov
xor
mov
push
mov
xchg
ret
add
xchg
into
mov
stc
nop
jb
icebp
cmp
push
cli
push
cltd
xor
stc
nop
jb
add
jno
push
mov
stc
nop
jb
add
add
pop
popf
push
push
mov
xchg
ret
add
xchg
xchg
in
jne
stc
nop
jb
add
inc
add
push
imul
jb
and
mov
stc
nop
jb
add
test
jge
stc
nop
jb
sbb
or
sbbb
add
push
xchg
add
add
add
nop
jb
add
mov
mov
stc
nop
jb
shrb
mov
jne
stc
nop
jb
add
pop
xchg
stc
nop
jb
add
xchg
xchg
add
stc
nop
jb
incb
std
add
pusha
stc
nop
jb
add
iret
mov
dec
cmp
nop
jb
add
xlat
jp
mov
xchg
stos
lea
nop
cld
jmp
add
xchg
add
aam
filds
jb
add
or
movsl
test
stc
nop
jb
or
add
sub
or
add
dec
sub
addl
add
add
xchg
mov
add
add
add
mov
xchg
ret
sahf
sahf
jns
xor
ret
nop
cld
jmp
aam
xchg
add
push
push
mov
xchg
ret
add
push
add
mov
xchg
ret
add
test
or
mov
xchg
ret
mov
into
mov
stc
nop
jb
add
icebp
rolb
mov
push
mov
xchg
ret
add
inc
push
loop
push
mov
xchg
ret
stc
test
stc
nop
jb
add
add
sub
enter
xchg
ret
sbb
sar
mov
xchg
ret
cltd
add
stc
push
nop
cld
jmp
xor
add
ret
cmp
test
nop
jb
lahf
add
js
inc
and
stc
nop
jb
xchg
add
sbb
mov
mov
stc
nop
jb
add
add
mov
fisttps
add
stc
nop
jb
inc
and
cld
jmp
add
xchg
sbb
cmpl
orb
incl
std
cmp
mov
jb
xchg
add
test
ret
dec
mov
stc
nop
jb
lods
mov
mov
push
mov
xchg
ret
flds
add
stos
stc
nop
jb
and
add
mov
stc
nop
jb
adc
mov
jb
add
add
stc
nop
jb
sbb
add
mov
jb
add
sub
add
add
add
cli
push
stc
nop
jb
add
add
xchg
stc
add
push
mov
xchg
ret
add
add
movsb
push
mov
xchg
ret
add
add
dec
clc
dec
inc
stc
nop
jb
xchg
mov
nop
cld
jmp
jp
xlat
xlat
add
sub
jb
add
add
add
push
stc
nop
jb
or
add
add
lahf
gs
stc
nop
jb
add
pop
push
mov
xchg
ret
pop
jp
xchg
cmp
rep
stc
nop
jb
add
dec
add
stc
nop
jb
add
out
lahf
add
lret
jmp
add
add
pop
add
addb
mov
stc
nop
jb
and
sbb
nop
jb
pop
cltd
out
xlat
add
stc
nop
jb
add
xchg
mov
enter
addb
add
cltd
jno
popf
stc
nop
jb
add
movb
add
stc
nop
jb
lods
push
rcrb
add
stc
nop
jb
or
pop
dec
stc
sbb
mov
inc
add
add
xlat
iret
outsb
pop
push
mov
xchg
ret
add
lock
xor
stc
nop
jb
add
mov
sub
cmpb
add
add
cltd
add
add
nop
cld
jmp
mov
mov
push
mov
xchg
ret
cltd
bound
loop
loope
nop
jb
add
add
shl
nop
cld
jmp
pop
add
add
add
shr
stc
nop
jb
or
add
iret
jae
mov
push
mov
xchg
ret
aam
add
in
mov
stc
nop
jb
cli
xchg
jp
add
movzwl
push
mov
xchg
ret
lods
add
stc
nop
jb
add
mov
dec
pushl
stc
nop
jb
xchg
xchg
add
mov
nop
jb
add
and
insb
lods
push
mov
xchg
ret
mov
sbb
nop
jb
xchg
add
add
jo
subl
push
mov
xchg
ret
add
cld
jmp
add
icebp
add
adc
out
stc
nop
jb
add
nop
cld
jmp
stc
pop
add
xlat
xchg
testl
nop
cld
jmp
add
test
ret
mov
stc
nop
jb
add
cli
xchg
add
stc
nop
jb
add
and
mov
stc
nop
jb
add
add
cmp
addb
test
sbb
add
stc
nop
jb
jg
lods
pop
stc
nop
jb
pop
cmp
test
bound
nop
cld
jmp
sbb
add
sbb
nop
jb
bound
adc
outsl
mov
stc
nop
jb
stc
add
sbb
stc
nop
jb
flds
pusha
add
loope
cld
jmp
lods
add
flds
xor
movsl
std
call
test
inc
add
lea
cld
jmp
mov
mov
nop
cld
jmp
and
sti
xchg
add
inc
add
mov
push
jo
test
nop
cld
jmp
add
movsl
mov
add
add
nop
jb
jge
iret
or
push
or
jmp
iret
add
push
push
mov
xchg
ret
add
push
push
mov
xchg
ret
icebp
dec
sti
jge
add
nop
cld
jmp
cmp
add
push
mov
xchg
ret
add
aam
jle
mov
add
add
add
add
out
sub
sub
nop
jb
add
out
js
stc
nop
jb
add
add
pop
add
repnz
mov
xchg
ret
icebp
add
add
mov
push
mov
xchg
ret
pop
jo
add
and
push
mov
xchg
ret
bound
and
je
sub
std
inc
xchg
add
stc
nop
jb
mov
lret
push
mov
dec
xlat
add
add
mov
imul
call
stc
nop
jb
xchg
out
imulb
add
xchg
ret
add
add
call
in
add
add
std
xlat
add
add
call
stc
nop
jb
add
stc
nop
jb
add
aam
mov
stc
nop
jb
add
add
push
in
ret
stc
nop
jb
add
add
add
adc
add
add
mov
dec
adc
nop
jb
std
add
add
popa
add
nop
jb
add
test
add
xchg
pop
mov
nop
cld
jmp
add
stc
add
push
mov
xchg
ret
dec
xchg
add
nop
jb
jg
movsl
pop
add
mov
inc
nop
cld
jmp
sbb
pop
sbb
add
stc
nop
jb
sbb
mov
mov
xchg
ret
adc
pusha
push
mov
xchg
ret
add
cmp
stc
nop
jb
add
ror
push
mov
xchg
ret
test
add
and
nop
jb
add
add
add
je
stc
nop
jb
add
jp
dec
cmp
nop
jb
add
jge
in
popf
add
stc
nop
jb
add
add
jmp
nop
jb
movsl
xchg
add
add
call
nop
cld
jmp
cmp
mov
movzwl
stc
nop
jb
stc
add
and
mov
push
mov
xchg
ret
add
add
cld
jmp
mov
pop
stc
add
add
arpl
add
stc
nop
jb
xor
jp
sti
loopne
xor
ss
nop
jb
add
sbb
nop
jb
or
add
cmp
stc
nop
jb
add
push
nop
cld
jmp
add
add
mov
stc
nop
jb
pop
add
cli
iret
add
jae
add
stc
nop
jb
pop
add
nop
cld
jmp
add
add
mov
addr16
jg
cli
add
pop
inc
ja
shr
stc
nop
jb
dec
xchg
add
fldl
nop
jb
cltd
add
std
add
jg
add
push
push
mov
xchg
ret
sbb
gs
imul
std
jmp
jp
jge
jmp
adcb
add
inc
or
nop
jb
stc
add
mov
nop
cld
jmp
add
add
movsl
add
push
stc
nop
jb
fstps
add
add
dec
cmp
nop
jb
mov
addb
mov
stc
nop
jb
add
add
or
sbb
decl
bound
mov
stc
nop
jb
adc
nop
cld
jmp
add
mov
xchg
add
gs
nop
jb
cmp
test
mov
push
mov
xchg
ret
rolb
cltd
in
cmpl
nop
cld
jmp
add
mov
stc
nop
jb
add
add
ret
mov
xchg
ret
add
stos
push
mov
xchg
ret
iret
leave
add
add
cli
call
add
add
mov
stc
nop
jb
or
add
nop
cld
jmp
mov
mov
jb
jge
leave
push
sbb
push
push
mov
xchg
ret
xlat
xor
test
or
andb
adc
sub
cld
jmp
or
adc
add
stc
nop
jb
pop
add
add
stc
nop
jb
mov
and
mov
scas
or
stc
nop
jb
pop
jg
adc
stc
nop
jb
pop
stc
leave
xchg
sahf
sbb
insb
insb
add
nop
jb
mov
mov
adc
nop
jb
cli
jg
cltd
dec
push
mov
xchg
ret
leave
xlat
add
data16
cmpb
add
jp
add
add
push
mov
xchg
ret
xchg
add
mov
cld
jmp
aam
xchg
add
add
add
push
mov
xchg
ret
add
add
push
icebp
push
imull
nop
cld
jmp
xor
add
ds
stc
nop
jb
add
add
add
nop
cld
jmp
adc
jg
outsb
add
iret
imul
stc
nop
jb
mov
cmp
test
nop
jb
fldenv
add
xor
add
incl
sbb
adc
push
mov
xchg
ret
add
mov
add
std
add
add
arpl
cmp
aam
stc
nop
jb
add
xchg
pop
sahf
jne
stc
nop
jb
add
jle
mov
stc
nop
jb
add
les
nop
jb
add
sti
add
sub
stc
nop
jb
mov
add
push
push
mov
xchg
ret
add
lods
push
mov
xchg
ret
add
mov
stc
nop
jb
adc
add
stc
nop
jb
sbb
gs
stos
push
mov
xchg
ret
mov
inc
add
pop
stc
nop
jb
adc
xor
and
adc
stc
nop
jb
add
sahf
xchg
fbld
xor
add
stc
nop
jb
add
stc
nop
jb
sbb
push
cmp
jmp
jge
mov
mov
stc
nop
jb
add
leave
addr16
mov
stc
nop
jb
add
add
nop
jb
mov
dec
push
push
mov
xchg
ret
add
incb
lds
mov
nop
cld
jmp
add
sti
sti
sti
add
dec
call
and
mov
add
push
mov
xchg
ret
outsb
bound
xor
jb
stc
add
mov
push
mov
xchg
ret
test
jl
stc
nop
jb
pop
add
add
loopne
decl
stc
nop
jb
add
cltd
add
cmp
in
stc
nop
jb
add
mov
add
add
jmp
movsb
stc
nop
jb
xor
add
fldcw
and
nop
jb
stc
add
add
add
adc
push
push
ds
nop
cld
jmp
sbb
add
add
sbb
stos
repz
add
std
jp
add
sbb
mov
xchg
ret
cltd
add
add
jb
std
lahf
add
pop
add
add
sub
stc
nop
jb
add
icebp
dec
add
testl
jb
add
icebp
pop
add
sahf
jne
stc
nop
jb
pop
dec
lods
mov
push
mov
xchg
ret
add
adc
cmc
push
arpl
jmp
stc
nop
jb
outsb
add
cmp
jb
add
add
or
stc
nop
jb
add
sti
stc
nop
jb
add
pushl
push
mov
xchg
ret
and
push
stc
nop
jb
pop
fldenv
pop
add
popa
stc
nop
jb
jo
sahf
sbb
add
ret
add
add
movsl
add
add
cmp
push
mov
xchg
ret
add
add
mov
stc
nop
jb
add
add
push
stc
nop
jb
xchg
push
pop
sahf
add
fldcw
mov
add
add
add
push
clc
push
stc
nop
jb
add
add
sbb
push
repz
stc
nop
jb
inc
xchg
sbb
push
mov
xchg
ret
add
add
nop
cld
jmp
iret
jp
xchg
add
sub
nop
jb
pop
xchg
stc
lods
add
add
push
mov
xchg
ret
add
add
adc
loopne
xor
pop
call
stc
nop
jb
mov
mov
stc
nop
jb
pop
mov
repnz
nop
jb
add
mov
cli
movsl
gs
adc
cmp
inc
add
xchg
and
nop
cld
jmp
jo
add
xchg
rolb
mov
push
add
nop
cld
jmp
adc
leave
stc
nop
jb
sbb
xchg
cli
pop
cmp
dec
push
nop
cld
jmp
add
add
cmp
js
nop
cld
jmp
add
xchg
add
les
mov
stc
nop
jb
lods
push
lahf
pop
test
nop
cld
jmp
push
push
bound
sbb
xchg
pop
add
push
mov
xchg
ret
jp
cltd
add
nop
jb
dec
add
add
popf
push
mov
jp
cmpsb
add
jle
add
add
add
inc
add
nop
cld
jmp
flds
aam
mov
aam
and
push
mov
xchg
ret
add
es
add
pop
stc
nop
jb
add
mov
repz
push
stc
nop
jb
cltd
add
mov
add
adcb
incl
add
lods
xor
nop
cld
jmp
or
add
add
push
mov
xchg
ret
lahf
outsb
add
mov
stc
nop
jb
add
xor
stc
nop
jb
xor
add
xchg
mov
stc
nop
jb
xchg
add
icebp
stc
nop
jb
jg
add
iret
dec
xchg
xchg
js
jl
sbb
nop
jb
test
add
nop
cld
jmp
lods
lods
bound
xchg
mov
nop
jb
add
add
mov
xchg
ret
jg
add
pop
mov
stc
nop
jb
test
bound
std
sti
pop
push
mov
xchg
ret
stc
add
add
stos
stc
nop
jb
add
std
add
add
stc
nop
jb
dec
mov
cmc
dec
movzwl
stc
nop
jb
cli
mov
xchg
incb
xchg
out
inc
add
mov
cld
jmp
add
jg
lods
cmp
add
push
stc
nop
jb
mov
add
cld
pop
nop
cld
jmp
add
add
movb
add
stc
nop
jb
xchg
add
addb
hlt
dec
lea
nop
cld
jmp
push
outsb
stc
add
sbb
add
stc
nop
jb
jo
sub
nop
jb
mov
movsb
xor
add
nop
jb
add
test
push
stc
nop
jb
add
add
cld
jmp
mov
add
shr
stc
nop
jb
add
add
nop
jb
mov
sbb
jo
jmp
stc
nop
jb
add
test
jmp
and
sbb
test
stc
nop
jb
jo
xchg
stc
mov
nop
cld
jmp
incb
add
add
nop
cld
jmp
add
leave
fnstenv
push
push
mov
xchg
ret
add
xchg
jno
imul
xor
incl
sti
stc
and
add
mov
xchg
ret
gs
mov
xchg
ret
add
sub
stc
nop
jb
xor
mov
add
rcll
out
inc
add
add
add
ljmp
in
mov
jns
add
add
out
incl
aam
add
mov
push
mov
xchg
ret
or
xchg
lcall
nop
jb
jg
add
add
add
sub
stc
ljmp
add
inc
inc
pop
subl
nop
cld
jmp
mov
call
add
add
nop
jb
add
popa
add
nop
jb
add
add
push
loop
add
add
iret
mov
stc
nop
jb
add
mov
jp
adc
stc
nop
jb
sbb
mov
test
nop
jb
add
push
push
mov
xchg
ret
add
mov
sbbb
incl
add
add
stc
nop
jb
add
std
mov
xchg
shl
cmpsl
js
stc
nop
jb
add
xchg
mov
push
loopne
mov
xchg
ret
adc
add
loop
stc
nop
jb
sahf
sti
stc
nop
jb
jo
xlat
sub
jb
add
pop
gs
addb
fwait
add
stc
nop
jb
sbb
mov
and
push
mov
xchg
ret
fyl2x
cli
xchg
incl
inc
fiadds
xchg
ret
sahf
xchg
add
test
sar
nop
jb
adc
add
rclb
aaa
filds
xchg
ret
adc
push
stc
nop
jb
iret
add
cmp
mov
inc
add
add
push
add
add
stc
nop
jb
stc
cltd
adc
mov
pop
stc
nop
jb
out
mov
out
and
hlt
jmp
aam
inc
add
jg
std
aaa
fists
mov
xchg
ret
movsl
add
jns
addb
es
nop
cld
jmp
out
jmp
nop
cld
jmp
xchg
add
nop
jb
add
stc
sbb
add
xchg
ret
dec
dec
outsb
add
add
stc
nop
jb
add
or
stc
nop
jb
pop
add
movsb
stc
nop
jb
dec
gs
aam
je
and
push
mov
xchg
ret
xor
add
rep
stc
nop
jb
bound
test
bound
pop
dec
pop
stc
nop
jb
mov
rolb
xchg
sbb
jl
dec
sub
nop
jb
add
add
cld
jmp
out
adc
xchg
and
xchg
inc
add
aam
dec
cmp
nop
cld
jmp
add
mov
nop
jb
add
add
pop
push
mov
xchg
ret
add
xchg
stc
add
inc
in
push
mov
xchg
ret
pop
mov
jne
stc
nop
jb
add
mov
stc
nop
jb
movsl
add
push
mov
fsubrl
sbb
add
sti
cmp
sub
data16
mov
add
stc
nop
jb
mov
movb
ja
mov
nop
cld
jmp
add
add
inc
jp
test
cmpl
jb
add
lahf
pop
test
nop
cld
jmp
jge
flds
addb
and
push
mov
xchg
ret
xchg
out
addr16
je
stc
nop
jb
add
mov
stc
nop
jb
add
push
divb
mov
nop
jb
add
adc
es
push
mov
and
incl
arpl
adcb
rcrl
ss
mov
fcmovu
mov
sbb
mov
daa
mov
in
dec
mov
mov
dec
sub
push
push
popf
out
mov
pop
jmp
pop
sub
add
xlat
push
mov
and
add
mov
les
and
sub
ret
inc
add
addb
add
sbb
int3
inc
add
lcall
mov
pop
loopne
scas
add
push
and
sub
int
cmp
js
sub
int
stc
outsb
cmc
push
rolb
outsl
aas
mov
add
or
dec
inc
add
cmp
cmp
inc
add
iret
inc
add
cli
xchg
sbb
xlat
inc
sub
and
in
xchg
and
outsb
mov
arpl
sti
ja
rolb
aaa
pop
aam
test
add
xor
adc
and
add
xchg
cmp
aam
mov
test
cmp
sbb
add
add
out
roll
add
cld
cltd
test
jne
fs
test
cmp
mov
enter
pop
mov
call
fists
pop
adc
mov
subl
addr16
add
pusha
add
aas
ret
iret
aad
lods
xlat
fidivrs
add
mov
insl
push
add
jb
stos
ljmp
mov
inc
add
out
gs
in
lock
fisubrs
pushf
mov
inc
add
adc
lods
outsl
fdivs
xchg
cs
add
push
xchg
inc
push
shll
mov
push
or
roll
out
popa
popf
jbe
es
and
fcompl
xlat
addr16
sarl
adc
cmp
hlt
xchg
loop
sbb
pop
pop
sub
ret
and
cmp
push
testl
add
lock
add
loope
icebp
jbe
xchg
loop
ss
sub
aam
test
xlat
jmp
xor
push
call
lahf
push
fsubs
sbb
arpl
das
les
mov
push
pop
repnz
sbb
xchg
xchg
fidivl
sub
fists
push
adc
ret
stc
cld
lock
icebp
cmp
insb
sbb
mov
mov
and
addl
fimuls
add
imull
jl
pop
int3
icebp
jle
jnp
add
aas
negb
pop
fwait
mov
mov
add
les
inc
pop
xchg
xchg
or
cltd
sbb
ljmp
call
add
mov
mov
add
dec
cmp
adc
sbb
movb
add
mov
add
es
dec
cmp
pop
mov
int
add
clc
adc
pusha
add
into
lcall
xchg
lea
lret
test
or
cmp
pop
mov
data16
xchg
outsl
pavgb
push
sarl
xor
inc
add
cmp
out
lods
lods
push
pop
add
outsb
inc
add
add
ficoms
fmuls
push
mov
mov
and
add
fstpt
aam
mov
shrl
or
sub
inc
add
dec
xchg
cmpsl
clc
cmc
out
mov
push
es
or
inc
iret
aad
add
popf
pmaddwd
rcll
mov
cmp
jl
inc
add
push
ret
fnstcw
pop
mov
and
out
test
pop
jp
xor
adc
and
xchg
mov
call
jg
iret
arpl
mov
lret
cltd
jns
inc
add
pushf
or
insl
mov
aaa
and
jbe
sub
mov
cmc
add
insl
cmp
pop
pop
cmpsb
and
xchg
sub
or
pop
adc
inc
add
pusha
add
mov
pushf
js
xchg
jle
add
bound
pop
xor
mov
add
aad
xchg
mov
jl
xchg
and
add
fidivs
jmp
add
push
outsl
sub
fldl
test
inc
les
pushf
inc
add
inc
add
nop
add
cmpsb
xchg
adc
pop
sarb
movsb
or
jl
or
jecxz
adc
scas
mov
cmp
ret
pusha
add
add
pop
add
or
mov
xor
ss
lahf
dec
popf
jns
xchg
mov
stos
popf
xchg
jne
jbe
cmp
xchg
add
out
fisttpll
test
adc
mov
aaa
push
gs
cmp
xor
add
or
addb
sbb
fstps
cmp
pop
popa
xchg
xchg
dec
stos
loope
or
push
push
push
jmp
add
cs
add
mov
inc
add
add
mov
iret
stos
sbb
sbb
cmp
jle
add
mov
icebp
xchg
sub
push
add
add
inc
add
imul
scas
jns
pop
addr16
sarl
push
iret
mov
js
loope
in
add
push
repz
mov
cmp
repz
hlt
push
stos
sbb
xchg
inc
add
mov
and
faddl
dec
bound
adc
scas
pop
dec
or
xchg
mov
inc
add
or
outsb
adc
aaa
xor
bnd
das
int3
dec
int
add
insl
jmp
lcall
clc
mov
aaa
sub
int3
cmc
cmp
jg
xchg
test
fimull
es
mov
add
push
inc
mov
stos
sub
add
call
out
push
addr16
je
stos
xchg
pop
adc
inc
ror
mov
jp
ja
test
and
in
lock
pop
pop
xchg
mov
adc
inc
xor
mov
movsb
lcall
scas
mov
and
fstpt
push
gs
out
pop
or
fnsave
fisubl
aad
fbld
push
adc
pop
cmc
pop
sub
add
hlt
fldenv
or
pop
dec
mov
pop
push
scas
in
add
into
shl
cmc
js
and
out
mov
cmc
pop
jnp
dec
sbb
mov
dec
add
cli
mov
push
nop
cwtl
imul
loopne
dec
mov
dec
cmp
icebp
dec
jbe
jne
aad
and
cld
flds
js
inc
add
clc
mov
stos
pop
and
pop
in
sbb
push
ficompl
pop
mov
adc
ficoms
mov
test
rorl
jno,pt
push
data16
jle
aas
scas
mov
int3
shl
in
or
aad
in
mov
push
add
cmp
push
push
jle
cmpsl
rcl
mov
fisttpll
mov
sar
addl
sbb
push
adc
int
cmpsb
les
and
push
add
mov
out
cs
aas
mov
mov
sti
addb
clc
push
add
loopne
hlt
popf
push
xchg
cmpl
movsb
pop
xlat
mov
ret
push
cld
aas
call
push
bound
fwait
mov
inc
add
out
sahf
cmc
stc
out
jb
dec
xchg
fimull
addb
xor
faddl
fwait
cmp
pushf
cmp
xchg
cmp
pop
ret
jns
fstpt
leave
push
lods
aaa
push
pop
mov
mov
add
imul
mov
push
xor
mov
jg
mov
sti
pop
pop
xchg
sub
jp
fisttps
aaa
movsl
xor
sbb
mov
pop
mov
xor
mov
add
stos
dec
bound
xchg
addr16
loope
jne
xor
repz
mov
out
push
in
scas
inc
sub
xlat
jae
cld
stos
insl
xor
jp
addr16
rolb
mov
ret
adc
mov
aad
lods
dec
mov
int3
jmp
push
add
sub
inc
add
out
xor
dec
sbb
fmull
mov
andl
fnsave
xchg
xor
add
fstpl
inc
add
jecxz
movsb
hlt
fmuls
jbe
jo
xchg
push
and
fwait
mov
clc
addl
push
insb
mov
push
ficompl
cwtl
mov
add
gs
bnd
push
add
in
stos
mov
jb
lret
xchg
sbb
xchg
cltd
mov
jbe
mov
fistl
dec
lret
cmp
aad
add
inc
add
xor
fldcw
test
inc
jns
shlb
pop
out
adc
and
mov
add
pop
cmpsl
addb
jge
lret
add
in
sbb
mov
lods
or
jnp
inc
add
inc
xchg
and
mov
add
push
out
dec
je
sub
dec
cmp
inc
stos
mov
mov
add
insb
adc
add
add
movq
outsl
mov
aad
dec
sub
addr16
mov
sbb
jo
push
mulb
das
lret
enter
cmp
dec
dec
mov
xchg
addb
jno
add
xlat
in
inc
add
jno
mov
aaa
clc
out
ljmp
shlb
js
movsb
mov
hlt
mov
fs
sbb
dec
xor
ret
sbb
aas
test
add
in
roll
add
xor
pop
mov
in
lods
add
mov
sahf
roll
push
mov
rolb
movsb
int3
addb
test
jge
sbb
ror
xchg
dec
mov
sbb
cmpl
cwtl
mov
add
nop
je
mov
jg
mov
nop
das
movsl
dec
into
and
mov
cs
fadds
call
mov
add
jg
clc
bound
add
leave
dec
fwait
test
enter
dec
xlat
adc
mov
rol
add
inc
add
fsin
rolb
das
jge
mov
test
pop
clc
filds
sbb
lea
mov
pusha
add
sub
xor
adc
ficoms
shrb
mov
or
or
add
imul
pusha
add
inc
add
sbb
mov
add
add
insb
adc
into
inc
add
dec
and
xchg
jecxz
sbb
nop
mov
jg
inc
add
and
add
call
mov
mov
and
stos
add
dec
addb
insb
rcrl
add
mov
movsb
arpl
loopne
adc
scas
mov
push
std
lock
sarl
mov
push
imul
push
add
movb
jb
sub
mov
scas
inc
test
dec
loop
aas
fisubrl
jl
stos
fists
outsb
inc
add
xchg
sub
test
in
in
jb
pop
sbb
push
imul
lret
pop
imul
ffree
pop
daa
bnd
fimull
jbe
sub
movsl
je
sub
dec
add
sbb
cmc
addb
jne
mov
add
fiaddl
sub
mov
jmp
js
push
pop
sahf
pop
addr16
dec
test
add
adc
add
repz
adc
or
ljmp
jp
aam
mov
lock
jge
xchg
movsb
negl
cmp
int
movsl
in
pop
mov
jno
sub
cli
xor
jg
mov
stos
lock
lcall
mov
jb
jo
leave
fs
loope
sub
cmp
imul
inc
add
pop
adc
into
rcl
stos
mov
cwtl
adc
std
addb
pop
inc
add
xchg
adc
addl
std
and
addb
or
test
sbb
data16
fisubrs
push
sti
loopne
stos
jnp
ss
cmpsb
cli
xchg
pop
dec
std
jecxz
jae
cmpsl
mov
or
adc
cmc
jns
pop
jne
pushf
push
add
xor
enter
jg
push
mov
jne
jecxz
dec
adc
fucomi
mov
adc
mov
adc
inc
nop
or
in
vmovsd
aam
adc
sti
mov
lea
sbb
push
sub
int3
scas
movsl
xor
dec
dec
ljmp
rolb
hlt
cmp
cmc
addb
mov
fwait
push
mov
inc
mov
cmpsb
test
mov
cli
nop
sbb
adc
lea
add
test
out
es
movsb
rolb
add
mov
and
loop
push
fbld
shrl
jne
xorps
pop
xor
mov
xchg
jl
daa
les
nop
icebp
xchg
imul
xchg
test
inc
add
outsb
lret
fwait
pop
add
xor
and
xor
aas
in
jecxz
mov
add
push
in
int3
add
pop
scas
cmp
enter
lret
inc
add
add
cs
mov
push
lock
mov
push
push
add
out
scas
cmp
loope
or
inc
adc
inc
sti
lret
xchg
aad
sub
repz
cs
scas
adcl
sub
and
insb
adc
movsl
fs
movb
add
add
lahf
push
sub
test
lods
das
mov
jecxz
call
sub
add
add
add
sub
es
jle
jle
xchg
lods
cmovne
fildll
std
cmp
aaa
jae
or
scas
mov
lret
daa
mov
sbb
adc
jge
sbb
xchg
mov
mov
sti
clc
mov
aas
stc
add
scas
mov
jnp
xor
push
cld
mov
push
fcomps
loop
push
add
adc
fisubl
jo
imul
xchg
lods
push
es
jne
repnz
mov
clc
or
mov
pop
inc
add
mov
push
call
das
adc
cwtl
ss
mov
aad
xchg
mov
xchg
dec
or
mov
fildl
sbb
mov
inc
pop
xor
nop
cmpl
pop
movb
inc
add
xor
or
add
pop
loop
sti
sbb
gs
add
cmp
add
dec
movsb
inc
add
lret
je
sbb
xchg
mov
in
int3
jmp
fldcw
or
cs
lea
icebp
mov
cli
push
sub
cmpsl
jmp
xor
je
push
jns
in
cmpsb
mov
daa
lds
lret
clc
push
push
outsb
jp
lret
dec
pop
imul
pop
rorl
add
fldln2
jnp
and
shll
std
lods
mov
pop
enter
lahf
arpl
mov
mov
cli
lret
sub
add
add
ljmp
jmp
je
hlt
ret
ret
lret
xchg
movsb
repz
add
push
fdivrp
das
add
sbb
lea
adc
add
add
mov
test
gs
dec
dec
pop
lds
jb
les
jb
and
xor
mov
pop
mov
sub
mov
jle
dec
and
test
cmp
arpl
inc
adc
insb
shr
insb
push
add
cmp
and
add
mov
lahf
xchg
or
pusha
add
jle
jp
cmp
and
ret
int
mov
loope
popa
out
xchg
adc
int
movb
inc
add
mov
mov
out
push
mov
sbb
or
mov
jp
add
pop
je
dec
or
sub
jae
and
cmp
add
cmc
mov
sub
inc
insl
mov
and
add
shll
ret
and
xor
insb
xor
and
xchg
mov
nop
or
cmpsb
pop
and
add
add
outsb
scas
jb
cmp
xor
or
lea
sbb
sub
outsl
aaa
mov
in
sahf
sbbl
dec
cli
ja
cmpsb
jbe
dec
addr16
clc
mov
lods
shll
test
push
call
jb
push
add
mov
pop
lods
or
bound
dec
ficoms
jge
insl
adc
ret
ja
dec
pop
nop
or
inc
add
cmc
adc
insl
cmc
test
adc
and
sbb
das
push
ja
adc
add
repnz
cmpsb
or
jge
jbe
int3
cmp
call
aaa
clc
mov
addb
ficoms
dec
xchg
push
push
xchg
mov
xlat
imull
ss
cmp
push
repz
mov
add
sbb
int
lds
and
ds
mov
movsb
pusha
add
cmc
vorpd
lcall
cmp
jg
insl
mov
lahf
dec
or
and
add
xor
stos
das
dec
movb
add
mov
shlb
scas
sbb
test
push
ret
add
and
cwtl
lods
push
and
cltd
mull
add
outsl
push
lcall
jp
add
arpl
inc
jnp
aaa
in
rclb
pop
rclb
sub
incl
out
inc
sbb
pop
cs
inc
adc
fldcw
cs
daa
adc
or
jle
jl
mov
pop
mov
or
add
jp
add
mov
and
inc
add
aam
mov
xor
jmp
inc
pop
subl
jp
fists
sbb
in
add
jo
xchg
fcmovne
adc
cli
ret
fldt
in
pop
xlat
add
xor
cmpl
ljmp
add
mov
add
mov
add
lret
xorl
out
fidivl
mov
ljmp
bound
bound
mov
add
inc
pop
daa
and
cmpsb
jp
pop
mov
mov
pop
mov
xor
leave
stos
inc
add
sub
outsb
xchg
ss
add
jg
movsl
push
repz
cmpsl
inc
jg
rcr
pop
ljmp
jp
xor
xchg
add
pop
cli
aad
andl
sbb
cs
pop
push
notb
fcompl
sub
rorb
add
rorl
pop
aam
adc
dec
in
mov
or
stc
cs
or
cli
sub
in
adc
dec
es
popa
xchg
mov
add
xor
daa
into
test
movl
cld
ficoml
pop
scas
jo
pop
cmp
jg
xor
xchg
mov
mov
es
outsl
gs
addb
cmp
mov
pop
push
clc
cmpsl
dec
sub
pop
push
imul
cmp
pop
dec
and
jb
sahf
insl
mov
lcall
push
out
aam
push
push
add
add
dec
jg
mov
xor
add
pop
cltd
jne,pn
insb
jle
cmp
popf
mov
xchg
mov
shll
add
mov
scas
test
fnstsw
in
pop
icebp
lock
and
add
mov
addb
ja
dec
mov
je
cltd
mov
outsb
dec
incb
gs
jl
mov
dec
mov
sti
leave
leave
inc
push
cmpsb
das
sbb
and
cmpsl
mov
mov
push
jp
add
gs
cmc
cmp
push
test
mov
imul
movsb
dec
mov
mov
mov
adc
sbb
push
ret
add
rolb
xor
je
test
pop
out
fucompp
mov
and
mov
or
ss
cs
js
sbb
and
cmp
mov
add
jnp
out
add
pop
pop
shrb
cmpsl
outsl
mov
adc
sbb
ljmp
rorb
std
cwtl
lret
mov
fdivrl
mov
adc
rorb
add
out
xor
cmpsb
cltd
mov
and
pop
stc
les
pop
dec
pop
lds
loope
out
sti
pop
mov
mov
hlt
fwait
adc
xor
add
insb
data16
jns
gs
sbb
fnstcw
cli
mov
ret
mov
sbbl
add
jno
inc
add
sub
dec
mov
mov
ret
fmuls
and
add
es
mov
jae
xlat
cmp
ljmp
pop
into
dec
cld
push
push
ljmp
test
xor
in
fisubs
out
shlb
add
loop
sahf
mov
shr
sbb
cmc
cmp
add
leave
addr16
mov
add
cmp
mov
filds
popf
arpl
sarl
inc
mov
lret
popa
and
das
sub
adc
push
lahf
xchg
stos
sar
cltd
fadd
add
lods
and
stos
xor
test
sbb
in
xor
je
push
jb
or
movsl
movsb
pop
jecxz
les
mov
insl
insb
cmp
or
add
dec
lret
push
cltd
cmp
outsb
and
lahf
jnp
sub
cmp
lahf
in
lods
cmp
inc
add
aaa
cmpl
cmp
sbb
add
sarl
scas
cmp
aaa
jmp
mov
gs
dec
ja
cltd
dec
adc
sbb
cmp
pusha
add
xchg
dec
jecxz
bound
stc
jnp
jle
mov
jae
in
inc
addb
call
mov
std
sub
sbb
jl
pop
and
mov
mov
inc
add
xlat
sahf
ret
add
or
fs
xchg
push
add
cmp
jne
sbb
sub
mov
add
in
and
shlb
pusha
add
insb
cmp
into
or
test
int
mov
sbb
test
fs
es
fs
rorl
add
insb
outsb
xchg
xor
dec
fcompl
lret
test
xchg
and
insl
sahf
invlpg
push
mov
nop
xchg
xor
sub
xor
inc
add
and
cli
mov
aad
sub
pop
fistpll
xchg
mov
mov
ds
mov
or
xor
or
xchg
scas
push
insl
addr16
out
sbb
imul
and
adc
mov
ja
cltd
shll
fmul
mov
imul
dec
int3
mov
and
xchg
cmp
stos
inc
add
inc
inc
gs
mov
repnz
daa
push
fistpl
pop
and
inc
daa
pushf
cwtl
dec
pop
shlb
and
jb
adc
xor
fisubrl
fwait
pop
dec
sahf
mov
movsl
iret
pop
loop
push
mov
jmp
flds
nop
nop
dec
inc
add
xchg
cmp
or
cmp
xor
mov
icebp
jne
jbe
dec
pop
addl
xor
dec
fistpl
xlat
mov
stc
push
sbb
popf
mov
add
pop
sub
repz
rcr
popf
jae
cmp
cmp
and
in
std
popa
sbb
repz
or
mov
icebp
mov
cli
repz
test
clc
jecxz
add
or
xchg
mov
pop
and
ljmp
mov
pop
movb
cli
lahf
aaa
xchg
xor
test
jb
enter
push
push
mov
fs
add
push
mov
add
testl
repz
clc
dec
push
in
inc
xor
jp
or
add
scas
mov
cli
or
jns
out
and
cwtl
cmp
dec
sbb
cmp
push
shll
imul
add
imul
stos
mov
rolb
cwtl
fiaddl
jge
nop
cmpsl
imul
mov
sbb
lret
rclb
icebp
mov
add
jo
and
mov
sub
and
dec
push
and
sahf
mov
add
fldl
adcl
xchg
in
in
lret
add
add
scas
cmp
setl
in
xchg
cli
cmovl
push
pop
in
loop
test
stos
imul
xor
stc
mov
iret
bound
sbb
push
mov
scas
fisubrs
loopne
push
inc
mov
xchg
movsb
and
pusha
add
mov
jnp
scas
mov
or
jle
cs
sub
add
mov
rorb
or
push
push
push
add
psubusw
in
imul
pop
push
add
lahf
pushf
and
xchg
jp
mov
mov
or
and
add
mov
scas
fs
into
jns
cmp
adc
push
lds
push
add
pushf
clc
adc
cs
je
in
add
add
mov
lahf
push
jecxz
add
cmp
jno
adc
lret
test
inc
rcll
into
fsub
add
xchg
mov
mov
jg
mov
les
xchg
sub
add
cltd
cmp
aad
add
testb
addb
bound
dec
or
les
daa
xlat
rorb
dec
pop
ret
jnp
add
lcall
xor
movsl
addr16
add
lods
inc
clc
cmpsl
lcall
jo
adc
lock
andl
pusha
add
arpl
pop
enter
dec
popa
ret
push
xor
fcmovu
or
lret
mov
push
and
cmpsw
hlt
cmp
clc
xchg
mov
pop
es
push
cmc
lret
dec
mov
hlt
add
rolb
add
leave
adc
and
into
out
rolb
cwtl
fmul
in
ret
adcl
mov
aas
movb
and
in
int
xor
jp
push
push
sub
pop
xchg
es
scas
add
adc
outsl
das
or
ficomps
mov
xor
adc
cltd
stc
xor
mov
iret
cld
mov
add
add
aaa
cmp
fldenv
and
lahf
push
xor
fdivp
test
aas
divb
dec
cs
add
shrl
adc
popf
push
stos
movb
jo
pop
ja
and
dec
mov
jnp
repnz
pushl
add
mov
push
sub
mov
mov
xchg
in
cvtps2pd
clc
roll
cld
dec
clc
inc
add
movb
pop
pop
ret
sub
stos
aaa
dec
adc
sbb
std
mov
aam
push
out
test
mov
int3
es
ss
jl
rolb
sbb
add
cmp
jne
inc
add
cmp
sbb
push
lods
xchg
and
lcall
push
cwtl
test
mov
inc
js
lock
cmp
mov
add
sub
rolb
dec
roll
or
and
dec
cmp
into
jp
sbb
or
mov
dec
into
and
js
jge
dec
test
cmp
or
add
jb
aad
xor
add
jmp
push
arpl
psrad
mov
xchg
int3
pop
cmpsb
mov
ldmxcsr
std
movsl
jne
mov
fcoml
imull
mov
mov
xchg
rcrl
cmp
mov
inc
stos
xchg
aam
xchg
cmc
inc
add
jne
lock
repz
push
imul
mov
jmp
jmp
pop
add
sub
movsl
dec
pop
and
lds
dec
pop
insl
mov
cwtl
mov
roll
inc
out
test
cli
call
loop
add
jns
cltd
repz
mov
lret
mov
sub
loopne
mov
add
cmpsb
mov
push
jg
imul
fisttpll
fcmovu
fdivr
hlt
int3
ja
ret
and
aas
xchg
inc
add
scas
push
adc
inc
add
mov
add
cmp
lock
sub
aaa
lods
ficompl
mov
sub
jno
add
cmp
mov
bound
in
push
fxch
in
insl
into
xchg
mov
pop
push
mov
jp
ss
and
leave
xchg
movsl
push
or
push
mov
mov
scas
jg
xor
or
mov
inc
add
dec
fimull
mov
ret
jae
stc
mov
scas
mov
add
lods
push
repnz
shrl
adc
pop
out
outsb
dec
jg
add
mov
adc
jecxz
outsb
cmp
sti
aas
out
insl
lcall
add
and
arpl
inc
add
and
mov
push
js
test
bound
data16
inc
add
cmpsb
movsl
aaa
add
adc
mov
mov
mov
sbb
xchg
and
outsb
adc
push
push
mov
add
push
loopne
in
adc
out
outsb
cmp
leave
test
pop
ss
jbe
cmp
cli
clc
loop
xchg
dec
or
pop
addb
hlt
testl
sub
pop
lret
push
scas
dec
fwait
xchg
xor
inc
add
and
push
dec
ror
test
fistl
add
jae
sub
mov
cmc
les
jle
iret
call
xchg
jne
xchg
cmp
loope
dec
push
sub
popf
cltd
xchg
inc
jg
movsl
mov
push
push
clc
cmpsb
pop
shr
scas
mov
adc
dec
jl
outsl
inc
add
jns
pop
xor
xchg
nop
inc
hlt
enter
stos
mov
add
add
shl
out
out
fcomi
mov
cmp
mov
or
xchg
add
adc
jmp
imul
data16
mov
int3
push
mov
ret
pusha
add
repz
mov
pushf
inc
add
and
fadds
mov
mov
mov
mov
je
imul
pop
xlat
mov
and
jp
jae
lds
jo
js
test
or
std
scas
imull
out
ficoml
addr16
mov
jbe
dec
outsl
lds
fistps
pop
popf
pushf
lahf
pop
movsbl
aas
or
fdivrl
addb
cld
fbstp
test
out
inc
add
sbb
mov
add
dec
sub
jge
xor
outsl
daa
cmp
movb
scas
jnp
xor
aam
lods
dec
rorb
lret
sbb
loopne
shll
add
pop
or
dec
mov
mov
pop
in
dec
lds
cmp
add
mov
inc
hlt
loope
cli
or
into
popa
cmp
outsl
test
mov
lcall
cmpsb
dec
pop
outsb
repz
in
flds
sbb
ja
xchg
les
xchg
lret
inc
add
insl
int3
ja
sbb
movsl
adc
pushf
mov
dec
mov
je
xchg
or
cld
stos
xchg
out
mov
add
mulb
mov
xor
cld
push
in
jbe
xchg
in
add
dec
rcrl
test
addr16
rol
sahf
fwait
sahf
out
push
aaa
lds
gs
jl
inc
push
test
jbe
mov
add
arpl
icebp
lods
insl
push
jge
test
mov
add
sub
jo
rclb
mov
dec
sbb
mov
adc
mulb
pop
pop
mov
mov
add
add
movb
repz
in
sbb
in
inc
or
xlat
mov
test
cmp
mov
jmp
into
int3
cmpsb
leave
fistpl
and
add
ss
cs
daa
sbb
xor
add
add
ret
insl
leave
or
mov
fistl
or
xchg
xlat
mov
lock
xor
sub
mov
xchg
lea
add
and
adc
jmp
inc
add
mov
add
cmp
xchg
jge
add
xor
push
mov
lahf
xchg
xlat
std
idivl
xlat
movb
dec
pushf
cmp
dec
xchg
leave
xchg
movb
ret
add
ret
test
icebp
shl
into
gs
inc
add
and
add
lret
loope
repnz
scas
cli
lea
outsb
lsl
mov
dec
sarb
adc
dec
and
outsl
adc
sbb
sbb
sub
add
clc
roll
mov
lock
mov
add
push
pop
dec
push
mov
and
inc
add
cld
xchg
in
push
jne
or
mov
or
add
mov
lock
je
and
sarb
add
jmp
repz
lahf
test
xor
das
lahf
jl
out
test
jnp
push
imul
and
add
jg
scas
mov
or
cli
and
jno
aas
test
stc
xchg
mov
add
or
lret
je
mov
add
cld
jmp
mov
bnd
mov
gs
sbb
ret
cmpsl
mov
inc
adc
aam
sahf
sbb
inc
add
inc
xchg
repz
scas
nop
mov
inc
add
add
bound
or
add
int
and
jb
sbbl
sub
repz
xchg
notb
mov
in
cltd
xor
aaa
sub
addb
mov
add
add
mov
pop
shlb
pop
sub
mov
fimuls
and
pop
add
xchg
aas
outsb
popa
sbb
les
or
inc
mov
pushf
loop
inc
add
fdivr
mov
xor
mov
xor
dec
addr16
dec
clc
cwtl
mov
int3
and
repz
push
clc
add
call
push
aaa
cmp
bound
adc
mov
add
sbb
rolb
stos
adc
out
addb
pop
xchg
xchg
daa
pop
ja
rorl
mov
inc
add
push
add
lods
lcall
add
jb
mov
ss
pop
mov
mov
out
inc
add
xor
inc
add
cld
addb
mov
cmp
sub
stos
daa
ret
mov
sbbl
mov
jb
repz
mov
add
add
cmpsl
cmp
outsb
fbstp
bound
cmp
loop
addl
pop
leave
sub
pop
mov
lahf
rcll
push
pop
sbb
mov
test
nop
xchg
mov
mov
andl
mov
aad
cltd
cli
pop
mov
or
cmc
jne
dec
leave
stos
out
test
shlb
jmp
ljmp
imulb
add
add
add
int3
or
add
mov
insl
jecxz
mov
add
push
push
inc
add
sbb
push
cs
add
push
subl
add
cli
inc
push
fsubrs
jae
es
fisubs
lcall
cmpl
mulb
adc
stos
hlt
jmp
lret
ds
add
lret
jno
cmc
sti
or
shrl
add
adc
call
xor
jge
repnz
push
mov
movsb
sub
jle
jae
add
cwtl
js
and
jae
dec
lods
imul
mov
clc
jne
mov
pop
ss
dec
and
fdivrl
pusha
add
add
add
movb
add
mov
ds
ret
out
imul
rcrb
sti
into
xchg
outsl
popf
xchg
cmp
xchg
sbb
cli
in
loopne
fbld
call
add
cmpsb
mov
inc
add
mov
inc
add
frstor
dec
scas
pop
push
lcall
ja
test
cmp
or
stos
js
call
gs
repz
adc
pop
dec
xor
mov
andl
add
in
roll
mov
pop
dec
out
js
inc
test
lods
jmp
fs
add
aas
cmpsl
mov
jnp
sahf
in
add
aad
lods
fisttpll
sub
and
clc
xor
and
xlat
mov
imul
adc
push
addb
add
fwait
push
add
xchg
mov
int3
xor
in
dec
sbb
es
jnp
add
mov
add
dec
xor
xchg
std
add
lret
shl
lods
sub
ja
in
stc
inc
adc
into
mov
lcall
out
dec
pushf
mov
mov
cli
hlt
xor
jb
add
dec
inc
xor
jno
je
divb
ret
add
lahf
xor
cmp
jp
fistps
sbb
popf
enter
lcall
shrb
js
add
lds
int3
imul
push
jno
cmp
mov
jns
lods
dec
pop
test
test
add
stos
jl
mov
push
push
mov
cmc
mov
add
xchg
push
add
aad
stos
xor
hlt
int
idivb
je,pt
inc
add
add
push
or
jne
loope
pop
arpl
cltd
mov
pushl
lock
jp
sub
out
mov
rep
ja
add
pop
jl
lds
popf
mov
add
gs
ss
xor
cmpsb
fprem1
dec
jne
mov
xchg
mov
mov
push
scas
inc
add
xor
adc
and
addr16
fbstp
ficoms
jge
xor
add
pop
xchg
hlt
cli
je
sub
sub
out
xchg
cmp
dec
mov
sub
popl
lret
jmp
mov
add
add
scas
addb
xchg
xchg
xchg
push
sbb
mov
add
mov
xchg
stc
mov
scas
pop
lret
jl
sub
push
sub
fs
insl
lret
fwait
pusha
add
push
and
xor
add
push
popa
test
mov
mov
inc
add
popa
xor
add
roll
mov
repnz
adc
sbb
in
clc
shll
jge
sbb
pushf
and
add
pop
insb
jge
mov
cmp
or
addb
lods
cwtl
aam
inc
add
jmp
mov
aas
fsubl
in
sarb
outsb
test
mov
sbb
sti
movsb
xchg
addb
jecxz
mov
and
push
mov
pop
sbb
add
or
insb
push
xlat
dec
lret
jle
xchg
call
aad
pusha
add
outsb
imul
ja
cmp
inc
add
aaa
sub
inc
add
add
mov
or
testb
push
xor
pop
ror
sbb
insb
nop
or
daa
jge
scas
pop
jg,pt
mov
jae
mov
bnd
lea
js
pop
ret
mov
int
add
and
xchg
pop
das
dec
shlb
popa
int
inc
lea
and
imul
xchg
mov
pop
adc
xor
fiaddl
jno
daa
xchg
gs
add
out
adc
addb
push
ljmp
repnz
jge
push
jno
add
cmp
mov
rclb
xchg
pop
das
popf
jns,pt
sahf
inc
add
dec
leave
and
and
loopne
xchg
aam
aad
dec
lret
mov
add
add
out
jae
mov
xchg
add
and
lods
sahf
arpl
ficomps
push
lock
push
in
pop
das
sub
cmpsb
sbb
in
inc
add
cmp
addb
adc
loopne
sti
fs
aas
jge
sub
test
add
adc
nop
div
into
sub
popf
sub
push
stos
lea
cmp
addl
outsl
sbb
lcall
xchg
push
fldenv
ret
mov
arpl
lcall
lea
mov
jno
dec
out
cmp
mov
push
std
fsub
call
add
repnz
add
sbb
cwtl
cwtl
in
push
or
mov
mov
cmc
xchg
movb
or
jge
inc
add
cs
leave
xchg
sbb
movsl
xchg
jb
xchg
add
add
cltd
pop
and
fildl
in
pop
int
mov
jg
or
addb
adc
lret
or
cli
addr16
jle
sbb
iret
ja
and
or
ljmp
es
push
sub
pop
shrb
sbb
stos
es
iret
or
jne
dec
pop
dec
sbb
adc
xchg
and
repz
scas
push
add
iret
inc
faddl
cmc
mov
lahf
lock
jge
xor
xor
inc
add
fstps
adc
mov
scas
out
push
movsb
aam
add
rolb
movsl
daa
dec
and
mov
or
xchg
pop
adc
rcl
sub
out
pop
lcall
add
out
gs
enter
or
cmp
add
popf
mov
pusha
add
push
loopne
xchg
sbb
aas
xor
rolb
jne
fnsave
dec
and
fsubs
stos
lcall
mov
mov
in
sbb
and
add
leave
push
lret
mov
mov
outsb
cmc
addb
test
je
arpl
mov
mov
hlt
cmp
push
add
test
and
inc
add
jno
jne
xor
pop
leave
adc
mov
inc
aas
jbe
mull
loopne
dec
sahf
jmp
pop
mov
pop
cmp
add
adc
inc
add
sub
les
mov
sub
inc
cmp
cmp
std
insb
pushf
sub
ret
mov
inc
add
push
jge
push
mov
pop
jae
mov
movsb
mov
sbb
mov
sub
jp
mov
dec
inc
add
insb
lret
jg
jmp
bound
push
test
xchg
pop
xchg
fcmovnu
xor
addb
sbb
sahf
inc
add
sbb
cmp
dec
rolb
scas
cmp
jg
mov
gs
mov
sub
and
and
inc
jmp
in
push
aas
sbb
into
dec
jnp
insl
jle
xlat
jp
fs
xchg
hlt
test
in
cmp
inc
add
bound
jmp
xor
xchg
and
pop
addb
add
mov
xchg
pop
jle
lea
inc
add
loop
decl
movsb
xlat
lcall
scas
cmp
out
enter
pop
cmp
cmp
arpl
popa
inc
add
and
cld
stos
dec
popa
xchg
icebp
test
jb
sahf
sti
push
cmpsb
sub
jge
pop
xor
clc
xor
xchg
imul
call
lret
shll
movsb
mov
cmp
xchg
fisubs
add
jecxz
xchg
add
dec
sub
mov
test
push
in
sarl
and
outsl
push
rolb
mov
pop
jnp
add
mov
faddl
xor
add
in
loopne
or
je
repnz
cwtl
lea
test
lods
jb
add
sbb
pop
outsl
sahf
pop
cmp
mov
aas
neg
jle
mov
push
lods
dec
in
xchg
pop
int3
fwait
push
aaa
jnp
pushf
xor
mov
pop
enter
push
sarl
imul
push
scas
fwait
inc
lods
lods
cmp
sub
cmp
fs
pop
adc
mov
jno
mov
lahf
js
push
jo
mov
hlt
gs
cli
jg
sahf
xchg
cld
test
push
cmp
pop
jmp
push
lds
ror
repz
push
jns
fisttpl
xchg
movsb
in
push
jp
or
adc
mov
lret
mov
pop
push
inc
xor
insl
xor
mov
dec
stos
pop
outsb
and
filds
add
pop
fcoms
xor
out
or
and
add
inc
jns
mov
lahf
xor
push
pop
fistpl
fwait
mov
jno
je
ret
mov
inc
xchg
addr16
icebp
sub
cmp
stos
in
add
adc
adc
rorl
lock
jge
add
loop
inc
add
push
ljmp
leave
push
or
sub
dec
fwait
fs
add
mov
push
scas
imul
sub
and
imul
ss
mov
push
add
cltd
push
cltd
pop
cld
push
add
push
adc
js
lock
imul
lds
xor
adc
pusha
add
mov
test
push
icebp
dec
xor
cli
sub
sbb
jnp
test
or
inc
add
popf
cmc
repz
pop
movsl
scas
push
cltd
add
mov
mov
jno
es
add
ret
mov
add
cmp
mov
sbb
pop
pop
xor
rcr
popa
xor
jp
lds
adc
stc
scas
lea
xor
xchg
sti
ret
lods
inc
jbe
mov
push
add
inc
add
aam
pop
adc
inc
add
mull
lock
aam
jbe
mov
int3
iret
into
lds
mov
jl
aas
popa
sbb
clc
adc
push
movsb
lods
mov
and
add
mov
add
or
lret
add
fwait
mov
adc
testb
add
mov
enter
or
adc
mov
inc
sbb
lahf
add
push
lcall
loope
movsl
lcall
pusha
add
xchg
icebp
int
add
loopne
movb
sub
add
ret
sahf
call
aas
jbe
sbb
jnp
fistl
gs
subl
mov
and
sbb
cmc
ja
daa
jno
in
xor
add
jns
fcoms
cwtl
jo
call
out
out
xchg
cmpsl
fwait
cmp
lahf
iret
mov
lods
cmpsb
rclb
jb
adc
call
repz
movb
sub
mov
les
gs
outsl
movsl
inc
add
mov
dec
sti
sbb
jns
add
mov
add
mov
pop
lea
dec
jno
popf
lcall
fwait
pusha
add
scas
add
push
outsl
mov
xchg
and
mov
mov
cmpsl
push
fnstcw
stos
loop
add
enter
rorl
mov
sbb
testl
add
lea
mov
dec
in
add
push
popf
and
insb
sbb
cltd
pop
outsl
pop
xchg
adc
inc
push
mov
xchg
ret
add
mov
push
add
xchg
loop
add
add
mov
xchg
test
fldcw
into
icebp
jne
xor
fdivs
add
dec
out
add
dec
dec
xchg
inc
add
shrl
cwtl
inc
add
aaa
mov
xchg
inc
addr16
add
stos
ret
ss
sub
jne
add
jle
xchg
adc
addb
movsb
adc
add
cli
js
cmp
test
add
fbld
xor
dec
popf
jno
mov
inc
add
addb
int3
add
push
mov
or
push
sub
mov
ficompl
push
je
pop
rolb
je
xlat
sbb
or
add
popf
adc
push
mov
push
fwait
inc
lret
sub
jecxz
cltd
cmpsb
mov
dec
or
test
adc
movsl
jno
mov
cmp
lods
sbb
gs
add
xlat
or
es
xor
out
jmp
int3
mov
add
pop
sahf
repnz
loopne
clc
mov
sbb
insl
fwait
xchg
cmp
xchg
leave
push
mov
aaa
sub
inc
inc
add
sub
ljmp
sarb
out
pop
or
push
jne
pop
inc
add
flds
adc
xchg
push
lock
pop
or
aam
popf
bound
mov
ja
xchg
jbe
arpl
cmc
test
das
movb
sarb
jno
in
push
js
mov
dec
mov
and
das
jmp
add
jp
lret
insb
mov
mov
mov
cld
lods
loop
pop
xor
je
sbb
out
xchg
mov
or
shufps
jno
push
enter
adc
pop
pop
and
xchg
cltd
lods
mov
fistpll
inc
add
add
jno
mov
outsl
stos
dec
jl
jbe
mov
add
test
fldl
adc
test
mov
add
movsl
mov
inc
jle
outsl
dec
movsl
ds
cmp
dec
dec
jb
inc
add
lcall
les
pop
call
jnp
ficoms
stc
cmpsl
rorl
mov
jle
mov
jg
stos
lods
jbe
ret
sub
mov
add
ret
or
adc
mov
or
test
mov
jmp
daa
call
add
add
or
adc
ja
jmp
inc
add
mov
push
iret
push
add
jmp
add
in
sbb
lahf
cwtl
xor
enter
lcall
add
push
test
and
add
xor
xchg
in
fwait
mov
sub
lock
lds
fidivl
mov
xor
pusha
add
aad
push
and
es
ds
test
push
and
cltd
adc
fs
pop
call
pushf
sbb
add
xchg
rcll
add
add
add
lahf
and
movb
mov
jl
lods
mov
add
adc
pusha
add
mov
pop
test
outsl
jns
push
mov
mov
mov
sahf
addr16
jp
add
sbb
mov
fs
daa
jg
and
leave
xchg
mov
mov
neg
in
and
jns
mov
ret
sbb
gs
add
jmp
jo
add
fwait
adc
add
add
sbb
or
xchg
mov
ds
fnstenv
loope
nop
shrl
mov
xor
imull
xchg
sti
rolb
adc
in
push
jnp
add
add
imul
xchg
add
push
sbb
popl
mov
xlat
popa
call
outsb
out
add
or
mov
sub
mov
dec
sarl
or
call
cmp
add
leave
fidivl
mov
sub
xchg
rolb
insl
inc
in
fcoml
int3
mov
adc
mov
inc
add
add
sbb
fistpl
lcall
sahf
notl
add
cwtl
dec
loope
rolb
aaa
movsl
sti
sti
leave
stos
int
dec
stos
sub
pop
hlt
test
cmpsb
rorl
pop
loope
add
add
push
jns
add
pop
pop
or
sub
ror
mov
sub
aam
lock
inc
add
or
push
dec
xchg
and
cmp
mov
lods
push
fdivl
xor
std
add
jb
and
pop
out
popl
jne
mov
leave
push
lahf
adc
cmp
dec
scas
jp
in
push
stc
test
sub
stos
push
ds
mov
decl
lcall
in
fbstp
addr16
lret
jmp
jb
jmp
hlt
cmp
jl
fwait
mov
push
push
xchg
mov
mov
fmulp
test
jbe
lahf
cmp
jl
inc
add
add
call
add
add
push
xchg
test
in
not
xchg
cmp
mov
cmpsl
dec
lock
aam
sbb
xchg
and
or
mov
iret
rorl
and
loop
mov
movb
js
fucom
mov
pop
pop
fs
pop
lret
repz
sbb
aaa
jb
outsb
push
mov
scas
pop
test
psadbw
lret
imul
lret
fisttpl
sbb
pusha
add
gs
test
sbb
and
mov
sbb
adc
pop
jmp
mov
outsl
mulb
mov
mov
call
xchg
cmp
add
je
daa
in
ds
adc
and
adc
sbb
pop
inc
sahf
sbb
addb
dec
popf
popa
rcrl
or
add
das
push
add
subl
push
sahf
movsbl
jg
add
mov
nop
mov
mov
aad
adc
mov
imul
sti
push
mov
stc
dec
aas
aad
in
push
inc
aaa
pusha
add
int
and
jbe
add
pop
cld
les
and
outsb
rcll
addl
xlat
pop
lods
faddl
call
mov
jge
jne
push
pop
sbb
iret
aas
icebp
lcall
dec
and
pop
addb
stos
sbb
cmp
inc
stos
call
out
les
adc
and
cmp
cltd
outsl
ja
stos
mov
insb
icebp
scas
ds
sbbl
test
mov
ja
sub
jl
pushf
fmull
xchg
sbb
push
mov
xor
adc
sub
mov
lock
adc
in
push
je
jge
int3
icebp
aad
dec
dec
daa
push
jbe
out
jl
stc
mov
loope
bound
inc
fs
and
aas
cmp
popf
lcall
cmpsb
jo
cli
lahf
mov
jns
xor
test
inc
add
aas
add
icebp
pop
mov
test
jno
imul
pop
push
mov
cmc
sar
push
sub
imul
clc
mov
test
mov
es
inc
push
pop
in
cmp
outsl
cwtl
call
or
imul
jl
add
mov
adc
xchg
movd
fcomps
or
js
pop
mov
pop
mov
test
scas
mov
loopne
fwait
push
dec
jb
cmp
push
cmp
into
xchg
add
add
out
cs
add
addl
add
jo
rorl
add
arpl
cwtl
add
xchg
pop
jmp
sub
adc
cli
mov
test
int3
out
inc
add
dec
pop
cmc
mov
aas
fldt
cmp
add
push
imul
xchg
xchg
push
or
movb
in
xchg
jae
das
cwtl
lods
loopne
sbb
gs
test
clc
jae
dec
jmp
mov
out
fdivs
lods
sahf
stos
push
mov
or
sub
addb
sbb
mov
dec
cmp
dec
push
mov
xor
xchg
cmp
rolb
hlt
xchg
rolb
xor
fists
imul
test
adc
inc
movsb
pop
adc
rolb
add
aaa
jno
scas
testl
rorb
iret
cs
data16
and
pop
mov
lods
imul
daa
seto
mov
mov
inc
add
fcoml
call
push
imul
ret
hlt
hlt
mov
dec
jns
sbb
pop
pop
inc
push
mov
ret
and
lahf
out
mov
cmp
mov
iret
adc
stc
pop
scas
adc
adc
insl
pop
cmpsb
pushl
xor
ret
arpl
cmp
shl
arpl
push
fs
jle
jnp
mov
xor
rolb
sub
push
add
xor
mov
sbb
dec
adc
add
call
add
imul
and
jmp
dec
xchg
sub
lret
adc
push
add
sbb
add
ds
lret
sti
outsb
out
data16
mov
scas
and
call
dec
dec
aaa
popa
movsb
stos
fsubl
push
dec
mov
mov
sahf
insb
pusha
add
pusha
add
push
add
movsb
outsl
sbb
insl
push
add
wbinvd
add
xchg
sub
cld
lret
js
push
mov
add
cwtl
xor
mov
mov
dec
aad
adc
jge
sub
cmp
popf
daa
addb
inc
loop
push
xor
fnstsw
push
xor
adc
bound
sub
mov
jp
xchg
test
push
test
push
inc
pusha
add
test
sti
inc
add
jbe
dec
adc
jecxz
jnp
add
mov
and
add
les
dec
or
jae
ret
mov
decb
lea
pushf
ljmp
pop
cltd
stos
jmp
sbb
pop
in
mov
xchg
lds
hlt
fwait
xchg
and
jmp
out
jns
jge
hlt
in
xchg
pop
stos
es
repz
insl
cmp
adc
dec
mov
pop
aaa
pushf
mov
pop
cmpsl
lret
jnp
cmpsb
or
push
push
rorl
je
push
xchg
sbb
lods
jno
push
sbb
punpcklbw
nop
jnp
xchg
dec
rolb
lea
pop
test
ss
jmp
bound
les
push
mov
dec
or
dec
je
add
mov
in
pop
jg
insb
push
push
in
bound
cmp
inc
mov
lcall
cmp
mov
cmp
lcall
idivb
out
sub
orl
cmp
bound
dec
fwait
xchg
push
ljmp
jmp
pusha
add
in
lods
fidivrs
mov
sub
push
nop
mov
testb
int3
mov
mov
inc
add
or
add
add
push
fldenv
pop
xor
das
mov
push
icebp
pop
mov
xor
adc
test
ljmp
xor
cmpsl
addb
xchg
or
push
pop
inc
hlt
pop
mov
push
sub
loop
scas
add
lea
add
mov
sub
addb
mov
jp
or
mov
dec
sbb
dec
cmp
jecxz
inc
adc
add
and
rcrl
add
and
fisttps
outsb
pop
std
jp
insb
mov
pop
and
add
add
mov
iret
and
mov
dec
nop
xchg
std
das
mov
or
pop
push
add
mov
fildl
add
out
pop
aas
sub
les
push
adc
push
add
pushf
push
mov
stc
mov
enter
movsb
pop
jnp
addb
stc
in
imul
cmp
mov
aaa
pusha
add
add
add
jp
lret
lea
dec
sub
push
movb
xor
pusha
add
xor
fstp
in
mov
adc
xor
addb
xchg
rolb
jno
lods
push
or
das
les
repnz
xor
movsl
fisubs
add
arpl
mov
add
addb
aam
and
sub
dec
pop
lods
mov
and
repnz
add
inc
pop
ja
mov
pop
leave
aas
and
mov
inc
jp
xlat
pushf
dec
fsubl
push
outsb
leave
xchg
fisubs
mov
add
movsl
inc
mov
ss
in
add
imul
add
into
xchg
mov
add
mov
xor
mov
add
lods
pop
fisttpl
repz
xor
aaa
or
cltd
mov
lods
mov
cli
dec
movsb
push
daa
xchg
mov
adc
addr16
or
sarb
pop
lock
pop
dec
jno
jp
adc
out
jmp
fistpll
cli
mov
jns
int3
pop
fnsave
insl
dec
jne
xchg
jmp
lahf
inc
add
lods
cmpsb
iret
mov
testb
rolb
dec
push
and
decl
add
add
add
add
push
aad
dec
les
pop
inc
add
fisubrs
cmpsb
pop
push
call
mov
jecxz
cmpsb
addb
test
mov
or
mov
pop
xor
mov
add
call
adc
popf
jnp
pop
aad
xchg
dec
pusha
add
out
pop
push
xor
std
outsb
outsl
iret
std
mov
fistpll
rolb
adc
sbb
or
testb
shll
aam
and
push
test
stc
pop
sbb
mov
loop
jge
cmpsb
mov
loop
cmp
and
and
cs
add
mov
int
jge
dec
sub
pop
in
xlat
pop
add
mov
dec
in
gs
and
test
sbb
add
sbb
or
cmc
and
fnop
xor
clc
sti
xchg
cmpsb
mov
lock
bound
les
addb
iret
xor
sub
xor
std
jl
movl
icebp
in
nop
inc
push
adc
sub
pop
mov
mov
std
inc
mov
lods
mov
notl
pop
in
fld
add
push
add
stc
mov
lret
push
out
int3
hlt
into
insl
loopne
movsl
jo
jg
addb
ficoml
xor
adc
aas
dec
push
add
stos
push
add
insb
aaa
popf
call
push
or
mov
lock
out
dec
insl
loopne
sahf
pop
hlt
aad
addb
jp
js
imul
push
jmp
icebp
push
ja
jg
xchg
icebp
jbe
xor
dec
in
cmp
xor
sub
aaa
fs
in
scas
cmp
mov
mov
and
inc
add
dec
lret
setp
mov
call
xor
je
mov
add
movsl
jge
icebp
sub
es
push
add
movb
mov
mov
mov
mov
mov
pushf
mov
add
test
xchg
fildll
test
lahf
mov
cmc
cmp
int
jbe
add
and
mov
sub
xor
push
hlt
jmp
fucomip
mov
out
add
and
sbb
xchg
pushf
icebp
adc
mov
inc
add
sub
pop
test
nop
filds
add
add
hlt
inc
add
mov
add
add
add
lods
jo
movsb
mov
sub
pop
imul
push
int
or
dec
bsf
add
inc
mov
mov
mov
adc
imul
fstl
out
mov
dec
xor
or
push
lods
mov
idiv
sbb
outsb
mov
xor
aaa
mov
jl
lods
push
xor
inc
and
outsb
mov
rcl
cs
jbe
lahf
add
inc
dec
pop
jle
jb
popa
jae
mov
lds
mov
add
push
repz
jb
sbb
push
rolb
push
add
push
or
daa
add
enter
daa
push
cmpsl
jp
stos
negl
push
add
sub
xor
cmp
les
faddl
add
fwait
push
jnp
jg
mov
rolb
xor
pushl
add
pop
add
ljmp
xor
mov
sahf
je
fsubr
cld
icebp
cli
jns
add
pop
mov
std
mov
subl
loope
cmp
loop
aam
fwait
movsl
mov
cmc
popf
mov
mov
int
out
out
xchg
das
cmp
xor
sbb
inc
xor
sub
stos
mov
out
fs
inc
add
ret
stos
inc
push
cmp
ljmp
add
dec
xor
inc
mov
jbe
cmp
out
mov
mov
and
repz
dec
adc
dec
jb
jo
popf
sub
mov
pusha
add
mov
mov
rcrl
jno
fisttps
adc
pop
ljmp
pop
fiaddl
jmp
adc
add
xchg
jns
xchg
stos
dec
and
mov
mov
mov
fiaddl
adc
xchg
xlat
loop
addr16
addb
cmp
and
add
subl
jge
sbb
pusha
add
mov
mov
mov
dec
dec
mov
daa
add
pop
push
add
push
lret
mov
pushf
pop
sbb
gs
jno
jne
lea
mov
test
shll
dec
or
xlat
adc
push
cs
fisttpll
rolb
aad
fldcw
inc
add
out
dec
inc
add
xchg
lahf
sbb
fmuls
int
mov
repz
rcrb
xor
cltd
inc
mov
add
sbb
sbb
and
add
pop
sahf
adc
push
and
mov
incb
mov
add
xor
inc
sahf
mov
mov
push
push
ja
cmp
add
hlt
jge
fdivr
mov
adc
adc
cmp
out
sbb
cltd
cli
sti
jne
add
jl
pop
loopne
dec
fisubl
lods
cmp
sbb
dec
testl
sub
and
daa
mov
mov
outsb
mov
fs
lret
hlt
stos
push
add
fwait
xrelease
in
xchg
and
xchg
test
idiv
sti
mov
mov
outsl
insb
scas
xlat
insl
push
add
sbb
sub
inc
add
sbbl
in
mov
das
test
push
cmc
add
mov
cmp
xchg
mov
xchg
scas
out
mov
into
xchg
mov
xor
daa
sti
xor
sbb
jp
inc
les
jne
push
xchg
and
shl
imul
insb
aas
sti
or
add
test
push
rorl
mov
daa
outsb
or
and
jle
mov
cwtl
out
repz
cmp
bswap
imul
ja
sahf
pusha
add
pop
dec
inc
add
hlt
add
xor
loope
mov
pop
xchg
add
inc
add
cmp
pop
in
out
test
test
int3
in
aas
sub
out
dec
stos
les
cli
sub
scas
aas
cli
js
or
in
and
addb
adc
fimull
mov
mov
loop
push
add
mov
push
pop
lret
or
nop
push
outsl
ja
or
add
xchg
push
pop
pop
fstl
and
add
or
into
push
lea
faddl
xor
adc
add
add
add
shll
lods
mov
push
add
test
adc
cld
push
add
xlat
adc
jbe
pop
outsb
jo
popf
inc
add
or
das
mov
jbe
rolb
xchg
pop
ret
sbb
or
scas
xchg
pop
xchg
mov
pop
out
dec
ret
inc
add
icebp
subl
in
outsl
insl
add
fists
adc
mov
mov
add
sub
repnz
rolb
int3
lret
imul
inc
jo
adc
jge
cmp
scas
sbb
lods
int
jle
hlt
push
pop
push
ja
add
out
int3
jo
pop
sub
ljmp
add
jmp
addr16
xchg
xlat
lahf
or
sti
in
ja
pop
sub
cmp
add
jecxz
push
jb
dec
jle
mov
add
daa
cmp
xor
add
mov
xchg
inc
fsubrp
mov
das
add
int
lds
aad
cli
xlat
rolb
sub
mov
add
shlb
aam
mov
aaa
imul
pushf
lods
aad
or
inc
jmp
imul
push
decb
mov
add
cmp
jb
rorl
fmull
fidivs
mov
jle
bound
gs
and
add
out
test
cmp
jae
mov
rolb
mov
jbe
mov
pop
in
filds
pop
lods
cli
inc
add
rorb
add
outsb
insl
fsub
jo
rolb
mov
loop
or
pop
mov
loop
or
sbb
push
cli
mov
ja
fstpl
add
test
cld
inc
add
int3
scas
mov
sbb
add
or
iret
cld
je
out
inc
add
aad
pop
sbb
test
roll
or
movb
xchg
loope
inc
lcall
push
mov
add
push
add
jnp
rorl
in
adc
jne
add
push
add
sti
shlb
cmp
inc
add
push
lcall
pop
es
sub
sub
push
push
add
mov
cmp
sbb
lret
mov
ret
cmpsl
popf
int
jo
lods
dec
sti
jmp
mov
rorl
cmp
lret
loopne
add
lret
add
in
sbb
add
add
sbb
andl
jnp
pop
pop
leave
ficoms
inc
add
inc
add
mov
mov
jbe
add
xchg
mov
loop
mov
pop
mov
pop
push
jbe
lea
rcrb
repz
lods
xor
das
xchg
iret
std
out
sub
mov
loop
cmc
jae
push
setp
fs
fnstcw
xor
fistpll
out
jo
cmp
add
or
jmp
push
addb
cltd
mov
leave
or
and
cmc
movsb
mov
or
adc
xchg
add
adc
scas
pop
xor
ja
aam
xchg
inc
les
xor
arpl
cmp
fidivrs
push
lods
in
cwtl
scas
xchg
enter
xchg
testb
cmc
push
jne
daa
insl
pop
int
sbb
xchg
lcall
lcall
add
loope
push
xchg
iret
adc
rcrl
mov
hlt
ret
and
xchg
xchg
jne
mov
in
push
bound
or
cmp
xor
hlt
mov
push
mov
xchg
sub
add
adc
sar
sbb
add
add
add
dec
js
inc
push
ret
pop
cmp
leave
popa
addb
ret
add
aas
and
imul
push
aaa
xchg
sbb
cs
cli
pushf
ficompl
mov
movsl
hlt
mov
inc
add
ds
jno
add
push
enter
or
pop
testl
or
push
adc
test
mov
cmpsb
mov
pop
mov
mov
adc
out
inc
sub
cltd
mov
outsl
out
ja
mov
jge
je
add
sbb
adc
add
test
into
fdivs
and
sub
pop
xor
scas
pop
jnp
repz
inc
xlat
out
fs
lock
add
iret
addb
sbb
daa
jmp
xor
fbstp
jns
inc
int3
gs
fdivl
ret
rolb
addr16
ffree
lret
pop
call
mov
fisttps
jmp
add
push
mov
rolb
fdivrs
fs
cltd
out
sbb
popa
mov
jb
xor
jmp
add
ljmp
add
mov
lods
push
aam
add
and
mov
fstpt
add
mov
daa
lahf
lods
inc
add
xor
add
sbb
cmp
in
lock
xchg
inc
add
or
jmp
sahf
push
push
add
jo,pt
inc
mov
dec
add
add
jb
adc
inc
add
in
sbb
scas
xor
jno
popf
jo
mov
int
pextrw
or
xor
inc
jmp
sub
das
fcmovne
add
arpl
push
sahf
inc
add
xchg
in
adc
add
dec
jnp
call
scas
jne
inc
add
ss
mov
mov
sub
pop
mov
testl
adc
or
sbb
out
add
rolb
sbb
add
addb
sti
xchg
pop
push
test
xchg
out
push
push
sbb
mov
out
add
sub
std
aas
jb
mov
pop
xor
add
movsl
pusha
add
adc
scas
insb
sbb
jno
scas
sbb
add
pop
idivb
lea
scas
push
mov
out
je
add
fistpl
aam
movb
sub
les
mov
sti
ret
cmp
add
inc
add
add
or
insl
outsl
ret
orl
dec
sub
sti
or
es
repz
and
push
pop
std
sbb
lea
jne
pop
je
add
pushf
fdivrp
add
adc
pop
sbb
outsl
mov
out
in
rcll
idivb
fucomi
test
fcmove
ret
push
pop
jge
cmp
call
push
sbb
hlt
pop
add
adc
jmp
es
xor
xchg
mov
icebp
cmpsl
inc
lock
pop
jg
sti
mov
pop
dec
mov
sbb
mov
lock
push
lcall
sub
add
insb
movb
add
movsb
movsb
fwait
pop
add
mov
jmp
xor
inc
jnp
leave
cli
stos
push
lcall
mov
or
dec
arpl
mov
punpckhbw
movsb
jae
mov
jmp
add
cltd
xchg
sub
and
mov
dec
lret
push
xchg
rolb
in
testb
cwtl
sahf
pop
lcall
jg
addb
dec
gs
ud2
daa
mov
test
mov
leave
push
mov
lcall
fists
xchg
xor
xchg
mov
xchg
jge
aaa
cmc
sub
adc
imul
ret
andl
dec
xchg
jae
push
xchg
lret
cmp
mov
mov
inc
add
or
dec
cmp
enter
mov
add
scas
mov
pop
adc
or
push
test
or
mov
mov
jle
dec
std
and
rcrl
pop
fisttps
dec
fsubl
adc
sbb
pop
aas
sbb
fistpll
std
cmp
mov
sbb
aad
add
push
cmpl
sti
cmp
stos
in
fsubr
sti
push
js
loopne
mov
int3
pop
inc
add
movlps
test
add
ret
ljmp
xor
cmp
sub
out
cmp
jo
adc
mov
jecxz
sbb
push
in
push
add
not
sbb
pop
mov
frstor
ljmp
ss
mov
rclb
lock
pop
mov
jno
xor
data16
mov
or
addb
mov
rcrb
mov
loope
cmp
stos
pushw
negb
or
ret
jns
out
inc
sbb
push
mov
insb
repnz
xchg
repnz
pusha
add
add
test
pop
jne
imul
inc
mov
sbb
cmp
clc
mov
mov
repz
mov
mov
into
dec
int3
aam
mov
adc
xor
jl
jb
add
in
cwtl
and
pop
in
push
out
xchg
aam
pop
scas
inc
add
lock
insb
call
sbb
lahf
ja
and
hlt
add
lret
bound
push
movb
cmp
or
or
sub
dec
sbb
dec
adc
pop
sbb
sub
fwait
data16
add
mov
in
push
xchg
pop
cli
jbe
or
inc
add
shrb
out
les
mov
movb
mov
data16
lahf
xor
pop
sub
sbb
xchg
out
cwtl
sbb
adcl
aad
cmp
iret
lahf
mov
cmpsl
scas
mov
fimuls
js
inc
pop
xor
ja
add
fisttpl
cmpsb
scas
jle
dec
ffree
add
stos
js
mov
push
lret
inc
add
sbb
scas
cld
nop
rolb
sub
cmp
jp
push
dec
outsb
xor
insb
negb
loope
sbb
xchg
adc
repnz
stos
push
popa
pop
mov
ja
and
sahf
jp
inc
jle
mov
add
add
fcmovnbe
cmp
faddl
mov
and
aas
add
add
fsubs
outsb
jae
adc
int3
mov
add
or
jg
fcoms
mov
into
jg
add
adc
sbb
mov
sbb
or
push
and
ret
push
and
add
aam
scas
dec
into
jo
cwtl
xorl
dec
je
mov
hlt
add
add
cmp
add
sub
pop
push
cmp
push
inc
add
push
inc
add
or
push
imul
movsl
push
add
add
dec
sbb
repnz
clc
loopne
push
xlat
sub
push
out
add
push
cmp
and
stos
ret
add
xorl
inc
add
xor
xor
je
imul
sbb
sbb
dec
je
mov
or
cmp
dec
inc
add
pop
shll
jle
xor
xor
mov
jnp
jns
lds
adc
mov
dec
xor
icebp
ret
cwtl
fistpl
int
sbb
ja
ret
rclb
imul
and
sbb
xchg
lret
js
addb
add
add
add
movsb
pop
mov
pushf
clc
xor
xchg
test
mov
lahf
inc
call
xlat
lahf
mov
jo
add
push
cwtl
adc
add
pop
nop
xchg
scas
cmpsl
mov
add
push
xchg
incl
mov
mov
loope
fwait
add
aaa
pop
push
movsl
mov
fstps
dec
jbe
pop
add
test
jge
pop
jge
inc
add
push
mov
cmp
insb
push
out
mov
vpunpckhdq
push
lock
dec
aam
jge
xchg
mov
sub
cmp
sbb
adc
arpl
adc
xchg
ficompl
rcll
loopne
or
adc
pop
daa
movsl
xchg
adc
jmp
mov
add
imul
xor
mov
imul
decb
out
jne
shrb
testl
shr
and
mov
aas
mov
scas
arpl
mov
jmp
loopne
mov
aad
adc
imul
loopne
and
mov
push
inc
add
cld
jle
mov
imul
dec
cmp
lds
mov
and
add
inc
add
lahf
or
inc
add
mov
lods
and
lods
call
movb
add
shrb
adc
js
adc
xchg
xchg
movsb
lret
comiss
inc
add
push
enter
sub
in
fadds
sbb
xchg
xchg
push
push
cmp
cs
gs
aaa
xor
sub
mov
iret
movsb
and
roll
jecxz
push
jae
push
inc
push
sarb
dec
inc
add
mov
fs
push
xchg
in
sub
stc
xchg
pop
inc
add
jge
test
push
hlt
pushf
push
mov
dec
xchg
dec
and
lods
pop
sub
jae
rcrl
decl
sbb
jae
fnsave
stc
in
bound
xchg
or
adc
cmc
stc
jecxz
divl
add
inc
cltd
bound
xchg
test
mov
aaa
jle
stos
pop
ljmp
mov
js
lods
imul
add
loopne
add
mov
push
adc
test
out
into
or
pushf
jno
xchg
test
enter
repz
fsubrs
add
sub
mov
sub
xchg
inc
pop
adc
imul
callw
lock
push
clc
sub
mov
add
lds
mov
decb
fdivs
lea
mov
cmp
inc
add
popa
ret
bound
cmp
add
push
fstl
pop
pop
cmp
outsl
out
pop
arpl
add
mov
dec
icebp
repz
movsb
arpl
fisttpl
test
push
xor
leave
cli
and
sub
repz
popa
jae
testb
mov
xor
dec
mov
jbe
into
inc
cltd
pop
inc
pop
jno
inc
add
out
push
sub
lods
scas
or
xchg
cmp
cmp
sarl
dec
frstor
xchg
test
outsb
mov
lret
imul
add
loope
stc
stos
add
add
xchg
add
into
cmc
outsl
jmp
fcmovnu
stos
enter
mov
jge
xchg
imul
push
add
leave
shlb
push
add
and
add
jmp
sbb
cmpsl
xchg
sarl
jp
jecxz
pop
andl
je
sub
movsl
pop
mov
pop
sub
gs
lret
inc
aam
shl
sbb
rol
pop
mov
xchg
jne
shll
fldl
jg
xchg
popa
mov
inc
inc
cli
push
cld
lock
sahf
push
mov
loop
pop
inc
add
pop
pushf
mov
mov
out
repnz
push
xchg
jmp
rcll
in
dec
pop
rorb
pop
inc
add
js
xor
jl
sbb
mov
jmp
in
add
or
fisubs
fiaddl
icebp
jns
ds
cmp
add
popa
dec
lahf
xor
adc
in
lods
movsb
out
mov
in
fistpl
jo
adc
add
add
add
paddw
push
add
dec
out
mov
push
mov
mov
add
pop
cli
addb
and
inc
nop
pop
sahf
stos
or
sbb
jge
sbb
inc
cld
adc
add
hlt
xlat
jl
mov
add
xchg
jbe
idivb
mov
scas
adc
mov
cmp
in
jmp
lea
les
jmp
ss
aad
pop
push
fcoml
cli
out
cs
sub
sub
add
sti
inc
add
xor
mov
add
fimuls
dec
jae
sahf
mov
rolb
push
add
mov
xor
push
jbe
in
adc
push
arpl
xchg
cld
mov
mov
cli
adc
dec
mov
movsl
stc
aaa
imul
movsb
sub
test
xchg
jge
add
add
cmp
iret
ja
je
add
stos
mov
push
sbb
jl
cld
xchg
or
call
add
mov
push
movb
add
mov
data16
jne
sbb
and
shr
sub
add
repnz
frstpm(287
lods
movsbl
jg
je
jle
clc
xor
jne
mov
adc
xor
add
and
add
pop
movq
xor
lahf
sbb
movb
or
imul
add
lret
xchg
test
psrad
insl
inc
pop
and
inc
add
std
inc
rolb
add
out
push
insb
addr16
ds
xchg
fwait
mov
jmp
add
nop
cmp
lret
sub
stos
jle
sahf
test
xchg
sbb
add
xchg
adc
int3
mov
iret
add
xchg
imul
sbb
jmp
pop
sub
int3
ficomps
js
in
icebp
pop
cld
cmp
jno
lret
rcrb
je
dec
and
pop
push
data16
mov
lcall
cmc
sbb
outsl
pop
dec
dec
pop
lret
cmpsb
test
and
loop
aas
stc
inc
cs
out
push
add
add
mov
lock
test
std
cwtl
push
and
inc
lock
stc
ror
add
add
cmp
les
or
movb
jge
lods
jmp
lods
stc
pop
and
addr16
dec
call
lods
and
je
fcmovnbe
sti
stos
popf
imul
jge
idivb
mov
sub
mov
cmc
arpl
xlat
sub
xchg
sub
lods
sub
adcl
fs
mov
test
std
int3
mov
sbb
cli
dec
addr16
dec
pop
mov
imul
jb
jg
xor
xor
jo
clc
lods
outsb
xchg
cwtl
mov
cmp
ljmp
and
aad
jmp
pop
mov
scas
cmpsb
movsl
icebp
ficoml
ds
add
sahf
jo
fdivl
sub
add
out
mov
xor
xor
add
scas
out
pop
adc
add
bound
inc
add
pusha
add
pop
iret
pop
add
mov
push
les
inc
add
test
xchg
jnp
and
ds
add
jg
in
cmp
mov
lahf
call
mov
jl
mov
and
sbb
fdivrp
mov
inc
add
pop
jg
jae
test
or
xchg
xor
and
lahf
in
mov
add
movb
mov
add
in
xor
xor
pop
inc
fs
pop
clc
pop
dec
rolb
loope
test
mov
das
adc
xor
add
mov
fildll
cmp
add
mov
jo
and
je
mov
add
loope
add
or
fisubrs
mov
cmp
outsb
inc
add
jns
les
cmp
fdivl
in
push
mov
pop
cltd
popf
pop
mov
dec
mov
arpl
sub
gs
sub
add
mov
in
mov
push
ss
lods
xchg
add
pop
xchg
adc
cld
mov
mov
addb
test
add
add
add
cmpsb
cs
mov
inc
xchg
inc
adc
lret
jle
or
inc
into
push
testb
add
pop
jo
xchg
data16
clc
pusha
add
test
jae
adc
popa
lds
cmpsb
lock
js
mov
cld
out
or
pop
push
push
fisttpl
dec
mov
add
push
inc
cmpsl
fistl
cmpsb
mov
scas
aaa
push
rorl
divl
insl
xchg
outsl
movsl
sub
aaa
adc
aad
je
push
ja
xchg
or
in
scas
mov
mov
rolb
inc
add
nop
nop
jae
call
addb
pop
jl
test
rclb
push
les
sbb
imul
add
aas
ficomps
mov
add
adc
and
inc
fs
xchg
int
testb
lret
addr16
sbb
jo
icebp
mov
add
jg
mov
pop
add
mov
jge
add
mov
push
add
mov
add
es
xchg
mov
ja
leave
test
add
mov
mov
mov
jle
add
int3
addb
andl
push
jbe
add
xlat
in
mov
cmp
jnp
add
ret
aad
call
cmpsl
sub
lods
push
out
psubq
lods
fs
mov
push
pusha
add
rolb
xchg
xor
add
add
pushf
cmpsb
add
inc
add
mov
rorl
cmp
lods
fcomp
cmp
add
push
sub
hlt
aas
outsl
nopl
xor
push
cltd
fsts
push
fcoms
addb
shr
das
cmp
jnp
or
out
pushf
into
cmc
jg
ret
lds
xchg
add
xchg
pop
addb
dec
aas
mov
jb
popa
dec
inc
imul
dec
loope
mov
mov
jle
int
fcomps
push
in
lahf
dec
or
or
mov
into
cmp
add
imul
and
fstpl
and
lret
add
insb
xchg
xchg
add
popf
fldt
pop
out
add
and
lret
add
xchg
mov
out
jmp
rcll
or
fsubs
in
mov
imul
fdivr
int3
sub
inc
outsl
clc
mov
mov
pusha
add
insl
jbe
or
xor
inc
inc
pop
inc
xor
inc
les
or
pushf
sbb
jp
pop
scas
fisubs
jns
xchg
sub
lds
shrb
xchg
test
es
sbb
hlt
div
call
movb
cli
and
xchg
mov
loop
sub
push
push
sub
pop
adc
cmpsl
stos
lea
dec
xchg
icebp
repz
and
jns
lods
or
inc
xchg
stos
mov
daa
data16
xchg
popa
icebp
ret
stc
lods
cmp
add
mulb
lcall
push
movb
int3
xor
mov
mov
sbb
xchg
mov
xchg
insl
scas
add
and
add
inc
add
sahf
into
dec
scas
ja
ret
push
sub
test
mov
inc
arpl
outsl
mov
jno
repz
adc
int3
jno
jmp
sbb
add
xchg
xor
add
adc
jnp
pop
js
push
mov
rcr
lahf
mov
inc
add
mov
pushf
cmp
or
xor
sbb
mov
or
mov
push
ret
test
in
inc
add
cmp
std
in
outsl
dec
add
in
push
dec
mov
faddl
je
les
push
ja
inc
add
pop
sti
and
repz
dec
push
insl
push
mov
inc
add
mov
mov
icebp
lcall
xchg
mov
add
insl
je
mov
push
fucomi
dec
scas
lea
add
push
mov
cmc
lods
movsb
xchg
and
jbe
pop
shrl
jmp
imul
clc
cwtl
ds
mov
aam
aad
jecxz
xchg
inc
inc
add
shrl
sbb
add
in
lcall
dec
push
arpl
xchg
cmp
enter
xor
add
outsl
aam
sub
sbb
ss
add
sbb
lds
pop
nop
and
add
and
add
xchg
mov
sbb
pop
jp
rep
xchg
cmp
inc
add
sub
mov
test
out
rcrb
sub
cmp
push
cmp
repnz
dec
test
jo
aad
add
testb
xchg
mov
mov
ficomps
ljmp
ret
adc
ds
add
lret
sub
add
pop
mov
inc
add
add
fs
cli
jg
jno
dec
sbb
sub
add
ret
add
repz
insl
icebp
cwtl
inc
add
jns
dec
in
xchg
push
nop
sub
inc
ret
movb
daa
aaa
xchg
pop
sbb
iret
push
shll
add
add
push
add
add
les
inc
lock
xor
mov
rolb
js
pop
and
fdivrl
pusha
add
add
rclb
push
leave
fisubrs
test
add
lcall
jmp
call
sub
add
adc
aam
xchg
mov
outsb
out
push
sbb
lods
push
js
add
imul
jl
cmpsb
aam
mov
scas
or
and
xor
jb
repz
fldl2e
les
iret
pop
jno
jno
inc
mov
cltd
lret
ss
xchg
and
enter
sbb
std
faddl
mov
jl
sub
cld
hlt
outsl
pushf
push
mov
add
enter
adc
cmp
mov
push
mov
cwtl
jp
xchg
fnstsw
movups
add
subl
add
xchg
mov
ret
out
inc
aad
ja
fisttps
push
cmp
gs
inc
add
add
jb
outsb
adc
out
fsubr
inc
arpl
and
rolb
movsl
out
dec
fisubrs
jp
and
aad
or
push
push
not
das
add
andl
add
jle
dec
mov
rolb
rcll
sub
fisttpl
sbb
pop
in
lock
mov
mov
out
nop
inc
adc
out
sub
lds
leave
dec
decb
les
mov
cmc
push
aad
add
lods
adc
mov
jmp
fsubrp
mov
incb
rorl
add
adc
movsl
and
fmuls
ja
fbld
loope
fwait
xchg
shl
inc
add
push
in
jmp
add
inc
add
lcall
and
test
leave
add
rcr
popa
push
mov
int3
sub
sub
adc
lret
xlat
jns
imul
pop
cmp
lods
or
inc
push
nop
stc
cli
add
mov
cmp
mov
mov
lock
jns
popf
push
push
enter
ffreep
add
stos
movsb
mov
repnz
jp
fbstp
in
cmpsb
push
nop
cmc
ja
popf
cmp
push
cmpsb
aaa
or
mov
and
and
jb
dec
idiv
lods
scas
sbb
mov
sub
push
mov
push
pop
mov
hlt
jecxz
into
jb
mov
adc
jne
add
mov
pushf
adc
inc
add
jns
add
stos
stos
fptan
xchg
out
cld
out
sbb
adc
stos
lock
int3
push
out
pop
cmp
jb
iret
jl
mov
adc
mov
cwtl
ja
add
lret
insb
mov
mov
jnp
roll
mov
cli
bnd
pushf
loopne
call
cmp
lods
bound
popa
iret
fisttps
or
or
shrl
cmc
push
lods
push
cmp
and
add
mov
lahf
testb
add
inc
gs
inc
add
xor
dec
out
mov
movsl
push
js
fistpll
out
mov
test
jl
add
insl
pusha
add
bound
out
loope
or
xchg
or
mov
add
sub
ret
out
jl
fxam
and
jo
jge
daa
scas
cwtl
jno
inc
or
out
frstor
out
jmp
scas
cmp
mov
fcmovnu
das
in
cmp
fdivr
out
mov
stos
adc
push
fst
inc
cmp
int
out
and
jge
or
jg
xor
sar
xchg
cmp
pop
xor
iret
aaa
leave
orl
popf
cmp
or
stos
inc
pop
jl
xor
mov
out
lds
lea
pop
shlb
add
add
jb
or
stc
addl
add
testb
scas
incl
frstpm(287
fstps
rolb
mov
or
cltd
aas
push
add
cmpl
add
test
aaa
out
nop
xor
bound
cltd
xor
add
rolb
loopne
pop
nop
out
jb
xor
imul
add
std
lcall
bound
mov
mov
mov
fidivs
stc
mov
mov
or
test
je
pop
and
lea
aas
fs
pushf
movsb
repnz
pop
arpl
fcmovne
pop
aad
std
pop
dec
push
movaps
dec
int3
aam
mov
xchg
dec
sarb
add
bnd
dec
and
xchg
mov
mov
sbb
adc
out
mov
push
jns
jg
sbb
test
mov
jns
fmull
lods
and
lock
add
pop
jne
shrl
loop
inc
add
add
cld
int3
cmc
shl
cmpsl
push
andl
fcoms
dec
fiadds
sbb
out
add
mov
in
lods
mov
lcall
add
insl
sbb
add
movb
out
shlb
arpl
xchg
jmp
cmpsb
xor
jg
sub
mov
cmpsb
fisubs
pop
bound
mov
jb
std
pop
add
mov
jno
sbb
out
bound
dec
mov
sub
enter
pop
dec
scas
and
xchg
sbb
dec
mov
xor
stc
jns
push
sub
out
sub
aam
idivb
push
mov
adc
push
add
sbb
cmpsl
stos
int
inc
add
xchg
push
add
xlat
sub
mov
in
sbb
pop
jno
pop
mov
mov
nop
mov
mov
add
adc
xor
std
lcall
push
add
cmp
out
mov
dec
int3
lea
rorb
mov
push
pop
adc
adc
mov
jb
cmp
repnz
xchg
push
push
pop
xor
insb
xchg
cmp
xchg
and
add
jmp
pop
pop
add
lea
jecxz
inc
leave
jecxz
mov
sahf
daa
mov
inc
pop
int3
arpl
mov
lock
fs
add
add
jmp
pusha
add
xor
dec
sbb
push
cli
dec
lcall
addr16
push
add
or
cmp
enter
xor
sbb
xchg
jp
scas
pop
mov
stos
jl
xchg
insl
notb
adc
cmp
scas
push
idivl
cltd
daa
aam
add
lcall
cmpsb
pop
cmpsl
clc
cwtl
mov
add
mov
dec
cwtl
movsb
push
add
sbb
adc
mov
pop
aaa
sub
into
and
inc
push
pop
shll
push
jnp
add
dec
xchg
scas
adc
lcall
push
lds
mov
mov
rolb
push
sbb
sbb
jmp
and
lcall
outsb
xchg
mov
jno
inc
push
ja
ret
mov
insb
hlt
pop
daa
or
jmp
testb
bound
je
inc
cmp
add
into
jnp
jae
stos
rolb
add
cmpsw
movb
mov
dec
jno
test
arpl
es
ret
in
mov
pop
bound
jnp
arpl
mov
and
cs
pop
jns
faddl
xor
mov
fisttps
sbb
cmp
add
jno
ror
jnp
pop
je
add
or
push
mov
mov
add
push
mov
daa
xchg
shll
pop
jp
and
push
mov
pop
jnp
sub
push
add
xor
test
fistpll
shlb
ja
idiv
jmp
fs
and
aaa
cli
mov
dec
clc
mov
mov
fisttpl
adc
cmp
jne
push
sbb
das
push
add
notl
cmp
stc
fwait
das
insb
cmp
in
inc
add
push
rcrl
loop
loop
lock
inc
add
add
outsl
cwtl
jno
add
les
jp
pusha
add
mov
sgdtl
mov
jae
xchg
ds
cltd
nop
mov
ss
jae
pop
lods
je
lods
outsl
jo
insl
push
iret
test
or
pop
addb
jp
mov
ret
lods
mov
add
testl
sbb
test
pop
lcall
pop
inc
mov
rolb
sbb
push
sub
pop
mov
sbb
rolb
mov
xorps
adc
sbb
mov
inc
add
inc
loopne,pt
negb
lea
add
mov
cmpsb
push
inc
push
push
push
ret
lret
mov
sbb
aam
fwait
mov
push
add
mov
jbe
add
insl
mov
mov
mov
sti
jmp
jl
add
pop
and
push
mov
bound
sbb
add
add
add
arpl
cmpsl
out
sbb
add
les
test
mov
mov
lret
cmp
xchg
sarl
cs
mov
xchg
or
mov
and
mov
mov
sbb
mov
inc
movsl
mov
das
das
mov
sbb
add
bswap
mov
addr16
add
sti
es
push
and
push
or
ds
push
ljmp
es
sbbl
jbe
adc
scas
mov
add
and
inc
add
sti
dec
pop
cs
mov
lods
data16
hlt
inc
add
sub
in
stos
fmuls
dec
mov
inc
or
loopne
movb
ja
and
data16
xlat
dec
ljmp
das
cmp
jecxz
in
idiv
push
arpl
mov
shll
bound
loop
cld
outsb
inc
add
mov
sbb
je
add
sub
push
stos
lds
les
scas
aaa
lods
and
stos
sub
mov
das
fnstenv
call
iret
fmulp
pop
jae
cmpsb
dec
jle
sarl
add
imul
aam
cld
cmpsb
mov
xchg
pusha
add
cmp
das
icebp
bound
lds
addb
dec
pop
xor
aam
push
dec
in
or
add
lock
cli
mov
jp
jo
nop
testl
dec
jg
xor
jge
test
cmp
out
dec
cltd
fcoms
aam
lock
cli
nop
and
add
jp
sub
cmp
inc
in
in
or
inc
add
int3
dec
pushf
mov
int
repz
test
xchg
mov
fs
lods
shrb
xlat
cs
lea
cmp
adc
lea
mov
or
add
call
add
stos
cld
out
xor
mov
fadd
fs
icebp
or
add
fmuls
sbb
jmp
jno
imul
sbbl
mov
push
in
test
ss
sahf
jmp
cli
push
mov
ljmp
test
add
mov
pop
mov
push
add
movsl
push
pop
jns
dec
adc
fs
ss
test
adc
xchg
fisttps
pop
fs
add
cld
jo
add
xor
insl
pop
xchg
cmpl
fs
stos
push
mov
mov
data16
stos
repz
jne
movsb
leave
fistl
dec
mov
fisubs
add
pop
push
add
sub
add
adc
cmp
mov
jmp
fldt
mov
std
push
add
xchg
insl
mov
aaa
shrb
push
arpl
xchg
xorl
lods
pop
insl
and
es
mov
sbb
cmp
inc
add
repnz
mov
les
das
add
movb
shl
push
cli
movsb
cs
das
and
data16
ret
sbb
js
or
xchg
lods
cmp
adc
addb
add
push
cltd
jp
sahf
out
mov
lret
ss
xchg
mov
add
mov
orl
adc
movb
fidivrl
shll
iret
rcll
mov
inc
pop
frstor
add
mov
pop
mov
pop
add
sbb
fstpt
ja
and
imul
mov
flds
jne
sahf
ds
rorb
dec
ja
addb
lods
or
sub
addb
xchg
xchg
pop
loope
and
jp
dec
cmp
add
and
mov
fistpll
adc
mov
xchg
pop
les
fdivrs
pushf
sarl
popa
repz
les
or
aas
dec
jp
test
loopne
scas
and
dec
test
xlat
fwait
and
les
or
repz
imull
inc
push
pop
mov
mov
das
xor
mov
imul
sbb
or
add
push
lret
loopne
pavgw
jne
cmp
call
and
loop
mov
jb
mov
jge
outsb
mov
movb
add
cwtl
inc
imul
sub
jl
xor
sub
sti
mov
add
xchg
jmp
lds
leave
lret
into
repnz
ret
mov
add
pusha
add
movb
int3
sbb
inc
stc
adc
mov
repz
lcall
call
call
lahf
or
dec
ljmp
int3
ljmp
cmp
scas
ljmp
stos
sahf
jns
ret
addb
test
iret
cmp
aad
mov
sub
and
cli
dec
out
int3
mov
insl
dec
stc
cmp
cmpsl
push
je
pop
xor
push
outsl
aas
or
or
xchg
imul
dec
pop
stos
inc
add
int
jl
xor
or
cmc
jl
xchg
inc
cmp
stos
sbb
fimuls
add
popa
jae
jg
add
mov
hlt
xor
inc
add
es
and
ret
pop
lret
rolb
add
mov
pop
popf
sahf
jge
cmpsb
push
sbb
xchg
sbb
loope
jo
aas
int3
or
outsl
aad
popa
push
sbb
add
add
je
cmp
loop
leave
add
pop
push
call
cwtl
out
mov
mov
cltd
test
xchg
lret
sti
push
in
ds
lahf
push
leave
lods
into
jo
or
frstor
cs
sub
inc
add
mov
fst
xor
fistpll
shl
add
test
xchg
inc
jecxz
sbb
xor
xchg
or
mov
add
ljmp
inc
repz
dec
or
jp
shll
fdivl
addr16
add
mov
out
loopne
icebp
cmc
sbb
dec
cmp
in
xlat
lods
lock
fnstenv
call
lahf
sbb
shrl
xchg
sub
out
mov
add
and
leave
jle
sti
push
int3
cwtl
and
mov
es
cli
and
nop
stc
cmc
in
int3
cltd
sub
jne
addr16
int
dec
cmp
xchg
push
adc
addr16
ficompl
or
sub
shlb
jmp
sbb
or
cmp
push
vmread
or
inc
add
cld
test
lahf
pop
mov
test
div
sub
loope,pt
arpl
test
in
cli
xchg
xchg
inc
add
mov
popf
insl
js
mov
and
add
xchg
out
aam
adc
add
mov
sub
xchg
xor
fidivs
lret
and
scas
add
mov
pop
iret
jmp
sub
mov
jnp
movsl
or
add
test
lds
or
sbb
int
addr16
jle
jp
lcall
movsl
jmp
xor
or
scas
das
mov
pop
fadds
aaa
dec
xor
leave
mov
sbb
xchg
adc
sbb
fildl
add
add
les
in
or
mov
mov
sub
cmp
addb
les
adc
add
add
repnz
shlb
fisttpl
add
js
jl
dec
js
ret
add
inc
add
push
cmp
inc
stos
out
notb
mov
in
outsl
ss
pop
shrl
loop
dec
cld
lock
outsb
rolb
hlt
jl
mov
add
ss
cmp
jg
mov
adc
out
pushf
out
mov
fwait
xor
jae
pop
lock
add
mov
add
mov
fwait
dec
scas
loop
mov
insb
xlat
mov
sbb
fisttps
das
movb
ss
test
push
cmp
or
jp
std
lods
addr16
les
stos
push
je
inc
jns
aas
mov
cmpsb
jae
xchg
push
mov
out
cmpsb
test
cmp
clc
rcll
repnz
pop
or
mov
cmc
sbb
jnp
sbb
add
push
xor
xor
bound
inc
add
cmp
mov
jnp
aam
call
cmp
sbb
xchg
outsb
scas
sub
test
pusha
add
add
mov
sbb
out
jp
addb
jo
push
push
add
inc
or
add
push
test
sbb
out
sub
outsl
or
pop
dec
jecxz
mull
adc
test
fs
jne
popf
bound
xor
jae
dec
inc
lods
sub
add
adc
add
aam
test
test
daa
jo
and
and
aam
sub
mov
psrld
add
test
fidivl
imul
push
inc
add
xchg
mov
xchg
subl
cmc
dec
mov
push
push
add
sub
lret
movsb
test
jecxz
pop
pop
add
fistps
test
sbb
pop
lods
and
adc
adc
xchg
aad
shlb
xchg
sbb
stos
dec
cmpsl
inc
add
add
sbb
cmpsb
iret
ss
xchg
or
add
mov
aad
xorl
dec
mov
add
cmp
call
inc
loope
mov
jmp
mov
leave
lods
scas
int3
cld
in
or
shl
out
lcall
and
xlat
jns
es
fmull
lock
xor
dec
push
mov
shrl
sub
cltd
adc
push
out
xor
add
fs
add
xor
mov
push
sbb
lret
scas
cs
xchg
ja
out
inc
add
inc
out
or
mov
std
cli
cmp
fadd
push
add
pop
mov
jmp
lods
sbbl
adc
and
in
adc
dec
ret
mov
int3
jmp
pop
inc
dec
jb
inc
or
xchg
test
and
xor
ss
or
insl
stos
or
pushf
shlb
lock
stos
xchg
ds
dec
fst
movb
push
fmull
push
pop
arpl
dec
rolb
sbb
or
sub
add
pop
sub
pop
out
rolb
push
addb
jae
mov
in
mov
scas
popf
pushf
xchg
sub
rcll
cwtl
xor
pushf
cmp
scas
cli
push
jl
clc
fdivl
xchg
test
sub
xor
push
sahf
mov
cld
imul
push
dec
outsl
inc
inc
add
xor
xor
jns
fstps
sahf
xlat
arpl
fstps
mov
cli
fidivl
or
fisubrl
in
stos
movsb
inc
fisubrs
sub
add
sub
add
push
andl
fisttpl
scas
test
stos
and
shrl
pop
pop
or
divb
pop
pop
les
call
in
arpl
or
push
xor
pusha
add
dec
mov
and
add
sub
add
cs
push
push
testb
jns
cmp
xchg
push
stos
mov
jmp
push
cli
xor
sbb
mov
jbe
add
data16
mov
daa
ret
dec
mov
add
and
rolb
std
daa
leave
xor
out
stos
inc
leave
sbb
xchg
out
add
sbb
jns
jle
ljmp
loopne
outsb
fldenv
hlt
and
jmp
sub
add
iret
sub
cli
xchg
lock
sub
mov
add
ficompl
push
add
mov
dec
loopne
sub
cmpsl
jae
shll
jne
add
mov
lahf
xor
test
sbb
and
fcmovnb
add
adc
push
insb
insl
imul
mov
xor
or
addb
mov
sti
lods
xchg
inc
add
dec
dec
in
sub
pusha
add
jbe
mull
add
add
dec
cltd
lock
add
lret
pop
inc
cli
movsl
fbld
mov
jle
imul
add
mov
ss
xor
icebp
jp
in
dec
test
call
dec
ja
xor
push
nop
push
sbb
repnz
out
js
dec
aad
push
ljmp
or
sub
ret
into
out
inc
les
addb
gs
dec
lods
jbe
cltd
outsl
fldt
std
addb
leave
cmp
inc
add
cwtl
jbe
imul
loopne
xchg
mov
mov
pop
add
and
jl
outsl
popf
leave
retw
push
sti
cmpsl
movsb
inc
add
js
pusha
add
popa
cmpsb
pushf
cmc
cvttps2pi
mov
add
jno
jmp
fiadds
subl
lock
jne
movsl
int
dec
xor
pop
sbb
add
fbld
dec
xor
or
loop
outsl
jb
sbb
add
scas
ljmp
fmuls
rolb
add
dec
jno
jle
lods
roll
dec
mov
pop
loop
add
push
cmp
cwtl
inc
add
adc
sub
and
dec
cmp
push
jae
xchg
push
mov
addb
add
stc
fs
cmp
sti
push
xchg
ja
push
aaa
xchg
or
sub
pop
shll
outsl
cs
pop
call
add
sti
ja
cmp
repz
lahf
mov
flds
stos
movsl
sbb
cmp
push
xchg
lock
sub
add
das
movsb
pop
mov
mov
popa
mov
cwtl
add
fstpl
ror
aam
scas
jne
out
call
outsb
sub
pop
popa
sti
imul
loope
mov
push
and
xchg
cltd
xchg
cs
dec
mov
cli
mov
out
pop
incl
bound
add
xor
pop
dec
lret
dec
aaa
enter
xor
cmp
pushf
test
adc
jae
xor
add
xchg
sub
aam
sbb
xchg
idiv
addb
inc
stos
je
push
mov
inc
add
ja
sub
sti
cmp
cmp
mov
cmp
insb
pop
scas
and
inc
xchg
add
shll
xchg
pusha
add
in
sbb
icebp
mov
scas
push
sbb
jae
jl
xor
xor
xchg
pop
repnz
insl
jl
cmp
add
arpl
sub
and
aam
repz
inc
add
stos
pop
insb
add
sbb
mov
and
enter
dec
push
rolb
jg
push
inc
add
sbb
insb
add
pop
pop
xor
cmc
or
sub
jge
inc
test
mov
mov
add
xor
test
xchg
push
adc
cwtl
or
insb
shl
cli
mov
push
data16
or
rcl
pop
aad
jns
jb
inc
push
movntps
fisubs
in
stos
das
ds
mov
pop
pop
sahf
mov
xor
jnp
dec
push
push
cmp
dec
or
mov
jns
sbb
out
cmp
sahf
nop
jns
insl
and
push
inc
add
cmp
or
negl
test
sbb
mov
xchg
jg
pop
sysenter
sbb
hlt
fidivs
inc
xor
test
cmp
adc
and
jnp
jecxz
or
mov
int
push
dec
stos
jnp
aas
push
aad
arpl
rol
popa
rcll
push
fldt
int
cltd
push
in
leave
aad
addb
add
add
ljmp
cmpsb
movsb
push
xchg
add
rorl
pop
push
ret
loope
ljmp
in
mov
leave
mov
rol
add
and
or
lods
mov
enter
add
jl
add
ljmp
add
mov
mov
and
cld
and
inc
test
stos
outsb
pusha
add
and
mov
lcall
push
icebp
outsb
mov
fisubrs
mov
into
stc
sub
outsb
xor
fisttps
mov
add
jmp
cmp
adc
add
sar
and
xor
jg
pop
ret
roll
adc
or
mov
insb
sti
push
adc
cmp
pop
int
dec
iret
mov
fcomps
mov
pop
xchg
shl
xor
jg,pt
cli
loope
push
add
je
stos
sub
cwtl
push
rcll
in
push
fnstsw
push
dec
leave
outsl
scas
loope
roll
sbb
jno
xor
loopne
aam
add
lcall
andl
iret
int
add
nop
outsl
sbb
pop
ds
mov
in
add
popa
and
cmp
lret
fcmove
and
push
push
cmp
in
out
in
mov
out
lock
fs
lahf
repz
pop
xchg
arpl
jmp
mov
inc
inc
aas
pushf
in
xchg
testb
bound
xor
lds
loop
pop
and
xchg
xchg
in
lret
and
add
inc
add
dec
mov
test
dec
mov
jns
ret
cs
xchg
repz
add
insl
inc
add
push
repnz
in
sbb
out
scas
inc
add
inc
cld
ljmp
addb
add
fnstenv
lods
cmp
or
adc
pop
and
xchg
xor
add
xor
mov
sub
imul
out
xchg
inc
sub
test
lahf
test
add
and
mov
or
add
scas
out
in
push
fsts
xchg
scas
inc
jnp
sub
mov
adc
xchg
ljmp
or
add
mov
pop
adc
xchg
jle
mov
test
bound
inc
fbld
xchg
push
jo
adcl
push
or
mov
cmp
xchg
pop
inc
add
xchg
rolb
ds
test
mov
lods
and
aas
in
sub
dec
pop
push
out
lods
inc
add
sub
push
das
sub
lcall
addb
bound
xchg
inc
cmc
pop
lcall
insb
lret
rcrl
inc
add
sub
xchg
jmp
negb
xchg
mov
loopne
ret
jl
pop
and
into
mov
gs
inc
add
xchg
add
xchg
ljmp
repnz
add
fsubrs
outsb
jle
sub
cmp
sqrtps
xchg
mov
add
xlat
fiadds
add
cwtl
arpl
sarb
push
or
out
push
cmp
pop
mov
add
je
popa
lds
pop
cmpsl
fimull
push
jbe
dec
lcall
stos
cwtl
loop
cmp
add
add
sti
insl
inc
add
icebp
cs
pop
outsb
pop
sub
inc
add
sbb
add
cld
add
fsubrs
push
mov
dec
ja
cmp
add
push
add
add
add
cmpsb
out
inc
movb
in
xor
in
add
add
lods
fsubrs
add
fs
sbb
cwtl
sti
call
mov
mov
add
or
movl
push
mov
or
ret
add
add
iret
mov
into
xchg
jg
ja
cltd
mov
call
adc
sbb
add
stos
cld
jbe
mov
sub
push
movsb
shll
dec
sub
and
jg
pop
adc
mov
popf
bound
popa
es
cld
dec
insb
je
pop
xor
test
xor
ss
jb
push
fisubrs
mov
push
inc
add
ffree
add
lods
dec
call
pop
enter
test
add
gs
mov
shll
add
imulb
mov
and
mov
cmp
repnz
div
pop
inc
add
add
clc
jp
add
movsb
jns
adc
daa
mov
stos
or
xchg
arpl
inc
pop
jg
and
mov
addb
out
sub
pop
sub
sti
and
mov
add
mov
sbb
js
sbb
xchg
or
push
sub
jp
mov
in
icebp
insl
sub
pop
dec
imul
out
cli
adc
add
pop
push
xchg
adc
add
add
mov
out
add
cmovns
mov
inc
pop
cmp
and
sarl
mov
jg
xchg
stos
in
ret
mov
inc
fcoml
in
inc
add
add
cmp
add
into
push
sub
mov
insl
jne
add
jg
add
scas
das
pop
push
add
sub
add
pushf
jne
add
jge
jle
mov
je
sub
ja
inc
into
addb
int3
inc
sub
mov
pop
repz
out
jno
add
mov
add
test
jecxz
add
mov
repz
push
dec
js
or
xchg
icebp
xchg
pop
ss
push
or
int3
movsb
mov
cs
xchg
mov
ljmp
mov
test
je
cmpsl
push
cmpsb
out
sub
enter
scas
xchg
dec
outsl
fsubl
add
out
in
loopne
test
test
cwtl
mov
cwtl
or
or
iret
adc
shlb
cmc
int3
leave
inc
add
call
movsb
ljmp
adc
inc
rorl
jbe
inc
add
movsl
sub
dec
xchg
aam
mov
addr16
mov
out
stc
lcall
in
sbb
inc
jae
clc
cltd
sbb
jbe
addb
sub
xor
mov
adc
xchg
sbb
mov
fisubl
add
cmp
cmp
sarl
in
sbb
pop
aam
aas
in
les
and
add
in
dec
lds
add
decl
add
push
imul
mov
pop
cmp
mov
mov
sbb
xorl
or
push
and
pop
lods
fdivr
sahf
mov
fwait
mov
push
add
push
imul
je
call
fwait
jle
cwtl
push
imul
inc
mov
add
jecxz
mov
inc
insl
dec
add
movb
adc
xchg
inc
cmpsb
rcl
addb
test
icebp
push
add
xor
xor
mov
insb
jle
mov
add
out
pop
pop
test
clc
clc
push
aam
inc
lods
xchg
iret
fisubrl
ds
aam
xor
sub
jmp
push
jle
inc
add
sarl
outsb
adc
push
imul
push
lahf
pop
push
inc
xor
orl
dec
pop
inc
or
sub
fisubrl
scas
insl
cmp
add
mov
adc
jno
add
insl
fstp
pop
mov
int3
addb
push
pop
inc
jp
mov
pop
inc
add
sbb
filds
add
insl
inc
add
mov
addb
out
negl
imul
in
jl
inc
add
shll
pop
and
inc
add
add
add
add
sahf
aaa
int3
mov
pop
test
or
add
int3
mov
mov
and
add
add
test
test
sub
ret
cmp
xor
add
xor
fiaddl
jp
aaa
sti
stos
dec
xor
add
and
fisubl
pop
push
repz
jge
mov
decl
out
lcall
addb
jmp
test
rolb
add
pusha
add
xchg
cmp
rcl
ja
in
lods
jae
jo
jp
insl
jmp
add
pop
push
xor
ret
pop
xor
sbb
add
aad
adc
push
sti
popf
cs
dec
rcll
add
lds
and
mov
inc
add
fbstp
in
flds
int3
lcall
mov
pushf
xchg
jge
add
sahf
cmpsl
int3
pop
movsb
xchg
in
bound
push
jp
jns
lock
add
lahf
out
fsubp
ss
jge
or
add
adc
cmp
pop
cli
fs
inc
test
sbb
cmp
push
mov
add
mov
push
call
sbb
jmp
por
push
fdiv
xor
mov
jbe
jp
sub
push
mov
and
fbld
addr16
or
xchg
cmp
add
lock
push
xor
iret
hlt
add
call
jo
leave
jg
push
imul
inc
add
sbbl
push
sbb
cmp
mov
cmp
bound
rcr
enter
and
in
pop
sbb
pop
aaa
sahf
loope
mov
movb
sub
push
pop
xor
fnstsw
push
sub
iret
ret
xchg
pop
dec
popf
jle
push
push
dec
loop
add
add
mov
add
and
faddl
popf
cmc
jg
icebp
lods
jno
cmp
shll
movb
outsb
pusha
add
into
iret
repnz
mov
outsb
xchg
mov
xor
and
lods
cltd
bound
out
push
paddw
int
dec
mov
loopne
jmp
push
into
pop
lcall
add
hlt
in
dec
add
jne
mov
idivl
pop
and
cld
sub
lcall
xchg
pop
cmp
xor
adcl
add
stc
adc
sub
mov
cmp
imul
lods
fs
fs
cmpl
sahf
xchg
add
xchg
and
or
divl
outsb
add
sarl
insb
dec
or
dec
push
jmp
out
inc
fisttpl
outsb
or
mov
addb
pop
add
add
jns
fs
pusha
add
iret
dec
bound
pusha
add
test
or
in
fldenv
mov
jbe
adc
insb
xchg
scas
pop
mov
cmpsb
push
cmova
add
cwtl
jo
daa
inc
add
shl
enter
sbb
insl
into
ror
out
mov
cmpl
inc
add
inc
add
sub
jno
mov
pop
push
inc
add
adc
add
add
adc
push
out
xchg
push
stos
xchg
movsb
mov
inc
add
inc
lea
mov
mov
xchg
xlat
adc
inc
add
pusha
add
incb
add
push
pop
jo
xchg
mov
xor
add
lock
or
test
iret
xor
add
mov
js
addb
add
dec
pop
bound
dec
pushf
mov
sub
push
addb
test
mov
add
aas
mov
aaa
scas
pop
sbb
rcrl
dec
and
mov
mov
mov
pop
mov
push
push
sub
and
gs
mov
imul
clc
pop
pop
mov
imul
push
bound
inc
add
mov
les
ss
xor
repnz
or
adc
addl
fnstsw
inc
mov
push
and
or
aas
inc
add
rep
sub
lock
push
test
roll
imul
iret
sti
push
imull
roll
mov
rolb
adc
jmp
adc
lret
out
dec
push
push
jbe
xacquire
inc
dec
rolb
cmp
add
jb
les
into
scas
aas
jne
and
mov
lea
aaa
mov
and
jge
inc
jl
mov
push
fbstp
mov
jmp
dec
jb
dec
sub
sbb
leave
inc
in
add
into
pusha
add
mov
dec
rcrl
popa
pop
push
add
sbb
test
push
jbe
stos
stos
xchg
xor
jmp
sub
add
ret
add
cmp
mov
sub
mov
dec
pusha
add
mov
xor
mov
leave
push
add
es
and
sub
jns
cmpl
pop
faddl
add
movb
mov
jne
test
xor
into
enter
add
fld
addb
loope
add
mov
je
aam
insl
xchg
int3
inc
xchg
mov
jmp
add
aad
fisubs
sub
push
add
cmp
cmpsb
addb
pop
inc
add
adc
add
push
jge
pop
mov
insb
dec
inc
sbbl
add
xor
sub
add
cmpsb
ret
movsl
cmp
addb
mov
dec
cwtl
push
inc
in
pop
pop
xchg
push
sahf
jecxz
mov
add
xor
lret
mulb
pmuludq
addb
pop
xchg
xchg
in
divb
and
mov
aas
fstpl
and
dec
into
cs
cld
cmp
add
push
iret
lea
jbe
pop
cmc
stc
popf
sbb
cmp
mov
sbb
fildll
fcmovnu
or
pop
nop
cwtl
dec
jnp
cmp
lret
push
add
xor
in
int
sub
out
add
sub
aas
cld
or
inc
xchg
inc
mov
pop
test
jmp
mov
out
inc
add
dec
fsubp
xlat
xor
fwait
inc
mov
xor
jg
add
mov
add
bound
addb
push
das
iret
subl
iret
mov
lret
arpl
cmp
pop
jne
sbb
out
imul
add
scas
addb
cmp
add
push
add
mov
sub
fidivrs
inc
add
jp
adc
push
dec
mov
bound
int
fcoms
add
xor
addb
add
and
lea
addb
je
dec
jp
mov
or
stc
sbb
mov
in
pop
push
movsl
inc
add
pop
and
imul
add
dec
mov
rolb
fldenv
in
lds
or
loopne
fidivrl
sub
lea
cwtl
in
xchg
shl
mov
dec
add
mov
jno
add
int
mov
arpl
sahf
mull
add
call
inc
add
imul
out
cmp
inc
add
jle
mov
dec
enter
mov
mov
mov
inc
push
into
xor
out
add
daa
addb
loop
fdivrs
sub
pop
in
pop
and
lar
shrb
jmp
loope
dec
pop
pop
xchg
jne
loopne
sbb
int3
stos
lods
lods
sub
test
pop
aad
test
iret
and
pushf
es
out
and
cmp
cld
cmp
dec
mov
es
inc
push
inc
adc
inc
add
adc
adc
es
xor
out
int3
lret
scas
cltd
ljmp
add
ljmp
push
pop
mov
out
fdivrl
mov
je
lcall
aad
int
insb
sub
dec
push
mov
into
insl
daa
call
jne
push
and
mov
mov
aad
dec
cmp
and
xor
add
jge
add
std
mov
mov
ss
into
xchg
mov
pop
jbe
cmp
mov
sbb
mov
movsl
push
icebp
push
mov
les
inc
popa
imul
imul
scas
fst
inc
inc
dec
les
sti
inc
add
insb
loope
mov
out
aad
adc
loopne
in
jne
jne
inc
rcrl
push
or
add
insb
std
mov
std
ret
adc
add
negb
dec
ret
push
and
fwait
push
add
dec
jmp
popf
outsb
jae
in
mov
ja
sub
mov
aas
ficoms
add
icebp
aad
xor
ljmp
lcall
mov
or
sub
daa
dec
inc
xchg
inc
add
add
cmp
mov
add
xor
dec
adc
fstpl
adc
inc
push
sbb
push
sub
pop
outsb
fimuls
jl
cmpsl
ret
add
or
in
dec
pop
repnz
rcll
mov
lahf
mov
add
or
je
mov
mov
ret
ret
mov
xchg
sahf
or
mov
push
mov
pop
fwait
je
pop
push
or
add
add
add
mov
add
and
pop
hlt
test
repnz
jmp
jl
imul
lods
lahf
or
mov
lea
outsb
stos
jl
icebp
test
sbbl
addb
pop
iret
adc
dec
fists
add
test
jne
push
pop
stos
call
sub
xchg
in
in
sub
in
test
xlat
sub
clc
fstpl
les
pushf
jp
xchg
jns
sub
or
mov
aaa
mov
xor
hlt
lea
das
cli
pop
lods
xor
test
out
add
vsubsd
aam
pushf
push
scas
incb
outsl
js
rclb
sub
dec
mov
jge
xor
pop
push
sub
sti
mov
lods
das
idivl
jg,pn
inc
add
fisubl
adc
ja
sub
push
adc
out
or
jmp
mov
mov
aad
or
pushf
loopne
lods
inc
mov
jl
xchg
xchg
test
or
loop
sti
hlt
or
add
dec
sbb
pop
ljmp
insl
adc
test
loop
pop
sbb
aad
adc
aaa
jg
jo
or
rcrl
xchg
push
add
pop
movb
pop
test
or
and
insl
pop
sbb
pop
inc
add
jmp
sbbl
inc
add
into
iret
repnz
inc
push
movsb
test
loopne
cmp
jle
jb
jne
mov
xor
jne
arpl
add
push
push
orl
hlt
lods
ja
add
int
stos
lods
cmpsb
jnp
test
mov
lret
test
dec
das
loope
movsl
adc
add
fwait
test
jg
adc
imul
rorl
sub
fidivrs
cmpl
add
inc
and
xchg
pop
pusha
add
sbb
mov
fmuls
cmp
mov
and
jge
jle
push
mov
outsl
ds
movsl
push
jg
push
mov
fucom
outsl
add
fdivr
jbe
and
sbb
in
mov
hlt
popa
xor
dec
adc
xor
sahf
dec
ss
pop
popf
sbb
fnstsw
repz
xchg
sub
push
add
ret
mov
add
mov
mov
xchg
sub
adc
popf
insl
sub
jmp
les
in
out
sub
or
xor
sub
lea
add
test
stc
sub
add
daa
jl
rcll
adc
jge
pop
iret
cmc
xchg
divb
cld
stc
into
cwtl
movb
stc
incb
jp
pop
cmc
cwtl
add
sbb
push
add
movsl
into
out
jg
clc
js
sub
lea
scas
daa
out
and
cmpsl
sbb
sbb
push
in
test
mov
popf
or
mull
or
add
xchg
inc
add
sbb
dec
mov
hlt
rolb
add
adc
or
adc
add
inc
add
push
push
cmp
jmp
sbb
dec
ret
dec
lea
nop
mov
test
adc
ljmpw
lods
push
repz
mov
adc
stos
xor
imul
mov
add
out
lods
test
push
push
pop
cwtl
dec
xchg
or
xor
mov
mov
repz
mov
add
sub
gs
std
int
adc
inc
add
lods
out
cmp
gs
rcl
push
les
imulb
cmp
addb
pushf
pop
lahf
cmc
xor
pop
stc
xchg
lods
cmp
sbb
cmp
add
mov
sub
xlat
in
test
cmp
mov
cmp
aaa
shrl
ja
popf
and
icebp
jnp
subl
cli
lock
ljmp
jmp
fwait
jp
inc
add
int3
imul
sbb
das
outsb
cld
in
into
jmp
fwait
lods
cli
or
xchg
clc
cli
gs
add
roll
jge
mov
jge
add
jb
fbld
push
add
in
fcmovbe
lahf
icebp
lahf
push
sahf
jmp
in
adc
mov
scas
mov
or
push
xchg
xor
je
add
aad
xor
add
xor
imul
inc
popf
enter
repnz
add
mov
test
xchg
test
lds
push
inc
mov
xor
push
iret
sbbl
cmpsl
mov
mov
add
inc
dec
add
shll
sbb
adc
mov
sub
ds
add
pushfw
ja
addb
sub
jae
dec
mov
add
xor
or
xor
cmp
lods
mov
ret
mov
sbbl
cmp
pusha
add
push
jle
aam
add
xchg
pop
xor
std
dec
fs
test
adc
mov
pop
ljmp
fld
mov
dec
mov
sub
sub
adc
mov
das
stos
sub
xor
popl
add
mov
pop
mov
xchg
jb
dec
test
lahf
push
loopne
out
ja
xchg
popf
xchg
imul
mov
push
clc
test
mov
mov
jno
add
in
cltd
nop
imul
adc
ret
lahf
xor
mov
push
mov
jne
int3
pushf
loopne
insl
in
jae
dec
mov
in
fwait
mov
sbb
and
cmp
sti
mov
adc
iret
in
mov
sub
and
inc
add
or
or
cwtl
test
cmp
jmp
scas
pop
and
das
insl
mov
and
add
rolb
inc
addb
push
scas
push
loop
loope
add
ffree
xor
movsl
sbb
jmp
jno
xchg
mov
sbb
cli
sub
sub
cmp
imul
xchg
mov
cmp
aad
or
mov
dec
cld
fwait
add
sbb
sar
or
test
rcrb
xchg
jo
lods
cmpsb
push
sub
insl
dec
cwtl
sahf
pop
leave
data16
adc
les
addb
pop
add
mov
pop
mov
add
mov
fmuls
mov
mov
and
mov
or
push
inc
mov
mov
hlt
ss
or
lea
outsl
sub
or
ds
arpl
lahf
xchg
sub
pop
dec
mov
leave
stc
negl
daa
pop
stos
xchg
stos
inc
cmpsl
sarl
inc
adc
mov
xchg
sbb
aas
xor
into
fildll
pop
ror
fimuls
lds
inc
outsb
daa
mov
sub
hlt
jae
cmpsl
jnp
push
sbb
ret
add
mov
add
int3
sbb
imul
out
xor
int
pop
sub
cmp
or
daa
inc
add
xor
dec
movb
add
cmc
push
xor
daa
adc
xor
xor
mov
push
rolb
lahf
sbb
add
aaa
outsl
xor
es
dec
or
into
test
jg
scas
inc
add
loop,pt
pushf
ss
repz
into
jns
lcall
push
xor
sub
add
add
mov
add
pop
loopne
ret
or
add
pop
xchg
fildl
aas
sahf
mov
add
mov
fst
or
add
push
lahf
addb
inc
sti
int3
mov
test
mov
xlat
cli
jmp
pop
lret
add
push
rclb
scas
or
test
in
enter
mov
je
insb
dec
mov
fs
pop
out
lret
icebp
inc
pusha
add
rolb
add
adc
push
adc
js
sub
sbb
clc
jl
das
insb
cmp
push
pop
dec
or
mov
mov
bound
sbb
add
ja
pusha
add
xchg
repz
push
imul
jne
add
lods
add
sub
sub
in
rcrb
adc
adc
jne
pop
daa
pop
jo
pusha
add
in
adc
jp
add
lcall
mov
add
jnp
push
les
out
dec
imul
repnz
and
pop
jmp
test
int3
adc
aaa
rcl
into
int3
pop
sti
test
cmpsb
inc
mov
mov
stos
jle
lahf
or
add
arpl
jmp
jge
mov
add
sub
add
push
loop
pushf
cwtl
gs
cwtl
jge
ss
sbb
xchg
xor
mov
cld
in
sub
rcrb
push
push
xorl
xor
mov
push
add
pop
adc
aas
jo
sub
mov
inc
xchg
dec
test
push
clc
and
jl
stos
inc
add
cmp
jne
ret
scas
mov
or
dec
inc
add
lods
test
bnd
das
mov
jp
arpl
add
sub
jl
cs
add
push
mov
loop
roll
roll
sub
lea
in
mov
fcmovb
push
mov
xchg
and
sub
std
push
jns
mov
add
mov
idivl
sbb
add
call
add
mov
fwait
js
ja
cmpsb
rcr
mov
dec
inc
ljmp
and
or
and
push
je
fdivl
sti
outsb
inc
add
ret
xchg
aaa
js
add
out
fdivrl
insl
sub
push
dec
pop
mov
sub
popl
inc
add
pop
jns
shl
pushf
add
xorl
xchg
fnstsw
sar
cltd
es
add
push
push
jmp
sub
cmc
add
mov
add
add
loop
pop
ret
pop
jo
push
xchg
loop
dec
addb
sbb
sub
jmp
dec
cs
in
mov
pop
add
or
push
fistpll
scas
addr16
xor
cmc
dec
xchg
aaa
push
data16
ds
test
in
sbb
jg
mov
hlt
pop
test
clc
jl
sbb
lret
push
aam
xchg
movsb
mov
add
add
mov
loope
pushf
push
push
or
pop
jno
or
ret
jae
test
add
in
xchg
arpl
mov
push
pop
adc
and
adc
cmp
or
pop
popf
out
add
subl
outsl
cmp
aas
addb
mov
lods
xchg
movsb
mov
push
cmovp
pop
adc
arpl
adc
add
mov
inc
into
pusha
add
sub
dec
jg
inc
push
cmp
sub
cltd
sbb
adc
jg
les
mov
fwait
mov
mov
add
push
jno
mov
mov
and
push
lea
in
testb
xor
in
ficoml
fucom
sbb
push
movsb
hlt
leave
addb
mov
inc
pop
int3
pop
imul
jecxz
lret
outsb
cmp
sahf
lods
rcll
shr
repz
or
or
gs
pop
xchg
lods
mov
leave
pop
jg
aad
jmp
gs
and
or
test
xchg
pop
xchg
lods
aaa
cmp
imul
sub
xchg
xor
or
inc
test
xchg
popf
jbe
jl
mov
add
out
add
jg
clc
mov
adc
push
add
popa
movsb
jne
or
lods
test
inc
data16
add
ret
adc
loope
mov
mov
add
inc
add
lahf
and
push
inc
add
xor
jg
jo
rolb
mov
ror
je
jl
xchg
mov
cwtl
rcr
mov
add
int
jo
movb
lea
mov
cltd
mov
ret
cmp
and
xor
jmp
inc
add
inc
pop
xchg
in
in
leave
pop
loope
push
adc
jne
es
xchg
push
add
dec
repz
xor
andl
sub
cmpsl
aas
add
xor
adc
and
add
das
pop
jp
mov
cmp
cmp
cs
add
data16
lods
inc
add
push
or
insl
scas
mov
add
push
jg
shr
mov
add
leave
data16
roll
add
xchg
popf
push
aad
mov
into
jnp
add
dec
leave
lods
mov
scas
dec
rcll
dec
fsubs
test
ret
enter
js
and
inc
add
cmp
dec
out
stc
ret
dec
mov
dec
xor
or
cmc
jge
out
add
in
hlt
cmp
jo
fldcw
cmpsb
hlt
ja
adcl
adc
pop
enter
mov
loopne
popf
lret
movsl
and
cwtl
movb
lock
aas
ficoms
fmuls
cmp
loopne
aad
mov
inc
add
scas
test
pushf
mov
or
in
dec
das
jp
daa
jecxz
pop
lcall
int3
loopne
sub
adc
insl
mov
stos
cmpsl
rolb
loope
insl
aas
rol
add
aas
into
mov
addb
xchg
popf
test
jg
in
mov
add
test
cwtl
mov
dec
fisubrs
sar
cmp
sbb
ret
push
dec
xlat
pushf
pop
in
imul
stos
xchg
jbe
pop
xchg
mov
add
les
adc
adc
in
das
sbb
jecxz
add
add
mov
fisttpll
cli
fildll
or
ret
pop
rolb
add
out
aad
cs
popf
mov
ja
dec
push
add
lcall
dec
jo
pop
xchg
pusha
add
sbb
add
dec
cs
in
sbb
jnp
xor
add
aad
push
xlat
popa
loope
push
int3
sub
cmp
fs
inc
add
mov
cltd
mov
jle
into
sbb
dec
xor
push
inc
cmp
dec
loopne
insl
push
and
dec
das
lds
cmp
addb
aam
out
sub
and
adc
sub
inc
leave
cltd
add
add
shll
pop
push
rolb
mov
ret
mov
add
xor
pop
cmp
stc
push
mov
mov
inc
negl
sub
adc
enter
pop
fldenv
mov
ljmp
ja
mov
sbb
mov
rcrb
push
add
movsl
movb
loope
mov
pop
or
xor
jmp
mov
movb
insl
divb
add
lock
and
fbld
fsubl
pushf
sbb
add
push
jge
and
add
icebp
lea
aaa
or
adc
sarb
mov
lods
pop
pop
and
cmp
ficompl
in
adc
dec
xor
lock
pop
leave
xchg
lea
fistpl
add
movsl
push
inc
jmp
push
adc
mov
mov
or
sub
lock
loop
lahf
xor
out
mov
cmpsl
and
mov
add
or
xchg
lock
nop
stc
sbb
loop
testl
into
pushf
add
xor
lds
nop
repz
std
fwait
add
fsts
ret
jge
gs
add
movzbl
hlt
addb
xchg
lock
push
add
add
mov
mov
fs
data16
push
xor
add
test
sub
push
xor
cmpsl
test
push
clc
mov
xchg
imull
push
add
rolb
mov
add
mov
adc
sti
clc
dec
loopne
push
mov
in
js
sbb
mov
ss
jp
xlat
xor
xchg
fwait
push
add
mov
xchg
jae
add
mov
mov
xchg
iret
sbb
fidivs
xlat
les
adcl
xlat
les
xor
jl
add
fildl
lret
and
add
pop
mov
cs
jns
inc
add
push
inc
jb
xor
xchg
nop
mov
xor
in
mov
push
cli
dec
mov
pop
sub
lods
xor
mov
dec
lcall
cltd
cs
fildll
push
in
push
pop
bound
ds
add
and
and
fs
push
pop
sti
sub
push
pop
or
push
pop
xchg
pop
sub
mov
mov
add
add
shl
add
cmp
jecxz
dec
call
stos
mov
pop
fimuls
daa
xor
mov
or
loopne
das
mov
rolb
inc
add
or
sbb
jae
fisubrs
dec
sbb
pop
lahf
les
adc
test
mov
loop
mov
sbb
add
push
add
add
xor
or
stc
inc
add
aad
add
fwait
jge
xor
sub
sub
leave
fidivl
je
das
xlat
mov
mov
faddl
in
repz
sbb
adc
inc
add
mov
daa
das
jmp
es
push
int3
mov
mov
and
cmp
test
push
cli
jns
scas
dec
test
add
xor
xor
push
or
out
lret
pop
dec
sbb
fidivrl
mov
sbb
mov
jne
cmp
cwtl
add
sub
jns
mov
jo
fs
loop
cmc
test
out
adc
push
add
cmp
jno
add
or
add
jbe
jecxz
add
loopne
lea
push
and
and
pop
repnz
push
xchg
jl
cld
out
xlat
add
push
ja
pop
push
add
adc
pop
mov
or
data16
stos
mov
push
mov
push
lods
lretw
shll
test
mov
jnp
inc
test
inc
test
fstp
adc
mov
and
mov
gs
std
lods
call
push
mov
inc
add
push
push
cld
stos
adc
or
fs
rolb
stc
fimuls
mov
data16
repz
mov
inc
cs
fs
or
add
inc
mov
call
push
mov
fiadds
inc
add
xchg
stos
rcrl
add
insb
inc
jecxz
push
xor
rolb
push
dec
addb
mov
add
popl
adc
bound
sub
rclb
clc
stos
jno
push
das
sbb
push
movsb
test
inc
or
push
fisttpl
je
and
lcall
inc
dec
jbe
mov
lea
inc
sub
add
cld
push
aaa
ret
ret
sti
cmp
jg
popf
int
movsl
pop
jp
aas
xlat
sbb
jno,pt
in
push
cmp
sub
push
or
push
adc
popa
fcompl
add
sub
inc
add
add
mov
sub
aam
and
pop
mov
mov
or
cmp
sub
xchg
dec
or
xlat
mov
mov
cmc
imul
dec
pop
sbb
ljmp
ret
jecxz
and
and
repz
inc
add
pop
test
lret
add
push
dec
jae
cmpl
std
jb
aas
xchg
push
pop
mov
cmc
pop
push
dec
lock
and
stos
addl
and
test
sbb
ret
jnp
lret
aas
xchg
mov
push
push
cmp
int
xchg
dec
loope
mov
inc
movb
or
inc
add
sub
das
and
sahf
imull
push
add
dec
sbb
sahf
pop
inc
add
inc
add
pop
mov
mov
divb
aaa
push
add
aas
int3
jg
ja
mov
jmp
ret
rcrb
dec
xor
mov
sub
rolb
enter
fistps
add
clc
mov
mov
shlb
adc
xchg
call
js
pop
xor
dec
int
adc
lea
pop
in
mov
mov
add
sub
cmp
xchg
jno
jge
mov
ficoms
adc
popa
es
jno
ffree
add
jbe
daa
imul
or
xchg
jns
arpl
xchg
loope
ss
xor
hlt
push
movsl
divb
imul
add
add
push
xchg
idivb
insb
stc
repz
pop
lds
dec
aad
andl
add
add
gs
es
lret
test
mov
or
mov
dec
fcompl
pop
push
add
push
push
in
loope
mov
sbb
in
sahf
sub
fisubrs
addl
popa
dec
hlt
adc
je
jecxz
push
inc
add
mov
pop
lea
mov
cmp
add
add
push
lods
sub
sbb
movsb
mov
add
sub
dec
xchg
cmp
mov
jbe
rcl
je
xchg
or
repnz
pop
pop
adc
lret
jge
add
sbb
mov
insl
pop
aam
imul
add
in
mov
xchg
or
mov
inc
fdivr
pop
repz
inc
in
add
out
xor
add
enter
in
lock
xchg
rolb
xor
xchg
push
xor
mov
shrl
ds
xchg
sub
add
push
lock
pop
cmp
in
addb
mov
outsl
stos
rcrl
data16
or
pop
dec
dec
cmp
adc
cmp
outsb
sbb
pop
repz
add
orl
mov
adc
push
sbb
add
test
aam
ja
jo
pusha
add
pop
pop
jae
lock
mov
into
jbe
xchg
out
cli
mov
ds
test
bound
leave
xor
jle
hlt
ficomps
cmp
rcr
mov
push
daa
push
add
pop
mov
lods
mov
add
push
dec
sub
pop
dec
pop
stc
sarb
sub
xchg
aaa
push
rcll
add
add
mov
pop
inc
mov
mov
push
cs
gs
dec
jp
les
test
or
add
daa
mov
scas
or
repnz
div
dec
inc
inc
mov
daa
xchg
push
push
imul
lds
pop
inc
add
dec
aam
xchg
ret
cmp
or
call
pop
jle
test
inc
add
sti
inc
add
or
push
jae
addb
jmp
aad
or
fsubrl
pop
cmpsb
outsb
lock
cmp
sarl
mov
aam
idiv
xchg
push
nop
ss
lret
idivl
cmpsl
push
and
dec
orl
jns
jne
push
fcomps
lea
out
dec
jbe
ret
xchg
ror
jecxz
popa
xor
ret
mov
cmp
push
pop
andl
xlat
adc
and
mov
lods
xchg
les
shll
shll
pop
xor
cmpsl
enter
add
or
pop
inc
lret
or
mov
add
cmp
add
xor
mov
aas
push
popf
mov
pop
jle
mov
add
mov
sub
rolb
dec
sbb
mov
inc
add
aaa
inc
add
and
ss
add
scas
dec
add
push
add
inc
insb
jne
decl
cmp
cmpsl
or
add
out
add
sub
ret
fstps
xchg
pop
inc
and
mov
xlat
dec
adc
mov
fnsave
add
mov
cmp
sbb
js
sub
pop
sub
ret
push
adc
ljmp
je
pop
shlb
add
ret
ret
movb
test
arpl
adc
loope,pt
inc
add
arpl
jb
cmc
jnp
jne
xchg
scas
dec
inc
sub
cmpsb
sub
rorb
add
sub
inc
add
mov
pop
add
xchg
push
scas
inc
add
test
mov
and
cmc
pop
aad
add
lret
xor
jne
mov
xor
add
jle
test
push
mov
cmpsl
dec
cmp
push
fs
add
gs
mov
cmp
pop
adc
push
pop
int3
pop
mov
cmp
mov
insb
pop
jnp
add
xor
mov
inc
add
add
sub
ja
shll
mov
add
ds
mov
xchg
sub
imul
fsts
insb
cld
add
add
push
jl
dec
push
aam
xchg
imul
addb
cmp
xchg
popf
test
int3
push
iret
test
sub
mov
call
mov
cmp
ss
jns
leave
cmp
add
sbb
or
pop
daa
fldt
pop
shll
or
nop
rorb
aas
mov
dec
jae
xchg
pusha
add
add
push
jp
mov
movb
out
icebp
nop
out
adc
int
add
mov
mov
add
cmpsl
pop
pop
xchg
incl
repnz
push
cs
int3
nop
stos
or
adc
mov
pop
push
iret
sub
push
loop
dec
mov
cmpsl
test
test
popa
dec
mov
incb
push
or
lahf
jnp
pop
jle
xlat
ss
xchg
xchg
es
leave
mov
xchg
clc
push
mov
addr16
call
or
xor
in
insb
mov
pop
aad
andl
loope
pusha
add
mov
dec
adc
frstpm(287
fstpt
add
lret
xchg
hlt
cli
mov
sub
cmp
lods
test
xchg
into
inc
add
cltd
testl
add
sbb
pop
addr16
cmp
cmc
xchg
mov
pusha
add
jb
mov
push
pop
ja
add
mov
sub
mov
mov
sub
lock
out
mov
int
hlt
rolb
bound
cmp
adc
or
or
push
loop
mov
jae
jno
sti
in
in
xchg
xchg
leave
mov
jo
inc
jo
call
cltd
loopne
cs
push
outsl
das
inc
add
fucomp
mov
inc
add
mov
xchg
jo
stc
mov
inc
add
movb
cwtl
rolb
out
popa
daa
mov
and
dec
xlat
fstpt
pop
sahf
push
in
xchg
or
dec
mov
jns
push
aad
xor
scas
lods
push
out
je
mov
jle
inc
jmp
mov
adc
inc
add
pop
pusha
add
fwait
add
ret
add
pop
aaa
daa
addb
sahf
xor
mov
jg
ret
mov
stc
dec
movsl
mov
and
add
hlt
xor
push
jbe
add
push
movsb
daa
mov
xchg
cmp
clc
insl
xchg
add
push
loope
je
inc
pop
lahf
mov
testl
lock
inc
mov
add
mov
mov
jbe
nop
cmp
xchg
push
inc
loop
push
int3
cld
hlt
mov
rorb
inc
cmc
jl
jle
arpl
inc
mov
xchg
rcl
clc
jl
movsb
cmp
jle
jnp
jmp
adc
xor
mov
pusha
add
cmpl
repnz
and
ljmp
adc
sahf
pop
or
add
mov
in
cwtl
mov
sub
and
fistpl
ja
xor
in
dec
dec
data16
mov
cmpsb
rcrl
sbb
insb
mov
or
xchg
sti
nop
and
fstpl
xchg
cmp
cmp
ret
leave
or
stos
pop
mov
xor
bound
push
jle
inc
add
mov
jl
add
jl
fs
pop
cmp
jge
shr
loop
fs
lock
and
mov
xor
push
dec
mov
sbb
fcomps
xchg
dec
fadd
add
cs
lcall
scas
addr16
ffreep
add
add
mov
xchg
cld
test
mov
pushf
clc
repnz
adc
dec
aas
out
mov
test
jl
out
adc
and
and
xor
push
sarl
inc
jmp
push
add
movsl
mov
xor
dec
and
fstp
pop
cltd
lret
mov
clc
push
xlat
add
jnp
lods
test
mov
mov
movsl
mov
add
cltd
or
and
push
inc
add
in
and
lcall
jns
pop
add
add
rolb
dec
sub
loopne
rolb
lea
mov
fistl
aam
icebp
dec
inc
push
add
xchg
jno
pop
in
add
dec
cltd
pop
fucomip
sub
scas
les
jb
cmp
add
test
add
add
lods
rolb
lret
cmp
arpl
les
gs
adc
mov
enter
sahf
and
xchg
xchg
or
outsb
loop
fnstcw
add
add
