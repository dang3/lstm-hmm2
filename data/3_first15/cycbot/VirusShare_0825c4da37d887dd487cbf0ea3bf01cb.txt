out
dec
cmovs
int3
xchg
dec
sub
mov
out
add
lret
shll
out
dec
mov
mov
into
or
int3
enter
cmpsb
movb
mov
bound
loop
or
packuswb
lods
sub
ret
sub
add
popa
push
subl
or
mov
inc
pusha
mov
inc
push
add
lret
jmp
arpl
in
push
and
and
in
or
shl
stos
mov
pushaw
add
into
or
cs
push
sub
mov
outsb
movsl
add
mov
data16
or
add
loop
loop
iret
dec
stos
out
addr16
mov
and
movsb
movntps
daa
in
iret
daa
loope
sub
dec
stos
subl
mov
inc
inc
add
push
das
cmpsb
lret
movsb
mov
cmpsl
or
loope
dec
subb
xchg
inc
sub
dec
cmpsb
cmpsl
dec
inc
movl
sub
in
es
inc
and
add
push
inc
lret
imul
jmp
inc
sub
in
and
out
push
lea
sub
loop
jmp
subl
or
add
or
ret
lods
dec
add
dec
packsswb
imul
mov
dec
addr16
or
orl
xchg
leave
inc
lea
cmpsb
jmp
jmp
inc
out
and
gs
es
outsb
ljmp
iret
dec
lds
bound
scas
inc
addl
outsl
or
lods
or
dec
add
add
arpl
and
in
inc
stos
dec
int3
jmp
imul
dec
stos
test
push
inc
pop
movsl
scas
subl
out
or
lret
shll
vmovaps
test
ror
out
das
loop
data16
cmpsb
cs
popl
ljmp
in
es
xchg
or
orl
in
lret
imul
push
test
movsb
inc
mov
mov
and
dec
inc
das
cmpsb
movw
and
mov
orl
pop
inc
jecxz
enter
xchg
mov
popa
ljmp
pop
sub
or
shl
scas
dec
lods
xchg
dec
and
lret
or
or
sub
dec
out
stos
dec
dec
mov
sub
inc
bt
sub
mov
in
and
jmp
dec
mov
push
mov
addb
mov
push
or
mov
stos
addb
arpl
cmpsl
and
or
int
add
leave
test
dec
ljmp
scas
jecxz
dec
into
out
inc
and
scas
or
insb
int3
imul
popa
dec
das
jmp
stos
ret
dec
sub
out
loope
loope
or
jmp
imul
and
cmovno
or
pop
ljmp
in
iret
subl
or
popa
test
and
popa
ucomiss
mov
mov
cmpsb
in
lea
data16
test
ret
dec
cmpsl
xchg
imul
and
fs
mov
test
sub
es
jmp
leave
stos
in
out
out
iret
push
add
lds
orl
daa
dec
gs
lods
dec
or
les
les
outsl
pop
jmp
arpl
in
and
xchg
and
bswap
inc
iret
bound
jmp
mov
outsb
test
movsb
inc
sub
int
daa
in
or
sub
stos
dec
in
xchg
out
or
ljmp
cmpsb
test
and
lds
in
andl
sysret
out
or
test
movsb
das
dec
dec
in
inc
out
or
dec
das
lea
or
lods
mov
inc
sub
movsb
lods
out
int3
xchg
insl
dec
lds
mov
out
das
or
add
or
mov
int3
int
in
mov
out
add
mov
lret
add
arpl
scas
add
rorb
lods
in
mov
add
dec
push
das
dec
or
imul
add
push
and
int
and
dec
test
in
test
test
out
insb
mov
pusha
stos
addl
arpl
ljmp
add
inc
dec
outsb
in
insl
and
sub
dec
dec
inc
lods
pop
dec
outsl
shll
dec
dec
or
inc
popa
dec
inc
dec
mov
or
or
pusha
lds
or
dec
test
add
jmp
in
call
inc
enter
int
and
test
das
stos
ret
xchg
mov
xchg
loopne
in
inc
cmpsb
call
and
in
pusha
inc
dec
mov
loopne
mov
add
rorl
movsb
sub
lret
ret
inc
mov
or
inc
add
and
movsb
test
add
popa
ljmp
mov
call
jmp
dec
xchg
arpl
or
or
out
movb
add
lea
mov
ret
and
pusha
jecxz
leave
insb
and
sub
test
rolb
or
or
inc
add
movb
or
sub
add
mov
movl
lret
test
orb
or
sub
mov
sub
int
and
mov
sub
cs
inc
test
das
scas
and
test
pusha
insb
outsb
insl
es
and
into
dec
add
in
push
sub
and
rorl
and
addr16
lods
dec
or
ret
iret
in
in
ljmp
ret
lods
lods
iret
and
daa
sub
scas
mov
add
or
test
movl
fs
lret
in
add
and
inc
and
int
loop
out
out
loop
dec
or
andl
imul
int3
in
mov
inc
lret
mov
add
and
inc
subb
or
or
sub
test
test
cmpsb
push
add
out
jmp
test
add
and
add
add
add
and
mov
add
out
addl
arpl
sub
or
daa
push
insb
loope
scas
sub
xchg
lods
outsb
movsb
das
leave
dec
xchg
push
lds
scas
mov
or
enter
gs
imul
push
shll
and
mov
outsl
test
les
gs
dec
dec
cmpsl
enter
imul
ljmp
gs
inc
sub
add
jmp
scas
leavew
ljmp
jmp
imul
and
and
and
mov
add
add
ret
movb
enter
test
int3
andl
addr16
inc
add
int
arpl
jecxz
mov
das
scas
push
or
bound
loopne
mov
cmpsl
or
int3
daa
movsb
or
dec
ljmp
out
cs
sub
data16
lea
mov
push
out
imul
or
inc
movsb
or
add
or
in
mov
in
popa
xchg
and
jmp
les
daa
les
inc
dec
outsl
test
add
mov
in
dec
es
jmp
dec
sub
int
and
insl
cs
and
lds
xchg
inc
movsb
leave
dec
out
jecxz
outsb
lods
or
out
test
jecxz
arpl
jmp
inc
rorl
iret
in
insb
inc
arpl
in
in
mov
sub
pop
rol
outsl
pop
out
mov
dec
mov
popl
mov
test
dec
rolb
mov
arpl
xsaves
lods
add
stos
loop
dec
addl
daa
insb
dec
loope
out
sub
in
insb
imul
popa
addr16
out
jmp
call
dec
and
stos
addl
add
inc
and
leave
mov
orl
dec
inc
shll
insl
dec
movsb
push
enter
push
add
push
and
add
outsl
addr16
lods
sub
addl
int
ret
inc
lret
mov
push
mov
mov
or
or
xchg
leave
mov
das
test
stos
add
cs
stos
stos
sub
addl
imul
and
pusha
mov
outsb
fs
int
mov
inc
scas
arpl
and
dec
inc
lods
dec
sub
cmpsb
add
jmp
and
mov
mov
or
outsl
stos
in
lods
and
lods
outsb
jecxz
mov
test
jecxz
stos
mov
ljmp
cmpsl
push
addr16
in
add
movsb
sub
leave
call
dec
inc
sub
pusha
imul
mov
or
dec
loopne
sub
add
out
ret
lods
add
push
sub
mov
inc
ret
fs
inc
mov
add
dec
loop
push
out
leave
dec
add
add
pop
and
add
inc
mov
popa
enter
cmpsb
inc
insb
or
push
outsb
lds
out
enter
add
add
cmpsl
dec
daa
ljmp
dec
inc
xchg
add
and
lret
lods
out
inc
test
inc
xchg
add
in
ljmp
fs
bswap
jmp
bound
in
in
and
lret
movl
loope
movsl
shr
push
dec
push
loope
outsl
test
insl
int
insl
lods
add
imul
mov
cmpsl
inc
out
ljmp
and
bound
cmpsb
imul
leave
or
lea
insb
rorl
in
mov
les
sub
dec
ret
imul
rol
lret
push
or
lods
rorb
inc
inc
add
pusha
sub
mov
lret
loopne
ret
sub
in
jecxz
orl
inc
push
mov
sub
into
out
or
inc
lods
jecxz
call
imul
cmpsb
movsl
sub
or
push
mov
mov
sub
sub
mov
dec
call
enter
mov
dec
sub
or
inc
or
imul
movl
out
xchg
or
shr
and
push
sub
imul
mov
orl
int
stos
in
and
or
bound
mov
loopne
pcmpgtw
dec
cmpsl
addl
gs
dec
ljmp
insl
sub
and
inc
test
mov
data16
bound
in
shrl
bound
test
ljmp
or
mov
inc
daa
and
mov
inc
loop
add
arpl
andl
rorl
les
lods
push
mov
dec
add
enter
daa
or
in
scas
in
add
stos
mov
dec
inc
ret
add
int3
and
lds
enter
in
test
out
mov
or
lds
test
daa
push
into
sub
inc
ret
outsb
dec
add
popa
or
insl
rolb
loope
iret
andb
mov
inc
mov
dec
cs
stos
lea
dec
dec
mov
lods
and
daa
call
sub
lea
movsb
lds
mov
outsb
and
or
insb
mov
sub
sub
in
and
mov
ljmp
push
jmp
cmpsl
orb
arpl
test
out
and
dec
movsb
dec
or
inc
test
lods
and
test
add
jge
sub
cmpsl
int
inc
test
imul
ljmp
or
test
sub
into
in
outsl
lret
stos
mov
push
stos
mov
dec
and
inc
enter
scas
arpl
out
cmpsb
ret
xchg
dec
arpl
jnp
mov
mov
and
mov
sub
test
test
les
mov
out
out
inc
sub
shrl
sub
sub
rol
les
dec
into
arpl
inc
into
in
or
cmpsl
insl
dec
ljmp
movsl
outsb
and
jmp
inc
addb
gs
test
or
dec
outsl
push
arpl
arpl
lods
mov
movsb
loopne
scas
jecxz
jmp
out
add
imul
iret
jecxz
lea
or
int3
mov
mov
or
lea
add
les
xchg
movsl
out
dec
dec
arpl
in
data16
mov
jmp
lds
dec
addb
lods
mov
inc
jmp
inc
das
sub
lds
scas
pxor
jno
test
daa
ret
int3
and
orl
scas
or
test
inc
in
mov
stos
lods
loop
sub
add
scas
mov
dec
add
lret
int
inc
lea
push
addr16
leave
inc
and
into
lret
daa
gs
add
psubsw
inc
movsb
sub
into
loopne
sub
in
cmpsb
push
dec
stos
fs
daa
lods
jmp
rorl
dec
and
dec
jmp
pop
dec
imul
call
scas
add
imul
insl
add
bound
and
loop
bswap
sub
movsb
inc
int
jmp
addb
rolb
mov
movsb
les
or
push
test
andl
loopne
sub
test
add
inc
imul
dec
addb
mov
dec
and
in
or
jmp
inc
stos
and
and
outsl
inc
mov
mov
imul
push
and
add
popa
data16
push
test
and
insl
or
cs
es
out
push
shll
scas
lret
xchg
mov
or
in
movntq
out
into
scas
add
andb
inc
movsl
loope
in
movsl
enter
or
out
in
add
in
pinsrw
jmp
test
and
dec
lea
inc
inc
movb
inc
orl
mov
outsl
mov
lret
dec
arpl
call
mov
insl
subl
or
andl
dec
mov
inc
in
cmpsl
stos
or
or
or
push
add
in
inc
add
dec
call
in
sub
inc
mov
or
and
mov
out
inc
lea
out
sub
and
les
push
imul
dec
loopne
cs
sub
rolb
stos
inc
or
das
add
addl
mov
sub
add
int
loop
and
mov
push
or
dec
inc
jmp
das
pop
inc
inc
push
jecxz
lds
test
test
sub
sub
loopne
inc
and
or
por
and
shll
mov
dec
add
subb
add
dec
sub
stos
sub
call
mov
sub
movsl
in
and
xchg
dec
or
push
in
addr16
inc
sub
lds
inc
test
les
and
and
out
xchg
into
out
imul
add
in
mov
movsb
dec
pop
out
shrl
push
pop
test
mov
ret
add
test
test
push
addl
dec
or
ljmp
add
in
sub
insl
enter
outsl
subb
inc
test
push
or
inc
in
es
leave
add
int
daa
out
out
sub
loop
scas
mov
stos
popl
jmp
vpsubsw
inc
mov
dec
gs
push
les
or
ret
mov
das
dec
and
ret
outsb
popa
addl
out
push
cmpsb
inc
cs
dec
and
in
out
outsl
in
mov
loop
movsl
imul
out
cmpsl
bound
mov
dec
inc
inc
add
sub
gs
and
mov
insl
and
add
or
scas
call
test
dec
inc
mov
inc
add
mov
cmpsb
sub
loopne
loope
lods
out
add
loopne
sub
loop
test
push
and
in
outsb
sub
inc
and
mov
dec
add
xchg
in
ljmp
cmpsl
add
mov
mov
mov
les
dec
add
lret
imul
or
add
cvtpi2ps
mov
sub
test
out
loopne
inc
mov
in
stos
int3
jecxz
add
sub
loop
inc
add
movsb
mov
and
andb
mov
push
imul
ret
insb
dec
sub
orl
outsl
out
mov
dec
mov
leave
test
es
outsl
popa
inc
mov
sub
addr16
dec
in
dec
or
add
das
or
sub
cmpsb
inc
jmp
push
insl
addb
ret
or
mov
lds
or
and
lods
inc
out
dec
cmpsl
das
push
mov
inc
out
sub
gs
ljmp
or
sub
sub
lods
or
mov
and
inc
jmp
mov
leave
add
lret
insb
data16
test
in
movsl
mov
into
lea
and
dec
out
dec
sub
dec
in
cmpsl
add
mov
ret
dec
out
or
push
outsb
in
inc
or
pop
enter
or
inc
int3
ljmp
test
test
stos
add
orb
sub
jmp
dec
mov
ljmp
mov
inc
movsl
inc
mov
lret
out
into
pop
test
scas
enter
das
dec
sub
test
jmp
dec
lds
mov
ret
fs
inc
insb
inc
add
pusha
lds
add
stos
and
lods
test
add
outsb
in
movsb
and
add
jecxz
enter
imul
xchg
int3
lret
rorb
mov
add
dec
xchg
push
or
dec
es
fisubs
pop
dec
jg
push
cli
dec
dec
adc
lock
or
loopne
lret
out
cs
mov
lret
dec
inc
repz
test
shl
push
pop
sbb
in
jne
scas
imul
imul
out
rcl
ljmp
inc
xor
notl
cli
cs
or
and
test
nop
lock
xchg
and
pop
lods
in
fs
or
lret
pop
jnp
jae
add
repz
add
lods
mov
and
movsl
mov
pop
add
shlb
dec
or
std
divb
sbbb
out
iret
add
and
mov
pusha
shlb
xchg
inc
cmp
and
jg
loop
fdivl
fs
inc
aad
rep
mov
lahf
notb
xor
mov
pop
in
scas
sbb
sahf
push
scas
xchg
ret
adc
mov
push
or
jmp
add
rcrb
mov
pop
cmp
loopne
dec
pop
pop
jb
sbb
xor
sti
fcmovu
out
adc
mov
rcrl
hlt
fbld
rorb
cmp
gs
jmp
cli
push
jne
mov
ret
data16
mov
shll
imul
ss
push
jmp
sub
icebp
ret
sbbb
loopne
adc
sub
loopne
cli
push
fstpl
in
je
mov
mov
and
imull
add
inc
into
outsb
rorb
xor
jbe
xor
mov
cmpl
xchg
jmp
jns
sub
cmp
adc
sub
xor
push
repnz
xor
dec
jnp
jmp
subb
dec
ficoml
stos
mov
sbb
push
call
out
mov
xlat
je
icebp
or
loopne
fldt
imul
inc
xor
cmpsl
xchg
pavgw
scas
fdivl
mov
in
mov
jbe
clc
subb
outsb
jmp
push
sub
cwtl
adc
inc
pusha
dec
insl
sbb
jb
fwait
inc
cld
test
test
xor
stos
stos
rol
push
leave
test
fst
push
inc
adc
push
das
jge
pop
in
jge
push
jb
jbe
inc
arpl
sbbl
in
call
or
mov
mov
out
in
ficoms
push
std
cmp
das
or
aas
jnp
sahf
in
pop
push
sub
outsb
mov
mov
cmp
hlt
pushf
xor
andl
inc
add
jno
jbe
das
jo
jmp
sbb
and
out
movsb
pop
or
enter
mov
stc
loop
adc
les
push
pop
test
sbb
inc
sbb
add
addr16
push
cmpsb
xchg
movsb
or
and
lea
inc
mov
cmc
pop
push
fdivs
xchg
shl
sbb
dec
fisubl
movsb
jmp
lock
adc
mov
push
mov
nop
or
mov
push
std
inc
notl
pusha
psubusw
cs
mov
mov
pushf
and
sub
dec
lcall
aad
xchg
std
outsl
pop
out
insl
cwtl
cmp
adc
cwtl
pop
shl
out
xchg
leave
inc
ficoms
cmpsb
sti
into
xor
inc
cmpsb
dec
and
inc
es
xchg
dec
stos
mov
test
xor
in
out
call
sub
and
mov
add
xchg
call
and
ja
test
mov
jg
repnz
or
jg
xchg
dec
loopne
and
shrl
pusha
dec
test
addr16
insb
subl
or
cmp
out
dec
ret
mov
and
jg
je
xchg
cmp
adcl
bound
sti
mov
in
dec
adc
out
inc
and
lods
dec
int
rolb
cli
mov
mov
xorb
loopne
mov
fs
iret
js
lods
shlb
sub
loopne
mov
pop
fs
in
shrb
sbb
sbb
insl
leave
lret
add
rolb
popf
sarb
mov
in
lods
inc
lret
adc
es
clc
and
cmp
mov
sbb
aas
call
test
push
push
sahf
data16
bound
jp
cwtl
orb
pop
inc
dec
xor
jno
xchg
mov
lods
loope
fcompl
mov
scas
fisubrl
mov
fsts
orb
mov
stc
sub
fisttpll
xchg
and
jns
je
mov
jl
and
out
sbb
xor
mov
decb
lock
out
jne
rcr
cmp
push
mov
negl
add
fsts
shll
mov
es
into
jg
jmp
cltd
div
mov
adc
ljmp
std
add
mov
lods
out
ljmp
jno
cmp
stos
lahf
fnsave
cld
xchg
pusha
mov
xchg
jmp
or
sub
jae
xlat
jge
outsl
stos
dec
or
repnz
jge
imul
into
xchg
pusha
add
inc
or
jb
xchg
inc
pop
pop
or
pop
lahf
fmul
mov
repz
mov
jae
jp
inc
sub
nop
add
bound
stos
push
fwait
mov
stc
dec
push
pop
lods
jp
pop
jbe
ret
icebp
jne
sarl
and
inc
and
mov
cmpsb
cmpsb
out
pop
mov
call
cmp
mov
test
xchg
enter
hlt
add
notb
stc
mov
and
outsb
insl
fcmovnbe
movsl
loopne
stc
popa
xchg
or
xchg
pop
and
sub
inc
incl
fistl
jmp
cmp
add
rolb
inc
je
iret
jo
mov
vmread
data16
sub
sti
dec
shll
jmp
push
xchg
mov
and
or
pop
and
pop
sbb
mov
add
ret
dec
mov
mov
push
cwtl
addb
push
lods
ds
neg
inc
xor
mov
mov
out
dec
pop
je
into
jne
orps
adc
out
push
lock
cs
mulb
nop
clc
mov
cmp
in
adcb
adc
aas
pop
filds
andl
sub
in
xor
out
adc
loopne
call
mov
mov
lret
inc
rcrb
ret
movsl
lret
ror
mov
add
lret
push
bound
in
pop
push
loope
fidivrs
in
fcmovne
mov
cmp
mov
push
lock
sbb
cmp
lock
cmp
aaa
mov
sbb
subb
adc
les
mov
inc
leave
mov
inc
cmc
int3
movsl
xor
mov
hlt
loopne
add
pop
fdivrs
sbb
xchg
pop
mov
push
sbb
loopne
mov
add
sbb
push
ret
loope
push
mov
and
mov
push
xchg
js
cld
inc
adc
sub
xchg
pusha
dec
js
xor
mov
sbbb
add
mov
jb
cmpw
std
data16
mov
push
fcmovu
xchg
xchg
xor
mov
addr16
into
lods
or
in
pusha
mov
and
cmp
test
cld
adc
hlt
pop
rorb
xor
test
inc
mov
cmp
mov
push
das
js
int3
lahf
mov
push
arpl
push
lods
cmp
ret
movsb
inc
pop
sub
rorb
or
loopne
ljmp
andnps
mov
je
or
pusha
dec
cmpl
jo
es
mov
and
and
xorl
ja
fsubs
enter
iret
iret
pop
or
sub
in
jl
xor
mov
addb
mov
jbe
mov
add
xlat
outsb
cltd
fmuls
rcll
je
enterw
pop
ss
sti
or
jmp
mov
xor
mov
repnz
je
or
daa
add
add
aas
fneni(8087
jns
test
call
pop
sti
add
pusha
and
xor
sbb
mov
mov
mov
cmp
and
and
lea
aam
andb
mov
sub
pop
cs
jecxz
sub
jl
cmp
ret
mov
xchg
jp
and
inc
jmp
mov
rorb
inc
cltd
loopne
icebp
cli
stc
movl
int
fwait
aam
cmp
mov
loope
test
push
scas
mov
push
xchg
mov
ss
mov
jmp
in
dec
push
jno
cmpsl
aam
int
mov
cmp
inc
xchg
and
sub
add
fadds
push
sub
into
adc
dec
ret
mov
fs
xor
repz
push
inc
inc
lods
xor
rcrb
adc
pusha
push
popf
imul
mov
inc
add
or
mov
loope
or
inc
sub
outsl
movsb
push
xchg
push
mov
inc
xchg
pop
movsb
popf
jnp
in
add
testl
inc
cmp
clc
add
pusha
and
test
sbb
xchg
push
jl
mov
mov
push
and
out
dec
inc
mov
jo
mov
ret
push
mov
push
call
arpl
and
xchg
inc
mov
pop
movsl
shll
clc
orb
mov
adc
mov
and
ljmp
inc
adc
lods
jp
loop
add
mov
pop
mov
cmp
daa
loop
mov
adc
js
dec
pushl
out
popf
or
shlb
mov
and
mov
repz
rcl
adc
pusha
out
dec
test
fisubs
pop
mov
sub
js
int
dec
mov
cmpsb
adc
jne
leave
inc
pop
dec
mov
and
mov
and
jp
fs
les
xchg
hlt
dec
sub
loopne
xlat
sbb
mov
sbb
imul
cmp
sbb
fisubrs
ret
jecxz
jl
test
ret
mov
mov
cmp
lods
cli
ja
in
cltd
lods
divl
inc
fmulp
jo
mov
pop
mov
push
jo
jnp,pn
emms
pop
or
and
add
cmp
mov
jecxz
lods
int3
push
jl
repz
and
lret
adc
and
jp
testl
in
scas
cmpsb
mov
and
inc
add
insl
cwtl
xchg
and
mov
pusha
stos
mov
cwtl
sub
jns
arpl
ja
leave
divl
and
repz
pop
rorb
lock
int
jmp
inc
ljmp
aad
leave
in
ljmp
cs
lea
xor
mov
je
lds
xchg
mov
mov
sub
xchg
add
lea
popa
mov
inc
fadd
push
mov
inc
std
lcall
adc
js
dec
repz
push
test
cmp
xchg
popf
add
mov
cmpsb
test
enter
mov
lret
out
orl
sub
aad
mov
mov
and
pop
jae
mov
mov
and
pushf
sbbb
push
out
cs
in
lret
ja
fstp
add
and
mov
into
mov
testb
daa
push
xchg
fs
insl
dec
inc
insl
stos
pop
call
in
xchg
sbb
cmp
mov
xor
mov
insl
dec
outsl
jmp
xor
hlt
mov
daa
fildl
repz
push
xchg
sub
mov
sahf
and
sahf
dec
outsl
cmpsl
sbb
inc
pusha
push
mov
scas
sub
inc
sar
jno
loope
test
es
adc
lea
movsb
inc
sbb
and
insb
out
clc
or
andb
sbb
rol
pop
sbb
or
and
push
sub
cmp
sbb
sbb
leave
jae
movsl
cmp
cwtl
add
loopne
rclb
loope,pn
daa
repz
mov
testb
js
lock
mov
clc
jle,pn
ret
cld
xorl
jl
push
xor
adc
inc
sub
ret
out
incl
mov
dec
cmp
je
mov
mov
mov
mov
sbb
fiadds
sbb
inc
mov
mov
mov
adc
add
add
sub
cmp
enter
jbe
test
xor
or
addr16
out
into
push
fildl
addr16
js
cltd
nop
sbb
cmp
shlb
repnz
dec
aas
mov
rcll
clc
icebp
out
jb
or
push
inc
cmp
test
dec
sub
cltd
in
lock
mov
pop
and
push
std
js
insb
fwait
dec
push
or
out
mov
push
in
movsb
fcom
js
mov
nop
push
orb
dec
add
and
int
sbb
rcll
mov
test
cmp
pusha
fidivs
fcoml
out
std
push
mov
add
scas
filds
loop
sbb
mov
fldt
fs
fisubrl
fisubs
inc
and
and
and
push
jg
xor
mov
sbb
adc
lret
fistpll
push
jae
jmp
out
ror
cmpsl
sub
arpl
push
dec
and
aas
push
pushf
enter
cli
subl
mov
or
mov
cli
out
push
adc
inc
fldl
sbb
add
mov
jmp
inc
jmp
jmp
jl
data16
addr16
in
js
sub
jae
ret
push
pop
xchg
gs
pop
out
test
push
push
je
xchg
push
lahf
shrl
mov
loopne
cld
je
push
mov
or
and
push
cmp
lods
addr16
arpl
sysret
sbb
or
adc
xor
inc
pop
popa
mov
jmp
sub
or
scas
mov
mov
imul
jb
push
or
mov
mov
cld
andl
mov
ljmp
in
xchg
out
hlt
movsb
mov
movsb
dec
arpl
aad
faddl
dec
lret
inc
mov
inc
mov
xchg
fsts
js
fidivrs
cmp
pusha
push
xor
sbb
cs
fnsave
mulb
ljmp
into
adc
jne
or
mov
mov
lods
das
push
xchg
cmp
sub
xor
or
jo
int
les
imul
mov
faddl
std
mov
xchg
cmp
or
mov
rcrb
pop
fwait
jl
xchg
pop
cwtl
js
iret
popf
mov
jg
lret
mov
adc
and
lahf
fstpt
adc
sarb
push
adc
xor
push
sub
mov
push
xchg
aam
jmp
inc
scas
dec
stos
xchg
mov
sahf
scas
jle
out
lcall
test
loopne
loopne
pop
insl
add
adc
in
imul
sub
mov
jo
outsb
mov
or
out
dec
add
loopne
and
mov
jnp
repnz
and
lods
iret
sahf
push
fistpl
inc
cmp
aam
xor
int3
jmp
sub
mov
fdivs
test
shlb
loope
push
adc
and
push
pop
adc
les
mov
xchg
icebp
mov
push
pop
dec
pop
js
pushf
xchg
and
jle
lea
dec
imul
scas
in
sbb
jl
mov
pop
jge
jns
imul
dec
sbb
inc
sub
jae
je
pop
dec
test
jo
cmp
xchg
loope
xor
add
mov
cmpsl
mov
mov
scas
movsb
movsb
and
nop
add
inc
nopl
and
cs
jae
cmpsl
rcl
loopne
jl
mov
rorb
je
lret
push
cmp
push
neg
dec
push
aad
test
xchg
sahf
int3
cmp
sub
mov
outsl
jmp
adc
or
aam
jo
inc
pop
or
jns
push
ret
loope
out
lods
and
push
mov
push
cmp
inc
xchg
outsb
and
test
or
jmp
fstl
add
or
fmull
pop
jl
jno
add
call
jl
mov
push
xchg
stos
movsb
inc
scas
insl
xchg
xor
loopne
cli
xchg
adc
aam
inc
fmul
pusha
insb
inc
loop
imul
inc
and
mov
or
rclb
sub
pop
subb
push
cs
stos
pop
ret
addr16
sahf
imul
pusha
cld
stos
imul
and
repz
jae
les
cli
xchg
int3
mov
or
pop
jae
push
or
shll
daa
fimuls
add
xlat
mov
push
into
jle
loope
cli
adc
mov
pop
les
jl
cmp
dec
cmp
popf
les
mov
popa
sub
pushf
jo
test
or
mov
and
jns
sbb
add
inc
adc
or
insb
mov
lcall
jno
sahf
dec
dec
push
add
add
pop
call
mov
cmp
pop
xchg
pusha
pusha
xlat
cmpb
and
push
shll
sub
sti
test
insl
test
mov
jns
cmpsb
sbb
pusha
arpl
sub
xchg
loop
mov
xlat
lods
orb
pop
add
fdivs
adc
rol
mov
mov
add
lods
mov
xadd
shl
insb
or
cltd
dec
xchg
fidivs
push
fptan
mov
pop
xchg
mov
cmc
mov
fisttpll
push
lcall
cmpsl
pop
loopne
fidivl
or
subl
dec
aaa
mov
dec
xor
lea
mov
pusha
push
fidivl
test
add
pop
inc
pushf
js
jns
es
sbb
test
pop
push
fistl
fucomi
mov
mov
mov
loope
jmp
cmp
je
popa
bound
mov
mov
movsl
mov
sbb
jecxz
jmp
fbld
cmp
outsl
rdpmc
mov
ss
push
shr
sbb
mov
rol
xor
lea
lds
arpl
test
loopne
xor
loope
or
push
xchg
xor
sbb
icebp
fs
and
mov
mov
cmpsl
fimuls
lds
mov
ret
lcall
insb
fcmovnu
imul
je
imull
bound
dec
xchg
shr
lock
xchg
test
clc
fs
sbbl
jo
pop
xor
sub
cs
movsl
sti
pop
push
adc
push
sbb
shrb
mov
lcall
xchg
fisttpl
xor
sub
and
sbbb
in
push
and
dec
xor
push
aad
arpl
out
orb
loope
push
loopne
add
stos
mov
inc
push
pusha
sub
mov
lret
imul
cmp
lret
push
fucomi
pop
push
cmp
stos
dec
int3
dec
adc
add
mov
xchg
add
cmc
mov
sub
imul
pop
and
adc
mov
cs
rcl
push
jns
jge
mov
lret
add
adc
and
cmc
push
xchg
pop
jns
push
dec
into
loope
inc
aaa
insl
and
mov
pop
mov
push
popa
xchg
rolb
dec
xor
adc
sbb
jg
jne
or
insb
pusha
dec
fimull
dec
dec
jg
ja
jl
pop
out
dec
fs
pop
ss
mov
pop
sbb
lds
movsb
test
dec
in
andb
shrl
ss
jae
dec
and
xor
inc
mov
insb
mov
and
mov
ret
add
jecxz
sbb
pusha
imul
sbb
xchg
rcl
fwait
das
xlat
xor
sahf
push
popf
push
cmpsb
and
shll
pushf
or
cmp
and
lret
ds
add
and
daa
shrl
in
inc
mov
hlt
xor
testb
mov
pop
dec
xor
jge
in
in
mov
mov
pushf
js
ja
ljmp
inc
pusha
rolb
sub
test
call
mov
fistpl
je
out
std
xchg
jns
clc
lods
aaa
rclb
pop
lods
xchg
lcall
inc
inc
daa
ja
jne
out
test
xlat
push
jp
sahf
add
mov
lret
xchg
enter
xorb
enter
inc
test
nop
mov
xlat
mov
rcr
add
jmp
lods
sub
in
and
xchg
lods
std
push
add
mov
mov
adc
inc
inc
xchg
inc
add
mov
jp
cmp
out
scas
sub
jl
jg
pop
jmp
jecxz
or
in
dec
mov
loope
inc
inc
add
xchg
jp
push
push
lods
mov
dec
shl
pop
add
add
ljmp
dec
fnsave
sahf
sbb
add
cmp
jl
inc
imul
orl
adc
and
daa
dec
out
out
add
or
cmp
nop
hlt
mov
inc
rep
sub
jecxz
mov
mov
mov
jbe
push
pop
mov
sbb
mov
shll
mov
rorl
stos
in
cmpsb
mov
and
sub
aas
std
xlat
pop
clc
mov
xchg
rclb
cmc
ss
pop
in
adc
lret
or
das
jno
sbb
movsl
test
loopne
sbb
cmpsl
jbe
xchg
add
sti
mov
ret
cmpsl
out
sub
ret
mov
mov
mov
sbbb
push
push
scas
cmpsl
leave
xor
insl
push
scas
sbb
in
pop
push
imul
cmp
int3
repz
sarl
in
fs
mov
xchg
mov
xchg
loopne
ret
and
jns
push
scas
mov
push
hlt
orb
bswap
mov
ja
xor
movsb
jmp
sbb
sub
popl
jg
mov
imul
test
enter
jmp
mov
xchg
push
call
test
test
jp
out
mov
aam
repz
js
push
pop
xor
movsb
rolb
testb
pop
fistpl
pop
cmp
or
adc
xor
add
je
pop
cmp
jno
lcall
inc
sti
and
loop
ret
add
pusha
ljmp
lcall
pop
fmul
dec
mov
pusha
sbb
mov
sar
stos
sbb
repnz
xorl
in
int
out
push
and
mov
mov
xor
dec
lods
repnz
push
aam
inc
push
mov
jp
testl
int3
std
je
xor
lods
push
jb
xchg
push
sar
mov
in
or
test
fisttpl
xchg
mov
pop
das
xor
jge
inc
inc
push
jmp
mov
xchg
fldt
lret
mov
jp
xor
cmp
icebp
xor
lahf
outsl
addr16
or
jno
mov
pushf
or
int3
sbb
pushf
push
cwtl
dec
add
lods
dec
push
mov
adc
inc
call
sub
push
mov
add
lea
push
push
push
and
push
push
push
mov
cld
lea
test
je
jmp
pusha
lock
add
or
add
cmp
add
jmp
push
push
call
or
sub
leave
ret
ret
sub
xchg
xchg
mov
sub
or
add
add
lea
sub
shr
dec
not
sub
sub
jne
push
pop
add
lea
stc
jmp
jmp
push
mov
mov
push
loop
lea
orl
andl
push
push
push
push
push
push
cmp
jne
callw
and
jne
loope
lea
movl
push
push
push
bnd
lea
test
cld
je
lcall
dec
sbb
shr
sarb
loopne
inc
fnstsw
andb
and
fsts
shlb
out
inc
ret
mov
int3
xchg
adc
lods
cltd
pop
test
out
sbb
xchg
cmp
and
add
sbb
out
push
sbb
hlt
xorb
push
outsl
xor
nop
push
inc
push
fs
push
jmp
setp
add
pop
cmpsl
fs
rcrl
lock
roll
enter
dec
loop
leave
stos
xchg
dec
in
adc
roll
stos
out
inc
xchg
pop
mov
inc
cmpsb
pop
mov
rorl
sbb
inc
push
add
add
shlb
and
add
mov
iret
iret
mov
sbb
scas
test
xchg
jmp
cmp
scas
cld
pushf
in
add
cmp
lret
cmc
movsb
hlt
mov
adc
fdivrl
lret
cli
pop
fldl
xor
sbb
rol
pop
out
pop
mov
mov
push
inc
push
dec
cwtl
mov
aad
xchg
push
js
jp
push
ja
stos
pop
mov
ret
lret
cmp
push
jbe
mov
mov
cmpsb
imul
shll
ds
lcall
and
push
inc
int
dec
lods
sti
dec
shll
loopne
push
ret
negb
loop
int
push
inc
sbbb
and
inc
xchg
mov
stos
cmp
push
xchg
mov
repnz
testl
dec
mov
clc
cmpb
nop
add
pop
or
mov
cld
pop
movsl
faddl
add
xchg
test
push
sub
mov
fcmovu
sahf
shlb
cltd
push
xor
fbstp
jns
repnz
or
mov
cli
popf
push
fcomp
popf
cmp
jno
jo
mov
ja
sbb
aad
lret
stc
jbe
jge
xchg
sbb
pusha
int3
cmpsl
xchg
push
test
lods
xchg
test
cmc
adc
inc
push
cmp
xchg
arpl
scas
jnp
scas
pop
inc
sbb
cmp
sbb
mov
push
loop
outsb
cmp
or
dec
jno
lds
orb
add
arpl
cltd
aaa
mov
cmc
push
and
lcall
enter
dec
scas
push
loop
mov
cmp
push
loope
push
xchg
bound
out
flds
or
mov
repnz
xor
push
xor
add
fstl
call
pusha
push
insb
dec
cmp
in
movsl
or
iret
sub
mov
loopne
leave
je
jge
scas
sub
dec
fwait
adc
dec
mov
stos
and
jecxz
aas
and
mov
scas
lds
cld
mov
out
and
icebp
and
adc
jae
cmp
out
dec
or
adc
dec
pop
jb
sbb
bound
sbb
movsb
inc
rcrb
imul
mov
mov
add
and
cltd
ljmp
js
popf
jecxz
sub
insb
out
in
push
xchg
lods
stos
mov
test
add
and
mov
subl
test
sbb
es
pop
repnz
adc
shrl
insl
fs
adc
inc
inc
xchg
scas
loope
lea
cmp
sub
in
or
divb
pop
int
out
int3
jecxz
lahf
adc
or
loopne
lret
lcall
negl
dec
mov
cwtl
cld
mov
inc
es
movsl
or
add
and
subb
mov
lret
xor
sahf
or
je
clc
cwtl
loopne
push
cmpl
stos
std
fs
cmp
test
adc
jns
jno
add
outsl
inc
popa
bound
lahf
push
push
add
and
xor
stos
mov
movsl
test
dec
fsubrl
mov
bound
dec
mov
shll
in
dec
add
faddl
or
loopne
jmp
xchg
pop
outsl
out
popa
push
stos
xchg
popf
inc
lahf
xor
int3
push
and
and
mov
xchg
imul
cmc
xchg
fwait
dec
jg
mov
stos
movsl
movnti
ja
lods
mov
shrb
xor
cld
jl
sahf
stc
lods
leave
dec
int
pushf
pop
cmp
jns
cmp
cmp
cmp
cmpsb
push
ja
cs
mov
jne
xchg
outsl
and
xchg
cmp
push
cmp
shl
icebp
jg
aam
xchg
in
addl
cmp
stos
push
jo
jno
and
jae
push
mov
jl
daa
iret
popa
adc
and
jns
repnz
stc
adc
pusha
outsb
test
or
jo
lods
and
xchg
dec
pop
cmp
cmp
sti
ss
roll
cmp
push
dec
rcr
jp
xchg
fstps
mov
pusha
cmpb
fidivrs
or
add
jg
pop
cmp
cs
push
cs
faddl
or
cmp
hlt
filds
sub
js
scas
push
cmc
dec
imulb
lret
xlat
or
pop
into
jno
ret
stc
clc
cmp
xchg
mov
bound
lahf
lcall
pushf
or
mov
repz
icebp
adc
or
dec
adc
jbe
dec
pop
cltd
fidivrl
cli
adc
loopne
mov
repz
fsts
xchg
aad
add
cwtl
push
and
mov
jl
xchg
js
loope
fdivl
mov
or
ficompl
lock
scas
or
decb
fdivl
fcmove
icebp
aas
rcr
js
xor
push
ljmp
leave
cmp
lods
adc
and
in
push
std
mov
les
fucomip
psubusw
iret
fcoml
andl
stos
jle
and
js
test
test
idiv
pop
or
add
pushaw
cwtl
sub
imul
mov
sbb
in
in
xchg
xchg
loopne
outsb
fldenv
sahf
bound
jbe
jne
push
mov
fisubl
jge
push
cltd
inc
or
rorb
sarb
ret
mov
adcb
push
sub
or
jae
imul
or
das
pop
xor
es
sbb
faddl
push
movsb
push
iret
insl
sub
cmp
popf
idiv
test
mov
std
inc
pop
ret
pop
add
test
mov
mov
mov
and
aam
nop
add
and
lock
les
mov
movsb
pusha
mov
mov
aam
aam
push
xor
cmp
popa
mov
mov
lock
mov
push
fldenv
ret
outsl
call
pusha
loope
lock
pop
mov
xchg
fdivrs
ja
cwtl
sbb
xor
mov
outsb
inc
test
mov
sbb
ljmp
ds
pusha
lods
pop
fidivrs
mov
jp
dec
cmpsl
xor
push
bound
xor
sbb
subb
mov
loopne
popa
mov
push
jp
test
mov
sub
aam
aaa
pop
push
mov
adcl
into
pop
rclb
popf
jno
sarl
pop
add
stos
pop
aaa
test
repz
popa
xchg
inc
inc
xchg
mov
shll
fnstsw
pop
js
xor
lods
repz
xchg
xchg
fs
xor
inc
in
dec
pop
xchg
fcoml
inc
movl
cmp
stc
rcrl
mov
ss
sub
adc
push
adc
rclb
das
imul
lret
mov
pop
and
pop
xchg
pushf
lock
in
cld
sub
jecxz
mov
cld
push
mov
sub
rcll
gs
and
lock
mov
mov
outsl
sahf
mov
jg
add
mov
cmc
sar
enter
mov
xor
mov
xlat
mov
xlat
mov
sbb
xor
add
rorb
es
inc
inc
jne
push
nop
inc
pusha
sbb
pop
dec
call
and
pusha
mov
jmp
aaa
rcrb
dec
stos
test
ret
pusha
cmp
in
rorl
out
add
cltd
andl
hlt
pusha
stos
popf
mov
sbb
push
ret
sbb
inc
add
and
rorl
push
mov
mov
add
xchg
mov
or
and
pand
jge
enter
cmp
mov
scas
sbb
xchg
push
inc
add
nop
pop
inc
test
jns
sbb
loope
adc
incl
pop
jp
and
adc
jl
mov
lret
pandn
add
and
insl
push
pop
pop
sub
ror
sub
xchg
and
xchg
rolb
mov
sub
insb
dec
jno
pop
xchg
notb
or
loopne
adc
jl
aas
fnstenv
mov
push
nop
pop
inc
test
or
xchg
dec
les
dec
jns
cs
cmp
ftst
sbbb
faddl
das
or
sub
shrl
push
and
sub
rolb
enter
mov
loope
mov
les
sbb
pusha
jle
jmp
xchg
cmp
dec
popf
inc
and
shll
std
popf
jecxz
jnp
mov
inc
lods
pmulhw
add
mov
in
inc
popa
cmc
test
and
loopne
cli
outsb
and
insb
and
jle
jbe
sbb
mov
stos
lcall
ret
cld
roll
pushf
jo
hlt
int
arpl
mov
clc
inc
mov
sub
push
jmp
ret
add
sarb
lret
inc
fsts
sub
cwtl
enter
fimuls
rorl
push
imull
fwait
dec
inc
loope
pop
and
testb
xor
rcll
je
mov
stos
jne
pop
cmpsl
fcomip
inc
rclb
xor
test
pusha
inc
and
sub
mov
jl
jg
dec
mov
xor
push
mov
sbb
push
es
sti
js
add
dec
imul
dec
lods
orl
and
inc
mov
or
inc
push
cmpsl
mov
push
cmp
pop
jae
or
inc
fistpll
test
jnp
enter
faddl
and
icebp
dec
test
popa
fisttpl
mov
cmp
jecxz
mov
js
jecxz
stos
lea
pop
iret
push
les
ret
ficomps
rcrb
inc
pop
sub
push
xchg
xlat
xchg
dec
mov
xor
popf
push
push
dec
int
arpl
decb
mov
cmpsl
call
pop
pop
xlat
shll
xor
jo
andb
sub
pop
imul
adc
int3
sbb
loopne
leavew
and
jle
fldcw
call
sbb
cwtl
les
stos
or
inc
cwtl
or
popf
nop
mov
mov
gs
mov
mov
lds
add
push
stc
cmpsb
mov
mov
ficoms
sub
in
iret
push
cmp
ljmp
in
cmp
out
push
mov
insl
popa
mov
sbb
inc
inc
mov
sbb
lds
mov
sbb
stc
sub
cltd
xchg
or
sarl
or
sbb
mov
andb
mov
xchg
fsubs
xchg
andb
imul
xor
in
roll
je
rcl
inc
fiaddl
call
sbb
call
mov
bound
fldenv
mov
scas
mov
xchg
lea
ljmp
sub
xabort
mov
inc
in
sarb
mov
cs
sbb
sub
addps
xchg
popf
lcall
outsl
jl
rcl
cmpb
mov
dec
lret
mov
or
clc
xchg
ja
push
fxch
cmp
or
mov
xor
cld
push
add
jge
bswap
int
fisubl
push
ret
sub
push
mov
lret
add
add
sub
pushf
sbb
mov
ss
rep
mov
sbb
loop
jle
int
test
mov
xor
aad
cmp
xchg
insb
dec
lret
xchg
xchg
sbb
cmpsl
jge
lea
ds
mov
xor
ja
sbb
call
mov
mov
es
jbe
bound
inc
jo
or
in
and
mov
xchg
cli
sbb
addr16
add
mov
jmp
imul
daa
or
jmp
pop
mov
stos
xchg
add
mov
lahf
mov
jb
sub
repz
push
popa
sub
or
sbb
addr16
xchg
fdivr
xchg
mov
call
out
adc
lret
stos
imul
mov
adc
mov
sbb
push
sbb
repnz
les
lcall
fadds
fcmovb
je
popa
repz
xlat
cs
mov
and
mov
insl
pop
jbe
test
inc
mov
jbe
dec
adc
mov
cmp
fwait
mov
pop
outsl
mov
in
jnp
stos
fldt
test
adc
cmpsl
dec
inc
addl
pushw
scas
mov
mov
or
sarb
cli
ss
imulb
xchg
out
sbbl
lret
in
aaa
mov
cmpsl
dec
scas
std
sbb
imul
pop
mov
adc
shll
lret
cmpsb
arpl
sub
push
and
jecxz
pop
inc
mov
loopne
or
movsb
push
mov
cmp
and
mull
out
push
xchg
adc
and
es
jle
sti
adc
mov
xor
inc
int3
in
add
inc
mov
push
call
cs
add
add
in
int3
pop
mov
clc
nop
nop
nop
nop
jae
movsb
repnz
cmp
data16
sub
clc
nop
nop
nop
nop
jae
add
add
insb
xor
mov
clc
nop
nop
nop
nop
jae
add
add
push
mov
leave
cs
out
add
or
and
int
jne
nop
push
mov
leave
cs
cmp
add
lea
add
nop
nop
nop
nop
jae
add
cwtl
cwtl
or
cwtl
add
clc
nop
nop
nop
nop
jae
add
cmp
add
add
push
inc
push
push
mov
xchg
ret
icebp
push
dec
cwtl
add
cwtl
add
add
mov
jmp
nop
nop
jae
icebp
add
add
cmp
add
test
sbbb
rclb
sbb
inc
add
add
or
add
add
call
clc
nop
nop
nop
nop
jae
mov
add
add
add
nop
push
mov
leave
cs
test
mov
js
pop
add
loope
and
fs
mov
nop
push
mov
leave
cs
in
pop
test
push
adc
dec
push
nop
push
mov
leave
cs
movsb
mov
mov
in
add
repnz
nop
nop
nop
nop
jae
add
add
stos
add
add
pusha
les
nop
nop
nop
nop
jae
add
add
add
aaa
add
add
dec
push
mov
xchg
ret
mov
push
dec
enter
das
cs
mov
push
mov
xchg
ret
add
pop
js
cwtl
add
fadds
incl
rorb
call
nop
jae
add
adc
add
jmp
push
mov
leave
cs
add
add
stos
add
fidivrs
and
mov
xchg
ret
add
mov
add
stos
add
cmp
scas
clc
nop
nop
nop
nop
jae
add
test
aaa
or
add
nop
nop
nop
nop
jae
mov
sti
add
add
and
add
nop
nop
nop
nop
jae
and
stos
pop
add
insl
mov
clc
nop
nop
nop
nop
jae
add
add
das
mov
mov
add
add
mov
add
inc
add
popa
mov
push
jns
nop
push
mov
leave
cs
mov
adc
add
pop
add
nop
nop
nop
nop
jae
add
repnz
dec
test
sbb
mov
push
mov
xchg
ret
add
add
add
pop
aaa
not
ret
clc
nop
nop
nop
nop
jae
add
and
add
add
testb
dec
add
clc
nop
nop
nop
nop
jae
fmuls
add
add
dec
add
add
push
add
fistpl
clc
nop
nop
nop
nop
jae
mov
add
jno
mov
push
mov
xchg
ret
add
mov
and
add
sub
dec
mov
icebp
nop
push
mov
leave
cs
pop
adc
in
add
add
add
test
push
push
inc
add
adc
add
inc
mov
nop
push
mov
leave
cs
add
add
add
aaa
adc
push
add
test
inc
sbb
adc
or
or
or
sub
nop
push
mov
leave
cs
test
test
add
cmp
daa
push
clc
nop
nop
nop
nop
jae
add
mov
pop
add
shlb
nop
push
mov
leave
cs
adc
cmpsl
add
or
add
clc
nop
nop
nop
nop
jae
jno
add
movsb
add
mov
push
mov
xchg
ret
mov
aaa
cwtl
loope
add
add
daa
ret
clc
nop
nop
nop
nop
jae
add
stos
add
adc
add
mov
lcall
add
nop
nop
nop
nop
jae
push
mov
shl
push
shr
clc
nop
nop
nop
nop
jae
dec
pop
mov
cmp
add
mov
mov
xchg
ret
loop
add
repnz
sti
data16
push
clc
nop
nop
nop
nop
jae
add
rcr
add
push
popa
fld1
clc
nop
nop
nop
nop
jae
loop
add
mov
in
jns
lods
and
add
nop
nop
nop
nop
jae
movsb
add
add
loop
in
sbb
nop
nop
jae
inc
add
push
cmp
add
cmp
push
inc
add
add
add
add
aaa
repnz
mov
add
push
mov
xchg
ret
sti
add
lea
jecxz
sbb
add
clc
nop
nop
nop
nop
jae
add
add
add
add
pop
clc
nop
nop
nop
nop
jae
add
enter
add
add
push
add
mov
or
ret
add
add
add
or
add
jo
mov
leave
cs
mov
push
add
add
iret
push
add
shr
pop
add
clc
nop
nop
nop
nop
jae
cwtl
add
fmull
add
test
sbb
add
clc
nop
nop
nop
nop
jae
add
add
push
mov
xchg
ret
add
cmpsl
iret
sti
pop
add
notb
dec
aam
add
clc
nop
nop
nop
nop
jae
add
add
mov
or
mov
dec
add
mov
adc
add
add
loop
enter
nop
nop
nop
nop
jae
add
push
adc
bound
imul
nop
nop
nop
jae
dec
add
add
add
lea
add
push
mov
xchg
ret
icebp
test
add
mov
add
add
loope
mov
mov
add
add
nop
nop
nop
nop
jae
fdivrs
add
adc
nop
nop
nop
nop
jae
or
fadds
jno
mov
mov
inc
add
add
mov
add
push
cmp
xchg
int3
jl
pop
clc
nop
nop
nop
nop
jae
add
add
add
add
or
in
leave
dec
add
aam
add
xchg
dec
add
add
add
nop
push
mov
leave
cs
mov
add
push
push
mov
xchg
ret
and
mov
add
pop
cmpsl
xchg
mov
clc
nop
nop
nop
nop
jae
add
stos
and
add
sbb
clc
nop
nop
nop
nop
jae
loop
or
add
out
jg
nop
push
mov
leave
cs
loope
add
in
loopne
pop
or
add
nop
nop
nop
nop
jae
add
add
add
add
or
addl
push
add
clc
nop
nop
nop
nop
jae
mov
add
out
data16
nop
nop
nop
nop
jae
add
dec
mov
cwtl
add
add
inc
adc
nop
nop
nop
nop
jae
data16
dec
add
stos
cmp
add
mov
leave
cs
add
movsb
add
shrb
and
dec
add
add
add
mov
add
test
push
mov
xchg
ret
js
cwtl
jno
add
add
add
dec
adc
nop
nop
jae
aaa
dec
or
testb
hlt
xchg
es
nop
nop
nop
nop
jae
mov
loop
mov
fld1
clc
nop
nop
nop
nop
jae
rclb
dec
add
mov
add
test
push
mov
xchg
ret
movsb
jmp
loopne
iret
loopne
cwtl
add
loope
inc
add
add
js
push
cwtl
cwtl
and
das
add
popf
lods
push
mov
xchg
ret
add
repnz
faddl
loopne
repnz
push
and
nop
nop
nop
jae
bound
andl
test
clc
nop
nop
nop
nop
jae
push
adc
sti
rcll
nop
nop
nop
nop
jae
add
repnz
rolb
add
nop
push
mov
leave
cs
repnz
jl
jno
add
sub
mov
dec
andl
nop
nop
nop
jae
add
pop
dec
shl
fisubrs
movsl
sub
clc
nop
nop
nop
nop
jae
add
cmp
add
add
add
mov
clc
nop
nop
nop
nop
jae
fmull
add
add
inc
push
clc
nop
nop
nop
nop
jae
fcomps
add
rolb
adc
push
mov
xchg
ret
in
push
in
add
add
add
mov
mov
clc
nop
nop
nop
nop
jae
add
or
fsub
add
ror
clc
nop
nop
nop
nop
jae
add
add
iret
add
cmpsl
dec
add
adc
imul
in
leave
cs
add
pop
clc
nop
nop
nop
nop
jae
pop
add
add
add
add
mov
xchg
ret
push
sti
add
mov
loopne
adc
sbb
add
cwtl
adc
sbb
add
and
loope
add
jno
fistpl
nop
push
mov
leave
cs
add
add
cmpsl
add
add
cltd
and
clc
nop
nop
nop
nop
jae
and
icebp
adc
lea
in
push
std
inc
sub
divl
cmpsb
inc
add
add
add
clc
nop
nop
nop
nop
jae
jl
and
add
add
add
add
and
stc
clc
nop
nop
nop
nop
jae
add
and
or
incl
jl
bound
jmp
add
add
fsubrl
test
add
stos
add
push
or
push
mov
push
add
xor
fwait
out
and
sub
mov
cmp
outsl
push
push
mov
xchg
ret
add
out
cmp
add
mov
jp
add
dec
add
enter
add
sarl
in
mov
push
mov
xchg
ret
shl
add
adc
or
nop
pop
sub
nop
nop
nop
nop
jae
add
add
add
dec
push
clc
nop
nop
nop
nop
jae
add
adc
add
nop
nop
nop
nop
jae
mov
add
inc
loope
add
push
mov
xchg
ret
or
mov
add
add
call
clc
nop
nop
nop
nop
jae
add
add
jmp
jne
mov
in
add
add
add
add
in
or
nop
and
xor
enter
push
mov
leave
cs
loopne
add
add
test
add
adc
add
clc
nop
nop
nop
nop
jae
dec
cmp
decl
add
add
loopne
insb
push
add
clc
nop
nop
nop
nop
jae
add
add
mov
cmp
nop
nop
nop
nop
jae
sbb
adc
add
arpl
stos
clc
nop
nop
nop
nop
jae
or
stos
add
jmp
cmpsl
dec
push
mov
add
and
stos
scas
repnz
add
fiadds
add
jg
nop
push
mov
leave
cs
add
add
cmpsl
add
add
stos
fiaddl
mov
leave
cs
pop
das
add
sti
jno
push
dec
mov
push
mov
xchg
ret
cwtl
add
test
add
push
mov
xchg
ret
mov
add
add
adc
nop
push
mov
leave
cs
cmp
rolb
cwtl
add
lock
xchg
add
clc
nop
nop
nop
nop
jae
add
enter
adc
insb
adc
mov
leave
cs
add
jl
aaa
bound
stos
adc
cmpl
mov
leave
cs
fsubs
icebp
rolb
insb
js
fistpl
push
mov
xchg
ret
sti
fadds
loope
movsb
data16
dec
lret
fwait
push
mov
xchg
ret
add
add
js
add
add
in
jno
inc
nop
sub
ja
clc
nop
nop
nop
nop
jae
add
cmpsl
dec
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
add
pop
inc
add
jno
add
faddl
cwtl
add
add
jno
iret
push
nop
push
mov
leave
cs
sbb
aaa
add
add
shl
clc
nop
nop
nop
nop
jae
add
mov
add
mov
loope
inc
add
dec
add
jl
mov
rorb
push
add
add
nop
nop
nop
nop
jae
add
mov
dec
add
pop
pop
push
clc
nop
nop
nop
nop
jae
add
add
add
add
cmpsl
add
incb
sbb
clc
nop
nop
nop
nop
jae
icebp
inc
bound
add
clc
nop
nop
nop
nop
jae
and
add
data16
iret
jge
push
mov
xchg
ret
or
add
mov
test
subl
arpl
add
mov
add
jmp
lret
cwtl
sbb
aam
insb
jns
jmp
out
add
add
faddl
add
decl
and
push
mov
xchg
ret
lea
loop
loop
bound
add
add
scas
div
nop
push
mov
leave
cs
add
cwtl
out
add
add
in
add
adc
mov
xchg
ret
mov
cmp
jmp
shlb
xchg
lcall
jae
jl
add
push
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
clc
nop
nop
nop
nop
jae
add
dec
mov
shlb
mov
clc
nop
nop
nop
nop
jae
dec
sti
adc
loop
ficomps
add
clc
nop
nop
nop
nop
jae
cwtl
add
jno
cwtl
test
clc
nop
nop
nop
nop
jae
test
or
cmp
add
add
loope
push
mov
xchg
ret
add
icebp
pop
add
add
sti
test
nop
push
mov
leave
cs
add
cmp
fsubr
shll
nop
nop
nop
nop
jae
mov
out
add
or
rcl
js
clc
nop
nop
nop
nop
jae
loopne
pop
add
add
add
nop
nop
nop
jae
add
add
mov
add
mov
add
in
add
xchg
cltd
inc
push
xchg
add
js
add
mov
clc
nop
nop
nop
nop
jae
add
add
cld
pushf
clc
pusha
js
les
push
clc
nop
nop
nop
nop
jae
lea
movsb
cs
out
bound
inc
add
jle
mov
nop
nop
nop
nop
jae
add
test
add
clc
nop
nop
nop
nop
jae
add
add
push
repnz
add
clc
nop
nop
nop
nop
jae
add
add
add
add
mov
sub
mov
xchg
ret
icebp
add
add
repnz
arpl
nop
push
mov
leave
cs
pop
sti
or
movsb
add
adc
rcl
clc
nop
nop
nop
nop
jae
add
add
faddl
cmp
cmp
nop
nop
nop
jae
add
add
add
dec
push
clc
nop
nop
nop
nop
jae
add
add
movzwl
clc
nop
nop
nop
nop
jae
add
add
add
movsb
out
in
add
nop
push
mov
leave
cs
cmp
jl
add
add
mov
add
add
flds
xor
add
fs
clc
mov
out
add
dec
pop
push
mov
xchg
ret
add
add
add
mov
clc
nop
nop
nop
nop
jae
faddl
add
add
add
nop
nop
jae
cwtl
cwtl
or
cmpsl
dec
inc
js
add
cmp
nop
nop
jae
incl
repnz
incl
cmpsl
inc
repnz
add
clc
nop
nop
nop
nop
jae
add
add
push
push
mov
xchg
ret
add
add
add
or
dec
fsubrl
xor
clc
nop
nop
nop
nop
jae
mov
or
add
sub
push
mov
leave
cs
inc
cmp
out
add
repnz
adc
push
mov
xchg
ret
test
icebp
mov
or
push
add
add
fs
nop
nop
jae
add
add
pop
add
mov
and
sub
clc
nop
nop
nop
nop
jae
jno
cwtl
pop
sbb
mov
sbbl
cs
add
cs
pop
add
add
push
clc
nop
nop
nop
nop
jae
or
adc
dec
add
add
add
dec
cwtl
fadds
aas
push
push
mov
xchg
ret
add
mov
mov
popf
lea
push
mov
xchg
ret
add
cmp
mov
add
mov
nop
push
mov
leave
cs
inc
dec
or
add
add
add
add
add
add
cmp
test
mov
xchg
ret
in
cwtl
pop
movsb
add
add
mov
shl
nop
push
mov
leave
cs
out
and
add
add
add
add
clc
nop
nop
nop
nop
jae
js
fsubr
repnz
add
add
out
insb
and
subb
add
nop
nop
nop
jae
add
add
cwtl
add
mov
add
add
mov
add
dec
das
add
dec
xchg
sub
push
clc
nop
nop
nop
nop
jae
add
rorb
push
mov
push
mov
fiadds
add
add
add
dec
jp
lods
cld
cmc
push
mov
push
or
inc
add
pop
dec
push
cmpsb
ret
sbb
push
test
add
add
nop
nop
nop
nop
jae
add
pop
loop
test
nop
push
mov
leave
cs
add
inc
add
add
add
sbb
nop
nop
nop
nop
jae
or
aaa
add
add
jl
and
mov
inc
and
clc
nop
nop
nop
nop
jae
or
dec
bound
sbb
nop
nop
nop
nop
jae
add
add
add
and
add
nop
nop
nop
nop
jae
jmp
lea
movsb
sti
adc
call
mov
leave
cs
repnz
add
add
or
cmp
dec
add
clc
nop
nop
nop
nop
jae
fadds
add
xorl
mov
xchg
ret
add
add
cmpl
add
or
nop
nop
jae
and
loop
loopne
add
testb
sbb
or
add
cs
add
add
and
add
sarb
or
and
rorl
jae
add
inc
movsb
jl
cmp
cmp
in
popl
testl
fsubrl
xchg
add
xchg
add
lahf
and
mov
xchg
ret
add
mov
shlb
mov
mov
xchg
ret
divb
test
add
and
or
nop
nop
nop
nop
jae
add
aaa
add
dec
add
enter
pop
nop
push
mov
leave
cs
adc
add
push
clc
nop
nop
nop
nop
jae
movsb
add
test
add
add
push
mov
leave
cs
add
add
jl
add
psubb
sub
add
add
or
add
scas
jns
nop
nop
jae
add
add
or
loope
iret
sti
adc
push
mov
xchg
ret
pop
add
cwtl
adc
push
das
clc
in
sub
loopne
push
jns
shlb
mov
xchg
ret
add
or
in
movsb
icebp
and
notb
add
mov
add
add
fadd
add
icebp
das
stos
add
add
clc
nop
nop
nop
nop
jae
add
out
add
dec
mov
nop
nop
nop
jae
sti
test
cmp
dec
in
je
push
mov
roll
or
add
mov
add
xchg
mov
pop
repz
pusha
test
pop
inc
add
negb
cmp
add
add
iret
je
clc
nop
nop
nop
nop
jae
add
add
scas
mov
clc
nop
nop
nop
nop
jae
add
add
nop
nop
jae
mov
add
add
adc
add
sub
nop
nop
jae
cwtl
cmp
and
add
add
or
add
nop
nop
nop
jae
sti
add
pop
add
fdivs
in
inc
push
push
mov
xchg
ret
add
out
mov
loop
repnz
fdivrs
nop
nop
nop
nop
jae
add
add
add
add
out
or
push
clc
nop
nop
nop
nop
jae
test
das
add
dec
add
mov
clc
nop
nop
nop
nop
jae
dec
adc
add
enter
jne
add
add
leave
cs
add
add
cs
stos
shr
clc
nop
nop
nop
nop
jae
add
fadds
add
jmp
neg
sbb
push
mov
xchg
ret
loopne
pop
cmp
add
rorb
fistpl
mov
xchg
ret
test
dec
or
je
jb
clc
nop
nop
nop
nop
jae
add
testb
pop
jmp
nop
nop
nop
jae
add
cwtl
adc
fadd
or
imul
xchg
ret
add
add
jl
rolb
push
imul
nop
nop
nop
jae
mov
icebp
jl
add
add
fdivrs
cltd
add
push
mov
xchg
ret
inc
add
push
mov
test
add
clc
nop
nop
nop
nop
jae
add
add
inc
mov
imul
nop
nop
jae
add
jmp
or
mov
xchg
ret
add
add
lret
mov
leave
cs
mov
das
add
sub
scas
mov
add
clc
nop
nop
nop
nop
jae
add
add
add
push
test
lea
mov
xchg
ret
add
add
add
add
mov
clc
nop
nop
nop
nop
jae
add
cwtl
add
cmp
sahf
cmp
nop
nop
nop
nop
jae
add
add
loopne
add
add
mov
push
mov
push
mov
xchg
ret
decl
add
push
and
add
clc
nop
nop
nop
nop
jae
inc
mov
add
add
movsb
push
push
pop
clc
nop
nop
nop
nop
jae
add
idivb
js,pn
add
add
out
and
lock
add
clc
nop
nop
nop
nop
jae
add
rcr
add
add
dec
push
nop
push
mov
leave
cs
das
cmpsl
jmp
or
mov
rep
clc
nop
nop
nop
nop
jae
sbb
out
fadds
add
xchg
test
push
mov
xchg
ret
jno
loope
add
add
pop
adc
add
cmp
push
nop
push
mov
leave
cs
add
add
add
add
loope
jmp
mov
add
clc
nop
nop
nop
nop
jae
add
add
and
clc
nop
nop
nop
nop
jae
add
add
add
in
insl
sbb
in
leave
cs
add
mov
sbb
dec
scas
movzwl
clc
nop
nop
nop
nop
jae
adc
mov
push
mov
add
dec
add
add
iret
mov
add
inc
add
xor
mov
jl
pop
clc
nop
nop
nop
nop
jae
and
dec
and
repnz
add
push
clc
nop
nop
nop
nop
jae
add
push
dec
test
add
add
dec
add
subl
test
jno
sti
inc
and
add
add
mov
clc
nop
nop
nop
nop
jae
das
in
mov
add
cs
clc
nop
nop
nop
nop
jae
add
add
add
adc
add
push
mov
xchg
ret
add
loope
add
in
add
add
add
orb
nop
nop
nop
nop
jae
mov
out
add
dec
bound
add
or
addb
or
ret
jno
jno
loope
fdivr
bound
dec
add
or
fistpl
push
mov
xchg
ret
aaa
add
mov
enter
imul
xchg
ret
add
enter
add
add
sub
push
mov
xchg
ret
add
push
movsb
or
dec
cs
lea
movl
stos
pop
inc
add
mov
add
lea
insl
inc
clc
nop
nop
nop
nop
jae
jl
loop
add
pop
movsb
ret
aas
add
imul
add
lea
loopne
mov
add
clc
nop
nop
nop
nop
jae
adc
add
inc
add
outsb
add
nop
nop
jae
cwtl
add
add
das
add
and
pop
add
ret
add
clc
nop
nop
nop
nop
jae
jno
loopne
cs
add
add
rolb
fistpll
clc
nop
nop
nop
nop
jae
add
and
add
add
rorb
and
pop
clc
nop
nop
nop
nop
jae
fdiv
mov
fmuls
testb
xor
xchg
add
push
mov
xchg
ret
add
test
add
or
add
push
mov
xor
push
mov
xchg
ret
cmp
adc
adc
les
cld
nop
push
mov
leave
cs
mov
add
add
ljmp
nop
nop
jae
incl
and
data16
mov
add
nop
nop
jae
add
or
add
mov
sbb
imul
mov
add
clc
nop
nop
nop
nop
jae
bound
add
cwtl
add
rorl
push
mov
leave
cs
cmp
orl
add
mov
or
cmp
cltd
add
add
pusha
add
fs
jns
ds
jne
sbb
dec
xor
clc
nop
nop
nop
nop
jae
jno
add
add
add
sub
pop
pop
push
mov
xchg
ret
add
add
or
inc
add
iret
sbb
add
movswl
clc
nop
nop
nop
nop
jae
data16
mov
movsb
add
add
add
nop
push
mov
leave
cs
enter
add
sti
sbb
mov
decl
add
and
call
sub
mov
add
inc
clc
xchg
add
clc
nop
nop
nop
nop
jae
in
add
add
mov
pop
clc
nop
nop
nop
nop
jae
add
iret
add
pop
stos
incl
add
or
nop
nop
nop
nop
jae
das
add
dec
add
adc
jl
hlt
and
fld1
clc
nop
nop
nop
nop
jae
and
addl
cmp
mov
shr
nop
push
mov
leave
cs
jno
add
add
stos
add
icebp
push
mov
nop
nop
nop
nop
jae
add
enter
pop
adc
hlt
push
clc
nop
nop
nop
nop
jae
sti
add
add
rolb
add
data16
nop
nop
nop
nop
jae
pop
add
add
jno
add
cmp
mov
and
nop
nop
nop
nop
jae
add
add
add
or
loopne
inc
mov
clc
nop
nop
nop
nop
jae
add
add
cmpl
mov
leave
cs
jmp
add
add
insb
insb
add
nop
push
mov
leave
cs
add
add
add
nop
push
mov
leave
cs
lea
pop
stos
sbb
add
lea
out
mulb
mov
leave
cs
rolb
jno
add
pop
cmp
dec
add
and
nop
nop
nop
jae
add
icebp
jmp
fcomps
pop
sub
clc
nop
nop
nop
nop
jae
add
adc
add
ljmp
nop
jae
lea
add
fadds
movsb
add
add
bound
add
nop
push
mov
leave
cs
add
jl
and
incl
or
aaa
lret
shl
clc
nop
nop
nop
nop
jae
test
add
mov
lods
nop
push
mov
leave
cs
loop
add
jmp
jl
add
or
clc
nop
nop
nop
nop
jae
add
add
jl
adc
sub
nop
nop
nop
nop
jae
add
mov
add
mov
add
nop
nop
nop
nop
jae
mov
add
add
add
shrl
insb
cs
nop
nop
nop
nop
jae
loopne
cmp
std
mov
clc
nop
nop
nop
nop
jae
add
push
add
clc
nop
nop
nop
nop
jae
loop
das
and
test
test
or
dec
cmp
nop
nop
nop
nop
jae
rolb
or
push
xor
movsb
nop
push
mov
leave
cs
add
add
add
fidivl
test
pop
cmp
addl
add
add
add
mov
mov
nop
nop
nop
jae
push
lea
add
add
fadds
add
push
mov
clc
nop
nop
nop
nop
jae
or
rolb
add
sub
mov
xchg
ret
cwtl
js
pop
add
dec
iret
data16
rolb
je
mov
dec
sbb
nop
push
mov
leave
cs
or
cwtl
mov
cs
sbb
add
loop
rclb
adc
inc
lods
xor
add
clc
nop
nop
nop
nop
jae
cmp
add
add
mov
clc
nop
nop
nop
nop
jae
das
add
pop
add
outsl
push
mov
mov
popa
cmpsb
add
add
xor
sbb
in
inc
jae
jecxz
sbb
pusha
jl
pop
sbb
add
push
mov
xchg
ret
test
add
add
aaa
add
add
movsb
cmp
add
add
add
out
sbb
add
and
fwait
add
fwait
add
push
mov
xchg
ret
add
dec
add
in
dec
add
stos
clc
nop
nop
nop
nop
jae
dec
and
addl
mov
push
mov
xchg
ret
dec
cmpsl
cmpsl
add
add
mov
pop
xor
push
mov
leave
cs
add
add
add
add
divb
clc
nop
nop
nop
nop
jae
fadd
enter
add
add
ret
push
mov
xchg
ret
out
repnz
add
add
xchg
and
psubsb
add
nop
nop
nop
nop
jae
inc
jno
add
rolb
testl
nop
push
mov
leave
cs
add
add
and
nop
push
mov
leave
cs
and
add
iret
add
mov
imul
add
nop
nop
nop
nop
jae
cmp
add
jmp
push
mov
xchg
ret
iret
add
add
dec
add
clc
nop
nop
nop
nop
jae
cs
iret
add
loop
in
mulb
fwait
lea
nop
push
mov
leave
cs
stos
add
jno
add
dec
mov
dec
sub
cs
incl
add
mov
pop
cmp
fs
lods
ljmp
add
clc
nop
nop
nop
nop
jae
dec
iret
out
add
cmp
ss
call
clc
nop
nop
nop
nop
jae
lea
add
mov
jno
xor
clc
nop
nop
nop
nop
jae
sbb
add
and
add
cmp
test
push
mov
xchg
ret
dec
add
add
mov
add
test
add
add
nop
nop
nop
nop
jae
add
loopne
mov
fistpl
push
mov
xchg
ret
add
aaa
or
add
add
dec
cld
mov
rcll
insb
inc
add
add
add
cmp
cwtl
add
pop
inc
add
enter
mov
pop
icebp
pop
mov
cwtl
pop
lea
push
mov
leave
cs
aaa
add
add
repnz
add
add
cwtl
fs
out
push
nop
push
mov
leave
cs
add
dec
addl
jmpw
pop
clc
nop
nop
nop
nop
jae
add
add
mov
adc
loope
pop
add
push
mov
mov
add
add
pop
add
sub
add
out
stos
clc
nop
nop
nop
nop
jae
add
js
mov
test
clc
nop
nop
nop
nop
jae
test
add
add
bnd
pop
sbb
clc
nop
nop
nop
nop
jae
add
fcoms
incl
sub
aam
pushl
nop
push
mov
leave
cs
dec
cwtl
add
add
add
imul
xchg
ret
cwtl
add
add
inc
add
bound
push
pop
push
mov
xchg
ret
dec
add
add
loop
cmp
fcmovnu
call
nop
jae
add
add
add
nop
nop
nop
nop
jae
add
adc
mov
js
cmpsl
lret
leave
jmp
mov
add
faddl
cwtl
add
gs
clc
nop
nop
nop
nop
jae
pop
iret
loopne
inc
jl
add
test
xor
call
clc
nop
nop
nop
nop
jae
adc
rolb
pop
icebp
fdivs
dec
sti
add
clc
nop
nop
nop
nop
jae
loop
add
or
or
nop
nop
jae
add
loop
faddl
add
jno
add
inc
push
mov
xchg
ret
cmp
test
add
loopne
mov
add
clc
nop
nop
nop
nop
jae
add
add
add
add
arpl
jmp
nop
nop
jae
test
and
adc
add
add
and
nop
nop
nop
nop
jae
decl
cwtl
adc
clc
nop
nop
nop
nop
jae
add
add
add
repnz
add
in
leave
cs
mov
add
mov
inc
inc
nop
pop
pusha
xchg
in
xchg
nop
push
mov
leave
cs
stos
add
rolb
xor
mov
xchg
ret
add
cmpsl
pop
icebp
bound
add
add
push
mov
testl
imul
sbb
add
add
nop
nop
nop
nop
jae
add
stos
add
add
add
js
ror
inc
clc
nop
nop
nop
nop
jae
and
mov
add
add
test
add
nop
push
mov
leave
cs
icebp
mov
add
push
sbb
mov
xchg
ret
fdivl
pop
add
add
stos
cwtl
cwtl
add
cmp
mov
push
mov
xchg
ret
add
add
adc
mov
lea
xchg
ret
add
mov
add
add
add
mov
dec
mov
clc
nop
nop
nop
nop
jae
add
fadds
fadds
add
jmp
jp
push
push
nop
push
mov
leave
cs
mov
add
add
add
pop
add
push
inc
dec
mov
clc
nop
nop
nop
nop
jae
or
cmpsl
add
js
pop
add
sbb
pusha
mov
nop
nop
nop
jae
mov
add
add
mov
inc
dec
mov
clc
nop
nop
nop
nop
jae
add
data16
add
pop
out
jg
rclb
cs
loop
mov
add
test
push
mov
leave
cs
cmp
adc
or
clc
nop
nop
nop
nop
jae
add
push
add
mov
adc
add
clc
nop
nop
nop
nop
jae
add
loop
jno
jmp
push
mov
push
out
add
addr16
fldl
dec
xor
in
leave
aaa
add
and
nop
nop
nop
nop
jae
add
add
sub
add
nop
nop
nop
nop
jae
add
jl
pop
add
cwtl
les
sahf
add
add
cs
dec
cmpsl
mov
add
cwtl
mov
pop
clc
nop
nop
nop
nop
jae
movsb
jmp
js
iret
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
add
mov
push
push
mov
xchg
ret
pop
loope
mov
pop
add
dec
add
push
clc
nop
nop
nop
nop
jae
cs
mov
add
add
mov
jmp
add
add
pop
add
add
loope
mov
jmp
mov
nop
nop
nop
nop
jae
add
add
aaa
fdivr
add
pop
fsts
in
add
add
imul
add
pop
inc
xor
dec
cmp
test
nop
push
mov
leave
cs
add
pop
add
add
push
add
mov
push
clc
nop
nop
nop
nop
jae
add
loop
add
loopne
mov
test
jmp
mov
leave
cs
js
test
mov
jb
mov
clc
nop
nop
nop
nop
jae
add
add
ret
aas
xchg
clc
nop
nop
nop
nop
jae
add
pop
add
add
jl
mov
or
nop
push
mov
leave
cs
mov
add
cwtl
nop
enter
sar
nop
nop
nop
jae
or
add
mov
or
push
mov
xchg
ret
das
or
mov
add
add
add
fdiv
xor
push
mov
xchg
ret
or
add
add
jmp
add
loope
clc
nop
nop
nop
nop
jae
add
cmp
add
in
clc
nop
nop
nop
nop
jae
dec
inc
add
add
or
je
clc
nop
nop
nop
nop
jae
add
fadds
add
mov
xor
nop
nop
jae
iret
add
or
add
inc
jmp
xchg
inc
add
mov
movsb
add
aaa
pop
clc
nop
nop
nop
nop
jae
stos
adc
enter
or
jmp
clc
add
clc
je
add
mov
loopne
or
add
cwtl
shrb
nop
nop
nop
jae
add
test
add
mov
clc
nop
nop
nop
nop
jae
add
testb
add
add
js
sbb
cli
clc
nop
nop
nop
nop
jae
add
cmp
mov
mov
and
in
leave
cs
add
out
mov
mov
add
mov
nop
nop
jae
add
cwtl
add
add
add
clc
nop
nop
nop
nop
jae
add
pop
lea
pop
cmp
mov
xchg
ret
push
loope
add
bound
mov
add
add
mov
nop
nop
nop
jae
test
mov
mov
loope
or
add
clc
nop
nop
nop
nop
jae
add
incl
das
add
scas
lea
test
add
clc
nop
nop
nop
nop
jae
add
addl
push
stc
jne
clc
nop
nop
nop
nop
jae
add
pop
movsb
add
add
call
icebp
rolb
jno
out
jno
add
and
add
add
dec
add
cmp
xchg
inc
cwtl
add
or
nop
push
mov
leave
cs
add
test
enter
nop
push
mov
leave
cs
add
or
sti
das
loop
repnz
mov
inc
lea
xchg
ret
add
add
add
add
push
mov
xchg
ret
add
out
add
or
pop
add
sbb
mov
xchg
ret
icebp
add
add
add
add
mov
push
mov
leave
cs
add
add
mov
push
mov
in
loop
add
ds
mov
push
push
fdivl
decl
test
in
clc
nop
nop
nop
nop
jae
add
add
nop
nop
nop
nop
jae
js
add
or
cwtl
das
enter
add
nop
nop
nop
nop
jae
loopne
add
add
js
add
add
pop
push
mov
xchg
ret
jl
rolb
decl
adc
add
es
clc
nop
nop
nop
nop
jae
add
rol
add
mov
mov
add
xchg
mull
mov
outsb
add
add
or
adc
loopne
push
nop
nop
nop
jae
iret
cmp
add
add
rorl
nop
jae
add
add
stos
cs
test
nop
nop
nop
nop
jae
loop
or
cmpsl
js
add
jno
add
push
mov
pop
mov
insb
add
add
xchg
add
adc
xchg
sbb
movsl
add
lret
add
add
add
add
push
test
and
nop
nop
nop
jae
faddl
in
push
add
xor
jb
jmp
adc
add
mov
add
das
cmp
add
loope
js
push
push
mov
xchg
ret
adc
add
dec
cwtl
add
push
mov
xchg
ret
inc
das
cwtl
mov
add
mov
nop
nop
jae
add
add
add
add
mov
add
push
clc
nop
nop
nop
nop
jae
pop
add
cmpsl
add
add
push
cmp
testb
jmp
outsl
inc
add
mov
mov
lea
jno
jge
nop
push
mov
leave
cs
cwtl
add
add
add
mov
sbb
add
nop
nop
nop
nop
jae
mov
add
lahf
lea
clc
nop
nop
nop
nop
jae
add
add
add
mov
in
jne
nop
push
mov
leave
cs
stos
pop
adc
add
mov
xchg
ret
data16
sti
loope
add
cmp
add
cs
cli
movsb
out
rclb
cs
add
jno
and
data16
mov
fwait
push
mov
xchg
ret
stos
add
add
rolb
cmp
stos
loop
addl
nop
nop
jae
mulb
add
add
ja
rclb
cmp
and
pop
add
add
jmp
clc
nop
nop
nop
nop
jae
add
loopne
add
add
push
add
mov
pop
clc
nop
nop
nop
nop
jae
add
add
aaa
add
cs
call
inc
add
movsb
or
add
rcl
or
pusha
scas
or
and
inc
lea
push
mov
xchg
ret
or
mov
iret
lea
add
roll
mov
xchg
ret
add
push
add
shlb
sub
cs
add
add
push
bound
jb
push
mov
xchg
ret
mov
lcall
adc
mov
sub
jb
clc
nop
nop
nop
nop
jae
add
stos
add
stos
icebp
dec
loop
test
jae
clc
nop
nop
nop
nop
jae
das
dec
cmpsl
add
add
mov
or
add
inc
sub
nop
nop
nop
nop
jae
iret
add
cwtl
add
jno
add
push
nop
push
mov
leave
cs
add
add
add
mov
je
imul
cwtl
sar
jmp
enter
stos
and
enter
enter
nop
nop
jae
dec
add
adc
adc
ja
xor
add
clc
nop
nop
nop
nop
jae
lea
add
or
test
lods
cltd
jne
clc
nop
nop
nop
nop
jae
icebp
inc
jmp
or
mov
xchg
ret
add
shl
add
dec
add
mov
add
nop
push
mov
leave
cs
add
or
add
add
mov
leave
cs
sti
add
add
mov
dec
add
jle
add
add
add
lea
add
add
mov
sub
nop
nop
nop
nop
jae
dec
add
add
enter
cmpsl
popf
add
nop
push
mov
leave
cs
loop
add
loop
and
rorb
clc
nop
nop
nop
nop
jae
jl
add
jno
jno
stos
clc
nop
nop
nop
nop
jae
add
out
test
test
adc
out
cld
pop
add
push
mov
xchg
ret
addl
add
add
lahf
push
mov
add
adc
cli
add
scas
nop
cmp
bound
sub
cmp
clc
nop
nop
nop
nop
jae
or
adc
rclb
mov
or
ret
push
out
mov
cmp
add
mov
nop
push
mov
leave
cs
incl
das
add
add
jae
clc
nop
nop
nop
nop
jae
add
jl
add
add
and
xor
mov
nop
nop
nop
jae
jmp
enter
dec
js
jb
dec
lea
push
mov
xchg
ret
js
add
add
add
xchg
mov
adc
mov
jmp
add
nop
push
mov
leave
cs
lea
data16
movsb
add
push
mov
leave
cs
and
in
add
adc
cmpl
nop
push
mov
leave
cs
adc
aaa
inc
test
aaa
js
jo
call
clc
nop
nop
nop
nop
jae
dec
add
test
pusha
clc
nop
nop
nop
nop
jae
jl
divb
sbb
push
xchg
leave
xchg
inc
add
add
loopne
mov
add
mov
arpl
xchg
ret
cmp
add
jno
loopne
ret
fistpl
clc
nop
nop
nop
nop
jae
add
add
add
add
add
xchg
mov
clc
nop
nop
nop
nop
jae
enter
add
add
add
push
mov
xchg
ret
mov
das
data16
dec
add
xor
xchg
inc
add
aaa
add
mov
add
enter
enter
nop
nop
nop
nop
jae
add
loop
add
add
fsubs
nop
nop
nop
jae
cmp
fdivrl
sbb
daa
push
push
mov
xchg
ret
add
fadds
add
inc
stos
loope
add
cwtl
sbbl
add
mov
add
sbb
in
or
or
repnz
movsb
clc
nop
nop
nop
nop
jae
add
add
add
subl
clc
nop
nop
nop
nop
jae
fdivs
add
add
sti
push
clc
nop
nop
nop
nop
jae
inc
cwtl
add
cmp
add
or
add
inc
push
mov
xchg
ret
cmp
push
idivb
add
jae
push
mov
xchg
ret
pop
sarb
addl
add
decl
mov
sar
call
cs
add
stos
add
andb
nop
nop
jae
faddl
and
cmp
and
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
nop
nop
nop
nop
jae
pop
add
cmp
add
clc
nop
nop
nop
nop
jae
sbb
cmpsl
sti
add
adc
add
rol
dec
add
dec
add
add
add
pushf
je
scas
mov
push
mov
xchg
ret
in
add
cwtl
aaa
das
pop
add
add
mov
clc
nop
nop
nop
nop
jae
jmp
add
jp
shl
push
mov
xchg
ret
add
add
add
jl
push
add
clc
nop
nop
nop
nop
jae
rolb
fsubrl
shlb
add
xchg
sbb
xchg
mov
adc
nop
nop
nop
nop
jae
mov
add
test
scas
sbb
push
mov
leave
cs
mov
sbb
add
in
cmpsl
add
mov
clc
nop
nop
nop
nop
jae
mov
add
mov
add
mov
call
clc
nop
nop
nop
nop
jae
jno
addl
lods
clc
push
rorl
nop
nop
nop
jae
inc
add
cmp
fadds
adc
fwait
cld
clc
nop
nop
nop
nop
jae
mov
loopne
add
add
clc
nop
nop
nop
nop
jae
add
out
add
add
or
sub
push
mov
xchg
ret
add
add
add
add
add
nop
nop
nop
jae
dec
add
incl
repnz
add
add
add
rorl
mov
xchg
ret
mov
add
add
add
add
push
clc
nop
nop
nop
nop
jae
das
add
aaa
sbb
test
mov
or
stos
push
clc
nop
nop
nop
nop
jae
add
add
add
adc
mov
push
mov
add
bound
and
add
xchg
sbb
pop
jne
clc
nop
nop
nop
nop
jae
add
add
add
adc
sub
cs
push
add
mov
add
call
nop
push
mov
leave
cs
xorl
mov
incl
add
add
loop
add
add
add
cwtl
jo
and
mov
mov
outsl
add
cmpsb
pop
sbb
add
add
inc
add
push
add
int
clc
nop
nop
nop
nop
jae
add
faddl
cmp
add
dec
adc
nop
nop
nop
nop
jae
add
jl
add
repnz
add
pop
shll
clc
nop
nop
nop
nop
jae
add
add
add
push
mov
clc
nop
nop
nop
nop
jae
das
icebp
add
addl
or
lahf
push
clc
nop
nop
nop
nop
jae
and
add
cs
add
push
sahf
sbb
jg
mov
mov
add
movsb
add
mov
mov
xchg
outsl
add
clc
nop
nop
nop
nop
jae
add
add
cwtl
and
ljmp
ret
add
add
dec
push
add
mov
push
mov
leave
cs
push
push
add
sti
repnz
add
call
nop
nop
jae
add
adc
add
add
gs
nop
nop
nop
nop
jae
fadds
add
jecxz
clc
nop
nop
nop
nop
jae
add
adc
js
add
mov
movswl
clc
nop
nop
nop
nop
jae
add
add
aaa
je
je
clc
nop
nop
nop
nop
jae
fadds
add
add
sbb
stos
push
clc
nop
nop
nop
nop
jae
mov
add
add
mov
clc
nop
nop
nop
nop
jae
pop
mov
adc
testb
cmpsw
xor
clc
nop
nop
nop
nop
jae
add
cs
mov
imul
mov
and
add
add
mov
add
adc
clc
nop
nop
nop
nop
jae
aaa
dec
adc
add
add
clc
nop
nop
nop
nop
jae
add
mov
add
mov
push
add
add
clc
nop
nop
nop
nop
jae
jmp
call
mov
clc
nop
nop
nop
nop
jae
add
add
add
inc
inc
push
sub
clc
nop
nop
nop
nop
jae
cbtw
mov
orl
fistpl
clc
nop
nop
nop
nop
jae
add
add
push
cmp
call
nop
jae
repnz
or
sti
add
test
nop
nop
nop
nop
jae
adc
dec
dec
jl
add
dec
shr
clc
nop
nop
nop
nop
jae
add
add
add
add
bnd
mov
add
add
add
lods
xor
pop
xor
sahf
dec
mov
pushl
xchg
xor
mov
clc
nop
nop
nop
nop
jae
cmpl
bound
das
add
call
push
mov
xchg
ret
and
pushl
add
repnz
das
add
aaa
mov
loopne
add
nop
nop
nop
nop
jae
add
mov
add
nop
nop
jae
aaa
add
add
mov
add
add
add
mov
add
add
mov
insl
inc
dec
add
enter
add
nop
nop
nop
nop
jae
add
add
dec
mov
add
pop
inc
add
add
and
or
test
dec
push
mov
add
push
daa
hlt
add
add
int3
xlat
cltd
data16
mov
push
nop
nop
nop
nop
jae
add
add
loope
cmp
iret
add
and
pop
add
nop
push
mov
leave
cs
bound
add
add
add
call
clc
nop
nop
nop
nop
jae
and
add
fidivs
clc
nop
nop
nop
nop
jae
add
addl
push
push
mov
xchg
ret
cwtl
add
add
out
test
stos
adc
adcl
dec
add
shlb
or
dec
adc
add
push
out
add
sub
add
or
movsl
cmp
fnstcw
imul
and
add
mov
add
mov
leave
cs
cmp
incl
loop
add
cmp
nop
nop
jae
cmpsl
loope
icebp
add
dec
adc
push
add
icebp
add
nop
push
mov
leave
cs
jmp
add
data16
andl
nop
nop
jae
add
stos
repnz
pop
nop
push
mov
leave
cs
mov
add
add
enter
or
mov
xchg
ret
add
add
push
out
add
add
mov
add
sbb
subb
in
push
mov
xchg
ret
jl
add
add
add
dec
add
add
mov
int
fcoms
dec
popa
inc
add
add
add
sbb
add
mov
clc
nop
nop
nop
nop
jae
das
cmpl
movsb
and
push
je
clc
nop
nop
nop
nop
jae
dec
jno
loop
test
call
nop
nop
nop
jae
add
add
add
dec
dec
add
clc
nop
nop
nop
nop
jae
test
lea
add
add
add
stos
pop
clc
nop
nop
nop
nop
jae
das
cs
add
data16
data16
cmp
nop
nop
nop
nop
jae
mov
fsubl
repnz
push
add
call
add
add
cmpsl
add
and
cwtl
out
and
dec
stos
pusha
clc
nop
nop
nop
nop
jae
jl
add
add
adc
rcrl
mov
leave
cs
fsubs
adc
sbb
add
fwait
push
mov
xchg
ret
and
add
add
add
pop
lret
mov
push
mov
xchg
ret
add
icebp
add
incl
gs
clc
nop
nop
nop
nop
jae
add
in
add
test
dec
jb
mov
nop
push
mov
leave
cs
mov
pop
js
cmpsl
add
inc
shl
test
nop
push
mov
leave
cs
loop
add
loop
add
add
nop
push
mov
leave
cs
add
add
fsubl
mov
adc
clc
nop
nop
nop
nop
jae
rolb
add
repnz
add
fsts
in
add
add
add
mov
loopne
add
cmp
in
mov
dec
rorb
mov
xchg
ret
add
mov
add
iret
cmp
cwtl
mov
push
mov
xchg
ret
push
add
enter
add
add
pusha
mov
nop
nop
jae
pop
add
cmp
lea
nop
push
mov
leave
cs
add
push
add
fdivl
testb
pop
mov
push
mov
xchg
ret
add
add
xorl
add
push
mov
leave
cs
push
and
add
sti
pop
adc
jmp
nop
jae
aaa
or
negb
test
repz
clc
nop
nop
nop
nop
jae
mov
pop
add
pop
add
mov
pop
clc
nop
nop
nop
nop
jae
add
dec
add
dec
sbb
cmpb
nop
nop
nop
nop
jae
stos
add
add
pop
add
test
nop
nop
nop
nop
jae
dec
aaa
adc
shlb
push
clc
nop
nop
nop
nop
jae
pop
adc
add
jbe
push
jo
cld
clc
nop
nop
nop
nop
jae
mov
add
in
add
negb
nop
nop
nop
nop
jae
add
das
mulb
or
mov
leave
cs
add
pop
add
icebp
push
inc
fld1
nop
push
mov
leave
cs
add
add
add
add
cwtl
add
jge
push
mov
xchg
ret
add
adc
stos
add
add
inc
mov
fwait
nop
push
mov
leave
cs
add
add
add
addl
add
nop
nop
nop
nop
jae
and
adc
aaa
add
and
fldl
mov
leave
cs
add
add
and
mov
push
mov
xchg
ret
add
add
add
jno
push
clc
nop
nop
nop
nop
jae
add
sti
repnz
add
xor
enter
nop
nop
nop
nop
jae
add
cmp
or
pop
add
push
clc
nop
nop
nop
nop
jae
loopne
inc
out
add
add
cwtl
sti
push
movsl
add
clc
nop
nop
nop
nop
jae
push
mov
push
js
mov
add
inc
loope
dec
adc
cs
add
add
add
call
inc
add
enter
inc
add
movsb
add
mov
sub
sub
push
mov
xchg
ret
data16
add
or
pop
add
icebp
dec
push
clc
nop
nop
nop
nop
jae
adc
add
jno
push
jmp
incl
adc
add
test
add
mov
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
cli
push
xchg
push
mov
xchg
ret
adc
loopne
or
mov
nop
push
mov
leave
cs
pop
add
sti
add
mov
mov
xchg
ret
cwtl
jmp
or
cs
add
ret
rep
push
mov
xchg
ret
mov
dec
loopne
mov
mov
clc
nop
nop
nop
nop
jae
fadds
add
repnz
mov
notl
in
add
lods
mov
sbb
jmp
das
add
fistpl
push
mov
xchg
ret
add
icebp
cmp
inc
enter
push
push
push
mov
xchg
ret
add
jl
shlb
add
mov
nop
nop
nop
jae
add
add
add
sti
add
pop
mov
nop
nop
nop
nop
jae
push
add
data16
mov
stos
or
in
movl
jp
add
push
add
adc
add
add
add
clc
nop
nop
nop
nop
jae
add
mov
add
add
and
clc
push
mov
xchg
ret
cwtl
add
add
add
movsb
dec
call
clc
nop
nop
nop
nop
jae
cmp
stos
cwtl
add
add
mov
sbb
add
clc
nop
nop
nop
nop
jae
data16
dec
mov
out
pop
add
add
sub
add
add
cs
jns
jae
cltd
ljmp
fists
jl
insb
sub
jne
ret
xor
in
adc
pusha
pushf
sbb
rolb
xor
mov
lcall
mov
enter
in
jae
aas
inc
psrad
or
loopne
in
pop
pop
cmp
cmp
mov
dec
jo
aam
out
mov
sub
pop
mov
mov
fadds
test
std
out
xor
xchg
sub
gs
scas
lods
out
jle
add
adc
mov
xchg
addb
xchg
in
sbb
and
inc
rorb
xor
dec
dec
mov
in
dec
xchg
in
or
mov
inc
test
ret
pop
add
iret
pop
mov
pop
or
jmp
jne
mov
push
out
fsubl
es
clc
xor
pcmpgtw
cmp
xor
stos
push
pop
xor
mov
jge
xor
or
mov
loopne
inc
out
out
jle
or
mov
outsb
sbb
pusha
adc
ret
xchg
rolb
add
xchg
inc
pop
mov
ss
inc
pop
dec
xchg
movsl
adc
pusha
ja
push
clc
jno
push
loop
shlb
adc
loopne
leave
adc
loopne
mov
mov
inc
inc
les
xchg
push
loopne
stc
xor
movsl
ret
jae
xchg
sbb
and
mov
xchg
mov
aad
jb
stos
es
insb
xor
push
and
mov
test
dec
cmp
sbb
fsubl
add
scas
notl
jle
fcmovnb
xchg
or
mov
add
clc
pusha
jo
aam
testl
cmp
in
dec
icebp
xor
icebp
lret
mov
cmp
cmp
jl
jne
lret
inc
xlat
push
xchg
jl
and
dec
jmp
les
xor
pop
test
adc
rolb
aad
cmp
or
push
push
mov
inc
cmp
adc
and
cmp
xchg
adc
lcall
scas
test
pop
or
es
pusha
jno
hlt
mov
in
mov
cmc
sbb
mov
push
and
fcompl
insb
daa
xchg
nop
sub
in
mov
and
js
add
push
loop
enter
clc
stos
stos
xchg
and
push
icebp
mov
rep
push
jns
in
mov
in
xchg
jb
pop
daa
cmp
xor
xchg
aad
sub
adc
dec
mov
jle
test
jb
test
xchg
les
call
push
adc
jb
jecxz
ja
mov
mov
je
add
loopne
and
xor
popf
call
stos
jo
and
mov
jmp
pop
sbb
jae
notl
pop
xchg
sub
out
mov
mov
out
es
mov
aas
mov
and
repnz
je
popa
mov
ja
push
mov
dec
sbbb
std
imul
jmp
fs
sub
or
sbbb
and
add
aam
mov
or
shrb
adcb
sub
in
sbb
adc
scas
fidivl
mov
jns
mov
ja
sub
adc
cmp
fs
addl
scas
bound
add
push
mov
pop
clc
mov
cmp
sub
push
fucomi
sub
pusha
sbbb
jge
cmc
insb
popa
xlat
js
pop
add
sbb
aad
mov
pusha
pop
pop
rcl
pop
popf
jmp
jmp
push
cmp
sahf
mov
es
in
lret
push
repnz
aam
xlat
stos
inc
dec
movsb
sub
rorl
out
sbb
das
fsub
ret
test
loopne
push
push
mov
stc
xor
inc
jne
jne
pushf
mov
and
push
mov
cli
and
mov
and
dec
push
mov
imul
sbb
nop
mov
je
mov
outsl
jl
std
mov
aaa
outsb
test
add
add
or
pop
lea
jg
popa
dec
push
xchg
popf
enter
mov
mov
aam
or
mov
mov
mov
ds
or
loopne
lock
xor
call
cmpl
inc
and
xlat
sub
inc
jo
mov
ja
jp
loop
pop
mov
jle
sar
mov
pop
jmp
mov
mov
cmp
test
mov
and
dec
pusha
and
cmp
movsb
pushl
push
mov
sbb
inc
pusha
cmp
pusha
inc
mov
pop
mov
xchg
jne
pop
dec
mov
mov
xor
testb
lahf
mov
test
fmull
mov
pop
sbb
or
mov
loopne
sub
call
scas
xchg
jle
rolb
ss
mov
mov
clc
aam
sub
mov
das
sub
in
push
dec
hlt
insl
scas
mov
jae
add
and
jne
jne
push
or
pop
adc
dec
lock
pop
movsl
sahf
aam
mov
adc
jg
pushf
jl
ss
outsl
pop
shl
orb
push
xchg
orb
filds
ss
jbe
in
mov
or
mov
mov
les
xchg
and
fld
ljmp
subl
inc
dec
flds
sbb
loopne
addb
push
mov
clc
jecxz
pop
mov
in
rclb
xchg
mov
pop
std
mov
pop
lea
pop
jmp
pop
filds
adc
add
inc
movsl
dec
inc
sbb
cmpsb
or
daa
sbb
mov
mov
fdivs
pushf
les
sub
cmp
jecxz
inc
and
xor
add
sarl
lret
fstl
xchg
lret
aas
mov
test
loopne
aam
jo
push
mov
stc
outsb
cwtl
pop
inc
mov
or
dec
les
adc
jne
mov
cmpl
jo
xor
or
and
in
and
jl
cs
jl
cmp
mov
add
insb
repz
scas
ret
mov
cli
fwait
dec
mov
xchg
dec
inc
int
dec
lods
das
loopne
inc
lret
fucomp
or
ret
or
sbb
sbb
loopne
pop
test
sti
lods
movsb
adc
mov
mov
lds
cmp
xchg
jne
sbb
mov
addr16
mov
and
lea
or
jae
ss
in
adc
popf
stc
js
shlb
jno
outsl
inc
or
add
jge
dec
pop
adc
xchg
xchg
loop
jne
aam
inc
push
dec
add
call
repz
pusha
push
movsb
mov
or
movsl
shll
add
scas
leave
cs
icebp
lcall
lret
sbb
mov
and
fwait
jge
mov
mov
test
and
mov
movsl
mov
test
shr
jo
out
push
cmp
and
inc
orb
and
xor
pushf
loopne
sti
repnz
sbb
addb
push
repz
mov
movsb
mov
scas
outsl
sub
pop
idivl
inc
xlat
cltd
hlt
into
es
insl
pop
aad
fdivrs
inc
sbb
dec
sbb
fsubs
idivl
in
into
repnz
lods
inc
or
add
inc
cs
mov
and
or
repnz
divb
imulb
pop
loopne
sub
rclb
daa
jp
add
xchg
enter
add
outsl
or
subl
scas
out
jmp
fldl
loop
xchg
aam
add
mov
push
mov
add
and
test
and
adc
inc
dec
ds
mov
jmp
inc
addl
rorb
rclb
daa
xchg
aas
mov
add
xorb
xchg
pushf
and
cmp
adc
in
or
aaa
out
pusha
sub
lods
in
or
pusha
and
enter
dec
cmp
loopne
mov
std
xchg
ror
pop
repz
insl
and
push
mov
lea
jno
clc
mov
mov
rcrl
mov
dec
mov
mov
xor
sbb
daa
sarb
push
add
and
sahf
call
push
insl
push
push
cmc
cmp
nop
add
or
inc
data16
outsl
ljmp
ficomps
in
and
pusha
aad
cmp
mov
mov
in
sub
pushf
mov
xchg
lea
sbb
shrb
fucomi
jnp
pusha
sti
pop
fidivrs
inc
shll
movl
sti
adc
jg
push
das
fdivrp
jns
xchg
mov
push
iret
cmc
jp
pusha
cmpsb
push
or
outsl
sub
mov
inc
sub
js
mov
and
and
adc
add
mov
dec
lcall
ljmp
pusha
out
push
xchg
in
mov
sub
insl
pop
aas
sbbb
shrb
cmpsb
mov
adc
rcrb
dec
xor
fbld
repz
sbb
idivl
mov
ret
dec
sub
dec
jno
lret
inc
or
push
pop
imul
pop
ss
push
jne
and
lods
insb
cltd
enter
sub
or
ljmp
inc
jmp
pop
imul
adc
imul
inc
mov
pusha
and
loopne
sub
adc
cmp
push
sti
mov
rcrl
sub
pushf
movsb
add
pandn
and
adc
sbb
mov
repnz
pop
mov
add
mov
pop
outsb
push
dec
mov
xchg
inc
mov
testl
mov
mov
pop
and
mov
xchg
and
xchg
adc
and
sar
scas
mov
outsb
sbb
add
pop
gs
lcall
dec
ds
cmp
inc
rolw
push
rclb
insl
nop
mov
into
and
push
ret
out
ficomps
cmp
in
mov
mov
cmp
jnp
sbb
push
mov
mov
ret
xor
xorl
int
cwtl
xor
jge
adc
jb
cmp
mov
push
repz
xor
pop
lods
dec
lods
ror
stos
sbb
mov
adcb
cmpsl
aaa
int
add
mov
iretw
es
pop
call
iret
or
flds
mov
mov
or
inc
jmp
out
cmp
mov
je
pop
aas
clc
fcoms
rcl
lahf
aas
aas
dec
lahf
sbb
mov
mov
imul
sysexit
push
call
orl
rcrb
mov
daa
shr
mov
clc
and
inc
adc
loopne
bound
sbb
sub
pop
xor
rcrb
mov
inc
fwait
sarb
xor
fwait
rcr
mov
orb
inc
cmp
pop
jle
movsl
rolb
mov
mov
lahf
addr16
aam
dec
dec
lods
das
pusha
cld
cmpb
dec
xor
sub
and
loopne
gs
inc
xor
inc
scas
lcall
sub
xchg
mov
inc
jne
mov
mov
jle
movsb
lret
cmpsl
mov
push
xor
int
fbld
lods
int3
test
adcb
mov
lds
mov
xlat
add
pop
or
and
adcb
fildll
rcl
push
cld
aad
scas
xor
dec
mov
or
jecxz
mov
lret
xor
lods
mov
je
xchg
out
rorl
imul
test
daa
shr
pop
jecxz
roll
jns
add
sar
mov
in
push
lret
nop
insb
inc
out
in
loope
iret
mov
nop
les
arpl
sbb
inc
and
repnz
mov
push
aad
xor
inc
les
jnp
aam
sbb
mov
inc
out
popf
xor
sbb
rorb
sti
gs
scas
cmp
insl
adc
popa
jae
das
sarl
mov
sbb
cmp
cwtl
sbb
pop
jbe
mov
sbbb
adc
ds
push
clc
push
and
pop
iret
fimuls
jl
mov
pop
cmc
insl
xlat
pop
pop
xchg
mov
inc
add
in
cmp
pop
dec
cmp
cwtl
sar
inc
aas
mov
mov
sbb
loopne
adc
sbb
add
arpl
orl
int3
imul
mov
mov
into
je
sub
add
push
lcall
adc
iret
nop
cmp
nop
cmp
popf
out
cli
and
call
repnz
xor
adc
push
adc
inc
sbb
orb
pusha
mov
pop
mov
loope
aaa
hlt
loop
inc
aad
sbb
inc
int3
test
dec
nop
adc
inc
pop
addr16
scas
fisubl
into
fildll
add
xorb
add
cld
inc
cli
daa
les
inc
mov
xchg
pushf
xor
fistpl
lea
cmp
and
repnz
fimuls
loop
stos
shrl
insl
xchg
ds
push
pusha
loopne
lock
jmp
dec
push
sub
push
and
outsb
mov
cmpsb
movsb
add
loopne
sbb
loopne
xchg
sbb
hlt
sti
push
mov
mov
repnz
mov
xor
rclb
fisubl
les
adc
inc
cs
mov
inc
lcall
mov
lret
xchg
dec
push
ljmp
and
js
dec
inc
scas
lods
enter
repz
ret
repnz
cmp
push
mov
shlb
and
sbb
cmpsl
ss
movsl
cmp
xchg
iret
loopne
push
push
fisttps
pop
xchg
pop
fwait
mov
jo
inc
pop
test
pop
in
enter
shrb
xchg
insb
push
or
les
fcmove
jne
adc
push
outsl
pop
mov
add
imul
pop
lods
dec
mov
inc
je
out
and
add
push
mov
out
ret
aas
ficomps
pusha
movsl
pop
inc
mov
xchg
mov
jp
ret
sbb
sti
push
cmp
jecxz
scas
sub
mov
sti
call
insb
dec
fwait
addr16
jne
js
popl
fs
and
mov
mov
dec
or
clc
pop
test
push
inc
std
lods
pop
jmp
inc
sbb
shl
jle
ror
je
repz
push
lret
jge
out
adc
add
adc
sbb
test
movsb
lds
inc
jp
pop
sbb
rorb
dec
loopne
jnp
dec
inc
cli
ljmp
mov
imul
fstps
jle
ss
movl
nop
dec
inc
sbb
ret
arpl
hlt
ret
xor
push
ds
lock
add
cli
push
cs
inc
fcmovb
push
test
xchg
rol
mov
je
pop
inc
cwtl
mov
dec
cwtl
cmp
mov
cmp
inc
dec
movsl
push
je
add
sbb
mov
lods
dec
ljmp
rcrl
ret
inc
pop
pop
fldenv
bound
inc
jno
cmp
xor
push
in
in
addb
sti
inc
mov
inc
cmp
jb
jb
inc
push
int3
pusha
mov
mov
pop
fisttpl
sbb
rorb
xor
in
rcrb
mov
xchg
ret
and
inc
iret
push
jo
jne
shll
loopne
insb
pop
int
add
loopne
pop
outsb
sbb
add
and
jp
and
fdivrp
xchg
cld
inc
lds
popl
dec
daa
jl
repnz
mov
jle
mov
sub
pop
insl
push
pop
jle
clc
pop
mov
popa
mov
cli
mov
push
jnp
test
test
fadds
inc
pushf
sub
adc
inc
jecxz
lsl
roll
fldcw
add
dec
xchg
loope
das
rcr
xor
dec
arpl
xor
adc
dec
mov
out
hlt
dec
lea
and
add
cmp
in
fiaddl
hlt
and
aaa
clc
push
in
or
mov
test
stc
cs
sti
cld
xor
push
scas
daa
pop
mov
mov
jbe
pusha
mov
roll
mov
lcall
loopne
aaa
jmp
push
in
jne
or
lret
movhps
in
pop
xor
repnz
icebp
xorl
int3
sub
pop
adc
lea
xchg
nop
inc
cmp
call
test
addb
adc
loope
icebp
mov
lea
shrl
les
jp
add
mov
push
push
je
repz
push
gs
cwtl
dec
xorb
roll
mov
jp
inc
add
lret
push
mov
lret
test
mov
addl
ret
sahf
lods
or
scas
repz
lea
and
rcrb
mov
sbb
inc
in
rorb
and
popa
jo
aam
ret
and
movsb
andl
aaa
lret
sub
xor
ja
hlt
loopne
mov
jo
arpl
ss
and
push
mov
pop
mov
sti
inc
sub
sbb
cmp
add
imul
loopne
sbb
add
inc
in
mov
sbb
enter
out
idiv
inc
lea
lea
pop
out
aas
adc
pop
dec
xchg
mov
jp
mov
aas
xor
mov
pop
sbb
pop
orb
pop
fadds
jbe
loopne
sbb
cmp
mov
mov
pusha
inc
int3
mov
fstpt
inc
icebp
test
pop
inc
xor
das
rcrl
or
xchg
pop
es
xor
mov
sub
hlt
mov
stos
insb
and
push
std
arpl
andb
xchg
adc
sbb
dec
cmpb
jae
in
or
fsub
push
insb
and
mov
xchg
loopne
sub
adc
shlb
idivb
pop
aad
xor
mov
cli
pop
sbb
mov
xor
fcmovbe
hlt
imul
jge
push
inc
ss
mov
sub
or
push
push
mov
inc
push
adc
xor
mov
stos
shll
xchg
rolb
mov
add
pusha
jl
sub
outsl
cmp
pop
xorb
lret
in
add
mov
sbb
jmp
sub
xchg
sbbl
clc
shlb
xor
rcl
fdivrl
icebp
gs
pop
std
loope
add
pushf
inc
ror
out
xor
fadds
cmp
pusha
push
mov
test
and
cltd
or
mov
inc
adc
sbbb
mov
jp
aam
cmc
mov
inc
mov
mov
or
roll
jae
mov
xor
es
lods
cwtl
cmp
fcmovnbe
daa
in
into
dec
push
add
inc
or
pop
scas
and
xchg
mov
mov
dec
mov
inc
add
pop
lcall
xor
push
push
or
cmp
frstor
insl
test
xchg
sub
ja
pop
lahf
pushl
clc
test
pusha
loopne
sub
shlb
adc
enter
cld
jmp
stos
gs
xorb
stos
rorl
pop
mov
mov
or
mov
scas
sub
xchg
jbe
jmp
and
shlb
jp
mov
aaa
repnz
sarl
addr16
ret
fsubrl
lock
sbb
rolb
pop
fiadds
pop
rolb
hlt
outsl
jbe
xor
sub
ds
out
mov
daa
cmp
jmp
inc
in
xchg
loope
adc
inc
test
outsl
sbb
out
mov
cmp
sbb
inc
mov
les
subl
cmp
mov
neg
xor
andl
mov
pop
lea
ja
out
adc
add
dec
sub
rorl
rolb
push
add
mov
fistps
adc
arpl
loopne
hlt
pusha
jnp
and
daa
leave
fs
sbb
mov
mov
sbbl
xor
pop
divb
jl
push
adc
nop
test
add
sub
adc
inc
dec
jle
push
inc
xchg
and
das
lods
pop
xor
shlb
dec
gs
cmp
lock
push
sub
or
add
loopne
shl
dec
jns
xchg
dec
inc
pop
push
jl
pushl
inc
xor
ret
xor
fidivrl
jecxz
jg
les
nop
add
iret
inc
xlat
inc
push
push
pop
dec
in
mov
test
sbb
test
or
int3
sub
pop
rcrl
rolb
and
mov
mov
dec
jle
ret
mov
fists
movsb
mov
cmp
lret
loop
mov
shlb
pop
add
mov
pushl
mov
mov
lret
cmp
lret
xchg
add
mov
inc
sbb
mov
js
leave
mov
aaa
data16
mov
out
test
xchg
xor
sarl
clc
cmp
cmp
fistps
jle
push
mov
push
sbb
cwtl
mov
inc
jbe
stos
aas
shll
sub
pop
in
lcall
int3
lds
sti
adc
test
movb
mov
sub
adc
xor
mov
js
pop
call
sbb
sub
sub
loop
mov
cli
outsl
rolb
mov
fabs
pop
cmc
outsl
mov
sbb
sub
cmp
push
pop
cld
aam
sbb
add
dec
mov
mov
out
push
sti
adc
add
pop
adc
xchg
cmp
push
fisubrl
push
js
jb
xchg
mov
pop
lret
cmp
add
xchg
dec
in
push
push
dec
cmp
xchg
jmp
cmp
js
test
in
insl
in
lahf
outsl
jo
adc
mov
sarl
test
lods
xor
adc
xchg
cmp
adc
inc
sbb
stos
xchg
in
jg
hlt
jnp
sub
add
idivl
pop
mov
out
push
fstl
xor
leave
push
add
sahf
or
and
lahf
xchg
inc
jecxz
cmp
in
mov
xchg
fwait
movsb
clc
mov
ljmp
icebp
mov
add
inc
xchg
or
dec
sbb
int
adc
xor
rcrb
filds
call
iret
inc
in
and
mov
jge
push
mov
in
js
sbb
push
adcb
aam
lret
sbb
out
js
data16
xor
adcb
mov
mov
sbb
movsl
addb
push
ret
scas
push
jb
into
les
cmpsl
sti
leave
mov
ja
inc
iret
scas
cld
add
lods
rol
adcb
jge
cli
push
xor
mov
lret
pushf
loopne
ret
repnz
jge
jge
sub
pop
mov
es
into
sbb
mov
pusha
xor
rorb
nop
pusha
dec
adc
push
dec
sti
cli
test
dec
je
push
xchg
xchg
jbe
xchg
pushf
shlb
mov
cmpsl
inc
fwait
out
fstps
or
and
outsb
lea
call
xor
cmp
mov
nop
mov
out
mov
lea
out
mov
cmpsb
mov
xchg
int
int3
push
cld
testb
mov
test
mov
leave
and
movsl
stos
imul
inc
movsl
out
inc
jg
jg
in
sbb
fwait
movsl
cwtl
sbb
outsb
dec
test
pusha
add
and
cmpsb
push
mov
sbb
cmc
xchg
jle
mov
lcall
xchg
add
leave
shll
scas
add
lret
add
xor
jg
sbb
dec
stos
cmc
stos
mov
adc
sar
repz
clc
aaa
sub
or
sbb
mov
push
decl
mov
daa
leave
mov
ljmp
pushf
fsubl
or
sub
dec
stos
mov
mov
xchg
inc
push
xor
push
push
movsb
xor
lret
movsl
xchg
lods
shr
fimuls
xorl
cli
mov
mov
add
and
leave
rcll
or
int
ljmp
xor
or
movsl
and
outsl
je
jbe
mov
repz
imul
clc
xchg
mov
mov
test
in
sub
outsb
test
pop
fs
add
xchg
xchg
test
loope
pop
fldt
add
mov
outsl
pop
mov
add
cmp
dec
mov
xor
push
loope
daa
mov
mov
int3
sbb
sub
inc
mov
notb
jns
int3
aas
or
out
jmp
pop
stc
mov
fidivrs
adc
stos
shll
mov
lret
stc
outsb
and
call
imul
mov
xlat
cmpsl
jecxz
mov
lds
xchg
pop
loop
mov
push
pop
ljmp
lret
jbe
push
jns
push
push
mov
jo
or
push
dec
mov
pop
mov
jb
xor
icebp
and
push
hlt
inc
or
mov
in
adc
and
mov
jle
outsl
xchg
sti
jg
mov
out
rcl
mov
xchg
ret
idivb
or
inc
inc
ret
adc
push
cmp
and
hlt
mov
mov
xor
push
std
cmpsb
imul
andb
out
add
and
jl
movsl
loopne
push
sti
es
into
lcall
dec
lods
scas
pop
cmpsb
std
ret
xlat
adc
or
inc
xchg
idivb
stos
out
out
lock
sbb
repnz
inc
mov
lahf
jecxz
cs
cmp
push
push
cmp
sbb
pusha
mov
dec
push
xchg
cmp
jle
loop
xor
stos
inc
pop
popf
sbb
add
add
mov
adc
push
test
and
inc
fstpl
adc
xor
or
xlat
popf
fndisi(8087
out
lds
dec
jo
mov
ret
xchg
cwtl
loopne
inc
cld
pushf
cwtl
orb
cmp
mov
lret
mov
mov
aam
inc
cmp
mov
adc
push
mov
mov
out
into
enter
pop
sub
scas
out
pushf
cld
loopne
daa
push
add
test
lcall
cltd
mov
in
mov
pusha
pop
pop
push
inc
add
icebp
or
in
inc
iret
jo
push
lcall
nop
nop
and
inc
out
and
jo
xchg
std
js
add
and
outsl
xor
sbb
loopne
add
shlb
dec
cmc
cli
pop
add
add
cli
lret
xchg
leave
call
mov
xlat
xor
aad
push
push
jo
andl
sbb
pusha
sub
adc
sub
sub
pop
push
jnp
shlb
mov
mov
mov
lret
fcompl
je
scas
and
push
test
jb
pop
mov
xchg
adc
rcr
movups
and
pop
enter
cmc
fcmovu
out
lods
push
add
lcall
push
aad
xchg
cltd
mov
cmp
sub
mov
jle
in
mov
adc
and
cmpl
into
outsb
jmp
lea
in
cwtl
xchg
mov
divl
js
adc
rcr
test
aaa
xchg
out
push
inc
or
mov
dec
rclb
cmc
sbbl
mov
jbe
xor
into
daa
or
loopne
movb
mov
inc
addr16
hlt
jo
lock
sub
sbb
testb
sub
pop
xchg
cmp
imul
fwait
test
dec
sbb
jns
daa
push
push
fwait
cmp
inc
xchg
stos
outsl
jecxz
sahf
add
jecxz
cmp
mov
shlb
test
add
decl
inc
pusha
add
dec
push
xor
fadds
in
mov
shll
cmpsb
sbb
push
in
xchg
jl
rcrb
dec
hlt
cmp
push
xchg
bound
in
loope
divb
jg
sbb
test
mov
outsl
add
add
nop
mov
inc
and
sub
push
out
and
out
in
or
xchg
les
out
cmpsl
jge
test
mov
xorb
jmp
dec
inc
inc
mov
or
adc
inc
aad
int3
jb
loope
and
daa
sar
insl
lods
addr16
insb
sbbl
adc
mov
mov
jnp
loop
rol
push
insl
pop
jp
pop
add
pop
mov
adc
and
leave
sti
imul
jp
and
sub
mov
ret
fsin
shlb
push
dec
jge
movsl
add
sub
jne
aad
add
loopne
pop
rcl
jg
mov
movsl
pop
cmp
adc
pop
push
gs
sar
pop
clc
ljmpw
mov
mov
popf
mov
sub
or
cmpl
mov
sarb
jne
mov
leave
pushf
dec
pusha
push
mov
xor
and
push
inc
and
lock
int
fisubs
rcrb
xor
and
or
das
sbb
pusha
loop
je
je
jnp
in
add
and
lods
lods
push
leave
adc
push
fsubrs
pop
out
movsl
sub
insb
shlb
push
ret
mov
andb
sub
loop
mov
sbb
jg
mov
in
dec
dec
loop
hlt
xchg
out
xor
jo
aad
fadds
rcrb
mov
jmp
into
dec
jnp
mov
in
lret
mov
xchg
enter
addr16
or
xor
sbb
inc
mov
push
dec
pop
dec
inc
or
xor
sahf
and
vminss
push
mov
dec
test
ret
les
jge
movsb
loopne
mov
mov
inc
lods
xorl
das
loope
mov
leave
mov
add
add
jl
inc
mov
icebp
mov
loopne
dec
dec
mov
fbstp
movsb
and
push
inc
push
pop
lods
mov
in
mov
enter
or
shlb
adc
adc
in
pop
loope
ret
in
adc
or
insl
mov
push
repnz
out
arpl
aad
mov
add
cld
das
cli
xlat
adc
stos
pop
mov
fcmovb
cmp
mov
stc
test
ds
or
aad
scas
scas
jno
nop
add
jmp
js
sbb
dec
push
mov
or
jbe
jb
out
jp
iret
fwait
jns
inc
jecxz
ficoml
ja
or
insl
jo
dec
mov
insl
int3
mov
out
pop
sub
pusha
insb
movsb
ja
xchg
mov
arpl
repnz
sub
stos
sbb
or
mov
cmpsb
inc
outsl
fimuls
add
add
fwait
inc
and
out
je
sbb
jo
stos
push
dec
adc
fwait
insl
xchg
xchg
call
xchg
mov
pop
les
inc
loopne
lret
addb
testb
push
fcmovnbe
inc
int3
popa
movsl
push
subl
lret
mov
mov
aam
mov
loopne
sbb
mov
fst
jo
sbb
incl
les
outsb
in
test
mov
mov
mov
mov
xor
mov
push
jae
sti
sub
add
jns
mov
int3
subb
jno
incb
push
jne
outsl
dec
dec
outsl
arpl
push
mov
cmp
push
mov
shl
das
decl
push
arpl
cltd
inc
push
or
sahf
sub
in
and
mov
dec
out
adc
cmpsb
ja
insb
mov
sbb
inc
shrl
arpl
jle
xchg
cs
cmp
aas
add
fs
and
push
movl
insl
sti
or
shll
sub
lahf
mov
stc
pop
pushf
mov
pop
shll
cmp
cmp
xchg
je
or
aam
mov
mov
xchg
js
adc
push
inc
std
push
ret
lar
mov
movsb
and
hlt
mov
push
push
sbb
add
fs
pusha
test
inc
es
fwait
sbb
cld
inc
scas
cmp
inc
and
dec
pusha
ds
adc
and
or
mov
in
dec
hlt
mov
mov
divb
push
in
rolb
and
lods
inc
pop
repnz
pusha
mov
mov
je
add
and
add
cmp
shll
sbbl
divl
cwtl
inc
and
scas
sbb
add
or
enter
sbb
inc
or
xchg
mov
mov
push
xor
ljmp
aas
push
cmp
adc
loopne
rcrl
shrl
add
loopne
pop
pusha
mov
insl
adc
loopne
mov
pop
sbb
pusha
dec
or
into
xor
add
add
xchg
xchg
push
or
adc
adcb
sbb
pusha
mov
cs
insb
sarl
add
add
scas
xorb
lahf
scas
dec
cmpsl
and
stc
shl
repz
test
inc
pusha
jo
mov
cltd
mov
mov
lahf
sub
inc
hlt
movd
int3
mov
ficoml
xorl
xor
push
and
jmp
push
sarl
and
cmp
mov
jg
cmp
sub
fwait
push
loope
xchg
in
jmp
jbe
nop
je
cmp
jmp
popf
xor
mov
lods
roll
imul
and
dec
mov
sbb
add
adc
rcrb
addb
push
or
lret
mov
int
mov
push
enter
xor
das
and
lea
shrl
test
shlb
test
mov
clc
pop
mov
rclb
jp
push
jecxz
or
mov
insb
xchg
test
movsl
mov
and
jo
out
test
loop
decb
shrl
inc
add
icebp
test
cmpsl
cmp
sarb
inc
add
add
jo
leave
xchg
dec
pusha
movsb
xlat
or
int
lret
imul
in
mov
adc
inc
inc
pushl
popf
jp
mov
adc
adc
scas
mov
es
cmp
outsl
jo
testl
pop
js
aam
pop
ret
mov
int
xor
jbe
mov
mov
imul
push
lock
sub
mov
pusha
xchg
xlat
dec
and
stc
cs
test
or
rcrl
faddl
test
and
jge
sbb
mov
aaa
add
andb
jo
loop
mov
div
aas
mov
adc
shlb
mov
adc
push
cmpsb
stos
hlt
add
mov
lds
in
cli
out
outsl
fidivrl
repnz
movsb
push
xlat
insl
out
sbb
mov
insb
pop
sub
cmp
ret
sub
adc
push
jmp
hlt
xlat
movsl
cltd
imul
pop
pop
or
popf
lret
aas
lcall
aas
shll
jmp
or
adc
lock
rcl
mov
add
shll
and
rorl
and
cmp
push
inc
sbb
add
scas
outsb
mull
orl
dec
xchg
mov
inc
dec
cwtl
hlt
inc
aam
fs
xor
hlt
inc
dec
fists
cmp
mov
dec
sti
inc
out
mov
lods
nop
sbb
jl
push
add
out
sahf
stos
push
pop
scas
lahf
jl
sub
jb
ficompl
or
jno
out
cmp
iret
test
js
or
mov
popa
loopne
and
push
push
loop
addr16
cwtl
mov
jnp
add
adc
inc
jl
add
adc
stc
pop
imul
dec
addr16
cmp
outsl
or
and
push
add
mov
aam
dec
add
and
cld
pusha
fldenv
outsl
insl
loopne
mov
inc
ret
out
mov
sbb
pusha
xchg
cmp
stos
repz
jno
jecxz
or
loopne
xor
jge
call
outsl
fldcw
jns
out
nop
in
fwait
daa
pop
sub
inc
pusha
iret
cmp
fnstcw
jbe
inc
mov
testb
fsubrl
inc
inc
mov
cli
add
pusha
in
dec
ja
ja
outsb
or
pop
data16
and
add
add
push
fisubs
ja
push
sbb
mov
jmp
push
lods
push
idivl
cld
pop
jg
add
mov
ja
jns
hlt
jle
add
pop
xlat
ret
mov
inc
scas
xor
bound
adc
cwtl
add
mov
xlat
sarb
sub
ja
mov
fldcw
imull
setae
sti
and
push
xchg
hlt
inc
hlt
sub
ja
or
add
inc
adc
popa
jno
pop
mov
test
sti
push
mov
mov
sub
mov
jmp
inc
aam
push
fwait
cmp
pop
add
jo
fnsave
pop
and
xor
int
test
nop
cwtl
shrb
pusha
daa
inc
add
sarb
mov
mov
push
daa
dec
xor
add
inc
cmp
xchg
cmp
mov
or
orb
inc
icebp
and
cmp
push
mov
add
pusha
out
popf
icebp
jne
repnz
xchg
cmp
pusha
lret
aad
sbb
push
popa
outsb
ds
jecxz
dec
or
inc
mov
sub
dec
rorl
inc
push
rol
fcoms
js
pushf
adc
mov
cmp
adc
popf
jae
sbb
aam
popa
outsl
test
mov
imul
fdivs
jbe
fstps
adc
cmpsl
jmp
sahf
nop
enter
jnp
mov
mov
mov
loopne
aad
mov
scas
out
popa
loopne
negl
mov
mov
or
hlt
adc
mov
inc
adc
mov
add
inc
dec
clc
mov
jb
loopne
sub
push
jle
inc
loopne
jo
cmp
pop
repnz
repnz
xchg
mov
lea
ret
adc
cmp
pop
or
mov
rorb
cmp
cs
enter
sbb
or
fsubrs
les
and
jl
mov
sbb
daa
rorl
inc
into
outsl
test
add
xor
fisubl
aas
cmp
sbb
xor
dec
mov
cmp
and
out
in
sub
xor
adc
loopne
mov
jns,pt
mov
lret
cmp
xchg
or
lods
add
adc
add
popf
jno
aad
shll
faddl
and
dec
mov
cmpsl
lret
scas
inc
enter
add
aas
or
icebp
xchg
mov
out
sub
jne
aam
pop
rorl
pop
cmp
push
mov
push
push
popa
cmp
aad
cs
fidivrs
sbb
pushf
dec
pusha
pop
addr16
inc
loop
cmp
mov
add
scas
lret
fs
jecxz
bound
jns
aaa
or
jno
cs
push
cmp
mov
inc
mov
aad
hlt
data16
adc
inc
pop
xchg
iret
ljmp
ja
or
jge
push
push
in
repnz
push
rol
cmp
shlb
into
shlb
sub
lea
mov
push
mov
lcall
inc
adc
loopne
mov
subb
mov
aas
call
out
lods
or
into
xchg
cmp
icebp
mov
mov
enter
add
and
icebp
dec
imul
fnstenv
pop
lahf
lcall
cmp
sbb
add
addb
or
pop
data16
test
cmpb
test
fucomi
lods
fsubrl
cwtl
sbbb
ret
mov
loopne
or
add
jg
in
orl
pop
dec
xchg
cmpsl
pop
sbb
movsl
jo
int3
mov
sub
dec
cli
mov
xchg
pop
xor
stos
lds
shl
data16
add
pmaxub
jb
adc
je
xor
inc
bound
sbb
inc
push
cmp
pop
sti
popl
mov
pop
and
jns
stc
lcall
sarb
rclb
cmc
repnz
lods
es
pushl
shlb
jae
adc
stc
lret
push
jno
dec
scas
repz
push
xchg
test
fnsetpm(287
xchg
out
sub
sbb
inc
movsb
pop
xchg
adc
shlb
xchg
shlb
adc
pushf
pusha
mov
inc
pop
or
out
xor
jo
sub
imul
push
push
xchg
les
loop
mov
dec
sub
adc
rcl
lret
out
push
aas
js
mov
out
add
rolb
imul
push
int3
push
add
pop
pop
dec
fadds
xor
cwtl
and
lss
push
pop
dec
mov
and
in
mov
sarl
jge
lret
popf
pop
jbe
lods
arpl
scas
or
inc
mov
or
fisttps
out
divb
mov
add
pusha
fdivrl
xchg
xor
test
inc
or
cmp
sub
and
xlat
mov
out
cmp
ss
outsl
es
outsl
mov
clc
add
cld
inc
xchg
jbe
inc
cmp
jge
clc
add
inc
fs
ret
fcompl
push
mov
movsl
add
repnz
pusha
jnp
test
and
movsb
divl
add
js
cmp
add
xor
jp
pop
and
aad
push
adc
iret
mov
push
cltd
insb
or
es
sbb
or
repz
std
pop
test
cwtl
or
xchg
add
shrb
cmp
sub
insb
shlb
sub
daa
push
movsb
mov
stos
jp
daa
adc
lret
mov
xchg
jbe
movsb
loopne
push
mov
jecxz
mov
cmc
xchg
sub
rcll
and
xchg
in
ja
imul
loope
int
sub
push
jg
lret
test
popf
pop
push
das
xor
cwtl
aam
inc
jmp
add
mov
sbb
cmpsb
pop
jae
cmp
jle
out
inc
inc
and
ss
outsb
cmpsb
sbb
inc
xchg
xchg
addb
sti
adc
or
and
mov
dec
aas
or
push
shlb
int
mov
test
loopne
sti
in
arpl
dec
xor
fdivs
bnd
icebp
in
jmp
mov
dec
pushf
loopne
outsb
jae
cmp
push
in
js
push
xor
mov
add
xor
adc
call
lock
in
sub
jp
repnz
sbbb
inc
shrb
cwtl
jo
pop
ljmp
xchg
call
in
push
and
les
inc
js
popf
pusha
addr16
shr
add
insl
icebp
test
add
dec
out
test
dec
sbb
jns
xchg
andb
cld
loopne
xor
test
test
sbb
mov
insl
jge
inc
dec
adcb
push
pushf
test
clc
push
add
dec
jnp
data16
add
and
aaa
adcl
sbb
pop
mov
and
jb
push
xor
add
pop
mov
mov
addl
pop
inc
pop
mov
and
inc
movsb
imul
push
int3
sub
xchg
inc
subb
xchg
clc
dec
aad
stos
sbb
loopne
add
fcoml
pop
ja
xor
push
cli
fwait
push
or
cli
ret
push
cld
xor
dec
xchg
mov
sbb
push
mov
int
insb
sub
pop
xchg
lret
stc
lcall
loopne
jmp
dec
cld
xchg
pop
fisubl
rorb
fisubl
rorl
stos
loope
xor
insl
pop
pop
inc
xchg
sbb
adcb
and
fs
jp
pop
pop
xor
cwtl
and
in
sbb
in
xor
cli
push
jbe
mov
and
mov
xor
push
sub
push
push
xchg
mov
lods
adc
add
dec
xchg
sub
mov
aam
mov
xchg
sub
cmpsl
push
pop
push
es
xor
in
sub
rcll
xchg
popa
lods
cltd
cltd
pop
jae
in
pop
aas
jmp
cli
xor
subb
std
mov
dec
add
inc
out
xor
insl
pop
adc
pushf
pop
andb
imul
fld
xchg
push
push
pop
lds
lret
loop
mov
xchg
fldt
push
sub
sub
and
jl
mov
cmpsl
fmuls
jae
into
jle
push
fimull
lods
xchg
mov
cmp
add
fwait
sub
add
into
or
mov
pusha
pushf
pushf
add
aaa
das
push
inc
enter
bound
xor
inc
in
sub
sbb
pop
mov
rorb
inc
mov
test
push
andl
and
mov
adc
ds
hlt
xor
mov
add
sub
mov
in
data16
dec
imulb
sbb
xor
pusha
push
xor
sbb
mov
and
jns
filds
and
imul
push
jne
sarl
push
out
cli
stc
mov
popa
lods
xor
aas
cltd
push
decb
movsl
cltd
push
xor
std
pushf
test
inc
andb
repnz
call
mov
fisubrl
adc
inc
rcll
inc
inc
sbb
cld
fwait
lcall
cmpb
cmc
mov
mov
jnp
and
and
mov
xchg
sub
inc
jmp
sub
ljmp
and
add
xor
jg
lcall
sub
jbe
xchg
push
and
add
shl
popf
movsb
inc
and
ljmp
push
stos
jnp
leave
or
rcr
mov
xlat
aas
or
sub
repnz
cmp
mov
or
sar
pop
inc
inc
adc
stos
dec
dec
cmp
xchg
bound
jo
pop
push
mov
inc
sub
mov
mov
daa
xchg
movsb
cmp
icebp
bnd
je
faddl
cmp
mov
or
inc
sti
mov
mov
repz
andb
mov
adc
push
test
fmull
test
lods
je
je
inc
insb
push
or
cmpsb
andl
ljmp
mov
in
ljmp
daa
push
movsb
push
inc
mov
push
icebp
testb
loopne
test
lret
sub
jecxz
push
test
pop
push
jge
push
stc
fisubl
mov
xor
dec
xor
push
sub
jnp
and
cmpsb
popa
cmp
popa
push
and
repz
lcall
je
arpl
dec
or
mov
pop
mov
mov
adc
leave
push
lods
imul
cmpsb
push
insb
mov
add
adc
js
or
out
repz
or
mov
mov
loop
loope
or
int
pop
or
mov
dec
adc
pusha
shlb
mov
out
xor
cmpsb
mov
mov
clc
pop
pop
testl
sbb
popf
popf
insb
int
xor
imull
cld
pusha
mov
xchg
pop
insl
arpl
inc
inc
enter
xor
insb
mov
popf
and
popa
mov
jnp
xor
jnp
cs
lret
pushf
cmp
inc
lods
in
jnp
push
loope
xor
cltd
push
repnz
pop
ficoml
enter
add
and
aaa
push
fwait
int
mov
shlb
or
pop
mov
push
fcmove
and
and
inc
fisttpl
loopne
cmp
jbe
ficoml
faddl
out
mov
pop
call
ret
test
cmp
jecxz
push
push
dec
hlt
icebp
dec
cmp
add
fdivrl
rcl
fadd
adc
push
fisubl
adc
add
into
test
jge
sahf
out
adc
js
es
jmp
push
test
cwtl
enter
add
push
mov
fwait
xchg
outsl
cs
pop
cmp
repz
out
xchg
mov
je
aas
lahf
cmp
xchg
enter
ret
add
jmp
push
sbbb
adc
inc
jnp
dec
mov
jg
das
test
xchg
dec
out
subl
and
adc
int3
and
test
push
xor
stos
dec
das
jno
mov
sysexit
sbb
mov
add
pusha
jb
loop
lahf
inc
inc
lret
sahf
mov
std
mov
xchg
mov
das
fidivrs
mov
sar
jl,pn
cmp
mov
fsub
repz
inc
daa
rol
andl
aas
sbb
jno
aas
outsb
data16
pusha
add
and
bound
and
adc
in
inc
fidivs
mov
mov
sub
orb
inc
mov
sbb
in
xchg
inc
jmp
out
pop
sarl
xorl
loopne
ret
lods
mov
insb
pop
leave
mov
xchg
lock
fildl
test
push
fs
pop
cmc
stc
andb
loope
rcrl
inc
jmp
jmp
insb
data16
rcrl
es
fldln2
inc
inc
pop
cmp
cmp
daa
mov
outsl
pop
cli
movl
daa
das
mov
fistps
adc
and
jbe
mov
rcrb
loopne
scas
leave
fsubrl
jns
adc
popf
sbb
loopne
jne
ljmp
lret
aad
nop
adc
and
jae
shrl
push
inc
pop
cmpl
add
jge
cmp
mull
and
je
and
jnp
es
sbb
loopne
incb
ds
or
add
mov
loopne
push
mov
jp
dec
test
daa
jle
outsl
aam
jbe
mov
pop
cs
sub
adc
imul
mov
cmp
or
sub
pusha
jmp
add
outsl
adc
and
nop
inc
mov
icebp
aaa
push
gs
es
fistpl
or
inc
pop
es
push
sbb
pusha
push
jb
in
pusha
xchg
mov
sub
aad
lock
jb
xor
add
sub
sub
bound
mov
and
mov
dec
hlt
pop
pop
icebp
mov
js
inc
and
cmc
add
mov
shr
mov
sbb
fs
movsb
add
and
loop
mov
push
cmpl
outsl
fldenv
fdivs
js
cli
xchg
mov
pop
xchg
push
add
icebp
dec
rcll
loop
test
rorb
je
int
loop
and
int3
jp
out
scas
jg
adc
and
sbb
add
and
and
aam
lea
mov
xor
jbe
or
testb
sarb
or
popf
sub
dec
leave
cmpsl
sbb
jecxz
nop
clc
and
and
arpl
mov
mov
dec
mov
jmp
jne
xchg
or
push
mov
push
or
mov
ficomps
jnp
cld
inc
lds
fadds
mov
test
and
inc
shll
mov
loope
shrb
cmc
mov
test
sub
or
fwait
mov
fwait
push
out
pop
repz
add
rclb
add
adcb
lret
add
mov
dec
pop
xchg
xchg
lods
inc
and
das
aam
dec
pop
push
test
mov
and
add
pusha
cli
hlt
addl
pop
sub
test
movsb
xlat
push
sbb
add
mov
xchg
pop
nop
mov
sahf
xchg
movsb
rol
xor
nop
mov
jmp
in
pop
push
mov
cwtl
les
stos
ja
mov
mull
pop
movsl
pop
xchg
xchg
sbb
mov
mov
lahf
sub
fdivl
or
jp
mov
rol
dec
outsl
xchg
test
leave
xchg
in
add
in
je
mov
xor
les
ljmp
pop
adc
inc
and
sar
pushf
pop
shr
cld
outsl
sahf
stos
mov
jmp
test
add
mov
and
inc
xor
imul
adc
xchg
scas
lods
push
dec
or
or
inc
jle
sub
dec
out
sub
adc
jo
paddusb
add
mov
mov
lods
inc
cmp
decl
enter
inc
and
cs
jb
dec
sahf
add
mov
or
pusha
and
sarb
jecxz
clc
adc
add
addb
and
xor
stos
jl
adc
xor
cmp
mov
push
popa
add
add
hlt
fisttpl
add
add
sub
ds
bound
repz
adc
movsl
xchg
mov
xor
sbb
pusha
aam
push
push
or
and
imul
in
pop
and
shrl
cmp
mov
pop
pop
and
sub
ret
je
hlt
pusha
fistpll
jno
insl
loop
or
ret
ss
add
xor
clc
push
scas
inc
mov
jno
inc
or
pusha
fistpl
out
loope
ja
xor
shl
mov
pop
push
sbbl
addr16
out
leave
fcomip
in
orl
mov
add
fstl
pop
iret
and
stos
nop
aam
insb
sub
dec
adc
pop
adc
loope
xor
test
iret
and
dec
int
mov
sbb
jnp
mov
movups
cli
into
into
pop
adc
inc
out
pop
jno
iret
loopne
pop
int3
movsb
loop
loopne
lea
jecxz
imull
outsl
clc
call
es
xchg
or
pusha
inc
pop
orb
aam
test
pop
jmp
and
test
dec
jg
or
bound
sahf
mov
leave
addb
in
sbb
pop
js
scas
sbb
mov
mov
dec
or
rorb
adc
lods
lods
pop
stos
mov
jle
inc
imul
lods
xchg
pop
imul
cmpsb
pop
sub
mov
les
cmp
add
mov
mov
adc
daa
insb
push
shl
push
loopne
or
leave
dec
lea
bound
rolb
ss
aaa
dec
es
pop
sahf
hlt
daa
ret
popf
call
std
mov
movsl
push
xchg
and
pushf
cmp
mov
loopne
mov
sub
ficoml
cli
add
sbb
out
mov
loope
push
lcall
lods
cmp
cli
lahf
xor
push
xor
fs
ljmp
xchg
out
es
xchg
mov
in
ja
stc
shl
lods
or
int
cmp
loope
push
jb
rorb
xor
adc
add
mov
push
std
int3
pusha
out
int
stos
adcb
fwait
xor
dec
push
adc
and
adc
je
or
les
ja
out
hlt
out
cmp
inc
dec
xor
jmp
mov
sti
jae
xchg
lcall
mov
fnstenv
xchg
cs
mov
rcl
push
mov
mov
addr16
inc
mov
adc
and
jb
inc
jne
mov
imulb
rol
xchg
addr16
xchg
out
cmpsb
stc
sbb
orb
mov
and
sub
imull
mov
cmp
cmp
loop
push
xchg
out
or
and
xchg
loopne
andl
push
lcall
push
and
sub
scas
pop
movsl
lret
or
nop
push
add
das
push
lcall
adcl
das
inc
and
inc
fisubrl
jmp
jmp
and
mov
mov
inc
ds
les
sub
add
inc
add
pop
les
mov
adc
pop
xlat
mov
aaa
adc
inc
lret
sub
loopne
push
adc
enter
loopne
imul
insb
pop
jg
adc
int
shr
mov
jne
mov
fmuls
sbb
pusha
xor
insb
inc
or
push
arpl
fbstp
int
sbb
xlat
vmwrite
jge
js
std
pop
adcb
push
sub
aas
shlb
add
add
mov
jge
ret
or
jge
aad
popf
in
mov
adc
mov
jg
mov
gs
pop
fsubrl
lret
pop
rolb
sbbb
xchg
cld
loopne
mov
mov
jg
jge
shll
das
fimull
xor
cmp
fcmovnu
roll
add
mov
clc
aad
cmp
mov
fistpll
dec
pusha
es
lods
sbb
pop
xchg
clc
pusha
in
or
es
arpl
pop
mov
dec
pop
lret
icebp
mov
sahf
jge
and
jge
dec
xchg
push
fwait
cmp
sub
ds
jb
xchg
cmp
fiaddl
je
out
testl
jb
xchg
outsl
jns
xchg
jb
sbb
nop
in
or
cli
add
je
cmp
ret
jg
lret
test
arpl
jns
int3
cmp
lahf
aam
leave
sbb
and
dec
pop
xchg
and
xchg
jne
mov
out
cmp
inc
ds
shll
stc
aam
je
repz
mov
dec
jae
stos
je
xor
subb
mov
cmp
jne
push
cmp
test
nop
nop
add
pop
adcb
inc
addr16
sub
fdiv
lcall
orb
dec
and
pop
and
lahf
add
lea
dec
dec
lret
jl
scas
in
sub
sbb
icebp
in
into
or
lea
mov
mov
test
mov
adc
add
loopne
lock
pop
fidivl
lahf
lret
scas
shl
nop
and
rcrb
addb
push
rol
mov
in
das
and
std
inc
or
rcl
push
push
sbb
shlb
inc
mov
mov
imul
inc
mov
add
add
sub
pop
imul
push
out
jmp
or
sub
mov
sub
hlt
into
js
cld
add
and
cmp
cwtl
mov
or
add
sbb
rclb
adc
adc
lock
cltd
imul
mov
pop
sbb
nop
dec
loopne
dec
pop
scas
inc
push
mov
pop
aam
test
shll
and
add
ds
call
repnz
mov
out
or
popf
mov
mov
jae
push
jno
mov
mov
mov
push
pusha
test
inc
sbb
cld
jo
or
or
std
ss
adc
mov
faddl
xlat
dec
movsl
test
loopne
mov
xor
fs
movsb
jne
mov
cmp
mov
subb
add
mov
push
or
jo
por
mov
icebp
cmp
pop
push
int3
jle
pop
stos
cltd
pop
icebp
or
xor
add
popa
adc
and
sbb
adc
in
xchg
push
iret
aaa
jb
add
pusha
mov
gs
adc
inc
shlb
sti
cmpsb
mov
mov
pusha
push
loopne
cmp
aad
sbb
inc
fstl
add
shlb
pop
jmp
push
jle
pop
mov
cmp
inc
and
outsb
jns
cwtl
xor
jle
add
xor
xchg
and
repz
jns
push
xchg
mov
loop
addb
mov
loopne
xor
pop
xor
fiaddl
data16
pop
and
adc
inc
loope
xor
inc
jo
lret
mul
cld
shl
jne
lock
xchg
cmc
mov
mov
pop
sub
add
dec
xor
leave
repnz
pushw
xlat
xchg
jecxz
cmp
out
cmp
or
shll
xor
dec
xor
cmpsl
fldcw
jecxz
pop
ss
pusha
lret
and
and
push
fldl2e
xchg
push
push
test
lahf
xchg
movsb
cs
lods
shlb
and
sbb
iret
daa
loopne
inc
ds
or
stos
and
adc
add
lods
add
pusha
out
fdivs
adc
loopne
mov
pusha
or
cmp
cltd
pop
paddsw
jl
or
mov
dec
into
jl
lret
push
push
pcmpgtd
push
stc
pop
xchg
add
mov
in
push
mov
inc
dec
pop
movsl
repz
inc
clc
pop
or
shlb
pusha
push
add
push
sub
push
negb
fmul
int
inc
bound
cmpsb
dec
xchg
loopne
and
inc
cmp
test
mov
cmp
jne
and
movl
mov
stos
jo
nop
mov
xor
pop
jo
mov
cmp
int
pushf
add
test
adc
mov
shlb
insb
sbb
mov
jo
ret
mov
dec
xchg
gs
jle
sbb
shr
out
jg
jg
sbbl
addr16
cli
and
mov
shl
loopne
cmp
subb
ss
mov
pop
jo
jbe
in
mov
jb
add
and
imul
jl
and
mov
cmp
xor
out
sbb
pop
mov
push
stc
jns
iret
xor
and
int
ud0
and
scas
bnd
int
inc
inc
jo
cmc
subl
leave
push
nop
mov
lods
cmpsl
movsl
xchg
jp
cmp
rorb
push
pop
imul
ds
hlt
and
jecxz
inc
add
pop
cli
jne
sti
pop
inc
lahf
cmp
fwait
sbb
cwtl
clc
and
push
jmp
cli
add
xchg
movl
mov
lea
push
jb
pop
insb
ljmp
adcb
jecxz
movsb
outsb
in
adc
xchg
add
cmp
leave
insb
ss
inc
adc
fiadds
add
inc
movsl
cltd
data16
int3
dec
ja
mov
or
cmp
shlb
and
shll
hlt
cmpsb
mov
decb
loopne
inc
push
and
stc
js
xchg
pop
call
data16
js
les
out
inc
mov
fwait
div
icebp
push
mov
cmpsl
push
clc
push
cmp
mov
cmpb
xor
in
dec
cmp
shr
aam
cmp
popa
or
and
pusha
rolb
inc
aad
jae
mov
movsb
dec
imul
std
sub
xchg
cmc
movl
fmul
test
mov
mov
mov
addb
loopne
hlt
ja
xchg
mov
pop
mov
loop
add
arpl
flds
std
aas
iret
mov
inc
jbe
call
push
mov
mov
nop
inc
inc
push
pusha
ror
mov
inc
pop
push
test
pusha
nop
add
fistpl
mov
pop
das
pop
mov
mov
sbb
loope
add
jb
idiv
sahf
les
add
pop
into
fcoms
xchg
push
dec
or
aad
dec
pop
pop
adc
add
dec
mov
pop
cli
dec
jmp
xor
pop
cmc
jno
adc
xorb
xchg
dec
decl
pusha
into
sub
cld
rol
mov
nop
insb
loopne
push
xlat
inc
xor
enter
mov
cli
iret
inc
ss
mov
add
sub
shl
ficoms
jne
stc
es
mov
push
adc
and
lret
pop
add
mov
cltd
xor
call
shrl
arpl
in
mov
lahf
rorl
ret
sahf
mov
add
imul
cmp
inc
mov
push
loop
sbb
in
lahf
push
repnz
mov
mov
pushf
push
inc
es
lcall
rolb
hlt
xchg
mov
test
pop
sbb
adc
pop
push
stos
mov
sbb
aas
out
pushf
pop
orb
fisttpll
mov
push
pop
mov
ficoms
outsl
dec
sarb
mul
or
push
and
push
fbld
popf
push
into
inc
add
mov
mov
push
or
repz
push
fildll
jge
push
lcall
pop
or
and
add
ljmp
insl
outsb
scas
movsl
jne
sub
fdivrp
jae
jle
aad
mov
mov
out
fdiv
scas
pop
test
pop
push
cld
loopne
jo
sbb
mov
leave
mov
push
jp
test
dec
mov
or
arpl
loope
pushl
xchg
adc
ja
and
add
and
dec
mov
icebp
popa
push
xor
icebp
lods
enter
nop
inc
popa
test
cmp
pop
pop
inc
fisubl
popf
adc
mov
mov
mov
xor
sarb
xor
add
push
ss
dec
add
sar
mov
pop
sbb
push
sbb
mov
fimuls
mov
repnz
lcall
fldcw
sbb
xchg
hlt
and
pop
add
rcrb
push
mov
xchg
scas
push
sub
test
jbe
out
push
lods
fwait
mov
cmp
mov
xor
repnz
xchg
sub
gs
or
loopne
testb
lret
xor
push
pushf
mov
lock
mov
fadd
data16
repz
mov
xor
xor
xor
jo
add
loopne
and
cld
and
std
push
stos
cmpsb
stos
and
jge
in
pop
xchg
test
add
loopne
inc
add
pmaxsw
cmc
imul
cmp
mov
add
jb
jno
addr16
pop
cltd
xor
std
adc
sbb
add
adc
jb
xchg
dec
mov
mov
ds
in
push
add
xbegin
inc
dec
stos
lock
push
pusha
idiv
cmp
out
sub
push
jecxz
aad
lret
xchg
addl
adc
mov
and
rorb
aaa
fwait
and
hlt
xchg
lods
mov
inc
lock
xchg
push
test
popf
aas
in
sbb
and
repz
sub
inc
jge
inc
in
clc
and
pop
clc
xchg
pop
or
jmp
pop
ret
pop
xchg
loop
filds
push
mov
inc
das
adc
inc
pop
out
ja
and
xchg
fstpl
pop
stos
dec
push
test
incb
mov
subb
xlat
ror
dec
or
pusha
pop
pop
mov
fildl
jp
out
mov
pop
or
int
decb
pushf
sbb
xchg
push
stos
or
mov
out
xchg
das
xchg
mov
dec
xchg
push
cmp
movsl
adc
push
jns
xor
rcl
inc
out
lea
dec
pop
fmull
sbb
enter
jge
lds
test
inc
jno
mov
pusha
xchg
inc
in
dec
cld
dec
xchg
nop
inc
sahf
addr16
out
and
inc
dec
mov
jno
or
inc
movsl
mov
rorb
xor
stos
jle
and
mov
out
cltd
jne
iret
lcall
insl
jge
mov
leave
repz
and
aam
es
adc
lods
pushf
nop
shl
sti
popf
ja,pt
clc
mov
pop
mov
dec
movsb
mov
ret
mov
or
bound
imul
fmul
pop
adc
fisubs
jb
stos
les
cltd
cmp
cld
inc
mov
mov
inc
aam
inc
das
cmp
ret
adc
adc
imul
lods
ds
jecxz
out
adc
pop
lea
dec
cli
daa
fs
shl
into
je
jecxz
adc
push
jne
inc
xor
out
xor
addb
cmpsb
mov
push
test
and
imul
push
fs
fsts
in
adcl
xor
mov
dec
sti
mov
fcoms
dec
fs
adc
xor
inc
push
repnz
dec
cmp
stos
xor
xor
insl
sub
insl
mov
nop
subb
in
mov
cmp
xchg
lods
mov
lcall
inc
mov
xor
and
nop
mov
repz
inc
ret
add
in
arpl
repz
or
outsl
sbb
in
daa
out
mov
xchg
cmp
xchg
mov
sbb
fiaddl
in
push
sbb
sti
sti
cs
bound
and
mov
ss
push
int3
lcall
das
cmpsb
add
sti
xchg
mov
push
jecxz
int3
mov
mov
sub
xor
push
aas
call
sub
lret
jmp
mov
orb
adcl
test
mov
and
push
out
cmp
lds
pop
cmp
scas
sbb
rorl
jmp
fidivl
mov
xchg
mov
inc
in
mov
test
mov
movsb
adc
loopne
jbe
notb
cltd
int3
in
mov
loopne
sub
frstor
lret
cwtl
dec
add
push
push
sahf
mov
cmc
imul
flds
push
sub
inc
or
xorb
test
mov
lods
mov
inc
leave
push
repz
jg
aas
dec
push
or
sbb
shrb
lret
sti
jae
es
orb
mov
jnp
xor
into
aaa
lret
hlt
aad
cmpsl
dec
insl
pushf
or
mov
sub
pop
push
aaa
jae
je
jo
lods
cmpsl
adc
xor
dec
add
cmpb
lods
cmp
add
xorb
pusha
popf
and
jo
mov
mov
rol
leave
in
mov
jnp
enter
fbstp
fcoms
adc
int3
xor
adc
or
mov
insb
in
dec
xchg
xchg
mov
dec
or
mov
outsl
sbb
je
icebp
sbb
mov
rorl
mov
mov
out
insb
aas
imul
jge,pt
mov
sub
mov
ror
out
jo
inc
lcall
call
or
lods
setne
xchg
lret
aaa
mov
cmp
mov
jbe
cli
jmp
enter
inc
enter
in
xchg
sbb
lcall
inc
clc
les
add
xchg
jo
lahf
pop
mulb
aaa
nop
pusha
mov
or
mov
scas
xor
js
outsl
insb
icebp
pop
js
in
rcrb
xlat
imul
sti
scas
leave
aaa
lods
pop
xchg
adc
sbb
and
push
repnz
mov
and
dec
dec
sub
cmp
lret
sbb
and
xor
ret
sub
es
add
jecxz
test
xchg
push
inc
cs
in
cltd
inc
dec
cmp
stos
bnd
gs
arpl
sbb
add
sub
shlb
sbb
ljmp
lahf
outsl
pop
sbb
rcrb
pop
push
jb
push
jge
adcb
daa
mov
pop
and
stos
divl
das
rorl
rclb
or
clc
dec
ret
xchg
push
jo
xor
movsl
test
sub
sub
xor
outsl
or
aam
mov
lret
fidivs
and
adc
test
int
and
out
aam
jno
cmp
and
sbb
in
add
shr
aam
adc
icebp
sub
push
xor
xor
adc
and
add
add
adc
mov
mov
stos
adc
mov
jmp
xchg
pop
cmp
xchg
xor
scas
test
shll
nop
mov
and
push
dec
and
mov
neg
fdivl
pop
adc
movsl
adc
loopne
or
add
add
es
push
cmp
sahf
cmp
cmpsl
ss
shll
aaa
jmp
cli
icebp
mov
les
lds
push
loope
adc
mov
imul
mov
lods
ret
and
test
sahf
jge
jae
popf
xor
inc
push
clc
adc
and
sub
popf
mov
je
addr16
loopne
sbb
or
and
xor
and
shl
fstps
mov
mov
loopne
lods
in
out
daa
mov
js
inc
cmpsb
add
dec
les
lods
inc
dec
das
lret
pusha
mov
or
pusha
in
pop
sub
lea
pushf
pop
and
fs
mov
mov
and
mov
jno
out
sub
mov
add
and
hlt
fldt
dec
mov
push
testb
push
and
adc
cs
sub
ds
add
rolb
push
pop
out
jecxz
mov
mov
int3
push
xorl
mov
and
push
pop
orb
inc
fstl
inc
andnps
shrb
shl
jl
push
jbe
adc
repz
sbb
rclb
lret
lock
push
mov
jo
sbb
xchg
cmp
push
inc
pop
xchg
mov
sub
sbb
idiv
sub
fdiv
out
dec
xchg
jb
fiaddl
fadd
push
cltd
jmp
test
sti
scas
mov
lods
and
xor
fadd
mov
xor
xchg
hlt
loopne
add
or
loopne
push
xlat
int
xchg
ss
mov
mov
loope
int3
xchg
shlb
enter
add
stc
adc
test
push
arpl
and
sub
or
cmp
add
test
mov
and
push
rcrl
mov
popa
xchg
sbb
aas
sub
popa
shl
test
int3
aam
pushf
dec
and
mov
inc
dec
sbb
mov
arpl
daa
xchg
jl
mov
data16
sub
pop
xchg
pop
mov
adc
xor
mov
pusha
fldt
mov
jmp
push
rorb
cs
mov
sub
insl
test
inc
lret
xor
stc
sub
mov
xor
daa
popf
cmp
filds
mov
adc
dec
fcmove
testb
seta
enter
call
loopne
and
rorb
cmpsb
xchg
mov
mov
jmp
sub
mov
loopne
mov
mov
sbb
adcb
sbb
pusha
call
add
pop
je
push
or
xorb
inc
leave
mov
dec
mov
out
cmpsb
mov
xchg
pop
mov
loope
xlat
cwtl
xor
addb
imulb
fidivrl
adc
loopne
popf
lcall
subl
push
cmc
insl
ss
mull
lods
and
mov
dec
loop
push
dec
movsb
fstl
dec
rcl
rorb
out
incb
mov
call
adc
inc
mul
xlat
pop
ljmp
push
cld
sbb
pushf
dec
rcrb
push
add
add
dec
stc
mov
fcmovbe
sbb
fidivrs
int
ror
jno
push
fisttps
or
es
dec
cli
push
push
cmp
lock
lods
and
pop
movsl
js
pop
xchg
jb
rolb
popf
jge
rcll
sub
xor
cli
scas
xor
push
sub
fsub
and
icebp
xchg
jne
jl
push
jbe
jnp
iret
sbb
add
add
or
dec
fcomps
mov
adc
inc
movsl
jno
ds
movl
push
jnp
push
pusha
xchg
xchg
jb
sbb
movsb
dec
pop
cmpsb
push
mov
rcr
sub
mov
pop
std
inc
xorb
sahf
cmc
add
xor
inc
inc
divl
inc
inc
mov
fs
mov
inc
loopne
xchg
cmp
jmp
mov
xlat
xchg
data16
mov
xchg
adc
arpl
subl
cmp
xchg
mov
sar
sub
mov
sub
mov
lea
hlt
sbb
cli
iret
jns
xor
daa
loope
adc
sbb
sti
or
and
mov
xor
lcall
fdiv
cli
outsl
xchg
mov
push
cld
movsl
push
cmp
aad
fadds
ret
add
sbb
sbbb
leave
xchg
xchg
fisttpl
shlb
xchg
fmul
and
mov
lea
sub
call
loopne
hlt
cmp
imul
mov
mov
xchg
jae
jns
sbb
push
lods
and
cmpsl
inc
pushf
sbb
mov
mov
push
cvtps2pd
xchg
sub
mov
test
mov
cwtl
and
adcl
add
loopne
aas
xchg
push
pop
outsl
adc
mov
fwait
repnz
jp
sub
and
mov
fucomi
sarb
les
inc
cmp
fists
mov
loopne
mov
jne
iret
mov
push
mov
lret
subb
adc
loopne
xorl
mov
loopne
decl
repz
movsb
push
fsts
andb
sahf
ss
mov
push
cmp
dec
pop
inc
adc
add
stos
ret
push
mov
stc
mov
or
sbbb
xchg
lcall
popa
ret
pusha
cmp
int3
insl
mov
sahf
add
add
cmp
push
pop
icebp
jp
adc
loopne
xor
push
push
lods
sbb
fs
ret
loopne
mov
je
push
lods
scas
dec
sbb
adc
or
sbbl
cmpsl
and
stos
popa
pop
dec
inc
icebp
mov
mov
xchg
shll
push
jae
out
sbb
popf
pop
xor
jae
mov
ljmp
mov
sti
xchg
jg
and
dec
cmp
out
xor
in
jne
int3
mov
fnstcw
nop
insb
add
and
leave
mov
xor
xor
test
add
adc
inc
sbb
sub
add
pusha
mov
sbb
addr16
inc
cwtl
enter
pusha
es
adc
jnp
push
and
test
xchg
insb
jge
mov
dec
test
mov
xor
inc
sti
fstpt
mov
cmp
sub
pop
jnp
sub
mov
rdpmc
jge
iret
fcmovu
int
clc
push
ret
pushf
add
mov
push
sti
and
clc
movsl
lods
mov
mov
mov
in
jle
adc
push
into
sub
cmp
pop
out
mov
aad
repnz
push
fdivs
sbbl
pusha
inc
gs
addb
jl
xor
inc
add
sti
into
cs
jo
and
adc
and
inc
ret
in
xchg
cmc
and
add
xor
or
sbb
and
adc
inc
inc
neg
cs
lds
xchg
mov
sub
or
or
adc
fcomps
test
jne
sbb
out
ja
outsb
test
fs
jne
in
fistl
and
or
fisubrl
mov
sti
call
and
adc
inc
mov
cltd
xorl
add
loopne
or
push
xor
ret
out
loope
xor
in
cmp
xchg
jg
xchg
mov
movsb
ljmp
adc
xchg
mov
aaa
cmp
inc
adc
in
lret
sbb
xchg
icebp
sahf
lahf
xchg
out
ret
mov
xchg
jns
shll
pop
pop
mov
mov
jp
cmpsl
pop
hlt
out
pop
ss
add
or
adc
sti
xor
dec
xchg
mov
and
sbb
pop
sahf
aam
sti
ss
sub
cwtl
push
fldl
sub
scas
sarl
xor
sbb
icebp
mov
mov
or
add
and
and
adc
adc
pop
xor
adcb
popf
pop
sbb
pusha
push
mov
call
shrb
and
mov
leave
ficompl
adc
jno
int3
push
push
cmp
sti
mov
pusha
cs
mov
lret
movsb
leave
loope
ljmp
stc
shlb
xchg
mov
out
in
lahf
aad
je
fadd
push
fsqrt
dec
fucom
imul
jecxz
mov
hlt
rclb
pop
gs
cld
dec
xor
cli
movsb
sub
sbb
mov
test
push
imul
inc
fdiv
cmp
jg
rol
push
loopne
mov
push
movsl
out
and
and
icebp
pop
or
into
out
adc
inc
jmp
push
aas
js
mov
pusha
jbe
jp
ds
movsb
mov
pop
sbb
pusha
lock
scas
jmp
in
add
jl
sbb
inc
jne
pop
jge
fs
or
shlb
in
sub
sbb
mov
pop
shr
or
out
daa
jg
lea
and
lock
sub
sbb
and
sbbl
les
push
xchg
jp
clc
jmp
mov
dec
mov
cld
pop
pusha
add
inc
cmpsb
ja
inc
and
push
hlt
in
pop
gs
hlt
das
inc
mov
paddusw
in
cmpsl
mov
add
mov
ret
call
lahf
pushf
cwtl
add
repz
lahf
mov
decl
cmpsl
dec
mov
enter
ret
fcmove
cwtl
cmp
icebp
adc
push
repnz
std
mov
scas
popa
cmc
adc
es
cmp
push
xchg
xchg
jo
imul
or
movb
mov
jmp
test
shlb
cmp
sbb
ja
jl
int
or
out
mov
pop
lcall
add
adc
or
pusha
mov
rol
and
mov
jo
das
jo
sti
mov
jb
cltd
dec
into
aam
nop
mov
fdivr
popa
mov
push
jecxz
sbb
pusha
dec
pop
mov
adc
shlb
sub
and
xorl
adc
scas
jns
push
sub
adc
sub
test
loopne
xor
std
nop
inc
pusha
pop
test
testl
in
add
xchg
outsl
cmpl
call
shl
hlt
add
fdivl
xchg
jp
push
xchg
mov
xchg
in
and
je
stos
adc
cmp
sub
nop
or
dec
cmp
xor
push
inc
js
inc
push
xlat
out
mov
fiadds
jp
inc
jb
inc
addr16
sbb
jno
mov
jl
and
es
in
sub
das
inc
imul
rcll
aam
or
cmc
add
lds
pop
mov
aas
js
aas
pop
add
std
jbe
mov
add
data16
in
loopne
dec
fildl
or
cmp
xor
adcl
adc
and
pusha
mov
cs
sbb
or
add
call
pop
push
xchg
aad
ror
cltd
mov
cmpsb
mov
push
js
lock
pop
in
test
pusha
jae
sub
scas
cmp
iret
stc
cs
xchg
and
sub
or
icebp
lods
cmp
aas
jbe
mov
jo
adc
loopne
outsb
ret
out
js
sub
popf
rolb
js
sbb
pusha
repnz
outsb
mov
adc
dec
xor
mulb
push
cmc
add
pusha
out
jge
sbb
inc
adc
cmp
out
or
rcl
adc
dec
inc
repnz
int
sub
xor
bound
pop
cltd
cmc
and
add
mov
adc
loopne
call
fsub
fcoms
adc
push
push
stos
xchg
es
pusha
call
cli
sub
xlat
inc
add
mov
xor
repnz
in
test
jg
mov
cmc
sbb
adc
insb
inc
nop
push
shlb
out
add
add
mov
out
scas
out
xchg
cmpsw
imul
inc
adcb
lods
sbb
ss
inc
sbb
sarl
dec
push
jno
mov
mov
iret
push
xchg
cmp
jecxz
adc
loopne
enter
gs
mov
inc
or
and
jle
cmp
mov
dec
xchg
sarb
dec
stos
add
pusha
push
daa
xchg
pop
add
adc
add
mov
or
loopne
lods
sarl
push
movl
je
addr16
xchg
push
xor
mov
push
dec
jp
in
add
push
cld
jbe
push
xchg
lahf
push
fdivrl
pusha
jb
mov
sahf
insl
lock
adc
daa
dec
sub
add
push
pop
jbe
rcl
cmp
aad
dec
mov
test
push
out
adc
mov
mov
inc
mov
in
lods
inc
lea
mov
repz
insl
ja
mov
add
add
pusha
fstps
and
ss
fimull
movsb
inc
mov
stos
rcrl
xchg
adc
in
and
cmp
insl
jecxz
insb
scas
sub
es
ficoms
cld
movsb
sahf
xorb
test
xchg
dec
mov
and
dec
mov
faddl
je
sbb
push
test
jg
and
jle
mov
push
in
xchg
insb
sbb
or
and
call
mov
std
popf
hlt
and
dec
icebp
dec
mov
and
mov
mov
add
cs
cmp
out
pop
and
jp
je
mov
or
pusha
pop
mov
popa
sar
rcrl
daa
dec
or
add
jo
or
test
stc
rorl
sub
mov
idivl
loopne
dec
or
sbb
aaa
fstpl
and
loopne
nop
jl
push
out
and
test
subl
stos
mov
or
mov
pop
stos
push
cmc
daa
pusha
cli
bound
arpl
and
ret
stc
inc
xor
mov
into
push
mov
pop
or
inc
outsb
xchg
cltd
fnstsw
inc
add
sbb
inc
insb
loopne
addb
sbbl
loop
fildll
pushw
jb
stos
addr16
js
xchg
inc
dec
imul
dec
dec
cmp
lahf
repnz
lods
and
sbb
rorb
push
stos
stos
cmp
insb
aas
mov
mov
xchg
pop
mov
jae
ret
inc
es
iret
stos
mov
movsb
popa
scas
push
sub
cmpb
inc
xlat
cli
rcrl
pop
and
cli
nop
sub
ss
pushf
je
cld
shll
sbb
sti
push
mov
adc
xlat
xchg
js
fisubrl
loopne
xchg
test
jp
xchg
mov
lea
pusha
push
xchg
push
jo
cli
push
incl
imul
cmp
jo
cmp
seto
loopne
jge
and
mov
jge
adc
adc
cs
flds
pop
lret
fildll
lea
inc
or
inc
or
loopne
dec
fisttpll
mov
in
lods
les
jg
sbb
pop
jb
xchg
push
in
repz
clc
push
in
sub
test
or
movsl
lret
ss
pop
xchg
pop
loopne
cmp
data16
cld
repz
mov
cmc
or
jne
loopne
mov
cmp
pushf
aam
test
ljmp
insb
nop
xor
lahf
xchg
adc
filds
mov
sub
test
mov
ja
cltd
or
in
cs
rorl
jmp
jbe
push
scas
xor
xlat
or
xchg
das
add
pop
nop
mov
and
jmp
adc
push
push
and
add
jmp
push
xchg
jl
jae
jo
nop
hlt
loopne
or
add
pop
and
jecxz
sub
fistl
das
adc
add
test
jo
xor
shrl
and
xor
enter
pusha
jle
or
pop
push
lret
packssdw
in
push
push
pop
push
push
and
jmp
mov
mov
and
dec
lret
mov
fidivl
inc
movsl
cmp
cmp
nop
andb
add
shrb
insl
in
fidivrs
nop
push
shl
mov
mov
fcmovne
add
jge
cmp
or
inc
sti
mov
cmp
std
or
test
adc
mov
sub
push
sub
inc
lock
stc
pop
pop
pusha
ret
or
dec
mov
imul
mov
std
pop
add
inc
inc
mov
push
mov
and
inc
mov
lock
dec
inc
xchg
outsl
mov
adc
sub
adc
push
rclw
and
bnd
pop
jb
out
loop
popf
test
ljmp
mov
test
push
mov
sahf
fwait
lods
inc
or
add
adc
addr16
sub
outsl
cmp
jae
dec
jno
loope
test
shlb
loop
mov
xchg
inc
add
andb
ja
push
pop
xchg
push
jo
jne
adc
mov
sahf
add
xchg
outsl
mov
jp
xlat
mov
xor
cmp
bound
das
mov
jl
mov
mov
dec
mov
mov
test
pop
jmp
pop
pop
mov
inc
sarb
mov
inc
sbbb
pushf
mov
lret
mov
adc
gs
rorb
add
in
out
xchg
rclb
fwait
loop
and
sub
je
push
test
aad
adc
cwtl
adc
mov
cwtl
sbb
pushf
mov
cmp
outsb
mov
test
outsl
imul
cltd
sub
icebp
fldl
imul
mov
pusha
leave
jb
or
popa
testb
cmp
pop
fsub
subl
inc
and
mov
pop
cmp
push
ret
mov
or
icebp
loopne
add
inc
aam
jne
pop
cmpsl
loop
pop
faddl
loopne
and
out
lea
imul
cli
sub
ret
inc
scas
dec
test
inc
aad
xchg
lea
mov
xor
xchg
imul
push
or
imul
jmp
outsl
nopl
into
imul
mov
clc
fwait
cmp
mov
or
incl
mov
loope
aam
push
xor
ss
mov
popa
mov
add
adc
and
cmp
xchg
jmp
stos
push
pop
cmpsl
cmpsl
xchg
insl
sub
xchg
and
daa
and
sbb
xchg
add
cmc
inc
fwait
inc
ret
xchg
popa
fidivl
add
jb
add
loope
ret
pop
popf
lret
test
cltd
ds
or
mov
dec
cmp
jo
pop
inc
push
cltd
mov
cmp
mov
push
repz
movsb
jo
loope
jp
pop
mov
add
dec
push
ss
add
or
loop
loopne
lods
repnz
scas
pop
sbb
jbe
cmp
cmp
dec
or
inc
loope
test
lahf
sub
aaa
pushl
adc
mov
adc
jne
push
mov
cmpsl
push
hlt
idivl
adc
ljmp
int3
loopne
div
and
adc
stos
or
inc
outsb
enter
mov
fs
mov
push
lcall
es
dec
xchg
mov
inc
dec
mov
xchg
addb
sbb
and
inc
mov
inc
shll
lea
outsl
bnd
and
push
mov
pop
repnz
jl
jns
mov
inc
iret
iret
push
cmc
scas
outsl
rcr
mov
mov
dec
jmp
xchg
in
push
popf
jne
in
jae
xchg
lahf
adc
es
push
mov
decb
xchg
cld
sub
add
cwtl
hlt
inc
pop
ja
and
mov
jae
int3
fcomps
or
jo
adc
pop
sbb
mov
out
fnsave
or
fldenv
test
loopne
inc
adc
pop
cmp
sbb
cmp
popa
pop
pop
inc
psubb
sub
test
and
mov
push
pusha
ja
cmp
sub
cs
loope
mov
popf
icebp
pop
je
popf
ja
push
mov
pop
mov
rorb
orb
mov
sbb
cmc
mov
adc
and
es
outsb
or
lcall
fiadds
fadd
push
add
pusha
es
pusha
es
sub
test
dec
ja
mov
mov
mov
arpl
ss
stos
shl
pop
pop
leave
sub
fnstenv
lea
xor
sub
mov
lcall
inc
enter
jno
adc
inc
mov
xor
sbb
inc
sar
sahf
loope
mov
leave
leave
mov
or
cmpsl
inc
xlat
and
sysexit
add
cmp
fnstenv
insl
adc
cmp
inc
movb
enter
outsl
jmp
imul
push
movsl
pop
jns
addl
cmp
pushf
xchg
mov
mull
ljmp
mov
dec
scas
push
push
fsubl
adc
cmp
xor
je
pop
jl
stos
mov
addb
scas
in
lods
pop
rcrb
push
out
xchg
icebp
scas
inc
cmp
mov
jnp
mov
jae
loopne
xor
mov
addb
xor
inc
mov
addl
pop
dec
subb
inc
in
jmp
in
jecxz
imul
jbe
add
je
add
pop
in
in
cwtl
mov
cmp
xlat
ljmp
cmpsl
mov
cmp
aam
shll
dec
inc
and
push
jg
adc
cwtl
movsb
xorb
cmp
enter
out
fdivrs
fdivl
jp
je
and
add
jmp
pusha
cwtl
int3
loopne
sub
daa
jmp
cmpsl
xchg
incl
in
lcall
xchg
insb
add
xchg
out
icebp
outsb
mov
int
or
and
rcl
notl
into
xor
insb
data16
int3
shrb
int3
pusha
fbstp
rorl
in
jo
out
adc
shrb
xchg
pop
fistpl
int
lock
imul
pop
out
ret
imul
aaa
cmpsl
push
xor
sarl
dec
sub
out
in
mov
mov
pop
lea
jecxz
and
inc
outsl
inc
push
out
in
outsb
mov
pop
pop
shl
int3
inc
clc
sub
adc
xchg
pop
sbbb
xchg
in
adc
push
pop
andl
loope
inc
stos
push
daa
mov
push
imul
mov
jecxz
adc
popa
lret
cmp
int3
add
mov
mov
mov
cltd
jp
lahf
lcall
fcmovnbe
lret
mov
aam
cld
fdivs
cmpsl
add
jle
fdivs
and
daa
inc
gs
push
inc
jl
fsubl
dec
inc
xor
mov
or
fcompl
hlt
cwtl
cwtl
pusha
ljmp
loop
mov
mov
shl
sti
cli
push
inc
in
sbb
dec
mov
push
mov
jb
sbb
dec
inc
mov
dec
and
dec
into
pop
or
mov
adcb
loopne
lret
js
lcall
dec
ljmp
sarl
hlt
inc
and
jmp
add
rclb
andl
outsl
cltd
cmp
in
sub
sbb
ja
push
push
xor
mov
sahf
int3
push
outsl
jecxz
inc
push
jle
add
xorb
adc
push
push
inc
setle
lods
jnp
xchg
xor
lods
cmp
pop
sbb
push
mov
popa
dec
cmpsl
jecxz
xor
inc
sub
sub
inc
pop
sub
add
js
push
push
test
leave
cld
cmpb
and
mov
clc
shlb
fsubl
mov
insl
aaa
popf
into
test
mov
mov
fadd
movsl
cmp
gs
jo
pop
cwtl
rolb
aas
xchg
jb
in
das
out
je
icebp
rorl
mov
roll
stos
jo
loopne
mov
les
mov
adc
addb
jmp
rolb
jnp
ficoml
xor
stos
test
pop
mov
xor
stc
or
or
pop
mov
dec
and
notb
adc
inc
adc
cld
int
jg
add
ror
add
push
inc
clc
test
sti
scas
pop
adc
dec
xchg
jle
fsub
in
adc
mov
jns
and
arpl
pop
or
add
push
and
fmuls
test
and
in
cmpsl
pop
testl
lcall
xor
and
and
cwtl
add
test
dec
pop
das
nop
mov
inc
imul
lods
xlat
jno
inc
ds
fmuls
mov
andb
loopne
mov
frstor
add
jne
rcrl
lods
lock
in
lea
xchg
mov
and
jl
mov
jl
sub
movsb
and
loopne
xor
adc
orb
lcall
push
mov
fyl2xp1
test
jns
loop
in
std
cmp
outsl
sbb
dec
loopne
imul
xor
shlb
fldenv
xor
mov
add
and
pop
mov
or
inc
js
into
lahf
loop
xchg
pop
loopne
jo
mov
movsb
mov
xchg
je
dec
xchg
popa
in
loope
in
les
or
loop
test
mov
std
pop
ds
push
stos
xchg
movsb
mov
add
or
xor
adc
mov
mov
mov
arpl
mov
jmp
fmul
inc
test
inc
shll
pop
jo
adc
and
add
cmpsb
popa
dec
inc
pop
mov
jne
jb
sub
cmp
and
test
jl
fwait
into
shrb
mov
test
pop
inc
stos
int
daa
sbb
inc
imul
sbb
sub
fdivr
push
fwait
jnp
adc
inc
les
fbstp
cmp
mov
lret
push
or
out
and
imull
repnz
loope
or
pop
subb
xchg
sub
xor
notl
xchg
js
test
fsubs
xchg
mov
dec
orb
sub
mov
and
push
jge
out
icebp
xor
addb
js
dec
mov
cmpsl
jmp
cmp
push
jmp
stc
call
jg
lahf
fnstcw
movsl
xchg
inc
sti
push
cmp
pop
jl
push
sub
xorl
pop
cs
outsl
add
push
jecxz
je
testb
rclb
in
nop
js
fimuls
pusha
int3
ja
cmpsb
daa
cwtl
js
test
imul
sbb
ljmp
hlt
mov
add
shlb
mov
mov
adc
andb
jns
scas
mov
xchg
adc
loop
pop
lahf
jnp
mov
lahf
and
ds
cli
imul
jg
int3
repz
push
push
mov
push
sbb
sbb
imul
xchg
mov
inc
insb
push
insb
std
push
sti
cmp
jmp
mov
jnp
mov
xchg
xchg
sbb
addb
push
mov
cmc
xchg
rclb
mov
mov
push
dec
inc
es
inc
mov
nop
insb
mov
stc
dec
or
mov
push
loope
in
lods
inc
outsl
nop
dec
loopne
int3
jae
cld
rcrb
or
adcb
out
xchg
shll
movsl
loopne
adc
xorb
mov
mov
fistl
cmpb
xor
mov
fsubp
ja
push
mov
xor
jo
sub
ret
scas
mov
pop
imul
and
notl
cmpb
xchg
adc
mov
lods
aas
jmp
lret
sbb
pusha
sub
int
aad
bnd
lahf
scas
jp
pop
mov
in
xchg
adc
cmpsl
lea
jns
cld
and
lcall
mov
es
push
sub
mov
and
es
inc
mov
add
pusha
leave
and
inc
scas
or
sbbl
pop
idivb
movsb
mov
pusha
pop
inc
push
movsb
lods
movl
nop
cmp
sbb
out
aam
push
mov
cmc
dec
xor
mov
xor
ljmp
jle
out
std
ja
out
mov
loopne
fbld
das
fcmovu
jo
repz
sub
fsts
sub
cs
out
inc
daa
and
cmp
int
push
mov
test
loopne
add
add
cli
repnz
push
movsb
out
mov
fsubr
mov
mov
adc
cmpb
dec
xlat
push
push
ds
sub
add
aam
jno
pop
jbe
subl
jp
jno
mov
mov
and
dec
inc
cmp
int3
push
pusha
and
gs
fld
push
mov
andb
popf
or
and
jecxz
fiadds
pusha
pop
mov
cmpl
cmp
mov
sub
xor
inc
xchg
dec
leave
adc
js
stc
in
addr16
outsb
mov
repz
xchg
in
out
outsb
mov
pop
in
xchg
jg
sub
mov
leave
je
in
idivl
dec
pusha
rcrl
mov
fs
and
fs
pop
lret
pop
cmpb
popa
shl
xlat
lods
jle
sub
cmc
xor
pop
addb
out
or
out
add
mov
int3
lret
pop
sbb
xchg
xor
sbb
rorb
rorb
or
nop
shrb
bound
stos
cwtl
xchg
loopne
and
shll
negb
pop
cs
iret
popa
jnp
sub
gs
aad
test
or
dec
push
or
mov
inc
popf
sti
cmp
out
loop
mov
sti
fsubp
aam
test
loop
adc
stos
mov
inc
push
jb
in
adc
mov
pop
fistps
fisubl
dec
or
rolb
or
sub
aas
mov
sub
insb
pop
aad
packuswb
mov
and
mov
cmp
xor
mov
mov
fldt
ja
mov
sub
mov
mov
or
gs
push
cmc
mov
xchg
scas
mov
enter
and
test
mov
mov
nop
mov
enter
dec
stos
dec
jl
ja
neg
fbstp
mov
or
pop
mov
jo
mov
jnp
xor
sub
cmpsb
stc
iret
out
lods
scas
adc
mov
and
push
ret
pushf
pushf
add
in
push
fsubr
xchg
mov
sub
mov
lcall
xor
jbe
mov
pusha
cmpsb
pusha
push
ljmp
repnz
mov
fsubl
mov
jnp
cwtl
mov
test
or
cli
loope
xchg
in
cmp
mov
cwtl
hlt
mov
sbb
add
jl
pmulhuw
outsb
outsb
mov
sbb
mov
sbbb
lock
lods
cmp
mov
cmp
mov
add
out
xchg
outsb
test
cmp
sbb
hlt
imul
scas
fldcw
repnz
xor
and
mov
loopne
pop
jmp
lods
mov
sarl
inc
test
subl
pop
inc
adc
fistps
jno
xor
add
cmpb
test
in
ja
inc
int3
testb
je
scas
push
sti
adc
enter
jo
shll
dec
rclb
or
jbe
mov
mov
mov
mov
pusha
xor
sub
lret
js
xor
jle
xorl
adc
mov
outsw
mov
int
inc
fldt
push
sub
jo
cmp
xor
sbb
inc
mov
mov
in
ret
movsl
cmp
scas
mov
xchg
cmp
jmp
mov
mov
cmp
fmuls
lret
addr16
mov
out
dec
push
push
das
jl
xchg
enter
push
outsb
outsb
inc
loopne
aam
mov
int3
fldenv
sbb
cli
int
mov
clc
stos
and
ds
mov
inc
mov
jp
pop
lock
push
jnp
and
fists
sub
jg
jle
lret
fists
cmc
jmp
rclb
adc
loopne
mov
add
or
loopne
jecxz
mov
jle
push
pushf
loopne
dec
sahf
repz
xor
lods
mov
sbb
leave
sub
pop
ljmp
popl
mov
cmc
pop
jl
popf
adc
int3
dec
push
and
ds
sbb
arpl
stc
jge
xchg
in
jbe
cmp
cmpsl
test
pop
imul
addr16
lret
push
cmpsl
cmc
xchg
mov
mov
xchg
adc
sub
lock
mov
bound
mov
sti
dec
jmp
scas
addb
outsl
inc
and
pop
and
mov
sub
andb
pop
mov
adc
and
cld
mov
rorb
jns
jbe
aaa
fs
sti
lcall
cmpl
lahf
in
ss
add
loopne
adcb
mov
mov
loopne
cmp
imul
test
pop
loopne
jmp
jmp
ds
mov
int3
shll
and
xor
mov
inc
rorl
pop
add
repz
cwtl
mov
mov
jecxz
and
loopne
stos
inc
pop
adc
and
aad
inc
and
lret
stos
inc
mov
hlt
push
and
es
adc
ljmp
es
aas
push
push
cmpsl
mov
mov
outsl
jmp
xorb
mov
lcall
cmp
popf
mov
lret
stos
jae
movsl
sub
or
xchg
or
aam
loope
sub
std
gs
pop
mov
push
dec
mov
mov
mov
and
and
int
ficomps
push
inc
dec
xchg
notb
pop
lcall
aaa
push
pop
ffree
aam
cmp
mov
rclb
dec
mov
jne
int3
adcb
sbb
aad
mov
pop
jns
sti
inc
in
jno
mov
dec
inc
js
inc
add
dec
pop
dec
and
std
sbb
sbbb
jae
jno
jge
mov
imul
scas
aad
mov
push
lahf
test
bound
mov
testl
sub
fisttpl
sub
cmp
das
repz
jmp
loope
push
dec
aas
out
mov
xchg
movsl
aas
cmpsb
hlt
cs
sbbb
push
movsb
lock
lea
or
mov
in
out
lret
or
loope
adc
adcb
push
stos
loope
mov
out
mov
repz
inc
sub
test
and
test
shlb
call
out
pop
mov
clc
mov
inc
sbb
pusha
jg
shlb
mov
lods
lret
xchg
jecxz
adc
lea
xchg
jg
push
dec
arpl
pop
adc
and
pushf
movsb
mov
push
xor
or
xor
popf
push
sub
in
arpl
addr16
fwait
lods
popa
mov
pusha
mov
add
cmp
adc
push
shll
push
and
popa
cmp
mov
lea
les
pop
test
inc
test
cltd
les
clc
loopne
dec
imul
xchg
inc
outsb
inc
pop
inc
cmpsb
xorl
cmp
jbe
cmp
adc
sbb
sahf
cmp
and
pusha
inc
or
jo
outsb
mov
jne
out
mov
jno
cmp
insb
or
mov
stos
aad
fsubr
sti
jle
push
and
repnz
cmp
jg
mov
mov
xor
gs
cmp
subl
add
pop
imul
cmc
cmp
loope
scas
fisubl
sub
jp
leave
jle
push
cmpsb
sub
lret
inc
jp
jnp
jns
mov
sbb
je
addr16
fadd
fiadds
imul
xor
lea
mov
xor
xlat
add
clc
negl
push
lods
insl
repz
icebp
jne
scas
fdivrl
cmpsl
stc
lods
rcr
imul
cmp
shlb
enter
cmp
loopne
jp
icebp
pop
fs
ret
popf
inc
dec
jge
cmp
iret
push
fisubrl
imul
pushf
loopne
add
xchg
or
loopne
cmp
adc
scas
xor
jle
imul
pusha
mov
cs
cmp
cmp
cmp
push
mov
cmpsb
pop
mov
sti
cmp
outsb
dec
xchg
loopne
jnp
add
out
sub
loop
aam
popa
sar
clc
daa
mov
ss
mov
test
rcll
pushf
add
jbe
push
sbb
and
push
pop
mov
rol
mov
xchg
push
test
jecxz
mov
sub
sbb
inc
or
shrb
mov
cwtl
aam
or
adc
ds
or
jne
xchg
into
xchg
jne
cmpb
mov
jns
punpcklwd
scas
mov
or
mov
jg
adc
call
and
mov
jl
imulb
jl
sbb
cmp
fnstsw
imulb
dec
call
add
insb
pop
and
sarb
mov
aaa
or
leave
mov
sbb
push
inc
lcall
and
int
adc
sub
inc
mov
scas
adc
rorb
leave
pop
mov
dec
out
mov
add
cld
lods
jl
xchg
lods
pusha
enter
mov
fsubrs
push
addr16
inc
dec
fidivrl
inc
adc
leave
or
mov
loopne
cmp
push
cmp
je
decb
mov
stos
ljmp
stos
sbb
mov
push
cmc
hlt
rolb
imul
mov
dec
in
jbe
jp
or
andb
nop
inc
or
imul
leave
enter
xchg
fdivp
decl
inc
sbb
push
xchg
mov
aam
movsl
shlb
iret
mov
pop
pop
sbb
add
js
mov
xchg
mov
push
gs
mov
test
je
sub
ret
dec
idiv
pop
sub
lret
fmull
sub
cmpsb
and
mov
stc
jecxz
jp
cmp
cmp
cmpsb
repnz
lcall
subb
pop
aas
mov
loop
dec
pop
in
rclb
mov
mov
xchg
mov
sbb
pusha
rcrl
std
dec
jmp
pop
int3
adc
or
das
call
and
repz
xor
test
add
bound
push
xchg
fwait
mov
push
rclb
call
loopne
clc
loopne
je
or
loopne
sahf
jnp
pop
sahf
outsl
inc
pop
jle
data16
adc
sub
mov
inc
out
lret
leave
inc
addr16
andb
mov
call
loop
mov
mov
xchg
cwtl
push
xor
adc
xorps
mov
lahf
adc
add
jecxz
out
insl
mov
push
lods
or
rolb
xchg
popf
lret
xchg
mov
out
mov
sahf
lods
or
mov
out
adc
mov
push
fists
sub
ret
or
sar
mov
mov
cwtl
in
xor
in
sbb
into
push
subl
mov
rcrl
lock
daa
jg
testb
adc
scas
sbb
add
hlt
and
jg
mov
dec
and
xchg
shll
insl
xlat
dec
push
lahf
or
add
incl
mov
mov
mov
pop
adc
mov
sbb
sahf
inc
cmpsl
stos
jnp
test
call
insb
ret
stos
pop
mov
fldcw
or
pusha
dec
sarb
add
movaps
push
xchg
in
add
cmp
scas
mov
xor
out
sbb
push
jl
test
aam
pushf
mov
div
iret
outsb
daa
adc
outsb
push
pop
or
sub
xchg
addb
lcall
das
shll
inc
sti
jae
shlb
adc
pop
lret
lret
pop
jnp
les
sub
les
pop
sub
push
xlat
rorb
xor
push
pop
repnz
outsl
das
mov
xor
sbb
pop
xor
pop
mov
or
mov
xor
cmpsl
xchg
aas
insl
or
cmp
sub
arpl
push
lcall
add
jnp
xchg
push
out
fisubrs
and
test
add
roll
push
sbb
scas
call
cmc
hlt
ljmp
lock
fisubrl
push
pop
sahf
imull
jg
out
imul
fmuls
lock
push
adcb
in
shrb
jne
pushf
int3
shlb
out
aas
daa
stos
mov
jnp
insb
sub
shl
lods
imul
and
xor
lds
xchg
mov
je
xchg
addr16
dec
adc
popl
jne
rcl
nop
lock
sahf
ficomps
pop
into
jmp
cwtl
and
push
aaa
jno
mov
je
pop
jo
fisttps
mov
push
imul
cli
jne
hlt
rcrl
xchg
cmp
faddl
test
ret
pop
iret
push
adc
mov
andl
and
add
xorb
fsts
xor
push
int3
mov
repz
xchg
mov
mov
pushf
insb
and
push
sahf
test
pusha
popf
xchg
pop
sti
je
lea
sub
mov
xorb
pop
sub
imul
leave
push
or
add
test
out
cmp
cmc
push
or
add
inc
ret
xchg
sahf
jne
dec
mov
clc
pop
icebp
xor
add
dec
push
movsbl
ljmp
jnp
stos
les
popf
repnz
cld
and
pop
adc
in
out
mov
lahf
jmp
rdmsr
or
jne
ds
sub
lea
aas
daa
add
sbbb
fidivrs
cmp
gs
fisubrs
sbb
adc
jb
push
stos
push
mov
mov
rclb
push
lret
outsl
enter
cmp
jmp
add
adc
mov
add
pusha
jno
adc
push
std
jmp
mov
subb
add
fwait
aad
aas
cmp
xor
pusha
cmp
roll
lret
jge
adc
in
fsub
cmp
jae
rorb
out
xchg
adc
cs
mov
and
or
sbb
add
test
dec
ficompl
fdivs
sub
sub
mov
push
mov
cwtl
cld
shrb
mov
data16
dec
push
jo
jl
dec
in
xchg
cmp
std
and
orl
lcall
mov
xchg
mov
fdivs
mov
imul
loop
pop
sub
int
push
lods
jl
push
sbb
add
adc
adc
sbb
mov
shl
lock
jne
fisubrl
sub
cltd
lods
das
test
lret
cltd
les
xor
add
or
fimuls
loop
loopne
push
dec
xor
popf
scas
lcall
fsub
test
and
mov
jne
aam
jl
mov
mov
ljmp
add
add
sub
push
ret
add
ficompl
and
pop
insb
imul
and
ss
ret
enter
or
test
sbb
jg
lret
out
test
fstpt
leave
in
int3
dec
stc
adc
orl
js
adc
and
mov
add
mov
inc
lock
mov
out
repz
sub
stos
lds
inc
mov
add
or
loopne
xor
mov
pop
jmp
add
insl
xchg
fsubs
or
pusha
in
inc
ljmp
pop
xor
stc
lcall
mov
fidivrs
fnsave
addl
iret
shlb
scas
out
xor
outsl
insl
and
jns
call
mov
aam
sar
pop
mov
lret
jle
fsubrs
jns
fcmovne
cmpsb
into
xchg
mov
xchg
lret
mov
sbbl
or
mov
lods
pusha
jbe
xor
stos
mov
or
xor
add
lret
shrl
push
sbb
call
faddp
into
out
outsb
jae
mov
pop
adc
push
imul
adc
or
cmp
in
mov
repz
sub
mov
stc
dec
movsb
mov
jmp
sbb
mov
hlt
test
andb
adc
arpl
lods
imul
mov
jge
and
jecxz
pop
sbb
add
hlt
mov
mov
sub
pop
mov
outsl
mov
lea
lds
jp
adc
loopne
nop
shlb
shl
in
dec
aaa
test
inc
xor
mov
fadds
repz
je
push
dec
imul
call
loope
daa
sbb
adc
mov
lock
cmc
push
push
cmp
cs
lahf
and
js
and
fcmovne
outsb
add
jge
fstps
daa
cmp
inc
and
pop
inc
inc
aam
xor
xchg
sub
pop
loop
xchg
lds
imul
and
into
cmp
xor
mov
loopne
shlb
js
repz
sbbl
cmp
loope
sub
out
inc
or
cwtl
mov
or
inc
fimull
cwtl
mov
fstpl
addb
loop
jmp
mov
mov
jge
jmp
fwait
fwait
mov
jp
push
or
xorl
jl
xchg
repz
pusha
cmp
fs
push
dec
push
mov
imul
lods
adc
jne
imul
iret
bound
mov
ret
or
fisubl
jge
inc
add
mov
and
and
iret
test
mov
out
out
fnstenv
les
cmp
sbb
addl
mov
inc
inc
test
outsl
es
xchg
xor
mov
les
sub
lds
lds
in
ja
cld
loopne
je
mov
mov
fistl
cmp
sub
scas
gs
add
rcrb
push
mov
mov
daa
lret
test
jmp
fbld
push
aaa
cmp
jbe
scas
cli
xor
xor
jle
sub
push
filds
js
inc
lcall
stc
mov
sar
in
inc
fidivl
dec
jg
mov
std
add
test
xchg
lods
and
mov
cmp
push
pop
int
insl
pop
mov
xor
cmp
mov
and
loopne
jno
insb
loopne
and
mov
popf
push
mov
xchg
xchg
pop
dec
addl
outsl
lods
add
in
jae
push
jl
outsb
inc
insl
inc
push
xchg
insl
or
addb
into
loope
xchg
adcb
push
es
addb
jecxz
daa
jmp
into
outsl
and
insl
shr
push
cmp
data16
lods
mov
in
and
in
inc
das
push
lahf
jl
xor
mov
lods
jp
jbe
xchg
mov
dec
mov
loopne
push
adc
repz
dec
gs
pop
inc
add
aad
test
xorb
test
daa
adc
pusha
int
aas
jo
mov
push
push
fsubl
iret
negl
js
push
inc
sbb
or
icebp
cmp
lea
mov
inc
pusha
dec
mov
mov
lret
adc
xchg
xor
loopne
xchg
lock
arpl
sub
popf
outsb
and
in
out
mov
add
pusha
gs
call
sbb
mov
adc
rcrb
popf
outsl
mov
pop
fstp
mov
scas
jp
inc
pop
jecxz
vmwrite
outsl
push
pop
cltd
insb
mov
jo
je
jp
push
lret
insl
movsl
sub
shlb
xchg
xchg
shll
cld
mov
push
push
aaa
dec
inc
dec
aam
add
xor
js
hlt
lds
pop
inc
lds
mov
pop
or
push
mov
mov
add
and
es
shrl
aam
lahf
lcall
stc
add
xchg
pop
stos
jbe
inc
fprem1
loope
push
out
push
out
pslld
rsqrtps
and
repnz
xor
mov
sarl
addr16
mov
leave
jmp
xchg
mull
ja
pop
rcr
push
push
scas
stos
out
clc
testl
xchg
fimull
cmp
mov
nop
mov
and
jg
test
cmp
les
mov
mov
pop
lods
fwait
hlt
in
push
roll
lcall
xchg
rorl
mov
adc
push
inc
test
imul
shl
or
pop
pop
xor
xchg
sbb
add
rolb
cmp
aam
out
enter
push
loop
clc
fstpt
out
fucom
pushf
test
jb
mov
cwtl
adc
aad
cmp
mov
adc
int3
mov
pop
dec
jb
fmull
cmp
or
cwtl
je
jmp
movsb
div
add
pop
lods
add
xlat
mov
push
shlb
inc
cmp
push
adc
jne
lret
in
sbb
loopne
add
pop
or
xchg
andl
xchg
sbb
loop
cwtl
adc
xchg
and
cmpb
xor
pop
push
popf
cmp
mov
rcrb
inc
ljmp
cmp
jg
je
ret
or
push
jb
icebp
rorl
jbe
mov
pop
scas
mov
add
lahf
std
jg
lea
mov
repnz
pop
cmp
cs
stc
inc
outsl
fs
sub
sub
cmpsl
or
cld
jb
pop
xor
ds
cmp
out
cmp
rclb
push
dec
ds
mov
and
lahf
dec
inc
xlat
mov
jmp
dec
dec
leave
lds
ret
add
fldl
add
jge
or
xlat
arpl
les
fldenv
clc
ds
std
std
call
xor
adcb
mov
js
mov
and
and
adcl
inc
testb
sbb
push
enter
pop
jae
dec
jo
inc
fcmovnu
mov
lods
mov
data16
orb
pusha
jg
lret
std
int
push
sub
jne
mov
add
add
push
stc
adc
xor
sbb
pop
lret
or
pop
adc
mov
out
jl
ljmp
jne
in
scas
pusha
sub
inc
inc
pusha
in
sbb
mov
shrb
leave
mov
fwait
pop
mov
test
and
mov
pop
cmp
mov
push
jae
scas
lcall
push
pop
sbb
push
int
xor
fsub
xor
std
fcmovu
test
add
lret
push
in
cmp
insb
mov
in
pop
jmp
neg
pop
push
insl
and
jecxz
cmp
jecxz
loop
lock
mov
nop
cmp
enter
push
mov
je
pushf
sbb
nop
cwtl
xorb
sar
mov
int3
add
ret
push
jbe
xchg
in
jns
or
daa
jp
movsb
push
in
out
sbb
das
jecxz
je
fildl
push
fnstsw
int
jb
ret
cmp
mov
xchg
pushf
call
pop
movsb
mov
ljmp
iret
adc
pusha
inc
test
xchg
mov
lods
and
call
mov
cmpl
xor
out
mov
cmp
jns
inc
xchg
add
xor
aam
sbb
aad
outsl
xor
outsl
jp
mov
mov
sqrtps
repz
jg
cwtl
mov
dec
push
push
outsl
int3
push
aas
arpl
out
mov
mov
decl
inc
jg
sbb
sbb
dec
pop
sub
sub
cmp
in
movsb
insl
pop
xchg
cld
sahf
lods
mov
les
pop
sbb
adcb
aas
sub
xor
jae
push
aaa
or
add
and
loope
enter
sub
out
dec
clc
cmp
xor
jp
add
fcmovbe
or
icebp
push
push
sbb
shlb
test
mov
clc
shll
adc
repnz
fdivrs
pop
addb
test
loopne
mov
int3
push
aad
inc
pop
nop
shlb
or
push
es
lods
push
imull
inc
addl
cmc
loop
jo
push
sbb
adc
adc
loop
jbe
mov
leave
packuswb
add
stc
jg
in
js
and
in
repz
xchg
gs
adc
sbb
icebp
push
cmp
inc
mov
fadds
xor
fists
pushf
in
pusha
out
imul
sar
jnp
repz
jg
jl
movsl
pop
mov
je
push
inc
lret
adc
push
inc
gs
inc
or
rorb
and
decl
inc
inc
jne
inc
dec
pushf
mov
test
mov
fnstcw
stc
inc
ret
cmovb
sub
shl
cli
js
neg
xor
push
mov
cmp
in
xchg
loope
push
pop
xchg
push
push
loop
sahf
sub
cmp
shlb
push
iret
dec
out
xlat
mov
dec
daa
sub
push
add
sti
dec
fistpll
xlat
mov
pop
sub
mov
inc
lods
jmp
adc
call
xchg
add
add
test
xchg
jo,pn
and
inc
inc
sbb
cmp
push
in
pop
lahf
sub
rcl
dec
lds
loopne
inc
push
sahf
out
idivb
shlb
test
mov
rcll
pop
in
adc
inc
popf
in
icebp
pop
rorb
lret
mov
js
push
mov
mov
mov
repz
xchg
mov
repnz
cmp
xlat
stc
mov
pop
inc
out
loope
mov
or
in
mov
outsl
cmp
flds
inc
decl
mov
out
addr16
xchg
push
push
out
mov
iret
push
repz
sbb
loopne
out
sahf
je
mov
push
movsb
stos
mov
push
iret
pop
ret
push
jns
and
jmp
shll
js
daa
cld
fldt
out
stos
dec
out
add
mov
int3
subl
lods
fdivrs
fnstcw
shll
cmp
aad
or
jp
xchg
imul
loope
inc
loop
push
js
xor
sbb
cmc
out
mov
pop
enter
int3
dec
idiv
inc
leave
mov
and
lret
cli
jl
or
rol
mov
xchg
xor
sbb
sbb
mov
push
adc
inc
imul
int
fucomip
jbe
into
push
movsl
jo
push
fiadds
aad
mov
sarl
dec
leave
dec
dec
sti
imul
mov
in
je
movntps
pop
leave
leave
push
inc
mov
je
pop
dec
sub
xor
adc
mov
orb
add
and
sbb
hlt
int3
loopne
add
jne
xor
iret
adc
push
repz
fs
sbb
mov
clc
sbb
sbb
fwait
cs
aad
jecxz
jg
test
loopne
xchg
test
mov
add
xor
rol
in
andl
pop
cmp
mov
xor
or
pushf
add
inc
xchg
and
sub
repnz
cmpsl
shr
ss
fcoml
mov
cmc
add
xchg
inc
sbb
imul
stc
lock
xchg
inc
loop
daa
fmuls
push
push
inc
leave
pop
lods
or
mov
pushl
rol
addr16
cmpsl
pop
add
cmp
cmp
lret
adc
push
xchg
shrb
push
fcompl
inc
xor
enter
iret
cli
mov
test
loopne
and
bound
mov
push
loope
mov
les
xor
mov
addl
aam
iret
shlb
xlat
inc
add
push
stc
sub
nop
xchg
and
shlb
or
adcb
bound
sub
add
jle
ljmp
adc
idivl
or
push
jl
or
dec
or
inc
cltd
pop
jecxz
pop
jno
fimull
fsubrs
push
in
add
xchg
arpl
cmpsb
les
jnp
cmp
xor
and
jne
das
testl
out
cmovp
les
push
or
ljmp
inc
inc
and
add
add
aam
push
cli
cli
sub
xchg
mov
popf
adc
or
jno
les
push
pusha
sub
test
lock
ret
xor
and
cmp
inc
inc
xor
inc
push
xchg
xchg
sbb
jo
enter
mov
imul
xor
jb
leave
adc
mov
and
add
push
sub
lahf
pop
cmp
pop
imul
add
inc
mov
shlb
loope
inc
sbb
mov
pushf
hlt
add
stos
aad
xchg
dec
dec
leave
cwtl
test
insl
cmp
pop
lcall
out
lea
xchg
cmc
lock
add
stos
push
in
push
sbb
test
stos
cli
popa
mov
jbe
imul
xchg
jbe
jle
mov
push
bound
inc
adc
adc
inc
in
insb
xor
sub
enter
in
ljmp
sub
xor
insl
cmp
fsubs
inc
repz
faddp
and
xor
dec
mov
lock
adc
ds
xorl
jb
xor
jl
cmp
loopne
xchg
push
mov
test
lods
cmc
jg
test
xchg
mov
insl
and
adcl
dec
cld
aad
mov
and
je
cmp
jl
inc
test
sub
mov
mov
and
fadd
dec
cmp
xchg
mov
movsb
push
adc
pusha
mov
clc
xchg
dec
lock
sbbl
enter
loop
ds
add
test
xor
xor
enter
adc
loop
sar
jp
fldt
mov
enter
loop
call
std
lods
aad
mov
sbb
adc
mov
add
fisttpl
push
out
and
lods
aad
int3
jnp
pop
inc
add
mov
sub
xor
mov
fs
sbb
cltd
pusha
cmpsb
sub
mov
cwtl
add
xchg
sbb
adc
cli
sub
cld
pop
mov
xor
pop
xor
xchg
aas
cmp
orl
sbb
test
out
jl
mov
xchg
mov
xor
arpl
ljmp
aas
roll
mov
icebp
xchg
lds
mov
inc
xchg
cmc
iret
outsl
lds
rcr
loop
jmp
adc
xchg
dec
mov
repnz
xlat
cmpsl
xor
mov
mov
xor
ss
push
xchg
js
jb
xor
cwtl
mov
dec
mov
divb
int
add
jecxz
icebp
sub
test
clc
xchg
cmp
dec
scas
fs
mov
push
inc
mov
add
out
scas
sbbl
mov
daa
stos
push
push
bound
out
xor
insb
or
and
jae
je
into
xchg
int
sub
rol
insl
aaa
aad
mov
pop
lock
test
mov
cmp
pop
add
inc
lods
subb
lods
or
pusha
mov
rclb
xchg
dec
cmp
int3
jne
pop
push
push
dec
adc
pusha
push
push
aaa
ja
push
lock
outsl
or
ret
gs
inc
in
aas
mov
dec
es
adc
mov
pop
dec
bound
add
lahf
push
dec
outsl
lods
test
dec
sbb
mov
pusha
adc
outsb
test
mov
movsl
pop
dec
loope
loopne
cmpsl
xor
mov
adc
add
inc
int
jp
in
enter
hlt
pusha
jno
lods
cmpsb
test
xor
loopne
lods
push
sub
pop
adc
sbb
into
stc
fucomi
pop
sub
test
pop
xor
jle
push
push
jno
fwait
leave
and
add
pop
push
std
leave
jecxz
je
daa
cld
xor
push
outsl
jge
into
lock
lret
imul
stc
inc
dec
inc
dec
push
cmp
fs
mov
push
stos
adc
test
pop
push
sub
inc
lret
aas
aas
mov
mov
pushf
xchg
mov
adc
mov
jecxz
jecxz
test
mov
jnp
cli
rorl
jmp
dec
loop
jns
cmc
mov
fwait
push
jo
ss
or
pusha
incl
mov
sub
mov
xor
add
notl
inc
mov
loopne
loop
cmp
dec
hlt
xor
add
in
mov
and
add
sbb
fsubr
add
jnp
adc
inc
inc
mov
pop
and
pop
xor
sbb
movsl
test
out
stos
jp
push
add
add
fwait
jb
jg
mov
xchg
test
mov
mov
repnz
jns
jg
cwtl
in
push
mov
xor
scas
and
or
pusha
jb
ljmp
and
jno
js
mov
add
inc
add
pusha
adc
push
insl
xchg
and
jp
dec
mov
mov
jp
push
jp
scas
mov
in
ds
rorb
pusha
cmp
xchg
cmp
add
push
sbbb
out
or
add
daa
pop
push
jbe
mov
popl
loopne
icebp
lds
fdiv
test
mov
dec
das
cmp
das
jle
nop
mov
and
rcrl
xchg
aad
sbb
inc
mov
imul
cmp
insl
loopne
adc
sbb
inc
inc
sub
push
or
xchg
loopne
xlat
fisubl
popa
adc
add
fwait
les
and
sub
jno
mov
das
mov
push
pop
scas
dec
addb
enter
das
and
out
psrlq
clc
jns
cld
mov
add
test
shll
cld
stos
and
enter
outsb
mov
pusha
sub
push
shlb
dec
jo
rcrl
pop
imul
inc
pop
arpl
stc
cld
imul
fidivrs
add
mov
rorb
and
arpl
pop
xchg
jne
dec
call
sbbb
mov
gs
inc
inc
out
popa
jmp
jnp
jb
orl
push
dec
fsubrs
add
pusha
or
and
enter
in
xor
sbb
rcrb
les
sbb
ss
sbb
add
mov
add
inc
popa
jle
aam
lods
jbe
xchg
pop
sub
imul
sar
andl
std
xor
pop
test
inc
das
push
push
mov
mov
insb
outsb
dec
sbb
loop
push
cmp
ss
add
aam
sbb
and
add
pusha
lcall
enter
dec
lods
lods
jl
lea
jmp
xchg
push
cmp
rorl
dec
dec
ret
orl
pop
jecxz
ret
lret
add
add
loopne
inc
sub
fldt
out
loopne
cld
mov
lods
push
add
ja
jmp
mov
rolb
cltd
dec
mov
mov
sub
xchg
and
mov
pusha
xor
jge
int
pop
add
lock
test
pop
imul
and
xchg
xchg
cltd
lods
and
and
and
jno
mov
out
scas
insb
jecxz
dec
int
ss
sbb
and
sbb
shrb
xor
jge
adc
push
in
mov
scas
mov
pop
jmp
sub
imul
addr16
clc
inc
mov
lcall
popf
outsb
jle
ss
je
pop
cmp
mov
sub
inc
nop
jo
aam
scas
sub
jb
jns
dec
negb
mov
cmp
jno
jae
outsb
xchg
ret
cs
inc
xor
jns
popf
jb
push
mov
pop
jmp
push
int
in
lods
fidivl
lahf
jbe
pop
mov
cmc
cmp
and
or
pusha
cmpsl
sub
xor
pop
in
dec
aad
adc
xor
aam
lock
jl
sub
pop
push
shlb
in
xchg
and
mov
shrb
jmp
in
outsl
xchg
cs
imul
mov
inc
hlt
hlt
xchg
addr16
jb
mov
fsubs
sbb
fdivrs
jnp
jns
mov
shlb
or
mov
sti
inc
and
sti
test
mov
adc
rcrb
int
push
sbb
mov
out
in
in
inc
std
jae
out
push
lds
sub
sub
mov
aad
jge
cmp
fstl
pop
das
or
pusha
ja
out
adc
fnsave
out
cmpsl
inc
push
sub
jnp
addr16
stos
daa
dec
xchg
cltd
fstl
jecxz
shll
dec
repz
sub
jle
mov
fbld
push
jo
jbe
xchg
dec
lock
arpl
xchg
cwtl
mov
cmp
cmp
pop
movsl
xchg
lods
mov
adc
movsb
xchg
mov
fsub
popa
cld
cs
outsl
lea
ret
inc
inc
sarb
jmp
adcl
filds
adc
loopne
pop
jl
dec
cmp
mov
into
sbb
inc
cs
fs
push
insl
pop
pop
inc
mov
and
mov
xor
mov
loopne
jnp
push
je
ljmp
js
and
cmp
add
mov
dec
fistl
mov
and
sarb
std
cmp
cmp
sbb
in
cli
pop
or
subb
pop
jmp
addr16
jp
cmp
mov
jb
ret
ret
inc
sub
cmp
xor
in
aad
dec
scas
sbb
adc
sbb
in
push
lea
xor
mov
lods
dec
pushf
mov
sub
inc
adc
xchg
fistps
mov
jae
gs
mov
sbb
sbb
outsl
add
pop
insl
lcall
inc
rcl
in
in
xor
fstps
in
inc
jecxz
cmp
mov
daa
test
pusha
nop
jl
xor
stos
or
push
mov
add
cwtl
js
or
subb
rcrb
add
jg
inc
sbb
in
data16
sub
jg
in
inc
or
ds
adc
and
hlt
je
jg
fidivrl
mov
mov
loopne
push
mov
sar
sbb
mov
daa
icebp
cwtl
and
out
je
and
lcall
cmp
ss
xor
test
gs
jle
push
xchg
jmp
mov
ret
xchg
xor
or
or
nop
cld
loopne
lret
jne
int3
addb
jge
into
pop
sbb
push
xchg
jecxz
ljmp
sbb
and
mov
pop
stos
bnd
push
aas
xchg
sbb
int
aad
loopne
or
test
sub
jmp
jecxz
mov
push
mov
popa
add
and
or
and
loopne
adc
jae
fists
and
ret
pop
add
call
test
nop
aam
aad
arpl
test
scas
dec
mov
and
outsl
sbb
cwtl
loopne
iret
inc
mov
sti
pop
out
cmp
das
in
fists
or
cmpsl
loope
sbb
xchg
call
push
dec
push
bound
ficompl
cmp
xchg
test
jns
dec
sarl
in
aam
adc
mov
jb
lret
xor
rclb
int3
test
jbe
adc
mov
xchg
dec
icebp
jge
sbb
subb
loopne
push
add
sbb
jne
setl
mov
dec
pop
fidivs
mov
cli
jns
and
movsb
es
mov
lds
popa
mov
in
jl
out
pop
test
inc
add
hlt
jnp
and
and
imul
dec
xor
movsb
inc
sub
shlb
clc
xor
ss
jecxz
mov
pop
dec
aaa
mov
xchg
pop
daa
sarb
dec
mov
addr16
inc
and
xor
xchg
aas
xor
sub
sbbl
loope
and
mov
inc
push
mov
fmuls
fcomp
add
shr
popa
mov
ja
inc
call
pusha
scas
add
pusha
inc
sbb
aas
repnz
xor
inc
push
push
jne
jno
out
mov
push
cld
xchg
rcl
jae
stc
cmp
mov
adc
nop
aam
in
fsub
movsl
arpl
xchg
and
mov
mov
mov
push
or
xor
inc
fwait
movsl
cs
mov
shrw
pop
js
jl
jb
int3
lods
adc
repnz
cli
sbb
xchg
cmp
or
data16
cmp
jo
mov
jle
push
inc
or
add
jne
pop
scas
bound
in
mov
lods
fstp
xorl
cmc
cmp
stos
aam
enter
fmuls
cmpsb
or
lock
incb
fbstp
in
dec
pop
mov
sahf
mov
cs
mov
mov
xor
lret
jae
xchg
sbb
lcall
inc
inc
and
int3
gs
stc
mov
and
lret
imull
addb
pop
cmp
ds
sbb
mov
andb
mov
scas
sbb
sbb
cld
ds
test
dec
pop
andb
and
xchg
lock
adc
or
or
adc
arpl
and
jmp
into
popf
stos
push
nop
push
pusha
test
mov
lods
or
adc
or
mov
lcall
cmpsl
mov
or
or
cmpsb
mov
fistpl
or
in
pop
fwait
dec
push
ret
in
into
pop
mov
sbb
cmp
dec
pop
cmc
xchg
jl
sbb
add
adc
inc
ja
sbb
ret
testb
fdivrs
call
adc
and
pop
mov
mov
mov
or
push
mull
scas
inc
nop
nop
inc
bound
fsubrp
addr16
inc
divl
pop
push
and
or
dec
pop
xchg
sti
clc
push
inc
or
loop
add
xor
xor
addl
inc
dec
mov
imul
les
movsl
fdivrl
cli
jo
dec
pop
mov
aad
aaa
lea
add
mov
push
inc
jo
idivb
xchg
enter
add
test
adc
out
adc
push
jno
add
and
and
ret
add
sub
dec
stos
or
jb
push
mov
aam
ljmp
sub
pop
rcrb
ja
xchg
pop
xlat
dec
dec
inc
out
and
loope
xchg
sub
push
loope
xchg
or
cli
jo
out
cmc
cld
pop
adc
mov
nop
sbb
sbb
pop
insb
es
cmpsl
in
insl
in
test
aad
pop
sub
inc
pop
fisubl
mov
fsubs
inc
iret
jl
negl
cmp
add
xorl
ds
pop
cmpb
push
xor
jle
in
mov
and
and
cmp
mov
aam
adc
cs
leave
rorb
push
in
fldl
gs
bound
es
cwtl
loopne
adc
mov
add
add
sub
pop
frstor
and
sub
or
ficomps
cli
in
cmpsb
js
scas
push
in
and
enter
or
xchg
sub
in
pop
ds
sub
or
mov
sub
sarl
outsl
cmc
xchg
ffreep
xor
xorb
gs
fistps
cwtl
mov
test
and
stc
mov
out
rolb
and
push
shrl
testb
xchg
shlb
fnstenv
sarb
mov
pop
mov
cmp
imul
cmp
stc
repnz
cmp
push
or
mov
notl
rcr
xchg
lods
ljmp
mov
xabort
nop
fadds
pushf
push
mov
pusha
adc
jl
shlb
mov
in
xchg
sbb
xorl
mov
rcll
jg
ud0
rol
jno
pop
leave
and
out
inc
cmp
or
adc
xor
icebp
pop
jmp
in
lds
sahf
cmc
js
cmp
roll
cmp
adc
lods
sub
in
cmpsl
hlt
aad
adc
jnp
ja
xor
adc
in
mov
cmc
sub
flds
lods
mov
push
xlat
fstl
cmp
xchg
scas
outsb
out
test
sbb
out
lea
in
pop
aas
cmpsl
imulb
sbb
cmp
enter
leave
andb
push
movsb
inc
xchg
adc
sub
arpl
jno
pop
lods
add
lock
cmpb
xchg
jns
mov
xor
inc
in
ss
jmp
shlb
push
and
pop
cmp
cmp
sbb
pusha
mov
xchg
loopne
jecxz
fdivrs
into
push
cld
xlat
mov
add
add
xchg
dec
stc
cmpb
out
adc
pusha
inc
lods
adc
cmpsb
mov
or
add
mov
adc
sub
and
cmp
and
sbb
mov
mov
rorb
fildl
sahf
push
sbb
or
pusha
push
mov
test
push
addl
push
push
add
pusha
sub
push
out
pop
xor
test
jg
xor
cmp
sub
cmp
mov
inc
inc
mov
adcb
loope
lahf
call
sbb
add
into
xor
pop
test
add
xorb
push
in
cld
mov
xorl
imul
mov
stos
jne
ss
xchg
sbb
jns
sub
sbb
or
and
mov
in
cs
fdivr
cltd
sbb
outsl
and
xlat
cmp
rclb
inc
pop
es
xor
add
mov
mov
and
mov
pop
icebp
js
dec
mov
loopne
cmc
outsl
mov
xchg
sbbb
inc
imul
xchg
mov
pop
mov
xchg
call
xor
dec
in
or
shrb
xchg
gs
mov
push
rolb
jecxz
xchg
ds
push
jecxz
adcl
jp
rcrb
mov
mov
fcompl
shlb
test
fmuls
xor
ret
ss
sahf
nop
jo
mov
ss
dec
cmp
mov
stc
sub
fimuls
xor
lea
repz
sbb
push
fucom
mov
push
cli
ret
xor
sbb
mov
subb
iret
jp
cmp
mov
jmp
cltd
jno
xchg
and
sub
bound
mov
js
mov
fwait
or
shr
dec
push
push
cmp
adc
out
mov
and
jmp
and
pop
loopw
loop
in
stos
aaa
sub
pusha
gs
das
nop
jo
pop
jg
in
mov
sahf
add
cmp
xor
and
mov
cmc
in
repz
mov
rcll
les
cmp
dec
test
ljmp
inc
pop
int3
scas
push
jns
add
mov
shlb
in
push
cmp
adc
add
inc
push
or
pusha
adc
dec
ljmp
dec
or
repnz
mov
sub
aam
idivl
out
call
out
inc
push
aaa
and
pop
inc
mov
gs
or
out
adc
loopne
xchg
js
xchg
dec
lock
inc
movsl
in
xchg
cld
aad
and
ja
push
and
enter
pop
adc
sar
mov
fimuls
cmp
ror
popf
roll
mov
inc
xor
jl
nop
test
mov
jb
and
loop
sub
out
mov
js
popa
cmc
add
leave
cmpsb
lcall
inc
cmp
sub
nop
test
bndstx
in
in
inc
inc
xchg
cmc
adc
daa
mov
xorb
xchg
loopne
inc
loop
jg
shl
lds
enter
clc
and
subb
subl
fwait
mov
lods
test
cmc
sub
xchg
mov
cs
cmpsb
cwtl
enter
mov
mov
cmpsb
ret
cmp
xor
mov
in
into
lea
fidivl
subb
clc
insl
daa
pop
insb
popf
and
sbb
ljmp
sbb
loopne
aaa
cld
pusha
xchg
dec
cltd
push
aad
pop
mov
inc
add
push
adc
sti
mov
fistl
lahf
dec
test
pusha
popa
add
cmp
sti
or
cwtl
shlb
lahf
jl
dec
scas
orb
sar
jge
repnz
enter
sub
jmp
pusha
aad
xchg
fs
insl
js
imul
push
mov
pop
pop
and
inc
ja
test
test
shl
fsubs
mov
ja
enter
aam
repnz
mov
cli
jae
in
jns
imul
lcall
xchg
jle
ss
push
sub
test
and
lea
inc
xchg
insl
pop
mov
ret
push
pop
sbb
enter
negb
xchg
addb
repnz
xlat
mov
jl
or
gs
repnz
sti
lds
fmul
mov
mov
sub
arpl
and
push
cmp
xchg
mov
mov
sbb
and
mov
or
cmpb
sbb
xchg
les
leave
out
adc
jecxz
jl
mov
xchg
jl
xor
popa
insl
mov
xchg
mov
sbb
movsl
add
loopne
push
fisubs
pusha
adc
sbb
aad
inc
push
sahf
jbe
inc
jbe
mov
subb
mov
pusha
mov
fnstsw
or
pusha
stos
cmpsl
subb
sub
push
push
and
push
cmp
jge
fwait
cwtl
push
pusha
stc
testb
inc
cld
inc
adc
in
mov
fcmovb
and
xlat
xor
iret
cltd
clc
leave
sbb
movsl
cmpsl
out
cmp
cmp
cmc
out
andl
addb
sub
icebp
or
mov
xchg
addr16
dec
js
call
adc
sbb
mov
mov
in
pop
jnp
xor
or
dec
push
aam
ds
leave
lods
data16
ljmp
fucomi
pop
add
insl
mov
jns
lock
jle
and
mov
std
fisubrs
mov
in
xor
jle
xchg
cmc
fidivl
mov
adc
loopne
dec
test
data16
shl
jo
mov
std
pop
pushf
nop
mov
jle,pn
push
repz
mov
sub
push
sub
push
and
ja
arpl
je
aad
add
incb
cmc
mov
pop
cmp
mov
dec
jle
cmp
loopne
or
movsb
or
rclb
sti
push
scas
out
daa
and
sbb
add
mov
cli
movsb
repz
cltd
ss
pop
sub
rcl
pop
repz
addl
mov
push
sub
jmp
or
pop
pusha
lret
mov
pop
arpl
sub
hlt
push
pop
add
inc
dec
and
mov
lret
js
pushf
add
jo
lods
lea
scas
push
adcb
imul
push
xor
ljmp
arpl
inc
into
jnp
cmc
push
jae
cwtl
jo
test
xorb
push
mov
sbb
cmp
hlt
dec
lods
mov
lock
sbb
cltd
inc
mov
sub
out
sub
movsl
cmpsb
jmp
js
sbb
rorb
xor
mov
js
je
leave
jnp
jle
test
jge
jno
fwait
rep
pop
sbb
jnp
leave
sub
xor
sub
jnp
lock
mov
je
fmull
lcall
lret
inc
xchg
dec
andb
xlat
sbb
add
in
inc
mov
jae
add
call
fsubrl
mov
cmp
add
clc
rclb
sarb
addr16
pop
adc
mov
repnz
es
and
into
shlb
outsb
inc
jmp
fwait
pop
nop
je
push
mov
or
mov
and
sub
loope
pusha
and
shlb
add
inc
mov
faddl
add
out
push
inc
mov
outsl
xor
enter
lret
sbb
fcoml
ficompl
sbb
or
test
int3
in
js
in
or
sbb
js
xchg
test
and
pop
pop
ljmp
sub
cmc
inc
jle
lock
sbb
sub
mov
dec
test
push
cwtl
add
lsl
rcrb
jb
inc
cli
adc
jecxz
out
lcall
rol
add
or
push
pop
push
inc
popa
call
aad
lea
xchg
test
mov
xor
enter
out
adc
push
mov
and
mov
int
cld
and
xchg
cmp
inc
dec
sub
ret
cmp
pop
fisubrs
decb
sub
outsl
sbb
cwtl
les
lret
add
mov
or
mov
jne
push
mov
enter
mov
jl
aaa
jecxz
pushl
out
xlat
imul
xor
sarb
mov
cmp
fldl
inc
shll
cmp
add
repnz
cmpsb
push
clc
in
lods
sub
or
pop
outsl
lds
mov
cmpsl
lret
cs
jae
in
fisttps
lods
mov
popa
mov
pusha
aas
lcall
xchg
push
adc
xor
mov
pusha
sbbl
shrb
xchg
mov
decl
mov
push
aam
pop
push
sub
xor
and
shlb
iret
stos
cli
adc
sbbb
and
inc
xchg
jnp
or
test
inc
fdivp
pop
ss
mov
sbb
stos
jo
mov
rdtsc
pop
xchg
sub
xor
lods
jecxz
push
outsl
cmp
mov
aaa
and
mov
xchg
xchg
xlat
popf
mov
and
addb
sahf
loope
jb
jmp
xchg
pushl
dec
stos
or
mov
and
push
add
ss
push
pop
cmp
aam
push
cs
inc
pop
push
xor
sub
stos
pushf
pop
mov
test
daa
inc
fcoml
mov
xorb
mov
mov
loopne
pop
out
insl
lods
ljmp
and
fldt
popf
and
leave
imull
pop
leave
or
pop
inc
pop
cltd
pushf
cld
add
sub
inc
pop
pushf
fsubs
test
stos
sbb
sbb
mov
out
loopne
sub
jg
test
and
lret
lods
icebp
xor
mov
data16
aaa
mov
mov
in
add
aam
leave
add
call
scas
cmp
ss
mov
subb
fildll
mov
xchg
mov
jno
sbbb
mov
push
ja
fimuls
clc
dec
jge
dec
addr16
aam
pop
xor
rorb
dec
lret
repz
add
shlb
shlb
imul
lods
mov
dec
and
cmp
adc
cmp
gs
in
out
adc
cmpsl
xor
xor
xor
push
add
add
adc
pop
sbb
jae
jo
es
ret
movsb
inc
ret
and
fisttpll
mov
stc
inc
cmp
dec
xchg
inc
sub
or
inc
jbe
or
dec
mov
xor
pushf
dec
loopne
mov
inc
mov
push
rorb
test
push
inc
into
xchg
lret
xlat
and
scas
stos
call
bound
adcl
pusha
adc
inc
xchg
stos
out
mov
and
dec
andl
divl
jle
mov
aaa
inc
dec
jg
shll
icebp
jg
stos
adc
jmp
pop
cs
xchg
inc
sahf
popf
cli
mov
xchg
mov
jle
push
push
ficoml
call
dec
push
add
insb
bnd
in
push
push
and
and
pop
push
gs
jne
cmp
inc
pop
push
dec
test
les
xlat
cmp
loopne
sbb
xchg
cmp
jle
pop
xchg
or
ror
add
sbb
std
int
or
pusha
addr16
flds
test
lret
cmp
mov
pusha
push
sbb
mov
cmp
cltd
add
ss
push
lock
dec
das
xchg
je
lods
sbb
rclb
and
mov
inc
add
pop
and
sub
mov
loopne
lock
lods
jmp
sbb
mov
inc
adc
dec
mov
mov
test
or
shlb
xor
movsl
and
lods
loopne
cwtl
je
ret
ss
mov
mov
dec
jnp
rorb
call
xchg
bound
jge
mov
inc
mov
jge
int3
dec
sbb
cmpsl
jb
mov
push
xchg
push
lods
outsl
fnstenv
movsb
xor
push
sub
out
lret
cmp
sub
jg
test
loopne
test
adc
add
mov
and
mov
hlt
or
adc
out
les
sub
lret
xor
add
pop
xchg
cmp
test
mov
test
lcall
push
call
sub
inc
mov
or
mov
mov
popw
vmwrite
pop
pop
jecxz
mov
insl
inc
std
aaa
dec
test
mov
or
and
jbe
pcmpgtd
push
pop
lret
rolb
rcll
pop
shrb
lods
xchg
push
pop
adc
add
pop
ja
jecxz
jecxz
repz
jg
push
cmpsl
mov
loopne
push
flds
aaa
add
add
and
repz
and
push
add
mov
jp
push
js
dec
xchg
outsl
frstor
dec
dec
xor
in
out
sbb
sbb
dec
popf
push
sub
sarl
pusha
or
sub
js
ss
lret
je
cs
inc
adc
sub
fstps
push
cwtl
jo
sahf
popf
and
movsl
popf
push
push
xchg
in
add
das
shrl
mov
subl
xchg
out
pop
ret
stos
mov
fildll
and
aas
test
out
push
sarb
fmull
stos
in
or
pushl
sbb
andb
fistpl
fimull
mov
mull
and
test
rolb
inc
mov
mov
insb
xchg
ds
flds
cs
or
push
fbstp
push
add
inc
addr16
addr16
test
pusha
cmovg
das
pop
xchg
loopne
ficoms
lret
adc
mov
sbb
add
adc
inc
jle
hlt
addr16
sbb
adc
xlat
adc
pop
aaa
mov
fisubrl
xchg
push
repnz
lea
mov
adc
mov
fidivs
jge
mov
mov
push
xor
js
mov
enter
je
jle
xchg
ror
out
pop
insl
push
out
xor
in
std
test
add
hlt
add
cltd
lods
mov
out
xchg
addr16
shll
leave
pusha
mov
int3
mov
mov
add
fadds
push
inc
mov
imul
sbb
mov
or
xchg
jg
pop
repnz
es
mov
sub
jns
stos
adc
xchg
shlb
fnstenv
adc
adc
push
xchg
jmp
mov
dec
sbb
ja
jmp
rol
mov
xor
push
jae
xor
popa
pop
cwtl
int3
sub
mov
loope
cli
jp
insl
inc
gs
xor
repnz
xchg
sub
bound
mov
inc
cmp
ja
fiadds
adc
gs
insl
jno
xchg
test
sub
das
fmuls
jge
arpl
ljmp
inc
outsb
cli
mov
nop
cwtl
shlb
pxor
xchg
fisttpl
mov
mov
and
mov
sbb
inc
subl
and
out
icebp
out
cltd
mov
cmp
cmpsb
mov
mov
xor
xor
bound
xor
loopne
add
scas
mov
imul
fildll
movsl
cmpsb
push
shl
jb
aas
push
xor
enter
or
lcall
test
rcrl
sub
mov
insl
iret
ljmp
adcb
icebp
enter
aad
cmovo
in
push
popa
lahf
push
dec
cmp
mov
xor
cmp
repz
in
out
gs
sbb
sub
xchg
xor
test
test
dec
pop
sub
int3
push
inc
lods
xor
xchg
int3
cld
test
sbb
mulb
lcall
imulb
hlt
fs
mov
ss
scas
dec
inc
xor
sti
xchg
adc
add
fisttps
cmp
out
fisubrl
add
and
adc
and
mov
addr16
leave
lret
shl
xor
inc
push
bound
sbb
mov
mov
xchg
and
sub
lahf
sbb
loopne
and
xchg
in
or
aas
dec
sbb
jp
ss
mov
push
lret
dec
iret
popf
mov
xchg
fsubp
sub
ljmp
loope
fidivs
loope
bound
testb
jecxz
fidivrl
stos
sbbb
gs
mov
sbb
pusha
les
fstps
cli
or
sbbb
pop
mov
out
sarb
loop
fnsave
je
pop
push
aad
outsb
lock
hlt
popa
xchg
mov
xor
setno
xor
or
sbb
loopne
fadd
andb
test
jecxz
and
sahf
jno
dec
imull
push
inc
or
fisttps
pop
fldl
loopne
push
inc
outsl
push
and
sbb
mov
shl
cmp
movsl
xchg
test
test
shl
fisttpl
mov
fadd
inc
lock
jle
mov
gs
jp
out
mov
cltd
pop
sbb
pop
adc
inc
and
cs
fisttpll
push
pop
shrb
outsl
xchg
loopne
inc
cwtl
in
mov
push
das
lock
dec
cmp
imul
or
stos
cmpsl
call
or
cli
push
mov
jae
jo
cmpsl
hlt
fbld
daa
dec
pop
cmpsl
xchg
test
or
dec
shl
pop
int3
and
jae
repz
les
scas
mov
fsubs
test
pushf
rorb
imul
cwtl
sub
inc
lods
dec
cmp
inc
pop
mov
subb
ljmp
in
clc
ret
stos
add
imul
add
popa
stc
int3
cmc
pusha
test
call
inc
das
xchg
imulb
subl
mov
roll
int3
cmp
fs
xor
dec
dec
pavgb
imul
jle
in
lds
jmp
adc
add
cs
lahf
aaa
call
in
outsb
adc
cli
jns
test
dec
or
fiaddl
cli
decl
add
fadds
mov
neg
mov
in
jl
enter
adc
fcmovnb
popa
jl
xor
jle
xor
faddp
stos
cs
cmpb
daa
into
add
and
dec
sti
test
leave
cwtl
addb
out
or
rclb
dec
mov
push
push
add
jns
mov
pop
iret
rcrb
scas
mov
loopne
dec
adc
jp
aas
in
sbb
cli
dec
cmp
ret
dec
mov
adc
add
add
and
scas
mov
mov
shll
aaa
mov
push
addb
cmp
lds
movsb
arpl
xor
adc
nop
add
loope
xchg
pop
xchg
pop
inc
in
xor
cmp
mov
ret
and
sub
sbb
pop
je
jecxz
adc
jge
pusha
dec
outsl
push
jp
ficoml
lea
jmp
int3
add
sahf
in
dec
fldcw
stos
pop
cmp
cwtl
xor
lret
pop
dec
cwtl
push
and
pop
daa
mov
push
cmpsb
mov
pop
add
lods
push
inc
add
inc
adc
pusha
push
add
pop
test
xchg
data16
xchg
mov
cltd
push
mov
in
jns
movsb
pop
pusha
xor
je
xchg
adc
mov
add
push
mov
call
cmp
jne
sub
pop
pop
aaa
lods
jmp
mov
mov
loopne
dec
and
sbb
ficomps
push
pop
test
sub
add
std
aas
addr16
inc
inc
imul
imul
les
js
mov
cs
mov
sub
or
mov
mov
test
mov
stc
clc
imul
imull
xchg
inc
leave
scas
xor
mov
pop
jnp
sahf
mov
cmp
mov
or
mov
loope
js
cld
inc
push
pop
cmpsb
and
iret
or
add
out
jb
xlat
add
pusha
inc
and
pop
cmp
pushf
lock
pop
cwtl
mov
loopne
addb
dec
arpl
mov
gs
pusha
jo
push
add
and
adc
mov
sahf
sub
add
and
mov
xchg
jge
add
pop
jne
clc
sbb
sbb
pusha
mov
cmp
enter
and
jnp
xchg
or
inc
push
push
add
xchg
pop
ja
dec
inc
cmpl
pop
mov
mov
jecxz
in
into
sarb
fnsave
push
pop
ljmp
inc
jns
clc
stos
fisubrl
and
cmp
sub
fldlg2
in
dec
sub
mov
add
int3
icebp
inc
mov
sbb
xchg
xchg
scas
cs
mov
aas
cmc
pop
shl
in
imul
mov
or
xor
push
pop
daa
das
push
jp
or
cli
cltd
pusha
jl
in
and
push
test
cld
bound
inc
mov
ljmp
cmp
fsubl
pop
push
cmp
out
sarl
xchg
mov
adc
add
lahf
sbb
inc
scas
dec
daa
out
mov
add
aas
dec
sbb
cmpb
psubusw
sti
and
out
push
and
jnp
dec
inc
add
outsb
ss
das
mov
push
sarb
mov
mov
jo
loopne
jb
cmpsl
mov
xchg
adcl
mov
jg
adc
and
dec
loopne
inc
cmp
mull
pop
fcoms
dec
mov
in
xchg
aaa
push
rolb
lret
pusha
xchg
lret
and
pop
pop
rorb
inc
cld
cmp
aaa
sbb
sbb
jbe
jbe
fsubl
call
loopne
and
movsb
push
scas
dec
or
cmp
dec
daa
jecxz
sub
stc
or
gs
fldenv
repnz
add
stos
add
jecxz
or
ljmp
fstl
lds
cmp
out
popl
jmp
inc
sub
lock
jl
mov
scas
sub
mov
inc
clc
aaa
inc
pushf
in
shlb
test
add
scas
incl
lret
data16
fadd
lds
pop
cmpsl
dec
lods
or
mov
test
pop
xchg
cmc
rcrl
or
rolb
daa
popa
xchg
push
add
push
jl
jbe
inc
stos
cmovbe
mov
int
pop
sbb
cmpsl
loopne
adc
jne
push
xlat
cwtl
fs
cld
fisubrs
movsb
popf
bnd
and
push
shl
cld
xor
ss
dec
cld
icebp
push
lds
hlt
mov
mov
arpl
pusha
sbb
cwtl
aam
xor
inc
cmp
jmp
add
imul
mulb
jo
push
dec
lret
rcll
mov
adc
inc
sbb
or
mov
popf
mov
xchg
jp
add
bound
sub
xor
mov
mov
mov
lahf
jmp
sub
aad
andb
repnz
test
sbb
ret
pop
outsb
or
ror
inc
jbe
cltd
push
lods
jecxz
fbstp
jecxz
fstpl
mov
leave
mov
jl
dec
out
lret
push
nop
in
shlb
add
imul
cwtl
sbb
dec
push
in
call
test
jg
rolb
lods
cmpsb
lods
adc
inc
add
pusha
popf
inc
sub
mov
fsubs
jecxz
mov
in
shrb
dec
test
xchg
pop
inc
pop
sbb
nop
and
pop
pop
daa
mov
in
and
es
scas
xchg
lock
arpl
mov
mov
femms
cmp
push
adc
sub
mov
popa
data16
push
inc
dec
inc
push
inc
inc
push
push
int
jo
in
call
sub
xor
stc
int
daa
arpl
outsb
ja
cltd
jp
or
subb
ja
testl
repz
addl
clc
mov
stos
or
loopne
gs
test
sti
inc
rclb
pusha
mov
inc
loope
mov
add
leave
adc
add
jbe
orl
in
les
scas
push
mov
lahf
mov
mov
aaa
cmpsb
enter
sub
pop
push
cmp
jmp
inc
repnz
loopne
jmp
xlat
shl
mov
movsl
inc
loopne
cmc
or
mov
lock
lret
cmp
popa
cmp
movsb
adc
inc
sub
or
aad
dec
xor
shl
xchg
lcall
rcll
fnsave
scas
std
inc
jne
add
sbbb
sbb
test
and
jno
inc
iret
test
mov
sbb
mov
lods
pushf
sbb
pop
adc
insl
scas
adc
add
pop
outsl
sbb
aam
xor
or
mov
xor
aaa
pop
icebp
mov
cmp
jl
mov
mov
aam
add
push
inc
out
sbb
aam
push
xor
adc
jp
sti
imul
fcoms
xor
aas
push
cld
fcmovbe
jecxz
les
jns
fstps
fsubr
into
jne
sub
inc
in
cmp
daa
daa
push
out
pop
pop
jo
cmp
call
jmp
sbb
or
stc
inc
pop
jnp
cmpl
xor
xchg
push
jne
dec
das
iret
xchg
mov
aad
mov
addr16
int
add
pop
fsubl
add
inc
mov
int
cmp
add
xlat
push
mov
jle
or
adc
in
xchg
insb
and
push
sub
dec
testb
dec
add
imulb
and
or
sbb
pop
mov
loop
push
jmp
cmovns
ret
call
movsb
fld
or
insl
jae
fsub
sub
or
movsl
xor
sti
mov
lods
shrb
shlb
push
cmp
pop
lock
ds
mov
mov
pusha
dec
test
repz
sbb
in
mov
movb
push
lods
test
xchg
cmpb
aam
repz
and
jo
or
fsts
gs
or
mov
fwait
in
pop
cmp
int3
pop
loopne
dec
mov
sub
cmc
pmuludq
jbe
aas
negb
out
xchg
or
mov
js
push
xor
loope
shl
pop
int
mov
inc
mov
fdivrl
mov
jne
imul
inc
or
rcl
dec
leave
or
stos
jmp
and
push
mov
call
and
jg
stos
dec
xor
push
fdivs
jmp
push
mov
adc
scas
nop
dec
loopne
sub
push
sbb
lea
sbb
add
cwtl
pushf
mov
call
popf
ja
insb
leave
dec
fildl
repz
mov
push
mov
in
push
mov
xor
roll
test
loopne
in
repz
bound
lods
pop
or
and
insb
mov
xchg
call
cmp
rclb
inc
xchg
cwtl
loopne
push
or
loopne
lds
push
pop
jl
or
in
rcrl
cltd
and
ror
xchg
loopne
dec
xchg
popf
sbb
adc
pusha
es
loopne
test
xchg
pop
movsb
add
rcrb
and
movsl
data16
loope
orb
push
and
test
aam
sub
push
outsl
addr16
fwait
pop
mov
cmp
xor
div
jmp
sti
nop
and
pop
or
push
test
pusha
push
inc
push
and
hlt
insb
lock
insl
mov
mov
mov
lods
loopne
cmp
and
mov
iret
cmc
outsb
repz
sbb
xchg
lea
sbb
je
add
inc
mov
lods
inc
and
mov
adc
mov
nop
xor
in
gs
jns
pop
cli
mov
pop
pop
jno
dec
pusha
fists
jmp
aad
ficompl
push
subb
xchg
nop
lock
or
xchg
mov
fldlg2
das
jae
sub
clc
outsb
or
and
cmp
mov
ss
pop
pop
xchg
sub
jge
jp
sbb
pop
iret
ds
fnsave
popa
scas
cmp
inc
pop
stc
mov
and
or
fcmove
sbbl
mov
xor
repz
mov
out
in
cwtl
push
andb
loopne
ficompl
mov
dec
and
mov
scas
fstpl
inc
add
jge
push
jns
xor
and
lcall
and
iret
adc
outsb
ljmp
in
rclb
clc
xchg
fisubrs
test
loope
daa
lods
cmp
xor
out
scas
int3
scas
and
arpl
dec
push
clc
and
out
push
int
sub
and
cmp
push
pushf
sbb
and
mov
inc
or
shrb
mov
push
int
mov
cmpl
and
mov
pop
or
addr16
in
mov
xchg
mov
das
mov
cmp
div
jge
in
es
rcl
and
or
fadds
insb
jb
mov
pop
and
stc
aam
scas
push
outsb
pop
push
jg
xchg
sub
mov
orb
pop
dec
lds
insb
mov
inc
imul
sub
push
and
jl
xchg
adc
ret
test
fwait
jle
les
iret
add
add
add
mov
jo
jecxz
jge
pushf
fadds
int
out
mov
xchg
cmc
push
pusha
push
sbb
add
push
lock
sti
addr16
push
mov
es
scas
dec
dec
push
jbe,pn
rol
iret
cmp
shl
or
cmpb
or
pusha
int
testl
mov
and
and
cmp
sbb
pop
push
sub
cmc
sub
push
mov
xchg
mov
lea
mov
les
mov
jo
sbb
fsubp
xor
arpl
mov
in
aad
in
rcrb
mov
test
mov
and
notl
imul
out
lock
in
pop
sahf
xchg
jo
cmp
adc
add
test
dec
add
sub
push
add
insl
sbb
dec
lret
or
xchg
push
int
add
xor
add
rclb
loopne
pop
in
sub
cmp
sahf
cmp
iret
inc
imul
push
pop
push
dec
icebp
sub
push
add
lahf
jo
add
lret
mov
and
and
ds
cs
sub
push
outsb
fldl
sbb
adc
jl
cmpsb
fdivrs
dec
xor
and
xchg
add
inc
push
xchg
sbb
cmpsl
push
gs
adc
sub
fwait
sbbb
lock
divl
mov
lret
push
and
adcl
pop
sbb
je
or
add
mov
mov
ss
imul
call
lret
jmp
or
je
pushf
and
js
test
fisttpl
sti
arpl
iret
xchg
jo
inc
inc
jns
add
mov
xor
or
and
popa
push
jnp
xchg
pop
fs
clc
jno
xor
std
xor
jnp
mov
dec
dec
in
ja
aad
out
mov
and
call
call
jp
pop
movsbl
imul
ss
cld
adc
dec
lods
xchg
pop
and
xchg
add
mov
sbbb
pusha
call
pop
sub
or
jg
pop
or
in
xchg
test
or
loopne
not
loope
and
fisubrs
sub
fldl
pushf
inc
out
sub
fwait
testb
lods
jmp
mov
xor
and
or
sbb
pusha
in
mov
daa
adc
and
out
xchg
push
and
lock
or
sti
mov
jns
stc
jl
cmp
jl
bound
cmp
test
cli
sub
adc
movsl
mov
push
sbb
incl
sub
xor
popf
daa
je
fsubrs
xor
ret
aam
pop
loop
cmp
outsb
mov
pop
inc
fdivr
iret
pop
and
inc
insl
xchg
lds
or
mov
in
pop
in
in
lock
movsl
add
push
movsb
stos
xor
popf
push
incb
test
jp
sub
test
mov
lret
xchg
sub
mov
dec
xor
pop
sarl
cwtl
dec
loopne
hlt
in
sbb
andb
in
lock
movsl
inc
dec
in
mov
pusha
test
add
mov
mov
inc
test
jle
xor
mov
out
push
js
lods
jns
movsl
loope
imul
mov
lods
and
cmp
jge
scas
out
insb
loope
pushf
or
sbbb
adc
shlb
mov
sar
xchg
int3
push
cmp
test
xor
fstl
add
aas
cmp
jge
int3
adc
stos
int
pop
mov
xchg
and
rclb
popf
movsl
es
push
rcll
call
xchg
pop
shr
sar
pop
bound
cmpsl
clc
push
addb
insb
pusha
push
out
mov
mov
fcompl
addb
std
pusha
xor
test
cmp
ljmp
cld
lods
testb
in
xchg
cmpsl
inc
cs
jle
mov
mov
push
dec
push
aam
ljmp
lds
je
inc
xor
lods
jo
cmp
movsl
push
test
dec
sti
xlat
iret
sbb
inc
adc
or
xor
mov
jg
pushf
aam
shrl
xlat
xor
pusha
ret
data16
ret
sub
mov
iret
pop
les
into
out
leave
test
call
and
pop
pop
pop
je
jg
add
or
in
and
adc
clc
push
pop
shrl
inc
xorb
scas
adc
jp
js
pop
push
out
push
imul
push
negb
push
cmpsb
pop
sub
mov
mov
inc
fwait
pop
lahf
popf
enter
in
sbb
fcompl
pop
fs
adc
lcall
in
inc
mov
movhps
sahf
xchg
ret
fiaddl
cwtl
and
sub
js
movq
icebp
cmp
sub
add
pop
ja
lods
aas
xor
fstpt
add
rcrl
push
sahf
pop
mov
cmpsl
sbb
adc
jge
mov
pop
sub
or
cmp
mov
mov
icebp
mov
fwait
sub
mov
sbb
ja
dec
or
lods
jg
imul
pop
adc
jmp
jg
and
mov
shll
out
pop
ret
lahf
in
int
sbbl
jno
xor
inc
ror
loopne
js
mov
dec
loopne
lret
pushf
mov
in
sub
rcr
mov
in
push
es
lret
xor
insl
cmpl
jb
adc
inc
scas
in
or
adc
jp
popf
jl
inc
imul
stos
sub
push
out
add
repz
fldenv
sbb
and
pop
dec
mov
mov
and
adc
inc
andb
mov
mov
xor
popf
jb
jecxz
pop
fdivr
push
in
flds
or
pop
popf
imul
inc
dec
xchg
fstl
pusha
and
and
mov
popa
sub
add
xchg
cmp
jp
or
sbb
pusha
sub
push
enter
aam
adc
xor
and
icebp
arpl
lea
call
mov
cmp
sbb
lret
stos
fstps
pushf
test
rolb
aaa
mov
inc
fisubl
cmpsb
cmpsb
dec
into
subb
stc
stos
jmp
fdivrs
fistps
adc
jae
shr
js
in
mov
xor
cmpsb
dec
and
mov
cmpsb
xchg
sub
cmp
jmp
shl
adc
pusha
push
jl
pushf
test
cld
test
pop
outsl
add
inc
add
cmp
add
in
aad
data16
inc
ret
push
jle
hlt
xchg
inc
xchg
and
and
xor
nop
test
test
les
add
pop
jb
jecxz,pt
mov
aaa
shll
add
or
push
ja
daa
xchg
pop
mov
jge
xor
sbb
ds
pop
loop
push
jg
fstp
xchg
repz
loop
or
stc
dec
xchg
xor
sub
xor
lcall
mov
btc
repz
sbb
inc
ret
hlt
cmc
jns
mov
cmpsl
stc
pusha
and
mov
inc
adc
mov
loopne
or
mov
imul
xor
jae
repnz
pushf
and
loop
adc
adc
daa
or
shlb
call
ret
mov
imul
mov
gs
and
pushf
xor
int3
std
mov
mov
je
test
mov
movsb
test
movsl
sbb
cmp
pop
pop
ljmp
jp
bndstx
xchg
pusha
mov
inc
sbb
push
and
rolb
xlat
es
cmc
mov
or
add
gs
push
add
mov
data16
dec
cmpsb
adc
sbb
pusha
leave
inc
mov
ds
inc
dec
fdivr
push
jl
push
sub
mov
shl
inc
faddl
and
call
mov
ret
in
pop
mov
cmp
mov
fwait
gs
paddsw
jo
pop
shl
add
add
fs
lods
jno
jmp
jb
sub
inc
sbb
rol
xchg
test
sbb
sub
inc
bound
test
loope
cmpsb
cs
icebp
clc
add
xor
adc
add
xchg
jecxz
mov
test
mov
mov
test
adc
cmp
mov
cmc
outsb
pop
stc
int
xchg
jmp
cmpsl
scas
mov
shrl
in
call
push
sub
mov
ret
cmp
mov
fistpll
xchg
push
pusha
imulb
test
clc
data16
or
adc
pusha
add
jl
mov
insb
and
gs
cwtd
xchg
mov
subb
vmovupd
xchg
addb
inc
push
fadd
addb
dec
je
xchg
add
jns
mov
je
cmpsl
fiaddl
pop
stc
int3
xchg
fldl
adc
jnp
dec
iret
push
int
pusha
decl
les
or
pop
lahf
out
add
adcb
pop
fdiv
test
dec
in
mov
hlt
test
das
jmp
mov
filds
sub
out
icebp
dec
adc
leave
pop
push
mov
gs
cmpsb
rcll
fnstenv
cmpsb
dec
loope
xor
rorl
daa
pop
scas
adc
pop
cmp
sub
lock
mov
adc
push
loopne
dec
lret
pop
fdivl
sub
inc
pop
aam
sbb
rolb
mov
mov
mov
sahf
mov
shrb
add
out
jns
add
jge
cwtl
cmp
xor
push
rorb
fwait
clc
aaa
mov
xor
sub
pop
fildl
test
nop
and
add
cmp
fcompl
xchg
scas
stc
or
fsubrs
sub
and
int
cmpsb
aaa
mov
cmp
cmp
out
lods
mov
sub
sbb
pop
and
dec
pusha
mov
push
lret
orb
mov
cli
movsb
mov
mov
xchg
mov
popl
lret
mov
add
loopne
jge
push
lods
insb
push
inc
mov
jp
test
and
jecxz
fwait
nop
nop
inc
packuswb
jo
ret
mov
cmp
jl
push
test
fsub
iret
add
adc
pusha
test
aaa
pop
repnz
repz
cmpsb
call
pop
lahf
jbe
xor
mov
outsl
dec
or
subb
fsubl
cli
sbb
push
xchg
insb
addb
adc
mov
push
inc
xchg
cmc
movsl
int3
adc
sbb
pop
mov
jmp
std
add
shll
sbb
outsb
sbb
mov
rclb
icebp
insl
or
mov
je
incb
pop
add
dec
jmp
stos
jne
pop
mov
or
std
enter
push
out
sahf
pushf
test
clc
shld
jle
jb
lret
add
ret
or
jne
xchg
std
fsubrs
push
idiv
test
and
jle
aam
lcall
push
sub
orl
jmp
push
mov
inc
gs
mov
cld
jmp
popf
test
pop
les
int3
pusha
imul
pop
pop
dec
mov
es
aam
cltd
mov
cld
rolb
cmp
fmulp
sarb
lock
add
adc
fcompl
loopne
pushf
loopne
dec
cwtl
inc
inc
sub
pop
mov
inc
lds
popf
sub
mov
xor
iret
inc
pop
sbb
inc
or
push
push
pop
pop
into
push
test
add
xchg
out
mov
or
inc
gs
and
mov
stos
add
cmp
imul
sbb
cmp
sbb
rcrb
mov
xor
xchg
fcompl
inc
icebp
push
and
shlb
lret
mov
pop
push
ja
mov
mov
xlat
repnz
xor
cld
sub
int
push
xchg
in
and
sti
sbb
push
sbbb
rol
mov
inc
xchg
or
xchg
test
aaa
ret
or
loopne
call
xchg
out
in
test
fnstcw
bound
and
insl
add
rorb
pusha
cltd
test
out
dec
fmuls
and
xor
outsl
mov
pop
jbe
orb
pop
rolb
xor
fcoms
and
lea
xchg
pop
sub
mov
andl
sti
sbb
out
dec
insb
xor
popa
push
pop
adc
imul
hlt
int
jmp
sub
fsubrp
lcall
add
mov
loopne
test
fcmovnb
pop
or
mov
stos
or
test
mov
and
push
test
pusha
jae
movsb
and
pop
dec
mov
jp
mov
pop
out
cmp
cmp
loope
fcompl
scas
mulb
cmp
es
inc
pop
mov
add
xor
xchg
dec
test
xorb
stos
or
pusha
outsb
lods
adc
out
sbb
aad
mov
in
lods
mov
dec
mov
lret
popf
fstl
andl
in
test
popa
ffree
xchg
mov
cs
and
arpl
mov
scas
or
inc
dec
jbe
pop
imul
mov
leave
pop
jo
sti
or
inc
jl
xor
stos
xadd
xor
movsb
int3
out
ret
sub
in
dec
mov
jecxz
xor
ret
dec
or
mov
and
ret
mov
mov
dec
and
inc
jge
fcoms
ja
lock
cli
inc
xor
and
or
popf
inc
cmpsl
jmp
xchg
mov
mov
and
xchg
sub
push
pop
or
test
cmp
repz
xchg
sbb
mov
xchg
xor
inc
mov
stc
push
sub
xlat
ret
mov
cmp
enter
popf
inc
ja
aam
xchg
shr
add
inc
fs
out
dec
sbb
mov
shlb
mov
mov
inc
cmp
scas
sbb
or
mov
inc
push
pop
imul
pop
pusha
pop
imul
xor
jae
sbb
xchg
inc
aas
xchg
sub
mov
mov
and
and
test
jg
xchg
mov
cmp
int3
les
dec
mov
xchg
imul
sub
scas
mov
inc
out
out
add
xor
pcmpeqb
ret
adc
mov
nop
loopne
add
hlt
inc
add
and
adc
xor
rcrb
pusha
stos
jb
aas
aad
nop
or
or
loopne
sbb
incl
ljmp
pop
jno
pop
mov
mov
mov
mov
ljmp
push
cs
nop
hlt
loopne
xchg
inc
inc
jno
test
shrl
sbb
pop
std
dec
or
stos
iret
lods
sbb
mov
mov
mov
xorb
dec
dec
xchg
repz
push
dec
sahf
mov
test
ds
pop
pop
push
cs
pop
dec
jl
cwtl
push
loopne
lea
pop
pop
dec
aas
les
push
ljmp
and
fidivrl
test
mov
mov
and
orb
aam
mov
push
fimull
sahf
dec
aad
out
outsl
jmp
sbb
push
pop
out
nop
mov
rolb
push
notl
ljmp
cmpb
jle
sbb
sarb
xor
push
pop
ja
push
movsb
lahf
jg
in
mov
iret
mov
scas
outsl
popa
sarl
scas
scas
daa
push
pop
sahf
pop
xor
xor
add
js
mov
pop
movsb
ss
push
pcmpgtw
mov
lret
xor
xchg
ret
movsb
popa
or
push
jno
outsl
adc
adc
sub
jno
repz
cmp
test
or
mov
mov
and
mov
hlt
ja
fwait
jg
cmp
push
inc
fcompl
or
loopne
jge
imul
sbb
inc
pop
ds
dec
test
rcl
cmpsl
xchg
jo
imull
sbb
std
insb
pop
movsb
pop
push
icebp
popf
jne
das
sbb
lret
and
arpl
sbb
lret
das
xchg
xlat
test
aas
dec
jno
xabort
das
mov
adc
dec
adc
xchg
add
out
int
ret
cmp
xor
test
sti
sarl
sub
adc
inc
ss
dec
fbstp
aaa
fwait
add
rorl
ljmp
std
in
scas
jns
push
sbbl
cwtl
nop
rcrb
xor
mov
sbb
pop
adc
pusha
clc
push
xor
bound
pop
in
test
movl
pop
movsb
aam
shl
popf
in
mov
push
inc
ficompl
jmp
push
xlat
subb
adc
jno
mov
sub
jge
sub
jbe
insb
test
inc
dec
jmp
lods
pop
adc
or
inc
pop
mov
push
pop
adc
add
test
pop
pop
lea
push
mov
mov
test
push
out
push
and
das
ja
or
cmp
aaa
xchg
push
add
inc
sub
mov
sub
dec
pusha
into
push
cmp
and
out
pop
test
cmp
xchg
mov
adc
mov
in
adc
xlat
iret
daa
dec
fsubrl
mov
ljmp
test
insb
in
cwtl
xor
imul
mov
aas
jl
gs
sbb
leave
adc
add
cmpsl
aas
adc
loopne
nop
loopne
xor
test
pop
cmp
imul
xor
lahf
adc
je,pt
sbb
add
dec
push
sub
in
into
cltd
mov
in
ljmp
mov
popa
adc
outsl
mov
inc
stos
outsb
stos
add
and
fnstcw
sahf
testl
popf
fwait
shrl
outsb
xlat
out
mov
jmp
jno
mov
outsb
fwait
les
aam
sub
cmc
adc
lcall
mov
mov
mov
imul
rcll
sti
mov
loope
int
xor
pop
xor
data16
cwtl
mov
jns
dec
adc
jb
and
push
pop
cmp
movsb
xchg
cmc
bound
jmp
hlt
push
lock
jbe
adc
stos
dec
mov
push
loop
call
push
in
push
mov
or
jp
xor
dec
or
sbb
and
outsb
mov
inc
jns
push
pop
inc
imul
lret
je
pop
mov
icebp
rcrb
xor
cld
inc
daa
out
daa
icebp
and
test
imul
xor
jae
ss
loope
sub
lcall
int
andl
push
ja
stos
sbbb
mov
loopne
or
rorl
xor
and
push
or
cwtl
sub
stos
sbb
mov
or
rolb
enter
pop
mov
data16
pop
lods
or
adc
cs
xchg
dec
dec
rol
into
pop
movsb
iret
sbb
loopne
dec
xlat
loope
mov
and
lret
dec
loopne
jmp
ror
pop
in
ds
adc
cld
and
divl
outsb
lods
cmp
adc
inc
cmp
sub
mov
mov
dec
xchg
int
pop
add
and
mov
jp
sub
rorb
std
cmpsb
aad
out
shll
icebp
xchg
adc
ror
daa
adc
cmc
jbe
outsb
mov
mov
shlb
pushl
mov
loopne
out
xchg
cmpsl
lcall
push
inc
mov
push
pop
sbb
mov
pop
cmp
in
jo
lock
sub
add
and
mov
movsl
shrb
pop
push
jmp
or
push
loopne
into
pop
or
pcmpeqd
inc
push
cmpsl
dec
les
add
dec
jle
sti
loopne
ficoms
sbb
pop
push
jg
add
bswap
cmc
mov
fdivrl
inc
push
mov
insl
aas
scas
push
xchg
into
jl
or
pusha
push
dec
pop
sub
and
mov
fisubs
and
lret
sbb
loopne
push
imul
mov
xor
andnps
addr16
decl
fbstp
loope
adc
pop
pop
addb
inc
lret
dec
jge
pop
ja
add
lods
push
or
out
xorl
inc
dec
inc
fxch
fbstp
adc
mov
adc
and
fnsave
sub
fwait
mov
xlat
ret
leave
cmp
aam
push
xor
adc
mov
ret
pop
cmp
mull
push
sub
movsb
int3
jno
lock
and
jno
push
clc
cmp
fxch
mov
add
iret
imul
mov
hlt
test
xchg
jecxz
loop
andl
push
jmp
pop
fisttpl
and
sahf
mov
mov
lods
push
es
popf
mov
rcrb
cmp
push
inc
or
push
sarl
or
jno
xchg
lock
sbb
loop
push
add
int
jne
mov
push
or
out
cmpl
lds
push
in
dec
sbb
and
xor
add
inc
and
popf
stos
jb
jnp
movsb
cmp
sti
jbe
push
dec
test
push
and
pop
pushf
or
and
repnz
jbe
and
sub
jo
cmc
aas
push
xor
push
negb
dec
push
nop
js
lcall
hlt
add
shrb
xor
and
jo
mov
or
andb
test
fwait
add
test
loopne
sbb
rolb
imul
and
sbb
push
xchg
lods
xor
cmp
cltd
jnp
in
aad
pop
fisttps
mov
roll
and
ret
mov
push
and
pop
fisttps
push
lods
push
and
out
cmpb
shr
push
xor
xchg
rcll
test
inc
fsubrs
fldenv
mov
push
shll
sbb
or
shlb
xor
aam
and
stos
jae
jge
imul
push
sub
add
mov
xchg
insb
loopne
fs
cld
dec
mov
and
ds
loop
add
lds
std
cwtl
sub
shlb
ja
xchg
fnstsw
repnz
js
jecxz
dec
js
in
andb
xor
and
xchg
in
out
aaa
sbb
sub
loopne
lock
mov
je
clc
pop
pop
push
sub
stos
or
jmp
les
jno
sbb
xchg
shrb
inc
imul
loopne
mov
or
les
push
xor
lea
sahf
jl
movsl
mov
out
or
scas
mov
jnp
fstpt
xchg
sarb
insb
aaa
pop
lcall
xor
movsb
inc
ljmp
cmp
sub
pusha
cmp
enter
push
je
xor
bnd
je
cmp
jbe
xchg
outsb
add
daa
insb
cmp
jg
xor
mov
inc
ss
push
aas
je
dec
imul
and
xchg
shl
adc
ja
push
dec
fs
inc
pop
inc
adc
add
inc
mov
mov
cmp
mov
mov
clc
int
sbb
js
testb
mov
lods
adc
stos
xchg
in
and
adc
cmp
mov
xchg
pop
jns
insb
out
jae
xchg
dec
cmpsb
ficoms
mov
ret
sbb
pusha
mov
adc
cltd
popa
xchg
cmp
aam
pop
enter
ret
inc
imul
mov
loopne
ror
dec
mov
sub
cmp
pop
ljmp
cmp
or
add
in
lods
sub
add
and
aam
mov
add
mov
insb
lods
mov
outsl
xorb
push
mov
scas
add
adc
sti
repz
cmp
in
in
dec
pop
sbb
pusha
aas
out
jg
push
xor
mov
dec
mov
out
scas
mov
testb
lods
mov
jmp
stos
fnsave
push
and
lock
sbb
add
xor
es
xor
loopne
fadds
popf
cwtl
les
mov
ror
ret
sbb
pushf
pusha
cld
xchg
add
jmp
in
cmp
xchg
neg
inc
xchg
fsubrl
mov
sbb
push
adc
mov
and
testb
js
jo
jg
jo
test
movsl
add
mov
es
pushf
sbb
add
pushf
mov
ret
jb
mov
mov
in
dec
xchg
popf
cmp
jle
sahf
cmp
pusha
stc
or
mov
les
push
sbb
lods
leave
add
scas
dec
test
out
cltd
cmp
inc
or
loopne
ljmp
push
xchg
cmp
or
push
stos
jb
ss
rcll
in
mov
loopne
inc
divb
ffree
lock
dec
testb
dec
out
sub
mov
and
sbb
lds
jb
sub
mov
and
sub
fimuls
push
loop
ds
nop
adc
cmp
mov
mov
cmpb
xor
mov
shrl
call
pop
bound
mov
sub
andb
out
sbb
popf
nop
adc
rorl
rcl
rclb
xlat
add
inc
aam
test
rorl
rol
pop
sbb
addr16
cwtl
loopne
inc
mov
inc
fsubr
or
jb
lret
imul
mov
mov
in
pusha
pop
mov
test
add
lock
jl
stos
pop
dec
cmpsl
jl
cli
mov
xchg
inc
out
sahf
mov
lods
or
into
cmp
jns
loope
xchg
mov
pop
cltd
mov
sbb
push
jmp
scas
mov
in
subl
mov
jbe
jns
push
mov
lcall
push
adc
sahf
fstps
xlat
sub
sbb
loopne
aad
paddq
test
push
sbb
les
sub
repz
or
xlat
xchg
fwait
movsl
fildl
jge
mov
xor
jg
loop
dec
or
inc
mov
mov
xor
lock
jp
cli
ret
testb
loopne
mov
jae
push
push
push
pop
inc
mov
adc
jnp
adc
xchg
push
or
in
cmp
dec
push
mov
hlt
stc
int3
adc
push
jnp
jno
and
dec
shlb
and
sbb
in
xor
sar
mov
jo
in
mov
mov
push
pushf
dec
loopne
cmp
xchg
and
mov
push
leave
enter
popa
sub
stc
xor
mov
loop
jge
dec
pop
mov
pop
imul
lcall
xchg
pushf
cwtl
and
and
and
dec
pop
mov
jmp
loop
inc
jnp
mov
scas
mov
leave
xchg
cld
push
cs
sqrtps
push
outsb
ret
pusha
outsb
sti
das
loopne
sbb
and
nop
int3
sarb
xor
mov
xor
lret
mov
pop
dec
rol
xchg
add
rorb
call
ds
inc
out
cmp
xor
int3
outsl
xchg
push
pushf
sbb
xor
loopne
adc
movsl
out
je
xor
pop
rclb
mov
adc
pusha
jle,pn
xlat
stos
cmp
testb
cmpl
mov
jb
stos
stos
jp
test
dec
mov
inc
loope
orb
or
clc
insb
lods
cltd
mov
cmc
jg
mov
lahf
add
mov
mov
xchg
sbb
or
pop
fcmovb
jmp
inc
sbb
dec
inc
sub
jecxz
jl
cmc
jne
cmovnp
cmc
popf
sbb
shlb
clc
jecxz
pop
mov
icebp
popa
jg
mov
lock
xlat
dec
sti
jbe
insb
add
pusha
and
test
push
cmp
xor
sti
push
mov
out
nop
cmp
ss
inc
xor
loopne
pop
test
mov
xchg
adc
in
repz
and
lods
decl
jne
add
add
pusha
mov
dec
rorb
push
scas
je
and
aaa
add
sbbb
mov
xchg
test
pop
cmp
push
push
pop
jns
frstor
xchg
and
repz
sbb
or
cs
push
pop
xor
inc
mov
lds
mov
adc
scas
or
in
loope
test
add
scas
dec
lret
loopne
inc
push
test
mov
nop
shlb
pop
inc
nop
sub
test
mov
fnsave
jns
add
and
fcomi
ror
dec
out
gs
mov
dec
xchg
hlt
rorb
lret
pop
cld
or
std
notl
les
js
lods
cmp
mov
mov
js
xor
jno
or
test
sbb
out
out
cwtl
mov
mov
inc
push
inc
icebp
imul
aas
daa
inc
push
dec
icebp
out
repnz
int
in
sar
pop
int
test
and
inc
mov
clc
out
jae
std
pushf
lock
je
testb
jnp
stc
inc
pop
push
xor
fwait
pusha
lret
jle
clc
xchg
sarb
fstpl
adc
add
mov
pop
fsubrs
movsb
int3
cwtl
insb
addb
adc
scas
ss
loopne
incb
or
repz
xchg
std
in
out
mov
inc
in
xchg
sbb
add
and
jo
call
mov
sbb
mov
pop
jge
pusha
xor
xorl
add
push
insb
mov
call
jle
push
lock
rclb
and
push
scas
sbbb
mov
fst
mov
dec
push
inc
and
jbe
das
out
ja
cs
cmp
xchg
xlat
sbb
rclb
inc
je
xchg
fldcw
cmp
lock
fbstp
mov
and
data16
pop
push
leave
pop
mov
cmpl
and
rcrl
aas
xor
cwtl
xor
movsb
scas
jl
inc
hlt
xor
aam
fsubl
cmp
jae
jbe
dec
enter
rorb
and
pop
push
inc
sbb
sahf
rcrl
imul
mov
inc
jno
movb
jno
mov
jmp
call
push
movsl
rorb
sti
gs
insl
push
dec
iret
mov
ljmp
call
loope
notb
sub
ss
aaa
das
adc
loope
mov
xor
pusha
pop
dec
lock
lods
iret
outsl
repnz
inc
stos
daa
push
dec
cli
dec
add
cmp
mov
repz
xchg
or
pop
mov
std
mov
sub
mov
int
ljmp
jl
mov
mov
add
and
inc
dec
idivl
inc
outsl
or
daa
mov
cmpsl
in
inc
das
jmp
xchg
mov
dec
mov
mov
cltd
js
pusha
pushf
mov
inc
lret
aaa
mov
insl
sti
test
mov
movntps
mov
cmc
pop
push
lock
lcall
movsl
and
pop
mov
or
or
je
loope
lds
rcrb
fs
mov
addr16
sub
mov
outsl
inc
push
dec
fcomps
sbb
pusha
mov
in
or
xorb
lret
mov
xchg
xor
ret
mov
int3
push
cmc
add
cmpb
sub
xchg
mov
xchg
movsl
loope
test
lret
push
jae
sbb
shlb
clc
subb
das
addr16
add
aaa
loope
push
lods
sbb
mov
ficomps
and
pop
push
clc
fstps
loopne
push
xchg
sbb
and
aaa
sbb
push
cmp
mov
in
dec
xor
aad
cmp
xor
and
leave
sbb
pusha
push
jmp
push
inc
xchg
add
rclb
shr
push
lods
imull
pop
aas
sub
mov
jb
fcomps
cmpsl
fnsave
inc
push
cli
ds
jmp
pusha
mov
ficoms
ljmp
out
cld
xor
mov
push
adc
shll
pusha
into
jns
rcll
data16
fdivs
lods
inc
stos
add
dec
shll
push
arpl
iret
loopne
jle
and
sbb
cmpsl
iret
shrb
xchg
clc
inc
pop
dec
xor
xchg
rolb
xchg
sub
mov
sti
popa
outsl
mov
add
arpl
sub
xorl
aas
loop
mov
push
sahf
jns
fsubl
fdivl
adc
or
push
mov
add
shlb
sbb
jecxz
imul
mov
rolb
cmp
mov
pushf
mov
test
cmp
popf
pop
in
out
mov
add
mov
sarb
imul
push
mov
dec
cli
std
aam
insb
adc
mov
mov
xor
mov
adc
pop
jl
fiaddl
aas
movsl
pop
mov
enter
cmp
mov
pushf
or
xchg
mov
pusha
out
sub
sbb
or
loope
hlt
mov
je
nop
clc
add
cmp
ja
cmpsl
loop
shrb
scas
cmp
add
pop
xchg
lock
xchg
dec
jne
dec
pop
in
or
mov
fsubs
mov
sarl
sbb
jge
jne
xchg
outsl
lea
inc
mov
rorl
jecxz
sub
add
cmc
out
repz
scas
mov
xlat
stos
fistps
pop
loop
and
xchg
and
jmp
int3
mov
shlb
aas
mov
pop
pop
and
inc
popf
or
jne
dec
xchg
pop
popa
mov
add
inc
add
push
mov
mov
xchg
sbb
loopne
mov
sahf
xchg
mov
mov
sub
fcmovnb
pop
mov
fmulp
mov
jo
xchg
jbe
pop
jle
cmp
mov
cli
in
aaa
cmp
add
dec
bound
mov
stos
fstpl
loope
xchg
icebp
xor
fcomps
aam
or
fisubl
aam
outsb
aaa
imul
js
or
and
rol
push
arpl
and
loop
adc
dec
stc
sbb
call
pop
push
sub
or
test
and
outsb
xchg
imul
int
stc
sub
test
loopne
out
repnz
jge
das
nop
test
jg
sub
sbb
and
inc
pop
arpl
jg
stc
dec
dec
dec
outsl
pusha
sbb
mov
xchg
sbb
and
movsb
lcall
leave
lods
jg
testb
sub
ljmp
sbb
scas
cmp
test
popa
dec
sub
in
pusha
sahf
and
push
jge
or
shrl
mov
or
shl
rorl
ds
enter
enter
and
jo
jae
jae
xor
mov
mov
adc
or
lock
lds
leave
imul
adc
add
pop
or
adcb
arpl
jb
incb
mov
lret
pop
dec
pop
popa
stos
pop
stos
pop
xchg
push
xchg
imul
pop
mov
scas
push
shll
jae
and
rolb
jo
sub
add
icebp
push
dec
jnp
xor
push
lods
ljmp
ficoml
push
pusha
add
add
mov
push
sub
dec
mov
lcall
jo
sbb
lock
clc
ret
add
and
imulb
pop
inc
daa
inc
aad
scas
fwait
subb
idivb
aad
sarb
in
jg
inc
movsl
xor
loope
popa
or
inc
mov
xorb
push
mov
aad
cli
mov
xchg
push
xchg
xchg
shr
movsl
pop
xchg
push
ret
sbb
dec
push
adc
rol
aam
iret
stos
jnp
loopne
mov
iret
and
fnstsw
and
sbb
mov
dec
jecxz
data16
into
outsb
aas
jbe
or
cld
or
and
pop
test
fistpl
les
xorb
sbb
adc
in
inc
and
xchg
cli
push
scas
push
aad
es
inc
push
addr16
inc
sbb
lret
xchg
imull
sbb
sub
xchg
jmp
mov
ja
inc
sbb
stc
mov
inc
jl
in
daa
sub
stos
jge
aas
addr16
sub
or
hlt
inc
jg
push
jnp
or
shll
mov
adc
pop
shrb
nop
jl
mov
inc
out
inc
inc
mov
jl
mov
and
loop
imul
push
or
fisubrs
pop
mov
dec
xchg
inc
bound
jne
movsb
dec
mov
cwtl
call
pusha
in
ljmp
xchg
jo
shr
movsl
iret
ljmp
add
pop
mov
sub
cmp
rcl
jmp
loopne
mov
add
test
mov
in
adc
shrl
clc
sar
inc
loope
jg
mov
sar
xor
mov
xchg
mov
inc
jl
imul
andl
shll
in
adc
shll
mov
cmp
js
aaa
loop
lret
mov
aad
mov
push
ret
cmp
jge
xor
popa
pop
add
or
add
xor
das
cmp
subl
inc
inc
add
pusha
or
cmp
adc
mov
xchg
or
subb
push
sub
push
jne
jo
fstpt
sti
cld
fiadds
mov
fiadds
xor
mov
xchg
push
andl
adc
int
jbe
push
xor
xor
hlt
aad
jge
pop
test
pusha
push
das
cltd
aam
arpl
adcl
dec
xlat
and
push
cmp
xlat
mov
lods
repz
movsl
xchg
cmp
daa
enter
loopne
inc
ficoms
loop
cmp
pusha
add
adcb
mov
pop
mov
push
push
lsl
jg
mov
add
sub
jb
push
or
mov
or
mov
aas
sahf
stc
pushf
push
inc
lods
je
jb
xchg
arpl
push
push
xor
outsl
and
or
and
xor
jp
mov
cmp
xchg
cli
sbb
xor
test
out
jo
test
mov
les
out
or
lret
sahf
jmp
frstor
pop
dec
fimuls
out
xlat
cli
pushf
cmp
dec
pushfw
shl
and
add
inc
icebp
insb
mov
adc
and
xchg
out
or
adc
aas
aam
sub
xchg
adcb
pushl
insb
push
pop
or
and
enter
cmc
pop
lret
push
add
or
mov
xorl
ja
mov
xor
pop
stc
mov
into
repz
push
andl
mov
sub
cltd
or
pusha
lds
add
adc
pop
pushf
test
add
jbe
jle
test
andl
adc
and
fidivs
mov
int3
jp
cmp
movsb
sbb
inc
test
test
sbb
loope
lahf
int
xchg
xor
and
in
lods
stos
and
faddl
push
int
inc
or
clc
add
sub
lret
repz
push
out
mov
stc
mov
jbe
mov
jge
jle
xchg
and
rcr
jg
adc
test
mov
inc
sbb
xor
or
push
push
addr16
leave
shrb
mov
rcr
lahf
insl
lds
ds
imul
mov
outsb
loopne
and
cli
cmc
mov
ds
andb
cltd
in
nop
xchg
mov
test
addb
sub
add
add
loopne
jnp
push
ljmp
ret
and
das
pop
popa
and
xor
inc
and
sub
adc
jge
test
test
rcr
stos
or
mov
xchg
and
cmp
push
fbstp
xchg
or
jo
and
aad
lret
insb
push
mov
sbb
addb
imulb
sbb
or
dec
leave
push
std
pop
das
sbb
sbb
lods
mov
adc
cltd
les
jecxz
lret
push
mov
xorl
push
ficompl
repnz
out
fistps
ret
sbb
clc
adc
add
jmp
leave
xor
jnp
pop
jo
push
fidivrs
adc
pusha
movsb
popf
jg
sbb
shr
pusha
insb
fidivrs
inc
mov
xor
pop
and
insb
pusha
es
repnz
mov
xchg
xlat
jae
sahf
or
cltd
ret
or
jb
dec
loop
mov
ds
adc
mov
test
loopne
sbb
andb
test
jl
dec
pop
jo
mov
mov
adc
cli
dec
sarb
cmp
fstp
ret
push
out
inc
shr
dec
ret
or
addl
mov
mov
xchg
lock
loopne
add
loopne
xchg
mov
push
jg
cmc
aas
cmp
call
adc
mov
fldenv
and
es
push
xor
xor
or
mov
stos
pusha
int
repz
shrl
adc
adc
in
pop
dec
push
inc
test
jae
call
push
fdivs
jl
mov
orb
add
adc
out
or
lds
and
movsl
mov
daa
das
mov
or
rolb
or
jle
or
mov
out
fisttpll
inc
fcompl
dec
and
dec
push
lcall
sub
dec
stos
stc
and
mov
cmp
out
lret
mov
xor
sub
cli
testl
pop
movsl
push
mov
arpl
mov
add
xlat
add
inc
or
push
inc
sbbl
das
jns
and
enter
dec
repz
roll
and
adc
sub
and
xchg
pop
cmpsl
lret
out
push
xchg
or
mov
orb
rcrl
jg
add
pusha
cmp
jae
mov
push
hlt
xchg
sbb
pusha
insl
push
xchg
mov
jbe
loopne
jmp
adc
and
rcrb
sbb
insl
mov
and
loope
js
jmp
push
out
scas
insl
cmc
push
hlt
aam
repz
call
add
outsl
iret
xor
jne
aas
orb
fucomip
insb
int3
decb
jbe
sub
push
test
mov
jnp
repnz
shll
sbb
sbb
pusha
add
mov
in
sarl
push
data16
cmpsb
call
mov
push
pusha
imul
push
test
jle
orb
push
lods
and
mov
and
inc
sahf
cmp
cmp
cmp
in
or
add
dec
sarb
insb
mov
mov
sti
push
aam
shlb
aaa
xchg
in
pusha
add
dec
mov
mov
mov
fmull
inc
push
inc
or
xchg
cmp
mov
leave
mov
fnstsw
and
push
push
iret
lahf
or
xor
mov
shll
mov
test
sahf
scas
pop
mov
xchg
inc
xchg
enter
mov
xor
mov
test
scas
sbb
arpl
sbbb
call
mov
xchg
mov
sbb
adc
rorb
mov
add
xor
dec
push
aas
jae
xchg
mov
push
lcall
mov
dec
scas
filds
jns
cs
push
sbb
mov
adc
jmp
xchg
add
jns
stos
movsb
push
jecxz
or
lret
pushf
cld
rclb
fstl
std
inc
mov
or
jae
jge
jg
stc
lea
scas
pop
icebp
shr
inc
add
add
xchg
inc
dec
mov
les
les
fldl2e
roll
shrb
stos
loope
test
es
mov
sub
jle
pop
iret
mov
movsl
std
adc
loopne
mov
nop
and
adc
or
inc
cltd
dec
xor
loopne
dec
adc
add
pop
fnstenv
fcmovnbe
xchg
sub
mov
cmp
jl
xor
pusha
dec
sbb
push
xchg
fs
lods
xor
jno
mov
sub
les
sahf
mov
pop
out
push
mov
add
or
mov
rolb
pusha
mov
mov
cmp
bound
hlt
std
ss
pop
subb
pop
sub
mov
inc
add
rcrb
pusha
std
inc
inc
jne
mov
mov
rcrl
test
jle
nop
fadd
ficompl
inc
bound
lret
outsl
mov
fprem1
or
add
rcl
scas
popa
pop
jo
mov
inc
pushf
lods
subb
repnz
loopne
inc
xor
xchg
pop
inc
pop
aas
cwtl
in
add
sub
adc
pusha
jb
test
or
dec
lds
test
jl
in
gs
lret
xchg
or
xor
loope
xor
dec
daa
mov
jecxz
sbb
and
mov
mov
outsb
fucomi
lods
mov
outsl
mov
xor
lods
or
inc
sbb
jno
loopne
cmovle
jl
lds
shl
jmp
arpl
shrb
inc
ret
and
sbb
and
fcom
not
push
std
and
pop
and
nop
xchg
shr
int3
lock
bound
and
mov
adc
mov
adc
mov
in
dec
loopne
lcall
or
adc
je
push
leave
pop
inc
std
loop
mov
cmp
fwait
andl
cmp
pusha
in
test
jmp
and
aaa
dec
mov
inc
movb
dec
inc
cmp
push
dec
fdivs
aam
inc
fmull
xchg
mov
js
jecxz
jnp
jg
frstpm(287
adc
fnstcw
mov
mov
pop
sbb
loopne
andl
pop
fsubl
shll
add
inc
je
or
pop
incl
add
xlat
pop
cmpsb
sub
fsubs
insb
movsl
rorl
cmp
outsl
arpl
jnp
push
and
cmc
fnsave
test
sub
loopne
das
fdivs
data16
popa
add
lcall
mov
and
call
das
loope
test
aas
jne
hlt
rolb
mulb
pop
cltd
push
imul
lret
cmp
pusha
cmp
bound
loopne
pop
mov
mov
and
push
lret
push
jl
in
and
in
outsb
fcmovnu
bound
adc
sti
arpl
pop
mov
lock
aaa
inc
movsw
mov
jmp
inc
pop
cmp
pmaddwd
fnstsw
roll
add
in
fdiv
icebp
cmc
lahf
mov
fsubrp
sbb
pop
jnp
repnz
mov
push
je
jecxz
ret
or
sub
mov
inc
adc
mov
inc
cli
mov
mov
pop
or
xor
inc
mov
ss
mov
and
xchg
and
jl
or
icebp
and
mov
xchg
and
fcmovnb
jno
or
cli
fsts
dec
add
in
jmp
dec
inc
mov
mov
movsb
sysret
arpl
test
cld
in
clc
add
mov
subl
in
xor
mov
mov
or
add
shlb
sub
js
cmc
mov
cmp
scas
in
rcrl
push
jecxz
rolb
insl
or
cli
daa
xor
and
mov
shll
clc
xabort
call
out
mov
cwtl
enter
jmp
lret
hlt
or
enter
out
in
mov
and
xor
loopne
and
enter
push
dec
xchg
scas
lds
sub
sub
push
cwtl
pop
add
pop
rorl
test
mov
incb
rcrl
or
dec
cmp
stos
in
fimull
jae
mov
mov
rcl
test
sarb
sbb
jl
mov
xchg
shl
sub
les
mov
cs
add
add
dec
inc
ss
out
sub
xor
mov
add
inc
adc
pop
adc
push
jae
dec
addr16
adc
mov
addps
push
stos
mov
dec
adc
in
outsb
call
int
dec
mov
jne
or
jp
sbb
mov
sarb
es
pop
repz
outsb
sbb
cmp
sbb
add
mov
loopne
mov
loopne
enter
mov
test
fnstcw
clc
jno
adcl
lcall
and
insb
je
cmp
xchg
sbb
test
pop
add
bound
xorb
mov
test
dec
nop
mov
leave
icebp
fmull
lret
cmp
mov
nop
adc
aaa
jecxz
push
inc
outsl
and
pop
jo
jl
jecxz
xorl
xchg
xor
jge
adc
cltd
jg
xor
inc
dec
push
fildl
push
jg
rorl
loopne
sti
pop
int3
adc
and
jle
mov
insb
aad
add
pusha
test
push
data16
and
dec
aas
dec
inc
popa
leave
xchg
iret
lods
inc
mov
lods
adc
enter
pop
jae
jns
mov
mov
pushf
and
mov
mov
sbb
inc
test
std
xchg
pop
mov
pusha
jl
mov
pop
stos
pusha
cmp
out
subb
rcll
cmc
pminsw
dec
cmpsl
pop
mov
push
es
push
xor
movsb
repz
int3
add
adc
je
cltd
lea
ljmp
xchg
fdivrs
adc
add
out
insb
pop
push
and
mov
xor
pusha
add
or
mov
sti
adc
enter
mov
loopne
jle
and
sbb
xchg
shlb
add
lock
cwtl
and
pop
dec
hlt
nop
insb
and
ror
pop
lret
test
mov
pop
enter
add
sub
mov
out
neg
sbb
xor
mov
sbb
mov
dec
jmp
popl
ret
into
adc
jmp
lret
jae
and
mov
jp
dec
jle
or
icebp
bt
xorb
shlb
leave
push
xchg
hlt
push
cmp
nop
and
dec
fcomp
ret
fldcw
mov
push
xor
mov
or
xchg
outsl
loop
hlt
add
lret
mov
mov
push
fiaddl
sub
or
mov
cmp
sub
jp
mov
add
jnp
mov
imul
add
sbb
jge
imul
cmp
dec
js
outsb
push
dec
cmpb
call
aad
mov
jp
sub
adc
aam
iret
jl
and
rcrb
mov
jno
arpl
enter
es
lret
push
ja
sbb
pop
out
dec
push
cmpsl
in
pushl
add
cmp
pop
out
das
mov
fcmove
jl
jg
sub
in
jmp
stos
sbb
sti
jg
xor
into
mov
sahf
push
repz
adc
jnp
ficomps
add
nop
test
push
stc
mov
cmp
cld
inc
in
mov
dec
sub
jle
and
out
negl
mov
add
cltd
jns
mov
dec
loopne
sbb
stos
lret
xchg
ss
fnsave
dec
movsb
cmp
addb
daa
aad
in
mov
int
cmp
lods
sbb
xchg
rolb
xchg
and
out
mov
rol
or
and
inc
jle
out
sarb
ret
ljmp
dec
mov
sbbb
fsub
mov
mov
push
sbb
andb
ljmp
mov
push
push
lods
ret
or
sbb
sbb
cmpsl
in
adc
call
cltd
xor
arpl
fstps
loop
rorl
xchg
adc
loopne
fsubrp
lock
aad
sub
insl
pop
ja
inc
test
cmp
sbb
and
sahf
in
js
xchg
je
out
adc
add
xlat
jge
scas
aas
das
mov
or
fwait
dec
pop
mov
cmp
dec
movsb
dec
xchg
mov
out
outsl
or
loopne
or
stos
or
or
daa
ret
pusha
xor
push
je
inc
cmpsb
xchg
repz
mov
sbb
cmp
mov
mov
je
and
jl
dec
mov
in
dec
pop
dec
add
or
movsl
popf
test
jb
push
sbb
loopne
out
mov
test
mov
aad
jbe
or
inc
je
bound
pop
insb
shrl
jo
sub
rolb
and
sbb
xchg
mov
pusha
iret
test
ds
and
inc
dec
dec
mov
dec
out
test
or
push
xchg
and
mov
sahf
xorl
movsb
jmp
or
rorb
bound
sub
mov
xor
xor
mov
sti
xchg
iret
fstl
pop
pop
int
popa
popa
sub
and
sti
xchg
mov
push
pop
and
xchg
in
js
mov
sub
hlt
mov
push
sub
push
dec
push
mov
leave
test
and
cmp
mov
xor
cmpsl
test
xchg
shl
bound
mov
negb
lret
jno
fadd
mov
in
sbb
sub
sbb
stos
je
movsb
andl
aaa
cmp
arpl
cmpsl
out
mov
jecxz
shll
das
sbbl
sbb
ret
cmpb
inc
fcoml
pop
jno
push
fistpl
mov
cmp
sarb
dec
jge
pop
push
hlt
loope
sbb
adcb
imul
cs
dec
inc
mov
xchg
hlt
mov
mov
dec
mov
xchg
pop
push
or
ja
pushf
adc
mov
mov
jo
adc
xchg
fsub
testb
mov
mov
push
mov
push
and
adc
sub
and
jp
sbb
fnstenv
pop
sbb
loopne
lods
inc
sub
pop
pushf
fsubs
cmp
fsubl
pop
jo
nop
and
mov
test
mov
fisubs
std
sti
into
test
ss
fbstp
fildl
enter
mov
jnp
mov
or
loopne
lret
push
idivl
subb
lahf
sbb
insb
cld
fwait
push
cli
cmp
and
mov
mov
pop
dec
and
or
push
int3
jb
int
loop
fcmovnb
adc
mov
add
lods
lock
push
mov
iret
xchg
in
stos
mov
mov
and
lcall
xchg
in
sbb
xchg
or
push
sti
pop
mov
pop
mov
insb
fnstcw
mov
and
out
ret
mov
dec
adc
int3
and
cli
das
bound
scas
cmp
dec
add
loopne
push
popa
adc
and
xor
scas
inc
clc
subb
call
scas
inc
pop
pop
aas
mov
add
xchg
mov
mov
fwait
sbb
xchg
xor
das
fcomip
jle
inc
mov
xchg
lret
shr
aam
fsubrs
mov
mov
push
jp
jge
xchg
mov
roll
jb
jle
addl
push
clc
in
lds
iret
lret
sbb
add
push
cs
fisubrs
dec
cmpsl
lret
pop
popa
test
rorl
fsubs
aam
mov
insl
xchg
or
jae
dec
mov
cmp
xchg
loopne
ja
add
ljmp
or
int3
inc
nop
cmp
repnz
push
xorb
lds
idivb
inc
pusha
clc
cld
shlb
or
icebp
rcll
sbb
xchg
test
mov
jmp
outsl
push
dec
hlt
loop
inc
sbb
add
mov
imul
out
int
leave
pop
mov
movsl
fcoml
daa
in
pop
mov
insb
imull
jb
push
mov
mov
les
inc
mov
pop
push
insb
push
jecxz
gs
loop
mov
fldcw
jmp
aad
adc
inc
outsl
cmp
std
hlt
inc
mov
xchg
out
xchg
jl
sbb
mov
sub
pop
idiv
sub
pop
out
aas
cmp
inc
jo
stos
jo
pop
cmp
cltd
in
out
jnp
and
movsb
mov
std
push
or
cmp
pop
in
mov
call
stos
call
cwtl
inc
add
jo
addr16
fnstcw
xchg
std
xor
push
ret
pushf
rol
ss
jl
adc
add
jb
data16
mov
nop
jl
inc
scas
mov
test
jbe
cmc
pop
xorl
insb
andb
idivl
push
push
bound
mov
mov
fstp
cltd
mov
mov
pusha
mov
add
js
xchg
cltd
bound
jns
and
mov
popa
cltd
cmp
popl
add
test
dec
mov
jae
cmpsl
fnstenv
push
shlb
dec
enter
cmp
mov
mov
jg
rcll
popa
scas
int3
cmpsl
mov
adcb
call
push
inc
sub
dec
pop
mov
test
andb
sti
lock
mov
inc
cmpsb
iret
xchg
push
shrl
cmp
loopne
lret
fsubrs
lahf
jne
popf
out
orl
loope
out
mov
jb
lock
adc
stos
imul
and
push
lock
cmc
mov
sbb
lret
mov
xchg
ror
dec
vmread
icebp
cwtl
clc
loopne
dec
mov
add
cld
int3
aam
sbb
movb
stos
dec
pop
xor
jmp
test
inc
cmp
jae
clc
or
aas
and
xor
cwtl
pusha
shrb
mov
and
mov
movsb
or
aam
push
xchg
loope
test
addb
shrl
inc
adc
shr
fidivs
jne
test
cmp
adc
sbb
rorb
cmp
ja
sub
push
cmp
incb
xorb
mov
mov
in
call
pusha
cmpsl
cmpb
dec
loope
xchg
adc
aaa
dec
adc
push
mov
stos
outsb
ficompl
fidivrs
inc
scas
mov
pop
idivl
jg
sbb
in
stos
mov
or
mov
cmp
lods
fcoml
inc
daa
push
mov
cmpsl
adc
dec
lds
jo
loopne
xchg
cmp
mov
rcrb
xlat
xor
cmp
ljmp
dec
jg
nop
nop
add
xchg
push
pop
mov
jo
push
pusha
inc
and
or
out
icebp
adc
push
dec
inc
add
sub
sbb
lods
sahf
pop
js
gs
enter
fwait
ret
jbe
jo
jo
lahf
push
xor
ret
in
jle
push
jmp
push
adcb
and
inc
mov
jno
int3
sbb
orb
inc
xor
shrl
lds
xchg
int
jne
push
xadd
aas
into
inc
inc
aam
jmp
insb
dec
xor
fs
push
loope
clc
or
push
mov
lahf
cld
mov
inc
rclb
imul
mov
sub
sbb
fsubl
gs
xchg
ljmp
ljmp
mov
push
into
fists
cmp
lahf
xor
fwait
std
jg
mov
mov
popf
jmp
sbb
push
rcrb
dec
mov
ja
std
mov
jge
hlt
fldt
dec
inc
push
ss
adc
mov
pop
sbb
fsubl
into
sbb
inc
and
jo
call
loope
sub
into
jo
adc
inc
fists
xchg
test
sbb
mov
push
jns
jno
dec
mov
cmp
xchg
popa
pop
das
aaa
fs
repz
popf
rol
cmpsl
vpscatterqd
repnz
in
sahf
fwait
jb
out
cmp
loopne
push
inc
dec
imul
into
fistps
enter
bound
mov
jne
loope
mov
cmp
inc
fidivl
inc
pusha
xchg
sub
cli
arpl
push
and
mov
mov
sub
das
insl
outsb
fimuls
repz
shll
sub
roll
insl
aam
jge
in
adc
mov
sbb
mov
xor
pop
add
cmpb
ror
hlt
ret
sbb
cltd
loopne
sarl
sahf
or
loopne
sub
mov
lahf
pop
ret
rolb
inc
sbb
nop
shl
cli
pop
les
lods
pop
std
adc
mov
call
xlat
cmpsl
hlt
lods
mov
sbb
add
popa
pop
add
xchg
dec
in
xor
push
dec
mov
std
mov
and
call
mov
mov
push
aaa
xor
xor
jo
fistl
sub
mov
cmp
stc
cmp
rolb
and
imul
pop
mov
rcl
ja
add
jmp
mov
pop
testb
mov
aaa
cmc
and
adc
ja
shl
push
adc
xlat
fdivrs
mov
mov
rol
jbe
push
dec
std
adc
cmp
stos
push
add
in
shll
pusha
cltd
dec
pop
sub
mov
mov
adc
inc
fdivrl
inc
ds
bound
mov
fwait
test
roll
inc
cwtl
cmp
outsb
mov
mov
fucomi
cmp
and
repnz
divl
xlat
roll
rol
insb
or
cmpsb
rcrl
test
inc
adc
in
or
add
inc
mov
scas
test
test
push
fs
lods
clc
xchg
push
clc
push
xor
mov
xor
xor
push
sbb
xor
subb
call
call
mov
cld
arpl
in
jmp
popa
add
je
inc
jnp
sbb
mov
into
std
and
inc
inc
dec
sub
mov
mov
int3
sar
sub
sbb
gs
bound
in
shlb
pusha
imul
gs
mov
mov
fdivl
cwtl
int3
pusha
sub
mov
inc
stc
dec
add
je
pop
xchg
pushf
add
sti
mov
das
cli
xchg
mov
test
push
shl
mov
aad
push
lahf
aas
loopne
jns
fwait
insl
jns
xor
in
mov
daa
shlb
cmpsl
jb
pop
sbb
and
mov
stc
loope
xchg
sub
sub
and
mov
adc
adc
and
movsl
pop
fildl
rcrb
stos
xchg
cmc
scas
pop
jl
xchg
jo
jmp
fdivrl
xor
push
lea
mov
loopne
sub
dec
and
inc
test
mov
enter
nop
loopne
mov
inc
gs
dec
fs
stc
jb
aam
sbb
xchg
jne
xor
or
mov
xchg
insl
lds
sahf
lret
pusha
jmp
dec
mov
cwtl
cld
pusha
stc
xor
jg
add
add
cli
inc
fs
lock
mov
test
inc
into
out
imulb
pusha
cmp
xor
clc
cmc
adcl
ds
mov
xor
pop
fildl
loopne
or
out
sbb
shrb
es
dec
stc
call
sahf
addr16
addb
movups
sbb
jmp
push
adc
jmp
out
stos
xor
sarl
mov
aam
pop
orb
push
outsl
inc
jae
cmp
pop
orb
and
je
shll
loopne
sar
cmpsl
or
inc
aas
dec
cs
inc
jne
dec
and
mov
push
scas
lcall
jge
pop
hlt
scas
pop
mov
int3
in
pop
enter
call
fs
mov
cmpb
or
insl
xor
dec
pusha
sbb
dec
mov
pop
inc
xor
xchg
stos
test
fstpl
push
xchg
jmp
mov
cs
jmp
sti
lock
loope
aaa
adc
std
jno
add
insb
xor
iret
xlat
jle
popf
and
test
xchg
push
push
inc
in
push
pop
mov
jne
dec
insl
lea
cmp
jnp
aam
shlb
dec
add
adc
les
popf
mov
jg
xor
pop
lret
les
ret
lds
push
cmpb
and
cmp
or
add
stos
dec
xor
stos
xchg
je
sub
flds
jae
cmpsb
les
scas
inc
call
frstor
lea
mov
dec
xchg
mov
jmp
leave
adc
das
adc
inc
mov
push
fcompl
and
shl
lea
gs
sbb
aam
pop
jp
sub
fwait
into
xchg
in
add
ljmp
sub
mov
lret
fildl
or
inc
sub
mov
cwtl
mov
push
leave
arpl
into
loop
loop
ljmp
xchg
out
push
pop
je
and
call
xor
xchg
mov
call
loop
xchg
in
icebp
jl
popf
push
in
lods
pop
gs
repnz
xor
sub
insb
sub
sub
add
out
dec
and
repz
mov
xor
xor
ror
mov
push
mov
lret
ds
adc
mov
pop
xor
aaa
cmp
push
pop
popf
push
ja
mov
cmp
xchg
jnp
and
xor
mov
inc
shl
cmp
push
push
int3
addb
xor
lods
lahf
push
sbbb
jo
frstor
ret
jecxz
jbe
pop
xor
xchg
int3
subb
js
pmuludq
popf
lahf
div
and
sub
sbb
insb
shl
xchg
movsb
loopne
push
outsb
lahf
cmp
add
sub
xor
and
lahf
lcall
xor
insl
clc
sbb
push
cld
push
add
mov
inc
adc
subb
xorb
in
stc
lret
sub
hlt
pop
xchg
add
loopne
scas
add
daa
mov
inc
cmp
cmp
push
mov
dec
leave
cmp
iret
loopne
jne
addr16
inc
sub
dec
xchg
mov
imul
test
inc
add
hlt
pop
pop
leave
pop
js
in
mov
or
ficompl
call
jp
stos
xchg
mov
push
test
or
in
inc
push
jmp
inc
cpuid
sub
inc
test
xor
add
pop
idiv
mov
sbb
jne
test
aaa
ss
xchg
sbbb
or
out
sbb
rorl
push
jecxz
push
sti
js
test
mov
xchg
dec
xor
cwtl
mov
jo
jp
out
or
mov
in
add
add
push
mov
inc
loopne
mov
es
pop
pop
iret
adc
loopne
rcll
mov
addl
fwait
inc
xchg
cmp
mov
shlb
push
mov
sbb
je
sbb
insb
sub
loopne
mov
add
mov
mov
add
xchg
dec
daa
popa
in
xor
mov
push
fstp
dec
dec
lea
push
and
loope
push
arpl
sbb
cmpsb
jbe
cmpsl
decl
scas
mov
rorb
jns
fisubs
in
or
inc
sti
push
subb
xor
or
insl
outsb
dec
inc
shr
sti
push
sbb
sahf
sbb
sbb
mov
push
insb
and
mov
lret
xchg
cmp
mov
adc
and
adc
push
in
test
adc
loopne
dec
or
adc
pop
loope
hlt
xor
faddp
bound
aad
imul
lods
sbb
bound
push
inc
mov
pusha
je
mov
mov
cli
fisubs
pop
mov
xchg
cwtl
pusha
xor
push
or
dec
clc
pop
into
jge
sub
add
les
enter
iret
dec
inc
mov
sub
mov
mov
into
mov
out
sbb
std
leave
inc
sahf
int3
dec
cmp
iret
adc
cld
mov
sti
dec
cmpb
mov
cltd
cltd
insb
call
ja
out
xor
dec
inc
out
fdivrp
or
outsl
negl
out
pop
cmp
fs
dec
add
pusha
xor
xchg
dec
pusha
pop
mov
jg
cmp
cmp
sub
pusha
mov
movb
rcll
lock
in
add
repz
mov
sub
pop
jl
xor
pushf
adc
test
add
aam
data16
mov
push
leave
loope
pushf
pusha
imul
xor
pushf
sarb
cmp
inc
ljmp
inc
mov
out
xor
ret
mov
lcall
and
out
pop
inc
cmp
incl
ss
and
and
clc
add
xchg
sahf
push
lea
das
jae
xor
push
leave
out
xor
in
xchg
push
dec
sub
cmp
push
lods
and
fistpl
xlat
and
xor
add
loopne
push
fnstcw
inc
nop
dec
mov
push
hlt
or
stc
inc
icebp
and
mov
lock
adc
notb
push
xor
xchg
inc
push
lock
jnp
shll
in
xor
xor
xchg
adc
xlat
loope
cmp
pop
dec
in
iret
push
dec
leave
pop
and
or
sbb
les
ret
sub
jle
sub
inc
jns
cmp
add
inc
sub
jne
sub
fdivl
sub
ds
mov
add
in
and
add
aaa
mov
mov
jne
ja
andb
push
int
adc
jnp
and
popf
push
dec
imul
add
xchg
dec
cmp
aas
push
adc
ja
mov
into
insl
xchg
push
into
xor
mov
pop
repz
sbb
rclb
scas
or
mov
cmpsl
sbb
xor
fwait
dec
xchg
add
aas
je
xchg
push
pop
mov
mov
loop
clc
pusha
out
clc
mov
iret
mov
nop
pushf
loopne
xchg
cli
cs
push
inc
mov
lret
adc
mov
loopne
imul
and
mov
daa
ds
push
adc
dec
dec
lret
mov
push
mov
lahf
fmull
movsb
loop
sbb
loopne
je
inc
add
and
mov
or
pusha
stc
addb
ss
xchg
push
shlb
mov
adc
and
loopne
movsl
mov
dec
out
pop
lods
shrl
jmp
iret
sarb
mov
push
out
inc
cld
adc
dec
jns
scas
jns
shl
and
hlt
test
sahf
bound
call
jnp
movsl
mov
dec
loope
dec
ss
pushf
rclb
mov
jae
lret
outsl
mov
inc
xchg
mov
ret
movsb
mov
loopne
mov
pop
leave
icebp
jb
adc
test
adc
call
es
push
inc
xor
fldl
mov
mov
and
inc
jmp
xor
insb
mov
jne
push
pop
test
rclb
mov
rorl
rolb
pop
movsb
cmp
mov
aad
or
dec
inc
adc
lret
ror
mov
mov
out
dec
mov
fisubs
or
out
cmc
stos
push
clc
xchg
test
xchg
out
stos
roll
inc
mov
mov
adc
lret
push
aaa
pop
je
ds
cmp
lods
mov
dec
out
sub
lods
jbe
or
mov
out
enter
call
lcall
rolb
jp
adc
dec
mov
sub
xor
pushf
add
xchg
call
je
xchg
das
fcmovbe
sbb
inc
mov
sub
mov
sub
outsl
lcall
inc
add
gs
test
test
push
or
out
pop
dec
aas
or
and
mov
fldenv
imul
or
jl
rcrl
outsl
xor
lods
push
dec
inc
xor
es
sub
xor
and
xor
inc
movsb
pop
or
insl
push
test
cmp
mov
mov
popa
lods
pop
and
jo
movsb
stos
mov
xor
insl
xchg
loopne
movsl
mov
cmp
cmp
push
mov
rorb
fwait
inc
and
and
jo
test
sub
stos
jge
lds
xchg
adc
nop
or
andl
aam
outsl
jp
add
push
dec
xchg
xor
out
cmpsb
and
out
mov
ljmp
pop
cmp
shl
arpl
out
push
inc
cmp
icebp
outsb
fistpl
arpl
lcall
push
cltd
dec
and
mov
daa
mov
mov
and
xchg
add
xor
xlat
ss
ja
into
adc
sahf
ret
incl
scas
jg
movsb
mov
mov
adcb
inc
cmp
or
ja
lcall
sahf
jne
add
mov
xchg
jne
cmp
sbb
loop
xor
addr16
clc
add
andb
fneni(8087
lods
loopne
fs
outsb
addr16
js
sub
push
or
test
mov
lcall
fistps
mov
sahf
inc
jno
or
repz
test
rclb
cmc
sbb
mov
mov
jp
mov
or
mov
inc
fsubrp
ret
int
cmpsb
fldl
and
dec
jl
pop
mov
rcrb
xchg
add
sub
out
jmp
xor
hlt
orb
hlt
mov
add
loopne
pop
fiaddl
pop
dec
cmpsl
cmp
mov
sbbb
pop
sbb
aam
inc
pusha
cmc
xchg
jg
jp
push
fs
push
sahf
and
inc
xchg
mov
mov
push
cmpsl
cs
cmp
and
pop
xor
inc
lds
dec
sbb
add
data16
aaa
repz
or
xchg
pop
fmulp
in
sbb
adc
mov
jnp
in
mov
test
xlat
aaa
inc
xlat
xchg
cmpsb
lods
sbb
mulb
jnp
mov
fisubrs
and
fcompl
dec
adc
xchg
out
adc
lret
pop
daa
adc
shrb
dec
add
add
pop
mov
add
or
fcoml
loopne
stos
cs
cmc
aas
inc
test
mov
dec
mov
dec
dec
lahf
and
dec
sbb
mov
push
mov
push
mov
loop
pop
inc
cld
mov
loop
cwtl
insb
rclb
andb
cmp
cmp
push
leave
mov
and
mov
mov
popf
ffreep
arpl
in
imul
lea
das
icebp
sub
and
sbbb
cmp
cs
mov
aas
cmp
arpl
pop
mov
hlt
xchg
xlat
mov
aad
and
fdivl
sbb
xchg
mov
outsl
hlt
call
popa
and
dec
cwtl
and
mov
sbb
addb
loopne
mov
fs
push
imul
or
xchg
inc
cmp
das
js
cwtl
aam
pop
scas
fisubrl
mov
das
gs
lea
push
jo
int
xchg
mov
cmpsb
pushf
sub
add
stos
or
cli
jl
and
negl
mov
ret
shlb
jp
and
cmp
fst
push
push
xchg
pop
dec
je
lea
sub
fldcw
test
stos
pop
lea
in
xor
mov
shlb
mov
sbb
andb
sub
scas
xor
mov
lret
pop
sbb
xchg
sbb
rorl
es
das
dec
dec
sub
cmp
mov
push
fists
mov
xor
mov
push
ljmp
sbb
add
cmp
shrl
out
pop
scas
cltd
scas
jo
movsb
or
pusha
add
mov
or
or
add
fcompl
mov
popf
xchg
in
add
add
and
aam
fldcw
xor
dec
rorl
mov
pushf
xchg
sar
fnstenv
icebp
xor
fmul
out
clc
insl
aad
mov
scas
mov
rorl
in
ljmp
aad
push
rclb
call
pop
mov
call
int
add
dec
add
mov
xchg
add
mov
lahf
je
orl
lods
dec
sub
cmp
xchg
dec
inc
test
mov
adc
into
imul
xchg
mov
scas
clc
stos
mov
loop
pop
or
pusha
inc
inc
es
js
and
add
lret
cmp
bound
xor
jecxz
mov
sti
xchg
mov
sub
loop
fcomip
sub
push
popf
push
sbb
subb
inc
xchg
cmp
aas
and
cmc
arpl
or
pop
xchg
fwait
mov
mov
cmc
daa
jb
sub
push
push
mov
cmpsb
inc
inc
pop
cltd
and
and
jge
faddl
je
sub
inc
mov
stos
and
cltd
insl
jns
jns
js
mov
pushf
mov
bound
pusha
jmp
fstpl
mov
mov
fsubs
in
xchg
repnz
mov
pop
mov
pop
in
sub
mov
push
push
pusha
xchg
sbb
cmp
test
inc
pop
sub
ja
out
dec
xchg
into
addr16
sub
fmuls
jo
test
movsb
xchg
nop
inc
jp
jmp
out
aas
sub
jae
dec
rolb
out
pushf
jl
sbb
sbb
and
and
push
dec
xchg
pop
lds
in
int3
cmpsb
pushf
adc
fs
and
cli
adc
push
repnz
pop
loope
adc
inc
arpl
mov
leave
pop
or
rcrb
mov
std
mov
mov
mov
shr
outsb
pop
orb
insl
bound
rol
test
loope
leave
cmp
xor
dec
push
stc
ja
rcr
jne
pop
ficomps
aas
inc
cmp
les
ret
out
mov
pop
adc
mov
pop
adc
bnd
dec
sub
fbld
in
add
pop
lock
and
iret
popa
add
and
sbb
inc
fldenv
mov
aad
bound
dec
inc
bound
rolb
add
fcomp
pusha
sbb
xchg
jne
or
inc
lods
in
cmpsb
lahf
mov
sub
and
pusha
xchg
and
int3
sub
sub
xchg
adc
xor
push
or
jl
out
out
in
test
and
nop
sub
jle
stos
mov
lahf
ljmp
adc
loopne
inc
mov
rclb
andb
in
outsb
jns
xchg
daa
in
jnp
arpl
xchg
mov
mov
jne
dec
out
pop
push
xchg
mov
jno
adc
and
inc
daa
and
mov
jns
xor
or
aam
arpl
sub
mov
out
and
inc
mov
lret
xlat
mov
cmpb
xchg
mov
lahf
lret
jne
jne
jb
dec
jp
pop
iret
test
pop
std
icebp
inc
or
aam
nop
jl
lods
jae
bound
sarl
je
jp
js
jb
xchg
mov
int
test
cmp
inc
ret
or
dec
mov
nop
add
pop
mov
or
xor
mov
inc
je
add
pop
pop
push
enter
enter
xor
ljmp
lock
mov
lea
into
aas
dec
repz
cmpsb
cmp
stc
fwait
xor
imul
mov
sarb
test
jnp
mov
fnstsw
push
popa
dec
testb
repz
bnd
cmp
sub
sub
sahf
stc
popl
sbb
mov
xchg
and
mov
es
sahf
enter
subl
fidivs
mov
mov
gs
mov
cmpsb
jae
cmc
leave
adc
ror
pusha
shll
sub
arpl
pop
in
cmp
add
add
jae
pusha
and
cmp
hlt
mov
add
xor
push
insl
mov
or
mov
pop
out
loop
les
shrl
test
inc
fistpll
sub
out
jns
or
mov
or
sarb
sub
mov
loop
repnz
or
aas
lret
nop
pusha
rcrb
cmp
dec
in
add
or
mov
pop
stc
dec
cwtl
loopne
adc
jg
int3
mov
cwtl
hlt
pusha
xchg
dec
ds
adc
xor
ss
adc
push
sbb
or
add
lret
add
enter
jb
or
xchg
sub
movsb
cmp
cmpsb
fidivrl
test
mov
sub
cld
mov
mov
mov
movsl
dec
add
sub
jb
rcr
dec
aam
jl
ja
mov
jp
mov
mov
dec
ror
mov
pop
ret
into
or
sbb
ja
or
mov
cli
ja
shlb
add
insl
dec
pop
or
push
inc
sbb
adc
push
in
and
mov
cmpb
dec
outsb
adcl
call
dec
and
and
cmp
sbb
sbb
pop
jno
cmp
lea
cmpsb
movsb
scas
lret
sarb
shrl
test
mov
loopne
pop
into
or
sbb
movsl
inc
subb
scas
in
sub
jecxz
ljmp
jne
xor
pop
movsb
jmp
std
pop
dec
cld
mov
cwtl
loopne
or
ja
fidivs
and
std
scas
mov
jns
sub
sub
and
stos
dec
cld
fnsave
xorl
fwait
inc
test
outsb
and
and
and
pop
push
jno
movsb
sub
mov
loopne
loope
lods
cmp
xor
sub
out
sub
push
mov
pop
pusha
sahf
cmp
inc
push
cmpsl
rcrb
jnp
rorb
mov
shll
adc
inc
in
hlt
mov
dec
leave
push
repz
push
jae
outsb
imul
inc
add
imul
hlt
add
sbb
or
add
or
and
mov
hlt
jb
sbb
fcmovbe
jno
or
mov
adc
xor
inc
pusha
pop
ss
mov
leave
lds
xor
mov
stos
movsl
pop
jmp
pop
dec
rcrl
inc
sarb
arpl
leave
enter
jno
loopne
gs
loop
ret
lds
sub
pop
jbe
dec
arpl
add
cmp
lock
or
and
les
fs
jle
mov
push
outsb
jo
ss
adc
xlat
int3
fmuls
scas
pextrw
jo
test
and
sub
jge
add
lret
ss
mov
pop
adc
sub
mov
jb
aaa
sub
shl
pop
fidivrs
js
add
xchg
mov
out
mov
push
mov
fbld
clc
add
mov
xchg
out
add
loop
pop
lret
lahf
movsb
arpl
xchg
adc
or
sub
leave
inc
mov
xor
add
mov
mov
dec
mov
je
outsb
xorb
int
rorl
iret
mov
xor
mov
push
ret
call
fs
rclb
mov
ja
cmpsl
lahf
push
dec
pusha
outsb
pop
or
jmp
add
lret
stos
into
stc
mov
pushw
popa
inc
cmp
xor
mov
je
ret
sub
cmp
adc
cmpb
test
scas
sbb
and
in
or
mov
loopne
rcrb
cs
xchg
scas
movsb
mov
outsb
loopne
pusha
mov
sbb
jb
nop
les
jb
pop
stos
dec
in
fisttpl
enter
cmpb
nop
loopne
inc
aad
fcompl
jecxz
idivb
cmp
mov
cmc
out
or
cld
stc
out
roll
movsb
pop
cld
or
mov
pusha
into
fsubrl
adc
xor
mov
out
mov
das
test
push
fidivs
cvtpi2ps
pusha
inc
jnp
fnstenv
out
ja
addr16
cltd
scas
xchg
scas
push
push
aaa
adc
jge
cli
inc
data16
push
cmp
xchg
pop
mov
sbb
movsl
fistpll
jns
enter
or
jge
scas
dec
fisubs
out
xchg
jl
cmpsb
or
push
out
jnp
rcl
sbb
add
jo
out
pmaxsw
jnp
addr16
or
frstor
imul
mov
addr16
fstp
or
inc
sub
jle
neg
push
sbb
cmpb
dec
in
sbb
loopne
or
sbb
aas
add
xchg
imul
cmc
jmp
jl
insb
add
lds
cmp
sbb
repnz
ja
into
cltd
or
adc
cli
or
movsl
addr16
mov
dec
sbb
dec
sbb
stc
sahf
xchg
cmp
xchg
rol
jge
mov
push
add
jns
das
clc
cmp
icebp
dec
xchg
pop
mov
add
rcll
lds
shlb
ret
dec
and
ja
subl
cmpsb
daa
int
mov
and
sub
push
and
push
gs
enter
jno
out
les
loope,pt
or
jno
adc
pop
mov
pusha
add
into
jg
js
loopne
lds
jb
jnp
pop
call
es
stos
dec
scas
scas
aas
fildl
jne
testb
mov
rcrb
js
cmp
imulb
xor
addr16
enter
add
frstor
cmp
nop
rcrb
gs
mov
inc
shlb
popf
dec
scas
arpl
inc
xchg
mov
clc
pushf
enter
inc
inc
stc
jae
je
es
and
repz
lahf
xchg
add
fsubrs
mov
xchg
test
mov
mov
lods
cmp
bound
mov
sar
dec
jo
pcmpeqd
sahf
dec
sbb
test
sbb
push
pop
push
call
inc
iret
ja
adcl
bound
jo
push
shlb
mov
sbb
aaa
pop
xchg
sub
push
shll
xorb
push
mov
call
mov
jb
jns
mov
cmpsl
outsb
sar
add
and
in
rolb
dec
xchg
lods
pushf
lods
addb
sub
and
and
pushf
mov
addr16
nop
push
loopne
push
jno
fcoml
in
pop
ficomps
je
pop
xchg
jp
cmpsl
leave
rcrb
loopne
leave
lret
shlb
mov
lods
insl
gs
push
cltd
xorl
add
ds
and
lcall
test
xor
mov
fildl
sarl
orl
popa
mov
mov
shlb
daa
cmp
outsl
ja
fsubs
imul
adc
icebp
rcll
popa
fnsave
push
jp
pop
jnp
repnz
andl
in
adc
lock
mov
dec
loopne
xchg
pop
sahf
jp
cmp
jmp
mulb
rcll
pop
xor
sbb
subl
testb
push
dec
jno
pop
mulb
mov
adc
inc
repnz
test
xor
mov
lcall
movsl
shl
pop
enter
add
sbb
rolb
test
sbb
dec
push
out
pop
cmp
in
clc
pop
dec
rcrl
xor
mov
int
jecxz
ret
dec
and
dec
outsb
inc
cltd
fstl
mov
mov
push
data16
jnp
lret
in
shl
cmp
push
mov
xor
add
cmpsl
lock
xor
xchg
sahf
xchg
clc
add
inc
xor
in
cmp
std
xchg
mov
mov
pusha
mov
iret
fcomps
shll
data16
dec
call
pop
xor
call
dec
lock
out
sub
mov
testb
adc
pusha
movb
xchg
jno
pushf
test
mov
daa
mov
loope
pop
mov
mov
pusha
inc
mov
mov
in
mov
xor
lret
fldt
dec
jne
lds
aaa
jo
int
sub
cmpsb
dec
std
mov
enter
fdivl
or
loopne
mov
push
dec
jl
out
sbb
inc
cmp
inc
pusha
shll
inc
sub
sysenter
xchg
mov
adc
push
and
pop
or
dec
mov
mov
inc
sbb
dec
mov
xlat
add
rcr
int
mov
jbe
mov
adcl
dec
loopne
shll
sub
xchg
mov
out
das
cmp
dec
loope
pop
jecxz
cmp
pop
add
int3
xor
in
aas
or
add
adc
or
sbb
and
int3
sbb
xchg
inc
inc
inc
jne
insb
add
dec
rclb
imul
cld
jb
pushf
push
loopne
stc
lret
add
and
cmp
jle
pop
outsb
ja
stc
stos
insb
js
jmp
push
and
movsl
mov
aad
adc
cltd
rcr
inc
jb
xchg
aaa
ja
push
in
lods
imulb
stos
iret
subl
int3
jne
icebp
adc
and
sub
xor
das
jae
mov
sbb
roll
test
xchg
xchg
loopne
jne
movb
dec
leave
in
fbld
and
jnp
push
incl
in
neg
cmp
scas
push
dec
mov
fnsave
dec
lcall
inc
fiaddl
jg
dec
inc
sbb
push
mov
addr16
cmp
fnsave
mov
gs
jp
xor
mov
adc
es
dec
sbb
add
lcall
or
or
xchg
cltd
in
sub
fcoml
jg
cld
arpl
in
mov
fadd
xchg
dec
das
dec
int
cli
pop
sbb
negb
mov
insl
add
andb
cld
std
pop
pop
add
movsb
mov
test
cmp
inc
orb
call
pop
jp
add
jg
bound
jg
icebp
les
mov
fwait
sbb
push
pushf
in
loopne
adc
call
push
sete
cmpb
pop
push
arpl
mov
mov
lcall
jo
leave
or
lret
sti
aas
cmpsl
sbb
push
cmc
sarb
pop
xchg
test
dec
jg
out
test
divb
loopne
ja
jns,pn
mov
repz
loope
int3
cli
insb
xor
dec
loopne
movsb
cmpsb
stc
das
xor
push
test
pop
dec
cmp
or
sbb
mov
xchg
xchg
push
fwait
mov
add
dec
in
insb
imulb
adc
and
cmpsb
fdivr
add
inc
shll
pushf
mov
add
jnp
push
adc
pusha
xor
mov
lahf
mov
inc
jl
or
jg
cmp
dec
mov
test
sub
mov
not
xor
out
xor
xchg
and
andb
adc
xchg
push
xchg
add
xchg
pop
mov
inc
xchg
lods
jg
mov
xchg
into
fwait
dec
sbb
outsl
mov
xor
mov
movsb
jecxz
cwtl
add
xor
jnp
loopne
and
mov
clc
mov
lea
sbb
xchg
mov
push
pop
mov
dec
fmull
incb
push
popf
cmp
stos
ds
cli
testl
mov
jne
mov
adc
cld
loopne
lods
mov
mov
gs
rol
insb
shll
cli
pop
mov
je
je
outsl
xlat
or
insl
nop
sbb
pop
mov
sbb
add
xchg
jle
insl
push
insl
mov
adc
repnz
subl
popf
xor
lds
push
loopne
xor
mov
pop
and
adc
jo
push
ljmp
shlb
jle
pop
popa
xor
or
and
dec
push
outsl
and
idivb
inc
cmpsl
daa
aas
mov
mov
outsl
out
inc
es
xor
fwait
scas
push
sbb
out
xchg
mov
xor
out
fiadds
shl
test
loopne
mov
enter
mov
ja
imull
mov
adc
jl
fimull
jo
push
add
inc
xor
add
in
and
adc
mov
mov
les
adc
popf
mov
cwtl
nop
add
cwtl
shr
jbe
add
mov
add
int3
jbe
jge
in
pushl
pop
lahf
and
or
and
cmp
dec
pop
sbb
iret
nop
test
inc
push
mov
cmp
xchg
popf
mov
call
insb
mov
jge
push
mov
xorb
or
inc
dec
xchg
por
xor
pushf
test
das
add
mov
pop
mov
aam
cmp
shlb
jb
mov
stc
sti
mov
push
ja
nop
pusha
mov
push
cwtl
xor
in
xchg
rolb
and
in
or
jne
inc
imul
mov
pushf
andb
mov
enter
mov
imull
dec
dec
jns
add
pushf
jo
out
sub
jmp
sub
ds
rol
push
xchg
sub
cld
jae
addr16
adc
subb
loop
adc
inc
sbb
push
jnp
xchg
mov
fcmovnb
lret
adc
sbb
push
xchg
cld
loopne
int
lods
jl
imul
andb
jmp
loop
adc
or
rcl
and
shlb
xchg
ret
jle
xchg
imul
pusha
or
jl
mov
inc
cmp
and
adc
adc
cmpb
loope
inc
mov
pop
xchg
mov
ret
push
sbb
test
dec
ds
sti
fistpll
and
cmp
dec
ljmp
adc
push
idivl
xchg
lahf
repz
push
pop
mov
das
js
adc
sarl
test
mov
mov
adcl
cltd
loope
arpl
mov
sti
add
dec
ljmp
lahf
inc
mov
or
sahf
or
xchg
fs
adc
imul
mov
jl
imul
or
ret
cmp
sub
cmpsl
inc
inc
and
cli
roll
test
cmc
mov
mov
mov
xchg
std
fwait
lods
pop
cmp
xor
mov
mov
scas
push
pop
lock
push
pop
lock
sarl
leave
fstps
jbe
jp
jnp
in
cmp
aas
imul
jb
and
pusha
sub
js
and
inc
mov
pusha
pop
pop
pop
jp
mov
sub
lcall
inc
scas
and
sahf
fnstcw
aad
pushf
cld
loopne
sbb
pusha
pop
enter
mov
jmp
neg
and
jecxz
in
arpl
ljmp
test
push
fcoms
std
movsl
leave
sbb
popf
push
enter
es
adc
and
pop
fisubs
add
dec
rcl
xchg
adc
jecxz
addb
loope
jo
inc
enter
fstp
mov
mov
movsl
out
xor
mov
rclb
pusha
push
enter
mov
nop
jo
dec
or
inc
stos
not
mov
cwtl
add
push
hlt
inc
js
bound
loopne
orb
popa
rcl
iret
insb
ja
xor
negl
and
movsb
pusha
jmp
bound
cmp
or
pop
loope
inc
rclb
test
adc
pushf
pusha
loopne
cmc
xchg
xchg
mov
add
fwait
stc
and
push
sbb
or
pop
jae
mov
inc
mov
jnp
sarl
push
pop
xchg
xchg
sbbb
lcall
jle
ficoms
movsl
or
adc
test
sbb
sbb
pusha
jle
xor
js
sti
cwtl
mov
pop
rolb
mov
cmp
add
ret
push
gs
and
jle
adc
push
adc
add
data16
les
and
scas
mov
push
pop
mov
ret
push
pop
inc
push
idivl
mov
mov
adc
add
push
cmc
ss
sbbb
cwtl
cmp
movl
pop
push
addr16
out
lret
aad
ljmp
lock
imul
pop
xchg
or
ret
push
sub
lret
push
push
dec
mov
push
dec
mov
adc
mov
test
pop
cmp
cwtl
andb
adc
add
test
adc
xchg
sar
stc
mov
mov
loopew
xor
push
arpl
flds
inc
pusha
inc
inc
pop
repnz
sub
enter
mov
out
and
mov
mulb
cmp
movsl
push
mov
cwtl
jo
sbb
jo
adc
add
xchg
in
repnz
ds
inc
loope
out
pop
outsb
rcrl
cwtl
rolb
and
movsl
xchg
sub
cmpb
cmp
fcompp
js
pop
orl
add
mov
test
mov
loope
dec
rcrb
cmpsb
xchg
dec
add
das
add
push
ja
pop
and
loopne
or
rcrb
push
jo
cmp
mov
mov
cmp
pop
sbb
fdivl
adc
cwtl
movsb
add
leave
inc
js
xchg
and
fistl
mov
inc
jecxz
adc
aas
pop
sub
ss
repz
out
call
sbb
hlt
inc
push
mov
mov
mov
into
cmc
pop
orl
xor
pushf
sbb
lds
inc
xchg
lea
push
stc
inc
push
sarb
jg
in
sub
inc
and
add
sub
and
cwtl
les
sbb
nop
in
jge
lock
push
fdivr
push
cmp
adc
shrb
lock
loopne
inc
push
jne
push
push
and
insb
sbb
add
jge
sahf
subl
mov
dec
iret
sarb
mov
lods
cltd
dec
lea
pop
add
mov
and
xor
test
lret
and
fldcw
mov
inc
add
testl
jl
mov
xor
sbb
lahf
mov
into
jg
mov
sub
fnstsw
mov
roll
pop
push
pushl
sahf
jnp
int3
inc
and
dec
mov
mov
je
scas
mov
scas
jo
cmp
pushf
and
arpl
jo
movsl
add
rcll
and
lahf
mov
sbb
sbb
and
pop
in
inc
scas
hlt
enter
pop
xor
push
adc
and
out
or
push
cwtl
cmp
sbb
test
jne
insw
subl
lret
add
pop
push
insl
mov
cmp
inc
jecxz
int
lea
outsl
aad
cmp
push
push
mov
iret
xchg
push
subb
lea
or
or
loopne
jo
mov
or
aas
pop
insl
pop
xor
jns
clc
scas
adcb
sbb
sub
cmpsl
adcl
pusha
scas
in
sub
jbe
test
jge
js
push
sbb
adc
pop
je
in
and
pop
jecxz
loopne
mov
push
cmp
mov
push
outsl
ljmp
mov
jns
out
in
add
and
cmp
orb
xor
loopne
in
adc
adc
repnz
xchg
mov
xchg
int3
pop
adc
pop
mov
xor
sub
iret
imul
jg
sbb
je
bound
cltd
xchg
movsl
repz
in
call
or
mov
movsb
xchg
insl
out
mov
pop
jb
out
lret
push
clc
inc
sbb
cltd
or
jns
in
xchg
cs
pop
sub
xchg
jno
or
inc
inc
mov
sbb
int3
mov
mov
shll
lret
outsl
fs
adc
and
adc
lahf
pop
test
das
imul
std
mov
inc
cld
pusha
jge
cmp
mov
movsb
inc
sbb
jl
xor
xor
sbb
and
cmpsl
jp
cmpsb
push
adc
in
addr16
xchg
mov
sub
pop
pop
out
adc
stos
jp
xor
add
in
jl
addr16
jg
push
fsubrs
jne
adc
lret
gs
xor
or
push
in
lahf
lahf
daa
jo
or
gs
add
cwtl
mov
mov
add
mov
cmp
jno
mov
fs
ja
jl
inc
sub
add
cwtl
xchg
inc
cmpsl
cmpsl
or
in
jae
jl
les
fdivl
dec
lods
mov
inc
lea
cmp
cmp
fadd
inc
push
mov
sub
call
jmp
xchg
clc
cmp
pop
fnstcw
loopne
por
pop
nop
in
rorb
xor
and
push
in
sahf
sbb
mov
sahf
js
je
imul
add
cld
sbb
jle
sub
pop
lock
js
sbb
out
int
xchg
stc
lret
mov
hlt
and
pop
jbe
mov
or
and
push
sti
mov
fsubs
xlat
add
imul
clc
icebp
inc
cmpsl
push
out
mov
push
adc
data16
into
int
mov
mov
xor
sbb
cwtl
pop
add
mov
test
push
int3
cmp
pusha
xchg
movsl
lock
mov
aaa
jle
sbb
outsl
pop
add
add
nop
shlb
jecxz
mov
nop
cmp
mov
outsb
and
jbe
push
push
add
pusha
or
movsb
pcmpeqw
filds
inc
add
das
sub
cmp
adc
or
cmp
fwait
xchg
int3
out
enter
lahf
push
pop
xchg
jmp
sbb
imull
jle
add
adc
andl
push
inc
jne
ds
sub
push
call
fs
pusha
sub
inc
jo
cwtl
add
inc
sub
jno
or
orb
scas
lahf
out
jle
fadds
lret
or
lahf
in
sbb
jecxz
push
call
mov
imul
add
pusha
and
and
xor
mov
in
add
movsb
lahf
shlb
xor
xchg
dec
iret
add
bound
cwtl
adc
add
es
fisttps
pop
dec
in
rcrl
das
add
sub
ret
jo
loop
in
aas
pop
jl
movsb
loopne
test
add
imul
hlt
push
push
sbbb
mov
xor
rcr
sbb
mov
dec
xchg
mov
mov
je
sub
and
jbe
rol
std
cmp
sub
xchg
push
mov
sti
jp
xchg
insb
outsl
dec
jo
sahf
ds
dec
jge
xchg
ret
push
test
fidivrs
flds
pop
in
mov
cmp
push
movsb
jo
lahf
ja
cmp
cmp
mov
and
out
dec
adcl
pusha
inc
mov
inc
int3
cld
pop
test
adc
movsb
or
xchg
sub
jns
sub
repnz
inc
fisubl
sti
mov
enter
add
sti
int
aas
xor
lods
adc
fstl
adc
loop
lahf
lea
js
insl
shrb
cwtl
pusha
pusha
fidivrl
shrb
sbb
sub
sbb
cs
mov
jle
mov
mov
sbb
movsb
pop
rcll
add
mov
fcmovu
outsl
jns
cmpsb
sbb
pusha
popf
outsl
push
fisubl
jbe
push
add
or
inc
pushf
cwtl
rcrb
in
dec
dec
scas
stc
sbb
dec
pminub
inc
andb
inc
nop
sub
test
lahf
cmpsl
mov
dec
cmpsb
mov
mov
add
dec
jp
and
mov
cs
dec
inc
mov
adc
test
sub
inc
or
sub
out
out
dec
pop
xchg
mov
shrb
jge
in
cmp
cmc
sub
push
inc
jle
scas
push
insb
adc
fsubl
mov
adcb
push
fmull
aad
testb
dec
rcrb
ja
pop
mov
lea
adc
mov
mov
adcl
mov
mov
das
ss
dec
cmp
xchg
or
inc
mov
push
pop
js
movsl
mov
sub
fwait
dec
pop
jo
lock
xchg
mov
mov
xor
test
mov
mov
jae
xchg
lea
adc
dec
mov
aad
and
cmpb
ret
push
lock
pop
jne
mov
add
in
xlat
test
push
xor
push
les
inc
sbbb
push
ret
pushf
add
je
lret
or
pusha
xchg
out
in
arpl
and
repnz
in
mov
inc
ljmp
lret
pop
xchg
push
or
xor
cs
movsb
loopne
jb
sbb
imul
push
imull
mov
add
addl
add
ror
les
repz
or
sbbb
add
push
push
lcall
xchg
or
cmc
mov
divl
jp
lcall
stc
mov
fistpl
cmpsl
lcall
pop
and
in
call
xor
mov
cmp
ljmp
fnstenv
push
sub
std
test
xor
outsl
cmp
xor
jbe
rolb
loopne
or
clc
shrl
add
xchg
mov
mov
mov
mov
popf
or
cmp
rcll
aad
dec
rcrb
inc
fcompl
icebp
xchg
jge
mov
inc
jns
dec
call
push
xor
dec
scas
dec
ret
mov
fwait
jg
call
jge
icebp
cmp
sub
test
adc
mov
neg
xlat
sub
sbb
mov
mov
shll
out
lret
cmp
ror
sbb
sub
dec
and
ja
push
aam
lods
out
in
mov
insb
and
lcall
adc
xchg
cwtl
mov
xchg
sub
pop
out
popa
je
dec
sbb
and
fdivs
lock
sbbl
add
aam
js
mov
cmpsb
pop
fiaddl
and
and
iret
lea
sahf
decl
jg
pop
pop
mov
cltd
sub
pop
add
xor
mov
push
inc
sub
loope
xchg
int
mov
loopne
test
loope
bound
dec
in
fidivs
in
mov
sbb
mov
jo
dec
popf
jb
rolb
or
pop
xchg
push
adc
mov
push
stos
cs
fcompl
mov
xchg
jno
mov
pusha
hlt
test
scas
aaa
addr16
imul
popa
jne
bound
fbstp
sbb
pop
xor
jb
clc
push
fistps
mov
outsl
jge
mov
dec
filds
shrl
enter
pop
inc
xor
jnp
test
mov
adc
add
loopne
lock
or
loopne
inc
pop
fdivl
mov
in
ret
shll
adc
dec
adc
mov
and
aad
jg
mov
jo
in
imul
add
fnstsw
sub
mov
inc
pop
loop
jge
sbb
xchg
jo
or
out
sbb
mov
test
aaa
imul
popf
lock
popa
leave
stc
cmc
lcall
out
mov
ja
data16
nop
cwtl
xorb
mov
dec
cmp
rolb
lock
push
ja
ret
aad
jb
sub
adc
pop
adcl
in
mov
xor
mov
loop
adc
xlat
std
xor
inc
sbb
add
movsl
cld
xchg
sti
xchg
leave
cmc
es
in
and
add
movd
imul
idivb
add
adc
and
dec
fwait
sub
dec
mov
mov
test
jne
sbb
jb
pop
fisubl
inc
mov
dec
push
cwtl
mov
ljmpw
nop
sub
movaps
mov
and
or
add
psubd
pop
fstpt
sbb
rorb
push
into
dec
sbb
and
test
mov
sbb
cli
push
jns
xchg
negb
dec
in
lods
fwait
inc
sbb
aas
das
subb
add
bound
int3
push
mov
pusha
js
js
hlt
aas
dec
popa
pop
xor
andl
pop
es
inc
lret
cmp
dec
lret
nop
sbb
mov
mov
insb
or
mov
jmp
inc
cmc
rcll
testb
xor
leave
cmp
sub
adc
or
rcl
out
cli
or
fsubs
clc
add
clc
lret
and
mov
fucomp
push
das
aas
dec
movsl
jne
push
cltd
xor
cmp
jns
mov
jg
mov
ret
shl
jecxz
and
loopne
shrb
and
sahf
mov
push
fcmovne
test
push
and
pop
scas
push
andb
test
add
pusha
pop
loope
insl
and
in
sbb
fsubs
pop
outsb
shrb
pop
addr16
int3
loopne
enter
mov
loopne
ret
bound
add
inc
mov
dec
sbb
jae
ljmp
das
andb
mov
mov
dec
ja
inc
xchg
sbb
push
and
repz
sbb
pop
imul
and
jne
pushf
je
xchg
xchg
adc
inc
mov
roll
loopne
rol
lods
jmp
jo
ja
in
ss
inc
aam
sub
inc
mov
test
sbb
mov
push
mov
das
sub
je
sbb
cltd
in
mov
sahf
add
or
outsb
fs
int3
adc
ret
mov
inc
sub
sbb
inc
fs
xor
fldcw
xchg
out
data16
rclb
or
repnz
aam
cmp
xor
jp
inc
sbb
jbe
cmc
lahf
mov
pop
rcrb
add
std
jmp
fimuls
push
mov
push
lcall
mov
aam
mov
dec
push
dec
inc
xchg
pop
imul
push
sub
nop
in
inc
insb
xor
pop
outsb
jle,pn
into
jl
sbb
add
aam
lods
test
ret
daa
cmpsl
jecxz
push
mov
jno
es
sub
sub
ds
movsl
mov
adc
pusha
inc
mov
jecxz
pop
ret
and
bound
inc
in
fs
and
mov
add
je
or
mov
pop
and
sub
inc
add
mov
xchg
daa
aam
loop
movsb
in
clc
sub
cmpsl
fisttps
rolb
icebp
sub
inc
adc
pusha
sub
xchg
jmp
movsb
loopne
sbb
popa
rcr
movsl
xlat
xchg
ret
out
xchg
xchg
push
add
ss
inc
aaa
call
xlat
jb
fldt
xlat
movsb
push
xchg
enter
mov
pusha
push
push
int
or
xor
fmul
add
jmp
push
data16
pusha
daa
xor
lock
aad
ljmp
shlb
or
cmp
push
xor
fisttpl
loopne
movsb
imul
jae
lahf
gs
movsb
push
pop
aaa
ja
rcl
pusha
and
dec
dec
fs
sarb
in
lcall
dec
jno
clc
or
in
fwait
in
add
cmp
in
repz
adc
idivb
xchg
inc
xchg
cmp
mov
add
adcb
ret
mov
fs
jno
shll
and
mov
mov
jp
add
lret
sbb
fidivs
mov
loopne
adc
add
scas
push
mov
addl
pushf
cld
xor
mov
imul
and
push
dec
test
pusha
mov
stos
std
out
in
cmp
mov
pop
mov
add
add
addl
xchg
and
nop
test
mov
or
je
pop
cmp
mov
sub
inc
push
xchg
nop
pusha
cmc
mov
orl
loopne
push
in
lahf
add
arpl
push
and
dec
cli
lret
cmpl
out
cltd
xchg
imul
das
test
mov
inc
mov
hlt
inc
jo
bound
nop
cld
mov
mov
pusha
adc
hlt
inc
out
insb
inc
cmp
add
imull
inc
frstor
aam
pusha
sahf
dec
hlt
jbe
cwtl
insb
shrb
add
sti
out
es
call
adc
lret
sub
xchg
xor
iret
jno
push
shrl
sub
pusha
out
or
repnz
xchg
inc
jl
jge
mov
mov
int3
arpl
out
xchg
fdivr
mov
cltd
in
jb
lods
sbb
or
inc
fnstcw
xchg
xor
mov
mov
or
ret
loopne
addl
pushf
in
loopne
ret
mov
inc
jbe
sete
push
pop
shll
mov
cld
xlat
xlat
jbe
xor
negl
cmpsl
pushf
in
mov
out
pop
mov
fimull
push
mov
and
shll
loop
fisubl
fdivrl
mov
rolb
gs
jae
mov
int
sub
popl
add
insb
rolb
shll
addr16
pop
mov
ds
xor
sbb
xchg
enter
loopne
sbb
into
pop
push
ss
sbbl
