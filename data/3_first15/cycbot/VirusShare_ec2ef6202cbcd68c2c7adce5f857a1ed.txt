or
enter
adc
mov
loop
jg
jns
rorb
es
adc
mov
insb
fnsave
pop
jo
int
ljmp
and
push
cmp
lea
xchg
lock
inc
insb
js
dec
sbb
aaa
ljmp
jbe
cwtl
cmp
jnp
pop
mov
ds
push
sti
addr16
jnp
or
lods
fsubrs
clc
out
push
adc
scas
in
loop
adcl
outsl
test
xor
outsb
sub
rcll
add
int
addb
outsb
push
sub
out
pop
aaa
movb
add
adc
dec
adc
cltd
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
pop
add
mov
cs
push
push
lret
jmp
add
add
inc
ss
in
or
or
add
cmp
divb
add
pop
inc
add
loop
call
xchg
mov
fbld
add
push
fistps
inc
imul
pop
xchg
imul
into
outsl
adc
nop
repnz
shr
mov
scas
inc
nop
mov
xchg
sbbl
mov
test
inc
xchg
mov
pop
inc
add
add
int
repnz
add
jb
iret
mov
push
pop
sub
cmp
or
and
aaa
push
sbb
add
pop
adc
loope
xor
cmp
add
inc
inc
add
pop
lret
outsb
sbb
arpl
sbb
sub
jne
test
add
push
add
push
int
negb
jl
mov
mov
or
mov
fwait
add
leave
out
es
in
mov
clc
mov
add
sti
xchg
push
pop
cmpsl
fmuls
loop
xchg
and
pusha
add
mov
xchg
and
sub
mov
shr
ret
mov
lods
cmp
pop
mov
and
or
out
sbbl
inc
add
das
aaa
inc
add
cs
pushf
mov
jb
xor
xchg
add
mov
adc
push
adc
pop
push
lcall
add
inc
in
int
stos
mov
out
mov
lret
inc
add
loope
pop
fs
cmpsb
cmpsl
sti
lret
push
dec
ret
xorl
ret
outsl
inc
or
in
push
jg
scas
pop
icebp
je
mov
xlat
xchg
orl
sub
mov
pop
dec
out
aas
cmpsb
pop
mov
repz
or
hlt
mov
add
and
int
fbld
add
jnp
mov
mov
adc
add
out
ljmp
enter
stos
add
adc
push
jno
mov
sbb
ret
shll
icebp
add
ljmp
or
sub
push
outsl
mov
insb
aaa
push
test
lahf
cmp
lcall
mov
rolb
add
stos
stc
shlb
fucomp
ret
mov
out
std
leave
mov
mov
test
add
add
mov
push
xchg
jnp
adc
mov
les
mov
aad
jmp
xchg
cltd
dec
mov
imull
lds
dec
mov
int3
mul
gs
mov
negl
inc
add
adc
test
mov
dec
out
or
and
repz
jbe
push
cwtl
mov
adc
lods
loop
in
jns
out
mov
or
and
xlat
mov
in
xchg
sbb
xor
or
lret
xor
sub
addb
lret
ret
and
add
pushf
jo
outsl
imul
adc
push
imul
add
pop
daa
push
imul
xchg
jae
cld
out
and
leave
xor
rcl
lods
xchg
inc
add
out
jle
jno
scas
lret
rcrl
and
out
and
xchg
cmp
xchg
dec
clc
fdivl
inc
add
add
inc
rolb
out
mov
sarl
mov
loope
lcall
add
mov
inc
add
cmpsl
stos
mov
shll
add
push
mov
loope
adc
or
push
sub
addb
xchg
add
cmc
add
add
ss
inc
rcr
push
sbb
xchg
pusha
add
sub
mov
int
cmp
mov
xor
mov
sbb
cwtl
or
mov
fs
hlt
cld
dec
xor
in
and
jns
pop
jp,pt
push
aas
cld
push
dec
and
mov
add
and
daa
mull
pop
mov
inc
mov
outsb
sarb
movsl
jno
addr16
addl
xchg
ret
and
pushl
inc
add
pcmpgtb
inc
cmp
into
cmp
sbb
mov
repz
popf
outsl
fisubl
or
fwait
shl
inc
iret
outsl
mov
xor
dec
divl
stos
pop
test
clc
aam
incl
inc
add
lods
out
sbb
dec
sbb
sbb
divl
pop
mov
adc
clc
jbe
outsb
dec
xor
in
add
sub
popf
jl
sbb
cmp
mov
mov
sub
ss
lret
or
add
add
xchg
mov
push
add
test
cmp
lods
mov
or
in
push
mov
test
das
xchg
jnp
lret
add
dec
ds
movsl
aad
lods
pusha
add
les
iret
adc
cmp
test
loope
add
push
or
fs
jg
xchg
gs
dec
add
mov
lds
addb
adc
push
jo
mov
dec
cwtl
pushf
jnp
lahf
arpl
outsl
mov
loop
fwait
into
adc
or
xor
int3
ss
ljmp
inc
add
lcall
mov
xchg
rolb
sub
mov
or
xchg
ret
sbb
movnti
fwait
stc
das
adc
mov
mov
aaa
pushf
lahf
test
dec
mov
add
sub
rolb
inc
add
stos
cltd
out
xor
add
push
gs
lds
out
xor
outsl
mov
pop
je
cmpsb
or
and
loope
xor
test
nop
fsubp
mov
mov
jo
es
andl
pusha
add
and
test
rcrl
cmp
aaa
cmpsb
fs
and
pushf
bound
pop
rolb
sbb
pop
lds
pop
insl
rolb
in
add
rolb
xor
test
add
mov
add
les
call
add
add
pop
in
xor
rolb
mov
mov
test
fisttpl
mov
jecxz
std
inc
es
dec
jp
icebp
jg
mov
and
test
pop
loop,pt
leave
adc
cwtl
add
mov
movb
aas
pop
mov
ljmp
js
imul
in
mov
push
inc
add
jae
addb
xor
mov
loope
pop
xor
mov
fdivs
xchg
stos
in
dec
pop
pushf
mov
aad
lea
cmp
ficompl
lahf
push
mov
mov
add
ljmp
pop
mov
negb
addb
jnp
jmp
adc
aas
add
cmp
js
imul
int3
loopne
ret
mov
cvtdq2ps
cmp
daa
adc
adc
sbb
jo
xchg
lret
push
in
adc
in
cmp
fdivrp
sbb
movb
push
insl
movsl
addr16
test
mov
fwait
cmp
mov
pop
jmp
icebp
xor
jno
push
enter
jb
xchg
js
sub
xor
sbb
imul
sub
loop
cmc
movsl
mov
or
out
arpl
adc
ds
lods
xor
test
dec
repnz
imul
rolb
imul
ss
and
mov
mov
pop
xor
add
gs
test
arpl
cld
inc
add
dec
xchg
out
mov
out
jo
scas
mov
jne
jno
stos
mov
jecxz
jbe
xor
out
or
sbb
subl
pushf
xor
sbb
pop
jp
addb
pop
sub
lods
aam
dec
dec
ds
jg
inc
ljmp
insl
mov
or
pop
cmp
es
sub
jmp
es
mov
popf
mov
and
cmpsb
jbe
xchg
outsb
jge
mov
sbb
idivb
sbb
add
jmp
add
ja
popa
jo
cmp
popa
mov
addb
scas
jns
cmp
mulb
movsb
mov
dec
push
insl
sbb
fcmovbe
scas
cld
fmull
pop
and
mov
addb
ret
dec
dec
xchg
push
inc
add
movb
add
push
cmp
pop
add
fidivs
or
mov
outsb
sbb
push
add
imul
test
out
mov
cmpsl
and
call
mov
lahf
mov
popa
cli
mov
mov
call
dec
sub
jno
outsl
mov
out
mov
int3
pop
scas
addb
mov
jns
add
mov
mov
push
std
rolb
cmp
movb
inc
pop
jg
movb
add
pushf
ret
insl
and
cmp
jnp
pop
aas
xchg
mov
mov
mov
or
repz
pop
stos
les
aaa
cld
mov
jl
fidivs
dec
rcrb
cmp
add
adc
idivl
pushf
sbb
fbld
aad
lea
ja
je
shll
mov
lds
cmp
mov
pop
mov
jnp
jle
std
and
mov
fwait
jl
and
cwtl
pop
dec
xor
mov
dec
sub
fsubr
push
xor
sbb
jbe
cli
sbb
add
and
gs
pushf
or
adc
js
addb
inc
out
movsl
shrl
stos
mov
loope
shl
mov
sbb
pop
bound
pop
push
cmp
lahf
or
popf
in
dec
fistpll
sbb
rcll
aad
movb
fidivrs
push
call
sbb
push
sub
js
fstpt
fstpl
in
mov
hlt
divb
call
cmp
in
and
push
lret
mov
dec
adc
jae
test
imul
pop
popf
or
lcall
fnsave
pushl
pop
mov
sti
mov
add
xor
sbb
ret
addb
fdivl
xchg
add
in
jmp
dec
stc
cmc
dec
gs
int
loopne
outsl
stos
popf
pop
sarb
int
dec
sbb
mov
iret
mov
xchg
jne
imull
test
or
adc
add
aas
icebp
push
mov
or
les
dec
push
loop
dec
mov
mov
rolb
imul
push
cwtl
push
jbe
mov
addb
add
cltd
xchg
push
add
xchg
fdivs
es
add
mov
add
cmp
and
mov
cmp
push
mov
jns
repz
xchg
adc
test
xchg
les
push
cmp
add
sbb
mov
inc
movb
sub
xor
add
dec
add
sti
mov
mov
out
fnsave
push
mov
clc
rcll
les
icebp
inc
dec
fcomip
adc
mov
inc
dec
mov
loop
pop
js
add
mov
jae
aaa
xor
pop
mov
orl
enter
add
sub
cmc
ljmp
nop
or
dec
out
push
push
cmpsl
cmp
add
mov
mov
xchg
jmp
pop
xor
arpl
fsubr
adc
add
jae
aad
fdivs
sbb
pusha
add
jae
push
stos
sbb
mov
fstpl
add
icebp
or
ret
add
cmp
fsubr
inc
add
xchg
pop
or
add
fldenv
add
jo
bound
xchg
lock
cmp
mov
push
lods
out
cmp
add
push
push
push
popa
pop
in
aas
jns
addb
paddusb
imul
test
pusha
add
jno
jmp
inc
sarb
mov
mov
ror
and
mov
inc
add
adc
stos
push
imul
std
xor
in
mov
add
es
in
les
or
das
ja
imul
cmp
fists
jge
add
mov
jno
xchg
pop
roll
imul
int3
aas
cwtl
stc
lods
xlat
jb
xchg
push
jnp
mov
mov
pop
push
xchg
push
add
push
inc
add
dec
pop
inc
add
and
stos
jmp
leave
mov
xor
insb
imul
add
pop
mov
lock
scas
add
cli
fmuls
adc
mov
arpl
add
push
jae
mov
pop
xchg
cmc
inc
popa
rolb
sti
dec
sbb
mov
pop
lret
inc
out
jp
cmp
mov
out
pop
daa
pop
insl
or
nop
pop
push
push
loop
pushf
mov
out
mov
mov
jnp
jo
mov
mov
dec
fimull
jg
das
mov
xchg
xchg
addb
pop
add
test
pop
outsl
or
mov
aaa
mov
pop
dec
jns
add
retw
lock
and
js
movsl
mov
push
cmc
data16
outsl
sbb
aas
jecxz
push
cmp
mov
sub
rclb
ss
ljmp
jo
out
adc
push
mov
xchg
cmp
adc
adc
push
sbb
lock
add
jnp
fstpt
movsb
es
sub
or
mov
jecxz
add
mov
stos
fwait
sub
scas
popf
push
sbb
out
push
and
and
sarb
push
rcrb
inc
add
xor
nop
jge
mov
outsl
rcll
mov
adc
neg
pop
rclb
dec
mov
adc
add
sti
and
add
mov
rorl
add
dec
lea
cmc
outsb
adc
xlat
lcall
add
adc
and
popa
movb
add
pop
pop
pop
rolb
add
mov
sbb
bound
dec
out
ror
or
sbb
cmp
sub
lret
push
xchg
mov
push
sbb
cmp
pop
fnsave
loope
mov
dec
rolb
xlat
js
mov
inc
add
pop
out
xchg
push
clc
add
and
data16
lcall
in
add
test
popf
les
cwtl
js
add
test
sbb
cli
stos
xor
add
xor
lahf
adc
mov
fwait
popa
mov
mov
movb
push
mov
fldt
ficoms
push
sub
sti
or
or
out
and
cmpl
xor
outsb
lret
mov
sti
mov
mov
fmull
test
test
xor
cmp
lret
push
inc
movsb
fidivrl
shr
or
jno
fdivs
ljmp
test
stc
and
jge
sub
dec
pop
movsl
aas
fisubrs
icebp
repz
aad
rorl
add
out
fnstsw
push
mov
dec
fdivrs
aad
jns
and
repz
jnp
out
and
mov
mov
movsb
inc
add
xchg
sub
leave
jmp
addb
add
mov
pop
jo
dec
je
cmpsb
rcrl
repnz
add
movsb
fmuls
outsl
jl
aam
iret
dec
jbe
add
mov
cwtl
aam
mov
ret
mov
cmp
scas
fcoms
add
pop
gs
mov
arpl
out
xchg
fwait
imul
lahf
clc
add
hlt
das
dec
rcrb
mov
mov
cmp
jmp
mov
adc
inc
add
push
inc
jns
and
add
xor
add
ja
jae
adc
sbb
test
jnp
sbb
loope
and
push
addr16
inc
popf
mov
lea
repz
xor
jg
xchg
jge
jae
fbstp
cmp
ja
addb
repnz
adc
aas
push
add
add
add
test
mov
xchg
xor
lret
xchg
xchg
insb
jge
add
xchg
ret
cmovp
cli
cld
pop
cwtl
ret
dec
jnp
out
pop
mov
movsb
or
test
ficoml
and
mov
jl
mov
mov
sub
mov
inc
add
jl
push
jns
pop
sbb
jg
daa
sti
aas
cltd
lods
scas
mov
int
lahf
ljmp
scas
inc
out
mov
outsb
int3
sub
sbb
scas
sbb
adc
cmp
sbb
sub
add
js
push
and
mov
cltd
pop
addr16
cmc
mov
jmp
add
nop
xor
fmulp
js
outsl
xchg
pop
fucomp
hlt
out
push
les
aam
mov
call
dec
pop
fnsave
into
pop
mov
movsl
and
fdivs
pop
imulb
pushf
out
fistpl
push
lahf
jae
mov
push
inc
stos
and
push
leave
or
push
jbe
jbe
jp
push
push
imul
add
dec
cmp
ja
sub
cmp
fcmovnb
add
popa
cvtpi2ps
pop
testl
repz
addb
add
push
pop
cmc
push
adc
gs
inc
add
add
icebp
int
cmp
mov
into
stos
popa
rorl
xchg
jnp
test
push
add
sub
mov
fwait
out
add
rolb
das
fmull
lcall
and
or
push
pusha
add
in
inc
add
nop
jnp
clc
dec
push
out
xchg
mov
xor
lahf
cli
enter
pop
test
mov
cmp
mov
mov
jo
push
out
push
xlat
loope
mov
add
xchg
add
pop
lahf
jle
mov
cmp
nop
mov
int3
add
lods
test
inc
int3
xor
xchg
aam
xor
add
xor
xchg
std
pop
cwtl
mov
dec
stc
sbb
divl
push
outsl
and
and
mov
dec
dec
outsl
pop
inc
add
push
add
nop
push
add
pop
je
out
in
jmp
or
outsl
loope
scas
fildll
inc
add
inc
add
or
enter
lahf
ds
sub
add
fiaddl
mov
mov
fsub
in
inc
add
adc
jo
bound
cs
push
add
stos
mov
cwtl
pop
dec
jo
or
dec
or
addb
faddl
add
xchg
xchg
js
shl
ficoms
insb
movsb
push
add
std
lret
leave
xchg
xchg
add
popa
push
in
add
cmp
dec
sbb
jno
add
das
inc
add
repz
sbb
icebp
sbb
ficoml
popf
cmp
xchg
lret
cmp
jnp
pop
and
fsubp
pop
pop
cld
shl
out
lcall
xor
into
dec
xchg
add
mov
shrl
ret
test
dec
test
add
lods
inc
inc
lods
cs
shlb
out
ret
push
incl
rcrl
push
sub
loop
cmc
lret
sub
add
arpl
je
add
stos
mov
inc
sub
cmp
sub
fcoml
test
cmp
roll
push
nop
nop
or
mov
mov
stos
cmp
dec
jae
lods
push
test
icebp
sbb
ljmp
dec
push
add
test
aad
lcall
bound
icebp
mov
ret
std
jo
negl
repnz
jb
add
cmp
adc
add
mov
adc
popf
xchg
shlb
jmp
in
enter
fwait
daa
adc
std
or
js
pop
ret
sbb
or
std
mov
ss
add
jae
xchg
fcoml
fimull
aas
test
rorb
arpl
fs
imul
cli
mov
sub
les
dec
jbe
dec
js
pop
jp
unpcklps
push
xor
push
sti
lret
adc
sub
fwait
lods
add
pushf
cmp
fadds
inc
add
xchg
or
add
xchg
xor
jecxz
imul
xchg
mov
les
ficoml
jns
cmp
js
jmp
rorb
shrb
out
sbb
shl
in
ljmp
pop
pop
jg
adc
push
mov
cmp
jbe
add
out
in
ss
mov
jmp
xor
aaa
and
push
scas
dec
mov
jo
jmp
jae
xor
shrl
add
or
loope
lea
fdivs
mov
dec
out
push
inc
sub
mov
add
ret
cmc
xor
addb
test
push
repnz
xchg
bound
pop
xor
aam
add
js
idivb
mov
les
aad
xor
sbb
out
into
push
add
pop
or
decb
mov
push
stos
sbbl
and
mov
pop
or
cmp
outsl
xor
test
dec
ljmp
fwait
stos
xor
pop
nop
into
push
xor
dec
pushf
inc
pop
adc
xchg
mov
cli
aam
hlt
or
es
out
js
xchg
cmp
sub
aam
clc
push
or
mov
inc
add
scas
ja
out
jno
and
cmp
add
xchg
add
fnstsw
cmp
pop
bound
pop
fcmovne
push
sub
mov
popf
leave
mov
pop
lahf
push
ljmp
fsubs
push
xorl
aaa
mov
dec
sti
or
mov
aaa
cld
stos
loop
inc
add
jns
add
vdivss
add
inc
add
mov
or
imul
test
je
jnp,pt
pushf
pop
out
add
jo
popa
loope
add
ret
and
jp
loop
addr16
cmc
add
shrw
inc
lahf
mov
aam
out
mov
gs
xlat
push
in
xor
jne
mov
in
jno
mov
inc
mov
addl
mov
insb
inc
add
xor
mov
mov
pop
jno
push
sbbl
and
cwtl
or
rep
arpl
add
add
xchg
fs
inc
add
pop
mov
dec
mov
scas
inc
xor
scas
cmp
pop
cli
int3
inc
add
mov
mov
jmp
cmp
in
fimuls
and
add
dec
out
ljmp
add
jl
add
add
xor
add
xor
push
jl
cmp
jb
gs
xor
ret
mov
cmp
mov
add
test
mov
jl
cmp
mov
repnz
pop
fwait
imul
xchg
push
mov
xor
add
jns
cmc
mov
sub
mov
enter
addr16
mov
add
jo
cmp
mov
or
fsubrs
mov
sub
push
push
das
or
insl
enter
inc
add
loop
add
jp
mov
call
aas
cmpsb
jbe
adc
xchg
push
cmc
rcr
out
insb
push
pop
xlat
push
pop
sub
out
out
or
addr16
sbbl
lock
cmp
pop
in
loopne
add
dec
mov
xchg
adc
bound
rolb
sbb
stc
mov
pop
sub
jno
out
test
popf
mov
cmp
repnz
pop
lods
or
add
add
and
in
push
loopne
add
sub
add
push
xor
pop
cmp
add
es
inc
add
mov
pop
fdiv
daa
inc
add
std
lods
xor
clc
andl
jbe,pt
cmp
mov
test
movb
outsl
pop
xchg
hlt
rolb
stos
arpl
out
pop
outsb
mov
rcll
cs
jle
push
sbb
push
out
add
or
subl
xor
dec
mov
cmpl
imul
popf
fdivs
mov
jle
movsl
int3
loop
add
adc
add
mov
add
adc
add
pop
lock
inc
adc
lock
and
sub
xor
mov
jmp
lods
and
add
insb
lea
addb
out
mov
add
in
mov
fbld
xlat
mov
cltd
negl
fstp
xchg
mov
rolb
dec
mov
adc
movb
cli
testb
mov
insl
movsb
mov
in
sbb
cmpsb
bound
hlt
aam
jno
push
les
adc
inc
inc
add
repz
mov
dec
imul
jp
nop
cmc
mov
imul
lods
unpcklps
cmp
add
ret
loop
mov
aas
rclb
pop
repz
mov
add
add
sti
cmp
xchg
addr16
mov
outsl
push
fnstsw
add
pop
les
inc
add
frstor
stc
mov
cwtl
push
inc
add
loop
movb
add
into
or
cld
sbb
add
add
push
enter
fstp
mov
lahf
movsb
loop
xor
scas
std
pop
add
leave
dec
test
push
rcrl
xor
lods
aaa
imul
mov
gs
adc
imul
stc
jno
pusha
add
mov
xchg
test
in
push
and
test
daa
pushf
lret
push
add
add
sbb
ljmp
sbb
sub
push
imul
aam
movsl
mov
adc
int3
sbb
sub
mov
outsl
inc
add
imul
push
mov
cmpsl
lds
daa
lea
and
aam
pop
lods
das
sahf
pop
sub
dec
stos
lcall
bound
mov
mov
jmp
mov
sbb
push
xor
or
cmpsl
jno
jb
setl
dec
scas
dec
mov
xchg
pop
stos
inc
add
mov
jno
mov
es
jecxz
dec
adc
push
fldenv
cli
push
in
dec
xchg
loopne
xchg
and
insb
push
push
rcll
enter
add
xchg
pop
or
aaa
and
jno
pop
push
out
push
jno
or
addb
mov
pop
xchg
add
sub
add
notb
xchg
jnp
xchg
cmp
daa
fidivrl
lret
and
negl
cmp
sbb
lods
lcall
int
jl
aam
mov
xchg
dec
pop
mov
jnp
sbb
movb
arpl
sbb
and
dec
fwait
fs
pusha
add
cmp
mov
push
dec
cmc
xchg
data16
lret
clc
mov
dec
shlb
add
and
jo
fwait
adc
ret
jo
enter
push
cmp
fsubl
popf
in
add
loope
or
push
or
out
test
fnstenv
sub
jmp
pop
mov
adc
cld
jb
es
repz
lcall
add
sti
fwait
mov
jns
mov
sbb
mov
fstpl
in
stos
in
mov
add
aam
sub
cmc
push
fnsave
addr16
mov
cmp
inc
xchg
and
inc
add
jb
fiadds
mov
out
cltd
sbb
es
cmp
clc
lds
addb
popl
adc
pop
dec
rolb
jecxz
mov
leave
rcll
enter
dec
cld
addb
pop
into
mov
rolb
mov
or
add
sbb
push
in
rolb
dec
sbb
bound
fnstcw
mov
decl
dec
push
fisttpl
dec
xchg
jnp
add
pop
sbb
decl
add
mov
pop
inc
add
andl
xor
and
cmp
in
fimuls
cld
cmp
pop
or
ss
push
lds
push
sub
neg
fistpll
out
cwtl
mov
pop
mov
inc
ret
addb
mov
out
sbb
cli
dec
dec
cmp
mov
test
je
mov
cli
popa
pop
ja
mov
jo
inc
push
mov
movb
pushf
push
fwait
adc
jge
imul
add
cmp
sbb
mov
mov
push
and
xor
sbb
je
je
lret
mov
jbe
sarl
lcall
mov
add
sbb
mov
dec
sub
dec
cmpl
or
sbb
jecxz
adc
std
add
cmc
jecxz
dec
out
xchg
jno
imul
mov
imul
or
call
pop
lea
ret
and
insb
sbb
push
iret
and
addb
incl
xor
fistl
xchg
push
int3
xchg
add
push
add
add
faddl
notl
movsb
cmp
add
add
inc
add
mov
xchg
push
push
jns
shl
push
repz
add
mov
fdivl
ljmp
jns
cs
repz
sbb
lea
outsb
inc
jg
lea
jmp
add
movsl
pop
xchg
in
xor
mov
stos
mov
cld
lret
dec
jg
xchg
push
mov
lods
mov
or
xlat
subl
xor
mov
inc
add
pop
clc
sti
dec
sub
sbb
leave
push
aam
dec
andl
jg
xor
shll
lods
mov
rolb
push
inc
dec
aaa
push
inc
add
insl
lock
data16
inc
add
in
sub
ss
and
nop
xor
push
rcll
mov
out
stos
rcl
cltd
push
lahf
jmp
cmp
pop
sbb
bound
hlt
dec
mov
dec
movsl
fidivs
pop
or
mov
xchg
xchg
out
lds
inc
add
or
out
adc
and
jmp
sub
xor
cmpsb
mov
dec
xor
ss
andl
add
mov
push
push
add
lods
jb
sti
inc
add
and
movb
and
imul
pop
xchg
xchg
cmc
pop
fistps
add
ret
xor
cmp
add
jns
add
stc
dec
test
cli
enter
mov
xchg
adc
sbb
popa
pop
bound
rcl
or
scas
mov
push
mov
aad
stos
enter
xchg
stos
insb
enter
enter
mov
loop
mov
push
sbb
mov
push
pop
into
daa
mov
add
jb
pop
mov
fisubrl
push
pop
sbb
ja
fsubs
ja
mov
push
in
in
dec
loop
add
or
mov
push
mov
scas
mov
pop
out
mov
fbstp
mov
inc
add
stos
shrb
ss
add
cmpsb
xchg
mov
aaa
jno
pop
ds
inc
jb
bound
ds
mov
je
repz
gs
add
out
mov
dec
repz
jp
mov
pop
movsl
mov
dec
psllw
lds
sub
cmp
test
mov
xchg
lds
sbb
movsl
ja
popa
push
pop
jg
repz
cmpsl
cli
mov
lods
inc
jmp
jg
fucomp
jae
cmp
clc
sbb
add
divl
xlat
sbb
daa
and
scas
mov
mov
xor
dec
lcall
rolb
add
incb
push
dec
jl
lds
in
inc
adc
sub
mov
pop
mov
jp
mov
pop
jecxz
mov
mov
add
jecxz
push
stos
fwait
loop
inc
add
cs
addb
adc
jo
aad
jg
push
push
ret
add
adc
sub
xchg
int3
jg
ds
sub
mov
fcmovnb
add
push
and
push
into
jge
sbb
push
and
lods
jp
aas
push
sbb
sub
mov
xor
add
int
mov
fimull
mov
add
adc
mov
test
lahf
popf
es
in
push
cmc
xchg
jp
bound
jmp
add
xchg
mov
adc
enter
adc
dec
filds
daa
jmp
out
dec
fdivrp
pop
inc
sbb
add
push
ret
xor
addr16
in
sub
cmp
idivl
and
lret
mov
xor
add
push
out
jle
fwait
cmc
add
and
fisttpl
mov
shrb
test
lahf
xchg
gs
inc
add
ljmp
add
push
in
testl
and
ret
jmp
xchg
scas
xchg
sbb
fs
add
mov
xchg
xor
push
test
jbe
dec
imul
mov
pop
xor
je
xor
pushf
xchg
jno
cmp
scas
call
add
jne
aad
es
mov
in
mov
pop
inc
add
add
add
fprem1
rcr
sbb
cld
icebp
or
jg
xchg
push
iret
add
mov
xchg
and
fadd
add
mov
mov
push
hlt
dec
js
mov
sbb
ja
out
pushf
scas
inc
and
addb
add
push
inc
cmpsl
mov
xor
xchg
jb
mov
add
je
add
mov
adc
mov
xor
mov
mov
push
push
add
sbb
ja
movb
cli
adc
xchg
aas
je
lods
mov
mov
outsb
hlt
addb
loopne
sahf
sub
arpl
sbb
sahf
cli
fmul
add
and
movl
mov
sub
imul
test
sti
dec
cld
out
cmc
lret
jmp
add
add
enter
leave
clc
int
je
dec
xchg
lcall
pop
inc
clc
fiaddl
call
push
arpl
lea
pop
push
add
test
popf
mov
add
mov
mov
mov
jnp
mov
popf
xor
and
push
jb
lcall
std
scas
insl
inc
add
aas
sub
or
xor
insl
cld
add
mov
jmp
add
adc
pop
inc
in
jb
cld
sti
out
or
pop
ds
jecxz
sbb
or
jg
adc
flds
inc
push
dec
mov
arpl
sub
call
xor
bound
inc
xor
add
rcrb
scas
push
jle
mov
cmp
shl
das
mov
insl
movsl
aad
roll
jb
clc
rolb
sbb
test
adcl
push
ja
rorb
call
in
and
sub
out
jmp
rolb
pop
loope
xor
inc
or
ja
xor
push
cmp
fisttps
shll
lods
mov
jmp
in
or
std
out
stos
push
add
movsb
ficoms
daa
or
aad
jge
in
adc
xchg
jae
test
jmp
mov
loopne
mov
add
or
mov
and
je
xor
dec
mov
push
xchg
in
inc
scas
jne
in
jg
cmp
leave
leave
fstpl
or
mov
sbb
push
shll
and
inc
add
std
out
jp
jae
pop
mov
dec
scas
loopne
add
paddusb
jbe
pop
je
fwait
xor
mov
add
lret
mov
add
mov
fdivs
jecxz
jbe
pop
icebp
shlb
mulb
pop
fistpll
in
sbb
mov
add
push
sbb
out
sub
xor
inc
cli
sti
add
lock
jb
lret
jl
add
push
sub
jecxz
mov
fwait
jmp
inc
add
sbb
push
mov
lds
mov
sbb
and
imul
rcrl
icebp
sub
xor
pop
sbb
add
mov
and
outsl
and
adc
mov
popa
push
in
sbb
sub
or
les
loope
shll
cli
push
mov
lahf
mull
mov
imul
mov
xchg
lods
popa
adc
pop
jne
sahf
sbbl
dec
jno
aaa
decb
jnp
rorl
cmpsb
cmpsl
xor
add
adc
call
pop
mov
sbb
jp
fwait
inc
inc
add
movsb
dec
inc
add
mov
jne
add
add
mov
or
add
adc
jle
outsb
je
mov
addb
pop
addb
add
addb
mov
mov
push
lret
and
cmp
lret
mov
out
xor
imul
add
add
inc
loope
dec
roll
js
jmp
push
push
inc
add
pop
mov
add
js
pusha
add
adc
lods
loopne
push
inc
add
and
fcomps
scas
mov
adc
inc
iret
fistl
mov
stos
jecxz
xchg
inc
add
rorl
das
cmp
out
lret
fcmovnbe
addb
fstpl
dec
adc
inc
add
and
shll
shll
shlb
add
iret
hlt
outsl
lahf
dec
sub
fistpll
and
loope
cmp
mov
aaa
in
push
and
imul
mov
dec
rclb
sub
push
lods
push
add
add
add
fcmovne
add
add
data16
and
ret
cmp
mov
jmp
test
add
mov
sbb
inc
rcll
fidivl
mov
rcrl
push
xchg
in
jne
sub
lahf
out
outsl
pop
pop
es
pop
lret
sahf
mov
mov
ss
xor
add
addb
pop
sub
pop
jns
movsb
and
adc
add
or
adc
pushf
ljmp
adc
enter
data16
and
or
sti
add
xchg
loopne
and
fisubl
das
addb
fdivl
dec
ja
or
bound
inc
add
xor
mov
ds
add
push
pop
in
arpl
add
pop
mov
ss
jb
std
jge
mov
mov
cmc
es
inc
jmp
add
lret
pusha
add
jns
test
out
mov
add
das
imul
jp
pop
push
out
lcall
dec
pop
push
inc
add
movsl
insl
pop
rolb
push
stos
jp
sub
jb
pop
jl
mov
in
jno
sbb
pop
pushf
xchg
in
cmp
push
mov
fisubrl
enter
cli
rcr
jg
in
cs
add
aam
mov
es
cs
xchg
fs
sahf
jl
add
add
add
pop
fistl
cmpsb
cli
repnz
push
movsb
leave
mov
inc
add
popl
mov
add
jge
test
cmpsl
in
add
adc
or
andl
pop
mov
repnz
cmp
add
ja
das
ret
lds
inc
push
sbb
nop
dec
cli
inc
add
loope
imul
pop
cmpsb
xchg
pop
dec
mov
xchg
sub
dec
in
sub
test
sub
mov
lcall
mov
mov
mov
inc
add
sbbl
mov
pop
or
in
scas
mov
push
add
push
add
sbb
pop
adc
fcomps
jnp
xchg
dec
out
adcl
push
pushf
in
fs
stos
or
inc
add
fstpt
clc
adc
aas
stc
sub
mov
imul
loopne
mov
pop
fists
add
xor
push
stos
mov
movsb
dec
mov
and
or
mov
jns
je
ljmp
outsl
mov
jne
push
fmuls
jg
inc
add
pusha
add
pop
push
je
dec
or
add
push
addl
pop
int3
jnp
mov
lcall
xchg
shll
push
mov
mov
add
jmp
xor
jne
xor
cmp
pushf
lods
sub
loop
xor
xor
add
inc
sub
sbb
lock
add
add
mov
popa
add
jecxz
not
out
vshufps
lahf
xor
sub
pop
cmp
es
pushf
add
mov
fs
cwtl
lods
cmpsb
shll
ret
jne
sub
fimull
push
pop
mov
pop
push
fimull
sub
int3
xchg
inc
or
movsb
js
sub
or
or
in
sbb
jl
or
dec
cmpsl
cmp
aam
adc
jb
xchg
or
add
xor
xchg
and
mov
cld
cmp
das
out
mov
inc
add
sub
lock
inc
add
inc
add
inc
add
mov
das
jge
add
rcrl
add
in
sti
and
and
nop
jnp
or
cmp
out
out
rclb
dec
cltd
mov
xor
out
push
lahf
call
test
stos
ret
shrl
dec
adc
movsl
xchg
sbb
mov
pop
or
sbb
dec
roll
out
loope
pop
lods
jle
stos
cwtl
test
pop
enter
lds
test
filds
add
jbe
pop
mov
sub
sahf
mov
sub
mov
dec
xor
fwait
leave
mov
pop
dec
dec
nop
in
in
sbb
addl
lret
in
add
test
add
xor
xchg
sbb
enter
push
mov
push
cmp
mov
outsl
fisttpl
adc
add
mov
rolb
movb
push
ja
add
push
repz
cltd
xchg
lds
inc
cli
cs
add
fimuls
cmp
out
push
sub
pop
add
in
mov
ljmp
jecxz
add
in
lods
dec
mov
bound
ds
pop
sub
es
ss
lods
add
enter
jle
mov
dec
in
shll
adc
mov
in
dec
loop
add
add
fwait
mov
dec
ljmp
test
push
lea
add
addb
jmp
mov
sub
shrb
cmpsb
pop
xlat
mov
and
lmsw
daa
lock
setge
ds
mov
iret
sub
inc
cmpsl
call
lret
cmpsb
dec
jl
popf
cmp
push
or
xchg
push
add
push
imulb
inc
arpl
loope
add
ficoml
xor
std
jne
push
add
and
mov
mov
add
jp
in
push
mov
add
or
stos
insb
rcr
jnp
cltd
mov
xchg
in
mov
add
add
and
test
pop
sbb
mov
sti
in
sbb
arpl
movb
rclb
sub
movsb
comiss
push
jne
aas
fs
add
imul
or
add
add
add
xor
push
fldcw
negl
inc
add
hlt
jne
movl
repnz
repnz
lods
stc
jl
inc
push
push
imul
dec
sldt
push
add
and
shll
mov
les
and
push
cmp
xor
sub
adc
cmp
loopne
lds
jno
ljmp
lahf
xchg
sub
mov
jecxz
aam
push
sub
jno
stos
or
pop
in
clc
aam
add
pop
xor
jmp
jecxz
add
pop
sbb
test
out
es
mov
jmp
push
sub
pop
lret
push
mov
bound
mov
ret
rcr
or
and
mov
xor
lds
jbe
xchg
hlt
mov
xor
movb
int
fnstenv
arpl
fidivrl
lahf
test
test
mov
mov
mov
add
pop
xor
sbb
xorl
push
push
out
leave
jae
in
fsubr
jne
add
js
xlat
xor
adc
add
mov
enter
sbb
mov
mov
push
push
or
movsb
mov
or
push
jae
fidivl
add
sbb
mov
scas
shr
popf
adc
lret
push
mov
fisubrs
out
ljmp
out
or
mov
and
in
mov
or
or
int3
push
insb
sbb
push
bound
or
clc
xchg
push
aaa
cmp
test
pushf
cmp
inc
pop
jae
xor
clc
jge
sbb
push
pop
pop
sbb
and
into
cmp
xchg
outsl
push
add
ss
psubusw
add
jo,pn
lahf
out
cmp
fldt
xor
cs
inc
sub
add
outsl
in
or
dec
mov
jge
xor
inc
add
xchg
jbe
pusha
add
leave
xor
sub
jp
mov
stc
adc
fnsave
arpl
add
sbb
add
addb
sub
lcall
and
push
push
lretw
jns
push
lock
add
cmp
add
cmp
and
inc
add
or
add
cmp
add
loope
cmc
lcall
lcall
mov
push
addr16
cld
dec
pushf
mov
xor
out
fwait
cmp
pop
loop
incb
mov
stc
adc
inc
xchg
das
xor
popa
mov
add
push
fnsave
xchg
lea
push
pop
repnz
int
lds
push
add
addb
push
les
fiadds
add
add
dec
and
dec
mov
add
testb
cmpsl
mov
or
adc
sbb
hlt
aas
inc
add
sbb
push
les
push
stos
lods
inc
add
xlat
pop
iret
jo
dec
cmp
add
jae
xchg
jg
mov
inc
int3
imulb
adc
movsl
jmp
inc
push
push
fidivrl
movsl
ja
aad
pop
and
dec
dec
lret
aas
pop
mov
aas
pusha
add
inc
add
and
cmp
push
js
sbb
jmp
addb
xchg
or
jmp
stc
out
stc
or
push
shlb
les
aas
and
ror
mov
pop
push
and
les
cmp
leave
mov
nop
iret
and
add
add
push
ja
incb
add
in
jne
push
imull
pop
clc
jecxz
inc
add
out
mov
mov
ret
pop
mov
mov
sub
or
in
sub
add
xchg
aaa
lea
dec
xchg
inc
out
mov
es
add
mov
mov
outsb
das
cld
cltd
xor
dec
or
iret
movb
test
dec
jbe
jmp
jecxz
add
xor
dec
pushf
popl
fidivl
fnstcw
pop
lcall
ss
xchg
xchg
sahf
cld
mov
mov
xor
add
cs
repz
rolb
fucomp
add
jl
pop
js
int
stc
xchg
jmp
jmp
lret
mov
popf
inc
mov
stos
rcrl
mov
xchg
xchg
xor
inc
int
mov
icebp
leave
jae
mov
cmpsl
shll
push
mov
js
in
xor
xor
xchg
out
add
dec
mov
xor
add
popa
adc
add
insb
xor
add
jne
addb
add
in
mov
jae
inc
add
out
call
xchg
sbb
add
repnz
jmp
lret
and
jmp
iret
mov
pop
sbb
movb
dec
std
sub
or
inc
add
test
int3
xchg
lods
xchg
dec
and
add
add
inc
inc
popa
sti
cmpsb
cli
scas
push
adc
rorl
rolb
and
jns
test
xchg
xor
call
add
out
cmp
mov
addb
add
push
jl
es
in
ljmp
jne
xchg
daa
mov
lret
mov
add
arpl
xchg
sbb
push
arpl
sub
mov
ljmp
mov
in
lahf
popf
sbb
add
inc
mov
roll
iret
cmp
mov
add
xchg
mov
adc
in
aam
jmp
mov
pop
pop
test
pop
mov
std
dec
cmpl
pop
push
movsb
add
inc
mov
jne
pop
adc
bound
test
in
enter
testb
push
xchg
in
jae
inc
shl
push
dec
mov
inc
add
shll
add
sbb
fcompl
jle
add
mov
add
int
and
sub
mov
add
daa
inc
lcall
mov
insl
scas
push
jl
ljmp
or
sbb
aam
daa
and
jne
push
add
sbb
mov
ffree
fiadds
push
push
bound
jno
sub
daa
pop
xor
cmpsb
fistpll
sub
jl
or
cld
jp
or
add
pushl
push
cwtl
cmp
or
imul
test
jecxz
pop
and
clc
cli
cmp
iret
mov
cmpsl
in
mov
loop
leave
push
mov
popa
inc
add
icebp
mov
dec
fwait
mov
cmp
aaa
nop
in
jns
add
or
add
out
mov
add
inc
rolb
pusha
add
xchg
sub
imul
jae
repnz
cmp
cmp
jl
mov
addb
insb
iret
call
rolb
in
inc
add
movsl
jne
add
mov
ja
ljmp
jmp
adc
sbb
add
lods
and
ds
push
setbe
mov
not
and
mov
add
add
mov
jbe
fisttps
popf
ja
cmpsb
adc
clc
jecxz
cltd
ja
inc
idivb
imul
lret
or
xchg
fsubl
or
jmp
mov
int
ffree
add
sti
es
js
scas
mov
daa
pop
imul
imul
sub
add
or
xor
push
add
jmp
cmp
mov
push
mov
add
icebp
xchg
ljmp
jne
mov
inc
add
movsb
mov
loopne
sahf
int
bound
pop
mov
add
arpl
mov
test
sub
pushf
xchg
push
add
test
sbb
sub
push
sbb
add
ror
inc
add
xor
push
adc
mov
nop
push
adc
enter
push
jo
negl
scas
roll
jnp
add
add
cmpsl
push
add
add
xchg
jmp
mov
test
push
test
rolb
in
and
push
mov
out
test
int3
call
sbb
add
inc
movsl
bound
mov
jl
cmp
jl
add
dec
fisttpll
or
mov
add
sbb
xor
lret
pop
push
popa
mov
push
stc
sbb
leave
push
add
shr
fdivl
add
repnz
pop
adc
jns
add
mov
lds
adc
jle
or
in
mov
pop
ss
jnp
mov
sub
mov
jbe
roll
jae
adc
mov
sbb
push
leave
outsb
mov
adc
bound
push
mov
lahf
inc
add
insb
adc
and
cmp
or
jnp
pop
and
mov
sub
int
or
mov
or
sbb
pop
xor
insl
and
push
out
push
sbb
in
test
jmp
push
cmpsb
push
ja
sub
mov
add
add
les
ret
rsqrtps
ror
sub
mov
addr16
jle
add
stos
fs
pop
test
mov
cltd
aam
clc
pop
cmp
shr
pop
push
mov
inc
add
dec
js
pop
or
sti
fnstcw
cmpsb
int
scas
sbb
mov
cmp
xor
cmp
xor
lds
cli
movsl
imul
cmp
jae
mov
sbb
into
loope
or
js
or
in
shlb
mov
rorl
xor
xchg
test
imul
adc
lea
fbld
fisubrl
sub
cmp
sub
movb
sbb
clc
fldcw
xor
insb
adc
adc
dec
mov
sarb
ss
loop
fwait
lods
movsb
icebp
and
imul
xchg
fwait
in
insb
insb
add
mov
dec
inc
push
push
test
jb
inc
add
or
jle
and
scas
inc
int
es
pop
hlt
stos
cmpsb
sbb
fnstsw
aaa
dec
xor
lret
or
lock
jmp
cmp
jl
mov
in
push
xchg
leave
adc
sub
cli
adc
or
or
mov
add
add
add
rorb
insb
mov
scas
mov
movb
das
mov
fstl
loop
mull
cli
shrb
adc
xor
add
icebp
cmp
xlat
push
pushf
xchg
pushf
jbe
lcall
cmp
lahf
aaa
add
addb
repz
inc
std
add
push
cmp
cmp
add
ss
insl
push
movsl
imul
fnsave
fmuls
testb
shrl
lds
push
into
and
movb
sbb
add
xor
mov
or
cmp
popa
in
cmp
adc
push
add
mov
lods
fs
xchg
bound
mov
clc
rorl
dec
sbb
insb
dec
ret
pop
xchg
cmp
sub
pop
pop
fsubl
adc
pushf
pusha
add
das
test
and
fcoms
cmpsl
inc
in
mov
fldcw
push
jae
jnp
addr16
iret
je
add
add
jo
aas
imul
fldt
pop
in
addr16
les
sti
pusha
add
push
mov
adc
jge
xor
xchg
insl
lret
test
add
test
mov
scas
push
outsl
cmp
xchg
push
mov
clc
push
jne
xchg
mov
sti
jmp
or
bound
aam
jnp
lahf
scas
dec
int3
stos
cs
outsl
mov
add
shrb
faddp
add
test
jbe
arpl
lret
fstpt
lcall
jmp
inc
add
insb
shr
add
add
lock
xchg
inc
jg
add
cmp
mov
out
or
sti
leave
out
das
jl
mov
jle
mov
and
xor
jmp
add
push
lods
mov
or
incl
ficompl
lahf
mov
in
jp
adc
pop
popa
arpl
mov
shll
shll
add
fistl
jnp
addl
fisubrl
std
aaa
jp
dec
mov
push
loop
das
movsb
dec
lock
ljmp
xchg
lret
aam
lock
adc
pop
aas
dec
mov
add
dec
jp
lock
insb
xor
int3
mov
imul
mull
cmp
imul
inc
add
loopne
add
dec
addr16
push
or
icebp
cmp
aad
ja
add
pop
jl
movsb
testl
jecxz
jg
adc
inc
push
jne
cli
movsw
add
mov
stos
sub
test
push
pushf
jl
ss
and
sub
movsl
inc
add
push
push
repnz
jmp
xchg
jle
iret
mov
adc
pushf
leave
cld
adc
xchg
jno
push
incb
ret
iret
cmp
push
frstor
push
add
jp
sub
test
addb
and
gs
outsl
daa
and
pop
mov
sub
push
in
adc
push
mov
add
sbb
push
xchg
inc
add
pop
jmp
test
add
subl
jle
out
jno
punpckldq
stos
out
test
xchg
push
xor
and
dec
mov
add
pop
stos
sub
cmp
pop
pop
sbb
mov
loop
dec
lea
rorb
mov
fwait
mov
loope
mov
push
ret
lods
xor
fnstenv
in
dec
and
sbb
sub
ret
push
lods
lock
sbb
dec
outsl
add
outsl
or
aad
imul
add
push
hlt
jg
push
cmc
pop
mov
add
outsl
lret
sbb
loop
roll
inc
push
pop
push
ss
jae
or
pop
jns
popa
imul
push
mov
outsl
mov
dec
adc
mov
adc
scas
in
lcall
mov
mov
out
fld
add
or
mov
cmp
add
add
add
xchg
rolb
or
mov
add
jbe
inc
adc
push
repnz
std
xor
int
push
jnp
add
sbb
xchg
jl
jo
cld
jmp
add
into
inc
add
lock
sub
int3
pushf
sar
jnp
lods
fcmovne
out
mov
add
outsl
jne
scas
stos
in
xor
cli
mov
xchg
cli
xchg
push
popa
mov
loop
pop
xor
add
jg
arpl
test
mov
sbb
xlat
jnp
dec
jne
add
inc
push
add
mov
mov
into
push
jmp
fldt
in
aaa
in
cmp
mov
jns
pop
sbb
push
pushf
mov
jne
dec
inc
jnp
out
push
pop
jo
fs
dec
fisubrs
lea
addb
pusha
add
test
ret
mov
xchg
add
add
dec
repz
mov
imul
adc
cmpsb
mov
movb
stos
movsb
popa
jae
cmpsb
das
add
bound
sbb
add
insl
fcmovnbe
pop
push
outsl
mov
into
cld
in
mov
stos
add
aad
jns
inc
add
cmp
aas
sbbl
dec
dec
jmp
loopne
mov
inc
add
xor
test
jmp
or
inc
add
and
lock
lret
loopne
rolb
dec
jo
lcall
add
cs
frstor
add
xor
dec
mov
lahf
push
mov
jl
nop
addb
lods
lret
push
icebp
mov
fstps
loop
add
sbb
add
xchg
imul
cs
sbb
int
add
pop
popf
div
divb
mov
dec
xor
cmp
xchg
xchg
or
out
clc
enter
movsb
push
sti
mov
adc
lods
pop
sub
pop
insb
and
clc
popa
jmp
pusha
add
xor
pushf
jg
or
and
repz
or
fstpl
jge
dec
imul
xchg
xor
add
cmp
adc
mov
sbb
push
out
mov
addb
mov
pop
mulb
dec
push
mov
int3
add
mov
add
cwtl
out
mov
inc
xchg
xor
outsb
or
push
ficompl
add
shrl
pop
ret
xor
rcrb
pushf
lods
cmc
inc
add
daa
ret
sbb
and
cltd
fs
add
jne
inc
inc
add
aam
lret
xor
mov
inc
add
cmc
xchg
xchg
movsb
sub
outsb
or
repz
mov
jge
fdivrp
hlt
add
and
arpl
add
add
push
cltd
outsb
cmpsb
or
out
dec
add
mov
xor
mov
imull
xchg
cwtl
xchg
lahf
sub
adc
sub
and
and
in
test
scas
out
div
xchg
pop
ja
pusha
add
sahf
jg
and
dec
arpl
rorl
std
jae
test
enter
add
xor
leave
and
sub
cmp
push
cmp
pusha
add
jbe
add
lods
shll
jo
popf
jo
sub
imul
sbb
das
push
ss
ja
add
fcomi
mov
lret
xchg
lcall
incl
sti
mov
fs
bound
dec
aam
mov
sub
add
popf
pop
aas
pop
repnz
sub
jbe
daa
nop
jp
cwtl
int
dec
xchg
mov
sub
push
add
pop
fisubl
push
push
dec
sub
adc
cltd
xchg
scas
and
cmp
cmpsl
ds
mov
push
lcall
xchg
sbb
in
fld
stos
mov
in
add
lret
cwtl
cld
cmp
mov
test
lds
idiv
inc
loopne
dec
aad
mov
cmp
mul
ds
repz
repz
movsl
and
mov
lcall
in
loopne
fs
movsl
sbb
inc
in
sbb
jecxz
add
sub
sub
test
jae
test
lret
pusha
add
ss
add
and
mov
inc
cmp
lds
xchg
movb
jns
add
icebp
imul
addr16
insb
scas
test
scas
ret
in
dec
push
mov
jg
jp
loope
dec
jp
addr16
add
mov
es
add
sub
add
add
add
xchg
sti
jo
add
jbe
dec
test
push
cmp
jo
int3
popf
aad
add
pusha
add
mov
loope
xchg
mov
addr16
cmp
mov
add
call
push
test
sub
push
test
shlb
pop
pop
fucomip
stos
push
ljmp
shll
mov
push
inc
xchg
out
mov
adc
add
add
ja
pop
dec
pop
lahf
lahf
popf
xor
notb
add
lea
cmp
mov
add
mov
inc
add
add
mov
or
icebp
sub
jne
ja
add
mov
add
frstor
sti
call
dec
mov
xchg
lret
or
ret
adc
xorl
popl
int
mov
cld
call
add
lea
mov
inc
test
int
lahf
xchg
addb
mov
jl
icebp
mov
add
jo
test
addr16
call
xor
pop
mov
mov
lea
insb
popf
sub
vpandn
push
jl
sbb
rorb
or
sbb
ja
fldcw
repnz
or
add
mov
adc
push
pop
xchg
push
sbb
rolb
nop
mov
movsl
test
es
fmul
test
gs
js
lods
leave
les
xor
xor
icebp
xchg
je
adc
adc
push
hlt
clc
cmp
ss
mov
ret
fbld
xchg
iret
inc
add
in
or
xchg
sub
push
add
add
mov
shlb
jnp
mov
jbe
imul
iret
sub
add
add
xchg
xor
pop
fnsave
loope
sbb
lods
and
mov
fnstenv
sub
cltd
outsb
fistpll
std
adc
ja
hlt
add
fisubl
cmpsb
into
repz
fiadds
pop
push
lods
push
add
jo
int3
xor
imul
mov
stos
mov
push
jg
add
sbb
jns
adc
aaa
mov
stc
add
cltd
lods
fcomps
dec
out
fwait
andl
sub
add
jg
inc
js
adc
sbb
add
into
dec
out
jp
mov
enter
push
fisttpl
push
pop
mov
add
fldcw
inc
add
cli
pop
incl
add
in
mov
ja
xchg
mov
push
imul
lds
push
fstps
adc
cmp
leave
cmp
jno
cmp
jnp
out
repz
add
int3
xchg
jecxz
push
mov
add
cmp
cli
insb
mov
push
popf
repz
add
jno
jne
mov
jae
add
leave
lods
fnstcw
add
js
pushf
mov
addb
add
cmp
imul
fidivs
lahf
pop
repnz
jnp
xchg
mov
adc
lret
fimuls
add
jb
jnp
fwait
add
push
add
add
into
mov
popf
aaa
out
jbe
mov
in
decb
test
add
add
and
lcall
add
and
cmp
mov
push
cmp
xor
cli
sbb
sahf
mov
add
mov
sub
jmp
adc
enter
cmp
dec
cli
mov
inc
add
pop
rorb
into
pop
movsl
pop
sub
sub
add
dec
sub
sbb
fsubl
add
jne
sbb
cmpsl
xchg
movl
mov
lds
shll
xor
cmp
dec
loopne
mov
and
sub
pop
les
shlb
in
mov
push
mov
es
adc
shll
pop
jno
xchg
xor
xchg
aam
ljmp
jbe
repz
mov
cwtl
aad
jbe
sbb
jno
inc
lock
adc
mov
adc
adc
outsb
dec
incl
hlt
sub
push
dec
mov
pop
mov
out
add
lods
nop
in
xchg
out
jnp
loop
mov
sbb
call
fdivl
adc
frstor
sbbl
xchg
aad
mov
or
mov
movb
add
test
add
mov
mov
xchg
rol
repnz
mov
and
lret
pop
je
dec
addb
shl
loope
add
pop
cmc
sbb
add
test
or
inc
add
or
nop
pop
std
jnp
lock
mov
pop
rolb
popl
add
or
les
aad
push
add
sarb
stos
xchg
xor
push
int3
mov
push
dec
sbbl
mov
mov
leave
div
inc
add
mov
add
add
adc
pop
sub
jbe
lods
sbb
add
loopne
mov
jle
add
add
mov
pop
rcrl
mov
push
add
mov
js
jp
pop
into
xor
aas
out
dec
jbe
arpl
pushf
dec
dec
xchg
movsb
loop
ret
xchg
pop
in
test
fisttpl
dec
mov
out
add
jns
inc
add
jg
dec
xchg
cltd
jne
xchg
dec
push
xor
test
xor
into
std
scas
xor
test
xchg
insl
xchg
xchg
sbb
push
aam
add
pop
inc
ljmp
stc
inc
xchg
or
mov
loope
push
push
mov
xchg
pushf
or
mov
loop
cs
icebp
sysenter
addl
ljmp
and
dec
cmpsl
cmpsb
push
inc
push
int3
cwtl
cwtl
add
cmp
cmp
adc
push
stos
cmp
cld
cltd
aaa
test
mov
inc
or
and
repz
jp
cs
pop
ljmp
and
dec
pop
leave
xchg
inc
xchg
rolb
or
and
scas
mov
sbb
mov
cmp
push
pop
push
shll
out
lods
inc
add
orl
push
adc
mov
jl
decb
es
add
add
push
mov
add
cmc
cmpsb
xchg
cltd
stos
jl
cmc
test
adc
test
xchg
outsb
test
test
insb
inc
add
add
sti
mov
xchg
roll
into
lea
push
inc
xor
add
lods
sub
mov
jae
sarl
fildl
add
add
cmpsl
jns
enter
js
mov
jle
pop
add
in
jo
add
nop
or
xlat
scas
push
add
adc
jbe
pop
mov
int3
outsw
and
test
add
pop
sbb
sub
fisttps
push
sbb
aad
movsb
inc
add
shlb
dec
out
stc
jle
push
dec
hlt
push
dec
push
sub
les
jae
cs
cli
loope
jo
add
das
xlat
fildll
shll
add
lret
popl
inc
inc
add
bound
rorl
push
cmp
jb
mov
ja
roll
out
inc
add
add
cmp
add
lret
add
sbb
fs
mov
jns
scas
add
in
mov
rcrl
dec
aad
jle
mov
pop
jecxz
sub
imul
call
sub
mov
xchg
pop
lcall
add
test
sbb
xchg
out
adc
ss
xchg
out
or
cmp
sahf
jmp
fwait
mov
add
or
sbb
jb
clc
enter
add
cwtl
in
arpl
std
shrl
pop
fmuls
movsl
enter
add
xchg
xlat
call
dec
sub
add
push
scas
pop
aam
pop
add
popa
xchg
adc
cli
push
gs
xor
ret
xchg
jo
mov
pop
insb
hlt
fstps
add
call
pop
add
js
in
bound
push
xchg
int
xor
xchg
iret
ljmp
mov
sti
mov
add
push
cmpsl
inc
add
inc
add
mov
cmp
or
cmp
mov
mov
movb
mov
push
mov
push
xlat
jne
std
adc
sub
mov
adc
add
add
sbb
jecxz
pop
xor
xor
push
int3
pop
popaw
add
test
mov
inc
add
insb
enter
jns
add
jns
iret
movsb
xchg
add
cltd
pop
mov
fs
add
add
clc
mov
aas
or
out
fwait
push
cli
shll
pop
mov
hlt
aam
mov
out
adc
cltd
push
fistps
lcall
lret
adc
sbb
add
mov
and
cmp
xor
sbb
xlat
xchg
xor
aam
dec
mov
sub
or
dec
ret
cmpsb
les
or
rorl
insl
push
div
mov
les
bound
repz
mov
add
sbb
add
add
nop
xlat
add
mov
jo
test
add
push
push
jno
add
add
xor
into
lret
popl
mov
add
in
cmp
sub
ja
jge
adc
bound
imul
push
shrb
sub
insl
add
leave
xchg
push
lcall
out
mov
jo
in
mov
pushf
pop
add
mov
add
stos
das
cwtl
test
test
mov
lret
pop
scas
or
div
dec
mov
cmp
add
jle
add
ds
jmp
aam
push
add
dec
mov
adc
mov
fstps
dec
push
or
lock
pop
aaa
or
or
jge
push
es
or
xor
inc
add
or
sbb
leave
jne
mov
mov
outsb
mov
xchg
shll
inc
mov
cmpsl
loop
push
jae
dec
or
push
scas
rcr
std
hlt
nop
jb
add
push
push
cmp
shrb
jle
jb
dec
or
pop
xchg
push
lret
mov
imul
fcoml
mov
add
jno
add
mov
loop
jge
or
sub
sbb
shr
movsl
xchg
movsl
inc
add
fcomp
lcall
mov
sbb
inc
add
mov
mov
fs
mov
ss
cmp
add
or
rcll
push
pop
in
cmc
inc
add
adc
push
loopne
ficompl
push
mov
aam
dec
push
loop
xchg
movsb
daa
mov
jl
add
push
int3
es
jle
add
pop
lea
add
dec
in
shl
loop
notb
out
mov
sbb
and
ja
inc
or
or
mov
xchg
cwtl
dec
ja
pop
push
lret
in
addb
test
lret
mov
repz
xor
mov
or
xor
cwtl
or
jmp
xchg
inc
mov
sbb
sbb
jecxz
imul
mov
cmp
rolb
sbb
repz
cmc
sub
mov
scas
dec
mov
cltd
pop
lds
dec
lds
inc
imul
sub
dec
push
push
insb
push
or
pop
dec
inc
add
and
ss
and
add
aad
mov
add
adc
fwait
mov
ljmp
ds
mov
das
mov
inc
jne
xor
rorl
dec
push
pop
incl
stos
mov
jge
sbb
addb
adc
cmp
jno
push
adc
in
frstor
mov
cwtl
sar
pop
je
test
mov
pop
or
sbb
jmp
push
dec
repnz
stos
imul
pushl
pop
jbe
mov
sub
lret
jmp
push
stc
dec
stc
addl
jg
mov
add
fidivrl
dec
dec
nop
jg
push
ljmp
jnp
and
lahf
pushf
push
movsl
pop
xor
pop
aas
inc
add
rcl
inc
dec
push
repnz
mov
add
div
loopne
mov
inc
rolb
sub
xchg
mov
rcr
gs
out
andl
mov
outsl
xchg
out
sarl
mov
push
xchg
jo
mov
mov
mov
out
fs
loope
dec
jp
inc
pop
sub
in
shll
mov
cld
push
imul
jmp
movhps
add
jl
xor
xrelease
leave
dec
add
mov
xchg
sbb
popf
cs
jo
or
add
dec
hlt
iret
lods
sbb
lods
adc
xor
mov
inc
sub
sbb
push
inc
add
movb
test
adc
add
aas
push
and
cwtl
jns
jbe
sbb
dec
inc
add
ss
jge
addb
sub
push
sub
mov
jl
cmpsb
sbb
pop
or
into
xchg
sub
dec
repnz
push
and
cmp
sbb
pop
cs
icebp
push
add
ss
add
add
addb
add
and
add
test
push
mov
add
rorl
mov
mov
add
xor
jnp
add
or
fs
js
ret
and
lret
clc
dec
rolb
dec
loop
adc
addr16
mov
mov
pop
add
cmp
mov
add
data16
pop
fstpl
rcr
adc
mov
add
add
lret
nop
call
pop
cmp
test
push
or
push
xor
movsb
inc
es
insb
sub
xor
faddl
add
in
xchg
stos
mov
sub
arpl
mov
jae
inc
jbe
add
xor
sarl
hlt
imul
inc
add
test
lods
cmc
pop
imul
outsl
incl
xorl
lcall
dec
and
sub
add
mov
add
add
inc
add
dec
cmp
gs
movsl
or
dec
push
loop
xchg
cld
ja
lcall
add
sub
fwait
push
push
jne
xchg
pop
int
xor
add
pop
xor
mov
daa
imul
daa
add
lods
push
mov
loope
lea
add
sbb
and
mov
add
pop
adc
jg
pop
mov
jl
xor
dec
xor
inc
push
or
sbb
fisubrs
inc
add
out
nop
sub
test
jmp
shll
hlt
pop
push
pop
ret
xor
pop
add
std
xchg
and
sub
out
mull
cmc
mov
xchg
addb
add
add
js
faddl
les
push
add
inc
add
frstor
test
bound
aad
xlat
dec
pop
pop
addb
jl
in
mov
mov
out
pop
mov
inc
cmp
dec
mov
loopne
popf
inc
add
mov
enter
mov
je
ljmp
push
or
or
xchg
in
xor
aam
mov
cmp
pop
push
lock
test
sahf
movb
data16
or
and
lret
incl
add
jmp
scas
sbb
movsl
rclb
push
les
loopne
add
test
fs
xlat
add
or
jecxz
push
add
add
cld
clc
push
push
dec
xchg
insb
lods
add
lret
mulb
add
stos
mov
mov
loop
pop
mov
movb
xchg
pop
xchg
and
nop
push
sti
cmp
int
xor
dec
pop
ljmp
dec
push
jl
mov
add
sub
cs
pop
lret
jbe
es
dec
clc
cmp
dec
push
push
cli
imul
mov
mov
xchg
xchg
xor
add
dec
mov
cwtl
out
sub
call
fimuls
cmpsb
jle
push
stos
add
ljmp
sahf
cmp
or
out
xchg
xchg
add
and
test
dec
xlat
pop
scas
pop
sub
add
loope
std
mov
add
mov
int
lds
out
jnp
xchg
jge
sahf
fwait
cmp
mov
movsb
dec
mov
jg
jb
movsl
or
xchg
xchg
je
lods
cld
xchg
sti
jo
dec
sbb
jecxz
bound
loop
in
insl
cli
xchg
sbb
jecxz
int
push
mulb
shr
out
push
jecxz
cmp
add
cmp
push
add
sub
ds
sbb
dec
lcall
xchg
test
adc
add
mov
add
pushf
cltd
mov
pop
mov
aas
lock
sub
cmp
rolb
mov
cltd
inc
cmpsl
cli
cltd
popf
fistps
js
inc
add
rcrb
sub
shl
inc
add
push
push
add
add
mov
gs
add
jge
add
cmp
incl
add
lds
in
inc
mov
jb
cwtl
mov
xchg
xchg
fsubr
enter
mov
scas
sub
ja
addb
add
test
and
mov
daa
pop
cmp
and
inc
add
movsl
loopne
sub
arpl
adc
movsl
out
dec
dec
test
inc
add
sub
imul
add
mov
lret
mov
and
jp
out
add
xor
and
insl
xlat
xchg
push
inc
add
inc
xchg
push
sbb
call
add
push
aam
and
jb
dec
mov
in
incb
mov
mov
sbb
ja
addr16
jne
aas
lds
shr
stos
pushf
ret
pop
jo
filds
cmpsb
mov
xor
mov
int
pop
test
test
add
cwtl
inc
push
cld
inc
add
stos
daa
fmull
shlb
mov
pop
push
ds
mov
adc
dec
neg
ficoml
xchg
mov
ds
adc
ds
imul
daa
jl
jae
cli
push
mov
add
jb
push
mov
insb
loopne
aam
ss
out
jne
or
push
sub
jp
and
hlt
lret
cmp
sub
pushf
xlat
daa
lahf
jecxz
in
out
cmpsb
mov
and
push
jmp
mull
sub
lret
mov
popf
cs
add
push
xchg
mov
lret
push
jp
lds
mov
mov
jno
pusha
add
inc
add
cmp
in
std
jl
jle
push
sbb
cs
mov
cmp
sti
add
jmp
jecxz
mov
cmp
int3
test
or
add
pop
insb
lcall
out
cs
mov
pop
icebp
dec
sbbl
outsb
jne
jbe
lds
jb
cmp
sahf
jge
push
xor
jle
outsb
into
cld
les
mov
or
cmp
add
cmp
dec
xor
cmp
sbb
lock
pop
mov
and
sub
add
dec
int
fwait
out
test
add
jmp
add
out
push
lcall
lcall
xor
and
or
add
addb
add
fidivl
jnp
xlat
dec
lock
in
push
mov
add
test
adc
mov
inc
add
jp
add
pop
pusha
add
mov
push
xchg
mov
sub
ret
ret
testl
aad
and
mov
stc
or
mov
mov
pusha
add
imul
ss
add
mov
lock
call
cltd
or
loopne
add
ss
movaps
add
sbbl
cmpsb
adc
nop
dec
jl
ss
sti
mov
push
sbb
add
cmc
add
adc
add
push
xchg
stos
test
push
mov
loopne
adc
jo
jge
call
jb
test
sbb
add
in
mov
out
mov
in
sti
mov
lods
ficoms
jp
addb
add
jge
cmpsb
loop
add
xchg
aam
and
jecxz
fs
add
bound
imul
in
std
mov
int3
jmp
adc
xlat
call
ret
cwtl
outsl
sahf
ljmp
sbb
mov
faddl
popf
and
arpl
rcrl
push
inc
mov
and
pop
pop
mov
lret
jnp
pop
ja
jle
jb
adc
jno
sarl
sbb
icebp
in
inc
or
mov
push
mov
xchg
add
sbb
shll
jae
dec
pop
ficoms
cwtl
fadds
sti
cmc
or
pop
lods
jo
jge
adc
push
test
pop
mov
dec
cltd
out
push
call
scas
je
out
xor
mov
fisttpll
aas
or
xchg
cmp
xor
out
sarb
cmp
adc
mov
add
add
int3
and
arpl
jo
out
pop
inc
add
mov
lret
or
nop
dec
jb
not
lock
test
into
cwtl
or
jo
mov
jnp
lahf
and
jbe
xlat
testl
dec
push
mov
daa
ret
mov
sub
mov
xchg
pusha
add
fidivrs
cmp
xchg
mov
cmp
and
jl
repz
jge
jo
cmp
xchg
aaa
fcom
jns
and
xchg
push
push
jge
add
out
xor
std
in
out
arpl
shll
pop
into
xor
mov
dec
les
minps
shll
and
and
ja
add
or
pop
ret
xorl
fs
lods
push
in
lods
jmp
inc
add
aaa
fdivl
add
add
lcall
xor
dec
lahf
fwait
dec
dec
imul
push
add
cmp
das
insl
fistl
xchg
fwait
daa
jae
adc
roll
push
mov
jg
pop
pop
pusha
add
push
hlt
imul
ds
pop
int
mov
stos
js
sub
add
js
jmp
cs
lret
jae
aaa
out
xchg
out
xor
out
test
add
mov
cmp
jl
pop
scas
xorl
pop
dec
les
xchg
ret
and
xlat
std
cld
cmp
push
add
aad
add
pop
jge
add
sub
dec
xchg
fstps
jno
mov
dec
addb
loopne
repnz
lods
add
and
sub
inc
aas
add
mov
cmpsb
mov
test
mov
pop
push
add
sbb
add
jg
popf
inc
mov
add
sbb
sbb
cmp
fyl2x
mov
test
scas
mov
push
xor
push
cmp
add
jp
jb
or
and
jge
adc
mov
out
pop
pop
imul
mov
add
push
xchg
out
cmp
push
mov
loop
xor
ficompl
mov
das
sub
add
cs
adc
lahf
in
pusha
add
aaa
test
lds
out
out
sbb
dec
iret
mov
dec
out
mov
clc
mov
xchg
push
jmp
loope
cmp
push
add
fs
insl
ds
xor
jge
mov
fdivrl
jo
cmp
push
cli
xor
add
shll
add
add
pop
jg
fsubs
jno
jne
jp
rcl
cmp
mov
and
iret
sub
addb
sbb
je
mov
int
add
push
jae
and
pusha
add
outsb
cmp
insb
mov
stc
jb
dec
fadds
loop
mov
xchg
ret
add
adc
add
add
add
add
out
add
cmpl
nop
jmp
xlat
add
xchg
add
mov
stc
jb
add
add
mov
xchg
ret
add
mov
lea
add
sahf
add
add
stc
jb
xor
test
add
hlt
push
xchg
push
rclb
lods
add
add
and
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
lret
lock
add
mov
xchg
ret
add
add
xchg
daa
push
cwtl
pusha
stc
jb
add
add
xchg
add
push
mov
xchg
ret
add
xchg
sahf
bound
xor
inc
stc
jb
pop
add
fimull
ret
fcmovu
jbe
pop
ja
ja
dec
faddl
fiaddl
jb
adc
les
add
add
add
rolb
adc
dec
add
imul
add
cmpsl
pop
add
add
xchg
in
je
stc
jb
add
adc
stc
jb
dec
add
add
sahf
rcrb
adc
jb
add
dec
add
add
add
push
mov
xchg
ret
adc
rorb
sbb
push
mov
xchg
ret
xor
cmovg
mov
stc
jb
cmp
test
cmpw
nop
jmp
add
cmpsl
add
add
lret
mov
stc
jb
fsub
cld
incb
xchg
dec
ret
stc
jb
jns
add
inc
add
add
imul
add
mov
xchg
ret
add
add
push
mov
xchg
ret
add
adc
jb
add
add
pop
addb
jbe
add
outsl
lea
stc
jb
pop
cmpsl
in
add
push
add
add
add
add
add
add
or
stc
jb
add
stos
push
nop
jmp
pop
pop
push
lock
add
push
je
rcrb
pop
stc
jb
add
pop
fcomps
stc
jb
cld
add
add
dec
add
jb
pop
dec
mov
add
mov
jb
xlat
jnp
jnp
inc
es
loope
stos
push
mov
xchg
ret
inc
in
fadds
push
test
xchg
and
add
xchg
add
pusha
stc
jb
add
rcrb
in
jnp
jb
sahf
add
add
ljmp
inc
add
test
xor
add
nop
jmp
in
test
pop
add
lods
xor
add
test
jmp
add
fiaddl
add
jb
jnp
add
add
xor
stc
jb
add
mov
fiaddl
or
mov
xchg
ret
fcoms
sub
test
jb
add
add
pop
add
stc
jb
imul
jae
stc
jb
add
add
ret
push
mov
xchg
ret
movsb
ja
pop
add
push
push
mov
xchg
ret
fstpt
add
insl
mov
stc
jb
dec
jnp
sahf
scas
ror
push
mov
xchg
ret
add
add
mov
stc
jb
ja
add
xchg
data16
popa
add
jb
test
add
lods
mov
stc
jb
dec
shrb
add
stc
jb
add
add
add
add
add
rolb
add
decl
push
mov
xchg
ret
or
dec
add
jb
add
xor
in
stc
jb
jnp
adc
add
mov
add
fmull
aam
add
jnp
add
pop
stc
jb
xor
ja
dec
add
outsb
pop
push
mov
xchg
ret
add
pop
cld
push
testb
jp
jl
add
stc
jb
dec
mov
out
out
clc
stc
jb
fildl
add
mov
stc
jb
add
test
push
mov
xchg
ret
and
dec
cmp
jne
nop
jmp
add
add
add
cli
mov
stc
jb
movsb
cmpsl
decb
or
add
jge
lock
add
sub
pop
call
pushl
xchg
add
shr
stc
jb
jnp
mov
cld
imul
stc
jb
add
bswap
or
addb
add
sbb
jb
add
add
mov
stc
jb
add
add
test
insb
add
nop
jmp
add
add
lret
pop
stc
jb
gs
mov
xor
enter
jb
dec
pop
add
xlat
rorb
les
stc
jb
fcmovne
ja
imul
inc
or
jb
rolb
add
sarb
adc
add
add
add
adcl
stc
jb
ss
add
add
call
stc
jb
fiaddl
add
cmpsb
xor
dec
loop
add
mov
add
das
or
add
jb
dec
in
test
jbe
push
stc
jb
add
dec
push
push
add
cmpsl
mov
testl
xlat
lock
add
pop
movzwl
stc
jb
dec
add
add
mov
stc
jb
add
jnp
jg
test
add
orb
incl
add
xor
stc
jb
test
add
lods
paddb
notl
push
jne
stc
jb
xor
aaa
imull
jmp
out
add
sahf
cmp
or
add
jb
xchg
push
nop
jmp
add
add
add
movzwl
stc
jb
add
es
push
stc
jb
add
add
sub
jmp
ja
add
add
lock
nop
jmp
add
in
cmp
pop
sub
dec
add
mov
xchg
ret
add
popf
pop
stc
jb
test
add
fmuls
add
and
call
stc
jb
add
add
cmp
jb
add
lea
nop
jmp
gs
rol
ja
mov
stc
jb
fidivrl
sbb
add
jb
add
inc
popa
nop
icebp
push
push
sub
cli
stc
jb
jnp
xchg
dec
cmp
jb
add
add
rclb
addr16
add
add
mov
mov
nop
jmp
push
push
add
mov
stc
jb
pop
add
push
je
pop
push
mov
xchg
ret
mov
pusha
add
push
stc
jb
add
add
verr
inc
pop
add
stc
jb
adc
jge
add
ljmp
stc
jb
dec
add
add
int
inc
add
sarb
mov
xchg
ret
add
mov
mov
jae
inc
add
test
push
mov
xchg
ret
test
add
sbbb
incl
jge
add
add
ja
xor
stc
jb
lock
movsb
push
out
add
jmp
imul
lods
adc
add
mov
stc
jb
add
imul
shlb
inc
int3
push
mov
mov
add
add
add
pop
cmp
cmp
cmp
jb
add
add
add
mov
nop
jmp
fsub
dec
movups
adc
cmp
jmp
sar
add
cmp
gs
add
sub
nop
jmp
lock
cmp
lds
mov
stc
jb
add
jns
add
push
push
mov
xchg
ret
lods
ss
add
es
stc
jb
inc
insl
cmpl
nop
jmp
add
test
stc
jb
cld
pop
add
imul
int
mov
push
stc
jb
mov
xor
inc
add
fisttpl
addb
add
add
add
or
dec
cmp
jb
gs
jbe
adc
or
add
jb
dec
add
add
nop
jmp
add
and
or
jb
stc
jb
xor
mov
stc
jb
sarb
dec
add
je
stc
jb
jge
add
add
stc
jb
add
shrb
mov
xchg
ret
cld
add
add
mov
push
mov
xchg
ret
aas
add
cld
add
ret
add
jb
shlb
cmp
andb
fistpll
jns
les
lods
stc
jb
add
add
add
in
jge
stc
jb
cld
fisttpl
filds
jnp
add
stc
jb
add
lock
push
add
add
jb
dec
add
dec
sbb
nop
jmp
or
int
mov
stc
jb
sahf
add
push
push
add
add
out
add
jbe
mov
stc
jb
add
pop
add
stc
jb
ja
out
add
call
stc
jb
push
adc
add
insb
add
add
add
add
jbe
ja
mov
push
mov
xchg
ret
add
lods
nop
dec
mov
nop
jmp
in
add
add
add
adc
mov
xchg
ret
add
or
xor
add
stc
jb
fdivrl
sub
push
mov
xchg
ret
add
out
add
push
mov
xchg
ret
add
mov
add
stc
jb
out
add
movsb
test
add
sbb
inc
ret
add
cmp
cld
or
cli
lcall
add
push
mov
xchg
ret
push
in
cmpsb
repnz
xor
stc
jb
add
out
xchg
cmpsb
stos
add
stc
jb
add
add
xchg
in
xor
stc
jb
xlat
add
jg
stc
jb
cld
pop
sahf
faddl
add
mov
push
mov
xchg
ret
dec
gs
mov
stc
jb
dec
add
shrb
jmp
sldt
add
xchg
cmp
div
nop
jmp
dec
inc
nop
jmp
add
add
ja
dec
fiaddl
push
scas
mov
stc
jb
movsb
xchg
dec
loop
add
add
stc
jb
add
add
lock
insb
inc
insb
insb
stc
jb
test
fidivrl
pop
push
mov
xchg
ret
add
add
pinsrw
add
stc
jb
sar
ja
invd
jne
nop
jmp
pop
les
xlat
or
and
add
incb
add
push
cli
push
push
mov
xchg
ret
fsubl
add
mov
jb
add
dec
add
dec
outsl
popa
fs
jb
add
add
inc
and
insb
insb
nop
jmp
pop
add
lldt
ds
nop
jmp
shrb
movsb
fidivl
movl
add
add
test
incl
popf
stc
jb
add
adc
incl
pop
lret
add
add
add
add
jb
pop
add
add
sub
sti
stc
jb
add
lock
movsb
arpl
dec
adc
dec
cli
inc
add
in
mov
jae
add
dec
or
fsubrs
imul
stc
jb
dec
add
add
dec
xchg
and
mov
push
mov
xchg
ret
add
sahf
movq
sar
jb
add
cld
add
add
add
jno
loope
add
or
mov
fisttpl
lock
movswl
stc
jb
dec
pop
fiaddl
cld
dec
push
push
mov
xchg
ret
add
jne
nop
jmp
add
test
je
sub
jb
add
add
stc
jb
add
add
add
mov
sbb
incl
ja
fadds
ja
jb
nop
in
sub
push
mov
xchg
ret
test
adc
mov
stc
jb
sldt
xchg
jns
xchg
lcall
jmp
rolb
jnp
movsb
fadds
add
add
nop
jmp
add
filds
push
pop
adc
jb
test
pop
add
jbe
mov
stc
jb
add
test
lock
add
ljmp
add
add
add
stc
jb
add
add
jbe
cmp
jmp
or
add
pop
shlb
mov
stc
jb
gs
add
adc
inc
add
jb
jge
test
lods
inc
add
nop
jmp
xlat
dec
out
add
add
adc
inc
add
xor
add
andb
add
movsb
add
iret
pop
push
mov
xchg
ret
pop
add
dec
setl
stc
jb
add
add
add
pop
mov
stc
jb
out
add
add
jb
ja
jns
aas
push
jb
add
dec
push
mov
stc
jb
add
movsb
add
mov
xor
push
stc
jb
ja
add
adc
movsb
add
xchg
jb
movsb
add
les
add
add
cmpl
add
add
jbe
mov
rolb
xchg
ret
add
pop
lods
add
add
push
mov
xchg
ret
pop
inc
jbe
addb
add
jns
push
mov
xchg
ret
cmpsl
inc
lock
test
nop
jmp
dec
add
xlat
add
ja
sub
jmp
add
incb
shrb
popa
jecxz
xor
cld
movzwl
stc
jb
pop
rolb
xor
pusha
stc
jb
add
push
pop
insl
pop
push
mov
xchg
ret
mov
add
pusha
add
add
mov
stc
jb
movsb
pop
ffreep
add
add
inc
stc
jb
incb
add
movsb
add
mov
push
mov
xchg
ret
fbstp
dec
add
push
push
mov
xchg
ret
cld
lods
add
test
jb
add
mov
add
push
lea
nop
jmp
xchg
add
add
jne
push
mov
xchg
ret
in
add
mov
xchg
ret
add
add
push
mov
xchg
ret
xchg
ss
cld
je
stc
jb
inc
aas
or
outsl
jmp
and
lock
outsl
call
stc
jb
add
or
pause
jmp
pop
cld
add
cmp
add
push
xlat
add
mov
add
dec
mov
nop
jmp
filds
jnp
add
shl
stc
jb
add
add
add
aam
mov
stc
jb
add
push
loopne
jb
add
fsubrp
or
stc
jb
add
sahf
add
jmp
str
jns
pop
sbb
mov
mov
add
dec
test
pushf
push
nop
jmp
add
add
add
shrd
mov
nop
jmp
add
push
mov
xchg
ret
xlat
adc
adc
lret
push
push
mov
xchg
ret
dec
out
add
jo
je
stc
jb
ja
add
mov
push
mov
xchg
ret
add
or
jb
add
jge
lock
cmp
push
mov
xchg
ret
jbe
rorb
daa
fadds
mov
mov
out
sbb
sti
incl
add
fstl
add
add
add
add
popa
nop
jmp
mov
cld
add
movb
jmp
xchg
mov
repz
incb
push
mov
xchg
ret
jnp
fists
push
mov
xchg
ret
fcmovnb
fcmovb
add
jbe
movsl
scas
add
push
mov
xchg
ret
aas
in
imul
push
nop
jmp
ja
imul
test
test
jle
inc
push
mov
xchg
ret
inc
add
add
lea
stc
jb
in
xlat
add
cmpsl
mov
mov
jbe
add
add
je
stc
jb
add
xchg
pusha
add
cmpl
nop
jmp
fcmovb
add
pop
add
sub
jne
inc
add
add
scas
mov
stc
jb
xchg
dec
push
stc
jb
add
add
add
pop
add
add
stc
jb
cmpsl
add
and
shrb
into
or
add
mov
add
and
mov
stc
jb
add
add
clc
push
stc
jb
dec
xchg
push
push
or
icebp
push
add
jge
add
add
push
xor
push
push
mov
xchg
ret
push
fs
add
incl
add
add
pop
ja
xor
nop
jmp
shlb
dec
xchg
int3
mov
push
mov
xchg
ret
sahf
adc
mov
mov
stc
jb
lods
test
faddl
add
icebp
test
jb
test
add
lock
push
stc
jb
xor
add
add
add
imul
stc
jb
fcomp
lods
dec
add
add
nop
jmp
add
add
add
nop
jmp
cmp
faddl
fcmovu
cli
jmp
stc
jb
dec
dec
pop
add
inc
in
mov
xchg
ret
out
add
push
mov
hlt
or
xchg
dec
add
push
add
add
rol
hlt
push
jg
stc
jb
add
jbe
add
add
add
xchg
outsb
and
jb
add
test
fistpl
popa
add
jb
add
pop
test
add
add
stc
jb
add
rorb
add
ret
push
add
add
add
add
or
stc
jb
add
fidivl
arpl
mov
stc
jb
lods
add
push
stc
jb
add
add
add
or
loop
push
mov
xchg
ret
ja
dec
shrl
jmp
mov
add
movsl
xor
and
stc
jb
add
dec
inc
xor
jbe
mov
stc
jb
push
imul
cmc
inc
add
dec
pop
ja
je
jne
nop
jmp
add
add
push
push
add
stc
jb
add
ja
jmp
jb
pop
lods
lods
inc
add
add
mov
subb
add
in
cmp
add
xchg
enter
call
add
add
inc
xchg
in
xchg
stc
jb
add
pop
test
shl
stc
jb
in
cmpsl
and
add
mov
orb
add
out
add
in
mov
stc
jb
incb
xor
jne
stc
jb
add
mov
test
jecxz
call
jmp
add
add
add
pushf
push
stc
jb
add
jns
inc
add
rcll
out
mov
push
mov
xchg
ret
jge
xchg
out
push
stc
jb
add
add
add
add
push
mov
xchg
ret
add
dec
dec
inc
stc
jb
add
add
add
xlat
loope
lea
stc
jb
add
jbe
imul
les
pop
pusha
nop
jmp
add
jns
add
add
orps
xchg
int
test
xor
jmp
add
movzwl
nop
jmp
add
les
jns
sbb
stc
jb
test
sahf
xchg
dec
and
push
mov
xchg
ret
add
mov
mov
nop
jmp
movsb
lods
add
add
stc
jb
out
add
add
add
adc
pushl
push
mov
xchg
ret
add
pop
sbb
push
mov
xchg
ret
cmpsl
add
fildl
push
push
mov
and
incl
add
cltd
add
stc
jb
add
push
mov
add
dec
add
xchg
out
add
roll
je
stc
jb
add
adc
push
stc
jb
add
lods
mov
mov
add
add
imul
dec
test
jle
popa
add
mov
xchg
ret
gs
in
jmp
nop
jmp
xchg
add
mov
stc
jb
add
scas
cmp
nop
jmp
dec
add
fimull
imul
jnp
dec
add
jb
add
add
movb
add
stc
jb
add
fwait
call
nop
jmp
dec
add
xor
clc
mov
stc
jb
add
jns
test
mov
adcb
jmp
movsb
in
add
stc
jb
mov
test
push
cmp
outsl
arpl
add
incl
jnp
cmovnp
jb
add
add
add
std
jl
stc
jb
cmp
test
arpl
jmp
stc
jb
xor
add
mov
cld
stc
jb
add
push
add
cmp
idiv
ljmp
add
movsb
sarl
popa
add
jb
add
add
out
push
push
mov
xchg
ret
lret
les
xor
pop
push
push
mov
xchg
ret
test
xlat
add
adc
movsb
stc
jb
add
add
test
bound
xchg
mov
idiv
jb
add
gs
add
rol
add
lahf
cmp
nop
jmp
add
xchg
pop
jl
xchg
cmpl
fildl
xchg
add
push
sub
stc
jb
mov
dec
cld
cltd
call
stc
jb
ja
add
add
nop
jmp
mov
cmpsl
add
in
cmpsl
cmp
jecxz
stc
jb
dec
test
jbe
pusha
stc
jb
add
dec
xlat
jns
mov
xchg
jmp
pop
add
aas
pop
cmp
jb
cld
rolb
sahf
test
into
push
stc
jb
jbe
add
add
dec
add
test
nop
jmp
add
dec
test
add
lret
inc
add
sub
nop
jmp
ss
fcmove
push
stc
jb
add
xor
fildl
imul
jmp
nop
jmp
add
mov
stc
jb
cmp
push
test
add
stc
jb
cmpsl
add
pop
test
fistl
call
xlat
add
add
ja
and
push
mov
xchg
ret
incb
sar
dec
add
jb
add
add
add
call
stc
jb
add
popa
add
jmp
out
xlat
add
add
push
push
mov
xchg
ret
imul
gs
mov
stc
jb
ja
dec
add
jle
dec
sub
jb
rolb
sub
stc
jb
add
movsb
xlat
addb
rep
stc
jb
add
add
dec
add
dec
sub
nop
jmp
dec
add
add
gs
fs
and
push
mov
xchg
ret
dec
dec
rcl
sub
fdiv
fcomps
ja
add
nop
jmp
imul
add
test
out
stc
jb
lods
ja
and
nop
jmp
test
les
imul
int3
inc
stc
jb
add
movsb
adc
push
ror
xor
stc
jb
cld
lods
add
add
cli
push
mov
rorb
mov
and
push
fs
fsubl
xor
add
stc
jb
add
sub
popa
add
mov
xchg
ret
add
lcall
fadds
xchg
ret
lods
test
jne
stc
jb
test
add
cmp
call
lods
add
sahf
ficoml
push
jge
nop
jmp
xchg
cld
out
add
jb
ss
add
or
push
mov
xchg
ret
rolb
mov
xchg
ret
add
sar
jb
add
xor
cmp
aam
xor
push
mov
xchg
ret
ja
add
push
mov
xchg
ret
mov
add
or
mov
stc
jb
add
add
xlat
add
push
push
mov
xchg
ret
add
gs
stc
jb
add
jns
add
add
mov
stc
jb
filds
stos
mov
stc
jb
lods
test
add
dec
rep
stc
jb
filds
push
jno
mov
stc
jb
mov
and
outsb
pushl
stc
jb
add
add
pmaddwd
pop
stc
jb
add
dec
add
cmp
cmp
inc
add
add
cmp
sti
jmp
lock
test
jb
mov
pop
cmp
add
stc
jb
add
add
out
mov
in
inc
add
add
add
and
into
pusha
stc
jb
xchg
add
add
or
jb
add
add
jnp
xchg
stc
jb
add
faddl
add
mov
jae
mov
push
mov
xchg
ret
push
jmp
push
mov
xchg
ret
test
movzwl
stc
jb
xor
xor
stc
jb
add
dec
xchg
dec
mov
stc
jb
imul
push
mov
xchg
ret
and
dec
or
jb
adc
add
ja
mov
push
mov
xchg
ret
lock
nop
jmp
mov
add
add
mov
nop
jmp
pop
dec
add
jge
xor
stc
jb
dec
movsb
test
shll
jb
add
push
pop
stc
jb
gs
xchg
lock
inc
fldt
stc
jb
jnp
fcmovu
xchg
cld
jl
shrl
jb
add
rol
add
adc
jb
add
add
add
call
incl
cmp
in
popa
stc
jb
add
add
xchg
or
clc
stc
jb
aas
add
mov
mov
movswl
stc
jb
push
dec
add
add
push
cltd
je
stc
jb
add
jbe
stc
jb
add
add
addr16
call
incl
xor
xor
nop
jmp
cld
add
and
add
add
addl
jb
add
inc
add
push
mov
xchg
ret
dec
lock
add
dec
mov
nop
jmp
add
test
add
and
or
inc
add
add
xchg
cltd
push
push
mov
xchg
ret
ja
add
sbb
jb
out
add
add
add
rcll
fmuls
xchg
repz
fadds
add
dec
pop
dec
in
sub
in
sarb
leave
pop
arpl
mov
fcomps
jg
stc
jb
lods
cld
out
shlb
add
mov
push
mov
xchg
ret
dec
dec
fdivrl
nop
jmp
and
pop
add
insl
mov
stc
jb
les
add
mov
xchg
ret
add
jns
add
jb
rolb
add
mov
stc
jb
add
dec
cmp
adc
ljmp
add
insl
push
stc
jb
test
add
add
add
mov
nop
jmp
in
add
les
in
mov
stc
jb
imul
add
dec
add
stc
jb
xchg
add
add
enter
xchg
ret
lods
add
gs
ja
loop
push
stc
jb
add
dec
cmp
jle
jle
stc
jb
add
fcmovb
add
daa
mov
repz
jb
xchg
add
sub
lock
lcall
add
dec
imul
add
add
add
lods
dec
add
stc
jb
add
cmp
add
aas
or
stc
jb
les
out
movsb
pop
test
in
pushl
push
mov
xchg
ret
add
rolb
push
mov
xchg
ret
add
dec
lods
push
stc
jb
add
add
test
pop
pop
stc
jb
test
add
test
add
pop
add
nop
jmp
add
or
mov
jb
test
add
out
add
pop
add
or
push
mov
xchg
ret
add
test
add
dec
dec
stc
jb
add
add
in
rolb
shr
stc
jb
dec
ja
add
or
mov
xchg
ret
add
and
mov
sar
test
clc
stc
jb
lock
sbb
jne
stc
jb
pop
movl
push
nop
jmp
xor
add
out
cmp
lods
pop
mov
nop
jmp
add
mov
mov
or
jb
fadds
add
lgdtl
add
adc
jb
add
jge
add
push
stc
jb
add
add
mov
addb
stc
jb
xchg
add
mov
stc
jb
add
add
dec
stc
jb
add
xchg
add
cli
pop
stc
jb
add
add
add
movsb
adc
add
les
inc
xor
add
jb
dec
adc
add
add
rcr
mov
stc
jb
mov
aam
lret
jmp
add
dec
cld
add
test
in
add
jb
jge
out
mov
mov
fildl
xchg
ret
rorb
add
stc
jb
add
faddl
jb
add
dec
add
sub
sar
jb
out
add
xor
shll
stc
jb
add
movsb
add
mov
nop
out
push
push
mov
xchg
ret
xor
add
add
mov
stc
jb
add
add
fdivl
add
push
mov
xchg
ret
adc
add
les
add
add
jb
movsb
test
loop
add
jae
mov
cmpb
incl
add
mov
subl
push
mov
xchg
ret
add
cmp
xor
incl
pop
test
mov
repz
mov
xchg
ret
adc
add
add
pop
cmpw
stc
jb
dec
mov
les
ds
add
add
dec
xor
push
stc
jb
dec
adc
add
add
add
mov
leave
stc
jb
pop
add
pop
dec
add
lahf
mov
stc
jb
add
adc
jb
add
add
stc
jb
add
add
movsb
jnp
rolb
xchg
jg
xor
stc
jb
add
add
add
or
repz
mov
xchg
ret
ja
fidivl
sbb
mov
adc
jb
test
pop
stc
jb
add
ss
pop
out
ja
push
push
mov
xchg
ret
add
movsb
rolb
mov
jmp
stc
jb
add
out
mov
and
pushl
add
add
ja
jge
push
mov
xchg
ret
add
or
stc
jb
mov
test
test
nop
jmp
ja
dec
out
add
test
je
stc
jb
add
add
mov
stc
jb
xchg
dec
add
push
sti
add
add
jnp
add
push
jne
stc
jb
add
mov
add
add
jb
add
in
mov
add
mov
xchg
ret
gs
addb
in
movzwl
stc
jb
add
push
adc
popf
ror
push
mov
xchg
ret
movsb
cmp
imul
stc
jb
add
or
shlb
mov
stc
jb
faddl
add
jle
stc
jb
add
rorb
call
incl
mov
ja
lcall
cli
inc
add
dec
add
stc
jb
out
adc
fbstp
pop
cmp
movb
out
push
push
mov
xchg
ret
add
add
cmp
jb
add
lods
mov
add
loope
ds
stc
jb
sahf
cmpsl
add
add
fcmovu
mov
stc
jb
movl
lds
add
jb
add
pop
stc
jb
test
dec
add
stc
jb
les
add
mov
rep
nop
jmp
dec
test
add
add
jb
ja
add
mov
nop
jmp
rolb
add
adc
mov
push
mov
xchg
ret
movsb
sahf
add
push
stc
jb
add
add
aas
fadd
sahf
shr
nop
jmp
add
add
add
sbb
xchg
add
add
jmp
mov
mov
xchg
ret
add
pandn
icebp
stc
jb
mov
dec
out
add
add
add
cltd
call
nop
jmp
fisubrl
cs
stc
jb
add
pop
fildl
pop
stc
jb
add
or
ss
cmp
push
mov
xchg
ret
mov
add
and
jb
add
add
or
pandn
decl
cmpsl
jbe
add
imul
incl
add
add
dec
and
addb
mov
push
mov
xchg
ret
pop
add
mov
jb
dec
add
dec
add
push
stc
jb
pop
inc
dec
add
add
add
inc
and
jb
add
add
add
aam
call
nop
jmp
ja
add
adc
adc
inc
add
test
loop
add
dec
dec
push
mov
xchg
ret
cld
gs
add
add
cmc
jp
stc
jb
rcr
or
jo
push
stc
jb
add
add
cmp
adcb
call
add
add
mov
nop
inc
add
pop
stc
jb
jns
xlat
ss
cmpsl
jge
fldl
pop
cmp
mov
xchg
ret
jge
add
add
nop
jmp
jns
xchg
add
add
subl
incl
dec
add
pushl
push
mov
xchg
ret
dec
add
pop
mov
stc
jb
add
add
or
add
jb
jnp
push
mov
xchg
ret
add
add
add
stc
jb
fsub
xor
add
add
add
fadds
add
dec
sub
jb
add
add
push
je
stc
jb
push
adc
adcl
xchg
sarb
dec
add
in
stos
test
cmc
adc
test
add
in
aam
jmp
gs
clc
jne
cmpsb
xchg
rol
addb
add
addb
and
ret
faddl
mov
jp
movsl
or
xor
dec
mov
pop
pop
roll
mov
push
add
cld
jp
jge
shlb
sbb
ret
notl
repz
pushf
in
addr16
xor
and
push
xlat
int3
pop
pop
sahf
jge
push
test
or
xchg
add
xchg
int3
ds
imul
mov
fmul
dec
leave
std
and
addr16
xchg
fimuls
mov
ja
xchg
xchg
movsl
add
fsubrs
lcall
and
pop
push
add
jle
add
ja
addb
sbb
dec
mov
insl
cmp
add
adc
push
aad
aaa
repz
int
add
mov
cmc
push
jnp
test
test
outsl
and
add
add
sbb
add
mov
mov
pop
cmpsb
rolb
faddl
and
mov
xor
xor
out
pop
push
sbb
add
sbbl
cmc
or
sub
xor
pop
mov
add
add
mov
jmp
mov
or
daa
stos
iret
mov
jb
sarb
pop
and
add
xor
inc
ror
jnp
rcrl
cmp
lcall
xor
cld
aam
push
push
fdiv
adc
pop
fmull
lea
cmpsb
pop
fistps
cmp
sahf
pusha
add
pop
mov
in
mov
xchg
mov
test
pop
mov
call
mov
ljmp
xchg
int
jbe
pop
es
ljmp
ret
pop
imul
push
ss
inc
push
xchg
inc
rorl
or
mov
nop
xchg
push
lret
movb
xor
clc
imul
add
nop
pop
xchg
sbb
or
push
inc
or
add
fs
mull
loopne
in
pushf
lahf
shll
and
cmp
add
ret
ja
cltd
xor
mov
pushf
add
addl
cmp
in
xor
mov
movb
cmpsl
pusha
add
and
insl
ljmp
mov
leave
sti
push
pop
push
xor
sbb
call
lret
stos
mov
sbb
sbb
cmp
add
add
mov
hlt
inc
add
ret
or
and
adc
pop
pushf
ss
add
ret
ret
mov
roll
xchg
int
add
repz
add
std
lock
add
mov
add
mov
xchg
cmpl
mov
shlb
in
notb
inc
add
shll
or
aam
jmp
or
loope
push
dec
sub
popf
loope
sbb
sub
in
or
lds
cltd
add
rolb
sbb
incl
dec
pop
push
push
xchg
cmp
sti
cli
xchg
stos
xor
cmp
pop
pop
fiaddl
test
xchg
stos
add
aas
inc
ss
ja
iret
das
in
xchg
jbe
mov
add
cltd
js
jge
sbb
mov
adc
add
in
and
jae
movsb
fsubrs
and
fldl
fdivr
adc
pushf
fcmovb
add
push
clc
mov
fisttpl
mov
leave
and
mov
and
sub
xor
loope
xchg
lock
lret
add
inc
add
int3
cld
add
mov
mov
push
mov
dec
jp
xor
cmp
fdivs
mov
add
idivb
pop
mov
add
inc
add
imul
loopne
push
lret
jbe
mov
add
fucomip
int3
sub
pop
xor
sbb
xor
add
sub
imul
xlat
cld
and
addr16
push
in
sbb
and
cmpsb
xchg
aam
lods
mov
imul
insb
inc
add
pop
dec
rolb
sub
add
dec
inc
add
je
adc
adc
add
out
mov
outsl
cwtl
sbb
mov
sahf
ljmp
iret
in
adc
jbe
pop
nop
add
add
mov
ror
and
push
sbb
insb
inc
xor
cltd
jns
add
mov
sub
pusha
add
add
stos
jg
lahf
ret
add
ds
push
or
jmp
stc
std
out
cmp
and
add
faddp
add
or
fidivl
cmp
jl
dec
jnp
dec
dec
data16
push
lods
pushf
mov
fstpl
add
jnp
movsl
js
mov
add
scas
rorl
test
iret
and
rcr
push
pop
fdivs
adc
mov
mov
mov
pop
jmp
xor
lods
mov
movb
add
lret
sbb
mov
add
xchg
daa
inc
add
popa
xchg
int
pop
pushf
fildl
dec
jae
jae
push
cmpsb
xor
mov
aam
jmp
loopne
gs
mov
mov
pop
mov
mov
mov
aad
mov
add
addb
cmp
add
xlat
dec
int
mov
scas
cmc
push
sbb
cmp
das
test
mov
add
in
jno
jle
rcl
pop
in
aaa
aam
sbb
addb
lahf
xor
add
or
xchg
lock
xor
sbb
fwait
outsb
xchg
inc
shll
mov
or
nop
xchg
dec
out
mov
std
mov
cld
stc
leave
lret
ror
test
out
jg
add
pop
dec
test
outsl
lret
push
add
cmpsl
lcall
dec
xchg
xchg
xor
and
lahf
ffree
insb
stc
in
jae
stos
mov
mov
rcrl
movsl
dec
push
pop
xchg
daa
adc
mov
das
fisttps
cmp
jp
add
cmpsl
js
xor
ss
or
les
jl
mov
cmp
test
sub
mov
ja
lcall
xor
mov
mov
xchg
fadd
or
aas
push
cltd
in
loop
in
xchg
pop
stos
sbb
fs
sub
add
repnz
je
add
add
jmp
cmp
cmp
cmp
stos
jecxz
inc
inc
add
pusha
add
jne
add
cltd
push
mov
add
cmp
lods
add
xchg
lods
std
scas
pop
addb
add
sbb
sbb
das
xchg
leave
icebp
outsb
xor
movb
and
sub
fcoms
lods
fnstcw
jnp
ljmp
out
push
test
insl
icebp
inc
in
add
dec
dec
xchg
fistpl
repnz
lahf
into
pushf
jg
pop
call
mov
loope
cmp
jo
clc
jbe
enter
add
minps
mov
and
jmp
stos
int
and
add
xor
pop
cmp
ss
sbb
and
lock
add
sub
ljmp
lock
out
sbb
cmp
add
dec
mov
testb
inc
stos
stos
cmc
push
rcll
xor
add
ret
inc
add
add
xor
cmp
test
mov
mov
add
add
sbb
shlb
xchg
pushf
xor
insl
push
sbb
sahf
aad
icebp
and
cmp
idiv
mov
or
pop
pushl
inc
add
xchg
push
bound
mov
hlt
aad
sbb
or
ja
call
add
pushf
xlat
rolb
add
fcomps
inc
add
pop
outsl
das
decb
xchg
inc
add
dec
mov
dec
mov
divl
addb
das
jbe
stos
into
dec
out
xchg
xor
push
ds
jae
fwait
xor
inc
ficoms
jp
add
mov
lds
addb
cmp
inc
add
sbb
inc
dec
xor
mov
add
add
mov
inc
sbb
call
cs
add
mov
inc
lock
xchg
fwait
ss
add
int3
es
jmp
fdiv
jne
jae
fcomps
jns
mov
sbb
adc
add
jl
xor
and
inc
xchg
lea
add
cmpsb
mov
test
mov
ret
dec
inc
add
mov
repz
lcall
sub
mov
push
lret
xor
cmp
nop
mov
add
mov
add
xchg
mov
popa
cmpsb
xchg
out
jo
add
test
outsb
sbb
sbb
xorl
add
popa
std
iret
test
sti
rorb
lahf
cmp
lods
xchg
adc
jp
movb
mov
aaa
adc
mov
push
mov
jg
lods
and
add
xor
or
popf
fsubl
std
ja
xor
add
cmp
xlat
add
mov
push
dec
add
dec
scas
mov
sub
and
mov
outsl
dec
hlt
inc
pop
pop
jbe
mov
add
ja
pop
and
jnp
loopne
push
cli
scas
fs
lock
xor
repz
shrb
fcmovnbe
int
arpl
mov
nop
iret
push
les
fildl
fbstp
add
push
sbb
cltd
cwtl
jp
xchg
lahf
lods
sbb
jmp
lock
pop
ret
pop
mov
cmp
add
nop
fiaddl
or
clc
fprem
movsl
and
nop
mov
addb
call
cltd
cmc
popa
andl
stc
scas
xor
data16
js
cmp
test
dec
shll
aas
adc
test
in
stos
aam
push
xor
add
cld
or
popf
leave
lea
ljmp
in
ror
sbb
movsb
lret
clc
sub
or
add
jb,pn
mov
mov
lods
lock
push
rcl
out
out
dec
sbb
add
and
fidivrl
ret
mov
dec
add
fsubp
jno
bound
lret
push
add
call
std
int3
scas
lcall
push
incl
mov
icebp
repnz
stc
pavgw
ljmp
jne
sti
xor
add
xchg
mov
aam
divl
mov
add
scas
mov
inc
add
in
inc
add
rolb
mov
rcrl
mov
out
lcall
inc
add
out
mov
xor
adc
mov
shrb
mov
add
add
cmp
rolb
push
ja
sub
and
cli
rcrb
dec
or
pop
clc
xchg
xor
and
xchg
aas
movb
push
add
clc
lods
loope
xchg
insl
arpl
jge
cs
fiadds
fmulp
std
mov
or
cmp
in
dec
or
add
lahf
mov
stc
repz
add
mov
loop
loope
dec
out
sub
adc
jo
adc
fldl
add
jg
sti
sbb
push
cmp
xchg
mov
mov
add
inc
aaa
add
cltd
add
fstpt
call
test
mov
les
mov
dec
inc
pop
shll
jle
dec
sub
add
cwtl
out
push
adc
mov
xchg
jae
imul
fdivp
clc
mov
or
pop
lret
mov
test
xor
xor
test
in
xor
mov
orl
aad
add
cmp
inc
add
out
hlt
movsl
mov
sbb
pusha
add
lahf
xlat
dec
aam
dec
scas
imul
dec
sub
fimuls
push
jnp
test
sub
test
int
js
and
push
lods
in
sbb
add
mov
add
inc
jnp
inc
add
jle
sub
pop
test
mov
fisttpll
xor
scas
sub
pushf
add
fidivl
std
pop
sub
aad
daa
push
sbb
push
add
out
pop
ljmp
in
sbb
inc
add
cmpsl
lods
imul
push
loop
pop
pop
daa
es
ds
sub
pop
mov
rolb
lcall
movsb
call
sub
into
adc
add
cmp
sbb
or
jmp
aas
insb
fwait
sti
fisubs
les
sub
cmp
mov
or
inc
add
dec
or
jl
adc
fildl
mov
inc
jge
aam
or
sarl
cld
xor
pop
mov
and
test
add
call
push
insb
sbb
mov
lea
mov
rolb
adc
lahf
inc
add
or
pop
fimuls
cltd
les
mov
stos
xchg
cmp
loope
cmp
inc
add
imul
int3
out
out
pop
cld
sbb
ljmp
out
jbe
ret
mov
xor
pop
in
aad
shrl
pusha
add
mov
movl
cwtl
adc
add
mov
add
mov
push
push
cmpl
adc
push
fdivrl
push
add
shll
fs
xor
push
out
mov
enter
rclb
inc
add
lods
push
sbb
xchg
cmp
xchg
cmp
add
lods
clc
outsl
push
ds
add
fs
mov
clc
jge
int
cli
xchg
ljmp
push
jb
pop
mov
rolb
mov
bound
out
fdivrl
xchg
pop
es
std
and
pop
inc
add
out
sbb
add
test
mov
test
add
or
mov
and
mov
add
xchg
and
lock
in
fiadds
mov
sbb
insl
sbb
jp
aam
in
es
jb
repnz
insl
xor
dec
lea
cmp
add
adc
jns
add
jb
or
stc
ss
ret
pop
sahf
imul
or
out
add
dec
adc
testb
les
jp
sub
or
push
lods
fsubs
addr16
jne
rolb
nop
cmp
xchg
xor
pop
shr
add
add
jmp
std
push
sub
xor
and
gs
jge
mov
out
add
mov
les
fsubrs
addl
mov
add
mov
je
fstpt
dec
xchg
or
xchg
pop
add
or
pop
and
dec
mov
and
lahf
adc
ret
imul
cmp
xchg
pop
push
lods
decl
xchg
cmp
mov
les
jge
shll
scas
nop
ret
out
gs
pop
mov
mov
inc
cmpsb
inc
inc
add
jns
push
rolb
sbb
sbb
mov
add
xorl
aaa
dec
pop
mov
mov
pop
xor
add
push
jle
jae
ds
dec
adc
loope
dec
add
icebp
lods
ds
mov
cmpsl
sub
pop
jnp
sbb
adcl
dec
fistpll
es
xor
aaa
push
inc
add
and
xchg
insb
jge
sub
or
jae
leave
push
xor
scas
cmpsb
pop
std
or
sbb
add
sub
pusha
add
or
jnp
ficoml
sbb
jp
in
cmc
mov
push
mov
int3
fildll
xchg
mov
fwait
out
sub
jbe
data16
sub
sbb
add
loope
fiadds
mov
idivl
xchg
imul
aad
std
rorl
jcxz
loope
or
xor
push
sub
xorl
lret
ret
mov
arpl
pop
ret
sbb
hlt
aaa
daa
mov
cld
pop
mulb
add
decb
push
jmp
pop
mov
jo
or
xchg
mov
sbb
jp
push
insb
jno
loopne
cltd
lods
shlb
xchg
clc
rcr
mov
cmp
mov
push
inc
in
popa
cli
dec
push
lcall
fxch
addb
jb
xchg
lret
leave
mov
xor
sbb
movsl
cmp
push
icebp
out
add
insb
mov
roll
cmp
lret
pop
and
andl
cmpsl
shll
cmp
popa
jecxz
shlb
lea
movsl
daa
adc
adc
xchg
pushf
scas
rcrb
ret
push
cmp
dec
iretw
mov
inc
stos
xchg
les
jp
sub
scas
sahf
adc
mov
mov
lods
leave
cmc
lcall
push
loope
add
or
leave
and
icebp
mov
rcll
int
mov
jbe
aas
test
out
movsl
int
ret
add
or
cltd
adc
or
cwtl
stc
mov
outsl
xlat
popf
fdecstp
addb
jg
and
or
out
mov
ss
xor
pop
imul
mov
cltd
clc
lods
fmull
js
xchg
aas
add
clc
dec
sbb
imul
push
jecxz
sbb
mov
jmp
dec
mov
jp
sbb
andl
js
fldcw
insb
cwtl
test
adc
jmp
call
add
in
jge
test
push
into
sub
and
adc
cli
mov
push
xchg
jae
lretw
jecxz
mov
movb
add
fsub
mov
jp
add
testb
sbb
sub
sub
aaa
add
pop
clc
sub
outsb
mulb
in
scas
mov
sub
aaa
mov
shlb
sbbl
pop
mov
sub
add
aad
pushf
cmp
push
sub
adc
add
pop
xchg
setg
add
fwait
inc
xchg
aas
jmp
test
pop
inc
cmp
xchg
std
icebp
ljmp
pop
pop
cmp
gs
pusha
add
pushf
iret
and
mov
negb
idivb
pop
xchg
jmp
xor
movb
or
pop
flds
add
add
call
pusha
add
mov
add
xor
push
inc
lods
jmp
xchg
xchg
xor
mov
sbb
push
add
and
add
push
adc
mov
shrl
push
movsl
aas
loop
dec
inc
or
cmp
call
mov
adc
stos
pop
subl
lret
les
adc
cs
inc
add
test
pushf
es
cmp
jae
ret
mov
mov
mov
shlb
cmc
das
aaa
loopne
mov
pop
ret
xchg
jno
notl
xchg
cmpsl
mov
push
leave
adc
outsl
and
stc
jmp
pop
inc
ds
test
inc
add
mov
mov
inc
add
adc
jp
pop
mov
jbe
test
hlt
and
cmp
mov
cmp
add
adc
loop
rorb
mov
mov
cld
repz
add
adc
cmp
popf
jecxz
add
lret
push
in
movsl
aaa
les
cmp
add
fsubl
add
xor
lea
lret
push
cli
or
stc
shr
loop
jle
ljmp
inc
add
cltd
adc
or
and
mov
mov
sub
or
nop
lret
and
add
xor
sub
lods
xor
aas
dec
xor
in
sbb
roll
inc
cli
push
add
rolb
test
jne
test
into
lea
lods
mov
shl
int
mov
push
add
xor
push
add
jg
rclb
in
pop
mov
inc
add
mov
adc
insb
int3
fbld
add
or
and
pop
popf
push
adc
jecxz
mov
add
push
add
push
adc
rcrb
iret
sbb
pop
jle
add
imull
jmp
aaa
mov
pop
pushf
jbe
dec
mov
loope
aad
jle
cmpsl
cmp
mov
lret
es
xchg
and
mov
mov
std
inc
add
jno
xor
pop
dec
pop
je
and
sub
pop
out
addb
adc
cltd
icebp
inc
add
jmp
popl
fadds
add
push
cmp
add
sub
add
and
loop
add
mov
push
ret
push
loop
cld
insb
aas
test
shl
mov
sub
add
movsb
stos
sbb
daa
push
add
lea
fstp
add
jp
jmp
fwait
mov
out
add
insb
jne
mov
call
and
add
movsl
push
or
cmp
iret
test
das
cli
lahf
xchg
ljmp
add
xchg
lods
lret
hlt
ds
pusha
add
mov
xchg
shrb
mov
add
add
bound
leave
fnstsw
stos
adcl
push
add
clc
stos
ret
sub
daa
pop
out
cmpsb
outsl
pop
mov
mov
jmp
mov
jle
sbb
sbb
lods
loop
jno
stos
cltd
jae
mov
mov
shl
rolb
xchg
into
stos
add
shrl
cmp
loopne
in
cmp
enter
shrl
and
push
lret
lods
ljmp
and
lock
jecxz
add
fdiv
addr16
xchg
cltd
jno
jnp
stc
push
mov
inc
add
in
sub
mov
cld
fistps
cmc
scas
fwait
push
addr16
mov
and
sub
mov
sarl
sti
icebp
addb
aaa
push
cmp
push
lahf
mov
pop
sub
int3
mov
push
nop
pop
xchg
cltd
mov
cmp
fisubrl
dec
lock
outsl
xor
mov
jg
stc
push
add
scas
in
mov
push
mov
xchg
mov
dec
repnz
fldl
xor
xor
shlb
nop
pop
stc
js
outsb
insb
push
add
add
or
hlt
jge
mov
lret
sub
pop
or
jb
cmp
outsl
jp
dec
or
incb
cmp
mov
lret
fcoms
add
test
test
loope
pop
jecxz
fstps
test
or
fldt
inc
add
daa
jg
sbb
scas
iret
mov
add
cltd
ljmp
cmc
or
test
mov
dec
jmp
cwtl
add
sbb
pushf
mov
dec
push
mov
repz
mov
test
bound
call
adc
push
imul
jge
inc
add
mov
nop
xchg
mov
dec
mov
pop
adc
pop
in
mov
add
mov
add
cmpsb
daa
dec
mov
repz
push
fsubr
mov
in
cli
gs
fucomp
mov
orl
js
in
xchg
jnp
je
add
in
jbe
mov
push
sub
cli
push
lods
mov
in
cmp
faddp
add
mov
add
fsubrs
fs
dec
push
mov
sbb
or
fdiv
or
add
movntq
dec
rolb
or
lcall
repnz
or
incl
movq
sbb
mov
mov
add
cmc
loopne
out
jb
lds
mov
outsb
stc
lret
xor
or
and
add
mov
imul
rolb
add
arpl
ret
add
movb
or
push
loope
push
sub
add
dec
cmpsl
or
les
cmp
flds
fadds
add
inc
add
xchg
stos
testb
inc
test
mov
jle
add
pop
ret
arpl
inc
add
xchg
sub
and
add
gs
ja
jne
add
aam
jnp
mov
push
jo
filds
push
lea
imul
ficoml
js
scas
bound
ja
mov
enter
push
adc
push
push
pop
sbb
cmc
xchg
ficompl
clc
cmpsb
icebp
push
call
daa
adc
add
out
inc
add
cltd
ja
pushf
clc
push
mov
pop
jae
mov
aam
sbb
cmp
lods
xchg
pop
add
push
es
imul
push
movb
jmp
xchg
lods
hlt
inc
add
ja
sahf
dec
cmp
cmp
push
cmc
mov
clc
and
xor
xchg
push
mov
xchg
sbb
pushf
icebp
rolb
addr16
dec
pop
dec
add
ja
mov
enter
add
mov
add
or
mov
add
sub
jmp
dec
add
pop
jno
roll
mov
sub
add
cmp
add
adc
mov
jnp
das
pop
nop
xor
mov
push
jp
out
cmp
addr16
and
popa
xchg
add
sub
xchg
dec
cmc
mov
mov
scas
sbb
xor
add
sub
aas
loop
test
adc
clc
ffree
sbb
mov
loopne
js
sub
dec
addb
test
xor
adc
lret
xchg
aas
mull
mov
out
popf
push
add
mov
fisttpll
popf
or
add
inc
add
push
inc
cmpsb
pop
mov
add
fadds
mov
cmp
mov
add
test
bound
pop
mov
pop
mov
and
int3
cmp
cwtl
loope
mov
add
icebp
imul
data16
insb
xchg
inc
mov
pop
mov
enter
inc
test
stos
ljmp
jb
shll
adc
xchg
pop
aam
je
sub
add
mov
dec
filds
add
dec
jns
xor
add
enter
bound
sub
dec
push
xor
push
orl
and
mov
add
cli
icebp
xchg
mov
and
icebp
mov
xchg
cmp
pop
int3
adc
ret
xorl
or
scas
out
jmp
cltd
push
sbb
enter
mov
jle
ds
add
xchg
movb
and
sub
pop
clc
pop
shll
mov
push
add
dec
scas
aad
lea
hlt
xchg
add
pop
pop
jecxz
lods
aas
addb
adc
ds
adc
xor
mov
and
pusha
add
mov
add
add
stos
inc
lock
push
dec
jae
outsl
popa
pop
xchg
lods
sti
pop
inc
add
lret
movsb
repnz
notb
add
daa
mov
push
xor
mov
add
decl
bound
fsubs
add
mov
push
add
fs
add
dec
push
dec
dec
rolb
add
popa
lock
js
sub
hlt
mov
cmp
jb
test
outsb
fidivrs
sti
dec
ret
add
dec
data16
movb
pushf
inc
out
sub
mov
or
jmp
sub
xor
dec
int
es
fucomip
cmpsb
in
pop
cmp
and
jp
pop
jp
aaa
inc
add
add
jbe
jns
imul
and
jae
stos
mov
rorl
hlt
sbb
adc
add
addb
insl
outsl
shll
lds
shll
adc
ja
addb
push
pop
sar
mov
and
out
pop
shrl
sub
add
scas
pop
add
dec
leave
sti
inc
mov
adc
stc
popf
add
mov
dec
fneni(8087
js
add
xchg
inc
out
dec
or
add
cli
aas
cwtl
into
icebp
and
shll
xor
pop
ret
xor
dec
cmc
mov
dec
push
sbbl
mov
outsb
in
jne
cmp
sub
int3
jno
add
jno
mov
push
fidivl
test
add
mov
movb
int
dec
inc
add
pushl
cmp
mov
xor
fwait
push
rolb
push
test
in
test
aas
pop
dec
fwait
dec
jne
dec
mov
ffreep
ret
sarl
adc
movb
test
mov
and
xchg
inc
add
add
add
add
nop
mov
inc
add
mov
stos
push
add
ljmp
xchg
ds
pop
fstps
inc
add
nop
jle
mov
xor
sub
outsb
test
mov
stos
test
pop
jnp
test
ljmp
add
jb
push
xlat
pop
xchg
mov
pop
mov
std
lock
std
mov
pop
or
mov
shlb
test
leave
icebp
xor
add
les
jle
jge
std
xor
insb
bound
icebp
xor
int
push
mov
mov
ret
jg
adc
pop
cmp
out
and
ja
cmpsl
out
sbb
add
push
add
xchg
cmpsl
xchg
test
cmpsl
cwtl
nop
icebp
or
int
add
sbb
push
cmp
loop
and
stc
arpl
cmc
fdivrl
sti
inc
call
xchg
mov
add
jmp
cs
sbb
dec
pop
lea
lods
jge
insb
xchg
mov
add
xor
pop
subl
xchg
fsubr
adc
rorb
push
les
insb
ja
push
iret
mov
mov
outsb
bound
inc
sar
cmp
xor
je
dec
mov
cmc
lods
addb
xor
mov
xor
out
sbb
and
cmp
movsb
jmp
jmp
clc
sbb
or
cmp
popf
xor
cli
imul
insl
insl
cmp
stos
movsl
or
push
xorl
pop
sub
stc
rep
test
pop
mov
imul
and
and
cmp
push
xchg
lock
bound
int3
cmp
sub
shlb
xchg
stos
jle
sbb
ds
jge
or
jle
jmp
sub
pop
and
adc
out
mov
lods
ja
cli
inc
inc
add
xlat
mov
jbe
data16
sub
mov
xchg
adc
loop
push
leave
xchg
mov
pushf
jnp
lret
and
pop
in
mov
enter
test
in
dec
stos
push
mov
fcmovu
lret
xor
test
sbb
add
cmp
call
xor
fdivs
xchg
jb
jl
sbb
mov
add
inc
add
add
jmp
xchg
dec
pusha
add
push
loopne
pop
sahf
stos
pushf
in
mov
jns
repnz
adc
adc
add
movb
add
repz
dec
aas
fstpl
cmp
stos
jg
lea
add
sahf
push
cmpsl
cs
mov
ss
outsl
pop
clc
push
cmp
jmp
and
pop
int
adc
hlt
popf
test
add
cmp
push
sbb
xchg
es
popa
jl
mov
adc
ljmp
add
or
mov
inc
add
cmpsl
repnz
notb
add
lret
daa
hlt
shlb
call
int
push
add
xor
stos
popa
cld
in
cmp
dec
adc
std
adc
inc
add
shrl
sub
xchg
cmp
and
sbb
pop
insl
sub
lods
jp
das
fs
imulb
pop
mov
xchg
daa
cmp
jbe
push
xor
movsb
inc
add
push
iret
sbb
cmp
xchg
stos
out
dec
jl
rolb
jns
add
jo
xor
test
or
addb
and
cmpsb
shrb
add
inc
jmp
nop
pop
in
mov
or
scas
rolb
jne
push
cmp
sbb
or
shlb
aam
inc
addb
push
add
pop
out
leave
or
add
daa
xchg
loopne
pop
icebp
test
outsl
cltd
scas
lods
adc
dec
inc
lea
lret
mov
push
xor
adc
aas
popa
push
xor
xor
sub
cmp
ret
jp
ret
hlt
test
inc
dec
aam
add
into
jae
das
xlat
es
pop
lds
shrl
imul
scas
rolb
mov
add
jle
add
std
sub
adc
jb
out
add
or
imul
bound
movb
xor
enter
pop
and
sub
push
push
pop
out
mov
loopne
cmp
xlat
in
xchg
adc
scas
xchg
or
sbb
test
sub
in
add
ss
pop
adc
inc
jae
mov
mov
and
insb
push
xchg
aaa
add
fadds
pusha
add
or
dec
dec
mov
mov
add
push
pop
jmp
push
add
mov
int3
adc
add
add
test
pushf
dec
sub
add
f2xm1
inc
and
and
incb
scas
jbe
sub
sti
sub
cli
shlb
clc
sti
loope
dec
hlt
dec
icebp
rolb
leave
jl
rolb
push
daa
leave
pop
inc
shrb
addb
stos
mov
mov
fisubs
js
lret
add
sub
add
loope
cmp
mov
cwtl
mov
adc
movsb
pop
lds
pop
jno
mov
bound
jp
ja
add
xchg
std
xlat
xor
mov
hlt
cvttps2pi
mov
es
jnp
add
into
popf
inc
xchg
fsubs
mov
cmp
sbb
push
leave
lock
push
jne
mov
icebp
mov
cld
mov
enter
sub
inc
add
add
scas
pop
and
pop
or
iret
and
xchg
jbe
mov
sub
mov
inc
add
hlt
push
outsl
jmp
add
fisttps
xchg
push
fwait
scas
and
pop
mov
jno
in
popl
mov
xor
or
mov
mov
push
add
mov
dec
cwtl
stos
dec
cmpsl
pop
lret
dec
stos
jno
push
add
add
repnz
xlat
adc
enter
add
nop
test
xor
mov
loop
add
scas
xor
inc
loope
filds
fldt
shll
inc
add
lcall
int
data16
jle
sub
pop
mov
mov
test
cmp
add
addr16
xlat
mov
sahf
testb
arpl
mov
jmp
xor
push
stos
pop
test
jne
jge
add
shl
lret
jecxz
add
or
add
cmp
pop
add
addb
jae
pop
push
dec
push
bound
cmp
add
addb
pushf
push
xor
add
add
movsb
ss
mov
or
dec
loopne
sbb
mov
add
add
dec
inc
push
arpl
shl
push
add
aam
negb
adc
adc
or
nop
mov
xchg
pusha
add
inc
stos
xorl
lahf
push
adc
nop
addb
sbb
out
test
mov
jl
mov
adc
pop
sbb
xchg
inc
std
inc
add
dec
sbb
imul
addr16
and
out
xchg
sbb
jge
add
scas
xchg
or
out
and
xchg
dec
pop
sub
xor
adc
add
push
cld
push
inc
add
dec
dec
sbb
cmp
enter
iret
repz
mov
ret
add
or
test
sub
or
rcrl
clc
xchg
mov
leave
mov
pop
iret
jno
jge
add
xchg
mulb
sub
mov
icebp
rcr
pop
in
outsb
test
mov
add
das
jnp
pop
mov
lods
and
les
xlat
or
push
out
iret
test
cld
mov
cmpl
jecxz
inc
add
movsb
or
ss
push
dec
loop
mov
pop
rolb
enter
pop
or
call
js
pop
jnp
mov
loop
cli
fiadds
mov
add
add
dec
mov
pop
dec
outsb
arpl
orl
leave
sahf
sti
add
lds
rcrl
dec
nop
cmp
ljmp
sbb
jecxz
in
add
adc
test
aas
fisttpl
test
movb
mov
and
xorl
mov
add
cld
push
mov
push
subl
sub
cltd
sbb
dec
jns
add
cmp
lock
rolb
addb
jmp
fs
andl
xchg
mov
inc
add
mov
cmp
in
or
mov
les
sbb
add
mov
loopne
lret
ss
addb
int3
xchg
mov
jge
xor
cmc
mov
lahf
xor
push
imul
clc
rolb
cmpsb
js
mov
mov
movb
sarb
or
or
add
jns
out
jae
cmpsl
cmp
add
sbb
dec
xchg
das
jns
into
mov
ret
mov
dec
ficompl
test
or
push
xchg
movsl
enter
adc
int3
push
mov
xchg
insb
jne
xchg
jb
add
int3
jo
test
xor
or
mov
aaa
into
stos
icebp
cwtl
aaa
lahf
pop
xor
inc
add
sub
jne
sub
sub
int
test
out
jne
dec
and
xchg
in
lock
sti
jecxz
and
xlat
mov
mov
xor
and
pop
enter
dec
ja
dec
arpl
hlt
out
mov
fldcw
mov
cmp
fwait
lock
insb
inc
add
or
jmp
xor
adc
test
aad
movb
lods
repz
push
fisubl
cmpsb
std
pop
orl
loopne
test
mov
xlat
push
imul
scas
add
mov
inc
add
mov
outsl
mov
in
sti
xchg
sbb
dec
mov
dec
test
add
mov
pop
je
sub
jb
jnp
sub
mov
in
push
icebp
dec
pop
sti
cmp
out
repnz
sbbl
pop
in
lcall
shrl
lods
pop
js
add
xchg
call
mov
outsl
mov
lahf
push
mov
iret
dec
or
adc
mov
fisttpll
ja
sahf
lock
cmp
pop
xor
add
sbb
js
js
sub
insb
pushf
mov
les
bound
movsl
stos
movsl
ja
lcall
add
cli
sbb
enter
mov
sub
add
cmp
dec
fwait
je
or
test
nop
rolb
and
xchg
arpl
push
ja
push
jmp
pop
addr16
mov
je
sub
add
xchg
mov
shl
imul
leave
jecxz
pop
jo
shll
xchg
jb
pop
push
pop
stos
jae
mov
cmc
mov
es
mov
add
jp
testl
add
out
das
jl
xchg
mov
movsl
inc
test
lods
ds
mov
xchg
ss
outsl
push
inc
pusha
add
ds
lods
ja
cs
dec
cmp
jmp
out
push
add
add
adc
sahf
mov
int3
in
lcall
add
add
test
das
nop
pop
xor
cmpsl
inc
mov
sbb
or
cli
mov
bsf
js
fwait
inc
jecxz
add
push
push
xor
loope
stos
ret
sub
fsubp
daa
inc
add
push
loope
addb
rcrb
jnp
vpacksswb
sub
add
push
and
lret
fnstsw
inc
add
cmp
lods
adc
arpl
mov
cltd
inc
add
adc
sub
pop
mov
addb
int3
addr16
addl
dec
sub
cmp
jns
jnp
and
cmp
ja
jmp
mov
or
sub
cmp
bound
std
pop
dec
adc
push
adc
loopne
xor
xor
std
xlat
xchg
data16
enter
lock
cmp
pop
add
jle
lahf
ret
out
add
inc
xor
cmpsb
ljmp
mov
adc
outsl
mov
add
stc
loopne
cmc
popa
fidivs
arpl
rolb
lret
and
out
add
addb
loopne
rcll
sbb
jne
cli
pop
push
movb
insb
sub
rolb
sub
pushf
lds
das
popf
push
jp
xchg
jl
movsb
in
mov
add
mov
xchg
insb
jb
add
lock
imul
insl
int
lods
icebp
push
fnstcw
outsl
shrd
mov
cmp
popf
ja
add
inc
dec
aas
cmc
nop
dec
jbe
jl
adc
jbe
fisttpl
pusha
add
lods
pop
into
or
sahf
and
xchg
enter
sub
jne
or
add
cs
jbe
aas
dec
leave
mov
je
stc
or
push
mov
mov
addb
dec
lds
stc
and
outsb
xorl
mov
in
inc
add
bnd
xor
cmpsl
push
dec
data16
sahf
cmpsb
mov
xor
out
sbb
add
enter
cli
dec
pop
lahf
leave
je
push
pop
mov
add
test
sub
or
cmpsl
adc
add
cli
dec
pop
pop
inc
add
movsl
sbb
or
popf
pushf
jae
fiaddl
dec
push
dec
and
fcmove
mov
das
lods
jno
push
push
inc
add
fnstcw
mov
add
pop
ds
pop
aad
add
push
add
stos
das
dec
insb
sbb
add
sub
sbbl
cmp
xchg
movsl
incb
and
popl
sub
mov
mov
add
pushf
cwtl
jbe
adc
addb
push
mov
inc
add
adc
add
sub
test
inc
add
pop
xor
icebp
lds
jns
xorl
stos
leave
push
push
push
jne
mov
and
mov
jnp
and
int
ss
cmc
pop
imul
int
add
and
jae
inc
add
fnstcw
dec
roll
stc
ret
push
push
aad
inc
add
gs
jle
cmp
data16
xchg
cmp
out
jl
add
movsl
addb
add
je
dec
fbstp
dec
mov
les
hlt
jbe
inc
xchg
add
fstp
inc
test
cli
scas
int3
pusha
add
xchg
or
add
popl
cmp
add
add
imul
push
add
addr16
cmp
add
movsl
mov
das
inc
add
xor
into
jbe
add
testl
out
das
aad
adc
add
outsl
jnp
movsl
les
or
pop
icebp
fsubrl
or
sub
add
rolb
orl
rolb
dec
push
and
jbe
insb
jecxz
pushl
mov
lods
ljmp
rol
add
add
add
or
and
fucomi
pop
popa
push
dec
std
int
pop
dec
out
loop
cli
imul
or
and
push
sub
add
add
mov
add
or
add
popf
mov
insl
repz
mov
xor
jne
mov
pushf
enter
mov
dec
sub
sti
xor
stos
sahf
pop
xor
data16
push
xchg
add
clc
inc
inc
mov
add
scas
xor
roll
fs
sub
cmp
in
inc
add
je
popf
lea
jl
push
jle
add
push
imul
test
ja
inc
add
mov
or
add
or
sbb
pusha
add
cmp
rorb
movsb
ja
sbb
inc
add
cmp
add
mov
lcall
mov
sbb
jno
negb
mov
movsl
jecxz
xor
xor
add
sub
out
stc
sbb
call
xchg
xor
add
push
scas
inc
inc
add
mov
or
dec
movsl
or
subl
fadd
add
pop
or
cld
es
cmovs
add
add
pusha
add
nop
sbb
daa
jp
add
popa
pop
gs
repz
push
pop
fsubrs
xor
je
mov
mov
into
adc
and
add
lock
add
push
mov
sub
xchg
xchg
inc
add
adc
adc
fdivrs
mov
cli
inc
ja
int
add
pushf
aas
in
xchg
int
dec
lret
mov
mov
jge
add
int3
neg
je
or
add
out
jecxz
adc
xchg
mov
movb
ljmp
insb
or
jmp
rolb
xchg
imul
dec
push
insl
cmpsb
jae
jecxz
sbb
fcoml
scas
pop
or
ja
test
sbb
stos
mov
inc
add
and
sbb
icebp
jge
inc
add
xchg
push
loopne
iret
frstor
push
addb
mov
add
or
test
fwait
test
adc
cmp
imul
mov
pop
add
push
movsb
pushf
sahf
repnz
aam
pop
mov
cld
jbe
push
pop
das
add
xchg
shrb
sbb
push
xchg
push
movsb
inc
jg
int3
add
cmp
stc
stos
pop
adc
xor
push
and
pushl
mov
add
and
and
out
adc
add
rorl
add
jnp
imul
pop
fstps
rolb
insl
pop
mov
xor
inc
add
adc
clc
repz
data16
sub
dec
jo
test
js
dec
out
mov
aas
cltd
jge
push
repz
fdiv
or
stc
sub
test
or
xchg
mov
dec
mov
inc
add
mov
aaa
pop
add
pop
lcall
push
mov
sbb
lea
jb
fsub
push
add
inc
or
rolb
push
fwait
aas
pop
test
mov
dec
leave
gs
fwait
outsb
jae
xor
mov
int3
xchg
call
movsl
xchg
arpl
js
insl
bound
test
out
xlat
inc
pop
and
imul
add
mov
cmp
push
jns
add
movb
mov
mov
inc
sbb
sti
add
sbb
pop
and
push
xchg
mov
add
gs
cwtl
push
pop
arpl
cmp
data16
add
test
pop
mov
sub
dec
mov
pop
outsl
and
mov
sbb
sbb
sub
xor
outsb
sbb
add
out
jns
out
mov
out
or
aam
mov
pop
mov
add
sbb
insb
mov
pop
loop
repz
imul
imul
popa
push
fstl
pop
test
mov
mov
xchg
mov
das
aas
xor
mov
nop
mov
insl
imul
mov
ret
fs
aad
insb
xor
pushf
movsl
jb
insl
jmp
push
xchg
jbe
pushf
pop
mov
scas
jmp
test
les
roll
lret
fisttps
inc
mov
jne
push
cmp
mov
mov
or
imul
mov
inc
add
out
jae
fwait
pushl
inc
cmp
rorl
addb
xchg
in
inc
int
data16
jae
lds
inc
add
jne
mov
pop
push
ret
pushf
stc
dec
enter
popa
leave
in
leave
sub
and
outsl
xchg
inc
add
cmp
lret
loop
lret
xor
mov
xlat
jg
repz
xchg
aas
lahf
mov
xchg
loope
add
lcall
mov
filds
and
mov
pop
pop
lock
stos
iret
out
and
pop
push
pmulhuw
rcr
pop
jg
jno
inc
lcall
jno
sarb
jmp
mov
fisttps
add
add
in
cmp
cmp
add
fnstenv
or
lcall
cmpsb
add
mov
bound
out
dec
xor
mov
fists
insb
enter
mov
in
pop
lds
jae
and
mov
addr16
pop
sbb
inc
in
add
add
xor
bound
lahf
pop
jmp
pop
lcall
and
shlb
scas
push
add
mov
mov
add
mov
sbb
add
lret
push
bound
fwait
shlb
push
jg
add
insb
and
push
jb
int
outsl
jl
add
dec
popa
popf
ret
inc
add
cmpsl
insl
cwtl
cltd
cwtl
popf
ljmp
xchg
lcall
pushw
jae
add
push
cmp
imul
les
mov
lods
je
das
imul
xor
in
jge
sub
hlt
gs
stos
andnps
xlat
pop
cmp
xchg
nop
mov
sahf
addb
dec
and
jbe
jne
lods
pop
call
cs
push
add
movsb
sbb
xor
daa
jle
xor
iret
cld
jle
lcall
addb
mov
mov
inc
add
sbb
psrad
add
aaa
call
pop
xchg
mov
dec
jno
das
stc
test
dec
add
add
push
jp
sbb
mov
xchg
adc
mov
cmc
andl
ja
adc
sbb
mov
xchg
mov
dec
or
leave
adc
dec
sbb
in
add
fisubs
adc
insb
mov
lds
fisttps
jno
adc
push
sti
mov
mov
add
decl
int
imul
add
push
insb
push
sub
mov
int3
aad
inc
popf
lret
stc
jbe
pop
dec
xchg
stos
rolb
rcl
stos
add
imul
daa
jg
mov
xchg
imul
mov
adcl
add
add
add
xchg
mov
mov
scas
push
andl
xchg
cmp
and
decb
cmp
mov
pop
or
rolb
imul
add
outsb
sbb
push
mov
gs
add
mov
test
nop
adc
sbb
das
lret
and
inc
test
pop
mov
add
stos
dec
out
je
sarl
xor
add
add
cmpsl
xor
movb
sbb
test
leave
add
dec
inc
and
jns
mov
movsl
push
ret
insb
popf
push
movb
popf
dec
and
imul
test
add
sub
imul
stos
aas
and
push
fs
mov
cs
iret
sbb
stc
add
or
pop
pop
addb
jge
icebp
jnp
inc
adc
sub
jp
es
in
addb
push
and
call
bound
pop
js
cwtl
xchg
push
mov
add
das
lcall
inc
fsts
pop
mov
mov
insb
aam
xchg
pop
imul
add
mov
aam
xchg
add
dec
fwait
pop
imul
fisttps
addr16
mov
add
aas
nop
sbb
add
out
mov
xlat
insb
lcall
add
fcoms
sub
stos
sub
iret
dec
sub
add
sub
fs
loopne
roll
mov
dec
lods
mov
jae
mov
jns
fsubl
xor
cld
dec
adc
addb
pop
mov
fs
dec
outsl
ret
sbb
adc
lret
repnz
add
add
mov
insl
pop
stc
sbb
mov
mov
mov
push
iret
das
js
jnp
add
iret
dec
adc
shl
and
cli
dec
lahf
andl
add
mov
add
add
sbb
stos
addb
sbb
mov
fstpl
fsubrs
adc
lock
fistpl
lock
push
add
xlat
cmp
dec
faddl
scas
stc
and
jge
mov
cltd
push
xchg
cs
dec
aam
mov
sbb
stos
add
mov
into
pop
sbb
add
add
inc
add
dec
imul
jnp
inc
in
xchg
test
and
js
repnz
movb
push
sbb
js
jbe
jmp
out
sbb
add
call
rorl
pop
sahf
aad
lret
ss
pop
push
push
push
add
repnz
fidivs
add
add
stc
daa
mov
sub
mov
cmp
xchg
add
lods
xor
sbb
test
sbb
dec
addb
into
ss
mov
sbb
xchg
imul
lcall
adc
and
or
mov
xchg
xchg
adc
lds
mov
insb
vpmacssdql
inc
add
daa
mov
sub
add
gs
jecxz
push
lcall
adc
push
push
or
lcall
mov
mov
push
xor
mov
mov
push
fisubrl
xor
leave
inc
add
push
add
add
lods
push
cmp
jl
sbb
add
or
mov
jle
cld
inc
add
add
adc
dec
push
sub
in
les
int
xchg
fldcw
dec
loopne
icebp
sub
sarl
cmp
add
sar
mov
ss
dec
sub
pop
jg
mov
jecxz
add
in
xor
mov
jnp
xchg
mov
sbb
fsub
sub
rol
outsb
fcmove
add
or
cwtl
xor
mov
xchg
xlat
ss
inc
add
add
pop
movsl
mov
ret
mov
xchg
lret
mov
repz
xor
xchg
inc
int3
push
test
add
cmp
cli
test
sbb
xor
test
xlat
ja
dec
testb
add
jecxz
fs
loopne
stos
mov
daa
hlt
aad
fwait
addb
mov
movsl
jmp
fsub
in
fcmovu
mov
sbb
push
xor
sbb
ucomiss
or
push
or
addb
mov
xchg
jnp
xor
and
and
lea
das
push
pop
inc
in
adc
pop
out
addr16
bound
jns
push
xchg
dec
daa
dec
cmp
leave
or
iret
pop
fisubs
add
xor
in
sub
daa
add
and
push
and
mov
lock
dec
push
jbe
adc
xchg
push
push
add
call
cmp
xchg
cmpsb
in
add
dec
sub
in
push
fbld
lahf
sarl
add
cs
lcall
push
adc
push
insb
and
mov
movb
cld
lret
movb
mov
sub
push
movd
and
pop
test
scas
call
push
add
scas
clc
dec
cld
and
mov
addl
xchg
sub
arpl
add
cmp
cmp
adc
dec
ret
mov
lcall
into
bound
or
test
xchg
push
add
pop
out
cld
pop
fwait
inc
sbb
mov
addb
xchg
sub
cmp
pop
imul
add
mov
add
add
pop
adc
hlt
adc
xchg
or
out
ljmp
data16
or
add
pop
ljmp
loop
cmp
clc
mov
in
leave
mov
fdivrl
les
aas
push
pop
jmp
mov
popa
mul
pushf
add
jle
push
add
outsb
fwait
pop
push
add
dec
push
and
push
stc
cmp
ret
mov
add
cmp
lock
jmp
fisttps
lcall
push
movsb
loope
out
push
add
push
add
xchg
addb
jns
mov
pop
outsl
sbb
and
jp
js
xlat
jg
and
outsw
sub
xor
ret
ja
cltd
imul
add
inc
aad
out
in
and
adc
outsl
cld
inc
add
add
data16
mov
inc
sbb
mov
fsubrs
das
in
add
out
xor
push
cmp
pop
cltd
sub
insl
mov
fdivl
inc
add
xchg
imull
daa
pop
lods
push
outsl
lods
fsubr
push
or
jns
in
cmp
or
nop
mov
addr16
sub
call
add
outsl
pusha
add
sbb
pop
xlat
aaa
adc
je
cltd
adc
mov
push
addb
in
arpl
cwtl
std
test
cmp
ds
fsubrl
into
lods
mov
clc
mov
jge
movsb
dec
in
add
cltd
std
inc
out
std
dec
insl
and
or
sbb
adc
adc
outsb
add
push
cmp
hlt
dec
dec
sbb
xor
jecxz
inc
add
mov
out
cmp
add
fwait
mov
add
fcomi
sub
adc
mov
cli
inc
xchg
xchg
xor
jns
or
inc
add
cld
mov
sbb
adc
scas
cmp
jbe
sub
add
mov
xor
lcall
sub
mov
movsl
mov
nop
adc
clc
scas
mov
test
fbld
pop
push
out
lock
les
xchg
cmc
jb
add
imul
dec
inc
js
mov
addb
xchg
outsb
mov
test
cmp
aad
ret
fidivl
pop
dec
adc
mov
insl
push
sub
add
or
adc
fdivrs
add
mov
outsl
dec
lret
pushl
xlat
adc
mov
mov
add
loopne
or
pop
xchg
jecxz
push
sbb
mov
mov
popf
adc
xchg
and
pop
xor
cmp
push
pop
or
fstpt
test
jne
add
negl
outsl
shr
fwait
outsl
je
stos
lahf
in
dec
lahf
jae
xor
adc
dec
xor
loopne
mov
ds
mov
mov
dec
out
xchg
jne
mov
mov
addr16
cmpsl
push
pop
push
aad
test
std
sub
adc
sbb
nop
icebp
sti
das
in
pusha
add
add
mov
shlb
add
adc
xchg
nop
popa
mov
imul
xorl
mov
or
pop
lea
inc
or
cmpsl
rorl
cmpl
icebp
cmp
xchg
in
push
bound
lcall
jbe
add
loop
in
lea
cmp
fwait
adc
fs
mov
sub
in
mov
std
jl
fs
jno
test
add
and
fucomip
nop
sbb
inc
test
enter
sarl
mov
xchg
fstl
in
mov
out
cmp
pop
add
add
std
mov
add
pusha
add
rcrl
push
das
xor
outsb
insl
dec
imull
mov
dec
inc
sbb
daa
mov
insl
push
rolb
xchg
rolb
mov
imul
xor
pop
dec
sbb
and
mov
mov
xchg
pandn
aad
pusha
add
clc
push
add
jnp
bound
aas
and
adc
insb
outsb
or
int
hlt
cwtl
add
sbb
les
fnstenv
in
push
jno
push
test
addb
jl
add
stos
pop
test
mov
inc
push
loope
les
xchg
xchg
fmull
push
cmc
aaa
out
adc
lds
je
fisubrl
jns
and
mov
test
sbb
cs
and
push
jnp
addr16
in
testl
sub
pusha
add
dec
jg
jo
xor
add
sub
sub
sahf
icebp
inc
add
jne
push
add
xor
icebp
pop
les
dec
xor
dec
cmp
fnsave
xchg
cmc
lock
xchg
mov
add
outsb
mov
sbb
cwtl
loopne
fsubp
sub
xchg
push
mov
loopne
popf
mov
pushf
inc
addb
fldenv
pop
fisttpl
jle
dec
jbe
adc
push
push
jge
add
add
jle
mov
repz
jecxz
pop
insb
fwait
inc
add
dec
cli
pusha
add
in
cmpsl
movsl
in
sub
or
in
pop
pushf
dec
lds
ss
jnp
fucomip
sbb
jb
in
lock
jne
or
add
pop
jmp
mov
mov
xchg
les
aaa
pop
add
addr16
push
sub
mov
inc
inc
add
or
adc
mov
mov
xor
cltd
xchg
ja
lahf
push
dec
call
xor
or
xchg
das
enter
gs
mov
cld
test
mov
xor
idivl
call
sub
xchg
imul
jbe
in
jbe
jb
mov
xor
das
outsl
cmp
jo
pop
push
stc
mov
and
repnz
cmp
clc
xchg
shr
pop
cli
xchg
mov
test
add
and
mov
mov
xchg
mov
outsl
idivl
fimull
pop
jb
sbb
pop
cltd
mov
add
mov
fwait
sub
pop
mov
pop
movsb
mov
or
mov
movsb
lods
adc
add
movsl
dec
xchg
int
sti
icebp
dec
aas
xchg
sbb
and
loop
xchg
xchg
stc
mov
add
jmp
push
movsl
adc
cmp
or
clc
lods
mov
inc
jnp
adc
clc
pop
repz
xor
sub
fnsave
or
mov
inc
push
mov
sbb
imul
aam
into
stos
dec
cmpsb
ret
cwtl
addl
out
sti
cmp
and
dec
xchg
or
mov
cmp
addb
pop
jno
insb
cmp
pop
into
and
cli
jl
ret
cmp
or
xchg
sub
xchg
adc
inc
scas
xchg
jmp
lods
and
lods
in
or
xlat
and
cmp
syscall
int
pop
cmpsb
dec
cmp
jl
lret
ja
out
scas
pop
push
pop
pop
pop
jmp
pop
cltd
into
imul
psrld
add
mov
jge
icebp
push
daa
dec
xchg
mov
ljmp
adc
mov
idiv
lret
and
lods
icebp
cli
pop
push
scas
jne
mov
xor
pusha
add
and
mov
cmp
cmp
sahf
or
jle
add
test
dec
lea
dec
cs
or
sub
imul
mov
xchg
jg
add
mov
iret
mov
dec
or
test
and
imull
fnstenv
test
jg
xchg
adc
jno
add
mov
popa
in
xchg
and
popf
or
mov
lods
ljmp
push
push
xchg
push
movsl
mov
dec
addb
fcoml
xor
nop
mov
pop
popf
aaa
test
arpl
jg
movsl
mov
mov
add
movb
in
jno
push
lods
dec
mov
repnz
mov
or
add
sbb
loop
mov
lahf
push
rcrb
fucom
stc
cld
lock
mov
add
xchg
loop
fwait
daa
leave
xor
xchg
add
in
adc
stos
cmp
es
push
arpl
xlat
dec
xchg
cld
mov
jns
dec
add
sarb
add
or
add
pop
jno
cwtl
xchg
pop
test
or
push
jle
add
data16
mov
add
fisubl
add
scas
adc
cmp
add
xor
cmpsl
mov
push
rdpmc
and
popa
mov
push
mov
iret
and
loope
int
mov
cltd
scas
sub
push
ret
fnstsw
loop
pop
les
and
sub
pop
jbe
xchg
inc
mov
fimull
lea
mov
mov
ret
and
jl
int
stos
adc
or
adc
inc
popf
push
cmp
arpl
xor
clc
jbe
add
mov
cmc
push
add
ss
in
sti
daa
inc
add
push
add
add
push
inc
add
cli
push
jl
jne
add
cmc
ja
clc
fnstsw
push
push
xchg
std
mov
xchg
fistps
jmp
es
sbb
mov
outsb
addb
add
dec
push
in
sub
in
push
ja
and
mov
pop
pop
fistpll
movb
ja
rcr
test
jl
addb
xchg
and
fisubl
add
dec
xor
sbb
ret
lds
lahf
mov
mov
subl
ja
add
cmp
fwait
adc
adc
and
xor
mov
dec
add
movsl
pop
inc
add
adc
add
add
add
add
add
adc
cwtl
mov
je
mov
xor
jb
int3
inc
xlat
jle
xchg
xchg
cmp
hlt
dec
xlat
adc
sub
arpl
inc
add
mov
cltd
fimuls
sub
or
aam
add
inc
out
std
and
sub
aaa
pop
mov
mov
xchg
decl
enter
jmp
mov
fs
int3
lods
mov
test
addb
clc
add
mov
pop
pop
xchg
rol
mov
dec
xor
jg
add
loope
push
adc
add
mov
sub
and
fisubrs
sahf
pop
shrb
daa
outsb
insl
in
jbe
ds
xchg
rolb
addb
aas
adc
stc
repnz
in
scas
xchg
mov
scas
std
add
push
ret
sbb
icebp
mov
add
rcrb
add
and
cmp
dec
lock
movsl
cli
xor
popa
bound
mov
sbb
aad
xchg
push
add
test
adc
out
out
adc
lret
divps
dec
and
jno
push
push
subl
add
add
mov
dec
push
arpl
pushf
lea
mov
in
inc
outsb
and
pop
cwtl
rolb
add
push
popf
pop
mov
adc
fcom
xchg
imul
fisubs
mov
mov
repnz
testb
lcall
enter
sub
add
arpl
jns
jae
pop
sahf
das
fwait
pop
rcrl
nop
sbb
add
push
or
aad
add
sbb
mov
add
mov
dec
xor
movq
les
mov
add
mov
inc
add
inc
fldcw
add
mov
fs
les
jge
lea
add
in
cmpsb
or
sbb
insl
bound
lcall
mov
pop
imul
mov
fisubrl
lahf
sti
repnz
rolb
xlat
gs
andl
les
mov
mov
je
or
add
jl
jp
mov
fnstenv
imull
push
fcmovu
or
ret
xchg
out
data16
push
inc
add
jbe
xor
push
aam
lahf
mov
xchg
out
add
and
adcl
cmpsl
adc
pop
pop
out
sbb
pop
int3
pop
fs
dec
addr16
out
out
xchg
adc
add
dec
mov
sarb
jl
or
jno
xor
sub
jns
pop
xchg
hlt
jmp
push
jecxz
mov
add
addb
add
aam
add
adc
and
mov
jle
repz
stc
pushf
add
rolb
out
lods
push
xor
dec
adc
adc
xchg
out
add
aas
stc
test
add
test
pusha
add
add
ret
scas
aas
int3
ret
mov
stos
cs
xor
dec
add
mov
and
mov
cmp
jo
enter
rorl
sub
jmp
pop
rolb
mov
rcll
aas
sub
and
add
lock
lods
data16
rolb
cwtl
and
mov
sub
popf
ret
leave
cmpsl
out
mov
add
ss
int3
push
xor
xor
sub
scas
aam
jle
fisubs
cli
lret
dec
and
int3
xlat
mov
mov
push
pop
mov
add
arpl
mov
arpl
fcoml
aam
imul
xchg
inc
xchg
dec
push
fnstsw
jno
and
fcomps
es
xor
mov
and
stos
imul
dec
push
dec
inc
add
jp
push
push
xchg
das
push
daa
aad
faddl
movsl
cmpsb
roll
add
loop
idivb
lds
pop
pusha
add
add
add
jmp
xchg
push
addb
sahf
inc
fstpl
mov
in
push
je
jg
mov
popa
int
jmp
add
pop
push
lea
fidivrs
mov
jg
push
sbb
sub
jge
lock
es
mov
sbb
aad
aam
xchg
ficompl
jbe
jae
or
sbb
outsb
roll
fs
add
push
rolb
shrl
cmp
pop
in
xchg
cmp
pop
push
int3
jo
je
dec
notl
fwait
mov
lods
sub
addr16
mov
inc
add
pop
xor
add
das
mov
jno
addl
dec
cmp
or
xchg
jne
pop
in
pop
imul
rclb
popf
inc
add
mov
xor
or
jecxz
mov
mov
outsl
mov
sub
pop
sbb
dec
add
add
and
mov
pusha
add
repz
pop
clc
jae
add
stos
movsl
xchg
popa
xchg
sub
movb
repz
repz
push
test
mov
jmp
fnstenv
scas
pop
add
mov
fists
cmp
cmp
jp
add
bsf
add
hlt
jno
mov
cmpsb
add
mov
mov
push
test
cmp
add
mov
sub
add
add
imul
and
cmp
mov
add
add
push
xor
das
push
fsubl
rcll
daa
push
das
in
sub
stc
mov
push
mov
lods
pop
or
rorl
pop
jo
lods
into
out
into
jbe
loope
cltd
push
sbb
mov
lcall
bnd
loop
ljmp
add
bound
sti
arpl
jae
or
inc
cmp
insl
pop
gs
lcall
aas
jp
push
xor
fstl
ljmp
lcall
adc
movsb
mov
xchg
xchg
test
xchg
addb
and
sub
addb
dec
std
icebp
ljmp
add
and
lea
ret
xor
add
bound
dec
mov
add
pop
jmp
xor
popa
add
push
pop
dec
push
and
xlat
jg
add
cmc
push
aam
in
mov
pop
dec
aad
mov
inc
add
mov
sub
lock
movsb
icebp
shr
out
xor
lret
xchg
inc
add
in
das
inc
roll
test
xor
rcrb
jae
inc
push
cs
jae
jecxz
pop
addb
pop
add
add
cmc
js
call
data16
mov
rolb
stos
inc
je
xor
dec
xor
cmp
jb
or
xchg
adc
int
dec
icebp
addb
sub
or
add
mov
movsb
adc
inc
add
jb
aaa
enter
add
xchg
jp
pop
loopne
jne
push
sub
jmp
lock
out
repnz
mov
push
dec
addb
lods
jmp
push
dec
lods
jle
cmp
fwait
jb
add
cwtl
jne
imulb
add
scas
jge
jb
add
add
sti
sarl
popl
jns
cmpsl
int3
lahf
or
lock
ds
int3
aam
adc
pop
or
les
and
inc
add
xchg
jmp
or
scas
out
sbb
pop
xor
pop
push
or
cmp
xor
add
fwait
aaa
aam
sub
xor
in
repnz
sub
cmpsl
movsb
push
lahf
pop
lahf
mov
mov
jmp
push
pop
xor
outsb
bound
mov
fsts
repz
sbb
sbb
outsb
cmp
xchg
xor
std
sbb
dec
std
mov
lret
mov
cs
add
push
xor
mov
sub
dec
mov
mov
addb
imul
xchg
aad
mov
mov
ja
sbb
fcompl
mov
adc
or
fimull
push
cmpsb
jae
rolb
xlat
cs
or
push
and
or
mov
mov
leave
leave
mov
cmp
fwait
lret
test
pop
jae
lcall
pop
cli
jbe
adc
std
cmpsb
mov
fmul
jge
xchg
cmp
inc
add
andl
in
inc
add
xor
inc
mov
jo
into
push
movb
insl
pop
fsubrl
mov
dec
leave
cli
in
int3
fwait
into
cmp
cmp
out
outsl
xor
or
and
cmp
push
push
gs
mov
jae
mov
dec
mov
sub
inc
add
cld
loop
add
inc
push
mov
mov
sti
jo
sub
push
addr16
inc
cs
xor
andl
nop
ljmp
xchg
lock
jg
jns
mov
adc
pop
es
pusha
add
int3
mov
cmc
jo
mov
stos
data16
cltd
sbb
adc
add
movb
aaa
or
mov
mov
decl
xchg
lods
ficomps
enter
xchg
testl
cmp
mov
pop
lea
mov
rcll
loope
daa
and
out
int
or
sbb
dec
jecxz
shll
fwait
sub
aaa
rolb
xchg
insb
inc
add
repz
in
add
mov
dec
mov
pop
mov
sbb
inc
inc
sub
xchg
bnd
test
mov
cmp
add
mov
and
ds
mov
ret
jmp
add
xchg
mov
inc
sbb
add
es
cmpsl
push
pusha
add
jle
jp
int3
sbb
cmpsl
aaa
ret
jmp
std
repnz
rcll
addr16
fsubr
cmp
into
nop
stc
pusha
add
mov
out
roll
daa
shll
repnz
xor
dec
inc
pop
mulb
add
inc
lock
add
push
in
pusha
add
test
pop
sti
dec
clc
lcall
nop
push
aam
xchg
repnz
add
rolb
mov
scas
xor
sbb
sbb
popf
ljmp
andl
push
movsb
push
lods
popf
out
addb
ficoml
add
and
jmp
xor
pusha
add
mov
add
lods
xchg
cwtl
push
push
inc
add
pop
mov
sbb
insb
insl
or
movsl
movsb
adc
xor
enter
test
mov
pop
and
stos
mov
cmp
jb
outsb
jb
add
adc
add
jge
inc
adc
cmp
add
xchg
cmpsl
into
in
jnp
inc
mov
enter
sar
repnz
or
mov
cmc
pop
pop
mov
outsb
add
dec
pusha
add
pop
add
lds
pop
aaa
or
cmp
cmp
mov
int
fimuls
sarl
xchg
jp
cmpsb
cmc
mov
jne
pop
dec
jno
sub
mov
xor
pop
mov
mov
pop
push
imul
or
mov
and
mov
adc
out
jmp
imul
push
or
leave
in
add
andl
movb
mov
pop
push
xchg
stos
push
cs
pushf
adc
sbb
dec
rcll
mov
std
jo
leave
or
push
fldt
mov
imul
push
xchg
lock
xchg
addr16
mov
push
int
sbb
pop
rclb
jl
xor
add
mov
sub
popf
dec
push
adc
jne
mov
mov
scas
inc
add
loopne
test
push
ja
or
add
daa
jle
pop
jbe
aam
ss
movsl
das
cmp
aam
jae
lret
mov
jecxz
je
in
popa
pop
xchg
pop
pop
cltd
pop
pusha
add
loopne
jbe
dec
repz
leave
cmp
imul
shll
inc
add
pop
aas
lock
fwait
jne
adc
dec
lods
adc
sub
inc
jae
pusha
add
fistpl
aad
and
push
adc
xchg
aam
add
out
sbb
inc
add
xchg
and
lret
int
add
xlat
adc
sub
push
push
xchg
int3
push
add
cmpsl
out
gs
nop
fisttps
adc
repz
popa
lret
pop
cli
nop
fimull
insb
das
pop
hlt
addb
mov
icebp
jp
out
ss
mov
mov
ljmp
fbstp
adc
jae
movsb
stos
iret
mov
fdivrl
cmp
and
insb
stos
lret
push
lea
sahf
mov
mov
add
and
test
mov
mov
mov
lea
jle
dec
add
outsb
shrl
add
ss
or
or
or
sub
sbb
pop
inc
pop
sarl
in
mull
sbb
inc
add
dec
fwait
aas
jb
adc
sub
out
jb
xchg
inc
add
pushf
xor
push
jbe
pushf
mov
imul
jl
scas
clc
mov
sti
stos
mov
sbb
mov
sarl
xchg
test
sbb
div
rolb
insl
iret
inc
cli
dec
cs
add
cmc
xchg
add
adc
stc
jae
in
stos
xor
mov
push
sbb
aaa
pop
aaa
adc
mov
jnp
xor
add
les
gs
pop
ret
das
cmp
jle
int
mov
outsl
sub
and
jle
inc
add
jb
mov
adc
pop
jae
adc
jg
adc
in
gs
lea
mov
pop
out
cli
data16
xlat
cmc
in
loopne
and
add
add
out
orl
ss
int3
js
ss
lds
cmpsl
sbb
out
leave
int3
xchg
out
int3
add
insb
pushf
dec
imul
sbb
lods
mov
jno
loope
das
jg
adc
lret
jnp
int3
jecxz
lea
cmp
popa
ja
addr16
ja
addr16
mov
lahf
lcall
xchg
or
scas
mov
cmp
sub
movsl
addr16
lahf
loopne
sub
mov
decb
xchg
cld
jo
aam
mov
jb
sahf
int
xchg
push
icebp
pop
push
sub
std
cmp
sub
add
add
je
jnp
int
lods
mov
sub
cmp
mov
loope
std
dec
xchg
test
mov
jnp
xchg
stos
scas
iret
and
and
jecxz
stc
inc
sub
push
call
and
jmp
and
cld
mov
inc
ret
popl
scas
loopne
adc
pop
push
push
xchg
das
cmp
cmp
cmp
inc
add
and
jg
sbb
xchg
in
dec
sub
cmp
gs
daa
int
xchg
outsb
std
pop
xchg
mov
jge
shr
loope
ficoml
push
add
shll
add
mov
jle
inc
add
dec
push
lea
add
xchg
or
mov
adc
push
clc
jae
sub
add
and
aam
inc
repz
push
and
add
getsec
sti
sahf
mov
bnd
loopne
or
and
andl
cli
xchg
jo
and
cmc
jecxz
mov
add
xor
out
pop
push
cwtl
ja
add
add
dec
push
addb
fiaddl
test
arpl
xchg
stos
insb
adc
add
add
push
pushf
mov
adc
sub
mov
rcrl
outsb
pop
lcall
loop
ret
iret
das
mov
lock
and
jl
mov
test
push
xlat
inc
add
push
mov
sahf
add
hlt
addr16
xor
add
pop
mov
nop
cmpsl
sub
inc
add
int
inc
dec
jp
push
gs
push
mulb
lock
clc
xchg
mov
mov
jge,pn
arpl
xchg
imul
aad
inc
add
call
adc
adc
imul
mov
xchg
aam
push
push
ja
sbb
jle
cmc
lock
adc
inc
add
jecxz
int3
daa
mov
mov
dec
cmp
push
je
dec
sub
lret
push
clc
mov
pop
adc
ffreep
out
icebp
in
xchg
ljmp
jo
stc
int3
inc
es
lcall
dec
or
out
mov
mov
sahf
pop
and
lods
loope
add
xchg
jge
ss
inc
and
add
cmp
and
cmpsl
out
cs
sbb
xchg
push
insb
fdivs
mov
push
aas
mov
adcl
inc
add
aaa
cmp
sahf
and
push
notb
xchg
cmp
add
add
cmp
stc
cmp
in
push
call
aaa
clc
inc
add
jnp
test
add
push
lret
jmp
cwtl
add
cli
and
fdivl
push
stos
jns
lods
addb
lods
rolb
xor
xor
divl
ds
adc
jmp
aas
mov
sbb
add
ljmp
add
add
aad
daa
push
add
pop
clc
or
icebp
hlt
adc
loope
in
pop
mov
add
mov
mov
add
nop
adc
push
and
sarb
ror
jl
fisttps
jecxz
mov
dec
or
sbb
add
lock
xchg
add
add
jno
add
pop
rorb
ss
push
ffreep
add
bound
test
jne
mov
pusha
add
test
adc
jnp
add
fmuls
mov
sti
xchg
test
add
int
add
mov
inc
sbb
dec
sub
sub
fstl
adc
pop
pop
movsb
and
mov
mov
mov
pop
jl
test
add
flds
push
iret
je
aas
test
inc
add
jae
sbb
pop
xor
add
testb
sarl
jecxz
xlat
adc
sbb
mov
xchg
movsb
cmp
jnp
push
pop
mov
fadds
pop
leave
in
sbb
neg
loope
push
mov
dec
ja
shll
adc
test
bound
outsl
xchg
pop
outsl
inc
add
addr16
popa
jne
lret
adc
idivb
movb
xchg
cmp
fistpll
scas
js
mov
decl
fcomps
or
pop
fimull
mov
mov
adc
iret
addr16
stc
addb
enter
fsubs
mov
ret
aam
xchg
outsb
inc
add
ss
cmp
pop
xor
jmp
insl
jmp
pop
cmp
jg
test
loope
cmp
add
dec
mov
test
pop
insb
stos
cmp
mov
adc
int
jns
push
lods
push
sbb
jne
sub
xchg
pop
pusha
add
add
dec
stos
ja
mov
xchg
adc
add
lds
jmp
sti
xchg
xor
notl
push
fwait
iret
and
stc
jl
or
mov
mov
insb
cmp
mov
fisttpl
jae
dec
stos
leave
popf
icebp
insl
pushf
mov
cmpsl
pop
pop
adc
dec
inc
lods
xor
push
dec
sbb
sub
frstor
add
imul
fnstsw
ja
je,pn
mov
jmp
pop
fcmovu
xor
mov
xchg
js
aaa
mov
mov
jae
add
cs
notl
push
fwait
xlat
cmpsl
into
push
cmc
mov
lods
cmp
das
pmuludq
dec
es
imul
cmpsb
std
pop
add
push
mov
push
jmp
loop
and
xchg
push
int3
mov
scas
pop
lods
pop
xchg
mov
les
mov
adc
std
ss
xor
xor
ja
shll
mov
add
iret
push
imul
mov
ja
pop
cwtl
jae
test
std
les
hlt
jmp
lds
ds
cmpsb
pusha
add
add
test
add
pop
mov
cmp
sbb
xchg
mov
xchg
or
js
sub
pop
es
out
repnz
cmc
push
cli
mov
jbe
insb
sub
inc
adc
add
test
lcall
jp
xchg
or
cmp
cltd
ret
jbe
push
out
and
pop
xchg
mov
arpl
and
mov
add
ficoms
daa
pop
pop
in
add
sub
notb
jmp
scas
and
add
mov
jl
pop
cmp
add
push
add
add
iret
dec
cwtl
push
mov
adc
jno
add
jns
scas
add
pop
pop
xor
arpl
pop
mov
or
sbb
lret
cld
mov
leave
imul
mov
xchg
stos
and
iret
sub
lret
jo
es
nopl
loopne
sbb
add
call
mov
out
ljmp
int3
xor
cld
testl
push
stc
rolb
adc
sbb
lret
imul
jo
daa
ds
mov
dec
cmp
adc
inc
add
mov
sbb
adc
fstl
cmp
pop
shrb
sarl
imul
call
fcmovu
callw
add
add
jecxz
jbe
ss
cmp
add
sub
std
dec
sti
movsb
xchg
xchg
stos
in
add
mov
stos
dec
mov
mov
push
add
inc
loope
lods
mov
pusha
add
mov
insl
ret
mov
xor
arpl
add
hlt
out
fucomip
and
xchg
test
sarb
js
addb
xchg
jle
cmc
ds
add
xchg
das
or
xor
mov
fmulp
xchg
push
xor
add
aam
in
dec
rol
add
jnp
cmp
mov
push
outsb
in
jl
add
and
add
les
aad
neg
fwait
ret
insl
adc
add
mov
pop
mov
in
mov
idivl
test
pop
pop
xor
push
mov
pop
sub
or
addb
insb
out
jnp
mov
jnp
pop
icebp
inc
add
mov
cs
jl
push
sub
add
std
in
add
sub
popa
arpl
sbb
lock
loope
xchg
out
imul
sbb
sub
fcmovbe
pop
jp
movl
outsl
xor
sub
lods
mov
sub
sub
mov
test
add
test
shrb
sub
mov
fldl
ret
lods
scas
adc
cmp
daa
dec
das
jmp
ffreep
add
add
out
decb
add
popa
mov
sbb
push
rclb
jp
add
aaa
push
add
add
insl
dec
int3
repnz
lcall
lods
adc
and
xor
add
adc
jne
aas
sub
jnp
arpl
mov
xor
fwait
loope
mov
mov
dec
movsl
lock
das
xor
in
ret
rcr
push
arpl
or
dec
leave
mov
mov
cmp
scas
sub
sub
xor
int3
test
add
addr16
testb
xor
sbb
add
dec
out
faddl
loope
cltd
inc
add
xorl
dec
mov
pusha
add
movsb
lds
pop
cmp
ljmp
pop
repz
push
jnp
das
push
add
arpl
jbe
jae
dec
jbe
cld
and
mov
mov
mov
icebp
mov
dec
fs
adc
mov
cli
push
jge
cltd
mov
mov
push
jmp
pop
jl
or
es
popf
xchg
inc
add
sub
xor
and
and
loopew
daa
nop
mov
dec
test
push
ds
adc
clc
inc
add
ss
sub
ljmp
jno
stos
arpl
lock
dec
lcall
lods
into
test
enter
iret
ds
fildl
mov
jnp
stos
jecxz
nop
and
in
aam
sub
fnsave
addb
adc
ret
clc
aas
scas
xchg
roll
fistpll
sbb
imul
cmpsb
bound
fnstenv
mov
mov
das
ja
in
dec
jo
je
fidivrs
mov
adc
or
scas
push
pushf
pop
dec
insl
add
add
insb
jns
push
mov
ret
ss
rolb
cmp
cmp
dec
jb
add
cmp
or
in
cmp
nop
cmpsl
stos
mov
add
popf
aaa
mov
mov
in
cwtl
and
sbb
push
pop
adc
ret
ds
scas
imul
pop
xor
add
inc
add
sti
lret
pop
inc
add
test
or
loope
mov
pop
test
push
js
addb
add
fmull
gs
push
gs
out
add
stc
inc
das
jo
push
add
and
out
lcall
add
loope
aad
adc
pop
mov
add
jbe
hlt
dec
ja
sbb
add
lahf
cli
lret
fistpll
iret
imul
push
cmp
push
addb
cmp
add
cmp
add
sar
inc
add
fs
aaa
jmp
jbe
add
stos
and
aam
add
clc
mov
ffreep
add
add
add
aas
push
add
fsubrs
out
outsl
int
idivl
or
jo
push
and
mov
push
inc
je
imul
adc
fs
and
lea
movb
xchg
add
lds
movb
add
add
xchg
adc
and
and
cmp
cld
inc
mov
push
mov
addb
add
fistpll
cld
imul
dec
rolb
sbb
dec
jne
outsl
es
sti
addb
xor
xorl
add
xor
ljmp
sahf
ret
inc
add
add
add
add
fstl
sub
aad
test
fmull
mov
inc
add
fldl
cli
repz
adc
push
xchg
hlt
push
clc
imul
fbstp
test
aaa
pop
cld
rclb
lcall
mov
add
out
in
mov
and
dec
jmp
mov
mov
mov
int
push
add
test
loop
ret
andl
call
add
jne
pop
lock
imul
nop
cmpsl
inc
fwait
aad
arpl
fstpt
add
add
loope
ljmp
div
xchg
mov
outsl
shl
or
pop
mov
cmp
fcompl
ds
cmpsb
mov
mov
ljmp
adc
js
aas
adc
or
or
sub
add
or
inc
add
cmc
loopne
add
sbb
jmp
cwtl
jae
add
add
add
add
inc
add
add
cmp
int3
ficoms
sti
aaa
movsb
dec
rolb
int3
sbb
pinsrw
xor
ret
out
cmp
bound
mov
add
push
add
dec
addb
ret
mov
add
lods
int
andl
inc
jo
sub
movb
shrl
aas
jle
outsb
lock
in
popa
xchg
pop
mov
add
pusha
add
pop
dec
insb
jmp
inc
add
cmp
cltd
xchg
test
and
add
test
aam
add
cs
add
mov
mov
push
faddl
add
popa
and
cli
leave
in
jmp
add
xchg
outsb
mov
test
out
mov
test
ja
out
rolb
cmpsl
mov
xchg
cmp
ss
add
and
pop
mov
mov
imul
pop
pop
lods
or
dec
xchg
or
mov
and
xchg
repnz
add
cmp
mov
insl
in
gs
xchg
xor
xchg
xchg
pusha
add
mov
pop
pusha
add
sbb
cmp
rolb
pop
jnp
cmp
pop
mov
adc
scas
pop
into
push
cli
cmp
and
mov
xchg
jl
call
inc
push
mov
jp
std
out
xchg
rolb
mov
jge
add
std
jnp
outsb
ss
fs
mov
repnz
clc
sub
nop
insb
dec
stos
mov
xor
add
pop
jp
inc
sti
out
inc
pop
pop
cmp
cmp
xchg
inc
ret
out
stos
addb
adc
out
mov
cli
dec
push
add
xchg
add
outsl
hlt
addl
scas
imul
mov
push
mov
sbb
sbb
cmp
int3
fbstp
mov
adc
xor
or
dec
mov
les
sti
push
imul
lahf
pop
mov
movsl
dec
mov
xchg
sub
xor
dec
add
icebp
xor
push
add
jmp
add
sahf
sub
pop
je
and
add
inc
add
push
adc
mov
stos
jbe
adc
push
add
xchg
inc
add
js
or
das
imul
movsb
jbe
add
clc
je
add
add
lcall
xchg
loope
mov
push
adc
jmp
jo
mov
jmp
sub
inc
xor
cmpsb
lods
add
mov
leave
jnp
lret
enter
push
imul
inc
fs
jne
aad
cwtl
dec
cmpsl
cs
push
or
push
mov
iret
fimuls
dec
dec
cmpsl
sbb
and
in
add
ret
add
jnp
dec
jp
mov
push
cmp
lods
sub
mov
sub
lods
fwait
cmc
in
sub
pop
xchg
shll
inc
scas
ds
iret
aas
mov
repz
mov
cs
mov
add
les
or
std
insl
mov
outsl
test
xchg
push
int3
out
cmp
incb
roll
inc
sti
leave
lea
pushf
jne
push
mov
ja
cmp
add
mov
outsl
pushf
jno
jbe
adc
mov
out
int
ljmp
add
ja
mov
mov
fmuls
inc
add
fwait
and
jp
gs
xchg
fidivs
pop
sub
inc
add
mov
test
fildl
sub
pop
xchg
sub
mov
out
pop
xchg
push
pop
pop
mul
inc
add
fwait
push
add
add
fcmovnbe
push
add
ret
jno
aam
ja
cmp
inc
inc
add
jbe
add
xchg
dec
add
arpl
mov
pop
xchg
jae
hlt
jnp
pop
aam
sbb
sbb
call
cmp
js
push
inc
add
jnp
iret
outsl
movsl
cmp
mov
test
jle
idivl
add
lods
clc
icebp
jge
mov
inc
adc
and
push
nop
int
scas
imul
mov
cmpsl
jae
add
sbb
cmp
or
pop
xor
push
mov
leavew
imul
out
int
dec
add
leave
das
pop
inc
sbb
or
and
mov
addb
popa
xchg
jb
xor
xchg
lcall
scas
lea
push
repz
add
jns
ljmp
bound
scas
push
pushf
mov
bound
mov
or
xchg
cmp
sub
add
je
lcall
add
sub
lahf
mov
fcoml
mov
sbb
repnz
jns
in
ret
pop
add
add
jp
push
in
in
xor
fstl
ficoml
jns
or
add
xor
movsb
mov
add
std
sarl
pop
dec
push
mov
mov
add
ss
bound
lret
mov
xchg
xor
roll
mov
lds
add
xor
add
dec
leave
repz
out
leave
adc
pop
mov
pop
adc
mov
xor
pop
aad
push
add
jnp
mov
mov
push
xlat
jg
insb
jl
jae
imul
lea
mov
js
addr16
out
fwait
cmc
ljmp
add
xchg
push
push
sub
add
mov
test
enter
loop
addr16
add
dec
lcall
adc
and
movsl
shrl
xor
cmp
aas
insb
jnp
and
jle
add
adc
mov
mov
lcall
test
fdivrp
mov
mov
add
push
jns
add
and
lds
shl
adc
mov
add
cmc
lods
test
add
insl
mov
cmp
mov
int
adc
cmpsb
dec
push
mov
dec
addb
mov
loope
add
cmp
iret
pop
pop
scas
push
fmul
inc
dec
jne
xor
add
lods
lcall
aas
sub
out
std
mov
daa
shlb
add
sar
pop
jecxz
or
ljmp
dec
test
fdivr
pop
mov
add
jns
jp
mov
int3
add
jno
nop
and
dec
int3
add
lmsw
loope
xchg
gs
inc
inc
pop
inc
add
les
pop
jmp
addb
nop
repz
ficoml
movsb
inc
add
pushf
gs
addr16
loop
inc
add
nop
push
sub
lods
lea
test
mov
sub
push
negb
add
jnp
jnp
add
add
mov
add
stc
adc
aaa
sub
rorb
shlb
and
gs
mov
sbb
adc
mov
push
add
xchg
jbe
add
push
dec
mov
rclb
ret
rolb
lcall
mov
pop
rcrl
jae
les
inc
lret
jle
or
ficoml
arpl
lock
mov
mov
sbb
dec
lock
and
sub
fimull
push
std
push
push
push
clc
mov
add
mov
add
cmp
sbb
jns
add
fwait
cs
and
ds
inc
and
into
cli
icebp
fiadds
clc
outsl
mov
add
popa
loop
mov
add
outsb
cmpsl
mov
xchg
sub
mov
jmp
enter
insb
xchg
sub
adc
push
rcrl
sub
or
xchg
insl
adc
xlat
mov
addb
mov
stos
repnz
inc
adc
mov
xor
xchg
jl
lods
and
lods
xor
adc
add
xlat
fldcw
pop
jg
rorl
xchg
pop
ficoms
add
sti
lds
cltd
les
add
daa
mov
test
adc
and
fnstenv
test
mov
xchg
adc
cwtl
ja
repnz
pusha
add
push
add
inc
mov
iret
cld
mov
adc
mov
inc
data16
mov
subl
clc
push
adc
in
push
inc
add
adc
stos
insl
test
hlt
jne
xor
push
add
enter
mov
add
iret
cld
aad
add
sub
incl
add
and
data16
dec
sbb
mov
add
add
inc
add
in
popa
fmul
xchg
jge
cli
xchg
idivb
add
lahf
push
jl
xchg
and
call
and
cld
sbb
sbb
aam
dec
arpl
lahf
mov
xor
out
dec
es
sub
xor
rolb
and
addb
popf
enter
mov
addl
stos
and
mov
xor
or
dec
fisttps
cmp
push
ja
popf
leave
inc
add
or
arpl
sbb
leave
cmpsl
mov
jmp
fwait
and
adc
pop
inc
pop
sbb
pop
loopne
les
test
lret
xchg
push
das
dec
mov
js
popa
pop
rorl
mov
push
dec
dec
cmp
insb
inc
add
and
add
ja
scas
dec
out
or
mov
pop
mov
mov
out
lcall
decl
jle
mov
xor
leave
pop
test
cmc
movsb
leave
add
imull
inc
add
loope
movb
cs
xchg
mov
inc
add
jecxz
ror
mov
sub
mov
inc
add
or
mov
pushf
stos
ss
push
add
mov
push
fisubs
push
add
movsl
jb
sub
jbe
andl
push
jmp
movb
jge
jne
xor
adc
out
out
cmpsb
daa
shll
add
dec
dec
cs
loopne
push
js
sub
ljmp
mov
cmp
fdivrl
fsubr
cwtl
push
bound
mov
lcall
pushf
mov
push
aas
addb
mov
mov
xchg
inc
repz
adc
jo
dec
cld
sbb
add
sbb
xor
push
addl
fcmovnb
sti
cmp
imul
mov
decl
mov
fwait
bound
sub
sub
xchg
and
cli
sub
bound
mov
in
cltd
xlat
mov
add
roll
add
loope
jo
orl
int
or
jmp
add
gs
ret
out
add
ret
push
clc
and
add
jl
bnd
cmpl
mov
js
mov
and
addr16
mov
add
adc
xor
add
shrb
fs
scas
jge
jbe
add
add
jle
lods
aaa
push
repnz
mov
adc
and
pop
rcl
xor
mov
jae
add
into
mov
sub
add
pop
pop
in
lds
fmulp
pop
insb
or
repnz
cmp
stos
je
int3
pop
ficomps
sbb
push
aas
push
add
cmpsl
inc
dec
pop
mov
aaa
dec
cli
out
rolb
rclb
xor
mov
jecxz
mov
sbb
mov
sub
add
cwtl
leave
pop
dec
xchg
loop
xorl
loop
dec
movsb
ss
mov
lahf
shr
scas
in
pop
adc
xchg
jb
gs
orl
xchg
arpl
pop
pop
int
mov
cld
add
push
push
testl
jo
hlt
out
push
add
nop
or
lahf
mov
lds
push
add
out
ret
add
rcrl
cmp
and
mov
dec
cmp
inc
add
xor
pop
adc
sbb
imull
xchg
mov
sub
lods
bound
repnz
mov
sbb
ljmp
flds
xorl
ficompl
jnp
test
push
lds
outsl
cltd
mov
push
incl
adc
add
mov
xor
fcoml
add
out
out
push
jb
adc
mov
roll
pop
add
movsl
in
lods
fildl
add
xor
pop
push
outsl
lds
mov
stos
jg
mov
in
imul
sahf
out
inc
add
xlat
mov
mov
js
add
adc
outsl
jbe
pop
mov
sub
in
mov
xchg
scas
test
cmpsb
push
sbb
xchg
jecxz
sub
fcoml
int3
out
jbe
xchg
mov
test
or
in
je
jecxz
push
cmpsb
cli
ss
paddq
jne
jge
jo
inc
mov
std
lods
dec
add
mov
add
fbld
lea
or
ss
repnz
jns
mull
jnp
les
cld
xor
jg
mov
cmp
sub
inc
add
aas
test
imul
adc
jae
stc
addb
mov
mov
je
and
aam
add
lods
sti
sub
cltd
call
out
sub
add
mov
xlat
mov
pop
xlat
or
mov
add
add
inc
add
ljmp
repnz
mov
inc
add
arpl
popf
push
inc
add
push
fdivrs
in
sbb
jle
pop
lret
jle
mov
xor
inc
add
or
ss
repz
stos
aas
pop
fwait
test
mov
push
jb
add
test
or
inc
lods
addl
jbe
cmp
sahf
jns
aam
mov
sbb
inc
je
mov
add
pop
fistpll
imul
fcoms
jo
rorb
std
dec
cmp
mov
xchg
test
add
push
add
dec
dec
mov
push
lds
shll
add
mov
jg
add
mov
jg
loope
mov
adc
movsb
adc
mov
cmpsl
cmp
add
mov
push
js
movb
addr16
in
bound
dec
inc
add
maxps
add
xchg
add
loopne
mov
push
adc
cltd
gs
shl
hlt
jnp
out
enter
in
lahf
leave
outsb
decl
push
jno
addb
mov
dec
jl
cmpsl
push
add
add
sbb
ja
push
movsl
fs
js
fld
xchg
cli
jl
dec
cltd
mov
cmp
cmpsl
es
mov
or
mov
lahf
add
jo
jp
ret
jecxz
dec
cmp
jbe
and
mov
add
add
pop
sbb
lea
cmp
push
jno
xchg
movb
dec
pushf
pop
mov
mov
mov
cmc
inc
inc
pop
repz
ficomps
and
stos
inc
add
rcr
bound
addb
jmp
jge
xor
scas
xor
add
in
push
insb
addb
lea
dec
add
sub
lods
icebp
dec
mov
sub
add
push
out
cmp
lea
jmp
add
add
mov
mov
int
xchg
test
js
icebp
add
out
jge
imul
xor
loopne
xchg
adc
add
pop
mov
push
lea
add
mov
bound
jb
jge
jnp
cmp
xchg
pop
inc
mov
in
ja
add
add
and
repz
loopne
add
cli
aad
push
nop
call
dec
bnd
dec
xor
lock
lods
push
sub
jo
movsl
pop
sbb
xlat
scas
inc
add
jge
mov
sub
sub
test
call
add
add
mov
inc
add
mov
loopne
add
mov
push
xor
out
lds
xchg
mov
mov
or
fsubrl
sbb
mov
xor
popf
test
jmp
loope
cmp
aaa
aaa
push
mov
add
adc
sbb
cs
lcall
cld
inc
add
pop
dec
jns
xor
sbb
mov
sub
dec
sub
mov
lds
xchg
sub
daa
cmpsl
adc
sub
mov
mov
cmpl
xor
cmc
adc
movsb
test
jns
mov
dec
push
test
add
cmp
into
xor
xchg
and
xor
cmp
rorl
mov
in
mov
sub
sub
add
lods
push
xlat
xchg
mov
mov
add
inc
add
movsl
je
mov
add
jmp
mov
or
mov
and
cwtl
xchg
push
cmc
jge
add
scas
popa
cmp
inc
add
add
adc
dec
sbb
scas
movsl
mov
outsl
jnp
into
rcr
loop
add
mov
adc
push
scas
mov
dec
imul
je
loope
ficomps
and
jecxz
add
cmp
ret
je
lahf
mov
xchg
xchg
and
jnp
imul
xor
add
movlps
push
xor
add
mov
in
lea
icebp
cmp
xchg
addb
mov
add
add
arpl
xchg
loopne
ret
add
ret
ret
xchg
pop
lods
push
mov
ljmp
jae
sti
or
ja
lcall
jbe
es
mov
inc
add
add
movsl
or
test
jp
add
movsl
jmp
adc
aad
jb
lret
sub
push
mov
cli
jbe
fisubs
jmp
xor
cmpsl
add
adc
adc
aad
pop
mov
jae
data16
es
outsl
xchg
pop
popa
pop
and
or
add
fst
xchg
xchg
mov
popa
fdivl
bnd
rorl
popf
jae
stos
or
inc
xchg
push
add
insb
sub
test
push
add
into
add
cmp
xorl
mov
adc
popa
cmp
add
movsl
icebp
or
leave
or
dec
outsb
addb
add
jo
popf
loopne
addb
push
scas
lods
js
jle
out
jo
outsl
pop
fstps
mov
decb
sti
mov
ja
imul
loopne
pop
icebp
dec
jns
add
es
and
dec
mov
jb
int
add
lock
int
add
mov
shll
jle
fmulp
outsb
inc
add
push
stc
jne
sub
lret
xor
dec
lea
sub
mov
dec
ljmp
fwait
shl
in
and
mov
rolb
dec
mov
inc
add
mov
add
sahf
out
xor
mov
bound
inc
add
repnz
add
icebp
cmp
movb
call
in
ja
add
in
loop
push
addb
add
sub
sub
cmpl
les
mov
pop
push
add
or
aas
xchg
leave
and
xchg
jns
jns
mov
scas
fwait
adc
rcll
add
jp
cmc
add
jne
imul
adc
adc
in
jge
repnz
lock
loop
fldt
adc
or
mov
icebp
cltd
inc
add
inc
add
call
and
scas
sub
movb
xor
fldl
add
lds
fildll
test
inc
sahf
ftst
xor
mov
inc
psrld
fwait
shl
fwait
push
clc
cmp
out
arpl
adc
scas
cmp
dec
mov
mov
adc
mov
add
in
dec
mov
popf
in
fisubrs
add
cmpsl
shll
pop
fistl
rolb
sbb
add
aaa
movb
ljmp
inc
add
add
test
imul
cmp
lods
and
ja
sub
push
cwtl
aad
popa
pop
call
ljmp
push
out
mov
enter
movb
cmp
mov
outsl
sub
add
dec
dec
adc
std
or
std
pop
lret
lahf
sbb
adc
call
mov
and
mov
lock
push
pushf
ja
and
gs
add
jge
xchg
mov
push
xor
mov
add
stos
dec
xchg
dec
cmp
sbb
popf
es
jns
pop
into
push
in
jnp
fucom
idivb
in
inc
or
inc
add
imul
scas
daa
movsb
sub
add
jmp
sbb
sub
lods
or
outsb
pop
push
jle
jo
xor
fimuls
fwait
mov
scas
mov
and
lds
test
push
sbb
xlat
xchg
jl
mov
mov
in
adc
dec
fldcw
pop
nop
bound
dec
pop
lahf
sub
add
imul
jle
pop
fisttps
in
mov
push
push
test
insb
lcall
pushf
push
mov
pop
sahf
cmp
fiadds
add
push
je
lahf
push
add
out
loop
add
cmp
gs
iret
add
xchg
adc
push
mov
stos
xchg
out
cmp
add
outsl
push
dec
mov
lods
jle
mov
mov
mov
add
push
sbb
mov
rclb
cmp
xchg
xor
cs
cltd
test
ds
inc
add
insl
push
lds
ret
scas
adcl
pop
mov
xchg
mov
add
add
aam
add
mov
add
mov
pop
addr16
les
test
inc
add
out
lods
xchg
enter
and
and
test
adc
pusha
add
pop
add
mov
xor
loope
xor
dec
pusha
add
ja
push
in
inc
jp
rcrb
xchg
adc
stos
vpsrld
inc
add
sahf
cmp
outsl
sbb
and
scas
vpandn
movb
addr16
repz
add
add
insl
push
in
int
dec
lea
xchg
mov
loop
push
or
inc
not
inc
add
jbe
or
jnp
add
mov
xchg
adc
mov
adc
mov
scas
and
in
enter
aad
arpl
jae
add
notl
or
imul
add
into
xchg
jns
ss
sub
push
fiaddl
adc
add
xchg
lock
mov
push
daa
jp
push
inc
add
shl
add
and
popf
and
mov
inc
add
push
mov
inc
add
jle
dec
mov
add
aad
into
fisttps
stos
imul
inc
pop
cmp
out
jne
sbb
cwtl
movb
or
stos
xchg
stos
or
and
fadd
add
jb
aas
adc
jmp
scas
jmp
decl
fstps
movl
test
cli
pushf
js
cmp
add
in
out
xor
xor
testl
and
inc
add
fisttpll
sub
jbe
xor
nop
and
loopnew
add
jmp
leave
je
mov
call
push
stos
push
and
test
sbb
iret
pop
shrb
sbb
adcl
or
add
add
xchg
cwtl
rolb
fwait
in
in
add
mov
or
int
or
cmp
fwait
int3
pop
or
mov
fcoms
cmp
dec
inc
add
addb
add
imul
stos
inc
shlb
pop
mov
mov
movsb
lods
add
xor
adc
popa
aam
inc
test
fcoml
pop
lods
lds
aas
xor
or
pop
ret
ret
in
movl
test
movb
je
mov
or
cmp
je
xchg
cli
outsl
xchg
popf
pop
pop
cmp
mov
or
daa
or
lock
rorl
cwtl
fadd
add
iret
insl
jae
mov
sti
inc
lods
inc
add
enter
stos
outsb
dec
cmp
xor
rorl
das
dec
lret
jle
mov
aaa
ret
addb
jo
dec
mov
cli
ljmp
mov
add
cmp
mov
add
jo
std
inc
add
and
mov
adc
jb
xchg
push
adc
push
aad
xor
add
push
adc
and
fistpll
push
jge
or
add
add
push
sub
cs
jecxz
inc
add
cmpsb
addl
mov
mov
inc
add
mov
adc
xorl
xor
insl
adc
cli
jecxz
jecxz
add
or
inc
xor
add
loop
imul
popa
mov
adc
imul
xchg
bound
adc
cltd
adc
imul
add
mov
or
add
ss
scas
and
loope
mov
shl
and
out
sbb
sahf
jmp
adcl
addb
add
dec
jnp
cmp
inc
gs
repz
rolb
stos
aas
insb
stos
fidivs
sub
fs
fs
push
push
test
add
cmp
rolb
shl
jae
inc
rcr
ret
add
pop
inc
outsl
xlat
out
adc
xor
push
movsl
or
jge
sub
inc
add
cs
dec
or
out
inc
popa
cmp
xacquire
add
dec
cli
jo
mulb
jno
add
xchg
pop
cmp
rcr
cmc
loope
jne
rolb
add
cltd
jbe
add
lea
xor
cs
mov
pop
mov
mov
push
decb
add
fisubrl
sub
add
loope
lock
out
adc
xchg
ret
scas
adc
push
insb
mov
inc
movsl
cmp
xchg
mov
ret
pop
fs
mov
arpl
into
fwait
sbb
jns
fcompl
jno
mov
pusha
add
add
sub
mov
fnstsw
repz
in
popf
jle
arpl
or
dec
sub
ret
std
inc
add
cmp
add
and
imul
bound
and
xchg
mov
jae
or
rolb
pop
ss
or
in
dec
int3
ljmp
add
dec
jle
xor
add
movb
rolb
xchg
xchg
lahf
lds
in
add
cs
sti
and
add
push
mov
lds
loope
inc
add
adc
dec
mov
jl
and
out
cmp
sub
pop
or
scas
xlat
jo
adc
mov
sbb
mov
xchg
dec
fsubl
mov
add
stos
ret
movsl
jle
and
jl
jp
and
loop
push
ficompl
sbb
and
add
xchg
dec
out
in
sub
pushf
lods
js
popa
pop
ss
cmc
adc
xor
pop
inc
pop
push
addb
mov
inc
add
fs
inc
or
fcmovnbe
cmpsl
push
push
out
push
xchg
loop
adc
std
aas
stos
jmp
cld
push
shl
or
lcall
movsl
mov
rolb
and
push
pop
lods
arpl
out
iret
or
sahf
dec
les
cli
mov
fsubp
jne
mov
mov
in
pop
int
stos
scas
sub
adc
popa
jmp
and
clc
sbb
addb
push
cwtl
inc
add
mov
ljmp
pop
mov
add
mov
jg
jecxz
pop
xchg
jecxz
clts
add
push
lods
sbb
dec
dec
cmpsl
pushf
bound
aaa
jl,pt
xor
xchg
xchg
sbb
clc
aam
hlt
cmp
jmp
lock
cmpsl
or
pop
mov
test
lea
repnz
push
ss
es
mov
lret
mov
sti
inc
add
cwtl
sub
mov
pop
shrl
mov
insl
loope
or
fucomip
xlat
adc
and
add
test
cmpsl
sbb
jno
mov
mov
inc
add
arpl
nop
pop
repz
xchg
push
imul
add
xor
mov
scas
xchg
addr16
adc
shll
add
push
enter
loope
cltd
push
push
add
dec
lds
imul
ret
stos
xchg
sub
fcmovnb
add
jmp
push
les
ret
cmp
mov
jg
dec
cmp
xchg
push
inc
stos
mov
cmc
sub
and
cmp
mov
lcall
xchg
clts
add
xchg
ret
mov
and
cmp
and
cmp
xchg
jmp
or
add
enter
xchg
jg
mov
jno
adc
aam
clc
inc
add
fldcw
div
flds
clc
pop
lock
inc
jp
add
xor
and
mov
xchg
sbb
pmulhw
and
repnz
jne
dec
test
add
repz
repz
jg
push
add
nop
cmc
xlat
cmpsl
mov
dec
push
loopne
shrl
ds
add
stc
sti
les
addb
or
sub
aas
mov
add
int
ds
icebp
test
xor
add
test
nop
dec
sbb
ret
loop
add
and
and
sbb
mov
addr16
add
sbb
cmpsb
push
push
add
pushl
je
testb
les
sbb
add
lock
repnz
rorl
shll
mov
sub
add
add
xchg
in
nop
inc
std
inc
add
pop
and
xor
mov
enter
sbb
push
sahf
mov
frstor
jp
ds
lcall
test
loop
add
inc
add
adc
cltd
mov
or
mov
fisubl
hlt
es
adc
lods
fstpt
add
movsl
cmp
negb
dec
inc
add
cmc
jbe
xor
in
jge
int3
rcrl
les
jge
push
dec
cli
fimuls
jmp
dec
pop
call
mov
push
mov
add
push
mov
in
push
xchg
lahf
cwtl
stc
jmp
in
jnp
sbb
pusha
add
dec
cmc
jmp
imul
push
add
je
add
inc
or
add
jnp
jne
add
out
adc
out
mov
push
adc
jecxz
xchg
mov
jp
pop
xchg
mov
add
jns
mov
lods
jge
stc
sub
fwait
mov
mov
jle
add
mov
adc
inc
add
push
movsb
mov
add
add
add
add
push
add
sub
push
call
pop
pusha
add
aas
imul
clc
adc
ffree
add
mov
leave
pushf
rolb
and
in
in
scas
js
imul
loope
insl
sbb
mov
add
mov
dec
out
add
testb
xchg
pushf
push
lea
mul
jp
stos
adc
test
inc
int
inc
popf
ja
scas
sbb
clc
jne
mov
addb
mov
sbb
pusha
add
inc
sub
out
lock
fcoms
mov
shl
clc
sub
xchg
mov
push
add
push
and
mov
int3
push
add
jb
mov
or
xor
cwtl
lcall
push
jno
push
lock
sub
aas
xor
es
add
in
fistps
mov
addr16
mov
cmp
scas
nop
cmp
outsb
out
or
pusha
add
lods
xchg
repz
rorl
std
or
mov
movb
add
ds
adc
mov
inc
mov
je
push
dec
enter
movhps
outsb
hlt
out
ss
mov
in
cwtl
outsl
in
jae
xor
push
mov
scas
jge
lods
ja
add
nop
fadds
xchg
outsb
push
ret
add
or
mov
dec
add
popf
pop
jo
jmp
lret
sub
in
int
inc
add
ret
clc
pop
mov
lds
xor
ljmp
sti
pop
xorl
mov
xchg
outsb
push
ds
push
mov
mov
mov
add
mov
sbb
insb
sub
int
in
dec
xor
addb
add
mov
div
or
repz
outsl
inc
and
movsl
cld
pop
addr16
outsb
xchg
imul
pop
sbb
xor
cmp
inc
pop
xor
addr16
push
mov
push
push
add
pushl
jl
pop
mov
add
pop
lock
pop
dec
ret
xchg
sbb
adc
das
add
jmp
xchg
in
nop
aam
mov
xor
mov
mov
mov
pop
add
lret
pop
dec
dec
in
scas
test
dec
mov
dec
movsl
test
dec
xchg
xchg
std
repnz
testb
lock
and
push
sub
xor
push
pop
fldl
add
cmpsl
inc
add
mov
xchg
mov
ds
pop
out
call
mov
insb
sar
scas
inc
pop
xor
inc
add
xchg
ljmp
add
xchg
dec
loopne
in
xor
test
adc
add
addr16
stos
pop
js
or
mov
cs
and
lea
mov
lea
jmp
hlt
es
add
xchg
mov
addb
or
enter
fistps
push
add
mov
subps
add
movsl
xor
sbb
or
push
cmp
xor
in
inc
add
adc
loope
jle
jle
stc
test
cmp
sub
js
cld
jp
es
rolb
repnz
sbb
ret
call
fcomp
mov
add
hlt
pop
mov
cmp
aam
mov
aaa
cmpsl
or
in
push
and
push
pop
aam
rorb
cmpsl
inc
add
sbb
or
xchg
jne
shrl
icebp
dec
aaa
movsb
fnsave
xor
je
in
out
dec
je
movb
adc
add
xlat
test
push
xchg
sahf
lods
push
leave
imul
mov
ljmp
movsb
push
lea
mov
push
cmovge
sarl
inc
inc
add
roll
test
mov
mov
icebp
nop
sbbl
add
add
sbb
and
movsb
dec
in
ds
jp
aas
and
sbb
stos
or
push
mov
add
scas
ret
mov
sub
fisttpll
xchg
dec
push
aad
js
cs
or
test
in
add
adc
shll
xlat
clc
cmp
in
aas
pop
push
add
in
mov
inc
add
into
mov
sub
lods
aam
adc
xchg
add
push
lea
test
xchg
imul
mov
mov
out
sub
imul
jne
or
iret
fsubp
push
dec
fidivl
and
adc
dec
adc
push
int3
dec
dec
jmp
int3
sbb
into
sub
loop
aas
shrb
les
sub
add
jae
adc
sahf
hlt
icebp
out
inc
add
movsb
outsl
inc
add
pusha
add
out
inc
push
in
fdivrl
sbb
insb
scas
adc
xchg
add
sub
add
add
iret
pop
jb
lods
fucomip
xchg
ret
adc
xchg
pop
test
pop
adc
mov
xlat
stc
stc
ds
icebp
pop
inc
add
icebp
inc
add
dec
or
push
imul
inc
test
loopne
jecxz
mov
mov
xchg
cmpsb
xchg
pop
and
loope,pt
pop
push
push
bound
fiadds
dec
js
xor
in
ja
add
sarb
mov
dec
insb
xor
movsl
push
aam
movsb
sub
xchg
sti
mov
pop
addl
add
mov
sti
cld
dec
imull
mov
fucomi
push
mov
inc
add
add
push
cmpsl
test
mov
bound
scas
cmp
int
add
push
mov
std
addb
add
hlt
push
pusha
add
add
mov
add
push
aam
adc
mov
pop
jecxz
das
dec
std
loopne
movb
sbb
out
xchg
addb
out
or
cli
das
mov
cmp
icebp
jo
sbb
and
xchg
arpl
das
mov
movsl
movb
mov
add
sub
enter
repz
dec
mov
aad
aaa
inc
adc
inc
add
mov
sbb
mov
cmp
ffreep
mov
arpl
pop
aas
jmp
add
fwait
dec
test
fwait
insl
push
pusha
add
fists
add
jmp
add
dec
stos
clc
xor
mov
addr16
mov
push
or
jns
inc
add
sbb
std
xchg
cmp
cmp
jne
jl
aad
orl
xchg
push
pandn
cmp
add
test
cmp
xor
xor
add
mov
rcrl
push
add
in
cli
or
bound
imul
xor
cltd
stos
jns
add
shll
sbb
stc
sti
pop
repz
les
or
add
aas
test
int3
outsb
push
jmp
aam
cld
push
or
dec
push
rolb
add
movsb
sbb
or
je
inc
scas
xchg
sbb
or
xor
ss
stos
dec
add
and
in
dec
fstpt
lds
add
sbb
adcl
xchg
inc
add
sbb
or
subl
pop
icebp
cmpl
add
add
add
les
lea
fnsave
cwtl
ljmp
in
mov
test
cmp
addr16
in
xchg
fiaddl
add
add
cli
call
cltd
push
ja
pushf
movsl
inc
add
jp
das
pop
or
sub
sbb
cltd
push
mov
xlat
fs
jbe
nop
addl
inc
add
mov
pop
mov
lods
fnclex
scas
lahf
fwait
int3
scas
cmp
mov
repz
scas
lock
xchg
and
cld
mov
push
cmp
mov
pop
sahf
cmp
xor
out
andl
