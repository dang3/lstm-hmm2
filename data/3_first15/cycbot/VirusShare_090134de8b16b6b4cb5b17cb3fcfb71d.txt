andb
cs
loopne
loopne
cmp
loopne
fldenv
loopne
lock
loopne
popf
cmpsb
loopne
sbb
movsb
loopne
mov
loopne
mov
loopne
pushf
movsl
loopne
sbb
mov
cmpsb
loopne
jns
loopne
push
loopne
cmp
loopne
adc
loopne
dec
cmpsb
loopne
cmp
loopne
add
loopne
mov
test
mov
cmpsl
loopne
lret
mov
movsl
loopne
inc
movsl
loopne
subl
mov
mov
loopne
inc
movsl
loopne
sub
loopne
jmp
loopne
into
mov
loopne
jge
loopne
lahf
cmpsl
loopne
mov
loopne
dec
test
loopne
push
cmpsl
loopne
pop
mov
loopne
dec
mov
loopne
adc
mov
loopne
xchg
mov
loopne
std
movsl
loopne
loopne
lcall
mov
cmpsb
loopne
mov
mov
loopne
repnz
loopne
xchg
loopne
outsb
mov
loopne
popa
mov
loopne
ja
loopne
fwait
mov
loopne
test
loopne
cmpsl
mov
loopne
fbld
loopne
inc
test
loopne
dec
mov
loopne
xchg
movsl
loopne
push
movsb
loopne
push
cmpsl
loopne
mov
movsb
loopne
shlb
mov
mov
loopne
inc
mov
loopne
push
cmpsl
loopne
je
loopne
mov
loopne
push
loopne
int
loopne
add
mov
mov
loopne
movsl
movsl
loopne
adc
mov
movsl
loopne
loopne
popf
movsb
loopne
mov
mov
loopne
mov
test
mov
movsl
loopne
jbe
loopne
jg
loopne
cmc
mov
loopne
lods
mov
loopne
adc
mov
mov
loopne
cmpsl
loopne
insb
cmpsb
loopne
pop
mov
loopne
fwait
test
mov
cmpsl
loopne
mov
cmpsb
loopne
mov
mov
loopne
cmpsl
loopne
ret
mov
movsb
loopne
frstor
mov
mov
loopne
out
test
mov
test
mov
movsl
loopne
inc
mov
loopne
push
movsl
loopne
mov
loopne
out
mov
loopne
add
cmpsl
loopne
lea
loopne
test
loopne
loop
loopne
add
loopne
push
test
mov
movsb
loopne
mov
loopne
pushf
test
mov
test
loopne
inc
cmpsl
loopne
xor
loopne
pushf
mov
loopne
push
mov
loopne
mov
loopne
sub
test
mov
cmpsl
loopne
cmp
movsl
loopne
movsw
loopne
push
movsb
loopne
loopne
loopne
sti
mov
loopne
mov
mov
cmpsl
loopne
adc
loopne
mov
loopne
mov
mov
loopne
ret
movsb
loopne
mov
loopne
cmc
movsb
loopne
lcall
mov
test
mov
movsl
loopne
mov
loopne
jb
loopne
cmpsb
loopne
and
loopne
inc
cmpsb
loopne
imul
mov
cmpsl
loopne
push
mov
loopne
mov
loopne
sub
loopne
out
loopne
mov
cmpsb
loopne
mov
test
mov
cmpsb
loopne
fisubl
loopne
and
loopne
cmpsl
mov
loopne
inc
movsb
loopne
lods
movsb
loopne
cmp
test
loopne
adc
mov
movsb
loopne
push
mov
loopne
and
loopne
outsl
cmpsl
loopne
lea
loopne
mov
loopne
cmpsl
loopne
iret
mov
loopne
shll
mov
cmpsb
loopne
pop
cmpsl
loopne
inc
cmpsl
loopne
das
movsb
loopne
ret
mov
movsl
loopne
sub
cmpsb
loopne
dec
test
loopne
arpl
mov
movsb
loopne
shrb
loopne
push
test
mov
test
loopne
cmp
loopne
ljmp
mov
cmpsl
loopne
add
loopne
dec
mov
loopne
cmpsl
mov
loopne
imul
mov
cmpsb
loopne
cmpsl
test
mov
mov
loopne
push
mov
loopne
jne
loopne
out
movsl
loopne
xchg
loopne
jmp
loopne
inc
cmpsl
loopne
cmpsl
test
mov
cmpsb
loopne
in
loopne
lock
loopne
pop
test
loopne
cmpsl
loopne
mov
mov
loopne
add
loopne
fldcw
loopne
icebp
mov
loopne
cli
test
mov
mov
loopne
mov
cmpsb
loopne
into
movsb
loopne
push
test
loopne
fsubl
loopne
xchg
loopne
jge
loopne
test
loopne
das
mov
loopne
inc
cmpsl
loopne
je
loopne
iret
movsb
loopne
int
loopne
aad
loopne
and
loopne
popa
mov
loopne
inc
test
loopne
hlt
mov
loopne
dec
test
loopne
movsl
loopne
jl
loopne
lods
movsl
loopne
cmpsl
loopne
dec
movsb
loopne
jle
loopne
xchg
cmpsl
loopne
adc
loopne
cmc
test
mov
mov
loopne
or
loopne
jg
loopne
xcrypt-cfb
mov
cmpsb
loopne
xor
loopne
out
loopne
and
loopne
jmp
cmpsb
loopne
and
loopne
out
loopne
or
loopne
mov
loopne
scas
test
mov
mov
loopne
daa
cmpsb
loopne
xor
loopne
js
loopne
mov
loopne
shlb
loopne
mov
mov
loopne
pop
test
loopne
ja
loopne
lret
mov
loopne
pusha
cmpsb
loopne
and
mov
mov
loopne
jae
loopne
jae
loopne
cmp
loopne
mov
loopne
push
movsl
loopne
and
mov
loopne
mov
cmpsb
loopne
and
loopne
and
loopne
jno
loopne
loope
loopne
lods
movsl
loopne
imul
mov
movsl
loopne
push
movsb
loopne
mov
loopne
mov
movsl
loopne
cwtl
mov
loopne
pop
mov
loopne
dec
mov
loopne
movsb
movsl
loopne
mov
mov
loopne
cmpsb
loopne
inc
mov
loopne
andl
mov
test
mov
mov
loopne
xchg
movsb
loopne
mov
loopne
pop
movsb
loopne
push
mov
loopne
mov
loopne
pop
movsl
loopne
dec
test
loopne
jno
loopne
rep
loopne
mov
movsl
loopne
js
loopne
data16
loopne
sbb
mov
mov
loopne
lock
mov
movsb
loopne
scas
mov
loopne
scas
cmpsb
loopne
mov
loopne
and
loopne
pop
movsl
loopne
shrl
loopne
mov
mov
loopne
outsl
cmpsb
loopne
jle
loopne
sub
mov
loopne
popa
cmpsl
loopne
push
test
mov
mov
loopne
ja
loopne
cmp
loopne
out
loopne
add
loopne
fldt
loopne
hlt
mov
loopne
xchg
mov
loopne
scas
test
mov
mov
loopne
adc
loopne
mov
cmpsb
loopne
mov
loopne
adc
mov
test
mov
cmpsl
loopne
add
loopne
cli
movsl
loopne
daa
movsb
loopne
out
loopne
andb
mov
test
mov
mov
loopne
push
movsl
loopne
xchg
cmpsb
loopne
cwtl
test
mov
movsl
loopne
into
movsl
loopne
mov
loopne
loopne
clc
cmpsb
loopne
popa
mov
loopne
cmp
loopne
aad
loopne
mov
loopne
push
movsb
loopne
push
movsl
loopne
add
mov
loopne
or
loopne
mov
loopne
pop
cmpsb
loopne
popf
cmpsl
loopne
pop
movsb
loopne
xchg
movsl
loopne
mov
loopne
pop
mov
loopne
mov
loopne
pop
test
mov
mov
loopne
mov
cmpsl
loopne
dec
cmpsb
loopne
and
loopne
cld
mov
loopne
cmpsb
loopne
adc
test
mov
mov
loopne
cmp
loopne
pop
test
loopne
adc
loopne
mov
cmpsb
loopne
push
test
loopne
or
loopne
or
mov
loopne
add
loopne
sub
movsl
loopne
jmp
loopne
dec
mov
loopne
jb
loopne
outsl
cmpsb
loopne
pop
cmpsb
loopne
xor
loopne
jbe
loopne
dec
movsl
loopne
jns
loopne
push
movsb
loopne
cmpsb
loopne
dec
cmpsb
loopne
arpl
loopne
dec
cmpsb
loopne
push
cmpsb
loopne
pop
cmpsl
loopne
push
cmpsl
loopne
ja
loopne
mov
test
mov
cmpsl
loopne
and
mov
loopne
add
loopne
movsl
movsl
loopne
insb
test
mov
cmpsl
loopne
cmpsb
loopne
xor
loopne
in
loopne
loop
loopne
cmp
loopne
in
test
mov
test
mov
movsl
loopne
shll
mov
cmpsl
loopne
repz
loopne
xor
loopne
pop
cmpsl
loopne
std
cmpsl
loopne
xlat
cmpsb
loopne
or
loopne
xor
loopne
or
mov
cmpsb
loopne
pop
mov
loopne
push
cmpsl
loopne
xor
loopne
sbb
loopne
clc
cmpsb
loopne
mov
loopne
cli
mov
loopne
jg
loopne
mov
loopne
sbb
loopne
xchg
mov
loopne
imul
loopne
mov
test
mov
test
mov
mov
loopne
clc
test
mov
test
mov
cmpsl
loopne
adc
loopne
xor
loopne
lock
loopne
insl
test
mov
mov
loopne
xor
movsl
loopne
mov
loopne
and
loopne
lods
cmpsl
loopne
xchg
mov
loopne
or
loopne
adc
loopne
jmp
loopne
out
loopne
and
loopne
xchg
loopne
sbb
cmpsl
loopne
mov
loopne
sbb
loopne
lahf
test
mov
cmpsl
loopne
int3
mov
loopne
xchg
cmpsb
loopne
iret
mov
loopne
jge
loopne
lea
loopne
sbb
loopne
movsl
loopne
dec
cmpsb
loopne
xchg
mov
loopne
mov
loopne
sub
loopne
movsb
movsl
loopne
add
loopne
enter
pop
test
mov
mov
loopne
into
mov
loopne
cwtl
mov
loopne
push
mov
loopne
int
loopne
int
loopne
stos
mov
loopne
dec
cmpsl
loopne
mov
cmpsl
loopne
test
loopne
aad
loopne
adc
loopne
mov
loopne
into
cmpsb
loopne
jns
loopne
lret
mov
cmpsb
loopne
or
mov
loopne
movsb
mov
loopne
out
loopne
sbb
loopne
dec
test
loopne
xor
loopne
cwtl
cmpsl
loopne
daa
test
mov
test
loopne
mov
loopne
fbld
loopne
cmpsb
loopne
mov
loopne
mov
mov
test
mov
movsl
loopne
jl
loopne
mov
loopne
lea
loopne
push
cmpsb
loopne
pop
cmpsb
loopne
mov
mov
cmpsb
loopne
andb
mov
mov
loopne
sahf
test
mov
mov
loopne
fldenv
loopne
pop
mov
loopne
and
loopne
fsubs
loopne
outsb
mov
loopne
xor
loopne
push
cmpsl
loopne
mov
loopne
std
movsb
loopne
in
mov
loopne
movsl
loopne
and
loopne
movsb
loopne
dec
mov
loopne
cmpsb
loopne
mov
cmpsb
loopne
cld
movsb
loopne
mov
mov
loopne
mov
mov
loopne
sub
mov
mov
loopne
xor
loopne
movsb
mov
loopne
loop
loopne
dec
movsl
loopne
cld
mov
loopne
xchg
mov
loopne
ret
cmpsl
loopne
mov
loopne
andb
pop
test
loopne
lods
cmpsb
loopne
jae
loopne
mov
loopne
outsb
test
mov
movsb
loopne
jnp
loopne
mov
loopne
push
movsl
loopne
hlt
cmpsb
loopne
inc
movsl
loopne
loope
loopne
sahf
mov
loopne
fisubs
loopne
pop
test
loopne
cmp
loopne
mov
movsb
loopne
xor
mov
loopne
push
cmpsb
loopne
sub
loopne
sti
mov
loopne
xchg
cmpsb
loopne
mulb
loopne
sub
mov
movsl
loopne
loop
loopne
cmpsb
loopne
push
mov
loopne
mov
loopne
popa
test
mov
movsl
loopne
mov
loopne
aam
loopne
or
mov
loopne
sub
loopne
cs
mov
test
mov
test
mov
cmpsl
loopne
cwtl
mov
loopne
push
movsl
loopne
and
loopne
out
loopne
pop
mov
loopne
shll
mov
mov
loopne
cli
cmpsb
loopne
daa
mov
loopne
sub
loopne
movsl
loopne
mov
loopne
jmp
loopne
movsb
loopne
add
loopne
int3
movsl
loopne
ds
loopne
and
mov
cmpsl
loopne
or
loopne
insb
test
mov
mov
loopne
test
cmpsb
loopne
jns
loopne
mov
loopne
mov
test
mov
mov
loopne
pushf
cmpsl
loopne
xchg
mov
loopne
push
test
mov
mov
loopne
sub
loopne
lret
mov
mov
loopne
adc
loopne
shlb
mov
mov
loopne
lret
mov
mov
loopne
xor
loopne
sbb
mov
mov
loopne
cmp
loopne
test
loopne
std
cmpsb
loopne
arpl
loopne
fisubl
loopne
cmp
loopne
mov
movsl
loopne
frstor
loopne
cs
mov
cmpsl
loopne
mov
loopne
fisubs
loopne
out
movsb
loopne
jecxz
loopne
cwtl
test
mov
movsl
loopne
out
loopne
sub
loopne
xchg
movsl
loopne
xchg
movsb
loopne
push
loopne
xor
loopne
push
mov
loopne
loopne
loopne
push
mov
loopne
andb
mov
test
mov
test
mov
mov
loopne
int
loopne
push
test
mov
movsb
loopne
xlat
cmpsb
loopne
andl
mov
cmpsb
loopne
ljmp
mov
movsb
loopne
je
loopne
call
mov
loopne
mov
movsb
loopne
dec
cmpsb
loopne
in
loopne
shrb
loopne
movsb
loopne
mov
loopne
xchg
loopne
je
loopne
jne
loopne
popa
mov
loopne
popa
movsb
loopne
xor
loopne
jle
loopne
rep
loopne
mov
cmpsb
loopne
mull
loopne
pop
movsb
loopne
mov
loopne
sub
loopne
shll
loopne
cmp
loopne
fildll
loopne
adc
loopne
nop
cmpsl
loopne
sub
loopne
lahf
test
mov
mov
loopne
pop
test
mov
test
mov
cmpsl
loopne
cmp
loopne
cmp
loopne
movsl
loopne
in
mov
loopne
xchg
mov
loopne
or
loopne
dec
mov
loopne
pop
mov
loopne
xor
loopne
add
loopne
mov
loopne
test
cmpsl
loopne
ja
loopne
icebp
cmpsb
loopne
loope
loopne
and
movsl
loopne
mov
loopne
frstor
loopne
adc
loopne
sbb
loopne
pop
test
mov
test
mov
movsl
loopne
sahf
cmpsl
loopne
jecxz
loopne
in
movsl
loopne
xor
test
loopne
popf
movsb
loopne
fbld
loopne
push
movsl
loopne
ret
cmpsb
loopne
fisubl
loopne
mov
loopne
xchg
mov
loopne
mov
movsb
loopne
xchg
loopne
inc
test
mov
mov
loopne
mov
loopne
and
loopne
cld
mov
loopne
inc
movsb
loopne
jecxz
loopne
clc
movsb
loopne
test
mov
loopne
loope
loopne
adc
loopne
cmp
loopne
outsl
mov
loopne
mov
loopne
mov
loopne
add
loopne
xchg
cmpsl
loopne
lock
loopne
adc
loopne
dec
mov
loopne
jge
loopne
inc
movsb
loopne
adc
loopne
pop
movsb
loopne
jg
loopne
outsl
mov
loopne
into
mov
loopne
push
mov
loopne
jmp
loopne
jmp
loopne
in
test
mov
mov
loopne
jmp
cmpsl
loopne
je
loopne
cwtl
mov
loopne
adc
loopne
mov
loopne
std
cmpsl
loopne
into
movsb
loopne
pop
movsl
loopne
jno
loopne
repz
loopne
inc
cmpsl
loopne
cmpsb
loopne
shll
mov
test
mov
movsb
loopne
pop
movsb
loopne
adc
loopne
mulb
loopne
add
loopne
jb
loopne
xchg
cmpsb
loopne
jb
loopne
andl
mov
mov
loopne
std
movsb
loopne
mov
loopne
cmpsl
loopne
adc
movsb
loopne
andb
mov
movsb
loopne
stc
movsb
loopne
sbb
test
loopne
lcall
mov
test
loopne
ret
test
mov
mov
loopne
or
test
mov
mov
loopne
add
loopne
fisubs
loopne
pusha
movsb
loopne
pop
movsl
loopne
jge
loopne
lret
mov
movsl
loopne
inc
cmpsl
loopne
pop
mov
loopne
icebp
movsl
loopne
add
mov
test
mov
movsl
loopne
jnp
loopne
arpl
loopne
or
loopne
outsl
cmpsb
loopne
insl
movsl
loopne
mov
loopne
mov
loopne
cld
movsb
loopne
hlt
cmpsb
loopne
inc
mov
loopne
andb
mov
mov
loopne
pop
movsl
loopne
andl
mov
movsl
loopne
adc
loopne
out
mov
loopne
pop
movsb
loopne
mov
loopne
shlb
mov
mov
loopne
stos
movsl
loopne
pop
cmpsb
loopne
mov
loopne
mov
cmpsb
loopne
lahf
cmpsb
loopne
jmp
loopne
jmp
test
mov
cmpsb
loopne
inc
movsb
loopne
cmp
loopne
leave
movsb
loopne
dec
mov
loopne
or
loopne
mulb
loopne
mov
mov
loopne
aaa
mov
loopne
movsb
loopne
movsl
test
mov
movsb
loopne
fldenv
loopne
inc
cmpsl
loopne
pop
mov
loopne
cmc
mov
loopne
shld
adc
loopne
test
loopne
pop
cmpsb
loopne
sub
mov
loopne
mov
loopne
insl
cmpsl
loopne
frstor
loopne
xchg
mov
loopne
or
mov
mov
loopne
jmp
loopne
mov
cmpsb
loopne
push
movsl
loopne
mov
cmpsb
loopne
nop
cmpsl
loopne
mov
mov
loopne
fisubl
loopne
pop
movsl
loopne
pop
cmpsl
loopne
movsb
movsl
loopne
hlt
mov
loopne
or
cmpsb
loopne
cmpsb
loopne
mov
mov
loopne
pop
mov
loopne
sbb
cmpsb
loopne
ljmp
mov
movsl
loopne
jle
loopne
push
mov
loopne
mov
test
mov
test
mov
cmpsl
loopne
mov
loopne
into
movsl
loopne
shlb
loopne
xchg
mov
loopne
inc
test
loopne
dec
cmpsb
loopne
in
cmpsl
loopne
sbb
loopne
sub
loopne
loope
loopne
repnz
loopne
out
mov
loopne
cmpsb
loopne
in
cmpsl
loopne
lahf
test
mov
mov
loopne
xchg
mov
loopne
iret
cmpsl
loopne
push
movsl
loopne
push
test
loopne
pop
test
mov
mov
loopne
xor
loopne
adc
loopne
out
movsb
loopne
xor
loopne
jle
loopne
loope
loopne
inc
cmpsl
loopne
scas
movsb
loopne
sub
loopne
and
mov
loopne
sub
loopne
mov
movsl
loopne
or
loopne
scas
movsl
loopne
push
mov
loopne
push
loopne
shlb
mov
mov
loopne
xchg
mov
loopne
sti
cmpsb
loopne
mov
loopne
jb
loopne
mov
loopne
fisubrl
loopne
pop
cmpsl
loopne
inc
movsl
loopne
mov
movsb
loopne
aas
test
mov
movsl
loopne
mulb
loopne
inc
cmpsb
loopne
insl
mov
loopne
outsb
cmpsl
loopne
andb
jmp
loopne
mov
cmpsb
loopne
shll
loopne
lcall
mov
test
mov
cmpsb
loopne
stos
mov
loopne
clc
test
mov
cmpsl
loopne
jp
loopne
out
loopne
insb
cmpsb
loopne
sub
loopne
lahf
movsb
loopne
iret
movsb
loopne
xchg
mov
loopne
in
mov
loopne
dec
cmpsl
loopne
in
mov
loopne
mov
movsl
loopne
inc
mov
loopne
push
cmpsb
loopne
ss
mov
mov
loopne
xor
loopne
jne
loopne
lret
mov
loopne
ljmp
mov
cmpsb
loopne
cs
loopne
add
movsl
loopne
and
loopne
mov
loopne
mov
movsl
loopne
dec
test
mov
cmpsb
loopne
cmpsl
mov
loopne
mov
mov
loopne
insb
movsb
loopne
mov
clc
aam
popf
cltd
lret
mov
push
imul
push
clc
inc
add
push
loop
clc
pop
ljmp
mov
add
dec
ds
aam
outsl
daa
clc
mov
in
push
clc
jo
add
jecxz
roll
sub
out
imul
sbb
cld
std
inc
clc
clc
loope
in
cs
add
out
imul
xor
add
xchg
sbb
mov
jle
clc
mov
gs
testl
in
sub
add
lahf
adc
add
xchg
or
clc
cmp
adc
jno
add
add
inc
add
nop
push
add
xchg
inc
clc
mov
clc
int
aas
xchg
push
mov
add
icebp
repz
xchg
sub
push
pop
ja
clc
shrb
mov
clc
fiadds
clc
jno
add
clc
fldl
add
sub
clc
mov
enter
repz
add
test
fwait
stc
cmp
mov
push
add
mov
add
sar
bound
add
clc
mov
mov
clc
jecxz
pop
jb
add
mov
mov
add
add
std
mov
sbb
icebp
cli
cltd
mov
cs
add
sub
mov
mov
add
cmpsl
clc
or
xchg
inc
clc
scas
fists
fs
clc
mov
clc
mov
mov
add
xbegin
cwtl
fbstp
aad
lods
mov
jnp
push
add
ret
add
add
add
out
sub
clc
push
cmp
dec
loopne
push
clc
mov
and
add
clc
cmp
or
clc
pushf
pop
aas
lahf
out
jecxz
bound
add
xchg
scas
push
pop
mov
in
xor
mov
and
add
add
dec
addr16
mov
into
repz
add
clc
loop
lahf
or
clc
loop
jge
or
add
add
lods
xchg
add
mov
divb
add
add
add
shl
or
sar
mov
popl
jae
add
clc
lahf
jnp
clc
jl
bound
add
add
jne
clc
jne
add
pop
dec
in
sub
adc
add
mov
aaa
pop
mov
mov
filds
add
pop
jle,pt
out
ljmp
out
je
and
add
add
xbegin
rclb
add
sub
add
clc
outsb
adc
add
and
clc
pop
lods
mov
mov
test
mov
mov
add
mov
outsb
or
aaa
push
add
or
xor
add
clc
cmp
roll
pop
mov
das
aaa
inc
add
pop
mov
add
add
mov
add
adc
add
cmpsl
clc
sbb
add
movsl
clc
movsb
clc
or
push
repnz
mov
add
inc
clc
mov
mov
clc
push
inc
clc
data16
inc
add
imul
or
cld
inc
clc
or
clc
ret
add
imul
and
jbe
or
clc
sbb
cvtps2pi
add
mov
pushf
cmp
lock
xlat
testl
addr16
or
bound
add
and
add
pminsw
clc
pop
popl
add
scas
cli
iret
pop
jns
mov
clc
fxch
sbb
sub
add
lea
cltd
jmp
dec
push
clc
jno
add
add
clc
jecxz
cmp
cld
sbb
insl
jl
clc
ja
std
xchg
fsubl
add
add
cmp
add
xchg
repnz
add
add
jno
add
and
add
in
mov
jo
add
lock
xchg
negb
std
pop
push
bound
add
clc
jg
xlat
jbe
mov
clc
cmp
clc
sub
loope
xchg
mov
or
clc
sbb
mov
clc
add
mov
clc
sbb
add
add
add
mov
loop
sub
lods
enter
jnp
push
add
or
xabort
dec
or
xchg
in
mov
sub
clc
sub
add
imul
cmp
clc
jle
clc
cmp
add
mov
add
imul
hlt
adc
cmp
add
cmp
pop
clc
jmp
roll
mov
add
or
clc
std
jl
inc
clc
or
xor
add
insb
or
add
loop
fs
cmp
mov
sub
ficoml
add
popf
fdivrs
pop
sbb
add
pop
xchg
pop
in
cmc
cmp
dec
mov
clc
mov
pushf
xchg
in
mov
add
dec
int
pop
cs
add
ret
xchg
xchg
sar
add
push
add
or
wbinvd
inc
add
adc
add
clc
pop
cmc
pusha
add
pop
xor
add
jecxz
or
jbe
std
arpl
add
sbb
sahf
push
add
ret
pusha
add
inc
add
sbb
add
bound
add
aas
cld
ret
xchg
cli
sar
rorb
out
lcall
xor
add
clc
and
daa
clc
add
add
in
or
add
xchg
cmp
xchg
jb
add
fsts
add
sbb
clc
mov
add
movsl
clc
cmp
add
adc
xchg
add
add
add
add
pop
xchg
or
pop
jo
add
ficomps
clc
pop
mov
clc
movsl
clc
sbb
xchg
sub
sbb
add
push
add
add
clc
mov
dec
scas
cmpsl
clc
add
add
add
clc
imul
icebp
clc
jbe
fcompl
xor
add
clc
ret
clc
pop
data16
mov
and
add
add
insb
in
and
add
lahf
scas
notl
add
inc
add
push
clc
sarb
xor
mov
pop
cltd
repz
add
clc
or
dec
bound
add
push
mov
pop
out
outsb
jnp
cs
pop
mov
clc
inc
add
xbegin
add
sbb
test
add
add
sbb
fwait
clc
pushl
clc
movsl
clc
sub
add
lret
fwait
add
add
aad
clc
jno
add
push
jb
add
jge
mov
clc
outsb
jo
add
jl
lcall
mov
sbb
scas
jmp
dec
sub
sar
mov
jecxz
push
add
mov
add
inc
clc
data16
or
dec
or
jle
sti
adc
std
nop
push
add
cmp
jp
aas
js
clc
addr16
push
add
loopne
leave
movsb
clc
or
add
lahf
movsb
clc
ds
mov
insb
dec
adc
add
add
pop
rcr
jp
fidivrs
add
xchg
dec
sub
clc
jbe
sti
xor
add
clc
dec
or
aam
sbb
dec
add
daa
clc
sbb
imul
add
pop
jmp
lea
out
push
sbb
daa
clc
movsl
clc
mov
add
cltd
fcmovb
clc
jnp
icebp
jmp
int3
cmc
xchg
dec
xchg
insl
push
mov
jnp
clc
xor
add
clc
data16
mov
add
clc
addr16
add
add
add
clc
and
add
clc
jge
ds
jg
add
imul
ja
push
add
cltd
adc
add
add
clc
mov
clc
inc
add
pop
ss
popa
add
aaa
xchg
fisttpll
dec
mov
mov
cmp
xchg
inc
clc
test
lock
bound
add
cmc
lock
scas
cli
repz
addr16
rol
clc
adc
daa
clc
xor
pop
int
cmp
imul
sbb
clc
mov
xchg
outsb
mov
add
clc
jge
mov
cmp
add
adc
clc
xchg
movsl
clc
push
add
movsb
clc
lcall
sub
add
push
add
sub
cwtl
mov
clc
inc
clc
cwtl
cld
push
add
stos
jg
xor
add
or
mov
add
sahf
stc
movsb
clc
aaa
loopne
imul
sbb
pop
insl
cmp
dec
clc
sub
ret
jns
mov
push
dec
fxch
jno
add
pop
clc
dec
pop
xor
add
add
clc
aad
or
cmpsl
clc
cmp
inc
clc
add
add
clc
int3
jmp
add
add
sbb
xlat
mov
add
push
out
shr
cld
inc
add
frstor
clc
arpl
add
clc
mov
cmp
push
clc
pop
rorb
fcompl
add
jmp
clc
mov
or
pushf
jmp
sti
ja
xor
add
add
push
clc
cmp
test
xabort
pop
lods
mov
lea
clc
dec
jge
roll
loop
xchg
dec
cli
cmp
mov
inc
clc
mov
jbe
and
add
jae
add
clc
jne
cmp
add
lods
shlb
add
add
add
add
data16
idiv
xchg
ret
clc
xchg
scas
shrb
insb
cmpsl
clc
daa
clc
imul
add
add
xchg
push
add
lods
adc
insl
cwtl
mov
fnstcw
or
xchg
stc
loopne
iret
mov
mov
add
pop
sar
pop
pop
cld
fnsave
sbb
add
ss
test
hlt
int3
mov
cmc
jl
clc
lret
insl
dec
inc
clc
xchg
pop
mov
in
cmp
add
lret
icebp
bound
add
add
inc
clc
xchg
cmp
cmp
clc
gs
mov
or
sub
jno
add
pushf
rcrb
xor
cmp
mov
lret
lods
push
shrb
jbe
pop
jge
lret
mov
clc
aas
pop
push
fcom
cmp
clc
aad
clc
pop
dec
lret
imul
xchg
sbb
clc
add
add
add
push
add
cmp
pop
inc
clc
pushf
imul
xchg
jl
leave
test
pop
or
rcrb
mov
int
add
or
aaa
fldt
mov
mov
addr16
xor
add
repz
es
movsl
clc
adc
add
cmpsb
clc
mov
iret
push
rclb
sub
out
cmp
fcmovnbe
push
add
out
stos
or
sbb
out
leave
xchg
xbegin
int
mov
aad
inc
add
sub
clc
rorl
mov
clc
push
cmp
add
cmp
sar
xchg
inc
clc
add
add
add
add
or
cs
lret
mov
push
clc
and
add
add
imul
xchg
lods
xchg
loopne
scas
and
add
inc
add
mov
out
mov
insb
cmp
clc
cmp
clc
aaa
leave
outsb
pop
mov
add
push
adc
and
add
loopne
xlat
jno
add
imul
add
call
mov
clc
icebp
sbb
cmp
clc
ret
clc
bound
add
pop
popa
add
cmp
clc
or
add
dec
or
add
add
pop
aaa
push
sbb
mov
in
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
sub
xchg
and
imul
cltd
adc
add
xchg
decb
sar
push
in
pop
test
xchg
mov
es
add
or
or
clc
adc
add
cld
jmp
xor
xchg
test
addr16
push
add
insb
test
in
movsl
clc
mov
cmp
add
pop
js
fwait
lcall
or
add
lret
xor
add
jmp
and
and
sahf
sahf
cli
das
scas
push
add
dec
ffree
clc
xor
add
add
lcall
jnp
jae
add
daa
clc
sbb
add
dec
shrl
repz
clc
jl
data16
cld
into
and
lcall
insb
sub
add
div
jno
add
int
xchg
and
add
add
clc
mov
dec
lods
mov
push
add
xor
push
jne
testl
cmp
clc
xor
mov
push
ficompl
dec
out
loope
fldt
adc
add
cmpsl
clc
add
add
add
dec
or
mov
push
add
aas
jp
clc
data16
xchg
sub
mov
clc
stos
add
add
cmp
add
repnz
sti
adc
add
add
clc
sbb
test
add
cld
jmp
cmp
jmp
cmp
cmp
clc
cmp
add
add
mov
xlat
and
es
icebp
xchg
outsl
mov
imul
imul
add
ret
clc
hlt
adc
add
clc
inc
clc
lods
xchg
lcall
loop
aad
pop
into
jo
add
mov
fists
add
sub
clc
dec
push
cmpsb
clc
hlt
ja
loope
mov
mov
dec
pop
inc
add
addr16
out
fcomp
mov
movsl
clc
pusha
add
fisttpll
mov
bound
add
add
jns
clc
sbb
jnp
add
push
add
push
add
xlat
xabort
xchg
nop
sti
je
mov
testl
add
lea
add
mov
and
cld
jmp
fs
out
mov
adc
add
pop
clc
mov
mov
xchg
mov
call
cld
jmp
push
sub
clc
imul
add
sub
gs
pop
out
xor
add
sbb
sub
in
inc
add
jmp
popa
add
sahf
out
inc
clc
dec
stos
aam
in
fdivl
add
cmpsl
clc
adc
add
testb
xor
add
push
jb
add
add
mov
add
mov
clc
sbb
jmp
jmp
adc
into
push
clc
cmp
clc
jns
decl
mov
cltd
imul
out
push
pop
nop
pop
adc
add
clc
or
clc
adc
add
gs
stc
jns
pop
mov
clc
xor
add
cmp
push
xchg
xor
add
adc
add
add
cld
jmp
pop
push
test
clc
aad
and
add
xor
add
pop
sub
add
add
add
lret
pop
arpl
add
clc
stos
push
add
xchg
pop
fldt
adc
add
add
jno
add
pop
clc
adc
jns
add
cld
jmp
sub
and
adc
add
add
add
adc
clc
dec
add
add
lods
push
add
cld
jmp
mov
mov
clc
sub
ljmp
clc
icebp
inc
clc
and
pop
xchg
divl
lahf
sub
and
xlat
out
mov
loop
repnz
cmp
clc
jnp
add
out
fdivr
mov
adc
add
add
push
clc
ja
pop
divb
pop
clc
mov
cmp
clc
outsb
aaa
dec
vzeroupper
or
clc
pop
aam
clc
dec
inc
add
cmpsb
clc
xabort
pop
xchg
jmp
clc
in
aas
aam
push
add
add
add
mov
stos
mov
ret
clc
sub
pushl
ss
ret
xchg
sub
add
incb
mov
movsb
clc
xor
clc
cmc
gs
sub
pop
rorl
xchg
scas
add
add
clc
pop
lahf
xchg
xor
add
jns
mov
add
sub
add
add
stos
push
push
ret
es
mov
clc
daa
clc
mov
clc
jnp
xchg
stos
mov
iret
out
stos
push
pusha
add
xbegin
adc
add
jno
add
clc
aad
add
sti
pushf
pop
pop
mov
je
add
mov
add
cmc
mov
clc
daa
clc
push
clc
stc
push
clc
xor
add
jmp
add
push
lahf
xor
add
decl
inc
aam
add
inc
popa
sub
pop
jle
clc
xchg
cmpsl
clc
inc
clc
fisubrl
out
cltd
jmp
mov
add
add
fdivrs
clc
push
mov
jo
add
adc
cmp
clc
inc
clc
cmp
xor
add
and
inc
clc
cwtl
jle
add
pop
and
add
add
sub
ss
jle
add
sarl
add
xabort
cmp
cmp
clc
aaa
mov
clc
outsb
stc
jns
add
enter
xor
clc
fisttpll
push
arpl
add
clc
rorb
out
das
stos
pusha
add
cltd
push
jmp
fwait
scas
xor
data16
jb
aad
jno
add
sbb
in
add
mov
xor
push
lahf
cmp
dec
iret
aas
lock
cmp
inc
clc
insb
data16
mov
adc
add
add
add
in
jg
xor
add
clc
test
mov
clc
pushf
dec
pop
mov
clc
or
scas
test
add
scas
adc
add
arpl
add
mov
aad
mov
jmp
xor
add
or
in
stos
dec
pop
xor
dec
decl
test
add
cld
jmp
ss
addr16
call
sbb
and
add
xchg
call
jb
add
cmp
es
stos
and
add
fnstcw
add
cmp
mov
inc
clc
push
or
cli
stos
add
add
add
fildl
test
addr16
es
arpl
add
lock
add
xbegin
test
dec
aaa
xchg
xor
add
mov
clc
fs
ss
inc
add
xor
push
cmp
ss
ret
lods
push
xor
add
rcll
dec
imul
add
test
imul
fisttpl
mov
pop
stos
hlt
xchg
test
clc
adc
add
jge
add
loopne
cmp
sar
ret
cld
jmp
and
or
nop
into
jae
add
add
cmp
into
imul
mov
pop
fildll
fcompl
clc
inc
add
cwtl
pop
ja
xor
add
clc
sar
cmp
add
mov
jl
clc
mov
xor
add
jne
clc
loopne
fwait
xchg
fs
aas
fadds
clc
test
js
insb
push
clc
jle
add
add
cmc
test
push
add
xbegin
pop
push
push
add
lcall
mov
mov
clc
loop
xchg
xchg
cld
push
push
add
add
add
add
adc
cld
jmp
fs
fs
into
hlt
jns
das
xchg
push
scas
mov
add
adc
clc
dec
popf
in
jg
push
add
jecxz
mov
ret
clc
add
add
out
xchg
sub
clc
movsl
clc
pop
pop
jae
add
sbb
push
push
ret
sub
inc
add
fwait
xchg
mov
clc
es
clc
push
mov
xchg
mov
clc
data16
mov
inc
add
dec
pop
sub
clc
outsb
dec
mov
push
push
leave
mov
xor
clc
bound
add
add
mov
clc
jne
push
add
mov
add
sub
jle
pop
clc
cmp
mov
gs
hlt
into
push
clc
cmp
shl
clc
fiaddl
aaa
xlat
loope
stos
in
lcall
arpl
add
mov
cmp
mov
add
xor
add
testl
sti
pop
imul
cmp
jae
jmp
imul
out
fs
mov
sbb
clc
insl
xor
add
popf
xabort
call
enter
stc
arpl
add
clc
fstpt
clc
add
add
add
clc
ret
push
add
sbb
cli
xchg
outsb
inc
add
push
add
jb
add
add
mov
inc
clc
adc
add
aaa
das
ljmp
add
add
clc
icebp
xor
add
daa
clc
mov
cmp
repnz
sub
clc
inc
clc
sti
cmp
mov
add
add
je,pn
jp
cmp
add
jmp
ret
add
adc
lahf
lahf
mov
clc
lods
and
add
add
test
test
enter
jno
add
add
stc
push
push
test
ret
xchg
adc
add
clc
inc
clc
jge
adc
add
add
xchg
into
jg
pop
jl
outsl
arpl
add
inc
add
add
add
xchg
sub
fcmovnu
and
add
add
scas
mov
add
clc
inc
add
or
xor
add
clc
xchg
out
ljmp
cld
jmp
sahf
add
cmpsb
clc
addr16
xbegin
add
sub
clc
cmp
clc
das
fs
nop
jns
pop
enter
clc
push
dec
cld
jmp
sub
jge
or
inc
add
or
ret
clc
movsl
clc
cltd
int
scas
pop
or
iret
sub
ffreep
clc
mov
clc
enter
clc
cs
cmp
cld
movsl
clc
push
lods
jmp
and
add
mov
add
pop
mov
movsb
clc
sub
pop
jns
roll
push
mov
test
in
push
jae
add
stos
out
xor
add
add
adc
add
add
push
sahf
add
add
pusha
add
xchg
jmp
mov
clc
mov
cmp
add
cmp
rdpmc
add
xchg
scas
pushf
data16
repnz
add
clc
sbb
xor
add
clc
xchg
aad
inc
add
jo
add
xchg
inc
add
jo
add
clc
xchg
and
add
sub
xchg
repz
clc
jle
into
nop
aaa
cmp
cld
cltd
ret
clc
push
dec
lret
cmpsb
clc
call
xchg
sar
dec
daa
clc
pop
dec
arpl
add
mull
add
inc
clc
xor
add
jo
add
sbb
cmp
mov
jmp
add
lods
sub
sub
clc
cmp
clc
data16
push
adc
add
decl
mov
sub
xabort
clc
adc
fs
in
in
inc
clc
lock
clc
dec
int
add
sbb
add
loopne
adc
add
push
pusha
add
add
add
xchg
movsb
clc
push
or
sahf
shlb
add
add
stos
pushf
cmp
or
out
push
clc
push
add
aam
add
add
add
sar
add
popa
add
sub
add
loope
mov
push
add
and
jmp
add
clc
sar
clc
gs
pusha
add
add
sar
cmp
mov
lret
push
jmp
mov
clc
loopne
cs
mov
clc
test
or
iret
popa
add
lods
xchg
adc
add
jns
clc
jmp
in
pop
dec
je
add
cmp
dec
adc
add
clc
dec
push
add
mov
cmp
jmp
subb
fidivl
jl
clc
mov
add
cld
jmp
testl
push
clc
fidivl
cmp
fisubrs
mov
nop
add
add
clc
mov
adc
add
add
add
add
sbb
mov
outsb
pop
xchg
mov
add
clc
outsb
lcall
in
cmp
add
in
outsl
pop
in
inc
clc
loopne
fsubs
push
nop
add
outsl
xor
dec
sub
clc
mov
add
lea
test
or
mov
push
push
cld
jmp
nop
or
pop
push
cld
cwtl
lock
add
push
add
mov
movsl
clc
xchg
dec
aam
cmc
cs
jb,pn
add
sub
add
add
clc
sub
clc
push
add
push
xchg
loopne
test
cli
flds
add
aad
and
add
cmp
jne
cld
jmp
call
aas
imul
inc
adc
jmp
sub
add
pop
add
mov
push
add
add
add
fcomps
add
sbb
ds
dec
out
insl
out
shl
clc
rcrl
pop
xor
add
clc
imul
clc
cmp
xchg
inc
add
repz
add
add
and
add
clc
sbb
add
add
clc
mov
aaa
push
add
xor
add
add
xlat
int3
fists
jb
cld
jmp
inc
lahf
sar
cmp
ljmp
add
push
cmp
cld
jmp
and
dec
push
cmp
inc
add
mov
clc
jg
and
sbb
clc
or
xchg
fcmove
adc
add
jne
aam
rorl
ja
xor
add
leave
fwait
or
push
add
ja
clc
and
movsb
clc
out
movsb
clc
push
add
call
or
add
cmp
push
movzwl
cld
jmp
dec
add
jp
mov
or
pusha
add
ss
int3
jle
dec
scas
inc
add
out
sar
bound
add
cld
jmp
and
and
int
add
add
add
add
add
xor
add
in
shlb
fwait
mov
sub
sbb
rorb
insl
xor
std
int
clc
adc
add
add
mov
xchg
vmovlps
add
pop
mov
repz
add
and
add
dec
cld
dec
je
mov
ja
mov
jmp
or
outsl
ret
and
add
clc
lahf
inc
clc
fadds
add
notl
add
mov
mov
outsb
add
pop
lea
add
xlat
fildl
clc
xor
add
xchg
clc
mov
add
int3
pop
mov
das
sti
stos
clc
pop
clc
cmpsl
clc
fsts
jmp
aaa
pop
cmpsb
add
dec
fimull
add
jl
cmc
inc
clc
ret
mov
add
sbb
jmp
cld
jmp
sub
dec
push
clc
lods
jne
add
cld
jmp
xor
adc
movsl
clc
jb
add
lret
mov
pusha
add
jl
xor
add
lods
test
inc
add
or
lods
sub
fsubs
add
jb
add
clc
push
clc
cmp
aad
test
in
pop
test
inc
add
sar
and
add
add
jne
adc
pop
xchg
fcompl
adc
or
push
add
lock
mov
out
bound
add
pop
xchg
gs
cmpsl
clc
mov
add
clc
mov
sub
add
clc
xor
add
clc
sub
add
sahf
jno
add
into
cld
mov
out
imul
mov
clc
lahf
insl
cmp
clc
sbb
add
inc
push
jg
sub
add
jmp
stc
mov
add
add
clc
int3
mov
jg
fmuls
cmp
sti
jnp
fadds
add
add
add
xchg
test
cmpsl
clc
lods
push
add
cmp
pop
and
mov
cmpl
cld
jmp
fs
sub
jmp
jp
push
inc
add
fisubs
add
and
xabort
clc
adc
add
clc
repz
push
add
out
decl
pop
add
or
mov
cld
jmp
pop
dec
cmp
in
and
add
jae
add
add
out
in
stc
pusha
add
mov
and
enter
xor
mov
leave
imul
sub
jmp
add
xabort
call
cmp
clc
xbegin
mov
clc
fadds
test
mov
push
add
pop
das
mov
add
add
dec
inc
clc
scas
mov
movsb
clc
insl
mov
lret
jmp
sub
or
clc
lahf
cwtl
sbb
cmpsl
clc
xor
add
clc
adc
add
cmp
clc
pop
stos
in
jp
clc
xor
add
clc
rcl
into
push
add
adc
add
push
add
fstpt
clc
adc
add
add
add
pop
mov
jmp
pushl
cld
jmp
sub
sub
in
cmpsl
clc
in
lods
mov
jb
add
je
pop
push
popl
add
jno
sub
mov
add
clc
push
mov
pop
adc
scas
jmp
mov
add
add
jno
add
add
mov
xchg
ss
ret
test
cmp
jne
cld
jmp
lea
add
add
movsl
clc
pop
mov
add
mov
pop
dec
xchg
mov
jmp
add
jae
add
mov
repnz
xchg
jecxz
lea
in
push
repnz
out
xor
add
imul
xchg
cmp
add
cmp
push
add
push
clc
pop
and
and
add
add
mov
pop
pop
pop
popa
add
inc
clc
pop
cmp
add
ret
cmp
clc
push
pop
mov
clc
dec
lods
xlat
loop
js
mov
add
mov
pop
movsb
clc
cmp
add
enter
mov
add
clc
repz
add
add
xchg
pusha
add
ljmp
hlt
pop
in
cwtl
inc
clc
lock
clc
cmp
push
push
add
and
xor
add
lret
js
stos
movsb
clc
inc
add
addr16
jnp
pushf
add
or
add
mov
es
into
lret
mov
clc
cmp
jle
xor
add
clc
or
sahf
stos
test
cmpsb
clc
movsb
clc
and
add
add
xchg
test
add
pop
inc
xchg
xchg
xlat
and
add
imul
fildl
clc
push
add
pop
mov
clc
sbb
pop
cltd
mov
cmp
rcll
decb
add
popf
scas
outsl
ss
popf
inc
clc
aaa
mov
jge
jecxz
lock
dec
out
mov
xor
add
add
outsb
xabort
add
clc
gs
mov
mov
inc
add
jno
add
lahf
mov
push
clc
xor
add
adc
add
dec
mov
or
or
das
sbb
test
clc
adc
popa
add
aam
mov
or
imul
das
mov
clc
iret
inc
clc
jecxz
push
or
das
cmp
in
outsb
data16
insb
sbb
add
pusha
add
je,pt
clc
int
pop
mov
mov
add
ret
clc
xbegin
mov
push
add
mov
inc
clc
bound
add
add
and
add
movsl
clc
fisubs
add
xor
clc
xor
add
mov
test
jecxz
sar
fs
pop
xor
add
pushf
rcl
mov
adc
add
cmp
clc
ret
pop
inc
add
je
mov
clc
stos
xor
add
clc
cli
cmp
pusha
add
jp
leave
shl
repz
sub
clc
int3
add
and
add
and
add
jmp
inc
clc
mov
clc
jge
scas
in
lret
mov
clc
hlt
and
add
mov
pop
js
aam
add
jbe
cmp
nop
mov
pop
push
add
out
gs
xor
add
add
sub
sbb
push
add
inc
clc
dec
jmp
mov
cmp
cmp
clc
lret
stos
clc
loopne
cld
dec
pop
in
cmpsb
clc
es
movsl
clc
ret
add
push
das
imul
push
icebp
int3
dec
and
xor
push
add
jecxz
jmp
mov
clc
fmull
clc
scas
push
and
xor
add
clc
adc
add
jge
clc
negl
data16
std
or
add
mov
jge
cltd
inc
add
pop
sbb
fsubrl
in
jl
out
sar
sbb
cmpsb
clc
add
add
sti
mov
sbb
xchg
xchg
testl
xor
add
ss
jne
clc
fcmovne
data16
mov
add
pop
rclb
add
xchg
stos
loop
add
jbe
add
or
xor
add
stos
arpl
add
add
and
add
jmp
jg
add
enter
clc
cmp
push
cmp
ficomps
scas
mov
into
pop
adc
add
clc
push
add
mov
sbb
pop
dec
lods
outsb
mov
add
pop
and
adc
add
roll
add
clc
sbb
aaa
lret
add
clc
xchg
mov
dec
out
xor
add
clc
bound
add
add
mov
fiaddl
add
imul
add
jb
add
add
xchg
clc
pop
dec
pop
outsl
iret
xor
shr
and
add
clc
jl
test
inc
add
xor
add
add
add
clc
nop
sbb
repz
jmp
adc
das
cs
into
xor
add
fstps
add
add
mov
aas
mov
clc
mov
add
push
add
jno
add
jmp
sub
outsl
inc
sub
clc
adc
add
mov
dec
add
add
adc
sub
test
fpatan
or
in
and
add
arpl
add
mov
cltd
sti
leave
daa
clc
repnz
inc
add
loope
mov
add
mov
mov
mov
outsb
dec
dec
sete
inc
add
mov
add
jb
add
add
cmp
jg
stos
mov
clc
scas
push
cwtl
xor
add
add
cld
jmp
cld
cmpsl
clc
fisttps
sbb
push
cld
jmp
inc
mov
jp
add
cmp
clc
cmp
jo
add
pop
and
jmp
pop
mov
stos
or
xchg
outsl
cmp
inc
clc
sub
clc
xabort
lea
clc
inc
clc
push
jne
cld
jmp
bound
add
add
ss
xor
add
inc
add
gs
mov
dec
cmp
jmp
add
cmpsl
clc
ss
push
rclb
add
aas
jb
add
add
es
sbb
add
es
divl
add
mov
cmpsb
clc
das
xor
add
add
xor
and
add
arpl
add
clc
or
mov
jmp
ret
clc
jo
add
daa
clc
sar
add
mov
push
cld
jmp
fwait
aas
data16
clc
cmpsl
clc
pop
adc
clc
pop
mov
rol
clc
adc
add
pop
es
pop
lods
clc
xchg
fidivs
push
add
add
repz
flds
scas
enter
repz
aam
clc
lods
testb
and
add
ffree
clc
or
xor
add
negb
add
add
mov
add
add
add
or
pusha
add
jo
add
add
clc
mov
clc
jmp
add
cmp
test
add
add
enter
sbb
cld
jmp
dec
add
add
push
add
jl
mov
ss
ret
sub
sbb
cld
jmp
xchg
sub
add
xchg
je
cmp
mov
lahf
mov
stos
fstpl
cmp
clc
pop
daa
clc
hlt
into
cwtl
inc
clc
addr16
fwait
mov
clc
inc
add
inc
add
inc
add
push
clc
idivl
add
add
cmp
push
add
jmp
or
movsb
clc
xor
add
mov
fistps
sbb
inc
clc
xchg
sub
sbb
inc
clc
add
sub
clc
hlt
push
jbe
clc
sbb
aad
bound
add
clc
xor
add
clc
out
ljmp
jns
xchg
xor
add
pusha
add
jo
add
sti
shlb
add
rcl
popf
cwtl
sar
lcall
jmp
and
sub
ja
clc
lea
add
sar
inc
add
pop
mov
xor
clc
mov
clc
sbb
dec
jae
add
add
adc
add
add
ret
roll
add
seto
pop
push
shll
xor
pusha
add
in
cli
cmp
movsl
clc
jg
stc
pop
insb
adc
add
pushf
mov
scas
pop
in
cmp
mov
dec
outsb
addr16
cld
mov
mov
or
inc
clc
push
lret
dec
call
add
aaa
decb
add
and
add
add
ja
stos
xor
add
add
sbb
jmp
push
je
aaa
xchg
push
add
jns
mov
jns
push
add
test
insl
push
add
repz
cltd
inc
add
fisubrl
test
add
cld
jmp
enter
icebp
imul
das
pop
fsubrl
clc
mull
clc
xchg
out
data16
cmp
ficompl
xbegin
pop
imul
add
cmp
inc
clc
pop
xchg
in
cmp
stc
sar
pop
clc
lahf
cli
cmpsb
clc
sub
pop
xchg
mov
add
clc
loope
xchg
pusha
add
sbb
cmp
scas
or
repz
clc
inc
add
imul
clc
in
xor
clc
push
in
dec
or
test
add
jne
clc
insb
dec
dec
je
cmpsl
clc
jmp
pop
push
stos
cmp
and
add
add
mov
add
inc
clc
incl
or
add
pop
ret
clc
ds
add
outsb
insb
pusha
add
sbb
in
add
add
add
movsb
clc
leave
outsb
test
clc
ja
push
call
mov
mov
cld
jmp
lods
scas
cmp
add
lcall
cmp
push
add
movsb
clc
cmp
jp
fucomip
adc
add
imul
mov
push
jmp
sub
and
pop
js
ljmp
jge
add
add
cltd
mov
into
shll
scas
addr16
mov
add
arpl
add
ljmp
add
push
clc
adc
add
add
jae
add
add
rorb
call
or
or
sar
int3
sbb
add
clc
jns
loop
test
fwait
hlt
aaa
cmpsl
clc
and
add
or
dec
xchg
dec
aas
jnp
cmp
clc
push
add
xor
sub
add
clc
fnstcw
push
ret
sub
into
insb
add
adc
sahf
xchg
insl
jl
mov
or
add
clc
arpl
add
add
add
or
add
sub
clc
xor
add
insb
xchg
jp
je
scas
sub
clc
cmc
pop
dec
xlat
mov
dec
jo
add
cmp
insl
jae
add
clc
cld
sti
shll
add
and
add
ret
clc
mov
popa
add
imul
scas
enter
jo
add
hlt
jp
inc
add
shll
add
xchg
mov
fwait
adc
clc
mov
cmp
cld
int3
jnp
mov
adc
add
add
dec
mov
lock
push
add
jmp
add
sbb
add
test
jbe
das
addr16
hlt
xchg
inc
add
pop
xabort
add
pusha
add
insb
pop
sarl
bsf
or
add
icebp
loope
mov
cmpsl
clc
jmp
add
sar
gs
add
add
add
push
imul
add
add
loope
call
mov
pop
or
jnp
test
mov
cld
jmp
push
sbb
call
cld
jmp
sub
jle
pop
addr16
aad
jne
cld
jmp
xbegin
js
inc
add
outsb
fadd
clc
stos
mov
clc
xchg
and
add
mov
scas
fmuls
fnop
pop
xlat
mov
cld
jmp
or
pusha
add
xchg
push
add
cmpsb
clc
and
scas
xor
and
add
add
sub
add
fwait
mov
add
push
pop
cld
jmp
push
lods
push
fwait
add
lret
push
mov
fwait
cmp
pop
and
add
add
fmull
jno
add
xchg
jb
add
add
frstor
add
adc
push
add
lock
clc
xchg
arpl
add
mov
add
dec
push
push
add
mov
clc
mov
push
sub
nop
aas
aaa
in
add
add
add
arpl
add
xor
add
add
inc
add
xchg
test
int
or
out
fnstsw
clc
mov
add
cld
jmp
xor
mov
and
add
add
pop
jge
clc
faddp
clc
sar
jge
adc
add
sub
inc
clc
mov
clc
jge
clc
cmp
inc
clc
arpl
add
lods
int3
pop
mov
mov
outsl
adc
cmp
pop
xchg
shl
clc
es
add
add
and
jmp
inc
dec
sbb
mov
add
je
adc
add
imul
clc
stc
cmpsb
clc
xor
add
dec
cmpsl
clc
adc
add
leave
inc
clc
negl
loopne
adc
add
jl
sbb
stos
add
add
clc
mov
pushf
aaa
cmp
xchg
jne
cmc
sub
add
or
xor
add
xor
cld
jmp
sbb
test
shl
clc
outsl
mov
clc
sar
clc
jmp
clc
adc
add
push
sub
clc
cmp
lcall
push
ret
cwtl
sub
sbb
add
repz
test
xchg
incl
mov
add
mov
xchg
sbb
add
add
aaa
push
add
sar
xbegin
clc
ret
clc
inc
add
xor
mov
add
or
push
ret
cwtl
dec
sahf
fwait
popf
push
inc
add
or
inc
clc
pop
push
mov
in
push
add
adc
nop
fnsave
pop
inc
add
adc
outsl
je
dec
and
add
jmp
add
pusha
add
das
inc
add
adc
add
icebp
pop
adc
add
dec
shlb
add
clc
mov
clc
dec
xor
add
pop
clc
jns
clc
cli
lcall
fwait
push
add
cltd
pop
add
add
clc
adc
add
sbb
clc
sub
add
clc
xor
add
sub
clc
addr16
outsl
mov
rcrb
add
xchg
mov
loopne
lea
add
pop
ss
lret
add
clc
clc
mov
rorl
repz
clc
ds
pop
rolb
add
cld
jmp
sub
outsl
rcrl
cs
cld
jmp
and
pop
sub
clc
decl
imul
xorb
lock
clc
adc
add
add
add
aad
mov
fsubrs
scas
sti
in
out
xor
add
cmp
and
add
jle
clc
test
inc
clc
lret
rcrl
cmp
cmp
inc
clc
add
xchg
mov
div
cld
jmp
es
imul
rclb
and
add
add
jge
pop
adc
pop
pushf
jbe
clc
enter
push
add
and
add
pop
cld
jmp
or
jno
sub
add
xor
add
add
wbinvd
and
add
clc
jle
popf
jecxz
jl
loop
popf
cmp
inc
add
add
mov
int3
enter
stos
mov
addps
sbb
add
cld
jmp
sub
clc
push
mov
cld
jmp
add
clc
ja
clc
dec
aas
test
int3
inc
add
out
test
nop
outsl
fs
sub
sti
out
icebp
test
fstpt
and
add
clc
mov
or
add
pop
in
decl
push
ret
inc
lock
clc
aam
mov
clc
sbb
jg
push
clc
xchg
outsl
xchg
jae
add
lret
jmp
clc
lea
clc
vmovhps
add
mulb
clc
mov
adc
add
add
inc
add
mov
clc
repz
pop
in
or
cmp
hlt
push
fdivrp
jmp
sub
inc
in
and
add
pop
mov
xchg
add
or
mov
mov
cld
jmp
and
or
pusha
add
repnz
jb
add
aaa
out
loopne
insl
xchg
mov
add
int3
or
decl
sahf
inc
add
pop
push
or
idiv
mov
jmp
add
cmpsl
clc
push
push
addr16
sbb
clc
mov
lret
jecxz
test
push
add
xchg
push
ljmp
add
jno
add
add
add
add
mov
stc
es
lahf
fwait
add
add
jp
stos
xor
add
cltd
pop
std
xchg
dec
fstpt
fstl
add
push
clc
pop
or
add
outsb
add
es
dec
jnp
loop
dec
call
clc
jae
add
add
add
add
inc
add
sbb
mov
cmp
in
sbb
sub
clc
ret
clc
xor
add
add
test
cs
outsl
mov
mov
jno
add
add
mov
fwait
xchg
mov
bound
add
adc
add
gs
cmp
cmpsl
clc
into
out
sub
add
xor
add
clc
sub
loope
sub
sar
clc
out
ljmp
into
push
mov
mov
cld
jmp
push
loop
adc
add
jbe
dec
pop
push
mov
add
add
loopne
insl
sbb
cld
jmp
inc
sub
rcl
insl
es
gs
cmc
or
mov
cld
jmp
or
and
imul
mov
mov
add
lret
xabort
test
cmp
add
clc
mov
lret
or
outsl
decb
jbe
push
clc
mov
add
cmp
clc
es
sbb
in
cmp
vmovhps
and
sahf
enter
clc
cmpsl
clc
cmp
clc
push
mov
loopne
paddb
inc
add
add
cld
jmp
sub
insb
fildll
mov
pop
mov
add
mov
popa
add
es
jecxz
decl
jno
add
add
clc
movsb
clc
sub
dec
pop
pop
insb
pop
notl
movsb
clc
and
add
out
mov
je
xchg
test
push
add
xchg
adc
add
adc
clc
xbegin
xchg
mov
xchg
xor
cmc
mov
jbe
add
sbb
clc
clc
or
pusha
add
push
add
es
cltd
mov
lret
ljmp
cmovs
out
push
loop
inc
clc
clc
mov
sbb
or
push
clc
ds
xchg
mov
mov
mov
add
add
sbb
aam
pop
xabort
das
icebp
jbe
xor
mov
clc
mov
clc
test
dec
cmp
rol
clc
cli
sbb
mov
or
mov
add
bndldx
clc
mov
add
daa
clc
cmc
fwait
cmp
arpl
add
cmp
push
add
nop
push
add
stos
fucom
clc
jnp
push
outsb
jbe
clc
cmp
xor
add
cmp
mov
adc
add
cmc
aam
xor
push
cld
ret
clc
push
xor
fisttpll
add
insb
rol
clc
inc
add
rorb
mov
sub
add
clc
and
jo
add
jmp
sbb
add
cld
jmp
inc
add
add
add
add
inc
clc
mov
clc
or
cld
jmp
pop
inc
sub
clc
iret
inc
clc
out
push
add
addr16
testb
cmp
add
and
xor
add
cmp
mov
clc
addr16
cmpl
add
clc
rclb
add
and
add
clc
stc
shrl
out
mov
clc
xchg
sub
add
into
in
loopne
xor
add
add
clc
and
add
ss
ret
push
mov
and
add
test
sub
xchg
or
add
xbegin
cli
cmp
add
add
loopne
mov
arpl
add
clc
mov
clc
cmp
or
sub
add
add
movlps
add
jb
add
add
or
or
cmp
or
sub
cmp
xchg
adc
add
push
add
fcom
cmp
or
js
clc
es
or
ljmp
clc
mov
fs
sub
clc
mov
loope
lods
add
add
cld
test
mov
mov
sub
mov
cld
cmp
out
pushf
mov
popf
and
add
aaa
inc
add
ret
clc
mov
jnp
jne
add
sub
js
add
cli
cmp
sub
xabort
loop
xor
add
mov
xor
fisttpll
push
clc
fsubrp
add
or
xor
sahf
pop
cmovge
out
xor
add
sbb
or
cld
jmp
jp
sub
add
ret
jp
cmp
popa
aas
insb
pop
sahf
add
add
repnz
cli
addr16
add
add
fidivl
jle
jmp
dec
or
arpl
add
jmp
das
pop
clc
dec
and
add
lahf
add
inc
clc
dec
add
add
add
daa
clc
xabort
push
lret
add
add
cmp
xbegin
jne
clc
inc
clc
clc
add
hlt
fidivs
add
adc
and
add
add
je
add
cmp
add
fwait
sub
cmp
popa
add
push
push
clc
je
add
add
add
dec
sti
in
lea
int
ds
clc
adc
add
fsubr
ret
clc
pop
es
lahf
mov
cld
jmp
jge
push
add
jne
pop
mov
icebp
dec
add
sub
or
sub
add
jl
add
inc
clc
or
lcall
add
aad
pop
in
xchg
sti
cltd
mov
arpl
add
jne
dec
std
int3
int3
roll
xor
add
cmp
add
clc
gs
add
add
or
shll
dec
test
mov
clc
push
popa
cld
jmp
sbb
es
and
pop
add
add
add
in
mov
add
divb
add
jg
clc
jmp
clc
loopne
push
out
sbb
or
add
add
adc
add
jo
add
cmp
add
push
sbb
clc
pop
clc
pushf
rorl
add
outsl
mov
inc
clc
rcrl
sub
clc
add
add
decl
pushl
sbb
add
cmpsb
clc
push
push
sbb
clc
jle
test
jne
mov
stc
jmp
jne
add
inc
clc
cltd
push
add
mov
pop
or
pcmpgtb
xchg
fwait
jo
add
add
add
fsubrs
pop
xor
add
scas
into
mov
test
inc
clc
jl
add
inc
clc
es
mov
jge
push
cld
jmp
pop
sbb
jp
xor
cld
jmp
add
add
clc
sbb
add
mov
cwtl
jecxz
addr16
dec
ja
in
fbld
jle
mov
cltd
mov
sbb
or
sub
add
add
sub
lahf
mov
add
mov
push
mov
cld
jmp
sub
test
add
clc
cmp
add
add
push
sub
scas
push
add
push
jmp
sub
jge
sarb
and
scas
jecxz
cmp
clc
cmpsl
clc
outsb
adc
add
jo
add
add
jecxz
pop
inc
add
inc
add
inc
clc
push
jmp
add
icebp
out
push
add
jne
outsl
push
data16
cmp
cmp
xor
add
add
adc
clc
push
clc
fldenv
clc
sar
fcom
pop
xchg
lea
push
fstl
add
add
add
out
sub
lea
rcrb
movsl
clc
pop
xchg
add
lods
into
or
push
clc
ret
clc
adc
or
add
jb
add
aad
add
jecxz
enter
clc
mov
clc
lea
cld
jmp
sub
nop
push
gs
add
add
add
mov
btc
in
jmp
mov
clc
jbe
xchg
stos
mov
mov
cmp
clc
gs
sar
pop
cltd
sbb
jge
lret
mov
add
imul
pop
cmp
sti
pop
mov
add
dec
inc
add
xor
add
scas
mov
clc
mov
popa
add
xchg
inc
add
sbb
mov
add
jge
std
inc
clc
mov
or
clc
xchg
or
inc
add
mov
das
cli
or
clc
popf
popf
adc
out
mov
arpl
add
int3
stos
dec
xlat
xlat
jp
ret
clc
stos
test
jg
cld
jmp
addb
clc
inc
add
scas
jecxz
or
add
pop
enter
adc
add
sub
outsl
test
clc
mov
mov
iret
push
aaa
add
ja
and
popa
stc
xor
aam
mov
jl
inc
add
sbb
or
push
add
nop
mov
cli
test
gs
loopne
mov
mov
push
clc
mov
and
test
mov
clc
mov
mov
ret
xor
clc
lea
xchg
test
xchg
fstl
add
add
clc
repnz
mov
add
mov
or
clc
mov
lret
jg
add
add
pop
clc
dec
mov
xlat
jbe
clc
xchg
jne
stos
mov
sub
xor
add
clc
sub
clc
nop
add
add
cld
jmp
push
aaa
xor
add
mov
sar
lcall
inc
clc
dec
pop
mov
xchg
cmp
scas
dec
cmp
cmp
aas
ss
add
and
clc
mov
popa
add
sub
clc
mov
jo
add
clc
xchg
mov
xchg
add
insb
nop
sub
pop
ds
data16
pop
clc
pop
out
imul
xbegin
imul
cmp
pop
pop
adc
add
stc
pusha
add
sbb
add
add
add
dec
ret
sarb
pop
xlat
sarb
mov
ds
or
into
xchg
xchg
mov
push
clc
cmp
add
jno
add
push
decl
ss
ret
jg
cmp
or
fwait
fs
adc
imul
mov
jmp
test
inc
add
xabort
sbb
fmuls
clc
push
xbegin
scas
fdivl
add
mov
fst
cmp
in
movsl
clc
fdivrs
lret
add
add
clc
test
clc
xchg
in
pop
scas
enter
in
dec
aad
lea
cld
jmp
subb
jns
sbb
int3
call
add
mov
test
pusha
add
cld
jmp
jo
add
clc
in
jb
add
pop
xchg
push
add
push
push
xchg
ret
clc
insl
popf
jo
add
pop
dec
fdivs
add
insl
xor
add
clc
jp
leave
sar
xchg
add
add
sub
mov
scas
outsl
push
mov
add
ss
mov
cld
jmp
insb
mov
mov
add
add
fdivl
add
mov
gs
in
pop
sub
add
sbb
jns
dec
jns
clc
rorl
xchg
xor
add
fsubrl
or
clc
jge
icebp
rcrl
add
sub
mov
add
sub
stos
cltd
repz
add
insl
cmp
add
fistps
clc
xchg
enter
lret
mov
clc
dec
cld
sbb
lock
scas
clc
hlt
pop
out
pop
push
inc
add
or
imull
pop
enter
jno
add
ret
loopne
loopne
sub
sub
add
lock
mov
add
and
jle
sbb
in
sti
xchg
add
addl
xchg
popl
push
aad
imul
push
pop
clc
mov
cltd
adc
add
mov
dec
arpl
add
into
aad
incl
enter
addb
sbb
add
nop
addr16
clc
in
iret
cmp
inc
add
cmp
clc
insb
pop
inc
clc
xbegin
adc
add
add
leave
faddl
add
movsl
clc
push
and
add
je
add
mov
clc
lret
fidivrl
jmp
inc
add
push
xchg
cs
sbb
add
mov
sbb
clc
into
mov
add
jg
clc
xor
add
jns
clc
dec
pusha
add
xor
add
ds
sldt
add
ret
clc
jge
cs
testb
add
adc
xbegin
cld
jmp
add
push
add
sahf
pop
xor
add
inc
add
aam
add
pop
hlt
xor
fs
in
fisubl
std
out
scas
jne
add
xchg
mov
sbb
sar
jmp
xchg
ja
negw
and
cmp
lods
cli
xchg
call
addr16
ljmp
add
inc
clc
dec
pop
sub
mov
lret
or
mov
out
aad
clc
in
imul
imul
mov
ja
add
movsl
clc
aaa
xor
cmp
in
loop
mov
clc
jp
clc
data16
add
add
add
mov
cld
jmp
sub
aaa
enter
clc
push
fwait
jg
lret
das
out
repz
clc
mov
mov
adc
clc
daa
clc
mov
sub
outsl
mov
add
xor
add
add
mov
push
add
cwtl
sbb
lea
insl
test
and
add
popf
jmp
cmpsl
clc
es
int3
mov
add
ss
dec
je
xchg
ss
mov
icebp
ljmp
scas
pop
cmp
cmp
setb
add
clc
data16
jbe
sub
cwtl
test
add
repnz
adc
add
adc
cmp
xlat
data16
pop
mov
add
jmp
sub
or
add
add
arpl
add
sbb
test
add
cld
jmp
test
ret
ljmp
popa
add
imul
mov
clc
outsb
mov
add
add
cld
jmp
adc
dec
fistpl
xchg
push
pushf
inc
clc
xchg
insl
in
or
push
add
add
adc
and
pop
xchg
into
in
fdivs
xchg
dec
xor
add
lcall
add
cmp
cmp
and
adc
add
mov
gs
decb
push
cld
jmp
add
cltd
xchg
test
lods
sar
icebp
lret
sub
pop
cmp
iret
scas
ja
mov
fs
in
mov
clc
fidivl
cmp
inc
clc
dec
adc
xor
add
jmp
or
or
jne
dec
pop
inc
clc
into
cmp
lret
bound
add
clc
mov
add
jecxz
stos
add
add
push
add
std
mov
test
lret
mov
cmp
xor
add
testb
fldl
push
cli
xchg
fwait
or
fidivs
xchg
test
sbb
push
ret
pop
pop
das
and
add
test
lahf
data16
push
add
inc
add
out
pop
clc
mov
add
int
sbb
addr16
enter
clc
push
add
inc
clc
pop
daa
clc
movsl
clc
jno
add
mov
push
xchg
push
add
pop
test
in
xchg
xor
add
aam
clc
lock
clc
sbb
cmp
add
dec
xor
clc
xor
add
and
cld
jmp
sahf
sub
sti
jae
add
xchg
sbb
clc
nop
jnp
add
jl
or
jb
add
clc
jb
add
cmp
xchg
popf
fdivrp
and
add
clc
test
out
lods
sub
cmp
fnstcw
add
clc
movsb
clc
dec
int3
out
mov
add
and
add
outsb
aaa
adc
add
add
push
mov
roll
mov
add
add
cmp
dec
add
add
xchg
out
sar
loopne
decl
decl
aas
sub
mov
add
xor
add
mov
xabort
add
dec
xchg
jae
add
es
popf
fidivrs
js
pop
add
cwtl
dec
lods
sub
add
add
decl
popa
add
add
add
add
loopne
jge
pop
xor
jbe
clc
das
push
out
aas
cmpsl
clc
xor
hlt
leave
sti
sbb
clc
pusha
add
frstpm(287
clc
xchg
sar
clc
mov
mov
inc
clc
pop
pop
js
xor
add
in
add
add
clc
test
call
mov
clc
sub
nop
cmp
enter
lret
dec
adc
add
lods
mov
add
pop
hlt
xor
push
pop
add
test
mov
add
sub
cld
jmp
sbb
sub
lea
adc
add
sub
xchg
add
lea
add
xor
add
in
fistl
add
cmp
sub
xchg
push
clc
fldt
clc
xchg
push
add
jnp
clc
lea
shll
add
lret
insb
jb
add
clc
add
add
mov
clc
add
pusha
add
inc
clc
js
cmp
insb
cld
inc
add
mov
pop
dec
stc
mov
cld
or
adc
add
clc
lcall
jns
scas
out
mov
add
insb
fdivr
stc
std
mov
mov
cltd
sar
cmp
clc
jo
add
js
clc
movsb
clc
xabort
jnp
clc
nop
lea
es
dec
clc
jns
jae
add
fsubl
add
lcall
clc
push
sbb
add
push
sub
jb
add
pop
shrl
imul
and
add
add
add
jmp
sub
fidivrs
dec
ss
ret
sub
sub
add
add
insl
jne
mov
add
fwait
in
sub
lea
imul
dec
stc
xor
add
add
mov
add
scas
jmp
jmp
or
add
dec
mov
clc
data16
popf
dec
mov
cld
jmp
es
sub
dec
hlt
and
add
sar
call
ss
ret
sub
xchg
lods
movsb
clc
push
call
clc
leave
add
add
popa
add
mov
inc
clc
xchg
and
add
xchg
xor
pop
and
add
insl
sar
je
dec
mov
jl
push
jne
add
xor
add
add
push
xchg
mov
add
push
mov
clc
jns
adc
add
or
clc
or
clc
jg
enter
add
add
add
pop
xabort
mov
add
loop
lock
sbb
outsl
cmpsl
clc
jp
test
mov
xchg
insb
mov
adc
add
push
sub
jne
cld
jmp
js
clc
shlb
clc
dec
push
add
add
add
clc
clc
xchg
js
out
jge
aaa
xlat
aaa
test
clc
mov
clc
sbb
inc
add
push
inc
add
iret
aas
adc
add
mov
sbb
jne
cld
jmp
aas
sbb
clc
ror
cmp
stos
xabort
sub
fwait
sbb
add
and
cmpsl
clc
push
add
js
jmp
mov
add
gs
insb
loopne
lahf
cmpsb
clc
fadd
clc
std
in
sub
cmp
clc
mov
add
dec
sub
jmp
xor
or
jo
add
add
iret
sar
push
decl
cld
jmp
push
sub
add
xor
add
clc
test
fdivl
add
inc
add
mov
add
aad
add
pop
add
add
bound
add
add
clc
pop
add
je
push
sub
cld
jmp
subb
push
add
ds
iret
outsl
inc
add
cmpsb
clc
add
add
mov
and
add
arpl
add
notb
sub
jecxz
xchg
lea
cld
jmp
sub
adc
xchg
xchg
adc
add
inc
clc
sar
clc
pop
gs
mov
xchg
cld
jmp
cmp
aaa
cmp
add
xor
add
out
jp
clc
in
adc
ffree
clc
xchg
cmp
add
add
clc
mov
mov
movsb
clc
push
out
adc
add
add
push
add
pop
xor
add
clc
mov
add
pop
out
mov
push
sub
cld
jmp
sbb
lea
idiv
mov
jmp
push
je
sbb
push
aam
clc
and
add
stos
jmp
cmp
add
mov
sar
clc
repnz
add
xchg
add
add
mov
pop
clc
xor
add
push
lock
push
inc
add
adc
scas
repnz
add
dec
xor
jle
mov
mov
clc
jp
cmp
and
add
sbb
shl
cmp
int3
mov
adc
jmp
jg
sub
sti
vmovlps
add
mov
mov
add
scas
sub
ljmp
test
jmp
imul
mov
aam
clc
jmp
inc
clc
hlt
pop
fsubrl
fs
stos
and
add
cmp
clc
inc
add
cmp
push
clc
push
fcom
mov
add
or
pop
imul
add
clc
insb
cmp
adc
add
clc
ljmp
clc
jg
clc
test
mov
in
es
inc
clc
push
clc
pop
rcll
add
xchg
aam
add
sub
dec
test
loope
data16
adc
add
adc
add
cmp
add
cli
sub
in
mov
cmp
or
cld
jmp
nop
movsb
nop
adc
add
jnp
and
add
cmpsl
clc
lcall
or
mov
clc
mov
push
in
jmp
sub
push
add
xor
add
loopne
inc
add
mov
add
stos
pusha
add
add
add
add
mov
inc
add
ds
test
pusha
add
int
clc
jbe
mov
clc
adc
add
lahf
sar
add
push
jb
add
mov
sar
clc
bound
add
lock
add
xor
xlat
or
icebp
xbegin
add
push
sub
jnp
clc
mov
add
fadd
clc
push
add
insb
cli
pop
pop
and
add
add
add
dec
fldl
xchg
imul
add
adc
add
cld
jmp
xor
xchg
jne
pop
js
clc
lods
add
add
xor
add
xchg
shll
add
xor
push
mov
add
hlt
push
mov
arpl
add
xchg
mov
dec
lock
ja
movsb
clc
inc
clc
into
lret
es
rorb
clc
ljmp
clc
cmp
jb
add
sahf
test
and
add
xchg
push
mov
cld
jmp
sbb
mov
clc
movsb
clc
sar
mov
cld
jmp
push
fwait
inc
loope
cli
out
push
clc
pop
testl
mov
add
inc
add
pop
lret
add
imul
insl
mov
jns
clc
mov
add
add
add
std
jb
add
add
add
jmp
add
xchg
das
pop
clc
push
add
adc
add
pop
push
mov
clc
pop
clc
test
out
adc
add
clc
mov
add
inc
add
inc
add
daa
clc
mov
cld
jmp
push
lods
stos
pmuludq
add
pushf
popf
xchg
sub
jae
add
je
sbb
fxch
jb
add
add
and
scas
decl
test
sar
cld
jmp
decl
inc
xor
add
nop
adc
add
enter
nop
add
add
imul
clc
cld
and
add
add
lcall
clc
cmp
gs
std
mov
cli
insl
cs
xchg
add
cmc
shll
xor
add
clc
cmp
and
add
out
inc
add
xchg
sahf
mov
sub
outsl
int3
sbb
mov
pop
rcrb
sbb
jmp
jge
sub
test
lea
mov
cwtl
mov
mov
add
add
scas
jb
add
in
in
xchg
cmp
aad
decb
clc
or
pop
je
aam
mov
cld
jmp
add
cmp
clc
insb
xor
add
xor
add
loop
push
faddl
add
pusha
add
cmpsl
clc
cmp
add
push
dec
aad
clc
sbb
add
bswap
or
clc
push
clc
inc
clc
lods
sub
clc
mov
dec
es
inc
clc
dec
xchg
loopne
aad
add
cmp
cmpsl
clc
ja
dec
sar
std
inc
clc
fldl
add
clc
stos
mov
push
clc
scas
sar
daa
clc
xchg
dec
in
lods
not
fdivrl
test
cmc
in
xchg
push
cmp
out
fdivrs
ja
pop
mov
add
push
cld
jmp
fwait
or
push
or
sbb
mov
cld
jmp
cs
movsl
clc
fidivs
add
sbb
clc
repz
or
xchg
gs
imul
inc
clc
cltd
aam
add
aad
xbegin
repz
int3
add
add
mov
add
lea
add
sbb
sar
clc
outsl
push
add
jg
clc
adc
add
adc
add
sar
clc
cli
inc
clc
push
jmp
adc
insb
add
add
clc
push
js
addr16
cmp
mov
clc
cmp
fistps
cmp
imul
adc
div
sub
add
fs
dec
mov
clc
fndisi(8087
clc
stos
repz
add
fst
imul
aaa
push
add
and
add
push
add
adc
push
addr16
testl
pop
lods
or
cmp
aad
jp
xor
add
dec
dec
pop
push
add
push
add
pop
movsl
clc
in
mov
sbb
out
pop
push
add
mov
xchg
cmp
test
mov
or
out
into
xbegin
add
loop
outsl
jp
sub
add
lret
add
repz
add
jb
add
lret
scas
fidivrl
mov
nop
clc
mov
add
jae
add
inc
clc
pushf
jno
add
cmp
clc
or
popf
in
xor
add
cmp
add
jb
add
add
shrl
jmp
dec
add
clc
mov
pop
scas
jmp
and
push
subb
pop
nop
jp
movsl
clc
popa
add
mov
clc
fisubrs
movsb
clc
jbe
clc
cmp
clc
mov
ds
sub
clc
fmull
adc
add
pop
xabort
pop
test
pop
das
push
add
lods
push
add
jecxz
repnz
jae
add
adc
add
sub
pop
arpl
add
clc
add
add
clc
clc
lods
adc
add
clc
xchg
sbb
mov
jbe
lcall
js
pop
aaa
maxps
push
push
clc
repz
ss
clc
xchg
test
clc
lcall
add
movsb
clc
fldl
add
mov
cld
std
xlat
jmp
fiaddl
mov
clc
ds
adc
cmp
fnstenv
add
je
cli
xchg
mov
sbb
pop
popa
add
arpl
add
sub
clc
cmp
clc
ja
add
inc
clc
sub
outsb
and
add
insb
cld
jmp
sub
clc
nop
mov
adc
pushf
dec
mov
mov
add
mov
clc
xor
add
cmp
add
push
and
add
cmp
mov
mov
cltd
fidivrl
mov
add
loope
out
sbb
cmp
outsl
push
and
arpl
add
add
add
cld
jmp
add
add
push
pushf
push
clc
repz
add
add
xchg
cmpsb
clc
out
and
add
add
add
add
push
add
xor
mov
fs
leave
dec
cmp
mov
add
mov
mov
aam
clc
cmp
and
add
int3
adc
add
sahf
jno
add
push
ret
clc
std
inc
add
clc
data16
int
jno
add
insl
jmp
cltd
lret
outsl
in
lret
add
add
pop
mov
add
fstps
clc
clc
push
xchg
adc
add
or
add
stc
insl
add
add
add
outsb
test
clc
or
inc
clc
xchg
jge
add
cmp
mov
and
pop
bound
add
sub
clc
mov
mov
adc
jmp
aaa
push
lret
repz
mov
add
add
and
add
sar
outsb
inc
clc
dec
vmovhps
sbb
idiv
jmp
je
adc
xchg
xchg
outsb
std
add
add
add
aad
fstps
das
loopne
sbb
jmp
jno
cmp
out
inc
add
inc
clc
in
in
pop
shlb
xchg
fcmovnu
mov
mov
adc
add
aas
pop
cld
mov
add
add
repnz
es
dec
cmp
clc
cwtl
movsl
clc
jae
add
add
negb
daa
clc
lods
lods
xchg
inc
add
shrb
mov
clc
push
clc
imul
ljmp
add
clc
sbb
cmp
clc
sub
add
jo
add
add
ja
add
add
clc
sbb
jmp
outsl
push
adc
pop
clc
test
ret
clc
mov
clc
out
jns
sbb
aas
clc
push
mov
jmp
sub
add
or
add
mov
clc
push
add
fisttpll
sub
out
jecxz
mov
clc
imul
sub
dec
adc
add
test
xchg
sbb
clc
inc
add
inc
add
push
xchg
xor
add
cld
pop
scas
test
clc
xchg
aaa
xor
add
adc
add
clc
jmp
and
add
cmp
or
mov
cld
jmp
jno
sahf
aaa
cmc
cmp
push
sbb
clc
jmp
or
add
xchg
popa
add
lods
mov
clc
stos
outsl
push
add
xchg
mov
add
dec
popa
add
xchg
mov
cld
jmp
sub
fisubl
add
xor
add
mov
shrb
nop
lods
cmpsb
clc
ss
add
add
out
sbb
clc
adc
dec
or
add
add
inc
add
sbb
lock
int3
push
ds
ljmp
mov
stos
pop
neg
xchg
add
add
jno
add
cmp
insb
dec
clc
daa
clc
int3
add
add
add
add
add
xor
adc
add
cmpsl
clc
mov
clc
push
add
inc
add
lods
and
clc
mov
xor
add
das
or
sub
or
cld
xlat
lret
xor
data16
addr16
enter
add
adc
dec
icebp
in
jne
cmp
sub
mov
in
mov
cmp
clc
sar
clc
icebp
cmpsb
clc
fmuls
cli
cmp
clc
mov
cmp
cltd
or
xchg
mov
cmp
xchg
nop
inc
clc
into
mov
sub
cmc
push
movzwl
cld
jmp
or
sar
insl
pushf
push
clc
push
dec
sbb
loope
fimull
xor
add
pusha
add
add
ss
clc
push
stos
cld
jmp
sub
sub
cmp
and
inc
clc
mov
mov
pop
loopne
adc
mov
add
clc
out
jmp
aaa
push
add
xor
add
add
fsubs
idivl
cmp
xabort
clc
or
out
fld
clc
nop
popf
bnd
sub
and
add
add
mov
sti
adc
clc
mov
clc
pop
clc
fwait
mov
fdivrl
ljmp
add
push
pop
inc
add
sub
bound
add
aam
stos
dec
mov
clc
push
push
iret
data16
pop
sub
add
inc
add
scas
add
push
add
dec
pop
push
xlat
pop
mov
clc
mov
sub
mov
ror
jecxz
xchg
popf
xor
add
lahf
imul
inc
add
movsb
clc
jle
and
add
add
pushf
jge
clc
push
cld
jmp
insb
aas
rcrl
add
ss
ret
lea
xor
sub
and
add
lods
jp
xchg
xchg
std
ss
push
aad
rcpps
add
add
jno
add
clc
pop
clc
cltd
jle
je
mov
jno
add
inc
add
inc
add
push
add
ss
cmp
pop
xor
add
add
fstpl
pop
mov
push
add
adc
add
add
add
mov
out
mov
mov
into
mov
xor
add
add
adc
add
xor
cmp
add
xor
add
add
push
pop
sbb
or
cltd
adc
add
jle
repnz
push
push
cld
jmp
push
jge
inc
mov
or
rclb
clc
xor
add
arpl
add
add
mov
das
or
loopne
stos
mov
decl
aad
add
test
cltd
adc
add
pop
xchg
fistl
add
adc
add
xchg
mov
daa
clc
es
push
mov
cld
jmp
add
insb
jg
clc
cmp
pop
in
cmp
idiv
add
sar
ljmp
dec
inc
add
call
pop
push
inc
add
mov
add
push
push
aad
popa
add
add
and
add
add
jno
add
and
add
add
xchg
cmp
ja
cmc
cld
in
push
sahf
mov
or
sbb
add
add
clc
or
clc
add
sar
aaa
xor
add
add
add
add
or
add
aas
jns
add
add
add
and
add
pop
cmp
dec
ret
clc
pop
adc
add
add
cld
and
add
es
cmpsb
clc
fidivrs
mov
clc
pop
stos
pusha
add
xchg
sbb
add
cmp
js
xchg
or
xchg
xor
add
mov
clc
dec
leave
shrl
cmpsb
clc
pop
clc
test
dec
fisubs
std
and
add
xor
add
clc
jl
stc
adc
add
clc
mov
and
add
xor
add
add
jb
add
add
xor
add
mov
clc
icebp
jne
clc
xor
add
imull
cmc
cmpsl
clc
fcoml
push
add
xchg
pusha
add
ds
clc
jmp
xchg
arpl
add
in
inc
add
mov
adc
add
arpl
add
cmp
push
cld
jmp
ja
mov
es
jmp
outsb
inc
add
xchg
cmp
add
lock
clc
dec
dec
stc
lock
clc
mov
and
add
je
dec
in
push
add
mov
add
es
and
add
or
clc
and
add
add
xchg
and
add
pop
sub
jno
add
add
je
add
add
add
sbb
pop
pushf
xor
add
ds
lcall
jnp
xor
add
jecxz
xor
add
clc
flds
ja
xabort
add
add
mov
xchg
es
jne
jg
clc
scas
imul
test
clc
jb
add
cmp
nop
jmp
xchg
mov
or
clc
push
add
sbb
clc
shll
or
add
clc
xlat
in
mov
pop
in
ds
pusha
add
lcall
pop
mov
cmp
add
push
sub
fisubl
sub
sti
inc
clc
jbe
clc
test
add
js
out
sar
cmp
pop
clc
cmpsl
clc
iret
pop
es
iret
cmp
add
xchg
pop
test
leave
stc
xchg
pusha
add
in
jnp
cmp
clc
enter
mov
add
add
fiaddl
cmp
xor
add
mov
clc
shl
clc
push
add
inc
clc
out
out
sub
std
jp
imulb
push
add
mov
aad
jmp
jno
dec
fxch
gs
push
add
std
sub
pop
aam
clc
jg
xabort
add
jae
add
add
cmp
add
xchg
dec
inc
add
addr16
sahf
sub
jge
rol
clc
stos
pop
clc
cmp
aam
xchg
lret
jge
or
adc
add
clc
sar
clc
xchg
fnstenv
clc
dec
loope
insl
lcall
jmp
add
pop
cmp
adc
add
cltd
insl
push
mov
cmp
pop
in
enter
call
test
clc
mov
cmpsb
clc
and
add
stos
cmp
jo
add
clc
and
add
add
clc
sbb
test
mov
mov
call
into
push
xor
mov
clc
movsb
clc
lock
xchg
xchg
and
mov
clc
push
add
xchg
cmpsl
clc
leave
cmp
addr16
inc
add
or
push
add
adc
or
clc
scas
aam
and
mov
lcall
jg
dec
xor
add
jb
add
add
repz
add
sub
add
sub
lcall
xchg
push
clc
ds
scas
mov
ja
lods
test
sar
clc
call
adc
repnz
and
jmp
inc
sbb
add
fwait
ret
clc
insl
push
mov
add
mov
add
add
inc
clc
lahf
cli
cld
cmc
mov
clc
jns
jp
lahf
adc
add
or
xor
add
add
and
add
add
das
mov
add
stc
daa
clc
sbb
test
dec
add
cld
jmp
dec
fistpl
scas
xchg
popa
add
or
lods
pop
mov
clc
repz
pop
aas
sbb
mov
add
jmp
push
nop
jl
add
and
add
ss
pop
and
add
jne
xor
add
sbb
add
add
inc
add
xabort
add
lret
cwtl
mov
lahf
jne
clc
pop
mov
jmp
push
movsb
test
out
jo
add
sbb
clc
mov
add
or
xor
add
adc
jae
add
mov
add
ret
add
test
loopne
cmp
clc
pop
mov
lret
int
pop
and
add
icebp
add
add
cmp
mov
gs
sbb
dec
ss
ret
clc
pop
dec
xor
add
xor
add
add
add
movsl
clc
push
rep
cld
jmp
fwait
ja
xabort
daa
clc
mov
or
push
sbb
cmp
xabort
ret
clc
popa
add
jle
mov
scas
cwtl
mov
xabort
stos
add
mov
clc
pop
push
neg
push
mov
add
cmp
add
or
add
add
or
inc
add
jmp
and
add
xlat
add
add
xor
add
push
mov
cld
jmp
fwait
or
push
xchg
leave
in
lea
add
clc
pop
clc
pop
test
cmp
clc
or
jecxz
fmull
mov
xlat
popa
add
jne
jbe
clc
xabort
add
sub
add
ja
out
je
add
out
lret
cmp
adc
add
add
enter
inc
add
dec
into
jl
lcall
mov
jns
xor
add
dec
xor
std
shl
clc
das
sub
fwait
in
dec
popf
es
sbb
add
mov
add
add
cld
jmp
insb
sub
clc
cmc
mov
cmp
int3
push
add
jnp
cmp
add
add
mov
clc
outsb
xchg
push
sub
inc
clc
cmp
push
test
push
fcmovnbe
jno
add
clc
mov
clc
fcompl
clc
mov
clc
mov
add
dec
out
xabort
xlat
xor
clc
push
add
es
pop
in
cmp
add
cld
ja
shlb
clc
arpl
add
pop
pusha
add
xor
clc
enter
jno
add
shll
add
dec
pop
pop
ret
outsl
pop
push
add
fistpl
add
cld
jmp
sub
jne
mov
add
insb
mov
lret
scas
insb
insb
in
lods
es
push
clc
xchg
pushf
adc
add
add
clc
sahf
or
clc
je
and
add
test
out
cld
jmp
pusha
add
pusha
add
addr16
xchg
nop
shlb
cmp
cld
jmp
stc
scas
xor
int
add
repz
icebp
and
clc
int3
xor
xchg
mov
sub
xor
add
mov
xlat
sbb
xchg
sub
clc
mov
add
or
clc
mov
xchg
shlb
add
xor
add
popa
add
sub
adc
add
jmp
das
dec
imul
sub
clc
stos
enter
clc
mov
add
fmuls
jo
add
fisttpl
aam
mov
push
fidivrl
add
or
lret
imul
xchg
cmp
clc
mov
pop
clc
clc
data16
jp
gs
push
push
cld
jmp
pop
sahf
inc
sub
adc
add
mov
cmp
clc
insb
mov
cmp
add
adc
add
cmp
bound
add
imul
roll
push
ret
push
xor
cmp
fimull
cmpsb
clc
pop
push
jnp
aam
ret
cld
jmp
adc
dec
mov
mov
add
fmuls
dec
lea
clc
aam
jnp
clc
mov
jmp
add
jle
xchg
mov
loop
xchg
xchg
int
mov
clc
add
sub
lcall
stos
repnz
out
and
add
mov
add
xchg
push
call
cld
jmp
add
clc
jg
push
jge
std
std
ror
pop
lods
aam
lods
mov
jg
das
sbb
mov
push
add
stos
outsl
jmp
cli
fnstsw
lcall
xchg
dec
cwtl
pop
in
sub
clc
and
add
add
add
clc
mov
insl
cmp
add
sahf
data16
inc
add
mov
rcll
add
jo
add
repz
repnz
push
inc
dec
add
scas
xor
scas
sbb
clc
inc
clc
dec
pop
mov
push
clc
xor
cmpsb
clc
fidivrl
clc
add
add
dec
mov
clc
push
add
and
add
rep
cld
jmp
sub
xor
mov
sbb
clc
mov
add
pop
ret
clc
dec
in
push
mov
add
and
add
aam
clc
fisttpl
add
iret
loopne
addr16
inc
add
arpl
add
jnp
loop
int
mov
js
xlat
add
add
sbb
mov
add
add
adc
add
js
stc
xchg
fwait
test
pop
clc
imul
add
push
jmp
pop
inc
jge
clc
mov
clc
mov
clc
insb
mov
mov
clc
aas
dec
add
mov
xchg
test
shl
clc
cld
adc
add
gs
jp
dec
inc
add
cwtl
sbb
inc
clc
mov
clc
cmpsb
clc
mov
lret
inc
add
sub
ret
add
out
stos
aas
imull
inc
add
mov
mov
add
cwtl
or
leave
mov
add
push
add
add
push
add
mov
sub
add
add
cmpsb
clc
test
test
mov
pop
cmpsb
clc
cmp
add
test
aas
dec
stos
mov
test
add
dec
xchg
mov
add
jmp
pop
out
daa
clc
push
cmpsl
clc
pop
xor
gs
push
cld
jmp
insl
mov
je
clc
mov
loop
aas
dec
pusha
add
mov
cli
cwtl
cmpsl
clc
cmp
fsub
clc
lods
nop
push
sbb
pop
sar
call
inc
clc
mov
adc
add
add
lret
add
add
jmp
push
clc
loop
jp
outsl
push
add
inc
add
cmp
fwait
pop
xor
add
in
aam
mov
clc
cmp
dec
fsts
iret
mov
clc
jmp
sub
cmc
mov
sar
adc
add
sar
xchg
sub
add
cmp
pop
test
mov
lret
cmpsl
clc
int
xchg
add
add
add
leave
ret
clc
sub
jmp
or
add
sbb
int
xor
add
clc
adc
jp
clc
lahf
mov
mov
fists
stos
out
cmpsl
clc
cmpsl
clc
sar
clc
scas
cmp
mov
out
cmpsb
clc
out
xchg
xchg
and
clc
in
cmp
clc
fsubl
mov
clc
pop
loop
ja
mov
clc
cmp
clc
in
dec
xchg
push
add
xlat
push
sub
movsl
clc
in
pop
push
clc
lods
mov
dec
inc
clc
cmp
mov
or
push
add
mov
push
add
popf
stos
jg
clc
mov
clc
xor
push
add
jp
sub
pop
mov
clc
cmp
cmp
ss
jne
clc
sub
clc
imul
add
add
add
divb
jl
cwtl
pushf
cmp
dec
or
aas
leave
icebp
mov
dec
xor
add
add
cld
sar
ret
clc
mov
and
add
test
data16
popa
add
ja
clc
mov
cmp
dec
lret
clc
lock
clc
xchg
mov
jle
cmpsl
clc
cmp
push
add
push
std
lcall
aas
sub
push
fcoms
int3
adc
add
and
add
pop
or
add
add
outsb
inc
clc
jmp
jmp
or
ss
add
ss
cmpsl
clc
call
clc
popa
add
xlat
sub
stos
pop
nop
mov
jg
iret
xabort
clc
cmp
mov
jns
popf
pushf
sbb
sub
clc
mov
fiadds
cli
push
sub
iret
enter
mov
adc
add
clc
lods
ljmp
mov
mov
or
xchg
jo
add
jecxz
inc
add
push
shr
cld
jmp
subb
mov
pop
cmp
cmp
push
clc
and
add
add
cmpsb
clc
hlt
dec
xlat
jecxz
aaa
push
push
mov
in
xchg
call
fcomi
mov
ret
clc
xchg
aam
cmp
clc
pop
fcmovne
cwtl
jae
add
clc
and
cld
push
push
pop
pop
mov
clc
fstpl
cmp
pop
inc
add
and
add
jp
xbegin
clc
leave
ljmp
add
lcall
adc
add
jle
add
ds
dec
mov
sbb
nop
out
adc
mov
add
xor
add
add
add
dec
sti
push
inc
add
sub
push
test
shlb
dec
iret
lock
mov
cs
fnsetpm(287
clc
and
add
mov
pop
loopne
rol
clc
fcomps
fcompl
mov
ss
ret
cmpsb
cmp
fwait
outsb
call
imul
dec
mov
repnz
clc
pop
pop
popa
add
pushf
xlat
mov
add
or
inc
add
outsb
int3
xor
add
dec
push
add
push
bound
add
add
add
clc
push
add
call
jecxz
or
bnd
sub
add
vsubps
mov
add
adc
clc
add
movsb
clc
fs
icebp
dec
out
data16
push
push
jne
cld
jmp
cs
ss
ret
clc
gs
mov
push
das
add
lods
inc
pop
mov
cld
jmp
sub
xabort
xchg
das
mov
imul
mov
clc
mov
xor
add
pop
std
int3
mov
jmp
insb
jp
fdivs
inc
add
dec
ret
clc
push
inc
add
cmp
add
add
sub
sahf
inc
add
ja
sub
jp
je
fs
sar
fcmove
stos
xchg
dec
mov
stos
scas
repnz
xbegin
clc
int3
stos
jbe
je
incl
push
ret
aaa
sbb
mov
cld
jmp
xchg
xchg
ds
add
add
cmp
clc
mov
mov
jne
clc
test
hlt
imulb
loope
xbegin
and
add
add
mulb
arpl
add
scas
pusha
add
std
outsb
lahf
int3
pop
dec
dec
cmc
jle
iret
sub
mov
inc
clc
and
add
clc
sbb
clc
sub
inc
add
mov
jno
add
clc
fcmovnu
mov
clc
test
dec
ret
ljmp
popa
add
insl
xchg
pop
shll
add
mov
jmp
test
mov
clc
lcall
dec
xchg
lcall
clc
sar
cmp
dec
test
adc
add
add
insb
sub
pop
pusha
add
leave
sub
clc
addr16
mov
test
jmp
push
add
outsb
mov
clc
mov
mov
xchg
jmp
clc
xchg
dec
enter
xor
add
loop
lods
xchg
xabort
popa
add
fildll
clc
cmp
push
cld
jmp
or
mov
or
add
adc
add
clc
out
cli
fisubl
add
int
cmpsb
clc
xchg
adc
add
mov
xchg
pop
sub
add
add
mov
add
add
dec
mov
mov
clc
out
inc
add
jb
add
add
xchg
sahf
pushf
mov
clc
fninit
clc
data16
sarl
clc
js
push
add
sbb
or
ds
clc
fwait
and
add
movsb
clc
into
rorb
push
data16
mov
clc
test
clc
popf
leave
jge
or
mov
add
pop
pusha
add
mov
clc
loop
xchg
xor
add
clc
dec
push
mov
cld
jmp
sub
mov
mov
jmp
sbb
mov
add
aad
imul
movsl
clc
shrl
dec
xabort
clc
imul
jp
sbb
inc
add
gs
cmp
je
add
jno
add
push
add
cld
jmp
push
xor
iret
and
add
jp
adc
add
add
pop
xor
out
push
add
clc
dec
dec
test
je
push
dec
lret
imul
add
add
adc
add
cmp
mov
test
clc
sub
out
or
lea
add
sub
clc
pop
mov
clc
sub
std
insb
pop
in
scas
mov
clc
sbb
add
pop
jnp
dec
xabort
pop
mov
clc
sub
add
in
mov
add
data16
mov
adc
add
add
ret
inc
clc
jne
cwtl
xchg
xor
add
mov
loope
sub
ror
mov
lret
das
loop
into
scas
inc
clc
add
add
adc
add
out
xor
add
push
add
mov
clc
outsl
movsb
clc
xor
add
repz
xchg
pop
mov
lock
out
cmp
add
push
cltd
jo
add
loopne
xor
add
scas
cmovae
add
out
push
cld
push
testb
cmc
mov
int
mov
cmp
adc
popf
dec
int
clc
pop
push
add
sub
add
xchg
out
loop
out
mov
pushf
addb
es
sub
in
pop
and
cmp
clc
test
imul
xor
add
fmul
dec
jbe
cmc
mov
add
xchg
adc
add
cmp
add
jb
add
mov
gs
fldt
clc
sar
cmp
jecxz
cmc
aad
cmp
push
clc
rorl
in
cwtl
sub
add
jmp
in
cld
mull
add
movsb
clc
add
scas
jecxz
xbegin
mov
cmp
add
or
clc
xchg
aas
cmp
and
clc
pop
xchg
filds
movsb
clc
daa
clc
pop
sub
add
cmp
shrb
movsl
clc
xchg
mov
jno
add
add
add
fisubrs
ss
ret
test
clc
sar
xlat
scas
dec
mov
add
add
lods
call
inc
add
repz
clc
imul
add
decb
imul
clc
cmp
cli
lea
sar
add
pop
test
in
inc
clc
test
clc
xor
add
mov
cld
jmp
add
add
aaa
push
ror
cld
jmp
test
sub
add
add
or
add
imul
shll
pop
cmp
clc
xor
add
cltd
inc
add
jns
jmp
add
jmp
add
jp
fcoml
mov
clc
test
sbb
inc
add
sub
and
pusha
add
mov
clc
stc
faddl
clc
and
cld
jmp
xchg
xchg
dec
sub
cmp
or
add
sub
sub
outsl
sar
clc
aam
sub
cmp
add
lahf
push
add
test
sbb
sub
loope
mov
add
popa
add
push
add
add
add
clc
push
add
mov
add
add
add
nop
repz
cmp
clc
add
add
mov
add
push
clc
sub
ret
pop
add
cwtl
aas
sub
add
out
das
repnz
mov
push
clc
jnp
xchg
xlat
out
sar
int3
mov
inc
add
cwtl
nop
cmp
xchg
push
add
cmc
int3
sbb
xchg
mov
add
clc
push
push
sar
repnz
clc
cld
lahf
mov
test
fcomps
fistl
insl
inc
add
je
popf
lret
test
ja
pop
xor
cmpw
cld
jmp
sub
lret
adc
add
clc
js
add
pop
clc
imul
scas
inc
add
stos
clc
push
jns
add
fsts
add
je
add
mov
add
sbb
pop
mov
clc
ljmp
mov
add
sti
std
mov
sar
ror
addr16
jge
inc
add
cwtl
cltd
pop
clc
fwait
xor
add
movlps
add
add
rorb
fstp
sahf
push
stos
cld
jmp
inc
sub
fs
xlat
mov
push
add
mov
pusha
add
add
add
fcmovbe
incl
xor
add
cmp
pop
clc
flds
mov
cld
jmp
mov
popa
add
cmp
lods
cld
jmp
das
outsl
lods
jg
and
ljmp
sarl
add
ljmp
clc
push
sbb
clc
mov
movsb
clc
pop
clc
test
int
fldcw
loop
pop
jae
add
jp
add
mov
inc
add
inc
add
clc
test
jecxz
xor
clc
cmp
add
int
stc
mov
sar
lcall
add
add
add
enter
enter
clc
outsl
fisttps
iret
sub
push
dec
cld
jmp
sahf
push
xchg
push
orb
add
cmp
add
jmp
sti
lock
push
add
gs
ret
clc
stos
push
clc
mov
add
jmp
das
cli
xor
add
in
scas
mov
add
cmp
adc
mov
or
clc
dec
mov
xchg
lods
jnp
lret
fucomp
data16
mov
pop
mov
jmp
cld
jmp
sub
add
sbb
pop
sub
idivb
add
into
ss
clc
pop
ja
xchg
jmp
clc
fisttpll
lods
pop
gs
mov
add
fsubrl
bound
add
mov
xor
add
jb
add
cmp
or
mov
clc
sbb
sarb
out
push
shl
cld
jmp
test
add
mov
rcrb
test
cmp
test
clc
jmp
sub
mov
or
add
inc
add
pop
push
cs
add
sub
imul
jnp
gs
xor
aaa
pop
fs
fcoms
cmp
mov
cld
jmp
fwait
jg
test
add
ja
xor
lcall
jmp
fwait
or
pop
pop
and
add
xor
cld
jmp
push
fs
push
clc
cmpsb
clc
and
add
clc
and
add
sub
clc
mov
pop
jge
test
clc
add
add
clc
out
xchg
mov
add
mov
stos
mov
scas
in
mov
call
ss
ret
mov
clc
mov
leave
js
jns
clc
outsb
in
hlt
pop
dec
inc
add
fcmovnbe
in
pop
xchg
or
neg
jmp
jmp
dec
pop
aas
lods
scas
sti
push
add
ja
loop
add
add
add
clc
adc
add
add
dec
cmp
jmp
das
aas
add
cmp
arpl
add
clc
bound
add
sar
loope
inc
clc
add
gs
sbb
and
add
clc
into
add
aad
mov
dec
mov
add
out
push
jne
pop
jns
stos
aaa
icebp
or
mov
insl
insb
and
add
stos
std
inc
clc
or
cmp
mov
cld
jmp
push
data16
or
push
add
add
aas
mov
xor
add
add
dec
test
jb
add
arpl
add
je
sub
lods
cld
jmp
dec
or
test
add
cld
jmp
jge
cmp
clc
xor
add
clc
xchg
stos
jmp
add
mov
mov
cmp
adc
add
add
test
ljmp
in
sar
rolb
clc
xchg
adc
add
repz
das
mov
add
ja
clc
push
clc
and
cmp
mul
clc
fmul
dec
mov
gs
test
mov
add
add
rorb
movsl
clc
es
cli
mov
jg
clc
and
add
push
ss
ret
xor
das
divb
add
neg
mov
add
imull
mov
and
add
jno
add
clc
or
xor
add
ret
jecxz
xchg
fstps
push
add
xchg
xchg
sbb
iret
or
inc
add
fwait
or
add
add
add
dec
ret
data16
negl
popf
neg
inc
clc
xor
addr16
adc
add
push
clc
cmpsl
clc
or
add
xchg
fstpt
inc
add
jecxz
xor
add
add
cwtl
and
add
cmpsb
clc
mov
clc
inc
add
loop
popa
add
shlb
add
clc
pop
ficoms
add
mov
cld
jmp
xchg
cmp
filds
sbb
clc
pusha
add
movsl
clc
loope
insb
data16
adc
add
add
pop
jecxz
cld
hlt
sub
mov
js
clc
push
clc
insl
sub
add
add
test
cmp
add
xor
add
sub
jp
add
aaa
bound
add
clc
or
sub
add
out
push
add
sbb
clc
xchg
cmp
add
mov
test
add
xor
add
add
add
add
int3
cmpsb
clc
and
add
xabort
lods
mov
add
mov
loop
scas
cmpsl
clc
aaa
dec
mov
int3
sarl
cmp
clc
fisttpl
cmp
loop
mov
clc
sub
dec
mov
add
add
sbb
lods
jg
clc
jecxz
xor
add
fisubs
xor
add
outsb
pop
clc
arpl
add
cmp
mov
ds
clc
mov
sarl
xlat
iret
outsl
xchg
push
in
mov
inc
clc
lock
imul
add
inc
clc
dec
jo
add
adc
jae
add
inc
clc
std
mov
dec
cld
jmp
jge
sub
dec
cmp
lods
mov
add
repnz
push
push
mov
add
add
add
clc
xor
shll
nop
aam
clc
cwtl
inc
add
adc
add
add
inc
clc
sti
or
clc
mov
hlt
inc
clc
mov
ljmp
add
xbegin
ss
ret
insb
sub
pop
aad
sbb
clc
sbb
add
clc
mov
ret
clc
sar
mov
and
add
adc
add
cmc
sbb
xabort
cmp
repz
cwtl
sub
clc
pop
jne
cmp
push
lret
iret
sbb
cld
jmp
aaa
and
add
add
jb
add
aaa
clc
imul
js
clc
cmp
push
jmp
cmp
add
push
addr16
pop
xor
add
push
mov
pop
ja
mov
inc
add
mov
add
inc
add
or
gs
mov
stos
popf
mov
dec
dec
xchg
test
mov
jo
add
add
inc
add
mov
ror
scas
cmp
add
shl
clc
insl
sub
dec
xor
sbb
pop
out
out
adc
add
clc
and
add
add
add
vxorps
lods
sub
lret
insb
fstps
pop
push
clc
push
clc
ret
lock
testb
lea
test
jns
clc
clc
and
inc
clc
sbb
add
bound
add
add
and
add
add
or
add
and
add
clc
xbegin
loopne
mov
jl
add
and
out
cwtl
out
mov
jbe,pn
adc
add
add
outsb
outsb
dec
fadds
add
mul
clc
fwait
mov
clc
ret
clc
mov
scas
inc
add
sbb
cld
jmp
add
jp
adc
add
xor
add
sub
jge
pop
rcr
mov
clc
insl
in
sar
lods
jmp
jge
mov
clc
or
mov
clc
add
lods
data16
out
stos
ja
int
fistpl
clc
xor
add
popf
paddq
clc
addr16
inc
clc
jo
add
hlt
mov
out
pop
movsb
clc
push
jmp
outsl
popa
orb
add
js
pushf
and
add
clc
sub
add
adc
add
add
or
clc
into
incl
jne
cld
jmp
add
jecxz
rol
clc
jge
add
add
jle
add
je
scas
xor
insl
jne
add
hlt
stos
fldenv
iret
shlb
add
lcall
add
out
or
stos
mov
leave
out
ficomps
add
movsl
clc
das
add
add
mov
jbe
add
test
clc
inc
clc
cmp
inc
clc
std
pushf
pushf
inc
add
inc
clc
hlt
arpl
add
jp
clc
icebp
cmp
jne
sti
mov
out
pop
nop
call
clc
lock
mov
cmpsb
incl
xchg
pop
xchg
add
daa
clc
cmp
cltd
ljmp
add
push
jp
insb
rclb
add
sahf
sub
mov
inc
add
mov
insl
cmp
add
rcrb
repz
clc
addr16
mov
push
clc
insb
repz
add
adc
jb
add
inc
add
ds
add
push
add
in
cmp
xchg
cld
jmp
push
xor
aaa
sub
add
push
pop
cld
jmp
popa
and
clc
ret
clc
sub
clc
rorb
add
ret
clc
cld
ret
add
dec
xchg
pop
rcl
addr16
cmp
add
es
jns
add
mov
clc
mov
add
addr16
dec
pusha
add
out
lcall
push
add
lock
add
lods
sub
clc
or
pop
dec
sbb
and
or
jg
imul
add
mov
add
outsl
je
push
bound
add
sar
add
jns
adc
add
xor
add
int
clc
mov
clc
push
fcmovb
inc
add
aaa
adc
mov
clc
test
es
pop
or
jl
cld
jmp
loopne
fnsave
out
dec
mov
add
cmp
in
std
leave
imul
add
lahf
jns
add
mov
xbegin
add
mov
push
clc
test
psrld
pop
cld
jmp
and
and
loope
std
movsl
clc
cmc
mov
pop
clc
cmp
mov
int
cmp
add
cmp
fsub
clc
push
xor
add
add
lock
jnp
clc
inc
clc
ret
clc
pushf
add
add
push
add
push
or
fcomps
dec
push
xchg
adc
add
add
pop
mov
add
dec
test
dec
test
faddl
sar
and
add
adc
add
in
pop
fwait
or
clc
dec
aam
add
inc
clc
scas
adc
add
fisttpll
add
lahf
sahf
in
test
lods
cld
mov
clc
jmp
ljmp
out
daa
clc
decl
add
add
cwtl
and
nop
xor
add
clc
divl
clc
adc
add
lea
mov
xchg
popa
add
cmp
and
add
ss
insb
push
lret
out
scas
stos
and
mov
xchg
jg
add
xor
add
add
xchg
pop
cmpsb
clc
lcall
cmp
cld
jmp
sub
scas
nop
pusha
add
mov
fistps
sub
scas
arpl
add
or
sahf
imul
jmp
cmp
rcll
cmp
ss
ret
cmp
cmp
jecxz
fs
fwait
movsl
clc
call
add
fwait
cwtl
in
add
add
push
cmp
push
adc
mov
cld
jmp
test
icebp
jecxz
mov
xbegin
xor
xchg
leave
cli
ds
lsl
add
nop
mov
push
clc
stc
push
clc
out
repz
testl
jmp
dec
cwtl
cwtl
inc
clc
jb
add
into
popa
add
fs
cmp
pop
xchg
push
mov
pop
xor
mov
and
add
jo
add
loope
mov
xorb
add
and
sub
out
loop
nop
xchg
insl
movsl
clc
int
ljmp
call
add
add
ret
mov
scas
jns
or
sub
out
scas
ficomps
clc
leave
mov
test
repz
enter
clc
push
push
cld
jmp
push
aaa
or
pop
enter
hlt
out
mov
add
cmc
pop
sbb
mov
jns
lock
clc
not
mov
add
bound
add
add
add
pop
aas
lret
clc
stos
inc
add
pop
push
rcrb
mov
and
adc
add
clc
inc
add
pushf
jle
add
clc
aam
pop
adc
add
xor
add
jns
add
arpl
add
fadds
add
cmp
pop
fucompp
repz
or
xchg
cmp
add
mov
adc
add
push
clc
cmp
add
adc
test
clc
sub
jnp
add
adc
add
add
mov
clc
pop
cmp
push
mov
cld
jmp
icebp
push
add
mov
add
mov
cld
loope
dec
imul
fildl
jnp
cmp
add
rcl
or
movsb
clc
add
add
mov
arpl
add
test
div
pop
clc
ret
clc
data16
pop
cld
das
mov
add
stos
lahf
pop
pop
cmp
nop
jmp
sar
clc
imul
sbb
and
add
test
push
call
cld
jmp
inc
in
clc
nop
cmp
clc
mov
clc
push
filds
or
sbb
dec
pop
push
add
sub
add
fisubrs
ss
ret
lods
sub
clc
insl
mov
clc
in
mov
clc
lods
mov
add
leave
or
jmp
pop
dec
cmc
mov
mov
or
out
dec
mov
dec
xchg
xchg
or
or
loope
fisttpll
xor
data16
arpl
add
sbb
aas
cmp
clc
pushf
dec
mov
clc
imul
pop
cli
int
add
sar
mov
cld
jmp
cmpsb
cs
pop
xor
add
ret
fnstcw
clc
xor
add
scas
pop
jle
loope
into
xchg
mov
push
mov
rclb
add
jl
lea
inc
clc
ss
sar
dec
int3
xlat
in
mov
jae
add
add
mov
clc
mov
test
fidivrs
ret
clc
dec
lods
adc
add
add
clc
and
add
push
xor
add
add
cld
jmp
test
ficompl
ss
mov
sbb
loope
inc
add
pop
sbb
add
jnp
jecxz
jl
clc
nopl
mov
cld
jmp
push
insb
sbb
pop
je
in
push
mov
mov
rep
ss
ret
inc
fwait
movsb
fdivs
add
call
jmp
fwait
jp
sub
adc
imul
clc
add
add
pop
lock
aad
add
inc
add
shlb
clc
jmp
fistpl
cmp
clc
mov
mov
add
xor
add
call
in
xchg
aaa
xor
add
xchg
push
clc
pushf
xchg
xor
add
clc
call
loopne
ret
clc
add
jl
pop
cld
jmp
pop
pop
popa
adc
stc
and
add
push
clc
sbb
lea
add
or
pop
jb
add
outsb
pushf
dec
ss
pop
mov
add
pop
mov
pusha
add
and
add
clc
jno
add
add
dec
in
sbb
jae
add
call
push
push
mov
pushl
sub
aad
addr16
movsb
clc
in
in
sub
add
mov
aad
clc
jl
clc
and
add
jmp
jmp
xchg
test
mov
mov
clc
xchg
dec
imul
std
fs
sbb
imul
add
sub
add
call
add
and
add
cld
jmp
das
xchg
std
ljmp
clc
sbb
add
clc
cmp
mov
add
cmp
xchg
pop
arpl
add
add
add
jno
add
pop
lcall
mov
dec
dec
mov
add
xchg
sar
adc
clc
mov
mov
int3
push
add
hlt
inc
clc
das
jecxz
lret
fnstsw
sub
add
cwtl
add
add
inc
add
gs
cmp
out
std
clc
aaa
scas
xchg
sub
pop
xchg
jne
adc
movsl
clc
lcall
ljmp
cld
jmp
mov
clc
sar
add
add
clc
cli
lret
jno
add
lock
cmp
jle
mov
or
je
pop
push
cmp
call
cld
jmp
je
mov
sti
mov
clc
xor
xor
add
fstpl
fcom
bound
add
add
add
add
and
popf
mov
pop
imul
inc
add
cmp
sar
insb
xchg
or
add
out
clc
xor
add
clc
stos
gs
push
add
shrb
add
clc
loope
popa
add
pusha
add
push
mov
out
mov
xchg
or
cld
mov
ret
clc
or
add
mov
repnz
add
mov
dec
fs
das
mov
add
add
pop
divl
add
out
sarl
clc
mov
iret
jbe
loop
pop
shlb
add
add
and
repz
testl
cld
jmp
popf
pop
and
add
cmp
cld
jmp
add
pop
sub
ds
rcrl
add
stos
call
mov
push
push
add
movd
add
add
sar
sbb
jmp
jmp
add
jge
fcomp
pop
push
add
push
xchg
add
dec
out
or
stc
xchg
ret
add
or
cwtl
in
sbb
xchg
dec
jp
mov
mov
clc
mov
pushf
out
mov
clc
mov
add
inc
clc
and
add
loope
jl
add
arpl
add
add
and
add
nop
notb
or
add
push
xbegin
cmp
pop
cmp
clc
out
and
jae
add
jmp
lea
add
add
cmp
cli
dec
or
pop
dec
jnp
add
cld
jmp
das
and
arpl
add
clc
stos
stos
add
loopne
pop
pop
and
xbegin
testl
sbb
jmp
dec
inc
cwtl
push
pop
pop
xabort
sub
movsb
clc
jl
clc
imul
add
clc
mov
shll
xor
add
cmp
add
lret
add
clc
or
clc
pop
jge
mov
cmp
add
shll
clc
sub
push
ss
ret
sub
inc
add
pop
repnz
cmp
jmp
xor
push
lahf
iret
lock
lods
repz
add
aad
dec
fisttpll
mov
clc
loop
adc
shlb
add
clc
btc
clc
xchg
clc
icebp
and
add
add
clc
mov
sbb
add
or
cli
xchg
jecxz
lock
xchg
sub
add
jb
add
bound
add
clc
in
imul
imul
fsts
aas
and
add
std
nop
pop
popa
add
fsubrl
mov
ds
mov
inc
add
cmpsb
clc
lret
shl
clc
add
add
nop
aaa
jle
xor
adc
add
lcall
xor
add
clc
clc
mov
adc
lock
add
mov
mov
add
outsl
adc
add
pop
sbb
jl
xor
out
and
add
outsb
jb
add
jle
addr16
and
imul
add
fldl
add
push
in
ljmp
scas
push
sahf
in
insb
mov
add
rolb
xchg
xor
add
add
mov
sbb
inc
add
sub
and
add
add
mov
xchg
imul
loopne
loope
in
movsb
clc
shrb
add
add
cmp
xchg
sub
lods
clc
jo
add
mov
cmp
jmp
sub
xchg
mov
xchg
adc
add
clc
sahf
je
mov
in
leave
push
stc
xor
add
jmp
add
cmp
pop
test
add
mov
jmp
sahf
sub
push
add
xchg
sar
or
clc
das
cld
decl
mov
adc
jmp
sub
mov
clc
jmp
sub
jmp
or
lahf
adc
cmp
cld
jmp
lods
ds
mov
fs
adc
mov
cld
jmp
sbb
pop
icebp
dec
mov
add
clc
cmpsl
clc
jae
add
push
cmp
pop
cld
jmp
sub
je
and
add
or
cmc
mov
xchg
jns
mov
aam
out
cmp
mov
cli
lret
clc
pop
insb
and
add
clc
xchg
jae
add
clc
addr16
clc
mov
testb
add
push
mov
add
mov
mov
adc
add
add
xor
add
insb
mov
mov
clc
ret
call
jb
add
mov
add
daa
clc
repnz
lret
mov
daa
clc
js
dec
mov
test
popf
roll
loopne
pop
xor
add
add
mov
clc
add
cli
push
clc
sbb
gs
jb
add
jae
add
add
add
push
or
jmp
xor
scas
xchg
pushf
push
inc
clc
scas
out
mov
je
add
cmc
inc
add
dec
stc
adc
clc
sbb
clc
mov
fs
jmp
dec
sub
add
dec
inc
add
mov
mov
mov
pop
mov
in
es
adc
add
mov
inc
add
or
push
and
add
xor
add
mov
stos
mov
or
js
mov
popa
add
fwait
dec
lea
aaa
fcomip
ret
clc
xor
add
add
mov
mov
add
enter
clc
loopne
xlat
sbb
test
into
aam
lods
stc
lea
add
push
add
jle
movsb
clc
push
stos
push
pop
clc
push
in
loope
push
add
data16
mov
mov
ret
clc
pushf
jae
add
add
clc
mov
lret
mov
pop
lcall
jb
pop
sub
mov
dec
pop
dec
outsb
inc
clc
lods
inc
clc
or
push
adc
lcall
aad
lahf
cltd
scas
inc
clc
into
icebp
inc
add
pop
into
cmp
xchg
insl
test
clc
jge
loop
push
add
out
inc
clc
call
incl
jmp
dec
jge
xchg
test
clc
pop
inc
add
inc
add
cltd
lret
jge
clc
xor
add
add
add
cmp
cwtl
movsl
clc
ss
add
insl
jl
add
fbstp
add
inc
add
lret
out
lods
iret
aaa
inc
add
shl
daa
clc
xchg
and
and
scas
or
adc
pop
clc
movsb
clc
pop
mov
jns
ret
mov
and
add
iret
push
mul
clc
dec
ja
push
or
dec
mov
aam
add
outsl
icebp
xor
cltd
add
add
clc
adc
mov
movsb
clc
mov
jbe
xor
lods
shll
mov
clc
inc
add
sar
adc
add
fistpl
lret
adc
addr16
push
testb
fistl
add
push
clc
in
mov
add
mov
add
dec
pop
popf
sub
clc
pop
clc
test
mov
sbb
clc
out
inc
clc
mov
add
clc
popf
lods
pop
movsb
clc
movsl
clc
push
add
xchg
enter
jecxz
inc
clc
pop
je
add
pop
lock
into
jmp
cmp
mov
clc
pushf
fadd
clc
std
mov
xchg
shlb
add
testb
cs
or
data16
enter
jo
add
clc
jl
and
add
clc
or
je
push
add
push
add
jnp
mov
mov
push
inc
clc
jg
repnz
test
lcall
in
push
int
add
sbb
add
sub
pushf
ret
ss
lret
add
cmp
ds
rcrl
add
add
adc
add
or
push
roll
add
test
sbb
clc
inc
clc
fadds
icebp
sbb
jmp
add
cli
push
lahf
jmp
es
outsb
rcll
add
xchg
lods
popa
add
out
xchg
scas
mov
add
sbb
in
add
add
add
mov
clc
out
add
add
stos
mov
add
jmp
sub
ss
mov
pop
add
lahf
mov
clc
imul
xchg
enter
cmpsb
clc
scas
fadds
add
cmpsb
clc
lcall
sbb
jmp
scas
sub
add
add
push
popf
decl
lods
add
sub
xor
clc
add
clc
fisubrs
mov
push
pop
movhps
cld
jmp
cbtw
or
adc
add
fwait
inc
add
add
add
outsb
test
pushf
rorl
or
clc
daa
clc
push
clc
movsb
clc
mov
clc
fcom
fisubrl
scas
pop
pop
inc
add
sub
clc
mov
dec
out
clc
jmp
cs
into
loop
outsl
decl
test
jmp
xchg
jmp
push
ret
sbb
add
inc
sub
jae
add
xbegin
add
ljmp
inc
clc
xchg
es
int
mov
xchg
aas
pop
test
push
or
add
add
sub
std
js
mov
testb
loope
lock
xchg
dec
and
clc
fst
cmp
push
clc
mov
add
das
sub
or
clc
xchg
add
or
mov
clc
jl
xchg
in
out
sbb
mov
clc
scas
inc
add
call
add
add
cmp
inc
xchg
lcall
nop
or
push
add
shrl
das
call
mov
ljmp
add
shll
xor
add
jle
popf
scas
pop
jns
clc
out
push
jbe
inc
add
jne
lods
xor
add
or
xchg
push
push
clc
mov
fs
pop
add
add
add
dec
sub
loopne
mov
sbb
stos
lea
add
xchg
fisubrl
add
sar
add
jb
add
jb
add
test
jp
clc
xor
add
pop
leave
or
clc
push
clc
push
pop
clc
jge
dec
test
or
inc
add
jge
scas
xor
jg
in
jbe
add
add
iret
push
mov
add
cmp
add
add
adc
xor
add
xor
add
add
xbegin
jno
add
es
lods
pop
xor
add
push
add
mov
clc
aas
call
enter
mov
push
dec
cld
jmp
sbb
sbb
xchg
imul
pop
clc
mov
add
push
mov
cld
jmp
cmp
cmp
push
clc
jbe
xor
add
clc
dec
pushf
jbe
call
repnz
mov
add
sub
jmp
or
lcall
add
pop
sahf
mov
add
add
or
and
add
xchg
notb
add
mov
imull
push
pop
clc
and
add
leave
dec
and
insl
in
jbe
mov
cld
jmp
jp
jp
sub
ljmp
dec
stc
jmp
clc
mov
pop
cwtl
data16
dec
push
clc
daa
clc
mov
mov
clc
dec
or
push
add
pop
jecxz
stos
fisttpll
loop
mov
cmp
clc
pop
xchg
cli
aad
clc
xlat
out
cmp
add
dec
push
jmp
cld
jmp
sub
add
lcall
out
dec
mov
movsl
clc
sbb
data16
imul
add
jl
xor
cld
jmp
sub
xor
add
pop
cltd
add
add
gs
sar
mov
jno
add
push
add
mov
add
imul
cld
jmp
test
sub
leave
stc
xchg
add
add
pop
jno
add
clc
fwait
xchg
and
add
movzwl
cld
jmp
imul
jae
add
jb
add
cmp
dec
sbb
add
shll
clc
decl
cli
adc
add
sub
cmpsb
clc
and
add
dec
mov
clc
adc
add
mov
clc
repz
add
sub
das
aad
imul
loopne
fdivrs
out
hlt
stos
ja
pop
mov
out
pop
in
pop
sbb
push
ret
sub
aad
clc
mov
jg
ljmp
or
dec
hlt
pop
cmp
mov
lods
jnp
dec
mov
mov
jmp
inc
test
insb
lods
loop
cli
inc
add
sahf
inc
add
jae
add
add
stos
fwait
jmp
out
add
add
add
add
insl
xchg
xchg
jl
xchg
pop
xor
add
dec
and
add
xchg
popa
add
std
pop
pop
xor
clc
adc
out
aaa
mov
mov
notb
add
inc
add
dec
cmp
add
xchg
mov
pop
aam
out
mov
ret
jmp
movsb
push
aas
into
fbstp
add
clc
fiadds
sub
add
decl
cld
jmp
push
test
clc
jne
clc
scas
push
lock
add
fwait
pop
sub
add
outsl
and
clc
data16
mov
pushf
addr16
scas
ret
clc
mov
scas
cmp
add
pop
or
xchg
std
daa
clc
data16
out
std
ss
aad
js
xchg
xor
add
or
rcrb
sbb
xchg
cmp
in
mov
nop
rorl
sbb
add
add
fucomip
xabort
or
cmp
js
clc
clc
dec
inc
add
jle
clc
inc
clc
test
outsb
mov
je
clc
js
scas
xor
add
clc
sar
repnz
jb
add
mov
add
adc
add
sub
lods
test
aam
clc
sbb
int3
ljmp
or
clc
in
stos
cwtl
sub
clc
cltd
cld
cltd
sahf
adc
add
xchg
clc
push
add
jmp
push
rcll
xor
add
add
test
arpl
add
or
shlb
iret
dec
ficompl
pop
gs
outsl
cltd
mov
daa
clc
or
xchg
pop
std
jb
add
out
xchg
pusha
add
in
jbe
add
mov
mov
add
add
leave
jo
add
add
out
movsb
clc
scas
cmp
dec
mov
mov
fwait
pop
scas
cs
add
popf
lock
fcoms
add
mov
mov
add
out
movsl
clc
mov
clc
mov
push
or
sub
add
pop
push
fwait
add
add
js
add
mov
add
add
stos
mov
clc
sbb
and
add
push
add
cwtl
loopne
sbb
clc
mov
fcomip
data16
sub
push
cld
jmp
sub
xchg
add
add
sbb
cld
jmp
sub
jg
jmp
clc
fimuls
dec
cmp
clc
xbegin
cmp
aad
out
dec
lods
jno
add
push
add
mov
not
push
cli
hlt
xor
add
notl
shlb
add
xchg
fldcw
cmp
add
adc
add
add
sub
mov
cli
xlat
mov
test
mov
clc
xchg
adc
add
clc
jnp
clc
in
sar
jl
scas
or
clc
call
add
add
add
xor
clc
mov
dec
mov
clc
mov
pop
js
push
add
add
add
fs
imul
inc
clc
cmp
leave
mov
add
jnp
adc
add
push
dec
cmp
rcl
dec
cs
jp
cmp
add
add
out
insl
paddd
add
mov
add
add
stc
add
add
fcomps
clc
mov
xchg
ds
pop
xor
add
clc
std
cs
sar
pop
cltd
pop
add
add
fiadds
add
add
enter
push
cld
jmp
push
add
add
add
ja
sub
clc
sbb
jne
ss
ret
test
lahf
fiadds
add
inc
add
pop
xor
ss
cld
mov
test
clc
je
pop
cmp
push
bound
add
cli
cltd
jo
add
cld
jg
add
jnp
clc
jecxz
dec
xbegin
clc
add
add
gs
bound
add
data16
test
xchg
ja
mov
add
and
mov
aaa
xchg
mov
iret
arpl
add
and
or
push
ret
sub
adc
add
cmovp
add
jg
xlat
js
add
xor
add
imul
fisubrs
push
add
xor
add
stc
repz
xor
add
clc
icebp
xbegin
nopl
clc
gs
sub
cli
fildll
add
cltd
xchg
pop
cs
in
mov
hlt
pushf
mov
add
aad
imul
fsubs
mov
push
add
push
add
ficoms
adc
clc
nop
jp
cmp
rcrl
bound
add
movsb
clc
mov
add
and
fmulp
or
clc
pop
je
clc
in
xchg
cmp
xchg
sbb
test
add
lret
and
pop
bound
add
inc
add
pop
cs
test
clc
fisttpl
lock
add
and
clc
push
sbb
cmp
clc
push
add
xor
add
jns
sbb
adc
clc
mov
clc
sbb
push
out
push
add
adc
add
add
or
faddp
clc
cmp
sbb
add
xchg
mov
ja
in
pushf
pop
loopne
daa
clc
out
cmp
clc
adc
add
add
test
and
add
hlt
pop
faddl
add
popf
lods
jp
clc
ret
xor
add
adc
add
add
xbegin
clc
or
lret
lods
sbb
xchg
adc
add
pop
jno
add
outsl
mov
mov
shlb
aas
iret
inc
add
sub
inc
clc
aaa
lods
jb
add
add
ss
mov
int3
xchg
inc
clc
fistps
add
cld
jmp
aaa
cmp
or
clc
adc
add
add
cmp
testb
pushl
push
ret
movsb
insb
sub
clc
xabort
dec
cli
add
push
int
sub
clc
imul
push
clc
sub
decl
test
jmp
xbegin
xchg
movsl
clc
ss
clc
mov
clc
int
dec
inc
add
leave
daa
clc
mov
xchg
icebp
in
dec
cli
aaa
inc
add
push
add
xchg
adc
add
cmp
cltd
push
out
lea
clc
mov
clc
mov
test
dec
xchg
mov
ds
mov
push
ret
push
and
jmp
cld
jmp
push
sbb
clc
xor
add
cmp
mov
add
pop
jle
jno
add
mov
cwtl
sbb
jmp
jg
pop
xchg
jg
clc
jno
add
xor
add
rclb
cmc
mov
loopne
imul
add
inc
add
lcall
xlat
lods
pop
sbb
stos
loope
leave
sahf
sbb
cmc
cwtl
fstps
clc
and
or
add
hlt
xlat
sub
add
mov
stc
inc
add
imul
lock
clc
addr16
jo
add
test
add
mov
ss
ret
cmp
add
jp
nop
clc
inc
add
movsl
clc
mov
enter
dec
and
add
add
sar
clc
mov
jns
jecxz
in
lods
sub
test
add
add
add
xor
add
outsb
cli
xchg
mov
clc
movsl
clc
sbb
fimull
push
inc
add
mov
adc
and
add
xabort
add
clc
out
mov
pusha
add
mov
mov
clc
loopne
dec
or
add
pop
clc
pop
clc
or
int
xor
add
adc
add
add
mov
add
mov
in
lret
add
add
clc
pop
dec
loopne
std
and
add
clc
das
out
repz
aam
enter
pusha
ss
ret
xchg
sub
test
out
movsl
clc
mov
add
data16
aad
add
and
add
xchg
dec
pop
or
push
cld
jmp
jg
lcall
inc
add
dec
xchg
mov
test
pop
cld
jmp
sub
or
movsl
clc
mov
mov
cld
jmp
mov
mov
rclb
clc
into
adc
add
dec
shlb
add
adc
loopne
bound
add
insb
test
insl
out
cmp
cmpsb
clc
movsl
clc
or
clc
inc
add
push
in
and
add
sub
mov
inc
clc
push
aas
mov
mov
adc
insb
aam
cmp
and
pusha
add
push
mov
add
jmp
xor
and
add
add
sub
mov
mov
clc
push
lahf
mov
std
sub
clc
out
data16
cmp
add
xchg
jnp
mov
lret
repz
clc
aaa
movsl
clc
lahf
or
inc
clc
mov
add
ljmp
xchg
maskmovq
notl
clc
xor
add
clc
repz
clc
jge
add
mov
dec
ss
jmp
arpl
jmp
sub
clc
dec
mov
add
sbb
add
xor
add
mov
clc
call
jmp
cld
jmp
movsb
mov
xbegin
sarb
clc
dec
popf
out
iret
or
cmpsl
clc
jns
sub
clc
mov
add
add
mov
clc
and
add
xabort
sti
outsl
cld
gs
sbb
fdiv
dec
xor
add
pop
mov
cmp
pop
aad
add
xor
add
int
cmp
aas
sub
dec
stos
push
mov
cld
jmp
sahf
dec
sub
adc
add
fidivs
icebp
add
add
lcall
clc
cmp
imul
jp
add
cld
jmp
popf
shlb
out
xor
add
clc
pshufw
xchg
cmp
pop
clc
ficoms
pop
push
cli
add
add
xor
add
jbe
xchg
mov
cld
jmp
scas
ds
jae
add
adc
jg
imul
xor
add
fstps
iret
pushf
mov
imul
stc
push
cmp
clc
and
add
dec
mov
scas
aam
pop
jecxz
aas
int3
mov
clc
fists
jb
add
xor
add
daa
clc
push
push
mov
add
add
add
test
clc
push
jmp
xbegin
and
add
call
or
ja
mov
add
jl
clc
xchg
adc
add
loop
xchg
inc
clc
mov
inc
add
lret
xchg
sub
add
es
inc
add
inc
clc
jns
clc
popa
add
cmp
clc
insl
xor
add
out
ja
sti
lret
out
xlat
sbb
jmp
sub
nop
sub
mov
loop
mov
jbe
ret
clc
jne
add
data16
xor
sub
add
scas
es
adc
add
and
add
in
cmp
rdpmc
add
mov
cmp
sub
push
clc
mov
clc
mov
stos
test
clc
data16
cmp
nop
mov
lahf
mov
sub
cld
jmp
lea
adc
clc
inc
clc
int
sar
clc
xchg
sub
add
rcrl
mov
pusha
add
cwtl
dec
mov
sti
sahf
push
mov
xchg
push
mov
sub
bswap
sti
sar
mov
sar
popa
add
ljmp
add
clc
in
xor
add
sbb
inc
clc
decl
jmp
lods
insl
pop
mov
clc
push
add
xchg
and
push
add
jp
add
sar
push
add
pop
xchg
repz
mov
clc
cltd
in
mov
add
mov
movsl
clc
push
inc
add
push
add
mov
clc
call
ficoms
add
add
jae
add
xor
add
outsb
mov
add
add
clc
mov
clc
int
fnstsw
pop
add
lret
imul
and
add
icebp
cmp
es
test
jmp
add
repnz
xor
add
jne
in
cmpsl
clc
sbb
inc
clc
addr16
cs
loop
mov
xchg
gs
imul
mov
cld
jmp
dec
leave
mov
clc
mov
xchg
mov
cmp
xor
add
pusha
add
and
dec
and
add
or
add
pushf
mov
add
clc
sbb
jmp
adc
add
imul
mov
push
add
out
sbb
add
imull
jle
ja
sbb
clc
fcoml
faddl
es
dec
inc
clc
push
fisubs
add
subb
dec
add
add
add
add
add
add
xbegin
clc
pop
cmpsl
clc
cmc
stos
push
sbb
inc
add
jge
sbb
das
ja
js
clc
dec
js
xor
fildll
outsb
insl
push
mov
xchg
ficompl
add
add
inc
clc
xchg
dec
mov
clc
dec
pop
clc
mov
clc
xbegin
add
add
mov
aad
cmp
clc
lcall
inc
clc
std
arpl
add
clc
into
mov
mov
dec
enter
faddl
mov
sbb
and
pusha
add
xor
add
movsb
clc
je
jmp
leave
lahf
and
xchg
daa
clc
scas
inc
add
cmpsl
clc
popa
add
daa
clc
test
roll
xor
lcall
jp
rolb
cs
decl
xor
mov
mov
test
cmp
setae
add
and
into
fs
pop
clc
cs
mov
clc
pop
ja
movsb
clc
popa
add
xabort
out
int
sbb
cld
jmp
push
and
add
in
adc
add
aam
fisttpl
cmp
test
lods
sbb
clc
out
xchg
mov
adc
push
jno
add
push
push
mov
and
add
jo
add
mov
clc
xor
add
fucomip
addr16
adc
add
mov
stos
enter
and
pop
clc
scas
or
add
clc
push
dec
das
xor
add
enter
jne
xor
cld
jmp
sub
or
test
jmp
or
push
add
jle
add
clc
mov
add
xchg
push
gs
cmp
adc
xbegin
xchg
pop
ret
push
arpl
add
divb
clc
adc
add
add
into
push
hlt
inc
clc
xor
push
mov
fdivl
add
push
add
push
iret
jmp
out
sbb
lret
inc
clc
and
add
clc
xchg
pop
jbe
and
sbb
jmp
lods
sub
dec
push
inc
clc
xor
add
aaa
fcmovb
clc
push
add
and
add
imul
add
push
add
push
leave
sbb
mov
std
sti
aad
mov
nop
pusha
add
xchg
and
add
add
es
orps
or
cld
jmp
sub
roll
add
clc
pop
sub
add
clc
cltd
push
test
mov
add
addr16
jmp
clc
out
loope
and
add
repz
sbb
add
clc
fcomp
sar
pop
inc
add
icebp
add
add
mov
lods
test
dec
sti
pusha
add
fxch
add
or
cmp
clc
or
mov
clc
repnz
mov
sar
lret
sar
outsl
dec
jmp
pop
std
mov
clc
push
add
add
add
adc
clc
sub
add
adc
dec
popa
add
cmp
lea
add
clc
out
and
gs
mov
lret
cmp
jg
iret
in
or
clc
sbb
jmp
aas
cmp
add
fwait
sub
and
add
adc
add
jge
sub
clc
cmp
add
ds
lahf
mov
add
cmp
clc
lods
adc
clc
test
sub
and
clc
ret
clc
fs
push
fwait
and
add
cli
jp
clc
xchg
inc
add
leave
rclb
push
cld
jmp
test
jo
add
inc
or
scas
aas
fistl
test
mov
outsl
es
pushl
sar
cltd
cmp
int
adc
add
stos
prefetch
or
clc
das
inc
clc
aam
xor
add
mov
mov
fsubl
clc
rol
clc
es
mov
add
fildl
data16
or
cmp
cmp
add
mov
add
aam
movsl
shl
add
add
sub
int
rcrb
adc
add
icebp
sbb
inc
clc
sbb
outsb
test
pop
push
add
jg
pop
popf
xor
add
add
mov
add
stc
mov
add
clc
iret
out
lret
xchg
adc
add
lret
add
outsl
mov
cli
jmp
add
xchg
clc
xbegin
cmp
add
xchg
push
sbb
clc
push
jns
es
popf
jbe
ret
clc
mov
clc
xor
sbb
add
sub
sahf
fs
xor
dec
movsb
clc
xor
add
mov
clc
lods
cmpsl
clc
icebp
dec
xchg
inc
clc
sub
xchg
imul
dec
push
jbe
sub
add
add
mov
loope
call
in
rolb
loope
lea
in
stos
stc
mov
mov
add
push
mov
cld
jmp
cmpsb
dec
add
add
sub
push
clc
pop
adc
add
xchg
add
clc
mov
sar
add
push
cmpsb
clc
out
mov
add
fistpll
adc
add
aam
clc
ss
add
lahf
out
xor
add
add
jg
clc
cmc
outsl
rclb
nop
std
mov
dec
cld
loope
pop
mov
clc
cmp
xchg
es
mov
add
sub
ss
ret
mov
add
aaa
data16
mov
add
call
clc
rolb
es
adc
clc
mov
add
cmc
cmpsb
clc
ret
clc
xchg
or
sbb
add
das
cmp
xchg
mov
push
clc
sbb
test
mov
sub
pop
lock
fbld
push
mov
lods
add
push
fiadds
insb
fildl
pop
jo
add
clc
clc
es
cmp
add
dec
mov
pushf
mov
loop
fs
mov
jmp
test
push
stos
sbb
adc
add
clc
inc
clc
sub
fisubrl
mull
add
mov
clc
inc
add
loope
fs
bound
add
and
add
clc
rcll
add
add
clc
inc
add
xchg
push
inc
add
adc
add
outsl
cmp
shl
test
jp
jl
add
jb
add
je
add
adc
add
cmp
add
addr16
repnz
jg
or
xabort
add
inc
add
push
clc
ja
aad
add
sbb
add
xor
add
clc
mov
clc
cmp
clc
icebp
cltd
cmp
out
fisubl
fwait
jmp
test
jle
push
mov
hlt
xchg
popf
or
aam
js
clc
adc
add
clc
add
add
cmp
ljmp
cmp
call
jmp
or
pop
cmpsl
clc
insb
adc
add
fiaddl
adc
add
clc
xchg
inc
add
add
add
je
data16
loop
test
sahf
enter
add
mov
add
scas
xor
add
pushf
inc
clc
mov
jo
add
cmp
ss
scas
push
imul
imul
clc
daa
clc
leave
xchg
inc
add
jae
add
in
dec
sarb
xchg
popa
add
cmp
add
cld
fidivs
add
dec
clc
clc
push
mov
clc
aaa
es
jae
add
aad
add
mov
jmp
negb
cmp
add
in
mov
jno
add
lea
in
inc
add
ret
clc
in
dec
es
jl
clc
xabort
clc
mov
jbe
gs
add
add
ds
add
dec
dec
clc
pop
mov
gs
sar
sub
clc
jae
add
sbb
mov
clc
add
add
cmp
cmp
cld
icebp
js
add
cmp
clc
cmp
clc
es
mov
add
add
add
fldcw
mov
clc
jle
clc
imul
push
add
jge
add
mov
cld
jmp
xchg
data16
or
sub
cld
jmp
fs
mov
clc
dec
dec
adc
add
add
fs
cmp
add
fs
in
mov
add
xchg
into
push
test
cld
jmp
insb
sub
sub
nop
pop
dec
cwtl
loopne
out
ds
fwait
xlat
mov
rorb
loopne
dec
imull
pop
sbb
add
aaa
inc
add
mov
pop
clc
jns
jg
clc
outsb
cmp
clc
inc
add
jg
add
xbegin
clc
js
aaa
cmp
clc
js
clc
xchg
pop
jl
out
jmp
pop
push
push
cld
jmp
xchg
sub
push
jae
add
loopne
ljmp
push
cltd
ljmp
add
cmp
xchg
jno
add
add
rorl
xchg
sub
jmp
add
push
push
fldenv
popf
cmp
clc
in
cmpsb
clc
fs
jno
add
push
adc
add
clc
xor
stos
outsb
inc
add
aas
push
sub
mov
xchg
cmp
sbb
clc
pop
clc
fistpl
add
add
mov
loop
nop
test
lahf
loopne
scas
lods
pop
stos
test
clc
inc
add
jb
add
jl
clc
or
out
inc
add
sub
cli
push
add
push
add
inc
add
xchg
clc
jb
add
mov
add
sub
mov
add
sub
push
add
je
clc
dec
xchg
add
add
cmc
stos
sub
mov
clc
xor
cmpsb
clc
decl
out
pushl
sahf
cmp
add
add
sub
add
cltd
test
mov
and
add
clc
mov
cld
jmp
das
dec
xor
add
add
jne
insb
inc
clc
inc
clc
xor
add
add
add
add
push
or
jle
dec
test
jmp
lods
dec
insb
mov
bound
add
lahf
cli
cwtl
fldenv
mov
icebp
je
add
mov
add
mov
sahf
into
cmpsb
clc
xor
add
jae
add
lea
add
aad
lods
mov
inc
add
cmp
mov
movsb
cld
jmp
aas
xor
jge
cli
xor
add
clc
dec
mov
clc
lock
in
lods
and
xchg
nop
popf
fs
pushf
sti
aas
add
in
push
js
jle
add
cmp
xor
add
xchg
cmp
in
jecxz
dec
xchg
cs
clc
lods
pop
mov
cmp
fdivrs
add
jmp
jmp
jno
sub
add
xor
add
clc
in
cmp
in
xor
gs
std
inc
clc
je
add
dec
incl
dec
cmp
jmp
sbb
sbb
cld
jmp
nop
mov
add
add
jp
xor
push
clc
enter
sub
dec
scas
scas
lods
and
add
xchg
xor
pop
cmp
popf
lret
cmp
lea
push
add
arpl
add
clc
cmp
push
ss
ret
sub
fsub
clc
fdiv
pop
clc
test
xchg
scas
push
mov
add
or
clc
es
xchg
fsubrs
sti
cld
jmp
sbb
or
add
add
mov
cmp
dec
adc
clc
and
add
add
rcrb
lock
fstl
add
sbb
push
cld
jmp
add
ficomps
in
clc
in
add
add
mov
or
lock
add
into
outsb
sbb
inc
clc
out
stos
jne
mov
clc
xchg
adc
clc
scas
and
dec
xlat
pop
into
adc
clc
imulb
cmp
ret
adc
xchg
push
adc
xor
add
iret
outsl
push
add
shr
jmp
push
add
push
add
enter
and
add
add
clc
pop
bound
add
es
sti
shrb
aad
clc
sub
js
test
sbb
sar
add
inc
add
jo
add
jge
xlat
je
clc
ret
clc
adc
add
clc
adc
add
clc
movsb
clc
in
loopne
jl
xor
add
ret
icebp
xor
add
push
lea
add
mov
ss
ret
insb
dec
sub
add
add
into
mov
clc
cmp
mov
add
sbb
ss
ret
dec
add
xchg
cmp
xor
sub
nop
sub
insb
movsb
clc
xor
add
js
push
dec
and
add
xchg
nop
mov
jl
jno
add
pop
pop
shrb
pusha
add
inc
add
and
add
jp
fistps
cmp
push
add
clc
xchg
sub
add
stos
es
scas
jge
jns
js
push
add
fwait
jge
pushf
lods
push
clc
stc
adc
add
dec
lret
mov
push
test
inc
add
xor
cwtl
and
fcomi
nop
dec
sub
icebp
adc
add
cmpsb
clc
xor
inc
cld
jmp
sub
pop
sub
loope
sbb
int3
push
add
std
imul
push
cmpsl
incl
jmp
add
cmp
xor
mov
pop
int
iret
movsb
clc
outsl
aas
sbb
nop
push
add
pushf
adc
add
push
cld
jmp
or
clc
lret
or
clc
jne
in
sbb
jno
add
sar
jmp
or
pop
sub
mov
cld
jmp
mov
inc
add
xchg
fwait
pop
push
add
pop
sti
push
pusha
ss
ret
sub
jno
ficompl
data16
lods
bnd
mov
add
shll
add
add
pop
jo
add
cmpsb
clc
or
clc
arpl
add
push
cld
jmp
insb
xor
sub
sar
js
sbb
mov
add
jmp
mov
add
cld
pop
jg
push
cmp
mov
scas
mov
loop
push
add
and
add
out
mov
pop
push
push
jmp
scas
add
fadds
add
jge
imul
mov
xchg
bound
add
and
add
add
loop
pushf
enter
pop
mov
movsl
clc
mov
add
xchg
gs
sub
clc
imul
cmp
stos
imul
dec
dec
mov
jns
add
bound
add
push
clc
jl
mov
clc
jge
mov
xchg
cli
dec
pop
jne
popf
mov
sub
sti
sti
cmp
add
add
cmp
adc
add
rorb
jge
clc
fs
ret
clc
jmp
clc
pusha
add
inc
clc
mov
in
bound
add
clc
cmp
and
add
leave
cld
jmp
push
pop
sub
out
fstpt
inc
add
xor
insl
xor
add
cmp
aam
jbe
sub
pusha
add
fadd
clc
push
loopne
ret
jg
test
xchg
dec
push
decl
cld
jmp
aas
sub
mov
push
ret
lods
push
and
add
add
scas
pop
mov
jb
add
clc
scas
test
cmpsb
clc
mov
add
mov
push
sar
cmpsl
clc
inc
clc
int
xchg
sub
gs
lea
mov
sub
add
xchg
repnz
js
inc
add
cmpsl
clc
out
or
stos
pop
cvtps2pd
cwtl
out
stc
daa
clc
cmpsb
clc
sahf
jmp
push
jno
add
lret
add
sub
sub
loopne
inc
add
xor
add
add
add
mov
add
nop
data16
sub
es
push
clc
inc
clc
mov
scas
add
cmc
mov
clc
fistpl
clc
and
add
lcall
int
push
mov
cld
jmp
sub
clc
mov
sub
mov
clc
xor
add
add
scas
pop
push
add
inc
add
push
sub
cld
jmp
fwait
sahf
push
xor
je
int
lods
sahf
pusha
add
push
sub
sub
je
add
push
mov
pushf
mov
inc
add
xchg
mov
pop
clc
add
add
cmp
add
pop
push
mov
add
clc
jno
add
loope
scas
ja,pn
clc
clc
lock
test
lcall
mov
into
cmp
cld
jmp
add
clc
lcall
jmp
adc
jbe
sub
add
out
pop
scas
fdivrs
shll
add
add
pop
sbb
lret
jl
sub
clc
lahf
xchg
cmp
enter
fcoms
fs
mov
bound
add
jmp
add
add
cmpsl
clc
ja
clc
mov
add
and
add
xor
add
cmp
int3
scas
and
add
pop
es
out
das
mov
sbb
clc
jmp
cld
jmp
xor
ss
clc
pop
cwtl
repnz
lock
clc
sbb
jae
add
push
pop
sar
add
popl
add
dec
into
cli
push
clc
jnp
push
push
addb
sub
add
aas
adc
add
out
jg
clc
scas
sbb
outsb
jge
daa
clc
ds
push
clc
out
mov
cmp
mov
push
add
cmpsb
clc
in
js
pop
jle
cmc
push
lods
aad
sbb
jmp
cld
jmp
sub
add
lret
add
clc
into
and
add
clc
and
add
add
pop
push
sbb
add
jns
pop
mov
jmp
sahf
sub
clc
idivb
mov
clc
and
add
cmp
scas
clc
mov
lods
xabort
jge
clc
xor
add
clc
jecxz
out
cli
ss
popf
cmc
cmp
add
cli
icebp
add
add
cmp
add
clc
test
sahf
test
fstpl
xchg
pop
call
mov
add
and
add
push
inc
ss
ret
scas
cmp
add
outsl
int
add
data16
test
scas
and
add
clc
lock
clc
aas
cmp
mov
jne
cld
jmp
shrb
add
rol
clc
adc
add
icebp
sub
ret
outsl
jno
add
into
lahf
ja
clc
mov
push
cmc
add
add
out
insl
frstor
clc
ja
jl
or
add
dec
mov
in
pop
mov
mov
pop
push
xor
add
xchg
addr16
add
add
imul
popa
add
cmp
add
sahf
xchg
aaa
popf
sub
mov
aas
pop
push
add
fistl
jmp
nop
dec
sub
scas
pushf
pop
push
add
add
addr16
add
add
pop
inc
add
jnp
clc
xchg
xor
add
pop
inc
add
inc
add
adc
add
pop
imul
clc
push
test
cld
cmp
add
mov
add
push
clc
sbb
jmp
dec
mov
insw
xor
add
mov
clc
lea
ret
test
clc
jb
add
add
stc
movsb
clc
jno
add
inc
clc
dec
sub
clc
add
and
add
pop
mov
dec
aaa
stc
dec
mov
pop
cmp
add
rorb
dec
xlat
mov
lret
lods
xchg
fdivl
mov
faddl
dec
aam
cmp
jmp
insb
aas
push
je
clc
jno
add
or
add
popa
add
cltd
ss
clc
popf
sbb
add
adc
arpl
add
add
sahf
inc
add
in
fdivl
add
stc
pop
pop
or
add
add
add
add
jge
sub
cld
jmp
das
outsl
lods
jg
popf
jle
push
add
jnp
clc
cs
mov
add
leave
add
add
jb
add
clc
push
add
mov
dec
jp
popa
add
leave
sahf
sub
add
pop
decl
ss
ret
push
adc
divb
add
imul
sub
add
dec
test
je
add
and
add
sbb
or
add
sub
clc
je
xchg
or
clc
into
dec
test
cmp
adc
fcmovu
cmpsb
clc
arpl
add
fs
add
mov
add
or
add
rorb
xchg
and
add
mov
mov
clc
out
adc
add
jle
clc
out
cltd
add
add
add
mov
add
cld
jmp
fs
pop
sbb
test
cld
jmp
add
add
imul
xor
add
add
mov
add
inc
clc
lahf
in
imul
lods
mov
std
ljmp
clc
push
add
jmp
sbb
add
fwait
or
add
mov
popa
add
push
or
xbegin
xor
ss
ret
adc
push
ret
lea
aaa
push
dec
mov
mov
mov
add
add
add
stc
out
sub
add
cld
inc
clc
cmpsb
clc
pushf
ss
add
out
js
add
bound
add
dec
push
clc
outsl
call
inc
cmp
clc
add
add
mov
clc
js
clc
xchg
enter
clc
lret
adc
add
xchg
pushf
sti
fnstcw
clc
movsl
clc
pushf
cmp
push
clc
pop
ds
add
or
clc
inc
add
int3
hlt
inc
clc
out
shl
push
add
nop
mov
or
fstl
dec
divb
mov
sbb
xchg
dec
lcall
sahf
js
mov
fs
mov
clc
dec
data16
shlb
fdiv
ja
icebp
xchg
sar
clc
lahf
xchg
cmc
out
rorl
pop
jns
clc
fidivs
aaa
push
jo
add
iret
or
xchg
insb
adc
scas
iret
sti
jl
mov
sar
stc
pop
cmp
clc
insl
cmp
lret
adc
add
add
add
addr16
js
adc
cltd
xchg
or
clc
xchg
sub
add
test
arpl
add
clc
pop
cmc
popa
add
decl
jmp
movsb
insw
stos
mov
clc
insl
push
add
mov
mov
mov
jle
inc
add
or
sbb
add
add
jns
clc
push
cmp
clc
sub
rolb
cmp
inc
clc
imul
add
fs
loopne
popa
add
and
add
pop
xor
add
clc
js
clc
or
test
mov
je
push
jmp
add
mov
xor
add
add
pusha
add
mov
or
sbb
cmp
add
lret
in
dec
lahf
scas
pop
lea
jb
add
test
repnz
cld
jmp
gs
es
repnz
add
out
insb
call
jmp
jp
add
add
add
nop
cltd
pop
and
add
lret
sarb
add
ret
add
sar
add
fistpll
cmp
clc
inc
clc
and
fsubrp
and
add
ss
ret
fwait
and
imul
add
push
add
dec
je
lods
push
push
dec
dec
pop
jle
add
mov
xchg
or
add
cld
jmp
push
push
xchg
ds
clc
and
clc
arpl
add
sub
add
sbb
push
ret
pop
and
lea
leave
jge
mov
testb
jmp
push
add
mov
add
cld
jmp
sbb
xor
adc
cmp
add
dec
sub
xchg
xlat
shl
pop
aad
jno
add
shll
decl
cld
jmp
sbb
xor
fdecstp
and
clc
jo
add
and
add
pusha
add
mov
mov
add
xbegin
fbstp
clc
lods
jg
enter
xchg
xabort
fdiv
repz
xabort
xchg
jge,pt
push
or
pop
cmpsb
clc
adc
add
jmp
cmpsb
cmp
nop
jnp
clc
stos
jl
clc
or
popa
add
cmp
sbb
icebp
rcr
out
repz
jno
add
add
dec
dec
dec
ss
sti
add
add
pop
clc
xor
add
cld
jmp
or
jp
adc
add
out
mov
out
mov
clc
addr16
push
ret
clc
cltd
out
or
jmp
xchg
mulb
out
sub
movsl
clc
adc
add
xbegin
shll
and
add
in
scas
movsl
clc
push
add
or
add
mov
xbegin
cld
jmp
scas
imul
clc
mov
jno
add
or
pop
in
or
add
aas
lods
cmp
jle
stos
mov
test
or
cmpsb
clc
sbb
mov
ljmp
dec
pop
rorb
testl
dec
daa
clc
scas
repnz
and
add
clc
xchg
mov
lret
dec
mov
inc
clc
movsl
clc
or
mov
clc
dec
jge
imul
out
enter
sbb
mov
add
pop
and
pmaxub
add
jne
stos
lret
in
xor
add
cmpsb
movsl
cld
jmp
inc
clc
xor
pop
testb
imul
outsb
test
or
jb
add
add
add
xchg
out
movsb
clc
cmp
adc
inc
clc
jns
add
add
data16
std
pop
clc
cwtl
sar
arpl
add
clc
cld
jns
pop
mov
pop
mov
add
clc
sahf
add
add
sbb
jb
add
push
clc
dec
pop
and
add
add
xchg
sahf
inc
add
add
add
xchg
or
cmp
add
ret
imul
nop
call
nop
push
insl
ds
nop
inc
add
inc
add
cmp
clc
cmpsb
clc
add
add
hlt
dec
out
add
add
jmp
jecxz
stos
mov
addr16
lret
pop
and
add
add
cmpsb
clc
insb
aam
sub
je
or
adc
add
add
add
rcl
jnp
clc
dec
add
add
add
clc
and
and
push
add
pop
cmp
and
add
mov
bound
add
mov
in
imul
dec
push
inc
cld
jmp
sub
clc
mov
clc
mov
add
adc
add
add
cmp
sub
clc
and
add
add
iret
test
clc
nop
dec
incl
shl
incl
nop
subb
xchg
pop
int
xor
add
ret
cmp
dec
clc
sub
cmp
add
cwtl
rcrb
clc
cmp
in
int3
cmp
cmp
push
je
leave
xor
add
cwtl
filds
es
or
clc
mov
jb
add
xchg
movsl
clc
push
jmp
or
clc
dec
int
fcoml
push
xchg
clc
add
cmp
fisttpl
fwait
es
lret
add
xor
add
lret
or
cmp
xlat
xchg
xchg
xchg
outsb
test
add
pop
mov
pop
dec
mov
insb
idivl
mov
in
cmc
jl
add
add
clc
lret
add
je
clc
dec
pop
pop
loop
mov
nop
xchg
cmpsb
clc
push
add
stos
adc
add
add
insb
call
movsl
clc
enter
ficomps
pop
pop
frstor
add
jl
add
dec
mov
push
aas
testb
cli
mov
cmp
clc
xor
add
cli
sub
pop
mov
clc
inc
add
pushf
in
cli
jle
clc
aad
decl
pop
mov
add
inc
or
add
jmp
mov
in
clc
fdiv
pop
and
or
add
clc
imul
add
xchg
push
add
sub
lahf
int3
fidivrs
lret
xbegin
fs
mov
mov
ds
xchg
xor
add
dec
xchg
iret
dec
in
adc
add
movsb
clc
clc
or
or
clc
mov
lods
mov
add
cld
push
mov
clc
aam
xchg
loopne
push
push
jecxz
test
and
add
mov
mov
cmp
and
add
add
clc
adc
add
clc
inc
add
mov
dec
shrl
test
insb
cld
jmp
mov
pop
test
outsl
popf
mov
aaa
cltd
mov
clc
push
cld
jmp
test
push
add
mov
push
push
sahf
mov
mov
out
cmp
cli
or
xabort
loope
xchg
lahf
mov
add
add
jl
add
mov
addr16
inc
add
scas
sahf
aas
jmp
push
cld
jmp
imul
or
clc
in
pop
iret
lahf
xchg
push
dec
das
xor
add
add
add
clc
stc
pushf
sar
inc
clc
mov
jmp
popa
outsl
mov
clc
adc
and
lret
outsb
int
clc
cmp
clc
push
inc
clc
movsl
clc
add
add
adc
add
clc
test
decl
pop
ljmp
sub
test
push
add
xchg
cmp
shl
cmp
cmp
ret
clc
xchg
fistpll
aam
clc
or
jl
shrl
jae
add
pusha
add
test
add
ds
lcall
cwtl
loope
lcall
call
ss
ret
push
nop
pop
into
sub
push
clc
rcll
and
lock
mov
in
add
add
mov
jno
add
addb
add
jmp
outsl
push
call
clc
inc
clc
sbb
pop
mov
and
add
stos
arpl
add
sub
add
cmc
add
clc
jb
add
inc
add
cmp
int
inc
add
clc
lahf
das
cwtl
test
jl
and
lret
dec
jg
mov
scas
cmp
es
xor
push
out
pop
xchg
xor
add
jo
add
add
lcall
push
gs
notl
clc
cmpsl
clc
push
jae
add
push
push
cld
jmp
mov
jne
clc
imul
add
cld
mov
and
mov
clc
sub
add
pop
mov
cmp
clc
mov
add
xor
jmp
mov
add
pop
mov
inc
add
cmc
es
push
add
mov
add
test
cld
loop
jle
pop
clc
fwait
cltd
cli
popf
xchg
pop
clc
clc
adc
add
sub
sub
inc
clc
ja
clc
jo,pt
add
inc
add
lea
bound
add
pop
clc
mov
lock
add
imul
add
nop
adc
pop
cld
dec
cmp
clc
jo
add
mov
cmp
daa
clc
data16
adc
shll
or
jecxz
lret
add
clc
jg
out
xchg
gs
cli
cmp
incl
xchg
sub
clc
jae
add
jno
add
clc
cmp
jnp
clc
incb
add
adc
add
add
add
test
cld
jmp
jno
sub
dec
and
jge
clc
xchg
dec
mov
sbb
clc
or
cmp
fcomi
enter
pop
ja
xbegin
sub
add
push
add
pop
pop
ret
add
cmp
pop
sbb
xchg
insl
sub
add
jns
push
add
mul
clc
sub
push
xlat
jecxz
or
mov
add
add
mov
cld
jmp
dec
push
popa
cmpsb
sbb
pop
mov
popa
add
aam
xchg
test
jmp
push
sub
clc
push
add
mov
mov
cmp
cmp
push
xor
add
push
cld
jmp
xchg
sub
and
xchg
fdiv
jl
test
clc
mov
fwait
sub
add
adc
add
add
cmp
inc
add
lcall
mov
daa
clc
hlt
jp
add
sar
data16
pop
out
stos
push
jne
inc
clc
lods
mov
repnz
clc
push
add
test
clc
xbegin
clc
adc
jo
add
nop
icebp
gs
mov
add
add
mov
dec
push
pusha
add
sbb
add
jns
add
pop
jne
push
ret
clc
or
xchg
popa
add
imul
clc
shl
cmp
xlat
jle
xchg
fidivs
add
dec
sbb
in
xor
add
clc
and
add
cmp
sub
call
movsb
clc
stos
mov
push
ret
imul
sub
clc
xchg
sbb
es
sub
ficompl
mul
clc
xlat
mov
clc
das
adc
cld
jmp
sub
sub
repnz
rolb
mov
push
add
fldt
ss
ret
xor
aas
mov
out
lahf
jmp
test
cld
jmp
fcomps
mov
clc
xor
add
cmp
add
leave
repz
add
dec
mov
sub
test
cmpsl
clc
outsl
sbb
add
data16
out
in
jno
add
iret
int
add
jmp
clc
xchg
xchg
repz
mov
add
pop
test
add
cmpsl
clc
push
add
add
clc
repz
outsl
adc
add
clc
cmpsl
clc
js
clc
ss
repnz
loop
movsb
clc
sbb
push
test
jp
clc
mov
je
clc
ds
bound
add
ja
clc
std
fwait
adc
add
and
add
cwtl
mov
cld
jmp
sbb
add
pop
js
clc
sti
dec
cmp
and
cld
jmp
sub
sub
pop
call
daa
clc
stc
cmp
mov
clc
enter
cmc
mov
clc
popf
fbld
clc
adc
add
add
cmp
clc
or
out
sbb
out
ljmp
sub
dec
mov
add
mov
gs
pop
cmp
jmp
xchg
fbld
add
lret
adc
add
add
cmpsl
clc
mov
add
add
das
adc
add
cmp
xor
add
pop
bound
add
lfence
pop
mov
data16
mov
dec
inc
add
dec
rcll
add
add
add
repz
add
fst
pop
xbegin
loop
push
add
adc
mov
mov
jmp
insb
test
add
iret
ficoml
add
out
cltd
mov
sahf
icebp
cmpsl
clc
mov
clc
and
add
data16
stc
jno
add
add
push
outsb
neg
scas
fadd
clc
sub
into
push
add
clc
dec
test
add
data16
push
cs
repnz
scas
xchg
add
add
xchg
lock
adc
add
add
clc
stos
mov
clc
cmp
decl
jmp
cmp
jno
clc
cmpsl
clc
out
lock
xor
ss
ret
aaa
sub
sbb
iret
sbb
add
add
nop
cmp
add
add
add
jl
clc
inc
clc
outsl
pop
sar
clc
fsubp
clc
xor
add
stos
test
ret
clc
adc
add
test
fisubrs
scas
xchg
repz
add
into
xabort
add
int3
inc
add
es
push
mov
cld
jmp
xor
mov
push
inc
clc
mov
and
add
or
data16
lea
movsb
clc
fisttpl
stc
hlt
sbb
icebp
cld
jmp
push
sub
popa
mov
add
dec
mov
clc
lahf
mov
clc
push
clc
lret
icebp
cmp
icebp
push
clc
add
add
fs
xor
add
add
dec
test
pop
insl
add
inc
clc
cwtl
cltd
sbb
movsb
clc
das
xor
ja
xlat
punpckhwd
add
jl
clc
push
add
loopne
pop
sub
clc
bound
add
clc
mov
clc
fldenv
add
mov
clc
mov
add
add
add
clc
adc
add
clc
mov
clc
cmp
add
inc
clc
aad
fistps
sahf
ficoml
add
jl
ret
clc
data16
cmp
clc
bound
add
cmp
daa
clc
xabort
add
jl
dec
add
add
std
pop
lea
add
push
add
cmp
add
dec
sub
jnp
xchg
lea
int3
mov
in
jne
clc
jne
clc
mov
cltd
imul
add
clc
pop
clc
dec
push
popl
cld
jmp
sub
or
push
add
rcrl
aaa
rol
clc
pop
repz
es
mov
clc
and
clc
imul
lock
clc
add
add
clc
sbb
clc
jnp
inc
clc
mov
jmp
add
push
divl
add
lret
test
mov
hlt
rorl
inc
add
lahf
xchg
cmp
pop
jno
add
gs
cmp
clc
pop
mov
xor
add
stc
in
insl
push
cmp
repz
imul
clc
push
mov
cld
jmp
mov
xor
add
call
mov
adc
add
xlat
loopne
outsb
loop
sub
clc
mov
xchg
adc
add
add
cld
jmp
nop
add
call
sbb
clc
hlt
or
jnp
push
add
push
inc
clc
in
jae
add
aad
cmp
mov
notl
add
add
sbb
add
cmp
sbb
pop
add
cmp
sub
inc
inc
add
jmp
add
dec
or
sbb
add
sbb
clc
sbb
xchg
xchg
out
xchg
and
add
clc
pop
mov
mov
test
and
add
jge
clc
adc
add
outsb
dec
inc
clc
pushf
insb
mov
add
push
jne
ljmp
sbb
add
add
or
sub
divb
push
leave
dec
loopne
cmp
ret
clc
dec
adc
add
mov
clc
cmp
clc
dec
ror
jmp
cmp
xor
add
jmp
pushf
test
fisubrs
clc
pop
scas
dec
add
add
insl
sub
mov
cld
jmp
pop
jge
cmpsb
clc
jl
data16
pop
pop
dec
repz
movsl
clc
fdiv
mov
cld
jmp
jg
movsb
test
pop
pop
das
js,pt
hlt
scas
jge
incb
add
mov
jmp
sub
sub
int3
pushf
mov
jo
add
jo
add
add
enter
add
mov
clc
sbb
cld
add
cwtl
adc
add
clc
stos
xor
add
jns
clc
lret
push
clc
scas
and
add
out
jecxz
inc
clc
cmp
sbb
add
std
pusha
add
stc
jne
clc
mov
into
cli
push
add
popa
add
outsl
inc
clc
adc
stos
mov
cwtl
dec
dec
xor
add
add
lods
push
clc
dec
jne
add
sub
stc
cs
clc
fldt
fstl
add
add
push
add
stos
lahf
in
or
xchg
aam
loop
mov
add
add
mov
add
ja
add
pop
aam
clc
cmp
pop
fmull
into
mov
pop
mov
add
mov
clc
es
stc
stc
pop
lret
cwtl
jp
stc
and
add
movsl
clc
addr16
sar
nop
xchg
imul
xor
add
ss
mov
clc
rolb
add
inc
add
cmp
or
jg
clc
enter
ret
add
push
jle
add
jo
add
add
aad
add
fwait
push
add
mov
add
mov
sub
clc
cmp
movsl
clc
fs
out
jno
add
add
mov
push
jmp
add
cmp
lock
mov
xchg
jmp
or
push
stos
jmp
mov
clc
mov
clc
ds
dec
mov
clc
cmp
clc
adc
add
lock
dec
cs
jns
repnz
test
je
clc
daa
clc
in
push
and
add
clc
divb
jp
push
dec
das
sbb
clc
ret
clc
dec
mov
and
add
push
push
add
leave
and
add
clc
mov
repz
ret
clc
sub
stos
ret
clc
push
add
xlat
dec
pusha
add
data16
cmp
add
jmp
xor
clc
lahf
loop
repnz
add
out
into
sub
clc
mov
dec
add
jmp
dec
mov
cmp
clc
ljmp
ret
mov
add
push
sub
sub
dec
gs
sbb
ret
mov
clc
jp
es
or
clc
inc
clc
mov
je
jb
add
iret
ja
daa
clc
lcall
clc
xor
add
clc
repnz
incl
iret
loop
xchg
mov
jmp
clc
imul
sub
mov
clc
nop
ljmp
dec
xor
add
sub
ss
add
inc
clc
cli
and
add
and
add
sub
mov
or
data16
sbb
add
imul
loope
jecxz
cmp
jns
or
ret
clc
ret
add
mov
int3
data16
lret
outsb
push
add
jmp
insb
adc
aaa
add
add
clc
testb
aaa
jns
jmp
clc
in
lahf
movsb
clc
sub
add
rcr
adc
add
clc
negb
mov
das
int3
pushf
hlt
push
xchg
cmp
imul
pop
mov
test
jmp
hlt
mov
in
cmp
icebp
inc
add
mov
mov
loope
outsl
mov
inc
add
inc
clc
xlat
sub
clc
movsb
clc
cmpsb
clc
fmul
cld
ds
jecxz
xchg
out
xchg
clc
xor
add
add
stos
ffree
clc
and
jbe
cmp
inc
add
fdivl
add
lcall
repz
hlt
lods
xchg
cmp
sub
fidivl
js
lahf
mov
jo
add
adc
add
fucomi
add
add
pop
mov
adc
add
fwait
in
push
clc
sbb
clc
gs
xor
add
add
imul
mov
or
add
cmp
add
add
add
add
add
add
dec
aad
add
pop
cs
ficoml
repz
add
push
add
mov
insl
mov
push
add
rolb
push
xabort
clc
cmp
clc
daa
clc
popf
nop
lods
hlt
adc
add
insb
data16
clc
clc
icebp
push
or
clc
and
add
add
inc
clc
dec
pop
arpl
add
sahf
int3
bound
add
add
clc
add
add
leave
fcomps
sbb
push
add
cld
jno
add
lock
adc
add
mov
add
inc
clc
aad
xbegin
js
mov
xor
add
jle
ss
lods
jo
add
pop
fs
cwtl
aam
mov
aas
xor
add
clc
push
cmpsl
clc
push
dec
push
clc
jae
add
xor
clc
xchg
sbb
adc
add
jne
shlb
add
mov
test
cmp
clc
ret
clc
clc
xor
push
push
imul
add
add
add
clc
pop
xlat
add
add
add
jo
add
clc
and
add
cs
dec
mov
add
movsb
clc
movsb
clc
jl
push
ret
clc
stos
push
clc
inc
add
add
add
adc
xchg
lret
aaa
dec
jo
add
add
clc
stc
xchg
mov
mov
add
cmp
add
add
clc
add
add
ja
sub
adc
add
clc
fwait
call
in
filds
out
call
lcall
or
mov
ret
add
fwait
bound
add
xchg
jae
add
sbb
cmp
clc
inc
clc
pop
jnp
negl
cmc
stos
pop
popa
add
mov
or
add
add
mov
lahf
lahf
cmp
clc
mov
add
add
cli
xlat
mov
clc
insl
test
dec
notl
clc
sub
shrb
sub
add
sbb
stos
aas
mov
cmp
stc
cmp
push
mov
add
adc
add
add
cld
inc
add
pop
cmp
clc
pop
mov
mov
inc
add
and
fs
adc
add
mov
jnp
repnz
and
sbb
clc
outsb
dec
test
sbb
xchg
mov
pop
dec
xor
add
add
sbb
cmpsl
clc
insl
dec
cmp
clc
clc
jl
jge
push
mov
mov
dec
aam
js
clc
fs
push
add
es
cmp
add
cli
pusha
add
mov
mov
pushf
jb
add
add
jae
add
clc
int3
adc
or
clc
fsubrs
sub
fbld
push
test
scas
or
outsl
sub
leave
fidivs
jo
add
fwait
jl
daa
clc
fs
jne
aas
mov
fisubl
add
push
add
lods
mov
fistpl
mov
clc
and
add
clc
fnstenv
sub
add
mov
movsb
clc
mov
add
repz
add
mov
hlt
pop
or
and
add
int
clc
in
sbb
add
movsb
clc
repnz
add
mov
mov
int3
lods
inc
add
pop
push
or
popa
add
jecxz
jns
and
add
ficoms
adc
pop
cmp
add
add
imul
into
cmp
clc
out
mov
shll
clc
enter
test
mov
pop
sub
pop
dec
fidivrl
add
in
pop
lock
clc
stc
sub
lret
jb
add
xchg
out
sbb
clc
gs
mov
or
clc
lea
cli
mov
cmp
clc
inc
clc
adc
add
divl
add
xchg
jmp
data16
nop
xor
mov
adc
lcall
kmovw
in
push
dec
cmp
jno
add
gs
xor
add
cmc
cmp
add
or
pop
push
sti
in
ljmp
add
aad
imul
imull
jns
data16
out
scas
sar
clc
clc
imul
ss
clc
jnp
clc
jg
add
xor
add
je
sub
daa
clc
push
add
lock
xor
add
ja
cmp
or
add
std
jne
je
clc
ficoml
xchg
scas
scas
bswap
and
add
imul
in
xor
add
add
loopne
cmc
jo
add
add
add
fists
mov
inc
add
test
dec
pusha
add
fmulp
add
add
jbe
jne
push
add
cli
mov
clc
negl
add
add
mov
add
xlat
lret
add
sbb
xchg
out
xchg
cs
out
out
gs
insb
mov
hlt
and
add
add
add
inc
clc
xor
add
xchg
popa
add
imul
aaa
mov
clc
aad
clc
mov
pusha
add
call
clc
mov
clc
sar
std
mov
cmp
add
add
push
mov
mov
int
cmp
push
add
cmp
clc
xor
add
clc
add
add
add
jne
add
lock
add
shrb
sbb
decl
clc
jg
test
cli
lods
mov
jmp
aas
push
add
push
xchg
enter
clc
inc
clc
leave
add
add
enter
sub
jbe
xchg
mov
clc
aaa
and
add
jns
clc
cmp
cltd
add
clc
ffreep
clc
mov
clc
xor
add
loop
mulb
add
push
cltd
loope
pop
icebp
movsb
clc
xchg
adc
add
clc
mov
add
das
jns
add
mov
mov
lcall
jae
add
clc
std
sbb
add
push
add
jg
push
add
mov
add
stos
jle
or
sub
mov
add
call
and
add
lahf
vminps
sub
fcmovb
clc
mov
sbb
sub
mov
clc
sbb
mov
push
ficoml
clc
addr16
outsb
lahf
fiaddl
popf
jmp
clc
and
data16
cmc
add
add
add
add
mov
jle
clc
notb
dec
out
and
add
test
or
add
fadds
add
stc
jl
pop
cwtl
push
add
jp
sahf
dec
jo
add
mov
test
dec
mov
or
into
shll
pop
sub
aas
dec
scas
mov
jb
add
clc
pop
insb
imulb
clc
xchg
jge
clc
push
push
sbb
add
test
dec
stos
push
scas
gs
jge
adc
add
clc
scas
lret
add
xchg
clc
xchg
ret
clc
mov
ror
sti
and
add
clc
fwait
pop
imul
mov
add
test
test
inc
add
mov
clc
xor
add
add
add
icebp
inc
add
sbb
add
jne
clc
xchg
fildl
adc
add
add
hlt
shrb
jb
add
sub
cli
and
add
frstor
add
adc
aam
lret
loopne
add
add
cmp
add
test
clc
into
cmp
clc
xor
add
and
add
bound
add
add
clc
loopne
insb
test
cs
add
clc
in
xchg
push
add
dec
aad
in
imul
mov
pop
push
icebp
xor
clc
daa
clc
stc
test
xor
add
clc
pop
xor
add
add
sbb
std
jae
add
clc
ds
jns
clc
pop
mov
mov
pop
fs
mov
add
pop
notb
out
mov
clc
jg
clc
mov
clc
lret
xor
add
jbe
pop
icebp
loop
ja
clc
popf
xor
clc
cmpsl
clc
mov
repz
fsts
add
outsb
dec
add
add
dec
pop
rcrb
in
jmp
add
aaa
or
mov
aaa
ficompl
insl
mov
sti
cmp
xchg
xlat
mov
add
loopne
clc
xlat
sar
inc
clc
sar
mov
or
int3
test
dec
pop
pop
ds
fdivs
mov
clc
fcmovb
clc
mull
add
jo
add
sbb
fwait
adc
add
jo
add
mov
add
in
push
add
clc
cltd
clc
mov
clc
js
add
aad
xor
add
add
gs
fimuls
cmp
sbb
add
clc
xabort
dec
movsl
clc
test
stos
std
mov
mov
clc
test
clc
cmp
cmp
std
int3
inc
clc
ja
add
add
add
std
daa
clc
adc
add
not
test
dec
ret
clc
test
pusha
add
jne
rcrb
pop
lret
push
add
clc
mov
add
jle
add
push
ja
loope
scas
and
add
into
sub
add
loope
jge
clc
rol
clc
mov
push
outsl
inc
add
xbegin
clc
pop
lea
clc
push
add
arpl
add
xor
dec
clc
sbb
clc
sub
add
add
and
add
incb
rorl
pop
insb
lahf
jmp
jl
or
adc
loope
out
cli
aaa
or
clc
adc
add
test
mov
mov
fs
lods
pop
clc
fs
xor
add
mov
mov
repz
clc
add
add
repnz
fistpl
pop
mov
and
sbb
clc
popa
add
adc
clc
jg,pt
out
fs
dec
push
add
dec
rcrb
xor
add
rol
clc
or
add
lock
add
mov
pop
cmp
mov
pusha
add
add
add
sbb
clc
leave
jnp
xchg
jae
add
imul
into
outsb
stos
test
add
xchg
imul
aaa
jo
add
ja
xor
shl
clc
adc
add
or
xor
add
add
jae
add
mov
pop
add
daa
clc
cmp
add
mov
push
mov
es
inc
add
out
lods
jne
cltd
sbb
add
int
fisubl
add
cmp
cmpsb
clc
test
fisttpll
add
cmp
pop
pop
rorb
iret
adc
add
add
inc
add
inc
clc
stc
data16
jl
rcll
add
xor
add
add
add
add
add
adc
add
xlat
bound
add
in
scas
mov
add
call
and
lods
or
add
sbb
or
mov
add
adc
add
fisubrl
sub
clc
scas
push
add
repz
sub
scas
inc
clc
aas
push
inc
clc
mov
add
push
add
fisttps
mov
clc
loope
fistl
add
cmp
movsb
clc
mov
add
add
jp
or
ret
clc
xchg
bound
add
jae
add
clc
pusha
add
stos
aad
cmc
push
addr16
mov
inc
clc
lea
sbb
or
pop
lret
xor
add
mov
outsl
sar
cwtl
xchg
lods
cmp
mov
add
add
dec
popf
sbb
sub
clc
inc
add
mov
cmp
sbb
in
inc
add
fdivp
insb
in
sbb
clc
and
nop
push
add
dec
or
add
sub
jo
add
fdivrs
pop
dec
outsl
aam
leave
lock
ja
clc
sbb
add
sahf
ret
clc
icebp
xchg
clc
cmp
cmp
jnp
adc
add
clc
leave
inc
add
add
add
clc
hlt
sbb
add
push
arpl
add
adc
add
push
xabort
cld
or
cwtl
sar
clc
sub
add
inc
clc
addr16
cmp
clc
cli
fimuls
add
rcrb
clc
sub
data16
in
cwtl
dec
cmpps
jno
add
clc
into
adc
add
add
fstps
clc
in
icebp
dec
scas
add
bound
add
or
arpl
add
std
mov
clc
scas
call
lea
inc
add
stos
aas
mov
adc
add
js
pushf
jbe
loope
daa
clc
in
gs
lret
repnz
adc
dec
and
lock
js
inc
add
pop
mov
popf
sub
test
mov
xor
add
pop
sbb
xchg
pop
sti
push
xchg
lock
jg
and
add
clc
fldt
clc
roll
out
fdivs
push
cmc
mov
push
cmp
shl
clc
dec
dec
mov
cmp
pop
in
insl
loope
dec
inc
clc
add
call
clc
push
add
xor
add
test
adc
add
add
add
scas
lahf
roll
fstl
clc
not
rorl
stc
fs
xor
add
fldenv
mov
clc
xbegin
clc
mov
add
dec
dec
xor
add
clc
push
add
add
clc
cmc
out
test
in
jo
add
push
inc
clc
sub
jae
add
icebp
or
add
add
aam
adc
add
push
push
fbld
add
mov
mov
test
cmp
sub
add
push
clc
adc
add
clc
fisubl
add
xchg
int3
into
mov
add
xchg
sbb
test
cmp
dec
sub
add
xchg
mov
add
add
clc
push
add
clc
cmc
out
jno
add
jge
add
mov
add
cli
out
repnz
clc
daa
clc
push
sbb
add
idiv
add
sbb
jns
jge
movsl
clc
dec
jecxz
ret
clc
mov
add
add
add
add
stos
aaa
jae
add
cmp
out
cmpsl
clc
fsubr
fbld
pop
mov
clc
mov
clc
jns
inc
clc
mov
add
cmp
xchg
std
dec
pop
jmp
shll
mov
add
je
xor
add
clc
xchg
or
js
and
dec
popa
add
sub
add
pop
inc
clc
jo
add
add
add
aam
outsl
and
add
cmp
add
enter
mov
fadds
outsl
push
add
add
add
cli
cmc
das
not
push
pop
xabort
inc
add
lea
xchg
cmpsb
clc
push
pop
sbb
rol
clc
and
add
pop
in
jae
add
fiaddl
add
lcall
xbegin
add
std
cmp
clc
stos
aaa
insb
sbb
or
clc
dec
jmp
in
clc
ljmp
fistpl
clc
jo
add
lret
cmc
mov
xor
add
cmpsb
clc
jno
add
aaa
and
add
add
cs
cld
mov
add
ljmp
insl
jg
cs
in
push
add
xor
add
add
out
inc
add
cmp
clc
mov
and
add
sbb
mov
add
pushf
xchg
xchg
mov
add
add
add
idivl
mov
xor
add
lods
cmp
imulb
inc
add
f2xm1
cltd
inc
add
fs
push
jg
clc
inc
clc
add
add
add
leave
fisubs
add
movsl
clc
outsl
cld
mov
int
test
clc
push
clc
lock
pop
cmp
add
aaa
xchg
scas
add
aaa
sahf
outsb
mov
or
clc
popa
add
flds
or
or
mov
add
loop
daa
clc
and
add
add
jb
add
sbb
cmpsl
clc
adc
add
roll
add
pop
sti
fimuls
das
repnz
add
add
lea
add
mov
add
push
add
roll
pop
mov
add
mov
xchg
and
add
shr
xor
add
cwtl
adc
add
xchg
jb
add
xlat
cwtl
shl
rolb
add
lock
cmp
aaa
cli
lcall
pop
mov
clc
mov
clc
jmp
dec
out
add
add
add
sub
add
add
into
je
sti
mov
add
jl
clc
test
clc
mov
sbb
and
add
clc
dec
pushf
aad
mov
add
dec
insl
daa
clc
ljmp
clc
pop
dec
or
clc
aas
xbegin
adc
add
clc
sbb
add
cmp
push
dec
in
clc
adc
add
add
add
sub
stc
mov
je
cmpsb
clc
scas
ficoms
xlat
testb
jl
add
pop
mov
scas
mov
xchg
leave
cli
loopne
mov
shll
add
clc
push
sbb
mov
ret
clc
cli
jae
add
add
add
mov
add
ljmp
inc
add
xor
add
xabort
jp
sub
icebp
xor
add
pop
push
add
xchg
jbe
clc
ljmp
sub
testb
add
out
mov
mulps
add
mov
push
add
outsl
in
stc
push
add
sub
insb
sbb
ja
clc
in
xbegin
add
sbb
bound
add
add
add
xchg
sahf
rcrl
clc
dec
fucomip
out
mov
clc
in
out
pop
push
add
add
out
mov
sbb
clc
mov
xabort
clc
cmp
das
add
add
dec
movsb
clc
in
sub
clc
inc
add
dec
bound
add
enter
adc
add
cld
loop
fidivl
add
std
movsl
clc
push
add
pop
out
cltd
cmp
add
inc
clc
cltd
push
add
sar
clc
pop
xchg
sbb
in
mov
push
add
jno
add
xchg
adc
add
add
inc
clc
xchg
or
mov
dec
repz
add
in
test
clc
dec
inc
clc
scas
mov
cmp
add
cltd
mov
sbb
mov
add
loopne
sub
add
pop
adc
add
clc
dec
aam
and
clc
pop
fnstenv
add
in
testb
adc
add
clc
inc
add
int3
in
xlat
push
lahf
mov
mov
push
add
stc
aad
in
sub
add
add
add
add
push
add
jnp
pop
and
add
sub
clc
gs
xchg
in
cmpsb
clc
xor
add
test
dec
mov
pop
jne
shrl
lret
and
add
add
add
sbb
nop
shlb
add
mov
add
adc
add
add
gs
push
mov
add
pop
or
out
test
rorl
jns
lret
jmp
clc
add
add
clc
mov
clc
mov
adc
add
dec
cmp
sub
clc
mov
aam
xbegin
clc
adc
add
loop
ds
mov
push
sbb
add
movsb
clc
push
add
jecxz
mov
pop
adc
shr
mov
add
mov
mov
jbe
in
pop
xbegin
sub
imul
jns
aam
add
pop
cmpsb
clc
mov
fsubrs
dec
out
cmpsl
clc
jmp
add
clc
lahf
loopne
jae
add
js
je
push
cld
lock
dec
icebp
sti
loope
mov
stc
inc
clc
fwait
sub
in
mov
loopne
jle
add
sub
add
dec
in
xor
clc
mov
add
das
inc
clc
jmp
add
clc
sbb
clc
testl
push
mov
arpl
add
clc
pop
jecxz
adc
repz
adc
clc
jmp
inc
add
cmp
cmp
testb
jne
hlt
jp
adc
add
lret
add
sub
fidivrs
clc
out
mov
clc
push
and
pop
push
lods
iret
inc
clc
mov
nop
in
fcoml
add
stos
inc
clc
pop
lret
cmp
add
mov
cwtl
or
cwtl
jae
add
add
arpl
add
add
loopne
fdiv
imul
jbe
out
outsb
or
cmp
clc
jle
clc
fldl
mov
stc
cmp
mov
clc
cmp
sbb
cmp
dec
cmp
add
add
clc
sbb
scas
push
add
push
add
or
mov
mov
pop
jae
add
push
test
push
add
icebp
in
mulb
clc
jo
add
fistpl
add
adc
add
lods
dec
loop
daa
clc
mov
lods
xor
add
xor
add
cs
inc
add
je
pop
popf
adc
add
push
ss
add
std
and
add
in
and
leave
inc
add
push
add
cmp
add
add
clc
mov
add
mov
fcmovnbe
jl
push
mov
jmp
sbb
ljmp
dec
fcomps
adc
add
in
push
add
fsubrs
add
inc
add
add
add
clc
push
mov
clc
sub
sub
imul
data16
fwait
add
add
sti
adc
add
push
bound
add
mov
je
cmp
push
mov
sbb
dec
fs
and
add
pop
mov
jp
and
inc
add
mov
and
pop
dec
fsubrl
add
lret
add
es
imul
es
mov
in
test
clc
sbb
dec
loop
das
jne
cmp
inc
add
push
pushf
or
clc
mov
add
clc
js
imul
push
or
add
cltd
fldenv
add
push
cmp
cmp
adc
add
add
add
fnstcw
lahf
mov
dec
sub
clc
xor
add
clc
push
dec
sub
mov
pop
mov
add
adc
clc
xor
mov
push
add
mov
sbb
nop
imul
add
loope
adc
add
clc
lea
daa
clc
push
pushf
ljmp
mov
xor
add
push
clc
adc
clc
cmp
clc
lahf
pop
mov
loop
or
clc
xchg
or
aas
clc
ret
clc
jno
add
clc
es
movsb
clc
push
add
arpl
add
add
add
add
outsb
cmc
dec
mov
add
mov
ljmp
arpl
add
cmp
fwait
jno
add
add
add
dec
fs
add
add
clc
repnz
add
add
add
add
clc
aam
clc
ret
data16
mov
clc
aad
add
inc
clc
jo
add
popf
rclb
add
test
test
pop
and
add
sbb
loope
push
add
xchg
and
add
cmp
jge
inc
add
mov
xbegin
clc
ljmp
inc
add
xchg
adc
add
shll
add
push
add
sbb
inc
clc
ja
clc
int
sbb
add
or
push
add
sbb
cmp
clc
and
add
add
adc
add
add
call
add
add
add
xor
add
xchg
and
add
sub
into
test
jge
clc
fldt
push
bound
add
clc
ret
clc
das
dec
call
add
in
mov
add
leave
js
int3
out
mov
xchg
mov
add
dec
aaa
cli
pop
repz
mov
clc
push
cmp
jne
in
mov
jb
add
clc
dec
jmp
adc
add
adc
add
push
jbe
clc
int
add
icebp
aaa
mov
in
mov
add
clc
sub
add
add
add
jle
adc
push
aam
int
add
int3
xor
add
or
scas
stos
and
push
push
cmp
ss
clc
push
jnp
add
ret
clc
mov
clc
pop
jmp
cs
xchg
cmc
cmc
jecxz
out
lahf
mov
jmp
lcall
adc
add
pop
xbegin
mov
cmp
inc
add
sub
clc
gs
imul
iret
cmp
clc
mov
add
jge
ljmp
into
in
dec
mov
in
cmc
and
add
sbb
cmp
leave
repnz
add
decl
add
stos
mov
add
mov
fs
pop
daa
clc
push
push
mov
dec
dec
add
fcompl
fdivl
add
cmp
add
rorb
in
cmc
adc
add
std
mov
stos
and
add
pop
cmp
mov
clc
daa
clc
popf
jo
add
sub
clc
or
add
add
push
outsb
hlt
cmp
sbb
or
iret
sbb
adc
clc
bound
add
add
adc
add
add
fiadds
int3
sar
and
js
add
scas
or
ret
clc
into
movsb
clc
jle
xchg
push
add
loopne
push
sub
pushf
testl
add
add
jb
add
xor
clc
ja
clc
push
inc
add
xchg
xabort
add
pusha
add
sub
add
add
inc
clc
or
lods
adc
ja
adc
add
jl
test
cli
lods
into
insl
sar
movsl
clc
sub
negl
add
daa
clc
fnstenv
je
clc
in
xchg
push
add
xlat
mov
xchg
fsubrs
inc
add
sti
push
or
xor
clc
dec
cmp
pop
clc
cmpsl
clc
adc
add
in
mov
xchg
and
aaa
jl
cmpsb
clc
mov
mov
add
data16
iret
or
jae
add
add
sbb
sub
fcompl
mov
in
cmp
add
cmp
mov
clc
iret
aas
sub
add
lea
ljmp
leave
push
adc
add
das
sbb
add
dec
hlt
xchg
push
add
xabort
mov
clc
xchg
pop
xchg
shl
clc
bound
add
pop
pop
lret
cmp
sahf
insb
nop
scas
popf
lea
clc
cs
dec
cmp
pop
clc
add
add
roll
dec
fs
push
mov
clc
or
or
lods
pop
sub
add
clc
daa
clc
xabort
test
add
dec
push
movsb
clc
mov
cli
scas
sbb
outsb
pop
es
mov
aam
clc
jbe
clc
outsb
lret
push
add
sahf
rep
jg
iret
repz
popa
add
sub
clc
clc
xchg
sub
clc
ds
pop
sub
add
fst
sbb
sbb
int3
pop
cmp
inc
clc
xabort
clc
vmread
xor
add
dec
push
nop
scas
push
ffree
clc
movsb
clc
fildll
clc
mulb
fidivrl
add
test
mov
add
add
add
dec
pop
pop
clc
xor
add
and
fcomps
pop
shl
clc
sub
jnp
arpl
add
add
pop
push
add
rcrl
and
inc
clc
push
inc
clc
jb
add
push
popf
lret
sahf
fucomi
bound
add
add
pop
or
inc
add
in
xchg
test
clc
loope
jg
pop
stos
stos
jmp
add
adc
add
jecxz
jg
clc
pop
out
cltd
add
add
and
add
add
mov
or
clc
sub
mov
xchg
push
push
daa
clc
pop
aas
cmp
rcr
add
add
mov
clc
daa
clc
dec
pop
aaa
fdivp
inc
clc
cmp
jb
add
clc
fdiv
aam
sbb
clc
data16
push
sub
or
jecxz
iret
xor
mull
add
inc
clc
fidivrs
add
push
mov
push
mov
add
sar
cmp
xor
add
xchg
dec
fwait
jl
jno
add
jbe
jge
shlb
add
gs
push
add
ret
clc
mov
xchg
xor
add
cmp
add
push
clc
jbe
insb
stc
push
stc
or
xchg
mov
pop
sbb
add
ret
clc
dec
jge
gs
mov
stc
mov
clc
mov
outsb
push
add
xlat
jmp
pop
xlat
pushf
stos
mov
rorl
xor
add
add
push
js
testb
lock
add
mov
rorb
push
mov
cmp
clc
cmp
sti
dec
mov
clc
pop
mov
xor
je
fisubs
dec
jp
add
add
add
push
add
xchg
add
add
mov
add
in
gs
hlt
pop
clc
repnz
add
and
add
mov
add
out
and
add
add
loop
or
clc
sbb
mov
add
into
bound
add
or
ljmp
adc
add
inc
clc
rcr
mul
clc
cmpsl
clc
movsl
clc
outsb
movsb
clc
in
or
clc
mov
in
icebp
aas
pop
pop
das
dec
adc
xor
add
sbb
lods
or
clc
sub
dec
pushf
and
add
xlat
mov
push
add
out
shl
add
add
clc
mov
xbegin
iret
sar
lea
and
add
mov
clc
gs
test
mov
clc
daa
clc
std
inc
add
lret
fs
imul
clc
push
inc
clc
cmp
nop
addr16
inc
add
clc
push
cmpsb
clc
pop
push
add
inc
add
mov
clc
adc
popf
icebp
mov
clc
or
out
daa
clc
hlt
ret
stos
sar
add
add
add
add
add
push
fsts
add
push
inc
add
imul
add
and
add
clc
pop
aaa
jae
add
adc
jnp
clc
movsl
clc
ljmp
add
iret
nop
mov
xor
add
clc
daa
clc
pop
jo
add
iret
add
add
fwait
add
add
call
clc
lods
adc
add
push
add
fsub
clc
inc
clc
sar
fs
pop
mov
repnz
adc
add
sar
leave
jne
add
loopne
mov
clc
pop
dec
inc
clc
jecxz
push
add
or
add
jle
iret
mov
xor
add
fnstsw
mov
lahf
xchg
sahf
xor
add
lcall
add
cmp
inc
clc
xor
push
add
sarl
add
sub
mov
mov
lock
clc
not
mov
clc
inc
add
mov
adc
add
jbe
pop
mov
jns
movsl
clc
jl
mov
mov
clc
jmp
shlb
add
inc
clc
jle
push
jl
clc
cmp
cmp
mov
outsb
sar
pop
clc
inc
add
cmp
clc
dec
mov
dec
and
add
rclb
add
add
push
xchg
stos
adc
fwait
push
pop
clc
and
add
add
add
or
add
clc
in
add
add
icebp
mov
out
dec
cmp
inc
add
xor
push
add
ret
add
and
add
rclb
cmp
push
fildl
adc
add
or
inc
clc
xor
add
add
add
add
fsts
xbegin
sar
dec
xor
dec
dec
mov
stc
fiaddl
or
mov
add
mov
scas
outsb
shlb
add
pop
clc
repz
push
test
fstl
add
sar
add
in
cmp
add
push
icebp
pushf
testb
bound
add
clc
cmpsb
clc
mov
add
fimull
add
adc
add
fsubr
loopne
fwait
mov
clc
pop
shrl
cmpsb
clc
sub
inc
add
sar
push
test
insl
cmp
cmpsb
clc
loopne
sub
add
or
add
add
jae
add
push
mov
clc
stc
cli
fcomps
cmp
add
dec
inc
add
gs
inc
clc
loopne
mov
test
mov
push
shlb
add
push
decb
xchg
popf
hlt
sub
scas
ds
add
cmp
js
clc
add
sub
clc
xor
add
clc
mov
add
add
xchg
xchg
movsl
clc
int
mov
add
aad
add
mov
clc
gs
test
lret
pop
push
clc
pop
rcrb
insb
aad
arpl
add
jecxz
mov
insl
jno
add
fisubrl
add
clc
adc
add
clc
mov
mov
add
pop
popf
aad
cmp
stos
and
add
clc
xchg
cmp
inc
add
xchg
sbb
add
add
clc
push
clc
clc
dec
hlt
mov
clc
mov
pusha
add
inc
add
cmp
clc
test
and
add
add
add
xchg
test
and
cmp
xchg
fs
mov
mov
push
lods
add
add
add
push
out
jnp
add
filds
add
cs
add
mov
add
inc
clc
push
dec
mov
clc
jg
into
call
add
clc
insl
ret
jbe
xor
add
leave
pop
adc
add
js
clc
addr16
jge
add
add
add
add
add
push
add
sbb
push
add
xlat
adc
add
xchg
fs
sahf
insb
add
add
mov
cmp
add
dec
das
jo
add
sub
cmc
iret
jbe
or
ds
lods
stos
das
xor
and
add
and
push
cmp
clc
push
push
add
ds
mov
call
aas
es
sub
fsubrs
fimuls
jo
aaa
jbe
add
es
xchg
push
shl
repnz
add
adc
add
add
std
in
adc
add
xchg
fldenv
add
add
sbb
cld
add
add
sbb
ret
mov
cmp
clc
out
pushf
ss
clc
jb
add
out
sub
cmpsl
clc
mov
fsubrp
or
clc
paddb
hlt
cmp
cmp
icebp
fidivs
dec
xchg
xor
add
stos
scas
push
in
mov
add
insb
add
add
imul
push
or
clc
sar
repnz
clc
mov
mov
clc
mov
fdivrl
fldenv
add
cmp
loope
arpl
add
or
inc
add
insl
insl
push
clc
adc
xchg
xbegin
je
add
xchg
js
sub
lea
or
add
lods
enter
clc
xor
add
adc
add
mov
fdivr
xor
add
clc
inc
add
stos
sub
sub
add
sbb
mov
add
dec
pop
out
jne
add
add
adc
add
push
jb
add
into
jae
add
jne
inc
clc
cli
in
addr16
aas
and
add
add
push
sub
cwtl
pop
repz
es
clc
jo
add
xor
jl
sbb
clc
push
add
fdivrl
clc
mov
mov
inc
add
xchg
adc
add
clc
movsl
clc
sarl
xor
leave
push
push
add
fsub
clc
adc
add
clc
push
add
fidivrl
add
add
in
push
add
and
add
cmp
xchg
test
outsl
pusha
add
aaa
cmp
cmp
clc
mov
dec
push
pop
fsts
popa
add
pop
pop
mov
jb
add
cs
cltd
jl
clc
sahf
cmp
clc
sbb
mov
add
js
pop
add
add
dec
xor
add
dec
adc
add
add
arpl
add
sbb
lret
mov
clc
scas
nop
ret
clc
filds
add
inc
clc
dec
xbegin
add
add
clc
clc
arpl
add
add
or
sub
xbegin
addr16
daa
clc
xor
push
in
sub
pushl
xlat
cmp
add
loope
jae
add
add
std
test
and
add
clc
jp
fisttps
mov
cmp
push
fdivrp
fs
pop
jns
cs
add
es
xchg
test
pop
ljmp
fwait
inc
add
adc
add
push
pusha
add
xor
add
xchg
shrl
add
add
add
push
cmp
clc
call
sbb
call
clc
mov
repz
pop
add
add
xchg
rol
clc
cld
inc
add
inc
clc
aaa
insl
push
add
adc
add
clc
cmp
add
mov
mov
or
add
cmp
jg
add
popf
dec
pop
xor
add
clc
add
add
clc
and
add
clc
lods
pop
cmp
in
ret
clc
mov
add
xchg
and
add
clc
loop
adc
jo
add
add
cs
fmull
hlt
pop
std
mov
clc
inc
add
mov
dec
insl
dec
movsb
clc
push
add
adc
test
add
inc
clc
xbegin
add
in
lea
jne
pop
out
fs
fldt
jno
add
sar
js
cmp
mov
dec
xchg
aas
ret
imul
dec
push
arpl
add
sbb
clc
arpl
add
clc
mov
idivb
inc
clc
cld
push
add
popa
add
jbe
sub
add
add
dec
add
add
ret
clc
xor
add
clc
fcoml
push
inc
clc
cmp
mov
mov
xchg
negb
add
add
add
add
leave
into
jle
xchg
pop
sub
clc
imulb
push
push
xor
add
add
xor
add
mov
add
push
sub
pop
stos
cs
pusha
add
es
dec
in
mov
pop
leave
je
sti
dec
mov
nop
out
sbb
add
fadds
add
mov
xchg
xor
add
add
rorb
inc
add
sar
pop
clc
out
push
push
enter
inc
add
stos
jae
add
addps
add
and
add
clc
loop
mov
je
pop
pop
in
and
add
out
ret
clc
mov
pop
xchg
jmp
mov
lods
sarb
add
clc
lcall
fstps
aas
aam
mov
xor
add
clc
push
cld
add
lods
jl
clc
in
frstor
in
ror
cmp
sbb
jae
add
loop
mov
xchg
dec
bound
add
sar
add
mov
add
clc
fildl
mov
clc
js
clc
xchg
push
mov
clc
pop
inc
clc
inc
clc
leave
sti
dec
sar
sbb
clc
mov
push
mov
dec
cs
mov
add
insl
pop
jno
add
fs
xor
xchg
sub
bnd
add
fcmovnu
inc
clc
sub
mov
add
add
clc
xchg
pop
mov
push
xchg
stos
push
and
add
add
daa
clc
xchg
sub
sub
insb
sub
sarb
test
es
push
add
es
sbb
std
inc
clc
out
movsl
clc
fildll
scas
adc
add
fwait
cltd
aad
sub
xor
add
cli
movsb
clc
ret
clc
js
clc
bound
add
cs
fs
popa
add
jmp
add
dec
ja
dec
sub
clc
pusha
add
pop
mov
test
daa
clc
insb
loop
in
cltd
fidivrs
push
add
rcrl
mov
pop
addr16
insl
mov
clc
imulb
mov
add
push
add
test
jae
add
add
cmc
mov
add
pop
mov
into
mov
clc
fisttpll
decb
adc
add
dec
jae
add
pop
movsl
clc
stos
inc
clc
sbb
add
dec
and
add
xor
dec
and
pop
clc
sar
nop
dec
call
add
add
add
add
imul
dec
clc
or
jne
mov
xor
pop
negl
cmpsl
clc
mov
xchg
fadds
jmp
pusha
add
enter
clc
out
push
add
lock
add
xchg
sbb
lods
ret
clc
stos
lahf
cmpsb
clc
movsb
clc
pushf
add
add
sar
pop
sar
clc
loop
sar
adc
add
clc
stos
repz
clc
xchg
push
es
push
or
add
insb
bound
add
add
outsb
jmp
add
add
mov
and
add
subps
inc
add
outsl
xchg
loop
lock
add
pop
test
add
sub
xchg
pop
stos
and
add
jge
jg
clc
sub
pop
sar
adc
add
out
and
add
clc
sub
syscall
clc
mov
imul
add
mov
xor
add
pop
sarl
outsb
nop
cmp
clc
jae
add
sbb
clc
incb
mov
cmpsl
clc
mov
xabort
add
push
sbb
add
pop
mov
push
lcall
inc
add
jns
clc
es
mov
push
clc
sub
clc
pop
and
gs
outsl
and
add
clc
inc
clc
pusha
add
sub
fsubr
dec
cli
adc
add
add
add
icebp
cmc
aaa
sbb
sti
fidivrs
repnz
ret
clc
jnp
clc
push
pop
testb
imul
sbb
clc
dec
push
ret
clc
int3
jb
add
xchg
insl
mov
jg
clc
clc
xor
call
pop
jecxz
addr16
js
out
add
add
clc
sub
icebp
movsl
clc
and
jbe
int
ljmp
lcall
sub
aaa
add
mov
push
clc
add
add
std
in
jbe
in
mov
in
cmp
clc
cli
xchg
lods
xabort
xchg
xchg
jno
add
add
lods
iret
popa
add
cmp
clc
xchg
pop
push
clc
arpl
add
repz
and
pusha
add
insl
inc
clc
mov
add
sahf
lret
mov
add
adc
add
add
arpl
add
icebp
in
mov
jecxz
adc
add
xchg
jno
add
dec
pushf
push
pop
cli
mov
sbb
enter
xchg
push
mov
cwtl
fucom
clc
add
fmull
or
loope
cld
mov
clc
lods
mov
movsb
clc
xchg
arpl
add
clc
divb
add
or
add
add
fadds
add
mov
add
jmp
cmp
push
test
ja
lods
inc
clc
rorb
int
das
xabort
clc
out
repnz
add
xchg
ret
clc
push
jmp
add
in
call
lcall
ds
sub
push
shll
gs
pop
jecxz
js
clc
sar
jb
add
insl
pop
clc
mov
or
jb
add
pop
sub
rcll
add
mov
add
cs
add
add
lret
fiadds
cmp
das
add
scas
pextrw
mov
add
int3
add
add
xchg
sar
mov
add
add
or
add
into
mov
test
mov
cmp
insb
hlt
js
clc
test
aad
mov
pop
cmp
cmc
fildll
cmpsb
clc
mov
pop
iret
jmp
stc
push
add
xchg
xabort
add
imul
adc
add
add
scas
pop
cmc
dec
in
xor
fadds
add
xchg
repnz
clc
mov
jb
add
clc
xchg
inc
add
shll
add
add
loopne
pop
into
bound
add
sub
xor
add
cmp
pop
pop
adc
add
ret
clc
and
add
jae
add
add
into
popa
add
sub
clc
cmc
ss
clc
mov
add
push
loop
fisubs
clc
cmp
mov
rcrb
add
and
add
add
sub
dec
pop
hlt
es
mov
add
add
es
cmp
aad
lock
sbb
ds
jmp
add
ret
gs
lods
jo
add
jo
add
cmp
in
repnz
rorb
add
pop
outsb
and
sbb
daa
clc
inc
clc
add
add
clc
mov
add
jecxz
sbb
adc
add
movsl
clc
dec
mov
sub
push
xchg
push
xor
and
add
bnd
lods
pushf
push
jns
sbb
test
jne
decl
clc
fdivs
add
mov
lea
add
push
pop
addr16
out
loop
mov
adc
add
out
sbb
or
insb
cmc
cld
es
lcall
test
pop
daa
clc
dec
ret
clc
in
inc
clc
loope
sbb
mov
gs
mov
es
fisubrs
adc
outsb
adc
lcall
add
mov
xor
clc
jmp
mov
xor
add
push
fisubrs
insb
jecxz
cmpsb
clc
adc
add
clc
push
add
jne
push
insb
idiv
add
out
or
es
xchg
cmpsb
clc
jb
add
ja
dec
or
add
xor
add
add
add
add
int
push
xor
add
add
popf
call
clc
je
mov
je
clc
ss
sbb
addr16
outsb
sbb
sub
add
clc
push
fstl
add
mov
out
addr16
cmp
clc
push
add
aad
mov
xchg
in
mov
jecxz
push
das
fs
mov
dec
pusha
add
test
clc
jecxz
xabort
dec
and
add
push
push
or
add
dec
xor
add
lahf
dec
add
add
out
mov
mov
jp
clc
fs
inc
clc
push
add
xor
add
scas
push
push
xchg
cmp
clc
je
clc
fiaddl
add
add
add
mov
clc
lret
add
dec
in
int
clc
repz
clc
out
insb
arpl
add
pop
clc
pop
jno
add
pop
lods
push
add
xor
add
mov
clc
data16
pop
sar
add
adc
add
sti
std
xor
add
das
shr
scas
dec
notl
add
ret
clc
cltd
jns
clc
cmp
xor
inc
add
fadds
push
xchg
xchg
ret
push
clc
cmp
fwait
dec
cmpsl
clc
sbb
loop
repnz
dec
lea
add
dec
lahf
pop
in
mov
and
clc
imul
mov
add
aas
jae
add
stos
imul
add
adc
clc
xor
data16
cmp
clc
cmp
add
mov
add
dec
gs
mov
cmpsl
clc
call
dec
inc
clc
xor
add
clc
inc
clc
mov
mov
clc
pop
sbb
inc
clc
cmp
clc
jecxz
push
sbb
frstor
sbb
fldenv
cmp
add
add
xbegin
add
fcoms
add
mov
pop
hlt
cltd
hlt
jp
ret
add
or
and
add
add
test
and
add
push
cmp
outsl
xchg
arpl
add
mov
popf
mov
add
arpl
add
enter
test
inc
add
xchg
loop
std
sar
clc
dec
jecxz
repz
test
outsb
in
xchg
pop
test
jnp
jbe
sbb
cltd
adc
add
add
lret
loopne
cmp
push
add
mov
mov
fwait
sub
pushf
je
dec
clc
ljmp
add
out
test
push
add
sbb
mov
add
sbb
mov
pop
sbb
mov
mov
ljmp
add
add
clc
pop
xchg
mov
clc
or
jecxz
das
sarl
add
push
and
inc
clc
jle
icebp
iret
mov
in
xbegin
push
push
sub
mov
mov
cmp
clc
xlat
xchg
inc
add
lea
arpl
add
dec
sub
ss
add
ds
or
outsb
and
add
movaps
ficompl
sar
fdivrl
icebp
dec
pushf
das
data16
scas
cmp
cmp
add
icebp
or
out
cmp
and
add
add
mov
add
inc
add
iret
in
rcl
push
scas
inc
clc
sub
clc
lahf
sbb
dec
inc
add
pop
add
add
arpl
add
leave
mov
clc
mov
jae
add
pusha
add
cmp
add
cmpsb
clc
xlat
aas
bound
add
xor
add
add
scas
and
jno
add
pop
sbb
pop
pusha
add
ljmp
add
add
add
push
clc
adc
add
sar
ret
clc
sahf
dec
in
imul
add
push
sub
stos
imul
scas
iret
jle
xchg
lock
add
mov
add
cmp
add
clc
arpl
add
clc
mov
clc
adc
add
into
out
xlat
xchg
cwtl
fdivrl
clc
xchg
test
aad
adc
add
fisttpl
add
in
pop
and
clc
sar
add
stc
or
inc
clc
es
mov
add
sub
lea
push
inc
clc
enter
add
jp
jns
scas
mov
add
jb
add
clc
inc
clc
push
add
push
jb
add
out
adc
add
clc
mov
add
icebp
mov
add
inc
add
ljmp
hlt
movsb
clc
sub
mov
fcmovnu
popf
enter
clc
mov
clc
push
add
ret
clc
iret
aam
pop
push
cltd
pop
inc
clc
stos
aas
mov
fmuls
mov
clc
mov
add
add
outsl
pop
bound
add
sbb
mov
add
and
add
add
gs
imull
mov
clc
test
divb
add
clc
int3
setg
add
mov
cli
mov
xbegin
clc
push
add
outsb
testl
xor
clc
xchg
sub
add
gs
mov
push
cmp
fdivrs
cs
mov
fsubrl
dec
pop
mov
add
sbb
loop
jge
clc
je
mov
clc
sub
jl
inc
add
sbb
lret
jno
add
adc
add
popf
arpl
add
clc
clc
jno
add
aaa
out
jns
add
xor
add
jp
add
popl
add
sub
inc
clc
imul
add
clc
mov
xchg
daa
clc
in
stos
xor
add
mov
cld
inc
clc
shrl
mov
mov
inc
add
xchg
pop
jne
enter
sub
jbe
fnclex
clc
xor
add
xor
add
testb
clc
fs
jp
clc
std
decb
mov
add
outsl
inc
clc
sbb
cmc
mov
aas
mov
fucom
clc
fnstsw
mov
cld
pop
clc
xabort
xchg
cli
sbb
pop
pushf
lret
mov
add
add
xchg
lods
sar
lret
cmc
jg
mov
clc
out
or
popf
push
add
push
xor
dec
in
mov
clc
inc
add
sti
xor
clc
mov
mov
mov
inc
clc
cmp
add
add
int
sub
hlt
jb
add
add
dec
dec
xor
loopne
sbb
mov
cmp
test
out
pop
out
and
add
add
add
adc
add
xchg
clc
inc
add
outsb
pop
fidivl
add
int3
scas
mov
clc
cmp
enter
movsb
clc
lock
bound
add
clc
into
and
add
pop
sar
cmp
adc
add
sbb
cltd
aad
and
int
or
add
pushf
std
je
clc
add
add
sti
inc
clc
mov
cmp
dec
shl
clc
in
shlb
jne
popf
pop
das
push
add
and
add
push
mov
incl
add
cmp
sbb
lods
inc
add
push
mov
es
cmp
clc
daa
clc
push
clc
or
add
pop
in
pop
inc
clc
adc
add
fildll
xchg
scas
movsb
clc
push
sbb
mov
xchg
push
add
roll
add
clc
ss
add
xor
clc
sbb
clc
into
jge
shlb
add
mov
add
add
xor
add
clc
aam
clc
adc
add
sbb
mov
xabort
lods
bound
add
inc
add
hlt
lret
sahf
testl
push
gs
cltd
inc
clc
adc
add
mov
sbb
jnp
add
out
ret
clc
lods
sub
aas
or
test
and
add
push
mov
in
sbb
clc
dec
mov
movsl
clc
test
pusha
add
xor
clc
movsl
clc
fincstp
mov
pop
jno
add
dec
pop
mov
loop
addr16
gs
cmp
sub
adc
std
cmc
sti
lock
clc
cmp
lods
dec
mov
pop
cmp
es
fisubrl
and
add
clc
std
mov
clc
sbb
stos
sbb
ret
and
add
inc
clc
inc
clc
sub
mov
clc
push
or
clc
sar
mov
cmp
clc
push
clc
ja
clc
cld
testb
hlt
adc
add
mov
adc
add
mov
mov
cli
mov
pop
xchg
mov
clc
ficoml
add
pop
clc
jmp
mov
pop
sbb
shl
inc
clc
xlat
rorl
jmp
clc
pop
mov
add
lock
add
mov
cmp
leave
xor
dec
cs
sbb
xchg
cwtl
mov
add
push
add
xor
clc
jle
clc
sar
clc
test
jge
add
sahf
xabort
das
push
pop
clc
sbb
int3
insb
js
lret
pop
inc
add
pushf
mov
es
loop
hlt
je
clc
sahf
sbb
clc
and
rcll
jo
add
imul
mov
jle
filds
add
clc
push
sbb
adc
add
add
add
or
xchg
int3
sbb
add
push
cmp
xor
add
fistps
sti
push
or
add
bound
add
into
push
xchg
mov
dec
std
mov
js
add
das
test
inc
add
jae
add
movsl
clc
test
std
ret
clc
rolb
mov
add
add
add
int
xchg
sar
addr16
sub
popa
add
shr
aam
mov
leave
hlt
cmp
aaa
mov
and
clc
push
add
and
pop
clc
lahf
in
dec
or
add
sub
add
fdivs
xor
jae
add
fs
mov
clc
add
dec
iret
clc
cwtl
sub
insb
mov
pop
and
add
pop
clc
pop
cli
cmp
clc
push
pop
sbb
cwtl
and
add
loop
clc
sbb
add
cmp
jb
add
ret
clc
push
cwtl
xchg
repnz
jge
sar
push
clc
lcall
clc
repz
clc
outsb
jg
incb
add
pop
xbegin
push
jb
add
int
add
xchg
test
iret
dec
fadds
clc
sub
add
in
daa
clc
int
add
jae
add
rorb
enter
sbb
clc
mov
clc
lahf
mov
and
add
add
mov
sub
push
push
repnz
add
repnz
lock
add
mulb
clc
sbb
iret
ret
clc
mov
imul
mov
add
xchg
mov
add
cmp
mov
mov
pushf
and
add
clc
imul
clc
ror
xor
add
fistpll
in
test
mov
scas
stos
mov
int3
xchg
pop
cmp
das
and
add
sbb
dec
cmp
add
clc
or
clc
scas
mov
sbb
pop
xbegin
mov
outsl
jns
jg
add
pop
xor
add
js
clc
cmc
or
clc
cmp
add
push
and
add
xchg
in
inc
clc
mov
or
icebp
pop
dec
push
add
mov
clc
inc
add
mov
clc
cmp
clc
dec
adc
clc
cmp
jo
add
jmp
inc
clc
push
add
popf
mov
mov
add
add
add
push
pop
sbb
lret
mov
add
std
incb
into
or
pop
push
mov
add
mov
clc
mov
add
add
loopne
adc
mov
aad
pop
int
inc
add
lahf
loopne
outsl
add
add
fisttpl
pop
cmp
add
frstor
add
clc
dec
jnp
and
add
add
clc
repz
cmp
xchg
into
push
clc
jg
cmp
cmp
xor
clc
aas
pop
cld
xchg
out
mov
sub
add
bound
add
aad
test
in
sete
or
sar
loopne
xchg
out
jmp
test
lret
sbb
mov
fimuls
clc
xchg
stos
xchg
es
sarl
cmp
and
add
sub
pop
mov
mov
aaa
loope
xchg
sub
add
mov
das
push
icebp
clc
lret
dec
push
sbb
mov
clc
sub
clc
push
add
fiadds
add
xchg
cmp
nop
clc
scas
das
push
clc
and
aam
add
push
pop
sbb
mov
cmp
push
fsubl
inc
clc
out
sub
dec
loopne
xor
add
clc
das
cwtl
stos
xchg
stc
mov
mov
loope
mov
sbb
xchg
imul
xor
add
sub
xchg
sar
and
add
testb
add
adc
clc
fisttpl
mov
pop
rcl
xchg
cmc
inc
add
fwait
xbegin
clc
add
add
loop
jl
out
movsl
clc
mov
sbb
clc
cmp
add
lock
hlt
sbb
arpl
add
inc
clc
dec
jo
add
xchg
out
mov
clc
jp
lcall
sbb
test
dec
shlb
clc
jbe
clc
scas
pop
clc
inc
clc
sbb
pushf
mov
lock
clc
or
clc
ds
lock
xabort
bound
add
add
dec
sub
mov
sub
pop
gs
loope
push
add
jne
push
clc
or
add
add
clc
sahf
nop
cmp
clc
mov
inc
clc
push
add
push
jg
add
mov
add
fs
nop
nop
inc
add
sar
clc
xor
add
ss
sub
call
ss
xor
add
add
repz
popf
mov
clc
call
clc
and
add
clc
xor
add
jae
add
cmp
dec
cmp
sub
add
lcall
clc
pop
jno
add
add
lods
xor
sbb
clc
mov
cmp
sahf
mov
fs
gs
add
stos
cmp
add
pop
clc
cmp
jp
std
jl
call
add
mov
jo
add
pop
fnstsw
push
add
mov
dec
insl
das
pop
inc
clc
adc
fistps
clc
sbb
lock
adc
popf
cmp
clc
mov
clc
xor
add
adc
or
add
add
cmp
sbb
stos
in
pop
xabort
clc
imul
add
dec
hlt
jle
add
gs
clc
mov
lcall
lret
add
push
xchg
fmuls
clc
aas
inc
clc
xchg
mov
add
xabort
sub
inc
clc
xor
add
clc
push
cmp
stc
aaa
test
test
add
add
inc
clc
in
pop
lea
clc
adc
add
inc
add
out
adc
add
adc
add
xbegin
clc
xchg
mov
lret
mov
lahf
add
add
sbb
cmp
add
add
mulb
clc
pop
or
clc
push
mov
clc
pusha
add
jle
cli
imul
aaa
mov
clc
push
jecxz
pop
outsl
mov
inc
add
es
jge
arpl
add
jle
clc
leave
jo
add
add
pop
loopne
pushl
add
add
xchg
push
add
stos
or
add
xor
clc
pop
push
add
sbb
insl
jle
inc
clc
push
clc
mov
sub
add
fldt
imul
add
mov
clc
push
clc
xor
add
test
hlt
or
pop
sahf
pop
xor
add
js
clc
add
add
xchg
mov
sub
add
xor
add
dec
xchg
xchg
sub
jno
add
add
xchg
ret
clc
inc
add
push
clc
stc
shrb
adc
add
mov
clc
cltd
lret
test
clc
jns
add
xbegin
fdivs
cltd
lock
mov
add
int
cmc
add
push
mov
lods
iret
inc
clc
mov
mov
clc
mov
add
cmpsl
clc
repz
in
ljmp
mov
and
popa
add
aad
add
filds
dec
fsin
lods
outsb
adc
add
mov
add
js
clc
push
stc
sub
xchg
inc
add
stos
or
mov
push
add
jb
add
clc
int
add
bound
add
sti
in
imul
clc
das
xor
add
in
xchg
dec
mov
add
mov
in
mov
clc
mov
dec
gs
es
mov
and
jns
out
into
cmp
nop
nop
sbb
mov
mov
jp
jns
add
imul
sub
clc
mov
stos
or
add
jmp
sub
fidivrl
clc
sub
clc
mov
xchg
lret
cli
add
popa
add
xor
add
add
clc
push
add
ljmp
clc
cmc
mov
clc
jnp
add
aam
mov
add
clc
ret
clc
or
add
add
pop
test
add
mov
clc
mov
cmc
mov
dec
adc
add
lret
fmull
push
add
std
xlat
cmpsb
clc
lret
xchg
enter
or
add
mov
data16
cmp
clc
add
adc
add
push
adc
add
js
aaa
fisubs
add
add
pop
int3
jle
jg
push
pop
bound
add
add
ljmp
inc
add
clc
sbb
clc
xchg
inc
add
xlat
pop
jo
add
sub
movsb
clc
add
add
iret
lods
nop
cli
imul
add
adc
add
stc
push
dec
xchg
cmp
imul
aas
lret
out
stc
mov
add
clc
adc
add
jl
je
out
ja
clc
dec
xchg
mov
xor
add
pop
sar
clc
lcall
mov
mov
dec
cli
mov
clc
scas
rcl
xabort
clc
dec
xabort
clc
mov
int3
mov
ficoms
add
add
call
clc
add
leave
or
clc
sbb
add
gs
mov
ljmp
shrl
clc
cmp
mov
xor
add
test
jns
clc
cmp
nop
mov
std
cmpsl
clc
add
add
add
jecxz
mov
add
inc
clc
repz
dec
fsts
add
or
and
add
clc
jmp
cmp
daa
clc
data16
icebp
rclb
fmull
std
faddl
add
cmpsl
clc
ljmp
call
add
add
std
clc
lock
add
sahf
adc
add
clc
and
add
clc
cmp
add
lahf
bound
add
clc
or
add
cmp
cmp
add
fsub
clc
adc
aaa
mov
sbb
add
add
add
xor
add
add
adc
add
mov
clc
fidivs
clc
or
ja
add
xchg
cmp
clc
mov
add
clc
icebp
xbegin
add
xor
add
jecxz
loop
pop
stos
fildl
add
cli
fs
pusha
add
movsl
clc
push
lret
data16
scas
aas
mov
clc
lcall
xchg
js
pop
clc
stos
sub
xor
add
lret
push
sahf
fadds
push
add
fs
ljmp
clc
push
adc
add
add
mov
jne
sahf
and
into
xor
add
shl
cmpsb
clc
sub
sbb
lahf
fwait
rclb
sbb
fwait
sbb
mov
mov
clc
sti
push
or
or
call
or
clc
or
js
inc
clc
jle
xbegin
clc
add
enter
mov
sbb
sub
lock
incb
add
add
add
add
test
cmpsl
clc
dec
add
add
cmp
clc
pop
mov
into
into
xchg
xchg
mov
pop
rcll
add
adc
nop
inc
clc
scas
add
add
out
or
clc
xchg
mov
pusha
add
push
fst
scas
mov
cmp
stc
cs
daa
clc
dec
icebp
insb
fstl
add
adc
add
add
add
add
add
push
loop
addr16
fcmovbe
adc
add
clc
sbb
add
mov
ljmp
add
add
add
jb
add
push
out
pop
jmp
add
ss
pop
scas
inc
clc
cmc
push
jecxz
inc
add
cs
mov
clc
cli
xchg
sahf
adc
add
lods
cmp
or
mov
add
loope
mov
add
pop
shlb
add
clc
mov
clc
lock
pop
clc
push
clc
xchg
inc
add
or
add
ficoml
jns
add
adc
add
add
push
sar
clc
cmp
pop
jge
adc
add
clc
lock
add
add
mov
adc
insb
xbegin
cmp
add
add
add
std
xor
dec
nop
mov
add
std
mov
pop
clc
out
arpl
add
dec
cmp
negl
clc
ror
imul
clc
mov
or
jle
cmp
sub
popf
xchg
test
cmp
sbb
lret
divb
mov
roll
add
inc
add
imul
cwtl
sbb
ja
mov
add
inc
add
xchg
jle
add
mov
pop
outsb
xchg
lods
jmp
clc
jp
sar
add
data16
cmp
pusha
add
pop
imulb
push
clc
inc
add
lock
pop
xor
add
cltd
iret
cmpsl
clc
jne
dec
jne
inc
clc
loopne
mov
sbb
clc
mov
clc
jae
add
stos
int
dec
dec
insl
sub
pop
fcompl
jnp
push
push
clc
inc
add
mov
xchg
test
data16
lret
testb
fistpl
add
push
pop
icebp
loope
sub
add
in
mov
pusha
add
call
cli
popa
add
mov
clc
ja
jle
pop
clc
or
pop
imul
sub
sub
clc
lods
gs
js
rsqrtps
add
stos
repnz
aas
into
sub
clc
or
cmp
test
xor
add
ds
jl
adc
loopne
mov
sar
add
sti
icebp
add
sub
add
add
mov
inc
clc
jb
add
mov
xor
add
sar
clc
jl
clc
mov
jle,pt
clc
adc
add
out
mov
sbb
clc
addr16
test
add
notl
cld
xor
add
or
pop
jecxz
jnp
clc
divb
fistps
and
add
add
lods
lret
add
add
pop
jnp
insb
stos
mov
in
imul
push
nop
leave
jno
add
cli
fdivrl
dec
and
add
push
aaa
push
add
jnp
cmp
out
xabort
add
fbld
add
add
add
aaa
data16
mov
pop
pop
sbb
push
push
push
adc
clc
in
sbb
inc
add
xchg
sar
clc
mov
jo
add
add
pop
out
es
std
imul
sbb
xor
sar
ficoml
add
mov
sti
xor
add
add
psllw
int
add
and
add
clc
and
add
dec
mov
add
push
clc
or
clc
jp
push
gs
aam
add
clc
xabort
test
cmp
ja
repz
dec
jmp
add
jg
dec
pop
lock
pop
nop
xchg
ficomps
loope
mov
int
int
es
xchg
pop
pop
flds
add
jmp
mov
daa
clc
int3
movsl
clc
out
insl
pop
insl
inc
clc
jp
add
add
add
or
cmc
ds
add
inc
clc
stos
adc
add
loop
push
clc
xchg
sbb
test
clc
xchg
inc
add
push
add
pop
loope
rcr
jb
add
ret
clc
inc
clc
into
inc
clc
dec
cmp
cli
in
cmpsl
clc
test
push
cltd
jb
add
clc
dec
aad
add
fs
mov
out
push
push
push
jg
add
mov
clc
xchg
negl
clc
loop
xchg
lods
pop
pop
pop
xchg
jae
add
clc
cmp
clc
jbe
ds
jns
pop
lods
mov
enter
cmp
cs
adc
add
lods
pop
xchg
es
inc
clc
loop
mov
clc
cmp
add
push
insl
dec
dec
cltd
add
add
popa
add
inc
add
adc
jbe
insl
push
loop
fs
test
add
mov
mov
insl
xbegin
add
in
lock
cmc
or
nop
aas
sbb
loop
and
add
jmp
sub
mov
add
out
pop
ja
add
shll
dec
fnstenv
add
clc
fbstp
loop
sub
xor
mov
cli
out
data16
push
add
mov
push
ret
clc
lods
xor
add
fnstenv
add
imul
icebp
pop
ds
add
add
push
enter
rcrb
in
xor
add
xchg
sbb
in
addr16
push
add
mov
push
add
add
add
adc
fwait
push
ljmp
lcall
clc
int
clc
and
add
fcomi
xchg
xabort
jp
jnp
add
cmp
clc
dec
mov
fnstsw
clc
cmpsl
clc
fsub
clc
addr16
stos
cmp
or
mov
es
pushf
push
add
fmulp
sbb
mov
ror
sbb
aad
ss
xchg
xor
add
mov
clc
xchg
inc
add
pusha
add
cmp
clc
sub
xchg
cmp
aam
clc
push
add
push
add
sub
cmp
out
adc
add
add
movsl
clc
mov
clc
xor
add
add
jns
cli
cmp
lea
cmpsb
clc
and
add
mov
out
xor
add
clc
das
adc
or
clc
inc
clc
ret
clc
push
or
movsb
clc
call
add
scas
push
add
sar
clc
fimull
mov
push
lcall
cld
add
add
push
fistl
inc
clc
sbb
imul
adc
add
or
enter
clc
aad
push
add
sar
scas
push
add
ja
add
xchg
pop
addr16
jmp
clc
call
shrl
imul
dec
mov
pop
cmc
clc
jns
test
movsb
clc
sbb
clc
add
add
std
adc
add
filds
clc
cmpsl
clc
lea
clc
stc
rorl
clc
js
stc
inc
clc
pop
lock
gs
xchg
dec
add
jg
pop
jp
add
fwait
outsb
xchg
dec
std
push
ret
clc
jno
add
add
add
clc
pop
test
xor
add
xor
add
idivb
lret
add
push
add
in
push
add
jbe
clc
outsl
loope
cmp
xor
mov
in
ljmp
add
add
clc
into
jne
aaa
test
add
test
xabort
clc
xchg
add
add
pop
mov
lret
dec
jbe
clc
sub
lods
sti
jecxz
pusha
add
and
add
xlat
fadds
ss
mov
daa
clc
cmpsl
clc
lret
push
fcomip
sar
and
add
mov
push
adc
add
decl
xor
sub
adc
add
add
add
fdivrl
pop
testl
xor
add
jno
add
jnp
aaa
mov
mov
sbb
popf
fnstenv
and
add
mov
xchg
stos
ljmp
stc
cltd
add
add
call
add
or
loopne
outsl
mov
jmp
clc
jb
add
add
add
or
xabort
jbe
add
push
mov
arpl
add
inc
clc
push
pop
loopne
inc
add
xor
add
sub
sub
cmp
clc
xor
add
cmp
add
add
add
mov
pop
jo
add
adc
sub
out
mov
clc
mov
es
enter
pop
mov
xchg
or
xlat
clc
mov
add
aam
xlat
xor
movsb
clc
popf
sbb
mov
add
pop
clc
mov
mov
dec
sub
into
mov
clc
cwtl
icebp
push
mov
push
pusha
add
xchg
loop
jg
cmp
clc
mov
jo
add
addr16
aam
add
cmp
and
clc
fs
div
cmc
inc
clc
addr16
cmp
push
and
add
data16
or
aad
jg
xor
add
clc
xbegin
add
stos
inc
add
stc
nop
stos
sti
in
fsubrl
cmp
in
rorl
clc
out
sbb
add
cmp
xor
add
clc
xchg
dec
or
arpl
add
add
jbe
or
or
adc
add
bound
add
cmpsl
clc
add
add
add
sar
push
lret
testb
add
movsl
clc
sar
push
xchg
loopne
push
clc
in
call
clc
mov
clc
icebp
push
add
xchg
in
test
cs
add
outsb
cmp
aam
clc
inc
add
mov
xor
add
mov
sahf
test
dec
sbb
pushf
mov
mov
and
add
ljmp
add
or
add
or
pushf
mov
push
ljmp
add
fstpt
add
mov
cmp
adc
clc
adc
add
cmpsb
clc
es
or
add
aad
clc
sub
dec
call
stos
mov
clc
pushf
mov
ror
dec
sbb
add
xabort
aas
xabort
pushf
mov
clc
repnz
clc
clc
jp
push
test
pushf
mov
popa
add
sbb
add
adc
cmp
mov
clc
push
mov
add
add
clc
nop
mov
sub
lods
pop
jle
clc
lahf
jecxz
iret
icebp
cmp
clc
add
add
pop
dec
cltd
rorl
or
add
add
add
stc
in
leave
ljmp
cmp
ljmp
xchg
or
cmp
clc
rorl
add
inc
clc
es
inc
add
mov
clc
int3
aam
aas
and
xbegin
add
das
sub
dec
fwait
cwtl
aaa
cmp
and
push
pop
nop
jge
int
clc
int
cmc
mov
add
pusha
add
pop
fs
cltd
push
add
push
add
and
add
sub
add
pop
call
outsl
data16
jmp
add
mov
clc
fsubl
xor
cmp
push
add
xchg
adc
clc
js
add
and
add
add
sbb
add
cltd
push
fsubs
sbb
clc
int
mov
cmp
clc
stc
inc
clc
jae
add
outsl
add
add
add
cmp
cmp
clc
and
add
mov
scas
fs
mov
mov
clc
cmp
loope
cs
adc
add
add
dec
dec
es
sti
lock
repnz
add
add
push
add
xor
clc
loop
xor
add
mov
cmp
into
cmp
clc
jb
add
jnp
movsl
clc
pop
negb
and
add
add
ficoml
xor
mov
clc
pand
clc
daa
clc
gs
push
cwtl
xchg
push
jnp
mov
jl
clc
ljmp
add
push
lock
clc
mov
gs
sub
cmpsl
clc
psllw
cwtl
jno
add
add
adc
add
add
mov
clc
lahf
sarl
and
add
clc
addr16
and
add
cmp
clc
push
add
std
mov
sbb
cmp
sub
mov
jb
add
mov
push
add
test
sub
push
iret
xbegin
jae
add
add
cmp
xchg
jo
add
shl
clc
popf
lods
mov
adc
add
xor
add
add
dec
imul
lcall
clc
sahf
mov
xor
xor
add
pop
mov
mov
xchg
fsubr
syscall
clc
insb
movsl
clc
jbe
clc
cmp
push
sahf
sub
outsb
jne
fsubrs
hlt
test
or
clc
fnstsw
out
test
arpl
add
add
add
out
or
add
pop
into
and
inc
clc
dec
push
add
xchg
pop
sub
insb
pop
lock
add
add
pop
mov
in
pop
jno
add
hlt
mov
pop
clc
call
cmp
jg
push
jno
add
ljmp
adc
add
es
pop
sarl
std
adc
add
clc
mov
fimuls
test
mov
in
cmp
xchg
or
dec
clc
sbb
add
clc
insb
sbb
clc
nop
sbb
enter
ss
xchg
or
ja
clc
cmpsl
clc
sar
jae
add
fistpl
or
mov
pop
cmp
clc
add
add
xchg
mov
xor
add
iret
dec
icebp
stc
lea
add
xchg
clc
pop
xlat
jno
add
mov
mov
sbb
push
pop
sahf
or
push
clc
and
int3
repnz
add
add
leave
int3
mov
xor
add
scas
add
add
sar
sahf
sbb
push
push
xor
add
add
add
xchg
and
add
add
cmc
fcmovnbe
sub
mov
in
jns
sub
add
add
stos
pop
mov
inc
add
fildll
clc
rol
clc
jno
add
hlt
out
fs
mov
clc
sbb
clc
cli
xor
add
dec
fnstsw
jae
add
sbb
mov
cli
sbb
movsb
clc
jp
cmp
pop
adc
add
clc
aaa
or
add
lcall
clc
adc
add
add
clc
xchg
sbb
fisttpll
lcall
fistpll
lea
and
add
add
sub
clc
ds
or
daa
clc
stos
adc
add
dec
sbb
daa
clc
lods
or
mov
push
add
jl
add
int3
in
or
add
sub
clc
jmp
lods
cmp
clc
push
add
mov
sbb
add
in
push
add
repnz
add
test
movsl
clc
js
clc
ja
dec
push
add
add
add
pop
rorl
add
sub
clc
jae
add
xabort
ljmp
clc
push
push
xchg
or
mov
clc
sub
sbb
lea
cmp
clc
mov
clc
movsb
clc
fwait
loope
das
inc
add
data16
push
add
loope
jecxz
cmp
add
dec
std
cmp
dec
out
lock
add
dec
cmp
add
xchg
mov
or
cmp
popa
add
push
add
mov
add
pop
arpl
add
sub
clc
rep
arpl
add
dec
push
xchg
or
and
add
add
jae
add
insb
gs
cmp
pop
add
add
clc
outsl
cmp
lret
sub
clc
data16
mov
adc
add
cmp
lcall
test
cmpsb
clc
jp
sti
and
add
add
mull
call
add
sbb
add
add
add
leave
push
mov
clc
stos
and
add
and
add
add
sbb
clc
or
bound
add
sub
clc
push
add
cmp
or
fs
shlb
add
stos
adc
mov
add
mov
jle
ret
xor
add
ja
clc
ret
cli
mov
incb
xchg
inc
clc
outsl
lret
xchg
pop
push
lods
sti
xchg
fdivr
fmuls
dec
lea
bound
add
clc
out
cs
clc
mov
add
pop
clc
loope
sbb
clc
stos
sbb
push
add
aas
dec
jne
jmp
push
add
cmp
adc
add
clc
fldcw
fistpll
pop
clc
add
add
sar
fisubl
clc
aas
repz
cmp
lret
shlb
popf
jle
push
add
outsl
pushf
ljmp
clc
arpl
add
adc
add
inc
add
adc
add
add
add
sbb
addr16
sub
adc
add
clc
ret
clc
call
xabort
and
add
push
imul
sbb
push
add
rorb
dec
adc
add
push
inc
clc
or
fisubl
xchg
stc
mov
pop
sub
sub
ret
clc
cld
scas
fiaddl
add
gs
mov
add
push
add
in
add
add
sub
clc
and
pop
pop
mov
sub
add
clc
ficoms
add
aaa
movsb
clc
adc
clc
cmp
clc
test
xor
add
inc
clc
xchg
ret
clc
cmpsl
clc
ja
pop
aam
add
pop
arpl
add
xchg
inc
add
pushf
add
add
roll
add
icebp
lea
add
lcall
bound
add
push
clc
in
cmc
inc
add
outsb
jb
add
add
mov
clc
add
add
lret
and
add
fcoml
add
add
xbegin
add
clc
inc
add
lcall
stos
movsb
clc
pusha
add
iret
sbb
out
ds
add
sub
pusha
add
push
jecxz
fwait
es
fwait
mul
clc
in
int
test
mov
mov
inc
clc
scas
imul
add
xbegin
sub
cwtl
dec
xchg
sbb
and
add
movsb
clc
xchg
cmp
add
outsl
movsb
clc
dec
inc
clc
add
add
leave
jp
clc
shrl
mov
clc
test
add
pop
pop
lea
clc
aas
ktestw
pop
bound
add
addr16
rcrl
add
mov
clc
cmp
clc
es
fdivrl
xchg
push
clc
inc
add
jp
pop
clc
sub
clc
ficompl
add
dec
pushf
cmp
clc
std
pop
ds
cltd
add
lods
xchg
mov
iret
hlt
inc
clc
ds
mov
or
mov
dec
jmp
sar
sub
add
add
es
jge
xor
add
jae
add
test
clc
jo
add
add
fwait
add
add
add
into
xor
add
add
cmc
bound
add
pusha
add
sbb
mov
add
sahf
adc
add
sub
outsb
push
add
lret
out
push
and
add
aaa
jbe
or
sub
fbld
add
fisttps
rcrb
int
dec
neg
mov
clc
push
add
and
add
aad
xchg
insb
pop
xor
add
add
dec
dec
xchg
xor
add
mov
xor
add
xchg
cmp
clc
call
add
call
cmp
add
outsb
push
test
mov
clc
mov
clc
cs
or
imul
int3
push
clc
mov
test
jb
add
and
add
arpl
add
add
lods
test
jnp
dec
fdiv
loopne
xchg
and
add
xchg
sub
stc
add
add
cmp
add
clc
fisubs
add
clc
clc
xchg
fnstsw
repz
or
add
in
outsb
daa
clc
mov
ret
ljmp
clc
lods
adc
add
add
pop
clc
add
xor
add
cmp
xor
add
mov
nop
inc
add
insb
fidivrs
cs
dec
clc
mov
mov
fnsave
add
jno
add
ret
add
enter
add
repnz
call
mov
arpl
add
xchg
adc
add
call
cmpsl
clc
not
sbb
cmp
add
cmp
adc
clc
push
add
pop
add
add
clc
rolb
call
pusha
add
lock
adc
jne
jecxz
dec
push
and
add
clc
inc
clc
jno
add
cs
sbb
cmp
dec
rcrb
jmp
das
dec
push
clc
push
and
loope
mov
clc
sub
clc
mov
or
add
add
cmp
add
ret
add
cli
mov
clc
add
add
fldcw
add
ss
mov
add
add
ss
stos
push
inc
clc
stc
xchg
mov
clc
pop
xor
add
ret
clc
push
add
dec
mov
fmuls
cmp
add
pop
jb
add
push
vaddps
test
jecxz
inc
add
pop
xchg
cli
sub
or
push
add
jae
add
push
clc
int
lret
je
clc
inc
clc
cli
rcrl
inc
add
stc
lods
loop
inc
clc
repnz
clc
or
lea
dec
outsb
pop
int3
psadbw
add
aas
jp
mov
add
rcr
xchg
jno
add
clc
push
add
mov
add
in
sub
add
test
cmp
clc
jnp
clc
or
sbb
add
inc
clc
repz
xchg
xchg
jle
inc
add
cmp
clc
mov
rcll
cmp
mov
pop
jae
add
clc
push
dec
test
add
add
aaa
dec
repnz
add
jge
fmull
sbb
add
aas
sbb
test
cmp
scas
jecxz
cli
add
add
xor
add
popa
add
mov
clc
mov
ret
clc
cwtl
lock
stos
movsb
clc
rolb
clc
pop
cmp
into
adc
add
into
jno
add
cltd
test
out
push
out
cltd
gs
push
jbe
aas
fsubs
clc
dec
sub
clc
dec
xchg
sarb
lcall
mov
clc
scas
cmp
sbb
and
add
clc
stos
sub
jne
pop
nop
shlb
add
cli
sub
lea
pushf
hlt
mov
mov
cmp
push
add
es
lret
lea
inc
clc
add
add
add
vsqrtps
add
clc
add
dec
js
add
mull
add
adc
add
int
or
add
mov
clc
and
add
clc
push
jnp
inc
add
lret
sub
add
mov
clc
pop
sar
xor
add
clc
mov
adc
add
cmp
xor
add
push
mov
sar
add
lahf
test
add
mov
cmp
cmp
clc
dec
or
lock
or
sub
pop
test
push
add
mov
fsts
add
add
rcrb
das
imul
clc
cmp
add
cmp
clc
and
add
cmpsb
clc
xchg
fmuls
jmp
popf
gs
aam
mov
clc
mov
lods
push
cli
sub
clc
push
sbb
inc
add
mov
adc
add
jb
add
add
mov
push
cmp
popa
add
mov
jae
add
clc
xchg
mov
stos
or
add
clc
jo
add
mov
push
add
push
add
pop
insb
mov
sar
push
sub
not
inc
add
mov
push
add
mov
and
jno
add
add
add
mov
xor
out
mov
clc
fstpt
cwtl
in
push
add
imul
in
xchg
cld
pusha
add
mov
mov
in
mov
call
cmpsb
clc
push
cmp
test
shrl
add
adc
add
clc
inc
clc
sahf
int3
out
cwtl
xchg
pusha
add
jo
add
clc
add
add
lods
ror
lods
jb
add
rclb
stos
loop
and
pop
shl
clc
lock
add
xor
add
lock
add
ja
push
jns
data16
adc
sbb
clc
pushf
pop
fstps
sbb
add
cmp
int3
adc
sbb
cmp
add
xchg
out
mov
clc
inc
add
pop
cmpsl
clc
sbb
clc
cli
pop
lret
ret
movsl
clc
or
mov
clc
ucomiss
clc
lea
lods
ss
clc
pop
or
test
add
inc
clc
jno
add
clc
fsubr
dec
aas
lods
stc
xchg
fildll
clc
aas
ja
xchg
lock
loope
push
add
sub
ret
pop
xor
add
aas
data16
cmp
add
mov
mov
add
sub
inc
add
int3
and
add
mov
lcall
outsl
js
cmp
mov
clc
adc
add
mov
inc
clc
inc
clc
jns
ljmp
sbb
lcall
add
insb
sar
clc
mov
add
out
in
or
push
push
add
in
out
ret
scas
sbb
aam
or
or
dec
gs
mov
mov
clc
int
clc
xchg
cmp
dec
movq
clc
sbb
mov
add
and
xchg
xchg
dec
int3
test
testb
lock
mov
cmp
add
jo
add
add
add
cmpsl
clc
push
add
push
add
pop
sbb
dec
fs
xor
add
lahf
sbb
cli
inc
add
fxch
addr16
add
add
clc
iret
pop
fs
and
add
add
loope
imul
clc
addr16
aaa
lock
repnz
cwtl
gs
int
or
add
cmp
fisubl
int3
adc
add
fsubr
xabort
clc
jecxz
jl
clc
cmpsl
clc
push
xchg
aam
sbb
popf
cmp
or
lods
mov
clc
push
add
inc
add
popa
add
sbb
cmp
add
inc
clc
add
jmp
pop
jmp
clc
stos
push
fwait
or
clc
mov
das
pop
sub
mov
aad
fnstsw
insl
mul
clc
or
add
adc
clc
sub
add
add
or
clc
fs
xor
add
push
fldcw
or
jl
clc
add
add
sahf
cmp
clc
add
add
cmp
mov
fs
jns
sbb
clc
inc
add
gs
cs
add
mov
clc
pop
sbb
daa
clc
inc
clc
ja
lock
sub
add
xlat
std
data16
in
dec
clc
sub
fisubl
add
add
or
clc
mov
add
test
mov
cmc
pop
cmp
push
add
cmp
cli
xlat
jmp
clc
popf
xabort
icebp
and
add
inc
add
xor
add
add
dec
stc
and
jne
popa
add
jb
add
push
add
int
pushf
pop
dec
fcomps
sbb
add
clc
test
mov
mov
dec
cmp
mov
or
loop
jns
dec
jae
add
arpl
add
add
cmc
lahf
pop
ficomps
clc
imul
clc
dec
cs
cwtl
mov
clc
faddl
add
push
pop
mov
jg
cmp
sub
add
clc
mov
add
int
mov
clc
insb
leave
inc
add
mull
add
mov
clc
inc
clc
lock
cld
sub
clc
movsb
clc
in
fs
push
mov
push
add
out
push
add
lods
mov
mov
xchg
cs
add
sbb
aaa
loope
js
gs
and
add
es
in
add
mov
negb
lret
adc
add
push
mov
or
out
pushf
sub
clc
cmp
outsb
fwait
pop
rorb
pop
aam
sti
cmp
clc
mov
cmp
xor
and
aam
mulb
add
push
xchg
push
add
jno
add
test
mov
clc
sub
pop
shlb
and
xor
add
sub
push
inc
add
jmp
sub
push
add
jb
add
push
xbegin
push
add
pop
test
js
pusha
add
sub
pop
mov
lahf
das
or
push
shlb
jg
add
sbb
clc
test
mov
add
add
fstl
fiaddl
add
mov
clc
dec
fimull
jle
add
mov
jmp
out
mov
sahf
cmp
sbb
adc
add
ljmp
mov
and
add
add
xlat
sbb
clc
mov
clc
dec
sub
push
cld
xor
add
clc
nop
addr16
inc
add
sub
out
bnd
cs
movsl
clc
into
dec
xchg
std
arpl
add
adc
add
add
movsl
clc
jb
add
add
inc
add
dec
das
sahf
mov
scas
ret
xor
add
jl
js
add
add
clc
cld
inc
clc
call
mov
jmp
jns
dec
daa
clc
pop
push
inc
add
mov
sub
clc
cmpsb
clc
xchg
fs
mov
mov
clc
sub
clc
jmp
add
ja
inc
clc
xchg
cld
mov
clc
clc
xchg
pop
jl
loopne
sbb
add
sub
adc
add
test
and
mov
clc
push
add
fwait
jmp
clc
test
xchg
cmp
push
or
fmulp
nop
mov
jecxz
cmp
add
push
add
sar
sbb
daa
clc
adc
add
clc
mov
add
and
add
or
movsb
clc
loope
aam
xor
add
push
add
daa
clc
mov
data16
mov
pop
out
xor
add
aas
sbb
clc
xchg
cmp
xchg
call
aaa
cmc
pop
addr16
fcoms
xor
add
lods
jp
sbb
add
aad
clc
lret
pusha
add
xor
add
mov
in
scas
pop
xchg
add
or
out
mov
int
leave
jle
mov
sbb
ljmp
cld
data16
shll
clc
hlt
rorl
clc
or
jmp
add
fs
push
xabort
mov
push
gs
sar
rolb
fistpl
add
push
add
test
cmp
bound
add
add
cmp
cmp
add
sub
add
add
jno
add
clc
xor
add
add
je
pop
fisttps
add
add
add
clc
je
add
es
pushf
fnstcw
pop
rorb
addr16
adc
clc
aad
clc
pusha
add
loop
and
sub
clc
xchg
cld
fstl
xor
gs
sar
clc
sub
adc
xchg
cmp
pop
lea
clc
sbb
add
pop
clc
cs
stc
fwait
xchg
out
xor
add
int
sbb
loop
inc
add
pop
sub
add
fidivrs
add
jp
add
add
add
mov
in
ds
test
add
clc
xchg
cmp
push
clc
add
add
aas
jecxz
xlat
aam
clc
xor
add
clc
add
clc
mov
cmpsb
clc
jmp
add
or
cmp
jo
add
sub
mov
xchg
pop
cmpsl
clc
in
jl
mov
clc
cli
or
mov
pop
jo
add
add
push
add
clc
push
cltd
in
mov
adc
xbegin
mov
xchg
repz
push
daa
clc
jae
add
push
add
rorb
sar
shlb
add
add
mov
jnp
add
fiadds
test
clc
push
nop
and
add
cmpsb
clc
fimuls
outsb
push
dec
add
add
xor
add
adc
add
push
add
div
and
add
mov
clc
xor
add
pop
xchg
call
add
movsl
clc
cmpsb
clc
xabort
addr16
and
cmp
sub
add
inc
clc
jae
add
fdivrl
sub
add
sbb
sub
fcoms
mov
clc
js
add
xor
add
bound
add
add
inc
add
sar
xlat
xbegin
clc
and
mov
dec
aad
clc
lods
call
pop
outsl
mov
add
ljmp
in
xor
ret
imul
clc
std
scas
inc
add
movsl
clc
sbb
icebp
sub
add
add
sub
hlt
pop
mov
add
jecxz
cmp
clc
ror
cmp
lods
add
add
add
push
add
enter
jno
add
jbe
add
sar
js
or
clc
test
out
or
pop
call
mov
xchg
cmp
pop
mov
out
movsb
clc
add
add
add
cwtl
movsl
clc
pop
ja
add
and
add
add
jp
clc
sub
sub
xchg
lock
add
cmpsl
clc
inc
clc
in
popf
mov
sbb
bound
add
adc
add
or
push
mov
scas
outsl
xchg
outsl
call
clc
jmp
jno
add
std
stos
aas
movsl
clc
dec
or
clc
pop
pop
leave
xor
add
clc
in
in
jno
add
jp
stc
xchg
dec
jl
sub
ficoml
xchg
lret
push
add
hlt
jb
add
inc
add
fdivrp
sti
hlt
cmp
clc
push
push
clc
outsl
stc
and
add
add
add
add
je
clc
mov
or
cmpsl
clc
push
add
adc
clc
pop
gs
pop
and
add
fwait
lret
add
add
add
pop
fsts
add
push
jns
add
ret
ret
or
jo
add
add
xchg
lret
stc
lods
adc
add
je
clc
icebp
adc
add
add
add
or
ds
cmp
repnz
xor
add
decb
and
sub
cmp
in
add
add
mov
aas
sar
and
add
mov
enter
and
add
add
add
jne
ja
add
and
add
push
aam
add
add
clc
in
sbb
add
xlat
mov
lea
pop
clc
out
xlat
xor
add
inc
add
repz
cmp
mov
jns
clc
stos
in
dec
in
js
fcomi
adc
clc
mov
add
push
in
ret
bound
add
nop
mov
cld
push
jmp
clc
fcoms
scas
push
cmp
clc
push
add
jns
lahf
sub
add
lahf
ret
aas
pop
jno
add
je
add
jg
ss
out
and
add
clc
add
add
es
push
add
outsl
movsb
clc
mov
clc
into
inc
clc
sbb
add
add
add
mov
add
aad
clc
enter
lea
add
adc
mov
clc
adc
add
add
mov
inc
add
lret
mov
inc
add
pop
cmpsb
clc
sbb
clc
popf
and
add
xchg
js
clc
ret
clc
mov
vcvtdq2ps
jle
clc
xchg
leave
add
add
dec
fs
mov
xor
add
push
dec
jle
loope
sub
out
add
bound
add
xor
add
clc
push
add
mov
inc
add
ret
dec
jnp
add
outsl
jne
add
out
pusha
add
inc
add
in
imull
popf
insl
rclb
add
bound
add
push
dec
sub
aad
add
inc
add
fnstsw
xor
clc
mov
xchg
cs
and
add
pushf
xchg
lea
mov
adc
add
mov
add
mov
add
test
adc
sbb
clc
scas
stc
stc
test
inc
add
mov
clc
roll
add
popa
add
xor
pushf
xbegin
jecxz
inc
add
mov
cmp
clc
and
add
lcall
out
sub
mov
add
outsl
push
add
out
mov
jle
cltd
sbb
bndldx
filds
test
cmp
add
clc
adc
add
mov
add
adc
pop
pop
dec
mov
pop
fisttps
add
stc
pop
jb
add
mov
pusha
add
scas
pushf
sarl
jo
add
addr16
add
add
add
mov
mov
add
dec
sbb
add
lods
mov
clc
jecxz
inc
add
push
add
aaa
xor
add
clc
mov
clc
adc
adc
add
sar
clc
stc
mov
add
and
cmp
add
pushf
or
clc
movsl
clc
jle
cmp
xlat
pop
sbb
clc
push
sub
add
cltd
inc
clc
bound
add
push
clc
inc
clc
or
clc
rdtsc
add
jo
add
add
cmp
cmp
lcall
clc
aad
sbb
sbb
fyl2xp1
sbb
add
addr16
sbb
clc
dec
test
lock
bound
add
add
jns
jg
addr16
add
add
movsl
clc
xor
add
pop
in
loope
sub
clc
mov
or
repnz
pop
inc
clc
xchg
out
bound
add
add
lods
sub
clc
out
cmc
out
ret
clc
jmp
cmp
enter
loopne
mov
mov
add
add
add
outsb
pop
rcll
add
add
xor
scas
sbb
clc
pop
clc
cmp
sbb
adc
clc
xabort
add
jge
clc
icebp
out
xchg
cmp
mov
clc
jg
adc
add
dec
and
add
clc
mov
mov
stos
cmp
mov
scas
add
add
sti
sar
xabort
inc
clc
xor
add
add
cmp
inc
clc
mov
out
inc
clc
fs
pop
gs
xchg
ja
sub
add
add
sar
clc
push
add
and
add
std
fs
out
aam
popa
add
xlat
and
sub
and
add
add
es
add
lock
add
add
clc
xor
add
enter
ja
int
lahf
lock
pop
push
cmp
clc
es
sar
add
lret
sbb
jnp
pusha
add
mov
clc
adc
add
push
fists
add
aas
ja,pt
push
xor
pop
in
pop
mov
mov
push
clc
mov
clc
test
repnz
add
div
adc
add
addr16
icebp
pop
nop
jo
add
out
aas
adc
add
sarb
mov
mov
add
push
add
fstl
add
clc
xchg
out
or
test
push
mov
sbb
add
ja
clc
jae
add
add
cmp
mov
cld
std
cmp
sti
pop
mov
mov
mov
clc
adc
add
filds
clc
stc
inc
add
addr16
and
add
clc
movsb
clc
fucomi
cmc
outsb
stc
mov
add
pop
fldcw
push
xor
add
jbe
or
clc
dec
inc
clc
sbb
add
add
stos
push
mov
dec
icebp
cmp
nop
jmp
add
add
add
repnz
test
std
sbb
push
add
adc
add
filds
insb
int
clc
adc
add
clc
clc
or
loope
cli
inc
clc
aam
add
adc
add
clc
jb
add
clc
mov
jb
add
mov
add
add
sbb
inc
clc
dec
and
stos
mov
into
fs
outsl
mov
add
sbb
clc
jge
incl
add
add
clc
inc
add
or
pushl
add
cmp
mov
cli
faddl
add
mov
pop
push
mov
add
mull
mov
add
sti
jno
add
pop
fs
mov
ljmp
add
lods
daa
clc
sbb
add
sub
clc
sbb
add
add
add
out
and
add
das
cmp
add
sar
je
clc
mov
push
clc
call
clc
jnp
clc
mov
pushf
sbb
clc
or
pop
and
add
clc
adc
add
clc
pushf
fcoml
clc
test
add
add
rcll
cltd
in
stc
dec
repz
fs
mov
pop
dec
sub
jge
cmc
lahf
xor
jo
add
mov
faddl
add
mov
clc
sub
mov
add
or
clc
jl
clc
kmovw
clc
inc
clc
gs
cmpsl
clc
sbb
fdiv
add
add
xabort
stos
mov
mov
or
add
sbb
clc
aaa
xchg
push
xor
add
mov
push
add
adc
add
aad
xchg
and
add
add
mov
clc
push
sbb
sbb
sbb
add
add
pop
sar
clc
sbb
into
jo
add
clc
cmp
inc
clc
pop
cmp
add
iret
mov
jp
add
jbe
imull
cmp
into
insb
movsl
clc
push
add
stos
lret
arpl
add
add
pop
sbb
add
lock
inc
clc
ret
jae
add
jae
add
clc
mov
add
ljmp
test
fnstenv
add
add
sub
add
cmc
in
add
add
icebp
outsl
test
cmp
lcall
xor
add
xbegin
call
add
adc
add
add
jg
inc
clc
cmp
clc
popa
add
mov
mov
add
or
gs
inc
add
out
jmp
sbb
jne
add
mov
clc
xor
add
add
dec
jmp
add
clc
mov
fnsave
fldt
inc
clc
shll
and
loopne
adc
add
mov
add
push
dec
filds
fwait
push
icebp
mov
jns
cmpsl
clc
filds
clc
mov
push
aas
clc
test
clc
dec
sar
mov
mov
cwtl
cltd
sti
mov
in
test
clc
aam
xor
add
or
push
mov
rcr
add
add
mov
jge
fsubrs
sar
mov
test
mov
adc
add
add
push
and
add
out
mov
add
imul
add
dec
fldt
xchg
ja
push
sar
imul
div
xchg
jno
add
dec
and
add
add
mov
test
mov
push
cmp
mov
dec
sbb
jno
add
mov
aas
jno
add
add
scas
repnz
sub
popa
add
call
pop
lods
outsb
insb
cmc
pushf
mov
push
insl
lcall
add
sbb
addr16
addr16
lret
mov
ret
clc
inc
add
roll
in
push
add
aam
clc
push
movsb
clc
imul
clc
dec
pop
cmpsb
clc
push
ret
clc
out
mov
fsts
popf
pop
data16
cld
dec
loope
push
clc
sbb
or
jne
fsubl
add
addr16
mov
jge
add
int
pop
push
add
cmp
cmp
into
mov
clc
adc
fucom
clc
addr16
mov
clc
xbegin
sbb
add
insb
mov
add
or
add
mov
and
add
add
cmp
clc
bound
add
clc
cmpsl
clc
xchg
arpl
add
add
aam
nop
lahf
fisttpl
test
cmp
add
leave
jbe
mov
sahf
mov
xchg
in
xor
out
js
clc
fs
sbb
jne
in
ljmp
out
aas
pushf
cwtl
mov
add
mov
clc
cwtl
adc
add
add
push
fldl
jo
add
pusha
add
cmp
mov
call
lcall
mov
dec
int3
xor
add
stos
adc
add
popa
add
sub
sub
xchg
mov
ljmp
xchg
ljmp
mov
mov
lods
adc
add
jns
clc
mov
clc
jl
add
and
add
movsl
clc
mov
clc
mov
mov
push
dec
lahf
clc
loope
es
pop
fs
nop
popf
jns
add
sbb
nop
sub
add
push
pop
insb
mov
cmpsl
clc
in
jecxz
inc
clc
mov
cmp
cmovp
adc
add
mov
push
or
clc
sbb
mov
addr16
adc
add
add
mov
gs
icebp
cmpsb
clc
call
push
add
mov
jmp
clc
mov
clc
into
jb
add
cmp
mov
add
add
cmp
adc
add
mov
clc
sbb
popa
add
ret
mov
sbb
rcrb
lgs
add
sar
sbb
sti
dec
sub
clc
push
add
pop
inc
add
ret
add
push
pop
cwtl
ds
mov
mov
add
and
add
clc
push
cld
push
leave
add
add
lods
insl
sarl
xchg
stc
push
imul
xor
nop
mov
mov
loop
scas
ljmp
or
call
and
add
cmp
scas
test
mov
and
add
add
pop
dec
dec
xchg
sbb
clc
pop
das
dec
lods
aam
incl
jb
add
out
loopne
ja
clc
fs
pop
in
jae
add
clc
addr16
enter
aaa
or
call
mov
std
push
clc
nop
fbstp
add
inc
add
cld
je
jmp
xor
push
stos
xchg
lods
push
lods
add
aaa
mov
in
sub
or
add
mov
cmp
clc
dec
push
add
test
mov
aaa
leave
jns
xchg
jmp
outsl
leave
xabort
clc
lret
jae
add
mov
out
xchg
aad
scas
daa
clc
inc
add
ja
add
jle
mov
xchg
cmpsl
clc
das
inc
clc
jns
xchg
or
jmp
ljmp
clc
outsb
cmpsb
clc
inc
add
fsubr
mov
mov
lahf
push
add
push
mov
add
imul
std
adc
add
add
rcr
mov
jb
add
add
xchg
insb
mov
or
mov
inc
add
and
add
add
xor
xchg
pop
aam
test
fidivrs
clc
mov
inc
clc
jge
add
aad
xchg
fistpl
lret
or
insl
movsb
clc
sbb
bound
add
faddl
clc
sar
mov
dec
jns
cmp
clc
add
add
in
pop
rcl
gs
xchg
sti
mov
push
xabort
add
or
mov
mov
xchg
xor
out
xchg
inc
add
int
cs
xchg
sbb
add
cmp
clc
pushf
xor
dec
pop
inc
clc
movsb
clc
outsl
int
push
add
dec
cmp
fmuls
mov
sar
sbb
xor
add
testb
add
pop
js
fwait
mov
inc
add
imul
xor
add
add
test
out
mov
xchg
cmp
cmp
jge
decl
scas
adc
cmpsb
clc
or
sbb
clc
js
sub
push
add
js
xchg
leave
sub
ja
sti
popf
inc
clc
mov
add
dec
sbb
mov
clc
cmp
out
xabort
or
dec
vcvtps2pd
clc
sub
add
xchg
inc
add
xor
sub
ljmp
pop
jl
mov
mov
cmp
mov
cmp
jge
insl
test
cmpsb
clc
in
cmp
push
add
cmpsb
clc
sahf
enter
add
add
lcall
clc
jbe
pop
clc
or
sub
add
jge
dec
sub
fisttpll
or
cld
cltd
push
mov
clc
fwait
pop
clc
xor
add
das
pop
sahf
inc
add
outsl
lret
cmp
and
add
xchg
in
jecxz
xchg
movsb
clc
stos
xchg
mov
lret
clc
mov
sbb
cld
flds
daa
clc
xchg
push
add
mov
clc
mov
stos
and
add
aaa
jnp
rcll
mov
leave
mov
clc
clc
test
clc
scas
push
clc
adc
cmp
add
dec
xchg
std
pop
rolb
clc
stc
push
lahf
out
js
icebp
mov
adc
add
mov
clc
popf
mov
jbe
not
in
int3
inc
add
push
jp
outsl
fadds
clc
xor
lods
sbb
clc
jle,pn
icebp
cmp
dec
jno
add
cmc
sti
in
sar
clc
and
add
and
add
clc
movsl
clc
mov
call
xor
add
clc
cmc
sar
int
sahf
sarb
push
add
adc
add
add
push
xchg
arpl
add
xchg
xor
add
add
or
pop
clc
mov
js
jl
clc
pop
sub
add
sub
dec
js
clc
test
push
clc
aas
pop
xor
add
push
adc
add
jo
add
pushf
and
out
pop
in
mov
cmpsb
clc
ljmp
jg
xchg
dec
sub
nop
insl
xor
add
inc
add
decb
clc
lods
jns
pop
inc
add
test
add
add
clc
sbb
mov
add
loopne
ret
clc
in
in
mov
fnstcw
mov
mov
clc
rolb
cmp
sub
insl
mov
in
and
repnz
inc
clc
mov
test
in
movsb
clc
scas
aas
insl
cltd
lea
clc
fstl
mov
repnz
int3
enter
push
clc
push
ja
mov
add
xor
clc
xor
push
bound
add
jne
jmp
mov
clc
mov
dec
inc
clc
cmp
add
mov
imul
data16
lahf
cmp
pop
clc
push
sbb
and
and
add
push
clc
push
add
fidivrl
add
pop
inc
clc
pop
das
addr16
sahf
data16
mov
and
add
add
clc
cli
adc
add
clc
adc
add
out
add
add
shll
clc
pop
clc
imul
jecxz
cmp
mov
clc
pop
adc
add
add
or
jg
loop
mov
push
ljmp
jo
add
jae
add
cmp
push
mov
in
push
clc
jmp
add
adc
clc
into
jecxz
repz
pop
xchg
fstp
xlat
cmpsb
clc
nop
loopne
loope
jmp
sahf
repz
enter
addr16
ja
mov
aas
sub
or
ficomps
out
pop
imul
add
pop
pusha
add
clc
mov
add
dec
loop
inc
clc
das
cmp
loope
cmp
clc
scas
xor
add
add
add
sbb
out
loop
mov
jno
add
add
das
dec
imul
add
jne
je
jno
add
mov
in
imul
adc
add
add
add
clc
and
clc
cmp
push
jmp
bound
add
lret
pop
popf
movsl
clc
jns
jno
add
shll
adc
add
in
mov
cmpsb
clc
sbb
negb
add
jbe
clc
lcall
add
clc
xabort
clc
mov
insl
es
push
in
add
add
clc
clc
imul
adc
add
add
jl
clc
xchg
push
add
in
out
add
add
or
add
int3
cltd
or
jne
clc
pop
inc
add
mov
add
test
mov
clc
sbb
mov
cmp
pop
cli
xor
push
add
push
add
movlps
add
faddl
pop
clc
push
push
add
hlt
sar
mov
clc
ljmp
pop
clc
mov
add
sub
sbb
clc
lea
rorl
add
leave
inc
add
dec
inc
add
sub
repz
add
clc
and
add
mov
add
dec
call
add
cwtl
out
clc
xbegin
in
mov
add
add
sarb
mov
lahf
cmp
es
jecxz
pop
cmc
mov
ljmp
clc
jecxz
es
ds
clc
cmp
add
xchg
shlb
add
push
add
shr
push
clc
xchg
addr16
gs
sub
push
add
mov
clc
insl
lea
add
clc
dec
and
add
clc
xabort
clc
bound
add
xbegin
iret
imul
clc
sarl
pop
clc
push
fwait
sub
pop
mov
add
and
aaa
inc
clc
adc
lret
rol
clc
and
add
clc
xchg
mov
clc
insb
mov
lock
xabort
mov
add
fs
xchg
lock
mov
clc
addr16
xor
sar
clc
inc
add
add
add
add
in
cmp
add
add
mov
jno
add
out
jo
add
add
add
pushf
ret
clc
xchg
popa
add
add
test
or
data16
ficoml
clc
mov
cmp
pop
mov
ret
fidivl
add
movsb
clc
lahf
pop
repz
xor
inc
add
int3
movsl
clc
sbb
mov
add
call
clc
out
gs
js
xchg
stc
daa
clc
push
clc
lret
lcall
or
clc
ljmp
inc
clc
sbb
sti
out
mov
push
cmp
adc
add
or
add
clc
push
movsl
clc
mov
pop
clc
adc
add
and
add
call
adc
ljmp
clc
adc
add
jbe,pn
shrb
jmp
clc
adc
add
clc
mov
add
sub
add
jo
add
add
clc
cmp
clc
mov
add
add
clc
pop
cwtl
jnp
clc
pushf
inc
clc
mov
jne
push
das
shll
outsl
loopne
in
addr16
jp
lret
clc
sar
clc
nop
cmp
xchg
jno
add
jb
add
into
gs
sub
clc
mov
gs
push
jns
clc
xchg
xchg
aas
ja
data16
pop
lret
push
add
cmpsb
clc
jmp
popf
movsb
clc
aam
clc
sahf
dec
imul
add
clc
vzeroupper
push
fbld
add
in
cmp
add
cmc
leave
pop
push
mov
jbe
clc
mov
clc
lock
out
fisttps
loope
pop
clc
pop
lock
sahf
fwait
call
add
leave
rclb
clc
xbegin
add
xbegin
mov
test
clc
imul
add
push
mov
clc
leave
loop
je
dec
pop
fs
sar
outsb
mov
cmp
mov
mov
add
shlb
add
in
lret
adc
add
cmp
mov
hlt
shrb
sub
add
pop
incb
cmp
add
es
out
faddp
clc
loop
lcall
cmpsb
clc
push
aad
mov
pop
clc
and
mov
in
adc
add
clc
lret
imul
add
imul
clc
fcoml
add
popa
add
or
fidivs
inc
add
fs
pop
push
add
dec
daa
clc
jae
add
clc
dec
inc
add
and
add
inc
add
mov
clc
leave
adc
mov
sahf
clc
push
cltd
or
xor
dec
inc
add
sub
sub
pop
adc
add
xbegin
jg
mov
dec
push
add
out
bound
add
clc
push
test
mov
insl
lret
push
add
push
and
add
clc
sbb
mov
xchg
in
push
or
add
cmp
popf
sahf
mov
add
fnstsw
cmp
clc
mov
add
cmp
loope
xor
fwait
mov
push
clc
xor
add
push
mov
mov
clc
fdivs
add
in
hlt
pop
adc
add
aam
loopne
sti
popa
add
pop
rcrb
mov
data16
daa
clc
out
cmp
add
inc
clc
enter
sub
xor
adc
add
jne
sar
clc
leave
push
xabort
push
clc
dec
mov
add
mov
int3
mov
movsb
clc
fnstenv
xchg
lods
mov
ffree
clc
test
sar
or
dec
inc
add
xor
add
cmpsb
clc
inc
add
inc
clc
js
sbb
sar
loop
cmpsb
clc
push
adc
lret
clc
and
add
or
cmp
aaa
sar
and
add
cltd
inc
add
test
xchg
cmc
mov
cmc
arpl
add
clc
decb
cmc
xor
add
adc
hlt
xor
add
iret
mov
sbb
add
dec
jl
sahf
xchg
or
pop
in
scas
adc
add
xchg
xor
icebp
arpl
add
add
add
add
cmp
push
scas
mov
sub
dec
inc
add
rol
clc
cmp
add
clc
cmp
cmpsl
clc
jle
or
aas
mulb
xchg
sahf
icebp
das
mov
pop
cld
rcrl
jl
clc
jge
jmp
clc
xor
push
add
leave
push
add
add
add
xchg
dec
and
clc
pop
inc
clc
inc
add
hlt
ljmp
lret
mov
or
or
clc
lahf
mov
clc
or
aad
arpl
add
jns
hlt
mov
aam
cmp
or
jg
mov
sub
clc
ljmp
ljmp
mov
jns
aas
jecxz
inc
add
bound
add
add
fstp
daa
clc
sbb
enter
lods
push
mov
jae
add
outsb
adc
add
cmp
add
add
or
cmp
add
nop
shlb
add
mov
jl
add
inc
add
sbb
shrl
mov
add
popa
add
lods
loope
jo
add
add
xchg
fldenv
add
sub
repnz
out
jmp
clc
dec
lods
xchg
mov
lret
or
cld
repnz
int3
mov
clc
in
inc
add
sbb
gs
test
or
mov
add
mov
jo
add
mov
clc
js
clc
push
cs
call
add
push
add
mov
xchg
aam
addr16
mov
inc
add
xchg
inc
add
mov
fcomi
mov
aas
inc
clc
pusha
add
xlat
push
arpl
add
clc
cs
mov
push
add
es
ret
clc
cmpsb
clc
sar
add
inc
add
sbb
push
and
add
ljmp
add
pop
stos
mov
in
pushf
mov
and
add
enter
clc
insl
test
clc
or
ds
clc
jmp
inc
clc
imul
clc
xor
add
add
sub
mov
call
icebp
add
pop
clc
psubq
fs
xchg
mov
xabort
push
add
adc
add
clc
pop
adc
add
fcmovb
clc
pop
dec
fwait
add
add
add
int
clc
dec
int3
data16
mov
adc
enter
adc
add
jbe
lcall
mov
jecxz
cmp
and
clc
fcoml
add
mov
jp
shl
ja
add
out
jo
add
clc
jo
add
clc
pop
clc
add
lret
cmp
sub
ret
jno
add
mov
add
add
test
mov
dec
sub
add
mov
cmpsl
clc
ficompl
add
clc
add
add
cltd
cmp
push
sbb
clc
aaa
jp
fsubs
add
mov
sbb
clc
hlt
fnstenv
fldl
lahf
jmp
clc
pop
into
xchg
jmp
xchg
add
fucomip
xabort
mov
lods
leave
enter
clc
loopne
dec
outsl
in
cmp
pop
das
nop
fisttpll
cmp
icebp
dec
sbb
xchg
test
fdivrl
imul
pushf
data16
in
es
add
gs
ret
clc
add
add
dec
sub
sub
add
push
clc
lea
clc
icebp
jecxz
jnp
adc
add
mov
jbe
inc
add
pop
ret
clc
jmp
push
div
mov
add
sbb
add
rcrb
data16
repnz
aas
add
add
and
add
mov
mov
aad
fimull
sbb
jmp
add
push
mov
push
xchg
jns
ret
clc
add
add
clc
sub
clc
and
add
cmp
add
popa
add
pop
clc
mov
jmp
clc
push
add
sbb
add
mov
or
add
or
js
add
xchg
or
imul
pop
or
mov
cld
jmp
loopne
inc
add
inc
clc
cmp
faddp
clc
mov
inc
clc
jne
clc
pop
and
add
mov
clc
fists
sub
lahf
je
jge
clc
xor
dec
cmp
jno
add
jne
xchg
stos
xor
add
clc
clc
and
add
add
add
lret
pop
lcall
add
out
test
cmc
xlat
shrl
cmp
add
or
int3
mov
add
push
clc
push
mov
add
mov
add
jg
es
mull
inc
clc
xchg
js
cmp
clc
iret
fdivl
xchg
cmpsb
clc
add
add
pop
sub
clc
mov
in
jle
clc
sahf
mov
mov
std
sbb
clc
dec
enter
fidivrl
insl
filds
add
ret
sub
xor
clc
inc
add
aas
xabort
clc
testl
outsl
mov
add
add
xor
pushf
scas
lahf
push
clc
push
cmp
ds
movsl
clc
add
add
add
add
add
rolb
push
mov
push
or
dec
neg
mov
clc
dec
sar
std
xchg
lea
repz
push
loopne
xchg
mov
sbb
push
iret
cwtl
mov
add
clc
cld
aad
bound
add
push
cmp
sarl
push
cmp
or
clc
mov
adc
add
cmp
clc
cltd
hlt
out
enter
clc
mov
xchg
lea
into
pop
jge
nop
push
data16
xchg
pusha
add
jp
mov
add
jno
add
ror
fwait
bound
add
clc
popf
jnp
sub
mov
xchg
das
xor
add
add
mov
lahf
loopne
mov
or
add
sbb
mov
das
movsl
clc
fbld
dec
stos
push
mov
cmp
adc
add
mov
sbb
cmp
dec
and
add
or
cli
push
and
sbb
pop
popa
add
cmc
or
data16
es
mov
ja
pusha
add
inc
add
ror
push
clc
pop
mov
int3
sbb
inc
clc
pushf
sarb
and
add
add
jo
add
clc
cmovnp
lea
movlps
add
clc
dec
sub
add
lahf
add
add
push
mov
cs
clc
lret
add
fldenv
add
cld
in
cmp
scas
inc
add
out
scas
cmp
clc
sti
cwtl
xchg
jge
push
clc
mov
or
aam
pop
lods
idivl
iret
jns
mov
mov
mov
in
cli
jns
clc
cmc
xchg
xchg
into
jo
add
xchg
lods
push
add
jg
dec
out
movsl
clc
outsb
xchg
or
add
add
mov
je
xchg
push
add
jo
add
loope
outsl
cmp
loopne
pop
push
and
add
pop
cmp
imul
stos
pop
mov
or
add
hlt
fs
add
sar
clc
push
repz
fnsave
mov
clc
imul
aad
clc
leave
sbb
mov
xor
add
add
xor
add
push
clc
test
pop
cmp
add
pop
test
dec
cwtl
cmp
add
hlt
or
shlb
lcall
loopne
pusha
add
in
sub
fwait
sbb
clc
sbb
sbb
adc
add
clc
js
clc
cmp
popf
out
dec
repz
push
lods
jg
mov
cmp
clc
enter
xor
add
add
stc
jbe
popf
mov
cmp
clc
enter
xor
add
into
mov
clc
push
outsl
pop
and
add
gs
xlat
add
add
add
fdivrl
add
jae
add
push
dec
cmp
fcompl
adc
add
add
sub
pop
clc
jg
repnz
int3
xbegin
mov
xchg
jmp
clc
outsb
pusha
add
add
add
add
mov
fs
mov
lret
add
mov
push
sub
int3
aad
clc
mov
mov
mov
aaa
rcrb
add
aaa
xlat
test
mov
aaa
decl
clc
dec
jge
sub
jb
add
clc
mov
push
add
or
add
cmp
out
enter
js
dec
or
adc
add
mov
clc
inc
add
mov
loopne
imul
dec
popa
add
xor
clc
cmp
add
imul
out
in
cmc
mov
mov
sub
clc
aad
jbe
add
mull
mov
clc
sub
clc
sub
add
jle
mov
orps
frstor
jle
xchg
icebp
cltd
cmpsb
clc
ret
clc
push
jns
jp
jmp
add
dec
int
or
stos
pop
cmp
psllq
add
dec
dec
lahf
cmp
add
daa
clc
dec
lock
dec
pop
or
add
add
add
add
or
add
in
xchg
icebp
dec
inc
add
out
and
add
add
clc
jg
and
add
fmull
mov
fidivrl
mov
clc
imul
add
push
dec
jl
clc
mov
clc
aas
xchg
loop
mov
lcall
clc
sub
inc
add
sarb
add
cmp
dec
cmp
xchg
js
in
mov
stc
data16
lahf
test
mov
out
testl
ret
xor
add
and
add
out
mov
dec
loop
sub
clc
mov
clc
xor
add
push
leave
mov
testl
clc
fcomps
push
add
dec
mov
hlt
filds
rcr
xchg
shrl
fsubs
jnp
pop
lahf
xchg
fsubr
aaa
seto
push
or
ljmp
iret
dec
imul
rcrb
test
dec
sldt
add
pop
xor
clc
fimull
add
sbb
insl
outsl
jns
clc
push
fnstenv
sti
push
sub
sar
xchg
enter
xchg
decb
add
add
sub
mov
push
add
icebp
jne
add
push
add
cwtl
aad
cs
mov
aad
add
cmp
mov
clc
pop
clc
out
shrb
pop
xchg
enter
and
add
add
ret
xchg
dec
fiadds
add
es
or
jle
sub
and
jae
add
clc
fimull
clc
dec
xor
add
jmp
clc
mov
in
pop
cmp
inc
clc
sub
rclb
add
sbb
test
xlat
test
movsl
clc
cmp
mov
adc
dec
leave
notl
mov
bnd
add
sbb
adc
add
jo
add
shr
fs
inc
add
xor
add
push
add
jmp
ret
clc
rep
mov
add
rclb
add
scas
dec
insl
cs
add
loopne
jle
push
clc
daa
clc
fimuls
cld
pop
out
sbb
inc
add
jecxz
test
sbb
sub
clc
xchg
pop
sahf
gs
push
dec
pmulhuw
mov
add
add
dec
jmp
add
and
xor
add
movsl
clc
bound
add
repz
mov
mov
jge
clc
adc
add
movsl
clc
inc
clc
mov
mov
mov
cmp
add
clc
push
clc
jecxz
xchg
fsts
add
pop
aam
sbb
clc
pusha
add
or
clc
jp
clc
dec
sub
xchg
outsl
mov
sub
dec
cltd
lret
add
add
adc
add
pop
sub
imull
sbb
or
xchg
data16
cld
jl
push
leave
pop
stos
outsb
pop
test
jg
stos
out
repz
add
xor
add
add
jl
clc
addr16
push
and
add
clc
negb
sbb
xor
mov
xor
xor
add
add
flds
xor
mov
mov
repnz
add
cmp
scas
ficoml
adc
add
dec
sub
push
popa
add
jbe
or
clc
out
mov
add
push
mov
cmp
mov
clc
in
pop
mov
add
lods
add
pop
sarl
add
add
clc
test
stos
cmp
mov
clc
movsb
clc
push
add
xor
add
clc
stos
push
mov
add
add
loop
xchg
pop
test
jg
dec
pushf
mov
inc
add
pop
ja
mov
clc
add
add
std
xchg
pop
hlt
jmp
mov
icebp
jl
dec
std
cmp
daa
clc
shlb
add
imul
loope
cmp
lret
clc
push
sub
clc
mov
pushf
adc
add
jb
add
xchg
adc
add
xabort
mov
push
mov
add
pushf
test
mov
cs
clc
jecxz
jle
xor
add
clc
roll
add
je
mov
sbb
insl
mov
xlat
mov
scas
lret
lods
jmp
fcomp
dec
xabort
and
pusha
add
shrb
in
or
sbb
fisubl
je
clc
jo
add
lock
add
mov
push
add
data16
fcoml
imul
add
enter
cmp
inc
add
dec
in
mov
movsl
clc
add
add
add
pop
sar
cli
mov
cmp
loopne
xchg
inc
clc
out
es
mov
cmp
in
cmp
add
xbegin
sar
push
cmp
add
and
add
xchg
xchg
loopne
jbe
push
clc
push
in
sbb
clc
sbb
add
cmp
iret
adc
add
clc
ror
jecxz
xor
add
and
sub
repnz
sub
clc
jo
add
add
ss
add
fmuls
clc
cmp
add
aaa
scas
jae
add
loopne
loopne
sub
sub
test
loope
mov
mov
dec
jns
cmpsb
clc
rorb
fucompp
adc
add
clc
push
es
in
add
add
cmp
cmpsl
clc
push
adc
add
add
fisubrl
adc
xchg
inc
clc
push
or
divb
fsubl
add
ficomps
clc
sbb
cld
and
add
inc
clc
jns
iret
jno,pt
add
sub
mov
add
add
add
fnstenv
add
push
dec
mov
cli
pop
jge
dec
add
loope
dec
call
sub
clc
imul
hlt
idivl
add
sbb
push
pop
clc
and
add
clc
fnstenv
add
xor
testl
add
push
clc
xor
add
clc
into
lahf
cmp
adc
add
mov
add
setne
push
mov
add
add
addr16
loop
daa
clc
xchg
pop
fbstp
add
jle
add
push
clc
out
scas
dec
pop
mov
repz
add
hlt
movsl
clc
out
in
mov
jmp
add
and
add
lahf
fisubrl
clc
sar
mov
and
add
bound
add
dec
arpl
add
clc
lahf
popa
add
in
cmpsl
clc
xchg
jmp
pusha
add
cmpsb
clc
pop
sub
and
xabort
int3
addr16
xor
add
mov
sbb
stos
cmp
mov
mov
cli
push
clc
popa
add
jo
add
mov
adc
add
ds
add
cli
mov
adc
pusha
add
dec
shl
push
push
ljmp
roll
add
sbb
clc
sub
lock
add
add
sar
in
leave
dec
cli
into
dec
gs
adc
add
add
sbb
xor
add
cmp
clc
and
fs
xbegin
jp
out
outsb
pop
pop
cmpsl
clc
adc
clc
mov
clc
cmpsb
clc
lahf
fs
roll
into
int
xor
add
add
test
clc
sar
scas
repz
es
and
add
add
and
add
add
add
xor
add
sahf
xchg
or
adc
add
add
add
ja
mov
xchg
sti
fs
sar
add
add
add
and
add
add
adc
add
add
add
scas
fbld
add
sub
clc
xor
add
cmpsl
clc
xor
add
clc
push
add
idivl
cmp
push
add
nop
mov
jmp
mov
lods
in
gs
inc
add
in
and
add
jo
add
push
insl
jmp
clc
and
add
sbb
inc
clc
jecxz
movsb
clc
cwtl
cld
in
cmp
add
adc
add
clc
jl
sti
fs
out
sub
push
mov
add
fs
add
add
xchg
pop
popf
enter
iret
and
adc
add
sbb
clc
jl
mov
fstps
cmpsb
clc
and
loopne
mov
clc
sti
pop
pop
cmp
xchg
fstpl
clc
stos
adc
add
mov
ss
xor
pop
xor
add
push
mov
or
sbb
cld
mov
mov
pop
add
add
clc
xor
mov
addr16
and
loope
add
add
pop
clc
dec
jb
add
add
dec
and
add
jno
add
clc
jmp
add
push
mov
clc
jno
add
xor
add
lods
xchg
pop
int
add
cli
lahf
cmp
clc
xchg
je
clc
mov
int3
leave
ret
ds
stos
repz
add
or
sub
mov
cmp
add
clc
nop
gs
inc
clc
xbegin
out
or
clc
push
xor
add
add
inc
clc
add
cmp
push
add
cli
int3
inc
clc
es
sbb
fisubrs
cmp
clc
sub
inc
clc
jae
add
std
cs
popf
xchg
incl
clc
sarl
jnp
add
push
push
js
add
jmp
mov
out
popa
add
lods
jne
adc
clc
mov
xor
add
add
inc
clc
and
in
push
mov
add
pop
data16
in
cwtl
insb
push
icebp
push
sbb
add
dec
cmp
test
popf
cmp
lret
aaa
mov
xbegin
loopne
jg
int
popa
add
mov
sub
push
call
push
add
dec
pop
movsb
clc
or
push
add
lret
sbb
lea
add
out
loopne
out
dec
in
push
cmp
add
loopne
jo
add
add
ljmp
out
iret
pop
fcomps
xor
add
clc
ss
clc
pop
clc
push
add
popf
icebp
mov
sbb
clc
add
add
mov
cmp
test
and
add
add
fucomi
push
sub
fimull
sub
jae
add
jge
loopne
and
add
idivb
clc
hlt
aaa
mov
push
fidivs
dec
movsl
clc
add
add
roll
add
jb
add
xchg
lock
add
fisubrl
cmp
add
jge
cmp
pop
push
add
data16
jae
add
pusha
add
xchg
mov
int3
jo
add
add
clc
jge
pop
pop
adc
add
adc
add
clc
mov
sub
clc
xchg
ret
clc
outsl
jbe
pushf
sub
xchg
out
cmp
adc
add
sub
clc
mov
clc
or
clc
aam
add
aam
xchg
stos
cmp
add
stos
cmp
clc
mov
clc
bnd
aaa
push
add
mov
enter
jp
aaa
rclb
add
out
cmp
add
mov
add
call
addr16
enter
or
clc
bound
add
add
xchg
push
adc
add
es
sbb
pop
or
repz
inc
add
xchg
mov
sahf
mov
clc
std
lret
mov
jmp
sbb
clc
fidivrs
adc
add
or
pop
inc
clc
mov
add
push
xchg
aas
dec
dec
pop
iret
nop
std
mov
idiv
or
sbb
clc
cmp
mov
mov
clc
dec
mov
addr16
cmpsl
clc
or
sbb
add
clc
mov
dec
push
mov
dec
push
fisttpll
inc
add
daa
clc
cmpsb
clc
xor
add
clc
push
add
ds
inc
add
mov
clc
sahf
out
adc
xlat
push
add
sub
dec
or
xor
lret
scas
std
scas
inc
clc
inc
clc
js
in
rclb
cmp
clc
insb
sub
add
jle
push
cli
mov
add
xor
fisttpll
clc
adc
add
lock
test
jnp
pop
in
cmp
mov
jecxz
dec
mov
shr
sbb
sahf
shlb
adc
add
add
and
add
call
clc
sti
push
jno
add
and
add
sar
clc
cmp
sub
add
es
push
into
roll
add
ud0
ficoms
inc
clc
push
add
xor
in
iret
mov
add
jle
jo
add
clc
mov
clc
or
add
inc
clc
stos
fnsave
add
cmp
scas
data16
fldenv
add
pushf
sahf
es
test
icebp
dec
jb
add
mov
add
js
fisubrs
add
adc
sub
je
add
push
adc
add
ja
repz
clc
pop
clc
mov
out
lock
add
repnz
pop
xor
add
mov
clc
xchg
dec
loope
aaa
lret
clc
inc
clc
adc
add
add
add
clc
jg
sub
clc
pop
inc
add
inc
clc
or
fcomps
cltd
vaddps
sti
push
add
jb
add
inc
clc
daa
clc
mov
cld
push
mov
insb
stc
fmulp
idivl
pop
and
add
clc
sbb
pop
sbb
comiss
dec
cmp
jb
add
sbb
add
add
add
cld
stos
fistps
dec
sbb
add
mov
clc
inc
clc
psadbw
ljmp
add
adc
add
cmp
sbb
clc
push
push
push
clc
mov
add
cmc
sbb
hlt
xchg
xchg
jecxz
dec
xchg
push
add
fmull
jge
cld
test
add
cmp
clc
jge
pop
pop
inc
add
and
add
add
mov
popf
dec
xbegin
xor
add
add
mov
mov
xor
add
shll
cmp
fst
sbb
clc
stos
aam
decl
movntq
out
cmp
clc
sbb
cmp
and
jnp
sti
dec
xabort
add
sub
clc
add
add
push
arpl
add
ret
fisttps
jmp
add
mov
mov
mov
add
jl
pop
out
insl
sarl
stos
stos
cmp
add
mov
scas
aam
add
push
pop
cmp
jmp
add
mov
xchg
pusha
add
or
pop
adc
mov
clc
bound
add
add
inc
clc
test
in
ds
adc
add
add
push
add
add
add
je
add
or
clc
fwait
mov
clc
js
fimull
imul
add
or
jl
clc
lods
aam
pusha
add
xbegin
clc
adc
add
fwait
lret
jmp
add
add
int
jb
add
cmp
sub
push
test
and
daa
clc
and
add
add
cs
clc
mov
sar
sar
clc
push
pop
add
add
cmp
clc
ss
add
pop
push
clc
mov
xchg
push
add
sti
jns
mov
add
mov
xchg
add
pop
pusha
add
inc
add
mov
jp
ret
clc
shl
clc
imul
xabort
xchg
seto
inc
add
outsl
int
xabort
mov
add
sub
clc
push
cltd
sbb
push
jae
add
add
push
add
xchg
xchg
xchg
xlat
cmp
cmp
clc
scas
pop
fwait
xchg
xor
add
add
cld
cmp
add
add
cltd
or
add
dec
in
or
mov
ret
clc
hlt
adc
mov
add
xchg
clc
sub
insl
add
add
and
add
loopne
push
xlat
sub
clc
lods
pop
and
add
pop
pop
movsl
clc
rcr
fimull
clc
out
testb
push
add
stos
cmp
xor
add
add
inc
clc
sub
add
dec
scas
hlt
scas
out
mov
push
add
adc
add
add
sbb
pop
clc
pop
clc
mov
insl
mov
pop
icebp
jecxz
jo
add
pop
jo
add
aad
mov
add
xchg
mov
inc
clc
leave
cmp
add
xor
add
fdivl
add
clc
addr16
xchg
ja
add
add
add
clc
jbe
or
je,pt
xor
push
inc
clc
fucomi
adc
add
inc
add
into
int3
xchg
sub
and
add
xchg
sub
add
xor
add
mov
xor
stos
jge
add
clc
fsubrl
mov
push
push
add
add
clc
imul
add
jecxz
xbegin
xor
add
jbe
clc
hlt
xchg
jle
lods
and
add
pop
adc
add
add
cld
int3
cmp
sahf
stos
push
add
push
std
adc
add
pushf
jl
roll
add
push
clc
fmulp
inc
add
adc
add
add
jno
add
lcall
xor
add
push
add
cwtl
pop
and
add
add
add
pop
xor
add
clc
jae
add
add
gs
xor
add
dec
pop
jb
add
add
shlb
xchg
add
add
sbb
mov
jmp
clc
into
sub
and
add
xor
add
clc
cwtl
call
clc
xor
add
in
leave
scas
push
fwait
ds
jge
xabort
clc
sub
clc
xbegin
and
add
jae
add
add
xchg
and
gs
jno
add
pop
add
gs
cwtl
jmp
fisttpll
movsl
clc
aaa
xor
mov
clc
push
add
aaa
jmp
cmp
add
adc
add
clc
pop
test
dec
add
lods
popa
add
sbb
clc
jg
test
clc
data16
sbb
adc
add
lcall
clc
jp
cli
xlat
mov
mov
dec
hlt
mov
add
pop
mov
clc
arpl
add
add
js
xchg
test
add
aas
xchg
int3
jnp
clc
outsb
rcr
das
aad
clc
aaa
jae
add
ret
in
fidivs
pushf
fstpl
jns
clc
sar
daa
clc
adc
add
push
add
or
clc
inc
clc
sub
clc
mov
jae
add
sar
jge
mov
int3
call
repz
inc
clc
or
sahf
clc
sar
cmp
add
mov
jp
add
clc
outsb
out
push
movsb
clc
push
adc
pop
clc
jb
add
add
xchg
fiaddl
add
and
add
pop
adc
add
add
add
pop
clc
ja
clc
xchg
xbegin
add
add
add
clc
add
add
inc
clc
mov
in
dec
stc
scas
xchg
sbb
bound
add
adc
add
jle
clc
or
and
add
into
insb
xchg
std
xor
add
adc
add
add
cs
ss
add
add
add
jmp
clc
jl
fs
cltd
sub
add
pushf
repnz
add
or
clc
sar
xchg
add
mov
out
add
add
jnp
add
lea
clc
and
add
clc
int
clc
ds
sar
clc
in
aad
xbegin
jnp
clc
ljmp
add
pop
lahf
hlt
outsb
dec
cmp
adc
add
mov
movsl
clc
and
add
clc
mov
jmp
cmp
dec
add
jo
add
fimull
lahf
in
xbegin
add
clc
lods
roll
xor
add
scas
push
shlb
leave
mov
pop
in
inc
clc
xor
add
adc
clc
xchg
aam
clc
aad
jno
add
clc
and
xor
add
or
insb
xchg
out
js
sbb
out
inc
clc
or
mov
clc
lcall
mov
add
repnz
jecxz
fstl
sar
clc
outsb
xchg
jecxz
daa
clc
pinsrw
xchg
int3
aaa
add
ljmp
mov
clc
cld
mov
adc
add
clc
insl
jge
cmpsb
clc
or
sar
std
daa
clc
scas
pop
fmul
cmpsb
clc
cmp
clc
xchg
xabort
call
mov
push
fdiv
sub
test
clc
sub
fisubrs
sahf
je
jo
add
testb
repz
adc
add
fnstsw
cmp
add
sbb
pop
scas
push
fimull
cmpsb
clc
adc
add
call
xor
vrcpps
add
jge
cmp
cli
testb
cmp
or
clc
insl
adc
lods
std
jne
inc
add
pop
xbegin
out
fcomps
add
call
mov
out
out
push
mull
add
add
int
push
add
cmc
sti
enter
clc
rcrb
xabort
pop
sub
push
aaa
cmp
and
add
clc
ljmp
cmp
clc
inc
clc
stc
add
add
clc
pop
push
jb
add
cmp
cmp
push
clc
pop
jno
add
xchg
ljmp
and
mov
push
add
add
cmp
and
add
clc
hlt
push
or
lods
aas
pop
sbb
call
ret
clc
pop
jno
add
clc
das
es
mov
jmp
clc
xor
add
sbb
dec
xor
add
add
mov
add
lods
mov
shl
cmc
pop
inc
clc
pop
clc
addr16
pop
mov
clc
xchg
xchg
mov
add
cmc
test
mov
add
stos
sbb
cmp
cmp
enter
clc
xchg
add
loopne
jg
add
sub
jae
add
lcall
lock
add
add
hlt
dec
sub
daa
clc
and
add
test
scas
mov
jbe
ficompl
mov
pop
in
stc
ss
inc
add
jle
sbb
fwait
pop
in
xabort
dec
ret
out
jp
clc
mov
ficomps
jnp
dec
add
add
mov
rorb
sar
xchg
mov
dec
lret
test
clc
and
test
clc
arpl
add
clc
pushf
sbb
inc
add
fnstcw
movsl
clc
sahf
mov
out
inc
clc
loope
xlat
ret
push
clc
pop
cmp
add
scas
adc
add
add
clc
frstor
or
add
push
clc
mov
clc
mov
add
add
adc
mov
add
add
mov
and
mov
or
sar
add
das
lret
jnp
add
add
jle
xchg
mov
xchg
repz
frstor
data16
cmc
pop
fwait
jo
add
clc
ljmp
loopne
pop
inc
clc
sub
in
fs
rol
clc
std
xor
add
add
push
add
mov
mov
clc
xor
add
add
outsb
roll
add
add
pop
testl
mov
or
xlat
dec
fisubrs
jecxz
mov
sar
mov
push
dec
icebp
adc
test
push
cmp
push
in
mov
addr16
sub
mull
add
sub
pop
cs
ljmp
clc
and
add
push
add
imul
add
ficompl
jge
clc
jne
ss
clc
push
or
add
dec
jb
add
add
fwait
rorb
lret
mov
aas
or
jo
add
xchg
mov
add
aam
xabort
xchg
sub
int3
cmp
fsubrl
add
adc
add
add
fdivrs
mov
je
sahf
xor
add
aaa
dec
ja
das
dec
cmp
mov
add
add
add
cmp
clc
pop
pop
adc
add
add
scas
xor
add
lods
push
clc
popf
jp
ret
adc
inc
add
movsl
clc
xabort
sub
push
add
jnp
movsb
clc
lock
push
push
add
je
roll
add
mov
add
in
jp
in
push
movsb
clc
test
repz
add
sar
xor
fnstcw
sub
push
and
cmpsb
clc
daa
clc
inc
add
mov
insl
mov
mov
int3
aas
xchg
adc
add
cmp
mov
inc
clc
mov
add
mov
loop
jmp
lcall
dec
loop
mov
clc
jo
add
jg
xlat
mov
mov
clc
xchg
dec
jbe
test
in
mov
clc
mov
xabort
xchg
aaa
adc
mov
push
xchg
and
add
sbb
xchg
div
push
sbb
aad
mov
sbb
incb
inc
clc
or
iret
dec
int3
test
imul
clc
scas
sbb
lods
jmp
int
cmp
jg
adc
add
add
ds
push
clc
lcall
clc
push
clc
scas
pop
and
add
out
inc
add
mov
add
sbb
dec
adc
add
test
clc
push
clc
lret
cmpsl
clc
int3
mov
mov
mov
aad
add
insb
jmp
ret
clc
xor
add
ret
clc
pop
call
inc
add
nop
pop
clc
pop
add
pop
lods
fwait
addr16
sar
mov
ret
je
add
aad
jno
add
add
ss
js
out
movsl
clc
jmp
mov
push
jbe
clc
aam
mov
xor
add
jle
inc
add
pop
sbb
clc
cmp
divb
add
popa
add
mov
or
cmp
jp
sub
cli
inc
add
dec
push
add
xabort
xbegin
lea
mov
jl
loop
int
clc
fyl2x
cli
int
dec
imul
out
fisubl
add
add
insl
lret
clc
jne
in
out
sbb
lcall
ror
idivl
adc
add
cmp
clc
pusha
add
mov
cs
imul
sar
xchg
push
add
int
add
add
add
cmp
mul
clc
inc
add
aam
xabort
add
insb
jmp
out
mov
add
dec
mov
sbb
and
add
push
add
mov
and
add
out
lret
add
add
aaa
stc
or
fst
dec
mov
sub
or
add
add
into
ret
xor
add
bswap
cmp
add
clc
clc
divl
add
insl
mov
call
jge
pop
lret
cltd
enter
inc
add
jbe
popa
add
push
add
xor
add
out
inc
add
push
add
popa
add
xor
add
mov
add
movsl
clc
xor
add
mov
movsb
clc
mov
cmp
adc
add
gs
mov
arpl
add
inc
add
fistpll
or
mov
push
add
xchg
mov
add
pop
fs
mov
add
clc
xchg
cmp
clc
mov
flds
aam
add
repnz
add
xor
add
jge
hlt
hlt
test
pop
pop
clc
ja
xor
add
fdivrs
xor
add
jle
add
adc
xchg
pop
stc
add
add
clc
cltd
fidivrs
ret
sbb
aad
int
jp
mov
or
in
sbb
xlat
shl
enter
add
or
inc
add
push
add
ja
movsb
clc
sar
or
mov
mov
inc
add
inc
clc
jmp
add
filds
add
clc
inc
add
pop
add
add
clc
aad
mov
add
jnp
add
jecxz
mov
add
add
mov
es
push
clc
enter
ljmp
lret
mov
xchg
dec
fcompl
jg
lcall
cmp
add
add
add
sub
clc
out
das
or
clc
push
iret
lret
add
lcall
jmp
add
dec
cmovae
add
pop
sar
mov
rcrb
idivl
int3
dec
xchg
stos
jle
clc
movsl
clc
sbb
outsb
sbb
push
add
xor
add
add
mov
clc
cmp
out
lea
add
add
add
cmp
and
add
add
xabort
clc
in
mov
vminps
out
mov
clc
pop
mov
leave
mov
clc
mov
dec
jg
sub
mov
sarl
xor
mov
mov
pop
clc
repnz
add
dec
or
jne
mov
add
repz
add
ljmp
pop
clc
xchg
mov
xor
add
add
fists
inc
clc
cs
xchg
cmpsl
clc
inc
add
aam
clc
adc
pop
cltd
idivl
mov
in
ljmp
add
clc
cmp
xchg
lcall
inc
add
hlt
push
clc
dec
push
sub
xchg
pop
clc
jne
nop
push
or
add
adc
add
je
cmc
inc
add
and
add
sbb
add
add
add
mov
add
clc
adc
push
or
jbe
clc
or
cmp
clc
pop
mov
inc
clc
mov
clc
and
ds
mov
sti
idivb
sbb
imul
or
add
or
out
test
scas
cwtl
repnz
sbb
fwait
mov
ja
es
xchg
out
ret
clc
aad
mov
mov
add
and
add
add
clc
popa
add
pop
jno
add
mov
clc
adc
add
hlt
xchg
pop
adc
out
mov
add
adc
rcl
jmp
push
sbb
jbe
fldenv
add
adc
xor
add
lea
add
clc
inc
add
mov
clc
mov
lcall
jno
add
add
jge
jo
add
sbb
add
add
jecxz
add
clc
sub
sub
testl
add
mov
clc
lock
xor
add
add
leave
jne
clc
push
add
jge
cmp
clc
mov
movsb
clc
push
stos
cmp
adc
add
pop
lods
mov
loopne
mov
dec
lahf
fwait
sub
adc
add
push
mov
clc
adc
add
jns
clc
out
or
cmp
clc
fisttpl
xchg
cmp
clc
sub
or
clc
pop
std
pop
clc
incb
xchg
lret
pop
or
inc
add
out
jg
add
test
pop
cmp
add
sub
pushf
jle
pop
push
aad
clc
aas
into
cwtl
push
insl
inc
clc
jbe
cld
and
into
dec
or
xchg
cmp
mov
rol
clc
mov
clc
sbb
sub
data16
int
and
add
push
mov
pop
scas
cmp
cmp
add
pop
xor
cmp
mov
or
cld
add
add
mov
and
add
pusha
add
push
pop
adc
add
sar
iret
sbb
mov
test
sub
push
clc
sti
sub
adc
popf
notl
add
inc
clc
clc
testl
push
xchg
mov
inc
add
mov
std
jp
clc
daa
clc
mov
cmp
add
mov
fisubrl
sbb
clc
mov
icebp
aas
sar
add
adc
add
fcmovbe
push
movsl
clc
cli
sbb
or
clc
xchg
xchg
push
inc
clc
dec
pop
or
popf
add
add
int
add
rcll
add
add
xchg
das
xor
add
clc
mov
cmc
mov
clc
movsb
clc
adc
add
clc
repz
scas
ljmp
jmp
aas
xchg
lret
mov
add
push
clc
pop
mov
xchg
xor
add
sarb
mov
xchg
fstpt
jge
rcrb
clc
insl
lock
pop
lret
xchg
cmpsl
clc
add
add
clc
xor
lahf
mov
dec
data16
dec
imul
clc
imull
pop
mov
std
or
stos
pop
xchg
pop
pop
test
or
add
sar
data16
shll
add
mov
int
add
jle
xchg
sar
clc
mov
clc
cld
icebp
call
pop
mov
push
fcmovnbe
cwtl
cwtl
dec
cmp
sbb
bound
add
mov
clc
bswap
mov
clc
adc
add
stc
insb
mov
jg
mov
add
clc
fidivs
add
add
add
add
push
cmp
add
or
add
clc
mov
fst
jbe
imul
popf
cltd
mov
clc
lret
clc
adc
cmp
es
sbb
pop
hlt
xchg
pop
inc
add
cmp
sbb
dec
in
pop
mov
ret
clc
sub
dec
cmp
gs
loopne
jne
dec
pop
push
add
cmp
sar
repz
xchg
pop
jno
add
add
add
mov
jecxz
and
add
clc
push
add
jo
add
bound
add
xor
add
clc
inc
clc
shrb
dec
add
add
clc
pop
wbinvd
inc
add
out
repz
xchg
cld
and
add
je
sub
add
pop
clc
pop
clc
enter
cmpsl
clc
xchg
lods
jae
add
add
xabort
clc
fstl
cmp
adc
add
xor
mov
scas
mov
xchg
xchg
aas
jl
testl
push
sub
aas
ret
add
add
das
inc
add
pop
clc
js,pn
jbe
dec
repnz
mov
clc
dec
xbegin
insl
out
or
fldt
jbe
add
add
ss
add
add
ds
ljmp
xchg
lret
ds
xor
add
or
pop
clc
clc
clc
push
add
sub
mov
cltd
jae
add
add
mov
test
cmpsb
clc
add
dec
ss
fsubrs
decl
fsubs
dec
testl
movsb
clc
fsubr
pop
adc
add
cmp
xor
add
and
add
das
test
add
adc
add
pop
das
push
mov
add
xchg
push
jl
jne
cmpsl
clc
stos
xchg
aam
add
add
add
add
lock
add
mov
clc
pushf
and
cmp
clc
xlat
call
lods
mov
add
dec
inc
add
cmp
enter
clc
adc
clc
dec
jbe
sub
jne
mov
clc
jo
add
pop
lret
mov
pop
xchg
and
add
add
mov
mov
fwait
or
add
clc
js
and
add
push
insl
add
add
add
pop
and
nop
enter
pop
cli
not
loop
fxch
or
or
gs
stos
and
add
and
add
outsb
loopne
into
mov
jecxz
das
xabort
inc
clc
fists
jb
add
movsl
clc
sub
aad
in
sbb
call
mov
inc
clc
movsb
clc
mov
ja
enter
popf
add
loopne
xchg
pusha
add
cmp
clc
xor
add
and
add
clc
data16
and
add
xchg
add
add
jmp
mov
popf
adc
add
stos
push
add
add
add
jmp
sub
cmp
add
add
add
push
sbb
out
pop
clc
repz
sbb
xchg
js
jns
clc
xchg
or
lea
in
inc
clc
mov
pop
jae
add
sbb
sbb
test
imulb
hlt
loop
mov
add
scas
fstpl
cs
mov
add
ror
sub
add
clc
push
add
jno
add
add
add
cmpsl
clc
xchg
leave
xbegin
pop
jle
xor
add
add
bswap
dec
cltd
mov
arpl
add
call
add
add
cmc
in
dec
loopne
sbb
add
pop
jecxz
jne
add
mov
pushf
cmp
movsb
clc
or
dec
popf
lret
scas
cs
mov
clc
lcall
clc
mov
jp
mov
filds
add
clc
mov
add
sbb
lea
add
add
xor
add
add
add
insl
push
add
or
cmp
add
add
std
mov
clc
push
add
lea
mov
add
lret
inc
clc
add
add
loope
negb
fidivrl
fwait
sub
clc
cmp
or
xchg
hlt
rclb
add
mov
clc
fistps
sti
ljmp
xor
xchg
loop
shll
clc
inc
add
ljmp
clc
dec
sbb
push
ss
adc
imulb
lcall
or
inc
add
pop
mov
clc
stos
push
add
mov
sbb
loope
mov
mov
lock
aam
pop
cmp
clc
test
push
mov
add
xchg
xbegin
clc
inc
clc
fs
pop
clc
and
add
mov
push
add
sbb
add
fs
imull
push
inc
add
sbb
add
pop
stos
mov
mov
pop
push
add
mov
push
add
cs
iret
cli
pop
clc
xor
add
inc
add
sub
add
outsl
cmc
dec
inc
add
lcall
clc
pop
clc
xchg
inc
add
lods
dec
cmp
call
add
push
data16
push
xor
add
push
add
lret
pushf
adc
sub
clc
xchg
and
and
add
fildl
scas
mov
mov
test
movsl
clc
push
test
cs
sub
add
xchg
ja
mov
push
sbb
clc
movsl
clc
cmp
mov
push
add
dec
insb
jle
sti
or
push
jno
add
insb
xabort
clc
sub
clc
cmp
add
adc
add
add
fs
cmc
cli
xchg
jnp
xor
test
add
pop
insl
arpl
add
sar
out
ja
iret
imul
xabort
xchg
movsl
clc
fs
packsswb
add
jo
add
ret
clc
xchg
pop
clc
and
add
clc
mov
clc
xor
pop
ss
cmp
add
mov
clc
das
dec
insl
scas
pusha
add
sub
mov
nop
push
add
ret
clc
inc
clc
inc
add
and
out
in
push
add
xbegin
lods
aam
cmp
mov
clc
push
clc
popf
popf
hlt
cmp
pushf
or
ficompl
xor
add
clc
pop
sbb
arpl
add
clc
mov
add
xchg
popf
test
add
inc
add
hlt
cmpsb
clc
pop
bound
add
add
clc
cli
flds
add
and
add
mov
inc
clc
xlat
sbb
test
cli
mov
mov
sti
cmpsl
clc
mov
add
clc
insl
lret
add
mov
or
clc
mov
add
add
clc
xchg
sar
sub
sbb
sub
pushf
jnp
cmp
clc
cmc
icebp
int3
hlt
jg
in
int
xchg
loop
adc
iret
adc
add
add
clc
mov
loope
sar
das
push
cwtl
pop
dec
adc
add
add
add
cwtl
push
cmc
stos
and
cld
xchg
add
add
addr16
jno
add
push
ss
pushl
mov
sbb
clc
lods
std
fidivrl
sub
clc
fcoms
mov
jg
cli
data16
mov
mov
jg
pop
mov
clc
sub
add
aaa
pop
lcall
add
xchg
pop
inc
add
pop
jnp
add
std
nop
cltd
cmp
xchg
insl
popa
add
adc
add
cmpsl
clc
push
add
jne
jae
add
stos
dec
mov
add
insb
stc
xchg
enter
push
mov
aad
clc
jmp
clc
sahf
out
xchg
int3
dec
movsl
clc
cli
lahf
jns
loope
inc
add
dec
cmp
clc
inc
add
sar
mov
clc
mov
mov
inc
add
pop
mov
rdseed
gs
cmp
aam
mov
lods
ret
clc
ficomps
fnsave
add
clc
xbegin
add
cmp
push
adc
jecxz
xchg
loope
pmaddwd
mov
add
add
add
adc
add
sbb
pop
and
push
clc
in
in
std
xchg
hlt
fscale
sbb
cmp
clc
repz
add
inc
clc
mov
add
inc
clc
icebp
or
ljmp
add
call
clc
cmp
inc
clc
and
mov
inc
add
xor
xor
add
dec
lea
shll
add
xlat
mov
popf
popf
gs
ss
mov
add
inc
add
mov
adc
add
clc
popa
add
rcrl
loopne
lcall
addr16
ret
clc
dec
popa
add
dec
sar
outsb
std
lock
imul
push
add
jnp
shl
add
add
add
add
mov
jns
imul
push
add
iret
xchg
addr16
scas
daa
clc
sub
iret
mov
clc
test
imul
add
inc
add
mov
add
lods
mov
add
int3
popf
xchg
repnz
add
clc
out
test
cmp
clc
repnz
daa
clc
push
add
mov
js
arpl
add
add
mov
push
add
inc
clc
fistl
add
mov
lods
leave
popa
add
pushf
cmp
dec
mov
push
cmp
add
xor
add
push
adc
add
clc
ret
clc
push
push
add
int
sub
mov
mov
xchg
shlb
js
jnp
xor
add
clc
in
lret
clc
test
pop
cli
stos
jle
cmp
cmp
dec
jecxz
shrl
jmp
push
fwait
call
jo
add
clc
iret
jns
adc
add
clc
pop
ljmp
push
jno
add
pop
jno
add
add
mov
popf
mov
add
dec
mov
xor
add
lahf
xchg
jmp
clc
pop
cmp
int3
dec
ljmp
and
add
cmp
dec
adc
add
clc
push
mov
lea
dec
push
add
dec
and
repz
jl
add
dec
js
pusha
add
dec
mov
xchg
mov
adc
add
int
inc
add
cld
xchg
sbb
push
insb
jns
lahf
adc
add
add
mov
jle
pop
pop
add
clc
pop
gs
jbe
fiaddl
clc
push
add
jg
clc
clc
dec
aad
clc
sbb
stos
test
dec
add
add
or
add
inc
add
data16
mov
xchg
fldenv
clc
inc
clc
lcall
pop
cmp
add
jg
clc
jae
add
clc
outsl
mov
xbegin
js
clc
push
imul
xchg
mov
cmpsl
clc
sbb
cmp
add
push
jae
add
jp
imul
dec
sbb
add
adc
add
and
add
dec
push
fistps
sbb
adc
fidivrl
clc
test
loop
mov
or
xchg
jecxz
pop
sbb
lods
sbb
inc
add
inc
clc
push
adc
add
add
or
add
ja
add
gs
xchg
pusha
add
or
add
add
add
cmp
bound
add
clc
lcall
and
rcrl
pop
mov
jge
push
clc
dec
add
add
add
lea
or
clc
lock
xor
add
add
add
imulb
mov
adc
add
add
leave
cmc
aaa
cmp
and
mov
imul
or
add
cltd
shlb
add
lcall
push
push
clc
cmp
add
cmp
sub
enter
xchg
test
clc
cmp
add
cli
divl
ss
bt
sub
dec
mov
fstpt
add
push
std
mov
ds
cwtl
jnp
add
sbb
sbb
addr16
ds
push
add
pop
dec
mov
fcompl
add
lods
cmp
mov
sar
stc
data16
test
clc
ret
clc
adc
fiaddl
adc
clc
imul
insb
cmc
pop
xabort
clc
js
xchg
jnp
or
clc
or
and
add
add
xchg
xor
add
add
clc
aaa
jecxz
sub
stc
ja
pop
jnp
cmp
add
lods
jp
add
bound
add
xor
add
add
mov
jns
das
dec
xchg
loope
in
in
loope
mov
mov
sub
pop
mov
cs
add
xchg
mov
xchg
xchg
cmp
clc
dec
aam
or
cwtl
iret
or
in
add
push
add
jp
jp
stc
stc
sbb
mov
fs
mov
cwtl
cmp
hlt
pop
adc
mov
mov
add
data16
push
xor
add
scas
iret
lea
and
add
add
add
iret
or
clc
add
add
inc
clc
fstl
add
enter
add
clc
in
jne
clc
pop
mov
popf
sub
jns
add
pop
leave
push
add
fwait
fs
dec
mov
xchg
aam
filds
add
fisttpl
mov
sub
movsb
clc
imul
stos
pusha
add
lahf
repz
das
arpl
add
add
mov
clc
sbb
push
add
cmpsl
clc
out
fwait
cmp
adc
add
add
clc
repnz
arpl
add
add
add
fists
aas
add
add
add
add
jne
mov
out
mov
clc
mov
dec
cmp
add
lock
dec
and
out
outsb
cmp
clc
xchg
xor
add
clc
xor
add
in
xbegin
add
mov
clc
pop
cmovns
add
inc
add
adc
cmp
push
add
xor
add
fisttpll
push
into
cmp
sbb
xor
add
inc
clc
clc
adc
add
add
gs
pop
cmpsl
clc
push
fs
cli
lcall
fistps
clc
lods
mov
xor
add
xchg
int3
sub
add
add
add
loope
jge
lods
test
mov
push
add
and
add
mov
ficompl
sbb
ror
pop
sbb
add
dec
inc
add
or
divl
add
pop
cmp
push
add
repz
add
xlat
loop
jnp
jg
pop
jae
add
clc
clc
in
fcmovnb
clc
in
outsb
lods
imul
add
lahf
imul
imul
sub
pop
hlt
xor
jae
add
add
cmp
push
lock
clc
push
jecxz
sarb
clc
ja
movsb
clc
aaa
add
add
pop
xor
add
clc
pop
repz
int3
xor
add
clc
sar
xabort
add
cmp
cs
inc
clc
out
js
mov
add
add
mov
clc
sub
clc
je
adc
repnz
pop
dec
mov
clc
ds
iret
fdivl
mov
xchg
pop
clc
pop
push
jno
add
fsubr
xor
test
dec
and
add
je
clc
loope
push
xchg
lods
pop
push
shlb
add
clc
rcrb
js
push
xabort
clc
int
clc
ss
sub
add
mov
cmp
jae
add
mov
lret
sbb
add
add
sub
cmpsb
clc
cmp
add
cld
stos
popf
cmp
repnz
imul
add
sbb
xchg
js
call
bswap
ret
clc
iret
and
lcall
inc
add
or
or
fs
jmp
enter
pop
ret
clc
jle
xor
insl
cmp
nop
mov
add
shrl
sar
insl
int3
setg
stos
inc
add
test
cmpsb
clc
out
cmp
dec
push
add
mov
add
jle
ret
clc
sar
xbegin
aaa
lcall
clc
out
test
dec
insl
dec
xor
stos
push
add
bnd
add
add
add
mov
ds
add
pop
xor
add
dec
enter
add
add
add
push
rclb
pop
sahf
jl
add
dec
or
inc
clc
in
or
add
xchg
pop
clc
in
jae
add
add
add
pop
mov
push
add
add
adc
jo
add
cli
and
jmp
cltd
pop
jl
cmp
popf
imul
add
clc
mov
daa
clc
cmpsl
clc
cli
fbld
clc
xbegin
add
add
add
push
clc
adc
add
clc
jb
add
push
xor
add
push
in
mov
add
dec
cmp
fmull
push
clc
sub
push
jp
int3
inc
clc
push
and
out
inc
clc
mov
clc
addr16
cmp
jns
and
add
add
clc
cmp
pop
lcall
mov
clc
pushf
dec
mov
loop
xor
add
adc
add
add
jne
push
add
pop
stos
ds
add
add
add
add
outsb
xor
add
lret
hlt
aaa
sbb
add
add
add
push
add
out
cltd
add
clc
cmp
sub
clc
ret
dec
rorl
fwait
jmp
clc
fdivrl
mov
cmp
popf
insl
pop
cltd
xlat
xabort
jbe
add
cmp
clc
sar
push
sbb
cld
pop
std
cmp
js
rcr
shl
jl
clc
pop
pop
mov
mov
add
sarb
clc
aam
pop
push
add
mov
mov
mov
push
clc
mov
ss
jp
dec
cmp
add
mov
push
hlt
repz
dec
cmp
ss
cmp
dec
jmp
dec
sbb
xabort
or
sub
add
cli
and
add
clc
out
repz
sbb
cmp
inc
add
cld
mov
jne
inc
clc
js
clc
rolb
clc
aad
cmpsb
clc
inc
add
int
ret
clc
and
xchg
cmovbe
knotw
sar
xchg
mov
sub
cmp
sbb
xchg
fadd
clc
rcrl
loope
bound
add
stos
data16
cmpsl
clc
aad
fs
sub
add
in
push
gs
or
pop
clc
cmp
sub
add
leave
dec
ret
clc
pop
push
in
inc
add
out
dec
movsl
clc
jae
add
jnp
add
pop
dec
mov
js
add
or
add
out
scas
cmp
add
add
and
add
cltd
ret
clc
xor
push
negb
neg
mov
in
cmc
into
lahf
pop
clc
aam
dec
mov
add
loop
mulb
clc
and
cmp
fisttpll
mov
cmp
iret
lahf
sbb
or
imul
push
push
decb
push
cmc
adc
scas
movsl
clc
outsl
push
jmp
clc
sar
clc
sbb
sar
leave
int
in
sbb
jg
sbb
clc
mov
jp
push
inc
clc
and
add
add
add
popa
add
push
sub
clc
pop
push
add
decl
int
nop
mov
clc
icebp
daa
clc
outsl
cmp
xabort
push
push
mulb
push
add
out
in
in
push
adc
bound
add
into
fwait
jge
dec
pushf
lcall
sar
cmp
add
clc
bound
add
sar
clc
sar
clc
xor
gs
loopne
xbegin
mov
mov
add
adc
add
clc
fmuls
add
daa
clc
push
out
sub
clc
xor
add
or
add
push
add
rolb
add
je
scas
nop
fs
arpl
add
push
add
fdivl
jb
add
jae
add
std
mov
add
aad
sahf
repz
data16
mov
fwait
and
cwtl
and
shrl
addr16
mov
add
mov
pop
cltd
cmp
clc
enter
add
fsubrl
loopne
sub
add
pushf
push
inc
add
gs
cmc
jne
imul
loop
cld
or
clc
jne
testb
and
rclb
add
aam
add
imul
lea
or
pop
push
add
cs
push
cmpsl
clc
ja
clc
push
add
push
inc
clc
outsb
add
mov
cmp
insl
cmp
clc
loope
dec
and
xchg
insb
add
add
mov
mov
stos
clc
adc
add
add
add
add
add
add
das
lods
jns
xlat
bound
add
mov
clc
mov
daa
clc
push
shl
clc
insl
bound
add
clc
push
add
pop
out
lret
and
clc
js
rcl
ljmp
jge
adc
add
sti
out
pusha
add
sub
sbb
int
cmpsl
clc
es
int3
jg
dec
test
xchg
sub
add
dec
ds
adc
add
imul
dec
mov
clc
test
jnp
clc
jo
add
xlat
arpl
add
stos
sbb
out
xchg
sub
add
sti
clc
inc
clc
xchg
repz
pop
clc
lock
add
mov
add
out
clc
push
mov
add
lret
xchg
jmp
add
nop
push
mov
add
movsl
clc
in
mov
fs
test
clc
xchg
mov
stc
mov
xchg
xchg
mov
add
shlb
add
clc
ljmp
pop
jns
add
jno,pn
add
mov
data16
test
add
add
add
cli
loopne
shl
adc
jno
add
push
add
or
xchg
cli
push
add
xor
add
out
data16
jp
scas
push
push
clc
in
push
lahf
adc
pop
clc
arpl
add
sub
dec
clc
lcall
scas
out
mov
add
add
into
inc
add
pushf
cmp
jbe
add
adc
and
mov
imul
sar
ss
outsl
jnp
clc
mov
clc
adc
add
clc
inc
clc
data16
mov
clc
ror
js
pop
adc
clc
add
add
arpl
add
clc
rorb
jg
cmp
add
das
pop
mov
add
cmpsl
clc
and
jge
das
mov
inc
clc
xchg
ficoms
ja
inc
clc
ret
clc
xchg
xchg
clc
mov
cmpsl
clc
sub
cld
mov
cmpsl
clc
push
clc
cld
mov
add
loopne
jmp
add
shrl
clc
sti
sar
clc
xchg
xchg
mov
and
data16
fisubrs
lahf
addr16
cmp
jg
push
out
test
mov
movsl
clc
lahf
lret
fcmovbe
repnz
stos
sub
aam
mov
lods
or
add
add
add
add
add
flds
add
sar
bound
add
imul
push
clc
and
add
mov
cmp
mov
mov
xlat
out
cmpsl
clc
inc
add
dec
pop
jne
add
pop
pop
inc
add
mov
add
xchg
jno
add
clc
imul
clc
jnp
add
js
jecxz
add
add
sub
test
loopne
fs
out
push
sti
xchg
cli
push
add
inc
add
pop
jae
add
iret
dec
lock
clc
mov
jge
out
jo
add
jmp
xchg
hlt
pusha
add
aas
and
add
add
clc
mov
out
mov
adc
add
clc
xor
add
mov
xchg
sbb
push
jns
push
adc
add
arpl
add
mov
clc
xchg
adc
add
pop
pop
nop
or
fmuls
add
into
lock
xchg
pusha
add
push
add
jmp
mov
popf
je
clc
outsb
push
add
mov
xor
in
lahf
jle
add
add
add
bound
add
add
mov
pop
push
lahf
mov
cmp
clc
daa
clc
dec
xchg
insb
cld
mov
add
pop
and
test
sahf
inc
add
add
and
clc
jmp
sar
pop
xor
add
add
add
fisttpll
hlt
push
add
loope
pop
or
add
sub
dec
fsubr
loop
sub
clc
pusha
add
adc
add
add
add
enter
inc
add
pop
push
cmp
push
clc
dec
inc
clc
icebp
out
ss
inc
add
xbegin
clc
aam
loopne
out
cmp
fstps
clc
xchg
push
add
add
int
popa
add
jl
clc
jbe
in
mov
sbb
or
jecxz
testl
adc
add
mov
clc
push
sub
add
push
inc
clc
add
add
clc
sbb
jg
cmp
clc
xor
add
jl
push
sbb
lea
clc
mov
movsb
clc
dec
das
int
clc
xchg
fstpt
add
jae
add
mov
xor
add
loope
jle
clc
test
into
cmp
cmp
popa
add
sar
dec
ljmp
clc
cmpsb
clc
push
adc
add
add
add
scas
jl
clc
jnp
cmp
outsl
insl
inc
clc
out
pop
sub
lret
and
rclb
sub
sub
clc
xchg
movsl
clc
jne
jnp
clc
clc
stos
lods
scas
add
add
pop
or
daa
clc
or
xchg
dec
jo
add
dec
add
add
mov
enter
mov
aaa
mov
sbb
pop
jl
ffreep
clc
mov
cmp
shll
add
jno
add
add
or
cmp
sar
add
add
xchg
sar
dec
jns
clc
jl
arpl
add
sub
add
mov
xor
add
std
adc
add
push
xlat
mov
gs
mov
mov
clc
enter
out
outsb
in
adc
add
lret
clc
mov
jecxz
jo
add
clc
pop
mov
add
and
add
fwait
mov
and
add
add
popf
adc
add
add
clc
addr16
inc
add
add
add
clc
stos
aam
sbb
jbe
mov
cli
in
outsb
jo
add
clc
cmp
ret
clc
movsb
clc
cwtl
sbb
fnsave
add
inc
add
loopne
insb
faddp
clc
sub
into
cwtl
pop
pop
ficomps
icebp
and
add
int
xchg
call
inc
clc
inc
clc
into
out
adc
add
add
loopne
xchg
decl
sti
bound
add
clc
es
repnz
clc
pop
dec
xchg
hlt
incl
add
clc
xchg
or
aam
clc
lock
mov
clc
pop
sbb
clc
jge
mov
ja
dec
jmp
add
fcomps
fldenv
add
cld
jp
pushf
dec
xchg
arpl
add
inc
add
inc
add
cmp
cmp
fistpl
add
dec
stos
or
jne
scas
jae
add
and
jo
add
add
jecxz
push
clc
sar
sbb
clc
das
nop
push
add
add
add
hlt
cmp
xlat
movsb
clc
bound
add
add
insl
push
add
add
clc
in
insl
loopne
movsb
clc
mov
cmp
or
imul
push
jmp
clc
out
shrb
push
add
adc
add
loope
or
iret
add
add
clc
mov
inc
clc
push
jl
xor
or
clc
imul
add
sahf
fs
mov
hlt
xor
add
add
push
dec
pusha
add
pop
loop
xor
add
push
add
cmpsl
clc
push
add
push
pop
repz
clc
xchg
sbb
clc
iret
jo
add
clc
cwtl
sar
clc
push
add
or
clc
iret
pop
mov
clc
push
test
mov
add
jae
add
mov
jne
imull
dec
jnp
xchg
ja
aas
push
clc
add
jae
add
add
clc
das
dec
lret
pushf
das
inc
add
sbb
imul
xchg
jns
sahf
adc
inc
clc
mov
sub
std
push
in
or
add
dec
push
pusha
add
lret
jge
stc
in
cmc
repz
sub
jg
mov
sub
add
es
pusha
add
lcall
or
clc
jae
add
add
sub
clc
push
clc
dec
fidivs
clc
push
and
add
sub
add
add
clc
pop
jmp
sar
mov
in
cmp
clc
fldcw
pop
mov
add
insb
imul
stos
fwait
repnz
cwtl
lret
mov
pop
clc
jb
add
push
insl
cmp
push
sub
add
add
enter
pop
jne
test
aas
xchg
mov
pop
clc
ret
clc
test
add
or
je
js
pop
loopne
sti
or
sarb
das
xchg
inc
clc
dec
xchg
and
add
clc
js
xchg
scas
xchg
ret
clc
xabort
sbb
clc
lods
xor
push
add
lea
sbb
or
sub
pop
cmp
clc
mov
add
lret
clc
add
add
clc
int3
pop
push
cmp
jecxz
jp
add
sahf
cltd
push
cmp
xor
add
sbb
clc
push
clc
xlat
mov
mov
out
push
jmp
add
sti
bound
add
xchg
movsl
clc
fistl
add
aam
and
adc
add
add
push
add
add
add
mov
add
clc
mov
pop
mov
adc
scas
scas
adc
add
clc
scas
sahf
xchg
mov
add
mov
add
xchg
mov
loop
lock
mov
ret
add
add
add
scas
cmpsb
clc
xor
add
scas
jmp
clc
mov
push
clc
fistpll
sub
pushf
push
sar
clc
cs
std
pop
fldt
mov
cmp
imul
add
clc
jmp
add
add
add
clc
add
call
push
lret
and
add
add
ja
insb
cmp
push
add
xchg
bound
add
and
push
sar
mov
add
push
add
jns
xor
add
add
jg
push
std
aam
clc
jnp
sub
data16
fsubrs
clc
and
add
lcall
clc
mov
add
pop
cmc
insb
cwtl
popa
add
xor
clc
pmaxub
add
and
add
adc
add
hlt
mov
clc
bound
add
stc
loop
pop
mov
int3
mov
xor
add
test
sub
mov
clc
mov
das
das
int3
jp
xchg
loope
dec
testl
sbb
mov
add
add
add
add
or
popa
add
fstps
test
enter
clc
cmp
clc
lock
ret
clc
icebp
pop
cld
mov
add
cmp
cmp
add
icebp
mov
cmpsb
clc
cmpsl
clc
decb
ret
clc
mov
jbe
insl
sbb
add
add
clc
cmp
in
int3
mov
push
clc
scas
fbstp
add
ror
push
pop
or
add
lea
jg
lea
push
nop
ja
and
add
clc
xor
add
fs
push
add
ret
clc
adc
add
clc
lcall
pop
clc
std
mov
mov
jl
clc
pushf
gs
jne
mov
adc
add
repnz
cmp
adc
add
add
cli
dec
push
inc
add
imul
clc
pop
shrb
aaa
nop
xchg
jmp
xchg
mov
mov
ljmp
clc
addr16
mov
jb
add
int
add
jne
and
clc
mov
add
jmp
add
add
clc
nop
and
add
sarb
mov
and
popa
add
or
push
add
test
ljmp
jmp
push
add
test
enter
sti
cmp
icebp
int3
add
add
fcomps
lahf
aas
push
jno
or
add
push
add
add
sub
clc
push
or
clc
das
sub
loopne
xchg
pop
xchg
mov
clc
push
loop
fadd
clc
xor
testb
out
test
mov
lods
jo
add
push
add
adc
add
outsl
mov
test
lcall
js
add
push
and
add
clc
add
add
pop
cli
cmpsl
clc
sub
addr16
ljmp
cmp
and
add
jecxz
leave
xor
add
inc
clc
ss
add
movsl
clc
fwait
mov
xbegin
push
enter
add
add
add
add
adc
cmpsl
clc
sub
pop
xchg
and
add
add
cmpsl
clc
jnp
clc
fistpll
cmp
xor
adc
add
add
add
and
add
mov
add
add
es
push
sbb
pushf
fisttpll
clc
es
cmp
push
add
cmp
clc
xabort
xor
add
add
clc
mov
adc
call
popf
add
add
add
sub
dec
sub
xchg
js
adc
add
test
inc
clc
mov
sub
clc
adc
add
mov
inc
add
sti
icebp
adc
add
add
add
int
sub
movsb
clc
jne
stc
iret
jmp
or
pop
mov
xchg
fs
mov
clc
fucom
clc
mov
cld
or
inc
add
inc
add
inc
add
push
inc
clc
inc
add
jge
push
sbb
push
push
mov
and
add
call
mov
clc
leave
push
clc
pop
lahf
xchg
cmp
add
jo
add
add
addr16
xor
add
add
lea
cmp
ret
clc
leave
cmpsl
clc
xor
add
or
xchg
jl
clc
pop
clc
addr16
and
add
clc
sub
clc
mov
mov
test
cmpsb
clc
fsubs
gs
mov
icebp
mov
cs
mov
lcall
adc
add
mov
add
das
test
add
sub
lods
gs
and
add
sbb
lods
dec
xlat
push
loope
inc
add
int
jbe
adc
add
add
imul
cmp
clc
imul
mov
pop
dec
add
or
pop
clc
push
add
ret
add
mov
or
clc
mov
outsl
jne
aaa
mov
push
clc
fnsave
and
loope
gs
insl
mov
mov
jmp
clc
or
lret
sub
or
mov
clc
imul
sub
fs
xor
add
sub
adc
add
in
lret
fistps
rorl
mov
clc
lea
adc
add
lcall
out
cmp
mov
lods
xor
add
mov
gs
mov
cmp
or
clc
xor
xlat
lea
movsl
clc
data16
mov
add
jno
add
iret
pop
push
aas
hlt
adc
add
mov
fs
outsl
xchg
lret
sub
mov
fisubrl
clc
cmp
jbe
add
jbe
add
sub
call
add
dec
rorb
xor
add
fs
cmp
scas
mov
mov
clc
outsb
mov
add
add
clc
idivb
jp
clc
fpatan
leave
pop
clc
outsl
jnp
mov
add
clc
or
sub
clc
call
add
mov
out
fcmovnbe
fdivrs
or
lcall
mov
gs
test
clc
outsb
add
add
add
in
pushf
push
ss
ljmp
or
sar
clc
push
add
aad
lcall
jp
add
mov
pop
fwait
xchg
movsb
clc
psrld
clc
repz
ds
or
inc
add
cmp
dec
and
add
clc
xlat
stos
jbe
imul
mov
add
xchg
cld
sub
xchg
test
cmpsb
clc
sbb
dec
shr
push
clc
push
cmp
imul
clc
mov
mov
xor
test
jbe
push
cmp
add
pop
clc
xchg
cli
aad
fdivp
pop
nop
rclb
sub
add
in
popf
inc
add
fstp
stos
out
push
pop
clc
add
add
sar
and
inc
clc
push
add
push
popf
jne
sbb
fidivs
push
sarb
add
lcall
clc
mov
clc
cmpsb
clc
mull
cmp
sub
xor
add
dec
imul
clc
rorb
cmp
enter
xor
add
clc
jb
add
add
add
test
add
out
mov
clc
inc
clc
loop
popf
clc
jle
add
fnstenv
int
pop
mov
test
fistl
clc
dec
push
ss
clc
xchg
mov
sbb
sbb
shrb
clc
dec
push
add
or
inc
add
outsb
insb
add
xabort
clc
testb
testl
hlt
adc
add
fisubrs
add
add
add
pop
sub
push
cld
sti
mov
xchg
or
daa
clc
fld
clc
imul
add
add
mov
clc
mov
mov
add
push
test
loopne
adc
add
xchg
mov
test
add
enter
add
cmp
push
ds
push
push
or
lret
add
adc
add
mov
mov
mov
clc
jmp
fldenv
sub
je
xlat
das
sbb
scas
in
stos
fstl
add
add
jle
xchg
mov
sti
xbegin
clc
fidivs
lret
lods
rcr
sarl
add
add
mov
je
aaa
xor
mov
add
mov
mov
lret
sahf
or
mov
scas
aas
fisttpl
aas
pusha
add
test
mov
mov
shll
add
ret
clc
pop
scas
ret
add
int
clc
je
add
inc
clc
movsb
clc
repnz
xor
add
and
add
clc
and
add
mov
dec
add
add
cmp
dec
mov
add
and
add
add
clc
shrl
xabort
movsl
clc
scas
mov
add
sar
call
clc
pusha
add
add
add
add
jne
push
jge
cmpsb
clc
repnz
clc
inc
clc
inc
add
mov
push
add
jmp
and
add
clc
test
xlat
or
inc
add
cmp
jl
outsb
testl
clc
xabort
clc
shll
add
shrl
cmp
add
jae
add
add
sub
cmp
fildl
add
add
add
push
fsubrp
xchg
mov
cmp
add
xor
add
cmp
xor
add
cmp
mov
clc
movsl
clc
arpl
add
fcomi
lods
in
and
add
xchg
dec
mov
add
movsb
clc
push
addr16
ljmp
clc
mov
clc
notb
mov
lods
mov
add
movsl
clc
and
add
movsl
clc
leave
inc
add
cmp
jb
add
add
xor
add
jno
add
clc
cltd
out
arpl
add
and
add
js
stc
sbb
or
out
outsl
js
inc
add
sub
mov
or
addr16
stos
loop
test
imull
cmp
mov
clc
mov
jb
add
clc
adc
add
scas
xchg
hlt
cmpsb
clc
inc
clc
rcr
aad
xchg
cmp
hlt
jne
add
dec
mov
fdivrs
add
cmp
sbb
loop
repnz
mov
clc
sub
add
cmc
xor
add
test
fs
jnp
add
cmp
cmp
add
mov
jnp
pop
lret
lods
sti
mov
clc
loop
aam
lret
push
fbstp
add
bound
add
mov
clc
dec
jb
add
incl
add
adc
mov
mov
add
jecxz
je
add
jne
xchg
ficompl
add
add
clc
outsb
mov
add
mov
inc
add
scas
incb
clc
fldt
or
inc
add
adc
add
aad
clc
out
inc
clc
cmp
hlt
jg
ljmp
test
xchg
mov
clc
aaa
push
xchg
test
bound
add
icebp
push
out
mov
xabort
clc
and
add
test
out
icebp
inc
add
out
cmp
outsb
int3
xchg
mov
test
rol
clc
and
add
sbb
add
pusha
add
in
hlt
fnstsw
push
cmpsb
clc
mov
and
add
add
add
shrl
inc
add
and
add
cmp
add
adc
add
js
cltd
add
add
add
clc
add
add
add
jecxz
xor
add
aas
flds
add
ret
aaa
and
add
cmp
mov
std
mov
jle
adc
add
mov
and
add
add
push
add
fisttps
mov
jl
pop
cmc
and
add
add
and
sub
sbb
jno
add
clc
xchg
daa
clc
loopne
cmp
sbb
adc
add
pushf
out
leave
push
clc
in
js
out
js
clc
jbe
clc
mov
lods
decb
neg
repz
add
dec
mov
hlt
jl
es
das
mov
out
rol
clc
stos
cmp
test
jbe
dec
xor
add
stos
xor
in
fcomps
dec
add
add
cmpsl
clc
aaa
cmp
repz
add
pop
scas
je
clc
sub
add
fnstenv
sahf
icebp
add
popa
add
outsb
and
repnz
iret
cmp
clc
or
ss
fistpl
add
and
das
mov
add
add
or
push
ljmp
clc
daa
clc
loopne
ja
leave
cmp
leave
xchg
test
es
pop
faddp
clc
dec
add
add
sbb
xchg
adc
add
clc
das
flds
pop
xchg
pop
dec
in
fnstsw
add
push
add
shlb
clc
xchg
add
add
cwtl
pop
clc
jecxz
sarl
in
pusha
add
rcll
clc
push
dec
in
jl
add
cmp
add
add
mov
pop
dec
fincstp
roll
inc
add
xabort
call
dec
in
scas
fbstp
add
popf
insl
negl
sar
add
aaa
sbb
aas
bound
add
add
add
gs
sbb
mov
dec
xor
add
xchg
pop
inc
clc
xor
add
clc
push
lahf
aas
cs
add
ret
and
add
add
cmp
mov
test
dec
and
cmpsb
clc
jg
out
mov
out
sar
xchg
lahf
addr16
add
add
arpl
add
loop
or
push
add
ss
add
mov
push
add
xchg
inc
clc
and
or
push
clc
push
jne
clc
insb
fwait
mov
jg
and
add
xor
in
imul
sub
add
pop
xchg
sub
int3
xor
add
push
in
out
arpl
add
clc
or
nop
push
clc
fs
or
push
add
adc
add
shlb
pop
inc
add
mov
int
jae
add
add
ljmp
cmc
negb
mov
in
cmp
clc
stos
xchg
jecxz
xchg
sub
add
mov
clc
in
fwait
xchg
xabort
cmpsb
clc
fs
rep
mov
mov
xchg
fldcw
clc
aam
sbb
mov
inc
clc
sbb
add
mov
movsl
clc
test
xor
add
scas
xchg
jnp
mov
jbe
pushf
test
add
adc
add
clc
or
clc
cmp
jbe
clc
inc
clc
out
or
clc
das
scas
test
lods
xor
inc
add
add
add
mov
insl
pop
xor
add
dec
cmp
adc
add
clc
in
jne
xbegin
ret
clc
jae
add
cli
in
pop
sub
js
add
add
push
add
mov
cmp
call
clc
repnz
lret
cmp
pop
sar
pop
gs
cmp
clc
addr16
push
aaa
loopne
repnz
add
das
mov
cmp
rdpmc
add
push
sarl
add
and
popa
add
cmp
clc
jge
cwtl
push
cmp
mov
ja
lcall
clc
gs
mov
add
sub
or
mov
clc
pop
nop
clc
jnp
inc
add
gs
negl
loopne
jne
add
xchg
std
decb
lea
add
jecxz
push
add
test
clc
filds
add
push
add
cmp
rcrb
hlt
push
lret
add
add
data16
cmpsb
clc
add
add
aam
lods
scas
outsl
add
add
adc
add
clc
cmp
add
in
mov
cmp
pusha
add
pop
lahf
clc
popa
add
sub
mov
jne
jnp
jle,pn
sub
xbegin
sbb
add
mov
scas
ret
or
inc
add
arpl
add
int3
sti
dec
test
clc
sahf
push
scas
stos
cltd
out
sar
push
add
jg
lods
inc
add
pop
xchg
repz
fcomip
in
stos
dec
xor
xchg
fidivrs
fadd
clc
roll
clc
sub
add
leave
enter
push
add
cltd
aad
bound
add
add
or
mov
clc
mov
clc
push
popa
add
mov
add
clc
sbb
add
clc
int
xor
add
add
push
in
inc
add
imul
add
push
add
add
dec
into
imul
xchg
sbb
push
clc
pop
pusha
add
dec
test
clc
mov
xabort
sbb
dec
out
xor
add
add
mov
lcall
pop
mov
add
scas
test
leave
scas
mov
jo
add
xlat
add
push
add
mov
sbb
lea
add
or
add
add
add
add
add
nop
jbe
lock
and
add
add
push
test
add
fs
hlt
mov
clc
rcrb
add
mov
clc
dec
mov
dec
fsubrs
cmp
add
add
loopne
addr16
pop
cmpsl
clc
cmp
stos
mov
jae
add
clc
insb
lods
mov
clc
imul
add
sbb
xbegin
popa
add
inc
clc
xbegin
lock
pushf
aas
cmp
add
cmp
push
mov
in
hlt
pop
and
add
add
add
or
add
add
test
mov
clc
cmp
add
mov
push
push
stos
pop
out
sti
imul
adc
add
pop
out
fs
stos
add
add
clc
int3
in
mov
add
add
aam
pop
mov
bound
add
add
mov
push
pop
inc
add
das
aad
clc
test
int
out
insl
cmpsb
clc
icebp
mov
add
dec
inc
add
stos
mov
std
push
add
out
and
add
aas
cmp
js
mov
xabort
scas
inc
clc
pop
cmp
in
rcrl
ret
add
cmpsb
clc
in
mov
clc
int
add
pop
and
add
add
insl
xchg
dec
lods
sbb
enter
lods
cmp
lahf
pop
cmpsl
clc
add
mov
clc
faddp
clc
test
xor
add
push
add
mov
push
clc
and
clc
sbb
add
clc
incb
clc
push
add
and
insb
fsubr
mov
lret
add
leave
xchg
bound
add
add
ds
sti
ds
test
and
add
daa
clc
push
cmp
add
xchg
mov
lcall
pushf
sbb
xchg
fstl
add
test
dec
xabort
clc
mov
lea
adc
add
add
add
cmp
jb
add
clc
ds
cmc
jne
lret
add
cwtl
in
dec
lods
hlt
xbegin
xor
add
clc
sbb
aas
gs
fcmovnu
adc
add
add
pop
in
rol
clc
sahf
pop
push
add
sbb
cmp
clc
icebp
inc
clc
in
push
clc
lret
in
outsl
xchg
stos
lahf
pop
imul
imul
jbe
pop
dec
popa
add
fxch
das
cmpsl
clc
std
jl
in
repnz
stos
stos
push
stos
inc
add
std
dec
xor
xor
add
in
xabort
add
arpl
add
imul
add
aaa
stos
mov
mov
jne
dec
pop
shrb
addr16
xchg
add
add
icebp
ret
clc
mov
lods
jecxz
cwtl
push
popa
add
fsubs
cmp
inc
add
xchg
in
push
add
sar
add
jb
add
fsubrl
add
ja
inc
clc
imul
xchg
adc
add
inc
clc
pop
out
das
inc
clc
adc
add
es
mov
sahf
cmp
xbegin
push
add
imul
mov
fs
dec
mov
in
notl
add
mov
jl
jo
add
add
xchg
dec
or
push
pop
idiv
mov
add
aad
dec
cmp
xchg
adc
add
push
add
stos
jo
add
clc
mov
sar
dec
xchg
add
adc
clc
mov
lock
cmpsl
clc
push
ljmp
add
stos
xor
add
clc
fimuls
clc
mov
clc
mov
push
into
mov
and
add
add
ja
jnp
fnstsw
xchg
mov
cmp
clc
dec
inc
add
sar
clc
out
cmp
clc
mov
add
clc
test
movsb
clc
mov
clc
jne
xchg
mov
loopne
mov
adc
clc
and
add
aas
jae
add
loop
adc
add
clc
pop
or
insb
sub
clc
or
popa
add
jo
add
clc
fisttps
cmp
or
dec
xor
aas
clc
out
jae
add
add
push
dec
stc
adc
add
inc
clc
pushf
ret
clc
in
lahf
xchg
test
pushf
clc
push
clc
mov
clc
push
add
cmpsl
clc
push
inc
add
sbb
clc
sti
or
xchg
mov
jecxz
loope
es
pop
clc
dec
xchg
and
mov
clc
xchg
cltd
cwtl
not
inc
add
sub
cmp
inc
clc
mov
fisubs
add
adc
add
add
xor
sub
testb
mov
add
push
pop
fsubrl
clc
mov
jns
add
inc
add
movsl
clc
stc
xor
xor
adc
add
cmp
or
aaa
popa
add
adc
int3
test
movsb
clc
xor
jmp
clc
cmp
clc
mov
lret
cld
cmc
insl
and
add
pop
js
or
fdivp
xchg
push
add
cltd
cmc
xchg
mov
adc
insb
and
add
xor
add
lock
pop
mov
clc
and
add
clc
stos
test
sub
or
clc
mov
add
dec
mov
add
pop
xor
add
clc
cmc
dec
test
adc
add
or
mov
inc
add
jns
pop
xor
add
add
cwtl
rcrl
clc
mov
int3
dec
jge
cmp
js
inc
clc
add
add
add
sbb
add
jmp
mov
pop
lods
pop
mov
inc
clc
int3
push
test
add
add
stos
inc
clc
mov
add
add
lods
and
add
clc
inc
clc
cmp
add
add
clc
xchg
xchg
cltd
das
pop
sbb
add
mov
pop
cmp
clc
mov
cmp
jno
add
xchg
pop
push
add
sub
mov
aam
push
add
inc
add
cltd
nop
cli
cmpsl
clc
scas
movsl
clc
sub
pop
clc
nop
jbe
add
out
mov
push
aas
cmc
outsb
sbb
pop
inc
add
adc
dec
xchg
clc
xchg
push
mov
out
push
add
pop
pushf
mov
jns
stos
push
xchg
mov
clc
es
sar
clc
push
pop
mov
xor
mov
add
sti
xchg
aaa
push
jno
add
mov
clc
popa
add
bound
add
add
cmp
mov
xor
add
clc
pop
pop
inc
add
sub
test
and
add
shlb
add
test
outsb
scas
inc
clc
dec
mov
cmc
cmp
ss
cmp
add
test
mov
clc
sbb
aas
dec
pop
ja
sti
aam
clc
push
fs
test
clc
jle
dec
fs
clc
icebp
jp
pusha
add
push
mov
clc
cmp
clc
cmp
clc
insl
cmp
add
in
nop
cmpsb
clc
mov
mov
fmull
jmp
cmp
loop
scas
imul
jecxz
or
pop
aas
jle
ljmp
add
inc
add
sub
xchg
cmp
xor
add
add
add
cs
pop
cmp
mov
shll
add
xlat
mov
insb
cmp
das
pop
adc
add
sti
fcoml
add
outsl
ret
clc
sbb
clc
aas
jecxz
cmp
or
dec
arpl
add
and
in
push
clc
cmp
add
clc
dec
pop
inc
add
cmp
jle
fnstenv
dec
outsb
outsl
lret
cmp
push
sub
sub
cmp
fstpt
sub
add
add
hlt
and
and
add
fmuls
cld
lods
sbb
ret
clc
pop
clc
xor
pop
lahf
pop
test
mov
pusha
add
mov
add
lods
in
or
add
mov
inc
clc
rcr
arpl
add
sahf
push
add
push
rcll
add
ljmp
mov
xchg
in
jle
push
add
xchg
or
add
clc
push
outsb
fucomip
ret
clc
jbe
add
jecxz
incl
or
sub
cs
add
add
push
add
xchg
js
add
test
jle
cmp
add
sbb
mov
sbb
inc
add
iret
int
or
test
clc
and
add
sar
dec
clc
sar
in
xchg
or
aas
sar
clc
addr16
fsts
fmul
mov
add
clc
jb
add
push
gs
push
cld
add
add
jmp
xor
clc
cmp
cmpsb
clc
fs
rclb
add
mov
clc
outsb
rcll
add
adc
add
mov
mov
clc
add
clc
out
loop
mov
mov
cmp
add
pop
inc
clc
mov
testl
jle
jge
lods
into
add
add
aam
add
in
loop
jns
add
aas
mov
clc
mov
add
add
add
inc
add
push
add
adc
add
fstl
clc
mov
add
ljmp
dec
pop
imul
leave
cmp
dec
fcmovbe
pop
ja
arpl
add
clc
rolb
clc
mov
pop
sar
xor
add
clc
mov
mov
jno
add
mov
clc
bound
add
clc
pop
int3
mov
hlt
out
mov
add
fidivl
cmp
pop
mov
cmp
ror
dec
scas
dec
cli
lret
clc
outsl
outsb
or
dec
pushf
movsb
clc
in
or
clc
xor
add
lahf
cmp
add
sub
jo
add
add
movsl
clc
sbb
inc
add
and
add
add
add
add
repnz
lock
cmp
clc
sub
sbb
push
add
or
mov
push
add
into
push
add
dec
arpl
add
add
add
push
pop
push
clc
loop
es
dec
sar
xchg
aas
cmpsb
clc
push
in
pop
inc
add
insb
mov
adc
movsl
clc
xor
add
or
pop
int
mov
popf
xor
jbe
push
mov
cmc
jmp
push
sub
das
pop
insl
jnp
push
pop
je
clc
ja
jecxz
cmp
add
mov
dec
addr16
inc
clc
cmp
cmpsb
clc
mov
aad
pushf
push
add
cmp
clc
sar
sti
dec
cld
jbe
clc
data16
add
add
daa
clc
ds
cmp
clc
push
add
push
pusha
add
leave
popf
mov
mov
outsl
stos
dec
xbegin
or
fnop
in
dec
test
lret
add
insl
fwait
mov
cmp
add
test
popa
add
popa
add
out
push
ss
jo
add
sti
cmp
shlb
add
popf
sbb
cmpsb
clc
test
or
sub
stos
xchg
xor
add
mov
add
add
testb
leave
or
jnp
fiadds
mov
add
imul
clc
test
fs
mov
in
xor
add
add
add
push
imul
xor
add
clc
fs
sahf
shrl
add
push
outsb
stos
xchg
stos
mov
shlb
add
cld
push
add
in
fmuls
jae
add
sar
sahf
stos
push
lahf
mov
fadds
add
test
rcll
lea
rcrl
clc
xor
in
fwait
mov
fsubr
out
stos
cmp
add
add
ja
inc
add
cmc
mov
clc
lahf
test
mov
mov
sar
clc
fcmovb
clc
push
add
shlb
repnz
fnstenv
std
and
mov
movsl
clc
clc
push
lods
add
add
add
fistpl
ja
cld
adc
jae
add
mov
add
lock
ret
clc
cld
add
add
clc
es
ror
sbb
push
das
mov
add
shlb
aaa
and
clc
ljmp
imul
clc
xchg
pop
pop
addr16
mov
add
fnstsw
jge
add
xchg
adc
clc
pusha
add
ljmp
mov
xor
add
mov
clc
jge
inc
clc
fisubrl
inc
add
and
add
pusha
add
addr16
imul
mov
testb
add
clc
aaa
out
mov
add
je
clc
xchg
xor
add
xor
add
add
repnz
inc
clc
pop
clc
out
mov
insb
jb
add
adc
add
xchg
sahf
inc
clc
and
add
clc
mov
jecxz,pt
sahf
lea
sar
bound
add
add
incb
sub
call
add
sub
int
fisttpll
add
add
out
loope
in
sub
daa
clc
or
add
clc
mov
push
add
lret
clc
in
movsl
clc
and
movsb
clc
mov
stos
sar
jnp
cmpsb
clc
inc
clc
pop
pop
mov
into
sahf
ja
clc
jnp
mov
mov
mov
clc
leave
dec
out
clc
push
sub
add
das
es
xchg
mov
test
inc
clc
mov
mov
and
fwait
mov
add
dec
data16
mov
push
add
lret
lea
loope
sub
clc
pop
sahf
mov
sbb
add
add
and
add
clc
cmp
add
xor
add
add
xchg
stc
scas
mov
cmpsb
clc
sbb
int
clc
pushf
ja
xchg
dec
sar
sbb
lock
mov
popa
add
push
add
ss
lods
add
jmp
cmc
in
popa
add
cli
in
in
xchg
pop
in
dec
mov
sbb
testl
es
in
inc
add
lock
int
clc
mov
stos
inc
clc
iret
loop
jno
add
add
loopne
dec
bound
add
movsl
clc
in
cmp
sbb
lods
pusha
add
pop
xchg
cmp
sar
sub
clc
shr
lahf
push
clc
es
sub
jge
pop
mov
add
sbb
cmp
mov
clc
dec
mov
clc
fdivrl
mov
add
dec
fcoml
add
jl
and
add
rcr
push
add
sahf
loopne
aad
add
fdivrs
clc
dec
xor
add
clc
repnz
add
push
add
or
add
add
sbb
add
addr16
imul
clc
jbe
loope
add
imul
mov
mov
mov
lret
test
xchg
or
clc
mov
add
gs
rcll
mov
add
cltd
movsl
clc
out
mov
sbb
bound
add
adc
add
xchg
enter
iret
adc
add
xchg
xor
add
jle
clc
hlt
stc
fsub
clc
pop
out
xchg
ret
clc
mov
sarb
lods
in
leave
or
add
push
xabort
hlt
sub
add
shlb
mov
add
popf
in
mov
mov
sub
shrl
sahf
ret
clc
sti
xor
add
clc
pop
adc
add
data16
outsb
sar
cmp
hlt
xchg
and
repz
and
add
add
xchg
inc
add
popa
add
hlt
add
aas
cmp
add
xabort
add
pop
insl
mov
add
shl
gs
or
jnp
clc
xor
add
clc
addr16
jge
clc
ds
call
add
jb
add
icebp
sar
add
popf
xor
add
clc
lods
jg
clc
dec
mov
divl
add
lret
add
add
mov
cmp
xor
add
fiadds
sub
mov
jg
clc
pushf
sub
adc
add
add
outsb
clc
mov
cli
js
inc
add
cmp
clc
out
scas
xlat
movsb
clc
push
sbb
add
sub
adc
add
cmc
jecxz
pusha
add
xor
add
sbb
jp
or
clc
xabort
clc
test
cmpsl
clc
sub
or
cmp
clc
push
mov
and
add
sbb
imulb
cwtl
inc
add
mov
fnstcw
aaa
push
mov
add
in
jp
push
mov
loope
mov
arpl
add
cmp
add
lret
add
add
or
clc
in
inc
add
jl
clc
test
insl
inc
add
inc
add
push
add
es
adc
add
mov
gs
xor
mov
jo
add
in
cwtl
add
aad
mov
pop
or
clc
sarb
add
add
add
pop
cli
rorl
fs
imul
clc
cld
jnp
pop
dec
add
add
sub
imul
add
clc
dec
icebp
xor
add
add
ss
repnz
add
out
xor
add
add
jnp
out
out
push
insb
ljmp
fdivr
bound
add
ficoml
add
push
mov
loop
xor
add
add
mov
rcll
add
sbb
add
add
pop
in
fdivrs
clc
mov
pop
push
clc
roll
clc
sar
stos
mov
clc
pushf
lea
loopne
dec
pop
out
push
add
fnstsw
push
jns
add
cs
clc
mov
inc
clc
lret
jo
add
idivl
insl
adc
add
push
mov
sarb
fsubrl
push
stos
mov
clc
insb
push
add
aam
sub
clc
negl
mov
pop
sbb
pop
add
add
movsl
clc
xlat
cli
repz
nop
xabort
insl
idivb
hlt
jp
ja
jge
nop
mov
clc
testl
cmc
push
outsb
jne
xchg
pop
lcall
and
sbb
xabort
cmc
in
cmp
aam
dec
or
add
add
lcall
arpl
add
add
push
clc
dec
and
add
add
dec
jnp
clc
out
addr16
or
cmp
add
clc
xabort
sub
inc
clc
call
mov
outsl
neg
sbb
add
mov
jl
cs
cmp
inc
add
xabort
cmp
clc
inc
clc
add
xor
add
clc
dec
xchg
or
ret
clc
call
lret
push
sub
das
imul
into
fldcw
add
xchg
mov
or
arpl
add
test
aas
pop
popa
add
jecxz
sbb
cltd
popf
or
clc
rcl
mulb
hlt
sub
xor
add
add
leave
or
insl
xor
add
cmp
clc
jl
jne
xbegin
clc
mov
push
adc
div
mov
adc
clc
push
add
mov
nop
mov
add
sub
loope
and
mov
adc
add
add
sbb
mov
clc
jmp
add
sahf
insb
inc
add
cmp
clc
mov
push
add
sub
outsl
clc
mov
clc
addr16
in
ljmp
push
add
outsl
mov
mov
mov
mov
mov
pop
dec
sahf
loope
pop
cmp
add
jns
jne
aad
int
dec
mov
inc
clc
out
pop
cmp
ljmp
add
xchg
mov
mov
int3
jns
clc
sar
mov
ret
clc
mov
lods
das
push
clc
push
mov
aas
insl
pop
inc
add
aaa
pop
movsb
clc
cs
sarl
clc
xchg
cmpsb
clc
inc
clc
sbb
sbb
xlat
xor
add
or
addr16
mov
clc
cmp
clc
xbegin
aaa
lcall
clc
lock
sbb
add
push
add
sti
dec
aad
pop
xchg
fs
pop
sar
clc
adc
add
scas
je
clc
popa
add
data16
cmpsb
clc
xchg
add
add
add
clc
cmpsb
clc
in
lods
ret
clc
or
lea
or
dec
add
add
xchg
in
pusha
add
lahf
xor
add
or
test
popf
mov
clc
fadds
xor
add
inc
clc
push
clc
add
add
clc
dec
xor
clc
sar
pop
mov
or
add
add
add
sar
clc
xor
add
or
cmp
xor
add
leave
bound
add
in
movsb
clc
inc
clc
and
add
clc
push
ret
clc
xlat
push
sahf
xchg
sub
sar
ficompl
sahf
fs
mov
add
in
or
bound
add
je
clc
adc
and
add
add
add
mov
clc
pop
imul
in
sahf
out
aad
clc
jo
add
clc
jbe
jns
call
dec
es
sbb
clc
stos
jle
clc
and
jmp
out
jbe
mov
sbb
outsb
xchg
inc
add
sti
js
add
cmp
cmp
clc
cmp
add
insb
daa
clc
pop
push
add
add
add
bnd
clc
sahf
insb
mov
add
jge
not
hlt
add
add
jno
add
sbb
cmc
cmp
mov
pop
repz
dec
sbb
repz
clc
jge
gs
or
outsb
sti
in
dec
ret
iret
mov
mov
mov
clc
stc
icebp
cmp
xor
add
fcoml
add
jmp
clc
jbe
clc
cmc
dec
sbb
insl
sbb
clc
aas
add
movsb
clc
pop
adc
add
clc
repz
fwait
jge
push
add
or
clc
and
add
clc
pop
pushf
xchg
jge
pushf
fsubl
mov
add
cmp
xchg
mov
das
adc
add
call
lahf
imul
add
add
mov
clc
and
add
clc
int
lods
pop
jecxz,pn
cmp
add
repz
scas
pop
data16
scas
fbstp
add
add
add
and
add
popf
jp
push
add
inc
clc
lea
clc
ja
inc
add
xlat
sar
sar
xabort
clc
push
add
push
add
add
add
sub
add
add
out
jp
clc
sbb
add
xchg
movsl
clc
pop
sbb
add
and
push
jnp
mov
clc
xchg
fmuls
clc
out
cmc
std
insl
and
jo
add
clc
sbb
cmpsl
clc
pop
pop
cwtl
std
and
add
sbb
add
fs
pop
sar
iret
fldcw
sbb
lea
add
sar
clc
decb
clc
lret
cmp
add
inc
clc
mov
add
add
add
mov
clc
mov
mov
lods
mov
pusha
add
icebp
outsb
movsl
clc
jp
mov
clc
jno
add
add
cmpsb
clc
mov
and
add
push
add
sub
fstpt
xchg
adc
add
fwait
dec
pop
insl
add
jle
add
add
outsl
push
clc
xor
add
jg
clc
push
cmp
add
or
jno
add
lods
or
cmp
nop
cwtl
sbb
mov
add
clc
mov
add
aad
add
test
mov
sbb
and
add
add
clc
imul
add
push
aad
ljmp
aas
movsb
clc
push
add
inc
add
xchg
sub
dec
shrl
xchg
in
push
add
mov
add
sar
add
test
fstps
mov
rolb
clc
punpcklwd
add
add
lahf
push
add
js
add
add
xor
test
ds
popa
add
and
add
inc
clc
rdtsc
add
xchg
icebp
jno
add
add
xchg
sub
add
stc
push
mov
add
test
push
leave
notb
add
add
test
add
ljmp
lret
mov
loopne
xlat
cltd
cmpsl
clc
push
add
jne
clc
divb
xchg
push
add
out
mov
popa
add
adc
call
bound
add
add
cmp
notl
add
and
add
clc
ret
clc
xor
add
aas
dec
addr16
dec
adc
add
xor
clc
pop
daa
clc
rcl
icebp
push
fisubrl
adc
add
vcvtps2pd
lods
cmp
add
add
sbb
clc
icebp
dec
cmpsb
clc
adc
add
clc
lods
rcl
es
sbb
add
add
xchg
mov
jbe
mov
dec
ret
mov
movsl
clc
outsl
push
add
or
mov
push
clc
cwtl
popa
add
pop
mov
out
stc
incb
inc
clc
adc
add
test
shll
add
clc
mov
xlat
lea
nop
mov
clc
or
scas
mov
ret
clc
fstps
jg
clc
mov
clc
pushf
outsb
mov
sub
add
lret
xor
add
enter
int3
dec
xlat
push
add
mov
add
cld
jg
mov
add
add
inc
clc
fdivp
push
clc
mov
movsb
clc
popf
std
cmpsl
clc
jecxz
pusha
add
data16
cltd
push
add
pushf
clc
jecxz
scas
sahf
int
add
and
xbegin
loope
mov
clc
jp
xchg
fisubl
clc
cs
ss
jb
add
pop
ffree
clc
popf
daa
clc
movsb
clc
inc
clc
xor
add
arpl
add
popa
add
xchg
mov
add
add
add
adc
add
add
xchg
jge
jmp
clc
xchg
inc
add
sar
pop
clc
cs
pop
call
cmp
xbegin
dec
add
add
loop
jmp
xchg
icebp
mov
mov
jg
add
lea
mov
add
out
mov
add
xbegin
aaa
insb
fcompl
jbe
xchg
xchg
stc
gs
loopne
add
sbb
clc
cmp
add
sahf
add
data16
pusha
add
pmaxub
pop
mov
test
out
fsts
call
push
repz
jae
add
sub
je
pop
shll
add
sar
xchg
sbb
popf
ja
cmp
xchg
and
xchg
xchg
mov
jno
add
clc
jae
add
add
scas
jp
add
addr16
push
push
cmp
adc
clc
sub
xor
add
stos
jge
test
cmpsl
clc
imul
mov
mov
clc
add
add
add
fstpl
mov
add
jae
add
clc
push
por
dec
push
push
cmp
xbegin
mov
icebp
lahf
add
add
into
pop
cmp
cmp
mov
or
mov
add
imul
sbb
jg
or
pop
ss
add
out
dec
adc
call
inc
clc
xchg
ret
jno
add
mov
and
xor
out
es
fisttps
adc
add
cmp
or
or
daa
clc
mov
add
add
clc
aam
jns
jbe
add
or
aas
jno
add
clc
insb
lods
cmp
sub
ljmp
mov
neg
cmpsb
clc
pop
adc
add
push
add
push
add
cmp
pushf
jl
push
stc
pop
mov
clc
xchg
mov
stos
aam
push
xor
add
lahf
push
clc
cmp
clc
arpl
add
clc
inc
add
xchg
pop
xbegin
add
clc
cmc
xbegin
clc
add
ljmp
mov
in
mov
int3
lods
popl
add
test
cs
add
pop
clc
push
xchg
pop
cli
jmp
daa
clc
xbegin
push
into
popf
rcrl
pop
sbb
jp
add
nop
pop
aam
clc
mov
add
and
add
mov
push
add
scas
and
imul
jge
add
or
add
clc
inc
add
cmp
fiadds
pop
cmp
shll
clc
inc
add
imul
xor
add
lahf
fs
xor
add
add
sub
clc
shl
clc
sub
test
pop
xchg
adc
decb
cmp
add
add
add
out
aam
add
mov
xabort
clc
jo
add
and
clc
lret
mov
pop
cwtl
dec
fs
dec
push
add
xchg
xor
add
mov
xor
add
adc
add
clc
push
pop
add
add
add
and
add
xchg
gs
mov
clc
addr16
mov
pop
sbb
das
pop
test
sar
mov
and
add
xchg
xchg
mov
outsb
mov
call
cmp
clc
mov
adc
sub
add
ret
xchg
or
clc
rcr
dec
cmpsl
clc
inc
add
outsl
push
add
cltd
sar
repz
sbb
shlb
sub
clc
insl
push
dec
sbb
mov
add
add
add
negl
and
add
clc
xor
clc
out
cs
add
stos
or
clc
decb
and
add
clc
sbb
add
or
mov
clc
lret
fs
cmp
imul
add
mov
lods
add
add
ret
push
enter
clc
test
or
lock
clc
outsb
xlat
cmp
or
clc
push
fwait
imul
add
inc
add
and
and
lcall
add
add
add
mov
sub
add
sbb
fistpll
rcll
add
add
add
push
add
push
add
add
dec
int
mov
add
mov
add
clc
sbb
xchg
cmp
or
jmp
add
jbe
cmp
add
cmp
or
clc
idiv
jecxz
push
mov
cmp
sub
data16
dec
cmp
mov
clc
mov
push
int
dec
jmp
popa
add
and
ljmp
clc
dec
mov
add
scas
movsb
clc
inc
add
iret
sbb
sbb
imul
je
clc
insl
and
lahf
xchg
rorb
jecxz
fwait
add
add
lods
mov
sub
cmp
call
and
ret
outsb
xor
add
icebp
aam
clc
clc
pushf
xor
add
cmp
add
sahf
outsb
xchg
outsl
clc
out
push
add
xchg
js
aam
ss
cmp
pop
clc
mov
add
push
add
inc
clc
mov
inc
add
test
push
add
jmp
push
shll
adc
add
sbb
add
clc
dec
lcall
dec
movsb
clc
cmp
cmp
cmp
add
mov
js
clc
mov
push
pushf
icebp
adc
repnz
add
clc
fstpl
clc
push
lods
aaa
mov
add
dec
adc
and
add
stos
data16
cmpsl
clc
hlt
nopl
add
insl
mov
push
or
add
dec
test
xchg
iret
jae
add
pushf
lahf
lods
out
xchg
pushf
fs
xchg
ja
clc
adc
add
adc
add
add
out
loop
jmp
add
mov
scas
cmp
clc
cmp
add
jnp
clc
dec
icebp
dec
and
add
add
push
imul
sar
stc
pop
lods
ret
clc
cmp
ror
mov
ss
add
add
jae
add
push
pop
js
je
out
mov
or
add
lods
insb
mov
add
mov
clc
dec
add
cltd
into
jae
add
adc
add
mov
out
mov
mov
into
insl
xbegin
clc
fwait
mov
and
add
clc
lret
kmovw
clc
and
add
clc
and
add
mov
or
ret
mov
bound
add
xor
add
jb
add
clc
pusha
add
cmpsl
clc
sbb
mov
add
add
add
clc
mov
icebp
clc
jle
dec
mov
sbb
sti
lret
clc
or
pop
jle
mov
xchg
dec
sbb
clc
cmp
add
clc
xchg
jae
add
dec
and
add
add
int
jns
ret
into
call
mov
clc
ss
jmp
sar
mov
insb
in
xchg
cmp
add
xchg
lcall
or
mov
pop
inc
clc
jg
clc
jg
inc
add
lret
mov
in
scas
sub
cwtl
inc
clc
push
clc
test
clc
mov
add
jno
add
jmp
out
mov
mov
add
aad
clc
pop
push
add
sub
add
sar
or
push
jge
jmp
lret
xor
add
int3
shlb
push
repnz
and
jae
add
mov
mov
jge
and
xchg
pop
xchg
mov
xor
add
xor
add
sbb
clc
mov
arpl
add
ret
mov
clc
stc
addr16
cmc
jae
add
push
xor
add
and
cs
out
scas
or
add
pop
aam
test
clc
inc
clc
mov
clc
ds
pop
jo
add
dec
push
sbb
clc
imul
iret
adc
add
jl
clc
cmp
add
mov
cld
mov
add
pop
imul
scas
scas
xchg
in
xor
add
aas
pop
clc
notl
add
add
ret
clc
xor
add
add
add
dec
pusha
add
icebp
jg
inc
add
rcrl
add
cli
or
add
xchg
mov
jge
iret
cwtl
inc
add
pop
test
inc
clc
and
add
std
cmp
add
add
mov
imul
in
add
add
loop
iret
xchg
mov
rcr
ss
cli
cs
add
cmp
pop
mov
sub
fnstenv
ror
std
mov
mov
clc
inc
add
nop
xchg
loopne
mov
add
mov
fcomp
loopne
imul
clc
cmp
clc
xor
add
add
fsubr
test
push
add
aad
or
clc
xor
add
adc
add
call
clc
aad
sub
fnstsw
out
sar
clc
push
out
js
add
lods
fsubs
clc
jno
add
clc
mov
sub
mov
add
dec
sahf
xchg
jp
gs
jl
clc
push
clc
inc
add
sti
data16
xchg
pop
js
push
add
adc
add
add
push
and
add
insb
or
add
iret
push
sub
add
xchg
adc
clc
push
es
and
cmp
xor
add
sub
add
pop
pop
sbb
add
or
insl
add
repnz
popa
add
movsl
clc
jmp
push
mov
ret
clc
xor
add
loopne
pop
jne
loop
cmp
clc
hlt
outsl
in
aam
or
loop
mov
add
jl
sub
add
push
jecxz
dec
cmp
add
add
frstor
add
bound
add
add
lods
in
push
leave
mov
mov
xchg
mov
add
mov
dec
fists
add
shr
ja
or
xchg
inc
clc
adc
clc
and
push
jnp
add
xchg
mov
jecxz
in
clc
dec
push
jp
icebp
repnz
clc
cmpsl
clc
lret
shlb
pop
xchg
dec
in
test
and
xchg
popf
popf
adc
push
xor
add
filds
add
lret
stos
sti
stc
dec
mov
pop
incl
movsb
clc
push
pop
inc
clc
cmc
adc
add
and
add
add
dec
outsl
cmp
pop
daa
clc
js
int3
inc
add
cmp
clc
jb
add
aaa
movsb
clc
idiv
ds
mov
arpl
add
mov
add
lcall
mov
ds
pop
pop
bswap
mov
js
insb
sub
cmpsb
clc
test
sbb
clc
adc
add
fwait
push
sub
xor
cmp
add
fsubr
pusha
add
in
jno
add
xor
add
push
jnp
sar
daa
clc
and
mov
clc
or
pop
jae
add
jp
sub
add
pop
mov
jae
add
cmp
fmuls
jmp
push
sbb
in
cmp
sub
add
shll
ficompl
clc
cmp
clc
jae
add
clc
in
roll
xor
add
clc
testb
fcmovu
cmp
cwtl
cmp
push
out
iret
mov
popf
mov
clc
stos
push
add
push
add
test
inc
add
daa
clc
xor
add
clc
adc
add
clc
ljmp
lods
sahf
lcall
add
nop
inc
clc
aaa
adc
add
popl
mov
pop
clc
lods
push
clc
push
mov
ffree
clc
pop
adc
add
clc
out
xor
add
add
add
mov
add
add
outsl
test
lret
pop
push
pop
movsl
clc
lods
mov
add
push
and
add
hlt
sbb
or
xchg
out
cld
int
mov
sbb
stc
inc
add
lret
stc
mov
clc
pop
add
add
sbb
add
icebp
and
add
xchg
xchg
insb
pop
add
add
add
clc
pop
xchg
mov
xchg
movsl
clc
mov
das
mov
iret
inc
add
inc
add
test
add
sbb
es
into
fsubr
mov
clc
sbb
mov
mov
mov
add
inc
clc
push
mov
add
xchg
lock
jae
add
and
mov
and
add
add
iret
pop
mov
sti
mov
clc
imul
cmp
clc
mov
adc
add
lret
cmp
push
add
repnz
or
and
add
lods
mov
dec
aam
clc
sub
cmovne
stos
int3
roll
add
sub
pop
sub
fdivl
jl
mov
xlat
movsb
clc
mov
lahf
dec
std
mov
movsb
clc
ja
sbb
and
add
in
and
add
add
jb
add
cltd
adc
add
inc
clc
pop
adc
add
sub
add
ficompl
dec
jmp
ror
xor
add
xlat
mov
jns
add
dec
xchg
sarb
and
add
and
add
add
jmp
jbe
iret
mov
out
mov
sbb
inc
clc
cmc
pop
outsl
sub
clc
add
clc
gs
lock
add
ja
clc
clc
pop
ljmp
add
das
addr16
aaa
mov
out
int3
cmp
sub
cmp
and
add
clc
xor
add
repz
addr16
dec
add
cs
test
dec
dec
push
clc
sar
clc
cmp
out
stos
clc
sbb
push
mov
xor
add
clc
fldt
add
add
pop
mov
mov
add
insl
sar
add
test
adc
add
insb
cmp
push
add
lods
push
add
sub
push
add
into
push
or
dec
lret
aam
adc
roll
clc
in
lea
clc
pop
inc
add
out
xchg
jb
add
enter
dec
loop
fidivrl
push
adc
add
jnp
clc
lea
in
xbegin
pop
scas
stc
and
add
clc
decb
clc
mov
sar
add
jmp
lods
dec
pushl
adc
add
cmpsl
clc
test
pop
call
clc
mov
jb
add
pop
xchg
stos
and
add
fimull
adc
add
add
add
pop
clc
mov
mov
sub
mov
cmc
fistpl
pop
nop
mov
sub
idiv
mov
add
sti
xor
add
clc
mov
add
jnp
clc
std
pop
insb
mov
repz
add
ljmp
pop
push
sbb
clc
xor
add
and
add
dec
lahf
cmp
ret
aas
mov
imul
add
adc
add
clc
mov
dec
fildll
clc
pop
insb
daa
clc
push
cmp
add
jno
add
add
add
cmp
adc
add
xor
add
leave
push
clc
sbb
clc
pop
dec
cmp
jno
add
pushf
adc
add
mov
clc
je
clc
test
js
add
jns
add
add
sbb
pop
push
sub
ss
xbegin
add
mov
push
clc
cmpsb
clc
fwait
imulb
cld
mov
add
ficomps
add
data16
xchg
scas
ret
add
jbe
lret
adc
lea
dec
dec
adc
add
add
enter
add
add
sub
pop
enter
cmp
add
movsb
clc
out
push
pop
data16
mov
out
mov
loop
insl
cltd
xchg
xchg
add
add
mov
pop
mov
clc
jns
stc
scas
xchg
into
cmp
cmp
add
das
ljmp
dec
cmp
pop
ficoml
add
mov
inc
add
inc
clc
dec
gs
call
ret
clc
or
inc
add
dec
or
add
add
pushf
in
or
jle
scas
dec
mov
mov
clc
sbb
in
nop
insl
sar
clc
ds
add
lret
adc
dec
repnz
inc
clc
and
add
add
add
mov
sub
add
mov
clc
loopne
test
dec
inc
clc
out
and
popa
add
pop
xchg
loop
mov
cltd
cmp
jecxz
out
xchg
int
add
pop
xor
add
mov
clc
sbb
adc
add
or
or
add
stos
sub
addr16
mov
pop
sbb
clc
int
clc
cs
add
fs
gs
add
add
clc
mov
movups
add
js
mov
clc
push
pop
scas
or
clc
mov
repnz
fmull
call
hlt
adc
add
push
add
inc
add
lret
inc
add
cmpsb
clc
or
mov
icebp
dec
aaa
cmp
stc
int3
ja
lret
jns
xor
add
xchg
loope
or
clc
and
jae
add
shll
inc
clc
in
or
add
icebp
bound
add
dec
fdivrs
in
sub
mov
pushf
pop
clc
mov
cmp
adc
out
mov
jbe
popf
mov
jae
add
add
arpl
add
add
filds
fs
movsl
clc
jmp
clc
jg
mov
cmp
pop
clc
xabort
and
add
out
hlt
cvtps2pi
cmp
lock
add
clc
aam
in
cmp
insb
pusha
add
vshufps
shl
leave
adc
add
or
clc
mov
add
jg
aaa
in
xchg
xchg
ljmp
add
frstor
add
lods
and
add
add
fs
sbb
mov
leave
imul
add
outsl
testl
clc
mov
mov
clc
mov
cmp
pop
pop
test
add
dec
inc
add
xchg
sti
loop
addr16
jl
add
cmp
dec
ja
ret
sbb
dec
mov
in
mov
clc
xor
add
push
add
mov
add
dec
dec
dec
popa
add
pop
sbb
xor
add
or
xor
out
cwtl
xbegin
add
add
and
add
xor
add
or
xor
add
add
sub
add
aas
mov
add
nop
loope
cmp
pop
and
sub
data16
mov
nop
mov
mov
clc
push
clc
xor
add
clc
adc
add
stos
repz
cmp
mov
loope
mov
gs
mov
data16
mov
gs
mov
add
clc
sbb
dec
add
add
xor
add
clc
testb
add
sbb
mov
sar
clc
testl
clc
push
cld
cmp
clc
addr16
xchg
jno
add
out
inc
add
jle
insl
inc
clc
pop
pop
pop
sahf
bound
add
fdivl
addr16
dec
cli
dec
jp
xor
add
sub
inc
clc
mov
clc
pop
add
add
popa
add
or
clc
daa
clc
loop
ret
clc
cmp
pop
mov
and
cltd
sub
mov
add
fimuls
stos
push
jg
inc
add
jo
add
ror
adc
movsb
clc
xchg
es
outsl
xor
clc
sahf
stos
dec
inc
clc
add
cmp
xabort
stos
out
insb
aam
jne
jl
mov
add
xchg
hlt
mov
sar
push
aad
clc
inc
add
jnp
stos
xchg
popa
add
cmp
or
test
in
popa
add
pop
push
add
dec
mov
add
add
add
add
add
pop
cmp
test
pop
clc
sbb
pop
mov
add
push
add
xchg
push
add
sahf
adc
dec
call
gs
cmp
cmp
repnz
cwtl
push
aaa
mov
mov
clc
mov
clc
outsl
and
add
lret
jns
sbb
jo
add
inc
clc
std
sti
mov
add
dec
mov
int3
sbb
xor
add
push
add
std
adc
add
mov
add
xchg
push
clc
js
add
mov
test
jns
jecxz
mov
clc
in
hlt
in
pop
mov
clc
cmp
clc
cmp
shlb
add
fisubrl
jp
clc
ss
add
cmpsl
clc
jle
clc
int3
and
add
scas
dec
mul
clc
adc
add
clc
cmc
push
add
add
or
xchg
int3
add
inc
add
inc
clc
add
notb
addr16
adc
mov
mov
cltd
mov
dec
jb
add
fiadds
dec
adc
cmc
adc
add
data16
jl
inc
add
dec
mov
add
rclb
cmc
jne
fidivrl
mov
rorb
clc
inc
add
cmpsl
clc
cld
mov
clc
lahf
add
adc
add
clc
out
arpl
add
cmp
adc
mov
out
aad
jb
add
add
pop
es
ret
add
push
ljmp
test
addr16
mov
xlat
add
add
add
push
add
push
mov
out
lods
and
add
inc
add
push
cmp
jno
add
fldl
mov
clc
jecxz
xchg
dec
test
add
or
lock
add
mov
clc
mov
add
add
add
adc
add
mov
inc
add
gs
cmp
sbb
lock
add
iret
rcrl
lock
clc
shl
clc
call
add
sbb
mov
and
add
add
out
xchg
and
add
add
clc
imul
mov
ret
imul
inc
clc
fimull
mov
cmc
cmp
jno
add
sub
clc
stos
icebp
xor
add
mov
out
or
clc
add
in
je
in
dec
add
add
mov
cmp
add
lret
shll
clc
dec
adc
jecxz
pop
cmp
add
test
cmpsb
clc
cmp
push
add
mov
xchg
imul
fs
cmp
testb
mov
adc
clc
adc
add
mov
add
xor
push
clc
cmp
cmp
xchg
sub
add
in
push
pop
inc
clc
nopl
add
clc
sahf
inc
clc
cmp
movsl
clc
cmp
add
jnp
mov
imul
push
inc
add
and
add
add
add
in
push
add
ljmp
hlt
nop
in
int
in
imul
leave
push
add
jnp,pn
clc
cmp
sub
add
mov
aad
add
pop
sub
fwait
push
cmp
mov
sub
ss
clc
lahf
test
dec
ret
add
pop
clc
and
add
sub
popf
push
add
pop
inc
add
inc
add
push
fistps
clc
push
aaa
and
mov
add
pop
cli
mov
clc
jno
add
cltd
hlt
cmp
add
add
shl
cmp
pushf
xor
add
clc
movsb
clc
pop
mov
leave
adc
inc
add
sub
addr16
push
sar
aam
or
add
sbb
add
add
add
or
add
or
xor
add
add
js
dec
pop
xlat
jmp
jmp
push
or
enter
popa
add
or
push
popf
mov
add
add
add
add
xchg
jne
lods
in
jl
add
mov
push
add
ja
add
pop
jb
add
popa
add
sbb
clc
mov
add
add
clc
jecxz
lods
js
push
and
dec
jmp
fcmovbe
popf
ret
clc
clc
cmp
mov
fldl
add
or
clc
jb
add
add
ss
jbe
clc
lods
into
lock
out
pop
xor
add
sar
xor
test
add
add
ss
clc
int3
ss
add
adc
add
in
insb
js
inc
clc
mov
add
add
add
mov
cmp
clc
int3
jae
add
add
push
add
scas
ja
clc
inc
add
ret
clc
jbe
add
shl
clc
leave
sub
repnz
jnp
xchg
jmp
and
pushf
or
dec
inc
clc
dec
add
mov
clc
lods
out
jp
outsl
loop
lcall
test
inc
clc
inc
add
mov
xor
add
cmp
mov
jg
leave
je
xbegin
clc
xor
mov
es
push
inc
add
leave
jbe
add
mov
cmpsl
clc
out
sub
jl
rol
clc
cmpsb
clc
into
icebp
xchg
mov
jp
add
nop
fsubrs
clc
xor
add
lahf
push
stc
outsl
nop
sub
jmp
push
clc
sbb
mov
dec
xchg
dec
repnz
sub
and
add
xchg
add
add
fcoml
add
clc
pushf
sar
cmp
clc
mov
add
inc
clc
pop
stos
xor
add
lods
xchg
xchg
cmp
pop
out
stos
es
hlt
arpl
add
ljmp
inc
add
pusha
add
cltd
cmp
add
and
add
xbegin
nop
jo
add
and
add
cmc
pop
mov
dec
mov
sahf
cmp
and
add
add
push
clc
push
add
pop
mov
cmpsb
clc
popa
add
arpl
add
add
clc
adc
add
add
stos
inc
clc
xchg
aas
fcomps
xor
add
fbld
cmc
sub
xchg
mov
mov
jb
add
add
sbb
popf
fisubrs
shl
clc
jge
add
jbe
xchg
in
jbe
clc
outsb
aaa
xchg
xchg
jnp
clc
and
add
add
pop
loopne
add
popf
mov
add
cmpsb
clc
inc
add
push
add
mov
or
add
push
clc
icebp
jb
add
push
add
imul
fistpl
add
cmp
cmp
add
sti
and
clc
sahf
xor
add
in
into
enter
sub
clc
int3
push
clc
sbb
add
pusha
add
sbb
add
add
add
in
mov
fs
mov
clc
bound
add
gs
pop
sbb
clc
mov
add
stc
sbb
add
xor
add
clc
in
xor
add
sub
dec
aam
daa
clc
xor
add
outsl
test
je
mov
xor
and
sbb
mov
xchg
leave
pop
out
push
clc
xor
je
inc
add
bound
add
in
xchg
sbb
add
jg
jecxz
mov
add
add
clc
aam
add
test
mov
call
test
pushf
aaa
mov
cmpsl
clc
push
cmp
out
vcmpps
cmpsb
clc
lock
jmp
inc
clc
imul
add
add
clc
into
mov
clc
push
pop
clc
xor
add
inc
clc
xchg
mov
outsb
dec
cmp
test
ss
adc
jge
push
add
add
aaa
fld
clc
sti
fsub
clc
lahf
int3
int
xchg
adc
pop
arpl
add
clc
cmp
add
add
push
loopne
jl
mov
fdivl
add
bound
add
and
xchg
dec
sbb
add
inc
add
aas
mov
add
add
cwtl
inc
add
dec
xbegin
in
test
mov
fnsave
clc
scas
rcr
add
cwtl
inc
add
pop
lahf
nop
adc
add
das
and
in
xor
add
inc
clc
xor
mov
lods
push
cli
add
in
xchg
xor
clc
adc
add
cltd
pushf
and
add
cmpsb
clc
imul
clc
mul
clc
inc
clc
loope
daa
clc
inc
add
std
in
lods
enter
dec
iret
in
ret
clc
inc
clc
lods
out
xor
add
jle
clc
dec
xchg
test
jae
add
add
leave
sbb
add
out
inc
add
sbb
pop
inc
clc
out
dec
and
add
clc
mov
add
movsl
clc
es
mov
add
jns
clc
mov
clc
pusha
add
gs
mov
pop
clc
mov
sbb
add
in
sub
mov
cmp
add
add
add
mov
pop
paddb
clc
push
adc
movsl
clc
sub
idivl
clc
pop
add
add
mov
mov
or
bound
add
dec
pop
pop
data16
xchg
or
add
loopne
cld
dec
sbb
add
xchg
jmp
clc
pop
xchg
or
sarb
fs
aam
clc
xchg
dec
add
cld
adc
add
jns
iret
pushl
push
insl
inc
add
fnsave
add
add
push
stos
and
jns
add
mov
clc
test
xchg
das
sbb
pop
lcall
add
cmc
mov
call
in
ja
sub
add
jae
add
add
das
xchg
xabort
fs
pop
and
add
clc
cltd
js
test
scas
adc
clc
jno
add
add
sub
push
dec
jge
sbb
add
sbb
test
xchg
fidivl
add
aas
gs
cs
arpl
add
push
clc
xchg
pusha
add
or
xchg
rcrb
and
add
xchg
lret
cmp
xchg
sbb
add
cmp
mov
clc
cwtl
xor
add
addr16
popf
add
add
cwtl
add
add
clc
mov
push
pop
ljmp
mov
clc
loopne
and
scas
pusha
add
iret
ljmp
cs
sub
repz
sbb
clc
pushf
sub
add
xbegin
add
fcmovne
add
add
mov
xchg
ljmp
cmp
add
sbb
clc
insl
xchg
lock
scas
xchg
out
clc
outsl
pop
jno
add
pop
clc
fisttpl
mov
clc
ss
clc
jne
push
add
decb
gs
jecxz
mov
clc
movsl
clc
push
and
hlt
aam
push
add
adc
add
or
cmc
adc
add
xchg
ret
clc
stos
xchg
jp
ret
clc
add
and
add
jne
pushf
sbb
add
sub
divb
add
cwtl
cmp
clc
add
fwait
in
sar
std
and
add
sar
jo
add
adc
add
add
decb
add
lahf
pop
out
out
jmp
clc
sar
aas
cmpsb
clc
rolb
add
add
mov
dec
cmp
clc
xchg
add
add
clc
adc
add
clc
out
popa
add
or
jp
clc
enter
cmp
clc
mov
lock
add
rol
clc
jl
clc
mov
xchg
cmp
clc
xor
add
add
sub
inc
clc
shll
scas
sbb
add
pop
jne
clc
push
ret
jecxz
ficoml
sub
xchg
cmp
clc
in
and
add
in
sub
sar
out
leave
shrl
dec
mov
jle
clc
pop
clc
mov
lods
xchg
push
clc
outsl
inc
clc
and
add
add
add
add
add
ja
clc
jae
add
fsubs
clc
push
add
rcll
add
pop
xbegin
add
ret
data16
fs
sbb
clc
cmp
mov
push
clc
xchg
movlps
add
xor
add
popf
dec
push
add
cmp
clc
adc
and
add
adc
add
add
add
std
mov
xchg
gs
sar
fwait
inc
clc
mov
bound
add
add
add
and
add
mov
lods
and
add
sub
lock
bound
add
lock
add
mov
add
ljmp
add
add
lock
movsb
clc
lret
jl
jg
clc
pop
lret
sbb
adc
add
lret
mul
clc
out
pop
imul
add
mov
in
and
add
add
clc
mov
add
pusha
add
sbb
mov
push
test
sbb
clc
xchg
sub
add
and
add
insl
pop
fldl
add
clc
adc
cmc
mov
cmp
ret
clc
pop
movsb
clc
fldt
iret
jo
add
ret
jge
jnp
clc
or
xor
add
loope
stos
cmp
fiadds
clc
cmp
addr16
mov
clc
in
dec
rolb
fldcw
cmp
add
and
add
add
pop
or
push
add
jbe
clc
mov
fwait
in
inc
add
dec
jp
add
mov
je
sar
arpl
add
clc
out
adc
fistl
xchg
sahf
popf
cmp
push
clc
sahf
sbb
xchg
ret
jbe
add
test
clc
mov
clc
cmp
clc
cmp
clc
scas
or
pop
fs
cmp
sbb
push
add
inc
add
dec
insl
pop
or
dec
es
xor
add
fsubrl
stos
cmp
add
dec
sbb
inc
clc
jb
add
ffreep
clc
pushf
pop
mov
mov
and
add
fsubrp
scas
pop
and
insl
lret
cli
in
sub
scas
dec
pop
sub
add
repz
add
clc
mov
and
add
add
or
clc
loope
call
icebp
dec
mov
mov
clc
ja
test
cmp
insl
jns
clc
mov
adc
add
std
es
outsb
adc
push
inc
clc
xbegin
mov
cmp
dec
cmp
repz
or
xchg
adc
jno,pt
add
xbegin
addr16
xchg
push
or
clc
mov
inc
clc
jbe
pop
clc
mov
cmp
int
neg
lss
add
mov
leave
inc
add
ret
clc
fdivl
stos
xor
add
add
add
stos
push
bound
add
arpl
add
add
movsb
clc
cld
nop
and
add
add
add
dec
sbb
add
sarb
clc
jmp
cmp
jo
add
clc
sar
aam
gs
xor
clc
pop
pop
out
movsb
clc
mov
add
int3
movsl
clc
inc
clc
fwait
jmp
aad
sub
clc
adc
add
cmp
mov
mov
clc
aam
cmp
clc
lret
clc
xor
jl
clc
fwait
cld
loope
xchg
or
jle
clc
xchg
jp
call
out
stos
cmp
movsb
clc
in
lahf
jns
enter
pop
lods
movsb
clc
mov
add
mov
clc
bnd
pushf
clc
xlat
adc
in
scas
xchg
test
pop
je
test
in
jnp
sar
add
popa
add
adc
add
clc
gs
lahf
dec
sub
clc
fisubrs
sub
loopne
dec
jmp
add
test
fisttpl
icebp
mov
clc
dec
jecxz
cmp
insb
stos
or
pop
clc
test
add
xchg
mov
lods
lret
or
xchg
inc
clc
xor
and
add
leave
stos
and
repz
jbe
insb
add
add
clc
in
mov
add
faddl
xchg
dec
mov
clc
xchg
lret
fidivl
add
push
into
mov
jne
loopne
lods
psubb
mov
or
clc
mov
clc
ds
pop
or
cmp
add
sar
je
add
mov
clc
sar
mov
scas
data16
sub
sbb
inc
clc
outsl
mov
in
in
ljmp
xbegin
add
jge
add
add
in
lret
add
add
and
add
lods
and
add
clc
pop
cmc
leave
addr16
lret
dec
mov
testb
clc
imul
insl
jb
add
clc
cmp
xchg
arpl
add
cmp
xabort
adc
add
add
in
dec
and
add
test
add
ror
jae
add
or
add
cmp
clc
ret
clc
xchg
pop
enter
ja
fisubrl
clc
in
fbld
mov
clc
mov
add
sar
push
add
dec
lcall
inc
clc
repz
clc
pop
stos
lcall
add
cmpsb
clc
lods
push
xlat
scas
push
add
repnz
adc
add
aad
add
sub
xlat
out
cmp
add
je
clc
es
mov
clc
or
sub
push
cmc
and
add
out
add
add
xor
add
adc
clc
dec
imul
mov
mov
add
cmp
mov
fadd
clc
sbb
sbb
cmpsb
clc
cmp
jp
add
cmc
ficomps
clc
std
sar
in
xlat
js
add
jle
cltd
xchg
lea
test
mov
mov
mov
stos
gs
imul
lods
nop
lret
xbegin
add
hlt
mov
mov
add
dec
pop
lods
pop
aam
clc
pop
test
or
clc
mov
add
sbb
add
cld
aam
jno
add
out
jae
add
add
cmp
and
sbb
xchg
adc
inc
clc
scas
pop
ror
insb
jp
push
clc
in
jbe
aaa
fwait
or
fildll
pop
jp
add
adc
lcall
dec
notb
xbegin
arpl
add
daa
clc
jecxz,pn
pop
clc
push
clc
push
cmp
clc
and
clc
hlt
push
clc
adc
add
add
in
test
xchg
pushf
int3
or
cmpsb
clc
stos
mov
aad
aaa
dec
mov
jl
repnz
add
dec
inc
clc
std
mov
pop
sbb
into
push
clc
icebp
bound
add
add
icebp
out
pusha
add
movsl
clc
es
pop
sarb
js
cmp
mov
jns
cmp
adc
jo
add
add
mov
mov
clc
and
add
xlat
daa
clc
xchg
adc
add
add
jb
add
adc
clc
mov
iret
repnz
clc
pop
clc
mov
data16
xchg
shrb
xor
cld
sahf
xchg
scas
pop
lret
push
js
xchg
mov
push
cmp
add
adc
clc
fldcw
and
add
add
iret
cmp
xchg
fimuls
push
je
clc
cmpsl
clc
pop
clc
gs
xor
sub
clc
sub
clc
aad
cld
lock
repz
clc
pop
push
fisubrs
jg
adc
add
cmp
lea
mov
cmp
mov
clc
mov
adc
add
or
clc
pop
in
mov
dec
xor
add
dec
daa
clc
push
clc
inc
add
pop
pop
lcall
push
push
xbegin
jge
jecxz
iret
pop
clc
fcoml
xchg
fimull
push
inc
clc
scas
xchg
gs
pop
clc
cwtl
mov
imul
add
adc
clc
loop
xor
add
push
xor
out
push
clc
cmp
clc
popa
add
clc
clc
pushf
sarl
xlat
int3
xchg
mov
cli
or
jae
add
jg
mov
insl
notl
add
adc
add
adc
movsb
clc
clc
xor
add
xchg
mov
xlat
imul
add
test
adc
add
add
inc
clc
inc
add
push
jns
cld
push
aaa
int
push
dec
jmp
cmp
loope
mov
fiaddl
add
or
push
cli
movsl
clc
adc
cmp
push
add
add
and
cmpsl
clc
or
clc
xor
mov
movsl
clc
or
dec
hlt
add
add
clc
xchg
imul
add
sub
cwtl
mov
sbb
clc
pop
outsl
lcall
push
add
loope
ds
clc
cld
xchg
jmp
add
pop
or
inc
clc
xor
clc
inc
clc
xchg
repz
add
or
push
add
cvtss2si
popf
mov
js
clc
arpl
add
clc
pusha
add
xchg
mov
in
sti
pop
std
pop
xchg
enter
xchg
clc
jmp
clc
icebp
cmp
clc
mov
add
jecxz
inc
clc
scas
or
leave
jb
add
out
in
pop
mov
sub
clc
mov
add
xbegin
add
lods
mov
data16
xchg
in
arpl
add
add
and
add
sbb
mov
cmp
cltd
push
mov
add
lods
mov
test
jae
add
add
cmp
add
insb
test
jno
add
add
lods
mov
repnz
add
into
pop
clc
lock
xor
add
bound
add
xlat
call
xchg
cmp
xlat
loope
mov
add
stos
xor
add
add
loopne
push
clc
push
clc
jle
clc
insb
add
add
add
add
sub
add
dec
pop
pop
pop
jg
cmpsb
clc
movsl
clc
xor
add
add
cmp
outsb
sbb
clc
imul
mov
add
add
test
mov
out
jne
loope
pushf
xor
add
add
aam
add
cmp
add
pop
push
and
out
mov
add
sar
add
jne
jb
add
xor
add
xchg
sbb
mov
clc
xchg
adc
add
jecxz
bound
add
mov
in
sqrtps
add
or
clc
out
or
dec
movsl
clc
clc
stos
inc
clc
add
add
xchg
mov
sub
cmp
clc
stos
in
sub
aaa
mov
loop
dec
pop
cmc
push
add
inc
clc
push
pop
popa
add
sbb
adc
add
add
fwait
ds
in
out
xor
aaa
sub
add
sub
pop
clc
ss
clc
popf
in
or
in
mov
js
xlat
push
add
loop
jno
add
pop
pop
dec
jbe
xchg
cmp
or
add
clc
ss
call
jmp
insb
add
add
clc
sub
clc
repz
jae
add
cmp
clc
xor
add
mov
clc
test
pop
fptan
pop
int
aaa
call
add
popa
add
mov
mov
clc
aaa
aam
add
cwtl
lock
shr
push
add
add
add
pop
mov
clc
and
add
xchg
mov
jo
add
add
test
hlt
inc
clc
leave
icebp
iret
cmc
arpl
add
add
sahf
xchg
enter
lret
inc
clc
jl
stc
inc
clc
adc
add
movsl
clc
lahf
or
aam
and
add
out
mov
clc
fisubl
add
jae
add
add
push
add
cmp
clc
pop
rorl
jp
add
add
add
daa
clc
cli
test
clc
hlt
or
xchg
leave
fiaddl
clc
sbb
clc
scas
stos
mov
push
add
push
shrb
pop
adc
sbb
add
imul
mov
mov
test
testl
clc
fnstsw
add
pusha
add
push
dec
popf
cmp
fldcw
pop
jl
imul
ret
clc
cmp
mov
push
xchg
or
test
mov
cmp
or
clc
jbe
mov
pop
out
ljmp
jb
add
scas
mov
sub
clc
xchg
sub
add
and
add
shrl
mul
clc
int3
insb
add
add
movsb
clc
leave
fisttpll
mov
clc
sbb
add
jg
out
in
or
clc
and
add
add
outsl
push
mov
test
mov
xchg
iret
mov
jno
add
clc
push
or
pop
outsb
ss
xor
sub
adc
add
jb
add
jmp
sbb
add
imul
pop
stos
pop
cld
imul
cmp
cltd
in
rorl
xchg
ret
clc
sti
xor
clc
outsl
ss
xchg
idivl
clc
in
repz
dec
je
cmp
sub
leave
popf
add
sahf
ret
insb
pop
mov
jecxz
xor
add
pop
and
add
add
adc
add
push
out
lock
add
xchg
inc
add
cmp
push
mul
clc
inc
clc
dec
ds
clc
cmp
clc
jns
ds
xabort
out
clc
ljmp
add
in
jl
lock
js
clc
mov
es
ret
mov
out
call
push
cmp
jbe
add
jmp
add
dec
fstpt
cmc
pop
jno
add
loope
lahf
jns
pop
std
mov
add
add
add
outsl
fidivrs
lea
add
jg
jg
mov
clc
repz
sub
clc
jl
in
mov
clc
lock
clc
mov
xbegin
mov
xchg
je
inc
add
in
cmc
sub
dec
push
add
cmp
data16
add
add
jmp
insl
sub
clc
popa
add
lcall
daa
clc
jbe
clc
push
clc
lcall
add
add
dec
outsb
iret
shll
clc
int3
es
and
add
aad
push
add
pop
cld
fs
sub
add
xchg
insl
mov
xchg
sub
xchg
clc
stos
mov
clc
push
xchg
push
add
cli
xor
add
push
and
cmp
cmp
adc
es
push
add
inc
clc
cmp
std
cmp
jbe
jno
add
add
add
mov
cmp
fidivrs
adc
add
add
mov
inc
add
fsubr
or
cmp
xchg
and
add
inc
clc
xor
es
push
add
jmp
push
out
jae
add
filds
add
push
push
or
insl
dec
and
add
popf
push
scas
std
loope
pop
movsb
clc
jno
add
push
clc
hlt
vcomiss
inc
clc
loope
ja
in
or
inc
clc
mov
stc
arpl
add
xchg
add
sbb
dec
mov
clc
jmp
mov
je
clc
inc
add
jp
inc
add
xlat
inc
add
or
add
dec
fstl
jno
add
mov
xchg
lahf
jnp
and
jae
add
xchg
mov
add
shll
dec
or
clc
jecxz
pop
push
clc
sub
xor
mov
add
pop
fidivs
add
or
mov
jmp
clc
popa
add
test
adc
add
lcall
add
out
out
scas
or
add
fs
and
add
clc
cmp
or
clc
jmp
ret
clc
pop
clc
test
outsl
mov
cmp
dec
inc
clc
gs
xor
push
cmpsb
clc
push
push
add
jbe
clc
jmp
jae
add
pop
xchg
data16
data16
sub
pushf
add
add
out
cmp
sbb
add
xchg
mov
outsb
sbb
sbb
add
add
mov
add
outsl
mov
flds
js
sar
out
pop
pop
clc
mov
clc
sub
cmp
lods
push
inc
clc
xlat
addr16
push
dec
dec
cli
pop
insb
mov
jo
add
clc
add
add
loopne
enter
push
push
add
push
je
cmp
dec
leave
xor
add
cmp
jbe
in
lods
mov
rcrb
cmp
jnp
test
adc
add
xchg
mov
cwtl
xchg
pop
test
mov
clc
mov
jne
add
adc
add
es
push
add
pop
add
add
inc
add
imul
inc
add
clc
inc
add
in
rcl
xchg
sti
icebp
cmpsb
clc
or
int
clc
mov
fstl
add
fs
jno
add
xbegin
clc
mov
js
movsb
clc
xchg
or
ret
clc
xchg
pop
jbe
ljmp
lret
add
das
std
inc
clc
mov
add
ret
clc
xor
pop
clc
ret
or
cmc
push
xor
add
fxch
push
add
lock
pushf
push
dec
imul
clc
in
dec
loope
cmp
push
pop
mov
ljmp
fcoml
add
int
clc
and
pop
xchg
test
jno
add
jmp
inc
clc
cli
not
mov
add
ljmp
lock
dec
jl
add
or
clc
das
sub
clc
and
add
xchg
mov
out
out
ret
clc
inc
add
mov
xchg
bound
add
fcmovu
hlt
push
cmp
and
or
add
add
jmp
clc
add
add
add
clc
sbb
clc
leave
int
clc
xor
add
jno
add
clc
xor
xchg
pop
loopne
jle
push
pop
jnp
mov
and
add
push
add
xchg
cld
and
add
cmp
clc
or
clc
xchg
outsl
test
jno
add
clc
xchg
push
sar
clc
dec
lods
aaa
jne
popa
add
jb
add
cmp
ljmp
ss
sar
inc
add
or
inc
clc
or
scas
xchg
loope
cmpsl
clc
lret
out
ja
dec
shll
add
xchg
sahf
cmpsb
clc
xbegin
test
add
add
nop
mov
pop
jo
add
cmp
into
dec
dec
xor
add
or
add
mov
add
clc
addr16
dec
add
add
jo
add
ret
clc
ljmp
add
out
push
adc
add
mov
jmp
add
or
data16
enter
add
add
mov
cmp
pop
ret
clc
int
daa
clc
push
inc
clc
and
repnz
adc
add
dec
xor
inc
clc
mov
clc
sub
inc
add
mov
add
xlat
pop
ss
xchg
sbb
mov
add
pop
clc
inc
clc
push
aad
clc
es
inc
clc
jge
mov
stos
in
test
stos
rolb
fwait
pop
lahf
dec
cmp
jecxz
mov
mov
pop
in
dec
outsb
pop
ret
clc
call
sbb
add
xor
add
add
int
jecxz
cmp
cmp
call
jb
add
xor
or
add
sub
and
hlt
hlt
jb
add
clc
or
jnp
mov
add
arpl
add
add
clc
sahf
add
clc
cs
stc
push
jp
and
add
dec
fcmove
inc
add
divl
incl
add
clc
mov
push
add
fdivl
sbb
cmp
fs
ret
sbb
xchg
pop
push
sub
clc
adc
add
add
mov
jg
push
xabort
add
out
adc
add
sub
push
lret
lret
sbb
xlat
enter
clc
inc
add
push
push
jae
add
sar
fidivl
fs
and
add
add
jge
xor
add
push
push
clc
adc
dec
push
add
pop
clc
arpl
add
sahf
pop
out
mov
inc
clc
lock
add
sub
pop
add
add
popa
add
loope
push
jl
popa
add
push
daa
clc
js
clc
cmp
jl
clc
cmp
fdiv
aas
jg
push
clc
test
fwait
xor
cmpsl
clc
test
pop
ret
clc
fcompl
fwait
adc
add
xor
add
fucomi
test
mov
add
add
and
add
clc
popa
add
pop
clc
mov
clc
sar
fstpt
adc
add
push
add
adc
add
inc
add
xlat
cmp
clc
out
inc
clc
ret
xchg
icebp
insb
fdivrs
clc
sub
add
jbe
sbb
add
stos
mov
clc
rclb
mov
repnz
ljmp
add
and
add
test
mov
sahf
mov
add
stos
xchg
test
pop
inc
add
ja
add
test
cld
sahf
cltd
jae
add
mov
int
clc
mov
out
jp
jp
ljmp
into
popa
add
dec
clc
ret
clc
mov
fisubrl
pusha
add
push
mov
loopne
repz
add
pop
clc
xchg
and
and
add
mov
data16
ds
clc
push
mov
add
push
jp
sarl
mov
stos
sub
add
add
clc
or
add
mov
add
rolb
add
push
clc
out
data16
add
add
clc
lret
stc
fdivr
push
xor
add
sbb
add
mov
popa
add
sbb
knotw
mov
cld
into
std
in
mov
out
popf
sbb
imul
add
add
xchg
das
imul
adc
add
sbb
lcall
add
je
sbb
fs
xchg
icebp
jle
add
and
add
push
add
add
add
push
pavgb
in
jecxz
add
add
pop
xor
add
jmp
mov
clc
repz
gs
dec
add
add
clc
mov
clc
mov
cwtl
cmpsb
clc
xabort
or
clc
jle
and
add
clc
popf
cmc
fildl
add
data16
fisttpll
icebp
mov
clc
xor
add
add
add
add
add
add
dec
je
loope
sbb
push
add
stos
sar
jmp
add
clc
mov
bnd
clc
repnz
stos
jno
add
clc
jno
add
add
nop
js
jecxz
xor
add
add
mov
add
fbld
add
adc
add
and
add
clc
jp
add
aam
clc
sbb
add
test
cs
or
add
xor
add
mov
or
sub
mov
pop
sbb
clc
incb
add
and
inc
clc
and
add
dec
add
add
add
mov
outsl
mov
sub
pop
mov
divb
maskmovq
clc
mov
add
push
iret
jmp
test
cmp
mov
mov
clc
sar
inc
clc
clc
push
mov
clc
mov
inc
clc
leave
sbb
cld
pusha
add
test
scas
mov
clc
jae
add
outsb
std
inc
clc
jmp
mov
jl
jbe
adc
clc
jmp
add
pop
cmpsb
clc
out
xor
adc
add
add
jg
xor
add
add
mov
add
lret
dec
gs
test
movsl
clc
outsb
lock
rcr
ret
and
ljmp
ficomps
clc
xlat
clc
loope
test
data16
mov
clc
cmp
pop
loopne
mov
clc
inc
add
ficoms
mov
add
sub
add
movsl
clc
cmp
jle
loope
js
add
dec
xor
add
mov
cmp
sbb
add
add
add
sti
mov
add
enter
cmc
clc
test
clc
int
clc
sbb
dec
sbb
lock
cltd
aam
out
daa
clc
push
add
mov
sbb
jae
add
mov
clc
sub
cmp
and
add
fldt
inc
add
jo
add
cmp
xchg
ret
in
push
sahf
call
arpl
add
add
or
bound
add
bound
add
clc
dec
out
xchg
fistpll
sbb
clc
out
sub
sahf
std
pop
xchg
aad
insl
sub
imul
add
cmpsb
clc
cltd
dec
test
cmp
shl
or
add
clc
icebp
sub
xchg
sub
mov
clc
cmpsb
clc
push
xor
add
aas
test
stc
cmp
clc
mov
xchg
xor
and
add
movsl
clc
xchg
jmp
pop
out
fdivs
xor
add
clc
sbb
inc
clc
lret
and
add
add
add
scas
bound
add
imul
add
sarl
mov
add
test
adc
add
outsl
mov
iret
es
sbb
add
sbb
jnp
pusha
add
not
ret
add
mov
adc
add
jmp
adc
add
lea
popa
add
sbb
add
or
mov
xchg
repz
hlt
sbb
clc
addr16
fistps
testb
clc
clc
jp
inc
add
push
test
scas
push
add
or
shrl
mov
clc
xor
add
cwtl
call
pop
mov
out
popa
add
repz
fucomi
mov
addr16
adc
add
pop
mov
jmp
clc
cmp
loope
sub
cltd
sti
data16
call
add
adc
add
imul
add
into
cmp
popf
cli
push
clc
xchg
push
bound
add
push
add
in
lea
jmp
inc
add
push
jmp
pop
jge
ja
pop
cmp
and
add
ret
clc
push
add
popf
or
jns
jb
add
pop
insl
ss
cld
push
add
in
jle
add
add
cmp
aam
clc
mov
and
add
fidivs
mov
aas
lods
jmp
clc
pop
clc
dec
das
xchg
aam
jmp
aas
iret
push
add
mov
clc
sub
clc
push
lods
out
das
and
adc
inc
add
loope
stos
mov
cmc
decl
dec
sub
adc
clc
lea
sbb
xchg
push
test
add
ret
clc
jb
add
clc
test
add
add
or
clc
fstp
and
add
lock
xchg
test
add
add
ficoms
stos
cmp
clc
fsubl
jecxz
int
mov
inc
clc
faddl
add
insl
inc
clc
add
add
inc
clc
adc
add
add
bound
add
add
add
mov
add
push
addr16
mov
icebp
jbe
and
add
outsb
dec
es
mov
or
imul
clc
imul
int3
mov
add
adc
call
scas
and
xchg
adc
add
loopne
leave
sar
clc
out
stc
xchg
popa
add
sar
push
clc
add
add
add
add
fnstcw
push
add
into
pop
jno
add
std
add
add
jnp
cmpsl
clc
pop
ds
clc
out
ss
clc
dec
pop
xbegin
add
jbe
xlat
push
xchg
jecxz
xbegin
sbb
add
jl
aas
testl
aaa
mull
add
adc
add
or
add
clc
sar
clc
clc
add
add
and
add
into
cmp
mov
xchg
bound
add
clc
push
add
dec
pop
hlt
push
add
repz
clc
popa
add
add
inc
add
popf
gs
outsb
sarl
inc
add
xbegin
pop
cs
xor
add
add
mov
clc
ret
clc
or
fidivrl
pop
sub
arpl
add
add
xchg
mov
int
sub
loope
jl
int
xchg
xchg
adc
clc
out
xchg
mov
dec
fsubl
leave
loop
repnz
jmp
clc
std
adc
add
pop
adc
add
pop
xchg
cwtl
jnp
int
add
xor
add
clc
push
popf
imul
adc
add
push
clc
ret
mov
out
mov
clc
push
shll
add
icebp
notl
xchg
xchg
mov
xor
lock
add
pop
jnp
clc
insb
js
add
push
clc
dec
mov
clc
scas
scas
or
jge
mov
and
sub
clc
test
mov
add
mov
fistps
add
add
repnz
sub
clc
fsts
sti
or
sahf
sbb
ljmp
es
hlt
jo
add
clc
stos
inc
clc
xbegin
add
mov
cmp
push
add
xchg
pop
insb
push
add
aam
jp
add
add
clc
xor
add
add
add
inc
add
sbb
lcall
das
loope
push
add
int3
add
add
mov
nop
movsl
clc
sbb
add
cwtl
cltd
dec
repz
cli
cmp
clc
std
ffree
clc
inc
clc
cmp
clc
mov
add
push
jg
int3
sar
out
pop
insb
imulb
add
jns
lahf
movsl
clc
pop
pop
cmp
xor
add
add
add
xabort
das
fdivs
clc
pop
inc
add
aam
mov
pop
push
aam
sbb
or
test
loope
sub
xchg
ljmp
int
or
cs
pop
mov
jle
stc
pop
fiadds
add
in
push
mov
dec
into
dec
fwait
mov
add
add
outsl
cltd
mov
sbb
lahf
add
add
clc
ja
clc
mov
add
mov
push
in
int
add
rcll
add
outsl
sub
sub
add
out
mov
push
in
test
sahf
sbb
add
adc
add
cmp
jg
sahf
mov
pushf
ljmp
push
push
shl
clc
cwtl
xor
add
jnp
jmp
clc
insl
sar
iret
bound
add
fstpt
add
add
clc
inc
add
pusha
add
ds
outsb
mov
adc
sar
sub
jl
shrl
pusha
add
or
mov
add
sar
xor
add
add
add
in
ds
add
push
add
ja
pop
sbb
clc
mov
std
idiv
bound
add
and
add
out
mov
lea
add
into
out
pop
int
iret
jae
add
push
add
mov
mov
clc
aad
xor
add
sbb
add
das
cmc
nop
jb
add
test
cld
pop
mov
push
xor
add
jge
cmpsl
clc
dec
and
add
loop
jbe
out
outsl
or
or
add
mov
and
add
add
in
scas
pop
pushf
insl
cs
add
cmpsb
clc
test
pop
clc
or
sar
loope
push
add
adc
add
jo
add
jp
xchg
sub
cmp
daa
clc
shrl
push
enter
push
nop
pop
cmp
fnsave
add
pushf
sub
add
mov
cmpsb
clc
sbb
add
add
add
pop
pop
scas
pop
xchg
sbb
pop
out
ret
clc
or
pushf
mov
lea
mov
xor
add
sbb
lcall
clc
ja
ret
clc
idivb
inc
add
rcrl
arpl
add
aaa
nop
mov
bound
add
jp
add
cmpsl
clc
mov
in
out
pop
cli
cmp
sbb
inc
clc
sar
clc
mov
clc
dec
out
xchg
and
add
clc
mov
or
clc
data16
fldenv
add
mov
add
sub
push
pusha
add
mov
clc
jno
add
clc
mov
sub
add
popa
add
scas
ss
ret
clc
cmpsb
clc
sub
lock
test
sub
add
mov
and
add
add
lcall
adc
clc
jnp
dec
push
add
mov
clc
and
cmp
clc
jne
clc
hlt
and
stos
mov
xbegin
dec
mov
clc
and
add
xor
add
cmp
pop
pop
clc
cld
jge
clc
mov
stos
mov
inc
add
call
clc
xor
or
mov
add
add
add
and
add
mov
jmp
hlt
adc
add
cmpsl
clc
out
inc
clc
and
mov
clc
pop
sar
mov
cld
xabort
or
pop
out
xor
add
cwtl
rolb
je
clc
test
cmp
pop
popf
pop
clc
cltd
fxch
rcll
mov
add
fs
out
inc
clc
jbe
mov
clc
jl
add
jle
stos
icebp
repnz
insl
pop
sar
add
inc
clc
xor
add
mov
mov
and
add
add
xor
add
clc
jle
mov
in
fildll
test
inc
clc
or
add
add
icebp
cltd
scas
push
mov
mov
pop
clc
mov
push
clc
lahf
push
pop
adc
add
xor
add
add
xchg
jno
add
clc
push
aaa
sbb
stos
dec
lock
in
ffree
clc
lcall
negl
sub
add
mov
xchg
popa
add
jecxz
sub
clc
xlat
xor
bound
add
clc
pop
sahf
pop
cmp
mov
gs
outsl
fldenv
mov
inc
clc
adc
cmp
data16
sub
fisttpll
pusha
add
aas
jmp
jbe
add
xchg
int
mov
clc
sub
int3
add
add
stc
icebp
loopne
int3
inc
clc
mov
jg
jae,pt
add
add
ffreep
clc
clc
push
clc
ja
add
outsl
cmp
mov
movsb
clc
pop
repz
cmp
js
sbb
clc
sbb
call
clc
cmp
clc
or
test
sbb
clc
shrl
add
in
xor
add
add
clc
jns
add
popa
add
xchg
ss
dec
add
add
sbb
mov
pop
mov
clc
mov
and
add
lahf
or
mov
clc
pushf
divl
clc
jnp
mov
out
fisttpl
cmp
xor
clc
adc
add
cwtl
movsl
clc
ds
push
clc
push
add
cmp
pusha
add
xchg
lock
clc
test
es
dec
lahf
cmp
xlat
xbegin
dec
outsl
sahf
push
add
cmp
add
test
insl
loopne
cmc
daa
clc
mov
pop
jno
add
add
stc
pusha
add
aam
add
mov
clc
push
clc
jo
add
push
add
idivb
pop
xabort
clc
cwtl
sub
fsubl
add
add
in
aad
clc
jno
add
incl
popa
add
add
add
add
cmp
js
dec
out
inc
clc
jo
add
xabort
scas
sbb
das
loope
lahf
mov
test
and
nop
fadd
clc
cmp
add
add
movsl
clc
repz
add
jo
add
add
jns
add
pop
cmp
sub
clc
cmp
repz
jae
add
clc
jns
xabort
aam
xchg
bndstx
pop
mov
add
idiv
pop
clc
xabort
mov
jp
clc
sar
jb
add
dec
dec
cltd
rol
clc
scas
stc
and
add
cmp
add
test
stos
fldl
add
and
add
imul
sub
inc
add
arpl
add
xchg
in
dec
mov
cltd
insb
test
pop
xlat
mov
mov
jl
clc
loope
test
lret
lahf
cmp
clc
popl
add
data16
adc
add
xor
add
add
daa
clc
pop
add
add
clc
dec
fidivl
jne
cmpsb
clc
icebp
aad
cmp
sbb
clc
sbb
inc
clc
sar
or
out
inc
add
sar
sbb
pop
dec
push
add
xor
clc
je
pop
jne
xlat
das
push
clc
mov
jne
leave
inc
clc
mov
ja
mov
sbb
add
clc
mov
out
xchg
fcomp
ss
inc
add
or
mov
add
add
clc
test
jecxz
enter
repz
add
shlb
add
push
scas
mov
mov
sbb
mov
daa
clc
popf
inc
add
into
xchg
stos
cmpsl
clc
sub
pop
aaa
lret
dec
dec
push
arpl
add
mov
jns
and
add
clc
lret
hlt
adc
test
movsb
clc
dec
adc
ficompl
mov
aam
fs
jle
test
push
add
sti
mov
pop
jp
inc
clc
pop
push
clc
push
add
bound
add
add
clc
push
xlat
xchg
pop
gs
sub
clc
stc
inc
clc
cmc
jb
add
add
or
add
shrl
add
add
pop
jle
mov
jnp
clc
cli
jbe
add
fisttps
adc
add
test
pop
or
and
add
push
loope
sub
lock
add
or
inc
add
sar
jge
jnp
clc
dec
add
add
scas
push
add
jge
push
sbb
cmp
clc
jbe
rcrl
jo
add
clc
xchg
sub
test
fs
jns
icebp
pop
cmp
clc
and
add
add
add
popl
add
jno
add
aas
stos
icebp
add
add
cmp
shll
clc
int3
mov
in
nop
outsl
cli
push
fsubrs
fs
es
pop
pop
addr16
dec
mov
lock
xchg
jno
add
push
add
pop
mov
lret
scas
popa
add
xchg
loopne
and
add
fadds
clc
mov
jbe
mov
add
lock
add
bound
add
adc
add
js
aad
sbb
mov
jae
add
jo
add
lret
sarb
add
add
cltd
mov
clc
je
aam
pop
add
add
sub
jl
xchg
outsb
or
add
lods
cld
movsl
clc
xchg
mov
pop
loopne
popf
lret
loope
push
cmp
ret
adc
clc
insb
add
add
pop
mov
mov
or
jne
push
xor
add
clc
inc
clc
xor
add
sub
mov
gs
stc
js
jo
add
fcoms
aas
filds
add
mov
clc
ficoms
stos
cmc
xor
add
push
add
push
sub
in
aaa
mov
jb
add
outsb
sbb
lret
add
pop
adc
add
fisttpl
cmp
dec
mov
jecxz
push
pusha
add
xabort
clc
add
add
add
push
sbb
sbb
aas
stc
pushf
aam
clc
fs
out
test
mov
clc
rclb
in
sub
das
pop
cmpsl
clc
outsl
cmp
bound
add
clc
push
insb
popf
add
add
filds
clc
insb
dec
testb
pushf
pop
fs
jge
and
add
jbe
sub
add
jle
add
dec
vcmpnge_uqps
popf
jmp
xbegin
xor
add
clc
das
in
mov
scas
mul
clc
push
mov
clc
or
daa
clc
mov
stos
dec
mov
add
add
add
add
add
cltd
clc
data16
pop
pusha
add
push
add
cmp
hlt
or
repnz
xabort
stos
lea
pop
mov
loopne
xchg
adc
add
daa
clc
cmp
stos
or
pop
jbe
sbb
clc
in
lahf
in
lods
pop
arpl
add
lahf
pusha
add
mov
pop
out
imul
xchg
pop
pop
scas
test
pop
arpl
add
mov
and
add
js
lahf
iret
jmp
cwtl
and
or
add
jns
add
dec
ret
clc
dec
adc
add
cwtl
sub
out
cli
test
sub
add
iret
xchg
or
add
loop
aad
clc
icebp
jo
add
jnp
jecxz
sub
add
movsl
clc
data16
fs
aam
add
imul
add
mov
clc
ljmp
sbb
or
mov
aam
sbb
movsb
clc
and
add
pop
inc
clc
or
mov
icebp
cmp
ss
add
adc
mov
inc
clc
pop
fs
divl
xlat
pop
push
add
xor
add
add
push
outsb
or
add
testl
add
add
ret
cli
iret
ret
clc
xchg
mov
ss
sub
add
xchg
xchg
jae
add
mov
adc
iret
cli
ljmp
clc
fmul
xor
add
add
or
ljmp
test
fwait
lods
fdivrs
clc
pop
cmpsl
clc
sub
jo
add
out
addr16
jg
icebp
xor
add
mov
clc
in
dec
adc
ss
movsb
clc
fs
lret
rcrb
jbe
cli
jb
add
add
pop
clc
jno
add
sbb
sub
push
fidivrl
inc
clc
dec
mov
push
sbb
add
mov
xor
dec
add
add
clc
daa
clc
fcmovne
fstps
mulb
add
add
arpl
add
insb
mov
or
clc
xor
add
clc
mov
fstpl
test
add
ret
clc
lods
inc
clc
sub
clc
pusha
add
inc
add
clc
sar
add
dec
loopne
xchg
adc
inc
add
imul
cmpsb
clc
fsub
clc
xchg
xchg
or
and
or
add
push
push
add
or
jg
cmp
clc
mov
imul
clc
xchg
leave
cwtl
bound
add
mov
pop
ffree
clc
cmp
add
in
push
scas
dec
fcmovbe
sbb
clc
daa
clc
scas
add
add
call
push
cmp
out
cli
push
xlat
xchg
mov
mov
sahf
enter
add
cmp
data16
mov
clc
mov
cmp
add
clc
aaa
das
and
ret
clc
outsl
mov
cld
fwait
movsb
clc
push
cmp
lock
add
dec
mov
add
pop
jp
pop
clc
and
bound
add
ss
clc
pop
mov
clc
xlat
cmp
add
mov
and
add
outsl
hlt
inc
clc
xchg
ja
ds
cwtl
lods
dec
push
add
sar
clc
pusha
add
lock
add
test
aas
out
ljmp
mov
add
test
outsl
lahf
and
and
add
add
add
add
add
clc
sar
jle
mov
xchg
push
call
arpl
add
clc
jnp
pop
std
cmp
clc
clc
stos
pop
sar
clc
push
add
mov
mov
ljmp
or
add
test
xlat
jmp
das
cmpsb
clc
cmp
test
jge
inc
clc
lahf
jecxz
inc
clc
ljmp
add
add
clc
enter
fcompl
add
cmp
sbb
pop
nop
psllq
clc
xor
add
clc
aaa
std
mov
cmp
repz
cli
lcall
and
add
jmp
cmp
inc
add
ss
add
and
jns
push
add
je
clc
pushf
clc
mov
js
dec
data16
lahf
out
es
adc
add
add
mov
iret
mov
cmpsb
clc
or
pop
clc
jno
add
sub
clc
mov
inc
add
cli
fs
arpl
add
clc
movsb
clc
xchg
out
lcall
clc
and
add
test
xabort
in
push
add
adc
add
add
xor
add
shr
mov
pop
clc
jmp
inc
clc
push
xchg
inc
clc
xchg
jp
lock
clc
shll
pop
stos
jmp
and
dec
mov
add
xchg
notl
add
add
add
push
add
jge
js
dec
in
mov
clc
inc
add
push
clc
sbb
mov
add
cmp
mov
es
lahf
sbb
lret
add
fiadds
add
clc
xchg
dec
xbegin
add
insb
jne
clc
pop
or
add
lea
pop
dec
pop
enter
cmpsl
clc
jbe
xor
add
es
ljmp
sahf
xor
sub
jnp
clc
mov
clc
in
out
cltd
fwait
pushf
and
add
js
clc
scas
outsl
cmp
clc
aam
xbegin
add
push
sar
cmp
add
mov
shll
cmpsb
clc
aam
clc
bound
add
pushf
arpl
add
xchg
adc
add
sbb
clc
xchg
mov
add
or
mov
popf
lods
jl
add
je
loope
xchg
xor
cmpsl
clc
sti
mov
cmp
test
out
out
xchg
or
loopne
mov
lret
push
test
clc
inc
add
jo
add
xchg
or
push
enter
add
outsl
mov
and
int3
fcompl
popf
in
popf
adc
add
ret
clc
cs
inc
add
jnp
inc
clc
ss
icebp
imul
psubusw
mov
jbe
nop
fiadds
and
sahf
jmp
push
movsb
clc
lods
iret
or
push
sbb
clc
imul
jns
movsl
clc
out
lahf
mov
add
insb
setno
add
sub
clc
ljmp
clc
ret
clc
add
or
cmc
push
mov
push
ja
add
mov
clc
jp
push
add
jns
clc
and
add
clc
lock
adc
add
data16
fimull
add
add
mov
outsl
inc
add
push
add
movsl
clc
cmp
sar
add
cmp
add
jg
xchg
pop
cmpsb
clc
mov
add
push
jo
add
mov
clc
and
add
std
push
lahf
pop
clc
insl
add
add
cmp
clc
repz
fcmovb
clc
dec
mov
lahf
push
test
into
loop
inc
add
or
shll
add
add
clc
dec
push
mov
clc
sete
jns
xchg
sub
clc
mov
cmp
clc
ljmp
adc
push
mov
roll
clc
sbb
push
clc
popa
add
iret
adc
add
add
cmp
mov
add
or
aas
cmp
clc
pop
aad
add
push
call
sbb
adc
in
sub
add
aaa
bound
add
add
fdivl
add
clc
fmul
add
add
out
loopne
pop
clc
or
add
adc
add
add
mov
jbe
mul
clc
jbe
add
sbb
clc
aas
jno
add
xchg
xor
add
es
mov
fnsave
add
iret
xor
clc
clc
gs
sarl
call
clc
push
mov
add
xchg
and
add
inc
add
mov
cmp
push
add
cmp
pop
ss
add
in
pop
es
lret
or
clc
add
inc
add
dec
dec
add
add
dec
jae
add
inc
add
mov
cmpsb
clc
jl
add
sub
imul
adc
add
mov
add
pop
inc
clc
fcompl
clc
adc
add
cltd
mov
repz
add
fidivs
add
clc
and
jge
add
jbe
sbb
add
add
add
lahf
fwait
jmp
scas
push
clc
jmp
add
and
cmpsb
clc
ficoml
jmp
ret
push
add
mov
inc
add
sbb
popa
add
mov
add
push
je
clc
inc
add
jmp
cld
mov
es
mov
sub
clc
sar
mov
dec
lret
ljmp
repnz
add
xor
repnz
pop
repz
sar
insb
xchg
sbb
mov
enter
out
in
lahf
mov
add
or
loopne
lods
loop
cmp
stos
pushf
jnp
jle
hlt
push
add
push
push
outsb
bound
add
jne
cmpsb
clc
jae
add
add
jecxz
push
add
mov
clc
loope
mov
add
or
clc
ljmp
sub
inc
add
bound
add
add
cmp
lret
lcall
clc
cltd
or
jae
add
cltd
mov
push
add
hlt
lea
jo
add
clc
gs
jns
add
pop
mov
dec
pushf
cmp
jbe
push
mov
mov
mov
popa
add
inc
clc
addr16
nopl
add
add
mov
add
aad
xabort
fidivrl
test
cmp
add
sbb
add
inc
clc
dec
std
jmp
push
push
add
mov
notl
add
jge
ret
clc
push
clc
cmp
arpl
add
insl
and
cmp
xor
add
clc
inc
clc
gs
call
xor
mov
and
add
add
add
xor
sbb
clc
add
add
adc
add
add
add
addr16
insb
sub
mov
add
sub
cld
jo
add
add
jo
add
repnz
es
fs
mov
lahf
data16
in
cli
psubq
clc
cmp
push
sar
es
mov
add
lea
add
inc
add
mov
add
data16
inc
clc
addr16
lods
xchg
or
mov
mov
sahf
data16
pop
clc
push
add
mov
test
xor
mov
ret
pop
pop
pop
lods
das
cltd
cmp
clc
inc
add
in
test
inc
clc
push
add
lock
inc
clc
dec
or
push
add
mov
add
add
add
cs
ret
clc
adc
add
mov
pop
into
lret
dec
cmp
add
add
sbb
add
and
add
add
mov
clc
sbb
cmp
add
sar
clc
add
add
test
pop
test
add
inc
add
cmp
clc
xbegin
rcrb
leave
bound
add
aas
mov
mov
fs
xchg
std
fdivrl
mov
add
mov
movsb
clc
pop
mov
lock
dec
pop
insl
add
add
clc
clc
jmp
lea
outsb
cmp
ret
clc
mov
sahf
inc
add
into
popa
add
xor
and
inc
clc
inc
add
pop
clc
popf
cs
or
cwtl
adc
clc
mov
clc
xchg
ret
clc
inc
add
mov
add
mov
xor
add
clc
mov
add
push
bound
add
add
cmp
push
add
and
loopne
xor
add
add
pop
xor
add
add
add
push
push
fmull
xchg
arpl
add
add
or
imul
clc
cli
mov
xchg
add
add
add
jnp
add
out
cmp
jne
add
sahf
jno
add
add
in
mov
xchg
rcr
lods
or
clc
dec
fiadds
add
add
mov
clc
hlt
mov
add
clc
or
add
mov
clc
ljmp
xor
add
adc
add
clc
push
movsl
clc
in
jle
sti
jmp
adc
add
clc
xchg
jmp
pop
lret
loope
arpl
add
xbegin
ja
jno
add
cmp
pop
or
add
push
clc
scas
call
lods
popf
enter
sub
inc
add
fmuls
add
clc
or
push
fs
cs
xchg
mov
sub
clc
push
jecxz
std
push
or
add
clc
in
fs
sub
add
imul
add
jno
add
clc
fstpl
pop
notl
dec
jne
pop
mov
add
jno
add
add
stos
push
jecxz
into
push
add
fwait
cmpsb
clc
adc
add
shlb
push
shr
nop
or
push
pop
add
add
add
dec
adc
popa
add
mov
push
add
pusha
add
es
and
add
xchg
push
add
or
add
add
je
add
fnstenv
sub
sar
add
inc
clc
loopne
inc
clc
and
fcomi
pop
xor
add
jmp
clc
cmpsb
clc
rol
clc
adc
add
arpl
add
clc
shll
jle
push
push
test
push
fsubl
popf
dec
or
add
cltd
inc
add
or
repz
or
clc
scas
inc
clc
jg
fsubrp
mov
cmp
add
pop
mov
cmp
mov
add
movsb
clc
cmp
in
push
cs
add
int3
or
stos
xbegin
pop
mov
dec
enter
pop
and
enter
shlb
das
mov
push
cltd
arpl
add
fadd
clc
cld
cmc
nop
mov
ljmp
add
jnp
clc
or
cmp
clc
xchg
dec
push
add
sbb
add
cmc
mov
movsl
clc
cwtl
jno
add
jnp
js
xor
add
clc
out
and
clc
mov
sbb
clc
inc
clc
outsl
xor
add
inc
clc
sub
clc
jmp
sub
fcompl
cmp
rclb
add
int
clc
clc
sahf
or
ds
mov
add
inc
add
mov
add
fsubrl
clc
sbb
add
inc
add
push
add
add
mov
mov
add
jmp
clc
out
sub
fdivrl
dec
into
repz
sbb
clc
fidivs
js
ja
xabort
clc
test
clc
fs
insl
and
inc
add
cmp
nop
dec
cmp
cmc
lods
inc
clc
std
sahf
add
add
sti
inc
add
mull
ljmp
add
shlb
clc
sbb
clc
adc
add
clc
sub
add
gs
push
add
push
add
pop
mov
and
add
xor
clc
mov
add
mov
clc
dec
movsl
clc
imul
stc
data16
mov
add
into
into
cs
clc
and
add
jb
add
clc
sbb
cmp
dec
frstor
adc
add
mov
add
jp
sbb
adc
add
mov
add
clc
cmp
xor
add
jns
jge
add
add
iret
jmp
add
clc
outsl
clc
inc
clc
mov
pop
fldcw
mov
lods
out
lea
cs
ss
clc
aaa
cltd
push
add
add
sbb
mov
add
push
add
call
clc
ficoml
add
jle
daa
clc
jp
clc
cltd
into
mov
sbb
add
cld
xchg
jbe
in
fisubl
dec
xchg
cli
gs
cmp
add
cmp
outsl
mov
sahf
out
ret
lock
inc
clc
lcall
aas
sahf
add
add
add
adc
xchg
sahf
ss
and
add
inc
add
mov
mov
mov
in
test
lret
jle
jecxz
push
dec
mov
clc
xchg
mov
clc
pop
fs
sub
dec
test
sub
clc
scas
or
ret
clc
xchg
ja
in
into
arpl
add
into
pop
clc
lret
pop
outsb
cltd
push
jmp
add
clc
leave
out
mov
jo
add
mov
dec
sub
clc
pusha
add
dec
mov
clc
dec
jno
add
nop
xchg
and
add
iret
mov
iret
push
xchg
pushl
js
push
inc
clc
fistps
mov
movsb
clc
push
out
bound
add
xor
add
adc
add
cld
sub
add
je
add
push
add
adc
add
pop
jl
mov
sbb
add
in
pop
gs
es
pop
pushf
rolb
lock
add
add
mov
sbb
mov
cmp
add
pop
push
add
leave
adc
clc
jae
add
push
mov
enter
clc
rorb
clc
xchg
repz
pop
mov
xchg
xchg
mov
ss
xabort
add
add
inc
clc
icebp
imul
xor
add
out
aas
js
xbegin
clc
cmp
clc
mov
push
add
pop
sbb
mov
rcll
scas
or
ss
sbb
mov
clc
aaa
pop
stos
aaa
into
jl
clc
stos
in
test
push
add
pop
js
or
clc
pop
sub
clc
mov
jns
clc
push
and
add
add
div
sti
xchg
pop
dec
sbb
sti
ds
jae
add
mov
add
jae
add
inc
add
cmc
cmp
add
cmp
add
pop
shr
push
decl
clc
fstp
pop
nop
daa
clc
mov
clc
jp
movsl
clc
mov
dec
mov
and
add
add
sar
adc
add
add
add
and
clc
fiaddl
clc
mov
and
add
jo
add
add
sahf
sub
cltd
js
or
notl
add
sbb
xor
xabort
loop
imull
popa
add
inc
clc
add
add
insl
mov
clc
daa
clc
stc
inc
add
notl
dec
sti
inc
add
call
fdivrl
pop
jl
sub
mov
fs
inc
clc
xchg
sar
ficoms
sbb
fstl
add
xchg
rcrb
fists
clc
ja
jo
add
dec
lret
bound
add
mov
mov
fnstsw
xor
add
xchg
shl
fisubs
clc
jecxz
bound
add
adc
push
clc
mov
das
int
repnz
clc
aam
add
sbb
scas
push
xor
clc
ljmp
sti
clc
and
add
add
inc
add
sub
mov
clc
xabort
mov
stos
jmp
clc
jl
clc
cld
push
add
rolb
scas
sub
add
clc
sbb
add
push
outsb
mov
add
jbe
mov
or
adc
add
in
push
clc
ja
push
cli
fs
or
pop
clc
out
sbb
add
jae
add
add
jmp
add
push
add
jo
add
dec
pop
mov
clc
and
add
nop
and
add
push
mov
and
add
sub
popf
fildll
pop
clc
mov
jnp
push
add
or
adc
add
rcl
or
js
push
out
and
add
xbegin
add
fs
sub
ss
push
add
mov
lcall
push
cmc
movsl
clc
jge
add
and
add
lcall
clc
fs
ja
mov
loope
test
xor
add
clc
clc
sbb
mov
dec
cmp
clc
jp
clc
sbb
cmpsl
clc
xor
add
push
xor
aam
push
add
add
add
lret
test
jno
add
jae
add
mov
mov
sbb
clc
enter
clc
and
sar
clc
sar
mov
add
jne
add
inc
clc
cmp
cld
and
push
clc
hlt
mov
add
inc
add
data16
cli
xchg
fcmovnb
clc
ret
lret
clc
mov
or
jl
cmc
not
inc
add
mov
add
clc
frstor
add
sub
sbb
int3
test
inc
clc
sar
es
xchg
pop
add
add
mov
add
mov
or
bound
add
clc
mov
test
nop
push
add
mov
clc
mov
clc
inc
add
es
in
mov
sub
adc
add
clc
cmc
xchg
jo
add
or
inc
clc
pop
es
inc
clc
das
jecxz
cmp
cmp
cmc
xor
add
clc
adc
xchg
and
add
add
pop
lcall
sar
add
add
popa
add
cld
mov
cmp
xchg
stc
rorl
mov
xchg
add
add
sub
add
scas
pop
jo
add
clc
clc
repnz
int3
pop
clc
imul
stos
hlt
inc
add
imul
push
jno
add
add
out
mov
jno
add
pop
mov
add
cwtl
lods
pop
push
xchg
jo
add
and
add
add
iret
dec
mov
dec
mov
ds
mov
push
or
clc
or
lea
or
add
or
push
add
xbegin
pop
push
in
sti
inc
add
daa
clc
xchg
sub
clc
ds
mov
clc
sub
add
sti
mov
clc
test
xchg
xabort
int3
mov
add
adc
add
mov
call
add
stos
fcom
pop
cmp
xchg
pop
bound
add
add
clc
dec
mov
add
sar
mov
cli
jb
add
imul
test
pop
mov
xor
add
ret
cld
call
add
add
pop
clc
xchg
and
add
mov
mov
data16
cs
push
add
cmp
clc
cmp
clc
xor
dec
into
sub
add
add
add
xor
clc
in
xchg
iret
xchg
repz
int
fidivl
clc
adc
cwtl
push
mov
xor
add
cld
jb
add
clc
addr16
mov
sbb
cmp
outsb
xor
add
mov
inc
clc
dec
movsb
clc
aaa
adc
add
clc
out
add
add
add
iret
push
add
inc
clc
lret
and
mov
js
or
add
or
and
add
clc
jle
add
sar
adc
cmpsl
clc
xor
outsb
push
add
test
das
cmp
loope
pop
inc
clc
fwait
cmp
add
dec
sbb
clc
dec
adc
add
sti
pop
cmp
in
and
add
mov
cmp
inc
clc
xchg
shlb
add
mov
push
sub
push
add
fists
add
inc
clc
popa
add
mov
add
clc
mov
add
in
pop
push
add
add
push
ljmp
gs
mov
add
divl
fisttpl
jae
add
clc
add
add
mov
fptan
clc
cmp
xor
add
test
mov
out
cmp
xchg
cmc
sbb
jmp
clc
sbb
and
or
pop
add
add
clc
jecxz
mov
xor
add
outsl
mov
in
gs
and
add
daa
clc
cmp
add
dec
pop
in
sub
or
dec
repz
clc
fdivrl
cmp
arpl
add
lret
out
mov
lret
in
popa
add
jo
add
add
mov
inc
clc
ret
add
ss
sbb
in
mov
clc
in
lahf
fsubrp
push
add
test
adc
stos
push
inc
clc
sar
call
hlt
mov
jb
add
xchg
push
add
cmp
add
int
push
sub
cmp
clc
cwtl
pop
repnz
add
mov
clc
add
xlat
out
inc
clc
sub
inc
add
fisubrl
shll
add
add
imul
into
scas
xor
add
add
pop
in
jno
add
add
pop
loop
lcall
add
adc
rcr
jl
mov
cmp
add
call
cmp
clc
in
out
push
add
ja
mov
add
jle
or
hlt
xor
add
imulb
add
clc
repnz
and
add
pop
dec
in
stc
push
add
sahf
xchg
fdivl
imul
xor
add
add
inc
clc
mov
int3
inc
clc
dec
movsl
clc
leave
filds
clc
stc
pushf
jmp
clc
sar
mov
xbegin
adc
add
sar
dec
add
add
add
or
clc
daa
clc
ret
pop
daa
clc
bnd
add
xchg
mov
pop
in
jmp
pop
ret
push
add
inc
clc
jne
cmp
or
add
movzwl
add
clc
pop
pop
daa
clc
into
inc
add
mov
add
cmp
lret
and
lods
aaa
testb
fcmovb
clc
pop
lea
test
cltd
icebp
ret
clc
mov
xor
add
clc
enter
add
sbb
add
add
add
js
addr16
shll
xor
clc
mov
add
sub
out
inc
clc
fstpt
dec
clc
mov
adc
add
add
add
push
outsl
sub
loop
pop
cmp
cmp
clc
in
pop
test
stos
jmp
clc
push
cmp
clc
in
cld
mov
add
sar
clc
aaa
fdivp
je
scas
or
clc
je
pop
inc
clc
cmp
add
xlat
pop
leave
mov
add
cwtl
repz
inc
clc
add
add
add
ss
push
add
mov
cmp
ljmp
lea
add
clc
mov
cmp
clc
xlat
mov
popf
xor
mov
pop
inc
add
addr16
stos
sahf
popf
int3
pop
fisttpll
cmp
repnz
adc
or
and
add
add
add
jb
add
pushf
pop
jmp
clc
rol
clc
sahf
cmpsb
clc
sbb
enter
add
add
add
pop
imul
into
push
mov
clc
mov
pop
pop
ficomps
jo
add
jns
clc
pop
or
gs
repz
xchg
out
out
inc
add
arpl
add
fs
shlb
clc
repz
es
cmpsb
clc
dec
push
add
popf
and
jbe
add
int3
adc
add
jbe
xchg
dec
xchg
fadds
add
shlb
pop
xor
aaa
inc
add
bound
add
mov
add
jnp
clc
test
aaa
aas
mov
push
dec
test
sub
add
pop
lret
push
add
daa
clc
sete
clc
mov
hlt
sti
xchg
jge
arpl
add
mov
rclb
add
rorl
lret
mov
clc
loope
sti
pusha
add
cld
or
add
jecxz
loop
mov
jns
aas
xor
add
mov
in
dec
insl
stos
xchg
dec
xchg
in
add
sub
sar
clc
xchg
repz
sub
add
mov
clc
jp
daa
clc
push
add
gs
out
fcmovu
xchg
mov
add
push
add
add
add
add
cld
dec
pop
jle
lret
add
clc
scas
in
sbb
clc
or
mov
bound
add
scas
xlat
xchg
push
mov
pop
cli
fidivs
add
hlt
jno
add
sbb
stc
repnz
adc
add
mov
mov
mov
sub
clc
xchg
or
clc
insl
gs
movsl
clc
out
sarb
repnz
in
sbb
inc
add
add
pop
repz
clc
faddl
add
cwtl
adc
add
push
in
add
add
add
lret
push
clc
fisubrl
cli
xchg
and
add
xchg
push
shlb
dec
cmpsb
clc
or
nop
imul
push
nop
fiadds
add
dec
xbegin
clc
adc
add
clc
push
inc
clc
repz
sbb
mov
enter
pop
mov
clc
repz
mov
add
hlt
sbb
clc
cmp
or
fidivrs
lock
add
pop
sbb
add
loopne
ss
clc
pop
sar
fcomp
out
and
add
sbb
lea
add
jp
add
sar
cli
xchg
mov
add
inc
clc
das
xchg
pop
test
movsl
clc
test
dec
fldl
add
dec
sub
clc
adc
add
lock
clc
or
clc
cltd
out
in
sub
cmpsb
clc
sahf
sub
clc
bnd
clc
pop
xlat
gs
inc
add
idiv
loop
clc
dec
ds
addr16
fisubrs
and
add
loop
sub
mov
lret
push
add
mov
mov
xchg
push
cmp
cmp
sub
xor
xchg
inc
add
outsl
sahf
inc
add
pop
dec
or
stos
out
sub
add
mov
clc
mov
mov
pop
push
daa
clc
dec
daa
clc
xchg
push
adc
add
cmp
movsl
clc
adc
add
inc
add
insb
jnp
sub
ds
call
mov
call
sar
clc
pop
bound
add
pushf
test
xchg
cmpsl
clc
and
fdivrs
outsb
je
imul
sub
jl
push
add
nop
mov
outsb
std
adc
clc
push
shlb
clc
cmp
push
pop
inc
clc
jmp
mov
xor
add
add
cltd
dec
mov
pop
fs
divb
add
scas
test
clc
lods
call
clc
jmp
jmp
clc
arpl
add
int
add
dec
add
add
mov
push
add
bound
add
ja
outsb
pop
or
clc
inc
add
es
jmp
mov
jl
es
divb
or
adc
add
mov
clc
cmp
out
arpl
add
mov
add
add
stos
scas
cs
pop
ja
movsl
clc
push
movsl
clc
repnz
push
clc
inc
add
jns
clc
data16
inc
add
mov
sub
clc
in
fsubl
add
int
sar
pushf
adc
add
stc
das
and
add
cmp
call
clc
lea
xchg
cmp
cmpsl
clc
mov
clc
jecxz
add
fstpl
cmp
clc
std
xlat
jge
add
xchg
mov
sbb
rcl
stc
pop
sar
add
cmp
add
clc
cli
repz
add
aad
cmp
push
add
negl
dec
stc
mov
inc
clc
xchg
arpl
add
cs
or
sub
loope
cltd
sub
clc
cmp
push
arpl
add
add
clc
cmp
in
rcl
xabort
clc
push
mov
fstpt
fildl
adc
add
sar
scas
cli
xchg
pop
jae
add
add
cli
push
out
cmp
mov
or
clc
sub
sub
push
mov
clc
sbb
test
clc
stos
pop
movzbl
rol
clc
cmp
and
add
clc
mov
mov
add
loope
xchg
into
jecxz
sbb
add
clc
lret
add
lods
inc
add
jnp
loopne
lahf
and
clc
mov
add
add
clc
fwait
insl
push
xor
add
clc
lret
add
cwtl
xchg
popa
add
cmp
pop
lea
jle
clc
or
into
inc
clc
and
add
adc
add
sar
add
inc
clc
outsl
xchg
add
clc
ret
popf
dec
dec
hlt
roll
loopne
and
add
cmpsb
clc
movsl
clc
xchg
sub
fisttps
and
sbb
dec
cli
aam
jae
add
clc
mov
jp
sar
push
adc
sbb
inc
add
or
add
sbb
clc
out
sub
add
ds
cmc
mov
dec
xchg
dec
in
icebp
in
ss
sar
xor
xchg
xlat
jnp
xchg
pop
fisttpll
loop
filds
add
lods
push
sar
imul
sbb
lea
test
mov
clc
push
mov
in
data16
sbb
xchg
in
xchg
dec
xchg
xbegin
add
es
jns
cli
xor
add
cmp
pusha
add
daa
clc
jmp
lcall
mov
clc
push
xchg
das
nop
aad
int
sub
mov
pop
dec
push
add
mov
mov
xor
add
ss
repnz
clc
jp
clc
cmp
add
out
mov
stos
jge
clc
cltd
adc
add
dec
lods
out
mov
clc
cmp
clc
stos
inc
clc
lahf
out
stos
and
add
pop
scas
mov
adc
add
mov
mull
adc
fimuls
ja
jle
cmpsb
clc
gs
mov
lahf
jo
add
jg
add
test
adc
push
ds
fs
pop
cmp
clc
insl
data16
cmpsb
clc
lock
nop
test
daa
clc
mov
aaa
sub
sbb
shr
lcall
lret
lret
push
cltd
imul
lea
add
in
jmp
add
add
xchg
fisttpll
movsl
clc
xor
inc
add
sub
or
cltd
sub
sub
inc
add
sub
js
inc
clc
sar
push
add
inc
clc
mov
dec
fsts
add
leave
imul
push
out
pop
and
add
push
shr
insl
xabort
mov
add
mov
add
in
loop
out
vmovups
add
add
imul
or
push
push
inc
clc
mov
clc
fsubrl
testl
roll
clc
sub
dec
xchg
pop
clc
add
call
mov
xchg
xlat
sbb
pushf
data16
daa
clc
jns
sbb
add
add
loop
inc
clc
sub
lea
xor
xabort
sbb
out
dec
mov
call
xchg
xchg
dec
inc
clc
dec
aaa
sub
clc
fcom
jb
add
add
into
pop
cmp
inc
clc
lret
cld
stos
pusha
add
fdivrp
sarl
add
or
cmp
addr16
cmpsl
clc
cli
inc
clc
xchg
cmp
pop
clc
cmp
fmuls
or
or
mov
test
cs
shlb
aad
add
aad
clc
dec
jg
xor
add
loopne
cmp
test
mov
jl
fs
dec
xor
add
mov
add
clc
dec
xchg
xor
add
pop
scas
mov
fcmovnbe
call
adc
add
rolb
jg
ret
xchg
mov
stc
test
rclb
clc
mov
aas
test
pop
popf
sar
clc
and
add
sub
add
lcall
call
lcall
xabort
xbegin
dec
std
adc
adc
add
stos
jnp
insl
cwtl
int3
fs
pop
clc
add
add
add
loope
test
sbb
add
lahf
adc
add
cmp
add
mov
and
add
add
cltd
cmp
ret
clc
lret
popf
das
add
pop
adc
inc
clc
xor
cld
nop
dec
and
add
cmp
dec
push
add
and
add
clc
shlb
pop
or
sub
rcr
rol
clc
cmp
mov
add
xchg
inc
clc
cmp
ss
clc
push
hlt
mov
clc
xchg
mov
dec
lret
je
loop
lahf
out
xor
clc
jo
add
push
cmp
in
mov
clc
inc
clc
testb
mov
add
clc
dec
push
test
dec
popa
add
cli
push
ss
mov
pop
clc
mov
das
inc
add
mulb
add
mov
sub
pop
clc
mov
add
pop
inc
clc
in
xchg
je
clc
sar
mov
add
fidivs
int3
into
sar
clc
lods
pop
not
xor
add
add
add
xchg
xor
add
std
mov
rclb
add
clc
mov
push
in
fistl
add
adc
add
add
mov
clc
mov
pop
mov
mov
and
xor
add
jg
xchg
add
add
pop
xchg
mov
cmp
clc
jo
add
clc
sbb
cmp
fldenv
clc
mov
mov
scas
sbb
jge
add
add
sub
insl
dec
xor
add
inc
clc
test
xchg
jnp
clc
ds
push
add
push
add
hlt
pusha
add
sar
push
add
pop
clc
pop
fistl
add
call
push
clc
int
add
into
jo
add
aaa
enter
and
add
mov
repnz
mov
add
fwait
or
fsubs
add
je
or
clc
mov
lods
sti
cld
cwtl
daa
clc
inc
clc
sbb
xbegin
imul
outsl
cmp
add
add
clc
fidivrs
cmpsb
clc
or
add
fcmovnbe
insl
xlat
push
es
mov
lods
loopne
dec
aad
aaa
and
add
test
xor
add
sub
daa
clc
jp
out
sub
cld
mov
or
add
in
xchg
jmp
push
sbb
add
add
movsl
clc
cltd
clc
mov
clc
or
xlat
imul
fidivrl
clc
lock
popf
xor
sbb
inc
clc
jmp
aas
vmwrite
add
xor
add
add
mov
mov
push
add
mov
add
mov
xchg
mov
std
test
clc
jnp
push
add
pop
or
adc
pop
xchg
test
pop
clc
fdivl
add
ja
clc
out
mov
repnz
roll
clc
out
xor
add
clc
or
push
add
pop
sub
rcr
cli
sub
clc
push
add
xlat
xchg
cli
pop
jecxz
sub
xchg
mov
inc
clc
pop
xor
add
xor
aam
addr16
testl
add
sub
ffree
clc
aam
clc
xchg
xor
or
clc
dec
dec
pop
aaa
sbb
add
inc
clc
aam
add
data16
pop
insl
lock
add
clc
cmp
jg
xor
cld
mov
xchg
dec
bound
add
dec
in
cmp
add
or
add
sar
mul
clc
jmp
aas
iret
xchg
lcall
mov
add
sbb
xchg
jns
add
imul
add
imul
add
add
prefetch
or
cmp
add
mov
add
icebp
popa
add
cmp
gs
leave
dec
pop
mov
out
cmp
jp
ret
clc
lea
out
call
sub
in
mov
add
pop
jbe
add
out
test
imul
clc
cmpsb
clc
fwait
push
add
adc
add
mov
clc
jo
add
dec
repnz
jb
add
add
mov
clc
popa
add
out
jne
mov
clc
arpl
add
sub
jecxz
iret
cmpsb
clc
pop
xchg
jp
js
clc
outsb
sbb
inc
clc
mov
push
xchg
lock
add
jmp
enter
inc
add
mov
jns
clc
push
sub
add
sub
add
add
cmc
call
add
mov
clc
mov
fsubl
cli
xor
add
xbegin
ljmp
pop
test
jne
es
je
cmp
clc
outsb
sub
mov
dec
push
cmp
out
lret
add
or
add
or
add
clc
mov
add
jnp
add
add
hlt
pop
ret
add
jmp
clc
pop
jmp
add
jle
cs
nop
clc
xchg
xabort
clc
cmpsl
clc
outsl
mov
insb
popa
add
decl
clc
xchg
inc
add
or
imul
loope
shl
inc
add
imul
sahf
adc
add
clc
sbb
clc
cltd
and
add
xabort
xchg
enter
stos
in
arpl
add
xabort
inc
add
ds
push
add
and
cmp
stc
enter
push
add
stos
out
scas
lcall
loop
sahf
xor
add
xlat
xchg
test
or
clc
aad
push
add
in
in
xchg
addr16
mov
cmp
add
add
cmc
test
cmp
clc
aaa
sub
clc
and
add
add
clc
lret
pop
int
std
push
push
add
xchg
jle
push
xor
mov
shl
sub
clc
xchg
dec
sbb
push
clc
call
movsl
clc
cmp
mov
clc
and
test
hlt
fsub
clc
adc
add
clc
out
pop
or
jne
inc
add
dec
addr16
das
fstl
push
inc
add
mov
mov
in
das
mov
iret
sub
loope
outsb
int3
inc
add
mov
sbb
xor
add
cmp
inc
add
adc
mov
add
mov
mov
psraw
jmp
clc
push
cltd
rcrl
rorb
and
mov
add
in
ss
and
add
add
add
mov
pop
repnz
and
mov
popf
sti
jg
test
addr16
dec
outsb
push
add
out
cmp
fsubl
and
call
add
lods
xchg
icebp
and
add
clc
cmp
clc
jbe
xchg
inc
clc
dec
push
test
fcoms
pop
out
mov
jne
jp
sub
clc
jmp
add
jno
add
add
sbb
dec
jl
bound
add
push
cmp
clc
and
bound
add
int3
jo
add
clc
mov
add
mov
clc
mov
dec
inc
add
js
gs
fwait
xchg
notl
add
mov
sub
repz
clc
outsb
clc
jg
pop
in
outsl
popa
add
fstps
inc
clc
mov
lahf
mov
cmp
mov
mov
add
cmp
push
data16
popa
add
aas
decl
roll
lock
clc
and
data16
jbe
inc
clc
push
js
shlb
add
clc
and
add
ficompl
into
xchg
cli
push
clc
pusha
add
push
mov
add
ss
movsl
clc
jne
add
jl
clc
mov
loope
into
xbegin
add
leave
sbb
clc
jg
clc
ret
clc
push
add
xchg
add
add
clc
clc
aad
add
ljmp
clc
adc
add
add
out
repnz
inc
clc
xchg
xchg
mov
in
sbb
ficompl
iret
xchg
mov
clc
out
cmp
clc
lcall
cmc
cmp
clc
jl
mov
mov
cmp
clc
into
jne
add
dec
out
cltd
fists
mov
imul
ja
and
add
xchg
xchg
add
clc
out
or
add
xchg
jle
xabort
adc
clc
push
push
inc
add
jmp
sbb
add
mov
xchg
xor
add
or
mov
mov
xchg
sub
add
add
add
pop
sahf
test
inc
add
xor
add
add
and
add
and
push
add
loope
and
add
call
loopne
adc
mov
mov
in
pop
jne
adc
sti
cmc
clc
sub
inc
add
add
lods
xchg
dec
ljmp
clc
inc
clc
int
stc
mov
out
outsb
push
xchg
movups
add
add
push
add
stos
in
mov
add
clc
int3
ficoms
add
xabort
pop
jl
clc
lret
adc
add
mov
ss
scas
rcrl
cwtl
cmpsl
clc
or
clc
stos
in
inc
clc
dec
dec
inc
clc
xbegin
or
clc
pusha
add
jl
rolb
add
adc
add
add
add
inc
clc
jnp
ss
add
int
cmpsl
clc
std
stc
mov
dec
lret
add
jmp
mov
inc
clc
xchg
cmpsl
clc
dec
and
add
clc
and
add
cwtl
xchg
pop
inc
add
inc
add
fsubl
clc
dec
or
cmp
adc
out
rcrl
mov
clc
dec
mov
add
sar
sub
mov
in
push
add
push
and
add
pushl
clc
into
jge
cmp
pop
mov
jno
add
stc
sub
incl
add
mov
clc
add
in
jle
inc
clc
in
mov
add
dec
int
das
sbb
push
dec
inc
add
out
dec
xchg
jns
mull
daa
clc
pop
clc
idivb
kmovw
popa
add
xor
add
push
add
mov
add
cmp
push
scas
stos
mov
rorl
inc
add
pop
jg
add
push
push
clc
jno
add
clc
outsl
xbegin
data16
add
add
std
pusha
add
outsb
lods
movsb
clc
and
clc
and
add
and
add
repnz
icebp
mov
add
add
add
add
clc
ss
inc
add
mov
add
clc
pop
dec
test
in
mov
call
add
ret
jmp
fidivrl
cltd
jecxz
mov
add
ret
testl
inc
clc
push
loop
pop
or
mov
add
and
add
cmp
clc
scas
dec
pop
ficompl
std
outsl
dec
mov
cmp
or
add
shll
data16
inc
clc
push
clc
popa
add
push
sub
sub
push
aam
clc
lea
add
sbb
or
push
clc
mov
jecxz
fcompl
out
mov
cwtl
rorb
add
xchg
mov
jge
add
add
add
mov
clc
addr16
in
pop
daa
clc
or
cli
jle
aaa
scas
xabort
loopne
pop
test
mov
sub
addr16
or
push
jp
add
sbb
into
fdivrp
cmpsb
clc
adc
clc
loop
xchg
jmp
pop
inc
add
mov
push
add
add
add
out
or
clc
icebp
scas
repz
inc
add
sar
insl
xchg
lock
pop
aad
add
push
add
cmc
xchg
data16
in
fdivr
jl
pop
outsl
sub
jl
cmp
clc
jecxz
push
mov
cmp
leave
cwtl
mull
inc
add
sub
add
mov
cmp
jb
add
in
and
add
xchg
push
and
add
pop
sahf
cmp
test
xor
pop
clc
pop
mov
jle
add
add
lods
pop
mov
add
clc
fcmovnbe
sar
clc
mov
sub
pop
clc
xor
add
test
stos
mov
add
fs
cmpsb
clc
inc
add
mov
jecxz
enter
inc
clc
sarl
inc
add
xor
add
cmp
clc
cli
mov
add
push
jg
fwait
lret
fimuls
mov
repz
ss
jg,pt
lea
dec
lods
pushf
clc
jbe
xbegin
add
xlat
movsb
clc
pushf
cmp
fldenv
scas
jae
add
movsl
clc
jns
pop
clc
sub
or
icebp
fidivs
add
pop
clc
mov
add
clc
js
add
mov
aas
iret
sub
inc
add
shrl
or
enter
aad
data16
arpl
add
clc
call
clc
mov
mov
dec
add
pop
aaa
test
fs
add
add
addr16
adc
add
sub
mov
jne
in
xor
add
sar
add
sub
add
inc
add
cs
mov
add
cmovs
mov
push
cmc
in
pop
clc
sbb
clc
ret
add
pop
mov
dec
dec
push
push
add
clc
mov
loop
cwtl
aaa
jecxz
sub
xor
add
and
add
dec
hlt
jnp
jo
add
clc
lods
push
clc
dec
dec
xor
add
es
outsb
sbb
sub
inc
add
pop
ljmp
sar
in
sar
clc
cmpsl
clc
pushf
xchg
xchg
repz
add
jb
add
imul
add
clc
push
pop
dec
fwait
jns
clc
addr16
out
outsb
sbb
xchg
adc
add
add
mov
jle
sar
int
add
push
clc
sar
cli
sub
add
clc
cmpsl
clc
push
jmp
clc
mov
clc
pusha
add
xchg
fcoms
add
add
or
add
cmp
clc
cmpsl
clc
adc
popf
lods
bound
add
inc
clc
xchg
adc
add
shll
push
jl
lea
cli
insb
bound
add
clc
xchg
in
fs
lret
dec
xbegin
lods
dec
cmp
jle
clc
sub
jb
add
add
loope
jle
sbb
or
clc
aas
sbb
pop
fwait
dec
and
fmulp
scas
hlt
dec
or
faddl
add
mov
inc
clc
loope
push
clc
lahf
jecxz
ror
in
jae
add
fs
cmp
xor
add
clc
ficoml
int3
scas
nop
ss
add
sub
pop
sub
addr16
fwait
icebp
pop
xchg
push
dec
cwtl
rolb
sar
xchg
mov
pop
push
add
add
cmp
add
lods
mov
add
clc
gs
mov
sahf
test
jnp
clc
cmp
add
add
add
pop
insb
inc
add
xchg
and
add
add
add
push
clc
jo
add
mov
and
add
dec
xchg
xor
dec
es
out
mov
pop
cmp
clc
enter
or
sbb
leave
cmp
gs
or
push
scas
outsb
cmp
ficoms
add
add
clc
data16
shrb
xor
add
xchg
xchg
sahf
cwtl
xchg
imul
mov
mov
add
loope
push
add
cmp
jp
cmp
pop
mov
push
jb
add
adc
add
cmp
and
add
clc
int3
adc
and
mov
mov
clc
push
into
ljmp
add
xchg
or
push
add
dec
pop
movzbl
add
add
jecxz
or
mov
mov
pop
adc
sbb
clc
cmp
add
add
add
movsb
clc
xor
adc
add
add
push
mov
clc
lret
add
add
js
lock
clc
sarb
clc
mov
fstpt
int
clc
fisubrl
jg
jge
add
scas
pop
and
mov
cli
sbb
mov
add
add
into
inc
add
add
add
ja
test
hlt
clc
stc
out
es
pop
aam
clc
inc
clc
xor
add
test
and
add
add
dec
pushf
jns
clc
pop
inc
add
sbb
push
add
cmp
mov
add
xor
add
add
clc
push
add
or
clc
jecxz
out
enter
add
or
xchg
mov
test
add
clc
mov
adc
add
or
cmp
mov
clc
jg
xchg
out
nop
xor
add
clc
or
cmp
lods
insb
jb
add
sbb
or
clc
mov
sar
mov
mov
sub
lret
push
mov
out
or
incb
add
clc
scas
cmp
clc
aas
push
add
sar
add
and
add
and
mov
push
add
mov
push
clc
pop
and
add
sub
pop
inc
add
or
xor
add
add
fsubrs
popf
in
loop
outsb
xabort
clc
mov
std
dec
push
or
repnz
add
xchg
insl
sbb
or
or
sar
dec
cmp
jle
xchg
sbb
iret
mov
add
add
mov
xor
add
pop
popf
dec
lock
add
cmp
or
pushf
fs
stc
sti
ljmp
insl
add
data16
mov
add
inc
add
adc
add
xchg
lcall
data16
stc
push
out
gs
insb
sti
mov
adc
add
clc
repz
clc
mov
mov
dec
dec
repnz
in
jge
cwtl
and
add
add
data16
mov
add
add
add
pop
clc
dec
pop
jmp
out
cmp
outsl
data16
push
add
mov
xor
add
scas
or
cmp
jg
add
movsl
clc
imul
and
add
xchg
push
addr16
movsl
clc
pop
dec
jge
hlt
shlb
add
add
add
xchg
fnstenv
add
add
daa
clc
inc
clc
sar
clc
inc
clc
call
cmp
gs
cltd
outsl
ret
clc
repnz
add
clc
cwtl
cmp
jno
add
es
shrb
dec
es
jae
add
in
aam
cs
inc
clc
gs
xor
add
sar
clc
ljmp
add
jbe
dec
push
add
and
add
add
adc
add
clc
xor
add
clc
test
inc
add
scas
dec
clc
jg
add
popf
es
loope
fstl
push
add
bound
add
inc
add
mov
add
add
outsl
data16
dec
ljmp
clc
popf
xchg
clc
pop
scas
mov
cmp
cltd
push
aaa
je
clc
push
add
js
clc
jp
xor
jb
add
push
mov
fs
hlt
mov
sbb
add
lods
inc
add
test
lea
clc
push
add
mov
cmp
clc
push
and
add
cmp
out
and
add
add
out
cmp
clc
mov
lods
pop
rdpmc
add
inc
clc
add
add
push
fidivrl
clc
stc
hlt
jno
add
clc
jne
add
cmp
rep
xchg
insl
in
lcall
add
add
aam
inc
add
out
stos
rolb
hlt
or
cmp
inc
clc
xchg
inc
clc
shlb
add
fildll
push
arpl
add
add
lret
jnp
clc
jmp
mov
insb
inc
add
ja
fistpl
sub
jbe
add
mov
movss
add
mov
call
add
clc
enter
stc
enter
add
push
insl
mov
jnp
push
add
add
add
add
push
add
inc
clc
aaa
jp
clc
add
add
sub
add
dec
aam
popa
add
outsb
dec
stos
push
add
adc
add
add
push
sbb
clc
jnp
jl
in
mov
clc
into
mov
mov
mov
pop
clc
cmp
clc
and
sbb
or
mov
roll
add
cmpsb
clc
push
ret
clc
outsl
daa
clc
movsl
clc
ja
clc
push
add
scas
scas
push
jns
rolb
add
loop
outsb
jge
pop
ret
clc
jnp
decl
fcoml
xchg
adc
add
lret
pop
xor
add
add
mov
fistl
add
cmp
add
outsb
ss
and
out
jge
aam
clc
mull
into
fs
fsubrs
daa
clc
adc
add
add
jne
data16
insb
popa
add
clc
sar
clc
data16
sahf
icebp
sti
stc
pusha
add
dec
xchg
push
xor
add
clc
fstps
lods
in
lcall
inc
add
dec
jmp
mov
sbb
sub
lahf
scas
inc
add
dec
out
js
sub
clc
xor
add
xbegin
clc
ds
and
add
clc
and
add
inc
add
stos
outsl
insl
jecxz
out
clc
inc
clc
inc
clc
das
cmp
xchg
aas
xor
add
add
das
cmp
ret
clc
add
add
loope
xchg
movsb
clc
jae
add
push
jno
add
add
inc
clc
sbb
call
clc
rorl
clc
sub
stc
pop
sbb
cmp
int
clc
jbe
mov
xchg
popf
cmp
push
call
add
pop
aas
xor
mov
clc
mov
add
pop
clc
fcoms
clc
xchg
fisttps
clc
bound
add
clc
jb
add
clc
push
pusha
add
dec
cmp
clc
jecxz
sbb
cmp
add
iret
daa
clc
pop
clc
and
add
jns
clc
push
clc
fwait
inc
clc
fucom
clc
adc
add
jnp
aas
je
call
