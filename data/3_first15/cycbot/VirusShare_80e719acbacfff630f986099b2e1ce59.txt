add
add
push
push
push
push
push
push
cld
cld
cld
add
addr16
cmp
add
add
add
mov
mov
add
xchg
xchg
xchg
add
popa
popa
test
test
addl
add
add
lret
lret
lret
lret
add
add
cmc
cmc
popa
popa
popa
add
add
addl
pop
call
call
add
int3
pop
pop
pop
pop
ret
add
add
roll
xor
add
add
mov
mov
int3
int3
add
add
mov
inc
inc
inc
add
add
ficoms
sub
or
or
rcl
negl
pop
pop
pop
pop
pop
pop
pop
pop
add
ds
sub
sub
sub
dec
dec
dec
in
in
cmp
cmp
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
outsl
adc
adc
add
add
add
add
aam
aam
aam
aam
aam
aam
add
jo
jo
jo
jo
lcall
lcall
add
fiadds
add
testb
add
add
add
das
das
stos
stos
stos
stos
test
test
test
test
test
add
add
add
add
add
add
xchg
xchg
xchg
push
push
push
push
push
push
push
push
mov
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
add
add
add
push
push
push
and
and
bound
stc
stc
stc
stc
add
call
add
fcmovnu
fcmovnu
lcall
popa
popa
popa
popa
add
add
add
cmc
aad
aad
add
add
push
push
push
push
push
push
ds
dec
ljmp
push
push
push
push
push
push
push
push
push
push
push
push
add
mov
fcomp
fcomp
fmuls
add
add
add
in
add
mov
mov
mov
mov
mov
mov
add
add
push
push
push
push
push
cs
fwait
add
pop
pop
pop
push
push
push
push
add
add
ret
loop
add
add
dec
dec
dec
add
add
inc
inc
inc
xor
xor
mov
add
add
add
fimuls
or
add
add
pop
add
add
add
je
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
imul
in
or
or
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
lds
push
push
push
push
push
ds
add
loopne
loopne
loopne
sub
sub
sub
jg
mov
xchg
xchg
xchg
add
add
add
hlt
hlt
hlt
hlt
hlt
mov
mov
imul
adc
adc
ds
add
add
add
lds
add
add
cwtl
cwtl
cwtl
cwtl
add
add
add
add
pop
pop
pop
pop
pop
add
aam
cmp
cmp
cmp
add
add
lret
lret
add
and
sti
sti
sti
sti
add
add
rolb
add
add
cmp
cmp
cmp
cmp
cmp
xchg
push
jp
xchg
xchg
xchg
xchg
xchg
add
aam
aam
aam
add
add
hlt
hlt
hlt
hlt
push
flds
add
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
or
or
or
or
or
pusha
pusha
out
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
add
in
pusha
pusha
pusha
mov
add
into
into
into
into
into
into
into
into
into
into
popa
popa
popa
popa
popa
popa
cli
cli
cli
jae
mov
mov
in
fcoml
adc
adc
or
or
or
or
or
xor
cmp
cmp
add
mov
add
add
add
into
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
add
add
add
add
mov
clc
clc
add
add
add
add
add
fadds
cmp
cmp
cmp
cmp
or
or
add
add
gs
add
daa
daa
daa
daa
add
cmp
cmp
cmp
cmp
cmp
add
enter
jo
jo
jo
jo
div
div
mull
add
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
push
les
add
aas
aas
aas
aas
aas
aas
add
add
lret
lret
add
push
popf
fcmovnu
add
lcall
lcall
and
fwait
popf
popf
popf
popf
add
add
inc
ret
dec
dec
movd
lret
add
add
adcl
cmp
cmp
cmp
add
add
add
out
out
out
out
fcmovu
fiaddl
add
add
add
inc
inc
inc
je
je
je
add
add
jmp
jmp
hlt
daa
daa
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
add
jno
adc
adc
add
leave
leave
leave
leave
leave
leave
add
push
push
push
fwait
daa
daa
daa
daa
daa
daa
daa
daa
daa
push
push
push
push
push
push
push
mov
mov
xor
repnz
add
add
add
add
lock
pop
pop
pop
pop
pop
pop
pop
dec
add
sub
sub
sub
movntq
out
out
out
out
out
out
out
movsl
movsl
and
add
add
add
add
add
lret
push
push
push
push
push
push
push
push
push
push
push
push
jecxz
jecxz
jecxz
sbb
dec
dec
dec
fprem1
cmc
cmc
add
aas
aas
or
stos
add
add
xchg
xchg
xchg
xchg
adc
adc
adc
add
add
scas
xchg
jb
jb
enter
push
push
push
push
push
push
push
push
push
push
icebp
icebp
add
add
imul
add
add
add
add
mov
add
stc
stc
stc
stc
std
std
std
std
std
std
std
add
add
add
push
add
add
add
sub
add
iret
iret
iret
iret
sub
add
add
add
and
in
in
mov
mov
sub
adc
add
pmulhuw
in
in
in
in
in
in
in
cltd
cltd
xchg
xchg
xchg
xchg
add
add
mov
add
add
or
or
or
or
or
or
or
or
or
or
hlt
hlt
hlt
hlt
hlt
hlt
hlt
addl
addl
rcl
rcl
rcl
rcl
rcl
rcl
mov
mov
add
add
add
mov
addb
imul
imul
add
add
loop
loop
push
push
push
push
lret
lret
lret
lret
push
push
push
in
cmp
cmp
mulb
add
inc
inc
inc
inc
clc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
or
or
or
add
cs
add
add
add
pop
pop
add
add
jecxz
add
add
add
mov
mov
add
add
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
rcl
rcl
rcl
rcl
rcl
roll
add
add
bound
bound
jnp
jnp
jnp
jnp
jnp
jnp
jnp
hlt
incb
add
int
call
call
push
fs
add
add
js
js
add
outsl
int3
int3
int3
int3
int3
int3
int3
into
into
mov
stos
stos
stos
stos
stos
stos
stos
stos
add
xchg
xchg
xchg
xchg
xchg
xchg
sti
sti
sti
sti
sti
sti
fcmovu
fcmovu
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
dec
dec
rcl
add
add
jle
jle
jle
jle
jle
jle
jbe
fcmovu
fcmovu
fcmovu
fcmovu
add
cmp
test
add
add
das
das
das
out
out
out
in
push
push
push
push
push
push
push
push
or
add
add
add
add
jge
jge
lret
lret
lret
lret
add
add
add
add
in
in
in
in
xor
xor
xor
xor
test
add
add
int
int
popl
xchg
sbb
mov
mov
mov
mov
cs
add
js
js
js
js
js
shl
icebp
icebp
add
icebp
icebp
rcl
rcl
roll
add
add
add
rcl
rcl
rcl
pop
pop
pop
add
add
cld
cld
fs
add
adc
adc
adc
adc
adc
movups
adc
adc
adc
adc
or
or
mov
out
out
out
out
out
out
out
jl
jl
jl
jl
lock
test
test
int
int
add
insb
int3
int3
add
add
add
add
xor
xor
xor
xor
xor
dec
dec
dec
jbe
rol
scas
insb
insb
insb
insb
insb
insb
insb
add
add
mov
data16
dec
or
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
aad
aad
dec
mov
rcl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
mov
in
rol
rol
shll
xchg
mov
add
add
popa
xor
adc
adc
adc
adc
insl
insl
insl
test
test
add
xor
data16
add
add
add
roll
add
add
fcomp
fcomp
fcomp
fsubrs
outsb
outsb
pop
pop
pop
pop
add
add
dec
mov
movb
add
sbb
add
es
stos
add
add
push
push
push
push
push
push
test
test
mov
mov
cwtl
cwtl
cwtl
cwtl
push
push
push
push
pop
pop
pop
pop
pop
nop
nop
nop
nop
add
add
add
add
adc
add
or
add
cwtl
cwtl
cwtl
cwtl
lds
push
push
jmp
jmp
lret
xor
add
cmp
cmp
cmp
cmp
lret
lret
jmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
mov
push
mov
add
push
push
push
push
push
add
in
in
in
sbb
sbb
sbb
and
and
and
and
and
and
and
and
and
add
mov
lret
add
add
add
add
outsl
outsl
add
add
push
mov
ret
adc
adc
xor
xor
xor
sbb
mov
add
add
sub
sub
add
push
push
push
xchg
xchg
xchg
adc
adc
adc
adc
dec
dec
and
ss
add
add
mov
mov
add
addb
add
add
add
popa
popa
popa
popa
popa
pop
pop
movsl
cmp
jmp
push
push
push
push
push
push
push
push
push
push
push
push
add
adc
add
xchg
xchg
xchg
stc
stc
add
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
lret
lret
lret
lret
lret
lret
lret
lret
add
add
cli
cli
add
add
rcl
shll
jo
mov
add
xchg
xchg
xchg
incl
test
test
add
add
add
cs
iret
outsl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
xor
in
in
in
in
in
in
in
popf
cmpsl
cmpsl
cmpsl
dec
dec
dec
dec
dec
cmp
cld
cld
cld
xor
add
call
call
jecxz
jecxz
jecxz
jecxz
jecxz
add
add
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
popf
popf
popf
popf
popf
popf
popf
popf
jae
add
xchg
add
add
nop
mov
mov
mov
mov
mov
mov
jne
jne
jne
js
js
js
add
push
push
push
jl
jl
jl
jl
add
add
addb
or
push
push
add
add
xlat
xlat
xlat
cli
cli
cli
add
lods
jg
add
add
or
add
pushf
pushf
pushf
incb
add
add
add
dec
adc
add
and
and
or
or
sbb
sbb
sbb
imul
imul
cmp
add
or
or
or
or
jl
jl
add
add
add
add
jo
jo
jo
popf
popf
popf
and
and
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
xchg
ret
ret
in
in
insl
jge
jge
jge
jge
cmc
in
add
add
aam
aam
popa
popa
popa
add
add
add
add
popa
popa
sbb
sbb
push
push
add
add
add
add
add
enter
mov
mov
add
incb
inc
inc
inc
inc
and
and
and
popa
popa
cmp
adc
cmpsb
cmpsb
cmpsb
hlt
hlt
hlt
hlt
add
add
add
sbb
sbb
sbb
add
add
add
scas
scas
add
add
add
lcall
ljmp
ljmp
mov
dec
test
xor
add
add
add
add
and
and
add
add
add
add
cwtl
cwtl
cwtl
dec
dec
dec
add
add
mov
add
add
xchg
xchg
add
fcmovnu
out
out
push
add
add
in
in
in
imul
add
add
add
add
add
add
add
add
jl
add
sub
sbb
sbb
aam
lahf
lahf
lahf
lahf
lahf
mov
mov
mov
add
icebp
icebp
icebp
add
add
hlt
mov
add
add
jnp
cld
add
add
add
jbe
dec
dec
dec
dec
pop
pop
pop
pop
pop
stc
stc
stc
stc
stc
stc
stc
stc
stc
add
add
add
add
add
add
and
leave
leave
mov
jg
jg
jg
jg
cld
cld
push
push
push
push
push
push
push
push
insb
insb
insb
inc
inc
sub
xor
xor
xor
xor
xor
cmp
div
xor
xor
xor
xor
xor
test
add
add
ss
pop
pop
pop
adc
or
or
or
or
or
or
loopne
add
add
xchg
xchg
xchg
dec
dec
jp
ds
mov
or
or
rcl
rcl
fcmovu
fiaddl
add
add
cld
cld
cld
add
add
add
add
add
out
out
out
xor
icebp
pusha
pusha
pusha
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
mov
jl
mov
clc
clc
clc
clc
clc
clc
clc
jne
jne
inc
xchg
xchg
data16
outsl
outsl
outsl
outsl
outsl
outsl
outsl
pop
pop
mov
push
pushf
pushf
pushf
pushf
pushf
jbe
jbe
mov
addl
pop
stos
stos
stos
stos
add
daa
daa
daa
add
mov
xor
div
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
add
add
adc
adc
adc
insb
insb
insb
add
add
push
sub
add
mov
inc
inc
inc
inc
inc
inc
add
add
int3
int3
mov
sbb
add
add
addr16
or
or
add
mov
mov
bound
add
mov
and
adc
adc
push
push
push
push
push
push
add
add
js
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
or
add
mov
addl
add
addl
and
and
and
and
and
in
in
ret
ret
mov
mov
test
test
ffreep
rol
rol
add
add
imul
addl
les
cmp
cmp
cmp
dec
dec
dec
js
js
js
js
js
js
js
js
stc
stc
stc
stc
add
add
inc
inc
mov
ljmp
add
add
add
mov
dec
dec
or
lahf
lahf
lahf
lahf
lahf
inc
inc
inc
inc
inc
xor
add
test
dec
add
add
add
add
add
add
loop
loop
out
out
out
out
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
outsb
outsb
outsb
outsb
std
std
add
add
or
stc
stc
rol
add
add
add
add
add
add
add
add
mov
mov
adc
adc
adc
push
push
push
push
push
push
push
add
mov
cmpsl
cmpsl
add
sub
sub
add
add
ds
aaa
add
fildl
add
add
fcmovnu
fildl
add
mov
mov
add
mov
clc
clc
clc
add
mov
add
add
add
add
add
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
sub
push
gs
add
int
int
int
scas
sahf
add
add
lss
bound
add
cmpsb
cmpsb
cmpsb
es
add
test
mov
add
inc
inc
inc
negl
xor
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
iret
iret
iret
pop
pop
pop
pop
add
xor
xor
addl
sub
sub
gs
or
or
add
in
in
in
xchg
add
add
add
dec
or
call
push
jno
add
or
or
or
xor
xor
add
add
xor
add
push
push
mov
mov
mov
mov
add
pop
pop
mov
insb
insb
insb
add
sbb
fcmovnu
fildl
add
stc
popa
add
add
rcl
rcl
rol
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
add
add
add
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
add
das
das
das
das
das
das
rolb
add
add
pop
add
add
and
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
arpl
arpl
add
add
pop
pop
pop
jbe
inc
inc
inc
inc
inc
mov
mov
and
and
and
and
dec
add
jl
jl
add
add
add
add
add
xchg
push
push
add
or
adc
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
add
add
cmp
cmp
cmp
jno
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
test
push
push
push
push
push
ljmp
ljmp
jo
add
out
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
sbb
sbb
sbb
pop
scas
scas
ds
ds
sub
sub
and
and
and
and
sub
add
or
or
or
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
out
out
out
out
out
out
jns
jns
jns
jns
add
dec
dec
outsl
outsl
outsl
outsl
outsl
outsl
push
push
push
push
xchg
xchg
add
mov
mov
add
lret
add
add
leave
push
push
jle
jle
pop
pop
pop
add
jno
add
add
add
add
outsb
outsb
outsb
add
mov
cli
cli
add
add
mov
mov
add
add
add
and
fcmovnu
aam
add
inc
cld
cld
addl
jnp
jnp
cltd
cltd
cltd
cltd
iret
fdivp
lock
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
sbb
sbb
add
pop
pop
pop
imul
add
add
add
add
add
add
in
in
in
in
in
in
in
in
in
dec
dec
cwtl
cwtl
cwtl
add
add
and
ss
add
cmp
cmp
leave
leave
push
push
push
test
test
add
leave
leave
leave
leave
leave
leave
leave
add
add
add
faddl
add
add
add
pop
sub
add
sbb
jecxz
jecxz
lcall
int3
int3
int3
int3
int3
int3
int3
int3
mov
enter
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
icebp
push
push
int
int
movsb
mov
mov
ja
ja
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
and
and
mov
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
pop
pop
add
or
into
into
into
into
into
into
into
into
fwait
fwait
fwait
fwait
fwait
fwait
add
add
add
add
jg
jg
jg
and
push
pop
pop
push
push
push
push
mov
mov
add
cwtl
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
test
test
add
pusha
lcall
rolb
mov
xlat
fiaddl
add
add
fcmovnu
fcmovnu
fcmovnu
add
int3
dec
dec
mov
mov
ss
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
rcl
shrl
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
add
add
add
daa
rcl
rcl
rcl
rcl
rcl
rcl
or
add
sub
sub
fstp
add
pop
pop
pop
pop
add
adc
add
add
add
add
mov
mov
add
adc
adc
adc
adc
adc
adc
je
data16
cmp
add
mov
mov
mov
mov
mov
mov
lret
xchg
xchg
push
push
add
inc
inc
inc
or
or
cmc
cmc
cmc
cmc
cmc
add
add
mov
mov
mov
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
add
add
int
cmpsb
and
and
add
xor
add
add
fwait
fwait
fwait
jae
jae
jae
jae
pop
add
rol
xor
xor
push
add
add
add
js
add
add
dec
dec
dec
dec
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
lock
out
out
add
add
rcl
rcl
stos
stos
stos
stos
stos
stos
stos
add
push
push
push
add
add
in
in
in
in
add
add
add
in
imul
add
add
addl
cmp
jnp
sub
and
and
jae
insb
popa
lods
add
add
jbe
add
add
xlat
xlat
add
add
add
add
test
test
test
test
xor
xchg
add
push
mov
jmp
popa
popa
popa
popa
popa
popa
popa
popa
popa
add
add
add
in
ja
into
into
into
add
aaa
aaa
mov
mov
add
add
jbe
jbe
jbe
jbe
out
out
out
pop
pop
add
pop
adc
adc
adc
adc
adc
adc
adc
adc
add
add
mov
inc
inc
add
mov
mov
mov
cs
gs
mov
mov
mov
bound
bound
data16
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
scas
scas
scas
scas
scas
scas
in
in
pusha
add
cs
daa
daa
daa
daa
daa
mov
add
add
add
sub
jnp
mov
in
push
push
push
push
push
push
push
or
or
or
add
add
mov
cmp
push
push
push
push
push
add
add
add
add
aam
and
and
les
add
mov
add
add
mov
and
and
and
and
addl
add
push
cwtl
cwtl
cwtl
add
sti
add
add
add
or
or
or
or
or
or
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
stc
stc
stc
stc
stc
stc
stc
stc
add
push
dec
dec
dec
or
or
add
add
add
gs
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
and
and
and
and
and
and
and
and
insl
insl
insl
insl
insl
insl
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
mov
mov
cmp
add
inc
inc
push
push
push
push
push
push
push
push
push
push
push
add
add
pop
pop
addl
push
push
push
push
push
add
sub
cmp
jae
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
add
add
pop
pop
add
jg
jg
mov
das
das
das
das
das
das
jp
jp
lea
add
add
add
add
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
mov
xlat
add
add
test
in
add
add
jl
jo
add
jge
jge
jge
jge
add
add
inc
inc
inc
inc
inc
sub
sub
leave
leave
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
mov
mov
mov
mov
dec
add
add
or
or
or
or
or
roll
add
fwait
fwait
fwait
fwait
fwait
pusha
pusha
pusha
pusha
add
add
add
mov
add
add
je
je
je
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jnp
jnp
imul
add
add
add
add
cmp
sbb
sbb
sbb
add
push
add
add
sub
mov
cld
jo
add
mov
sub
sub
sub
dec
dec
dec
dec
dec
dec
dec
jno
jno
jno
sbb
sbb
sbb
add
cmp
add
add
add
gs
add
add
add
add
rol
rol
rol
rol
rol
rol
rcl
roll
add
cli
cli
push
add
ja
ja
and
push
push
push
push
adc
jbe
jno
jno
jno
jno
jno
jno
jno
cmp
cmp
sbb
sbb
sbb
sbb
add
pop
dec
insb
insb
insb
addl
mov
add
arpl
arpl
arpl
sti
sti
push
push
add
add
add
sbb
add
add
call
add
add
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
rcl
rcl
rcl
rcl
test
adc
adc
adc
movsb
movsb
mov
jo
dec
fcmovnu
fcmovnu
fisttpl
sub
sub
sub
sub
sub
addb
push
cs
mov
call
fcomp
iret
add
add
test
test
pop
pop
pop
pop
jge
jge
add
add
int
gs
xor
add
mov
add
add
add
mov
add
sub
add
add
adc
add
add
add
jb
jb
add
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
or
or
xor
add
xor
xor
xor
add
cmpsb
jb,pt
jmp
add
ja
loop
push
andb
inc
std
mov
fcmove
sub
shrb
xor
push
iret
xchg
jae
inc
lcall
ret
add
in
add
add
int3
or
and
jb
cmp
rcrb
pop
scas
mov
shl
lds
inc
jmp
cli
aas
fisubrl
cmp
mov
mov
pusha
lret
sbb
push
pop
shll
test
xor
shl
cmp
andb
scas
mov
inc
or
lcall
mov
inc
int3
inc
or
js
cld
cmp
rolb
xchg
xchg
lods
jbe
sub
mov
jo
push
fildll
rolb
sub
mov
add
mov
add
cmp
fdiv
lahf
xchg
and
mov
mov
addl
mov
and
mov
out
imul
xchg
je
mov
lods
aas
loope
imul
push
cwtl
pop
std
addr16
dec
xchg
inc
dec
lods
mov
jbe
mov
and
mov
dec
mov
sub
and
cli
xchg
mov
iret
cltd
cmp
daa
rcr
aas
test
mov
pusha
pop
test
rcrl
mov
or
shrb
dec
movsl
adc
xchg
pop
movsl
out
adc
lock
sbb
jg
pop
xchg
jl
in
cmpsl
stc
outsl
push
fcomps
loope
mov
bound
addb
mov
or
add
adc
sub
shlb
pusha
add
inc
adc
and
mov
pusha
cltd
mov
mov
stc
mov
xchg
xor
lods
inc
mov
loopne
xor
mov
mov
pusha
clc
push
inc
movsb
add
push
rolb
sub
loopne
or
pusha
sahf
jns
or
inc
mov
xor
push
sbb
and
inc
inc
mov
inc
xor
mov
xchg
lds
nop
and
mov
popa
mov
adc
int3
cmp
xor
rclb
scas
or
adc
repnz
in
mov
pusha
fcmovnb
dec
dec
xchg
repnz
add
push
in
mov
add
pusha
das
sbb
and
pushf
clc
les
fs
adc
mov
pop
mov
add
out
outsb
shlb
addb
mov
add
out
rep
imul
pop
adc
mov
add
pusha
mov
jb
mov
pop
xor
ret
jl
sahf
push
sahf
sbb
jp
jmp
mov
xor
jge
sub
mov
int3
dec
sbb
pop
fsubrl
loop
addb
lret
repz
fidivrs
sub
rolb
cmpsb
inc
add
jecxz
mov
xor
dec
xchg
arpl
xchg
scas
add
mov
sarb
pop
ret
mov
loopne
dec
outsb
cmp
ror
shlb
daa
pop
or
rorb
pusha
ficomps
dec
popa
push
repnz
xorb
push
scas
inc
add
xlat
mov
inc
shll
mov
cmp
jecxz
cltd
ret
fdivs
jo
sbb
scas
loopne
and
cltd
mov
xorl
xchg
dec
fldt
ja
mov
jae
and
jg
movsb
pusha
add
sbb
rolb
add
outsl
bswap
sbb
hlt
dec
cmpxchg
ss
rolb
add
pop
cmp
mov
mov
and
add
mov
rolb
shlb
sbb
gs
xor
fistps
push
andb
and
or
inc
andl
mov
xchg
inc
sbb
and
popf
xchg
and
rolb
loopne
fsub
inc
dec
nop
pop
nop
lods
test
add
cmp
pushf
cltd
rolb
inc
dec
imul
andb
or
and
mov
pusha
inc
cmp
xchg
xor
movsb
mov
jnp
push
cmp
cmp
aam
jl
fsub
ljmp
inc
adc
sbb
jb
rol
and
jge
sbb
cmp
adc
aas
mov
insl
andb
fistps
int3
push
jns
lock
clc
repz
loopne
test
fs
bound
das
sbb
pop
mov
pusha
lcall
or
and
xchg
xlat
add
test
cmc
inc
mov
sub
mov
sub
repnz
shlb
xchg
fwait
mov
loopne
loopne
mov
or
inc
bound
inc
add
xlat
mov
mov
dec
mov
rclb
outsb
cmpsb
shlb
add
sarl
out
push
pop
cmp
andb
mov
addb
lret
hlt
xlat
xchg
arpl
mov
ss
xor
mov
popa
cmpsb
mov
stos
andb
xor
jle
test
inc
mov
sub
dec
jne
jge
shl
mov
and
filds
popa
push
push
repnz
add
popf
xchg
je
pushf
lods
loopne
ret
sub
inc
dec
jle
and
aas
data16
add
sbb
or
add
stos
jmp
sahf
inc
loope
jno
and
mov
fcmove
bound
pop
pusha
divl
sub
xor
insl
and
int3
cld
dec
xchg
aam
pop
aam
sbb
sarb
std
add
cld
pusha
xchg
rcr
pop
cmp
loopne
mov
jl
sahf
mov
pop
iret
addr16
pop
imul
add
iret
ficompl
and
add
addb
inc
dec
ss
mov
std
fsubp
ret
add
inc
add
sarb
out
add
xor
aaa
xor
and
mov
inc
jp
add
xor
or
pusha
sahf
xchg
test
shrl
pop
lods
mov
dec
mov
push
js
sarb
ds
jecxz
push
push
mov
jle
add
rorb
or
sub
fiaddl
mov
nop
aaa
mov
pusha
push
cmp
mov
pusha
rorb
xchg
jg
stc
ss
xor
insb
andl
arpl
or
andb
inc
sbb
leave
and
pusha
mov
cmp
pop
sub
mov
sub
mov
pop
jns
jae
and
jmp
add
xor
hlt
sarl
xor
pop
dec
and
mov
xor
fstpl
dec
sti
inc
ret
jne
xor
sbb
test
jbe
repz
or
ja
fs
gs
mov
andb
sbb
mov
stos
rolb
inc
cmp
icebp
jne
cmp
paddsb
movnti
cmp
scas
dec
divb
adc
xchg
and
stos
add
inc
out
cmpl
test
or
sbb
ljmp
pop
inc
jb
mov
sub
outsl
xlat
or
cmp
and
mov
decl
inc
andb
xor
add
in
lods
imul
stc
add
mov
dec
mov
aas
jo
inc
and
mov
pop
mov
inc
push
and
aad
rol
pop
cmpl
inc
loopne
test
pusha
xchg
jl
test
pop
mov
dec
loop
push
std
adc
pop
stos
pusha
mov
loopne
mov
loopne
jo
jb
mov
cmp
sub
xor
mov
rolb
sub
je
inc
fimull
mov
out
fldt
and
cmp
xor
mov
add
mov
and
sub
test
inc
loop
push
loopne
mov
xchg
inc
icebp
cs
inc
ret
sbb
cmp
push
pop
repnz
add
int3
lea
mov
shlb
mov
inc
and
add
std
push
repz
std
into
into
inc
cmpsb
and
pop
cmp
out
sbb
xchg
sub
add
pusha
aaa
adc
mov
je
cltd
and
inc
in
lahf
cs
mov
rclb
push
cld
test
rol
scas
addb
mov
xchg
add
jns
or
jbe
inc
sbbb
imul
jbe
into
push
ret
xchg
fsubrs
add
and
and
hlt
mov
mov
sbb
xor
adc
mov
test
shlb
dec
jmp
dec
fisttpl
mov
addb
add
xchg
push
shlb
movsl
pop
ljmp
mov
inc
mov
dec
push
inc
inc
outsl
inc
rcll
mov
dec
movsb
and
mov
jmp
jae
jmp
push
cmp
sbb
cmpsl
ffreep
cld
pop
adc
mov
pop
adc
sbbl
cmc
or
shrb
pop
pop
into
push
mov
cld
jae
sbb
adc
pusha
shlb
call
test
inc
dec
cmpsb
inc
mov
and
mov
int3
in
repnz
add
loopne,pn
push
les
test
pusha
mov
andb
inc
or
test
hlt
js
aaa
in
sub
insl
clc
test
mov
xchg
push
sti
adc
jno
sub
dec
jmp
stos
cmp
mov
pusha
rol
mov
jnp,pt
pop
stos
andb
adc
add
add
pop
imull
fcomps
sti
hlt
xchg
add
mov
outsl
cmpsb
pusha
add
mov
sbb
adc
mov
das
repnz
stos
daa
adc
mov
sbb
repnz
pusha
mov
cmp
push
lcall
jmp
icebp
mov
les
dec
mov
cld
jmp
and
xchg
lcall
mov
inc
and
loopne
scas
mov
aas
mov
hlt
mov
push
mov
cmpsb
addb
pop
cmp
and
popf
sub
mov
pusha
pusha
out
jmp
inc
lods
cmp
lock
sub
fcoml
mov
lret
push
fidivrl
pusha
xchg
push
push
pop
insb
cli
sarl
shlb
fadd
cmc
call
cmpb
mov
mov
adc
mov
add
inc
add
and
movsb
pusha
loopne
lahf
hlt
loope
mov
lret
xchg
sbbb
aas
add
daa
or
inc
and
insl
pop
call
pusha
in
aam
mov
fstpl
ffree
ja
push
ret
push
stc
dec
push
lds
or
and
enter
jp
xor
mov
dec
mov
insl
cmpsb
andb
mov
loopne
sbb
cmp
sbb
pop
inc
adc
lock
lret
popa
in
je
cwtl
mov
arpl
rcl
in
repz
out
ror
lds
and
or
pusha
sbb
mov
and
addr16
inc
xchg
add
cmpsl
cmp
cwtl
pop
xchg
iret
jp
into
xchg
sahf
das
in
rcrb
jge
fstps
pop
lahf
cs
loopne
bound
and
dec
mov
or
adcb
add
or
testb
pop
sbb
outsl
into
test
orl
movsb
rolb
mov
jne
inc
push
cmp
add
sub
leave
xchg
xor
lret
mov
lods
add
add
or
idivb
push
loopne
pushf
ds
call
mov
cmpsb
pusha
mov
pop
arpl
or
adcb
fstpt
add
dec
jp
test
mov
push
add
pop
push
stos
iret
sbb
sub
pop
push
imul
cmp
rolb
shlb
pusha
loopne
jp
dec
mov
andb
mov
add
and
data16
sub
pusha
aad
lods
mov
ds
adc
testl
sub
pusha
mov
cmp
inc
push
scas
and
add
xchg
fbstp
movsb
addb
shlb
mov
push
inc
pusha
mov
hlt
lret
repnz
pusha
jnp
dec
insl
or
jnp
mov
jb
jecxz
inc
clc
popa
into
out
push
movsb
shlb
cmp
inc
mov
mov
inc
cmp
and
inc
arpl
inc
sbb
sbbl
pusha
jae
outsl
and
add
pusha
lret
loopne
or
mov
inc
pop
and
loopne
xchg
mov
cmp
stc
cmp
adc
addb
push
ss
pusha
jmp
mov
addb
mov
mov
js
loopne
or
and
aam
and
fldt
push
rolb
xchg
sub
aam
insl
adc
rolb
stos
mov
inc
jle
and
lcall
pusha
mov
aam
js
or
fimuls
push
push
ret
psrad
js
mov
cmpsl
inc
mov
ret
add
sub
icebp
stc
loopne
lds
push
sub
fsubl
inc
push
pusha
loopne
addb
xorl
aaa
sub
addb
sbb
mov
mov
and
add
and
jbe
in
adcl
roll
jge
ss
loopne
fistps
test
mov
inc
pop
pop
sub
shlb
push
jmp
pop
mov
rcrb
pushf
jnp
movsb
and
inc
xor
mov
mov
push
andl
or
and
in
push
mov
ret
xchg
adc
inc
sbb
divb
pushaw
sub
add
pop
jge
js
mov
ljmp
pop
aas
xor
cmp
fdivs
mov
add
and
fildl
push
and
mov
mov
js
inc
inc
sahf
std
jns
push
or
shlb
push
fisubl
dec
test
movsl
mov
repnz
rolb
push
adc
mov
push
mov
xor
xchg
pop
push
in
and
in
and
adc
arpl
aad
insl
pop
sti
std
pop
push
icebp
jnp
sbb
or
mul
mov
cmpsl
cld
sbb
sbb
cmpsl
adc
aas
xlat
mov
and
cmpsb
pusha
rclb
addb
decl
add
rolb
repz
and
and
sbb
adc
and
xchg
stos
and
add
scas
add
rorb
mov
loopne
insb
sbb
fstpl
out
out
fimuls
stc
pop
jmp
xchg
stos
je
inc
jge
lret
out
inc
push
and
xlat
mov
add
jae
mov
push
and
popa
test
mov
mov
mov
shll
add
cmpb
andb
sbb
add
and
add
mov
pop
xor
adc
mov
pop
and
inc
stos
inc
rolb
add
jno
xor
aad
out
fcmovnb
fmull
xor
xchg
cmpsl
pop
sbb
add
dec
call
mov
cmp
inc
add
add
cltd
add
mov
jnp
jb
or
sub
add
andb
jbe
aam
in
or
cmpb
push
add
xor
cmp
mov
movsl
outsb
jl
mov
shrb
mov
in
scas
jnp
jmp
fadds
and
pop
stos
sahf
mov
jne
mov
pusha
call
and
add
mov
sub
and
insl
or
ret
in
call
fs
sub
addb
test
mov
or
inc
mov
and
push
dec
imul
pop
cmp
xchg
pop
sub
xorb
mov
loopne
insl
cld
test
lahf
sbb
addb
lea
cmpsb
shlb
lock
push
push
rol
add
push
or
and
das
pop
cltd
push
push
gs
addb
das
jne
sahf
pop
test
lds
loopne
push
pushf
pusha
sbb
mov
loopne
mov
dec
and
loopne
and
mov
lock
aas
xor
mov
pusha
je
mov
les
add
out
pop
xchg
or
repz
out
inc
aam
and
aaa
shrl
jecxz
xchg
cmp
addb
add
test
pop
push
cltd
repnz
rol
fwait
and
add
sub
sahf
add
sahf
sbb
outsl
jo
popf
or
pusha
mov
or
out
mov
jne
xor
fdivp
or
shlb
andb
mov
andb
mov
loopne
and
rcl
and
pusha
add
push
jle
jae
jle
or
jle
lods
mov
dec
stc
movsb
mov
into
pusha
jo
mov
cwtl
sbb
and
add
add
adc
jmp
loopne
addb
add
nop
inc
call
rcll
movsl
andb
test
mov
stos
shl
test
pusha
roll
mov
mov
sub
jmp
shr
sbb
mov
sbb
mov
cltd
imul
in
pop
dec
cwtl
push
xchg
push
cmp
pop
jmp
rclb
ja
mov
rolb
lock
add
mov
pop
inc
std
out
loope
push
into
push
or
xor
nop
js
cmp
les
add
andb
xchg
sbb
mov
andb
cmpsb
mov
les
psubusb
pop
ds
and
xor
adc
add
mov
fisttpll
stos
leave
cmp
sub
mov
mov
jle
lods
xor
repnz
jl
adc
sarb
add
shlb
or
add
loopne
andb
sub
ljmp
sub
loopne
test
mov
shlb
sbb
and
dec
scas
xchg
add
orb
and
inc
andb
inc
sti
pop
push
andb
test
add
addb
sub
inc
addb
pusha
add
dec
dec
pop
dec
sub
icebp
mov
shlb
subb
cli
xor
sbb
xchg
aaa
or
add
outsb
or
cwtl
cmc
xchg
ret
mov
mov
shlb
outsb
addb
mov
loopne
outsb
or
pusha
loope
pop
or
rclb
pusha
subb
mov
jae
cs
cmpb
push
xchg
loopne
mov
jecxz
clc
inc
ret
scas
shlb
add
add
or
or
sarb
ja
rolb
subb
cmp
repz
mov
mov
loope
aas
jl
pusha
fs
and
popa
pop
jg
cmp
addb
push
mov
loopne
outsb
inc
xor
loopne,pn
subl
es
cld
jmp
mov
jnp
xor
and
aam
push
push
enterw
and
rcrb
pop
dec
dec
cltd
xchg
push
xchg
lcall
loopne
or
jnp
lahf
jmp
out
imul
cmp
pusha
pop
and
mov
addr16
inc
movb
push
xor
scas
jecxz
mov
push
and
and
rorb
les
add
sbb
inc
sub
out
pop
js
and
rcrb
push
repz
xor
cmp
add
mov
loopne
push
adc
adc
subl
test
lds
add
andb
mov
cld
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
cmp
jne
cld
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
jecxz
mov
ds
mov
sub
shlb
shlb
pusha
fldl2t
and
xor
das
mov
inc
jmp
push
mov
les
andb
mov
cld
push
jns
jns
cmp
pop
push
cmpl
cmc
cmp
ja
in
call
repz
add
push
jo
lahf
cmp
imul
ror
addr16
into
xor
out
pop
jbe
or
inc
out
mov
jno
dec
frstor
test
and
pop
xchg
sbb
int3
mov
jge
mov
add
add
insl
or
rclb
xor
in
andb
cmp
scas
sbb
shlb
mov
sbb
in
xlat
jo
sbb
fildl
add
mov
mov
jb
mov
arpl
lahf
scas
lock
sub
in
sar
negl
add
dec
inc
inc
pushf
outsb
pop
sbb
andb
xor
and
dec
or
mov
fadds
mov
jno
int
adc
lcall
pusha
mov
ficomps
dec
stc
outsl
adc
adc
in
xchg
lahf
insl
push
inc
and
push
dec
loopne
inc
xorl
xorb
in
or
and
ljmp
jp
push
rolb
andb
pop
pop
mov
xchg
or
mov
andb
and
rcrl
add
sahf
mov
xlat
dec
and
push
mov
rorb
aad
int3
ret
fnstenv
cmp
dec
fs
pop
les
rcr
addb
cmp
push
inc
in
in
lods
ljmp
icebp
cld
out
jmp
cmp
push
and
fcomi
insb
inc
cmp
xor
negb
mov
pusha
mov
rolb
dec
imul
addb
mov
inc
inc
leave
push
fists
pop
push
inc
and
xor
jne
push
addr16
add
pop
dec
addb
push
jbe
adc
sub
adc
stc
mov
and
inc
and
jbe
push
push
push
add
inc
fisubrl
sbb
mov
pop
pop
mov
and
mov
add
jnp
cmp
inc
je
mov
test
push
add
stos
mov
xorb
adc
and
add
jg
rol
sub
and
inc
sbb
cmp
and
or
dec
cld
mov
xchg
pop
push
adc
or
pop
sti
cmp
repz
outsl
pop
flds
jge
sub
mov
push
mov
or
mov
push
stc
xor
andb
and
inc
xchg
es
rclb
mov
loopne
test
mov
testl
xchg
loopne
pop
sti
repnz
dec
dec
dec
pop
mov
dec
loope
rolb
xchg
inc
imul
fstpl
test
icebp
into
cmp
jns
mov
in
mov
xor
xlat
sti
clc
adc
mov
add
jle
bound
aas
fs
pop
cmp
stos
push
xchg
ss
xchg
fwait
shr
mov
nop
in
or
xor
ljmp
push
mov
push
movsb
add
sbb
mov
fistps
subl
scas
and
sub
test
loopne
pop
decb
cmpsb
pusha
rcrb
add
movsw
cmp
in
jns
addb
scas
inc
and
mov
dec
mov
push
fcoml
jl
xor
cmp
movsl
out
xchg
xchg
test
imul
mov
pusha
inc
inc
or
lock
or
add
sub
jp
adc
rcrb
mov
mov
xlat
and
push
xchg
out
gs
pop
pop
lea
xor
aas
xor
in
and
ja
scas
and
pusha
dec
daa
lods
mov
add
jmp
andl
cs
sub
hlt
in
sbb
mov
add
and
mov
rolb
mov
sar
cs
and
sti
sub
pusha
and
insl
sbb
adc
and
mov
push
xchg
pushf
add
mov
push
and
add
pop
testl
leave
dec
jns
mov
inc
insl
nop
ja
jge
sbb
loopne
push
and
mov
mov
orb
mov
sbb
cwtl
xorl
cmp
sub
pop
sbbl
dec
add
inc
xchg
xor
push
mov
out
pushl
cltd
jns
data16
inc
loopne
mov
andb
lds
push
ja
or
loopne
push
add
adc
mov
sub
and
dec
insl
and
inc
cmp
and
loop
mov
cltd
clc
popf
nop
ss
xchg
cmp
or
xorb
loopne
or
lcall
or
or
adc
aas
fistpl
testl
push
lcall
nop
iret
sbb
gs
pop
xor
icebp
das
pop
xchg
inc
jns
add
jae
or
shrb
dec
cmp
add
and
std
pushf
ret
in
movsl
arpl
and
pop
lods
cld
mov
loope
popa
loopne,pn
mov
js
and
mov
shlb
inc
sub
mov
inc
notl
fstpl
arpl
aaa
repz
mov
outsl
inc
push
pop
dec
push
js
xor
xchg
gs
sub
mov
and
jl
add
outsl
sub
stos
xchg
xchg
pop
outsl
or
orb
push
lds
adc
movl
adc
and
pop
les
rorl
inc
and
scas
and
inc
rolb
sbb
inc
loop
pusha
sbb
enter
ja
pop
pop
dec
andl
cltd
mov
sub
add
mov
je
ret
xchg
dec
inc
push
jle
mov
sub
xchg
adc
pop
std
imul
and
movsl
cmp
lret
xor
loopne
sub
add
pop
dec
xchg
add
test
scas
inc
mov
add
lods
jbe
andb
dec
sahf
lret
sbb
cmp
and
and
fcmovbe
or
rol
daa
push
cmc
push
and
mov
sbb
push
xchg
sbb
adc
inc
sub
je
in
xor
lock
and
loopne
mov
ret
pusha
cmpb
aas
stos
mov
pusha
dec
rolb
cwtl
hlt
fistpll
xchg
and
xor
pop
test
pushf
inc
jo
fsubl
sti
inc
jb
sub
and
movsl
scas
inc
imul
jmp
jg
jae
jne
pop
xor
or
inc
inc
fstpl
pop
xor
push
dec
pop
icebp
push
shl
idivb
sbb
out
fadds
and
add
dec
mov
cli
jg
mov
sahf
clc
mov
loopne
das
iret
cmp
xchg
inc
cmp
aam
enter
jae
cmp
ljmp
aam
daa
lods
loopne
mov
cmp
add
and
pop
sahf
frstor
bound
dec
add
and
sti
inc
mov
and
call
push
test
rcl
in
call
push
ss
addl
shrb
andb
inc
mov
loop
insl
inc
mov
jae
and
push
xchg
inc
psrad
adc
ds
andb
xchg
mov
pusha
icebp
push
clc
loop
adc
mov
xor
shl
fld1
into
fldcw
mull
xchg
mov
or
pusha
mov
mov
loopne
xor
add
pusha
or
pusha
push
jle
sti
cmp
mov
xchg
lock
cmp
test
and
mov
and
jo
out
gs
iret
hlt
dec
fcompl
mov
push
lret
add
andb
pushf
xchg
xchg
jg
cmc
les
mov
scas
scas
xor
mov
sar
into
mov
jp
ja
frstor
mov
add
xchg
or
pusha
inc
inc
or
das
das
shll
pop
aam
rolb
dec
mov
fs
jo
jl
mov
mov
mov
add
push
xchg
cmpsl
int
or
loopne
ds
mov
mov
adc
mov
add
ljmp
add
movsb
mov
andb
rolb
out
push
mov
inc
stc
add
inc
adc
push
pusha
add
aam
add
inc
rclb
adc
adc
mov
add
movsb
add
adc
sbb
clc
push
sti
jo
rolb
pop
inc
ret
jmp
pusha
or
fcmovnbe
or
inc
loopne
inc
pusha
push
dec
xor
mov
test
adc
sbb
fistpl
mov
loopne
sbb
sbb
out
call
push
ret
cs
rolb
jne
data16
push
cmp
ss
imul
sbb
add
xchg
jbe
lret
sti
arpl
or
inc
lods
mov
jg
dec
cmp
pop
test
add
lods
andb
or
scas
inc
or
push
inc
add
xlat
icebp
jno
xchg
adc
inc
popa
loopne
lds
sarl
clc
test
jecxz
mov
loopne
dec
mov
adc
repz
xchg
inc
fmuls
lea
cmp
imul
pusha
mov
lret
and
cmpl
out
mov
cli
sub
jne
shl
cmp
push
int
out
pop
out
shrl
pusha
adc
inc
loop
inc
inc
pop
aaa
mov
add
rcrb
fs
and
xchg
push
add
pusha
mov
rolb
inc
repnz
adcl
pusha
mov
jg
push
repnz
mov
cmp
and
and
and
les
orb
andb
adcb
cli
cmc
and
and
rol
adc
pop
xchg
lcall
ja
call
add
insb
sbb
fldenvs
and
iret
xor
ds
andb
dec
data16
pusha
pusha
stos
add
loopne
outsb
xlat
outsb
test
out
test
xor
loope
jns
shll
pop
adc
add
and
loopne
cmp
push
mov
mov
into
dec
mov
sbb
rol
inc
lea
mov
je
cmp
dec
xchg
add
mov
jne
mov
mov
dec
int
sbb
stc
ret
inc
adc
pushf
es
and
cmp
ds
add
pop
push
cmp
fisubrs
loopne
ret
jmp
cmpsb
shlb
mov
and
jecxz
push
in
das
mov
out
dec
sahf
sub
pusha
stos
pusha
shlb
jmp
mov
inc
add
imul
add
imul
cmpb
in
or
sahf
lds
mov
xchg
icebp
aam
jb
push
pop
ret
andb
and
adc
inc
aaa
test
and
lcall
add
xor
dec
popf
das
xor
xor
addl
inc
inc
imul
pushf
lret
add
push
pop
cltd
movsb
pusha
orb
jo
mov
push
pop
pop
int
cmp
adc
and
pop
pop
aaa
cmp
cmp
addb
shlb
cld
enter
lods
add
sub
add
insb
jne
inc
sti
push
gs
cli
sbb
js
test
inc
fcomps
inc
xorb
sub
orb
pop
push
push
jno
jnp
inc
pop
lock
pusha
push
jb
xor
movsl
xor
fdivr
adc
pusha
mov
mov
imul
dec
xchg
stos
and
pusha
jno
stos
inc
loopne
inc
inc
xchg
lahf
push
pusha
pusha
nop
lret
inc
stos
icebp
jns
mov
inc
mov
addb
xchg
pop
ds
arpl
ret
sbb
cmp
addb
pusha
rolb
shlb
and
dec
push
pop
out
insl
arpl
sti
addb
jge
loopne
and
decl
and
and
and
xchg
mov
sarb
dec
addr16
popf
test
test
daa
loop
push
or
sbbb
pminub
sub
mov
mov
sub
pop
or
mov
and
fldt
rol
in
sub
and
dec
negl
mov
xchg
pushf
fadd
fadds
pusha
inc
std
lea
bound
mov
xchg
cmp
ja
cmpsl
push
cmp
dec
mov
mov
in
inc
in
aas
xchg
imull
xor
fistpll
aaa
cmp
inc
int
pop
add
sahf
mov
fdivs
pushf
out
stc
ficompl
push
std
in
adc
pop
push
addr16
aam
or
subb
cmp
shlb
add
inc
and
pusha
lret
cmp
pusha
add
and
in
jl
sub
imul
xor
imul
stos
loopne
addb
dec
mov
repz
jnp
into
in
adc
movsb
addb
inc
sbb
cmp
subb
inc
popa
in
add
pop
lock
inc
daa
xchg
or
movsb
and
lods
mov
fdivs
insl
and
inc
mov
jo
mov
into
cli
lcall
mov
and
sarb
or
and
sbb
js
pop
jbe
test
and
pusha
mov
setns
ret
cltd
stc
mov
bound
mov
dec
adc
rolb
ss
mov
mov
ja
imul
xor
sbb
and
lods
mov
adc
sub
cmp
mul
inc
xlat
push
nop
push
mov
leave
nop
jmp
add
add
and
sbb
push
mov
xchg
ret
add
add
xor
nop
nop
cld
jae
add
popl
add
nop
nop
cld
jae
xchg
cmp
add
ficoms
insl
rep
clc
repnz
nop
cld
jae
xchg
popf
add
sub
loope
nop
push
mov
leave
nop
jmp
fwait
add
mov
push
mov
xchg
ret
add
add
add
add
nop
push
mov
leave
nop
jmp
add
testl
cmpl
add
add
push
push
mov
xchg
ret
jl
fwait
add
stos
shlb
fwait
mov
nop
push
mov
leave
nop
jmp
popl
add
cwtl
xorl
clc
repnz
nop
cld
jae
add
add
add
negl
repnz
nop
cld
jae
fwait
repz
add
push
push
mov
xchg
ret
add
add
push
pop
add
jl
fistpl
nop
push
mov
leave
nop
jmp
repz
and
cmp
repnz
nop
cld
jae
std
sub
add
and
pop
sti
fwait
nop
push
mov
leave
nop
jmp
jmp
add
imul
cld
jae
repz
aas
not
push
mov
xchg
ret
dec
cmp
add
inc
shl
les
repnz
nop
cld
jae
fwait
cmp
out
add
mov
js
add
add
dec
and
add
or
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
fwait
add
add
sub
mov
xor
push
mov
xchg
ret
add
fsubs
dec
mov
clc
repnz
nop
cld
jae
mov
xchg
add
pop
cmpsl
inc
and
clc
repnz
nop
cld
jae
add
add
daa
add
add
repnz
nop
cld
jae
cmp
xchg
add
push
add
jne
clc
repnz
nop
cld
jae
add
inc
cmp
mov
add
repnz
nop
cld
jae
pop
fwait
jl
fwait
add
sar
repnz
nop
cld
jae
pop
sub
jmp
fcmovb
and
add
pop
xor
addb
dec
or
popa
clc
repnz
nop
cld
jae
xchg
fwait
add
mov
and
andb
sub
clc
repnz
nop
cld
jae
mov
add
dec
push
mov
xchg
ret
add
add
mov
dec
cmp
mov
xchg
ret
jl
xor
cmpsl
out
add
push
mov
xchg
ret
add
in
iret
push
pop
add
xlat
clc
repnz
nop
cld
jae
add
add
leavew
add
nop
push
mov
leave
nop
jmp
add
add
loopne
and
subb
shrl
add
add
jl
add
int
add
add
cmpsl
std
add
nop
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
daa
add
push
add
clc
repnz
nop
cld
jae
add
fiadds
test
nop
push
mov
leave
nop
jmp
push
iret
add
add
rcrl
add
repnz
nop
cld
jae
lea
sbb
dec
mov
inc
add
add
sub
add
and
adc
mov
mov
xchg
ret
add
fiadds
int
mov
add
dec
push
mov
xchg
ret
add
add
add
add
add
and
ret
clc
repnz
nop
cld
jae
push
jnp
add
fwait
xchg
pop
add
push
mov
xchg
ret
add
push
add
aas
adc
nop
jmp
add
mov
adc
dec
pop
mov
inc
jae
clc
repnz
nop
cld
jae
filds
pushf
add
add
nop
sub
dec
sub
in
insl
inc
add
add
mov
mov
clc
repnz
nop
cld
jae
std
add
add
push
clc
repnz
nop
cld
jae
ficoms
stos
cmpsb
mov
push
clc
repnz
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
xchg
add
add
xchg
add
mov
clc
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
add
add
jge
rclb
nop
jmp
fwait
mov
dec
test
sar
call
inc
add
add
push
add
loopne
xor
clc
repnz
nop
cld
jae
add
int
add
lea
cld
jae
loop
sub
mov
xchg
imulb
lea
clc
repnz
nop
cld
jae
add
xor
cmp
push
loopne
pop
fwait
mov
clc
repnz
nop
cld
jae
repz
or
pop
mov
clc
repnz
nop
cld
jae
add
stos
add
add
or
mov
xchg
ret
or
add
outsb
int
dec
add
clc
repnz
nop
cld
jae
add
inc
iret
popf
xchg
clc
repnz
nop
cld
jae
add
sub
rcrl
inc
ja
add
addb
and
std
inc
cmpsl
fwait
xor
clc
repnz
nop
cld
jae
mov
add
xchg
xchg
clc
repnz
nop
cld
jae
inc
dec
add
add
add
inc
sub
nop
push
mov
leave
nop
jmp
pushf
and
add
push
push
mov
inc
adc
repnz
nop
cld
jae
add
jmp
jne
push
mov
xchg
ret
add
lea
push
nop
push
mov
leave
nop
jmp
add
dec
add
dec
mov
push
mov
xchg
ret
add
lea
clc
repnz
nop
cld
jae
cmp
add
add
nop
push
mov
leave
nop
jmp
push
add
or
xchg
imul
nop
jmp
add
add
add
add
rorl
jns
add
add
add
add
or
pusha
mov
clc
repnz
nop
cld
jae
add
add
adc
shl
adc
nop
nop
cld
jae
add
or
stos
std
sub
mov
nop
push
mov
leave
nop
jmp
sub
add
add
push
clc
repnz
nop
cld
jae
add
popf
int
add
pop
inc
out
stos
clc
repnz
nop
cld
jae
xchg
add
iret
out
add
lcall
add
nop
jmp
dec
cmpb
sar
nop
nop
cld
jae
push
add
mov
add
clc
repnz
nop
cld
jae
and
fwait
inc
jo
loopne
inc
stos
mov
push
mov
xchg
ret
add
out
pop
sbb
repnz
nop
cld
jae
add
sub
pop
mov
daa
stos
push
mov
xchg
ret
inc
add
jnp
add
fld1
push
mov
xchg
ret
jnp
add
test
repnz
nop
cld
jae
jmp
inc
enter
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
jl
daa
add
add
push
add
mov
push
clc
repnz
nop
cld
jae
add
out
into
movsb
mov
repnz
nop
cld
jae
jl
inc
add
add
lret
push
clc
repnz
nop
cld
jae
add
sub
add
mov
pop
add
in
leave
nop
jmp
sub
fwait
add
add
add
nop
push
mov
leave
nop
jmp
add
xchg
mov
add
push
push
mov
xchg
ret
jnp
addb
add
mov
push
mov
xchg
ret
fwait
in
or
pop
add
add
andb
lods
add
lret
add
inc
add
pop
bound
clc
nop
stc
mov
clc
repnz
nop
cld
jae
mov
or
add
add
pop
jnp
clc
repnz
nop
cld
jae
add
dec
add
add
in
and
mov
clc
repnz
nop
cld
jae
add
add
jne
clc
repnz
nop
cld
jae
fwait
xchg
add
add
clc
repnz
nop
cld
jae
add
fwait
iret
shlb
shlb
add
test
cmp
ret
popf
jl
fwait
add
add
add
clc
repnz
nop
cld
jae
xchg
out
mov
mov
pop
clc
repnz
nop
cld
jae
add
add
add
mov
cmp
and
clc
repnz
nop
cld
jae
cmpsl
mov
loop
mov
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
stos
pop
out
add
mov
pushf
addb
addb
inc
adc
repnz
nop
cld
jae
loop
jl
push
daa
int3
mov
pusha
and
nop
nop
cld
jae
fadds
loop
jl
sbb
mov
clc
repnz
nop
cld
jae
add
add
fisubs
rclb
mov
xchg
ret
adcb
lea
pushf
mov
movsb
andb
loopne
clc
repnz
nop
cld
jae
sub
stos
jmp
repnz
nop
cld
jae
add
mov
jne
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
add
movl
pusha
popf
mov
clc
repnz
nop
cld
jae
xchg
loop
fistpll
add
add
inc
lods
push
mov
xchg
ret
in
and
fsubr
out
into
mov
clc
repnz
nop
cld
jae
add
add
jno
enter
nop
cld
jae
push
popf
add
add
enter
mov
xchg
ret
add
add
push
nop
push
mov
leave
nop
jmp
add
xchg
add
jmp
das
mov
clc
repnz
nop
cld
jae
xchg
add
add
dec
xor
nop
push
mov
leave
nop
jmp
add
add
push
push
mov
xchg
ret
add
add
fisttps
nop
push
mov
leave
nop
jmp
sub
pop
add
push
clc
repnz
nop
cld
jae
fwait
add
pop
add
sar
nop
nop
cld
jae
stos
std
and
push
add
add
clc
repnz
nop
cld
jae
and
add
dec
aaa
push
clc
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
and
add
stos
and
clc
jp
loopne
flds
nop
nop
cld
jae
add
dec
mov
icebp
nop
push
mov
leave
nop
jmp
add
mov
add
and
lea
clc
repnz
nop
cld
jae
add
filds
add
cmp
add
clc
repnz
nop
cld
jae
add
cmp
das
je
add
add
add
int
xor
add
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
add
addb
push
repnz
nop
cld
jae
add
add
pop
imul
clc
repnz
nop
cld
jae
add
add
xor
jb
loop
in
rep
clc
repnz
nop
cld
jae
add
add
loop
test
sar
nop
nop
cld
jae
add
add
cmpl
nop
push
mov
leave
nop
jmp
mov
pusha
push
mov
xchg
ret
jl
add
int
stos
xchg
or
fwait
push
mov
xchg
ret
iret
add
push
add
fwait
mov
pusha
cmp
lret
nop
push
mov
leave
nop
jmp
add
mov
jecxz
nop
push
mov
leave
nop
jmp
add
fwait
scas
and
call
clc
repnz
nop
cld
jae
repz
iret
add
in
or
add
fstpt
nop
es
fscale
mov
nop
push
mov
leave
nop
jmp
jl
add
add
inc
mov
clc
repnz
nop
cld
jae
cmpsl
add
jae
push
mov
xchg
ret
or
add
add
call
clc
repnz
nop
cld
jae
mov
pop
inc
pop
clc
repnz
nop
cld
jae
mov
add
mov
mov
leave
nop
jmp
push
add
pop
add
lret
mov
leave
nop
jmp
add
cmp
pop
add
clc
repnz
nop
cld
jae
add
add
mov
ret
add
popf
ja
add
add
add
add
push
push
mov
xchg
ret
add
stos
jl
add
popa
mov
clc
repnz
nop
cld
jae
add
loop
push
add
add
clc
repnz
nop
cld
jae
xchg
add
push
mov
xchg
ret
add
add
xor
popa
nop
push
mov
leave
nop
jmp
add
loop
add
add
lret
clc
push
mov
xchg
ret
fwait
add
loop
mov
andb
sbb
clc
repnz
nop
cld
jae
mov
add
loopne
and
nop
nop
cld
jae
add
add
add
push
andb
pusha
clc
repnz
nop
cld
jae
fwait
filds
mov
nop
nop
cld
jae
add
xchg
mov
cmc
xor
clc
repnz
nop
cld
jae
xor
add
or
repnz
nop
cld
jae
add
jl
add
sbb
add
clc
repnz
nop
cld
jae
add
add
add
add
pop
clc
repnz
nop
cld
jae
add
fcoms
push
nop
push
mov
leave
nop
jmp
pop
fiadds
loop
pushf
xchg
sub
fldl2t
push
daa
add
add
cmp
add
sub
add
dec
loope
jbe
nop
push
mov
leave
nop
jmp
jmp
add
cmpw
nop
push
mov
leave
nop
jmp
out
add
enter
push
mov
leave
nop
jmp
add
pushf
add
push
nop
push
mov
leave
nop
jmp
add
add
add
mov
xchg
ret
add
add
xchg
aam
lss
nop
push
mov
leave
nop
jmp
adcb
leave
nop
jmp
add
daa
add
add
add
lods
nop
inc
add
add
push
add
push
mov
leave
nop
jmp
cmp
stos
add
xchg
mov
add
clc
repnz
nop
cld
jae
add
inc
jmp
push
mov
xchg
ret
in
add
add
add
add
les
nop
push
mov
leave
nop
jmp
repz
pop
fmuls
xchg
repnz
nop
cld
jae
add
out
add
push
mov
add
clc
repnz
nop
cld
jae
add
ds
mov
mov
clc
repnz
nop
cld
jae
add
xchg
cmp
mov
clc
repnz
nop
cld
jae
iret
jl
jmp
nop
dec
and
add
repnz
nop
cld
jae
cmpsl
push
add
rolb
mov
xchg
ret
add
add
add
repz
repnz
nop
cld
jae
xor
add
sub
cmp
xor
rclb
mov
xchg
ret
add
popf
add
loop
push
push
mov
xchg
ret
mov
add
add
mov
clc
repnz
nop
cld
jae
mov
add
pop
push
mov
mov
push
add
add
add
add
inc
or
sbb
repnz
nop
cld
jae
add
fdivs
inc
cmpsl
lds
test
nop
nop
cld
jae
add
inc
add
in
leave
nop
jmp
movl
mov
cmp
mov
push
mov
xchg
ret
mov
add
add
sub
clc
repnz
nop
cld
jae
movl
pop
nop
push
mov
leave
nop
jmp
add
mov
cmpsl
xchg
stos
loop
add
clc
repnz
nop
cld
jae
cmpsl
jl
mov
add
les
mov
xchg
ret
add
add
add
add
nop
cld
jae
pop
fwait
pop
filds
xchg
add
adcb
add
add
add
pushf
dec
cmp
jne
nop
push
mov
leave
nop
jmp
add
cmp
ja
add
jnp
add
add
adc
inc
jmp
std
out
lea
add
clc
repnz
nop
cld
jae
mov
fcoms
nop
dec
push
push
mov
xchg
ret
int
fiadds
dec
cmpsl
add
pushf
mov
mov
call
fwait
xchg
add
push
mov
mov
add
push
mov
xchg
ret
and
push
shr
clc
repnz
nop
cld
jae
mov
push
stc
add
push
mov
xchg
ret
or
add
inc
inc
add
clc
repnz
nop
cld
jae
in
int
repz
adc
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
cmp
add
mov
inc
call
inc
add
int
xchg
jl
push
xor
sub
push
mov
xchg
ret
add
mov
add
add
xchg
sub
repnz
nop
cld
jae
add
lods
clc
repnz
nop
cld
jae
add
mov
sub
push
clc
repnz
nop
cld
jae
add
in
sub
mov
fdivl
icebp
add
clc
repnz
nop
cld
jae
jmp
add
rep
push
mov
xchg
ret
out
add
dec
add
add
mov
leave
nop
jmp
sbbb
add
add
push
mov
xchg
insl
sbb
add
add
mov
cltd
push
nop
push
mov
leave
nop
jmp
add
fwait
add
add
mov
nop
push
mov
leave
nop
jmp
fcomp
cmpsl
outsb
sub
int
aas
xor
clc
repnz
nop
cld
jae
sbb
popf
loop
xor
mov
nop
push
mov
leave
nop
jmp
add
add
mov
push
push
mov
xchg
ret
and
add
add
mov
xor
nop
push
mov
leave
nop
jmp
lea
add
xchg
ret
add
push
mov
xchg
ret
add
add
add
loop
and
out
or
call
clc
repnz
nop
cld
jae
add
add
add
es
jecxz
repnz
nop
cld
jae
and
mov
mov
clc
repnz
nop
cld
jae
jl
add
add
mov
push
mov
xchg
ret
iret
add
fwait
add
inc
and
enter
popa
nop
push
mov
leave
nop
jmp
fwait
mov
add
mov
push
pop
clc
repnz
nop
cld
jae
add
in
add
test
nop
push
mov
leave
nop
jmp
popf
cmp
fwait
add
add
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
sub
sub
pop
add
jno
clc
repnz
nop
cld
jae
add
std
mov
addr16
clc
repnz
nop
cld
jae
add
outsb
out
sub
add
aam
and
cmp
test
push
mov
leave
nop
jmp
add
add
and
repnz
nop
cld
jae
add
flds
in
leave
nop
jmp
mov
add
mov
push
mov
xchg
ret
mov
add
add
popf
mov
clc
repnz
nop
cld
jae
add
cmpsl
cmp
pop
mov
clc
repnz
nop
cld
jae
add
xchg
add
hlt
fcmovnu
call
inc
add
sub
fadds
add
inc
movsb
loopne
push
loopne
lret
test
nop
push
mov
leave
nop
jmp
subb
ss
clc
repnz
nop
cld
jae
add
push
add
cmpsl
or
add
nop
push
mov
leave
nop
jmp
sub
test
nop
nop
cld
jae
sub
add
add
add
mov
clc
repnz
nop
cld
jae
lea
mov
adc
repnz
nop
cld
jae
add
add
jbe
mov
clc
repnz
nop
cld
jae
add
add
mov
mov
repnz
nop
cld
jae
in
fadds
and
repnz
nop
cld
jae
add
add
push
ljmp
in
leave
nop
jmp
push
add
push
add
sub
pusha
and
mov
xchg
ret
add
add
add
xor
sbb
clc
repnz
nop
cld
jae
add
mov
dec
loop
push
clc
repnz
nop
cld
jae
mov
add
jp
add
repnz
nop
cld
jae
cmp
push
add
loope
incl
add
repnz
nop
cld
jae
loop
pushf
adc
add
nop
push
mov
leave
nop
jmp
inc
add
fcoml
sar
repnz
nop
cld
jae
dec
add
add
add
shlb
nop
nop
cld
jae
movl
stos
pop
push
mov
xchg
ret
or
cmpsl
push
out
cmp
add
add
clc
repnz
nop
cld
jae
iret
jl
push
mov
add
loopne
jl
mov
clc
repnz
nop
cld
jae
add
add
movb
repnz
nop
cld
jae
mov
andb
xchg
mov
push
mov
xchg
ret
add
add
pop
push
push
mov
xchg
ret
add
filds
add
add
add
add
clc
repnz
nop
cld
jae
and
add
add
nop
nop
cld
jae
add
cmpsl
clc
adc
nop
nop
cld
jae
add
fwait
mov
clc
repnz
nop
cld
jae
cmp
add
repnz
nop
cld
jae
add
add
sbb
jg
clc
repnz
nop
cld
jae
repz
add
add
in
leave
nop
jmp
jl
fwait
or
push
sub
roll
push
mov
leave
nop
jmp
pop
add
outsb
mov
jle
add
clc
repnz
nop
cld
jae
add
mov
add
mov
fidivrs
add
movl
inc
add
popf
add
add
nop
push
mov
leave
nop
jmp
add
mov
jl
je
clc
repnz
nop
cld
jae
outsb
outsb
int
adc
mov
mov
push
mov
leave
nop
jmp
add
inc
fdivrs
add
pushl
clc
repnz
nop
cld
jae
sub
add
add
mov
jmp
nop
cld
jae
add
add
rclb
and
add
jl
xchg
iret
push
add
add
adcb
jmp
stos
stos
add
push
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
daa
pop
mov
and
add
repnz
nop
cld
jae
jl
add
outsb
fisubrs
nop
cld
jae
xchg
fwait
add
fsubr
dec
stos
cltd
mov
nop
push
mov
leave
nop
jmp
add
cmpb
mov
clc
repnz
nop
cld
jae
add
in
cmpsl
or
inc
add
add
push
jl
addb
adc
loopne
sub
mov
xchg
ret
and
add
call
clc
repnz
nop
cld
jae
add
sub
xor
jne
clc
repnz
nop
cld
jae
inc
add
add
loop
add
clc
repnz
nop
cld
jae
add
jmp
addl
cmp
repnz
nop
cld
jae
std
push
add
pushf
or
bound
xchg
ret
add
add
add
fwait
add
pop
pop
clc
repnz
nop
cld
jae
add
add
add
nop
push
mov
leave
nop
jmp
add
add
movl
pusha
push
addb
movzwl
clc
repnz
nop
cld
jae
add
add
scas
add
clc
repnz
nop
cld
jae
add
lea
repnz
clc
repnz
nop
cld
jae
sub
pop
add
xchg
fisubrs
mov
xorb
sub
push
mov
xchg
ret
add
add
xchg
add
add
mov
push
mov
xchg
ret
add
xchg
xor
in
leave
nop
jmp
add
sbbb
clc
repnz
nop
cld
jae
pop
pushf
add
mov
clc
repnz
nop
cld
jae
sbbb
add
fld1
push
mov
xchg
ret
add
xchg
mov
push
mov
xchg
ret
lea
lea
int
add
sub
fld1
clc
repnz
nop
cld
jae
add
dec
add
clc
repnz
nop
cld
jae
add
iret
add
fsubrs
add
jmp
add
and
pushf
dec
add
out
dec
dec
cld
push
mov
xchg
ret
push
add
pop
mov
movsb
push
mov
xchg
ret
dec
int
add
pusha
ret
xor
push
mov
xchg
ret
add
add
sub
add
or
repnz
nop
cld
jae
add
clc
push
add
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
lea
add
dec
add
clc
repnz
nop
cld
jae
stos
pop
inc
out
jl
jl
mov
nop
push
mov
leave
nop
jmp
movl
rcr
and
mov
xchg
ret
fwait
add
add
add
pause
push
mov
leave
nop
jmp
outsb
add
inc
add
add
add
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
add
add
add
lret
cld
push
mov
xchg
ret
fwait
pop
add
lret
inc
clc
repnz
nop
cld
jae
mov
iret
push
xchg
add
shlb
rclb
pop
addl
int
xchg
inc
fmul
fiadds
pop
call
nop
push
mov
leave
nop
jmp
fwait
add
add
jne
clc
repnz
nop
cld
jae
add
add
add
dec
xchg
add
add
add
popa
ljmp
nop
cld
jae
add
add
add
add
inc
je
clc
repnz
nop
cld
jae
jnp
pop
in
test
mov
leave
nop
jmp
add
add
div
nop
push
mov
leave
nop
jmp
add
and
add
xor
addb
cmp
ret
in
add
out
add
add
push
call
mov
push
mov
xchg
ret
add
stos
xchg
add
mov
push
mov
leave
nop
jmp
add
sub
add
leave
add
clc
repnz
nop
cld
jae
add
popf
cmp
mov
nop
popa
mov
clc
repnz
nop
cld
jae
add
add
add
pusha
dec
cld
arpl
nop
nop
cld
jae
outsb
jl
daa
filds
call
mov
xchg
ret
add
add
out
jmp
stos
fadds
fcomp
mov
add
fwait
add
clc
repnz
nop
cld
jae
add
jl
pushf
mov
push
nop
push
mov
leave
nop
jmp
fadds
add
cltd
rep
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
inc
in
repz
dec
jmp
add
fwait
jl
add
add
add
add
add
fucomi
clc
repnz
nop
cld
jae
add
add
mov
and
xor
nop
push
mov
leave
nop
jmp
add
sub
sbb
push
mov
xchg
ret
dec
out
add
jl
fsubs
addl
cmp
ret
popf
add
cmp
mov
in
pushf
jb
movzwl
clc
repnz
nop
cld
jae
iret
mov
pop
clc
repnz
nop
cld
jae
mov
add
add
add
scas
andb
in
leave
nop
jmp
add
or
add
fcomp
and
inc
add
stos
cmpsl
add
je
clc
repnz
nop
cld
jae
sub
inc
mov
adc
repnz
nop
cld
jae
add
add
lahf
fistpl
clc
repnz
nop
cld
jae
push
add
add
add
push
push
mov
xchg
ret
popl
outsb
pop
add
fmul
cmp
cmp
nop
nop
cld
jae
add
xchg
add
inc
pusha
lcall
ret
nop
push
mov
leave
nop
jmp
pop
fwait
jl
add
inc
or
repnz
nop
cld
jae
loop
outsb
fcoms
in
xchg
add
push
mov
xchg
ret
ficomps
fwait
out
out
fisttps
inc
addb
push
mov
xchg
ret
mov
iret
addb
inc
pushf
inc
gs
clc
repnz
nop
cld
jae
mov
and
clc
repnz
nop
cld
jae
inc
add
iret
outsb
fwait
add
in
leave
nop
jmp
int
add
rolb
call
inc
add
cmp
in
add
sub
add
repnz
nop
cld
jae
out
add
add
mov
movl
jae
fwait
pop
fadds
dec
add
xor
mov
leave
nop
jmp
add
inc
pushf
fwait
mov
pop
call
clc
repnz
nop
cld
jae
add
or
add
std
jnp
add
add
dec
add
pop
cmp
daa
mov
clc
repnz
nop
cld
jae
repz
xchg
add
pop
and
jl
add
xchg
out
add
sbb
add
push
mov
xchg
ret
add
push
xor
xchg
fwait
jp
jp
popf
ror
push
mov
xchg
ret
std
xchg
out
fwait
loop
add
movsl
push
push
mov
xchg
ret
and
add
add
fisttpll
repnz
nop
cld
jae
lea
add
mov
mov
push
clc
repnz
nop
cld
jae
add
loop
shl
clc
repnz
nop
cld
jae
push
add
pushf
cmp
dec
adc
xchg
clc
repnz
nop
cld
jae
fadds
add
add
shlb
fld1
push
mov
xchg
ret
add
inc
add
add
sar
nop
nop
cld
jae
add
push
push
mov
lcall
repnz
nop
cld
jae
add
and
pop
mov
clc
repnz
nop
cld
jae
add
jl
out
out
out
andb
nop
nop
cld
jae
add
add
add
push
mov
repnz
nop
cld
jae
mov
push
inc
inc
add
sahf
adc
push
clc
repnz
nop
cld
jae
sub
add
add
sub
push
push
mov
xchg
ret
add
add
add
or
mov
repnz
nop
cld
jae
cmpsl
jl
push
add
mov
nop
push
mov
leave
nop
jmp
add
jae
test
clc
repnz
nop
cld
jae
add
add
and
andb
mov
clc
repnz
nop
cld
jae
add
add
mov
adc
and
add
add
iret
addb
ja
xor
dec
ss
nop
push
mov
leave
nop
jmp
add
pop
mov
clc
repnz
nop
cld
jae
add
sub
add
and
add
add
clc
repnz
nop
cld
jae
add
add
mov
lea
push
mov
xchg
ret
add
mov
add
add
and
push
mov
xchg
ret
add
jl
out
addb
inc
adc
add
repnz
nop
cld
jae
add
dec
mov
nop
push
mov
leave
nop
jmp
add
add
add
call
cld
jae
xchg
add
add
ljmpw
jne
inc
add
add
add
mov
repnz
nop
cld
jae
add
fcomps
sbb
movsb
clc
repnz
nop
cld
jae
sub
add
add
inc
or
repnz
nop
cld
jae
xchg
sub
pop
add
jmp
repnz
nop
cld
jae
add
add
push
fwait
out
pop
les
nop
cld
jae
add
push
add
pop
push
mov
xchg
ret
add
sub
sub
addb
jb
mov
clc
repnz
nop
cld
jae
cmp
add
add
dec
cmp
repnz
nop
cld
jae
inc
fisubs
push
mov
ret
cwtl
cmp
or
add
rorl
push
add
clc
repnz
nop
cld
jae
push
xchg
push
or
nop
nop
cld
jae
add
add
push
jge
movb
repnz
nop
cld
jae
loop
mov
pusha
push
mov
xchg
ret
fiadds
in
add
add
daa
xchg
insl
add
nop
push
mov
leave
nop
jmp
sub
add
add
add
and
dec
push
mov
xchg
ret
dec
add
pop
stos
mov
add
nop
nop
cld
jae
repz
jmp
lahf
add
clc
repnz
nop
cld
jae
add
popf
add
jl
mov
call
nop
push
mov
leave
nop
jmp
add
fwait
add
add
in
leave
nop
jmp
add
addb
sub
sub
push
mov
xchg
ret
xchg
add
add
inc
mov
pop
clc
repnz
nop
cld
jae
in
add
popf
lea
mov
repnz
nop
cld
jae
sub
add
inc
fadds
add
cmp
nop
push
mov
leave
nop
jmp
push
add
mov
clc
repnz
nop
cld
jae
add
cmp
repnz
nop
cld
jae
add
fadds
sub
cmpsl
add
push
mov
xchg
ret
add
sub
fwait
add
mov
add
add
cld
jae
popf
pop
add
inc
add
in
push
clc
repnz
nop
cld
jae
pop
xchg
add
cmp
jl
and
push
mov
leave
nop
jmp
popl
fwait
mov
lea
add
clc
repnz
nop
cld
jae
sbb
add
add
cmp
call
clc
repnz
nop
cld
jae
addb
outsb
leave
push
clc
repnz
nop
cld
jae
stos
sub
add
cmp
add
aas
jb
add
mov
in
pop
daa
add
xor
push
clc
repnz
nop
cld
jae
jmp
jg
clc
repnz
nop
cld
jae
add
sub
repz
mov
push
inc
push
dec
clc
repnz
nop
cld
jae
add
add
sub
repnz
nop
cld
jae
add
push
pop
mov
add
nop
push
mov
leave
nop
jmp
cmpsl
xchg
iret
add
cmp
mov
nop
nop
cld
jae
and
push
clc
repnz
nop
cld
jae
xor
add
je
shl
push
mov
xchg
ret
inc
add
add
add
add
mov
in
leave
nop
jmp
mov
addb
fwait
and
cmp
add
clc
repnz
nop
cld
jae
inc
sub
add
add
repnz
nop
cld
jae
fsubrs
add
mov
clc
repnz
nop
cld
jae
add
add
add
lea
call
inc
add
mov
add
pop
add
clc
repnz
nop
cld
jae
xchg
add
iret
add
nop
cld
jae
mov
add
or
clc
repnz
nop
cld
jae
pushf
add
inc
mov
push
mov
xchg
ret
lea
jnp
fwait
in
add
mov
push
mov
xchg
ret
in
add
movl
add
jg
inc
add
jl
add
dec
add
nop
push
mov
leave
nop
jmp
add
mov
mov
leave
nop
jmp
add
xchg
daa
add
fwait
xchg
jne
clc
repnz
nop
cld
jae
add
mov
mov
jbe
clc
repnz
nop
cld
jae
pop
add
add
rolb
xor
adcl
push
mov
leave
nop
jmp
addb
lea
push
mov
xchg
ret
int
jl
pop
xor
xchg
fwait
clc
repnz
nop
cld
jae
sbb
mov
add
movsl
clc
repnz
nop
cld
jae
fwait
add
fwait
push
nop
push
mov
leave
nop
jmp
add
mov
mov
xchg
push
je
dec
add
clc
repnz
nop
cld
jae
repz
add
in
movzwl
clc
repnz
nop
cld
jae
and
add
sub
loopne
mov
clc
repnz
nop
cld
jae
add
fwait
add
in
mov
in
sahf
push
add
add
adc
xchg
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
iret
add
fmuls
in
leave
nop
jmp
add
add
add
pop
xor
dec
cmp
push
mov
leave
nop
jmp
loop
xchg
add
add
add
cld
jae
add
add
mov
xchg
ret
xor
add
pop
jl
sub
testl
nop
cld
jae
fwait
sub
add
add
add
clc
repnz
nop
cld
jae
cmp
add
mov
movb
gs
add
add
add
add
jl
not
clc
repnz
nop
cld
jae
add
add
mov
add
add
repnz
nop
cld
jae
push
cmp
add
ret
mov
clc
repnz
nop
cld
jae
add
sub
add
nop
push
mov
leave
nop
jmp
add
add
mov
loopne
lds
mov
xchg
ret
daa
jnp
pushf
jl
sub
stos
add
sti
push
mov
xchg
ret
or
add
jnp
add
or
and
clc
repnz
nop
cld
jae
add
push
out
add
shrl
repnz
nop
cld
jae
add
int3
test
call
cltd
imul
add
fwait
add
in
add
xor
cmp
add
lock
add
incl
xchg
add
add
adc
in
leave
nop
jmp
add
add
add
fwait
dec
flds
push
mov
leave
nop
jmp
dec
add
mov
adc
int3
scas
mov
jge
clc
repnz
nop
cld
jae
fwait
add
cmpsl
dec
add
add
js
je
clc
repnz
nop
cld
jae
add
mov
push
mov
leave
nop
jmp
add
cmp
jnp
add
clc
repnz
nop
cld
jae
pop
xchg
repz
pusha
cmp
mov
xchg
push
push
mov
xchg
ret
add
iret
add
add
fadds
sbb
popa
pop
inc
add
add
add
add
rcrb
nop
cld
jae
int
jnp
add
sub
lret
test
icebp
clc
repnz
nop
cld
jae
add
xchg
cwtl
push
dec
mov
nop
push
mov
leave
nop
jmp
loop
add
cmp
push
mov
leave
nop
jmp
add
add
add
and
ret
nop
push
mov
leave
nop
jmp
add
add
add
pop
lods
clc
repnz
nop
cld
jae
mov
add
add
xchg
mov
push
mov
xchg
ret
jmp
or
shlb
clc
repnz
nop
cld
jae
add
dec
fwait
add
sub
nop
cld
jae
add
add
mov
push
mov
xchg
ret
add
fadds
sub
inc
add
mov
clc
repnz
nop
cld
jae
add
or
add
repnz
nop
cld
jae
dec
add
add
daa
in
jmp
add
add
outsb
fadds
add
add
pop
cmp
jb
add
add
add
incl
nop
nop
cld
jae
add
mov
and
nop
cld
jae
add
mov
mov
seto
in
leave
nop
jmp
dec
jnp
pop
add
pusha
cmpb
add
iret
add
add
add
add
pop
add
scas
push
clc
repnz
nop
cld
jae
add
cmp
add
push
movl
add
in
outsb
dec
and
add
pop
push
mov
xchg
ret
add
add
add
stos
add
inc
add
clc
repnz
nop
cld
jae
add
call
repnz
nop
cld
jae
push
dec
add
fwait
daa
add
nop
nop
cld
jae
add
fadds
add
aas
shr
clc
repnz
nop
cld
jae
add
decl
scas
enter
in
leave
nop
jmp
add
jnp
fwait
add
nop
cld
jae
sub
jmp
add
and
lret
add
clc
repnz
nop
cld
jae
stos
push
or
push
sub
push
xor
clc
repnz
nop
cld
jae
fwait
sub
call
clc
repnz
nop
cld
jae
xor
in
repz
nop
cld
jae
xorb
cmp
mov
push
mov
leave
nop
jmp
and
mov
addr16
clc
repnz
nop
cld
jae
add
add
add
fwait
sub
push
insb
ret
mov
nop
push
mov
leave
nop
jmp
add
pop
pop
push
mov
xchg
ret
xchg
add
add
add
mov
clc
repnz
nop
cld
jae
add
outsb
std
iret
fistpl
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
add
dec
push
push
adc
add
push
mov
xchg
ret
std
add
push
add
fwait
dec
dec
fistpl
push
mov
xchg
ret
push
add
add
mov
pop
clc
repnz
nop
cld
jae
add
add
sub
add
clc
repnz
nop
cld
jae
add
popf
add
je
clc
repnz
nop
cld
jae
fadds
jnp
push
clc
repnz
nop
cld
jae
add
fsubs
adc
nop
nop
cld
jae
add
loop
add
imul
clc
repnz
nop
cld
jae
in
add
fcomps
clc
repnz
nop
cld
jae
add
add
and
nop
push
mov
leave
nop
jmp
add
dec
mov
clc
repnz
nop
cld
jae
add
mov
and
adc
mov
xchg
ret
add
cmp
jnp
add
sub
in
leave
nop
jmp
add
push
fdivrs
fsubs
repnz
nop
cld
jae
outsb
mov
cmpsl
subb
push
mov
leave
nop
jmp
add
push
out
cmpsl
iret
push
clc
repnz
nop
cld
jae
dec
iret
int
pushf
loop
add
sub
add
repnz
nop
cld
jae
add
jmp
lea
add
out
mov
add
repz
cmp
nop
push
mov
leave
nop
jmp
add
add
rcll
repnz
nop
cld
jae
sub
add
inc
add
iret
in
dec
out
and
jns
test
sar
clc
repnz
nop
cld
jae
jnp
add
xchg
imul
push
mov
xchg
ret
add
add
add
pop
sub
jne
inc
add
in
add
add
cmpsb
mov
clc
repnz
nop
cld
jae
add
sub
out
push
clc
repnz
nop
cld
jae
xchg
mov
push
inc
sub
add
mov
clc
repnz
nop
cld
jae
cmp
add
add
popf
jo
aad
leave
sub
repnz
nop
cld
jae
add
pushf
add
add
dec
cmp
repnz
nop
cld
jae
cmp
pop
add
sub
popl
clc
repnz
nop
cld
jae
int
add
xchg
call
clc
dec
inc
clc
repnz
nop
cld
jae
out
add
and
je
clc
repnz
nop
cld
jae
mov
sbb
push
mov
xchg
ret
xor
add
sub
add
test
repnz
nop
cld
jae
add
mov
xor
jmp
add
dec
loop
add
add
add
repz
xchg
mov
mov
clc
repnz
nop
cld
jae
add
add
jne
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
jl
add
int
add
add
clc
repnz
nop
cld
jae
add
inc
mov
jl
xor
nop
jmp
add
sub
fcoms
lods
lea
nop
push
mov
leave
nop
jmp
add
addb
add
mov
cmp
ret
add
or
mov
sbb
mov
xchg
ret
xchg
jmp
sub
add
nop
nop
cld
jae
xchg
add
add
dec
mov
call
cld
jae
xchg
repz
add
daa
pop
push
mov
xchg
ret
orb
push
jl
addb
push
lea
nop
push
mov
leave
nop
jmp
add
xchg
sub
add
mov
clc
repnz
nop
cld
jae
add
add
iret
inc
mov
pop
adc
or
cmp
ret
xor
xor
add
gs
nop
push
mov
leave
nop
jmp
add
int
add
clc
repnz
nop
cld
jae
inc
fadd
add
and
pusha
rcr
clc
repnz
nop
cld
jae
loop
pop
add
add
and
jge
clc
repnz
nop
cld
jae
add
or
out
or
and
clc
repnz
nop
cld
jae
cmp
add
add
add
movzwl
clc
repnz
nop
cld
jae
xchg
add
push
mov
leave
nop
jmp
add
add
add
and
orl
jns
add
pop
add
push
daa
add
repnz
nop
cld
jae
inc
mov
add
aam
clc
repnz
nop
cld
jae
int
add
add
sbb
push
mov
xchg
ret
add
add
jmp
inc
xlat
clc
repnz
nop
cld
jae
add
jmp
pop
add
clc
repnz
nop
cld
jae
push
pop
add
add
pop
jmp
push
mov
xchg
ret
mov
add
or
mov
xor
mov
sub
loopne
mov
mov
mov
xchg
ret
add
add
add
add
pusha
adcb
mov
clc
repnz
nop
cld
jae
add
push
add
jmp
mov
leave
nop
jmp
xchg
add
add
sbb
clc
repnz
nop
cld
jae
add
daa
add
add
push
mov
leave
nop
jmp
outsb
fwait
int
sub
push
lcall
sub
cmp
ret
mov
fwait
add
jnp
insl
and
nop
push
mov
leave
nop
jmp
add
jne
clc
repnz
nop
cld
jae
sub
jbe
push
clc
repnz
nop
cld
jae
add
cmp
mov
clc
repnz
nop
cld
jae
out
out
daa
fmul
xor
nop
nop
cld
jae
outsb
pushf
popl
dec
add
test
nop
push
mov
leave
nop
jmp
push
add
push
add
push
nop
push
mov
leave
nop
jmp
cmp
sub
stos
shl
add
nop
push
mov
leave
nop
jmp
jmp
ficomps
loopne
inc
clc
repnz
nop
cld
jae
xchg
out
add
mov
mov
leave
nop
jmp
popf
stos
lea
mov
call
nop
jmp
add
add
repnz
nop
cld
jae
add
cmpsl
jnp
push
nop
push
mov
leave
nop
jmp
xchg
pop
popl
sbb
jle
add
clc
repnz
nop
cld
jae
addb
xchg
and
jnp
push
clc
repnz
nop
cld
jae
fwait
add
cmp
jnp
nop
nop
cld
jae
daa
std
stos
cmp
lea
aam
sub
clc
repnz
nop
cld
jae
push
jnp
add
je
nop
push
mov
leave
nop
jmp
add
sub
repnz
nop
cld
jae
add
add
fwait
add
clc
repnz
nop
cld
jae
fcomps
add
xor
call
nop
jmp
loop
sub
inc
loopne
movzwl
push
mov
xchg
ret
add
mov
lods
inc
mov
in
sub
mov
add
push
add
mov
cmp
mov
cli
add
sbb
rcrb
test
mov
inc
lcall
repnz
mov
xor
flds
or
and
loop
rol
icebp
aad
mov
adcl
mov
das
push
dec
cmp
sbb
pusha
addb
jo
loopne
pop
cmp
das
inc
add
push
loopne
pop
outsl
sub
inc
mov
dec
dec
mov
jecxz
rol
cltd
sbb
lret
and
xchg
cmp
pusha
out
shrl
or
loopne
repnz
inc
ds
rorb
cltd
add
and
and
popf
fidivl
movb
or
adc
bound
pop
xchg
pusha
in
push
flds
addb
xchg
jge
sbb
mov
pop
fisubrl
ficoms
loopne
adc
inc
andb
scas
add
mov
ror
inc
fistl
shlb
jb
xchg
inc
dec
xchg
int
mov
cld
xor
xor
mov
cmpsb
add
and
pop
jp
add
sbb
insl
testl
xchg
add
aaa
out
arpl
lea
repnz
ret
jp
push
xor
subl
rol
dec
fcompl
and
in
mov
inc
aaa
int3
lds
mov
xlat
mov
stos
ss
aaa
mov
ljmp
call
xchg
lods
pusha
pusha
xor
cmpsb
add
data16
in
pop
mov
loope
mov
add
mov
add
addb
ret
das
adc
lds
call
addb
in
pop
sub
cmc
int3
dec
fiadds
and
popa
sbb
sub
roll
fistpll
fistl
mov
mov
mov
std
push
movb
add
pusha
movsb
and
iret
inc
mov
inc
xor
push
insl
rorl
movsl
out
cmp
cld
testl
js
popf
rcrb
add
mov
mov
scas
cwtl
mov
cmpsl
mov
jb
mov
inc
and
shrl
jge
aaa
rcll
add
repnz
in
mov
mov
pop
lds
and
xlat
cmp
add
push
rcll
sbb
xorb
test
shlb
mov
rolb
add
gs
cwtl
rcrl
push
add
cmpsb
inc
mov
in
cwtl
shrl
adc
mov
xchg
jne
xor
movsb
inc
loopne
adc
int
push
sub
pop
lods
and
add
xchg
shrl
mov
push
repnz
jb
fnstcw
and
ret
out
lods
inc
mov
xchg
cmp
fdivp
sbb
add
pusha
push
inc
movsl
sub
stos
andb
inc
adc
shr
cltd
inc
mov
addr16
or
pusha
and
xor
sbb
decb
pop
cmp
pusha
pusha
mov
mov
aam
push
inc
loopne
mov
sbb
cld
mov
add
in
gs
sub
rol
cltd
outsl
xchg
jle
sub
mov
daa
int
jae
pop
sahf
sub
ja
adc
add
mov
cmpsl
fstps
inc
enter
add
mov
addb
add
hlt
mov
or
add
and
mov
xchg
inc
mov
mov
es
loopne
mov
ficompl
in
xchg
stos
shlb
mov
test
andb
test
add
loopne
dec
sahf
cs
loopne
push
outsl
sub
add
inc
in
pushf
aas
add
and
pop
adc
mov
sbb
pop
iret
bound
out
mov
mov
mov
jb
jl
js
cltd
clc
cmc
ds
stos
pop
lods
rcrb
mov
jo
and
pop
adc
jmp
sub
orb
inc
or
and
xor
pop
adc
xchg
dec
cwtl
and
dec
nop
mov
push
inc
cmp
gs
inc
ds
and
cmp
cltd
loop
loopne
outsl
pop
adc
add
cmp
and
movsl
fnstenv
hlt
movsl
mov
jmp
insb
adc
pop
mov
push
mov
lret
adc
push
mov
scas
shlb
aaa
xchg
or
inc
shll
ret
and
adcb
jo
inc
pop
xor
jbe
mov
mov
jmp
andb
scas
push
mov
cmp
mov
ds
mov
sahf
std
add
push
loopne
fwait
xorl
fdivl
dec
scas
xor
rcrl
rolb
sbb
mov
mov
add
addb
mov
adc
mov
insl
mov
loopne
jecxz
rolb
inc
loopne
and
inc
inc
xchg
out
lahf
ja
mov
jb
js
call
xor
mov
push
jne
mov
jo
js
lahf
sahf
pop
xchg
pop
push
and
add
sub
andl
sbb
movsl
dec
push
mov
in
xlat
loope
add
loopne
mov
mov
and
mov
fdivl
sbb
adc
popf
test
rorb
inc
ret
jo
mov
pushf
mov
add
xchg
dec
mov
inc
pop
pop
inc
fidivrs
xchg
fcmovnbe
out
loopne
mov
mov
push
ja
mov
rcrb
or
shr
in
push
fldt
and
mov
inc
rcrb
mov
fcmovnb
pop
pop
fs
push
icebp
ljmp
fwait
mov
loopne
leave
push
push
imul
iret
loope
and
out
das
leave
mov
rorl
dec
addr16
mov
mov
sti
cmp
inc
mov
pusha
sub
inc
fucomi
or
add
cli
inc
repz
mov
outsl
xchg
addl
mov
in
push
and
movsb
inc
loopne
adc
lcall
scas
shlb
inc
pop
mov
aaa
cmp
pop
mov
add
iret
fsubl
addb
xchg
mov
outsb
inc
lea
and
iret
mov
rcr
xor
xchg
imul
pusha
rcrb
sub
scas
add
inc
in
add
loope
imul
mov
and
dec
arpl
sub
addb
dec
push
fs
lods
sub
mov
loopne
mov
sub
insl
mov
addb
add
mov
and
xor
scas
mov
xor
jbe
lds
dec
bnd
mov
rcrb
test
inc
movsl
push
cmc
loopne
sti
aas
mov
pusha
lods
outsl
pop
aas
dec
scas
inc
inc
dec
mov
inc
xor
addb
mov
or
loopne
push
mov
xchg
aam
inc
and
inc
ljmp
aaa
mov
cmp
aam
andb
cmc
add
jecxz
adc
pop
xor
sahf
xchg
test
add
shll
aas
lret
sti
mov
nop
jae
aam
mov
mov
fists
dec
pop
stc
fs
adc
cltd
sub
shll
mov
fstps
jmp
aas
xchg
bound
je
aaa
clc
lock
or
rolb
pop
js
loopne
pop
xchg
adc
cwtl
lahf
or
movsl
or
pusha
mov
mov
pusha
dec
outsb
loop
daa
andb
xor
loopne
sbb
lahf
aam
inc
and
jno
shlb
and
loopne
sub
and
sbb
pusha
pusha
xor
fdivs
test
mov
mov
ja
inc
mov
aad
popa
call
inc
andl
dec
outsl
jno
sub
mov
push
lock
and
dec
lds
or
loopne
clc
mov
data16
shlb
and
rclb
jo
rolb
mov
mov
in
sub
add
sub
pusha
cmp
shlb
pusha
xorb
add
cmp
add
and
or
aaa
ret
lods
pusha
loopne
leave
in
sti
mov
mov
push
xor
mov
repnz
lret
shrb
push
inc
inc
rcll
sub
inc
add
out
cmc
fisubs
cmp
sub
rol
call
outsl
stos
fsubl
les
pusha
fisttpl
fldt
mov
ret
in
ret
pop
xchg
aas
mov
lds
push
int3
add
mov
popa
loopne
je
pop
sub
das
negl
inc
mov
sbb
pusha
add
addl
inc
mov
or
add
jg
movsl
pop
sub
je
jne
je
push
mov
xor
xchg
and
and
dec
and
add
cmc
cmc
push
andb
addb
adc
ds
mov
les
pop
mov
mov
mov
pop
aad
dec
lds
xor
and
test
adc
or
aad
ja
popa
inc
mov
add
and
add
and
and
lods
dec
rolb
sbb
loop
mov
xchg
push
icebp
sti
sahf
inc
push
outsl
lret
jns
sub
add
enter
loopne
gs
cltd
jne
icebp
cmpsb
andb
arpl
jno
cmp
and
push
call
or
test
pusha
sarb
aas
test
add
pop
dec
data16
or
sbb
mov
inc
je
and
and
xlat
hlt
repnz
sub
xchg
sarl
xor
sub
loopne
jo
fwait
cmpsl
and
loopne
dec
andb
aad
cwtl
sbb
stos
shlb
int
mov
mov
repnz
xlat
jecxz
in
rclb
add
lds
rolb
insb
push
xchg
fstpl
sbb
inc
lods
mov
out
inc
jl
or
popa
dec
pop
iret
mov
mov
and
sbb
add
outsb
test
add
pusha
xor
jecxz
inc
cli
push
adc
into
loop
int3
or
mov
xor
dec
cwtl
iret
cmp
xchg
sar
mov
lcall
cmc
mov
and
jp
repnz
inc
and
add
lcall
xchg
xorl
mov
pusha
rorb
adc
inc
adc
push
stos
adc
pop
leave
lea
mov
in
add
loopne
sbb
lcall
loopne
or
inc
pop
xor
xor
imul
loop
cmp
rcll
push
add
in
lods
pusha
pusha
fldt
int3
pushf
test
inc
andb
shlb
mov
jbe
mov
ret
neg
pop
sub
ja
pop
addb
and
mov
insl
in
int3
dec
sub
in
js
and
cmp
idivb
mov
addr16
lahf
dec
stos
add
lret
stc
pop
insb
inc
cmpsl
mov
sub
add
loopne
je
and
insb
mov
rolb
xor
mov
sarb
inc
dec
sub
mov
inc
pusha
or
lretw
jg
loopne
cmpsl
ret
loopne
in
das
ja
pop
sahf
jge
test
mov
scas
push
xchg
mov
or
rolb
inc
les
and
mov
das
pusha
and
cmp
in
imul
inc
int3
xlat
mov
in
cld
cwtl
sarl
inc
and
lahf
mov
fs
cmp
pop
in
ficoms
add
fmuls
lods
inc
inc
aad
inc
inc
lret
test
loopne
lods
add
loopne
mov
push
dec
rcrb
mov
adcb
into
or
loopne
test
lock
cltd
stos
and
or
jp
inc
xchg
leave
insl
or
outsb
lcall
mov
xchg
flds
inc
mov
leave
mov
lcall
mov
shl
cmp
push
jp
inc
or
shlb
jg
xlat
imul
addb
xchg
adc
dec
add
mov
js
cwtl
loop
mov
cmp
pop
pop
mov
or
cmp
fs
xor
xchg
leave
sbb
sub
mov
dec
mov
sub
add
loopne
int
mov
iret
pop
adc
test
mov
mov
std
add
ret
inc
test
mov
enter
pusha
inc
jge
jne
adc
push
cld
xchg
push
mov
add
and
mov
leave
daa
add
loopne
push
loopne
add
int3
add
inc
sbbl
imul
loopne
push
cwtl
pop
and
andb
mov
xchg
cmc
aad
pop
stc
xor
jb
fcmovbe
pop
jp
mov
sbb
jno
inc
xor
cmpsb
loopne
and
xor
lea
mov
ret
cld
sbb
push
ret
jo
icebp
cld
xchg
push
pusha
sbb
mov
fnstenv
sub
test
xorb
or
mov
popa
jg
add
popa
enter
out
lret
and
movsl
mov
mov
xor
pusha
mov
inc
jb
outsl
cmp
xor
aaa
sbb
cltd
cmp
sti
xchg
sbb
jle
cmpsl
adc
or
mov
cmp
mov
dec
adc
add
aas
or
mov
xchg
jnp
test
mov
mov
push
pop
lds
mov
ljmp
inc
xor
dec
fdivrl
inc
add
add
mov
call
imul
cmp
in
sub
sub
pusha
dec
jge
in
clc
ss
or
mov
lea
xor
inc
loopne
mov
data16
mov
inc
push
pop
jg
orl
pop
shll
mov
and
adc
or
rolb
xor
pop
nop
adc
loop
or
in
fisttps
ja
mov
movsl
cmpsl
push
iret
dec
je
cmp
cmp
cli
cmpsb
loopne
lcall
aam
cli
jmp
or
daa
cmp
movsb
shlb
ret
xchg
mov
shrb
frstor
push
add
sub
shlb
cltd
add
orl
sarl
jb
push
test
pusha
xchg
add
inc
sbb
dec
movsl
arpl
arpl
aaa
std
repz
xor
mov
loopne
shl
xchg
das
ja
and
mov
add
mov
lods
addr16
das
pop
hlt
lds
and
or
es
jns
jge
mov
into
aas
adc
fistps
inc
ret
loopne
inc
mov
cmp
jp
dec
sahf
ljmp
lret
ret
fwait
add
add
push
aam
rol
insl
addb
mov
imul
testl
cmpxchg
mov
lods
nop
lock
and
aam
orl
pop
outsb
adc
mov
sbb
inc
and
inc
mov
rol
ds
dec
jno
imul
arpl
icebp
add
stos
andb
jo
enter
and
pusha
and
mov
xchg
addb
inc
mov
jno
xor
add
lahf
inc
cld
ljmp
shlb
sti
loopne
push
lahf
test
pusha
scas
rolb
lock
sbb
inc
scas
loopne
jmp
js
and
mov
addb
cmp
addr16
cld
pop
cmp
outsl
xor
dec
imull
in
cmp
cmp
jno
imul
ja
movsb
pusha
adc
loopne
rolb
mov
push
jne
cmpsb
loopne
add
adc
cli
int
aad
and
mov
inc
xor
cmp
add
shl
mov
cmpsl
sub
scas
shlb
xchg
dec
mov
andb
or
adc
sub
mov
jecxz
sbb
sub
mov
lods
and
xlat
sarl
mov
inc
add
adc
in
shr
xchg
shrl
les
test
pusha
mov
adc
pop
jbe
ds
dec
mov
scas
dec
push
jp
jb
and
mov
insl
pop
mov
fildll
add
jo
idivb
xor
cmpsb
rolb
fcoms
pusha
inc
leave
sub
in
dec
xchg
loopne
outsb
mov
pusha
lea
mov
andb
mov
jp
addb
sti
mov
mov
shll
mov
and
inc
orl
xchg
pop
sti
xlat
cmc
shll
mov
pop
test
ficompl
ret
adc
mov
imul
rolb
jmp
ficoml
addb
or
xor
adc
daa
or
pusha
lods
addb
icebp
popa
dec
call
loopne
movsb
add
pmuludq
scas
andb
mov
gs
in
ret
adc
loopne
sub
inc
pop
pop
pusha
mov
loopne
in
xor
mov
dec
mov
lock
and
rorb
inc
jle
pop
cmp
arpl
jl
loopne
jnp
test
pusha
fwait
out
cmp
je
loopne
das
dec
outsl
inc
sbb
pop
lds
pop
xchg
pop
les
mov
aas
pop
rcl
imul
push
loopne
addr16
outsb
fldl
shlb
aad
or
sbb
bound
or
mov
add
add
xor
mov
ret
sahf
dec
pop
or
hlt
xchg
rorb
rorb
mov
out
cmp
ja
add
arpl
fistpl
pop
jo
int
add
and
dec
inc
bound
fnsave
inc
and
and
ljmp
add
push
sar
sbb
loope
inc
mov
sub
jmp
std
test
mov
adcb
inc
mov
adcb
push
loopne,pn
out
mov
adc
xchg
andb
add
xor
add
adc
xchg
leave
mov
sar
test
pusha
pusha
lods
je
cmp
mov
ret
push
and
inc
mov
rolb
stos
push
stc
mov
cmp
pusha
lods
inc
pusha
push
dec
stos
shl
xchg
ficoms
and
loopne
jne
fdivrs
xchg
mov
add
cmpsl
add
xorb
icebp
lret
pop
inc
daa
mov
sub
push
shlb
int
and
outsb
pop
aas
pushl
add
push
cmp
inc
and
bound
andb
cwtl
enter
lret
xchg
lret
push
jl
outsb
nop
lods
mov
mov
dec
mov
and
fdivrs
insb
and
cmp
xchg
sarl
andb
or
inc
leave
jmp
xchg
enter
inc
cld
mov
add
dec
test
sbb
ffreep
lea
cmc
ret
jg
fcmovnu
das
push
inc
sub
pusha
cs
dec
sbb
repnz
outsb
xor
and
loopne
shl
mov
hlt
pop
enter
in
mov
inc
push
addr16
js
imul
dec
sbb
out
das
jo
mov
add
pop
outsl
scas
pusha
orb
mov
fsubs
nop
or
lock
arpl
push
sub
clc
loope
xlat
inc
xor
stc
mov
loopne
stc
andb
cld
adc
aaa
outsl
xor
and
add
jae
inc
inc
xchg
inc
and
jo
push
push
fiadds
inc
mov
mov
or
mov
adc
fstps
pop
test
add
jge
loope
xchg
sbb
inc
shlb
add
leave
push
mov
rolb
in
loopne
inc
add
inc
outsb
adc
xchg
bound
scas
add
cld
add
or
mov
andb
lret
dec
ret
shlb
andb
or
add
and
jo
repnz
add
adcb
mov
mov
mov
pusha
iret
xlat
jp
or
inc
push
add
dec
push
shll
stos
sub
std
sbb
xchg
lods
add
rol
push
mov
push
and
ret
push
loop
in
mov
inc
mov
notb
loopne
lret
lock
jle
aaa
shr
sahf
jg
data16
loopne
hlt
dec
roll
push
mov
pop
outsb
sti
add
dec
bound
jne
imul
and
jnp
push
inc
inc
ret
or
adc
lock
xor
jns
push
jecxz
pushf
push
lcall
push
mov
push
adc
rol
lock
in
push
pop
xorl
shlb
lret
pusha
loopne
adc
sahf
gs
bnd
add
movsl
dec
pop
jo
aas
enter
jnp
in
pop
mov
out
ror
js
or
pusha
lock
ret
add
xchg
sbbb
icebp
add
jecxz
dec
gs
sub
push
and
pop
sub
adcb
cmpsl
mov
inc
jl
popf
push
sub
loopne
aad
mov
sub
cmpb
loopne
lods
add
cmp
ficoms
lock
lahf
jp
sbb
sahf
mov
and
and
jae
add
mov
jo
jge
shlb
mov
inc
jae
loopne
in
xchg
inc
jo
cld
enter
mov
lret
std
jmp
inc
cwtl
std
sub
shl
mov
fnstsw
fadd
lods
gs
ret
xor
inc
inc
sahf
mov
shrl
xor
pop
pop
lods
loopne
les
inc
rorl
mov
das
es
dec
push
dec
mov
sti
pushf
sub
add
shlb
cltd
inc
insb
jg
adc
ret
jnp
shlb
and
fistps
imul
adc
mulb
arpl
mov
test
inc
rclb
add
movsl
les
stos
mov
cmp
lahf
pop
inc
or
rcrb
cmpsb
mov
es
shl
add
cmc
mov
mov
sub
inc
adc
add
inc
mov
pusha
and
loopne
inc
ljmp
in
xchg
in
and
andb
add
scas
cltd
loope
xchg
pop
dec
push
add
aad
pop
sbb
lcall
mov
cld
cwtl
idivb
push
pusha
mov
dec
sbb
add
xchg
and
add
rclb
push
mov
lds
and
imul
xor
inc
inc
cmp
aas
adc
loopne
mov
push
cmp
add
shl
clc
sbb
repnz
test
loopne
pop
pop
je
ss
lea
std
std
pop
hlt
dec
test
popf
rcrl
data16
out
ret
scas
add
cs
add
mov
popa
sub
loopne
pop
dec
pop
lret
in
rolb
pop
cmp
fcomi
pop
lret
data16
iret
arpl
cltd
repz
fiadds
daa
push
adc
dec
imul
add
xchg
lahf
lods
and
dec
pushf
leave
andb
and
inc
lds
or
fcomi
mov
fnsetpm(287
iret
cwtl
loope
push
and
and
je
iret
mov
loopne
or
xchg
and
adc
and
call
adcb
test
aam
and
cmp
or
inc
xchg
mov
fwait
pop
xor
and
sbb
test
cmp
scas
jg
add
and
xchg
addb
push
rolb
arpl
dec
sarl
mov
mov
leave
hlt
iret
outsl
outsl
js
push
dec
inc
mov
xor
clc
push
js
mov
roll
mov
jnp
xor
andb
xchg
and
mov
or
and
sub
pusha
xor
pusha
add
imul
iret
shlb
or
leave
jnp
cmpsb
add
shlb
cmpsl
rcr
sbb
outsb
dec
stos
xor
mov
push
jmp
and
inc
clc
sbb
push
cmp
sar
and
test
add
or
mov
outsb
or
sar
cwtl
pop
or
sub
addb
test
insl
in
hlt
dec
nop
cmc
iret
mov
mov
out
mov
into
call
and
fdivl
addl
mov
pusha
adc
out
movsl
les
push
loopne
add
jg
fwait
stc
inc
lcall
or
inc
fs
pop
jno
inc
sub
addb
pusha
loopne
rcr
fcomps
sbb
and
xchg
and
mov
ljmp
push
lods
and
push
stos
mov
test
loopne
repnz
rolb
and
and
mov
xor
sub
out
sub
add
int
lods
pusha
inc
jno
adc
andb
mov
mov
pusha
and
jge
ret
loopne
inc
and
inc
xor
punpckhbw
inc
add
pop
dec
movsb
and
cwtl
addr16
icebp
cmp
jle
inc
loopne
and
and
fnstenv
pusha
xor
cmp
pusha
hlt
adc
and
cwtl
rclb
rclb
push
pop
scas
and
out
xchg
inc
mov
cbtw
scas
and
sbb
andb
mov
stos
push
adc
and
inc
popa
std
fnstenv
addb
sarb
mov
mov
pop
nop
jp
add
or
scas
mov
mov
mov
inc
fsts
imul
mov
add
divl
pusha
inc
jnp
and
dec
shrb
dec
leave
nop
pop
faddl
mov
rclb
scas
and
xchg
xchg
push
aad
jae
cmp
stos
ss
inc
sbb
mov
inc
and
arpl
ja
pusha
rcrb
xorl
loopne
xor
nop
xchg
adc
popa
jmp
inc
mov
loopne
push
cmp
jne
pusha
xorb
sbb
sbb
sbb
push
add
jb
jmp
push
cmp
ds
fidivl
cmp
hlt
test
push
pusha
jbe
inc
dec
or
or
data16
adcb
rcr
and
sti
push
ret
loop
mov
sbb
xchg
fwait
into
int3
fisubs
inc
orb
dec
in
sub
mov
sbb
add
jp
je
rorb
mov
enter
aam
push
loopne
xchg
xchg
dec
stc
in
sbb
sub
inc
add
xor
movsb
and
gs
rcrl
out
rolb
and
icebp
push
adc
lahf
stc
cmpsl
lret
pop
dec
mov
je
or
jns
and
dec
repnz
inc
out
bound
clc
out
inc
cmpsl
mov
jecxz
and
pusha
sbbb
pop
mov
cmp
xor
shl
cmpsl
out
popa
cmp
mov
mov
push
mov
push
mov
add
imul
loopne
dec
push
jl
pop
and
and
inc
rep
inc
rolb
sar
jl
addb
call
pop
popa
cmpsb
mov
ficoml
inc
loopne
stos
shl
imul
jb
adc
mov
mov
sbb
pop
ret
mov
inc
push
aad
pop
sub
add
xor
and
rol
sub
mov
popf
aaa
or
mov
adc
gs
mov
jbe
or
xchg
iret
faddl
inc
orb
rol
cmp
push
enter
sub
sub
mov
add
imul
popa
jecxz
cmp
push
sbb
or
push
sub
jecxz
mov
and
loopne
out
sub
and
loopne
xchg
outsl
push
mov
inc
mov
jb
mov
jge
push
or
and
or
add
jl
pusha
sbb
add
mov
in
aas
in
and
ds
shlb
and
and
shrb
and
lcall
mov
mov
mov
pushf
pop
mov
xchg
mov
lds
jge
adc
test
addb
test
lret
je
inc
adc
jp
mov
mov
push
pusha
pusha
scas
shl
mov
js
sub
rorb
jbe
mov
shlb
mov
adc
addr16
mov
xor
inc
sarb
pop
push
addb
jg
mov
gs
and
lea
iret
adc
in
andb
aam
mov
mov
adc
push
popf
push
lret
cmpsb
loopne
out
arpl
les
pop
or
dec
in
lcall
pop
inc
mov
in
jo
push
adc
cmpsb
mov
add
mov
sub
das
jbe
fstl
push
leave
sar
add
mov
push
fadds
cmpw
add
or
dec
pop
das
mov
and
pusha
ror
xor
pusha
inc
popa
jg
inc
cmp
mov
rol
add
mov
and
and
mov
imul
xor
inc
out
sbb
dec
jae
mov
inc
push
adc
xor
inc
and
stos
pop
shll
jns
and
repz
int3
push
add
jp
loopne
andl
andb
jae
int
or
cmp
and
cmp
inc
lcall
xchg
jg
daa
inc
mov
lods
pop
insb
stc
sub
sbb
out
rolb
fchs
inc
push
sti
aam
aaa
hlt
test
rol
faddp
push
inc
lret
andb
lea
jg
sbb
pop
and
sub
inc
jne
and
fs
imul
or
mov
jge
sahf
fwait
jb
mov
and
pusha
or
inc
sbb
leave
imul
or
data16
fucomp
xchg
adc
icebp
jae
and
dec
outsb
mov
int3
mov
add
pop
fcoms
lods
addb
subl
mov
and
lods
andb
mov
xor
xor
cmpsb
pusha
and
pop
lcall
and
fcmovbe
inc
mov
popa
pop
inc
test
inc
cmpsw
fcmovne
dec
movsl
push
cmp
pop
dec
ret
jle
fcomps
int3
fisttps
test
jle
inc
or
loopne
push
andb
rolb
outsb
mov
fld
add
push
dec
inc
popf
lods
pusha
cmp
loopne
sub
cmc
out
ret
movsb
loopne
out
push
add
sbb
rcr
sub
mov
call
adc
xchg
add
add
mov
in
push
sahf
pop
pop
mov
in
andl
dec
inc
js
les
and
pusha
adc
call
mov
and
call
add
in
sub
and
mov
inc
shlb
add
inc
push
jge
jne
mov
hlt
stos
add
repnz
sbb
sbb
xchg
cmp
sub
add
inc
pusha
mov
fabs
push
sbb
mov
and
call
adc
dec
data16
sub
add
cmp
fst
inc
in
jne
mov
push
lret
enter
out
ss
aaa
sub
rcrb
add
sbb
ja
or
sbbb
test
xor
sub
cmp
sub
xchg
dec
mov
cwtl
jle
lock
and
sub
add
lods
loopne
mov
fiaddl
push
sbb
pusha
cmp
stc
add
loopne
pusha
and
outsb
enter
adc
fs
fwait
mov
movsl
xchg
pushf
or
pusha
pop
andb
mov
add
xchg
andb
mov
andb
insb
lret
test
movsb
and
in
pop
sar
fcmovbe
push
sbb
add
cmp
xchg
xor
icebp
cmp
xchg
and
and
insl
sbb
repz
gs
pop
or
pusha
push
xchg
mov
cwtl
cli
cmp
add
imul
jns
and
loopne
mov
pusha
shl
pop
and
add
mov
mov
and
nop
mov
adc
mov
mov
jb
loope
mov
loopne
dec
pusha
lock
stos
pop
dec
mov
jmp
fmuls
shlb
stos
cltd
sti
push
enter
or
je
mov
add
add
add
push
inc
mov
jge
lea
add
cmpb
scas
add
test
and
aas
stc
hlt
mov
in
int3
lahf
lea
mov
je
pusha
ror
divb
ljmp
loopne
cmp
je
shlb
repz
dec
test
mov
jle
sarb
xchg
push
call
pushl
jmp
pusha
adcb
andb
jl
mov
in
andb
shlb
sbb
test
push
imul
and
repz
add
push
addb
and
int
cmp
gs
fnstsw
dec
sti
sub
sbbb
daa
cli
pop
jb
daa
add
xor
push
lods
inc
inc
jmp
pusha
and
std
xchg
cmp
loopne
mov
inc
or
push
nop
lods
scas
cmp
loopne
ficompl
push
mov
mov
xchg
mov
cmp
pusha
or
ficomps
inc
mov
add
and
add
rcrb
repz
popa
out
lcall
mull
pushf
jp
lret
sub
push
sub
add
jecxz
sub
pusha
cmp
inc
lea
push
mov
dec
popl
and
add
loopne
dec
xchg
stos
mov
loopne
inc
mov
lods
insl
mov
loopne
lods
loopne
stc
jl
push
popf
mov
fnstenv
pop
pop
fcomp
vunpcklpd
lahf
loop
mov
shrl
pusha
pusha
mov
loopne
hlt
pop
mov
icebp
mov
and
inc
loopne
aam
inc
add
mov
shl
ja
xchg
sub
rcl
hlt
jecxz
add
inc
mov
lock
xchg
shlb
jnp
stos
popf
pushf
and
inc
or
and
and
repz
adc
addr16
mov
addb
mov
mov
movsb
rolb
jle
xchg
and
pusha
push
inc
xchg
or
mov
cmp
xor
jg
and
and
pop
js
clc
pop
std
or
shl
xchg
xchg
or
and
mov
in
loop
loopne
push
insl
testb
and
out
mov
ret
pop
loopne
scas
sti
cmc
mov
and
fmull
xchg
out
xor
inc
ss
add
xor
mov
movsl
add
push
and
addb
xor
addb
cmp
imul
out
cmpsl
into
push
mov
add
push
outsb
fimuls
andb
pop
add
roll
inc
xor
mov
xorb
cmpsb
shlb
or
mov
scas
nop
sub
out
xor
adc
imul
int
mov
shlb
mov
stos
rolb
andl
test
adc
inc
pop
sarb
jp
in
or
cmp
fistl
jnp
push
rcrb
lds
bound
sbbl
or
rolb
adc
mov
loopne
sub
mov
and
call
outsl
pop
adc
mov
xchg
aam
mov
xorb
pusha
loopne
adc
dec
sub
and
in
rclb
stos
andb
aad
sbb
sbb
adc
negb
and
orb
add
mov
test
rcrb
jne
rcll
mov
loopne
loopne
mov
in
lcall
xchg
lock
push
jno
test
scas
jp
icebp
loope
int
sub
add
mov
out
xor
push
lods
cwtl
jmp
pusha
sub
mov
add
fsubrl
nop
aas
call
dec
sbb
mov
cld
pop
add
andb
and
sub
inc
test
popa
andb
stos
sbb
stos
loopne
inc
cltd
dec
mov
in
add
add
pop
pop
je
adc
mov
inc
pusha
stos
mov
loop
insb
push
and
push
fs
rolb
pop
push
fisttpll
add
sub
imull
mov
stos
daa
pop
fadds
push
push
pushf
or
inc
pop
and
les
lcall
inc
cltd
or
sbb
loop
mov
and
mov
and
xlat
cmp
in
ret
dec
cmp
adc
adc
ljmp
std
jo
popf
gs
jmp
rolb
rclb
dec
scas
imull
push
and
sbb
inc
ret
sti
mov
xor
mov
jne
mov
cmc
lods
mov
push
cmpsb
and
jmp
fnstcw
iret
iret
fstl
fwait
outsb
movsb
mov
inc
out
test
in
inc
or
dec
test
sub
and
loopne
lods
cmp
aaa
rorl
jg
movsbl
dec
pop
add
rolb
inc
and
es
sub
lahf
or
fadd
mov
leave
lea
outsb
loop
push
es
jbe
sbb
xchg
jnp
addb
jbe
jle
daa
in
push
add
and
movsl
stos
adc
inc
mov
and
shlb
bound
and
aam
lods
dec
adc
cli
add
loope
and
jb
mov
ret
fdivrp
es
mov
mov
xorb
or
daa
arpl
or
imul
je
ljmp
cmp
mov
fs
mov
mov
and
and
in
rol
pop
stc
cmc
fisttpl
push
add
test
rcrl
sbb
mov
in
nop
fnsave
sbb
stc
inc
mov
mov
pop
or
mov
andb
cltd
pop
sub
addb
rcll
dec
sbb
jbe
sbb
xlat
out
and
xchg
pop
in
xchg
and
cmp
divb
jb
cmp
mov
inc
mov
mov
push
dec
jl
lods
mov
add
cmp
adc
inc
mov
test
cmpsb
add
jecxz
mov
sbb
add
int3
in
add
loopne
lods
scas
addb
inc
add
rolb
ds
xor
xchg
jo
add
ror
mov
icebp
call
inc
jno
pushf
xchg
jmp
jae
imull
fwait
xchg
push
add
and
or
cmc
push
lock
rcl
clc
mov
pusha
mov
sbb
xlat
inc
out
xchg
cmpl
rclb
pusha
pop
in
dec
ss
addb
rolb
sbb
jnp
inc
xor
mov
add
sub
loopne
adc
pop
xchg
push
jae
ljmp
mov
add
and
cmp
pop
into
and
loopne
jno,pt
dec
and
sbb
mov
mov
pusha
add
pusha
aas
in
or
rcl
mov
sbb
mov
add
movsb
rolb
sbb
push
xchg
imul
stos
add
pop
pop
cmp
and
call
jp
xor
or
or
loopne
add
mov
jp
pop
push
loopne
dec
dec
inc
xlat
push
and
inc
sahf
int3
test
mov
mov
test
jns
inc
rclb
jle
mov
jp
rolb
imul
xchg
sbb
mov
push
pusha
mov
dec
fcomi
mov
push
inc
into
xor
sub
mov
pop
ja
mov
add
and
and
rolb
loopne
mov
mov
int
repz
mov
aad
or
loopne
sub
inc
and
add
scas
addb
sbb
and
sub
cmp
push
push
and
or
rorb
and
add
sbb
xchg
and
mov
xchg
sbb
lcall
mov
ja
adc
dec
test
shl
inc
jne
mov
jl
add
outsb
sti
mov
adc
mov
insl
push
fisubrs
inc
rcl
sub
loopne
js
dec
pusha
push
cli
lret
push
mov
out
xor
into
loope
cmpsb
inc
add
inc
out
test
pusha
mov
cmpsl
jmp
jp
pop
into
xchg
scas
cmp
sbb
mov
pusha
arpl
mov
dec
mov
inc
mov
loopne
sbb
movsb
add
ljmp
into
mov
inc
mov
push
sbb
add
add
push
fnstsw
shlb
jns
add
jl
dec
cmp
cmp
in
shlb
adc
push
or
test
mov
fcomps
dec
jecxz
and
mov
xchg
pop
repz
mov
inc
loopne
add
addr16
jb
int3
mov
cmc
aas
cmp
jecxz
popl
ja
arpl
shll
rol
movsl
fidivs
mov
mov
ss
pop
ja
pop
push
xor
xlat
cld
sub
aas
cli
dec
mov
mov
mov
add
out
imul
cmpsb
add
test
in
mov
mov
gs
mov
aaa
cmp
mov
repz
sbb
pop
dec
cmp
insb
mov
jnp
xorl
jnp
and
inc
pusha
pushf
xor
in
enter
loopne
mov
loope
in
lods
das
xlat
inc
cltd
mov
loopne
repnz
mov
lds
fwait
cmp
lcall
test
and
inc
lods
aaa
fwait
ret
adc
push
rol
inc
loope
or
add
in
hlt
lea
dec
jmp
call
loopne
cmpsb
inc
and
sub
xchg
addl
sti
lds
push
repz
loopne
jg
xchg
or
jmp
add
pop
dec
add
pusha
mov
fnstcw
and
or
call
pusha
inc
mov
fs
sbb
test
inc
sbb
ja
sbbl
jmp
lds
sbb
ret
mov
popa
jge
sbb
and
add
pusha
loopne
jno
cmp
mov
pop
dec
fchs
mov
imul
dec
lret
lock
push
jnp
rorb
loop
loopne
pop
push
loop
xlat
pop
pop
cmp
xor
xchg
cmc
cmp
and
rcll
loopne
loopne
pop
adc
shrb
ret
add
shlb
dec
inc
sbb
xor
sbb
and
ret
sub
loopne
mov
add
fistpl
rcr
sbb
pop
lods
mov
loopne
pop
pop
iret
add
and
adc
xor
faddl
inc
pusha
mov
sbb
push
and
pop
movl
pushf
inc
and
mov
mov
mov
repnz
inc
std
xor
cli
filds
adc
sub
push
push
jbe
cmpsb
pusha
inc
pop
insb
and
mov
mov
pusha
dec
in
test
andb
adc
mov
loopne
mov
mov
pop
dec
repnz
and
xor
mov
les
sub
jo
dec
cmp
das
in
mov
pusha
ljmp
or
and
add
dec
and
fwait
xlat
pop
inc
int
lea
or
filds
add
add
push
mov
fidivrs
sub
mov
cmp
or
add
out
loope
aas
cli
push
mov
in
cmp
mov
lods
lods
addb
push
pushf
clc
scas
loopne
lds
fisubrl
cmp
bound
and
les
ret
stc
popa
aaa
sbb
loopne
rolb
sbb
mov
rcll
shrb
push
push
and
sti
icebp
inc
pop
fldt
pusha
mov
mov
mov
mov
addb
addb
or
inc
push
dec
add
add
pop
aad
fisttpl
inc
ja
lods
lods
mov
loopne
ficoms
sahf
ja
add
mov
stos
mov
pop
idiv
add
arpl
stos
inc
test
scas
add
dec
dec
cwtl
sbb
rol
xchg
sub
insl
nop
mov
lods
les
bound
cwtl
dec
fisttps
add
xchg
sbb
mov
loopne
and
sbb
enter
jo
popf
xchg
repz
sarb
xor
cmp
jle
mov
inc
loopne
and
ret
cmpsl
inc
or
xchg
xor
cltd
imul
pop
adc
enter
dec
bound
popa
mov
les
lret
stos
ds
inc
movsb
mov
data16
loopne
mov
mov
out
jg
push
fcoml
pop
adc
bound
dec
jno
push
enter
add
cld
add
xorb
and
and
loop
cld
lods
jp
adc
pop
mov
add
or
int3
clc
outsb
mov
xor
lahf
insb
loop
ret
fdivl
cmc
insl
andl
pusha
sbb
xor
inc
or
xchg
out
movl
xor
testl
js
out
xchg
mov
adc
or
rolb
mov
push
lds
xor
mov
loopne
enter
je
and
add
adc
pusha
pusha
add
push
lcall
jp
std
sub
daa
dec
popf
adc
sub
xor
or
xorb
mov
pushf
jo
adc
cs
add
or
add
jg
fdivs
add
jmp
cli
test
adc
pop
dec
pop
or
daa
mov
adc
fiaddl
pop
lret
fsubrs
pop
mov
mov
push
int3
mov
adc
stos
jl
mov
inc
mov
mov
mov
xor
mov
cmp
jl
in
jmp
push
push
mov
call
xlat
and
push
mov
pop
mov
inc
lret
dec
out
pop
lock
pop
fistl
or
mov
inc
cmpsb
shl
jnp
jne
jp
lret
xchg
shll
adc
pop
mov
sub
mov
sub
in
dec
fbstp
adc
pop
xchg
xchg
jl
pop
jle
sbbl
test
inc
add
shl
dec
shrb
add
add
inc
aam
cld
pushl
cmc
cld
iret
push
stos
sub
mov
subb
add
mov
push
pop
sar
cld
fucom
je
in
xchg
jne
xchg
test
mov
shl
andb
lahf
xlat
cmc
mov
xorb
mov
pusha
mov
test
loopne
and
push
pushf
add
inc
out
lret
scas
loopne
dec
push
and
dec
rclb
or
xchg
aam
push
scas
js
dec
push
mov
xor
aad
inc
add
add
enter
add
loopne
dec
cmp
lods
pusha
pusha
jg
dec
dec
mov
lret
cmp
xlat
cmpsl
das
lock
and
cmp
add
inc
pusha
js
movsl
push
pop
enter
xor
mov
loopne
mov
add
aad
or
and
test
mov
aam
pop
mov
pusha
and
pusha
and
mov
inc
in
scas
mov
rcrb
ret
repz
in
pop
or
inc
out
insl
lcall
adc
pop
fwait
dec
pop
leave
loop
rclb
je
or
lahf
scas
add
push
sti
scas
rol
jbe
loopne
or
pop
jg
inc
push
shlb
and
addb
adcb
and
test
pop
enter
xor
pop
pop
push
xor
inc
std
in
add
mov
inc
jb
addb
pushf
data16
pusha
mov
and
gs
in
xchg
adc
xchg
sahf
cmp
xor
and
shl
cmp
fcoml
in
or
rorb
and
mov
stc
movsb
add
mov
inc
and
rolb
xchg
jp
ss
leave
lahf
jl
shlb
je
hlt
jae
inc
aam
add
jmp
lret
dec
mov
mov
and
shlb
cmp
mov
pop
push
bnd
and
inc
mov
shlb
mov
and
aas
cmp
faddp
in
xor
inc
inc
shl
andb
inc
popf
jb
jmp
lahf
adc
cmp
loopne
fsts
lods
jmp
int
xor
sahf
add
subb
movsl
push
std
int
mov
call
cmp
push
or
sbbl
loopne
and
stos
rolb
jo
pop
push
pop
dec
or
popa
mov
outsb
adc
addr16
push
jge
mov
push
or
loopne
andb
lods
and
and
jo
movsl
pop
ljmp
jl
sub
add
call
pusha
xor
addb
jmp
lahf
jecxz
dec
sahf
inc
dec
iret
jo
and
dec
pop
dec
imul
jbe
xor
inc
adc
mov
pop
mov
inc
push
fcompl
pushf
bnd
sub
insb
movsl
xor
pop
daa
and
cmpsl
icebp
sbb
xchg
lcall
add
mov
popf
movsb
and
mov
pushf
js
mov
scas
add
inc
and
fcomip
sbb
and
das
test
addr16
ds
int3
movsl
dec
shlb
cmp
and
mov
push
inc
or
shlb
xor
mov
adc
mov
inc
bnd
sbb
sbbb
int3
jns
movsb
add
icebp
adc
mov
rol
fnstenv
arpl
movsb
inc
loopne
cli
jno
mov
js
sub
and
or
fbstp
inc
mov
fldcw
lods
inc
loopne
fldenv
shlb
andb
lds
inc
test
and
rolb
pusha
jecxz
stos
shlb
xchg
adc
int3
mov
mov
jecxz
sahf
lock
and
jbe
jno
push
adc
inc
add
cmp
fdecstp
fnstcw
xor
addb
loopne
pop
fidivrs
and
sub
inc
mov
fld
xchg
push
mov
lock
nop
adc
pusha
lahf
push
in
push
insl
aad
fwait
inc
into
adc
imul
add
add
and
mov
push
mov
push
andb
and
add
xor
sbb
pop
leave
fistps
adc
mov
rolb
mov
and
and
jmp
decb
addr16
scas
pusha
subb
sbb
inc
mov
xchg
sbb
cli
dec
cli
dec
mov
repnz
popa
aam
xor
cmp
movsb
andb
xchg
imul
pop
mov
sarl
cmpsw
fyl2xp1
fdivs
pusha
mov
and
idivb
jp
push
rcrl
pop
popa
mov
or
iret
imul
rolb
dec
ss
cmpsb
add
nop
push
and
bound
mov
xchg
rol
je
shl
inc
mov
dec
mov
xchg
cmc
fs
push
and
inc
sbb
cwtl
addr16
or
test
sub
or
pop
and
and
imul
pusha
and
js
clc
push
or
addr16
mov
jb
mov
push
and
xor
pop
adc
push
add
pop
xchg
cwtl
jnp
and
loopne
dec
shlb
daa
pop
mov
jecxz
call
outsl
bound
push
mov
cltd
inc
mov
daa
xchg
out
inc
pop
lahf
inc
mov
lods
and
add
fs
jl
jo
int
icebp
pop
mov
loopne
xor
cli
mov
mov
nop
pop
out
add
mov
ljmp
pusha
loopne
xchg
int
lret
and
shrb
loopne
dec
jp
adc
inc
xchg
shlb
daa
call
sbbb
push
pop
gs
daa
enter
dec
fsts
stos
and
rcll
and
mov
sahf
push
jns
scas
fldcw
sahf
shll
add
push
and
and
xchg
into
mov
cwtl
sub
and
mov
arpl
popf
mov
jg
xlat
or
sahf
gs
mul
hlt
aad
sub
cmpb
cld
lods
scas
sahf
das
loopne
add
jne
mov
adc
inc
loop
pop
in
pusha
loopne
push
add
push
add
jns
pushf
push
jne
mov
and
aaa
mov
jb
loope
sub
pop
and
mov
xchg
sarl
mov
xor
mov
enter
add
sti
xor
adc
pop
in
loop
loopne
xchg
jbe
jmp
add
mov
or
cs
pusha
jecxz
sub
and
jo
aam
inc
add
pusha
sub
ror
loopne
js
addb
push
mov
loopne
mov
add
outsb
pusha
xchg
push
and
add
fcoms
mov
inc
or
mov
shlb
je
out
and
mov
andb
lock
and
ror
xchg
dec
xchg
lods
and
daa
icebp
sahf
or
pusha
in
mov
pop
jno
jg
push
sbb
xchg
mov
adc
inc
mov
sbb
outsl
enter
mov
mov
loopne
mov
and
mov
adc
cs
loopne
mov
loopne
jle
mov
add
pop
shlb
inc
shlb
pusha
add
leave
jne
mov
and
mov
push
icebp
mov
inc
dec
mov
inc
cmp
mov
pusha
jle
rolb
lock
cmp
jno
loopne
scas
add
mov
ret
je
lods
repz
or
loopne
add
xor
cld
cmc
data16
lods
inc
loopne
pop
inc
jo
rcll
sbb
push
or
mov
loopne
cmp
lcall
and
ficoms
mov
mov
loopne
mov
lods
and
repz
and
stc
into
mov
loopne
lods
inc
shrb
or
add
gs
cmp
hlt
and
mov
adc
cmpsb
and
xchg
fstpt
jb
outsl
add
cmp
or
cld
pop
mov
mov
jno
xchg
dec
rclb
xlat
pop
pop
push
neg
popa
outsl
aas
int
pop
mov
mov
push
outsl
stos
shlb
push
xchg
inc
sbb
test
mov
loopne
inc
pusha
mov
push
mov
out
int3
xchg
inc
push
pusha
loopne
fistpll
xor
add
pop
test
rolb
adc
pop
inc
or
pop
or
test
sarb
adc
cmc
les
cmpsb
pusha
mov
inc
sbb
and
mov
mull
pusha
ljmp
push
fisubrl
add
ss
inc
movsl
in
add
pusha
or
add
aam
dec
nop
pushl
cmpsb
pusha
loopne
ds
jo
sti
out
fwait
cli
dec
das
pop
or
movsb
and
inc
lea
add
inc
mov
and
stc
addb
daa
adcl
imul
add
outsl
pop
movsl
les
pusha
shlb
mov
pop
and
inc
imul
hlt
or
add
xchg
mov
stos
and
pushf
ds
jmp
leave
shll
mov
jae
xchg
dec
cmpsl
mov
jp
hlt
ja
mov
fstp
push
jne
push
and
in
insb
outsb
clc
ss
lods
jb
imul
inc
add
rolb
add
sbb
dec
push
pushf
dec
gs
mull
loop
shlb
aad
sbb
pop
mov
add
pop
xchg
mov
push
jo
repnz
sahf
lret
out
stos
xchg
bound
repnz
pusha
push
jmp
frstor
sbb
shlb
and
jmp
add
inc
or
mov
popa
enter
adc
fcompl
or
mov
jle
inc
mov
cmc
movsl
test
mov
lret
repz
mov
push
shlb
rolb
rol
cwtl
mov
lahf
add
inc
pop
iret
dec
xchg
out
cmc
mov
dec
mov
mov
adcl
cld
cld
out
inc
fs
inc
add
je
adc
jecxz
and
push
daa
adc
in
movsl
cmp
xchg
add
inc
test
loopne
adc
push
into
pusha
repz
dec
out
push
add
movsl
cld
fistpll
sub
sub
adc
loopne
adc
pusha
clc
lds
pusha
mov
cli
shlb
sbb
andb
dec
add
or
std
cmp
pop
cmp
or
loopne
push
add
mov
das
sub
pop
aam
not
imul
mov
mov
mov
stc
insl
enter
or
sbb
andb
adc
clc
inc
mov
jmp
mov
push
jae
loopne
add
mov
sbb
add
inc
add
enter
and
loopne
rolb
and
pop
icebp
int3
cmp
jl
cmp
movsl
mov
loopne
out
or
add
jnp
adc
scas
loopne
jp
and
fbld
mov
fadd
testl
call
and
ret
and
xlat
sub
pop
push
rorb
ja
or
loopne
mov
mov
inc
fs
jbe
in
daa
mov
inc
jmp
pop
outsb
cltd
sub
push
lahf
and
pusha
and
mov
xor
lock
scas
cmp
daa
mov
jmp
je
jb
in
adc
jecxz
fsubl
test
inc
lods
inc
add
outsb
and
rcr
mov
sub
add
adc
fwait
add
mov
mov
and
loop
mov
xchg
sbb
jle
push
out
mov
sbb
je
xchg
mov
loopne
and
or
and
jp
and
loopne
jecxz
and
sbb
es
mov
fisubs
andb
push
mov
pusha
and
mov
int
add
lahf
ret
mov
rorb
pop
jb
mov
add
aam
mov
jb
loopne
pusha
pusha
xchg
adc
cli
mov
mov
pusha
pop
add
jnp
addb
cltd
add
or
and
pop
jge
mov
or
add
mov
xchg
jge
add
inc
shrl
cmp
dec
shrb
adcl
andb
add
pusha
ljmp
into
dec
mov
dec
pop
inc
mov
mov
and
stos
mov
mov
hlt
mov
cmp
js
andb
xchg
lods
pop
inc
jmp
mov
ja
sbb
orl
aaa
cmp
dec
fmuls
jne
dec
adc
cmp
mov
mov
sbb
xor
cmp
nop
movsb
pusha
add
adc
addb
pop
lret
stos
psubq
and
ds
sahf
mov
and
push
loop
pop
sbb
pop
adc
xchg
lods
xor
pop
imulb
mov
cmp
and
cld
cmp
pop
jge
vmaxpd
cmp
in
sbb
push
popf
fs
push
pop
mov
push
call
dec
jge
add
push
inc
mov
mov
or
xchg
mov
pushf
mov
faddl
loopne
bound
and
data16
mov
mov
pusha
sub
loopne
dec
add
and
repz
sub
xchg
inc
loopne
addb
mov
loopne
inc
dec
stos
sub
mov
mov
add
push
andb
and
pusha
xchg
loopne
andl
add
inc
sbb
call
adcl
add
and
stos
jno
mov
div
sub
push
add
shl
xchg
test
cli
or
sub
add
cmpsb
add
cmp
push
loopne
push
adc
mov
and
stos
rolb
ds
lahf
fstpl
inc
xor
je
mov
flds
shlb
andb
mov
loopne
and
mov
dec
push
shlb
mov
stos
pusha
shll
enter
push
andb
out
dec
fmuls
testb
cmp
cmp
dec
loope
cmp
xlat
lret
pop
sbb
addb
pop
mov
add
jbe
popa
lcall
addl
shl
outsb
adc
mov
mov
push
rolb
fistpll
cmp
loopne
and
loopne
inc
movsb
mov
and
and
sub
leave
test
jecxz
fs
and
jb
cltd
push
pusha
inc
pop
jae
dec
sarl
pusha
addb
mov
pusha
pusha
mov
mov
jge
cmp
mov
sub
dec
adc
add
push
mov
sti
sub
addb
pusha
mov
mov
fcmovb
test
pop
mov
loopne
frstor
loopne
sub
sub
mov
jmp
loope
cld
stos
inc
pusha
mov
mov
mov
mov
sarl
aam
pusha
pusha
mov
loop
fsubrl
int3
cmp
dec
mov
mov
mov
cmp
push
loopne
xchg
jp
mov
loopne
push
sti
inc
icebp
sub
lss
mov
push
mov
add
xchg
xor
fwait
popa
xchg
out
xchg
cmc
mov
fldcw
cmc
sbb
xlat
pop
test
lahf
push
lods
addb
loopne
daa
mov
cmp
and
in
lret
inc
mov
pop
push
pusha
loopne
fnsave
push
add
fwait
jle
call
inc
fsts
xchg
sub
loopne
fsubp
outsb
push
push
mov
mov
incb
aam
aaa
inc
jg
std
out
lds
xor
push
xor
jecxz
cmp
mov
adc
mov
pop
idivl
fidivrs
inc
mov
add
ret
and
cmp
push
lods
add
add
xor
and
scas
sub
inc
jae
sbb
xor
push
add
mov
scas
push
pusha
subb
mov
pusha
xchg
pushf
mov
dec
push
loopne
std
xor
push
xor
add
xor
dec
jo
inc
pop
ret
mov
lahf
jb
cmc
sub
mov
loopne
inc
loopne
and
movsl
fsubrs
dec
xor
and
test
xchg
addb
add
sub
arpl
pop
ljmp
out
jmp
mov
inc
pop
in
jno
adc
inc
mov
loop
addb
rcrl
add
sahf
inc
xor
mov
jns
mov
sbb
pusha
add
aas
int3
test
fcoms
push
xor
insl
into
mov
and
loopne,pn
rcrb
jno
insl
leave
aam
cmp
jb
inc
add
jmp
shlb
ss
aad
or
addb
loopne
sbb
push
je
test
les
cmp
fwait
xchg
cs
setge
pop
out
in
stc
cld
xlat
adc
mov
and
push
sbb
mov
and
xor
lock
mov
jb
ret
int
xor
inc
push
mov
mov
lods
xchg
pushf
repnz
mov
push
lods
outsl
js
sbb
andb
pop
gs
mov
fwait
jmp
add
and
inc
in
hlt
pop
lea
xlat
fldcw
repnz
sti
adc
pop
push
sub
scas
or
sarb
pusha
jmp
jbe
cmpsl
rcl
xlat
xchg
shlb
outsl
movsl
jmp
push
aaa
mov
loopne
push
gs
mov
mov
push
call
pusha
add
mov
ja
mov
clc
mov
out
sarb
stos
inc
add
mov
icebp
add
mov
dec
mov
sub
jbe
or
and
jg
mov
inc
out
fs
and
xor
fdivrs
mov
shrl
popf
sub
push
div
dec
shlb
outsl
add
and
loopne
test
mov
push
popf
jge
mov
sbb
mov
inc
push
push
pusha
outsl
jnp
jb
jecxz
add
inc
ss
push
lcall
and
addb
scas
cmp
movsl
fidivs
ja
add
aad
test
out
add
sarb
out
mov
js
sbb
inc
insb
pusha
and
push
mov
scas
push
dec
xor
xchg
mov
mov
lcall
or
pop
fptan
out
dec
dec
cmp
enter
jns
pop
int3
sahf
out
in
jg
sub
mov
jae
mov
add
outsl
mov
stos
add
inc
les
lcall
popf
or
loopne
into
rol
out
int
movsb
pusha
shlb
lahf
sbb
mov
mov
xor
mov
jmp
es
imul
addb
daa
std
mov
ret
inc
xchg
push
insb
jo
shl
in
push
push
mov
mov
pop
lock
loope
into
jae
mov
jo
dec
xor
ljmp
fsts
lret
pop
xor
and
int3
sub
shll
rol
into
cmpsb
inc
mov
and
dec
or
add
cwtl
into
in
mov
out
repz
cltd
jg
add
lahf
bswap
xchg
sub
and
daa
addl
mov
pop
pusha
lds
cwtl
mov
ret
aaa
mov
cmpb
push
mov
sti
in
cmp
mov
pop
add
loop
pusha
loopne
and
cmpsb
mov
jae
addb
xor
xchg
dec
stos
and
xchg
ret
cmp
pop
in
pop
mov
aad
int3
mov
jecxz
repnz
pop
pop
mov
pusha
mov
add
fsub
sub
pusha
dec
fcoms
pop
ret
sbbl
mov
sarl
cmp
shlb
xchg
add
mov
jg
std
cmp
and
aam
icebp
cmp
sbb
and
pusha
push
sub
insl
repnz
aas
les
push
aad
pop
lds
imul
out
adc
addr16
loopne
jmp
test
ljmp
daa
shrb
nop
xchg
stc
jnp
clc
stos
mov
cli
cltd
test
and
xchg
sub
addb
xor
cli
xor
arpl
out
inc
ja
lea
add
push
pop
sub
add
xor
jmp
sbb
icebp
fisttpll
mov
or
add
dec
sahf
sbb
stos
add
dec
stos
mulb
out
xor
loopne
push
aad
rcr
inc
pop
sub
inc
out
jl
sbb
pusha
mov
dec
shl
dec
xchg
rolb
enter
orb
stos
pusha
loopne
mov
and
ror
js
movsl
scas
push
and
mov
lret
bound
loopne,pn
repz
sub
inc
and
sbb
or
push
cmp
pusha
loopne
test
mov
jl
jecxz
push
push
sbb
inc
adc
mov
ja
push
std
movsb
addb
sbb
add
lods
push
sbb
cmp
and
sub
inc
xor
subl
insb
js
mov
outsb
inc
fistpll
mull
sbb
aas
jl
repz
lea
add
or
dec
mov
sahf
std
xorl
pop
cmp
jge
insb
into
in
subl
and
add
lcall
andb
loopne
push
and
add
inc
sub
pusha
pop
jg
add
sarl
xchg
mov
push
adc
out
das
loope
pop
out
insl
mov
loop
cwtl
jle
sarb
pusha
pusha
xchg
mov
out
aad
pop
mov
push
sub
and
shlb
clc
mov
or
movsb
add
inc
adc
mov
mov
jb
stc
push
in
aaa
inc
fwait
je
loopne
imul
les
pop
xor
rolb
mov
ljmp
push
cmp
cmpsb
loopne
mov
adcb
das
enter
lret
cmp
add
mov
testb
inc
loopne
aam
adc
pop
addr16
sbb
mov
xor
inc
sbb
jno
and
lret
cwtl
out
imul
scas
mov
mov
loopne
jb
mov
loope
mov
sub
pusha
jecxz
pusha
inc
mov
mov
pop
movsl
sbb
ret
add
inc
xchg
push
daa
cmp
not
in
or
push
mov
loopne
enter
loopne
add
shlb
movsl
fldlg2
or
outsl
fs
jbe
xlat
cmp
sub
xorb
pusha
sub
loopne
dec
mov
rorb
mov
cmpsb
inc
inc
jmp
pop
mov
loopne
xor
retw
mov
test
andb
pop
hlt
inc
or
shlb
rolb
mov
es
mov
xor
xor
andb
xor
xchg
add
test
or
add
rol
mov
cmp
sbb
push
lret
lock
fisubrl
scas
mov
mov
inc
aaa
jge
rcr
push
idiv
aad
pop
repnz
mov
and
test
pusha
dec
fdivrs
mov
mov
push
sbb
sbb
push
ret
adc
add
push
jp
xchg
pop
pop
int
pushf
loopne
xor
cltd
sbb
push
mov
pusha
mov
addb
pop
inc
cmp
insb
push
fists
shl
shlb
xchg
rorb
inc
hlt
in
int3
xor
xchg
inc
pop
in
ljmp
lcall
popf
dec
lock
mov
in
and
pusha
add
in
push
mov
push
jecxz
orl
andb
addb
ffree
dec
out
mov
push
push
or
subb
and
fisttpl
popf
push
mov
cmp
sbb
pusha
push
addb
ror
dec
sti
pop
notl
push
mov
pop
bnd
fisttpl
dec
roll
shrl
jnp
sbb
xchg
cmpl
and
rclb
imul
xor
stos
pusha
sarb
inc
lahf
push
add
hlt
fsub
add
xchg
inc
adc
out
cmp
pop
mov
scas
loopne
sbb
popf
push
outsb
test
add
and
imul
ja
addr16
ret
rol
cmc
fisttpl
lock
shl
repz
or
shlb
shrb
daa
mov
outsl
dec
in
or
or
inc
pop
aas
cli
pop
sbb
inc
push
sbb
je
push
adc
add
mov
pop
or
pusha
xor
or
loopne
dec
jle
push
jno
mov
sbb
test
test
or
xchg
mov
in
or
pusha
jo
addb
or
mov
jmp
sub
loopne
popf
push
sbb
addb
mov
jne
inc
xchg
mov
xchg
xor
and
pushf
xlat
cmp
dec
jb
xchg
rclb
rolb
cmp
gs
shlb
js
xchg
xor
adc
jmp
stc
add
push
sub
add
cli
mov
insb
stos
or
out
faddl
mov
push
and
xchg
lret
ret
xor
inc
test
loopne
sub
jecxz
sbb
loopne
ret
and
xor
jl
add
aaa
pop
push
out
push
or
sbbl
xchg
add
rol
out
sub
add
subb
xchg
insb
xor
out
pop
inc
clc
inc
divb
pusha
inc
dec
mov
cmp
int3
push
pop
pop
dec
add
add
and
xor
cli
add
add
loopne
mov
mov
nop
or
pop
lods
pop
ds
xchg
push
xchg
or
push
inc
das
jmp
add
jg
add
cmp
xor
leave
mov
inc
aaa
daa
test
and
sar
in
jge
loopne,pn
int
out
dec
push
rorb
loopne
repz
dec
pop
xor
rolb
mov
rolb
insb
jl
add
shlb
sub
inc
clc
cltd
sbb
dec
repz
gs
jne
and
inc
mov
fildl
test
pusha
rclb
fstp
frstor
add
mov
pusha
inc
add
pusha
daa
adc
ds
popa
jmp
jge
in
pop
lock
fsubrl
mov
jp
outsb
mov
pusha
and
fldenv
mov
insb
and
jo
std
push
pusha
push
or
js
xor
add
add
outsb
inc
lds
cmp
and
inc
add
mov
pusha
in
mov
mov
mov
mov
or
inc
mov
mov
rorl
pusha
pusha
in
mov
mov
mov
lahf
xchg
std
add
loopne
test
leave
gs
out
mov
jmp
adc
ficompl
cmp
int3
xor
mov
inc
popf
xchg
push
cmpsb
add
jge
adc
call
sbb
lods
mov
out
inc
cmc
add
and
pusha
mov
shll
shlb
xor
stc
mov
mov
mov
pusha
dec
dec
or
nop
push
and
xor
sbb
shrl
loop
sbb
test
pusha
mov
arpl
xchg
mov
fnstenv
push
dec
in
adc
outsl
hlt
dec
out
cld
loop
push
movsb
and
lret
or
andps
andl
fldcw
clc
ror
loopne
mov
sub
pushf
or
lods
jno
inc
add
jne
jbe
and
shr
adc
sub
and
pop
rcll
mov
shlb
loopne
push
popa
sbb
sub
xor
cli
and
and
xchg
sub
pusha
inc
jno
mov
cmp
jb
cmp
dec
enter
push
mov
les
addb
fld
stos
inc
add
test
loopne
je
inc
inc
icebp
test
mov
jb
arpl
xchg
pop
or
loopne
addb
shlb
dec
pop
ss
xchg
inc
mov
aam
mov
inc
xor
jnp
fildll
andb
cmp
outsl
mov
shl
inc
pop
push
inc
mov
or
add
pop
call
in
adc
shl
inc
jne
mov
jnp
xor
xor
fnstenv
mov
add
pop
aas
leave
push
call
jp
add
jne
and
and
leave
aaa
clc
repz
aam
rorb
dec
xor
jecxz
bound
and
add
and
rolb
inc
mov
pusha
loopne
push
pop
cmp
mov
jp
add
add
shlb
lret
jecxz
movsl
xchg
rcrb
or
pusha
aam
add
cmpsl
sti
rcr
shl
inc
inc
pop
mov
pop
popa
addr16
mov
ja
and
imul
ds
mov
loopne
lea
and
icebp
in
mov
lock
shlb
xchg
mov
scas
loopne
or
mov
outsb
fdivrs
mov
pop
imulb
popa
and
adc
and
testb
push
gs
mov
fsubp
stc
out
sar
mov
inc
and
loop
sarl
mov
addb
fs
add
mov
jl
rorl
in
or
loopne
mov
add
je
jge
mov
cmp
and
imul
xchg
mov
hlt
andb
cmp
loop
or
sbb
inc
es
sbb
mov
insl
mov
test
and
and
fildl
mov
jmp
cmp
rolb
rclb
cltd
jle
push
dec
loopne,pn
jg
cmpsw
repnz
jno
stos
shlb
or
sbbb
pop
jmp
es
and
orb
xor
mov
xchg
icebp
jne
and
stc
sahf
mov
xorb
les
lcall
ljmp
sti
mov
movsb
inc
loopne
adc
imul
mov
repnz
inc
inc
pushf
shlb
adc
cmp
xor
add
pop
in
mov
xchg
inc
add
or
inc
test
sub
cs
inc
rclb
push
inc
jne
cli
int
and
es
in
mov
mov
pop
call
pusha
loopne
stos
push
js
pop
jns
mov
mov
aam
cmp
or
test
pusha
sahf
ds
test
hlt
aad
jmp
andb
add
imul
pop
rolb
clc
push
inc
and
add
js
mov
std
mov
add
cmp
neg
daa
ficomps
push
scas
rolb
mov
cmp
dec
call
pusha
sarb
and
loopne
adc
xor
xlat
mov
fwait
addb
mov
insl
push
leave
and
pusha
imul
stos
sub
je
mov
rolb
or
and
adc
pop
pop
and
and
xchg
fbld
ljmp
loopne
cltd
arpl
inc
adc
in
jnp
add
lcall
or
pusha
jge
xchg
add
sti
adc
loopne
inc
add
cmp
sub
mov
inc
pusha
or
loope
shlb
pop
jne
jae
filds
andb
mov
adc
and
loopne
mov
adc
rorb
addb
or
jns
ja
and
xchg
shll
iret
fbld
lock
je
bound
fs
loopne
arpl
loopne
sarl
cwtl
rcrl
and
imul
mov
mov
mov
cmc
scas
add
or
pusha
ret
mov
mov
jbe
test
add
outsb
cmp
xor
and
add
xrelease
pusha
or
jl
mov
xor
pop
dec
mov
adc
dec
popa
cmp
lods
shlb
cs
xchg
xor
add
dec
sbb
jns
xchg
rclb
push
inc
stos
and
fs
test
lret
movsl
mov
js
addb
enter
stos
mov
jno
addb
or
rclb
ficoms
andb
out
xor
dec
mov
mov
inc
and
in
add
cli
out
inc
add
or
adc
add
out
sbb
and
sub
inc
aad
andb
lahf
xchg
test
inc
add
push
popa
movsb
loopne
mov
dec
in
pop
dec
repnz
or
xchg
fidivs
inc
jecxz
inc
movsb
and
call
shl
ret
mov
loopne
push
movsl
and
dec
push
cli
jb
mov
or
js
adc
pop
dec
xor
out
cld
adc
movsl
adc
push
sub
subb
jp
xchg
mov
cld
sbb
stos
ljmp
cli
jnp
lret
mov
mov
fwait
roll
das
and
cmp
mov
das
loop
shlb
pusha
inc
pop
mov
xchg
rclb
mov
and
inc
cwtl
add
add
inc
ror
loopne
in
rolb
jo
inc
mov
shl
push
mov
cltd
cmp
rorl
mov
shl
adc
les
add
mov
adc
call
lcall
movsl
imulb
push
mov
cmp
ret
cmpb
addb
cmc
cmp
fcoms
cmp
adc
out
in
jl
rol
or
mov
add
pusha
orb
or
cmpsb
shlb
addr16
loopne
fisttpl
shrb
into
fadds
push
inc
push
mov
xchg
add
andb
jg
je
aam
inc
add
loopne
adc
mov
mov
sub
jg
sbb
daa
pop
outsb
lahf
mov
ret
xor
jbe
pusha
and
push
stos
pop
js
and
add
cmp
lahf
out
orl
shlb
pusha
pusha
scas
rol
sbb
or
pusha
addb
bound
fnsave
pop
add
jne
jno
push
xchg
int
sbb
and
mov
sub
shlb
cmpsl
pop
pop
or
inc
out
loopne
insb
shrb
add
push
pusha
and
shrl
int3
sub
loopne
mov
mov
imul
dec
movd
call
xor
repz
inc
sub
inc
adc
loopne
in
repz
ds
jb
xchg
call
pop
mov
or
pusha
les
xor
mov
pop
inc
mov
rolb
fucomp
ffreep
hlt
shrb
sarl
lods
int
out
dec
adc
push
sarb
cmp
hlt
bound
inc
loopne
inc
cli
jl
out
clc
jecxz
inc
loop
cld
mov
pop
jge
notl
scas
adc
cld
mov
push
fdivrl
jl
repnz
aaa
fwait
add
jmp
pop
xchg
and
jb
pushf
cltd
ret
lock
fstps
and
inc
and
and
inc
rcrl
int
cltd
push
aas
push
or
lahf
adc
sub
push
push
pusha
and
add
stos
dec
dec
adc
mov
pusha
sub
test
xchg
inc
sti
ljmp
and
sbb
inc
shlb
xor
daa
jmp
xchg
mov
sarl
cmp
xor
mov
and
bound
add
popfw
loop
fcmovu
bound
shlb
imul
addb
xorb
pop
dec
xor
fwait
xchg
mov
cmp
lea
sub
hlt
xor
jnp
and
sahf
std
mov
ljmp
dec
cltd
mov
dec
stos
pusha
loopne
cltd
add
xor
jns
and
push
or
push
fwait
add
mov
sbb
cmp
cli
cmp
lea
xor
mov
add
pop
gs
andb
and
imul
testb
movsl
xor
rorl
call
std
sti
or
mov
or
push
dec
loope
xlat
pushf
add
loopne
mov
cmp
insl
rdtsc
sub
pop
or
andb
jp
jbe
test
add
pusha
jge
rcl
or
mov
cmc
dec
lcall
mov
or
test
ficoms
add
xchg
sbb
shl
ret
dec
ja
fists
mov
stc
push
mov
loopne
sarb
jb
dec
mov
jo
xlat
subl
les
lods
mov
pop
sbb
mov
adc
pusha
inc
sbb
aaa
push
inc
inc
lds
cwtl
push
and
pop
pop
std
mov
and
lods
inc
pusha
xor
pop
arpl
shrl
mov
jmp
div
push
sub
loopne
outsl
mov
insb
push
cs
jmp
mov
popa
push
in
mov
sub
push
sbb
add
xor
inc
xor
mov
ljmp
pop
inc
cli
and
mov
out
sbb
andb
jge
mov
aaa
inc
and
js
arpl
inc
push
fsub
mov
loopne,pn
add
and
dec
or
pusha
inc
xchg
fucomp
ss
loopne
ficoms
sbb
push
inc
inc
outsl
in
cmp
rol
mov
into
enter
push
js
push
mov
out
andb
int3
pop
ljmp
popa
in
jl
cmpsb
inc
mov
insl
jnp
loopne
cmp
xor
ret
cmp
mov
sarb
or
test
inc
into
test
aas
mov
scas
js
jo
add
mov
xchg
shl
imulb
and
aam
rcr
pop
xor
and
lods
pusha
add
and
sub
inc
fwait
pushf
push
mov
mov
dec
xlat
inc
adc
mov
dec
shll
ficoml
jno
cmp
shll
push
xchg
push
jl
test
into
mov
pusha
inc
je
inc
loopne
pop
sub
lcall
mov
faddl
clc
cltd
xor
sbb
xor
bound
add
mov
jne
mov
movsb
inc
add
sbbl
icebp
jno
sbb
test
mov
mov
aaa
pop
cmp
mov
insl
mov
data16
outsb
dec
mov
mov
jno
cmp
jecxz
pusha
sarb
dec
stos
inc
rcr
inc
cmp
lahf
popa
adc
push
js
mov
pop
jl
out
jno
mov
pop
jp
push
loopne
addb
mov
xchg
mov
push
jp
jb
sub
mov
and
cmp
mov
pop
repnz
add
pusha
or
sti
outsl
aas
loopne
sahf
es
add
and
push
pusha
mov
rclb
or
rolb
mov
inc
xchg
movl
jns
std
push
stos
mov
fsubrs
ror
cmpsb
loopne
inc
je
sbb
rorb
daa
iret
add
shlb
insb
mov
lds
xchg
mov
and
inc
jb
xchg
pop
push
rolb
mov
nop
inc
idivl
pusha
loopne
popa
mov
aaa
dec
ds
test
loopne
mov
mov
and
pusha
pop
mov
jp
xlat
lds
mov
ret
out
push
andb
rclb
jb
add
xchg
dec
sahf
in
pop
mov
loopne
xlat
clc
popa
in
sbb
icebp
mov
pusha
xor
lds
jno
pusha
and
inc
loopne
lcall
lods
inc
and
mov
sub
rorb
pusha
rcrl
shlb
std
xlat
cmp
sbb
push
xor
sub
sar
daa
adc
popf
jmp
lds
loopne
lods
addb
rcrb
inc
mov
jg
inc
add
arpl
pusha
add
sub
sti
enter
mov
add
loopne
test
add
into
test
ret
sbb
inc
cmp
add
sbbb
ss
call
mov
xchg
jbe
add
and
pusha
loopne
inc
and
add
std
lock
rorb
add
fdivl
xchg
adc
mov
push
repz
cvtps2pi
xchg
sbb
and
mov
cmpsl
fstpt
ja
jl
cli
in
add
or
inc
adc
fs
in
inc
add
dec
or
out
jmp
out
aas
imul
add
subb
add
add
dec
add
xchg
mov
xchg
clc
into
sbb
jo
mov
sbb
add
or
inc
and
xchg
and
jmp
xlat
jl
mov
cmpsl
mov
fs
aad
and
loopne
xchg
movsb
and
scas
and
pop
outsb
inc
shlb
das
xchg
jbe
bound
inc
shl
pop
mov
loopne
sub
add
adc
sub
push
aaa
add
ret
inc
mov
andb
inc
inc
arpl
hlt
pop
adc
push
fisubs
and
insl
enter
mov
jae
mov
pusha
push
or
loopne
mov
mov
pop
outsl
pop
jle
int3
dec
lret
pop
test
and
neg
test
pusha
jecxz
dec
or
addb
pusha
dec
ror
daa
int3
arpl
xor
sbb
iret
test
pusha
inc
mov
jle
fcomi
jecxz
mov
js
fdivl
pusha
pusha
dec
push
sbb
and
and
pusha
fstpt
and
jne
test
test
add
inc
inc
aaa
or
adcb
xchg
pusha
das
rol
outsl
cmp
cmpsb
and
push
rolb
arpl
shl
pop
jne
xchg
dec
mov
leave
pop
adc
lods
pusha
inc
adc
mov
push
cwtl
mov
inc
mov
or
jo
lods
add
pop
jg
and
jmp
ljmp
and
and
daa
cmp
xchg
lahf
test
lea
mov
pusha
repnz
aaa
xor
pusha
loopne
pop
adc
and
and
inc
or
outsl
dec
add
sahf
cmc
pushf
cmc
je
add
into
mov
lea
cmp
mov
bound
mov
out
inc
cli
sti
insb
add
sbb
jge
mov
inc
jp
adc
jl
and
stos
mov
out
loopne
pop
test
imul
xor
adc
sarl
rol
cmp
loop
pusha
inc
mov
add
and
loopne
mov
jne
shll
mov
sbb
imul
rolb
and
or
call
jg
ret
lret
add
push
mov
loopne
jle
dec
pushf
jbe
aad
movsb
and
shl
stos
pop
in
ja
repnz
add
fiaddl
push
or
call
lods
pusha
shrb
ss
add
js
andb
cmp
fisttpl
ss
outsb
in
xor
cmp
pop
or
mov
jle
pop
shlb
and
loopne
or
inc
jp
cld
push
mov
sbb
xchg
or
inc
mov
add
mov
clc
mov
orb
sub
enter
pop
aas
pop
ss
adc
adc
adc
mov
inc
ret
pusha
add
ss
insb
cld
lds
pop
mov
mov
sbb
xchg
sti
sbb
fistps
xor
les
mov
incl
pop
sub
shlb
mov
mov
pusha
pop
add
push
ss
test
xchg
pusha
push
jecxz
mov
jmp
jb
into
sahf
mov
and
stos
addb
inc
mov
jno
mov
insb
lcall
add
in
pop
lods
test
and
sbb
shll
sbb
dec
fadd
cmp
inc
leave
pop
inc
mov
inc
out
add
add
add
and
ja
lods
add
incl
inc
int
jne
and
xchg
add
add
jmp
and
add
mov
mov
sti
out
in
data16
repz
je
push
cwtl
and
pop
xchg
inc
sub
dec
inc
or
rclb
aad
cmp
ret
cmp
insb
lahf
rcpps
mov
call
inc
addb
mov
movsb
add
adc
inc
and
mov
imul
add
jle
pop
adc
cltd
sahf
loop
into
enter
es
add
out
sbb
mov
inc
mov
nop
lret
movb
mov
stos
mov
sub
sub
divb
dec
movsb
inc
pusha
nop
movsl
mov
loope
inc
mov
loopne
in
inc
dec
dec
pop
lods
pop
mov
mov
inc
addb
aaa
xchg
or
das
mov
adc
gs
lods
inc
and
xchg
push
ret
xor
andb
scas
add
push
and
add
hlt
push
out
stos
pushf
stos
and
pushf
jno
mov
aas
fidivrs
in
add
loopne
sbb
inc
inc
xor
lret
cmp
dec
inc
mov
int3
sbb
int3
add
gs
andb
mov
pop
dec
jns
rol
fstpl
jnp
and
cmp
cmp
jl
out
loop
incb
add
jp
push
cmpsl
mov
jge
xchg
loop
icebp
dec
stos
mov
lock
jp
mov
push
out
mov
mov
int3
mov
icebp
xchg
xchg
pop
dec
xchg
mov
inc
subb
das
jp
mov
cld
xor
test
shrb
mov
inc
inc
mov
rcr
cmp
and
xor
xchg
fwait
and
add
inc
stc
sbbl
and
daa
jae
jmp
sbb
cmp
inc
popa
pop
aaa
leave
jnp
retw
test
mov
add
andb
jmp
add
fldenv
xchg
out
in
std
pop
inc
das
leave
lcall
sarl
inc
push
xchg
cmovbe
and
dec
divl
sbb
sbb
mov
mov
sub
inc
lahf
jmp
icebp
dec
xor
jno
rclb
pusha
push
jge
pop
and
andb
sub
ja
xchg
aas
stc
cmp
or
push
jg
sbb
xor
mov
pop
mov
and
mov
mov
mov
sti
scas
add
push
repz
cmp
xor
ss
or
sub
rolb
imul
je
pusha
andb
and
add
ja
adc
mov
movsl
lods
fidivrs
in
jmp
pusha
pop
and
and
and
iret
cmp
rolb
push
add
or
loopne
inc
and
in
and
mov
loopne
repz
les
lret
mov
fldenv
test
inc
and
addb
jmp
addb
data16
cmpsb
and
dec
incl
test
rolb
pusha
and
mov
jnp
sti
cmp
fildll
mov
mov
andb
add
mov
add
hlt
sub
and
push
and
mov
fistl
cwtl
aaa
sahf
push
std
jbe
sbb
and
int
sti
andnps
and
mov
sbb
mov
shlb
cmp
shrl
and
mov
jmp
je
add
rclb
cmp
test
loopne
xlat
mov
add
xor
mov
loopne
icebp
popa
daa
testb
push
jp
repnz
push
mov
mov
movsl
pusha
loope
mov
mov
xchg
mov
loopne
jp
loopne
test
rcr
add
aaa
loope
mov
sub
ljmp
loop
add
xchg
aas
xchg
sbb
rcrl
inc
adc
mov
mov
inc
push
push
jecxz
daa
xchg
negl
shrb
rcrl
aad
pusha
inc
cltd
mov
cmp
pop
adc
inc
pusha
aad
dec
mov
and
inc
mov
jecxz
leave
sub
or
xchg
adc
adc
mov
inc
inc
imul
mov
jmp
inc
push
xchg
addr16
aam
into
lret
insb
mov
cmp
and
cltd
mov
or
and
aaa
test
jns
daa
mov
xchg
dec
mov
adc
add
fsubr
arpl
das
clc
push
fldenv
inc
rcl
dec
push
popa
xchg
cmpsb
mov
sub
add
cmp
fs
rcrb
ror
test
lret
fsubrs
add
lds
mov
shlb
aas
cltd
xchg
neg
or
mov
mov
push
rolb
mov
jecxz
loopne
mov
and
or
rorb
lods
mov
pop
fcmovne
jge
dec
lea
and
stos
call
cmp
mov
adc
inc
push
cltd
pop
sub
mul
fnstcw
mov
ss
pusha
out
xor
xchg
shlb
rolb
jbe
js
lahf
mov
and
and
cmp
aad
jle
push
and
fistps
movsb
and
lcall
dec
int3
jb
imul
or
movsb
loopne
pop
mov
imul
testl
mov
mov
adc
rol
add
and
and
xchg
xor
fildll
lods
imul
or
xchg
sahf
cltd
fnsave
and
ret
test
in
lcall
xlat
imul
add
sub
loopne
or
pop
int3
xor
push
insl
je
in
loopne
dec
nop
shll
shl
jg
adc
adc
mov
pushf
jbe
fcoms
mov
out
shl
in
pushf
imul
push
ja
xorl
mov
push
and
cwtl
out
mov
les
or
sbb
fistl
add
mov
sbb
ficoms
dec
push
adc
addl
loopne
cmp
inc
orb
loopne
loopne
adc
dec
aaa
cmp
fsts
pushl
push
cli
psraw
sahf
in
mov
mov
and
shr
mov
jg
mov
andb
stos
xchg
pusha
dec
jp
andb
shlb
test
pusha
je
cmp
ds
out
xchg
jle
andb
lcall
repnz
and
shlb
push
xor
shlb
lahf
jmp
push
xor
inc
loopne
out
je
loopne
sahf
shlb
loopne
dec
stc
inc
adc
sbb
mov
mov
movsb
mov
repnz
xchg
dec
sti
ret
inc
stos
mov
lret
dec
arpl
xlat
jne
ds
push
fcmovnb
sub
loopne
leave
jmp
pop
xor
jnp
mov
enter
and
loop
inc
mov
mov
dec
push
adc
loopne
xchg
mov
inc
ss
out
out
jnp
pop
mov
ror
lock
inc
mov
or
add
outsl
pop
push
push
push
xlat
mulb
inc
and
cwtl
dec
cltd
sub
inc
or
add
insb
dec
fidivrs
ret
adc
inc
mov
push
dec
addr16
shl
cmp
sub
mov
push
cmp
xchg
out
inc
pop
mov
mov
mov
mov
loopne
mov
mov
aaa
repz
jns
cwtl
ret
imul
dec
icebp
addb
adc
mov
pushf
add
xchg
out
jbe
mov
mov
add
int3
ret
outsl
adc
push
lcall
and
xor
arpl
mov
mov
inc
and
xchg
cmp
jmp
cmc
lods
jecxz
pop
filds
add
pop
lods
movl
rclb
pop
sbb
rolb
out
mov
adc
enter
mov
pusha
mov
stos
and
leave
inc
dec
out
mov
cmp
cmp
enter
and
stos
inc
mov
push
dec
shrb
and
dec
adc
rolb
loopne
cmp
and
repz
add
xchg
into
ret
cmp
addr16
or
fdivrl
mov
inc
pop
mov
push
mov
xor
sbb
add
xchg
add
sbb
rclb
aam
inc
and
sbb
push
mov
inc
xor
insb
paddw
push
xor
xchg
cmp
aam
cmc
iret
fbstp
enter
orb
xchg
aam
lret
and
inc
or
lods
add
adc
outsl
popf
insb
outsb
jecxz
mov
mov
mov
inc
outsb
loope
loopne
dec
adc
xchg
orb
lds
pop
jno
mov
lret
call
lcall
test
cmp
sub
jg
dec
jp
jmp
lret
stos
scas
add
fdivrs
xchg
popa
aas
pop
lret
enter
das
or
out
lea
pusha
inc
inc
dec
insb
xor
hlt
popa
inc
inc
push
lods
mov
sahf
inc
sub
and
xor
hlt
sub
lret
inc
rcrl
ds
sti
sbb
lds
mov
and
pop
out
mov
or
inc
cld
sub
and
cmp
lcall
rolb
sbb
dec
sub
mov
adc
and
loopne
sub
sarb
adc
inc
inc
and
shlb
jno
call
fwait
pop
ret
repnz
jo
cs
inc
sbb
fs
rol
mov
add
loopne
fistl
push
mov
jno
test
adcb
pop
jecxz
mov
rolb
jmp
fsubrs
mov
call
pusha
shlb
das
mov
aaa
xchg
jmp
les
and
and
iret
cmp
orb
jbe
loop
dec
ja
mov
pop
imull
and
in
daa
mov
idivb
xchg
sub
fisttps
cmp
ret
enter
inc
and
shlb
out
nop
mov
or
pusha
inc
xor
in
push
sahf
sbb
ficoml
and
ficomps
popa
lods
pusha
add
jb
push
xchg
in
adc
nop
xor
mov
loopne
hlt
addb
rol
mov
cmp
inc
lock
icebp
adc
cmp
movsl
ficomps
or
loopne
insl
mov
jg
lds
mov
lahf
add
add
sub
inc
lods
mov
ret
inc
loopne
call
pop
xchg
clc
and
or
xorb
add
mov
data16
addr16
pusha
int
mov
add
loop
imul
neg
xchg
stos
adc
dec
imul
lcall
add
scas
rol
jg
xor
ds
pop
xor
mul
dec
and
dec
cltd
mov
mov
add
dec
mov
xchg
mov
sti
xlat
sbb
and
add
jecxz
sbb
add
scas
cmp
out
pop
push
clc
sahf
cltd
mov
mov
pusha
loopne
bound
xor
call
test
push
mov
add
fnstcw
lret
andb
and
scas
inc
pusha
aas
pushf
jle
inc
loop
and
lgs
sahf
out
ret
pusha
das
pop
stos
pop
xchg
leave
rcr
in
loopne
test
addl
and
imul
and
loopne
jecxz
fincstp
inc
inc
cltd
lea
test
and
xchg
fnclex
dec
rcrl
ds
rol
clc
pop
cmpsl
xchg
sbb
jo
inc
imul
push
adc
sbb
mov
mov
dec
ret
push
outsb
adc
cmp
mov
fimuls
jp
inc
jne
shlb
les
fisubs
and
shl
push
in
mov
push
cmp
test
add
inc
push
andb
jno
movsl
or
add
jl
fistps
xlat
dec
leave
test
xorb
lcall
insb
add
xchg
inc
push
stos
rolb
fs
jmp
xor
mov
xchg
dec
shrl
cmp
dec
imul
pusha
inc
test
cmp
sar
xchg
xor
or
ds
btr
or
add
xor
push
aam
orl
mov
shlb
push
out
lods
mov
cs
lock
rcl
push
pandn
lahf
push
scas
pop
scas
sub
lods
pusha
or
push
add
pop
sbb
ljmp
repnz
mov
inc
add
add
pop
inc
sbb
sub
inc
mov
imul
leave
mov
shll
shl
push
jb
lcall
pusha
loopne
rcl
mov
lods
mov
scas
stos
push
std
repnz
mov
pusha
iret
mov
mov
jmp
lock
xchg
sub
ror
pushf
bnd
stos
jo
xchg
push
and
test
mov
iret
ds
pop
cmp
adc
mov
push
out
std
sub
mov
jo
into
push
in
stos
sbb
mov
icebp
dec
jl
iret
scas
loopne
cs
inc
jge
dec
loopne
popa
loopne
loope
repz
mov
add
and
andb
push
std
ljmp
or
pop
inc
fwait
or
sti
push
rcrb
inc
cltd
aam
aas
xchg
rcll
repnz
test
add
stos
jne
dec
js
addb
les
xlat
in
push
cmp
sbb
lahf
gs
and
out
outsb
stos
int3
xor
popa
insl
cltd
imul
divl
lea
addb
xor
ss
mov
sbb
jno
cmc
and
jno
jg
insb
pop
mov
arpl
adc
jnp
outsl
push
mov
rcrb
xchg
mov
rcr
pop
push
pop
addb
push
lahf
mov
loopne
loopne
icebp
stc
push
or
and
sar
cmp
pusha
add
shl
fnsave
lea
test
adc
rolb
sub
pop
movsl
sti
scas
and
sahf
out
xchg
cs
add
mov
dec
sbb
sbb
scas
add
jne
in
jo
out
mov
and
mov
aas
xchg
es
jb
popf
sbb
loopne
sub
sbb
outsb
push
and
or
inc
lds
shrb
sahf
push
pop
popf
push
inc
inc
or
add
stos
xchg
sub
mov
aaa
cmp
adc
in
fists
mov
jb
pop
inc
sub
insb
jmp
jg
mov
pop
lcall
mov
sahf
int
shlb
and
or
int3
jns
xor
dec
pop
out
mov
pop
call
cltd
jmp
xchg
js
inc
dec
imul
sub
inc
pushl
rorl
loopne
pop
dec
dec
or
aas
jge
int3
or
daa
cmp
xorb
je
in
sahf
sub
adc
loopne
pop
and
add
dec
jge
jmp
or
pusha
xchg
jo
or
adc
cltd
std
add
dec
test
add
push
add
inc
std
or
orb
addb
test
rcrb
stos
pop
mov
mov
lcall
enter
je
xchg
hlt
dec
cmp
andb
call
out
xchg
call
and
dec
sub
xchg
cwtl
nop
push
mov
inc
negl
loope
dec
into
mov
inc
and
sbb
mov
xchg
out
xchg
and
shlb
hlt
loop
jmp
xchg
rclb
or
add
push
and
out
sbb
das
lea
xor
add
out
push
sbb
sub
inc
mov
xchg
adcl
mov
push
nop
jns
loopne
pop
test
popw
push
sub
dec
and
pop
popa
pushf
xchg
and
add
push
je
jmp
shlb
pop
push
notl
aad
add
add
les
sti
outsl
xor
inc
cli
movsl
sub
mov
popf
mov
shll
dec
daa
mov
mov
in
push
and
push
push
push
les
xorb
and
jg
inc
sar
mov
hlt
add
sarb
push
aas
mov
int3
jg
and
imul
andb
jge
adc
jnp
movsl
shll
inc
pop
inc
andb
popf
push
dec
lret
shlb
fstpt
imul
or
pop
in
rol
loopne
and
ds
sar
jge
hlt
jb
push
xchg
mov
in
push
dec
push
aas
cmp
sbb
les
int3
test
pop
jnp
xchg
loopne
mov
shll
leave
pop
nop
test
loopne
jns
icebp
clc
repz
mov
push
dec
push
or
inc
loope
inc
inc
les
add
and
mov
stc
or
loopne
movsb
addb
add
ja
insb
addb
fildll
rol
testl
xchg
pop
xchg
fs
lock
mov
std
sbb
mov
add
rcrb
lods
mov
ds
jle
cmc
jl
xor
lock
es
loopne
into
lods
mov
jbe
cmp
mov
mov
scas
shlb
rclb
xchg
in
out
push
xchg
imull
xchg
std
hlt
jle
cli
sar
xchg
rorl
ja
pop
cmpsb
add
push
mov
xchg
hlt
jmp
in
dec
fnstenv
xor
cmp
shrl
sub
add
int
ds
rolb
andb
mov
js
pusha
inc
jecxz
sbb
xor
xchg
mov
jecxz
sbb
bswap
or
ss
leave
xor
jnp
lcall
pop
aam
popa
shll
test
loopne
xor
mov
inc
push
outsb
cmp
repnz
lahf
sbb
call
lret
fs
pop
xchg
dec
in
push
and
pop
ds
inc
es
add
lret
mov
and
out
jnp
test
push
scas
push
in
in
mov
jbe
shlb
ljmp
cmpl
scas
lds
dec
xchg
fcmovb
sbb
mov
push
pop
push
ja
sahf
sub
out
cmp
jp
repnz
xor
ret
or
cld
das
cmovne
cmpsb
rolb
pusha
cmp
ror
ss
lds
cmp
dec
test
dec
je
cwtl
inc
in
sub
add
xor
xchg
dec
cmp
flds
aaa
data16
loopne
push
test
adc
xor
dec
fnstenv
insl
les
add
js
xlat
xor
xor
out
loop
xchg
aam
call
shr
lret
pop
fstpl
mov
jns
iret
xchg
out
arpl
sbb
add
push
pop
cmp
stos
jg
lea
dec
clc
int
mov
inc
loopne
cmp
adc
xlat
pop
mov
pop
mov
shlb
jbe
loopne
nop
movsl
lods
cs
and
clc
mov
add
sub
add
add
jge
add
pushf
bnd
inc
push
adc
and
loopne
and
pusha
mov
je
add
cmp
in
es
cmp
xor
and
loopne
jge
mov
rcr
les
popf
mov
mov
fistps
rolb
inc
lahf
ficoml
cltd
not
xor
das
ret
push
sbb
pop
loop
cmpsb
add
das
push
fs
push
and
pusha
lahf
mov
add
pusha
loopne
jmp
js
jecxz
mov
pusha
xor
mov
daa
fnstenv
mov
dec
and
xlat
dec
adc
inc
xorb
add
sysret
out
clc
addb
inc
dec
mov
imul
pusha
sbb
icebp
push
andb
cmovno
popf
je
add
rorb
gs
out
mov
insb
repnz
movsl
imul
push
rolb
mov
je
sub
jbe
outsb
cmp
shlb
jb
out
sub
fbld
test
xchg
and
xchg
jb
mov
jp
addb
punpckhdq
lahf
sub
mov
push
add
pop
adc
add
adc
js
sbb
add
adcb
mov
icebp
mov
in
add
push
adc
fwait
cmp
pop
pop
dec
shll
pop
pushf
jne
test
adcb
clc
pop
nop
and
pusha
inc
cmp
adc
mov
popf
loop
repnz
inc
cmpsl
lcall
addb
mov
stc
insl
jno
sahf
imul
add
out
sub
inc
sub
sub
test
subb
mov
addb
andb
loopne
daa
adcl
scas
rol
dec
mov
mov
mov
and
jns
imul
inc
xchg
call
xor
mov
adc
fistpl
fwait
scas
je
pusha
inc
cmp
std
push
cld
lock
pusha
sub
sub
xor
adc
lods
test
mov
data16
jmp
repnz
lea
arpl
mov
mov
lods
dec
test
push
inc
ror
push
lret
jnp
xor
pop
and
cli
outsb
cwtl
fwait
out
cli
test
inc
add
jbe
or
or
outsl
push
cmp
mov
ficomps
or
ds
xor
fwait
xchg
enter
xor
out
jmp
lea
adc
ret
add
inc
jmp
fwait
cmc
pop
pusha
inc
leave
loopne
mov
pusha
inc
dec
xchg
arpl
jle
jo
cmpsl
mov
inc
test
loopne
push
dec
movsb
rol
out
push
push
jno
adc
sub
mov
sub
inc
xchg
sarb
and
loopne
mov
mov
and
add
and
cld
sbb
andb
or
pusha
inc
add
sbb
into
or
sarb
jl
das
icebp
inc
and
mov
cmp
out
mov
mov
jmp
cltd
mov
or
aaa
adc
cld
lcall
push
pop
repnz
push
pop
and
orb
clc
pushf
sbb
push
ljmp
adcl
dec
cld
hlt
fnstcw
add
sbb
mov
dec
leave
ror
adc
jo
add
pusha
and
in
xor
pop
or
loopne
lods
pusha
sub
out
pop
push
nop
jmp
push
jbe
loopne
popf
xor
andl
pop
sub
ret
pop
cmp
test
and
cmp
xor
loopne
mov
xchg
repz
imul
imul
sub
mov
lret
push
out
in
fmuls
jo
adc
jne
movsb
add
push
xlat
fsin
xchg
shlb
mov
into
jg
jmp
insl
mov
mov
lea
addr16
imul
js
jle
cmpsb
loopne
inc
add
addb
adc
mov
data16
xchg
push
dec
pop
mov
inc
addb
shr
mov
aad
call
pop
mov
and
ds
fsub
adc
addb
out
repz
adc
enter
sub
pop
fstps
pusha
mov
shlb
adc
sub
pusha
pop
mov
enter
inc
adc
cld
and
loopne
lods
xor
pop
fnstcw
int
cmpsb
and
xchg
cmp
loopne
in
inc
sub
data16
sahf
das
scas
inc
inc
scas
addl
cwtl
pop
mov
add
jo
push
dec
xor
mov
pop
cli
pop
cmp
ret
dec
xchg
nop
iret
mov
add
push
stos
push
sbb
lret
mov
repz
cmp
aad
mov
decl
pusha
mov
imul
fdiv
mov
mov
pop
addb
rcrb
sbb
je
add
cmpsb
inc
and
fiadds
or
sti
pop
into
out
fmul
mov
rclb
mov
cmp
pop
pop
inc
inc
and
repnz
ret
sahf
nop
rcrl
adc
mov
hlt
stos
add
or
pusha
mov
xlat
fistps
cmpl
adc
js
enter
outsb
adc
inc
and
inc
add
mov
into
aam
inc
pusha
pusha
dec
adc
add
and
mov
andb
pusha
loopne
dec
jo
push
ljmp
lret
push
and
mov
lret
stos
inc
pushl
test
pop
ss
int3
sub
and
popf
movl
loopne
jne
lcall
subb
std
loope
xchg
mov
xchg
neg
xchg
in
cmp
rcrb
fbld
mov
mov
loope
dec
or
mov
inc
sub
add
scas
movsl
in
aam
loopne
fmuls
shlb
pop
mov
sub
arpl
addb
loopne
mov
shrl
insb
jmp
mov
in
sti
idivl
sbbl
loopne
loopne
in
push
sub
shlb
cmpsl
jae
filds
mov
shlb
mov
loopne
mov
mov
mov
xchg
xor
cmpsb
mov
mov
insl
pop
mov
xchg
loopne
imull
sbb
or
sar
push
inc
cmpb
or
xor
jmp
inc
sbb
inc
popa
jae
pop
dec
dec
cmp
clc
gs
xchg
in
push
pusha
inc
cmc
pop
into
popf
ds
std
dec
and
lret
idivb
test
cld
popf
sbb
mov
mov
mov
mov
cmpsl
jmp
add
pop
mov
and
aaa
mov
pusha
xor
pusha
and
inc
mov
test
mov
pusha
mov
loopne
cmp
test
popa
test
add
dec
jmp
mov
into
gs
loopne
ja
rorb
add
sbb
pop
sbb
dec
adc
loopne
setg
andl
adc
mov
pop
lods
test
loopne
inc
insl
leave
sti
insl
dec
or
mov
dec
mov
push
cmp
sub
cli
cltd
adc
je
fdivrl
cs
loopne
cli
aaa
sbb
xchg
sub
inc
test
ljmp
push
insl
imul
shlb
jnp
xchg
cmp
fcomps
vphaddubd
mov
notl
cwtl
iret
cld
pushf
fs
sbbl
std
adc
hlt
hlt
stos
sbb
nop
roll
in
in
andb
mov
add
pop
ja
lcall
add
jne
stos
movsb
mov
movsb
inc
pusha
pop
dec
lock
or
std
push
push
ja
testb
cmp
rorl
loopne
sbb
mov
jb
xchg
fs
arpl
insl
scas
rol
out
clc
sub
rolb
lahf
xor
sbb
test
testb
mov
dec
pop
adc
add
shrb
add
out
sbb
lea
mov
and
add
pusha
ds
jecxz
es
cmp
pop
push
xor
add
into
push
add
out
loope
loopne
add
adc
addb
rolb
loopne
push
mov
push
mov
rcrb
rorl
aas
xlat
and
mov
shl
mov
mov
rclb
outsb
jb
js
loopne
sarl
add
mov
mov
mov
shr
faddp
bound
jbe
ja
pop
andb
rolb
mov
mov
push
loopne
xor
fidivrl
lcall
mov
test
mov
fidivrs
daa
aaa
pop
testl
fstpl
mov
insb
das
jg
sahf
dec
push
pusha
jne
cmp
push
and
je
cmp
mov
adc
in
and
pop
movsl
mov
and
inc
aas
gs
sub
pusha
cltd
sub
pusha
xchg
inc
pusha
je
outsb
mov
xor
insb
sub
out
sub
imul
inc
pusha
xchg
sbb
test
out
push
cmpsb
andb
movsl
nop
out
vmwrite
push
push
sbb
pop
mov
add
das
push
mov
adcb
sbb
jecxz
push
in
inc
test
and
loopne
jmp
shl
or
sub
mov
push
sub
cmpsb
and
sbb
add
lds
mov
mov
sbb
scas
add
loopne
pop
pop
lods
add
adc
cli
sbbl
jge
and
xor
loopne
push
add
daa
rcrb
dec
loope
loope
mov
mov
lret
xchg
cld
xor
xchg
pushl
scas
mov
mov
sti
insb
xor
aam
js
jnp
out
inc
mov
xchg
dec
inc
xor
insl
fisttpll
loopne
and
pop
mov
in
int
es
inc
insl
pushf
adc
daa
push
mov
fisttpl
andb
pusha
mov
addr16
add
gs
arpl
push
dec
sub
jae
aam
sbb
mov
repnz
jp
or
mov
xorl
int
mov
lcall
add
sub
rclb
mov
lret
sbb
dec
or
add
js
jae
test
sar
sub
loopne
push
jbe
push
pop
mov
push
jbe
add
std
test
pop
stos
jmp
pop
ret
fisttps
js
imul
imul
push
mov
inc
or
loopne
inc
cmp
outsb
lods
add
in
and
addb
and
inc
fwait
or
pusha
fisubrl
inc
add
lds
jo
cmpsl
outsl
mov
shlb
into
mov
jge
and
insl
outsb
mov
sub
add
cltd
sub
inc
mov
push
repz
mov
mov
in
loope
lods
int3
in
jmp
rorb
adc
popa
push
jo
addb
jo
ret
add
scas
pusha
mov
sti
mov
jnp
sbb
add
mov
dec
dec
add
loopne
pop
jl
pop
add
mov
pusha
loopne
jl
pusha
add
add
ret
mov
mov
popf
mov
sbbb
dec
mov
lahf
ret
jo
jg
fsubl
lret
mov
ret
insb
imul
and
inc
sub
jbe
inc
mov
pop
repz
mov
and
insb
adc
mov
add
or
dec
xlat
loop
xor
insb
pop
daa
cltd
mov
scas
and
sub
add
test
imul
jg
mov
jle
and
adcb
in
jnp
cmp
cmpsb
add
stos
and
shl
push
nop
addr16
andb
and
or
shr
mov
int
jb
xchg
rcr
add
shlb
sub
mov
out
icebp
pop
dec
mov
and
adc
or
inc
adc
push
insb
cmp
fdivr
cmpsb
add
push
sbb
je
dec
popf
mov
push
dec
into
jae
test
mov
push
flds
inc
loopne
sub
mov
movsl
pop
call
out
popa
movsl
xchg
lds
shrl
and
add
dec
das
stc
add
mov
mov
pushf
pushf
pop
arpl
mov
sbb
xchg
jg
dec
repz
xor
fstpl
pushf
outsl
bound
mov
push
jg
pusha
and
js
add
add
call
add
pop
mov
cmp
loopne
jnp
loop
push
ja
je
inc
and
fisttps
push
rorb
add
pusha
mov
popf
xchg
loopne
repz
mov
pop
cmp
sbb
faddl
cmp
mov
xchg
rorl
push
dec
pop
sbb
push
mov
and
inc
fadd
setnp
mov
je
addb
shl
hlt
movsb
inc
subb
add
in
pop
jle
gs
fmuls
push
addb
or
pusha
sub
frstor
sub
adc
arpl
pop
mov
test
or
inc
pushf
mov
xchg
mov
mov
fs
jb
mov
pushf
call
xchg
push
sbb
jmp
sub
nop
dec
out
dec
jmp
addb
xchg
pusha
fwait
push
pop
int3
test
pusha
addb
std
push
outsb
popa
negl
and
insl
cmp
in
sub
push
cmc
iret
push
mov
cltd
xchg
and
add
sarl
cmp
loopne
popa
pop
insl
shrb
rclb
inc
mov
loopne
push
loopne
ret
fucomip
sbb
data16
ret
and
pop
cwtl
enterw
pop
jle
jmp
mov
hlt
movsl
push
and
movsl
ret
bound
loopne
mov
or
ret
mov
ficoms
fwait
jae
mov
mov
shrb
cwtl
xlat
ficomps
ss
js
arpl
xchg
mov
out
xlat
jbe
iret
pushf
aas
aam
pop
push
imul
pop
push
adc
stc
dec
jno
in
aam
lret
push
and
in
inc
mov
mov
rclb
mov
pop
xchg
adc
call
sub
and
into
mov
into
mov
mov
pop
xor
outsb
mov
mov
js
inc
adcl
ljmp
das
push
mov
call
or
pop
insl
inc
test
xchg
inc
ret
loopne
add
loopne
shlb
rolb
jo
andb
cltd
sar
rcl
lds
inc
xchg
push
xchg
xor
mov
and
add
in
mov
xchg
loope
pop
cmpsl
aam
or
cmpsl
mov
and
out
fs
pop
pop
xchg
jle
pop
pushf
jmp
xchg
push
or
and
cmpsb
inc
pusha
xchg
and
test
add
in
add
rcrb
add
addb
xor
add
add
in
adc
and
pusha
jae
into
inc
mov
loopne
das
xchg
lcall
sti
fdivrs
lahf
dec
add
inc
int
in
and
jp
popf
mov
mov
test
jbe
pop
xor
mov
cld
dec
or
movsl
sbb
mov
xlat
xor
inc
sbb
je
push
sub
cwtl
cmp
ja
and
pushf
mov
aad
cmpsb
andb
cmp
add
mov
mov
jae
xchg
add
fsubrs
mov
lds
dec
jo
in
test
push
aas
scas
inc
mov
repz
xchg
xchg
sub
loopne
xor
inc
mov
loope
sahf
sub
test
add
shlb
call
std
lret
and
add
in
fsubrs
call
pop
lock
cmp
enter
jp
jno
pusha
inc
dec
inc
xchg
sbb
popf
xor
aas
fdivrl
sbb
add
xor
daa
xchg
test
in
lock
andb
sahf
xchg
iret
cmc
sbb
dec
inc
cmp
push
push
push
jle
movsb
mov
insb
fistl
and
mov
add
adc
inc
or
mov
push
pusha
sub
loopne
ret
push
sbb
mov
adc
neg
push
addl
and
dec
or
inc
mov
push
pusha
rclb
cmp
xchg
mov
repz
lods
inc
addb
mov
ret
jle
jl
mov
jmp
in
pop
bound
mov
add
and
xchg
jb
dec
inc
push
call
jbe
pop
or
out
imul
inc
fbld
or
mov
loopne
ret
lods
inc
addb
int
inc
jae
and
popf
xor
and
js
in
mov
jecxz
cmp
jmp
push
aaa
inc
jmp
inc
cmp
cmp
xchg
add
dec
adc
push
in
cltd
cmc
lock
test
dec
ret
in
xchg
cmc
push
xorl
shrb
pop
mov
and
loopne
adc
insb
jne
cs
insb
fwait
iret
ret
xchg
cmp
pusha
inc
arpl
mov
sbb
xor
mov
xor
test
rcrb
imul
shlb
add
inc
adcb
ja
jne
shl
sub
out
shlb
iret
stc
jns
shll
and
xchg
cltd
flds
lcall
mov
hlt
sub
pusha
mov
adcb
enter
je
push
pop
data16
push
dec
les
ss
fadd
and
add
scas
addb
roll
cmp
jnp
pop
jns
cli
aad
shl
inc
popf
loop
mov
mov
loope
mov
subb
pusha
negb
mov
xchg
int
mov
mov
jnp
mov
mov
fs
mov
loopne
or
push
fnstcw
and
xor
push
and
outsl
call
leave
repnz
mov
xchg
and
pop
lret
and
pusha
add
shlb
lcall
add
mov
popa
fldl
or
xchg
pop
dec
pop
inc
push
bound
jns
cmpsb
inc
inc
dec
jmp
cwtl
arpl
mov
push
aaa
scas
and
clc
dec
adc
inc
pusha
inc
pop
jp
add
bound
or
mov
ja
hlt
leave
lock
sub
shll
pusha
and
fwait
fs
inc
or
inc
loopne
pop
adc
adc
rcrl
mulb
mov
into
mov
loopne
mov
pop
outsb
xchg
mov
ret
and
rorb
mov
ljmp
push
pusha
pusha
fcomps
jp
fisubrs
add
and
loopne
loop
mov
aam
ss
cmc
nop
adc
stos
pusha
test
lods
push
stc
mov
push
and
jbe
jecxz
cmp
add
in
xor
fs
and
or
inc
sub
mov
pusha
lret
sub
push
add
dec
mov
pop
andl
cwtl
loope
dec
mov
add
cmp
negb
aad
and
fisttps
jge
add
ja
arpl
push
fistpll
mov
addr16
in
pop
ret
and
mov
sahf
jg
jo
jp
mov
je
mov
and
loopne
add
pop
gs
fsts
and
loop
push
cmp
push
adc
and
pop
js
test
dec
and
mov
pusha
loopne
lret
out
aam
jnp
jno,pt
or
pusha
sub
adcb
pusha
outsb
sbb
andb
add
xchg
js
ds
lea
call
mov
push
loopne
mov
ja
and
pop
xchg
push
adc
pop
hlt
mov
pusha
loopne
out
pusha
add
pop
lods
add
push
dec
movsl
dec
or
and
adc
adc
mov
sub
cmp
addl
test
adcb
pop
dec
test
mov
jo
sub
cmp
mov
repnz
cmp
std
push
loopne
jecxz
push
and
mov
lcall
pop
movsl
rcrb
imul
into
add
negl
cmpsl
icebp
movsb
addb
addb
mov
and
loopne
xor
adc
sub
shr
adc
jo
loopne
daa
inc
sbb
jl
mov
add
loopne
pusha
xchg
enter
sbb
call
jae
adc
mov
mov
mov
roll
rol
pop
push
and
sub
pop
lcall
mov
jl
testl
sbb
and
xchg
jl
nop
cmp
mov
inc
out
jl
lcall
and
repnz
leave
mov
int
pusha
orb
pop
cmp
dec
xchg
repz
sbb
mov
jnp
rorb
outsl
xchg
add
lock
cmc
push
test
sarb
shlb
popf
data16
pushf
pop
mov
jne
mov
loopne
cmp
inc
loopne
inc
inc
xchg
jo
popf
mov
inc
and
fimull
loopne
out
inc
cmpsb
and
cmp
mov
add
pop
in
pop
clc
dec
push
addb
mov
rdtsc
jne
mov
mov
inc
and
out
fcoms
jae
sbb
add
icebp
lock
dec
push
lock
dec
cmp
push
ret
rorl
dec
dec
fstl
xchg
nop
dec
jge
push
xchg
insb
mov
jno
hlt
cmp
pop
jnp
aad
ret
mov
xor
sbb
movl
out
xchg
loopne
enter
clc
rorb
mov
dec
arpl
xor
mov
stos
loopne
mov
daa
lret
push
addb
add
popa
pusha
push
and
shlb
mov
jo
dec
sub
inc
push
aam
jns
addb
dec
jo
aaa
rcrl
shlb
ljmp
jle
ret
and
lret
and
inc
xchg
and
pusha
insb
add
and
and
or
add
xor
pusha
les
repnz
imul
insb
mov
xor
cli
mov
ret
sti
adc
pop
inc
cmp
insb
movsl
in
dec
cmp
xor
pop
add
enterw
fcmove
pushf
dec
cmp
and
fbld
sbb
ss
mov
cmp
je
repnz
jecxz
push
sbb
cwtl
dec
out
mov
inc
pusha
cmp
sub
or
loopne
sbb
loopne
fistps
test
loopne
push
mov
shl
mov
std
andb
mov
shlb
sub
lret
mov
test
and
out
or
shlb
popa
cwtl
pop
jo
mov
gs
iret
xor
arpl
cmpsb
add
pop
mov
jle
cmp
dec
out
repz
sbbl
loopne
adc
fcompl
sbb
std
cld
cmp
sub
add
and
inc
sub
jmp
xor
enter
pusha
aas
mov
mov
jecxz
mov
and
xchg
adc
mov
rclb
push
inc
add
add
movsb
pusha
and
cmc
das
stos
movsl
mov
test
jmp
mov
jne
mov
loopne
mov
jns
xchg
adc
jl
add
adc
pop
mov
rolb
ret
out
arpl
pop
adc
outsb
and
push
mov
sub
idiv
cmp
rolb
imul
jp
std
imul
mov
mov
rorl
hlt
mov
addb
mov
loopne
test
negb
inc
repnz
loopne,pn
fidivrl
ja
inc
outsl
or
push
call
push
cmp
ja
js
push
mov
mov
ja
rolb
fwait
xchg
jge
insb
add
add
push
fiaddl
pusha
inc
jp
jae
rol
fsubrl
jg
loopne
stos
jns
xor
and
ds
push
sub
mov
or
pop
test
loopne
dec
or
inc
sub
inc
sub
je
pusha
pusha
mov
rclb
cmp
out
mov
shlb
jmp
mull
add
mov
imul
push
test
or
mov
aad
inc
jl
shrl
inc
push
cs
dec
mov
lret
push
cmpsl
insb
enter
sbb
loopne
sbb
mov
test
lds
sub
loopne
jno
std
xchg
cmp
jecxz
add
inc
jne
int
ffreep
pop
je
and
cmp
jbe
dec
cld
cmp
push
cmp
push
lds
inc
js
scas
gs
jp
xlat
addb
inc
inc
jb
fwait
mov
cli
adc
mov
testl
aaa
push
or
pusha
cmp
test
inc
jnp
ficoml
adc
notl
sbb
pusha
add
pusha
jno
cmpsb
loopne
pop
sub
pop
das
mov
rolb
andb
mov
andb
pusha
ret
test
cmp
pusha
or
rorb
add
or
loopne
push
lret
mov
push
cmp
cmp
mov
mov
shlb
mov
bound
mov
orb
mov
xor
in
mov
pushf
mov
xchg
pop
cmp
loopne
xor
xor
add
aaa
push
add
add
xchg
orl
pop
in
dec
movsl
and
sub
sub
out
lret
sbb
ror
ret
js
sar
lret
imul
aam
movsl
push
pusha
loopne
mov
sahf
test
xor
rclb
mov
and
pop
xchg
es
shlb
add
add
xorb
lret
mov
inc
push
inc
and
and
mov
jne
lods
cld
push
pop
sahf
mov
cmp
inc
shrb
mov
ljmp
out
int3
add
shrb
mov
and
push
pushf
or
lea
mov
and
pushf
mov
mov
push
out
xor
push
pop
cwtl
xchg
push
jo
adc
mov
jnp
mov
add
lahf
test
jle
mov
int
inc
dec
in
es
inc
mov
inc
xchg
stos
movsl
cltd
into
adc
shl
jo
loopne
inc
pop
outsb
scas
sub
inc
shll
subl
fcmovne
push
mov
rclb
lock
fstps
addb
mov
and
add
loopne
test
scas
loopne
mov
sbb
jns
push
xchg
mov
pusha
lcall
sbb
std
adc
outsl
pop
xchg
enter
adc
pop
lods
mov
mov
xchg
sti
jns
repz
inc
or
and
and
inc
adcl
in
cmpsl
or
fists
dec
xchg
mov
std
andb
adc
inc
or
pop
mov
mov
sti
jmp
add
push
cmp
sbb
cmp
ret
dec
sar
mov
add
xchg
lahf
stos
jns
daa
daa
push
dec
call
ds
pusha
shlb
mov
xchg
repnz
in
adc
cmc
push
leave
dec
outsl
imull
bndstx
add
lret
addb
mov
andb
inc
das
xchg
pop
decb
popf
sub
adc
mov
and
ss
dec
popa
xor
and
addb
pop
jecxz
hlt
jmp
and
das
les
jno
inc
and
ljmp
dec
outsb
jno
jb
pop
mov
daa
mov
dec
cmp
ret
and
or
mov
sbb
jo
cmpsb
loopne
and
xor
jae
fistps
lods
jno
jge
sbb
mov
and
jbe
mov
aas
add
mov
pusha
and
shll
addb
mulb
js
jl
pusha
inc
lock
adc
test
add
xor
adc
push
dec
dec
test
add
and
inc
mov
stos
inc
loopne
mov
loopne
je
mov
int
mov
cmc
adc
mov
mov
pusha
test
sub
pusha
sub
and
sbb
inc
aad
xchg
shl
push
rolb
pusha
push
test
movsl
fbstp
pusha
loopne
and
pusha
stos
add
dec
loope
inc
adc
rcl
shrl
push
rolb
mov
and
push
xchg
popa
inc
lea
repnz
xor
and
lret
cli
adc
nop
pop
jle
shl
daa
or
or
mov
and
out
in
mov
and
dec
mov
push
cmpl
mov
ret
sbb
subl
mov
add
inc
test
pop
adc
inc
cmpsb
pusha
rcrb
sbb
xor
push
pop
sub
loopne
or
iret
or
inc
and
ret
pushf
jp
sbb
cmpsl
or
loopne
pop
lret
ljmp
cmp
mov
cs
in
push
inc
pop
dec
imul
push
push
pusha
mov
adcb
rolb
loopne
pop
jae
in
lds
xorb
xorb
push
or
inc
out
adc
and
rolb
adcl
sub
add
ror
cmp
push
repz
aaa
ficoml
cmpsb
loopne
jmp
scas
andb
mov
out
mov
ja
test
addb
loopne
jmp
and
inc
in
shl
xor
stos
pop
iret
pop
ljmp
rol
loopne
mov
dec
sbb
stos
loopne
fsubr
sbb
loopne
int3
mov
test
lock
cld
aam
add
lret
into
data16
das
mov
test
add
mov
je
rorb
dec
xor
movsl
jmp
call
test
jo
dec
mov
inc
cmp
mov
pusha
scas
pusha
subb
aad
or
insl
loope
in
sahf
into
push
loopne
cld
sti
test
scas
sbb
lret
incl
cmp
daa
and
xor
sub
imulb
and
fsubr
addr16
pusha
mov
pop
jp
mov
jno
rcrl
sahf
or
loop
inc
cmp
pop
inc
ficoml
and
xor
cmp
cmp
andb
addb
outsl
mov
or
sahf
shlb
add
xchg
push
add
in
insb
jne
mov
int
mov
add
mov
mov
and
mov
mov
xlat
rol
push
mov
jns
mov
inc
push
and
movsb
addb
inc
jbe
addr16
push
and
arpl
jle
mov
not
jb
mov
mov
jnp
sbb
or
mov
les
int3
jno
loope
inc
jae
popf
icebp
in
add
pusha
cwtl
cmc
cltd
mov
loopne
mov
adc
jge
aaa
mov
addb
mov
adc
ss
in
and
sub
push
xchg
xor
mov
add
cmp
and
repnz
push
add
clc
arpl
sbb
mov
imul
add
xor
into
xlat
and
mov
and
in
dec
adc
or
loopne
scas
notl
push
and
jo
lods
mov
cld
cld
adc
les
loopne
sbb
inc
jb
outsl
xor
test
cmp
sbb
shl
daa
mov
mov
mov
sarb
mov
out
inc
dec
mov
mov
mov
jae
pop
fwait
inc
std
xchg
adc
dec
gs
mov
cmpsl
jmp
dec
inc
into
cmp
scas
call
loopne
fldcw
loopne
xchg
mov
sbb
add
imul
jp
jae
aam
in
adc
pop
cmpsb
addb
sbb
mov
adc
loopne
lret
adc
adc
mov
cmp
leave
popa
sarb
punpckhwd
fstps
pusha
loopne
add
xor
xchg
mov
int
cmpsb
mov
mov
jmp
push
add
mov
movsb
rol
xor
popa
jne
imul
mov
outsl
jne
jl
xchg
scas
pusha
or
popf
dec
dec
pop
adc
jecxz
pop
or
pop
push
outsl
hlt
mov
jp
mov
mov
loopne
jge
mov
mov
loopne
mov
dec
pop
mov
pop
add
addb
and
dec
xor
movsl
lcall
mov
test
mov
aaa
fmull
mov
test
add
cmp
mov
sub
orb
hlt
fbstp
dec
in
das
xchg
sti
or
add
loopne
push
cli
or
in
std
push
test
aad
inc
dec
push
xchg
sahf
rcrb
fnstsw
push
sub
mov
adc
push
inc
addb
mov
sti
pop
dec
mul
jne
fs
adc
pusha
pusha
pop
cmc
adc
jne
fiaddl
dec
mov
mov
idiv
or
lret
mov
cmpsl
sbb
pop
jg
iret
andb
cmovb
ja
add
and
xor
jne
test
loopne
scas
loopne
jge
aas
out
loope
cld
popa
call
pop
sbbl
aam
out
and
loop
rcr
mov
pop
mov
add
and
aad
inc
mov
and
mov
pusha
or
dec
cwtl
loop
push
add
shlb
dec
popa
lea
jno
mov
rcr
lea
pusha
inc
inc
sarl
xor
loopne
fwait
jnp
dec
inc
jne
bound
cmp
pusha
inc
add
imul
xchg
mov
std
cmp
notb
loopne
gs
repnz
or
xchg
mov
cmp
mov
repz
jb
out
fnsave
pop
hlt
out
cmp
mov
es
dec
inc
scas
lods
shlb
xorl
addb
fnsave
negl
lea
sarb
xchg
jne
rol
jg
pusha
subb
sti
subl
enter
add
movsl
cmp
imul
popf
mov
and
cltd
lea
mov
add
add
rol
rolb
shlb
pusha
cmp
sbb
ja
mov
aad
dec
jmp
adc
adc
and
or
mov
mov
sarl
jnp
shl
mov
insb
hlt
sub
inc
cmp
jb
cmpsb
loopne
jp
inc
addr16
sbb
ucomiss
loopne
and
mov
and
xor
mov
lds
jp
push
push
cld
std
cmpl
sti
xor
or
add
lock
and
loopne
stos
shl
movsl
cmp
movsl
mov
popf
inc
sbb
push
dec
dec
outsb
jo
push
jp
inc
scas
inc
loopne
rolb
fcmovnu
inc
test
pusha
loopne
and
mov
and
inc
inc
rcll
jo
cmp
mov
int
or
and
aad
adc
mov
pop
andb
jo
shll
mov
cltd
sub
decb
mov
sbb
fistl
and
mov
pusha
inc
icebp
push
dec
lret
popl
pop
mov
mov
xor
xor
stos
mov
int
and
mov
idivl
and
rorb
in
in
jl
sub
data16
dec
mov
lds
rolb
repz
inc
sub
jmp
mov
mov
xchg
enter
mov
dec
hlt
bound
addb
repz
andb
shl
popa
enter
add
add
addb
mov
xor
adc
pushf
inc
or
mov
dec
in
or
add
lret
sub
add
mov
inc
loopne
sarb
mov
mov
inc
rcrb
push
rolb
mov
and
fldt
ljmp
sahf
in
sti
mov
xor
loope
outsl
jl
pop
movsb
add
and
cmp
inc
jg
pop
pop
pop
hlt
movsl
dec
popf
or
arpl
mov
and
pusha
and
iret
mov
push
push
add
and
rolb
loopne
mov
orl
or
inc
lea
pusha
add
or
mov
xorb
mov
decl
xchg
lods
test
rolb
jo
sbb
into
pop
add
loopne
fwait
arpl
sbb
sub
inc
inc
fidivl
pop
std
je
shl
pop
mov
sub
xchg
imul
aam
mov
shrb
les
jae
or
daa
push
aas
and
mov
add
inc
subl
jb
pushf
inc
cmp
add
inc
jnp
lcall
adc
pusha
and
jno
dec
push
mov
inc
pop
mov
cmp
test
add
sbb
mov
repz
out
aas
or
mov
into
xor
push
dec
push
mov
pop
fld
fldl
movsb
mov
fnsave
dec
mov
pop
movsb
pusha
and
daa
popf
mov
fcomp
inc
xor
mov
mov
push
loop
fdivp
inc
pop
add
mov
push
jl
cmp
jo
cld
fdivs
out
fstl
cmp
cmp
stos
push
mov
inc
repnz
and
push
mov
ret
addr16
filds
andb
pop
fcoml
imul
add
fstl
and
pusha
loop
dec
sbb
and
ret
sub
and
fisttpll
sbb
push
dec
sub
adc
add
push
cmp
pop
add
jg
push
into
push
mov
inc
sub
push
inc
xorb
adc
inc
repz
and
pop
adc
and
mov
ds
subb
cli
cwtl
adc
pop
cmp
add
push
and
sub
andb
mov
adc
fstpt
fwait
mov
sub
sarl
mov
pusha
rolb
inc
and
andl
add
cmp
xchg
inc
cmp
xchg
push
inc
leave
lock
stos
jge
loopne
xchg
fcmovnb
mov
add
fwait
pop
sbb
aaa
std
frstor
lods
fildll
mov
dec
cmp
xchg
lcall
add
xchg
or
pusha
pop
sbb
imul
test
shl
mov
loopne
add
fidivrs
mov
aam
fisubrs
inc
inc
and
shl
xchg
and
into
mov
add
jmp
or
loopne
mov
loopne
push
addr16
mov
rcll
mov
fdivrl
pop
dec
mov
sub
mov
addb
jae
cld
adc
cmp
push
unpcklps
pop
pop
in
xchg
dec
pop
dec
insb
das
in
cmp
fcomi
in
lods
inc
add
add
movsl
fsubs
sbb
loopne
pop
xchg
aas
add
cmc
mov
cs
inc
lock
xorb
jae
iret
lret
or
inc
pop
imul
inc
mov
ja
pop
add
push
sub
pusha
out
sbb
sbb
cwtl
dec
sbb
mov
add
push
fptan
lods
imul
loope
adc
xor
mov
and
rolb
rolb
loopne
mov
inc
aaa
inc
or
inc
jg
inc
and
rcll
lret
or
add
xlat
and
cmp
pop
jg
cmpsl
mov
and
shrb
add
add
inc
leave
ja
add
test
inc
stc
addb
add
out
stc
filds
xor
loopne
nop
push
cwtl
scas
loopne
cmp
push
mov
bound
ss
pop
push
mov
cli
xor
cmp
mov
test
addb
mov
stos
pop
nop
push
xchg
cmp
shll
inc
or
or
fcompl
out
shlb
jo
mov
int
aam
jne
dec
cmp
cmp
ret
cmpsb
rol
sub
loop
pusha
add
dec
add
and
pusha
nop
fwait
jae
lock
loopne
jb
mov
push
in
inc
int3
or
jp
or
and
fstps
push
test
addb
fs
mov
aaa
ret
in
push
jo
xor
push
pop
jmp
ljmp
or
pop
mov
loopne
loopne
movsl
pop
pop
leave
fcomip
push
jo
imul
les
and
pop
lock
cmp
jnp
shlb
add
dec
pusha
in
out
xchg
fiadds
outsl
notrack
idivb
push
in
lods
in
cmc
incb
xchg
ret
stos
fdivs
mov
pushf
bound
cli
cmpsb
inc
and
push
pop
jge
popa
mov
xchg
and
add
inc
movsb
loopne
out
lcall
and
xchg
lret
mov
popf
adc
mov
inc
add
and
je
mov
loopne
inc
and
xchg
xor
in
sbb
in
mov
loopne
add
rolb
loopne
adc
shrb
bound
cmp
int3
push
mov
add
inc
xchg
idivb
in
andl
push
les
rcr
imul
mov
push
cltd
mull
adc
dec
scas
andb
jle
and
and
insl
repz
lock
imul
inc
xchg
aam
mov
loopne
sbb
push
cmp
lcall
or
and
leave
iret
pusha
outsl
jns
mov
sbb
ret
mov
fdivr
fldt
pop
sti
inc
daa
xchg
mov
fldenv
and
dec
dec
int
xchg
push
and
mov
aas
aam
ss
or
mov
jge
sbb
pop
cmp
mov
inc
scas
jno
xchg
adc
jmp
add
xchg
mov
adc
dec
sub
shlb
loopne
mov
mov
and
sub
inc
push
dec
imul
mov
mov
pushf
jne
and
sbb
xor
pop
jns
push
outsb
pop
and
mov
addb
pop
xor
sbb
push
sub
cld
xchg
add
mov
push
sbb
je
mov
sbbb
dec
or
push
mov
scas
sub
inc
lds
sbb
je
dec
cmpsl
push
push
cmpsb
and
shlb
and
pop
jp
fsubs
pusha
sub
jne
add
loopne
addl
rcrl
push
mov
jl
push
add
pop
in
cmp
jle
movsb
mov
shrb
inc
add
and
pop
ljmp
cmp
push
scas
inc
mov
and
push
ret
mov
pusha
fistps
lods
lods
jge
push
mov
sbb
imul
les
es
shlb
pusha
xor
mov
mov
xor
push
fcom
pop
les
jne
sub
movsb
andb
fiadds
sub
rolb
push
fwait
inc
xor
mov
sub
ss
decl
xor
xchg
cwtl
imul
mov
xor
rcll
ss
into
jp
and
aam
bound
add
pusha
in
popa
nop
rcll
imull
and
inc
or
arpl
mov
dec
inc
lods
loopne
incl
mov
jb
out
data16
cs
rcrb
into
mov
stos
pusha
add
loop
cmp
int
test
and
jo
add
fdivrs
fwait
and
xor
mov
bound
xchg
pop
add
pusha
jle
loopne,pn
shll
jno
and
test
and
cltd
mov
clc
cld
dec
jmp
add
dec
pop
jl
jne
jno
sti
pop
mov
inc
movsl
shlb
mov
in
out
xchg
repz
movsb
pusha
sarb
mov
les
sub
hlt
cli
into
stos
shl
aad
nop
movsl
dec
push
pushf
mov
loopne
imul
pusha
jge
ljmp
fimull
clc
lds
sbb
stos
mov
mov
in
test
shlb
xchg
xchg
jp
inc
pusha
decb
and
mov
mulb
mov
mov
cltd
sbb
xchg
pushf
push
mov
push
test
cmp
xor
jb
and
loopne
mov
push
add
xchg
pop
test
xchg
push
mov
sbb
jae
jmp
inc
xchg
in
mov
filds
scas
adc
mov
rolb
hlt
int
and
test
mov
stc
shr
fwait
pushf
and
pusha
inc
adc
adc
shll
and
fcmovne
sub
cltd
pusha
in
and
pop
repnz
out
cmp
inc
in
das
pushf
xchg
mov
imul
clc
ja
lods
loopne
or
cmpb
add
adc
lods
js
dec
fnsave
pushw
jns
pusha
cmpb
push
and
sbb
int
cltd
sub
and
js
lret
xchg
cmp
cmpsb
inc
mov
insb
mov
cli
mov
sbb
call
push
xlat
sub
inc
lahf
int3
sti
add
mov
mov
ljmp
andb
push
add
inc
and
xchg
test
mov
push
ds
aam
fiaddl
shlb
pop
in
mov
push
push
jmp
out
push
sbb
push
outsl
cmp
dec
sub
out
icebp
push
enter
mov
xchg
mov
adc
loopne
dec
sti
pop
test
dec
jl
cld
aas
aad
pop
cwtl
dec
fimull
mov
and
cli
aaa
popa
inc
outsl
loop
shll
jbe
sub
or
mov
add
shl
out
and
out
or
push
mov
ljmp
andb
iret
jg
mov
dec
lods
loop
aam
stos
push
lock
lret
out
loopne
cmpsb
add
icebp
xor
push
pusha
and
fdivs
add
mov
fnstcw
jle
jle
jne
cltd
call
aad
leave
loope
mov
inc
loopne
add
add
mov
pop
fs
cmp
jo
pop
fstps
jge
mov
out
scas
shlb
mov
mov
loopne
stos
loopne
pop
xlat
adc
popa
ljmp
mov
fnstsw
push
jg
dec
add
sub
loopne
push
inc
rclb
pop
mov
xor
int
fildl
inc
rorb
push
or
inc
je
add
add
rcr
mov
sub
mov
dec
inc
inc
mov
sbb
push
dec
int3
xor
inc
add
inc
mov
push
dec
lcall
shlb
add
sub
jmp
notl
or
std
pop
add
and
inc
jo
insb
icebp
cmp
push
sar
hlt
sbb
and
stc
xor
fistl
push
cmpsb
pusha
mov
fcompl
enter
xchg
rclb
faddl
add
cmp
leave
xor
fs
inc
push
pop
outsb
mov
xlat
out
pop
mov
sub
add
mov
mov
and
gs
shll
push
mov
negb
and
sbb
out
cmp
bound
fnstcw
lds
in
push
sub
inc
jge
repz
inc
adc
push
sub
cmp
stos
int3
mov
mov
andb
ret
lods
addb
jnp
shll
shlb
loop
push
dec
adc
sbb
gs
jbe
mov
sbb
adc
inc
mov
push
call
fiadds
and
test
lds
add
outsb
or
out
inc
test
mov
insl
cltd
fildll
imul
outsb
cmp
and
cmp
or
mov
cmp
mov
repnz
mov
xor
mov
xor
jbe,pt
xchg
or
mov
jnp
adc
mov
enter
mov
push
cmp
imul
adc
popa
mov
cs
and
nop
mov
cmp
bound
je
andb
stos
mov
loopne
loopne
shlb
lock
jbe
xchg
pusha
popf
sub
loopne
out
adc
sub
sti
andl
xchg
pusha
xchg
sarb
mov
mov
ss
or
lock
inc
jl
loopne
and
andb
mov
add
cmpsb
add
fcompl
xorl
xor
fsts
jecxz
addb
movsb
loopne
adc
leave
loope
mov
jp
out
in
jnp
pop
inc
pusha
cmp
shll
call
cmp
fdiv
pop
test
mov
cld
xchg
xchg
mov
sub
add
and
mov
popa
nop
ja
cmp
lret
xchg
int3
cli
push
mov
jb
arpl
sub
mov
ljmp
icebp
daa
lods
pusha
rclb
adc
test
and
lcall
mov
lcall
lret
xor
and
and
pop
xor
fstpl
or
ljmp
xchg
cld
push
stc
ss
cmp
addr16
in
test
lahf
les
in
add
pusha
inc
push
add
jae
mov
push
jle
adc
addb
dec
fcmove
cs
pusha
incb
and
shrb
test
jns,pt
pop
ret
je
adc
xor
ret
inc
jae
lcall
jb
out
mov
push
addb
xor
push
in
jmp
test
subb
lcall
rol
sbb
addb
cmp
mov
mov
testl
out
loopew
dec
or
aas
repnz
add
arpl
xchg
pusha
add
rep
stos
pop
pusha
push
arpl
cmp
pushf
mov
inc
jmp
lret
add
xchg
lods
xor
mov
enter
and
pusha
dec
and
imul
mov
xchg
sbb
mov
movsl
or
icebp
push
pop
sti
pcmpeqd
pusha
add
lods
loopne
bound
or
xchg
add
and
andb
icebp
cmp
clc
or
test
shlb
sub
push
and
inc
dec
je
fisubrs
in
cmpsb
pusha
pusha
dec
sbb
shrl
push
rol
jno
or
sub
pusha
xchg
loopne
mov
mov
lds
nop
movb
adcb
fwait
stc
push
movsl
into
outsb
mov
mov
std
mov
dec
ss
push
xor
inc
and
jmp
ret
gs
and
shl
out
sub
sub
loopne
mov
dec
call
pop
push
mov
pusha
int
xchg
mov
cmpsb
and
pop
cwtl
mov
ret
pop
js
jmp
pop
in
dec
push
mov
loopne
out
cli
adc
dec
xor
mov
leave
jne
pop
push
push
fs
out
xor
arpl
rolb
adc
mov
jp
inc
leave
clc
in
and
pop
inc
hlt
jne
inc
add
or
mov
pop
pusha
adc
shlb
movsb
inc
inc
sahf
sub
pop
dec
inc
mov
push
jmp
testb
inc
sti
push
adc
mov
cmp
or
mov
scas
fwait
cltd
outsl
mov
hlt
push
rolb
dec
xchg
xchg
cltd
jo
mov
sbb
shlb
add
and
sarb
not
jns
and
loopne
loopne
sub
xor
test
xor
cmp
rorb
ret
test
aas
or
lret
pusha
sbb
xchg
dec
mov
xchg
outsb
loop
mov
cmpsl
into
outsl
addr16
cmc
mov
and
adc
hlt
mov
insb
int
int3
add
mov
nop
dec
sahf
xor
loopne
xchg
mov
pusha
and
fsubrs
jae
xlat
pop
fists
das
popa
cmp
or
pusha
aas
fwait
popf
or
inc
dec
mov
es
dec
mov
mov
movsl
insl
enter
scas
mov
mov
push
adc
push
sbb
xchg
insl
push
ja
negb
jle
inc
inc
dec
cmc
mov
sahf
add
ret
add
orb
sub
stos
rolb
addr16
and
push
push
push
fwait
and
pusha
or
and
push
sub
add
cmp
mov
inc
fsts
jmp
mov
test
mov
inc
cwtl
xor
mov
lcall
pusha
mov
add
mov
das
push
es
xchg
lret
pop
sti
cmpsb
and
cmp
and
sbb
sub
std
imul
xchg
cmp
test
push
pop
push
test
mov
pop
mov
mov
dec
jns
xchg
dec
insb
lahf
sub
loop
jbe
cmpsl
jb
popa
and
push
dec
xchg
xchg
adc
out
xor
inc
inc
loope
outsl
xor
andb
je
xor
or
mov
mov
adc
cmpsb
pusha
cmpb
test
pusha
jl
in
shrl
add
or
rcll
enter
aad
and
and
je
subl
leave
in
int3
mov
mov
and
pusha
or
jge
fisubl
mov
lock
and
sbb
daa
add
push
hlt
lock
rcrl
loopne
gs
stc
and
mov
test
je
inc
dec
xor
pusha
inc
and
insl
dec
dec
les
pusha
rol
lods
mov
sahf
andb
loopne
or
fs
lock
inc
xor
andb
out
out
push
test
mov
push
sti
add
idivl
cmp
testl
xchg
pop
lcall
push
loopne
out
pusha
mov
jo
gs
idivb
push
pushl
adc
add
and
inc
movsb
loopne
mov
pusha
mov
js
mov
rolb
pop
stos
in
push
lea
xor
jb
insl
xchg
rcr
and
das
inc
nop
pop
test
xorb
sahf
push
mov
rolb
mov
or
push
add
in
ret
add
pusha
mov
mov
sub
enter
stos
and
mov
shl
and
pusha
cld
xchg
stc
clc
sub
imul
mov
fwait
push
pusha
mov
inc
mov
and
add
xor
rol
mov
lods
mov
dec
jbe
xchg
sub
sbb
pusha
or
pusha
add
push
dec
stos
push
lcall
mov
jg
lret
add
int
or
add
add
mov
inc
out
mov
xchg
outsb
lock
ficompl
inc
jns
addb
cmpsl
pop
and
inc
rclb
inc
pop
xlat
add
orb
cmp
mov
mov
mov
loopne
loopne
xor
hlt
mov
xor
sbb
or
inc
cmp
add
orb
test
mov
or
shll
test
and
jae
mov
pop
sub
mov
lea
pusha
sbb
sbb
jg
or
rol
mov
and
scas
loopne
addb
jmpw
and
push
adc
add
jl
cmpsl
push
xchg
inc
adc
ds
dec
outsl
movsb
and
and
call
outsb
frndint
adc
pusha
addb
iret
cmpsb
add
stc
cmp
pusha
shl
xor
xchg
add
lcall
sub
dec
into
cli
jns
cli
fdiv
fstpt
xchg
loopne
mov
and
loopne
jmp
scas
andb
lret
push
mov
and
ret
dec
movsl
addr16
dec
pop
sbb
inc
push
call
pusha
subb
mov
and
pop
jp
lret
leave
aad
out
popf
mov
pusha
add
pop
mov
mov
fstpt
add
fadds
add
cmc
cmp
xchg
enter
in
pop
scas
mov
popf
incb
mov
out
or
and
jp
lret
bound
into
xchg
rolb
ret
out
addb
movsb
mov
orb
shr
jo
sahf
sub
sahf
xchg
daa
xor
jl
das
fsubs
sbb
data16
pop
add
inc
push
loopne
nop
dec
cmp
pop
dec
push
loopne
add
pop
mov
sbb
popf
mov
jecxz
cmpsl
aas
in
add
lods
loopne
push
idiv
adc
jne
in
call
mov
clc
and
pusha
push
pushf
push
pop
lcall
jg
jge
pop
aas
pop
push
jae
xlat
xor
inc
stc
xchg
sbb
and
lea
or
mov
rolb
push
jg
push
aam
cmpsl
jno
repz
in
loopne
in
push
jne
negl
repz
pusha
mov
cmp
xor
jge
rolb
or
pushf
in
sarl
ss
cmpsb
inc
inc
clc
dec
iret
out
es
mov
movsb
mov
pop
mov
cmp
arpl
add
jg
jp
mov
and
mov
and
lods
shlb
rolb
rclb
inc
mov
loope
fwait
mov
ss
repnz
push
loopne
or
shrb
fwait
push
pop
es
cmp
andb
add
sbbb
rol
cwtl
jg
loope
push
add
lret
jp
pop
xchg
sub
xor
into
sub
inc
lea
cmp
cmp
mov
inc
out
ljmp
xor
jbe
dec
pop
sbbl
dec
mov
loopne
enter
xchg
imul
lods
loopne
push
inc
jmp
xor
mov
stos
repz
add
pop
sti
mov
ja
inc
cmp
and
pop
rol
bound
jno
and
jmp
mov
xlat
and
mov
pop
jmp
addb
xchg
loop
inc
and
ja
outsb
icebp
xchg
insl
xchg
addb
bound
insb
repnz
mov
aaa
sub
clc
mov
mov
sub
mov
push
and
sub
ss
sub
fstpt
nop
loope
scas
or
xor
inc
inc
int
andb
mov
fistps
xor
shlb
mov
mov
and
pusha
loopne
inc
out
out
jl
mov
add
mov
add
cmp
sarb
jl
xor
sub
mov
or
ror
add
loopne
xlat
inc
stos
mov
aas
sahf
pop
cmpsb
and
mov
pop
mov
mov
mov
in
push
rolb
mov
pop
add
mov
gs
cld
ret
cmpsb
rolb
cmp
loopne
dec
mov
js
jp
push
andb
insl
insl
mov
jae
add
lods
rolb
jnp
inc
and
fisubl
sbb
cli
shll
ss
push
add
mov
xchg
mov
xchg
adc
sub
jecxz
sub
shlb
pop
int
xor
loopne
ss
mov
push
xor
jns
fwait
mov
mov
or
push
out
jne
sbb
rolb
mov
mov
xor
into
fsubrl
inc
push
push
push
loopne
mov
faddp
sub
pextrw
jo
loope
xchg
loopne
addr16
ljmp
bnd
outsl
and
xchg
mov
cmp
inc
shl
fildl
in
mov
cmpsl
mov
leave
pop
mov
inc
or
xorb
pop
call
and
adc
or
mov
sub
insl
jo
fdivl
fcom
clc
imul
mov
sbb
cmpb
push
mov
jae
mov
pusha
nop
cmp
es
imulb
pop
push
sub
insb
fwait
popf
in
daa
cmp
mov
lahf
mov
loopne
fnstsw
out
test
fs
loopne
movsl
aad
pusha
and
jb
add
stos
addb
mov
notl
loopne
mov
cmp
addb
add
js
fwait
inc
outsl
xchg
mov
addb
dec
mov
sub
inc
xor
xchg
sub
sbb
inc
loopne
mov
pop
addr16
shlb
push
push
insl
sbb
sub
inc
xlat
sbb
dec
jp
pop
add
and
push
jl
or
lds
cmp
and
mov
addb
mov
sarl
call
stc
sub
pusha
fcoml
sbb
mov
or
loopne
mulb
fcoms
or
mov
addb
shrl
icebp
shlb
xor
inc
pop
or
push
movsb
inc
adcb
jle
dec
aam
out
jnp
and
xor
int
xchg
jbe
lods
andb
push
mov
sub
loopne
addb
out
lds
adc
mov
popa
test
add
mov
outsb
pop
sub
sbbb
or
test
add
and
rclb
sub
fistpl
rolb
insl
and
push
xchg
imul
mov
xor
mov
fisttps
shll
pusha
dec
fbld
inc
pusha
sahf
inc
xchg
cmp
dec
lods
inc
shl
je
stc
scas
inc
and
xlat
ss
and
add
mov
jecxz
daa
xor
mov
loopne
movsl
jne
repnz
arpl
arpl
cmp
or
and
or
cmp
add
pusha
orl
push
xchg
pop
xchg
cmpsb
andb
pushl
mov
cmc
pushf
jle
and
lcall
pusha
jno
xchg
sub
cmpsl
xor
js
js
imul
lcall
addb
xchg
cmp
jp
mov
fwait
mov
in
mov
or
test
rorb
rolb
sbb
jmp
adc
je
inc
scas
add
mov
jne
mov
shrb
jge
loop
sub
add
sarb
movsl
sub
add
rol
inc
mov
sub
rcrb
std
inc
push
test
mov
mov
mov
mov
adc
addr16
pushf
cmpsl
sub
add
fisubrs
shr
xlat
xchg
xor
ret
stos
pusha
adc
ss
fs
push
popa
mov
iret
das
loopne
inc
push
out
out
and
ds
jl
xchg
adc
lret
push
inc
lock
jle
jle
sub
and
loope
dec
sub
and
or
dec
lcall
jo
xchg
or
cmp
nop
pop
mov
sub
add
add
and
je
loopne
mov
cmp
pop
cs
and
popa
dec
popf
std
or
loopne
movsb
mov
arpl
push
mov
mov
push
xorl
cmp
mov
test
or
and
and
pop
dec
inc
aas
stos
mov
movnti
cmp
push
int3
arpl
push
mov
and
pop
xchg
xchg
bound
xor
ja
and
scas
sub
andb
je
lahf
sub
jb
mov
in
sbb
mov
stos
mov
adc
and
fstps
inc
mov
inc
nop
and
jmp
lds
push
mov
and
push
or
mov
dec
pop
shll
insb
push
and
pusha
sbb
and
cmp
fistps
sti
out
mov
outsl
mov
add
pusha
add
dec
mov
in
and
loopne
mov
fidivs
jmp
sahf
pop
ret
divb
adcb
ljmp
jl
inc
movsb
shlb
xor
mov
std
in
sbb
mov
cli
pop
aas
divb
aam
xchg
add
and
mov
cmp
mov
loopne
push
add
mov
fnstsw
mov
hlt
clc
outsb
xchg
mov
loopne
jne
push
ljmp
xor
ja
ficompl
sub
or
add
andb
jmp
xor
out
sbb
ret
pop
add
stos
add
iret
stc
fwait
lret
outsl
mov
sbb
inc
jb
pop
mov
xlat
adc
int3
popa
cs
add
ret
sbb
and
sbb
xor
es
mov
xor
test
std
jle
out
cmp
stos
mov
loope
ljmp
and
and
rorl
and
push
xchg
cmp
xor
pop
mov
insb
dec
cmp
loopne
nop
stos
pop
popa
pushf
into
sbb
rolb
or
jle
pusha
and
adc
shlb
add
inc
mov
and
rol
inc
and
aad
ss
xor
and
out
inc
rclb
pushf
lahf
addr16
andl
mov
in
xchg
std
notb
fists
js
xlat
adc
shlb
andb
test
mov
popa
push
outsl
lahf
mov
cmpsb
rolb
add
fnstsw
mov
sbb
fbstp
mov
push
cld
sarb
icebp
lahf
mov
mov
rorb
mov
pusha
call
mov
and
inc
inc
adc
dec
xchg
pop
test
rcrb
mov
rcll
mov
pusha
iret
lods
pop
dec
ficomps
lds
inc
mov
test
pushf
push
mov
mov
and
icebp
orl
and
insb
leave
repnz
pusha
pusha
cmp
rol
shlb
jl
ret
adc
in
sub
add
decl
mov
shl
push
loopne
gs
push
aaa
lds
scas
xchg
xor
aam
sbb
pop
sbb
lock
sub
pusha
add
inc
mov
xor
in
mov
sysexit
or
mov
and
sbbb
movsl
clc
aas
das
out
dec
adc
popf
xor
jmp
dec
enter
cmp
pusha
and
scas
add
mov
rcrl
push
pusha
pause
popf
ret
fcmovnbe
daa
out
push
dec
sub
mov
iret
mov
dec
shl
mov
nop
icebp
test
lea
fstp
shrb
inc
iret
roll
sbb
dec
cwtl
push
shl
lods
mov
add
pusha
cmp
leave
xor
inc
sub
mov
mov
mov
mov
cmp
lock
pop
fs
and
cli
pop
lcall
add
pop
cmp
and
gs
pop
pop
inc
fiadds
out
jnp
adc
inc
mov
aad
lret
inc
fbld
inc
or
add
pusha
and
int
xchg
pop
mov
xor
xor
xor
hlt
push
decl
mov
dec
int
imul
adc
inc
gs
addb
fcoms
pop
and
pop
adc
mov
jmp
add
add
pusha
adc
lea
pop
sbb
mov
mov
stos
aaa
or
sub
add
shlb
les
add
jns
mov
inc
inc
fistpl
jns
in
popa
or
sub
add
cli
in
sub
rolb
xchg
sbb
jno
imul
push
xchg
and
loop
inc
rcrb
stos
andb
loopne
add
loopne
push
and
and
dec
addb
jge
mov
rolb
sbb
mov
rclb
dec
xchg
xchg
cwtl
jnp
and
movsb
pusha
mov
inc
or
rolb
add
mov
inc
add
in
dec
inc
shlb
add
cld
loope
and
testl
adc
leave
dec
lret
ds
sbb
aaa
ja
cmp
xchg
mov
orl
jecxz
xchg
fimull
fdivp
int3
test
xchg
and
flds
add
inc
js
cmpsb
shlb
test
clc
push
inc
push
lock
repz
shlb
out
flds
mov
out
xchg
fisttps
pusha
aaa
adc
xor
mov
pop
dec
enter
call
mov
mov
lods
jp
jbe
scas
pop
mov
lods
loope
movsb
add
aam
out
cmp
movsl
push
sub
add
mov
inc
lret
adc
add
mov
inc
rorl
add
pop
pop
iret
movsb
rol
in
adc
jne
push
mov
imul
add
jnp
inc
lods
or
and
jmp
xchg
jle
outsl
nop
lods
push
pop
push
and
and
and
mov
ret
ljmp
loopne
decl
cltd
mov
rcll
push
lock
add
mov
and
loopne
inc
out
mov
andb
aas
inc
cli
xchg
orb
mov
push
rcr
cltd
repnz
mov
rorb
and
add
cli
bound
loope
fmull
lret
call
xor
add
addb
add
cmp
inc
rorb
ficoml
arpl
adcb
jae
ds
dec
inc
lahf
jecxz
sub
and
inc
inc
push
xchg
and
out
inc
cmpsl
cli
add
inc
sbb
mull
inc
pusha
pop
xchg
push
adc
iret
add
push
in
jl
aas
xchg
mov
jbe
pusha
shr
jnp
pop
mov
push
push
xor
in
outsb
mov
jl
add
orb
cwtl
fidivrl
call
addb
fimuls
xor
mov
adc
cld
xchg
mov
pusha
push
dec
xchg
loopne
dec
xlat
adc
mov
jo
sub
inc
mov
xchg
jb
ret
mov
rol
arpl
jp
mov
jne
jbe
mov
rol
mov
sbb
cwtl
loope
jns
and
xchg
mov
mov
adc
lods
addb
je
push
dec
loop
mov
lcall
push
mov
add
lods
loopne
pushf
scas
jp
sub
rolb
and
pop
push
mov
out
add
rorb
out
inc
mov
push
and
jle
je
fs
cmpsb
shlb
pop
jne
rcrl
dec
inc
xchg
stos
aaa
xor
ljmp
lea
mov
jne
and
inc
scas
pusha
pusha
add
jge
and
fstl
push
mov
sar
dec
jns
and
popa
outsl
mov
mov
and
pop
cltd
ss
lea
sbb
sarb
sarb
jbe
dec
loop
lret
mov
add
sub
cmp
inc
and
scas
adc
pusha
loopne
or
pop
nop
jb
adc
and
pusha
sub
loopne
jmp
shll
and
jne
rcl
add
rolb
mov
jo
test
mov
cmp
sub
add
cmp
loopne
mov
sbb
movsl
scas
pusha
sarb
dec
xor
and
add
adc
enter
sarb
inc
jo
shrl
cwtl
pop
je
es
lods
ds
rolb
jb
rolb
mov
shlb
mov
pusha
mov
cltd
call
out
ret
xchg
pop
mov
push
cmp
mov
std
lock
xchg
paddsb
cmp
inc
mov
jb
xchg
arpl
hlt
stc
adc
mov
jecxz
xor
outsl
sub
fnstcw
into
lods
loopne
push
mov
bound
push
test
mov
mov
cmp
or
es
adc
rolb
scas
xor
mov
mov
roll
xchg
xor
add
out
mov
add
mov
mov
sbb
and
ss
notl
loopne
imul
mov
loopne
je
adc
mov
mov
xor
xor
mov
shlb
lcall
es
and
inc
mov
lret
pushl
adc
rol
das
out
daa
mov
scas
pusha
inc
mov
xchg
pop
mov
loop
ljmp
mov
aaa
mov
ds
subb
and
xor
insb
pop
and
inc
mov
xchg
jno
std
and
rorb
loope
mov
mov
dec
std
and
int3
pop
add
or
xchg
insb
or
adc
sti
xor
and
jecxz
repnz
test
andb
push
shlb
jno
push
xor
pusha
cmpb
jg
push
mov
or
add
test
and
inc
test
mov
loopne
arpl
push
pusha
sarb
pop
imul
push
inc
cld
dec
mov
lret
leave
dec
lea
add
out
hlt
pop
add
sti
cld
xor
push
addb
jg
loopne
int3
mov
mov
mov
loopne
andb
ror
lret
pusha
jp
sti
loop
inc
sub
loop
inc
push
repnz
sbbl
adc
lods
xor
pop
ljmp
inc
add
mov
fs
pop
lret
adc
mov
xor
pop
mov
test
or
imul
bound
cwtl
enter
jo
ljmp
xor
jae
push
sub
add
es
and
xor
push
loope
inc
pop
adc
loopne
cmc
popa
mov
adc
loopne
call
cltd
jbe
insl
and
add
loopne
fs
idivl
cmp
mov
loopne
popf
add
adc
pop
or
add
cmpsl
sub
rolb
js
test
shlb
fnstcw
mov
pop
xchg
or
sbb
push
pusha
add
pusha
jae
mov
jnp
mov
and
mov
loopne
xchg
pop
sti
or
and
inc
loopne
jo
mov
mov
loopne
insb
add
mov
dec
and
and
xor
xor
pop
repnz
js
out
jmp
xchg
cs
in
push
dec
sbb
xchg
lret
loopne
inc
inc
daa
cmp
adc
mov
push
daa
test
and
push
int3
movsb
rolb
into
je
pop
lret
std
cmpsb
mov
mull
mov
sub
loopne
or
pusha
jmp
sub
lret
loopne
jecxz
stos
mov
inc
rorl
push
andb
jmp
sbb
popl
mov
or
andb
shl
pusha
lret
cmp
mov
xor
and
pusha
mov
loopne
inc
sub
sbbb
add
add
leave
dec
lods
and
push
pop
popf
pop
jo
lock
popa
jle
jns
js
insb
sub
mov
adc
xchg
stc
or
scas
push
addb
lea
pusha
inc
iret
pop
xchg
push
pusha
add
pop
cmpsl
test
leave
or
loopne
lds
shrb
adcb
mov
cmp
jp
inc
dec
mov
ds
dec
popf
xor
imulb
rolb
nop
dec
sbb
sub
loopne
or
sbb
rol
pop
xor
inc
outsl
and
add
sbb
pop
and
fldpi
pop
scas
mov
out
push
adc
sub
repnz
andb
jge
cmp
mov
ljmp
int
sahf
inc
xchg
flds
mov
mov
andb
xor
jb
add
loopne
ljmp
push
out
fcompl
and
push
pusha
loopne
adc
or
or
scas
arpl
sub
xor
sti
dec
pop
ret
nop
loopne
loopne
cmp
sti
push
jmp
xchg
cmp
add
or
jae
out
push
pop
mov
pop
dec
test
loopne
sar
cltd
mov
add
addr16
aad
setnp
and
icebp
fsubp
sbb
popa
add
mov
movsl
jbe
addb
inc
in
pcmpeqw
aaa
cmp
ja
cld
cmp
fstpl
xchg
shr
jns
mov
mov
sbb
mov
xor
test
add
repnz
xchg
loopne
dec
inc
mov
adc
rcl
mov
nop
cmp
sub
jb
sbb
ret
cmc
addb
cmpsb
mov
mov
sbb
inc
scas
mov
adc
mov
loop
dec
insb
enter
mov
push
mov
in
lds
mov
lret
bound
dec
fldenv
loopne
add
pusha
mov
inc
repz
aam
and
add
pusha
add
cmpsb
rolb
add
jg
sub
pusha
mov
fldenv
das
arpl
pop
leave
add
add
rorb
xchg
stc
or
inc
movsl
mov
and
pop
rcrb
flds
ljmp
push
fxch
das
mov
pop
xchg
add
rorb
inc
xchg
scas
inc
clc
fldl
cmc
out
pushw
mov
addb
cmpsl
jl
bound
mov
and
jl
mov
adcl
aad
fcompl
pop
gs
loopne
mov
lahf
xchg
mov
cmp
in
lds
hlt
jl
ror
movsb
pusha
pusha
pop
xchg
cltd
sbb
push
out
out
inc
pusha
test
pop
mov
dec
mov
repz
ret
cmp
dec
or
loopne
add
adc
cmp
rolb
loop
push
cld
push
scas
and
or
inc
xchg
push
cmp
inc
and
cmpb
mov
mov
pop
cmpsb
add
js
jecxz
cli
jnp
ret
loop
jnp
mov
aas
and
rcr
xchg
fimuls
add
or
inc
test
in
inc
mov
add
mov
pusha
and
sbb
hlt
sub
and
mov
ficomps
jl
jb
pop
or
inc
xchg
push
pop
loopne
adc
lods
mov
xor
loopne
lcall
mov
incb
dec
jne
jge
xor
gs
sbb
dec
xchg
and
mov
inc
push
fdivp
andl
xchg
stc
scas
loopne
add
lret
jecxz
add
inc
add
or
add
imul
inc
loopne
jle
nop
pop
aad
sbb
test
adcb
lret
ja
shlb
mov
in
xchg
cli
sbb
sarl
add
inc
cwtl
and
xlat
jg
and
fwait
sub
pusha
shlb
or
mov
pusha
add
outsl
inc
mov
add
pusha
adc
jno
out
adc
mov
shlb
je
add
fxch
outsl
aam
cmp
or
ret
and
shr
data16
mov
and
in
orl
sub
subb
add
pop
xor
inc
or
jno
jmp
rcrb
addb
andb
shl
sbb
addb
dec
jno
adc
and
pop
jmp
orb
jmp
and
shll
shl
jp
cmp
and
ret
rorb
andb
xor
sub
loopne
dec
or
xor
mov
jo
loopne
xchg
xchg
arpl
and
loopne
mov
mov
add
es
pusha
mov
shlb
jns
addb
test
imul
loopne
add
inc
jae
andb
shlb
push
jnp
cmp
xor
pop
mov
push
mov
dec
sub
dec
dec
adcl
or
ret
icebp
mov
ja
push
mov
movsb
andb
repnz
call
sub
and
push
pusha
inc
bound
mov
xor
andb
dec
cmp
jge
mov
and
or
add
pusha
push
out
cwtl
je
cmp
popa
data16
pop
inc
jmp
and
add
pop
mov
insl
xlat
sub
adc
inc
add
jo
repz
inc
cmpsl
jae
adc
fildl
test
rcl
dec
aaa
mov
push
adc
insl
pop
mov
pusha
adc
push
cs
cmp
aad
sub
call
in
push
and
xor
jae
test
add
xchg
push
mov
addb
loopne
in
pop
jbe
ficompl
adc
les
cmpsb
add
jno
cmpsl
ret
push
mov
add
out
imul
addb
mov
add
xchg
xorb
cmp
mov
mov
mov
in
cmp
or
js
bnd
loopne
sub
in
add
jge
pop
xchg
lods
shlb
push
pop
mov
loopne
pop
sub
and
mov
pusha
add
and
mov
jbe
inc
jmp
cmc
dec
mov
mov
jnp
std
add
shlb
cmp
cmp
mov
lods
addb
aam
cld
mov
push
loopne
sahf
push
mov
nop
and
loopne
pusha
lahf
popa
lcall
test
and
addb
inc
aaa
dec
mov
rolb
lcall
add
pop
clc
sbb
push
movsb
add
movsl
xchg
ja
stos
cmp
mov
pusha
add
mov
loopne
movsb
inc
mov
add
mov
andb
inc
lds
mov
pop
push
lds
push
in
inc
leave
gs
mov
imul
mov
push
loopne
mov
inc
loopne
ds
and
out
repz
lods
jmp
gs
aam
mov
mov
sub
and
jge
add
push
push
pusha
addr16
adc
addb
and
and
push
pop
imul
mov
or
loopne
addb
leave
loopne
stos
add
dec
adcl
mov
mov
hlt
xor
and
push
mov
ds
inc
cmpsb
rolb
cmp
push
loop
adc
or
lods
shlb
sub
xor
add
xor
test
sbbb
mov
idivb
scas
push
inc
shl
je
aad
out
loopne
into
adc
rclb
imul
outsl
jno
in
mov
fs
pop
lahf
add
ret
pop
mov
int
and
sub
lahf
loop
sahf
jb
fdivp
pop
addr16
jg
ljmp
jg
cmp
in
jge
mov
push
aas
xchg
ljmp
jl
mov
scas
push
sbb
lods
xchg
gs
int
loopne
lret
push
add
pusha
inc
adc
cmpl
scas
pusha
and
sti
outsb
sbb
subb
loopne
into
xchg
inc
pop
lods
loopne
imul
loopne
xor
loopne
push
sbb
mov
scas
add
test
mulb
and
or
dec
daa
clc
jae
call
inc
and
push
loopne
test
mov
notl
sub
cli
jo
inc
pusha
lret
movsb
loopne
stc
repz
push
repnz
cmp
xlat
jnp
cmp
and
imul
mov
push
notb
ficompl
jo
cltd
and
int3
lcall
add
pusha
loopne
inc
sbb
ss
call
inc
jo
add
loopne
sbb
lret
aam
mov
jge
inc
punpcklbw
mov
xchg
loope
sub
adcb
mov
pop
xchg
pop
push
loopne
add
cmp
cmpsb
loopne
xchg
lret
mov
loopne
out
andb
sub
test
loopne
gs
or
and
dec
or
sar
mov
pop
and
jae
shll
icebp
dec
dec
mov
addb
sbb
jmp
rolb
test
or
ss
loopne
and
add
push
test
loop
jb
cwtl
into
ror
bound
das
xor
stos
add
jae
andb
loopne
popa
xor
pop
cmp
adc
inc
pop
push
ret
xchg
fadd
cmovns
cmpsb
andb
nop
inc
pop
test
xor
add
mov
dec
mov
push
or
loopne
inc
push
scas
mov
xchg
cmp
cltd
test
ret
dec
sbb
mov
ret
and
cmpb
andb
out
cwtl
cltd
xchg
gs
imul
pop
mov
call
loopne
push
mov
shll
and
rorl
jl
jo
subl
jge
mov
pop
push
out
clc
mov
push
addb
add
and
and
dec
adc
mov
inc
pushf
movsl
add
fisubs
and
clc
sbb
sbbb
jmp
mov
pop
ret
adc
sti
pop
stos
add
dec
and
loopne
andb
out
inc
addr16
enter
std
cmpsl
sahf
loopne
add
pop
mov
jp
xor
lds
ja
push
dec
outsb
imul
mov
add
fwait
mov
rol
nop
adc
negl
cmc
in
pop
xchg
adc
fsub
daa
inc
sbb
sub
jge
sbb
mov
rol
pusha
sahf
int3
aam
pusha
inc
push
add
sub
loopne
add
test
pop
xchg
sub
lock
push
xchg
sti
int
pusha
and
loopne
icebp
and
pusha
pop
fldt
fsts
push
adc
cmp
mov
and
jne
mov
sarb
pusha
inc
in
loopne
and
and
andb
and
add
cld
cmp
and
xor
adc
shr
or
outsb
inc
shll
shlb
jg
dec
fs
cmpsb
and
hlt
and
inc
xchg
push
xor
gs
rcr
and
loopne
cmp
mov
mov
fnsaves
mov
mov
leave
cmp
test
mov
cmpsb
addb
jae
pop
mov
in
call
sbb
pop
lea
lahf
or
add
and
mov
rolb
addb
test
popa
je
inc
and
or
and
cwtl
push
in
dec
movsb
pusha
shrb
xorl
pusha
outsl
inc
xchg
mov
mov
scas
mov
fwait
add
add
mov
fiaddl
pop
mov
inc
jnp
push
inc
inc
inc
mov
dec
mov
sbbb
sub
sbb
jne
xor
jmp
add
mov
mov
pop
ficoms
into
xchg
divl
add
xorb
adc
cli
xchg
sbb
sub
mov
shl
mov
shlb
sub
pusha
insb
pop
imul
aas
xchg
adc
mov
loopne
shl
mov
lea
push
stos
inc
inc
shrb
ss
das
js
add
mov
mov
ds
dec
xor
addr16
sub
addb
popa
fmul
mov
fs
xor
adc
loopne
mov
ficoml
or
loopne
jns
or
add
and
cmpb
in
cmpsb
and
lahf
or
loopne
jne
mov
test
and
mov
mov
inc
add
sbb
xchg
test
andl
sarl
fidivs
inc
iret
jmp
inc
pusha
mov
lret
sub
loopne
and
mov
and
loopne
aaa
mov
lahf
xchg
out
shl
addb
and
mov
loopne
cmpsl
sti
sarb
shll
icebp
ja
cmp
mov
mov
adc
popa
pop
pop
fisubrl
push
sbb
xchg
push
aam
jmp
sub
and
and
shll
adc
into
mov
addb
mov
daa
stos
out
jno
sbb
fidivs
in
negb
mov
outsb
aaa
das
pop
and
mov
and
daa
pusha
andb
int3
popf
inc
das
or
jmp
dec
ss
jo
mov
add
sbb
xchg
divl
lods
or
and
addb
mov
xlat
xchg
and
and
aam
add
clc
shl
adc
das
adc
inc
inc
and
adc
add
mov
xchg
loop
push
pop
out
jecxz
loop
pusha
packsswb
xchg
xor
cmp
xor
popf
imul
cld
inc
das
mov
test
shlb
mov
lcall
testb
cwtl
dec
incl
dec
pop
jns
sub
rcl
mov
mov
ret
cli
jmp
and
xlat
adc
and
clc
andb
mov
pusha
loopne
jns
add
icebp
mov
sbb
cld
jnp
sarl
mov
movsb
and
out
add
add
loopne
iret
jne
sbb
mov
jnp
pop
jmp
jle
fwait
dec
mov
out
inc
jge
inc
mov
push
add
in
inc
mov
mov
inc
aas
mov
add
add
mov
add
xchg
mov
cli
push
in
mov
jg
mov
add
andb
xchg
loope
xchg
sub
aas
aad
mov
mov
cmp
mov
andb
push
jne
lea
scas
insl
cli
aas
rcrl
rcrb
push
inc
loopne
jno
push
andb
test
shlb
sbbl
mov
shr
out
jmp
and
nop
fwait
aaa
mov
ljmp
dec
js
inc
inc
repz
loopne
jmp
and
fdivs
pushf
cmpsl
daa
jae
repz
adc
xor
mov
mov
and
mov
dec
testl
add
adc
lea
add
adc
jno
mov
mov
push
cmc
cmp
inc
fldt
ja
fistpl
pusha
add
popf
adc
mov
adc
pop
imul
mov
je
insl
out
mov
pop
adc
hlt
pop
cmpsb
inc
cmp
aad
xchg
push
pusha
add
xlat
mov
jno
sub
and
loopne
mov
and
ds
xor
mov
sub
addb
add
mov
inc
loopne
incl
push
xor
ror
mov
mov
rol
hlt
dec
inc
jp
lcall
mov
outsb
push
shl
insl
inc
push
xor
inc
sarb
or
and
movsl
mov
sar
aad
test
mov
shrb
ss
mov
lock
pop
xor
lcall
lahf
jbe
aaa
cmp
aaa
mov
loopne
adc
testb
lock
lods
and
out
addl
sbb
pop
jns
stos
shlb
stos
addb
cltd
cltd
scas
and
cmp
lahf
jns
dec
xchg
hlt
xor
push
xor
out
sti
rcrl
enter
into
filds
loopne
jns
bnd
out
cmpsb
and
scas
xor
lcall
inc
fistps
pop
lock
add
andb
and
inc
xchg
icebp
lock
jno
sbb
dec
xor
in
sub
mov
push
sbb
add
aas
out
push
test
and
hlt
cmp
rolb
loopne
adc
or
imul
mov
jmp
mov
adc
cli
les
sarl
sbb
in
iret
cli
lret
add
inc
aas
div
fldl
shl
push
stc
test
and
fldl
dec
mov
arpl
sub
pusha
sub
movsb
addb
dec
cmpsl
lds
pusha
mov
in
insb
movsb
add
add
fwait
jle
push
lods
mov
mov
push
mov
aaa
sti
rorb
andb
mov
in
daa
hlt
clc
test
sbb
fs
cwtl
or
mov
in
int
xchg
mov
mov
dec
mov
inc
rcrb
fldcw
dec
into
repnz
pop
or
repz
addr16
imul
popa
add
leave
rclb
push
shll
movsl
and
jne
inc
sarb
pusha
jo
jmp
lret
add
lret
pushf
ret
lock
stos
inc
shrb
rcrb
xchg
push
add
loope
and
sub
loopne
ss
add
jb
inc
rcrl
gs
test
jnp
sub
pusha
in
js
pusha
loopne
movsb
inc
add
jbe
fwait
aas
adc
mov
loopne
dec
mov
mov
shl
ja
hlt
sub
loopne
fldl
add
mov
test
mov
out
mov
adc
adc
js
insb
outsl
mov
mov
pusha
loopne,pn
mov
add
sbb
inc
out
shlb
aas
sub
mov
nop
stos
and
xchg
inc
push
lds
jl
fimull
outsb
ljmp
and
xor
lods
pusha
loopne
loopne,pn
pop
xor
icebp
ret
aad
fmull
ret
movsb
pusha
pusha
je
and
push
ret
clc
mov
adc
and
mov
or
or
xchg
sbb
push
add
adc
ret
xchg
sti
and
bound
mov
sbb
pushf
mov
sbb
scas
and
out
mov
clc
scas
js
insl
lods
addb
pop
mov
mov
add
cmp
jp
lods
inc
and
outsl
cmpsl
repz
xchg
xchg
add
pop
sarl
jns
lret
fiadds
cmp
stos
mov
xor
adc
jecxz
enter
mov
inc
cmp
xlat
movsb
and
andb
fwait
repnz
outsb
mov
rcl
cmc
fldenv
nop
andl
aam
rcr
push
xchg
jge
lcall
incb
or
pusha
hlt
sub
scas
inc
rorb
and
notl
adc
push
inc
mov
lret
out
pusha
add
xchg
ficomps
sbb
pusha
pop
les
shrb
add
jecxz
dec
mov
xchg
movl
jb
sub
shrb
jecxz
cmp
stos
mov
cmp
pop
jmp
rolb
adcl
movsb
pusha
add
pop
out
loop
andb
mov
adc
out
daa
roll
lcall
xor
sti
je
and
mov
pop
pop
inc
into
push
pop
test
mov
and
adc
shlb
and
sbbb
loopne
and
rcl
loopne
fbld
or
mov
pop
jmp
nop
fbstp
shlb
mov
push
test
andl
into
loope
mov
loopne
adc
jg
cmp
icebp
sahf
jg
add
cmc
push
sub
sbbb
and
xor
nop
cmc
jg
mov
pop
clc
stos
pop
pop
call
mov
pusha
mov
jb
popf
aad
inc
cltd
divb
mov
jbe
inc
pop
lcall
xchg
repnz
and
in
jp
negb
rolb
addl
roll
out
dec
sar
or
loopne
jge
xor
lods
andb
jns
mov
inc
and
loopne
xor
cmpsb
and
pop
fcmovnb
cmp
les
ds
imul
xchg
mov
pusha
rclb
mov
pop
das
sti
stos
pop
lea
add
out
leave
inc
push
xor
mov
mov
xchg
and
mov
mov
add
adc
stos
cli
push
sub
inc
popf
mov
pop
ror
add
andb
cs
loopne
out
mul
push
mov
rcrl
addb
mov
stc
daa
cltd
out
shll
add
push
outsb
inc
mov
cwtl
dec
iret
int
push
mov
aad
mov
dec
sarl
test
add
mov
rolb
addb
and
xor
iret
addr16
arpl
mov
cmpsl
bndstx
sbb
out
mov
pusha
ret
fisubrs
addb
mov
shlb
movzwl
aaa
andb
nop
fildl
and
xor
push
pop
lret
add
cmp
pusha
loopne
sarl
test
sbb
add
addb
sarb
loopne
pop
addb
enter
int
rclb
imul
mov
jo
fbstp
lods
loopne
pop
loope
pop
aam
icebp
mov
pop
mov
add
repz
add
and
icebp
jl
lahf
in
sti
adc
sti
notl
mov
fwait
inc
cmpsb
inc
add
jo
push
or
loopne
pusha
and
cmc
jb
pusha
rcrb
pop
scas
inc
loopne
mov
push
xor
jnp
gs
pusha
cmp
sbb
push
test
sbb
loopne
es
andb
shll
das
pop
addb
add
popf
adcl
xor
test
mov
sub
jmp
or
mov
adc
push
jge
inc
rcr
jmp
fnstcw
sbb
mov
mov
dec
das
ret
pusha
nop
xchg
inc
inc
mov
xchg
scas
andb
add
jnp
test
ficompl
mov
push
mov
sbb
inc
mov
aam
stc
or
mov
jle
cltd
sti
daa
sbb
test
mov
sarb
je
or
jge
outsl
cmp
cltd
mov
lock
push
out
inc
cld
sbb
mov
cmp
js
imul
push
int
stos
xor
mov
jno
shll
or
and
dec
mov
xor
sub
loopne
addb
add
sbb
rcr
cmp
mov
inc
inc
loop
and
leave
fidivrl
sub
fstp
js
addr16
shll
pusha
mov
sbb
or
repz
fwait
or
loopne
ret
sahf
cmp
cmpsl
mov
fistpll
sub
mov
push
testl
int
add
lods
addb
xchg
icebp
jp
pop
add
inc
popf
inc
add
enter
mov
pop
gs
js
mov
mov
dec
pop
push
cmpsb
inc
add
fsubl
pusha
and
rol
mov
pop
and
inc
sub
mov
test
into
jg
mov
xchg
loopne
fwait
std
mov
xor
dec
adc
jbe
mov
dec
mov
dec
out
aad
mov
mov
iret
add
pusha
mov
sbb
pop
mov
sub
popa
xor
es
loopne
add
rolb
add
adc
andl
test
fcompl
pusha
inc
dec
mov
inc
into
cltd
jecxz
js
jmp
lock
inc
mov
fnstenv
jno
xchg
mov
loopne
add
push
xchg
jbe
push
pop
pop
push
aad
cmp
xor
add
xor
into
sbb
pusha
add
cmpb
inc
pusha
cmp
and
and
push
xchg
gs
mov
test
mov
andb
dec
movl
mov
aad
sub
and
cmp
jge
add
arpl
fistl
and
adc
dec
dec
jae
dec
pop
fdivl
pop
sub
shl
mov
mov
add
lds
loopne
mov
pop
js
in
data16
andb
arpl
shl
std
lds
fsubl
aad
sbb
adc
rcrl
xor
xor
lock
push
fucomi
xor
and
push
imul
ret
sbb
loopne,pn
cmpsl
xchg
cmpsl
out
mov
shlb
xor
loopne,pn
fs
stos
and
xchg
jb
adc
mov
mov
inc
sahf
fidivs
cmp
and
das
fists
ret
das
push
jnp
std
jo
mov
xchg
dec
int
jl
and
add
add
popa
ret
fimull
pusha
or
mov
pusha
xor
pop
pop
sti
pushl
aad
sub
gs
je
sti
or
sahf
inc
add
jne
movsb
and
into
mov
inc
mov
and
add
test
inc
and
and
shlb
loopne
shl
jg,pt
xor
push
loopne
sub
xchg
push
inc
or
out
test
add
aaa
cwtl
dec
mov
adc
shlb
insl
addb
insb
ret
mov
add
cli
xor
jae
mov
imul
add
add
inc
sub
and
mov
loopne
jbe
inc
pop
sub
loopne
cwtl
mov
div
fsts
shrl
ret
pop
lods
loopne
adc
add
andb
push
fcmovne
notb
adc
mov
pusha
mov
fdivl
lods
and
pop
add
add
leave
in
add
shlb
loopne
pop
xchg
in
mov
xchg
or
bound
or
mov
leave
andb
movsb
add
lcall
outsb
inc
movsl
icebp
lret
mov
sbb
sub
and
inc
enter
and
loopne
adc
into
out
inc
add
add
add
pop
cli
pop
mov
je
push
ret
or
cmp
mov
cmpsl
fsubrs
mov
add
xor
shll
rolb
mov
loopne
lcall
mov
push
mov
mov
xor
pusha
clc
xchg
add
mov
loopne
pop
int
addb
dec
sahf
push
mov
adc
rolb
and
cmpsl
cmp
in
or
addb
or
add
repnz
and
cmp
pop
aam
je
sub
js
ret
or
adcb
xor
lock
xchg
push
pop
cwtl
push
into
push
imul
insl
add
mov
inc
shlb
iret
cmp
jmp
rorb
jl
add
lret
test
loopne
jl
inc
xchg
add
sbb
and
loopne
fsubrl
mov
pop
ret
push
shrl
add
mov
mov
mov
and
push
fisubrl
pusha
mov
loopne
and
call
scas
push
fsubrs
mov
ds
sahf
dec
aad
and
mov
pop
jbe
mov
jmp
aas
in
adc
xlat
jp
loopne
scas
shlb
mov
flds
pusha
pusha
lods
cltd
push
ret
sbb
cmp
sti
xchg
jmp
dec
jle
shll
inc
add
sbb
subl
lret
addb
adc
sbb
pusha
and
in
mov
notb
mov
mov
ja
mov
add
pop
sbb
jp
add
sub
adc
mov
aad
div
mov
imul
mov
and
sarb
loopne
stos
loopne
aam
in
dec
ret
subl
out
repz
mov
rorb
std
or
loopne
push
fsubp
mov
adc
sarb
stc
sub
ljmp
fstpt
ret
imulb
call
rcrb
lds
adc
xchg
test
add
jg
outsl
and
and
sbb
add
cmp
in
mov
mov
sub
andb
push
mov
cld
cltd
in
shlb
pusha
and
push
lock
hlt
cmp
add
insb
push
jno
scas
inc
into
sbb
mov
shll
push
pusha
mov
push
and
sti
clc
sub
shlb
cmp
xchg
jnp
repnz
nop
ret
add
cli
dec
dec
scas
loopne
cmp
loope
xlat
test
lret
or
loopne
mov
jecxz
rclb
mov
mov
add
jmp
mov
cld
push
mov
in
insl
adc
add
shl
sbb
jg
push
scas
rolb
insw
fildl
sub
inc
rolb
ss
jae
mov
in
stos
sub
sahf
xchg
jl
fwait
dec
idiv
shlb
outsb
mov
cs
add
jb
divb
inc
addb
adcb
data16
dec
add
pop
clc
jns
and
je
add
adc
loopne
add
loopne
xor
addb
add
dec
mov
loopne
aad
xchg
repz
dec
inc
jp
mov
xor
and
add
in
pop
inc
mov
hlt
scas
add
dec
or
mov
lcall
shrb
icebp
repnz
cmpsb
pusha
inc
in
mov
mov
add
adc
sub
mov
adc
mov
jmp
or
add
add
add
inc
mov
out
notb
loopne
mov
xchg
push
rcr
test
addb
sub
pusha
rcrb
in
fsub
dec
sbb
or
push
inc
jecxz
inc
push
lret
mov
adc
jmp
fisubl
shlb
outsb
inc
lret
daa
aam
and
and
outsl
ret
cmp
daa
popf
and
loopne
dec
mov
mov
jne
out
mov
shlb
push
fmull
adcb
push
pusha
loopne
outsl
push
inc
pusha
mov
pop
push
pop
movsl
data16
out
inc
pusha
push
cmp
incb
andb
sbb
mov
lret
mov
and
rclb
dec
add
pop
lahf
imul
xchg
xor
cmp
or
jecxz
jne
or
stos
jmp
adc
add
mov
dec
xor
fstpt
cmp
jg
shlb
and
shl
je
xorl
cmpb
cmpsl
mov
add
mov
rcrb
jae
jmp
pusha
add
jmp
fs
lcall
std
dec
imul
rcrl
daa
dec
cmpsb
loopne
inc
or
add
orb
lcall
popa
movsl
jnp
jae
jnp
adc
and
inc
int3
mov
int
sub
mov
and
es
mov
dec
lods
inc
and
and
sarb
add
inc
push
push
repz
mov
adc
mov
mov
orb
jb
xor
or
ret
or
shlb
add
call
jnp
fisttpl
add
shlb
jb
push
pop
std
push
add
lods
or
scas
add
lahf
je
stc
xchg
stc
dec
lods
andb
rolb
pusha
jno
jg
outsb
mov
or
js
daa
fsubp
cmp
nop
jbe
hlt
fstpt
mov
fdivl
repz
lcall
insl
xchg
xlat
adc
das
mov
mov
mov
idivl
adc
adc
aaa
cmp
inc
pusha
cmp
cltd
mov
loopne
rol
cmp
sbb
jg
arpl
stc
loope
push
pop
call
cmp
fs
pop
inc
addb
jo
mov
incb
add
inc
nop
hlt
mov
pusha
adc
lock
aad
shlb
pop
loope
andb
mov
jnp
dec
clc
lds
mov
cld
push
jmp
add
inc
add
jmp
das
test
movsb
and
test
inc
pusha
push
das
idiv
ror
je
fidivl
dec
or
xchg
adc
pusha
sarb
and
int
inc
nop
data16
and
inc
jne
cld
or
cmpb
mov
and
and
sbb
mov
lock
push
add
inc
in
jbe
dec
js
ds
rolb
and
push
mov
loopne
ss
addb
cmp
mov
pusha
mov
inc
jp
and
and
xor
xor
insl
sub
bound
shlb
fldenv
andb
hlt
gs
push
mov
mov
add
and
in
scas
nop
pop
rcr
mov
mov
pop
xchg
jecxz
jnp
addb
mov
mov
and
xchg
test
aas
iret
cmp
ja
push
loopne
cli
andb
pop
adc
or
into
stc
mov
mov
mov
pushf
mov
imul
enter
lods
sub
pusha
jge
fildll
rolb
mov
inc
xchg
outsb
push
cmp
out
xchg
cmc
loop
jb
adc
xchg
mov
js
aas
and
adc
adc
loopne
mov
inc
xorb
pop
cmp
jl
inc
pushl
jge
jp
pop
daa
pop
out
pop
cli
cld
and
sbb
xor
arpl
andb
or
pusha
mov
and
mov
xor
mov
mov
xor
ds
pop
push
mov
insb
into
cmc
pop
dec
negl
stos
cmp
repz
pop
add
and
mov
fstl
sbb
jecxz
cmp
cltd
mov
int3
sbb
xchg
sbbl
and
jecxz
cmp
popf
mov
ss
pop
cmp
jge
in
lcall
cmc
inc
fistl
test
call
push
dec
sbb
cmp
mov
fwait
out
dec
std
icebp
xor
add
inc
xchg
mov
seta
mov
cmpb
cmp
in
push
and
or
and
and
fsts
dec
mov
out
cld
mov
push
and
cmp
mov
imul
fdivr
mov
arpl
dec
cmpsl
sbb
and
and
test
test
sbb
scas
outsb
dec
push
add
pusha
nop
cwtl
jbe
js
jl
mov
in
pop
adc
inc
shlb
aam
pop
dec
and
pop
nop
jb
dec
jle
test
add
mov
pop
icebp
mov
jl
pop
outsb
sbb
idiv
lds
cmp
dec
or
inc
xorb
int
hlt
mov
add
out
mov
add
xor
pop
sti
sub
stos
andb
dec
jecxz
and
jge
std
pop
pop
inc
dec
cmp
test
sub
add
loopne
lret
push
addb
add
xor
mov
hlt
mov
lcall
cmc
add
orb
loop
xchg
mov
xor
es
ss
cmpsl
xchg
sbb
mov
ror
cld
add
ja
lcall
repz
imul
sub
fimull
imul
jno
ja
push
jl
inc
ficoml
dec
pop
push
sub
or
insl
adc
or
inc
jecxz
ret
xor
xchg
xor
clc
inc
or
and
jne
cltd
jbe
xor
inc
inc
push
pusha
shlb
pop
fs
ret
or
rcl
fldl
jne
gs
pusha
fbstp
mov
shl
mov
call
push
jbe
bnd
lcall
add
or
sarb
popa
inc
dec
push
jne
xchg
sahf
push
mov
mov
incl
outsl
pop
push
fs
ss
call
imul
jns
add
xchg
in
inc
dec
aaa
inc
nop
add
loope
scas
mov
add
push
rolb
orb
nop
insl
mov
andb
xchg
and
enter
pop
jle
adc
sbb
adc
shl
fcomps
pusha
mov
in
jno
push
sub
inc
inc
jo
push
cltd
jg
or
stos
stc
inc
stos
lds
and
inc
stos
dec
int3
inc
cmp
inc
cmp
rclb
xor
add
pusha
dec
daa
mov
out
jae
and
sbb
stos
and
xchg
lahf
and
inc
lock
pop
pop
jns
mov
add
and
add
shlb
inc
pusha
adc
push
pop
test
rolb
dec
or
aad
mov
sahf
mov
push
inc
outsb
pop
int3
jp
movsl
idiv
sarb
insl
movsb
inc
add
xchg
push
out
mov
vprotd
push
hlt
and
and
mov
dec
cmc
ret
sbb
jae
sbb
pop
sbb
pusha
shlb
pusha
add
mov
sbb
add
add
dec
mov
add
mov
loopne
adc
add
sub
subl
sbb
andb
scas
pusha
mov
mov
cmp
xchg
ret
lahf
xchg
pop
lea
mov
jo
insb
dec
fiadds
fwait
addb
pop
push
inc
cltd
xchg
mov
outsl
pop
aad
sahf
fidivs
enter
or
and
loopne
inc
test
and
lea
dec
xor
xchg
mov
pusha
stc
lds
subl
addb
sarl
cwtl
mov
inc
lahf
data16
rolb
rol
xor
aam
hlt
xacquire
loopne
dec
cmp
pop
pop
ljmp
push
shlb
and
cmp
aam
mov
pop
adc
addb
inc
sarb
es
or
out
adc
inc
sbb
nop
imul
add
sbb
dec
push
rolb
andb
inc
jl
cmp
mov
add
add
jmp
push
dec
mov
mov
and
loopne
push
lahf
push
mov
sbb
jno
pop
xor
jb
pop
out
mov
mov
push
rcll
xchg
push
xchg
cmc
adc
xor
sub
popf
adc
loop
fdivrl
lock
and
loopne
cmpsl
mov
scas
pop
test
mov
xchg
addr16
push
movsl
lcall
pusha
ficoms
adcb
dec
je
addb
add
add
out
lock
push
dec
add
loopne
andb
sub
loopne
or
mov
pusha
pusha
std
ret
xchg
imul
rorb
clc
xchg
mov
or
push
pop
xor
nop
pop
or
sarb
mov
dec
rcll
jo
ds
adc
addb
dec
nop
out
out
fsubl
and
icebp
sti
push
add
aam
in
push
faddl
jns
sub
and
mov
cld
or
int
jns
pusha
loopne
insl
sub
inc
lods
xor
test
in
xor
lock
jne
cs
orb
sti
mov
dec
xor
add
in
push
outsb
push
sarb
and
mov
push
mov
add
xchg
cmp
lahf
xor
in
mov
xchg
pushf
jle
sub
fcmovnb
adc
loopne
add
and
xchg
dec
fimuls
or
add
scas
inc
lock
ss
ljmp
stos
shl
pop
cmpl
lahf
sarl
fs
sub
int
pop
mov
inc
cmp
mov
imul
xlat
and
pop
pop
fidivl
stos
addb
test
jne
call
test
push
mov
scas
add
leave
mov
stos
pusha
pusha
rolb
out
js
xor
pop
sub
and
add
cltd
stc
mov
xchg
xchg
lahf
xchg
and
loope
sub
out
cmp
clc
nop
cmpl
pusha
loopne
jg
sbb
ret
pop
inc
enter
cli
mov
loopne
andb
int
fsubs
inc
rorb
in
push
add
shrb
inc
movsb
addb
rol
adc
mov
mov
cmp
rolb
cmpsb
shlb
mov
scas
popf
inc
sbb
inc
inc
dec
sbb
fildl
mov
inc
loopne
loopne
or
push
popf
cld
sbb
jg
into
nop
xor
addb
adc
jb
push
sbbl
pusha
mov
push
pusha
mov
add
push
jo
ret
ja
pop
dec
stos
loopne
xchg
sbb
inc
loopne
xchg
or
cmpb
shl
ja
shlb
mov
mov
add
enter
mov
movsb
loopne
pop
cli
inc
push
or
rcrb
enter
jno
mov
dec
cmp
fistpl
andb
pusha
aas
test
mov
push
and
adc
arpl
addb
sub
lahf
xchg
xor
arpl
test
loopne
mov
adc
test
mov
add
add
dec
rorb
sbb
andb
sub
push
pusha
and
xchg
dec
cmp
rol
call
hlt
mov
adc
data16
and
mov
add
pusha
outsl
push
repnz
lahf
popf
mov
shl
mov
inc
mov
dec
jbe
sub
test
loopne
mov
mov
icebp
into
int
out
daa
call
mov
test
xchg
daa
daa
shll
mov
out
ljmp
add
push
addb
dec
jecxz
mov
call
jae
jmp
mov
insl
mov
aas
push
in
btr
loope
and
xor
xorb
aas
ss
fistps
andb
pusha
shl
mov
pusha
mov
xchg
int3
sbb
jae
int3
out
mov
ret
pop
xchg
ret
dec
push
repz
mov
add
cmp
ss
test
pusha
cli
mov
and
mov
addb
dec
jae
addb
lea
or
repnz
add
xchg
xor
and
and
dec
fidivl
lea
inc
jno
or
inc
mov
test
add
std
cli
cmpsl
cmp
mov
and
add
add
loopne
divb
and
shlb
mov
dec
inc
fcoml
xlat
ficoml
scas
add
in
mov
mov
mov
fsubs
and
xchg
fmuls
les
clc
lcall
mov
loopne
lea
mov
sti
test
ljmp
imul
jnp
add
sarb
mov
and
aaa
xchg
xchg
scas
add
arpl
movsb
pusha
mov
push
xor
shl
inc
jecxz
addr16
addb
js
jge
out
pop
notl
fidivl
insb
sbb
xor
shr
sub
mov
pushf
mov
pop
push
sub
pusha
test
jp
lds
push
cmpsl
imul
push
mov
mov
cld
ja
cmp
and
push
insl
stos
ss
sub
sbb
loopne
mov
adc
and
and
and
rolb
shlb
mov
sbb
dec
mov
js
stos
mov
mov
sbb
divb
pop
leave
inc
jl
ja
jo
pop
mov
inc
mov
or
test
inc
out
aam
cmpsb
andb
mov
pusha
loopne
shll
pop
sub
loopne
outsb
jb
sbb
mov
and
fcomps
jb
sbb
inc
out
gs
xor
jmp
rol
push
pop
cld
mov
iret
enter
cli
dec
cmp
inc
loopne
shl
loopne
or
mov
sbb
in
mov
and
mov
cli
dec
cmc
push
add
mov
adc
and
insb
movsl
jb
test
sub
mov
loopne
cmp
iret
mov
pushf
cmp
addl
mov
or
push
shll
jbe
mov
sbbb
cmc
dec
cs
shlb
add
pop
out
mov
adc
jle
jmp
cwtl
pop
push
dec
adc
loope
js
dec
mov
ret
push
daa
xor
lds
jl
pop
xchg
rcrb
mov
inc
pop
and
inc
push
mov
test
add
rcr
fdivrl
pop
dec
ss
sub
les
andb
loopne
imul
repz
loopne
jns
std
popa
shrl
pusha
subb
iret
loopne
and
inc
shrb
inc
div
push
lahf
lret
std
mov
cmpl
pop
and
pusha
cmpb
pusha
popa
add
loopne
add
ja
lahf
and
loopne
sahf
std
mov
dec
adc
add
andb
or
mov
rcr
pop
adc
mov
and
jbe
jg
mov
fsubl
mov
cltd
shll
rolb
ja
adc
lods
xorl
cwtl
cmp
and
es
aaa
jg
sarl
xlat
jo
pop
mov
jb
scas
add
aam
mov
or
dec
mov
mov
sti
jl
testl
jnp
dec
dec
add
pop
dec
sbb
bnd
aaa
stos
and
and
in
jle
mov
sub
insl
jge
or
cmpb
and
dec
sbb
jne
and
lock
icebp
mov
mov
loopne
add
loopne
loopne
mov
daa
call
sub
popa
sbb
imul
pusha
shrb
in
andb
icebp
mov
lcall
int
sbb
shlb
dec
push
inc
mov
and
push
pusha
add
addb
and
nop
decb
xchg
mov
jno
stos
push
pop
lea
dec
add
dec
repnz
and
ja
clc
sub
push
and
add
pusha
test
or
add
pop
shlb
cltd
jmp
xor
outsl
and
mov
xchg
sbb
jmp
popf
mov
mov
push
push
cwtl
adc
push
inc
adcb
addb
mov
pop
cmc
jbe
mov
push
sbb
add
test
loopne
sahf
roll
mov
cmpsb
pusha
shl
lahf
mov
xchg
mov
push
dec
clc
lahf
stos
add
popf
push
fmul
clc
mov
xchg
adc
in
sarb
and
mov
enter
rolb
push
fdivrs
pushf
mov
pop
popa
mov
xchg
repz
push
lcall
adc
mov
mov
mov
xor
jb
arpl
lds
pusha
pusha
in
or
mov
orl
inc
rorb
inc
add
and
inc
and
mov
out
sbb
dec
js
xchg
jmp
mov
inc
andb
lret
mov
push
daa
dec
xor
loopne
cltd
lcall
pop
outsl
sbb
test
inc
mov
jle
add
sbb
jmp
mov
scas
lods
push
pop
aas
inc
adc
lahf
cmp
dec
dec
mov
cwtl
mov
dec
mov
loopne
imul
andb
xor
push
fnstcw
into
aad
rcrb
mov
jmp
stos
and
mov
jbe
push
inc
mov
sub
loopne
pop
mov
pop
mov
xor
sbbl
mov
shrb
push
loopne
sahf
sub
inc
mov
js
lcall
and
jnp
daa
xor
cmp
daa
scas
mov
inc
or
dec
ret
mov
inc
repnz
repnz
stos
loopne
ret
fisttpll
shl
xorl
sub
sbb
jo
xchg
loopne
sub
shlb
and
xor
shlb
inc
cwtl
xor
shl
into
ljmp
pop
push
add
dec
mov
mov
cmp
je
jo
mov
push
mov
cmc
test
in
filds
rolb
pusha
pusha
cmp
adc
mov
pop
ja
add
into
ret
add
xor
loop
push
sub
mov
push
adc
add
imul
add
xchg
jle
or
outsl
jg
and
dec
addl
inc
and
in
mov
jmp
inc
dec
add
mov
rcr
and
rorb
push
fwait
and
inc
outsb
lods
or
loopne
inc
shlb
mov
pusha
loopne
arpl
fsubl
mov
or
mov
imul
popa
call
push
sbb
shl
add
pusha
inc
jg
xor
dec
xchg
push
in
push
nop
ljmp
inc
inc
ret
push
pop
or
repnz
push
pusha
and
aam
and
sbb
js
xor
mov
push
pusha
loopne
pop
lcall
fisttpl
mov
pop
sub
sub
lcall
xchg
xchg
push
push
push
imul
xchg
add
add
mov
addl
mov
pop
adc
mov
mul
sub
inc
outsl
or
cli
cmp
push
out
fdiv
push
dec
cmc
int3
pop
jge
push
xchg
test
xor
mov
adc
jnp
jl
movsl
push
add
lods
rclb
inc
adc
jae
mov
fs
mov
or
shr
jae
jecxz
mov
inc
pop
ja
push
jmp
mov
add
mov
push
or
add
xor
inc
add
mov
shlb
xchg
loop
mov
xorb
pusha
loopne
cmc
jns
dec
cmp
adc
test
sbbb
inc
loopne
add
inc
pusha
out
mov
mov
mov
jnp
xchg
adc
inc
xor
pop
loope
loopne
mov
inc
cmc
add
mov
insb
jle
sahf
and
rclb
fsubrl
pusha
js
pusha
fsubl
push
push
shll
and
mov
dec
gs
nop
push
into
test
add
mov
and
scas
mov
shlb
test
push
scas
loop
addb
xor
mov
sub
add
push
push
inc
push
adc
pusha
rcrb
int3
xor
or
std
jb
mov
gs
sbb
add
xchg
popf
or
jmp
jp
jl
lret
jns
pop
push
int
push
cmp
mov
inc
mov
mov
sahf
xchg
and
inc
and
inc
sbb
inc
pusha
xchg
pusha
and
and
dec
popf
popa
jns
adc
test
mov
in
add
and
subl
shrb
andb
cmp
test
subb
xor
mov
jmp
cltd
adc
lret
pop
cmp
es
addb
push
fld
mov
jp
pop
push
jmp
xchg
mov
test
repz
scas
stos
loopne
aad
and
retw
pusha
mov
out
test
loopne
es
shl
inc
pusha
roll
rcrb
pop
adc
testb
ja
mov
rolb
stc
scas
shlb
jns
push
inc
mov
or
xchg
and
and
add
js
loopne
shrb
ljmp
repnz
or
add
insb
sub
loopne
push
jns
add
shrb
add
inc
pusha
adcl
lea
cmpsb
add
pop
mov
pop
lahf
jp
outsb
sub
inc
repnz
into
inc
jbe
fwait
xor
iret
xchg
andb
and
call
or
shrb
jle
jg
inc
mov
nop
jns
rolb
or
addb
insb
loop
add
popf
icebp
test
loopne
inc
loopne
pop
iret
leave
sub
sbb
pop
aam
and
arpl
or
iret
pop
ljmp
outsl
and
inc
pusha
jge
out
push
test
and
mov
mov
mov
dec
je
aas
xchg
push
ja
dec
shr
mov
lds
gs
or
rolb
daa
fcom
jae
data16
scas
inc
std
addb
dec
jg
icebp
icebp
inc
cmp
adc
out
mov
mov
and
jno
aas
out
mov
sub
inc
arpl
mov
ljmp
sbb
xchg
out
jae
mov
lret
addr16
pop
xchg
int3
pop
xor
sti
pop
cmpsb
and
sub
and
imul
or
add
loopne
cmp
jp
aam
repnz
aaa
xchg
out
jae
inc
xor
xor
inc
add
shr
ss
inc
bound
pushf
adc
and
andb
pusha
pusha
outsl
xor
rcr
mov
pop
popf
out
das
imul
lret
dec
outsl
outsb
fnstsw
iret
sub
addb
jecxz
and
inc
orb
rcrb
or
xor
xor
ret
lock
jmp
dec
fbstp
sbb
push
pop
mov
shl
add
mov
bound
push
jns
sub
pusha
out
sub
add
add
rolb
ljmp
mov
and
cld
xchg
iret
lds
jb
test
outsb
cmp
jmp
inc
and
repnz
mov
andb
dec
xchg
nop
cmp
push
jnp
test
pusha
bnd
mov
mov
jbe
in
loopne
mov
enter
inc
or
nop
inc
in
adc
aaa
lock
stos
adc
iret
bound
mov
mov
popa
ret
in
jne
shrl
rclb
mov
aas
fdivr
inc
inc
cmp
loopne
outsb
stc
mov
popf
mov
lret
add
loopne
jno
das
adc
push
jecxz
mov
test
adc
inc
jnp
or
and
jg
lods
mov
add
fiadds
add
nop
inc
xlat
or
and
mov
jle
xor
jecxz
mov
jne
sub
add
pop
andl
inc
mov
insb
sub
pusha
fs
addr16
je
jae
daa
mov
and
push
lods
in
pop
xor
andb
mov
bound
dec
mov
ljmp
and
out
or
and
scas
addb
add
add
aam
jge
or
mov
sti
mov
lds
push
and
mov
dec
sub
inc
dec
add
mov
insl
xor
add
sti
push
add
nop
pushf
cli
ljmp
jl
inc
ret
jns
jb
push
pop
lahf
in
aam
inc
add
push
shll
mov
inc
jl
pop
inc
jp
lods
jns
dec
push
mov
icebp
in
xchg
xchg
mov
and
addb
and
cltd
push
in
int
pusha
loopne
les
inc
sbb
sarl
aas
js
arpl
out
add
lods
pusha
pusha
adc
orb
pop
jmp
xchg
scas
add
cmc
cmpsb
andb
mov
sub
andb
add
shlb
sti
iret
jns
loopne
movsl
mov
pop
mov
mov
inc
outsb
mov
fcoml
lods
dec
xor
mov
mov
jmp
andb
inc
xchg
and
lcall
inc
mov
mov
rorl
cmpsb
and
push
mov
cmp
cwtl
aas
out
mov
jo
stc
mov
jg
std
or
xor
inc
or
pop
cmpsb
shlb
and
ds
cmp
loopne
ret
rcr
xlat
mov
test
mov
les
push
mov
add
pop
lods
add
adc
mov
xor
mov
pusha
into
ret
adc
rorl
inc
clc
loop
jns
dec
fisubrl
xlat
out
cwtl
xor
xor
mov
or
pusha
rcr
lahf
dec
xor
cli
pushf
add
and
cmc
push
js
pusha
loopne
jecxz
xor
xchg
enter
mov
push
enter
loopne
mov
stos
and
add
mov
adc
pop
stos
popf
push
lcall
inc
mov
sahf
push
add
sbb
stos
arpl
inc
neg
cmp
jbe
mov
rcrb
add
outsl
in
add
mov
scas
and
xchg
repz
js
les
xchg
clc
push
js
dec
mov
sub
xchg
rclb
and
add
xor
leave
xchg
in
ret
dec
mov
inc
mov
cmpb
sbb
rcrb
mov
dec
push
inc
xor
and
and
stos
inc
adc
loopne
ljmp
loopne
push
lcall
jno
sub
shlb
mov
add
fiaddl
repz
addb
test
and
repz
mov
or
xchg
inc
xchg
lock
add
mov
jb
loopne
add
pop
in
inc
aam
pop
andb
in
jg
call
aaa
fidivrl
jbe
and
and
imul
int3
testb
mov
and
mov
push
push
loopne
mov
xchg
rcrl
mov
sarl
push
aad
dec
pop
pushf
and
rolb
add
push
aaa
mov
repz
and
push
cmpsb
addb
out
pop
aaa
lods
add
cli
data16
xor
xor
int
movsl
hlt
push
loopne
movsb
mov
add
sbb
inc
xchg
rcrl
and
imul
and
repnz
lret
inc
adc
pusha
hlt
mov
and
insl
cmp
stc
mov
push
jmp
mov
xchg
xor
and
xorb
popa
call
add
push
and
lea
mov
pop
dec
lahf
mov
and
into
daa
sbb
dec
out
mov
add
test
in
lock
lahf
or
pop
jl
scas
rolb
nop
frstor
jge
ret
mov
xor
add
out
inc
pusha
test
sbb
out
pop
in
mov
lret
sbb
mov
sbb
push
in
adc
sbb
add
dec
dec
push
push
mov
mov
push
mov
adc
addb
aas
cli
or
inc
or
and
mov
mov
inc
gs
mov
dec
and
push
push
pusha
inc
mov
add
xchg
mov
add
add
pusha
and
shlb
cmp
imul
pop
fidivl
or
ret
add
xchg
xchg
fsubl
loopne
fsubr
inc
addr16
xor
inc
xlat
sub
test
rcrb
and
pop
cli
mov
stc
pop
cld
jcxz
mov
dec
in
mov
xchg
jnp
add
dec
mov
test
jg
in
mov
inc
sbb
add
inc
cmp
adc
mov
addb
mov
add
push
test
add
inc
pop
lahf
in
cwtl
test
shl
mov
xor
mov
inc
and
inc
cmc
and
nop
in
xchg
leave
cld
inc
mov
and
out
add
icebp
add
sub
mov
push
popf
lea
std
outsb
mull
and
addb
or
jecxz
jne
nop
fbstp
in
xor
fs
std
pusha
shll
add
ss
xchg
and
adc
andb
andb
jbe
mov
and
pop
fistpll
das
int
stos
stos
inc
loopne
dec
arpl
push
bound
addb
aam
shlb
mov
dec
mov
inc
sub
subb
loopne
dec
xor
jmp
mov
aam
sbb
mov
pusha
pusha
cmp
lcall
mov
jno
ljmp
pop
inc
jno
loopne,pn
idivl
loopne
xor
push
mov
push
out
shrb
fcmovbe
outsl
shll
inc
push
sub
inc
fmuls
fs
cmpsb
mov
into
add
in
add
shlb
xor
jl
pop
mov
or
mov
xchg
aam
fwait
and
rolb
pusha
and
bound
cltd
sbb
sub
pusha
push
pop
mov
pusha
mov
ja
and
inc
fsts
cmpsb
shl
inc
xor
lret
outsb
pusha
jns
clc
xor
sbb
mov
and
mulb
or
mov
cmpsl
sbb
sti
int3
mov
pop
movsl
clc
ret
ljmp
mov
sarl
pop
lcall
jae
insl
cmp
outsb
pop
mov
pusha
adc
sbbl
cmp
stos
mov
or
mov
lods
mov
je
popa
sbb
dec
adc
sbb
add
scas
mov
xor
xor
xor
sbb
mov
dec
test
and
jno
inc
xor
rcrl
adc
pop
mov
addb
les
push
and
and
pop
inc
mov
adc
or
add
cmpsl
in
or
jle
jmp
shlb
nop
aas
push
mov
inc
scas
loopne
leave
jne
push
xchg
xchg
cmp
cli
push
test
mov
fldenv
adc
add
pop
push
and
aam
dec
sbb
xchg
jb
jae
jp
dec
int
jno
sub
cmpb
rorl
loopne
gs
jmp
loopne
out
jecxz
out
lcall
enter
loopne
mov
and
loopne
add
add
mov
add
pop
std
or
shr
cmp
inc
adc
mov
aaa
repz
dec
or
loopne
addb
sub
test
push
loopne
iret
inc
jge
and
cmpsb
shlb
inc
push
loop
dec
cmc
push
int
ljmp
cmpsb
pusha
loopne
mov
loopne
int3
bound
mov
andb
loopne
lods
inc
pusha
adc
xor
add
push
imul
rclb
xchg
inc
rorl
addb
adc
and
gs
push
andb
mov
shlb
or
inc
mov
push
mov
repnz
add
and
xchg
mov
rclb
pop
cltd
and
loopne
cmp
enter
inc
cmp
rorb
pusha
mov
lahf
jg
loopne
clc
movl
stc
xor
pop
test
and
lods
dec
xlat
cmp
bound
mov
jge
mov
loopne
stc
mov
mov
add
movsb
pusha
mov
inc
popf
dec
aaa
into
bswap
mov
ljmp
subb
shlb
mov
out
push
push
and
mov
mov
mov
dec
decb
mov
add
lret
mov
pop
jo
ljmp
add
dec
icebp
rcr
in
pushf
dec
xor
sbb
xchg
stos
andb
inc
jnp
gs
aas
push
loopne
pop
xchg
xor
sub
mov
jb
jl
scas
and
call
and
cmp
cmp
jecxz
iret
call
xchg
or
shlb
or
nop
xchg
pop
orl
enter
mov
mov
mov
xor
add
ror
fcos
add
cmp
lret
loopne
inc
add
iret
add
mov
xchg
xor
in
push
xor
or
xor
mov
xchg
pop
jae
pop
cmp
xchg
jmp
mov
mov
rorl
inc
or
pop
cs
outsb
cwtl
cmp
pushf
mov
sub
fwait
or
rorb
or
pusha
mov
cmp
add
jmp
inc
ds
adc
or
add
and
and
mov
sub
push
adc
andb
andb
insb
and
pusha
out
xchg
scas
inc
mov
xchg
dec
pop
inc
jmp
lods
loopne
dec
cwtl
dec
mov
sbb
add
sbb
sbb
and
mov
lahf
fimull
addb
bound
sar
inc
xchg
mov
imul
loope
push
out
repnz
stc
push
into
out
pop
inc
xchg
mov
loopne
mov
dec
pop
pop
jno
and
inc
pusha
andb
ret
dec
sbb
pushf
jp
dec
scas
cmp
sti
sub
cmp
movsb
mov
mov
dec
or
shl
jle
xchg
adc
aas
ret
fst
mov
push
mov
mov
sub
cmp
and
popf
jge
test
loopne
or
orb
loope
addr16
int3
cmp
dec
ret
xor
xchg
aas
jns
jns
mov
rol
fsubr
sbbl
mul
out
testl
mov
add
or
shrb
sub
shlb
mov
add
cmp
and
jnp
mov
sarb
mov
lods
mov
cmc
dec
xlat
dec
xor
int
hlt
sti
inc
pop
fisubrs
incl
xchg
pop
adc
mov
loopne
mov
andb
rol
stos
push
jl
in
pop
mov
mov
mov
sbb
push
repnz
mov
add
clc
push
or
mov
inc
sbb
mov
addb
pushf
rcll
fdivr
jae
jle
lods
mov
rcrb
pusha
pop
fsubl
mov
cmc
fidivl
sub
loopne
xor
lods
xlat
xacquire
popf
xchg
pushf
xor
push
push
pop
pop
aas
das
push
add
xchg
dec
sub
mov
mov
das
sbb
addb
sbb
ja
mov
loopne
adc
ret
and
and
pop
push
mov
pextrw
rdtsc
inc
and
pop
xor
push
inc
inc
adc
lods
xchg
mov
push
mov
rolb
lret
sub
pusha
add
inc
sarb
in
or
or
jg
les
icebp
insb
shlb
shlb
inc
pop
push
loopne
adc
das
pop
imul
imul
push
cltd
mov
jmp
pop
mov
inc
sbb
inc
mov
xchg
inc
leave
jnp
mov
push
sub
xor
dec
dec
imul
les
das
adc
std
xchg
aam
mov
pop
sub
loop
jno
loopne
out
and
add
xchg
inc
inc
jbe
mov
loopne
testl
push
push
mov
rcrb
mov
sbb
jno
dec
xchg
ss
xor
shlb
pusha
or
popf
mov
add
shl
adc
jno
xor
fistl
rcrl
pop
shr
sti
imul
or
or
xchg
shl
dec
out
sub
hlt
pop
pop
cmp
sub
mov
cwtl
leave
aad
xlat
idivl
loopne
or
loopne
cmp
pop
leave
sbb
xchg
adc
mov
lahf
cmp
pusha
add
xchg
adc
testl
inc
pop
outsl
xchg
jae
cmp
xorl
xchg
jle
xor
shlb
rorb
add
xor
push
bound
inc
jne
push
mov
aaa
or
lods
sti
inc
xor
cmp
pop
push
mov
rorb
inc
pushf
add
pusha
mov
rclb
leave
cmc
test
mov
pusha
inc
loopne
insb
mov
pop
xchg
jae
orl
lahf
jno
mov
add
mov
mov
adc
hlt
out
ljmp
dec
iret
inc
mov
andb
mov
push
adc
mov
js
xchg
loope
rcrl
pusha
rolb
cmp
mov
stos
lods
lock
lret
jne
jbe
jns
insl
xor
cltd
enter
inc
pusha
mov
rolb
and
daa
fimull
out
addr16
sbb
loopne
or
inc
push
pop
out
fstps
fs
jo
and
add
scas
inc
cli
cmp
clc
lret
pop
sub
mov
loopne
sarl
in
addb
and
push
les
inc
add
or
adc
mov
or
lret
loope
xchg
adc
stc
out
push
scas
mov
cli
push
sbb
xor
nop
dec
mov
cmp
sbb
loopne
xchg
mov
push
loopne
dec
add
in
and
pop
pushf
xor
xchg
sbb
inc
add
mov
mov
pushf
xchg
dec
ret
and
xlat
movsb
pusha
andb
loopne
mov
fistps
add
andb
andb
movsl
inc
sbb
fbld
rol
and
xor
mov
adc
inc
jmp
pusha
pusha
iret
mov
loopne
mov
cmp
shlb
pusha
ds
repnz
mov
and
lret
rcll
push
xchg
or
sbb
iret
js
data16
and
ret
popf
cs
in
icebp
lea
fwait
inc
mov
xchg
lods
sbb
adc
loopne
jnp
imul
stc
andb
pop
mov
and
ja
jecxz
dec
stc
std
inc
aam
popf
pushf
and
inc
rolb
sbb
add
je
int3
sbb
mov
dec
nop
mov
cmpsb
mov
pusha
xor
xor
jo
jge
shll
addb
mov
sbb
sub
adc
sub
cltd
inc
pop
inc
xchg
lret
out
cld
cmc
add
mov
add
lock
mov
pusha
add
jno
jnp
push
rolb
add
addb
inc
and
mov
xchg
add
js
sbb
lods
movsb
and
clc
je
sti
adc
push
stos
push
mov
rcrb
roll
dec
adc
inc
subl
and
loopne
mov
test
paddusw
lods
andb
les
mov
mov
inc
inc
mov
das
mov
andb
mov
add
aad
loopne
pop
popa
aam
sbb
mov
sub
cmp
pop
dec
dec
cmc
lods
mov
and
lahf
mov
popa
push
inc
pusha
int3
ss
outsb
ret
adc
lods
mov
sbb
jo
scas
pop
scas
pop
mov
pusha
rcr
out
mov
addr16
cmp
cmp
mov
add
or
and
xchg
dec
dec
jp
adc
xlat
pop
adc
adc
jbe
pusha
loopne
imul
loopne
add
lcall
sar
and
add
inc
mov
xchg
inc
leave
xchg
mov
daa
testl
add
rol
vcvtps2pd
pop
push
xor
dec
jns
ret
mov
mov
lret
mov
and
ds
mov
loopne
mov
pusha
or
loopne
lahf
pop
mov
lahf
ja
xchg
jnp
loopne
lcall
sbbl
adc
pop
xchg
inc
xchg
mov
add
scas
inc
mov
clc
cmp
aad
std
test
lret
lods
adc
sub
and
cltd
ljmp
jno
lods
int
mov
test
shlb
jne
rclb
lods
push
mov
pop
xor
in
sub
orl
mov
xchg
mov
movsl
sub
add
scas
inc
inc
int
mov
sbb
loopne
jns
mov
and
pop
inc
pusha
daa
cmp
mov
fildll
xor
clc
mov
cmp
add
pusha
cmpsb
mov
test
lret
fistpll
sarl
xorl
hlt
cmp
and
add
out
cmp
pushf
and
mov
dec
lods
addb
push
add
mov
leave
push
add
loopne
add
int3
or
pusha
push
add
inc
stos
loopne
in
inc
pop
out
out
loopne
xchg
std
jae
outsb
mov
divl
dec
int
out
mov
shlb
mov
cltd
fldl
stos
add
mov
mov
xor
mov
lret
lret
and
stc
or
pusha
scas
inc
add
inc
ror
nop
add
call
dec
ret
push
jmp
movsl
stc
lcall
mov
dec
sub
sbb
and
insb
mov
xor
xchg
add
daa
popf
fmul
stos
rolb
rolb
pop
jns
pusha
sbb
pusha
add
daa
test
lods
push
ja
mov
push
enter
jns
dec
xchg
and
push
in
add
and
imul
fnsave
rolb
mov
add
and
xchg
out
xchg
xchg
adc
cmp
mov
adc
mov
popf
push
fwait
stos
loope
and
xor
mov
loopne
dec
inc
mull
fldenv
and
ss
fiadds
add
and
insl
and
or
addl
sti
push
mov
loop
loop
pop
jb
shlb
mov
cli
xchg
call
addb
jle
scas
loopne
pop
mov
sbb
and
and
loopne,pn
mov
insl
shr
jae
clc
enter
jno
loopne
shll
rcrb
mov
mov
pusha
mov
or
popf
loop
loop
add
ljmp
cld
outsb
inc
mov
dec
sbb
fwait
jmp
rclb
out
fnstcw
mov
rcrb
xchg
stos
lock
mov
cmp
roll
das
addr16
mov
dec
push
insl
jo
or
loopne
xor
mov
cld
fldt
imul
push
bound
fwait
push
inc
addb
cmp
pop
rcr
dec
and
cmpb
loop
jecxz
inc
ljmp
inc
out
int
stos
inc
inc
jp
mov
and
cs
addr16
adc
pop
add
addb
loopne
int3
fidivs
imul
rolb
loopne
mov
lcall
ja
js
testb
push
push
jne
pop
mov
roll
cmp
inc
dec
xor
es
orb
jge
and
shrb
sahf
cmp
push
nop
sbb
addb
gs
rcl
fistpll
mov
loopne
pushf
stos
mov
cmp
and
clc
mov
push
and
add
inc
shrb
adc
subl
or
xchg
stc
push
aas
mov
divl
fstsw
pop
fnsave
and
int
mov
inc
sti
mov
dec
rcrb
out
jnp
inc
jae
daa
insl
add
mov
ljmp
filds
jno
test
lods
addb
mov
jge
add
scas
mov
loopne
mov
cmpb
shlb
mov
and
in
out
mov
jae
sbb
int
pop
fdivrs
or
adc
aam
or
shlb
aam
hlt
lcall
add
jnp
daa
inc
cwtl
sbb
iret
sub
lahf
push
and
pusha
cwtl
pusha
es
add
cwtl
adc
mov
inc
inc
adc
or
and
add
inc
call
shrl
rclb
mov
xchg
into
scas
cli
sbb
or
fnstenv
adc
jl
jge
xor
mov
or
jnp
or
and
push
mov
fidivrl
pop
inc
lahf
xor
sahf
mov
mov
inc
pusha
out
std
scas
pusha
and
pop
pop
data16
sub
xor
cmp
mov
shrb
sbb
mov
mov
mov
and
adc
adc
lods
loopne
inc
lret
ret
sbb
or
mov
addb
mov
call
pop
jo
pushf
addb
pop
sub
shlb
pusha
gs
xchg
sub
xchg
fcompl
cmpsb
and
mov
pusha
and
sarb
shll
std
sbb
xchg
std
mov
or
add
lock
pop
imul
inc
pusha
mov
mov
lock
loopne
test
and
mov
testb
push
cmpsl
mov
cmc
sub
fsubs
and
loopne
push
rolb
add
mov
addr16
sti
imul
int3
cmp
dec
mov
shlb
in
add
rolb
adc
shrl
pusha
pusha
inc
fisubrl
sub
loopne
cli
and
push
loopne
cmp
xchg
sbb
xlat
inc
and
add
sub
pusha
addr16
stos
mov
rcrl
inc
push
jp
mov
cmp
dec
jo
mov
pusha
mov
inc
xor
mov
inc
rcl
pop
inc
pusha
mov
jl
insb
and
stos
pusha
inc
pop
ds
rcrb
inc
add
inc
sahf
sub
mov
shlb
cmc
jg
jns
pusha
rclb
fcompl
mov
add
hlt
push
cmc
gs
xor
push
sub
pusha
jmp
aas
or
loopne
inc
fbstp
adc
push
lea
loopne
sti
add
sub
and
mov
sahf
inc
sub
inc
imul
inc
leave
xor
js
lahf
popa
mov
xchg
mov
add
enter
cmpsl
imul
andb
ret
push
rolb
xchg
imul
push
addb
aaa
push
arpl
mov
lock
call
jmp
sbb
mov
stc
cli
xchg
stos
mov
pop
nop
cmp
pop
cld
addb
pop
cs
rolb
xlat
ja
sbb
dec
jp
hlt
arpl
mov
iret
nop
ljmp
sbb
insb
pop
cld
repz
cld
jecxz
das
mov
shl
pushf
pop
inc
mov
pusha
punpckhbw
repnz
pushf
icebp
lret
dec
test
loopne
dec
mov
adc
idivl
je
push
pop
pop
and
and
inc
leave
inc
xchg
pop
jne
sub
pusha
dec
mov
xchg
lret
sub
inc
inc
dec
into
and
orb
test
add
leave
xor
bound
and
into
into
roll
inc
add
cltd
jnp
jb
jo
and
sbb
stc
stos
inc
loopne
andb
shr
xchg
and
nop
jns
xchg
ljmp
neg
addb
mov
int
daa
stos
pusha
loopne
into
stc
shl
fwait
rcl
scas
add
dec
push
sahf
mov
xor
dec
sub
inc
mov
fwait
sub
push
sub
mov
push
mov
scas
mov
icebp
sub
pop
xchg
jl
mov
loopne
inc
mov
dec
pop
nop
jp
push
adc
jmp
insb
insl
in
lods
addb
jno
and
dec
clc
cltd
fbld
insl
repnz
movsb
addb
inc
and
outsl
js
and
inc
jle
cmpsb
and
push
inc
add
sub
je
adc
aas
imul
out
mov
stos
roll
loopne
hlt
out
jns
ljmp
stos
pop
or
loopne
or
pop
jp
cmc
addb
data16
inc
int
rcl
shll
add
push
xor
in
add
xchg
xor
pusha
and
xchg
out
mov
xchg
test
mov
add
push
in
xor
jecxz
lret
lods
and
pop
ss
jg
dec
mov
int
rcll
mov
fiadds
jne
imul
and
in
push
add
add
insb
loop
test
fldenv
pusha
adc
pop
imulb
or
xor
push
cwtl
test
scas
pop
or
ljmp
lea
push
mov
lods
pusha
mov
jo
and
inc
pop
fstl
loope
mov
data16
inc
add
repz
loopne
push
loopne
sbb
pusha
add
dec
jns
scas
add
