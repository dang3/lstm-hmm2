je
pop
dec
out
std
mov
adc
add
fidivrl
pop
inc
add
in
lcall
decb
add
push
add
jge
insl
push
pop
mov
sub
ret
pop
adc
add
lahf
xchg
stos
nop
movsb
pop
or
sub
scas
sbb
cltd
or
movsb
pop
js
pop
mov
sub
cmp
iret
push
pop
repz
pop
ljmp
add
xor
add
and
es
aaa
shl
pop
xor
add
adc
mov
movsb
pop
lret
ljmp
cmp
pop
lcall
gs
jnp
mov
inc
add
jnp
jae
add
popf
and
add
add
pop
shlb
out
outsb
xchg
jae
add
pushf
add
sbb
or
lcall
cli
push
out
imul
js
add
and
add
xlat
mov
pop
lret
repz
xchg
stos
mov
mov
jo
add
lock
add
es
mov
sbb
add
mov
add
add
test
aas
jns
jne
mov
mov
add
add
mov
or
push
add
xor
add
and
add
loope
cmp
bound
add
pop
in
jge
inc
pop
adc
add
sbbl
mov
stos
adc
icebp
xchg
jns
xor
in
shr
mov
mov
inc
pop
xchg
je
popa
add
pop
outsl
xor
add
jns
fld
pop
jle
cmp
add
fnstenv
add
push
add
push
add
jno
add
std
push
cmp
notl
pop
jp
push
rcrb
adc
add
add
xchg
cmp
add
rcrl
les
cli
mov
ret
pop
xchg
ss
shlb
add
nop
stos
ljmp
sbb
gs
pop
ss
rcrl
add
dec
mov
add
cmp
cmc
mov
add
lcall
xchg
pop
inc
add
add
add
add
dec
icebp
and
jg
pop
sahf
shll
add
mov
pop
cmpsb
pop
sti
sarl
push
ss
and
add
adc
add
pop
cmc
xchg
scas
pop
int3
jbe
add
pop
pop
adc
pop
fwait
nop
dec
imul
fcmovbe
mov
add
add
cmc
leave
mov
pop
xor
add
add
popa
add
ret
pop
sub
je
pop
and
add
add
sub
lea
add
bound
add
pop
pop
clc
mov
test
int
add
mov
leave
je
pop
sbbl
add
outsb
test
add
jecxz
pop
lret
movsl
pop
sub
mov
xchg
cmp
and
add
sbbb
pop
scas
cwtl
rcrl
lahf
in
outsb
jbe
add
rcll
add
jecxz
cmp
add
xchg
lret
push
jbe
pop
in
testb
xchg
jmp
dec
pushf
xchg
jg
mov
jl
pop
cltd
mov
add
iret
jle
daa
pop
rol
pop
mov
fistps
push
out
cs
push
add
mov
outsl
aam
incb
gs
jae
add
xchg
add
adc
or
push
pop
mov
insl
pop
fcompp
mov
dec
inc
pop
sub
fs
mov
jecxz
dec
addr16
dec
jb
add
loop
jns
das
and
push
sahf
scas
mov
add
add
sbb
iret
daa
pop
test
loope
and
add
pop
push
shl
rorb
jle
mov
sbbl
sub
inc
pop
test
sbbl
pop
xor
add
shll
aad
add
add
push
scas
sub
sbb
add
leave
loope
insl
dec
xchg
mov
add
test
push
add
xchg
aaa
add
add
mov
pop
jne
xor
pop
mov
test
push
pop
jmp
pop
mov
dec
pop
pop
xchg
dec
test
pop
mov
xor
add
or
pop
scas
int3
jb
add
pusha
add
fdivp
shll
add
and
loope
mov
mov
adc
add
pop
call
add
lea
add
sbbb
xor
add
loope
cmc
or
add
mov
add
idivb
xor
add
jl
add
xchg
in
ljmp
pop
mov
add
dec
imul
fdivs
out
mov
jmp
and
icebp
ja
pushf
cltd
mov
pop
mov
xchg
jp
pop
add
add
nop
es
mov
pop
rcll
add
cli
mov
fdivrs
js
pop
mov
add
pop
jmp
add
sbbl
adc
add
sub
inc
pop
popf
and
mov
mov
scas
nop
cmp
fmull
xchg
cmp
sti
lea
aam
add
cmpsl
pop
xchg
pop
gs
push
add
cmc
jecxz
jmp
rorl
adc
add
lahf
mov
inc
add
sub
cmc
arpl
add
sbbl
je
stos
jp
pop
fwait
enter
add
xor
add
int3
jmp
xchg
inc
add
std
imulb
mov
arpl
add
cmp
add
movsl
pop
lret
sbb
pop
arpl
add
add
sbb
inc
add
test
int3
jl
sbbl
add
add
add
or
add
in
idiv
std
hlt
sub
add
xchg
cmp
lea
mov
add
sbb
inc
pop
test
mov
loopne
sbbl
adc
add
add
xor
add
add
pop
lock
mov
mov
add
ds
lods
adc
add
or
repz
add
adc
add
out
xlat
inc
pop
pushf
sbbl
fsubs
mov
dec
mov
mov
pop
arpl
add
add
pand
jecxz
mov
inc
add
repnz
dec
mov
xor
sub
and
add
xchg
sub
pop
mov
inc
pop
stos
inc
pop
stos
add
add
jno
add
add
mov
inc
pop
jle
mov
cmp
add
xor
add
lods
or
inc
pop
dec
add
add
pop
jbe
fcmove
jmp
lock
add
mov
add
insl
scas
insl
and
add
pop
add
add
add
inc
pop
lods
add
add
xchg
xchg
push
add
sbbl
sbbl
add
mov
in
inc
pop
pop
das
inc
add
stos
cltd
dec
test
or
add
inc
add
mov
dec
out
or
add
mov
out
xor
add
int3
inc
pop
pop
loopne
lcall
add
pop
aam
mov
pop
mov
jl
dec
insb
jp
add
and
add
add
rcll
add
inc
add
adc
add
iret
and
jno
add
add
stc
outsl
outsb
pop
stos
aas
cli
or
add
lods
adc
add
fcom
xchg
popa
add
dec
jae
add
aam
in
pop
fcoml
add
mov
or
cvtps2pd
add
jns
pop
fs
repz
jmp
pop
pop
cli
adc
add
fcmovnbe
add
add
out
xor
mov
sbb
pop
cmp
sbbb
jmp
mov
lods
mov
add
bound
add
repz
cmp
mov
repz
pop
lock
stos
jecxz
dec
out
mov
adc
add
xchg
or
pop
sbb
inc
pop
in
int
add
mov
pop
lods
cli
cwtl
in
or
add
add
fisttpll
and
add
dec
jnp
add
pop
pop
and
jle
cld
push
stc
daa
pop
popf
sub
and
add
add
or
dec
stos
arpl
add
mov
arpl
add
scas
cli
dec
iret
dec
fdivr
imul
cmp
pop
idivb
mov
push
std
jns
pop
mov
pop
aas
lods
mov
add
aad
mov
pop
fwait
jo
add
add
jo
add
sbb
add
add
mov
movsb
pop
cmpsb
pop
mov
test
call
add
je
and
xchg
aam
add
jns
jnp
incl
add
imul
jle
mov
insb
pusha
add
inc
add
mov
push
add
push
mov
add
loop
xor
arpl
add
add
xchg
jne
xor
dec
pop
dec
insl
push
pop
rcrl
push
add
mov
mov
cmp
jmp
mov
pushf
scas
jb
add
pop
repz
test
test
cmc
pop
sbbl
add
mov
mov
cmp
pop
sbb
pop
stos
enter
add
stc
jbe
mov
jmp
outsl
mov
add
mov
pop
out
aaa
adc
popf
repnz
shlb
push
mov
fstps
mov
add
mov
pop
arpl
add
dec
xchg
fisttps
inc
pop
incb
jp
movsl
pop
cmp
xchg
dec
fdivp
and
pop
stc
dec
into
fnsave
into
adc
fdivrp
pop
lret
out
cld
jo
add
pop
add
add
in
xchg
dec
sbb
xchg
jnp
pop
insl
pop
jbe
pop
pop
dec
gs
mov
mov
sub
xchg
cmp
add
cltd
insb
out
jp
mov
add
cmp
pop
push
push
add
stos
leave
push
pop
inc
add
mulb
xor
add
dec
outsb
pop
cwtl
sbb
sti
pop
pushf
test
mov
and
add
push
add
movsl
pop
mov
add
mov
lock
fidivrl
stos
jg
pop
rcrl
popf
mov
pushf
es
mov
jp
mov
outsl
xor
add
add
add
out
sbbl
add
add
add
pop
pusha
add
mov
mov
xchg
outsb
mov
adc
add
xor
add
add
pop
xchg
pop
mov
aad
xor
add
scas
cmp
mov
push
pop
mov
pop
insb
jle
pop
sbbb
pop
inc
add
lea
add
pop
pop
repnz
add
imul
pop
xchg
xchg
adc
pop
lcall
push
ds
mov
push
pop
inc
add
ljmp
inc
add
mov
enter
mov
inc
add
mov
cmp
cmpsb
pop
lahf
repnz
mov
enter
add
inc
pop
sbbl
add
sbbb
pop
inc
add
xchg
in
mov
rcrl
add
add
in
shl
pop
lret
lea
inc
add
xchg
les
pop
mov
push
fsubs
pop
xchg
lea
rcrb
or
add
addr16
ja
xor
add
push
xchg
rorb
pop
ss
fstpl
sbbl
cmp
mov
xchg
sbb
popa
add
xor
add
outsb
lock
add
mov
idivb
pop
daa
pop
jo
add
add
sub
add
add
mov
aaa
pop
pop
sub
add
inc
add
fisubrl
xlat
adc
cmpsb
pop
sbbb
mov
add
out
mov
add
ds
repnz
sub
mov
testb
add
jge
pop
cwtl
fmuls
or
fiadds
repz
add
pop
mov
add
add
add
pop
pop
gs
jb
gs
sbb
add
adc
add
or
xor
add
sbb
add
add
add
fsubs
add
xchg
sbb
pop
and
jle
mov
cmpsb
pop
hlt
push
add
mov
inc
add
ret
pop
mov
add
mov
xchg
fisttpll
in
les
sub
icebp
jmp
pop
stos
pop
stc
jmp
inc
pop
fyl2xp1
push
add
cli
or
adc
add
jnp
fldcw
ja
add
sbb
xor
add
push
cmp
mov
imul
add
xor
add
lods
rcrl
rcrb
aam
pop
sti
sbbl
pop
idivl
add
and
add
sar
dec
cltd
in
rolb
sbbl
pop
gs
imul
xchg
ljmp
out
aaa
movsl
pop
push
loope
inc
pop
es
ljmp
sub
fcoms
add
add
loopne
sub
add
pop
mov
or
add
inc
pop
rclb
add
pop
cmp
gs
sbbb
dec
stos
xchg
in
dec
mov
pop
pop
rcrb
add
adc
add
fadds
in
jae
xor
push
add
jae
add
ret
pop
lea
pop
insb
sub
outsb
and
cmp
iret
xchg
xlat
cs
scas
pop
inc
add
inc
add
pop
mov
pop
adc
add
add
lahf
inc
pop
mov
pop
sub
in
daa
pop
push
pop
jnp
jbe
add
xchg
mov
popf
stc
loopne
rcrl
outsl
mov
pushf
movaps
lds
mov
pop
lret
add
insl
adc
add
pop
ljmp
add
aaa
daa
pop
sub
add
mov
add
add
add
cmp
mov
lods
jge
add
mov
or
xlat
int
fcomp
sbb
pop
test
xchg
in
mov
pop
sbbl
pop
mov
pop
sub
and
add
pop
pushf
mov
add
fneni(8087
pop
fildll
addr16
or
mov
add
cwtl
sbb
inc
pop
jle
aad
lds
jmp
aam
scas
add
xchg
jb
add
and
mov
insl
mov
jns
mov
nop
and
add
xlat
movsb
pop
adc
popf
mov
cltd
hlt
sbb
daa
pop
sbbl
lcall
add
fidivrl
pop
movsb
pop
adc
add
leave
jo
add
inc
add
mov
addr16
xor
add
add
xchg
xor
add
or
dec
inc
pop
test
cmpsb
pop
jp
daa
pop
lcall
adc
pop
pop
sbb
pop
cmc
xor
add
cmpsb
pop
xchg
pop
leave
cmp
nop
add
add
movsl
pop
idiv
iret
or
pop
jbe
jl
pop
mov
add
std
mull
add
sbb
dec
je
lahf
xchg
test
dec
dec
mov
add
rcl
repz
sbbl
or
push
jnp
pop
imul
add
cmp
fincstp
jmp
sbb
add
push
enter
out
fwait
or
xchg
add
fwait
test
pop
sti
jge
inc
pop
inc
pop
ud1
add
dec
gs
mov
stos
clc
outsb
adc
add
pop
insl
sbbb
inc
pop
sub
and
pop
cltd
es
jae
add
dec
inc
add
repnz
push
mov
pop
call
mov
pop
and
add
jbe
pop
ljmp
mov
add
loop
cli
mov
das
and
add
stc
xor
add
gs
lahf
dec
mov
adc
add
xchg
add
xchg
jbe
pop
push
imul
gs
mov
bnd
add
add
dec
outsl
rcrb
add
popf
and
fnstcw
add
add
add
pop
jo
add
mov
add
leave
sbb
sti
mov
ljmp
icebp
mov
add
cmpsb
pop
jle
pop
jge
mov
or
pop
jp
sbbb
pop
icebp
mov
les
pop
mov
movsb
pop
nop
dec
xchg
les
sbb
add
outsl
jo
add
lret
arpl
add
hlt
out
out
aam
call
add
roll
enter
lret
sbb
decb
std
pop
push
add
stc
jb
add
cltd
cmc
xchg
push
pop
pusha
add
and
add
add
fcomps
pop
mov
or
xchg
xchg
push
add
popa
add
fwait
out
jnp
pop
dec
adc
xchg
mov
and
add
das
les
pop
out
out
in
or
add
add
mov
mov
fsubp
pop
sub
add
leave
cmpsl
pop
jne
inc
add
arpl
add
in
sub
push
pop
mov
mov
pop
sbb
ljmp
add
or
cmp
xchg
pop
pop
mov
lret
dec
enter
xlat
gs
pusha
add
fwait
sti
in
lods
fstpl
imul
fldenv
add
sbb
fs
xor
add
mov
ret
pop
sbb
call
add
add
pop
insb
in
mov
loop
out
inc
add
daa
pop
fcoms
dec
xchg
pop
adc
fstps
add
rcrb
add
push
bound
add
loopne
or
pop
mov
cmp
add
ds
jge
test
mov
test
pop
mov
test
push
daa
pop
popf
ds
adc
add
lcall
xchg
add
add
add
add
sbbl
inc
pop
imul
fcom
jmp
outsl
sbbl
dec
imul
ljmp
jo
add
cmp
pusha
add
stos
mov
mov
add
outsb
xlat
mov
sbb
lods
jno
add
dec
lock
jnp
dec
xchg
loop
jno
add
popf
jbe
pop
pop
ja
jno
add
add
add
push
add
mov
lret
fcmovnb
pop
in
pop
sub
adc
add
pop
sbbb
inc
pop
mov
add
add
jge
pop
imul
adc
pop
push
cli
mov
add
test
ss
jl
mov
jnp
jns
aaa
adc
add
pop
ret
add
mov
xor
add
add
insb
mov
cmp
pop
pop
xor
pop
jno
add
jne
cltd
mov
cmp
xchg
and
add
pop
pop
mov
xchg
and
pop
xchg
arpl
add
add
lods
push
xchg
les
pop
call
xor
add
jno
add
and
add
add
and
shll
ret
int
mov
aas
rorb
push
js
sbb
lret
push
push
pop
les
insl
test
xor
sbb
mov
add
pop
lret
imul
test
pop
mov
inc
add
mov
int
pop
mov
rcrl
xchg
stos
sbb
add
cli
xchg
cmp
fisttpll
jno
add
pop
mov
pop
dec
or
dec
push
mov
pop
outsb
pop
movsl
pop
or
sbbl
addr16
push
int3
mov
loop
popf
adc
add
ljmp
add
mov
sbb
fs
jmp
mov
jae
add
add
pusha
add
mov
pop
inc
pop
mov
xchg
jae
add
fwait
mov
push
add
call
sub
add
in
test
jb
add
mov
call
add
mov
add
pop
scas
in
sub
pop
mov
cmp
mov
xchg
js
pusha
add
mov
fistpl
das
ds
add
or
pop
xchg
jne
rcrl
stos
add
add
notb
add
test
dec
cmp
arpl
add
dec
mov
pop
sbb
pop
mov
mov
icebp
sahf
aad
scas
jl
mov
lods
daa
pop
cmp
add
in
rclb
stc
dec
jle
add
fdivrl
add
add
add
popa
add
mov
inc
add
sbbl
sbbl
pop
and
lods
jge
in
les
xlat
loope
ret
mov
xor
stos
aas
push
add
sbbl
add
movsl
pop
scas
lcall
ret
pop
or
pop
pop
jnp
mov
or
xchg
jp
add
cmpsb
pop
pop
dec
push
mov
add
push
add
add
enter
add
add
add
add
sbb
pop
xchg
fucomi
xchg
sbb
cmp
xlat
mov
pop
mov
lock
mov
lret
pop
scas
cltd
cmc
xor
pop
out
cmp
xor
add
jnp
add
sub
arpl
add
inc
add
inc
pop
inc
pop
add
add
add
pusha
add
mov
icebp
mov
add
sub
add
pop
push
cltd
mov
add
sbbl
repz
add
stos
in
fistpll
add
mulb
push
add
sbb
mov
add
push
in
jle
adc
add
jb
add
sbbb
inc
add
fstp
xchg
jno
add
iret
imul
lock
pop
mov
xchg
lds
xor
add
xchg
pop
push
mov
push
add
add
fnstcw
jo
add
shlb
fldcw
mov
pop
test
mov
arpl
add
and
add
dec
test
pop
les
add
daa
pop
das
ds
xchg
repz
jnp
outsl
xchg
daa
pop
stos
lahf
sub
xchg
push
add
fldl2t
or
add
add
pop
cmc
mov
pop
mov
lret
add
jno
add
imul
enter
sti
sbbl
cltd
lahf
push
adc
add
mov
ljmp
add
pop
int3
mov
sbbl
add
mov
push
sub
add
fdivrs
repz
pop
je
pop
inc
add
mov
adc
add
pop
mov
sti
pop
mov
pusha
add
and
add
jmp
sub
pop
les
and
inc
add
pop
push
outsb
fucomi
inc
add
ret
pop
lcall
add
stos
cmpsl
pop
out
push
add
in
cwtl
jnp
and
lods
jb
add
xchg
or
pop
dec
mov
aaa
add
add
cmp
call
pop
rcrb
add
add
xchg
or
ds
push
add
add
mov
ds
test
sbbl
ret
pop
lods
cmpsl
pop
mov
xchg
je
mov
lds
insb
mov
movsl
pop
aaa
ds
push
push
pop
jmp
add
test
in
or
add
pop
mov
jp
pop
rcrb
jns
lods
addr16
jg
pop
imul
push
mov
repnz
add
jmp
sbbb
add
jb
add
add
mov
loope
lret
icebp
shl
pop
leave
das
fmul
push
dec
cmc
pop
push
pushf
jle,pt
insb
pop
xchg
stos
sahf
add
pop
adc
add
insl
in
jo
add
aaa
dec
shlb
sbb
fwait
idivl
pop
jmp
sbb
push
lcall
scas
fiaddl
cmp
add
je
push
xor
add
add
add
add
icebp
sub
out
mov
add
sbbl
jmp
pop
testb
cmp
mov
jmp
pop
movsl
pop
push
pop
xchg
push
pop
cmp
add
call
and
push
xchg
sbbb
pop
sbb
add
add
inc
add
fs
hlt
push
mov
inc
add
push
ljmp
pop
test
and
xchg
hlt
adc
add
test
add
sbbl
sti
adc
add
add
pop
stc
mov
loope
push
pop
jg
ja
mov
pop
ljmp
or
xor
add
popf
lods
or
out
mov
pop
lds
add
cmpsl
pop
jnp
pushf
mov
pop
push
add
add
add
lock
pop
mov
add
rcrb
add
inc
pop
cmc
dec
and
sbbb
pop
cmpsb
pop
sbb
pop
jmp
add
test
mov
nop
pop
push
aaa
xchg
sti
mov
mov
pop
and
and
add
add
xchg
fiaddl
sbbl
sbbb
pop
sub
dec
or
mov
ret
add
pop
inc
pop
pop
jg
pop
add
das
jbe
imul
add
mov
out
push
popf
iret
ja
arpl
add
pop
xlat
pusha
add
jnp
adc
add
adc
add
pop
bnd
xchg
sbbb
pop
sub
ret
popa
add
fmull
pop
pop
out
and
add
fwait
sub
lds
add
sub
das
lahf
jmp
pop
loop
cs
fbld
dec
arpl
add
lods
push
enter
add
sbb
ret
pop
xor
add
pop
mov
pop
call
pop
test
jecxz
aaa
lds
fwait
ja
pop
xchg
lds
inc
add
out
add
add
pop
fsts
add
add
add
pop
push
inc
add
push
mov
pop
mov
add
pmaxsw
dec
and
add
cli
cmp
stos
xchg
pop
inc
pop
xor
add
fs
inc
add
jnp
out
inc
add
pusha
add
cwtl
mov
xlat
arpl
add
add
pop
stc
sub
sbb
mov
rcr
movsl
pop
add
add
pop
xchg
and
aam
int3
test
adc
add
xchg
mov
inc
add
sub
pop
or
adc
add
test
pop
add
add
mov
pop
sbb
add
mov
pop
push
mov
add
nop
lds
jb
add
stos
ret
pop
pushf
xor
add
ret
pop
je
inc
pop
pop
inc
pop
fwait
pop
sbbb
add
push
add
stos
in
cwtl
les
hlt
xchg
loopne
addr16
nop
jne
cmpsb
pop
out
stos
insb
cmp
sti
mov
lods
lret
and
add
mov
mov
pop
outsl
stos
push
add
xor
add
pop
mov
xor
add
pop
movsl
pop
mov
xchg
lods
add
add
movsb
pop
adc
add
xchg
fs
and
add
in
cmpsb
pop
mov
mov
or
pop
fldcw
xchg
jns
test
inc
pop
or
add
rcrl
dec
dec
lds
pop
rorl
xchg
js
pop
mov
icebp
inc
add
pop
adc
add
cmp
add
xchg
fnstcw
loope
fwait
lahf
xchg
mull
add
in
xor
add
pop
call
push
add
fstpt
xchg
and
add
pop
and
add
jmp
add
push
add
pop
dec
dec
idivb
xor
add
test
ret
pop
lds
add
ficoms
jb
add
cld
inc
pop
fs
and
add
lret
xchg
pop
sub
shrl
repz
push
add
mov
pop
jno
add
fwait
dec
hlt
push
movnti
call
pop
out
movsl
pop
cmp
add
ss
pop
lds
rcrl
mov
and
add
aas
pop
xchg
imul
les
sbb
pop
pop
jmp
pop
cmp
add
jae
add
mov
mov
xlat
push
adc
add
add
sbb
add
out
leave
clc
xchg
mov
lds
pop
and
lret
pop
outsb
cltd
dec
lods
adc
add
pop
add
add
pop
pop
inc
pop
xchg
inc
add
adc
xchg
insl
push
faddl
add
adc
add
pop
xlat
rcrb
test
xchg
mov
sbb
or
mov
add
add
pop
movsb
pop
clc
inc
add
sbb
into
push
arpl
add
pop
arpl
add
adc
add
outsb
out
cmp
inc
add
jnp
mov
sbbl
pop
and
add
push
or
pop
jae
add
pop
push
jmp
cmp
pop
dec
repz
sbbb
add
pop
jno
add
ret
xchg
mov
inc
add
mov
and
add
pop
lcall
pop
adc
add
cmp
sbb
add
add
sbbb
add
adc
pop
push
xor
add
pop
fistl
mov
add
and
add
pop
shll
add
loope
or
pop
jb
add
dec
push
add
push
add
mov
and
add
repnz
pop
inc
pop
iret
pusha
add
stos
or
add
mov
aad
ss
inc
pop
xor
add
icebp
push
add
push
push
jle
inc
pop
dec
pop
popa
add
or
mov
add
add
and
add
icebp
scas
lret
jns
insl
divb
clc
sbbb
mov
pop
jmp
add
add
ret
pop
sbb
add
pusha
add
xchg
xor
inc
pop
xlat
cmp
mov
adc
in
xor
add
xchg
sub
pop
dec
mov
rcr
je
xor
add
pop
test
inc
add
push
sti
xchg
popa
add
repz
pop
inc
pop
in
clc
ret
pop
jnp
pop
sbb
pop
lret
add
dec
sub
ret
ret
add
sbb
pop
sbb
je
sbbb
repz
add
xchg
pop
sub
or
call
pop
fs
iret
push
add
push
pop
push
fmul
mov
iret
pop
lods
and
add
add
cltd
and
ja
add
add
sub
add
rorl
jae
add
pop
sbb
add
inc
add
pop
adc
add
cmp
add
mov
sub
xchg
inc
add
push
add
sbb
add
pop
sbb
xchg
call
pop
dec
add
add
in
cmp
addr16
rcrl
test
insl
sbbb
cmpsb
pop
pop
ja
pop
xchg
sub
xor
add
add
pop
add
pushf
loop
xlat
mov
stc
jp
add
cmp
pop
jne
clc
or
add
into
and
add
push
aaa
push
xchg
add
rorb
mov
or
mov
icebp
outsb
push
add
cmpsl
pop
jge
or
mov
sbb
add
add
icebp
xchg
rcrl
add
ljmp
pop
daa
pop
cmp
jecxz
sbb
sbb
filds
aam
mov
pop
sbb
add
cmp
in
push
aad
pop
nop
lea
pop
insl
adc
add
les
pop
sub
xor
add
rcrl
ret
pop
jae
add
pop
mov
or
int3
mov
xchg
inc
pop
lret
sub
xor
pop
je
dec
out
and
fcomps
pop
sbb
ss
push
add
mov
nop
mov
pop
gs
mov
fsubrp
push
adc
add
cwtl
repz
jnp
adc
pop
or
rolb
add
jmp
jo
add
add
add
add
dec
nop
aas
or
jmp
cmp
dec
aas
sub
pop
or
pop
jmp
dec
jge
pop
inc
pop
mov
dec
inc
pop
pop
mov
sub
fcmovnu
pop
sub
add
add
inc
pop
fsub
pop
call
xchg
mov
cmp
ret
pop
scas
decl
jno
add
add
filds
pop
adc
add
add
add
pop
stos
int
lahf
cli
push
add
xchg
and
cltd
sahf
xchg
pusha
add
outsl
lds
jns
movsl
pop
mov
std
jmp
iret
pop
add
add
shlb
add
loope
sub
lods
rcrb
daa
pop
sub
pop
cltd
mov
xor
add
add
mov
gs
inc
add
inc
add
push
add
jecxz
and
jge
add
add
fdivs
pop
inc
pop
adc
add
jmp
pop
inc
pop
fwait
mov
loopne
iret
mov
mov
or
scas
loopne
mov
test
adc
inc
pop
jne
pop
loope
lods
sbbb
pop
add
add
sbbl
pop
shl
pop
cli
sbb
pusha
add
mov
pusha
add
stc
leave
pop
push
sbb
pop
jp
mov
push
add
das
call
pop
pop
lock
and
add
pop
sbbl
shrb
cs
sub
ds
outsb
and
add
inc
pop
xchg
push
sub
mov
add
js
pop
repnz
add
lods
and
add
add
cmpsl
pop
jl
popa
add
sub
add
popf
cs
into
inc
pop
aad
add
outsl
mov
imul
or
xchg
mov
lock
call
adc
and
add
add
push
mov
pop
cmp
adc
pop
cmpsl
pop
jp
imull
leave
lcall
push
push
add
ret
pop
cmp
jbe
pop
pop
sub
inc
pop
xchg
push
add
cmp
lret
repz
rol
pop
test
mov
dec
fidivrl
mov
js
add
mov
ljmp
gs
fisttpl
and
add
jl
pop
ret
pop
fcmovnbe
mov
pop
or
repz
add
mov
adc
faddl
in
leave
pop
mov
pop
lods
mov
test
fsubl
add
pop
sub
pop
push
ds
pop
repz
iret
in
mov
test
mov
add
mov
loop
lods
call
pop
test
cmc
incl
es
rcll
daa
pop
xchg
pop
xchg
jae
add
ret
imul
test
add
bound
add
pop
inc
add
xchg
mov
sbb
pop
ret
pop
test
xor
add
jecxz
push
cmpsl
pop
sbbl
or
add
sti
pop
mov
pop
xor
add
pop
ja
pop
pop
mov
pop
aam
or
out
and
add
pop
fidivrs
sahf
adc
lods
mov
jge
call
mov
cmp
pop
fdivp
fwait
mov
pop
enter
push
cmp
add
add
in
sbbl
pop
out
movsl
pop
xor
add
fcomip
lahf
jp
clc
rorl
push
outsl
outsl
push
add
jns
add
mov
popa
add
ret
movsb
pop
or
add
std
jmp
adc
add
xchg
out
mov
mov
pop
rcll
pop
js
xor
add
sbbl
addr16
jle
mov
cmp
xlat
mov
in
std
daa
pop
ds
testl
fisttpl
das
outsb
push
add
inc
add
lret
ljmp
pop
outsl
add
add
repz
add
pop
rcrb
mov
or
pop
adc
add
ret
stc
int
sbbb
add
cmp
imul
imul
mov
push
add
adc
fisttpl
pop
pop
and
add
add
out
or
adc
add
xor
mov
outsl
ja
fdivr
leave
adc
add
pop
and
lea
add
add
mov
pop
movsl
pop
bound
add
add
jge
loop
les
pop
inc
add
jnp
aam
pop
mov
jo
add
rorb
and
pop
sub
sarb
lds
jae
add
in
and
add
pop
mov
add
outsl
inc
pop
rcrb
add
or
rorl
pop
pop
xlat
int3
inc
add
test
pop
sub
pop
fs
pop
sqrtps
add
pop
jbe
mov
pop
fwait
jle
add
pop
and
push
add
int3
mov
pop
jp
jb
add
add
les
fsubrs
inc
add
pusha
add
fwait
movsb
pop
pop
push
shrb
sub
test
sbbb
inc
add
and
add
lret
jbe
pop
add
add
push
add
jo
add
ss
insb
mov
pop
jns
into
repnz
or
add
xchg
mov
sbb
pop
sbb
stos
cs
testl
stc
clc
add
add
pop
or
xor
add
add
add
out
push
add
mov
pop
mov
add
pop
and
add
adc
add
pop
jnp
sub
pop
mov
add
add
add
add
call
add
out
mov
pop
sub
or
mov
cmovns
mov
roll
add
inc
add
sbb
pop
or
sub
je
push
cs
mov
mov
jno
add
aam
add
outsb
mov
insb
xchg
mov
pushf
mov
add
hlt
mov
std
xchg
out
inc
add
sbb
decb
aas
jmp
shrl
or
add
shrb
pushf
aas
jmp
pop
ds
mov
add
adc
das
aaa
mov
sahf
adc
pop
cmp
movsb
pop
mov
add
pop
pop
ljmp
pop
int3
and
hlt
sahf
pop
dec
frstor
enter
scas
or
aam
and
pop
popf
cmp
pop
mov
fnstsw
sub
add
add
shl
test
int
pop
mov
add
add
mov
jns
pop
push
mov
test
jge
pop
mov
jne
pop
lock
jp
sbbl
add
pop
mov
mov
add
stc
jp
mov
daa
pop
loopne
stos
arpl
add
pop
pop
les
pushf
outsl
mov
add
add
test
cmp
add
cmp
cs
xchg
in
lock
cmp
sti
fisubs
add
add
mov
inc
pop
and
add
pop
aaa
sbb
push
test
add
jl
stc
mov
outsb
fnstsw
and
add
inc
add
sbb
pop
pop
aas
or
pop
pop
jno
add
icebp
into
das
icebp
cmp
add
push
xchg
pop
out
fld
pop
lret
fcmovnbe
mov
pop
and
pop
nop
adc
pop
or
daa
pop
xchg
dec
sbbl
dec
pop
testb
xchg
add
add
pop
movsl
pop
cmp
add
jb
add
dec
jecxz
mov
in
xchg
scas
leave
xchg
hlt
arpl
add
popf
mov
fchs
pop
int
lcall
pop
mov
add
sbbl
jp
push
xchg
add
push
add
lea
pop
aaa
inc
add
dec
mov
add
jle
sbb
pop
ja
add
xchg
or
lock
xor
add
pop
pop
ret
push
add
sub
add
les
daa
pop
jae
add
pop
decl
out
xor
popa
add
push
fiadds
aas
pop
scas
mov
cli
and
ret
jecxz
gs
clc
cld
add
add
add
add
xchg
lds
pop
push
fmull
xchg
gs
call
shr
shlb
jl
ds
pop
loop
jbe
mov
add
add
jge
add
push
dec
push
jmp
add
mov
adc
add
fs
das
xchg
jle
outsl
dec
xchg
adc
sub
add
popf
jnp
stos
jge
and
add
adc
add
xchg
jo
add
add
mov
leave
stc
jbe
bound
add
pop
fisubrs
jns
add
add
mov
add
pop
fldt
jmp
push
insl
cmp
test
mov
add
pushf
pushf
ss
add
add
push
pop
cmp
rcpps
add
cmc
jle
mov
pop
or
add
fists
or
add
pop
jno
add
add
add
cmp
lea
xor
add
sbbb
add
add
ljmp
inc
add
cwtl
ret
jno
add
mov
dec
movsb
pop
mov
pop
test
add
push
mov
pop
rcrl
and
add
int3
rcrb
cmp
dec
pop
fidivl
gs
pop
pop
xchg
pop
mov
icebp
jmp
daa
pop
addr16
dec
mov
pop
xchg
shll
sbb
add
add
inc
pop
dec
inc
pop
outsb
mov
sub
ds
ja
add
push
inc
add
mov
sti
cmp
add
add
add
sub
ficomps
stos
cmp
cltd
lahf
and
add
and
add
in
dec
and
add
std
push
sbb
sbb
add
pop
sub
pop
pop
jg
push
add
sub
fbstp
add
xchg
jg
jp
add
mov
out
pop
sbb
add
stos
lods
mov
rcrb
xchg
in
pinsrw
add
add
mov
pop
in
int3
jp
jb
add
add
sbb
pop
xchg
nop
pop
push
test
push
pop
mov
cli
mov
adc
add
pop
jbe
adc
add
add
add
and
add
inc
add
arpl
add
rcrb
jnp
pop
push
std
cwtl
sti
xlat
xchg
scas
xlat
fadds
pop
mov
ja
or
pop
inc
add
jmp
arpl
add
pop
or
xchg
or
xchg
rcrl
add
mov
add
repnz
add
dec
sbb
sbbb
add
sbb
add
add
addr16
lahf
push
sti
test
add
add
adc
cltd
sub
outsb
mov
add
ljmp
pop
ret
pop
loopne
cmp
in
mov
lds
add
test
pop
mov
and
add
add
inc
pop
dec
adc
pop
sbbl
test
pop
gs
jge
add
dec
ret
pop
or
push
dec
cmp
add
das
arpl
add
int3
shll
sbb
fdivr
cmp
popf
mov
pop
jecxz
repnz
pop
jmp
pop
push
pop
add
add
add
in
cmpsl
pop
pop
cwtl
mov
push
aam
xor
add
cmc
gs
push
pusha
add
mov
add
es
rolb
pop
xchg
cwtl
lea
pop
mov
mov
add
inc
add
pop
lret
call
add
out
les
repz
pop
sbb
sbbl
cli
or
add
or
inc
add
fsubrl
stos
enter
pop
pop
in
pop
xchg
popf
sub
pop
fsubrs
pop
lret
das
sub
lcall
clc
xor
hlt
or
pop
push
sub
jmp
push
jge
add
fstps
pop
lret
mov
add
repnz
inc
add
arpl
add
pop
in
cwtl
mov
xchg
mov
push
add
sarb
xchg
fdivl
xor
add
add
pop
or
pop
aaa
aaa
pop
xchg
xor
add
cmpsb
pop
lock
xor
add
add
or
pop
test
push
ljmp
mov
add
add
push
cmp
add
and
adc
add
jo
add
add
add
cli
or
mov
or
pop
xor
bound
add
pop
or
test
bound
add
mov
pop
jae
add
testb
pop
out
sbbl
mov
push
add
leave
stc
cmp
pop
cmp
or
push
pop
cmpsb
pop
in
dec
mov
scas
cltd
sub
lea
inc
add
push
test
add
mov
add
in
popf
jbe
sub
pop
push
add
ja
adc
add
add
lret
pop
cmpsl
pop
lods
fimuls
sti
rcrl
mov
jbe
pop
int
push
add
dec
push
xchg
and
add
mov
pop
sub
repz
ja
cmp
test
dec
sbb
add
push
pop
xchg
xchg
icebp
jo
add
xchg
rcrb
cmpsb
pop
popf
pop
jle
pop
insb
fidivl
add
inc
pop
shrb
pop
sahf
dec
popf
mov
add
add
jns
pop
icebp
mov
add
into
addr16
mull
add
cmpsl
pop
push
insl
mov
or
inc
add
outsl
fucomp
and
add
cmp
adc
add
or
aam
stos
mov
jge
clc
nop
dec
jg
inc
pop
aad
push
stos
jbe
push
cmp
test
pop
sbb
add
add
pop
dec
push
or
add
adc
mov
push
es
das
cwtl
cli
into
popa
add
in
push
lock
pop
ret
inc
add
xchg
jmp
add
out
negl
lcall
into
adc
pop
mov
call
push
insb
cmp
pop
or
in
pop
dec
pop
sti
pusha
add
cmp
addr16
and
add
sbbb
pop
xchg
faddp
pop
rcrl
pop
mov
iret
pop
daa
pop
into
ljmp
add
clc
mov
push
add
lcall
add
jmp
xor
add
sub
ret
pop
ret
pop
adc
add
xchg
pop
mov
fildl
pop
ret
pop
mov
add
pop
movsb
pop
into
insb
les
sbb
bound
add
adc
add
fmuls
popa
add
lds
das
push
lods
insl
add
fmull
add
jmp
adc
push
add
cld
add
add
lret
ds
ja
xchg
movsb
pop
adc
addr16
jmp
pop
push
add
into
leave
inc
add
ds
loop
dec
pop
pop
ror
ror
sahf
push
add
pop
mov
mov
push
sbbb
add
loop
ret
pop
pop
pop
add
pop
pop
rcrb
add
mov
sbb
jnp
pop
in
push
add
xor
add
add
push
add
jne
daa
pop
decl
add
pop
xchg
lcall
or
mov
sti
or
iret
fisubrs
add
sbb
mov
mov
pop
inc
add
sbb
add
test
sbbb
clc
stc
xor
add
add
dec
mov
add
xchg
inc
pop
movsb
pop
jno
add
cmc
fisubs
add
mov
jb
add
ss
or
sub
cmpsb
pop
mov
inc
add
inc
add
sub
mov
inc
add
inc
pop
xchg
xor
pushf
int
aaa
jo
add
pop
mov
jle
mov
and
out
push
bound
add
add
pop
pop
fmul
lahf
or
pop
outsl
push
mov
lods
xchg
test
pop
negb
aas
je
or
gs
fildl
fildl
pop
sub
pop
out
les
or
add
scas
mov
iret
enter
add
iret
notb
xor
add
mov
pop
jne
add
testl
add
rcrl
repz
cmc
dec
icebp
sbb
xchg
pop
pusha
add
outsb
lret
sbbb
pop
mov
xchg
add
jmp
add
jnp
movsb
pop
push
add
js
in
or
push
icebp
movsl
pop
pop
test
into
jmp
lods
or
daa
pop
sub
daa
pop
lods
mov
popf
arpl
add
dec
rcrl
pop
les
add
pop
xor
add
add
out
pop
cmp
xor
xchg
add
add
pop
push
sub
mov
xor
add
add
gs
test
lahf
mov
pop
std
jno
add
imul
leave
xor
cmpsl
pop
mov
frstor
add
movsb
pop
xchg
mov
clc
loop
push
pop
in
add
add
shrl
mov
pop
cltd
fbld
add
call
pop
xor
pop
inc
pop
addr16
call
sbbb
jns
dec
push
add
add
push
pop
cld
or
pop
mov
cld
push
pop
mov
cli
cmp
pop
dec
addr16
fdivs
add
jl
icebp
out
movsl
pop
adc
add
or
inc
pop
cmpsl
pop
jb
add
inc
pop
push
pop
mov
add
add
dec
push
sbbl
pop
mov
pop
pop
insb
psubusw
inc
add
sahf
es
rcrl
pop
cmp
sbb
add
xor
pop
adc
in
push
add
in
lods
jecxz
jl
add
scas
ret
pop
and
mov
pop
mov
aam
add
sub
dec
jl
out
xchg
popf
cs
cltd
ljmp
pop
or
sub
add
mov
cmc
popa
add
dec
scas
mov
insl
repnz
pop
cmp
in
sahf
mov
push
stc
mov
int3
mov
push
mov
add
push
push
call
add
push
call
mov
add
test
je
mov
imul
movzbl
shr
push
mov
add
push
mov
push
push
call
push
call
leave
ret
xchg
mov
sub
add
ret
nop
jmp
jmp
shr
add
jmp
neg
mov
jns
add
bound
add
jmp
push
dec
sbb
cmc
popf
mov
pop
push
je
jmp
add
cmp
add
nop
and
add
adc
add
add
lods
sbbb
pop
dec
rcrl
pop
pop
sbbl
pop
xchg
iret
xchg
insl
or
lds
jecxz
mov
add
ds
adc
pop
fsubl
add
add
sub
or
add
dec
push
aaa
cmpsl
pop
cmp
push
add
in
movsl
pop
xchg
mov
pop
dec
ror
stos
in
inc
pop
jns
shlb
test
enter
inc
add
pop
aas
fwait
pop
jg
pop
lret
lods
std
lahf
xchg
pop
mov
and
lea
add
cld
mov
xrelease
add
vmwrite
pop
arpl
add
ljmp
add
aas
mov
test
add
adc
add
add
rcrl
add
mov
sbbb
movsb
pop
jbe
sbbb
sub
add
xor
cmp
cs
cwtl
push
add
push
sbb
add
cmp
dec
and
jl
pop
lock
cmp
add
jmp
push
arpl
cmc
adc
add
add
push
in
dec
inc
add
fsubrs
fdiv
mov
pop
pop
iret
jmp
pop
jmp
or
jae
mov
pop
sub
push
add
shlb
add
pop
mov
pop
iret
mov
add
dec
sbbb
repz
add
xchg
or
movsl
pop
imul
insl
xchg
add
sub
push
xor
add
cmp
add
pop
pop
pop
rcrb
sub
push
pop
lods
push
adc
add
shll
add
in
sbbb
jno
add
in
xor
add
stos
inc
pop
pop
stos
pop
mov
mov
lret
xor
sbb
mov
adc
cli
sahf
add
arpl
sti
es
jp
icebp
cmp
cmp
pop
xchg
add
add
pusha
jmp
lods
ljmp
pop
clc
pop
push
add
jne
pop
call
cmp
pop
push
pushl
jmp
dec
jne
or
add
sbb
pop
arpl
add
xor
ss
cmp
push
xor
aas
xchg
mov
mov
loope
xor
add
mov
add
add
cmc
push
add
push
adc
loopne
out
rorb
mov
jnp,pt
add
imul
add
mov
dec
movsb
pop
sahf
pop
pushf
mov
dec
es
js
enter
pop
cmp
outsb
aaa
gs
ja
pop
jmp
fldcw
ficomps
pop
jnp
out
dec
add
add
pop
pop
pop
jbe
sub
add
push
push
jmp
out
lods
orb
cmpsb
pop
out
mov
sbb
jmp
enter
lods
sbbl
mov
cmp
pop
rolb
add
add
test
mov
pop
mov
mov
add
mov
dec
inc
add
sub
and
add
pop
insb
outsl
sarb
mov
add
add
xor
pop
daa
pop
sbb
pop
pop
push
mov
pop
or
add
push
ljmp
push
pop
jb
add
dec
cmp
cmpsb
pop
je
push
add
push
test
pop
hlt
pop
call
ss
std
or
pop
mov
fmuls
leave
mov
add
cmpsb
pop
mov
cmp
mov
add
jmp
arpl
cmp
mov
cmp
shll
or
out
mov
adc
add
cmp
add
sub
mov
or
pop
bound
add
adc
add
lret
push
call
nop
push
ret
and
lods
jno
add
and
add
add
add
mov
jge
pop
xor
add
add
push
sub
push
int3
dec
pop
cmp
leave
ss
push
mov
cmp
add
jbe
pop
cmc
sarl
roll
mov
xor
add
ja
cmp
adc
add
inc
add
push
add
dec
or
out
dec
hlt
xor
add
add
in
into
inc
add
inc
pop
pop
fwait
pop
inc
pop
daa
pop
dec
sahf
lret
and
add
sbb
arpl
add
jle
add
leave
add
arpl
sub
pop
out
cmpsb
pop
fistps
test
xor
add
mov
bound
add
sub
jecxz
add
add
into
sbb
lret
mov
mov
adc
add
in
clc
adc
add
add
add
add
sbbl
pop
pop
cmp
add
inc
pop
cmp
xor
xchg
ficompl
fnsave
add
jo
add
mov
dec
lock
pop
pop
mov
mov
add
out
outsb
add
add
add
adc
pop
inc
add
insb
lret
in
adc
outsl
stos
inc
add
bound
add
dec
add
add
mov
sbbb
mov
add
test
popf
mov
add
clc
dec
mov
mov
stos
sbbl
add
stc
ss
insb
and
sbb
pop
xor
add
pop
pop
xor
add
pop
gs
call
repnz
dec
out
jg
ja
lcall
add
jecxz
sbbb
mov
inc
pop
addr16
sbbl
gs
add
fstpt
sahf
fisttpll
sbbb
add
cmp
imul
pop
rcrb
cli
inc
pop
lret
ljmp
push
mov
ds
xorl
pop
int3
xor
add
pop
xchg
jnp
int
pop
push
loop
mov
add
add
sbb
add
sub
add
scas
jb
add
jno
add
mov
aam
pop
nop
sbb
in
pop
pop
adc
add
pop
cltd
push
or
add
mov
and
lahf
rcrb
add
add
and
add
les
push
jne
jmp
arpl
stc
ret
pop
adc
add
or
push
add
pop
xor
add
pop
mov
data16
arpl
add
pop
outsb
xchg
je
out
cmpsl
pop
jg
dec
lods
ss
pop
cld
add
add
decl
add
mov
mov
dec
jne
add
pop
pop
test
pop
or
bound
add
add
push
ret
jmp
jne
inc
inc
dec
sbb
xchg
mov
pop
jl
pop
mov
add
and
add
jo
add
mov
incl
mov
pop
xchg
fldenv
add
jmp
cwtl
push
out
pushf
sbb
ret
pop
inc
pop
mov
jbe,pt
scas
lcall
mov
scas
add
add
add
jecxz
dec
testl
clc
in
sahf
enter
xor
add
jmp
mov
test
das
loope
fsubl
push
add
jge
mov
add
pop
mov
std
sbbl
or
mov
pop
ljmp
pop
inc
pop
call
or
cli
popf
test
loope
movsb
pop
adc
add
test
mov
pop
out
inc
pop
mov
pop
push
mulb
add
add
add
les
dec
jg
je
aaa
out
lret
fs
les
sbbb
negl
sbbb
pusha
add
pop
cmp
add
sub
add
inc
add
sub
jge
adc
add
fisubl
add
jl
push
imul
pop
jne
pop
and
add
dec
jmp
arpl
cmp
arpl
pop
mov
pop
cli
push
in
sub
add
loop
movsl
pop
lahf
stos
scas
sbb
bnd
adc
add
add
jg
add
mov
add
adc
push
imul
cmp
fistps
mov
pop
aad
add
or
fistpl
pop
ja
pop
or
pop
xchg
lods
int
lcall
mov
adc
add
call
dec
push
adc
loopne
inc
add
sbb
jnp
shrb
mov
les
add
add
test
pop
stc
test
add
cwtl
pop
mov
imul
cmp
push
pop
movsb
pop
dec
add
add
loope
nop
js
sbb
xchg
add
out
arpl
pushf
jecxz
fldt
ficoms
popa
nop
push
ret
dec
or
arpl
add
out
popa
add
dec
inc
add
xor
add
add
jmp
pushf
ret
pop
ljmp
add
pop
xchg
mov
aam
popf
push
add
jge
pop
pop
pop
in
push
out
mov
add
aad
add
sub
pop
ffree
pop
test
test
sub
add
pop
ret
pop
into
loopne
imul
les
out
mov
rcrb
add
pop
shrb
fcoms
add
fcmovnu
push
pop
adc
add
add
add
insb
xor
add
icebp
sbbb
and
add
mov
dec
int3
add
loopne
cmp
add
bnd
pop
enter
and
add
add
inc
add
sub
pop
pop
mov
sub
pop
movsl
pop
jmp
pop
pusha
add
ds
add
inc
pop
jl
pop
outsl
inc
add
fisttpll
jmp
mov
add
test
mov
popf
dec
mov
fadd
pop
cmp
sbb
and
add
jne
or
mov
fwait
bound
add
adc
add
push
arpl
enter
inc
add
push
outsl
rcrb
lods
pop
loop
dec
shrl
call
mov
sub
add
std
pop
push
cltd
ret
sub
pop
cwtl
or
in
imulb
pop
pop
pop
aam
dec
mov
dec
push
add
lcall
jno
add
pop
sbbb
mov
add
inc
pop
dec
ficoml
pop
fdivrl
imul
pop
sbb
add
jne
arpl
sbb
add
cmp
add
aam
xor
add
sub
sbb
mov
add
push
add
iret
jno
add
cwtl
in
insl
test
pop
xchg
iret
push
add
scas
cmpsl
pop
mov
ds
xchg
mov
add
pop
ficomps
push
push
mov
add
dec
add
add
pop
sub
push
add
aas
xchg
pushf
add
add
add
aad
setge
pop
cmp
mov
imulb
cmc
sahf
ljmp
pop
dec
and
add
and
pop
cltd
pop
and
add
or
add
repnz
or
pop
test
sub
xchg
sub
add
xor
add
int
cltd
xchg
cmpsl
pop
xchg
imul
xor
ret
pop
scas
and
mov
add
and
add
jb
add
add
repz
add
mov
in
sahf
daa
pop
xor
add
add
pop
pop
mov
pop
lcall
pop
mov
add
xor
pop
dec
xor
add
pop
adc
add
hlt
sub
pop
mov
add
pop
mov
jne
insb
rcrl
shlb
fwait
pop
sub
in
popa
add
cmp
add
dec
sub
in
adc
add
xor
add
cld
cmp
add
pop
clc
xchg
mov
sti
lods
sbb
add
fincstp
adc
add
inc
add
and
add
add
lods
push
pop
pop
outsb
mov
scas
jnp
cmpsb
pop
lahf
es
push
add
and
pushf
pop
out
into
cltd
pop
dec
cli
outsb
outsl
push
inc
add
lahf
jmp
add
ljmp
inc
add
sub
adc
xor
add
movsb
pop
jp
adc
add
test
mov
jmp
ret
lods
cmp
fadd
pop
out
pop
mov
pop
mov
pop
call
jecxz
jg
pop
jnp
lock
pop
repnz
xchg
js
xchg
mov
lea
outsb
pop
xor
rcrb
pop
mov
and
add
ret
pop
and
add
xchg
cmp
ljmp
add
sub
lahf
stos
pop
fs
adc
add
ljmp
adc
mov
sbb
add
js
mov
add
add
add
pop
cmpsl
pop
dec
adc
incb
add
paddusw
mov
inc
add
pop
shlb
mov
loopne
xlat
or
or
add
dec
cmp
pop
jge
mov
jmp
add
add
add
mov
lock
hlt
outsb
cld
inc
add
xor
add
shll
cmc
sub
in
mov
sub
pop
mov
or
in
jae
add
pop
lds
inc
pop
jl
mov
push
add
mov
movsb
pop
sahf
bound
add
lods
jmp
sbb
mov
sbbb
xchg
rcrl
sub
add
xchg
adc
add
xchg
cmp
lcall
cmc
mov
add
cmp
mov
pop
or
add
into
cmp
mov
push
add
jmp
add
pop
cmp
mov
rcrl
add
sbb
fwait
sahf
aad
or
dec
sbbl
pop
fadds
and
add
cs
jbe
add
repnz
xchg
dec
fstpl
scas
sbb
sbbl
or
out
lahf
add
cmc
pushf
mov
and
pop
adc
cld
cmp
mov
into
dec
loope
pop
adc
add
sbb
add
jbe
sub
add
in
inc
add
inc
add
cmp
add
aaa
shlb
pop
xchg
outsl
out
adc
add
rcrb
ret
add
jmp
arpl
xor
xor
add
dec
sbb
or
fldl2e
pop
jp
pop
sti
inc
add
fidivrl
gs
push
pop
add
add
add
dec
dec
nop
das
or
inc
lock
push
sub
daa
repnz
pop
mov
sbb
leave
pop
in
insb
xor
and
add
lahf
pop
lds
pop
inc
pop
je
fdiv
mov
pop
jle
loope
or
into
push
add
and
push
loopne
ret
xchg
ljmp
dec
and
add
out
bound
add
dec
pop
imul
and
add
js
hlt
mov
dec
sbbb
mul
pop
js
cwtl
xor
add
fxch
lods
cwtl
dec
pop
mov
mov
pop
xrelease
sub
add
loope
pusha
add
inc
add
sub
out
sbb
scas
test
pop
cmp
add
cs
add
inc
pop
mov
fdivs
rcrl
push
adc
push
ret
arpl
sbbb
sti
push
add
jecxz
mov
pop
dec
incl
push
ret
mov
pop
pop
loopne
jmp
dec
cmp
pause
push
ret
xchg
sbb
add
add
pop
xor
add
jmp
sbb
addb
mov
mov
pop
sbbl
pop
cli
fwait
xchg
fbld
add
sub
inc
add
shll
add
jl
pusha
add
lret
add
es
fcoms
add
add
imul
daa
pop
push
outsl
aas
sbb
aas
hlt
xchg
sbbb
aaa
xor
add
add
sbbl
push
add
sub
mov
add
sar
xchg
insb
mov
jmp
mov
add
push
pop
addr16
out
xchg
and
add
cltd
xor
add
cmp
pop
inc
add
push
aaa
mov
add
xor
add
loope
adc
call
data16
add
jne
pop
and
add
jo
add
dec
in
psubw
pop
mov
add
insl
or
add
xchg
sub
inc
pop
std
in
cltd
mov
dec
dec
mov
dec
iret
fldl2e
push
add
add
bound
add
popf
xor
add
push
ret
arpl
sbb
icebp
push
sti
dec
repz
jmp
enter
call
jmp
cmc
fldenv
jne
or
lods
scas
lahf
xchg
repz
jmp
or
add
pop
iret
add
add
cmpsb
pop
fcmovnu
cwtl
sub
icebp
stos
push
jne
pop
mov
pop
adc
add
ret
test
mov
sbb
repnz
jne
push
add
dec
rcr
add
out
mov
add
add
aaa
pop
leave
pop
dec
cmp
dec
pop
mov
aam
pop
fwait
and
lock
ret
pop
push
jae
add
int3
xchg
pop
xor
pop
adc
add
into
repnz
pop
in
shlb
lret
mov
xchg
jge
pop
loope
fbld
add
add
add
das
mov
pop
mov
push
jmp
arpl
add
popa
add
cwtl
sub
pop
insl
cmp
les
sub
mov
rcrb
add
nop
push
and
add
dec
xchg
xlat
aaa
inc
pop
sub
pop
dec
iret
jmp
ret
pop
out
cmp
clc
xor
add
xchg
sub
jmp
pop
jl
xchg
jle
int3
add
add
pop
push
pop
sub
sub
jns
add
fs
pop
arpl
add
sbbl
mov
jmp
lods
mov
push
add
push
mov
iret
repnz
add
add
fldlg2
stos
shll
dec
push
sub
add
lock
pop
lret
js
pop
jmp
out
dec
mov
add
add
pop
lods
lea
add
mov
sbbl
add
arpl
xchg
test
add
movsb
pop
jge
pop
dec
xchg
or
pop
gs
jl
call
jmp
mov
jb
add
jo
add
add
dec
pop
in
fldz
loopne
dec
ss
mov
add
mov
arpl
jmp
arpl
add
add
xor
add
cmp
and
pop
arpl
add
lret
lahf
call
fidivrl
add
add
iret
jp
and
pop
in
and
add
out
lea
pusha
add
dec
or
sti
sar
cwtl
xor
add
push
add
loopne
roll
add
repz
in
pop
lods
mov
lods
lods
arpl
add
int3
inc
pop
aad
pop
rcrl
push
jmp
and
sub
mov
adc
add
push
mov
add
pusha
add
mov
sub
pop
mov
mov
ret
pop
dec
push
add
xchg
xchg
push
call
pop
push
push
ret
push
pop
or
jno
add
add
jmp
aam
stc
sub
push
mov
add
stos
pop
es
test
xor
add
push
pop
xor
add
xchg
lret
push
add
pusha
add
sub
add
jmp
add
popa
add
lcall
test
scas
jnp
pop
push
add
add
add
push
inc
add
dec
bound
add
jmp
pop
mov
or
into
sbbb
inc
and
jmp
out
fldenv
inc
add
cmp
test
sbbb
mov
pop
ficoms
add
jbe
pop
mov
add
pop
pop
pop
mov
cmp
push
je
iret
repnz
and
add
cli
and
add
push
in
and
xor
add
pop
icebp
outsb
or
push
gs
cmc
jg
shr
jmp
mov
jb
add
push
mov
add
add
pop
dec
xchg
dec
loope
mov
mov
mov
lea
add
lret
stc
pop
das
adc
sbb
jmp
xor
insb
lcall
mov
add
push
pushl
jmp
push
arpl
sbb
lcall
leave
adc
mov
sbbb
jle
fidivrs
mov
pop
xchg
fdivr
arpl
add
add
out
pop
jp
add
sub
add
add
add
jne
mov
sbb
jle
jo
add
pop
sub
add
out
hlt
mov
insl
xor
push
pop
mov
add
lock
or
add
es
adc
xchg
push
pop
xchg
scas
lcall
add
mov
cmpsl
pop
out
outsl
cmp
adc
add
popa
add
ljmp
pop
movsl
pop
nop
dec
dec
loop
add
add
push
add
jo
add
sbb
xlat
lods
cmp
add
add
jo
add
mov
pop
or
pusha
add
mov
pop
sbb
test
or
push
push
add
and
add
add
add
pop
arpl
add
mov
jg
jge
pop
test
pop
sbb
xlat
cmpsb
add
sbb
push
arpl
hlt
std
ret
fmull
inc
add
add
add
add
add
add
scas
push
inc
add
bnd
test
fs
fxch
ds
pop
jnp
add
outsb
movsl
pop
cmp
add
mov
stc
mov
or
or
push
xor
add
pop
pop
ret
or
and
jecxz
outsl
push
and
add
add
ficoml
fnsave
ja
popa
add
pop
cmp
dec
mov
and
add
add
jl
inc
add
das
pop
pop
pop
push
test
loop
push
mov
sbb
xor
add
mov
mov
pop
ja
pop
pop
hlt
in
rcrl
gs
les
xchg
or
pop
pop
pop
sbbb
mov
adc
push
sti
add
arpl
pop
jbe
rcrb
pop
mov
inc
add
mulb
add
push
ret
arpl
ljmp
jbe
nop
push
out
sbb
cmp
inc
push
push
pop
mov
mov
add
xchg
jne
pop
pop
add
add
pop
aas
jne
sahf
mov
repnz
xlat
cmp
sti
jmp
dec
ds
adc
mov
mov
clc
push
sub
sbbb
push
add
js
pop
sti
pop
aaa
inc
add
out
rcrb
xchg
enter
ret
pop
xor
add
ret
pop
push
cmp
add
dec
xor
add
add
xchg
bound
add
sbbb
add
pop
enter
add
push
add
jne
ja
in
gs
cmp
add
pop
pop
out
outsl
push
or
jmp
into
cmpsl
arpl
sbbl
and
add
sbbb
loop
sbbb
add
add
sbb
dec
mov
sbbb
pop
inc
pop
mov
sbbl
or
pop
test
or
sbb
jmp
cmc
jp
mov
push
shrl
jge
pop
outsl
and
add
aam
pop
sbb
ss
cmpsl
add
mov
pop
mov
cmp
add
inc
add
addr16
loop
adc
add
jns
lret
jmp
dec
pop
jbe
pop
out
mov
cmp
push
add
lods
and
add
cwtl
inc
add
jmp
and
add
or
add
jecxz
pop
push
add
js
imul
pop
es
jle
add
mov
fiaddl
add
pop
scas
add
lcall
push
pop
mov
pop
cwtl
or
add
scas
bound
add
dec
pop
dec
gs
inc
add
popf
arpl
add
add
push
add
out
idiv
popa
add
and
add
jge
clc
js
sbb
xchg
mov
je
fidivrs
je
jmp
pop
adc
jnp
pop
test
pop
pop
jecxz
out
jo
add
sub
add
leave
mov
loopne
and
add
and
add
mov
scas
sbb
add
pop
or
aaa
repnz
and
add
pop
xlat
inc
add
push
sub
add
add
push
mov
add
bound
add
add
pop
xor
pop
inc
pop
dec
add
add
add
add
out
out
lret
pop
aad
add
mov
negb
sub
mov
and
add
add
add
call
jecxz
push
add
out
icebp
not
jmp
sbb
mov
add
cs
rcrl
pop
dec
add
add
cld
dec
push
pusha
jmp
push
jne
test
daa
ret
pop
aam
repnz
push
push
ret
and
add
add
mov
add
inc
add
sahf
push
pop
and
add
fisubrl
pop
in
xor
add
pop
rcr
inc
add
rcrl
cmova
xlat
sub
es
pop
pop
inc
pop
test
cmp
loopne
out
pop
jle
cmp
cmp
inc
add
hlt
rcrl
ja
mov
mov
inc
add
fadd
pop
mov
add
lods
sbbl
add
adc
add
es
outsl
not
ret
pop
into
stos
fstpt
je
shrb
sub
add
or
dec
and
add
jne
jb
add
dec
fsubp
pop
nop
mov
mov
in
movsb
pop
ret
pop
out
cmpsl
pop
ss
fdivs
add
dec
jbe
add
inc
pop
xchg
std
dec
inc
add
std
and
add
mov
push
ret
pop
pop
arpl
add
add
xor
add
add
dec
xor
add
les
sub
mov
add
and
arpl
sub
into
sbb
scas
xchg
inc
add
lock
add
or
pop
mov
fists
inc
pop
sub
pop
test
add
add
lahf
or
add
jmp
lcall
jne
pop
stc
mov
pop
jmp
ljmp
clc
ds
jnp
addr16
jge
pop
out
outsl
mov
add
add
jle
test
mov
add
scas
sbbl
add
sarb
rcrb
cs
jae
add
pop
je
rolb
add
aad
pop
mov
popa
jmp
sbb
pop
mov
add
add
and
outsl
dec
dec
inc
idivl
push
outsb
add
sti
inc
arpl
pop
xor
add
sbb
xchg
rorl
addr16
rcrl
pop
repz
cmc
bound
add
pop
or
adc
add
cmpsl
pop
push
lods
push
add
xor
arpl
aaa
sbb
sub
or
jg
add
out
jnp
fwait
lods
gs
inc
pop
lods
imul
pop
mov
add
mov
pop
nop
sbb
jecxz
and
add
int
pop
push
add
arpl
add
jp
xor
nop
push
ret
sti
cmpsl
ds
pop
ja
aaa
cld
mov
xor
push
add
adc
add
pop
dec
mov
aaa
pop
cli
xor
add
add
je
pop
pop
mov
lret
inc
pop
lods
xor
add
add
das
or
jbe
pop
fisttps
add
cmpsl
pop
xor
add
mov
repnz
cmp
mov
pop
fnsave
and
add
pop
cmc
and
sbbl
cmpsl
pop
inc
add
xchg
mov
movsl
pop
xchg
addr16
in
xchg
fdivl
mov
add
fiaddl
mov
jmp
test
xor
add
cmp
mov
pop
inc
add
pusha
add
push
add
out
stc
gs
outsl
xchg
cmc
std
pop
aad
add
decb
jbe
xchg
inc
add
negl
in
rclb
pop
inc
pop
fstl
add
call
add
arpl
fbld
rcrl
add
cmp
adc
add
jns
outsl
mov
pop
nop
std
les
sub
dec
scas
sub
or
xchg
ljmp
pop
aaa
sbbb
mov
cld
jecxz
sbb
pop
ja
sub
pop
sub
jo
add
add
pop
xchg
test
adc
into
test
add
test
call
inc
add
mov
stos
out
outsl
repz
pop
in
sub
xchg
cmp
and
addr16
add
into
arpl
rcrb
xlat
pop
xchg
shll
add
pop
adc
add
pop
sbbl
add
or
add
push
mov
jmp
or
mov
xchg
pop
xchg
push
int
in
xor
add
dec
sahf
iret
enter
add
sub
shr
das
add
dec
arpl
push
arpl
add
add
pop
adc
add
add
inc
add
xchg
jbe
arpl
add
iret
gs
add
ljmp
sbb
pop
lock
pop
and
lds
dec
push
add
pop
or
mov
add
loop
jmp
arpl
pop
jmp
add
inc
pop
lret
and
jmp
add
out
jbe
add
xchg
js
add
out
stc
push
push
mov
add
adc
add
add
dec
xlat
std
es
scas
pop
enter
mov
push
aaa
or
and
add
add
pop
icebp
pop
int
clc
sbb
jmp
pushf
pop
jne
push
add
lods
sahf
addr16
mov
jo
add
decb
cmp
cmpsb
pop
push
sub
ja
pop
or
xor
add
mov
mov
pushf
jmp
add
pop
das
push
push
scas
test
pop
js
and
add
xchg
ret
jge
pop
bound
add
fs
fstpl
pop
stc
pusha
add
lods
fcmovnb
pop
mov
ds
or
xchg
jo
add
movsb
jmp
mov
add
dec
add
add
in
loop
jle
out
jbe
pop
mulb
xchg
out
jmp
mov
add
ljmp
add
dec
pop
push
mov
jmp
sub
xor
std
lea
add
sti
mov
pop
pop
cmp
fwait
scas
jge
pop
insb
pop
xor
add
add
out
lahf
xchg
icebp
add
add
mov
add
add
dec
jmp
pop
jmp
ret
jbe
add
rorl
add
mov
daa
pop
imul
add
mov
push
pop
icebp
rcrl
vmread
add
cmpsl
pop
add
add
push
add
add
pop
inc
pop
sbbb
inc
pop
dec
sub
fildl
add
xor
pop
jle
lret
test
mov
push
imul
insl
shl
dec
and
add
add
add
add
add
pushf
lret
call
clc
pop
add
out
pop
xchg
and
xchg
add
mov
pop
ja
scas
xchg
ret
test
jmp
call
jmp
xor
xlat
adc
add
jnp
xchg
push
rolb
stos
iret
and
add
add
test
imul
pop
int3
repnz
mov
sbb
jmp
pop
dec
add
cmp
jg
pop
push
add
lret
mov
jge
add
pop
xchg
into
test
inc
pop
aad
adc
cmp
test
out
mov
fsubr
sbb
jmp
pop
or
enter
sub
pop
out
into
sbb
loop
iret
xchg
testl
sbb
rorl
aam
arpl
jp
cli
cld
push
nop
xlat
push
mov
out
dec
xchg
mov
icebp
pop
sbbb
and
push
add
and
add
pop
cmp
arpl
add
aad
stos
push
js
and
add
mov
clc
mov
inc
add
cltd
jno
add
mov
lcall
rcrb
mov
outsl
inc
add
push
push
jmp
mov
cmp
add
stos
mov
pop
dec
pop
outsl
adc
add
add
add
ret
mov
cmp
add
nop
repnz
and
add
add
inc
add
jp
pop
mov
nop
ljmp
das
add
add
addr16
int3
cmp
pop
scas
rorb
pop
fdivs
pop
jno
add
mov
test
movsb
pop
fiadds
jge
les
pop
xchg
int3
out
adc
and
add
sbbb
pop
test
inc
pop
inc
add
gs
jbe
xor
pop
and
add
rcrb
pop
sbb
pop
mov
shll
add
mov
add
pop
lahf
mov
shr
mov
add
ret
pop
cli
nop
jns
pop
sar
inc
add
push
push
mov
mov
add
add
sbb
jae
add
add
lds
pop
xchg
pop
mov
cltd
js
pop
sbb
pop
pop
cmpsb
pop
pop
fs
imul
add
push
add
jmp
push
sub
aas
push
pop
cmc
adc
add
fsubs
xchg
mov
pop
sti
out
loop
push
dec
xor
add
mov
pusha
add
jmp
cmp
pop
scas
inc
add
int
out
leave
xlat
jns
jmp
jmp
arpl
or
pop
pop
and
add
add
pop
pop
add
mov
pop
cmc
jnp
sbbl
push
pop
lcall
js
mov
adc
push
add
out
jle
aas
xchg
push
cmp
add
add
cmp
sub
and
add
pushf
out
cmp
add
pop
out
pop
pop
cmp
pop
xchg
pop
adc
xor
add
add
xchg
insl
cmc
fwait
sti
mov
inc
add
add
add
add
cli
lret
dec
sub
pop
stc
loop
sbb
xor
add
cmpl
jmp
mov
or
xor
jg
xor
hlt
rorb
dec
popa
add
testl
shrl
add
popa
add
pop
in
xchg
cld
dec
mov
jbe
pop
loopne
xchg
loop
hlt
sub
mov
add
add
add
das
dec
aad
fimuls
add
add
add
inc
add
in
xor
pop
and
popf
test
mov
add
add
add
and
int3
inc
add
enter
repnz
imul
into
mov
add
add
lret
fwait
ljmp
cmp
add
add
pop
cltd
lret
xchg
jmp
dec
aaa
xor
pop
add
pop
and
add
add
mov
test
inc
pop
dec
lahf
fstps
pop
xor
add
add
sub
inc
pop
pop
push
dec
and
lret
pop
incl
cltd
add
dec
mov
pushf
jb
add
sti
in
lea
sub
shll
add
add
mov
add
stos
jmp
push
and
add
fdivrs
add
dec
add
mov
pop
jmp
or
lret
add
mov
add
ret
pop
cli
fwait
in
sub
lcall
sbb
pop
repz
dec
popa
add
sbb
add
test
fstp
pop
pop
mov
or
dec
xchg
cmp
inc
add
scas
adc
add
fs
xchg
ficompl
cmp
jno
add
outsl
inc
pop
sub
push
add
mov
pop
icebp
lcall
mov
add
pop
push
data16
and
pop
push
je
add
dec
repz
add
or
pop
int3
rolb
repnz
dec
xchg
cmpsb
pop
cmp
add
push
xchg
std
mov
add
dec
outsl
jbe
pop
pop
repz
fcmovne
cmp
test
pop
cs
enter
dec
pushf
xchg
sub
add
mov
jbe
xchg
mov
pop
rcrb
add
add
sbbl
add
sahf
daa
pop
fwait
pop
ret
pop
and
cwtl
stc
stos
cs
pop
pop
leave
jmp
and
add
out
iret
xchg
loop
cli
lret
dec
sub
and
add
dec
push
add
jmp
arpl
cwtl
cmp
pop
shlb
pop
scas
dec
popa
add
in
or
add
loope
lds
or
pop
std
lods
sbb
dec
push
jl
pop
and
add
cli
cmpsb
pop
icebp
adc
outsb
mov
clc
dec
inc
add
push
mov
lret
dec
test
mov
hlt
mov
sub
xor
add
pop
pop
jo
add
add
scas
int
sbb
aam
pop
mov
scas
idiv
decb
sbbb
icebp
mov
cmp
scas
pushf
leave
bswap
sbb
pop
into
sbb
js
jmp
xchg
arpl
cmp
xor
clc
xchg
int
pop
cmp
shll
add
jp
js
clc
adc
add
inc
pop
adc
pop
adc
add
cmpsl
pop
xor
pop
popa
add
in
cmp
test
xor
add
pop
jo
add
lcall
xchg
push
add
jmp
or
daa
xor
add
pop
imul
push
pop
push
lock
mov
fdivl
mov
or
add
sbb
pop
lret
in
mov
pop
stc
adc
adc
add
pop
out
pop
push
add
lock
pop
and
add
push
movsb
pop
jne
sbb
pmaxub
pop
jl
out
fldcw
add
pop
xchg
add
mov
mov
jno
add
or
add
push
dec
inc
add
push
loop
mov
mov
lret
pushf
clc
lret
push
inc
add
cmp
pop
ja
add
inc
pop
sub
pop
jecxz
sub
cmpsb
pop
insb
cmp
imul
outsb
ret
pop
mov
add
jmp
push
arpl
arpl
add
dec
inc
pop
popf
sbbb
inc
pop
sub
divl
add
add
into
cmovb
add
pop
push
add
mov
pop
pcmpeqw
popa
add
and
sbb
pop
pop
scas
je
scas
cmc
call
mov
add
pop
bound
add
insb
mov
ja
pop
imul
mov
outsl
push
clc
mov
pop
add
add
pop
je
inc
pop
sti
ljmp
or
pop
call
cmc
jg
add
int3
stos
sub
sahf
cmp
add
xchg
push
rcrl
out
lods
test
into
push
adc
cmp
pop
jecxz
cmp
inc
pop
dec
add
add
outsl
or
pop
or
add
sub
add
add
dec
gs
daa
pop
shll
add
xchg
pop
pop
sub
scas
xlat
pop
jnp
cmpsl
pop
js
in
jp
pop
clc
in
dec
add
add
aas
call
xchg
sbbl
xor
add
jmp
ds
push
add
cld
xor
push
jmp
arpl
dec
push
and
add
add
jnp
sbb
add
jecxz
push
std
push
sbb
xor
add
jo,pn
add
outsl
cmp
movsl
pop
test
inc
pop
xor
add
jmp
pop
fbld
add
sub
pop
lret
mov
mov
jmp
arpl
daa
pop
dec
dec
lods
sbbl
fwait
sbb
je
decl
add
or
mov
mov
int3
mov
add
cmp
pop
es
test
add
xchg
loopne
or
add
or
add
jae
add
out
daa
pop
xchg
inc
add
aas
add
add
pop
push
add
jno
add
sub
jmp
pop
cmp
push
jmp
in
arpl
add
mov
jl
mov
add
mov
jmp
sbb
dec
add
jne
add
mov
sbbl
add
fisubrl
ret
pop
sahf
aas
fld
pop
mov
mov
pop
idivb
add
and
pop
mov
add
test
pop
inc
add
cmp
push
mov
insl
add
add
loopne
jl
out
popa
add
int
scas
push
add
frstor
jg
pop
rcrl
ljmp
addr16
inc
pop
fcmovb
pop
inc
pop
in
xchg
pop
sbb
add
inc
pop
cwtl
ss
clc
test
push
add
adc
pop
pop
cmp
inc
pop
xchg
out
adc
pop
jmp
pusha
add
sbb
pusha
add
or
fwait
call
add
add
add
add
rcrl
or
movsb
pop
xor
add
push
movsl
pop
xchg
pop
pop
test
mov
pop
xchg
xchg
out
xchg
adc
add
repz
hlt
mov
dec
jmp
cli
neg
xchg
or
sbb
add
leave
cwtl
xchg
jle
pop
fdivl
add
mov
lock
cmpsb
pop
push
add
xchg
mov
in
jmp
sub
add
dec
jg
pop
push
xchg
cmp
xchg
push
ja
dec
ss
pop
pop
pop
fisubrs
stos
jmp
and
or
add
add
es
rcrl
jae
add
mov
add
imul
pop
fcompl
imul
sbb
push
fldenv
pop
and
add
jbe
mov
mov
enter
xor
add
hlt
rcrb
pushf
jb
add
jmp
repz
lahf
xlat
lock
add
pop
sbb
jl
test
jl
jns
pop
push
push
arpl
mov
sbb
out
loope
outsb
ja
ret
pop
scas
mov
sub
arpl
add
pop
add
add
testl
add
push
jo
add
or
pop
loopne
gs
movsl
pop
loopne
jg,pn
add
adc
add
add
push
push
add
pop
pop
ljmp
sub
mov
add
sub
xchg
mov
sbb
add
add
jmp
mov
pop
push
add
xchg
inc
pop
dec
push
call
jmp
ret
fldenv
add
mov
call
rcrl
mov
ret
sbb
dec
xor
add
addr16
sbb
shl
addr16
ds
cmp
add
push
sub
int3
mov
xor
arpl
add
divl
stos
pop
lahf
out
pop
pop
je
add
or
test
pushf
jmp
add
add
mov
mulb
pop
pop
ds
fidivs
hlt
in
stos
in
fsubrp
scas
sbb
add
pushf
and
add
add
pop
pop
mov
jne
pop
in
jns
pop
mov
pop
out
and
add
es
add
add
xor
add
add
adc
add
add
and
loopne
es
mov
pop
rcrl
pop
test
scas
repnz
add
add
mov
cmp
add
lods
lea
icebp
lea
jmp
add
inc
arpl
out
lcall
into
std
lock
stc
jmp
out
ret
ret
cmpsl
aam
add
sbbb
add
add
inc
add
cmp
pop
and
add
sbb
test
sbb
add
cmp
add
fs
stos
mov
cmp
add
popf
sar
shl
jmp
adc
cmp
xor
jmp
outsl
arpl
sub
add
popa
add
xchg
cmp
cmpsb
pop
imul
mov
pop
pop
rclb
push
add
loopne
inc
pop
jno
add
cmp
jmp
enter
shrb
adc
add
icebp
pop
lahf
jno
add
pop
loopne
insb
mov
pop
decl
add
pop
jmp
add
cmp
pop
popf
fmull
dec
std
nop
imul
ror
in
inc
add
jl
stos
loop
in
pop
popf
hlt
sbb
ja
pop
jp
out
rcrb
popf
lcall
add
shrl
or
cltd
cwtl
into
ljmp
pop
lods
lret
add
pop
mov
xor
pop
jmp
add
jp
pop
xor
test
bound
add
lcall
add
jge
pop
mov
push
sahf
popf
ljmp
adc
mov
pop
adc
pop
ljmp
push
lds
test
add
adc
mov
sub
in
mov
test
add
std
or
movsl
pop
es
cld
jge
dec
inc
add
test
and
add
jo
add
mov
add
stc
push
stos
cmp
add
pop
popf
xchg
fdivrl
sahf
mov
add
jmp
ljmp
scas
out
inc
add
pop
cmp
jne
jmp
ljmp
jmp
and
enter
add
stos
imul
adc
add
pop
or
mov
push
ret
add
repz
push
dec
dec
sbb
pop
push
jns
outsb
xchg
push
cld
jns
ja
pop
daa
pop
repnz
pop
adc
add
add
jge
dec
sub
add
int
pop
push
cmp
add
jno
add
add
adc
add
add
add
pop
scas
add
add
add
or
xchg
inc
pop
pop
iret
arpl
add
push
mov
add
or
stc
rcrl
ret
jmp
daa
test
aaa
push
sub
cmp
repz
add
sbbb
pop
add
add
pop
rsqrtps
add
add
pop
sub
jmp
into
arpl
dec
arpl
sti
or
add
add
pop
lahf
mov
pop
pop
xor
add
pop
pop
and
add
scas
daa
pop
jb
add
push
pop
mov
out
adc
add
test
pop
fcompl
sbbl
add
popa
add
sbb
sbbb
dec
adc
add
repnz
movsb
pop
cmpsb
pop
mov
inc
add
mov
push
add
pushf
ss
add
enter
pop
pop
mov
add
cmp
mov
add
sub
add
add
add
push
pop
out
xlat
jge
mov
add
push
ljmp
push
add
mov
xchg
cmovs
pop
fisubrl
inc
add
cmpsl
pop
int
add
sub
imul
add
daa
dec
dec
ds
lods
into
mov
repnz
dec
repnz
add
pop
adc
add
roll
add
add
add
add
cltd
pop
mov
push
fsub
pop
jne
js
pop
pop
sub
xchg
shrb
add
mov
in
jbe
add
dec
mov
ret
pop
loope
testb
pop
add
add
pop
and
add
outsl
sbbl
add
sbbb
pop
or
add
mov
pop
pop
mov
fdivl
jne
mov
sbb
pop
rcrb
jl
mov
pop
xchg
in
cmpsl
pop
inc
add
ja
push
add
push
jmp
sbb
pop
adc
add
std
xchg
pop
or
cmp
das
cs
add
adc
add
pop
rorb
out
iret
inc
add
aad
in
mov
fiaddl
add
mov
fldl
add
cmp
pop
push
add
jmp
mov
push
test
js
pop
lods
or
daa
pop
xor
add
lgs
mov
add
mov
mov
or
add
push
or
pop
ljmp
mov
mov
jmp
arpl
arpl
add
xchg
mov
jl
scas
mov
xchg
xor
pop
push
push
nop
push
ret
in
push
pop
loop
mov
pop
cmc
fisttpll
notl
ret
pop
pushf
adc
add
add
and
sub
jo
add
add
add
cmp
add
xchg
pop
sub
scas
stos
in
js
or
sahf
fistpll
add
repnz
add
add
pop
nop
imul
add
add
add
dec
jnp
inc
pop
fldenv
push
jmp
inc
or
pop
lea
imul
mov
ss
push
rcrb
test
scas
lcall
xor
add
add
imul
in
jle
sbbb
mov
add
pop
nop
add
add
ja
add
int3
jp
repnz
imul
add
dec
es
sub
push
xchg
sub
add
sub
inc
pop
add
add
outsb
adc
add
add
ret
pop
sbb
mov
add
lods
inc
add
aad
sub
jno
add
push
mov
add
adc
add
xchg
add
pop
arpl
into
enter
add
sub
xchg
leave
ret
pop
lods
out
movsb
pop
sub
inc
pop
pop
idivl
ret
cld
xchg
lcall
adc
les
jle
add
mov
pop
add
add
xlat
or
sti
adc
add
out
push
add
xor
add
add
push
mov
pop
out
cltd
push
pop
out
push
xchg
aas
add
inc
mov
arpl
add
add
add
add
or
add
add
sti
stc
lahf
pop
mov
sub
add
push
add
or
add
cld
outsb
hlt
and
js
lea
pop
mov
sarb
jo
add
mov
imul
pop
jp
add
add
add
jmp
and
pop
rcrb
add
cmpsb
pop
inc
add
xor
pop
add
int3
gs
icebp
adc
add
add
lds
rcrl
pop
pop
pop
pop
fnop
inc
add
mov
repnz
mov
cmp
adc
add
pop
xchg
mulb
hlt
xor
add
bound
add
fwait
jne
add
test
mov
inc
add
dec
xor
add
js
add
push
mov
jmp
push
test
dec
ret
pusha
nop
push
ret
mov
add
dec
push
jge
add
addr16
pop
xor
add
add
mov
add
add
cmp
pop
cmp
ljmp
cmpsb
pop
pop
add
add
add
add
add
rol
pop
rcrb
addr16
fldl
jae
add
pop
sbbb
loopne
lods
jp
inc
pop
enter
pop
rcrl
testb
add
rcll
cmp
aas
test
pop
mov
pop
aas
into
pop
js
pop
pop
arpl
add
ret
pop
int
scas
ljmp
mov
arpl
hlt
scas
mov
jb
add
add
mov
mov
add
lods
sbb
adc
jle
test
hlt
gs
add
add
movzwl
jmp
pushf
pop
inc
bound
add
fsts
add
clc
cs
je
pop
push
mov
pop
cwtl
xor
add
add
pusha
add
jnp
loopne
jp
push
scas
xor
add
sbb
pop
jmp
pop
add
add
pop
nop
sti
test
push
adc
add
push
add
xchg
jne
xor
add
push
fdivl
pop
lret
mov
ffree
pop
mov
mov
and
add
and
add
add
pop
dec
cmp
push
mov
fmul
fiaddl
iret
add
add
add
push
fwait
popl
test
lock
sbbl
mov
push
add
js
es
xor
add
add
add
mov
ret
xchg
pop
stc
jns
out
mov
or
jae
add
int3
sbbb
add
xor
cld
dec
leave
mov
dec
mov
pop
sub
mov
pop
pop
mov
add
add
add
movsb
pop
adc
add
pop
push
pop
push
add
sub
add
inc
pop
jl
pop
mov
cmp
pop
push
xor
add
pop
xchg
sbbl
pop
xchg
xor
mov
add
lret
push
add
adc
add
pusha
add
leave
scas
repz
jp
jae
add
or
push
add
dec
std
out
cmp
adc
add
in
rorb
add
add
pop
sbb
in
and
add
daa
pop
rcr
pop
add
add
stos
cltd
adc
pop
dec
addr16
lahf
mov
pop
pusha
add
pop
xor
add
pop
mov
pop
cmp
or
pop
movsb
pop
push
add
xor
dec
and
add
clc
inc
pop
dec
shrb
jge
jmp
test
into
rolb
mov
pop
add
add
lret
lret
inc
pop
lret
add
cltd
jo
add
lds
cmp
xchg
jmp
movsb
pop
pop
stc
daa
pop
mov
add
add
add
pop
pushf
pop
in
enter
push
ret
into
push
add
mov
jmp
and
pop
pop
sbbb
jo
add
pop
sub
add
decl
jmp
arpl
into
enter
gs
mov
add
add
add
int3
xor
add
add
inc
pop
jno
add
or
js
mov
and
scas
inc
pop
dec
rcll
add
je
cltd
sbb
fwait
mov
nop
sti
xor
ja
or
add
insl
rolb
add
mov
jmp
mov
add
adc
add
inc
pop
sub
xor
mov
add
jge
add
scas
outsl
pop
outsb
cmp
ljmp
les
adc
add
add
add
mov
push
add
fmul
std
std
inc
add
inc
add
cmc
daa
pop
rcrl
call
pop
add
add
add
pop
xchg
pop
lods
pop
cs
pop
cmp
pop
sub
pop
iret
mov
adc
add
mov
lea
adc
add
pop
xchg
lock
pop
xchg
lahf
add
add
dec
jmp
inc
arpl
push
xor
lods
xchg
jecxz
adc
add
in
cmp
add
add
iret
scas
pusha
add
or
add
test
pop
jmp
pop
fbstp
jne
pop
mov
dec
addr16
push
pop
add
add
out
fisubrs
pop
adc
add
fisubs
add
add
test
jnp
jmp
pop
es
pushf
cmpsl
pop
pop
test
sbb
pop
sbbb
pop
mov
mov
lahf
ja
add
daa
xor
in
sbb
add
nop
push
ret
aam
cmpsl
lea
add
pop
in
sbb
add
call
into
add
add
pop
fwait
stos
sbbb
pop
call
and
dec
add
mov
pop
or
jne
or
push
add
jmp
fcompl
into
gs
jb
add
add
sbb
mov
mov
and
add
mov
pop
lcall
out
les
sbbl
pop
adc
add
pop
testb
add
out
movsb
pop
mov
inc
push
adc
cmc
xlat
call
outsl
cmpsb
pop
nop
cmpsl
pop
rcrl
ja
in
jl
scas
mov
jo
add
pop
dec
dec
pusha
add
jbe
xor
add
xchg
pop
scas
lods
daa
pop
bound
add
ja
jae
add
pop
nop
push
ret
arpl
arpl
pop
lea
add
mov
inc
add
push
jg
ja
pop
test
pop
sbbl
jp
jns
fldl
pop
fs
ret
pop
lods
jns
dec
ljmp
pop
cli
enter
push
test
jg
test
and
add
popf
xor
pop
mov
mov
nop
push
ret
ds
pop
popa
add
cmpsb
pop
dec
mov
jo
add
cltd
push
in
sahf
cwtl
xchg
fcompl
pop
int
add
filds
repz
push
add
sbb
scas
mov
mov
nop
push
ret
aaa
arpl
das
and
add
pop
and
add
mov
daa
pop
sti
mov
jb
add
add
add
jg
cmc
xlat
jno
add
jl
xor
add
push
mov
inc
add
jno
add
pop
cwtl
test
xlat
pop
cld
add
add
iret
nop
sbbb
add
outsl
cmp
mov
leave
jbe
dec
daa
pop
dec
out
cltd
xor
jns
ret
jmp
arpl
ds
cmp
add
jmp
jne
add
add
jmp
pop
aad
lods
sarl
fiadds
add
mov
enter
xor
add
add
mov
push
cli
ret
in
ficoms
add
add
add
and
add
pop
or
test
inc
add
jmp
pop
mov
fsubrp
bnd
pop
add
add
pop
movsl
pop
jecxz
gs
popa
add
stc
sub
pop
lret
gs
out
ret
pop
rolb
add
add
jle
hlt
cmpsl
pop
mov
lret
pop
or
add
fisttpl
pop
mov
pop
out
jmp
les
xor
add
inc
pop
and
add
add
pop
xchg
mov
gs
sub
add
or
lods
cmpsl
pop
mov
rcrb
pop
sbb
add
rcrl
pop
cmp
add
add
mov
sub
xor
add
mov
jge
test
add
jg
pop
mov
pop
sub
add
xlat
call
fst
jmp
sub
es
ds
rcrl
flds
add
add
pop
rorb
pop
pop
mov
add
xchg
scas
add
add
add
pop
jne
movsb
pop
sbb
iret
enter
push
in
push
add
push
add
push
add
arpl
daa
push
in
jb
add
loop
cmp
dec
xor
add
dec
int3
pop
or
add
or
pop
xchg
cmpsl
pop
adc
add
pop
pop
inc
pop
adc
add
push
pop
jecxz
mulb
push
add
in
mov
pop
mov
xor
add
add
jge
pop
cwtl
inc
pop
shrb
in
fldcw
add
je
pop
push
cld
ds
jecxz
fmull
pop
call
pop
test
cmp
xchg
es
dec
das
and
add
mov
aam
inc
daa
and
add
pop
test
cli
cltd
sub
cmp
add
pop
push
fs
add
enter
jo
add
inc
pop
xchg
int3
xor
pop
lea
add
cld
push
mov
lret
cmp
add
outsb
mov
pop
cmp
stos
repz
aaa
mov
inc
add
arpl
mov
mov
jmp
pop
sti
jb
add
stc
jb
add
sbb
add
mov
jle
xchg
lods
push
push
add
lea
fdivrl
lock
nop
fisubrl
mov
add
mov
lods
iret
sbb
cmp
adc
add
lea
fwait
add
add
fcoms
lret
pop
cmpsl
pop
inc
pop
out
pop
and
add
add
pop
mov
add
imul
nop
push
ret
cmc
pop
adc
add
jle
out
inc
add
pop
arpl
add
fsubs
pop
add
add
outsl
ret
add
mov
pop
mov
add
mov
je
add
call
add
mov
arpl
int3
xchg
les
idivl
jle
pop
out
lcall
scas
dec
fsubp
pop
out
pop
pop
jae
add
pop
dec
or
push
add
stos
xchg
jl
xchg
in
mov
inc
pop
das
mov
sub
add
add
add
loope
insl
cmp
adc
add
add
jle
xchg
sub
ja
sbb
add
sbb
in
cmp
xor
add
hlt
xor
add
and
add
arpl
arpl
aaa
test
mov
sub
rcrl
cmp
pop
jmp
pop
jp
pop
scas
out
or
add
push
add
dec
add
cmc
decl
adc
inc
add
inc
arpl
dec
xchg
xor
add
add
add
je
pop
push
cmp
aam
xor
pop
cwtl
mov
xchg
daa
pop
icebp
imul
test
sti
xor
pop
pop
ret
fildll
daa
pop
hlt
adc
add
add
mov
push
jmp
dec
sub
push
xor
cld
cmp
test
add
xchg
sbbl
outsl
ret
pop
icebp
push
xchg
fs
hlt
jle
ljmp
push
add
pusha
add
jle
add
or
push
add
push
loope
dec
mov
xor
add
in
inc
add
in
test
push
pop
mov
pop
je
add
test
lret
ljmp
dec
dec
addr16
push
mov
jmp
cmpsl
pop
outsl
sbb
or
xchg
pusha
add
xchg
rolb
add
pop
mov
add
clc
movsb
pop
xchg
int3
pop
mov
push
inc
add
int
add
jmp
xchg
or
sti
add
add
xlat
mov
or
push
mov
ret
or
movsb
pop
inc
pop
jbe
iret
xlat
icebp
fwait
imul
pop
xor
add
pop
stos
xor
add
pop
rcrl
pop
imul
ret
jmp
or
arpl
inc
inc
add
sbb
les
adc
add
clc
or
mov
ffree
pop
lret
notb
rorl
add
mov
push
add
enter
in
pop
or
add
inc
add
inc
pop
pop
movsb
pop
scas
push
cmp
pop
xchg
xor
cmove
add
in
mov
fs
cmp
pop
fs
inc
add
sarb
mov
bound
add
sub
pop
inc
pop
sbb
fcom
push
add
in
add
add
add
pop
ja
lock
cmp
pop
mov
add
cmp
add
sbb
lret
pop
xchg
fisubs
pop
inc
add
xchg
pop
jne
imul
add
push
push
mov
cs
xchg
mov
jge
pop
mov
incl
push
ret
inc
ljmp
fcos
stos
jmp
push
xchg
sub
pop
aam
pop
icebp
aaa
adc
add
add
or
pop
inc
pop
ljmp
add
pop
inc
add
mov
sbbb
enter
mov
xor
add
add
jno
add
add
and
pop
insl
loop
clc
lret
inc
pop
and
add
fisttpll
call
mov
push
pop
xchg
popf
cmp
pop
mov
adc
mov
xchg
pop
fdiv
xor
add
mov
add
rep
stos
addr16
push
add
inc
cmp
enter
push
add
iret
in
lea
mov
or
pop
mov
add
lods
fsubl
xor
add
add
or
and
stos
pop
pop
xor
add
add
add
dec
sub
incb
inc
pop
mov
jmp
inc
mov
lcall
add
scas
mov
rcl
lcall
sti
daa
pop
xchg
and
sub
add
lock
out
jl
add
ljmp
add
es
sbb
or
add
stos
xlat
push
mov
jmp
arpl
int
cmp
or
mov
sahf
add
add
pop
add
add
add
push
xor
add
roll
add
dec
das
xor
add
add
mov
add
int
pop
jo
add
add
jmp
sti
xchg
shlb
xor
add
and
rorl
gs
jo,pt
add
sbbb
loop
xchg
mov
pop
shrb
bound
add
decl
jne
add
out
jp
mov
repnz
push
shll
pop
sbb
jge
add
rcl
rcrb
sti
and
add
addr16
xchg
mov
cmpsl
pop
rcrb
lahf
cld
faddl
jnp
add
add
popf
jo
add
pop
pop
pop
mov
cmp
add
dec
add
add
testl
add
sbbb
push
add
sub
sti
mull
add
cmp
mov
add
sbb
out
je
pop
dec
jg
xlat
fidivl
add
cwtl
jmp
pop
push
add
roll
add
mov
in
mov
push
xor
add
arpl
pop
aas
out
dec
int
fdivs
add
cmp
es
mov
fwait
xor
scas
pop
ljmp
dec
sahf
outsl
mov
scas
inc
add
ret
pop
inc
add
loope
loop
je
das
enter
pmaxub
jmp
out
js
lret
mov
fistpll
pop
mov
pop
or
pop
push
inc
push
add
push
arpl
fs
inc
pop
lods
sbb
add
add
out
cmp
jne
add
cwtl
sub
add
rcrl
adc
add
add
sbb
ljmp
jl
add
mov
mov
pop
cmpsb
pop
ret
pop
lret
xchg
pop
std
int3
iret
push
add
jle
aas
sbb
pop
or
add
in
sbb
sbb
jg
add
add
add
dec
es
in
rclb
add
push
movzwl
jmp
ret
sbb
add
xchg
xor
add
add
push
sub
cmpsb
pop
mov
mov
pop
das
xor
jmp
mov
add
cmc
xor
add
fsubl
pop
icebp
repnz
add
pop
leave
in
push
and
int3
les
add
pop
pop
adc
add
and
push
add
sbbl
mov
and
add
mov
pop
fwait
cltd
inc
pop
pop
mov
add
push
add
inc
pop
jo
add
ret
pop
inc
pop
icebp
pop
inc
add
or
pop
ljmp
inc
insb
insb
jmp
fildll
pop
testl
scas
jns
adc
add
pop
pop
pop
sbbb
mov
pop
or
pop
lods
pop
cld
enter
stos
jmp
arpl
fildll
aas
outsb
cmpsl
pop
popf
xchg
add
cmp
les
cmp
cmp
pop
and
add
xor
add
dec
push
insb
add
add
pop
mov
pop
outsb
push
insl
into
add
add
pop
mov
jg
jmp
arpl
cmpsl
pop
cmc
incl
jb
add
mov
mov
cmc
arpl
add
shrl
popf
jge
addr16
adc
adc
pusha
add
test
mov
add
add
add
push
add
xor
dec
mov
cli
dec
je
jb
add
mov
add
scas
in
aad
add
mov
xchg
cmp
pop
xchg
dec
rcrl
add
add
lea
add
or
add
add
or
adc
add
adc
add
add
lods
pop
pop
movsl
pop
and
add
jmp
add
add
fldcw
or
add
push
pop
jo
add
pop
xchg
test
js
or
fcoml
icebp
or
pop
pop
sub
pop
and
add
pop
aad
add
cmc
jmp
icebp
test
int
mov
pop
lock
pop
imull
add
sbbb
rcrl
or
add
add
fucomip
incl
repz
add
ret
mov
in
push
jle
lods
addr16
push
lock
add
or
pop
sub
add
in
fisubl
add
ja
jns
add
outsb
mov
roll
pop
loope
fidivrl
hlt
aaa
in
fiadds
add
je
add
jmp
add
add
add
mov
add
sub
lahf
pop
mov
pop
icebp
mov
cs
dec
cmc
dec
add
pop
mov
pop
jae
add
fidivrs
xchg
inc
pop
repnz
or
sahf
insb
mov
pop
mov
dec
and
add
loopne
xor
add
pop
cmpsl
pop
cmp
pop
sahf
pop
pop
pop
pop
mov
xchg
pop
sub
add
mov
js
add
xchg
lcall
add
pop
aas
lock
add
add
ret
pop
mov
add
repz
add
dec
or
pop
sbbb
pop
mov
in
xchg
lcall
push
jmp
and
adc
enter
add
dec
es
xchg
lcall
pop
repz
pop
test
rcrl
inc
pop
mov
mov
or
add
lods
pushf
add
pop
add
add
outsb
mov
pop
pop
fcmove
sbbl
pop
push
jb
pop
push
add
jne
leave
xor
add
imul
pop
jbe
in
mov
add
dec
sub
loope
scas
pushf
sbb
add
jns
sahf
jge
inc
pop
mov
add
xor
mov
shl
pop
pop
mov
pushf
add
add
testl
jmp
xor
mov
pop
pop
mov
add
pop
ds
aaa
and
add
push
imul
add
fbstp
xchg
add
add
inc
add
fs
jbe
sbb
adc
add
add
inc
add
pop
mov
pop
add
add
sbbl
adc
mov
mov
fcmovnb
pop
or
outsb
cmc
in
inc
add
mov
jne
cmpsl
pop
jo
add
push
das
lret
ljmp
mov
jo
add
enter
pop
aas
xchg
mov
add
clc
cs
aas
pop
jb
add
in
pop
addr16
mov
nop
push
ret
sub
lea
jmp
dec
arpl
iret
add
sbb
popa
add
movsb
pop
cli
loope
stos
inc
pop
test
pop
jo
add
stc
sar
lcall
flds
xchg
arpl
call
or
mov
add
or
jo
add
fnstsw
add
jno
add
add
test
test
mov
pop
pop
adc
add
pop
add
jmp
daa
push
fnsave
or
pop
rcrb
add
add
jmp
fucomip
xchg
xor
add
pop
ds
lods
xor
enter
gs
jae
add
test
hlt
push
lea
gs
xor
pop
jl
add
ja
fbstp
outsb
lret
dec
dec
mov
pop
or
bound
add
pop
pop
xor
shrb
insb
add
add
add
pop
xchg
xchg
pop
in
sub
add
adc
add
pop
lods
pop
add
add
add
jecxz
add
add
or
pop
mov
mov
shrl
add
jno
add
pop
sub
inc
add
jl
pop
cld
sbbl
leave
mov
outsb
rcll
add
nop
push
sbb
sbbl
xchg
xchg
jp
add
clc
sbbl
add
stos
mov
enter
add
aam
xor
add
icebp
cmpsl
pop
inc
add
scas
fimuls
mov
sbb
adc
add
dec
jo
add
add
leave
xor
add
packuswb
test
das
cwtl
rcll
add
mov
add
adc
add
and
add
dec
cli
xchg
lcall
pop
popl
add
mov
add
mov
add
and
add
or
jl
or
ret
pop
inc
pop
aad
mov
push
jmp
or
arpl
arpl
cltd
pop
xor
fistpll
shll
add
add
dec
mov
loopne
iret
jg
pop
mov
sar
push
dec
lahf
pop
jl
add
clc
fisubs
adc
add
pop
outsb
xchg
xor
pop
cpuid
pop
filds
ss
pop
pop
lahf
sub
pop
or
jnp
shl
imul
and
add
push
pop
ret
pop
cmp
add
test
push
les
pop
arpl
add
mov
test
pop
add
add
pop
sti
cmp
inc
add
inc
add
shll
jmp
push
sti
push
lods
addr16
in
jmp
push
add
inc
pop
push
jns
add
push
add
add
mov
pop
cmc
and
add
sbbl
shll
mov
jmp
test
push
or
pop
imul
pop
push
stos
out
iret
mov
add
xchg
cmp
add
cmp
stos
addr16
jecxz
stc
jmp
mov
add
arpl
cmp
arpl
je
pop
mov
pop
loopne
cmpsb
pop
add
add
adc
add
movsb
pop
mov
imul
insb
cltd
lods
inc
add
mov
add
out
mov
pop
stos
imul
sub
adc
add
icebp
pop
mov
pop
test
pop
lret
loopne
jnp
insl
faddl
add
add
add
mov
sbb
push
out
cld
cmp
pop
xchg
xchg
xlat
sahf
stos
ja
pop
lods
notb
adc
push
mov
ljmp
adcb
mov
ret
pop
out
aam
pop
clc
sbbl
pop
jecxz
pop
pop
lahf
shlb
sbbl
jmp
shrb
pop
dec
mov
inc
pop
mov
cmp
popa
add
fidivs
pop
xchg
lret
push
sub
pop
ret
pop
jnp
pop
push
add
aaa
loop
decb
hlt
sarb
jge
pop
sbb
push
xchg
pop
push
add
negl
xchg
mov
addr16
xor
add
pop
or
insl
addr16
pusha
add
sbb
iret
mov
add
pop
and
add
addr16
out
rolb
add
add
pop
stos
add
add
test
pop
mov
int
pop
pop
cmp
add
add
and
add
add
push
les
pop
in
push
add
mov
add
add
add
jg
pop
push
add
pop
stc
mov
cmp
xchg
lret
outsb
xchg
dec
jmp
cmp
pop
add
add
push
ret
into
jne
push
scas
movsl
pop
ret
pop
dec
cs
add
stc
sub
sbb
pop
pop
jp
pop
mov
or
add
push
in
nop
mov
lcall
in
pop
xor
add
pop
mov
cmp
add
shl
pop
mov
xor
add
add
jge
push
inc
pop
inc
add
loop
sbbb
add
adc
lcall
pop
or
sub
pop
icebp
inc
pop
jo,pt
add
pop
xchg
sub
pop
cmc
and
add
add
test
pop
push
add
cmp
add
mov
dec
add
ja
add
dec
lahf
mov
add
add
adc
add
repz
dec
ret
add
adc
add
push
sbb
jno
add
and
add
cld
jnp
fsubr
daa
pop
mov
lods
adc
add
clc
in
mov
push
pop
leave
in
or
pop
ret
out
and
add
add
adc
add
mov
jmp
or
inc
sbbb
add
or
loop
adc
add
pop
fmull
mov
pop
push
cmp
add
mov
or
rep
jmp
add
fs
mov
add
fiaddl
pop
xchg
jecxz
mov
pop
inc
add
popf
shlb
add
dec
inc
pop
xor
add
test
sub
add
mov
pusha
nop
push
ret
cmc
aaa
or
dec
inc
pop
sub
inc
pop
or
lds
pop
stos
sbb
or
jmp
jne
arpl
lea
loop
inc
pop
cmpsl
pop
add
rorl
aad
aam
add
negb
lods
or
popf
push
xor
add
xchg
push
add
fldl
mov
jmp
mov
pop
imul
jmp
pop
lret
icebp
fs
sbb
pop
nop
push
ret
arpl
dec
arpl
mov
add
push
call
jmp
ret
arpl
sbb
jnp
cmp
mov
add
das
ret
pop
fildl
add
jmp
cmp
push
cmp
lret
add
add
add
loopne
dec
out
cmp
add
add
mov
add
outsb
sbb
add
jle
xchg
arpl
add
add
not
xor
add
outsl
and
add
add
pop
jns
adc
add
pop
std
fs
cmp
stos
and
add
int3
addr16
jne
loope
in
jle
pop
push
pop
stc
test
insl
clc
sbb
aaa
add
test
pop
mov
dec
in
xchg
icebp
push
add
lock
sbb
add
push
mov
sbbb
xchg
cs
mov
repz
testb
pop
mov
sbb
out
movsl
pop
sbbl
pop
leave
daa
pop
out
ds
push
pop
dec
in
lret
lea
mov
rcrl
dec
cmp
divps
add
rcrb
sbbb
adc
add
dec
popa
add
or
hlt
stos
sbbb
mov
sub
jmp
daa
filds
arpl
add
pop
jmp
pop
pop
mov
inc
pop
mov
push
fadds
outsl
les
xchg
push
push
ret
arpl
add
add
dec
fcmovbe
fisttps
add
pop
hlt
push
call
jmp
arpl
pushf
and
push
push
mov
cmp
cmpl
inc
or
fst
pop
icebp
sbbl
add
ficomps
mov
jmp
cmp
add
cld
insb
cmp
sbb
loopne
cmpsb
pop
inc
add
mov
fstps
mov
add
add
test
pop
outsb
stc
and
scas
fcoml
and
add
add
es
rcrl
add
add
mov
pop
sbbl
jmp
das
mov
addr16
outsl
or
add
fistpl
push
jb
add
xor
add
movsl
pop
je
or
pop
mov
pop
xchg
or
add
xchg
cmp
jecxz
xor
test
xchg
xor
pop
xlat
and
add
pop
mov
pop
lea
jmp
add
cltd
sti
out
pop
lret
pop
pusha
add
aas
out
les
pop
push
cmpsb
pop
into
idivl
xor
pop
push
mov
pop
pop
mov
add
call
lcall
ja
lods
lods
arpl
add
fnsave
mov
add
lock
stc
ret
add
mov
in
cmpsl
pop
push
movsb
pop
add
xchg
jp
pop
xchg
addr16
je
testb
adc
std
mull
add
mov
sbb
shr
mov
lcall
test
adc
add
add
call
scas
sub
mov
nop
push
mov
jmp
and
arpl
dec
sbb
or
incl
jne
jmp
or
add
add
add
je
push
inc
pop
out
xlat
inc
add
dec
xor
add
pop
adc
notl
add
rcrl
pop
pop
inc
add
mov
add
push
xchg
icebp
xchg
sub
bound
add
sub
ret
pop
xchg
sbbl
cmp
sub
fbld
mov
add
aaa
mov
pop
mov
push
test
sti
or
sti
pop
cwtl
les
jge
pop
insb
ret
inc
pop
and
stc
push
add
scas
mov
adc
add
add
pop
in
test
push
ljmp
scas
jmp
outsl
daa
sub
ss
xchg
add
rcrb
outsb
jle
sub
pop
cld
sbbl
or
add
ret
pop
add
add
les
notb
add
jmp
push
add
pop
push
insb
push
scas
jle
repnz
add
aas
mov
xor
add
pop
dec
adc
xor
add
es
int
add
cmpsb
pop
adc
add
adc
rcrl
mov
pop
jmp
pop
shlb
pop
jns
add
jo
add
add
add
sbb
cltd
aad
lcall
mov
xchg
test
xchg
and
add
add
aad
pop
cli
ljmp
add
incl
add
push
pop
outsl
sbbb
push
inc
add
mov
jbe
add
xchg
repz
int
dec
or
int
jne
lret
add
pop
mov
pop
sbb
inc
add
pop
xlat
sub
pop
bound
add
pop
fs
mov
js
cwtl
orps
scas
xchg
adc
add
add
add
add
pop
test
sbb
or
add
int
cmp
ss
cmp
mov
pop
dec
mov
and
rcl
fidivrl
outsb
push
mov
jmp
arpl
cmpsl
jp
mov
cmp
add
cmp
pop
sub
pop
test
mov
mov
add
test
pop
mov
aas
xchg
mov
push
sub
les
fs
std
add
add
sbb
add
fidivrl
pop
cmp
add
add
add
xchg
test
add
addr16
daa
pop
pop
idivl
das
ja
and
add
mov
pop
mov
and
add
add
movsl
pop
xchg
mov
add
adc
add
mov
pop
jbe
jnp
ret
pop
or
sub
ror
nop
pop
xor
push
nop
push
ret
ret
sbb
push
jmp
ds
and
pop
cmp
pop
pop
push
add
stc
sahf
in
insb
lcall
add
mov
test
testb
imul
inc
add
push
add
cld
movsl
pop
mov
in
jnp
push
int
cs
sub
add
add
add
add
ror
and
rcrl
add
pop
into
lock
aam
pop
test
pop
xchg
insl
adc
mov
add
imul
cmpsb
pop
cmp
mov
add
ja
pop
out
sbbl
dec
push
add
addr16
xor
add
pop
in
adc
add
add
mov
cmpsb
pop
mov
pop
inc
pop
jg
mov
scas
cmp
pushf
lret
sub
pop
push
pop
pop
jmp
pop
pop
xchg
outsb
scas
int3
mov
pop
fsubrl
pop
mov
xor
add
movsb
pop
mov
or
mov
jmp
mov
adc
fdivrl
loope
mov
mov
add
add
incl
pop
and
fsub
pushl
dec
dec
call
psadbw
mov
add
adc
add
push
push
mov
add
add
add
jmp
imul
cmpsl
pop
push
add
xor
add
inc
add
push
addr16
cs
pop
xchg
loopne
push
fmuls
sub
lahf
sbb
pop
in
outsb
dec
in
push
jne
lcall
ret
dec
sbb
stos
push
add
ss
push
jp
add
mov
aam
mov
pop
adc
add
mov
ss
movsb
pop
jle
in
pop
out
das
push
loop
pushl
or
divl
add
adc
add
push
add
test
dec
push
add
push
ss
add
sbbb
jae
add
add
das
xor
add
cmpsl
pop
in
pop
xchg
add
add
int
addr16
and
add
pop
jns
out
addr16
movsb
pop
les
pop
and
add
lods
add
add
gs
call
pop
aaa
adc
lahf
shlb
dec
in
mov
add
mov
push
sub
add
add
xor
add
pop
bound
add
add
add
out
pop
add
push
pop
pop
sbb
add
push
push
jmp
mov
add
add
pop
stos
pushf
pushf
sbbl
add
rcrb
jg
cmc
jae
add
add
or
test
out
stos
sbb
je
and
add
inc
add
clc
stos
jnp
sarl
enter
jge
jmp
mov
and
in
and
jmp
lods
xchg
pop
arpl
repz
das
pop
jmp
shr
lcall
dec
adc
cmc
iret
clc
arpl
add
push
jmp
pop
andb
push
add
jae
add
das
fldt
pop
inc
pop
imul
fst
aaa
mov
nop
jns
addr16
fucomi
mov
lahf
push
mov
scas
cmp
ret
pop
jo
add
aad
int
add
gs
enter
jnp
daa
pop
fiaddl
add
add
lea
add
in
push
add
and
add
pop
inc
pop
sbbb
popf
ss
add
movsl
pop
or
jb
add
pop
dec
add
pushf
adc
add
add
in
adc
add
mov
pop
lcall
int
decl
ds
add
ret
mov
pop
mov
add
jmp
or
pop
pusha
add
jno
add
sahf
dec
sbb
add
pop
sub
add
mov
cld
cmpsb
pop
xchg
sbbb
cmp
fcom
inc
add
and
pop
loop
or
jne
jmp
ljmp
push
sub
pop
pusha
add
fs
ffree
pop
rcrb
mov
shl
pop
dec
push
shr
decl
test
pusha
add
in
adc
add
adc
add
in
je
or
jbe
inc
pop
push
aas
std
fbld
add
dec
lcall
xor
add
mov
enter
sbbb
add
sub
add
loopne
mov
test
sbb
push
push
add
push
xchg
inc
pop
cmpsl
pop
dec
push
pop
adc
add
push
imul
cmp
out
jb
add
pop
daa
pop
in
scas
or
jmp
fldenv
arpl
mov
mov
repnz
mov
add
mov
and
mov
add
push
pop
jno
add
dec
aad
pop
xchg
pop
mov
test
pop
jl
sbbl
pop
dec
push
in
shll
add
lea
sbbb
test
mov
sub
in
lahf
push
adc
add
cmp
pushf
aam
leave
outsl
and
loope
jb
add
adc
inc
add
stos
sbb
pop
les
push
mov
jmp
outsl
cmpsl
push
dec
int3
sbb
push
xchg
mov
xchg
jecxz
es
jae
add
xor
add
add
cwtl
push
add
popf
push
add
pushf
pop
xchg
pushf
sbb
pop
push
add
sbbl
add
jge
add
add
cld
push
add
add
mov
add
cmc
dec
dec
push
pop
push
cmpsb
pop
pop
insb
gs
lods
or
or
jge
pop
sbb
add
stc
fldt
jb
add
shr
mov
push
cmp
add
add
add
insl
call
sub
add
dec
lock
outsl
js
add
jae
add
pop
mov
pop
xchg
lods
cmc
adc
add
scas
xchg
cmp
pop
in
cmp
jno
add
hlt
stos
sbb
and
add
pop
scas
sbbb
xlat
aad
popa
add
cld
xchg
pop
xor
add
push
add
iret
dec
lods
lock
push
into
xchg
mov
mov
iret
in
jnp
mov
cli
mov
mov
cmc
hlt
push
add
movsb
pop
out
in
push
add
jae
add
add
ljmp
into
and
add
mov
pop
xchg
dec
sub
add
add
xor
shll
mov
inc
pop
movsb
pop
fxch
inc
pop
lds
and
add
mov
popa
add
adc
and
add
jmp
sbb
mov
mov
mov
add
out
test
gs
mov
dec
xor
cs
sub
pop
in
xchg
cs
jmp
jmp
lods
xchg
bnd
jbe
mov
pop
jle
or
pop
pop
pop
adc
add
call
mov
pop
xor
add
cmp
add
in
mov
insb
pop
gs
test
pop
push
push
jmp
dec
mov
div
js
rcrb
js
test
dec
and
and
pop
hlt
push
add
jbe
pop
les
ljmp
xor
add
jge
mov
sbb
xor
add
add
xchg
sbb
sbb
in
inc
add
mov
add
ucomiss
sub
xchg
cmpsl
pop
cmc
frstor
add
gs
inc
add
dec
stc
jl
pop
aas
pop
and
inc
pop
stos
xchg
cmp
sbb
pushf
arpl
or
das
pop
xchg
sub
inc
add
mov
leave
enter
mov
sbb
loope
or
push
out
mov
or
jle
pop
roll
add
call
pop
paddusw
mov
and
add
pop
pop
pop
jae
add
pop
mov
dec
jno
add
add
out
add
add
pop
sbbl
add
push
in
sub
hlt
push
add
aas
es
outsl
in
xchg
pop
aam
add
int
add
or
pop
hlt
jbe
pop
movsl
pop
inc
add
cli
mov
jbe
test
jno
add
pop
mov
out
mov
add
add
sub
lcall
add
add
add
gs
xor
add
call
mov
xor
add
movsb
pop
rclb
add
enter
arpl
add
add
mov
adc
add
pop
add
add
xchg
enter
pusha
add
inc
pop
add
add
mov
mov
add
pop
inc
pop
pop
pop
into
sbb
daa
pop
insb
rol
pop
add
add
imul
les
sbb
decl
xchg
and
hlt
aas
xlat
mov
out
xchg
pop
fdivrl
add
add
pop
pop
inc
pop
daa
pop
xchg
sbbb
add
xchg
lock
pop
pop
fstp
and
add
pop
imul
pop
insb
mov
xor
inc
add
arpl
dec
mov
repnz
pop
sbb
lcall
add
cltd
jns
lcall
in
add
shll
add
fs
sub
add
jb
add
aaa
push
movzwl
jmp
xchg
test
sarl
cmc
std
je
add
jae
add
call
int
xlat
or
insl
jbe
dec
pushf
mov
cmp
jmp
dec
sbb
std
xchg
mov
add
sub
shl
pop
ja
pop
lret
movsb
pop
jnp
xor
add
sbb
pop
and
add
in
inc
pop
pop
sbbb
add
jne
jmp
inc
mov
test
pop
jne
ds
push
add
pop
push
test
sahf
sub
sbb
into
imul
xchg
pop
hlt
imul
pop
mov
push
push
jmp
dec
arpl
jp
push
pop
push
add
aaa
cmp
pop
std
sub
inc
pop
xor
add
add
xor
add
add
inc
jmp
arpl
jmp
enter
arpl
repnz
add
pop
repz
add
ret
pop
cmp
pop
lds
jbe
xor
add
into
xchg
mov
dec
and
add
add
movsl
pop
xchg
sbb
add
add
inc
pop
dec
je
pop
sbb
sub
mov
pop
loop
dec
in
stc
call
add
add
popa
add
push
pop
xchg
pop
mov
aad
stos
dec
into
mov
daa
pop
dec
mov
sub
cmp
pop
outsl
inc
pop
int
call
add
lock
lods
inc
pop
pop
mov
enter
arpl
add
inc
pop
sub
pop
or
lahf
scas
lret
add
ror
mov
pop
mov
cmp
mov
pop
ret
pop
arpl
add
pop
inc
pop
add
add
pop
sbb
xor
add
sbbl
xchg
jmp
arpl
in
push
xor
push
dec
cwtl
dec
adc
add
jge
add
pop
push
daa
pop
mov
pop
aad
push
rdmsr
add
pop
push
add
jmp
pop
push
pop
insb
inc
pop
inc
add
pop
xchg
dec
jns
jge
add
inc
pop
loope
nop
je
pop
push
into
push
popa
jmp
pop
or
arpl
xor
mov
mov
pop
hlt
inc
add
cmc
ljmp
or
pop
inc
add
cmp
clc
inc
pop
stc
sbbb
sbb
pop
add
add
push
nop
push
ret
arpl
aaa
cmp
mov
stos
sub
mov
xlat
ljmp
add
jle
mov
add
fmul
xor
add
test
push
add
incb
test
aad
out
ljmp
pop
gs
fnstcw
addr16
sti
psraw
pop
rorl
leave
addr16
call
dec
dec
add
xor
adc
xor
out
cmp
add
sbbl
sub
pusha
add
dec
out
movsb
pop
in
call
cmp
add
daa
pop
enter
add
xchg
pop
cmp
xchg
jb
add
ret
pop
in
lret
push
ret
jmp
aam
pop
out
in
mov
jp
pop
int
xchg
add
add
call
cmp
add
fists
out
mov
loope
lds
sahf
addr16
lods
push
movsl
pop
lcall
push
ret
fldenv
push
mov
add
add
pop
and
add
add
mov
in
mov
outsb
adc
add
add
add
inc
pop
mov
add
lods
out
push
or
test
and
jp
lahf
jp
xchg
fcoml
pop
cld
cmc
pop
test
dec
fwait
add
add
int3
cltd
or
stos
push
pop
fdivl
add
add
ja
add
jp
xor
add
lahf
lds
js
lock
mov
jmp
arpl
sub
pop
jne
add
arpl
add
test
cmc
pop
add
add
out
cmp
or
ss
add
int
adc
add
push
add
lcall
pop
test
mov
dec
pop
push
int
and
add
cmpsl
pop
push
aad
pop
cmp
mov
and
add
pop
add
add
add
jnp
pop
jns
das
jns
xchg
pop
cs
push
add
test
add
iret
pop
loope
in
adc
add
pop
mov
pop
xchg
out
xlat
ficompl
add
in
xchg
test
add
mov
cmpsb
pop
rol
pop
pop
jmp
add
pop
pop
cmp
daa
pop
stos
mov
sub
xchg
pop
lods
cmp
mov
add
shll
push
add
jl
add
add
call
add
adc
add
add
pop
mov
pop
clc
mov
sti
bnd
sbb
sbb
add
test
aas
jno
add
mov
lds
pop
insb
aaa
repz
pop
inc
pop
push
inc
pop
pop
and
add
inc
add
sbbl
pop
inc
pop
xchg
imul
mov
dec
insl
leave
insb
test
mov
pop
int
pop
and
fldl
cmp
add
jmp
add
imul
lahf
jge
pop
rclb
mov
xlat
jb
add
test
sbbb
sahf
mov
sti
pop
enter
pop
push
add
mov
inc
pop
jle
stc
xchg
pop
shll
add
test
imul
fstpt
add
mov
test
imul
jmp
cmc
sub
stos
pushf
and
add
or
pop
pop
push
add
ja
cmc
adc
add
es
rorb
xor
add
pop
jmp
add
pop
jle
pop
xor
add
pop
lret
hlt
push
fbld
dec
mov
mov
int3
sbb
jmp
xchg
xor
pop
out
mov
add
pop
std
lahf
jbe
add
inc
pop
cmpsb
pop
and
add
pop
in
aaa
sub
and
stos
ret
pop
nop/reserved
sub
mov
dec
inc
pop
aas
dec
rcrb
cmp
sub
add
pop
or
lea
pop
test
pop
sbb
mov
in
add
add
add
mov
sbb
xchg
es
movzwl
jmp
push
and
mov
add
cmpsb
pop
mov
fsubrs
or
pop
fdivs
loopne
arpl
add
mov
pop
arpl
add
add
sub
jno
add
add
ja
sbb
xchg
aam
cs
call
jmp
pop
enter
inc
add
or
add
cmp
test
add
push
push
push
ret
arpl
mov
pop
fmull
mov
jge
add
sub
pusha
add
sub
sub
pop
fiaddl
cli
add
add
repnz
jnp
mov
mov
std
jae
add
push
sahf
fwait
pop
push
je
jmp
add
scas
es
inc
add
inc
pop
mov
test
pop
pop
push
mov
scas
out
jnp
xor
xor
add
pop
xchg
fcomps
pop
lret
repnz
in
repnz
sbb
sbbb
add
sub
lods
inc
add
sbb
in
add
cli
cmp
jle
pop
cmp
add
xlat
dec
inc
pop
or
rcrl
je
ds
and
add
pop
push
add
and
add
mov
repnz
sbb
in
xchg
add
les
sbb
add
pop
and
add
iret
sbb
loop
ds
xlat
jb
add
sbbb
leave
xor
add
pop
mov
add
out
add
add
nop
inc
add
xchg
mov
sub
fdivp
jb
add
lock
or
mov
push
add
gs
repz
stos
or
jge
xchg
mull
inc
add
lods
adc
add
pop
jne
stc
push
xor
add
out
pop
fsts
add
ja
push
xor
pop
xor
add
pop
push
and
add
pop
icebp
rcll
inc
pop
xchg
xchg
adc
add
add
dec
les
add
mov
sub
jl
adc
add
inc
add
push
push
mov
pop
push
mov
jo
add
pop
push
add
inc
pop
std
jmp
stc
lds
arpl
add
and
add
xchg
imul
es
in
xchg
aam
adc
add
add
add
add
push
add
xlat
adc
add
cmpsl
pop
in
lahf
sbb
loope
inc
add
jnp
xor
pop
adc
add
int
add
arpl
add
add
add
je
lock
jg
popa
add
fbstp
pop
popf
pop
pop
mov
add
in
test
pop
aad
add
fcmovne
mov
or
pop
scas
bound
add
fsubl
pop
rep
in
jno
add
fsqrt
dec
jmp
stos
mov
pop
inc
pop
lods
mov
ret
pop
jmp
inc
add
mov
sbbl
add
add
pop
pushf
loopne
jmp
mov
pop
and
insl
fwait
decl
test
xor
add
xchg
sub
add
and
add
mov
mov
lods
push
gs
in
fdivl
cmp
push
sti
imul
cmp
pop
sbbb
fisubrl
add
xchg
inc
pop
mov
jae
add
pop
fidivrs
pop
sahf
addr16
test
sbbb
push
add
cmpsl
pop
push
add
lods
xor
add
pop
or
test
sbbl
jmp
and
loop
jae
add
pop
rcrl
add
adc
add
add
pop
lret
add
lahf
or
rol
pop
cmpsb
pop
inc
pop
cli
mov
pop
mov
push
mov
mov
xchg
jl
lds
add
pop
cmp
lods
cmpsb
pop
push
jne
jmp
pushf
adc
cmp
xor
pop
pop
lcall
add
jnp
pop
pop
or
popa
add
testl
pop
daa
pop
mov
add
xchg
mov
pop
lds
daa
pop
stos
push
cs
shrl
xchg
xchg
add
add
add
sub
pop
xchg
aad
xor
add
mov
sbbb
std
add
add
jge
pushf
dec
xchg
dec
dec
stc
lcall
add
pop
mov
mov
jmp
cmpsl
mov
daa
push
pop
cmp
mov
jmp
arpl
add
mov
or
andb
fxrstor
repnz
mov
push
jne
jmp
arpl
pop
fdivl
add
clc
loope
rorl
add
in
add
add
cmp
mov
popf
sub
rolb
cmp
sub
add
and
add
add
adc
daa
pop
or
add
in
lea
pop
or
in
pop
lds
pop
sbbb
add
ficomps
inc
pop
xchg
mov
add
pop
bt
add
int
push
push
jmp
inc
cmp
inc
add
or
add
pop
pop
jnp
or
cs
hlt
repz
xchg
inc
add
test
mov
inc
pop
xchg
ret
pusha
add
test
inc
pop
jecxz
push
add
jle
daa
pop
addr16
cmc
ja
iret
push
loope
mov
add
pop
sbb
add
out
pop
push
out
or
dec
mov
pop
stos
dec
lds
repz
clc
push
add
pop
cmpsb
pop
pop
mov
add
dec
push
add
xor
add
pop
in
imul
icebp
mov
mov
rcrl
add
push
jmp
sti
add
ret
arpl
add
mov
add
es
pop
pusha
add
popf
mov
fcoml
pop
cmp
push
inc
add
dec
and
dec
sub
fcomps
mov
jmp
or
daa
int3
dec
in
pop
pop
lcall
pop
sub
mov
mov
sbbb
pop
pop
aad
pop
inc
add
mov
mov
jae
add
inc
pop
pushf
dec
cmp
xchg
cmp
cmp
sbbb
je
push
pop
mov
test
pop
sub
jbe
insb
imul
lcall
mov
pop
mov
fsubrp
popf
movsb
pop
inc
pop
loopne
jnp
adc
add
add
pop
cs
push
dec
mov
pop
sub
daa
pop
cmp
mov
pop
xor
add
add
mov
add
add
inc
pop
outsl
xlat
mov
dec
xchg
ret
add
push
into
lods
ss
or
push
push
rcll
fstpl
pop
pop
popa
add
add
pop
repz
insl
imul
sub
add
dec
fildl
add
add
nop
cmpsb
pop
mov
sbbb
mov
push
add
dec
adc
add
dec
mov
shll
add
es
xor
xchg
pop
mov
add
idivb
mov
xchg
sub
popa
add
stos
mov
adc
add
adc
add
add
int3
dec
gs
mov
addr16
pop
lds
mov
dec
ret
add
ret
pop
pop
pop
loop
adc
add
cli
pusha
add
lds
bnd
add
push
add
push
pop
leave
mov
fwait
jne
add
jae
add
xchg
pop
test
add
xor
add
xchg
xchg
popf
fdivs
add
nop
mov
dec
inc
pop
pop
push
jb
add
inc
add
inc
add
mov
mov
add
add
add
add
imul
inc
add
push
daa
pop
cmpsl
pop
push
add
outsb
test
adc
add
mov
jecxz
pop
jl
dec
iret
and
add
pop
mov
dec
enter
ret
add
xchg
fiadds
add
movsl
pop
imul
shl
pop
movsb
pop
rcrl
lcall
repz
add
int
into
enter
insb
negl
or
pop
jb
add
add
pushf
push
sahf
rcll
add
test
outsl
jnp
clc
sbb
bound
add
sbbl
imul
xchg
add
add
sub
fwait
mov
cmp
jge
add
add
aad
pop
in
lods
fsubrs
and
cmp
jecxz
fiaddl
push
in
dec
jnp
add
pop
fnsave
add
cmp
add
cltd
stos
sbb
adc
jmp
xor
cmp
xor
add
in
aad
shlb
pop
daa
pop
xchg
add
add
out
les
enter
adc
add
add
fs
rcrb
xlat
adc
add
or
pop
mov
jno
add
outsl
or
pop
inc
add
addr16
shrb
push
xor
add
push
pop
nop
push
ret
arpl
sub
clc
mov
push
pop
in
push
mov
pop
jno
add
dec
ss
pop
sbb
add
cmp
add
pop
cmp
add
repz
pop
rcrl
sbbl
xchg
js
cmp
pop
mov
mov
pop
sbbl
mov
jo
add
pop
xor
add
nop
inc
pop
icebp
sbb
fcmovbe
js
pop
cs
dec
pop
ljmp
sub
add
ljmp
add
jns
jp
and
rcrb
outsl
pop
xor
pop
cld
mov
ds
test
mov
xchg
arpl
add
mov
jmp
ljmp
les
pop
sbb
js
insl
inc
add
adc
add
sbb
mov
pop
push
cltd
mov
jmp
addb
pop
inc
pop
insl
test
pop
dec
mov
pop
rcrb
inc
add
insb
testb
add
adc
test
imul
add
out
sti
pop
push
cmpsb
pop
cmp
add
shrl
add
add
not
dec
xchg
xchg
add
add
mov
mov
sbb
test
cmp
cmpsl
pop
cltd
sbbl
fistps
cmp
sub
add
push
cmpsb
pop
mov
sbbb
pop
test
jge
xchg
iret
sbb
sbb
add
in
inc
pop
lock
mov
add
dec
cwtl
push
add
mov
mov
add
or
push
push
inc
pop
fwait
mov
sahf
dec
xor
add
add
sbb
in
ficompl
aam
icebp
into
in
jbe
inc
add
jg
pop
mov
sbb
pop
adc
cli
outsb
push
add
fldl
cld
cmc
inc
pop
setp
cwtl
xor
adc
add
dec
xchg
add
jmp
jne
dec
arpl
fmuls
add
sbb
sbbl
pop
or
pop
pop
sahf
sub
jb,pt
jmp
pushf
adc
pop
pop
mov
pop
mov
jecxz
add
cmc
mov
cmp
add
pop
mov
add
dec
inc
add
out
fiadds
add
mov
add
and
add
mov
sbb
adc
in
rcrl
sub
adc
add
dec
jae
add
add
sub
cmpsl
pop
js
pop
rorl
sbb
pop
stos
in
inc
pop
aas
pop
jecxz
xor
add
dec
xor
add
pop
add
add
das
adc
add
mov
add
adc
push
mov
pop
push
mov
push
ret
ds
jl
add
mov
ja
and
add
mov
mov
mov
add
add
add
push
add
les
pop
cmpsl
pop
hlt
mov
add
add
test
push
add
lds
mov
jmp
dec
dec
mov
add
add
add
loop
adc
stos
pushf
cld
mov
add
pop
flds
sar
inc
pop
sbbb
lahf
mov
imull
inc
sub
repz
add
aam
dec
inc
xchg
jae
add
clc
mov
pop
lock
add
in
sbbb
lea
dec
ret
pop
in
sarb
repz
fptan
std
clc
rorl
dec
pop
movsb
pop
rcr
mov
push
add
pop
or
outsl
jle
add
in
lods
ficoml
aam
fbstp
add
pop
mov
add
fidivl
add
push
ret
and
adc
push
les
push
add
arpl
add
cwtl
jno
add
mov
jmp
pop
push
mov
mov
sbb
hlt
lods
rcrb
add
add
bound
add
loope
pusha
add
or
cmpsl
pop
lahf
addr16
and
add
pop
lret
jmp
nop
or
test
add
cmp
shr
jns
pop
lret
pop
addr16
push
add
mov
pop
repz
bound
add
lret
push
add
sub
cs
add
jmp
xor
fbld
add
jmp
lods
dec
and
cmp
or
sub
bound
add
std
xor
test
jno
add
pop
sbbb
mov
xor
add
add
fists
mov
sbb
lcall
pop
mov
lcall
cmp
pushf
mov
call
pop
xchg
add
call
adc
add
add
add
add
imul
add
ror
nop
push
ret
xchg
add
fyl2x
repz
mov
pop
mov
stos
les
cmp
jmp
jbe
mov
lock
cli
das
lret
adc
mov
pop
xor
push
call
arpl
push
push
ret
jmp
lret
lock
add
mov
add
add
aas
jb,pn
add
pmuludq
gs
shrb
and
xchg
cmpsl
pop
je
addr16
mov
cmp
add
adc
jmp
inc
push
arpl
decl
xchg
inc
pop
mov
pop
sti
pop
out
add
add
mov
icebp
lods
jo
add
mov
add
add
adc
add
and
add
fdivs
and
add
pop
xchg
pop
jnp
xchg
es
pop
dec
dec
sarb
add
pop
cmc
and
pop
mov
insb
or
add
and
add
pop
fcoms
fwait
jge
mov
add
add
lret
push
outsl
mov
add
sub
mov
pusha
add
xor
add
pop
xchg
push
dec
dec
or
and
add
or
sbb
sar
or
arpl
scas
cmp
sti
in
hlt
inc
add
fidivl
pop
cmp
add
in
lods
mov
add
add
sbbl
jmp
or
or
or
push
scas
daa
pop
or
cmp
add
and
add
add
pusha
add
sub
arpl
add
add
aaa
ss
jne
jmp
ljmp
mov
push
add
std
cmpsl
pop
out
out
into
iret
and
add
push
add
lods
push
fldenv
add
mov
test
arpl
and
add
fldenv
mov
mov
ljmp
add
pop
pop
adc
pop
cs
add
mov
inc
add
mov
pop
sub
or
pop
jp
pop
clc
movsb
pop
cltd
and
pushf
jnp
sbb
sbb
add
js
dec
call
add
mov
pop
loopne
pop
outsb
pusha
add
gs
ds
add
add
add
mov
add
sti
fs
mov
sub
xor
mov
or
ds
add
mov
push
sub
cmp
add
add
js
jbe
rcr
mov
push
jmp
adc
arpl
arpl
nop
jae
add
mov
stos
push
sub
mov
pop
mov
lds
fwait
and
add
pop
xor
inc
add
mov
pop
xchg
ja
js
cmp
or
add
das
jb
add
add
pop
pcmpgtw
dec
and
rcr
push
push
add
mov
fiaddl
add
hlt
mov
dec
dec
add
add
mov
jbe
add
arpl
aam
pop
imul
add
scas
push
cld
push
add
out
mov
pop
ljmp
xor
bnd
sbb
arpl
push
add
jnp
inc
add
lahf
out
push
dec
xor
add
sbb
es
adc
xlat
je
sub
scas
push
pop
push
mov
pop
or
js
aam
mov
add
inc
pop
aam
cmp
cmpsb
pop
cld
leave
ret
pop
fnstsw
cmp
adc
add
and
pop
aaa
and
add
pop
dec
ja
mov
iret
icebp
push
jmp
ret
arpl
lea
add
pop
mov
add
add
out
xchg
add
pop
in
sti
jecxz
int3
pushf
repnz
push
enter
mov
stos
sbb
pop
push
mov
jg
or
push
js
sbb
or
cmpsl
pop
cmp
sub
pop
lret
test
das
pop
pop
pop
pop
psrlw
pop
out
stos
ljmp
sub
pop
cmp
sub
pop
adc
add
std
sub
jmp
pop
mov
pop
cmp
test
add
test
pop
rorb
sbbl
cmp
add
test
or
rcrl
daa
pop
fmull
ret
pop
mov
pop
cld
idivb
test
in
mov
jbe
mov
adc
add
pop
cli
outsb
push
add
add
add
pop
out
xor
add
lods
nop
sbbb
popa
add
jno
add
cmp
inc
pop
daa
pop
add
jno
add
and
add
pop
xchg
pop
fwait
call
pop
mov
add
add
add
add
add
sub
fstl
add
insb
push
add
add
add
out
jmp
pop
shll
add
push
lea
fcomps
cmp
fs
rol
pop
pop
bound
add
cmp
pop
xchg
jnp
or
in
mov
adc
add
lds
sahf
mov
cmp
dec
cltd
mov
add
hlt
loopne
push
jle
fdiv
jne
lea
add
cmp
add
and
scas
sub
popa
add
scas
outsb
mov
ret
pop
cmp
pop
sahf
pop
cmp
in
dec
xor
add
ss
aaa
pop
sbb
in
rorl
jmp
add
outsl
lods
sbb
dec
jmp
lods
pop
xor
inc
pop
jae
add
pop
cwtl
xchg
xlat
jmp
jbe
test
pop
fstl
das
sub
jns
insb
dec
or
add
mov
popa
add
stc
xor
add
hlt
pop
es
inc
add
sbb
pop
lds
pop
xchg
push
xchg
test
inc
add
sbbl
out
aas
leave
cmp
lds
mov
add
add
fsts
xchg
in
enter
stos
test
inc
add
sbb
xchg
xchg
daa
pop
mov
sahf
popf
out
pushf
mov
sub
add
test
sbb
pop
inc
pop
cltd
adc
add
pop
and
add
cmpsl
pop
add
add
repnz
mov
pop
inc
add
cmpsb
pop
ja
imul
popf
and
add
fwait
mov
pop
addr16
into
dec
and
add
hlt
mov
add
mov
jp
xchg
rcrl
jne
scas
xchg
adc
pop
mov
rolb
push
dec
lds
movsl
pop
sbbl
in
sub
cli
sbb
xor
pop
leave
mov
fstl
pop
cmp
add
pop
out
and
add
pop
xor
add
add
push
cmp
add
cmpsb
pop
lret
mov
sub
add
cld
or
add
rcrl
add
dec
les
and
fldl
inc
pop
jbe
jmp
mov
pop
hlt
inc
pop
in
fmuls
add
add
add
push
in
pushf
incl
pop
pop
pop
out
sbb
mov
out
decl
add
cmp
add
pop
js
std
lahf
testb
xor
add
add
pop
push
pop
popa
add
shll
add
adc
add
xor
add
pop
fs
push
pop
dec
arpl
add
add
sbbl
add
add
pop
dec
ficoms
sub
into
enter
inc
add
test
pop
icebp
pop
add
add
sbb
add
pop
lock
add
cwtl
sbb
pop
mov
or
add
cmc
jno
add
add
cltd
jl
cmp
sbbl
test
inc
add
test
pop
imul
inc
add
js
pop
mov
and
add
mov
cs
xchg
or
aas
cmp
pop
rclb
mov
adc
add
pop
pop
dec
stc
pop
sbbb
xchg
and
add
xlat
push
rorb
add
imul
sbb
pop
mov
popf
jns
pop
in
sti
and
pop
mov
adc
insb
rcrl
sbbb
add
stos
push
jnp
sbb
imul
or
jmp
add
add
or
mov
xchg
jne
pop
push
loop
lods
cli
lds
lahf
sbbl
jno
add
pop
fstps
jbe
rcrb
add
add
pop
jg
sbbl
add
or
mov
add
xlat
mov
fsubl
aam
int
dec
scas
push
and
jecxz
inc
pop
stos
sbb
add
lds
mov
add
add
sub
pop
mov
pop
ret
pop
es
scas
sub
outsl
mov
pop
lods
test
dec
mov
push
inc
add
test
jg
test
add
add
ljmp
cmpsl
pop
je
shrl
and
lret
add
pop
push
mov
xchg
mov
aad
mov
pop
leave
fs
or
adc
add
imul
sahf
aad
jno
add
mov
cwtl
jo
add
cli
jae
add
push
add
inc
add
jmp
pop
sub
loopne
loop
mov
mov
xchg
je
mov
mov
pop
mov
xchg
lret
pop
cltd
insl
repz
add
add
add
sub
add
std
stos
cli
or
lret
mov
pop
fmuls
jne
out
jmp
push
mov
lcall
mov
in
outsb
xchg
pop
std
out
adc
add
pop
bound
add
add
dec
dec
mov
add
wrmsr
add
mov
add
stc
out
pop
bound
add
aam
xor
add
pop
push
push
add
addr16
and
add
pop
test
pop
aaa
mul
pop
outsb
push
add
jge
rcrl
imul
sub
add
scas
incb
jge
pop
mov
add
and
add
add
sub
pop
fimuls
fistps
sub
arpl
add
pop
inc
pop
sbb
lar
ret
or
cld
jbe
add
call
dec
xchg
dec
out
mov
pop
stc
push
test
add
pop
inc
add
push
add
xchg
outsb
xchg
adc
jp
cmc
push
add
add
test
or
mov
dec
movsb
pop
mov
pop
fcmovbe
movsb
pop
jge
popf
cs
inc
add
sbbb
ret
pop
test
add
jae
add
pop
sub
js
int3
sbb
notb
iret
sbbb
push
jmp
aam
aaa
xor
inc
add
sbbb
pop
pop
test
add
mov
add
sub
mov
jp
jns
adc
or
jmp
arpl
in
rcrb
sbb
cwtl
lret
pop
ss
pop
sub
aad
pop
mov
add
mov
cmp
sahf
cmp
std
cmp
add
dec
test
int
jmp
call
jmp
daa
mov
and
int
shll
mov
mov
sbb
in
roll
sbb
add
cltd
cmp
add
in
shlb
inc
add
mov
add
inc
pop
jg
mov
nop
das
sub
pop
inc
pop
push
add
in
in
movsb
pop
push
add
push
cmp
add
push
jmp
sahf
push
cwtl
daa
pop
lahf
pop
enter
inc
pop
xchg
fldt
add
mov
mov
add
add
fidivrs
sbbb
es
and
add
pop
xor
add
dec
mov
pop
lods
cmp
or
pop
stos
mov
clc
mov
or
add
dec
sub
pop
inc
add
sbbl
pop
test
psrlq
popa
add
popa
add
iret
mov
add
cmp
sbb
push
stos
incl
sbb
ljmp
pop
add
add
inc
pop
or
pop
cmp
xchg
or
in
xchg
sub
dec
push
cld
std
pop
pop
idivb
into
ljmp
ja
lods
insl
inc
add
push
sbbl
ret
iret
pop
jo
add
push
pop
push
add
stos
xchg
insl
mov
or
push
add
xchg
test
lcall
lea
add
pop
pop
push
sbb
pop
ficoml
pop
fsubrs
add
jle
add
mov
add
mov
add
mov
xor
add
add
cmp
add
or
dec
daa
pop
push
jmp
jmp
mov
fimuls
mov
cwtl
xchg
call
in
add
xor
push
add
xchg
add
pop
push
or
fucom
pop
xor
rcll
pop
mov
add
and
add
repz
loope
fidivs
sbbb
divl
sbb
and
add
pop
push
mov
cwtl
fwait
aas
mov
add
std
and
add
mov
inc
add
sub
in
mov
add
aam
add
push
add
stos
fsubl
mov
add
push
jae
add
add
test
into
mov
in
icebp
and
add
fimuls
push
add
jmp
mov
sub
pop
insb
mov
pop
icebp
aam
add
inc
add
outsb
fstpl
mov
imul
loop
ret
pop
sbbl
or
dec
cmc
xor
pop
popa
add
outsl
or
out
and
add
add
pop
cli
aad
pop
imul
add
mov
addr16
or
repz
ds
mov
dec
xchg
and
add
movd
shlb
push
mov
add
sbb
out
sbbl
xor
jmp
pop
fldcw
add
fisubrs
dec
sub
add
arpl
sbbl
arpl
add
mov
pop
xor
add
pop
mov
mov
xchg
mul
pop
jne
pop
xor
add
pusha
add
imull
bound
add
bound
add
and
add
ret
nop
push
ret
enter
int3
repnz
push
add
dec
xchg
sbb
add
fs
or
dec
pop
mov
dec
pop
aas
jge
pop
sbb
loop
int
sbb
pop
loop
sbbb
pop
xchg
pop
push
pop
icebp
xor
jns
aam
add
sbb
xchg
adc
add
loop
les
jne
cs
jl
sbbb
push
mov
dec
fisubl
add
cmp
pop
loop
mov
stc
pop
mov
ljmp
ds
pop
mov
or
add
cmp
lods
sbbl
rcrb
pminsw
push
jmp
xor
arpl
sbb
mov
sar
pop
arpl
xchg
movsb
pop
sub
pop
pop
test
jae
add
repz
add
mov
add
pop
pop
mull
add
xor
add
pop
bound
add
xchg
jno
add
pop
cmp
push
insl
mov
imul
pop
insl
inc
pop
dec
icebp
mov
jg
pop
gs
movsl
pop
sbbb
add
lahf
push
stc
sbbl
nop
jmp
lods
fstps
inc
std
daa
pop
cli
cwtl
mov
add
rorb
jns
add
nop
push
ret
mov
sub
pop
or
pop
aas
add
add
pop
push
cmp
add
enter
pop
aaa
pop
adc
add
inc
pop
pop
pop
pop
aam
pop
push
add
rcrb
sub
mov
in
cltd
xor
add
inc
pop
cld
jge
pop
adc
add
pop
fs
lods
dec
test
test
pop
xchg
inc
add
dec
push
ljmp
inc
add
mov
pushf
cmp
loop
aam
inc
add
sub
sbb
xchg
into
out
stos
int3
hlt
dec
jno
add
pop
pop
xor
add
pop
dec
cmp
je
mov
mov
test
pop
nop
cld
jo
add
aad
pop
and
add
and
add
add
add
adc
add
sub
mov
dec
jnp
sub
adc
lea
or
add
pop
fucomi
or
adc
pushf
imulb
mov
push
add
inc
add
or
sbbb
pop
pop
scas
inc
add
in
mov
pop
in
fs
into
inc
add
jo
add
movsb
pop
or
pop
mov
add
clc
cmp
and
xchg
inc
pop
pop
pop
xchg
add
cmp
push
imul
cmp
adc
jl
pushl
fldl
cmc
sub
add
sbb
add
lcall
jle
ds
decl
sub
aad
movsl
pop
leave
sbb
jmp
arpl
sti
sbb
loope
adc
pop
mov
aas
aad
pop
jl
add
jmp
add
fs
pop
bound
add
lcall
lcall
incl
adc
adc
add
add
pop
imul
pop
push
add
shl
pop
insb
pop
xchg
inc
add
and
add
add
jmp
xor
mov
pop
sbb
push
iret
pop
adc
add
test
mov
dec
cmpsb
pop
test
mov
pop
es
push
rep
jmp
into
push
test
mov
cmp
pop
loopne
scas
mov
shl
push
add
pop
push
add
outsb
mov
add
add
pop
lcall
push
add
and
add
cli
dec
enter
outsb
dec
es
mov
pop
mov
mov
pushf
lea
push
cmpsb
pop
sbbl
add
xor
add
add
inc
pop
or
pop
shll
add
into
aam
sub
add
stos
xor
add
dec
jbe
jle
add
loop
xchg
xchg
pushf
dec
sub
lcall
int3
jecxz
movsl
pop
fwait
mov
pop
or
dec
leave
mov
pop
sbb
sahf
and
add
pop
inc
pop
pop
leave
mov
neg
sahf
and
push
push
add
mov
stos
sbb
add
add
fwait
dec
xchg
cmp
xor
add
add
xchg
mov
and
jmp
or
push
jb
add
add
sbb
ljmp
adc
add
pushf
jle
dec
cmpsb
pop
lods
cmp
cmpsl
pop
xchg
jle
leave
mov
add
movsb
pop
or
jg
mov
add
rolb
add
js
xlat
and
add
std
sbb
add
add
add
pop
cmp
add
test
push
pop
xlat
jae
add
add
push
add
mov
sbb
jmp
ds
arpl
sub
sbbl
pop
pop
jmp
pop
fnstenv
jmp
lret
in
adc
add
jmp
jne
add
jge
jne
pop
in
lahf
imul
and
gs
inc
add
scas
add
add
pop
push
add
pop
fldt
xchg
push
add
and
add
pop
inc
pop
fsubl
add
mov
jmp
push
mov
pop
push
jns
pop
enter
xchg
xor
add
mov
sbb
jmp
out
outsl
dec
sub
in
cltd
decb
mov
enter
out
nop
mov
fs
pop
ror
cltd
dec
jmp
pop
adc
add
push
dec
cmpsl
pop
jp
pop
lds
mov
stos
aaa
push
add
xchg
add
mov
popa
add
dec
sti
aad
and
add
push
jmp
jne
jecxz
es
cmpsl
pop
iret
inc
pop
ret
std
pushf
xlat
nop
xchg
popa
add
xor
add
inc
pop
in
mov
sbb
inc
add
leave
mov
add
out
std
sub
ror
insb
mov
ret
add
jg
mov
push
int3
call
arpl
push
add
lock
pop
jae
add
pop
lods
jle
add
mov
pop
mov
inc
adc
repnz
jmp
outsl
push
add
test
pop
imull
xchg
push
inc
pop
test
div
jmp
fs
mov
pop
insb
adc
add
pop
mov
add
ret
stc
dec
das
sub
jle
icebp
xchg
xor
add
mov
in
cwtl
aad
pop
cli
inc
add
test
mov
pop
xchg
jne
ss
pop
xchg
jne
aam
jg
sbb
in
sbbb
int
pop
jbe
push
add
xchg
cmp
enter
out
jne
pop
sbbl
pop
inc
pop
lret
cs
dec
xor
add
jp
xchg
int3
bound
add
inc
add
enter
add
add
add
mov
mov
jmp
into
or
inc
or
add
rolb
xor
add
pop
sbb
add
jb
add
cli
mov
pop
adc
add
sbbb
pop
xor
add
cmpsb
pop
cmp
inc
pop
dec
xchg
loopne
jecxz
test
int
xor
add
inc
pop
adc
or
dec
sbb
jne
sbbl
add
sub
pop
ds
pop
jecxz
jl
cmp
dec
lret
pop
ret
and
cmp
pop
outsl
jnp
mov
add
pop
imul
add
pop
mov
add
adc
pop
add
add
repz
add
je
push
popa
add
fwait
mov
pop
cmp
inc
out
jmp
arpl
dec
hlt
cmp
mov
mov
jge
jmp
arpl
lods
add
int
pop
jae
add
add
lret
pop
push
insl
adc
iret
adc
add
add
inc
add
and
out
gs
leave
idivl
adc
add
inc
pop
and
add
cmp
add
pop
xor
add
decl
add
add
test
sbb
add
arpl
add
test
test
pop
les
imul
add
js
add
sbbl
pop
and
add
imull
cmc
lret
push
sbb
decl
fildll
add
add
fwait
xchg
push
push
pop
mov
pop
sbbb
pop
outsb
sbbb
fwait
xor
add
test
jl
fsubrl
scas
in
shll
fisttps
mov
add
incl
ja
call
imull
push
ret
cmc
arpl
push
mov
pop
mov
roll
add
or
js
sub
dec
mov
add
popf
rorb
pop
jge
push
or
jnp
fdivrp
mov
jmp
arpl
or
fmull
aam
jmp
sub
pop
pop
leave
push
add
add
add
fisubrl
pop
mov
jno
add
add
add
dec
or
and
mov
add
mov
cmp
repz
pop
dec
fisttps
mov
pop
aam
pop
jno
add
pop
cwtl
adc
pop
xchg
jbe
pop
sbb
and
add
scas
pop
inc
add
popf
test
pop
js
pop
mov
lret
add
adc
add
pop
sbbb
stos
xlat
pop
mov
into
mov
jge
outsb
hlt
adc
es
lahf
sbb
pop
mov
and
add
mov
fdivl
xor
add
add
ret
sbbb
decl
jmp
pop
lods
arpl
add
or
pop
pop
jns
add
into
pop
pop
push
je
add
jge
pop
cmc
or
popa
add
je
xchg
pop
mov
adc
add
pop
and
add
jl
ljmp
xchg
out
fdivl
les
lret
xchg
push
add
std
jns
rcrl
gs
paddsw
add
lret
mov
add
sbbl
scas
cld
pusha
add
adc
add
xlat
fiaddl
loope
xor
and
push
add
outsl
popa
add
in
aam
movsl
pop
popa
add
inc
add
test
and
add
add
movsb
pop
pop
inc
pop
mov
les
call
add
jmp
dec
pop
pop
mov
pop
nop
test
and
add
add
add
clc
loopne
mov
pop
and
add
pop
les
push
add
das
das
nop
jae
add
je
les
stos
mov
pop
pop
les
pop
mov
pop
mov
sub
add
push
add
mov
inc
add
stos
fisttpll
adc
pop
mov
gs
clc
sbb
in
incb
pushf
add
add
es
pop
fdiv
enter
aad
push
fs
std
in
dec
jnp
in
pop
sbbl
adc
add
add
sti
dec
or
test
pop
ljmp
or
or
imul
add
fstl
pop
les
pop
iret
dec
iret
xor
add
insl
sub
pop
xlat
mov
push
add
sub
add
add
pop
fwait
add
add
fdivrl
loope
lds
xchg
dec
and
add
mov
jmp
and
mov
add
and
jb
add
xchg
dec
xchg
adc
add
les
pop
add
dec
push
jmp
dec
xchg
inc
inc
add
add
add
add
add
cmp
dec
cmpsl
pop
out
insb
in
les
add
lds
aaa
pop
in
pop
sbb
daa
pop
mov
aas
dec
sub
mov
inc
add
push
add
ds
and
add
adc
add
add
add
dec
adc
add
cmp
ret
pop
das
pop
lcall
add
pop
pop
push
movsl
pop
pop
adc
add
add
mov
lret
fistl
add
push
add
dec
sbbb
pop
pushf
jnp
bound
add
pop
test
fidivl
mov
sbb
dec
or
dec
test
pop
pusha
add
clc
lahf
add
add
jg
pop
mov
pop
imul
adc
add
test
jle
mov
add
fistps
pop
jecxz
add
call
jmp
arpl
and
add
pop
rcll
inc
pop
insl
mov
ja
bnd
dec
and
add
pop
pushf
and
add
mov
flds
xor
add
mov
rolb
add
fst
arpl
add
pop
sbbb
sub
add
push
inc
pop
sbb
add
add
stos
sbb
loopne
push
add
cmp
and
add
push
xchg
pop
inc
pop
push
push
xchg
scas
cli
daa
pop
jl
lea
add
adc
add
ftst
pop
ds
add
add
mov
add
cmp
insl
mov
lods
dec
pop
pop
call
push
nop
push
ret
cmp
pop
sub
sub
add
add
add
jmp
fldenv
add
testl
imul
pop
jne
jecxz
imul
mov
mov
jmp
test
arpl
scas
jnp
jl
pop
mov
inc
add
cli
cmpsl
pop
jg
push
add
mov
hlt
lock
xchg
sbbb
pop
add
add
xchg
jb
add
add
out
pop
sub
add
inc
add
fcom
xchg
push
pop
cmpsb
pop
adc
add
lods
pop
in
cli
fnstenv
add
icebp
adc
add
cmp
arpl
add
insb
imul
dec
aam
xchg
clc
test
hlt
lods
rol
pop
ficomps
add
jne
add
fucomip
mov
cmp
in
pop
clc
lret
pop
cmc
je
add
incl
jmp
and
or
scas
push
jge
pop
push
add
push
js
pop
xchg
adc
add
pop
lds
pop
ss
and
add
pop
lods
dec
mov
imulb
push
add
ret
pop
pop
pop
pop
push
add
jl
add
ret
rclb
add
nop
cwtl
cmpsl
pop
add
add
lods
ret
pop
popf
mov
add
aad
pop
lods
push
add
in
popf
dec
rolb
add
dec
popf
rcrb
pop
es
and
popa
add
xchg
sti
or
enter
pop
out
mov
pop
xor
add
adc
add
leave
jmp
mov
mov
inc
pop
fstl
mov
ljmp
cmp
in
ret
pop
cmp
and
add
inc
pop
sbb
xchg
mov
pop
and
add
xchg
stc
or
outsb
and
add
adc
add
cli
test
mov
pop
pop
dec
in
outsl
mov
add
popl
add
jmp
lock
xchg
xor
push
movsl
pop
cmpsb
pop
pop
out
cli
fcmovu
fwait
or
xor
xor
add
add
insb
mov
adc
add
push
pop
gs
lds
add
jae
add
push
cmp
jp
arpl
pop
scas
push
jmp
add
in
ret
pop
or
add
add
push
add
dec
sbb
sbb
repz
add
sub
ss
sbb
add
sti
sub
dec
std
fdivl
sub
rcrb
or
push
ret
mov
jmp
mov
arpl
daa
pop
testl
add
ret
fcom
test
clc
or
xor
add
sbb
add
jne
arpl
gs
cmp
pop
loopne
sbb
mov
cmp
add
add
add
sub
adc
add
inc
add
test
pop
cmp
or
xor
add
xor
mov
sbb
in
lds
add
daa
add
mov
movsl
pop
jle
stc
int3
hlt
int
lods
dec
cmp
add
jnp
inc
add
test
add
adc
pop
mov
pop
icebp
xchg
pop
push
fs
in
insl
push
add
xchg
xchg
jecxz
adc
pop
mov
add
add
stc
in
clc
mov
sbb
les
pop
sbb
pop
daa
pop
ja
dec
cwtl
adc
add
mov
sub
sub
push
jmp
pop
sbbb
add
test
push
sahf
enter
pop
imul
lds
bound
add
pop
filds
add
stc
arpl
add
dec
push
mov
xchg
dec
jmp
arpl
add
scas
jmp
popa
add
movsb
pop
fisubl
pop
push
fsub
pop
mov
pop
jecxz
xor
add
dec
outsl
pop
repnz
sbb
js
inc
pop
or
pop
add
add
jbe
aad
sbbl
pop
mov
repz
lahf
jne
pop
add
pop
addr16
lods
cmp
loope
mov
stc
jbe
jmp
jmp
mov
cmpsl
pop
push
sub
jl
pop
in
out
popa
add
jle
add
rcrb
add
cmp
pushf
jge
sub
jp
pop
or
add
sbb
add
sub
iret
movsb
pop
leave
push
or
add
movsb
pop
adc
add
pop
fcom
lea
bound
add
enter
mov
adc
pop
xlat
mov
add
push
pop
mov
push
push
enter
js
xchg
clc
fdivrs
xor
add
out
add
gs
push
add
jne
jl
sbb
pop
insl
push
jmp
add
jl
pop
insb
sti
xchg
sbb
pop
test
jns
add
sub
pop
xor
add
out
arpl
add
add
pop
sub
cmp
pop
jp
add
into
jns
sbb
push
add
cmpb
lods
push
add
xchg
in
cmp
add
inc
add
mov
imul
dec
mov
pop
xchg
rcrl
pop
or
mov
daa
pop
xchg
push
jmp
jmp
into
or
rclb
add
xor
add
test
pop
in
leave
and
in
cld
out
mov
mov
fldl
add
mov
or
add
mov
xor
add
inc
pop
cwtl
inc
pop
mov
pop
aam
pop
mov
pop
in
mov
jmp
or
fs
pop
push
pop
enter
push
mov
dec
test
mov
pop
push
push
jmp
push
pushf
lock
out
je
pop
xchg
add
inc
add
not
mov
aad
pop
inc
add
rclb
inc
jp
jmp
arpl
sbbl
pop
xchg
pop
loopne
mov
pop
nop
std
jb
add
sarb
inc
pop
jo
add
ret
push
mov
mov
pop
bound
add
pop
divl
add
dec
int3
fwait
arpl
add
sahf
out
insb
in
adc
add
daa
pop
nop
aaa
jne
xchg
inc
add
ss
pop
inc
add
test
add
add
outsl
je
mov
lret
dec
dec
cwtl
inc
add
int
pop
into
cmpsl
pop
dec
fidivs
add
pop
dec
cmp
sbbb
cli
dec
testl
lret
pop
and
add
pop
cmp
add
pushf
add
push
popf
sub
cmp
push
lcall
add
add
loop
cmp
add
add
pop
adc
add
jp
pop
repnz
add
movsb
pop
or
jecxz
add
add
pop
pop
pop
outsb
idivb
pushf
dec
jne
mov
roll
add
fldt
xlat
es
fnstsw
aad
xor
out
das
aas
imul
jns
mov
pop
test
pop
cmp
adc
add
jmp
arpl
add
add
ds
dec
xchg
les
pop
out
inc
add
iret
es
int
or
pop
xchg
loopne
enter
or
xor
mov
add
bound
add
push
cli
popa
add
pushf
popa
add
stc
mov
cmp
push
add
mov
lea
mov
add
add
rcrb
xchg
inc
pop
out
not
outsl
dec
iret
pop
shrl
pop
decl
movsl
ljmp
arpl
add
add
mov
mov
or
pop
inc
add
test
add
dec
inc
add
insb
aas
or
pop
xor
add
sbbl
mov
add
cmp
pop
stos
gs
addr16
inc
pop
pmuludq
add
leave
add
adc
add
inc
add
sbbb
mov
or
xchg
int3
and
out
and
mov
stos
sub
pop
out
inc
add
jle
xor
jmp
or
repnz
add
sbb
add
cwtl
bound
add
rcrb
sub
add
add
test
jo
add
cmc
push
xor
add
add
mov
pop
push
imul
jmp
aaa
push
outsl
dec
enter
add
inc
add
mov
test
and
add
outsb
and
inc
add
repz
es
dec
outsl
roll
push
mov
movsl
pop
dec
arpl
add
pop
adc
call
pop
xchg
sbb
pop
xlat
fs
aas
les
inc
add
xchg
in
xchg
stos
sbb
and
mov
jp
arpl
adc
add
lcall
sub
xchg
repnz
std
ss
add
add
pop
jo
add
movsb
pop
push
add
inc
pop
in
bound
add
mov
out
out
sub
inc
pop
pop
test
dec
xchg
fcmovnu
dec
sbbl
cmp
sbb
in
push
push
pop
test
push
or
add
test
scas
dec
push
ret
jg
add
add
into
cmc
arpl
add
add
je
push
add
stos
scas
stc
xchg
imul
mov
add
xor
xor
pop
sti
ds
mov
xchg
mov
add
mov
push
ss
jmp
xor
push
mov
hlt
sahf
jge
add
out
pusha
add
jno
add
pop
ja
add
mov
add
pop
cmp
add
pop
bound
add
pop
int
pop
dec
hlt
dec
repz
add
pop
dec
mov
jb
add
dec
mov
mov
add
add
cs
or
fnstsw
es
push
add
xchg
adc
add
add
pop
jecxz
cltd
stos
inc
pop
xchg
mov
subps
pop
mov
add
in
pop
icebp
incl
inc
and
sbb
daa
sub
add
or
add
sbb
jecxz
or
and
add
pop
adc
add
xchg
or
add
push
into
push
add
add
add
pop
mov
add
int
stos
out
dec
mov
push
add
xor
add
jns
out
or
das
add
insb
mov
mov
nop
push
ret
arpl
push
pop
push
pop
and
add
sub
cmp
icebp
lea
pop
test
sbbl
shlb
int3
cld
es
rcrb
mov
add
mov
sbb
pop
cmp
dec
adc
add
jne
xchg
sbb
xchg
add
add
call
xor
nop
push
ret
fists
lcall
mov
add
add
add
push
add
sbb
xchg
jmp
into
jge
fstl
add
jno
add
pop
jge
inc
pop
out
out
loop
out
sbb
test
adc
fnstsw
jmp
dec
jp
jle
call
jmp
arpl
cmp
pop
inc
pop
dec
iret
fnstsw
mov
out
jne
lret
ret
pop
fsubl
add
loope
sbb
push
cmp
add
lahf
test
mov
movsl
pop
es
inc
pop
popf
dec
fcomps
iret
and
add
push
pop
int
pop
sbb
repz
daa
daa
dec
enter
pop
xchg
bsr
mov
add
add
rolb
je
stos
leave
mov
sbb
ljmp
sbbl
pop
js
cmp
adc
add
add
add
jg
es
ret
pop
adc
add
pop
and
add
mov
pop
lea
in
add
add
cltd
dec
add
stos
ljmp
pop
sbbb
add
adc
add
mov
pop
filds
dec
sbbb
stc
aaa
insl
jge
sbbl
fildll
out
shrl
and
add
pop
clc
mov
clc
mov
add
add
ds
jae
add
xchg
inc
pop
inc
add
adc
add
jns
pop
jns
pop
push
out
inc
add
cmpsl
pop
pop
xchg
sub
pop
das
sbb
pop
mov
test
jmp
arpl
sti
sub
add
pop
and
add
add
lcall
stos
push
out
add
add
add
pop
cwtl
push
add
mull
add
outsl
lcall
scas
pushl
enter
add
add
xor
add
sub
inc
pop
pop
es
test
aaa
or
pop
xor
add
pop
dec
in
lret
lock
xor
lods
adc
add
testl
mov
pop
fs
inc
add
pop
sbb
pop
cs
sub
les
mov
pop
sbb
scas
rolb
add
jbe
pop
mov
imul
jmp
into
arpl
mov
mov
pop
fdivs
add
pop
add
movsb
pop
and
add
sbb
xchg
hlt
cmpsb
pop
jle
in
jne
sbb
test
pop
jge
call
mov
fs
daa
pop
xchg
in
dec
test
mov
jmp
or
pop
test
mov
xchg
mov
inc
add
add
add
pop
stos
lret
pop
lods
divb
add
push
cwtl
aas
scas
xchg
jne
fwait
lock
call
mov
pop
mov
add
dec
iret
es
nop
pop
repz
movsl
pop
je
mov
nop
sbbb
cmpsb
pop
das
dec
ljmp
arpl
add
out
pushl
xor
jmp
arpl
ds
pushf
xor
add
add
popf
mov
pop
pop
push
test
popa
add
or
pop
xor
add
sub
scas
dec
mov
test
icebp
aaa
jne,pt
xor
add
repz
mov
lret
das
scas
pusha
add
rorl
das
push
add
mov
pop
adc
test
repnz
jbe
sbb
test
mov
ljmp
pushf
jp
enter
pop
mov
pop
arpl
add
xor
add
add
sub
sub
out
sbbl
cmp
cwtl
lcall
std
sbb
mov
sahf
outsb
js
cli
inc
add
in
sub
adc
add
cld
cwtl
es
repnz
jmp
ljmp
jbe
fs
icebp
int
pop
pop
dec
adc
add
add
pop
leave
jo
add
add
sbb
add
lods
cmp
adc
add
pop
mov
pop
dec
mov
lahf
jmp
outsb
xchg
dec
sbbb
push
out
pop
cmp
mov
xchg
add
mov
push
cli
add
popf
js
pop
in
add
add
nop
lock
add
cld
pushf
lret
sbb
lock
pop
out
or
mov
mov
pop
pop
ds
mov
mov
add
gs
jne
inc
add
sti
hlt
or
mov
pop
add
inc
test
adc
lret
pop
pop
gs
mov
mov
pop
cmp
mov
sbbl
ret
pop
sub
add
add
push
cmp
add
xlat
je
pop
mov
sbb
push
in
push
ret
test
nop
or
outsb
jb
add
je
pop
mov
push
add
fimuls
add
add
jb
add
pop
adc
int3
rcrb
add
pop
addr16
inc
pop
shlb
add
add
rcrb
leave
mov
cli
movsl
pop
inc
add
sbbb
fsub
pop
cmpsl
pop
test
mov
mov
pop
rcrb
jmp
mov
push
out
repz
add
out
divb
push
mov
mov
loope
mov
add
sub
add
add
leave
cs
add
or
add
in
test
pop
and
add
pop
inc
pop
sbb
fdivrl
jo
add
dec
xor
add
mov
xor
add
out
or
ljmp
add
stos
jnp
jne
imul
add
pop
arpl
add
mov
dec
push
pop
cmp
into
lahf
jo
add
pop
out
xchg
push
into
pop
push
jg
rcrb
pop
repnz
add
and
add
pop
cld
cmp
add
cmp
inc
add
lea
add
mov
call
popf
mov
push
add
insl
inc
pop
leave
mov
add
pop
shll
add
aaa
mov
sarl
das
dec
cmp
pop
in
jmp
add
pop
inc
add
outsb
cmpsl
pop
cmp
pop
add
insb
in
int
outsl
ljmp
popf
and
add
jne
jmp
jp
flds
add
add
jl
xchg
dec
inc
add
jne
xor
pop
lea
pop
loope
sbb
in
lcall
pop
push
add
add
add
add
xchg
ret
pop
lret
call
test
xchg
push
add
cmp
imul
lret
and
add
add
add
and
add
ss
adc
mov
add
add
add
dec
pop
pop
leave
and
cs
scas
pop
les
insl
imul
add
cwtl
lret
mov
push
cmp
scas
sbb
pop
and
add
pop
pop
xchg
dec
dec
inc
pop
and
cs
cmpsl
pop
mov
mov
in
aad
pop
js
pop
lcall
repnz
pop
psrad
scas
mov
push
adc
add
add
pop
push
mov
pop
sub
cld
fwait
push
xchg
insb
mov
xlat
push
xor
jmp
fs
daa
out
es
mov
testl
fadd
pop
xor
lock
or
pop
pop
loopne
xchg
push
add
imul
add
inc
pop
jmp
pop
bound
add
gs
ja
mov
add
jle
loope
inc
pop
test
pop
fwait
jne
lret
pop
ret
pop
fdivrl
call
add
outsb
nop
fiadds
add
cmpsl
pop
mov
pop
push
push
ret
arpl
add
inc
add
lcall
xchg
pop
pop
sub
cmp
mov
cmp
test
add
xchg
cmp
pop
pop
mov
lods
pop
lahf
sti
cmp
popa
add
filds
add
mov
add
cmp
add
add
pop
pop
ret
pop
in
in
add
cmpsl
pop
xchg
std
lods
cmp
aad
loop
aad
push
pop
jne
pop
sbbb
add
out
xchg
call
pop
aaa
inc
pop
fists
add
movsb
pop
arpl
add
or
pop
add
add
and
icebp
cmp
mov
pop
inc
pop
rcrl
shr
fists
pop
adc
mov
xchg
jmp
dec
push
rclb
mov
add
jne
jmp
cmc
popa
add
pop
jnp
add
jmp
mov
add
sbb
xchg
rcrl
fcmovnu
inc
pop
pop
mov
shrl
add
mov
pop
clc
pushf
add
add
pop
adc
add
or
sti
push
add
push
add
push
mov
jmp
adc
leave
int3
imul
dec
jmp
mov
arpl
ljmp
inc
arpl
pop
xor
push
add
sub
or
cmp
push
add
sbb
push
ret
xor
mov
mov
scas
insl
faddp
pop
add
add
sbb
outsl
js
jns
out
xchg
mov
stos
add
pop
dec
insb
adc
add
push
or
add
add
daa
pop
jp
fcoml
sti
shll
add
xor
add
push
add
in
xor
add
cmp
add
add
add
jb
add
daa
pop
or
sbbb
out
mov
in
xchg
mov
pop
in
mov
add
cmp
push
ret
pop
pop
leave
pop
inc
add
incb
add
cmp
out
pop
dec
push
pop
call
scas
insl
xchg
jle
imul
rcrl
add
add
add
lds
out
add
sbb
push
add
add
add
pop
jmp
sbb
cli
cmpsb
pop
inc
add
or
loopne
push
jecxz
add
add
add
pop
fs
push
mov
add
xchg
dec
mov
cld
and
es
popf
dec
shlb
add
enter
pop
sbb
in
insb
repnz
add
xchg
push
inc
add
lret
inc
add
int3
pop
gs
lds
dec
inc
add
push
pusha
add
mov
inc
pop
mov
xchg
mov
pop
dec
jne
pop
push
pop
rcrb
es
mov
int
fwait
lret
adc
add
xor
add
sbb
pop
pop
pop
adc
add
push
sbb
add
pop
rcrl
pop
mov
pop
push
int3
adc
add
add
add
add
pop
in
loopne
daa
pop
xchg
pop
push
add
mov
insl
stc
mov
push
add
arpl
pop
push
dec
xchg
dec
loopne
and
add
les
pop
xor
add
jb
add
in
pop
in
or
sbb
adc
add
pop
fbstp
add
push
add
repnz
in
xchg
ljmp
sarb
pop
adc
add
xlat
mov
iret
lahf
pop
inc
pop
inc
add
sbb
dec
jp
cmp
add
pop
adc
add
push
mov
sti
loopne
add
out
mov
mov
add
sub
pop
sbb
pop
sbbl
sbbb
mov
inc
pop
pop
mov
mov
cmp
adc
add
add
add
cmpxchg
out
imul
add
sbbb
add
bound
add
push
add
jmp
sbb
lret
mov
cs
mov
add
and
add
push
pop
into
mov
jnp
lret
cmpsl
pop
out
or
add
insl
std
faddl
add
mov
add
ret
add
in
sub
add
add
jl
and
add
sbb
test
enter
in
add
aaa
xchg
pop
sub
add
add
das
mov
hlt
movsb
pop
rcrl
cmp
push
mov
sub
add
add
aam
adc
testb
pop
hlt
push
add
xchg
mov
add
cmpsl
pop
sbb
das
test
inc
pop
in
dec
pop
das
jmp
pop
xor
std
scas
pop
xor
add
pop
pusha
add
les
pop
pop
pusha
add
out
addr16
scas
inc
pop
dec
pop
pop
loopne
inc
pop
add
add
pop
stos
lds
pop
aaa
fmuls
push
pop
clc
cmc
ret
pop
je
inc
add
outsl
in
mov
pop
pop
pop
movsl
pop
jmp
pop
rcrl
add
cmp
pop
or
xchg
push
sub
jmp
mov
pop
xchg
pop
cmpsb
pop
cltd
and
xchg
mov
pop
jno
add
pop
and
add
cmp
pop
dec
or
in
cmp
add
jo
add
mov
out
inc
add
arpl
enter
shr
mov
incl
int3
push
jle
xor
add
xlat
cmpsl
pop
iret
fimuls
testb
add
sahf
ds
add
stc
jl
sub
mov
mov
jne
jmp
fsts
ret
adc
add
arpl
add
rep
jmp
into
cmp
pop
cmpsl
pop
jle
pop
cmp
pop
adc
add
add
lds
sti
idiv
or
pop
xchg
rcrb
mov
add
add
add
cli
or
add
nop
cmp
pop
pop
pop
scas
out
aaa
sbbl
mov
add
rcll
add
outsb
lock
dec
and
cmp
test
add
or
add
mov
jmp
or
lret
pop
or
lret
jmp
pop
jp
arpl
jge
push
pop
cwtl
mov
fnstsw
mov
cmc
add
add
pop
xchg
pop
jnp
inc
pop
xchg
pop
adc
add
push
clc
in
mov
movsb
push
add
arpl
aam
xor
add
pop
fidivrl
icebp
push
sub
bound
add
xchg
imul
pushf
push
pop
lahf
imul
sbb
mov
add
daa
pop
xor
add
outsb
push
scas
jo
add
add
loope
and
add
jmp
daa
pop
arpl
pop
inc
pop
push
and
add
pop
cld
outsb
rcrl
pusha
add
dec
pop
and
add
sbbl
dec
inc
add
xor
xor
add
add
leave
jno
arpl
daa
mov
pop
sub
add
adc
add
pop
sti
icebp
fisttpll
xor
add
adc
add
jge
add
sbb
add
jns
repnz
pop
xor
add
aaa
test
cwtl
jnp
push
test
mov
jnp
add
add
enter
push
ret
mov
pop
cli
jno
add
ret
pop
imul
pop
inc
add
mov
add
and
lahf
outsb
mov
push
push
inc
add
xor
enter
jno
add
add
sbb
add
out
cmp
xchg
rcrl
inc
add
push
insl
cltd
dec
lds
pop
fstp
mov
idiv
add
jmp
orb
cli
and
add
in
and
pop
leave
and
lds
mov
xchg
in
test
sub
fnstenv
fs
dec
in
arpl
add
pop
jne
outsl
sbb
sbbb
mov
add
fnstcw
adc
add
outsl
les
lods
dec
pop
mov
pop
mov
rol
jmp
dec
inc
ret
dec
stos
test
pop
mov
jne
ret
pop
movsb
pop
pop
lahf
out
icebp
stc
ret
pop
xchg
cmc
out
call
add
fsubrs
pop
pop
ss
pop
popf
sbb
popa
add
mov
dec
pushf
in
xchg
mov
sbbb
jp
cmp
add
cmpsb
pop
sti
sub
stos
mov
test
add
sub
das
clc
sbbb
add
push
add
rolb
add
aad
xchg
shr
pop
jmp
add
mov
adc
add
xchg
test
add
test
pop
add
add
jae
add
add
ljmp
popa
add
insl
dec
mov
fnstcw
pop
jle
imull
dec
cmp
mov
and
cmc
arpl
out
scas
sahf
mov
out
push
and
add
mov
je
pop
jns
lret
sub
pop
sub
lahf
ret
pop
sbb
add
pop
je
fsubrl
lahf
push
out
lret
aam
dec
outsb
mov
std
pop
sub
loopne
imul
mov
es
jl
outsl
add
ret
testl
addr16
xchg
mov
sbb
gs
add
add
pop
int3
sbb
xchg
cmp
sti
test
fists
add
mov
jmp
mov
cmp
enter
mov
add
test
xor
add
into
mov
dec
add
pop
fwait
mov
pop
aad
or
sbbb
rol
pop
fwait
push
pusha
add
out
mov
xchg
jle
call
dec
pop
pop
out
rcrb
mov
sbb
sti
jmp
daa
cmpsl
xchg
mov
mov
add
push
add
adc
add
cmp
pop
lods
into
aas
mov
movsl
pop
mov
add
and
hlt
or
jp
insl
cmpsb
pop
aaa
and
sub
out
cmp
mov
pop
nop
jb
add
add
push
xor
add
std
ret
pop
xchg
jmp
add
mov
jmp
sub
inc
add
mov
sbbl
scas
arpl
add
lods
imul
push
test
pop
pusha
add
inc
add
fcomps
jbe
lds
add
dec
bound
add
add
add
psubw
add
pusha
add
pop
push
addr16
syscall
pop
mov
push
test
fcoml
cs
jmp
and
pop
mov
adc
add
push
add
push
and
add
mov
xchg
inc
pop
dec
mov
xor
add
aad
pop
adc
xchg
and
add
popf
push
add
pop
xchg
sbb
test
mov
jmp
dec
iret
mov
pusha
add
insb
icebp
jmp
scas
add
add
cmp
loope
push
sarb
pop
inc
pop
mov
jmp
pop
inc
add
mov
or
pop
fadd
pop
cwtl
dec
sbb
add
jo
add
pop
and
add
pop
frstor
push
rorl
dec
es
nop
mov
pop
mov
in
pop
mov
add
add
push
add
cmpsl
pop
mov
fbld
add
and
add
sbbl
push
xchg
incl
enter
pop
xchg
sub
arpl
add
mov
pop
mov
in
mov
mov
in
aaa
sbb
mulb
es
xchg
pop
inc
pop
add
leave
mov
pop
dec
stc
push
add
mov
add
mov
gs
push
jmp
outsl
sbb
sub
pop
and
pop
mov
jmp
dec
jp
sbb
mov
pop
sbbb
add
pop
notb
sbb
je
inc
add
dec
xchg
pop
xchg
test
cmp
or
in
dec
add
inc
pop
lods
rorb
xor
add
ret
pop
pop
fadds
pop
popa
add
lods
xchg
clc
mov
add
ficoml
add
int3
pop
xchg
jo
add
gs
stos
sbbb
mov
or
add
push
in
mov
fisttpl
outsb
addr16
shlb
pop
pop
hlt
loope
in
xchg
jmp
jmp
arpl
popa
add
and
add
repnz
movsl
jmp
jp
arpl
pop
loope
mov
add
xchg
adc
add
cmp
jle
sub
dec
stc
xor
add
rorl
ret
pop
inc
pop
xor
cmpsb
pop
scas
in
cmp
add
pop
xchg
sub
lds
icebp
aad
inc
pop
repnz
pop
fistpll
pop
in
and
add
add
add
fsubs
add
cmp
add
jae
add
mov
add
stc
cmpsb
jmp
sbb
leave
cs
add
xchg
push
add
mov
add
sbb
add
pop
fs
in
cmp
mov
inc
add
bound
add
push
jl
pop
pop
es
movsb
pop
lods
jbe
lods
jge
add
jmp
mov
or
pop
dec
mov
jmp
aaa
inc
xchg
jp
cs
in
jne
add
inc
pop
xchg
cmp
sbb
jmp
aaa
mov
loopne
add
add
pop
ds
pop
cwtl
cmpsl
pop
in
les
pop
and
add
add
shrb
pop
xchg
arpl
add
daa
pop
ds
pop
fwait
xor
add
pop
mov
pop
out
mov
inc
pop
in
dec
xor
sbbl
add
icebp
les
jo
add
stc
add
add
flds
add
inc
add
cmpsl
pop
add
add
mov
xor
jae
add
and
add
pop
ds
sub
pop
hlt
les
mov
insb
pop
cld
loop
pop
mov
fs
cltd
mov
add
or
add
es
nop
jmp
add
pusha
add
popa
add
and
add
add
xchg
stos
fwait
test
inc
add
jmp
lea
jmp
into
dec
sti
xor
pushf
jle
xchg
sbb
pop
daa
pop
fs
bound
add
aas
js
and
inc
add
mov
add
arpl
add
xchg
pushf
pusha
add
pop
mov
xchg
incl
dec
arpl
mov
fadds
add
dec
popa
add
les
cmp
pop
pop
jg
sub
add
add
in
pop
lret
add
dec
bound
add
mov
add
mov
outsl
bnd
pop
dec
xchg
jbe
mov
fwait
stc
hlt
pop
add
add
add
test
xor
fistl
jo
add
add
xchg
cld
jle
add
adc
add
leave
adc
add
push
mov
rcrl
ret
pop
gs
test
add
ss
pop
mov
add
inc
pop
in
insl
sub
pop
and
add
inc
add
dec
dec
aaa
popl
jp
fstpl
pop
inc
pop
ljmp
in
in
xor
add
rcrl
sbb
push
add
add
aad
push
mov
jle
jl
pop
mov
ret
pop
inc
add
ds
mov
es
or
add
mov
sbbb
jmp
arpl
test
dec
pop
add
or
jmp
pushf
cmc
ret
dec
xor
add
xchg
inc
add
lret
add
add
or
pop
adc
add
mov
cwtl
les
fdivs
sbb
pop
lea
inc
add
push
mov
add
xor
push
ret
push
sbb
add
add
test
addr16
xor
add
add
push
lods
mov
or
ret
enter
pop
mov
sbb
add
inc
add
jge
cmp
scas
add
add
add
sbbl
add
cli
pusha
add
xchg
stos
xchg
aam
test
mov
xor
add
nop
inc
add
push
add
or
out
mov
clc
nop
cmp
sbbb
pop
arpl
add
fdivrs
mov
add
add
mov
dec
inc
add
test
and
add
int
fadds
add
outsb
xchg
and
add
add
in
fwait
call
xlat
icebp
call
pop
jp
lods
and
add
outsl
in
dec
pop
or
mov
add
add
add
or
xor
sbb
pop
pop
mov
pop
push
je,pn
pop
faddl
add
test
add
test
mov
cs
pop
das
or
xchg
testl
popf
push
rclb
add
add
daa
sbbl
add
mov
add
add
pop
bound
add
mov
cmp
add
mov
adc
add
jmp
pop
adc
add
bound
add
scas
and
add
dec
push
jmp
mov
gs
sbbb
add
add
add
stos
mov
push
mov
mov
lcall
xchg
adc
lahf
sbb
mov
lods
les
cltd
pop
mov
inc
pop
jae
add
pop
mov
pop
push
jmp
push
jmp
lods
sti
in
sub
icebp
jne
and
adc
add
sbb
and
add
fwait
jnp
mov
and
add
add
ret
pop
popf
jge
pop
ds
inc
add
test
push
push
in
outsl
jae
add
add
pusha
add
jnp
dec
hlt
rcr
int3
mov
add
jae
add
pop
ffreep
pop
mov
pop
lods
repz
pop
test
jnp
dec
sbbb
mov
xchg
stc
mov
and
cmp
or
pop
iret
int3
cld
daa
pop
test
lret
add
add
pop
mov
xor
ja
pop
int3
sub
jno
add
add
insb
rcrb
enter
add
add
inc
add
xchg
pop
pop
lods
dec
sti
pop
xor
dec
outsb
jns
in
sbb
add
cs
jns
mov
add
jg
fldt
add
pop
jle
mov
add
pop
imul
push
add
inc
pop
and
add
loop
lcall
push
jmp
fistps
mov
lret
cmp
pop
popa
add
sub
add
jle
ja
rcrb
pop
jmp
fwait
rcrl
jmp
lods
sbb
add
stos
sbbb
adc
pop
add
add
repnz
inc
nop
push
ret
mov
into
out
arpl
add
pop
lods
out
jl
pop
test
inc
pop
lods
xchg
outsb
mov
notb
cmp
add
into
push
cmpsb
pop
mov
sub
inc
add
jno
add
inc
pop
jnp
add
cld
lret
mov
pop
lock
add
fnstsw
sub
adc
add
pop
clc
es
pop
pop
clc
std
add
add
add
inc
pop
jp
fs
bound
add
add
mov
add
daa
pop
into
pop
outsb
adc
add
push
adc
add
adc
jbe
pop
in
jl
add
add
scas
sub
xchg
xchg
dec
into
sbb
in
mov
pop
ljmp
pop
pop
mov
jns
pop
sub
add
mov
lods
add
add
push
loopne
add
lret
gs
pop
scas
popa
add
stos
adc
or
add
dec
lea
jne
pop
insl
pop
adc
add
push
dec
push
and
mov
pop
fsubrl
inc
jmp
cmpsl
cmpb
pop
test
mov
pop
inc
pop
repnz
mov
cs
cmp
xchg
adc
add
mov
cltd
test
add
add
shrb
add
bound
add
cmp
arpl
add
pop
pop
jne
pop
inc
pop
mov
lea
push
add
rorl
mov
mov
jmp
push
dec
mov
xor
add
push
pop
xchg
sahf
or
cmc
jb
add
jge
stos
jmp
or
and
aas
or
pop
inc
pop
mov
mov
add
pop
in
cmp
push
jg
lods
lahf
cmpsb
pop
lds
pop
adc
add
sbb
sbb
aam
dec
in
je
xchg
jae
add
add
push
push
nop
push
ret
add
pop
push
mov
lock
shrl
fdivr
inc
add
mov
inc
add
pop
push
jmp
cmp
fs
enter
pop
cmp
add
or
mov
shr
insb
js
adc
sbb
js
test
add
aam
xor
xor
add
pop
cli
pop
mov
repz
mov
call
push
sbb
pop
mov
sbbb
xchg
add
mov
ret
xchg
mov
xchg
fnsave
mov
add
add
mov
add
cltd
test
test
imul
loop
aam
xor
add
std
jge
add
jge
dec
xchg
dec
and
add
pop
cmp
push
xchg
sbb
test
jmp
cmp
stos
ss
pop
gs
cmp
leave
bnd
add
pop
repz
repz
call
fstl
xlat
pop
adc
dec
lret
add
add
je
movsl
pop
cmc
inc
add
jg
ljmp
pop
add
add
cmp
add
add
test
ljmp
xor
add
add
aaa
cwtl
xchg
pop
aas
imul
jne
jmp
cmp
cmp
insl
cmp
push
adc
add
add
push
test
jnp
push
add
stc
jp
jle
inc
pop
cmp
je
arpl
add
lods
pop
mov
iret
mov
jns
fldt
lahf
pop
sbbb
add
cmp
mov
js
add
imul
sbb
add
add
sti
jmp
or
and
insb
mov
test
pop
loop
mull
arpl
add
cmp
pop
jmp
dec
pop
arpl
dec
sub
sub
pop
sbb
lods
dec
insb
jmp
repnz
add
xchg
mov
dec
inc
pop
shrb
aad
pop
insl
and
add
jbe
ss
pop
sub
lret
xor
add
mov
int
push
pop
sbbl
add
adc
add
pop
cmovg
add
add
cmpsb
pop
fwait
test
add
imul
pop
arpl
add
push
ret
and
dec
arpl
fisttpl
dec
cmp
inc
add
rcll
add
pop
add
sahf
mov
add
hlt
push
pop
outsb
xchg
mov
sub
ss
push
add
movsl
pop
and
add
or
ja
sub
jns
jbe
xchg
std
jns
sbb
pop
xor
add
add
add
add
add
int
dec
pop
cmp
add
inc
add
dec
jge
imul
inc
pop
addr16
push
push
jne
and
add
jae
add
ret
out
lds
pop
sub
adc
movsl
pop
les
movzwl
jmp
cmp
arpl
add
push
ret
jmp
sbb
movsb
pop
mov
in
sti
adc
pop
lods
dec
inc
add
popf
scas
push
push
ret
cmc
cmpsl
mov
add
xchg
ret
pop
push
hlt
pop
jle
cltd
repnz
adc
add
fs
stos
inc
add
jmp
pop
xor
pop
mov
xchg
add
pusha
add
cmpsb
pop
sub
rcrb
pop
ficompl
pop
sub
cmp
lea
add
mov
add
mov
add
sub
add
or
pop
pushf
cmpsb
pop
and
add
add
pop
mov
fbld
fdiv
scas
xchg
adc
add
pop
mov
inc
add
testb
pop
or
ds
negl
adc
add
fucomi
inc
add
mov
add
push
mov
or
add
mov
pop
xchg
xchg
pushf
inc
pop
cltd
pop
and
add
mov
jae
add
sti
out
rcrb
sbbl
add
pop
es
push
xchg
cmp
pusha
add
mov
add
popa
add
cmc
or
pop
stos
jb
add
pop
test
mov
cmp
test
repnz
add
dec
std
push
add
test
mov
pop
mov
cmc
sub
enter
pop
js
ret
sbbl
add
cwtl
lret
ret
pop
jmp
cmc
pop
aaa
mov
mov
inc
pop
daa
pop
jge
pop
dec
pushf
cs
mov
pop
les
and
add
jge
shlb
add
inc
pop
jo
add
mov
sub
dec
lock
insl
or
cltd
dec
inc
pop
adc
add
fs
ss
dec
mov
sub
pop
jb
add
cmpsl
pop
xor
add
lret
jmp
and
add
stc
sbbl
xchg
rcrl
jbe
add
lahf
mov
mov
jl
add
xchg
mov
pop
popf
xchg
icebp
sti
mov
pop
insl
push
add
test
scas
sbb
adc
add
mov
pop
xchg
jnp
add
mov
or
sub
pop
dec
ja
sbbl
int
sub
add
inc
pop
cmp
jno
add
sbb
fdivl
pop
movsb
pop
mov
pop
sub
mov
add
out
imul
das
fnstenv
add
add
add
jns
and
add
or
add
and
add
loop
add
add
jbe
lret
cwtl
test
add
mov
add
stos
push
pop
in
rcrb
and
in
ret
in
push
add
imul
pop
mov
js
sbb
cwtl
xor
add
push
add
scas
add
add
pop
dec
jae
add
add
pop
add
add
sbb
add
cmpsb
pop
pop
pop
nop
sub
pop
or
fildl
add
lret
add
pop
jge
pop
push
int
xchg
pop
lcall
pop
out
mov
pop
addr16
frstor
cmp
mov
pop
xchg
inc
add
add
adc
roll
pop
iret
xor
add
fwait
push
sbbb
adc
add
cltd
inc
add
mov
jl
add
inc
add
sbbl
adc
add
in
inc
pop
sub
ror
sub
add
int
pmaddwd
aam
mov
ret
add
inc
pop
sub
sub
test
add
outsl
mov
sub
adc
pop
repnz
and
hlt
mov
outsb
xchg
cmp
push
add
sub
out
xchg
fisubs
pop
adc
repz
cli
mov
loop
test
pop
repnz
sbbb
dec
test
pop
xor
pop
cmovl
xchg
jo
add
add
test
lock
add
push
nop
fst
sub
mov
pop
lea
sbbb
fistpll
and
add
pop
jl
pop
dec
pop
mov
bound
add
cmp
add
stos
xchg
sbb
pop
lods
or
add
lods
imul
sti
pop
add
add
ss
shrb
or
flds
and
add
mov
dec
xor
add
mov
mov
pop
inc
pop
jg
adc
push
stc
mov
mov
push
jbe
pop
cmp
mov
add
cmp
scas
xchg
push
mov
rcrb
jmp
xchg
adc
add
pop
mov
jns
out
mov
pop
push
adc
add
add
lock
jbe
mov
pop
loop
lds
or
mov
aas
jns
pop
add
add
add
sbb
add
cs
movsb
pop
lahf
movsl
pop
lret
inc
pop
stos
jnp
pop
mov
sub
dec
pop
test
pop
cwtl
mov
pop
sti
sub
and
or
pop
or
pop
cmp
add
in
or
pop
pushf
dec
adc
add
add
xor
add
rcrl
push
mov
cmp
adc
add
pop
pop
xchg
loop
adc
add
pop
dec
adc
add
sbb
add
insb
and
add
test
sub
add
stc
mov
add
in
iret
sbbl
adc
pop
je
jp
and
add
in
add
push
fwait
cmpsl
pop
repnz
add
loope
popf
rcrb
jg
sub
inc
pop
cmp
mov
call
inc
pop
repz
add
out
fildl
add
insl
or
add
aaa
and
jb
add
pop
cmp
aas
sub
add
cmp
add
adc
add
push
add
mov
xor
add
sbb
test
add
mov
outsb
jno
add
add
pop
icebp
xchg
cmpsb
pop
sti
pop
add
mov
adc
leave
cmp
inc
add
and
add
add
sub
lcall
xchg
dec
inc
pop
call
cmpsb
pop
pop
enter
push
add
add
fwait
loope
std
sti
idivb
stos
in
mov
fcoms
add
push
add
inc
pop
clc
jp
dec
jp
pop
faddl
add
xchg
in
in
lds
pop
shlb
das
pop
hlt
fdivl
add
jo
add
add
xchg
scas
lahf
fwait
cmp
les
mov
pop
jo
add
adc
inc
pop
js
add
mov
dec
xor
add
xchg
dec
outsl
cltd
push
pop
xchg
mov
mov
pop
inc
add
pop
jb
add
sub
inc
add
dec
adc
add
adc
sbbb
add
in
mov
pop
hlt
adc
add
ret
pop
insb
pop
cmpsb
pop
out
mov
imul
push
inc
pop
jg
sub
pop
sbbb
mov
or
pop
loop
js
into
dec
mov
in
out
fsubrs
xor
xchg
std
out
jns
pop
and
outsb
cld
jb
add
sub
jbe
pop
imulb
add
push
mov
add
movsl
pop
shl
pop
out
daa
pop
inc
pop
xchg
jns
pop
pop
push
add
in
xor
add
fdivs
xchg
jl
jns
push
add
outsl
cs
call
mov
add
add
dec
and
add
rcl
mov
dec
pusha
add
enter
add
dec
sub
movsb
pop
mov
add
pop
cmp
jmp
pop
aad
jmp
add
test
inc
pop
shlb
sub
add
mov
push
jno
add
mov
add
add
sub
mov
shlb
out
xor
xor
add
lcall
add
pop
aas
jo
add
adc
add
enter
sbb
add
mov
pop
mov
imul
mov
pop
pop
out
pop
call
fwait
dec
jg
fisttps
xor
sbbb
add
jb
add
outsl
bound
add
sbbl
aaa
sbb
es
push
add
push
and
add
into
ja
imul
add
out
mov
pop
adc
jo
add
jg
fwait
into
std
jecxz
cmp
adc
add
loopne
enter
rolb
add
jnp
jl
add
mov
and
add
in
mov
push
cmp
pop
add
add
jge
fs
push
sbbb
sahf
clc
mov
test
add
pushf
negb
add
and
add
add
pushf
sarl
add
mov
nop
sbb
jl
xchg
jg
outsb
loope
aaa
push
add
dec
mov
out
xor
add
pop
inc
pop
mov
sahf
inc
add
adc
add
ret
pop
loop
add
add
add
add
add
sbb
jnp
adc
add
addr16
ror
xchg
xchg
inc
add
xchg
movsb
pop
test
cmpsb
pop
mov
inc
add
add
out
pop
in
bound
add
movsl
pop
adc
add
add
pop
pop
mov
lahf
and
add
jmp
movsb
pop
dec
and
pop
mov
add
cmp
rcll
mov
pop
add
add
add
add
add
pop
add
arpl
add
xor
add
dec
add
add
icebp
nop
in
fsts
add
and
add
hlt
push
mov
fstpt
imul
movsl
pop
jne
pop
dec
sub
sbbl
pop
jne
add
sbb
add
add
and
add
push
dec
push
add
pop
pop
or
aas
std
shll
jge
xor
dec
repz
fidivs
add
add
sbb
push
add
fmuls
nop
or
pop
xor
add
pop
add
add
pop
call
imul
add
add
pop
ljmp
add
add
add
add
push
add
dec
mov
add
out
gs
arpl
add
repnz
xchg
push
pop
and
add
imul
stc
int
loopne
into
adc
add
mov
pop
push
add
add
inc
pop
mov
cmpsb
pop
cmp
add
add
ja
div
ret
test
sbb
jae
add
add
icebp
leave
jne
add
xchg
mov
pop
sbb
in
lods
lock
jbe
dec
cmp
xor
jno
add
dec
xchg
pop
add
add
pop
and
add
pop
iret
push
in
lods
add
add
add
add
pop
jno
add
pop
push
pop
setno
jmp
addr16
lock
pop
xor
add
sbbb
pop
scas
lods
flds
or
add
mov
inc
pop
scas
dec
push
pop
inc
add
fimuls
pop
add
inc
pop
xlat
lds
in
loope
jo
add
add
lods
ljmp
pop
mov
add
call
daa
pop
sbbb
push
add
cmp
pop
jg,pt
out
stc
imul
je
sbbb
arpl
add
idiv
lret
movsl
pop
cmpsb
pop
and
mov
pop
jnp
push
or
mov
dec
sub
jns
jno
add
call
sbbb
nop
nop
cld
es
in
pop
pop
aas
sub
dec
inc
pop
push
jbe
fldt
xchg
int
sbb
pop
sbbb
mov
add
in
and
stc
dec
outsb
mov
pop
je
pop
dec
cwtl
lea
add
pop
into
dec
sbb
add
dec
and
add
jle
add
add
pop
xor
add
pop
cmp
pop
inc
add
shrl
inc
add
frstor
mov
sbb
add
add
add
cmp
jne
pop
pop
mov
pop
int3
out
jb
add
faddl
pop
bound
add
pop
fcoml
out
or
dec
push
sbb
add
xchg
mov
add
jecxz
in
lcall
lods
aad
mov
push
add
xchg
pop
pop
loopne
mov
or
daa
pop
lods
push
mov
add
test
loope
aas
add
push
add
rcrb
or
pop
push
pop
mov
push
mov
add
xor
ljmp
pop
sbbb
cmpsl
pop
es
divl
xchg
mov
mov
pop
mov
fdivrs
cmp
pop
xchg
add
mov
xchg
ljmp
pop
popf
insl
pop
and
add
add
mov
pop
insl
pop
xor
pop
adc
add
pop
std
test
sarl
and
add
add
pusha
add
or
ss
jl
pop
xor
add
add
lds
leave
fnstsw
pop
sbb
rcrb
pop
pop
mov
pop
popa
add
jb,pt
add
pop
mov
add
xchg
xchg
clc
mov
movsl
pop
inc
pop
mov
mov
pop
xor
add
mov
dec
push
movsl
pop
mov
scas
add
add
cmpsb
pop
es
xchg
mov
pop
mov
into
push
pop
mov
cwtl
pop
je
pop
shll
add
fwait
std
sub
and
add
outsb
pop
testl
sbbb
add
scas
dec
push
daa
pop
add
add
add
push
xor
jnp
add
aaa
ds
pop
idivl
pop
push
mov
cmp
pop
cmpsb
pop
imul
leave
xchg
scas
jecxz
push
add
fnstenv
sbbl
add
lcall
pop
and
mov
mov
popa
add
inc
pop
aaa
ljmp
pop
or
add
stc
sub
arpl
add
pop
repnz
mov
loope
mov
add
shlb
add
adc
add
mulb
movsl
pop
jno
add
add
fdivs
dec
xchg
lds
adc
add
inc
add
push
sbb
testb
pop
mov
sar
cld
push
add
test
push
add
inc
pop
push
push
sbb
mov
clc
movsb
pop
addr16
std
adc
fcomps
sahf
cmpsl
pop
repnz
push
add
scas
cmp
add
rcrb
mov
lds
add
test
pop
and
add
push
sbbl
out
sub
inc
pop
pop
pop
pop
pop
mov
in
pusha
add
call
adc
add
add
mov
hlt
fstl
push
outsb
adc
add
add
pop
and
add
and
add
fwait
cs
or
pop
inc
pop
add
add
add
push
add
push
mov
xor
add
enter
aaa
test
ja
pop
fs
adc
add
pop
cmp
pop
sbbb
es
inc
pop
out
stos
aad
pop
mov
pop
mov
loop
stos
pop
das
cli
push
out
jnp
and
cmpsb
pop
cwtl
add
add
add
mov
add
mov
rcrl
jnp
test
lock
test
dec
pop
sarl
push
add
add
push
lods
pop
cmc
sub
add
lds
add
ret
inc
add
dec
add
add
add
bnd
add
pop
pop
pop
or
lea
aaa
push
xor
add
pop
mov
scas
mov
pop
sbb
push
jb
add
pop
xlat
inc
pop
push
aaa
mov
sahf
pop
clc
xchg
out
push
mov
mov
pop
ss
shll
xchg
dec
xchg
sbbl
cwtl
icebp
push
add
scas
xor
outsl
add
add
sbb
xlat
imul
add
push
jns
test
rcrb
adc
add
add
outsb
in
mov
pop
xchg
repz
pop
mov
add
add
add
in
push
scas
sub
cmpsb
pop
add
add
out
pop
pop
push
add
outsb
lock
add
sub
pop
popa
add
xchg
lds
pop
insb
pop
jp
pushf
leave
jg
adc
nop
in
stc
mov
dec
outsb
mov
shrl
in
jne
xchg
nop
test
mov
shl
adc
sti
outsl
rcrb
add
cmp
add
popa
add
rcrl
add
fs
sbb
pop
pop
fwait
jmp
add
rcrl
add
lret
adc
add
ds
int3
ja
inc
add
mov
adc
add
mov
add
dec
cmp
dec
stos
ficompl
adc
add
add
inc
add
shl
pop
sbb
and
pop
js
pop
push
lds
jg
lahf
dec
ja
cmp
pop
fs
out
lcall
dec
popf
lods
mov
add
xchg
into
push
xchg
cmp
pop
insl
dec
push
add
or
push
sub
add
xor
add
std
mull
hlt
mov
cmc
jns
out
push
jl
mov
inc
pop
pop
popa
add
cmp
stos
inc
add
push
scas
push
imul
adc
aaa
out
push
hlt
in
test
add
setns
arpl
add
pop
fwait
adc
pop
leave
jne
sub
cmc
ss
ret
pop
in
mov
pop
jecxz
js
les
xor
add
add
icebp
movsl
pop
pop
mov
push
push
jb
add
mov
enter
fidivrs
jl
insl
push
add
or
inc
pop
mov
add
add
pop
enter
sbbl
mov
pop
sub
mov
stos
mov
sbbl
pop
sti
jge
ret
pop
mov
pop
mov
add
add
clc
adc
pop
mov
ja
xchg
sbb
add
stc
mov
add
in
mov
adc
pop
inc
pop
push
rcrl
pop
rcl
add
add
sbb
cwtl
aad
push
and
add
mov
push
add
imul
pop
icebp
xchg
nop
push
add
movsl
pop
adc
pop
mov
lock
testl
in
leave
pop
in
out
sbb
mov
lcall
xor
add
push
mov
add
inc
pop
sti
lock
pop
lahf
jp
pushf
xor
out
push
jecxz,pn
movsb
pop
aaa
test
pop
cli
xchg
mov
push
cmp
add
pop
scas
mov
inc
pop
cmp
xchg
adc
add
and
add
pop
push
pop
gs
or
mov
pop
xor
pop
dec
repz
add
push
lcall
add
mov
inc
pop
add
pop
stc
xchg
pop
pop
xchg
lea
jmp
xor
add
xor
add
add
outsl
iret
dec
imul
in
sbb
leave
dec
aaa
adc
les
out
lcall
jg
pushf
outsb
fimull
cmp
xor
add
pop
push
out
pop
dec
dec
out
imul
pop
pop
cmp
add
mov
scas
int
cld
fisubrs
jb
add
pop
jmp
add
mov
sub
adc
add
pop
dec
pop
lods
cs
cmp
pop
add
add
pop
xchg
cmpsl
pop
inc
pop
int
pop
mov
aam
pop
or
jns
pushf
dec
into
mov
pop
fistps
sbbl
pop
adc
add
pop
fistpl
inc
pop
pop
sbb
inc
add
insl
js
pop
push
add
addr16
mov
ret
pop
ss
sub
mov
sub
mov
lds
jge
lds
arpl
add
pop
or
adc
xchg
pop
fstps
pop
rcrl
add
inc
add
mov
pop
inc
pop
cwtl
hlt
ss
pop
out
or
or
push
and
lods
mov
sbb
sub
or
pop
push
mov
call
add
ficoml
add
lods
jl
pop
jge
shll
pop
mov
fidivs
jb
add
push
pop
repz
and
add
pop
insb
xor
add
pop
push
pop
dec
jmp
pop
jno
add
add
xchg
mov
cli
jbe
call
add
add
lret
pop
idiv
dec
fldl
add
stos
pop
and
add
nop
push
xchg
mov
inc
pop
mov
mov
add
xlat
fisubs
pop
cmp
pop
cmp
pop
mov
mov
int
mov
inc
add
sahf
out
hlt
call
pop
or
pop
xor
dec
test
mov
into
enter
xor
add
repnz
fcomps
inc
add
test
sub
xor
aad
pop
push
pop
addr16
inc
add
xor
fsubs
pop
pop
sbb
pop
clc
xchg
inc
add
and
push
mov
test
mov
pop
xor
add
aad
mov
xor
add
fdiv
cmp
pop
mov
and
jbe
add
pop
pop
sbbb
add
pop
lcall
pop
fs
jmp
pop
push
xchg
cli
mov
je
pop
je
mov
mov
cwtl
lods
mov
push
add
movsl
pop
xchg
add
xchg
std
cmp
sbbl
add
pop
xchg
push
sti
cmp
loope
enter
add
push
std
ret
pop
dec
in
or
les
add
push
add
fsubrs
add
xchg
int3
inc
pop
hlt
sbb
nop
sahf
dec
pop
pop
pop
lea
ret
adc
add
inc
add
in
xchg
fcmovb
pop
cmp
push
add
fwait
xor
add
add
call
addr16
scas
dec
adc
add
stos
mov
ds
add
iret
adc
add
jno
add
add
xor
add
add
add
add
add
add
repnz
inc
add
xor
add
sbb
cli
push
add
iret
cmp
mov
add
fucomip
fsubrl
pop
mov
add
or
mov
jg,pt
xchg
iret
jae
add
out
cmp
sahf
mov
add
shll
add
lods
sbb
out
xor
add
sbbl
add
mov
sbb
int
add
inc
add
pop
aad
push
pop
and
add
pop
xor
add
pop
test
filds
mov
dec
cmp
add
mov
push
add
cltd
pop
pop
jae
add
add
ss
inc
pop
in
roll
pop
xor
pop
jge
adc
inc
add
icebp
or
imulb
cmp
add
ljmp
jnp
add
ret
ja
jno
add
sub
int
fs
fs
push
jecxz
dec
dec
sti
adc
xor
add
pop
les
pop
lods
stos
jmp
lea
out
cmc
addr16
shl
adc
and
add
sahf
mov
pop
xor
add
jg
mov
in
xchg
add
sbb
in
and
add
add
pop
mov
sbbl
pop
test
add
fs
rcrb
out
scas
or
add
iret
adc
add
pop
mov
js
pop
repz
add
xchg
sub
sbb
add
dec
hlt
cli
ljmp
xor
add
add
adc
add
add
pop
sbb
cmpsb
pop
and
add
repnz
add
mov
lea
cmp
pop
push
pop
pop
jb
add
inc
add
jo
add
loope
std
pop
inc
add
xchg
pop
sub
pop
add
add
pop
mov
inc
add
int3
fmull
add
add
add
mov
aam
xchg
dec
pop
jnp
add
add
add
in
mov
and
mov
jb
add
stc
lods
adc
jg
addr16
in
inc
pop
mov
rcll
lret
jae
add
inc
pop
in
jne
cltd
aad
loop
jbe
add
mov
push
cwtl
imul
fisttpll
and
add
mov
pop
stc
add
es
inc
add
mov
mov
pop
adc
xor
add
add
mov
lahf
pop
pusha
add
sub
nop
popa
add
in
push
movsl
pop
lahf
add
add
pop
ret
pop
fcomip
sti
dec
cmp
pop
lea
lods
je
pop
aaa
sbbl
xor
add
add
in
cmp
xor
pop
xchg
stc
insl
mov
adc
cli
pop
cvtpi2ps
add
pop
mov
mov
ljmp
out
xchg
or
fistps
mov
mov
aad
push
pop
pop
sbbl
dec
mov
inc
add
gs
pop
gs
imul
add
add
cmp
popa
add
lds
pop
mov
xchg
lret
fsubl
pop
mov
mov
sbb
add
pop
xor
add
push
add
pop
sub
cld
cs
jecxz
jecxz
mov
add
fs
scas
push
loop
arpl
add
negb
sbbb
ja
pop
js
sbb
test
mov
push
add
jno
add
out
popa
add
aam
pop
jbe
cmp
test
add
add
add
pop
filds
jo
add
add
fstps
mov
fdivrs
test
sub
pop
pop
inc
pop
sub
in
add
mov
in
jmp
pop
jnp
add
inc
add
mulb
mov
cmp
pop
daa
pop
les
add
jne
out
or
imul
or
test
pop
jl
add
push
adc
or
out
lret
add
jmp
xchg
into
out
mov
and
add
pop
test
lods
pop
pop
or
mov
pop
cmp
leave
lcall
add
or
shlb
add
adc
pop
adc
add
add
pop
lcall
add
ret
add
mov
add
add
add
das
ret
pop
dec
sbb
ss
inc
add
stc
scas
daa
pop
xlat
gs
inc
pop
ss
pop
dec
loope
adc
add
jp
pop
pop
mov
add
add
mov
jg
inc
pop
inc
pop
test
outsl
addr16
adc
add
rcrb
sbbl
std
daa
pop
mov
pop
insb
jne
int3
insl
xor
add
pop
xor
mov
std
inc
pop
sub
add
and
add
popf
sarl
add
call
add
lods
jb
add
add
out
and
add
not
out
inc
pop
mov
js
ja
pop
popa
add
rcrb
add
rcrb
add
cmp
add
fists
das
cmpsb
pop
gs
xor
add
std
inc
add
and
add
pop
out
shrb
add
fiadds
mov
mov
jo
add
movsb
pop
mov
ss
pop
cmp
add
testb
add
ret
leave
nop
jecxz
dec
out
xchg
xchg
lock
add
push
pop
mov
sahf
lock
pop
fucom
pop
dec
sarl
push
jg
pop
les
pop
dec
mov
pop
or
add
jb
add
add
push
dec
aaa
jecxz
aam
add
or
add
lahf
ret
pop
lea
jmp
cmpsb
pop
enter
pop
aaa
push
cs
pop
cwtl
inc
pop
cli
pop
gs
jmp
cltd
push
mov
and
add
add
add
add
add
sub
pop
ljmp
add
pop
das
fmull
scas
sbb
add
stc
mov
xchg
mov
jne
mov
add
add
imul
movsl
pop
dec
jae
add
idivl
and
add
jb
add
xchg
rcll
add
sbb
or
pop
cs
add
push
mov
add
xlat
ret
pop
mov
dec
sbb
sub
lds
add
imul
mov
pop
les
pop
arpl
add
add
pop
and
add
dec
decb
sub
jl
into
mov
cmpsb
pop
sbb
fnstsw
int3
push
sub
jg
add
inc
pop
ret
icebp
mov
cmp
mov
pop
dec
jnp
lds
cmpsb
pop
or
pop
and
add
mov
pop
xor
add
add
ds
pop
insb
addr16
rcrl
jmp
sbbl
add
int3
sub
pushf
mov
lcall
into
jge
sub
mov
add
out
xchg
sub
xchg
xchg
pop
push
mov
decb
add
mov
lret
inc
add
inc
add
push
stos
jp
mov
add
add
add
dec
push
add
inc
add
cld
pop
mov
pop
pop
cmp
imul
icebp
dec
jns
pop
loopne
ffree
pop
bsf
add
pop
jae
add
pop
loopne
pop
mov
adc
lahf
int
pop
sahf
sbb
fiaddl
add
cmp
add
pop
pop
ljmp
pop
repz
add
dec
push
add
adc
inc
pop
pop
leave
xchg
fucomp
and
pop
push
add
mov
add
sti
xchg
dec
stc
mov
lds
xchg
dec
sub
add
pop
cltd
stos
icebp
sbbl
mov
push
sbbb
push
add
sub
cli
pop
lds
mov
cld
mov
mov
pop
fidivs
adc
cmpsl
pop
xor
add
inc
add
cmpsb
pop
lods
lds
pop
or
add
movsb
pop
dec
sub
aaa
ret
rcrb
out
pmulhw
add
pop
cli
mov
int
outsl
sbb
cmp
pusha
add
mov
pop
add
add
into
aad
pop
mov
add
add
pop
add
sahf
push
add
stc
add
cmc
xchg
fwait
js
xchg
pop
in
fimuls
lahf
pop
pop
mov
mov
or
mov
jmp
rcrb
add
stos
addr16
js
leave
repnz
jbe
pop
mov
adc
jns
push
ret
sub
xchg
mov
pop
pop
pop
and
push
add
test
insb
jl
push
add
pop
loopne
negb
lahf
iret
cwtl
int3
negb
mov
add
mov
jg
pop
cmp
cli
push
add
mov
add
sbb
pop
or
add
and
add
out
repz
flds
add
into
in
int
jge
sbbl
add
pop
add
add
pop
mov
sbbl
pop
adc
add
adc
add
add
pop
dec
pushf
and
add
add
sub
cwtl
pop
mov
inc
pop
mov
or
xchg
pop
jp
mov
add
xlat
aam
lret
je
sti
in
push
ret
pop
jo
add
or
jne
jb
add
jecxz
ljmp
pop
rcrl
push
insb
jbe
rcrb
add
es
and
add
pop
dec
cmp
and
add
pop
outsl
pop
cmp
rcrl
jb
add
add
cmpsl
pop
in
adc
add
bound
add
add
sbb
fyl2x
iret
xor
add
test
add
mov
pop
sbb
and
add
push
scas
ljmp
add
xchg
push
add
dec
push
add
stos
es
add
pop
cs
adc
add
pop
sbb
aaa
mov
add
loope
mov
lcall
adc
add
or
add
push
sub
pop
push
cmp
dec
or
add
and
add
sbbl
lahf
push
sbbb
sbbl
or
add
add
adc
add
and
mov
push
pushf
jmp
pop
mov
je
pop
push
add
out
sbbl
add
jg
adc
add
mov
add
lret
push
adc
add
add
pop
mov
add
inc
add
cmp
xor
add
and
add
mov
mov
pop
pop
push
add
xor
add
sub
sbbb
icebp
mov
jne
outsl
sub
ret
pop
xor
add
add
add
lcall
add
aaa
add
add
add
push
push
pop
xor
add
shlb
add
inc
pop
out
inc
pop
lret
sbbl
xchg
popf
lods
sar
jae
add
add
scas
mov
pop
adc
sbbl
add
mov
int
in
ljmp
jo
add
pop
adc
add
add
and
add
adc
add
sbbb
add
repnz
sub
pop
mov
add
pop
lea
cmc
push
dec
frstor
stc
sub
pop
fildl
add
iret
shr
iret
daa
pop
mov
inc
pop
mov
pop
outsl
std
dec
leave
ja
pop
insl
ficoms
add
dec
stos
cli
mov
pop
es
icebp
ficompl
repnz
sbb
jo
add
dec
mov
pop
pop
push
xchg
mov
add
mov
bound
add
out
mov
cld
fucomip
jne
mov
add
into
push
add
addr16
jne
cs
repz
pop
inc
pop
sbbl
add
loope
push
add
frstor
add
add
push
unpckhps
add
std
fstpt
int3
mov
add
cwtl
movsl
pop
ljmp
cltd
call
pop
pop
ljmp
adc
pop
jnp
or
pop
adc
add
pusha
add
and
add
mov
cmpsb
pop
sarl
add
fsubrs
lds
add
into
das
dec
xchg
mov
gs
push
add
or
add
ret
pop
call
push
add
sub
add
inc
add
in
and
add
add
adc
hlt
clc
inc
add
lahf
pop
cld
jp
sarb
jb
add
pop
ret
pop
xchg
insl
cmp
pop
cmpsl
pop
mov
add
popa
add
pop
inc
add
adc
add
loope
stos
inc
pop
xchg
lock
lea
add
adc
cs
cwtl
mov
adc
add
nop
jmp
pop
xchg
mov
clc
addr16
popa
add
push
pop
ljmp
pop
cs
push
pop
lcall
push
lods
je
test
pop
xchg
cmpsb
pop
scas
mov
add
jo
add
mov
insb
icebp
cld
aad
adc
add
daa
pop
rclb
add
push
ss
add
add
inc
add
xor
pop
sub
pop
enter
ljmp
add
add
add
notl
cmp
cmp
pop
pop
cltd
out
and
add
add
imul
rcrl
sub
push
add
sub
pop
mov
mov
add
popf
xor
add
sbbb
sahf
jle
int
jle
or
cmp
jp
add
push
jmp
arpl
add
lea
test
dec
je
push
jnp
scas
push
jle
xchg
lea
mov
add
in
repz
pop
mov
xor
pop
push
add
jae
add
fsubl
pop
sub
bound
add
mov
pop
jp
mulb
add
add
or
mov
pop
inc
pop
or
pop
fwait
push
bound
add
aas
stc
jnp
pop
add
jbe
xor
pop
out
mov
push
fcompl
out
cmp
add
xor
add
add
fstpl
and
add
stos
add
mov
jnp
add
nop
into
std
pop
mov
pop
inc
pop
call
rorb
or
in
sub
pop
jle
mov
loopne
inc
add
push
add
ja
hlt
sbb
add
add
adc
add
add
xor
add
dec
gs
stos
push
mov
cmp
cwtl
fsts
sbb
mov
lds
mov
xor
add
add
lods
mov
add
fstp
mov
cli
jl
dec
pop
lods
out
hlt
fsts
add
mov
bound
add
fdivp
cld
push
sbb
mov
pop
push
adc
add
pop
add
jge
add
add
add
add
inc
add
fsubrs
mov
rcrl
stc
lds
pop
cli
or
push
pop
mov
add
das
sbb
cmp
nop
or
test
add
mov
add
cltd
repnz
sti
push
add
pop
pop
cli
xchg
fwait
loop
mov
imul
push
xor
add
add
dec
mov
js
xlat
cmp
mov
add
pop
dec
loopne
daa
pop
imul
pop
sbb
or
pop
fdivrs
dec
cld
cltd
jmp
jmp
jo
add
and
add
cmp
test
mov
add
sbb
or
pop
xchg
lds
pop
nop
aad
fs
xor
add
adc
pop
pop
pop
sbbl
add
scas
cld
jg
xchg
adc
add
push
jmp
shlb
add
add
add
add
bound
add
pop
dec
test
mov
adc
add
add
stos
pop
mov
popl
xchg
jno
add
pop
or
add
add
pop
les
push
add
mov
mov
pop
jecxz
int3
mov
add
mov
jmp
frstor
fsub
pop
icebp
test
dec
mov
add
and
add
add
cltd
add
out
push
enter
popf
push
pop
sahf
cmp
repz
shrb
inc
add
mov
ret
pop
xchg
lods
dec
das
sbb
inc
add
cmpsl
pop
out
sbb
push
add
sbb
pop
int
xchg
rol
pop
test
xchg
bound
add
stos
mov
add
pop
lret
cli
sbbb
pop
cli
stos
shr
rcrl
and
sub
out
out
sub
test
hlt
loope
stos
adc
add
inc
pop
ja
adc
add
add
mov
add
lret
sbbl
pop
daa
pop
cltd
sbb
pop
incb
add
jg
stos
jp
pop
jmp
test
pop
add
add
mov
das
fldl
add
in
mov
xor
add
test
nop
rcrl
xchg
jecxz
mov
xchg
das
divb
add
cs
mov
mov
pop
sbb
sahf
dec
ljmp
jnp
std
sub
pop
nop
rcrl
pop
es
dec
sub
test
clc
fs
mov
or
sub
push
add
imul
fcom
sbb
pop
push
add
inc
pop
fcoms
test
imul
inc
pop
dec
inc
add
ffree
pop
mov
out
out
jecxz
xchg
jp
jle
mov
outsl
pop
inc
pop
lahf
xchg
cmc
testl
loopne
push
pop
xchg
sub
pop
popl
add
sarl
push
add
or
jg
add
cmp
adc
add
pop
fabs
pop
push
add
rcrb
rcrl
popa
add
pop
stc
cld
sahf
fistl
add
sub
lds
add
mov
jecxz
lcall
pop
inc
pop
push
test
add
test
scas
xor
add
loopne
imul
xchg
ret
pop
mov
push
adc
add
push
or
int3
xchg
pop
cltd
mov
mov
add
popa
add
adc
add
dec
in
xchg
or
add
pop
inc
pop
mov
and
pusha
add
dec
and
add
outsl
out
push
or
sbbb
pop
pop
aad
pop
imul
sbbb
jp
stos
jl
pop
pop
fdivr
sbb
pop
popa
add
pop
or
jbe
pop
or
arpl
add
mov
inc
add
mov
inc
add
fcompl
pop
test
adc
add
sbb
pop
dec
sub
add
sbb
pop
pop
inc
add
outsl
insb
icebp
test
add
adc
add
std
lahf
sahf
sahf
shr
push
aam
clc
mov
lcall
in
fisttpl
lret
testl
cmpxchg
pop
jno
add
xchg
push
add
mov
add
add
lods
mov
pusha
add
jecxz
pushf
fwait
pop
jb
add
sbb
arpl
add
call
dec
ss
add
add
xor
add
cmp
jmp
gs
daa
pop
push
jae
add
pop
out
filds
add
out
jno
add
sbbl
add
add
sbbb
and
add
ret
push
aas
sub
add
xchg
xor
add
pop
popf
dec
adc
add
arpl
add
enter
mov
aas
lahf
push
iret
test
out
cs
jbe
pop
ret
pop
push
pop
jo
add
add
adc
add
mov
pop
add
inc
pop
out
stos
int3
cld
add
add
mov
push
loopne
or
pop
push
or
pop
bound
add
xchg
ss
add
add
add
lods
mov
aad
inc
add
sub
pop
lcall
sub
repz
das
rcrb
ja
rcrl
daa
pop
popl
push
add
pop
sti
mov
add
xchg
mov
pop
fdivrs
imul
fists
out
and
inc
pop
fmull
and
sbb
pop
mov
cmp
xlat
jmp
inc
pop
xchg
sti
icebp
push
out
mov
jbe
push
add
cmp
adc
and
add
pop
imul
inc
add
inc
pop
sub
add
mov
gs
push
pop
pop
cmc
ret
pop
cltd
mov
mov
fiaddl
cli
in
jbe
jo
add
sub
leave
push
mov
push
pop
jno
add
sti
xchg
jb
add
lret
repnz
add
jp
mov
push
pop
cmp
pop
cmp
cltd
dec
popa
add
arpl
add
fs
int
add
xchg
lock
fidivl
pop
mov
xchg
and
add
add
sbb
xor
xchg
push
popl
sub
sbbb
add
pop
out
push
xchg
jb
add
mov
dec
cwtl
out
testl
add
add
add
imul
pop
or
add
add
lcall
cmp
mov
cwtl
sbb
adc
add
cltd
or
in
pop
xor
pop
cs
sub
stos
cmc
cmp
or
add
js
pop
sbb
test
pop
cltd
ljmp
lods
nop
fiaddl
add
and
add
dec
loop
push
in
inc
add
lcall
add
pop
or
sub
pop
add
add
dec
bound
add
add
sbb
test
cli
mov
cli
es
jb
add
dec
dec
xor
add
pushf
fildll
add
add
pop
pushf
int3
jle
mov
repz
add
adc
add
pop
pushf
inc
add
lock
aad
scas
pusha
add
xchg
sbb
mov
jnp
add
pop
loop
cwtl
push
pop
in
sbbb
xchg
out
mov
out
mov
pop
movsb
pop
and
add
pop
sbb
shlb
add
push
add
int3
cmpsl
pop
mov
pop
xchg
cmp
pop
pusha
add
add
add
add
add
mov
out
and
add
mov
xchg
out
filds
pop
inc
add
xor
add
flds
add
jl
add
xor
add
in
push
push
pop
mov
int
cmp
dec
push
lods
mov
pop
mov
mov
pop
xor
add
pop
es
sti
outsb
je
mov
dec
sbbb
push
and
add
jnp
mov
dec
inc
pop
push
sub
pop
std
or
add
pop
add
add
sarl
mov
pop
sbbl
cmp
fmul
movsb
pop
xchg
gs
popf
fisubrs
dec
mov
je
or
pop
and
pop
std
push
pop
mov
sbbb
pop
jno
add
mov
add
cmp
pop
mov
add
inc
pop
sbb
add
clc
push
sbb
pop
inc
add
pop
xchg
jg
xchg
pop
pop
scas
pop
pop
push
add
sti
hlt
inc
pop
cmpsb
pop
add
lahf
sub
mov
ds
inc
add
stos
or
add
sbb
add
or
pop
rcrl
in
fs
pop
icebp
sbb
in
cmpsb
pop
pop
dec
movsb
pop
cld
mov
cmp
add
pop
sbb
ret
pop
repz
add
jns,pt
cmp
add
cmpsl
pop
cmpsb
pop
inc
add
fistpll
mov
adc
xchg
rcl
imul
add
sub
xor
sbb
add
add
fs
aam
add
push
cmp
into
add
add
addr16
pop
pop
mov
int3
daa
pop
cmpsl
pop
add
add
lock
repz
jns
fistpl
dec
sbb
sbb
inc
add
xor
pop
dec
push
pop
cmp
add
pop
std
aam
pop
pop
and
add
add
pop
sub
mov
iret
test
adc
push
mov
add
mov
pop
adc
add
test
add
add
arpl
add
add
pop
daa
pop
arpl
add
add
test
cwtl
stc
sbb
pop
sbb
cld
loope
inc
pop
cltd
mov
lods
pop
add
add
repz
pop
je
lods
sub
sub
pop
lock
sbb
sub
add
iret
xchg
push
add
lock
ss
mov
xchg
add
add
add
ljmp
inc
add
or
add
dec
add
add
and
pop
jns
add
and
add
add
imul
pop
int
mov
fwait
inc
add
cmc
mov
add
adc
add
add
int3
jb
add
lods
fidivrl
add
daa
pop
push
push
aam
stos
adc
mov
and
add
or
sub
add
add
cmp
sbbl
cmp
clc
rol
pop
mov
add
cmp
int
sbb
add
fs
mov
add
push
add
dec
imul
sub
jnp
push
pop
sbbl
dec
sbb
add
mov
pop
cltd
xchg
xchg
sbbl
dec
inc
add
xchg
sbbl
hlt
adc
add
outsb
outsb
hlt
xchg
fs
fiadds
push
push
pop
push
add
mov
pop
jge
test
pop
rolb
add
push
add
es
sub
pop
cmp
lock
add
push
pop
inc
add
dec
mov
test
add
fwait
ret
add
loop
mov
mov
add
ficoml
push
add
push
add
and
stos
fimull
dec
mov
lcall
add
add
inc
pop
pop
stc
fsubrl
xchg
or
add
pop
cmp
test
lods
sbbb
cmp
pop
xchg
add
pop
pop
leave
mov
pop
sub
in
dec
or
pop
jo
add
add
arpl
add
pop
fisttpll
sbbb
aaa
inc
pop
sbbb
xlat
xchg
add
cmovg
xor
add
and
add
ds
adc
add
adc
and
add
pop
or
mov
stc
cwtl
dec
sub
add
ret
sub
test
adc
add
push
pop
js
inc
pop
and
pop
adc
add
add
add
adc
add
stc
dec
jl
repz
add
push
add
jnp
inc
pop
ja
pop
jl
pop
and
addr16
loop
cs
ficoml
add
inc
add
and
add
add
iret
lcall
outsb
fdiv
lea
mov
pop
sub
sbb
add
add
popf
and
add
add
sbb
pop
pop
pop
ror
mov
pop
cmp
inc
pop
stos
push
xor
imulb
ret
pop
jae
add
add
pop
mov
add
stos
push
daa
pop
idivb
add
jne
sub
add
mov
pusha
add
xor
std
fsubrs
add
add
loopne
nop
fptan
adc
add
nopl
notb
inc
add
cmp
xchg
sti
sti
ja
pop
adc
add
dec
ss
adc
notl
jg
sbb
add
nop
xor
and
add
add
pop
rcll
add
sbb
cmpsl
pop
sbb
imul
add
dec
inc
add
pop
sub
jb
add
jmp
ret
mov
pop
aam
adc
add
add
pop
pop
pop
sbb
or
clc
inc
pop
jns
aad
sbbb
add
rcrb
pop
sbbb
pop
push
pop
add
jb
add
addr16
xor
add
out
stos
mov
sub
push
adc
add
push
add
popf
lcall
or
pop
jne
or
fidivrs
add
jbe
pop
jl
pop
jno
add
add
pop
in
rcrl
out
mov
mov
add
aad
imul
stos
and
add
dec
out
imul
ljmp
rcrb
push
mov
enter
out
and
add
ja
pandn
pop
shl
mov
sti
lret
out
mov
cmp
cltd
mov
add
push
pop
ljmp
add
pop
pop
pop
and
add
jne
sbb
cmpsl
pop
xchg
mov
int
push
push
sbb
inc
add
fbstp
add
push
pop
jp
fisttpll
sub
add
das
out
mov
add
add
cmp
inc
pop
ficomps
pop
or
mov
jno
add
mov
pop
xchg
test
jae
add
add
lahf
sbbb
add
stc
jl
add
add
or
pop
syscall
pop
daa
pop
and
add
pop
jo
add
pop
push
sub
pop
mov
add
cs
fisttps
out
cmpsb
pop
cmp
or
dec
fs
xor
add
push
adc
add
out
push
add
sub
pop
popa
add
cmp
mov
stos
or
push
add
add
add
adc
add
sbb
pop
cltd
psllw
pop
cmp
add
mov
es
jns
les
add
testl
dec
leave
adc
add
jmp
pop
mov
pop
scas
inc
add
mov
add
push
add
ret
rcrb
adc
add
add
sbb
pop
mov
pop
incl
call
pop
les
pop
jmp
ja
push
and
mov
add
add
add
lods
pop
inc
pop
sbbl
les
cmp
mov
stc
add
add
pop
popf
inc
add
pop
aas
fildll
xor
add
lahf
inc
pop
jl
pop
sbb
les
outsl
pushf
jbe
mov
sub
pop
pop
std
sbbb
and
add
daa
pop
movsl
pop
xor
jnp
pop
lods
jmp
outsl
stos
pop
idivb
add
inc
pop
push
scas
or
add
add
jmp
shlb
inc
pop
adc
je
in
cmp
add
ljmp
add
add
cld
pop
adc
pop
fstpt
adc
jecxz
in
in
ss
pop
or
add
dec
xchg
xchg
push
add
mov
add
push
dec
les
clc
pop
nop
and
add
pop
add
xor
shl
pop
dec
inc
add
into
popa
add
push
cld
enter
inc
add
jmp
push
repnz
dec
and
add
cli
push
add
ficomps
push
add
pop
shll
filds
popa
add
mov
in
push
push
in
ret
pop
iret
bound
add
pop
sarl
divb
pop
cmp
pop
je
add
adc
and
arpl
add
add
pop
push
add
out
jmp
pop
addr16
enter
add
and
add
popf
lods
push
inc
pop
inc
add
lock
repnz
out
aam
popa
add
inc
pop
sbb
add
push
ret
pop
xor
xchg
iret
jbe
jbe
pop
mov
loopne
ret
mov
add
mov
sbbl
idivb
pop
dec
cltd
or
into
int
add
fs
sbb
adc
add
pop
inc
pop
jl
push
jo
add
cli
ss
pop
stos
dec
sbbl
icebp
cmpsb
pop
arpl
add
pop
cmc
gs
sbb
add
add
pop
mov
in
loop
push
add
cmp
jg
lret
push
stos
push
add
and
add
fsubrs
add
mov
sti
xchg
cltd
imul
shll
pop
mov
es
insl
leave
pop
mov
pop
xlat
outsb
jae
add
cltd
fnsave
add
pop
inc
add
adc
add
rolb
jbe
loope
sarl
loopne
sbb
loope
inc
add
es
sbbl
add
mov
fmuls
add
mov
fcomi
adc
add
iret
pop
pop
jmp
mulb
add
stos
cmp
pop
addr16
push
add
inc
pop
mulb
add
insl
movsl
pop
lods
push
pop
sbbb
mov
add
dec
ficoml
add
notb
xchg
cmp
inc
pop
add
mov
test
pop
jg
mov
pop
in
sti
push
rcrb
fwait
out
sbb
mov
add
and
add
add
mov
pop
xchg
jae
add
dec
xchg
xchg
loop
jb
add
pop
rcrl
sub
inc
pop
cmp
pop
xor
mov
pop
fwait
sbbb
add
pop
loopne
or
push
pop
dec
sub
out
cmp
add
mov
jns
movsl
pop
sbb
ret
pop
pushf
outsl
mov
pop
push
pop
xchg
pop
call
inc
pop
xchg
sbbb
add
dec
dec
fwait
enter
into
mov
add
mov
int
repnz
les
imul
sbb
pop
add
push
into
aam
imul
inc
pop
test
mull
es
add
add
and
add
add
les
pop
mov
scas
outsl
and
add
dec
arpl
add
sub
sub
add
adc
add
loop
dec
fs
sbb
and
add
sbbb
pop
test
xchg
dec
stos
cld
xchg
stos
mov
lea
pop
fld
pop
jns
push
push
xor
add
pop
sub
pop
jbe
pop
or
jb
add
fwait
jge
push
add
faddl
add
sub
mov
inc
add
and
add
loopne
repz
pop
aaa
sbb
add
aam
pop
push
xchg
repz
fstpl
pop
adc
add
aaa
jne
lock
push
pop
aaa
pavgb
pop
xor
add
sti
jge
imul
into
cmp
cmpsb
pop
and
add
adc
sbb
pop
pop
pop
out
sbb
cmpsl
pop
out
inc
add
mov
jns
pop
push
rolb
add
pop
adc
xor
pop
cld
jle
push
add
fdivrl
sub
mov
adc
add
add
pop
insl
xor
add
ja
mov
cmpsb
pop
repnz
jmp
pop
push
lds
add
xchg
push
in
lcall
add
add
cld
sub
add
imul
add
add
add
pop
push
mov
xor
add
add
add
push
pop
pop
movsb
pop
lcall
lock
insl
addr16
inc
add
shrb
push
add
mov
in
add
add
pop
mov
cmp
sti
mov
xor
xchg
jns
lret
sbbb
sbb
add
push
stos
rcrb
add
cwtl
sbbb
es
mov
bound
add
adc
repz
mov
test
or
pop
insl
out
dec
add
add
aas
imul
add
dec
aaa
mov
jmp
vmwrite
xchg
pushf
xor
add
fs
aaa
loope
adc
add
lahf
push
add
jge
inc
pop
mov
pop
es
xor
add
push
fildll
and
pop
pop
add
lcall
xchg
pop
hlt
mov
xchg
add
add
jne
add
pop
stos
inc
pop
pushl
add
test
mov
mov
pop
mov
add
xor
add
xchg
mov
add
xor
add
imul
mov
pop
outsb
fists
add
arpl
add
pop
out
adc
sbb
sbb
jmp
push
jns
out
xchg
out
sbb
loop
mov
add
ljmp
aad
popf
fwait
mov
push
add
pop
cmp
add
mov
add
pop
addr16
or
add
xor
add
pop
dec
decl
add
push
pop
mov
call
pop
pop
sbbl
movups
add
pop
adc
add
xchg
xchg
adc
add
pop
pop
icebp
mov
add
mov
rcrb
pop
jbe
jmp
aam
clc
pop
pop
bound
add
inc
add
sbb
add
add
and
add
pop
mov
in
xchg
cmp
dec
into
inc
pop
push
add
sub
mov
int
test
cmpsb
pop
pop
jne
sahf
mov
sub
lcall
adc
movsb
pop
mov
adc
rcrb
add
dec
dec
test
jle
add
scas
movsl
pop
dec
add
add
add
add
in
inc
pop
xchg
mov
add
mov
pop
push
add
pop
lds
pop
lret
pop
or
pop
fldl
mov
pop
repnz
pop
pop
pop
out
dec
and
dec
push
add
push
fnstsw
xchg
das
sub
hlt
loopne
lcall
pop
test
pop
mov
pop
fadds
xchg
or
adc
add
pop
mov
pop
push
pusha
add
aad
jmp
fadd
pop
push
pop
stos
insl
mov
cmc
gs
adc
je
inc
add
cmc
iret
cwtl
cmp
add
jecxz
faddl
iret
add
pop
pop
loopne
sbbl
pop
das
xchg
lea
xchg
hlt
mov
pop
xlat
or
add
stos
inc
pop
ljmp
cmp
add
cltd
xor
pop
ljmp
add
sbbl
sbbl
add
push
add
out
nop
jb
add
add
mov
mov
push
add
loop
sub
or
pop
inc
pop
push
mov
add
xor
add
mov
pop
inc
add
cmp
add
cmp
pop
pop
xor
add
mov
xchg
addr16
or
pop
test
pop
int
add
xor
jecxz
mov
std
jmp
jnp
jg
mov
sub
int
add
ljmp
add
add
cmp
add
xor
adc
rcrb
pop
movsb
pop
loope
mov
add
add
add
jp
pop
test
ss
pop
popa
add
push
push
loope
mov
add
enter
test
mov
imul
mov
aaa
sbb
loop
mov
sub
pop
jns
inc
add
out
ret
pop
int
repz
pop
clc
fsts
pop
sbb
imul
sbbl
int
fs
inc
pop
sub
add
iret
insl
cmp
maxps
fcoml
sub
pop
sbb
lcall
out
inc
pop
xchg
and
add
add
fdivr
fcmovnb
pop
push
addr16
int
add
aaa
or
mov
lock
sub
addr16
mov
cld
jmp
aam
xchg
repz
pop
adc
add
adc
add
mov
mov
adc
add
pop
push
and
add
add
sbb
sbb
pop
ds
sbb
push
or
fisubrl
and
add
pop
and
add
pop
jb
add
mov
pop
cmp
add
jb
add
add
sub
xor
add
add
cmpsb
pop
xchg
lods
lds
inc
add
jg
cmp
pop
jecxz
mov
add
test
insb
mov
mov
add
push
jnp
add
push
push
add
jmp
loopne
cmp
add
jbe
pop
sbbb
test
pop
stos
jnp
sub
pop
les
xchg
and
jns
lea
imul
add
insl
fisttps
fistps
sbb
movsl
pop
int3
pushf
inc
add
lods
mov
mov
add
sbb
xlat
sub
add
pop
push
int
add
jae
add
xor
add
flds
arpl
add
add
sbb
shll
add
add
push
popf
xor
add
add
or
notb
jbe
stos
icebp
stos
xchg
or
pop
push
add
gs
add
ljmp
repnz
mov
cwtl
mov
les
iret
cmp
cltd
test
dec
jl
rcrl
add
add
add
loopne
pop
sbbb
loopne
and
inc
pop
les
pop
sahf
fisubs
lds
add
adc
add
xchg
lcall
add
iret
mov
mov
shll
add
and
add
pusha
add
iret
dec
sbbl
add
add
lods
stos
movsl
pop
cmp
xchg
inc
pop
test
adc
add
pop
insl
and
add
sbb
push
pop
pop
cld
imul
add
push
ret
pop
cmp
lds
fwait
inc
pop
jns
loop
sbbl
cwtl
test
pop
das
pusha
add
add
add
loope
daa
pop
mov
pop
mov
dec
add
mov
sub
mov
xchg
cmp
add
mov
dec
lcall
add
lock
lock
add
cltd
inc
pop
dec
mov
add
scas
enter
fcompl
idivl
pop
sbb
or
add
sbb
add
pop
or
in
dec
jnp
rcrb
arpl
add
cmp
pop
push
add
jbe
pusha
add
xchg
inc
pop
pop
sub
popa
add
js
add
mov
add
fstl
pop
imul
add
lahf
push
jp
add
sbb
add
das
mov
lcall
jge
and
add
add
adc
add
sbb
inc
pop
adc
add
xchg
push
fs
cld
xor
addr16
inc
pop
test
cmp
fcmovnu
iret
popa
add
xchg
pop
test
push
xchg
and
or
jnp
imulb
pop
lahf
jle
pop
inc
add
inc
pop
sub
es
sub
sub
jecxz
mov
cmp
adc
lods
mov
push
in
dec
mov
pop
ret
pop
outsb
lcall
pop
mov
mov
sti
ja
ficomps
pop
rcrl
insl
scas
into
in
cmpsb
pop
aas
mov
outsl
lahf
xchg
popf
jl
push
mov
pop
dec
pop
or
push
and
pop
aas
popf
xor
mov
shr
sub
cmp
pop
jne
pop
sub
pop
cltd
outsl
inc
add
cmp
mov
enter
fldt
add
and
pop
sbb
add
out
lds
pop
cs
add
lock
pop
and
mov
mov
cmp
add
add
push
jno
add
pop
push
enter
mov
sbbl
add
cmc
or
add
xchg
cmp
lret
add
cmp
pop
ja
push
add
fisttpll
jne
pop
mov
lret
or
add
mov
pushf
push
pop
push
add
add
sub
in
inc
add
lcall
fildl
shrl
add
rolb
pop
hlt
push
scas
push
repnz
lahf
fnstenv
aam
add
mov
iret
daa
pop
or
add
mov
dec
pop
insl
cltd
pop
mov
mov
leave
mov
and
add
xor
add
rcrl
pop
jae
add
add
add
adc
add
add
cwtl
pop
pop
mov
pusha
add
mov
int
jmp
icebp
push
pop
sub
pop
gs
or
daa
pop
dec
xchg
pop
pop
mov
mov
add
lods
sbb
add
add
stos
imul
add
cmpsl
pop
mov
imul
sub
loopne
cmpsl
pop
shrl
mov
inc
add
mov
add
shll
gs
rcrl
add
mov
mov
or
or
adc
add
pop
cmp
push
pop
rcrb
out
push
loope
sub
add
or
xchg
cmp
jecxz
mov
and
add
test
hlt
adc
mov
push
add
insb
sub
adc
mov
icebp
add
movsb
pop
lods
pop
cmpsl
pop
jne
mov
and
xchg
int
add
pop
mov
lcall
add
sub
imul
add
pop
test
mov
push
punpckhdq
pop
popf
dec
mov
pop
or
ret
pop
or
add
rcl
sub
ret
pop
insl
lahf
mov
ss
and
push
movsb
pop
insb
ja
pop
xlat
sbbb
jno
add
pop
popa
add
lock
ret
add
cs
pop
pop
sbb
fsubr
outsl
cltd
test
dec
jne
cmpsb
pop
pop
cmc
push
repz
ja
add
lret
pop
mov
add
push
add
enter
pop
imul
sbb
mov
jmp
pop
jecxz
repnz
add
pop
and
add
outsb
mov
jnp
and
adc
cs
cmovle
jmp
pop
xchg
pop
fs
sbb
push
cmp
sub
rcrl
push
mov
pop
adc
pop
jle
repnz
or
xchg
fsubl
lret
out
pop
lods
fucom
pop
iret
sbbl
fdivr
mov
add
stos
add
add
aam
or
inc
pop
icebp
pop
mov
push
mov
out
mov
pop
loop
in
pusha
add
mov
mov
pop
mov
popf
popa
add
movsl
pop
jmp
cli
aas
popf
inc
add
and
add
xor
add
jns
pop
sbbl
aad
out
sbb
mov
mov
bswap
push
add
fxch
loope
rcrl
loop
cmp
pop
xchg
or
xor
add
pop
pusha
add
lahf
jle
mov
or
cmove
pop
pop
mov
mov
not
pop
call
pop
in
inc
add
xlat
pop
pop
std
sub
pop
xchg
push
stos
or
add
add
push
pop
mov
push
add
flds
and
add
add
repz
gs
mov
emms
imul
add
sbbl
out
sub
mov
or
add
fists
popa
add
int
scas
loopne
cmp
push
sahf
jg
pop
jle
pop
jge
push
mov
sbb
mov
mov
pop
jg
mov
add
and
mov
lds
cmc
bnd
pop
xor
add
arpl
add
je
aad
mov
rcrb
sbb
pop
push
pop
mov
dec
addr16
cmp
sub
sub
adc
pop
mov
add
cmc
or
inc
pop
ret
pop
rolb
cmc
sub
imul
pushf
pop
xchg
cmp
pop
pop
imul
popa
add
mov
pop
out
aas
mov
push
or
add
adc
add
add
jbe
and
add
or
pop
sub
pop
movsl
pop
lea
pop
sub
or
stos
push
pop
mov
xchg
movsl
pop
mov
fwait
test
jo
add
fisttpll
sti
dec
pop
mov
add
sub
pop
mov
arpl
add
in
jge
pop
scas
sbbb
pop
mov
pop
addr16
jle
nop
sub
sbb
add
aaa
leave
add
add
add
mov
and
add
pop
xchg
xchg
sar
scas
xchg
sub
add
sub
add
jae
add
pop
dec
xor
test
push
and
add
pop
xchg
xchg
inc
add
push
loope
sahf
sbb
cld
loop
push
dec
pop
cmp
add
test
add
pop
xchg
jns
jno
add
add
sbb
add
insl
scas
or
inc
pop
loopne
inc
pop
mov
lock
pop
sbbb
add
adc
pop
outsl
and
add
add
pop
mov
aad
xor
add
sbb
pop
and
add
rol
pop
test
sar
adc
add
dec
imul
cmp
jle
pop
rcrb
add
dec
test
pop
fildl
add
mov
loopne
jno
add
ja
faddp
pop
xchg
push
mov
add
pop
cmpsl
pop
insl
jb
add
mov
scas
lret
popf
pop
pop
cltd
pusha
add
mov
inc
add
fldcw
add
sub
pop
fcmovnb
pop
in
jge
imul
push
sub
add
ja
push
repz
add
pop
ss
mov
pop
das
repz
imul
jae
add
add
dec
hlt
cmp
push
add
pop
pop
pop
aas
cmc
pop
jecxz
dec
push
test
add
cs
sbb
pop
inc
add
loopne
jbe
or
in
add
add
push
int
loopne
mov
pop
dec
sbb
jns
inc
add
cld
fs
pop
cmp
rcrl
add
pop
lret
iret
jle
mov
add
out
push
add
mov
pop
pushf
dec
sbb
pop
add
add
add
pop
shl
dec
and
add
lds
pop
leave
daa
pop
mov
cmpsl
pop
inc
add
mov
add
stos
frstor
iret
repz
xchg
icebp
xchg
mov
pop
dec
and
add
jne
mov
out
xchg
lds
pop
xor
add
pop
jne
xchg
jno
add
add
sbb
xchg
pop
stos
out
xor
add
inc
pop
dec
xchg
sbb
add
jae
add
add
cli
lods
aad
inc
pop
and
add
sbbb
pop
pop
jbe
mov
xlat
xchg
in
mov
test
add
pop
inc
pop
test
negb
jge
gs
push
jne
add
sub
add
sub
mov
and
mov
pop
mov
scas
insl
jmp
dec
test
xor
add
mov
lahf
mov
imul
outsb
sbbb
add
mov
add
xor
add
lcall
add
pop
mov
pop
push
out
push
add
or
fwait
rcl
ss
rcrb
mov
gs
cmp
popf
inc
add
lcall
pop
sbb
and
add
pop
mov
pop
cmpsl
pop
popf
adc
jmp
pop
jle
dec
push
mov
mov
cli
nop
icebp
repnz
add
pop
mov
dec
lock
pop
cmp
stc
loop
das
pop
xchg
sbbl
outsl
pop
xor
add
add
out
aad
mov
jb
add
add
cmp
scas
mov
dec
push
adc
add
decl
inc
pop
arpl
add
pop
push
add
fsub
pop
pop
das
xchg
add
add
pop
leave
adc
add
adc
add
fwait
cmp
cwtl
mov
pop
push
xor
mov
pop
push
mov
das
stos
mov
pop
pop
xor
add
add
pop
jmp
or
add
inc
pop
xchg
adc
add
cmc
push
add
or
add
add
jbe
add
xchg
xchg
jg
inc
add
imul
mov
add
add
lahf
cld
push
add
pusha
add
mov
pop
stos
cwtl
ja
aad
lea
add
xchg
leave
cs
pop
pop
fldenv
add
sub
add
mov
jl
pop
mov
inc
pop
lods
fmull
sub
xchg
mov
cld
std
xor
repnz
jecxz
or
mov
add
adc
add
dec
mov
add
mov
loop
and
add
and
mov
dec
sub
adc
add
add
cmp
xlat
sub
je
pop
loope
cmc
mov
pop
inc
add
sub
jle
add
ss
pop
push
call
out
or
pop
outsl
fsubs
add
mov
pop
test
sbbl
pop
fs
lds
pop
xor
add
sub
repz
add
cmpsb
pop
add
add
push
add
imul
add
jnp
pop
fucomp
push
add
imul
jmp
add
ficomps
jno
add
js
lahf
pop
test
add
mov
into
fsubr
rcrl
add
test
pop
cmp
add
pop
add
add
jp
jno
add
sbbl
sbb
add
call
pop
fs
pop
loop
dec
dec
loop
into
lds
push
jge
jge
sti
pushf
rol
pop
mov
pop
inc
add
push
pop
dec
clc
iret
jle
pop
mov
jecxz
adc
add
mov
in
fs
ja
lret
add
xor
add
pop
dec
pushl
add
mov
dec
test
inc
pop
xor
add
aam
pop
mov
pop
rolb
mov
adc
add
xchg
pusha
add
xchg
cmp
xchg
jb
add
mov
inc
pop
mov
inc
add
in
mov
mov
pop
cmp
ja
or
stc
iret
adc
pop
lcall
add
pop
pop
ret
pop
adc
add
add
pop
stos
fwait
mov
pop
test
cmp
dec
idiv
movsl
pop
repz
add
mov
lcall
shrl
rcrb
sbb
js
notb
add
xor
add
lods
arpl
add
pop
iret
jb
add
pop
dec
movsb
pop
scas
mov
adc
add
add
add
and
aam
xchg
in
pusha
add
xchg
sbb
add
xchg
mov
outsb
dec
and
add
add
lods
into
lcall
cld
cli
and
xchg
sahf
dec
dec
or
xchg
mov
psllq
pop
add
add
cmp
add
pop
jle
ret
sbb
add
sbb
and
add
pop
jl
jecxz
xchg
cmc
jae
add
mov
add
pop
rcrl
sub
pop
and
je
outsb
xchg
cmp
inc
add
add
add
add
in
aad
push
out
je
or
add
mov
fstp
cmpsl
pop
push
pop
pop
pop
sbb
add
cmp
mov
xchg
jb
add
fistpl
add
out
push
add
js
xchg
mov
js
int3
xchg
add
mov
sahf
imul
aaa
xchg
inc
add
fnop
gs
cmpsl
pop
aaa
dec
sar
cli
sub
add
mov
pop
push
pop
int
pop
lret
add
pop
xlat
and
xchg
pop
cwtl
movsb
pop
imul
mov
sbb
stc
int
imul
mov
push
inc
pop
iret
hlt
cli
xor
add
ds
lret
sbbb
xchg
add
add
mov
fsubs
add
inc
pop
xor
add
sub
mov
mov
xor
jns
pop
rorl
pop
out
fcmovnu
das
pop
idivl
pop
enter
push
add
jge
ret
add
xlat
sbb
pop
sti
lock
add
push
lods
ljmp
add
repz
add
hlt
inc
pop
iret
pop
push
add
fidivl
xchg
loopne
mov
add
mov
dec
sub
fld
pop
loop
push
outsl
sub
add
dec
aad
and
mov
scas
in
mov
pop
lret
add
cli
push
add
add
add
pop
arpl
add
gs
test
pop
rclb
out
mov
cli
adc
add
pop
cmpsl
pop
lcall
fbld
std
pop
pop
imul
pop
int3
cli
scas
push
cmp
add
inc
pop
std
lret
cwtl
das
js
add
and
pushf
fucom
pop
aas
loop
ret
pop
iret
mov
fsubp
pop
fbld
pop
xchg
sub
xchg
mov
add
pop
pop
movsl
pop
adc
pop
jno
add
pop
push
pop
rcrl
test
pop
pop
xor
add
mov
js
pop
fs
mov
push
xchg
pop
ret
test
and
add
add
mov
mov
push
pop
std
loop
sub
add
and
add
pop
das
inc
pop
dec
popa
add
lock
loop
call
pop
mov
add
jmp
mov
add
aaa
add
add
pop
dec
repnz
or
sub
add
sub
sub
stc
inc
add
mov
rep
rcrb
dec
jl
imul
leave
push
scas
pop
iret
fs
or
jns
jmp
push
pop
movsl
pop
jecxz
sarb
repnz
add
scas
push
pop
pop
imul
pop
cli
mov
shl
pop
pushl
add
in
adc
add
mov
add
add
pop
fwait
daa
pop
loopne
cmp
pop
mov
out
and
add
bound
add
cmp
add
xor
aad
addr16
jecxz
ds
ljmp
jmp
out
sub
adc
add
iret
cmp
test
jle
add
cmpsl
pop
ljmp
sbbb
pop
fnstenv
add
inc
pop
fucom
pop
mov
add
out
lahf
fisubrl
adc
pop
fdiv
loope
xor
add
lods
inc
add
rcrl
inc
add
in
into
pop
jae
add
sbb
ret
pop
push
push
add
xor
add
rorb
loope
shlb
add
int3
sub
shlb
pop
sbb
mov
pop
pop
mov
pop
pop
xor
add
add
ds
add
mov
cmp
cltd
pop
sbbb
lea
dec
sub
add
xchg
cli
movsl
pop
enter
fidivrl
sbbb
pop
mov
cmp
add
or
or
pop
gs
lds
or
mov
pop
sbb
pusha
add
adc
add
pop
cmp
push
mov
push
ds
sub
cli
pushf
and
push
fldl
pop
aaa
dec
mov
dec
lock
sub
push
sub
sub
repnz
mov
add
mov
sbb
xchg
rolb
pop
xchg
fidivl
sbbl
adc
add
nop
pusha
add
sbbl
pop
int3
jnp
hlt
mov
in
xchg
and
add
sub
pop
mov
sbb
pop
sbb
xlat
sub
arpl
add
movsl
pop
aas
mov
das
jo
add
in
mov
pop
insl
or
add
sbbb
pop
push
add
insl
test
push
xlat
pop
mov
add
decb
pop
inc
add
add
add
add
enter
sbbl
pop
fadds
push
add
out
lods
cli
ss
pop
loopne
dec
loop
cmpsl
pop
cmp
pop
scas
inc
add
sbb
call
sbb
push
add
jl
std
or
add
in
pop
xor
add
add
pop
sbb
pop
flds
pop
iret
sub
pop
aam
daa
pop
or
das
xlat
or
pop
pop
sub
push
push
add
ljmp
aaa
loope
aad
insb
pop
sub
stos
or
js
mov
push
jns
add
add
mov
mov
pop
push
es
push
pop
arpl
add
jb
add
pop
inc
pop
dec
nop
cmp
pop
dec
jb
add
add
call
jne
ret
jo
add
add
dec
or
add
pop
mov
pop
lods
ret
add
jle
or
add
test
arpl
add
cld
xchg
cmp
lods
sbbl
loope
js
add
add
add
and
add
sub
or
jmp
clc
sub
mov
add
movsb
pop
push
pop
push
pop
dec
mov
mov
add
push
call
cmp
inc
pop
imull
or
rcll
add
enter
cli
daa
pop
negb
sbb
mov
add
mov
dec
nop
push
add
push
sbbb
inc
pop
and
add
ret
sub
pop
ret
pop
mov
push
or
add
add
pop
lods
std
push
jl
daa
pop
sbb
mov
inc
add
mov
mov
lods
rclb
jno
add
loopne
repz
add
sbbb
fbstp
add
xor
pop
add
add
push
add
ljmp
pop
inc
pop
in
dec
dec
ds
add
inc
pop
cmp
shll
push
add
xlat
lret
and
icebp
mov
pop
push
add
out
inc
add
mov
add
pop
fistpl
sub
pop
test
inc
add
jge
cmp
push
roll
add
add
mov
cmpsl
pop
sahf
lret
pop
or
pop
jg
outsl
mov
xchg
mov
int
add
add
pop
or
add
pop
sub
ja
add
sub
sbb
movsl
pop
sbb
dec
dec
in
mov
pop
and
add
je
mov
gs
sarb
cmpsl
pop
pop
xchg
pop
mov
add
adc
mov
fidivs
mov
mov
pop
cmp
pop
or
adc
add
pop
stos
fidivrl
add
movsl
pop
dec
sbb
push
pop
or
pop
mov
add
movsb
pop
sbb
or
insb
inc
pop
les
es
insb
mov
push
add
sar
insl
pop
cmc
inc
add
popf
scas
or
repnz
pusha
add
aaa
pop
fstps
mov
add
dec
jo
add
movsb
pop
xlat
outsb
mov
lods
xor
add
mov
stos
fsubrs
fnstcw
bnd
add
pop
shr
pop
daa
pop
jno
add
pop
hlt
aaa
int
cmp
fdivp
mov
pop
outsb
iret
es
cmp
xchg
sub
aaa
lea
popf
daa
pop
mov
add
xor
out
and
stos
pop
shr
mov
pop
mov
scas
pop
fldcw
in
mov
add
add
fisubrl
xlat
lret
cmp
and
add
loop
mov
pop
or
pop
cmp
add
cs
push
inc
add
cli
jle
pop
or
push
jnp
add
mov
pop
lods
sbbl
adc
stos
jnp
sbb
out
sbbb
das
mov
add
add
xchg
enter
add
repz
add
arpl
add
out
xchg
sbbb
mov
outsl
xor
add
rcrl
xchg
push
adc
add
adc
add
pop
cld
inc
pop
int
xor
add
cmpsb
pop
lret
pop
lcall
add
insb
push
add
sub
cmp
fnclex
pop
inc
pop
mov
add
cwtl
lock
fistpl
pop
cld
psubusw
sub
add
mov
ja
pop
inc
pop
mov
pop
outsl
jmp
mov
add
dec
push
pop
cmp
stos
mov
pop
adc
add
pop
and
xchg
lret
add
lods
addr16
sbbl
pop
ret
pop
dec
repz
sub
pop
ret
fwait
loopne
pop
cmp
mov
add
out
xchg
sar
pop
std
clc
jl
ds
pop
pushf
into
lahf
sub
dec
mov
dec
xchg
adc
add
add
pop
add
movsl
pop
ret
pop
pop
arpl
add
pop
jns
jecxz
lods
adc
pop
push
fidivrl
or
add
or
add
cld
push
dec
lods
cmpsb
pop
sbb
stos
add
sub
and
add
dec
dec
cli
mov
pop
sahf
pop
pop
jl
pop
sbbl
pop
push
add
int
cmpsb
pop
inc
add
xchg
lds
mov
jle
add
sbbl
pop
dec
stos
mov
pop
pop
cmp
add
add
jno
add
add
xor
add
add
mov
int3
js
in
out
lds
aam
rorb
pop
pop
pop
xchg
mov
out
in
pop
jbe
aaa
mov
add
add
xor
push
add
pop
in
sbbl
ret
add
je
sbb
jl
pop
mov
dec
pop
out
jae
add
fimuls
in
test
loope
inc
pop
add
push
xor
add
outsl
dec
pop
scas
dec
add
add
add
and
add
pusha
add
rolb
add
lret
push
jmp
jae
add
sub
add
xchg
mov
push
push
inc
pop
push
add
sbbb
add
and
add
pop
sub
sahf
cli
mov
pop
pop
clc
out
cmp
mov
sbb
add
add
shll
out
add
jp
add
jecxz
push
lds
xchg
add
sbbl
add
add
inc
add
cwtl
fisubrl
gs
fistpll
add
insl
push
sub
add
loop
mov
pop
stos
insb
je
cmpsl
pop
pop
sahf
add
push
aad
stos
pop
out
sbb
shlb
add
mov
cwtl
fstpt
pop
lods
lods
sbb
adc
sbb
pop
sbb
adc
add
pop
pusha
add
rcrb
pop
aad
pop
jb
add
mov
mov
nop
lods
stos
inc
add
xor
add
sub
add
xor
add
add
add
add
pop
cs
daa
pop
std
mov
jb
add
repnz
dec
mov
jnp
mov
or
pop
icebp
outsl
dec
fmull
add
mov
call
dec
add
add
add
inc
add
jnp
push
add
and
add
mov
dec
clc
iret
xor
add
xor
push
add
outsb
fsubs
pop
xchg
pushf
sarl
jns
insl
sub
or
int3
loop
movsl
pop
fsubs
pop
scas
aas
lahf
add
xor
add
pop
sub
rcrl
pop
and
add
jnp
int3
or
pop
lods
movsl
pop
pop
sbb
pop
sbb
sbbl
pop
push
dec
rcl
scas
fisubrs
call
pop
jg
mov
dec
sbbb
loopne
out
addr16
mov
pop
pop
mov
and
add
pop
cmp
out
gs
xchg
sbb
add
pop
fs
cli
adc
add
std
cltd
lret
js
sub
sbb
mov
jnp
fadds
mov
add
xchg
push
add
mov
cmp
shrb
clc
lock
aaa
cmc
sub
add
push
int
faddl
sub
add
in
in
xchg
and
imul
pop
and
add
jmp
pop
mov
jne
fstpt
add
dec
loop
or
rcrl
add
add
sub
pop
pop
mov
and
add
mov
mov
add
and
add
rcrl
and
add
pop
mov
inc
pop
mov
pop
or
jp
pop
xor
add
pop
pusha
add
inc
add
jmp
and
cmp
add
sbb
into
out
imul
pop
mov
pop
insl
and
test
sbbb
add
and
add
addr16
icebp
loop
lret
dec
jns
sbbb
push
aas
xor
add
add
xor
mov
leave
push
or
mov
add
add
out
ss
add
jg
pop
fstpt
stos
aam
sub
xor
dec
push
stos
and
add
add
fidivrl
xor
pop
mov
add
jae
add
popa
add
pop
and
add
add
add
add
les
add
xchg
jge
pushf
pop
inc
pop
or
add
lret
setno
fsubr
enter
xor
int
cmp
aas
js
pop
mov
jne
sub
pop
pop
out
stos
cmpsl
pop
push
add
mov
fs
fimuls
pop
and
add
cmp
push
dec
mov
lods
push
dec
test
add
lret
add
rcrl
dec
jne
pop
mov
pop
mov
add
inc
add
push
ja
add
enter
add
add
add
xchg
dec
ja
mov
dec
push
jge
aam
into
push
lds
add
fdiv
push
mov
clc
fsts
add
sahf
sbb
xor
pop
cmp
push
test
rcrl
add
aam
ret
pop
push
test
mov
dec
jns
mov
adc
mov
jmp
out
push
pop
ret
adc
add
add
pop
sahf
dec
pop
lds
mov
insb
dec
daa
pop
shlb
pusha
add
mov
lcall
outsb
negb
leave
xor
add
add
push
lock
js
js
sbb
add
cmp
jb
add
mov
lds
pop
push
inc
add
aas
and
add
add
or
cltd
faddp
pop
adc
add
add
dec
lock
add
mov
mov
jg
add
push
lds
sub
mov
sbb
pop
sbbl
dec
pop
fdivp
jns
add
scas
stos
xor
sti
movsb
pop
adc
add
xchg
jne
push
add
mov
leave
mov
sub
in
pop
mov
xchg
popf
push
dec
repz
and
push
sbb
adc
add
mov
rclb
xchg
push
add
enter
add
add
es
xor
add
pop
arpl
add
je
push
jge
pop
call
pop
rcrb
rorl
jno
add
add
es
xchg
pop
or
add
dec
jae
add
pop
dec
pop
push
pop
js
sub
pop
aad
dec
inc
add
jl
pop
rcrl
and
out
addps
mov
fnstenv
ss
mov
fxch
repz
pushf
pushf
aaa
adc
pop
mov
sub
leave
rcrl
pop
and
add
add
cmpsl
pop
punpckldq
add
xlat
jle
pop
jecxz
push
add
sub
add
stos
arpl
add
or
pop
pop
and
add
add
push
add
xchg
dec
fsubrp
movsl
pop
mov
pop
clc
adc
add
repnz
xor
pop
arpl
add
lret
cli
inc
add
sbb
add
add
test
pop
or
add
repz
je
lahf
pop
cmp
add
mov
lcall
pop
loopne
mov
add
xor
add
add
sbbb
loope
js
rolb
pop
mov
mov
mov
leave
outsb
sbbl
xchg
sbb
pop
mov
pop
lock
xor
roll
add
push
mov
xchg
repz
add
repz
int3
out
mov
sbbl
pop
sti
into
mov
out
daa
pop
cmp
pop
push
pop
es
ss
pop
ja
pop
push
push
mov
pop
inc
add
cmc
hlt
mov
lds
add
fs
scas
cltd
push
push
add
loopne
sbb
add
xchg
cld
pop
decb
clc
aas
sbb
cmp
jecxz
insl
mov
pop
dec
fbld
pop
mov
stos
loopne
sub
pop
leave
pop
out
xchg
stos
rcrb
add
cmc
push
add
xor
add
pop
call
jmp
jl
add
ja
movsl
pop
or
pop
sbb
pop
mov
add
xchg
add
inc
add
outsb
call
mov
jb
add
pop
cmp
pop
xor
add
dec
mov
jl
pop
adc
add
enter
add
cmp
icebp
je
js
mov
xchg
jl
pop
out
rorl
xchg
out
mov
pop
lds
mov
add
adc
add
push
mov
or
pop
and
dec
lds
sbbb
mov
mov
repz
jecxz
test
and
adc
pop
push
pop
icebp
mov
jns
cmc
dec
jge
les
inc
pop
imul
adc
js
lods
lret
pop
adc
add
decb
jl
mov
xor
add
repnz
add
mov
lds
pop
fs
rcrl
add
pushf
lcall
xor
sbb
push
mov
add
ds
cmpsb
pop
jb
add
cmpsl
pop
mov
or
mov
arpl
add
xchg
push
sbb
pop
sbb
pop
fsts
pop
mov
aas
std
xor
add
jbe
pop
sbb
pop
push
pop
dec
addr16
scas
scas
scas
lods
mov
outsb
inc
add
sub
pop
cmc
adc
add
pop
enter
push
pop
jecxz
sbbb
loopne
pop
sub
das
and
add
mov
nop
mov
add
pop
push
add
fstl
add
sub
jnp
in
dec
shr
jo,pn
add
dec
fnstenv
pop
les
rcrl
outsb
std
cmp
add
dec
movsb
pop
dec
sti
cmp
mov
fs
sbb
cmp
jmp
adc
add
fsubl
out
push
sub
in
mov
int3
sbbl
cmp
fcmovnbe
sub
ljmp
repz
push
or
insb
xlat
jmp
pop
pop
cmp
sub
sahf
fsubrs
ja
cmp
xchg
mov
pop
xchg
cmp
push
int
and
add
pop
xor
add
test
and
add
pop
loope
push
sbb
pop
fwait
push
inc
pop
js
cmc
adc
pop
sub
dec
js
jl
bound
add
fstpl
idivl
lret
add
pop
pop
sbbl
popa
add
fimuls
add
dec
pusha
add
sbbl
add
cmp
add
push
add
repnz
pop
dec
dec
sub
lcall
add
pop
iret
inc
pop
pushf
push
add
jo
add
add
ficomps
jmp
sti
cmp
add
push
rol
pop
push
lahf
sti
mov
cli
int
pop
nop
cwtl
mov
add
test
inc
pop
and
test
jne
add
dec
cltd
jp
mov
pop
jbe
pop
repz
or
or
pop
mov
pop
lea
icebp
mov
in
adc
add
adc
add
push
call
insl
pop
sahf
repnz
cmp
add
dec
inc
add
inc
add
pop
push
add
add
add
add
sub
inc
add
in
arpl
add
or
cli
adc
add
pusha
add
pop
sbb
loopne
adc
add
into
sub
cmc
mov
and
add
add
sbbl
mov
xor
pop
jno
add
rcrb
pop
dec
je
shll
shr
out
pop
sahf
loop
push
mov
pop
test
pop
loope
xchg
fld
pop
rolb
add
mov
push
movsl
pop
cmpsb
pop
pop
loope
xchg
inc
add
and
cmp
pushf
push
add
pusha
add
jecxz
inc
add
push
add
add
add
and
add
add
lea
cmp
jb
add
add
add
push
add
ljmp
pop
xlat
rcrb
pop
mov
rcrl
pop
jno
add
in
xlat
arpl
add
add
jle
mov
pop
mov
push
or
nop
mov
inc
pop
daa
pop
xchg
add
repnz
movsl
pop
xchg
pop
mov
push
aad
pop
movsb
pop
fmull
jo
add
inc
add
push
cwtl
jnp
jmp
in
popf
xchg
js
xor
add
push
add
addr16
loopne
jae
add
test
je
adc
add
inc
pop
sbb
mov
pop
scas
clc
inc
add
cwtl
pop
push
and
pop
pop
gs
in
jmp
sbb
in
fbstp
pop
stos
lcall
add
mov
push
sub
add
mov
gs
repz
pop
scas
ret
and
add
pop
pop
xor
add
cld
fwait
divl
mov
pop
jecxz
inc
pop
popa
add
lret
add
loope
loopne
arpl
add
lds
adc
add
dec
mov
test
push
pop
cmp
xlat
sbb
add
out
fdiv
inc
pop
pop
dec
adc
add
pop
and
add
pop
int3
out
cmp
add
mov
mov
mov
movsbl
pop
mov
roll
add
in
push
inc
add
movsl
pop
sti
rcll
sbb
std
imul
push
add
or
mov
in
xor
add
dec
into
sbb
sbb
pop
aas
sub
sti
mov
stc
pop
mov
pop
lods
imul
gs
fmuls
mov
dec
pusha
add
aaa
rcrl
arpl
add
pop
loope
add
xor
xchg
pop
cli
jecxz
arpl
add
rcrb
xor
jp
mov
scas
aad
add
mov
dec
push
cli
push
pop
inc
pop
sub
shl
into
pop
cmp
shr
fcmovbe
decl
pop
insb
jbe
idivb
stc
out
xor
add
mov
lret
mov
add
mov
sbb
add
xchg
enter
add
add
insl
add
pop
xchg
dec
mov
dec
enter
pop
aas
divb
add
sbbl
js,pt
cmc
scas
adc
and
scas
cmpsl
pop
into
dec
jg
lcall
add
int3
adc
add
pop
dec
mov
inc
add
or
xlat
jp
add
test
enter
inc
pop
fwait
push
inc
add
repz
add
pop
add
add
pop
or
ds
pop
xor
fmull
and
pop
std
movsl
pop
dec
add
add
pop
das
scas
ror
cmp
mov
sti
loope
pop
mov
fs
cmp
lock
add
push
add
popf
aaa
sti
sbbb
addr16
shll
jge
xchg
sbbb
scas
out
pop
pop
ret
pop
mov
pop
fadd
pop
xor
add
add
inc
add
fidivs
das
in
popa
add
lea
push
add
into
inc
add
aas
or
pop
or
addr16
ljmp
xchg
or
and
add
push
mov
pop
push
push
pop
add
insb
clc
xchg
out
add
add
imul
pop
dec
xor
add
cmp
aas
add
add
in
sti
aam
fwait
rol
pop
push
pop
dec
pop
pop
rcrb
push
loop
push
or
xor
add
imul
add
xor
add
or
add
mov
xor
add
jnp
push
add
pop
push
pop
xchg
add
jbe
in
mov
add
mov
out
cmp
mov
pop
loop
fisttpl
pop
pop
cmp
sbbl
loope
or
pop
jl
lds
inc
pop
mov
pusha
add
pop
sbb
fwait
lahf
push
sbb
pop
les
inc
add
lret
pop
inc
pop
test
inc
add
outsb
pushf
mov
pop
mov
cmp
mov
ret
pop
fwait
aaa
push
add
addr16
pop
imul
in
in
outsb
aaa
inc
pop
icebp
sbb
addr16
cmp
pop
fdiv
or
shlb
scas
scas
cwtl
dec
fildll
inc
pop
mov
lods
sub
sub
add
cmp
inc
add
push
add
sbb
sti
les
cld
je
pop
push
and
add
add
je
pop
jne
jp
and
add
outsl
test
jl
dec
loope
pop
sbb
dec
inc
add
mov
pop
out
or
add
push
int
sbbl
cmc
loop
nop
jae
add
pop
sub
pop
mov
mov
negb
add
out
sahf
xchg
sbbb
imulb
and
add
es
pop
ficoml
nop
movsb
pop
je
or
sbbl
add
xchg
xchg
clc
mov
xchg
xlat
xor
imul
xchg
insb
es
xor
sbbb
imul
inc
add
popa
add
push
add
adc
add
jecxz
movsl
pop
aam
test
fdivp
adc
dec
push
sti
int
mov
es
push
cmp
pop
outsb
insb
in
or
cmpsb
pop
test
mov
jmp
pop
or
jns,pt
sarl
fwait
cmpsb
pop
loopne
push
add
nop
pop
jbe
rcrb
mov
sbb
add
add
lret
xor
sbb
cmp
cmp
inc
add
mov
add
outsb
ret
pop
pop
xchg
fwait
cld
inc
add
stos
xchg
sub
add
cwtl
repz
add
stos
cmp
add
fwait
mov
add
xchg
pop
les
pop
sub
pop
mov
je
push
mov
add
adc
or
pop
bound
add
scas
push
std
jg
pop
and
add
lods
cmp
test
je
test
jge
lock
cmp
icebp
xchg
mov
or
hlt
nop
sbbb
hlt
xor
add
movsl
pop
ficoms
add
inc
pop
mov
pop
pop
mov
cmpsb
pop
push
int3
ja
rcrl
add
js
mov
stc
int3
les
add
lahf
sbb
mov
aas
repz
pop
or
pop
cmp
pop
jnp
xor
add
add
rcr
aad
add
cmp
pop
lods
and
add
add
inc
pop
popa
add
sbb
sbb
xor
add
add
inc
pop
loope
mov
mov
arpl
add
add
pop
xlat
aas
pop
and
add
pushf
jno
add
add
add
cmp
std
or
add
pop
ja
ds
sub
mov
mov
pop
add
add
push
add
mov
rorl
cmp
icebp
hlt
jg
add
int3
rclb
leave
cmp
mov
and
add
pop
cltd
shlb
inc
pop
ret
push
mov
pop
cmp
outsl
lea
or
mov
dec
ljmp
add
add
loope
or
out
dec
call
rcrb
push
sbb
add
cwtl
cwtl
div
mov
pop
fidivrl
pop
repnz
cmp
pop
hlt
cwtl
pop
sti
or
pop
rcll
add
add
pop
or
int3
pop
sbb
add
ficomps
pop
push
cmpsl
pop
mov
pop
xchg
mov
pop
and
add
sbb
add
xchg
sbbb
fsubrl
add
bound
add
adc
add
and
add
add
cmpsb
pop
pop
aam
pop
cltd
sbb
aaa
push
add
push
mov
pop
aam
sbb
pop
mov
fiadds
add
adc
add
outsb
push
add
dec
jmp
loopne
or
ret
pop
fiaddl
mov
adc
add
push
pop
add
add
pop
pop
jecxz
push
jg
push
jecxz
xchg
mov
pushf
aas
ss
or
mov
xor
add
pop
jle
cmpsl
pop
enter
dec
incl
add
push
add
mov
mov
add
sub
dec
imul
push
add
xor
pop
stos
inc
add
jecxz
mov
movsl
pop
les
mov
add
js
pop
imul
fimull
add
push
sbb
jmp
xchg
pop
je
pop
test
call
sub
call
popf
push
mov
mov
pushl
repnz
add
mov
lods
and
add
fs
ljmp
add
ss
pop
or
jns
push
inc
add
arpl
add
push
mov
cs
fs
rolb
add
fisttps
add
jmp
mov
pop
pushf
mov
pop
adc
add
sub
add
add
or
xor
add
add
xchg
xor
cmc
mov
xor
add
jbe
pushf
adc
add
xchg
pop
sbb
jmp
jl
pop
pop
loop
mov
mov
ret
cmp
jg
mov
add
rcrb
jno
add
sbb
pop
sbb
iret
xchg
jmp
and
add
jno
add
inc
pop
daa
pop
xor
add
fsubr
repz
add
pop
mov
adc
add
pop
jo
add
add
xchg
repz
cmp
pop
mov
inc
pop
loop
xchg
repz
cmpsb
pop
dec
pop
ret
pop
xchg
inc
add
fs
es
ud0
mov
mov
lock
add
add
add
add
xor
add
pop
leave
adc
add
cs
jnp
sub
cmp
add
add
mov
test
add
pop
rcrl
gs
push
fwait
cmp
inc
pop
mov
arpl
add
arpl
add
cs
dec
or
lock
out
lahf
enter
jbe
adc
add
lods
jnp
mov
in
gs
push
add
cli
lahf
in
push
cmp
add
xchg
rol
pop
inc
add
xchg
xchg
fnstcw
in
sbb
add
xchg
fs
cwtl
rcrb
push
in
xor
pop
imul
mov
and
add
add
add
add
mov
pop
mov
aad
movsb
pop
pop
pop
pop
pop
dec
inc
add
aam
add
and
add
mov
rcrb
ds
out
sbb
add
add
pop
rcll
cmp
es
and
add
fs
loope
cmp
jp
add
add
and
add
xchg
and
add
stc
not
out
fwait
call
pop
scas
cld
loop
xlat
mov
inc
add
mov
pop
mov
ljmp
sbb
cmp
xor
or
adc
mov
add
or
sti
and
add
add
rcrl
add
clc
mov
add
es
jp
xor
add
mov
add
out
inc
add
in
push
and
add
iret
xchg
roll
test
pop
mov
roll
pop
mov
pop
in
je
add
test
cmp
add
lock
popf
lock
cmp
add
push
add
inc
pop
mov
outsl
and
add
add
jne
int3
popf
jle
stc
lods
bound
add
outsb
cmp
add
notl
add
mulb
lds
sahf
jmp
pop
lds
arpl
add
add
iret
pop
lods
inc
pop
dec
test
sub
sub
fdivr
fildll
jo
add
pop
loopne
jg
pop
push
add
repnz
mov
pop
test
pop
sbb
pop
into
test
pop
cmpsb
pop
jnp
imul
add
push
add
and
add
sbbl
jbe
lock
lret
jb
add
scas
xchg
adc
add
jae
add
jbe
lcall
add
leave
and
add
and
add
inc
add
jmp
pop
dec
push
add
sub
add
lahf
outsl
cmp
pop
push
pop
arpl
add
sbbl
add
test
inc
pop
std
pop
scas
or
jle
pop
mov
repz
add
add
xor
pop
cltd
aam
push
cmp
mov
int
mov
test
add
mov
jmp
std
mov
push
fwait
or
pop
stos
jb
add
pop
addr16
mov
pop
inc
pop
pop
pop
jo
add
add
pop
imul
push
in
test
pop
mov
add
inc
add
fs
ret
in
sub
mov
or
and
add
movsl
pop
es
sbbb
add
into
sbb
scas
lock
in
jbe
adc
push
push
pop
pop
out
mov
dec
ret
pop
test
pop
sub
push
mov
pop
jge
ret
push
add
jle
pop
xchg
popf
xor
add
pop
pop
inc
pop
sub
add
jae
add
add
add
add
add
out
sbb
push
pop
call
xchg
ret
pop
mov
add
fwait
inc
add
fs
and
std
cmp
pop
divb
add
mov
pop
add
add
rcrb
or
fsubrl
rcrb
pop
sub
add
scas
pop
pop
sub
sbb
pusha
add
div
mov
cltd
ss
jnp
add
or
mov
add
pop
pop
dec
lods
lcall
mov
add
nop
sub
enter
lret
std
rcl
movsl
pop
xchg
adc
add
add
fidivs
add
jo
add
inc
add
mov
jl
mov
push
jno
add
mov
pop
pop
adc
add
test
sbb
add
insb
hlt
shlb
fs
adc
add
sub
add
inc
add
xchg
out
in
xchg
in
push
mov
es
dec
xor
add
or
roll
pop
into
fldl
xchg
and
add
add
fistpll
mov
mov
push
mov
pop
add
add
mov
push
pop
xor
add
cmp
outsl
mov
pop
clc
hlt
call
dec
aaa
loope
cmc
xchg
dec
in
std
adc
add
call
and
add
lret
fs
inc
pop
xchg
cmc
icebp
pop
and
add
add
adc
add
cmp
pop
and
add
ret
mov
cmc
loopne
mov
push
jns
loope
push
mov
add
xchg
jne
loope
lret
dec
jg
add
pushf
inc
add
cli
dec
or
add
hlt
mov
add
pop
shll
add
fs
and
and
add
add
and
add
pop
sbb
in
sbbl
mov
aam
pop
pushf
je
call
adc
add
test
pop
int3
fs
and
add
dec
mov
lret
test
pop
int3
in
jle
xor
add
les
pop
rcrl
cmc
negb
outsb
outsl
jnp
pusha
add
mov
or
nop
imul
pop
cmp
xor
add
add
dec
insl
outsl
jnp
pop
or
cmp
pop
jmp
dec
mov
xchg
lock
cli
adc
loopne
pop
jmp
pop
pop
icebp
sar
mov
mul
pop
outsl
push
or
add
loopne
dec
stos
sbbb
jns
pushf
aam
xchg
sbbb
sub
lret
xchg
pop
loopne
les
icebp
sub
cmp
imul
ds
jmp
arpl
add
and
add
add
xchg
xchg
dec
inc
pop
pop
pop
stc
mov
leave
jnp
jg
iret
outsl
jno
add
out
iret
mov
daa
pop
inc
pop
mov
jbe
pop
test
ret
cwtl
inc
pop
mov
lds
jmp
popf
scas
aas
arpl
add
outsl
mov
int3
jmp
aaa
sub
or
xor
add
loopne
dec
sbbb
mov
add
mov
xchg
sbbb
pop
jae
add
pop
adc
pop
out
mov
aas
xchg
inc
pop
pop
jmp
xchg
inc
add
fistps
inc
add
rcrl
daa
pop
decl
adc
add
lcall
sahf
insl
daa
pop
in
fstl
add
pop
xchg
dec
dec
jecxz
aam
ljmp
push
scas
jbe
and
add
sbbl
mov
pop
sub
pop
push
sub
in
jno
add
pop
cwtl
lock
adc
add
pop
sbbb
pop
aad
add
inc
add
and
add
add
add
pop
pop
mov
sbb
stos
xlat
mov
xlat
push
jno
add
lea
loop
cmp
sbbl
cmp
inc
add
sub
fwait
or
mov
stc
add
add
pop
mov
mov
add
insl
or
jbe
rcrb
and
add
pop
leave
cs
adc
add
add
add
or
pop
lret
call
out
test
pop
or
push
or
add
pop
lcall
lcall
js
sbbb
add
mov
scas
scas
add
add
pop
ss
enter
add
mov
ja
add
je
pop
js
pop
dec
mov
push
dec
pcmpeqw
sbb
add
sbbb
mov
js
mov
mov
lret
sahf
add
add
add
lods
sbb
add
dec
fsubrs
pop
adc
add
pop
or
pop
rcrl
add
add
xchg
push
sbbl
add
ret
pop
lret
ss
xchg
and
add
add
scas
loopne
sbb
pop
cmp
pop
ret
pop
sbb
cmp
push
add
mov
add
aad
pop
xlat
shlb
add
in
out
nop
or
add
add
add
clc
sub
add
cs
in
inc
pop
sbbl
add
add
adc
add
decb
mov
cmp
fimuls
loopne
fs
inc
add
sub
adc
add
jnp
jl
movsb
pop
jle
add
or
nop
imul
mov
add
add
xor
add
pop
adc
add
add
add
popa
add
sub
pop
pop
enter
jp
mov
fsts
pop
cmp
int3
testb
add
push
add
xor
ficoms
cli
dec
xchg
cwtl
cmpsl
pop
dec
ret
jle
mov
add
push
and
add
add
add
pusha
add
inc
pop
or
add
icebp
jae
add
add
inc
pop
std
jno
add
pop
cs
mov
rcrl
jmp
push
pop
sbb
jge
ja
add
lods
hlt
lods
std
push
add
movsl
pop
test
pop
stos
xchg
xor
lret
pop
pop
fisubrs
sbb
add
cmp
pop
jl
in
sub
icebp
mov
pop
xchg
or
js
and
sub
jne
sti
push
push
out
jge
mov
aas
sub
adc
add
xor
aam
xchg
stos
rcrl
dec
inc
add
push
les
pop
mov
mov
pop
xor
add
xor
jle
pop
sbbl
mov
jl
add
inc
pop
inc
add
fsubr
mov
jne
pop
popa
add
and
add
pop
xor
call
ficompl
les
es
push
add
add
add
add
arpl
add
aaa
pop
or
pop
fs
iret
or
cmc
cltd
popa
add
mov
clc
std
outsl
xchg
add
sti
ds
inc
pop
repnz
add
popf
rcrl
pop
and
add
sti
dec
pop
pop
loopne
icebp
stc
inc
pop
dec
pop
scas
jns
mov
std
addr16
or
add
sbb
adc
add
add
pop
cmp
insb
ss
add
push
repz
aam
pop
sbb
add
fwait
mov
pop
xchg
sahf
test
and
add
add
sbbl
add
incb
add
xor
add
inc
add
movsb
pop
jmp
pop
mov
xor
mov
pop
dec
std
xchg
mov
movq
pop
xchg
sahf
xchg
jo
add
pop
xor
add
pop
pop
in
mov
add
cmp
testl
xor
add
jno
add
add
sbb
add
add
pusha
add
scas
std
movsb
pop
inc
add
mov
dec
mov
pop
mov
movsb
pop
fsubr
push
pushf
inc
add
fcoml
js
lcall
movsb
pop
in
bound
add
in
push
movsb
pop
ljmp
pop
test
pop
bswap
rcll
pop
adc
add
mov
cli
adc
cwtl
push
add
adc
add
inc
add
pop
insb
sbb
imul
mov
or
xor
pop
sub
and
add
mov
inc
pop
cmp
mov
sbb
dec
push
add
add
test
ret
pop
pop
sub
inc
pop
or
pop
bnd
enter
popf
lret
out
notb
pop
inc
pop
pop
add
add
jmp
pop
daa
pop
and
add
dec
mov
jbe
push
and
add
jmp
rcrb
xor
add
mov
les
cld
xor
add
pop
mov
pop
nop
ss
add
stc
repnz
addr16
dec
add
add
lea
add
push
push
xor
add
mov
aad
xor
add
add
mov
push
pushf
sbb
add
xor
add
push
icebp
xchg
dec
lahf
jl
bsf
pop
aad
loop
or
and
add
pop
leave
pop
cmp
push
pop
fdivs
or
adc
add
sub
pop
fmul
or
frstor
xor
add
add
pop
fsts
or
in
es
jle
stos
mov
daa
pop
test
pop
aad
dec
jmp
jle
add
sbbb
addr16
jg
lods
in
leave
push
pop
rclb
movsl
pop
dec
push
js
pop
repz
jl
shl
pop
inc
add
cs
pop
pop
jmp
pop
jmp
or
or
mov
bound
add
bound
add
push
aas
mov
add
cltd
aam
push
mov
and
icebp
leave
cltd
adc
stos
add
add
in
mov
mov
add
mov
ror
lcall
js
pop
psllq
add
push
pop
mov
std
jge
mov
cmp
pop
pop
lods
pop
jecxz
xchg
sub
mov
pop
ss
sub
add
pop
or
push
add
pop
mov
add
pop
movsl
pop
lock
pop
cltd
jl
addr16
xchg
aas
stos
push
gs
iret
outsb
ret
add
jae
add
out
inc
pop
fbld
add
sub
pop
pop
fldl
add
add
into
lea
add
jb
add
dec
outsb
int3
pop
push
pop
call
add
pop
imul
cmp
add
jne
jg
sbb
sbb
add
pop
je
sahf
leave
fcmove
aam
pop
pop
jb
add
add
test
add
lods
inc
pop
bnd
clc
xchg
lods
push
mov
pop
sti
push
outsb
negl
rcrb
mov
scas
adc
add
add
mov
push
call
mov
mov
jns
inc
pop
sbbl
pop
mov
pop
inc
pop
test
lcall
add
outsb
inc
add
and
add
inc
add
incb
add
add
outsl
push
add
add
adc
add
stos
cmp
inc
pop
fbld
add
mov
sub
add
loop
jae
add
pop
dec
jns
pop
pop
pop
insb
sahf
xchg
dec
push
inc
add
dec
out
adc
add
push
xchg
add
outsb
mov
pop
ret
sub
jmp
add
add
ss
pop
pop
sub
pop
pop
pop
pop
cmp
jl
fists
mov
sbbb
pop
push
psubusw
fimuls
pop
dec
pop
and
add
movsl
pop
sbbb
pop
xchg
shlb
add
popf
cmp
loopne
jmp
add
mov
pop
cwtl
mov
jbe
pop
out
inc
add
out
iret
out
out
adc
add
ljmp
jle
mov
ffreep
pop
es
jmp
cmp
add
pop
push
add
sbb
jg
sbbb
in
sti
sti
cmp
in
mov
rcrb
mov
into
inc
add
sbb
flds
jo
add
daa
pop
aas
adc
add
add
add
rcr
and
add
mov
movsb
pop
and
sub
pop
mov
push
mov
pop
imul
adc
xchg
pop
or
pop
aaa
scas
pop
das
adc
pop
adc
add
addr16
ficomps
pop
cmp
and
add
pop
pop
xor
or
push
pop
lret
cmc
dec
and
add
add
out
bound
add
add
adc
add
pop
jo
add
pop
add
jmp
mov
lods
cmpsl
pop
std
test
pop
mov
gs
jg
addr16
daa
pop
aaa
lret
add
pop
lds
add
pop
sarb
pop
into
mov
add
lret
push
pop
dec
cmc
jmp
pop
push
add
add
add
movsl
pop
js
pop
and
add
pop
inc
pop
lahf
cmpsl
pop
push
lds
das
and
sbb
pop
pop
sbb
add
les
out
add
lea
outsb
add
add
add
stos
stos
mov
fcomps
pop
iret
adc
add
call
out
push
add
je
mov
jecxz
or
cmp
inc
pop
xchg
int
jns
mov
scas
sub
pop
in
cmc
and
add
jbe
pop
cld
mov
aam
fimuls
popa
add
lods
push
add
jp
pop
mov
pop
pop
pop
test
daa
pop
lods
xchg
push
add
scas
lcall
add
jae
add
xchg
aad
sbbb
add
lods
fwait
insl
sbb
pop
cmp
pop
daa
pop
dec
sbb
push
pop
pop
cli
mov
pop
shr
pop
gs
sbbb
xchg
sbb
jns
pop
mov
push
add
fisttpll
nop
loop
cwtl
inc
pop
loop
adc
add
pop
popl
add
sub
xchg
lds
mov
push
add
jg
lret
add
repz
pop
mov
faddl
pop
add
add
xchg
lock
jno
add
lcall
sete
add
and
xor
ljmp
bound
add
pop
lods
pop
inc
add
pop
fwait
add
scas
push
pop
fistpl
add
push
test
mov
lods
sub
fistps
pop
xchg
xor
cli
notl
add
stos
movsb
pop
imul
fs
fsubs
ljmp
xor
pop
pop
lea
add
jl
std
aam
pop
mov
mov
pop
stc
sub
xchg
dec
xchg
daa
pop
sbbb
sar
imul
pop
xchg
xchg
test
add
out
leave
push
add
sbb
add
sbbl
mov
dec
dec
xor
add
add
scas
or
pop
or
pop
sti
pop
in
sbbl
out
cmpsb
pop
pushf
jbe
mov
in
fmulp
mov
add
inc
pop
mov
add
pop
push
pop
outsl
jbe
add
test
add
mov
pop
pop
xor
pop
adc
add
ds
mov
js
add
push
sbb
pop
adc
je
add
cld
out
and
pusha
add
dec
mov
cltd
jmp
sarb
nop
inc
add
iret
mov
mov
add
add
xor
add
pushf
lods
mov
loopne
adc
add
cmp
add
add
cmp
xor
add
aas
cmp
ret
pop
pop
aaa
loope
clc
scas
jne
add
jp
dec
dec
push
int
outsl
std
sbb
xor
add
sbb
sbb
inc
pop
imul
push
jg
mov
pop
or
pop
mov
adc
add
jmp
pop
cmp
scas
dec
pop
lock
add
pop
dec
push
add
popa
add
sar
mulb
jp
add
fwait
int
add
repz
add
fadds
add
inc
add
cmp
lds
and
add
push
mov
pop
loopne
in
popa
add
add
inc
add
mov
add
xor
add
mov
pop
pop
out
or
pop
ss
repnz
pop
mov
cli
imul
jae
add
mov
fcoml
mov
add
xchg
cmp
add
sarb
leave
fwait
sub
push
and
pop
pop
ret
pop
push
imulb
or
pop
push
lea
mov
or
pop
pop
cmp
pop
sub
add
push
scas
mov
aam
xchg
inc
add
frstor
push
lods
xchg
fcoms
sbbb
cmp
and
add
add
mov
movsl
pop
aaa
push
add
sarb
sbb
add
push
jae
add
pop
sbb
pop
fsubrp
push
add
pop
leave
jmp
xor
add
icebp
repz
lret
sarb
push
add
stos
shll
mov
inc
pop
cmpsb
pop
xchg
jb
add
xchg
sub
add
lret
add
mov
pop
loop
stc
and
add
pop
hlt
sbbb
add
out
inc
add
jle
imul
daa
pop
xchg
leave
push
add
adc
add
jecxz
xchg
divb
add
cmp
pop
test
das
mov
add
into
pop
and
add
pop
pop
repnz
pop
insb
popf
push
mov
pop
push
mov
jmp
pop
outsb
psubq
pop
leave
sbb
add
pop
xchg
jno
add
add
jmp
filds
pop
jge
cmpsl
pop
and
xchg
dec
cmp
pop
loopne
addr16
sbbl
add
fmull
sbb
repz
sub
pop
rol
pop
es
fsubrp
daa
pop
fidivs
mov
xchg
pop
outsb
lods
xlat
mov
pop
mov
adc
add
pop
and
add
fcomps
or
add
inc
add
jnp
add
fincstp
cs
mov
pop
mov
push
add
mov
stc
cmpsl
pop
repnz
out
rorb
add
push
add
inc
add
popf
cmp
fsubrl
testb
cmp
cld
lret
dec
arpl
add
add
cmpsb
pop
cwtl
int3
add
or
aaa
imul
cltd
fwait
jmp
mov
pop
or
lods
neg
outsb
popf
rcrl
jmp
jbe
sbb
add
jae
add
xchg
mov
stos
mov
lea
pop
push
push
pop
xchg
cli
jbe
fsubrl
pop
jo,pt
add
stc
dec
int
pop
sub
pop
in
fisttpll
pop
js
mov
add
jmp
sbbb
cmpsl
pop
sub
arpl
add
add
pop
mov
adc
add
cld
mov
pop
arpl
add
bound
add
pop
pop
ja
mov
movsb
pop
fldenv
pop
xor
add
pop
xchg
adc
add
push
pop
push
jns
iret
lock
add
xor
pop
mov
pop
xor
add
pop
push
fucomi
shrl
clc
dec
pop
loope
and
add
pop
mov
pop
mov
add
add
dec
lret
pop
fs
gs
mov
pop
jge
sbb
in
pop
pop
sbb
es
fnstenv
pop
cmpsl
pop
cmp
pop
sahf
cmpsb
pop
mov
in
sub
stos
sbb
add
pop
push
inc
pop
jnp
jbe
fistpll
lds
push
mov
lret
jo
add
pop
sbb
pop
xchg
enter
fcomps
sub
imul
add
add
fdivrl
pop
dec
jg
sub
int3
imul
xchg
pop
in
push
add
pop
outsb
js
pop
pop
int3
xchg
pop
fildll
or
pop
ficomps
pop
cltd
cltd
inc
pop
inc
pop
ficomps
jecxz
mov
add
add
adc
add
cmp
add
pop
xchg
push
pop
xchg
dec
jp
pop
pop
adc
or
mov
pop
int3
mov
dec
popa
add
bswap
xchg
pop
sbbl
pop
ljmp
xlat
cmp
jae
add
pop
test
jg
jns
pop
fadd
pop
sbb
pop
jae
add
mov
daa
pop
sub
xchg
adc
add
add
push
mov
inc
add
add
add
sahf
mov
in
mov
insb
xor
add
inc
pop
xor
add
rcrb
pop
outsb
push
fidivl
pop
insl
cld
inc
pop
test
add
sub
add
in
xor
add
jae
add
push
jmp
pop
sub
cmp
add
pop
jg
add
syscall
pop
jo
add
pop
sub
xchg
test
add
mov
sbbb
sub
in
xor
add
add
pop
push
lret
sbb
jg
fisubs
xchg
push
pop
sbb
mov
jbe
mov
add
xor
lods
adc
add
pop
pop
mov
aam
dec
jbe
dec
lods
or
js
add
setns
cmpsl
pop
jbe
out
shr
int
pop
shl
dec
insb
adc
push
mov
add
stos
jae
add
add
adc
add
enter
pop
dec
imul
inc
pop
rorl
and
rcrb
add
movsb
pop
mov
add
mov
sahf
icebp
popa
add
pop
sub
xor
pop
and
xchg
ljmp
add
js
dec
lock
pop
cmpsb
pop
std
out
fbld
mov
cmp
add
pop
jge
xchg
lret
adc
add
jae
add
cltd
push
repnz
jl
movsl
pop
scas
adc
add
scas
xor
add
pop
mov
imul
add
cmpsb
pop
mov
mov
dec
xchg
mov
stc
rcrl
int3
jb
add
pop
bound
add
cmp
daa
pop
dec
pop
pop
push
add
sbb
pop
int
pop
ja
pop
adc
add
mov
pushf
pop
nop
test
fistpl
add
fnsave
pop
aad
jno
add
xlat
mov
pop
inc
pop
lock
fidivrl
add
pop
jne
cld
mov
add
xchg
pop
sbb
dec
std
lret
adc
add
jmp
push
lret
or
cmp
fimull
dec
inc
add
lock
add
popa
add
je
fmul
in
test
add
add
add
js
pop
xor
idivl
add
test
add
mov
sbbl
pop
and
add
test
aaa
arpl
add
pop
pop
mov
sbb
jnp
and
add
lock
pop
push
rcrb
outsb
aad
push
mov
mov
je
push
mov
or
repz
mov
push
add
movsl
pop
cmp
pop
cltd
cmc
or
js
pop
jl
xchg
pop
mov
add
xchg
scas
inc
add
or
add
jmp
add
sub
popf
cwtl
add
add
test
xchg
js
pop
jnp
jb
add
push
jns
add
push
mov
dec
out
es
popa
add
mov
pop
xchg
or
or
xchg
pop
sbbl
shlb
add
pop
jle
add
outsb
push
rcrl
add
add
jge
pop
lods
aam
pop
adc
add
pop
jge
pop
addr16
and
sti
mov
and
mov
pop
pop
test
xchg
imul
add
js
movsl
pop
add
sbbl
and
add
add
push
mov
pop
pop
adc
add
or
pop
sub
pop
popf
fisttpll
loopne
pop
xlat
pop
cmp
push
pop
mov
add
add
aas
popa
add
imul
push
add
xchg
xor
add
addr16
mov
adc
add
inc
add
pop
bound
add
xchg
outsl
or
sub
pop
adc
cmp
and
pop
pop
out
xchg
mov
mov
mov
cmp
clc
loopne
daa
pop
shll
add
stos
bound
add
push
ljmp
shll
add
push
in
mov
outsl
or
add
xor
add
cmc
mov
cmp
push
or
sbb
pop
jl
in
jne
pop
push
pop
mov
ljmp
pop
insl
sbbl
pop
xor
pop
mov
hlt
push
add
mov
add
dec
or
lret
test
test
mov
les
dec
ficompl
imul
xchg
mov
pop
pop
inc
add
mov
push
cmp
sbb
pop
dec
out
mov
add
pop
pop
fdivp
es
adc
add
inc
pop
jb
add
pop
push
pop
ja
pop
popf
cmp
ficoms
dec
xchg
pop
sbb
jbe
mov
into
cli
or
pop
add
add
out
push
add
sub
adc
add
lret
adc
xor
add
mov
pop
dec
rcrl
pop
pop
popa
add
jbe
pop
loop
les
mov
daa
pop
pop
stos
push
and
pop
adc
add
or
xchg
mov
pop
and
add
push
add
sbbl
add
in
xchg
popf
mov
add
add
sbbl
lret
popa
add
jl
push
mov
pop
out
jbe
pop
hlt
cltd
inc
pop
or
add
add
add
push
lgs
pop
jg
es
leave
mov
add
pop
jbe
cmp
cmp
add
int
pop
aam
lea
pop
ljmp
cld
lahf
mov
add
dec
clc
dec
imul
jecxz
push
cmp
pop
test
sbbl
add
loopne
cli
fwait
mov
lods
and
add
add
movsl
pop
out
dec
sub
adc
add
pop
sti
in
or
add
fisttpl
push
or
push
inc
pop
adc
and
add
push
xchg
xor
add
popl
out
jle
xchg
movsl
pop
dec
jbe
dec
stc
xchg
test
movsl
pop
jp
pop
dec
push
add
sub
adc
add
pop
test
jg
xor
pop
mov
mov
add
bound
add
push
ret
pop
pop
push
jo
add
pop
loopne
or
js
add
sti
inc
pop
clc
aas
aas
outsb
mov
pop
sbb
imul
pop
mov
mov
add
leave
or
pop
lahf
push
pop
mov
add
sahf
aam
pop
or
add
and
jge
pop
lret
es
out
sub
pop
mov
pop
call
pop
inc
pop
cmpsb
pop
clc
decb
pop
cmp
pop
cmp
push
pop
js
call
rol
pop
cwtl
divb
add
mov
shr
rcrb
pop
mov
outsb
dec
pop
cmp
cmp
inc
pop
aaa
cmp
add
add
xor
jns
push
pop
xchg
push
add
lds
fwait
cmp
cli
jmp
mov
test
pop
sbb
add
mov
jbe
adc
add
add
jne
pop
lret
test
jno
add
test
fwait
sub
mov
fs
shlb
add
add
add
add
imul
add
push
add
test
push
dec
mov
pop
or
jecxz
jno
add
pop
addr16
ljmp
and
add
dec
scas
sub
jp
sub
sbb
pop
cltd
dec
xchg
ret
pop
in
shll
pop
rcrb
add
lret
xchg
sub
mov
push
add
mov
pop
pop
cmp
pop
push
lahf
sahf
push
add
in
xchg
sub
mov
ficompl
cmp
mov
add
jo
add
sbb
push
pop
adc
add
sub
add
lock
dec
mov
or
push
mov
pop
adc
add
push
jae
add
mov
pushf
jb
add
xor
add
cmp
push
add
mov
in
mov
loopne
fildl
add
push
out
stc
out
mov
push
jmp
add
add
leave
popa
add
jns
inc
pop
leave
jnp
into
pop
call
daa
pop
outsb
mov
rcl
pop
bndldx
push
movsl
pop
push
call
jae
add
add
pop
aas
ds
lcall
sub
pop
and
add
push
add
cmp
add
pop
adc
add
push
mov
pop
movsl
pop
cmpsl
pop
fistpll
sahf
jne
mov
mov
inc
add
xchg
sub
inc
add
jae
add
adc
jns
add
frstor
add
and
pop
cmpsl
pop
es
sahf
sbb
loop
pop
pop
mov
add
stc
test
xchg
push
rcrl
jb
add
mov
pop
and
add
sub
and
add
aaa
mov
add
in
pop
dec
loope
outsl
and
and
or
lret
cmpsb
pop
pop
xchg
int
add
pop
sub
ljmp
insl
imul
add
pop
xchg
dec
cmp
rcrb
jle
sub
add
or
and
pusha
add
adc
add
mov
pop
popl
sub
pop
sbbl
pop
ss
lods
push
sub
inc
add
test
pop
fbstp
pop
adc
pop
movsb
pop
adc
add
pop
xchg
adc
add
push
add
push
in
dec
fsubl
or
mov
xor
add
inc
add
inc
pop
je
incb
add
pop
mov
jne
inc
pop
bound
add
mov
mov
aaa
sbbb
test
xchg
movsl
pop
pop
stos
fcmovbe
mov
cli
repz
push
cmp
pop
mov
add
ucomiss
pop
cmpsb
pop
cmp
dec
xor
add
add
pop
sbb
add
cmp
divl
pop
aas
adc
add
add
bound
add
loope
cmpsb
pop
arpl
add
pop
sbb
mov
xchg
pop
loopne
mov
mov
jl
pop
out
push
add
push
out
out
xlat
into
jmp
sbbb
jb
add
aaa
test
xchg
jge
inc
pop
jbe
adc
xchg
jb
add
pop
lds
pop
jmp
ds
popf
imul
std
jge
mov
inc
pop
mov
add
sbb
jecxz
jl
push
add
cmp
imul
push
pop
cmp
roll
mov
mov
pop
xchg
nop/reserved
xchg
scas
inc
add
xchg
bound
add
fists
add
outsl
das
out
mov
fisttps
ss
test
add
add
mov
jp
mov
xor
add
pop
sub
mov
out
sbb
xchg
pop
push
lahf
sbb
pop
arpl
add
scas
outsb
imul
mov
add
pop
xor
add
add
jg
insl
lock
add
into
fwait
in
push
adc
add
add
add
cli
mov
popa
add
push
inc
pop
rcll
test
cli
fidivs
add
add
dec
sahf
jp
pop
icebp
xchg
je
lods
cwtl
mov
pop
nop
mov
loop
pop
mov
out
stos
add
add
add
cmp
mov
js
ret
iret
inc
pop
fsubrl
dec
or
mov
hlt
adc
cli
nop
fmuls
daa
pop
pusha
add
mov
add
icebp
inc
add
adc
add
pop
inc
pop
sbbb
xor
pusha
add
arpl
add
pop
imul
adc
add
aaa
pusha
add
mov
pop
mov
add
outsb
pop
out
out
or
xchg
sub
add
mov
xchg
mov
push
in
pop
sti
cmp
add
je
sbb
icebp
in
call
pop
shll
addr16
rcrb
jb
add
push
sbbb
add
cwtl
pop
and
add
add
repnz
push
scas
fsubp
pop
mov
add
mov
add
or
fiaddl
dec
sub
clc
rcrl
ret
pop
jb
add
pop
sti
clc
cmpsl
pop
fmul
sub
ret
int3
xor
add
inc
pop
pop
or
insb
mov
call
add
dec
mov
pop
sub
add
mov
pop
jmp
pop
xlat
inc
pop
sbbl
pop
mov
insl
xor
add
xchg
test
xor
add
out
es
push
in
pop
fistpl
fwait
dec
cmpsb
pop
mov
lret
fistpl
mov
and
mov
pop
or
add
addr16
repnz
inc
add
push
mov
mov
pop
iret
or
pop
add
mulb
cmp
sti
push
add
pop
popf
lcall
sbb
cld
xchg
loopne
sub
add
jb
add
add
sbb
call
xchg
sti
icebp
hlt
jl
cmpsb
pop
xchg
dec
inc
add
cmp
jb
add
bound
add
jle
pop
cmp
add
stos
lcall
std
in
jnp
add
add
pop
in
out
push
add
dec
pop
test
addr16
fs
stos
int
pop
out
arpl
add
mov
inc
pop
sbb
or
adc
add
jo
add
pop
sbb
pop
bnd
add
clc
sbbl
add
add
and
add
add
mov
add
loop
sbbb
add
add
lret
out
out
lds
add
jbe
sbb
xor
add
loop
gs
aas
arpl
add
incb
sbb
add
enter
test
stos
or
lock
in
scas
sbb
jge
add
rcrl
add
mov
loopne
jae
add
add
mov
ljmp
add
in
shll
pop
shr
das
jmp
jmp
sbb
add
pop
sub
add
inc
pop
xchg
jmp
test
sbb
adc
add
push
pop
mov
hlt
adc
add
ret
pop
je
pop
imul
bound
add
or
dec
mov
in
idivb
dec
mov
imul
pop
rol
pop
leave
sahf
adc
add
pop
pop
test
addr16
pushf
les
pop
mov
iret
jno
add
sbbl
sti
mov
add
bound
add
lds
fucomp
mov
cmp
ds
pop
movsb
pop
or
scas
repz
sbbb
fisttpl
pop
mov
and
add
add
add
add
testl
pop
mov
nop
cmp
push
add
fisubrl
das
xchg
cwtl
xchg
outsb
bound
add
push
sbb
popa
add
cmp
enter
pop
cmp
add
push
pop
negb
incb
in
xchg
icebp
js
add
adc
add
fldl
add
dec
add
add
add
clc
push
dec
push
sub
cmc
repnz
inc
add
ss
pop
pop
sbbb
bound
add
loopne
push
imul
sti
pop
ja
dec
cwtl
push
add
pop
in
jl
pop
push
add
stc
stos
pop
mov
push
inc
add
push
stos
ret
pop
dec
clc
out
sub
pop
adc
add
rcrl
pop
in
stos
xcrypt-ctr
cmpsl
pop
ds
cli
jmp
popa
add
scas
insb
dec
mov
dec
mov
rol
pop
clc
in
push
sub
add
or
xchg
add
fistpll
jp
sub
add
cmp
int
push
fcmovne
sbb
leave
fldl
pop
mov
add
cli
daa
pop
fnstsw
es
push
pop
dec
push
add
jno
add
add
stos
add
add
iret
cmp
pop
xchg
int3
or
into
adc
pop
dec
aaa
es
movsl
pop
fdivl
xor
add
pmovmskb
and
add
in
inc
pop
cmp
inc
pop
push
outsb
xchg
insl
push
add
test
adc
add
out
pop
in
cmp
mov
das
dec
push
add
add
pop
dec
xchg
adc
add
add
and
imul
add
adc
popf
cmp
loopne
nop
fcmovnbe
jmp
aas
sbbb
sub
add
pop
fidivs
add
inc
add
sub
or
sahf
xchg
repz
sbb
mov
sub
xor
add
ja
lahf
or
sub
add
pop
mov
xchg
popf
xchg
adc
add
add
add
fsubrs
sub
add
pop
cmp
add
les
out
mov
sub
xchg
jmp
pop
cmp
pop
inc
pop
lods
dec
cs
push
jb
add
loopne
imull
aad
adc
add
pop
iret
neg
dec
daa
pop
xor
add
add
das
lea
jae
add
sub
pop
sbb
pop
addr16
pop
jns,pt
add
loope
mov
pop
mov
add
mov
popf
ret
pop
into
ret
pop
ss
jmp
popa
add
inc
add
imul
and
add
add
or
add
sbb
pop
jmp
lahf
loope
popa
add
mov
add
add
mov
cmp
cmp
nop
dec
mov
pop
imul
es
xor
add
xor
add
pop
jo
add
adc
add
add
and
add
in
fiadds
lahf
push
xor
add
lahf
into
adc
add
add
fcoms
inc
pop
mov
pop
pop
es
cmp
jno
add
add
add
dec
inc
pop
push
add
push
pop
and
add
sub
mov
add
jbe
mov
jbe
cmp
test
lods
nop
cmc
mov
cmpsl
pop
in
lret
gs
sbb
mov
mov
sbbb
test
cmpsl
pop
arpl
add
xchg
inc
add
inc
add
and
add
pop
pop
enter
pop
bound
add
daa
pop
sbbl
lahf
lds
test
cli
lods
jnp
cmp
sbb
insl
sub
rcrl
add
jno
add
pop
push
add
xor
add
es
mov
pop
mov
inc
pop
rolb
test
pop
js
outsl
sub
push
sbbl
push
add
sbb
gs
xchg
loope
xchg
xor
add
pop
rolb
add
jno
add
add
loop
pop
and
add
add
scas
out
add
call
pop
push
pop
movsb
pop
and
and
add
pop
lock
rcrb
cmp
and
add
pop
loop
loop
add
add
xlat
jns
out
adc
add
jnp
mov
pop
adc
add
stos
scas
leave
mov
sbb
inc
pop
hlt
sbb
scas
repz
mov
pop
xchg
mov
bswap
addr16
and
add
pop
sbb
add
add
insl
pop
adc
add
sbbl
stos
scas
add
add
pop
stos
dec
inc
add
dec
inc
pop
scas
and
add
pop
out
adc
pop
gs
mov
jmp
jmp
sbb
pop
mov
mov
add
sub
pop
ficoml
push
adc
pop
cli
mul
pop
pop
or
idivb
aaa
in
mov
arpl
add
shr
pop
je
or
add
pop
aad
add
aad
pop
sbb
fsubrs
out
adc
add
test
sub
add
fsubrl
fsubr
jge
pop
divb
add
pop
sub
mov
and
add
aad
hlt
mov
add
das
popf
in
enter
stos
arpl
add
pop
inc
pop
repnz
pusha
add
mov
mov
in
ljmp
adc
ficomps
dec
adc
xor
and
repnz
mov
xchg
addr16
mull
xchg
jno
add
test
sub
mov
pop
cmp
shlb
add
outsb
mov
sbb
rcrl
add
add
ljmp
stos
imul
std
scas
out
mov
add
add
sbbb
pop
out
imul
lds
or
push
add
neg
jo
add
outsl
push
add
pushf
out
jbe
mov
inc
pop
xor
add
fs
xchg
rcrb
xor
add
pop
sub
mov
push
pop
mov
add
fcomi
adc
add
aad
fsubl
int3
rcrl
push
pop
push
add
sbb
pop
adc
add
add
rcrl
add
sbbb
pop
add
add
add
jmp
pop
pop
adc
add
add
xchg
loope
ljmp
popf
add
jb
add
inc
pop
and
movsb
pop
in
dec
inc
add
pop
and
add
cmp
js
pop
mov
add
mov
dec
mov
jg
ret
stos
or
pop
push
gs
sbb
mov
inc
pop
icebp
push
aaa
rclb
add
rcrb
xlat
jmp
jecxz
outsl
loopne
jo
add
pop
es
cli
lret
aas
or
lods
push
jmp
add
xchg
adc
lds
add
clc
in
mov
dec
rorb
popa
add
in
mov
add
cwtl
fadd
pop
out
cmp
add
rcrb
add
cmp
add
aad
adc
add
dec
xchg
cmp
mov
jp
add
ficompl
and
sti
call
movsl
pop
mov
add
mov
mov
outsb
decl
cmp
lods
cwtl
dec
dec
adc
add
pop
mov
rclb
add
xor
add
icebp
int
addr16
pop
adc
pop
lods
dec
cmp
lds
lds
sub
sbbl
lahf
jo
add
add
fisubs
sub
mov
rcrl
add
pop
mov
adc
idivl
pop
mov
add
out
add
add
pop
sub
pop
cld
sahf
cli
aad
mov
mov
sarb
lahf
dec
aas
inc
pop
nop
sahf
iret
add
add
scas
shll
or
add
sub
pop
push
daa
pop
sbb
push
add
outsb
xor
add
pop
add
add
lret
push
push
cld
test
xchg
rcrl
pop
rorl
or
loop
xchg
adc
add
pop
or
ljmp
fistl
add
addr16
mov
pop
cwtl
push
dec
jmp
push
mov
or
popa
add
add
add
push
imul
add
enter
fimull
pop
jne
pop
cld
rcrb
nop
jg
push
lods
aad
pop
jb
add
enter
aam
out
add
add
int3
pop
pop
je
pop
lods
cli
and
movsl
pop
xor
add
in
idivl
scas
push
add
idivb
pop
xchg
xchg
inc
add
fucomi
test
xor
add
pop
int
pop
mov
aad
in
dec
mov
add
inc
pop
sbb
pushl
add
xchg
aaa
repz
add
mov
ret
pop
jle
adc
cmp
add
add
push
pop
fistpll
sbbl
mov
pop
es
jb
add
pop
out
sbb
das
and
xor
imul
pop
cmpxchg
or
pop
sti
add
add
push
fs
fiadds
pop
dec
xchg
dec
inc
add
jmp
pop
out
repz
mov
sub
pop
icebp
push
add
xchg
inc
pop
pop
sbbl
mov
cld
fiadds
push
add
add
mov
add
mov
add
pop
mov
add
pop
jnp
push
fbld
pop
or
add
add
add
pop
xor
add
sbb
pop
lret
aad
pop
push
dec
cmp
popa
add
js
xor
add
mov
xchg
jge
mov
xor
add
pop
sub
lds
add
cmc
and
add
sarl
pop
sbbl
xor
add
call
pop
movsb
pop
jnp
outsb
ret
pop
leave
call
ja
add
or
out
loope
sbbb
mov
rcrl
int
das
pushf
push
pop
and
add
dec
lret
mov
sbb
pop
sbbb
push
push
mov
cltd
cmp
add
cmp
pop
lods
fs
xchg
mov
call
add
jne
xchg
jecxz
lds
pop
rolb
add
lcall
mov
fists
inc
add
mov
dec
shrl
xchg
gs
sysret
pop
inc
pop
rcll
jp
xlat
into
sub
sbbl
inc
pop
xchg
pop
add
add
add
inc
pop
fs
dec
es
mov
lret
in
lret
xchg
aas
decl
sbbb
dec
cmp
cld
jg
pop
rcrl
dec
dec
repz
pop
and
add
or
add
push
add
mov
add
lahf
outsl
adc
add
sbb
add
push
cs
add
lds
jne
sti
fiadds
add
jle
add
inc
add
mov
push
pop
push
sub
pop
dec
outsl
xchg
sbb
sbb
add
pop
push
add
adc
add
inc
pop
imulb
int3
and
fwait
jg
fdivrl
pop
push
pop
and
mov
pop
daa
pop
and
add
repnz
sub
ret
pop
mov
lea
and
add
test
pop
sub
sbbb
stos
inc
add
inc
pop
lods
pop
pop
pop
cmp
rcrl
adc
add
jne
pop
pop
pop
aam
push
in
inc
pop
sahf
pop
mov
sbb
in
mov
call
add
je
pop
mov
xchg
out
lods
add
add
nop
lret
aas
push
jecxz
xchg
add
stos
xchg
sti
xchg
bound
add
xchg
pop
int
pop
sarl
pop
mov
add
pop
pop
mov
add
jg
xchg
dec
je
loop
pusha
add
rcrb
add
add
bound
add
add
icebp
sub
add
cmpsl
pop
dec
or
add
sahf
sbbb
push
pop
imul
add
sti
jnp
add
pop
jno
add
out
dec
les
pop
jp
lahf
jg
pop
arpl
add
dec
sahf
pop
jbe
ljmp
lods
ret
add
daa
pop
sar
loope
jg
adc
add
pop
jmp
pop
pop
jl
pop
jb
add
mov
mov
mov
add
mov
ss
adc
add
insl
cmp
sti
mov
pop
jns
push
pop
stos
inc
add
leave
imul
cmp
mov
sbb
into
popf
xchg
insb
lret
jp
nop
in
imul
xchg
mov
pop
in
into
mov
inc
pop
sub
sub
pop
and
add
add
jl
inc
pop
jo
add
add
ss
mov
inc
add
adc
add
jp
leave
es
xchg
lret
sbb
push
add
lods
adc
ret
pop
push
inc
add
inc
pop
call
inc
pop
sbb
lahf
push
pop
cmpsl
pop
mov
pop
mov
lods
movsl
pop
mov
out
stos
out
pop
bound
add
sbbb
sub
add
cmp
xchg
sbbb
pop
sbbb
pop
cli
lods
ss
dec
cltd
sub
mov
dec
shrb
and
divl
fiadds
pop
jge
add
push
push
add
mov
or
adc
add
add
arpl
add
std
add
sbb
iret
rclb
sub
add
cli
stc
cmp
pop
xor
add
add
jb
add
repnz
adc
jno
add
pop
sub
pop
mov
pop
mov
pop
sbb
add
icebp
insb
stos
sbb
add
aad
pop
dec
out
xchg
imul
add
xor
add
push
adc
pop
std
out
pop
sub
sbbl
leave
lret
or
das
xchg
push
sbb
add
pop
lea
add
add
cmp
and
in
jp
inc
pop
add
add
and
add
add
and
add
call
je
pop
lcall
add
stc
mov
pop
jg
ret
sbbb
pop
pop
lahf
cld
push
pusha
add
push
add
push
and
add
pop
insb
js
cmp
pop
xchg
jae
add
iret
mov
sub
add
mov
push
cmp
pop
pushf
sub
pop
mov
pop
sbbl
sbbl
pop
mov
pop
xchg
sub
add
sbb
loope
dec
and
add
add
add
and
add
sub
pop
xlat
mov
lcall
mov
mov
xor
add
scas
pop
pop
ljmp
adc
add
xor
add
cmp
add
mov
sub
add
sahf
inc
pop
push
add
es
sbbl
add
jae
add
pop
in
lret
jns
movsb
pop
les
mull
add
xchg
push
mov
pop
mov
sbbl
add
shlb
add
pop
or
lock
daa
pop
lock
fld
pop
sbb
pop
or
cmpsl
pop
push
jmp
das
mov
pop
mov
mov
add
mov
sbb
add
negb
in
push
sbbl
cmpsl
pop
pop
pop
in
popa
add
aaa
xchg
and
inc
pop
xor
jno
add
inc
add
ror
lods
repz
fisubrs
add
cmpsl
pop
lds
pop
add
leave
aam
dec
jg
or
pop
lea
add
mull
fisubrl
and
add
dec
push
shl
call
pop
xchg
pop
movsl
pop
sbb
add
test
add
push
popa
add
jl
add
xchg
lcall
add
jg
adc
add
add
outsl
push
add
sub
cmpsb
pop
lods
mov
int
cmp
add
pop
loopne
inc
add
push
cmp
pop
adc
add
mov
rcrl
push
push
ret
pushf
je
iret
jns
push
aam
pop
cmp
icebp
jb
add
add
shll
mov
add
or
mov
add
es
dec
mov
mov
pop
lcall
rcrb
pop
push
lret
cmp
clc
cmp
dec
mov
add
lret
fisttps
imul
sub
xchg
stos
jge
jl
pop
hlt
pop
sbb
popa
add
cmp
pop
mov
fisttpll
test
mov
add
jl
add
pop
pop
jmp
add
push
pop
js
add
imul
push
push
add
mov
pop
fisubrl
inc
pop
ret
inc
pop
mov
fldcw
int
nop
push
cltd
xchg
mov
imul
rcrb
pop
jns
add
pop
xor
add
add
mov
jp
mov
repz
test
lods
sbb
pop
and
add
mov
pop
shlb
call
add
ret
pop
pop
push
jg
and
add
add
mov
iret
popa
add
rclb
or
xchg
out
push
add
js
iret
and
add
add
scas
ret
add
stc
pop
mov
mov
add
add
mov
rcrl
dec
mov
and
add
push
add
sbbl
pop
xor
add
fcoms
add
fisttpl
add
mov
add
adc
add
or
add
nop
rcrl
push
add
out
and
add
mov
xor
mov
jae
add
sahf
dec
or
xchg
pop
mov
jmp
in
pop
push
jle
pop
aaa
mov
outsb
mov
pop
push
les
or
add
add
jnp
sbbl
sbb
add
enter
fwait
dec
leave
xchg
mov
pop
shll
add
imul
add
add
sti
cmp
sub
fdivr
and
add
add
add
cli
loop
sub
add
push
pop
pop
pop
lcall
lock
add
jge
sbb
add
xlat
xlat
dec
mov
sbb
repz
sbbl
pop
adc
add
adc
add
push
sarb
sbb
test
out
loopne
aad
xchg
pop
sbb
cmp
lods
add
add
add
js
add
inc
add
xor
add
jp
mov
fisubrl
mov
and
add
pop
mov
scas
lds
mov
pop
cmpsl
pop
lcall
cmp
pop
inc
add
mov
pop
mov
pop
into
test
lahf
or
out
cmp
movsl
pop
pop
add
add
xor
add
push
test
add
cmpsl
pop
inc
add
push
add
test
pop
or
pop
fistps
in
xor
xchg
sub
pop
mov
stos
in
or
cmpsb
pop
sub
inc
add
movsl
pop
or
test
int3
adc
add
add
rcrl
cmp
imul
xor
add
insl
inc
add
popa
add
movsl
pop
imul
aaa
out
pop
aaa
lds
movsb
pop
pmulhw
add
and
adc
add
fsubrs
sbb
sub
pop
iret
pop
mov
pop
jecxz
rcrl
pop
mov
pop
lock
hlt
jo
add
inc
pop
jns
pop
pop
and
add
add
arpl
add
mov
push
pop
xchg
mov
sub
adc
add
pop
mov
add
lret
loopne
and
add
push
jne
pop
fidivrs
cltd
mov
pop
into
sbb
add
and
in
mov
pop
pop
pop
jg
pop
mov
xchg
cmpsb
pop
outsl
fcmovnu
psubusw
mov
pop
les
add
xor
add
add
stos
push
add
dec
sbb
sub
mov
add
cwtl
cmp
pop
mov
lods
jae
add
or
arpl
add
shrl
add
add
jmp
lock
dec
sbb
repnz
add
adc
add
jle
pop
sub
pop
cld
std
sbb
pop
test
pop
fstpl
xor
add
and
add
add
or
faddl
add
xchg
push
or
pop
dec
cmp
pop
inc
add
pop
pop
xchg
pop
jne
insb
into
mov
push
add
iret
push
pop
fs
loopne
xchg
pop
movsl
pop
lea
add
pop
jae
add
fstpl
adc
lods
sub
or
pop
lahf
in
sti
mov
fsubr
add
add
loopne
push
cmp
cmc
cld
leave
xchg
inc
add
ds
sub
loope
jecxz
rclb
add
add
cwtl
sbb
pop
rorb
jmp
arpl
add
pop
sub
push
xchg
sahf
in
aas
sub
pop
out
insb
jmp
cli
fcomi
and
adc
add
add
lret
pop
add
xor
add
push
add
js
add
sahf
cli
jb
add
pop
lock
add
pop
pop
adc
mov
pop
stos
add
add
add
hlt
mov
add
scas
rcrb
in
jae
add
fs
iret
xchg
cmp
in
xchg
jg
mov
adc
add
pop
pop
or
jbe
aaa
mov
stos
jg
out
into
inc
add
mov
pop
pop
jle
in
mov
add
pop
icebp
adc
add
cli
inc
add
mov
xor
ret
les
popa
add
in
jl
or
pop
les
je
pop
add
add
xchg
xor
add
add
adc
add
dec
and
add
cwtl
mov
in
mov
pop
adc
rcrl
add
aam
clc
mov
add
add
das
hlt
ja
pop
and
add
cltd
into
pusha
add
push
mov
out
int3
aad
into
fiaddl
adc
add
fidivs
add
add
sub
add
or
fsub
pop
cmpsl
pop
mov
stos
lods
jle
ds
lea
add
jne
lahf
dec
jecxz
and
add
and
add
push
mov
movsb
pop
jae
add
add
jb
add
and
add
imul
testl
ret
mov
inc
pop
jp
rcrb
cmp
pop
xchg
pop
cmp
mov
sbbb
inc
pop
push
pop
adc
stos
mov
std
xor
add
and
add
add
pop
lret
fs
jg
pop
in
sbbl
pop
arpl
add
lods
push
or
lock
mov
jbe
xchg
xchg
add
popf
xor
fdivrs
sub
xchg
lea
pop
adc
add
sti
and
pop
inc
pop
mov
mov
jns
jmp
pop
jmp
or
pop
jno
add
add
pop
cmp
xor
add
jg
fchs
pop
jne
pop
jnp
add
mov
push
add
dec
loope
xchg
or
add
cwtl
pop
incl
add
add
pop
ficoms
into
xor
add
leave
dec
outsl
or
pop
xchg
mov
adc
add
mov
add
mov
ficoml
repz
mov
pop
mov
cmp
add
jle
jbe
pop
push
daa
pop
pop
outsb
mov
pop
arpl
add
add
cmp
sub
mov
jns
pop
adc
push
sbbb
pop
xor
add
add
pop
xlat
shlb
das
loope
pusha
add
inc
add
mov
add
sbbl
pop
lret
outsl
js
or
add
add
add
arpl
add
mov
shll
pop
fwait
dec
int3
je
xor
add
pop
xor
add
lods
mov
xchg
int3
push
add
mov
add
test
push
daa
pop
pop
and
add
fnstsw
cli
add
add
ss
sub
add
xchg
fdivp
jge
add
cmp
fstl
and
add
add
pop
in
sbb
dec
jmp
add
sbb
xchg
add
or
pop
add
add
pop
in
xchg
mov
inc
add
fisubrl
pop
xor
add
add
stos
nop
xor
add
sti
out
inc
add
ds
lods
and
add
and
add
pop
fdivrp
jp
lret
jb
add
dec
cmp
pop
movswl
add
pop
in
pop
inc
add
movsl
pop
test
pop
jle
add
in
push
jg
inc
pop
int
pop
push
pop
mov
add
adc
add
pop
adc
add
add
pop
adc
add
loop
lea
aas
aaa
dec
movsl
pop
stc
inc
add
je
mov
xor
fcmovnu
cs
xor
pop
test
sbb
std
test
add
popa
add
sbb
cltd
les
pop
mov
pop
push
loope
insl
mov
daa
pop
mov
mov
arpl
add
push
add
insb
sub
test
push
sbbb
mov
add
mov
into
shrb
add
addr16
nop
jbe
add
push
movsb
pop
ss
mov
stc
add
add
add
push
add
das
push
push
add
inc
pop
ljmp
arpl
add
pop
ss
pushf
jae
add
mov
pop
pop
lods
in
add
add
jecxz
and
outsb
cmc
inc
pop
dec
lea
add
fidivrs
adc
add
add
mov
inc
add
imul
add
add
test
pop
push
adc
add
pop
fidivs
xor
add
and
movsl
pop
pop
mov
and
add
inc
add
xchg
sbb
repnz
mov
xor
add
pop
test
test
sub
push
inc
pop
rcll
mov
mov
iret
or
divl
sub
out
iret
push
sarl
add
mov
loop
push
add
imul
mov
add
mov
add
xor
add
pop
push
dec
cmp
mov
adc
add
mov
pop
lret
pushf
outsb
cmp
add
not
sets
pop
in
xchg
imul
mov
cs
pop
inc
pop
into
pop
xlat
dec
daa
pop
aas
loop
in
dec
mov
icebp
js
add
mov
and
add
mov
add
cwtl
push
sub
daa
pop
sbbl
int
add
and
add
add
mov
pop
push
add
insl
pop
pushf
adc
cmc
dec
mov
out
shll
test
jae
add
push
xor
add
sahf
fistl
jbe
movsl
pop
sbbl
and
mov
adc
add
pop
sti
dec
and
add
pop
pop
fbld
pop
jae
add
xchg
and
pop
adc
add
add
pop
inc
pop
mov
add
js
sbbl
pop
sbbl
inc
add
gs
xor
dec
mov
adc
add
pop
repz
pop
sbbb
jnp
test
pop
cld
es
cmc
pop
cmp
pop
fildll
sbbb
stos
mov
add
sbb
dec
lret
js
fcompl
cmp
add
das
jecxz
mov
incl
les
leave
xchg
pop
push
add
jp
popf
pop
dec
scas
repz
cmp
std
mov
add
ja
add
nop
mov
mov
test
pop
loope
sahf
xor
je
cmp
enter
cmp
or
dec
cld
out
pop
das
stos
pop
call
pop
mov
add
add
and
add
add
mov
fimuls
rcll
add
pop
or
jg
sbbl
push
icebp
aam
pop
adc
add
lcall
push
stos
sub
pop
xor
add
pop
fidivrl
add
enter
add
scas
mov
or
rcrl
aaa
cmp
add
dec
negl
test
jbe
pop
sub
pop
jns
fists
add
sub
rcrb
dec
je
pop
add
add
xor
push
int3
bound
add
add
and
add
add
