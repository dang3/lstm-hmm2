add
add
inc
inc
inc
jne
add
add
add
and
add
ljmp
add
add
stos
stos
add
push
push
push
add
add
cld
cld
cld
cld
cld
cld
cld
cld
insb
insb
insb
insb
mov
add
add
mov
pmullw
add
add
add
mov
jle
or
mov
mov
add
sub
add
add
add
sbb
in
sbb
pusha
pusha
pusha
pusha
pusha
pusha
pusha
popf
popf
popf
popf
popf
inc
inc
inc
inc
add
add
add
add
das
das
das
das
das
add
add
push
push
push
push
mov
or
add
fcmovnu
fildl
add
jp
jp
jp
jp
sbb
sbb
sbb
push
add
add
add
add
add
add
add
add
lock
xchg
xchg
xchg
xchg
dec
dec
xor
js
add
add
add
add
or
or
or
or
or
or
out
out
out
out
add
or
or
or
or
add
cli
cli
cli
cli
cli
cli
add
add
add
out
out
out
out
add
fs
icebp
icebp
icebp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
addl
xchg
xchg
add
add
add
add
div
div
div
not
aad
aad
mov
mov
add
add
add
add
mov
add
add
add
add
popa
addr16
xor
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
ds
add
add
jmp
jmp
add
add
add
add
es
jge
jge
jge
jge
jge
push
push
push
daa
sbb
jo
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
mov
inc
inc
inc
add
add
add
add
addb
mov
add
add
jo
sub
repnz
add
add
add
add
insl
insl
mov
mov
mov
mov
add
add
aam
aam
aam
aam
aam
aam
mov
mov
add
add
icebp
icebp
icebp
icebp
lret
lret
lret
add
ret
ret
ret
ret
ret
ret
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
rcl
rcl
rcl
jo
add
ljmp
ret
ret
ret
ret
ret
ret
add
inc
inc
cmc
cmc
cmc
cmc
cmc
loopne
ljmp
sub
sub
adc
adc
add
add
mov
and
and
addl
cmc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
in
add
add
add
add
add
add
scas
add
leave
ss
add
add
ret
push
sbb
add
aaa
aaa
aaa
aaa
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
add
add
xlat
xlat
xlat
xlat
xlat
xlat
add
add
add
out
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
popa
popa
popa
popa
popa
add
add
add
add
adc
adc
add
add
add
and
and
and
and
and
incl
add
mov
add
lahf
lahf
add
add
add
add
cmp
test
add
add
add
mov
add
add
sbb
add
add
add
add
add
scas
add
add
add
or
or
popf
popf
popf
popf
popf
popf
popf
popf
popf
loope
loope
fs
add
add
add
xor
les
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sahf
sahf
out
out
mov
add
js
adc
adc
adc
adc
adc
adc
adc
rorb
dec
dec
aam
aam
aam
add
xor
xor
jl
xchg
cs
add
add
add
add
add
addr16
add
add
add
stos
stos
stos
stos
stos
stos
stos
imul
xorl
mov
add
add
cmp
add
les
out
out
out
out
out
out
out
add
add
xor
test
call
add
add
or
addb
add
loope
loope
loope
or
or
mov
add
add
add
adc
add
add
dec
dec
add
add
add
loop
xchg
xchg
xchg
xchg
xchg
popa
popa
addb
rol
rol
rol
rol
rol
mov
je
pop
lret
lret
lret
lret
lret
lret
add
add
cld
cld
cld
incl
add
add
add
add
add
add
pop
pop
pop
pop
jno
jno
push
add
add
add
addr16
ja
ja
ja
ja
cld
cld
cld
add
mov
add
add
ljmp
push
add
in
gs
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
aaa
aaa
aaa
aaa
aaa
mov
mov
mov
mov
mov
mov
add
add
dec
dec
dec
add
add
popf
popf
popf
popf
inc
inc
inc
inc
cwtl
cwtl
cwtl
cwtl
cwtl
sub
sub
sub
sub
cmp
stc
stc
cmp
icebp
icebp
icebp
add
mov
add
and
cmp
cmp
cmp
pop
pop
pop
push
in
in
out
out
out
out
out
out
out
out
out
out
out
out
out
add
jbe
test
add
add
add
add
xor
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
call
add
add
add
cs
push
arpl
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
fmull
add
add
add
out
add
add
add
and
add
add
out
out
out
out
out
out
out
out
and
and
add
add
add
cmp
cmp
jecxz
jecxz
add
or
addb
addb
mov
mov
mov
add
xchg
xchg
stc
outsl
adc
adc
add
add
add
xor
dec
dec
dec
dec
mov
mov
mov
rcl
rcl
rolb
add
add
add
add
push
loope
mov
fcmovnu
fcmovnu
fndisi(8087
add
add
jne
jne
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
add
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
stos
add
mov
xor
add
adc
adc
adc
aad
aad
mov
sbb
sbb
sbb
sbb
add
test
add
test
test
add
add
into
into
into
into
into
into
into
into
into
mov
xor
xor
xor
xor
xor
fstp
fstp
fstp
fstp
fstp
fldl
add
add
xchg
xchg
xchg
xchg
rcl
rcl
rolb
add
jno
popa
popa
popa
popa
popa
add
push
add
mov
mov
add
ljmp
ljmp
adc
add
add
mov
jmp
aam
jmp
inc
inc
add
add
mov
mov
and
and
jns
jns
hlt
hlt
xchg
xchg
xchg
xchg
mov
mov
jb
jb
jl
jl
daa
daa
sub
sub
add
add
add
jbe
loop
loop
xor
xor
xor
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
loope
loope
loope
add
leave
leave
leave
leave
leave
leave
daa
daa
daa
daa
daa
daa
daa
add
add
add
add
addl
xor
aas
jg
jg
jg
lret
lret
add
mov
mov
mov
out
add
add
movsb
movsb
movsb
movsb
movsb
movsb
test
fldl
add
ret
xchg
xchg
add
add
add
f2xm1
lock
add
div
div
div
div
faddl
sahf
or
or
or
push
push
push
push
push
push
push
push
push
push
push
addb
mov
add
add
div
clc
clc
clc
add
add
add
add
add
add
gs
xchg
xchg
xchg
xchg
scas
scas
scas
scas
scas
sbb
add
add
add
fcmovu
add
fld
add
add
add
and
and
add
push
add
add
add
add
adc
rcl
shll
inc
leave
add
lock
jge
jge
jge
mov
mov
add
add
int
pop
add
add
sldt
add
add
xlat
xlat
add
add
adc
adc
adc
adc
adc
pop
pop
pop
pop
jo
mov
ds
out
out
out
xchg
add
add
add
inc
mov
movb
test
test
test
popa
popa
popa
xor
jecxz
and
add
add
add
inc
inc
inc
inc
inc
and
and
and
ret
ret
ret
ret
ret
fs
leave
leave
add
add
into
into
into
into
into
scas
scas
scas
scas
mov
ss
add
pop
pop
pop
pop
movsb
movsb
movsb
movsb
movsb
add
add
add
loopne
loopne
loopne
jnp
add
add
in
in
add
add
add
notl
adc
dec
jbe
jbe
add
add
roll
add
add
add
add
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
xor
add
add
fs
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
rcl
insb
insb
scas
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
mov
add
add
popf
popf
test
test
add
add
add
fldl
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
insb
insb
movsb
movsb
movsb
movsb
call
call
movsl
mov
mov
test
imul
add
in
mov
mov
add
add
mov
sub
les
imul
imul
imul
add
add
add
cmc
cmc
bound
mov
mov
mov
add
add
push
test
sub
sub
lret
lret
lret
out
out
out
out
out
out
mov
add
add
add
jmp
test
test
test
test
ret
ret
add
fisttps
add
xchg
xchg
xchg
xchg
lea
lea
adc
add
add
push
push
push
push
push
jno
jno
pop
add
add
fcmovu
inc
inc
inc
inc
inc
add
add
add
add
add
push
push
push
push
push
add
rol
adc
incb
add
add
add
add
add
add
add
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
dec
dec
dec
dec
iret
iret
add
add
add
cmpsl
cmpsl
mov
mov
cmp
add
add
sub
add
add
adc
add
inc
inc
inc
inc
inc
addl
addl
add
add
insl
insl
xor
fs
call
test
add
add
add
add
mov
add
jl
jl
jmp
xchg
xchg
add
sbb
sbb
adc
add
add
add
outsb
fcmovu
fcmovu
adc
adc
add
add
add
jle
jle
add
and
add
add
incl
add
sub
and
add
mov
mov
mov
mov
add
push
push
addl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
ret
and
inc
inc
sbb
sbb
add
xor
xor
xor
add
add
std
std
std
add
jns
add
cs
push
push
push
push
incl
add
add
add
add
add
add
add
sbb
sbb
sbb
add
add
cld
cld
add
add
add
push
push
push
add
sub
add
add
xlat
xlat
jge
jge
jge
mov
mov
push
push
push
push
push
push
add
xchg
xchg
xchg
xchg
xchg
mov
add
sahf
sahf
sahf
sahf
sahf
add
add
push
cmp
cmp
les
push
out
out
out
out
addl
in
in
ds
dec
dec
dec
dec
dec
push
push
push
add
out
out
out
push
push
push
push
push
push
push
push
cltd
add
push
push
push
push
push
push
push
push
push
push
add
add
add
in
in
lret
add
xor
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
stos
stos
out
out
add
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
jnp
and
pop
pop
pop
inc
pushf
pushf
pushf
aaa
mov
and
and
repnz
repnz
jp
push
jecxz
jecxz
add
add
add
dec
dec
dec
dec
dec
dec
or
or
or
or
add
add
jp
out
out
add
add
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
add
add
pop
pop
dec
add
cmp
cmp
add
cmp
cmp
cmp
inc
ja
add
add
jmp
jmp
adc
adc
jo
jo
je
lahf
add
add
leave
leave
leave
leave
leave
leave
in
in
in
in
in
in
loop
loop
push
add
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
mov
pop
pop
add
pop
pop
pop
pop
add
add
out
out
out
cmp
sub
inc
inc
inc
jge
jge
jge
jge
mov
loop
les
and
add
sbb
jb
mov
rcl
sarb
aad
xor
xor
xor
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
and
sub
sub
sub
sub
sub
sub
repnz
add
add
out
out
out
out
out
out
push
push
push
push
push
push
es
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
lea
imul
mov
sahf
sahf
sahf
sahf
sahf
sahf
addr16
pop
pop
pop
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
lret
add
lods
lods
lods
jp
jp
mov
arpl
pop
pop
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
arpl
ficoml
jbe
jbe
mov
sbb
dec
dec
dec
dec
ss
jnp
jnp
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
jns
jns
rsm
stos
add
sti
mov
add
add
in
in
xor
xor
and
and
and
and
and
and
add
add
add
push
push
push
push
push
push
push
add
add
add
add
xlat
xlat
xlat
mov
mov
add
mov
add
dec
dec
dec
add
or
or
or
mov
mov
mov
orl
add
cmp
cmp
cmp
cmp
cmp
add
add
jbe
cmp
cmp
cmp
adc
jo
flds
add
add
add
push
push
push
push
push
sbb
sbb
sbb
mov
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
add
add
add
cmc
cmc
cmc
xchg
xchg
xchg
xchg
add
cmp
cmp
or
add
add
add
push
push
push
add
add
add
and
and
and
and
and
and
and
and
and
and
and
xchg
add
aam
add
lock
xchg
add
out
out
bound
add
jmp
mov
mov
add
add
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
sub
lret
lret
lret
add
or
popf
popf
popf
popf
popf
popf
popf
fsts
adc
adc
cwtl
add
add
shlb
xor
xor
xor
xor
xor
add
pop
pop
add
aad
aad
aad
aad
sahf
sahf
sahf
sahf
sahf
push
add
add
add
icebp
icebp
icebp
add
mov
add
add
add
xchg
xchg
xchg
xchg
add
or
add
add
add
jns
jns
sub
and
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
add
cmp
cmp
cmp
jp
jp
jp
jp
add
lret
lret
add
add
data16
add
jno
jno
jno
jno
add
add
or
or
or
or
add
add
out
or
or
repnz
add
add
add
daa
daa
daa
leave
push
push
push
push
push
push
push
push
push
push
push
push
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
fldl
in
add
js
js
js
pop
pop
add
add
jle
jle
jle
jle
add
cs
add
sbb
mov
add
add
push
add
iret
mov
mov
cmp
xchg
add
add
add
and
push
mov
mov
daa
daa
daa
imul
imul
mov
mov
mov
fcomp
fcomp
fcomp
fdivs
jne
jne
jne
fstp
fstp
fstp
pop
pop
pop
pop
pop
pop
loope
and
addb
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
out
add
ret
ret
ret
and
and
and
and
push
add
filds
add
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
add
add
add
inc
add
dec
dec
dec
dec
add
loopne
loopne
loopne
loopne
fcomp
sub
dec
repnz
sti
sti
pop
pop
pop
pop
pop
push
push
or
or
or
or
or
add
pop
pop
pop
pop
mov
cmp
add
inc
inc
inc
inc
inc
inc
aad
aad
aad
aad
cmc
mov
add
add
pop
pop
pop
pop
pop
pop
pop
daa
daa
pop
add
mov
add
add
add
popf
popf
popf
popf
popf
add
rol
rol
nop
add
add
add
fstp
fstp
fnsave
add
lock
add
adc
add
add
add
inc
inc
inc
sub
add
add
mov
adc
or
or
or
add
add
add
imul
rcrb
push
addb
addb
or
or
addl
pop
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
and
and
dec
ljmp
repz
add
add
add
repnz
loope
loope
loope
jg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
jmp
jmp
jmp
jmp
jmp
jmp
aas
aas
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
popf
popf
popf
popf
add
aam
inc
inc
mov
mov
mov
mov
add
add
add
into
into
into
into
mov
lcall
xchg
xchg
jns
loope
loope
loope
loope
loope
add
add
cltd
add
add
or
or
or
or
pop
pop
pop
out
out
out
out
out
add
add
fimuls
push
addl
addl
add
add
leave
leave
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
add
add
out
out
out
and
and
pusha
pusha
pusha
pusha
pusha
rol
mov
add
add
pop
pop
pop
pop
add
add
mov
adc
add
add
add
add
repnz
push
push
push
dec
dec
dec
add
add
add
in
inc
inc
inc
inc
inc
add
sbb
sbb
xor
in
in
in
in
add
add
sbb
add
add
gs
cld
cld
cld
cld
add
add
jp
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
cmp
cmp
inc
push
push
push
push
push
push
push
push
cmp
cmp
cmp
data16
jne
jne
hlt
hlt
hlt
hlt
add
add
add
add
add
add
pop
pop
inc
inc
inc
inc
inc
inc
add
add
dec
dec
dec
dec
dec
add
add
incl
add
insl
insl
insl
insl
insl
insl
insl
add
mov
add
sbb
sbb
sbb
add
add
add
add
add
add
add
add
jp
jp
jp
jp
jp
jp
add
add
div
idivl
cmp
xor
xor
je
je
je
je
inc
inc
inc
inc
inc
inc
add
add
add
dec
dec
dec
dec
dec
dec
dec
add
add
jbe
jbe
mov
mov
jo
jo
sub
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
push
push
push
push
push
push
push
push
push
push
stos
stos
add
dec
add
fstp
fstl
adc
adc
pop
fs
inc
je
je
add
xor
add
add
add
add
aad
aad
and
add
add
add
add
sbb
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
add
fstp
mov
je
je
add
mov
add
add
incb
add
adc
adc
adc
adc
jnp
add
add
add
sub
sub
sub
sub
or
add
add
add
add
aas
aas
push
rol
rol
rol
jecxz
xchg
jo
jo
jo
jo
jo
jo
jo
jl
jl
jl
jl
add
jl
rcl
shl
loope
loope
loope
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
mov
add
add
push
push
push
push
push
push
push
push
mov
mov
mov
ss
or
or
add
cmc
sub
test
test
int3
int3
mov
mov
mov
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
into
add
fstp
fstp
fstp
fstp
fstp
fnstsw
inc
inc
inc
inc
add
pop
pop
pop
pop
pop
cmc
lds
add
and
push
push
push
push
push
add
add
add
inc
inc
inc
inc
inc
inc
inc
lods
lods
lods
lods
lods
lods
lods
jp
fwait
fwait
mov
add
add
sti
mov
mov
mov
adc
adc
adc
adc
adc
adc
adc
add
leave
leave
cmc
cmc
cmc
cmc
cmc
add
add
dec
arpl
add
iret
iret
add
dec
dec
dec
dec
dec
dec
adc
adc
add
addr16
rol
rol
rol
rol
rol
add
add
add
add
imul
xchg
add
pop
repz
add
add
in
add
or
sub
rol
rolb
add
add
add
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
je
je
je
je
je
je
je
je
je
je
mov
add
add
je
je
je
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jns
jns
jns
jns
push
push
push
push
push
push
push
push
push
push
push
push
arpl
adc
adc
fcmovnu
arpl
add
ja
ja
ja
ja
ja
ja
test
test
add
jmp
add
aam
aam
aam
add
out
out
out
add
stos
stos
stos
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
loopne
loopne
pop
pop
pop
pop
pop
add
arpl
arpl
arpl
arpl
push
add
gs
add
add
add
add
add
xchg
add
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
incl
addb
dec
dec
add
add
add
addb
loopne
add
add
cmp
cmp
add
add
add
add
add
ja
add
fcmovnu
fcmovnu
test
test
test
test
add
aad
push
push
push
add
add
add
add
add
jo
ljmp
arpl
arpl
arpl
arpl
arpl
mov
mov
repz
add
add
in
in
add
add
add
add
push
push
push
push
push
sbb
sbb
sbb
iret
iret
iret
iret
adc
pop
pop
pop
pop
pop
pop
pop
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
data16
enter
enter
enter
add
add
add
add
add
add
add
add
into
into
into
into
into
into
into
into
into
into
into
into
into
add
addb
test
add
add
xor
lods
add
ljmp
add
add
add
add
push
add
div
add
int3
add
add
add
add
add
jne
cs
cs
mov
xchg
xchg
xor
xor
xor
xor
xor
add
jnp
jnp
jnp
jnp
jnp
push
push
push
push
push
push
das
das
jecxz
add
add
fildl
add
add
add
ds
dec
dec
add
add
add
dec
dec
dec
sub
add
lea
add
out
out
add
pop
jle
jle
jle
xorb
and
and
mov
sub
add
cmp
mov
mov
add
add
sub
fstp
fstp
dec
dec
dec
dec
dec
add
add
add
add
mov
loopne
loopne
mov
mov
mov
mov
mov
mov
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
add
add
add
rcl
rcl
rcl
rcl
jge
jge
add
int
rolb
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jo
jo
xor
xor
xor
add
ret
pop
mov
add
xor
xor
sbb
sbb
sahf
sahf
repnz
add
add
insb
add
and
and
and
and
test
add
enter
jno
jno
repz
add
add
add
add
mov
sti
lock
nop
nop
stos
stos
stos
stos
stos
jecxz
jecxz
jecxz
add
add
add
add
add
add
add
add
stc
stc
stc
stc
stc
stc
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
aad
dec
ss
jecxz
jecxz
jecxz
jecxz
jecxz
inc
add
add
add
add
add
add
jnp
add
xor
xor
add
add
add
mov
rcll
in
in
in
in
in
in
leave
leave
aas
aas
ss
add
jbe
jbe
add
jns
fcmovnu
fcmovnu
fcmovnu
fcmovnu
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
add
push
push
push
push
push
push
add
out
out
out
out
out
out
sbb
sbb
sbb
bound
add
and
mov
mov
mov
out
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
jl
jl
jl
add
add
pop
pop
pop
loop
push
push
push
push
push
push
push
push
push
push
push
push
sysexit
xor
add
push
pop
add
add
add
add
add
xor
add
add
add
add
fs
add
js
js
add
out
sahf
jno
les
andb
movntq
mov
popf
addr16
or
pusha
adc
insb
ja
xchg
push
iret
jecxz
and
add
scas
pusha
inc
sqrtps
xor
push
inc
mov
inc
sub
push
and
stos
repz
mov
jl
xor
loopne
mov
sbb
mov
rolb
inc
add
or
mov
push
adc
mov
and
inc
xor
pusha
inc
mov
icebp
fdivp
inc
mov
sbb
mov
in
xor
sub
mov
mov
push
dec
imul
pop
push
inc
pusha
xorl
and
cmp
mov
mov
std
cltd
out
push
jmp
fldl
lods
mov
mov
int
adc
js
inc
mov
inc
cwtl
sahf
adc
adc
and
outsl
mov
xchg
lahf
in
and
add
pusha
jnp
mov
sub
test
mov
pusha
add
into
loope
xor
push
sub
loop
xor
in
stc
fbld
je
pusha
sbb
push
pusha
pusha
xchg
cmc
xor
daa
cmc
or
sbb
out
cmp
inc
addb
jmp
or
movsb
andb
and
int
test
sarb
shlb
jbe
mov
mov
and
mov
push
shlb
les
imul
jo
pusha
pusha
pop
push
sub
xchg
icebp
pop
pop
adc
xor
mov
xor
lcall
xchg
stos
clc
mov
mov
shlb
js
les
andb
add
loop
add
xchg
bound
and
and
movsb
and
ret
push
sub
rcll
mov
pusha
inc
jno
mov
dec
std
out
popa
jl
add
cmp
mov
mov
xor
aaa
out
xor
data16
and
add
loopne
ds
sbb
pusha
and
and
sub
add
push
xchg
add
pusha
fadds
jo
sub
inc
pop
adc
mov
mov
and
push
ret
or
pusha
sbb
in
test
mov
mov
sbb
cmp
test
xchg
push
inc
pusha
fs
mov
fstp
and
ret
pop
xchg
pop
xchg
je
mov
and
les
push
and
mov
int
loopne
enter
add
shlb
sbb
or
rcrb
shl
ss
cli
inc
fstps
ficomps
loope
loopne
scas
loopne
sub
pop
inc
je
or
cmp
enter
out
shlb
dec
addr16
movsb
and
fcompl
xchg
icebp
push
sub
pop
push
pop
inc
sbb
add
or
xchg
cs
inc
fildl
mov
shr
fmuls
in
sub
pusha
xchg
pop
or
ss
stc
sbb
xor
sub
imul
in
and
inc
pop
mov
iret
fadds
dec
jl
lret
mov
rcrb
add
push
mov
sub
inc
cmpsb
add
cli
sub
inc
sarl
push
ja
addb
mov
cmc
adc
inc
in
jns
rorl
or
xchg
adc
fstl
push
out
movsb
inc
inc
repnz
and
add
xchg
pusha
rorb
aad
clc
ljmp
mov
push
inc
mov
push
add
pusha
ja
add
ds
ret
roll
shrl
popa
jg
insb
add
loopne
clc
hlt
mov
loopne
fidivl
and
inc
scas
shlb
aam
or
mov
gs
xchg
jmp
stos
mov
fwait
push
and
mov
mov
or
and
jg
test
sub
shl
gs
sbb
sarb
int3
xchg
xor
notl
mov
fisubrs
dec
test
mov
insl
mov
fiaddl
inc
xor
js
enter
dec
push
outsb
fucom
gs
xor
addb
inc
adc
jecxz
xchg
aas
aas
fadds
adc
xor
push
rcrl
lea
and
aas
imul
andb
daa
loop
in
loopne
xchg
fs
push
mov
push
data16
popa
jecxz
xor
inc
and
dec
pusha
insl
shlb
inc
push
jbe
lea
jmp
sbb
jp
les
and
sub
inc
adc
inc
ljmp
outsl
andb
pusha
add
mov
mov
pop
sahf
dec
stos
dec
adc
andb
sub
rcrb
mov
mov
addb
or
pushf
xor
or
pop
outsb
out
icebp
inc
cmp
out
out
mov
inc
xor
and
add
adc
dec
and
loopne
jle
jp
in
dec
push
or
push
loope
and
jg
adc
mov
push
sahf
dec
in
inc
pop
xor
into
sbb
add
shl
and
pushf
mov
mov
ret
popa
jl
mov
repnz
mov
add
in
cmp
stc
add
pop
clc
cmp
jae
out
mov
xor
into
pop
arpl
mov
pop
aam
push
cld
test
mov
xchg
je
rolb
std
and
xchg
outsb
adc
cmp
add
and
mov
pushf
sub
jg
sbb
mov
inc
icebp
xchg
in
adc
pusha
rolb
stos
add
enter
ljmp
inc
pop
lods
andb
sub
in
adcl
mov
adc
dec
or
pusha
or
sbb
push
add
jecxz
pushf
xor
insl
add
rol
mov
add
mov
jno
mov
insl
push
xor
mov
enter
sbb
jecxz
addb
std
in
push
sub
mov
addb
out
sbb
test
jae
fstl
adc
sub
rorl
fisubrs
orb
lea
es
push
repz
repnz
mov
mov
out
int
addl
shlb
ret
add
mov
rcll
xchg
je
xchg
cmpsb
and
jne
add
sarb
je
push
addb
adc
xchg
movsl
sub
iret
sub
mov
or
loopne
shrb
mov
arpl
and
and
dec
lahf
lahf
xchg
add
mov
sbb
test
cmp
xchg
imul
jno
pusha
and
aaa
in
push
fidivrl
andb
xlat
sti
inc
xor
imul
add
aad
xor
loopne
repnz
mov
loopne
enter
jl
add
fistps
dec
les
or
pusha
jae
dec
lcall
xor
dec
add
shlb
inc
pop
rcl
inc
and
hlt
add
and
aam
or
mov
xor
cmp
xor
mov
xor
or
pop
xor
cmp
add
inc
das
xor
cmc
stc
pushf
pop
pop
jnp
lret
mov
ret
sar
sub
or
sbb
xlat
es
cmp
movsb
pusha
pusha
sub
and
xor
je
pop
xor
test
pusha
push
and
cwtl
sbb
loopne
mov
dec
adc
lahf
pop
aaa
outsb
add
sarb
out
mov
xor
dec
aaa
mov
or
inc
insl
jmp
and
cmp
adc
and
and
sbb
push
mov
inc
push
daa
or
sbb
cmpsl
add
and
pop
inc
aam
movsl
push
cmc
fwait
test
mov
rorb
mov
icebp
cmp
ja
pusha
or
jmp
and
cmpsb
loopne
xchg
add
mov
dec
stc
cli
cmp
and
loopne
std
fsubrp
stos
andb
push
xchg
mov
add
jl
jb
xchg
mov
int
pop
adc
adc
cmp
pusha
shlb
je
lret
bound
cmp
fwait
push
mov
push
outsl
ret
leave
mov
cmc
push
add
inc
inc
push
rolb
add
lcall
and
dec
andb
test
aaa
cltd
fsubrs
jg
aas
xchg
dec
arpl
mov
addb
out
push
push
sub
mov
cmp
clc
xchg
inc
lahf
add
fucomi
lock
add
push
xchg
fucomi
inc
sub
pusha
push
ljmp
xchg
push
rcrb
popa
mov
inc
or
fisubrs
pop
fdiv
lods
inc
add
sub
lret
push
and
leave
push
addb
and
inc
add
insl
out
in
mov
dec
dec
cmc
inc
or
mov
andb
push
psubb
xchg
test
lret
das
mov
daa
sahf
xchg
mull
inc
mov
sub
rclb
insl
out
aam
out
stc
and
loop
fwait
ja
xchg
sar
mov
bound
mov
jne
xchg
jno
dec
sub
inc
daa
xor
mov
push
daa
jmp
shr
jb
int3
bound
aam
andb
jb
mov
lods
shl
push
lock
pusha
or
add
jo
rol
outsb
ljmp
out
inc
lock
daa
lret
lret
das
notb
orl
andb
and
xchg
loope
and
loopne
in
inc
xchg
jns
inc
imul
jmp
jo
push
and
addb
and
enter
fidivrl
jmp
xchg
mov
orb
and
adc
mov
xor
push
mov
inc
add
mov
dec
sbb
xchg
cmp
add
add
les
shlb
je
xchg
and
mov
scas
add
repnz
shll
in
xor
dec
xor
shrl
pop
ss
xchg
inc
aam
jl
std
fwait
jnp
or
inc
pop
and
dec
movsl
jl
imul
addb
lret
adc
es
orb
add
push
pop
sub
outsb
pop
pop
cmpsl
push
movsl
inc
xor
cltd
je
pusha
mov
out
inc
sahf
sbb
aas
mov
bound
in
cmp
and
addb
je
loopne
jno
add
add
movl
jne
fdivrs
ljmp
pop
or
loop
and
push
xchg
inc
mov
mov
xchg
mov
ljmpw
inc
mov
daa
gs
fsts
push
cmp
iret
add
inc
or
pushf
shrl
mov
push
and
rcrl
mov
push
add
push
push
cwtl
mov
lods
inc
add
inc
inc
sub
and
scas
add
add
inc
push
add
loopne
outsb
in
inc
xor
inc
adc
jnp
cmp
cmp
mov
inc
and
and
mov
scas
inc
fwait
aaa
aam
dec
pushl
rcl
ds
inc
enter
and
daa
dec
add
xchg
push
aaa
sahf
mov
aaa
pop
dec
out
pop
xchg
loopne
les
add
loopne
jle
fcmove
dec
scas
lea
mov
out
mov
sub
loopne
in
pop
imul
pop
arpl
add
loopne
xchg
inc
das
inc
jge
or
jnp
rolb
cmpsb
add
mov
sarb
cmpsb
and
std
cltd
out
fwait
clc
cmp
pop
test
mov
div
sub
int
mov
push
enter
fildll
add
push
aaa
icebp
sub
loope
jns
std
sbb
lret
and
xchg
xor
cmp
cmp
daa
push
and
sarb
aam
jbe
adc
loope
dec
stc
mov
ss
add
pusha
adc
icebp
add
push
into
cmc
nop
xchg
sahf
loopne,pn
push
andb
scas
mov
mov
xor
mov
adc
inc
xchg
out
out
mov
mov
or
push
mov
shlb
shlb
cmp
sbb
and
pop
jmp
dec
imulb
psadbw
or
inc
mov
mov
std
add
loopne
cwtl
enter
loopne
push
push
mov
out
xor
notl
add
fildl
adc
pusha
and
push
or
loop
push
das
imul
sbb
cmp
dec
mov
aaa
jno
pop
in
and
inc
xor
mov
dec
mul
xlat
data16
mov
add
pop
imul
iret
clc
xchg
push
std
add
and
shlb
mov
inc
dec
call
xor
sub
push
xchg
xor
je
sti
fcmovb
jmp
and
jmp
setle
push
loopne
les
addb
add
xchg
sub
jne
sarl
mov
mov
adc
mov
pop
adc
inc
add
fsubrl
cmp
aam
ljmp
sahf
dec
mov
jb
and
ss
inc
andb
bound
rcl
pop
fwait
and
mov
inc
pusha
and
jae
cmp
aad
andb
cmpsl
cmp
out
add
adc
or
inc
loopne
das
das
pop
lahf
in
push
mov
lea
mov
xor
mov
loopne
pop
ficomps
imul
dec
mov
inc
out
sti
insl
xchg
jns
inc
ljmp
fists
loopne
in
shlb
pop
ds
pusha
xchg
sahf
mov
pop
pop
jo
inc
pop
nop
cmpsl
pushf
mov
fnstenv
shlb
jmp
fwait
mov
pusha
mov
and
mov
js
fwait
movsb
add
jge
lea
movsl
inc
lds
sti
popf
inc
arpl
sbb
ret
or
icebp
test
dec
loop
outsl
jecxz
mov
inc
sbb
int
jnp
dec
fistpll
in
pop
jg
xchg
push
repnz
loopne
lds
adc
and
dec
insl
cld
or
add
xchg
lret
xchg
and
mov
mov
and
jne
arpl
inc
xlat
mov
sub
pop
psadbw
cmpb
pusha
cmp
stos
je
xchg
mov
dec
jl
and
cmp
dec
push
rol
and
mov
mov
shlb
call
js
push
cmc
into
mov
test
mov
test
adcb
jns
out
loopne
jno
outsb
mov
inc
xchg
jp
push
stos
pusha
rcr
mov
daa
sbb
adc
fs
or
mov
aad
cmp
push
add
mov
or
mov
in
dec
cmpsb
inc
inc
mov
pusha
shll
ja
xor
fwait
out
push
cmp
and
lods
adc
sbb
pop
test
pusha
pushl
imul
mov
and
loope
mov
aas
mov
lods
and
scas
aad
cmp
popf
cmp
loopne
in
jg
add
sbb
cmpsb
and
lret
and
out
jg
add
rcrb
inc
add
cmpb
sub
cmp
or
jecxz
shl
scas
mov
or
inc
xchg
fisttpl
sbb
lods
and
frstor
or
call
int3
fimull
mov
and
pop
es
pusha
push
mov
ja
pandn
dec
aas
jnp
call
dec
jo
das
xchg
inc
inc
push
andb
sbb
xlat
adc
xchg
mov
add
adc
mov
cmp
enter
push
inc
and
cmp
shlb
movsl
inc
inc
cwtl
sti
outsb
lock
jns
popa
in
std
addb
cmpsl
repz
cld
pop
and
and
pop
test
sbb
mov
push
jmp
popa
or
sti
daa
xor
loopne
mov
add
imul
mov
push
pop
ret
pop
push
addb
xchg
lds
and
loopne
mov
das
enter
loop
loopne
push
dec
scas
xlat
jg
and
cwtl
mov
xchg
xchg
cmp
sbb
xor
loopne
aas
inc
std
cmp
jnp
jle
cmp
cmp
cmp
aaa
cmpl
loope
test
mov
out
jecxz
mov
into
mov
andb
sbb
inc
mov
push
mov
xlat
sbb
loopne
adc
sbb
fs
xchg
add
and
lahf
cs
adcb
lods
andb
pusha
rclb
push
and
sbb
dec
in
mov
sub
add
jae
loopne
and
loopne
pop
xchg
stos
shlb
mov
out
stc
aam
das
cs
lret
and
xor
push
cwtl
fsubl
lret
pushl
negb
mov
lock
add
fnstenv
fsts
lret
fwait
in
add
jecxz
mov
mov
cmpsb
loopne
sub
xor
jle
dec
xchg
and
xor
clc
hlt
bound
jbe
and
adc
inc
pusha
dec
xor
mov
shr
loopne
fistpll
pop
in
loopnew,pn
enter
xchg
loope
mov
mov
fdivl
add
idivb
xor
and
movsl
mov
cmp
gs
call
adc
insb
imul
mov
sub
add
add
inc
mov
add
mov
dec
int3
push
xor
xlat
imul
aas
cli
aam
addb
hlt
jae
adc
js
cmp
mov
test
mov
and
enter
xchg
gs
dec
xchg
dec
xor
enter
and
inc
pusha
fsubs
aad
daa
jno
mov
and
ja
mov
pusha
pop
in
jno
jbe
push
loopne
ret
sub
pop
movsl
push
mov
push
cld
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
cmp
jne
cld
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
cs
shl
int3
neg
cltd
lret
cld
daa
xchg
jo
mov
add
iret
push
shll
or
addr16
mov
into
mov
dec
test
pop
add
into
dec
lret
adc
add
xor
dec
mov
vmovaps
pusha
movsl
pop
and
in
ret
sub
pusha
jecxz
fdivrs
cmp
div
sti
pop
aad
mov
xchg
lods
add
cmp
push
jecxz
or
push
jp
shrl
and
and
test
inc
mov
les
xchg
repz
outsl
mov
loopne
dec
lods
xor
add
inc
sbb
and
sub
pop
cmpsl
cld
jbe
jg
fs
aad
mov
or
and
inc
cmp
rclb
or
jp
inc
call
loopne
in
mov
push
pusha
scas
pusha
inc
xchg
add
test
inc
push
loopne
inc
lahf
les
dec
push
scas
mov
popf
inc
jns
mov
inc
mov
inc
jb
mov
mov
addb
jle
jp
out
movl
aam
rolb
sub
loopne
xlat
fstps
and
repz
outsl
loope
mov
loope
or
cld
loopne
lret
adc
inc
mov
andb
jne
pusha
shlb
jl
fcmovu
cmp
mov
xchg
jo
mov
dec
mov
fmull
add
pop
test
push
test
cmpsb
mov
and
inc
sahf
sbb
pop
aam
inc
out
cli
pop
sub
sbb
or
add
outsl
out
push
mov
jne
cs
loopne
test
addb
mov
addb
and
lock
and
into
sti
jmp
enter
jne
imull
dec
push
pop
sub
mov
mov
movsl
hlt
addr16
imul
das
fstpl
sub
loopne
sbb
and
mov
movsb
and
rorb
mov
loopne
ljmp
loopne
lret
inc
cmp
add
and
and
addb
aam
out
mov
rolb
mov
insb
sub
add
add
add
loopne
fnstenv
andb
mov
gs
out
aas
stos
popa
addr16
insl
sbb
outsl
test
and
ss
mov
mov
add
lcall
test
cmp
mov
ljmp
scas
das
push
jns
ljmp
pop
mov
rorb
enter
or
xchg
imul
dec
mov
aad
incl
mov
pusha
lock
rcr
dec
icebp
loope
mull
push
mov
mov
pusha
inc
cmp
push
lahf
sbb
rcrb
pop
push
addr16
nop
dec
shll
push
sub
js
mov
add
sub
cmp
addb
or
add
sub
push
and
mov
test
dec
jbe
or
mov
insb
pop
outsb
mov
sbb
or
inc
pop
int3
lret
lea
sbb
popf
or
inc
pop
fbstp
jns
pop
push
nop
mov
inc
jbe
add
mov
mov
and
stos
loopne
push
mov
fistpl
insl
cmpsb
add
xchg
pop
roll
mov
scas
pop
imulb
ret
xchg
nop
and
add
mov
scas
add
je
fisubrs
cmpsl
mov
or
in
mov
dec
addb
hlt
int3
xrelease
aaa
addr16
mov
cltd
andb
into
lock
shrb
hlt
and
adcb
cmpsb
shl
cmp
fs
xor
testb
xchg
push
cli
nop
pop
mov
cmp
shlb
lea
out
loopne
xor
cltd
push
push
jl
push
popf
push
rclb
add
push
pop
inc
loope
fdivr
xlat
out
xor
add
push
imul
out
sub
and
add
dec
std
jo
movsl
inc
stc
cmpsl
cmp
mov
loopne
leave
jge
andb
jae
andb
rol
sarl
std
add
mov
mov
sti
xchg
inc
jecxz
dec
lahf
in
cmp
add
sub
mov
and
and
pop
dec
sbb
lock
or
push
inc
mov
cmp
lods
add
and
mov
nop
add
out
mov
mov
test
fprem1
repnz
ja
inc
add
push
dec
popf
pop
pop
inc
loopne
call
ror
outsl
lods
fidivl
inc
rcrb
into
ret
mov
shrl
pop
cmpsb
add
arpl
push
mov
dec
jo
mov
xchg
ror
or
inc
xor
out
xchg
push
or
pushf
cmp
and
pop
mov
andb
sub
test
or
mov
ljmp
lods
rolb
inc
sub
and
add
and
mov
sbb
inc
loopne
inc
dec
psubq
fists
cmp
insb
cmp
adc
adc
movsb
inc
mov
loope
aad
mov
iret
xchg
repz
outsb
or
pusha
and
mov
out
mov
sub
shrb
mov
push
add
mov
fimull
pop
jle
mov
fimuls
leave
mov
jo
dec
jg
pusha
adcb
mov
add
lahf
fs
pop
push
test
add
out
sbb
sarb
stos
add
sbb
aam
leave
pop
cwtl
cmp
pusha
rolb
and
and
xchg
addb
mov
pusha
shlb
loopne
vmwrite
and
in
sbb
cmp
inc
rolb
sbb
loopne
mov
mov
add
imul
js
jl
mov
or
subb
and
pushf
mov
ljmp
add
or
test
mov
aas
lock
sub
movsl
aaa
add
jo
popa
xor
push
cmp
mov
int3
push
mov
mov
push
and
in
or
addb
loopne
enter
repz
call
leave
pop
call
loopne
outsl
out
xchg
lods
and
and
mov
jo
incl
pusha
inc
mov
pushf
sbb
push
sbb
ja
cmpsb
add
test
push
imulb
pusha
loopne
addb
and
andb
andb
fiaddl
pusha
shl
int
sahf
ljmp
sbb
cmp
pusha
mov
pop
outsb
add
je
repz
inc
xor
add
mov
test
xor
shll
push
loopne
test
add
out
cmp
inc
cwtl
movhps
loopne
xchg
mov
mov
and
loopne
add
cmp
icebp
push
hlt
push
mov
sub
push
xor
aad
and
fimull
cmpsb
addb
inc
mov
dec
arpl
sub
cmp
xchg
dec
mov
imul
ja
push
pop
das
aaa
push
sub
mov
scas
loopne
push
add
pusha
andb
mov
or
push
inc
orb
in
dec
inc
movsb
shlb
mov
dec
xchg
ret
fwait
pusha
cmp
sub
in
dec
cmp
lahf
test
jp
mov
loop
xchg
jns
xor
pusha
cmp
mov
addb
cmpsb
add
inc
pop
pushl
inc
push
and
mov
lods
bnd
sub
dec
cld
and
inc
lods
repnz
jge
and
add
add
cs
sarb
jo
add
cwtl
push
adc
orl
jecxz
dec
jmp
or
adc
ret
pop
xchg
ret
rolb
xor
pop
les
cmp
and
dec
cmc
scas
stos
das
pop
hlt
mov
cmp
lret
add
int3
mov
or
pusha
or
mov
ret
jge
mov
sbb
mov
mov
test
shlb
cmp
mov
inc
daa
call
repnz
pop
jmp
dec
daa
push
and
shrl
lds
shlb
add
sbb
out
shl
jle
daa
das
mov
loopne
adc
outsb
or
push
loopne
insl
inc
hlt
and
and
pop
dec
fdivl
cmpsl
push
mov
lea
dec
xlat
andb
pusha
and
fst
xchg
addb
clc
push
xchg
cmp
loopne
and
xor
test
cmpl
mov
rolb
daa
sbb
mov
fstpt
and
mov
aaa
mov
pop
or
mov
inc
inc
hlt
or
pusha
andb
dec
pop
ds
push
inc
addb
push
xor
push
sbb
xchg
jg
cmp
push
inc
inc
jne
adc
imull
and
push
mov
lds
sti
adc
shlb
fsubrp
loop
mov
add
xlat
into
lcall
jno
xchg
repz
xchg
fstpl
psraw
popa
adc
or
pushf
jmp
andb
mov
push
sti
imul
add
fiadds
mov
addr16
addb
mov
mov
mov
jge
sub
and
addr16
movsb
loopne
jns
xor
pop
leave
adc
adc
lock
push
icebp
mov
jo
add
pop
mov
rolb
cmp
stc
or
rcl
or
aad
loopne
pop
inc
js
push
lods
lcall
xchg
lcall
rolb
insl
iret
xor
addb
cmp
and
push
xchg
mov
lds
cli
mov
movb
repnz
jl
cltd
jnp
shlb
cmp
sub
mov
js
pusha
and
push
and
add
shlb
add
test
add
fdivrp
xchg
daa
iret
jne
test
and
movups
pop
inc
loopne
cld
push
xchg
push
psubsb
mov
mov
addb
clc
enter
addb
mov
addr16
jg
imul
and
cld
fucomp
das
push
jb
in
adc
rol
cmc
fsubrs
inc
pushf
mov
es
loopne
cmpl
addb
cwtl
or
into
fs
xor
inc
inc
cltd
jmp
xchg
fxch
int3
lret
rcrb
sbb
mov
shr
cmc
std
insb
in
sub
sbbb
psubq
jmp
dec
dec
imul
cmpsb
mov
adc
ss
insb
jnp
mov
pusha
mov
add
mov
gs
and
push
and
sub
push
mov
js
pop
je
push
xor
outsl
fsqrt
outsl
test
inc
fimuls
and
pop
push
xchg
mov
sbb
cmpsb
and
fsts
sbb
inc
aaa
movb
cmp
ret
roll
cmc
sti
aas
inc
cwtl
dec
mov
jne
sbb
loopne
popf
jle
fcoml
in
xor
and
or
inc
cld
popf
int
xchg
xchg
xor
xlat
movsl
add
add
pusha
aaa
xor
lea
rcll
xor
xchg
icebp
sbb
popa
out
pop
pop
adc
ret
cmp
out
jecxz
mov
lock
pop
push
pop
xor
lahf
cmpsb
pusha
loopne
cmpsb
andb
in
inc
je
mov
pusha
xchg
sbb
inc
adc
sahf
sub
and
repnz
mov
and
dec
into
jle
std
cmp
cld
into
mov
jl
pop
rcrl
fsubs
xchg
int
push
pop
aaa
add
and
cmpsl
sbb
in
ds
fisubl
inc
and
out
push
movsl
popf
fisubrs
cmp
pusha
inc
mov
mov
sbb
rorb
inc
shlb
and
add
int
pop
and
xor
popf
negl
mov
fmul
mov
mov
ret
pop
jns
inc
mov
push
loopne
inc
cmp
and
and
test
add
addb
lret
jg
inc
jp
fldenv
aaa
in
jmp
mov
add
add
and
sub
cmp
data16
rcrl
inc
loopne
dec
inc
mov
test
js
je
mov
arpl
mov
adc
cltd
push
ds
pop
out
loop
inc
andb
mov
rolb
inc
jo
cli
lods
out
test
and
ret
stc
push
xor
sub
cmp
ret
stos
data16
cld
clc
dec
out
cmc
jno
aam
popa
es
pusha
popa
out
push
sub
shrb
push
stos
loop
loopne
and
cwtl
add
add
les
in
gs
data16
popf
sub
shlb
leave
mov
ljmp
and
ror
adc
ret
rolb
mov
rol
xor
call
js
adc
mov
xchg
inc
stos
adc
out
xchg
sub
add
push
loop
push
bound
daa
js
xchg
cmova
mov
mov
insl
jne
in
jge
stos
add
aaa
loop
nop
dec
adc
adcb
test
dec
inc
or
add
adc
xor
insb
stos
shlb
inc
lret
sti
dec
ss
ret
sbb
cli
das
loopne
addb
jl
mov
push
out
or
mov
mov
push
in
arpl
adc
pushf
fsubs
jns
mov
add
decb
sbb
push
cltd
push
clc
mov
push
mov
ja
je
inc
jg
pop
mov
lods
pusha
rolb
sub
and
mov
ret
addr16
pop
sbb
call
cltd
mov
pop
mov
xchg
cmp
or
scas
add
sbb
add
push
mov
andb
addb
xchg
pusha
pop
push
clc
repnz
nop
cld
jae
testl
xchg
mov
add
repnz
nop
cld
jae
cli
jp
rcrl
insb
add
inc
lsl
nop
push
mov
leave
nop
jmp
add
add
and
sub
repnz
nop
cld
jae
xor
inc
jnp
and
push
and
sbb
mov
add
xchg
mov
clc
repnz
nop
cld
jae
xor
jbe
add
mov
repnz
nop
cld
jae
add
add
mov
xor
push
mov
xchg
ret
das
add
pop
pop
cli
add
nop
cld
jae
clc
add
jbe
add
lock
mov
clc
repnz
nop
cld
jae
add
add
and
add
repnz
nop
cld
jae
add
inc
add
push
clc
repnz
nop
cld
jae
xchg
add
jo
add
sub
pusha
aas
cmp
push
mov
xchg
ret
call
clc
addb
xor
clc
repnz
nop
cld
jae
inc
addb
or
nop
push
mov
leave
nop
jmp
decl
add
add
movzwl
nop
push
mov
leave
nop
jmp
xor
pop
cli
add
push
clc
repnz
nop
cld
jae
add
fidivs
add
push
push
mov
xchg
ret
lret
mov
incl
aam
inc
call
clc
repnz
nop
cld
jae
add
and
add
pop
clc
repnz
nop
cld
jae
add
sti
add
mov
ret
nop
push
mov
leave
nop
jmp
fiadds
lock
sbb
sub
loopne
pusha
inc
push
and
cmc
fwait
clc
repnz
nop
cld
jae
add
mov
add
jl
nop
push
mov
leave
nop
jmp
roll
add
push
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
rcr
add
add
stos
addr16
add
clc
testl
add
pusha
and
test
nop
push
mov
leave
nop
jmp
add
add
sbb
clc
repnz
nop
cld
jae
xor
inc
popf
push
clc
repnz
nop
cld
jae
add
xor
mov
jb
lea
nop
push
mov
leave
nop
jmp
xor
add
add
push
mov
leave
nop
jmp
fwait
add
inc
jns
xchg
push
stc
mov
clc
repnz
nop
cld
jae
loope
add
inc
add
pop
movsb
inc
rcrb
mov
xchg
ret
sarl
add
lret
add
push
mov
xchg
ret
add
add
xchg
add
add
nop
push
mov
leave
nop
jmp
add
push
add
fisttps
nop
cld
jae
stos
inc
xchg
pusha
sarb
inc
inc
dec
push
push
mov
xchg
ret
xor
add
lret
jmp
rclb
jmp
add
jb
in
setnp
repnz
nop
cld
jae
add
add
and
add
shlb
clc
repnz
nop
cld
jae
add
add
add
fildll
inc
push
dec
clc
repnz
nop
cld
jae
add
pop
cmp
repnz
nop
cld
jae
add
add
add
xchg
nop
nop
cld
jae
clc
add
lods
cmp
xchg
mov
add
nop
jmp
call
pop
nop
push
mov
leave
nop
jmp
add
aam
lock
add
loopne
or
inc
and
and
addb
sti
clc
repnz
nop
cld
jae
mov
pop
stos
add
and
andb
nop
push
mov
leave
nop
jmp
das
add
mov
mov
or
repnz
nop
cld
jae
xchg
pop
add
adc
add
push
mov
xchg
ret
jno
add
add
inc
pop
call
clc
repnz
nop
cld
jae
add
and
and
pusha
mov
push
push
mov
xchg
ret
pop
sub
add
and
mov
push
mov
xchg
ret
pop
add
add
adc
or
add
repnz
nop
cld
jae
jp
adc
nop
cltd
push
clc
repnz
nop
cld
jae
add
aaa
jnp
incl
add
mov
xchg
ret
sub
add
sbb
nop
lods
orl
xchg
ret
xor
add
add
sub
add
nop
push
mov
leave
nop
jmp
sbb
add
and
jmp
in
leave
nop
jmp
adc
add
adc
pusha
lods
lea
push
mov
xchg
ret
jp
inc
incl
pop
inc
movzwl
clc
repnz
nop
cld
jae
add
add
incl
add
repnz
nop
cld
jae
add
jno
push
clc
repnz
nop
cld
jae
mov
xor
xor
in
leave
nop
jmp
call
xor
add
push
mov
leave
nop
jmp
jns
cli
das
hlt
stos
mov
outsb
and
repnz
nop
cld
jae
add
stos
add
add
nop
cld
jae
add
pop
mov
cmp
push
inc
push
clc
repnz
nop
cld
jae
pop
jo
add
jns
add
fdivr
repnz
nop
cld
jae
loope
add
or
and
push
mov
leave
nop
jmp
and
mov
bound
inc
mov
add
nop
jmp
xor
xor
popa
clc
repnz
nop
cld
jae
add
inc
mull
add
jo
mov
clc
repnz
nop
cld
jae
add
cmp
adcb
jmp
nop
cld
jae
add
add
roll
into
les
push
mov
xchg
ret
add
inc
or
add
stos
fwait
clc
repnz
nop
cld
jae
mov
call
xor
loopne
pusha
loopne
dec
cmp
nop
push
mov
leave
nop
jmp
add
sar
repnz
nop
cld
jae
cmp
verw
add
stc
add
push
mov
xchg
ret
inc
add
add
add
pusha
mov
repz
mov
xchg
ret
mov
add
add
add
jns
add
add
add
jp
add
dec
stos
clc
repnz
nop
cld
jae
add
clc
dec
mov
clc
jmp
and
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
lock
pop
inc
lret
scas
add
lea
sar
repnz
nop
cld
jae
adc
add
add
call
push
mov
xchg
ret
add
add
add
or
or
repnz
nop
cld
jae
fiadds
inc
add
pop
mov
add
clc
repnz
nop
cld
jae
fimuls
add
nop
cld
jae
mov
lock
pop
dec
nop
push
mov
leave
nop
jmp
add
aam
xor
add
mov
push
clc
repnz
nop
cld
jae
or
lret
add
jmp
xor
sub
stos
sbb
add
roll
jbe
pop
clc
repnz
nop
cld
jae
add
add
sub
add
jmp
pushl
addr16
add
mov
xor
notl
nop
jmp
add
jno
loopne
sti
mov
push
mov
xchg
ret
inc
inc
mov
cli
jmp
push
clc
repnz
nop
cld
jae
inc
add
add
mov
nop
push
mov
leave
nop
jmp
orb
and
repz
push
mov
xchg
ret
add
add
jb
jnp
jb
jmp
nop
push
mov
leave
nop
jmp
das
pop
add
lock
cli
les
and
mov
clc
repnz
nop
cld
jae
mov
add
push
fwait
clc
repnz
nop
cld
jae
aam
add
pop
push
mov
xchg
ret
testl
clc
hlt
shl
enter
int
clc
repnz
nop
cld
jae
clc
das
xor
add
test
clc
repnz
nop
cld
jae
jmp
xchg
add
clc
repnz
nop
cld
jae
shl
addb
add
aam
fwait
clc
repnz
nop
cld
jae
jns
add
push
add
cmp
loopne
adc
imul
jmp
incl
fiadds
add
xor
or
sbb
add
pushf
xor
arpl
repnz
nop
cld
jae
xchg
mov
test
clc
repnz
nop
cld
jae
fwait
cmpsl
mov
clc
repnz
nop
cld
jae
aaa
add
add
jg
clc
repnz
nop
cld
jae
add
add
add
loop
clc
repnz
nop
cld
jae
cmp
int
pop
adc
lds
add
jns
add
clc
repnz
nop
cld
jae
mov
add
loop
xchg
jp
andb
nop
nop
cld
jae
sbb
and
add
add
clc
repnz
nop
cld
jae
add
add
test
xchg
xchg
nop
push
mov
leave
nop
jmp
xor
add
addr16
clc
repnz
nop
cld
jae
lock
sub
repnz
nop
cld
jae
adc
add
jmp
mov
xchg
ret
add
loop
stos
pop
jp
mov
repnz
nop
cld
jae
mov
add
addl
nop
cld
jae
clc
loope
lock
add
cli
add
nop
inc
add
pop
add
roll
push
es
jecxz
push
mov
leave
nop
jmp
add
add
sar
repnz
nop
cld
jae
hlt
add
add
push
call
clc
repnz
nop
cld
jae
jbe
dec
cli
mov
adcb
clc
repnz
nop
cld
jae
add
add
insb
cmp
push
clc
repnz
nop
cld
jae
lock
mov
dec
add
je
add
clc
repnz
nop
cld
jae
add
add
mov
call
clc
repnz
nop
cld
jae
hlt
add
add
add
clc
repnz
nop
cld
jae
add
add
add
push
and
nop
push
mov
leave
nop
jmp
inc
add
lea
clc
repnz
nop
cld
jae
sub
jo
add
shll
nop
nop
cld
jae
add
cmp
cmp
xor
pop
push
mov
xchg
ret
xor
add
fwait
lock
jns
jle
sub
nop
push
mov
leave
nop
jmp
add
jp
rcll
test
cmp
ret
clc
jno
add
incl
clc
repnz
nop
cld
jae
add
lock
movb
push
mov
leave
nop
jmp
push
jnp
add
add
lock
js
clc
repnz
nop
cld
jae
jbe
add
inc
call
leave
nop
jmp
add
add
push
push
mov
xchg
ret
xor
add
add
jno
add
enter
mov
push
mov
leave
nop
jmp
add
jmp
repnz
nop
cld
jae
testl
cmpb
cmpw
nop
push
mov
leave
nop
jmp
ficomps
mov
add
nop
push
mov
leave
nop
jmp
add
nop
pop
pop
mov
ss
pop
push
mov
xchg
ret
sbb
jb
addb
add
push
mov
add
imul
test
add
add
adc
int
push
clc
repnz
nop
cld
jae
add
jo
lret
add
add
nop
push
mov
leave
nop
jmp
add
add
rorb
ja
fs
repnz
nop
cld
jae
aam
add
add
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
add
fdivrp
cli
add
lret
clc
repnz
nop
cld
jae
incb
add
jno
cli
out
jne
clc
repnz
nop
cld
jae
call
push
clc
repnz
nop
cld
jae
add
sub
add
xor
int
sldt
add
jb
add
add
inc
clc
repnz
nop
cld
jae
sub
add
add
sub
add
clc
repnz
nop
cld
jae
add
nop
add
pop
add
scas
cli
clc
repnz
nop
cld
jae
add
add
or
jbe
nop
push
mov
leave
nop
jmp
sbb
mov
add
push
clc
repnz
nop
cld
jae
mov
mov
add
clc
repnz
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
sub
loop
add
das
sbb
sub
adc
nop
jmp
sbb
add
push
add
or
add
inc
stos
add
sbb
add
lea
mov
leave
nop
jmp
rorl
xchg
add
dec
rep
push
mov
xchg
ret
add
jns
sub
sbb
push
push
mov
xchg
ret
pop
mov
mov
add
addb
fistpl
push
mov
xchg
ret
add
add
add
jmp
call
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
add
and
add
clc
repnz
nop
cld
jae
add
or
jne
nop
push
mov
leave
nop
jmp
jmp
dec
pop
sub
loopne
add
clc
repnz
nop
cld
jae
pop
adcb
loope
add
pop
nop
push
mov
leave
nop
jmp
call
das
xchg
adc
pop
pusha
clc
repnz
nop
cld
jae
add
add
jmp
pop
clc
repnz
nop
cld
jae
inc
add
mov
jb
add
mov
fldl
nop
nop
cld
jae
jno
jo
loope
leave
push
push
mov
xchg
ret
add
dec
add
add
nop
jmp
mov
rorl
cmp
add
sbb
mov
cli
jmp
mov
clc
repnz
nop
cld
jae
sbb
add
aaa
jb
add
call
clc
repnz
nop
cld
jae
add
loop
cmp
pop
push
mov
xchg
ret
add
jo
jb
sbb
add
xor
clc
repnz
nop
cld
jae
adc
add
add
mov
clc
repnz
nop
cld
jae
add
inc
loope
and
inc
subb
push
mov
leave
nop
jmp
inc
clc
pop
add
cmp
push
mov
xchg
ret
cli
addb
add
jmp
jnp
sar
nop
nop
cld
jae
jp
adc
cli
add
pop
sub
shlb
repnz
nop
cld
jae
add
adc
add
and
clc
repnz
nop
cld
jae
add
add
cmp
mov
push
mov
xchg
ret
add
or
or
mov
xchg
ret
add
add
mov
mov
mov
push
mov
xchg
ret
xor
xor
add
cmpl
nop
push
mov
leave
nop
jmp
xor
add
add
push
clc
repnz
nop
cld
jae
add
add
mov
add
mov
clc
repnz
nop
cld
jae
sbb
testl
pop
clc
repnz
nop
cld
jae
call
cli
lret
add
add
nop
push
mov
leave
nop
jmp
add
mov
add
nop
cld
jae
add
mov
adc
inc
add
addb
nop
push
mov
leave
nop
jmp
add
add
cmp
add
scas
inc
mov
mov
leave
nop
jmp
adc
imull
sbb
add
add
clc
repnz
nop
cld
jae
add
lock
add
mov
nop
push
mov
leave
nop
jmp
sub
xor
sbb
inc
mov
ret
clc
repnz
nop
cld
jae
jno
mov
sbb
add
lret
movzwl
push
mov
xchg
ret
mov
jns
mov
nop
mov
scas
call
clc
repnz
nop
cld
jae
clc
add
sti
loop
add
mov
add
add
jno
add
stos
add
add
add
je
clc
repnz
nop
cld
jae
add
stos
out
jbe
clc
repnz
nop
cld
jae
add
add
add
push
xor
clc
repnz
nop
cld
jae
rcl
add
cli
stos
mov
mov
clc
repnz
nop
cld
jae
jns
add
addb
mov
mov
xchg
ret
add
sub
mov
roll
mov
leave
nop
jmp
add
xchg
add
repz
clc
repnz
nop
cld
jae
add
xor
sub
loop
cmp
inc
pop
push
mov
xchg
ret
incb
add
mov
dec
div
nop
push
mov
leave
nop
jmp
add
fwait
cli
add
es
pusha
loopne
add
clc
repnz
nop
cld
jae
aam
fwait
xchg
add
mov
clc
repnz
nop
cld
jae
mul
nop
jl
in
es
clc
repnz
nop
cld
jae
add
mov
leave
fld1
clc
repnz
nop
cld
jae
add
add
test
mov
clc
repnz
nop
cld
jae
bound
mov
pop
sbb
clc
repnz
nop
cld
jae
jnp
add
andb
push
mov
xchg
ret
xchg
inc
mov
push
clc
repnz
nop
cld
jae
stos
pushl
xor
jge
jg
clc
repnz
nop
cld
jae
xor
clc
incl
jmp
dec
cmp
repnz
nop
cld
jae
xchg
mov
call
cld
jae
add
cmp
mov
clc
repnz
nop
cld
jae
add
lea
nop
push
mov
leave
nop
jmp
mov
inc
jbe
or
inc
push
adc
clc
repnz
nop
cld
jae
add
sbb
jle
add
clc
repnz
nop
cld
jae
add
adc
pop
aam
xchg
push
mov
xchg
ret
add
mov
add
ss
not
clc
repnz
nop
cld
jae
lods
add
xorb
nop
nop
cld
jae
mov
add
sub
dec
je
clc
repnz
nop
cld
jae
mov
nop
push
mov
leave
nop
jmp
add
add
je
nop
push
mov
leave
nop
jmp
or
pmaxsw
mov
clc
repnz
nop
cld
jae
add
movsb
loopne
lods
pusha
nop
push
mov
leave
nop
jmp
inc
xor
jnp
enter
clc
repnz
nop
cld
jae
add
cli
inc
jno
add
imul
add
cmp
add
call
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
movsb
and
mov
outsl
loopne
push
mov
leave
nop
jmp
add
add
add
lahf
jb
clc
repnz
nop
cld
jae
add
mov
nop
nop
cld
jae
mov
add
jns
xchg
iret
add
push
mov
xchg
ret
pop
sub
add
jno
add
fwait
clc
repnz
nop
cld
jae
mov
jns
jb
jbe
mov
inc
push
nop
push
mov
leave
nop
jmp
add
jo
add
add
jp
mov
clc
repnz
nop
cld
jae
cmp
loopew
jmp
push
mov
xchg
ret
call
add
add
mov
nop
cld
jae
roll
add
add
mov
rorb
ret
loop
or
add
add
mov
xchg
ret
or
add
pusha
clc
repnz
nop
cld
jae
add
lods
add
stos
inc
add
mov
jae
repnz
nop
cld
jae
jno
add
cld
jmp
dec
dec
cmp
sti
inc
add
loop
sub
adcb
nop
nop
cld
jae
mov
add
add
rolb
enter
push
mov
xchg
ret
das
push
mul
bound
or
clc
repnz
nop
cld
jae
bound
cs
insb
clc
repnz
nop
cld
jae
pop
jb
aaa
lock
push
add
clc
repnz
nop
cld
jae
xor
jno,pt
push
mov
xchg
ret
and
add
add
xchg
lods
mov
fwait
clc
repnz
nop
cld
jae
shll
xor
add
adcb
jmp
lock
add
mov
lahf
mov
add
add
sbb
popa
clc
repnz
nop
cld
jae
lret
adc
lods
add
add
jne
clc
repnz
nop
cld
jae
incb
aam
mov
nop
push
mov
leave
nop
jmp
add
addb
push
loopne
dec
aas
clc
push
mov
xchg
ret
add
add
add
push
ds
fistpl
nop
push
mov
leave
nop
jmp
add
add
inc
pop
add
clc
repnz
nop
cld
jae
hlt
jmp
mov
jg
clc
repnz
nop
cld
jae
add
sub
xor
enter
movl
cmpl
incl
add
add
add
push
mov
hlt
test
add
add
mov
insb
inc
jb
clc
repnz
nop
cld
jae
add
pop
add
xor
push
mov
xchg
ret
dec
aam
mov
jo
loop
fstps
repnz
nop
cld
jae
add
lret
rcll
xchg
xchg
pusha
clc
repnz
nop
cld
jae
add
add
inc
call
les
push
mov
leave
nop
jmp
jb
jbe
lret
add
rep
clc
repnz
nop
cld
jae
mov
add
jmp
pop
add
lock
jns
add
add
add
outsl
add
push
mov
xchg
ret
aam
add
cmp
and
repnz
nop
cld
jae
loop
add
add
add
add
jne
nop
push
mov
leave
nop
jmp
call
clc
repnz
nop
cld
jae
add
loope
add
add
jne
clc
repnz
nop
cld
jae
add
push
cmp
add
std
xchg
nop
push
mov
leave
nop
jmp
add
add
add
add
mov
xchg
ret
add
decb
dec
test
inc
push
shlb
nop
cld
jae
add
add
addr16
clc
repnz
nop
cld
jae
inc
jmp
sub
addb
fistpl
clc
repnz
nop
cld
jae
inc
nop
add
xor
nop
add
shrb
inc
adcl
nop
nop
cld
jae
and
clc
add
sbb
inc
xchg
adc
nop
cld
jae
inc
add
lret
dec
incb
add
nop
push
mov
leave
nop
jmp
add
sbb
add
add
imul
nop
jmp
cli
hlt
clc
addr16
add
add
cmpl
nop
push
mov
leave
nop
jmp
jmp
sbb
add
nop
push
mov
leave
nop
jmp
cli
add
sti
sub
call
leave
nop
jmp
add
aaa
add
add
bound
push
push
mov
xchg
ret
nop
jmp
add
add
lods
push
mov
xchg
ret
add
add
push
xor
rorl
repnz
nop
cld
jae
add
ficoms
add
clc
repnz
nop
cld
jae
incb
add
sbb
add
clc
repnz
nop
cld
jae
xor
roll
repnz
nop
cld
jae
incl
add
sbb
popf
in
call
nop
jmp
mov
jl
push
cli
cwtl
rcr
clc
repnz
nop
cld
jae
jp
sbb
fwait
jns
push
stos
mov
clc
repnz
nop
cld
jae
xor
xchg
mov
push
mov
xchg
ret
clc
add
mov
add
add
dec
mov
push
mov
xchg
ret
add
pop
push
clc
repnz
nop
cld
jae
jmp
xor
mov
repnz
nop
cld
jae
or
add
add
lods
andb
add
repnz
nop
cld
jae
sub
push
inc
shlb
repz
add
repnz
nop
cld
jae
xor
pop
adc
add
repnz
nop
cld
jae
aaa
call
clc
repnz
nop
cld
jae
add
add
cmp
add
loop
inc
loopne
mov
nop
push
mov
leave
nop
jmp
xor
add
repnz
nop
cld
jae
addr16
aam
verw
je
clc
repnz
nop
cld
jae
add
jo
out
push
mov
lcall
add
cli
push
or
loopne
in
adc
add
add
add
xor
add
aam
cli
sbb
add
repnz
nop
cld
jae
jbe
inc
stos
loope
sub
addl
add
testl
add
clc
push
mov
xchg
ret
add
jno
add
xor
nop
nop
cld
jae
add
add
mov
add
cmc
xor
clc
repnz
nop
cld
jae
add
jnp
pop
add
jbe
cltd
mov
push
mov
xchg
ret
call
add
cwtl
pop
mov
clc
repnz
nop
cld
jae
add
xor
mov
inc
and
clc
repnz
nop
cld
jae
mov
push
clc
repnz
nop
cld
jae
jnp
add
clc
add
jp
dec
pop
jmp
incl
loope
xchg
loop
lock
lods
fwait
adc
inc
aam
out
mov
push
mov
xchg
ret
inc
xchg
hlt
add
call
cld
jae
cmovae
mov
dec
clc
dec
inc
nop
push
mov
leave
nop
jmp
jo
mov
push
addb
lahf
rep
clc
repnz
nop
cld
jae
sbb
xor
adc
loope
add
clc
repnz
nop
cld
jae
jmp
nop
pusha
add
mov
leave
nop
jmp
add
push
lods
jns
jg
loop
push
mov
leave
nop
jmp
lret
roll
aaa
clc
or
xchg
push
clc
repnz
nop
cld
jae
fiadds
adc
inc
add
bound
push
xor
test
movsb
push
mov
xchg
ret
jmp
addr16
out
push
inc
mov
push
mov
mov
xchg
ret
stos
aaa
bound
fiadds
ss
push
mov
leave
nop
jmp
das
idiv
sbb
testl
jg
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
xor
shl
sbbb
mov
xchg
ret
add
push
add
add
inc
sub
nop
nop
cld
jae
xor
add
mov
test
nop
nop
cld
jae
sub
call
push
push
clc
repnz
nop
cld
jae
jno
push
add
add
and
push
mov
xchg
ret
add
add
xchg
push
test
push
mov
xchg
ret
add
mov
stos
pop
cld
clc
repnz
nop
cld
jae
mov
stos
sti
inc
sbb
xor
jbe
clc
repnz
nop
cld
jae
sub
add
add
fnstsw
add
xor
lock
add
clc
repnz
nop
cld
jae
call
sub
movsb
add
lret
clc
repnz
nop
cld
jae
push
mov
jns
push
lods
add
nop
cld
jae
jbe
add
add
add
aas
pushl
clc
repnz
nop
cld
jae
shll
mov
hlt
xchg
push
je
clc
repnz
nop
cld
jae
adc
mov
add
clc
repnz
nop
cld
jae
rcl
inc
divl
mov
push
mov
xchg
ret
bound
mov
add
cli
mov
addb
pusha
pop
lea
push
mov
xchg
ret
add
add
shr
push
mov
xchg
ret
jo
jno
mov
push
jnp
clc
repnz
nop
cld
jae
andb
cli
xchg
aaa
popf
push
clc
repnz
nop
cld
jae
sbb
add
or
add
and
test
xchg
ret
add
jo
add
add
clc
repnz
nop
cld
jae
add
add
add
add
pop
xor
push
mov
xchg
ret
or
pop
testl
xorb
nop
cld
jae
add
jb
sti
add
addl
add
jp
add
add
addb
aas
add
clc
repnz
nop
cld
jae
sbb
mov
mov
push
mov
xchg
ret
divl
add
adc
add
add
repnz
nop
cld
jae
add
das
ret
push
clc
repnz
nop
cld
jae
lock
xchg
add
xchg
xor
fiadds
clc
repnz
nop
cld
jae
das
xchg
add
mov
lock
cld
nop
push
mov
leave
nop
jmp
mov
pop
add
xchg
loopne
jne
clc
repnz
nop
cld
jae
loop
add
add
sbb
ret
clc
repnz
nop
cld
jae
stos
pop
sbb
add
pop
cs
nop
push
mov
leave
nop
jmp
loope
add
xor
and
repnz
nop
cld
jae
add
sbbb
ja
les
repnz
nop
cld
jae
add
add
incl
jmp
sbb
clc
repnz
nop
cld
jae
jno
inc
or
mov
inc
mov
add
add
push
push
add
imul
cld
jae
add
add
xor
jb
pushl
aam
add
adc
push
add
pop
pushl
nop
push
mov
leave
nop
jmp
add
mov
push
and
push
clc
repnz
nop
cld
jae
add
add
stos
loopne
add
mov
xchg
ret
mov
divl
add
cmp
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
mov
add
add
add
push
mov
xchg
ret
jno
das
push
cmp
add
mov
mov
jmp
mov
xchg
ret
add
add
add
inc
test
add
test
repnz
nop
cld
jae
add
addl
fdivrp
pushl
add
or
rolb
inc
add
push
push
mov
xchg
ret
add
jbe
clc
fidivrs
add
mov
clc
repnz
nop
cld
jae
mov
add
loop
pop
push
mov
xchg
ret
add
add
or
add
shlb
pop
push
mov
xchg
ret
aam
inc
xchg
add
add
sbb
fwait
nop
push
mov
leave
nop
jmp
or
inc
add
outsl
push
mov
add
int
cmp
sti
clc
ret
add
mov
clc
repnz
nop
cld
jae
add
ss
add
nop
push
mov
leave
nop
jmp
cmp
inc
add
add
andb
repnz
nop
cld
jae
xor
sti
add
mov
clc
repnz
nop
cld
jae
sub
jb
add
push
fs
enter
pusha
mov
dec
pop
mov
clc
repnz
nop
cld
jae
inc
add
orb
lret
clc
repnz
nop
cld
jae
and
cmp
jne
push
mov
xchg
ret
add
lret
and
add
rcl
pop
push
mov
xchg
ret
jno
inc
xor
lods
dec
add
fsts
mov
xchg
ret
add
add
fisubs
add
nop
push
mov
leave
nop
jmp
adc
add
add
sar
repnz
nop
cld
jae
add
jmp
pop
add
nop
push
mov
leave
nop
jmp
xor
add
add
repnz
nop
cld
jae
dec
add
addr16
inc
add
repnz
nop
cld
jae
add
add
nop
push
mov
leave
nop
jmp
add
les
push
mov
xchg
ret
add
pop
jno
xor
add
or
test
in
clc
repnz
nop
cld
jae
xor
push
mov
xchg
ret
add
fwait
bound
mov
mov
push
push
mov
xchg
ret
add
cmp
add
add
mov
xchg
ret
mov
add
add
rorl
cmp
in
leave
nop
jmp
add
add
add
cmpsb
pusha
add
sti
clc
repnz
nop
cld
jae
add
sub
dec
push
mov
xchg
ret
add
cmovle
add
inc
add
adcl
add
nop
jmp
add
lret
mov
pop
into
jo
add
clc
repnz
nop
cld
jae
testl
nop
push
mov
leave
nop
jmp
add
clc
addr16
add
add
pop
clc
repnz
nop
cld
jae
add
rcrl
mov
leave
nop
jmp
inc
add
add
cli
add
mov
nop
nop
cld
jae
xchg
add
or
hlt
cli
scas
inc
inc
mov
nop
cld
jae
jnp
cli
add
add
pop
push
cwtl
and
shlb
jge
andl
nop
cld
jae
or
mov
repnz
nop
cld
jae
sbbb
add
shrb
add
clc
repnz
nop
cld
jae
xor
add
push
mov
sub
clc
repnz
nop
cld
jae
add
jmp
push
push
clc
repnz
nop
cld
jae
aaa
add
setp
nop
cld
jae
add
shl
add
sbb
cmp
mov
nop
push
mov
leave
nop
jmp
xchg
aaa
jb
add
js
pushl
push
mov
xchg
ret
or
das
and
mov
push
mov
xchg
ret
cmp
xchg
add
sbb
clc
repnz
nop
cld
jae
pop
xor
cmp
fld1
clc
repnz
nop
cld
jae
inc
add
jns
add
popa
or
clc
repnz
nop
cld
jae
add
add
pop
jo
xor
clc
repnz
nop
cld
jae
xchg
add
subl
clc
repnz
nop
cld
jae
aam
add
add
clc
repnz
nop
cld
jae
jns
roll
das
bound
xor
clc
repnz
nop
cld
jae
fwait
mov
fiaddl
rolb
mov
leave
nop
jmp
aaa
adc
or
sbb
pop
push
mov
xchg
ret
jns
incb
or
xor
add
addr16
push
mov
xchg
ret
add
roll
repnz
nop
cld
jae
add
add
cmp
inc
inc
xor
pop
clc
repnz
nop
cld
jae
mov
add
add
mov
mov
xchg
ret
dec
add
mov
add
push
mov
xchg
ret
add
sbb
add
sbb
add
repnz
nop
cld
jae
add
jo
mov
cmp
sbb
cmp
ret
ud0
add
mov
gs
add
mov
add
pop
hlt
aam
mov
push
mov
xchg
ret
or
xor
mov
jmp
mov
add
adc
add
push
mov
clc
repnz
nop
cld
jae
dec
inc
add
lods
lods
jb
mov
clc
repnz
nop
cld
jae
lock
or
jp
push
push
mov
xchg
ret
jnp
jp
add
cmpsl
add
clc
repnz
nop
cld
jae
fwait
jns
add
add
nop
push
mov
leave
nop
jmp
adc
add
lods
adc
add
add
clc
repnz
nop
cld
jae
pop
add
pop
xor
clc
repnz
nop
cld
jae
sti
lret
mov
adc
out
lods
call
nop
push
mov
leave
nop
jmp
mov
sub
ljmp
push
clc
repnz
nop
cld
jae
adc
add
add
mov
clc
repnz
nop
cld
jae
mov
add
out
and
clc
repnz
nop
cld
jae
add
pop
mov
clc
repnz
nop
cld
jae
pop
add
jbe
xor
addb
add
repnz
nop
cld
jae
add
sub
inc
ret
clc
repnz
nop
cld
jae
add
add
add
jne
clc
repnz
nop
cld
jae
add
dec
rcll
mov
repnz
nop
cld
jae
adc
sub
repnz
nop
cld
jae
sbb
inc
lret
add
lods
loopne
leave
rep
nop
push
mov
leave
nop
jmp
inc
pop
sub
aaa
add
outsl
addl
add
sbb
add
clc
repnz
nop
cld
jae
xor
add
mov
mov
cmp
repnz
nop
cld
jae
lods
add
lock
nop
nop
cld
jae
jmp
add
add
je
clc
repnz
nop
cld
jae
add
rcl
adc
mov
clc
repnz
nop
cld
jae
jns
addr16
cmp
add
dec
add
nop
jmp
add
xchg
add
pushf
push
mov
clc
repnz
nop
cld
jae
mov
or
clc
repnz
nop
cld
jae
sbb
bound
lret
add
push
mov
xchg
ret
jo
xor
fidivs
sbb
push
mov
xchg
ret
add
jns
incl
add
adc
repnz
nop
cld
jae
add
add
or
in
leave
nop
jmp
add
inc
stos
push
mov
xchg
ret
jb
jp
fiadds
add
dec
loope
mov
add
nop
jmp
mov
and
mov
xchg
ret
mov
rcll
add
dec
xor
fildl
jnp
inc
add
add
lret
dec
pop
iret
mov
clc
repnz
nop
cld
jae
add
add
jo
aad
movsb
jmp
incl
jmp
jno
jmp
add
inc
mov
push
mov
xchg
ret
mov
jb
sub
lahf
cmc
incl
jbe
inc
add
fiadds
nop
mov
js
jmp
mov
xchg
ret
add
or
aam
pop
clc
repnz
nop
cld
jae
add
nop
mov
add
fs
into
cmp
repnz
nop
cld
jae
add
add
idivl
sub
rol
repnz
repnz
nop
cld
jae
xor
add
cltd
js
add
and
shl
adc
sbb
push
clc
repnz
nop
cld
jae
add
add
stos
mov
push
mov
xchg
ret
add
mov
mov
pop
inc
je
clc
repnz
nop
cld
jae
shrl
clc
repnz
nop
cld
jae
add
dec
add
add
mov
push
mov
leave
nop
jmp
and
fiadds
add
mov
xor
mov
clc
repnz
nop
cld
jae
add
das
add
add
push
mov
xchg
ret
bound
call
add
nop
push
mov
leave
nop
jmp
stos
cmovno
and
pop
test
sbbb
fidivrl
adcb
jmp
sbb
mov
movsb
pusha
pusha
rorl
or
repnz
nop
cld
jae
sbb
push
pop
mov
push
mov
xchg
ret
adc
add
jle
and
add
nop
push
mov
leave
nop
jmp
add
add
and
nop
nop
cld
jae
aam
lock
daa
pop
nop
push
mov
leave
nop
jmp
aam
add
xor
dec
lock
cld
jae
jp
jb
adc
xor
or
repnz
nop
cld
jae
add
std
mov
clc
repnz
nop
cld
jae
add
aad
push
mov
xchg
ret
add
add
add
ror
rorb
pause
push
mov
leave
nop
jmp
xchg
add
add
pop
jp
mov
clc
repnz
nop
cld
jae
xor
add
inc
mov
inc
mov
push
mov
xchg
ret
cmpb
add
xlat
je
clc
repnz
nop
cld
jae
hlt
cli
inc
xor
jo
add
add
jo
pop
add
add
pop
clc
repnz
nop
cld
jae
jns
add
sti
add
jae
push
mov
xchg
ret
xor
sbb
add
inc
aam
pop
jmp
add
add
incb
add
das
fiadds
hlt
sub
push
mov
leave
nop
jmp
incb
sti
add
jmp
push
mov
xchg
ret
hlt
mov
add
nop
nop
cld
jae
push
mov
sbb
cmpl
repnz
nop
cld
jae
loope
add
xlat
jne
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
add
add
bound
loopne
inc
mov
nop
nop
cld
jae
xor
add
dec
push
add
mov
push
mov
xchg
ret
push
jo
add
add
clc
xchg
mov
clc
repnz
nop
cld
jae
add
dec
and
add
fisubrs
xchg
ret
add
fsubrp
incl
add
adc
call
clc
repnz
nop
cld
jae
add
add
dec
je
clc
repnz
nop
cld
jae
jns
jb
ror
clc
repnz
nop
cld
jae
add
sub
add
clc
repnz
nop
cld
jae
mov
lock
sub
repnz
nop
cld
jae
add
cli
imull
nop
push
mov
leave
nop
jmp
dec
roll
add
add
inc
ja
clc
repnz
nop
cld
jae
loop
loope
add
test
clc
repnz
nop
cld
jae
fimuls
lret
fisttpll
mov
xchg
ret
mov
mov
jne
rorl
repnz
nop
cld
jae
sbb
aaa
add
arpl
mov
xchg
ret
pop
push
add
das
fidivs
roll
nop
cld
jae
fwait
fwait
inc
add
xchg
mov
push
mov
leave
nop
jmp
loope
sub
add
mov
mov
mov
add
repnz
nop
cld
jae
add
loopne
pop
clc
repnz
nop
cld
jae
add
xor
add
sub
push
mov
xchg
ret
jnp
add
mov
fstpl
mov
xchg
ret
add
jns
hlt
pop
nop
add
mov
clc
repnz
nop
cld
jae
sub
adc
add
jbe
pusha
push
mov
xchg
ret
xor
add
add
adc
and
call
nop
jmp
add
in
fld1
clc
repnz
nop
cld
jae
inc
add
incb
add
roll
nop
cld
jae
clc
aam
add
sbb
mov
jo
add
adc
add
sub
or
jg
dec
and
clc
repnz
nop
cld
jae
add
add
or
clc
repnz
nop
cld
jae
bound
fisubrs
enter
nop
cld
jae
add
add
add
or
nop
cld
jae
notl
xor
rol
push
mov
xchg
ret
and
jp
xor
add
clc
repnz
nop
cld
jae
add
add
inc
push
and
clc
repnz
nop
cld
jae
add
jne
clc
repnz
nop
cld
jae
dec
xor
mov
roll
push
mov
leave
nop
jmp
add
add
lock
add
add
add
repnz
nop
cld
jae
add
add
add
rcr
push
mov
xchg
ret
inc
add
lods
jnp
roll
mov
xchg
ret
add
add
bound
repnz
nop
cld
jae
jo
add
add
scas
and
clc
aam
or
out
incl
das
add
add
jno
add
add
push
mov
xchg
ret
add
add
mov
add
push
mov
aam
sub
clc
repnz
nop
cld
jae
hlt
and
mov
and
adc
push
mov
leave
nop
jmp
adc
jnp
nop
sub
stc
clc
repnz
nop
cld
jae
or
addb
add
mov
pusha
and
roll
repnz
nop
cld
jae
inc
lret
xchg
add
out
mov
nop
push
mov
leave
nop
jmp
add
add
add
bound
pusha
add
not
clc
repnz
nop
cld
jae
hlt
add
aaa
add
mov
inc
push
mov
xchg
ret
inc
add
jp
loop
sti
sbb
add
clc
repnz
nop
cld
jae
roll
cmp
jbe
sub
mov
nop
push
mov
leave
nop
jmp
hlt
add
add
aaa
and
shlb
inc
sub
repnz
nop
cld
jae
add
and
loope
ljmp
nop
cld
jae
add
dec
or
mov
div
nop
push
mov
leave
nop
jmp
cli
dec
inc
add
add
loop
mov
in
mov
call
je
clc
repnz
nop
cld
jae
clc
add
loopne
fimull
sub
add
lods
adc
inc
jno
inc
and
add
nop
nop
cld
jae
mov
incl
inc
mov
xchg
fistpl
clc
repnz
nop
cld
jae
sub
aaa
jbe
add
in
mov
clc
repnz
nop
cld
jae
add
add
pop
ret
clc
repnz
nop
cld
jae
lret
add
fdivrp
testl
repnz
nop
cld
jae
jb
add
xchg
xchg
testl
nop
push
mov
leave
nop
jmp
lret
or
mov
xchg
ret
add
add
xchg
add
xor
mov
push
mov
xchg
ret
add
add
lods
xor
lock
or
mov
mov
leave
nop
jmp
sbb
lods
add
jmp
adc
repnz
nop
cld
jae
fiadds
sub
add
loope
sbb
push
mov
xchg
ret
incb
add
fwait
roll
sbb
xchg
subl
nop
push
mov
leave
nop
jmp
and
add
mov
xchg
ret
add
stos
jns
add
add
push
jg
jge
clc
repnz
nop
cld
jae
jb
xor
and
push
mov
xchg
ret
add
add
add
fwait
cmpsl
push
clc
repnz
nop
cld
jae
xchg
cmp
add
call
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
add
divl
adc
repnz
nop
cld
jae
sub
aaa
inc
addr16
stc
test
nop
push
mov
leave
nop
jmp
add
fwait
subb
lods
inc
loopne
and
push
mov
xchg
ret
add
xor
add
pusha
and
rcl
xor
and
nop
nop
cld
jae
add
add
add
add
dec
sub
lret
pop
inc
add
sub
add
das
jns
sub
clc
repnz
nop
cld
jae
call
addr16
sub
pushl
add
add
inc
sbb
jnp
pusha
lds
jb
clc
repnz
nop
cld
jae
loope
in
imul
clc
repnz
nop
cld
jae
adc
add
fwait
push
mov
xchg
ret
pop
mov
psrad
addb
jge
sar
nop
nop
cld
jae
jno
loop
add
or
imul
nop
nop
cld
jae
add
add
ret
dec
push
clc
repnz
nop
cld
jae
loope
pop
add
pop
xchg
test
nop
push
mov
leave
nop
jmp
add
clc
adc
sub
pop
mov
clc
repnz
nop
cld
jae
call
cmpsb
pusha
add
mov
nop
push
mov
leave
nop
jmp
add
add
adc
nop
nop
cld
jae
mov
jbe
mov
mov
push
mov
xchg
ret
das
jnp
mov
stc
jne
clc
repnz
nop
cld
jae
add
add
add
nop
push
mov
leave
nop
jmp
cli
add
add
add
loopne
fld1
clc
repnz
nop
cld
jae
add
lock
mov
imul
cmp
ret
lret
adc
incb
mov
add
add
loopne
sub
add
sbb
repnz
nop
cld
jae
add
add
jnp
stc
xorl
clc
repnz
nop
cld
jae
fiadds
pop
clc
repnz
nop
cld
jae
inc
nop
add
adc
jb
push
clc
repnz
nop
cld
jae
xor
fwait
mov
out
push
mov
xchg
ret
inc
or
das
add
add
lahf
shl
clc
repnz
nop
cld
jae
cli
stos
add
add
clc
repnz
nop
cld
jae
xchg
fiadds
inc
mov
lret
test
in
stos
add
in
sub
push
add
inc
xchg
jnp
arpl
mov
or
cmp
shlb
call
rol
inc
mov
cltd
aaa
push
loopne
push
mov
mov
shll
mov
out
in
jp
dec
mov
mov
int3
or
iret
xchg
dec
rclb
jbe
and
inc
jmp
rolb
pusha
xorb
arpl
inc
jne
push
pusha
add
pop
xchg
int3
gs
dec
movsl
push
shll
shrl
ret
dec
cmp
clc
loop
pop
mov
in
or
and
add
rolb
out
and
inc
mov
repnz
jns
rclb
and
jo
cwtl
stos
mov
out
inc
and
jg
aam
outsb
lods
and
rcll
mov
pop
push
cmpsb
and
mov
add
add
sbbb
mov
test
mov
cmp
movsb
shlb
cmc
mov
or
inc
xchg
outsb
jge
loopne
lahf
jb
jge
and
xchg
lret
jnp
sbb
addb
adc
shrb
pusha
fld
negl
add
mov
pusha
mov
adc
jbe
pusha
inc
jmp
jns
add
push
aas
ss
jmp
jns
mov
int
lods
pop
push
add
sub
out
aad
mov
les
adc
scas
dec
movsl
test
data16
fists
and
xorb
mov
or
loopne
aas
adc
pusha
loopne
cs
fistps
inc
xchg
cmp
inc
push
xchg
ss
sbb
loopne
jmp
jb
lods
rcrb
addb
int
mov
add
inc
outsl
scas
mov
les
imul
and
and
sbb
add
lahf
pusha
push
xor
lahf
cmp
and
enter
flds
inc
pusha
mov
fisubl
xchg
mov
xor
adc
jp
mov
jmp
inc
and
add
mov
loope
xor
nop
int
cmp
sub
dec
jge
fcompl
inc
out
loopne
insb
fs
push
pop
inc
inc
dec
pop
pop
mov
cmp
and
lcall
add
mov
cmp
scas
mov
inc
push
jmp
jl
js
xchg
push
int3
scas
add
pop
lahf
mov
push
sbb
add
mov
cmp
inc
in
xchg
jo
inc
rorb
mov
push
mov
push
jmp
sti
repz
push
xor
inc
push
or
jnp
js
popf
gs
out
mov
fwait
stos
insb
and
popa
out
ja
nop
xchg
jae
mov
inc
cmp
dec
or
pop
adc
fs
cmp
cmc
xor
push
or
addb
push
mov
mov
enter
mov
mov
loopne
stc
and
mov
fldenv
movsl
inc
xor
push
jae
add
outsb
data16
mov
rolb
push
jno
iret
mov
or
insb
push
xor
cmp
lods
sbb
mov
lea
pusha
outsb
pusha
cs
inc
push
lds
dec
pop
and
add
inc
and
sbb
hlt
pop
ret
lock
add
insl
lock
and
jo
shlb
ret
das
adc
mov
stos
inc
loopne
push
inc
and
inc
mov
test
add
mov
inc
mov
mov
mov
xor
add
ljmp
adc
loope
loopne
xlat
sub
xor
add
mov
pop
sub
dec
mov
addb
pop
stc
sub
cmpb
rcrl
push
popf
jne
mov
icebp
leave
dec
push
and
movsl
mov
sarl
movsl
xchg
outsb
cmp
mov
xchg
rclb
and
and
push
andb
pusha
enter
dec
out
rorb
pusha
cld
cmc
ja
sbb
rolb
loope
xor
sub
pusha
mov
out
ss
or
mov
lahf
insl
inc
repz
adc
and
pop
js
jo
pusha
mov
js
sti
add
loopne
mov
mov
stos
adc
and
loopne
adc
mov
mov
xchg
aas
pop
lock
in
inc
imul
imul
andl
push
mov
and
and
cmpsl
outsl
cmp
rolb
mov
inc
cmp
cmpsl
push
add
add
and
mov
add
mov
lods
rol
xchg
sbb
dec
shrb
dec
lds
push
stos
inc
add
ficompl
orb
inc
test
das
xor
mov
and
jmp
dec
cmp
push
cmpsl
xchg
push
jbe
loopne
fs
inc
jg
sbb
test
loopne
push
jl
xor
stos
mov
test
ljmp
mov
hlt
adc
pusha
mov
imul
lods
pop
push
shl
jmp
loop
xor
shlb
movsl
push
pusha
ror
xorl
or
and
adc
add
push
inc
xchg
xchg
xlat
loop
popa
dec
xchg
jg
xchg
mov
rol
add
pusha
shl
mov
dec
les
or
add
bound
add
loopne
inc
inc
lds
loopne
bound
mov
lds
mov
jg
jns
sbb
cmp
and
daa
into
push
ret
cmc
push
add
and
xchg
or
andb
rolb
xchg
inc
or
xor
addb
push
mov
and
sahf
pop
cmp
inc
mov
sbb
fiadds
je
mov
iret
cmpsl
xchg
mov
popa
lcall
inc
shl
push
aas
pop
mov
sbb
call
xchg
jno
push
jae
lods
addb
fistpl
aam
cmc
xchg
inc
rcll
mov
loopne
pusha
mov
sbb
loopne
xor
jg
jp
and
loopne
mov
mov
and
push
xlat
push
push
dec
fdivrs
stos
ficoml
fnstenv
popa
and
lea
andb
mov
sbb
fisttps
inc
sbb
pop
fndisi(8087
fwait
nop
mov
call
subb
jo
mov
out
lds
das
xor
and
rorb
rolb
xchg
cmp
imul
inc
add
xor
mov
xchg
cld
mov
pop
imul
push
leave
cwtl
xchg
andb
and
xchg
scas
shl
mov
push
sti
xlat
dec
repz
cli
test
fldl
or
mov
stos
mov
roll
roll
mov
in
adc
fidivrl
pusha
loopne
adc
add
dec
notl
fs
xlat
push
pop
xlat
mov
lods
pusha
add
and
aas
fsts
jge
cmp
mov
push
rolb
int
mov
repz
cmp
cltd
pop
in
inc
add
pusha
add
ljmp
mov
xchg
clc
cld
insb
int
addb
mov
pusha
loopne
cltd
cmp
mov
mov
inc
sti
ret
in
pop
bnd
addb
repz
inc
cmp
inc
add
and
cs
inc
xchg
and
adc
xchg
sti
jmp
mov
or
add
add
inc
scas
inc
inc
push
push
outsl
add
loopne
loopne
mov
aas
cmp
pop
popl
loopne
jge
add
inc
xchg
add
push
bound
imul
loope
jns
xchg
pushf
inc
insb
nop
movsb
add
pusha
and
shl
or
rolb
and
inc
pop
pusha
shlb
inc
mov
dec
lcall
sahf
out
pop
jge
mov
loopne
inc
mov
fldcw
and
fidivrl
push
test
add
in
mov
xlat
mov
js
mov
xchg
dec
cmp
add
jo
fs
mov
test
ja
cmp
pusha
mov
push
pop
pushf
push
enter
pusha
xchg
pushf
testl
pop
xor
sub
cmpsb
and
lcall
rcll
or
jl
cmpsl
jnp
enter
into
push
inc
add
adc
outsb
arpl
loopne
mov
call
nop
jno
xchg
dec
pop
xor
fldt
cmp
loopne
fdivl
cmp
in
pop
jo
in
jmp
stos
pusha
add
push
fstp
adc
lret
imul
andb
into
iret
movsl
mov
mov
fbstp
loopne
dec
adc
or
hlt
xchg
dec
mov
cmpsl
imul
pop
loop
je
scas
addb
xor
gs
rcrb
or
orb
sub
dec
mov
and
cmpsl
js
sbb
shlb
fstp
add
rclb
jne
loopne
mov
xchg
jae
shl
mov
jo
lcall
lret
ret
mov
outsb
sbb
mov
push
ss
cmpb
mov
jbe
movsl
lret
xchg
scas
add
push
pusha
mov
or
sbbb
mov
and
mov
jo
stc
jg
mov
ss
pop
xor
cmp
in
mov
adc
sbbl
sub
sti
fstps
and
pusha
pusha
out
pop
lea
add
mov
addr16
and
xchg
jns
sbb
jg
sub
rcll
cmc
xor
jle
pusha
repnz
jge
cwtl
mov
and
mov
int3
xchg
dec
mov
add
mov
mov
xor
cmp
cmp
push
jp
inc
xchg
ljmp
dec
adc
jge
mov
repz
sub
orb
xlat
push
jnp
in
hlt
ss
loopne
sub
lds
sbb
mov
mov
mov
aas
mov
out
add
add
shlb
inc
addr16
rcr
mov
loopne
gs
call
fcomps
jmp
addb
loopne
sub
and
popf
jl
and
das
call
mov
cmc
add
stc
outsl
add
and
sbb
aaa
sbb
cmp
jbe
jno
and
add
shlb
dec
lret
and
add
add
pop
jne
cmp
nop
int
out
mov
lret
jns
addl
sahf
push
sub
pusha
mov
lahf
daa
mov
xchg
or
inc
push
and
loopne
adc
mov
and
shlb
dec
jmp
in
daa
addb
je
andb
gs
movsl
test
add
mov
test
pop
sbb
loope
adc
shrl
cmp
loopne
fistl
mov
rclb
out
xor
inc
push
call
inc
insl
cmpsl
mov
add
jnp
in
stc
cld
lret
fdivrs
andb
xchg
sbb
inc
loopne
add
sbb
shl
ficoml
cmpsl
push
jnp
fucomip
push
inc
pushl
int3
loop
dec
clc
fdivl
pop
loop
dec
cmp
xlat
fcmovu
cltd
aaa
sbb
aam
add
adc
mov
movaps
shlb
adc
enter
dec
sti
sbb
das
es
and
mov
outsl
sti
scas
fdivl
jg
inc
mov
pusha
push
mov
les
inc
rolb
jae
shlb
and
fdivl
cmp
loopne
mov
dec
notb
insb
adc
imul
adc
mov
mov
rcl
ja
mov
loope
cmp
loop
pusha
add
push
in
jmp
mov
sbb
mov
add
mov
jbe
lds
xor
sarl
jnp
add
fmull
jno
imul
jo
cmp
ja
xchg
aam
mov
ss
jmp
jg
rolb
rolb
sub
jns
xor
add
imul
addb
xchg
xor
inc
adcb
mov
adc
inc
imul
popf
sub
xchg
dec
xlat
leave
repnz
addb
hlt
ja
loopne
fs
and
orb
sub
pusha
push
scas
add
fdivrp
sub
and
xor
jg
cmp
and
lret
loopne
dec
inc
mov
ljmp
jp
loop
jb
jle
pusha
sbbb
inc
int
out
shlb
imul
mov
lods
adc
enter
out
pop
dec
movsl
cmp
cmp
test
shlb
jnp
aam
jmp
mov
pop
fdivrl
in
jl
cld
push
inc
and
push
pusha
sub
sahf
adc
hlt
ja
aam
pusha
and
push
popf
jns
push
cwtl
arpl
and
loopne
mov
pusha
xchg
stos
add
xchg
iret
cmp
outsb
arpl
mov
stc
sub
and
jbe
push
jp
pusha
add
jl
faddp
push
loopne
adc
aaa
xchg
pop
xor
dec
mov
mov
movsb
mov
and
xchg
mov
add
pop
rorl
cmp
and
cli
xor
xchg
lock
sbb
jl
xchg
mov
jb
jno
mov
jmp
int3
leave
fnstsw
or
inc
mov
and
outsl
cmp
and
cs
and
mov
pop
imul
inc
rorb
and
andb
lea
dec
sti
arpl
fbstp
in
fstpt
push
jno
test
and
int
in
and
leave
insl
pop
cmp
fcomip
mov
arpl
mov
into
rcrl
daa
data16
jne
xchg
rclb
mov
adcb
jae
test
add
imul
xchg
lahf
mov
les
dec
push
addb
sub
shrb
add
mov
xchg
les
pusha
fbld
hlt
jg
ss
sub
and
xchg
lds
shl
loope
add
enter
sbb
movsb
pusha
loopne
pop
ds
shll
sahf
adc
loop
orl
mov
xchg
cmpsb
pusha
addb
mov
pop
pop
pusha
sbb
ljmp
sbb
and
jecxz
cmpsb
shlb
andb
and
ret
mov
mov
and
lcall
sub
adc
gs
mov
out
lds
mov
jg
test
add
daa
jbe
pusha
and
add
mov
pop
test
xorb
pusha
add
std
gs
or
mov
xorb
mov
sub
and
int3
sub
inc
cmp
cmp
dec
icebp
inc
and
shrb
mov
jecxz
shrb
inc
loop
adc
sbb
ret
mov
loopne
fidivrl
add
push
push
shlb
das
dec
push
pop
repz
pop
insb
jl
movsl
mov
pusha
add
inc
rcr
push
inc
add
and
jle
out
sbb
cmp
inc
call
loopne
push
inc
mov
add
adc
pop
push
scas
les
cmp
lahf
popf
xchg
loopne
jg
outsb
inc
pop
or
mov
cmc
jge
push
fcomps
das
xchg
xor
xchg
dec
mov
mov
add
and
mul
add
loopne
add
orb
loopne
and
jo
fnsave
add
bound
inc
mov
loop
add
jbe
inc
jmp
or
xchg
or
loopne
mov
loopne
xchg
int3
pop
push
mov
push
daa
jmp
cmp
sahf
push
das
leave
mov
in
xor
mov
lock
fnstsw
mov
ret
pop
and
movsl
xor
inc
mov
jns
and
pusha
mov
mov
adc
loopne
sbb
call
movsb
mov
xor
rol
mov
loopne
lds
pusha
loopne
js
movsb
inc
and
mov
and
lods
int
stos
das
and
loopne
shld
lock
push
push
lods
and
into
and
div
into
jae
jno
call
inc
subb
inc
xchg
cmp
pop
int3
mov
addb
cli
adc
test
and
push
inc
and
jg
bound
lret
jb
cwtl
popf
adc
lods
loopne
out
cmpsl
push
js
outsl
push
add
loope
test
inc
cltd
dec
sub
dec
cmp
adc
aas
aam
mov
scas
shlb
mov
sub
jecxz
inc
inc
sub
mov
mov
std
push
mov
push
idiv
xor
pop
movsb
rol
xchg
pop
cmp
fldt
into
mov
jp
jb
push
push
inc
mov
pop
rorl
and
and
leave
rcrb
stos
add
jmp
add
pop
mov
adc
in
insb
fisubl
pop
icebp
push
shlb
addb
in
pop
not
dec
adc
loope
out
xchg
loopne
pushf
inc
mov
and
sbb
dec
mov
add
mov
addb
ret
mov
cltd
push
popa
cltd
pop
data16
rorb
mov
mov
loopne
xchg
cmp
imul
ss
lret
mov
mov
imul
or
scas
add
test
lahf
jo
loopne
dec
mov
pop
sub
and
push
push
and
sar
arpl
test
add
push
xchg
lea
fistpl
sti
out
js
cltd
bound
pop
out
mov
lods
repz
mov
or
nop
ret
out
call
xchg
sub
inc
addl
adc
loopne
int
ret
xchg
shl
iret
pop
xchg
mov
jg
mov
mov
bound
mov
mov
loopne
mov
push
shlb
cmpb
out
inc
ds
inc
sbb
testl
dec
mov
and
jle
loopne,pn
cld
push
mov
mov
es
pusha
inc
add
loopne
mov
dec
fs
dec
xor
jmp
jp
lock
and
aad
xchg
leave
mov
add
push
cmp
stos
inc
mov
inc
mov
int
dec
dec
test
and
mov
into
mov
inc
scas
inc
xorb
or
cmp
lahf
fs
mov
or
int3
jae
and
push
lahf
xor
sbb
aad
inc
pusha
sti
pop
outsb
push
fdivl
inc
in
ss
sbb
pusha
dec
xchg
enter
aaa
inc
mov
clc
ljmp
inc
pusha
enter
push
lahf
fsubrs
push
or
sar
inc
xor
mov
mov
push
nop
dec
leave
addb
push
movsl
mov
fs
lcall
push
leave
xchg
insl
sub
mov
xlat
pop
add
mov
sub
imul
repnz
add
loopne
adc
mov
aas
sub
rclb
addr16
push
rolb
inc
inc
or
and
push
rolb
aad
mov
adc
sbb
loopne
movsl
fnsave
in
add
scas
and
movsb
and
popa
and
cwtl
and
mov
fldcw
out
mov
in
sti
scas
inc
pop
sub
mov
xchg
imul
mov
push
mov
xchg
sub
leave
in
jmp
rorb
pusha
and
and
or
cmpsl
cmp
ljmp
or
adc
inc
inc
hlt
cmc
sbb
xchg
mov
cmpsl
das
pop
idivb
stc
frstor
cli
xchg
movsl
push
add
clc
in
hlt
lods
and
in
mov
jae
hlt
jle
stos
loopne
push
cmp
repnz
jo
in
mov
add
mov
std
add
jle
jns
jb
sbb
sub
dec
divb
inc
loopne
js
push
inc
xor
ja
sub
pop
fmull
addb
mov
pop
xchg
pop
insb
pop
out
loop
test
push
divb
call
cmp
imul
cs
mov
sbbb
add
cld
cmp
inc
jecxz
push
push
data16
push
aaa
popf
add
rcr
push
xor
add
xlat
add
addb
sub
loopne
xchg
add
test
cmp
add
inc
mov
stos
rolb
add
shl
insl
mov
int3
cmpsl
pop
call
subb
pusha
lock
int
jle
adc
shl
divps
iret
push
add
sarb
cli
insl
int3
pop
mov
and
subl
test
pusha
sbb
pop
stc
cs
pusha
fxch
pop
push
hlt
cmpsl
push
add
cmpsb
add
add
dec
or
sub
inc
loopne
aad
xchg
xor
movsb
pusha
add
inc
iret
inc
movsl
lcall
lahf
xor
pop
sub
loopne
imul
and
mov
dec
movsb
addb
in
mov
test
sarl
hlt
adc
push
add
sbb
jl
sub
cmp
jne
outsb
add
and
aas
mov
add
pusha
loopne
sub
mov
and
xor
xchg
loop
shlb
xor
and
push
sub
addr16
sbb
aas
or
sub
cmp
sahf
mov
jnp
ds
sarb
xor
daa
sbb
pop
lea
ljmp
leave
xchg
mov
xchg
adc
paddd
push
popa
pop
push
loopne
out
ja
mov
fwait
inc
jbe
sub
fldl
xlat
cld
int
lods
roll
pop
pop
add
bound
movsb
mov
lcall
aad
pusha
sbbb
add
andb
cli
lahf
add
rolb
cmpsl
out
insb
out
fbld
sub
mov
sub
pusha
call
pusha
sbbb
mov
xrelease
sub
aad
jl
fisubrs
repz
out
xchg
mov
pop
repz
out
pop
sti
in
and
pusha
les
pop
lcall
ja
imul
div
dec
je
out
rolb
rorb
and
loopne
mov
xchg
outsl
mov
out
sub
and
cmp
pop
in
icebp
xchg
lcall
mov
pusha
sub
inc
pop
add
mov
and
nop
in
inc
ja
mov
pusha
push
push
push
or
outsb
sbb
mov
xchg
dec
cmp
xor
dec
xor
das
cltd
shll
popf
and
cmp
and
inc
push
xor
mov
push
mov
xchg
mov
sbb
sub
pop
or
in
add
mov
add
jmp
inc
pusha
cmpl
loopne
jno
xor
pop
dec
nop
addl
mov
sti
hlt
and
sub
sarb
in
popa
jb
adc
ds
iret
bound
bound
and
cmp
jp
xchg
and
pusha
cmp
mov
push
sub
sub
out
pusha
and
testb
fwait
shlb
and
or
loopne
add
cmp
cmc
sub
and
bound
pusha
and
xor
add
pusha
adc
push
out
and
push
mov
sbb
mov
pusha
subb
addr16
out
xchg
mov
arpl
and
mov
jle
lea
das
jo
and
mov
out
mov
fistpl
sbb
repz
mov
outsb
xchg
mov
add
ficoms
out
addb
push
stos
ror
popf
xchg
xchg
sub
mov
and
pop
dec
jecxz
sub
sarl
mov
sbb
loopne
jnp
dec
aad
sbb
popf
adc
sbb
fdivp
jmp
loopne
jnp
push
jb
xlat
and
and
leave
mov
pop
sbb
pop
push
pop
dec
mov
or
pusha
stc
add
add
rcrb
imul
and
data16
and
sbb
es
and
fidivrs
and
jnp
jae
adc
dec
les
sbb
adc
pop
dec
xchg
nop
pop
pop
decl
fcmovb
jb
bound
rcrb
mov
and
iret
imul
into
imul
pop
repz
mov
out
pop
test
loopne
mov
inc
rcl
loopne
add
popf
insl
xchg
mull
dec
ljmp
xchg
jl
clc
xchg
sub
call
mov
in
fwait
and
pop
adc
ja
xor
pusha
xor
xor
bound
pop
xchg
hlt
testb
pop
dec
fwait
addr16
shlb
and
rclb
jno
std
cmp
psrlw
imull
add
dec
inc
roll
inc
and
and
aad
in
or
loopne
stos
pusha
add
mov
pop
fwait
popa
fisubs
pusha
adc
mov
sbb
mov
mov
stos
addb
jle
cmp
xor
jo
add
loopne
inc
add
daa
fstps
jge
inc
rolb
iret
in
or
mov
add
fxch
lds
or
nop
push
mov
out
addb
and
mov
inc
mov
mov
adc
and
dec
sarl
ljmp
sub
ds
inc
mov
add
stos
addb
mov
inc
sub
adc
rolb
repz
cmp
in
ret
and
rolb
lds
and
lret
mov
mov
add
stos
inc
loopne
adc
sarb
cmp
iret
stos
and
imul
lds
add
adcb
sbbb
incb
pusha
and
mov
jg
fst
mov
mov
cmp
into
fisubl
and
test
inc
sbb
loopne
rcll
cmp
daa
imul
dec
lcall
sti
daa
lahf
ss
rorb
scas
mov
mov
imul
jne
into
xchg
mov
inc
mov
xor
inc
inc
fld
cli
dec
insl
cli
out
outsl
cmp
loop
stos
nop
jbe
loopne
add
sbbl
sahf
lds
and
jge
jne
andb
mov
mov
cmp
mov
loopne
pusha
shr
cmp
into
insl
pop
xchg
repz
pop
jns
mov
jo
or
pusha
hlt
lcall
in
dec
mov
cmp
jae
lahf
enter
lret
cmp
mov
add
mov
add
dec
sub
dec
es
mov
add
stos
fstpl
jge
mov
cmc
ljmp
loopne
mov
adc
mov
mov
cmp
sar
xchg
add
inc
cwtl
lods
pusha
inc
mov
daa
xchg
push
mov
mov
pop
mov
push
and
repz
dec
pop
mov
es
or
gs
dec
pop
sub
in
inc
xchg
je
add
in
pop
pop
cmp
xchg
movsl
lods
loopne
lret
or
cld
mov
shlb
movsb
loopne
frstor
inc
add
inc
scas
idivb
hlt
or
ja
and
bound
clc
in
pop
push
loopne
sub
add
loopne
loope
les
pop
aad
dec
dec
mov
mov
push
inc
inc
out
cmp
insl
mov
in
jb
pusha
rcl
jno
mov
insl
fdivrs
ret
addb
cmpsb
shl
ja
lahf
mov
xchg
popa
adc
push
mov
and
lock
je
test
adc
add
inc
loop
mov
js
cmpsb
add
pop
add
pop
jecxz
inc
loopne
sbb
adc
cmp
aas
mov
sbb
cwtl
push
arpl
loopne
xor
shlb
inc
jo
cmp
mov
movsb
rol
ja
leave
insb
and
loopne
cmpsb
inc
sbbb
fs
pop
push
loopne
add
sub
test
inc
jno
cmpsb
shl
and
adc
xor
sub
pusha
sub
idivb
fisubl
test
rolb
loopne
fidivs
pop
push
mov
add
add
outsl
dec
in
addb
scas
pusha
pusha
jne
rcrl
loop
mov
jno
loopne
mov
andb
test
pusha
pop
mov
iret
xchg
mov
pusha
cmpb
mov
mov
pop
ja
shlb
xlat
push
shr
push
and
ret
dec
xor
mov
push
inc
add
aaa
or
pusha
mov
jle
loopne
or
pop
pusha
push
jecxz
enter
and
inc
mov
mov
sbb
scas
mov
mov
hlt
loope
jecxz
repnz
mov
subl
push
aam
dec
sub
mov
pop
sub
loopne
push
jns
or
sar
inc
pushf
push
imul
pop
js
hlt
add
and
inc
mov
jge
lret
mov
xor
jnp
sbb
jne
jae
jns
int
fisubl
dec
lret
cwtd
mov
mov
pop
inc
jae
jge
push
inc
pusha
rcrb
fucom
cmp
push
inc
lcall
std
jbe
xor
lea
and
leave
loop
arpl
mov
rcrb
adc
adc
pop
pop
rcl
dec
sbb
leave
ss
in
loop
add
add
jo
adc
aam
and
jb
movsl
mov
jbe
push
ficompl
cmp
and
add
add
xor
pop
in
je
cmp
sub
rclb
addb
pusha
mov
inc
pop
push
add
add
pusha
inc
adc
lret
add
lret
int3
jmp
cltd
ljmp
mov
and
sub
add
and
loopne
cmc
cmpsb
andb
sub
subb
ret
xor
and
add
frstor
xor
adc
sub
pusha
outsl
loop
out
scas
inc
jle
sub
cmp
add
bound
scas
mov
js
dec
mov
xor
or
mov
push
addb
imul
pop
mov
ljmp
fldt
sarb
jns
andb
push
cmp
andb
and
add
and
xchg
cltd
insl
xchg
lret
pop
lods
add
addb
popf
dec
andb
aas
out
call
inc
fisttpl
or
or
loopne
lcall
ret
lret
adc
jg
pop
je
mov
and
mov
shlb
loope
sub
inc
fisubl
shlb
repz
jp
sub
aaa
pop
mov
pusha
sarb
push
pop
push
insl
lret
pop
jo
sarb
scas
andb
xchg
xchg
mov
es
xorb
cmp
jb
mov
pusha
cmp
jmp
outsl
fs
pusha
mov
push
mov
push
mov
xchg
movsb
pusha
mov
ficoml
fiaddl
mov
rcrb
add
repz
adc
lods
cmp
jae
pop
fiadds
dec
pop
dec
fmul
ret
cmp
out
loope
add
or
sti
mov
adc
sbb
jl
lea
or
inc
idivl
cmpsl
push
mov
rcrb
cmp
pop
inc
or
and
mov
mov
inc
ret
shlb
jo
mov
aas
loope
andb
mov
into
add
in
push
rolb
out
jno
arpl
inc
pusha
mov
cmp
inc
add
hlt
sub
and
and
in
sub
pusha
cmpl
or
and
pop
mov
adcb
fstps
jns
pop
xchg
loopne
movsb
inc
inc
cmp
push
jg
pop
mov
loopne
jns
jae
and
inc
das
jbe
rolb
jo
or
in
out
imul
sbb
mov
xchg
jae
ror
rcr
popa
cmp
shlb
jo
lock
movsl
push
movsl
dec
int3
inc
or
cwtl
mov
and
sbb
mov
jbe
adc
xchg
rolb
sub
add
pop
icebp
icebp
andb
dec
fidivs
pusha
pusha
sub
loopne
movsb
shlb
mov
mov
mov
xchg
inc
add
xchg
cltd
sbb
hlt
push
shl
pop
and
push
and
shl
imul
mov
in
mov
rclb
jg
or
add
inc
andb
sub
mov
push
mov
test
pusha
lret
in
cmpsl
pop
fisubrl
sti
inc
sbb
popf
jl
pop
shrb
sub
mov
mov
add
roll
subl
xchg
loope
lahf
pushf
and
lods
adc
loop
or
js
dec
or
loopne
or
dec
xchg
push
mov
add
cmc
mov
adcb
das
test
loopne
push
jp
jg
fadd
inc
jp
and
fdivl
out
sub
andb
inc
xchg
and
loopne
mov
jno
outsl
into
push
or
pusha
shlb
add
pop
sbb
jb
stc
arpl
insb
sub
inc
ret
mov
lahf
jmp
mov
sarb
in
pusha
loopne
adc
pop
sub
inc
xor
jb
fcomp
lds
sub
int3
daa
inc
lcall
movsl
les
lahf
adc
repnz
jno
lahf
jp
pop
add
dec
push
and
inc
and
pusha
mov
dec
sub
adcb
add
in
and
addb
dec
inc
lods
jp
mov
in
lock
and
shll
bound
add
mov
lret
inc
cmp
add
and
add
adc
addb
push
mov
dec
mov
lahf
push
jle
add
pop
and
rolb
xor
jnp
aaa
cwtl
paddsw
imul
popf
add
std
mov
xchg
test
xchg
pop
fcomps
or
nop
or
loopne
in
andb
outsl
cli
mov
lea
mov
popa
dec
inc
and
add
and
mov
mov
rcrb
dec
repnz
mov
inc
sar
test
mov
and
mov
lcall
out
shll
add
mull
and
sub
pop
mov
mov
mov
and
fistpll
in
jns
add
aas
les
sub
loopne
cmpsl
mov
cmp
mov
mov
imul
xchg
mov
mov
jno
loopne
push
xchg
sbb
inc
popa
mov
mov
insl
sbb
in
mov
cmp
test
inc
and
scas
shl
daa
xor
inc
and
cld
scas
sub
ret
or
iret
inc
xor
movsb
inc
add
push
xchg
dec
sahf
mov
push
push
loope
repnz
pop
sbb
mov
pop
loope
add
sarl
dec
and
and
shll
jp
inc
inc
mov
test
mov
daa
dec
mov
int
data16
or
shl
push
lods
les
xchg
and
inc
and
loopne
or
inc
xor
add
loopne
out
sub
je
sbb
popw
shrl
addb
test
int
loopne
lds
mov
pusha
xorb
aaa
xor
rcl
loopne
lods
push
cmp
push
inc
pusha
lea
mov
fisubrl
push
add
rcll
push
inc
loopne
mov
loopne
xor
cld
mov
push
inc
adc
cld
jns
cli
xchg
sub
loopne
andb
xorb
ja
add
inc
push
and
pusha
inc
xor
add
in
pop
popf
loopne
inc
inc
adc
jl
ljmp
stc
add
aaa
test
and
lock
add
jno
icebp
mov
decb
add
mov
and
repnz
dec
test
loopne
fs
and
movsl
xor
and
das
cmc
addb
push
add
loopne
or
pop
clc
stos
add
iret
xchg
and
daa
bound
in
loopne
sub
sub
ret
add
aam
adc
pusha
sarb
movsb
loopne
adc
rol
add
push
mov
rolb
daa
ret
push
push
insl
arpl
popf
mov
stc
xlat
testl
add
shrl
adc
sbb
je
rolb
cmp
decl
push
out
addb
add
pusha
addb
add
iret
and
dec
shrl
pop
cmp
dec
pop
jae
scas
lods
pusha
pusha
jl
and
and
mov
out
add
pusha
cmpsb
loopne
rcll
fs
int3
lahf
or
lea
pusha
popf
cld
loop
addb
outsl
test
sub
dec
push
mov
mov
mov
aam
sub
ja
notl
dec
sub
andb
inc
mov
test
pusha
mov
mov
aam
sbb
cs
and
mov
jmp
inc
pushf
xor
dec
push
pop
jbe
xor
rolb
xchg
jnp
fcmovbe
fcmovnb
sar
int
and
addb
inc
mov
push
es
enter
bound
loopne
cmc
aaa
ljmp
inc
mov
in
jbe
shlb
andb
mov
dec
push
mov
mov
lcall
pop
xor
jp
das
gs
sbbl
loopne
andb
stos
bound
pop
jmp
xor
and
pusha
sub
push
jo
sbb
mov
and
pusha
in
lea
test
cmpl
out
shll
add
sub
shlb
cmp
sbb
in
mov
pop
arpl
aad
test
jp
gs
inc
add
icebp
add
xchg
movsb
andb
leave
adc
mov
int
int3
adc
setbe
push
jne
enter
inc
push
inc
sub
and
inc
cmp
rorb
inc
push
or
hlt
cmc
jb
aaa
aas
xchg
jmp
loopne
and
pop
inc
mov
push
mov
xor
mov
jne
addb
sbb
outsb
sbb
loopne
pop
sbb
and
cmp
cld
and
movsl
mov
push
rorl
xchg
mov
imul
push
psrld
idivl
push
dec
push
mov
push
rol
rorb
add
sbb
fwait
adc
rcll
mov
xor
mov
sbb
pop
and
inc
sbb
ss
cld
stc
cmpsb
inc
orb
aad
pop
int
adc
call
fcompl
loopne
inc
stos
fcoms
mov
xor
jnp
sarb
add
push
lock
inc
loopne
add
inc
outsb
fdivr
cmp
sahf
sbb
movsb
inc
cmpb
and
jg
out
out
aaa
xchg
loope
clc
repnz
stc
mov
push
mov
rorb
cld
pop
push
push
pusha
mov
fnstsw
and
inc
add
cmpl
lock
mov
scas
pusha
loopne
push
xor
and
mov
jecxz
inc
arpl
mov
mov
inc
pop
cmp
aas
jmp
pop
pop
fsubs
loopne
leave
or
mov
out
sbb
addr16
rcl
lds
movsw
or
inc
pop
add
loopne
xor
into
cwtl
out
mov
rcrb
dec
aam
in
sub
stos
loopne
lock
cmp
pusha
pusha
xor
insl
lea
hlt
in
mov
cmp
shlb
shrb
add
pushf
adc
out
sti
sbb
cmpsb
pusha
shlb
andb
push
stos
daa
and
fisubl
andb
shlb
push
je
sub
lahf
and
mov
shlb
pop
sub
inc
mov
and
push
pop
adc
sub
mov
xchg
cwtl
sub
sbbb
andb
jbe
inc
shlb
add
fwait
repnz
adc
xor
movsb
pusha
inc
dec
out
shlb
es
shlb
inc
je
cmpsl
dec
shlb
jp
inc
loopne
hlt
repnz
in
jp
pop
loop
addb
cmpsl
or
outsb
lret
not
sub
rcr
sahf
test
mov
mov
adc
dec
xor
outsl
test
pusha
sbb
das
cmp
add
add
inc
lods
and
xlat
pop
pop
in
outsl
push
mov
rolb
jmp
test
mov
out
cs
pusha
jne
xchg
add
pop
xor
adc
sbb
pop
fwait
andb
mov
or
mov
rorb
sahf
fcmovnu
enter
add
mov
xor
add
add
lea
and
andb
xlat
mov
bound
inc
lahf
adc
inc
gs
leave
mov
xchg
jge
stc
lret
loopne
jl
imul
push
pusha
subb
nop
push
cli
sub
test
sub
mov
out
adc
rolb
pop
lret
sarb
mov
add
rolb
push
jae
rclb
aaa
clc
mov
dec
add
sarb
sti
push
outsl
inc
sub
add
add
mov
loopne
icebp
and
inc
in
lcall
rorb
push
pusha
sub
loopne
pop
aaa
mov
ds
inc
lret
mov
ljmp
sbb
pusha
mov
addr16
movsb
add
mov
and
outsb
xor
shlb
sti
or
out
in
cmp
jle
loopne
jmp
loopne
xor
stos
inc
mov
and
add
mov
pusha
jle
push
inc
clc
jno
in
test
shlb
inc
mov
mov
cmp
and
clc
mov
jne
adc
xchg
repz
adc
jmp
dec
inc
leave
cmpsl
pop
jecxz
xchg
mov
out
sahf
fcoml
xor
ds
pop
push
add
int3
fcoml
dec
outsb
or
nop
lret
loopne
and
push
insl
or
add
loope
lcall
call
jecxz
sbb
and
adc
aas
mov
add
push
mov
or
aam
push
outsl
pusha
push
repz
fiadds
inc
add
fs
pusha
jne
daa
add
push
and
add
and
scas
or
xor
sbb
shlb
adc
mov
mov
pusha
jecxz
ret
ja
pusha
mov
or
pusha
mov
rcr
inc
add
lods
push
sub
add
shlb
dec
and
add
daa
or
add
inc
push
lods
pusha
add
and
add
loopne
into
out
out
lret
ja
mov
in
or
mov
mov
movsb
and
mov
push
mov
pusha
sbb
insb
loopne
inc
imul
andb
idiv
fistpl
and
add
nop
xlat
cmpsb
loopne
or
pusha
aaa
fnstenv
sahf
adcl
mov
ret
push
dec
or
mov
addl
int3
pusha
or
insb
pop
mov
xor
add
loop,pt
dec
jo
mov
sbb
lods
out
movsl
jl
push
push
mov
test
pop
aaa
inc
mov
fsubl
mov
add
into
jno
lcall
add
cmp
jp
xor
in
in
aad
jae
inc
call
mov
xor
jecxz
or
inc
leave
stc
movsb
rolb
rolb
pusha
orb
sbbb
push
add
lea
jp
and
mov
sbb
loopne
je
and
sbb
repnz
or
rorl
inc
mov
into
dec
pop
cmp
pop
or
mov
mov
push
punpcklbw
add
gs
adc
inc
mov
push
dec
out
sti
xchg
loopne
loope
shl
mov
inc
lea
jecxz
pop
mov
xor
inc
cmp
mov
and
subb
pusha
and
sub
adc
add
rolb
mov
nop
or
inc
xchg
xor
andb
shll
pusha
push
andb
aaa
jne
mov
andb
sub
shrb
lcall
pop
fidivl
sbb
add
push
mov
sub
stos
push
adc
dec
jmp
or
mov
icebp
jns
inc
mov
and
enter
ds
outsb
xchg
inc
fcmovnu
lock
jge
or
movsl
jle
add
les
jecxz
sbb
ss
ljmp
aaa
sahf
jg
aaa
stos
shlb
sti
adc
xchg
mov
test
or
fs
xchg
int3
push
cwtl
cld
popf
mov
sub
push
popl
lea
shlb
fmul
mov
inc
jns
cli
xchg
add
cmp
fstpt
mov
adc
mov
lcall
push
xor
inc
or
and
dec
xor
inc
pusha
insb
sbb
jle
add
cwtl
or
fcomp
sti
sbb
add
imul
loopne
mov
dec
andb
mov
sbb
adc
loopne
loopne
mov
imul
das
arpl
loopne
out
adc
sub
test
mov
mov
loopne
jns
scas
addb
test
and
xchg
popa
sahf
or
mov
hlt
xchg
xchg
adc
cld
or
into
push
addl
addb
rcr
xchg
rcrb
arpl
addr16
data16
inc
pusha
xor
movsb
inc
pusha
pusha
xor
test
sbb
loopne
xor
rolb
push
and
std
mov
gs
jmp
data16
lds
shlb
shlb
or
sti
ss
and
mov
push
test
scas
jae
add
jb
and
inc
je
jns
push
add
imul
aas
icebp
fs
push
cmpsb
shlb
mov
add
scas
rolb
stos
xor
mov
mov
mov
pop
mov
addb
jle
cmp
sbb
mov
cwtl
lock
pop
xchg
loope
adc
das
inc
dec
ficoml
loopne
sbb
lcall
notb
jb
lret
lret
imul
addr16
adc
mov
adc
loopne
pusha
add
xlat
test
adcb
xor
rolb
lods
add
lahf
push
jecxz
sub
or
lods
xor
mov
rolb
shrl
add
ss
sbb
push
push
test
pusha
fmuls
sbb
jl
repnz
mov
mov
fs
je
mov
jbe
rcr
pusha
out
pusha
pusha
add
cmp
inc
pop
cwtl
or
and
sbb
test
jne
mov
out
pop
cmpsl
and
and
cmc
sbb
daa
xchg
sbb
push
inc
add
sbb
adc
shlb
mov
incb
mov
addr16
jp
test
push
mov
repz
loopne
mov
daa
dec
jp
mov
mov
mov
jg
mov
subb
and
shlb
ja
mov
jecxz
cmp
adc
xor
scas
int3
or
ds
adc
mov
push
inc
loopne
push
adc
mov
shrb
dec
mov
rolb
rolb
loopne
sub
loopne
mov
insb
into
add
mov
adc
dec
sbb
fsubs
ret
inc
shrb
inc
push
inc
and
movsl
enter
addb
scas
push
adc
mov
jnp
ja
sub
stc
rcrl
and
pushf
or
and
outsl
cmpsb
andb
pusha
and
inc
pop
fdivl
jo
add
out
pop
mov
sub
inc
cltd
mov
or
fwait
or
add
pop
int3
xchg
xchg
mov
andb
test
sub
push
cwtl
inc
repz
mov
mov
xchg
cld
loop
dec
int
push
push
add
or
shll
mov
lret
rorl
jne
dec
sbb
repz
adcl
in
add
sub
and
cmp
add
mov
ss
sbb
add
or
cmp
jbe
cld
dec
aaa
cmp
pop
outsb
dec
pushf
pusha
sahf
push
mov
lret
loope
test
inc
inc
out
fdivl
push
cmp
and
mov
jb
dec
push
mov
pop
pusha
jne
or
pop
jbe
dec
out
pushf
imul
pusha
jns
or
sub
adc
out
pusha
movl
mov
add
and
sub
fistpl
cmp
mov
dec
sbbl
cmpsb
shl
std
je
pop
fcompl
cmp
mov
andb
xor
fstpt
mov
cmpsb
add
push
stos
and
in
push
imul
dec
insl
and
adcb
mov
fldl
mov
cltd
mov
xchg
movb
cs
adcb
les
add
pop
int
mov
loopne
dec
mulb
inc
inc
inc
jmp
and
andb
jle
dec
mov
fcompl
lds
arpl
dec
adc
pop
xchg
jg
jb
popf
hlt
sbb
pop
and
pusha
arpl
test
rorb
and
dec
adcl
stos
addr16
sbb
fimull
shl
sti
cwtl
jle
mov
mov
aam
in
adc
add
fs
shrb
add
pusha
rcrb
into
mov
mov
pushf
mov
mov
lret
rcrl
and
push
inc
push
xor
inc
ds
out
cli
mov
in
sbb
mov
pop
stc
pop
fwait
fwait
into
testl
insb
sbb
iret
sbb
jmp
jge
int
and
and
or
outsb
push
mov
add
gs
inc
add
and
jecxz
mov
mov
xor
or
add
push
cmc
jle
xor
add
lahf
sti
loop
test
add
sub
or
cmp
cmp
in
out
lahf
push
outsb
mov
insb
xor
ds
icebp
mov
scas
loopne
inc
and
addb
and
mov
rolb
frstor
mov
cmp
xchg
shl
rorl
jnp
pusha
inc
scas
pusha
pusha
scas
test
ror
pusha
shlb
mov
mov
push
sub
pop
inc
lret
arpl
pop
test
jnp
mov
sub
pusha
andb
push
push
dec
std
fs
loopne
ret
add
rorb
andb
flds
rclb
sahf
xchg
je
sub
and
mov
dec
push
add
and
cmp
pop
data16
hlt
shr
sarb
fisttpl
adcb
pop
add
out
xchg
dec
cmp
inc
jmp
out
dec
or
cmp
loop
and
mov
in
js
stos
test
sbbb
jp
inc
inc
iret
inc
out
imul
aad
cmpsl
sahf
shll
cmp
enter
add
cmc
shlb
mov
mov
cwtl
pushf
mov
loopne
movsl
addb
xchg
outsl
jmp
sub
orb
outsl
cld
pop
scas
and
imul
loopne
xchg
iret
fildl
mov
push
push
hlt
addr16
rcr
int3
cmp
cmpsl
pop
movsl
cmpsb
pusha
loopne
sbb
shlb
sbb
add
dec
adc
mov
and
pusha
push
bswap
xlat
mov
loopne
pusha
rolb
insl
ficomps
out
fistpl
cld
iret
mov
or
loop
adc
dec
add
adc
fcoml
lcall
loopne
and
das
or
inc
mulb
iret
xor
mov
testl
add
je
enter
or
pop
push
and
dec
inc
icebp
mov
inc
andb
les
mov
leave
in
mov
mov
sbb
sahf
fldt
dec
sub
adcb
mov
cmp
lds
fadds
jb
fidivrl
pusha
add
and
dec
fwait
int
bnd
mov
loopne
dec
shlb
lea
scas
addb
push
std
sarb
mov
sub
rcrb
int3
pop
dec
dec
xchg
negl
and
and
ss
push
out
pop
mov
mov
pusha
mov
dec
add
loop
add
add
sahf
cwtl
jno
andb
pusha
cmpsb
add
mov
sub
add
mov
fisubl
popf
xchg
sti
mov
add
fsub
sbb
inc
jge
popf
xor
sub
inc
xchg
inc
dec
ret
sub
add
test
and
loope
repnz
dec
dec
icebp
mov
xor
hlt
or
inc
cmpsb
and
pop
test
rolb
mov
js
xor
mov
add
loopne
sub
xchg
cmpsl
mov
add
jb
outsl
in
fdivrl
rolb
ss
pushf
mov
push
pusha
subb
les
pop
fwait
sarb
mov
lea
sub
sbb
and
data16
add
inc
repz
loopne
outsb
adc
fildl
inc
sub
aam
cmc
mov
rcll
sub
pusha
xchg
sti
push
add
pop
sub
mov
out
mov
mov
fptan
daa
mov
inc
enter
das
int3
mov
dec
outsl
push
lock
movsl
sub
xchg
jb
loopne,pn
adc
mov
inc
push
loopne
sub
out
loopne
xchg
mov
loopne
nop
or
fnstsw
cmpsb
pusha
mov
aam
enter
loopne
push
or
pusha
lret
sub
add
stc
repz
push
or
lock
xacquire
xchg
dec
in
addb
loopne
outsl
and
mov
lcall
xchg
out
scas
out
popa
fcmovnb
test
adc
xchg
jmp
add
mov
fwait
nop
stos
shl
ficoml
mov
inc
or
xor
inc
pusha
jo
addr16
lret
vsubsd
loopne
cld
aas
aas
bound
filds
int3
fcomps
cmpxchg
push
push
jle
and
or
loopne
out
test
aaa
xchg
out
test
in
nop
leave
icebp
adc
xor
movsb
and
js
cltd
lcall
mov
lds
aad
dec
pusha
push
jns
pusha
loopne
into
test
inc
jnp
andl
jnp
cltd
fists
jo
xlat
jmp
push
mov
pop
sub
mov
loop
in
mov
pop
stos
lahf
cmc
imul
leave
jmp
mov
insb
push
push
add
rclb
int
mov
pusha
mov
fsubrs
jbe
cmp
and
test
pusha
jmp
mov
cmp
repz
adc
rol
das
mov
fdivrs
mov
sbb
outsl
push
cmp
icebp
sti
sbb
mov
lret
addb
pusha
rclb
cmp
mov
pusha
test
pusha
push
es
adc
icebp
inc
mov
mov
lods
loopne
mov
mov
dec
cltd
int
in
add
loopne
adc
nop
jno
xchg
add
lds
outsl
inc
scas
shlb
jbe
xlat
inc
out
aad
in
ret
inc
add
mov
lock
adc
aad
jg
mov
imul
gs
outsb
test
loopne
mov
jle
icebp
xor
iret
and
xor
or
iret
push
movb
add
sbb
mov
mov
xchg
cs
test
shlb
pop
out
mov
sub
ljmp
gs
adc
js
add
popa
mov
inc
xor
sub
push
insb
mov
shlb
push
push
mov
inc
add
mov
pop
jns
adc
jle
shrb
in
jns
mov
aaa
out
neg
iret
jmp
ljmp
xor
jne
loopne
sahf
ret
push
enter
push
push
xor
sub
and
sbb
mov
cltd
rorl
scas
rol
xorl
adc
sbb
loopne
jns
aad
shl
scas
mov
pop
dec
jbe
or
and
adc
mov
cmp
adc
into
lahf
fbld
add
mov
cmp
pusha
inc
push
testl
inc
mov
rolb
inc
mov
insl
and
repnz
out
movsb
and
call
push
pop
cmp
xor
cmc
mov
call
rorl
and
dec
jl
add
cmpsl
andb
cmp
lahf
or
subb
int3
fimull
sub
and
adc
pop
pop
push
jno
push
movsb
andb
shlb
into
movsb
mov
add
in
push
cwtl
mov
dec
cmpsl
mov
sub
xlat
jl
mov
test
pusha
cmp
push
cmc
mov
mov
cmc
or
xor
stc
ror
sub
and
inc
xchg
repz
cmp
shll
andb
shlb
xchg
push
pop
sahf
ss
jmp
ss
mov
inc
inc
pop
mov
add
stc
sbb
jo
mov
mov
inc
loopne
andb
dec
jg
sub
xchg
mov
adc
or
mov
inc
data16
adc
inc
cltd
adc
cli
test
mov
and
and
pop
jae
adc
loopne,pn
imul
sbb
addb
and
pusha
test
add
daa
inc
adc
add
or
rolb
leave
ss
call
jno
ss
sub
or
repnz
pusha
loopne
inc
add
fistl
push
inc
inc
dec
cmc
stos
pusha
add
mov
dec
adc
add
jmp
mov
push
test
push
inc
inc
mov
js
or
jbe
addb
fsubp
jge
shlb
lret
jl
sbb
xchg
scas
pusha
pusha
cld
insb
aam
mov
inc
imul
jbe
scas
xchg
mov
popf
dec
popf
push
test
sarb
cmp
cmp
shll
mov
lods
mov
and
loopne
mov
mov
cli
jno
movsb
pusha
add
push
stc
sub
call
add
pop
iret
mov
rorl
and
jae
mov
inc
pusha
mov
popa
push
enter
xor
add
loope
push
std
push
or
fmull
je
cmpsb
inc
add
pusha
das
outsl
addb
jb
loopne
stc
xchg
mov
lods
mov
push
pusha
cld
add
mov
add
imul
loopne
and
push
or
and
adc
andb
inc
out
imul
cmp
or
mov
inc
cltd
das
adc
pusha
cli
jle
popf
adcl
mov
rcl
cmp
test
popf
test
dec
shll
stos
pop
xchg
jmp
inc
xchg
sarl
and
xchg
cmpsb
andb
and
sbb
mov
pop
pop
pop
push
fildl
andl
shrb
dec
test
and
popf
sbb
sbb
cld
and
add
add
pop
nopl
jne
cs
sbb
ret
mov
mov
bound
mov
or
addb
loopne
mov
imul
iret
jl
xchg
sub
stos
inc
mov
mov
lock
mov
add
jbe
dec
mov
cltd
inc
xchg
ljmp
jl
mov
or
lret
aad
jl
dec
xchg
arpl
sahf
dec
push
dec
ja
int
subl
nop
je
lods
loopne
mov
cltd
test
scas
icebp
insb
inc
addb
jmp
inc
loopne
add
enter
inc
ficomps
or
mov
aaa
icebp
sub
and
xor
cmp
jnp
push
mov
and
dec
test
or
ljmp
fcmovnbe
fcmovbe
push
popf
lds
push
xor
lea
mov
xor
lcall
out
and
js
aam
lret
ljmp
outsb
jo
repz
sbb
mov
mov
loopne
xor
outsl
stc
lret
xchg
pusha
loope
fwait
repnz
sub
daa
mov
mov
and
inc
loopne
push
add
pusha
rol
sbb
mov
push
ds
rcll
lea
sbb
xor
cwtl
xor
push
sub
or
idivb
out
push
add
mov
aad
push
popa
mov
pushf
push
sarl
dec
inc
je
insl
pop
out
push
mov
scas
and
shlb
cmpl
jb
mov
mov
ja
fildl
jg
loopne
cmp
sahf
xchg
test
data16
cmc
mov
ja
add
testl
inc
inc
cmp
shl
stc
pop
addr16
sahf
lea
loopne
pop
mov
sub
and
ds
cmc
sub
pusha
mov
or
loopne
int3
cmp
cmp
and
pusha
sbb
sti
mul
sub
shlb
and
ja
xor
jg
loopne
shll
add
mov
and
mov
lea
andb
or
rclb
jno
and
jge
pop
push
and
and
push
jg
loope
cwtl
push
repz
xchg
cmpsb
and
cmp
mov
sub
dec
jbe
adc
cmpsl
cmp
push
adc
mov
ds
in
es
addb
mov
mov
enter
sbb
push
mov
push
loopne
sub
in
push
mov
loopne
fsubrs
imul
push
into
std
dec
addr16
add
subb
das
mov
and
mov
jae
push
cmp
xchg
scas
and
outsl
dec
push
inc
nop
mov
xlat
fdivrs
test
xchg
mov
mov
push
push
pusha
pusha
cli
inc
and
add
pusha
pop
in
push
test
pushl
fadd
int3
clc
lcall
xor
in
pop
aaa
clc
fsubrl
mov
popa
lods
push
add
and
sti
jae
pop
shll
in
mov
cltd
pop
sbb
mov
and
mov
jno
add
or
add
cmc
pop
out
aas
sub
cmp
lret
cld
sbb
test
inc
pop
arpl
pusha
in
xchg
loopne
sub
add
pusha
xor
ljmp
jno
data16
pop
sub
rclb
lahf
scas
adc
sub
fildll
jmp
inc
sub
pushf
insb
loop
add
stos
fdivrl
sbb
jle
test
and
test
scas
inc
orb
dec
adc
add
jl
pusha
mov
rclb
inc
imul
cmpsb
pusha
loopne
pop
lock
and
shrb
cmovne
sbb
mov
sub
fildll
add
xchg
jg
fistpl
gs
mov
inc
jae
mov
call
das
jo
dec
jmp
dec
pop
cmc
xor
jecxz
rcll
mov
ror
movsl
xor
mov
dec
jg
xor
bound
and
rclb
rorb
sub
loopne
sub
pusha
stos
out
sbb
or
andb
push
or
push
dec
mov
and
pusha
xchg
mov
mov
push
pushf
dec
xor
jg
xchg
push
dec
jne
loopne
xor
outsb
jbe
out
pop
fdivl
js
lods
leave
jnp
mov
pusha
repz
inc
inc
xchg
cmpsb
mov
andb
push
push
fwait
xor
add
sbbb
dec
mov
mov
call
ror
hlt
mov
xor
mov
stos
xchg
sub
rcrb
ss
in
xchg
mov
push
fists
mov
fld
push
xor
inc
loopne
jle
inc
jb
xchg
rorb
stc
pop
dec
push
nop
adc
add
rorb
inc
add
mov
and
sub
mull
ret
xchg
mov
inc
or
sbb
loopne
xchg
mov
pusha
fstps
iret
push
push
andb
dec
bound
inc
adc
sbb
cmp
push
and
or
in
fsub
ja
scas
inc
fildll
jns
imul
fs
fisubl
mov
imul
add
cmp
lds
out
movsb
and
loopne
loopne
mov
cmp
outsb
rolb
inc
loopne
or
loopne
movsl
xchg
and
mov
cmpsb
inc
add
adc
loopne,pt
pop
sub
call
sub
icebp
out
xchg
cmc
xchg
aas
jne
push
sbb
mov
pusha
inc
mov
sahf
push
shlb
mov
gs
add
gs
push
es
cmpb
and
sub
xor
cltd
xchg
pop
outsb
cmc
push
repz
pop
pop
inc
or
sahf
mov
outsl
xor
and
jne
rclb
inc
sbb
sbb
mov
addb
fdivrs
xchg
repnz
pop
hlt
addr16
cmc
sbb
jecxz
leave
jle
adc
into
lret
sub
mov
mov
dec
leave
or
shlb
int3
divb
xor
aad
xchg
inc
lret
inc
cmp
jl
rol
popf
arpl
loopne
adc
pop
incb
hlt
xchg
add
inc
cli
pop
insl
add
or
in
and
mov
or
mov
shl
mov
loopne
leave
and
sbb
cmp
xlat
sub
imul
add
in
cmc
int
adc
mov
sbb
loopne
shlb
adc
jecxz
aas
push
mov
mov
subb
loopne
mov
cli
lret
inc
shl
cmp
fistps
pop
add
mov
xchg
sub
and
andb
jns
or
add
and
sbb
mov
sub
pop
fistps
dec
xchg
mov
sub
jp
in
lahf
fs
std
sub
stos
loopne
dec
push
imul
daa
jl
inc
and
aaa
add
and
rolb
and
dec
aaa
jno
scas
jp
jb
push
fs
loopne
sarb
jbe
sahf
jae
rclb
aam
push
in
push
and
add
mov
add
add
add
pusha
decb
or
add
loopne
inc
xor
lock
fs
mov
pop
or
andb
inc
fwait
into
filds
test
dec
add
cwtl
sbb
inc
mov
and
cmpsb
and
insb
inc
mov
inc
adcb
ljmp
jl
in
jae
xlat
jne
imulb
pop
sub
add
icebp
or
out
repz
call
rcpps
cmp
cwtl
scas
shlb
pusha
and
mov
ljmp
adc
xchg
pop
ficoms
lcall
sbb
push
pop
lods
ret
nop
lahf
shrb
andb
cmp
movsl
pop
addb
sti
add
mov
push
xor
les
sub
mov
sub
and
push
sti
lret
mov
dec
push
jno
inc
fucom
cmp
lock
and
loopne
shr
sub
addr16
rolb
stos
andb
mov
enter
rolb
mov
xor
push
dec
inc
xor
rolb
mov
inc
mov
fcomp
push
arpl
ret
mov
shl
push
cltd
and
xor
push
rcrl
inc
jb
add
jbe
xchg
gs
int3
mov
ss
mov
mov
ja
loop
sub
xchg
push
inc
daa
push
mov
loopne
sub
ret
xchg
sbb
push
inc
shlb
cld
inc
into
aad
testl
add
out
loopne
jo
shlb
loopne
cld
iret
icebp
or
jp
pop
pop
loopne
jge
add
hlt
push
and
mov
sarl
inc
xchg
pop
dec
mov
mov
push
es
sbbb
sub
cmp
dec
mov
sbb
in
fistpll
jb
sub
xchg
scas
pusha
or
mov
mov
mov
sub
xlat
push
push
addb
lods
inc
mov
xchg
cmpsb
andb
push
sub
out
mov
mov
xchg
xor
and
jmp
rorb
movsb
and
push
in
mov
add
das
repnz
stos
xchg
rorl
cltd
and
cmpb
shlb
xchg
mov
shl
add
jno
lods
inc
pusha
addr16
das
push
xchg
sub
mov
addr16
sbb
call
addr16
lea
inc
addr16
mov
pusha
or
add
inc
or
in
cmp
xor
xor
js
jo
out
out
aas
add
pop
and
adc
lret
insl
call
mov
xchg
and
mov
js
dec
in
push
dec
sub
pusha
sub
test
add
push
cmpsb
add
mov
sti
lock
cmp
sarb
and
out
jno
inc
pusha
xchg
hlt
xchg
lret
std
push
inc
mov
jg
inc
jo
int
adc
mov
jo
loopne
in
xchg
aad
mov
addr16
data16
mov
rcll
jne
or
inc
faddl
loopne
or
mov
pop
inc
xor
xchg
ficoms
inc
adc
mov
pusha
add
xchg
xchg
push
push
sub
inc
pop
popa
jecxz
sub
and
and
popa
mov
push
jl
insb
mov
pusha
mov
call
xor
cmp
lds
xchg
add
xchg
out
mov
push
loop
cmp
addb
shlb
and
sbb
xchg
shlb
insl
shlb
call
mov
aas
mov
dec
push
add
mov
jecxz
shlb
sti
ret
mov
inc
loopne
sub
loopne
in
rol
pop
aas
add
add
xlat
push
mov
les
lret
and
mov
pop
sbb
xchg
sbbb
mov
fdivs
adc
inc
pop
cmp
pusha
fbld
and
loopne
lods
insb
xchg
call
mov
or
or
mov
mov
xor
imul
sub
xor
and
pusha
dec
push
add
je
imul
jmp
adc
mov
cmp
jecxz
mov
and
push
push
and
aas
loopne,pn
clc
or
sub
or
rolb
or
stc
cltd
inc
sbb
subb
and
add
dec
fiadds
into
mov
shlb
inc
pop
and
rorb
mov
cltd
popf
sub
ds
mov
leave
mov
out
sti
movsl
sub
mov
hlt
sub
adc
mov
mov
and
add
rolb
pusha
mov
add
add
ss
int3
sub
pop
mov
gs
adc
stc
mov
inc
insl
mov
lcall
leave
jle
and
dec
mov
rolb
das
add
pusha
rorl
cmc
sbb
or
and
addl
rcrb
jbe
or
xorb
and
and
mov
jnp
mov
jns
xchg
jo,pt
int3
test
add
add
xchg
enter
add
ljmp
enter
ficoms
loop
adc
inc
and
sar
inc
mov
pusha
and
ret
xchg
inc
mov
loop
enter
xor
loop
xor
aam
pop
fcmove
cmpsb
mov
cmp
inc
ljmp
xchg
fistpll
fwait
pop
cmpsb
loopne
mov
popa
dec
xchg
iret
mov
sub
and
roll
pusha
xlat
shll
cmpsl
popa
jae
add
xor
movsl
stc
push
xchg
cmpsl
jmp
loopne
mov
pusha
and
and
js
orl
xorb
push
jne
shlb
loopne
jno
xchg
push
inc
mov
fdivrl
ljmp
add
mov
push
arpl
int3
pmuludq
cmpb
leave
mov
mov
les
mov
int3
test
loopne
mov
ljmp
andb
inc
pusha
add
daa
dec
add
cwtl
lock
ret
rcrb
pushf
jmp
sub
rol
das
inc
cmpsl
cmpsl
dec
xlat
out
clc
mov
subb
stos
mov
dec
outsb
or
pushf
hlt
or
add
pop
mov
aas
lret
jb
and
fistl
or
sarb
lds
push
out
int3
or
cltd
shlb
mov
pusha
inc
scas
aam
outsl
rcll
scas
and
pusha
ja
and
jp
daa
gs
sub
repz
xor
and
xchg
xchg
pop
jecxz
loopne
xchg
pusha
pop
ret
xlat
or
loopne
inc
inc
or
mov
dec
jle
shlb
mov
add
fcomps
test
inc
pusha
sub
loopne
cmp
pop
jmp
das
gs
insb
and
test
adcb
push
loopne
sbb
callw
in
jmp
rorl
out
sub
loopne
mov
jg
cmp
dec
xor
or
xchg
mov
jmp
add
cmp
fstps
icebp
sahf
sti
mov
loopne
push
or
push
or
push
add
inc
imul
repz
repz
cmc
mov
mov
mov
mov
or
mov
fdivl
pop
clc
in
pop
in
inc
and
cltd
and
shlb
notb
movsb
andb
shlb
scas
mov
in
push
in
repz
inc
out
dec
mov
js
mov
mov
xchg
push
sti
enter
loopne
add
iret
outsl
ja
imul
bound
add
aas
jb
mov
in
aam
test
pop
test
fs
arpl
inc
mov
loop
leave
fisttps
or
xor
or
add
jmp
mov
add
test
rolb
inc
pop
adc
or
mov
pusha
negb
or
leave
jno
loop
loopne
ficoml
sub
negl
push
adc
push
cmp
sbbb
add
ljmp
addb
mov
loopne
dec
pop
jnp
and
out
push
push
imul
call
cltd
stc
sbb
fildll
mov
arpl
and
andb
sti
cmp
xchg
loopne
lahf
inc
fs
inc
xor
add
add
mov
add
add
enter
add
stos
stc
pop
mov
push
movsb
loopne
insl
fistpl
or
xchg
pop
mov
shlb
inc
pusha
fld
imul
add
or
sahf
mov
mov
lcall
and
add
mov
add
popa
adcl
mov
fistps
jne
add
daa
mov
sub
and
movsb
rol
out
ds
addb
inc
mov
loope
add
push
mov
loopne
pop
add
idivl
inc
loopne
mov
mov
testb
xor
pop
mov
in
push
mov
push
and
xor
or
mov
movsl
and
dec
adc
stc
pop
sub
cwtl
and
scas
adc
pop
cltd
xchg
in
jmp
js
imul
jbe
std
sti
fldl
mov
fnstsw
loopne
sarl
shlb
sbb
rcrl
add
pop
jnp
sub
pusha
mov
add
pop
or
lret
outsb
pushf
xor
fcoml
mov
imul
and
add
mov
pop
jge
push
adc
pop
fnstsw
mov
mov
cmp
outsl
aas
mov
fiaddl
mov
inc
aam
sub
pop
cmpsl
fsubl
or
inc
dec
adc
fdivrl
sbb
fsts
mov
sub
rcrb
add
loopne
sub
mov
in
jg
lret
js
cmp
mov
inc
push
arpl
add
xor
adc
scas
inc
loopne
mov
ja
and
loopne
sbb
or
lods
xchg
cmp
add
mov
xlat
push
rolb
or
inc
loopne
pushf
shl
movsl
xor
add
and
shlb
mov
push
mov
and
loopne
jno
inc
clc
mov
scas
inc
fistl
mov
cmpsl
inc
adc
adc
xor
mov
and
sub
inc
mov
xor
mov
lcall
add
decb
sbb
loope
or
add
mov
fistpll
outsb
push
xchg
sbb
test
loopne
add
cmc
mov
add
mov
mov
mov
insl
sbb
inc
imul
mov
sbb
push
jecxz
int3
subl
or
loopne
notl
sub
and
shrb
push
notl
sahf
pop
dec
inc
jmp
imul
inc
sbb
mov
addb
sub
shl
mov
lods
cmpsl
daa
or
mov
add
fstpl
cmpsb
and
leave
pop
repz
loopne
sbb
leave
jle
jnp
or
ja
loopne
sbb
and
xchg
jmp
xchg
lret
sbb
daa
add
imul
out
imul
add
mov
inc
jae
sbb
inc
mov
cmp
ja
push
insl
sub
mov
loopne
inc
sti
push
rolb
mov
mov
sub
lret
cmp
adc
call
sbb
iret
mov
inc
mov
jnp
dec
out
mov
mov
add
ret
cmc
cltd
mov
pop
fnstcw
int
xchg
test
mov
addb
sub
andb
and
inc
stos
add
mov
inc
movsb
inc
inc
jno
jnp
inc
cmpsl
cmp
jle
mov
inc
sarb
shl
and
inc
popa
mov
add
insl
stc
xchg
push
push
mov
shlb
sub
daa
aas
adc
hlt
dec
jge
stos
mov
dec
mov
nop
mov
jno
pop
je
sub
shrb
andb
and
or
jnp
add
insb
pop
loope
sti
sub
loopne
fimull
add
xor
pop
and
loopne
out
js
mov
andb
pusha
xor
mov
and
shr
sub
loopne
mov
mov
inc
jmp
jl
and
popa
mov
loopne
mov
std
insl
and
inc
loopne
movsb
rolb
pop
int
cltd
adc
scas
inc
and
or
mov
ret
rcpps
mov
jnp
add
lds
add
loopne
repnz
sub
pusha
popa
mov
push
jmp
inc
and
xchg
jno
in
add
repz
adc
xchg
loopne
cmp
mov
jl
xchg
pusha
jle
shll
and
jno
sahf
daa
ret
sbb
cmp
inc
dec
lret
inc
push
addb
xor
imul
mov
push
ljmp
mov
insl
movhps
rolb
out
rorb
lods
leave
pop
subl
cmp
or
jae
adc
negb
test
popf
cmpsl
clc
xchg
les
pop
add
and
push
cltd
pop
mov
add
mov
adc
xor
fstpl
and
jne
sub
pop
in
pusha
cmp
fildll
push
pop
dec
lahf
addb
mulb
sbb
into
pop
mov
cmpl
lds
mov
ret
pop
fwait
sbb
push
jl
cltd
xor
inc
inc
jmp
in
jne
sub
inc
aas
pop
aas
lret
adc
and
inc
mov
in
cmpsl
jge
lahf
xchg
cwtl
repnz
sub
fldt
mov
add
and
jg
mov
fdivrl
outsb
push
je
xchg
mov
icebp
mov
xchg
adc
cmpsl
jg
sar
in
js
fmuls
ret
pop
out
sti
and
dec
mov
mov
xor
rcr
and
adc
leave
orl
cmp
mov
dec
gs
sub
pusha
pop
call
xor
cmp
xor
pop
lods
mov
clc
mov
dec
leave
aam
add
stos
pop
xor
ljmp
or
xlat
dec
in
cmpsb
mov
ja
sbb
in
sub
cltd
cmp
pop
out
loopne
pop
mov
in
fsubl
pop
sbb
xchg
mov
pusha
loop
loop
andb
sarb
push
jnp
and
mov
je
repnz
sahf
or
mov
jbe
enter
add
cmpb
inc
mov
add
jmp
xorl
inc
loopne
or
add
or
loopne
imul
outsl
and
out
xor
scas
mov
int
arpl
inc
push
cmpsl
ja
test
loopne
mov
xchg
leave
sub
pushf
outsb
loop
xorl
cld
ret
pusha
add
pusha
add
jnp
pusha
andb
inc
and
pusha
jge
sahf
dec
lret
scas
jnp
aas
ljmp
push
imul
adc
pusha
or
addb
sub
addb
stc
push
lahf
pop
add
and
test
mov
pop
outsl
arpl
mov
popa
push
mov
fsubs
loopne
shrb
jmp
dec
call
inc
ja
add
jmp
ds
dec
imul
sti
lock
fists
dec
insl
jnp
stos
iret
and
mov
cmp
xchg
jno
dec
fwait
jbe
scas
pop
adcl
icebp
xchg
loopne
ret
jg
cmp
std
loop
out
pop
cmp
inc
mov
pushf
sub
pusha
add
push
jns
inc
and
cltd
pop
gs
xor
rcrl
shlb
cmp
and
sbb
or
fdivl
pop
mov
dec
lahf
push
call
sbb
mov
and
pusha
push
add
mov
mov
scas
andb
cltd
shrb
pop
pop
push
shlb
push
inc
rcll
fstp
dec
dec
mov
std
cwtl
add
add
jmp
popf
lock
leave
mov
out
or
jp
lcall
rcl
sub
in
pop
loopne
out
fidivrs
add
add
hlt
jnp
dec
fisttpl
cmpl
mov
mov
nopl
not
jbe
and
and
dec
and
inc
xor
scas
cmovg
out
addr16
fwait
in
test
mov
pop
xchg
jl
out
sub
inc
sub
movsb
add
aad
pop
insb
add
ret
push
stc
std
movnti
into
stos
inc
mov
adc
pop
pop
in
imul
mov
rclb
push
and
out
inc
jns
andb
jl
addb
jp
lcall
movsb
inc
adcb
enter
pop
pop
cmpsb
shlb
int
jne
cs
shl
mov
mov
push
loopne
mov
and
mov
cmc
jne
mov
lock
mov
loop
lcall
cwtl
sbb
pop
inc
jp
rorl
mov
into
insl
jge
xor
mov
loopne
mov
pushf
inc
pop
pop
or
pusha
cmpsb
and
sub
mov
shlb
mov
inc
out
test
inc
shrb
test
addb
imul
jl
bound
inc
ret
shrl
xchg
push
mov
sbb
std
bound
inc
pusha
outsl
out
push
jge
shrl
pop
mov
das
fwait
stc
loop
repnz
fimull
push
sbb
dec
pop
roll
loopne
pop
sbb
mov
xor
add
mov
sub
inc
inc
xchg
jp
mov
mov
lds
test
loopne
imul
xchg
xchg
mov
in
shl
xor
push
rol
data16
jp
repnz
stos
lods
aaa
mov
shlb
rolb
cld
jmp
fldl
sub
das
call
xor
cwtl
and
dec
xchg
mov
andb
and
mov
sub
je
and
or
dec
rclb
std
sub
shrb
ss
or
outsl
cmc
dec
les
sub
mov
icebp
xorl
repnz
mov
ss
imul
mov
pusha
and
mov
xchg
and
adcb
xor
sub
cmc
pop
out
mov
push
xchg
rorb
push
cmp
mov
sahf
popa
cmc
test
inc
fmuls
loopne
jns
rcll
inc
mov
add
out
dec
adc
mov
subb
outsl
lret
xor
xchg
mov
mov
loopne
jge
push
pusha
mov
sarb
sub
mov
push
mov
decl
or
lcall
rol
mov
out
stos
loopne
scas
mov
jo
inc
bnd
outsl
jg
adc
dec
dec
dec
mov
and
cmp
xor
les
sbb
and
sti
fsubs
stc
jle
pop
push
rolb
mov
xor
mov
addb
sub
xorb
mov
push
xchg
stos
or
stos
and
pusha
cmp
pop
mov
les
jo
xchg
jne
rolb
fidivs
xchg
lret
inc
push
push
in
mov
shlb
shlb
inc
sarb
add
fmuls
mov
jl
int3
les
pushf
jmp
mov
movsb
shl
je
add
and
pop
call
test
adc
dec
dec
jle
data16
add
sbb
test
mov
fbld
andb
subl
mov
call
mov
mov
aad
mov
rcll
push
inc
andb
xchg
mov
fisttps
and
stc
xor
ljmp
adc
sub
and
in
jns
lret
adc
pusha
and
dec
dec
cmp
loopne
insl
test
rorb
inc
loopne
lcall
and
and
mov
pop
push
jecxz
dec
sub
andb
mov
xchg
mov
xchg
and
iret
gs
shlb
xor
xor
adc
jb
outsl
xchg
sbb
pusha
sbb
mov
mov
inc
add
lret
push
mov
fidivrs
lcall
add
lcall
movsl
push
adc
loopne,pn
sub
shlb
jb
mov
and
pusha
inc
jl
inc
mov
stos
cltd
sbb
aam
in
ret
sub
and
cmp
pop
popf
aam
enter
add
sub
and
push
pop
sti
push
int
sbb
push
dec
insb
jg
andb
enter
jmp
inc
outsb
cltd
inc
pop
lods
fdivp
stos
xor
push
push
das
mov
pusha
pusha
sub
and
pop
sbb
call
cmpl
test
mov
xchg
or
popf
cmp
inc
rcrb
rolb
mov
push
add
lods
mov
aam
fadd
sti
std
and
enter
in
popa
iret
inc
add
sbb
add
or
loopne
adc
insl
out
outsb
xor
loop
andb
pusha
outsb
mov
xchg
ret
notl
or
push
jge
sbb
dec
in
mov
sbb
dec
fadds
loopne
add
cmc
cmp
movsl
jg
subl
and
xor
jae
jmp
pusha
and
ret
lods
add
push
clc
xchg
repnz
push
inc
ret
shlb
das
jp
add
rcrb
dec
clc
pop
and
add
adc
loopne
inc
sbb
shrb
push
pusha
sbb
add
mov
aaa
filds
adc
decl
pusha
inc
nop
arpl
aas
cmp
loopne
add
mov
and
or
mov
cmp
xchg
cs
pop
inc
cmp
andb
mov
repnz
shlb
inc
ja
clc
outsl
sbb
mov
xchg
in
pusha
inc
xchg
pop
scas
sbb
jge
and
insl
jge
gs
jne
fwait
mov
and
das
dec
movsl
int3
inc
jns
and
and
sbb
out
les
adc
push
loopne
push
addr16
mov
pusha
or
loopne
imul
popa
mov
mov
push
add
add
or
addb
pop
add
popa
mov
and
loopne
mov
dec
das
out
sub
pusha
pop
add
mov
andb
inc
test
add
lcall
in
cwtl
mov
subb
xchg
push
fsubl
loop
mov
fnstcw
xor
lcall
sbb
addb
jmp
dec
and
and
sbb
in
stos
add
dec
ret
fwait
rcrl
dec
cmpl
jnp
enter
add
add
push
mov
in
icebp
pop
sub
cmp
push
push
mov
xchg
pusha
push
and
pop
pop
roll
nop
ljmp
fstp
sub
inc
mov
sbb
mov
pusha
loopne
mov
jae
icebp
mov
rcrb
add
mov
adc
mov
loop
push
inc
sub
aam
addl
push
dec
xor
inc
pusha
add
inc
or
cmp
or
test
inc
inc
nop
cmc
xchg
or
jecxz
xor
jbe
add
test
addb
inc
test
fndisi(8087
and
and
scas
or
jbe
adc
adc
pop
xchg
andb
lods
inc
loopne
rcll
sar
cmp
mov
arpl
add
imul
scas
shlb
cmp
cld
mov
inc
loopne
mov
and
xchg
aad
outsb
and
orb
lods
test
orb
sub
and
mov
sahf
pop
into
sbb
rolb
mov
fs
or
mov
iret
fildl
push
mov
arpl
push
shrb
and
inc
sub
gs
adc
adc
mov
rcrl
sbb
dec
lods
and
jecxz
and
xlat
or
adcb
insl
jle
loopne
lods
popa
addr16
inc
and
loopne
in
xchg
cmpsb
add
or
sbb
cmp
jae
xor
mov
push
sahf
xchg
jbe
cmc
or
in
nop
and
loopne
loopne
jae
lods
and
lds
push
rolb
mov
loopne
cwtl
add
sub
lcall
jg
popl
rolb
pusha
mov
adc
test
rcrb
and
fs
mov
pusha
pusha
push
mov
loopne
mov
ljmp
jno
in
mov
add
cwtl
dec
arpl
jns
loopne
jo
outsb
sbb
in
mov
inc
inc
jb
xchg
stos
andb
xor
mov
jnp
loopne
les
add
popa
mov
andb
sti
ljmp
xor
xchg
mov
add
pop
add
sub
add
nop
pusha
stos
add
scas
loopne
dec
dec
dec
mov
fwait
addr16
andb
inc
jg
push
hlt
aad
and
das
mov
add
sbb
fs
lcall
push
fbstp
iret
cmpsl
les
mov
and
mov
and
mov
mov
pop
rcrl
xor
pushf
or
shl
leave
mov
pusha
sarb
push
repz
fcomip
and
pusha
in
test
and
sbb
mov
stos
icebp
sbb
xchg
or
adc
adc
mov
and
ds
fistps
jae
into
lods
mov
hlt
sub
lret
jl
cli
jns
gs
mov
sub
xchg
nop
sub
loopne
cmpl
adc
lret
inc
aaa
andl
scas
and
mov
popf
pop
cwtl
push
rolb
lret
nop
mov
inc
pushf
lret
xorb
sub
xchg
dec
aam
mov
mov
mov
jmp
xchg
push
jmp
sbb
xor
pop
lods
xchg
sub
je
add
outsl
ja
add
shrl
jnp
loope
mov
mov
push
shlb
mov
stos
add
andb
addb
lahf
push
ljmp
mov
pusha
cmp
add
das
cmpsl
addr16
loopne
mov
addr16
rol
ss
andb
pop
xchg
push
xchg
in
jge
aas
xchg
fdivl
loopne
sahf
push
jnp
push
inc
and
inc
ffreep
mov
add
mov
push
xchg
mov
clc
clc
mov
xchg
rorl
pop
jbe,pt
mov
lret
loopne
ds
loopne
lahf
jns
dec
mov
lret
mov
aaa
popf
pop
and
adcb
xor
adc
popl
push
mov
xor
sub
orb
sbb
loope
jge
add
sub
rol
xchg
repnz
js
jae
push
or
mov
fidivrl
sbb
jnp
and
shrl
shlb
shlb
repz
pusha
hlt
xor
xchg
aas
pop
les
push
sbb
ret
push
pop
callw
ja
into
sahf
jno
loop
repz
jns
and
inc
fcmovnb
sbb
push
test
jl
hlt
dec
dec
jmp
das
cmpsb
pusha
mov
idivl
jbe
cmp
jae
loopne
mov
loopne
fst
stc
xor
and
inc
sbb
xor
cs
mov
out
xor
pusha
mov
fs
add
adc
orl
add
sahf
jle
es
pusha
sub
lret
mov
cltd
and
loopne
jb
stc
daa
sub
mov
mov
push
mov
in
mov
adc
mov
jne
inc
cmp
mov
rorb
andb
cmp
lahf
mov
pusha
inc
sbb
test
shlb
fnstsw
mov
jp
mov
mov
dec
je
add
or
and
mov
jge
mov
call
and
in
test
scas
xor
rolb
add
dec
lcall
leave
sbb
adc
lret
lock
lods
mov
movsb
pusha
mov
inc
pusha
jbe
insb
jmp
mov
test
cmp
fs
inc
imul
dec
imul
mov
inc
mov
dec
dec
and
outsb
lahf
test
mov
int3
sbb
ret
rolb
popa
es
loopne
clc
or
xor
and
add
je
test
add
jecxz
ja
movsb
pusha
loopne
xchg
cmpl
outsb
ret
or
jmp
fcompl
xor
lock
in
dec
leave
dec
cmp
and
rclb
and
into
je
shlb
lds
ret
push
dec
loopne
dec
loop
out
inc
aad
test
pusha
shr
jmp
add
add
aas
lret
stc
int3
outsb
mov
rol
jo
mov
les
xor
mov
push
mov
cmp
and
pop
dec
cmpsl
xchg
outsl
push
mov
popf
cmc
adc
fwait
push
aad
jo
jg
and
mov
xor
and
sbb
cld
dec
lret
xchg
mov
lods
loopne
lods
out
xor
sbb
fsub
scas
hlt
addr16
es
xchg
cmp
test
add
mov
stos
shlb
sti
push
pop
add
inc
loopne
ja
loopne
pusha
add
sbb
cltd
sbb
jb
sub
addb
cmp
inc
mov
ret
xor
fsts
and
pusha
adc
out
lods
mov
hlt
mov
fstpt
sbb
or
inc
cli
jae
inc
gs
xchg
sub
pushf
addr16
xchg
jbe
jae
lcall
inc
sbbb
inc
jae
movsb
inc
mov
into
outsb
aam
test
andb
and
and
add
mov
in
add
and
and
icebp
sbb
jns
arpl
mov
and
cmpl
sbb
push
sub
loope
js
addb
jno
jno
inc
add
ja
stos
loopne
dec
imul
sbb
mov
mov
daa
mov
dec
in
fs
lds
pop
cmpl
rolb
cmpsl
xchg
mov
mov
inc
and
and
sub
daa
into
shl
mov
jne
xchg
adc
in
lock
xchg
lcall
ror
fldenv
cmp
mov
jmp
mov
xor
cmp
pop
pop
pop
inc
xchg
cmpsb
shlb
and
std
fbstp
and
lcallw
cwtl
push
cld
mov
pusha
mov
mov
mov
subl
les
iret
mov
jl
sbb
lret
cltd
lcall
lea
ret
adc
xor
pushf
cmp
xorb
xor
and
test
pusha
xchg
pusha
in
mov
inc
pop
mov
pusha
loopne
dec
jnp
stos
mov
mov
mov
leave
ljmp
fwait
dec
pop
adc
pusha
loopne
inc
andb
sahf
mov
lret
add
pusha
sahf
out
and
popl
and
inc
mov
push
scas
fsubl
inc
fs
aad
loopne
iretw
sbb
imul
loopne
or
sarb
movsl
cmp
xchg
cmp
outsl
out
std
das
insl
out
xchg
fcompl
mov
sub
ljmp
rcl
or
mov
pop
aad
add
mov
icebp
adc
dec
imul
add
ret
pusha
pushf
add
loope
xchg
pop
jp
cmp
pop
pop
movsl
in
lds
and
cwtl
xor
sbb
mov
xchg
dec
and
mov
in
ret
mov
pusha
inc
pop
cli
push
sub
and
adc
pusha
or
mov
pop
aad
lea
inc
mov
gs
or
rcrl
mov
push
mov
and
mov
lea
mov
cmp
and
mov
adc
daa
daa
add
jmp
adc
adc
out
insb
loop
push
in
out
arpl
andb
cli
pop
clc
sti
cli
push
pop
dec
jns
cld
pushf
insb
xor
xchg
mov
test
inc
sbb
push
enter
add
repz
iret
js
push
adc
and
daa
repnz
mov
aam
push
or
loopne
mov
and
or
lods
rolb
loopne
lahf
in
aam
push
popf
push
jl
incb
rol
loop
shlb
sub
shlb
rolb
mov
jne
call
faddl
sti
sti
insb
sarl
mov
mov
ss
jmp
ficompl
and
jecxz
push
call
addb
sahf
daa
and
cmc
fisubrl
lret
daa
adc
mov
loopne
pusha
add
jle
test
andb
shl
mov
inc
or
cmp
inc
pusha
pop
in
mov
loopne
xchg
in
inc
sbb
push
sub
sarb
add
cmp
mov
andb
es
inc
or
fscale
mov
dec
xchg
xor
xor
in
adc
rclb
popf
sub
inc
mov
clc
lret
or
loopne
shlb
stos
rolb
ret
loope
push
push
and
nop
popa
push
xchg
mov
pusha
dec
pop
sbb
loopne
lea
loopne
or
sbb
sbb
xor
dec
inc
neg
push
and
test
add
fisttpl
or
sbb
mov
in
cmp
xor
pop
iret
das
fsubrs
jnp
stos
mov
loopne
mov
xchg
jns
lret
cli
out
into
push
or
mov
aad
ljmp
and
fistps
shl
lods
and
mov
xchg
cmp
mov
pusha
fsubs
roll
inc
mov
mov
xorb
pusha
rclb
dec
imul
dec
enter
pop
mov
sub
shlb
fwait
js
js
add
dec
lods
mov
ret
negb
dec
and
addr16
inc
clc
sti
or
fwait
daa
insb
mov
shlb
cmpsb
and
ret
dec
dec
mov
cmp
call
mov
pop
loopne
adc
sti
push
pusha
jp
mov
mov
add
shl
lcall
outsl
clc
or
inc
pop
lods
add
push
ret
push
mov
xchg
mov
mul
ret
rcl
dec
xor
xchg
sbb
loope
cld
lahf
dec
je
pop
testb
jge
aas
decb
mov
arpl
add
push
jbe
xchg
sub
xchg
fstpl
roll
add
and
jmp
inc
or
outsl
sahf
daa
js
push
inc
and
xchg
jg
stos
add
or
test
add
lds
loopne
je
and
sbb
mov
mov
mov
jge
inc
pop
stc
push
mov
xchg
mov
mov
add
popa
je
pop
cmpsl
xor
jae
or
push
stos
mov
dec
sbb
cmp
mov
out
push
dec
sbb
leave
test
mov
sahf
cmp
mov
loope
popf
sbb
mov
subb
inc
rcrb
pop
lock
in
loopne,pn
das
mov
or
push
movsb
shlb
mov
adcl
pusha
inc
jns
lods
outsl
cmpl
inc
imul
inc
mov
loopne
adc
or
mov
and
leave
mov
add
xor
add
mov
loopne
movsl
sbb
std
mov
mov
aad
clc
and
loopne
add
adc
and
jecxz
scas
shlb
icebp
inc
popa
ljmp
inc
jle
in
pushl
and
iret
rcr
jge
adc
xor
sub
imul
xor
out
sub
lahf
cmpsb
pusha
add
push
leave
add
loopne
mov
mov
inc
push
mov
mul
push
add
push
loopne
fsubrl
mov
icebp
out
scas
outsb
pop
out
cmp
out
pop
lea
decl
pusha
mov
out
sbb
xchg
mov
mov
xor
int
fs
xchg
pop
xchg
fdivrs
stos
dec
in
in
and
mov
mov
xor
xchg
dec
jno
loopne
inc
pusha
rcr
mov
inc
ds
pusha
and
test
mov
loopne
pop
gs
sub
mov
clc
jne
add
and
inc
mov
xchg
aas
inc
popf
fiadds
and
rorb
js
and
ret
mov
loopne
loopne
aam
aas
daa
andb
jecxz
sub
notb
loopne
mov
sbb
adc
cmc
sub
jmp
and
mov
pop
xchg
aad
mov
cmp
fdivrl
dec
and
sahf
out
inc
pop
jns
imul
inc
popa
std
into
mov
out
nop
xchg
incb
sti
adc
mov
and
repz
cmp
cmp
scas
jae
rorb
add
inc
xor
ljmp
pusha
int
mov
push
testl
ljmp
push
in
and
test
pop
sbb
push
sub
dec
adc
inc
mov
das
pop
testl
inc
orl
add
jbe
add
sbb
shl
lea
bswap
push
mov
xchg
mov
inc
sahf
ljmp
and
xor
test
ss
inc
mov
sbb
push
insl
cmp
push
add
mov
push
sbb
cmp
add
pop
arpl
xchg
ficoms
mov
mov
ja
add
test
sbb
ret
mov
jmp
fwait
movsl
xor
add
cvtps2pd
ja
add
xor
movsl
data16
loope
and
adc
jns
xchg
out
xor
lahf
shlb
jne
and
sbb
std
add
add
fmull
andb
mov
xchg
jne
ror
sbb
push
jge
pusha
loopne
xor
daa
bound
rolb
and
xor
loop
fbstp
dec
mov
ss
mov
push
mov
call
loopne
cmp
jmp
sbb
mov
add
rolb
adc
inc
pusha
dec
sub
add
pusha
pusha
loop
data16
sub
daa
lods
rolb
jmp
mov
or
add
inc
loopne
data16
ss
cmp
stos
mov
dec
sbb
sarb
pusha
pusha
cmpsl
movsl
xor
aaa
jns
xchg
bound
das
add
pushf
mov
xor
pop
cmp
test
pusha
push
lret
insl
insb
punpcklbw
out
xor
inc
sbbb
je
dec
icebp
pop
stos
mov
pop
cmp
testb
inc
loop
insb
add
and
and
add
arpl
aad
popa
loopne
lcall
mov
rcll
movsl
jo
cmp
adc
sub
pusha
or
stos
add
mov
shlb
test
loopne
add
int3
dec
shll
pusha
dec
inc
in
xchg
lret
test
loopne
jmp
cmpsl
jbe
xor
xor
out
mov
mov
mov
das
xchg
mov
loope
dec
mov
push
sbb
sbb
inc
iret
ds
nop
js
mov
cmp
jecxz
push
pop
lcall
adc
outsb
add
and
jbe
lea
in
mov
hlt
add
lret
sbb
pusha
inc
mov
pusha
inc
in
lods
andb
paddd
lcall
or
inc
mov
xchg
push
inc
into
sarl
mov
cmp
rolb
andb
pusha
shlb
inc
mov
jge
outsl
xchg
and
add
or
rolb
mov
xchg
lods
mov
inc
shlb
andb
xchg
pusha
add
pusha
xchg
xchg
shlb
jbe
imul
fisubs
cmpsl
addr16
add
fstpt
leave
and
stc
lcall
mov
fdivl
mov
and
push
sbb
push
push
add
or
add
loopne
scas
mov
push
jmp
and
push
cmp
data16
xor
add
inc
mov
jmp
pop
push
or
popa
mov
fs
push
imul
sahf
cmp
mov
sub
loopne
xor
push
and
pop
add
daa
pop
cmp
test
inc
dec
mov
inc
push
insl
or
sti
fisubs
mov
call
xchg
pop
adc
jns
push
jmp
lcall
clc
jp
or
sahf
loop
divl
or
and
push
mov
dec
jo
imul
sar
mov
sti
xchg
or
and
add
loopne
scas
loopne
mov
icebp
mov
lret
scas
loopne
aaa
in
mov
addb
repz
and
adc
adc
jb
and
stc
movsb
and
int
arpl
mov
cld
inc
and
mov
addb
rcl
lea
es
loopne
ss
mov
push
sub
and
xchg
add
cmpsl
jl
jecxz
cmc
aad
pop
gs
add
out
sub
dec
test
add
aam
lea
loopne
mov
pusha
and
sub
and
lea
dec
addl
jmp
addb
or
test
loopne
loopne
dec
lret
testb
push
and
cmpb
inc
popf
mov
and
xchg
adc
jne
pop
aas
pop
movsb
add
mov
aas
adc
lcall
hlt
mov
jb
test
cmp
sbb
push
fs
xor
add
inc
notb
movsl
dec
mov
in
push
out
gs
and
mov
orb
ljmp
mov
sti
pop
push
and
mov
icebp
arpl
push
or
add
hlt
insl
fdivl
rolb
or
cmpsl
nop
sahf
out
addl
inc
aad
inc
rcrb
mov
jmp
push
mov
nop
pop
sti
icebp
dec
cld
inc
mov
inc
jmp
mov
sbb
xchg
bound
and
test
orb
inc
les
pop
fmul
inc
outsl
int3
sarb
gs
ja
addb
jecxz
pop
xchg
sarb
and
lret
jne
fcoml
xchg
lods
xchg
add
fsubl
movsl
popa
dec
sti
jg
mov
lods
stos
or
add
stos
pusha
add
lahf
mov
mov
repz
enter
fwait
mov
or
jb
test
fwait
lahf
mov
push
lds
das
xchg
jnp
or
jge
xchg
daa
cmpsl
dec
les
mov
fwait
insb
jns
xor
clc
gs
fs
dec
out
adc
cli
loope
gs
xchg
jmp
cmp
sarb
mov
addb
sahf
push
add
dec
jmp
jmp
cmp
popa
leave
mov
dec
nop
mov
popf
fs
dec
xchg
stos
mov
pop
pop
sbb
jnp
push
notb
and
dec
cmp
sub
aas
pop
pusha
iret
outsl
in
lea
cmp
es
loopne
mov
rolb
aad
in
inc
shrb
rorl
push
pop
insb
mov
mov
pop
push
push
dec
mov
loopne
xor
adc
sar
pop
pop
sbb
lret
pop
test
sub
inc
sbb
imul
cltd
addb
push
add
add
add
xchg
shlb
cwtl
out
aam
mov
cmpsl
mov
xor
push
stc
push
imul
xor
jmp
xor
ds
push
mov
leave
or
cmpsb
pusha
mov
xor
jmp
test
and
mov
in
and
push
xor
sti
or
mov
or
rcrb
addb
and
arpl
or
pusha
jmp
jae
out
mov
das
sbb
mov
mov
add
fstpl
add
cs
loopne
xchg
push
pop
push
xor
test
cmp
ja
sub
test
mov
and
cmp
xchg
shlb
rclb
add
fcoms
lcall
scas
rolb
or
jecxz
fisubl
mov
movsl
xor
mov
mov
mov
inc
and
and
mulb
pop
xchg
mov
mov
lods
mov
fsts
sbb
and
stos
loopne
sub
cwtl
ret
inc
cmp
xchg
mov
shr
jp
xchg
fnstsw
call
cld
jae
adc
mov
mov
imul
shlb
insl
sahf
incb
sub
jbe
add
inc
xlat
jp
stos
rol
jmp
int3
repz
and
arpl
decb
mov
jmp
rorb
mov
sbb
and
outsl
out
xchg
aad
adc
loopne
cwtl
dec
mov
pop
and
ljmp
mov
ffree
add
and
hlt
sahf
or
inc
pop
push
fsubrp
dec
aam
xchg
xchg
dec
xchg
or
shl
push
std
out
shl
pop
and
jne
push
push
loopne
jmp
dec
jnp
pop
lods
push
lahf
scas
and
pop
popf
movsb
mov
and
iret
or
rcrb
and
dec
rclb
mov
xchg
daa
sarl
addb
or
cmpb
sbb
psubusb
xor
cmpsb
inc
mov
inc
push
pop
add
insl
push
mov
mulb
bound
mov
out
sub
jg
mov
push
add
gs
dec
in
out
loopne
xlat
sub
cli
das
mov
adc
out
pusha
add
dec
movsl
jo
popa
inc
xor
jge
xchg
out
pop
mov
fidivrl
pusha
add
lock
cmpb
iret
inc
into
lds
jl
mov
xlat
ds
pusha
inc
repnz
cmp
imul
loopne
insl
fildl
and
pop
inc
xchg
aam
xor
loopne,pn
lods
mov
fwait
adc
xlat
iret
cld
inc
mov
pop
push
std
mov
adc
xchg
mov
lods
adc
test
addb
dec
ja
andb
sub
loopne
sti
jmp
loopne
or
cmpsl
fsubl
adc
and
adc
inc
enter
adc
jae
fdivr
push
mov
fisubs
xchg
je
aad
lods
xor
xchg
mov
inc
mov
dec
lret
mov
loopne
xor
jecxz
or
adc
xor
dec
pusha
pop
push
test
ret
arpl
sub
subb
aam
inc
in
add
push
test
cmp
pop
mov
inc
xchg
pop
push
mov
or
aad
push
rcrl
and
mov
inc
pop
popf
inc
adc
and
add
jno
jno
xchg
loopne
jne
ds
jl
mov
xorl
loopne
fildl
push
loop
rolb
sub
and
int
cmp
sub
cmp
xorl
dec
lret
inc
add
pusha
xchg
push
fidivs
imul
ljmp
fistps
mov
loopne
xchg
in
mov
dec
sarb
dec
addr16
add
out
fcompl
mov
dec
jbe
ljmp
jle
sub
pop
xor
rol
sbb
xchg
int3
loopne
loopne
cmpsl
sub
and
inc
shr
movsb
mov
loopne
mov
adc
fadd
cmpsl
sub
jle
into
ficompl
mov
or
bound
or
pusha
ljmp
push
inc
cmpb
addb
pop
hlt
jg
dec
fs
add
addb
pushf
ja
lods
in
inc
ljmp
and
testl
xor
nop
xchg
bound
cli
hlt
adc
js
mov
pusha
add
rorl
inc
rolb
rolb
and
adcl
nop
xor
mov
and
add
enter
jne
ds
imul
lods
mov
testb
and
in
mov
addr16
jbe
sub
xor
data16
jmp
shl
pop
or
mov
push
stc
jmp
imul
fisubrl
pusha
lret
iret
popl
jns
push
pusha
inc
xchg
adc
adc
mov
push
jmp
addb
call
sbb
mov
and
mov
fildll
dec
mov
call
and
sbb
inc
push
sbb
lds
shl
mov
les
cld
in
add
and
out
xor
pusha
inc
pop
or
xchg
xor
pop
adc
xchg
sti
sub
mov
icebp
enter
cmpsb
andb
jo
or
add
jl
aam
fstpt
jne
mov
insl
push
insb
ljmp
inc
cmpsl
fxam
lock
ret
je
xor
pusha
inc
pop
out
testl
test
push
call
nop
nop
lock
int3
sbb
and
inc
mov
inc
not
fistl
pusha
loopne
divb
mov
scas
mov
sahf
ss
mov
push
jle
pusha
lock
xchg
imul
xchg
pop
inc
hlt
sbbl
and
aad
push
sub
sub
inc
loopne
fdivrs
lret
mov
fcomi
ja
adc
sub
lds
cltd
mov
dec
xor
mov
or
mov
rolb
lcall
inc
push
out
sub
je
pop
mov
fcoms
jl
rcrl
rclb
mov
arpl
sbb
lret
jo
fldcw
pop
xchg
movsb
rolb
push
iret
test
loopne
jne
inc
and
sbb
rcrb
iret
daa
cli
imul
imul
jge
test
rolb
sub
or
adcb
in
cmp
mov
push
jne
out
inc
mov
jle
xchg
pusha
adc
mov
fnstsw
test
cmpb
and
test
jmp
lahf
outsl
mov
addb
sbb
adc
mov
loopne
decl
inc
movsl
jge
nop
hlt
cmp
pusha
mov
mov
dec
andb
adcb
xchg
out
mov
movsl
getsec
int
movsl
lcall
sub
in
sbb
mov
inc
jmp
xchg
and
das
mov
imul
sarb
loopne
inc
data16
or
cmp
and
pop
mov
loopw
sub
je
adc
push
cwtl
cmp
rcr
pop
in
jp
mov
loopne
and
xchg
jmp
push
mov
adc
loope
call
mov
and
scas
scas
and
inc
inc
fldt
mov
push
mov
and
popa
push
hlt
out
lcall
jae
clc
ret
inc
mov
decb
jnp
inc
std
mov
mov
loopne
or
sahf
or
ffree
mov
in
lret
pusha
xchg
inc
push
rol
jle
rclb
mov
loopne
xchg
inc
daa
in
mov
mov
and
jge
adc
pop
mov
inc
lds
mov
mov
mov
je
pusha
and
in
jge
mov
cld
testl
and
cmpb
mov
lret
ficoms
pusha
lahf
or
and
mov
ja
mov
xor
sbb
test
add
cmp
shlb
in
pop
icebp
mov
pusha
sub
rolb
pusha
sahf
insb
daa
sbb
xor
dec
push
aas
loope
mov
mov
icebp
dec
jne
ljmp
rolb
lcall
andl
ss
inc
jge
enter
mov
push
mov
mov
ja
dec
lock
mov
shlb
loopne
outsl
sub
sbbb
jns
sub
jle
or
ljmp
sub
pop
popl
mov
andb
je
loopne
movsb
pusha
inc
push
in
dec
insl
jp
or
mov
mov
or
cmpb
jb
arpl
lret
pop
js
add
or
mov
cmpsb
addb
jge
and
sub
rclb
iret
sub
js
cmpsb
pusha
add
mov
cmc
push
rolb
mov
xor
mov
shrb
jmp
arpl
notb
xchg
inc
inc
repnz
cmpb
mov
popa
loop
push
add
popf
cmp
add
mov
push
and
shl
mov
mov
pop
jne
dec
dec
xchg
mov
loop
addb
sbb
aad
pop
inc
add
jg
add
cwtl
cmovp
leave
dec
aam
push
ds
arpl
into
outsb
fistl
add
repz
add
sub
push
push
mov
and
add
and
mov
add
mov
jecxz
pusha
mov
inc
and
sub
stos
or
loopne
mov
rorb
mov
mov
xor
pop
jge
pushf
loope
cwtl
mov
sahf
mov
mov
dec
and
sbb
jmp
inc
insb
adc
test
inc
push
or
jmp
or
sarb
bound
dec
ljmp
movsb
add
xor
adc
adc
add
push
addb
ds
sub
aam
push
sbb
insb
mov
test
adc
mov
cmpsb
mov
sub
rolb
bswap
in
test
fwait
sbb
pusha
jmp
add
inc
push
push
gs
sbb
push
cli
pop
call
cmp
sti
xchg
push
inc
mov
cli
repz
ljmp
inc
outsb
out
loopne
sub
arpl
mov
int
push
loopne
push
mov
int
jnp
pop
push
or
and
or
pop
je
popa
add
cmp
jns
mov
pusha
mov
cmp
jge
jecxz
ret
cmp
xor
daa
mov
xor
sub
and
dec
mov
stc
mov
sub
orb
mov
and
mov
xchg
push
cmp
scas
pusha
rclb
mov
lock
and
lahf
push
mov
jno
cmp
insb
push
pop
xlat
fstpt
jb
pop
xchg
orl
addb
ret
push
data16
inc
dec
mov
mov
jb
addb
push
or
push
or
lcall
mov
pop
push
lock
std
iret
and
fwait
lret
sub
inc
dec
xor
sub
push
ficomps
adc
test
dec
lret
xchg
xchg
ss
push
add
icebp
in
dec
mov
mov
inc
pop
dec
inc
notl
and
and
adc
mov
outsl
stos
shlb
mov
sahf
lret
pusha
push
add
xchg
dec
andb
test
sbb
jl,pt
xlat
repnz
cmp
imul
out
xchg
inc
cmpb
out
dec
jbe
fsubrs
add
inc
sbb
loopne
testl
mov
pop
xor
and
add
and
loopne
cli
mov
rolb
shlb
xor
jmp
dec
or
leave
dec
cmp
pusha
rorb
and
xor
adc
inc
fwait
and
cwtl
or
out
loopne
mov
lock
adc
xlat
sbb
or
inc
sbbb
lahf
aad
fisttps
sub
mov
sbb
and
ffreep
jp
es
add
into
xor
xchg
pop
addr16
push
fbstp
fsubl
mov
sbb
out
mov
dec
arpl
lea
in
leave
and
inc
ret
mov
adc
and
outsb
xchg
add
iret
pop
sbb
push
cmp
pusha
inc
std
push
testb
out
repnz
add
inc
sbb
xor
and
imul
push
add
aaa
ss
xchg
xchg
loopne,pn
pop
data16
loope
xor
andb
mov
cmpsl
pop
in
push
int3
push
addl
push
andb
add
inc
sub
rcrb
xchg
jo
loopne
addr16
pop
or
stos
addb
ds
lods
mov
inc
mov
repnz
adc
jnp
pusha
test
mov
or
loop
dec
pop
fdivl
mov
popa
movb
loopne
idivb
cli
xchg
in
dec
or
and
and
fisubrs
call
mov
lods
add
pusha
and
jle
add
xor
andb
inc
pop
or
popf
xor
inc
lret
and
sub
add
mov
inc
push
out
pop
hlt
cmc
xchg
sub
stos
xlat
adc
lcall
sub
pusha
pop
sub
pusha
aas
fwait
imul
cmc
sbb
rcll
add
sub
and
shll
jno
fldenv
add
lds
and
or
iret
push
loopne,pn
les
add
mov
enter
mov
data16
inc
vpandn
sub
xorb
and
loopne
add
jnp
mov
insl
jp
sti
dec
or
lahf
push
dec
jno
push
jp
jbe
loope
loopne
mov
fstpl
pushl
rcll
mov
loop
movsb
andb
addb
add
mov
mov
test
pop
shll
jge
and
je
bnd
and
mov
inc
loopne
loopne
mov
push
mov
dec
inc
scas
jae
jge
mov
jl
ret
test
cmp
dec
sub
scas
sarb
jl
shll
inc
inc
out
fcomp
add
shlb
xchg
cmpsb
mov
push
or
sbb
ds
imul
sbb
loop
outsl
fidivrl
xchg
fildl
jbe
pop
cli
stc
enter
ret
roll
mov
jae
gs
popa
call
push
xchg
and
and
cmpb
xor
mov
add
add
and
cli
scas
mov
mov
sbb
scas
rol
outsb
ja
and
lahf
lret
pusha
jno
mov
cmp
add
icebp
scas
rol
cmp
mov
loopne
inc
mov
xor
orl
out
sbb
or
and
cmc
ficoms
jp
jns
add
xchg
int
add
mov
leave
push
pusha
and
pop
cmpsb
mov
add
dec
fs
jbe
cmp
rolb
sarb
scas
add
pop
xor
fwait
iret
lcall
mov
das
lods
int3
out
data16
pop
pop
adc
add
cmp
cltd
and
inc
inc
loope
pop
xorl
mov
jbe
inc
rorb
add
andb
dec
mov
inc
mov
pusha
or
jb
pop
fildll
pop
dec
pop
mov
jmp
xchg
std
fadd
xchg
jmp
out
cmp
cli
daa
and
rcr
divb
push
stos
loopne
fdivl
sahf
fwait
int3
insb
add
mov
cmpsb
andb
sbbb
push
pop
negb
inc
and
add
xchg
ret
mov
lods
les
lods
inc
loopne
fimull
and
cmp
fwait
pushf
pop
aam
push
inc
inc
pop
outsb
imul
pop
fisttpll
addb
inc
inc
inc
in
jge
add
aam
fnstsw
inc
mov
mov
mov
icebp
out
pop
jne
pop
out
fstpt
inc
sbbl
andb
mov
lcall
xor
xor
adc
xor
roll
cld
adc
adc
or
divb
loop
out
mov
jmp
loopne
dec
sub
outsl
push
mov
rorl
mov
pop
mov
inc
andb
int3
sub
or
int3
lea
cmp
mov
pop
and
inc
dec
shlb
mov
pusha
xchg
adc
mov
pop
ljmp
pop
mov
mov
lcall
sbb
loopne
addb
rclb
loopne
cmc
xchg
out
call
sbb
lods
mov
mov
inc
xchg
std
daa
inc
das
rclb
and
xchg
pop
or
xchg
sahf
in
xor
and
addb
andl
push
lock
pop
push
lcall
sub
orb
push
aaa
and
inc
pusha
clc
jae
mov
hlt
arpl
sub
andb
popf
ljmp
and
jl
dec
or
add
xor
xchg
jnp
pop
pop
out
mov
sub
shrb
dec
clc
in
cmp
xlat
loop
mov
and
leave
mov
cwtl
xchg
inc
adc
sub
arpl
imul
add
push
mov
movsb
mov
rcll
adcb
adc
push
dec
das
cmc
adc
lahf
popa
mov
fmull
push
adc
push
inc
inc
jl
jle
mov
sub
jmp
jp
sbb
mov
mov
sub
inc
lods
shl
movq
loopne
adc
insb
mov
addb
sub
mov
pop
mov
shlb
sbb
cli
inc
popf
push
inc
add
dec
push
pop
xchg
testb
mov
ja
pop
mov
push
or
add
fwait
js
push
mov
into
psrad
test
inc
push
add
xchg
push
xor
out
pop
stos
inc
rol
gs
jmp
pusha
add
jae
fcmovnu
mov
mov
andb
dec
mov
stc
ffreep
sbb
push
in
mov
jle
and
andb
cwtl
std
dec
push
addr16
movl
inc
sub
mov
ret
cli
or
add
in
popf
shrl
xor
jno
sub
loopne
lret
mov
xorb
mov
into
mov
hlt
or
jbe
fdivrl
out
xchg
cmp
nop
clc
and
pusha
rclb
and
mov
and
inc
pusha
mov
adc
pop
fs
jle
add
addb
jg
sbb
andb
pusha
loopne
in
pop
add
rolb
and
mov
mov
shl
mov
xor
cld
push
stc
pop
cmp
inc
inc
je
fsts
rcl
rcrl
sbbl
cmp
ss
pop
push
shlb
loope
int3
popa
loop
fistl
test
mov
iret
pop
in
outsb
push
push
inc
push
shlb
loopne
fcoms
in
icebp
mov
mov
test
shrb
sti
cmpsl
xor
imul
sbb
lea
adc
std
imul
xchg
mov
push
xchg
pushf
cwtl
sbb
xchg
jbe
sbb
imul
mov
inc
movsb
mov
xlat
insl
fisttpl
add
sti
ja
mov
mov
jns
inc
imul
stc
sub
sarb
mov
mov
add
movsl
push
lea
pop
insl
aaa
sar
dec
les
testb
inc
cmp
outsb
sbb
negb
addb
inc
int3
cmp
or
mov
lcall
mov
pusha
subb
add
pusha
sbb
mov
jmp
stos
insb
shlb
adcb
setae
bound
mov
sti
inc
jl
mov
jecxz
negb
adc
dec
dec
sbb
xchg
xlat
pop
shr
cwtl
jnp
pop
lods
jmp
pusha
cli
ds
shr
movsb
rol
andl
cmp
insl
popa
jmp
in
outsb
sub
and
loopne
repnz
push
stos
rolb
ljmp
cmc
and
inc
test
add
stos
mov
nop
cmp
idivl
loopne
push
jge
nop
scas
in
jne
icebp
xchg
inc
into
nop
out
outsl
mov
push
mov
cld
jno
jo
data16
fildl
jnp
inc
fcmovu
scas
shrl
gs
adc
inc
add
push
xorl
sub
pusha
xchg
filds
bound
ja
push
mov
add
lcall
ss
xchg
arpl
xchg
inc
enter
sub
cmp
and
and
cmp
test
xchg
arpl
mov
addb
jmp
pop
incl
mov
out
sti
je
popa
push
loop
mov
les
in
js
cmpsb
mov
movsb
loopne
mov
loopne
clc
lcall
incl
inc
addb
add
xor
out
and
mov
leave
enter
in
jns,pt
dec
icebp
jle
xchg
lahf
loope,pt
cltd
fisubs
or
add
loop
imul
fdivs
jbe
adc
lods
pusha
pusha
mov
dec
sarl
xor
sub
push
and
inc
shlb
rolb
lds
lret
jmp
dec
outsl
jmp
mov
dec
jb
pushf
data16
call
mov
shrb
sub
cmpb
push
and
inc
iret
ja
jb
adc
pusha
inc
ljmp
stos
or
add
jg
jnp
push
or
or
and
cli
hlt
rorb
rolb
int3
iret
out
out
dec
ds
imul
add
lret
add
imul
mov
aaa
cmc
mov
insb
stos
in
cmp
adc
xlat
xor
andb
ss
out
and
pusha
out
addr16
xchg
and
jnp
hlt
mov
inc
cmp
xchg
push
sub
aad
mov
and
sbb
inc
call
push
jns
shll
cld
mov
mov
lds
sub
inc
push
lret
lods
addb
inc
and
inc
dec
clc
loop
mov
shlb
cld
xlat
lret
add
test
add
mov
push
shl
mov
and
add
loopne
cmc
push
and
je
adc
flds
inc
loopne
test
sbb
xchg
adc
test
addb
daa
stos
add
jne
sbb
out
rolb
pusha
add
sbb
sub
inc
hlt
mov
and
push
loopne
push
sub
scas
add
and
rcrb
sbb
addb
and
add
cmpsl
addl
dec
pop
sbb
andb
mov
ret
aam
jle
loope
sahf
mov
add
inc
dec
push
lds
or
addr16
pop
add
pusha
sbb
mov
adc
mov
rclb
inc
add
inc
js
aad
rorl
lock
push
cltd
xlat
adc
insb
dec
outsl
pushf
pop
pop
sbb
dec
mov
sub
inc
xor
in
dec
or
das
roll
loopne
pop
pop
sbb
jecxz
arpl
push
and
aas
jp
pop
outsl
clc
xchg
shlb
add
pop
lods
mov
arpl
mov
jecxz
push
fistpl
inc
ds
ja
adc
jp
fld
or
imul
in
lods
loopne
sti
jnp
mov
push
add
addl
inc
mov
andb
add
cmp
out
add
dec
int
adc
imul
out
popa
lahf
mov
push
jo
jp
lods
jbe
mov
and
adc
sbb
popa
aad
cmp
dec
incb
loopne
adc
push
jge
xchg
mov
pop
and
lret
shl
push
int
mov
jmp
xor
je
iret
adc
movsb
loopne
add
pop
out
shlb
dec
in
push
or
pusha
stc
and
loopne
mov
ds
mov
fucom
out
cmpsl
dec
leave
mov
icebp
jge
push
rol
mov
inc
aas
pop
mov
inc
mov
add
stos
mov
add
or
ljmp
pop
and
loopne
or
mov
pop
add
mov
rolb
adc
add
inc
loop
imul
mov
mov
fmuls
sbb
leave
mov
adc
jl
cltd
movsl
xchg
dec
sub
mov
fstl
jno
andl
jnp
sub
pusha
mov
pusha
inc
loop
lret
jne
inc
mov
push
jbe
and
aas
and
mov
cmp
sbb
addb
aas
sbb
movsl
adc
loopne
jg
dec
inc
push
cmp
hlt
in
mov
xchg
dec
dec
ja
repnz
loope
cmp
lret
push
mov
rolb
pusha
loopne
negl
cmp
repz
fisttpll
and
and
xchg
lock
sub
inc
sub
lock
es
add
add
push
lds
xchg
mov
jne
lret
inc
sub
adcb
pusha
loopne
inc
mov
mov
sbb
daa
cmpsb
add
adc
sub
lcall
dec
shl
arpl
stc
xlat
sti
testb
rclb
jae
pop
sti
add
aaa
mov
pop
pop
mov
mov
test
jbe
inc
jae
sbb
xor
lahf
dec
outsb
mov
mov
fsubl
xchg
push
dec
pop
and
repnz
mov
cmpsl
ret
and
lret
mov
leave
xor
sub
rol
sub
shrb
mov
rolb
or
push
mov
dec
imul
ss
addb
loope
cmp
add
imul
arpl
xchg
lahf
fidivl
aam
out
mov
rol
jnp
lret
scas
mov
lds
jns
and
ja
mov
shlb
and
loopne
xor
inc
andl
sub
jmp
adc
shll
andb
inc
jge
push
or
cmp
xchg
ret
ret
packssdw
pop
loopne
iret
or
xor
sarb
jnp
aad
fisubl
or
mov
pop
fiadds
mov
pop
inc
and
inc
xchg
xor
mov
jbe
or
in
or
mov
and
rolb
or
mov
and
jge
movsb
pusha
mov
fisubl
cmpb
aaa
push
in
and
cmp
push
inc
outsl
adc
jnp
loopne
sbb
add
inc
repz
or
lods
out
jmp
addb
push
jp
push
js
pop
inc
xor
outsl
cmp
push
lahf
mov
dec
pop
add
insl
rcl
inc
fnsave
jae
inc
decb
push
in
cmp
neg
data16
inc
mov
mov
movsb
rolb
les
in
and
dec
in
out
imul
cmc
popa
daa
cmpsb
mov
pusha
xchg
jecxz
mov
mov
out
sub
ficoms
mov
mov
shlb
adcb
inc
aad
mov
sbb
mov
mov
mov
mov
cmp
fcoms
andb
ret
inc
or
and
adc
and
ss
inc
mov
fs
jbe
and
pop
mov
les
decb
loopne
pop
aaa
loopne
and
mov
jl
xor
xchg
mov
int3
xchg
sti
movsl
iret
push
loopne
cltd
aam
xchg
int3
or
jnp
das
xchg
iret
inc
mov
jle
dec
cmpsl
add
xorb
sbb
roll
mov
cld
mov
add
rol
or
adc
or
mov
inc
push
dec
scas
rol
push
aad
mov
mov
xor
sbb
out
and
jnp
push
test
shlb
dec
stc
sub
adc
lcall
inc
rclb
sub
loopne
mov
andb
lcall
cld
cmc
or
popf
adc
dec
pop
std
pop
inc
mov
add
push
jns
or
mov
xlat
add
pusha
fsub
xchg
cwtl
pop
nop
cmpsl
add
pop
js
mov
add
pop
or
and
or
add
mov
jmp
nop
movsb
pusha
shlb
pop
inc
inc
xchg
sub
lahf
fldcw
cmp
xchg
adc
negl
jmp
mov
rolb
dec
xchg
rorb
adc
mov
loopne
mov
xchg
leave
cmp
push
andb
xchg
aam
shl
aam
adc
xlat
clc
popf
int
int3
push
and
mov
sub
and
sub
and
mov
cltd
lret
ja
ljmp
xchg
nop
inc
lods
add
mov
pusha
sarb
popa
movsl
inc
push
ret
pusha
cld
sbb
xchg
ja
mov
pusha
add
and
ja
pop
push
xchg
test
add
pop
loope
outsl
inc
cli
xchg
push
loopne
ljmp
dec
cmp
add
inc
inc
fisttpl
out
cmp
and
pusha
inc
lret
push
and
and
jecxz
sbb
lock
test
arpl
mov
outsl
ds
pop
pop
jle
btr
push
pusha
add
push
insb
popf
xchg
or
mov
pusha
pusha
leave
out
enter
in
movsb
inc
mov
pusha
inc
jp
movsb
and
popf
out
xchg
sub
dec
andb
popf
pop
insl
xchg
ror
addb
lods
and
in
jb
dec
add
mov
or
mov
mov
add
xor
mov
and
shll
xor
movsl
or
ljmp
cmc
fwait
xlat
xor
and
rolb
loopne
cmc
mov
test
sbbb
mov
inc
or
sub
loopne
ret
or
loopne
inc
pusha
sub
mov
xor
pop
sbb
mov
or
sti
popf
roll
out
jmp
jae
int3
mov
fsubrs
sbb
aaa
push
leave
mov
or
loopne
rcll
cmp
push
js
jp
mov
and
add
lahf
test
rolb
inc
cld
mov
add
push
mov
mov
pusha
xor
or
movsb
mov
xchg
cld
sub
loopne
add
mov
and
jns
add
xchg
int
lahf
stc
clc
push
cmp
lods
inc
loopne
push
mov
aas
out
adc
sbb
andb
lret
shlb
or
pop
lret
rcr
insb
add
sbb
fimull
sahf
addr16
inc
sub
shlb
inc
pusha
negb
jns
stos
mov
mov
dec
dec
xchg
xor
add
mov
mov
xor
pop
cmp
add
inc
inc
dec
sbb
scas
or
pusha
sarb
fwait
iret
xchg
int
mov
repnz
shlb
mov
dec
adc
xchg
mov
inc
push
mov
inc
loopne
pop
cmpsb
shlb
dec
icebp
pop
sbb
push
sbb
lea
sahf
lcall
andb
pusha
add
filds
ds
mov
sti
inc
mov
movsl
sub
mov
aaa
stc
pop
shl
pushf
fbld
mov
mov
and
int
or
add
inc
mov
andb
les
inc
pop
or
sbb
sub
add
into
cmpsb
and
pop
test
ja
test
loopne
call
lcall
in
decl
cmpsl
xor
or
rorb
and
and
mov
pop
mov
xchg
or
shlb
inc
add
popf
stos
shlb
jp
push
jo
add
mov
adc
imul
lret
in
inc
ja
rol
rorb
rclb
adc
xchg
subb
cmp
lods
inc
add
xchg
inc
enter
push
mov
jge
mov
push
loope
popf
rcll
adc
repz
imul
cld
and
insw
push
imul
mov
pusha
inc
js
and
nop
test
lods
inc
cmp
sbb
inc
or
div
or
and
in
mov
mov
add
out
fucomp
mov
xchg
or
mov
addb
push
insb
test
mov
andl
inc
add
inc
hlt
add
xchg
inc
stos
dec
adcl
addb
pop
push
sbb
arpl
pusha
out
mov
add
xchg
imul
add
mov
or
xor
add
pop
add
rol
sub
dec
mov
and
andb
push
mov
add
mov
loopne
sbb
fiadds
out
mov
pusha
fmuls
inc
mov
jae
sbb
popf
push
int
xlat
bnd
jo
mov
aam
repnz
iret
xchg
in
imul
pusha
and
and
pop
xchg
clc
pop
adc
loopne
iret
jecxz
loop
shrl
and
add
push
push
in
sub
arpl
loopne
stos
pusha
pusha
pushf
pop
pop
ds
pop
xchg
insb
aam
shlb
iretw
cmpsl
pushf
pusha
clc
cltd
enter
sarb
push
loop
imull
inc
pusha
ret
sub
mov
push
in
push
lret
loopne
dec
addb
dec
pop
sbb
jmp
repz
lcall
inc
loopne
clc
bound
icebp
push
pusha
sar
lea
lcall
clc
sub
inc
mov
xor
into
dec
andb
nop
xchg
mov
daa
sub
int3
imul
pusha
shrb
and
add
aam
or
inc
jbe
mov
fsubp
cmpsb
add
xor
test
add
pop
inc
sbb
mov
inc
lds
rorl
fdivs
rcrb
xlat
shll
fists
add
jge
mov
add
cmp
xchg
push
icebp
pop
icebp
popa
push
mov
pop
insl
pop
push
fwait
mov
loope
push
jno
mov
imul
push
push
jb
cmp
pushf
outsl
push
push
std
inc
lcall
das
mov
mov
pop
add
test
inc
mov
aaa
popa
or
mov
shr
add
adcb
sbb
and
subb
pusha
aad
je
add
mov
jne
movsb
pusha
add
iret
pop
lds
jle
nop
cmpsl
test
mov
pusha
or
and
and
xlat
mov
xchg
or
stos
leave
mov
sub
pusha
stos
add
pusha
push
pop
and
sarb
into
xor
pop
out
jge
lahf
loope
shll
sbb
jecxz
cmc
rolb
push
hlt
mov
mov
xchg
imul
pop
xchg
inc
mov
js
adc
outsl
jecxz
or
rcrb
add
add
xlat
sub
and
lods
inc
xor
pop
aas
in
jb
xor
mov
sahf
jl
dec
mov
cmpsl
dec
push
push
or
inc
subl
inc
mov
loopne
clc
push
inc
loopne
and
dec
enter
loope
sub
dec
and
fdivs
add
add
jg
flds
in
xor
popa
cs
shlb
and
test
pusha
push
loopne,pn
ja
mov
mov
inc
dec
xor
mov
xor
popa
mov
push
push
cmp
loope
mov
andb
adc
dec
jmp
push
adc
xchg
xchg
mov
cli
mov
loopne
xacquire
inc
mov
addr16
and
in
pusha
mov
dec
mov
mov
push
mov
inc
mov
inc
cmc
or
pusha
xlat
out
push
sbb
cmp
inc
pop
insb
adc
test
rorb
mov
or
dec
int3
xor
cmc
int3
jae
loopne
push
dec
lea
adc
push
scas
add
push
add
mov
idivl
push
fbstp
or
loopne
add
xchg
inc
adc
pop
inc
add
ds
pusha
push
popf
push
sub
or
cs
mov
inc
pusha
xlat
repz
jbe
pushf
in
inc
cwtl
outsl
les
shlb
sahf
cwtl
in
out
pop
push
mov
fcmovu
jmp
fmuls
pusha
add
jo
and
add
sbb
adc
add
scas
push
pslld
movsl
into
repnz
movsb
loopne
sahf
repz
movsl
aad
mov
negb
xor
mov
mov
push
rolb
mov
rcrb
incb
inc
push
xchg
lock
in
in
aaa
in
shlb
shl
loopne
icebp
ret
xchg
add
fists
push
sub
push
push
rolb
lock
aaa
and
daa
push
popa
std
add
or
and
shlb
cltd
or
push
jb
add
rorl
mov
push
dec
dec
out
mov
add
sub
mov
pop
insb
add
and
rol
push
mov
and
shl
xor
adc
or
dec
cwtl
jge
mov
out
movb
cli
in
std
test
push
xchg
sti
jp
shlb
and
mov
fsts
andb
push
xor
aaa
jnp
jecxz
shlb
pop
adc
les
jne
ret
hlt
cmc
pop
enter
fs
add
mov
cmp
jb
push
push
dec
aaa
mov
mov
jecxz
add
jbe
ds
rcl
pop
inc
mov
and
mov
cmp
mov
loop
add
sub
pop
dec
rclb
xchg
fidivs
loopne
add
iret
dec
ja
ret
outsb
cltd
lock
out
mov
pusha
inc
and
cmpsl
push
lret
push
and
or
jmp
aam
fsubrs
lods
test
rorb
add
popf
dec
mov
mov
aam
jnp
dec
jnp
inc
loopne
gs
xchg
aaa
adc
imul
fildl
xor
mov
jl
fidivs
and
inc
mov
leave
inc
ret
push
cmc
pop
aam
mov
arpl
out
nop
imul
and
loopne
lds
add
xchg
stos
shlb
lahf
pushf
jge
add
jmp
loope
scas
inc
pusha
movsb
pusha
mov
pop
xchg
xchg
inc
or
pop
rclb
call
scas
inc
xorb
pop
mov
fstpt
ljmp
fs
mov
mov
lods
add
test
loopne
pop
lret
sub
or
test
and
mov
adc
testb
mov
jb
inc
mov
orl
push
xor
add
jmp
and
mov
mov
sub
add
loopne
daa
pushf
cmp
rorb
rolb
dec
seto
pop
xor
pusha
dec
out
dec
push
loopne
xor
mov
rcr
shlb
scas
xor
rol
pop
and
sti
lock
mov
mov
cwtl
paddusw
loopne
jge
andb
inc
adc
repnz
aad
add
sti
arpl
movsl
mov
cli
ljmp
fistpll
push
add
loopne
cmp
adc
sbbl
and
and
add
inc
dec
insl
xlat
sbb
shlb
mov
test
and
mov
add
push
je
pusha
loopne
lea
ret
jg
xor
inc
mov
mov
ss
jg
cmp
into
repnz
mov
ficompl
pop
mov
add
inc
popf
aad
imul
pop
mov
scas
and
lret
shl
int3
mov
sub
sbb
jl
push
jnp
mov
mov
sarb
mov
add
jns
pop
mov
mov
aam
imul
mov
push
dec
aas
cmpsb
andb
jns
adc
outsb
lods
iret
cmp
ret
sub
add
ret
shlb
loopne
popa
jne
shll
lret
movsb
addb
sub
jge
mov
sbb
adc
pusha
jmp
mov
das
sbb
addb
aas
stc
push
leave
dec
out
jns
popf
lahf
mov
cmc
hlt
mov
mov
add
add
sbb
pop
xchg
mov
adc
ja
inc
mov
add
imul
and
adc
xchg
fisubrl
add
inc
sub
std
ds
mov
fwait
mov
and
mov
loop
in
divb
ljmp
enter
dec
push
popa
push
add
shlb
popf
ret
dec
insb
inc
fstps
pushf
sbb
aaa
xlat
mov
dec
xor
dec
jle
cmpsl
lds
lahf
mov
filds
pusha
dec
mov
fcomps
mov
mov
mov
in
cmp
mov
or
loopne
cltd
js
dec
cmpsb
mov
pusha
jecxz
or
rolb
subb
test
loopne
insb
mov
pop
sub
pop
out
cmp
fstpl
arpl
rcr
mov
lds
sub
cs
rorb
or
pusha
mov
andb
dec
iret
adc
shlb
mov
add
testl
add
cwtl
stos
push
ret
sarl
add
ret
mov
ret
addb
inc
xchg
sbb
rclb
aam
push
pop
dec
stos
andb
mov
popf
ret
sub
jg
dec
jno
inc
pusha
and
fists
out
mov
test
or
stos
and
loopne
ljmp
insl
out
addb
mov
fcompl
stos
add
repz
icebp
sub
add
outsl
xor
aam
add
push
rolb
pusha
jbe
adc
inc
push
and
mov
push
xchg
sbb
pusha
and
and
mov
mov
aaa
into
push
mov
xor
hlt
cmp
aad
sbb
cld
cmp
rcr
pop
cmp
fs
inc
and
fdivrp
jb
dec
mov
xor
lcall
push
cli
pop
into
mov
ret
inc
mov
pop
std
insl
dec
cmp
in
sub
xorb
xchg
fsubr
dec
vcmpsd
mov
fisubrs
out
push
dec
push
inc
in
dec
sbb
cmp
sbb
cmc
push
mov
pusha
loopne
mov
test
or
mov
insl
ret
cmpsb
pusha
inc
xor
jns
add
adc
inc
push
and
adc
aas
insb
std
sbb
repnz
imul
mov
mov
push
and
add
rcl
cli
shrb
pusha
loopne
aaa
ret
outsb
cmp
xchg
add
inc
and
add
jge
mov
inc
testb
rolb
cmp
addb
add
insl
aas
outsl
add
cltd
daa
and
shl
pop
add
or
loopne
xor
inc
inc
push
ss
shll
add
icebp
dec
out
mov
lahf
and
mov
inc
jo
lea
popa
mov
and
cmp
movsb
and
enter
fsubr
xchg
adc
out
arpl
lea
pop
jmp
mov
push
pushf
cwtl
xchg
ret
sahf
in
inc
ret
aad
sbb
xor
lcall
cmpsl
cmp
xor
andb
mov
stos
and
cmpsl
pop
mov
lds
test
pusha
and
cmc
ror
imul
stos
loopne
jnp
and
fdivp
inc
push
in
ja
and
xchg
shrl
push
sbb
xchg
testb
jle
push
and
pusha
mov
mov
xorb
lds
xchg
scas
loopne
cli
out
add
out
add
add
nop
lcall
repz
roll
dec
call
mov
xchg
mov
and
dec
push
cmp
aaa
hlt
xchg
stos
or
stc
out
fidivl
negl
add
add
icebp
pop
inc
push
faddl
add
data16
inc
inc
ficoms
mov
fwait
cltd
adc
repz
xchg
inc
xlat
test
mov
xchg
add
sarb
mov
stos
push
xor
inc
stos
inc
inc
int3
rorl
mov
ficomps
ja
inc
loopne
sbb
adc
cmc
insb
add
mov
inc
movsb
add
mov
push
mov
popa
rcrb
dec
scas
data16
pop
cmp
cmp
adc
in
sub
add
push
daa
sub
pusha
imul
xor
push
cltd
xor
lahf
cli
sbb
mov
mov
inc
inc
shl
add
jl
stc
jl
and
pusha
andb
add
sbb
cmp
xlat
popa
imull
shl
inc
sbb
mov
cmpsl
jl
lret
mov
sub
lock
out
mov
cmp
sub
xchg
dec
sbb
stos
shlb
pusha
scas
or
pmaxub
push
mov
lods
adc
adc
inc
cmpsl
ss
cmp
jnp
insb
test
loopne
or
sbb
xchg
dec
icebp
movl
pushl
sub
adcb
test
icebp
sub
xchg
inc
andb
jle
fnstsw
jle
es
mov
pusha
pop
les
mov
add
pushf
test
mov
add
lods
add
cmpsl
sbb
mov
xchg
push
push
int3
lea
and
shlb
inc
je
mov
addr16
es
mov
addb
pop
leave
jno
hlt
into
add
ficomps
in
cwtl
jbe
mov
flds
jns
pop
jl
imul
lcall
les
mov
jecxz
int3
and
and
out
inc
fldcw
ja
inc
pusha
jmp
lds
arpl
mov
or
jne
pop
inc
mov
dec
lods
loopne
mov
out
or
movsb
andb
cmpsb
shlb
stos
loop
sub
lahf
xlat
mov
mov
jne
jne
outsb
mov
inc
or
inc
fsubs
jns
lea
pop
push
mov
push
sbb
or
add
stc
dec
int3
popf
aaa
sbb
inc
jbe
rcl
lret
pop
das
add
shlb
loop
dec
sbb
cltd
fistpll
inc
loopne
das
push
push
mov
cmp
inc
fbld
outsl
rorb
pusha
mov
pusha
mov
loopne
xchg
clc
cmpsb
loopne
mov
sub
and
loopne
imul
sub
sub
leave
ljmp
shlb
lock
pop
test
inc
xchg
add
arpl
sti
push
pushf
adc
pusha
inc
out
cmpsb
loopne
sbb
and
pop
ja
sub
imulb
in
sbb
xchg
cmp
mov
mov
sbb
cmp
test
mov
mov
loop
inc
push
add
testl
inc
pushf
pop
jo
cmp
add
add
loopne
xor
add
inc
or
adc
loopne,pn
movsb
and
sar
cld
cli
aad
push
inc
mov
or
inc
andb
jbe
leave
sbb
add
mov
xor
dec
xor
ds
cmp
daa
ret
pusha
add
xor
js
loopne
ret
jle
jns,pt
adc
and
lock
addb
movntq
inc
cmp
outsl
aam
in
addl
mov
cmp
jp
cmp
mov
icebp
dec
lcall
mov
dec
sbb
mov
dec
jle
out
mov
pop
arpl
lods
push
shrb
mov
lods
loopne
das
xchg
inc
test
dec
add
movsb
andb
cs
dec
std
add
psraw
push
and
jmp
out
push
out
ret
jnp
add
mov
xchg
lock
mov
xchg
push
pushf
push
mov
addb
loope
test
pusha
add
or
sub
inc
loopne
add
pop
mov
jmp
int3
sub
loopne
and
add
adc
lds
out
xchg
xchg
mov
sbbb
fcmovnb
inc
mov
and
push
pop
jno
mov
and
cmpsl
push
sub
add
or
inc
cmp
jnp
jbe
mov
mov
out
repz
mov
shlb
nop
xchg
sti
cmp
test
loopne
mov
jo
mov
add
sbb
dec
lock
pop
mov
jno
dec
xchg
out
int
fs
pop
push
cld
sub
add
shlb
lea
adc
push
and
movsl
mov
push
adc
shl
adc
rolb
popl
xchg
orb
inc
inc
ret
push
jns
lret
loopne
aas
xchg
sti
lcall
cmovnp
addb
fldcw
cmpsl
call
push
jno
aad
cmp
sbb
shlb
mov
xchg
add
push
loopne
call
seta
inc
pusha
sub
cmp
pusha
std
sahf
cmp
mov
insl
out
shrb
leave
mov
aad
push
push
adc
pop
pop
sbb
addb
mov
jge
fiadds
cld
les
dec
popf
push
lods
push
out
push
aad
sti
gs
mov
daa
mov
in
fiadds
rcr
idiv
scas
and
arpl
mov
or
add
aad
fildll
js
xchg
mov
xchg
push
inc
jae
xor
shlb
jns
adc
clc
sub
jl
pusha
shl
inc
loopne
mov
push
popa
in
cltd
xchg
mov
loopne
imul
jl
clc
jbe
stc
arpl
mov
push
add
scas
mov
nop
xchg
dec
mov
pop
paddsb
shl
xchg
xchg
repnz
addb
fs
dec
aas
data16
jl
shlb
mov
lahf
stc
mov
loope
mov
jo
rolb
imul
mov
cmp
mov
dec
mov
cmp
mov
inc
fisubrs
mov
push
jo
xchg
xor
and
pop
push
or
xlat
cmc
sbb
test
add
add
push
mov
jns
clc
push
mov
ficoml
cltd
cmp
add
iret
mov
pushf
lret
and
lcall
cmp
inc
addb
xchg
in
inc
scas
shlb
adc
sub
lds
fwait
scas
andb
xchg
sbbl
int3
int3
mov
rorl
mov
lea
push
ss
mov
sbb
fst
sub
mov
push
js
jbe
cmc
scas
mov
or
inc
int3
je
lds
sarl
fstps
mov
cmp
cmpsl
scas
inc
inc
pop
sbb
add
push
pushf
pop
xor
mov
and
or
fidivs
daa
cmpsb
shlb
lods
and
jb
mov
rcrb
jns
iret
mov
cmc
test
cld
pop
jno
imul
aad
jno
pushf
movsb
andb
add
loopne
testl
mov
and
and
outsb
lcall
shlb
mov
cmp
repnz
rolb
fcompl
and
and
inc
rorb
inc
mov
cld
xchg
add
xor
cmp
add
ror
sub
jge
addb
jl
in
int
mov
add
addb
add
and
andb
jnp
add
add
lea
imul
arpl
addr16
aad
push
xchg
pushf
and
out
mov
cmp
loopne
into
adc
fsub
ret
lret
ret
cmp
pop
and
inc
mov
addb
jne
add
add
sub
dec
aam
addb
fistps
insl
ja
mov
shl
adc
ret
push
scas
rolb
addb
test
andb
dec
and
mov
mov
mov
and
add
stos
mov
pop
rol
mov
jmp
add
add
pusha
add
cli
les
scas
mov
lods
pop
testb
rolb
sub
imul
inc
push
xchg
mov
dec
push
aaa
stos
adc
shlb
out
pop
int
stc
int3
mov
and
and
ljmp
xor
adc
add
lret
addr16
je
popf
repnz
rorl
push
add
scas
int
shlb
sbbl
mov
mov
and
mov
adc
pop
sahf
aaa
mov
inc
xor
add
cmp
pop
mov
inc
cmp
cltd
loopne
push
dec
mov
lahf
lret
add
imul
xor
sbb
push
and
xorb
ret
pusha
rclb
idivl
out
loopne
testl
test
ficompl
and
add
stos
pop
pop
fxch
inc
xchg
push
push
jbe
sbb
scas
loopne
pop
lock
pop
lahf
lock
mov
rcrb
sub
and
xchg
sbb
or
inc
ja
dec
ret
loopne
mov
xchg
js
cltd
inc
xchg
mov
push
out
pop
jg
cwtl
dec
andb
fdiv
xchg
insl
push
adc
shlb
mov
enter
cmpsb
add
xorl
xchg
inc
xor
shlb
lret
push
cmp
mov
mov
addb
sbb
jno
fisttpl
test
out
inc
leave
fwait
mov
add
add
andb
push
and
cmp
addb
std
nop
jl
sti
lods
and
cmp
bound
mov
shlb
repz
ret
mov
push
mov
adc
push
adc
sbb
xchg
mov
pusha
ret
inc
mov
sbb
clc
fs
inc
push
push
loopne
imul
mov
sahf
stos
inc
rclb
xchg
inc
adc
cmpb
stos
enter
jmp
lds
inc
clc
cmp
es
mov
ja
mov
pop
mov
or
inc
add
ret
aaa
icebp
mov
xor
inc
call
sti
cmpsl
outsl
test
jno
shlb
std
add
iret
rcrb
xor
cmc
dec
dec
pop
lret
int
dec
pop
sub
rclb
dec
sbb
xchg
jl
add
pusha
add
imul
pop
dec
test
mov
lds
pusha
dec
dec
push
add
mov
andb
and
pop
cli
in
push
jl
xor
dec
testl
nop
cmp
jmp
dec
ds
out
je
xchg
push
mov
andb
and
inc
dec
jge
inc
and
ret
xchg
movsl
adc
shlb
push
imul
pushf
nop
fisubs
iret
mov
dec
cwtl
jmp
cmp
xor
movsl
inc
xlat
aaa
push
mov
cwtl
sub
fisttpll
enter
sbb
mov
jns
outsb
test
mov
adc
cmp
pusha
subl
outsl
cmc
mov
mov
mov
xchg
je
hlt
repnz
sbb
cmpsl
push
and
addb
call
xchg
dec
dec
add
pop
sbb
aaa
divb
shrb
or
das
add
add
out
jp
fsubr
cmc
pop
xlat
mov
int3
rorb
arpl
xor
sub
loopne
iret
test
fisttps
mov
pusha
add
inc
test
rolb
inc
pusha
les
cmp
loopne
adc
xlat
or
dec
jbe
in
mov
sti
inc
into
popa
or
ljmp
mov
xchg
jl
fbld
in
sbb
pop
lret
sub
shl
popa
push
dec
dec
mov
les
add
adcb
push
aaa
mov
loopne,pn
push
mov
push
sahf
repnz
fisubs
mov
sbb
mov
out
ret
out
xchg
sbb
xchg
pop
ret
cmp
mov
mov
xor
sub
aas
imul
lret
in
test
loopne
pop
jns
dec
iret
mov
orl
movsl
dec
mov
mov
rclb
jbe
scas
aas
inc
lret
andb
rorb
inc
fnsave
mov
and
mov
mov
popf
mov
and
in
movsl
xor
add
or
pop
call
insb
mov
add
loopne
push
push
loopne
jmp
add
mov
and
mov
pusha
cmp
jb
fxch
test
inc
das
out
mov
pop
loopne
pusha
inc
or
into
out
cmp
pop
in
cmp
add
shlb
ja
daa
ss
outsl
je
adc
add
addb
push
andb
add
xchg
loope
addb
in
inc
or
and
loopne
mov
jp
add
pop
aam
jmp
mov
mov
and
repnz
loope
lea
lods
add
in
outsl
inc
sbb
sub
push
stc
mov
addb
jp
out
xchg
inc
cmpl
inc
xchg
testl
js
lods
rolb
mov
in
jae
inc
sarl
movsl
ljmp
and
mov
in
and
ret
push
leave
loopne
adcl
inc
popa
or
rclb
pop
insb
xor
loop
stos
fistpll
xchg
sbb
pop
repz
xchg
mov
loopne
cwtl
mov
cmovnp
mov
imul
xor
add
inc
mov
sbb
rolb
push
push
mov
and
add
shlb
mov
jle
cmpsb
pusha
mov
inc
rcrb
out
in
inc
xor
int3
stc
mov
enter
adc
sahf
lock
inc
xchg
pusha
mov
cli
cli
pop
xlat
mov
add
je
rol
cli
pop
or
add
out
fidivrl
push
mov
inc
sbb
push
test
bound
out
xchg
popa
xchg
pop
sub
add
and
pushf
daa
mov
js
jl
std
mov
mov
sbb
sbb
cmp
pop
jge
das
xor
shlb
insb
xchg
sti
push
call
and
cwtl
sub
mov
cvtpi2ps
pusha
and
loopne
addb
mov
add
fwait
inc
or
pusha
xor
and
sarb
push
inc
inc
pop
negb
icebp
mov
ret
cmc
ljmp
add
mov
and
and
mov
sbb
sti
out
sub
mov
addb
or
xor
fs
rolb
fmuls
and
add
mov
ds
add
loopne
xor
fwait
movsl
jecxz
mov
roll
andl
loopne
push
dec
inc
mov
ljmp
loopne
or
inc
mov
lret
loopne
andl
push
rcl
dec
stos
shlb
sub
shl
loopne
xchg
dec
call
xchg
sub
and
inc
and
xor
mov
popa
nop
insl
inc
cmpsb
pusha
shlb
push
jb
shlb
pusha
pusha
mov
pusha
ja
pusha
add
push
lods
push
add
pushf
sti
cmpsl
xor
mov
sbb
pop
fs
andb
sub
inc
loop
loopne
outsb
push
add
mov
shlb
mov
add
jns
mov
push
fcmovnbe
fisubs
shlb
add
pop
pop
in
xor
insl
cli
movsl
or
andb
int3
lods
rolb
shl
mov
scas
rolb
loopne
div
mov
pop
dec
fimuls
mov
inc
loopne
pop
test
and
mov
inc
pusha
add
jmp
add
sarb
and
push
push
lods
das
sbb
pop
in
bound
dec
and
pusha
pusha
xchg
enter
inc
and
insl
inc
pop
mov
loopne
jp
sbb
inc
push
mov
sub
push
adc
xchg
fnsave
mov
cmp
xor
or
mov
jecxz
out
sahf
mov
and
mov
pushf
jno
sub
add
xor
test
pusha
lahf
fldenv
rclb
mov
andb
mov
cmp
mov
xor
mov
adc
adc
adc
dec
shl
aad
mov
and
jle
or
loopne
xor
add
mov
inc
add
popf
pop
mov
jle
push
andb
into
push
xchg
sbb
test
inc
ss
cmp
cli
repz
add
xchg
dec
repz
fldenv
aam
push
bound
inc
addb
xlat
icebp
les
test
sbb
pop
sbb
frstor
loopne
fldt
mov
or
pusha
cmp
and
inc
test
inc
out
ljmp
loope
repnz
lds
xor
mov
pusha
xorb
mov
jg
or
dec
test
loopne
cmp
inc
loopne
mov
dec
fstpl
fiaddl
repnz
or
sbbb
subl
inc
mov
mov
movsb
add
or
sub
inc
test
adc
xchg
inc
pop
mov
jno
mov
and
xor
add
jge
lahf
dec
inc
mov
addb
test
addb
inc
mov
xor
cmc
xchg
pushf
jp
and
push
mov
jne
hlt
scas
jo
andb
andb
push
popa
and
repnz
xor
add
sub
mov
ret
mov
mov
scas
and
mov
sub
push
rolb
shl
lahf
test
loopne
and
mov
mov
sbb
repz
or
out
xchg
hlt
mov
fidivl
cmp
loopne
flds
mov
shlb
rorb
stos
pusha
inc
scas
addb
andb
repnz
outsl
decl
push
xor
push
lcall
mov
inc
cmp
pushf
cmc
mov
das
inc
fld
or
test
and
shl
jae
mov
xor
add
fsubrs
and
mov
inc
bound
pusha
loopne
pop
mov
mov
push
inc
xor
and
cwtd
push
and
rolb
mov
push
and
shrb
pop
sub
inc
popf
xchg
aas
fnstcw
pop
ret
addb
loopne
test
and
addb
lcall
das
mov
fwait
add
test
inc
out
testb
rolb
and
push
pushf
cld
cmc
jl
outsl
lea
mov
add
jb
jl
ljmp
xchg
fs
inc
cmp
loopne
xchg
push
jbe
sarl
xchg
decb
loopne
cld
lea
shlb
dec
push
adc
lods
add
xor
mov
lcall
fstl
push
inc
loopne
mov
or
mov
xchg
roll
outsl
stos
rolb
popf
jle
mov
das
cmp
add
mov
jge
imul
mov
fwait
mov
shlb
pushf
lret
mov
adc
sbb
add
fildll
pop
aam
data16
jns
out
or
mov
mov
mov
pop
pop
jo
lock
mov
mov
rcrb
std
mov
sbb
jle
lea
sbbb
mov
repz
shlb
mov
int
psrld
mov
dec
push
mov
jae
mov
scas
rolb
inc
jecxz
jb
dec
mov
filds
pusha
lock
cmp
dec
js
dec
cmp
jge
and
faddp
scas
dec
mov
lds
and
mov
mov
loopne
loope
inc
mov
mov
mov
hlt
outsl
call
xchg
out
xor
push
lods
loopne
repnz
or
push
into
fisubl
repnz
push
notl
mov
loopne
es
pusha
in
ja
cmp
mov
add
inc
pop
dec
addb
test
jo
push
mov
push
mov
xchg
pop
dec
test
bound
loopne
stc
pop
aaa
xchg
rorb
pusha
ja
add
pusha
inc
fs
sbb
sub
ljmp
jb
nop
dec
sub
pusha
or
cmp
pushf
imul
add
jo
push
imul
pusha
add
sbb
ja
sbb
enter
jne
cmpsl
in
imul
push
dec
push
iret
pop
std
movsb
pusha
pusha
push
dec
fisubrl
mov
xchg
daa
rcrl
cmpsb
pusha
orb
mov
pop
adc
lret
pop
dec
or
pusha
add
test
pop
aad
stc
and
sub
pusha
mov
push
add
adc
xchg
xor
sub
add
imul
dec
cmp
and
cmpb
cmp
repnz
jnp
ds
push
jnp
inc
mov
fsubrl
cmp
loop
pop
pop
mov
divb
dec
cltd
mov
mov
inc
push
ljmp
mov
dec
push
jl
add
and
ss
loopne
push
xor
rolb
je
loopne
ds
adc
cld
mov
loopne
push
dec
inc
iret
jb
rol
mov
loope
cmpsb
loopne
negb
out
dec
inc
test
loope
mov
mov
fisubrl
inc
add
push
jmp
pop
enter
cmp
loope
xchg
pop
lods
rolb
in
cmpsl
jmp
stos
add
shlb
fcomp
pop
push
lea
pusha
ja
or
leave
bound
in
push
sub
lea
xor
xor
loopne
clc
lods
jne
shlb
aad
or
daa
sub
ja
add
pop
imul
loopne
push
pusha
loopne
in
je
mov
mov
add
xor
push
cmpsb
andb
xchg
mov
push
mov
cmc
or
in
mov
xor
aas
data16
in
mov
std
in
jle
mov
cmpsb
mov
stc
shll
mov
jl
pusha
xchg
addr16
dec
out
push
jns
inc
or
stc
add
mov
inc
loope
xlat
ljmp
and
or
shlb
fs
jns
sarl
shl
sbb
iret
ficoml
fnstsw
sbb
jbe
addb
loope
mov
push
insb
cmp
popf
pop
inc
call
pop
icebp
enter
arpl
mov
imul
andb
push
les
rorb
sar
clc
xchg
mov
lods
repz
lret
fcoml
movsl
and
rolb
in
shl
xchg
pusha
ret
pop
in
addr16
cwtl
mov
out
rolb
loopne
pop
sarl
repz
inc
pop
mov
loopne
dec
andb
adc
sub
loopne
mov
pop
xchg
and
and
push
xchg
ljmp
pop
mov
cmp
pop
mov
pop
push
pop
push
sbb
pusha
and
rorb
repz
jns
mov
add
push
xor
push
jns
push
scas
andb
fsubs
mov
fstl
push
mov
call
adc
addb
pop
inc
sbbl
in
xchg
loopne
adc
xlat
and
loopne
push
enter
popf
sub
mov
rclb
loopne
push
shlb
scas
shlb
mov
adc
je
or
mov
sbb
jge
push
and
xlat
xchg
dec
test
and
jg
add
js
lock
mov
data16
jb
iret
in
addb
jne
rolb
sar
addl
andb
lods
push
arpl
inc
pusha
jl
jp
push
mov
lret
fucomi
mov
jle
out
mov
add
fwait
jnp
sbb
xlat
ror
and
lods
add
in
xor
and
dec
xor
or
push
or
rcl
push
rolb
mov
and
sub
loopne
test
inc
out
dec
nop
pop
mov
mov
inc
and
je
add
js
jnp
stc
test
fisttpl
jp
push
jno
cmp
inc
insb
jle
or
andb
add
inc
sub
call
cmp
sbb
pusha
inc
add
shlb
jmp
add
mov
cmc
mov
ss
sub
xor
cmp
out
addb
jnp
imul
sbbl
addb
roll
add
add
out
dec
addl
js
mov
jb
iret
test
daa
sub
mov
shrl
clc
roll
jb
loop
add
lock
jecxz
inc
jae
mov
filds
add
int3
and
pop
xor
pusha
loopne
jnp
andb
in
adc
add
mov
and
and
inc
jle
mov
loopne
and
add
hlt
iret
cwtl
roll
pop
outsb
loope
testl
mov
shrb
mov
test
inc
inc
pop
inc
pop
int3
out
sbb
leave
pop
ret
push
adc
lret
fbstp
push
xor
xchg
addb
inc
sub
dec
arpl
cmp
and
cli
stc
fmul
paddsw
xchg
outsb
data16
adc
mov
mov
push
enter
loopne
mov
stc
cmpsb
pusha
shl
xchg
and
adc
inc
xchg
loopne
add
mov
mov
mov
and
inc
jo
sub
fwait
adc
and
lcall
push
xchg
fmuls
rcrb
shl
adc
shrb
clc
out
in
cmc
aad
cmc
stc
dec
mov
or
loopne
xlat
or
rolb
xchg
sub
or
push
movsl
data16
and
mov
dec
insb
fwait
add
test
pusha
sahf
fidivl
or
mov
addb
push
cmp
mov
loopne
dec
cmpsb
pusha
adcb
popf
lea
adc
clc
or
inc
xor
cmp
lret
push
leave
rcrl
ss
pop
lods
ljmp
cmp
adc
pusha
shlb
push
call
outsl
stos
and
ljmp
pusha
shl
jno
jmp
rolb
inc
ds
mov
bound
mov
and
xor
ret
repz
out
mov
addb
and
mov
insl
push
imul
ficompl
sbb
insl
js
mov
sub
mov
pop
insb
lret
push
repz
jne
fidivl
and
in
pusha
arpl
addb
add
inc
or
inc
adc
mov
lods
stc
data16
ljmp
adc
ficomps
inc
sub
cmc
or
pusha
orl
add
sub
xlat
adc
sub
shlb
dec
daa
dec
xlat
add
je
push
cmp
xchg
stc
push
roll
inc
iret
adc
cltd
roll
pusha
add
mov
or
push
inc
aaa
and
mov
and
lea
cmp
cwtl
add
jb
mov
sbb
or
inc
cmpsb
and
and
push
sbb
loopne
nop
shrl
daa
out
in
andb
daa
les
call
cmc
stos
xor
sbb
xchg
aas
mov
inc
int
cmpl
fiaddl
and
sahf
and
jecxz
stc
in
sub
mov
xchg
sbb
mov
and
mov
xor
and
mov
and
push
cmp
and
loopne
and
push
dec
adc
or
nop
add
push
addb
xor
ret
jb
scas
rolb
mov
lods
addb
sbbl
inc
inc
fcompl
lods
jb
or
cmpsb
mov
jno
addl
xchg
pop
shl
mov
inc
loopne
or
sahf
jne
in
cmpsb
pusha
mov
inc
pop
shll
andb
stos
add
sub
mull
shlb
lret
inc
cmpsb
add
std
sbb
pop
sub
mov
stc
movl
pop
repnz
pop
int3
ja
push
adc
ljmp
pusha
pop
in
jno
arpl
hlt
cs
pusha
mov
mov
fldl
addb
ljmp
cmpsb
inc
and
inc
adc
sub
and
ds
out
sarb
or
add
fwait
jnp
pushf
mov
sub
mov
ja
sub
mov
cmp
xchg
ret
ffreep
popa
mov
jl
push
sub
aas
dec
jns
sbb
and
adc
jbe
loopne
cld
ss
cmp
in
shlb
addb
scas
mov
dec
sbb
cmp
scas
andb
mov
cwtl
mov
add
sbb
pop
pop
testb
pop
jb
fwait
mov
adc
mov
shl
or
gs
mov
stc
jnp
addb
cmp
stos
inc
rolb
xchg
int
inc
movsl
pop
adc
inc
and
mov
imull
in
and
add
or
or
push
jp
out
xchg
or
insl
mov
mov
andb
xchg
dec
add
out
lsl
pusha
adc
pop
inc
inc
mov
mov
xor
jmp
cmp
inc
push
in
sub
pusha
loopne
js
repnz
or
shlb
push
jge
mov
lock
xchg
xchg
and
sbb
dec
pop
out
and
push
xlat
push
pop
ljmp
sbb
addb
xor
mov
add
pop
xlat
nop
mov
push
lods
inc
rorb
pushf
in
test
pusha
mov
mov
add
imul
sti
xor
mov
std
lock
pop
jae
xchg
lcall
and
pusha
shlb
lret
out
dec
add
inc
stos
mov
sub
pusha
ss
inc
inc
jns
rorb
ret
dec
test
add
js
lea
dec
xchg
in
pop
fcmovne
repz
lea
adc
or
pop
scas
jge
mov
rcrb
add
xlat
xchg
adc
imul
dec
aad
mov
mov
movsb
shl
repz
adc
movsb
inc
add
pusha
loopne
ret
jmp
movsl
and
adc
ret
loopne
or
cmp
inc
inc
ljmp
nop
and
mov
pusha
daa
pop
mov
lret
inc
jns
aam
rcll
sub
insb
dec
inc
das
mov
loopne
add
loopne
int3
mov
mov
add
loopne
jo
inc
push
inc
ljmp
sahf
lahf
out
jae
add
rcl
mov
lret
and
and
fcomps
mov
repnz
andb
int3
stos
popf
aaa
push
or
out
insl
jl
cmp
or
aaa
mov
adc
negl
loopne
mov
jmp
push
sahf
mov
pop
pop
dec
push
and
loopne
in
insb
mov
into
inc
jnp
insb
fdiv
mov
cmc
stc
icebp
pop
stos
das
inc
stc
cld
call
loopne
jle
or
cwtl
add
and
mov
loopne
mov
xrelease
mov
and
stos
xor
xor
add
testl
push
addb
mov
les
loopne
jne
ss
test
aaa
sahf
rclb
xor
jae
push
pusha
subb
xchg
mov
add
iret
outsb
popf
mov
dec
dec
inc
outsl
out
push
mov
push
jmp
mov
or
adc
pop
mov
xor
jbe
cmp
loopne
pop
dec
stc
or
addr16
outsl
sarl
sbb
sahf
movsl
loop
mov
pusha
and
xchg
mov
pusha
sarb
fisttps
hlt
push
sbb
add
cs
mov
jmp
mov
pusha
inc
shlb
mov
iret
fs
xor
pusha
loopne
add
jge
sub
and
pop
fdivrs
push
dec
xor
xor
scas
mov
out
pop
clc
inc
mov
mov
shr
inc
lcall
mov
fdivrl
inc
int3
xor
push
adc
dec
fistps
pushf
inc
cmpsl
aam
fs
and
jp
inc
mov
fsubl
loopne
lock
cld
pop
inc
sub
xor
adc
ret
ss
and
add
sbb
sub
dec
jecxz
jecxz
hlt
movsl
sbb
push
shlb
mov
jcxz
pusha
pusha
jbe
mov
adc
mov
jae
andb
mov
mov
adc
dec
scas
lahf
popf
stc
jb
cs
adcb
pusha
add
xor
addb
and
jnp
fstpl
mov
mov
cltd
fildl
add
xor
shlb
and
pop
jle
add
jbe
jg
pop
add
insl
dec
data16
or
pop
scas
pusha
rcr
pop
int
mov
mov
xchg
std
sub
inc
sbb
and
or
loopne
test
lods
sbb
mov
cwtl
int
mov
ret
aaa
shrl
push
cmp
push
pop
stos
mov
pop
and
and
inc
int3
rcrl
inc
mov
iret
xchg
jns
adc
jo
addr16
pop
pusha
std
jle
add
and
loopne
ljmp
ljmp
xor
shll
loopne
push
jns
mov
shlb
aaa
imul
incl
and
jb
pop
mov
out
mov
pop
mov
andb
fisubs
outsl
fdivs
mov
inc
pop
rorl
inc
pusha
das
lret
cs
movsl
outsl
or
bound
ljmp
lret
pop
pop
jne
inc
loopne
andl
mov
and
mov
or
push
sub
loopne
xor
xchg
int3
testb
insb
insb
cmp
pop
dec
xchg
jmp
pop
sub
pop
in
mov
push
lock
lods
lods
aas
es
adc
xchg
mov
test
and
out
xlat
fcoms
and
pusha
repz
inc
pop
sub
and
mov
shlb
sub
andb
shlb
mov
ds
and
pusha
and
arpl
stos
andb
jo
pop
fstps
push
loopne
xor
out
xchg
pop
call
xchg
mov
enter
xor
and
xor
mov
addr16
enter
pop
push
mov
cwtl
adcl
sti
sahf
push
mov
das
data16
out
pop
or
or
sbb
and
dec
das
cli
mov
mov
andb
jb
pop
and
inc
xor
pusha
push
dec
jbe
fistps
add
cmp
shl
cli
mov
dec
mov
imul
mov
test
shlb
sub
pop
shll
dec
add
std
rcr
filds
mov
and
call
lea
and
push
dec
outsb
outsl
leave
shlb
pop
stos
mov
loopne
adc
pusha
lock
icebp
inc
pop
shrb
add
pushl
ret
addb
sub
xchg
fdivrs
in
dec
leave
movl
loop
divb
cmp
inc
hlt
and
xor
mov
mov
mov
add
pusha
push
jbe
and
cs
fwait
sbb
push
adcl
add
jo
inc
pusha
mov
mov
popf
hlt
mov
fists
daa
sarl
imul
lret
and
pop
out
pop
lcall
jb
aad
pop
cmp
popa
xchg
adc
hlt
mov
stos
shl
insb
inc
rclb
jle
add
and
movsl
cmp
push
into
add
test
pop
jecxz
adc
push
andb
xor
shrd
dec
mov
and
sti
shll
dec
and
rclb
stos
xchg
jbe
mov
pusha
bound
sub
mov
js
xor
addl
roll
sbbb
jae
shlb
add
lock
cmc
xchg
mov
fmull
outsb
out
xor
cmp
mov
jle
xchg
loope
jns
xchg
out
cwtl
mov
mov
leave
xchg
push
popa
ds
in
mov
call
sub
sbb
into
int
in
pop
and
scas
mov
ret
xchg
shr
stc
sub
pusha
fnsave
mov
add
pop
adc
or
inc
ret
rep
and
mov
add
sbb
test
mov
rcrb
adc
iret
pop
in
adc
scas
push
shr
shlb
adcl
pop
mov
mov
rcl
ja
fs
cltd
sar
and
cli
ljmp
inc
ja
cmpsb
mov
xorl
inc
xor
addr16
cwtl
call
pop
imul
loope
mov
repz
rorb
xchg
js
or
in
nop
or
movsl
lret
ror
add
loopne
js
pusha
loopne
jnp
rolb
sarl
mov
fmuls
loope
sub
cmp
cld
xor
out
xchg
lds
add
inc
inc
push
movb
mov
mov
inc
and
and
push
in
stos
in
negb
add
rol
xchg
lcall
inc
mov
sti
ds
ds
push
sbb
popf
jge
and
insl
pop
pushf
scas
fisubrs
jnp
into
mov
scas
sbb
or
loopne
out
pushf
loope
loopne
ja
data16
cmpsb
inc
loopne
stc
mov
mov
sub
push
xchg
addl
sahf
xchg
push
and
pusha
mov
sub
adcb
shlb
mov
cli
cs
shrb
icebp
scas
push
mov
inc
inc
sub
and
out
int3
bound
arpl
arpl
inc
lods
pusha
shr
and
aaa
int3
fistpl
sbb
andb
jae
mov
subb
mov
cmp
adc
pop
data16
pop
fadd
and
shlb
add
ss
xchg
sub
add
loopne
ret
inc
add
loopne
push
sahf
lret
or
inc
push
out
aam
out
add
sub
inc
shl
cmp
mov
outsb
addb
arpl
pusha
daa
insl
and
add
addb
inc
pushf
popa
adc
sarb
inc
mov
jle
pop
cmp
orb
inc
xor
nop
rcrl
fwait
jae
mov
mov
addr16
movsl
fstps
movsl
xorl
mov
mov
loopne
push
inc
negb
and
and
push
sbb
add
inc
dec
pop
jl
sub
rcl
lock
or
rorb
inc
mov
cmpsb
rolb
aam
daa
pop
inc
push
xchg
aam
cmpsb
shl
inc
add
mov
rorb
pop
push
inc
rclb
nop
cwtl
inc
inc
dec
adcl
mov
or
jmp
loopne
insb
stc
xchg
pusha
shrl
mov
cmc
outsl
data16
mov
or
lahf
mov
arpl
aad
mov
loopne
shlb
incb
and
into
sbb
mov
aas
in
mov
jbe
pusha
test
orb
loopne
pop
stos
sti
xor
cmp
push
arpl
je
scas
pusha
sbb
pop
cmp
and
dec
xor
or
sbb
dec
shrb
xchg
inc
xchg
les
push
mov
pusha
js
mov
sbb
out
or
stos
or
inc
adc
int3
test
dec
jle
xchg
loopne
cmp
pop
add
iret
int
in
stos
mov
and
sub
fnstsw
orl
loopne
dec
lret
orb
pop
jb
loopne
inc
pop
shl
cltd
pop
jne
adc
jbe
sbb
sar
and
insl
sbb
pushf
jl
inc
movsb
pusha
sbb
pop
repz
pop
test
incl
sahf
mov
sub
xchg
insb
aad
sbb
pusha
jp
rorb
or
pusha
cmp
push
daa
fs
sti
lock
mov
inc
in
sub
in
leave
sti
mov
fstpt
jecxz
je
xchg
aam
lret
ss
std
pop
idivb
in
int
shlb
mov
inc
call
dec
lods
inc
and
cli
mov
and
in
out
loopne
icebp
sbb
data16
sbb
inc
scas
shl
mov
cmp
call
js
xchg
loop
jne
inc
cmp
mov
shlb
hlt
addb
add
cmp
push
inc
ja
fdiv
dec
xor
pop
aad
pusha
and
outsl
test
adc
and
and
out
lock
call
fsubs
lea
dec
push
loopne
mov
addb
test
inc
mov
lret
loopne
aad
dec
jne
addb
sti
pop
in
adc
orb
push
shlb
sahf
push
adc
and
ret
out
mov
jg
push
jle
lcall
andb
addb
loopne
repnz
ret
cld
ljmp
lcall
out
push
ret
push
inc
xor
das
les
imul
aad
dec
dec
push
das
mov
sahf
adc
inc
mov
xchg
rorb
insb
dec
fnsave
mov
mov
add
add
inc
jnp
jle
mov
xchg
pop
or
pusha
cmp
loopne
xor
in
xchg
lret
imul
push
add
shlb
adc
fdivrp
push
pusha
and
sahf
mov
jl
jbe
mov
stc
push
inc
jb
andb
dec
push
mov
mov
loopne
inc
dec
stc
repnz
sbb
icebp
into
fldl
andb
and
inc
mov
lcall
add
loopne
cmp
or
lret
jbe
imul
add
pusha
pop
sub
add
pusha
inc
dec
cmp
sub
into
pop
and
or
lahf
aam
rorl
jno
ja
and
and
fstpl
out
icebp
mov
fsubl
loope
mov
dec
shlb
jp
out
dec
daa
ljmp
and
test
add
repnz
shll
roll
mov
call
mov
push
lea
xchg
xchg
push
jnp
fadds
push
stc
cwtl
fdivr
inc
xlat
test
inc
cmpsl
add
out
imul
in
loope
jb
add
ja
mov
xor
mov
xlat
clc
ja
pushf
push
loope
pop
jo
pusha
cmp
repz
cmp
pop
cs
lea
mov
add
jg
push
scas
mov
fdivl
pusha
mov
push
jns
or
and
cmp
add
leave
jle
pop
adc
and
pop
fwait
outsl
test
inc
mov
add
add
enter
mov
leave
les
add
and
cmp
dec
push
jl
sub
xlat
jo
stos
addb
lahf
pop
cmpsb
add
andb
insb
pop
pop
mov
jnp
pushf
push
mov
add
mov
mov
add
mov
andb
add
or
loopne
mov
push
pop
jmp
inc
loopne
sbb
or
rclb
cltd
jo
sbb
das
adc
and
inc
jge
ss
loopne
enter
pusha
repnz
mov
mov
or
les
loopne
cmp
inc
cmpb
sub
shrb
inc
jmp
mov
and
mov
out
jnp
and
rolb
addb
popf
mov
adc
fstps
aas
cld
dec
lret
icebp
and
loopne
and
jge
outsb
shrl
addl
sbb
pop
negl
mov
mov
jns
cmc
stos
dec
push
jae
xor
xor
mov
jmp
mov
cli
xor
fsubr
push
add
insl
addr16
add
cmp
inc
dec
aam
andb
dec
ss
or
jno
mov
add
push
sahf
jae
add
xor
cld
mov
mov
pop
scas
scas
add
in
addb
inc
mov
dec
pusha
fstps
xchg
rolb
std
jl
int3
js
fwait
dec
pop
insl
sub
add
xchg
mov
cmp
sbb
shr
cmp
scas
inc
pusha
jae
mov
mov
pusha
push
push
xor
jb
in
pop
aas
mov
xchg
add
dec
xchg
mov
hlt
loope
push
jo
jo
pop
inc
lock
aad
mov
cmc
sbb
fxch
movb
mov
jbe
pusha
pusha
dec
inc
mov
mov
cmp
mov
mov
jbe
push
and
add
cmc
int
or
loopne
pop
ljmp
stc
loop
adc
imul
inc
inc
adc
and
icebp
mov
fnstenv
mov
mov
xchg
es
add
shlb
dec
jmp
and
and
and
sub
and
int
pop
outsb
cmpsl
xchg
mov
out
movsb
and
sub
subb
push
sub
lock
push
dec
add
jp
dec
aaa
out
sbb
inc
shrb
clc
xor
add
add
push
loopne
rcrb
pop
xchg
lcall
and
inc
fsubrp
lcall
loopne
xchg
gs
inc
clc
lahf
mov
and
mov
rolb
iret
or
fcmovne
into
xor
sub
cmp
add
loopne
rcrl
hlt
fsubrs
inc
jmp
inc
fiaddl
inc
sbb
adc
mov
jmp
add
add
push
mov
jne
pusha
add
inc
and
in
bound
add
dec
inc
lds
popf
sub
cmpsb
andb
into
mov
mov
andb
and
jmp
add
mov
pusha
pusha
clc
push
andb
xlat
dec
mov
inc
or
rorb
sahf
std
gs
add
pusha
bnd
fsin
mov
pop
cmp
fs
sub
add
add
aad
jmp
inc
ret
mov
sub
inc
dec
movsl
pop
mov
or
loopne
push
pusha
pusha
ficoml
xor
sbb
aad
outsb
xlat
dec
dec
cld
sbb
mov
or
cltd
nop
test
enter
jge
pop
cmp
mov
inc
mov
in
mov
insl
jle
sub
and
jecxz
into
jnp
cs
mov
jl
add
icebp
repnz
inc
shlb
aad
dec
les
mov
addr16
inc
sbb
out
inc
into
ljmp
popa
daa
fdivrl
push
cmpsb
and
xchg
fwait
push
andb
mov
add
dec
fstpt
sbbl
adc
sahf
push
std
in
dec
dec
cmp
daa
imull
push
and
jmp
inc
retw
mov
ret
daa
xor
push
sub
or
pusha
leave
and
fadds
and
loope
mov
mov
shlb
outsb
cmpsb
and
dec
out
xchg
xchg
mov
bound
popa
mov
mov
sarb
cmpsl
jmp
inc
jnp
inc
dec
cmpsb
mov
sub
add
or
add
sub
add
jns
les
push
xchg
cmpb
lds
xor
cld
mov
inc
push
pop
lret
jne
xor
arpl
insb
out
ss
jp
lds
into
pop
adc
inc
cmp
out
sub
lds
stos
rolb
call
in
subl
dec
mov
xor
pusha
and
inc
pusha
jbe
add
adc
loop
andb
xchg
lcall
cmpsb
mov
pushl
xchg
xorl
in
jns
inc
xchg
movsb
add
insl
lahf
test
push
inc
rclb
loopne
sub
popf
scas
andb
mov
xchg
lock
shlb
mov
in
mov
leave
pop
xor
dec
sahf
mov
jg
loopne
mov
movb
xchg
popa
out
out
pop
add
dec
inc
rclb
mov
xor
inc
add
shlb
loopne
loopne
xorl
and
mov
push
cli
hlt
and
out
js
push
jmp
pushl
shll
dec
aam
hlt
cmp
jl
jae
jns
loopne
cmp
sbb
dec
mov
loopne
dec
fs
aas
xchg
imulb
rorb
jg
dec
sub
add
xchg
shl
iret
in
mov
loopne
pusha
fcmove
negl
fwait
jmp
add
test
rcr
lock
movsb
mov
inc
rcrb
out
ja
fwait
mov
out
xchg
jne
cwtl
mov
js
pop
inc
les
sub
lock
nop
cmp
loopne
pushl
into
push
adc
movsb
inc
loopne
ret
test
adc
aad
out
outsb
addr16
xchg
nop
leave
gs
clc
not
sub
pusha
jns
sub
inc
loop
in
pop
out
push
addb
inc
xor
lods
lea
xor
sti
mov
inc
shlb
sub
mov
out
test
lret
sbb
popl
shl
je
inc
sbb
popl
add
into
push
xor
loop
inc
out
rep
dec
pop
cmpsb
and
shrb
out
clc
rcl
sbb
sahf
push
mov
andl
xor
push
inc
rcrl
sbb
cmp
pop
fsubr
and
sahf
xor
test
lock
pop
jmp
mov
sub
shlb
adc
nop
cmp
add
das
sahf
jp
pusha
inc
out
jbe
loopne
sub
mov
ljmp
and
cld
push
adc
shlb
cwtl
dec
in
imul
or
pusha
mov
or
pusha
mov
ss
mov
jnp
andb
lods
and
sub
lret
adc
pusha
pusha
mov
seto
jo
inc
orb
add
adc
iret
scas
mov
cmp
add
mov
mov
xor
jae
inc
jg
sub
pusha
out
cmc
lds
push
and
loopne
andb
rcrw
iret
ret
cmp
cmc
in
or
in
outsl
add
fisubs
inc
pusha
inc
imul
shlb
jecxz
and
insb
cmp
inc
shrb
enter
scas
loopne
mov
mov
mov
jne
mov
repz
push
into
mov
mov
add
addr16
mov
and
sbb
paddb
inc
mov
adcb
shr
mov
mov
aam
jmp
sub
xchg
in
mov
andb
shll
lds
icebp
lret
insb
mov
insl
loopne,pn
mov
inc
scas
addb
ljmp
adc
xchg
pop
aad
cmp
and
mov
add
pusha
loopne
enter
dec
imul
stos
pusha
add
xchg
fsubrs
add
rorl
stc
push
orl
add
subb
cmc
dec
push
loop
stos
xchg
lods
addb
clc
add
inc
test
shrl
and
test
mov
inc
mov
loopne
push
jns
andb
addb
ret
lock
mov
xor
fs
add
add
add
mov
addb
inc
mov
pushf
cltd
dec
addr16
xchg
lds
pusha
pusha
repnz
inc
icebp
aas
sub
lods
mov
lret
jns
mov
rolb
mov
addb
lods
inc
pusha
adcl
jae
lock
outsl
sub
loopne
xor
lret
fsubl
pusha
push
pusha
loopne
lcall
sub
pop
cmp
add
mov
mov
sub
mov
ds
cli
fadds
loopne
imul
nop
adc
mov
loopne
add
adcb
xchg
cmpsl
std
and
inc
outsl
push
bound
sbb
and
and
xor
push
loop
add
add
jecxz
pop
cmp
stc
repnz
out
jne
inc
loope
and
fldenv
ret
mov
cmp
rolb
pusha
js
dec
xchg
add
addb
mov
adc
jge
scas
push
loop
add
mov
rorb
push
loopne
cld
test
das
insb
sub
sbbb
clc
dec
insb
xchg
shl
mov
xchg
insl
je
inc
inc
xchg
pop
mov
jmp
xor
cld
pop
fwait
and
cmpb
dec
cmpl
and
mov
leave
ss
addr16
push
loop
pusha
inc
mov
test
cmpsl
xlat
popa
movsb
loopne
ret
or
outsl
aaa
jns
cld
lock
cwtl
inc
dec
cmp
mov
inc
jle
xor
mov
rolb
add
jno
notl
test
and
and
pop
jb
out
push
adc
xor
orps
or
mov
add
loopne
sahf
ret
repz
xor
sbbb
and
adc
inc
sbb
je
jnp
enter
push
mov
pop
fcmovnbe
lret
pop
stc
jne
add
andb
jecxz
add
in
popa
lock
sbb
mov
mov
add
inc
inc
or
push
test
lods
cmp
vphaddubw
jmp
sti
mov
pusha
sbb
push
movsb
mov
and
jno
xor
lods
cmpsl
insl
test
jnp
mov
hlt
test
inc
jp
test
adc
pop
scas
mov
mov
adc
sub
push
lcall
iret
mov
and
sub
adcb
push
mov
sub
jmp
daa
sub
pop
leave
sub
mov
add
xchg
imul
push
inc
add
popa
mov
stos
mov
shlb
adc
jg
data16
repz
sbb
sbb
and
mov
outsb
arpl
lahf
iret
fldz
push
jae
adc
ljmp
frstors
and
pusha
xchg
sub
sarb
jb
sbb
stos
mov
xchg
mov
jl
and
test
inc
dec
ss
loopne
add
stc
movsl
test
inc
mov
jp
insl
jns
inc
mov
rclb
test
push
ret
cmp
mov
fnstcw
and
sti
aam
pusha
pusha
stos
outsb
rcll
clc
shlb
loopne
repnz
pusha
add
add
mov
lret
adcl
cs
rorb
loop
and
out
mull
in
mov
mov
xor
cmpsl
xchg
popa
cmp
xlat
mov
andb
dec
mov
cmp
imul
fildll
and
outsb
rcrl
insb
in
shll
mov
loop
and
jb
mov
shlb
xor
lret
inc
jl
subl
xchg
add
add
rolb
data16
pop
sti
jb
popf
adc
and
jbe
mov
rolb
jge
and
push
arpl
cltd
sbb
into
and
xchg
xchg
mov
and
mov
add
int3
mov
andb
pop
add
sub
test
mov
mov
sub
inc
push
mov
iret
imul
adc
and
or
shl
xchg
aaa
dec
sbb
pop
movsl
addb
aaa
push
repz
and
and
jp
lods
aaa
pop
adc
repnz
push
rcl
push
lds
outsb
mov
and
add
mov
push
or
clc
cli
loope
add
xor
mov
shlb
jge
mov
mov
jmp
mov
rcrb
inc
xchg
or
fidivrl
data16
dec
or
pop
xor
mov
pop
pop
sub
inc
je
push
imul
hlt
jne
cmp
adc
pusha
inc
cli
xchg
loop
add
inc
out
fsubrs
addb
mov
xlat
jmp
hlt
je
call
inc
es
and
xchg
inc
sbb
cmpsl
arpl
rorb
add
mov
jmp
sbb
inc
pop
lock
sbb
mov
xchg
addb
jne
dec
mov
cli
subl
stos
and
fistps
sub
pusha
cmpb
xchg
dec
inc
mov
cmp
scas
xor
xor
xlat
adc
js
divb
jmp
inc
test
loopne
in
loope
xchg
fnstsw
sbb
hlt
ljmp
insb
js
xchg
inc
nop
sbb
mov
mov
test
pop
lret
pop
icebp
out
aas
mov
mov
hlt
outsl
sbb
mulb
sarb
adc
in
subl
outsl
jmp
imul
rorb
pusha
mov
fisubrl
and
push
mov
xor
mov
lock
std
sub
add
mov
fidivs
or
add
pusha
scas
add
fwait
dec
movsl
cmp
dec
adc
filds
xchg
mov
and
pusha
popa
fisttpll
rol
js
adc
pop
sbb
cli
loop
rorl
sbb
scas
xor
and
xchg
in
lods
add
and
imul
repnz
loopne
mov
test
add
add
and
pusha
sahf
mov
pop
test
mov
ret
mov
pop
jne
and
push
iret
stos
lahf
fs
in
pop
mov
dec
in
adc
sbb
mov
sbb
scas
jmp
aad
add
popa
sub
mov
fmuls
rcrb
cmp
test
je
mov
add
test
fs
js
andb
mov
sub
enter
jl
inc
orb
inc
jnp
jle
ljmp
xchg
shlb
fstps
mov
into
ja
loop
sahf
or
mov
into
push
arpl
and
scas
mov
fisubrs
jno
push
push
push
shlb
inc
rorb
push
stc
sub
inc
mov
jl
inc
dec
addr16
xchg
and
lds
cltd
iret
cmpsl
cmpsb
inc
sub
xchg
jecxz
mov
in
andb
and
mov
int
inc
push
shrb
rolb
inc
cmp
sub
repz
addr16
shr
lret
dec
sbb
pusha
and
sub
loopne
mov
sub
lock
xchg
cmp
cmp
test
mov
mov
add
outsb
or
loopne
push
and
and
cs
shl
push
pop
xor
popf
andb
adc
pop
sbb
dec
adc
dec
dec
ss
shrl
andb
mov
psubsb
stos
cmp
sahf
aad
fisttps
inc
add
sbb
jle
andb
mov
jmp
mov
mov
and
push
into
andb
cld
inc
xchg
mov
jecxz
add
das
sub
lock
insl
xchg
lds
arpl
jmp
xchg
jbe
mov
mov
jo
mov
and
stos
rcll
or
mov
inc
sbbb
adc
or
add
scas
mov
inc
mov
xchg
and
loopne
pushf
or
mov
inc
leave
sbb
inc
mov
test
mov
out
xchg
adc
push
rolb
mov
pop
lcall
inc
pop
mov
loopne
jb,pt
and
loopne
aas
movntq
mov
adc
shrl
xchg
xor
jo
inc
test
shlb
fnstcw
stos
add
and
mov
cmp
xor
cmpsb
add
loope
push
inc
pusha
out
ret
popf
or
daa
loop
cmpsb
inc
sarb
aam
add
mov
jns
add
add
and
orb
pusha
cmp
and
sub
adc
xchg
mov
pusha
pusha
fisttpl
loopne
rcrb
mov
add
mov
pusha
loopne
dec
sub
xchg
loopne
sarl
sbb
jge
loop
imul
pop
jp
jle
lods
mov
orl
mov
and
sti
movsb
add
sub
mov
prefetchw
push
insl
add
mov
and
lcall
lahf
xchg
aas
jmp
mov
ret
ds
cmp
push
adc
mov
xchg
cmc
add
pushf
dec
pusha
ljmp
loopne
jnp
and
sub
subl
add
and
mov
rolb
jle
loope
mov
push
pusha
mov
add
loope
rolb
rolb
add
shlb
popa
sti
test
shrb
and
push
andb
sub
pusha
mov
andb
xchg
shr
scas
pusha
loopne
mov
rcl
push
and
test
loopne
sbb
pusha
loopne
xchg
mov
jmp
rolb
jle
add
movsl
popf
out
rcrl
sub
loopne
add
test
pusha
mov
mov
mov
clc
imul
inc
inc
pushf
push
pop
decl
xchg
or
xchg
mov
cwtl
sub
add
loopne
ss
or
addb
add
add
jae
fnstcw
adc
xor
pop
in
mov
inc
sarb
addb
sarb
sti
jnp
mov
mov
and
test
imul
out
testl
les
jge
loopne
divl
mov
mov
mov
jb
or
push
addb
cmp
xorl
mov
jne
fimull
addb
and
inc
loopne
mov
cli
arpl
inc
rol
inc
shll
pusha
mov
shl
ljmp
sub
in
pop
mov
rorb
or
jp
scas
and
mov
shlb
push
and
and
in
iret
cs
loopne
cs
cmpb
push
pusha
loopne
pop
or
xor
cld
sub
xchg
popf
add
ja
test
pop
aas
push
rolb
pusha
mov
mov
xchg
lds
inc
mov
cmpsb
rolb
dec
lret
divb
jb
out
cmp
cmp
inc
jnp
mov
dec
sarl
sbb
and
jmp
and
sub
pusha
mov
inc
sbb
mov
inc
fiaddl
mov
and
rcrb
cmp
sbb
in
arpl
je
into
add
sub
loopne
adc
push
ret
nop
mov
add
scas
loopne
mov
push
pusha
xchg
idivl
xchg
ss
lods
loopne
push
sub
loopne
divb
mov
andb
push
test
sar
inc
fsubs
adc
shlb
sub
and
mov
ja
mov
addb
and
subb
pusha
imull
int3
mov
fcompl
inc
dec
mov
add
mov
mov
push
mov
jb
mov
rclb
mov
jg
sbb
shufps
add
rcrl
inc
jb
and
insb
jle
mulb
shl
ss
mov
inc
insl
mov
sub
mov
lea
mov
hlt
lock
add
fwait
or
lods
inc
inc
sbb
lods
ret
and
cmp
ret
sbb
loopne
outsl
call
pusha
pop
in
inc
pusha
stos
sti
rorl
shrb
leave
popf
fmull
add
pop
xchg
and
mov
inc
sahf
lret
out
xlat
add
loopne
out
mov
fcomip
mov
stc
rcrl
dec
loop
xchg
pop
loopne
lods
add
inc
gs
test
pop
cmp
push
loope
dec
dec
insb
shl
and
outsb
andb
bound
pusha
inc
mov
data16
sbb
mov
mov
roll
fdivr
inc
xchg
stos
and
mov
stos
test
loopne
add
mov
xor
addb
and
icebp
xor
mov
loopne
cmc
lret
out
lods
mov
push
dec
out
pop
pop
push
xchg
dec
inc
mov
inc
inc
in
mov
lret
pusha
cmp
jle
xor
and
rcrb
xchg
xchg
jnp
pusha
inc
push
iret
js
shlb
xorb
loopne
pop
xor
add
subb
inc
add
pop
dec
mov
orb
movsb
and
popa
sbb
xchg
xchg
lea
xor
subb
push
adc
mov
and
pop
out
adc
push
andb
std
fsubr
xorl
mov
pusha
inc
xlat
and
add
insb
inc
jns
rol
stc
dec
mov
in
imul
sub
addb
pop
pop
and
add
hlt
pusha
mov
cmp
inc
push
inc
push
fdivrp
int
pop
incl
idiv
andb
adc
popa
inc
add
loopne
fwait
mov
sub
fwait
push
fcompl
les
pusha
loopne
insb
adc
fnstsw
insl
int
mov
jge
and
cltd
shrb
push
pop
mov
inc
aam
addb
sbb
pusha
jmp
sbbb
addb
mov
cli
pop
into
repz
test
pusha
loop
insb
out
dec
test
jno
mov
pusha
ja
addr16
push
addb
rolb
fldenv
add
insb
call
std
xchg
inc
sub
and
cmp
jmp
pop
pop
fildll
sub
mov
jne
and
cmp
add
jbe
or
dec
bnd
push
outsb
popf
push
jns
mov
lahf
xlat
ja
sbb
cmp
fidivs
int3
push
and
lea
lahf
xchg
loopne
xchg
arpl
ds
enter
add
xor
hlt
mov
sbb
and
bound
mov
aad
add
loopne
pushf
out
int3
fnstenv
add
and
shrb
fistl
xlat
xchg
jecxz
push
sub
and
xor
rcrl
and
lret
orb
xchg
and
shl
aam
and
rcrl
shrb
stos
loope
rolb
ja
sahf
pop
ja
mov
pop
jb
mov
in
clc
inc
ja
fwait
mov
cmpsl
ret
add
xchg
das
jae
add
pushl
stos
rol
cmp
or
inc
lea
cmpsb
add
shlb
jae
aad
mov
jns
jae
lods
mov
or
mov
dec
lahf
push
add
cmp
pushf
mov
sbb
mov
jae
mov
fsts
pushf
mov
jge
imul
rolb
mov
shl
pusha
pusha
xor
cltd
mov
xor
loopne
out
pop
pushf
dec
andb
inc
dec
jmp
adc
push
mov
mov
xor
jmp
inc
inc
sub
xor
aaa
push
mov
mov
inc
fsts
cmc
insb
jle
je
movb
addb
jg
lds
and
sub
and
add
push
test
mov
pop
pusha
push
nop
dec
cwtl
cs
dec
pop
sbb
call
push
push
andb
andb
push
hlt
leave
clc
sub
inc
fwait
out
inc
cmc
push
cmpsl
int
push
lcall
mov
add
xor
pushf
or
inc
inc
add
in
sbb
or
pop
pop
jo
stc
and
inc
imul
sub
pop
jbe
sub
shl
xchg
and
adc
mov
shlb
push
pop
adc
cmpsl
mov
lret
das
push
sub
and
shl
pusha
loopne
insl
addb
cld
push
pop
and
add
loopne
fdivrs
push
adc
in
add
loopne
jmp
fcomps
lea
sbbl
mov
inc
jae
pop
cwtl
outsl
repnz
in
mov
mov
mov
pusha
mov
loopne
mov
addr16
xchg
pushf
or
and
cli
add
mov
mov
sbb
arpl
mov
js
addb
dec
ret
aad
insb
and
jo
hlt
sub
xor
sbb
and
xchg
in
sub
pusha
das
sub
out
or
sti
js
push
cld
dec
sub
shrb
mov
std
adc
in
stc
pop
test
and
imul
and
mov
adc
mov
jno
inc
bound
pop
xlat
mov
cmpb
push
ljmp
fsubrs
mov
and
xor
andb
dec
push
ds
sub
cltd
stos
and
call
test
mov
test
cmc
and
and
cmp
nop
inc
xchg
push
sarb
mov
sarb
leave
loope
jbe
xchg
xorb
cmp
leave
das
cwtl
daa
in
lods
mov
or
and
call
adc
mov
lock
add
mov
and
add
popf
pop
jecxz
loopne
jg
pop
lret
rolb
push
mov
mov
data16
cmp
repz
add
mov
xchg
jo
pusha
mov
xor
lods
ja
lods
jge
loopne
cmpsb
inc
mov
pop
xor
push
pop
sub
inc
mov
cwtl
inc
inc
pop
scas
inc
mov
dec
xchg
xchg
mov
test
pusha
add
mov
or
push
mov
xchg
daa
lcall
jmp
data16
sti
or
rclb
loop
int3
test
cmp
ja
jb
and
cmpsb
loopne
stc
push
adc
inc
pop
pop
xlat
stos
pusha
loopne
mov
loope
or
mov
and
sarb
push
inc
in
lods
outsl
mov
mov
fildll
in
into
mov
addb
add
mov
shrb
mov
loopne
out
out
ds
push
dec
movsb
inc
and
cmp
hlt
or
fs
movl
jle
data16
pop
lock
push
inc
inc
xchg
push
inc
inc
sub
inc
adcb
es
rol
mov
rolb
and
and
dec
jb
push
mov
scas
add
pop
movsb
and
pop
nop
add
pusha
shrb
aaa
cltd
out
mov
cmp
mov
lds
mov
add
test
lcall
and
ss
in
jp
test
rclb
sub
shrb
adc
sub
xorb
add
sub
or
rclb
add
sar
xchg
sbb
pusha
loopne
addr16
in
lahf
popf
xor
dec
xchg
cmpsl
mov
stos
loopne
sahf
xor
inc
stos
and
cmp
jl
test
and
shlb
inc
add
andb
xor
and
lcall
aaa
daa
imull
mov
movsb
and
cltd
lods
and
movsl
push
pusha
orb
ror
jl
arpl
stos
inc
lods
sar
mov
shl
dec
xor
pop
mov
push
rcrb
mov
les
cmp
mov
inc
lds
or
ss
mov
in
mov
lcall
lea
push
ljmp
in
mov
fdivp
jle
and
call
ja
loopne
rorb
pusha
and
lahf
fnstcw
mov
outsb
sti
cmp
xor
lods
adc
sub
das
pop
pop
cltd
nop
sbb
add
lret
xor
std
insl
aaa
or
inc
arpl
mov
lds
mov
add
lds
filds
mov
mov
sub
addb
xchg
and
rclb
push
inc
fs
addr16
sti
mov
shrl
adc
pusha
rolb
mov
cld
jb
jle
scas
add
add
dec
inc
iret
sbb
jnp
shlb
aam
pusha
addr16
cmpsb
add
cwtl
xlat
cmp
push
xchg
cmc
xchg
fsubs
loopne
mov
mov
mov
jmp
cmpl
gs
lcall
lock
sbb
divl
mov
xchg
push
mov
sti
xchg
mov
enter
jo
and
add
jbe
cmp
and
loopne
cmc
call
rolb
add
jl
and
add
pop
ret
mov
popa
mov
and
cmp
pop
cltd
cmp
inc
cmp
mov
loope
hlt
cmpsb
loopne
pop
sbb
xchg
nop
cmpsl
arpl
loope
mov
rolb
das
push
add
addb
fcompl
and
and
faddl
inc
sbbb
push
push
sbb
pusha
mov
mov
insl
xchg
fdivl
shll
leave
lods
and
add
and
xchg
mov
call
fsub
fucomi
fldenv
mov
int
mov
gs
ljmp
add
jae
shl
and
push
lahf
int
and
orb
mov
mov
inc
hlt
mov
insl
cltd
in
sbb
popf
cmp
sahf
dec
in
fistpl
and
sbb
pushf
jp
xor
jmp
adc
pop
lret
cmp
xor
andb
stc
pop
add
orb
outsl
repnz
das
psubq
sbbl
and
ljmp
out
mov
push
test
inc
add
mov
dec
xchg
test
add
cmp
mov
pushf
mov
sub
mov
mov
push
ljmp
movsb
pusha
cmpb
loopne
call
in
cld
shrl
and
subb
dec
inc
lret
pop
mov
loopne
je
and
pushf
inc
arpl
loopne
inc
sbb
xchg
sbb
pop
mov
mov
lea
int3
das
adc
jns
pusha
pusha
xchg
jbe
mov
aas
or
lahf
hlt
aas
dec
lret
xor
xor
addb
loopne
push
mov
inc
fldl
test
add
jmp
loope
sub
rcrb
nop
arpl
xchg
xchg
pop
sub
jno
push
rcrb
inc
pusha
xlat
out
test
mov
cltd
dec
inc
test
dec
adc
add
loopne
lea
loopne
arpl
lahf
mov
inc
leave
sbb
and
fdivs
cmovp
into
xlat
xchg
and
pop
pusha
adc
add
pusha
xor
lahf
xchg
mov
out
loopne
jg
push
lea
xor
add
add
loopne
int
push
in
mov
mov
sahf
sbb
dec
lock
ret
in
mov
and
sub
popf
add
shll
add
inc
jge
loopne
adc
xchg
out
jnp
add
in
pop
in
scas
int
sarl
adcb
imul
idivb
loop
test
jo
add
inc
test
subb
and
jl
push
clc
loope
mul
fstpl
mov
and
add
xchg
adc
add
mov
mov
inc
aas
in
dec
mov
leave
lcall
les
sub
rorb
loopne
pusha
mov
lea
cmpb
inc
inc
pushf
add
mov
loopne
dec
dec
sbb
push
or
outsl
sub
pusha
je
daa
aaa
xchg
rcrb
mov
sti
xchg
or
mov
push
leave
cwtl
pusha
push
and
add
scas
shlb
leave
loope
scas
mov
inc
mov
pop
sbb
cmp
cmpsl
sub
inc
and
movsb
and
xchg
mov
jb
mov
push
push
outsl
cmp
cmp
lods
jecxz
fisttpl
loopne
movsb
add
sub
mov
mov
mov
inc
pusha
mov
je
int
insl
sub
shrb
mov
cmpsb
rolb
pop
push
rolb
pusha
mov
out
add
and
inc
inc
out
aam
jmp
dec
ds
pop
icebp
arpl
pusha
add
add
xor
ljmp
lcall
lahf
and
inc
stos
std
leave
or
mov
xchg
jge
out
stos
andb
repnz
pusha
and
int3
push
push
test
shr
pusha
das
inc
loopne,pn
lods
or
sahf
xchg
sub
push
pushf
out
jmp
out
sbb
push
xchg
sbb
out
ret
lods
mov
sarb
mov
inc
insl
xchg
sub
cld
test
pusha
jecxz
loopne
test
in
xchg
mov
lret
or
dec
mov
sub
pusha
add
and
shlb
inc
loopne
aaa
mov
loopne
pop
je
and
sub
or
xor
mov
add
and
cs
cmpb
cmp
adc
pusha
cmpb
sub
cmp
push
shll
lea
mov
addb
sbb
sbb
mov
pop
js
inc
and
movsl
rorl
loopne
xor
outsb
add
add
ja
inc
and
sub
xchg
aad
sub
and
fcoml
fnstsw
mov
mov
sbbb
xchg
addb
in
inc
pop
pushf
cwtl
mov
or
jnp
pop
stc
xchg
xchg
les
ret
jae
mov
loopne
sub
je
xchg
hlt
dec
ljmp
daa
mov
andb
rorl
sbb
pusha
je
inc
mov
mov
and
fidivl
pop
ficompl
loopne
pop
pushf
pushf
or
loopne
xchg
out
sbb
mov
shlb
jge
enter
xor
inc
shlb
add
xchg
repz
std
ror
jae
mov
lock
mov
pop
dec
bound
cli
repz
mov
pop
aam
mov
inc
mov
add
in
mov
add
push
mov
out
cwtl
cs
inc
loop
xchg
add
add
jbe
lahf
xor
sub
mov
fs
add
imull
dec
fimull
mov
adc
out
xchg
fwait
jl
je
ret
jns
mov
addb
xor
clc
pop
or
mov
cld
fisttpll
add
ja
add
fcoml
arpl
xchg
add
inc
jno
adc
les
pop
adc
scas
xchg
pop
inc
stc
dec
or
mov
mov
andb
xchg
cltd
mov
mull
and
adc
inc
jecxz
and
pop
scas
add
xchg
stc
ds
cmp
push
cmp
mov
repz
xchg
arpl
mov
sbb
lcall
push
add
stc
lcall
pusha
xorb
xchg
sahf
jl
lcall
lret
xor
loopne
xchg
inc
mov
and
jp
xchg
lret
mov
daa
mov
add
decb
jne
push
add
leave
es
mov
subl
adc
pusha
push
arpl
mov
jbe
fwait
xchg
fnsave
aam
in
mov
mov
sarb
push
xchg
add
pusha
enter
adc
icebp
imul
mov
shlb
dec
cmc
mov
push
cltd
push
mov
call
cmpsl
push
test
loopne
push
jecxz
repz
sub
mov
int
inc
sti
dec
pop
incb
ret
pusha
andb
sub
or
shl
sub
mov
test
loopne
adc
dec
aam
and
loopne
pop
sub
xor
lods
add
mov
stc
sub
pusha
cmp
dec
mov
popf
andb
sub
mov
loopne
js
ret
xchg
cltd
jmp
shl
dec
dec
push
pop
sub
jae
lret
rcrb
rolb
mov
sbb
add
movsl
sbb
js
outsb
pushf
mov
hlt
sub
and
mov
push
iret
outsb
sub
and
out
int3
and
dec
dec
jns
insl
mov
or
sahf
arpl
or
mov
adc
mov
cmp
sti
negl
stos
gs
inc
jecxz
push
stc
xchg
add
adc
ds
add
xchg
orl
lods
pusha
and
loopne
jnp
ja
imul
push
and
jnp
call
mov
dec
scas
loopne
cmp
push
insl
fcomps
add
inc
arpl
mov
mov
mov
mov
and
dec
gs
aaa
dec
roll
repz
fisttps
xchg
xorl
outsb
adc
sub
add
mov
sbb
cmp
iret
int3
mov
lock
arpl
cltd
outsb
insl
andb
mov
fsubs
xchg
push
fldl
aaa
sub
fsubrs
pop
mov
fistpll
xchg
orb
or
inc
mov
xchg
dec
jae
jb
mov
jmp
inc
pusha
dec
jnp
jnp
xlat
and
pusha
xor
xchg
negl
movl
push
and
ds
fidivrl
mov
xorb
loop,pt
shl
xchg
push
in
xor
ret
data16
test
sbb
mov
mov
dec
das
push
pusha
add
scas
out
inc
mov
inc
dec
mov
jne
jne
enter
orl
icebp
fnstenv
or
loopne
mov
les
add
stc
outsb
clc
xchg
daa
cs
inc
insb
cmc
jg
xor
cmpsb
shl
mov
shlb
or
cwtl
adc
test
pop
jbe
mov
into
adc
ds
out
int3
ret
pusha
pusha
inc
pop
in
lock
sbb
xchg
inc
test
add
lods
pop
add
shlb
xlat
les
mov
mov
sbb
push
cmp
mov
lods
pop
movsl
mov
mov
imul
cmpl
int
stos
cmpsb
mov
popa
call
nop
or
out
jae
ja
in
imul
cmp
xchg
xor
clc
xor
jl
push
and
lea
imul
loopne
mov
pop
js
push
and
addb
loopne
out
rclb
add
sbbl
test
cmpb
push
jno
inc
cmp
shlb
std
ret
push
xchg
add
scas
inc
shl
push
mov
pop
inc
inc
dec
cmp
xchg
sub
pop
dec
cmpsl
imulb
adc
mov
leave
scas
and
ds
loopne
inc
daa
ret
rcll
inc
or
sbb
out
cmp
jo
aam
push
loopne
push
xchg
jl
lds
out
jns
xor
sti
pop
pop
ficomps
push
push
rcrb
imul
loope
dec
sti
adc
add
int
into
sbb
cltd
pop
std
shrl
cmp
into
sub
sbb
mov
jmp
cli
mov
add
jne
popf
pop
xchg
xor
pop
sbb
addr16
xor
and
push
pusha
add
jmp
jmp
in
add
inc
stos
pusha
add
outsl
addb
jnp
pusha
and
sarb
sub
and
and
rcl
sarl
and
rcl
and
rorb
jmp
mov
movsb
shlb
arpl
sub
dec
fs
mov
inc
out
pop
pop
lea
test
lods
loopne
jo
shlb
sbb
mov
push
andb
pop
push
stc
addb
sbb
imul
loopne
and
jno
enter
dec
in
jecxz
push
mov
add
testl
mov
inc
pusha
imul
in
fisubrs
fcomp
xlat
pushf
test
or
mov
and
jmp
adc
in
mov
add
repnz
ds
sahf
xor
lds
in
fidivl
mov
xor
loopne
jns
sbb
push
inc
repz
inc
add
inc
mov
loopne
andb
jmp
mov
rol
add
sub
mov
cmp
mov
jns
rolb
sub
addr16
inc
les
fldl
mov
dec
or
lret
xchg
movsb
andb
out
shlb
add
shl
hlt
mov
mov
add
rorb
mov
fistps
push
mov
fs
shlb
dec
push
add
pusha
mov
lcall
xchg
fsub
bound
add
pop
loopne
push
loopne
jno
lahf
mov
push
loopne
dec
xchg
into
xchg
loopne
repnz
loopne
stos
and
imul
xchg
mov
inc
push
and
sub
in
pop
jmp
mov
add
movsb
inc
rolb
and
or
pop
pop
mov
xchg
fidivl
sub
push
pusha
addb
rorb
shr
mov
pop
jge
xchg
mov
or
aaa
loop
int3
xor
jne
movsb
shlb
or
mov
sub
sub
inc
sti
pop
addr16
fcomps
push
fs
add
outsb
jns
lret
scas
bound
jle
pusha
mov
insl
bound
shlb
sub
lea
mov
clc
enter
pop
add
xchg
mov
lret
bound
enter
loopne
and
bound
cmc
test
and
divl
push
loopne
push
mov
adc
cmpsb
inc
mov
shl
add
pop
loope
mov
push
dec
jp
push
movsb
inc
mov
and
idivb
loopne
adc
ror
rorl
jl
loopne
movsb
loopne
test
push
popa
pop
mov
loopne
jmp
rorb
jnp
push
add
outsl
stc
sbb
dec
adc
testl
loopne
stc
mov
jae
cmpsb
mov
mov
setge
inc
mov
pop
dec
cmp
and
sarl
xchg
cwtl
fsubp
sbb
jb
cmp
dec
test
pusha
mov
hlt
cmp
sbb
loopne
inc
jne
mov
nop
jmp
scas
rolb
pusha
cld
jmp
fldt
stos
and
or
das
or
sbbb
add
pop
cmp
data16
push
mov
ret
enter
adc
andb
dec
out
call
jg
pop
daa
mov
and
adcb
push
mov
add
leave
or
loopne
iret
dec
push
jge
mov
in
andb
rol
inc
sbb
mov
push
pop
cmpl
and
mov
push
xlat
mov
andb
mov
jp
sub
lock
int
fistpl
cmc
cltd
fstl
pop
add
and
aas
xchg
stos
aas
sbb
mov
loopne
mov
inc
jbe
xchg
or
rorb
pusha
lods
pusha
pusha
mul
push
xor
mov
mov
andb
dec
cltd
ja
adc
andb
and
test
mov
aad
leave
push
xor
cwtl
in
lahf
mov
cwtl
add
mov
mov
sub
inc
andps
push
out
push
dec
xchg
push
fstp
cmpsb
and
mov
addb
xorl
in
fs
pop
pop
pusha
fidivs
data16
dec
imul
loopne
and
loopne
pusha
and
insl
mov
inc
mov
inc
and
and
in
fsubrl
pusha
and
and
pop
mov
inc
jo
gs
mov
mov
fbstp
mov
mov
mov
xchg
dec
sbb
and
sub
add
sub
and
push
and
and
pop
mov
add
pusha
into
cs
loopne
and
mov
pusha
pusha
jecxz
fidivs
aad
inc
inc
scas
lock
xchg
movsl
ret
add
mov
ljmp
call
and
hlt
inc
dec
inc
movsl
fisttpl
add
loopne
jle
lcall
and
nop
rcrb
xor
lret
sahf
push
ds
jnp
fstpl
pop
dec
push
and
jle
push
sbb
out
add
pop
cmp
loop
out
call
jmp
cwtl
push
mov
icebp
pushf
lea
insl
scas
rolb
fldenv
fidivrs
fcmovne
insb
mov
push
dec
imul
mov
add
and
adc
push
out
and
adcb
enter
cwtl
lret
sub
mov
idivl
pushf
push
rolb
pusha
pusha
call
push
scas
mov
inc
fwait
jb
pusha
and
imul
ret
shlb
cmp
inc
pop
xchg
andb
mov
pop
iret
das
popfw
xchg
ljmp
jne
cld
lret
jecxz
decb
pop
cmp
dec
xor
mov
sub
popf
aad
and
push
add
je
mov
loope,pt
arpl
adc
jns
push
dec
ret
dec
pop
mov
test
add
scas
pop
dec
mov
cmp
pop
mov
in
insl
loop
xor
add
push
xchg
insb
loope
push
loopne
push
mov
pop
jp
jae
scas
pusha
and
cmpsb
add
rol
lods
pop
jle
add
mov
cld
or
and
mov
inc
xchg
es
test
xor
mov
neg
or
fldt
out
mov
insb
orl
call
and
and
pusha
sbb
sbb
subl
add
cmp
les
adc
call
bnd
lds
push
arpl
sbb
push
lds
f2xm1
pop
insb
pushf
psubsw
test
les
mov
pop
test
ljmp
pushf
out
mov
shlb
pusha
add
pusha
mov
mov
pop
mov
andb
mov
loopne
sbb
ret
shlb
inc
rorb
aas
outsb
icebp
dec
or
pop
add
and
mov
iret
addl
int3
dec
out
jg
push
mov
and
mov
outsb
adc
xchg
nop
insb
dec
jmp
mov
and
daa
leave
rcll
inc
inc
lods
inc
sbb
jecxz
sbb
insb
aam
sbb
mov
leave
gs
mov
inc
sub
rclb
pusha
orb
sub
pop
jae
andb
or
mov
shlb
loopne
jl
push
mov
cmp
dec
jg
pushw
pusha
loop
push
xchg
das
inc
push
xchg
pusha
and
inc
test
mov
inc
push
add
pusha
inc
mov
pusha
jg
push
mov
rol
ljmp
and
fdiv
push
jl
jae
jg
mov
outsb
stos
inc
mov
fwait
loope
inc
pop
les
mov
rolb
add
add
andb
or
mov
add
gs
rolb
loop
sarb
pop
mov
or
pusha
adcl
push
pusha
add
sub
shr
push
aas
jnp
dec
fcmove
fiadds
inc
and
inc
or
xchg
pop
push
lcall
insl
push
pusha
add
jae
xchg
ret
aas
daa
lods
insl
rcll
inc
mov
push
sub
loopne
or
inc
scas
and
scas
mov
icebp
xor
popf
sub
movntq
inc
mov
out
jmp
popf
mov
xor
movsl
jge
shll
sbb
sar
dec
jle
in
test
pusha
mov
je
add
icebp
cmp
enter
add
imull
mov
xchg
hlt
and
push
lock
lods
push
sbb
or
loopne
les
shr
hlt
mov
xchg
addb
test
and
loopne
pop
fisubrs
lahf
scas
pusha
inc
or
pusha
xor
add
popf
push
jmp
inc
xor
andb
or
pusha
out
or
cmpb
fcmovu
push
movsb
add
sub
test
sbbb
mov
imul
cltd
jge
imul
rclb
xchg
jmp
pop
push
mov
add
loopne
push
xor
adc
xor
jno
mov
repnz
sahf
fisubs
negl
repnz
cmp
or
pusha
xchg
cmp
ret
sub
shlb
in
or
inc
dec
push
cmp
rolb
int3
scas
mov
inc
xchg
or
shl
aas
dec
rcr
jmp
fstpl
jb
outsb
pusha
push
divb
xchg
popf
dec
xchg
and
loopne
or
lods
adc
inc
xchg
push
fdivrl
and
sarb
pusha
loopne
dec
mov
pop
jle
andb
pusha
and
pusha
movsl
ljmp
inc
add
add
pop
cmp
js
pop
enter
push
fadds
pusha
repz
out
cltd
ds
pusha
inc
xor
cmp
mov
mov
testb
or
sahf
popa
lods
shl
mov
xor
pusha
stc
xor
pop
test
bound
int3
xor
jno
orl
push
andb
fnstsw
jl
loopne
push
add
vaddps
into
mov
aad
repnz
xchg
stc
aas
cmp
sub
andb
shlb
shlb
mov
adc
and
mov
or
bnd
andl
inc
cmp
mov
stos
andb
out
outsl
clc
fidivs
pop
bound
andb
loopne
pusha
sbbb
adc
add
ret
and
clc
pop
pop
or
pusha
pusha
stc
incl
shlb
sub
inc
fsubl
xor
in
fstpl
and
movsl
mov
lods
pusha
add
mov
and
mov
addb
movsl
test
inc
out
lock
xchg
ljmp
sub
cwtl
pop
cli
loopne
pop
adc
push
push
mov
xchg
fsubs
movsl
imul
out
jae
ror
ja
ret
dec
pop
sbb
test
push
cmp
and
pop
pop
imul
and
dec
dec
cltd
ljmp
addb
jo
repnz
rolb
stc
sbb
aaa
into
imul
hlt
sub
mov
lods
inc
mov
lret
pop
xor
stc
push
mov
push
pop
les
xor
lahf
add
aad
into
repnz
jle
pop
mov
in
or
mov
jo
mov
or
pusha
mov
xor
sbb
adc
xlat
repnz
addb
fcomi
dec
inc
pusha
and
shlb
lods
shl
push
movl
rolb
mov
stc
in
mov
xchg
mov
pop
test
mov
andb
leave
mov
and
lcall
in
stos
das
mov
ret
mov
xchg
rcrb
loopne
inc
aas
out
in
cltd
and
pop
xchg
outsl
cmp
inc
jl
fwait
cmp
dec
mov
inc
jno
sbb
push
incl
pusha
addb
jb
push
mov
movsb
inc
mov
leave
dec
lods
mov
or
lock
jl
aam
sub
sub
mov
repnz
jmp
stos
xchg
jle
inc
loopne
fcomi
push
imul
stos
adc
mov
xor
ror
ss
rcrl
addb
jp
loopne
jne
roll
shlb
mov
jecxz
shl
sub
push
xchg
inc
cmp
adc
inc
fidivrs
push
loop
adc
xchg
xchg
inc
jl
flds
inc
orl
test
sbb
test
pusha
sbb
jp
xlat
divb
mov
pusha
int
fistpl
and
mov
rolb
test
pusha
ds
es
shlb
arpl
xchg
mov
mov
jge
sbb
and
pop
cmpsl
pop
xchg
test
push
call
pop
hlt
and
mov
rcl
ret
andl
cmpsl
sbb
add
shrb
sub
mov
xlat
mov
and
mov
ds
