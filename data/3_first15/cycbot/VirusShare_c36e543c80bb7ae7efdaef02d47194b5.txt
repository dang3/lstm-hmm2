add
add
loop
loop
loop
loop
loop
loop
add
add
imul
add
add
aad
aad
aad
aad
aad
aad
aad
aad
aad
mov
jmp
mov
mov
sbb
stos
stos
stos
add
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
adc
add
xchg
or
sub
sub
sub
sub
sub
sub
add
lea
cmc
cmc
add
add
add
fiadds
add
add
jle
xor
xor
repz
add
add
cmp
cmp
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
xchg
xchg
call
add
sub
mov
push
push
push
push
push
push
push
sbb
mov
add
xchg
cmp
add
add
add
stc
add
add
add
mov
sub
sub
sub
dec
jmp
sbb
sbb
sbb
sbb
sbb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
and
data16
cmp
cmp
cmp
add
cmp
cmp
push
push
push
mov
push
push
push
push
push
push
push
push
push
push
gs
cltd
cltd
cltd
jl
pop
pop
dec
dec
dec
dec
dec
add
loop
loop
loop
loop
loop
loop
add
add
js
js
add
add
mov
mov
scas
scas
scas
add
add
pop
pop
xor
xor
add
add
sub
mov
and
and
adc
dec
dec
dec
dec
stos
stos
stos
stos
stos
stos
stos
stos
sub
sub
jo
or
or
or
or
in
in
in
add
insb
add
cmc
add
fcomp
fcomp
in
in
lock
add
fistl
xchg
xchg
xchg
xchg
xchg
add
add
add
or
or
or
or
or
or
add
addb
add
add
jne
jne
jne
and
and
and
lds
pop
add
test
imul
int3
int3
int3
int3
int3
int3
int3
add
sti
sti
adc
aas
sti
sti
sti
add
and
and
add
add
sub
sub
sub
in
ret
ret
ret
ret
sahf
sahf
cmp
cmp
add
add
add
add
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
inc
inc
inc
inc
inc
inc
push
push
push
push
addb
add
add
mov
mov
les
add
add
add
add
add
add
add
jbe
ret
ret
ret
ret
ret
dec
dec
dec
dec
pop
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
and
and
rclb
push
push
push
push
push
push
push
push
stc
stc
stc
stc
stc
stc
stc
stc
repnz
loopne
mov
mov
add
aad
aad
aad
cmpsb
cmpsb
add
add
pop
pop
insb
insb
insb
add
add
add
ljmp
add
add
add
xchg
xchg
xchg
add
add
add
out
out
into
into
into
into
into
into
into
into
add
add
add
sub
add
add
cmp
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
add
subl
imul
imul
pop
pop
pop
flds
add
add
add
add
jg
and
add
push
push
push
push
push
push
xchg
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
xor
add
add
add
clc
clc
clc
clc
clc
clc
clc
clc
add
add
add
add
movsb
movsb
add
add
add
add
cmc
cmc
cmc
cmc
add
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
mov
test
sub
sub
mov
jle
jle
add
and
and
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
lds
dec
add
add
pop
pop
pop
pop
pop
pop
mov
cmc
mov
cmp
cmp
add
add
stc
stc
stc
stc
stc
add
imul
inc
inc
inc
add
cmc
add
div
outsb
outsb
outsb
outsb
outsb
rol
sbb
in
in
add
add
aam
xor
add
add
rcl
sti
adc
pushf
pushf
pushf
cmc
cmc
cmc
cmc
cmc
cmc
dec
dec
dec
dec
dec
dec
jl
jl
xchg
xchg
xchg
pop
pop
pop
xchg
xchg
xchg
xchg
add
add
add
add
fstp
fstp
es
cmp
imul
imul
adc
xor
add
add
sub
sub
add
add
add
add
add
add
add
add
xchg
sbb
sbb
add
add
dec
rcr
fcmovnu
pusha
pusha
pusha
out
out
mov
mov
add
xor
add
nop
nop
nop
nop
add
scas
scas
scas
push
add
dec
les
sub
add
and
and
and
add
add
add
mov
mov
add
aam
aam
add
add
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
int3
int3
int3
int3
int3
int3
int3
int3
int3
rcl
rcl
arpl
arpl
sub
sbb
add
add
add
out
out
out
cmp
cmp
ljmp
ljmp
and
xor
xor
xor
xor
xor
xor
repnz
or
add
add
ljmp
ljmp
add
add
jbe
push
test
pushf
fwait
fwait
fwait
inc
inc
inc
inc
inc
jae
inc
add
rolb
add
lea
lea
inc
xchg
xchg
xchg
xchg
xchg
add
dec
dec
dec
dec
dec
sub
sub
sub
sub
arpl
add
add
arpl
inc
inc
dec
dec
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
dec
dec
ss
add
icebp
icebp
icebp
add
add
call
dec
dec
dec
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
xlat
add
cld
cld
cld
cld
cld
push
push
push
mov
mov
jb
int3
int3
int3
int3
int3
int3
add
add
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
rolb
add
sti
sti
sti
sti
add
add
add
add
add
mov
cmp
cmp
add
xor
xor
xor
nop
nop
nop
nop
nop
add
add
mov
mov
test
test
add
das
das
das
das
das
test
ss
aam
aam
jg
jg
bound
sub
sub
sub
sub
sub
sub
sub
push
push
add
and
and
add
mov
mov
mov
add
mov
mov
mov
mov
mov
add
pop
pop
pop
add
add
add
and
and
and
and
or
or
or
or
add
cs
add
cmp
add
add
mov
mov
add
add
add
add
jnp
jnp
and
and
and
jg
sti
sti
sti
sti
sti
sti
xchg
xchg
cmp
cmp
cmp
cmp
hlt
mov
mov
add
add
add
and
add
add
jae
xchg
xchg
xchg
xchg
add
in
in
in
in
in
add
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
filds
add
add
sub
sub
sub
sub
sub
sub
les
sub
sub
sub
add
jle
jle
jle
jle
jle
jle
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
add
aas
aas
aas
aas
aas
aas
aas
testb
add
add
add
add
jbe
jbe
and
and
and
add
pusha
pusha
add
add
addr16
sbb
sbb
add
add
add
add
add
add
add
add
add
add
and
and
and
and
and
add
add
add
add
sahf
sahf
sahf
sahf
sahf
sahf
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
add
add
dec
dec
cmp
minps
ds
insl
insl
add
add
add
add
add
add
xchg
xchg
xchg
xchg
into
into
into
into
into
into
add
add
fstp
fstp
fstp
fstp
fstp
fstp
add
add
adc
adc
add
xchg
jecxz
jecxz
jecxz
add
add
rolb
add
fiaddl
add
add
add
jge
jge
jge
ja
ja
ja
add
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
mov
jne
jne
jne
jne
add
add
add
mov
mov
mov
mov
add
stc
stc
stc
stc
stc
stc
add
add
sbb
test
jns
insb
add
div
div
div
neg
aam
aam
insl
insl
insl
insl
insl
insl
insl
insl
add
add
add
add
add
add
add
add
add
incb
add
adc
adc
adc
mov
add
add
mov
sbb
jo
jo
ret
ret
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
das
das
add
add
or
sbb
sbb
mov
and
sub
push
push
push
push
push
push
jge
jge
mov
mov
add
mov
add
jp
jp
jp
jp
jp
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
sahf
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
repnz
and
add
add
add
aad
aad
aad
aad
aad
aad
aad
aad
aad
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
add
add
xlat
xlat
xlat
xlat
test
test
test
test
test
add
add
sub
sub
sub
sub
dec
dec
add
add
add
mov
add
and
and
and
add
add
add
popf
popf
popf
out
out
out
out
or
jp
lahf
lahf
lahf
lahf
lahf
lahf
push
push
push
push
add
sub
adc
in
in
in
in
xchg
xchg
xchg
xchg
popa
popa
popa
popa
add
add
add
add
and
add
and
jae
add
add
mov
mov
add
add
add
mov
mov
jnp
jnp
and
sbb
sbb
sbb
sbb
imul
sub
sub
jg
jg
jg
jg
add
add
pop
pop
pop
add
push
push
push
push
push
fs
add
add
push
push
push
push
push
popf
popf
popf
popf
popf
popf
popf
popf
addb
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
add
add
add
add
xor
xor
add
add
inc
inc
inc
inc
inc
inc
inc
or
or
push
push
mov
mov
mov
mov
add
mov
rol
mov
inc
fcmovnu
fildl
pushf
pushf
pushf
pushf
jne
jne
jne
jne
fwait
add
xor
xor
xor
xor
add
add
addb
add
add
out
dec
dec
dec
add
cmp
pop
pop
add
mov
add
add
imul
add
add
add
and
and
and
add
add
add
add
addl
or
or
or
insl
insl
insl
insl
insl
insl
pop
pop
pop
pop
popf
popf
popf
popf
mov
or
or
or
pop
pop
add
lods
lods
add
add
xor
xor
xor
add
add
fstp
fstp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
add
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
cli
cli
xor
sub
add
add
decl
or
or
or
add
add
sub
sub
sldt
add
and
adc
push
add
add
add
add
add
pop
add
and
adc
add
popf
popf
popf
add
add
ljmp
pop
pop
pop
pop
pop
pop
xchg
xchg
xchg
xchg
add
add
add
int3
int3
int3
int3
int3
loopne
add
and
fwait
fwait
fwait
fwait
fwait
add
add
mov
mov
mov
mov
mov
mov
mov
add
add
icebp
icebp
icebp
icebp
icebp
stos
stos
stos
stos
gs
outsl
outsl
outsl
outsl
outsl
outsl
add
add
add
add
imul
add
add
lock
lods
mov
add
add
test
test
test
test
test
test
test
add
add
add
and
andb
add
add
add
aam
add
int
int
int
int
mov
mov
mov
sub
sub
sub
sub
sub
add
jbe
jns
jns
push
push
push
push
addb
addb
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
pop
lods
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
addl
addl
andl
or
or
or
or
or
or
or
cs
or
btrl
add
xor
jo
push
push
push
add
or
or
or
or
add
add
add
add
icebp
icebp
cmpsb
push
push
push
add
add
dec
dec
dec
xchg
add
add
insl
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
push
push
push
push
push
push
push
push
push
push
push
imul
imul
lods
lods
lods
lods
add
add
dec
dec
dec
dec
dec
dec
dec
dec
cmp
cmp
cmp
or
es
stos
stos
sbb
add
add
add
hlt
hlt
hlt
pop
pop
lahf
lahf
lahf
lahf
lahf
add
popl
add
mov
mov
in
in
in
in
in
in
in
test
test
test
into
addb
inc
inc
addl
js
js
js
imul
in
in
in
in
in
in
add
add
add
add
sub
sub
xor
add
add
flds
fs
addb
adc
mov
mov
addr16
sub
sub
add
add
add
jb
jb
add
add
outsb
outsb
sub
sub
sub
adc
adc
adc
add
add
ja
mov
pusha
pusha
loopne
inc
inc
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
je
je
je
je
je
add
add
add
add
bound
mov
add
add
add
repnz
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fistl
adc
out
out
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
rcl
rcl
rcl
rcl
rcl
out
out
out
add
add
cmp
outsl
outsl
outsl
outsl
outsl
outsl
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
arpl
add
add
lds
or
add
add
add
mov
push
push
push
push
bound
lahf
add
in
in
or
or
or
or
add
and
and
add
add
xchg
push
push
push
push
fs
add
adc
adc
pusha
pusha
pusha
pusha
pusha
jp
jp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fldl
add
add
add
add
and
mov
cmpsb
add
dec
dec
lcall
je
arpl
add
jns
add
add
xchg
xchg
xchg
add
fldpi
add
add
add
pop
mov
mov
mov
xchg
xchg
xchg
add
add
add
add
add
cmp
cmp
adc
adc
adc
addl
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
push
push
push
push
push
push
add
add
add
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
repnz
add
add
xor
je
mov
add
add
add
add
add
mov
add
sub
sub
dec
dec
dec
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
lret
add
add
add
add
stc
mov
mov
mov
mov
mov
add
in
in
lret
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
sub
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
pop
pop
pop
add
add
les
and
and
and
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
cmpsb
cmpsb
cmpsb
cmp
cmp
iret
jp
sub
sub
add
mov
mov
add
add
add
add
add
add
push
mov
add
jle
jle
add
add
add
add
add
and
and
add
add
or
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
add
add
xor
xor
xor
xor
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
ja
add
and
inc
or
or
or
or
in
in
in
in
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
mov
fucomp
call
sub
sub
sub
sub
add
pop
bound
add
add
add
add
add
and
and
out
out
out
add
add
add
add
repnz
inc
inc
div
div
add
fcmovnu
fistl
pop
pop
pop
pop
pop
add
add
add
add
sub
sub
pop
pop
pop
pop
pop
cltd
cltd
cltd
cltd
cltd
and
add
add
jb
push
pop
add
add
add
mov
dec
dec
dec
dec
dec
dec
lods
lods
lods
lods
lods
lods
lods
addb
add
add
add
add
add
add
add
add
add
add
add
add
push
cli
cli
cli
cli
cli
mov
xchg
xchg
xchg
xchg
add
repz
lret
lret
lret
lret
out
out
out
out
mov
mov
add
lock
ret
ret
ret
ret
ret
iret
iret
iret
mov
mov
add
ljmp
ljmp
ljmp
mov
ds
add
add
add
inc
inc
inc
inc
fiaddl
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
fdivl
xor
xor
xor
add
mov
add
add
add
fwait
fwait
ret
ret
out
out
out
add
mov
add
add
add
cmp
add
add
add
add
add
mov
mov
mov
mov
bound
bound
faddl
add
sub
sub
sub
sub
pop
pop
pop
pop
push
push
dec
dec
dec
dec
outsb
outsb
outsb
outsb
outsb
outsl
outsl
outsl
fcmovu
fcmovu
fcmovu
mov
add
cltd
mov
add
add
add
add
add
add
add
add
add
ja
ja
ja
stc
stc
stc
add
add
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
xchg
xchg
int
add
add
pop
pop
add
loopne
xchg
xchg
add
add
add
mov
mov
push
push
push
mov
xchg
xchg
xchg
xchg
xchg
dec
iret
mov
add
add
add
and
and
and
and
aad
push
push
addb
aam
in
in
in
in
in
in
in
in
in
add
dec
dec
dec
adc
adc
adc
add
push
push
push
push
push
push
push
lret
add
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
push
add
add
or
add
lods
lods
lods
lods
ds
ds
add
add
mov
fcomp
fcomp
fcomp
fcomp
fcomp
push
push
push
push
push
push
push
push
add
add
add
add
adc
fcmovu
fcmovu
fiaddl
inc
inc
inc
inc
inc
inc
int3
int3
int3
int3
int3
int3
int3
int3
add
add
sbb
sbb
sbb
add
add
add
mov
cmp
add
xor
push
push
add
xor
xor
pop
mov
mov
add
add
mov
mov
mov
mov
add
xchg
add
in
in
in
xchg
das
add
add
lahf
lahf
lahf
lahf
add
add
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
adc
cmp
cmp
cmp
add
rol
add
add
cld
cld
cld
in
in
in
mov
mov
add
sbb
cwtl
cwtl
add
add
out
out
stos
stos
stos
stos
out
out
out
orl
mov
ja
ja
ja
outsb
outsb
outsb
outsb
outsb
outsb
outsb
mov
mov
mov
pop
add
add
add
or
ds
repz
cmp
cmp
cmp
mov
mov
add
add
add
jg
push
push
push
push
push
jmp
jo
xchg
xchg
xchg
xchg
xchg
cmp
cmp
cmp
cmp
sbb
sbb
aad
aad
out
out
out
out
out
out
out
out
out
out
add
add
in
in
in
lock
add
add
mov
movb
inc
inc
sbb
add
add
add
add
add
add
add
inc
inc
inc
fwait
push
push
push
cmp
pusha
pusha
pusha
addb
xor
out
out
out
out
out
out
sub
xlat
add
mov
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
leave
leave
xchg
xchg
xchg
add
add
add
add
add
push
push
push
add
add
int
int
int
rol
rol
rol
rol
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
lret
lret
ljmp
add
lret
lret
lret
lret
add
adc
add
add
inc
inc
inc
inc
and
mov
add
add
in
in
mov
bound
bound
bound
xor
les
cmp
cmp
cmp
sti
sti
sti
sti
add
aad
aad
aad
add
cwtl
add
add
ds
add
add
add
mov
leave
leave
leave
leave
leave
leave
leave
sub
sub
cmp
xor
cld
cld
add
push
push
push
push
push
push
push
push
push
push
push
push
push
test
add
add
add
push
push
push
add
sub
sub
stos
stos
stos
stos
stos
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rcl
add
add
add
je
je
je
inc
inc
inc
les
and
adc
adc
add
add
ljmp
add
aas
aas
aas
aas
add
add
xor
addb
add
jb
jb
test
test
test
test
test
test
or
or
or
or
add
add
sbb
sbb
movsb
roll
add
add
add
add
add
add
add
add
add
mov
mov
mov
addr16
fcmovnu
outsl
mov
cmp
add
ret
ret
ret
ret
ret
stc
add
add
add
adc
adc
js
js
js
add
add
adc
add
add
in
in
in
add
add
add
add
push
push
push
push
push
push
ret
sti
sti
sti
sti
sti
add
add
int3
int3
int3
int3
jmp
jmp
jmp
add
lods
repz
add
jl
jl
jl
mov
mov
add
add
add
clc
clc
clc
clc
clc
clc
add
add
add
dec
dec
das
jle
jle
add
loope
out
out
out
mov
sub
ret
ret
ret
add
add
das
das
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
gs
pop
pop
pop
pop
pop
incl
add
inc
inc
inc
lcall
stc
stc
stc
scas
scas
add
add
fcmovnu
fildl
add
add
add
mov
mov
ret
ret
jno
xchg
xchg
xchg
dec
dec
add
add
add
loopne
loopne
loopne
add
lret
lret
lret
inc
mov
mov
fcmovnu
fcmovnu
cmp
cmp
cmp
add
int3
int3
int3
sub
aaa
aaa
aaa
aaa
mov
cmp
add
add
sahf
sahf
sahf
add
add
pusha
add
add
add
test
test
add
enter
mov
add
adc
add
jl
jl
jl
mov
mov
int
cltd
cltd
cltd
cltd
cltd
ret
ret
add
add
ss
and
and
jmp
add
add
inc
or
or
or
or
or
or
bound
add
add
dec
dec
dec
dec
dec
dec
dec
int3
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
and
and
mov
ljmp
add
add
add
je
je
je
je
add
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
add
stos
add
adc
add
add
mov
dec
fstp
fstp
fstp
fstp
inc
inc
inc
inc
inc
pop
mov
add
add
add
hlt
hlt
hlt
pop
pop
pop
pop
data16
adc
adc
adc
out
add
lock
rcl
mov
add
cmp
add
add
mov
rcl
add
rcl
push
sldt
add
sub
sub
sub
sub
sub
fistps
add
add
lock
sbb
add
add
add
add
xchg
xchg
xchg
jmp
push
push
push
push
push
addr16
sahf
sahf
sahf
sahf
add
cmpsl
push
push
push
push
push
push
push
push
mov
mov
mov
add
add
add
loopne
loopne
loopne
loopne
out
xor
xor
xor
add
add
add
push
add
add
idivb
sub
std
std
std
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pushf
add
xor
xchg
xchg
int3
int3
int3
int3
int3
int3
int3
int3
lock
and
and
add
add
add
movsb
movsb
movsb
movsb
movsb
movsb
fcmovu
fcmovu
fcmovnu
fcmovnu
fildl
add
dec
dec
dec
dec
dec
dec
dec
inc
imul
xor
xor
xor
xor
xor
xor
loopne
test
aam
aam
cld
cld
dec
dec
add
in
in
add
add
add
fcomp
fcomp
fcomp
fcomp
fsubs
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
jne
add
pop
pop
push
adc
addb
addb
mov
add
add
shl
je
sbb
rclb
shlb
loop
or
cmp
jge
mov
fldenv
pop
push
xlat
adc
inc
bound
sub
ljmp
mov
shr
and
xor
stc
xor
sbb
js
shl
inc
and
mov
iret
fiadds
add
pop
pop
fs
mov
dec
pop
pause
xor
xchg
xchg
test
or
add
stos
loopne
jl
sub
mov
sarb
rolb
fcompl
cwtl
in
cltd
loope
inc
fistpll
xor
add
sbbb
pusha
lret
cmp
dec
out
js
xchg
mov
adc
loopne
in
out
int
and
aas
aam
pop
dec
ljmp
and
pop
sub
lret
andb
clc
pushf
sub
ret
xlat
testb
into
push
mov
xlat
ret
mov
loop
pushf
pop
fiaddl
mov
xorb
add
jg
cmp
rolb
and
and
mov
andb
and
mov
mov
lret
cmp
mov
lods
lcall
in
hlt
push
pop
pop
jecxz
roll
shl
pop
pop
adc
loop
stc
sti
mov
ret
mov
rcrl
lods
add
lret
adc
das
into
ss
outsl
xor
jo
daa
sub
inc
xlat
dec
and
aad
pushf
add
leave
mov
fwait
mov
lahf
data16
mov
scas
loopne
and
shl
xor
mov
shll
sbb
idivb
das
in
inc
push
push
and
loop
lea
pusha
and
and
ljmp
xchg
fistl
xchg
mov
jg
cltd
enter
pusha
inc
cs
stc
inc
xor
xchg
data16
inc
push
ret
loopne
cwtl
dec
cli
pop
sbb
add
or
mov
andb
sbb
andb
dec
inc
rcll
dec
fs
push
pusha
pusha
adc
shlb
movsl
pop
call
cmp
pusha
subb
inc
pop
pop
mov
fcmovu
jns
outsb
add
adc
and
js
push
pushf
or
inc
push
outsb
loop
xor
jbe
shlb
lcall
push
adc
fcompl
jle
fldl
dec
pop
adc
in
in
mov
jle
cltd
loop
mov
xchg
in
pop
jg
test
shll
pop
dec
fidivs
add
js
dec
out
xchg
push
cli
or
dec
data16
sbb
shrb
es
rcrb
and
pcmpgtw
lods
loopne
comiss
paddd
mov
sub
jne
popa
rcrb
sbb
mov
inc
and
bound
and
js
and
dec
sub
sub
aas
stc
aad
lock
outsl
dec
add
and
pop
js
out
into
push
push
test
je
and
insl
cmp
push
sbb
mov
mov
pop
adc
jns
test
mov
cmp
jp
jle
mov
mov
xorb
loopne
cmpsl
add
subb
push
and
iret
sub
and
std
faddl
rolb
or
loopne
mov
enter
or
add
lock
push
jecxz
test
mov
addb
jp
gs
or
rclb
andb
add
lret
sti
mov
stc
xchg
dec
inc
cld
psraw
inc
jae
inc
sub
fldt
sti
pop
push
test
and
fsts
xchg
negb
mov
inc
mov
loopne
add
je
inc
xchg
xor
addr16
or
sbb
pusha
adc
mov
xchg
das
mov
add
cmp
and
pusha
adc
or
jns
dec
imul
aam
sub
loopne
mov
shrl
orb
add
inc
stc
xor
je
ret
popf
ljmp
xchg
lret
sub
inc
adc
mov
mov
push
movsb
and
out
mov
jo
mov
mov
imul
inc
add
mov
fidivs
std
mov
mov
ss
ljmp
lret
ljmp
pushf
lahf
mov
loopne
aad
mov
mov
out
pushf
push
sarl
push
out
clc
outsl
lock
dec
fists
dec
andb
loopne
sub
add
loopne
mov
xchg
rclb
lea
and
sar
call
mov
hlt
loope
pop
mov
adc
xchg
int
enter
pusha
and
cmp
sbb
sar
addr16
loop
je
xchg
sahf
aam
fisubrl
mov
addb
dec
xchg
dec
push
hlt
dec
fmuls
push
add
xor
add
fs
sbb
rol
lahf
mov
lcall
pusha
mov
loopne
sub
and
dec
popa
jl
shl
adc
and
push
lods
shlb
mov
sub
xlat
adc
rcll
push
inc
mov
mov
and
xlat
sar
ss
mov
loopne
and
pusha
xchg
test
xchg
mov
loopne
and
push
addb
test
shr
and
inc
mov
andb
imul
mov
loopne
add
scas
jl
push
add
imul
aaa
xor
cmp
jecxz
aaa
pusha
enter
xor
mov
data16
inc
push
sbb
decb
adc
dec
mov
sahf
dec
xchg
and
mov
outsb
inc
sub
in
pop
jecxz
cltd
bound
inc
xchg
sub
fs
subl
or
inc
add
call
mov
sbb
mov
add
inc
mov
std
stos
fadds
js
das
mov
or
sti
dec
lahf
cmp
push
adc
mov
loopne
xchg
add
dec
push
jno
inc
add
pushl
outsb
loopne
popa
xorl
out
aad
pusha
and
inc
and
and
sahf
and
andb
fldenv
mov
cmpsl
push
jg
xor
push
adc
add
inc
loopne
daa
test
pop
repnz
sbb
ret
add
dec
mov
push
jae
incb
add
sbb
push
ja
movsb
add
add
xlat
loop
je
aaa
sbb
push
andb
cli
dec
dec
nop
in
and
inc
shll
jp
dec
xchg
sahf
mov
pushw
inc
and
mov
enter
imul
aaa
mov
loope
inc
addr16
cmp
dec
test
add
mov
inc
mov
andb
inc
mov
je
mov
in
cmp
jmp
pop
sahf
rcll
sbb
repz
inc
inc
test
loopne
jns
mov
popa
jecxz
shl
push
pusha
pusha
dec
cmp
mov
mov
sub
lock
out
pop
imul
mov
xor
sbb
addr16
outsl
lret
xchg
mov
cmpb
mov
add
inc
dec
xor
loope
fdivs
xlat
inc
in
leave
cs
pusha
jb
and
or
dec
or
out
adc
test
inc
mov
inc
push
sbb
push
loopne
mov
pop
cmp
and
and
mov
inc
loopne
inc
add
mov
pop
xor
iret
sub
push
insl
pushf
and
rolb
xor
stos
dec
pop
xor
cmpsl
dec
sbb
loope
aam
add
add
shll
jns
popf
hlt
cmp
aad
xlat
movsl
cmp
push
lret
in
mov
add
je
decb
dec
pop
sub
int3
movsl
je
lods
js
mov
jne
jne
out
inc
loop
fnsave
xchg
into
sarl
rolb
mov
pop
testb
inc
xlat
jno
bound
inc
add
mov
outsl
cmp
jno
adc
add
sub
fs
test
loop
mov
mov
ret
int3
xor
das
mov
push
rcrl
inc
sub
mov
dec
push
leave
sub
out
xor
xchg
in
cmc
cld
aas
lods
adc
int3
sub
int
push
mov
mov
inc
jg
and
inc
xor
pop
add
push
mov
ljmp
inc
cmpb
xchg
push
xchg
sub
add
sbb
add
add
mov
and
sub
add
dec
mov
inc
sub
add
gs
les
shll
or
subl
xlat
dec
or
and
repz
in
cmpsl
insw
lret
cs
addb
fs
lret
imul
das
push
inc
inc
scas
inc
orl
scas
and
xchg
dec
aad
mov
inc
cmp
xorl
push
push
repnz
xor
imul
or
inc
andb
dec
sub
inc
add
push
add
rolb
push
ja
add
mov
adc
int
cli
aaa
pop
mov
addl
rolb
andb
mov
push
adc
adc
loopne
dec
out
out
add
ret
jnp
and
lcall
loopne
jle
adc
lds
aad
and
mov
fisubl
shl
inc
and
mov
loopne
and
pusha
aam
loopne,pn
add
mov
add
inc
rcrb
or
push
cld
addr16
and
subl
xor
push
addb
lock
loopne
pop
push
adc
mov
aad
jecxz
or
addr16
sub
inc
jle
or
aad
negl
jne
out
inc
and
and
push
mov
add
xchg
or
inc
jle
in
or
nop
adc
and
pop
push
dec
jmp
jae
add
mov
adc
popa
cmp
mull
mov
add
dec
mov
lods
inc
pusha
outsl
lahf
mov
psllw
std
std
les
sarb
hlt
lret
testl
pusha
loopne
stc
inc
jmp
inc
test
mov
pusha
push
pusha
inc
outsb
xchg
push
stos
stos
add
scas
loopne
cli
push
movsb
mov
les
cmp
inc
add
pop
insb
push
ja
push
pop
call
loopne
fs
add
mov
fcomps
mov
mov
mov
lret
adc
and
inc
mov
outsl
pop
rcll
outsl
or
loopne
into
andb
inc
loopne
xor
adc
pop
std
and
cmpb
arpl
lods
addr16
insb
icebp
sub
loopne
mov
cmpsl
fstpl
push
mov
popl
mov
mov
mov
ja
lods
pusha
mov
sub
add
fsts
cwtl
dec
mov
mov
mov
lea
mov
into
or
add
iret
cmp
iret
xor
mov
xchg
leave
aas
into
aad
mov
fdivrl
in
jp
repnz
addb
or
and
cmp
mov
mov
and
sahf
fcompl
sarb
sarb
or
loopne
xlat
jb
imul
gs
ret
and
push
hlt
mov
sarl
inc
jge
in
jg
push
and
sub
lods
scas
and
ja
inc
mov
adc
jne
sub
shlb
mov
testb
inc
jbe
or
movsb
mov
clc
aas
sub
movsl
leave
xrelease
ljmp
jb
enter
mov
mov
sbb
lea
cmpl
jo
out
repz
pusha
xchg
cmp
dec
push
sub
cwtl
dec
nop
cld
ss
mov
xor
leave
xchg
cld
cmpsb
mov
and
insb
shrl
jl
jge
mov
lea
inc
jl
data16
shlb
pusha
pusha
xchg
fwait
sbb
scas
and
push
loopne
sbb
rolb
add
pusha
popf
icebp
mov
fs
movsl
stc
xor
fsubs
inc
pusha
loopne
sub
sbb
mov
jge
and
loopne
xchg
cmpsb
inc
mov
loop
clc
int
inc
jae
aas
xor
ret
mov
jg
dec
add
inc
ret
xor
mov
add
xchg
dec
inc
inc
adc
daa
jo
add
sbb
mov
mov
sub
imull
pop
mov
and
test
sbb
loopne,pn
test
mov
inc
jae
shlb
dec
jg
add
jge
inc
cmp
mov
das
push
add
insb
sub
imul
sarb
enter
sbb
data16
scas
je
rcrl
jno
mov
test
fwait
add
mov
shll
and
cmp
and
xor
pop
xchg
in
int3
adc
xor
push
dec
mov
add
add
cwtl
mov
dec
iret
pop
cli
in
adc
lret
sarl
fcomp
pop
insl
xchg
push
lods
out
mov
sahf
ficomps
dec
ljmp
aas
mov
cmp
lahf
lret
push
mov
or
fwait
dec
ja
cmc
mov
add
cmp
adc
mov
iret
je
iret
hlt
mull
rclb
add
adc
std
lcall
idivl
test
rorb
pusha
cmovbe
cmp
mov
add
lods
and
into
adc
aas
mov
filds
out
jecxz
push
sub
pusha
andb
arpl
jp
in
mov
sub
pusha
inc
xchg
inc
xchg
rol
js
shll
test
inc
pop
sbb
cmp
mov
fwait
and
mov
or
add
dec
in
inc
cmc
xchg
or
andb
add
mov
sbbl
inc
inc
mov
inc
push
test
mov
rcrl
xlat
imull
and
std
pop
and
sbb
push
loopne
cmp
and
rorb
and
ja
cwtl
stos
add
gs
lahf
fsub
stos
rolb
leave
lods
add
gs
mov
jp
mov
cmp
inc
pusha
add
cmp
cmpsl
or
mov
cmp
addb
inc
dec
inc
xor
mov
mov
mov
add
cmp
mov
mov
in
std
bound
mov
in
add
andb
inc
pusha
in
inc
and
shlb
sbb
test
inc
mov
loop
pop
addr16
loopne
lea
inc
sbbb
repnz
add
repz
inc
pop
jno
adc
adc
stc
addb
pop
jg
ja
rolb
rcr
push
sbb
out
cmpsl
inc
stc
xor
fildll
mov
imul
mov
je
aam
inc
pusha
faddp
inc
ljmp
out
movsb
mov
jle
into
or
or
push
inc
mov
sti
imul
cwtl
pop
pop
out
mov
mov
loopne
out
push
lock
and
pop
nop
daa
lds
dec
ss
sarb
dec
imul
and
push
add
xchg
mov
inc
inc
fs
jmp
pusha
and
mov
pusha
adc
and
and
rorb
mov
mov
xchg
or
addb
inc
push
leave
jmp
imul
mov
rcrb
lds
stos
rol
cmc
push
bound
loopne
jns
jnp
sub
insb
cwtl
dec
faddl
in
repz
bsr
rolb
addb
pop
and
lods
add
hlt
push
mov
mov
adc
mov
loopne
sbb
outsb
pop
mov
add
test
inc
mov
add
jecxz
test
and
jae
fwait
fwait
rorl
repnz
pusha
cmp
mov
jns
ja
std
mov
mov
or
shlb
jb
dec
push
mov
loopne
repz
pop
lret
fmuls
xorb
insl
movsl
insl
and
aaa
dec
mov
and
xchg
lods
mov
sbb
rol
add
sti
inc
adc
push
les
push
repnz
js
xor
mov
mov
and
inc
xchg
loopne
dec
push
and
inc
inc
lods
dec
sbb
add
sbb
mov
inc
inc
adc
cmp
cmp
scas
and
mov
dec
mov
adc
sbb
lahf
cmpsb
rolb
dec
mov
fs
cmp
lret
popa
arpl
test
push
icebp
cld
jge
mov
add
sbb
fwait
pop
mov
cmp
cmpsb
inc
pusha
in
mov
push
and
mov
inc
dec
cld
add
or
jl
and
rolb
mov
pop
and
add
jbe
sub
and
scas
pop
pop
test
push
mov
sub
mov
mov
fdivrs
mov
xchg
dec
cli
push
pop
movsb
and
inc
scas
imul
fisubrs
popa
mov
loopne
mov
hlt
pop
icebp
das
loop
or
mov
pop
test
in
mov
fbld
rclb
dec
aas
sub
daa
add
sub
mov
rcrb
pop
sbb
ret
inc
fldcw
pop
es
mov
lret
std
call
mov
add
fildll
cltd
mov
add
xchg
push
and
imul
add
and
mov
cld
inc
or
stos
adc
pusha
shrb
rorb
mov
and
pop
ret
add
pusha
outsl
icebp
jmp
outsb
or
cmpsb
andb
add
int3
cvttps2pi
inc
fwait
jne
pop
jmp
in
pusha
jge
and
mov
lea
xchg
fs
fimull
das
sub
or
loopne
insl
dec
fiaddl
je
mov
sub
cmc
mov
out
ss
fwait
and
and
aad
pusha
mov
sub
mov
dec
or
inc
add
mov
enter
push
cld
inc
pop
insb
xchg
mov
rol
mov
push
xchg
rcrw
mov
pusha
mov
add
js
fwait
ja
dec
jae
addb
pusha
cs
shl
mov
repnz
inc
in
mov
mov
sbb
sbb
push
insb
test
inc
imul
add
and
push
cld
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
jmp
lea
movl
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
or
xchg
inc
or
mov
pusha
and
add
add
out
xor
mov
cmpsb
add
inc
dec
jge
and
sub
or
shlb
sbb
andb
aas
in
lods
mov
rolb
jl
dec
xchg
js
add
pop
aam
or
adc
inc
mov
xchg
popa
mov
and
enter
inc
pop
shr
lock
addb
loopne
or
and
xchg
int3
test
mov
mov
int3
push
std
push
add
mov
aad
add
cmpb
dec
stos
pusha
mov
inc
insl
push
mov
sub
mov
ss
repz
inc
fdivp
sti
leave
cld
pop
add
pusha
ja
or
mov
push
out
xor
xchg
in
test
sti
xchg
sub
test
lea
in
pusha
xor
andb
or
mov
mov
andb
dec
xor
mov
lock
jnp
mov
and
into
stos
pusha
and
xor
pusha
mov
add
movsl
aaa
mov
loopne
int3
mov
shl
cmp
and
mov
pop
cmp
ss
into
pop
xchg
add
lcall
sbb
add
xor
sysret
int
xorl
ss
cwtl
into
mov
shr
dec
insl
push
pop
sub
lcall
adc
add
addb
sarb
sub
add
and
add
xchg
cmpsb
mov
and
mov
orb
adc
mov
js
cmc
add
loopne
andb
cmp
imul
pop
insl
sbb
and
cmp
mov
mov
mov
add
fildll
in
and
in
loopne
add
std
insb
xor
popf
mov
gs
mov
or
fldl
rolb
rcrl
lea
loope
pusha
add
icebp
fdivp
jp
sub
dec
push
movsb
loopne
jo
xor
cmc
test
adc
psubd
jno
aas
xor
mov
mov
xchg
sub
rcrb
and
mov
mov
adc
fldl
popa
cmp
jns
je
stos
inc
loope
pop
pop
cmp
sbb
shl
push
movsl
mov
inc
add
adc
cmp
loopne
and
inc
out
sbb
addr16
push
imul
xlat
mov
xor
sbb
das
bound
or
push
mov
jmp
out
add
test
nop
or
sbb
stos
cmpsl
aas
inc
sbb
mov
adc
add
ds
cmp
inc
jnp
sbb
popf
sbb
cmpsb
pusha
subb
and
adc
and
out
inc
outsl
pop
add
inc
mov
clc
xchg
js
andb
mov
js
test
loop
insl
xchg
int
scas
loopne
mov
mov
push
sub
shlb
and
jg
test
mov
shrb
and
lcall
loop
jl
xchg
add
jl
nop
leave
jge
add
cmpb
push
loopne
or
jle
fisubl
outsb
mov
xchg
sub
shl
mov
xchg
es
xor
addb
movsb
add
ret
pop
out
cmp
scas
ljmp
psubq
fsts
lods
pop
pop
test
inc
push
ret
pusha
cs
pusha
div
leave
test
add
pusha
pop
lods
mov
xor
inc
inc
cmpsl
ss
fbstp
ss
push
or
inc
mov
xchg
sbb
push
inc
add
and
andl
dec
nop
mov
outsl
push
xor
or
add
mov
or
loopne
iret
mov
aam
hlt
and
je
shlb
xor
sti
into
mov
sbbb
icebp
push
nop
push
add
adc
inc
inc
xor
add
cld
testb
andb
add
imull
insl
xorl
mov
andb
mov
sti
mov
add
or
inc
inc
cltd
mov
add
jo
sub
mov
aad
inc
jle
addb
popl
sbb
cmp
adc
ljmp
dec
add
and
jae
jbe
addb
mov
add
movsb
pusha
loopne
rcrb
and
pushf
test
mov
push
shlb
xor
sar
mov
mov
daa
or
fisttps
ficomps
jmp
sbb
push
in
add
inc
mov
inc
lods
mov
mov
inc
add
and
loopne
xor
mov
rol
dec
into
jge
mov
push
push
mov
icebp
loopne
inc
rorb
jl
adc
enter
pusha
add
pop
sbbl
and
fs
xchg
outsb
pop
dec
cltd
jbe
pop
mov
inc
into
sub
insb
and
sarb
repz
or
adc
lcall
std
insb
xor
shlb
mov
jmp
cmpb
sbb
or
loopne
in
cmp
xor
and
jne
loop
sbb
fistps
loopne
jmp
dec
cltd
sbb
mov
cmp
pusha
inc
bound
mov
fisttpl
inc
jg
std
sbb
or
rorb
loopne
lock
insl
in
mov
jae
sub
add
adcl
cmp
jbe
jns
clc
fcom
sub
popf
inc
sahf
mov
mov
mov
loopne
and
xor
add
loop
pop
test
mov
test
sarb
js
push
xor
movsl
push
adc
in
pop
dec
outsb
xorl
jae
push
and
inc
nop
pop
sti
jnp
lock
nop
mov
jp
mov
and
addb
out
add
stos
lahf
mov
pop
mov
inc
pushf
push
stos
add
xor
imull
les
mov
shlb
pop
xchg
mov
adc
sub
inc
test
pusha
and
rol
outsb
inc
and
sar
fwait
scas
lret
mov
mov
movsb
andb
xorb
and
xchg
add
sub
or
in
mov
inc
jp
neg
mov
pusha
cld
add
inc
add
mov
sub
and
cli
lcall
pop
jnp
push
cmpl
lret
loopne
mov
add
cmp
clc
fadd
sub
shlb
lret
inc
push
andl
cmp
stos
add
mull
mov
loopne
cmp
xchg
outsb
jge
mov
lahf
add
add
jne
add
shlb
scas
mov
addr16
pop
adc
mov
shll
loopne
xchg
ds
add
bound
xchg
push
adc
and
push
cmpsl
jmp
shll
lret
mov
cmp
mov
or
aaa
stos
jecxz
sub
clc
sbb
lret
stos
addb
jp
jmp
add
loopne
xor
andb
sub
add
pop
imull
and
dec
mov
and
rorb
cli
mov
xor
push
and
push
cmp
loopne
call
add
in
std
or
inc
fwait
inc
sahf
xchg
and
cmp
aaa
test
pusha
jl
int
adc
lods
mov
cwtl
ret
mov
fadds
pop
push
pop
dec
add
loopne
jg
lods
pusha
and
test
add
std
mov
jmp
add
adc
pop
scas
add
sub
jnp
mov
pusha
imul
popf
decl
and
std
adc
add
jae
add
or
addb
jo
xchg
outsl
sub
sbb
mov
fs
sbb
lcall
jnp
rcl
mov
mov
shlb
jp
mov
pushf
pop
cmp
and
push
leave
insl
adc
sqrtps
aam
shlb
out
cmp
xchg
iret
dec
jmp
add
dec
fistps
test
pop
push
lret
add
xchg
or
push
push
dec
in
add
addb
push
mov
shlb
pop
add
xor
pusha
inc
inc
and
sbb
mov
add
inc
std
sarb
and
sbbb
clc
xor
cltd
bound
js
loop
shlb
mov
mov
stc
out
sbb
enter
lcall
cli
mov
shlb
inc
inc
mov
shlb
add
inc
sbb
mov
shlb
pop
jno
adc
jmp
inc
data16
orl
adc
dec
imul
std
adc
popf
cmpsb
rol
inc
negl
push
inc
inc
loopne
in
mov
mov
inc
adc
bound
mov
xchg
inc
pop
push
or
shl
test
ss
adc
fs
add
pop
or
loopne
sahf
mov
andb
iret
cmp
inc
jmp
push
lock
loopne
lcall
loope
movsl
int
insb
leave
add
loopne
aaa
dec
cmpsb
pusha
shl
int
loopne
mov
loopne
cmp
mov
nop
push
mov
inc
loopne
inc
aas
xor
addb
pusha
inc
das
aas
xchg
clc
add
fsubp
ja
and
inc
add
out
xchg
aaa
sbb
negl
sub
inc
or
or
cwtl
sbb
and
arpl
inc
div
fcomp
push
data16
dec
fimull
lds
add
aaa
jns
fs
and
xor
mov
mov
or
pusha
and
pop
les
xchg
adc
jae
pusha
mov
mov
mov
in
ds
cmp
sti
fwait
loopne,pn
jo
add
aam
fisttps
ljmp
repz
cmp
inc
pusha
sahf
push
add
sub
pusha
mov
mov
inc
push
ret
sub
adc
pop
test
loopne
mov
std
xchg
push
stc
movsb
pusha
sub
aaa
stc
nop
pushf
jp
and
adc
hlt
dec
sbb
inc
or
pusha
loopne
loopne
scas
and
cmc
popf
mov
cmp
push
pop
in
sub
rcr
fistpll
jo
pusha
add
pop
mov
cmp
mov
inc
fucom
push
and
pusha
mov
push
cmc
loope
add
and
daa
inc
inc
xchg
aam
xlat
loop
pop
lret
pop
sub
jge
sbb
xchg
sahf
xchg
cmp
sbb
xchg
mov
loopne
dec
in
inc
jo
mov
inc
ficompl
js
jo
mov
loopne
ds
mov
in
not
stos
inc
loopne
fcoms
mov
paddsb
sbb
jp
add
jp
mov
in
push
shlb
adc
xorl
cltd
inc
pop
xor
fiadds
out
and
subl
test
or
inc
inc
add
jno
lods
andb
sub
mov
and
loope
loopne
pop
loopne
fisttps
inc
mov
ja
cmp
test
inc
xor
inc
dec
dec
mov
add
xor
mov
dec
inc
mov
and
cmpl
addb
jae
loopne
fadds
inc
rorb
add
lds
loope
adc
mov
xchg
std
hlt
adc
xchg
add
shrb
pusha
loopne
push
scas
fldt
xor
and
outsl
mov
shlb
cmpsl
call
cwtl
mov
out
faddp
add
add
shlb
pop
adc
loopne
or
loopne
mov
jge
jbe
and
pusha
mov
mov
fbld
xchg
mov
xlat
movsl
cltd
out
lock
lcall
mov
adcb
std
sub
aas
cld
xor
xor
in
xchg
movsb
add
out
xchg
cwtl
mov
imul
inc
pop
pop
shll
push
inc
bound
test
loopne
lret
sbb
sub
loopne
inc
pusha
call
lock
and
ds
outsb
imulb
andb
hlt
ss
addb
fsub
add
pusha
sbb
and
lret
mov
call
and
rclb
pop
out
popa
enter
insl
jmp
bound
addb
xor
mov
pop
cwtl
xor
ret
clc
xor
call
add
and
sarb
push
mov
jg
jmp
into
jmp
std
iret
jo
cmp
add
mov
sub
or
shlb
push
cwtl
mov
mov
imul
xor
sub
std
inc
mov
cmp
aad
dec
pop
ss
mov
pusha
add
insb
dec
bound
cmp
xchg
pusha
mov
inc
loopne
cld
jne
adc
cwtl
xor
or
sbb
xor
push
mov
add
xchg
test
mov
mov
pop
clc
jns
pushf
fidivrl
rcrl
or
shrb
inc
adc
scas
inc
add
or
data16
imul
pop
cmc
and
pusha
test
inc
in
mov
xor
xor
testl
and
mov
push
shll
pusha
imul
sarb
jns
mov
outsl
mov
iret
or
loopne
sbb
dec
out
outsl
leave
rolb
addl
bound
fdivs
inc
adc
adc
pusha
pusha
push
fidivs
std
mov
fdivs
out
add
pusha
push
xchg
aaa
inc
clc
insb
loop
inc
ror
mov
nop
adc
addr16
push
sub
add
or
popf
and
lcall
test
data16
add
mov
add
jbe
int3
rorl
rcrb
fists
loop
mov
rcrb
mov
rcrb
adcl
das
es
cmpb
mov
loopne
arpl
sti
rcl
scas
mov
xor
out
pop
sbb
mov
in
leave
nop
jmp
add
fnstcw
nop
push
mov
leave
nop
jmp
add
mov
xchg
std
mov
push
mov
xchg
ret
les
add
xchg
cmp
sbb
nop
push
mov
leave
nop
jmp
in
insl
cmpsb
pop
add
sbb
test
cld
jae
mov
add
mov
jb
mulb
cmp
mov
clc
repnz
nop
cld
jae
add
mov
and
pusha
icebp
nop
push
mov
leave
nop
jmp
add
test
xchg
into
add
pop
push
mov
xchg
ret
jl
movsb
add
imul
mov
clc
repnz
nop
cld
jae
add
add
add
nop
push
mov
leave
nop
jmp
jg
test
add
sahf
sbb
and
nop
nop
cld
jae
arpl
fldenv
lods
nop
push
mov
leave
nop
jmp
adc
add
lcall
cld
jae
push
push
add
adc
add
addb
push
clc
repnz
nop
cld
jae
add
pop
adc
mov
mov
xchg
ret
pop
xchg
arpl
insl
add
push
mov
xchg
ret
arpl
xchg
add
fcmovnu
pusha
mov
mov
leave
nop
jmp
add
jge
add
add
popa
fistpl
clc
repnz
nop
cld
jae
add
mov
pop
nop
push
mov
leave
nop
jmp
add
insl
lods
loopne
stos
rol
mov
clc
repnz
nop
cld
jae
cli
xchg
addl
xchg
xchg
pusha
nop
push
mov
leave
nop
jmp
into
les
pop
fldenv
movsb
mov
inc
push
mov
xchg
ret
cmpsl
add
add
add
out
inc
shrb
fistl
mov
inc
add
pop
jge,pn
jge
add
add
sub
add
nop
jmp
addl
pop
xor
clc
repnz
nop
cld
jae
js
stos
mov
add
mov
clc
repnz
nop
cld
jae
mov
add
rclb
fisubrl
add
pop
add
rep
nop
push
mov
leave
nop
jmp
add
sarl
insl
ljmp
nop
nop
cld
jae
fistl
test
cmpb
or
add
clc
repnz
nop
cld
jae
xor
clc
repnz
nop
cld
jae
insl
fildl
adc
sub
pop
call
nop
jmp
js
fxch
add
clc
repnz
nop
cld
jae
add
pop
push
loop
pop
clc
repnz
nop
cld
jae
les
test
add
lcall
push
mov
xchg
ret
jg
add
xor
clc
repnz
nop
cld
jae
add
js
mov
rorb
mov
clc
repnz
nop
cld
jae
xchg
and
jl
clc
repnz
nop
cld
jae
push
sub
pushl
clc
repnz
nop
cld
jae
add
dec
nop
push
mov
leave
nop
jmp
add
add
add
les
push
mov
leave
nop
jmp
add
dec
push
clc
repnz
nop
cld
jae
add
add
add
cmpsb
jg
shl
nop
push
mov
leave
nop
jmp
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
loopne
jl
mov
and
inc
mov
nop
push
mov
leave
nop
jmp
insb
insb
adc
addb
pop
nop
push
mov
leave
nop
jmp
push
add
add
add
add
and
push
mov
xchg
ret
rcll
xchg
movsl
mov
clc
repnz
nop
cld
jae
add
mov
adc
nop
jmp
cli
add
repnz
nop
cld
jae
add
addl
add
push
push
mov
clc
repnz
nop
cld
jae
imul
into
sub
xor
add
mov
add
pop
add
and
clc
repnz
nop
cld
jae
add
xchg
pop
add
fistl
pop
outsl
inc
add
mov
jl
repnz
push
push
mov
xchg
ret
imul
push
add
pop
add
in
jmp
mov
add
fildl
mov
push
mov
xchg
ret
add
and
lock
sar
repnz
nop
cld
jae
add
add
adc
add
es
mov
repnz
nop
cld
jae
add
les
insl
add
mov
nop
push
mov
leave
nop
jmp
mov
flds
adc
push
clc
repnz
nop
cld
jae
pop
add
imul
adc
mov
leave
nop
jmp
les
fstps
add
lea
push
mov
xchg
ret
lcall
fldenv
repnz
nop
cld
jae
mov
add
add
and
add
mov
add
sub
sqrtps
nop
jmp
add
add
xchg
cli
jg
call
clc
repnz
nop
cld
jae
xchg
add
xor
nop
cld
jae
add
xchg
add
xchg
pop
clc
repnz
nop
cld
jae
adc
add
push
mov
xchg
ret
test
jge
add
add
bound
cmp
pushf
das
cmp
push
mov
xchg
ret
add
add
adc
aam
xchg
lret
push
clc
repnz
nop
cld
jae
add
jge
iret
test
push
mov
xchg
ret
pop
pop
add
add
cli
sbb
inc
les
jne
clc
repnz
nop
cld
jae
add
adc
cld
push
mov
xchg
ret
mov
add
add
add
push
mov
xchg
ret
pop
add
ror
cs
cli
les
clc
repnz
nop
cld
jae
arpl
push
roll
add
fistpl
nop
push
mov
leave
nop
jmp
add
push
mov
imul
cld
jae
pop
add
fldcw
cli
mov
add
scas
mov
pop
push
mov
xchg
ret
add
add
imul
cs
repnz
nop
cld
jae
fildl
and
andb
clc
loop
mov
jbe
clc
repnz
nop
cld
jae
cmpsb
arpl
add
and
push
mov
xchg
ret
imul
add
call
cld
jae
pop
add
mov
push
mov
xchg
ret
pop
add
stos
add
add
loopne
push
push
clc
repnz
nop
cld
jae
flds
add
lcall
lret
mov
push
mov
xchg
ret
add
fstpt
js
in
push
clc
repnz
nop
cld
jae
add
pushf
in
add
xor
add
nop
push
mov
leave
nop
jmp
add
add
inc
and
fwait
nop
push
mov
leave
nop
jmp
cmpl
jmp
push
mov
leave
nop
jmp
arpl
jecxz
nop
push
mov
leave
nop
jmp
add
add
add
add
adc
xor
push
mov
xchg
ret
add
insb
test
add
cmp
add
repnz
nop
cld
jae
pop
add
addb
dec
push
push
mov
xchg
ret
add
adc
xchg
xchg
mov
push
mov
xchg
ret
add
add
add
add
movsb
je
add
and
pop
add
and
xorl
nop
push
mov
leave
nop
jmp
pop
add
cmpsb
add
in
scas
add
clc
repnz
nop
cld
jae
add
add
daa
add
clc
repnz
nop
cld
jae
cli
sub
lret
push
clc
repnz
nop
cld
jae
fstpt
test
add
clc
repnz
nop
cld
jae
insb
add
add
loope
test
or
nop
nop
cld
jae
adc
jne
clc
repnz
nop
cld
jae
xchg
xchg
insb
outsl
pop
push
mov
xchg
ret
addl
pop
add
mov
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
lcall
cmp
repnz
nop
cld
jae
adc
loop
xor
jmp
push
mov
xchg
ret
pop
add
add
loop
cs
adc
add
add
add
mov
mov
add
add
push
mov
and
push
fs
repnz
nop
cld
jae
jge
add
jns
push
mov
xchg
ret
sub
push
add
xchg
sbb
clc
repnz
nop
cld
jae
and
add
out
test
nop
push
mov
leave
nop
jmp
add
add
jg
arpl
clc
repnz
nop
cld
jae
adc
pop
push
mov
xchg
ret
xchg
add
add
mov
push
clc
repnz
nop
cld
jae
and
add
add
nop
push
mov
leave
nop
jmp
pop
push
add
mov
inc
sarl
push
mov
leave
nop
jmp
add
adc
and
and
mov
cmp
mov
xchg
ret
add
into
mov
xchg
push
mov
xchg
ret
add
mov
repnz
nop
cld
jae
add
fnstcw
push
sarb
repnz
nop
cld
jae
add
add
cmpsl
enter
repnz
nop
cld
jae
cli
add
mov
rcrb
sub
clc
repnz
nop
cld
jae
xor
cli
xchg
pop
add
clc
repnz
nop
cld
jae
cmpsl
arpl
add
loopne
mov
add
clc
repnz
nop
cld
jae
add
arpl
add
pusha
xchg
pop
push
mov
xchg
ret
xchg
add
add
enter
mov
add
clc
repnz
nop
cld
jae
xchg
xchg
sub
incl
pop
cmp
mov
xchg
ret
test
arpl
push
add
sarb
mov
cmp
ret
push
test
add
jl
add
rclb
clc
repnz
nop
cld
jae
add
stos
in
cli
jmp
test
add
clc
repnz
nop
cld
jae
sub
call
clc
repnz
nop
cld
jae
and
pop
xchg
xchg
add
gs
add
push
add
add
jge
push
push
mov
xchg
ret
jl
and
js
add
clc
push
mov
xchg
ret
add
add
adc
mov
xchg
ret
fnstenv
add
add
and
xor
clc
repnz
nop
cld
jae
loop
jge
add
lret
cmp
nop
push
mov
leave
nop
jmp
xchg
jl
pop
xchg
add
and
pop
cmc
clc
repnz
nop
cld
jae
sub
rorl
in
leave
nop
jmp
add
add
lea
clc
repnz
nop
cld
jae
add
lcall
repnz
nop
cld
jae
pushf
pop
add
aas
call
clc
repnz
nop
cld
jae
add
adc
inc
nop
push
mov
leave
nop
jmp
jge
push
sub
pop
call
nop
push
mov
leave
nop
jmp
add
jecxz
mov
adc
repnz
nop
cld
jae
add
add
push
sbb
add
pop
add
pop
loopne
add
pop
shlb
cld
pop
jecxz
test
add
clc
repnz
nop
cld
jae
insb
loopne
fildll
sar
nop
nop
cld
jae
pop
add
into
popf
sub
push
mov
xchg
ret
mov
cmpsl
add
push
je
nop
push
mov
leave
nop
jmp
adc
mov
repnz
nop
cld
jae
cmpsl
add
js
sub
xor
clc
repnz
nop
cld
jae
add
pop
push
inc
inc
push
clc
repnz
nop
cld
jae
add
mov
add
sub
loopne
repnz
nop
cld
jae
and
add
add
add
nop
push
mov
leave
nop
jmp
in
cmpsl
add
ljmp
nop
push
mov
leave
nop
jmp
insl
mov
pop
jb
add
scas
imul
clc
repnz
nop
cld
jae
js
test
cld
push
mov
xchg
ret
add
xor
mov
xor
nop
cld
jae
add
arpl
add
cmp
push
clc
repnz
nop
cld
jae
xchg
add
js
fidivrs
nop
nop
cld
jae
xchg
fildl
xchg
add
cmpsb
add
fistl
imul
cmp
ret
xchg
add
test
add
add
sub
and
nop
nop
cld
jae
pop
cli
add
mov
nop
push
mov
leave
nop
jmp
flds
jg
mov
fdivs
fdivrs
push
mov
xchg
ret
add
add
xorl
clc
repnz
nop
cld
jae
fnstcw
xchg
sub
add
pop
and
push
add
pop
sarl
xchg
xchg
ret
roll
sub
cmpsb
push
fsubl
repnz
nop
cld
jae
add
pushf
fldenv
push
mov
leave
nop
jmp
add
add
int3
lea
push
mov
xchg
ret
loop
add
adc
pusha
add
add
add
clc
repnz
nop
cld
jae
insl
mov
subb
test
repnz
nop
cld
jae
insb
imul
scas
enter
in
leave
nop
jmp
add
stos
les
push
fld1
nop
push
mov
leave
nop
jmp
cmp
push
mov
mov
xchg
ret
xchg
add
add
mov
sub
clc
repnz
nop
cld
jae
pop
add
push
cmp
xchg
clc
repnz
nop
cld
jae
cmpsl
sub
and
sbb
nop
cld
jae
cmpsb
add
mov
out
mov
clc
repnz
nop
cld
jae
add
mov
pop
xor
push
mov
xchg
ret
add
add
arpl
add
or
jmp
repnz
nop
cld
jae
add
add
jg
in
mov
iret
or
inc
add
add
xor
pop
clc
repnz
nop
cld
jae
cli
in
add
add
add
nop
push
mov
leave
nop
jmp
mov
add
add
lods
push
mov
xchg
ret
push
cli
loop
add
add
add
add
and
add
add
pop
add
jbe
push
mov
xchg
ret
add
fldcw
pop
stos
sub
push
mov
xchg
ret
insl
fistpl
push
push
add
in
leave
nop
jmp
add
flds
cmpsb
fildl
addb
ret
inc
fnstsw
clc
repnz
nop
cld
jae
xchg
repnz
nop
cld
jae
pop
pop
arpl
cli
pop
and
rep
jmp
jmp
add
cmpsl
add
add
nop
push
mov
leave
nop
jmp
add
add
add
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
addl
into
add
add
push
clc
repnz
nop
cld
jae
cli
jl
xchg
add
sub
shr
clc
repnz
nop
cld
jae
lcall
leave
pop
clc
repnz
nop
cld
jae
add
jl
stos
movsb
loop
xchg
push
clc
repnz
nop
cld
jae
insl
add
cmp
jb
je
nop
push
mov
leave
nop
jmp
mov
xlat
ret
push
mov
xchg
ret
add
add
add
add
push
cltd
pusha
clc
repnz
nop
cld
jae
fildl
cli
imul
cli
out
out
mov
push
mov
xchg
ret
loopne
add
xchg
mov
clc
repnz
nop
cld
jae
mov
cmp
add
add
cld
jae
add
into
add
in
leave
nop
jmp
add
jl
add
and
scas
add
clc
repnz
nop
cld
jae
add
fistl
test
repnz
nop
cld
jae
test
add
jg
add
popf
push
clc
repnz
nop
cld
jae
pop
cmpl
cmpl
nop
push
mov
leave
nop
jmp
fnstenv
xchg
add
mov
movsl
clc
repnz
nop
cld
jae
xchg
xchg
add
fistl
fisubrs
nop
push
mov
leave
nop
jmp
jg
fistpl
insl
jg
mov
repnz
nop
cld
jae
add
push
add
movb
repnz
nop
cld
jae
into
add
test
push
mov
leave
nop
jmp
pop
xchg
jg
roll
cmp
daa
addl
cmp
ret
pop
add
lea
push
mov
xchg
ret
add
add
jg
call
clc
repnz
nop
cld
jae
add
cmp
push
add
movsl
add
clc
repnz
nop
cld
jae
xor
insl
add
add
sar
repnz
nop
cld
jae
add
jmp
mov
cli
lock
movsb
xor
add
add
mov
and
nop
cld
jae
jl
xchg
mov
movsb
imul
clc
repnz
nop
cld
jae
add
adc
test
loopne
loope
subl
mov
leave
nop
jmp
pop
push
cs
push
clc
repnz
nop
cld
jae
and
jge
add
mov
nop
nop
cld
jae
xchg
add
add
adc
repnz
nop
cld
jae
mov
lcall
nop
nop
cld
jae
add
add
add
add
mov
mov
jecxz
repnz
nop
cld
jae
sub
fsin
push
fwait
push
mov
xchg
ret
add
arpl
pop
add
clc
repnz
nop
cld
jae
add
add
flds
ret
lea
nop
push
mov
leave
nop
jmp
insb
add
xchg
add
in
je
clc
repnz
nop
cld
jae
add
add
mov
nop
push
mov
leave
nop
jmp
add
imul
nop
cld
jae
insb
add
add
add
add
inc
xchg
mov
nop
push
mov
leave
nop
jmp
add
jmp
jl
add
add
and
add
flds
sbb
pusha
clc
repnz
nop
cld
jae
xor
add
xchg
push
and
and
test
xchg
ret
add
add
insb
loop
psllq
jae
add
lcall
addr16
clc
repnz
nop
cld
jae
jge
add
test
add
push
mov
xchg
ret
mov
add
add
lea
clc
repnz
nop
cld
jae
add
add
nop
push
mov
leave
nop
jmp
add
stc
add
clc
repnz
nop
cld
jae
adc
add
mov
nop
push
mov
leave
nop
jmp
add
pop
add
aad
rclb
nop
jmp
pop
insl
add
jg
fld1
clc
repnz
nop
cld
jae
add
in
pop
push
push
mov
xchg
ret
add
jge
add
cmp
and
rclb
jmp
add
insb
mov
popf
fld1
clc
repnz
nop
cld
jae
add
add
pop
add
movsl
ret
clc
repnz
nop
cld
jae
lcall
pop
imul
cmp
repnz
nop
cld
jae
add
add
test
enter
aaa
pop
push
mov
xchg
ret
add
add
xchg
add
clc
repnz
nop
cld
jae
loopne
insb
pop
add
add
arpl
imul
cmp
ret
xchg
add
cmp
addr16
clc
repnz
nop
cld
jae
add
push
nop
push
mov
leave
nop
jmp
add
xor
push
insl
cmp
insb
clc
push
leave
xor
clc
repnz
nop
cld
jae
stos
movsb
jge
add
loopne
mov
clc
repnz
nop
cld
jae
flds
add
das
mov
clc
repnz
nop
cld
jae
add
mov
jge
push
mov
pop
push
add
clc
repnz
nop
cld
jae
push
movsb
add
pusha
sar
inc
and
repnz
nop
cld
jae
pop
insb
pop
add
xchg
fucomp
out
add
nop
push
mov
leave
nop
jmp
add
mov
xchg
mov
nop
nop
cld
jae
add
xchg
pop
add
in
cmp
repnz
nop
cld
jae
cmpsl
and
js
arpl
push
xor
nop
push
mov
leave
nop
jmp
add
arpl
add
mov
repz
xchg
ret
add
xchg
add
add
in
clc
repnz
nop
cld
jae
add
add
cs
jmp
inc
jne
add
jge
in
push
fcmovnu
xchg
ljmp
add
clc
repnz
nop
cld
jae
jge
add
repz
mov
xchg
ret
xor
add
add
fimuls
rolb
movzwl
clc
repnz
nop
cld
jae
add
pop
nop
push
mov
leave
nop
jmp
add
insb
arpl
pop
add
leave
push
push
mov
xchg
ret
pop
addl
add
mov
or
repnz
nop
cld
jae
add
cli
and
sub
pop
and
repnz
nop
cld
jae
pop
mov
xchg
cmp
repnz
nop
cld
jae
pop
add
jg
add
rcll
nop
nop
cld
jae
add
add
add
add
pop
not
push
mov
xchg
ret
les
add
mov
clc
repnz
nop
cld
jae
loopne
add
add
fistpl
clc
repnz
nop
cld
jae
add
mov
add
nop
jmp
lcall
mov
pop
clc
repnz
nop
cld
jae
loop
flds
add
add
add
push
mov
xchg
ret
cmpsl
add
pop
imul
and
mov
leave
nop
jmp
add
cmp
loopne
out
mov
add
push
adc
add
add
sub
add
movsl
jne
clc
repnz
nop
cld
jae
add
sub
fld1
push
mov
xchg
ret
fistpl
push
jnp
and
clc
repnz
nop
cld
jae
add
cli
iret
mov
clc
repnz
nop
cld
jae
fstpt
aas
pushl
clc
repnz
nop
cld
jae
add
pushf
sbb
jae
add
roll
arpl
add
push
mov
xchg
ret
add
push
add
pop
vpsubsw
clc
repnz
nop
cld
jae
fstps
loopne
add
fld1
clc
repnz
nop
cld
jae
add
xchg
add
xchg
mov
xor
push
mov
xchg
ret
movsb
xchg
movsb
xchg
add
fadd
add
clc
repnz
nop
cld
jae
cmpl
pop
aad
sar
repnz
nop
cld
jae
add
add
sub
add
repnz
nop
cld
jae
add
pop
arpl
jmp
clc
repnz
nop
cld
jae
cli
pop
jg
jge
inc
test
nop
push
mov
leave
nop
jmp
add
push
rcll
outsb
inc
add
add
add
cmp
andb
pusha
inc
add
pop
push
adc
xor
outsb
outsb
pop
mov
clc
repnz
nop
cld
jae
add
flds
repnz
nop
cld
jae
arpl
add
pop
fldenv
xchg
jle
pop
nop
push
mov
leave
nop
jmp
xchg
add
pop
mov
cmpsl
mov
push
mov
xchg
ret
cmp
add
xchg
nop
nop
cld
jae
addl
add
add
sbb
jne
push
mov
xchg
ret
mov
add
add
add
dec
sub
repnz
nop
cld
jae
cs
add
orl
dec
sbb
add
mov
add
movsb
push
mov
xchg
ret
add
movsb
jge
fistpl
clc
repnz
nop
cld
jae
add
arpl
add
sub
nop
nop
cld
jae
add
add
add
mov
mov
repnz
nop
cld
jae
push
add
mov
nop
push
mov
leave
nop
jmp
mov
sub
clc
repnz
nop
cld
jae
add
and
loop
lcall
inc
add
add
add
add
cmp
repnz
nop
cld
jae
pushf
push
add
add
cmp
nop
nop
cld
jae
movsb
insb
cmpsb
add
pop
cmp
mov
repnz
nop
cld
jae
insb
pop
cmpsl
add
mov
add
repnz
nop
cld
jae
pop
mov
lea
mov
xchg
ret
mov
add
fstpt
cs
push
xor
pusha
loopne
fistpl
clc
repnz
nop
cld
jae
add
in
pop
push
add
add
push
clc
repnz
nop
cld
jae
add
add
add
add
sbb
dec
clc
repnz
nop
cld
jae
lcall
add
mov
test
xchg
ret
test
pop
push
les
mov
xchg
ret
add
addl
add
xchg
nop
jmp
xchg
add
nop
nop
cld
jae
cli
push
add
add
cs
push
clc
repnz
nop
cld
jae
add
adc
shrb
mov
nop
push
mov
leave
nop
jmp
mov
shll
cmp
push
mov
leave
nop
jmp
add
add
and
repnz
clc
repnz
nop
cld
jae
add
pusha
jne
clc
repnz
nop
cld
jae
adcl
mov
nop
cld
jae
add
add
je
mov
nop
push
mov
leave
nop
jmp
cli
add
add
add
ror
rcrb
repnz
nop
cld
jae
into
add
loop
add
mov
clc
repnz
nop
cld
jae
fsts
flds
jg
xchg
popa
push
push
mov
xchg
ret
add
add
mov
mov
push
mov
xchg
ret
add
add
push
clc
repnz
nop
cld
jae
lcall
cmp
arpl
jmp
nop
cld
jae
lcall
jmp
cmp
add
add
orl
leave
nop
jmp
les
into
iret
mov
push
mov
xchg
ret
add
xchg
add
mov
leave
nop
jmp
jg
xchg
and
roll
mov
clc
repnz
nop
cld
jae
roll
sub
addb
jp
clc
repnz
nop
cld
jae
in
add
mov
and
nop
push
mov
leave
nop
jmp
lcall
pusha
pop
mov
nop
push
mov
leave
nop
jmp
add
lret
imul
clc
repnz
nop
cld
jae
add
adc
idiv
repnz
nop
cld
jae
add
add
arpl
cmp
jg
nop
push
mov
leave
nop
jmp
test
cli
mov
clc
repnz
nop
cld
jae
add
flds
push
arpl
out
clc
repnz
nop
cld
jae
cli
add
mov
clc
repnz
nop
cld
jae
lcall
push
mov
and
popa
mov
roll
add
dec
push
push
clc
repnz
nop
cld
jae
add
pop
add
int3
and
jo
add
clc
repnz
nop
cld
jae
cli
add
push
mov
xchg
ret
cmp
lcall
clc
repnz
nop
cld
jae
xchg
add
into
in
gs
clc
repnz
nop
cld
jae
lcall
repnz
nop
cld
jae
add
add
and
in
pop
push
clc
repnz
nop
cld
jae
mov
adc
cli
and
add
clc
repnz
nop
cld
jae
add
andb
cmp
inc
pusha
pop
push
push
inc
xchg
clc
repnz
nop
cld
jae
xor
add
movsb
push
cmpsb
lahf
call
clc
repnz
nop
cld
jae
sub
stos
clc
repnz
nop
cld
jae
loop
add
pop
add
insl
cs
add
mov
push
mov
xchg
ret
add
and
cmp
clc
repnz
nop
cld
jae
in
insl
add
pop
add
push
mov
xchg
ret
cmpsb
sub
add
add
je
clc
repnz
nop
cld
jae
add
pop
ret
pushf
fildl
pop
add
add
subl
cmpl
or
repnz
nop
cld
jae
add
add
add
icebp
popl
xchg
ret
cmpsl
push
arpl
add
pop
xor
fld1
clc
repnz
nop
cld
jae
mov
les
enter
clc
repnz
nop
cld
jae
and
jg,pn
je
dec
loop
mov
mov
clc
repnz
nop
cld
jae
add
add
add
shl
mov
clc
repnz
nop
cld
jae
test
pop
js
and
clc
repnz
nop
cld
jae
sub
push
add
pop
cmpsb
ja
stos
nop
push
mov
leave
nop
jmp
add
add
add
adc
call
inc
add
add
movsb
add
pop
mov
je
clc
repnz
nop
cld
jae
add
insl
xchg
mov
clc
repnz
nop
cld
jae
arpl
xchg
flds
add
push
push
nop
push
mov
leave
nop
jmp
add
arpl
cmp
adc
add
nop
push
mov
leave
nop
jmp
add
jl
mov
push
popa
subl
push
mov
xchg
ret
lcall
dec
push
mov
xchg
ret
add
pop
add
adc
repnz
nop
cld
jae
add
cmpsb
adc
sub
nop
jmp
add
arpl
inc
push
add
add
repnz
nop
cld
jae
cli
add
sub
rorb
repnz
nop
cld
jae
jg
add
mov
movsb
clc
repnz
nop
cld
jae
add
cmpsl
add
clc
repnz
nop
cld
jae
imul
imul
mov
xchg
ret
and
fistl
fistpl
pusha
pusha
daa
push
nop
push
mov
leave
nop
jmp
cli
add
fnstenv
mov
clc
repnz
nop
cld
jae
push
arpl
cmpsb
in
inc
and
repnz
nop
cld
jae
push
imul
lcall
clc
repnz
nop
cld
jae
add
xchg
jge
cli
rclb
add
repnz
nop
cld
jae
add
add
xchg
pusha
popf
jmp
imul
xchg
arpl
loopne
add
jge
add
mov
xchg
ret
cmp
add
fwait
push
mov
xchg
ret
cmpsb
add
add
mov
nop
push
mov
leave
nop
jmp
js
xchg
jl
insb
add
mov
xchg
ret
add
add
and
nop
push
mov
leave
nop
jmp
push
add
cli
add
out
lret
cmpl
mov
leave
nop
jmp
add
sub
clc
repnz
nop
cld
jae
add
add
dec
xor
clc
repnz
nop
cld
jae
sub
add
sub
push
mov
leave
nop
jmp
add
xchg
add
js
mov
clc
repnz
nop
cld
jae
add
arpl
xchg
xchg
cs
nop
push
mov
leave
nop
jmp
add
stos
cs
cmp
add
push
mov
leave
nop
jmp
sub
rorl
repnz
nop
cld
jae
add
cmp
xor
nop
push
mov
leave
nop
jmp
add
les
dec
mov
clc
repnz
nop
cld
jae
jg
add
nop
nop
cld
jae
add
jg
insb
add
in
inc
fs
nop
push
mov
leave
nop
jmp
mov
sub
pop
push
mov
xchg
ret
add
add
nop
nop
cld
jae
jg
cli
addl
add
mov
push
mov
xchg
ret
add
add
and
sar
and
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
mov
add
aad
sti
clc
repnz
nop
cld
jae
insb
xchg
add
push
add
clc
loope
push
mov
xchg
ret
cli
cli
cs
pop
clc
addb
mov
clc
repnz
nop
cld
jae
add
cmpsl
add
add
fisttps
mov
xchg
ret
arpl
loopne
mov
add
add
clc
repnz
nop
cld
jae
jg
xchg
pop
xchg
into
add
mov
repnz
nop
cld
jae
and
inc
jb
push
clc
repnz
nop
cld
jae
xchg
add
arpl
add
mov
ja
clc
repnz
nop
cld
jae
add
xor
rolb
sub
add
xchg
fwait
clc
repnz
nop
cld
jae
mov
test
add
add
ja
js
nop
push
mov
leave
nop
jmp
fldcw
mov
push
push
mov
xchg
ret
add
add
add
nop
push
mov
leave
nop
jmp
mov
insb
add
mov
clc
repnz
nop
cld
jae
loopne
add
mov
xchg
ret
flds
add
push
add
cli
xchg
inc
add
pop
movsb
in
andl
push
add
call
mov
leave
nop
jmp
mov
adc
jmp
add
add
pop
add
add
add
into
cs
mov
nop
push
mov
leave
nop
jmp
add
repz
nop
push
mov
leave
nop
jmp
fstpt
push
mov
xchg
ret
jl
add
add
jg
jae
sbb
clc
repnz
nop
cld
jae
pop
pop
stos
test
push
mov
xchg
ret
push
flds
xchg
add
add
je
jg
insb
inc
jb
clc
repnz
nop
cld
jae
add
test
push
push
mov
xchg
ret
insl
pop
cmpsl
add
mov
test
nop
nop
cld
jae
add
add
div
nop
push
mov
leave
nop
jmp
push
mov
add
mov
clc
repnz
nop
cld
jae
add
pop
arpl
mov
xchg
ret
imul
add
test
add
les
mov
xchg
ret
add
pop
xor
rolb
clc
repnz
nop
cld
jae
cmp
inc
cmpb
nop
push
mov
leave
nop
jmp
add
add
xchg
xchg
xchg
cli
sub
nop
nop
cld
jae
insl
and
cli
jge
push
mov
xchg
ret
pop
add
arpl
imul
add
add
pop
add
jg
add
push
push
mov
xchg
ret
add
pushf
add
add
imull
clc
repnz
nop
cld
jae
fildl
and
pop
push
xor
clc
repnz
nop
cld
jae
add
arpl
add
daa
fld1
clc
repnz
nop
cld
jae
cs
loop
add
pop
push
cmp
nop
push
mov
leave
nop
jmp
add
xchg
push
mov
cmpl
mov
leave
nop
jmp
pop
arpl
inc
aaa
mov
clc
repnz
nop
cld
jae
and
jb
in
mov
nop
push
mov
leave
nop
jmp
add
insb
in
mov
call
add
mov
mov
clc
repnz
nop
cld
jae
add
pop
jmp
mov
add
loopne
add
add
pushf
insl
add
imul
clc
repnz
nop
cld
jae
add
mov
pusha
lahf
je
clc
repnz
nop
cld
jae
xchg
add
mov
clc
repnz
nop
cld
jae
loop
loopne
jl,pn
pop
mov
clc
repnz
nop
cld
jae
xor
add
loopne
orl
jmp
add
loop
add
fistpl
nop
push
mov
leave
nop
jmp
lcall
push
shlb
jmp
nop
cld
jae
mov
add
push
mov
leave
nop
jmp
add
adc
jne
clc
repnz
nop
cld
jae
insl
addl
mov
clc
repnz
nop
cld
jae
add
xchg
add
fistpl
clc
repnz
nop
cld
jae
add
add
mov
cmp
repnz
nop
cld
jae
add
adc
push
mov
leave
nop
jmp
xchg
add
movsb
cmp
push
mov
xchg
ret
cli
fstpt
xor
add
data16
mov
clc
repnz
nop
cld
jae
imul
push
mov
xchg
ret
mov
add
add
pop
add
pop
insb
insb
jge
call
inc
add
add
insl
mov
clc
repnz
nop
cld
jae
add
jg
add
push
push
mov
xchg
ret
add
cmp
outsl
add
clc
repnz
nop
cld
jae
roll
add
mov
stos
add
push
mov
xchg
ret
adc
add
xor
add
clc
repnz
nop
cld
jae
add
lcall
pusha
addb
cmp
ret
adc
add
fs
push
mov
xchg
ret
add
add
loopne
and
mov
xchg
ret
cli
add
jg
mov
movzwl
clc
repnz
nop
cld
jae
fistpl
roll
mov
xchg
ret
add
pop
add
add
push
push
push
mov
xchg
ret
add
stos
xchg
add
add
cmpsl
shl
nop
push
mov
leave
nop
jmp
add
or
test
clc
repnz
nop
cld
jae
add
arpl
mov
repnz
nop
cld
jae
add
js
pop
add
mov
clc
repnz
nop
cld
jae
stos
add
flds
js
mov
push
mov
xchg
ret
adc
lcall
clc
repnz
nop
cld
jae
sub
stos
dec
in
and
shlb
inc
and
repnz
nop
cld
jae
arpl
mov
nop
push
mov
leave
nop
jmp
add
add
mov
nop
push
mov
leave
nop
jmp
in
add
add
movsb
add
mov
leave
nop
jmp
add
cli
xor
arpl
js
add
mov
cmp
jg
jne
clc
repnz
nop
cld
jae
fldcw
repnz
nop
cld
jae
xor
add
test
cmp
repnz
nop
cld
jae
and
mov
insl
lss
clc
repnz
nop
cld
jae
add
fwait
clc
repnz
nop
cld
jae
xchg
add
add
add
lea
clc
repnz
nop
cld
jae
sub
xchg
add
clc
repnz
nop
cld
jae
add
stos
test
add
push
mov
xchg
ret
add
add
add
sub
pusha
rclb
nop
nop
cld
jae
add
insl
test
add
sub
mov
xchg
ret
add
add
add
scas
loopne
and
push
mov
xchg
ret
xor
add
sub
mov
xchg
ret
cli
imul
add
pop
clc
repnz
nop
cld
jae
mov
add
add
add
inc
pusha
out
mov
dec
insb
or
pause
push
mov
leave
nop
jmp
add
stos
pop
adc
nop
push
mov
leave
nop
jmp
push
fsts
add
sbb
shl
dec
incl
ljmp
ret
sub
add
clc
fs
add
clc
repnz
nop
cld
jae
add
imul
mov
adc
repnz
nop
cld
jae
jg
add
xchg
cmc
push
clc
repnz
nop
cld
jae
add
jl
fstps
add
clc
repnz
nop
cld
jae
push
arpl
flds
jg
add
clc
repnz
nop
cld
jae
into
sub
add
jge
clc
repnz
nop
cld
jae
sub
add
xchg
lds
repnz
nop
cld
jae
arpl
add
adc
and
push
push
clc
repnz
nop
cld
jae
add
pop
xor
and
dec
cmp
nop
jmp
add
xchg
add
pop
nop
hlt
mov
push
mov
xchg
ret
add
pop
adc
clc
repnz
nop
cld
jae
add
and
add
add
repnz
nop
cld
jae
add
fldenv
andb
sar
nop
nop
cld
jae
test
add
inc
inc
in
aad
mov
sub
xchg
pop
inc
add
pop
pop
add
add
mov
and
movb
mov
leave
nop
jmp
xor
or
popl
clc
repnz
nop
cld
jae
push
cmpsb
mov
add
clc
repnz
nop
cld
jae
xchg
js
dec
popa
clc
repnz
nop
cld
jae
add
cli
xchg
add
and
push
mov
xchg
ret
add
pushf
jge
adc
clc
repnz
nop
cld
jae
cmp
fwait
clc
repnz
nop
cld
jae
les
xchg
add
mov
leave
nop
jmp
push
adc
cmpsl
adc
nop
nop
cld
jae
xor
fcmovnu
xchg
add
add
lcall
cld
jae
mov
lcall
and
nop
push
mov
leave
nop
jmp
js
add
pop
fwait
push
mov
xchg
ret
cmpsl
add
xchg
push
add
mov
shlb
add
call
inc
add
cmp
add
int3
test
push
mov
xchg
ret
xchg
add
add
cli
cs
inc
pusha
popf
pushl
push
mov
xchg
ret
add
push
xchg
adc
dec
nop
push
mov
leave
nop
jmp
cmpsl
add
add
les
add
pusha
mov
add
repnz
nop
cld
jae
pop
add
add
stos
fisttps
mov
add
repnz
nop
cld
jae
push
add
add
nop
push
mov
leave
nop
jmp
imul
mov
clc
repnz
nop
cld
jae
add
add
bound
dec
push
clc
repnz
nop
cld
jae
add
cs
add
and
enter
in
leave
nop
jmp
add
addl
and
and
clc
repnz
nop
cld
jae
add
and
add
jg
clc
repnz
nop
cld
jae
add
jl
add
clc
xor
nop
nop
cld
jae
pop
add
lea
clc
repnz
nop
cld
jae
add
cli
add
imul
mov
call
xchg
pushf
add
pushf
cmpsl
push
push
push
mov
xchg
ret
cli
adc
add
cmp
clc
repnz
nop
cld
jae
insl
xchg
push
in
pop
add
clc
repnz
nop
cld
jae
jge
push
fstps
das
je
clc
repnz
nop
cld
jae
add
nop
push
mov
leave
nop
jmp
add
mov
fistl
clc
repnz
nop
cld
jae
pop
and
rcll
and
mov
xchg
ret
lcall
adc
xor
cmpsl
xor
clc
repnz
nop
cld
jae
push
cmpsb
xchg
mov
roll
add
clc
repnz
nop
cld
jae
add
xchg
xchg
jmp
add
add
add
js
flds
push
call
mov
xchg
ret
xor
add
flds
loopne
scas
rolb
mov
clc
repnz
nop
cld
jae
movsb
loop
push
mov
inc
addl
add
adc
mov
test
mov
mov
clc
repnz
nop
cld
jae
add
push
add
mov
seto
in
leave
nop
jmp
js
push
loopne
pop
ret
pop
push
mov
xchg
ret
xchg
pushf
loopne
push
add
or
repnz
nop
cld
jae
add
test
add
push
pop
push
push
mov
xchg
ret
test
pop
add
shlb
in
js
add
adc
test
pop
push
add
clc
repnz
nop
cld
jae
cmpsb
add
add
xchg
push
inc
and
fdivr
repnz
nop
cld
jae
add
leave
jne
nop
push
mov
leave
nop
jmp
add
add
pop
push
mov
xchg
ret
cmpsl
add
fnstcw
jne
nop
push
mov
leave
nop
jmp
pop
add
push
clc
repnz
nop
cld
jae
jg
add
insb
add
mov
xlat
nop
push
mov
leave
nop
jmp
jg
test
add
mov
clc
repnz
nop
cld
jae
cli
lcall
jmp
clc
repnz
nop
cld
jae
flds
movsb
add
psubsb
icebp
clc
repnz
nop
cld
jae
add
test
push
clc
repnz
nop
cld
jae
xchg
arpl
add
add
fisttps
addr16
add
add
jno
add
nop
jmp
into
sub
sub
loopne
add
shll
nop
nop
cld
jae
add
add
cli
push
nop
push
mov
leave
nop
jmp
add
add
mov
test
lret
clc
repnz
nop
cld
jae
cli
js
dec
push
push
mov
xchg
ret
cmpsl
xchg
xchg
add
inc
pop
clc
repnz
nop
cld
jae
mov
mov
pop
in
xbegin
jae
add
add
sub
mov
xor
nop
push
mov
leave
nop
jmp
add
cmpsl
test
add
loope
roll
repnz
nop
cld
jae
add
add
test
icebp
jmp
test
add
sub
add
add
mov
xchg
ret
add
push
add
mov
push
sbbl
mov
clc
repnz
nop
cld
jae
add
add
or
push
add
repnz
nop
cld
jae
insl
add
xchg
js
pop
push
mov
xchg
ret
imul
cmpsl
add
insl
jae
test
idiv
call
nop
jmp
pop
add
push
mov
leave
nop
jmp
add
insb
insb
and
add
push
test
nop
push
mov
leave
nop
jmp
jge
arpl
jl
add
add
clc
repnz
nop
cld
jae
add
add
add
cmpsl
push
clc
repnz
nop
cld
jae
add
in
xor
push
nop
push
mov
leave
nop
jmp
add
push
add
mov
test
push
mov
leave
nop
jmp
add
xchg
mov
rolb
adc
push
mov
leave
nop
jmp
xor
mov
push
mov
leave
nop
jmp
add
fildl
mov
fildl
rolb
and
add
add
xchg
add
pop
push
mov
xchg
ret
push
add
add
xabort
nop
nop
cld
jae
pushf
add
add
pop
and
push
mov
xchg
ret
fildl
add
add
jge
pop
nop
push
mov
leave
nop
jmp
arpl
add
cmpsl
push
sbbl
rolb
rorl
repnz
nop
cld
jae
jge
and
pop
clc
repnz
nop
cld
jae
push
add
xchg
adc
test
inc
push
dec
clc
repnz
nop
cld
jae
push
jge
add
and
repnz
nop
cld
jae
add
add
jg
insl
push
clc
repnz
nop
cld
jae
flds
imul
and
loopne
xor
pusha
mov
push
mov
xchg
ret
imul
add
mov
clc
repnz
nop
cld
jae
add
test
pop
or
repnz
nop
cld
jae
cmp
test
inc
pusha
xor
clc
repnz
nop
cld
jae
add
adc
repnz
nop
cld
jae
mov
add
flds
sub
push
add
mov
aaa
add
jno
sbb
pop
pop
les
mov
pusha
and
andb
mov
andb
aam
leave
enter
scas
pop
aas
dec
dec
imul
movsb
and
lock
mov
inc
mov
in
repnz
aad
mov
pop
or
and
call
or
pusha
pop
xchg
mov
inc
jg
jns
and
dec
dec
cmp
pop
cmpsb
mov
mov
pusha
stos
imul
add
pop
dec
loop
lods
pusha
loopne
mull
add
fisttpl
or
shr
stc
pop
aad
push
cmp
cmpsb
inc
pusha
adc
pop
or
mov
insl
addl
mov
inc
mov
push
pusha
inc
cmp
shll
je
cmp
insb
into
push
jl
or
ja
test
sbbb
mov
rorl
push
xchg
cmp
movb
arpl
int
push
addr16
pop
or
add
dec
mov
popa
jne
fsts
jmp
outsb
ret
addb
mov
xor
mov
mov
or
and
sub
or
inc
mov
lds
es
loopne
addb
mov
hlt
sub
inc
loope
lcall
add
pop
sbbl
inc
test
leave
or
out
cmp
jecxz
or
lahf
adc
lahf
dec
sbb
mov
mov
or
clc
imulb
mov
mov
mov
mov
les
or
and
and
push
js
sub
in
stos
and
mov
inc
jbe
gs
inc
jecxz
dec
push
add
and
rol
sbb
adc
sahf
outsl
flds
ja
std
jns
xor
gs
lret
inc
aam
jg
xchg
ret
in
notb
insl
mov
dec
cli
imul
lret
and
les
hlt
mov
adc
and
mov
in
mov
data16
mov
and
out
aaa
cli
loopne,pn
mov
shl
pusha
add
cli
dec
leave
arpl
clc
mov
mov
out
pop
jno
vmread
pop
xchg
fs
loopne
leave
adc
dec
std
inc
xor
andb
stc
jmp
mov
inc
mov
pusha
loopne
and
cmp
or
movsb
pusha
add
jmp
rcrb
rorb
xchg
and
int3
inc
movsl
fwait
dec
out
imul
jae
inc
push
pop
test
mov
arpl
mov
push
inc
sbbb
rol
add
pop
push
or
out
mov
jne
xor
outsb
out
push
push
xchg
cmp
dec
mov
dec
mov
inc
add
test
cmpb
inc
add
and
pushf
std
pushf
push
fdivs
sahf
stos
and
jns
lret
pop
frstor
test
call
mov
arpl
idivl
rolb
das
into
mov
xor
insb
push
mov
mov
inc
aaa
popa
nop
mov
jnp
jl
xor
pop
movsl
mov
add
mov
xchg
and
mov
add
out
loopne
not
add
lcall
xchg
xchg
cmp
int3
stos
sub
and
loopne
xor
fbld
rol
test
inc
ror
adc
inc
and
scas
rol
fdivrl
addb
imul
and
je
pop
lret
rorb
push
rol
addb
loope
push
movsl
sahf
stos
jecxz
sbb
in
imul
or
andb
pop
fdivrs
shlb
out
loopne
mov
mov
shlb
inc
jp
pop
adc
sub
lcall
sub
add
xor
dec
pop
push
sbb
cmp
addb
push
jno
jae
mov
shll
loope
mov
mov
nop
xchg
add
cmpb
sub
loopne
fadd
nop
cltd
je
out
insb
mov
adcb
fmuls
mov
fistpll
push
jge
sub
pusha
out
pop
mov
orl
iret
and
shlb
test
jo
adc
sti
inc
push
xchg
mov
sbb
mov
sbb
and
faddl
xchg
inc
setge
add
add
pusha
add
and
inc
pop
je
pusha
rol
or
mov
mov
bound
lds
xchg
ss
dec
int3
popa
lret
aam
adc
and
les
mov
in
jb
addr16
lahf
cmp
and
loopne
adc
mov
hlt
pop
jne
in
fwait
aad
fistps
in
lret
out
in
mov
jmp
pop
movsb
add
into
xchg
jge
lods
shl
and
out
into
negl
aas
cltd
iret
jecxz
cwtl
dec
dec
adc
xchg
mov
out
movsl
popf
jbe
push
xor
mov
ficoms
mov
dec
inc
and
adc
int
shlb
push
push
fmul
pop
and
sbb
lcall
outsl
mov
jo
pusha
inc
jmp
psrlw
sub
pusha
xor
and
test
mov
pop
int3
jne
es
xor
adc
mov
addr16
push
xor
or
mov
out
jmp
add
testb
mov
and
test
mov
dec
iret
icebp
xor
dec
aam
xchg
xchg
orb
xchg
lods
and
xchg
lods
mov
idiv
pusha
shlb
andb
in
add
stos
fs
inc
adc
in
lea
loop
insb
mov
sbb
sub
add
cmp
add
aad
sub
add
and
add
sarb
dec
enter
jl
mov
pop
sub
sbb
add
loopne
jp
push
mov
or
mov
jae
iret
repnz
adc
or
xor
imul
into
add
xor
add
imul
xchg
ljmp
add
inc
pop
faddl
loopne
sub
ja
xchg
insl
xchg
ret
xchg
jns
call
daa
dec
jo
cmc
push
aam
xchg
mov
andb
repz
leave
js
and
add
add
and
sahf
insb
pop
mov
dec
mov
and
out
scas
andb
pop
aad
push
pop
xor
fnsave
pusha
pusha
sbb
or
test
testl
arpl
fs
add
mov
inc
sarb
incl
cmp
addb
mov
jne
aad
inc
add
adc
cli
ja
lea
repnz
lahf
mov
lret
int3
inc
add
sar
pushf
pop
hlt
lcall
popf
lret
aas
jb
add
jmp
add
lcall
jo
cmpsl
lret
hlt
xchg
cld
loop
addb
repz
mov
adc
js
sbb
enter
jno
jno
push
insb
out
inc
lret
lock
push
inc
push
sub
mov
and
jne
add
xchg
mov
xor
mov
loop
jl
mov
iret
mov
sbb
mov
and
test
sti
daa
icebp
inc
xchg
hlt
xor
dec
jb
mov
jo
sarl
jmp
adc
fbstp
or
fdivrp
arpl
aad
shll
gs
addb
pop
pop
inc
imul
lcall
xor
test
loopne
and
cwtl
jo
inc
lret
fimull
fs
dec
in
andb
jge
xchg
inc
bound
scas
lods
and
cmp
cmp
int3
mov
jp
and
inc
popa
push
dec
lcall
sbb
mov
bound
sti
iret
jp
sub
dec
lahf
insb
imul
and
xor
andb
inc
movsl
jge
mov
mov
cmp
pop
in
pop
xchg
fdivl
js
mov
dec
pop
shlb
cmc
shll
jnp
mov
xchg
stc
into
dec
incl
cmpsl
jge
scas
and
and
and
pop
pusha
sbb
bswap
pop
or
and
add
push
adc
mov
mov
lcall
jo
push
sti
repnz
shlb
das
xor
shll
shrb
sub
mov
inc
pushf
rorb
push
xchg
bound
fisubrl
andb
loopne
cld
jnp
test
mov
mov
inc
repz
jmp
mov
shrb
and
jl
dec
movsl
imul
push
out
dec
fsts
mov
in
je
inc
adc
push
add
mov
pop
lret
insl
xor
out
cmp
test
rcl
mov
iret
jo
shrb
or
rorb
pop
je
mov
aas
mov
shlb
adc
cwtl
xchg
inc
bnd
dec
jmp
push
add
mov
imul
mov
idivb
fidivrs
add
into
into
cmp
ss
sub
movsb
shlb
xchg
inc
icebp
insb
icebp
scas
shlb
xchg
and
and
aas
andb
test
push
out
ljmp
andb
aaa
jl
push
inc
add
repnz
inc
mov
fnstsw
lahf
in
pop
or
add
cmp
addb
xchg
lods
loopne
lcall
hlt
popf
push
pop
pop
pusha
push
loopne
or
nop
xchg
negl
mov
add
lods
pusha
add
add
push
stc
cmc
inc
push
or
lock
divl
sbb
fdivl
imulb
sub
divb
ds
stos
ret
dec
dec
mulb
out
mov
loopne
cmp
and
pop
inc
daa
aad
test
inc
mov
out
imul
pop
pop
mov
inc
pusha
movsb
loopne
and
loopne
negl
add
imul
sub
rclb
and
mov
adc
pusha
loopne
fldl
arpl
andb
jp
mov
cmp
lock
lret
adc
jg
test
lret
cmpsb
pusha
mov
gs
sahf
or
lds
adc
adc
sub
ljmp
xor
dec
add
popa
call
ss
xor
or
sbb
and
add
inc
push
fcoml
push
mov
and
or
mov
cmc
sbb
andb
push
lret
dec
fisubrl
aas
aam
mov
dec
or
and
jns
fildl
lods
pusha
rolb
jne
mov
push
sbb
adc
lock
xchg
sti
repz
pop
jno
loopne
dec
inc
pop
lods
push
lds
pusha
add
sub
push
stos
inc
shrb
pop
mov
scas
add
xor
push
das
ljmp
and
pusha
pusha
lcall
gs
rolb
je
xlat
push
aaa
push
jno
mov
add
insl
jae
fdiv
imul
test
inc
cld
mov
jo
sbb
insl
xchg
cmp
sub
add
jmp
mov
push
jl
mov
pop
pop
xor
addb
dec
mov
add
addb
pusha
mov
test
notl
dec
nop
pop
roll
xor
and
xchg
sbb
dec
push
das
and
add
mov
and
sbb
je
dec
std
push
and
jmp
scas
add
mov
js
mov
and
andb
rolb
dec
sub
or
mov
rolb
pusha
dec
mov
cmpb
mov
xor
mov
enter
lret
mov
addr16
test
mov
mov
leave
out
or
and
cld
xor
jecxz
and
xchg
mov
sarl
and
inc
clc
stos
and
jmp
sub
int3
sub
mov
sbb
je
mov
sahf
fistpl
inc
movsb
pusha
pusha
mov
mov
pusha
mov
pop
mov
mov
add
mov
and
insb
sub
dec
fscale
ret
clc
cld
fmul
mov
imul
shrl
fnstenv
push
lds
loopne
mov
pop
out
add
shlb
or
hlt
push
aas
negl
jle
pop
or
aas
cmp
or
inc
or
jno
std
repz
dec
or
shlb
out
sbb
loopne
pop
imul
andb
ja
jmp
aaa
mov
cmc
fwait
jecxz
in
push
pop
mov
cmp
stos
mov
shl
repnz
mov
fdivrl
int
and
cmpb
mov
inc
add
rolb
adc
bound
into
rclb
out
add
jp
inc
mov
mov
and
loopne
adc
repz
loopne
movsb
loopne
movsl
fisubrs
pusha
mov
addb
jo
sub
loopne
rol
js
leave
pminsw
arpl
test
adcb
cmp
mov
mov
and
outsl
test
inc
pusha
test
push
add
mov
loopne
adc
cwtl
es
inc
sub
insb
mov
fsubrs
fwait
push
mov
push
enter
and
rorb
jne
sbb
int
cmp
cmp
jo
pop
mov
cmp
sbb
and
adc
rolb
mov
or
sub
dec
sub
orb
std
lretw
and
xor
mul
jle
incl
adc
pusha
mov
loopne
ljmp
aam
sub
insl
jg
adc
and
pusha
xor
sbb
cwtl
sbb
inc
add
pusha
add
cmp
mov
xrelease
push
fs
ja
das
cmpsb
and
rolb
int
dec
and
push
stos
and
jp
pop
adc
xchg
or
shrb
pop
int3
js
jl
out
dec
stos
rolb
adc
mov
push
loopne
rolb
cli
int3
pop
pop
xlat
pop
mov
pop
inc
roll
mov
andb
jae
or
insl
lahf
shr
inc
adc
mov
je
add
jb
into
jne
xchg
das
addb
push
push
stos
inc
loopne
rorb
inc
out
aas
xlat
inc
call
hlt
jae
mov
aad
divl
loopne
push
bound
jecxz
mov
das
rclb
fistpl
dec
andb
cmp
imul
addr16
and
and
sbb
ljmp
push
frstor
inc
jbe
or
mov
add
jno
cli
push
pop
pop
adc
and
int
sbb
fimuls
mov
push
pop
add
rolb
cmp
inc
pusha
mov
stos
add
dec
in
je
inc
xorb
inc
mov
test
loopne
hlt
xchg
add
aaa
mov
jl
imul
and
mov
xor
lret
ja
pop
mov
ret
push
les
sub
pusha
call
mov
in
ret
mov
inc
xchg
xor
mov
jae
pop
inc
push
leave
fildl
mov
bound
and
sbb
xchg
insb
and
inc
lret
fistps
cmc
shll
mov
sbb
push
push
std
fimuls
or
xchg
add
loopne
inc
loopne
or
and
xlat
jne
inc
adc
shll
gs
fnstenv
repnz
sbb
xor
stc
and
jecxz
loopne
cld
mov
jecxz
adc
loopne
or
gs
fisttpl
movsb
shlb
loop
cmp
rorb
or
sarl
lahf
jbe
lret
loopne
pusha
pusha
sub
shlb
xor
mov
rcll
adc
jb
sbb
addb
inc
dec
cmp
bnd
stc
movsb
andb
pop
repnz
addb
inc
mov
mov
mov
fstpt
or
mov
and
and
rolb
mov
mov
mov
in
inc
addb
adcb
add
loopne
pop
aad
scas
mov
into
and
pusha
pop
mov
xchg
mov
mov
pop
push
add
shlb
in
cld
or
adc
add
fbld
mov
out
xor
add
lds
and
loopne
or
mov
sahf
rolb
andb
leave
adc
mov
jns
sub
and
push
shl
out
sbb
pusha
add
imul
insl
test
pusha
mov
jecxz
and
cmp
ljmp
imul
loopne
and
push
push
cmp
add
mov
and
xchg
inc
aam
iret
jmp
inc
pop
or
xor
xor
xchg
aaa
adc
cmpsl
lret
xor
js
push
mov
xchg
mov
testl
pop
sbb
test
and
xchg
dec
fwait
mov
jecxz
push
push
pop
pop
lea
inc
loopne
loopne
add
les
cmc
cmp
fs
repz
rolb
push
lret
sbb
loopne
pop
xor
pusha
mov
push
adc
cmpsl
leave
aad
lock
faddl
push
ljmp
pusha
rorl
mov
xchg
fistpll
or
and
test
ljmp
mov
push
cmp
dec
lock
cli
jbe
mov
inc
pop
gs
xlat
mov
loopne
mov
nop
fdivrl
and
and
adc
mov
rorb
add
mov
mov
or
sbb
adc
dec
adc
arpl
aam
imull
add
push
mov
sarb
and
mov
lret
imull
out
add
add
fmuls
add
scas
test
inc
sbbb
push
repnz
or
pop
mov
bound
push
add
sbbb
inc
pusha
sti
repnz
xchg
push
inc
and
andb
cwtl
inc
stos
pusha
loopne
pusha
mov
and
sbb
add
mov
addb
jae
xchg
add
adc
cmp
sub
add
cltd
mov
cwtl
push
rolb
ret
cmp
adc
mov
add
sub
mov
enter
inc
fcoml
loopne
mov
inc
loopne
push
mov
adc
aam
imul
out
mov
rolb
inc
add
add
adc
sahf
pop
mov
sub
add
inc
mov
jl
and
inc
mov
pop
pop
dec
xchg
jg
mov
loopne
movsl
pop
and
in
imul
inc
and
dec
add
bound
add
andb
add
repnz
and
and
pop
in
jl
jecxz
or
jo
arpl
mov
and
xor
cmc
movsb
shlb
cmpsl
dec
rcl
in
dec
sub
mov
mov
in
pop
sbb
and
outsl
insb
pop
in
pusha
loopne
ds
out
loopne
and
movsb
pusha
cmpb
dec
jmp
cli
int
cmpsl
mov
addb
jle
sbb
mov
loopne
rolb
stos
jecxz
inc
adc
inc
xor
inc
xchg
sahf
cmpsb
loopne
mov
push
lahf
or
and
stos
push
add
shr
jne
into
add
xorb
shlb
add
clc
mov
and
mov
jmp
shlb
bound
fbld
mov
fstpl
mov
and
rolb
sbb
mov
and
inc
dec
push
popa
sub
mov
cmp
sub
and
mov
mov
adc
dec
js
push
dec
adc
push
sbb
mov
push
frstor
andb
lret
xchg
int
add
aaa
xchg
pop
out
pusha
inc
gs
mov
inc
xor
xlat
fdivs
inc
push
adc
arpl
inc
pusha
andb
lea
or
bound
clc
jnp
add
outsb
mov
xchg
rcll
adc
and
inc
fs
add
pop
lret
stos
pusha
add
xor
stos
push
add
stc
add
xor
push
andb
lock
mov
jne
in
je
add
jns
fnstenv
xor
addr16
test
in
stos
mov
push
inc
std
mov
repz
je
xchg
push
fcomip
jae
in
and
inc
xlat
lret
dec
sti
or
inc
mov
shlb
push
sahf
xor
add
xor
mov
pop
mov
sbb
roll
mov
cwtl
or
int3
or
loopne
popl
push
aaa
out
gs
and
push
shl
test
add
or
sbbb
and
xorb
inc
mov
fmull
out
rol
shl
or
jmp
shlb
sub
loopne
cmp
adc
nop
jmp
leave
stos
mov
shlb
sub
inc
xlat
jb
xchg
mov
andb
mov
mov
push
mov
je
add
mov
loopne,pn
sbb
sub
movsl
lods
sti
bound
addr16
sahf
jl
jecxz
sbb
loop
adc
jbe
cmp
fldl
rcrb
lret
notb
fdivs
loopne
or
push
mov
jle
imul
mov
loop
sahf
fwait
andb
jno
jne
mov
mov
outsl
dec
dec
inc
fwait
cmp
xor
dec
sar
imul
into
adc
jle
fcoms
enter
int
push
repz
mov
pop
pop
dec
test
add
cmp
outsb
mov
inc
xchg
xchg
mov
adc
pop
shlb
popa
jecxz
gs
das
mov
add
add
dec
dec
addb
fcomp
lahf
push
loopne
xchg
or
pop
jge
jmp
rorl
loopne
ljmp
jbe
iret
in
or
or
imul
pop
xchg
ret
add
sarb
movsb
add
outsl
sub
andb
and
arpl
pop
je
andl
outsl
xor
add
shr
shlb
add
pusha
pusha
stos
pusha
mov
xchg
mov
insl
repnz
cmc
pop
or
mov
add
pop
lea
in
xor
and
loopne
rcr
enter
jo
mov
insl
pushf
test
or
sbb
addb
loopne
add
and
inc
dec
aaa
push
pop
std
and
mov
fstl
out
stos
in
in
in
imull
aas
jle
add
pop
or
mov
loopne
ss
mov
dec
mov
add
xor
adc
rolb
jnp
leave
mov
aam
xchg
enter
loopne
rol
test
pusha
pop
mov
fisubl
addb
xchg
loope
rol
loopne
xor
xchg
pop
int
push
negl
insb
push
ficoml
xor
cmc
sub
fidivrs
jae
mov
orb
mov
mov
popf
lds
mov
add
out
mov
fcompl
out
into
adc
mov
adc
pop
jno
scas
and
add
sub
loope
mov
xchg
fdivl
adc
das
pop
andb
mov
and
add
test
in
stc
clc
xchg
cmp
loopne
gs
and
cmpsl
adc
test
imul
xchg
sbb
sub
shr
pop
xchg
push
fistpll
cltd
inc
roll
fdivrs
in
out
iret
adc
es
rolb
fwait
pop
dec
loope
fisttpll
mov
shlb
pusha
lret
or
mov
pusha
orl
and
jbe
and
fcmovb
push
push
aaa
cmp
sbb
mov
pusha
xor
xchg
dec
outsb
mov
inc
mov
shl
jge
bound
jo
aas
and
add
xchg
and
mov
in
xchg
sub
sbb
mov
mov
dec
jle
leave
mov
ds
lock
mov
cwtl
ja
pop
pop
pop
pop
inc
fs
mov
addb
or
in
loopne
or
jb
jbe
idiv
fs
pop
insl
fs
inc
add
mov
dec
or
and
cltd
jno
add
sbb
or
mov
test
orb
inc
insl
loopne
nop
aaa
sbb
call
jecxz
inc
jno
fs
shrb
andb
frstor
loop
and
mov
sub
push
repnz
xor
push
fldcw
and
xchg
push
rolb
sub
and
pusha
into
inc
sbb
and
addb
outsb
rolb
mov
shrb
loopne
ret
jnp
or
loopne
icebp
jo
inc
in
test
loopne
or
mov
stos
dec
dec
lea
or
jp
loopne
scas
loopne
cmovp
mov
out
loopne
xchg
jbe
lret
lret
incl
xor
shl
and
add
in
mov
rcl
shrl
mov
addb
mov
and
shl
movsl
fmul
bound
mov
mov
mov
mov
data16
lahf
outsl
dec
je
in
fld
push
pop
inc
sbb
inc
hlt
fcmovu
pop
jp
xor
and
adc
mov
mov
xorl
imul
insb
or
hlt
movsb
addb
ret
jnp
je
jmp
cmp
inc
and
mov
mov
sbb
andb
push
fldl
inc
jecxz
jns
cmp
add
outsb
sbb
mov
fdivs
and
mov
gs
sbb
cwtl
pop
sub
add
mov
cmpsb
inc
pusha
mov
and
or
shll
je
shl
inc
loopne
filds
loopne
les
loopne
mov
or
sahf
clc
lret
inc
mov
addb
flds
mov
or
pusha
jnp
repz
push
rcll
or
pusha
or
mov
add
gs
shl
pop
mov
popf
jne
shlb
and
aad
add
inc
mov
and
mov
out
and
add
subb
inc
out
ja
lret
adc
lret
aam
xchg
inc
sub
and
loopne
or
lea
ret
orb
icebp
sbb
loope
pop
lea
test
rclb
and
cli
xchg
and
sbb
imul
decb
fsubrs
mov
pusha
loopne
cli
mov
inc
gs
adc
pop
pop
test
shlb
push
and
out
bound
sahf
push
push
mov
fwait
lea
or
and
mov
sub
pushf
sti
add
inc
mov
aas
push
mov
push
sbb
lds
rolb
inc
loopne
inc
mov
mov
mov
and
inc
mov
lea
or
sbbb
jp
mov
mov
rolb
das
lcall
idivb
push
jo
cli
and
push
jg
arpl
and
stos
inc
and
shlb
add
mov
sbb
add
inc
xor
test
lods
hlt
jge
ljmp
ret
push
inc
xchg
fs
jg
and
jnp
loope
jae
movsl
inc
insl
dec
inc
in
jno
mov
mov
pop
repnz
idivl
mov
mov
hlt
movsb
addb
fidivrl
and
jno
cmp
in
rorl
or
pop
push
jle
nopl
and
fists
gs
popa
inc
out
jg
inc
mov
add
cmp
pushf
adc
fmulp
mov
popa
xor
out
rorl
mov
and
addb
dec
or
xchg
cmp
cli
inc
add
loope
sti
daa
and
sbb
mov
inc
testb
inc
add
daa
cpuid
and
loopne
add
aam
fists
inc
and
imul
push
rcl
cmpsb
and
rcrl
enter
pop
repz
fadd
shlb
mov
adc
mov
in
fsubl
gs
sub
rcr
cmp
mov
xlat
bound
jns
jns
and
in
out
bound
insl
xchg
ret
mov
test
mov
mov
shl
pop
ja
adc
fdivs
mov
jbe
sbb
xchg
stos
shl
dec
mov
arpl
cmp
fadds
and
addb
lret
pusha
xchg
fcmovnb
out
sbb
pusha
out
test
shr
addb
addb
adc
je
pusha
pusha
dec
notb
addr16
or
nop
pop
push
and
add
xor
mov
push
xchg
outsb
add
jl
addr16
and
add
orb
jmp
imul
js,pt
jns
xor
gs
outsl
arpl
lock
sbb
push
mov
daa
hlt
or
pop
lret
lds
call
mov
pop
iret
mov
mov
sbb
mov
xchg
xor
shl
pop
mov
nop
sahf
repz
loopne
into
in
cmc
adc
addb
sti
sbb
mov
data16
mov
in
out
lret
mov
add
cmp
pop
shlb
ljmp
negb
scas
and
or
mov
xchg
test
xchg
enter
push
test
scas
rolb
jg
mov
add
cmpb
aas
jg
icebp
mov
cli
mov
pusha
xchg
pusha
lret
mov
subb
or
and
push
stc
dec
test
hlt
push
mov
adc
mov
sbbl
mov
mov
int
ret
out
and
orb
gs
or
and
or
stos
add
xchg
or
jo
push
rolb
into
sub
cmpb
imul
dec
push
cmpsl
addr16
jmpw
sbb
push
inc
loopne
ficomps
addb
dec
ljmp
push
and
mov
dec
mov
imul
outsl
jp
mov
cmp
test
loopne
stc
inc
push
push
pusha
push
roll
and
test
pusha
movsl
push
dec
loopne
pop
add
mov
sbb
jbe
andb
repnz
addb
std
jge
incl
test
mov
fwait
pushf
test
mov
pusha
loopne
jb
int3
mov
and
jb
mov
xor
and
aam
xchg
loopne
out
mov
adc
add
out
enter
pop
mov
mov
pop
add
sub
inc
push
dec
inc
and
pushf
jge
mov
rorb
inc
push
shrb
int3
repnz
mov
icebp
ss
add
inc
test
mov
mov
and
pop
icebp
sbb
jo
mov
mov
repz
cmp
mov
adcl
and
and
jge
mov
out
mov
fwait
mov
xor
imul
jae
fwait
xchg
dec
mov
out
aaa
sub
pusha
cli
and
insb
movsb
and
pop
ficomps
hlt
sarb
rol
leave
push
add
aaa
sub
xor
mov
mov
rcrl
and
adc
push
xchg
sbb
sbb
loopne
xchg
and
addb
lds
sub
lret
pop
mov
and
inc
pop
imul
mov
inc
ja
sahf
loopne
addb
push
in
inc
pop
popa
stc
jb
mov
repz
test
inc
adc
jbe
pusha
and
jecxz
add
rcrl
addb
notl
outsb
mov
add
mov
jg
cwtl
dec
outsl
adc
dec
xchg
xchg
loopne
imull
inc
jmp
inc
pusha
imul
in
mov
das
jmp
and
fs
das
dec
loopne
out
cwtl
inc
clc
mov
pusha
pusha
cmpsl
adc
pop
into
push
stos
and
xchg
push
popf
push
push
rorl
testl
rolb
mov
xor
jo
sub
inc
leave
and
rcrb
mov
add
sbb
and
das
mov
sbb
rclb
in
mov
cmpsl
ljmp
vhaddpd
loopne
sysenter
testb
and
stc
xchg
xor
cmp
push
leave
mov
adc
enter
pop
lods
shlb
mov
imul
xchg
mov
pop
lds
mov
and
and
insl
enter
fwait
stos
lds
inc
pop
and
fcoms
jbe
sbb
ds
daa
or
sbbb
xchg
int3
bound
add
cmovle
into
outsb
adc
loopne
push
decb
out
scas
mov
jmp
adc
mov
repz
out
roll
inc
inc
scas
es
clc
cmc
pop
xorl
mov
dec
pop
xchg
inc
push
push
outsb
push
xchg
jp
cmp
sbb
subb
inc
lods
pop
mov
js
arpl
pusha
pand
sbb
inc
cwtl
cmp
add
mov
pop
jb
movsb
add
cmp
pop
and
and
mov
and
shlb
loopne
lret
xor
xor
add
inc
xchg
sub
loopne
xor
je
inc
jge
sti
sbb
lret
addb
mov
loopne
jnp
sti
call
movsl
mov
imul
imul
pusha
adc
xchg
rorb
shl
mov
idivl
addb
jmp
cmpsb
loopne
and
repz
pop
je
add
rorb
xor
andb
dec
inc
rorl
add
js
pop
sti
pop
leave
addb
pusha
incb
push
lock
dec
das
lret
sub
shlb
bound
xor
lahf
movsb
addb
inc
jb
lods
rolb
cmp
mov
inc
adc
mov
mov
and
call
repz
mov
jo
push
and
jno
and
cmc
cmp
xlat
adc
pop
pop
add
xlat
stc
xchg
leave
add
dec
or
pusha
shrb
pop
movsl
test
loopne
loopne
mov
jle
mov
test
dec
push
jo
ror
sbb
data16
add
pop
mov
mov
aas
or
and
inc
xchg
jnp
adc
and
mov
lock
mov
clc
xchg
pusha
loopne
mov
andb
and
mov
int3
or
scas
addb
xchg
andb
or
mov
and
pop
jne
inc
test
cs
orb
addb
and
std
or
sar
cmpsb
and
sub
add
add
mov
add
jns
cmp
int
jmp
dec
int
and
inc
lock
testb
fldenv
std
cmp
jg
loopne
js
popa
jb
imul
dec
inc
cmp
pop
mov
mov
gs
hlt
push
inc
xor
sbb
lcall
int3
mov
shrb
js
clc
les
push
test
shr
nop
call
out
insb
or
inc
fistpll
adc
loopne,pn
sbb
mov
int3
push
mov
push
push
outsb
push
jmp
daa
and
mov
jle
jb
sbb
mov
dec
add
test
mov
pusha
and
jl
je
push
jnp
jnp
push
loopne
push
repz
jno
and
add
or
rcl
xor
daa
add
rolb
push
test
sub
loopne
mov
sbb
jp
cmp
jg
sbb
jo
dec
sub
call
push
fcmovnu
push
gs
jne
out
mulb
mov
rolb
sub
sub
inc
pusha
test
pusha
push
mov
push
jb
inc
inc
inc
inc
mov
hlt
pop
sbb
mov
rolb
movsb
mov
mov
adc
mov
add
out
pusha
mov
mov
inc
add
popa
sub
es
pusha
xor
shlb
and
rclb
lock
dec
jecxz
adc
stc
add
call
out
lret
hlt
or
or
movsb
mov
and
lcall
imul
pop
sub
add
sbb
shll
test
shlb
adcb
int
adc
adc
sub
mov
andb
loopne
arpl
mov
push
sbb
add
insl
outsl
push
decl
shlb
push
xchg
xor
scas
pusha
loopne
cmc
mov
cltd
loope
jmp
cld
dec
lds
add
loopne
add
add
rorb
pop
das
leave
mov
test
add
out
lea
dec
pop
push
std
lret
mov
add
and
and
cmp
lock
jge
inc
test
mov
mov
and
rolb
stos
inc
add
dec
xor
jnp
or
test
sarb
dec
add
clc
mov
inc
pushf
pop
rolb
mov
or
movb
insb
pop
push
mov
pop
pop
inc
sarb
dec
sub
sbb
ret
inc
jg
mov
sbb
test
sbb
faddp
stos
shl
stos
or
and
cmc
pusha
and
dec
sbb
int
add
mov
or
pusha
sub
movsb
mov
push
jp
inc
outsl
cld
jmp
dec
mov
lret
add
xchg
dec
jg
and
insb
out
add
test
mov
js
and
cmp
push
in
in
mov
and
mov
pusha
mov
popa
cmp
cs
pusha
or
sbb
rolb
adc
loopne
mov
movsl
xchg
and
shrb
mov
xchg
or
adc
rcrl
loopne
mov
jge
add
loopne
test
cmp
das
push
lea
mov
shr
push
sub
mov
push
out
call
rclb
stc
cltd
xchg
fs
add
lahf
push
mov
icebp
xchg
or
cmp
add
inc
pop
jno
inc
sbb
hlt
sbb
add
mov
pusha
aam
push
pusha
inc
fisubl
cwtl
cli
jb
sub
orb
mov
loop
fnstenv
jbe
ja
xchg
outsb
add
sbb
mov
stos
rol
sbb
scas
jg
and
push
sbb
jb
adc
or
or
add
ror
xorl
inc
pop
ds
rolb
xlat
int
inc
push
pop
mov
roll
test
rcl
mov
fdivrl
ret
xchg
arpl
mov
fnstsw
cmp
inc
or
in
cli
iret
jmp
insb
add
mov
inc
mov
fcmovbe
test
adcl
test
mov
inc
gs
shrl
add
gs
popa
mov
or
loopne
and
pusha
xor
lds
mov
jg
mov
jp
mov
enter
mov
popa
imul
and
inc
lcall
int
xchg
movsb
mov
ja
push
add
xchg
push
bound
ds
jle
and
add
sarb
cmp
pop
popf
mov
cmp
pusha
pusha
adc
jo
cmp
inc
push
mov
inc
cwtl
imul
adc
sarb
rol
mov
mov
out
adc
addb
sti
push
jnp
pusha
rcrb
call
xor
mov
cmc
jno
dec
xchg
push
gs
mov
ror
mov
xchg
addl
inc
and
xor
rolb
js
stos
jmp
insb
and
pop
adc
movsb
and
inc
ja
xchg
jbe
cmpsb
pusha
rcrb
or
mov
nop
in
loopne
sub
sbbb
lods
nop
xor
mov
fcompl
or
and
push
mov
cmp
sarl
jl
test
lahf
jle
aaa
popl
call
adc
cmp
add
shl
clc
gs
aaa
hlt
sub
shl
push
jecxz
jns
xor
ret
imul
aam
cmp
rol
ss
jae
stos
loopne
imul
mov
aam
popa
mov
xor
das
out
lret
jbe
es
loopne
mov
sbb
sbb
sub
stos
loopne
push
pop
cmc
and
jge
sahf
insb
push
mov
push
out
rcrb
in
movsl
loop
fisttpl
adc
pop
push
rcl
jle
in
hlt
stos
and
xchg
add
out
xchg
xlat
clc
inc
mov
mov
pop
or
loopne
aad
cmp
push
sub
mov
mov
pop
xor
sub
rol
pop
lea
cmpsl
cmp
rolb
fldenv
sbb
insl
pushf
lret
push
rorb
cmp
adc
mov
mov
add
pop
mov
and
mov
jl
cmp
aam
sbb
pop
jb
loopne
add
loopne
jp
or
pusha
and
xor
mov
dec
or
add
jae
jmp
mov
push
addb
sbb
jl
scas
pusha
inc
jnp
and
sti
fldcw
popa
cmpsb
inc
sbbb
cmpsl
jle
add
mov
je
add
cmp
cmp
imul
and
fcoms
cmp
mov
movsl
arpl
das
push
mov
adc
inc
inc
xor
inc
cmpsb
rolb
pop
aaa
dec
push
mov
push
cmp
sbb
call
test
add
addr16
loope
mov
add
loopne
cmp
adc
lds
or
mov
adc
outsb
lcall
aaa
mov
ljmp
loopne
scas
pusha
and
shl
mov
cmp
aas
dec
cld
xchg
pop
fcmovnb
fmuls
and
test
sarb
cmc
mov
addr16
xchg
sub
or
cmc
jns
jo
xchg
out
mov
adc
mov
lock
jl
pop
fidivrs
out
fnsetpm(287
std
int
sub
loopne
dec
arpl
outsb
mov
mov
cld
jmp
xor
cltd
push
pop
test
pusha
mul
popa
mov
jp
jbe
mov
aam
fcoml
add
and
and
pusha
mov
add
outsl
dec
xchg
mov
fstpl
pop
sbb
or
sahf
fwait
test
loopne
movsl
shll
shlb
mov
cmp
inc
inc
push
out
insl
in
sti
pop
pop
xor
movsl
fnstcw
sbb
pop
mov
xlat
adc
or
rolb
sub
std
inc
pop
mov
and
xchg
sbb
or
push
mov
add
mov
jae
xor
xor
das
scas
xor
sub
mov
dec
out
mov
mov
inc
ror
inc
xor
aaa
mov
scas
and
inc
ja
push
inc
mov
sbbb
rclb
push
scas
sub
dec
dec
sub
jae
mov
pop
icebp
shlb
rcrb
sub
mov
call
popa
mov
fldl
js
lea
mov
rclb
scas
shlb
cmp
popf
arpl
xchg
inc
data16
loopne
mov
and
cltd
sarl
scas
mov
jb
out
sbb
inc
add
mov
mov
and
fidivl
dec
jbe
xor
inc
inc
icebp
movsl
mov
xchg
pop
sub
nop
mov
jns
rol
xchg
pusha
pop
jge
and
shrb
cld
mov
scas
loopne
cli
sbb
or
push
imul
aam
jnp
pop
icebp
push
rol
jno
popf
pop
aam
jo
out
jle
xchg
cmp
shrl
sarl
cmc
cld
adc
daa
mov
shlb
push
test
loopne
rclb
inc
repnz
movsl
jecxz
add
mov
xchg
cmp
sub
sub
pushf
movsb
shlb
and
jl
movsl
xchg
sub
shrb
jb
aam
jecxz
mov
xor
fldt
dec
xchg
pop
daa
add
pusha
inc
or
outsl
dec
loope
loopne
in
add
and
lret
vfmaddsub213pd
rolb
pusha
inc
xchg
cmp
mov
jmp
jge
xchg
push
mov
andb
addr16
mov
inc
sahf
jl
fcmovnu
shrl
add
loopne
xchg
mov
and
mov
movsl
shl
jge
clc
fnsave
loope
xchg
daa
mov
test
push
out
lret
inc
loopne
loopne
pusha
andb
insl
mov
pusha
pop
ss
inc
inc
mov
js
and
push
sar
andb
movsl
in
sub
dec
mov
shrb
loopne
int3
add
addb
adc
pop
push
inc
clc
js
inc
pusha
inc
jbe
dec
pop
movsb
inc
inc
xchg
cmc
jecxz
outsl
jno
pop
movl
inc
repz
popa
mov
or
mov
adc
repnz
cmpl
pusha
mov
fcomps
dec
and
and
jge
mov
xlat
mov
mov
sbbb
or
ficomps
inc
ficoms
icebp
cmp
aas
scas
rolb
call
js
xchg
call
mov
or
and
loopne
push
loopne,pn
inc
mov
pop
stos
inc
push
loope
andb
mov
lock
push
xor
int3
aad
fcomps
dec
mov
xor
cld
stos
mov
or
mov
lods
addb
inc
fsubs
ret
jp
int3
sbb
into
pop
sti
pop
push
and
add
shlb
and
loopne
std
lds
xchg
addr16
pop
mov
add
mov
sbb
enter
fiadds
test
movsl
or
iret
addl
mov
inc
rclb
aas
adc
push
add
and
loopne
movsl
cmp
jge
leave
fstps
pop
and
sarb
adc
lret
and
fsubl
outsb
cmp
outsl
sahf
dec
push
fs
into
lret
loopne
andb
add
and
loopne
cld
addr16
mov
sti
pop
iret
dec
sub
inc
pushf
sub
pop
repnz
out
outsl
jecxz
mov
mov
or
lods
and
jge
mov
add
enter
aas
icebp
xor
aam
scas
rolb
xor
cmc
lods
sub
mov
stos
mov
mov
push
mov
addb
ficomps
rolb
repz
cmp
test
js
clc
inc
jns
sub
pusha
and
je
imul
shlb
mov
clc
nop
dec
inc
mov
sbb
jle
arpl
sahf
xor
pusha
inc
mov
add
loop
jle
ret
or
loopne
adc
inc
imul
call
andb
inc
in
sbb
xor
dec
jmp
mov
inc
pop
icebp
ljmp
add
sbb
pusha
and
mov
dec
jl
push
or
sarb
jg
pop
add
inc
nop
data16
lahf
sbb
add
mov
add
andb
xor
sbb
and
outsl
pop
mov
shlb
rol
jne
add
dec
lock
pop
add
mov
xchg
rclb
and
and
dec
mov
rcl
sub
push
add
stc
cwtl
jmp
gs
inc
cltd
stos
rolb
shrb
xor
add
int3
lret
les
jne
addl
pusha
mov
pusha
xchg
xchg
enter
and
pop
mov
add
cmp
mov
push
addb
jo
test
xchg
ds
cmpsb
and
popf
jno
andb
jne
cmc
stos
loopne
cmp
ret
add
fs
outsb
dec
add
add
rorb
inc
leave
cmpsl
pop
fldcw
xchg
aam
inc
inc
push
inc
scas
loopne
xchg
mov
loopne
clts
loopne
dec
aas
jbe
stos
rol
and
cltd
int
je
repnz
lret
inc
xchg
and
pop
aaa
dec
lds
popf
addr16
mov
and
push
inc
loopne
cmpsb
mov
sub
sbb
ficoml
sahf
xchg
in
mov
add
stos
xlat
push
loopne
gs
dec
jmp
imul
loopne
mov
sbbl
int3
sub
mov
addb
xchg
jbe
mov
pop
std
push
inc
pop
cmc
dec
jae
adc
sbb
xchg
lcall
jmp
lcall
lds
and
fs
dec
imul
pusha
rol
pop
add
roll
les
mov
pusha
shlb
shlb
mov
fs
dec
mov
xor
xor
push
lods
in
pop
int3
subl
test
add
and
and
xchg
push
sbb
xor
outsb
mov
iret
mov
jae
push
mov
or
insl
out
dec
pushf
fwait
sbb
and
mov
leave
adc
shlb
call
and
mov
jo
xor
sbb
orb
and
insb
mov
js
ja
mov
adc
add
dec
jnp
scas
in
loope
jge
and
add
fcoms
or
and
xchg
cmc
lock
shlb
hlt
mov
add
subb
es
mov
mov
faddl
mov
inc
je
jbe
adc
fnstcw
call
popa
lds
bound
jo
mov
jmp
and
adc
xor
mov
add
push
add
loopne
pop
and
loopne
add
xchg
mov
das
mov
dec
pop
cmp
mov
inc
sbbb
and
dec
pop
pop
loope
loope
and
pusha
out
rolb
lahf
push
inc
repz
aam
pcmpgtw
in
call
lcall
mov
sbb
push
stc
add
mov
mov
xor
adc
aaa
jb
xor
movl
inc
xchg
and
mov
mov
shlb
inc
sub
sarb
daa
popf
pop
stos
loopne
mov
push
lods
inc
shlb
shrb
dec
inc
xor
or
je
mov
jo
and
cmp
std
push
pushf
fidivs
lea
push
pop
xchg
inc
aam
or
or
ja
lret
out
loopne
test
rorb
and
and
outsb
mov
mov
je
xchg
imul
rcrl
jg
push
cltd
into
xchg
push
call
or
jl
movsl
addb
addb
scas
shlb
add
mov
sbbb
arpl
dec
jl
sub
shlb
out
in
in
andl
xchg
dec
test
and
xchg
iret
movsl
cmp
mov
mov
loopne
sahf
cmp
ljmp
aas
les
pusha
inc
stc
sahf
xchg
lods
andb
pop
and
jne
mov
dec
sbb
jecxz
test
push
cmp
das
pop
je
and
andb
add
in
dec
sub
mov
fldcw
inc
enter
cmpsb
shlb
add
jae
inc
pop
fs
out
jmp
sti
mov
loope
loopne,pn
nop
sub
add
inc
add
inc
inc
dec
lds
mov
aad
fnstcw
andb
or
add
inc
pusha
daa
repnz
iret
push
js
fsubl
test
inc
jle
lea
and
loopne
cmp
push
mov
xchg
aad
stc
or
fidivrl
push
cli
push
stc
mov
faddl
add
sbb
and
inc
daa
xchg
cmp
mov
pusha
imul
pusha
mov
xor
mov
rorb
or
loopne
cmp
addb
arpl
fildl
out
inc
faddl
mov
shlb
pop
cltd
xchg
sarl
test
push
fcoms
roll
loopne
ja
jb
pusha
pusha
scas
cmp
shlb
ret
inc
cwtl
push
inc
inc
push
xchg
cmpsl
xor
jbe
clc
pop
dec
or
inc
mov
push
push
and
mov
mov
aad
and
inc
mov
pop
ss
jg
loopne
cmp
pop
pop
mov
ds
xchg
add
dec
inc
out
fscale
sub
icebp
ja
dec
cli
jns
jo
adc
inc
aad
and
mov
inc
dec
mov
cmp
mov
jp
push
pop
daa
adc
scas
insl
std
push
sbb
add
pusha
loopne
ror
dec
ljmp
add
iret
dec
inc
mov
sbbb
repz
mov
push
and
cltd
mov
fisttpll
shlb
test
popa
out
and
mov
int
shrl
shlb
mov
mov
nop
movsl
hlt
mov
loopne
xlat
sti
les
push
dec
out
ss
mov
jp
dec
pop
fs
inc
lds
pop
mov
cmp
push
dec
mov
andb
addb
add
and
sbb
sti
inc
scas
cli
in
xchg
and
out
dec
xlat
inc
leave
shll
pop
jmp
icebp
jge
loop
xchg
mov
fwait
adc
dec
test
dec
cmpl
dec
pop
fldpi
pop
loope
add
ss
sbb
and
mov
inc
subb
mov
out
lret
lock
xchg
cmp
cmc
push
lods
jno
inc
test
loopne
les
push
mov
mov
in
mov
push
inc
call
mov
inc
nop
das
adc
pop
pop
out
add
cltd
cli
or
add
hlt
pop
push
cmp
push
pop
fsubrp
mov
hlt
aas
stos
mov
xchg
adc
out
cs
in
pop
push
sub
inc
test
sub
out
xlat
cli
sbb
movsb
loopne
inc
mov
pushf
mov
add
sbbb
cltd
xor
out
nop
mov
add
ss
shll
pusha
sarb
jne
sbb
rol
hlt
imul
sbb
inc
shlb
mov
andb
add
in
test
add
aaa
test
push
xchg
push
adc
vcvttps2dq
inc
dec
loop
sbb
jle
adc
loopne
and
xor
out
lds
inc
lods
jns
dec
dec
ffree
cmpsb
add
jl
es
add
sbb
mov
loopne
sub
inc
test
pusha
push
and
mov
popf
dec
roll
or
add
pop
add
and
pop
stos
leave
mov
inc
into
dec
cmp
fbstp
mov
mov
xchg
int3
and
loopne
mov
and
jg
cmp
sbb
inc
pop
scas
test
outsb
popa
fistps
aam
xchg
or
mov
loopne
jnp
push
add
rcl
pop
decl
mov
push
in
ds
mov
je
sub
xlat
push
fwait
jg
lods
and
sar
and
add
mov
pushf
call
outsb
aam
inc
movsb
rol
sti
es
orb
and
aam
push
lods
pop
cmp
mov
andb
and
adc
xchg
jno
adc
pusha
add
pop
mov
sahf
je
sbb
push
imul
and
mov
sti
insl
xor
jbe
shlb
add
pusha
out
inc
and
xor
hlt
rcrl
aam
stc
popf
arpl
lcall
in
test
add
pop
xor
sahf
or
mov
loopne
out
xor
jb
sub
movsl
cmp
daa
mov
fdivrl
mov
pusha
mov
pushf
mov
add
sti
sbb
icebp
call
dec
pop
mov
repz
inc
sbb
sbb
jmp
mov
cmp
push
inc
pusha
pop
kmovd
lods
loopne
lds
sbb
stos
mov
fstpt
andb
mov
loopne
test
pop
addb
loop
cmp
pusha
inc
sarl
sub
mov
js
push
popf
andb
mov
insl
addr16
stos
mov
rolb
push
jae
sbb
mov
loopne
out
mov
inc
and
pushf
pop
jge
stos
andb
sbb
shl
aad
dec
mov
or
mov
sahf
mov
mov
imul
and
sub
or
rolb
pusha
jno
enter
loopne
mov
into
sub
stc
sbb
add
sub
add
cmp
add
dec
popa
dec
imul
mov
loopne
test
xor
inc
insl
jge
or
push
sbb
lods
rolb
stos
sub
loopne
andb
ss
inc
or
loopne
fldl2t
fcoms
add
rclb
loopne
fwait
mov
push
mov
rolb
rolb
push
jl
sbb
scas
faddl
add
movsb
pusha
mov
shlb
pusha
and
sbb
mov
fidivrl
std
lods
xchg
mov
mov
and
outsb
scas
addb
sbb
test
pop
jecxz
cmp
and
repnz
xchg
nop
push
addb
add
and
jae
adc
add
addb
je
inc
cmpsb
pusha
or
shrb
stos
sbb
movsl
xchg
fiaddl
mov
shrb
in
cmp
mov
repz
mov
lds
loopne
sahf
iret
dec
fstpt
cmpsl
das
sarb
mov
inc
adc
je
movl
and
sub
inc
fisttpl
mov
jmp
mov
sub
sub
and
xor
mov
sarb
push
inc
mull
stos
and
shll
ficoms
loopne
inc
xchg
std
mov
nop
sub
push
out
sti
repnz
popf
jo
push
push
jge
and
push
ror
dec
pop
push
test
xorb
xchg
sbb
in
sbbl
mov
movsl
dec
inc
jnp
mov
jbe
add
das
pop
jmp
xor
and
sbb
mov
mov
jg
rclb
adc
stos
int
fsubs
and
push
mov
xor
les
or
lret
leave
pop
cmp
or
sub
mov
add
cmp
popf
sbb
ljmp
sub
rclb
cli
dec
xchg
nop
aam
in
and
and
and
mov
and
mov
add
addb
or
xor
addr16
gs
inc
into
mov
les
into
jg
and
adcb
xchg
lods
mov
fldenv
xor
inc
rcll
loopne
push
xchg
rolb
inc
std
testb
fldenv
mov
or
add
lods
mov
mov
jo
mov
sbbb
fldt
rolb
cmp
mov
add
testl
xor
int3
fs
aaa
test
mov
xchg
lret
jle
cltd
daa
add
loopne
or
mov
mov
cmp
and
imul
xchg
dec
mov
pusha
cmp
jmp
and
das
pop
shlb
iret
fwait
cmpsl
mov
ss
push
gs
inc
adc
push
pop
mov
insl
int
into
insb
or
iret
jp
jno
fnstenv
jge
clc
movsl
call
loopne
jl
pop
dec
mov
lock
loop
test
and
add
iret
test
add
and
rclb
and
mov
xor
xor
dec
or
mov
add
pop
sahf
clc
scas
out
loopne
es
inc
cmp
pusha
mov
shlb
sbb
push
inc
or
push
sub
rclb
in
jp
inc
loopne
jnp
les
ffree
popf
cmovno
mov
ja
xor
mov
or
loopne
dec
push
lahf
fdiv
add
push
arpl
hlt
dec
out
pusha
in
pusha
push
mov
and
pop
ficoml
iret
cmp
shlb
add
loopne
cmp
pop
scas
add
adc
xchg
xor
int3
mov
out
add
jmp
xor
sub
loopne
mov
out
xchg
addb
sub
stos
and
sar
sbb
pusha
dec
movsb
pusha
inc
fstps
mov
pop
call
aaa
into
in
dec
enter
ljmp
out
das
inc
jge
push
push
sub
adcb
loopne
jle
dec
push
inc
adc
push
pop
dec
mov
loopne
mov
jae
fisubl
enter
inc
pusha
add
sahf
loope
mov
add
lret
inc
scas
test
stos
or
aam
inc
shrb
loopne
or
popf
loopne
out
jl
rolb
test
ror
aas
adc
addb
and
shlb
mulps
xchg
dec
pop
mov
dec
cmp
scas
or
add
mov
cmp
andb
filds
inc
and
ret
loopne
push
pop
cwtl
aas
and
inc
sbb
dec
lcall
pusha
pop
pop
mov
pop
iret
pop
data16
lods
push
push
pop
jmp
xor
ret
mov
test
mov
sahf
xchg
bound
lods
mov
adc
popf
insl
aam
or
mov
inc
add
push
fwait
inc
xor
jnp
xor
add
mov
cmpsb
mov
mov
and
call
push
and
outsl
mov
cmp
cmpsl
mov
js
jno
jle
nop
mov
pop
lahf
testl
cld
xchg
mov
call
or
shll
and
and
es
add
and
mov
dec
jns
or
add
inc
mov
jle
dec
add
andb
or
inc
mov
mov
mov
mov
sub
and
mov
movsb
rolb
dec
mov
loopne
int
adc
mov
aaa
int
adc
mov
shrb
inc
and
clc
mov
lock
pusha
dec
sbb
addr16
mov
push
fldl
add
push
dec
adc
loopne
movsb
inc
adcb
push
pop
test
dec
jo
xchg
and
and
jae
adc
scas
and
adc
add
loopne
xor
and
into
pushf
testl
and
add
sub
mov
out
outsl
and
pop
in
mov
push
shl
shlb
and
push
sbb
add
rolb
mov
pushf
sub
lods
add
and
pusha
ret
push
inc
sub
jecxz
cwtl
out
iret
lods
and
mov
call
sub
mov
jne
mov
lret
pusha
pop
pop
mov
loopne
pop
dec
fcoms
cmp
inc
loope
push
mov
sarb
pusha
sub
pop
sbb
iret
sbb
push
pop
inc
cmpsb
add
and
js
rcr
jge
insl
and
pusha
andb
inc
negb
in
pop
push
cmp
pop
jecxz
loopne
mov
movsl
mov
lahf
mov
cmp
andb
aam
jae
scas
xor
mov
inc
inc
fbld
movsb
pusha
mov
and
adcb
lock
add
lds
lods
shl
scas
mov
mov
scas
mov
mov
cmp
pop
je
outsl
or
cmp
outsb
push
jbe
push
sub
ja
int
xchg
mov
mov
mov
inc
dec
add
mov
enter
jnp
lea
xchg
push
add
adc
loopne
xor
repnz
xchg
push
and
add
jo
out
loopne
neg
cwtl
out
push
inc
mov
xor
inc
add
dec
inc
mov
pushf
add
or
ja
pop
out
aaa
das
sub
and
loopne
xchg
scas
fwait
jg
xor
add
inc
fldenv
cmp
sub
xchg
jno
mov
add
inc
sbb
xchg
test
call
jo
mov
insb
int3
mov
pop
cli
mov
sbb
lods
gs
sbb
inc
fs
lea
add
pusha
in
push
rolb
sbb
inc
pusha
mov
lds
movsl
sahf
mov
pusha
add
lretw
xor
mov
mov
jecxz
dec
dec
push
in
aas
scas
mov
jo,pt
ljmp
mulb
testb
cmpsl
jnp
push
pusha
loopne
imul
jae
mov
inc
cmpb
popa
leave
cmp
popl
movb
ljmp
pusha
addb
sbb
js
xchg
fucomip
stos
add
lret
addr16
das
inc
mov
scas
rol
dec
cmc
popa
jecxz
div
jmp
adc
ret
dec
hlt
fwait
jg
fisttpll
loopne
push
out
inc
add
cmpb
jbe
imul
mov
mov
xchg
adc
adc
iret
lret
push
sub
inc
lods
add
sub
inc
xchg
add
mov
cmp
loopne
pop
mov
mov
mov
and
notl
inc
scas
jmp
add
mov
ja
addb
dec
aad
pop
test
add
cmp
fs
out
packuswb
add
cli
sub
shr
sahf
mov
pop
in
arpl
ljmp
pusha
pop
icebp
jge
in
and
adc
sub
pop
mov
loopne
dec
jns
inc
rcl
sbb
dec
push
lret
mov
pusha
iret
adc
faddp
sub
and
pop
faddl
push
and
imul
rol
dec
shrb
hlt
and
loope
repnz
mov
pusha
pusha
adc
loopne
data16
mov
bound
jae
pop
pushf
cmp
aad
add
fisttps
or
mov
xchg
popa
shll
add
inc
and
mov
push
push
jecxz
sbb
int3
loope
inc
inc
xchg
push
jmp
rolb
sub
pushf
mov
rorl
push
and
sarl
inc
jle
cwtl
jg
cmovb
movsl
cmp
fwait
adc
add
loopne
inc
test
pop
lcall
pop
lcall
imull
and
shlb
dec
xor
cwtl
push
js
jmp
mov
pusha
and
and
add
adcl
jae
pusha
pushf
cmpsl
enter
xchg
icebp
pop
jns
xchg
pop
fld
push
inc
sar
xchg
movsb
loopne
add
inc
ret
pushf
jecxz
push
add
rolb
mov
loopne
add
inc
mov
inc
cmp
mov
mov
inc
add
mov
mov
loopne
mov
add
das
mov
add
stc
jo
mov
and
addb
scas
mov
pusha
int3
int
mov
mov
in
popf
scas
addb
les
sarb
push
push
stos
andb
mov
add
out
pop
pusha
jge
nop
test
inc
push
lcall
orb
mov
into
loope
add
pop
ret
in
inc
lea
arpl
and
inc
pusha
mov
add
repnz
xchg
fists
sub
dec
mov
outsb
fcmovnu
rolb
mov
add
add
inc
js
dec
dec
addr16
pusha
jne
and
push
inc
inc
fistps
xor
and
cmc
sub
aad
inc
clc
adc
repnz
js
sbb
rcll
mov
mulb
and
ss
sbb
shrb
jle
mov
and
cmc
mov
test
and
cmp
pusha
mov
add
shl
cmpsl
cmp
lods
and
mov
fildl
in
xor
cmp
jae
cmp
call
jge
xchg
mov
xlat
jg
jl
repz
leave
out
pop
in
imul
push
cwtl
xchg
add
lds
add
cmp
mov
std
jns
subl
mov
jno
shlb
addb
clc
lods
inc
lcall
je
xchg
mov
and
lods
rolb
dec
aas
mov
jns
dec
ds
sub
and
mov
mov
aam
push
push
pusha
inc
xchg
cmc
mov
movsb
pusha
and
mov
jecxz
sub
cmp
or
and
pop
outsl
xor
xor
fimuls
inc
arpl
push
ljmp
popf
out
mov
mov
xchg
sbb
fdiv
fcoml
jo
stc
cwtl
movsb
rol
dec
mov
rcrl
jbe
lods
and
dec
or
add
add
inc
and
inc
sbb
mov
mov
shlb
ret
and
movsl
jno
xor
sbb
cmpsl
dec
push
and
scas
loopne
fs
andb
addr16
lods
nop
fstp
jnp
icebp
mov
and
pop
jae
mov
loopne
ret
xchg
test
mov
fists
je
pushf
mov
out
add
out
pop
and
add
gs
test
sbbb
push
addr16
xor
push
add
int3
mov
jb
and
inc
and
inc
shrb
sarb
mov
dec
in
hlt
dec
ds
fnstenv
add
dec
test
adc
jae
jl
lret
lcall
dec
movl
or
shlb
push
inc
and
shlb
loopne
loopne
jmp
mov
andl
or
and
lea
andb
xor
mov
and
loopne
shl
in
dec
arpl
jmp
push
addb
add
adcb
scas
decl
mov
xchg
lahf
pop
mov
rcr
daa
outsb
mov
inc
insb
pop
xor
xorl
and
sarl
sbb
push
js
inc
out
loop
dec
pop
popa
arpl
pusha
lret
or
lcall
dec
or
add
fidivrs
test
or
repz
add
lret
xor
insl
push
loopne
push
aas
lods
rol
dec
gs
inc
cmpb
add
pop
mov
fstpt
ss
jle
loopne
insb
lea
imull
scas
insb
jge
out
cs
pusha
jns
incb
sahf
adc
stos
inc
inc
dec
push
pusha
pusha
out
lea
or
sbb
icebp
sarl
adc
or
insb
call
sub
mov
mov
mov
lret
les
cmp
outsl
push
mov
mov
pushf
testl
andb
mov
mov
ljmp
xor
add
roll
out
cmp
dec
mov
sub
mov
imul
dec
mov
pop
inc
bound
jge
mov
addb
fistps
cmp
repnz
sbb
out
inc
jmp
add
ror
xchg
xor
or
in
out
pop
cmp
push
sub
loop
rolb
test
loopne
mov
addb
loope
inc
xchg
mov
and
sub
repnz
les
fstpl
test
pusha
andb
pusha
mov
jl
xor
cmpsb
loopne
jg
addb
enter
pushf
sub
adc
sti
push
into
mov
mov
jg
mov
push
incl
cmc
scas
pusha
add
stc
mov
insl
nop
arpl
add
pop
inc
js
loopne
mov
clc
jbe
out
pop
inc
jl
rolb
pusha
loopne
filds
pushf
movsb
loopne
iret
push
add
sar
fcmovu
enter
cmc
jp
mov
pusha
cmp
movsl
mov
inc
mov
cmpsl
inc
fimull
lods
xchg
pop
dec
mov
cmp
loopne
leave
into
jbe
mov
aad
gs
test
mov
pushf
insl
shll
gs
adc
adc
sbb
mov
pusha
sub
lock
inc
mov
inc
out
sarb
mov
mov
push
andb
adc
inc
in
and
inc
fidivrs
mov
sub
ss
lods
std
mov
and
jns
ds
push
shll
rolb
sarl
pop
and
addb
add
inc
iret
pop
ficoml
jmp
mov
shll
adc
mov
inc
sahf
xchg
pushf
cmp
lret
mov
loop
jp
imul
jecxz
mov
loope
fidivrs
loop
scas
andb
out
push
rol
aad
and
add
pop
push
sub
mov
mov
fsub
rcrb
mov
sarl
enter
jbe
inc
subb
add
inc
loopne
xchg
lock
mov
outsl
ret
popa
push
inc
mov
fcmove
and
outsb
pushf
inc
sahf
lock
mov
xlat
iret
sbb
rcrb
addb
inc
pop
xor
cmp
inc
subb
mov
int3
scas
mov
dec
popa
xchg
cmp
xchg
add
lods
jb
test
add
sub
mov
push
pop
or
dec
dec
or
dec
gs
roll
movsl
jmp
roll
and
sahf
xchg
scas
rolb
and
mov
and
cmp
xchg
pusha
add
push
mov
pusha
xchg
in
sub
lods
aam
mov
dec
pop
leave
aam
addr16
cmpsl
pop
arpl
fiaddl
inc
pusha
rcll
xor
mov
and
xor
xchg
or
jno
add
call
xor
cld
out
movsb
rol
sub
adc
int3
mov
xor
jne
or
and
shlb
sub
adcl
inc
pop
fstpt
and
inc
sahf
in
scas
add
cmc
adc
js
sarb
inc
push
loopne
scas
daa
dec
add
in
nop
jne
shl
dec
jo
mov
js
mov
and
clc
stos
add
and
mov
mov
and
jp
mov
and
mov
cmpsl
adc
nop
mov
push
push
insb
push
mov
mov
movsl
sbb
dec
mov
add
bnd
push
cltd
mov
xor
daa
adc
dec
cltd
xchg
mov
pop
adc
add
dec
inc
mov
sub
and
jmp
and
cltd
test
orb
and
addb
sbb
xchg
mov
inc
popa
popf
add
andb
movsl
adc
jle
in
cmp
rol
push
mov
in
cmp
xor
ds
addb
mov
adc
shl
push
jecxz
nop
rolb
add
inc
loopne
leave
je
fisubrl
add
inc
jg
pop
repz
scas
loopne
orl
mov
adc
cwtl
jl
out
push
add
add
pop
cmp
and
lret
sbbb
scas
shlb
xchg
push
add
loopne
andb
sahf
repz
jg
cmp
clc
rolb
add
lret
iret
dec
movsb
inc
and
pop
sub
cmp
imul
inc
mov
cmpsb
inc
rol
and
add
sbb
loopne
xor
mov
inc
sysexit
fimull
sub
and
inc
jge
push
pop
cwtl
jp
jp
jb
aaa
dec
popa
sar
test
dec
and
loopne
jnp
outsl
rcll
inc
inc
xor
jg
out
leave
push
arpl
and
pusha
enter
mov
push
addb
mov
mov
aam
and
add
shl
fidivrs
sahf
repnz
lcall
jno
mov
xor
ret
mov
add
xor
ja
xchg
xchg
cltd
andb
add
mov
popa
push
add
lcall
into
stos
pop
mov
mov
push
sbb
movsl
andb
outsl
cmpl
inc
and
mov
nop
sbb
cmp
addb
xor
and
add
test
pusha
xor
insb
aaa
in
idivb
into
jle
sahf
or
and
fisttpl
mov
mov
lods
inc
shrb
mov
jo
lret
mov
loopne
jb
addb
mull
loopne
and
aam
add
shlb
add
loopne
pop
sar
pusha
and
enter
ret
add
test
int
loope
icebp
stos
mov
jo
test
cld
mov
sahf
dec
sub
and
imul
ret
xchg
jae
leave
xor
clc
cmp
mov
add
lds
insl
fwait
pushf
in
ret
adcl
insl
addb
xchg
or
pusha
sbbl
xchg
and
cld
cmp
loopne
stos
loopne
pop
je
rolb
mov
xor
add
mul
adc
test
mov
data16
sub
dec
cmp
or
int3
mov
aaa
or
sbb
sbb
xor
insl
add
cwtl
mov
xor
cld
ds
cmp
testl
push
pusha
loopne
jmp
insb
test
andb
add
push
sar
gs
and
sbbb
add
popf
aaa
xchg
push
and
adc
adc
mov
shlb
shlb
sbb
mov
mov
fsub
iret
pop
insb
push
and
mov
mov
xchg
mov
enter
loopne
dec
add
rcrb
add
shlb
mov
lods
pusha
pusha
jno
sub
mov
inc
push
push
andb
in
movntq
stos
and
jle
lock
mov
cmp
call
lret
mov
les
pusha
lods
sub
sti
scas
xor
sub
inc
xchg
int3
in
lea
add
pop
adc
push
mov
xor
cmp
and
xor
rol
add
loopne
andb
jecxz
pusha
andb
mov
popa
adc
outsl
cmpl
inc
cmc
or
inc
sub
int
popf
ds
pusha
pop
push
pop
in
rcrl
mov
mov
adc
pushf
cmp
sbb
push
fstl
mov
mov
pop
jp
adc
ret
xchg
or
pop
mov
xor
int
add
sbb
xchg
push
iret
push
ret
or
vmovaps
push
fdivrl
mov
movsb
mov
ret
lahf
in
pop
popa
leave
pop
xor
sbb
xor
inc
add
xor
pushf
mov
andb
inc
xor
pusha
jb
pusha
add
add
es
cltd
mov
loopne
pop
push
je
jmp
dec
push
pusha
shrb
cmpsl
cmp
cs
pop
inc
mov
adc
sbb
xor
fimuls
or
mov
sbb
sbb
mov
adc
lods
jle
adc
jno
push
add
rol
cmp
pusha
add
pop
mov
std
hlt
in
sbb
jl
rolb
inc
je
adc
and
loopne
xchg
add
sbb
mov
push
out
lret
mov
sub
mov
or
nop
jecxz
aaa
push
dec
sub
movsl
ficoml
push
adc
shlb
inc
movsl
aaa
scas
mov
jle
addb
sub
daa
xor
sub
add
mov
sbb
add
cltd
out
loop
ret
mov
pop
cmp
out
pusha
out
rolb
cmpb
ja
lahf
lock
test
mov
shlb
xchg
pop
lock
fxch
in
stc
iret
movsl
in
sbb
addb
andb
leave
addb
xchg
fstps
loopne
jmp
jnp
push
gs
mov
and
cmc
pusha
xchg
xor
xlat
ret
push
fwait
ljmp
js
cmp
test
shl
jl
int3
pop
push
pusha
rclb
sub
inc
in
jo
leave
add
inc
insb
ffree
fs
ror
or
jb
out
cmp
mov
andl
loopne
xor
andb
xchg
lret
sub
mov
jmp
cmp
stc
rcl
lret
inc
mov
add
mov
mov
in
call
or
inc
shlb
xor
jne
pusha
negb
shll
pop
xor
nop
cmc
stos
bound
add
add
lcall
inc
arpl
cmp
lods
rol
dec
shrb
shlb
jge
fstps
mov
xchg
sbb
mov
icebp
lahf
es
cmp
push
fldt
cmpsl
or
addb
pusha
add
pusha
vminss
int
cmp
xchg
jmp
jb
into
dec
push
loopne
cmp
mov
add
mov
movsb
and
ret
lds
hlt
lods
inc
mov
or
sbb
mov
stc
aaa
cvtdq2ps
add
mov
dec
jae
pushf
iret
cmp
test
and
inc
pusha
push
pusha
mov
imul
hlt
xchg
and
das
mov
sbb
andl
rcl
loope
jne
push
add
pop
mov
jb
stos
mov
inc
inc
idivl
mov
cmp
les
add
add
inc
subl
jmp
adc
das
push
int3
pusha
addr16
pop
or
xlat
and
imul
cmp
clc
xor
andb
xchg
xlat
fadd
outsl
enter
rclb
mov
and
cmp
loope
ds
sub
push
mov
andb
mov
and
xor
shl
jnp
mov
sti
pushf
xchg
repnz
rolb
shll
xchg
sub
inc
jecxz
test
add
push
push
push
jne
pop
xchg
lea
shlb
and
arpl
daa
xor
pop
out
mov
sub
loope
ds
inc
xchg
ds
dec
aaa
int3
outsl
rorb
das
lock
pop
jns
xchg
and
addb
mov
adc
pop
gs
mov
push
add
pusha
sub
sbb
outsb
push
out
loope
and
sarb
pusha
push
sti
xor
dec
dec
pusha
dec
mov
xchg
cmp
xor
addb
xchg
cmc
jecxz
mov
xlat
sub
pusha
je
repz
imul
mov
add
mov
adc
and
push
xor
or
add
int
dec
cmovb
push
sbb
mov
pusha
loop
or
mov
add
push
pop
les
add
stos
sbb
push
stos
mov
clc
dec
mov
push
stos
inc
scas
pusha
and
jp
arpl
dec
rclb
inc
pusha
aad
dec
lods
adc
or
pusha
loopne
lods
inc
mov
pusha
mov
rol
xchg
dec
sub
cltd
inc
dec
daa
cmp
insl
in
dec
mov
pusha
lds
cmp
loopne
stos
xchg
fstpl
test
inc
lods
mov
add
movsl
and
or
pusha
pop
xlat
xchg
jp
ljmp
nop
mov
mov
inc
and
insl
jmp
mov
and
sub
movsb
addb
jp
adc
jo
jo
mov
sub
adcb
xor
and
add
sar
rcrb
loopne
fimuls
addl
out
mov
ja
or
xchg
jge
or
loopne
dec
mov
cli
pop
sbb
mov
jp
push
shl
stc
and
bound
sub
inc
test
clc
xor
es
rcll
mov
fiaddl
out
stc
insl
jmp
shlb
and
sub
mov
pop
mov
lahf
movswl
cmpsb
add
insl
ja
loopne
inc
imul
jp
adc
or
jno
mov
pusha
pop
xor
outsb
add
imul
push
cmpsl
pop
pusha
inc
inc
pop
cmpsb
add
ret
sub
add
add
rorb
xorb
add
ret
xchg
sbb
inc
test
add
mov
pusha
loopne
lahf
stos
test
mov
push
mov
lret
jle
or
xor
sub
or
loopne
pushf
xor
rep
xbegin
icebp
add
mov
movsl
dec
dec
mov
mov
mov
adc
scas
and
loopne
cltd
mov
jns
andb
pop
adc
andb
lods
cmp
mulb
stos
ret
andb
cld
fistps
xlat
push
and
and
jno
cs
sub
add
and
xor
dec
fsubr
lea
push
leave
sbb
mov
sbb
inc
addl
xchg
or
xor
andb
gs
pusha
loopne
shlb
xchg
das
js
sub
xlat
iret
cmpsb
mov
aaa
mov
jbe
mulb
and
and
mov
enter
jl
pop
mov
adc
xor
popa
xchg
test
mov
pop
mov
pop
push
xlat
and
and
add
add
cmpb
outsl
fs
ljmp
aam
add
inc
rcrb
dec
lret
push
adc
jle
inc
cmp
pop
sti
dec
inc
cmpsb
and
xchg
jle
mov
rclb
and
js
xor
cli
loop
adc
mov
inc
inc
dec
inc
pop
movsl
pushf
loopne
push
aad
inc
lret
andb
add
loopne
nop
mov
and
fadds
sub
pusha
cmp
inc
jnp
add
dec
push
or
addb
bound
add
push
iret
mov
pusha
loopne
jp
addb
xchg
cvtpi2ps
add
lods
rolb
mov
mov
or
mov
out
or
and
and
out
inc
sub
inc
inc
sbb
cmp
xchg
loope
rolb
pop
sub
ret
push
lds
add
add
out
add
call
iret
pop
inc
loopne
aas
mov
push
push
mov
andb
lret
or
cmp
aam
add
jnp
mov
pop
xchg
test
inc
mov
in
dec
mov
lret
std
stos
loopne
xor
in
in
sbb
add
jp
add
sub
addb
rolb
mov
add
jno
movsl
push
sti
pop
inc
into
leave
jno
xor
insb
mov
jmp
inc
pusha
adc
jmp
imul
scas
pusha
and
leave
push
and
icebp
lods
and
push
xor
jnp
divl
loope
in
stos
pusha
pusha
in
test
jns
inc
or
sbb
inc
stos
add
test
rorb
push
das
jl
and
ja
test
pusha
aaa
fdivl
sti
dec
in
mov
mov
mov
mov
mov
dec
inc
fdivrp
mov
cmp
nop
jo
push
mov
leave
out
stos
loopne
dec
add
loopne
mov
mov
inc
popa
xlat
aaa
mov
rolb
xor
mov
imull
mov
aam
mov
hlt
lea
and
inc
inc
lret
adc
mov
js
out
xor
lcall
pusha
or
bound
mov
push
adc
in
push
mov
dec
jmp
cltd
insb
jo
cld
pop
mov
and
out
std
and
sub
mul
stos
loopne
popa
or
andb
fstl
pop
jg
out
lret
filds
mov
dec
mov
pop
jecxz
rolb
add
push
mov
jl
sub
loopne
xchg
jb
in
and
mov
popa
or
ljmp
and
call
rolb
inc
paddd
add
orl
dec
mov
scas
add
mov
rcrb
or
mov
aam
or
cmp
xor
cmpb
inc
adc
add
and
loopne
cmc
in
xchg
test
xchg
out
cmp
push
sbbl
mov
test
mov
hlt
xchg
out
cltd
lds
mov
push
and
add
inc
xchg
shl
dec
jo
inc
mov
repnz
out
push
xchg
lahf
xchg
movzwl
push
pusha
mov
nop
push
cmpsl
cli
add
pusha
popl
mov
inc
mov
inc
and
pop
cli
insl
ret
lret
pusha
out
fsubp
js
add
pop
lock
adc
pusha
rcr
movsl
mov
jbe
inc
dec
inc
outsl
cmp
pop
xlat
push
les
ficomps
inc
inc
leave
stos
and
xchg
sahf
dec
cmc
xchg
and
inc
jno
mov
aas
sbb
cmc
out
aam
and
xchg
inc
fisubs
add
adc
jmp
mov
sub
and
xchg
and
addb
cmpsb
addb
adcb
push
inc
push
movsl
addr16
xchg
shrb
mov
mov
xor
or
out
js
fs
daa
stos
jb
mov
in
pop
cmpsl
add
and
ljmp
pusha
orb
adc
icebp
addb
cmp
adc
dec
adc
hlt
jns
fwait
imul
notl
inc
push
sub
push
js
mov
test
popf
movsb
rolb
rclb
xor
and
leave
out
mov
pusha
and
nop
or
std
push
outsb
cmpsb
mov
push
add
push
inc
test
sarl
lods
mov
mov
test
loopne
mov
xchg
pop
dec
sbb
inc
inc
js
and
jb
push
mov
outsl
iret
jnp
and
jle
or
pusha
add
add
mov
sub
imul
pop
int
in
shlb
xor
mov
sub
pusha
and
jns
sbb
test
inc
xchg
scas
inc
sub
js
scas
pop
je
int
add
hlt
mov
jae
jle
scas
mov
mov
stos
test
mov
popa
pushf
push
rol
and
pusha
loopne
cmp
mov
out
mov
ja
add
ljmp
sti
inc
push
xchg
mov
inc
sbb
dec
je
add
test
mov
movsl
or
cs
mov
loopne,pn
xor
add
jbe
add
inc
scas
pusha
add
and
mov
scas
inc
dec
xchg
sub
outsl
pop
rcrl
lock
fs
and
shlb
sarl
and
mov
out
lcall
int
cmp
lcall
in
xor
shl
add
mov
or
sar
cmc
add
adcb
cmpsb
inc
add
and
scas
rolb
jl
into
imul
andb
inc
inc
jne
sahf
mov
mov
rolb
add
mov
and
pusha
xor
and
pusha
mov
fldt
into
adc
sbb
inc
jmp
or
pop
sete
shl
jge
dec
jns
cmp
in
popa
movsb
andb
fists
cmp
add
arpl
cmp
aaa
in
adc
movsl
stos
sahf
dec
pop
pop
sub
stos
and
popa
xor
addb
fisubl
lods
andb
addb
pusha
mov
inc
loopne
cmp
add
movsb
pusha
sub
dec
jle
pusha
mov
andb
pop
sbb
lret
push
mov
fcmovne
jo
popf
mov
add
add
pusha
adc
loopne
out
mov
das
adc
movsb
pusha
pusha
int3
mov
incl
and
shl
xchg
push
mov
jno
jns
addb
int
aaa
and
adc
loopne
je
and
test
adc
mov
xor
inc
sbb
inc
cld
and
mov
inc
test
or
sbb
iret
int
push
inc
mov
stc
mov
fcmovnb
enter
imul
or
cmp
mov
insl
or
inc
fmuls
inc
cmpb
fidivl
push
adc
jle
fcoml
imul
inc
dec
jo
in
jbe
dec
movsb
and
pusha
or
and
cmp
sahf
cld
jne
inc
mov
and
xchg
out
inc
jns
mov
xchg
pusha
sub
add
pusha
mov
pusha
and
xchg
fildl
inc
pop
xor
loopne
out
cmc
push
ss
loop
lret
es
je
cld
sbb
sbb
rorb
inc
jmp
inc
insl
mov
fdivrp
outsl
fwait
test
mov
mov
add
or
xlat
inc
dec
xchg
in
aad
cs
xorb
inc
bound
push
or
aaa
pop
pop
jno
lock
mov
cmp
fadds
in
inc
inc
stc
mov
addb
lods
shlb
mov
js
addb
lods
mov
xor
pop
stos
rolb
pop
pushf
mov
enter
dec
or
addb
mov
dec
add
imul
clc
movsl
andb
jmp
dec
mov
jmp
insl
addr16
push
adc
xchg
out
mov
dec
fnstcw
clc
adc
loop
repz
out
push
jl
sub
lret
pop
push
sub
and
mov
xor
add
loopne
movsl
imul
and
mov
and
inc
lret
cmp
into
xchg
cwtl
mov
idivb
inc
pop
xchg
loop
loop
xor
pusha
inc
jge
or
pusha
adc
mov
gs
pusha
gs
ja
aas
dec
mov
js
test
add
jbe
int
test
mov
inc
xchg
paddsb
or
cltd
mov
pushf
jp
xchg
cmp
xchg
nop
pop
jge
add
or
xor
sbb
call
inc
jnp
push
pop
loop
loopne
mov
addb
test
daa
mov
cmp
popf
scas
and
lret
mov
std
out
inc
sarb
mov
popa
in
mov
sbb
sbb
and
push
jge
imul
and
loope
add
and
rcr
or
ja
jmp
orl
rorb
in
or
mov
test
or
cltd
stc
dec
dec
test
addb
movhps
orb
xchg
jp
cmp
push
add
enter
stos
push
push
pop
dec
cmp
loopne
inc
scas
add
add
xor
mov
pusha
inc
jae
addb
fs
cwtl
iret
sbb
and
loop
ficomps
sub
inc
xor
dec
mov
test
shr
mov
imul
push
shlb
dec
push
mov
ja
and
lahf
sub
add
dec
hlt
clc
adc
xchg
jg
xchg
lods
mov
loopne
push
pop
std
call
mov
sbb
nop
mov
inc
xor
xor
in
test
pusha
sbb
in
adc
dec
inc
hlt
jp
dec
cmp
loop
and
adc
push
dec
imul
addb
pusha
sbb
sbb
push
push
lea
cmp
out
adc
xchg
int3
and
mov
lock
jae
xor
pop
inc
xchg
mov
and
inc
jbe
push
hlt
pop
jg
fcmovnbe
dec
sbb
mov
loopne
call
jle
aas
fistpl
pusha
inc
scas
loopne
push
xchg
xor
rolb
jg
dec
dec
or
add
mov
cmc
dec
movsb
pusha
rol
sub
xor
pop
cmp
lahf
out
mov
sbb
aam
lret
add
push
sbb
jp
mov
or
and
and
addb
sub
mov
out
mov
dec
rcrl
cld
iret
aam
loop
push
sub
loopne
and
pop
cmc
jb
adc
pusha
andl
pop
jbe
jl
inc
mov
shlb
icebp
add
jo
shrb
xor
pusha
inc
enter
mov
into
not
sbb
mov
rcrl
popa
mov
aam
fs
push
loop
pop
mov
fcomps
ljmp
fdivr
sarb
repnz
ret
test
icebp
mov
rol
arpl
cmp
mov
and
dec
pop
pop
mov
adc
pop
or
dec
add
jmp
add
aam
mov
loopne
rol
pusha
shrb
lcall
and
ja
test
add
xchg
inc
add
pusha
ja
out
lcall
aas
pop
xor
in
mov
ret
cmp
pop
movsb
add
and
loopne
sbb
add
enter
rol
and
testb
xchg
adc
int
mov
pushl
xor
movsb
and
and
mov
push
inc
mov
mov
mov
mov
jge
adc
rolb
xchg
fwait
sbb
iret
xchg
mov
mov
and
out
mov
add
lods
mov
push
adc
sbb
dec
mov
add
test
mov
jae
pop
add
cltd
xchg
pop
hlt
dec
call
shl
mov
adc
popa
imul
add
scas
addb
int3
jae
cmc
or
mov
and
and
mov
add
add
pop
adc
imul
mov
data16
mov
loopne
inc
inc
xchg
pop
in
mov
mov
xchg
add
int
test
xlat
cltd
loopne
fld
lret
or
cmpsb
and
sbb
pop
jmp
inc
addb
push
and
inc
push
and
or
mov
popf
aas
sub
hlt
inc
mov
sub
xor
icebp
and
and
jne
lock
lcall
push
pop
fwait
pop
xchg
mov
rorl
mov
ror
rcl
ss
mov
adc
in
ficoms
cmp
jle
addb
int
add
xor
or
pop
xor
add
pushf
sbb
aad
hlt
lock
cmp
push
inc
lret
in
out
mov
movsb
andb
inc
or
add
in
mov
inc
or
jns
dec
loop
or
aam
mov
outsb
or
inc
xor
xor
cmpsb
inc
shlb
mov
add
inc
mov
lods
adc
push
cmp
notl
push
js
gs
mov
cltd
loopne,pn
add
mov
andb
xchg
jg
sahf
sti
jge
jp
mov
pop
outsb
xor
rolb
adc
dec
jl
ret
xchg
les
mov
and
sbb
repnz
mov
mov
rcr
jecxz
pusha
and
cltd
or
push
xchg
sahf
jo
movsl
sbb
or
rcl
clc
int3
xor
mov
loopne
dec
in
jbe
mov
pusha
mov
movsb
loopne
and
stos
shlb
and
mov
out
and
add
jecxz
stos
inc
pusha
cmp
and
and
lahf
rolb
or
pusha
sbb
aad
and
jb
in
fs
aam
add
mov
push
push
add
lock
fs
pop
movsb
pusha
shlb
idivb
mov
fisttpll
sub
inc
pop
cmp
add
mov
inc
or
jnp
fiaddl
mov
jecxz
xor
rorb
cmc
imul
pop
push
mov
push
rcrb
mov
insb
dec
loope
aad
andb
aam
js
add
loopne
in
push
movsb
add
inc
stc
inc
push
fcmovb
mov
loop
xor
dec
fmuls
incb
mov
in
xor
outsl
sub
in
andb
push
insl
dec
jg
mov
rorb
add
and
xorb
mov
xchg
add
inc
repnz
jecxz
arpl
mov
jae
or
inc
sbb
addr16
insb
mov
inc
adc
loopne
jae
call
xchg
ss
mov
lret
shll
and
fsubrs
and
mov
push
in
repz
xchg
rcr
in
out
pop
adc
rolb
ss
insb
push
popl
and
inc
aas
in
jne
in
jb
jne
outsb
xlat
sbb
mov
loopne
mov
loopne
incb
loopne
int
inc
lods
and
pop
dec
xchg
aaa
adc
cmp
es
mov
mov
stos
loopne
mov
addb
and
cmp
fidivrs
cmp
lock
and
add
lcall
mov
loop
sub
mov
push
pop
cmp
mov
daa
or
cmp
xchg
lahf
nop
imulb
inc
xlat
push
into
cli
mov
lea
mov
inc
imul
pusha
mov
sub
add
addb
jle
jl
shll
stos
fcmovbe
mov
fwait
pop
fimuls
mov
stos
pusha
add
fs
push
sbb
arpl
loopne
loopne
mov
in
push
pusha
addb
addb
adc
jns
xchg
in
in
mov
outsl
dec
mov
xlat
xor
into
mov
mov
mov
pop
cltd
sub
jno
rclb
inc
pushf
lods
mov
cld
or
loopne
cmp
leave
test
mov
stos
push
mov
je
and
pop
jl
ljmp
and
xchg
sbb
adc
jmp
adc
cltd
fs
sub
shl
sub
mov
lret
in
decl
mov
addb
inc
mov
cmp
rcr
cmp
addb
popa
das
mov
jle
test
add
add
inc
test
outsb
fnstsw
adc
pop
and
mov
out
mov
xchg
pop
icebp
stos
rolb
mov
adc
and
mov
or
and
out
rol
push
xor
sti
in
repz
pop
sbb
test
pusha
mov
mov
mov
bound
sbb
loopne
imul
xchg
gs
sbb
inc
and
dec
xor
xor
fiaddl
lahf
arpl
mov
inc
add
inc
xor
addb
cmp
daa
cmp
xor
loopne
out
and
mov
cld
sti
ljmp
mov
add
add
add
addb
rolb
andb
push
sbb
dec
out
mov
inc
imull
mov
inc
sbb
pop
aas
cmp
leave
mov
pusha
sub
xchg
faddl
rolb
stos
pusha
rol
testl
mov
pop
ljmp
fs
xlat
mov
imul
imul
shlb
iret
add
or
pop
mov
inc
stc
mov
push
mov
and
in
sbb
int3
subl
add
sub
jecxz
push
jge
mov
hlt
sub
loopne
addr16
jae
pop
cli
enter
inc
cmc
das
pop
sbb
and
lock
mov
test
leave
sbb
js
inc
sarb
xchg
dec
jp
loopne
icebp
int
lock
and
sub
pusha
pop
cmp
mov
mov
test
and
loop
addb
dec
add
pusha
add
or
lock
fisttpll
lock
sbb
test
inc
enter
cmp
stos
inc
shlb
mov
xor
adc
lods
andb
divb
imul
mov
mov
sbb
mov
pusha
ljmp
in
cld
sub
xor
xchg
pop
ret
jp
inc
mov
out
mov
mov
push
mov
jnp
aaa
dec
cmp
or
inc
cmp
flds
cmp
inc
ret
cmc
aad
sub
sarb
andb
mov
adc
or
push
daa
adc
loopne
mov
shlb
pusha
mov
adc
mov
xor
sub
and
fs
fisttps
mov
xor
xchg
outsb
mov
repnz
push
lock
out
lret
pop
into
inc
sarb
aaa
mov
push
lret
adc
mov
adc
loop
decb
mov
icebp
mov
adc
jno
fs
sbb
andb
hlt
and
addr16
icebp
pop
movsb
inc
mov
push
or
loop
gs
and
shrb
loopne
pusha
pusha
shrb
test
sub
iret
sub
call
mov
shl
repnz
mov
and
rcrb
cmp
xor
lret
inc
xchg
mov
inc
jbe
std
scas
outsb
mov
loopne
adc
lret
inc
inc
out
xchg
xlat
mov
inc
sub
inc
push
inc
pusha
xchg
cmpsb
pusha
shlb
mov
add
mov
rcl
es
add
mov
mov
mov
mov
ljmp
aaa
je
xor
movsb
add
js
jecxz
fadds
inc
xor
in
sub
xchg
jbe
ds
inc
inc
enter
xor
xor
add
jno
mov
and
aas
push
lahf
dec
sub
sarb
std
mov
jg
pop
xchg
pop
push
jecxz
mov
inc
mov
pop
add
dec
pop
and
pusha
in
call
stc
push
and
sbb
andb
pop
jmp
push
push
pop
movsl
sahf
jae
aaa
add
pusha
loopne
xchg
ret
cmpsl
bound
xchg
cmpsb
addb
inc
sub
xchg
xchg
loopne
push
popf
imul
fcomip
mov
loopne
loop
cld
or
xchg
lods
inc
and
mov
shl
addr16
jecxz
pop
push
je
sub
mov
mov
cmp
mov
push
jg
pop
sbb
fmuls
jo
cmp
push
jb
and
and
xor
dec
repnz
lock
pusha
pusha
cmp
jl
scas
and
push
imul
jl
std
or
add
add
aas
mov
add
enter
and
out
fidivs
cmc
jbe
lock
lret
je
push
jo
add
scas
inc
mov
xor
enter
push
adc
dec
in
cld
fwait
loope
jl
shlb
mov
loopne
shrl
aam
shrl
cltd
test
mov
and
pop
push
cmp
and
pop
sub
arpl
jns
in
jge
pop
out
cs
inc
imul
test
inc
bound
and
addb
mov
les
sub
and
out
popa
mov
push
fwait
cwtl
loopne
xchg
xor
add
dec
sbb
push
sub
dec
xchg
mov
daa
jb
lds
dec
cld
rclb
dec
pop
push
lcall
daa
out
daa
push
test
pushf
mov
sbb
xor
jbe
adc
xor
mov
pop
imul
enter
cmp
and
scas
inc
shlb
and
call
cltd
scas
cmp
push
inc
dec
dec
cmp
jl
jecxz
jnp
and
in
inc
sar
movsb
add
lods
add
pusha
mov
xchg
push
inc
orb
loop
and
loop
lret
loopne
pusha
and
pop
sub
push
push
or
and
orb
and
cmp
pop
inc
jg
fs
pusha
mov
add
mov
icebp
testb
lret
xor
add
or
inc
sahf
mov
pushf
add
adc
pusha
loopne
inc
pusha
insl
jge
xchg
lahf
jns
push
pop
mov
inc
popa
mov
cmp
mov
arpl
js
scas
add
cmpsb
addb
and
cld
icebp
int
loopne
inc
andb
mov
pusha
pop
cmpsl
push
and
pop
inc
js
inc
push
fwait
rorl
xchg
adc
push
andl
iret
les
mov
pusha
dec
stos
sub
pusha
data16
jmp
pusha
rolb
add
lock
or
bound
jecxz,pt
ret
addr16
pop
std
and
in
lods
pop
popf
inc
arpl
or
jl
mov
shlb
loopne
xchg
sahf
pop
mov
mov
scas
loopne
icebp
andl
push
lods
les
pusha
pusha
cmp
cmpl
scas
sarl
dec
lcall
xorl
aaa
jbe
or
cwtl
jne
rcrl
lcall
inc
rcll
into
popa
pop
sahf
jo
cmpsb
loopne
mull
mov
inc
dec
push
cltd
mov
add
lea
call
mov
cld
fwait
cwtl
mov
pop
lods
add
ljmp
sub
mov
imul
aaa
andb
test
add
bound
xor
lods
and
leave
sbb
cvttps2pi
sarb
mov
popf
pusha
not
mov
mov
movsb
add
and
inc
aaa
aad
add
dec
popf
mov
sbb
and
scas
andb
loopne
nop
adc
adcl
add
xor
jle
sbb
mov
mov
pop
mov
paddw
outsl
sbb
and
ds
xlat
pop
adc
xor
les
mov
sub
rol
movsl
pushf
andb
mov
add
jbe
cmp
lret
adc
pop
mov
sub
add
scas
rol
add
jge
and
repz
sbb
jb
test
mov
mov
outsb
cwtl
jb
pop
xchg
and
lret
outsb
out
push
xlat
ret
andb
dec
mov
pop
dec
out
outsb
mov
dec
xchg
push
lea
aas
cmp
and
inc
pusha
mov
mov
lret
jp
int
stos
and
cld
jno
and
dec
fwait
xchg
js
es
loopne
ja
fistpl
add
pop
bound
inc
cmc
dec
ror
sbb
shrb
dec
rcll
mov
fs
sti
mov
fmul
mov
ljmp
dec
hlt
xor
movsl
aad
mov
lcall
push
stos
and
inc
leave
pop
cld
rcl
push
add
jno
and
fwait
xchg
or
rorb
andb
loopne
outsb
sub
mov
fldt
cmc
test
add
mov
sbbb
mov
subl
add
mov
subl
cmpsb
loopne
fbld
mov
mov
push
inc
and
sbb
sar
adcl
mov
leave
inc
rorl
pop
push
mov
scas
shlb
lods
inc
add
lock
inc
push
mov
rolb
rcrb
cmpsb
shl
je
daa
in
jmp
dec
negl
add
lock
inc
shlb
add
and
sub
add
adc
dec
sarb
dec
push
aad
mov
ja
pop
mov
gs
xlat
nop
in
aaa
cmp
inc
addb
and
into
mov
sahf
mov
xchg
stc
test
xor
das
or
loopne
mov
testl
mov
fisttps
xchg
lods
add
insb
mov
rcrb
loopne
int3
mov
xchg
clc
shlb
and
push
dec
push
mov
add
ror
ret
subl
inc
mov
les
aaa
aaa
outsl
or
mov
lret
add
xorb
fwait
xor
mov
sbb
fwait
add
lcall
fidivrs
shl
js
push
loopne
fldl
mov
inc
and
movsb
inc
pusha
bound
mov
jns
jmp
out
stc
mov
adc
sti
mov
xor
fstpt
jp
into
fs
in
adc
xchg
cmp
push
pop
push
shlb
ds
fsub
bound
pusha
add
movsb
inc
mov
jmp
jecxz
sti
and
dec
mov
jnp
leave
add
mov
inc
add
xchg
out
int3
jp
inc
add
dec
mov
add
pushw
add
mov
addb
mov
and
loopne
mov
sbb
add
rcll
xchg
movsb
loopne
pop
and
add
addr16
sbb
cmc
mulb
andb
mov
push
shlb
leave
mov
shlb
xchg
pop
bnd
pusha
add
mov
cltd
push
xor
in
addb
push
mov
insl
addb
jbe
jns
xchg
fisttpl
daa
shlb
inc
xorb
cmpsl
cmpl
push
jge
add
loope
add
aas
mov
mov
mov
insb
notl
add
pusha
xchg
mov
pusha
loopne
push
in
pop
and
dec
pusha
outsl
sti
cli
fisubs
jge
loop
popa
or
rol
adc
mov
and
cmpsb
and
lret
pop
mov
mov
sub
add
shll
pusha
insb
cs
add
stos
loopne
xchg
dec
adc
jge
int
cwtl
insl
icebp
jg
or
scas
loopne
xchg
pop
stos
add
and
cli
mov
pusha
andb
clc
outsb
dec
add
sbbb
dec
addl
inc
repnz
jmp
cmp
popf
or
push
andb
rcrb
push
inc
mov
push
lock
xchg
aaa
aad
mov
sub
lret
add
loopne
sub
cmp
test
imul
jge
jae
add
mov
loopne
sub
and
aaa
mov
jp
xor
sub
mov
lret
xchg
mov
insb
lea
andb
cmpsb
shlb
pop
cvtpi2ps
popf
sbb
xchg
mov
movb
add
repnz
mov
mov
inc
aad
jl
dec
or
cmp
push
sub
sahf
and
test
shlb
std
dec
inc
ror
fldenv
addb
les
jp
mov
sub
loopne
fstps
pop
jns
jae
xor
adc
mov
jp
stos
cmp
cwtl
mov
or
add
mov
and
pop
xor
or
sbb
xchg
in
and
in
adc
pusha
jno
and
and
pop
sub
outsb
dec
push
inc
loopne
add
mov
mov
mov
sti
out
dec
pushf
push
push
mov
jle
ret
cmp
int3
sbb
outsl
fmul
add
rorl
pusha
pusha
adc
xor
fsubs
inc
mov
daa
xorl
dec
loope
scas
fxch
sub
shrb
xchg
daa
dec
jmp
packuswb
pop
cwtl
in
sub
inc
and
fstps
cmp
mov
mov
test
push
test
mov
add
inc
inc
loope
and
inc
dec
in
dec
imul
out
push
jle
lods
inc
shlb
xchg
imul
in
jge
enter
cmp
addb
sbb
fwait
mov
mov
mov
push
or
iret
sub
fucom
lods
mov
insb
ss
dec
adc
popa
sub
data16
sarb
stc
shr
xchg
int3
pop
incb
mov
add
pusha
mov
fsubl
dec
aaa
adc
andb
add
mov
test
pusha
xchg
sbbl
aas
fs
pusha
and
aaa
mov
and
inc
sbb
cmp
ja
sbb
popf
mov
rolb
sarl
add
xor
pop
jne
xchg
sub
loopne
loopne
adc
das
jecxz
ds
pop
or
nop
pop
cmp
ret
mov
addb
xchg
dec
pusha
scas
inc
pusha
pop
ja
and
loopne
add
lds
loopne
sbb
inc
pop
outsl
adc
add
repz
xchg
flds
inc
pop
jbe
xchg
xchg
sbb
xor
jae
xor
popa
and
mov
lea
shlb
xor
loopne
shll
dec
mov
mov
gs
aaa
push
xchg
mov
inc
add
dec
lock
xlat
sbb
and
mov
js
pop
or
mov
mov
and
or
jl
add
xor
add
and
mov
scas
mov
outsb
push
popf
insb
push
and
inc
dec
jb
sbb
cmp
dec
mov
fcoml
mov
and
adc
mov
sbb
mov
aam
ficoml
hlt
cli
pop
sub
mov
jb
add
pusha
dec
sbb
lret
cmpsl
iret
test
add
sbb
mov
and
sub
and
shll
inc
add
cmpsl
push
pusha
and
pop
mov
xorb
jae
sbb
scas
and
movb
imul
cwtl
in
bound
ss
push
mov
inc
pop
lret
and
cmp
adc
add
or
inc
aas
pop
in
shr
mov
sub
mov
mov
cmp
and
lea
fildll
xchg
adc
je
push
mov
pop
aas
aaa
idiv
dec
inc
andb
icebp
xor
mov
fs
cwtl
xor
xchg
fwait
cmc
imul
add
xchg
dec
jl
ljmp
leave
cmp
mov
pop
push
and
cltd
scas
push
jle
sahf
mov
gs
movsb
and
cmp
shlb
rorb
lods
fnstsw
xor
and
shlb
loopne
mov
pusha
xor
shlb
in
xchg
daa
push
mov
add
mov
addr16
mov
les
xor
jno
mov
mov
rcrb
in
lods
push
mov
fsubrs
xchg
inc
pop
scas
and
or
daa
xchg
lds
or
add
push
loopne
rolb
adc
xchg
out
jne
push
loopne
js
mov
call
adc
aaa
push
pushf
arpl
dec
jp
rcl
mov
add
jmp
loop
andb
iret
sti
addr16
jg
loop
loopne
jmp
mov
push
es
out
mov
loopne
inc
add
inc
mov
aaa
inc
mov
int3
push
push
je
enter
pusha
mov
lock
andb
push
test
inc
loopne
shl
push
in
jl
jnp
aas
aam
clc
imul
xor
fptan
imul
fdivrl
loopne
pop
sub
fstl
addb
push
test
push
inc
mov
sbb
scas
inc
inc
jmp
mov
fdivs
loope
cmc
pop
jl
mov
lock
lods
fildl
std
in
pop
jl
addb
push
addb
xlat
xchg
add
lds
out
adc
cmp
or
mov
loopne
or
bnd
dec
add
andb
iret
popa
sbb
push
push
outsb
mov
add
nop
lea
repnz
sub
inc
cli
pop
enter
and
add
mov
cmp
imul
popf
fadds
adc
leave
or
inc
sub
pusha
fwait
movsb
inc
pusha
or
jp
stos
int
fidivrl
dec
nop
fstps
dec
mov
shrb
sbb
inc
inc
cmp
rcrb
insl
mov
pop
push
incb
xor
and
ds
mov
mov
jge
call
mov
loopne
mov
pusha
rolb
and
mov
fisubrl
fdivs
roll
in
jecxz
test
jge
and
shlb
icebp
fwait
cmp
sbb
je
add
or
mov
add
call
mov
pusha
mov
inc
cltd
add
loopne
pop
cmp
inc
or
xor
test
cwtl
stos
sti
mov
add
pop
frstor
pop
int
pop
mov
sti
test
mov
in
jge
xchg
fwait
outsb
or
cmpb
mov
add
inc
mov
jnp
into
push
add
mov
enter
inc
enter
sub
sbb
push
cmpl
sti
sub
pusha
ret
loopne
inc
xchg
adc
sbb
test
inc
xor
and
fstp
outsb
add
lock
ljmp
rol
mov
cmp
inc
mov
dec
ljmp
adc
and
inc
inc
rcrb
sub
inc
pusha
jmp
xchg
jnp
mov
repnz
and
add
mov
gs
add
in
lds
mov
into
pushf
test
mov
jge
adc
and
popf
mov
cmp
lcall
push
add
pusha
pop
adc
mov
cvtps2pd
cli
xchg
in
sahf
xlat
jnp
out
insl
lret
mov
lcall
inc
das
js
add
icebp
push
dec
push
sbb
cmp
adc
and
pusha
and
cwtl
lds
cli
and
lods
push
jne
or
add
mov
mov
add
sub
inc
clc
clc
xor
imul
inc
jle
adc
leave
inc
out
rol
mov
insb
out
popa
arpl
loopne
jne
xchg
neg
and
dec
sbb
xchg
sub
inc
mov
cmc
push
mov
xchg
repz
inc
push
add
mov
mov
addl
das
cmp
cld
xchg
lods
and
pop
add
cld
jle
outsb
adc
mov
out
mov
insl
sub
and
decl
sbb
inc
icebp
xchg
sbb
repz
fwait
and
mov
mov
xlat
sbb
stos
js
fs
sbb
add
lds
mov
lds
adc
cwtl
xchg
xor
je
xor
insb
cmp
lods
pusha
inc
pop
xchg
inc
mov
jb
lods
ss
push
push
ficoml
xchg
and
add
xor
rol
pop
jno
push
in
fldt
mov
inc
shlb
mov
fldl
or
jp
mov
sub
mov
jge
bound
add
add
out
sub
mov
push
inc
inc
mull
rolb
addl
loope
cmp
xor
and
clc
inc
add
add
mov
ret
add
lods
xor
fwait
clc
testl
pop
pop
sub
add
pusha
popa
mov
loope
jecxz
fwait
mov
addb
mov
dec
add
jle
cld
xlat
ljmp
mov
sbb
and
xchg
xor
sub
adc
loopne
xchg
jno
loopne
insl
jmp
xor
mov
loopne
and
xor
jge
fildll
jle
loopne
in
icebp
pusha
ja
stc
sti
ja
sub
cmp
sub
pop
push
in
insb
mov
andb
fwait
mov
scas
mov
or
js
sub
pusha
int3
cmp
cwtl
insb
or
and
push
sbb
jne
outsl
push
mov
cltd
xchg
stos
aas
mov
movsl
xchg
add
loopne
or
jp
iret
test
and
jb
test
and
pusha
and
adc
mov
cld
iret
xchg
or
mov
imul
and
cmp
gs
dec
ret
cmc
mov
andb
add
push
mov
inc
xchg
jno
scas
andb
or
repnz
xchg
vmread
add
cmc
add
shlb
cmc
cmc
jno
push
arpl
xchg
sub
loopne
inc
test
lret
rolb
shlb
ljmp
sbb
out
andb
dec
mov
lods
addb
pop
pause
and
inc
adc
and
shrb
xlat
aaa
into
std
cmpsl
mov
loopne
mov
inc
dec
movsb
rolb
mov
add
jns
or
pusha
cmp
sti
push
test
add
xlat
outsl
push
pop
xchg
mov
mov
fdiv
push
xchg
jb
xchg
fst
mov
sub
inc
xchg
push
popa
pop
les
lods
in
inc
mov
mov
jb
inc
mov
adc
rorb
jle
mov
add
pop
pop
out
mov
push
mov
jns
mov
push
fwait
roll
or
push
aaa
loope
add
sti
fisttps
loopne
inc
and
mov
inc
fnstsw
fcoms
mov
inc
xorb
fmull
imul
test
inc
jge
sub
andb
xchg
adc
mov
sahf
xchg
dec
sub
loopne
pusha
mov
fs
inc
push
sbb
xchg
cmpsb
and
fs
shl
into
inc
cwtl
insb
mov
test
xchg
push
pusha
and
fldenv
xorl
mov
nop
lock
std
sbb
int3
xchg
pop
scas
and
ljmp
inc
stos
out
cmp
and
push
xor
dec
cli
mov
in
stc
and
pusha
xor
sub
inc
push
bound
xorb
rol
hlt
add
pusha
negl
inc
xorb
xchg
jp
jecxz
mov
dec
cwtl
add
and
and
mov
call
fdivr
divl
inc
testl
pop
and
test
dec
das
and
shl
fadds
shlb
outsb
push
xchg
pop
xchg
scas
inc
pusha
fbstp
cmp
fnsave
pusha
dec
dec
imul
xchg
cmpsl
int
pop
repnz
add
pop
mov
adc
div
jae
dec
and
sub
adc
mov
into
cmpsb
add
aaa
or
loopne
in
mov
jno
sub
pusha
cli
mov
nopl
sbb
sbb
out
push
mov
mov
push
add
pop
push
insl
movsl
adc
sbb
out
insl
push
stos
add
pop
ds
mov
mov
popa
rol
dec
mov
fisubrl
mov
xchg
fildl
pop
jle
out
arpl
pop
sti
inc
sub
mov
jb
icebp
pcmpeqw
mov
enter
and
ljmp
test
mull
mov
dec
scas
pusha
loopne
pusha
shlb
js
out
insb
sub
mov
rclb
dec
push
call
loopne
add
add
cmpb
ficompl
fbld
inc
pop
adc
inc
sub
pusha
jae
xor
addb
mov
mov
cs
loopne
cmp
or
dec
out
test
sbb
loopne
dec
les
lods
addb
adc
xchg
shll
out
int
lcall
inc
xlat
mov
orb
xchg
rsm
add
ror
mov
xor
loopne
mov
cmc
cmp
add
mov
sub
testl
scas
andl
loopne
mov
cmpsl
pop
ficomps
clc
scas
loopne
dec
adc
fsubl
scas
mov
mov
xor
addb
xor
ror
lea
and
mov
loopne
jne
and
add
add
and
aad
cwtl
rcrb
and
mov
jecxz
scas
add
std
fsubrs
cmp
stos
add
mov
fisubrs
ret
add
fisttps
and
sub
inc
arpl
inc
dec
sub
and
inc
jg
xor
jle
sub
lock
jg
pop
loopne
je
and
sti
xchg
xor
jl
leave
sbb
inc
inc
addr16
and
scas
mov
xchg
aam
incl
and
inc
add
xchg
movsb
loopne
shl
loopne,pn
fstps
rcr
xchg
sbb
maxps
cmp
push
jg
adc
mov
loopne
adc
push
inc
and
pop
cmp
testl
and
lods
add
jns
xor
fsts
lock
loopne
clc
fimuls
cmc
mov
lret
lock
aas
cltd
out
sub
xchg
push
movsl
pop
test
inc
xchg
daa
mov
push
dec
mov
pusha
je
dec
add
mov
dec
aaa
xchg
inc
mov
and
pop
test
mov
loopne
movsb
andb
rcrb
xchg
fnstenv
jge
dec
nop
jge
jp
mov
clc
popf
shr
mov
inc
sub
shl
into
aad
fwait
push
mov
stos
test
pop
mov
push
nop
pusha
xor
pushl
mov
das
leave
test
add
sti
pop
inc
scas
ret
push
inc
mov
dec
inc
mov
xchg
sbb
cmp
aas
mov
sbb
ljmp
mov
in
fsubl
nop
sbb
jecxz
inc
mov
sbb
inc
inc
cmp
mov
jno
arpl
rcrb
adc
scas
pusha
mov
les
push
push
lods
mov
mov
cmp
sti
xor
cmc
movb
insb
lds
sub
mov
pusha
in
sti
lea
add
sarb
repnz
sub
sbb
adc
jno
inc
sub
iret
hlt
addb
xchg
push
addb
aaa
mov
push
cmp
stos
sti
xor
loopne
push
xchg
clc
std
xchg
gs
movsb
mov
jp
mov
rolb
dec
sbb
call
lods
pop
push
push
mov
addb
test
or
adc
push
add
fdivrl
jle
or
dec
sbb
add
mov
sar
movsl
push
mov
orl
adc
pushf
int
jmp
andl
xor
inc
bnd
data16
loopne
call
xchg
push
mov
movsb
add
addb
dec
adc
mov
pop
or
pop
push
xchg
adc
xor
nop
jnp
xchg
sub
add
jae
addb
and
outsb
lds
andb
push
add
dec
hlt
lea
add
mov
lcall
add
dec
mov
scas
add
out
mov
shl
aas
sbb
inc
imul
push
outsl
les
cmpsb
and
mov
imul
enterw
rcrb
jnp
inc
sub
loopne
or
mov
jnp
cmpsb
mov
shr
pop
cmp
jb
sub
fisubl
and
int3
stos
andb
shlb
mov
loopne
or
sbb
and
stc
dec
movsb
and
sub
inc
lahf
clc
pop
cmpsl
loope
add
mov
enter
xchg
sub
adc
dec
xor
mov
daa
or
out
xor
and
lcall
and
cwtl
sti
add
shlb
inc
decb
and
inc
jno
push
xchg
mov
adc
js
incb
sub
add
and
inc
mov
mov
push
loopne
popa
std
mov
sbb
popa
aas
inc
inc
mov
and
jmp
jne
add
ljmp
stos
addb
mov
add
inc
dec
movsb
shlb
stos
add
xchg
sarb
sbb
scas
mov
xor
aad
add
pop
in
icebp
movsl
fsubr
inc
lret
xchg
icebp
dec
xchg
sbb
inc
and
inc
jmp
daa
xor
addr16
jo
outsl
test
and
adcb
xchg
hlt
push
adc
repnz
jl
sbb
push
mov
loopne
and
cmp
or
andb
xchg
cmp
dec
adc
loopne
push
push
mov
inc
rcl
outsb
add
sub
loopne
mov
mov
adc
and
loope
iret
shlb
dec
push
or
sahf
jmp
lods
pusha
sarb
addb
cld
push
cli
mov
loope
add
mov
xchg
mov
call
xor
mov
ss
inc
movl
pop
popf
pop
inc
push
fdivrl
ret
mov
cmpsl
je
clc
xor
pop
jecxz
loopne
daa
loopne
adc
xchg
clc
mov
test
mov
test
movb
shl
xor
adc
xor
add
mov
loopne
xchg
pop
mulb
xchg
cmpsb
and
add
inc
inc
cld
jne
lcall
cmp
fisubrl
popa
out
mov
inc
cmpsb
loopne
jnp
aad
push
aas
add
and
addb
sub
fdivrl
mov
inc
mov
and
and
insb
sbb
iret
lcall
testb
stos
pusha
rorb
mov
rcr
imul
orb
rolb
je
cmp
jno
addb
divb
pop
dec
fs
in
insl
pop
xchg
mov
lds
add
mov
push
adc
inc
mov
or
loope
add
fnstenv
or
mov
bound
fwait
jae
adc
mov
mov
add
insl
jg
rclb
movsl
inc
ljmp
mov
cmpsl
add
dec
push
cld
stos
mov
mov
pop
lods
adc
jne
xor
add
loopne
and
data16
fsubrl
pushf
inc
rcl
in
adc
inc
imul
cld
neg
or
enter
add
sbb
inc
adcb
sub
and
repz
xchg
mov
or
jg
mov
cmp
inc
add
fnstsw
lock
outsb
out
inc
xor
int
loopne
or
push
shlb
mov
lock
nop
repnz
add
dec
pop
enter
addb
add
inc
mov
inc
add
jbe
sti
lods
push
out
cmp
ret
add
and
and
adc
mov
pusha
xlat
xor
cmp
andb
pusha
mov
pusha
fs
in
jp
pushf
std
imul
and
fdivrl
fbld
mov
jge
js
jbe
fnstsw
pushf
adc
push
adc
rcrb
add
jle
cltd
push
movsb
addb
incb
rolb
mov
xlat
cmp
loopne
or
in
dec
add
add
scas
mov
ret
or
addb
imul
cmp
adc
outsl
add
mov
cwtl
jno
dec
xchg
mov
in
int
loopne
sbb
rorl
xor
inc
sar
mov
loope
inc
sub
aam
mov
xor
jmp
add
sub
cwtl
and
or
sub
xorb
and
rolb
and
or
lds
sbb
or
fstps
in
mov
push
or
pusha
stos
pushf
adc
mov
in
jecxz
add
xchg
lcall
mov
mov
mov
push
mov
aad
dec
jecxz
ret
movsb
loopne
xchg
xchg
les
mov
add
pop
mov
in
int3
adc
xor
lret
cmp
into
es
pop
pop
es
loopne
out
mov
bound
add
rorl
clc
ss
mov
and
gs
sbb
inc
inc
aas
jbe
add
rolb
loopne
inc
cli
jmp
add
inc
shlb
mov
mov
mov
push
inc
stos
imul
test
mov
out
push
mov
sub
jbe
mov
inc
pusha
jnp
and
lahf
jae
dec
add
mov
jmp
sub
shrl
inc
loopne
loope
ja
rorl
loopne
jb
jmp
ljmp
ja
scas
cmp
sub
rorb
lock
test
orb
sbb
inc
jae
shlb
ret
jno
fsub
rcrb
push
xor
adc
cld
popf
pop
ret
lds
mov
pusha
loopne
nop
xor
sbb
add
xchg
aaa
dec
mov
pusha
push
or
pusha
cmp
lret
xchg
mov
repnz
daa
dec
jmp
pusha
add
movsb
add
cmpb
in
inc
loopne
fstpt
aad
and
pop
ret
ja
inc
inc
mov
andb
cmp
add
loopne
adc
pop
repnz
ja
dec
sbb
sub
rol
das
sbb
jmp
xor
push
jmp
mov
loopne
and
and
ret
loopne
mov
enter
sbb
jb
stos
inc
and
test
loopne
shl
inc
and
and
push
mov
sub
int3
jp
loopne
sbb
fsts
mov
adc
movl
sub
dec
jnp
mov
mov
jle
sbb
sar
fildll
loopne
pop
sbb
sbb
add
in
enter
and
jl
rolb
addr16
pop
jl
jp
je
pusha
orb
mov
push
push
pop
out
cmc
jg
pusha
rcrb
and
inc
and
mov
addb
dec
daa
or
dec
sub
and
inc
mov
in
mov
add
mov
lods
andb
add
loopne
and
pusha
fiaddl
leave
sbb
shlb
andb
or
inc
sbb
or
andb
add
fcmovnbe
push
mov
movsb
add
popa
sub
lret
or
pusha
insl
xor
imul
sbb
inc
inc
sarl
push
jge
mov
add
insb
dec
pop
sbb
jmp
inc
jno
or
or
add
and
or
int3
lahf
sub
add
in
faddp
shr
pushf
push
lcall
dec
pop
repz
xchg
bnd
or
addr16
add
xchg
imul
pop
scas
inc
and
sub
or
loopne
rolb
and
loopne
jp
push
loopne
stos
mov
in
mov
cwtl
or
movsb
and
push
mov
add
adc
sub
scas
push
adc
shl
aas
inc
inc
out
mull
ret
push
dec
pop
test
icebp
call
xor
mov
add
sbb
pop
or
pusha
adc
jne
repnz
pushf
rolb
pusha
out
dec
rcll
jb
inc
add
add
enter
sub
mov
pop
push
in
jae
pop
daa
xchg
dec
roll
or
pusha
scas
cld
pop
and
out
pushf
push
icebp
mov
loope
rclb
cmc
inc
jno
pusha
inc
psrld
xchg
sbb
cmpsl
hlt
push
jmpw
in
and
mov
add
inc
pop
cld
inc
push
pusha
mov
icebp
dec
mov
xor
movsb
add
add
subb
gs
mov
enter
pushf
and
sub
and
mov
sahf
jle
or
loopne
ja
cmp
vpsubq
jo
addb
cli
mov
pop
mov
inc
insl
mov
pop
adc
mov
and
in
adc
fsubrs
jle
fidivrl
sahf
jp
mov
shlb
add
rorb
dec
sahf
and
fcompl
rclb
add
cmp
adc
scas
and
das
push
into
cmpsl
sbb
fwait
dec
js
mov
pop
xchg
xchg
mov
inc
daa
ret
lods
inc
and
int3
or
test
pusha
lcall
stos
dec
mov
add
scas
and
dec
inc
mov
xor
loopne
mov
push
mov
repnz
mov
shlb
loopne
fdivp
jnp
fsubrl
sbb
ds
fs
or
out
mov
pushf
fdiv
loop
xor
sahf
add
xor
push
mov
mov
loopne
ficompl
and
stos
bswap
cwtl
subl
pop
push
mov
jo
out
lods
shl
add
pop
mov
loopne
insb
adc
jmp
mov
push
leave
cmp
inc
addb
dec
pop
sub
inc
lods
lret
sbb
mov
addb
xlat
ret
cmp
xor
add
rolb
daa
mov
add
mov
and
lods
add
add
rorb
sbb
add
lods
inc
adcb
mov
xorb
xchg
sarb
and
cmpsl
rorl
loopne
sbb
sub
and
push
mov
stos
mov
test
add
ds
andb
pusha
subb
jbe
loopne
shrl
add
and
shrl
and
sahf
sti
and
shlb
pop
xchg
loop
fistps
xchg
ret
mov
mov
add
add
pusha
xor
out
je
out
and
and
and
mov
add
sar
and
test
pusha
jnp
insl
testl
test
loopne
and
push
fadds
int3
adc
add
inc
pushf
mov
sbb
mov
jp
cmp
out
rolb
ret
and
ds
mov
cli
mov
inc
mov
and
dec
aad
inc
cmpb
pusha
mov
pusha
mov
xor
cmp
movsl
push
adc
cmp
shlb
pusha
add
xchg
dec
cmp
jb
lcall
xor
loopne
fiadds
fucomip
int3
xchg
cmp
adc
jl
loopne
mov
pop
pop
ds
out
push
jno
pop
aas
bound
lcall
loopne
push
scas
mov
adc
or
rclb
xor
shl
ret
mov
pop
dec
and
loopne
insl
add
je
push
mov
jns
popa
je
jecxz
push
adc
push
jmp
sub
stos
xchg
push
mov
ja
add
iret
ja
pop
mov
jl
cmp
add
or
jno
leave
add
mov
dec
shl
xchg
cmpsb
add
rorl
jl
mov
mov
pusha
std
dec
adc
mov
ror
or
out
sub
mov
test
pusha
sbb
loopne
xchg
inc
xor
je
cmpsb
shlb
inc
xchg
add
loopne
add
jbe
imul
repz
loope
push
mov
into
cmpsb
add
xchg
repz
xlat
ret
hlt
add
out
and
inc
sub
fcoml
test
pusha
pop
dec
fs
inc
mov
lds
push
in
pop
enter
andl
andb
add
push
in
movsb
and
cltd
pop
xor
mov
pop
loopne
enter
andb
popf
add
add
sub
pop
fdivl
sarb
inc
mov
add
cmp
adc
repnz
dec
inc
add
loopne
outsl
enter
add
pusha
and
lods
loopne
inc
addb
jg
mov
xor
inc
popa
inc
daa
clc
jp
mov
rolb
scas
and
es
mov
inc
add
outsl
nop
xor
divb
inc
fdivl
mov
adc
ljmp
jle
mov
xchg
cld
xchg
adc
stc
jle
xchg
mov
adc
fldenv
inc
adcb
push
add
and
rclb
inc
inc
pusha
adc
jmp
repnz
adc
push
push
pop
fs
add
aas
cmp
mov
add
ja
push
dec
outsl
inc
mov
andl
fs
loopne
push
and
and
loopne
pushf
mov
pop
sub
dec
out
mov
fisubs
push
xchg
fsubp
ret
jae
lea
scas
sub
loopne
xchg
loop
addb
or
loopne
repnz
jns
or
lret
sbb
sbb
or
xchg
cmc
push
and
testl
lcall
mov
pop
lods
sub
and
and
and
pusha
pusha
mov
jmp
stos
and
shl
das
data16
insb
in
shr
pop
dec
jp
js
out
push
jmp
xchg
lret
and
mov
rcl
inc
dec
mov
in
andb
loopne
inc
repz
loopne
or
loopne
jb
das
xor
loopne
jg
inc
cmpsl
stc
adc
add
pusha
lea
arpl
stos
and
or
rcr
mov
loopne
inc
jne
imul
ret
outsb
in
push
nop
fnstsw
shrl
mov
dec
js
aas
push
mov
xchg
in
adc
jns
push
das
add
mov
jns
add
xorb
xor
fldlg2
xor
pusha
add
andb
mov
add
and
rol
rorb
mov
adc
leave
mov
shl
test
adc
adc
sub
and
pusha
subb
xchg
jnp
rol
aam
add
add
insb
repz
inc
mov
sbb
out
addb
bnd
popa
mov
sub
add
rolb
orl
fisubs
xlat
mov
pop
mov
andb
andb
cmp
jmp
inc
jbe
cli
sub
mov
loopne
fwait
shll
test
dec
dec
outsb
lock
addb
pop
xor
sub
loopne
push
inc
add
jmp
xor
mov
push
xor
lcall
loope
add
mov
imul
pusha
mov
dec
cmpsl
jge
les
sbbb
mov
add
sub
imul
fnstcw
jmp
mov
fs
mov
cmp
dec
pop
aam
xchg
add
pusha
sub
andl
add
stos
mov
mov
inc
pusha
ja
lret
adc
out
or
lret
pop
lcall
dec
inc
test
mov
shlb
push
int3
xor
movsb
shl
cmc
addb
shrl
pop
outsl
sub
rcrb
mov
loopne
adc
pusha
lock
es
push
lods
pusha
sbbb
dec
daa
inc
xor
mov
jle
mov
xchg
outsl
insl
in
xchg
inc
xchg
loop
addb
dec
lock
in
mov
add
xchg
add
and
fs
pusha
loopne
mov
fadd
sahf
pusha
js
stos
add
leave
pushf
push
stos
loop
mov
mov
cmpb
mov
sbb
js
adc
lcall
shrl
pusha
mov
mov
pusha
inc
cltd
adc
mov
sbb
icebp
jae
loopne
into
sbb
cs
loopne
cmpxchg
cwtl
aaa
sub
and
vpsllvq
sbb
jl
ret
sbb
push
pop
pop
and
xchg
jne
jne
lahf
dec
outsb
lds
out
xor
int
xchg
and
popf
aas
cmpsl
fiaddl
cltd
int
xchg
add
pusha
sbb
pusha
mov
adc
cltd
pop
int
les
push
push
add
add
lods
mov
pusha
cmp
enter
movb
cli
in
adc
adc
push
shlb
mov
push
sbb
pusha
mov
ljmp
xchg
xlat
data16
pushf
test
shrb
sbb
mov
shll
sbb
adc
adc
add
addb
add
adc
hlt
movsl
testl
jb
rolb
inc
lahf
inc
pop
adc
dec
add
lods
jns
out
out
inc
cld
jno
scas
repnz
pushf
ja
xchg
aad
inc
inc
test
sbbb
dec
jbe
or
dec
push
nop
mov
insb
push
outsb
sub
xor
push
int
adc
loop
mov
xchg
pop
mov
add
notl
stos
loopne
mov
adc
sub
sbb
xchg
inc
popf
and
mov
ljmp
add
xchg
xchg
adc
outsl
nop
mov
loopne
jo
stc
mov
adcl
insl
jl
pop
and
inc
xchg
xor
mov
inc
dec
addr16
bound
fiaddl
inc
mov
jge
movsl
or
xorl
jae
in
cmp
add
and
pusha
xor
pusha
shlb
aas
pop
mov
adcb
pop
cld
leave
out
mov
divb
jb
push
push
cli
or
pop
mov
pop
mov
xor
xor
leave
cmp
adc
sarl
fwait
shrl
stc
sbb
inc
add
loopne
popa
cs
loopne
roll
shlb
mov
and
jg
cwtl
xchg
lahf
imul
add
pusha
and
loopne
or
xor
jb
loopne
adc
jb
rolb
sub
std
lcall
inc
inc
mov
daa
sub
mov
popa
cmp
jae
and
ss
lret
fldcw
mov
es
in
inc
cltd
pusha
jb
jecxz
inc
mov
lock
loope
ret
repz
in
inc
rcrb
mov
iret
idivb
push
cmp
push
ds
test
add
mov
add
cli
push
test
inc
rep
add
or
or
xorb
and
pusha
shlb
mov
add
jl
fidivl
mov
xchg
pushf
xchg
mov
adc
pusha
and
sbb
mov
or
pusha
inc
movsb
add
je
popa
inc
cmpsb
addb
adc
ror
mov
divl
gs
mov
inc
add
out
mov
and
or
movsl
adc
sarb
cmp
mov
xor
jp
xlat
popf
push
dec
inc
add
arpl
loope
and
pop
std
ror
pop
xor
push
jmp
adcb
addb
es
push
test
xor
loopne
std
lahf
xchg
iret
or
inc
inc
loop
popf
stos
andb
hlt
cmp
pop
cmp
add
xchg
sub
insl
test
loopne
clc
cmp
fnstenv
aas
sbb
rclb
add
adc
fstl
push
xor
in
addb
loopne
aaa
call
mov
andb
xchg
adc
lcall
and
sbb
push
loopne
in
addr16
andb
push
inc
and
out
call
or
loopne
ret
call
mov
lock
push
pop
mov
inc
and
pop
mov
jb
shl
jno
cmp
rcll
sti
sbb
cltd
add
popf
mov
andl
iret
adc
push
xor
test
add
jmp
jg
lea
dec
test
mov
inc
inc
xlat
jns
ds
ret
scas
rolb
outsb
mov
push
pusha
cmpsb
inc
pusha
hlt
xchg
add
shlb
in
ss
nop
enter
or
out
inc
repnz
cli
sbb
int3
and
lods
push
jl
sub
inc
push
xchg
xchg
push
xor
insl
adc
das
sbb
and
rcrb
mov
mov
sub
insl
int3
popa
cmpsb
add
pop
jb
shlb
hlt
cwtl
adc
cld
add
rcl
jg
pusha
inc
nop
and
inc
adc
pusha
add
and
and
mov
inc
mov
mov
cmpsb
and
fldenv
dec
addb
mov
cmp
pusha
or
jb
inc
inc
cmp
jmp
in
pop
sar
loopne,pn
jecxz
add
adc
loope
xor
and
inc
push
xchg
fisubrs
aam
add
iret
pop
enter
pusha
arpl
ds
cmc
mov
cmp
loopne
mov
jmp
addb
cld
and
inc
fstpl
test
jg
mov
add
cmp
jl
jg
jns
jns
rcll
in
nop
cltd
rclb
pushf
cmpsl
popa
or
orb
frstor
inc
sbb
mov
hlt
mov
inc
testl
sbb
stc
lret
outsb
lds
daa
pushf
xor
lods
aad
or
cwtl
jmp
jnp
mov
int3
inc
push
sub
push
xchg
cli
fcom
mov
pusha
out
dec
pop
int
jge
pusha
or
inc
mov
sarl
push
and
cmp
cli
mov
andb
insl
pop
mov
xorb
pop
rcll
loopne
inc
cmp
and
and
and
add
test
push
jecxz
cmp
leave
and
and
ljmp
je
in
fstps
mov
inc
pop
adc
jecxz
aam
bound
fiaddl
out
shl
mov
shlb
inc
inc
out
xchg
sbb
mov
adc
add
mov
aas
sarl
pusha
pusha
out
xor
ds
inc
mov
imul
xor
ret
shlb
inc
mov
repnz
subb
pusha
loopne
test
sbb
inc
ja
add
adc
js
mov
add
subb
loopne
ss
sbb
in
xor
add
inc
imul
mov
push
cld
adc
add
movsb
mov
loopne
lcall
add
mov
lret
pop
mov
outsb
add
and
int
or
jl
mov
mov
shlb
addb
in
inc
fistps
pop
fstpt
ret
cmp
loopne
imul
mov
and
or
and
dec
push
mov
and
add
fwait
dec
negb
mov
fstpl
mov
or
jg
ror
and
out
xorl
ret
mov
inc
lods
inc
and
jnp
out
xchg
jle
pop
push
rorb
pop
and
add
xchg
mov
jmp
into
adc
or
push
outsb
jmp
bound
xchg
std
xchg
sub
and
cwtl
xor
mov
inc
rcrb
inc
dec
push
mov
sub
inc
imul
in
roll
arpl
pusha
loopne
outsb
mov
fmuls
pusha
mov
out
ja
rolb
push
adc
jb
cmp
and
or
loopne
andb
push
mov
mov
pusha
add
shr
nop
add
adc
fucomip
xor
sbb
roll
loopne
ljmp
dec
in
mov
mov
sar
inc
into
gs
mov
sub
andb
stos
addb
xchg
pop
xor
cmpsb
and
xchg
pusha
out
fistl
movsl
dec
stos
loopne
sbb
xor
add
out
inc
lods
in
test
add
add
int
movsl
jecxz
pop
and
inc
out
clc
imul
dec
and
push
lret
popa
rolb
adc
xchg
push
xor
add
push
cmpsb
mov
into
push
or
mov
adc
mov
push
add
mov
push
daa
pop
mov
mov
dec
cli
das
clc
fldenv
shld
rolb
shr
je
jns
and
mov
pop
scas
rolb
and
jmp
lahf
sahf
js
test
stos
in
mov
mov
mov
in
ror
add
mov
andl
fs
mov
sbb
out
mov
andb
dec
xchg
lea
mov
fsubr
lcall
add
in
xor
mov
lods
rolb
insl
sbbl
out
fstpt
test
icebp
pop
add
rorb
sbbb
jno
loopne
addb
pusha
inc
mov
cmp
fadd
or
add
jle
pusha
and
mov
push
jg
add
inc
and
scas
lods
loopne
xchg
ds
fs
pop
xchg
imul
mov
rolb
sarb
push
pop
pushf
stos
shl
mov
inc
ret
xchg
lods
repz
mov
or
scas
fisttpl
loopne
and
inc
imul
addb
sarb
sub
inc
jl
addb
cs
orb
jns
scas
inc
loopne
fwait
xor
shlb
push
dec
arpl
pusha
shll
push
pusha
cmpb
call
js
fsubr
xchg
jb
jl
cmp
dec
or
and
fstps
jb
pop
cmpsl
fs
adc
push
pop
add
and
dec
rep
rolb
adc
mov
pop
add
xor
shlb
shl
mov
inc
scas
inc
and
dec
jo
mov
adc
xchg
xor
push
jae
addb
add
andb
lcall
int3
aaa
insb
sbb
cli
dec
pop
dec
rolb
shlb
and
add
sbb
cmpsl
dec
mov
jno
out
xor
andb
pop
repnz
sbb
jmp
sbb
outsb
cld
push
inc
aaa
js
xchg
pop
ret
sub
stc
hlt
imul
sub
add
rol
addb
jmp
pusha
in
dec
cmp
scas
pusha
pusha
xor
fstpt
mov
mov
dec
dec
int
insl
push
hlt
cmp
iret
rol
fisttpl
dec
dec
mov
mov
inc
cld
mov
cmpb
shr
in
push
and
add
fwait
nop
inc
popf
xchg
dec
xchg
sub
popf
lcall
popa
inc
mov
mov
and
and
mov
inc
cmpsl
jbe
idivb
clc
addl
es
cltd
hlt
arpl
xchg
pop
cmp
dec
mov
icebp
push
lods
pusha
mov
and
pusha
cmp
test
inc
mov
loopne
push
fsub
data16
popl
inc
pusha
mov
shlb
pop
out
mov
iret
ss
out
loopne
add
pusha
dec
push
dec
jmp
jae
xchg
or
cmp
lock
das
adc
mov
inc
fidivrl
xchg
pop
and
add
xor
mov
xchg
jo
dec
hlt
frstor
mov
pop
jecxz
stos
pop
aas
pushf
sub
inc
dec
scas
inc
loopne
and
rolb
mov
cltd
sub
and
fdivrs
lods
pusha
mov
sbb
addb
inc
lods
inc
add
pushf
push
xchg
pop
pusha
pusha
jb
pop
adc
pusha
mov
loopne
sbb
fcomp
fldl
andb
shl
inc
adc
inc
dec
popf
and
mov
mov
jae
rolb
add
out
inc
pop
push
xor
test
rorb
cmp
lret
and
gs
mov
pop
cmp
in
cli
rcr
lahf
sub
loopne
sahf
jb
or
shll
ror
mov
xchg
das
orl
fstl
sbb
lock
aad
adc
enter
mov
add
insl
add
mov
and
mov
mov
push
jle
push
repz
mov
add
shl
sbb
loopne
inc
loopne
inc
xorl
mov
inc
pop
add
shll
loopne
or
arpl
addb
sub
add
popa
push
out
and
adc
push
mov
jae
popa
jge
lret
inc
mov
movsl
fdivl
imul
xchg
jb
int3
stc
adc
les
pop
out
fdivrs
cmp
add
sub
pusha
nop
lds
mov
mull
inc
jecxz
lcall
mov
pusha
pusha
push
or
pusha
mov
and
pusha
add
lds
nop
push
dec
jno
jo
and
bound
andb
rorb
je
mov
lods
and
mov
jns
data16
mov
mov
xor
and
loopne
popa
add
ja
sbb
data16
mov
mov
add
das
repz
sub
xor
imul
xor
sub
add
inc
cwtl
stos
arpl
in
push
mov
das
mov
mov
inc
push
mov
cmp
divb
roll
and
add
pusha
cmp
ret
sbb
pop
scas
andb
or
mov
rcl
and
sub
sarb
shrb
rolb
and
lds
jbe
sub
add
adc
jl
sbb
inc
xchg
jle
sub
loopne
mov
out
sbb
lock
inc
jno
arpl
pusha
inc
xchg
jp
and
enter
mov
shrb
movsl
dec
addb
stc
aad
shrb
loopne
into
leave
cmp
and
mov
add
mov
push
aad
xchg
ds
add
loopne
jp
cwtl
testb
add
hlt
cmp
xchg
fmuls
outsl
cmpsl
mov
mov
push
inc
loopne
je
shl
shll
or
lods
rol
mov
shr
nop
leave
sti
les
outsl
arpl
dec
in
fimull
loopne
je
pop
inc
dec
ljmp
loopne
and
jns
add
int
vmread
loopne
adc
sti
jmp
loopne
cmpsl
das
push
pusha
out
test
shl
inc
pusha
inc
dec
push
adc
add
cli
add
inc
sahf
mov
bnd
cmpl
ror
add
mov
jb
stos
pusha
rorb
mov
add
loopne
out
sub
dec
fs
inc
out
fwait
roll
xor
mov
addb
and
fcoml
xchg
ss
jmp
mov
xchg
movsl
or
mov
hlt
ljmp
dec
addb
xchg
sub
addr16
mov
jo
imul
int3
and
dec
bound
leave
movsb
inc
loopne
out
cmp
jae
cmp
adc
ret
mov
dec
fxch
lds
sbb
dec
sti
subl
out
mul
stos
out
pop
mov
ds
sti
repnz
in
push
mov
hlt
ds
int3
stc
sbb
xchg
pop
aas
or
add
and
xor
rolb
fmull
in
gs
js
mov
pusha
cmp
rolb
aaa
push
jecxz
cmp
shlb
fs
in
pop
inc
mov
xchg
mov
xchg
int
outsb
jg
dec
mov
rcl
hlt
fbld
stc
mov
loopne
arpl
add
push
aam
ss
mov
test
test
rcll
pushf
lock
fbld
andb
arpl
in
jecxz
loop
mov
stc
fwait
ja
mov
pusha
lods
and
loopne
loope
fnstcw
pusha
lret
pop
adc
popa
xchg
lock
cli
test
jp
dec
outsl
add
sub
gs
cmp
and
add
or
sarb
cmp
or
cmp
jns
out
xchg
xchg
mov
or
xchg
jns
popf
push
push
cld
stos
loopne
or
sub
iret
xchg
sarb
mov
call
mov
sbb
and
lret
mov
movsl
push
dec
popa
stos
enter
fsubr
into
push
insl
and
pusha
std
adc
aam
inc
pusha
mov
call
or
bound
push
mov
aad
stos
andb
mov
pushf
sbb
test
aaa
adc
test
lret
in
or
cmpb
and
ret
mov
loopne
sub
and
and
add
push
dec
mov
sub
mov
ret
sub
arpl
pop
dec
out
fldt
push
shl
mov
pusha
add
popl
inc
lcall
sti
add
adc
shl
daa
cmc
stos
loopne
dec
aas
push
dec
test
popa
cmp
push
in
push
rolb
sub
out
mov
lret
lahf
xchg
mov
jno
lcall
lahf
ret
das
loopne
inc
adc
cmp
jmp
inc
movsl
mov
repnz
push
pop
fs
ficoms
sbb
cmp
add
jns
add
in
pop
add
andb
out
mov
les
jg
mov
inc
sbb
jge
nop
cmovs
mov
inc
pop
mov
inc
jmpw
ffree
shll
xchg
sbb
movsl
fdivl
and
orb
dec
jp
cmpl
addb
dec
push
das
daa
xor
sub
pusha
and
cmpsl
scas
and
hlt
inc
jp
mov
int3
add
shl
cmp
jae
fdivp
test
sub
loop
int3
cs
cmp
or
xchg
mov
fwait
popa
xchg
xchg
jne
push
xlat
ja
pop
adc
rcrb
stc
dec
rorl
push
xor
pop
xchg
lea
and
pusha
add
and
pop
andl
and
scas
jg
and
sub
inc
fsubl
add
mov
sbb
xor
pop
mov
xor
push
sub
sbb
ret
and
shl
outsl
cmpsl
js
rolb
xchg
aad
les
inc
rclb
sub
js
inc
lahf
xchg
mov
mov
mov
rolb
iret
ror
out
insl
jle
lods
jmp
pop
testb
cmp
enter
pusha
push
mov
push
shlb
andb
and
xchg
ljmp
cmp
pop
out
cmp
jo
pop
xor
add
inc
inc
call
add
rcrb
icebp
dec
inc
fcoml
rcl
ret
push
js
in
xchg
adc
addb
jmp
aas
xor
sbb
jge
sub
xor
inc
add
inc
jmp
sbb
pusha
add
aaa
loop
je
shlb
sbb
stos
loopne
and
inc
ja
nop
stc
cmp
mov
aad
add
push
dec
inc
or
loopne
ss
shlb
cmpsb
pusha
and
loopne
sub
and
dec
sbb
mov
or
int3
push
xchg
loope
daa
leave
sub
addr16
rol
data16
imul
push
scas
pusha
add
xor
mov
addb
sbb
repz
add
push
sbb
addb
divl
add
pop
test
inc
enter
loopne
in
jl
pop
call
push
js
xor
imul
addps
shlb
pushf
aaa
cmc
roll
addb
bound
cmpsl
aam
aas
test
mov
mov
loop
jge
adc
addb
or
and
inc
mov
ror
add
clc
dec
pop
cmp
inc
cmpb
ljmp
test
mov
and
subb
addb
je
cli
adc
emms
out
fwait
fwait
outsl
sub
xorb
in
lahf
lds
gs
mov
xorb
mov
loopne
jbe
mov
arpl
test
adcb
sbb
mov
in
pop
call
jmp
sbb
lahf
stos
jne
cmp
loopne
or
mov
fdivrs
ss
js
dec
fs
pushf
xor
sub
push
adcl
add
push
pop
cmpsl
push
mov
adc
cwtl
in
imul
mov
or
hlt
push
or
push
fs
mov
out
xor
aad
loop
loopne
lret
loope
scas
mov
lret
jge
cwtl
pop
cmp
jb
push
inc
or
dec
and
jno
xchg
mov
addb
rol
mov
add
ret
pop
faddp
add
add
andb
stos
xor
xchg
push
in
push
inc
sbb
jg
fcmovbe
lea
xor
shl
sub
xor
pop
out
insl
mov
add
sbb
dec
cmpl
sub
and
sub
and
or
add
imul
pusha
and
pusha
pop
lahf
lea
aam
cwtl
repz
and
ljmp
and
fpatan
push
in
mov
loopne
sti
inc
adc
sahf
cmp
andb
mov
jnp
mov
aad
aad
pop
std
pop
jp
sub
addb
das
mov
lea
je
popa
xchg
pop
cmpsb
mov
mov
in
adc
outsb
jle
xorl
rorb
dec
lods
jae
pop
fadds
sub
inc
pop
pop
shr
scas
add
adc
out
xchg
lods
add
into
in
call
out
dec
lret
xor
and
cld
ds
popa
add
push
adc
cmp
inc
clc
push
and
mov
mov
sub
cmpb
dec
jb
ljmp
leave
or
andb
fnstsw
push
inc
push
insl
mov
xchg
push
decb
insb
jmp
daa
pushf
inc
pop
jb
pusha
and
pushf
fistpll
imul
mov
fldlg2
cmp
xor
adc
and
and
xor
jno
jg
loopne
icebp
mov
xlat
loopne,pn
aaa
or
pusha
test
and
cmp
mov
add
daa
adc
shlb
pop
mov
ds
rorl
bound
call
movsb
pusha
inc
adc
loopne
push
mov
cmp
pop
xor
ljmp
les
mov
shlb
mov
lea
add
xchg
adc
pusha
loopne
inc
shl
jg
jns
adc
test
sti
pusha
or
mov
inc
xor
pop
push
pop
cmp
stos
iret
shll
and
add
inc
mov
mov
pusha
mov
cwtl
xchg
data16
mov
loopne
xchg
int3
test
or
xor
andl
and
inc
pop
push
inc
pusha
jno
in
mov
and
int3
lods
mov
inc
inc
pusha
jnp
dec
adc
mov
inc
and
loopne
inc
pusha
mov
stos
push
imul
adc
push
cmp
shll
rcrl
and
add
rol
mov
mov
lahf
xchg
inc
cli
lock
mov
sahf
loope
xlat
mov
and
loopne
push
add
xchg
insl
cmp
fidivs
xlat
mov
fcomp
rcrb
repnz
sbb
test
jb
ss
pop
es
sbb
shlb
push
or
ror
cmp
sub
adc
loopne
int3
xchg
fisttpl
inc
rolb
pusha
daa
clc
adc
mov
inc
pop
aaa
fwait
xchg
dec
hlt
outsl
jl
xchg
xor
loopne
mov
pusha
pop
inc
mov
insb
jbe
or
mov
xlat
fstpl
mov
test
mov
loopne
nop
mov
mov
shrl
mov
neg
cwtl
andl
and
rclb
and
lods
in
pop
lds
and
inc
or
and
test
fildll
shlb
outsb
inc
aaa
lret
jb
inc
adc
arpl
addb
outsb
adc
push
mov
xor
mov
xor
sub
mov
mov
in
cmpsl
lock
and
shlb
mov
and
sub
xorb
ss
mov
inc
mov
dec
jmp
xchg
pusha
lcall
sub
mov
inc
or
pop
xor
stc
pop
aas
cwtl
dec
adc
clc
leave
push
inc
leave
ficoml
pusha
loopne
shl
test
cmc
inc
es
jge
pop
or
adc
add
jmp
mov
int
movsb
loopne
scas
add
in
call
ds
loop
xchg
sub
lcall
push
rcrb
push
cmp
in
adc
sti
add
andb
jp
mov
sbb
dec
xchg
aaa
sub
add
call
jle
and
fld
arpl
bound
pop
sub
ja
addb
outsb
adc
and
rclb
dec
push
adc
jle
cli
pushf
pusha
insb
fs
inc
clc
add
rcrb
and
das
ja
and
mov
dec
cld
sub
jb
outsl
dec
rorb
mov
and
add
add
mov
and
inc
lcall
sarb
test
imul
fistps
aaa
push
data16
pusha
pusha
xchg
out
lea
fs
ret
cmpsb
and
mov
orb
sub
ror
lret
sub
pushf
push
xchg
imul
loopne
aam
insb
xor
adcl
and
out
ss
addr16
jo
mov
lds
jnp
test
add
popf
mov
andb
fmul
cmc
fldl
add
mov
adc
xor
cltd
jl
in
sbb
bound
inc
ja
push
xor
mov
jl
stc
scas
andb
dec
or
lcall
or
pusha
sub
and
loopne
outsl
ljmp
nop
test
loopne
in
int
mov
push
fstpl
arpl
sub
addb
shlb
cmp
dec
xor
testb
and
mov
loopne
jns
push
cmc
mov
cmp
pusha
add
clc
dec
dec
jge
std
pop
jecxz
insb
adc
inc
and
xor
and
jno
lret
into
sbb
pusha
jnp
shlb
and
pop
fldl
imul
xchg
pop
mov
out
out
lret
cs
int
jge
aas
das
lods
add
iret
shrl
dec
data16
lds
xor
mov
repz
or
aam
jae
icebp
sbb
rcrb
xchg
pusha
loopne
loopne
aam
outsl
mov
add
outsb
and
adc
pop
scas
pusha
add
xchg
loopne
loope
jae
xor
shlb
xor
and
mov
inc
adc
inc
add
hlt
outsl
insl
divb
pop
jno
mov
int
sub
loopne
sbb
loopne
xchg
jg
hlt
adc
adc
add
arpl
add
pop
or
rclb
das
add
in
addr16
aam
dec
lods
mov
push
enter
cmp
insl
fwait
push
mov
or
pusha
mov
shrb
loopne
xchg
pushf
xlat
jge
mov
mov
push
sbb
jecxz
jle
popa
pop
mov
and
sub
inc
ds
inc
inc
jp
sbb
jbe
push
and
lods
shlb
inc
addb
xchg
les
jb
dec
testb
pop
cmc
cwtl
mov
pop
mov
orl
add
adc
int
and
add
out
cli
ret
or
xor
sbb
loop
mov
xchg
add
xor
imul
pop
sub
sub
or
pop
roll
pop
aas
xchg
imul
inc
movsb
loopne
xlat
and
and
inc
mov
leave
js
ret
dec
add
sub
ja
add
mov
popa
jns
xor
shll
pop
mov
loopne
sbb
mov
cmp
fcmovu
jnp
mov
jge
loopne
fnstsw
cmp
mov
inc
xchg
mov
adc
jge
loopne
dec
jo
add
add
cmpsb
pusha
inc
adc
adc
rcr
sbb
int
cmpsl
push
insl
xor
mov
enter
out
mov
fsin
test
push
push
pop
push
add
jb
pusha
sub
inc
inc
fbld
rolb
sbb
push
add
cwtl
mul
gs
mov
hlt
push
test
jg
add
in
xlat
incl
add
jb
xor
loopne
mov
pop
lret
jne
and
inc
ror
out
shll
cli
xor
pop
icebp
fwait
das
jg
mov
in
andb
sbb
cmp
cltd
or
out
sbb
inc
xchg
xchg
popa
xchg
cmp
add
testb
pusha
rorb
sahf
lds
addb
mov
xchg
dec
out
add
fdivp
addb
int3
out
jbe
je
scas
mov
adcb
ret
mov
add
inc
pop
out
shlb
shl
nop
lea
mov
push
mov
add
jmp
es
add
js
lea
loopne
cmp
dec
in
lock
nop
ret
daa
dec
dec
mov
cld
pop
or
addb
inc
and
mov
jge
imul
cmp
aas
jne
jmp
mov
idivl
arpl
mov
push
jne
mov
jno
add
and
push
mov
mov
pusha
subb
inc
loopne
addb
and
mov
loopne
inc
mov
mov
into
loopne
and
lahf
frstor
add
and
ret
andl
das
pusha
test
loopne
push
jmp
mov
jns
sub
pushf
xchg
data16
lods
add
loopne
in
ficomps
ret
outsl
ret
add
sbb
and
add
mov
xor
inc
loopne
jbe
add
mov
mov
xor
and
fwait
pop
mov
repnz
or
mov
mov
mov
sahf
scas
pusha
subb
outsl
hlt
pop
enter
sbb
xor
ja
mov
jno
insl
adc
ror
and
and
stos
loopne
jp
arpl
sbb
inc
adc
pusha
cmp
and
adc
rolb
mov
and
pusha
sti
cli
pop
sbb
imul
lret
inc
mov
xor
mov
mov
and
dec
andb
jle
out
int3
fldt
add
scas
addb
push
and
xor
or
mov
ror
enter
rol
in
cltd
lods
sbb
jle
mov
shlb
sbb
addr16
jecxz
push
bnd
jg
mov
add
mov
loopne
inc
inc
mov
cwtl
dec
dec
add
mov
push
cmpsb
addb
lret
subl
jno
sbb
mov
jo
jnp
mov
iret
or
loopne
jno
adc
scas
movsl
rcr
pop
pop
in
outsl
cmpsb
shl
fistl
jnp
xchg
and
sahf
mov
push
js
sbb
loopne
push
cmp
sub
rorb
inc
xchg
mov
mov
loopne
mov
imul
insl
in
cmc
in
pop
mov
loopne
jecxz
pop
mov
push
add
ja
je
cmp
xchg
cmp
cmp
into
pop
sub
pop
lret
sbbb
stc
in
gs
push
inc
das
xchg
or
mov
push
out
jno
test
and
pop
adc
mov
push
cmc
mov
and
add
mov
ds
mov
and
push
add
xchg
sub
add
outsl
adc
push
lret
ss
inc
xor
mov
mov
mov
in
andb
inc
lret
lret
add
push
add
and
inc
add
inc
inc
iret
jle
xchg
fistpl
nop
xor
arpl
and
inc
push
jg
mov
ret
mov
out
stos
mov
je
shlb
push
aaa
loopne
repnz
fcompl
lahf
jns
xor
mov
loopne
inc
sbbb
push
cmp
ljmp
adc
xchg
ret
andb
pushf
test
rorl
mov
inc
mov
mov
mov
and
cmpsb
and
push
xchg
loope
pusha
and
andb
mov
arpl
mov
jl
and
mov
push
loopne
sub
daa
rcll
imul
adc
adc
stc
sbb
in
outsb
loopne
nop
mov
inc
fs
mov
add
shr
inc
rcrb
decb
setb
jge
pop
fsub
dec
add
and
test
pusha
mov
xchg
and
cmp
cmovs
ljmp
mov
pusha
cmp
and
and
lahf
inc
stos
mov
cltd
mov
xchg
and
addb
stc
cmc
sbb
and
push
lret
add
cmp
pop
inc
lock
adc
rolb
mov
clc
pop
mov
cmpsb
and
andb
and
mov
pusha
xchg
mov
jnp
inc
sub
stos
loopne
fs
movsl
rolb
xchg
jg
add
cli
dec
or
orb
lock
push
addb
movsb
pusha
andb
je
fdivrs
test
inc
sbbl
mov
and
xchg
inc
jo
movsb
and
fistpll
arpl
sub
cmc
not
in
int
and
dec
push
push
test
and
jb
clc
lret
or
call
jo
add
mov
in
dec
mov
and
sbb
int3
push
and
jmp
loop
rolb
jne
fbld
mov
and
mov
adc
in
test
push
popa
sbb
and
add
push
int3
mov
rolb
xlat
inc
sahf
out
mov
push
mov
dec
mov
add
inc
inc
sahf
fs
shlb
xchg
test
and
and
mov
pop
dec
lret
addb
inc
lods
push
add
push
mov
test
add
call
arpl
popf
mov
loop
lcall
rep
cwtl
pop
adc
cltd
aad
inc
mov
jmp
xchg
imul
mov
rcl
mov
pop
es
int3
hlt
xchg
or
int3
popf
mov
fistpll
rorb
shr
repz
loopne
and
add
pop
jbe
cmp
jmp
inc
mov
cli
mov
lea
addb
xor
add
and
mov
rolb
lahf
in
ljmp
mov
cltd
add
inc
addb
cmpsb
shlb
mov
imul
and
shl
cmp
pop
outsb
mov
imul
shrb
and
mov
mov
repnz
mov
add
push
insb
pop
ds
and
loopne
cld
mov
movswl
xor
jae
imul
shl
lea
dec
scas
pusha
mov
cmp
sbb
iret
stc
mov
repnz
sub
and
xchg
imul
mov
and
loopne
orl
loopne
das
movsl
pop
push
test
fucomi
mov
add
jmp
loopne
adc
cmp
in
add
pusha
jl
inc
orb
out
add
inc
loopne
test
cmc
push
pop
jle
xchg
roll
sbb
test
mov
push
inc
and
repz
sti
inc
mov
call
loopne
into
and
mov
fimull
and
sbbb
inc
and
mov
sub
sbb
into
dec
fiadds
mov
in
mov
lahf
xlat
mov
inc
aas
out
dec
jle
push
or
add
inc
mov
sub
test
inc
inc
mov
inc
jg
mov
mov
es
out
es
inc
pop
or
sub
and
andb
add
enter
in
in
push
imul
loopne
in
dec
mov
add
add
rcrb
mov
pusha
lods
rolb
notl
pusha
loopne
inc
shrb
fwait
mov
and
shrb
pusha
inc
ss
push
fdivl
sub
and
dec
and
fisttpll
pop
xor
loop
filds
dec
pushf
mov
ss
in
popa
push
and
and
and
mov
xor
outsl
arpl
in
add
loopne
inc
aaa
pop
mov
das
dec
loope
sahf
repnz
ds
andb
rcl
es
and
repz
inc
add
pushf
scas
jnp
ljmp
ja
lods
loopne
inc
jg
mov
mov
dec
fldl
repz
outsb
pop
inc
cmp
sbb
jne
inc
imulb
fbstp
rol
xor
stc
lods
pop
mov
in
sub
and
sub
loopne
mov
adc
xor
xchg
addb
addb
xchg
aaa
lock
repz
mov
loopne
mov
xor
filds
sbb
push
addb
mov
fnstenv
push
mov
loopne
ficomps
pop
cld
push
xor
cmpsl
fstpt
sbb
repz
jbe
cs
mov
out
cmp
lods
and
mov
in
mov
pusha
add
dec
test
xchg
addr16
push
ficomps
loop
or
add
jg
loopne
pusha
xchg
pop
jp
les
sub
push
mov
or
inc
xchg
cld
icebp
or
lods
inc
add
dec
in
push
out
sbb
pusha
addb
pop
loopne
std
push
adc
xchg
dec
add
add
arpl
imul
cmc
mov
pop
sbb
scas
mov
xor
ljmp
rolb
mov
addb
pop
sub
pusha
mov
add
pop
sbb
clc
movb
pusha
fwait
add
add
test
mov
and
mov
outsl
out
mov
adc
and
xchg
cli
addr16
jmp
testl
je
int3
mov
insl
in
imul
and
mov
add
insl
pop
pop
andb
outsb
push
inc
sbb
inc
in
xor
rclb
repnz
sub
ss
mulb
sub
mov
add
aad
movsb
loopne
pop
sub
cli
or
jl
fs
stos
lret
add
mov
pusha
les
lahf
mov
jl
mov
mov
dec
addb
pop
orl
popf
pop
cli
dec
outsb
add
mov
mov
lcall
bound
pushf
fldenv
imul
mov
pushf
notl
test
loopne
xor
in
pop
mov
sub
loopne
push
pop
add
push
loopne
pusha
mov
push
dec
in
cmpsl
out
popf
dec
add
loopne
sbb
mov
inc
shlb
loopne
icebp
mov
cmc
pop
out
cli
les
cmp
xor
bnd
mov
inc
loopne
daa
roll
iret
lret
cmp
loopne
or
and
jmp
jae
mov
pusha
push
imulb
nop
add
loopne
pop
xchg
lret
cmpsb
pusha
rclb
cwtl
pop
pop
adc
mov
dec
out
pop
dec
and
pusha
xor
adc
pushf
ljmp
push
adc
inc
shl
scas
xchg
test
ficoms
out
repz
out
inc
mov
andb
leave
and
mov
jg
cmp
dec
dec
xchg
pop
xor
jno
push
ljmp
imul
test
jle
jp
sub
aas
hlt
arpl
mov
ffreep
sti
stc
shll
dec
and
sbb
and
daa
xchg
cltd
rcrb
loopne,pn
add
inc
pop
cmp
xor
inc
addb
pop
push
dec
stos
and
inc
aad
addr16
mov
add
pusha
je
mov
pushf
fldenv
sub
addr16
data16
inc
loop
inc
xorb
and
imul
mov
bound
sarb
mov
sbb
jnp
mov
add
sbb
add
orb
jmp
sarl
mov
stc
into
pop
out
mov
and
aam
rolb
mulb
add
add
pusha
aad
xor
rol
addr16
push
jp
push
rolb
leave
stc
or
mov
rcrl
addb
push
faddl
mov
rol
dec
add
mov
add
pusha
mov
inc
test
arpl
cltd
sub
jbe
enter
shl
call
mul
ror
shlb
cmp
ljmp
inc
inc
sbb
sbb
jb
repnz
pusha
jmp
shlb
shlb
inc
jo
outsb
or
gs
add
push
dec
pop
popa
inc
int3
mov
arpl
add
test
addb
mov
jp
lret
rol
stc
cltd
mov
pusha
in
test
xor
add
sarb
jb
shrb
and
and
lcall
aad
shrb
frstor
stc
xor
out
and
jge
inc
pop
sub
pusha
stos
pusha
rclb
repnz
rclb
cmpsb
mov
loopne
mov
xchg
add
nop
mov
push
pop
pop
out
xor
push
pop
sbb
lcall
stos
insl
pushf
in
and
inc
fwait
jbe
out
andb
mov
test
rorb
sbb
enter
push
dec
inc
push
mov
xchg
mov
inc
sbb
ljmp
mov
mov
mov
rcrl
adc
neg
enter
inc
or
jnp
add
addb
mov
add
xor
adc
or
pop
jmp
lcall
idivl
or
cmc
int
mov
jp
gs
sub
scas
rolb
stos
inc
add
sub
adc
adc
out
ret
dec
je
add
imul
aam
push
out
mov
addr16
or
mov
mov
inc
dec
push
jo
push
sbb
das
mov
pusha
insb
roll
addb
xlat
repz
clc
lea
out
daa
mov
insl
rol
lock
push
adc
sbb
add
test
inc
mov
in
stos
addb
rcl
mov
inc
jns
pusha
and
les
addb
mov
inc
or
shlb
mov
add
xchg
sbb
lret
sub
cmp
sub
inc
dec
sbb
das
pop
fwait
test
and
test
and
xor
fcomps
add
add
mov
push
jle
xor
inc
addr16
mov
lods
jl
push
es
push
adcl
movsb
pusha
loopne
mov
or
in
mov
adc
in
add
orb
jl
inc
pusha
pusha
xor
pop
sbb
cmp
pushf
pop
xchg
mov
test
mov
and
push
push
test
xor
fdivrs
andb
mov
cmp
xorb
mov
jb
jmp
outsb
push
rcll
stos
loopne
sar
dec
jb
xchg
cltd
xchg
mov
rolb
sub
loopne
mov
insl
in
popf
sti
dec
jecxz
push
mov
push
les
test
push
pusha
adcb
out
jnp
cmp
shlb
dec
ja
mov
jbe
sbb
call
repz
divb
stc
clc
dec
pop
lea
out
sbb
cmp
aas
jns
mov
sub
inc
es
adc
cmp
or
addb
and
arpl
ret
dec
pop
inc
and
fmull
lds
and
mov
sahf
daa
cmp
mov
inc
mov
mov
das
inc
xor
sbb
mov
pusha
inc
int3
mov
outsl
mov
sub
or
ret
xor
or
subb
mov
mov
add
push
or
xlat
push
sarb
add
and
push
add
xchg
dec
or
cmpsb
mov
adc
daa
or
push
adc
rolb
jmp
loopne
xchg
aam
fwait
je
outsb
fucomp
cmp
inc
mov
mov
cmp
popf
adc
loopne
movsl
scas
cli
pop
iret
dec
jbe
and
out
cwtl
pop
inc
jb
ss
push
pusha
and
pushl
sar
clc
jae
mov
inc
loope
outsl
pop
mov
push
pop
cmp
xchg
and
out
orl
xor
test
addr16
pop
or
add
mov
imul
adc
add
pusha
test
xchg
push
pop
scas
push
add
push
ds
xchg
add
loopne
push
inc
out
or
shlb
loopne
and
add
shlb
mov
mov
in
fmuls
xchg
repz
clc
jbe
push
out
mov
push
add
gs
shlb
inc
sub
mov
xchg
aaa
add
add
cmpsb
inc
loopne
shl
daa
fisttps
ljmp
sub
ret
pusha
and
arpl
jge
pusha
pusha
lea
stc
mov
add
rorl
stos
and
loope
mov
loopne
je
sub
fdivs
rolb
cmc
cmp
imul
out
je
dec
or
test
cmp
shlb
scas
adc
pop
fmull
lahf
or
xchg
dec
mov
shlb
pop
call
ficoms
and
and
pushf
shlb
fstpt
out
xchg
roll
add
andb
aas
or
cmp
push
in
lods
jge
xchg
aas
jmp
scas
inc
and
cltd
sub
sbbb
mov
ss
xchg
ds
adc
jbe
xchg
in
rcrb
stos
pusha
inc
out
pusha
xorb
fisttpll
pop
scas
addb
pusha
test
aas
fsubl
mov
mov
int3
les
inc
addb
pop
mov
or
inc
cmpsl
sti
out
test
pop
inc
pushf
pop
or
dec
adc
out
pop
stos
xchg
hlt
dec
push
int
or
inc
sbb
jo
jb
or
lret
shlb
mov
fadds
add
mov
cmp
mov
addb
testl
mov
jmp
or
fs
lcall
fwait
xor
and
and
cltd
pop
int
faddp
or
sbbb
orl
test
insb
lods
mov
pop
aaa
pop
addb
shl
mov
mov
mov
test
xchg
stos
andb
add
addb
fcoml
add
inc
loopne
loope
cmp
xor
nop
sub
push
imul
pusha
add
xlat
xchg
das
int
push
push
loopne
jmp
mov
in
xchg
out
mov
pop
inc
jmp
and
insl
je
jno
lds
cs
mov
mov
jbe
in
adc
add
fsts
in
xchg
std
pop
xchg
jge
orl
jne
sbb
cwtl
iret
in
shll
add
shlb
test
mov
aam
mov
cmp
andb
jb
cltd
xchg
jno
adc
xlat
mov
push
fidivl
adc
jl
cld
cmp
cld
xor
lahf
jge
jg
pop
pop
dec
jo
andb
shlb
inc
cld
andl
aam
mov
xchg
inc
lret
pop
jns
flds
inc
jmp
mov
call
popf
and
adc
loope
fstpl
test
test
sub
mov
inc
sarb
stos
add
gs
fbstp
lods
lcall
stos
add
xor
in
cwtl
pushf
xchg
call
cmc
pop
inc
dec
mov
les
inc
add
test
into
lret
das
das
shrl
lahf
mov
jge
pop
pushf
xorl
dec
jno
fimuls
jns
push
and
aaa
ja
add
ret
aaa
or
add
ljmp
mov
or
loopne
sbb
addb
pusha
mov
leave
inc
mov
pusha
addb
inc
popa
push
rolb
mov
je
insl
inc
daa
jbe
shlb
pop
xor
shlb
rolb
and
rclb
loopne
mov
mov
loopne
test
inc
mov
fucomi
vpmaddwd
mov
fisttpll
inc
int
jle
add
outsl
inc
adc
cmp
lea
mov
jb
dec
cli
xor
and
sub
loopne
in
shrl
xchg
sub
fwait
fwait
xchg
mov
in
das
pop
jl
out
outsl
hlt
mulb
lods
pusha
loopne
iret
push
push
ljmp
cmp
mov
gs
mov
lds
std
psubsw
sbb
test
dec
xlat
ljmp
jp
fsubrl
outsl
jbe
in
pusha
add
xchg
push
inc
loopne
or
push
lods
loopne
mov
push
stos
loopne
mov
inc
inc
adc
scas
or
inc
mov
and
mov
mov
andb
ljmp
and
xchg
push
rolb
andb
xor
shlb
dec
or
inc
lods
add
pop
pop
cmp
lcall
loopne
mov
xor
add
shlb
xor
mov
cmp
and
mov
lds
push
loopne
adc
sub
leave
mov
inc
mov
movsl
loope
daa
adc
hlt
mov
loopne
loop
popf
mov
jmp
dec
add
or
pop
arpl
aad
add
negb
inc
clc
shll
and
and
dec
movsb
and
sahf
mov
fisttps
push
fsts
loop
jno
sbb
shl
in
sub
add
add
fiadds
or
in
or
jno
adc
pusha
call
loopne
pop
push
fcoms
sub
inc
test
mov
sub
add
mov
adc
or
cmp
ror
lcall
pop
add
add
pushl
add
rcl
inc
sbb
adc
and
push
adc
sbb
inc
nop
mov
jle
daa
nop
pop
lcall
pop
fidivs
mov
lret
adc
jb
fldenv
pusha
xchg
xor
inc
pop
jns
push
push
loopne
mov
outsl
pop
xchg
inc
fld1
sbb
xchg
xchg
lret
cmpsl
outsl
rorl
mov
dec
mov
mov
test
add
enter
add
lcall
jp
test
mov
sbb
adc
pusha
push
addb
pop
and
rolb
mov
adc
or
push
out
cmpsb
mov
jg
xor
ret
mov
mov
and
push
fistpll
loopne,pn
lahf
loopne
pusha
adcb
and
popa
mov
int3
xchg
fstps
inc
cmp
fdivrl
pop
cltd
jle
andb
insl
sahf
fmul
pop
push
pop
data16
add
cld
jl
and
lret
sbb
cli
sbb
fs
loopne
std
xchg
add
add
jle
outsb
fisttpll
cmp
xor
in
stos
jo
mov
pop
cmp
mov
pusha
rorb
dec
nop
mov
aas
xchg
xchg
cmp
mov
adc
in
ljmp
jae
mov
stos
rolb
mov
scas
and
into
stos
addb
xlat
sahf
stos
mov
add
mov
rolb
and
xchg
jl
or
sti
dec
out
mov
add
or
mov
test
jnp
lcall
sti
pop
stos
mov
lock
xchg
scas
rol
sbb
mov
xchg
adc
out
push
or
rcl
jge
inc
inc
xchg
jmp
cmc
fnstsw
sar
inc
pusha
cmpsb
mov
gs
aam
gs
pop
jmp
push
mov
and
xchg
mov
dec
outsb
div
xchg
or
mov
add
mov
scas
or
ficompl
adc
mov
xchg
ret
cli
jbe
mov
jnp
push
sbb
sbb
fidivl
movb
pop
mov
xor
and
cwtl
jg
arpl
mov
cmpsl
cmp
pop
leave
jns
cmc
inc
loopne
shlb
inc
push
out
xor
loopne
xor
mov
sub
mov
dec
push
push
lahf
xchg
inc
lahf
imul
int
pop
jnp
or
nop
pop
push
rorl
mov
andb
dec
jge
mov
add
enter
adc
fsubr
inc
es
fs
cltd
jle
rolb
test
mov
addb
rorl
jle
xor
jb
cmpsb
loopne
mov
xchg
push
jae
nop
adc
cld
jae
addb
fdivrl
loop
inc
inc
scas
sub
add
jmp
dec
mov
fisubs
daa
mov
add
jl
inc
out
andb
imul
pushf
push
jnp
addb
inc
bound
loop
loop
mov
loopne
shl
lods
add
push
pusha
inc
aaa
aaa
rolb
mov
and
sti
or
test
addb
loopne
mov
or
stos
int
or
pusha
enter
mov
xor
mov
insl
out
scas
inc
sub
rcl
xchg
sub
dec
fldt
loopne
adc
repnz
cld
xor
pop
mov
stos
adc
cmc
cmp
pop
inc
clc
out
fwait
dec
mov
divb
push
out
sub
cmpsb
mov
adc
loope
lds
ja
sahf
sbb
movsb
and
pusha
sbb
nop
and
cmc
in
daa
dec
inc
mov
and
orl
xor
mov
inc
and
inc
rcrb
mov
repnz
xorb
aas
pop
loopne
daa
test
out
insl
sub
loopne
or
pusha
pusha
push
out
loope
xchg
and
fwait
add
pusha
add
and
mov
cwtl
dec
loopne
xchg
enter
jo
and
or
adc
mov
mov
and
shlb
shlb
jae
dec
add
mov
add
gs
push
fwait
test
aas
sub
clc
pop
test
sarb
xchg
jae
in
pusha
add
shlb
inc
pop
sbb
into
neg
movsb
addb
jo
cld
and
xchg
gs
mov
xchg
push
jno
push
fnstsw
pushf
out
push
adc
mov
pushf
add
flds
sub
xchg
outsb
dec
fsubrp
les
mov
rolb
xor
in
pop
push
sbb
and
in
or
inc
adc
and
lds
icebp
cmp
popa
stos
pop
adc
rcrl
aas
cmpsl
mov
mov
cmpsl
sbb
loop
sbb
xchg
jge
and
inc
xchg
xchg
leave
popf
and
mov
pusha
rorb
rol
cmp
andb
xor
cwtl
xchg
leave
xor
adc
in
sub
rol
neg
in
jb
push
lea
dec
addb
stos
rol
stos
pusha
inc
push
and
sbb
addr16
or
loopne
pusha
mov
lret
xchg
push
dec
sti
and
xor
and
jg
push
cmp
and
fcomps
push
cli
daa
decb
aad
and
pop
pop
push
movsb
rolb
sar
push
mov
adc
iret
test
dec
hlt
mov
cmpsl
clc
cltd
jae
jbe
add
add
sahf
insb
cmp
push
add
loopne
and
addb
add
xchg
pusha
and
mov
add
xchg
xorl
das
fnstenv
add
sub
mov
test
add
in
out
xchg
mov
push
bound
insl
adc
push
mov
rorb
addb
andb
mov
xchg
adc
pop
jns
sub
pusha
fistpl
aad
add
fs
lea
shrb
fwait
int
adc
std
xchg
jno
sbb
sahf
jne
icebp
sbb
lea
push
inc
clc
inc
aas
cmpsb
inc
add
mov
enter
outsb
mov
pop
sub
pusha
loopne
and
add
and
xchg
inc
sbb
xor
aad
sbb
sbb
popaw
push
shlb
sar
fs
cltd
cmc
add
add
and
pusha
and
pusha
shl
pop
rcr
dec
loope
inc
xchg
mov
loop
pop
adc
dec
xor
push
adc
adc
xchg
jmp
xor
jg
loopne
cmp
inc
xlat
les
or
mov
mov
adc
sar
fs
push
pop
xor
shrb
xchg
out
data16
adc
stc
lea
lds
rolb
repz
xchg
inc
loopne,pn
aas
cmpsl
loop
jl
pop
and
jae
lods
add
adc
subl
xor
ds
adc
push
loope
enter
inc
push
stos
mov
cmc
or
inc
jmp
loopne
xor
and
mov
rclb
mov
test
mov
movsl
pop
test
sub
mov
int3
aad
das
inc
imul
adc
repz
add
std
cld
lret
pop
aad
loopne
fsts
mov
lock
mov
jnp
out
gs
arpl
lahf
push
ret
sarl
or
jg
sti
lods
inc
push
lret
je
push
sbb
dec
bound
mov
movsl
imul
xchg
xor
ja
movsb
add
mov
loopne
int
add
adc
jle
inc
subb
mov
mov
and
sti
scas
sub
jns
insb
inc
scas
and
adc
add
cmpsl
cmc
mov
xchg
push
jne
js
inc
mov
sbb
xchg
rol
sti
add
leave
addb
push
dec
jne
dec
mov
cmpb
mov
loopne
movb
loopne
ljmp
gs
pusha
xchg
leave
pop
negl
and
les
and
inc
inc
adc
sbb
or
pusha
mov
loope
shlb
cmp
cmp
in
outsl
push
mov
adc
cmp
cmpsb
shl
insl
pop
add
add
add
and
daa
push
mov
and
xor
ljmp
arpl
pop
xor
pop
int
call
jno
andb
push
add
mov
js
dec
jl
cwtl
inc
jno
test
mov
hlt
lods
das
loop
pop
xchg
loopne
mov
fdiv
dec
or
loopne
movsb
mov
in
ja
loopne
jae
aas
lcall
ds
int
inc
and
mov
push
lahf
test
pushf
mov
int
dec
test
dec
or
test
mov
sub
ret
mov
mov
ss
push
cmc
cs
mov
mov
dec
jo
lcall
mov
mov
pusha
rolb
mov
and
cs
add
adc
mov
shl
add
or
jb
lret
or
lods
push
mov
push
push
orl
shll
push
inc
loopne
add
fdivl
iret
rcr
pop
add
add
mov
jp
add
aad
out
lock
sbb
int3
dec
sub
add
xchg
push
and
fs
sub
loopne
lahf
add
in
lea
pusha
loopne
fs
js
loopne
jle
addb
lods
jg
add
pop
and
scas
bound
loopne
fisubrs
jg
js
mov
push
add
clc
jmp
mov
and
add
lea
mov
jnp
aam
shlb
push
inc
movsb
andb
negb
add
loopne
fnsave
inc
inc
sahf
lcall
rcl
mov
cmpsb
mov
fs
pusha
mov
aas
cmpsl
inc
mov
sub
add
or
stc
mov
xor
ss
xorl
cld
mov
movsl
jmp
sub
bound
cmp
into
insl
cltd
sbb
or
ss
movl
xchg
dec
cmp
orb
gs
add
and
adc
adc
push
mov
inc
and
shlb
sbb
mov
sbb
scas
pusha
inc
cltd
push
mov
mov
loopne
andb
xor
fstl
loopne
lods
arpl
ret
loopne
xor
xor
xchg
xor
xchg
xchg
dec
push
mov
push
loopne
ret
enter
xchg
ds
insb
stos
xor
test
arpl
pop
xor
dec
sbb
stc
pop
fmull
fistl
cmp
out
pop
sub
push
pop
mov
lock
xor
add
shrb
pusha
and
jle
loopne
inc
jg
jmp
iret
push
int3
ss
pop
adc
pusha
dec
jge
sub
inc
jb
vsqrtpd
xchg
lret
xor
scas
and
das
popa
shlb
std
and
xchg
movsl
xchg
aas
data16
xchg
push
mov
pusha
adc
add
xchg
nop
std
jge
adc
rcr
jle
mov
rcl
dec
ja
cmp
lahf
fdivl
jle
gs
test
xchg
mov
push
stos
jns
rolb
inc
mov
stc
inc
mov
aad
or
and
adc
outsb
push
jbe
arpl
loopne
mov
add
shll
inc
mov
add
pusha
mov
ljmp
pusha
rclb
arpl
mov
and
mov
add
andb
dec
rcrb
andb
push
insl
jp
xchg
andb
in
push
shr
ja
or
mov
mov
mov
ljmp
push
pop
mov
pop
pusha
into
jne
outsb
jecxz
inc
jmp
cmp
rolb
ss
jmp
and
pusha
shlb
addb
subb
hlt
sbb
add
sub
dec
out
xor
fcompl
jno
or
loopne
loopne
push
cmpsl
jecxz
inc
loopne
xor
xor
mov
addb
fcoml
mov
pop
adc
lock
loopne
mov
pop
lods
inc
and
add
fiadds
ret
shrb
aad
stos
imul
add
push
mov
lock
pop
and
cmpb
pop
addb
dec
inc
addb
outsl
rol
lcall
add
mov
pop
xchg
jmp
imul
pusha
add
add
rolb
xor
mov
pop
int3
xchg
pop
bound
mov
insb
std
adc
out
scas
and
cmc
lock
pusha
in
dec
sahf
mov
aad
sbb
cli
cmp
test
cmp
outsb
cli
faddl
mov
inc
xorb
mov
loopne
mov
shlb
loope
xor
inc
loopne
rcll
pop
add
outsl
mov
mov
dec
lods
or
imul
and
push
lea
add
daa
clc
mov
adc
test
mov
loop
xor
aad
lock
sub
cltd
scas
and
repz
push
inc
sbb
loopne
inc
shlb
mov
mov
shrb
xor
andb
loopne
jecxz
lret
loop
mov
xorl
inc
rorb
es
lea
loopne
movsl
out
scas
loopne
test
dec
xlat
add
aad
xor
push
shr
pop
dec
jmp
adc
and
fdivrp
adc
or
mov
les
and
out
addb
scas
addb
mov
rcll
mov
fdivrp
stos
cmpsb
and
movsb
inc
mov
inc
test
add
xor
cmp
mov
fxsave
loopne
or
es
and
inc
addb
andb
movsb
rolb
fcmovu
xor
sbb
jnp
lcall
inc
inc
out
add
out
cli
out
popf
sub
je
xchg
push
inc
inc
test
orb
mov
dec
push
jge
or
xchg
dec
cmc
lods
and
sbb
lock
fcmovnbe
fsubrl
subb
loopne
call
out
adc
imul
xchg
or
iret
or
push
lret
push
bound
pusha
xorb
inc
outsb
and
add
push
sub
inc
mov
jno
sti
push
and
inc
stos
or
add
jnp
stc
in
add
add
and
mov
and
sub
pusha
leave
fld
xorl
dec
loop
loopne
or
and
jno
enter
and
mov
andb
imul
clc
pop
pushf
addb
jecxz
into
adc
xchg
add
cmp
inc
aad
pusha
mov
mov
and
pop
psrlw
add
push
dec
out
clc
xchg
pop
jmp
cmc
cmpsl
cmp
shlb
xlat
in
mov
int
xor
les
mov
jecxz
add
inc
dec
addb
xchg
mov
sub
pop
pop
stos
mov
pusha
and
int
inc
test
sbb
loopne
cmpsl
cmc
js
mov
dec
bound
mov
int3
or
ds
lcall
or
dec
mov
jo
and
jns
jnp
scas
and
xchg
jmp
xlat
push
inc
and
and
add
inc
push
mov
and
jb
pop
sub
arpl
aas
sub
rcl
mov
or
pusha
aam
fnsave
and
or
xchg
outsl
dec
xchg
jo
xchg
dec
stos
loopne
mov
add
mov
cmp
and
call
lods
shlb
pop
add
sarb
loope
ret
call
cld
dec
lret
xor
cmp
fistps
mov
jne
rolb
enter
jne
lcall
and
loopne
and
sbb
sbb
addb
push
add
loopne
cltd
mov
popa
pop
jp
addb
dec
sub
sbb
push
ret
mov
test
and
and
dec
jno
jl
loopne,pn
inc
stos
and
in
mov
mov
xorb
out
outsl
sub
push
loopne
mov
add
cmp
and
scas
and
aam
fisubrl
add
and
sub
inc
mov
lcall
pop
ss
notb
inc
and
mov
cmp
scas
jge
mov
sbb
add
lahf
jae
xchg
and
dec
ljmp
imul
sbb
pop
cli
mov
rcrb
mov
sbb
push
fsubl
test
movsl
inc
div
fisttpll
loop
xlat
loopne
inc
icebp
jmp
xchg
mov
mov
mov
je
mov
mov
scas
lea
addb
shr
xchg
pop
or
and
mov
and
rolb
cmpsl
xor
leave
push
add
add
mov
mov
addb
loopne
cmp
xchg
pop
data16
les
push
bound
and
test
loopne
notl
push
mov
pop
pop
push
sub
or
jnp
and
inc
and
ret
dec
sub
mov
add
shlb
jle
push
cld
cltd
fisubrl
pop
push
inc
nop
das
daa
inc
lret
xor
mov
dec
inc
dec
movsl
fimull
inc
rclb
cmp
pop
mov
mov
inc
idivb
add
adc
hlt
adc
inc
loopne
fidivrs
stc
sbb
jne
loopne
xlat
popa
push
inc
push
sub
jge
lea
mov
addb
addb
sub
rcrb
aas
jmp
loopne
mov
daa
sub
inc
sub
xorb
inc
mov
addb
pusha
loopne
out
test
cs
orb
and
daa
daa
push
and
rcrb
mov
pusha
js
xor
xchg
mov
mov
add
add
mov
insl
pop
inc
xchg
js
inc
pusha
into
movsl
sbb
push
adc
add
xor
enter
pusha
push
xlat
add
lods
inc
inc
mov
mov
into
and
cwtl
cmp
jbe
imul
jg
or
dec
adc
shl
push
stos
jno
sbb
mov
cld
dec
jnp
decb
add
mov
mov
mov
lret
gs
aaa
pop
rorl
and
loop
add
leave
xlat
jl
jne
fs
leave
push
and
setns
add
loopne
loop
mov
mov
xor
daa
adc
pop
adc
mov
pusha
loopne
insl
push
adc
cmp
and
inc
enter
push
enter
cmp
pusha
mov
mov
push
jbe
faddl
jae
stos
add
mov
ds
jb
mov
xor
mov
adc
adc
imul
inc
dec
pushf
andb
xchg
addb
mov
loopne
mov
mov
fiadds
cmc
jns
arpl
xchg
mov
jae
dec
fiadds
ss
mov
sub
pusha
add
loopne
loope
sub
add
jae
add
push
cmpsl
mov
and
push
pop
je
adc
and
jmp
push
loope
inc
fwait
and
jo
fstpt
stc
jno
fsubs
add
and
inc
ljmp
rolb
jns
mov
sub
insl
jl
pop
cmc
outsl
dec
call
ljmp
mov
lock
aam
inc
loopne
xor
mov
ret
lock
mov
inc
adc
xor
dec
mov
dec
push
fcomps
adc
loop
push
push
in
lret
popa
sbb
cmp
cmp
mov
fnstcw
notl
scas
rolb
loopne
enter
inc
and
dec
js
stc
jo
mov
jnp
inc
inc
pusha
mov
and
out
loop
mov
adc
mov
mov
lods
jge
scas
mov
sbb
or
andb
xorl
inc
or
xor
fwait
pop
and
jmp
mov
cltd
cmp
sub
and
fmuls
addb
loopne
nop
dec
fcomi
mov
jnp
addr16
loopne
xor
andb
ss
shll
and
loopne
mov
and
and
hlt
push
stos
push
inc
shlb
push
or
nop
lcall
mov
and
outsl
andb
sarl
pop
pop
gs
test
out
sub
pop
adc
aam
push
lods
add
pop
xchg
iret
mov
loopne
pop
sub
pusha
movb
inc
les
mov
mov
fldenv
push
mov
jno
fcoms
and
inc
cmp
rcrl
and
shlb
call
pop
jmp
add
outsb
mov
add
pusha
and
in
enter
in
mov
inc
loopne
in
pop
cs
sarb
out
idivl
ds
and
mov
stos
mov
pop
xchg
add
and
cmc
pop
les
add
lcall
scas
mov
les
jb
xchg
dec
int3
jp
xor
and
cmp
hlt
call
ss
and
cmp
inc
aaa
repnz
aad
and
jbe
rol
add
pusha
or
fwait
std
mov
fs
pop
push
inc
loopne
loopne
rol
andb
adc
sbb
es
loopne
mul
push
int
and
and
movsl
cmp
aaa
lock
and
sbb
inc
and
inc
hlt
and
and
pusha
mov
add
xchg
and
cmp
xchg
push
xchg
mov
movsl
jl
adc
and
inc
dec
lods
andb
enter
sti
test
mov
mov
aad
add
out
aas
inc
popl
shl
and
loopne
cwtl
xor
inc
add
inc
es
out
xor
add
imul
sub
pusha
xchg
or
sub
std
dec
mov
pop
mov
sbb
mov
pop
push
ret
sbb
jb
cmpsl
insl
dec
lods
inc
rcr
sbb
fldcw
push
xor
pusha
mov
cmc
clc
pusha
es
pusha
pop
aad
and
and
ret
scas
mov
ret
dec
add
int3
adc
shlb
gs
mov
faddl
stos
lods
dec
xchg
and
out
sub
add
repnz
mov
clc
cwtl
aam
cwtl
adc
sahf
add
subb
add
mov
loopne
add
inc
add
shrb
pusha
andb
js
jecxz
test
adcb
push
andb
inc
or
cmpsb
andb
push
enter
int3
popa
shrb
add
xchg
xchg
mov
ss
sbb
xchg
mov
hlt
add
andb
pop
xchg
sahf
push
adc
xor
mov
fimuls
lods
add
leave
cld
pop
leave
je
mov
and
cmp
rol
inc
and
xchg
sar
cmp
loopne
push
bnd
ljmp
rolb
pop
mov
mov
jmp
cltd
inc
inc
inc
stos
fs
sub
mov
ja
mov
hlt
scas
mov
syscall
fiaddl
or
stos
and
pop
xor
fs
mov
and
loope
mov
xor
xor
data16
insl
das
cmpsl
mov
and
sub
shlb
aas
dec
andb
xchg
mov
shl
mov
vpand
fistps
and
xchg
pusha
cmp
inc
mov
inc
mov
and
cmp
mov
pop
sbb
test
and
nop
mov
cs
add
jbe
xchg
xchg
cmp
fwait
or
rorl
inc
pop
pop
int
adc
test
xor
andb
lock
je
mov
andb
jg
sub
mov
aaa
out
loopne
xchg
inc
aam
inc
inc
mov
add
cmp
rcrb
je
add
insl
loop
mov
std
sub
and
popa
addb
daa
popa
xor
fldt
mov
dec
loopne
in
xor
mov
xchg
pop
pop
addb
push
mov
hlt
push
dec
pop
das
mov
mov
test
subb
arpl
cmp
aaa
movsl
in
popf
pop
jle
push
inc
mov
pop
push
inc
cmpsb
and
int3
mov
addb
jge
ficomps
mov
sbb
in
test
pusha
jns
ljmp
in
fstps
lods
inc
add
fs
pop
mov
lret
cmpsb
rol
icebp
and
add
dec
popf
mov
daa
addr16
or
xchg
inc
mov
sarb
push
and
lret
fnstcw
lret
pop
mov
pop
mov
shlb
lods
and
ss
add
add
xor
and
in
xor
mov
pop
outsl
push
mov
dec
xor
push
icebp
std
sub
xchg
pop
stos
add
mov
cmp
sub
xchg
xor
test
loopne
inc
mov
jns
inc
mov
jno
push
jle
sbb
jmp
lea
xor
pusha
inc
jle
repnz
pushf
cmpsl
adc
mov
mov
in
shlb
rorl
jmp
sti
xor
mov
addb
xor
movsb
pusha
rolb
loopne
pop
adc
mov
inc
jno
lea
and
loopne
pop
xlat
add
cltd
leave
es
xchg
bound
fsts
jl
mov
stos
pop
and
cmc
mov
sub
add
adc
add
cld
pop
pusha
adc
pop
dec
add
shlb
pushw
popf
outsl
push
add
rcl
mov
inc
add
jno
push
mov
or
loopne
in
xchg
loopne
sbb
inc
inc
xor
arpl
int
insl
push
mov
lds
adc
sub
mov
cmp
outsl
xchg
fcomi
aad
mov
rorb
cmpsl
push
sbb
xor
stos
add
inc
dec
add
inc
xlat
sbb
jb
jbe
mov
lret
movsb
loopne
sub
and
cmp
loopne
test
cmp
mov
icebp
dec
nop
call
aam
pop
sar
nop
pop
ja
fs
push
hlt
jecxz
shlb
fldt
shrb
out
shlb
ja
sub
pusha
add
std
dec
xor
inc
sub
loopne
inc
adc
push
xchg
fisttpll
xchg
aas
movd
jge
outsl
jge
pusha
add
pop
ss
and
int3
test
rol
ret
xchg
nop
pushf
jnp
ret
ja
push
push
pop
fs
add
fwait
int
xchg
bound
lahf
mov
or
cmp
inc
jmp
pusha
sbbb
dec
and
sarb
ds
add
add
mov
or
jg
in
xchg
test
mov
push
mov
int
rcl
pop
jo
pop
mov
sbb
add
cmpsb
and
rol
inc
imul
andb
rcrb
xchg
int
imul
inc
and
add
repz
add
add
add
subb
inc
sahf
ja
int
pusha
pusha
and
icebp
push
rcr
les
sub
sub
jb
loopne
movsb
andb
stos
test
and
and
shrl
cmp
pop
mov
out
xor
je
inc
and
mov
mov
add
inc
sbb
insb
es
pusha
jno
mov
xchg
pop
jnp
or
in
inc
inc
mov
ret
insb
lods
pop
dec
int3
aam
fdivrl
jmp
jg
scas
loopne
mov
insl
inc
mov
loopne
lret
je
mov
jmp
pop
mov
andl
mov
inc
icebp
pop
stc
jb
xchg
arpl
in
xor
shlb
subb
in
pushf
lock
lock
les
inc
mov
andb
ss
cmp
and
and
icebp
leave
push
xchg
sti
clc
movb
pop
sub
loopne
inc
sarb
mov
push
icebp
jbe
pop
sub
hlt
es
and
shrb
imul
imul
xchg
xlat
mov
push
push
mov
outsb
insl
cmp
rolb
shrl
or
jae
mov
in
xchg
rcrb
jnp
inc
scas
loopne
lret
dec
add
add
dec
cli
stos
call
arpl
jmp
fldt
ss
xchg
cmp
inc
std
push
in
xlat
dec
sbb
jmp
mov
xor
push
mov
xor
scas
add
add
add
cmpsb
pusha
rcrb
adc
push
outsl
mov
jno
test
mov
aad
andb
mov
and
movsb
inc
pusha
xor
push
pop
push
inc
mov
xchg
mov
es
or
and
std
sub
pusha
pusha
daa
push
mov
in
xchg
mov
mov
add
cmp
rol
push
and
repnz
shrb
and
inc
sahf
add
mov
outsl
imul
movsl
jmp
or
mov
inc
movl
fmul
dec
scas
pop
fstl
mov
out
and
enter
cmp
pushf
jne
sti
imul
rclb
in
push
jae
or
and
dec
imul
int3
or
xchg
fdivrl
fdivr
inc
nop
mul
and
add
and
mov
jmp
mov
xchg
lock
jmp
stos
mov
push
sbb
cltd
xchg
sahf
jns
popf
adc
int
pop
stc
fisubl
rol
aas
push
inc
mov
andb
arpl
mov
sub
mov
sbbb
pop
sbb
hlt
iret
inc
repnz
insb
fcoms
clc
mov
roll
gs
add
jmp
and
xchg
push
mov
adc
fsubrs
inc
aam
ja
repz
push
and
sub
inc
and
loopne
inc
add
xchg
sti
xchg
pusha
int3
dec
lret
add
loopne
mov
clc
sbbl
add
cmpsb
pusha
and
je
pop
add
pusha
faddl
lds
add
stos
pusha
pusha
inc
pop
test
add
test
and
mov
add
push
mov
shrl
jnp
pop
loope
loopne
pop
int3
xchg
sbb
gs
dec
insb
rcr
pop
outsl
in
gs
sbb
add
out
xor
mov
and
pusha
rcll
mov
loopne
jae
roll
nop
cld
imul
sub
addb
movsb
add
pop
lock
imul
mov
xchg
mov
loopne
cmp
xchg
and
in
icebp
or
sbb
jg
or
and
add
rolb
sbb
bound
add
pop
lcall
ss
mov
mov
orb
rep
fs
imul
insb
les
sub
gs
cmp
or
add
mov
xlat
mov
jb
mov
add
js
mov
fnsave
xchg
push
pop
push
loopne,pn
scas
mov
aas
adc
iret
aaa
or
cmp
xorb
push
sub
popf
push
imul
lods
test
or
jmp
dec
add
inc
jg
or
cmp
and
pusha
dec
outsb
sti
adc
adc
std
arpl
pop
out
cmp
cmc
mov
ret
shlb
aad
xchg
jecxz
mov
add
clc
pop
je
push
inc
lret
xchg
mov
ljmp
addr16
fildll
rolb
icebp
jnp
mov
add
push
addb
inc
sub
push
and
in
and
fs
insl
test
dec
push
mov
out
inc
sub
pusha
mov
dec
sub
andb
test
dec
cmp
push
sarb
xor
dec
pop
jne
std
stc
xor
loopne
int3
dec
int3
jg
decl
shrb
mov
andb
lret
adc
repz
sub
pusha
lds
fsubrl
rol
mov
test
lret
jg
inc
aas
dec
dec
popa
lods
and
jecxz
mov
call
imul
push
dec
jge
adc
push
mov
hlt
fstps
pusha
loopne
nop
popa
mov
jecxz
or
in
ret
cmp
pusha
pusha
inc
lret
mov
fdivr
mov
andb
mov
out
leave
jle
shll
add
push
and
addb
jl
xor
loopne
pop
int
addr16
insl
or
add
in
pop
sbb
rolb
dec
mov
dec
setge
inc
and
fidivl
loopne
mov
pusha
add
add
repnz
inc
cmc
into
test
mov
data16
mov
sub
inc
push
push
pusha
and
int
arpl
loopne
lret
lods
xchg
loop
mov
vmovq
mov
loopne
dec
stos
shlb
cwtl
adc
xor
test
fldt
pop
dec
scas
or
inc
add
fsubrl
jb
add
add
jle
and
out
ds
dec
lods
adc
es
add
inc
pop
mov
dec
ds
ds
mov
call
js
test
add
add
add
into
pop
in
pusha
rorb
jb
std
or
clc
insl
mov
mov
and
pop
addr16
xlat
sub
jo
fstpt
loopne
and
lret
pop
leave
gs
sub
loopne
fsubrs
in
movsb
pusha
loopne
jo
cmc
loop
repnz
data16
inc
mov
rolb
test
mov
and
mov
xor
ror
add
mov
adc
jbe
insb
mov
aad
cmp
repnz
add
xchg
adcb
in
mov
loopne
xchg
rclb
shlb
inc
push
cmp
cmp
loopne
cs
and
aam
addb
mov
jmp
ss
inc
and
xchg
es
pusha
mov
mov
loopne
pushf
mov
mov
call
neg
cmp
shlb
pop
xchg
sbb
cmpsl
roll
adc
shl
arpl
pop
dec
test
rclb
pusha
inc
and
and
inc
out
sub
movsl
nop
xchg
inc
movsl
push
mov
mov
push
mov
icebp
mov
sbb
int
pusha
add
or
cmp
mov
enter
add
addb
out
xchg
mov
movsl
dec
cli
push
jne
push
adc
scas
pusha
cmpb
inc
arpl
mov
dec
jno
movsb
and
mov
lcall
add
icebp
ljmp
xlat
jno
dec
pop
fucom
xchg
es
lods
inc
dec
mov
movsb
mov
inc
add
int3
mov
sbb
fwait
sub
gs
xorl
pusha
adc
inc
add
push
inc
and
xchg
mov
and
mov
repz
push
scas
pusha
pusha
int
dec
or
add
add
lds
add
or
mov
and
and
shlb
jo
mov
pop
loopne
mov
mov
xor
jbe
cmc
mov
sub
xor
pop
inc
leave
or
push
sbb
cs
andb
add
inc
pushf
inc
popf
shrl
pop
push
sub
push
sbb
jbe
scas
push
pop
sbb
add
jecxz
dec
pushf
enter
xchg
mov
rcrb
int3
sbb
fcmovu
and
mov
out
js
stc
gs
sahf
sub
and
mov
mov
add
cmp
cmp
and
push
mov
push
inc
mov
inc
je
fwait
mov
shlb
fldenv
dec
ret
mov
and
push
outsb
rorl
into
or
or
test
outsb
sti
or
xor
pusha
mov
imul
add
iret
jg
lods
je
loopne
mov
pop
jecxz
addb
aam
sbb
mov
add
clc
pop
icebp
mov
jns
test
cmp
popa
andb
and
shrl
sub
je
in
adc
adc
jecxz
das
sub
shlb
repnz
fsts
cwtl
mov
mov
dec
jae
divl
add
pop
mov
inc
scas
outsb
testb
in
mov
inc
add
add
inc
add
ss
loopne
add
cmc
sub
adc
lock
add
andb
mov
jo
dec
int
test
and
fs
cltd
hlt
push
sbb
xchg
cltd
dec
daa
jne
jle
xor
mov
fs
cmp
lret
pop
in
int3
inc
or
popf
add
push
rclb
loope
ret
pusha
pusha
lahf
push
outsb
jmp
enter
adc
add
sub
imul
push
inc
out
out
mov
js
mov
mov
inc
pusha
loopne,pn
xchg
and
inc
cmp
aaa
subl
std
push
inc
pop
cs
insb
cmp
add
ret
rolb
add
mov
pop
pop
mov
and
mov
scas
test
inc
bound
push
push
or
shr
jno
ss
addb
cld
jg
int3
jnp
or
xlat
add
shr
jge
inc
inc
daa
fnstcw
mov
xor
addb
xchg
cmc
fdivrl
rcr
bound
mov
addl
mov
push
mov
mov
inc
sarb
fnop
or
lcall
mov
lods
push
nop
mov
xlat
mov
and
call
pusha
add
loopne
jno
lods
repz
dec
lcall
pop
xchg
data16
sbb
out
push
dec
lret
pusha
mov
or
pusha
xchg
mov
stc
lods
ss
stos
or
dec
inc
xchg
add
jb
loopne
fdivp
cmpl
mov
push
stc
ret
adcl
jo
andb
pusha
push
cwtl
mov
rolb
pusha
sub
cmovnp
aad
mov
mov
add
lods
xor
xor
gs
out
jp
pop
je
and
xchg
and
or
adcb
aad
or
je
and
and
mov
inc
xor
mov
insl
jge
call
add
add
xor
fimull
dec
add
push
adc
push
loop
add
rol
pusha
pusha
ljmp
stos
cmpsl
incl
and
sbbb
mov
jne
pop
jnp
xchg
cmp
mov
sahf
scas
mov
xchg
rcrb
adc
sbb
inc
loop
pop
into
int3
aad
push
or
pusha
mov
out
cmp
loope
test
inc
jne
inc
into
sub
add
sahf
mov
or
mov
pop
xor
loopne
push
lods
and
imul
int3
mov
mov
mov
xor
xor
and
pop
lods
movsl
in
arpl
sbb
jnp
cmp
jge
loope
and
enter
xchg
loopne
loop
xchg
cmp
inc
inc
mov
repnz
jl
hlt
test
subb
cld
cmpsl
adc
add
sahf
sub
rol
push
or
movsb
pusha
and
js
pop
sbbl
xchg
jl
fnstsw
pusha
shrb
dec
sti
jp
mov
into
decb
jp
das
mov
inc
in
jge
mov
xchg
repz
movsl
scas
adc
cmp
mov
les
fidivrs
fimuls
sub
inc
jae
or
pop
jge
ds
cmp
xchg
jo
cld
incl
rolb
dec
jbe
xchg
and
addb
stc
stos
pop
mov
test
into
and
shrb
cwtl
add
loopne
lods
add
out
mov
sbbb
sbb
xchg
pop
cmpsl
pop
fnstsw
adc
fisttpl
addb
mov
inc
xorb
pusha
jecxz
xchg
mov
aam
testl
or
test
int
push
and
loopne
jge
int3
sub
add
mov
cmp
ficomps
add
and
repz
push
mov
cld
xor
sub
repnz
call
hlt
mov
cmp
rolb
mov
sbb
pusha
cmp
cmp
leave
fldenv
mov
pushf
out
std
outsl
push
pop
loopne
cli
int3
mov
ffreep
jne
mov
lcall
loopne
ss
lock
pusha
loopne
jbe
addb
subb
add
mov
lds
mov
cwtl
push
pusha
and
arpl
addb
call
and
mov
popf
adcl
jg
xchg
das
scas
loopne
sub
push
sti
jge
pusha
shlb
pop
fadd
xor
adc
jge
stos
jno
ret
std
jle
scas
inc
jne
adc
inc
inc
mov
add
idivl
jb
push
rclb
sub
mov
test
addb
loop
push
or
add
dec
pop
or
loopne
in
xchg
push
and
fmuls
dec
js
out
add
add
ljmp
and
and
dec
stos
andb
push
pop
mov
nop
dec
addl
lds
fs
jle
test
push
ljmp
push
sbb
shr
loopne
ret
adc
xchg
sarb
bsf
js
cld
xchg
dec
addr16
add
xchg
lds
inc
xlat
shlb
mov
add
pop
data16
dec
xchg
rcl
movsb
mov
pusha
test
rcrb
sub
cwtl
scas
add
ror
idivl
adc
icebp
xchg
dec
stos
inc
mov
inc
ds
in
fstp
dec
test
xorb
addb
adc
loopne
fisttps
shlb
xor
mov
mov
popa
push
lret
imul
xchg
cmp
cmpl
inc
and
outsl
sbb
ljmp
in
pop
jbe
rolb
mov
push
cmova
jne
sub
and
cs
add
lcall
dec
imul
add
mov
push
fstpt
pusha
and
dec
or
fwait
in
pop
sti
pop
sbb
rolb
out
sub
mov
inc
jbe
bound
loopne
fdiv
loopne
jae
sbb
loope
imul
xchg
jle
es
sbb
ja
mov
out
out
inc
xchg
test
icebp
jp
push
testl
shlb
aaa
aam
das
lcall
mov
out
cmp
mov
inc
inc
sub
add
je
jmp
cmpb
arpl
ror
jnp
dec
pop
lock
out
sahf
loopne
jbe
pusha
add
loopne
loopne
add
xchg
inc
mov
leave
ss
jl
mov
loopne
pop
movsl
repz
outsl
mov
sarl
jbe
xchg
inc
pusha
add
cmpsl
mov
aam
add
iret
pusha
xor
cmpsb
pusha
loopne
je
cli
cmp
xchg
dec
fadd
push
mov
push
test
aaa
push
xchg
inc
arpl
xchg
sbb
cltd
cli
popf
mov
cmp
jo
and
dec
into
cmp
jl
shlb
int
sbbl
dec
mov
enter
hlt
sti
or
in
sub
inc
mov
mov
daa
lea
pushf
mov
loopne
fdiv
fnstenv
xchg
clc
adc
mov
mov
rorb
xor
and
mov
add
add
shlb
mov
fbld
andb
loopne
mov
add
mov
inc
pop
pop
mov
jecxz
sti
sbb
pop
in
sub
add
testb
dec
ss
or
mov
in
addr16
pushf
adc
xchg
les
push
and
arpl
xchg
adc
js
pop
fs
loopne
inc
xchg
outsl
std
in
in
arpl
dec
push
andb
push
addb
pusha
sbbb
mov
rolb
xchg
inc
xor
fmull
xor
pusha
cmp
subl
pushf
sbb
mov
push
test
mov
loopne
mov
rolb
mov
add
inc
add
stos
daa
test
jecxz
pop
pop
mov
aad
addb
fbstp
fnstenv
and
and
jge
into
sarb
dec
imul
std
inc
aas
cmpsb
pusha
shr
test
call
adc
push
adc
pop
lods
mov
mov
pop
mov
fimuls
sub
mov
mov
add
rolb
jo
mov
pusha
movsb
pusha
and
dec
bound
inc
xchg
and
and
add
int3
xchg
insl
insb
repz
scas
lcall
xchg
loope
mov
mov
cmpsb
loopne
xor
pushf
sub
jmp
es
pusha
in
mov
or
push
ror
ret
inc
mov
lock
les
icebp
mov
sbb
loopne
out
xor
das
fsubl
shlb
andb
neg
sti
pop
mov
mov
cmp
pusha
mov
or
add
subl
cmp
mov
jg
and
ret
sub
add
pcmpeqw
cmp
mov
rcr
andb
ja
inc
mov
sbb
aaa
test
sub
mov
cwtl
pop
leave
cli
fidivrs
pusha
mov
cmpb
addb
xlat
push
xor
add
xor
rolb
adc
scas
je
fwait
pushf
adc
inc
lods
pusha
loopne
ja
loopne
xchg
iret
dec
movsb
andb
cmp
pop
adc
xchg
loopne
sub
shlb
jns
leave
pusha
stc
push
and
adc
stos
pusha
ror
cmp
into
add
repnz
inc
gs
jp
loopne
ds
mov
add
jl
sbb
xchg
cmp
jge
sub
mov
sub
outsl
or
shlb
push
and
call
shlb
push
addb
xor
xor
jbe
dec
ret
sbb
xor
scas
inc
mov
shlb
adc
sub
into
cli
add
adc
push
xchg
enter
add
sub
push
inc
inc
sub
and
xchg
add
fwait
in
rorb
pusha
mov
jp
mov
rcl
mov
shrb
sbb
xchg
jb
push
mov
add
and
fdivrl
inc
pusha
addb
add
mov
in
or
inc
nop
movsl
sub
add
mov
jnp
pop
add
shl
adc
inc
push
add
int3
imul
add
fwait
jmp
or
jns
repnz
push
insb
jb
sbb
fsubs
pop
addl
and
fstpl
hlt
and
fsubrp
rorb
pusha
add
insl
das
inc
daa
js
addb
push
xchg
mov
cmc
adc
lods
lahf
dec
rcrb
test
orb
push
adc
mov
cld
jl
xchg
push
loopne
ds
xchg
mov
jle
lret
fcom
cmp
leave
mov
movsb
andb
shrl
repz
js
mov
mov
add
out
jo
and
xchg
addr16
dec
cmp
test
or
xlat
or
std
pop
jns
add
outsb
repnz
ret
leave
mov
push
imul
jmp
mov
bound
push
mov
add
and
shl
push
adc
rolb
stc
dec
ss
test
mov
loopne
xor
pusha
pusha
jl
xchg
adc
sahf
popa
mov
and
pusha
sub
inc
dec
pop
cmpsb
and
fidivl
aad
mov
fldl2e
ret
mov
jmp
mov
pusha
and
cmpb
sub
add
out
jae
add
shll
sbb
push
dec
jle
jne
leave
push
shll
jp
mov
je
loop
addb
shl
mov
adc
sub
jo
ljmp
and
and
mov
mov
insb
iret
sarb
mov
rolb
shl
jns
imull
addb
andb
push
stos
fstl
rcrb
js
xor
pop
std
lret
rorb
cli
xor
add
testl
lods
sbb
loopne
pusha
and
add
adc
mov
pusha
mov
adc
addr16
cwtl
inc
dec
sbbl
pop
addb
lret
fwait
inc
xchg
cmc
in
pusha
rorb
test
jbe
jle
inc
ud1
pusha
xor
jns
and
inc
or
bound
add
cli
xchg
scas
shlb
push
cmp
add
loopne
lcall
sbb
xchg
mov
pop
mov
add
mov
sti
outsl
pop
out
inc
push
in
into
inc
xchg
jmp
cs
cmp
add
aam
dec
cmp
mov
xchg
hlt
or
adc
dec
push
inc
repz
cmp
pop
imull
xchg
out
inc
test
inc
xchg
and
pusha
pop
test
lock
shr
add
or
out
mov
pcmpeqw
sub
or
loopne
add
lret
fcomps
inc
mov
cmc
lret
mov
jp
pop
cld
test
data16
pop
xchg
mov
loopne
loop
inc
int
pop
sar
inc
inc
out
andb
das
cmp
push
pusha
rolb
cmp
xor
fiaddl
outsb
jg
sub
adc
or
pusha
jae
jge
mov
mov
xlat
sbb
and
cmpb
das
xor
inc
mov
cmpsl
or
je
xchg
int
lcall
scas
inc
in
jo
lds
addr16
mov
sbb
into
sbb
lods
out
fs
adc
lds
shrb
lea
les
js
mov
sbb
loopne
fs
pop
scas
mov
mov
cs
mov
dec
jg
sub
shl
std
sub
roll
mov
in
in
dec
push
xlat
jnp
and
movsl
les
sub
ret
repz
mov
pusha
pusha
xchg
lods
pusha
pusha
rcrl
imul
xchg
subl
jnp
inc
jp
jnp
inc
loopne
mov
shrl
mov
pusha
jo
mov
mov
fistpll
rorb
push
jp
dec
mov
sub
add
rcrl
lock
shlb
add
repz
sub
sarb
mov
mov
inc
mov
test
ret
andb
scas
mov
cmp
or
fwait
inc
or
shll
gs
pusha
cmp
inc
mov
shll
fldenv
mov
ljmp
fstpt
cwtl
mov
mov
shlb
cmp
lret
mov
xor
popf
addb
xchg
xor
loopne
push
sub
pusha
dec
les
sub
inc
jle
lcall
dec
mov
movsb
andb
roll
mov
dec
jb
loopne
mov
pusha
stos
inc
pusha
cmp
and
dec
inc
mov
add
push
xor
jbe
mov
lea
xchg
jle
loopne
ret
jg
adc
lods
add
cwtl
sbb
push
and
test
inc
sti
and
add
xchg
addl
mov
loopne
and
pusha
test
and
movsl
lret
jecxz
andb
cmp
adc
movsl
sbb
dec
or
jno
leave
js
imul
and
and
loopne
mov
xchg
cmp
in
scas
cmp
jbe
repz
sbb
aaa
fildl
rcll
int
push
fildll
push
outsb
out
rsm
mov
add
and
add
pop
and
jl
xchg
enter
xchg
sbb
or
inc
mov
loopne
pop
pop
lds
pusha
and
inc
cld
or
inc
cli
fucomp
out
je
add
ss
xchg
lret
les
rolb
add
inc
xchg
repz
mov
sldt
add
rorb
sub
addb
push
loopne
test
loopne
pusha
jbe
mov
sarb
imul
mov
xor
inc
adc
adc
movsl
or
dec
cmpsl
push
push
test
add
push
jnp
addb
mov
add
jno
sub
aas
out
roll
lret
pop
sub
or
push
lods
add
sbb
add
mov
fiaddl
xor
bnd
cmp
dec
pusha
scas
and
in
xchg
mov
jbe
pop
push
test
pusha
and
and
or
add
or
mov
pop
dec
or
mov
push
inc
daa
and
xor
push
and
sbbb
pop
or
cmp
arpl
and
cli
mov
repz
stc
cmpsb
and
or
add
adcb
fldenv
test
pusha
jo
xchg
mov
jbe
sub
ja
push
jnp
int3
jmp
icebp
inc
dec
ret
scas
addb
fsub
adc
pushf
je
mov
and
add
pushf
xchg
aad
mov
pop
mov
add
add
push
mov
mov
push
clc
stc
mov
inc
test
notl
out
roll
pusha
rcrl
mov
insb
xor
inc
and
add
clc
push
pusha
add
xchg
xor
lret
adc
mov
rorl
rcrb
sub
movsb
add
stc
fstl
xchg
add
ret
and
loopne
es
pop
add
inc
fimull
hlt
push
andb
subb
rclb
roll
sub
sub
mov
test
mov
lock
pusha
xchg
fwait
sub
and
inc
inc
dec
mov
ljmp
pop
imul
pop
sub
adc
cld
aam
and
shr
cltd
push
rorb
loopne
ftst
push
inc
andb
movsl
ret
cmp
outsb
jmp
shlb
aam
add
xchg
mov
insl
pusha
lock
or
jb
cmpsb
and
nop
popa
in
inc
pop
xlat
mov
in
mov
rolb
mov
sbb
ror
and
loopne
shll
jl
cmpsl
mov
hlt
das
or
mov
push
and
inc
xor
daa
pop
rorl
mov
enter
mov
add
dec
insl
cmp
fstl
mov
or
pusha
and
pop
dec
sbb
lea
punpcklwd
pop
cmpsl
mov
xor
aad
fwait
push
cmp
add
mov
addb
lcall
and
test
or
dec
andb
jg
adc
loopne
in
jne
mov
and
outsb
push
and
pusha
loope
cmp
repz
dec
and
fwait
lea
and
xchg
orl
and
inc
inc
pushf
push
pusha
add
not
and
inc
or
jecxz
push
add
push
or
xchg
add
loopne
outsl
pop
dec
adc
ljmp
and
mov
inc
fistps
lea
enter
subl
pop
sarl
mov
loopne
sbb
incb
add
mov
sub
loopne
jbe
test
in
andb
or
add
inc
inc
pop
outsl
sub
rorb
push
mov
repz
shlb
mov
ss
rcrl
xchg
fwait
inc
sbb
add
jmp
mov
or
pop
jecxz
xchg
mov
inc
mov
and
sbb
and
mov
fisttpl
cmpsl
push
xor
push
or
pop
jl
mov
xchg
push
mov
add
imul
xor
andb
mov
movsl
test
pushf
stc
adc
js
lods
add
fbld
out
cmpsl
call
cmpsb
and
xchg
push
add
mov
pusha
inc
jnp
mov
das
mov
loop
dec
cmp
inc
icebp
xchg
int3
lret
jp
lret
std
pop
loopne
lcall
sbb
lods
jl
rolb
gs
andb
mov
pop
adc
or
xorb
movsb
inc
and
push
jae
push
dec
jmp
xchg
call
adc
call
add
movsl
mov
xchg
sub
adc
add
inc
sub
loopne
add
out
adc
xor
sub
loopne
mov
or
dec
push
pushl
push
pop
cli
sub
inc
push
idiv
aam
add
mov
sub
mov
call
add
inc
dec
sbb
jl
inc
dec
add
inc
rorb
mov
sub
loopne
push
pop
inc
pop
movsl
xor
mov
xchg
jg
lock
imul
fsubrs
add
pop
push
rorb
jmp
xor
adc
rorl
mov
pop
push
push
cmp
shl
mov
pusha
pop
inc
addr16
loopne,pn
jnp
jbe
mov
aad
lds
inc
add
adc
mov
push
xchg
dec
adc
repnz
data16
add
arpl
imul
movsb
rol
mov
imul
fistpll
jle
hlt
inc
jbe
cwtl
inc
lcall
jbe
es
jb
pop
xor
inc
sti
and
xchg
add
jge
mov
push
rcll
lds
mov
repnz
mov
xor
loope
adcl
outsl
leave
sub
or
add
aad
cmc
jae
into
fsubr
lret
push
lahf
nop
jmp
inc
test
inc
mov
pushf
mov
pusha
and
mov
mov
ds
stos
and
mov
ss
cmp
rol
add
add
test
jo
sbb
mov
sbb
insb
outsb
mov
mov
xor
add
into
mov
ljmp
lock
or
pusha
inc
sbb
insb
ds
jo
ret
fsubrp
insl
mov
mov
addb
jge
out
into
cmp
pusha
and
pusha
movsb
and
xchg
lods
and
loope
cmpsb
pusha
inc
mov
and
pop
addr16
pusha
scas
fucomip
mov
pusha
loopne
pop
cltd
lahf
inc
cld
ret
out
mov
dec
data16
and
add
xchg
negl
or
call
mov
and
jnp
pushf
scas
and
push
adc
sub
add
insb
pop
mov
leave
icebp
lcall
pop
add
aam
sub
sbb
lds
sub
sbb
test
and
lret
je
mov
loopne
push
cmp
shl
movsb
and
insl
stc
mov
inc
cmp
cmp
inc
and
rolb
jnp
shlb
jb
push
and
inc
gs
xor
incl
inc
mov
mov
add
mov
add
je
cmp
negb
push
in
cmp
pop
pop
shlb
sub
or
loopne
ljmp
mov
loopne
scas
add
xor
icebp
or
add
mov
mov
fbstp
mull
ret
inc
lods
and
mov
mov
cmpsb
and
rolb
mov
loopne
imul
pusha
mov
sub
enter
movsl
jl
lret
dec
gs
cltd
jnp
sbb
andb
add
pop
sub
enter
or
add
js
stos
adc
mov
lret
sub
add
inc
into
or
adcb
xor
jmp
inc
hlt
imul
mov
add
insl
addl
mov
inc
punpckhdq
loopne
adc
sbb
xchg
adc
imul
add
mov
jnp
imul
outsb
pop
dec
in
add
adc
mov
rol
addb
sub
add
ja
cmp
push
out
ja
jae
ljmp
lcall
das
cmp
jo
scas
add
cmc
in
fldt
shrb
jle
insb
clc
shrl
leave
xchg
in
rclb
shl
rcrb
mov
andb
xchg
dec
inc
push
inc
add
pusha
pusha
sub
lahf
scas
rorb
inc
mov
jns
and
add
dec
loopne
cli
mov
lods
add
add
inc
aad
aad
pop
mov
add
or
aad
out
push
push
lods
add
in
dec
cmpsl
in
sub
rcrb
pop
clc
xor
loopne
inc
and
shlb
test
xor
mov
inc
ljmp
in
int
lock
xchg
lods
and
push
mov
add
push
or
loopne
lods
inc
and
cwtl
mov
adc
andl
mov
push
or
inc
cmp
mov
stos
sub
pusha
popf
jb
cmp
movsb
and
pop
push
je
addb
stc
push
adc
jne
inc
cmp
pop
lods
jne
mov
pusha
pop
inc
and
inc
jmp
nop
mov
das
pop
aas
mov
mov
scas
inc
and
dec
int
mov
jno
or
lods
mov
pop
push
dec
fwait
inc
mov
stos
mov
or
and
pop
test
cmpb
cmpb
dec
test
inc
bound
fs
cmp
mov
rorb
and
pusha
outsl
inc
xchg
fs
push
xchg
mov
mov
dec
addr16
mov
loopne
cmpsl
jge
ja
cmpsb
mov
xor
and
inc
xchg
or
movsb
inc
rolb
mov
fucomi
jne
adc
lods
scas
xor
in
mov
sub
add
ret
or
insb
fcomps
fildll
mov
into
jle
ret
add
dec
xchg
lret
cld
cmovno
cli
mov
xor
xchg
jecxz
add
mov
inc
ljmp
xchg
in
jae
fstpl
imul
loop
and
call
xchg
xor
cmp
dec
add
fistps
lahf
and
mov
xor
ljmp
sbb
sbb
xchg
adc
clc
and
and
ret
cmp
fwait
rcrl
add
pusha
addb
add
fimuls
arpl
stc
pop
rcrb
sub
loopne
lds
jmp
jno
cmp
cltd
mov
xor
pop
imul
pop
dec
insb
lahf
cmp
sbb
or
pusha
mov
adc
xchg
pop
cwtl
adc
test
and
mov
or
and
loopne
shlb
je
pop
cli
outsb
inc
daa
aad
and
mov
andb
shlb
mov
add
rolb
inc
loope
sbb
and
mov
mov
jno
jo
jg
sbbl
xor
dec
mov
mov
ret
jno
andb
fldcw
push
addb
shll
pusha
loope
sarb
inc
adc
out
push
push
push
test
sbbb
movb
mov
jmp
loopne
das
das
aaa
pop
aaa
ret
cwtl
inc
pop
je
inc
jnp
push
add
inc
insl
cmp
dec
cmp
pusha
enter
inc
mov
cmpb
shrl
pusha
mov
loopne
mov
fcmovb
out
fildll
andb
outsb
lea
xchg
jo
jns
xchg
xchg
add
pusha
inc
dec
arpl
fistps
pusha
andb
popf
insl
loope
arpl
and
dec
addr16
stos
andb
add
pusha
scas
sub
mov
lahf
xor
adc
jnp
pop
imul
loopne
insl
outsb
add
daa
mov
out
out
sub
dec
dec
fdivs
or
insl
lock
add
aam
movb
imul
and
add
pusha
lds
aas
icebp
loop
pop
bound
or
rclb
cmpl
in
stos
loopne
fnsave
sti
cmp
mov
lea
mov
clc
mov
lcall
push
out
ds
mov
stc
cmp
andb
andb
pusha
shl
lods
rolb
dec
xor
call
addl
jbe
fisubs
mov
push
std
jge
pusha
loopne
jns
xchg
cmp
push
out
fisubl
loopne
push
shlb
sbb
andb
paddusw
pop
jle
lods
addb
or
and
repz
add
inc
lcall
inc
adc
mov
popf
movsl
fcomp
xchg
sub
std
test
ficompl
jb
add
push
and
in
daa
cmp
daa
xor
ljmp
inc
sbbb
pop
pop
pushf
stos
inc
mov
test
sarb
cwtl
out
mov
jno
sbb
push
fnstsw
ja
sbb
dec
flds
gs
iret
or
adc
sbb
add
jmp
addb
insl
fmull
mov
loopne
xchg
push
stc
xchg
inc
pop
imull
pop
push
xor
pusha
add
nop
mov
push
fsts
pop
adc
pop
sub
loopne
mov
addb
pushf
inc
outsl
push
aam
lcall
imul
mov
cmpsb
add
xchg
ret
xchg
roll
add
add
