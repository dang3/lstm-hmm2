xor
int
xchg
pop
cmc
sbb
and
add
push
roll
add
fisubrl
aas
inc
add
xor
insl
ficomps
pushf
mov
enter
add
scas
jg
mov
insb
and
sub
lret
shl
lret
push
xor
imul
push
inc
inc
mov
hlt
aas
aas
push
int3
insl
out
icebp
rorl
div
sub
mov
out
mov
and
cltd
cs
pop
cmp
inc
add
out
cmp
mov
add
scas
sub
loopne
outsl
add
sbb
xchg
adc
and
into
mov
popf
mov
mov
jge
stc
mov
add
mov
je
adc
adc
mov
sbb
mov
xor
aaa
jecxz
sub
jnp
or
add
int
adc
add
leave
aas
xor
xlat
ret
fwait
ret
dec
cmp
fcomps
sbb
mov
mov
ret
pop
mov
and
aas
ljmp
mov
cli
push
jecxz
dec
jno
add
lret
insl
ja
pop
in
pop
ss
sbb
int3
jl
jno
pop
pop
addb
pop
popa
sub
pusha
add
add
sub
xor
add
inc
add
mov
add
jmp
std
loopne
ja
aaa
and
push
loope
xchg
addb
xchg
mov
shr
jmp
sub
popf
por
sub
call
pop
cmp
ds
jle
mov
mov
inc
push
add
daa
xchg
jle
jae
jb
rolb
test
cmp
add
xchg
imull
cli
mov
mov
xchg
add
mov
lahf
icebp
dec
mov
popf
xchg
in
cmp
and
add
jno,pt
fisttpll
pop
jle
fadds
jbe
mov
enter
insb
jnp
mov
push
cmp
jge
inc
les
jne
add
ljmp
sbb
dec
or
sahf
mov
and
pop
decl
jecxz
fbstp
repz
fisubrs
dec
mov
movsl
xchg
mov
add
je
or
add
pushf
repz
fcoms
aas
pusha
add
out
mov
sarb
xor
loop
es
movsb
jnp
in
js
les
into
sbb
sbb
xor
lock
jno
jb
add
fwait
daa
int
xchg
xchg
data16
cmp
sub
mov
add
cmp
insl
stos
sbb
mov
stos
insb
or
inc
cmpsb
cmpsl
adc
xor
outsl
xchg
xor
mov
mov
sub
rolb
aaa
lahf
pop
cmp
mov
stos
lds
add
jecxz
mov
push
loopne
add
mov
push
pop
push
bound
repz
fwait
xor
jl
and
sahf
lcall
add
inc
add
cmpsl
in
or
mov
push
xchg
dec
out
inc
add
outsb
mov
je
int3
and
push
lds
add
or
pop
pushf
fdivrs
jmp
push
jmp
scas
mov
xchg
pop
es
jnp
sub
xchg
jge
js
pop
dec
or
jo
loope
mov
mull
test
dec
or
pop
cmpl
fs
mov
add
add
mov
stc
xchg
addb
movsb
sarb
push
cmpsl
add
mov
xchg
mov
orl
xor
js
cs
std
ret
les
and
in
cltd
test
cwtl
inc
pop
xchg
ret
dec
jo
sti
iret
cltd
cld
add
push
rcr
push
mov
add
fistpl
iret
or
adc
aad
jmp
push
inc
cwtl
shl
iret
mov
dec
cmp
mov
ficoms
and
add
adc
add
mov
aam
pop
scas
repnz
mov
cmp
adc
sub
inc
jg
dec
dec
outsl
xchg
out
nop
inc
xchg
push
insl
test
xchg
jnp
mov
push
lods
std
imull
ss
add
dec
into
pop
mov
or
imul
mov
shrl
and
push
addb
cmp
stc
or
iret
int3
mov
jbe
xor
cmc
adcl
mulb
mov
shll
lcall
shlb
cld
call
push
seta
test
and
ja
jbe
mov
fdiv
imul
inc
out
cltd
repz
sbb
xchg
push
cmp
jg
mov
push
call
stc
xchg
sub
mov
mov
dec
cld
or
push
xor
std
cmp
inc
add
sbb
push
lds
ds
in
sbbl
add
int
jne
sub
hlt
aad
inc
adc
mov
jno
lret
mov
xchg
loope
js
and
cmpsl
imul
pop
xor
lret
inc
imull
loop
sub
je
je
stos
addb
dec
leave
pop
daa
imul
or
faddp
add
cmp
xchg
jnp
pop
sbb
fnstenv
dec
ret
jns
scas
hlt
mov
sub
aad
enter
lahf
inc
popf
adc
sub
xchg
push
mov
out
out
je
fistl
jno
cmp
sbb
insl
and
xor
mov
jg
aas
dec
xor
arpl
add
out
add
fdivrl
out
dec
sub
out
pop
and
ss
jnp
jne
add
add
scas
in
push
mov
pop
les
ficompl
push
fisubl
stc
out
andl
mov
dec
push
add
je
add
ss
add
add
ficomps
add
aam
add
sti
mov
push
movsl
pop
pop
shrb
ss
xlat
scas
aas
dec
jb
add
lods
mov
insb
jl
daa
addr16
cmpsb
add
ret
popf
inc
ss
fwait
xchg
jno
add
dec
movb
lock
xor
mov
orl
sub
int3
in
movsb
fmull
mov
pop
jp
mov
addb
fstl
addb
rolb
add
ss
outsb
stos
and
push
cld
add
mov
add
gs
hlt
push
mov
repnz
loop
jmp
xor
inc
pop
addl
testl
dec
mov
and
sbb
inc
add
sub
dec
push
push
sbb
adc
mov
sti
out
add
cmp
rcrl
cmp
pop
mov
and
movsl
push
mov
outsb
inc
mov
xlat
test
mov
dec
mov
and
stos
inc
sbb
xor
add
mov
lret
add
xchg
inc
add
add
int
and
add
icebp
mov
or
pop
std
push
push
inc
add
std
fildl
mov
lods
movsl
jl
mov
and
add
pop
push
ljmp
stc
jmp
neg
push
inc
add
add
out
mov
outsl
mov
out
or
ret
mov
stc
and
pop
cld
jbe
pop
in
rcll
add
es
cmpsb
pop
outsb
push
stc
cmp
and
mov
les
and
les
or
rcr
cmpsb
cwtl
push
add
jno
add
xor
or
add
sub
rolb
aam
xor
rolb
push
les
xchg
fstpt
add
in
add
push
xchg
mov
cwtl
xor
pop
pop
aam
outsb
pop
aas
popa
sub
test
and
sbb
add
xchg
inc
add
popf
jo
rcr
sti
dec
lea
jle
mov
jno
dec
lcallw
shll
shll
add
and
fidivrl
aaa
out
leave
and
ret
or
clc
sbb
jno
and
mov
imul
andl
push
cmc
in
mov
cs
mov
and
xor
negb
jae
clc
mov
movb
stc
pop
dec
or
fsubr
scas
rolb
add
fnstcw
and
insl
shl
add
test
cmpsb
fs
sbb
iret
mov
sbb
pop
jg
daa
push
outsl
movb
addr16
adc
add
dec
xchg
scas
mov
and
into
into
addr16
mov
sbb
nop
sub
daa
inc
add
adcl
add
pushf
incl
pop
xor
mov
outsl
mov
gs
popf
leave
push
add
mov
add
icebp
jb
ret
dec
popa
out
daa
dec
loopne
mov
sbb
lds
scas
fneni(8087
rorl
mov
jmp
adc
sbb
add
outsb
leave
lahf
scas
das
pop
movsb
mov
popa
sub
std
push
add
push
cs
and
fisttps
aam
cwtl
je
inc
mov
out
call
decl
test
mov
imul
lret
mov
pop
xchg
mov
sbb
popa
push
push
pusha
add
sub
adcl
aaa
adc
xorl
add
test
mov
inc
add
cs
xor
addb
outsb
mov
scas
cltd
dec
das
mov
out
mov
push
and
cmp
hlt
jg
and
sub
sub
add
ret
inc
fdivrs
xchg
mov
cmpsb
repnz
sbb
add
pop
fwait
sahf
xor
jge
mov
mov
mov
or
adc
mov
sbb
gs
xchg
mov
pop
xchg
cmp
jnp
daa
ja
scas
pop
mov
cli
lcall
nop
jae
in
aam
out
mov
jbe
adc
dec
xor
int3
push
jae
loopne
inc
add
xchg
or
xlat
bnd
dec
pop
adc
mov
js
push
jo
add
push
out
or
js
jns
add
mov
call
loopne
shlb
mov
adc
xchg
jae
xchg
inc
add
stos
pop
pop
or
mov
out
imul
nop
and
add
pushf
int
sub
movsb
sbb
and
pop
mov
add
clc
push
adc
sub
imul
cmpsl
xchg
xor
sbb
mov
xchg
out
inc
add
repz
clc
dec
mov
sbb
rcrl
xor
xor
rolb
add
cmc
rolb
add
add
pop
int3
adc
lret
pushf
int3
mov
addb
sbb
push
jp
dec
pop
jg
cmpsb
negl
jmp
loop
in
mov
in
add
or
cmp
push
push
xor
add
add
jmp
fdivrs
cmp
ja
movsb
jp
aad
in
push
sub
mov
mov
into
fnstcw
lds
popf
loop
movb
add
push
leave
inc
add
add
pop
pop
data16
or
dec
repnz
fmull
adc
xchg
adc
lahf
sar
stos
in
jne
sahf
sbb
xor
push
adc
xor
push
lds
pushf
jp
mov
sbb
sbb
add
xlat
call
mov
repnz
ror
add
pushl
repz
mov
outsl
lods
les
fwait
inc
adcl
add
fadds
push
imul
mov
out
les
js
aas
cld
sub
aaa
std
jg
push
add
movsl
out
mov
cmovbe
daa
mov
xor
cs
fistpll
add
stos
addb
lods
fmull
mov
add
xor
aad
xor
or
loope
and
add
mov
add
inc
add
add
jg
mov
mov
xchg
ss
xor
in
ret
inc
add
shrb
add
and
outsb
int3
fdivrs
pop
ret
movb
push
test
add
sub
sahf
mov
jb
push
fs
mov
sarb
sub
dec
dec
rolb
cmp
xchg
ret
push
jle
add
add
jb
and
pop
shll
sub
mov
jg
test
pop
pop
loop
jae
ja
mov
sbb
out
mov
jno
call
es
add
sbb
jns
add
call
lods
or
and
mov
xor
adc
movq
mov
stos
xchg
mov
mov
adc
lahf
int
mov
add
sub
movb
mov
xor
mov
add
or
cmp
push
mov
movb
mov
pop
and
fdivrs
add
jae
xchg
inc
add
add
in
jmp
sbb
subl
mov
mov
jecxz
hlt
imul
movb
and
hlt
ret
in
sahf
dec
inc
add
aad
dec
rolb
mov
cmp
jl
cmp
aad
xchg
lea
jns
mov
jmp
addb
inc
add
dec
mov
mov
imul
rol
mov
sub
jmp
add
cmp
imul
stc
or
and
test
cmp
and
inc
add
sub
cld
addr16
xchg
in
pop
inc
fsubl
sub
call
mov
mov
sbb
push
ljmp
shld
mov
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
sbb
mov
mov
mov
gs
pop
test
lahf
and
xchg
dec
push
mov
add
sbb
xor
push
cwtl
mov
push
dec
jle
std
loopne
pushf
ficompl
sar
sub
xchg
cli
shll
add
mov
mov
xor
bound
push
mov
inc
add
pop
adc
ret
dec
push
movb
jge
mov
jecxz
icebp
mov
cmp
add
in
add
rolb
jne
mov
insb
leave
cmpl
adc
adc
add
ljmp
int3
mov
insb
cmp
int3
mov
mov
loopne
movsl
fmuls
lret
pop
and
cmp
divb
mov
bound
cmp
arpl
movb
test
inc
mov
std
icebp
xchg
mov
add
mov
inc
jmp
test
pushl
rorl
es
cltd
pop
stos
xlat
pop
mov
popf
out
out
lea
sub
push
jo
sbb
cmp
mov
lret
mov
xchg
in
pop
out
xor
les
sbb
pop
mov
add
mov
cmp
push
loop
add
jg
aam
xor
add
push
or
aam
js
lea
inc
fcoms
pushf
inc
and
pop
loop
fsubrl
fcomps
adc
cld
scas
and
mov
addr16
sub
cwtl
and
pop
lret
cmp
push
aaa
cltd
xlat
lahf
pop
lret
xsha256
cmpsb
push
mov
add
and
hlt
inc
adc
push
outsb
sub
dec
ds
movb
insb
mov
jbe
movsl
mov
dec
jmp
or
add
sbb
pop
mov
mov
dec
adc
jnp
shlb
add
sub
stos
mov
fwait
int
jo
pop
dec
das
imul
mov
enter
int
xchg
dec
ljmp
and
xor
add
dec
js
add
or
and
add
cwtl
ret
xor
add
mov
ja
cmpsb
je
pop
sbb
add
out
addb
xorl
scas
xchg
dec
in
aas
sbb
js
add
mov
push
ljmp
jl
in
xor
rol
in
add
or
ljmp
and
sub
loopne
leave
shlb
or
jle
out
arpl
add
cmp
addb
in
sbb
pop
loop
das
lcall
xchg
mov
sbb
push
shlb
mov
or
out
mov
ret
adc
add
push
cltd
addr16
add
push
jle
pop
loope
clc
ljmp
add
xlat
cmpsb
popa
cld
call
and
xor
add
fstps
movsl
or
loop
mov
arpl
jp
adc
add
shlb
movsb
ret
xchg
in
push
and
push
les
pop
add
cmp
sub
stos
arpl
mov
add
adc
add
hlt
inc
aad
dec
xchg
test
cltd
lahf
js
cmp
mov
lods
scas
test
inc
add
sub
pop
scas
mov
loope
xchg
aam
add
jbe
jne
add
leave
cmp
add
mov
or
inc
add
add
cmp
leave
jae
add
aam
cmp
paddd
pusha
add
xor
jae
dec
ljmp
pop
addr16
stos
rolb
mov
aas
jno
and
dec
dec
pusha
add
rolb
pop
pop
fisttps
pop
mov
add
cmpsb
mov
ret
call
or
push
pop
cwtl
test
mov
ret
xor
adc
sbb
sbb
jp
sbb
icebp
js
divl
ficoml
dec
stos
rolb
out
sbb
add
test
mov
add
sbb
das
popa
lahf
xchg
mov
sub
lahf
pop
test
add
aad
fbstp
mov
jle
dec
cmpsl
lods
pop
mov
fwait
cmp
les
ja
mov
in
jb
je
push
xchg
fisubrl
cld
dec
out
fsubrl
mov
mov
and
dec
push
cmp
pop
fldt
xchg
pop
cld
icebp
cmp
inc
add
sub
nop/reserved
lcall
push
jmp
mov
fs
std
fwait
insl
stos
mov
lock
jg
aaa
mov
dec
mov
outsl
in
out
ss
xor
sbb
addb
fyl2xp1
xor
outsl
inc
add
push
sti
sub
push
aas
ret
sub
stos
xchg
cli
fistl
cmp
cwtl
and
cs
inc
in
add
dec
imul
dec
lods
negb
xor
mov
xor
ret
and
int
je
stos
js
jne
cli
xchg
int
mov
negb
add
leave
push
push
mov
ljmp
pop
sbb
aas
dec
out
inc
loop
xor
xor
sub
jno
popf
push
aam
mov
addb
push
loopne
push
mov
shlb
add
add
jecxz
leave
lods
push
mov
xchg
xchg
addl
adc
mov
push
idivb
add
scas
add
leave
inc
jl
adc
add
cmp
lret
sub
pop
sub
rolb
cmp
mov
popa
cwtl
mov
scas
imul
cld
push
push
test
pop
mov
xchg
inc
add
sub
sub
pop
adc
loope
push
lahf
daa
lea
lret
xchg
xchg
push
xchg
loope
add
shl
insb
scas
jg,pn
mov
mov
lods
clc
les
mov
xchg
xchg
mov
jbe
add
pop
lock
movsw
mov
and
fwait
cld
or
add
add
sub
add
ljmp
mov
mov
notl
xor
push
int
outsb
push
dec
mov
mov
nop
cmp
add
sub
mov
fisubrs
add
jne
mov
xor
push
std
ja
xor
lods
add
or
aad
jle
enter
bound
fldl
add
std
loopew
mov
adc
call
andl
lret
inc
sub
stos
lods
leave
jb
or
lea
mov
mov
jg
arpl
out
testl
icebp
jne
imul
dec
dec
jmp
mov
fdivrp
test
aaa
repz
scas
mov
jle
dec
sub
add
push
lock
xor
insl
push
repnz
push
dec
cmp
test
sbb
pop
xor
cmp
scas
rolb
add
add
ljmp
or
cmp
dec
subl
add
push
xchg
push
stc
xor
xor
sub
inc
add
adc
mov
dec
repnz
and
inc
sub
outsl
cmp
pop
mov
cwtl
xlat
in
or
mov
xor
inc
push
sbb
inc
add
sbb
gs
cltd
test
stos
fisttpll
add
xor
add
add
cwtl
pop
jmp
xchg
add
or
adc
add
jge
sbb
imul
bound
pop
psrlq
jecxz
add
sbb
add
xlat
repnz
sbb
pop
jnp
popa
sub
cmc
cmp
in
test
or
mov
lds
add
sub
jbe
fimuls
std
popf
addb
jecxz
sub
pop
lret
jno
fdiv
in
lcall
sarl
stos
cltd
jmp
push
out
aad
lret
jl
clc
inc
add
xchg
ds
add
mov
pop
dec
lods
fstpl
push
aaa
imulb
popf
shlb
dec
pop
xor
cwtl
fldenv
orl
rolb
test
or
or
call
test
push
add
std
xchg
movb
jecxz
jne
xchg
rcll
xchg
arpl
push
add
addb
adc
jge
jle
es
add
insb
lods
dec
mov
add
push
addb
pusha
add
add
push
es
aaa
mov
bound
js
popa
mov
push
pop
mov
lock
insb
push
cli
pop
mov
fs
gs
cmpsb
xor
cld
stc
mov
out
mov
movsb
clc
add
insl
fwait
and
sti
lcall
cld
ret
add
sub
inc
add
nop
mov
test
rolb
add
ss
xlat
out
mov
loop
fildl
inc
add
cmp
and
add
mov
inc
add
pop
cmpl
dec
cltd
mov
clc
push
lea
aad
ret
cmp
xchg
add
jb
push
inc
add
or
fcompl
scas
faddl
add
mov
push
pop
push
or
mov
cmp
dec
mov
adc
sahf
adc
cmpsl
push
leave
icebp
out
insl
xchg
push
cld
ss
mov
test
xor
cltd
movsl
out
rolb
add
movsb
mov
ljmp
ljmp
int3
into
or
adc
add
jge
add
xlat
test
jbe
push
test
stc
jbe
fsubrp
shll
xor
pop
push
repz
mov
inc
push
jmp
adc
stos
ja
pop
or
movb
sbb
mov
jae
xchg
push
or
loop
add
push
clc
jno
xchg
mov
adc
shll
push
sti
fld
add
xchg
imul
pop
sbb
aam
pop
pop
bnd
mov
add
add
or
mov
mov
hlt
ss
inc
add
in
jmp
and
icebp
jp
mov
or
pushf
mov
fisttps
clc
shlb
mov
mov
nop
mov
fldl
hlt
push
add
aaa
push
les
jg
mov
mov
cmp
add
adc
cwtl
cli
cli
fucom
cli
insb
rorl
cmpsb
loopne
inc
add
enter
sti
sbbl
add
test
push
mov
cmp
add
adc
pop
ret
sub
lods
cmp
xchg
jno
mov
movb
jbe
repz
dec
jle
jle
outsl
lret
mov
out
xchg
add
nop
push
mov
and
ret
nop
insb
ds
xor
pop
mov
cltd
fnstenv
cmp
jo
xlat
ljmp
pop
repz
out
fcoml
dec
dec
xchg
rolb
and
int3
out
jecxz
add
pushf
jge
out
mov
pop
gs
push
add
lcall
ds
jb
push
lock
sub
add
lock
inc
add
outsb
push
inc
add
add
mov
and
or
add
pop
stos
push
imul
sbbl
add
int3
cmp
insb
arpl
add
inc
add
push
scas
test
lea
add
lds
adc
inc
add
lds
test
jg
or
fnstenv
clc
mov
cmp
js
xor
nop
into
pop
adc
mov
add
test
fsubr
jge
outsl
mov
ds
in
ffreep
add
cli
push
mov
mov
addr16
pop
xchg
outsl
sub
pop
jbe
cmp
hlt
add
sub
in
pop
push
mov
les
xor
push
add
sti
pop
outsl
pop
xchg
pop
mov
add
dec
inc
add
stos
je
add
xchg
mov
jmp
add
jne
add
ret
dec
out
arpl
vpxor
test
cmp
movsl
int3
xlat
jp
mov
fistl
sahf
scas
ss
inc
in
pusha
add
add
push
add
movsb
xor
adc
sub
jae
imulb
insl
das
mov
add
movb
push
out
daa
inc
add
repz
lcall
test
call
or
fildl
ss
sbb
add
sbb
pop
mov
mov
shll
mov
pushf
jg
fiaddl
out
movb
cmp
jg
mov
es
add
mov
in
xchg
iret
or
into
xor
add
sbb
cld
mov
add
mov
mov
js
and
das
dec
stos
and
call
or
mov
rclb
fstps
sbb
out
cli
xchg
rolb
outsl
movb
inc
add
dec
lods
testb
sub
dec
lret
push
scas
mov
fs
fisubs
add
int
add
inc
jmp
lock
loope
lcall
sbb
jp
out
and
loop
add
fisubl
leave
push
jp
push
ret
add
dec
out
sub
pop
aas
cmpsb
or
movb
cmpsb
data16
out
push
idivl
sarl
xchg
pop
add
push
icebp
add
mov
movsl
push
mov
jbe
mov
in
inc
mov
add
sub
and
cs
test
scas
xchg
addb
mov
fs
or
es
roll
push
rolb
mov
xor
ds
pop
rcrl
fcoms
sbb
add
add
int
test
inc
add
mov
test
xor
les
jne
xor
cmp
sub
loop
loop
scas
mov
cmp
xchg
cmpsb
or
fsubl
push
ljmp
mov
jnp
clc
pop
add
jecxz
or
bound
fptan
sti
insb
into
xchg
mov
add
push
imull
inc
sub
jae
add
iret
addb
fdivs
stos
mov
pusha
add
scas
mov
adc
push
pop
adc
hlt
scas
cmp
mov
sbb
and
sub
xchg
cmpsl
adc
test
in
test
lods
incl
das
sub
or
out
sub
add
sub
jl
mov
add
out
mov
mov
mov
outsb
mov
stos
lret
mov
push
shll
mov
mov
or
jmp
dec
or
sbb
in
or
add
bound
mov
add
add
jbe
add
in
xchg
movb
pop
pop
out
jno,pn
outsb
jle
or
sahf
dec
rcrl
aad
cmc
insb
xor
xor
test
push
enter
sbb
addb
pop
pop
pop
inc
add
add
outsl
pop
mov
push
and
loope
and
popf
or
add
leave
push
ret
xchg
adc
lahf
rorb
outsl
ljmp
rcll
xor
and
pop
hlt
jle
shrl
mov
xor
fisubrs
push
loop
or
fadd
add
and
or
int3
jno
add
mov
push
arpl
notb
push
add
aas
add
xchg
dec
jecxz
test
adc
inc
sub
arpl
jmp
add
xor
popf
daa
xor
xchg
stos
shl
pop
mov
cmp
xchg
fidivs
adc
sbb
mov
cld
es
das
lds
lea
iret
movsb
push
mov
pop
pop
cli
lods
sti
jo
subl
mov
pop
jg
pop
lock
push
cs
test
mov
cmp
xchg
cmp
add
in
push
push
jp
push
jge
inc
arpl
xchg
imul
add
loopne
cwtl
mov
jne
mov
aas
jns
in
xor
cmp
add
or
fucomip
mov
mov
jg
popf
cmp
add
test
mov
mov
js
loope
inc
add
in
add
lods
mov
cli
cmp
lods
loopne
push
ret
sbb
leave
sbb
jno
stos
fisttps
mov
out
xlat
push
insl
lds
in
add
pusha
add
insl
jmp
push
outsb
pop
arpl
add
jno
jecxz
sbb
and
sbb
cltd
inc
add
in
sbb
cs
fnstsw
outsb
xor
fdivrs
lahf
jge
jno
in
fcoms
mov
cmp
fcmovu
sti
mov
repnz
sub
jle
mov
sbb
push
cmp
popa
pop
pusha
add
daa
addb
or
imul
cs
add
in
addb
jns
jmp
fisubrl
inc
xchg
lahf
push
fmull
add
aas
inc
lds
push
xchg
mov
mov
xorl
or
outsb
mov
imul
mov
loop
and
addb
add
leave
int
loopne
inc
add
xchg
jmp
pop
lret
jecxz
pop
je
fwait
adc
testl
int
xchg
push
cltd
into
pop
dec
lods
pop
adc
iret
dec
les
ljmp
inc
push
add
fldl2e
sahf
xor
les
sbb
stos
mov
inc
dec
or
mov
adc
add
mov
les
mov
sbb
push
push
sbb
lock
negb
pop
pop
or
addb
neg
mov
mov
mov
addr16
addr16
rclb
ds
sub
push
add
pop
out
or
and
fcoms
xchg
mov
loop
pop
test
int
add
dec
test
add
xor
ret
movsl
rolb
das
stos
and
add
imul
inc
add
sbb
push
cmp
pop
popa
or
ror
add
add
push
pop
cmp
leave
dec
addr16
pop
imulw
lods
ficoml
inc
add
rolb
sbb
add
sub
inc
in
xor
and
std
test
dec
push
lea
sub
push
outsb
push
mov
mov
fbstp
hlt
jae
push
mov
addb
movb
push
sub
cwtl
das
daa
lcall
cwtl
jg
add
shll
test
and
bound
fs
lcall
push
add
sbb
leave
xor
test
push
and
adc
fsubp
pop
cmp
das
and
adc
add
ja
scas
mov
arpl
aam
push
push
xchg
int3
add
test
or
test
add
clc
cmp
or
or
jmp
leave
ljmp
add
push
inc
mov
cld
push
push
fidivs
sub
loopne
push
xchg
aaa
mov
or
mov
add
push
mov
in
push
mov
push
add
je
mov
xlat
mov
mov
adc
test
mov
mov
inc
add
or
inc
das
outsb
jecxz
pop
nop
xchg
out
cmpsl
je
fsubl
jge
sub
fcomp
mov
xor
mov
loopne
or
add
addb
push
cmp
lahf
out
movb
and
in
pop
or
mov
mov
add
mov
add
push
sahf
lahf
inc
call
shl
adc
fdivrs
ret
mov
call
insl
ja
cltd
mov
lret
jmp
imul
cs
sbb
loop
pushf
cs
add
and
xor
mov
int
jb
std
fmulp
cwtl
nop
push
mov
xchg
out
mov
in
mov
imul
mov
loopne
daa
cmp
sbb
cmpsb
arpl
ret
mov
push
cmpsb
movsl
sub
movb
cli
pop
pop
or
mov
shll
mov
iret
nop
es
and
loop
ret
movsl
adc
out
sub
icebp
inc
pop
loop
pusha
add
int3
lret
dec
in
enter
cld
leave
add
pop
push
jnp
dec
rcll
out
cmpsb
iret
cmp
fwait
mov
mov
xchg
ss
ds
adc
pop
mov
dec
xchg
jne
test
sub
ja
add
add
mov
out
fwait
and
push
cs
and
jno
add
push
mov
imul
jecxz
mov
sub
clc
mov
add
enter
cmp
add
in
or
addb
mov
xchg
lds
lahf
push
dec
xchg
aam
scas
sub
fs
mov
fcomi
mov
xchg
add
in
inc
add
xor
or
push
fdivl
std
add
jmp
icebp
cmp
pop
shl
push
out
push
ret
xchg
or
add
xchg
mov
push
je
inc
inc
add
nop
rolb
jg
outsb
dec
cwtl
outsb
xor
and
pop
movsb
adc
ja
add
fimull
mov
or
add
xchg
mov
lea
jae
jae
or
add
adc
in
pushf
jmp
sbb
add
mov
sub
into
xor
xchg
pop
js
cltd
dec
push
add
add
js
push
jae
xchg
test
pop
dec
jle
cmpsl
in
adc
fildll
jg
xor
fwait
aam
in
cmp
into
sbb
add
test
adc
xor
stos
imul
pop
inc
add
aam
add
adc
scas
mov
ret
mov
je
pop
leave
popf
fsubs
fcmovu
xlat
jl
clc
xchg
or
pushf
mov
sbb
and
mov
imul
sub
lret
scas
enter
sbb
mov
fwait
pop
mov
add
leave
mov
and
ja
int
or
scas
xchg
or
in
icebp
subl
movb
and
sarl
lcall
add
mov
leave
int3
cmp
aaa
cmp
imul
call
leave
cmp
dec
mov
popa
mov
pop
mull
add
movsb
loop
jecxz
cmp
push
ret
test
jecxz
into
xor
add
add
fldt
pop
lahf
cld
in
aam
pop
ja
add
add
and
adc
sbb
mov
leave
repnz
icebp
into
cmp
movsl
gs
mov
cmp
mov
addb
and
and
fmull
cmp
and
and
sar
push
aam
add
push
add
aad
int3
sbb
mov
push
int3
adc
xor
add
xor
add
fcom
sbb
pop
cmpsl
cmpsb
aam
pop
inc
add
call
stos
fmull
sbb
cmpsb
call
jecxz
rolb
or
out
inc
add
xor
inc
jg
out
clc
add
pusha
add
mov
cwtl
iret
mov
and
mov
cld
push
add
or
pop
pop
sub
add
and
jo
jp
jne
xlat
pop
popf
das
imul
outsl
into
das
pop
mov
ret
fs
add
ret
gs
add
stc
mov
lret
ja
stos
or
mov
div
add
lret
repz
sbb
pop
and
dec
or
and
lods
addb
xchg
outsl
sbbl
or
in
test
lds
adc
gs
lahf
cmp
pushf
dec
adc
fildl
clc
fisttpl
mov
adc
inc
cmp
test
repz
inc
stos
push
jle
shll
mov
add
add
pop
rolb
daa
mov
aaa
test
addr16
xor
outsl
lret
mov
cmpsb
mov
cltd
sbb
jmp
mov
add
in
add
pop
mov
jne
add
sbb
or
mov
sbb
xchg
sub
xor
cld
adc
out
mov
pusha
add
push
or
add
inc
xchg
outsb
idivl
stos
scas
push
mov
mov
scas
popa
pop
ds
cmpsb
and
pushf
ret
pop
addb
inc
add
mov
fstps
add
pop
mov
adc
lcall
fists
aam
dec
pop
mov
outsb
cltd
mov
mov
add
insb
cmp
dec
sti
stos
push
inc
int3
ret
jo
cli
sbb
and
ret
cmp
or
in
je
cltd
pop
mov
mov
jns
add
inc
lret
stos
mov
rcll
jns
add
pop
roll
mov
int
enter
popf
js
out
or
insb
shlb
and
and
pop
incl
add
jge
mov
xor
rolb
pop
add
mov
add
cmpsb
push
xor
sbb
push
add
pop
xchg
and
jno
and
aaa
xor
mov
sub
xchg
push
incb
add
cmpsb
xchg
data16
popf
aaa
outsb
lcall
pop
mov
add
fcomps
push
lret
add
incl
ljmp
ss
testb
lock
add
les
mov
decl
loop
sub
loopne
ret
loop
jno
add
or
jmp
add
lea
and
call
movsb
jl
div
test
pand
dec
sub
add
sub
and
movsl
es
xchg
push
push
jl
sti
mov
icebp
jbe
xor
xchg
push
push
pop
cmp
sub
pop
ljmp
add
lea
cld
mov
repnz
orl
cmp
sbb
xor
les
push
mov
dec
clc
roll
add
add
push
xchg
push
xor
xchg
pop
lods
cs
add
stos
xchg
ret
std
mov
arpl
in
data16
cmp
push
adc
add
insb
aas
cmpl
add
mov
add
mov
add
jns
les
sti
xor
xchg
push
fidivrl
inc
add
cld
movsl
nop
add
mov
and
dec
xchg
xchg
or
sub
sub
inc
adc
mov
mov
adc
movb
adc
jmp
mov
dec
rcll
mov
in
fildll
jp
out
lahf
fs
ja
clc
outsb
add
loop,pt
outsb
or
add
cmp
adc
lods
clc
mov
dec
xor
cli
push
and
outsb
stc
xchg
mov
rolb
add
fsts
insl
and
addl
pop
imul
mov
inc
add
mov
add
pusha
add
add
mov
in
add
popf
pop
mov
pop
mov
mov
lret
and
or
add
iret
out
loop
inc
mov
mov
ret
data16
cltd
dec
in
jmp
sub
xor
repz
iret
ror
aas
cmp
xchg
push
push
test
mov
fcomi
xchg
sahf
sub
mov
cs
xchg
sbb
scas
xlat
test
mov
arpl
push
imull
jge
lahf
call
sub
mov
add
cmp
mov
lret
bswap
cld
sbb
lock
popf
movsb
addr16
xchg
daa
adc
and
add
push
or
sbb
insl
cmp
cmp
aas
push
out
sub
adc
out
push
ds
mov
pop
cs
jp
ficomps
mov
lcall
add
add
and
movsl
test
dec
cmp
outsl
sub
add
lods
mov
test
pop
stos
adc
std
test
pop
test
es
sub
cmp
and
and
lea
sarl
jle
add
mov
addl
pop
mov
xor
scas
outsl
sarb
xchg
imul
or
outsl
loop
mov
icebp
mov
cmc
inc
add
cld
scas
rorl
xor
ret
iret
add
xor
insb
ret
pop
sub
mov
in
inc
aam
icebp
or
push
mov
test
cmpsb
into
sti
xor
aad
not
and
jp
test
cmp
jl
vdivsd
and
ret
sbb
xchg
and
clc
roll
icebp
lds
test
stos
dec
sub
sub
jmp
xor
fadds
imull
test
scas
cs
add
ret
jbe
push
inc
add
jno
shll
mov
stos
sub
xor
xor
cmp
lods
mov
cmpsb
negl
mov
push
add
mov
push
pushf
or
pusha
add
cmp
int3
and
xchg
jbe
pop
loop
std
aas
cld
roll
mov
add
test
cld
aam
out
mov
jbe
or
jno
idivl
sbbl
mov
dec
fcmovnb
mov
mov
out
jbe
add
jp
add
dec
push
add
push
nop
lahf
stos
xchg
jle
adc
fadds
add
outsl
je
and
cs
sahf
adc
and
add
sti
bound
outsb
lods
fs
cmc
outsb
vcvtsi2ssl
push
mov
ljmp
xchg
inc
push
in
inc
pusha
add
test
xor
imul
pop
add
out
aam
or
dec
adc
ja
dec
adc
stos
jp
repz
pop
sti
xor
xchg
cmp
jle
shl
or
xchg
bound
imul
or
add
std
jge
add
push
jbe
sub
xchg
or
icebp
xlat
iret
sbb
pop
adc
rcl
sub
mov
movsl
dec
and
addl
mov
adc
sarl
add
inc
add
mov
mov
mov
clc
call
push
add
in
orl
cmp
push
sahf
in
leave
push
rcl
sbb
push
add
mov
movsl
mov
push
popa
mov
add
push
orl
adc
add
sahf
in
out
and
dec
push
ja
lahf
push
and
push
add
pop
loope
daa
lss
ret
jl
loope
adc
cmpsb
aaa
sub
add
inc
jle
bound
add
xor
push
dec
out
addb
nop
jne
cwtl
jle
movb
pop
jp
add
sub
add
hlt
add
cmp
push
mov
add
add
cmpsl
jnp
xor
imul
lods
jae
mov
push
ret
iret
addb
daa
nop
mov
or
dec
sarl
add
mov
fprem1
cmpsl
fwait
add
popa
xchg
movsb
imul
push
pop
lods
push
repz
xchg
xchg
lcall
adc
in
cmpsl
aas
aam
or
jg
push
cs
in
addb
xchg
inc
add
mov
imul
push
add
fidivl
inc
add
stos
or
mov
add
stos
xchg
lahf
xchg
dec
push
cmp
shrl
lods
xor
add
push
add
xor
bound
pop
pop
mov
arpl
lods
inc
loopne
add
pop
adc
xchg
imul
fwait
daa
push
fwait
jbe
and
add
pop
std
scas
dec
jnp
pop
sub
notl
cmp
adc
ja
dec
dec
pop
arpl
lea
jno
jo
add
fs
dec
push
cmp
aam
pop
inc
add
or
or
push
push
xchg
adc
out
jns
cmpsb
dec
jl
insl
sbb
js
jo
mov
lret
pop
xor
sub
xchg
sub
xlat
mov
add
xor
xchg
jmp
sbb
dec
insl
icebp
push
mov
aaa
inc
dec
lock
inc
add
push
mov
jmp
mov
hlt
cmp
hlt
add
nop
jp
fstps
ret
cli
mov
or
dec
frndint
push
jne
mov
pop
pushf
mov
jge
and
out
outsl
ljmp
adc
xchg
lret
push
push
aaa
push
mov
add
sub
mov
inc
add
bound
outsl
mov
xor
push
add
les
pop
xchg
loope
jle
cwtl
xchg
outsb
hlt
cmpsl
jge
pop
rolb
mov
in
mov
xchg
xchg
call
mov
and
in
pop
mov
xchg
fisubl
inc
sub
or
lahf
int
ret
hlt
jne
cmp
dec
mov
push
pusha
add
repz
loope
insl
test
aad
stos
popa
pop
test
and
sahf
mov
push
jno
cli
shr
mov
pusha
add
ja,pt
adc
add
sbb
addb
mov
mov
xor
add
push
sbb
in
push
loop
jmp
or
mov
mov
adc
sub
push
clc
bound
ret
lods
stos
or
in
in
push
popa
ret
int
add
ret
pop
std
imul
lret
jmp
add
adc
aaa
adc
rcrl
cmp
enter
adc
jo
jae
lods
test
out
inc
add
add
popa
mov
in
add
sub
loopne
xchg
lea
daa
sub
xchg
mov
fdivrl
outsb
jns
imul
fnstcw
xchg
dec
int3
in
mov
pop
push
adc
in
clc
leave
push
popa
push
sbb
mov
clc
cld
sub
hlt
dec
sahf
call
bound
jge
test
call
filds
inc
add
add
or
aaa
mov
sub
or
mov
push
sub
add
mov
inc
jl
and
jo
inc
jno
sub
insl
stos
lods
xchg
dec
xor
add
jb
sbb
leave
imul
mov
lods
iret
stos
jnp
inc
out
cltd
sar
ficoms
shll
inc
icebp
enter
lea
scas
enter
int3
nop
jmp
ret
pop
jns
jno
loop
in
mov
fbld
cmp
add
xchg
fisubl
mov
add
lock
add
mov
pop
cmpsw
jbe
je
pusha
add
mov
pusha
add
cmp
jae
das
sbb
pop
add
jecxz
addr16
and
sbbl
add
jle
jnp
repz
mov
and
xor
add
ljmp
sbb
lods
nop
push
ret
rolb
sub
sub
inc
pop
add
ret
pop
aaa
fsubl
mov
outsb
je
movsb
sbb
dec
enter
lret
test
dec
cmp
popa
mov
pop
inc
add
push
fisubrl
cwtl
jg
movsl
les
mov
shrl
aam
dec
lcall
dec
insl
and
jbe
mov
mov
scas
out
push
jo
mov
subl
outsb
in
sbb
sahf
loop
cld
push
popf
add
addr16
sub
add
xor
jbe
mov
aad
push
adc
loope
in
test
add
jo
add
add
push
cld
stos
and
lret
movsb
cld
rcrb
cmp
pusha
add
push
or
lock
int
push
pop
pop
int3
cwtl
xchg
add
push
pop
cmp
dec
out
sahf
push
add
fs
pop
mov
jbe
movsl
mov
and
mov
add
iret
out
mov
push
lds
xlat
lock
sub
dec
mov
popf
xchg
inc
add
lock
pop
lret
sub
scas
out
outsl
adc
rolb
dec
xor
sub
and
pop
jo
dec
addr16
sbb
sub
mov
mov
xlat
iret
movsl
gs
adc
pop
test
and
and
gs
add
bound
in
test
and
fldt
xchg
push
cmp
xchg
push
sub
pusha
add
or
out
adc
add
stc
popa
pop
repz
inc
test
cs
ret
jle
cli
cmc
push
cli
out
aas
ja
jns
jb
shll
mov
repz
mov
scas
push
cli
lcall
fsubl
aad
dec
mov
ljmp
jns
fists
repnz
or
into
xchg
fdivrs
das
push
lods
xchg
sbb
int
bound
and
and
je
xchg
mov
pop
in
cmc
jo
mov
push
cmp
jne
push
loopne
xchg
je
outsb
mov
mov
add
and
xor
pop
loope
push
add
cmpsl
mov
add
test
pop
push
xchg
mov
mov
dec
xchg
push
add
gs
or
cmp
push
imul
popf
adc
fimuls
insl
loopne
push
cmpsl
sub
mov
cmp
cmpsl
adc
inc
adc
mov
dec
xor
add
ret
test
cs
lods
out
xor
loopne
cmpsb
out
fisubl
arpl
sbb
in
xor
add
out
stos
mov
repnz
icebp
fsubrs
std
lods
sbb
rcll
sub
arpl
test
jne
fldl
cltd
imul
and
jne
rolb
jge
mov
movb
ret
add
add
jb
dec
dec
xor
out
and
fistps
shl
fimuls
add
or
test
or
xor
or
add
or
gs
dec
test
out
mov
fnstsw
rolb
out
stos
cmpsb
in
add
cmpsl
mov
or
cmc
xor
dec
in
dec
inc
add
jle
fs
aam
jo
data16
dec
push
ljmp
push
pop
mov
aad
and
xor
dec
sbb
inc
add
add
xchg
int3
std
dec
or
add
pop
in
cmp
ja
dec
les
pop
bound
mov
sub
test
jmp
add
jle
xor
add
push
push
bound
mov
leave
jmp
lcall
hlt
arpl
adc
xchg
mov
inc
add
cmp
in
and
rolb
jne
cltd
out
add
pushf
mov
test
addl
mov
add
jp
mov
pop
jne
test
push
andl
sub
shrl
loope
cli
fidivrl
sti
cld
cwtl
fistpll
loopne
xchg
into
mov
test
or
add
jp
fildll
add
orl
push
jno
movb
push
addb
or
pop
xor
cmp
sbb
ret
lock
sub
jecxz
cltd
leave
cmpsb
cmp
add
pop
fnstsw
add
and
xor
add
and
test
push
add
add
inc
add
aam
mov
sahf
fstpl
add
add
idivb
sub
hlt
or
rclb
push
and
adc
jge
mov
sub
or
in
xlat
sub
add
imul
mov
xor
sbb
ja
jno
jge
jmp
add
sbb
pop
pop
xor
push
or
int3
addb
add
adc
add
xchg
in
push
out
xchg
jge
stos
call
mov
insl
push
mov
cmp
mov
ret
dec
sbb
push
cli
add
in
pop
test
testl
stos
rolb
push
test
es
pop
xchg
mov
cmp
loope
xor
or
arpl
cs
mov
mov
lret
pop
ja
sbb
cmp
add
out
inc
shl
pop
dec
leave
mov
adc
xchg
enter
mov
add
addb
in
xor
inc
add
pop
pop
inc
push
in
jae
and
ds
sbb
out
ja
push
add
out
test
das
in
jns
testl
data16
test
rclb
cmp
add
bound
imul
add
scas
les
dec
push
stc
in
mov
dec
insl
popf
jmp
xchg
popa
data16
stos
cmp
mov
data16
jp
jb
int
or
movsb
ljmp
jo
add
add
add
data16
add
aas
adc
iret
hlt
leave
xor
add
out
add
ja
xchg
jecxz
cmp
add
addb
xchg
push
xchg
pop
add
jb
sbb
cwtl
pop
cwtl
jne
jbe
outsl
andl
mov
pop
pushf
sub
xor
stos
adc
add
push
pop
cld
nop
into
nop
mov
add
or
mov
aas
ret
inc
add
dec
mov
push
xchg
out
dec
adc
add
add
cmp
lock
pop
sahf
sti
adc
out
cmpsl
in
in
and
and
es
mov
cs
pushf
and
add
add
imul
or
jge
xchg
ljmp
ja
movsb
lahf
and
cmp
xor
jmp
addb
sub
in
mov
int3
xchg
bound
in
enter
xchg
xchg
push
xor
inc
add
and
adc
add
add
pop
or
mov
scas
cmp
mov
loop
sbb
addb
cwtl
jle
add
add
out
jecxz
push
or
lahf
insb
mov
gs
iret
aam
add
mov
sbb
pop
adc
test
mov
popf
sub
inc
movsl
xchg
jno
cli
cld
popf
mov
das
sets
mov
mov
pop
dec
outsb
test
stc
popf
push
xor
in
push
xlat
sub
cmc
or
and
add
pop
test
lds
and
mov
add
std
dec
ljmp
inc
add
xchg
mov
inc
add
mov
fadd
add
jb
add
pusha
add
sbb
add
mov
divl
sahf
lds
mov
sbb
jmp
or
add
sbb
add
add
jp
test
add
add
movsl
nop
mov
call
rolb
sbb
xor
mov
pop
inc
add
out
sti
test
add
dec
pop
sahf
fadd
add
add
aam
pop
push
outsl
repnz
or
dec
mov
jbe
add
fs
mov
xlat
mov
push
adc
sub
movb
dec
insl
fsub
jg
cmp
stc
xor
test
iret
addb
add
daa
stc
xor
fdiv
subl
dec
and
pop
pop
xchg
pop
fwait
popa
ja,pn
push
xchg
ljmp
iret
or
cmpsl
mov
xor
aas
adc
in
ret
add
and
dec
mov
add
mov
imul
ljmp
mov
jns
dec
or
add
mov
push
cmp
sbb
xchg
inc
and
jno
or
sbb
mov
inc
popa
push
js
add
add
icebp
add
dec
mov
ret
adc
xlat
stc
or
add
jb
inc
into
popf
daa
lea
sti
rclb
decl
dec
or
mov
jo
in
mov
cld
jo
sahf
xchg
fs
add
int
cmp
jmp
inc
out
int
sbb
add
jg
mov
stos
fldl
movsb
lods
mov
clc
sbb
lea
xor
sub
sbb
xchg
ljmp
pusha
add
clc
mov
std
add
add
jnp
out
in
out
mov
cwtl
xchg
inc
not
and
pusha
add
add
push
pop
ds
int3
inc
inc
jbe
ljmp
imul
jno
mov
mov
push
andl
lret
or
mov
sete
jae
sub
sarb
add
mov
cld
test
xor
jg
push
adc
cmpsl
pushf
push
cmp
jge
mov
popa
or
jge
sub
add
call
and
add
jno
xor
add
shlb
add
push
flds
lret
aas
sub
test
inc
add
test
dec
cltd
jno
add
pop
popf
lcall
mov
xchg
jg
int3
bound
cld
sbb
cmp
adc
and
outsl
movsb
in
mov
js
andl
out
fstpl
gs
adc
or
lock
mov
lret
out
ret
mov
jne
jno
pop
rolb
push
mov
cmp
inc
fcompl
addb
push
add
push
stos
dec
dec
in
es
xlat
jo
scas
gs
jge
jecxz
icebp
aam
dec
pushl
sub
sub
lea
lds
jp
or
je
pop
or
cmpl
jbe
mov
dec
mov
push
gs
pop
sub
cmp
xor
add
adc
mov
xchg
repz
addb
cwtl
dec
movsl
jno
or
and
xchg
mov
mov
cwtl
sahf
dec
adc
add
jge
fistpll
frstor
push
inc
lret
jmp
out
stos
xchg
int
aam
jbe
or
inc
add
add
div
rcrl
mov
mov
add
in
pop
orl
pop
xor
add
aaa
jns
lret
fucom
or
adc
mov
xchg
cld
loop
hlt
cmp
xor
movsl
orl
pop
xor
add
lea
subl
mov
jo
int3
test
add
lds
scas
add
fnstenv
mov
scas
data16
ljmp
aam
push
addr16
sbb
je
les
cmp
xor
sub
aaa
int
add
jb
jmp
insb
dec
pop
lods
sahf
cmc
aam
lods
lds
jecxz
jbe
lea
mov
or
cmpsb
add
aad
data16
add
sub
cmp
xlat
movsb
into
shrl
addb
and
push
add
and
jne
fadd
add
lds
sbb
fucom
das
sub
add
sbb
inc
add
cltd
push
iret
arpl
loopne
out
add
or
shll
add
aaa
loopne
xchg
dec
pop
sbb
lea
cmp
imull
push
leave
push
ja
stos
inc
add
lock
adc
lret
addr16
test
push
push
cs
fldt
fcoms
xchg
push
push
test
add
test
push
iret
pop
mov
mov
mov
add
aas
addb
repnz
or
fidivrs
sub
pop
push
fiadds
or
ret
jo
mov
dec
add
stos
movb
lret
in
mov
call
lods
mov
int
push
aaa
dec
jo
jmp
dec
adc
cltd
stos
data16
lcall
jbe
and
scas
or
add
push
mov
xlat
mov
add
aas
es
or
repz
mov
stos
or
pop
sbb
xor
add
xor
pop
sub
mov
in
xchg
xchg
addb
or
dec
dec
cmp
xchg
lods
insl
sbb
add
out
cmp
ss
or
jge
xchg
jae
mov
loop
add
cmp
addb
sbb
lcall
cltd
add
out
jle
std
cmp
push
mov
or
addb
add
call
stos
sbb
jg
mov
mov
xchg
xchg
std
mov
add
ficoms
mov
push
xchg
imul
push
dec
mov
xchg
and
push
movsb
les
mov
add
add
add
aad
sbb
movsb
mov
add
adc
jnp
push
adc
or
jae
fisttpl
or
jns
xor
mov
sahf
in
ds
push
add
mov
mov
sbb
or
int3
enter
lds
insl
lock
xchg
int3
lcall
setns
xor
lcall
sbb
cmpsl
mov
dec
les
sarl
repz
movsl
sub
ret
sub
push
pop
sub
add
cmp
loop
mov
push
add
push
adc
pop
jne
jg
push
mov
and
add
sub
add
arpl
xchg
cld
jnp
fisubrl
pushf
and
xchg
stos
movsb
popl
cmpl
push
jp
cmp
cmc
sti
negb
out
lds
push
and
xchg
loop
outsb
insb
fbld
add
add
pop
cmp
aaa
push
call
arpl
dec
sbb
add
pop
adc
in
scas
or
subl
jge,pt
cmpsl
pop
pushf
jb
scas
mov
repz
outsb
cmp
add
dec
pop
add
test
jno
xor
dec
testl
add
mov
lcall
mov
and
pop
xchg
pop
jge
push
add
hlt
popa
mov
jns
add
addr16
das
inc
add
cmp
add
sbb
ss
add
jge
pop
pop
xchg
sub
cltd
push
and
mov
sar
pusha
add
inc
add
je
push
pop
xor
jle
or
or
push
repz
insl
inc
add
movb
or
jb
sbb
xor
sub
cwtl
mov
fdivrs
stos
mov
jl
push
pop
test
or
inc
add
pop
cmpsl
dec
xchg
push
shr
cmp
rolb
std
cmpsb
les
fdivrs
dec
and
leave
leave
sub
push
add
jnp
and
xor
xchg
jb
arpl
addb
and
mov
lods
mov
mulb
pop
enter
iret
xor
pop
dec
xchg
shll
imul
add
and
jbe
jno
add
lahf
cmp
mov
popf
inc
add
add
inc
lcall
stc
xchg
dec
adc
cltd
jmp
in
mov
bswap
lock
sbb
jmp
jno
sbbl
std
add
insl
fdivs
jg
push
daa
sub
inc
mov
cld
out
sub
scas
xor
pop
mov
rorl
lret
divl
pop
mov
ret
adc
cmc
stc
out
pop
into
xchg
cmp
popa
push
pop
arpl
mov
pop
call
pop
stos
mov
push
jge
das
cmp
ret
cmp
scas
push
cmp
xchg
out
jno
hlt
pusha
add
dec
stc
pusha
add
cli
lock
dec
into
aas
jns
and
mov
int3
mov
lea
dec
cmp
fwait
ss
in
inc
add
mov
and
fs
add
enter
icebp
sub
pop
cs
shll
push
mov
into
and
cmp
out
or
cmc
inc
mov
cmp
aad
scas
xor
sbb
xchg
sbb
mov
ds
loope
mov
icebp
test
cmp
out
sbb
pushf
je
dec
pop
pop
adc
nop
or
pop
into
pop
sti
jnp
dec
repnz
and
fistps
jae
loop
mov
lods
jge
or
scas
dec
nop
fnsave
mov
js
decb
cmp
add
sub
add
dec
out
add
mov
neg
dec
inc
add
add
clc
mov
add
jo
mov
std
cld
scas
int3
sub
and
pop
mov
movsb
lock
stc
xor
xor
negb
faddp
push
in
jb
out
xor
add
aam
aad
sub
push
push
jae
cmpsb
int3
in
mov
add
mov
mov
icebp
movsl
add
pop
popa
std
mov
or
lock
mov
add
jnp
bound
inc
jae
jge
cmp
adc
dec
mov
lcall
jl
call
cmp
cld
testl
or
pop
inc
add
addb
cmp
mov
negl
sub
and
sahf
cmp
jne
jne
pop
add
sub
scas
mov
add
jns
xchg
lds
lea
outsb
pop
jmp
repz
xor
in
jp
sub
add
cltd
fisttps
fcmovnbe
ds
ror
jmp
jmp
or
push
push
in
pop
mov
mov
stos
and
je
jp
jg
xchg
mov
cmpsl
frstor
stc
movsb
std
push
dec
addb
sahf
xchg
into
jb
out
push
int3
movsb
xchg
adc
add
neg
popf
mov
push
sub
add
lock
cmp
sbb
inc
add
add
imul
movb
sbb
sub
jb
add
dec
mov
jae
addr16
addb
icebp
outsl
push
ja
pop
mov
xor
add
push
add
xchg
cmc
adc
cmpsl
inc
add
pop
insl
pop
dec
sub
sti
mov
push
stos
sahf
shll
sub
and
sarl
adc
repnz
mov
addr16
gs
out
aad
out
outsl
xor
inc
add
call
add
lahf
jne
sub
xchg
into
mov
cmp
pop
movsb
ficomps
loop
mov
xchg
movb
mov
cmp
js
nop
ret
mov
insl
xchg
nop
flds
bound
mov
rcrl
iret
test
lret
lods
or
lcall
and
out
mov
arpl
xlat
int
mov
cmp
xor
scas
sbb
outsl
je
xchg
push
pop
das
faddp
add
daa
dec
and
add
xor
lret
addb
fstl
fisttps
or
inc
add
addb
mov
push
add
je
cs
movd
jp
jge
mov
or
and
leave
xchg
mov
xor
jno
mov
add
ss
dec
mov
mov
bound
cmpsb
cs
mov
icebp
rorl
imul
dec
scas
sbb
repnz
pop
test
sti
lods
lret
xor
fidivl
fistl
jno
lock
into
dec
mov
scas
mov
and
cli
cmc
gs
je
bound
mov
add
mov
cmp
or
jbe
ja
adc
scas
scas
xlat
ficoms
add
add
mov
daa
mov
adc
int3
mov
int3
mov
add
xchg
push
aad
mov
pop
push
int
test
cmpsb
pop
add
add
adc
out
dec
xchg
aad
or
and
mov
jl
out
hlt
sub
mov
in
sti
sbb
sbb
lcall
jle
clc
fdivs
dec
not
push
lock
into
fstpt
imul
ja
leave
sti
movsb
jno
add
movsl
scas
fcos
addb
add
lock
daa
addr16
out
dec
add
ret
rolb
mov
test
fisubl
dec
cmp
sub
mov
inc
cmp
test
lds
cmp
scas
inc
add
mov
pop
popf
cmp
push
js
xchg
std
adc
xchg
bound
cmp
push
jmp
mov
add
dec
xchg
cmpsl
jmp
jno
and
push
es
fxch
rcrb
sbb
test
pusha
add
add
addl
add
add
sub
jg
xor
arpl
dec
test
adc
add
or
mov
sub
insb
pushl
inc
add
insb
xor
and
xchg
loope
arpl
sbbl
add
in
cmpsb
sub
es
mov
js
xadd
insl
mov
push
stc
inc
add
add
je
lds
negl
jnp
jbe
mov
cmp
call
inc
movb
addb
cld
ficoml
inc
mov
xor
aaa
sbb
fstpl
lea
inc
pop
daa
shlb
sbb
icebp
mov
aaa
movb
add
adc
idivb
mov
outsl
jno
loopne
insb
clc
negb
push
add
mov
xchg
dec
scas
sub
fdivrl
sub
jbe
jge
pusha
add
js
aad
aam
pop
sub
mov
sub
xlat
bound
cmp
push
cwtl
shr
and
mov
xchg
sub
pop
xlat
xor
and
aas
popa
callw
in
mov
movb
cltd
or
in
arpl
xor
mov
mov
cld
mov
je
xor
xchg
and
or
lret
adc
sub
cld
mov
mov
push
clc
xor
mov
sbb
cmp
sbb
jb
push
lock
sbb
xor
sbb
add
mov
jo
out
arpl
push
aad
in
cwtl
add
sub
or
icebp
mov
popf
add
aaa
lea
jbe
pop
popf
add
and
dec
pop
popf
dec
adc
sbb
addr16
cmp
fwait
or
pop
dec
es
stos
add
repnz
into
in
add
jl
bound
into
jb
dec
in
loop
cwtl
mov
test
add
add
add
push
pop
mov
sub
mov
adc
push
or
fidivs
test
push
xchg
rolb
out
loope
adc
sub
cmp
add
sbb
addb
lods
sub
mov
ss
popf
sbb
mov
mov
popf
xchg
loop
in
int3
mov
adc
sbb
add
push
add
fsubl
jle
mov
insl
shll
add
add
inc
add
mov
jnp
mov
jb
addr16
arpl
addb
sahf
jno
mov
and
out
add
mov
dec
ret
xor
lss
add
sbb
lret
loop
fadds
jmp
sub
dec
cs
inc
pop
stos
add
sbb
nop
pop
rolb
push
inc
cld
cmpsl
add
xchg
mov
sbb
inc
fdivs
filds
sub
mov
jecxz
add
xor
gs
subl
jmp
add
sahf
jae
adc
in
adc
or
add
repz
mov
lods
push
inc
pop
clc
pop
cltd
cltd
movsb
push
cwtl
fnstsw
nop
js
mov
mov
add
jnp
sbb
shll
das
leave
lcall
and
inc
out
shll
lret
aas
pop
inc
add
add
out
jg
dec
jns
add
or
jecxz
fisubs
icebp
scas
mov
stos
rolb
cmp
sbb
jl
or
mov
mov
xchg
sub
xor
add
add
arpl
mov
lods
sub
pop
daa
sbb
mov
jae
mov
lods
pusha
add
add
mov
add
rolb
movb
aam
sub
scas
or
pusha
add
pop
cmp
inc
add
inc
add
push
xor
add
push
and
jg
mov
test
pop
cwtl
sbb
out
iret
mov
and
test
adc
fwait
test
sbb
xor
xchg
enter
inc
or
fbld
je
inc
xor
add
mov
mov
sbb
cltd
hlt
mov
jmp
cmp
jle
rcrl
sub
add
lock
mov
daa
jae
push
pop
in
icebp
inc
add
das
mov
ja
rolb
mov
or
inc
xor
pop
outsb
nop
push
xlat
mov
jnp
test
scas
mov
into
and
xor
add
ss
outsl
adc
addr16
add
stc
mov
aaa
fistpl
test
xor
add
pop
mov
xor
mov
stc
jne
aam
mov
imul
loope
and
add
jmp
mov
cld
inc
add
sbb
or
pop
stos
es
add
xchg
rolb
sahf
jne
popa
pop
ja
push
jb
enter
stos
fwait
insl
pop
repnz
jbe
repnz
sub
pop
addb
pushf
icebp
fistl
imul
mov
shll
in
mov
add
add
mov
js
mov
call
sub
mov
inc
add
movsb
arpl
sub
jge
mov
mov
cmp
inc
add
outsl
ja
call
jae
jg
jae
addb
sub
jbe
ss
xchg
cmp
mov
mov
cmpsl
pop
mov
test
repnz
add
sbb
stos
mov
outsl
aaa
pop
dec
ja
push
popa
in
stos
cmovo
js
out
adc
add
pop
jge
push
add
sub
jbe
orl
shlb
lret
mov
sub
sub
inc
add
sub
sub
xchg
mov
add
add
daa
lahf
sbb
pop
pminub
mov
ja
cmc
xor
sbb
out
mov
pusha
add
loope
stos
pop
shrl
loop
push
mov
out
pop
pop
dec
andl
pop
push
cmp
adc
aas
pushf
push
dec
dec
jo
mov
hlt
mov
mov
add
sub
repz
out
addr16
push
mov
test
sub
push
mov
add
push
xor
int3
int
addb
lahf
push
pop
outsl
ret
jbe
ret
ret
aas
addb
pop
pushf
fdivrl
xchg
rolb
into
shlb
pop
mov
jns
pop
mov
lds
mov
scas
mov
ss
fs
test
add
rcrb
and
or
mov
das
xchg
mov
loope
and
ret
pop
hlt
das
mov
add
mov
sub
jge
clc
sbb
out
clc
inc
inc
add
addb
aad
je
jle
add
imul
aam
jp
mov
das
js
pusha
add
mov
jno
ret
icebp
stc
pop
or
jp
and
addb
sbb
xchg
movb
sub
fs
push
add
int3
and
push
add
mov
lock
cwtl
push
scas
inc
add
xchg
sahf
inc
add
xchg
lahf
fistl
xchg
and
scas
popf
add
fcmovnb
add
inc
cmp
add
lret
imul
fstpl
dec
cmp
incb
mov
sbb
loop
or
or
fwait
aas
out
xor
mov
aas
aaa
rolb
add
cmp
pop
int
adc
push
and
and
xor
sbb
nop
addb
js
xchg
in
sub
mov
sub
pop
mov
cmp
insb
mov
in
lahf
cmpl
and
adc
xor
xchg
call
fistl
push
add
int3
jns
add
pushf
xor
mov
jno
mov
push
add
mov
insl
lods
mov
addb
rol
add
sbb
insb
iret
and
push
dec
mov
and
mov
add
lods
pushf
jp
frstor
fldln2
push
and
movb
adc
pop
imul
mov
xchg
or
movb
inc
add
je
out
repnz
push
mov
pop
inc
imul
xor
jmp
mov
icebp
xor
sbb
insl
in
fs
jbe
add
xchg
idivb
lahf
jmp
add
inc
test
add
and
ds
xor
xchg
outsl
dec
xor
mov
xchg
lcall
push
inc
cltd
pop
push
xchg
mov
out
ljmp
in
loope
aad
cld
sar
cmp
or
fs
mov
push
lods
mov
and
lea
pop
pop
jl
cmp
xchg
cmp
xlat
pusha
add
push
popa
pop
push
pop
outsb
stos
mov
sbb
and
dec
mov
push
mov
mov
insl
ds
add
out
cmp
pop
xchg
push
gs
sub
cmp
pop
bound
pop
xor
and
add
mov
lock
jae
add
les
loopne
inc
add
test
sub
gs
add
pop
insl
mov
lahf
or
jp
aad
lahf
call
pop
repnz
lods
sub
add
movsb
int3
aaa
adc
jne
fists
in
cmp
fdivrp
rcrl
daa
cmp
inc
lea
ds
inc
add
push
or
mov
test
xor
xor
aad
addb
inc
add
stc
sti
lea
cs
lret
imul
les
aam
ja
xchg
in
dec
fnsave
in
movl
pusha
add
add
jnp
insb
rolb
pop
jg
sbb
cltd
mov
fadds
add
add
lods
arpl
je
and
mov
mov
or
adc
or
scas
pop
and
mov
mov
jae
xor
cli
cli
les
jae
push
iret
test
mov
mov
dec
sub
pushf
scas
mov
lahf
jmp
repz
xor
add
jo
imull
int3
mov
and
sbb
scas
sub
add
add
or
les
jno
inc
xor
out
outsb
std
bound
add
dec
bswap
cmc
aas
dec
loop
leave
push
jp
insl
clc
mov
jp
pop
inc
pop
stos
sub
loop
add
mov
stc
pop
dec
cmp
push
and
dec
mov
sub
cmpsb
mov
das
inc
add
push
or
les
insl
clc
sti
call
addb
xor
fdivs
or
mul
lock
pop
imul
fsubrl
addb
addb
adc
dec
popa
lahf
dec
rcrb
mov
mov
pop
gs
clc
les
mov
lds
hlt
inc
add
jmp
jmp
dec
ss
mov
dec
bswap
or
cmp
clc
adc
or
shr
repnz
sub
add
out
call
cmpsl
fistpll
mov
cmp
mov
inc
inc
add
dec
adc
pop
loop
out
xchg
cli
or
dec
push
cmp
fisttpll
push
jl
push
pop
dec
adc
mov
mov
xchg
sbb
jp
adc
add
add
push
insb
jno
loopne
pop
leave
lock
sbb
pusha
add
icebp
mov
cmpsl
xor
stos
inc
xor
or
mov
in
aam
flds
add
jmp
add
inc
rcrl
testl
std
pop
mov
std
push
and
xor
xchg
mov
push
mov
outsb
insl
repz
add
mov
inc
add
jns
mov
sub
cmc
pusha
add
in
cmc
in
addb
dec
data16
popl
loopne
add
add
insl
ljmp
sub
or
lds
frstor
add
test
xchg
sub
and
cmp
loope
in
ljmp
fisubrl
dec
xchg
xchg
jecxz
mov
pop
or
adc
xor
push
add
testl
mov
xchg
inc
add
stos
mov
xorl
pop
adc
mov
pop
movsl
mov
push
inc
add
add
aam
sub
dec
cli
addr16
jle
shr
fld
add
mov
sub
dec
add
xchg
and
aad
mov
add
add
add
fsubl
test
sub
lock
mov
imul
add
mov
adc
xor
fisttps
mov
jecxz
lods
adc
mov
ret
cld
fs
push
xor
cmp
aam
loop
fisttpl
sub
repz
stos
int3
sub
add
adc
icebp
cmp
addb
and
adc
sub
or
add
das
loop
call
dec
lret
dec
lods
xor
or
dec
fdivrp
movsl
pop
les
mov
xchg
mov
dec
jp
or
fidivs
rolb
fsubl
jo
dec
paddd
ljmp
add
add
push
pop
cmpsl
fcoms
mov
mov
jp
push
jbe
addb
lea
pop
les
mul
xchg
push
mov
xchg
xor
add
clc
enter
adc
scas
not
or
inc
inc
add
add
cltd
das
out
pop
loop
inc
add
mov
idivl
xor
int
gs
out
mov
js
mov
lds
add
sbb
out
pop
xchg
and
test
mov
shrl
add
loopne
xor
inc
add
sbb
or
add
rclb
mov
inc
loope
cmp
filds
add
js
cmc
out
mov
mov
out
and
in
push
fimuls
dec
shlb
popa
push
and
ret
mov
sbb
loop
out
xchg
push
jle
fsubs
lods
adc
xchg
int
popa
rolb
addl
lahf
sub
ja
jno
sub
xor
sbb
add
dec
push
movsl
sahf
inc
add
jg
hlt
dec
adc
mov
adc
lea
mov
add
scas
jo
fstpt
add
test
jb
popa
addr16
out
pop
in
xchg
add
shll
mov
je
test
push
and
shlb
cld
cltd
cmp
je
jecxz
cmp
inc
add
inc
add
xor
pop
mov
or
cmp
cmpsb
mov
sbb
fnsave
xchg
mov
mov
addb
fdivrs
fisubs
push
sbb
test
xchg
test
lcall
pop
sub
in
fcompl
dec
insl
push
mov
gs
and
sub
dec
scas
xor
jb
mov
mov
pop
push
leave
add
xchg
jb
rcll
xchg
and
jg
addb
jae
lods
pop
sub
cmp
hlt
int3
inc
add
jecxz
loopne
pop
rorl
dec
sti
jmp
jecxz
sahf
insb
pop
mov
lock
xor
mov
insb
cmp
shr
dec
adc
pop
rclb
insb
lret
sub
rcl
das
xlat
add
movsb
in
add
add
xor
or
imul
out
cwtl
mov
adcl
mov
stos
push
inc
add
cmp
es
xchg
xchg
pop
test
sti
insl
in
and
jo
fbld
xlat
aas
nop
mov
int3
push
xchg
jb
add
lods
mov
aaa
mov
in
xor
cmp
setle
xchg
add
js
jb
add
or
add
sbb
or
add
fsub
add
out
lcall
jl
xchg
stos
adc
cli
nop
mov
pop
xor
and
xlat
and
add
pop
rcrb
pop
inc
add
call
aad
pop
push
outsl
mull
add
in
pusha
add
dec
inc
sub
sub
gs
push
mov
test
add
xchg
cli
add
scas
mov
dec
mov
mov
push
adc
popf
lcall
inc
mov
add
add
mov
out
mov
movsb
sub
mov
gs
movsb
push
jp
mov
repnz
addb
pop
incl
mov
jp
pop
sbb
mov
jg
repz
add
xchg
mov
add
jae
movb
push
adc
add
ljmp
and
sub
sbb
das
loope
pop
data16
lods
rolb
cmp
add
push
jo
jp
loopne
call
pop
mov
je
iret
addb
cmp
mov
add
scas
jb
in
mov
mov
mov
add
add
xlat
addb
add
adc
cmp
cmpsb
jmp
xor
jmp
xor
stc
dec
push
pop
js
sub
add
mov
lock
in
popa
jge
shll
scas
inc
add
adc
lods
gs
adc
adc
ror
dec
addb
or
subl
jne
mov
cmp
dec
mov
movb
xchg
jnp
sbb
add
out
push
loopne
fisttpll
lret
jecxz
out
adc
sub
repnz
mov
add
push
aas
stos
aam
mov
icebp
mov
add
daa
push
adcl
adc
ja
andl
int3
adc
mov
test
lds
inc
add
fsubs
in
push
sbb
iret
rolb
or
enter
mov
loope
es
inc
cltd
mov
je
add
movb
push
push
jb
das
ja
and
pusha
add
cmpl
outsl
jae
push
lds
add
xor
pop
decb
add
out
les
test
cmpsl
popf
adc
dec
or
test
mov
or
into
or
sbb
mov
in
push
jmp
inc
add
dec
cmp
add
lret
mov
cmp
push
movsl
inc
inc
add
cld
bound
pop
sbbl
test
sti
inc
sbb
sbb
push
inc
ja
in
movsl
cmpps
stc
ja
xchg
hlt
adc
jecxz
js
adc
pop
fisubrl
lods
jle
std
xchg
lock
push
xchg
out
xchg
mov
pushf
inc
add
pop
mov
in
popf
test
dec
cmpsb
add
push
and
jmp
daa
int3
add
aaa
or
jecxz
decb
add
add
jge
enter
test
js
cvtdq2ps
mov
add
and
shrl
add
jge
out
ret
je
nop
insb
hlt
cmp
push
std
mov
int3
push
mov
add
mov
das
ja
add
leave
cltd
jno
add
add
test
mov
add
jae
add
outsl
jbe
jp
sub
adc
daa
and
inc
add
aas
adc
xchg
jne
jne
je
push
push
cmpsl
loop
jg
add
sbb
mov
sbb
push
mov
and
add
push
lods
testb
testl
mov
outsl
pop
in
or
adc
hlt
mov
xlat
mov
ret
adc
ret
daa
popf
and
sahf
insb
and
cld
mov
pop
mov
lret
sub
cld
pop
jno
xchg
aas
test
cld
or
add
stos
les
cmp
mov
push
cmc
es
stos
and
add
jmp
and
loopne
and
add
ljmp
jns
faddl
add
jecxz
add
pushf
add
ljmp
pop
sbb
aas
cmp
and
pop
not
call
mov
xor
popa
lods
sub
lcall
add
and
stos
call
iret
out
outsl
out
inc
add
lods
adc
add
dec
cmpsl
into
aas
push
mov
jmp
repnz
adc
jge
dec
cmc
stos
cld
fs
pop
out
aaa
adc
push
sub
mov
mov
mov
loopne
enter
int3
jg
add
add
add
ds
test
xchg
add
mov
push
stos
push
movsb
jne
mov
test
aad
add
mov
repnz
in
cmp
pop
out
shrl
cmpsb
xor
pop
sbb
xor
adc
sub
sti
adc
mov
popf
adc
cmp
aam
sub
inc
add
add
in
push
mov
mov
movsb
cmp
inc
mov
incb
mov
mov
lahf
jge
std
aam
dec
mov
adc
loope
add
xor
sub
cs
dec
push
jl
xor
jae
or
cmp
dec
push
pusha
add
inc
add
xchg
pop
mov
pop
enter
add
mov
jno
cltd
mov
mov
cmp
outsl
push
push
push
imul
iret
cmp
pop
push
shrl
mov
rep
pop
faddp
add
mov
out
ds
push
int
js
inc
add
enter
add
add
jmp
enter
test
or
and
adc
add
clc
test
imul
outsb
push
add
add
les
rcll
lods
xor
lods
imul
add
mov
xor
in
pop
addb
out
and
and
loop
push
lret
cmpsb
int
inc
scas
addb
mov
mov
je
lret
andl
jmp
insb
repnz
push
add
sbb
add
pushf
hlt
sub
aam
and
imul
and
xor
cmp
dec
adc
add
popa
mov
adc
gs
aad
loope
jb
fwait
test
imul
filds
add
push
in
xchg
repz
jmp
jo
fsubr
jno
icebp
cwtl
mov
sub
in
mov
ja
push
mov
sbb
inc
push
jns
fbld
clc
adc
and
and
jnp
popl
and
sub
test
jg
xchg
mov
pop
push
mov
pop
cld
jl
jae
dec
jae
xchg
push
call
cld
xchg
outsb
pop
add
jo
std
sbbl
pusha
add
xchg
idiv
aaa
pop
mov
mov
add
pop
xchg
xor
in
popa
cs
popf
add
dec
ja
dec
jb
notb
pop
lds
loope
or
and
jbe
addl
in
call
push
outsb
data16
rcrl
cmp
and
jg
sti
mov
xorl
or
and
rcrb
jo
outsb
dec
mov
pushf
jecxz
xchg
dec
xchg
jne
add
mov
addb
adc
cmp
insl
mov
movb
les
xchg
jne
sub
push
push
cmp
cli
in
add
adc
xchg
or
ja
leave
add
into
mov
jns,pn
add
loope
jno
and
jecxz
adc
mov
push
mov
or
or
das
leave
out
leave
cmp
cmpsb
push
sbb
add
sbb
ja
inc
xlat
aad
in
cmp
mov
adc
jle
ja
clc
movb
and
and
js
add
inc
add
movl
mov
sub
xchg
hlt
add
cltd
pop
insb
mov
sbb
mov
arpl
pop
hlt
xchg
jae
lock
and
mov
dec
cmp
lret
lea
xor
jae
xchg
mov
pop
xor
jmp
cli
icebp
lret
movsb
in
inc
cld
lods
divb
pop
adc
sub
xchg
inc
lods
add
sub
xor
je
add
jb
adc
fs
inc
add
add
mov
loop
pop
mov
pop
cltd
xchg
rolb
add
loop
sub
nop
cmp
ja
aad
incl
add
or
data16
push
daa
add
or
fdiv
icebp
mov
addl
cmc
xor
test
test
decl
lods
pop
addr16
mov
addr16
add
in
stos
inc
add
xchg
pop
push
add
pusha
add
rolb
or
or
cld
in
loopne
jg
filds
cld
xchg
xchg
jp
and
pop
mov
out
sub
add
loopne
add
in
testl
loopne
test
jns
fsubrp
mov
push
aaa
stc
aad
in
sub
cs
or
jno
gs
mov
das
fbld
lods
and
pop
xchg
mov
cltd
cmc
lcall
bound
jecxz
fs
je
stc
dec
icebp
pop
sub
and
pop
test
add
push
xchg
aad
sub
push
mov
adc
dec
mov
adc
push
push
push
aaa
out
xchg
adc
outsl
adc
nop
or
in
ret
in
cmpsl
fisubl
inc
add
xchg
gs
incl
cmp
nop
stc
sub
scas
cmp
scas
das
divb
add
sub
sbb
inc
add
cmp
or
fadds
add
cltd
icebp
mov
or
shr
in
pop
cs
push
mov
stos
inc
add
aam
test
jl
lret
xchg
or
scas
sub
add
add
xchg
dec
jnp
fwait
jnp
cmp
movb
jecxz
repnz
ficompl
in
sub
mov
lock
and
ds
repnz
enter
adc
xlat
dec
outsl
sbb
lods
ja
sub
js
add
iret
outsl
dec
cs
sbb
cmp
sub
cmc
data16
pop
lea
adc
pop
lods
dec
push
dec
popf
push
movsb
outsb
push
cmp
or
inc
add
ljmp
lods
imul
push
xor
pop
pop
divl
add
in
xor
sahf
mov
push
add
cmp
pusha
add
repnz
addb
test
push
add
sbb
jle
popf
inc
inc
mov
jno
stos
aas
push
pop
or
test
loopne
add
aas
push
dec
fmull
lea
pop
mov
test
mov
test
rolb
push
adc
add
repnz
mov
dec
pop
sbb
mov
and
jg
ja
lahf
mov
pop
cmp
add
mov
movsl
insb
faddl
sti
sub
push
fs
sub
or
xchg
mov
ds
pop
push
in
jno
in
rorl
mov
fildl
inc
add
int
mov
in
mov
ret
sub
int
es
lods
pop
popa
inc
add
jo
cmp
lods
fbld
push
xchg
ja
xchg
mov
ret
cwtl
idivb
incb
decl
jae
mov
and
mov
add
pop
aas
repnz
add
dec
and
out
mov
xor
push
mov
inc
add
adc
inc
add
mov
test
imul
sub
fldt
mov
imul
scas
mov
loop
mov
add
iret
adc
pop
lods
inc
jge
pop
jbe
xchg
fildll
xlat
dec
cmp
lea
mov
iret
lods
lea
pop
out
rcrl
and
pop
pop
mov
mov
adc
dec
mov
ret
xor
mov
test
ss
add
fcomps
mov
shll
data16
xchg
or
mov
cmpsl
in
dec
dec
or
lret
push
jae
cmp
xchg
xchg
cmp
adcl
ja
icebp
adc
jne
les
lcall
in
adc
in
push
cmp
add
pop
test
call
aad
fldcw
xchg
mov
sub
js
adc
mov
mov
cmp
mov
je
inc
adc
mov
fsts
lea
les
and
shll
jo
cmp
mov
adc
pop
dec
in
jmp
scas
jo
jbe
jmp
push
sub
add
pop
mov
add
adc
xor
nop
mov
mov
call
ret
add
mov
and
mov
xlat
ljmp
fisubrs
mov
pop
push
mulb
arpl
inc
dec
lods
xor
push
and
popa
in
stos
das
std
cmp
addr16
add
ss
popl
insl
push
add
jae
mov
fs
scas
push
sahf
test
pop
xchg
sti
jle
out
outsl
mov
in
insl
pop
gs
stc
sbb
je
add
cltd
push
outsl
movsb
ss
stos
jp
cs
and
in
sub
je
dec
ret
test
sbb
mov
fxtract
push
add
das
das
or
or
and
movsb
jge
movb
jo
fimull
sahf
pop
cmpsb
jl
adc
xor
fiaddl
and
sbb
pop
scas
inc
add
cmpsl
jmp
sub
mov
mov
ljmp
imulb
pop
addb
fld1
and
not
popf
ja
jns
add
add
sbb
cmc
jae
loope
aas
xchg
adc
xchg
or
mov
mov
stos
xor
shrl
or
inc
lcall
mov
or
iret
adc
sub
inc
add
xchg
push
push
cmpsl
mov
jnp
mov
nop
xchg
xchg
adc
ret
fisubrl
lods
adc
sub
lods
add
lods
sti
dec
aam
daa
mov
rcrl
jns
xchg
xchg
int3
cmp
sub
add
jge
inc
add
add
push
stos
cmp
fs
push
popf
lock
ds
add
test
sbb
jp
fnstsw
or
rcrl
add
push
adc
cmp
stos
mov
inc
sub
xor
and
loop
lds
add
inc
jp
and
cmp
pop
lods
cmpsl
outsl
outsb
mov
and
iret
inc
add
jmp
fildl
push
pop
sub
mov
mov
add
fcompl
rorb
fbstp
sbb
das
das
sub
mov
cmpsb
nop
dec
imul
scas
scas
enter
lods
xchg
ret
dec
xor
add
stc
nop
es
add
add
jb
and
stc
nop
es
vandps
enter
jb
pop
jo
das
xchg
hlt
add
add
add
add
stc
nop
es
add
mov
stc
nop
es
jno
xchg
test
mov
stc
nop
es
mov
fstpt
stc
nop
es
add
jo
in
add
mov
stc
nop
es
mov
add
add
stc
nop
es
add
xchg
add
inc
add
mov
push
mov
xchg
ret
xchg
inc
add
pop
cmpsb
sbb
mov
xchg
ret
add
pop
fildl
add
cmc
push
fsubl
xor
add
stc
nop
es
jle
xchg
fnsave
sar
es
add
call
mov
mov
xchg
ret
cmpsb
call
or
xor
nop
cld
nop
jmp
add
add
add
lahf
mov
stc
nop
es
xchg
add
loop
inc
fidivl
call
sub
inc
add
sbb
add
outsl
pop
je
stc
nop
es
das
aas
xchg
mov
nop
es
sti
mov
enter
leave
nop
cld
nop
jmp
sti
add
dec
xor
push
mov
xchg
ret
dec
inc
into
add
rorb
mov
push
mov
xchg
ret
cmpsb
aas
xchg
enter
push
mov
mov
mov
add
or
ds
jle
dec
cmp
mov
xchg
ret
add
je
add
stc
nop
es
add
add
cmpl
push
mov
xchg
ret
lds
lcall
jb
add
add
add
ret
pop
mov
stc
nop
es
add
push
add
add
cmp
cld
nop
jmp
cli
push
aas
jle
add
push
stc
nop
es
add
aad
xchg
push
add
shl
dec
test
push
mov
xchg
ret
cmpsl
or
je
sub
rorb
add
ret
jb
push
push
mov
xchg
ret
loop
add
add
cltd
mov
stc
nop
es
fst
lret
mov
mov
nop
cld
nop
jmp
sti
add
mov
nop
cld
nop
jmp
add
cmp
jo
xchg
mov
stc
nop
es
add
add
add
outsl
xor
push
mov
xchg
ret
add
xchg
add
add
pop
mov
stc
nop
es
jle
mov
jae
jge
stc
nop
es
fstpt
jo
flds
icebp
mov
mov
push
mov
xchg
ret
add
cs
imulb
out
inc
add
add
loop
inc
add
mov
stc
nop
es
lret
add
add
aam
mov
jb
push
push
mov
xchg
ret
or
outsl
add
filds
test
cmp
ret
add
add
or
and
jle
aas
add
add
jp
jmp
add
nop
cld
nop
jmp
inc
add
add
fidivrs
stc
nop
es
lret
jno
add
mov
stc
nop
es
add
nop
cld
nop
jmp
enter
add
mov
stc
nop
es
xchg
add
fs
nop
cld
nop
jmp
lds
jo
add
push
mov
xchg
ret
add
aas
lret
testl
add
dec
jno
testl
nop
jmp
cli
lret
loop
add
add
nop
cld
nop
jmp
add
mov
mov
leave
stc
nop
es
add
mov
jo
mov
push
mov
xchg
ret
add
add
add
stc
nop
es
add
add
outsl
add
add
mov
push
mov
xchg
ret
add
mov
mov
push
push
mov
xchg
ret
fadds
xor
add
mov
sub
stc
nop
es
sbb
add
add
lret
outsb
pop
nop
cld
nop
jmp
mov
enter
les
push
mov
push
mov
xchg
ret
cmpsb
add
fildl
add
stos
pusha
stc
nop
es
add
xchg
add
add
or
stc
nop
es
dec
add
xchg
pop
imul
stc
nop
es
outsl
add
inc
add
add
stc
nop
es
add
inc
pop
mov
stc
nop
es
add
aad
pop
mov
stc
nop
es
add
add
sub
xor
push
mov
xchg
ret
add
cli
into
add
cli
movzwl
nop
cld
nop
jmp
jno
in
add
add
jb
fldl
dec
cmp
xchg
cs
subl
stc
nop
es
add
dec
add
addb
aaa
mov
mov
sub
nop
es
add
nop
and
shll
xor
stc
nop
es
or
add
sbb
nop
jmp
fadds
mov
add
add
stc
nop
es
add
stos
pop
stc
nop
es
xchg
add
add
cs
insb
pop
push
mov
xchg
ret
add
add
add
daa
fs
call
cmpb
add
add
pop
xor
stc
nop
es
inc
xor
add
xchg
mov
jne
stc
nop
es
add
dec
aas
movb
mov
stc
nop
es
or
mov
fwait
movswl
stc
nop
es
movb
in
add
cmp
nop
cld
nop
jmp
add
add
jne
nop
cld
nop
jmp
add
add
ljmp
inc
add
lret
lret
mov
test
inc
add
dec
add
add
jle
ret
stc
nop
es
add
aas
cmpsb
sbb
movsb
stc
nop
es
aad
add
add
mov
es
add
loop
scas
call
stc
nop
es
xor
add
mov
es
add
decb
nop
jmp
enter
arpl
add
add
clc
push
nop
cld
nop
jmp
add
add
aad
aas
add
addb
and
push
mov
xchg
ret
sti
add
xchg
pop
aam
jne
nop
cld
nop
jmp
add
aad
lahf
mov
stc
nop
es
mov
jle
add
inc
add
stc
nop
es
or
inc
add
popa
push
lods
mov
stc
nop
es
lret
add
fmul
dec
xor
pop
push
mov
xchg
ret
aas
cmpsb
xchg
loop
sub
lret
nop
cld
nop
jmp
add
sub
fiaddl
stc
stc
nop
es
fsts
inc
dec
push
jl
push
mov
xchg
ret
add
add
push
add
gs
call
stc
nop
es
add
add
je
ret
stc
nop
es
add
add
add
add
loope
in
popa
stc
nop
es
add
push
mov
mov
sub
nop
es
sub
add
jo
mov
inc
jnp
stc
nop
es
mov
add
mov
mov
nop
cld
nop
jmp
add
cld
pop
nop
cld
nop
jmp
outsl
add
add
scas
sbb
add
push
mov
xchg
ret
add
cs
add
loop
add
nop
cld
nop
jmp
loop
fadds
daa
jle
and
cld
jmp
nop
cld
nop
jmp
add
addr16
and
mov
mov
es
dec
mov
daa
add
leave
mov
nop
cld
nop
jmp
aam
or
dec
mov
push
mov
xchg
ret
mov
add
sti
jle
xor
outsl
sti
inc
add
add
das
add
xor
jae
inc
add
add
daa
add
add
or
es
pop
xchg
xchg
pop
add
or
stc
nop
es
add
mov
cld
nop
jmp
das
popa
add
rolb
nop
es
scas
sbb
inc
add
nop
es
add
xchg
sti
rep
push
mov
xchg
ret
loop
mov
mov
ja
mov
stc
nop
es
cs
nop
cld
nop
jmp
in
add
or
add
mov
nop
jmp
add
add
movb
add
push
mov
push
aas
rcrl
pop
jge
and
lock
cmc
xor
add
nop
cld
nop
jmp
add
into
add
stc
nop
es
mov
push
insl
push
stc
nop
es
add
add
xor
fcomps
nop
es
add
popa
aam
push
das
cli
mov
jmp
jno
xor
add
scas
or
stc
nop
es
dec
xchg
into
scas
add
add
mov
nop
es
add
xor
or
stc
nop
es
mov
add
aad
loopne
mov
stc
nop
es
aas
cmp
push
sbb
nop
es
outsl
add
add
stc
nop
es
inc
add
mov
mov
push
mov
xchg
ret
add
add
mov
push
or
mov
xchg
ret
add
xchg
add
add
in
je
nop
cld
nop
jmp
cs
sti
or
stc
nop
es
dec
add
add
idivl
nop
or
add
nop
es
add
inc
jle
movl
and
add
nop
es
xor
mov
loopne
nop
es
popa
add
jno
add
mov
jmp
add
add
add
mov
jb
inc
add
or
lds
int
movsb
push
mov
xchg
ret
add
es
mov
stc
nop
es
add
aam
inc
push
pop
pusha
push
mov
xchg
ret
add
mov
loop
add
add
add
fldt
mov
nop
cld
nop
jmp
sti
mov
add
or
add
les
nop
es
add
add
add
xor
punpckhdq
nop
es
add
add
add
jno
mov
stc
nop
es
add
push
mov
xchg
ret
add
push
add
push
pop
push
mov
mov
adc
aas
cmp
out
pop
add
xlat
test
add
push
mov
xchg
ret
add
call
jne
ret
mov
stc
nop
es
add
daa
fldl
insl
shl
stc
nop
es
cli
add
arpl
add
add
add
add
call
ret
add
dec
in
add
test
in
add
add
inc
sub
nop
es
dec
test
add
stc
nop
es
sub
sti
flds
push
jo
push
stc
nop
es
add
add
jmp
mov
stc
nop
es
loop
sti
out
test
es
sbb
add
add
add
mov
stc
nop
es
dec
add
lret
add
stc
nop
es
inc
add
test
add
xchg
add
stc
nop
es
add
xchg
add
stc
nop
es
enter
push
call
dec
cmp
nop
es
sbb
sti
jo
and
or
nop
es
add
jno
daa
dec
xchg
into
push
nop
cld
nop
jmp
test
xchg
add
add
mov
movsb
mov
xor
add
nop
cld
nop
jmp
jno
test
ret
add
add
add
mov
mov
add
sti
mov
nop
es
add
dec
in
cli
mov
stc
nop
es
sbb
mov
mov
xchg
ret
fcoms
jle
jne
stc
nop
es
add
inc
add
inc
add
mov
stc
nop
es
add
push
add
inc
push
mov
xchg
ret
arpl
add
sbbl
push
cmc
incl
mov
add
add
xor
sub
es
sbb
add
add
and
add
push
mov
xchg
ret
cs
xchg
add
add
and
add
add
sbbl
nop
es
aad
movb
add
dec
std
push
stc
nop
es
add
add
arpl
dec
push
mov
xchg
ret
aam
hlt
add
add
lcall
jo
add
or
add
into
rep
stc
nop
es
add
add
mov
stc
nop
es
cmpsb
add
add
arpl
or
mov
xchg
ret
jo
arpl
add
mov
xchg
ret
dec
enter
fildl
popf
stc
nop
es
or
or
jmp
stc
nop
es
mov
loop
les
cmp
test
add
sbb
add
das
add
add
stc
nop
es
mov
add
das
add
nop
cld
nop
jmp
sub
add
push
stc
nop
es
add
loop
and
out
add
stc
nop
es
add
sub
inc
or
mov
adc
nop
es
add
add
mov
add
stc
nop
es
add
add
jp
adc
popf
pop
stc
nop
es
daa
mov
mov
xchg
jmp
add
add
dec
push
mov
stc
nop
es
fisttpl
add
push
mov
xchg
ret
add
add
fmuls
call
stc
nop
es
movb
add
jmp
add
call
and
push
mov
xchg
ret
add
add
dec
repnz
mov
stc
nop
es
add
mov
add
add
addb
add
fldl
push
addb
cmpl
nop
cld
nop
jmp
xor
push
xor
push
mov
xchg
ret
mov
cmp
nop
es
add
add
add
lret
adc
jle
nop
cld
nop
jmp
popa
dec
mov
add
aam
lret
add
push
mov
xchg
ret
cmpsb
aad
arpl
mov
es
or
add
push
mov
xchg
ret
add
sbb
xor
mov
add
push
mov
xchg
ret
add
xor
add
jnp
stc
nop
es
xchg
add
dec
xor
jnp
push
push
add
stc
nop
es
add
in
push
sub
mov
xchg
ret
hlt
or
mov
stc
nop
es
add
flds
add
stc
nop
es
add
lret
test
shrb
mov
xchg
ret
popa
add
loop
mov
xchg
ret
fildl
add
rcrl
lds
aad
add
aam
pusha
add
arpl
jmp
xchg
add
add
stc
nop
es
into
add
hlt
clc
add
stc
nop
es
add
xor
test
or
adc
add
add
or
icebp
lret
dec
nop
cld
nop
jmp
add
add
add
inc
or
mov
cwtl
mov
stc
nop
es
dec
sbb
sbb
nop
es
daa
popa
xor
lea
stc
nop
es
test
sti
add
lods
stc
nop
es
add
cli
cmpsb
add
add
add
sbb
add
sbb
sub
add
nop
cld
nop
jmp
add
xchg
add
dec
add
add
loopne
cld
nop
jmp
add
push
loop
add
jmp
push
mov
xchg
ret
inc
add
sti
xchg
lret
enter
cld
nop
jmp
dec
xchg
add
xchg
loop
add
adc
xlat
out
add
add
cmpsb
add
pushl
stc
nop
es
inc
add
xchg
inc
add
add
nop
cld
nop
jmp
add
add
pop
hlt
stos
and
push
mov
xchg
ret
cli
add
mov
mov
xchg
ret
add
sti
js
pop
adc
push
inc
add
ret
add
add
push
mov
xchg
ret
push
daa
add
test
sldt
stc
nop
es
test
xor
testb
jb
dec
add
add
ret
out
cwtl
add
stc
nop
es
add
add
add
gs
add
stc
nop
es
xchg
test
add
xor
nop
es
add
add
add
add
stc
nop
es
add
mov
and
stc
nop
es
in
dec
add
arpl
sbb
nop
es
dec
add
push
nop
cld
nop
jmp
xchg
add
add
add
add
mov
inc
add
daa
jo
add
add
stc
nop
es
add
add
enter
movzwl
stc
nop
es
add
add
stc
nop
es
add
add
mov
inc
add
add
jle
stc
nop
es
loop
jle
lret
add
adc
add
outsl
add
push
rolb
xor
stc
nop
es
aam
add
xchg
loop
arpl
and
nop
es
add
or
jne
stc
nop
es
dec
hlt
test
push
mov
xchg
ret
add
dec
jnp
es
jno
das
frstor
adc
nop
es
outsl
add
enter
push
push
mov
xchg
ret
add
add
adc
ljmp
xchg
stc
sti
popa
aas
add
into
add
push
stc
nop
es
add
das
add
add
iret
shr
stc
nop
es
add
add
xchg
stc
nop
es
add
cld
or
jmp
cs
stc
nop
es
add
mov
rcrl
add
add
nop
es
add
add
cmp
nop
cld
nop
jmp
aas
sti
aas
dec
add
dec
adc
nop
es
add
add
call
nop
es
add
fildl
pause
cld
nop
jmp
movb
daa
add
cmpsb
xchg
imul
add
fmuls
add
sbb
fsts
pop
popa
stc
nop
es
ret
add
outsl
add
das
call
nop
cld
nop
jmp
mov
lock
mov
nop
cld
nop
jmp
add
add
arpl
pop
mov
add
lock
repnz
adc
stc
nop
es
aad
add
add
nop
es
add
add
stc
nop
es
das
add
aas
push
mov
add
add
add
scas
push
xor
add
add
inc
inc
aaa
mov
stc
nop
es
fistpl
mov
jl
stc
nop
es
inc
mov
xchg
sbb
inc
stc
nop
es
enter
add
add
nop
es
add
in
movb
cmpl
nop
cld
nop
jmp
add
sti
add
xor
shr
mov
stc
nop
es
add
sbb
add
xor
stc
nop
es
jle
outsl
dec
add
xchg
fidivl
rclb
leave
or
xchg
ret
aas
add
int
stos
stc
nop
es
push
add
add
add
das
decl
push
mov
xchg
ret
pop
inc
add
and
push
mov
xchg
ret
arpl
cmp
stc
nop
es
mov
daa
add
cmpl
nop
cld
nop
jmp
inc
fcmovnbe
sbb
sahf
pop
nop
cld
nop
jmp
add
add
sbb
flds
pop
push
mov
or
xchg
add
in
movsb
add
add
mov
push
mov
xchg
ret
add
aas
add
jns
movsl
stc
nop
es
add
arpl
xor
rep
stc
nop
es
test
scas
dec
in
add
nop
es
jle
add
mov
cmpsb
jle
test
or
add
add
add
add
mov
jmp
stc
nop
es
call
clc
je
stc
nop
es
add
loop
pop
stc
nop
es
add
add
add
cmp
pop
or
xchg
ret
into
cmp
add
add
mov
xchg
ret
ret
xchg
lds
ror
push
mov
xchg
ret
add
mov
stc
nop
es
movb
add
movzwl
nop
cld
nop
jmp
add
add
mov
xchg
ret
cmp
add
enter
push
mov
xchg
ret
mov
popa
mov
jne
stc
nop
es
add
mov
call
stc
nop
es
lret
add
add
mov
imul
add
nop
es
mov
xor
rclb
push
lock
add
add
push
stc
nop
es
lds
add
push
pop
mulb
add
and
mov
xchg
ret
daa
xchg
daa
add
stc
nop
es
add
jle
mov
stc
nop
es
ret
add
hlt
add
jnp
adc
nop
cld
nop
jmp
add
or
lret
xchg
add
dec
out
inc
add
fldenv
push
add
sbb
andb
add
sbb
nop
es
add
ret
add
add
add
fs
mov
push
mov
xchg
ret
enter
inc
mov
inc
xchg
lret
and
nop
es
push
add
mov
or
jb
add
add
enter
stc
nop
es
dec
add
add
add
cmp
stc
nop
es
sti
daa
add
popa
add
nop
es
add
xchg
hlt
add
shll
cmp
nop
es
add
add
enter
add
sbb
add
add
add
inc
cmp
jmp
nop
es
add
push
mov
fs
cld
nop
jmp
add
outsl
sti
jno
xchg
nop
cld
nop
jmp
add
cmp
add
aam
sti
pushf
je
stc
nop
es
xor
test
add
stc
nop
es
mov
add
add
sti
push
add
test
les
xlat
inc
imul
nop
jmp
add
add
loop
add
mov
nop
cld
nop
jmp
add
add
mov
mov
stc
nop
es
outsl
fstpl
add
mov
stc
nop
es
inc
add
cmp
inc
add
add
add
add
push
sub
stc
nop
es
add
jns
add
stc
nop
es
aas
das
dec
lret
dec
add
addr16
stc
inc
add
add
enter
addb
fs
nop
jmp
add
xchg
add
rolb
mov
stc
nop
es
add
mov
add
stc
nop
es
sti
add
lock
add
stc
nop
es
add
push
add
push
mov
xchg
ret
add
outsl
xchg
das
into
popf
mov
nop
cld
nop
jmp
inc
das
fcom
ret
shlb
push
jb
inc
add
add
add
call
stc
nop
es
pop
add
adc
mov
inc
add
add
nop
es
loop
cs
test
add
add
stc
nop
es
add
aaa
cmpsb
sbb
adc
and
cli
jle
push
push
sbb
stc
nop
es
add
mov
nop
cld
nop
jmp
add
mov
xchg
ret
cmp
cmpsb
sbb
add
scas
mov
stc
nop
es
xchg
add
movb
pop
push
mov
xchg
ret
xor
jo
jne
stc
nop
es
test
jnp
stc
nop
es
add
loop
scas
mov
shr
mov
push
mov
xchg
ret
add
sbb
add
add
jecxz
jmp
sti
loop
push
add
cmp
nop
es
jo
or
xchg
ds
push
mov
xchg
ret
add
jno
ret
daa
dec
xchg
nop
cld
nop
jmp
lds
add
arpl
cli
sti
imul
adc
add
ret
add
mov
add
push
mov
xchg
ret
loop
add
lds
movb
mov
xchg
ret
add
or
es
aad
mov
push
stc
nop
es
loop
xchg
cli
cmpsb
sbb
mov
mov
stc
nop
es
xor
add
xchg
ss
xchg
stc
nop
es
add
outsl
add
add
call
stc
nop
es
pop
mov
push
bound
hlt
jl
add
stc
nop
es
dec
loop
mov
add
add
stc
nop
es
add
das
add
cmpsb
sub
jb
test
aad
loopne
mov
push
mov
xchg
ret
add
add
inc
adc
lea
stc
nop
es
xor
fildl
ret
push
mov
pop
add
or
pusha
bound
lods
mov
jne
stc
nop
es
pop
add
loop
add
nop
es
add
add
add
in
inc
add
add
add
add
in
incl
inc
add
popa
add
stc
nop
es
fsincos
add
sti
add
stos
stc
nop
es
loop
das
ret
add
sbb
push
mov
xchg
ret
add
jb
in
jne
nop
cld
nop
jmp
add
inc
rsqrtps
addr16
and
add
mov
mov
xchg
ret
dec
sbb
xor
stc
nop
es
aad
add
add
or
es
add
add
add
pop
add
push
mov
xchg
ret
add
add
add
nop
es
xor
test
add
push
add
dec
testl
nop
cld
nop
jmp
push
jo
mov
nop
es
add
add
push
xor
inc
nop
cld
nop
jmp
add
xchg
add
std
push
stc
nop
es
xchg
add
add
add
stc
nop
es
add
daa
sti
in
lret
xchg
add
test
nop
es
enter
push
jb
mov
stc
nop
es
movb
or
hlt
call
add
add
xor
sbb
dec
add
nop
cld
nop
jmp
inc
cmpsb
add
add
add
push
std
push
stc
nop
es
jno
jo
add
or
add
nop
es
inc
add
fcoml
nop
es
add
xchg
push
push
dec
cmp
aam
mov
stc
nop
es
enter
add
test
imul
stc
nop
es
mov
xchg
add
lea
cmpsl
or
xchg
ret
test
in
mov
stc
nop
es
arpl
add
mov
add
stc
nop
es
inc
mov
call
sbb
nop
es
sbb
add
add
jmp
stc
nop
es
add
xchg
sti
mov
stc
nop
es
add
jo
push
push
stc
nop
es
fnclex
sti
add
mov
and
stc
nop
es
dec
inc
add
jne
push
mov
xchg
ret
fadds
add
add
add
cld
inc
add
lret
mov
dec
pop
pop
push
stc
nop
es
add
xchg
xchg
enter
pusha
add
push
push
add
stc
nop
es
add
or
popa
stc
nop
es
cs
xor
add
mov
stc
nop
es
aas
loop
loop
nop
jmp
push
mov
xchg
ret
into
scas
add
add
push
aad
xor
stc
nop
es
sub
add
movzwl
stc
nop
es
add
push
stc
nop
es
movb
add
pop
add
pop
nop
cld
nop
jmp
das
add
aam
sti
inc
add
mov
es
dec
add
jno
add
and
stc
nop
es
add
xchg
loop
jle
lock
test
es
or
mov
cli
jo
lods
imul
stc
nop
es
add
mov
es
sti
inc
add
sbb
aad
and
nop
cld
nop
jmp
add
mov
mov
stc
nop
es
add
je
stc
nop
es
cmpsb
add
cmp
cmpl
nop
jmp
add
fldl
jbe
add
or
nop
es
outsl
add
add
add
movsl
mov
js
nop
cld
nop
jmp
add
add
pusha
push
mov
xchg
ret
xor
add
mov
mov
stc
nop
es
add
add
add
or
nop
cld
nop
jmp
aam
into
add
lock
mov
xchg
ret
add
das
cli
xchg
sbb
stc
nop
es
lds
jo
push
jecxz
addb
lds
add
stc
nop
es
das
add
add
cs
dec
stos
stc
nop
es
mov
aam
mov
sub
stc
nop
es
add
add
add
or
nop
cld
nop
jmp
loop
add
dec
add
add
or
nop
es
inc
sti
add
add
add
add
nop
es
add
add
mov
nop
cld
nop
jmp
add
outsl
out
mov
stc
nop
es
sti
mov
stc
nop
es
pop
add
and
push
stc
nop
es
add
pop
add
add
test
push
add
stc
nop
es
aas
mov
ret
das
mov
stc
nop
es
or
sbb
push
call
and
into
fmuls
cmpl
enter
jb
add
hlt
inc
mov
add
sub
movsb
push
mov
xchg
ret
dec
mov
out
mov
stc
nop
es
add
stc
nop
es
cli
add
add
test
fcoms
shr
stc
nop
es
add
das
out
sub
stc
nop
es
add
add
add
push
xchg
stc
nop
es
sti
sbb
cmpsb
add
push
add
icebp
stc
nop
es
add
flds
cld
nop
jmp
fsubr
add
add
add
jno
pop
stc
nop
es
aam
add
shlb
mov
es
add
daa
add
into
or
cld
pusha
stc
nop
es
jle
add
add
movb
fsubl
xor
add
nop
cld
nop
jmp
dec
add
icebp
xor
push
push
mov
xchg
ret
inc
add
ret
stc
nop
es
cmp
call
daa
imul
sub
add
cmp
add
jae
dec
mov
stc
nop
es
dec
loop
arpl
lea
jb
mov
mov
loopne
stc
nop
es
fdiv
mov
add
jns
stc
nop
es
add
mov
mov
mov
jb
add
dec
add
fwait
jmp
nop
cld
nop
jmp
add
enter
xor
stc
nop
es
add
movb
add
mov
test
inc
add
loop
enter
sarb
es
jle
lds
jno
add
nop
jmp
inc
mov
add
push
stc
nop
es
mov
mov
mov
stc
nop
es
push
test
xchg
into
lea
nop
cld
nop
jmp
add
add
fwait
pop
nop
cld
nop
jmp
add
mov
add
loopne
add
stc
nop
es
add
dec
add
arpl
es
movb
sti
fildl
pop
mov
nop
es
add
mov
xchg
jle
push
stc
nop
es
loop
outsl
add
jo
add
dec
push
mov
xchg
ret
add
add
loop
dec
imul
cld
sti
add
add
mov
add
in
add
add
stc
nop
es
add
mov
stc
nop
es
add
add
or
add
stc
nop
es
add
add
sti
scas
mov
loope
lods
push
mov
xchg
ret
push
add
aam
mov
stc
nop
es
add
mov
nop
es
add
cmpsb
fadds
cli
aad
inc
xchg
xor
mov
xchg
ret
add
add
aam
orl
inc
add
add
sbb
dec
push
mov
jbe
add
push
mov
xchg
ret
mov
dec
fistpll
lret
nop
jmp
popa
add
pusha
add
dec
imul
andb
incl
inc
sti
dec
es
add
nop
es
sub
aas
add
stc
nop
es
pop
test
add
xchg
out
push
push
mov
xchg
ret
cmp
add
or
addr16
nop
jmp
sti
xchg
add
das
add
sti
lock
push
mov
add
cmc
add
add
and
not
stc
nop
es
enter
pop
daa
add
dec
mov
stc
nop
es
hlt
add
or
and
mov
xchg
ret
jno
sbb
add
push
mov
xchg
ret
inc
pop
inc
outsl
jno
push
stc
nop
es
popa
mov
or
adc
in
incl
sti
add
add
add
mov
nop
jmp
add
add
inc
outsl
call
add
nop
jmp
loop
mov
test
es
add
add
div
nop
cld
nop
jmp
inc
add
aad
cmp
nop
cld
nop
jmp
add
scas
mov
cmp
jmp
stc
nop
es
add
cmpsb
cli
mov
call
call
dec
mov
nop
cld
nop
jmp
aam
xchg
add
mov
scas
enter
jb
add
in
jb
nop
cld
nop
jmp
into
add
movb
cmp
cld
nop
jmp
add
add
xchg
jle
stc
pop
nop
cld
nop
jmp
add
add
dec
push
stc
nop
es
sbb
add
add
jno
dec
jne
stc
nop
es
cmpsb
jo
cmpsl
adc
push
mov
xchg
ret
add
add
in
sub
test
nop
es
add
cli
add
jae
movswl
stc
nop
es
daa
mov
add
push
or
nop
cld
nop
jmp
dec
lds
add
test
push
stc
nop
es
loop
add
dec
in
movb
mov
stc
nop
es
add
mov
pop
and
push
mov
xchg
ret
jle
add
into
pop
pop
push
mov
xchg
ret
loop
mov
add
cld
nop
jmp
add
add
rclb
incl
movb
das
add
push
add
mov
mov
xor
stc
nop
es
fdiv
xchg
add
in
dec
or
mov
add
nop
es
cs
add
mov
stc
nop
es
aad
add
xor
add
cld
nop
jmp
or
or
add
nop
jmp
dec
add
add
cli
aad
into
cwtl
mov
nop
cld
nop
jmp
ret
fstpt
es
jno
enter
mov
add
and
stc
nop
es
xor
add
repnz
mov
stc
nop
es
add
ret
jne
stc
nop
es
add
nop
es
fadds
add
add
stc
nop
es
scas
add
or
add
andl
jb
xchg
add
mov
push
repnz
mov
es
add
dec
add
test
nop
cld
nop
jmp
add
pop
stc
nop
es
dec
dec
ret
sbb
inc
popf
pusha
stc
nop
es
mov
add
das
mov
les
and
add
add
add
add
int
adc
idiv
decl
loop
fadds
fstl
nop
es
add
add
fld
arpl
lods
mov
stc
nop
es
xchg
add
lret
or
mov
stc
nop
es
add
inc
add
mov
push
mov
xchg
ret
push
add
add
add
add
nop
es
add
es
call
cli
decl
xchg
add
pop
jge
stc
nop
es
add
cli
inc
add
add
push
popf
je
nop
cld
nop
jmp
add
add
lock
jmp
stc
nop
es
add
lret
sub
outsl
testb
cmp
ret
aad
add
add
push
leave
stc
nop
es
xchg
add
hlt
xchg
add
nop
es
add
loop
outsl
jne
nop
cld
nop
jmp
add
stc
nop
es
sub
call
fldl2e
lea
nop
cld
nop
jmp
add
add
add
fiadds
dec
cmp
nop
es
xchg
xchg
add
mov
push
mov
xchg
ret
loop
sbb
fsubs
dec
sub
das
or
xchg
ret
push
or
inc
std
add
stc
nop
es
inc
add
ret
add
inc
add
cmp
dec
add
nop
es
ret
mov
jne
stc
nop
es
outsl
sti
in
mov
stc
nop
es
loop
add
sbb
popl
nop
cld
nop
jmp
add
add
add
jp
stc
nop
es
add
add
cmp
add
nop
es
add
add
scas
add
push
sub
nop
cld
nop
jmp
push
add
mov
push
mov
xchg
ret
add
adc
push
mov
push
add
add
fidivrs
js
and
xor
xlat
cli
or
jne
mov
or
mov
movb
add
add
or
push
add
push
pop
dec
push
iret
fcoml
pop
xchg
add
push
pushf
dec
cmp
imul
pop
bswap
dec
mov
ljmp
mov
lods
mov
cmp
add
movb
push
add
mov
adc
out
add
lods
jo
fimuls
nop
jns
sub
lods
call
test
out
lea
add
sub
negl
push
dec
inc
ja
sbb
or
fnstcw
adc
test
jmp
add
mov
mov
fldcw
and
sahf
mov
mov
jns
add
pop
fstp
mov
fstps
lcall
mov
fnstsw
and
and
push
ja
out
sbb
aaa
push
cld
push
sbb
xor
aas
mov
icebp
inc
and
adc
outsb
gs
sub
jns
movb
repnz
cmp
jge
ljmp
add
js
nop
movsl
pop
sti
add
push
dec
xchg
lahf
or
addb
lea
mov
push
xchg
fcompl
and
inc
add
add
pop
movsl
adc
dec
addb
mov
and
cs
mov
add
add
clc
seta
xchg
xor
jb
cmpsl
jnp
add
or
loop
lret
add
or
mov
dec
sub
aas
add
into
push
cld
ret
fs
pop
mov
popa
mov
mov
xchg
dec
inc
imul
sub
push
loopne
nop
mov
nop
daa
mov
sub
cmp
pop
hlt
pop
xchg
dec
dec
mov
movb
add
mov
je
xchg
xor
jnp
dec
dec
sbb
add
mov
int3
push
add
mov
xor
or
loopne
push
jnp
or
cld
aad
jmp
sub
rolb
add
or
leave
dec
xchg
sti
loop
sub
xor
cmp
xchg
or
jge
xchg
adcl
fnstsw
mov
stc
dec
xlat
cltd
into
cmpsl
inc
add
xchg
cs
js
mov
xchg
xchg
das
mov
js
stos
cli
lea
cltd
pop
dec
repz
popf
popf
xchg
arpl
sbb
jle
mov
je
cmp
and
arpl
scas
pop
divb
aas
push
xchg
scas
hlt
outsl
fiaddl
mov
push
repz
mov
add
repz
sub
out
fs
dec
dec
in
inc
mov
mov
addb
repz
or
rolb
push
mov
inc
add
add
jl
mov
jne
add
ss
mov
and
lock
imul
rolb
pop
mov
add
es
add
dec
ljmp
mov
mov
inc
add
popf
pop
aas
movsl
jmp
sbb
js
inc
add
scas
mov
cld
xor
les
mov
mov
out
out
push
insl
adc
adc
movb
push
test
push
cmp
mov
outsl
ds
jnp
insb
push
xchg
xchg
sbb
mov
push
inc
rolb
xor
add
dec
movsb
mov
or
or
mov
rorl
lret
xchg
and
xchg
mov
push
push
mov
pushl
repz
jb
push
imul
hlt
mov
or
add
mov
pop
loop
xchg
adc
lahf
pop
scas
pusha
add
xlat
lret
hlt
jne
lcall
add
cli
in
sbb
stc
lahf
pop
inc
repz
nop
fiadds
sub
mov
cmp
inc
sub
int3
outsb
fs
pop
add
jge
xchg
jo
cmp
xchg
sub
ljmp
sub
add
insl
outsb
cmp
xor
mov
mov
xor
add
ds
adc
push
push
add
sbb
push
xor
add
stos
cld
stos
lock
sbb
add
movb
loope
jb
aas
movb
pop
inc
sub
adc
ljmp
repnz
mov
and
jno
mov
mov
add
push
add
cs
mov
or
sub
into
or
jl
jmp
push
out
xchg
mull
and
and
in
adc
fcoml
iret
cmp
xchg
mov
sti
or
das
ja
cmc
repnz
fcompl
bound
inc
add
ret
dec
cmp
inc
add
jae
js
inc
sbb
jns
mov
test
or
in
push
jns
out
adc
add
scas
cmp
or
mov
les
int
push
mov
incl
add
loop
xlat
add
dec
pop
jge
outsl
and
add
add
xchg
test
rol
sbb
sub
mov
cltd
dec
int3
sub
and
int
les
pinsrw
mov
mov
pop
icebp
mov
add
pop
add
xor
mov
in
push
and
flds
pop
popf
mov
mov
rcrb
bound
sahf
add
cwtl
adc
imul
aam
imul
enter
je
or
andl
or
xlat
out
insl
daa
jo
outsb
cmp
xchg
jle
nop
arpl
rcrl
pop
sub
add
and
and
push
inc
stos
or
push
lret
aas
sub
das
sbb
pusha
add
fiaddl
mov
add
test
push
rolb
mov
lods
insl
jl
push
addb
xchg
sahf
jecxz
addr16
test
sbb
imul
leave
movb
or
push
or
data16
pop
jge
mov
inc
stc
lock
jl
add
addb
xchg
ja
push
inc
add
or
ficoml
sti
outsb
pop
stos
cmp
loopne
adc
add
jg
outsl
jp
in
pop
rcll
cmp
mov
or
add
addb
dec
pop
mov
rcrb
sub
mov
negb
rolb
mov
icebp
mov
sbbl
pop
mov
loope
dec
pop
mov
data16
pusha
add
xlat
inc
add
ja
ljmp
mov
int
aam
mov
xchg
mov
cwtl
pop
decb
out
dec
jp
add
lods
aam
cmp
adc
xchg
add
adc
pop
mov
mov
movsb
dec
fldenv
ret
jb
inc
add
and
push
sarb
lcall
call
lock
add
ss
adc
subl
add
sub
xchg
sub
add
cmp
and
rcrb
push
push
test
pop
cmpsl
pushf
jl
inc
add
sbb
mov
mov
push
pop
loopne
movsb
loopne
mov
pop
mov
call
pop
int3
pop
in
add
dec
mov
cmp
xor
lock
aam
fisttpll
fistl
add
scas
bound
lret
call
xchg
fnsave
dec
addb
add
adc
test
mov
loopne
xor
mov
add
inc
mov
rclb
or
inc
add
jmp
in
inc
add
xchg
mov
hlt
cmp
sub
pop
sti
xchg
pop
mov
mov
jns
gs
pop
dec
call
idivb
push
jcxz
scas
ret
addb
sbb
sbb
aad
add
jle
mov
loop
mov
lcall
adc
in
xchg
sub
rolb
imul
addb
push
fisttpll
add
andl
loopne
push
xchg
xchg
cmp
outsb
dec
rcr
ret
sub
push
aad
mov
cmp
add
cmp
pop
je
gs
fsqrt
pop
lods
adc
cs
and
daa
mov
repnz
dec
fcmovnb
pop
movsl
out
fsubs
fldenv
rolb
pop
dec
movsl
shrl
pop
pop
adc
loope
out
mov
shlb
lods
nop
inc
xchg
fdivs
movsl
icebp
sub
into
roll
xor
sbb
push
push
movsb
xor
jo
add
dec
shll
stc
jg
mov
push
xchg
pop
cmp
lahf
mov
fisubrs
ss
add
and
dec
test
fstpl
fcomps
ret
jno
repz
push
fdivrp
stos
push
mov
mov
leave
adc
sub
addr16
xchg
dec
lods
lcall
outsl
test
addb
jg
fwait
gs
lret
sub
icebp
lds
repnz
enter
add
ja
ljmp
push
add
mov
stc
pop
xor
or
adc
call
mov
movsl
mov
ss
xor
mov
int
add
inc
add
xchg
mul
cmpsl
pushf
and
xchg
or
jl
shll
add
nop
and
mov
jl
stos
hlt
dec
movsb
add
and
mov
xor
in
dec
into
sub
sub
shr
iret
ljmp
cs
je
jno
add
inc
add
adc
add
ljmp
or
xchg
iret
mov
cmp
pop
or
push
shll
jo
xchg
loopne
loope
jns
lods
lods
xlat
jae
test
decl
aad
dec
shrl
out
jno
rolb
mov
jg
push
add
int3
and
sbb
fs
addb
xlat
sub
cmp
add
loope
fisttpl
xor
sub
hlt
movsl
jbe
lds
addb
fadds
lret
frstor
aaa
mov
add
mov
fs
sti
xchg
cli
enter
add
add
test
adc
pusha
add
in
mov
pop
out
sbb
mov
add
lret
xor
dec
pop
call
jb
movsl
or
call
mov
push
or
pop
aaa
mov
push
push
fldl
xchg
lods
mov
xor
stos
push
stos
push
cmp
movb
sbb
mov
add
aaa
add
jge
add
push
inc
add
addb
mov
in
mov
xchg
sbb
cmpsl
push
je
dec
inc
enter
jne
scas
mov
lods
mov
ljmp
or
inc
or
movsb
xor
dec
addl
cmc
loope
push
mov
or
in
enter
in
cmc
outsb
out
pop
dec
or
outsl
mov
adcl
cmp
addr16
adc
movsl
data16
add
mov
add
cmpsl
fsubrs
in
out
sbb
mov
repz
inc
mov
leave
and
adc
les
les
fwait
mov
hlt
push
lret
adc
mov
cs
jmp
jo
push
insb
push
ja
jl
aas
dec
push
outsl
xor
mov
sub
mov
lods
adc
sub
push
into
jp
popf
int3
loopne
cli
ljmp
cmp
mov
jl
add
leave
push
add
roll
loop
xor
mov
add
cli
ljmp
push
pop
negb
out
js
mov
mov
aas
jno
sbbl
xor
jns
mov
xor
push
lea
lods
dec
push
out
loop
mov
ret
test
in
dec
fisttps
andl
iret
jnp
jno
inc
inc
add
and
shlb
loope
sbb
inc
add
cmp
nop
es
dec
lahf
fwait
mov
scas
pop
in
and
xchg
dec
or
test
test
pop
sbb
in
dec
and
outsb
idiv
dec
xor
gs
add
sahf
pop
add
adc
inc
cmp
pop
cmpsb
stc
insb
inc
inc
add
ret
push
add
aad
das
pop
movsl
out
xchg
out
cmp
xchg
imul
inc
sbb
leave
call
loope
mov
jmp
nop
lods
jge
mov
add
fstps
int
add
xchg
sub
fs
add
cli
fs
xchg
mov
mov
outsl
shr
pop
fstpl
xchg
fidivs
or
add
adc
leave
dec
test
movsb
mov
dec
int3
add
dec
push
aaa
push
xchg
movsb
jp
pop
jbe
push
xor
jmp
add
adc
addb
jnp
sub
mov
dec
pop
lock
dec
cmp
add
add
pushf
mov
pop
iret
outsb
mov
add
leave
jge
lds
dec
push
jle
lock
mov
add
adc
mov
lahf
push
fstpt
add
daa
insb
xchg
das
pushf
cmp
shll
adc
mov
add
lds
and
xchg
jae
pop
jle
sub
dec
inc
insl
inc
dec
push
cmp
notl
lcall
jmp
leave
jno
mov
inc
cmpsl
mov
push
shl
lea
xor
mov
pop
xor
add
add
stos
xchg
out
dec
xor
jl
aam
rcrl
ret
xor
pushf
pushf
jmp
fists
fs
add
add
jl
and
xor
es
add
daa
decl
inc
add
jmp
push
mov
push
pop
stos
das
mov
pop
jge
addb
imul
add
inc
add
add
test
xor
mov
scas
int3
sbb
pop
jl
bound
addr16
xchg
mov
dec
jbe
mov
adc
pop
jno
out
sbb
outsl
addr16
imull
lcall
adc
sub
frstor
add
mov
add
adc
pop
or
das
icebp
mov
addr16
add
dec
jmp
movsb
cmc
add
jb
repnz
in
sbb
add
cli
aam
lock
push
xchg
out
pop
dec
lds
add
xchg
pop
push
test
repnz
int
stos
aam
push
lcall
mov
add
stos
pop
fcompl
add
jno
mov
add
fs
incb
dec
mov
add
push
and
and
xchg
mov
sbb
lret
in
loopne
outsb
clc
add
sub
cwtl
rolb
add
lahf
int
jecxz
push
ds
insl
sub
fs
xlat
or
sub
int
in
add
or
mov
fprem
arpl
jno
add
add
jecxz
out
ds
stos
daa
int3
pop
inc
imul
inc
add
in
xor
cli
push
test
jecxz
lods
xchg
inc
add
add
push
cmp
add
ret
rclb
test
sbb
ret
imul
add
or
scas
push
movb
mov
mov
jnp
add
cli
aaa
js
loope
loopne
mov
cmpsl
pop
rcll
sar
lods
dec
popf
fldt
pushl
pop
sub
and
push
dec
dec
mov
iret
fwait
push
add
add
into
mov
jg
ret
pop
arpl
dec
or
and
mov
mov
lea
xchg
jge
out
sti
das
movb
cmp
add
das
jae
or
sub
fsubs
in
and
mov
in
and
pop
sbb
vphadduwq
xchg
loopne
mov
loop
int3
or
mov
adc
insl
or
mov
fdivl
out
sarl
mov
dec
ljmp
push
inc
add
sub
jo
add
cmp
mov
sub
dec
sub
pusha
add
daa
outsb
fcmovb
push
add
jne
add
movsl
ret
or
lds
movsb
ljmp
iret
mov
inc
dec
out
test
pmuludq
add
ficoml
repz
int
push
and
push
test
cmp
sbb
xor
sub
repz
add
push
mov
mov
int3
mov
lods
pushl
imul
add
in
testb
fdiv
notl
sub
cltd
ret
addb
mov
or
mov
and
daa
inc
add
call
and
stos
out
cmp
rol
push
scas
sub
mov
cld
cld
inc
add
mov
add
jo
fcoml
cltd
cmpsb
in
arpl
add
icebp
fbstp
imul
add
push
roll
add
adc
loope
dec
pop
stc
dec
sbb
add
add
mov
aad
or
es
inc
into
lods
cltd
nop
out
bound
xchg
sbb
dec
pop
sbb
pop
or
xchg
adc
int3
cmp
lods
fisttpl
std
lock
push
mov
add
cmp
mov
add
add
jge
dec
xchg
dec
inc
add
inc
xchg
int3
mov
stos
shlb
sub
xor
mov
mov
pop
jle
out
insb
clc
cld
pop
mov
add
dec
loopne
out
lods
in
lock
out
xor
xchg
xor
mov
orl
dec
or
add
sub
mov
cmp
add
rorl
mov
or
xchg
scas
pop
sbb
add
nop
adc
inc
repnz
or
fnstcw
lds
xchg
mul
addb
dec
jge
xchg
adc
jno
fnsave
sub
data16
pop
mov
fwait
cmp
pop
mov
jp
lret
mov
add
insl
sub
add
leave
test
lock
cwtl
scas
insb
lea
xlat
cs
add
add
and
movsl
sbb
or
pop
arpl
ss
sbb
int
mov
mov
add
or
inc
add
lcall
loop
mov
mov
sti
jmp
add
pop
lcall
mov
movsl
aas
cwtl
sub
or
mov
in
int
xchg
mov
addr16
in
dec
mov
mov
dec
push
add
pop
nop
pusha
add
jbe
inc
add
fidivs
xor
xor
stc
add
inc
roll
jne
aas
push
xchg
add
hlt
lret
pusha
add
mov
mov
out
bound
inc
add
xchg
cmp
jae
mov
jae
add
jb
mov
jb
sarb
lcall
add
and
add
daa
ljmp
mov
xor
es
adc
sub
dec
and
and
add
sub
push
or
xchg
mov
insl
sbb
xchg
cltd
out
in
cmp
leave
add
xchg
pushf
fwait
inc
add
inc
add
dec
mov
sbb
mov
out
sahf
lret
push
aaa
sahf
adc
int3
cltd
jne
pusha
add
dec
jne
xor
fs
push
mov
in
scas
mov
mov
dec
push
ja
in
jl
add
add
adc
ss
add
mov
mov
imul
cmp
xlat
fsubrl
sub
mov
popf
nop
mov
cmpsb
xchg
inc
add
adc
addr16
jbe
xchg
adc
xor
clc
push
sub
add
scas
sbb
cmp
gs
rolb
sbb
dec
inc
add
addb
sti
mov
dec
sti
icebp
sbb
sub
add
popf
sbb
mov
dec
cmp
mov
inc
add
add
mov
fiaddl
addr16
nop
cli
out
ljmp
or
pop
aad
add
test
push
test
enter
ja
mov
jne
dec
mov
xorl
mov
add
add
or
out
out
andl
jnp
fdivrs
jmp
jno
add
aad
int3
rorl
inc
cmp
arpl
mov
and
xor
cmp
mov
sub
push
lcall
jo
add
cmp
or
add
lea
dec
mov
sub
outsl
sub
cld
inc
add
clc
sti
add
ret
jp
mov
addr16
sub
sub
enter
popa
into
sub
mov
push
add
dec
xor
into
mov
ljmp
jl
es
shl
mov
cmp
aam
iret
ja
xchg
adc
fwait
push
add
jg
jnp
mov
jmp
je
sbb
data16
dec
cld
fsubrl
cwtl
mov
cli
std
movsl
jnp
in
lods
push
push
cmp
imul
in
jne
and
xor
mov
mov
pop
xchg
mov
sahf
ret
mov
add
addr16
mov
adc
fldcw
mov
lock
inc
add
loop
into
mov
lock
push
test
mov
scas
flds
inc
push
les
mov
addb
or
inc
add
aam
hlt
mov
inc
add
jne
outsl
lcall
repnz
sub
add
jns
scas
ja
aam
ret
jnp
push
les
mov
xchg
mov
shr
lcall
pusha
add
cwtl
fwait
inc
mov
dec
push
ret
jmp
mov
js
xchg
push
xchg
xor
shrl
faddl
insl
mov
mov
lods
les
xor
push
lahf
sub
divb
out
aad
aas
mov
insb
add
xor
and
js
add
add
add
sbb
or
add
add
adc
add
repz
imul
in
in
loopne
in
xchg
negl
mov
mov
and
add
mov
dec
push
jnp
push
testb
iret
lcall
mov
rorb
sub
data16
add
insl
fmull
pop
dec
cmpsl
out
adc
push
jnp
xor
add
sub
mov
in
ljmp
pop
cmp
mov
mov
les
jnp
lret
leave
int3
pop
xor
add
sub
inc
jns
testb
jbe
shl
ja
adc
imul
mov
adc
data16
scas
xchg
in
xchg
mov
xchg
push
sarl
mov
leave
jmp
adc
cmpsl
and
in
nop/reserved
xor
repz
mov
stos
dec
add
sbb
inc
clc
fwait
sbb
cmpsb
push
mov
or
xchg
aaa
ja
mov
popf
psllw
mov
mov
pusha
add
inc
insl
or
dec
push
add
pop
insl
pusha
add
push
jmp
les
jmp
orl
sub
mov
imul
or
push
add
xor
xchg
testb
test
mov
scas
xor
xor
pop
mov
mov
repnz
adc
inc
mov
cmp
stc
dec
addb
and
rol
outsb
mov
ret
test
movb
mov
jp
add
mov
add
jno
jle
je
fcmovnb
mov
mov
push
mov
sub
stc
pop
xlat
inc
xor
in
push
ret
jae
mov
ja
xchg
imul
test
lret
hlt
cmp
ret
or
inc
add
test
lahf
mov
mov
add
je
ffree
add
pushf
mov
ficoms
mov
xchg
ret
cs
xchg
or
mov
or
push
lods
adc
lret
mov
lret
adc
mov
push
xchg
das
mov
jg
pop
sub
jno
mov
xor
inc
add
xchg
pop
leave
rcrl
add
pop
xchg
add
fsubs
int
xchg
sub
xchg
sub
in
loopne
lds
out
push
fwait
add
lock
int
add
das
jg
std
mov
test
jg
xchg
ret
add
addb
sub
cmp
repnz
cmp
aam
inc
add
add
cmp
inc
add
add
dec
das
stos
sbb
mov
jmp
aad
lcall
fsts
jno
addl
mov
and
add
and
lret
dec
shll
add
dec
jns
mov
sbb
sbb
aas
jne
add
pop
add
scas
mov
ss
add
addl
add
add
rolb
sub
xchg
fs
pop
and
add
bound
inc
bound
xchg
repnz
add
out
aaa
mov
sub
mov
push
movsl
sti
push
xor
dec
stc
mov
jecxz
xchg
outsl
mov
sub
sub
sbb
adc
subl
xor
dec
insb
lea
mov
cmp
lret
dec
pop
inc
dec
aas
and
fsubrl
xchg
jnp
out
xchg
add
cltd
movlps
ret
xchg
or
mov
or
cmp
movl
aaa
push
in
in
cmpsl
hlt
out
jo
cwtl
push
cmp
in
out
or
xor
lods
aad
inc
add
sub
addr16
adc
fnstcw
hlt
clc
pop
cmp
dec
movb
add
cmp
inc
xor
pop
test
sahf
loope
jb
adc
jne
fstps
js
pop
notb
daa
adc
ret
in
mov
cmp
and
ss
and
pop
and
cwtl
sbb
cs
mov
aam
adc
add
pop
movsb
jo
inc
cmc
or
adc
xor
sbb
jle
add
add
movb
jnp
hlt
les
cmp
out
cmp
dec
sbb
push
stc
pop
mov
or
add
dec
test
rorb
es
divl
push
insl
lock
lds
jnp
mov
dec
cmp
fsubr
shl
movb
test
mov
and
cltd
out
mov
add
bound
dec
xor
rolb
idivl
movsb
nop
mov
mov
scas
jbe
dec
mov
dec
lock
add
and
movl
cmp
cmp
lea
enter
dec
loope
mov
out
cmp
je
loope
add
outsl
mov
mov
rolb
inc
cmp
mov
hlt
jb
and
cs
sbb
mov
jecxz
jmp
adc
mov
push
je
add
xor
inc
xor
cmp
cwtl
gs
adc
add
fwait
and
addl
rcll
mov
mov
add
js
ret
in
imull
mov
and
lods
mov
mov
fcmovnb
add
and
dec
pop
sub
or
hlt
jb
dec
pop
jecxz
rolb
cltd
shlb
les
inc
xor
ret
push
lds
ret
rsm
sbb
sbb
xor
mov
and
lcall
test
divb
fsubs
icebp
xor
imul
add
mov
adc
fcoms
pop
xchg
cmp
xchg
lret
ljmp
inc
sbb
in
out
dec
jnp
leave
lods
ret
test
adc
out
add
in
clc
cwtl
mov
repnz
scas
inc
lret
insb
loope
ss
lret
xlat
dec
xchg
pop
lods
lods
shl
repz
add
sarb
sbb
or
pop
filds
outsb
cs
pusha
add
jno
lds
insl
mov
bound
xor
pop
mov
sub
arpl
inc
add
add
scas
lahf
pop
dec
lods
addr16
popf
xorl
sbb
add
add
push
and
add
cli
or
idivb
test
jge
mov
add
test
ret
sub
mov
mov
push
rcrl
mov
add
hlt
out
cltd
inc
add
cmc
cmp
dec
push
je
addb
xor
gs
loope
int
add
pushl
cmp
aam
add
push
rcll
add
add
push
add
add
xor
sti
out
xor
sbb
jb
int
push
jmp
mov
movsb
inc
fnsave
jnp
add
and
outsb
pop
jmp
pop
inc
add
and
fidivrl
mov
xor
lret
mov
pop
xchg
sahf
mov
push
rolb
inc
adc
aam
push
int
test
js
mov
int
insl
ficomps
push
add
xchg
roll
fsubrl
lods
push
stos
repnz
or
push
fstps
fistps
pop
pop
int3
dec
jge
add
fwait
sahf
out
jge
xchg
adc
aam
add
insl
mov
add
mov
jge
dec
fwait
imul
adc
testb
rcrb
rolb
rolb
add
xchg
or
jb
jl
test
add
lds
subl
sbb
aas
sahf
in
push
fidivrl
dec
enter
nop
fcoml
add
jg
add
sti
rolb
aam
flds
sbb
xor
add
adc
inc
add
fwait
pop
cmp
push
divb
mov
aam
ret
cmp
call
add
aaa
push
addb
loope
xchg
dec
fidivl
imul
xchg
xchg
or
fwait
data16
fs
inc
add
in
into
movsb
cmpsb
fwait
and
add
popf
leave
xchg
mov
xorl
clc
leave
loope
ljmp
dec
mov
mov
test
iret
addb
loopne
push
push
and
and
inc
add
xchg
add
add
pop
inc
add
mov
movsl
mov
push
mov
inc
jmp
push
jecxz
mov
shrl
mov
aas
nop
ss
pop
addb
daa
mov
xchg
sub
rclb
les
adc
loopne
cs
pusha
add
mov
orl
add
and
icebp
push
out
xor
dec
jne
pop
in
dec
mov
jns
int3
repnz
flds
gs
leave
inc
add
dec
mov
push
and
sahf
lret
jp
lret
mov
test
fidivl
jp
sti
stos
sbb
add
shll
fs
push
sbb
fldenv
push
ret
addb
icebp
ja
outsb
fidivrs
out
es
sub
out
stos
xor
mov
mov
pop
pop
xor
jl
mov
push
add
js
jmp
inc
mov
add
or
mov
dec
in
in
dec
mov
add
jmp
inc
add
sbb
arpl
addb
inc
shl
push
mov
mov
mov
sbb
stos
pusha
add
adc
idiv
xor
jge
in
out
call
imul
imul
mov
mov
mov
adc
or
lea
add
sbb
fisubl
repz
loope
add
ljmp
inc
push
adc
jno
xor
hlt
sub
mov
mov
jae
xchg
jbe
jecxz
pushf
xorl
mov
gs
sbb
andl
cmpsb
mov
cpuid
cltd
inc
add
fbld
jecxz
mov
dec
push
and
pop
xlat
cmp
mov
push
fldcw
cmp
cltd
pop
add
mov
pop
int3
test
enter
mov
jecxz
and
mov
pop
adc
mov
add
mov
jge
imul
addb
out
data16
repz
mov
add
add
xchg
pop
es
outsl
cmp
fildl
mov
mov
add
xchg
out
in
loop
adc
add
mov
mov
push
in
dec
jp
cmp
jg
in
out
ja
mov
jae
insl
outsb
and
popa
scas
in
arpl
add
add
add
add
jle
jo
mov
xor
inc
add
rcrl
hlt
push
adc
xchg
lock
and
aam
add
test
sbb
call
adc
mov
mov
and
push
mov
lcall
movsl
mov
lcall
loopne
inc
adc
popf
hlt
cmp
mov
sub
cmp
fiaddl
cmpsl
mov
adc
mov
js
xchg
outsb
dec
jmp
lret
jl
jns
add
cmp
ljmp
aad
imul
fmul
les
add
ret
add
jno
lret
push
and
add
xlat
sbb
xor
out
jp
lahf
repnz
add
inc
add
jae
fs
add
or
push
adc
out
out
sarl
push
add
dec
inc
add
add
inc
add
pushf
adc
dec
shr
adc
ljmp
jae
pop
jno
leave
mov
mov
pushf
mov
les
addr16
add
insl
sub
add
jo
data16
cwtl
jg
xor
and
sub
mov
imul
add
lahf
push
dec
fcomi
and
loope
jae
inc
add
stos
mov
addr16
pop
test
ficomps
mov
adc
lock
pop
xchg
xchg
imul
pop
xchg
sbb
adc
mul
jl
call
aaa
pop
fsubrl
lahf
dec
fadds
mov
mov
mov
jns
push
cmpl
ja
cmp
in
lret
xor
je
ds
cmp
add
sub
mov
andl
cmpsl
sub
data16
gs
and
fildl
cmp
mov
rolb
adc
pushf
in
ficoms
or
dec
js
pop
ror
in
ds
leave
cmp
xchg
cmp
jg
inc
add
or
dec
ljmp
inc
add
jns
add
aaa
mov
sub
sbb
dec
push
mov
add
stc
pop
lock
loope
jp
mov
and
push
jbe
and
xor
add
dec
daa
push
pushf
xor
cmp
movl
xor
ja
icebp
and
jb
or
test
stos
scas
aad
add
roll
cli
jmp
addb
dec
pusha
add
add
sub
or
mov
loop
ljmp
mov
stos
popf
or
cmpsb
cmp
loopne
pop
bnd
adc
loope
dec
insl
sub
cmp
and
adc
add
and
sub
inc
fucomi
pop
add
std
ja
ss
popa
or
push
fwait
cltd
dec
mov
sbb
ret
imul
shrb
js
or
in
mov
cltd
mov
mov
lret
ss
jne
add
ficomps
pop
jg
adc
aas
out
repnz
add
arpl
xchg
mov
lcall
add
push
adc
cli
push
inc
push
aas
loop
jge
sub
xchg
mov
or
loop
pushf
rorl
and
loop
jecxz
add
sub
lret
jo
stos
cmpsb
clc
movb
and
ljmp
dec
daa
movsl
movsb
shrl
jp
movsb
push
lods
imul
int3
mov
incb
jmp
pop
pusha
add
bnd
cmp
sti
pop
and
jne
mov
xor
push
mov
mov
add
lods
insb
mov
cld
mov
xchg
mov
fmul
js
jmp
mov
xor
xor
inc
add
xor
fmull
cmp
cmp
push
rorl
ret
jne
push
add
dec
lret
pushf
and
cmp
pop
add
loop
push
inc
add
mov
addb
add
adc
insl
mov
cmp
push
xor
and
fsubs
in
dec
in
add
inc
jmp
mov
inc
add
xchg
adc
add
lahf
mov
add
add
insb
imul
dec
mov
pop
pop
jb
addb
jns
and
adc
loopne
add
outsl
lea
repnz
mov
hlt
mov
or
fs
aad
xchg
stos
jg
lahf
cwtl
insl
mov
cwtl
cmp
negb
sub
ret
push
dec
xor
les
fs
add
mov
dec
fsubrl
movsl
mov
add
cmp
js
sub
mov
int3
or
jl
movl
mov
xchg
jne
xor
test
ja
fisttps
bound
lret
sub
pop
push
jb
add
push
movb
cmp
add
xchg
jmp
and
mov
je
cmp
mov
mov
je
add
loopne
cmpsl
shlb
and
cwtl
pop
cmp
xchg
in
iret
pop
jl
test
jns
push
test
mov
in
stos
sbb
add
popa
inc
jge
jl
pop
mov
mov
test
sbb
mov
sub
cwtl
inc
add
imul
xor
inc
out
jmp
mov
add
aad
fnstenv
add
rcll
fidivrs
add
scas
ja
adc
cmpsl
mov
add
aam
lret
xor
sbb
add
mov
sub
ja
mov
jno
imul
add
ljmp
add
mov
xor
outsb
jns
cmp
aad
addb
mov
add
rolb
repz
add
bound
jbe
sbb
xchg
jmp
or
inc
add
insl
imul
xor
adc
add
ficoml
outsb
pop
jg
add
add
int3
dec
in
bnd
movl
adc
and
cmpsb
out
xlat
in
aam
pop
push
mov
loopne
loope
out
mov
mov
dec
cs
cltd
mov
bswap
sub
jns,pn
pushf
clc
je
and
pop
lahf
out
es
scas
add
mov
pop
test
mov
mov
xchg
das
lret
ds
insb
je
sbb
scas
cmp
lods
xchg
mov
jnp
xchg
idivb
push
leave
inc
add
aas
mov
cli
add
in
rolb
sbb
push
out
ret
inc
add
fcomp
jmp
add
lcall
xchg
or
insb
fxch
insl
iret
cld
aaa
sub
pop
sbb
push
jns
add
xchg
jbe
jecxz
mov
pop
rorb
movsb
loop
jbe
lcall
movsb
addb
vpaddb
sub
call
mov
add
in
hlt
mov
or
fcomps
sub
stos
mov
jnp
out
mov
popf
xchg
repz
add
gs
into
sbb
bound
aas
and
inc
dec
sarl
out
cli
add
add
mov
imul
add
add
cwtl
mov
scas
data16
sub
adc
out
and
repz
mov
jecxz
dec
lret
test
add
xchg
daa
outsl
and
xchg
loope
cmp
xacquire
insb
cmp
add
fsubrs
out
add
jg
pusha
add
and
add
and
adc
add
mov
inc
add
inc
sbb
movb
ret
cwtl
or
gs
adc
imul
sbb
xchg
sbb
in
es
mov
jnp
gs
daa
es
push
xor
push
arpl
dec
dec
fadd
add
repnz
test
dec
jo
daa
push
test
cltd
or
jecxz
jl
pop
test
sub
add
js
mov
js
sub
jle
ret
andl
pop
lds
repnz
cmp
ljmp
pop
icebp
push
push
sbb
adc
mov
add
lds
xor
mov
mov
imul
or
je
add
push
subl
xchg
inc
add
inc
add
adc
mov
mov
adc
sub
data16
sub
jno
aam
mov
mov
inc
add
cltd
mov
add
loop
mov
add
out
stc
mov
les
jp
loopne
jge
sbb
jg
add
xchg
pushf
push
sbb
jne
in
mov
into
addr16
jns
iret
push
cmc
mov
cmp
insb
mov
addb
sbb
fld1
lea
dec
inc
add
out
jbe
ret
mov
pop
jl
popf
xor
ds
push
dec
divl
push
xorl
insl
xchg
or
sbb
cmp
add
mov
dec
or
movb
rolb
fldt
mov
ljmp
stos
sarl
xchg
xor
add
push
imul
add
add
dec
mov
dec
mov
mov
ficomps
pushf
mov
cli
xor
shlb
clc
jge
enter
inc
add
mov
dec
mov
jecxz
cld
call
dec
add
daa
lret
inc
add
cs
bound
xrelease
xchg
es
jno
lea
dec
xchg
mov
arpl
mov
inc
xorl
push
push
push
loope
jl
sub
clc
int3
mov
test
mov
mov
movsb
push
add
lcall
daa
push
or
pop
idivl
mov
lods
jl
lods
xchg
jge
bound
ja
xlat
pop
bound
mov
pop
mov
mov
mov
push
outsb
adc
test
or
and
shrd
rclb
dec
xor
sub
and
pop
adc
pop
adc
sub
dec
out
mov
aas
arpl
adc
in
mov
push
jns
add
fdivrs
xlat
inc
add
sbb
pop
in
xor
xor
pop
repz
call
test
std
push
sub
mov
pop
popf
cmp
jne
sub
ss
fildl
add
es
add
xchg
push
clc
jnp
lcall
fiaddl
je
add
popf
mov
addr16
bound
inc
add
into
jne
outsl
mov
scas
pusha
add
and
mov
cmovbe
and
mov
push
mov
lock
and
adc
add
push
stos
popf
pushf
clc
in
jp
add
inc
add
lods
push
add
dec
stos
pop
jg
add
cltd
or
add
add
into
inc
add
jmp
shrl
insb
aam
cli
or
out
fbld
idivb
movsb
in
repnz
ljmp
cmp
sbb
push
push
mov
fs
inc
xchg
sti
fstpl
xor
pop
lods
pop
dec
mov
xor
push
add
xchg
stos
lds
repnz
xchg
adc
mov
mov
jp
inc
or
dec
xchg
fisttpll
push
inc
cmp
adc
pop
repnz
addr16
inc
mov
add
adc
push
push
xchg
gs
cmp
sbb
add
and
mov
cmp
jo
in
xor
fmull
sub
int
pop
outsl
in
stos
out
std
dec
iret
bound
mov
fnstcw
mov
cmc
xchg
lods
mov
outsb
cmp
mov
aam
ja
xchg
cltd
and
movsb
sub
or
pop
cmp
rolb
cmovp
add
mov
ret
or
pop
mov
jmp
xchg
mov
ja
push
or
hlt
arpl
sub
cli
sub
add
add
add
loop
xor
int3
push
addb
mov
or
loop
push
mov
pop
outsl
cmp
push
inc
addb
add
mov
cmp
pop
push
cwtl
fcomps
pop
jbe
pusha
add
jge
js
sbb
ss
aad
pop
adc
push
xchg
sub
pusha
add
or
call
mov
add
and
rolb
stos
sub
fmul
or
pop
or
int3
ret
jnp
call
movsl
xchg
popa
adc
outsb
sbb
js
insb
data16
push
sub
test
mov
insb
inc
add
int3
addb
adc
sub
inc
pushf
bound
lret
add
es
daa
stos
stos
add
fsubl
jmp
test
aaa
inc
aad
std
addr16
jge
lds
jmp
pop
pop
cmp
mov
jp
stos
mov
lea
pop
out
jnp
rorb
js
push
mov
enter
insb
sti
hlt
jae
push
call
pusha
add
ret
xchg
mov
push
mov
xchg
outsb
call
sbb
inc
add
pop
pop
fnstcw
mov
push
or
mov
and
sbb
add
pop
movb
out
repnz
and
leave
cmpsl
addb
add
dec
cld
and
test
pop
movb
xor
xchg
gs
sarl
ds
mov
addb
pop
pop
cmp
mov
lods
test
and
cwtl
out
jge
divl
cmp
sub
insl
rcll
pop
outsb
cmp
adc
imul
imul
pop
lcall
mov
out
pop
loop
and
adc
cmp
fcompl
mov
call
lret
sbb
jne
in
sub
pop
imul
sbb
inc
movsl
hlt
sahf
fdivrl
sbb
sub
xor
in
sbb
pop
jnp
arpl
push
imul
aam
ss
leave
inc
ret
jbe
adc
xor
xchg
pop
sub
and
icebp
aam
sbb
xor
cmp
add
add
outsb
fidivrs
rolb
inc
add
inc
dec
jae
adc
mov
loope
add
movsl
imul
in
cmp
arpl
add
jp
mov
dec
mov
out
adc
lcall
filds
add
jmp
mov
cmpsb
mov
mov
pop
pop
adc
ja
cltd
mov
in
jnp
mov
mov
dec
xor
cmpsl
pop
aam
push
adc
xchg
and
pushf
inc
xchg
les
xchg
les
shl
loope
sahf
gs
outsl
mov
xor
push
mov
push
mov
addb
inc
add
add
or
inc
add
ljmp
sub
mov
dec
sarl
fwait
or
ja
sbb
mov
in
and
add
mov
arpl
or
addb
dec
sbb
push
add
fadd
add
fsubs
or
add
inc
add
fadds
jnp
dec
loop
cmp
faddp
add
test
mov
stos
xchg
cs
call
mov
mov
pusha
add
push
mov
les
leave
movb
aam
test
je
movsb
xor
add
into
jno
push
lea
fdivs
movsb
sub
enter
mov
nop
repnz
movb
loope
jo
xchg
xchg
fs
jnp
rclb
mov
std
fwait
std
stc
sbb
test
adc
jo
dec
inc
pop
out
push
addb
or
inc
add
xchg
in
sub
in
ljmp
aas
inc
shrb
sbb
xchg
decb
xor
and
sti
xor
roll
cmp
sahf
mov
test
pop
xchg
cmp
lret
arpl
stos
push
shlb
mov
dec
rolb
inc
add
pop
lods
sub
mov
sbb
cltd
popf
sub
sbb
cmp
clc
xlat
fwait
push
add
mov
add
or
add
adc
mov
mov
aad
int3
out
mov
addb
insl
mov
dec
cmp
push
das
fldt
cwtl
lock
repnz
fstpl
xchg
cmpsl
rcrl
addb
cmp
dec
push
sbb
jmp
mov
push
xor
add
call
cs
mov
test
loopne
mov
ja
cmpsb
add
enter
xchg
ja
jnp
cmp
add
sbb
pop
aad
mov
jae
leave
mov
add
repz
mov
add
push
popa
lahf
push
add
adc
cli
or
push
lods
test
mov
and
jmp
mov
xor
aad
aas
cmovl
jmp
ljmp
inc
xor
push
add
aaa
sbbl
mov
inc
repnz
and
push
jns
leave
movsl
scas
xchg
mov
cmpsb
pop
mov
or
cwtl
xchg
push
add
mov
iret
xchg
lret
addl
out
lods
lock
rol
nop
jg
in
cmp
pop
fidivrs
nop
xor
addr16
sahf
scas
hlt
dec
vpshab
das
and
insb
lahf
adc
mov
lret
pusha
add
sbb
movsl
pop
mov
inc
xchg
bound
mov
sub
fcmovu
test
pop
out
lods
js
scas
pop
and
lcall
je
cs
or
dec
add
es
sbb
mov
in
mov
mov
test
cld
inc
add
dec
cwtl
sub
push
movsl
and
fisubl
repz
dec
aad
sarl
inc
outsl
es
push
into
testl
repnz
add
gs
or
aaa
out
negl
mov
adc
mov
das
lahf
in
movb
push
popf
out
insb
sbb
pop
or
fwait
mov
adc
cmp
ljmp
sbb
out
mov
inc
daa
mov
fstpl
inc
loopne
leave
pop
sub
inc
cmp
loope
sub
fcomip
test
into
iret
or
fwait
lods
xlat
xchg
push
loopne
test
mov
shlb
das
insl
imul
or
dec
shl
ret
outsl
ja
and
mov
push
or
call
lds
jge
dec
jb
jmp
mov
push
shlb
and
mov
imul
or
or
inc
add
sahf
insl
imul
lret
mov
add
ficompl
iret
lock
je
jg
cmp
dec
cmc
add
jae
lcall
and
mov
xor
insl
and
popf
pop
and
icebp
cmpsl
dec
aas
mov
mov
std
stos
sbb
testb
iret
ror
int
cmp
ja
inc
add
or
jb
add
pop
dec
dec
push
fs
add
movsb
push
inc
add
fnstsw
push
popa
mov
rclb
adc
add
jb
push
push
pop
push
dec
cmp
pop
lcall
inc
fwait
std
mov
pop
outsl
sarb
out
dec
rolb
ds
ja
add
loopne
add
arpl
jns
mov
je
mov
call
pop
addr16
add
fldcw
jle
ds
add
inc
sub
cmp
add
ret
arpl
movl
dec
shll
xchg
xchg
xor
add
pop
xchg
in
call
sti
jl
mov
addl
add
ljmp
iret
xchg
sahf
mov
xor
add
clc
stos
push
add
subl
cltd
cld
loopne
lods
inc
add
popa
mov
sahf
sbb
jge
add
pop
and
lds
sbb
je
aaa
aam
cwtl
neg
sub
add
fsubr
push
add
cld
xor
push
negb
dec
mov
adc
cld
push
rcll
cwtl
dec
mov
ljmp
push
ja
dec
in
out
test
mov
ret
cmpsl
stc
lret
insb
or
out
dec
mov
clc
rorb
add
fcomps
stos
inc
xlat
int
jno
add
nop
mov
add
stc
cld
mov
add
cmp
icebp
sub
add
movb
mov
and
lds
loopne
imul
mov
xchg
inc
add
add
xor
push
jl
imul
add
lea
add
push
push
adc
lcall
add
and
cmp
jp
sar
jns
loopne
add
jnp
notl
fisubs
stos
pop
add
lcall
in
cmp
adc
pop
dec
movb
jae
xchg
and
mov
add
jl
aad
push
xchg
les
mov
add
rolb
sub
mov
jnp
enter
push
xchg
and
cmpsl
push
mov
fst
xchg
sub
inc
sti
fadds
outsb
jbe
mov
push
fisttps
add
sbb
imul
aas
lds
jne
scas
je
or
ficoms
pop
in
aaa
jae
jp
mov
adc
fsts
or
aas
inc
lds
int
les
sub
imul
add
cwtl
imul
or
pop
mov
cld
inc
add
idiv
outsb
sub
clc
adc
pusha
add
sub
sub
int
push
lret
addb
pusha
add
add
and
mov
ret
ss
jns
adc
sbb
int3
es
pop
orl
imul
repnz
pop
test
xchg
push
lcall
shll
cltd
add
xchg
sub
cmpsb
rolb
xchg
mov
push
xchg
stc
lcall
or
jne
add
dec
pop
cli
and
lcall
xor
addb
ret
add
add
mov
arpl
js
jb
inc
add
dec
push
das
addb
loopne
cmp
pop
in
xchg
mov
add
and
and
or
pop
adc
add
push
sti
xchg
adc
dec
pusha
add
cli
lret
jbe
int
fbld
lock
nop
rol
add
jae
push
jl
push
arpl
jnp
add
mov
inc
push
insb
push
add
xor
dec
pop
aas
les
cmc
sbb
jns
sub
test
scas
jno
jb
jnp
clc
imulb
movb
or
push
mov
movb
out
xchg
and
add
adc
cld
xchg
add
addb
cmpsl
into
xchg
adc
test
test
les
hlt
add
ss
scas
or
and
add
in
aas
or
jle
xchg
sub
in
fbstp
inc
or
sbb
jle
or
loop
mov
cmp
jnp
or
push
pop
mov
arpl
xchg
cs
clc
iret
cmp
sar
mov
xchg
push
ds
imul
icebp
aam
ret
test
jmp
out
out
addr16
mov
cmp
add
dec
ss
pop
add
pop
aas
movsl
jmp
push
lfs
fwait
pop
sbb
mov
mov
mov
rolb
iret
cmc
notb
lods
pop
push
pop
add
insb
rcl
shlb
cmp
cmp
sbb
mov
faddl
lret
lea
in
and
add
icebp
dec
xchg
and
cmp
movsb
mov
mov
arpl
and
das
xor
dec
inc
out
ljmp
add
add
cmp
cmp
out
cld
popf
test
cwtl
in
std
sahf
jecxz
in
mov
lcall
jmp
jge
xor
mov
js
add
sahf
movsl
addr16
out
add
rolb
fwait
and
dec
loope
out
repnz
cmp
iret
sti
xor
ja
add
nop
jno
mov
mov
fwait
push
push
xchg
xor
add
lods
rcll
inc
add
pop
cmp
cli
jg
stos
test
loopne
sub
add
scas
xor
adc
mov
inc
mov
addb
and
sahf
rcrb
adc
xchg
xor
cmp
in
cmc
pop
adc
outsl
push
jnp
xor
test
jmp
push
xchg
xor
sahf
xchg
sbb
je
add
frstor
aaa
hlt
dec
sahf
xlat
lcall
in
lods
icebp
lcall
sbb
add
xlat
fs
jmp
add
cmp
mov
mull
repz
cmpsb
push
pop
adc
mov
mov
mov
shlb
je
sbb
xlat
addb
mov
stc
xchg
in
cmp
add
and
xor
or
cs
jno
gs
ljmp
cltd
std
ret
pop
popf
or
xchg
cmpsl
mov
add
add
jle
push
mov
pop
dec
push
pop
mov
popf
sbb
std
test
pusha
add
dec
jecxz
ds
jne
sub
arpl
sub
push
push
cltd
outsl
pusha
add
add
xor
mov
bound
popf
jp
addb
jge
pop
cmpsl
leave
cli
jae
jae
jle
sub
popf
mov
clc
xchg
or
int3
rcll
inc
lods
pop
je
fadd
add
mov
xlat
cmpsb
adc
xchg
mov
sub
xchg
adc
xchg
xchg
adc
popf
sub
mov
icebp
ret
mov
cmp
dec
push
and
sub
lahf
add
sub
test
sub
push
jmp
add
sub
imul
xchg
or
add
shr
add
push
add
add
dec
and
add
fisttpll
add
cmp
xlat
push
aas
push
jae
nop
addr16
stos
mov
inc
add
lcall
es
add
pop
int3
xor
jbe
enter
pushf
push
pop
pop
mov
add
lea
add
mov
mov
add
jge
adc
ds
enter
pop
cmp
pop
push
inc
add
add
cld
jle
ljmp
jns
cmp
mov
test
or
jno
add
pop
pop
xchg
and
lret
sub
or
jne
pop
jl
popa
pop
into
cmp
popf
addr16
add
pop
arpl
sub
int
pop
pusha
add
fistpl
cmc
sahf
ret
sbb
add
out
sbb
or
add
inc
mov
and
std
fdivr
and
nop
pop
sbb
movb
gs
sub
jnp
mov
fistl
cmp
shl
mov
add
add
mov
fadd
fwait
jecxz
jb
pop
das
xchg
or
cmpsb
jnp
dec
mov
scas
mov
sub
adc
addb
scas
cld
sti
cmp
add
imul
jmp
push
repnz
add
add
xor
sub
push
push
push
add
les
pop
pusha
add
mov
mov
movb
push
push
add
sahf
dec
out
lock
ret
jne
out
push
add
add
add
mov
lods
and
shll
sbb
cwtl
sbb
inc
jmp
rolb
or
cmp
add
iret
or
cmp
jge
add
jl
jge
outsl
mov
clc
sub
xor
loope
popa
cltd
jmp
sub
sbb
addb
push
adc
xchg
leave
fdiv
and
insl
enter
add
out
cmp
daa
jl
jge
lock
xor
xchg
and
addb
ja
scas
out
outsb
into
dec
or
fistpl
add
add
dec
out
ret
pop
popf
movl
xchg
xlat
mov
adc
lahf
iret
repnz
ja
mov
cmp
call
xor
xor
jns
xor
add
push
lahf
lds
sbb
xor
shl
movsl
mov
jmp
movsb
imul
icebp
cli
lods
stos
cmp
or
and
loope
sar
adcl
add
movb
pop
ret
out
jp
lods
je
add
jnp
movb
add
sti
or
add
adc
push
icebp
in
xchg
xor
push
mov
roll
push
adc
inc
mov
add
add
mov
lods
pop
inc
add
dec
aaa
les
xor
cltd
scas
sbb
in
ljmp
pop
dec
push
dec
scas
inc
clc
pusha
add
fdivs
addb
mov
ljmp
cmpsb
jb
jle
mov
addb
icebp
mov
adc
pushf
mov
dec
popa
fisubrl
std
sahf
inc
dec
aaa
sbb
add
dec
fwait
push
lods
clc
bound
fwait
dec
popf
push
add
mov
adc
dec
ret
test
push
xor
jg
jg
xchg
loope
mov
dec
rcll
xchg
imul
fs
pop
sub
test
jno
adc
fistps
xchg
cwtl
push
movb
and
or
jle
add
fsubp
sbb
xor
jns
add
pusha
add
scas
gs
push
adc
adc
insb
out
fcompl
and
push
pop
dec
and
je
addr16
add
xlat
cmp
sarl
mov
stos
cmc
mov
repz
add
xchg
xor
dec
adc
mov
add
movsb
rol
add
push
adc
aad
rorl
sub
sti
dec
adc
add
add
cmc
xor
xchg
cmc
jmp
addb
mov
test
inc
add
mov
add
push
xor
pop
add
jbe
and
popf
test
mov
cmpsl
lcall
dec
pushf
cld
xchg
xchg
nop
mov
jbe
dec
xchg
xor
add
mov
icebp
jbe
adc
sbb
rorl
add
mov
add
xlat
cwtl
mov
add
js
mov
xchg
sbb
add
insl
inc
or
mov
xor
add
faddl
mov
arpl
jge
out
add
fdiv
repz
adc
ja
shlb
and
mov
add
clc
push
ror
adc
jbe
cmp
addr16
out
sub
outsl
add
pushf
inc
insl
rolb
add
fisubrs
add
add
add
or
in
pop
sahf
rolb
lcall
mov
bound
aad
mov
inc
jge
repz
enter
sahf
insl
shl
pop
cwtl
aas
sti
mov
mov
call
cmp
mov
scas
lods
bound
xor
lcall
inc
add
fwait
fistpl
mov
and
inc
add
iret
insb
push
scas
in
push
mov
lret
loope
add
xchg
gs
movl
add
loop
fucom
dec
mov
std
mov
add
add
imul
repnz
test
fsubl
aas
icebp
pop
xchg
loope
add
fmull
mov
in
add
sub
std
adc
pusha
add
pop
imul
add
daa
imul
mov
andl
mov
mov
push
hlt
mov
outsb
shll
das
xchg
shll
loope
or
pop
push
cmpsl
es
adc
and
mov
add
push
fwait
andl
out
sarl
mov
fxch
ja
pop
cmc
xor
paddw
neg
dec
lret
mov
lock
mov
xor
push
sbb
sbb
int
mov
inc
add
inc
add
outsb
sbb
add
xor
jnp
mov
jmp
xor
pop
lea
cmp
ret
or
incl
mul
stos
fs
mov
fstpt
jp
jae
das
in
push
scas
movsl
xchg
shll
xor
test
push
push
sbb
pop
pop
pop
mov
sbb
adc
sub
inc
imul
adc
cs
mov
ret
mov
mov
adc
inc
add
pop
pop
sti
and
fwait
out
aam
inc
std
mov
and
adc
in
xchg
out
push
pop
mov
int
dec
lret
dec
mov
int3
cli
pushf
aas
out
and
mov
add
flds
mov
dec
int3
jl
sub
popl
fcom
lcall
jne
dec
ror
push
add
jae
insl
mov
lock
outsb
mov
test
fs
or
iret
mov
push
xchg
jne
outsb
xor
sub
fistpll
stos
rol
inc
add
pop
cwtl
inc
add
repz
aad
cltd
jp
jge
jbe
inc
dec
xor
mov
rcll
pop
std
stos
fildl
es
sub
js
fbld
or
pop
iret
sbb
stos
test
cld
aam
jecxz
mov
repz
mov
jl
inc
add
lds
xchg
jp
add
jno
mov
loopne
xchg
xchg
push
ss
mov
mov
cmpsl
xchg
popa
fisubl
orl
mov
popf
pushf
stc
jecxz
cmp
jg
enter
pop
dec
or
add
xor
aam
and
pop
mov
aas
sar
notl
mov
lea
cmp
std
mov
xlat
aad
add
mov
aaa
jbe
in
dec
clc
daa
add
inc
add
dec
dec
push
sbbl
mov
xor
adc
divb
adc
in
js
pop
pop
adc
inc
cmpsb
movsb
shrl
push
pop
jecxz,pn
or
js
push
and
xor
jne
mov
lret
cli
test
scas
mov
dec
adc
mov
addr16
dec
fcompl
jns
cmp
imul
loope
gs
pop
fstpl
sbb
add
mov
insl
or
xlat
addr16
stos
pop
and
inc
add
loopne
sbb
or
mov
loope
subl
div
cli
mov
cmpsl
rolb
out
test
and
jge
or
sub
lret
add
add
out
cmp
fwait
int3
sbb
sub
xor
stos
mov
test
cmp
rolb
clc
lret
add
cmp
or
xchg
loopne
push
sbb
add
lods
lock
cltd
push
je
gs
les
es
add
clc
test
cwtl
pop
ss
xchg
sbb
arpl
fstpt
insl
adc
sbb
cld
cmp
aas
jle
mov
aas
stos
sub
sub
adc
pop
xchg
mov
xor
adc
jae
insl
dec
xchg
cmp
jg
sbb
push
cwtl
jnp
sub
shl
xchg
bound
add
xor
mov
rorb
out
mov
cmp
xor
add
loope
push
add
stos
gs
aas
mov
sbb
add
daa
addr16
jo
jne
xchg
rolb
stos
pop
popf
dec
test
inc
addb
add
add
mov
nop
ret
inc
sub
dec
mov
push
xchg
dec
fnstcw
adc
xor
lods
mov
xchg
insb
movsb
fstl
or
cmc
mov
nop
aaa
cli
xor
es
pop
sub
xor
jge
mov
das
adc
lods
inc
add
mov
cli
shlb
iret
sbb
mov
lea
mov
add
fstpt
ja
mov
mov
cmpsb
add
out
insb
push
inc
add
les
and
add
jns
ret
fisubrl
fsub
fcompl
jnp
inc
jae
mov
mov
jmp
call
mov
add
insb
cli
and
shll
loope
lretw
sub
loopne
jecxz
clc
fisttpl
mov
enter
mov
sbb
repz
test
jo
mov
aam
scas
mov
mov
cltd
sbb
ret
ret
push
and
sbb
gs
cli
push
and
xchg
clc
jbe
fcmovnb
add
xchg
lock
pop
cmpsb
mov
subl
stos
fistpl
enter
addr16
xlat
inc
add
mov
sti
jg
cmpsb
adc
xchg
out
aas
iret
lret
popa
mov
and
icebp
sub
add
jbe
inc
add
and
rolb
add
stos
insb
outsl
leave
add
xlat
in
ss
jg,pt
adc
jne
fldcw
pop
jle
mov
fs
mov
repz
mov
call
subl
mov
lods
hlt
push
adc
movb
mov
test
add
xchg
add
xor
and
cmp
sbb
bound
inc
add
add
add
std
es
push
adc
xchg
fnsave
xchg
sahf
outsl
inc
add
out
and
add
mov
add
out
sahf
mov
jno
add
test
jl
fstpl
fmull
inc
cmovns
scas
enter
inc
add
inc
or
mov
or
add
xchg
or
push
stc
mov
dec
add
mov
jl
mov
dec
bound
test
mov
mulb
or
or
fucomi
or
add
les
xor
clc
jno
jbe
cmp
mov
add
and
inc
add
in
data16
inc
repnz
rcrl
mov
jae
mov
jmp
cmp
or
idivb
mov
jmp
bound
sub
jl
push
popa
loope
daa
xor
add
dec
push
xor
jae
mov
mov
int3
ret
xlat
mov
dec
daa
sub
sti
addb
jno
cmc
push
out
insb
jno
push
push
mov
bound
aad
lcall
push
enter
xchg
sbb
add
sahf
fidivrs
test
jecxz
test
pop
xor
jbe
cmp
pop
call
mov
sbb
mov
inc
add
pusha
add
xor
repnz
mov
shl
cmpsb
adc
push
shr
mov
mov
fidivs
in
xor
push
inc
add
jecxz
mov
add
cmp
movsb
sub
popa
xchg
loope
repz
iret
inc
pop
jecxz
lret
lods
lea
add
add
sbb
jo
xchg
scas
sub
xchg
xchg
cli
mov
pop
and
setns
mov
repnz
sub
add
hlt
ret
dec
mov
mov
stc
sub
mov
sub
lahf
notb
negl
inc
add
fstl
rcll
test
mov
sbb
cmp
add
gs
add
notl
std
or
call
inc
add
pop
pop
or
add
mov
adc
mov
pushf
ljmp
xchg
pop
mov
clc
sub
rclb
inc
scas
jle
add
aaa
mov
out
or
loope
xor
ficompl
mov
clc
int
sti
mov
lcall
js
sti
dec
sbb
sarl
call
mov
sarl
xlat
pusha
add
sub
add
stos
push
sub
jmp
add
cmp
lds
add
mov
lcall
mov
jae
lret
popa
mov
dec
dec
scas
cmpsl
and
cmp
icebp
rolb
inc
ljmp
cmp
imul
imul
dec
addr16
loope
cwtl
mov
pop
adc
mov
dec
add
push
add
push
mov
xchg
cmp
les
xchg
xchg
shlb
outsb
imul
add
bound
iret
lods
mov
pusha
add
add
cmc
jae
sbb
lods
or
push
mov
test
mov
ss
mov
outsl
negb
insw
test
jb
add
cmp
aad
mov
adc
xchg
mov
adc
rorb
xchg
sbb
sub
xorl
pushf
pop
popa
push
movsl
xchg
jo
addr16
loop
in
rolb
or
les
incl
and
cli
sub
add
nop
gs
es
or
mov
sub
inc
add
mov
mov
mov
aaa
int
jns
pop
bound
cs
mov
mov
and
jno
mov
jns
icebp
or
xor
jl
dec
outsb
mov
mov
push
mov
fstpt
js
scas
and
gs
lret
pop
dec
mov
ret
push
sbb
sbb
adc
jle
push
add
mov
mov
sub
sarl
out
jmp
movb
es
mov
and
jnp
pop
jno
jecxz
push
push
add
insl
fnstsw
jo
mov
xorl
add
xlat
lea
leave
pushf
xchg
or
test
cmc
cwtl
sbb
stos
bound
fs
leave
fsubr
jbe
lods
xchg
jp
clc
mov
aam
xor
adc
sub
sbb
addb
iret
stc
adc
jmp
lds
cltd
add
sti
cmp
inc
pop
jecxz
stos
pop
out
push
cmp
in
lods
ljmp
repz
sahf
and
inc
add
in
pop
daa
imulb
loope
sbb
xchg
xchg
in
pop
fistl
push
xor
and
cmpl
aad
add
add
int3
bound
xchg
mov
insb
add
cli
push
jo
mov
push
mov
mov
add
jno
neg
repz
mov
add
xchg
lahf
test
bound
and
fistl
fdiv
ret
mov
daa
ja
add
or
add
jbe
dec
inc
add
lock
jnp
xchg
fistps
xchg
jl
popf
lret
clc
adc
pop
lcall
lret
lods
mov
jae
cmp
lods
addb
int3
dec
add
adc
cmpsb
add
addl
jp
ret
or
push
jbe
popf
into
or
add
out
sub
or
stc
clc
mov
jo
movsl
addb
je
movsb
ljmp
add
test
xor
mov
mov
xor
cmp
add
cs
outsl
add
lahf
push
lret
insl
pop
jnp
jg
adc
add
scas
push
nop
mov
imul
dec
dec
jb
mov
and
ljmp
cmp
add
lds
xor
lock
jns
dec
insl
testb
call
inc
add
lahf
or
mov
mov
cmp
add
add
stos
mov
aas
std
pop
stos
adc
adc
mov
add
mov
add
test
lretw
push
mov
aaa
dec
ljmp
neg
sbb
fnstcw
and
pop
addr16
data16
std
cli
dec
push
dec
pop
add
sub
or
sub
add
rolb
or
adc
pop
mov
add
pop
and
add
out
arpl
addr16
xchg
push
mov
add
out
mov
xchg
leave
call
in
das
xlat
lret
addb
inc
add
ss
mov
sarl
jnp
add
and
pop
aam
in
add
sti
int
xchg
xor
nop
lea
insl
lods
das
jge
add
jge
add
xor
pop
shll
mov
dec
mov
add
fstpt
sub
and
pusha
add
fcmovnb
add
out
pusha
add
and
pop
adc
push
movsl
cwtl
adc
aam
in
ss
xchg
pop
jmp
sahf
and
push
add
add
adc
rolb
jbe
das
iret
sub
mov
lret
int3
cmp
cmp
sub
dec
scas
js
add
xlat
cmp
inc
add
enter
add
sub
jmp
jns
jmp
mov
xor
outsl
movsb
cmp
dec
gs
das
add
push
scas
cmp
xchg
lahf
idivb
nop
mov
imul
inc
xlat
sub
into
test
enter
push
daa
pop
repz
push
add
icebp
call
lret
sbb
ret
mov
mov
lods
sbb
push
mov
add
mov
cmc
js
scas
frstor
add
inc
hlt
inc
sub
xchg
stos
inc
fldt
cmpsb
mov
test
loopne
sub
mov
sub
jg
mov
shlb
add
rolb
push
inc
add
add
inc
hlt
add
shll
pusha
add
sbb
add
cmp
inc
cmpsl
lahf
mov
pop
xor
in
cmp
push
add
mov
push
and
iret
pusha
add
into
imull
bound
aas
sub
les
dec
mov
clc
pop
sub
xlat
xor
or
das
xor
sub
loop
jmp
stos
sbb
push
dec
aam
xchg
or
ljmp
add
jl
shll
xor
ds
add
ja
sbb
lea
and
imul
add
cwtl
ss
add
scas
mov
pushf
popa
outsb
adc
and
sarb
xor
xchg
push
xor
mov
addr16
aad
dec
pop
hlt
movsl
out
shrl
cmp
adc
mov
les
xchg
inc
fucom
adc
dec
sub
sub
push
jne
pop
iret
mov
imul
nop
arpl
clc
mov
mov
lea
dec
and
pop
fiadds
cmp
ljmp
pop
stos
cmp
cld
cmp
imul
pop
fsubs
dec
loopew
fnsave
int
add
inc
add
push
mov
mov
lods
aam
jbe
das
gs
stc
outsb
cli
repnz
out
adc
xor
call
sahf
movsb
jae
pop
shll
sub
sahf
lahf
shl
repnz
clc
int
add
dec
xorl
or
incb
pop
in
ja
sbb
incl
test
out
inc
ljmp
dec
xchg
enter
enter
mov
lds
repnz
mov
mov
ror
rol
add
cmp
mov
adc
iret
lock
call
aad
jns
mov
add
and
mov
add
fldcw
xchg
xor
or
ss
jmp
or
mov
in
imul
outsb
mov
mov
add
in
mov
adc
add
je
addb
push
mov
sbb
sbb
push
mov
fs
fwait
psrld
push
js
xor
adc
ret
icebp
and
movsl
mov
add
push
mov
and
pop
movsw
hlt
inc
add
mov
xchg
mov
mov
bound
inc
add
mov
add
mov
and
je
sub
mov
cs
and
cmp
xchg
leave
das
xchg
outsb
aas
rolb
sbb
scas
pop
fisubl
cltd
inc
push
fisttps
mov
jne
call
add
ret
test
stos
in
insb
pop
sbb
add
mov
xchg
push
incb
add
fsubr
fidivs
dec
pop
cmpl
rolb
in
es
stos
adcl
dec
dec
lods
lds
ret
cmpsl
lahf
aaa
adc
leave
push
xchg
clc
pusha
add
lods
push
dec
mov
jae
rcll
xchg
data16
dec
mov
jp
in
shll
adc
shl
sub
mov
ja
fistps
out
aam
outsl
outsb
push
aas
lret
pop
icebp
leave
pop
xchg
sub
pop
loop
push
pop
sti
data16
mov
addr16
xor
lods
push
sbb
in
addr16
add
sub
dec
clc
loopne
ds
inc
add
lods
xor
sub
add
sti
pop
mov
mul
jns
pop
mov
fisttpl
lods
xchg
aaa
and
les
mov
pop
and
cwtl
jae
jmp
add
adc
inc
aam
add
je
ja
and
mov
mov
add
adc
loop
lret
mov
mov
mov
add
pop
xorl
outsb
pop
pop
lods
loopne
lea
sbb
repnz
jp
adcl
jo
leave
mov
mov
and
pop
push
or
pop
xor
jmp
frstor
aad
add
add
dec
addr16
xor
enter
sub
mov
ss
add
push
cld
fwait
and
adc
imul
gs
fst
adc
mov
int
push
mov
rolb
pop
loopne
pushf
mov
sub
leave
bound
mov
add
in
push
pop
dec
fdivrl
inc
add
pop
movsb
and
adc
sub
pop
jno
dec
pushf
pop
cmp
movsl
cmp
or
add
dec
dec
sub
or
or
lcall
jae
stos
sub
lods
outsb
adc
sbb
hlt
adc
push
aam
add
fstps
outsl
sub
sbb
xchg
out
jecxz
addl
push
adc
cli
dec
out
sub
pop
lret
cld
or
cmp
or
lock
out
cmp
out
lret
repz
rcl
mov
in
aam
sbb
insl
pop
cwtl
gs
mov
push
lods
jg
or
call
fs
in
add
fsts
or
push
rorl
xor
and
aad
lret
mov
cmp
cmp
in
iret
cli
push
add
push
aad
ficoml
call
xchg
cli
adc
pop
pop
adc
pop
and
mov
add
add
and
icebp
in
jecxz
stc
cs
gs
push
cmpsl
test
mov
xchg
inc
add
and
jecxz
or
mov
lretw
inc
add
test
jo
dec
xchg
xchg
push
add
add
mov
inc
adc
mov
sub
stc
dec
mov
add
addb
adc
adc
and
xlat
scas
pop
lods
fcomps
or
movsb
adc
and
push
int
jno
roll
clc
ds
imul
cwtl
mov
xor
sub
cmpsl
lret
bound
xor
ljmp
add
add
imul
add
pop
int
add
mov
into
ds
mov
jge
jns
and
mov
or
add
lock
mov
loop
aas
and
stos
pop
movsl
outsb
lea
add
out
xor
dec
xor
cmp
icebp
bswap
push
mov
mov
and
dec
inc
add
or
jl
push
pusha
add
inc
add
loopne
int3
movsl
mov
push
cmpsl
stc
or
jne
push
ficomps
cmc
imul
es
inc
ja
and
and
mov
add
add
mov
stc
bound
dec
divb
mov
xor
xor
mov
lea
mov
add
insb
call
stos
mov
scas
mov
mov
jecxz
push
push
loopne
pop
sbb
movb
push
add
scas
xchg
rorb
xchg
or
mov
push
add
and
add
stos
cli
sarl
or
lods
adc
cld
js
pop
sbb
iret
and
push
push
movb
es
rolb
pop
test
pop
lahf
shrl
mov
mov
cmpsb
sub
outsb
das
clc
sub
add
lods
ret
dec
loop
sub
jno
add
jp
clc
mov
sbb
sub
or
lea
bound
sbb
fwait
les
cld
into
hlt
je
cltd
lods
ss
push
bound
ret
mov
push
push
imulb
mov
push
test
js
jb
les
xchg
daa
mov
sub
in
mov
enter
pushf
test
adc
xchg
cmp
sbbl
mov
inc
lahf
cli
stos
jmp
adc
sbb
rol
cld
out
xor
lahf
ret
decl
push
aad
jmp
sbb
roll
aam
add
jb
mov
adc
jae
cmpsb
ror
test
mov
jg
mov
and
pop
and
shlb
add
mov
lods
pusha
add
push
xchg
mov
pushf
bound
mov
vcvtsi2sdl
push
cmp
ja
in
push
adcl
icebp
cmovo
loopne
loop
repz
ds
stos
aam
jl
fldenv
movsb
inc
add
popf
mov
cmp
cmp
dec
sbb
sub
dec
dec
data16
add
jnp
adc
pop
and
gs
push
add
xor
mov
inc
add
mov
xchg
adc
mov
and
daa
or
sbb
add
xchg
push
gs
insl
aam
jo
adc
repnz
push
aam
pop
out
das
push
aaa
inc
les
out
imul
push
pop
mov
sbb
push
xchg
sub
jo
mov
sahf
aaa
lret
pop
sbb
dec
loop
sbb
hlt
cmpsb
adc
addr16
adc
outsl
xchg
js,pn
mov
les
mov
scas
lods
jb
dec
dec
aam
outsb
shrl
mov
addb
test
mov
cs
sub
fildl
mov
sti
adc
addb
jmp
mov
fisubl
add
inc
add
mov
and
jns
test
mov
sbb
xor
and
sbb
mov
xor
xchg
inc
add
add
in
mov
sub
push
repnz
roll
call
xor
jge
bound
lea
ljmp
add
fucomp
loop
cmpsb
insb
and
loope
in
aas
mov
jmp
popf
cmp
or
dec
inc
push
inc
add
xchg
push
jne
cmp
std
xchg
xchg
sbb
xchg
add
add
add
addb
dec
xor
jb
nop
jmp
lcall
add
dec
sbb
jl
adc
xor
mov
or
lea
mov
jo
pop
int
inc
add
loopne
jno
jno
outsl
test
scas
inc
add
add
dec
xchg
adc
sahf
fs
das
mov
das
fcom
out
inc
ret
incb
icebp
test
outsl
or
and
movsl
outsl
pop
lahf
movsl
and
leave
aaa
sub
lea
cltd
test
and
and
mov
jmp
jge
ret
insb
mov
mov
jbe
jbe
loope
addb
cmc
pop
les
jg
push
andl
sub
fmul
sar
jp
nop
popa
pop
jae
mov
push
pop
int3
jle
or
xlat
adc
sbb
xor
xchg
int
addr16
xchg
stos
mov
inc
or
sti
repz
into
mov
js
xor
loope
xor
inc
add
fwait
cmpsb
jb
nop
rolb
add
mov
call
ja
cltd
cmpsl
sbb
mov
mov
push
mov
inc
int
add
push
ret
fldt
mov
aaa
sbb
cmpsl
hlt
cltd
fildl
cmp
add
js
cs
lcall
jno
cmp
xor
mov
and
sti
out
in
lods
jnp
pop
jecxz
loop
mov
pop
cs
dec
cli
out
add
add
iret
mov
mov
repnz
and
ret
gs
test
jmp
push
add
mov
mov
es
adc
in
push
movsb
mov
add
loopne
pushf
xor
movsl
or
pop
dec
icebp
jne
mov
cli
jae
mov
int3
dec
or
add
pop
movsb
popa
xor
inc
sbb
clc
repz
push
sub
cwtl
pop
nop
movb
test
cwtl
mov
push
adc
pop
popa
xor
lods
xor
mov
clc
adc
hlt
sub
pop
insb
nop
xchg
and
and
push
in
test
int3
lcall
adc
outsl
dec
ss
jb
jae
xor
add
aam
sub
add
orl
push
clc
aas
or
cmp
xchg
inc
xor
dec
lcall
mov
arpl
lods
mov
js
pop
lds
adc
mov
repz
jmp
dec
or
sahf
jl
cmp
sub
xor
push
xchg
add
in
xor
add
xor
gs
into
pop
shrl
xchg
jle
mov
jmp
pop
out
adc
out
add
lahf
cmp
orl
inc
add
test
cmp
pop
fs
lcall
clc
in
cmpsb
xchg
notb
stos
movsl
in
lock
aaa
fs
fdivr
sub
int3
out
xchg
or
cmpsw
and
xchg
jb
lods
or
in
icebp
adc
inc
xchg
cmp
shrb
add
push
mov
ds
add
cmpsb
push
rol
shrl
cld
ret
mov
outsl
mov
push
mov
iret
outsl
mov
xlat
fists
mov
mov
mov
mov
or
data16
add
add
sub
inc
add
mov
cmpsb
loopne
add
add
test
add
jbe
clc
repnz
fwait
inc
cmp
xchg
enter
mov
add
add
vpsrlq
movsb
adc
cmp
jns
xor
mov
std
fmul
dec
imul
popf
mov
pop
mov
call
imul
movzbl
pop
cwtl
pop
push
adc
sub
sub
dec
lock
or
jns
xor
add
mov
test
addb
and
cli
mov
add
mov
add
add
add
stc
push
cltd
aad
dec
leave
jmp
sub
mov
xchg
dec
ja
pushf
movsl
test
pop
fistpll
xchg
test
push
mulb
add
cmp
scas
and
imul
leave
adc
rolb
add
dec
or
outsl
ss
sbb
sub
sti
adc
add
sub
jbe
push
add
sub
sbb
mov
lret
add
and
ja
fimull
pop
sub
dec
notl
aad
imul
fwait
cmp
sbb
fwait
dec
xchg
cmp
sbb
jecxz
data16
das
sbb
cld
jns
jae
sbb
popa
adc
mov
or
fcompl
xchg
testb
sbb
mov
xchg
mov
testl
mov
dec
outsl
loop
add
dec
xlat
mov
push
stc
or
daa
mov
jbe
push
ds
out
arpl
mov
push
outsb
pop
nop
dec
inc
add
pop
out
adc
out
dec
cltd
out
loopne
add
call
xor
mov
call
dec
fistpll
pop
xchg
cltd
ret
add
push
imul
mov
xchg
movsb
push
fxch
inc
add
sti
fwait
clc
popa
adc
out
popf
cltd
ja
out
sub
test
add
add
pop
mov
pop
test
mov
lods
push
mov
pop
ret
cld
int
jns
inc
add
inc
mov
into
aaa
imul
fstps
sbb
sub
jmp
add
insl
sar
lock
mov
sahf
test
leave
addb
sub
add
add
ss
shl
loopne
jns
fdivp
push
fdiv
loope
or
dec
xchg
fchs
mov
add
daa
les
or
lds
pop
push
das
jecxz
dec
sbb
hlt
or
cs
dec
dec
mov
std
shlb
movsl
cmp
lods
xor
lea
add
xor
mov
xchg
lds
ret
sub
mov
push
xchg
pop
pushf
push
or
rcrb
push
out
aaa
test
jo
cs
add
jbe
iret
xchg
in
rdpmc
lods
add
faddl
pushf
mov
scas
cmpsl
mov
add
inc
movsl
into
addb
xor
and
loop
mov
adc
cmp
imull
fs
fbstp
fcmovb
add
dec
pop
inc
add
add
test
test
fbstp
dec
mov
cltd
das
cmp
push
les
stos
out
pop
add
data16
inc
js
ficoml
icebp
xor
in
add
dec
negl
jns
sbb
add
je
dec
lods
or
sbb
xor
out
push
mov
into
mov
sub
outsl
movsb
sahf
jle
add
mov
inc
cld
jno
add
movsl
sbb
lret
inc
or
dec
shlb
outsb
push
bound
out
xor
adc
sbb
imul
pop
aaa
popa
adc
call
sub
fimuls
mov
sub
jo
fistpll
into
icebp
iret
loopne
aaa
imul
xchg
pop
daa
xchg
ret
aam
test
dec
cmp
pusha
add
mov
xor
insl
rorl
je
repz
add
xor
pop
inc
add
cmc
outsl
fnstsw
jp
push
addb
xchg
mov
jns
rcr
out
in
int
adc
mov
outsb
xchg
push
mov
mov
add
sub
aam
les
sbb
xchg
sbb
fstps
cmpsb
sbb
lcallw
inc
add
mov
xor
jno
arpl
add
cli
adc
ja
or
inc
add
xlat
fs
add
push
cwtl
inc
adcl
push
sbb
daa
xor
insl
mov
push
mov
jecxz
unpckhps
fmuls
aas
cmp
jle
lods
popa
cmp
mov
sahf
jmp
loop
sbb
inc
add
repz
stos
aam
cli
push
dec
sbb
int
rolb
movsb
insb
pop
loopne
adc
push
mov
lret
xchg
lods
addb
dec
outsl
pop
push
mov
mov
add
xchg
mov
decl
das
cmp
and
or
into
push
cmp
mov
movb
mov
lret
sbb
mov
dec
xchg
ss
iret
sub
xchg
push
sub
aam
or
test
aaa
push
pop
movb
fldt
xor
pop
sahf
aam
loopne
pop
sbb
add
add
lods
fsubrl
xchg
insb
dec
xchg
push
adcl
es
daa
mul
loope
inc
add
pushf
dec
test
push
rolb
mov
jae
dec
ficoml
rcrb
aam
xchg
data16
pop
pop
adc
repz
in
pop
out
and
jnp
cmpsl
push
insb
into
repnz
jecxz
loopne
pop
adc
xchg
addb
fisubs
ret
stos
adc
xor
shlb
add
sbb
jg
and
add
out
fildl
add
jmp
add
jbe
cltd
mov
mov
int
in
add
adc
add
add
ja
and
orl
sti
outsb
cmc
or
cs
orl
inc
add
scas
sub
xor
xor
cwtl
push
hlt
nop
sbb
lret
jge
stos
xor
mov
jbe
cmc
or
fsubrp
jb
iret
sahf
xlat
imul
es
mov
jno
sub
xchg
hlt
int
xchg
inc
add
roll
push
jns,pt
call
aam
pusha
add
lods
movsl
loope
dec
imul
adc
xchg
push
add
add
dec
jle
test
out
sub
add
pop
lahf
xchg
adc
jecxz
fildl
cmp
call
lock
xchg
inc
adc
movsl
cmpsb
push
mov
xor
cmp
sti
and
bts
jmp
test
std
lea
sbb
sub
add
xor
pop
stc
add
scas
int
mov
mov
inc
add
iret
or
and
jle
into
sahf
mov
fldenv
in
dec
leave
xor
clc
pop
pop
xchg
daa
icebp
push
and
rolb
popf
adc
dec
push
popa
or
add
xor
mov
inc
aad
mov
or
loop
cmc
xor
add
mov
mov
out
mov
add
add
movb
cmp
imul
mov
and
lret
dec
les
push
imul
sbb
pop
cmp
sub
mov
out
dec
inc
xchg
arpl
enter
sub
mov
sub
cltd
jno
cmpsb
jns
add
push
add
mov
lahf
push
aam
jp
jb,pt
mov
lea
add
sub
divb
pop
adc
and
jns
out
cld
loopne
negb
lret
pop
insb
rcll
fwait
pop
pop
mov
add
insl
stc
cmp
mov
sti
shrb
gs
xchg
es
rcll
xchg
jecxz
insl
xchg
shr
xor
loope
insb
mov
ret
push
add
imul
addb
shl
loopne
leave
fildl
cmp
das
imul
out
mov
ret
loopne
jne
cmp
les
xorl
push
js
call
and
mov
jecxz
mov
add
icebp
stos
inc
add
push
lods
rolb
mov
dec
mull
addb
and
push
xchg
add
mov
cmp
addb
fsubrs
cmp
adc
clc
adc
shr
inc
add
cmp
addb
xchg
cmpsl
ret
push
loop
repz
add
pop
mov
fstl
mov
les
rorb
push
fidivrs
xor
stos
movsl
mov
das
pop
nopl
inc
rcll
loop
addb
add
or
jno
and
mov
cmpsl
cmp
mov
pushf
repz
and
cmp
rcrl
mov
jge
std
mov
aas
inc
add
mov
dec
je
jl
add
js
stc
and
ret
in
add
adc
cwtl
ljmp
mov
adc
mov
rolb
mov
add
in
jge
add
jb
jo
rolb
add
jnp
pop
cmp
sbb
jle
bound
and
xchg
outsl
ja
mov
inc
add
adc
dec
jbe
mov
jmp
ds
jno
sbb
mov
loopne
cmp
mov
mov
test
out
fildll
pop
lcall
hlt
or
add
sub
push
mov
mov
xchg
cld
jno
add
leave
or
dec
xor
or
imul
push
add
das
xor
add
and
repz
repz
push
fdivs
or
add
add
iret
pop
mov
in
push
lds
fsts
repnz
pop
or
pop
fsubs
rolb
sub
lods
dec
shrl
mov
in
jo
das
mov
arpl
lret
or
and
pushf
ficoml
out
test
sub
xor
movb
and
mov
mov
rcll
scas
sub
adc
add
adc
inc
xor
fcmove
popa
ds
add
clc
mov
cmp
jmp
mov
inc
mov
jle
add
xlat
ds
xchg
aaa
popa
pop
adc
iret
enter
leave
ficoml
jmp
shlb
fwait
dec
test
and
pop
les
in
iret
jne
test
dec
mov
adc
ud2
sub
mov
add
inc
pop
out
ds
test
addr16
iret
fcoml
push
outsl
sbb
jno
xor
inc
add
add
mov
mov
es
lret
pop
pop
mov
add
mov
and
roll
jp
xchg
insl
fmuls
movb
mov
mov
lock
mov
lea
iret
fwait
pop
ficompl
data16
ja
pushl
ja
out
shrl
out
add
imul
add
xchg
out
xlat
jae
scas
gs
push
jle
and
ret
movsl
rcl
jne
add
jmp
aad
add
aam
adc
inc
add
add
pop
or
js
dec
lods
mov
add
pop
dec
cmp
add
adc
addr16
add
adc
lahf
and
add
jmp
xor
fidivrs
inc
jg
mov
jb
addb
and
mov
jl
repnz
aaa
jb
das
xchg
or
ds
add
jmp
stos
and
inc
add
or
adc
data16
es
or
mov
jecxz
cmpsl
fst
xor
inc
jne
push
sbb
cli
pop
sub
iret
rcrl
fdivl
cmc
popa
xor
add
rolb
xor
push
xor
adc
add
mov
adc
cmp
pop
testl
gs
jg
repz
pop
cmc
popa
das
into
cmc
stos
into
mov
lret
mov
add
adc
mov
add
add
add
and
pop
movsb
push
mov
dec
test
sti
nop
or
xchg
adc
add
dec
test
stc
call
inc
das
fbstp
pop
sub
push
sub
pop
sahf
jg
jge
add
mov
popf
addr16
mov
sbb
add
movb
cmpsb
mov
add
xor
daa
addl
or
repnz
scas
cmp
dec
mov
cmp
in
push
outsb
jb
add
push
xor
xchg
xor
leave
data16
cld
mov
jle
jns
add
mov
cmp
add
aas
adcl
or
pusha
add
mov
outsl
mov
dec
pop
lods
cmp
add
ja
imul
add
imul
daa
xor
ret
mov
inc
outsb
sub
fwait
mov
flds
sub
add
insl
shll
jbe
xchg
mov
mov
hlt
shrl
dec
sub
std
sub
jp
dec
test
cltd
arpl
int3
jp
jl
sar
dec
or
jnp
popa
addb
in
mov
or
inc
add
cmpsb
fstpt
cli
scas
jae
lods
test
sbb
es
jecxz
jne
pop
mov
shl
push
das
sbb
add
jmp
repz
and
stos
mov
cmp
std
jg
add
push
jl
dec
es
fildll
mov
mov
push
xchg
scas
pusha
add
mov
inc
add
testl
xchg
data16
lahf
jno
jecxz
data16
je
rclb
pop
ss
repnz
adc
dec
dec
js
dec
gs
test
movsb
popa
sub
stc
loop
dec
mov
jns
stos
inc
add
inc
sbb
jae
inc
cwtl
movb
jmp
add
inc
int3
loopne
int3
add
stos
popf
or
sbb
cmp
test
jecxz
and
inc
add
inc
mov
insl
jno
repnz
add
cmp
dec
test
test
bnd
mov
jo
movsl
sub
cmpsb
outsb
xchg
xor
xchg
lret
addb
jnp
call
cmp
scas
sub
jb
cmp
adc
loopne
cwtl
ret
lret
es
xchg
inc
lret
push
shlb
add
add
mov
xor
push
jb
adc
in
sbb
imul
ljmp
scas
push
push
dec
xchg
das
out
xchg
cmpsl
push
jp
sbb
add
xor
sbb
sti
out
add
imul
dec
and
pop
mov
jb
mov
ja
test
movb
je
mov
movsb
xchg
push
jb
iret
pop
pop
adc
outsl
sahf
jbe
imul
out
xor
pop
mov
cmpsb
ljmp
or
stc
sub
shl
mov
pop
in
bound
ss
and
jbe
movsl
stos
push
mov
pop
bound
jo
inc
inc
sbb
mov
add
dec
das
mov
or
mov
add
xchg
and
jb
test
js
xchg
add
std
nop
cwtl
out
jmp
cmp
push
mov
add
ret
divl
sub
mov
mov
add
and
xchg
repz
loope
add
xlat
mov
or
sbb
jmp
add
cli
inc
xchg
sbb
jns
add
add
insb
test
insl
sbb
add
sbb
add
mov
mov
fstpt
push
call
std
test
dec
mov
inc
add
rolb
test
hlt
fstl
jmp
sbb
shll
stos
fildll
sub
add
data16
mov
push
lods
or
lea
inc
add
mov
add
stos
inc
outsl
cmp
push
js
mov
pop
fsqrt
or
mov
mov
aaa
out
jecxz
outsl
push
mov
pop
jl
or
jp
add
xor
movsl
outsl
int
sub
mov
rcl
mov
into
pop
cld
cmp
xor
mov
lret
test
mov
lods
int
shl
rolb
add
xor
rcrb
std
adc
sub
addb
pop
fcmovne
test
cmp
sub
add
fdivs
jno
call
xchg
test
push
jmp
stc
sub
inc
addb
mov
cvtps2pd
fdiv
ror
mov
int3
cmp
clc
sti
cmp
xchg
pop
push
lret
push
cwtl
repnz
cmc
push
scas
mov
cs
and
dec
xchg
test
test
stc
jns
rolb
mov
testl
and
out
xchg
pop
in
dec
addl
loope
ficomps
pop
aad
rolb
pusha
add
imul
add
add
test
fucomp
sub
mov
roll
pop
scas
push
mov
cmp
ja
fcomi
inc
scas
push
dec
xor
add
jno
jno
pop
fildl
adc
add
sti
fs
sbb
and
mov
out
insl
cli
mov
dec
and
pushf
ret
insb
rolb
movsb
subl
movsb
rcr
leave
inc
mov
notl
inc
add
shl
mov
mov
lahf
push
fbstp
cmp
add
xchg
xor
scas
mov
adc
clc
mov
pop
xor
xor
leave
or
add
adc
xchg
jp
cmp
sbb
inc
adc
ret
notb
dec
fwait
cs
mov
outsb
loope
mov
mov
movb
ljmp
inc
pop
xlat
sbb
add
xchg
mov
aaa
jl
push
xchg
sbb
sub
stc
push
mov
xchg
loopne
call
sbb
inc
add
cmp
enter
pop
mov
in
push
clc
outsb
adc
push
sub
lea
mov
mov
jbe
popf
mov
out
in
std
adc
mov
cmc
stc
inc
xchg
sub
xchg
xor
popa
jecxz
xor
push
aad
js
clc
cmp
mov
push
or
lods
dec
adc
mov
test
lea
ljmp
xor
adc
loop,pt
inc
rcr
das
outsb
xchg
push
mov
sahf
xlat
mov
scas
loopne
xlat
scas
lods
jae
xor
lret
andl
sahf
stos
push
xchg
imul
repz
inc
int
leave
bound
push
mov
jbe
add
xor
insl
pusha
add
mov
test
pop
test
out
sub
xor
movsl
lcall
ja
imul
and
mov
aas
xlat
and
mov
aas
inc
add
rolb
cmpsl
mov
dec
xor
mov
outsb
in
addl
add
add
xchg
pop
add
jb
or
cmp
dec
xchg
lock
out
dec
enter
xlat
mov
cld
push
pop
lahf
repnz
pop
push
scas
scas
xor
pop
iret
insl
mov
lahf
leave
ffree
call
mov
adc
divl
xchg
or
adc
jbe
icebp
xor
test
xchg
cmpsl
mov
jbe
addb
sbb
outsl
or
jbe
adc
sbb
and
ret
inc
add
sbb
add
in
xor
mov
mov
daa
cwtl
pop
popf
push
mov
enter
dec
in
cmc
cmp
dec
xchg
push
push
xchg
outsb
sahf
shrd
es
mov
test
dec
idivb
fwait
insl
dec
xchg
bound
scas
adc
frstor
fdivl
xchg
aas
push
mov
int
jnp
clc
addb
cmp
jl
add
retw
rol
add
cmpsb
push
add
addb
lret
jmp
inc
add
lods
in
dec
mov
outsl
jb
mov
bound
es
scas
add
ss
and
fnstcw
xchg
out
aas
cmp
cli
sbb
xor
add
ret
dec
add
jg
add
jp
repz
loopne
inc
add
xor
in
push
sbb
cmp
imul
adc
xorl
ret
test
jmp
cld
mov
dec
in
add
jae
shlb
add
push
push
jle
pop
mov
addb
add
shl
cmpsl
jne
jle
mov
inc
add
and
leave
ss
jo
add
jmp
mov
push
cmp
fildl
add
bnd
add
sbb
insl
mov
fs
xor
sbb
daa
adc
xchg
add
inc
add
adc
pop
push
push
addb
or
pop
mov
aaa
push
pop
bound
mov
dec
mov
int
mov
adcl
jl
add
pushf
enter
addb
adc
add
xchg
cmc
hlt
call
popf
adc
mov
or
xchg
std
mov
ja
and
inc
add
icebp
dec
std
xchg
mov
add
dec
or
stos
jg
pop
mov
add
roll
insb
mov
or
xchg
mov
jle
mov
inc
add
sbb
cmp
rorl
push
xchg
mov
lods
cmp
xor
add
imul
xchg
adc
xchg
adc
call
addb
ffree
sbb
and
push
sbb
imul
pop
dec
and
pop
lock
data16
add
movsl
or
popf
dec
int
nop
lret
int3
jmp
mov
fs
cltd
xor
jne
inc
add
xor
scas
or
shlb
pop
sbb
addb
out
movsb
fs
aad
loope
dec
xlat
pop
idivb
push
mov
xor
rolb
add
scas
mov
cmp
rorb
sub
incb
mov
test
mull
adc
mov
lods
cmp
call
mov
mov
roll
js
pmaxsw
add
add
ds
push
in
test
scas
data16
sbb
add
inc
and
cmpsl
mov
fildl
aad
sub
push
push
xchg
or
mov
push
xor
pusha
add
int
rorb
mov
inc
add
scas
fisttps
sub
std
shl
push
push
incl
mov
cmpsl
cmp
mov
inc
pop
mov
in
bound
jb
or
mov
add
fs
sub
push
add
hlt
push
popf
cwtl
mov
in
jecxz
and
cmp
leave
xor
popa
xchg
inc
add
sahf
pop
test
mov
pop
addb
or
adc
xor
jae
test
sub
daa
xchg
in
pop
sahf
test
nop
lahf
lods
cli
mov
mov
movb
int3
fldenv
add
mov
push
addr16
mov
push
je
scas
popa
cwtl
nop
dec
or
test
cltd
out
or
inc
ret
rcll
sub
adc
jb
add
rolb
or
xor
dec
sub
aas
addb
jns
ss
lds
jb
jmp
cmp
fadds
xor
xor
mov
add
jno
pop
push
adc
test
pusha
add
pop
xchg
mov
pop
pop
or
jecxz
notb
inc
add
xchg
cmp
out
fstl
jmp
ds
mov
movb
or
or
out
inc
add
mov
mov
mov
cmp
or
jg
addb
dec
sahf
push
xor
add
xor
mov
or
add
mov
inc
mov
outsl
sbb
mov
aas
cli
xchg
sub
iret
add
mov
repz
and
sarl
push
sbb
xchg
lds
add
fstps
lods
mov
xor
pop
js
in
sbb
add
or
jmp
adc
stos
aaa
jne
fs
mov
data16
add
lcall
aam
movl
stos
mov
mov
mov
add
ret
test
add
lahf
icebp
mov
mov
cmp
xchg
imul
testl
or
mov
aad
jle
sti
push
xchg
rcl
sub
loopne
push
call
mov
lods
push
imul
sub
roll
orl
ds
pop
and
lods
sub
mov
add
adc
fidivl
shrb
outsl
jmp
int
rclb
imul
sbb
jle
inc
add
idiv
ret
sub
shl
xchg
add
push
das
pusha
add
jb
add
pop
mov
pop
nop
cmp
add
outsl
mov
mov
add
or
fcmovb
fwait
add
pushf
jae
adc
aas
push
hlt
out
repnz
inc
cli
lret
dec
lods
pushf
rclb
popa
push
or
jg
add
cmp
add
push
mov
loop
je
push
jg
das
mov
lods
mov
dec
stos
lea
mov
ja
nop
jne
dec
xor
push
mov
in
dec
adcl
dec
mov
add
imul
xor
fs
pop
cmpsl
dec
jecxz
int3
mov
fstpt
add
add
pop
mov
sahf
xchg
and
lock
mov
jb
pop
iret
cs
cltd
test
or
lods
aad
das
mov
jg
std
mov
jmp
add
inc
and
mov
inc
add
ret
shrl
add
and
mov
adc
cmp
mov
and
xchg
jl
mov
fsubr
stos
je
jecxz
ret
addb
cltd
sbb
ja
cmc
shrb
sub
jge
xor
mov
add
aaa
mov
xchg
in
push
loop
bound
mov
sbb
int
sti
out
fdivrs
icebp
or
jnp
add
cmp
add
stos
loope
xchg
push
sti
ret
insl
jle
or
inc
add
rorl
add
sbb
loope
les
shrl
add
iret
ficoml
lods
imul
inc
add
fcomp
push
xor
inc
loopne
cmp
inc
imul
sbb
push
addb
in
mov
sbb
movb
fwait
sub
sub
out
push
pushw
int
mov
xor
adc
cwtl
movsb
xchg
into
fmull
addb
mul
ret
fimuls
rorb
mov
push
add
jge
sbb
cmp
sub
push
shll
movsl
pop
push
or
or
ficoml
mov
sti
cmp
pop
movsb
negb
mov
adc
pop
pop
pusha
add
inc
add
add
jmp
xor
mov
push
sbb
bound
cmp
pop
pop
pop
xchg
jl
insb
pop
imul
cltd
int
push
int
int3
mov
testb
xchg
ret
mov
out
jne
ret
inc
add
aam
add
iret
lret
push
movb
pop
xchg
sbb
outsb
lret
scas
add
xlat
mov
jg
pusha
add
mov
add
inc
out
lret
mov
jo
add
psubb
mul
loopne
jecxz
mov
xchg
vmread
add
xlat
xor
mov
je
enter
add
add
or
lea
adc
in
jne
out
and
arpl
cmp
std
xchg
fsubrl
nop
stc
and
add
xchg
stos
hlt
inc
add
rorb
insb
push
popa
push
sub
add
cltd
mov
lds
fwait
mov
rol
jge
push
and
movsl
mov
cmp
adc
subl
aas
sbb
fisttpll
xor
pop
pop
stc
push
jg
leave
lods
lock
ficoms
stos
enter
add
jecxz
mov
mov
sub
add
push
xor
mov
mov
dec
push
cmp
les
xchg
leave
add
mov
lcall
push
int
add
test
xchg
inc
pop
inc
add
add
js
adc
pop
subl
repnz
imul
lods
pop
xchg
fistl
and
inc
add
inc
xor
movsl
and
cmp
addb
movsb
in
jae
adc
push
outsl
adc
rcll
ror
outsl
pop
add
faddl
roll
jae
inc
pop
add
add
fldpi
mov
jae
and
nop
orl
add
ds
push
fdivrs
pop
shrl
add
aam
dec
cmp
sub
loope
lds
jae
push
sbb
sbb
nop
sbb
jge
xchg
add
mov
movb
mov
push
add
pop
xor
scas
addr16
add
mov
shrl
mov
in
xor
add
out
fwait
add
dec
sub
popf
pop
and
daa
or
sbb
scas
nop
jmp
es
icebp
inc
add
pusha
add
dec
inc
add
fadd
dec
insb
or
fldenv
add
and
cmp
mov
mov
ss
add
fdivrl
dec
dec
or
push
add
push
lods
inc
popa
fcom
std
lcall
popa
sub
fstpt
fwait
outsl
daa
rolb
add
lds
rorb
insl
test
add
orl
add
or
dec
pop
xchg
sar
sbb
inc
add
dec
and
xor
lret
xor
add
dec
mov
push
mov
jno
fldcw
and
stc
scas
stos
ret
add
xchg
ja
movsb
add
jo
add
lahf
mov
pop
repz
push
xor
pusha
add
adc
pop
add
cmp
and
sti
mov
aad
add
xor
lret
add
mov
popf
call
mov
movl
sub
ss
dec
jno
cmpsb
hlt
or
gs
pop
push
xchg
sti
je
jmp
lcall
mov
sbb
fcmove
xchg
pop
out
jae
add
pop
sbb
pop
xchg
xor
sbb
stc
add
xor
push
in
cld
cmpsl
sti
mov
lret
rol
pusha
add
pusha
add
popa
cmpsl
xchg
ret
out
addr16
or
add
xchg
lret
test
pusha
add
aam
ficomps
out
push
aas
dec
dec
negl
inc
add
jle
jbe
gs
add
jo
sti
sbb
add
leave
or
mov
cltd
stos
popa
stos
xchg
lods
mov
int
cmc
addb
and
pop
or
or
xchg
cmp
add
adc
sub
lahf
stos
subl
add
push
bound
dec
pop
push
sbb
test
add
adc
xchg
cmc
adc
popf
rcrl
mov
add
dec
fdivr
cs
aad
lret
ror
ja
push
push
jnp
jae
imul
cmp
cld
sub
push
imul
add
sub
aad
test
loope
adc
sub
addr16
into
ret
fmull
imulb
push
xor
ficompl
push
inc
popf
and
das
insb
sub
lock
scas
sbb
stos
push
push
mov
cmp
loop,pt
or
mov
dec
imul
push
add
jl
dec
into
or
pop
add
add
and
dec
frstor
add
addb
loopne
add
mov
push
pop
sub
cmp
mulb
bnd
mov
lds
pop
sbb
fs
dec
jbe
rcll
mov
cmpsl
jl
jmp
push
add
jmp
fimuls
clc
mov
add
or
les
shr
faddl
push
in
into
into
jp
mov
jbe
mov
outsb
dec
sub
mov
dec
jne
pop
pop
fistps
add
movb
mov
add
xchg
and
int
jns
jmp
clc
mov
flds
add
notb
add
dec
pop
jne
fucomp
fadds
add
add
jg
cmpsb
jnp
lcall
stc
dec
fs
sbb
cmp
add
push
shrl
adc
bound
cmc
xchg
adc
add
jbe
movsl
aaa
inc
add
or
adc
out
or
add
in
jp
lea
sti
jb
sub
cmpsb
pop
jno
push
xchg
fs
lret
jb
test
push
xchg
dec
mov
mov
pop
cmp
dec
int3
test
or
sbb
mov
fstpt
insb
cmpsl
mov
ds
fnstenv
rolb
adcl
iret
dec
aaa
add
cmp
sub
in
pop
push
mov
or
rcl
pop
testb
pop
pop
mov
jae
sub
bndstx
daa
xchg
pusha
add
fsubrl
push
inc
add
ret
repnz
mov
sbb
sbb
fnstsw
mov
ret
add
pop
inc
add
jmp
adc
data16
jge
repz
add
pop
out
jns
adcl
mov
popf
push
add
dec
inc
add
mov
mov
xchg
and
dec
iret
jmp
mov
pop
cmp
pop
or
xchg
inc
or
xlat
sub
jecxz
and
ds
ret
jmp
imul
fistps
loope
popf
sti
leave
insb
jge
pop
add
cmp
loope
lds
call
push
adc
add
inc
add
or
stc
push
add
add
sub
xor
jbe
sub
js
cli
nop
push
arpl
mov
add
nop
js
dec
data16
mov
add
fisttps
sti
xchg
pop
push
jnp
cmpsb
or
data16
cmp
sub
or
adc
push
sbb
arpl
mov
test
aad
in
fisttpll
pop
testl
mov
ja
add
xor
and
lods
dec
mov
add
out
cltd
jp
gs
cltd
pop
push
jge
add
jle
sbb
push
xchg
lahf
push
rolb
ret
mov
addb
sub
jb
mov
adc
push
cmp
or
inc
scas
jo
jno
dec
jae
cmp
add
bound
mov
inc
int
inc
add
ljmp
xor
lea
cmp
movb
imulb
adc
inc
test
mov
pop
and
jae
in
mov
and
movsb
fld
and
add
adc
sub
xor
les
xor
clc
lock
sub
adc
mov
add
xor
add
icebp
xor
cmp
push
adc
jmp
repnz
jo
stc
dec
push
sahf
cmp
xchg
out
lods
mov
pop
ss
jns
mov
ret
jle
sbbl
dec
mov
in
sbb
movsb
lock
adc
sub
xlat
enter
dec
xchg
jnp
cmpsb
outsl
push
jb
inc
addr16
enter
cwtl
or
lcall
das
fwait
lock
mov
cli
xchg
add
mov
fwait
lcall
lahf
xchg
rep
cwtl
cmp
jle
adc
inc
and
loop
int
push
daa
movsb
add
cmpsb
cmp
lcall
or
jbe
cmp
inc
add
sub
sub
leave
push
dec
jae
xorl
mov
nop
lods
sahf
lahf
shlb
out
cltd
imul
jmp
cwtl
movsb
xlat
fs
xchg
and
frstor
jnp
loopne
cmpsb
loopne
jmp
add
inc
aas
je
iret
add
add
push
iret
jno
jno
ret
dec
cli
pop
xchg
mov
xchg
int
push
popf
fisttps
xchg
out
cld
insb
push
cmp
and
cmp
ss
movsl
shlb
add
out
pushf
leave
or
mov
jg
add
and
mov
aad
jns
std
push
rolb
cmpsb
fsubs
adc
loop
add
data16
neg
icebp
mov
and
outsb
jnp
add
mov
adc
int
xorl
cld
cmpl
xchg
and
adc
enter
add
ret
cwtl
in
movsb
call
pop
xlat
outsl
or
xchg
jecxz
in
fcmovnbe
ret
inc
add
ds
imul
arpl
mov
mov
inc
add
dec
inc
mov
xor
jl
mov
add
xor
in
jl
add
xor
lcall
mov
mov
ret
dec
push
or
xchg
push
add
pop
cmp
hlt
mov
scas
movb
pop
cs
mov
cld
pop
ljmp
pop
add
lock
andl
in
lahf
and
add
stos
inc
add
lods
out
mov
add
inc
xchg
repnz
add
push
fsubs
into
push
inc
jmp
mov
mov
push
fidivrl
cmp
add
jae
add
and
sbb
leave
jl
cmp
push
push
add
mov
iret
sbb
jne
add
adc
cld
idiv
fsubr
aas
sub
mov
push
dec
or
inc
add
or
mov
or
add
push
adc
lcall
rolb
in
roll
push
stos
test
or
mov
sub
sbb
and
xchg
jno
imul
inc
add
repz
add
negl
pop
cmp
enter
xchg
out
pop
lea
jns
sbb
cmpsl
punpcklwd
mov
dec
sbb
inc
add
mov
push
ss
fwait
pop
mov
outsl
lods
scas
push
sysret
push
mov
clc
mov
dec
stos
addb
daa
jle
mov
pusha
add
das
fwait
or
pop
cmp
daa
jns
or
mov
shl
xchg
xor
enter
add
cmpsl
call
clc
push
rol
and
xchg
movsl
rolb
mov
mov
jp
inc
add
lods
xor
dec
testl
adc
cmp
mov
ds
push
mov
pop
add
xchg
sbb
push
inc
add
fcmovnbe
mov
aad
shrl
jp
add
add
jo
xchg
icebp
jecxz
addb
dec
push
inc
add
xchg
clc
jb
and
jg
sbb
add
dec
xchg
bound
add
into
or
mov
add
std
loope
mov
add
add
jno
dec
cli
add
mov
incb
pop
outsl
push
rolb
std
iret
call
push
jg
xchg
cs
cmpsl
push
sub
stos
bound
rclb
add
mov
mov
xchg
cmc
stos
int
cmp
fdivl
fs
push
test
and
popf
and
xor
and
aam
insl
arpl
inc
add
jnp
cmp
sub
lcall
add
add
imul
add
ds
rcll
aaa
dec
pop
enter
inc
and
imul
stc
or
sub
out
pop
daa
out
ds
sbb
enter
test
push
test
jnp
fcmovnu
in
cmp
mov
add
dec
lock
pusha
add
inc
lret
je
test
add
lret
enter
add
jnp
rolb
inc
dec
pop
jmp
adc
lahf
jmp
paddsw
and
aas
cmp
dec
push
push
and
cmp
test
test
pop
or
.byte
