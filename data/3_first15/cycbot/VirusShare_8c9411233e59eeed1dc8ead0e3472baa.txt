mov
loopne
movsl
loopne
dec
mov
loopne
rep
loopne
add
loopne
lret
mov
loopne
sbb
loopne
test
loopne
insb
movsb
loopne
pushf
mov
loopne
xchg
mov
loopne
add
loopne
nop
cmpsl
loopne
xor
mov
movsb
loopne
or
loopne
mov
loopne
cmp
loopne
sbb
loopne
inc
mov
loopne
test
loopne
dec
test
loopne
push
mov
loopne
cmpsl
loopne
andb
mov
cmpsl
loopne
cmc
movsl
loopne
iret
movsl
loopne
push
test
mov
movsb
loopne
test
movsl
loopne
xchg
cmpsb
loopne
inc
test
mov
mov
loopne
ret
cmpsb
loopne
cltd
movsb
loopne
repnz
loopne
int
loopne
cmp
movsl
loopne
jl
loopne
movsl
mov
loopne
test
loopne
sbb
loopne
fisubrl
loopne
jp
loopne
cmp
loopne
daa
movsb
loopne
pusha
movsl
loopne
cmp
loopne
andb
mov
cmpsl
loopne
cltd
mov
loopne
xchg
test
mov
cmpsl
loopne
cmp
loopne
cli
mov
loopne
lcall
mov
movsb
loopne
and
loopne
cmp
loopne
mov
loopne
andb
mov
movsb
loopne
jb
loopne
movsl
loopne
scas
mov
loopne
loopne
xchg
test
mov
cmpsl
loopne
ret
mov
cmpsb
loopne
lea
loopne
xor
loopne
and
loopne
inc
movsb
loopne
andl
mov
test
mov
mov
loopne
in
cmpsb
loopne
mov
loopne
fbld
loopne
sub
loopne
fbld
loopne
aaa
test
loopne
jmp
mov
loopne
xchg
loopne
dec
test
loopne
test
loopne
jne
loopne
test
mov
loopne
fisubl
loopne
push
movsb
loopne
insl
cmpsl
loopne
add
loopne
xlat
cmpsb
loopne
jl
loopne
and
loopne
inc
test
loopne
sub
loopne
in
test
mov
movsl
loopne
and
loopne
cmpsb
loopne
or
loopne
and
loopne
lcall
mov
mov
loopne
movsb
loopne
and
loopne
or
loopne
ret
mov
cmpsb
loopne
dec
mov
loopne
cmpsl
movsl
loopne
lods
mov
loopne
dec
test
mov
movsb
loopne
lret
movsb
loopne
in
mov
loopne
sub
loopne
mov
mov
loopne
jg
loopne
movsb
mov
loopne
pop
mov
loopne
shll
loopne
add
mov
loopne
inc
mov
loopne
int3
mov
loopne
mulb
loopne
mov
cmpsl
loopne
clc
mov
loopne
or
loopne
lods
cmpsb
loopne
loopne
loopne
mov
cmpsl
loopne
pop
test
loopne
shll
loopne
xchg
loopne
mov
movsb
loopne
nop
movsb
loopne
mov
loopne
add
test
mov
movsb
loopne
jno
loopne
sahf
mov
loopne
and
loopne
sbb
loopne
cmpsb
loopne
inc
cmpsl
loopne
addr16
cmpsl
cmpsb
loopne
and
mov
mov
loopne
push
mov
loopne
pusha
cmpsl
loopne
ljmp
mov
mov
loopne
movsl
loopne
lds
loopne
pop
mov
loopne
or
loopne
fisubs
loopne
loope
loopne
shld
mov
movsb
loopne
pop
movsl
loopne
pop
test
loopne
pop
test
mov
cmpsl
loopne
aas
movsb
loopne
pushf
mov
loopne
and
loopne
aam
loopne
aas
test
loopne
jne
loopne
xchg
mov
loopne
and
loopne
iret
cmpsl
loopne
subb
mov
test
mov
movsb
loopne
jp
loopne
xchg
movsb
loopne
mov
loopne
inc
cmpsl
loopne
inc
mov
loopne
add
cmpsl
loopne
js
loopne
scas
cmpsb
loopne
test
test
loopne
xchg
cmpsb
loopne
cmp
mov
loopne
int3
movsb
loopne
pop
mov
loopne
out
loopne
outsl
movsb
loopne
or
mov
movsl
loopne
ljmp
mov
mov
loopne
scas
mov
loopne
cmp
mov
loopne
movsl
mov
loopne
dec
mov
loopne
cmp
loopne
rep
loopne
push
movsl
loopne
xchg
loopne
iret
movsb
loopne
int
loopne
sbb
mov
loopne
dec
cmpsl
loopne
mov
movsl
loopne
out
mov
loopne
xchg
mov
loopne
add
loopne
mov
mov
loopne
cmp
loopne
mov
test
mov
movsl
loopne
inc
test
mov
movsl
loopne
movsb
loopne
jae
loopne
jnp
loopne
fisubl
loopne
mov
loopne
aad
loopne
cld
movsl
loopne
les
loopne
lea
loopne
andb
mov
cmpsb
loopne
pop
test
loopne
jecxz
loopne
push
mov
loopne
test
mov
cmpsl
loopne
sub
loopne
cmpsl
loopne
aas
cmpsl
loopne
pop
test
loopne
xor
mov
loopne
adc
test
loopne
push
mov
loopne
mull
loopne
push
cmpsb
loopne
and
loopne
cmc
movsb
loopne
call
cmpsb
loopne
cmpsl
mov
loopne
cltd
mov
loopne
loopne
dec
movsb
loopne
insb
cmpsb
loopne
mov
mov
loopne
jbe
loopne
adc
loopne
cmpsl
test
mov
mov
loopne
mov
test
loopne
pop
mov
loopne
imul
loopne
cwtl
test
mov
mov
loopne
cmpsl
loopne
call
mov
loopne
loopne
loopne
loopne
enter
xor
loopne
test
cmpsl
loopne
mov
mov
loopne
movsb
loopne
in
loopne
das
movsl
loopne
jae
loopne
out
movsl
loopne
cltd
cmpsl
loopne
js
loopne
test
loopne
popa
mov
loopne
nop
mov
loopne
cmpsb
loopne
push
cmpsb
loopne
push
mov
loopne
mov
movsl
loopne
movsb
loopne
loop
loopne
push
movsb
loopne
sbb
loopne
mov
loopne
movsl
cmpsl
loopne
outsb
mov
loopne
mov
loopne
in
loopne
test
movsb
loopne
in
loopne
dec
mov
loopne
add
loopne
pop
test
loopne
aas
mov
loopne
outsl
cmpsl
loopne
push
loopne
pop
mov
loopne
lea
loopne
pop
movsb
loopne
shlb
loopne
ja
loopne
mov
loopne
sub
mov
cmpsl
loopne
adc
loopne
sub
loopne
aad
loopne
fldt
loopne
inc
test
mov
movsl
loopne
jmp
loopne
fldcw
loopne
sbb
loopne
pop
movsb
loopne
cwtl
test
mov
mov
loopne
dec
movsl
loopne
cmpsl
mov
loopne
xor
mov
loopne
addr16
andb
mov
mov
loopne
test
mov
mov
loopne
sub
loopne
pop
test
mov
cmpsl
loopne
push
mov
loopne
adc
loopne
test
loopne
jmp
loopne
std
movsl
loopne
mov
loopne
xchg
movsb
loopne
test
mov
loopne
push
test
mov
cmpsl
loopne
push
test
loopne
jo
loopne
lds
mov
movsb
loopne
andb
mov
cmpsl
loopne
outsb
mov
loopne
fbld
loopne
insb
movsl
loopne
pop
mov
loopne
inc
cmpsb
loopne
xlat
cmpsl
loopne
xchg
movsb
loopne
shlb
loopne
dec
mov
loopne
les
loopne
ds
mov
movsb
loopne
pop
mov
loopne
insb
mov
loopne
sbb
loopne
push
cmpsb
loopne
mov
mov
test
loopne
cmpsl
loopne
dec
mov
loopne
xchg
loopne
mov
loopne
mov
loopne
lods
movsl
loopne
ret
mov
cmpsb
loopne
nop
mov
loopne
jmp
loopne
add
mov
test
mov
mov
loopne
jmp
loopne
nop
movsb
loopne
movsl
cmpsb
loopne
inc
test
mov
mov
loopne
fldenv
loopne
push
cmpsb
loopne
or
loopne
cmc
movsl
loopne
pop
movsl
loopne
mov
loopne
push
test
loopne
xor
loopne
leave
cmpsb
loopne
and
loopne
jnp
loopne
cmpsl
loopne
cmpsb
cmpsl
loopne
xor
mov
test
mov
mov
loopne
push
cmpsl
loopne
fisubs
loopne
call
movsb
loopne
lret
test
mov
cmpsb
loopne
pop
cmpsl
loopne
mov
loopne
js
loopne
hlt
mov
loopne
cwtl
cmpsl
loopne
test
loopne
mov
movsb
loopne
mulb
loopne
adc
loopne
in
loopne
adc
loopne
inc
mov
loopne
dec
mov
loopne
pusha
cmpsb
loopne
cwtl
movsl
loopne
push
movsl
loopne
ret
test
mov
mov
loopne
mov
loopne
mov
mov
loopne
movsl
cmpsb
loopne
shrl
loopne
xor
loopne
outsb
movsb
loopne
xor
loopne
out
movsl
loopne
test
loopne
cmp
mov
mov
loopne
sti
mov
loopne
cwtl
cmpsl
loopne
xchg
loopne
pop
mov
loopne
mov
loopne
dec
cmpsl
loopne
add
mov
movsl
loopne
xcrypt-cfb
mov
movsl
loopne
mov
mov
loopne
push
movsb
loopne
add
loopne
aas
mov
loopne
cmp
loopne
aaa
movsl
loopne
cli
cmpsb
loopne
daa
cmpsl
loopne
jo
loopne
xchg
test
mov
mov
loopne
jg
loopne
mov
mov
loopne
mov
mov
loopne
lock
loopne
or
loopne
xchg
test
mov
movsb
loopne
out
mov
loopne
mov
cmpsb
loopne
frstor
loopne
inc
movsl
loopne
sub
loopne
test
cmpsb
loopne
pop
cmpsb
loopne
mov
loopne
movsb
loopne
ret
movsb
loopne
xchg
cmpsl
loopne
aas
cmpsl
loopne
nop
cmpsb
loopne
popf
mov
loopne
popa
mov
loopne
mull
loopne
adc
loopne
jmp
loopne
xchg
mov
loopne
lods
mov
loopne
inc
test
mov
mov
loopne
xchg
cmpsb
loopne
andb
popa
mov
loopne
and
loopne
mov
loopne
les
loopne
mov
movsl
loopne
mov
mov
loopne
cltd
movsb
loopne
out
movsb
loopne
xchg
mov
loopne
cmc
test
mov
mov
loopne
repz
loopne
push
test
mov
mov
loopne
mov
loopne
and
loopne
call
mov
loopne
out
mov
loopne
cmpsl
loopne
lock
loopne
sahf
mov
loopne
inc
cmpsb
loopne
or
loopne
mov
loopne
fsubs
loopne
insb
mov
loopne
mov
loopne
shlb
mov
mov
loopne
or
loopne
into
cmpsl
loopne
sbb
loopne
shll
loopne
jg
loopne
add
mov
cmpsl
loopne
je
loopne
pop
test
mov
movsb
loopne
sti
movsb
loopne
test
mov
loopne
inc
mov
loopne
cmp
loopne
cmpsb
loopne
jo
loopne
in
loopne
aas
mov
loopne
jl
loopne
ds
loopne
test
test
mov
cmpsb
loopne
cli
mov
loopne
pop
movsb
loopne
clc
cmpsl
loopne
push
mov
loopne
add
loopne
scas
movsb
loopne
xor
loopne
sub
loopne
lea
loopne
call
test
mov
mov
loopne
andb
enter
sahf
mov
loopne
pop
cmpsl
loopne
jns
loopne
arpl
loopne
pop
test
loopne
cld
mov
loopne
jmp
loopne
daa
movsb
loopne
mov
loopne
fldenv
loopne
push
mov
loopne
je
loopne
std
movsb
loopne
jns
loopne
repnz
loopne
sub
test
mov
movsl
loopne
add
test
mov
movsb
loopne
dec
cmpsl
loopne
fwait
mov
loopne
test
loopne
or
loopne
fbld
loopne
pushf
movsl
loopne
je
loopne
loope
loopne
imul
loopne
fldenv
loopne
out
loopne
xchg
cmpsl
loopne
out
mov
loopne
pusha
cmpsb
loopne
imul
mov
mov
loopne
in
loopne
jmp
loopne
test
loopne
sti
movsb
loopne
inc
cmpsb
loopne
test
loopne
clc
movsb
loopne
fisubs
mov
test
mov
movsl
loopne
jb
loopne
inc
mov
loopne
mov
test
loopne
ja
loopne
enter
jp
loopne
and
loopne
mov
loopne
mov
mov
loopne
sahf
movsb
loopne
sbb
test
mov
mov
loopne
fisubrl
loopne
dec
mov
loopne
fsubs
loopne
stc
cmpsb
loopne
mov
cmpsb
loopne
push
test
loopne
pop
cmpsl
loopne
pop
cmpsb
loopne
lahf
cmpsb
loopne
test
mov
loopne
sbb
loopne
xor
mov
mov
loopne
fisubl
loopne
aam
loopne
mov
loopne
movsb
mov
loopne
fldenv
loopne
cmp
loopne
xchg
cmpsb
loopne
test
loopne
push
mov
loopne
cmp
loopne
sbb
loopne
repnz
loopne
and
loopne
fldenv
mov
movsl
loopne
inc
test
loopne
inc
test
loopne
mulb
loopne
cmp
mov
loopne
movsb
loopne
push
test
loopne
cmp
loopne
push
movsl
loopne
lahf
mov
loopne
test
test
loopne
mov
mov
loopne
xchg
mov
mov
loopne
in
loopne
xlat
cmpsl
loopne
gs
mov
mov
loopne
push
test
loopne
jmp
loopne
int3
test
mov
cmpsb
loopne
pusha
mov
loopne
bound
loopne
and
loopne
nop
cmpsb
loopne
jnp
loopne
mov
loopne
subb
mov
mov
loopne
push
mov
loopne
mov
loopne
cmp
mov
mov
loopne
or
movsl
loopne
stc
test
mov
cmpsb
loopne
mov
cmpsb
loopne
cmpsl
mov
loopne
mov
movsl
loopne
cmp
loopne
cmpsl
loopne
or
loopne
jbe
loopne
push
loopne
pop
mov
loopne
mov
movsl
loopne
iret
mov
loopne
mov
movsl
loopne
int
loopne
dec
cmpsl
loopne
and
loopne
ret
cmpsl
loopne
cmp
mov
mov
loopne
adc
loopne
inc
movsb
loopne
dec
mov
loopne
push
mov
loopne
in
mov
loopne
insb
mov
loopne
shlb
cmc
cmpsb
loopne
nop
cmpsl
loopne
xchg
loopne
test
mov
cmpsl
loopne
jmp
loopne
sub
movsl
loopne
bound
loopne
push
movsl
loopne
mov
loopne
daa
test
loopne
adc
loopne
repz
loopne
mov
loopne
fsubrl
loopne
mov
loopne
imul
mov
movsb
loopne
xlat
mov
loopne
in
movsl
loopne
dec
mov
loopne
imulb
loopne
inc
mov
loopne
shlb
mov
mov
loopne
andb
mov
test
mov
movsb
loopne
add
loopne
dec
movsb
loopne
lea
loopne
cwtl
movsl
loopne
jmp
loopne
int
loopne
or
loopne
dec
mov
loopne
push
movsl
loopne
push
mov
loopne
jg
loopne
xchg
mov
loopne
or
loopne
push
mov
loopne
cmpsb
loopne
mov
mov
loopne
adc
loopne
inc
cmpsb
loopne
xchg
cmpsb
loopne
adc
loopne
inc
movsb
loopne
cmc
mov
loopne
adc
loopne
movsl
loopne
pop
movsb
loopne
cmp
test
loopne
sbb
loopne
inc
movsb
loopne
xor
loopne
inc
cmpsl
loopne
jp
loopne
enter
std
mov
loopne
andb
mov
test
loopne
aad
loopne
inc
cmpsb
loopne
pop
test
mov
test
mov
test
loopne
xchg
movsl
loopne
and
loopne
add
loopne
mov
loopne
cmp
mov
loopne
sbb
loopne
mov
cmpsl
loopne
shlb
mov
mov
loopne
mulb
mov
mov
loopne
adc
loopne
andl
mov
mov
loopne
cmp
loopne
cmpsl
test
mov
test
mov
mov
loopne
adc
test
mov
movsb
loopne
mov
movsl
loopne
stos
mov
loopne
scas
movsb
loopne
jl
loopne
int
loopne
pop
mov
loopne
loope
loopne
add
loopne
shlb
sub
loopne
inc
movsb
loopne
pop
movsl
loopne
mov
loopne
fisubs
mov
movsl
loopne
xor
loopne
scas
mov
loopne
mov
loopne
cmp
mov
loopne
les
loopne
repnz
loopne
cmpsl
loopne
fsubl
loopne
and
mov
loopne
sub
cmpsl
loopne
cltd
cmpsl
loopne
pop
movsb
loopne
inc
mov
loopne
xchg
mov
loopne
xchg
mov
loopne
aaa
mov
loopne
lock
loopne
loop
loopne
in
mov
loopne
jnp
loopne
mov
loopne
mov
movsb
loopne
xchg
mov
loopne
aaa
test
mov
mov
loopne
pop
mov
loopne
mov
movsb
loopne
cmpsl
loopne
shlb
mov
cmpsl
loopne
xchg
mov
loopne
daa
test
loopne
insb
mov
loopne
mov
cmpsl
loopne
add
loopne
push
movsl
loopne
jno
loopne
add
loopne
data16
loopne
and
mov
movsb
loopne
lea
loopne
js
loopne
push
movsb
loopne
int
loopne
movsl
loopne
repz
loopne
movsb
loopne
out
mov
loopne
inc
mov
loopne
mov
mov
loopne
xchg
test
mov
cmpsb
loopne
sahf
movsb
loopne
cmpsb
loopne
push
test
loopne
add
movsl
loopne
push
movsl
loopne
int
loopne
std
mov
loopne
cmp
loopne
cs
loopne
xor
movsl
loopne
jl
loopne
lcall
mov
movsb
loopne
shll
loopne
arpl
loopne
sbb
test
mov
mov
loopne
fwait
test
mov
mov
loopne
ret
cmpsl
loopne
push
movsl
loopne
xor
loopne
xchg
cmpsl
loopne
ljmp
mov
cmpsl
loopne
pop
movsl
loopne
mov
loopne
mov
movsl
loopne
push
test
loopne
jge
loopne
or
loopne
test
mov
loopne
shrb
loopne
and
mov
loopne
je
loopne
pop
mov
loopne
dec
movsb
loopne
lret
cmpsl
loopne
jbe
loopne
aad
loopne
mov
loopne
mov
mov
loopne
test
loopne
stc
mov
loopne
cmpsb
loopne
pushf
mov
loopne
jmp
loopne
mov
loopne
cmpsl
loopne
das
movsb
loopne
dec
movsb
loopne
add
loopne
insb
mov
loopne
xchg
movsl
loopne
cmpsb
loopne
lea
loopne
sahf
test
mov
movsb
loopne
leave
mov
loopne
popf
test
mov
cmpsl
loopne
test
loopne
and
loopne
dec
test
loopne
xchg
mov
loopne
pop
test
loopne
push
mov
loopne
loop
loopne
inc
cmpsb
loopne
lock
loopne
movsb
test
mov
mov
loopne
adc
loopne
xchg
mov
loopne
stc
mov
loopne
cs
mov
movsl
loopne
movsb
loopne
mov
cmpsl
loopne
test
loopne
mov
loopne
xchg
loopne
dec
mov
loopne
subl
mov
cmpsl
loopne
cmp
loopne
hlt
mov
loopne
pop
mov
loopne
mov
loopne
aam
loopne
xor
mov
movsl
loopne
mov
loopne
jo
loopne
imul
loopne
or
loopne
add
loopne
mov
cmpsb
loopne
jecxz
loopne
adc
cmpsl
loopne
pop
test
loopne
outsb
mov
loopne
xor
loopne
out
loopne
mov
movsb
loopne
loopne
or
loopne
stos
cmpsb
loopne
xor
loopne
inc
movsb
loopne
cmp
loopne
lods
mov
loopne
lods
movsl
loopne
andb
mov
add
mulb
add
jle
clc
jne
push
dec
in
push
push
enter
push
loopne
xor
add
mov
or
lea
lret
movsl
clc
add
xor
add
aam
js
clc
jo
add
or
push
add
ds
xor
jle
into
jns
push
push
add
sub
inc
clc
cmp
fwait
adc
add
clc
inc
add
push
jmp
add
clc
inc
add
and
add
loope
fstpt
cmp
clc
cmp
push
add
xchg
sbb
push
enter
xor
add
sahf
repz
mov
fcompl
jns
daa
clc
cltd
bound
add
mov
add
sar
pop
push
jl
out
incb
add
into
xchg
dec
xbegin
clc
std
mov
clc
iret
add
add
pop
cld
xchg
icebp
cmp
or
mov
pop
je
jle
clc
idivl
xchg
push
clc
jbe
clc
cmp
lcall
hlt
dec
xbegin
add
dec
sbb
cmpsb
clc
ds
cwtl
mull
adc
add
jmp
sub
clc
loopne
fistpll
aaa
loopne
cwtl
loopne
ja
add
lods
insl
xchg
movsl
clc
cmp
and
add
enter
jno
add
inc
add
icebp
data16
cli
add
add
add
mov
fistpl
ljmp
insb
jp
add
mov
sarb
sbb
lods
inc
add
pop
jnp
add
jmp
pop
rcl
int
xabort
sbb
fistpll
add
xor
and
adc
add
add
test
inc
clc
dec
xor
add
add
jecxz
xchg
out
negb
or
mov
add
push
add
sbb
xchg
xlat
popf
push
rcr
cmpsb
clc
xor
add
stos
test
loopne
jae
add
ret
clc
sub
sar
clc
mov
add
out
outsl
out
rclb
xchg
dec
push
sbb
test
daa
clc
cmc
mov
mov
inc
add
pop
insb
xchg
and
add
pop
clc
pop
lods
sub
push
bound
add
mov
clc
push
fstpl
inc
add
adc
add
clc
out
enter
mov
clc
sub
in
insl
imul
pop
clc
mull
add
jae
add
xchg
pushf
iret
xor
lret
aaa
xchg
sbb
fimuls
rcr
leave
daa
clc
ljmp
out
push
or
mov
ds
push
add
aam
jecxz
lret
clc
call
sti
imul
clc
push
add
insl
adc
add
xor
jge
xor
add
fldl
jg
clc
in
or
dec
cmp
in
js
add
mov
add
add
add
cmpsb
clc
fisubs
jne
pushf
imul
inc
add
cmp
pop
sub
clc
lahf
xchg
clc
sub
add
pop
aad
dec
js
dec
jb
add
add
out
sbb
pop
pop
xor
inc
add
call
clc
xchg
pop
sub
clc
data16
divl
add
add
add
add
mov
cmpsl
clc
das
mov
cs
add
clc
jnp
xchg
mov
add
and
add
enter
test
imul
mov
add
sub
fsubrl
jnp
cmc
arpl
add
pop
bound
add
out
push
mov
ljmp
scas
jge
clc
lret
gs
cmp
sub
add
cmp
jns
clc
mov
ljmp
xchg
jl
jns
out
add
add
add
add
push
adc
add
minps
clc
ljmp
add
add
clc
push
clc
loopne
clc
pop
jno
add
add
sar
stc
mov
repz
add
pop
popf
dec
mov
add
cwtl
inc
clc
xchg
sub
sar
add
in
xor
clc
mov
aam
sub
addr16
adc
add
std
push
add
pop
pop
sar
inc
add
jo
add
add
psubb
add
jecxz
cmovns
pushf
sub
xor
add
outsl
in
xchg
add
add
clc
popa
add
scas
adc
add
add
add
add
dec
pop
and
xlat
sbb
clc
aaa
outsl
inc
clc
pop
es
test
notl
add
cmp
jmp
push
add
or
lock
fcmovnbe
mov
clc
in
ja
xchg
mov
xchg
pop
clc
pop
mov
push
add
rorl
add
add
mov
clc
jno
add
lret
jl
or
into
cmp
cmp
or
add
add
add
mov
clc
cmp
sbb
clc
add
add
dec
cmp
clc
repnz
adc
add
mov
leave
mov
mov
in
push
sub
lea
push
push
push
push
call
sub
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
xchg
sub
add
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
ret
pop
jmp
jmp
andl
mov
lea
push
push
push
pushl
lret
leave
addr16
pushf
push
add
das
inc
add
test
inc
clc
arpl
add
aam
dec
adc
iret
ljmp
and
add
lods
push
add
and
clc
xor
xchg
lods
push
repz
add
clc
inc
clc
mov
cmp
add
shll
leave
aam
add
lods
sbb
push
add
push
inc
clc
pop
popa
add
dec
test
jnp
clc
lock
cs
mov
add
push
push
fwait
jmp
mov
jge
clc
leave
in
jg
clc
push
dec
jae
add
and
clc
dec
lahf
loopne
shrl
adc
add
iret
mov
add
mov
push
sbb
mov
dec
or
fmuls
add
sbb
add
lcall
into
xlat
jecxz
ret
cmp
add
mov
cmp
data16
sbb
push
add
and
xchg
push
add
add
inc
add
cld
sub
sub
pop
clc
bound
add
add
add
add
clc
dec
dec
or
cmp
mov
clc
add
add
add
mov
adc
add
roll
pop
sbb
add
out
jmp
clc
lret
bound
add
clc
mov
das
repnz
add
pop
dec
out
sbb
movzwl
fwait
jmp
adc
xchg
ret
clc
fwait
push
bound
add
add
dec
lods
push
dec
call
jmp
cmpsb
or
clc
cmc
inc
add
dec
aas
js
decb
xchg
add
fdivr
lea
fwait
jmp
cmpsb
das
or
clc
mov
clc
inc
clc
mov
push
sbb
stos
bound
add
and
add
cmp
jns
clc
ja
xchg
xchg
xchg
add
and
add
adc
leave
jge
leave
add
add
jmp
cli
and
pushf
add
fwait
jmp
or
push
aam
add
xchg
jecxz
sbb
mov
mov
clc
repnz
push
idivl
mov
or
lods
lcall
add
fwait
jmp
dec
scas
aaa
dec
sar
popa
add
ss
fmull
or
add
mov
pushf
test
clc
in
int3
cmp
clc
xor
add
adc
add
lods
lcall
gs
mov
cmp
sbb
clc
stos
mov
add
or
clc
inc
clc
cmp
into
loopne
insb
pushf
inc
add
mov
mov
or
add
fnstsw
cmp
ret
ds
mov
jmp
adc
clc
xchg
imul
add
loopne
pop
hlt
push
add
cmp
add
pop
aam
out
mov
shr
ljmp
add
add
sub
add
fnstsw
adc
stos
lods
push
add
clc
pop
clc
pop
cmp
testl
clc
jecxz
mov
mov
add
pop
jbe
les
fwait
jmp
nop
and
clc
sub
mov
push
fwait
jmp
add
imul
clc
xor
add
add
add
add
add
ds
pusha
add
lcall
int3
pop
pop
cmp
xchg
sub
lahf
fsubrp
jmp
clc
cld
js
adc
add
add
scas
mov
clc
mov
or
jno
add
add
mov
push
inc
clc
mov
in
jns
cld
icebp
mov
add
mov
out
xabort
add
xchg
ret
clc
push
sub
leave
adc
add
sar
cmp
adc
add
xchg
inc
clc
adc
add
and
add
test
cmpsb
clc
addr16
out
fs
nopl
add
cmp
push
add
movsl
clc
cmp
add
pop
cs
sarl
mov
dec
inc
add
mov
bnd
clc
scas
or
mov
add
add
sub
clc
ret
clc
stos
cmp
test
clc
sbb
add
dec
fsubp
clc
add
add
mov
add
dec
lret
add
call
add
add
pop
cmp
sar
push
add
add
xlat
cmp
add
sbb
aam
clc
sub
clc
out
xchg
sub
ret
cmp
clc
mov
sub
push
fwait
es
cmp
add
test
faddl
add
fwait
jmp
push
add
idivb
cli
pop
cmp
jbe
inc
add
decl
dec
add
inc
sub
sub
cmp
out
sahf
in
lcall
pop
sbb
add
add
ss
add
dec
loopne
mov
jnp
xchg
add
add
clc
jge
sbb
fnsave
add
add
add
cs
mov
sub
add
lods
icebp
add
add
clc
iret
repnz
add
add
add
sub
dec
pop
push
cmp
leave
inc
clc
ret
clc
mov
add
aas
aad
clc
mov
add
dec
mov
cmp
mov
clc
xor
add
adc
add
add
clc
int
add
add
add
jne
sbb
and
sub
mov
add
cmp
mov
push
sahf
cwtl
xor
add
or
add
clc
mov
clc
mov
stos
pop
test
in
jp
ret
add
sub
add
cmp
clc
and
add
mov
add
xor
add
adc
in
sbb
push
ret
add
clc
mov
pop
push
add
push
clc
cltd
mov
mov
pop
in
adc
add
push
add
sar
inc
add
mov
pop
mov
clc
xor
add
clc
fistps
aad
cld
push
xor
fnstenv
sub
add
push
fwait
jmp
xor
arpl
add
clc
loopne
cmp
std
inc
clc
sar
jp
aam
add
jbe
sub
add
dec
rcll
add
rolb
add
add
jb
add
or
out
movsl
clc
mov
mov
mov
imul
mov
arpl
add
stos
mov
jmp
add
clc
mov
clc
inc
clc
jge
xor
add
test
xbegin
push
inc
add
loopne
jo
add
add
sub
clc
pop
adc
outsb
mov
clc
jo
add
stc
xchg
xchg
outsb
sub
into
push
push
fwait
jmp
inc
fs
mov
xor
add
ret
clc
in
sti
stos
xchg
jl
push
adc
add
sub
xabort
xchg
sub
add
scas
lcall
mov
clc
aad
push
fwait
jmp
fwait
or
add
add
pop
jo
add
clc
bound
add
aas
jb
add
jb
add
add
loope
cmp
cmp
clc
cwtl
mov
ja
add
mov
aam
pop
ficomps
and
add
clc
dec
shrb
pushf
push
jnp
add
cli
or
add
ret
jnp
cmp
jmp
pop
lcall
add
sub
int3
neg
mov
push
mulb
add
jecxz
inc
add
xchg
jecxz
and
add
add
js
adc
add
xchg
dec
pop
mov
clc
outsl
addr16
fstps
out
outsl
sbb
clc
pop
loope
mov
aaa
sbb
in
jne
stos
cmp
testl
jbe
push
clc
pushf
nop
mov
outsl
jecxz
sub
mov
cld
or
pop
or
add
scas
aaa
push
clc
into
sar
lock
pop
clc
inc
clc
add
add
leave
lahf
cmp
ja
jg
xchg
inc
add
sub
adc
add
mov
push
add
pop
scas
adc
add
cmp
dec
cmp
add
pushf
in
gs
mul
clc
cmp
or
jmp
and
out
push
add
mov
mov
clc
xor
add
add
sar
and
add
sar
outsl
push
add
fwait
jmp
cwtl
fs
pop
sub
insb
jmp
sbb
jmp
xor
add
test
inc
add
aam
clc
pop
stos
movsl
clc
adc
inc
clc
shr
incl
pop
and
jmp
dec
push
dec
mov
clc
data16
roll
add
or
fwait
jmp
or
mov
push
add
data16
mov
add
add
lock
mov
add
clc
cmp
sbb
repz
add
jle
clc
inc
clc
and
fistps
cli
clc
add
add
clc
add
push
lods
pusha
add
adc
add
clc
xchg
mov
sarb
bsr
lock
cs
add
test
pop
in
or
add
mull
xchg
xchg
ljmp
cltd
cmp
dec
inc
add
xchg
aas
dec
add
out
lock
add
leave
out
aam
pop
jb
add
imul
ret
clc
fcoml
push
iret
xbegin
ja
xor
add
add
pop
clc
cmp
xchg
pop
ljmp
add
jne
or
cmp
add
clc
mov
cmp
clc
clc
jbe
dec
sbb
clc
aad
xchg
sahf
xchg
inc
clc
push
cmp
sbb
clc
lret
jmp
fwait
jmp
mov
and
add
add
xchg
fstl
cld
sahf
cmp
add
pop
clc
sub
add
test
rcrb
add
inc
add
adc
mov
fwait
jmp
sub
ja
adc
add
clc
sub
jp
jp
xchg
push
add
cld
push
stos
ljmp
clc
fucomip
out
sahf
add
add
clc
repnz
clc
mov
mov
add
xor
cwtl
sub
in
lods
fs
push
add
cli
cmpsl
clc
mov
cwtl
mov
pop
inc
clc
aam
clc
push
clc
xor
add
adc
jg
cmp
sar
push
mov
or
pop
add
pop
add
or
clc
outsl
sbb
or
clc
xchg
add
add
repz
add
sub
lods
mov
mov
add
sub
clc
mov
xchg
das
mov
jmp
pop
je
mov
clc
push
fs
jmp
xor
clc
ret
dec
scas
pop
icebp
imul
adc
add
sub
sbb
sahf
call
add
sub
or
aaa
gs
in
fists
movsb
clc
cs
repnz
and
add
cli
scas
mov
pop
lods
pop
test
or
enter
and
add
clc
add
add
clc
adc
add
add
ja
push
add
pop
clc
addr16
lcall
repz
add
stos
aaa
dec
ljmp
clc
cmp
jge
mov
mov
fmull
lahf
jmp
mov
add
add
sarl
movsl
clc
movsb
clc
cmpsb
clc
shr
or
adc
add
aaa
stc
clc
mov
xor
add
fwait
jmp
es
nop
into
xor
add
mov
fwait
jmp
adc
sub
clc
push
dec
cmp
icebp
pop
fmul
push
paddd
clc
jl
fstpl
inc
clc
test
repnz
clc
outsl
xor
add
mov
jge
clc
adc
add
lret
jle
mov
push
popa
add
lret
jg
clc
lahf
jle
sar
add
mov
sub
clc
push
add
rorb
scas
pop
cltd
push
aad
clc
ja
shll
adc
add
xabort
addr16
dec
hlt
pop
int3
stos
xor
sbb
imul
in
outsb
cmp
clc
inc
clc
and
add
clc
clc
jmp
fcmovb
clc
cmp
mov
clc
dec
sub
mov
add
fldenv
clc
jecxz
mov
mov
lahf
clc
ret
clc
push
cmp
rclb
mov
test
out
and
add
clc
data16
cmp
pusha
add
inc
add
call
push
imul
jno
clc
insb
mov
inc
add
mov
pop
mov
cmp
xchg
cmc
mov
sar
add
fwait
jmp
pop
sub
clc
arpl
add
adc
into
arpl
add
dec
fwait
es
mov
xlat
lahf
jne
add
xchg
xor
add
or
lret
int
popa
add
xor
add
sysret
clc
popf
mov
add
fdivrl
xchg
and
sti
and
add
int
clc
out
movsl
clc
hlt
lret
es
repz
clc
fbstp
add
stc
cmp
mov
popa
add
leave
xbegin
sahf
sbb
ss
add
lods
or
sahf
lahf
inc
clc
std
xor
mov
jmp
fwait
jmp
push
lock
add
clc
pop
cwtl
ss
or
sar
cmp
pop
mov
clc
jne
popa
add
or
push
add
hlt
ss
pop
in
and
add
sbb
shll
add
add
fldpi
pop
cmp
sar
clc
mov
add
clc
dec
in
mov
xchg
mov
add
pop
push
add
je
add
sar
add
xor
add
clc
xchg
mov
clc
or
clc
mov
aam
and
add
pop
xchg
ss
fcoml
add
clc
repnz
clc
stc
pop
xchg
loope
sar
sub
add
clc
jbe
repnz
adc
add
or
sar
clc
adc
xchg
push
clc
or
pushf
mov
daa
clc
aas
enter
mov
clc
fmuls
mov
clc
dec
push
es
pop
mov
add
mov
fmull
daa
clc
test
pop
aaa
mov
cs
push
jmp
clc
inc
add
imul
enter
insb
xchg
mov
leave
mov
add
xor
fistps
stos
push
add
add
lret
aas
jle
push
fwait
jmp
scas
sbbb
push
pop
clc
aaa
xchg
stos
jno
add
jne
clc
sbb
jne
clc
mov
push
fwait
jmp
scas
ja
insb
sbb
add
clc
lea
add
sub
add
add
adc
add
pop
popf
pop
test
das
aam
clc
pusha
add
roll
clc
dec
mov
xabort
mov
and
fstpt
shll
imulb
fidivrs
sbb
jmp
cmp
fmuls
clc
fisttpll
and
add
mov
gs
mov
push
fsubr
in
int
inc
clc
mov
jge
mov
add
fdivrl
in
jno
add
sbb
add
fwait
jmp
imul
add
fwait
xor
add
rorl
add
aad
adc
add
dec
repnz
cld
das
jge
sub
add
mov
insb
sbb
clc
jb
add
add
inc
add
fcoms
add
ss
jecxz
ss
inc
clc
push
test
push
mov
fwait
jmp
add
clc
leave
mov
add
sbb
cmp
popf
pushf
jl
adc
mov
xchg
addr16
insl
sbb
add
ficomps
add
add
dec
adc
add
fimull
add
add
add
cmpsl
clc
mov
xor
add
inc
clc
push
add
inc
add
push
clc
sar
aad
xchg
ss
jp
xchg
mov
cmp
clc
ja
clc
lods
fiaddl
add
inc
add
sub
add
ds
pop
push
xor
add
adc
add
or
add
cmp
and
add
clc
in
add
add
add
outsl
mov
push
clc
jle
out
lcall
mov
pushf
out
mov
pushf
xchg
int
dec
loop
test
xor
jg
nop
lock
hlt
xbegin
cwtl
inc
clc
and
addb
fwait
jmp
pop
cltd
ret
clc
jbe
sbb
movsl
clc
or
clc
cmp
push
cmp
add
lret
fisttps
pop
dec
loope
and
add
xabort
sub
add
fnstcw
or
ret
clc
cmp
add
or
call
in
or
adc
mov
mov
jno
add
jecxz
insb
push
pop
cmp
add
mov
out
addr16
dec
pop
pop
inc
add
clc
mov
or
push
add
sti
pusha
add
mov
clc
mov
add
add
sub
lret
fmull
clc
sub
lods
aaa
add
push
add
or
ret
clc
sti
filds
clc
cmp
fnsave
add
add
outsl
jecxz
xchg
lcall
cmp
mov
mov
add
imul
clc
pop
call
data16
sahf
je
ja
xchg
outsb
inc
clc
aam
clc
outsl
fdivrs
cmp
ss
push
push
clc
or
repz
add
clc
cs
cmp
add
clc
cwtl
fadds
ret
je
std
pop
jecxz
fdivp
xchg
inc
clc
aaa
add
out
loope
int3
scas
or
sar
add
fisubl
dec
cmp
lods
mov
add
push
add
add
rorb
mov
fwait
jmp
push
sub
cltd
mov
add
fwait
jmp
push
add
and
add
mov
dec
adc
add
pushf
sar
sub
clc
je
cmp
cld
push
ret
lods
lods
ja
clc
inc
add
addr16
pop
inc
clc
int3
fiaddl
add
inc
and
jmp
push
ja
xor
add
add
out
outsb
fs
jmp
fistpll
insl
sbb
dec
inc
add
mov
movsb
clc
sahf
xchg
int
in
sbb
xor
add
sbb
sbb
rclb
add
push
jmp
cmp
clc
mov
xor
jns
push
clc
ret
clc
add
add
add
jno
add
rcl
add
add
cmpsl
clc
mov
mov
clc
aad
add
pop
sub
cli
jmp
dec
inc
add
ret
clc
mov
pushf
mov
pop
mov
mov
fwait
jmp
jg
push
xor
inc
clc
push
clc
inc
add
cmc
data16
mov
add
shl
fwait
jmp
aas
push
fwait
push
inc
clc
ret
xor
add
add
jns
add
mov
ret
clc
sub
clc
xchg
mov
clc
jl
add
dec
mov
add
clc
lods
ret
clc
stc
adc
add
add
add
or
add
mov
add
das
inc
clc
imul
clc
add
add
add
add
fwait
jmp
imul
or
jmp
cmp
jno
loopne
cltd
stc
sub
cmpsb
clc
lret
lock
add
loopne
sub
lock
test
jg
add
stos
test
scas
pushf
lret
lret
call
and
xbegin
clc
mov
lods
aad
sbb
stos
mov
clc
cmp
adc
fwait
jmp
out
cmp
push
add
jnp
clc
jg
aad
js
push
cmp
fwait
jmp
or
inc
dec
mov
add
add
add
lret
mov
clc
std
faddl
jnp
or
clc
push
ret
clc
xchg
fs
out
int3
xchg
lcall
shl
clc
dec
jnp
clc
std
pop
bound
add
jne
add
jp
jmp
mov
mov
or
fsubrs
in
cmp
clc
adc
add
fists
add
es
std
test
and
adc
add
fcmovne
in
dec
ret
clc
mov
ds
and
add
cmp
fwait
jmp
in
sbb
in
and
add
sahf
scas
and
add
add
icebp
jg
mov
clc
cmp
mov
add
cmp
mov
leave
daa
clc
inc
add
xchg
aam
clc
sub
mov
mov
clc
je
in
jecxz
in
cld
cmp
mulb
ljmp
or
clc
mov
add
mov
dec
pop
clc
out
dec
add
add
add
add
add
movsb
clc
nop
ficoml
pop
fwait
jmp
das
pop
dec
pop
add
dec
mov
add
mov
loope
repnz
add
xlat
jbe
clc
and
and
jmp
sub
cld
push
ret
jno
js
add
cltd
or
add
repnz
clc
xbegin
bound
add
clc
adc
out
pushf
cld
lods
push
clc
lahf
sahf
leave
in
sbb
add
sbb
clc
mov
xchg
jb
add
lods
nop
aas
pop
clc
push
add
rolb
int3
int
clc
adc
or
add
stc
sub
out
and
mov
add
sub
sahf
xchg
and
and
add
jnp
mov
dec
inc
add
dec
decl
push
inc
inc
add
dec
sub
loope
mov
mov
inc
add
jae
add
push
inc
add
pop
cwtl
push
aam
mov
adc
add
inc
add
data16
mov
add
inc
add
cmp
jecxz
lock
into
or
push
xchg
imul
cmp
nopl
das
inc
add
xchg
pushw
jne
cmp
xchg
rcll
add
cmp
roll
icebp
icebp
in
mov
mov
add
fwait
jmp
lods
add
pop
xchg
dec
jge
or
icebp
arpl
add
xchg
pop
inc
add
mov
loope
add
add
dec
jmp
scas
add
add
pop
add
add
fildll
pop
fmul
incb
add
add
es
arpl
add
add
mov
clc
sub
jmp
movsl
clc
mov
das
ret
ss
sub
mov
xor
add
xchg
xor
add
mov
add
fwait
jmp
cltd
insb
stc
mov
sahf
xor
add
das
or
imul
clc
inc
clc
and
add
clc
cmp
add
inc
clc
mov
leave
inc
add
push
add
push
add
jmp
mov
cmp
add
clc
jbe
dec
inc
add
mov
add
xor
insb
enter
inc
clc
mov
adc
add
mov
add
add
mov
add
pop
fiaddl
xabort
clc
stc
data16
aam
or
sbb
cld
mov
or
add
xchg
xor
add
nop
cmp
xlat
mov
push
lock
add
jp
xchg
dec
sbb
stos
jge
enter
fwait
jmp
xor
xchg
lea
clc
popf
out
mov
mov
add
lcall
clc
push
stos
fwait
jmp
popa
lods
xchg
imul
add
cli
out
out
mov
add
sbb
push
add
test
ja
leave
xchg
js
mov
clc
dec
shrb
bound
add
add
fildl
add
fxch
aaa
adc
clc
inc
add
fs
xlat
push
add
push
gs
jmp
test
push
pop
out
mov
pop
or
add
shlb
xor
add
mov
cwtl
cmpsb
clc
pop
int3
dec
xor
add
add
cmp
cld
push
ret
push
add
cmp
add
clc
sahf
lret
inc
clc
ljmp
jne
dec
pop
js
add
push
mov
add
dec
es
sub
push
adc
xabort
jns
add
dec
pop
dec
icebp
loope
std
sub
xlat
mov
arpl
add
in
call
jno
add
add
sub
mov
add
add
add
xor
add
add
xor
add
out
mov
mov
icebp
aas
in
test
sub
clc
lock
jg
ja
mov
inc
add
call
add
add
add
rcrb
sub
fs
pop
clc
imul
add
insl
je
clc
push
add
jnp
mov
pop
outsl
xor
add
jno
add
ljmp
in
xor
add
xor
add
add
add
mov
clc
jbe
add
clc
ljmp
cmp
stc
xlat
jmp
push
adc
pop
jl
cli
sahf
mov
clc
std
xor
add
mov
scas
or
push
fwait
jmp
sub
clc
movsb
clc
push
add
cltd
test
repz
call
clc
in
mov
stos
cld
push
ret
add
cmp
jae
add
add
jg
enter
add
add
inc
add
and
add
push
in
jmp
scas
outsl
cmp
clc
push
xbegin
add
xor
add
dec
xchg
lods
and
add
test
icebp
stos
xor
add
add
cmp
mov
adc
add
dec
incb
add
dec
cmp
cwtl
adc
add
dec
push
sub
fwait
jmp
sub
clc
aas
clc
in
fstps
imul
add
clc
icebp
xor
add
fwait
jmp
aaa
and
push
ror
outsb
dec
jecxz
cmp
clc
fs
xchg
es
test
sar
pusha
add
movd
out
jge
ja
clc
std
xor
add
shl
clc
and
add
sar
clc
mov
add
xchg
pop
add
incl
push
ret
aas
movsb
ja
xchg
mov
fwait
jmp
test
sarb
clc
outsb
mov
clc
add
fwait
xchg
je
clc
jl
clc
sub
clc
fs
data16
addr16
and
sub
clc
sar
mov
clc
rcrl
push
add
add
push
add
insl
arpl
add
clc
push
repz
adc
cmc
jmp
add
xchg
sarl
iret
add
add
lea
stos
cli
push
lea
loopne
mov
mov
ret
clc
into
xchg
out
outsl
xchg
ret
imul
js
clc
hlt
jb
add
add
add
sub
jns
add
add
and
add
stos
dec
fdivr
imul
add
out
inc
clc
stos
inc
add
ja
add
adc
add
add
in
jp
pop
rol
clc
jne
add
std
lock
mov
insb
jno
add
add
outsl
popf
jecxz
xabort
push
jne
fwait
jmp
jmp
into
adc
add
clc
xchg
dec
aam
call
clc
cmpsl
clc
mov
add
or
es
jno
add
xchg
jmp
push
hlt
inc
add
pop
cwtl
add
clc
lock
add
inc
add
scas
pop
clc
data16
sub
push
rorl
pop
clc
fwait
jp
jmp
push
add
mov
add
jbe
add
add
add
and
add
clc
or
daa
clc
xor
add
sti
stos
fcoml
rcll
add
cwtl
movsl
clc
xor
add
jne
fwait
jmp
cld
xchg
cmp
add
cli
adc
add
clc
shld
out
push
add
dec
cltd
mov
arpl
add
push
pop
fucompp
dec
in
insl
lods
stos
fs
mov
incl
dec
cmp
and
add
ljmp
add
clc
out
jno
add
sbb
add
clc
ss
es
push
clc
loopne
mov
add
mov
stc
add
add
add
sub
add
in
pop
ror
mov
add
add
nop
and
add
add
int3
daa
clc
mov
xchg
lret
dec
in
sbb
push
add
lret
pop
lahf
jbe
add
add
push
mov
fwait
jmp
add
xor
lods
jb
add
fwait
jmp
sub
or
or
clc
xchg
fcomps
clc
push
add
in
jmp
clc
lea
add
enter
xor
cwtl
dec
je
ret
clc
sub
xchg
out
inc
clc
push
mov
fwait
jmp
xchg
pop
sub
pop
jnp
fwait
jns
cli
jae
add
mov
pushf
inc
clc
into
push
sar
loop
sar
inc
clc
clc
popf
inc
add
pushf
cmp
clc
sbb
jp
and
xchg
stos
cli
sub
out
and
add
add
push
insb
cld
call
xchg
movsb
push
pop
cmpsb
clc
xbegin
lock
jmp
aaa
fwait
push
mov
pop
popf
jmp
mov
test
jge
and
add
and
jmp
je
sbb
add
mov
add
pop
mov
flds
ret
adc
clc
movsb
clc
fdivs
rolb
mov
fmuls
add
mov
insl
adc
pop
std
or
clc
insl
jmp
in
push
add
pmullw
ret
clc
testb
lahf
xchg
scas
and
add
clc
or
data16
hlt
fists
add
cmpsl
clc
mov
jae
jmp
cwtl
push
mov
fwait
jmp
and
sub
ss
clc
sti
popa
add
push
add
inc
clc
xchg
xlat
dec
in
mov
push
add
or
clc
in
scas
and
add
clc
fisubl
clc
jecxz
mov
arpl
add
clc
mov
cmp
add
sub
lods
fwait
jmp
lea
aad
push
cmp
add
into
shrb
add
pop
popf
xor
add
adc
add
add
aas
pop
aad
fs
and
leave
pusha
add
je
lock
add
or
add
incb
clc
xchg
inc
add
sbb
jle
pop
jns
xchg
mov
add
icebp
mov
clc
jbe
cmp
add
clc
mov
clc
out
sub
lock
mov
rcr
sbb
in
pop
daa
clc
xor
push
add
test
sbb
test
add
fwait
jmp
into
fchs
clc
xbegin
popa
add
mov
xchg
sbb
stos
movsb
clc
ss
dec
xchg
or
pushf
xchg
hlt
inc
add
cli
mov
mov
add
inc
clc
fisubs
add
dec
sahf
cmp
clc
sbb
cltd
sar
xchg
mov
xor
inc
clc
popa
add
aas
fs
sub
clc
ljmp
mov
loopne
pop
and
add
xchg
or
mov
out
or
rorl
pushf
fdiv
cmp
cmp
clc
in
pop
pushf
xchg
cmp
push
dec
pusha
add
inc
add
pop
bound
add
clc
pop
cmp
stos
inc
clc
xor
add
pop
clc
idivb
push
lods
cmp
clc
jne
clc
cmp
push
fidivs
add
aam
push
notb
fwait
jmp
xchg
lods
dec
sub
add
pop
mov
data16
push
lret
mov
das
sbb
add
bt
xabort
sbb
clc
daa
clc
mov
clc
ss
xor
clc
lret
inc
clc
mov
clc
inc
add
sqrtps
add
std
cli
mov
add
pop
mov
clc
dec
mov
fdivl
add
xor
add
pop
and
add
pop
imul
add
jno
add
add
popf
icebp
ja
mov
jmp
sub
dec
sbb
iret
mov
cli
mov
jmp
sbb
pop
and
mov
jmp
int
stc
mov
add
fstps
iret
arpl
add
sub
add
sar
mov
out
dec
push
clc
fidivs
jmp
clc
pop
fs
dec
jbe
call
fwait
jmp
push
out
loope
lods
cmp
pop
cmp
aam
clc
out
mov
imul
call
jb
add
jp
dec
pop
insb
lret
push
adc
add
sub
clc
pop
and
adc
add
or
das
mov
inc
add
into
pusha
add
or
add
jp
add
emms
out
cmp
into
lahf
icebp
test
clc
fs
xchg
insl
shld
fnsave
add
mov
clc
into
add
add
add
mov
cld
push
ret
sahf
pop
ja
push
add
add
insb
insb
adc
mov
add
add
add
call
pushf
xor
add
add
mov
loope
sub
imul
adc
add
push
jno
add
add
xchg
cmc
aas
mov
rorl
cli
test
mov
clc
ss
or
jb
add
outsb
in
gs
movsb
clc
rcl
cwtl
add
add
movsb
clc
mov
clc
add
add
insl
jb
add
gs
push
jp
xor
add
popa
add
in
fisubl
stos
sar
fldenv
add
aad
pushf
cmpsb
clc
ficoml
aas
out
push
add
icebp
cwtl
mov
add
xchg
in
xchg
cmp
scas
adc
add
add
add
clc
fmuls
mov
cmp
gs
add
add
call
pop
ja
in
cmp
dec
mov
jo
add
add
add
add
movsl
clc
popa
add
js
add
fwait
mov
loope
mov
jns
push
clc
dec
pop
inc
clc
add
fnsave
add
mov
add
repnz
sbb
add
fwait
jmp
add
mov
sbb
jmp
cwtl
sub
push
sub
jecxz
ss
sar
push
clc
jo
add
add
pop
inc
clc
mov
inc
add
or
dec
shl
clc
mov
sbb
movsl
clc
adc
and
add
call
jmp
mov
test
xchg
out
jo
add
jbe
add
mov
add
push
add
insl
xchg
mov
aaa
pop
adc
add
jno
add
xchg
imul
inc
add
ljmp
add
add
push
pop
cld
push
ret
fwait
push
or
add
push
add
sahf
sub
sti
push
pop
cmc
pushf
push
cmp
mov
xchg
in
rep
js
shrb
push
add
out
cmp
outsl
cwtl
cmpsb
clc
mov
jmp
cwtl
pop
jp
add
add
jae
add
add
sub
add
add
add
sar
add
push
mov
popf
add
add
add
add
add
pop
pop
mov
and
add
push
add
test
inc
add
xchg
loope
push
mov
mov
and
adc
ja
clc
and
nop
lods
sbb
mov
mov
mov
insl
ficoml
fistpl
clc
divl
add
jne
clc
test
jp
pushf
jmp
lcall
push
ret
lea
jg
clc
das
mov
push
clc
mov
jg
add
push
or
add
dec
aaa
movsb
outsl
loope
xchg
jae
lods
jbe
add
add
xor
add
scas
adc
add
add
out
lret
add
pop
mov
pop
jnp
test
lods
or
mov
clc
or
clc
adc
add
adc
mov
clc
cmp
adc
add
mov
add
push
xor
jno
xchg
loopne
mov
inc
clc
out
fldenv
add
pushf
xabort
xchg
pop
test
aad
add
adc
add
clc
adc
clc
xchg
push
pusha
cld
push
ret
add
sub
jbe
clc
aas
inc
add
stos
xlat
loop
in
push
add
push
add
addr16
mov
fwait
jmp
sub
lods
push
inc
add
cld
aas
insb
cmp
clc
data16
lahf
lods
dec
mov
inc
add
lret
jle
add
rclb
data16
xbegin
cld
push
ret
sub
add
mov
and
add
cmp
push
lret
lret
cmc
int
xor
mov
mov
sub
fdivs
add
xchg
mov
call
push
ret
sub
sub
add
scas
dec
xchg
loop
or
clc
sub
push
das
jg
add
hlt
fnstenv
add
or
out
lods
nop
ja
loopne
and
add
mov
clc
scas
cmp
adc
add
inc
add
test
aas
clc
mov
xchg
sbb
inc
add
add
imul
add
add
clc
inc
clc
mov
fwait
lods
gs
jp
or
aam
or
add
xchg
cmc
cmp
add
stos
and
add
push
sub
add
mov
add
loop
push
mov
leave
inc
add
fs
xchg
mov
clc
daa
clc
aam
sahf
jecxz
mov
add
fwait
jmp
xchg
sar
mov
clc
xlat
test
js
clc
call
pop
or
in
popf
push
lcall
sbb
mov
push
clc
ficomps
cli
jecxz
add
clc
xchg
push
add
test
pusha
add
xchg
arpl
add
pop
clc
sbb
clc
jbe
push
jbe
push
jmp
imul
add
add
clc
sub
add
clc
mov
mov
clc
and
add
ljmp
add
test
cmp
mov
add
add
push
clc
gs
test
sub
cmp
jae
add
add
add
shll
jmp
ja
xor
cmpb
add
clc
fs
cmpsb
clc
adc
add
xchg
stc
aas
and
jo
add
pop
mov
xlat
sti
mov
add
pop
adc
add
pop
cmp
add
pop
js
in
jecxz
outsb
jl
icebp
or
mov
clc
push
add
add
add
xchg
mov
jne
mov
mov
add
clc
out
mov
jl
add
push
push
insb
mov
xor
add
aas
das
scas
sub
pop
clc
in
in
pop
mov
push
ret
pop
cmp
add
add
clc
push
pop
clc
inc
clc
daa
clc
cmp
add
mov
add
add
mov
adc
add
xchg
jecxz
cmpsl
clc
into
jge
sar
outsb
and
jge,pt
jecxz
cld
loope
pop
fs
sub
clc
pop
aaa
xor
add
cmpsb
clc
add
add
lret
xor
add
fmuls
add
xchg
jmp
jg
jns
aam
or
or
adc
dec
jae
add
add
mov
scas
jae
add
add
sub
clc
xchg
ss
ss
mov
stos
popa
add
push
clc
push
add
mov
stos
adc
add
and
clc
xor
add
xor
add
dec
mov
mov
inc
clc
push
add
mov
ss
popf
fwait
jmp
push
mov
push
sub
ss
dec
ja
clc
push
clc
inc
add
aas
fstp
mov
add
sahf
fnstenv
add
mov
rclb
add
inc
clc
lods
notb
add
mov
mov
clc
test
test
arpl
add
pushf
or
push
fwait
jmp
aas
mov
sbb
clc
and
mov
clc
imul
notb
clc
decb
enter
mov
xchg
push
jp
or
clc
data16
loope
repnz
add
add
clc
pop
jno,pn
add
lods
pop
cmp
sar
pop
bound
ret
adc
jbe
fcompl
mov
fwait
jmp
push
aad
xabort
xor
mov
ret
clc
fcomip
in
fbstp
test
mov
sti
inc
add
mov
add
sti
aam
ss
xchg
cmp
add
add
jns
add
jnp
loop
inc
clc
mov
cltd
inc
add
popf
rcrb
xor
sbb
clc
paddsw
xor
add
pop
or
fwait
and
add
lahf
mov
and
add
decb
mov
into
imull
add
call
add
inc
clc
xlat
mov
lock
mov
add
push
clc
out
push
clc
mov
sti
movsb
clc
pop
mov
sub
mov
clc
nop
hlt
mov
mov
gs
iret
jp
add
loope
push
cmp
mov
sti
fwait
jmp
add
add
test
enter
cmp
add
clc
aas
stc
loope
adc
add
jecxz
push
adc
sub
mov
add
add
or
clc
cmpsl
clc
enter
add
push
mov
fwait
jmp
sub
test
popf
std
inc
add
movsl
clc
add
clc
add
add
nop
fimull
sahf
dec
loopne
repz
add
dec
dec
ret
popf
dec
jl
das
or
add
cld
push
ret
add
stos
dec
sahf
jns
mov
add
add
push
pushf
lods
out
stos
cs
stos
cmp
or
clc
jae
add
dec
das
imulb
add
mov
xchg
mov
pop
add
add
data16
lock
add
outsl
scas
cmp
jp
lods
rcll
and
add
arpl
add
sti
xabort
jb
add
clc
dec
aas
sub
clc
xchg
xchg
int
jns
lods
je
inc
clc
mov
clc
pop
loope
dec
jl
dec
cmp
cmp
popa
add
test
insl
cmp
arpl
add
and
call
mov
pop
adc
xor
add
jecxz
add
xchg
lahf
and
add
clc
sub
sub
clc
imul
clc
mov
clc
mov
jmp
jmp
cmp
es
jno
or
scas
xor
inc
add
mov
mov
rcrl
clc
bound
add
clc
into
jle
xabort
clc
mov
sbb
stos
fwait
jmp
aas
inc
fwait
movsb
jne
cmp
add
mov
shufps
test
push
add
add
clc
mov
mov
incl
dec
cmp
jmp
push
push
cwtl
fdivl
add
loop
jbe
add
lret
lret
test
fwait
jmp
pop
ja
push
push
add
mov
add
sbb
clc
jge
cmp
mov
inc
clc
push
add
fwait
jmp
inc
add
adc
add
icebp
aaa
clc
icebp
clc
lods
rcrl
xor
push
xchg
loope
pop
mov
xbegin
clc
or
clc
imul
fwait
jmp
dec
dec
and
clc
pusha
add
xbegin
clc
in
shrb
jne
clc
pop
jg
loopne
xlat
mov
fucom
clc
in
cmp
mov
add
arpl
add
push
pusha
fwait
jmp
or
aam
ljmp
sub
movzwl
fwait
jmp
sahf
aaa
pop
jo
add
pushf
rep
stos
xor
add
scas
cs
dec
fdivrl
pop
xor
jmp
add
add
clc
cwtl
scas
mov
adc
add
xchg
jbe
jno
add
scas
incl
repz
push
ret
sub
lods
mov
arpl
add
sub
hlt
mov
sti
out
jle
je
jb
add
clc
push
add
mov
clc
ret
add
ja
inc
add
jo
add
shl
movsl
clc
fisubrl
mov
inc
add
pop
mov
add
enter
adc
xlat
xchg
test
push
jge
add
dec
sub
push
clc
cmp
movsb
fwait
jmp
fs
push
jg
xor
add
lods
push
jae
add
xchg
sbb
clc
clc
cs
jmp
stos
xor
add
clc
mov
int3
cmp
ds
mov
jmp
jb
add
scas
fnsave
add
sub
add
addr16
xchg
mov
pop
fs
test
add
fs
and
add
int3
mov
xor
clc
xchg
jg
mov
pop
jle
movsb
clc
aaa
es
stos
push
jmp
sub
es
clc
je
push
lret
add
clc
cld
add
add
fistpll
add
xor
add
add
lea
cmp
clc
adc
in
mov
push
out
test
and
add
fwait
or
clc
sahf
icebp
bound
add
clc
rcr
lahf
pop
xchg
xor
add
or
int3
ljmp
daa
clc
inc
add
inc
clc
jg
cli
mov
add
adc
add
clc
repz
mov
xchg
cmp
clc
dec
mov
push
add
or
sub
clc
jo
add
add
insl
jae
add
mov
add
or
jge
and
mov
mov
lcall
add
add
movsl
clc
cs
add
add
or
add
xor
add
lcall
das
xchg
adc
add
mov
dec
pop
mov
clc
add
add
or
mov
jmp
sbb
add
push
add
xor
and
add
jbe
cmp
jge
jno
sub
add
cltd
sbb
jge
push
mov
fwait
jmp
fwait
or
clc
push
clc
inc
clc
movsl
clc
mov
movsl
clc
lret
add
cmp
fwait
jmp
sub
hlt
scas
lods
mov
mov
arpl
add
add
add
add
add
jecxz
jbe
mov
aaa
adc
test
stc
push
add
repz
pop
fadds
push
pop
fwait
jmp
and
xchg
xor
jno
add
insb
push
sar
add
push
ds
ficomps
cmpsl
clc
dec
in
out
add
pop
fxch
or
push
lcall
add
fdiv
pop
xlat
bound
add
cmp
clc
pop
xor
add
add
push
add
cltd
cmp
lcall
jmp
test
movsl
clc
jno
add
pop
add
add
xor
clc
and
add
clc
xabort
xor
add
add
popa
add
loopne
out
ja
test
adc
add
clc
and
clc
stc
pop
xor
add
inc
add
pop
je
sub
add
pop
clc
xor
gs
sub
in
in
push
add
pop
pushf
and
adc
add
sub
clc
daa
clc
es
sbb
mov
clc
stc
xlat
ds
fwait
jmp
xor
pop
test
lods
notl
jnp
pop
not
inc
add
decl
and
add
orb
cmp
repz
loope
add
or
push
jmp
sub
or
clc
cmp
or
sti
shrl
test
jmp
push
bound
add
or
add
add
loop
sub
sar
mov
push
jecxz
add
add
outsl
inc
add
pop
add
add
clc
out
movsl
clc
add
add
clc
sar
add
data16
arpl
add
cmp
sub
sar
add
cmp
cs
sbb
pusha
add
mov
arpl
add
add
push
ret
ja
aaa
xchg
popa
mov
mov
dec
sub
add
loop
add
add
out
mov
in
pusha
add
pop
xchg
ljmp
add
sub
or
in
lods
sub
pusha
add
arpl
add
pop
mov
mov
aas
addr16
movsb
clc
mov
clc
sti
push
add
sbb
fcmove
pop
aas
cwtl
sub
mov
add
emms
jmp
inc
clc
cmpsb
clc
sti
xor
add
add
mov
mov
clc
ja
insl
xchg
testl
jmp
clc
sub
add
add
clc
stos
xchg
cmp
test
pop
pushf
scas
aaa
sbb
iret
sub
add
sub
sbb
add
lock
call
add
add
push
add
jbe
ror
adc
inc
add
rorb
add
into
bound
add
clc
pushf
push
add
in
pop
repz
jae
add
pop
clc
sbb
add
in
in
ja
add
pop
mov
cmc
add
add
push
xchg
ret
and
popl
sbb
add
add
nop
ret
inc
clc
cmpsb
clc
ss
and
add
jae
fwait
jmp
adc
pop
neg
pop
or
rolb
add
jne
add
dec
sub
in
or
in
add
clc
mov
inc
add
mov
lods
xchg
xchg
xor
clc
pop
xbegin
mov
jmp
sbb
fwait
adc
add
add
fwait
jmp
mov
mov
sub
push
ret
push
pop
mov
test
movsb
clc
lods
mov
or
add
clc
sbb
add
cli
sub
xabort
mov
insl
pop
jp
xor
push
lods
cs
int
xor
add
xchg
cmp
cld
imulb
pop
pop
std
iret
or
and
add
clc
invd
dec
xor
daa
clc
push
clc
aam
xchg
mov
clc
scas
sbb
add
clc
or
or
add
add
repz
clc
or
clc
mov
add
pop
push
add
pop
clc
cli
inc
clc
repnz
lret
mov
and
add
inc
clc
pop
pop
or
jg
clc
aad
dec
scas
jge
daa
clc
mov
test
cwtl
inc
add
mov
xchg
cmpsb
clc
xchg
mov
scas
jns
add
call
in
add
add
add
mov
push
add
or
xlat
cmp
cmp
fisttpl
adc
add
sbb
into
lcall
aad
clc
int3
push
scas
loope
insl
mov
pop
cld
push
ret
dec
add
addr16
popl
in
jmp
fcomps
daa
clc
sbb
cltd
jmp
lcall
decl
xor
add
clc
pop
cmp
clc
bound
add
mov
out
pop
jbe
dec
enter
pop
fwait
jmp
sub
sub
jb
add
push
clc
push
add
mov
out
jecxz
jnp
movsb
clc
out
jl
clc
pushf
inc
clc
std
lods
cmpsb
clc
leave
mov
lods
jns
add
fwait
or
pusha
add
mov
sarb
clc
sbb
jmp
sub
inc
clc
nop
jae
add
cltd
jge
mov
clc
sbb
rcrb
imul
add
sar
outsl
test
sub
jne
hlt
mov
fcmovbe
sti
xchg
in
fucomp
or
clc
push
outsb
add
add
add
jg
in
insl
ret
clc
rclb
or
mov
pop
cmp
sbb
fnsave
xchg
inc
clc
mov
or
mulb
clc
push
add
repnz
mov
sub
inc
in
mov
out
test
into
or
mov
clc
das
push
ds
cmc
fisubs
add
mov
sub
add
mov
insl
sbb
in
mov
insb
inc
clc
rclb
enter
clc
shll
add
xor
and
lahf
inc
clc
cmp
inc
clc
adc
add
clc
ficoms
inc
clc
xbegin
fwait
jmp
jg
insb
popa
scas
shrb
jge
fwait
jmp
inc
es
push
add
dec
lret
cmp
mov
pop
add
add
mov
sub
add
add
add
fucomi
pop
pop
iret
or
clc
fmuls
jbe
sub
jb
add
xor
add
jmp
es
cwtl
nop
sub
insl
bound
add
add
xor
add
jg
data16
nop
add
cmc
mov
cmp
add
clc
popf
out
int
mov
sbb
mov
add
mov
pop
push
add
dec
cmp
clc
cwtl
mov
add
xchg
add
xor
add
pop
jge
inc
clc
adc
clc
imul
fisttpl
sar
add
in
mov
clc
test
in
hlt
xchg
cmc
into
enter
clc
xchg
jl
outsb
xchg
addr16
pusha
add
and
add
add
nop
sub
add
add
and
add
xchg
xchg
mov
clc
aam
jnp
jge,pn
add
push
add
mov
add
je
clc
leave
push
pop
add
xabort
fwait
xchg
inc
add
xor
add
pop
imul
data16
jge
fwait
mov
mov
add
mov
fsts
mov
add
clc
sub
jno
add
xbegin
mov
shll
add
nop
jl
ljmp
sbb
add
xor
add
ret
pusha
add
clc
movsl
clc
in
xchg
dec
push
lea
add
in
fisubs
xchg
cmp
clc
in
popa
add
xor
repnz
popf
add
add
xchg
push
repnz
clc
mov
clc
cmpsb
clc
rclb
mov
push
jmp
push
sub
push
rorl
clc
lods
sub
clc
dec
pop
and
add
mov
add
insb
sub
clc
mov
inc
add
inc
add
fxtract
jl
insl
inc
add
pusha
add
mov
jl
and
jae
add
add
adc
add
add
push
add
ss
lcall
jmp
je
add
cmp
add
fwait
jmp
fistpll
arpl
add
clc
mov
pop
fcompl
xbegin
pop
enter
cmp
add
arpl
add
cmp
add
push
xor
fwait
jmp
jp
nop
sub
fwait
roll
add
sahf
repnz
movsb
clc
addr16
leave
lea
in
dec
cmp
add
pop
push
add
sub
mov
add
xor
add
xbegin
pusha
fwait
jmp
insb
insb
sub
outsl
push
add
or
push
mov
fwait
jmp
adc
add
add
test
clc
cmpsl
clc
loop
jl
call
add
clc
mov
add
jbe
or
mov
jae
add
xchg
xor
add
data16
xor
add
psubd
mov
add
add
cmc
mov
push
add
pushl
clc
lods
insl
aas
cmpsl
clc
icebp
or
clc
adc
add
xor
add
jae
add
clc
sub
jl
dec
cmp
jne
add
push
add
cmp
clc
jno
add
aaa
pushf
add
sbb
mov
add
fs
ljmp
pop
mov
lret
clc
ficomps
add
and
add
shlb
add
xor
add
push
ret
sub
repz
mov
sti
mov
inc
add
mov
lss
shr
inc
clc
push
jmp
sub
movsb
xchg
and
add
add
xchg
xabort
push
in
cmp
jae
add
sahf
xchg
movsb
clc
and
clc
pop
inc
clc
jae
add
sbb
repz
jmp
cmp
clc
pop
ja
pop
clc
adc
add
clc
mov
dec
add
sub
inc
xor
jl
add
mov
sub
adc
pop
clc
shll
add
mov
push
jmp
mov
repz
mov
fwait
jmp
es
cmp
mov
add
jmp
test
pop
faddl
add
add
imul
push
add
cmp
clc
and
add
leave
add
add
div
mov
mov
paddsw
sbb
push
add
jnp
movsb
clc
mov
aad
clc
js
clc
jge
incl
dec
cmp
jmp
fwait
sub
test
pop
aam
lret
xor
add
inc
clc
decl
jmp
dec
aas
sub
jle
out
mov
pop
clc
inc
clc
dec
test
idivl
movzwl
fwait
jmp
push
push
cmp
dec
fisttpl
cld
jo
fwait
jmp
lods
jno
das
rclb
add
xor
add
insb
dec
push
add
add
add
out
push
nop
lret
push
fs
dec
popa
add
mov
bound
add
add
sti
push
mov
add
adc
add
leave
lret
add
add
clc
add
add
in
decl
add
add
fisubrl
jne
clc
insl
loope
jge
mov
jge
xchg
adc
add
sub
sbb
sahf
cmpsb
clc
call
fwait
jmp
test
clc
push
pusha
add
sahf
lea
xor
add
cmc
clc
add
add
loope
in
sbb
add
inc
clc
clc
cmp
test
lret
mov
xor
pop
fs
das
idivb
add
data16
sbb
fcmovbe
lea
add
test
mov
add
dec
lahf
sbb
and
add
mov
jl
and
add
add
jne
add
cmp
mov
pop
cld
push
ret
jge
das
es
andl
insb
add
xor
sub
dec
xor
mov
clc
arpl
add
add
sbb
jp
iret
out
mov
pop
dec
sub
scas
clc
sti
dec
jmp
or
clc
fs
out
sbb
clc
sub
clc
ds
into
inc
add
inc
clc
inc
clc
jbe
clc
and
add
clc
cmp
add
lret
loopne
mov
push
dec
movsl
clc
fnstcw
or
clc
stc
or
decl
cld
push
ret
add
icebp
bound
add
add
xchg
and
add
jecxz
adc
add
mov
sti
scas
ret
clc
bound
add
push
add
aaa
cmp
add
jae
add
clc
in
insl
mov
cmpsb
clc
dec
fadd
clc
sbb
out
cmp
pop
clc
xchg
lods
inc
clc
shll
add
stos
xor
add
xabort
mov
add
mov
clc
cmpsl
clc
out
inc
add
mov
clc
push
add
std
cltd
lret
xor
add
int3
dec
sbb
clc
movsl
clc
dec
sub
test
dec
jo
add
pop
mov
jp
lock
pop
and
add
cmp
js
xchg
cmp
cmp
clc
mov
ficompl
mov
inc
clc
sbb
add
push
stos
xabort
dec
cmovno
add
clc
ja
frstor
add
add
add
lods
adc
add
in
bound
add
add
dec
xlat
or
clc
and
add
add
add
mov
add
mov
xchg
stos
sarb
xchg
jl
push
pop
lret
and
add
cltd
jae
add
outsb
add
add
call
clc
out
loop
lods
fstl
push
fwait
jmp
cmp
xor
add
bound
add
sti
adc
add
clc
pop
mov
mov
pop
test
add
fwait
jmp
cmp
daa
clc
pop
jmp
cmp
scas
cmp
mov
clc
out
bound
add
clc
inc
add
imul
fcmovne
test
clc
jecxz
jecxz
mov
add
call
push
ret
jno
popa
cmp
add
mov
jmp
mov
mov
cld
push
ret
fwait
subb
dec
add
add
or
clc
hlt
cmp
jmp
imul
mov
in
loope
fs
pop
in
scas
sub
sbb
mov
in
inc
add
daa
clc
add
fs
lahf
xchg
bound
add
jecxz
das
xchg
adc
add
clc
clc
and
add
stc
shrl
push
int3
mov
add
push
add
sbb
sbb
pushf
jbe
add
inc
clc
clc
mov
add
sub
xchg
mov
xor
push
cld
push
ret
sub
or
add
bound
add
and
add
roll
add
jno
sbb
xlat
out
hlt
popf
fst
and
add
or
xchg
cmp
clc
pop
sub
cmp
mov
clc
scas
mov
mov
mov
jno
lcall
sub
pop
cmc
nop
out
ret
dec
fisubrs
add
popa
add
aad
loopne
addr16
sti
dec
lret
pop
clc
and
add
cld
rcl
and
add
clc
sahf
cmp
pusha
add
and
add
jbe
xor
xabort
adc
add
clc
out
ret
aam
xabort
gs
ja
or
add
mov
rorl
add
testl
icebp
cli
and
add
sar
push
dec
add
jg
lea
clc
xchg
cmp
push
addr16
push
clc
test
test
fprem1
lcall
fldenv
insl
es
jbe
ds
add
das
cmpsl
clc
cmp
add
push
clc
aam
xor
jmp
outsl
loope
scas
cmp
clc
mov
mov
add
add
mov
inc
add
jmp
fwait
hlt
cmc
jb
add
xchg
and
add
in
mov
ljmp
fwait
jmp
sub
sub
mov
fcmovu
cmp
adc
add
add
out
xchg
mov
cmp
cmp
lea
add
inc
clc
inc
clc
or
clc
xabort
add
cmp
js
add
mov
ss
clc
or
add
add
clc
imul
add
data16
xor
add
jo
add
add
sub
clc
cmpsl
clc
popf
cld
decl
jmp
dec
sbb
push
leave
fnstcw
and
add
clc
xor
mov
clc
out
mov
clc
pop
sbb
ja
clc
out
lret
push
push
in
fdivs
lcall
stos
in
or
sub
mov
cmpsb
clc
adc
clc
mov
push
adc
add
sub
ret
fwait
jmp
sub
sbb
pop
xabort
add
cmp
cld
pop
cmp
sbb
in
add
add
in
out
cmp
mov
into
popl
clc
adc
add
pop
stos
jle
add
loop
and
add
popl
pop
into
out
inc
clc
lcall
in
and
add
add
mov
fwait
jmp
add
sub
push
add
cmp
clc
daa
clc
data16
cmp
fnstsw
imul
mov
jmp
fwait
nop
outsl
dec
sahf
sar
cmp
cmp
add
add
imul
loopne
pop
mov
add
fs
cmp
jae
add
xchg
mov
clc
mov
jmp
jb
add
add
pushf
nop
fimuls
jae
add
mov
add
mov
clc
lahf
imul
sarb
mov
clc
push
add
adc
push
add
ret
bound
add
add
add
sar
clc
inc
clc
loopne
outsb
push
add
fwait
jmp
xchg
popa
test
clc
sar
fs
imul
sti
fists
add
cmp
pop
add
cmp
mov
decl
mov
ret
insb
das
sub
xor
add
or
mov
pop
sbb
popf
pop
ja
sub
adc
add
ret
clc
rcll
add
sbb
sbb
clc
xchg
lods
or
pushf
add
add
mov
adc
add
sub
add
xchg
adc
add
jnp
xchg
mov
adc
add
clc
popf
or
clc
mov
clc
incl
jne
cld
push
ret
lea
mov
push
clc
leave
add
cltd
jno
add
add
mov
clc
test
xabort
clc
xbegin
add
jb
add
add
sar
lcall
push
sbb
xor
add
clc
stc
mov
add
add
add
clc
jo
add
mov
dec
push
mov
fwait
jmp
js
insb
das
repz
leave
aaa
lea
clc
pop
movsb
clc
stc
pop
inc
add
das
or
clc
lret
rorb
addr16
dec
lods
mov
or
add
xchg
pusha
add
mov
pushf
pop
outsl
push
add
mov
clc
inc
add
mov
sub
clc
xor
sbb
fcmovu
xchg
sbb
push
arpl
add
mov
sbb
popa
fwait
jmp
aas
push
sub
xor
add
pushf
jbe
add
stos
xchg
fs
pushf
mov
dec
outsl
xchg
sti
add
add
clc
iret
outsl
divb
add
and
add
push
adc
jge
xbegin
ss
loopne
xor
dec
xor
add
cmp
or
add
add
clc
cmp
xchg
mov
cmp
xchg
in
and
lret
pop
sub
add
sar
clc
mov
lcall
sbb
adc
add
add
lahf
adc
add
push
add
and
add
add
pop
daa
clc
xor
add
sub
add
pop
mov
add
add
sub
add
test
shll
mov
inc
add
cld
sahf
inc
clc
pop
mov
aad
xchg
es
fisubs
movsb
clc
stc
sub
xchg
nop
dec
mov
fwait
jmp
ja
inc
movsb
inc
arpl
add
mov
arpl
add
sub
add
jecxz
shrl
je
sub
sub
cli
mov
inc
add
scas
cmpsb
clc
insl
add
add
cmp
push
add
fwait
jmp
push
push
sbb
ret
cld
push
ret
pop
or
mov
dec
inc
add
sub
sub
add
add
out
lods
int
mov
add
push
mov
fwait
jmp
dec
sub
ja
clc
mov
add
cmp
xor
add
clc
mov
aad
pop
test
sbb
mov
jne
ljmp
jbe
add
add
add
adc
add
sub
add
sar
call
push
ret
sub
je
pop
mov
clc
movsl
clc
inc
clc
and
add
pushf
out
in
inc
add
std
stc
or
clc
add
add
clc
and
add
jnp
add
xchg
jecxz
stos
sar
cmpsb
clc
clc
jl
clc
add
add
loope
cwtl
adc
add
add
mov
push
add
aam
clc
push
mov
addr16
xchg
mov
mov
hlt
mov
add
push
add
add
fwait
dec
and
add
push
add
outsb
in
sbb
loop
scas
pop
sub
test
clc
loopne
mov
in
pop
clc
jecxz
scas
sarl
inc
add
sub
mov
imul
fwait
jmp
sub
pop
cmc
repnz
sub
clc
mov
cmp
cmp
pusha
add
dec
sar
inc
add
ficoms
clc
aam
clc
cmp
clc
sbb
add
xchg
pushf
adc
add
clc
loopne
popa
add
and
fwait
mov
cld
mov
clc
push
add
jbe
sub
jae
add
adc
add
imull
add
clc
gs
mov
mov
or
gs
or
clc
jno
add
ss
stos
lods
iret
mov
mov
xchg
popf
idivb
cld
xchg
jmp
jnp
call
cld
push
ret
outsl
add
out
fdivrl
test
sbb
sbb
inc
add
sahf
ja
ljmp
adc
add
clc
add
add
sti
ret
dec
out
xabort
test
in
cmp
clc
sbb
clc
imul
cmp
push
movsb
clc
mov
add
mov
clc
inc
clc
mov
mov
add
xbegin
cmovo
add
pop
clc
push
clc
clc
lods
jae
add
add
add
incl
add
mov
clc
inc
add
data16
lock
xchg
dec
mov
fwait
fs
shl
fs
jae
add
jp
clc
je
clc
sbb
rcrb
mov
or
je
push
cmp
clc
xor
add
and
add
clc
inc
clc
fildll
in
loop
clc
cmc
rorb
outsb
addr16
cmp
int
mov
test
mov
add
adc
add
and
add
add
push
add
scas
mov
ror
xchg
mov
add
pop
xabort
push
popl
fwait
jmp
push
aaa
sub
add
xor
add
fidivrl
jae
add
cmp
add
clc
sub
add
jne
ds
clc
stc
xlat
adc
add
das
add
add
add
inc
add
mov
clc
cmp
mov
mov
cltd
sti
inc
add
imul
leave
push
clc
scas
mov
mov
fldenv
clc
xor
lods
cli
insb
push
cmc
pushl
nop
and
inc
fwait
jmp
sub
inc
jge
inc
add
lret
xor
add
clc
test
cld
lods
xor
add
add
xor
cmp
pop
push
add
dec
xor
add
clc
jnp
popf
or
clc
stc
lahf
lret
decl
cld
push
ret
inc
dec
dec
das
fisttpll
xchg
add
mov
cs
lea
repnz
add
negl
jbe
and
add
clc
iret
shl
clc
std
mull
clc
or
clc
fcompl
cmpsl
clc
loop
mov
mov
pop
and
add
pop
clc
fld
clc
mov
clc
das
data16
scas
pushf
mov
push
add
sahf
lea
ljmp
add
add
mov
arpl
add
dec
xchg
and
add
add
add
and
add
nop
mov
clc
outsb
or
clc
xchg
cs
clc
shrl
push
add
sar
mov
add
lock
scas
insl
insb
pop
pusha
add
aaa
clc
insl
aas
jnp
add
fstl
cmp
add
repz
jnp
into
ja
adc
icebp
xchg
fwait
mov
aas
clc
xchg
fwait
testb
imul
sbb
ret
clc
push
or
sub
aad
lahf
inc
clc
inc
add
cltd
dec
sub
fildll
cmpsb
clc
cmp
dec
jne
sahf
in
imul
clc
nop
test
mov
add
in
fldenv
aas
out
fcomip
xor
add
pop
and
add
jl
clc
jne
scas
push
scas
mov
mov
and
add
and
add
add
fwait
jmp
nop
test
clc
data16
adc
add
add
aas
clc
rorb
clc
jae
add
push
mov
add
or
add
test
lods
pop
mov
add
outsl
leave
jno
add
pop
leave
dec
push
cmp
clc
arpl
add
sbb
mov
fwait
jmp
push
mov
shll
xchg
dec
cld
adc
add
inc
clc
xchg
insb
inc
clc
ret
clc
sbb
fwait
jmp
sbb
int3
aad
clc
ja
icebp
lea
add
add
add
add
xchg
fwait
mov
mov
add
jge
clc
lret
out
fadd
clc
xor
push
xchg
cmp
loopne
mov
add
mov
clc
cmp
clc
push
shlb
add
add
add
add
dec
mov
stc
inc
clc
shlb
add
add
add
out
fsts
add
out
sar
add
xor
lods
push
add
icebp
push
add
add
cmp
repnz
cmpsb
clc
out
loopne
popf
out
xlat
mov
mov
sti
ja
ficoms
xor
add
push
add
clc
xabort
mov
sub
clc
add
add
rcll
jae
add
das
mov
addr16
int
add
dec
faddl
scas
push
adc
fistpll
mov
jecxz
enter
clc
out
pop
xchg
jp
add
push
add
sbb
jb,pt
fwait
jmp
pop
cmpsl
clc
imul
clc
popf
imul
add
pop
pop
data16
cmc
ucomiss
add
clc
mov
insl
xlat
pop
jb
add
or
aaa
jbe
cmp
clc
lret
daa
clc
std
pushf
insl
adc
add
iret
repnz
add
shrb
push
ret
sub
sbb
lahf
dec
je
xchg
sbb
clc
scas
push
add
adc
add
add
ret
clc
sub
push
add
xlat
daa
clc
dec
mov
insl
in
jnp
repnz
into
mov
add
jnp
add
jmp
clc
loop
jns
xbegin
clc
pop
popa
add
in
aaa
sub
clc
into
dec
cmp
adc
add
sar
inc
clc
pop
and
add
jns
sbb
clc
xor
clc
sub
jns
add
iret
sarb
add
mov
in
jmp
cmp
cmp
pusha
add
pop
mov
xchg
jae
add
into
aaa
jnp
jb
add
out
dec
inc
clc
nop
test
jecxz
inc
add
xor
xor
add
in
mov
add
icebp
or
nop
inc
add
cli
add
add
shl
clc
daa
clc
cmpsb
clc
out
bnd
add
add
mov
pusha
add
sbb
pop
fwait
jmp
das
dec
fwait
xchg
aaa
pop
inc
clc
push
xor
add
in
jns
clc
fs
push
xchg
inc
add
jno
fs
shl
clc
fimuls
or
decl
cld
push
ret
jp
pop
xor
add
jle
divl
mov
inc
clc
rclb
sbb
fwait
jmp
jp
adc
add
dec
pop
adc
add
aad
repz
fs
mov
jmp
cmp
and
add
jno
add
add
pinsrw
clc
xor
add
add
dec
in
js
pop
lret
push
pop
push
cwtl
jae
add
and
scas
cmp
outsl
inc
add
cmp
lea
mov
loop
adc
add
nop
jle
inc
add
clc
int
std
in
data16
pop
add
add
es
xchg
dec
mov
jno
add
std
cmpsb
clc
cs
jmp
add
push
add
fldenv
add
aaa
mull
iret
mov
jmp
dec
es
xchg
cltd
xchg
inc
clc
scas
adc
jbe
clc
pop
adc
add
jle
cmp
and
add
into
and
fcmovnbe
insb
and
loope
mov
jge
fidivrs
nop
out
inc
clc
nop
mov
icebp
fwait
jmp
dec
sub
xchg
gs
bound
add
out
jne
add
decb
push
cld
push
ret
sub
sub
repnz
ret
clc
imul
mov
clc
out
fistps
add
es
cli
fisttpll
cmp
clc
pop
clc
cmpsb
clc
dec
ret
mov
fwait
jmp
mov
fadds
fnstcw
loopne
dec
or
xchg
xor
add
add
add
add
add
jae
add
fstpl
in
push
into
iret
sub
xchg
xchg
dec
add
add
jmp
mov
fwait
jmp
jp
adc
add
add
stc
adc
add
decl
cld
push
ret
mov
sahf
dec
loopne
movsl
clc
aam
mov
cmp
and
add
cmp
clc
test
mov
add
lcall
testl
fwait
jmp
cli
sub
in
xor
push
ret
xchg
xchg
xchg
test
inc
clc
outsl
mov
mov
push
or
push
ret
inc
pop
sub
fcoml
xchg
sub
test
stos
in
adc
mov
push
repz
stos
push
add
xchg
mov
xor
add
out
mov
jmp
xor
lods
jno
add
add
ja
xor
clc
test
mov
add
pop
xchg
daa
clc
cld
sbb
pushl
jb
add
sub
into
scas
sub
push
add
mov
pop
iret
inc
add
insl
rolb
add
daa
clc
fsubrs
es
repnz
into
cmp
add
cmp
fs
out
addr16
pushf
inc
clc
cmp
add
push
clc
jo
add
xbegin
fwait
inc
clc
popa
add
jle
pop
aad
mov
lret
stc
mov
add
xchg
dec
jmp
clc
fwait
rclb
fwait
jmp
push
xchg
cmpsb
cmpsb
adc
add
sub
insb
mov
clc
jmp
data16
cmp
add
pause
stos
outsb
xchg
fnstcw
and
add
sub
roll
add
push
shll
int
mov
clc
iret
outsl
xor
add
clc
push
xchg
jl
clc
fwait
dec
push
push
ss
cs
add
and
xchg
out
mov
dec
ja
clc
outsl
lods
loopne
into
in
and
add
clc
movsb
clc
jo
add
pop
das
stc
cmp
inc
add
sbb
cs
clc
pop
lret
mov
sar
aas
or
lahf
jno
add
add
push
xor
imul
clc
jle
push
clc
add
add
outsl
and
push
add
repnz
into
pop
pop
addr16
jp
mov
fwait
jmp
aas
and
jp
push
add
addr16
push
add
mov
add
jnp
popf
push
push
fwait
jmp
outsl
sub
pop
ja
jle
jb
add
repnz
add
sahf
movsl
clc
cmpsl
clc
jmp
clc
push
add
imul
cmp
in
test
clc
mov
xor
ret
sub
dec
dec
mov
clc
lret
cmp
je
adc
add
dec
out
inc
clc
in
pushf
imul
call
xlat
inc
add
ljmp
jmp
adc
dec
xor
add
clc
jo
add
stos
into
push
add
cmp
imul
ja
add
das
sbb
add
mov
dec
ljmp
test
jo
add
pop
sub
cmp
fwait
jmp
sub
or
add
aaa
xabort
call
lods
jae
add
movsb
clc
sub
mov
scas
xchg
xchg
mov
cmp
clc
fsubp
clc
or
enter
in
pmuludq
add
clc
aaa
mov
add
and
add
pop
push
add
dec
cmp
add
jo
add
xor
js
inc
add
clc
cmp
sub
add
mov
clc
jno
add
pushf
pusha
add
in
leave
push
mov
fwait
jmp
adc
jne
xchg
and
inc
clc
clc
mov
sbb
xor
mov
and
add
add
inc
clc
push
cmp
mov
add
cmp
add
pusha
add
scas
je
inc
add
jns
add
aaa
cltd
add
add
dec
ret
clc
ret
add
stos
gs
jmp
push
in
push
dec
imul
or
icebp
lcall
lcall
add
push
idiv
pushl
sahf
sub
jg
daa
clc
xchg
pop
clc
cmpsb
clc
mov
mov
pop
jmp
cmp
sbb
add
add
sbb
push
adc
add
mov
jbe
ret
clc
std
cmp
xchg
add
add
add
icebp
inc
clc
shlb
add
add
fwait
push
sar
clc
icebp
push
cmp
jnp
xabort
fwait
lcall
mov
clc
insl
inc
add
jp
pushf
sub
add
divl
clc
movsb
clc
aam
dec
jno
add
ljmp
add
stc
push
add
fldenv
add
cwtl
test
sbb
push
ret
dec
popa
addr16
xor
add
mov
clc
jne
dec
and
add
clc
lods
and
add
outsl
sub
clc
mov
clc
mov
cmp
xchg
ljmp
clc
jp
add
adc
add
add
xchg
xabort
cmc
ljmp
sbb
pop
test
pop
mull
neg
sbb
push
cmp
add
xchg
jo
add
and
add
iret
mov
add
add
add
inc
clc
enter
and
add
int
or
mov
out
fimuls
mov
inc
add
or
add
in
aas
push
gs
mov
and
push
ret
ja
cmp
mov
add
push
int
test
clc
fcmovb
clc
mov
cmpsb
clc
inc
clc
into
push
add
xchg
movsl
clc
mov
cmp
clc
mov
push
je
clc
dec
hlt
rsqrtps
add
mov
decl
lods
popa
mov
clc
es
aaa
add
ret
shlb
push
mov
add
ret
clc
jns
sbb
add
aad
xchg
loopne
pop
iret
out
or
clc
and
add
inc
add
push
clc
insb
and
add
or
xchg
jp
addr16
adc
add
imul
mov
jae
add
clc
sub
repz
aaa
push
mov
add
mov
es
push
add
or
in
mov
jne
stos
shll
add
inc
clc
push
clc
push
add
fldl2e
push
jmp
inc
cwtl
insb
clc
jg
clc
out
jbe
clc
add
add
jmp
adc
add
mulb
clc
insb
cmpsl
clc
and
xchg
addr16
cmp
js
aas
mov
fwait
jmp
and
lods
xlat
rcrl
dec
lret
and
into
xchg
pusha
add
cmp
add
inc
add
mov
add
into
in
or
clc
cmp
add
test
mov
cmp
xchg
ss
cmp
add
lcall
xor
add
add
ljmp
add
cmp
sahf
lcall
jmp
xor
add
adc
inc
add
lock
ret
clc
jl
mull
add
fwait
jle
add
add
mov
add
mov
test
dec
pop
sub
clc
in
lods
or
sahf
lret
and
add
add
in
mov
bound
add
mov
push
add
lcall
scas
mov
clc
mov
into
pushf
xor
clc
addr16
pushf
jne
lea
clc
or
clc
cmp
ss
fucomp
test
or
push
fwait
jmp
sub
sub
clc
or
jle
ljmp
adc
aad
es
xor
push
testb
out
gs
sub
sbb
clc
aam
mov
and
add
jmp
sub
mov
xor
fwait
jmp
sahf
sub
add
cli
cld
das
or
xchg
xchg
daa
clc
repnz
sub
add
sub
add
mov
add
std
xchg
pop
outsb
stc
fdivr
inc
clc
xor
outsl
or
jp
or
or
clc
mov
add
push
clc
or
out
push
add
mov
in
sbb
add
mov
xchg
decl
orb
push
outsl
clc
lods
mov
adc
mull
add
inc
add
lcall
ds
sub
clc
jl
add
or
clc
rcll
clc
jns
in
and
add
clc
sar
add
jmp
push
sub
pop
jnp
xor
add
leave
fadds
add
inc
clc
stos
jnp
jnp
inc
clc
sub
jl
clc
inc
clc
cmp
mov
clc
cmpsl
clc
mov
mov
add
inc
add
xchg
je
clc
xchg
xchg
xor
add
cmp
clc
adc
and
pop
and
add
pop
clc
lret
int3
sahf
popf
jnp
cmpsb
clc
push
into
jmp
inc
das
sub
aam
add
pop
popa
add
lock
add
insb
adc
xchg
fsubs
vmovups
add
inc
add
out
in
dec
addr16
mov
int
icebp
fldl
imul
mov
jb
add
clc
add
add
push
xlat
fldcw
add
cmp
xchg
push
mov
fwait
jmp
cmp
add
jmp
or
gs
jbe
dec
mov
push
add
push
add
out
mov
mov
xchg
out
pop
pop
testl
into
sub
mov
mov
mov
pop
nop
clc
incl
xchg
call
add
push
imul
add
inc
add
out
push
add
cwtl
ds
mov
add
sbb
test
jmp
decl
fadds
ret
es
xor
mov
adc
add
ror
cld
push
ret
sub
cld
push
ret
insb
push
jecxz
and
add
add
jbe
cmp
out
sar
insb
pop
clc
jmp
adc
add
std
pop
mull
popf
xchg
fistl
add
sub
gs
sbb
jmp
inc
dec
cmp
lret
inc
add
xchg
push
clc
push
cli
inc
clc
xor
add
xor
fwait
jmp
sub
mov
adc
add
fwait
cwtl
inc
clc
leave
or
test
arpl
add
add
xchg
test
clc
out
jne
frstor
add
dec
sub
clc
add
stos
sub
clc
movsb
clc
xchg
imul
daa
clc
mov
push
add
notl
add
ja
clc
mov
push
add
jae
add
sar
nop
insb
mov
add
dec
lret
movsl
clc
push
insl
fwait
jmp
sub
icebp
xchg
add
add
clc
add
add
mov
clc
arpl
add
jno
add
add
addr16
or
mov
mov
mov
clc
fadds
clc
dec
inc
clc
fidivs
add
inc
add
xbegin
mov
test
mov
jmp
pop
ja
cs
clc
inc
clc
sar
push
clc
lods
test
jns
inc
add
cmpsl
clc
pop
clc
sub
jne
fwait
jmp
subb
cmp
cmp
jno
add
clc
stos
mov
clc
into
inc
add
lea
add
dec
js
xchg
adc
add
add
inc
add
xchg
xor
add
clc
cwtl
jns
mov
inc
clc
dec
add
add
add
fwait
jmp
test
clc
cmp
fwait
pop
cmp
je
negl
fwait
mov
clc
jne
add
add
xor
add
clc
mov
ds
ja
mov
mov
mov
clc
cmp
xchg
pop
mov
mov
fwait
jmp
pop
sbb
or
scas
sbb
jecxz
sbb
call
mov
and
sbb
fidivrl
add
lea
in
sbb
pop
cmp
jmp
imul
imul
div
inc
clc
lods
dec
rcrb
ljmp
add
clc
mov
mov
clc
xchg
decl
dec
add
adc
add
cld
adc
clc
push
inc
clc
idiv
out
fidivrl
fwait
jmp
das
aaa
lea
loopne
xlat
sahf
mov
add
push
clc
inc
clc
leave
inc
clc
jge
outsl
jns
mov
cmp
int
add
jnp
cmp
adc
add
aaa
xor
add
inc
add
pop
dec
inc
clc
dec
sbb
bound
add
xabort
stc
repnz
add
mov
rclb
xchg
pop
mov
sub
push
fwait
jmp
cmpsb
das
add
fwait
jmp
cmpsb
push
aas
pop
push
pop
dec
pop
incl
sti
fwait
jmp
sub
clc
ds
mov
clc
stos
or
add
cmp
jg
add
stc
add
std
movsb
clc
dec
cmp
pop
cmpsl
clc
out
mov
add
add
data16
and
add
es
or
add
add
roll
add
and
add
push
add
or
dec
jp
clc
jne
add
cli
push
add
push
mov
lahf
mov
arpl
add
lret
mov
add
aam
ss
sbb
testb
clc
clc
dec
mov
loop
insl
push
or
mov
gs
mov
pop
fucomp
xor
push
test
lahf
data16
fdivl
add
jbe
sbb
es
inc
clc
inc
clc
mov
enter
jnp
lcall
fmul
dec
push
cld
cmp
jl
add
inc
add
outsl
test
mov
outsb
dec
mov
add
inc
clc
mov
xabort
clc
insb
nop
bound
add
add
into
sar
pop
dec
lret
pop
mov
xchg
fcoms
lea
add
xor
add
fwait
jmp
test
sub
push
in
push
in
dec
addr16
and
add
fwait
jmp
pop
aaa
int
mov
test
mov
lcall
add
add
add
int3
sbb
mov
add
cmp
clc
or
pop
pop
dec
xchg
pop
xchg
push
add
sar
clc
ja
mov
add
pop
push
fwait
jmp
ja
jns
or
test
clc
cli
lock
repz
clc
sbb
clc
mov
add
cmp
dec
sub
lret
add
pusha
add
add
add
add
mov
clc
out
push
fwait
mov
stc
or
add
and
add
clc
or
inc
clc
cmpsl
clc
sub
add
leave
xchg
nop
clc
test
loope
sbb
push
hlt
mov
adc
add
jl
negl
sbb
add
sub
fwait
jmp
fs
cmp
add
and
add
inc
clc
push
icebp
shll
cld
notl
add
in
ss
dec
cltd
pop
jne
cmp
fstl
add
mov
mov
mov
dec
mov
pop
addr16
imul
clc
dec
mov
imul
and
fwait
jmp
imul
add
push
and
add
add
push
add
cmp
dec
cmp
add
in
inc
clc
xlat
jo
add
test
setne
xchg
mov
push
lcall
lcall
jne
clc
or
out
in
xbegin
cld
cltd
cs
aaa
sub
clc
sti
fcmovnb
clc
iret
lret
int
test
jecxz
xchg
fidivrl
cmpsb
clc
lahf
cmp
mov
scas
mov
xchg
clc
push
sub
pushf
add
add
push
ficoml
mov
mov
out
mov
pop
clc
mov
mov
inc
clc
cmp
pop
xor
add
in
int
clc
mov
clc
xchg
bound
add
cmp
clc
mov
fs
pop
mov
outsb
pop
aam
fwait
jo
add
cmp
rorl
pop
fs
xor
add
or
clc
cwtl
je
push
lea
add
sub
add
cmp
jmp
xor
es
jecxz
xabort
lods
jmp
fidivrs
cmp
add
pop
sar
add
xchg
pop
jge
cmp
clc
out
dec
and
stos
cld
adc
add
stc
inc
add
cwtl
inc
clc
test
add
dec
stos
incb
add
cltd
push
cli
cmpsl
clc
add
add
jecxz
cmpsl
clc
bound
add
pop
pop
in
sbb
fwait
jmp
adc
clc
pop
bound
add
add
sub
add
in
adc
add
adc
sti
sar
fdivs
and
cmp
movsl
clc
loop
int
clc
imul
add
add
add
add
sub
add
fwait
jmp
inc
test
or
add
cmp
xor
add
add
push
clc
data16
xchg
cmp
clc
jmp
popa
add
mov
lcall
add
cwtl
std
xor
fisubrs
add
adc
add
xchg
mov
int
mov
jg
mov
fistpl
iret
sub
add
add
add
out
push
add
movsb
clc
es
movsl
clc
sar
add
into
rep
clc
cmp
dec
insl
popa
add
mov
outsb
inc
add
fwait
or
clc
rcrl
add
insl
or
add
cmp
clc
adc
push
adc
clc
or
add
jl
add
mov
xor
add
add
lcall
fdivrs
clc
mov
add
pop
xbegin
jbe
or
jge
clc
push
add
add
in
shll
add
cmp
clc
mov
fstl
movaps
add
sub
clc
out
cmp
mov
clc
decl
jmp
sbb
mov
jecxz
adc
add
clc
mov
jns
cmp
loope
pop
xchg
mov
adc
or
jl
clc
out
jg
cld
sbb
rcrb
lcall
push
mov
out
std
jg
fistpll
cs
popa
add
dec
je
clc
inc
clc
daa
clc
icebp
jno
add
cmp
add
in
clc
aas
dec
scas
fadds
add
hlt
add
add
clc
mov
clc
in
mov
clc
mov
jmp
jno
sahf
inc
pop
scas
jns
rorl
mov
clc
sbb
jns
add
lods
or
pop
inc
add
cmp
add
aad
test
cmp
psubq
fwait
push
add
jecxz
ret
faddl
hlt
pop
fisubrl
xlat
bound
add
clc
push
add
test
cmpsl
clc
jmp
clc
bound
add
out
ljmp
add
bound
add
data16
icebp
cmp
clc
mov
add
ret
clc
add
add
add
mov
iret
or
xor
add
cmp
add
dec
in
ficomps
sti
adc
add
bound
add
shll
add
add
lcall
loop
stos
add
add
loopne
out
btr
add
mov
fwait
jmp
je
adc
clc
jg
es
lock
or
add
push
pop
sar
repnz
cmpsl
clc
and
add
push
clc
in
inc
clc
and
add
and
add
add
test
fmulp
stos
lcall
jmp
fwait
jmp
xor
clc
pop
push
sub
adc
add
lea
and
sbb
add
cmp
dec
adc
add
je
fwait
jmp
stos
mov
fsts
mov
sahf
cmp
add
or
stc
ret
clc
ds
fs
cmp
mov
enter
mov
insb
push
xchg
int3
xor
clc
into
ja
inc
add
or
clc
mov
clc
jmp
and
add
popf
sbb
jl
cmp
fidivrl
and
add
clc
fs
into
aam
mov
xor
add
adc
push
fwait
jmp
sbb
sub
stos
or
mov
sub
clc
ret
add
pop
cmpsl
clc
fwait
ds
mov
jno
add
loope
loop
pop
fdivl
add
or
or
clc
xchg
add
add
and
daa
clc
pop
clc
bound
add
ja
add
xchg
aam
mov
fwait
jmp
test
imul
add
and
add
insl
popa
add
xchg
xchg
xchg
arpl
add
popf
inc
add
loope
in
fimull
add
sarl
sbb
sti
aas
push
add
sbb
adc
clc
xchg
movsb
clc
repnz
popa
add
enter
and
add
lcall
clc
add
add
sar
add
add
clc
xor
clc
roll
xchg
incb
repz
sbb
clc
and
test
out
or
repz
add
cmc
sbb
add
adc
add
movsb
clc
adc
sub
mov
add
ds
or
clc
push
sub
push
clc
cmp
jecxz
pop
sbb
cli
jecxz
push
clc
cmp
or
test
cltd
ret
clc
std
daa
clc
mov
and
add
jge
js
mov
fwait
jmp
jno
das
stos
pop
cmp
xabort
lcall
adc
add
inc
clc
xchg
iret
iret
xchg
inc
add
sar
mov
fwait
jmp
scas
fs
pop
pop
clc
cmp
xor
fstl
jmp
push
adc
jmp
and
ret
clc
fsubrs
mov
add
iret
dec
mov
add
lret
and
add
out
xlat
inc
add
insl
dec
cmp
lcall
lcall
cmp
xchg
mov
sahf
mov
inc
add
sbb
add
mov
dec
sbb
jmp
loope
incl
gs
in
xchg
mov
ret
clc
xchg
jbe
xor
dec
push
sar
push
clc
bound
add
cmp
clc
movsb
clc
lods
jbe
pop
xchg
inc
add
push
add
mov
clc
lcall
and
in
rclb
aaa
add
fwait
jmp
sub
imul
add
out
and
pop
inc
add
flds
clc
mov
stc
push
movsb
cld
push
ret
movsb
sahf
dec
std
test
xlat
nop
mov
hlt
lea
fwait
jmp
outsl
sbb
xbegin
add
clc
push
clc
data16
mov
jmp
inc
sub
lea
cld
push
ret
test
add
fstps
test
jl
es
or
fnsave
int3
aaa
fcmove
jg
ds
pop
rorl
hlt
filds
shl
lods
xor
add
hlt
and
add
xchg
jmp
clc
or
mov
in
shr
out
jmp
test
fwait
jmp
add
es
push
clc
jecxz
xlat
stos
and
add
adc
add
int
pop
jae
jmp
aaa
push
add
lcall
jmp
sub
cwtl
pusha
add
cmc
pop
jp
sbb
arpl
add
fldenv
add
jns
clc
push
cmp
out
loopne
sti
push
add
sar
clc
test
mov
sahf
out
mov
xor
add
add
outsl
add
mov
mov
cmp
out
cli
sti
fmull
stos
and
add
pop
mov
movsb
clc
sub
clc
mov
or
push
sar
jge
sub
push
add
js
inc
add
sbb
add
out
mull
push
clc
ljmp
fldt
and
clc
lods
cmc
sbb
add
push
inc
clc
cmpsl
clc
pop
mov
add
in
fwait
lret
add
mov
clc
push
out
and
add
clc
insb
or
xchg
mov
jmp
mov
fwait
jmp
push
dec
and
pop
xor
mov
adc
add
dec
xchg
mov
clc
aaa
push
pusha
fwait
jmp
je
sub
fisubs
add
in
jp
in
push
clc
mov
ds
ficoml
das
adc
add
add
mov
clc
addr16
and
add
add
push
adc
movsb
sub
loopne
iret
insl
mov
add
cmp
into
xor
add
sbb
clc
ss
dec
push
adc
add
cmp
add
clc
lcall
cmp
cld
jo
add
cmp
jmp
sub
test
hlt
mov
std
push
jecxz
std
in
ret
clc
xchg
add
aas
push
aas
js
dec
mov
clc
push
add
add
add
jle
es
dec
push
sahf
mov
mov
inc
add
pop
cmc
decb
sub
fidivl
fwait
bound
add
add
sbb
add
push
test
fwait
jmp
or
add
test
clc
and
test
fdivr
push
dec
clc
lret
jbe
xbegin
imul
xchg
aam
aas
push
jae
add
push
fwait
jmp
jp
dec
sub
clc
mov
push
movzwl
fwait
jmp
sahf
sub
inc
add
push
jmp
add
cld
es
mov
sub
add
lahf
cmp
push
lock
add
dec
cmpsl
clc
fwait
mov
lret
clc
jo
add
in
mov
add
loope
fwait
sub
xchg
cmp
add
sbb
jmp
adc
jge
clc
mov
clc
jbe
mov
ss
jne
leave
cmp
clc
mov
mov
mov
cmp
clc
sti
sbb
add
dec
xchg
push
clc
cwtl
jp
clc
lods
sbb
clc
sub
clc
mov
outsb
js
addr16
xor
add
mov
data16
data16
jg
fst
mulb
clc
jne
dec
jecxz
sub
sbb
dec
jns
add
out
inc
clc
xor
add
sub
and
fwait
cmp
aam
clc
sar
clc
pushf
push
cmp
clc
push
adc
add
jbe
clc
push
aas
jnp
cmpsl
clc
mov
aam
clc
sar
add
jmp
push
add
ljmp
dec
ja
add
mov
lahf
fisttps
clc
scas
or
clc
jl
add
push
or
jmp
fwait
jmp
sub
clc
lret
add
jnp
or
cmpsb
clc
sarb
clc
in
xchg
out
mov
clc
push
add
sar
fxch
fsubrp
sbb
add
mov
xabort
popa
add
xchg
test
clc
cmp
add
test
xchg
mov
push
mov
flds
mov
mov
add
jb
add
mov
ja
add
sbb
sbb
clc
sar
dec
call
pop
prefetchw
add
into
pop
pop
cld
es
xchg
in
and
push
add
addr16
es
and
add
sbb
clc
push
clc
xlat
xor
add
xor
leave
incl
icebp
decl
das
inc
add
sub
pop
in
inc
add
xchg
mov
ds
cltd
repnz
cmpsl
clc
push
test
cmp
clc
popl
sahf
pop
jle
clc
inc
add
xor
add
push
add
mov
add
xor
add
add
add
imul
and
add
mov
fwait
jmp
movsb
xchg
sahf
test
fwait
jmp
xor
jg
insl
lock
icebp
dec
push
lret
imul
clc
mov
clc
movsl
clc
mov
add
or
pop
loope
add
add
testl
mov
add
aad
ds
clc
adc
add
push
add
and
add
add
pop
nop
jl
jl
adc
add
aas
repz
inc
add
push
add
pop
mov
clc
out
clc
dec
adc
pop
testb
sbb
clc
inc
clc
ljmp
dec
cmp
adc
xbegin
push
clc
mov
clc
movsb
clc
add
add
data16
cmpsb
clc
xchg
cmp
aas
push
inc
clc
cmp
clc
test
add
add
add
clc
clc
inc
add
pop
fisubs
xbegin
clc
mov
xchg
push
jmp
je
test
rorl
mov
mull
adc
inc
clc
cmp
clc
sbb
push
fwait
jmp
xor
mov
arpl
add
xchg
or
data16
ds
pop
adc
add
add
insb
mov
add
dec
mov
xor
add
mov
push
cmp
cmp
clc
jge
inc
add
sti
dec
leave
xor
add
clc
enter
fldpi
or
in
iret
call
shl
clc
gs
mov
add
or
cvtps2pd
test
fdivr
mov
fwait
jmp
sub
sub
clc
pop
xchg
xchg
insl
outsb
ss
adc
add
add
xor
add
in
push
pop
data16
jae
add
add
cmp
clc
mov
mov
in
lods
xor
test
or
add
mov
icebp
dec
or
dec
sahf
sub
in
mov
clc
push
pusha
fwait
jmp
sub
push
add
lods
addr16
ljmp
je
add
add
mov
clc
stos
test
imul
mov
mov
loop
push
das
push
mov
leave
push
mov
xbegin
add
cmp
add
clc
pop
mov
clc
mov
xbegin
xchg
mov
xchg
push
add
and
add
icebp
adc
add
add
and
add
jp
push
add
test
clc
pop
cmp
lret
and
add
add
or
sub
add
stos
sar
clc
dec
ret
imul
outsb
ds
jl
mov
mov
add
add
testb
inc
add
mov
mov
add
push
push
add
mov
and
adc
add
imul
fucomip
pop
pop
aad
sbb
xor
add
add
dec
pop
clc
xor
add
inc
add
lea
add
gs
dec
mov
mov
imul
leave
movsl
clc
inc
add
outsb
jl
add
cld
push
ret
cmp
fmull
xchg
ja
dec
sub
add
mov
add
iret
stos
arpl
add
add
pop
mov
sub
in
xchg
lods
adc
jge
gs
adc
add
dec
pop
xor
add
test
repz
add
clc
pop
add
add
clc
fcomps
cmp
mov
clc
cmp
add
add
add
or
add
add
cmp
cld
mov
jmp
sub
add
fdivrs
clc
pop
inc
add
arpl
add
mov
fwait
jmp
test
outsb
lret
or
or
clc
test
sub
clc
int3
nop
xchg
into
aaa
test
shll
fnstsw
push
add
aaa
dec
out
lret
mov
push
push
fwait
jmp
adc
sti
clc
test
sbb
clc
add
add
clc
enter
add
clc
lret
add
pop
lret
cmp
or
lret
add
clc
mov
pusha
add
ljmp
negl
clc
in
xor
clc
mov
repnz
xabort
add
inc
clc
cmp
cmp
outsl
jecxz
popa
add
or
pminub
mov
dec
outsb
add
add
out
lea
dec
scas
or
sub
mov
clc
mov
add
inc
add
scas
add
add
jge
dec
notl
clc
jle
add
test
add
inc
add
push
fstpt
inc
add
add
add
add
cmp
and
add
clc
bound
add
jbe
clc
data16
sbb
mov
xbegin
add
add
stos
fists
div
outsb
adc
add
clc
jnp
sub
adc
add
scas
xchg
pop
or
dec
or
lods
sbb
lea
jbe
add
sub
adc
clc
jecxz
mov
add
hlt
pop
aam
add
mov
clc
stc
fstp
popf
inc
add
and
add
jno
add
clc
push
add
adc
mov
add
insl
cmp
fcompl
push
sbb
pop
clc
mov
add
jge
test
cltd
cmp
mov
fwait
jmp
push
sub
clc
lahf
bound
add
into
xchg
mov
insb
xabort
lock
pusha
fwait
jmp
cmpsb
aaa
add
add
clc
inc
add
ret
jl
add
adc
add
clc
fs
or
clc
mov
outsl
sub
xor
add
fs
lock
clc
jbe
clc
repnz
in
sbb
clc
pop
cmp
pop
mov
push
mov
pop
cmp
clc
cmp
xchg
lods
scas
lret
pop
aas
cmc
jbe
add
sbb
xor
shll
pop
pop
adc
cmp
xabort
add
pop
fstl
xchg
popf
mov
mov
call
imul
clc
insb
into
pop
cwtl
js
clc
aas
cmp
clc
add
add
add
test
shlb
add
out
sbb
add
aad
cmp
add
lret
data16
push
clc
cs
leave
xchg
call
push
inc
clc
sbb
clc
clc
arpl
add
pop
pushf
push
in
lret
pop
push
lret
add
stos
mov
clc
jb
add
in
std
sbb
fiaddl
xor
shll
adc
iret
gs
lea
clc
in
inc
clc
das
cmp
nop
rcrl
sbb
pop
lret
lahf
sbb
fwait
jmp
inc
add
sub
add
add
in
test
adc
add
and
jb
add
dec
rcrb
clc
loope
pmaxub
jns
and
fwait
jmp
push
and
mov
add
add
lea
bound
add
mov
clc
scas
push
add
add
add
add
jg,pt
sarl
ljmp
scas
dec
inc
clc
clc
decl
xchg
push
add
xor
sbb
stc
in
enter
or
add
xbegin
repnz
pusha
add
jbe
sar
mov
add
add
pop
loopne
cld
mov
mov
xor
add
pop
xor
add
add
add
out
jge
out
and
mov
clc
and
clc
jle
mov
clc
dec
jnp
loopne
push
push
add
je
jmp
fwait
jmp
or
xor
add
clc
test
add
sahf
push
sbb
add
pop
sub
cmp
cld
cltd
push
outsb
imull
or
lods
clc
sahf
popa
add
rorl
or
into
or
aas
mulb
sbb
int
cmpsl
clc
mov
aaa
dec
je
mov
cld
push
ret
mov
mov
leave
mov
icebp
or
clc
daa
clc
pop
mov
add
xor
add
add
dec
test
pop
mov
scas
or
clc
xchg
mov
add
xabort
iret
ja
sbb
sub
clc
push
adc
add
cmpsb
clc
push
add
in
testl
sar
push
ret
pop
jg
xor
add
repnz
clc
pop
pop
pop
clc
lea
clc
sbb
rclb
clc
jae
add
inc
add
cmp
sbb
test
jmp
aas
insb
test
sub
adc
xchg
or
gs
mov
clc
mov
outsl
mov
nop
cmpsl
clc
leave
sub
enter
push
out
or
mov
or
clc
add
add
je
clc
adc
cmp
jmp
push
aas
sub
sbb
movsl
clc
popf
std
sub
stos
add
adc
jne
cwtl
nop
add
add
add
add
pop
test
clc
loopne
clc
stos
add
add
mov
xchg
mov
clc
mov
pop
clc
dec
xor
add
add
clc
inc
clc
or
in
in
adc
clc
arpl
add
lcall
add
clc
cmp
clc
add
and
add
pop
sti
xor
add
add
xchg
and
add
push
lahf
push
add
pop
sar
aaa
lcall
jmp
sub
test
and
add
clc
or
sti
cld
aas
lcall
xchg
jae
add
cld
in
lret
add
clc
pop
test
enter
xor
add
aas
jno
inc
clc
cmp
xchg
lret
cmp
add
add
jge
repz
scas
inc
clc
ficomps
cmp
add
clc
decl
ret
movsl
decl
stos
insl
cmp
clc
jp
incl
repz
jmp
lods
pop
jge
mov
add
cs
clc
push
clc
test
insb
adc
add
add
ds
fdiv
fbld
add
mov
je
aas
movlps
add
clc
pop
sbb
mov
lcall
or
clc
icebp
enter
hlt
lods
test
jnp
data16
sub
cmp
clc
adc
add
add
xchg
sub
clc
xchg
sar
jae
add
fadd
clc
das
mov
scas
dec
sbb
jns
mov
clc
or
outsl
lret
add
add
clc
or
sub
sbb
add
divb
add
in
dec
pop
out
fwait
mov
add
add
push
and
add
add
push
clc
adc
add
add
add
add
add
pop
test
clc
popa
add
xor
add
add
jae
add
push
add
je
add
mov
sbb
push
add
insb
cmp
mov
or
clc
add
add
or
clc
pop
loopne
and
sbb
push
add
mov
clc
fwait
cmc
sub
xchg
or
add
pusha
add
and
in
imul
pushf
mov
clc
iret
leave
addr16
jne
call
clc
fs
cmpsl
clc
aas
es
out
int3
mov
jne
std
int
push
in
mov
test
dec
lock
mov
add
lahf
xor
add
and
add
add
add
dec
sahf
gs
pusha
add
cmp
test
add
add
mov
add
adc
add
fcmove
ror
cmpsb
clc
push
add
xor
mov
fwait
jmp
lea
sub
or
dec
sar
sub
scas
cmpsb
clc
notb
add
and
add
add
add
push
jecxz
in
jae
add
jns
dec
pop
clc
adc
add
add
in
stc
aad
in
and
add
clc
sub
add
or
add
add
add
sar
stc
lea
add
adc
add
cmp
sar
mov
add
adc
add
test
cmp
add
mov
ret
fwait
jmp
or
push
add
add
add
jmp
js
adc
add
add
mov
pop
fsubs
adc
add
inc
clc
jecxz
xor
add
xor
add
xchg
mov
clc
movsl
clc
jle
mov
sbb
add
fs
testl
or
clc
out
inc
add
sbb
add
sub
cmp
fwait
jmp
push
ret
add
cmp
clc
xbegin
add
fwait
jmp
pop
lea
pop
clc
int3
stos
pop
cmp
add
pop
mov
loop
incl
jo
fwait
jmp
push
sub
insl
cs
add
mov
repz
testl
clc
int3
inc
add
je
xchg
inc
clc
push
nop
movsl
clc
xlat
jmp
mov
or
sar
add
loop
mov
push
clc
xor
inc
add
sar
lods
cmp
cmpsl
clc
bnd
clc
inc
add
fnsetpm(287
clc
inc
clc
roll
add
sub
cmp
mov
ds
add
dec
jge
and
add
inc
clc
outsb
add
add
clc
cltd
mov
jecxz
mov
lock
int3
ja
int
xchg
push
adc
add
decl
test
jmp
inc
clc
cmp
clc
outsb
push
push
mov
add
add
add
jmp
add
mov
clc
filds
clc
jp
adc
add
add
jmp
fwait
jmp
jno
add
imul
loopne
inc
clc
test
ror
add
add
add
jg
rcrb
adc
add
jbe
into
test
sarb
lahf
aam
cmp
xabort
scas
mov
ja
add
sar
add
bound
add
fwait
jmp
mov
ja
inc
add
pop
je
adc
add
xor
add
dec
mov
clc
add
add
jne
mov
and
add
fwait
jmp
outsl
sub
mov
jge
clc
outsl
push
add
inc
add
loop
and
add
add
gs
shlb
add
clc
mov
add
std
pusha
add
mov
add
insb
fistps
leave
jbe
add
pop
or
das
mov
notb
dec
pop
lret
pop
push
in
ds
push
add
dec
push
clc
sar
add
fisttpl
or
popa
add
push
clc
ficompl
clc
mov
ret
add
movsl
clc
pusha
add
fnsave
clc
mov
jae
add
clc
cwtl
or
lcall
add
mov
clc
in
clc
push
stos
jecxz
sbb
jecxz
xchg
stos
in
test
dec
xor
add
push
clc
xor
add
scas
jns
clc
aad
clc
sti
loope
es
cld
adc
add
add
mov
shlb
das
push
mov
addr16
mov
lock
clc
jne
pop
out
mov
add
popf
dec
xchg
cmp
addr16
bound
add
sub
bound
add
repnz
pop
shlb
decb
xchg
mov
test
in
cmp
mov
clc
lea
or
add
pop
dec
mov
add
das
das
jae
add
add
cmp
or
xchg
push
mov
fwait
jmp
mov
movsb
sbb
add
imul
and
add
add
add
popa
add
and
add
xchg
push
add
xor
add
xchg
pop
xor
add
push
iret
cmp
in
mov
clc
and
insb
dec
xor
add
ss
clc
jno
add
clc
or
cmpsl
clc
xchg
scas
lods
pop
push
and
add
add
enter
clc
mov
add
mov
add
mov
pop
jp
add
add
dec
push
fwait
jmp
test
push
add
call
cld
push
ret
sub
inc
clc
sar
inc
clc
test
cli
std
jg
xchg
outsb
pop
enter
sar
add
sahf
and
add
add
cwtl
outsl
mov
sub
add
sbb
clc
xchg
cmpsl
clc
inc
add
ficoms
iret
cwtl
mull
add
out
add
add
cs
clc
mov
sar
and
add
cmp
add
jno
add
cmp
add
mov
add
pop
xchg
aas
pop
jno
add
cmp
xlat
cmp
pop
lret
pop
test
sbb
clc
clc
or
add
mov
aad
cmpsl
clc
clc
cwtl
arpl
add
jp
clc
pop
adc
sub
adc
add
or
jne
into
iret
cmpsl
clc
stos
jno
add
cmp
xor
add
clc
xchg
dec
ljmp
add
aas
out
clc
shrb
clc
mov
ja
ljmp
mov
in
mov
jle
and
add
add
sub
push
fwait
jmp
push
sub
cld
adc
add
clc
mov
jae
add
add
xchg
cmp
adc
mov
pop
test
loop
xor
add
add
cmp
fnsave
add
lret
sbb
clc
int
or
mov
mov
jne
fwait
jmp
mov
fcmove
push
clc
sub
add
jbe
addr16
sub
jmp
cmp
clc
cwtl
and
xbegin
add
lods
sarl
clc
insl
jge
push
xor
add
add
and
add
add
pop
leave
jl
roll
pusha
add
bound
add
dec
pop
mov
add
add
mov
repnz
and
add
clc
fildl
mov
lahf
mov
mov
add
dec
data16
push
add
sarb
jge
pop
cmpsl
clc
lea
movsb
clc
sub
arpl
add
add
add
clc
jnp
aas
sbb
clc
fwait
jmp
lods
fwait
cmpsb
sbb
xchg
lcall
mov
adc
clc
sti
daa
clc
jo
add
lock
clc
pop
jb
add
mov
clc
dec
enter
pop
fidivrl
mov
mov
mov
add
cmp
add
icebp
push
jle
clc
frstor
add
mov
cmp
or
clc
mov
lret
clc
data16
scas
lcall
rorl
sub
clc
adc
add
outsb
xchg
out
dec
hlt
cmp
mov
jmp
sbb
push
jae
jmp
add
add
clc
cmp
push
clc
insl
jl
pop
cmpsb
clc
mov
sar
mov
add
hlt
cmp
mov
clc
cmp
xor
clc
push
add
xor
add
add
jno
add
clc
icebp
gs
scas
mov
add
add
add
out
nop
call
lods
ss
fwait
jmp
je
add
add
add
fcoml
add
clc
mov
mov
cmp
dec
pop
sub
loop
jecxz
cmp
jge
sbb
fwait
xor
add
inc
add
cmp
clc
push
xchg
cld
ret
and
xchg
and
add
add
add
or
add
sub
cmp
clc
dec
nop
cld
sbb
data16
stos
push
loop
xchg
in
xchg
arpl
add
dec
mov
clc
cld
jno
add
jb
add
add
hlt
sbb
icebp
ljmp
inc
jno
stos
ja
clc
xchg
fs
cltd
daa
clc
push
mov
fwait
jmp
test
and
cmp
int3
xchg
in
sar
shlb
clc
sbb
aas
sbb
scas
in
cmp
clc
rorb
clc
add
add
mov
mov
add
push
add
mov
add
sarb
pop
js
add
xabort
movsl
clc
and
gs
sub
cmp
add
adc
add
stos
ja
push
add
lea
add
push
mov
jecxz
scas
mov
push
add
add
mov
add
xchg
cmp
add
es
cli
pusha
add
cmp
pop
cmp
pop
or
jmp
add
mov
add
cltd
inc
add
aad
and
add
mov
outsl
jno
add
xor
cmp
add
sarl
in
popa
add
repnz
aam
jle
mov
sbb
jmp
fwait
test
fdivrl
adc
add
sar
jnp
fcoms
add
xor
add
clc
sbb
test
lcall
add
add
test
in
push
lcall
incl
add
outsl
stos
xbegin
cmp
clc
and
lods
lock
fldenv
mov
repz
cmp
mov
jbe
sub
add
xor
out
rorl
add
ffree
clc
cs
movsb
clc
out
outsl
mov
add
dec
dec
adc
add
add
add
in
dec
clc
enter
clc
mov
add
cmc
daa
clc
adc
add
jae
add
push
fwait
jmp
sahf
cmpsb
pop
or
sar
popa
add
lock
add
xchg
mov
mov
add
clc
xlat
cmp
fisttpl
std
mov
add
mov
clc
jnp
pop
loope
cmp
not
ret
add
je
addr16
jl
mov
add
add
or
clc
jmp
clc
es
mov
clc
sahf
jo
add
clc
call
clc
cmp
push
fwait
jmp
sub
add
inc
clc
xchg
flds
add
cmp
dec
pop
push
add
in
inc
add
popf
je
or
ret
clc
imul
cli
push
clc
jl
sbb
jb
add
sti
pop
clc
xchg
std
lock
sub
mov
test
ret
fwait
pop
mov
fistps
clc
push
cmp
mov
movsb
clc
pop
das
cmpsb
clc
imul
adc
cld
loopne
bound
add
add
insl
cmp
std
in
pop
loop
mov
cwtl
iret
cmp
add
inc
clc
dec
pop
outsl
xor
add
or
push
add
add
jno
nop
push
inc
clc
jnp
data16
adc
add
dec
jns
movzwl
fwait
jmp
push
sub
stos
adc
add
ss
push
clc
cmp
fcom
arpl
add
jmp
mov
aaa
mov
add
mov
add
clc
mov
add
inc
add
inc
clc
xchg
mov
dec
xchg
mov
jnp
ficompl
and
add
scas
decl
es
mov
clc
dec
std
outsl
iret
mov
dec
cmpsb
clc
out
scas
sub
adc
insl
cld
insb
fbstp
sub
clc
popf
mov
test
in
pop
clc
cmpsl
clc
je
push
add
jne
decl
pop
add
sub
jg
add
adc
add
add
add
clc
inc
add
cmp
sbb
mov
testl
or
test
cmp
add
loope
mov
mov
insl
or
clc
push
add
cmc
mov
mov
add
sub
int3
sub
push
pop
clc
mov
add
out
clc
or
push
add
push
fisttpll
clc
out
cmp
mov
sub
push
aad
ljmp
sub
lock
sub
cmp
add
add
add
inc
add
push
add
hlt
jmp
bound
add
out
xchg
call
clc
mov
clc
cmp
clc
cmp
add
sub
cld
push
ret
sub
sbb
add
in
adc
add
daa
clc
lret
nop
test
stos
leave
dec
lret
add
pop
clc
in
data16
dec
sbb
hlt
rcrl
clc
mov
into
lea
cmpsb
clc
pop
push
imul
or
cmp
add
ds
mov
jmp
dec
ret
clc
fidivrs
sub
add
clc
or
add
fsubrs
jns
add
inc
clc
push
pop
sahf
aad
and
add
fwait
sbb
add
int
imul
clc
aad
imul
je
decl
cmp
call
sub
cmp
out
xchg
lock
call
clc
jmp
jecxz
inc
clc
or
icebp
neg
cmp
add
rcrb
push
fwait
jmp
jg
add
add
clc
jne
xchg
std
cmpsb
clc
xchg
test
ret
clc
mul
clc
das
popa
add
daa
clc
add
add
pop
mov
sti
and
add
sub
xor
xchg
scas
cmp
clc
clc
jecxz
aad
mov
loop
adc
add
mov
movsb
clc
decb
and
add
fwait
pop
popa
add
jo
add
fwait
out
pop
adc
inc
add
pop
add
add
pop
push
cmp
fwait
jmp
sbb
sbb
and
xor
je
fwait
jmp
cmp
clc
lods
rclb
add
fwait
xchg
push
clc
movsb
clc
xchg
out
lock
arpl
add
mov
clc
inc
add
pop
leave
dec
mov
imul
add
clc
dec
push
add
push
push
add
xor
add
pop
mov
shl
ljmp
pop
addr16
lcall
leave
xbegin
add
adc
inc
add
push
add
mov
mov
sub
add
clc
mov
clc
nop
enter
clc
dec
repnz
loopne
sbb
and
fwait
jmp
movsb
xor
aam
jne
fwait
jmp
scas
mov
add
dec
hlt
mov
sahf
mov
clc
dec
dec
in
mov
sar
mov
fwait
jmp
sub
jge
clc
fnsave
xabort
jae
add
add
and
aaa
and
add
pop
xchg
scas
hlt
or
add
xor
add
xchg
add
add
pop
lcall
sub
mov
pop
loope
mov
jmp
or
clc
vzeroupper
jae
add
clc
mov
pop
add
add
adc
and
add
outsb
in
bnd
ljmp
push
push
fwait
jmp
cwtl
cmp
sub
mov
fcomps
ret
inc
add
fwait
out
je
push
ret
add
loop
mov
pop
sub
cmp
dec
cltd
rcr
fstpt
mov
add
clc
mov
in
or
add
fistpl
dec
jg
xor
add
push
clc
fmuls
xlat
and
adc
add
cmp
add
adc
push
lret
insl
add
xor
add
pop
jecxz
push
or
inc
clc
lcall
mov
imul
fwait
jmp
inc
ja
jnp
fwait
or
es
jo
add
or
add
xor
add
add
push
xchg
and
add
add
add
add
or
add
mov
add
xor
add
lret
xbegin
clc
cwtl
add
add
add
xchg
repz
clc
jo
add
clc
sbb
add
jnp
scas
call
add
mov
fiadds
clc
sub
pusha
cld
push
ret
insb
jg
inc
dec
test
das
sub
xchg
into
test
flds
add
outsl
in
fistps
add
xor
and
add
out
clc
fwait
mov
sbb
add
popa
add
fsubr
data16
jbe
lock
sbb
cmpsb
ljmp
cmp
pop
jecxz
xor
add
jle
pop
cmp
xchg
or
clc
pop
sbb
add
test
movsl
clc
mov
add
or
xchg
aam
clc
cmp
gs
push
push
fwait
jmp
jp
xchg
sbb
cmp
fs
insl
jl
test
push
jo
add
pushf
sbb
cmp
add
push
clc
push
clc
lea
clc
call
movsb
clc
pop
cmp
push
roll
pop
mov
add
rep
fwait
jmp
adc
fwait
jmp
je
sub
pop
in
mov
clc
fisttpl
int3
movsl
clc
add
add
add
xchg
daa
clc
jmp
push
add
xchg
pop
mov
addr16
jno
add
add
fs
jb
add
clc
daa
clc
adc
sahf
cwtl
in
xor
clc
fisttps
inc
clc
outsl
sub
clc
and
xchg
movsb
clc
es
mov
add
jbe
test
cmp
add
add
add
push
insl
int
clc
jo
add
mov
xchg
or
js
add
add
add
jnp
sbb
jg
ljmp
das
adc
inc
add
test
mov
fcoms
add
mov
mov
mov
fwait
jmp
or
xor
clc
int
clc
xor
add
add
out
mov
add
jp
mov
add
add
clc
out
imul
jmp
bound
add
add
add
add
gs
aad
or
test
pusha
add
inc
clc
and
fs
push
sbb
push
or
ljmp
jg
fidivrl
cmpsb
clc
sbb
lods
mov
clc
rcrb
clc
insb
or
mov
insl
addr16
pop
pop
push
lret
inc
add
ds
add
jnp
add
xchg
iret
xor
add
cmp
jmp
pop
sub
pop
pop
jle
std
iret
clc
iret
mov
add
sbb
add
bound
add
add
inc
clc
das
xbegin
inc
clc
cwtl
pop
inc
add
shrl
jg
fwait
jmp
movsb
inc
or
clc
fs
outsb
xchg
jb
add
adc
add
pmulhuw
cmp
mov
add
add
cli
loop
lcall
enter
fwait
incl
mov
sbb
clc
cld
push
ret
imul
add
cli
or
add
das
jno
add
arpl
jmp
inc
pop
mov
and
add
sar
add
clc
jb
add
dec
jle
cwtl
pop
jae
add
loope
jecxz
cmpsl
clc
xor
jmp
add
insb
int3
test
cmp
std
and
mov
clc
and
xor
add
push
add
arpl
add
iret
adc
pop
push
or
roll
add
insb
and
add
mov
clc
add
in
and
add
clc
aad
or
xchg
or
mov
add
jno
add
in
pop
mov
fistl
mov
jns
clc
add
add
clc
idivb
add
xor
add
lods
mov
lock
clc
or
add
add
dec
sbb
mov
cmp
cld
mov
push
ret
push
test
pop
xor
xor
lret
lcall
cmp
add
sbb
push
ret
ja
jg
and
add
clc
xchg
ja
arpl
add
clc
test
push
sar
cmc
adc
add
add
sti
or
xor
add
push
clc
test
pop
setle
cmp
jp
gs
fsub
clc
mov
inc
clc
and
add
xchg
test
in
inc
add
cwtl
pop
add
add
adc
add
jo
add
add
xchg
stos
faddp
clc
xrelease
add
add
add
mov
add
add
pop
cmpsl
clc
aam
fs
sub
sbb
clc
mov
mov
add
clc
xchg
add
mov
clc
jmp
cld
fadd
clc
sbb
clc
sbb
pop
clc
addr16
mov
popa
add
sbb
aaa
mov
jns
ss
mov
pusha
add
repnz
aad
clc
mov
movzwl
fwait
jmp
or
int3
jae
add
xchg
fwait
mov
ljmp
je
push
sub
repz
clc
mov
add
push
xchg
vandnps
scas
fcmovnbe
xabort
mov
sub
outsl
in
call
das
data16
popa
add
or
clc
push
bound
add
clc
mov
add
mov
mov
mov
xabort
clc
or
add
add
clc
adc
add
xchg
sub
stos
clc
incl
or
fs
mov
clc
inc
add
xor
add
jae
add
outsl
mov
rolb
push
inc
fwait
jmp
sub
mov
clc
repz
add
lock
pop
cmp
clc
sub
xlat
sub
clc
mov
and
inc
clc
das
push
add
mov
jmp
insb
insl
xlat
iret
xchg
imul
sub
add
mov
lods
mov
clc
cmpsl
clc
out
aaa
adc
fs
push
lcall
ljmp
jecxz
fsts
add
mov
fwait
jmp
outsl
sub
add
add
fs
push
add
xor
add
add
clc
scas
stos
mov
fldl
clc
clc
mov
add
mov
lods
xor
add
add
adc
clc
jb
add
inc
clc
sub
pop
dec
xchg
sbb
inc
add
sbb
push
or
push
ret
ja
mov
xor
push
std
or
jle
mov
mov
stos
dec
mov
dec
adc
add
add
xchg
adc
dec
mov
or
jmp
clc
pop
out
jb
add
xor
add
fwait
and
sbb
push
add
sar
clc
add
test
pop
mov
icebp
and
add
stos
jo
add
clc
jno
add
add
add
lods
inc
add
fsubrl
clc
jbe
clc
in
iret
push
lcall
jg
clc
push
pop
fwait
jmp
aaa
sub
clc
in
mov
jmp
push
add
lods
add
add
xlat
sahf
add
add
add
and
mov
add
pop
lock
xchg
call
push
ret
sub
mov
fldt
and
add
cmp
mov
xbegin
add
lea
clc
repnz
enter
cmp
jmp
je
sub
out
sbb
clc
mov
vcvtdq2ps
clc
arpl
add
add
mov
cmp
sub
add
add
cs
push
jne
enter
jl
clc
clc
incl
jmp
and
sub
or
stc
xchg
xchg
cmp
add
iret
mov
cmp
add
xabort
xchg
mov
jge
clc
popf
dec
cli
insl
repz
clc
mov
popa
add
cmpsb
clc
rcll
add
fnstcw
push
ljmp
jp
or
jle
aas
jmp
xor
add
cwtl
sbb
mov
pusha
add
push
add
mov
mov
xchg
sbb
test
lret
mov
popf
and
add
clc
jb
add
sub
call
in
add
nop
shll
int
add
clc
icebp
jecxz
xor
add
jae
add
aas
ficompl
or
insl
test
add
js
cltd
xor
add
inc
add
push
xor
fwait
jmp
xchg
jg
add
xchg
sub
add
cli
clc
rorb
add
xabort
repz
or
jecxz
mov
clc
fdivrl
lock
cld
pop
sbb
add
add
mov
cmp
cwtl
xabort
dec
dec
data16
dec
inc
add
repnz
clc
mov
clc
push
push
xlat
clc
mov
jo
add
push
fwait
jmp
xor
cmp
fcomps
jmp
xorb
clc
jo
add
pop
sbb
adc
add
clc
insb
add
add
cs
out
push
add
dec
fsubrl
ds
in
gs
test
scas
repnz
mov
jne
leave
lods
aam
cmp
clc
sub
stc
sub
add
add
adc
add
cmp
cwtl
dec
add
add
add
mov
cs
sar
cmp
clc
adc
add
into
jmp
movsl
clc
leave
push
mov
clc
in
xor
add
pop
clc
in
out
sub
push
ret
inc
lea
test
add
imul
push
dec
in
push
aad
mov
add
add
scas
lock
add
cld
push
ret
cmp
add
decl
dec
cltd
jmp
add
add
out
push
add
mov
clc
daa
clc
out
sar
fnstcw
add
sbb
clc
sbb
push
out
xbegin
lret
mov
cs
mov
cmp
clc
inc
clc
push
xor
clc
sub
rcll
mov
out
inc
add
arpl
add
clc
pop
rcll
add
mov
or
mov
pushf
aaa
mov
add
add
xchg
and
add
add
fisubs
jle
lret
add
jmp
scas
push
push
mov
cld
push
ret
aas
lahf
lods
rcrb
push
add
dec
fbstp
out
pop
cmp
adc
add
cmp
xchg
std
out
out
jle
clc
xor
add
and
xchg
xor
aaa
cmp
pushf
xlat
mov
clc
add
add
clc
test
mov
add
add
sub
and
add
add
mov
nop
xor
add
xchg
int3
inc
add
add
add
popf
jo
add
jecxz
adc
add
sbb
xbegin
add
clc
fcompl
mov
push
push
insb
lods
xor
lock
cmp
xchg
gs
cmp
out
mov
push
or
fadd
clc
aaa
and
add
and
add
clc
mov
mov
add
sbb
fwait
cwtl
int3
clc
out
shr
cmp
pop
cmp
cmp
lods
lret
add
add
mov
xchg
lret
test
cmp
xabort
in
inc
add
enter
clc
into
vunpckhps
add
sbb
jbe
add
fwait
jmp
sub
pop
into
mov
jno
add
mov
and
add
clc
bound
add
mov
bound
add
add
clc
mov
into
fsubrl
clc
or
and
add
clc
mov
fcompl
add
mov
ret
clc
aam
sub
clc
ret
and
xlat
repz
xchg
mov
mov
clc
cmp
arpl
add
clc
mov
clc
push
mov
jmp
sub
xchg
push
add
jmp
fwait
clc
call
clc
ja
or
add
sub
add
aam
adc
add
add
icebp
lahf
cmovnp
pop
dec
adc
add
ja
jae
add
loop
inc
clc
addr16
cs
add
lret
test
fmuls
fsubrs
clc
daa
clc
mov
sbb
clc
mov
insb
fwait
jmp
pop
and
add
add
add
fdivr
pop
popa
add
mov
dec
sbb
mov
push
jnp
or
clc
mov
cmc
cmp
and
add
ja
cwtl
jl
aaa
push
sub
push
lret
jp
test
gs
pop
clc
es
xlat
and
insl
icebp
adc
add
inc
clc
repz
adc
add
add
add
and
add
clc
and
add
xor
pop
pop
clc
stos
fisttpll
clc
xor
add
movsl
clc
pushf
or
repz
clc
cmp
add
push
incl
shll
jbe
clc
jno
add
mov
imull
xchg
test
mov
push
add
fwait
mov
cld
push
ret
lea
jp
idivb
clc
add
add
fnsave
clc
and
cmp
jmp
jmp
push
dec
test
clc
lcall
add
fwait
jmp
sbb
clc
sarb
pop
cmp
mov
add
mov
cmp
add
add
inc
clc
push
push
int3
sub
xchg
xchg
int3
insb
push
decl
cld
push
ret
sbb
xlat
cmpsb
clc
loope
sub
inc
add
sub
sar
push
add
cltd
xor
add
inc
add
push
loope
push
add
jb
add
add
add
mov
xor
add
popa
add
xor
add
leave
sahf
out
dec
daa
clc
shrb
mov
clc
inc
add
push
lret
clc
das
test
pop
add
add
jecxz
lods
fstps
pop
insl
dec
filds
cltd
push
add
jno
add
jnp
xor
add
clc
pushf
mov
shrb
cmp
add
jg
clc
jl
jle
clc
arpl
add
or
clc
or
adc
add
add
sbb
add
and
add
add
and
add
add
pop
mov
mov
adc
add
lret
xor
mov
dec
loopne
je
dec
xor
add
clc
push
and
add
aaa
mov
mov
add
ss
add
out
inc
add
adc
test
add
adc
add
add
add
mov
add
clc
cmp
clc
fisttpl
xchg
clc
mov
jmp
nop
popa
add
dec
or
add
mov
add
ficoml
xchg
mov
add
xchg
lcall
clc
add
sbb
add
mov
cmp
clc
xchg
cmp
add
clc
xchg
adc
add
inc
add
sub
add
inc
add
mov
jmp
ret
clc
sar
lods
out
lret
loope
push
add
jecxz
repz
sub
cltd
fxch
cli
and
add
clc
xchg
inc
add
mov
arpl
add
inc
clc
dec
mov
add
fwait
jmp
push
jg
rorb
clc
dec
cmc
pop
outsl
lret
add
clc
cld
xchg
cmp
and
push
add
cld
push
ret
jge
daa
clc
out
out
iret
sub
aaa
ljmp
add
cmp
clc
push
scas
ljmp
sub
cmp
clc
popf
fs
jmp
add
add
fs
insb
insb
xchg
lcall
xchg
jge
ljmp
cmp
cwtl
sub
add
lcall
fincstp
je
clc
sar
dec
fwait
jmp
push
push
or
add
sbb
clc
fwait
mov
sub
add
aaa
jne
push
add
rcrb
clc
fimuls
xabort
cmp
clc
gs
xor
add
add
add
push
imul
fwait
jmp
sub
cmp
clc
add
add
pop
push
add
xchg
scas
jecxz
cmc
dec
fildl
loope
jne
outsl
sbb
or
ret
clc
decb
clc
sub
outsl
and
add
add
iret
mov
addr16
cltd
in
daa
clc
inc
add
sahf
ret
clc
sub
test
pop
leave
cmc
call
add
add
out
daa
clc
adc
add
adc
add
mov
inc
clc
xbegin
mov
clc
stos
xchg
inc
clc
cmp
or
xchg
mov
jne
fwait
jmp
sub
nop
mov
add
push
in
call
inc
add
decl
or
add
sbb
jp
add
nop
mov
ret
clc
push
add
scas
xlat
jecxz
imul
jp
rcll
clc
std
push
add
fwait
jmp
cmp
scas
shll
add
adc
clc
mov
sub
add
push
add
push
into
leave
data16
scas
cmp
jge
cmp
jge
clc
mov
inc
add
cmp
clc
data16
adc
add
cld
xor
add
clc
fnstcw
repz
clc
mov
add
push
insb
sbb
cmp
jmp
or
sub
adc
clc
test
xor
add
jp
fs
add
sti
in
pop
fwait
sti
arpl
add
add
insl
add
add
add
fbld
add
cmp
add
sti
inc
clc
daa
clc
sub
mov
bound
add
sti
lods
pop
add
add
add
add
dec
push
inc
clc
sub
or
add
mov
mov
clc
mov
bound
add
sbb
test
jmp
add
add
clc
jge
or
lahf
push
add
xchg
cmp
clc
jo
add
pushf
aad
clc
xchg
fs
and
add
add
dec
xchg
push
out
nop
ret
clc
stos
std
fndisi(8087
clc
mov
pushf
xchg
ss
data16
xor
dec
pop
clc
cmpsl
clc
stos
pusha
add
or
add
push
xor
fwait
jmp
adc
dec
ss
add
add
pop
adc
clc
sub
add
adc
add
add
sar
add
test
mov
clc
sahf
push
add
out
jl
clc
and
add
add
fwait
jmp
or
cmp
pop
sbb
xchg
sbb
into
sar
clc
push
add
outsl
ss
mov
lods
mov
mov
and
add
clc
movsl
clc
or
clc
fcomi
jns
clc
pop
inc
clc
stc
jae
add
sar
lock
add
dec
inc
clc
hlt
popa
add
gs
cmp
sub
jns
clc
inc
clc
fs
cli
pusha
add
sub
xabort
mov
test
sub
enter
adc
clc
fwait
jle
clc
bound
add
clc
mov
call
add
ds
repz
lods
xlat
mov
pop
xchg
out
ret
clc
sub
ret
clc
xchg
sub
push
add
sti
scas
dec
cmpsb
clc
mov
imulb
add
add
fstpl
icebp
adc
add
lret
jne
xor
add
add
inc
clc
pop
fimuls
add
xlat
xor
sub
clc
push
add
leave
pop
cmp
clc
pop
sbb
enter
jp
lea
repnz
clc
lret
clc
pop
push
add
or
add
push
add
imul
sub
push
ret
xchg
sbb
push
push
push
ret
sbb
clc
push
add
insl
icebp
sbb
adc
add
pop
adc
clc
out
xabort
xabort
psubsw
add
inc
add
stos
adc
add
jle
ljmp
add
mov
cld
add
add
add
add
dec
test
rcrb
clc
clc
call
clc
fs
clc
cmpsb
clc
sbb
pop
pop
jne
push
add
in
add
fwait
jns
clc
and
add
clc
in
std
test
jnp
sbb
add
sub
jmp
inc
xor
je
cmp
adc
add
lock
cld
imul
add
add
and
add
fldenv
add
lea
add
add
sub
clc
mov
add
xabort
leave
shlb
cmp
mov
inc
add
dec
and
or
clc
fisttpll
sbb
clc
test
clc
pop
movsb
clc
dec
sbb
jmp
dec
sub
aas
mov
adc
sbb
mov
loop
ljmp
add
xchg
or
cmp
add
dec
stc
mov
add
cs
cmpsl
clc
jmp
add
cmp
add
js
in
pop
xlat
dec
and
add
add
mull
sub
mov
dec
movsb
clc
call
jl
aaa
adc
push
add
mov
add
sahf
in
xor
add
xor
xlat
adc
dec
lods
clc
scas
fwait
and
add
fcomps
fs
mov
push
ret
lods
adc
add
clc
fucom
clc
and
add
clc
lcall
imul
mov
call
leave
fwait
jmp
sub
sub
sahf
push
clc
mov
clc
adc
add
add
cltd
in
adc
add
and
add
inc
add
pushf
stos
in
sub
inc
add
fisubs
adc
xor
stos
pop
mov
mov
mov
test
jle
push
add
cmp
clc
xor
add
add
cld
push
add
hlt
xor
add
add
hlt
mov
aas
or
int
dec
cmp
mov
push
push
fwait
jmp
sub
mov
cmp
add
fidivrs
sar
add
popa
add
dec
and
add
push
clc
sub
fidivrs
push
lret
insl
mov
cmc
and
and
test
imul
fcmove
jno
add
add
popa
add
fstpt
sti
shl
clc
popa
add
push
pushl
cld
push
ret
sub
xchg
or
ja
arpl
add
inc
add
add
add
scas
gs
xchg
pushf
sub
bound
add
ret
clc
std
bound
add
mov
clc
cld
in
sub
test
mov
add
fcmove
outsl
adc
add
clc
negb
mov
fwait
jmp
or
insl
dec
jne
xchg
int3
mov
pop
leave
inc
clc
mov
add
cli
mov
mov
in
xchg
push
add
scas
call
clc
or
jmp
test
sahf
das
pop
dec
mov
clc
sub
pop
clc
ja
clc
xlat
shrb
xor
clc
das
test
mov
xor
add
dec
cmp
or
xor
fbld
clc
xchg
inc
add
outsl
push
clc
movsl
clc
cli
cmp
clc
and
add
pop
clc
in
mov
adc
add
clc
adc
add
xor
add
jne
clc
sbb
dec
mov
xchg
test
clc
sub
daa
clc
das
jecxz
pop
lea
add
inc
add
jb
add
add
push
add
pop
jge
clc
xlat
sarb
ss
add
add
push
cld
push
ret
jno
add
push
rcr
jbe
clc
pop
clc
vminps
mov
cmp
loopne
xchg
jmp
push
add
fwait
jmp
sub
imul
add
push
stos
ljmp
xchg
pop
clc
push
add
push
add
jg
add
div
adc
adc
add
add
add
repz
mov
mov
inc
add
clc
adc
add
sub
out
push
into
das
arpl
add
add
jle
movsl
clc
dec
out
or
pop
jmp
cmp
pop
mov
mov
mov
loop
dec
mov
add
fwait
jmp
xor
pop
pop
fimull
lods
getsec
cmp
lcall
outsb
sub
clc
movsl
clc
ljmp
jnp
enter
fdivl
add
add
scas
inc
clc
repnz
ds
clc
dec
push
add
dec
mov
add
clc
gs
cmp
sub
insl
cmp
clc
inc
clc
pop
push
jmp
popa
xor
repz
call
aad
clc
clc
mov
xchg
add
fstl
mov
cs
push
cld
push
ret
sub
add
push
clc
ret
clc
xor
add
cmp
cmc
idiv
imul
fwait
jmp
dec
sbb
clc
clc
frstor
pop
loopne
cmp
or
and
add
sbb
clc
in
movsl
clc
push
dec
call
cmp
jo
incl
clc
inc
clc
shrb
clc
jno
add
add
add
push
push
add
int3
icebp
cmp
xor
add
pop
clc
pop
mov
pop
mov
fwait
jmp
scas
xchg
dec
cltd
add
add
loopne
sbb
je,pn
ljmp
cli
add
add
clc
shrl
pop
imul
jp
push
cmp
and
add
jo
add
repz
cmp
scas
ret
clc
imul
jmp
sbb
dec
out
xor
add
add
jns
mov
add
sbb
add
inc
clc
daa
clc
lods
jl
push
add
ret
xor
add
hlt
out
cmc
xlat
stos
and
clc
xchg
test
add
jne
cltd
nop
fldl2e
xchg
sub
out
dec
xchg
push
clc
pop
push
push
fwait
jmp
add
adc
xor
clc
pop
in
sar
mov
sti
add
add
add
sahf
imul
add
jne
jg
roll
clc
pop
jge
loope
mov
xor
add
add
adc
add
loop
mov
dec
cmp
clc
mov
add
xor
add
cmp
add
jne
mulb
mov
aam
xor
add
pop
clc
ss
clc
jg
adc
add
clc
ret
clc
cli
lahf
cmp
clc
loope
cmp
shlb
jnp
clc
pop
insb
mov
outsb
add
dec
xchg
pop
push
stos
aam
sar
pop
scas
popa
add
cmp
push
add
mov
clc
iret
pop
inc
clc
rorl
clc
call
cmp
clc
sbb
add
adc
add
clc
push
rcr
in
adc
add
or
jmp
dec
jno
lods
xchg
hlt
lcall
xor
clc
sub
add
jno
add
clc
data16
sub
clc
xchg
int
clc
fmul
dec
sbb
movsl
ljmp
jp
mov
pushl
fwait
jmp
je
adc
add
fwait
jmp
sub
sub
add
clc
sub
adc
add
xor
clc
jl
push
clc
das
insb
add
pop
rcrl
aaa
addr16
xchg
sar
clc
mov
clc
sbb
sub
clc
sbb
clc
cmp
clc
in
cmpsl
clc
xchg
nop
push
int
adc
add
out
scas
add
inc
clc
popf
fiadds
aas
add
ret
sbb
jmp
xchg
adc
add
cmp
mov
fwait
jmp
sub
dec
test
cmp
jno
add
clc
pop
nop
dec
jne
loope
push
and
cld
push
ret
cmp
negb
add
mov
mov
add
daa
clc
fsubrp
push
add
mov
and
add
add
clc
mov
dec
push
mov
clc
mov
mov
cmc
xchg
xlat
push
clc
xchg
mov
add
cmpsl
clc
or
sub
pop
loope
sub
sti
sub
in
jmp
push
sub
lock
mov
arpl
add
jecxz
xabort
add
mov
push
inc
add
push
daa
clc
push
clc
loopne
cmp
adc
add
add
cwtl
mov
fcomip
push
clc
hlt
je
clc
push
mov
lret
xor
add
clc
jae
add
addr16
out
dec
or
add
mov
pop
scas
inc
add
sub
sub
ds
loop
cmp
out
push
clc
jns
add
pushl
negb
call
clc
push
and
add
cwtl
sub
out
xchg
sbb
add
clc
sbb
pop
inc
clc
test
add
or
mov
cmp
add
sub
or
mov
sub
add
jmp
adc
add
iret
arpl
add
int
clc
push
xchg
mov
add
xchg
cli
sti
lock
clc
xchg
in
or
fdivr
xor
add
inc
clc
adc
add
mov
sbb
das
test
add
xchg
inc
clc
push
xchg
jmp
clc
stos
pop
dec
mov
xor
fwait
jmp
test
inc
clc
lea
add
popa
add
in
fidivrs
or
add
lahf
icebp
jns
pop
jno
add
cmp
clc
leave
dec
add
add
cmp
inc
clc
mov
lret
std
std
ret
dec
sub
cmp
clc
mov
outsb
pushl
add
add
add
mov
add
imul
daa
clc
cmp
add
add
xabort
mov
add
fwait
jmp
sub
ljmp
or
mov
mov
mov
clc
mov
and
add
clc
xor
add
xor
into
int
add
test
jno
add
sbb
xor
fwait
jmp
pop
data16
add
xor
add
adc
add
rorl
add
mov
xlat
push
lea
clc
rolb
sub
ss
hlt
xbegin
ret
dec
nop
mov
sub
adc
add
clc
jl
clc
imul
inc
add
bound
add
enter
jecxz
sbb
imul
sbb
push
jno
add
push
add
clc
popf
in
sar
xchg
fwait
jmp
lea
add
outsb
test
outsb
xor
jl
out
mov
add
cld
movsb
clc
inc
add
fnstenv
add
ss
cli
daa
clc
std
xbegin
ficoml
add
sub
inc
clc
push
add
adc
add
cmp
clc
aam
add
add
clc
add
scas
mov
add
add
push
push
inc
das
cmp
add
ret
lea
jg
xor
add
icebp
fwait
jmp
push
sub
pop
pop
jbe
or
sahf
sahf
sbb
aam
sbb
in
sub
sub
clc
data16
push
add
scas
mov
add
cli
sar
pusha
add
cli
inc
add
or
push
clc
xchg
data16
ja
jl
cmpsl
clc
dec
cmp
bound
add
mov
test
sub
add
add
pop
lahf
sub
add
push
add
xchg
and
add
clc
jge
insl
xchg
out
ret
clc
bound
add
fstpl
add
out
mov
xchg
imul
sbb
rcrb
ljmp
sub
repz
sub
xchg
and
add
jne
pop
mov
add
cmpsl
clc
push
add
push
cmc
xchg
jmp
icebp
mov
cmp
call
jl
sub
jo
add
add
pop
xchg
cld
adc
add
add
incb
add
mov
clc
jne
lahf
mov
clc
data16
scas
inc
add
insl
or
movsb
clc
das
xchg
insl
cmp
mov
xor
fwait
jmp
test
clc
pop
bnd
add
xchg
and
gs
cmc
lods
mov
loopne
cmp
dec
add
add
add
add
add
aam
jo
add
fcompl
add
push
xchg
das
pushf
int
clc
outsl
std
in
jbe
clc
stc
mull
add
fwait
cmp
out
je
xchg
add
add
xor
add
clc
cmp
add
ret
add
or
and
add
lods
rol
clc
sub
into
push
sbb
cmp
add
roll
or
mov
jnp
push
bnd
lods
inc
add
arpl
add
ja
xor
add
add
mov
data16
jp
add
cmp
mov
add
test
into
into
repz
clc
rolb
add
and
add
sarb
xor
clc
pop
dec
xchg
cmp
jno
add
add
lock
jmp
ja
xor
add
pop
test
es
decl
test
push
lcall
lcall
add
xchg
outsl
daa
clc
lods
xchg
mov
mov
add
fwait
jmp
xor
pop
negb
add
inc
add
scas
mov
add
jne
clc
fcmovb
clc
jo
add
cld
push
pushl
fwait
jmp
cmp
dec
mov
cmp
mov
aad
rorl
jns
cmp
mov
push
add
push
jmp
adc
cld
sbb
xchg
add
add
and
add
and
jmp
mov
mov
adc
add
dec
add
add
mov
mov
into
inc
clc
xabort
add
xor
add
jge
mov
add
xchg
mov
or
stc
mov
bound
add
xor
add
ss
loopne
xchg
jp
add
pop
push
clc
popa
add
ljmp
sub
inc
add
jo
add
clc
aad
rcrl
in
int
clc
out
movsb
clc
jp
stc
mov
in
dec
dec
xor
add
mov
clc
pop
jmp
push
clc
fdivrs
add
and
add
cmp
shrb
ficomps
mov
lret
stos
jle
dec
cmp
movsb
clc
xchg
je
jns
nop
repz
cmp
clc
ds
inc
clc
pop
icebp
cmp
jne
fwait
jmp
or
and
add
add
movsb
clc
ret
clc
insl
movsb
clc
mov
add
jne
clc
mov
clc
adc
repz
clc
test
enter
fs
iret
cmp
clc
test
or
lods
popa
add
pop
and
add
call
aam
add
add
imul
insb
pusha
add
out
mov
push
add
pop
xlat
sub
gs
xor
add
clc
insl
and
scas
repz
and
add
push
loope
ja
clc
sub
cmc
xlat
int
clc
std
mov
sar
adc
add
vshufps
clc
mov
inc
add
lea
clc
adc
add
mov
cltd
pop
push
jmp
sub
add
xchg
jle
mov
jae
add
jbe
add
and
add
fs
cli
int3
lcall
in
pusha
add
stos
sbb
dec
ljmp
clc
add
add
clc
inc
clc
push
xabort
jno
add
sahf
sbb
clc
out
ds
popf
in
jb
add
dec
mov
clc
mov
clc
clc
push
popf
sub
mov
jns
clc
dec
add
add
clc
jno
add
add
sbb
loop
inc
clc
mov
push
out
stc
dec
mov
mov
cld
stos
loop
push
shlb
and
add
and
dec
inc
clc
sub
mov
push
add
aad
jp
pop
cld
push
js
add
xor
add
and
add
sub
xchg
xlat
dec
shll
add
pop
mov
sbb
cld
test
mov
pop
inc
clc
adc
add
out
stos
sub
pop
aas
int3
adc
add
clc
push
mov
add
inc
add
cmp
clc
jno
add
sahf
jno
add
lods
push
mov
rcrl
cmp
lods
ds
add
outsb
adc
add
jge
loop
repnz
add
jl
insb
scas
xor
add
aaa
sub
push
add
xor
add
sub
movsl
clc
xor
add
pop
movsl
clc
popa
add
nop
in
push
es
mov
and
add
clc
jbe
inc
add
pusha
add
daa
clc
cmp
aad
clc
pop
cltd
add
add
xor
push
jnp
rorl
aas
pop
inc
add
mov
pushf
data16
lock
aas
fcompl
xabort
cmp
add
xchg
mov
clc
sub
clc
in
pop
mov
clc
cmp
add
clc
cmp
push
add
das
xchg
test
add
sub
into
lea
add
ficoml
add
outsb
hlt
xchg
xor
clc
sbb
add
sbb
mov
xchg
mov
clc
xor
and
add
lret
ret
cmp
dec
jg
in
imul
add
cld
je
clc
push
cmpsl
clc
sub
add
stos
leave
bound
add
pop
aas
dec
adc
add
clc
repz
cld
cmp
mov
adc
fisttpl
ss
aaa
mov
jnp
xchg
ljmp
das
mov
scas
mov
mov
sub
add
add
sbb
lods
fbstp
push
add
or
push
add
loopne
data16
pop
iret
xabort
add
imul
cwtl
push
add
inc
add
jl
add
mov
test
es
mov
in
pop
xor
pop
or
inc
clc
and
add
sub
mov
add
jecxz
sub
sbb
stos
mov
das
add
add
sbb
mov
fs
aaa
test
mov
sub
clc
jb
add
add
jecxz
xor
add
imul
jmp
clc
add
add
clc
cmp
dec
mov
loopne
adc
add
clc
dec
mov
clc
mov
clc
pop
adc
add
clc
xchg
add
add
mov
mov
cmp
dec
roll
outsb
mov
jge
or
push
add
sbb
int
das
gs
cmp
shrl
loopne
dec
fldt
enter
in
cmc
adc
add
mov
add
repz
add
or
imul
clc
aad
clc
mov
cmp
clc
rcll
add
gs
bound
add
in
and
add
push
adc
add
mov
clc
mov
out
sbb
or
in
int
cmc
add
add
loopne
push
inc
add
mov
clc
xlat
inc
clc
inc
clc
pop
bound
add
mov
clc
enter
clc
dec
sub
int
push
mov
jmp
add
push
add
or
in
pop
test
clc
xbegin
clc
xor
add
add
push
add
add
jmp
add
inc
clc
je
mul
clc
mov
add
and
add
outsl
aas
ss
jnp
cmp
cmp
movsl
clc
je
clc
call
popa
add
xabort
add
in
jge
fisubrs
sub
mov
add
iret
scas
pop
xchg
aad
clc
ja
add
add
add
and
add
sub
fstp
pop
inc
add
jb
add
clc
cs
cmp
add
lret
add
cli
jns
imul
add
jl
clc
xchg
jo
add
clc
and
add
add
push
clc
dec
fmuls
add
addr16
xlat
push
clc
xchg
xor
add
clc
pop
mov
add
mov
gs
mov
add
js
pop
jae
add
aas
pop
xor
add
enter
add
mov
in
sbb
or
add
clc
or
in
js
test
cmpsb
clc
clc
sub
call
sbb
add
xchg
ss
clc
sahf
jl
add
push
add
and
inc
clc
loope
gs
ss
clc
ret
add
call
and
clc
addr16
movsb
clc
xor
add
dec
push
shlb
mov
sub
add
fsubrl
clc
shrl
arpl
add
clc
sub
jg
decl
repnz
add
lcall
add
add
lcall
push
xchg
cs
add
cmovo
add
xor
add
add
scas
lock
clc
inc
add
xchg
ret
clc
pop
or
sub
popa
add
mov
mov
repz
shrl
sar
out
mov
dec
or
mov
add
add
cmp
add
sahf
and
add
clc
in
jecxz,pt
adc
add
stos
jae
add
sbb
add
clc
mov
jmp
add
sar
and
add
add
xor
cmpsb
clc
sub
cltd
fstps
scas
mov
add
jecxz
lret
mov
add
and
add
add
add
sub
dec
jecxz
popf
jp
add
adc
add
push
mov
das
sub
clc
cmp
jnp
clc
xchg
push
add
cmp
push
or
clc
xor
add
xchg
je
add
cmpsb
clc
in
sar
xor
inc
add
mov
add
lcall
rorl
add
gs
or
add
add
push
add
jl
clc
incl
add
clc
scas
idiv
mov
cmp
push
add
popa
add
jecxz
jmp
xor
pop
mov
hlt
ss
lock
and
jo
add
fmul
lahf
or
cmp
cmc
mov
ja
out
xchg
mov
add
dec
adc
into
pop
mov
adc
add
push
sub
sub
mov
sub
clc
dec
mov
sahf
jp
ljmp
add
clc
enter
clc
lea
add
add
rol
clc
or
add
ss
xor
add
cmp
xor
xor
sti
cltd
inc
add
rorl
clc
out
mov
lock
add
push
aad
lods
xchg
mov
std
xor
clc
pop
in
sbb
loope
or
ja
clc
or
clc
clc
inc
add
loopne
jl
cmpsl
clc
dec
sub
ljmp
sahf
fistps
mov
lods
lret
mov
repnz
push
add
data16
mov
popa
add
xchg
jae
add
stos
jb
add
mov
rorb
es
out
mov
xlat
inc
clc
mov
fnstcw
lcall
jg
clc
pop
push
loope
mov
aas
dec
xchg
ret
clc
xlat
cltd
out
sbb
add
add
inc
clc
mov
or
mov
dec
in
gs
dec
test
lods
pop
test
pop
jno
add
mov
jl
mov
cmp
repz
add
lea
mov
or
add
pushf
cmp
clc
xor
add
clc
mov
mov
mov
clc
sar
clc
or
scas
dec
mov
push
add
dec
xor
clc
jne
clc
sub
xchg
push
icebp
mov
and
add
lcall
cwtl
jns
stos
lahf
xchg
sti
sti
mov
add
mov
pop
ret
clc
stos
sahf
add
clc
push
xor
add
mov
sbb
clc
jno
add
cld
enter
pop
jge
cmp
insb
jl
cmp
sti
cmpsl
clc
jg
sbb
push
testb
add
test
mov
push
das
push
add
jecxz
adc
add
add
mov
add
clc
push
and
add
out
sbb
ret
clc
fnstenv
add
loop
jno
add
add
enter
repnz
add
clc
push
add
idivb
add
or
add
push
add
add
ret
cmp
clc
movsl
clc
cmc
js
clc
sub
dec
mov
add
aam
imul
sub
ret
dec
mov
clc
xor
add
jl
jp
clc
scas
mov
clc
clc
pop
mov
xchg
inc
clc
clc
lods
mov
clc
xor
or
loopne
add
xor
add
add
clc
ja
jae
add
add
clc
cltd
xor
add
xchg
je
out
mov
clc
push
dec
xor
add
add
loop
loop
je
mov
xchg
test
stos
push
clc
cmp
jnp
loop
fs
sahf
jge
clc
jg
incb
clc
adc
add
xor
stc
inc
clc
xor
add
clc
mov
mov
clc
adc
add
clc
mov
add
in
pop
inc
add
mov
dec
sub
cmpsl
clc
cmpsl
clc
sub
clc
clc
into
fbld
xbegin
clc
xabort
movsb
clc
dec
mov
clc
jbe
leave
lods
int3
outsb
jmp
clc
mov
add
add
add
add
add
push
pop
pop
sbb
clc
lret
insb
lcall
xchg
nop
and
add
loopne
stos
xchg
xchg
ja
or
clc
inc
add
xchg
pushf
xchg
xor
add
adc
add
faddp
clc
jecxz
pop
aad
clc
jmp
clc
ja
cs
imul
cmp
add
clc
jle
clc
mov
add
daa
clc
mov
div
test
or
pop
clc
jecxz
inc
add
pushf
dec
iret
into
lea
push
add
inc
add
fwait
or
clc
loope
xbegin
add
push
and
add
gs
jge
negl
rorb
pushf
xchg
fs
mov
mov
ja
clc
mov
out
popa
add
into
mov
xchg
pop
or
clc
adc
add
es
jne
add
add
add
jg
mov
insb
dec
xchg
stos
movaps
das
dec
cmp
daa
clc
mov
add
test
out
push
insl
push
add
pusha
add
jl
pop
lods
int3
leave
dec
jbe,pn
and
add
cs
mov
add
jge
add
dec
fs
icebp
inc
add
cwtl
jp
divl
adc
add
pushf
ffree
clc
gs
clc
push
popl
add
fs
cmp
mov
js
add
out
loop
icebp
mov
cmp
mov
sbb
add
adc
add
into
sbb
clc
cmp
int3
out
imul
clc
mov
rcr
mov
clc
inc
add
mov
add
cmovp
jle
add
addr16
jmp
add
ja
pop
and
add
iret
jo
add
xlat
hlt
mov
mov
add
pop
out
imul
add
mov
sub
add
fucomi
pop
mov
and
add
push
add
adc
clc
es
jp
add
loope
cmp
in
divl
add
out
jl
clc
sar
clc
xchg
loope
mov
cs
sub
jo
add
add
clc
sar
gs
addr16
and
add
loop
daa
clc
dec
inc
clc
xchg
sub
stos
xor
clc
xchg
outsl
idivl
sub
aam
add
decl
push
in
leave
add
add
negl
pop
jge
pop
mov
xor
add
repnz
add
cmp
aas
pop
clc
jne
dec
jbe
outsl
xor
add
pop
sti
mov
add
mov
add
je
clc
jbe
clc
test
jbe
add
push
add
mov
dec
daa
clc
and
add
clc
call
add
nop
push
add
insb
xchg
mov
add
xchg
jle
cmpsb
clc
out
adc
mov
clc
push
pusha
add
xchg
mov
mov
dec
aad
add
stc
jmp
loopne
sbb
and
add
pushf
push
and
add
add
int3
shrl
and
add
xchg
call
push
addr16
add
add
pop
clc
loop
mov
pop
jbe
fcompl
filds
clc
ret
add
test
clc
add
insb
push
mov
and
add
jecxz
xchg
je
push
jnp
clc
mov
add
xchg
daa
clc
ljmp
adc
add
loop
and
add
mov
sbb
push
add
lret
mov
movsb
clc
jns
negl
pop
pop
fidivrl
xor
add
clc
xabort
ds
clc
jmp
add
inc
clc
cmp
out
jge
cmp
add
mov
mov
aad
ja
jg
add
dec
push
add
mov
dec
pushf
xchg
push
add
jno
add
cmp
clc
test
nop
mov
jae
add
or
jl
cmp
add
cmp
add
clc
mov
fst
stc
mov
mov
pop
fwait
cmc
dec
cmp
clc
add
add
clc
push
push
mov
stc
pop
mov
movsb
clc
sub
clc
fsubp
clc
test
ret
clc
ret
clc
mov
clc
jno
add
loopne
mov
clc
push
push
add
inc
add
sar
clc
into
push
add
inc
add
bound
add
int3
mov
cld
lods
jb
add
rcll
add
ljmp
clc
add
add
clc
adc
add
mov
clc
xor
movsb
clc
ret
xchg
inc
add
stos
pop
gs
loop
push
out
or
and
enter
add
xabort
or
xabort
clc
push
cmp
cmpsb
clc
push
add
jmp
cld
lods
arpl
add
mov
dec
call
add
lods
push
out
rorb
sbb
loope
adc
add
push
cmp
add
cmp
insb
jns,pn
mov
cltd
and
add
clc
xor
add
clc
es
xchg
lcall
dec
mov
push
add
lods
clc
repz
pushf
scas
sbb
clc
cltd
movsb
clc
dec
dec
ja
clc
lea
mov
clc
sub
clc
in
iret
inc
clc
and
add
add
add
frstor
xor
sahf
imulb
add
xchg
push
add
loop
cmp
jmp
enter
add
pop
clc
mov
xor
add
add
iret
mov
add
clc
inc
add
icebp
xchg
dec
fdivs
fs
dec
cmp
in
testb
xchg
add
add
clc
xchg
mov
pop
mov
clc
sub
clc
cmp
add
clc
cmp
sub
and
add
sbb
clc
ficompl
add
jb
clc
pop
pusha
add
adc
add
pop
popf
lods
xchg
mov
clc
repz
add
inc
add
movsb
clc
fdivrl
clc
and
add
add
add
add
clc
pusha
add
or
cmp
clc
popa
add
dec
pop
push
add
dec
jecxz
fxch
je
mov
and
add
cmpsb
clc
mov
add
pop
jb
add
sub
push
mov
inc
clc
push
mov
clc
or
clc
cmp
add
cmp
aaa
cmp
push
add
jl
jne
xchg
jmp
lcall
sbb
cld
mov
inc
add
jp
add
rcr
pop
fwait
cmp
clc
and
add
pop
clc
adc
add
movsb
clc
fisttpl
out
bound
add
add
push
jmp
mov
dec
arpl
add
fsubrl
jne
cltd
push
sub
dec
imul
dec
push
jmp
pop
hlt
gs
push
add
stos
push
js
scas
cmp
clc
mov
add
push
xchg
cmp
cmp
jne
add
stc
adc
add
push
mov
mov
add
sub
push
jae
add
clc
dec
out
mov
dec
out
sub
and
sar
add
mov
cmp
lods
sub
pop
hlt
call
add
mov
mov
adc
add
clc
dec
in
ds
icebp
test
cmp
cli
incb
iret
std
test
push
add
fimuls
clc
in
icebp
mov
add
mov
mov
clc
push
add
cs
jo
add
lcall
mov
add
cmp
cltd
lock
outsl
jle
popa
add
mov
out
aaa
cmp
jb
add
test
push
dec
add
add
add
fstpt
inc
clc
popa
add
popf
pop
dec
mov
into
movsl
clc
pop
clc
inc
add
jge
mov
lods
loopne
and
add
add
add
into
inc
clc
lea
cvtpi2ps
jnp
shl
je
clc
dec
sbb
clc
jo
add
mov
icebp
mov
clc
pop
sbb
imul
movsb
clc
in
mov
imul
cmpsb
clc
mov
adc
add
add
pop
and
pop
pop
clc
inc
add
data16
hlt
aad
or
jbe
sahf
mov
pop
jb
add
and
sub
add
roll
pop
inc
add
push
clc
mov
arpl
add
add
outsb
outsl
out
inc
add
jae
add
mov
bound
add
push
in
out
ss
ret
out
dec
shll
add
out
xchg
xchg
push
add
inc
add
and
add
add
sahf
xor
add
add
adc
add
add
add
dec
and
add
add
clc
dec
push
mov
clc
xchg
lea
clc
scas
cmp
add
sub
add
sub
or
repnz
clc
shlb
cmp
insl
mov
add
and
clc
divl
add
pusha
add
ret
clc
fsubrp
cmp
add
adc
add
clc
test
int3
fs
aas
cmpsl
clc
aaa
dec
insb
mov
and
add
fstps
inc
add
fsubr
sub
inc
clc
in
std
adc
jo
add
xchg
and
add
addr16
jecxz
mov
cltd
sbb
mov
das
hlt
add
add
int
jg
cmc
aad
fidivrs
add
add
dec
pop
clc
lret
lods
pop
mov
fdivs
add
mov
inc
add
mov
add
inc
clc
jg
add
add
pop
xor
add
cmp
clc
enter
lods
out
xchg
call
push
add
jno
add
xor
add
int3
lahf
push
in
xlat
ds
clc
gs
fnstcw
add
dec
or
xchg
test
add
push
add
clc
cld
ja
pop
clc
fsubl
add
add
clc
xchg
ljmp
pop
clc
outsl
and
clc
int
sar
cld
mov
clc
adc
add
mov
cmc
insb
sub
add
mov
cmp
add
gs
pusha
add
cmp
xor
add
clc
in
out
cmpsl
clc
add
push
add
enter
and
add
insb
mov
outsl
xlat
imul
je
movsb
clc
mov
test
repnz
sub
ljmp
jne
clc
xchg
push
xor
add
test
add
or
add
add
clc
xchg
xor
add
sbb
add
sbb
movsl
clc
sbb
pop
leave
loopne
push
mov
fiaddl
add
repz
sub
nop
add
add
add
shl
clc
dec
xchg
bound
add
clc
loop
jmp
jb
add
add
cmp
add
testl
xor
add
lahf
jecxz
mov
fdivrp
pop
movsb
clc
sbb
fcomip
push
xbegin
arpl
add
data16
popa
add
repnz
add
fistpll
add
aam
clc
jmp
add
add
cmp
jnp
clc
int3
in
sub
jecxz
cmp
add
arpl
add
icebp
into
test
fs
adc
add
adc
add
adc
add
push
stos
cwtl
mov
lret
imul
inc
clc
sbb
cmp
test
clc
in
push
loop
out
into
xchg
add
add
fldl
pop
pushf
dec
add
add
mov
clc
mov
imul
ja
jge
scas
cltd
lcall
add
push
repnz
sub
add
and
mov
clc
inc
clc
inc
clc
leave
cmp
lods
fcompl
add
call
lret
imul
repz
sub
add
aas
clc
sahf
ja
cmc
sbb
mov
xor
add
add
clc
mul
clc
cmp
dec
inc
clc
adc
add
add
add
ss
xor
add
add
out
lret
cwtl
cmp
push
or
cmp
in
inc
clc
sbb
out
mov
add
add
clc
sub
add
add
cmp
test
cmpsb
clc
pop
mov
clc
sub
push
add
mov
push
add
in
data16
pop
sub
imul
xchg
pop
jmp
add
add
daa
clc
pop
cmp
cmp
imul
std
mov
sar
add
pop
in
icebp
or
aam
add
mov
lret
pop
nop
lcall
pushl
add
add
sar
xabort
clc
pop
js
clc
movsl
clc
dec
inc
clc
push
add
add
sub
jmp
adc
add
dec
ljmp
arpl
add
outsl
sbb
int
clc
mov
clc
jp
clc
es
sub
aas
repnz
sub
clc
test
loope
std
xor
sti
js
scas
xchg
or
in
jp
mov
clc
and
add
outsl
lea
sete
add
add
cwtl
repz
addr16
mov
add
add
repz
dec
or
das
lods
jecxz
push
add
data16
repnz
push
push
cmc
outsb
fistps
es
cmp
clc
aad
add
and
add
xchg
mov
push
pusha
add
mov
outsb
dec
xchg
mov
add
jmp
clc
or
cmp
in
mov
mov
clc
loopne
mov
mov
add
jp
call
int3
enter
add
mov
mov
dec
mov
jo
add
adc
popf
dec
xchg
inc
clc
xchg
inc
clc
popf
jns
sbb
ret
clc
dec
add
dec
mov
fs
mov
clc
popa
add
repz
xor
add
ds
xor
add
pop
mov
add
add
fsubrl
add
sbb
cmp
test
mov
adc
add
add
jne
xchg
sub
add
add
xor
add
test
clc
ret
clc
loop
inc
add
mov
cld
adc
dec
movsl
clc
add
fcomip
mov
cmp
pop
int
add
jns
clc
mov
addr16
sbb
clc
push
add
mov
clc
mov
add
add
mov
mov
clc
cltd
into
cmp
imul
pop
mov
add
clc
dec
sar
mov
add
cmp
clc
pusha
add
mov
clc
call
cmp
jb
add
add
add
add
add
add
out
sub
ret
clc
movsl
clc
data16
jge
mov
add
jb
add
gs
jle
clc
mov
xor
or
xchg
jne
clc
jae
add
clc
sbb
add
adc
add
ret
clc
ficoms
add
insb
pusha
add
into
push
or
add
test
add
mov
sbb
add
int3
ja
add
xor
js
je
push
add
cmpsl
clc
fstpt
and
add
movsb
clc
mov
add
push
add
lods
mov
xor
add
clc
inc
clc
add
add
add
call
in
jge
iret
lock
cmp
add
cmp
lea
jb
add
mov
sbb
addr16
nop
cmp
cmp
cmp
jno
add
add
sbb
mov
ret
clc
pop
clc
inc
add
mov
call
test
dec
cltd
xor
add
stos
push
lods
ficompl
cmp
cmp
xor
add
cmp
clc
fistl
cmp
mov
clc
jns
add
test
call
mov
add
adc
add
and
add
clc
shlb
add
lret
stc
pop
jl
clc
cmp
mov
add
sahf
push
clc
cmp
mov
cli
cmp
addr16
addr16
add
push
add
sub
in
lahf
adc
add
clc
and
pop
xchg
jne
clc
aam
dec
rorb
add
sarl
jp
sbb
rorb
add
nop
movsl
clc
fs
add
add
sub
sar
jg
dec
adc
push
out
xlat
xchg
insl
clc
arpl
add
fsubr
mov
fwait
outsb
mov
push
insl
fwait
out
or
clc
mov
loopne
leave
ljmp
or
xor
add
mov
jnp
rep
fisttpll
cmpsl
clc
push
enter
xchg
jge
aam
dec
pop
push
gs
sbb
add
jae
add
clc
enter
clc
or
clc
push
or
sar
stos
adc
add
clc
push
lahf
jmp
clc
pop
pop
cmpsl
clc
scas
jle
test
push
mov
add
mov
add
inc
clc
push
add
imul
add
add
add
cmp
cs
xchg
push
mov
sbb
outsb
insb
lods
xchg
inc
clc
fwait
je
inc
clc
push
add
insb
mov
clc
xchg
fbld
add
add
add
add
pop
push
clc
pop
jbe
xchg
mov
in
pop
je
inc
clc
lea
cwtl
sub
jg
test
lock
mov
cmpsb
clc
mov
clc
mov
clc
xor
add
add
sub
cltd
xor
out
in
fstpl
shl
mov
jl
pop
fdivs
daa
clc
leave
jnp
inc
add
sarb
out
fsubr
mov
hlt
cli
jnp
clc
aad
clc
xchg
dec
adc
daa
clc
sbb
mov
sar
clc
test
je
mov
jne
cmpsl
clc
jns
std
shr
and
clc
repz
out
cs
mov
clc
ds
pop
lock
add
mov
xchg
adc
add
jp
mov
pop
das
add
add
mov
push
jno
add
xor
add
jns
decl
clc
int
cmp
clc
jp
and
add
add
mov
clc
test
lock
push
add
xor
add
clc
bound
add
inc
add
data16
pop
clc
pop
cmp
jmp
jl
ja
ja
xor
add
cmp
add
clc
sub
loope
popf
loop
cmpsl
clc
sahf
repnz
clc
push
bswap
sbb
clc
pushf
push
sar
clc
mov
jmp
popa
add
xchg
int3
or
pop
mov
sbb
clc
inc
clc
aad
and
add
lock
adc
add
dec
mov
add
test
or
repnz
push
pop
push
xor
add
out
pusha
add
rcrb
ja
add
stos
pop
pop
xchg
pop
movsl
clc
cmp
jmp
and
leave
adc
add
add
clc
jbe
cwtl
lods
and
add
jns
push
add
mov
mov
clc
mov
add
test
cmp
add
add
clc
aad
stc
mov
mov
ljmp
inc
add
mov
call
fisttpll
sbb
testb
fsubrs
and
add
add
push
aam
xor
dec
pop
sub
add
push
jle
jo
add
repnz
clc
shlb
popf
enter
cmp
xor
cmp
mov
add
sbb
loope
clc
mov
cmp
mov
push
lret
mov
clc
cmc
into
adc
add
ds
psadbw
xor
add
cmp
add
add
nop
adc
add
dec
mov
inc
clc
lret
rcll
lea
int3
cmp
rorb
add
out
pop
inc
clc
inc
add
sub
mov
add
aam
add
pop
adc
add
clc
leave
outsb
or
xchg
outsb
or
call
sub
clc
popf
add
clc
fs
and
pop
adc
in
sar
test
sub
push
scas
dec
cwtl
sar
sti
fs
push
add
cmp
mov
clc
and
idivb
sar
in
cmp
mov
clc
and
add
cmp
adc
add
fwait
mov
add
add
xlat
pop
lcall
add
cmp
aad
ds
out
imul
lcall
mov
mov
mov
clc
out
fld
clc
sub
add
js
xchg
xchg
sbb
adc
add
push
clc
and
cmp
clc
inc
clc
ret
clc
dec
stos
sahf
xchg
cmp
aas
mov
xchg
cmp
add
clc
mov
clc
ret
push
xor
clc
test
or
ficoml
clc
or
add
mov
dec
mov
mov
int3
xchg
iret
or
fcomp
mov
clc
pop
mov
add
sub
clc
rorl
mov
std
mov
clc
setl
iret
mov
jns
clc
fs
sti
call
sub
mov
add
cltd
and
add
cmpsb
clc
push
add
xor
add
cmpsb
clc
mov
add
add
repz
sarb
data16
cltd
or
sub
imul
add
pop
sahf
sar
clc
cmp
lods
pop
pop
clc
lea
add
jns
mov
add
cmp
clc
sub
add
add
add
cmp
cs
push
add
pop
jae
add
add
mov
aas
je
push
clc
add
add
loope
imul
add
inc
clc
mov
pop
sar
add
add
add
rcll
push
ds
adc
add
loop
ror
dec
in
xlat
and
icebp
ds
clc
sbb
fcoms
aad
inc
clc
cli
lahf
insl
add
add
add
xor
add
add
ud0
push
and
push
clc
stos
and
add
clc
decl
clc
arpl
add
ljmp
out
hlt
add
add
clc
ljmp
add
hlt
sar
scas
cmp
add
pop
or
xchg
in
mov
fwait
ret
clc
mov
add
add
test
mov
add
sbb
push
add
ljmp
pop
xchg
sar
or
clc
lods
arpl
add
add
sar
popf
lcall
xchg
sbb
ja
lods
addr16
frstor
add
packsswb
add
clc
mov
push
add
inc
clc
push
lret
cmpsl
clc
add
add
outsb
dec
lret
cmp
add
scas
int3
cmp
clc
outsb
in
in
mov
add
icebp
xchg
or
add
add
xor
mov
mov
aas
int3
adc
add
add
outsl
scas
fwait
test
xor
add
cmp
jno
add
popa
add
popa
add
pop
ja
sub
clc
jle
xor
add
ljmp
add
ljmp
push
std
push
fadds
add
inc
clc
xchg
cld
xbegin
loopne
icebp
shlb
add
pop
in
pop
fdivp
aad
add
ljmp
pushf
sub
mov
das
in
jg
out
jl
clc
xabort
pop
inc
clc
mov
mov
clc
test
pop
fiaddl
add
add
dec
pop
mov
push
mov
or
inc
clc
push
clc
inc
clc
pop
lock
cmp
clc
mov
add
aas
mov
jbe
add
jb
add
cwtl
imul
pop
pop
out
inc
clc
or
mov
fnstcw
clc
sbb
xchg
dec
dec
das
jmp
inc
add
fisttps
or
or
cmpsl
clc
bound
add
clc
imul
or
clc
aam
addr16
dec
je
gs
xabort
rcll
add
and
add
add
xabort
clc
cmp
add
jp
inc
clc
aas
lcall
clc
push
push
pop
fstpt
or
add
sbb
mov
ds
and
outsb
mov
bnd
movsb
clc
fwait
mov
clc
sar
inc
add
xchg
push
inc
clc
cwtl
mov
add
and
in
inc
clc
insb
flds
pop
xor
add
add
add
pusha
add
out
fcmovbe
push
in
sbb
add
mov
add
clc
and
cmp
mov
clc
jb
add
xchg
cmpsb
clc
shlb
out
stc
push
rolb
add
add
add
adc
add
clc
sub
add
add
arpl
add
test
cmp
ret
clc
or
popa
add
aam
cmp
dec
mov
sar
lock
outsb
push
adc
add
loope
pop
clc
and
add
jne
clc
data16
movsb
clc
jne
push
add
ja
add
push
add
dec
mov
add
data16
cld
test
shl
xor
je
clc
sub
clc
rclb
ja
popf
and
clc
cmp
add
popf
jecxz
das
stos
mov
add
or
push
add
dec
cmc
imul
lret
inc
clc
mov
clc
clc
xchg
xchg
mov
test
add
push
mov
add
test
or
pop
pushf
adc
add
rol
clc
and
mov
pusha
add
push
test
cmp
add
ss
cmpsl
clc
into
pop
pop
sar
add
jl
push
add
add
add
push
clc
push
fcomps
mov
clc
add
add
clc
jne
xchg
insl
inc
add
leave
not
inc
clc
arpl
add
imul
add
mov
clc
jns
add
std
jecxz
dec
add
add
clc
test
sbb
cltd
test
pop
push
out
cmp
push
add
fcompl
clc
repnz
addr16
int
clc
mov
xlat
mov
add
sahf
inc
clc
add
mov
sub
dec
popa
add
cmp
clc
pop
enter
leave
xor
add
lea
clc
aam
hlt
push
add
cmp
clc
sbb
add
and
add
in
jp
fistpl
clc
cmpsb
clc
mov
add
insl
dec
ficompl
add
inc
add
and
mov
jecxz
or
push
sub
loopne
mov
hlt
jmp
clc
std
sbb
clc
and
add
je
js
add
jp
add
sbb
cmp
fwait
pop
shrb
add
add
add
mov
inc
clc
sti
xor
clc
insl
cli
bound
add
xor
add
add
mov
in
cmp
ljmp
jp
fistpll
jo
add
or
add
dec
sub
fdivrs
sti
xabort
pop
mov
sub
add
jecxz
fs
lret
pop
enter
add
lret
scas
and
add
stos
mov
movsb
clc
sbb
push
add
mov
clc
add
add
and
add
and
add
fwait
sub
add
insl
sahf
inc
add
lcall
clc
xchg
jg
faddl
stos
movsl
clc
jecxz
sub
inc
clc
pop
cmp
in
cmp
cmp
lcall
xor
fmull
shl
clc
sahf
scas
push
add
lahf
jnp
cmp
jecxz
xchg
addr16
bound
add
add
xor
add
in
cli
dec
out
push
clc
scas
in
cmc
dec
out
jo
add
sub
aad
fimuls
adc
add
clc
out
rol
clc
out
iret
lods
mov
add
pop
gs
mov
leave
xchg
es
fisttpl
sub
sbb
add
dec
push
ds
test
clc
inc
add
or
int
jg
out
lods
push
inc
clc
pop
lock
and
add
add
sbb
mov
xor
add
jnp
jecxz
xchg
test
sar
rolb
sub
sub
clc
xor
add
icebp
push
clc
movsb
clc
jge
clc
inc
add
sub
ss
sbb
pop
mov
iret
pop
leave
push
add
pop
and
xchg
nop
aam
and
add
fs
jno
add
add
add
clc
mov
movsl
clc
inc
add
dec
scas
out
mov
sub
bound
add
and
add
clc
xchg
insb
adc
add
pop
lea
in
sub
ljmp
sub
lods
mov
insb
sbb
add
add
or
clc
mov
add
ja
in
lcall
es
and
add
mov
push
stc
pop
xchg
cli
std
lret
xor
pop
push
aas
xchg
decl
cmc
mov
cmp
clc
lock
clc
enter
imul
push
lret
fwait
in
adc
add
pop
add
add
cmpsb
clc
mov
xchg
or
cmp
cld
mov
pmullw
add
add
mov
mov
into
sub
dec
popa
add
sbb
add
add
sar
popa
add
mov
add
jae
add
pop
mov
sar
mov
out
pop
clc
cmp
cld
xbegin
add
cwtl
inc
add
push
add
cmp
mov
cmp
push
mov
push
xor
add
mov
clc
lea
add
inc
add
push
add
sbb
js
mov
test
and
add
add
stos
inc
clc
popl
mov
or
add
int
pusha
add
out
pop
sub
or
push
loope
lret
aam
add
out
ja
xlat
pop
fwait
cmp
and
add
inc
add
push
add
sbb
or
rclb
clc
enter
pop
cwtl
mov
add
add
sar
cmp
lea
add
jge
test
add
add
push
clc
fmul
cmpsl
clc
xor
add
clc
adc
push
add
scas
cmp
add
leave
jbe
testl
add
xchg
jmp
add
sahf
or
push
cmovae
add
stc
test
out
pop
movsl
clc
test
aam
add
add
or
ficoml
aas
out
out
in
insb
out
xor
add
sbb
dec
mov
sbb
pop
scas
pop
addr16
cmp
add
sti
dec
or
jns
push
fwait
mov
mov
xchg
xchg
pop
dec
xor
add
add
dec
ja
sbb
pop
sar
clc
xabort
pop
jbe
add
add
xlat
hlt
fnstcw
dec
pop
xbegin
leave
pop
bnd
fsub
clc
add
add
clc
mov
clc
adc
add
push
in
nop
jle
loopne
xbegin
add
adc
add
fldt
dec
jae
add
fs
iret
lock
inc
clc
or
ljmp
addr16
cmp
decb
mov
scas
pop
clc
pushf
lock
clc
jae
add
jb
add
jnp
add
fistpll
sahf
jmp
and
inc
add
xchg
xabort
mov
sahf
jge
out
adc
add
add
add
js
clc
or
clc
mov
add
pusha
add
sar
clc
or
mov
clc
lret
push
push
out
add
mov
jo
add
hlt
fcmovu
mov
add
es
jbe
jge
add
cltd
decb
cwtl
and
add
sub
add
sti
xabort
add
mov
add
jns
cmp
xchg
fidivrl
add
into
pop
cmp
push
clc
add
push
stos
mov
add
xbegin
xabort
or
lock
clc
jb
add
addr16
xchg
gs
repnz
jge
dec
nop
push
add
ret
clc
xchg
std
jecxz
pop
add
stos
out
xchg
rclb
add
test
popf
sar
clc
cmp
add
shrl
xor
xchg
out
pusha
add
sar
pushf
cmp
ret
clc
xchg
lret
or
add
add
es
and
clc
sub
shlb
add
pop
mov
nop
xor
mov
add
decl
xchg
mov
clc
fwait
sahf
dec
std
cltd
sar
clc
out
lea
xor
mov
jmp
mov
clc
ficompl
add
add
mov
pop
sub
add
adc
add
outsb
clc
pusha
add
insb
outsb
repz
mov
rolb
add
inc
clc
cli
inc
clc
cmp
push
add
cmpsl
clc
fs
cmpsl
clc
sahf
and
add
add
xchg
sahf
jb
add
add
popa
add
int3
sar
sbb
mov
add
hlt
cmp
add
xor
in
xbegin
scas
clc
and
jecxz
ss
jge
sbb
add
or
add
push
xor
sti
cmp
add
cmp
push
clc
mov
add
add
inc
add
pop
js
adc
scas
fstpt
das
cmp
sbb
clc
pop
sbb
jae
add
cmp
clc
push
add
push
clc
mov
add
adc
add
add
clc
xor
pop
clc
jo
add
clc
and
and
add
clc
push
call
inc
clc
pop
inc
clc
lret
and
add
clc
loop
dec
jecxz
gs
mov
push
dec
aaa
sbb
clc
sbb
sbb
add
push
mov
add
outsb
jo
add
mov
ror
icebp
or
add
test
jl
enter
stos
cmp
in
xor
add
clc
jne
mov
add
jno
add
clc
cld
cmpsl
clc
in
push
mov
ret
clc
mov
add
jo
add
add
lcall
repz
push
clc
dec
nop
cmp
lret
or
add
push
add
lock
dec
out
and
add
clc
xchg
sti
fnstcw
add
add
vandnps
imulb
jo
add
js
xor
add
inc
clc
xchg
out
dec
cmp
repz
clc
leave
jle
pop
pop
cmp
or
clc
xchg
cli
xchg
jle
add
add
scas
lods
pop
cli
sub
push
pop
clc
dec
mov
jle
test
popf
scas
push
test
dec
xchg
ret
jmp
jl
cld
filds
daa
clc
jle
pop
cmp
clc
dec
clc
inc
add
dec
fcoms
loopne
movsl
clc
pop
sar
add
and
add
clc
push
lahf
imul
into
cmp
clc
cltd
jne
pop
clc
dec
lret
es
jo
add
and
add
add
imul
mov
xchg
xor
mov
cmp
clc
push
add
test
repnz
call
popf
sahf
nop
es
cmc
lods
xor
mov
pusha
add
xchg
or
aam
movsb
clc
push
cmp
out
xbegin
rorl
add
int
pusha
add
movsb
clc
mov
ss
push
add
out
mov
add
dec
stos
sbb
clc
mov
add
or
sub
add
inc
clc
loopne
sub
adc
add
mov
dec
fisttps
jle
pop
data16
addr16
push
add
mov
clc
pop
adc
add
lea
xchg
push
add
pushf
outsl
pop
leave
in
jmp
jbe
popf
mov
sbb
add
add
das
aad
stos
out
fcomi
sub
sbb
mov
mov
add
add
add
clc
mov
push
push
add
clc
flds
add
mov
jg
outsb
cltd
fs
mov
lcall
clc
add
xor
sub
out
ss
add
or
add
add
jp
clc
adc
add
add
pop
sub
add
add
cmp
cli
cmp
iret
lock
add
add
test
jno
add
add
in
mov
clc
jno
add
add
mov
clc
clc
or
in
pop
add
add
push
clc
inc
add
inc
clc
nop
cmp
xor
add
ret
test
clc
fnstcw
clc
mov
pop
pop
sahf
movsl
clc
xor
aas
inc
clc
mov
add
sti
out
jp
stos
or
dec
scas
or
jl
clc
mov
or
addr16
sub
pushf
popl
clc
lahf
or
outsl
dec
or
xchg
inc
add
cmc
js
dec
or
push
pop
sub
clc
or
add
mov
cltd
jecxz
iret
dec
jne
clc
mov
hlt
xchg
jecxz,pt
and
add
mov
clc
mov
je
add
pop
add
add
clc
popa
add
xor
xor
add
add
cmp
loope
mov
aas
sub
mov
cmpsb
clc
lea
add
mov
xchg
push
clc
data16
jo
add
push
std
mov
jns
sahf
jmp
mov
clc
mov
hlt
lret
shrb
clc
insb
hlt
dec
lods
inc
add
loopne
push
and
add
sub
clc
mov
ss
mov
lods
addr16
pop
pop
inc
add
sub
repnz
lret
add
pop
sbb
mov
clc
outsl
lahf
inc
add
aad
mov
icebp
xor
add
xor
add
push
inc
clc
push
push
imul
test
addr16
fs
mov
add
fwait
iret
xlat
add
sub
cld
inc
add
xchg
cmp
clc
inc
add
xlat
pop
jno
add
mov
pop
lock
bsr
mov
mov
add
add
xchg
dec
outsl
arpl
add
out
push
clc
dec
fs
das
jecxz
and
fs
xor
inc
clc
clc
fs
lods
lahf
cmp
sar
ja
clc
pop
lods
fcmovnu
out
jge
ret
clc
out
in
aam
daa
clc
dec
dec
adc
add
dec
scas
cmpsl
clc
lcall
cmp
faddl
add
clc
mov
xchg
jo
add
add
add
cmp
inc
add
dec
jecxz
js
clc
int3
inc
add
pop
clc
cmpsb
clc
mov
jb
add
add
iret
repnz
mov
clc
push
jle
inc
add
dec
test
sbb
add
packuswb
leave
movsl
clc
lahf
js
add
add
add
push
add
dec
xor
add
add
out
inc
clc
in
out
out
push
pop
scas
lret
dec
clc
cs
nop
or
add
add
add
mov
clc
cmp
data16
xchg
add
add
adc
and
add
add
lea
add
add
cld
aad
push
mov
jl
mov
clc
push
pop
fiaddl
add
add
flds
add
jecxz
push
sub
add
xor
add
movsl
clc
packuswb
loopne
cmpsl
clc
push
cmc
jecxz
adc
add
clc
sbb
fnstsw
pop
xchg
out
div
mov
clc
insl
xlat
dec
loopne
sar
cmp
mov
push
cltd
inc
clc
stos
cmp
add
mov
clc
scas
pushl
add
fs
xchg
lods
push
insb
aad
pop
xchg
cmpsl
clc
sbb
rclb
ss
ret
or
aas
dec
sarl
clc
enter
fbstp
push
add
xchg
lret
mov
mov
aad
add
xchg
insb
stos
sbb
out
pop
dec
lahf
fwait
into
mov
je
loopne
jecxz
jae
add
push
outsb
call
add
xchg
cmp
clc
lea
adc
sarl
xchg
mov
xchg
mov
add
das
inc
clc
dec
clc
int3
add
add
sub
bound
add
add
and
add
xor
add
cmp
mov
clc
mov
notl
clc
mov
xor
add
cs
mov
cmp
sar
clc
and
add
mov
add
jecxz
jns
jle
test
lret
and
add
add
mov
popa
add
cmp
push
xchg
sub
add
dec
dec
arpl
add
add
jb
add
xor
add
sbb
xor
add
push
ss
or
cs
lods
cmc
arpl
add
clc
or
fcmovnb
clc
and
add
pop
loop
aam
clc
sub
pop
lock
xor
sbb
clc
fwait
in
ret
clc
sarb
mov
add
clc
aad
cs
out
incb
das
shrl
add
sar
clc
pop
mov
add
repnz
clc
pop
cmp
dec
sub
xor
and
add
clc
in
jnp
sbb
mov
add
mov
add
mov
clc
in
pop
xor
add
movsb
clc
cmp
mov
add
add
push
push
jae,pt
add
cwtl
jae
add
ds
out
mov
add
sahf
loopne
pop
push
add
inc
clc
ja
jb
add
inc
clc
std
vunpckhps
cmpsl
clc
push
pop
sub
stos
mov
cmp
add
or
clc
jmp
clc
ret
sbb
pop
fildll
jmp
add
sti
push
push
movsb
clc
cmp
pushf
inc
add
jnp
clc
leave
ds
ret
clc
mov
mov
sub
jl
fsub
clc
xchg
test
sar
xor
add
inc
add
pop
jnp
cmp
das
xchg
fs
lea
mov
mov
mov
sub
mov
clc
push
add
sahf
push
xor
add
add
mov
add
rcrb
pop
sahf
test
clc
sar
add
add
loopne
dec
ds
pop
int
hlt
mov
outsl
pop
clc
movsb
clc
aad
into
dec
out
add
add
clc
jo
add
in
inc
add
xor
or
xor
fcmovnb
clc
jl
jb
add
leave
inc
clc
pusha
add
xor
add
sahf
ds
stc
fnsave
add
lock
add
mov
add
cwtl
lret
add
push
movsb
clc
mov
fdivrl
or
clc
dec
out
xor
add
insb
iret
mov
dec
cmp
stos
jo
add
add
iret
mov
add
fldcw
add
jp
int3
mov
clc
int3
into
in
xor
add
add
stos
sub
add
inc
clc
dec
imul
mov
insb
cmp
clc
sar
roll
add
fnstsw
dec
add
lret
into
mov
icebp
and
add
xchg
sbb
inc
add
lcall
add
xchg
lcall
sub
clc
jbe
push
mov
push
ja
push
add
mov
rcl
cmp
push
mov
icebp
mov
arpl
add
mov
push
add
fdivl
add
add
add
push
inc
add
or
mov
mov
clc
jle
jae
add
add
scas
out
inc
add
scas
add
clc
xor
add
jp
clc
clc
lret
add
add
clc
stos
cmp
push
leave
sub
idivb
clc
adc
xor
add
shrb
add
test
ds
cmpsl
clc
icebp
in
aas
cmp
inc
add
push
add
or
or
sub
clc
sub
push
clc
into
stos
xor
add
inc
clc
pushf
mov
sub
cmp
add
fcmovu
sbb
inc
clc
push
clc
add
jnp
outsb
jb
add
add
mov
lods
aad
loopne
mov
push
and
add
add
sbb
adc
add
scas
lcall
divl
add
mov
clc
mov
clc
and
add
add
imul
icebp
mov
sub
clc
cmc
sar
dec
inc
clc
mov
push
xor
add
movsb
clc
test
cld
cmp
sub
add
fidivrl
popf
jmp
jae
add
add
sbb
jg
dec
pop
clc
ret
clc
lret
add
rorb
add
mov
xor
add
lcall
and
add
add
pop
rep
in
or
mov
add
lock
mov
faddp
clc
jp
cs
loop
jnp
xor
add
add
add
sbb
clc
pop
pop
sub
add
outsl
mov
ficoml
and
add
add
outsl
jg
cs
xbegin
add
std
cmp
add
cmp
add
pushf
sub
add
pop
add
add
cmp
clc
push
xbegin
cmp
push
sub
jg
xchg
pop
imulb
add
add
fsubs
clc
pop
sub
imull
push
add
int
ljmp
out
repnz
fldt
test
aad
imul
add
xor
add
xbegin
add
in
jg
pop
pusha
add
or
inc
add
sbb
bsr
add
mov
das
cli
push
mov
add
movsb
clc
mov
test
insl
add
dec
sar
addr16
jne
add
mov
mov
clc
clc
jbe
sub
dec
out
gs
lret
add
pop
bound
add
and
add
clc
cmp
sbb
clc
rorb
movsb
clc
cmc
adc
inc
clc
mov
push
popf
inc
add
xor
jns
mov
add
add
add
adc
arpl
add
pop
xchg
push
cmp
add
aas
xor
clc
lock
loope
adc
mov
ds
in
xchg
addr16
lret
add
add
jnp
adc
add
sbb
jae
add
mov
push
clc
lahf
mov
outsl
pop
adc
add
cli
mov
add
clc
pop
mov
clc
sub
add
xor
add
clc
popa
add
es
and
add
add
xchg
inc
add
lods
sbb
push
lock
add
jle
clc
sub
adc
add
add
das
and
dec
cli
push
add
add
add
or
out
push
add
sub
inc
clc
pop
cmp
clc
lods
xor
add
leave
flds
add
xchg
mov
mov
xchg
jae
add
out
cld
sub
out
dec
sti
fidivrs
mov
and
loope
sbb
clc
imul
inc
clc
je
aas
popa
add
scas
cmpsl
clc
pop
arpl
add
mov
outsl
jge
hlt
js
push
pop
fidivs
clc
in
jge
clc
or
sub
pop
test
lret
clc
out
clc
loop
sub
clc
xchg
sub
pop
sub
adc
cmp
insl
jno
add
clc
cmp
add
add
add
cmp
lods
into
mov
ja
daa
clc
sub
xor
popf
lret
rcrb
fnsave
add
or
sbb
push
cmpsl
clc
lcall
testl
lahf
pop
xor
add
clc
mov
clc
inc
add
js
mov
jbe
stos
loop
fisubrs
fistpll
mov
inc
add
or
icebp
add
add
inc
add
cmp
clc
jns
clc
lret
ret
out
inc
add
dec
jae
add
lods
inc
add
jns
dec
imul
add
add
jmp
dec
cs
clc
xchg
ret
clc
jmp
mov
clc
fstpt
data16
mov
clc
adc
add
popa
add
insl
imul
clc
aaa
dec
add
add
mov
mov
xabort
add
jo
add
movsb
clc
xor
add
out
pop
or
cmp
mov
lcall
clc
jge
mov
add
clc
mov
fcompl
clc
and
clc
mov
out
movsl
clc
int
in
movsb
clc
adc
add
mov
clc
shrb
enter
mov
ljmp
add
jbe
push
addr16
daa
clc
inc
clc
xor
add
add
hlt
push
jle
clc
stos
mov
clc
cmpsl
clc
or
pop
pusha
add
lods
aam
add
adc
add
call
add
jg
inc
clc
int3
sub
push
repz
nop
cmp
add
daa
clc
out
scas
or
add
mov
clc
lods
dec
xchg
push
sbb
clc
test
mov
cmp
add
inc
clc
jl
jmp
add
scas
loopne
and
mov
outsb
mov
jle
cwtl
sub
clc
arpl
add
scas
xlat
bound
add
or
and
add
add
push
test
add
add
repnz
pop
cmp
lods
sar
push
add
scas
jge
mov
sub
add
xchg
loope
aad
push
jno
add
int
inc
add
dec
xor
add
or
add
mov
add
cmp
cwtl
and
pop
dec
sbb
and
add
xor
add
push
push
mov
add
add
add
clc
aad
clc
or
loopne
pop
lods
jns
cmp
dec
adc
add
mov
push
stos
inc
clc
sbb
clc
inc
clc
sahf
das
int3
sub
xor
add
pop
pop
mov
clc
sub
scas
cmc
inc
add
sbb
xchg
gs
xor
clc
sar
clc
jns
clc
rcll
add
jae
add
cmpsl
clc
fwait
inc
clc
roll
sbb
add
mov
or
mov
add
out
ss
lea
nop
inc
add
adc
add
xor
mov
clc
roll
clc
ja
push
lahf
aad
add
dec
sahf
fstpl
add
xchg
cltd
mov
outsl
insl
cmp
add
mov
clc
push
jnp
clc
insl
cmp
add
sbb
add
pop
xor
pop
ds
dec
cmp
popf
ficoms
add
arpl
add
xor
add
add
cltd
cmpsb
clc
xchg
inc
add
insl
xchg
sti
sub
stos
xabort
clc
push
add
lcall
add
cmp
clc
stos
xchg
bound
add
clc
dec
jb
add
cmp
sbb
clc
cmp
push
adc
clc
rolb
sub
xor
add
xabort
clc
test
fxsave
clc
push
add
mov
lret
hlt
loop
das
or
push
cld
jmp
add
call
jg
std
rolb
add
push
add
or
sbb
cli
pop
xor
add
xchg
cld
xor
sbb
sbb
jbe
xor
inc
add
pop
clc
call
cmp
push
cld
mov
nop
push
je
clc
imul
xchg
ljmp
pop
out
filds
mov
mov
fidivl
add
mov
add
sar
dec
pushf
adc
add
add
add
add
add
push
ljmp
jnp
dec
dec
leave
mov
mov
clc
divl
push
add
loopne
in
jbe,pt
fwait
sbb
clc
test
mov
or
outsb
push
xchg
sarb
add
fbstp
add
arpl
add
or
test
cmp
sti
mov
clc
sbb
mov
clc
repz
jnp
lcall
xlat
enter
xabort
mov
sbb
ja
add
push
mov
insl
push
imul
add
add
filds
add
mov
cld
xor
add
adc
add
out
dec
fisubs
add
pop
shll
mov
or
loope
enter
xchg
dec
sahf
xor
add
clc
in
xlat
addr16
lret
pop
fs
popf
xchg
jmp
add
jl
inc
add
xchg
add
add
add
mov
mov
inc
clc
shlb
js
pushf
jo
add
xchg
inc
add
pusha
add
pop
mov
clc
push
lcall
lret
gs
mov
xchg
pop
mov
clc
call
js
hlt
scas
iret
inc
add
lahf
xchg
addr16
dec
jl
clc
jne
and
add
out
in
mov
sbb
add
add
add
clc
outsb
aaa
mov
cmp
dec
cmc
mov
gs
fwait
inc
clc
int3
das
es
pusha
add
ss
call
mov
mov
add
in
test
into
mov
adc
clc
rcrb
popa
add
inc
add
mov
mov
mov
mov
leave
sbb
xchg
jbe
popa
add
lret
arpl
add
xchg
in
lock
clc
scas
nop
mov
inc
clc
mov
mov
sahf
adc
add
add
scas
enter
cmpsl
clc
xabort
sti
clc
gs
pop
or
clc
out
xchg
loopne
mov
clc
mov
clc
in
jl
add
mov
jle
test
bound
add
clc
test
push
adc
add
mov
clc
ja
cmp
clc
inc
add
ds
outsl
mov
inc
add
loopne
lret
cmp
clc
cltd
lock
sub
clc
insb
xabort
add
add
sbb
jmp
mov
out
xlat
xchg
loop
mov
mov
int
clc
mov
or
pop
fsubrl
ljmp
inc
add
and
add
jno
add
mov
jle
mov
clc
xchg
sbb
mov
or
daa
clc
mov
add
inc
add
test
clc
int
add
mov
insl
ds
and
add
clc
in
xchg
and
sbb
lahf
insl
js
psllq
inc
clc
lahf
adc
add
xabort
js
push
dec
repnz
inc
clc
stc
and
add
add
add
clc
xbegin
add
pop
clc
jp
mov
xchg
inc
clc
inc
clc
shrl
clc
cmpsl
clc
and
clc
repnz
xchg
mov
clc
insb
cmpsl
clc
jge
out
push
inc
clc
cmp
add
xbegin
hlt
cmp
jl
push
add
or
inc
add
gs
mov
pop
insl
mov
clc
add
add
das
inc
clc
pop
inc
clc
es
sub
repz
int3
repnz
bound
add
bound
add
and
add
sbb
mov
int3
and
add
clc
pop
das
dec
mov
add
push
add
lock
int3
push
add
and
mov
lret
filds
add
mov
clc
ds
mov
clc
sbb
sub
int
mov
pop
cmp
and
add
adc
add
je
fcomps
jb
add
add
add
out
mov
lods
es
jno
add
push
jbe
inc
add
cmp
clc
scas
std
fsubrl
adc
add
clc
popf
cltd
sub
clc
rorl
notb
add
add
popf
mov
add
rcrl
pop
sbb
call
push
add
xchg
dec
loope
loopne
shll
gs
movsb
clc
push
out
adc
add
mull
add
jo
add
jp
dec
scas
push
in
and
add
clc
rcr
ret
clc
mov
sub
clc
fdiv
jle
add
xbegin
xchg
ljmp
negl
jbe
clc
pop
jae
add
clc
mov
cs
nop
jecxz
jmp
add
cmpsb
clc
sub
add
sahf
pop
push
sub
pop
aas
repnz
adc
add
pop
push
add
pop
data16
jp
sbb
out
ja
in
imul
clc
mov
fldcw
cmp
into
test
add
ret
clc
cmovae
add
clc
or
push
add
mov
dec
add
add
clc
pop
int
sub
jnp
clc
into
push
scas
iret
out
xchg
cmp
clc
mov
clc
call
lret
fcoml
add
adc
add
cmp
in
add
imul
imul
xor
add
inc
add
jo
add
add
mov
cmp
lea
clc
cmp
clc
mov
fdivl
xchg
or
jo
add
xchg
push
lock
inc
add
mov
cli
jg
clc
lcall
ret
clc
xchg
mov
add
sbb
movsb
clc
stos
pop
mov
clc
mov
pop
shlb
add
mov
add
clc
push
testl
add
mov
add
ja
sbb
clc
out
and
add
pop
pop
mov
and
add
add
add
repz
lods
push
jo
add
add
pop
cmpsl
clc
mov
mov
add
clc
push
flds
jns
mov
clc
divb
inc
add
mov
stos
jmp
nop
pop
dec
dec
addr16
mov
mov
enter
in
xor
pop
push
add
xbegin
idivl
clc
loopne
pop
icebp
sbb
scas
jge
into
fcompl
test
mov
nop
xor
add
es
mov
aaa
rcrb
push
clc
mov
icebp
mov
cmc
cmp
ja
sub
fmul
mov
nop
aam
sub
out
xor
add
add
mov
xchg
out
movsb
clc
dec
jne
jge
clc
ret
xchg
out
mov
mov
add
gs
daa
clc
mov
sub
push
add
adc
inc
add
lret
popf
inc
clc
push
imul
ss
push
add
mov
add
add
data16
xchg
ret
cmpsb
clc
push
clc
out
ficompl
outsl
packsswb
add
sbb
add
add
add
sub
add
mov
lahf
sub
jg
into
clc
jae
add
inc
add
dec
lods
gs
mov
jb
add
or
sahf
jge
xabort
cmp
rcrl
leave
mov
add
fstp
je
clc
sarb
add
and
add
cmp
clc
or
test
call
mov
add
loopne
popa
add
xchg
add
add
dec
add
add
push
add
xchg
dec
mov
outsl
sbb
orps
clc
fisubl
clc
cmpsl
clc
mov
xchg
int3
sub
cmp
lock
xor
add
mov
mov
clc
ror
mov
in
or
in
jg
jnp
cltd
pminsw
sbb
dec
loop
adc
add
pop
dec
pop
push
test
dec
out
push
mov
nop
sbb
clc
mov
and
add
int
shr
sbb
fisttpl
cmp
dec
lret
dec
test
add
cmp
clc
push
push
add
xchg
or
vminps
xor
add
mov
clc
push
add
adc
add
clc
cmp
clc
cmp
cmovge
dec
push
out
mov
add
jae
add
lcall
out
imul
add
fwait
sub
cmp
xchg
daa
clc
aaa
popa
add
xchg
imul
je
xchg
shlb
loop
insl
and
test
test
imul
fcmovne
int
lahf
leave
inc
clc
inc
add
or
add
mov
clc
movsb
clc
xchg
push
or
sbb
stos
sahf
int3
jmp
add
sar
clc
out
icebp
inc
clc
jno
add
add
and
add
hlt
pop
xor
add
pop
int
hlt
lea
jbe
scas
clc
sar
test
mov
fsts
jo
add
test
mov
add
ljmp
jmp
mov
add
sub
add
xchg
mov
mov
or
push
insl
jmp
mov
jbe
std
int
clc
es
push
aas
adc
insl
sbb
insl
add
pop
cmpsb
clc
inc
clc
lea
or
or
add
loop
call
mov
dec
daa
clc
int3
movsb
clc
push
xor
add
ss
add
clc
push
pop
clc
aad
pop
mov
loope
cmp
pop
iret
aam
ret
clc
loope
cmp
es
inc
add
nop
push
adc
jl
aaa
fsubrs
mov
cmp
clc
ljmp
adc
add
mov
clc
mov
inc
add
jg
clc
mov
sti
imul
add
shrl
insb
ds
mov
clc
jmp
pop
cmp
int3
inc
add
adc
add
iret
aas
add
cmc
push
add
mov
mov
sahf
jo
add
sbb
clc
in
lret
add
mov
inc
add
lahf
addr16
or
std
sub
repz
mov
mov
out
mov
daa
clc
inc
clc
cli
push
add
mov
clc
aad
jle
cmp
pop
fdivl
push
pop
ljmp
add
and
add
test
mov
jae
add
inc
add
sub
outsb
push
clc
cltd
shrb
clc
pusha
add
mov
clc
inc
clc
fidivrl
fdivrl
pop
sub
rorb
and
add
mov
pop
sub
js
xchg
pop
push
std
push
mov
xor
add
cmc
sub
arpl
add
adc
idivb
dec
ljmp
xor
clc
sub
enter
cmp
sbb
add
add
inc
add
dec
jp
add
cli
stos
ss
add
jg
mov
add
cmp
add
stos
leave
and
push
add
mov
clc
cld
mov
sahf
jecxz
sbb
xor
add
add
or
mov
cmp
clc
mov
add
bound
add
mov
sub
pop
mov
add
idiv
lea
add
lret
cld
clc
adc
add
and
repnz
out
insl
xabort
mov
mov
sti
clc
ficoml
add
pop
jmp
or
clc
imul
add
lret
adc
add
add
repz
dec
icebp
movsb
clc
test
loop
repz
add
mov
inc
add
mov
cmp
clc
inc
clc
mov
add
gs
push
add
or
fs
out
inc
clc
cli
outsb
cwtl
cmp
add
sub
clc
jno
add
clc
in
inc
clc
nop
call
lret
add
push
mov
enter
mov
clc
hlt
dec
sahf
mov
inc
clc
adc
dec
mov
bound
add
lahf
xchg
iret
cltd
cmp
add
xchg
sbb
add
outsb
sbb
clc
test
add
int
lock
fsub
clc
int3
fxch
sub
clc
test
fisttps
clc
divl
sbb
stc
sub
push
add
inc
add
fs
push
mov
lock
add
dec
push
add
repnz
add
stc
or
clc
xor
add
je
pop
lcall
add
add
in
aad
nop
sbb
mov
add
clc
jbe
dec
addr16
sub
xchg
and
add
add
add
pop
clc
cmp
or
pop
inc
add
icebp
adc
add
fs
xor
add
test
cmp
jge
idivb
jno
add
das
mov
sub
add
sbb
adc
add
jnp
jnp,pt
mov
add
sub
clc
loop
or
pop
lods
insb
icebp
xlat
sub
clc
cmp
sub
sbb
jae
add
clc
jg
add
out
sub
push
test
adc
add
xchg
cmp
cmp
popf
push
cmp
imul
imul
xchg
sub
cmp
or
add
jmp
pusha
add
fisubs
clc
mov
cmp
push
add
das
xchg
and
lods
je
lods
in
cmp
lret
mov
clc
cli
sar
cwtl
cltd
test
clc
xchg
or
clc
push
stos
into
pop
sti
or
fiadds
clc
xor
add
lahf
fnsave
enter
add
stos
lods
dec
or
add
add
cwtl
ljmp
stos
inc
add
adc
add
clc
sub
clc
cmp
jne
dec
cmp
xabort
xor
mov
clc
sbb
sub
ror
cmp
clc
cmp
outsb
scas
cmp
add
add
or
das
fdivrs
clc
pop
inc
add
out
test
cmp
outsl
mov
add
std
pushf
mov
xchg
cwtl
fwait
cmp
clc
push
add
test
mov
add
add
cmp
add
arpl
add
sub
add
mov
cmp
sub
pop
cmp
lock
ret
add
cwtl
clc
sbb
arpl
add
in
lahf
dec
and
jns
int
test
mov
add
fld
clc
push
in
mov
mov
sub
add
push
dec
pop
fwait
pop
loop
xchg
in
push
inc
clc
mov
add
clc
popf
insb
push
clc
incl
ret
clc
push
add
sar
xchg
xchg
out
cmp
add
push
inc
add
in
and
add
add
add
daa
clc
adc
add
xchg
fistpll
lcall
xchg
call
int
ja
clc
sar
clc
and
add
clc
jae
add
clc
decb
clc
hlt
pop
lock
clc
mov
bound
add
pop
scas
repz
icebp
and
add
push
add
dec
cli
insb
call
mov
lock
inc
add
insl
inc
clc
ret
jnp
clc
inc
add
push
add
dec
sbb
clc
xor
add
lods
dec
gs
push
jno
add
data16
add
add
add
ret
cmp
test
repnz
lods
incb
add
push
imul
ficomps
dec
sar
out
in
js
sar
mov
sub
jge
adc
add
int3
xchg
pop
clc
mov
clc
adc
add
cmpsl
clc
pop
repz
out
mov
mov
mov
stos
xchg
xlat
jae
add
insl
and
mov
leave
mov
push
push
call
add
xor
add
add
pop
minps
add
mov
jae
add
cmp
or
clc
jge
fdivl
clc
aam
add
rcr
lods
add
add
cmp
pop
cmpsb
clc
jb,pn
add
test
test
clc
push
clc
cld
shr
lods
push
cmp
addr16
sbb
add
mov
add
sub
clc
stc
outsl
cmp
nop
cmp
clc
and
add
je
xbegin
lret
xbegin
in
into
xchg
mov
add
aaa
daa
clc
scas
ret
test
cmp
clc
xor
add
clc
sbb
mov
sub
add
cmp
popf
shlb
add
mov
add
sbb
add
add
add
sbb
jmp
pop
dec
push
mov
sahf
mov
add
sahf
cli
sbb
gs
mov
push
sub
sbb
and
add
cmp
es
insb
mov
mov
mov
enter
sbb
fs
mov
movsl
clc
int
clc
mov
sub
or
clc
adc
add
clc
ficoms
add
cwtl
inc
clc
bound
add
mov
clc
push
mov
add
add
cmp
push
add
pusha
add
jno
add
add
in
sbb
xbegin
lcall
mov
add
add
jns
clc
pop
push
dec
mov
clc
sub
adc
add
in
out
pushf
mov
mov
add
mov
add
add
inc
clc
pop
push
fwait
ret
xor
add
add
add
mov
clc
or
cmp
in
dec
sbb
xchg
rorl
clc
outsb
sahf
mov
jge
addr16
inc
clc
ds
cs
dec
adc
add
xchg
xabort
xor
add
jp
cmp
jmp
pop
repnz
xabort
leave
aam
clc
test
add
fcmove
insb
sbb
add
or
clc
xor
add
cmc
sub
add
add
add
clc
jno
add
clc
int3
cltd
sub
or
cltd
cmp
add
mov
arpl
add
jmp
clc
or
mov
es
mov
in
cmp
clc
or
xor
add
clc
loope
cmpsl
clc
pop
push
bound
add
jae
add
jp
cwtl
sub
cmpsb
clc
mov
add
jmp
lahf
ds
popa
add
clc
sbb
inc
clc
dec
outsl
gs
sbb
and
add
clc
add
add
add
add
int3
jae
add
out
sub
cmp
mov
add
add
loopne
hlt
jae
add
hlt
pusha
add
sahf
sbb
imul
enter
cmpsl
clc
or
cmp
clc
fnsave
je
pusha
add
movsl
clc
cld
xchg
and
add
into
pop
addr16
cmp
rorl
clc
mov
inc
clc
cmp
mov
dec
mov
pop
mov
add
add
add
sbb
clc
xchg
jmp
add
sbb
insb
pushf
daa
clc
inc
add
and
add
add
push
clc
dec
out
rcr
sub
clc
xor
add
clc
cs
aas
rorl
add
pop
insb
shrl
mov
fdivs
add
arpl
add
xor
add
ljmp
clc
out
scas
dec
cmp
ficomps
out
nop
data16
ljmp
add
pop
mov
ljmp
inc
clc
movsl
clc
xchg
push
add
scas
lret
mov
pop
int
insb
or
sub
add
out
inc
clc
repz
cld
cmp
iret
lcall
add
fistps
add
add
or
add
clc
push
inc
clc
dec
pop
sbb
add
cmp
clc
sbb
jmp
cmp
clc
enter
mov
clc
lret
pop
pop
push
xchg
mov
clc
inc
clc
dec
push
out
jmp
clc
inc
add
bound
add
jp
mov
nop
pusha
add
and
add
add
stos
lret
leave
outsb
xchg
aam
push
in
push
jne
add
or
loope
push
add
jge
jo
add
popa
add
movsb
clc
enter
inc
add
aas
push
in
addr16
imul
cmp
push
adc
add
and
add
clc
xchg
decl
add
cwtl
xbegin
mov
clc
xchg
lods
cld
inc
add
dec
pop
out
js
add
mov
mov
push
push
clc
sti
fdiv
pop
mov
and
clc
int
clc
sbb
fs
pop
adc
add
clc
clc
lea
add
sti
jne
popf
out
pop
lock
add
add
test
cli
data16
mov
int
clc
adc
add
aad
clc
cmp
inc
clc
ja
pop
adc
add
xchg
jge
add
mov
sbb
clc
repz
imul
popf
pop
pop
punpcklbw
add
or
add
add
cmc
inc
add
adc
add
clc
push
mov
dec
xor
add
cmp
bound
add
clc
in
push
test
cmc
jl
add
cmp
adc
add
inc
clc
xor
add
in
ret
xlat
xchg
sub
fisttps
add
ret
xchg
xchg
push
or
into
cli
cmc
xor
add
adc
add
jnp
push
mov
fdivrs
sub
insb
addr16
and
add
clc
inc
add
xor
add
xchg
inc
add
stos
cmp
sub
stc
arpl
add
xlat
cmp
clc
insb
sub
imul
xor
clc
inc
clc
sub
leave
lock
jnp
mov
add
clc
stos
jmp
push
clc
divb
cmp
clc
jge
clc
mov
fnstcw
out
adc
push
push
cs
popa
add
lret
add
xor
add
add
inc
add
adc
add
add
pop
jae
add
add
push
gs
cmp
mov
sbb
gs
out
jle
push
jae
add
mov
clc
cltd
out
and
add
add
ret
in
mov
and
add
ljmp
add
xabort
lret
inc
add
pop
clc
pop
sub
insb
arpl
add
add
cli
lret
jle
test
cmp
clc
mov
inc
add
out
jns
pop
clc
mov
push
call
clc
shl
push
inc
clc
jecxz
xchg
ror
add
add
and
add
jg
sarb
add
test
mov
xor
add
add
clc
sar
test
add
add
sar
add
add
cwtl
daa
clc
mov
in
enter
mov
clc
mov
add
add
mov
xchg
popa
add
xbegin
cli
lods
es
movsl
clc
stos
mov
dec
fadds
pop
and
add
lods
cli
xchg
dec
pushf
pusha
add
xchg
mov
fs
mov
lret
inc
add
lcall
data16
adc
clc
imul
pushf
pop
fwait
jp
clc
ret
clc
push
or
arpl
add
sub
add
pop
sar
add
inc
clc
or
clc
mov
test
add
imul
scas
cmp
add
fstpl
push
add
fdivrl
add
fildll
add
mov
inc
add
jae
add
push
and
add
clc
pop
aam
add
sbb
clc
xbegin
ret
jge
sub
daa
clc
arpl
add
aas
lods
mov
dec
xchg
and
add
call
clc
fsubl
add
movsl
clc
and
add
or
pop
xchg
jae
add
mov
gs
pop
enter
adc
add
xchg
ljmp
cmp
clc
cmp
add
push
add
inc
add
addr16
int3
mov
or
sar
cmpsb
clc
cmp
clc
push
add
out
mov
shl
dec
push
clc
mov
clc
das
cmp
clc
mov
push
enter
push
add
mov
add
clc
xor
add
jne
mov
jbe
insl
gs
mov
mov
add
jl
add
sub
push
clc
pop
mov
mov
std
mov
fstl
add
in
mov
lcall
test
insb
and
add
add
pop
lock
mov
push
add
dec
jge,pt
ret
clc
xor
add
outsb
mov
clc
cmp
clc
ss
sar
xor
push
icebp
mov
xchg
pop
xor
add
rcl
out
xor
popa
add
fildl
add
and
sbb
dec
call
testb
inc
clc
xchg
pop
fcmovnu
mov
in
out
dec
sbb
pop
jg
int
xchg
sahf
daa
clc
test
and
add
clc
mov
jl
mov
dec
push
ljmp
pop
scas
fisttps
and
add
jbe
clc
fnstsw
jge
jl
clc
push
mov
mov
loopne
xchg
mov
out
pop
inc
add
sbb
rcll
jmp
pop
pop
movsl
clc
jl
adc
clc
cmp
out
jns
clc
jmp
push
add
add
jge
stos
gs
adc
sbb
clc
cmc
jge
add
cmp
add
sar
clc
jns
clc
hlt
xor
add
clc
xor
mov
clc
bound
add
add
loop
addr16
stc
xchg
dec
push
mov
sub
clc
mov
push
clc
or
add
dec
fs
test
clc
cs
add
fistl
sub
dec
lahf
sbb
adc
add
add
incl
clc
cmp
fisubrl
pop
aad
adc
add
int3
or
clc
xor
mov
xor
add
jno
add
in
lret
add
dec
movsl
clc
cs
cli
sahf
repnz
dec
iret
jae
add
dec
leave
test
mov
add
xchg
and
add
clc
adc
add
add
ficomps
jae
add
xbegin
mov
cmp
add
in
adc
add
mov
outsb
jg
pop
gs
daa
clc
scas
call
outsb
push
add
or
add
jns,pt
loope
aad
xchg
and
add
add
add
add
pop
arpl
add
push
stos
sbb
sub
dec
mov
or
add
aas
cmpsl
clc
pop
sub
push
add
pop
into
and
add
clc
add
add
add
or
daa
clc
rdtsc
add
sbb
xabort
xor
add
add
add
cmp
xor
clc
jae
add
xchg
add
add
pop
cmc
or
clc
addr16
mull
and
add
dec
or
add
pop
or
data16
sbb
test
cmp
shlb
add
add
mov
add
xabort
lcall
out
pop
push
dec
outsb
int
mov
clc
int
mov
add
and
add
add
bound
add
add
clc
add
add
clc
out
sahf
cmp
clc
or
or
cmp
inc
clc
pop
int
clc
ret
mov
aad
clc
add
jmp
pop
repnz
pop
adc
add
sbb
clc
repz
push
addr16
mov
clc
mov
arpl
add
clc
xabort
add
sti
js
mov
nop
adc
add
call
add
jae
add
ja
popf
inc
add
jns
sbb
clc
cmp
scas
mov
loopne
xchg
inc
add
ss
insb
jae
add
xchg
into
mov
jne
jo
add
xor
add
inc
add
sahf
imul
adc
clc
sub
ja
clc
lock
add
add
repnz
out
cmp
jle
clc
adc
add
mov
pop
clc
jg
out
cmp
dec
addr16
dec
pop
sbb
xbegin
inc
clc
push
add
sbb
clc
ret
clc
lret
clc
mov
clc
movsb
clc
mov
jns
test
xabort
jae
add
add
cmp
add
inc
add
inc
clc
insl
inc
add
je
int3
or
cli
dec
pushf
adc
int
jl
lcall
daa
clc
out
jbe
add
bound
add
xchg
dec
stos
dec
mov
lret
xchg
ds
and
add
add
xabort
lahf
clc
push
mov
add
clc
dec
cmp
dec
mov
and
add
lea
sbb
clc
xchg
mov
loop
out
lcall
dec
stos
mov
xlat
xchg
push
jne
stc
or
add
jge
inc
add
ds
push
mov
clc
ret
out
cmp
cld
jg
fs
xchg
jbe
mov
clc
insl
cli
add
add
mov
add
xchg
lret
xchg
adc
add
cmp
jmp
dec
jmp
nop
cmp
clc
sub
clc
mov
mov
or
int
jle
lret
inc
add
std
cmpsl
clc
loop
in
xchg
sub
push
movsl
clc
stc
mov
mov
lret
aaa
cmp
mov
int
movswl
test
dec
or
clc
nop
push
repz
add
cmp
fwait
call
add
add
clc
dec
leave
imul
add
or
cs
sub
lods
dec
add
mov
add
add
into
nop
jns
clc
mov
sbb
clc
mov
sbb
cmp
sbb
add
jl
stc
repnz
jno
add
pop
rcl
cwtl
fwait
ret
cmpsb
clc
cmp
clc
fnstsw
mov
repnz
add
loop
mov
mov
clc
rolb
add
scas
sahf
sbb
rcrb
add
jge
cmp
add
mov
ds
imul
idiv
dec
imul
and
add
cmp
xchg
cmp
add
aaa
cvtps2pi
test
clc
sti
scas
and
add
pop
add
add
add
push
add
add
dec
cmp
add
xor
mov
push
xabort
fadd
clc
adc
add
add
dec
and
add
test
pusha
add
daa
clc
cmpsl
clc
out
stos
mov
add
push
inc
add
ds
unpckhps
clc
imul
xchg
xor
add
clc
loopne
cs
out
enter
enter
lahf
popa
add
mov
clc
decb
push
clc
mov
in
cli
cs
test
push
add
adc
clc
adc
push
push
add
clc
pop
clc
outsb
sub
rclb
lods
hlt
sbb
add
add
dec
movsl
clc
out
rolb
add
sar
dec
xor
add
add
filds
jl
cmpsb
clc
and
inc
add
repnz
clc
mov
test
xor
sub
cmp
clc
push
jnp
inc
add
inc
add
or
sti
dec
adc
add
clc
and
add
js
xor
add
add
nop
dec
std
test
xlat
rorl
add
testb
add
nop
imul
das
fidivs
popf
xchg
jge
cmp
clc
push
imul
push
jne
add
xchg
mov
mov
add
add
push
pop
out
loopne
push
add
cmp
mov
xchg
jns
mov
add
and
out
sbb
inc
add
push
add
and
add
nop
dec
push
add
aad
clc
testl
cwtl
dec
in
add
shll
and
add
clc
mov
push
jnp
fstpl
cmp
clc
pop
repz
add
fs
pop
cmp
out
clc
dec
lods
xchg
pop
adc
and
add
sbb
add
jo
add
icebp
jne
push
add
in
int
icebp
das
bound
add
imul
push
sar
add
insb
pop
mov
outsl
mov
cmpsl
clc
adc
add
and
mov
jbe
mov
push
add
ds
xor
dec
mov
into
jae
add
in
fimuls
or
mov
lods
mov
clc
push
add
xchg
push
clc
data16
sti
flds
bound
add
adc
or
nop
or
clc
or
xor
cmc
push
cmp
push
clc
in
das
data16
inc
clc
in
mov
add
cmc
sbb
and
fldcw
add
dec
ja
clc
sub
pop
dec
jle
dec
inc
clc
divl
repnz
or
dec
xchg
sub
inc
add
or
insl
jbe
clc
movsb
clc
cmp
or
fwait
cmp
xor
push
add
push
sarb
jl
push
clc
clc
movsb
clc
aad
or
nop
jmp
add
pop
push
add
test
sub
add
push
cmp
sar
jne
popa
add
xor
add
add
scas
fmull
test
pop
cltd
mov
add
add
cmp
ret
clc
xchg
fs
and
add
mov
popf
xor
add
sbb
clc
mov
stc
push
mov
clc
mov
add
mov
sub
and
add
add
aam
mov
push
add
sub
clc
int3
popf
jmp
or
add
jmp
repz
add
lahf
cmpsl
clc
inc
clc
cmp
clc
ljmp
xchg
inc
add
ja
clc
cwtl
inc
add
sub
mov
clc
ja
clc
int3
int
clc
push
clc
jae
add
add
clc
ljmp
js
adc
add
dec
ret
clc
out
xchg
cld
xchg
bound
add
clc
mov
push
or
sub
cmp
je
cltd
es
or
inc
add
fs
or
add
add
pop
sahf
out
mov
add
bound
add
clc
sub
mov
dec
push
clc
pop
lea
ds
loope
push
push
mov
add
sar
stos
push
add
push
fcmovu
jne
in
add
add
push
mov
mov
clc
nop
fdivrs
clc
lcall
pop
inc
clc
fiaddl
or
add
sub
cmpsb
clc
ds
popa
add
sbb
add
add
sbb
sbb
cmp
jns
ds
aam
push
add
add
inc
clc
push
negl
inc
clc
cmp
add
pop
lods
cmc
in
dec
xchg
ret
es
fistps
clc
mov
lods
add
add
lea
clc
js
fisubrl
add
ret
add
outsl
jae
add
adc
add
jnp
clc
sbb
clc
fdivs
add
leave
dec
dec
cmp
add
fildll
lret
clc
lea
call
mov
ljmp
add
jge
or
clc
lock
jns
cli
jae
add
fwait
jge
clc
gs
cmp
add
pop
fdiv
cmp
fstps
hlt
fnstcw
or
sar
flds
xchg
mov
clc
cmp
cmpsl
clc
repnz
push
pushf
mov
clc
shll
add
add
addr16
pop
inc
clc
mov
or
add
add
add
cmp
ret
add
xchg
or
clc
nop
and
add
dec
jne
add
add
ret
clc
mov
cmp
add
xchg
jnp
add
into
clc
xchg
mov
push
dec
out
mov
push
add
push
je
dec
xchg
data16
add
clc
mov
clc
addr16
fnstcw
jbe
lcall
add
add
add
sbb
xor
add
clc
icebp
pop
gs
sbb
and
mov
sub
mov
sbb
add
movsb
clc
and
add
clc
and
lret
mov
leave
popf
pop
xor
add
xabort
clc
sub
add
add
add
repz
add
cmp
clc
push
add
addr16
and
insl
adc
add
push
add
lcall
xbegin
movsb
clc
adc
mov
xchg
sbb
das
leave
mov
aas
mov
clc
push
add
push
mov
xchg
nop
or
mov
clc
push
int
rclb
sub
push
add
or
add
jg
adc
add
add
add
pop
data16
cmp
mov
cmp
cmp
add
add
imul
clc
fs
mov
add
sbb
cli
movsb
clc
popa
add
in
or
clc
sub
clc
repz
adc
add
popa
add
mov
movsl
clc
fisttpll
sub
push
daa
clc
sub
clc
leave
push
clc
mov
mov
clc
leave
repnz
sub
add
push
add
push
add
ds
push
add
jnp
clc
notl
add
clc
pop
add
add
add
jbe
sbb
stos
add
inc
add
mov
fisttpl
xlat
sbb
sub
add
sbb
mov
out
jbe
xchg
push
clc
fiadds
inc
clc
bound
add
pop
sbb
jmp
clc
cmpsb
clc
pop
cmp
call
xchg
dec
pop
xor
add
fisttps
jecxz
mov
add
or
int3
dec
and
add
cmp
add
or
fcmovnbe
fcmovbe
ficompl
aaa
xabort
shl
mov
in
sbb
pop
sub
or
es
sub
ret
out
cmp
clc
jno
add
lahf
popa
add
xor
add
scas
repnz
cmp
movsl
clc
movsb
clc
hlt
rcll
into
sbb
clc
scas
stos
or
add
jae
add
add
ret
clc
jge
add
cmp
cmove
cltd
and
add
add
mov
out
pop
and
add
clc
pop
aas
divl
add
push
add
sbb
add
lock
mov
add
rcrl
cmc
lea
mov
repz
cmc
out
jle
loope
pop
add
add
pop
bnd
test
out
jne
add
dec
or
add
dec
clc
push
add
cwtl
mov
xchg
addr16
and
test
fadds
fildl
lcall
add
xor
add
mov
mov
dec
gs
enter
stos
pop
adc
clc
cmp
clc
movsb
clc
jb
add
ds
push
add
jg
inc
clc
loopne
hlt
fsubl
clc
add
add
je
scas
outsb
mov
clc
xchg
cwtl
mov
xchg
addr16
cs
fnsave
jmp
clc
xchg
loop
inc
clc
cmp
add
add
enter
clc
mov
jbe
clc
xlat
stos
fs
cwtl
ljmp
add
and
add
fwait
mov
add
mov
sbb
ds
push
dec
dec
mov
das
clc
out
in
popf
mov
fildl
add
leave
ds
ljmp
add
stos
daa
clc
cwtl
xchg
mov
add
sbb
popa
add
push
add
sub
add
rcll
and
add
lea
add
sbb
rcll
add
mov
add
decl
int3
adc
clc
loop
cld
stos
jmp
arpl
add
add
add
clc
pushf
outsb
jo
add
cmp
clc
es
ja
mov
cmpsb
clc
or
cmp
clc
mov
lahf
add
add
add
jb
add
clc
cmpsb
clc
cmpsb
clc
jmp
xchg
pop
cmp
mov
ret
clc
popf
mov
add
or
sbb
pop
pop
dec
clc
xchg
push
nop
adc
add
add
add
add
clc
sub
jmp
mov
out
scas
stos
push
add
add
clc
pop
clc
cmp
add
push
add
pop
inc
clc
push
inc
clc
aam
add
mov
clc
in
pusha
add
mov
call
add
dec
fs
adc
clc
in
mov
clc
sbb
das
push
add
imul
adc
add
out
es
daa
clc
pop
test
shll
clc
mov
add
adc
cmpsb
clc
mov
js
mov
add
cmp
xchg
insl
mov
out
mov
clc
sarl
sub
clc
sub
test
clc
mov
out
popf
enter
cmp
imul
mov
addr16
push
add
ficompl
push
mov
clc
add
roll
add
dec
xor
add
int
add
mov
add
clc
cmc
sbb
push
xor
add
stos
lods
lods
inc
clc
inc
add
jo
add
and
mov
pop
cld
push
jae
add
ja
imulb
dec
mov
add
add
xor
xor
cmp
mov
aaa
ja
add
mov
popf
imull
add
in
out
add
pusha
add
stos
nop
mov
cmp
out
mov
jbe
ja
add
jnp
pop
ss
cld
jno
add
in
push
cld
inc
clc
pop
test
push
or
sub
jmp
clc
jo
add
add
clc
iret
mov
inc
clc
mov
add
add
add
add
inc
clc
push
sub
clc
mov
mov
mov
movsl
clc
push
add
adc
add
xbegin
xchg
daa
clc
fisttpl
inc
add
adc
clc
fs
jle
or
clc
loop
cmp
clc
pusha
add
push
pusha
add
mov
push
add
lock
jbe
add
test
add
lods
aad
clc
pop
pushf
mov
push
add
dec
push
add
adc
add
pop
clc
lret
mov
push
and
inc
add
mov
add
xor
add
iret
loope
jmp
clc
adc
add
nop
lock
clc
lcall
inc
clc
sahf
hlt
addr16
mov
loope
insb
test
adc
popf
jge
clc
mov
test
clc
xchg
inc
add
scas
sbb
roll
add
dec
lcall
sti
jmp
pop
clc
fsubrs
fidivl
arpl
add
nop
lock
sbb
clc
jno
add
call
cmpsl
clc
aas
pop
push
clc
inc
add
stc
jmp
cld
inc
add
cmp
jecxz
mov
and
idivl
enter
xchg
mov
mov
xor
add
enter
mov
clc
mov
and
add
xabort
cli
adc
add
add
cwtl
in
dec
xchg
mov
clc
xchg
leave
inc
clc
lods
scas
mov
add
xabort
cmp
mov
dec
sbb
clc
pop
inc
clc
mov
xor
fistpll
xchg
xchg
sbb
xor
add
sub
test
cmp
add
lods
inc
clc
inc
add
lea
add
push
add
and
add
clc
jne
ret
clc
push
movsl
clc
cmp
clc
cmp
push
add
mov
add
xchg
dec
aaa
mov
sbb
mov
add
fisubl
jmp
pop
push
mov
clc
movsl
clc
mov
inc
add
inc
clc
adc
add
add
jne
xchg
jne
mov
xchg
add
add
cmp
lods
jns
lods
sbb
pop
inc
add
xchg
pop
cmpsl
clc
ds
clc
jb
add
add
jo
add
clc
push
mov
gs
or
or
xor
add
lret
fcompp
mov
push
dec
mov
adc
in
xchg
inc
add
or
add
outsl
das
cs
add
adc
push
add
xchg
jbe
fisttps
rdtsc
add
sub
ja
test
fnsave
push
cmp
add
sbb
mov
add
xor
adc
add
clc
ja
cmp
cmp
add
jmp
mov
inc
add
int
clc
repnz
sar
adc
lret
fucom
clc
stos
ret
clc
das
pop
cmp
add
mov
xabort
clc
out
mov
sti
dec
push
add
jge
sbb
mov
add
mov
xlat
push
add
cmp
clc
pop
lcall
sub
xor
cltd
mov
mov
clc
mov
add
add
dec
pop
or
in
lcall
add
xor
add
dec
call
add
cmp
aas
cmp
sub
fsubrs
cmc
push
clc
stc
bound
add
xor
add
clc
fcoml
stc
push
xlat
gs
cmpsb
clc
sti
and
enter
sbb
and
popa
add
cli
inc
add
jl
pusha
add
je
ss
jp
dec
mov
clc
sar
mov
dec
jp
clc
mov
clc
xchg
pop
icebp
and
out
adc
cli
pop
xor
add
push
push
out
pop
pop
aam
addr16
stc
sub
pop
clc
sahf
xlat
xor
add
add
clc
push
adc
test
sub
pushf
inc
clc
pop
dec
xchg
add
xchg
xor
insl
push
pop
mov
movsb
clc
push
jo
add
clc
xbegin
shrb
mov
lea
test
clc
inc
add
scas
lock
dec
in
test
sar
clc
stos
mov
xchg
cwtl
fadds
add
lret
mov
sar
clc
cld
inc
add
loope
push
add
xor
inc
add
sar
in
xchg
decb
stos
mov
in
cmp
and
add
fdivl
add
add
lock
jle
ds
push
fnstenv
add
iret
xor
add
clc
add
add
jae
add
xchg
jp
das
push
loop
sbb
or
mov
hlt
shl
clc
iret
clc
inc
clc
jge
clc
lret
iret
jecxz
sub
add
dec
call
add
mov
loopne
sahf
leave
jno
add
add
or
insl
test
test
fsts
clc
and
add
jle
bound
add
push
add
addr16
mov
clc
pop
mov
add
or
add
loopne
js
enter
xor
add
incl
jae
add
add
jne
push
sub
mov
aas
xabort
clc
lods
sti
sarl
fcompl
sbb
cld
jno
add
clc
adc
add
add
push
cmp
clc
int3
add
mov
cmp
adc
add
mov
add
mov
add
add
or
clc
popa
add
out
daa
clc
out
outsl
push
mov
dec
and
add
jmp
clc
mov
mov
add
add
add
and
add
insl
lahf
adc
sub
je
jne
add
push
clc
outsb
cmp
jno
add
add
clc
lahf
mov
jbe
clc
and
add
inc
clc
fcomip
push
and
mov
add
mov
xor
add
clc
mov
cmp
dec
mov
sub
or
xor
add
std
pop
and
dec
sub
clc
jl
add
pop
inc
add
insb
mov
adc
add
clc
ret
clc
mov
fsubs
add
hlt
lods
jne
std
lcall
bound
add
add
xor
add
jbe
mov
pusha
add
push
push
xchg
jb
add
nop
mov
add
and
add
add
xchg
lock
adc
add
xor
add
add
clc
rolb
add
add
clc
loope
sub
xchg
add
add
inc
add
out
jne
add
add
push
add
jbe
add
add
mov
pop
sub
movsl
clc
mov
and
add
clc
insl
xchg
add
add
add
aaa
ret
push
add
mov
add
loop
inc
clc
xchg
aam
inc
clc
push
scas
xchg
es
pop
clc
push
iret
aad
xchg
sub
sti
gs
cmp
add
aas
clc
cwtl
lahf
std
aam
push
das
int3
dec
fwait
ret
add
loope,pt
push
cmp
push
add
repnz
cmp
pop
dec
mov
xchg
and
add
jae
add
imul
add
xlat
push
add
stc
loopne
xor
jnp
pop
inc
clc
cmp
add
dec
sub
fmuls
dec
jne
clc
push
mov
clc
lock
add
stc
cmpsb
clc
and
add
add
jne
fldt
adc
add
dec
jmp
or
test
sbb
popf
hlt
popf
push
dec
rcrl
push
mov
jbe
pop
push
jmp
mov
or
adc
jmp
clc
dec
leave
cli
push
add
jle
mov
mov
mov
clc
adc
repnz
jno
add
jo
add
shrl
pop
and
add
fstpt
push
out
test
dec
ljmp
fisttps
cmpsb
clc
add
pop
cmp
out
mov
add
shlb
cltd
pop
clc
cmpsl
clc
cli
adc
add
in
stos
add
add
mov
push
jns
lock
daa
clc
mov
xor
cwtl
sbb
mov
add
add
popa
add
stos
inc
clc
movsl
clc
int3
mov
add
add
add
mov
jl
adc
add
scas
fildll
cmp
cmp
jmp
xchg
jbe
add
add
mov
add
sbb
jl
out
sub
clc
int3
push
xlat
push
clc
inc
add
dec
fistpl
adc
add
clc
cmp
push
sbb
xor
add
cmp
inc
add
rcrl
clc
or
ljmp
push
out
stc
cld
fs
jmp
sar
clc
xchg
xchg
jne
xchg
fs
push
add
fadd
clc
iret
outsb
aas
mov
add
sbb
cmp
and
cld
sbb
cmp
stc
stos
insb
mov
adc
add
clc
jle
xor
add
and
out
ja
add
hlt
scas
hlt
jo
add
add
sbb
jg
add
inc
clc
call
addr16
sahf
stos
jnp
clc
push
ss
jno
add
add
inc
add
pusha
add
sbb
clc
test
sbb
add
inc
add
repnz
sbb
clc
xor
cmp
clc
mov
clc
data16
jmp
clc
dec
daa
clc
outsb
mov
add
fmul
lods
mov
lods
stos
inc
add
sbb
and
add
daa
clc
jb
add
add
mov
ds
outsl
adc
add
add
xchg
xchg
fldenv
clc
sbb
add
jb
add
add
add
jl
jge
aam
nopl
clc
jbe
dec
sbb
shll
out
cmp
mov
mov
lods
sub
clc
cmp
pop
int3
icebp
pop
fs
mov
aad
pop
lea
roll
add
lret
add
xchg
iret
lcall
inc
clc
int3
das
mov
clc
xchg
xchg
into
mov
hlt
fsts
and
arpl
add
push
clc
jo,pt
add
add
mov
xor
add
xchg
xabort
clc
or
clc
not
popa
add
jecxz
fisttpll
jno
add
or
inc
add
stos
cld
int
clc
sbb
or
add
shlb
cmp
add
xchg
in
cltd
xchg
add
add
clc
push
dec
sub
clc
je
cmp
adc
xor
add
sbb
mov
clc
lock
into
cmp
call
mov
sbb
fstps
adc
add
clc
movsl
clc
in
and
add
add
rolb
mov
xchg
flds
cwtl
cmp
clc
iret
insb
cmp
not
test
insb
and
add
fdivrl
clc
mov
clc
cmp
clc
in
sbb
movsb
clc
push
jb
add
or
hlt
lods
pop
cmpsb
clc
cltd
cmp
add
fcmovne
mov
mov
mov
push
jp
pop
daa
clc
loope
and
add
or
cmp
add
xchg
test
lret
es
fidivrs
aam
mov
test
dec
pop
jmp
add
imul
pop
sub
push
loope
iret
out
sub
test
add
push
loope
sbb
add
jne
cmp
cmp
inc
clc
or
movsl
clc
add
add
clc
js
add
loope
jmp
jb
add
stc
jnp
jbe
clc
add
add
pop
inc
clc
je
jl
clc
aas
lods
inc
add
jmp
add
or
mov
hlt
fmull
testl
and
dec
int3
test
addr16
push
sbb
inc
add
sar
jge
pop
cmp
cmp
loopne
push
xor
add
addr16
mov
adc
add
call
lret
outsl
iret
xchg
ret
loope
mov
frstor
rcr
daa
clc
call
dec
cmpsb
clc
scas
and
add
imul
hlt
ret
clc
push
xor
add
xchg
cld
push
faddp
clc
sar
in
jnp
clc
ds
mov
std
mov
add
cmp
fisttps
push
add
insb
push
add
mov
mov
pop
jl
clc
or
pop
mov
push
ljmp
popa
add
and
add
lods
fdivrp
imul
call
clc
pushf
int
clc
sub
mov
sbb
imul
clc
sub
mov
hlt
xchg
loope
sar
add
sbb
push
addr16
mov
cmpsb
clc
mov
pop
aaa
fwait
xchg
in
vmaxps
pop
dec
ret
dec
ret
clc
mov
add
add
xabort
add
adc
inc
clc
in
mov
add
bound
add
xchg
loopne
and
add
cld
mov
dec
xor
add
push
push
push
add
mov
clc
adc
add
pop
lods
sub
clc
push
and
add
add
in
test
fldcw
push
into
cli
ret
clc
mov
jbe
clc
addr16
dec
mov
mov
cmp
test
sub
push
lret
sbb
pop
pushf
cmp
das
cmpsl
clc
ret
clc
or
mov
pop
insb
not
shl
clc
jo
add
jns
incl
mov
es
mov
add
mov
aaa
movsb
clc
inc
clc
pop
mov
xor
add
iret
pop
js
int3
sub
clc
into
ljmp
out
dec
scas
jo
add
pop
out
sar
scas
pop
adc
add
clc
xabort
jae
add
add
adc
add
push
add
push
mov
clc
imul
add
fs
and
add
add
adc
add
cmp
xor
add
add
adc
add
clc
aam
pop
push
add
sub
xchg
movsb
clc
dec
push
clc
mov
repz
add
sub
clc
outsl
fisubrs
fwait
out
mov
dec
mov
fwait
jno
add
dec
mov
dec
push
call
add
je
xor
add
std
add
add
add
sbb
clc
inc
clc
popf
xor
push
or
call
pop
fldenv
clc
sar
cmp
into
sbb
push
cmp
push
add
mov
clc
jecxz
jle
mov
jmp
or
sub
lock
sbb
jo
add
dec
xor
add
popa
add
dec
pop
sbb
cld
or
ret
ds
out
stos
gs
cltd
push
add
xor
add
mov
in
outsb
test
repnz
clc
pop
and
add
cmc
xor
add
add
or
repnz
das
sub
xlat
jnp
add
fs
sar
mull
adc
add
in
jne
mov
add
loop
mov
data16
xlat
dec
filds
clc
jl
mov
add
inc
add
loopne
out
ljmp
in
mov
loop
ret
clc
push
xbegin
add
clc
pop
packssdw
pop
addr16
mov
inc
add
xor
add
sbb
add
and
add
add
xchg
lcall
mov
jno
add
clc
pop
mov
xchg
cld
scas
es
aad
add
push
add
test
pop
ficoms
adc
add
add
cwtl
cmp
pusha
add
fsts
add
pop
or
aas
dec
fcmovnb
clc
ret
push
add
cli
inc
clc
jmp
clc
stos
jle
clc
lahf
loope
push
add
movsb
clc
mov
sar
lcall
fsubr
mov
add
clc
push
xor
incl
cmp
jo
add
enter
mov
imul
push
add
and
add
clc
loopne
es
xchg
cmp
int3
dec
adc
push
pushf
insl
stos
mov
inc
clc
lea
cmp
or
clc
incl
ret
clc
out
pop
sub
pop
sbb
clc
shll
add
jg
add
cli
js
jp
add
leave
jbe
adc
add
clc
or
xorps
push
mov
daa
clc
ss
adc
add
clc
pop
out
xor
add
add
sar
stos
fldt
mov
add
addr16
sub
cmpsl
clc
inc
clc
jb
add
clc
xor
add
popa
add
xchg
inc
add
fsts
lock
lret
mov
clc
mov
add
je
clc
dec
pop
in
mov
adc
add
ror
sub
clc
data16
xor
clc
xchg
scas
pop
fdiv
sbb
add
fwait
ret
clc
sahf
pop
dec
jle
sub
clc
mov
or
clc
dec
dec
xchg
or
inc
add
popa
add
in
bound
add
add
xchg
testl
rorb
add
xchg
dec
xor
add
clc
xor
rcrl
cli
aam
mov
add
clc
adc
add
clc
call
add
add
in
inc
add
sub
mov
add
lock
mov
or
add
shll
add
xor
clc
pop
fnstenv
clc
clc
sub
sti
push
add
pop
push
jg
mov
pop
inc
clc
cltd
fisttpl
in
mov
dec
nop
cmp
clc
icebp
mov
add
mov
in
shlb
ja
test
ret
movsl
clc
add
add
add
lods
pushf
or
clc
mov
adc
add
add
jle
add
inc
clc
sbb
faddl
jbe,pt
push
clc
xor
add
jge
add
pop
mov
mul
clc
imul
add
push
stos
pop
clc
cmp
jb
add
aad
clc
lret
gs
dec
stos
push
data16
mov
clc
adc
inc
add
je
dec
xchg
cltd
add
add
in
xor
add
sahf
push
stos
fs
mov
pop
mov
add
cmp
push
clc
out
pop
pop
sbb
add
cmp
xor
add
or
clc
inc
clc
bound
add
clc
cwtl
ds
clc
out
ss
xchg
pop
xchg
and
add
mov
clc
dec
sub
add
mov
clc
push
nop
repz
jne
clc
sub
rorl
add
test
add
fdivs
add
ljmp
add
fwait
stos
ret
push
fcoml
aaa
xchg
or
in
lahf
pop
jmp
aam
clc
pop
cmp
add
add
add
pop
push
add
and
add
clc
pushf
mov
add
idivl
sub
push
clc
int3
faddp
clc
mov
ficoms
add
add
imul
add
insl
scas
jp
add
nop
cli
sub
add
mov
cmp
clc
mov
lahf
mov
cmp
jae
add
add
cmpsb
clc
in
pop
into
fucompp
aaa
inc
add
jecxz
arpl
add
add
test
std
stos
mov
clc
jo
add
add
fdivrp
dec
sbb
jg
add
sub
clc
or
aad
clc
xchg
xor
add
clc
add
dec
mov
inc
clc
jb
add
clc
imul
add
push
add
push
add
inc
clc
mov
add
clc
dec
scas
cmp
add
inc
add
mov
add
pop
mov
fsts
aam
clc
cs
pop
movsb
clc
pushf
sahf
mov
pop
clc
out
pop
js
clc
cmp
clc
add
out
adc
inc
clc
clc
js
and
dec
xchg
jp
cmp
cmp
add
iret
lods
xchg
scas
fnstenv
add
enter
outsb
loopne
dec
nop
cs
xor
add
clc
push
clc
inc
add
adc
add
lock
add
pop
adc
add
clc
xchg
cmpsb
clc
stos
fimuls
pusha
add
mov
mov
pop
adc
add
cli
jmp
inc
add
cmpsb
clc
mov
clc
insb
jecxz
leave
int3
mov
imul
rolb
clc
push
add
mov
xchg
sub
clc
int3
dec
loop
jno
add
inc
add
mov
popf
ljmp
add
je
mov
push
xor
add
inc
add
cmpsb
clc
inc
clc
sbb
cltd
je
idivl
dec
mov
clc
es
xlat
jbe
inc
add
jmp
jl
push
push
add
xlat
xchg
lret
clc
mov
add
cwtl
xchg
data16
lcall
dec
xchg
push
pusha
add
push
add
xor
add
imul
sbb
dec
mov
add
clc
cld
clc
insb
mov
ja
clc
mov
clc
in
pop
ds
mov
clc
pushf
mov
mov
add
or
jb
add
cmp
add
lock
mov
add
mov
push
add
cmpsl
clc
adc
add
sub
pop
outsl
fdivrs
clc
xchg
mov
clc
in
arpl
add
and
add
mov
xchg
mov
or
cmpsl
clc
jns
pop
clc
hlt
sub
dec
pop
cmp
add
push
push
into
fdiv
int3
mov
or
clc
ret
adc
add
int
insb
jae
add
add
int
xchg
jp
jo
add
jo
add
mov
clc
sub
clc
aad
arpl
add
mov
adc
add
shr
jno
add
add
aam
call
add
popl
adc
stc
pop
add
dec
cmp
clc
test
in
push
add
dec
push
pusha
add
incl
clc
es
mov
clc
jb
add
push
ds
xchg
cmp
add
add
nop
cmp
pushf
popa
add
kmovw
mov
clc
and
add
sub
ret
iret
dec
sbb
add
lahf
mov
clc
sbb
mov
into
jge
cmpsb
clc
sar
add
or
xchg
je
push
add
jmp
mov
or
mov
pop
pop
pop
pusha
add
jmp
clc
call
out
into
shl
or
xabort
add
mov
repnz
enter
ljmp
in
mov
gs
mov
mov
enter
xor
add
xchg
jl
jae
add
jne
xchg
fisttpl
clc
dec
sti
inc
clc
fldl
sar
test
jo
add
add
fbld
mov
add
test
push
mov
add
es
jbe
aam
pop
mov
fstps
clc
clc
fcompl
add
data16
dec
mov
add
mov
dec
xchg
push
add
mov
add
clc
adc
clc
mov
dec
lods
cmpsb
clc
jg
add
sub
xor
dec
imul
or
adc
clc
lock
adc
add
jns
inc
clc
jnp
push
add
xchg
out
or
clc
sub
inc
clc
loop
test
pusha
add
jp
movsb
clc
push
inc
add
test
jbe
jmp
inc
clc
mov
clc
fwait
pop
notb
add
add
mov
dec
mov
cs
push
add
inc
clc
loope
pop
shlb
out
cs
push
add
sbb
fcoml
rolb
es
lea
add
fldenv
add
inc
clc
cmp
xor
divl
add
xlat
pop
push
das
add
add
add
inc
clc
out
xchg
push
data16
mov
and
add
add
loopne
and
or
bnd
add
add
testb
lock
add
jmp
clc
int
clc
outsb
push
dec
fsubs
add
bound
add
clc
dec
mov
mov
inc
add
add
clc
ror
jns
jns
clc
in
lea
clc
dec
lods
aaa
int
jo
add
dec
jno
add
xchg
push
add
pushf
repz
push
daa
clc
jp
xchg
repnz
int3
add
add
add
add
lret
push
ss
dec
loopne
push
fnstenv
fidivs
add
xor
sub
add
clc
mov
add
leave
mov
ljmp
clc
ja
scas
inc
clc
ds
push
add
cmp
mov
add
add
push
clc
lahf
fisttps
cmp
xchg
repz
test
clc
mov
mov
filds
add
xchg
jmp
xor
add
mov
mov
clc
jp
pinsrw
add
in
movsl
clc
mov
jnp
pop
ja
add
add
sub
xchg
gs
pusha
add
push
insl
pusha
add
hlt
mov
clc
iret
sbb
add
clc
ljmp
clc
push
popa
add
or
cmc
aaa
test
push
add
add
add
sub
ljmp
add
add
test
daa
clc
fstpl
sahf
data16
das
xbegin
clc
inc
add
lods
sbb
das
insb
mov
add
inc
clc
cmp
add
adc
add
popa
add
insb
js
jle
cmp
pop
fwait
xchg
push
add
adc
add
popa
add
sahf
pop
aad
clc
mov
add
adc
add
into
ja
jge
sahf
xabort
add
adc
add
add
jl
mov
xlat
cmp
add
add
add
ss
arpl
add
add
in
fnsave
test
aas
fwait
adc
pop
roll
jne
add
ss
aaa
in
pop
mov
or
add
lods
scas
dec
ret
jb
add
add
add
and
add
xor
add
loopne
mov
fsubs
add
xabort
lea
clc
aad
int
in
sahf
loopne
out
cmp
clc
out
mov
mov
in
mov
xabort
add
add
add
sbb
and
repnz
mov
pop
insb
inc
add
sbb
gs
inc
add
dec
fs
pop
imul
add
fwait
pop
clc
xbegin
sti
push
movsl
clc
xabort
clc
mov
adc
clc
addr16
push
add
pop
sbb
sub
add
loop
hlt
cltd
dec
lods
ja
pop
insb
inc
add
iret
xor
push
icebp
push
div
gs
pop
mov
inc
clc
mov
adc
add
cmp
clc
cmp
push
clc
int3
push
add
mov
sbb
xchg
notb
mov
dec
stos
and
add
jne
add
ds
roll
lods
jp
dec
hlt
ss
add
pop
clc
push
add
fucomp
cli
or
icebp
sub
aas
xor
add
mov
clc
movsl
clc
imul
push
push
add
int
pop
or
in
outsl
pop
jbe
clc
sbb
jmp
jno
add
lret
ret
hlt
hlt
movsl
clc
mov
or
fs
imul
ret
and
xbegin
stos
add
add
xlat
jp
clc
xchg
add
pop
clc
scas
xchg
clc
cmp
data16
mov
iret
xor
add
clc
dec
push
cs
ljmp
add
inc
clc
cmp
xor
xor
add
push
push
add
inc
clc
loop
aad
xbegin
add
clc
lcall
scas
adc
add
clc
aam
push
ret
clc
cmp
add
mov
pop
test
gs
lea
sahf
mov
clc
outsb
data16
sar
add
dec
sbb
clc
or
outsb
pop
in
add
add
clc
clc
mov
pop
dec
jg
imul
add
cmc
push
xchg
xor
lret
insl
mov
out
xor
add
add
mov
clc
xchg
ds
clc
dec
xchg
aaa
cmp
inc
clc
lods
cld
and
add
sub
clc
lods
pop
cmpsl
clc
jecxz
out
into
add
repnz
pop
jbe
xchg
xchg
lods
in
add
xchg
sub
mov
out
popf
dec
cmp
clc
jnp
xbegin
add
adc
repz
push
sahf
sahf
sbb
clc
jne
push
add
xor
add
xchg
jnp
add
fildll
add
xlat
inc
add
xbegin
dec
iret
leave
sar
and
clc
jo
add
loopne
imul
sbb
clc
addr16
dec
xabort
jmp
add
pop
push
add
inc
add
data16
adc
clc
out
loopne
stos
cmp
add
adc
add
out
xchg
nop
mov
clc
mull
jbe
mov
imul
into
pop
pop
xbegin
add
sbb
jg
clc
xabort
out
xchg
inc
add
insb
nop
ljmp
dec
or
jo
add
mov
add
lret
add
add
xchg
ret
sub
push
cs
icebp
cmp
add
clc
roll
xor
pop
and
add
clc
gs
and
add
or
add
add
fldenv
add
jns
add
dec
gs
loopne
sbb
sti
popf
inc
add
outsl
cwtl
stc
cli
pop
clc
shrl
cmc
adc
add
inc
clc
adc
add
inc
clc
dec
std
dec
push
lods
xor
add
add
add
and
add
push
clc
shll
add
add
add
sub
clc
xor
lods
movsl
clc
fistpll
sub
and
add
add
add
mov
mov
clc
jo
add
add
cmp
xor
dec
jne
add
pop
mov
clc
sbb
gs
rol
clc
and
pop
int
adc
add
push
add
add
add
and
add
inc
clc
stos
xabort
clc
xchg
add
pop
jp
imul
add
add
add
push
in
xchg
aaa
stc
jno
add
add
jo
add
push
add
movsl
clc
idivb
add
mov
or
inc
add
sub
and
add
inc
add
adc
add
lcall
sbb
lock
out
push
add
inc
clc
push
add
cmpsb
clc
cmp
clc
lock
aad
add
mov
clc
stos
iret
fldt
add
es
in
adc
mov
movsb
clc
cmp
xchg
pop
xor
dec
cmp
cmpsb
clc
or
loope
push
clc
mov
clc
mov
and
add
add
mov
ja
in
mov
dec
pop
clc
add
das
add
clc
rolb
test
lea
add
lret
push
ljmp
testb
div
inc
clc
push
add
cmp
sbb
jno
add
add
out
inc
add
mov
iret
mov
insb
dec
stos
inc
clc
cli
repz
add
mov
clc
lret
push
jl
clc
xor
enter
inc
add
xchg
in
push
and
add
add
add
add
jbe
clc
mov
mov
aaa
sbb
fwait
cmp
add
fs
sub
sub
mov
outsl
lret
clc
in
data16
cmp
dec
sub
add
into
cmp
pusha
add
xor
sub
inc
add
jg
clc
pop
clc
cld
dec
jae
add
testb
clc
movsl
clc
pusha
add
inc
add
lret
clc
movsb
clc
movsb
clc
bound
add
add
push
add
std
nop
or
add
mov
and
pop
imull
jno
add
add
sbb
mov
add
add
repnz
mov
mov
clc
enter
push
add
add
insb
push
xor
add
or
add
mov
outsl
sub
inc
clc
sbb
sbb
xor
in
fwait
test
clc
mov
clc
mov
mov
fadd
clc
inc
add
out
jb
add
add
mov
rcrb
add
stc
divb
add
call
stos
mov
xchg
lea
add
cmp
in
mov
clc
out
cmp
outsb
jmp
cmp
add
xor
add
ret
clc
ss
clc
fstp
xchg
clc
inc
add
xchg
cmp
clc
sti
bound
add
clc
pop
xchg
fs
outsb
sahf
ss
int3
inc
add
add
add
add
out
cmpsl
clc
xor
add
add
add
jo
add
jnp
lea
dec
mov
add
clc
ret
clc
and
imul
adc
add
mov
xchg
enter
cmp
pop
push
add
sub
clc
sub
push
add
cltd
cmp
clc
pop
inc
clc
stc
mov
sbb
divb
inc
clc
jecxz
fimull
clc
mov
mull
add
mov
clc
mov
add
add
jmp
mov
sar
fucomp
xchg
in
dec
jne
out
rolb
leave
hlt
mov
shlb
add
clc
mov
add
clc
ds
cmp
fs
jb
add
fucomi
hlt
jns
add
leave
push
sub
clc
rcll
jmp
xor
add
mov
add
push
jnp
mov
jne
add
pushf
or
clc
and
xchg
je
clc
xchg
notb
clc
and
add
pop
data16
inc
clc
sub
mov
clc
call
add
sbb
add
clc
sar
popa
add
lods
sub
xabort
int3
mov
clc
push
sarl
xor
add
dec
push
clc
or
mov
push
add
pop
loope
cli
or
xbegin
stc
insb
ret
clc
mov
add
pusha
add
mov
aad
clc
sbb
clc
inc
clc
in
iret
mov
divl
add
add
mov
push
clc
push
xchg
inc
add
cmp
sub
and
push
bound
add
adc
add
add
pop
and
add
mov
cs
add
add
pop
jg
iret
mov
or
nop
ja
add
hlt
cmp
clc
jge
and
clc
dec
cmp
add
clc
mov
fdivl
add
add
mov
add
ss
clc
jo
add
add
sub
add
pop
inc
clc
push
add
icebp
pop
xlat
aas
sub
mov
add
mov
xchg
int3
cmp
add
adc
mov
iret
adc
add
inc
add
cmc
pop
jnp
clc
xchg
data16
inc
clc
sahf
jge
sbb
lret
sbb
inc
clc
push
add
fsts
gs
fisubs
daa
clc
or
add
testb
leave
push
add
xor
add
inc
clc
xor
add
add
icebp
push
mov
test
sar
pop
xor
push
clc
stos
dec
ds
rcr
and
add
add
adc
add
mov
pop
adc
add
dec
test
xor
add
clc
mov
clc
push
add
mov
clc
push
add
cmp
pop
push
call
clc
cmp
add
mov
push
clc
jnp
clc
out
lret
popa
add
jge
add
cltd
idivl
shrl
inc
add
scas
mov
xchg
jne
loope
in
xor
add
daa
clc
enter
jg
clc
sbb
fst
and
add
add
add
clc
add
add
in
iret
addr16
sti
add
add
add
add
jg
adc
add
ret
mov
add
lea
clc
xchg
xor
add
sahf
jo
add
jmp
dec
and
arpl
add
add
clc
sbb
ret
lahf
pop
cli
lods
not
mov
clc
mov
add
mov
jne
add
outsl
push
std
xlat
pushf
sar
pop
mov
xchg
add
clc
pop
inc
clc
sar
xchg
adc
add
clc
jge
mov
inc
add
or
mov
xor
sbb
add
or
clc
ss
clc
or
adc
pop
clc
inc
add
seta
clc
mov
mov
clc
cmpsl
clc
iret
sbb
pop
add
add
add
insb
jnp
clc
xchg
data16
fnsetpm(287
clc
imul
add
add
push
mov
stos
mov
pop
inc
add
lcall
stos
stos
ja
mov
or
add
jge
clc
push
shrl
sar
xor
pop
xchg
jbe
pop
ljmp
clc
inc
clc
mov
sbb
mov
or
das
cmpsl
clc
cmpsl
clc
das
negb
xor
add
clc
cmp
in
clc
inc
clc
std
mov
push
sub
ds
add
add
add
add
pop
adc
add
inc
clc
mov
jg
clc
sbb
pushf
cmp
jle
movsb
clc
sar
hlt
mov
ret
bound
add
ret
clc
es
fcmovu
sub
mov
push
add
inc
add
dec
xabort
and
add
test
sbb
cltd
enter
out
mov
clc
or
clc
fiadds
lock
add
mov
test
cmp
cmp
rcrl
dec
add
add
clc
scas
imul
clc
aad
pop
outsb
repz
add
mov
add
pop
xchg
or
add
dec
sti
insl
mov
movsl
clc
rclb
add
in
dec
cmp
mov
sub
add
clc
sbb
loopne
cmc
ljmp
add
test
sbb
lods
cmp
mov
xchg
mov
ljmp
scas
jge
sahf
nop
inc
add
fnstsw
clc
js
dec
dec
jl
clc
xchg
pop
gs
jns
clc
ret
add
bound
add
pop
jns
js
mov
cld
pop
loop
bound
add
insb
stc
jnp
outsb
adc
mov
aam
lret
and
add
clc
bound
add
jg
in
pop
mov
or
clc
cmp
jmp
cmpsb
clc
xchg
rcrl
mov
add
push
add
push
add
inc
add
out
dec
sbb
clc
popl
add
jb
add
inc
clc
add
adc
fadds
dec
fmuls
jns
add
and
add
push
add
nop
fdivrs
sar
clc
bound
add
add
add
fucomi
sub
add
mov
clc
push
mov
add
mov
ljmp
cld
nop
adc
add
test
fldt
data16
ljmp
cmp
movsb
clc
inc
add
xchg
mov
das
add
add
iret
mov
clc
fs
dec
xchg
aaa
jnp
into
in
push
int
daa
clc
scas
loopne
pop
dec
shlb
cwtl
pop
xchg
ret
clc
or
dec
mov
stos
addr16
add
leave
jbe
dec
or
clc
pop
ret
inc
clc
jl
and
add
dec
js
ss
clc
loope
imul
add
add
inc
clc
vorps
cmpsl
clc
lret
mov
in
movsl
clc
sar
dec
dec
rorl
inc
add
mov
jo
add
clc
pop
push
iret
and
add
clc
add
add
clc
outsb
icebp
pop
clc
test
into
pop
pop
cld
xchg
adc
add
xor
clc
sub
add
push
clc
out
xlat
push
add
add
add
clc
movsl
clc
out
jnp
add
add
add
fsubl
add
add
sub
adc
clc
push
iret
lods
xchg
push
ficoml
add
adc
add
and
add
aas
lret
add
test
mov
add
call
add
fscale
lea
push
addr16
xor
clc
jmp
jl
cmp
mov
or
sar
xchg
fs
cmp
clc
cmpsl
clc
sar
jnp
clc
popa
add
addr16
or
mov
jmp
xor
mov
clc
aad
out
xor
testl
in
iret
mov
sti
sub
movsb
clc
jl
push
enter
sbb
enter
push
cli
add
cmp
add
xchg
and
add
add
notl
clc
push
push
mov
add
fimull
sub
jle
or
fld
clc
loopne
leave
pusha
add
xor
mov
pop
pop
clc
pop
add
mov
clc
loop
es
and
clc
test
cli
xchg
sbb
test
clc
stos
inc
add
leave
xor
clc
pop
sbb
ficompl
pop
es
fs
push
clc
mov
mov
jnp
clc
or
lea
clc
imul
jne
sub
add
jbe
clc
sub
dec
stos
or
xchg
push
add
and
xor
add
mov
clc
add
movsb
clc
call
xchg
jbe
sub
xlat
inc
clc
test
popa
add
fsubrl
cmp
clc
cmp
int3
test
bound
add
pop
mov
or
jle
gs
inc
add
mov
pushf
xchg
inc
clc
xor
add
sbb
clc
jae
add
add
sub
pop
push
pop
push
outsl
int3
js
fnsave
xabort
add
ror
mov
jge
jmp
cmp
sbb
cmp
clc
xchg
mov
inc
add
std
pop
xchg
add
add
sbb
jle
add
sub
xchg
jg
and
add
sahf
add
add
jg
pop
cmc
cmp
add
adc
cmp
sbb
cmp
fcom
xchg
push
add
xchg
mov
clc
xlat
into
or
push
add
cmp
xchg
lahf
add
clc
outsl
dec
test
js
clc
push
add
cmp
add
cmp
push
add
pop
mov
nop
inc
clc
data16
add
add
cmpsb
clc
and
add
sahf
sbb
dec
dec
cs
add
add
ret
clc
mov
sbb
mov
clc
cmp
add
clc
nop
xor
data16
fstp
push
clc
lret
daa
clc
ret
call
sti
addr16
jmp
stos
add
xabort
int
mov
sub
rcll
nop
gs
sarl
mov
pop
xchg
sub
cld
in
jl
jns
sub
clc
in
popa
add
pop
lock
mov
mov
and
add
out
rcrb
cmc
cwtl
jns
and
add
clc
inc
add
cmp
sub
add
jnp
jmp
clc
push
add
push
dec
dec
sar
pop
clc
es
out
sub
add
add
ret
clc
lahf
ror
cmpsl
clc
xchg
cmp
pusha
add
mov
jno
add
data16
push
cli
mov
pop
push
add
mov
xor
add
add
fdivrl
out
add
add
add
adc
add
idivl
add
test
dec
dec
inc
add
flds
clc
out
pushf
and
add
dec
and
rcrb
clc
lods
out
insb
aam
mov
add
cmp
clc
in
out
and
add
clc
push
test
cmp
add
lahf
fincstp
pop
jp
js
add
inc
add
imul
sub
add
lods
popa
add
movsb
clc
cwtl
pop
jge
add
icebp
jnp
lods
jb
add
xchg
dec
mov
rcll
cld
sub
pop
jbe
sbb
pop
jmp
clc
rolb
add
loopne
sub
sar
es
nop
push
pop
out
bound
add
clc
cltd
inc
add
add
add
or
scas
push
adc
add
add
pop
clc
aad
clc
stos
shl
push
pop
dec
arpl
add
clc
mov
cmp
add
ja
push
test
cmc
jle
add
clc
dec
lret
clc
cmpsl
clc
cmp
inc
add
test
add
pop
and
add
add
fstps
mov
add
dec
add
jo
add
insl
fnsave
add
out
test
add
in
and
add
fiaddl
add
cmp
xlat
mov
add
fwait
jg
fdivrs
out
push
add
scas
fwait
data16
fistpl
clc
xor
add
clc
adc
add
clc
push
mov
clc
push
xor
add
movsl
clc
mov
imul
out
sub
add
cmp
cli
ret
clc
jns
mov
sbb
mov
xchg
xor
add
mov
mov
out
adc
add
cld
xchg
pusha
add
loop
mov
mov
cld
fsubrp
sbb
shl
dec
in
sub
mov
jae
add
popf
push
jmp
ljmp
in
test
cmp
lods
cmp
sbb
clc
pop
cmc
loope
push
xchg
or
add
mov
mov
imul
push
addr16
ficoms
add
sub
clc
sub
test
pop
mov
lret
jb
add
test
popf
out
lret
dec
std
push
xchg
cmp
adc
add
clc
test
jnp
mov
jle
cmp
cmp
add
rcrl
adc
add
adc
add
dec
adc
add
clc
out
lea
pop
scas
push
add
cmp
cmp
cmpsl
clc
sarb
es
scas
fst
and
add
add
jmp
clc
mov
push
push
clc
cmp
push
xor
add
add
mov
cmp
popa
add
es
incb
add
mov
clc
loopne
xchg
push
pop
shlb
clc
add
jp
lcall
add
test
rcrl
clc
cmp
dec
push
sti
rorb
sub
add
icebp
cmp
ds
sarl
clc
inc
add
ja
clc
out
loopne
mov
mov
clc
lcall
jnp
ss
lea
clc
adc
add
in
adc
add
clc
and
add
shrl
fs
lcall
or
add
cmp
clc
bound
add
add
clc
lods
fst
test
xchg
aad
inc
add
nop
pop
vzeroupper
test
add
clc
mov
push
or
insl
mov
clc
mov
fs
std
cmp
add
push
clc
ret
clc
xchg
pop
clc
hlt
xor
add
add
ja
add
push
add
inc
add
jmp
clc
jp
clc
pop
icebp
in
fisttpl
mov
sub
stos
pop
or
clc
xor
add
jg
cmp
clc
xchg
jp
in
mov
push
mov
adc
add
inc
add
push
add
or
gs
testb
add
push
add
jmp
xor
add
push
add
js
pop
xlat
xchg
adc
add
jecxz
inc
add
inc
add
ss
fcomps
lret
rcl
mov
dec
shl
clc
iret
dec
stos
inc
clc
mov
and
add
in
mov
cmp
clc
insl
or
clc
fs
xchg
dec
dec
xlat
shll
add
dec
mov
add
cli
jg
and
add
sbb
add
jle
aad
clc
mov
mov
add
mov
test
pop
lock
cmp
add
pop
cmp
add
test
mov
jle
clc
mov
add
ret
clc
loope
or
call
xor
add
test
add
imul
dec
ret
clc
push
adc
mov
add
movsl
clc
dec
pop
add
add
clc
sbb
icebp
jno
add
jno
add
dec
cmpsb
clc
aam
aaa
sar
xor
add
clc
cmp
js
clc
jnp
inc
add
xlat
fistl
jl
mov
xchg
stos
scas
mov
mov
repz
xor
add
fldenv
xor
add
in
outsb
add
xchg
or
add
jecxz
dec
fs
cmpsb
clc
push
cli
scas
lret
xabort
clc
xchg
repz
sbb
push
add
popf
cmp
cwtl
push
mov
cwtl
fldenv
mov
ljmp
insb
xchg
push
add
setno
push
dec
lods
sub
add
add
ret
clc
mov
in
clc
sub
int
gs
cwtl
mov
test
or
scas
rcll
imul
aaa
sar
sub
push
add
and
mov
js
mov
jns
xchg
sub
mov
mov
fiaddl
jo
add
mov
into
stc
in
outsl
jno
add
add
cwtl
push
add
test
je
sub
dec
ret
imul
add
push
mov
pop
out
pop
or
adc
xor
add
clc
pop
repz
repz
add
xlat
nop
jb
add
clc
pop
sbb
pop
pop
pop
or
imul
add
clc
jge
clc
mov
add
test
std
mov
dec
bound
add
or
xor
add
add
sub
add
aaa
faddl
sbb
clc
stc
dec
outsb
or
add
addr16
jle
fistpl
push
cmp
push
clc
sub
add
cmp
clc
mov
and
add
or
ljmp
pusha
add
out
cmp
movzwl
add
xchg
adc
in
inc
clc
dec
dec
cmp
mov
or
lock
clc
nop
sbb
add
fcom
sbb
clc
mov
add
add
frstor
add
cmp
jle
out
aad
adc
add
clc
cwtl
loopne
inc
clc
lods
jp
out
adc
call
add
gs
xchg
lahf
sti
mov
add
sub
add
add
sub
adc
add
add
or
push
add
clc
pop
clc
mulb
clc
fsub
clc
arpl
add
add
cmp
shll
add
dec
adc
add
clc
sub
add
dec
outsb
mov
mov
sar
add
xbegin
add
add
sar
cmc
cld
bound
add
clc
mov
add
shl
test
clc
scas
int
add
test
sahf
and
add
test
or
std
data16
and
add
add
jge
add
sbb
jge
xchg
mov
add
loop
add
add
and
pop
sub
cmp
lret
inc
clc
aad
add
sub
and
add
fwait
ja
add
or
sar
clc
mov
add
add
clc
das
cli
push
clc
movsl
clc
loopne
xchg
sub
movsl
clc
mov
test
mov
inc
add
ret
clc
inc
add
add
add
mov
fnstsw
push
cmp
push
jl
int
mov
clc
mov
clc
or
cltd
dec
jo
add
add
cs
fstpl
clc
push
hlt
cmp
lret
add
jge
add
cmp
clc
in
mov
add
jg
mov
add
mov
cmp
arpl
add
push
add
xor
add
mov
cld
jbe
add
pop
cmp
mov
cwtl
shlb
data16
push
add
pop
xor
rcl
in
in
loop
mov
clc
jmp
add
sub
xor
add
add
mov
clc
out
fistps
add
add
add
js
dec
xor
mov
add
add
cld
xor
add
pop
pop
dec
and
add
add
mov
test
pop
imul
push
jns
clc
cli
pop
ret
clc
jl
add
add
add
enter
stos
popf
js
jb
add
clc
fsubl
imul
stos
add
add
addr16
xchg
sbb
sbb
xor
add
popf
pop
repz
out
cmpsl
clc
adc
add
xor
clc
cld
es
mov
mov
add
or
add
add
scas
out
fsubrs
cmpsl
clc
stos
loopne
lret
clc
push
xbegin
add
add
push
add
repz
clc
add
add
aas
repnz
sbb
mov
push
sbb
mov
sbb
sar
mov
clc
arpl
add
or
add
mov
ljmp
clc
sub
add
jle
dec
add
add
shll
jg
clc
adc
add
sub
and
fidivrl
mov
lcall
add
dec
das
ret
dec
inc
add
shrb
sar
jecxz
imulb
fs
jg
mov
fcmove
addr16
dec
out
or
filds
fnstenv
clc
cmp
add
pop
ret
clc
sar
ret
clc
mov
jg
clc
out
xchg
adc
add
mov
add
mov
clc
cmp
jns
stos
incl
clc
loopne
pop
adc
add
add
add
dec
push
pop
xor
add
cmp
in
jno
add
xchg
sub
mov
add
lret
scas
call
sbb
xor
add
xchg
movsl
clc
pop
clc
jno
add
adc
add
add
push
fimuls
clc
jae
add
add
arpl
add
stc
icebp
adc
add
and
cwtl
aad
jge
dec
or
popa
add
sbb
out
in
sbb
mov
adc
add
add
xor
add
adc
add
cli
js
dec
mov
add
sub
movsb
clc
dec
ret
clc
sti
sub
push
dec
and
add
add
xbegin
add
jmp
clc
addr16
or
dec
adc
add
clc
arpl
add
jo
add
clc
inc
add
ljmp
add
int3
mov
popa
add
jno
add
lret
enter
in
gs
inc
add
clc
enter
clc
sbb
clc
sub
add
adc
add
add
icebp
leave
and
popa
add
inc
add
mov
clc
jno
add
jg
clc
imul
sar
sbb
jo
add
ffreep
clc
mov
add
add
or
clc
cmp
xabort
add
add
and
jne
clc
das
or
add
inc
add
xchg
jo
add
add
lret
sbb
sbb
add
clc
enter
js
clc
add
enter
xchg
add
add
jp
pop
leave
pop
pop
movsb
clc
lahf
sub
xchg
lret
mov
clc
mov
xchg
pop
dec
xor
add
dec
mov
idivl
sub
rorl
jno
add
mov
xabort
mov
jno
add
xchg
sti
loope
test
popf
in
mov
adc
add
sbb
ds
sub
clc
fs
out
daa
clc
adc
add
add
add
cmp
rol
clc
mov
dec
add
add
cmp
add
clc
adc
add
cmp
mov
add
syscall
clc
sahf
dec
jo
add
pop
pop
sub
hlt
test
mov
lea
add
ljmp
imull
add
aaa
hlt
adc
add
push
jbe
popa
add
shl
clc
nop
adc
add
add
clc
and
out
lret
add
loop
adc
add
and
add
lea
add
add
add
add
das
jbe
xchg
mov
mov
add
jle
dec
in
sarb
daa
clc
push
clc
cmp
movsb
clc
cwtl
inc
add
and
add
sub
repnz
add
mov
or
push
loope
test
or
mov
mov
clc
shrl
test
add
dec
aas
xchg
test
scas
lock
imul
clc
xchg
dec
fists
sub
mov
mov
add
jmp
in
ss
xor
add
aas
inc
clc
cmp
inc
clc
mov
sti
or
push
mov
clc
int3
cltd
jecxz
inc
clc
clc
jo
add
add
fstps
fldenv
push
cmp
fmul
add
add
clc
dec
fwait
mov
add
cmp
add
add
clc
xor
add
enter
push
ja
dec
lods
cwtl
fisttpll
jns
fnsave
rcrb
xchg
cmp
add
jmp
add
sbb
mov
pop
mov
or
push
clc
outsb
fcoml
add
icebp
shlb
std
sub
add
add
clc
dec
es
add
push
add
fmul
jne
jge
fcomps
pop
xor
add
inc
add
mov
lret
ja
mov
clc
sub
imul
test
out
std
sbb
xchg
inc
clc
inc
add
push
sti
cli
xchg
or
push
negl
xor
add
add
pop
adc
add
add
jge
clc
push
add
mov
lcall
daa
clc
cmpsl
clc
jno
add
mov
pop
sbb
push
add
inc
clc
dec
pop
iret
push
add
push
lods
pushf
inc
add
xchg
sbb
fst
jbe
clc
add
add
xchg
in
lock
sub
add
bound
add
jns
cmpsl
clc
adc
add
add
xchg
daa
clc
jo
add
dec
xchg
outsl
or
lret
dec
xchg
mov
jne
xchg
pop
mov
test
xchg
or
pop
je
adc
add
clc
inc
clc
jle
clc
jmp
jnp
push
add
xlat
test
aaa
mov
fimull
add
xor
add
clc
test
lret
stc
stos
ja
shlb
add
into
mov
xchg
jecxz
in
adc
add
cmp
and
add
add
jno
add
add
call
xor
add
int
xchg
mov
add
mov
clc
fcmovu
insl
mov
mov
sub
fnsave
cmova
jecxz
fnstsw
add
ss
clc
bound
add
jno
add
addr16
cmp
push
jmp
jmp
addr16
mulb
aam
mov
pop
outsl
lret
call
add
push
add
add
push
add
dec
add
add
inc
add
mov
xor
add
jns
add
divb
and
add
cmp
movsl
clc
sbb
sbb
sbb
nop
sub
add
pop
pop
dec
addr16
pop
jg
insl
mov
add
pop
or
add
clc
call
std
movsb
clc
push
add
jg
add
jle
pushf
mov
inc
clc
clc
aam
clc
lods
and
add
fmuls
dec
sub
clc
mov
push
add
test
lcall
loope
jae
add
pop
push
or
pop
inc
add
xchg
int
push
test
jo
add
cs
xlat
fldcw
mov
add
mov
repnz
gs
movsb
clc
pop
xchg
sti
inc
clc
insb
es
fs
ss
sar
cltd
xlat
lea
daa
clc
mov
cmp
aaa
enter
mov
add
fiadds
fwait
push
add
in
cld
es
leave
mov
clc
pop
lods
mov
xor
add
add
pop
loop
cmpsb
clc
mov
xbegin
inc
add
dec
sub
pop
mov
adc
add
push
add
enter
in
addr16
loope
iret
in
adc
add
popa
add
adc
add
add
clc
xchg
dec
nop
mov
add
add
clc
addr16
mov
add
mov
dec
fstpt
add
cmp
sti
add
add
pop
and
add
cmp
add
or
push
fbld
clc
jl
test
mov
es
add
add
add
adc
add
clc
push
clc
or
add
add
ja
clc
xchg
es
aad
add
mov
clc
jno
add
xchg
mov
clc
dec
sbb
cld
pop
mov
dec
adc
add
gs
rcll
lods
movsl
clc
cmp
jnp
xchg
cmp
js
test
clc
mov
adc
add
clc
xchg
movsb
clc
imul
inc
add
push
pusha
add
cmp
add
dec
imul
inc
add
sub
clc
outsb
popf
lret
clc
das
and
add
clc
insl
fs
fdivp
shll
add
aam
clc
sbb
cli
aam
int
pop
test
mov
inc
add
xchg
push
out
ja
clc
mov
add
push
add
xchg
cmp
mov
clc
pop
clc
or
add
lret
je
clc
shrb
clc
or
lret
sar
mov
lcall
pop
nop
sub
fisubs
clc
js
cmpsl
clc
in
ret
clc
fstpl
adc
add
aaa
mov
clc
cmp
inc
clc
scas
push
add
jne
leave
test
pop
sbb
clc
cmpsb
clc
adc
add
clc
cli
stc
xchg
stc
loope
mov
or
pop
mov
ds
add
mov
add
mov
mov
out
jp
cld
add
add
data16
imul
dec
cwtl
xchg
jno
add
add
clc
xor
in
mov
stos
out
cmp
lret
inc
clc
xor
xor
add
add
ret
clc
loop
pop
daa
clc
int3
inc
clc
push
lret
repz
add
sti
sbb
lcall
clc
push
test
pop
mov
cmp
data16
mov
jnp
push
add
xchg
pop
aad
inc
clc
fs
aad
add
cmpsl
clc
inc
clc
adc
add
mov
cmp
aad
xchg
imul
adc
cmp
addr16
xchg
adc
add
add
add
push
sub
inc
add
mov
add
pusha
add
push
clc
cwtl
cmp
add
fmul
call
add
scas
pop
mov
xchg
jge
jmp
jl
pop
inc
add
pop
iret
dec
mov
add
xor
rcr
in
pop
push
add
movsl
clc
sub
sbb
sar
dec
clc
lcall
jle
add
jge
dec
je
xor
loopne
xchg
add
add
add
pop
push
clc
movsl
clc
call
add
cwtl
testb
mov
imul
sub
mov
add
dec
jmp
clc
clc
cmp
imul
cmp
xor
into
cmp
clc
pop
call
ficoms
clc
test
fcompl
add
add
push
lea
addr16
dec
dec
in
and
add
int3
dec
push
cmp
cmp
clc
jnp
in
stc
in
fnstcw
test
adc
add
or
dec
loop
stos
push
movsb
clc
lods
mov
clc
mov
xchg
and
jae
add
push
add
jmp
call
add
add
xchg
stos
rol
clc
sbb
add
gs
push
jbe
clc
xchg
dec
scas
into
bound
add
mov
add
pop
das
mov
adc
add
mov
loope
xchg
js
stc
insb
mov
int
inc
add
mov
adc
pop
lods
xor
hlt
out
mov
xor
add
fiaddl
rclb
add
dec
gs
xchg
int3
cmp
jl
xchg
pop
movsb
clc
sbb
mov
lret
imul
cmpsb
clc
sbb
cwtl
in
lret
aas
enter
jo
add
clc
push
cmp
jmp
jns
xor
add
add
stc
lret
paddq
cmp
pop
data16
adc
add
sub
fucom
clc
mov
out
pop
mov
add
test
data16
mov
lahf
sub
or
xchg
jl
push
xchg
mov
push
add
ljmp
add
iret
cmp
add
adc
ficompl
out
cmp
push
cmp
and
add
mov
fwait
push
add
stos
xchg
pop
xabort
adc
add
clc
mov
cmp
xor
add
mov
xchg
cmp
xor
add
add
test
add
clc
pop
jnp
add
mov
sbb
add
test
add
xchg
xchg
or
clc
jae
add
pop
jecxz
xor
add
sbb
jbe
cmpsb
clc
cmp
push
add
leave
out
int3
mov
add
js
jle
clc
mov
inc
add
push
cmp
push
sub
jge
fscale
hlt
fmull
outsb
sbb
clc
cmc
xchg
or
xchg
fdivs
jne
add
dec
and
rolb
clc
jp
inc
clc
aad
clc
mov
clc
cmp
xor
clc
loop
mov
pop
or
mov
popf
in
aam
add
in
cld
iret
jle
dec
xchg
cmp
clc
pop
or
inc
clc
jns
clc
adc
sub
mov
mov
cmp
pop
clc
inc
clc
jno
add
mov
push
addr16
arpl
add
push
aas
stos
ret
clc
inc
clc
push
aad
jne,pt
mov
add
jp
clc
dec
aaa
mov
stos
xor
mov
sub
clc
mov
mov
mov
aas
arpl
add
push
mov
jne
add
mov
clc
xchg
mov
xlat
bound
add
add
add
mov
sub
xchg
dec
sub
push
outsl
sbb
imul
daa
clc
adc
add
loope
inc
add
mov
clc
data16
outsb
cmp
sbb
movsl
clc
pop
clc
sar
into
mov
inc
clc
mov
add
mov
cwtl
in
mov
lea
dec
nop
movsb
clc
hlt
addr16
xor
add
fisttpll
cmp
arpl
add
movsb
clc
nop
stos
jge
lock
add
sub
push
add
iret
pop
add
add
test
inc
clc
sub
repnz
sbb
sbb
inc
clc
dec
inc
clc
inc
clc
out
and
add
sub
add
and
add
aaa
mov
add
add
add
pop
pop
ret
clc
sub
pop
xor
add
imul
pusha
add
jle
jg
push
add
es
cwtl
fnstsw
pop
mov
clc
jns
clc
pop
mov
cs
clc
jp
jb
add
test
pop
jae
add
lcall
mov
ret
clc
cmp
add
aam
clc
inc
clc
outsl
es
ret
add
out
loope
fmull
or
add
clc
inc
clc
push
add
dec
jno
add
add
ret
insb
or
mov
insb
jg
pop
loope
xchg
jb
add
pushl
out
inc
add
inc
clc
repz
clc
loop
sahf
fsubr
stos
jb
add
clc
roll
jae
add
cmpsb
clc
inc
clc
out
dec
inc
add
jg
ss
pop
clc
int
mov
sub
aas
pop
lods
loope
jle
aam
jp
add
outsb
push
test
std
sbb
int3
or
pop
rclb
jns
jg
mov
add
in
adc
add
mov
mov
inc
clc
je
inc
add
add
add
hlt
scas
sub
cmp
jmp
sbb
mov
jp
push
clc
push
xchg
pop
add
add
add
or
aad
add
pop
or
jno
add
jnp
adc
add
push
add
fs
fdivs
add
lahf
pop
sar
clc
insl
or
clc
add
add
popf
jo
add
stc
fwait
btc
add
cmp
sbb
add
pushf
and
add
inc
clc
data16
in
mov
shrl
rclb
lods
aad
pushf
jg
clc
icebp
xchg
sbb
clc
iret
repnz
inc
clc
aad
lods
mov
mov
popf
jge
cmp
clc
inc
add
jg
sahf
call
loopne
xchg
and
or
xchg
mov
add
cmp
mov
flds
add
sar
add
inc
add
outsb
test
sahf
push
add
popf
xbegin
add
mov
pop
push
add
jb
add
insl
hlt
mov
cld
outsb
mov
mov
add
dec
jbe
or
clc
add
add
clc
xchg
int3
scas
pusha
add
repnz
lahf
stc
shll
add
xchg
ret
clc
sub
iret
jge
add
fcoml
test
mov
push
inc
add
cmpsl
clc
movsb
clc
push
add
pop
cmp
xchg
arpl
add
pusha
add
jp
ret
clc
add
lods
std
sbb
ja
clc
and
add
sub
ljmp
add
add
add
pusha
add
adc
add
cmp
add
fnstcw
jg
jle
out
addr16
aam
mov
dec
adc
clc
xchg
pop
cmp
movsb
clc
ljmp
and
leave
data16
adc
add
adc
xchg
add
xor
mov
add
sub
clc
jnp
cmp
sahf
and
add
inc
clc
sbb
out
sbb
sbb
add
sar
inc
clc
arpl
add
clc
mov
mov
add
fs
dec
cmpsl
clc
out
inc
clc
and
add
clc
pushf
test
gs
add
add
add
add
sub
xchg
pop
clc
gs
mov
lret
pop
dec
or
pop
or
inc
add
call
add
push
add
in
cmp
data16
add
cmp
loope
fwait
push
xor
jmp
add
xchg
push
add
sub
iret
fadd
clc
lcall
int3
xchg
push
add
xchg
iret
mov
ljmp
add
add
add
clc
jmp
clc
cmp
xor
lods
cmpsl
clc
adc
add
clc
outsb
push
push
add
mov
cmp
xchg
divb
clc
or
fs
push
inc
add
fisubl
add
out
loop
inc
clc
adc
add
add
jmp
dec
mov
scas
sub
add
jne
cmp
clc
inc
clc
lods
push
add
dec
pminsw
add
popa
add
icebp
adc
pop
jns
inc
add
mov
add
add
mov
clc
xor
insb
push
xor
add
sbb
xchg
in
stos
aas
cltd
jae
add
pop
mov
xchg
repz
cwtl
lods
mov
clc
jg
iret
cld
dec
fsubrs
fwait
xabort
popa
add
mov
je
push
clc
mov
push
lcall
add
mull
add
xor
add
add
lods
data16
test
add
stos
iret
xchg
xchg
jo
add
xor
add
inc
clc
ret
clc
push
dec
std
push
pop
cs
ret
clc
int
dec
mov
clc
cmp
aaa
fstpt
jg
jle
popf
jns
xchg
das
mov
iret
mov
cli
movsb
clc
loop
mov
or
pop
cs
addr16
dec
stos
test
jmp
cmp
div
lock
decl
mov
xor
add
add
clc
fdivp
push
xor
push
add
movsb
clc
fisubs
test
es
cmp
add
cmp
dec
xchg
iret
aas
inc
clc
icebp
jae
add
clc
pop
gs
xor
add
clc
unpcklps
mov
std
pop
adc
or
clc
sub
clc
lret
jl
clc
xchg
adc
mov
cmpsb
clc
dec
mov
push
add
pusha
add
or
clc
mov
mov
clc
xor
add
mov
add
mov
xchg
enter
add
add
add
mov
add
add
gs
shlb
xor
add
enter
and
add
mov
aaa
lret
add
mov
xchg
cmp
inc
add
lea
xchg
inc
add
clc
xor
add
add
movsl
clc
add
add
clc
fldenv
add
mov
push
add
push
clc
xchg
div
mov
add
mov
add
add
bswap
out
or
sbb
cmp
clc
sar
jge
xor
add
push
stos
add
add
add
xabort
clc
pop
lea
inc
add
ja
cmp
inc
add
in
cmp
xor
jmp
or
mov
add
clc
mov
push
adc
add
add
inc
add
mov
clc
xor
add
mov
add
and
add
fst
test
mulb
add
add
pop
cmp
clc
fwait
repnz
mov
testb
out
mov
add
mov
es
jnp
test
cwtl
xchg
add
dec
dec
push
fcoms
add
clc
push
add
sbb
add
mov
jno
push
cwtl
gs
repnz
xchg
mov
jge
add
dec
clc
ret
clc
mov
jnp
cmp
or
in
fst
rcl
sub
clc
psllq
add
add
loop
jmp
pop
sbb
jg
sar
test
mov
add
sbb
jbe
add
add
add
adc
inc
add
ficomps
clc
aam
clc
pop
and
add
add
aam
adc
add
add
add
testb
add
cs
scas
imul
sbb
clc
mov
negb
clc
inc
add
repnz
mov
repnz
dec
cmc
cmp
add
clc
pop
add
add
ds
mull
add
add
cltd
cmp
jle
clc
mov
jo
add
or
clc
fnstsw
incl
clc
inc
add
popf
fiadds
sbb
clc
xor
add
mov
mov
mov
mov
add
sbb
add
inc
add
mov
clc
dec
push
add
outsl
out
test
clc
in
sub
push
fnsave
add
sbb
add
pop
cmp
cwtl
pop
fs
mov
add
pop
clc
mov
mov
aam
clc
addr16
aaa
sti
mov
or
sbb
das
adc
ror
addr16
jl
repz
mov
add
and
fcompl
es
aam
shl
ds
xor
add
clc
xor
leave
adc
add
clc
into
jne
adc
add
pop
add
jmp
clc
sbb
push
clc
mov
out
jp
add
push
jl
in
dec
adc
add
push
data16
cmp
lahf
cmp
add
cmp
jns
int
and
add
jl
mov
push
jg
clc
mov
lret
add
js
cwtl
sub
clc
outsb
push
add
imul
xchg
imul
outsl
jg
outsb
lcall
in
cmp
mov
pop
sub
outsl
xabort
clc
sbb
cmp
push
add
clc
movsb
clc
sar
jg
adc
in
cmpsl
clc
out
inc
add
and
add
adc
add
fisubrs
sbb
mov
clc
mov
cs
push
xor
add
mov
add
fwait
sbb
clc
out
sbb
out
xor
add
or
add
cmp
mov
jg
clc
xor
add
movsl
clc
inc
add
in
mov
out
lret
enter
clc
pop
sub
add
clc
scas
outsl
mov
cmc
add
add
sbb
decb
add
add
jno
add
add
add
sbb
jbe
clc
xchg
pusha
add
fstl
inc
add
lret
std
incb
add
sub
xchg
bound
add
add
jbe
lods
xchg
jp
push
add
adc
add
popa
add
add
add
clc
cmp
add
adc
add
add
sub
sub
mov
pop
cmp
add
cwtl
stos
and
js
clc
push
push
add
sub
and
in
xchg
mov
jb
add
add
or
sub
push
loop
popf
jo
add
add
cs
jmp
push
add
pop
mov
add
sbb
aas
std
add
add
clc
xchg
cmp
mov
mov
add
movsl
clc
jecxz
cmpsb
clc
mov
jge
clc
cwtl
mov
sbb
cmp
add
jg
clc
pusha
add
mov
sub
clc
clc
pop
clc
dec
mov
inc
add
dec
xor
clc
dec
jge
mov
sbb
xchg
xchg
mov
int
clc
fstps
xor
add
cmp
mov
add
mov
clc
bound
add
add
add
add
add
jbe
clc
sub
mov
jl
sbb
push
add
mov
jb
add
enter
inc
clc
dec
cwtl
pusha
add
movsb
clc
push
loopne
sar
cmp
clc
cmp
pop
icebp
jo
add
xchg
aad
loope
push
add
mov
dec
hlt
jg
clc
push
adc
rcrl
pop
cmp
dec
cmp
add
out
adc
push
addr16
mov
and
dec
cmp
pop
stos
dec
jo
add
add
add
repnz
jb
add
and
shrl
insl
mov
arpl
add
xor
push
clc
sbb
mov
mov
clc
std
dec
mov
cli
dec
clc
or
jp
adc
add
mov
ret
clc
test
xabort
dec
shlb
add
pop
mov
dec
je
clc
mov
add
in
sahf
mov
add
pop
lea
aad
clc
gs
fnstenv
xchg
lahf
jae
add
add
xchg
cs
test
add
add
add
dec
fildll
xlat
mov
inc
add
call
cmpsl
clc
push
mov
clc
cltd
test
or
movsb
clc
pushl
shlb
and
add
add
and
add
sub
adc
push
in
jns
add
sbb
or
xor
add
clc
das
dec
sti
loop
cmp
jge
clc
jg
dec
loop
out
xor
and
repz
add
xor
insb
xabort
jmp
add
sbb
clc
or
add
mov
sub
add
or
cmp
add
cmp
adc
clc
int
es
add
insb
into
mov
clc
or
pop
clc
mov
xchg
mov
clc
inc
add
test
jmp
add
lea
add
lea
mov
ret
clc
and
add
clc
cmc
add
clc
ljmp
add
mov
pop
hlt
jno
add
pop
clc
lea
clc
push
xchg
xchg
jg
mov
push
loopne
mov
clc
je
add
pop
idivb
pop
jl
add
inc
add
inc
clc
or
add
clc
js
push
test
clc
inc
clc
adc
xchg
push
sub
clc
mov
add
arpl
add
aaa
cwtl
cmp
clc
insl
xchg
fidivrl
jmp
add
mov
ljmp
add
in
int3
int
adc
add
mov
sbb
mov
xor
add
clc
je
add
inc
add
cmp
add
xbegin
stos
ljmp
stos
imul
inc
add
cs
dec
adc
ljmp
jns
clc
aad
pop
ret
stc
out
cmp
add
popl
clc
shll
clc
mov
or
cmc
xchg
movsb
clc
repnz
int3
xchg
fists
add
out
mov
mov
add
decb
cltd
push
add
xabort
push
add
and
add
cli
mov
arpl
add
fstl
mov
ret
clc
nop
push
clc
xchg
xchg
push
ficompl
outsl
lret
inc
add
jg
push
add
dec
fidivs
add
fcmovnbe
int
clc
add
xabort
push
push
add
lea
add
cmp
aad
into
pop
xor
add
dec
jns
imul
sar
jecxz
cmp
out
mov
push
add
push
add
aaa
push
add
mov
lock
lcall
jmp
jne
clc
popf
mov
push
mov
jae
add
add
decb
clc
dec
decl
and
add
push
out
jge
pop
pusha
add
call
clc
out
jno
add
pushf
xor
add
add
lret
stc
pop
add
xchg
dec
pop
adc
add
xchg
popa
add
int3
lock
clc
mov
cmpsl
clc
pop
ss
adc
leave
mov
enter
clc
pop
clc
pushf
xchg
sbb
mov
clc
insl
fldt
sbb
in
mov
js
add
mov
and
dec
xchg
xchg
or
xor
add
clc
sub
add
cmpsl
clc
fnsave
clc
aas
imul
pushf
icebp
mov
jge
pop
inc
add
jae
add
jae
add
add
push
clc
jnp
inc
add
sar
push
in
imul
mov
pusha
add
mov
loopne
test
cmp
ss
fldl2e
sahf
lea
xor
add
xor
dec
mov
scas
sub
sar
aad
clc
mov
sub
rcrb
add
js
addr16
push
fs
sub
add
clc
stos
mov
fistl
adc
add
clc
jle
clc
jp
clc
jge
outsb
jle
add
lahf
pop
or
insb
repz
sar
out
fs
mov
lret
mov
push
mov
push
out
fnsave
add
add
dec
adc
lea
add
lahf
jnp
ret
clc
jg
mov
add
jecxz
pushf
pop
aam
outsb
fdiv
insl
rcll
sub
add
add
or
fcmove
enter
jmp
mov
clc
jns
imul
xlat
push
adc
add
add
stc
push
clc
lods
js
push
fildll
in
inc
clc
cmp
jmp
clc
jo
add
xor
add
jns
shll
add
or
fnstcw
data16
xchg
push
clc
adc
add
add
test
mov
clc
inc
clc
lock
fwait
xor
ljmp
mov
clc
ljmp
jmp
in
dec
das
cmpsl
clc
push
sub
add
push
add
add
clc
fs
xchg
jg
jnp
add
clc
popa
add
mov
fcomps
cmp
add
jl
add
sar
stc
mov
sub
lods
mov
sbb
add
pop
or
scas
in
mov
es
jne
dec
pop
inc
add
mov
jnp
mov
stos
xabort
clc
sahf
sbb
cmp
cwtl
inc
add
and
add
add
add
cmp
add
add
jno
add
popf
ficompl
mov
loop
pop
inc
add
push
jnp,pt
add
ret
clc
pop
test
clc
ret
mov
jge
clc
xor
add
xabort
clc
fwait
mov
jecxz
sbb
in
hlt
lea
clc
pop
and
add
jg
je
xbegin
add
icebp
lret
aam
clc
xchg
addr16
jne
adc
std
stos
adc
add
fcom
pop
ja
clc
mov
mov
mov
add
sbb
add
in
inc
clc
or
insl
sahf
push
add
imul
shrl
cmp
std
xchg
out
jae
add
add
mov
add
add
cmp
clc
pop
push
stos
aam
add
and
add
jmp
xchg
cmp
xbegin
pop
jbe
cmpsb
clc
cmpsb
clc
mov
lods
jo
add
ljmp
outsl
fdivrp
cmp
cmp
clc
cs
call
jp
clc
add
add
bnd
daa
clc
movsl
clc
stos
negb
clc
gs
or
xor
add
iret
dec
xor
add
add
add
sar
clc
xchg
leave
stos
cwtl
xor
add
std
mov
add
pop
push
clc
bound
add
scas
xchg
jb
add
add
cmp
clc
xchg
rcrl
int
push
mov
fsubp
clc
in
fnstenv
add
ja
sahf
push
clc
push
gs
lret
das
sub
add
cmc
arpl
add
add
imul
xchg
mov
xor
add
call
and
add
cmpsb
clc
cli
stos
popa
add
ret
clc
out
in
scas
pop
ret
int
cmp
add
scas
add
clc
out
cmpsb
clc
mov
cmp
in
es
ljmp
adc
insb
sbb
clc
dec
or
pusha
add
push
add
mov
lahf
clc
out
push
inc
clc
xor
cmp
or
sub
and
add
add
add
cmp
mov
add
add
mov
movsl
clc
fisubs
add
clc
movsbl
jae
add
dec
data16
lods
push
xchg
push
fs
lock
clc
out
out
mov
add
jg
push
xchg
rcll
mov
or
dec
jg
clc
sub
clc
jbe
mov
cmp
clc
idivb
cli
sahf
jmp
xchg
push
add
ds
stc
repz
fdivl
add
add
add
dec
xor
add
sti
lcall
adc
add
inc
clc
data16
cmp
add
in
test
out
mov
nop
sbb
clc
fildl
cmp
pop
aaa
add
add
add
aam
sbb
add
xor
add
clc
lea
leave
dec
push
in
inc
add
inc
clc
inc
clc
cmp
clc
pushf
push
fs
ss
add
add
out
mov
cmp
mov
add
cmp
outsb
fdivs
fwait
pop
jg
push
and
add
jae
add
clc
jmp
add
sti
xchg
mov
sbb
add
roll
dec
xchg
leave
sbb
add
test
add
mov
xchg
mov
dec
ljmp
dec
jbe
xor
add
add
sbb
and
add
inc
add
dec
adc
add
leave
jbe
clc
or
or
adc
add
lods
sbb
cs
add
cmpsl
clc
ud0
pop
or
add
icebp
dec
outsb
test
rclb
clc
pop
xchg
mov
push
addr16
xbegin
ljmp
aaa
add
add
add
add
mov
call
jp
push
clc
js
cmp
or
jno
add
add
iret
dec
sahf
adc
leave
popa
add
cmpsl
clc
cmp
jmp
sbb
mov
add
hlt
jnp
sbb
lods
insl
mov
mov
xchg
js
ret
clc
jbe
add
mov
pop
int
add
jp
scas
sbb
clc
or
insb
or
clc
icebp
fs
imul
das
inc
add
mov
add
int3
push
jl
clc
call
add
clc
shl
insl
add
add
lret
xchg
xchg
or
clc
xchg
adc
mov
test
clc
jo
add
xor
mov
out
sub
fistpll
pop
fs
shl
cltd
pop
push
clc
pop
cmp
clc
gs
jecxz
scas
push
add
mov
out
xchg
cmp
add
jmp
lods
ret
clc
lods
aam
mov
sub
add
or
hlt
sub
fsubrl
xlat
in
pop
clc
push
gs
mull
add
jns
add
gs
pop
clc
sbb
sub
clc
fnstcw
dec
adc
add
push
loop
jmp
pusha
add
jecxz
cmp
adc
add
movsl
clc
in
pop
mov
notl
jnp
popf
aad
mov
movsb
clc
xor
add
add
add
push
add
dec
outsb
test
xor
add
add
jmp
add
add
mov
clc
pop
and
add
clc
push
pop
sti
and
add
aaa
pusha
add
dec
pop
outsl
loopne
mov
aas
test
clc
adc
add
clc
aaa
ficompl
stos
mov
ret
fdivl
lahf
pop
clc
js
ljmp
into
push
add
inc
add
xbegin
add
adc
add
leave
pop
mov
mov
lods
add
add
arpl
add
xchg
insl
mov
sub
xchg
lahf
push
call
mov
aas
insb
fsubs
add
mulps
mov
addr16
shr
dec
stos
sub
add
testl
xor
add
xchg
test
hlt
dec
cmp
clc
inc
add
inc
add
scas
test
int
clc
shl
lret
push
clc
sbb
sub
xor
add
push
dec
fsubl
add
je
xbegin
fidivl
add
loope
push
add
adc
add
clc
enter
add
dec
cmp
push
clc
stos
ja
dec
test
clc
aam
add
dec
cmp
lods
and
add
mov
call
roll
add
es
xbegin
sub
add
clc
push
mov
in
inc
clc
dec
mov
add
insb
sti
mov
and
add
add
outsl
lret
popf
mov
js
add
insb
xbegin
dec
out
and
add
jg
mov
aam
test
in
mov
mov
pop
mov
push
add
mov
mov
xor
clc
lea
mov
clc
mov
clc
mov
pop
cld
loop
mov
xor
add
add
add
aaa
in
hlt
push
add
test
loop
loop
cmc
xchg
out
dec
add
add
cmp
and
add
clc
add
add
clc
jge
add
fidivrl
clc
xor
add
icebp
clc
mov
lock
xbegin
mov
add
pop
clc
mov
add
clc
enter
clc
inc
add
add
add
sbb
je
fnsetpm(287
clc
jp
add
data16
dec
sub
add
bound
add
jno
add
lods
mov
clc
imul
call
clc
xor
fisubrl
clc
insl
cld
jecxz
ret
push
repz
and
add
mov
pop
or
xchg
adc
add
call
jp
mov
cmp
adc
hlt
jbe
jl
sar
scas
adc
add
xchg
mov
sahf
pop
fs
or
test
clc
mov
arpl
add
add
jmp
lock
inc
clc
adc
add
clc
adc
add
add
jmp
add
gs
mov
dec
in
mov
mov
pop
insl
scas
lahf
jae
add
insl
int
xchg
cmp
clc
mov
jl
aad
clc
adc
add
or
and
mov
rcr
aad
mov
cmp
sub
mov
fsubr
xabort
clc
push
add
add
mov
xchg
cmp
clc
stos
test
jmp
add
cmp
daa
clc
or
mov
add
pushf
fstpt
xlat
or
int
mov
test
mov
add
mov
adc
add
clc
mov
mov
aad
clc
mov
xchg
cmp
clc
mov
clc
insl
push
out
jns
add
pop
jmp
add
inc
clc
loop
in
mov
adc
add
jae
add
clc
push
jno
add
add
ljmp
cmp
mov
cmp
or
clc
or
iret
jne
scas
pop
mov
xbegin
mov
cmp
clc
mov
lock
add
pusha
add
adc
add
sbb
clc
mov
mov
add
add
add
cmp
sub
out
sets
add
lea
lods
addr16
insl
xchg
test
mov
sub
adc
add
mov
xchg
scas
mov
xchg
add
add
std
enter
clc
jb
add
clc
xor
add
and
add
fistl
cmpsb
clc
test
add
lods
push
or
clc
shrb
out
scas
jmp
add
push
push
add
push
lcall
clc
add
add
add
jae
add
add
ss
cs
jne
xor
add
add
dec
ljmp
dec
push
cmpsl
clc
xchg
dec
int3
dec
mov
xchg
add
add
fists
add
dec
stos
or
leave
jecxz
add
add
clc
int
loop
das
xchg
gs
fisttpl
loope
sub
or
frstor
sahf
cmp
add
add
sbb
icebp
out
cld
movsb
clc
and
add
add
or
add
and
add
add
clc
jl
push
cmp
jb
add
aas
and
add
add
push
sti
sbb
adc
add
add
ret
clc
xchg
push
nop
xlat
jns
clc
xchg
pop
jae
add
add
mov
loope
push
jp
clc
ret
clc
cmp
add
xor
lahf
aaa
test
mov
clc
mov
fcompl
jle
jge
hlt
inc
add
add
sub
out
xor
add
inc
add
insl
sub
mov
sar
clc
lea
push
lods
add
add
lahf
iret
mov
add
push
je
clc
mov
add
sbb
add
mov
mov
mov
jl
clc
jno
add
add
lods
mov
dec
pop
popf
fstp
push
pop
mov
cltd
fimull
or
inc
add
dec
or
mov
int3
push
add
scas
mov
sub
pusha
add
arpl
add
cltd
xor
add
add
fbstp
jmp
add
sub
insb
mov
sahf
sub
jmp
sbb
das
stc
ss
dec
popl
add
insl
nop
outsl
das
lret
push
jnp
mov
mov
inc
add
movsb
clc
pop
jae
add
mov
xor
add
cmp
clc
enter
cwtl
mov
add
clc
adc
add
add
cli
or
xchg
ret
clc
cmc
rolb
add
movsl
clc
mov
clc
cltd
stos
in
jae
add
pop
test
add
sbb
imul
ss
adc
add
clc
jbe
add
sbb
add
repnz
mov
ret
clc
test
xor
loop
push
push
add
enter
in
xor
add
add
lcall
push
add
bound
add
mov
push
clc
mov
jo
add
add
iret
rol
clc
fbld
clc
sbb
mov
add
ret
inc
add
insl
stc
jp
mov
pop
test
dec
inc
clc
sbb
push
xor
add
scas
lcall
adc
add
add
cmpsb
clc
xchg
fisttps
add
sub
inc
clc
sbb
mov
add
add
hlt
mov
clc
and
add
add
xchg
push
add
mov
pop
add
add
add
pop
xchg
sub
adc
add
clc
mov
das
push
add
pop
jp
xchg
cli
ja
std
push
mov
push
mov
call
add
mov
sbb
add
cmp
add
repnz
lret
clc
mov
add
jmp
cmc
cs
lcall
mov
add
dec
or
sub
jl
clc
dec
gs
pop
stc
out
and
add
or
add
fbstp
das
sbb
cmp
add
cmpsb
clc
test
movsl
clc
and
arpl
add
sti
mov
int
inc
clc
pop
clc
inc
clc
cmp
xchg
sbb
cmc
mov
pop
ret
clc
pop
cwtl
mov
mov
jbe
rolb
fnstenv
sub
test
add
add
rdmsr
add
sbb
gs
test
cmp
out
cltd
mov
in
ret
mov
add
mov
add
flds
add
add
or
clc
mov
ds
ja
xor
add
xchg
sbb
xor
add
clc
xchg
mov
clc
mov
cmpsl
clc
repnz
add
xchg
inc
clc
push
out
xchg
mov
and
add
add
imul
add
xor
add
mov
xbegin
push
add
mov
clc
adc
add
mov
ss
xchg
jecxz
jmp
jnp
clc
fnsave
out
cmp
popf
ret
clc
lods
mov
sar
mov
scas
mov
or
mov
clc
cwtl
adc
add
sti
std
gs
inc
clc
push
clc
into
out
dec
ret
push
clc
std
lods
inc
clc
aas
flds
add
adc
add
jle
mov
leave
cmp
xor
clc
sbb
mov
add
mov
and
add
clc
ljmp
xchg
sbb
and
add
and
add
inc
add
jmp
clc
xor
sub
jle
cmp
add
aas
rclb
add
xbegin
adc
add
xlat
lcall
clc
cli
mov
and
clc
mov
add
data16
imul
add
rolb
xchg
mov
dec
sbb
pop
add
add
clc
scas
xor
add
cmc
loope
xchg
sub
adc
add
sbb
add
fstpl
scas
mov
xchg
bound
add
mov
addr16
fldl
clc
pop
stos
dec
ja
fisttps
add
add
clc
adc
xchg
and
jns
clc
mov
ss
add
clc
dec
mov
pusha
add
or
mov
sbb
or
add
pop
popa
add
or
add
jp
arpl
add
add
fs
loop
jecxz
mov
or
mov
add
mov
cld
push
cs
add
mov
or
xchg
outsb
xor
add
or
and
add
dec
fcomps
popf
pop
mov
je
or
in
pop
cmpsl
clc
pop
loope
cmp
clc
sub
clc
mov
add
mov
cmp
test
mov
std
aaa
xchg
push
add
sarl
push
add
push
sbb
add
clc
pop
jb
add
clc
dec
scas
pop
inc
add
push
dec
clc
loope
in
test
out
repnz
clc
sub
clc
and
inc
add
sbb
add
xchg
and
add
cmp
sub
lods
ss
xor
add
sub
lcall
cmp
clc
movsl
clc
ret
mov
mov
gs
mov
clc
rorb
add
mov
add
lret
clc
sub
test
clc
inc
add
icebp
fwait
jo
add
sub
icebp
insb
dec
cs
clc
rclb
add
addr16
mov
int
add
cmp
jmp
push
push
add
jo
add
clc
bound
add
stos
testl
mov
clc
pop
ss
pop
cmp
clc
fildl
push
clc
lods
push
shrb
add
add
xor
add
inc
add
cmp
test
ss
lcall
or
add
push
inc
add
lea
add
push
fcmovnu
sbb
lods
mov
clc
add
add
pop
clc
jl
and
cmp
add
imul
fisttps
adc
add
clc
pushf
lret
in
cmp
clc
dec
scas
je
clc
mov
nop
sbb
int3
fucom
clc
ffree
clc
cwtl
dec
cmpsl
clc
cmp
movsb
clc
pop
int
clc
mov
lea
add
or
add
mov
and
add
mov
cmp
jno
add
rorb
add
movsb
clc
sbb
add
fldl
push
mov
add
pop
loope
add
dec
ficoml
add
cmp
pushf
pop
mov
sar
add
cmp
ljmp
clc
jno
add
jns
inc
add
pushf
fnstcw
add
inc
add
roll
add
shll
dec
stc
pop
clc
sub
lods
idivb
sub
mov
adc
test
jle
or
pop
mov
scas
mov
clc
adc
add
add
or
adc
add
push
push
inc
clc
stos
pop
jmp
inc
clc
aad
leave
mov
out
ljmp
jns
add
cwtl
jmp
sar
push
or
out
lock
mov
add
sub
out
and
add
add
add
push
add
sub
and
add
imul
or
leave
addr16
repz
add
mov
ja
movsb
clc
mov
xor
fbstp
add
dec
pusha
add
cmpsb
clc
lret
lahf
xor
add
add
clc
aas
leave
insl
jp
jl
dec
lret
in
shr
mov
xchg
pop
lcall
imul
scas
push
add
xor
add
add
add
xor
add
clc
push
clc
xor
add
in
into
outsl
and
add
and
add
clc
clc
xchg
cmp
cwtl
jb
add
add
add
push
xchg
in
push
ret
aaa
sub
add
xor
add
data16
add
add
clc
mov
xor
add
nop
js
add
test
add
int3
sar
clc
pop
push
pop
iret
divl
dec
jno
add
clc
xor
add
lahf
test
popl
add
lret
loope
mov
clc
in
mov
divl
clc
sbb
inc
add
test
mov
mov
cmp
adc
add
clc
sbb
clc
mov
jne
push
mov
add
aas
jg
add
pop
or
clc
lock
add
gs
push
add
mov
test
iret
dec
in
dec
mov
or
sub
dec
mov
cmp
clc
jno
add
clc
dec
mov
xor
add
cmp
into
inc
add
push
icebp
pop
clc
in
lods
pop
out
mov
push
mulb
add
mov
cli
sbb
clc
scas
sbb
clc
scas
imul
push
mov
add
add
adc
add
shll
clc
sub
jb
add
in
xbegin
add
insl
and
add
clc
cmpsl
clc
and
add
cmp
pop
aam
je
push
jmp
data16
or
add
imul
adc
add
add
add
clc
pop
test
je
add
add
xchg
jle
pop
mov
add
inc
clc
nop
sub
xor
add
addr16
mov
clc
push
lods
xor
add
clc
inc
clc
mov
add
daa
clc
adc
pop
clc
pusha
add
xchg
sub
clc
dec
cmp
xbegin
loop
mov
pop
bound
add
clc
or
dec
in
bound
add
lret
mov
mov
dec
insb
jne
loop
or
inc
add
mov
lea
out
je
hlt
mov
clc
mov
add
in
push
xchg
lods
dec
out
or
clc
pop
mov
sbb
xor
dec
cs
fildl
add
inc
add
pop
outsl
imul
add
push
add
arpl
add
add
mov
clc
into
shlb
add
test
sti
dec
cltd
cs
clc
jb
add
dec
pusha
add
sub
mov
xchg
repz
clc
das
inc
add
ja
add
je
mov
add
into
cmp
rcrb
js
clc
xor
add
cmp
arpl
add
add
add
cmp
add
add
idiv
into
std
ja
adc
add
mov
add
jecxz
daa
clc
fadds
adc
add
pop
add
add
sub
add
jbe
ret
clc
adc
add
push
add
or
clc
ss
in
or
js
clc
inc
clc
jge
arpl
add
clc
frstor
add
add
push
add
std
add
add
data16
mov
in
sbb
add
pop
xchg
and
add
clc
out
xbegin
xchg
inc
add
pop
pop
jp
clc
shrl
hlt
xchg
cltd
dec
xbegin
loope
adc
add
scas
icebp
inc
clc
popa
add
sbb
clc
scas
xor
add
jmp
add
adc
clc
outsb
mov
lret
call
add
pop
cmp
add
jg
push
bound
add
bound
add
clc
cmp
clc
js
pop
pop
loop
cmpsb
clc
movsb
clc
pop
fildl
mov
add
add
stc
cs
clc
mov
add
popa
add
cmc
xor
add
xchg
cmp
or
clc
cmp
lods
inc
add
inc
add
sub
call
add
mov
gs
sahf
inc
add
inc
clc
mov
clc
or
rolb
arpl
add
add
jno
add
out
push
clc
dec
mov
hlt
pop
pop
rdmsr
add
sar
add
jmp
add
int3
xchg
dec
jg
clc
mov
add
add
add
lcall
dec
movsb
clc
push
add
inc
clc
jle
clc
cmp
cltd
cmp
clc
mov
popf
dec
stos
imul
add
mov
clc
xchg
mov
out
and
xchg
rep
add
add
clc
add
add
add
xchg
loopne
stos
jbe
clc
cmp
nop
push
jnp
add
cli
in
nop
stos
cmp
add
and
add
loop
fsubrs
js
jmp
pop
push
imul
clc
jbe
inc
add
push
inc
add
and
divb
add
sub
add
outsb
insb
std
inc
clc
xor
add
cld
sub
add
cmp
clc
stc
sbb
mov
jmp
clc
mov
clc
pop
add
add
pop
and
bswap
sbb
sub
xchg
mov
fldl
clc
daa
clc
push
mov
enter
add
push
clc
fbld
mov
fnsave
add
add
cmp
bound
add
sarl
pop
stos
inc
add
nop
mov
mov
pop
ja
xor
pop
cmc
inc
clc
movsl
clc
ret
clc
loop
mov
pop
lea
lods
out
cmp
add
dec
movsb
clc
cmp
clc
out
cmpsb
clc
ja
xor
add
pop
dec
dec
out
mov
int3
push
add
jnp
clc
ds
adc
sar
add
cmp
add
hlt
add
add
cmp
inc
add
xor
add
push
clc
sub
clc
mov
xchg
xchg
pop
pop
inc
clc
mov
clc
jge
add
shrl
sahf
scas
cmp
dec
jle
mov
mov
rorl
adc
add
jnp
cmp
dec
cmp
clc
pop
clc
cmpsb
clc
in
pop
mov
sub
add
push
packssdw
clc
test
movsl
clc
in
cmpsb
clc
shl
mov
clc
insl
daa
clc
fldt
add
mov
mov
add
data16
and
add
xbegin
jno
add
clc
cmp
xchg
jbe
clc
or
iret
push
pusha
add
cwtl
mov
dec
mov
shlb
xchg
inc
clc
lods
pop
ret
clc
je
clc
sar
cmp
inc
add
xchg
cmp
add
jecxz
insb
shrb
addr16
ss
mov
out
out
fwait
cmpsl
clc
ljmp
xchg
cltd
arpl
add
cmp
in
insb
lods
xchg
fnstcw
adc
add
clc
cmp
clc
scas
push
add
test
enter
clc
lcall
xchg
mov
sbb
add
loope
sbb
cmp
clc
inc
clc
xbegin
clc
cmp
shrl
nop
ret
clc
pop
fisubl
add
mov
icebp
mov
add
sbb
dec
cltd
jmp
add
mov
clc
push
add
aad
mov
pcmpgtd
in
clc
jae
add
aam
jo
add
daa
clc
lahf
stos
imul
cmp
enter
add
lcall
jle
sahf
add
add
add
add
jmp
inc
add
cmp
adc
clc
mov
adc
add
insl
and
add
mov
add
lods
or
push
add
or
add
add
clc
nop
sub
clc
dec
movsb
clc
push
shr
into
xor
add
push
add
test
mov
add
rolb
add
stos
out
mov
add
add
pop
cmp
or
push
mov
loope
lods
inc
add
jno
add
add
lea
mov
cmp
add
fs
sub
add
inc
clc
stc
sti
jns
clc
xor
add
clc
mov
clc
cmp
add
clc
inc
add
dec
push
ss
add
bound
add
negb
fs
jp
sub
add
enter
sar
add
jae
add
icebp
lcall
out
or
divl
lcall
add
js
clc
aam
lods
push
daa
clc
loop
mull
add
add
fnstcw
add
std
jle
decl
push
push
add
lea
sar
pop
jle
adc
add
notl
mov
mov
clc
sbb
clc
jle
ja
add
and
add
add
add
arpl
add
mov
aam
ds
clc
icebp
mov
in
xor
add
mov
adc
add
aam
xchg
jmp
popa
add
es
push
jbe
add
jno
add
in
pop
xchg
aad
add
push
clc
mov
sub
mov
xchg
xchg
jb
add
clc
test
add
add
jmp
mov
sar
dec
adc
movsb
clc
ret
dec
dec
pushf
or
clc
mov
mov
clc
xchg
pop
mov
jge
insb
fdivrl
add
clc
pop
dec
sbb
out
cs
push
add
pop
push
add
xor
add
fidivl
add
nop
cltd
sti
sbb
clc
mov
add
out
lcall
lods
adc
add
push
cmp
add
ja
mov
and
add
cmp
add
add
clc
test
je
pop
mov
add
push
or
add
out
sar
stc
dec
incb
add
jnp
clc
int3
mov
add
pop
mov
sbb
ror
aaa
pop
cmc
addr16
pop
jb
add
or
or
je
cmp
rorl
pop
clc
dec
or
fsubrp
mov
cmp
mov
add
fbld
add
add
adc
add
add
inc
add
ss
out
pop
cmp
add
ljmp
add
add
add
int
add
ss
fstps
scas
in
div
daa
clc
inc
clc
adc
add
add
add
jns
add
scas
xchg
push
out
nop
cmp
movsl
clc
add
lock
clc
insl
hlt
xchg
xchg
mov
adc
add
es
dec
sbb
adc
add
ret
add
cli
ret
pop
inc
add
mov
mull
add
fstp
mov
cmpsb
clc
addr16
xchg
xchg
mov
dec
jns
test
push
push
movsl
clc
mov
test
or
and
sbb
cmp
sar
mov
nop
arpl
add
int
data16
jo
add
adc
add
xor
add
test
inc
add
incl
or
add
int3
int3
xabort
push
out
cmp
incl
clc
sub
clc
lods
dec
xor
add
jo
add
add
inc
add
lcall
clc
mov
jb
add
jb
add
clc
xor
add
xabort
clc
pop
cmp
mov
insl
xchg
dec
add
cmpsl
clc
cli
loop
jmp
clc
xchg
insb
and
add
jmp
clc
ss
ret
clc
inc
add
pop
push
add
adc
clc
push
add
fldcw
sub
add
iret
data16
into
gs
cmp
clc
fistps
add
mov
jle
add
add
mov
add
add
sbb
outsb
mov
add
shl
in
adc
add
mov
cmp
pop
adc
add
bound
add
add
clc
scas
sar
xchg
push
xabort
dec
sbb
jns
clc
pop
or
xor
add
add
test
clc
inc
add
sbb
sahf
push
clc
das
ljmp
inc
clc
adc
add
pop
lea
add
xchg
insb
stc
cld
mov
test
sub
push
inc
add
and
add
outsl
daa
clc
imul
push
jo
add
add
repz
clc
xbegin
xbegin
add
cmp
mov
ss
data16
shlb
xchg
sub
mov
add
mov
in
lret
arpl
add
clc
mov
xchg
fisttpl
repnz
gs
jmp
icebp
xor
add
jnp
gs
clc
leave
or
clc
in
leave
xbegin
clc
cmc
xor
add
add
push
mov
scas
shr
adc
add
lods
cmp
clc
notl
clc
insb
pop
xchg
jle
adc
add
xchg
pminub
int3
push
sbb
clc
cmpsb
clc
imul
pop
icebp
cmc
pop
fs
xor
add
cli
cwtl
fnstcw
clc
inc
add
rcll
inc
add
lods
jo
add
cs
mov
cli
arpl
add
sar
mov
clc
xor
add
shlb
add
jmp
mov
ljmp
lret
mov
add
insb
adc
add
add
mov
clc
pop
lods
push
push
mov
add
clc
pop
fcoml
add
cmp
outsl
cmp
clc
test
fisubl
add
pop
push
sar
ret
clc
jo
add
test
loopne
lret
xchg
in
pop
cmp
pop
xabort
adc
add
movsl
clc
mov
aaa
mov
xor
clc
push
pop
lahf
in
mov
inc
add
cmp
cld
ds
loopne
stc
sub
pushf
add
add
add
xchg
inc
clc
sub
cwtl
jbe
test
jb
add
clc
lods
insb
cltd
sub
add
or
sar
pop
adc
clc
out
cmp
shll
pop
push
clc
lret
mov
loope
add
enter
insl
push
jge,pn
clc
gs
imul
jno
add
jbe
add
push
add
clc
repz
add
ss
cmp
dec
call
outsb
popa
add
imul
shrl
fwait
xbegin
add
mov
fldt
ja
sbb
je
add
inc
add
and
mov
add
in
int3
aaa
loopne
pushf
mov
add
cmp
arpl
add
add
add
push
dec
test
mov
xor
pop
and
add
out
jp
add
pop
and
add
clc
outsb
pop
jecxz
push
in
popa
add
frstor
clc
insb
sub
insl
fadds
mov
push
add
gs
xlat
cmp
pop
push
mov
push
cld
and
cmp
clc
and
add
dec
cmp
stc
popa
add
addr16
data16
cmp
sahf
push
clc
sub
mov
add
fldlg2
sbb
sub
clc
popf
push
add
aam
das
icebp
clc
pop
jecxz
test
xlat
sbb
ja
clc
inc
add
sbb
pop
sub
add
popf
or
clc
pop
push
stos
adc
xchg
sahf
in
rorl
add
cmp
xchg
es
mov
out
arpl
add
imul
clc
xlat
add
popf
sbb
pop
clc
jge
pop
jp
adc
add
adc
add
mov
inc
add
mov
dec
fwait
cmp
in
je
shll
cmpsl
clc
es
call
mov
push
add
arpl
add
mov
pop
push
fs
mov
insb
loopne
push
clc
sub
sub
clc
add
add
clc
mov
stc
scas
or
jnp
pop
int3
xor
clc
xor
add
add
pop
in
jbe
inc
add
mov
add
add
add
clc
jne
clc
mov
sbb
stos
fwait
and
add
clc
xchg
ljmp
push
and
add
aad
clc
insl
push
in
jno
add
pop
push
lret
in
dec
mov
clc
mov
jae
add
mov
clc
xchg
int
lods
popf
dec
out
mov
cmp
aad
clc
js
clc
jmp
add
popa
add
ja
leave
push
add
pop
sub
add
aas
mov
add
repnz
clc
jnp
aam
and
add
add
cmp
out
xchg
fs
jno,pt
add
in
or
push
add
or
mov
inc
add
cmp
cmp
mov
clc
cmp
mov
push
pop
in
std
cmp
icebp
pop
sbb
clc
mov
clc
in
out
aam
clc
cld
sub
add
xor
add
cmp
jg
add
cmp
xchg
loopne
jl
pop
dec
stos
jmp
repnz
add
fs
and
add
add
or
popa
add
out
adc
add
add
cli
neg
sub
mov
mov
push
icebp
icebp
fisubrl
lock
add
sarb
shrl
fnstenv
add
push
pop
sub
mov
add
in
xbegin
stos
dec
stos
mov
clc
lods
sub
add
int3
loope
aas
cmpsb
clc
push
jle
clc
stos
mov
push
mov
ja
clc
fs
es
fwait
in
push
mov
push
aas
testl
dec
xchg
scas
ret
clc
xor
add
xlat
xor
add
sub
clc
xabort
xchg
shll
out
push
add
cmp
in
data16
push
add
aam
cmp
jae
add
add
lahf
scas
scas
loop
mov
push
add
jecxz
lret
popf
mov
clc
addr16
ficomps
fistps
mov
clc
rcr
ljmp
clc
js
clc
cli
mov
clc
call
clc
enter
jmp
testb
lods
leave
pop
cmp
sahf
aam
mov
cmp
stos
cmpsb
clc
repnz
scas
mov
stc
push
add
pushf
mov
sbb
add
pop
loopne
into
adc
and
cld
add
add
mov
clc
push
add
sbb
add
repz
inc
clc
mov
add
fdivrp
divl
xchg
jns
inc
clc
out
sahf
inc
add
je
jg
pop
sbb
out
jle
and
add
add
fwait
jl
add
cmp
in
ret
clc
mov
testl
cmp
jne
loope
lods
nop
dec
or
mov
add
adc
clc
mov
add
or
mov
or
jle
out
aaa
imul
fadds
icebp
mov
clc
mov
add
adc
jo
add
pop
scas
pop
ljmp
add
push
jmp
clc
in
push
clc
xor
clc
out
rcrb
pop
cwtl
add
add
inc
add
imul
shll
xchg
mov
call
sbb
insl
cs
jae
add
clc
roll
add
je
out
addr16
pop
idivb
cltd
adc
add
sbb
lods
adc
add
clc
nop
mov
clc
mov
add
xchg
mov
xchg
insb
mov
clc
add
add
repz
xor
add
add
add
xchg
in
imul
add
add
gs
data16
ret
dec
out
test
cld
mov
stos
and
add
push
aaa
ljmp
adc
add
add
sbb
fists
enter
add
imul
clc
jp
cmc
cmp
add
lea
add
lods
lea
clc
jge
add
out
lahf
mov
cwtl
mov
mov
dec
sar
mov
outsb
dec
out
dec
and
add
ret
push
cmp
add
fidivs
es
pop
dec
test
push
add
xchg
daa
clc
pop
outsl
sbb
clc
push
cmpsl
clc
shlb
test
and
ret
or
gs
icebp
fmull
dec
push
add
sbb
fwait
imul
dec
popf
push
cmp
clc
mov
arpl
add
aaa
fs
xor
add
in
int
add
sbb
repz
add
imull
clc
nop
push
popa
add
dec
loop
xchg
loop
cmpsl
clc
and
sub
xor
add
add
clc
xlat
loop
xor
add
inc
add
inc
add
out
out
jecxz
jmp
clc
lcall
xchg
or
add
add
and
add
sbb
add
insl
pushf
sbb
clc
gs
mov
es
arpl
add
mov
daa
clc
inc
clc
aaa
iret
ss
and
cmpsl
clc
pop
mov
clc
pushf
lcall
incl
cs
adc
add
clc
popa
add
jl
dec
lods
ret
clc
ret
clc
xbegin
hlt
add
add
stos
inc
add
ljmp
aad
push
jae
add
push
push
add
mov
fcoml
add
clc
mov
clc
or
clc
push
add
xchg
rclb
add
jmp
ja
ret
xchg
xchg
icebp
push
decb
push
pop
arpl
add
or
iret
xchg
add
add
xchg
scas
mov
fs
sbb
sbb
outsl
cmp
mov
enter
lea
add
stc
dec
int3
adc
add
clc
inc
add
dec
push
mov
sbb
add
test
add
add
cld
cwtl
pop
mov
add
movsb
clc
mov
clc
xor
add
fs
popf
mov
clc
adc
add
add
clc
das
cltd
pop
and
cmc
fwait
or
in
dec
sub
jno
add
jno
add
add
dec
jmp
clc
test
clc
cmp
dec
and
add
sub
inc
clc
and
int
clc
dec
in
xbegin
psubsb
add
and
add
add
clc
xchg
enter
clc
nop
mov
mov
fsubr
jg
dec
push
fs
test
lock
clc
cmp
int
clc
setp
inc
add
xchg
dec
insb
mov
add
mov
mov
cld
lods
icebp
fld
clc
push
add
js
clc
and
sub
cwtl
pop
inc
clc
jmp
roll
add
clc
push
int3
xchg
pop
out
mov
clc
mov
mov
adc
clc
fs
sti
mov
add
mov
stos
mov
xabort
cmp
add
js
clc
outsl
pop
jg
clc
sbb
fdiv
insl
inc
clc
mov
push
dec
mov
mov
arpl
add
mov
lahf
sbb
clc
mov
add
test
jnp
cmp
inc
clc
test
sbb
mov
std
cmp
xor
loopne
unpcklps
adc
insl
mov
xchg
adc
dec
lret
xor
add
push
add
arpl
add
inc
clc
clc
inc
clc
in
adc
xchg
jl
add
pop
cmp
cs
add
push
clc
out
ret
fisubrl
push
and
add
clc
gs
or
add
mov
mov
inc
clc
xlat
clc
pop
xor
clc
dec
inc
add
pop
pop
mov
add
clc
add
stc
xchg
in
mov
stos
int3
lret
test
clc
icebp
or
inc
clc
scas
das
xbegin
push
add
outsl
jnp
clc
push
add
stos
inc
clc
cmp
or
jbe
clc
push
pop
rol
clc
lea
add
sbb
clc
adc
add
add
pushf
sar
xor
add
jae
add
add
stos
add
clc
pop
out
cltd
sub
fstl
int3
addr16
fldl
mov
add
push
pop
inc
clc
das
jne
add
mov
cmp
add
cld
lods
sub
add
push
xor
add
clc
sbb
jbe
cmp
xchg
adc
testb
push
clc
hlt
clc
cmp
insb
or
add
dec
cmpsb
clc
jno
add
jl
int3
pop
cmp
test
es
inc
add
imul
cmp
push
add
mov
sub
push
add
xbegin
ret
clc
mov
jb
add
sub
push
add
dec
jecxz
sbb
int3
outsl
pusha
add
mov
pushf
push
pop
clc
jns
jae
add
add
loopne
push
add
mov
add
es
stc
data16
scas
cmp
add
aaa
addr16
loope
out
push
add
cmp
add
movsl
clc
mov
add
cs
mov
or
sbb
add
add
inc
add
sbb
add
aaa
jbe
lahf
out
mov
cmp
push
add
stos
adc
add
add
lahf
adc
add
divb
add
add
add
cmp
mov
nop
pop
fs
xchg
jl
dec
jno
add
aad
clc
mov
cmp
clc
or
clc
add
add
cli
xchg
jmp
fs
fidivrs
jne
lods
jg
clc
mov
add
adc
add
clc
and
dec
push
clc
add
add
std
jge
clc
xlat
inc
clc
cmc
xabort
cmp
add
inc
add
sti
and
add
es
dec
imul
add
clc
xbegin
nop
pop
clc
test
and
mov
cmpsb
clc
cmp
in
sbb
clc
mov
mov
test
clc
mov
outsl
pushf
push
adc
add
clc
pop
cmp
clc
cmp
add
add
adc
add
cmp
mov
clc
in
mov
je
lea
es
push
add
jnp
push
pop
adc
clc
jns
sub
sbb
xchg
jecxz
lea
clc
sbb
mov
and
pop
inc
add
mov
jno
add
lret
xabort
sub
clc
dec
mov
add
jecxz
cwtl
pop
cmp
add
jbe
inc
clc
xor
add
pop
clc
daa
clc
inc
add
in
ja
add
clc
mov
inc
add
and
clc
push
clc
test
pop
pop
arpl
add
clc
lret
test
in
sbb
sub
add
lcall
movsb
clc
inc
clc
stc
jae
add
add
adc
add
dec
aam
add
lods
inc
clc
dec
jg
stos
clc
ds
inc
add
pop
and
sahf
adc
add
clc
in
push
add
jns
dec
stos
ljmp
push
add
sub
jb
add
jge
clc
mov
sub
inc
add
jo
add
push
clc
out
out
jg
xabort
jg
sbb
loopne
add
add
ds
mov
clc
ljmp
jbe
push
add
iret
cmp
ret
clc
nop
jne
xor
add
add
push
mov
jmp
add
addr16
cmp
add
scas
movsb
clc
inc
add
fwait
clc
mov
add
sti
dec
pop
cmc
add
add
clc
outsl
test
mov
clc
arpl
add
cmp
cmp
xor
add
clc
sahf
sar
clc
adc
add
clc
imul
add
pop
xor
outsl
jb
add
jmp
sbb
clc
or
adc
add
cmp
cli
and
add
add
mov
popf
lret
add
insl
sbb
mov
add
mov
push
pop
cli
mov
lea
add
jno
add
dec
adc
add
pushl
add
clc
push
add
scas
sbb
clc
mov
iret
je
mov
add
xor
add
add
clc
cltd
test
daa
clc
cmp
add
insl
outsl
mov
test
inc
add
xchg
mov
cmp
clc
insb
dec
or
lret
add
mov
clc
add
add
leave
mul
clc
lods
mov
ret
mov
and
dec
inc
clc
sbb
clc
cmpsb
clc
fdivrs
or
add
push
add
xabort
cmp
clc
test
pop
rorl
mov
dec
cmc
mov
insl
in
gs
mov
clc
hlt
mov
sahf
mov
sub
jae
add
clc
stos
jae
add
cmpsl
clc
mov
clc
and
add
inc
clc
out
aam
fcmovu
mov
pusha
add
pop
jbe
add
add
add
push
inc
clc
enter
mov
or
mov
clc
jno
add
cmp
in
pop
add
add
lret
loop
inc
add
push
shl
clc
adc
add
add
xchg
mov
clc
sbb
pop
add
add
inc
add
aam
sahf
movsb
clc
lcall
nop
inc
add
imul
xchg
enter
dec
push
inc
clc
dec
mov
add
mov
std
pop
jns
out
cmp
add
add
fcomps
jp
sub
test
mov
cmc
es
cmpsb
clc
iret
inc
add
pop
fsub
clc
je
push
add
outsl
cwtl
adc
add
mov
clc
test
add
lcall
sahf
lods
ds
popa
add
sub
add
nop
ret
clc
out
stc
dec
push
lods
out
pop
pop
pop
cmp
out
pop
lret
cmp
add
daa
clc
jo
add
mov
cmp
pop
jecxz
xchg
fbstp
add
int
std
ds
pop
in
or
cmp
mov
repz
clc
fisttps
and
add
test
in
test
fnstsw
ljmp
pop
cmp
push
pop
sar
push
add
push
sti
add
add
sbb
lods
xchg
lea
clc
cmp
clc
mov
add
xchg
fdivs
mov
pop
sarb
lret
push
mov
xor
mov
pop
loope
xor
add
sub
clc
xchg
inc
add
jge
xor
xor
add
icebp
inc
add
adc
mov
in
push
clc
dec
shlb
add
in
pop
insl
mov
add
adc
add
jno
add
xchg
mov
sti
mov
adc
add
add
mov
hlt
cmp
add
addr16
aas
fcmovb
clc
xchg
and
add
mov
imul
fcomps
clc
aam
push
clc
addr16
lahf
cmp
and
lret
clc
mov
sub
add
and
add
pandn
clc
int
clc
sti
push
and
add
clc
jecxz
adc
add
sahf
jecxz
std
mov
lret
mov
js
cmp
or
inc
add
aaa
fcmovne
lods
dec
inc
add
fisubrs
push
xchg
inc
clc
loopne
xchg
cli
stos
fs
test
clc
das
or
clc
fs
fstl
dec
lods
cwtl
out
mov
mov
jmp
clc
dec
mov
cmp
repz
insb
stc
xor
add
test
add
add
xchg
push
push
mov
dec
cli
rcrb
cltd
lcall
lret
loop
test
fst
push
add
cli
call
cltd
and
add
add
add
add
mov
cld
adc
add
xlat
mov
clc
sar
lcall
clc
clc
adc
add
clc
mov
jl
mov
jae
add
arpl
add
clc
jg
and
add
movsl
clc
inc
add
jae
add
clc
or
xor
dec
push
in
xbegin
sar
push
mov
clc
jo
add
popf
adc
mov
nop
sub
push
clc
push
mov
popa
add
pop
cmpsb
clc
rcl
incl
add
scas
dec
lret
or
mov
neg
push
add
inc
clc
mov
jne
and
add
mov
clc
leave
sbb
adc
test
adc
add
mov
clc
enter
stc
mov
add
dec
pop
jp
sar
push
add
jb
add
aad
add
mov
clc
inc
clc
out
icebp
dec
test
int3
addr16
cwtl
xchg
cmp
in
ja
push
clc
inc
add
mov
jge
clc
clc
jle
sub
push
clc
leave
jecxz
in
mov
clc
jbe
iret
jmp
clc
dec
mov
clc
fistpl
dec
push
add
xor
add
or
insl
jmp
inc
add
lret
mov
lods
mov
add
mov
add
mov
xor
add
jb
add
stos
in
and
add
mov
imul
out
mov
clc
std
fwait
data16
jmp
mov
add
add
add
push
jno
add
xchg
leave
fisubl
push
inc
add
or
add
add
sarb
enter
push
add
xchg
in
ss
push
dec
adc
add
dec
fiadds
lahf
inc
add
addr16
mov
add
stos
xchg
cmp
pop
add
add
pop
mov
mov
pushf
scas
fisubrs
sub
clc
inc
add
jmp
cld
addr16
xor
decb
pop
mov
push
xor
add
add
int
jne
and
add
adc
add
repnz
add
ret
clc
scas
push
add
cmp
pop
lods
cmp
call
lock
push
add
add
dec
movsb
clc
fstpl
pop
xor
add
add
adc
adc
add
mov
loopne
clc
lea
fisubrs
clc
push
jae
add
mov
clc
aas
cmp
push
add
pop
jns
sbb
leave
mov
gs
or
clc
pop
xbegin
cwtl
pop
out
sti
add
add
jecxz
mov
mov
inc
add
std
fwait
int
clc
pop
test
leave
mov
or
sti
out
jns
clc
xor
add
jae
add
clc
nop
xabort
xabort
add
jae
add
jg
popf
pusha
add
sbb
xlat
out
adc
mov
sar
mov
clc
aaa
xbegin
push
add
cmp
clc
iret
pop
mov
mov
sub
sub
cmpsl
clc
in
lcall
cmp
clc
in
mov
mov
idivb
ret
clc
cli
insl
es
push
add
adc
add
mov
clc
jmp
dec
lcall
testb
sub
add
add
cmp
stos
pop
stos
stos
bswap
mov
icebp
insb
fs
push
ss
xchg
mov
xlat
jmp
int3
test
mov
add
and
cs
std
xlat
cmc
pushf
jae
add
inc
clc
and
add
dec
gs
jge
clc
int3
or
xor
add
repnz
cmp
or
sub
clc
insb
lea
add
jbe
aas
cmp
jmp
scas
cld
mov
leave
sbb
xlat
dec
inc
clc
filds
add
jae
add
fisubrl
add
pushf
pop
clc
jno
add
clc
gs
adc
add
shlb
pop
pusha
add
jnp
push
add
dec
pop
outsb
in
dec
xlat
push
sbb
cmp
loop
sub
clc
jnp
inc
add
push
add
and
add
clc
xchg
fwait
enter
sarb
dec
int3
xbegin
pop
cmp
clc
vunpcklps
add
loopne
mov
add
int3
pusha
add
inc
clc
outsb
jbe
push
imul
add
dec
dec
dec
lahf
cs
mov
xor
add
mov
aam
mov
and
add
clc
aaa
mov
jl
sub
cs
sbb
clc
jae
add
add
jg
pop
pop
es
pop
clc
sbb
clc
cmpsb
clc
adc
add
clc
and
add
add
test
sub
adc
add
scas
jl
clc
rcrb
aam
add
fs
mov
rcrl
lods
gs
inc
clc
jnp
fistpl
mov
jnp
mov
add
inc
clc
mov
inc
add
bound
add
add
jne
inc
clc
mov
aas
jp
clc
int3
test
add
mov
add
mov
add
outsb
rorl
bnd
add
clc
adc
add
xchg
push
add
jle
add
pop
clc
test
jo
add
daa
clc
cmpsb
clc
push
add
and
push
clc
or
clc
push
inc
add
ficoms
add
aam
clc
xchg
mov
add
imul
add
or
bound
add
add
add
fsubl
add
adc
add
fucomi
int
push
sub
pop
popf
lods
xor
add
clc
ds
test
dec
leave
fs
bound
add
and
add
add
mov
add
add
or
stos
pop
popa
add
inc
clc
negl
pop
clc
imulb
clc
and
add
imul
add
pop
jnp
clc
jne
ret
sub
int3
push
mov
test
add
adc
add
lock
clc
cmp
sub
sar
sbb
dec
xor
add
testl
fisubrs
dec
out
jmp
clc
es
cmp
lock
out
cmpsl
clc
fmuls
sar
pop
xbegin
xbegin
dec
inc
add
and
add
mov
add
pop
adc
cltd
jmp
xabort
add
add
inc
clc
jae
add
push
add
jle
add
cmp
clc
pop
bound
add
dec
aaa
mov
clc
ljmp
fsubrs
xchg
xchg
repnz
mov
clc
insb
sub
sarl
dec
mov
inc
add
mov
adc
push
cli
scas
cmpsb
clc
push
outsl
mov
inc
clc
out
cmc
jae
knotw
xor
add
loopne
xchg
outsb
xchg
adc
add
add
add
clc
or
xlat
jmp
add
mov
data16
mov
push
clc
xor
add
mov
test
jge
hlt
lret
mov
icebp
out
test
clc
jge
xchg
cld
es
xchg
sub
clc
repnz
lahf
lret
lahf
aas
mov
std
ljmp
and
add
add
dec
shll
push
push
movsb
clc
inc
add
iret
mov
add
movsl
clc
aam
clc
pop
push
add
es
mov
adc
add
add
mov
pop
fnsave
inc
clc
leave
aam
outsl
mov
clc
push
add
into
into
jle
out
cmp
jns
clc
jae
add
clc
dec
pop
cltd
xchg
or
add
push
add
repnz
mov
das
dec
in
movsl
clc
mov
jmp
jns
jns
clc
in
sub
add
loopne
xchg
jg
shll
xor
add
add
xchg
inc
clc
clc
or
sbb
add
add
add
clc
mov
add
add
clc
sbb
repz
add
add
or
add
outsb
mov
ljmp
add
dec
or
loop
scas
xbegin
clc
inc
clc
jo
add
adc
add
cmp
ret
cmp
clc
test
xor
add
adc
add
add
ljmp
cmpsl
clc
jo
add
jge
clc
adc
add
call
lret
mov
testl
clc
cltd
jno
add
sub
mov
add
pop
sub
addr16
sub
inc
add
fsubrs
jl
mov
add
pusha
add
pop
cmpsb
clc
lea
sahf
mov
std
adc
add
xchg
inc
add
std
lock
add
ret
clc
iret
data16
sub
jno
add
xabort
dec
clc
loop
mov
inc
clc
mov
fsubs
and
add
filds
add
sub
mov
clc
cli
xor
add
jmp
dec
cli
das
lods
dec
popf
mov
clc
adc
add
add
dec
jge
scas
pop
pushf
and
mov
inc
clc
mov
lcall
clc
xchg
push
clc
fistpl
adc
add
ficomps
inc
add
cmp
movsb
clc
xor
add
mov
add
icebp
mov
fcoml
add
test
add
clc
in
pop
sahf
cmp
clc
xchg
cmc
mov
xchg
cmp
sbb
fbld
loop
adc
add
nop
jne
addr16
cli
sbb
add
cltd
lret
mov
xor
add
inc
clc
xbegin
mov
pop
aaa
arpl
add
add
push
stos
ret
clc
mov
xor
add
clc
icebp
dec
ret
clc
dec
xchg
jl
clc
dec
cmc
cmp
jmp
clc
sub
add
inc
add
outsl
and
add
add
or
and
push
add
xor
add
xbegin
and
add
int
adc
movsb
clc
sbb
and
add
pop
clc
stos
dec
mov
clc
push
push
cmp
clc
sbb
add
iret
dec
jns
pop
push
fwait
adc
add
clc
xchg
add
stc
and
mov
fldcw
imul
mov
lret
sar
sarb
xchg
test
call
insb
test
sub
mov
js
add
jecxz
push
lea
xor
add
clc
nop
lcall
push
add
inc
add
adc
add
stc
xabort
clc
inc
add
mov
clc
xbegin
clc
iret
mov
add
out
xor
add
add
mov
add
cli
or
sbb
cmp
stos
mov
clc
add
cmp
add
loope
movsl
clc
loop
add
pushf
es
jo
add
cltd
push
dec
jnp
add
ret
clc
pushf
dec
inc
add
sarb
sar
rorl
cli
popf
mov
push
mov
add
rolb
add
add
add
sbb
add
add
shll
add
clc
adc
add
push
clc
ljmp
imul
repnz
mov
mov
xchg
in
pop
pop
clc
jb
add
iret
inc
add
jecxz
cwtl
popa
add
mov
clc
jo
add
mov
repz
clc
pop
mov
mov
xor
clc
sbb
add
xabort
ljmp
out
mov
clc
cmp
inc
clc
xchg
cmc
push
sub
idivb
into
mov
clc
pop
in
scas
dec
imul
sub
jb
add
out
dec
out
jne
add
test
lret
inc
clc
jo
add
clc
mov
cmp
add
cmp
inc
clc
out
mov
clc
xchg
sbb
ret
jmp
stc
mov
cmc
fsubs
add
aad
add
add
add
add
add
push
inc
add
dec
jle
cmp
sbb
or
add
scas
adc
mov
ss
ret
mov
add
push
lret
dec
ss
add
push
pop
add
add
lahf
into
aaa
cmp
stos
xor
add
add
adc
add
and
add
add
jp
clc
fbld
ret
clc
adc
add
mov
pusha
add
cmp
in
add
add
cmp
add
test
clc
sub
rol
clc
or
push
add
sar
mov
xchg
stos
mov
stc
fs
test
sbb
add
mov
add
aaa
aam
fimuls
mov
add
lea
add
and
add
clc
mov
rcll
add
lahf
test
mov
aaa
cmp
repz
push
rcr
imul
ljmp
je
in
jo
add
sbb
add
dec
sar
bound
add
clc
aas
jb
add
add
adc
add
xchg
jns
mov
add
pop
in
push
fstps
clc
mov
clc
call
gs
add
add
add
jbe
clc
mov
xabort
int
add
hlt
fildll
dec
movsb
clc
push
shl
pusha
add
lods
add
add
pop
aas
pusha
add
ret
clc
and
xchg
es
push
add
hlt
mov
mov
jno
add
test
jp
sar
jge
add
pop
clc
cmp
clc
cmp
pop
test
and
jp
lcall
int3
adc
add
outsl
fimull
dec
pop
cmp
mov
test
movsl
clc
adc
cwtl
pushf
bound
add
add
push
pushf
addr16
mov
cmp
mov
add
add
sub
cmpsb
clc
adc
add
clc
cmc
lods
pop
mov
icebp
cmp
call
xchg
dec
xchg
inc
add
roll
nop
cmp
xchg
add
add
add
loopne
leave
jmp
mov
stc
xchg
frstor
add
dec
and
add
and
add
mov
clc
mov
mov
add
clc
lcall
clc
in
test
or
mov
sub
lahf
in
movsb
clc
ret
xchg
or
add
sub
clc
mov
clc
dec
and
add
add
mov
clc
add
fisubl
add
scas
je,pt
or
out
loope
push
add
fwait
sar
fadd
clc
dec
or
in
pop
jge
sub
clc
push
push
add
add
movsb
clc
cmp
cld
add
add
add
and
add
pop
cmpsl
clc
clc
data16
cmpsb
clc
and
add
xchg
loope
inc
clc
testb
mov
mov
lret
daa
clc
sbb
or
clc
outsb
inc
add
push
clc
loop
popf
jns
clc
bound
add
cmp
nop
es
cmp
pop
hlt
insl
fwait
jg
rclb
clc
and
add
dec
sub
clc
sub
imul
add
ljmp
fidivl
add
adc
clc
sbb
add
add
shrl
sub
lods
and
out
sbb
push
add
xor
add
add
add
and
sahf
in
clc
test
lock
clc
xor
clc
repz
pusha
add
inc
add
inc
add
test
clc
rcrl
cmp
fiadds
cmp
lcall
outsl
mov
imul
sar
add
cltd
jecxz
lret
or
clc
lock
clc
ljmp
mov
sbb
add
push
clc
dec
mov
jns
mov
nop
aas
incb
clc
xabort
add
fdivrs
repz
add
add
add
nop
cmp
clc
sub
popa
add
pop
popf
xor
ja
je
push
clc
xchg
cltd
fwait
popf
jne
sub
clc
push
add
dec
and
add
clc
es
test
mov
jo
add
push
fs
idivl
xor
add
lret
out
fstps
sbb
mov
clc
int
xor
add
inc
clc
or
dec
arpl
add
insb
loopne
xchg
daa
clc
pop
out
lret
nop
cmp
test
inc
clc
or
mov
mov
xor
add
add
xor
add
xlat
aaa
insl
test
add
fnclex
clc
frstor
sbb
add
mov
add
popa
add
push
rolb
add
enter
clc
je
clc
sbb
add
insl
lcall
clc
rolb
movsl
clc
or
cmp
inc
add
gs
scas
lock
clc
js
clc
mov
mov
fs
roll
add
add
sbb
sub
or
imul
push
clc
icebp
clc
cltd
in
mov
inc
clc
or
sbb
scas
cmp
clc
in
xor
add
fsubrl
push
add
or
mov
scas
cwtl
repnz
add
clc
adc
add
cmp
movsl
clc
insb
mov
clc
mov
ret
pop
push
clc
pusha
add
mov
sar
mov
popa
add
dec
insl
sbb
add
add
add
add
or
clc
xor
add
and
add
jae
add
out
and
clc
inc
add
jp
pop
push
clc
and
dec
and
lods
adc
add
idivl
add
test
xor
add
jl
adc
add
sub
icebp
sti
sbb
ret
clc
call
add
fucomi
and
hlt
fsubr
popf
xchg
out
xchg
aas
mov
add
cld
out
popf
icebp
pop
out
dec
fstl
clc
outsl
in
xchg
sbb
es
push
add
lcall
clc
or
inc
add
arpl
add
add
mov
out
je
mov
arpl
add
push
das
stc
lea
in
ret
clc
sbb
push
mov
add
add
clc
sbb
adc
sub
sbb
inc
clc
adc
pop
fdivs
add
clc
mov
dec
cmp
ljmp
add
or
jecxz
repnz
aas
dec
or
clc
cmp
add
popl
sar
inc
clc
push
cmp
int
adc
add
or
or
add
push
add
idivl
xor
add
xor
clc
adc
add
in
mov
or
mov
adc
clc
cmp
clc
hlt
jg
push
cwtl
cmp
imul
add
mov
add
lods
outsl
notl
xbegin
lods
fisubrs
sub
mov
call
pop
je
add
push
shlb
clc
aas
cwtl
mov
or
ret
add
mov
add
xchg
ja
outsb
xor
mov
dec
cmp
clc
test
and
add
sar
clc
imul
xchg
jmp
mov
lods
arpl
add
add
outsl
arpl
add
and
add
add
mov
into
and
sub
add
fs
mov
clc
inc
add
mov
pop
clc
push
mov
clc
clc
inc
clc
shrb
mov
rcrl
clc
outsb
add
xchg
fmuls
out
sti
jge
add
repnz
add
add
jne
xbegin
xor
add
lcall
sar
mov
bswap
mov
clc
inc
clc
lahf
sub
adc
add
out
sbb
adc
add
pop
pop
clc
xchg
clc
mov
add
arpl
add
add
mov
clc
cmpsb
clc
leave
call
add
jp
add
loope
jne
add
mov
dec
sub
add
mov
push
cmpsb
clc
sbb
pop
clc
sub
cmp
pop
xor
add
in
jne
clc
sub
lcall
aas
mov
add
ret
clc
fucom
clc
mov
adc
or
clc
fiaddl
add
mov
clc
aas
mov
xchg
pushf
sub
mov
mov
or
aas
cli
adc
scas
aaa
sub
sar
jbe
add
pop
mov
add
das
adc
add
add
and
add
rcr
mov
clc
mov
or
clc
ret
clc
pusha
add
out
test
vorps
add
inc
clc
jnp
cmc
in
jl
mov
clc
popa
add
fisttpll
clc
hlt
and
add
clc
jno
add
das
gs
fdivl
add
add
add
mov
ret
clc
xor
aad
aas
lods
sbb
dec
movsb
clc
stc
and
add
mov
clc
sub
add
decl
mov
mov
push
popf
clc
sahf
jbe
mov
add
push
mov
push
add
lods
in
sar
adc
clc
ss
add
push
mov
mov
add
add
jle
cwtl
mov
xor
lret
cs
and
mov
clc
sahf
shll
add
cltd
repz
jns
mov
sub
add
sbb
and
add
pushf
daa
clc
or
sub
add
movsb
clc
push
mov
add
jnp
clc
in
xlat
mov
fisttpll
or
pusha
add
xor
add
add
add
jne
add
inc
clc
push
adc
ja
sbb
cmp
je
fimull
cmpsl
clc
out
xor
add
insl
xor
add
add
call
adc
add
mov
es
mov
or
enter
mov
adc
add
clc
push
or
or
xchg
add
add
xor
add
scas
mov
aad
or
push
and
cmpsl
clc
mov
clc
lret
add
aad
or
lcall
sbb
lret
inc
clc
adc
cld
dec
dec
xor
add
ficoml
add
lods
cs
pop
add
dec
mov
add
add
clc
cmp
ret
clc
mov
jo
add
test
add
jns
aad
into
mov
pop
addr16
mov
mov
pop
aad
push
add
ds
mov
js
clc
add
add
iret
insb
jl
or
sbb
mov
popf
ret
clc
adc
add
test
lcall
jg
clc
cmp
push
add
fisttpl
adc
add
clc
pop
push
add
pop
jns
stos
fstpt
clc
aaa
mov
adc
add
add
dec
loop
imul
popf
xchg
incl
loopne
adc
add
push
add
sbb
enter
ljmp
add
scas
dec
inc
add
stos
xchg
mov
sub
add
mov
mov
in
pop
or
and
add
clc
mov
cmp
clc
mov
ds
clc
cmp
add
and
add
movsl
clc
fnstsw
clc
push
clc
mov
fistps
push
add
dec
insb
cmpsl
clc
stc
cmp
fistpll
mov
add
pop
sti
es
addr16
adc
add
clc
push
add
arpl
add
add
shlb
add
sub
outsb
fmull
fnstsw
or
clc
pop
xchg
xor
add
jg
sub
repz
clc
pop
xor
add
inc
clc
adc
add
cmp
jno
add
aaa
mov
clc
sub
add
add
xbegin
adc
add
cmp
pop
test
xor
dec
cli
mov
clc
leave
addr16
cmp
xchg
mov
xor
sub
mov
pop
test
mov
clc
inc
add
repz
shl
clc
sqrtps
add
adc
add
add
sbb
scas
cli
mov
add
add
dec
in
stos
imul
add
sbb
mov
clc
mov
jmp
jle
sbb
add
jl
ljmp
clc
and
movsb
clc
cmp
fwait
lret
lret
clc
stos
mov
fldcw
call
add
cmp
clc
mov
add
add
add
add
add
add
add
rolb
add
xchg
lcall
loope
inc
clc
fnsave
jo
add
add
push
add
xchg
mov
mov
mov
clc
mov
add
jae
add
mov
add
in
mov
inc
add
addr16
cmp
cwtl
cmp
xor
add
push
add
cs
sub
mov
add
add
xabort
sbb
out
pop
aad
dec
mov
xor
add
or
sbb
push
fsubrl
push
add
test
clc
add
add
add
xbegin
mov
repz
cmp
clc
pop
fcmovne
push
stos
jno
add
clc
scas
sub
clc
lret
add
imul
arpl
add
lret
pop
addr16
mov
insl
sub
sar
inc
add
mov
out
push
jb
add
fadd
clc
or
or
cld
fbstp
cmp
clc
aas
cmp
add
add
xbegin
add
push
add
cmp
add
ret
clc
imul
test
add
and
add
add
mov
clc
or
xor
mov
add
push
dec
sar
js
add
adc
add
or
jl
clc
popa
add
incb
movsb
clc
push
xor
add
or
and
push
pop
jge
jne
clc
mov
clc
popa
add
cmp
xchg
pusha
add
mov
sahf
mov
clc
outsl
inc
add
fdivs
pop
jg
add
aad
shl
pop
clc
xor
add
pop
xchg
lea
int3
jg
mov
ds
push
clc
sbb
add
inc
clc
push
sub
sar
sar
rorb
add
sub
and
add
ret
in
inc
add
push
ljmp
and
xchg
out
ja
clc
jae
add
clc
inc
add
sub
push
lods
xlat
mov
push
in
lcall
push
cmpsl
clc
inc
clc
ficoml
adc
inc
clc
aad
add
pandn
add
std
loop
inc
clc
cmp
arpl
add
jl
jge
sub
notl
movsb
clc
push
add
sbb
out
add
add
add
clc
mov
mov
cmp
clc
je
clc
cmp
dec
loope
sti
leave
xor
add
cs
add
ret
clc
pop
fisttpl
and
add
adc
add
cmp
adc
clc
mov
xabort
imul
add
or
clc
test
ds
test
or
push
cwtl
cmp
clc
insl
frstor
add
clc
cmp
dec
mov
clc
adc
jp
jle
stc
cmp
movsl
clc
data16
xchg
push
pop
ss
clc
dec
inc
add
sahf
add
add
add
clc
stos
fnsave
int3
insl
hlt
and
inc
add
rcr
test
test
jge
push
or
call
clc
and
add
pop
mov
in
repnz
sub
add
fwait
ds
push
clc
lret
xchg
or
fistpll
repz
sti
sbb
add
inc
add
test
cwtl
sub
add
fdivr
and
add
stos
cmc
dec
xchg
jp
imul
icebp
add
jne
lods
cmp
test
mov
sar
clc
stc
fmull
add
or
lods
push
clc
data16
aad
clc
xabort
or
and
add
adc
add
cli
gs
xchg
add
cmp
mov
add
stos
loope
cmpsb
clc
scas
inc
add
xor
add
add
je
mov
lret
pop
mov
add
cmpsl
clc
pusha
add
push
add
aas
cwtl
cmp
pop
and
add
into
int
cltd
mov
clc
in
int
cltd
into
test
clc
push
inc
add
push
clc
pop
in
in
ljmp
clc
in
mov
pushf
xabort
clc
scas
or
pop
stos
sbb
add
pop
cmp
add
xchg
mov
stc
xor
xabort
clc
jns
pop
out
dec
push
add
std
out
aaa
pop
or
and
add
xor
add
clc
mov
and
add
clc
rclb
pop
sbb
mov
outsb
and
pop
jg
xor
add
and
add
ljmp
add
mov
add
and
add
add
dec
xchg
lahf
xchg
dec
or
and
add
flds
add
mov
ja
aas
jnp
clc
lods
clc
sbb
rclb
add
push
xor
add
add
add
call
pop
out
insl
fstpt
mov
clc
scas
es
jmp
add
add
clc
cmpsb
clc
das
dec
lea
add
add
test
cmp
sbb
ds
clc
ret
clc
and
add
test
iret
rorl
cmpsl
clc
in
sub
clc
and
add
push
es
loop
or
testl
xchg
xchg
fwait
push
add
jne
add
jmp
pop
inc
add
sbb
clc
dec
sbb
into
cmpsb
clc
dec
stos
nopl
add
outsb
vcomiss
clc
adc
mov
add
lods
data16
push
add
mov
add
mulb
add
or
out
cmp
clc
jnp
test
clc
test
lret
add
jbe
sbb
and
lock
mov
cmp
sbb
or
outsl
cmp
lods
pusha
add
dec
pop
jnp
mov
clc
scas
xlat
jge
inc
add
cmp
cmp
ret
push
ljmp
shl
or
mov
ja
lods
lahf
pop
outsb
lret
mov
clc
or
mov
inc
add
cmp
clc
push
push
xor
stc
jns
add
mov
jp
clc
pushf
mov
add
cmpsb
clc
int3
ja
dec
cld
jo
add
mov
or
clc
mov
adc
add
cs
xabort
fstp
inc
add
add
add
add
insb
add
or
fwait
sar
xchg
cmp
jmp
xbegin
mov
cmp
cli
das
mov
and
add
pcmpeqd
cmp
clc
clc
mov
add
int
mov
mov
ret
clc
jne
adc
add
push
xchg
and
add
add
add
clc
pop
ds
add
sbb
clc
in
int3
cmp
add
add
add
sbb
sub
das
pop
xchg
sar
mov
add
gs
or
clc
dec
bound
add
clc
jmp
mov
dec
xor
pop
clc
insl
mov
pop
push
add
xor
add
xor
add
gs
dec
sbb
jae
add
jge
ret
cmp
add
outsb
cmp
adc
jbe
insb
dec
out
stos
stos
outsb
push
es
xchg
inc
clc
rclb
xchg
mov
mov
add
imul
clc
dec
jle
pop
fisubrl
add
imul
test
dec
cmp
dec
data16
cltd
adc
add
inc
add
inc
clc
es
rcrl
clc
mov
clc
xor
add
add
add
mov
das
xchg
cmp
sbb
add
push
add
stos
movsl
clc
or
inc
clc
mov
push
add
lret
sub
sbb
clc
sub
shr
je
clc
bound
add
ret
cmp
test
lret
dec
cmp
out
jo
add
pop
inc
add
cmp
fisubs
add
popa
add
xchg
jnp
add
mov
mov
shlb
loop
dec
js
clc
push
nop
lods
clc
fdivs
clc
cmp
add
add
clc
popa
add
inc
add
xor
add
int
clc
xchg
and
add
aad
xor
add
addr16
pop
dec
mov
cmpsl
clc
sar
add
sar
jnp
in
adc
add
add
hlt
mov
and
add
dec
outsl
fldl
add
sub
aaa
cwtl
mov
jg
add
movsb
clc
scas
jle
iret
adc
add
aas
pop
or
clc
ljmp
mov
xchg
fcompl
clc
je
xchg
adc
add
add
xor
add
xchg
in
fwait
sub
test
stc
test
jb
add
cmp
aaa
mov
clc
cld
jle
cmpsb
clc
pop
bound
add
jmp
add
in
and
add
add
rorl
lret
pushf
cld
inc
add
cmc
in
cmp
mov
clc
dec
jne
add
xchg
das
shrl
push
cmp
clc
jo
add
clc
adc
add
clc
cmp
gs
xabort
clc
daa
clc
inc
add
adc
add
into
aas
test
test
add
push
sub
add
mov
clc
dec
push
add
loop
add
jl
clc
xchg
mov
or
clc
mull
add
adc
scas
jbe
add
add
scas
lcall
add
clc
pusha
add
and
cmp
add
popf
shl
clc
lock
clc
cmp
add
clc
mov
mulb
add
xor
add
je
test
xor
add
sar
add
jmp
clc
call
ret
clc
mov
xbegin
mov
clc
mov
fdivp
loopne
scas
push
add
cmp
enter
fnstenv
jl
out
mov
add
pushf
xchg
dec
nop
mov
ja
or
ss
jo
add
orps
imul
mov
push
jge
pop
jl
or
mov
pop
or
adc
add
and
add
sbb
add
pop
ss
jmp
sti
lea
sub
push
add
mov
loopne
lock
jb
add
add
clc
xor
add
lret
stos
or
add
icebp
ja
push
xor
add
or
clc
cmp
mov
add
add
add
mov
aad
pop
clc
pop
dec
mov
add
fildl
push
add
jns
add
push
or
add
mov
lock
and
add
add
inc
clc
xlat
gs
out
int
pop
xor
add
push
add
push
idivb
add
push
inc
clc
es
mov
mov
add
add
inc
add
cmp
jge
sub
pop
enter
push
add
dec
movsl
clc
mov
add
add
push
add
divb
jae
add
cld
shrb
ss
in
lahf
xchg
popf
sbb
into
daa
clc
clc
cmp
clc
lods
test
pmaxsw
stos
xor
adc
daa
clc
push
inc
clc
push
push
push
jae
add
stos
sub
clc
hlt
ljmp
rolb
clc
mov
adc
add
inc
clc
insb
stc
loopne
cs
aad
test
imul
add
add
add
cmp
clc
jp
nop
cld
push
lea
cmp
mov
add
outsb
popf
cmp
add
mov
add
clc
dec
xchg
pop
das
pop
mov
clc
mov
cmp
clc
xchg
cld
sub
mov
sarb
fidivl
add
mov
aam
clc
push
add
push
add
aas
jmp
dec
mov
clc
cmp
jb
add
aas
xchg
xchg
data16
push
jo
add
add
xor
add
mov
mov
clc
xor
add
clc
jecxz
cmp
cmp
clc
lahf
test
in
jl
pop
jbe
push
add
lahf
dec
sahf
adc
cmpsl
clc
add
add
inc
add
int3
popf
dec
addr16
push
cmc
dec
scas
mov
clc
clc
xchg
scas
stos
sbb
or
mov
add
aad
and
cs
lods
push
add
daa
clc
mov
inc
add
pusha
add
mov
test
and
in
sar
add
repz
add
xchg
sar
loop
sbb
push
hlt
mov
add
cmp
stos
data16
lahf
loop
or
clc
out
cli
inc
clc
pop
push
mov
add
push
bound
add
clc
mov
div
cli
sti
in
mov
add
loop
adc
add
imul
add
clc
mov
roll
add
clc
lret
fs
nop
sub
jecxz
jge
add
gs
data16
mov
mull
inc
add
sub
xlat
lcall
in
adc
add
sti
ljmp
pusha
add
int3
aam
add
sahf
enter
add
int
add
xlat
sbb
cmp
cmp
xor
add
loop
ds
push
push
out
hlt
loop
setbe
add
std
jbe
and
add
mov
pop
adc
movsl
clc
mov
mov
sbb
inc
clc
mov
jmp
add
addr16
sub
clc
cmp
clc
push
mov
jl
add
cltd
pop
data16
stos
das
inc
clc
add
add
jne
add
jnp
out
pop
aam
clc
imul
add
add
add
clc
push
add
ficomps
add
ficoml
add
xchg
test
clc
lea
cmp
clc
aad
outsb
cmpsb
clc
or
cmp
pop
outsb
cmp
test
out
movsb
clc
jbe
mov
add
data16
in
push
lcall
sub
xlat
inc
clc
cmp
fs
mov
aas
and
clc
xchg
outsl
clc
add
add
add
cwtl
xbegin
clc
mov
je
enter
mov
fdivrs
iret
jo
add
add
nop
mov
inc
clc
pop
pop
xor
add
add
add
outsl
mov
add
mov
sahf
jb
add
add
lods
sbb
clc
push
clc
and
add
push
test
push
or
test
loope
dec
jmp
cld
jbe
adc
add
add
int
mov
loope
push
xor
add
stc
xor
mov
jo
add
jb
add
jae
add
add
adc
add
add
sbb
mov
mov
jbe
add
add
aam
das
sahf
xchg
gs
push
call
xchg
mov
mov
push
add
sahf
jl
and
mov
test
mov
clc
addr16
clc
push
test
pop
clc
repnz
clc
sbb
xchg
sar
sub
add
mov
add
loopne
fdivl
add
je
stc
sbb
lods
and
add
fs
outsl
leave
cwtl
push
push
add
add
mov
mov
add
pop
xchg
out
xchg
shlb
pop
mov
add
in
sar
add
pop
or
add
add
or
add
mov
add
repz
dec
xchg
jge
add
push
add
aaa
push
mov
push
clc
xchg
mov
add
out
addr16
cs
sub
rcrl
call
fldl
mov
cmp
insb
push
add
test
aas
repz
add
mov
push
xchg
sbb
clc
cmp
add
mov
clc
dec
ja
clc
addr16
mov
clc
fiadds
pop
mov
clc
cmp
jl
clc
data16
cld
es
fsubs
add
push
clc
xchg
rcr
cld
push
jmp
nop
jmp
test
jecxz
jl
addr16
push
gs
inc
add
push
add
add
add
clc
iret
ja
mov
daa
clc
paddusw
fwait
cmp
or
sbb
pop
clc
xchg
and
clc
mov
add
add
add
push
add
out
adc
add
or
iret
or
sar
cmp
clc
sbb
push
add
dec
inc
clc
jae
add
daa
clc
jb
add
fsubrs
es
add
addr16
jle
add
rcrl
add
inc
clc
stc
dec
jae
add
add
xchg
mov
movsb
clc
pop
cmp
fs
jmp
jno
add
add
clc
outsl
xor
add
add
jns
pop
icebp
aaa
dec
aam
adc
add
aaa
xor
xchg
pop
scas
sub
in
lcall
mov
clc
mov
jle
clc
xor
add
pop
lock
pop
adc
add
lods
pop
sti
out
jae
add
add
cmp
aad
cmp
and
add
outsb
into
pop
lahf
cli
mov
inc
add
push
push
pop
add
inc
add
add
cmc
ljmp
xor
add
mov
add
mov
mov
sbb
cwtl
inc
add
test
and
add
inc
clc
ficoml
clc
call
add
out
mov
lret
insb
loopne
dec
int
add
es
and
add
clc
xchg
pop
jmp
xor
add
push
sbb
insl
xabort
xor
push
add
pop
sarl
stos
fs
lock
ds
pop
cmp
add
xor
add
xchg
mov
addr16
jmp
add
mov
ja
push
mov
into
inc
add
mov
inc
clc
xsaveopt
add
sbb
ds
clc
imulb
mov
sub
clc
arpl
add
dec
cmp
sbb
push
mov
or
xabort
add
dec
or
add
mov
dec
mov
add
stos
pop
mov
mov
and
add
clc
push
xchg
pop
cmp
clc
cwtl
jae
add
fisubrs
adc
add
pop
clc
data16
mov
imul
in
jno
add
aam
xchg
cmp
lret
dec
push
test
jns
clc
daa
clc
and
add
jns
pop
shll
gs
fldl
sub
add
sbb
clc
push
lcall
add
test
cmc
jl
adc
add
add
adc
add
fisubrl
push
add
pop
inc
add
sbb
push
add
cmpsl
clc
addr16
sbb
add
xchg
lahf
cmp
add
inc
clc
sti
mov
push
clc
shlb
add
mov
jl
stos
sar
cmp
shll
cs
mov
inc
clc
jmp
cmp
int3
push
sbb
daa
clc
push
sahf
push
add
outsb
shll
add
cmp
es
or
clc
aas
pop
sbb
clc
push
add
imul
mov
clc
scas
cmp
add
loop
sbb
repz
push
clc
jmp
je
clc
stos
inc
add
adc
push
cmp
clc
cmc
cmp
mov
clc
xor
add
loopne
push
mov
clc
aaa
push
add
aas
jecxz
adc
add
out
jne
clc
sbb
add
cmp
clc
cmp
mov
clc
scas
insb
insb
fists
add
icebp
or
add
add
push
add
movsl
clc
add
add
clc
pop
clc
pop
clc
mov
clc
cmp
daa
clc
or
add
jp
add
cmp
mov
clc
jo
add
clc
pop
data16
mov
add
push
add
jecxz
cld
mov
clc
movsb
clc
xor
add
add
clc
inc
add
incl
sbb
add
test
mov
jl
jae
add
jp
add
mov
sub
add
clc
icebp
je
clc
push
add
xchg
jbe
or
add
mov
clc
scas
xor
add
add
clc
lea
clc
pop
jne
add
xor
add
and
add
clc
ret
clc
pop
dec
sub
add
sub
add
mov
sbb
je
gs
out
cmp
add
clc
test
sar
int3
xor
add
cmp
adc
add
add
dec
mov
int
fisttps
or
add
jge
clc
aaa
mov
add
clc
dec
mov
add
scas
mov
es
stc
nop
push
pop
push
test
xchg
jnp
add
xchg
jbe
mov
clc
clc
clc
push
push
clc
int
clc
and
cltd
aad
dec
mov
clc
or
lcall
fidivrs
and
or
clc
out
sbb
add
clc
leave
xchg
push
imul
adc
add
clc
loopne
in
xor
add
push
add
add
lea
add
out
mov
mov
jecxz
daa
clc
ss
hlt
mov
mov
lcall
add
add
add
adc
mov
clc
or
clc
pushf
mov
and
add
pop
xchg
repnz
adc
add
popa
add
pop
iret
inc
clc
push
dec
in
push
add
add
add
bound
add
clc
jmp
add
sar
icebp
test
add
and
push
imul
clc
cmp
pop
jmp
mov
clc
pusha
add
mov
clc
clc
pushf
test
jecxz
cld
dec
test
repnz
aaa
repz
add
cmc
xabort
inc
add
push
push
sti
jmp
cmpsb
clc
jl
ret
clc
push
jmp
std
shrb
clc
gs
dec
mov
imul
xchg
pop
mov
jge
shrl
and
add
dec
outsl
loope
mov
add
and
add
clc
cmp
clc
mov
clc
int3
dec
lcall
hlt
stc
scas
mov
add
clc
jb
add
pop
dec
or
clc
in
sbb
dec
test
shlb
add
xchg
adc
add
mov
in
scas
mov
jg
fwait
movsb
clc
ss
clc
dec
or
mov
clc
sti
push
addr16
mov
push
and
add
add
jb
add
in
adc
in
mov
cli
clc
mov
add
or
clc
push
sahf
xchg
add
add
add
push
or
mov
repz
add
in
popa
add
adc
add
sbb
fcoml
xbegin
stos
ja
ljmp
sbb
popf
fisubrl
add
cmp
lea
dec
out
mov
clc
mov
clc
aad
push
add
sub
jae
add
ljmp
push
pop
push
clc
inc
clc
mov
xor
in
clc
jno
add
push
add
pop
sub
or
add
data16
mov
adc
imul
imul
inc
clc
in
fldcw
clc
sub
pusha
add
xchg
cmpsl
clc
xchg
leave
mov
jl
add
fwait
dec
lcall
mov
rolb
mov
fs
aam
sbb
mov
icebp
or
cmp
fldenv
aad
outsl
in
adc
add
pop
cmc
clc
push
add
inc
clc
lods
ffreep
clc
or
stos
dec
gs
pop
push
add
das
int3
push
add
or
clc
adc
add
add
jl
hlt
jle
clc
add
mov
clc
pop
loop
mov
jnp
mov
jecxz
enter
clc
fsts
add
clc
in
sbb
xlat
jg
lock
xor
clc
jo
add
cli
fwait
movsb
clc
add
add
add
pusha
add
pushf
lahf
inc
add
mov
clc
ret
clc
dec
inc
add
out
pop
mov
je
ss
cwtl
mov
add
minps
push
mov
add
loopne
cmc
aam
clc
fldt
adc
clc
fwait
push
ds
add
mov
mov
add
lahf
stos
xchg
dec
ss
wrmsr
add
stc
jne
insl
mov
out
popa
add
insb
mov
clc
mov
sub
clc
jno
add
fsubrs
stos
mov
testl
repnz
clc
testb
clc
popa
add
mov
std
or
mov
enter
add
jp
add
or
mov
clc
out
lea
jne
pop
push
adc
add
movsl
clc
leave
and
add
jge
sub
dec
js
inc
add
cmp
lock
add
mov
add
cmp
ds
add
clc
sub
mov
addr16
addr16
rcrb
cmp
adc
push
mov
push
ljmp
xchg
fnsave
clc
adc
add
push
mov
in
fcmovne
cwtl
insl
mov
out
and
add
and
push
add
pusha
add
leave
add
add
add
add
add
and
clc
mov
scas
lahf
lahf
sar
imul
pop
frstor
add
imul
clc
inc
add
fstp
push
add
push
cmpsb
clc
adc
add
mov
scas
int
clc
or
je
in
mov
xchg
xor
add
xchg
sub
in
cmpsl
clc
cmp
add
dec
adc
add
add
ja
or
add
adc
add
xchg
xchg
pop
cmpsb
clc
ficomps
xor
add
add
lahf
pop
clc
lea
jmp
in
cli
mov
cmpsl
clc
call
and
cmp
add
fdivrl
sbb
push
add
hlt
sbb
jmp
ljmp
clc
das
xchg
clc
jge
clc
mov
dec
or
add
add
mov
repnz
aad
add
aaa
aaa
rolb
clc
sar
inc
add
mov
mov
pop
add
add
lods
mov
mov
cmp
add
push
dec
or
std
and
xchg
test
add
mov
xchg
insb
ja
push
add
cmpsl
clc
add
sub
mov
clc
sti
arpl
add
jp
or
pop
sar
add
xabort
clc
sbb
adc
leave
movzbl
pop
clc
insb
and
add
add
cmp
clc
pop
das
je
jbe
push
je
add
ficoms
add
notb
add
mov
push
pusha
add
mov
out
cmp
add
or
add
push
add
loopne
push
lods
shrl
clc
or
add
add
sahf
aam
sub
mov
aad
add
outsb
jno
add
mov
cltd
lcall
clc
ret
add
cmpsb
clc
push
dec
or
add
cmp
push
popl
negl
loop
lods
sub
clc
cmp
add
repnz
add
ja
je
add
add
clc
pop
push
add
jl
imul
ljmp
add
addr16
out
out
outsl
mov
clc
adc
and
add
repnz
jnp
nop
push
popl
clc
lret
es
push
or
enter
fs
lahf
jmp
pop
sti
pusha
add
dec
pop
cs
in
pop
hlt
outsl
ja
push
cmp
clc
mov
mov
add
push
xchg
sbb
pop
clc
or
add
dec
and
fdivs
inc
add
xor
jmp
aaa
push
push
xor
add
clc
imul
decl
sahf
add
add
leave
mov
stos
inc
add
into
or
clc
daa
clc
fnstcw
data16
inc
add
cmpsb
clc
clc
pop
clc
test
clc
js
pop
adc
add
test
add
into
popf
jge
xchg
add
add
push
add
cwtl
inc
clc
int
out
push
pop
sub
aad
fisubrs
sub
int
dec
mov
or
das
mov
sub
add
insl
clc
sub
out
xchg
ficoml
add
add
sub
jae
add
adc
add
add
add
clc
hlt
cltd
lea
clc
sub
rsqrtps
add
sub
add
xlat
and
sbb
mov
into
cltd
fadds
lods
jo
add
cmp
mov
lret
lret
pop
data16
push
add
add
loopne
inc
add
mov
clc
filds
add
clc
and
clc
ficomps
mov
negb
clc
std
push
cmp
clc
lret
add
loope
arpl
add
inc
add
mov
inc
add
xlat
loop
xchg
mov
dec
or
pop
mov
mov
pop
pop
mov
mov
fisubrl
clc
scas
mov
jnp
pop
and
jmp
add
push
mov
dec
fcompl
mov
add
xor
add
clc
enter
xlat
push
dec
call
push
cld
mov
pusha
add
fisttps
pand
clc
aam
lret
add
add
adc
pop
clc
push
stos
jmp
pusha
add
int3
sbb
rorl
add
sar
push
lea
add
add
hlt
inc
clc
vcmpps
test
inc
add
popf
inc
add
fisubl
clc
lret
scas
jb
add
clc
jnp
mov
das
daa
clc
gs
stc
sbb
clc
pop
xor
add
add
cmp
clc
sti
mov
push
add
popl
mov
jge
outsb
or
dec
es
pop
aad
clc
inc
clc
jo
add
xchg
dec
lock
add
add
sbb
clc
mov
fs
faddp
clc
inc
add
mov
int
out
mov
add
add
addr16
cs
add
es
jg
clc
and
out
jno
add
rcl
ret
clc
pmuludq
add
push
and
add
cmp
lcall
add
push
or
cmpsb
clc
sarb
push
add
sar
mov
inc
clc
and
add
mov
mov
push
jnp
sub
cmp
xchg
je
sarl
sahf
inc
add
dec
pop
dec
into
gs
frstor
clc
dec
mov
mov
or
clc
jbe
inc
add
fmulp
stos
mov
icebp
sub
sub
sbb
repz
das
sub
fistpll
gs
cmpsl
clc
pop
lods
imul
dec
push
add
cmp
clc
sahf
test
stos
or
sbb
jae
add
iret
cmp
hlt
outsb
xlat
repnz
add
cmp
add
add
mov
add
out
jle
xchg
sub
adc
add
sbb
fcompl
add
in
xchg
inc
add
add
add
jp
mov
add
clc
jl
mov
adc
add
xchg
test
pop
fisubl
lods
mov
stc
pop
push
cmp
scas
lcall
cmp
es
adc
xor
add
add
add
das
cmpsb
clc
mov
adc
add
clc
data16
push
add
push
add
jmp
lret
clc
stos
pop
clc
xchg
pop
in
pop
jno
add
dec
int3
mov
dec
or
in
mov
clc
in
enter
into
es
lcall
js
testb
add
fcoml
add
xlat
flds
add
and
add
clc
std
rorl
jg
jle
push
add
sbb
add
add
imulb
clc
hlt
mov
add
push
pop
dec
iret
cmp
jmp
clc
call
insl
repnz
pop
and
add
add
xchg
orps
roll
ret
clc
push
mov
leave
sub
scas
aaa
cmp
sti
mov
add
ja
scas
sub
lods
dec
in
add
add
mov
push
add
insl
mov
aas
cld
inc
add
enter
jo
add
pop
shl
pop
test
lcall
add
popa
add
xchg
mov
sbb
clc
daa
clc
xchg
cmp
mov
clc
lods
and
add
test
hlt
mov
clc
and
add
out
or
fstpl
lock
xchg
cwtl
mov
mov
clc
and
add
adc
add
add
adc
add
pop
in
fcmovne
imul
repz
mov
rorl
jne
lahf
inc
add
sub
clc
fimull
outsb
sbb
dec
push
add
clc
xor
add
add
and
clc
adc
clc
test
dec
loopne
movsl
clc
testb
int
push
add
ret
clc
sbb
cmp
sar
pop
mov
clc
pop
sbb
add
clc
and
add
clc
add
add
lret
add
add
add
mov
sub
clc
cmp
clc
xchg
pop
pop
gs
arpl
add
cs
mov
das
ss
ret
loopne
jae
add
clc
sbb
cmp
gs
pop
push
fstp
ja
pop
clc
int3
rcrb
pop
xchg
jl
jl
add
mov
sti
xchg
xor
add
cmp
lahf
dec
fcoms
add
mov
add
mov
fistl
add
pusha
add
jns
lret
clc
xchg
insl
mov
clc
jp
clc
pop
mov
clc
and
add
cmp
hlt
scas
inc
clc
add
sub
data16
sbb
lods
sbb
clc
pop
mov
xor
add
add
sbb
cmp
pop
mov
clc
nop
pop
push
in
fnstsw
clc
xchg
jo
add
enter
clc
ss
clc
ljmp
mov
add
clc
out
sahf
in
push
jecxz
xor
add
add
out
nop
sbb
clc
inc
add
cltd
clc
mov
imulb
int
clc
xor
clc
and
add
scas
sarb
mov
adc
fbstp
clc
cs
fdivr
aaa
popa
add
lods
loopne
mov
or
mov
gs
mull
mov
leave
jb
add
mov
clc
aas
lock
imul
pop
clc
jmp
clc
sub
clc
ljmp
add
clc
sub
adc
add
push
cmp
sub
add
clc
test
add
stos
nop
mulb
jns
imul
cmp
sub
pusha
add
jl
aad
lcall
leave
jns
insl
pop
fisttpll
add
xor
add
out
push
ss
loope
leave
ds
pop
mov
add
scas
dec
test
adc
jo
add
movsl
clc
in
shrb
popf
loope
enter
add
enter
jno
add
clc
xor
sbb
scas
in
pop
jno
add
mov
dec
fiadds
cs
mov
clc
cmp
add
mov
add
data16
inc
clc
gs
xchg
and
and
add
add
jbe
add
loopne
mov
pop
mov
add
ret
clc
in
pop
cwtl
stc
clc
push
add
outsl
jmp
mov
cli
mov
push
xor
add
xchg
push
dec
test
add
dec
and
add
add
xor
sar
clc
scas
push
mov
insl
cmp
mov
add
sbb
clc
stc
clc
fs
pushf
mov
add
add
inc
add
mov
mov
xlat
push
add
dec
xchg
shlb
add
clc
push
movsl
clc
jmp
clc
lret
push
gs
mov
add
cmp
push
dec
cmp
es
fs
pop
out
inc
clc
movsb
clc
xchg
out
hlt
mov
add
xchg
mov
clc
jo
add
add
std
push
add
sub
in
stc
dec
cmpsl
clc
xchg
cmc
out
or
dec
sub
add
lret
rdseed
cmp
pop
inc
clc
pushf
lods
dec
repnz
clc
movsb
clc
xor
add
clc
adc
add
sar
clc
mov
ljmp
clc
mov
nop
cmp
clc
cwtl
stos
dec
scas
das
lods
cli
mov
cmc
into
mov
in
pop
pushl
add
sbb
mov
jo
add
push
add
cwtl
out
sti
sbb
sub
dec
mov
add
cmpsl
clc
pop
sub
and
add
out
in
jno
add
clc
and
imul
add
jmp
fimuls
fsubrl
enter
hlt
push
add
mov
popa
add
adc
add
cmp
sub
add
clc
je
clc
inc
add
jnp
clc
cmc
dec
ret
clc
xchg
sbb
add
add
test
clc
xor
add
jno
add
mov
cmpsl
clc
and
add
push
push
add
mov
clc
clc
mov
js
das
xor
pop
jecxz
cmp
adc
add
pop
push
cmp
sar
xor
add
aam
gs
arpl
add
add
repz
inc
add
gs
dec
dec
xor
add
add
mov
and
add
add
add
and
add
clc
dec
cmp
movsb
clc
aad
hlt
popf
stos
insl
dec
aam
xchg
adc
add
cmc
adc
add
mov
add
cmp
fs
int
add
fisubrs
shrb
dec
jmp
adc
add
clc
outsl
mulb
push
clc
lods
cwtl
add
add
add
mov
aad
clc
sar
push
pop
or
xbegin
add
add
cli
xchg
xchg
loop
mov
push
add
pushf
insl
ffreep
clc
bound
add
add
push
clc
dec
scas
or
outsl
addr16
dec
dec
or
or
clc
fs
loope
dec
xchg
stos
fildll
push
clc
popf
xchg
mov
push
and
add
clc
test
clc
jg
jle
push
popf
mov
add
leave
movsl
clc
push
push
add
in
nop
xor
add
pop
mov
add
add
pop
int
ret
clc
mov
pop
xor
add
clc
inc
add
cmp
clc
push
clc
push
clc
loopne
mov
add
jg
daa
clc
cs
ret
clc
push
add
mov
jae
add
add
sar
clc
pushf
inc
clc
test
sbb
popa
add
jmp
mov
clc
lcall
jo
add
dec
cmp
add
daa
clc
jae
add
int3
loope
inc
add
sbb
add
clc
add
add
dec
dec
jecxz
cmp
add
cmc
xadd
je
cmpsb
clc
inc
add
imul
add
dec
adc
add
add
enter
and
add
clc
pop
es
sahf
scas
or
add
enter
add
xchg
loop
mov
clc
dec
ljmp
jo
add
cmp
mov
iret
ja
call
inc
clc
imul
sbb
add
or
add
ficoml
lret
enter
add
sbb
pop
or
iret
repz
add
cmp
add
mov
clc
dec
hlt
adc
add
cmp
clc
cmp
clc
and
add
add
clc
xchg
cmp
xchg
dec
push
add
fisttps
ds
add
into
aam
cmc
imul
cmp
decb
add
pop
into
xlat
adc
das
icebp
int
mov
pushf
cmp
push
pop
push
add
inc
clc
mov
clc
push
xchg
or
mov
into
mov
fcomps
sbb
cmp
cwtl
adc
add
mov
in
push
add
aad
push
add
jne
push
fwait
jmp
clc
enter
clc
inc
add
mov
cli
add
add
dec
cwtl
or
add
add
xor
add
add
sbb
fs
cltd
lods
xchg
imul
fwait
call
cltd
sar
mov
clc
lods
cmp
jbe
into
inc
add
mov
leave
xchg
add
ja
ret
clc
test
fimuls
mov
mov
mov
dec
jae
add
neg
push
out
test
cmc
push
lock
xor
add
jb
add
add
jo
add
lret
sub
sar
clc
mov
cmp
repnz
rorb
imul
add
add
lods
lods
cs
fxch
sbb
in
pop
add
add
test
add
lret
or
push
pop
sahf
dec
push
pop
sbb
aas
push
call
clc
cld
repz
sbb
add
add
dec
cmp
aaa
fbld
add
add
test
lock
xbegin
push
add
pop
clc
mov
mov
jno
add
or
push
clc
lea
mov
sar
add
enter
dec
jno
add
shlb
add
test
leave
in
cld
jecxz
mov
aas
fstps
sbb
clc
adc
in
xchg
lahf
xor
add
mov
incb
add
add
pop
fdivrp
mov
clc
repnz
ficomps
jmp
add
add
jp
je
pushf
mov
add
adc
add
add
add
push
xlat
add
add
clc
adc
add
cwtl
mov
movsb
clc
js
xchg
lock
dec
mov
sub
clc
mov
fdivs
sar
add
lahf
jp
int
inc
clc
or
int3
es
or
add
clc
mov
or
pop
inc
add
push
sbb
jnp
fs
push
add
std
testb
xor
add
sti
loop
inc
clc
lods
push
add
ret
clc
clc
dec
add
add
lods
xbegin
inc
add
in
jnp
or
add
fsubrs
push
dec
push
fisttps
clc
inc
add
and
add
cmp
clc
loopne
sub
xchg
mov
add
jae
add
clc
in
aad
sbb
movsb
clc
push
int3
jmp
inc
add
inc
clc
cmp
push
sbb
add
out
sub
add
ljmp
aaa
in
sub
ds
js
or
mov
clc
out
out
fnsave
ljmp
push
clc
movsb
clc
cmp
clc
xchg
cmp
clc
lea
add
clc
mov
cmpsl
clc
gs
mov
gs
xchg
sbb
mov
int3
cmp
mov
add
es
mov
jg
pushf
cmp
dec
pop
outsb
and
xchg
in
mov
push
add
aam
and
add
push
fcmovb
clc
jmp
pop
cmc
pop
sbb
add
sahf
cmovnp
sbb
dec
cltd
xor
mov
out
mov
repz
clc
pop
mov
adc
add
or
add
ds
xchg
xor
add
add
push
add
pushf
cmp
add
shl
xchg
pop
cwtl
test
add
jmp
paddusb
cmp
ret
clc
iret
and
add
clc
mov
and
dec
push
add
call
xlat
xchg
lods
pop
or
add
xchg
pop
clc
xor
add
add
add
add
in
ret
call
clc
js
mov
outsb
dec
insb
pushf
lcall
clc
sar
add
pop
leave
or
push
aas
and
add
jle
cld
in
cmp
lcall
mov
add
int3
in
and
jo
add
add
add
xor
add
clc
clc
sub
in
adc
add
imul
and
add
popa
add
lcall
add
clc
lcall
clc
inc
clc
out
mov
add
test
sar
lock
fimull
inc
add
cmp
xlat
sub
addr16
pop
clc
pop
mov
add
add
add
mov
stos
addr16
sbb
cmc
leave
sub
clc
pop
js
fistpl
mov
jo
add
sub
clc
jmp
dec
es
pop
sarl
add
add
rcll
add
mov
adc
mov
rcrb
das
push
xor
add
xchg
loope
sub
lock
inc
clc
sub
out
icebp
xor
add
clc
loopne
pop
cmp
add
ss
loope
sar
mov
scas
cmpsl
clc
push
add
scas
jns
add
ss
dec
cmpsb
clc
mov
add
push
pcmpgtd
pop
gs
xchg
mov
clc
loope
hlt
test
push
xlat
mull
pop
jmp
clc
mov
or
add
add
xor
add
add
add
add
add
clc
outsb
addr16
mov
jns
scas
jb
add
imul
add
add
dec
mov
out
shll
add
clc
inc
clc
xor
add
mov
mov
clc
cli
cmp
add
punpcklwd
add
icebp
dec
pop
dec
outsb
add
cmpsb
clc
daa
clc
pop
dec
fucomip
mov
mov
iret
shll
in
cmp
mov
add
jle
xchg
repnz
int3
cmp
clc
dec
lods
out
xabort
adc
add
mov
mov
pop
stos
xbegin
mov
adc
add
fs
lret
sub
pop
cmp
inc
clc
enter
aas
imul
clc
jnp
xchg
out
jge
and
cs
and
add
add
dec
icebp
sahf
mov
movsb
clc
cs
repz
push
add
inc
clc
cmp
clc
xor
add
xor
outsb
mov
out
movsb
clc
fcomps
mov
test
lret
clc
sub
outsl
mov
es
and
xlat
jb
add
push
clc
mov
inc
clc
je
cmp
or
xchg
stc
lret
add
add
add
add
mov
add
xlat
sbb
cmp
cmp
mov
clc
in
add
add
add
inc
add
out
sbb
push
add
into
and
clc
mov
mov
ficoms
add
lods
cli
add
add
scas
xor
add
clc
xchg
ss
adc
add
data16
divl
add
fst
ds
xchg
rol
clc
scas
gs
xchg
xabort
clc
jnp
es
xor
add
clc
inc
clc
aaa
cmp
add
jg
clc
dec
sub
cmpsb
clc
push
ret
clc
xchg
aas
jae
add
push
mov
jle
test
out
test
jl
ret
aad
std
std
icebp
fistl
add
cmp
mov
add
add
fcmovnu
int3
push
add
addr16
pusha
add
push
add
xchg
in
push
add
fwait
adc
add
jle
sub
clc
gs
lcall
pop
add
add
sbb
sahf
or
std
jnp
xchg
aaa
aam
clc
imul
add
movsb
clc
enter
call
fisubs
add
cmp
test
cmp
popa
add
test
add
adc
clc
jns
clc
or
mov
lock
push
lock
pusha
add
mov
testb
xbegin
sbb
add
cli
jns
add
sbb
mov
and
add
jne
out
testb
add
dec
mov
cmc
xor
add
add
nop
in
fisubrs
and
add
mov
faddl
add
insl
or
aaa
lods
xchg
ret
jmp
clc
add
add
sar
xchg
xor
add
pop
shll
add
loopne
jbe
clc
fdivl
add
into
in
test
sub
xor
add
add
xchg
push
mov
jg
add
ret
mov
inc
clc
or
add
clc
icebp
seta
ss
lea
mov
clc
jg
dec
or
bound
add
push
clc
fnstcw
mov
add
push
clc
ljmp
xchg
push
clc
aas
test
jg
clc
jecxz
jecxz
or
xchg
in
fs
outsl
mov
sbb
jno
add
xor
divb
mov
aaa
cmc
insb
out
xlat
cli
dec
test
sar
pop
pop
int
out
xchg
in
cli
hlt
pop
xbegin
cmc
or
jge
push
sar
lcall
pop
push
add
lret
fnstenv
inc
clc
and
add
mov
shlb
int3
xlat
mov
outsb
fwait
jns
mov
sbb
fstl
mov
add
add
add
push
add
outsb
insb
cmp
loop
pop
dec
jge
sbb
shrl
test
add
rclb
clc
add
add
mov
clc
mov
flds
adc
clc
cmpsb
clc
mov
scas
lret
mov
clc
sbb
and
add
mov
cs
xabort
lret
add
mov
cmpsb
clc
sub
cmpsl
clc
inc
clc
sarl
iret
sub
lret
ljmp
push
push
add
mov
stc
fnsave
add
xor
add
mov
add
cmp
clc
fsts
add
cltd
jno
add
push
clc
cmpsb
clc
in
sti
xchg
test
rcl
pop
mov
add
mov
add
add
clc
mov
fcompl
ficoml
sti
mov
add
hlt
into
add
add
sbb
js
sub
stc
xlat
mov
add
pop
sub
add
and
add
add
mov
pop
dec
in
in
inc
clc
xchg
or
add
shufps
loope
and
add
adc
add
lcall
sar
cmpsb
clc
pop
shr
xabort
add
ja
add
std
xor
add
add
int
clc
popf
pop
cmc
sub
sub
mov
sbb
into
xchg
daa
clc
cmp
mov
add
xchg
xchg
in
xchg
pusha
add
inc
clc
jmp
loopne
sbb
clc
incl
add
cmpsl
clc
pop
clc
lret
clc
adc
add
or
and
add
clc
push
add
add
add
add
add
add
sbb
or
ds
clc
popf
mov
testb
stos
rolb
cmp
clc
xchg
push
fcmovnbe
lcall
fnstcw
jle
add
and
ja
fidivs
outsb
cmpsl
clc
mov
add
inc
clc
and
xor
add
mov
hlt
scas
dec
aaa
cmpsb
clc
lcall
add
xor
pop
out
aas
add
add
imull
push
add
out
xbegin
rcl
add
add
add
add
fldt
add
mov
add
lahf
jae
add
pusha
add
leave
mov
data16
mov
clc
in
ds
clc
inc
clc
xor
add
jl
clc
jp
push
xbegin
imul
mov
stos
add
add
add
jg
jp
clc
jle
clc
mov
clc
push
in
inc
add
pop
jmp
adc
add
add
cmpsb
clc
nop
nop
xabort
add
popf
adc
add
xchg
or
cmp
jmp
aaa
in
cmp
clc
xor
add
push
pop
push
add
xor
clc
lcall
pop
xchg
mov
mov
stos
mov
imul
clc
clc
add
mov
add
add
add
add
fisubrs
popf
cmp
ss
nop
cli
and
pop
jne
sbb
mov
clc
xor
add
out
mov
adc
add
in
sub
xor
add
mov
sub
lea
add
sub
inc
clc
jnp
add
sub
clc
fucompp
in
inc
clc
stos
push
adc
add
inc
clc
sbb
arpl
add
add
rcll
outsl
jge
jmp
cmc
mov
mov
iret
icebp
fsubrl
and
add
add
add
stc
cmp
cmp
aam
sub
clc
fucomip
jns
mov
mov
out
push
push
add
push
dec
pop
cmp
clc
hlt
mov
data16
or
add
mov
mul
clc
mov
clc
rcrl
cmp
push
mov
and
clc
scas
cmc
call
bound
add
dec
mov
in
inc
add
fmull
loop
sbb
add
add
addr16
imul
fstps
ljmp
or
std
cmpsl
clc
xchg
xor
sar
adc
add
xchg
cmp
add
das
stc
es
ret
clc
popa
add
int
add
aas
mov
sar
clc
negb
mov
xor
add
jle
cmp
cli
inc
clc
test
cmp
clc
popa
add
mov
sbb
add
mov
clc
test
fisttpll
clc
mov
jns
xabort
scas
test
aad
into
leave
xabort
cmp
sbb
mov
in
mov
clc
test
movsb
clc
sbb
mov
xchg
push
add
rcl
jno
add
enter
jne
dec
mov
xor
movsb
clc
test
mov
dec
out
out
cli
or
push
aaa
insl
xor
add
cmp
sub
add
xchg
fsubrl
inc
add
cmp
dec
inc
clc
sub
xchg
mov
clc
jb
add
mov
lahf
add
mov
clc
xchg
mov
clc
mov
dec
aad
ljmp
and
add
clc
mov
clc
pextrw
shlb
js
add
push
xor
add
cmp
clc
and
add
add
je
push
inc
clc
hlt
mov
push
clc
push
clc
and
add
jmp
clc
lods
daa
clc
cmp
clc
sub
pop
sbb
clc
xor
add
mov
into
push
je,pn
pop
mov
clc
movsb
clc
jge
add
inc
add
rol
clc
inc
add
mov
pop
and
add
clc
push
loope
jle
add
loopne
std
dec
jno
add
add
push
inc
add
push
xchg
rcrb
fs
stc
mov
cmp
clc
or
daa
clc
mov
fdivp
stos
or
clc
pusha
add
xabort
popa
add
xor
add
das
jg
or
enter
pop
ljmp
leave
or
mov
add
lea
cmc
shll
clc
fldenv
or
into
repz
clc
testb
xchg
ffree
clc
fstps
push
nop
and
add
pop
daa
clc
gs
mov
clc
cli
mulb
aas
push
push
push
add
jle
idivl
test
pop
push
movsl
clc
shlb
add
or
push
pop
fadds
clc
mov
sbb
add
mov
clc
jmp
daa
clc
scas
leave
cmp
rcr
adc
add
repnz
mov
jne
stos
add
add
enter
jb
add
ds
mov
inc
add
push
cmp
std
jmp
clc
ljmp
and
add
xchg
mov
xchg
gs
push
clc
insb
and
add
mov
out
ja
mov
sbb
clc
adc
add
add
xchg
cld
mov
add
dec
sbb
daa
clc
repz
add
cmp
lret
add
add
dec
pop
sbb
fiaddl
add
adc
add
dec
push
clc
std
clc
imul
mov
clc
int3
pusha
add
mov
aaa
lods
aad
xchg
pop
cmc
lret
jne
inc
add
push
clc
jle
jbe
clc
out
aad
mov
xchg
and
add
sarl
test
add
xchg
cmp
mov
add
xchg
hlt
test
lahf
ret
clc
and
add
fcompl
xchg
mov
mov
ljmp
add
inc
clc
xor
add
jno
add
add
imul
add
aaa
mov
ret
mov
xor
test
push
add
adc
push
jae
add
clc
jae
add
clc
push
popl
add
fwait
es
stc
xor
inc
clc
lahf
clc
out
push
push
jb
add
clc
negb
clc
mov
xchg
mov
xchg
inc
clc
push
add
fildll
imull
clc
out
and
add
clc
in
or
clc
into
dec
mull
clc
or
clc
rorb
add
fucomip
ljmp
pop
cmp
add
cmp
clc
jmp
add
dec
add
add
xlat
int3
movsl
clc
push
iret
out
and
add
out
mov
loop
xlat
push
fnsave
add
mov
loopne
test
jmp
dec
int3
enter
xchg
int
add
mov
ficoms
mov
in
gs
or
clc
mov
outsb
sar
push
clc
movsl
clc
mov
push
dec
dec
out
jae
add
clc
repz
repnz
add
add
add
add
clc
mov
test
clc
cmc
push
add
loopne
xchg
mov
clc
inc
add
mov
clc
bnd
add
or
add
clc
insb
daa
clc
xor
add
clc
leave
mov
dec
jmp
sti
adc
add
dec
iret
cmc
xor
add
outsb
cli
xchg
in
enter
in
cmp
inc
add
push
add
cmp
add
mov
clc
adc
add
hlt
sub
add
sub
mov
sub
clc
push
clc
pop
cmp
clc
cmpsl
clc
sbb
clc
lea
add
jo
add
and
xchg
add
add
jle
clc
cld
mov
add
lea
xor
add
loope
clc
pop
stos
mov
push
mov
jmp
test
sub
in
or
lret
clc
jp
xchg
push
pop
pop
xchg
ds
add
scas
inc
clc
adc
add
add
xor
add
add
mov
jne
add
mov
jl
clc
or
dec
ja
lods
cmp
add
cwtl
addr16
sub
xor
jle
clc
xchg
out
pop
cwtl
test
add
mov
nop
pop
cs
test
pop
pop
ljmp
add
add
nop
cmp
je
mov
sarl
add
clc
jne
add
mulb
fstpt
add
mov
xor
add
sti
sub
aad
sbb
or
push
add
and
add
mov
add
addr16
jp
pushf
dec
jbe
jl
cwtl
push
clc
adc
push
add
dec
in
in
dec
aad
shlb
inc
add
stos
mov
stos
leave
pop
clc
clc
iret
je
and
add
clc
sbb
clc
pop
dec
push
xchg
xor
add
add
das
inc
clc
ja
push
fs
and
cli
inc
clc
or
out
repnz
pop
cmp
push
add
cmp
mov
mov
pop
clc
enter
add
clc
push
rcrb
inc
add
stos
jmp
pop
mov
add
cmp
cmp
add
adc
add
lret
jns
jns
sub
mov
clc
dec
scas
bswap
mov
jge
push
mov
xor
add
clc
mov
sub
clc
and
add
in
xor
add
pop
clc
pop
filds
add
inc
clc
fldenv
add
xchg
sub
add
imul
aam
add
outsl
imul
xchg
lret
clc
scas
dec
sbb
cmpsb
clc
ja
loop
aam
ljmp
jnp
xchg
jmp
xor
add
in
dec
cs
clc
push
clc
push
add
loope
jmp
add
pop
push
add
add
clc
sar
mov
clc
mov
in
jge
in
sti
inc
add
fstpl
add
add
jmp
clc
jge
ficoml
clc
xchg
pop
loopne
mov
clc
and
add
loope
fidivrl
in
fsubrs
and
add
loop
push
shll
mov
fs
outsb
es
cmp
lods
jmp
add
ret
xchg
cmpsl
clc
push
mov
cmp
clc
mov
clc
cli
push
add
stos
pop
adc
add
pop
fnstcw
cmp
repz
mov
clc
and
add
mov
gs
push
add
lcall
pop
pop
push
inc
add
movsl
clc
dec
or
add
ljmp
mov
add
pop
pop
gs
push
sub
xchg
mov
xor
add
dec
jg
sar
add
lock
out
idivl
sbb
clc
jne
imul
mov
dec
push
fists
jecxz
mov
add
mov
cs
xchg
in
inc
clc
or
mov
pop
xor
add
in
inc
add
nop
xchg
inc
clc
dec
call
xchg
stos
sub
fisubs
add
cs
push
and
add
repz
iret
or
lret
mov
in
icebp
sub
clc
xabort
add
cmpsb
clc
mov
clc
ljmp
int3
sahf
pop
sbb
clc
mov
clc
cmp
cmc
and
scas
ret
clc
rcrb
fildll
jl
clc
dec
std
mov
and
add
clc
ljmp
icebp
jp
xchg
mov
dec
std
push
add
cmp
jno
add
fxch
adc
add
add
add
add
adc
clc
loopne
cli
cmc
mov
cmp
ja
lret
pop
sar
mov
lods
loopne
stc
aam
clc
pop
clc
jne
clc
pop
sar
mov
imul
add
cmc
mov
push
stos
fs
das
insb
mov
xchg
mov
clc
add
add
clc
add
add
clc
push
add
mov
add
push
pop
add
add
clc
adc
add
into
dec
dec
xor
add
sbb
clc
lahf
mov
clc
push
or
ja,pt
sub
sbb
movsl
clc
push
add
aaa
xchg
jno
add
add
xchg
add
data16
daa
clc
jge
clc
shlb
add
add
lcall
add
xor
add
clc
push
test
pushf
push
lahf
xor
add
add
arpl
add
clc
and
add
nop
inc
clc
cmp
enter
rcrb
fidivs
aam
adc
add
add
add
sub
jge
jl
cmp
clc
push
leave
lock
adc
sub
mov
data16
inc
add
roll
mov
and
mov
mov
or
sti
jbe
bound
add
gs
xor
adc
scas
and
add
add
mov
sub
lret
sbb
rcll
add
cmp
add
push
add
push
movsb
clc
sti
dec
jbe
cmpsl
clc
scas
jle
out
mov
fwait
cmpsl
clc
pop
iret
xor
dec
jmp
clc
jl
call
jb
add
clc
in
popf
adc
add
jnp
add
cmp
lret
xchg
dec
enter
ds
clc
mov
lret
mov
xchg
mov
add
push
add
repnz
popf
aas
mov
xor
dec
inc
clc
inc
add
movsb
clc
scas
inc
clc
inc
add
js
clc
aad
clc
cmpsl
clc
ret
lock
clc
fwait
xchg
xbegin
ret
add
sbb
push
add
into
and
add
add
incl
cmp
jg
clc
cmpsl
clc
jg
sbb
call
jle
clc
std
lret
sti
xlat
fadds
xchg
add
add
pop
push
cmc
cmp
in
out
add
add
clc
cmp
cltd
mov
cmpsb
clc
das
inc
clc
aam
add
ss
neg
mov
dec
pop
cmp
jp
lret
xor
add
in
sbb
aas
or
xchg
mov
add
push
add
xor
add
insl
dec
jge
clc
lret
popf
jbe
call
sub
xchg
mov
xor
bswap
cmc
sar
lcall
mov
clc
or
shrl
pushf
insl
aas
inc
add
dec
icebp
out
sbb
pop
pop
adc
add
add
add
or
add
jne
test
mov
fstl
xor
add
cmp
mov
pop
test
clc
cltd
or
outsb
inc
clc
fwait
cwtl
mov
lahf
mull
add
jmp
add
mov
inc
clc
cli
xchg
imul
add
mov
add
add
fwait
aam
clc
fldl
add
add
add
repz
and
add
test
clc
movsb
clc
add
add
sub
add
push
idivl
xor
clc
sbb
rcrb
cmpsb
clc
clc
gs
dec
cwtl
out
or
clc
cmp
clc
jp
push
add
dec
xbegin
inc
clc
aas
jbe
xor
add
nop
mov
pop
lret
add
or
mov
cs
push
call
pop
push
clc
sub
clc
xchg
cs
push
adc
clc
outsl
je
clc
bound
add
add
jp
repz
add
xor
add
imul
add
icebp
jo
add
pop
sbb
call
push
add
mov
dec
and
aad
mov
clc
mov
mov
add
int3
sub
dec
test
rcll
add
add
pop
loopne
or
clc
inc
add
lret
es
pop
clc
daa
clc
lret
add
add
scas
rorb
iret
jmp
clc
mov
add
jle
clc
loop
mov
push
add
xchg
mov
xchg
adc
jg
clc
int3
dec
lahf
cmp
jne
push
add
ret
clc
cmp
pop
clc
shrl
out
into
sub
dec
repnz
inc
add
pop
and
add
add
jl
push
push
mov
ret
stos
test
test
icebp
xor
add
aas
sub
clc
sbb
add
clc
gs
lret
mov
xchg
sar
lahf
jp
dec
std
sti
loop
xor
add
add
enter
daa
clc
add
sub
xchg
jecxz
popa
add
test
cmpsl
clc
out
push
mov
pop
addr16
jne
add
insb
adc
add
sbb
clc
clc
into
jns
sbb
add
loope
pop
out
xor
add
mov
clc
pop
adc
add
push
push
cmp
jge
clc
fcmovb
clc
rolb
add
jg
dec
sub
mov
aad
fisttps
add
clc
mov
clc
mov
xbegin
cwtl
mov
clc
mov
call
add
clc
xabort
push
add
aaa
dec
mov
es
fldenv
clc
jne
data16
hlt
decl
and
add
divb
add
pop
ds
xchg
aaa
fsubrs
fstl
lea
insb
mov
add
and
add
shr
sbb
push
clc
icebp
sub
mov
add
repz
clc
lret
add
fidivrl
sbb
or
stos
lret
inc
clc
mov
inc
clc
stc
mov
aas
es
dec
mov
add
je
movsb
clc
sahf
inc
clc
add
add
mov
adc
xchg
jmp
clc
jmp
clc
fdivrl
enter
rorb
fmuls
jnp
clc
cmp
pop
ret
clc
lods
or
clc
inc
add
or
push
loopne
xchg
sub
icebp
add
add
lock
or
mov
add
mov
inc
add
jae
add
testb
add
clc
xchg
stos
gs
dec
add
jb
add
add
cmc
mov
xor
add
xchg
adc
add
fbld
cltd
pop
inc
add
cmp
jp,pn
add
mov
and
sbb
add
sbb
sbb
xchg
lods
lea
sbb
mov
clc
aas
mov
fnstcw
clc
cmp
adc
add
ss
add
clc
loope
fwait
int
imul
clc
cmp
test
add
add
xchg
test
add
bound
add
add
mov
add
cmp
or
lahf
or
add
sbb
xor
add
insl
and
shr
pop
xor
add
add
data16
dec
push
pusha
add
jg
aad
adc
clc
push
add
mov
dec
scas
gs
test
jo
add
ds
scas
sub
sub
pushf
dec
ja
mov
imul
inc
add
push
sub
clc
nop
sbb
add
add
mov
push
stos
dec
sbb
add
jbe
mov
add
ljmp
xchg
ljmp
inc
add
sar
add
xabort
clc
adc
dec
add
add
ss
aaa
test
mov
es
add
add
clc
push
jmp
adc
mov
clc
pop
loop
mov
clc
arpl
add
jecxz
lcall
fcoms
lock
add
pop
clc
cwtl
jb
add
xor
inc
add
push
mov
int3
push
clc
imul
cld
scas
xor
add
dec
jecxz
addr16
stos
inc
clc
xchg
addr16
mov
clc
adc
add
cmp
add
out
or
clc
pop
mov
xchg
add
add
out
rorl
jns
add
das
mov
daa
clc
push
dec
adc
add
sub
jmp
cltd
and
add
add
in
sar
pusha
add
gs
std
stos
out
inc
add
lods
outsl
mov
outsb
cmp
add
hlt
push
push
clc
call
clc
pop
push
divl
add
dec
das
or
xor
add
in
cmp
jecxz
mov
clc
or
add
push
add
movsb
clc
inc
clc
add
add
sub
cli
dec
cmp
push
cmp
mov
add
add
add
test
cs
clc
shll
clc
decl
out
test
clc
push
add
in
ds
jp
add
mov
add
fs
sbb
add
outsl
sbb
clc
xchg
pop
dec
repz
add
push
adc
add
jp
mov
popf
push
push
inc
clc
sar
out
xor
add
clc
jg
sbb
mov
clc
xchg
mov
pushf
add
add
adc
add
jne
clc
insb
aas
out
addps
jp
cmp
add
addr16
cli
lret
enter
mov
fcomps
cmp
push
fisubs
add
loopne
lahf
sbb
add
add
clc
rorl
out
cmp
adc
notb
inc
clc
mov
and
clc
mov
add
cmp
hlt
ja
sbb
sub
xchg
xor
add
add
add
add
add
pop
divb
add
add
sbb
stc
popf
jmp
push
add
pushf
push
test
faddl
mov
xlat
daa
clc
imul
es
xor
add
adc
push
sti
outsl
sub
jbe
lods
inc
clc
arpl
add
mov
mov
jno
add
sub
add
daa
clc
idivl
xor
add
add
add
add
das
adc
popl
mov
icebp
adc
call
clc
aaa
add
add
ja
xchg
and
add
popf
jecxz
sbb
fs
outsl
xbegin
add
clc
add
add
cwtl
loopne
aam
mov
clc
xchg
mov
add
inc
add
jmp
cmpsl
clc
mov
mov
int
insl
add
add
lcall
clc
imul
test
loope
ja
pop
aaa
mov
add
mov
clc
cmp
and
add
clc
nop
inc
add
sub
aam
imul
cmp
scas
pop
addr16
adc
add
mov
add
ljmp
arpl
add
xchg
negb
sbb
mov
xor
add
clc
jp
lret
mov
pop
jle
cli
hlt
jnp
clc
sar
add
bound
add
pop
fadd
clc
jge
add
xchg
xor
add
into
mov
stc
bound
add
clc
insb
jb
add
or
and
add
push
xor
clc
or
clc
jb
add
add
add
mov
daa
clc
jmp
out
sub
mov
add
xchg
div
xchg
xchg
fimuls
mov
dec
push
shlb
loope
pop
jnp
add
jbe
fs
fldenv
add
push
imul
sub
clc
xchg
cmp
add
sbb
lods
mov
push
add
push
add
xor
scas
fisubs
ss
add
xor
add
xchg
pop
sub
clc
notl
jle
lea
sbb
sub
pop
cltd
test
bound
add
clc
test
outsl
mov
repnz
push
stos
push
cmc
xor
add
clc
adc
add
cmpsl
clc
or
sbb
clc
aas
dec
das
and
add
add
lahf
fnstsw
dec
mov
mov
clc
insb
rcrb
push
add
pusha
add
mov
add
std
adc
xchg
popl
clc
stos
adc
add
add
inc
add
cli
push
add
push
mov
dec
in
cmp
test
jp
clc
jns
out
cmp
xchg
mov
clc
dec
push
pop
inc
add
outsl
mov
jl
add
add
add
add
aam
pop
dec
data16
and
add
add
add
lea
mov
lods
lea
add
lea
dec
sbb
xabort
or
clc
add
add
mov
inc
clc
loop
mov
add
add
jne
mov
or
push
clc
and
add
jle
stos
pop
xabort
clc
clc
nop
jnp
es
pop
ljmp
jae
add
popa
add
pop
mov
and
add
clc
jge
clc
push
add
mov
xor
add
and
xor
pop
je
clc
pop
nop
cmp
jl
ss
add
ret
test
out
mov
scas
scas
lahf
adc
xor
add
sbb
jae
add
lods
gs
cmp
add
jne
add
ljmp
clc
pop
bound
add
int
add
sbb
arpl
add
popf
enter
mov
add
inc
add
mov
clc
sub
roll
add
push
xchg
dec
mov
aaa
hlt
push
add
dec
inc
clc
xor
add
clc
mov
lret
add
fcoml
scas
xchg
push
loop
pop
push
mov
popa
add
cmpsb
clc
dec
sar
lods
repz
dec
jmp
clc
push
fs
fdivrs
add
add
clc
loope
out
fbld
dec
fisttps
push
cmpsl
clc
imul
xor
add
xor
add
fcomps
clc
nop
jecxz
cmc
sar
add
adc
add
insl
ljmp
dec
sub
sub
add
daa
clc
jecxz,pt
mov
xbegin
xchg
and
add
add
and
add
jle
clc
arpl
add
add
dec
rcrb
sbb
loopne
sub
clc
nop
and
add
add
clc
xchg
or
and
add
test
add
mov
xchg
inc
add
pop
push
add
enter
cmp
clc
add
add
add
clc
lods
sub
into
lret
mov
add
aad
and
add
cmovns
lea
cld
mov
pop
sbb
push
jg
shlb
jp
clc
sbb
sarb
add
js
add
hlt
mov
push
and
hlt
and
push
pop
xchg
add
add
pusha
add
adc
add
dec
cmc
test
pop
sahf
ficomps
stos
js
mov
aaa
outsb
inc
clc
dec
stc
jp
test
push
mov
push
add
iret
inc
clc
ret
clc
and
add
add
scas
testl
cmp
add
pushl
add
xchg
fucomp
push
insl
mov
clc
sbb
std
sub
cltd
mov
clc
lock
clc
shlb
add
add
imul
outsl
ss
ds
xchg
sbb
mov
xchg
mov
add
clc
dec
xchg
insl
call
cmp
roll
add
insl
clc
data16
add
add
add
out
jg
clc
popa
add
mov
in
fadds
and
add
dec
mov
jmp
cmpsl
clc
inc
add
dec
add
add
add
jns
inc
clc
cmp
add
pop
je
scas
xor
add
clc
push
add
push
add
pop
and
add
fidivs
add
push
jb
add
outsl
loopne
jo
add
add
loopne
popa
add
adc
popa
add
faddl
add
add
add
insl
pop
mov
leave
adc
add
in
pop
xchg
pop
cmp
pop
mov
xlat
scas
mov
fcompl
mov
sub
inc
add
or
in
imul
jg
cmp
jg
loope
ss
add
add
mov
add
clc
and
lock
outsb
jae
add
add
scas
pop
cs
clc
fiadds
clc
mov
clc
fnsave
sub
scas
lock
add
in
mov
add
clc
sub
mov
or
add
iret
pop
dec
add
add
clc
xchg
xchg
and
add
clc
ds
fbld
fsubrl
push
js
add
pushf
mov
xor
add
clc
bound
add
into
dec
vunpcklps
mov
add
test
pop
jmp
mov
add
in
add
add
int3
or
imull
clc
fildl
xor
add
jmp
xchg
negl
clc
popf
inc
clc
adc
ja
clc
mov
mov
clc
dec
push
add
enter
clc
push
clc
or
add
jmp
clc
movsb
clc
roll
scas
fwait
stos
mov
pusha
add
pop
mov
jg
stc
xbegin
add
add
iret
mov
clc
aam
cltd
loope
data16
ss
clc
sar
xchg
mov
pushf
data16
insb
mov
clc
addr16
dec
add
add
jns
xchg
adc
hlt
jl
mov
enter
add
clc
cmp
dec
fcoms
add
pusha
add
xor
add
add
xlat
scas
test
jo
add
rcll
stos
xor
add
xchg
leave
mov
fbstp
add
adc
add
clc
sar
add
imull
inc
clc
insb
call
add
xor
add
es
adc
add
add
jno
add
add
add
loopne
xchg
push
clc
daa
clc
cmpsb
clc
add
add
mov
clc
fcomp
xor
clc
iret
stos
push
add
ljmp
add
cmp
fwait
and
fs
fucom
clc
mov
mov
sahf
aas
pusha
add
adc
add
xor
add
and
add
clc
test
clc
sar
push
inc
clc
repnz
adc
add
outsb
fidivrs
enter
insb
pop
repnz
add
clc
fsubl
add
aam
xchg
shl
clc
push
adc
add
add
fsub
clc
es
divb
clc
jo
add
sbb
xabort
clc
xor
add
add
jecxz
xor
add
jg
pop
clc
dec
or
add
xabort
stos
xbegin
rcrl
add
cmp
and
add
xchg
inc
clc
outsl
mov
leave
jns
imul
clc
sub
add
loop
pop
ficomps
fwait
push
inc
clc
jno
add
and
dec
sbb
sar
cmp
scas
aas
mov
iret
test
sbb
add
add
add
clc
outsb
and
clc
movsb
clc
aaa
push
add
fldt
stos
pop
mov
inc
clc
inc
add
adc
add
or
clc
push
loope
mov
cmp
xchg
popf
push
or
test
inc
add
rcll
add
add
lock
add
add
movaps
xchg
jb
add
leave
or
add
mov
clc
int3
cmp
sub
or
bound
add
xchg
mov
clc
xor
add
lcall
ficompl
rcll
je
fcmovnb
clc
iret
jg
clc
iret
add
add
clc
xlat
mov
imul
sbb
and
add
or
add
es
mov
push
add
cli
mov
jp
fcmovnu
mov
into
int
mov
add
add
add
add
clc
and
ffree
clc
adc
clc
adc
add
push
test
clc
or
mov
mov
add
lahf
pusha
add
xchg
ds
add
and
add
mov
or
push
inc
clc
cmp
ds
mov
add
push
clc
cmp
clc
sub
es
sub
insb
js
xchg
cld
jbe
into
shl
mov
push
push
add
jbe
add
xor
add
leave
and
add
push
lcall
test
clc
cmp
hlt
or
add
pop
clc
or
push
mov
add
clc
mov
jmp
clc
jae
add
test
call
pusha
add
cmc
pcmpeqb
cmp
sub
add
jns
clc
test
clc
push
inc
add
or
fs
test
pop
flds
add
inc
clc
js
jg
clc
jnp
push
sbb
clc
lock
add
scas
cwtl
fstpl
clc
jle
xabort
ja
xchg
mov
repz
pushf
dec
jne
imul
rolb
data16
ljmp
add
cmp
add
cli
clc
fwait
inc
add
sub
clc
aas
sub
test
clc
xor
add
sub
out
test
mov
clc
stos
pop
loopne
je
clc
dec
push
outsb
inc
clc
shrl
inc
clc
jg
xbegin
add
rol
clc
fs
add
add
lock
add
sti
or
add
icebp
aad
clc
pop
clc
adc
add
mov
imul
xor
add
sar
pop
clc
xchg
pop
xchg
jmp
clc
sub
clc
add
je
flds
add
add
add
fimuls
add
cmp
push
adc
clc
je
repnz
mov
dec
cmp
clc
dec
gs
adc
inc
clc
movsl
clc
cmp
aad
add
xchg
fists
add
rcrb
pushf
sub
add
imul
add
xor
lret
clc
nop
add
add
add
dec
mov
pop
fwait
sub
popf
out
mov
clc
adc
add
inc
clc
nop
movsl
clc
and
add
add
xor
add
cmpsl
clc
jno
add
fists
clc
lret
sbb
insb
popf
outsl
movsb
clc
inc
add
mov
clc
adc
add
clc
cmp
jp
clc
int
clc
inc
add
xchg
mov
lcall
clc
mov
add
add
or
clc
test
mov
sar
aas
imul
shrl
clc
int
or
add
movsl
clc
fldenv
add
cltd
xchg
push
add
sub
mov
add
add
nop
test
or
clc
scas
pop
jmp
inc
add
sar
add
data16
leave
sub
outsl
push
outsl
jae
add
sub
enter
cmp
clc
imul
add
sub
add
sbb
add
lock
iret
enter
clc
aaa
lock
std
mov
add
adc
add
lret
add
add
pop
fwait
mov
add
cmp
clc
cmp
aaa
out
je
ds
lcall
arpl
add
clc
divb
add
sub
clc
inc
add
push
clc
mov
jecxz
jecxz
or
fcmove
or
mov
xchg
jecxz
xor
add
push
aad
add
push
jl
add
xchg
add
add
cld
or
clc
fiaddl
sbb
add
cmpsl
clc
mov
in
adc
clc
push
inc
clc
imulb
add
mov
push
fsubrs
in
cmp
add
hlt
pop
loopne
comiss
ret
clc
cmp
and
add
clc
int3
add
add
iret
sub
fnstcw
cmp
pop
xor
add
lods
fistl
sar
cmpsb
clc
inc
clc
mov
nop
jl
add
mov
xchg
pop
ficoml
adc
add
test
pop
insb
mov
clc
or
fisubrs
jo
add
imul
add
jle
add
data16
add
sub
mov
jecxz
sbb
sub
clc
mov
lock
jnp
push
cmpsb
clc
stos
fisttpll
test
add
xchg
xchg
inc
clc
xor
add
clc
fwait
stc
es
xor
add
add
clc
jbe
sbb
cltd
adc
add
add
gs
int3
in
aaa
fs
clc
mov
vmovntps
cli
into
shlb
add
add
add
add
cmp
jmp
out
bound
add
clc
cmpsb
clc
or
sub
pop
sarb
fsubrp
pop
mov
cld
scas
xchg
icebp
enter
arpl
add
xor
add
add
pusha
add
ljmp
pop
addr16
ret
clc
ret
clc
repnz
aam
jne
bound
add
sbb
insb
addr16
pop
cmp
jne
clc
stc
mov
cmp
fbstp
add
iret
mov
in
mov
push
jnp
mov
add
fs
imul
add
pop
cmp
add
and
add
lods
fimull
inc
clc
dec
and
sbb
jns
cmpsb
clc
fsubr
cwtl
jo
add
clc
inc
clc
frstor
jmp
mov
aaa
sar
clc
ret
push
clc
inc
clc
iret
rol
clc
inc
clc
push
clc
mov
add
into
insb
es
ficompl
xchg
lods
mov
dec
test
pop
pusha
add
cmpsl
clc
mov
pop
daa
clc
test
add
fildll
std
call
aaa
or
clc
and
add
add
xor
add
add
sub
imul
clc
inc
add
cmp
add
add
movsb
clc
fisubrs
push
add
add
sub
sar
xor
add
icebp
cli
push
jo
add
add
popa
add
lock
mov
adc
add
lahf
insl
call
fwait
es
cmp
sti
push
xor
add
clc
repz
fadds
or
add
mov
fs
sar
scas
nop
nop
outsb
or
and
cmpsl
clc
leave
outsb
iret
das
outsl
push
add
mov
add
add
dec
push
pop
ficoms
lock
mov
xchg
sti
ljmp
pop
stos
inc
clc
xlat
add
add
out
jnp
lods
push
add
add
adc
add
mov
push
push
add
push
popf
xchg
or
xor
add
add
sub
add
mov
add
jmp
dec
push
clc
mov
add
cmp
cmp
cmp
clc
fs
fwait
outsb
or
add
add
jg
add
out
rol
clc
in
fiaddl
xchg
mov
loop
insl
repnz
adc
add
add
int
test
xchg
adc
add
daa
clc
and
add
mov
scas
and
jl
stc
movsb
clc
inc
clc
faddl
add
inc
add
push
movsb
clc
fsubs
add
clc
sbb
clc
mov
pop
cmp
mov
clc
jnp
mov
insl
std
fwait
xchg
outsl
xchg
cli
sbb
clc
mov
cwtl
jo
add
cmp
mov
scas
xchg
icebp
outsb
in
adc
add
clc
in
mov
clc
adc
add
in
lahf
jle
push
add
repz
add
xchg
mov
add
test
jno
add
sub
or
add
mov
and
fs
pop
bound
add
cmp
add
fimull
xor
add
clc
data16
mov
stc
sbb
add
imul
clc
ret
clc
js
xor
add
sar
into
jb
add
cmp
enter
dec
pmuludq
pop
push
movsb
clc
repnz
pop
clc
jmp
popf
test
sbb
add
mov
sub
lret
inc
add
mov
cmp
imul
jge
add
cmp
testl
sar
and
add
clc
push
and
cmc
push
add
cmp
clc
xchg
push
jnp
pop
and
stos
jb
add
sbb
and
pop
push
add
sub
add
clc
popa
add
add
xor
dec
lret
fwait
movsl
clc
jp
cmp
add
pop
inc
add
and
add
scas
movntq
out
ret
clc
add
add
jle
pop
and
add
clc
and
xchg
in
push
clc
test
push
add
dec
mov
pop
push
clc
fucomp
dec
or
sub
adc
add
add
jae
add
xchg
jle
stc
fsubrs
js
sahf
push
xbegin
add
bound
add
lahf
lahf
inc
clc
push
jbe
or
clc
dec
mov
jae
add
jae
add
clc
mov
out
or
add
nop
aad
test
jg
imul
mov
mov
sub
js
ds
push
add
fwait
push
add
pop
vmwrite
adc
add
sub
hlt
insl
adc
add
cmp
out
movsl
clc
sbb
mov
out
test
popa
add
inc
add
mov
add
fwait
in
pop
scas
mov
inc
clc
and
add
push
add
mov
fst
repz
add
xchg
push
add
dec
ret
clc
pop
xor
add
or
mov
clc
adc
add
adc
add
imul
jge
inc
clc
dec
add
xchg
jg
ja
cld
mov
mov
dec
cmpsl
clc
xchg
adc
add
xor
add
push
ficoms
das
mov
sbb
ljmp
add
or
cmp
sub
add
xchg
adc
add
xchg
shll
add
in
out
fisttpll
or
jb
add
jg
hlt
cmpsb
clc
xchg
push
sub
clc
loope
imul
cmp
add
xor
jae
add
pop
imul
call
clc
in
test
pop
cmp
pushf
iret
aaa
insb
test
in
lock
add
xchg
jecxz
jae
add
clc
dec
jl
insl
pmaxsw
add
pop
sub
add
xabort
add
add
add
mov
sbb
add
clc
jge
clc
adc
shll
push
xchg
pop
scas
repz
mov
js
movsl
clc
repz
dec
and
add
xor
adc
add
iret
jle,pt
push
add
ja
repz
mov
stos
frstor
sub
ret
clc
jne
fwait
and
xchg
jg
cmpsb
clc
scas
mov
push
adc
sahf
pop
cmp
lods
or
add
jp
clc
inc
add
fwait
xchg
mov
clc
and
add
add
cli
test
clc
jno
add
int
popf
xlat
jle
xor
pop
add
dec
xchg
clc
insb
jl
clc
mov
add
mov
fs
mov
add
xor
add
add
mov
insl
mov
add
loopne
cld
dec
and
add
pop
cmp
daa
clc
out
jno
add
pop
sbb
push
add
rcr
jle
add
cmc
inc
clc
pop
stos
xchg
dec
insl
cmp
jle
mov
clc
xor
add
mov
icebp
lea
add
push
fs
sbb
clc
lea
add
xchg
out
inc
clc
shr
daa
clc
filds
add
sahf
xchg
pop
push
jb
add
add
insb
dec
aad
add
dec
xabort
ret
clc
shr
sahf
jo
add
stos
jae
add
sar
cmp
clc
bound
add
lret
and
sbb
aam
clc
sub
dec
testl
clc
cmp
clc
iret
test
js
add
or
add
mov
mov
xor
add
clc
imul
jge
push
push
inc
add
outsb
pop
xchg
xor
add
add
and
arpl
add
and
pop
xor
aaa
inc
clc
ffree
clc
fisubl
add
leave
xchg
gs
jecxz
mov
add
sti
cmp
clc
xor
add
cmp
push
fiadds
test
sub
js
in
sbb
add
and
add
mov
inc
clc
add
add
in
outsl
fs
bound
add
imul
add
sbb
in
imul
add
clc
fdecstp
pop
fidivl
xor
add
js
dec
mov
and
add
sub
add
add
push
add
dec
test
mov
pop
out
mov
add
bound
add
add
mov
sti
outsb
xchg
jne
jge
add
pop
mov
xchg
fdiv
sub
iret
aaa
cmp
clc
sub
std
mov
leave
in
and
add
add
jecxz
std
mov
adc
add
pop
leave
xor
add
es
fcoms
and
add
jo
add
clc
jg
repz
adc
add
xchg
outsb
ljmp
add
scas
mov
add
mov
xchg
xchg
das
push
in
mov
loope
ds
pop
xchg
sbb
es
cmp
push
jmp
xchg
jnp
ss
mov
ret
clc
pusha
add
add
add
mov
add
push
sar
cmp
mov
xbegin
inc
add
add
add
in
push
fdivl
add
jb
add
scas
nop
int
int3
stc
pushf
mov
jmp
mov
clc
mov
dec
pop
mov
add
das
lcall
add
arpl
add
clc
cld
cmp
clc
mov
enter
xchg
pushf
arpl
add
dec
cs
cmp
mov
cs
clc
or
and
add
daa
clc
cmp
mov
add
insb
lods
aaa
add
add
jne
push
add
movsb
clc
jge
add
add
das
dec
icebp
lock
test
test
add
cmp
out
push
ficomps
add
clc
icebp
pop
decl
insb
imul
or
addr16
aad
bound
add
cltd
sbb
add
dec
into
repz
push
add
cli
pusha
add
push
add
scas
jne
pop
mov
mov
push
push
add
pop
jmp
clc
add
add
clc
lret
lret
ds
or
paddusw
icebp
mov
insb
test
pop
jle
clc
push
add
popa
add
or
clc
repnz
cmp
clc
data16
lods
lret
or
clc
push
outsl
jae
add
cs
clc
addr16
mov
clc
sub
clc
mov
arpl
add
and
dec
pop
xor
add
add
add
jne
add
pop
jg
inc
add
mov
outsl
fisubl
lea
add
dec
bound
add
enter
data16
lods
dec
mov
sbb
add
dec
pop
clc
cmpsl
clc
and
jb
add
add
xchg
xor
add
add
mov
test
pop
clc
pop
es
fs
cmpsb
clc
adc
add
jbe
lret
clc
mov
add
test
or
add
add
add
add
popa
add
lcall
add
add
iret
or
add
push
jecxz
mov
cwtl
std
jge
fcmovb
clc
je
add
push
add
xchg
test
add
fs
clc
mov
jecxz
popa
add
mov
clc
fcomps
adc
add
sbb
inc
clc
mov
jecxz
mov
xbegin
lea
test
xor
add
test
ljmp
stc
sub
sti
fisttpll
or
cmp
stos
enter
ficomps
xor
clc
sub
add
add
jnp
clc
mov
iret
push
inc
clc
call
add
clc
lea
add
clc
inc
add
push
add
adc
add
nop
dec
dec
push
clc
insl
movsl
clc
rcr
push
add
sbb
pushf
pop
xchg
sub
fdivrl
push
jns
push
add
in
jb
add
fwait
xor
clc
je,pt
cmpsl
clc
lret
jl
add
mov
jnp
add
sarl
ret
clc
xor
add
cmp
clc
aad
fwait
and
inc
add
aaa
mov
inc
clc
dec
or
mov
sar
aaa
inc
clc
enter
add
pop
add
add
data16
popf
or
add
add
add
adc
add
cmovl
nop
push
add
dec
fnstenv
add
xor
add
push
or
clc
push
pop
clc
mov
clc
mov
jg
mov
add
jnp
mov
cmp
jbe
aaa
xbegin
add
push
add
cmp
add
loopne
test
add
fbld
jb
add
add
or
add
enter
test
lahf
dec
out
notb
dec
mov
clc
clc
aam
push
in
sbb
add
scas
mov
xchg
pop
stos
pop
sub
cmovl
add
mov
sar
add
test
push
movsl
clc
hlt
push
jecxz
cmpsl
clc
jge
out
pop
adc
add
adc
add
scas
inc
add
hlt
mov
imul
add
xchg
xabort
add
dec
ljmp
xor
add
adc
add
mov
sub
clc
mov
popa
add
dec
shll
add
sub
and
jle
add
lahf
loopne
dec
xor
pop
hlt
xlat
pop
in
inc
add
loopne
mov
clc
mov
add
mov
add
add
sar
mov
add
stos
mov
sti
mov
add
sub
add
std
pop
pop
stc
or
int3
aas
jno
add
cmp
movsb
clc
pop
clc
jmp
xchg
push
mov
push
mov
clc
repnz
add
mov
clc
leave
rcr
scas
mov
clc
lods
adc
add
xor
xor
add
clc
jae
add
test
xor
add
push
or
test
pop
test
fcom
sbb
xchg
add
add
clc
mov
ss
sbb
mov
mov
push
adc
add
stc
into
or
dec
push
mov
dec
je
jb
add
insb
pop
test
cwtl
outsl
clc
aaa
out
lock
aam
outsb
rcl
mov
xchg
mov
sub
add
inc
clc
adc
add
jecxz
xchg
icebp
in
mov
inc
add
popf
gs
xabort
outsl
push
add
lock
sub
push
fs
popa
add
and
add
imul
cmp
sar
add
add
add
das
mov
bound
add
xlat
rep
jnp
test
jne
clc
sti
mov
push
xchg
mov
lahf
lea
loope
mov
add
xor
add
add
out
xchg
call
xchg
sub
jge
imul
add
jge
outsl
arpl
add
dec
insl
xor
add
add
dec
fidivrs
nop
sarb
clc
sub
data16
jle
add
push
scas
dec
lret
mov
clc
sub
add
add
ja
data16
jmp
jns
test
pop
das
hlt
call
clc
xchg
arpl
add
mov
clc
dec
sub
jle
gs
lods
mov
jne
add
cmp
pop
pop
test
cs
add
xchg
push
ds
pushf
add
clc
sahf
enter
add
add
xchg
inc
clc
outsl
add
add
aad
add
ficoml
fistl
add
dec
test
sar
add
sar
outsb
shlb
clc
ss
mov
adc
lret
int
add
sahf
fsubs
mov
sub
jae
add
in
js
cmp
repz
jl
out
push
add
inc
clc
fdivrs
add
mov
push
add
lcall
mov
xchg
outsb
push
clc
pop
inc
add
pop
pop
lea
xchg
xlat
lods
into
jge
dec
push
add
sbb
je
clc
shrb
add
sub
and
add
add
pop
sbb
push
std
push
sbb
pushf
mov
pop
mov
js
clc
aas
mov
lock
bound
add
clc
lcall
clc
push
add
iret
repz
test
adc
and
dec
cli
mov
clc
rcrb
mov
clc
std
in
pop
jge
inc
clc
outsl
sub
setge
or
iret
ret
clc
pop
mov
xchg
sub
add
testb
clc
fwait
pop
lret
mov
clc
stos
mov
movsl
clc
repz
imul
lahf
dec
fsubr
dec
cmp
sbb
mov
add
inc
clc
and
add
sub
clc
mov
repz
sub
add
add
clc
frstor
add
push
dec
scas
ja
not
push
add
xchg
adc
fstpl
fbld
add
add
sbb
clc
fdivl
add
add
push
es
sbb
movsl
clc
leave
cli
sbb
or
es
out
mov
clc
shrl
mov
add
int3
fmuls
add
sbb
lods
xor
add
je
add
scas
hlt
idivl
jg
mov
xchg
test
jae
add
imul
add
sar
clc
fisubrl
adc
add
test
sub
clc
or
add
adc
add
push
add
xabort
clc
movd
clc
cmp
add
add
add
add
sub
insl
popf
ficompl
mov
mov
and
cli
bound
add
push
or
loopne
mov
dec
decl
and
add
mov
push
mov
test
pushf
ficomps
mov
add
pop
fsubrs
sub
clc
roll
add
mov
push
gs
jecxz
sbb
xlat
enter
jbe
out
lahf
nop
ljmp
mov
xchg
dec
inc
clc
mov
mov
clc
lods
sar
outsb
mov
jnp
clc
shll
and
push
adc
add
mov
clc
xor
out
dec
adc
add
jns
fcomi
cmp
sbb
add
iret
iret
int
add
sbb
adc
add
xor
add
clc
mov
cld
mov
inc
add
fmuls
pop
popa
add
das
jmp
rcll
add
pop
aaa
std
and
add
shlb
aas
out
dec
movsl
clc
sbb
insb
sbb
clc
mov
add
mov
add
gs
mov
clc
fld
clc
and
add
lahf
imul
add
dec
mov
and
mov
cmp
in
push
push
data16
dec
lcall
clc
scas
cmc
aas
jge
add
add
add
ljmp
xchg
inc
clc
dec
cmpsb
clc
nop
adc
add
sub
add
jno
add
in
jecxz
repz
cli
mov
test
add
imul
cmpsl
clc
jl
xchg
and
add
add
mov
adc
add
ja
pushf
popf
xbegin
add
pop
inc
add
pop
pop
clc
stos
or
clc
inc
add
pop
clc
sbb
lret
enter
outsb
fistps
add
xor
add
xchg
pop
xor
es
sbb
inc
add
leave
roll
ret
clc
lcall
add
es
test
clc
cmp
out
insb
clc
mov
addr16
stc
push
add
outsl
jno
add
int
clc
ret
clc
es
sub
daa
clc
repz
in
sbb
add
add
push
clc
dec
out
push
push
inc
add
arpl
add
jp
rolb
add
clc
outsb
inc
clc
sub
gs
mov
add
push
add
mov
jg
clc
xchg
push
clc
cmp
clc
or
shl
clc
stc
push
pop
loope
divb
adc
testl
scas
mov
mov
inc
clc
cmp
clc
inc
add
lods
inc
add
sti
jo
add
jbe
add
rorl
pop
clc
and
add
clc
mov
clc
out
fwait
sbb
clc
sahf
aaa
adc
add
clc
rcrb
pop
jecxz
jnp
clc
stc
and
pop
sub
jecxz
sbb
loop
sahf
movsl
clc
movsb
clc
sub
xabort
add
lea
data16
jle
and
add
movsb
clc
fists
clc
jmp
add
leave
aad
add
js
jnp
add
fneni(8087
clc
mov
add
sbb
lea
add
pop
mov
jne
clc
bound
add
fsubl
add
and
add
loopne
cmp
add
mov
stos
sti
adc
clc
xor
add
mov
sub
clc
mov
mov
cmpsl
clc
fimull
xor
add
xor
add
clc
xor
add
scas
rcrl
out
rclb
add
mov
sbb
jmp
mov
mov
clc
out
sub
nop
cmp
sbb
jnp
bnd
pop
cmpsb
clc
loopne
push
add
inc
add
jae
add
add
sbb
sbb
cmp
into
mov
or
sti
ret
xchg
inc
clc
ja
xchg
push
clc
xlat
push
clc
push
add
xor
add
arpl
add
and
out
push
clc
das
lcall
leave
jmp
clc
sbb
push
adc
add
inc
clc
add
add
add
aam
or
xbegin
add
add
fcmovu
or
pop
repnz
push
mov
clc
aaa
cld
cmp
clc
cmc
cmp
clc
mov
cmp
in
test
clc
es
mov
add
push
add
bound
add
add
inc
clc
lret
pop
or
pop
fnstenv
aaa
jno
add
add
mov
cmp
xchg
test
or
sar
add
iret
cmp
mov
add
cmp
add
mov
clc
sahf
setp
shll
movsl
clc
sar
sti
cli
sub
add
pop
sbb
mov
add
outsl
dec
dec
sahf
sbb
das
cmovnp
add
clc
pushf
push
xchg
mov
add
pusha
add
movsb
clc
jp
mov
divl
add
add
add
lea
adc
stos
pop
aam
xchg
int3
jns
push
clc
mov
add
inc
add
or
add
dec
mov
cltd
mov
fisttps
lock
add
cld
test
clc
push
add
lret
icebp
sbb
clc
cld
inc
clc
out
fdivrs
add
dec
daa
clc
jmp
add
add
sub
add
lret
jecxz
test
nop
cmp
adc
add
jle
addr16
fucom
clc
mov
into
inc
add
in
flds
add
add
add
sahf
mov
xchg
mov
fsub
clc
out
mov
dec
das
pop
daa
clc
or
add
fdivrs
sub
cmp
push
add
add
add
ret
add
xor
add
fdivl
add
ljmp
clc
in
or
xor
clc
gs
mov
shrb
push
add
fstpl
addr16
mov
leave
loop
xor
add
stos
loopne
adc
add
arpl
add
xchg
add
add
clc
lcall
clc
das
pop
lret
test
jne
jp
sub
or
out
stos
sahf
cmc
dec
add
add
nop
in
sub
clc
out
icebp
lea
or
ret
clc
pop
out
mov
enter
add
pop
lret
mov
xor
add
add
data16
lcall
arpl
add
loopne
icebp
imul
int
add
or
int3
pop
stos
mov
lret
mov
clc
loopne
test
cmpsb
clc
call
and
add
add
and
mov
clc
jecxz
popf
add
add
add
out
leave
mov
and
add
push
add
jge
fstpt
test
jbe
mov
data16
pusha
add
adc
add
stos
cwtl
in
cmpsb
clc
xchg
sahf
xor
add
fadds
or
clc
int
add
jnp
rorb
clc
mov
add
xchg
sub
add
add
mov
mov
add
mov
std
cmp
loopne
js
add
xor
add
xchg
lret
add
push
jmp
clc
in
mov
mov
add
add
add
mov
pop
arpl
add
aad
lock
add
mov
call
mov
insl
sarb
mov
ja
add
int3
pop
pop
out
es
push
add
or
lods
add
or
test
add
adc
add
jnp
shll
clc
push
clc
mov
xchg
cmpsl
clc
int
leave
mov
add
icebp
nop
mov
add
stc
or
sarb
cltd
scas
inc
add
dec
mov
add
pop
sar
sbb
clc
repz
clc
push
rcrl
add
clc
cwtl
mov
xor
add
out
mov
test
pop
pop
cli
mov
clc
sbb
repz
loope
gs
adc
test
add
cli
int
clc
pop
arpl
add
add
xchg
cmp
ror
mov
outsl
idiv
fstpt
xbegin
push
add
sub
out
jb
add
imul
stos
mov
mov
add
add
das
movsb
clc
cmpsb
clc
cmp
mov
xor
add
stos
fisubrl
into
cld
jp
sub
addr16
add
mov
fs
mov
and
add
clc
jns
nop
sub
cmp
dec
jb
add
add
pusha
add
imul
fstpl
mov
and
add
add
jns
add
insb
test
push
ja
cmpsb
clc
pop
mov
add
das
es
dec
mov
jns
sbb
add
dec
cmp
clc
outsb
fs
out
adc
mov
sarl
clc
mov
test
and
add
add
pop
mov
