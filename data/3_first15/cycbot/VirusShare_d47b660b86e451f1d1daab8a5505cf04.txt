push
ror
dec
xlat
cmc
mov
movsl
call
sbb
jge
lock
in
push
stos
insb
inc
add
mov
pushf
mov
mov
push
stos
pop
mov
push
sbb
clc
push
cmp
cld
ret
gs
inc
push
test
cmpsl
add
sub
mov
fisttps
es
je
jne
jle
lock
mov
add
ret
aaa
loopne
and
mov
popf
or
mov
in
loopne
stos
dec
mov
insl
imull
push
inc
pop
fadds
pop
mov
mov
adc
sub
nop
cmpsl
cli
mov
lahf
mov
add
outsl
rclb
fnstcw
daa
xor
jae
div
inc
add
stos
repz
gs
decb
cmp
adc
bnd
scas
cmp
mov
jo
mov
xchg
jle
add
mov
or
popf
sahf
scas
dec
frstor
sbbl
jbe
and
inc
test
dec
ret
mov
ja
cmp
push
adc
jge
add
dec
add
xor
in
jle
repz
add
add
movb
push
je
vmread
mov
jnp
repnz
nop
mov
pop
rclb
jne
adc
or
xor
mov
mov
jno
sbb
push
aas
shrb
leave
cmp
add
mov
fdivrs
cmp
xor
add
add
lret
dec
bound
mov
cmp
mov
enter
mov
roll
add
add
pop
out
sbb
cltd
jae
xor
or
add
addb
mov
sbb
call
sub
out
data16
jae
in
outsl
or
add
enter
lods
test
jo
stos
daa
sbb
lods
sahf
sbb
test
ficoml
lcall
fistl
test
es
xchg
sbb
jp
push
loopne
fsubrl
cld
addr16
mov
cmp
es
fidivs
lret
insb
insl
or
xchg
shll
outsb
cmpsb
pop
inc
pop
inc
add
xchg
out
xchg
push
adc
add
pop
xchg
fildl
jp
rcrl
mov
add
cli
addb
pop
mov
push
out
lock
pop
jl
add
pop
dec
mov
pop
icebp
cmp
xchg
pusha
add
pop
mov
adcl
orl
xchg
sti
jae
add
lcall
std
mov
push
jbe
into
pop
mov
add
fcmovnbe
jno
aad
adc
lret
mov
add
xchg
push
sbb
repnz
sbbl
mov
jae
int
ss
add
mov
and
insl
push
add
add
out
sbb
scas
sti
xchg
arpl
negl
sti
lods
mov
test
jge
mov
lods
je
shlb
xor
and
cwtl
inc
push
aas
pop
and
jae
or
cli
pop
int3
pop
push
cmpsl
test
fdivrl
sbb
mov
mov
adc
xchg
mov
or
in
rcrb
push
sbb
js
mov
in
xor
add
push
mov
inc
imul
lret
ljmp
stos
jnp
jp
sti
push
and
fcmove
inc
add
pminsw
outsl
notb
jmp
push
loopne
nop
inc
je
pop
insb
xlat
jmp
or
ja
inc
movsb
das
popf
dec
jne
mul
add
bound
in
xlat
test
in
jle
addr16
adc
sti
test
xor
mov
add
adc
mov
test
test
jb
lea
and
lock
insl
push
xor
jae
mov
push
jp
xchg
mov
jbe
and
psrlq
movsl
jns
mov
loop
stos
mov
xor
push
cmpsb
mov
movsl
test
push
ss
out
lods
popf
pusha
add
lds
test
add
loope
adc
add
aas
pop
popa
mov
lds
xchg
adc
arpl
dec
inc
add
add
test
adc
push
xchg
sub
or
cmc
loopne
fcmovu
push
cmp
mov
into
pushf
repz
addr16
push
add
jne
mov
adc
add
mov
and
jl
imul
add
sub
not
or
inc
add
jmp
sti
ds
add
pop
jl
loopne
repz
or
xor
or
pop
lods
pop
das
inc
xchg
movb
repz
movsb
mov
add
push
rcrl
jp
lds
xchg
jl
push
push
loopne
dec
in
or
and
movb
stos
test
outsb
aad
jo
push
test
addr16
add
negl
dec
es
add
inc
add
mov
xchg
fbld
add
xchg
aaa
mov
cmc
repz
adc
pop
pop
xchg
pop
das
enter
xchg
enter
sbb
insl
mov
pusha
add
outsb
lea
pop
shrl
adc
stc
mov
add
add
fimull
aad
and
insb
jmp
in
add
lods
mov
mov
outsb
xor
or
pop
int3
dec
jge
jne
pushf
mov
mov
pop
push
leave
or
jo
test
ljmp
mov
add
adc
cltd
jb
mov
sbb
mov
sarb
sarb
xchg
outsb
ljmp
adc
jge
pop
push
int
sub
mov
outsb
jl
dec
call
jge
and
pushf
int3
repnz
movb
xlat
push
int3
int
dec
mov
jp
add
sahf
subl
dec
cmp
fsubrs
dec
cmp
jle
sbb
add
addr16
push
add
add
mov
inc
cmp
or
aas
out
sub
dec
enter
mov
dec
add
stos
push
xchg
push
adc
xchg
mov
xchg
jge
repz
popa
and
cld
addb
dec
int3
mov
rolb
lods
sub
adc
addr16
add
dec
push
cmp
add
xchg
inc
add
movsl
iret
dec
mov
inc
sbbl
mov
xchg
sahf
dec
push
sub
add
jns
add
in
ret
fwait
repnz
push
nop
popa
std
lret
in
cltd
jl
jo
addr16
mov
or
rorb
nop
jns
xchg
mov
xor
jg
pop
cmp
arpl
mov
pop
pop
push
cs
or
mov
push
push
fiaddl
mov
dec
lods
sub
imul
fwait
popf
cli
addb
sub
and
mov
insl
xchg
shlb
jmp
popf
lock
and
cmc
adc
jae
lods
repz
mov
testl
cwtl
out
lock
leave
fidivrs
lcall
add
movsl
popf
mov
jle
mov
je
cs
mov
cwtl
sbb
dec
enter
inc
lahf
dec
clc
add
inc
add
daa
arpl
cwtl
cs
les
repnz
dec
pop
cmp
fwait
jl
out
pop
leave
insb
out
jbe
mov
pop
cli
imul
jg
addb
push
mov
movb
or
xorl
add
rolb
ss
test
mov
lods
inc
pop
cltd
fimuls
in
movsb
sub
popf
orl
sbb
popf
and
xchg
pop
imull
aad
cmp
dec
stos
push
jne
pop
data16
mov
mov
decl
jb
cld
mov
inc
push
dec
or
add
add
add
test
sub
stc
imul
jo
in
jge
add
cmpsl
stos
mov
std
inc
add
mov
dec
loope
jmp
xor
inc
xchg
mov
hlt
cmp
xchg
fldcw
add
lret
adc
cmp
outsl
inc
add
pop
inc
add
xchg
ds
cld
pop
stos
inc
inc
xor
dec
or
gs
hlt
xchg
sub
movsl
jne
outsl
or
xor
jae
aam
dec
fsubl
dec
and
push
sbb
pop
cmp
sarl
das
sub
sub
repz
add
inc
add
pop
or
ror
xlat
adc
or
sti
sub
add
inc
int3
in
add
add
dec
imul
pusha
add
sahf
addl
sub
int3
pop
addb
addb
cmp
shlb
loope
pop
mov
mov
in
mov
add
pop
inc
add
outsb
mov
cmp
pop
xchg
fisubrs
les
outsl
inc
scas
mov
lods
aas
jnp
popf
popa
das
inc
add
add
lret
mov
add
or
popa
aas
mov
nop
dec
cmp
pop
frstor
mov
inc
add
stos
and
lahf
mov
and
sbb
roll
push
fisttpl
sti
popf
inc
je
xchg
mov
pop
adc
iret
into
mov
es
xchg
mov
sub
outsb
fistps
or
adc
mov
push
xor
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
loopne
xchg
mov
je
loop
faddl
sar
lcall
les
or
and
jp
aam
push
add
mov
cwtl
pop
xchg
repz
stos
outsb
insb
ret
jb
stos
dec
pop
and
pop
xchg
ljmp
add
sahf
push
xlat
xchg
addb
adc
dec
leave
aam
push
mov
lret
or
push
add
lret
rolb
xor
aad
jl
xchg
lods
les
adc
pop
pop
shl
cmp
repz
jnp
in
add
inc
lock
movb
sbb
push
jno
add
es
and
into
push
sbb
lahf
test
data16
xlat
xor
cltd
test
inc
dec
jno
test
mov
add
add
test
fwait
js
xchg
imul
in
add
push
add
imul
jecxz
add
int
sete
imul
xlat
mov
lods
and
mov
daa
call
push
into
cld
cmp
or
dec
cmp
add
jmp
jl
xor
stos
les
int
jp
add
test
xor
push
test
push
add
xor
loop
pop
pushf
out
dec
ja
mov
add
es
jge
pusha
add
push
ds
aaa
jne
xchg
dec
test
popa
scas
push
adc
add
cmc
mov
push
dec
and
hlt
and
cmp
cmpsl
jnp
cmc
push
add
mov
push
sbb
fcmovnbe
mov
mov
dec
pusha
add
int3
lods
jb
les
dec
pushf
mov
imul
mov
repnz
rolb
mov
xchg
cmp
fidivrl
addr16
sbb
jb
add
mov
ret
xchg
je
sbb
mov
jl
rcrl
pop
out
enter
jge
xchg
out
add
les
insl
stos
add
mov
fisttps
mov
mov
or
or
in
dec
dec
sbb
push
add
fstpl
repz
add
in
popf
pop
shlb
adc
add
cwtl
jp
sarl
repnz
add
aad
and
add
imul
cwtl
testb
push
mov
frstor
add
test
jo
rorl
rolb
jp
ret
adc
mov
outsb
or
push
xor
fadd
in
pop
nop
mov
push
mov
shr
lods
mov
int
cmc
lods
gs
fadd
ja
testl
pop
into
dec
sub
sub
mov
or
shlb
jns
mov
jnp
cmp
aaa
xchg
push
out
xor
hlt
fs
lods
mov
stc
addb
gs
inc
stc
scas
push
mov
aam
lahf
jno
mov
emms
clc
push
es
pop
cltd
imul
lcall
or
add
sbb
dec
imul
cmp
or
add
sbb
dec
cmp
incl
lret
xlat
jns
lret
mov
test
mov
stc
inc
add
inc
add
xor
mov
add
rorl
nop
rcr
jno
dec
lock
fldl
out
rcll
jne
jns
mov
pop
jmp
cli
sub
dec
cmp
fstl
push
push
cmp
in
or
lahf
js
xor
dec
and
mov
jmp
mov
sub
add
ret
je
push
dec
insl
mov
repz
stos
test
sub
xlat
pop
sub
test
jns
nop
xchg
mov
out
int
cmpsb
jp
sbb
mov
and
iret
fstpl
nop
add
sub
sbb
fnstcw
test
lds
xor
test
enter
push
out
cmp
shl
cmp
ret
mov
scas
popf
jp
out
addb
add
out
das
lcall
mov
cmpsb
push
push
les
pop
xlat
sub
add
pop
mov
xchg
ja
pop
inc
add
pop
testl
pop
test
jl
andl
push
iret
mov
popa
dec
stos
pop
cld
sub
lahf
mov
and
ljmp
bound
hlt
lret
add
imul
in
dec
mov
pop
pop
mov
adc
in
cmp
or
fnstenv
shrl
pop
xchg
mov
mov
jae
test
jbe
popf
test
iret
int
lahf
daa
cld
mov
out
push
roll
add
mov
and
daa
mov
xchg
mov
add
jl
scas
mov
add
sbb
add
pop
shlb
pusha
add
jns
jo
fstpt
repnz
xchg
ja
bound
out
sub
addb
enter
sub
test
in
mov
add
pop
and
add
testl
repz
jns
push
movb
test
rcrl
push
xchg
orl
ret
pop
inc
sub
test
lahf
lock
push
mov
push
xor
addr16
dec
call
cs
jns
or
xchg
sub
sub
cmpsb
testb
dec
shll
sbb
in
cwtl
out
cltd
ret
jae
test
adcl
add
push
adc
mov
testb
xchg
mov
push
add
mov
pop
xchg
mov
pop
dec
mov
in
je
pop
or
cld
push
loope
mov
and
bound
sti
or
sub
cmpsb
outsl
dec
mov
fwait
mov
fdiv
scas
fsubrs
add
inc
add
push
fidivrl
test
sbb
xchg
jne
pop
ds
xchg
pop
das
insl
cwtl
fxch
jmp
cltd
sub
adc
and
push
loopne
mov
repz
mov
mov
add
adc
and
push
je
test
aam
add
imul
add
decl
rorl
jmp
xor
inc
add
sbb
out
imul
push
mov
int3
mov
sub
mov
mov
xlat
into
or
je
add
sarb
bound
inc
pop
aaa
aam
push
mov
jecxz
rolb
mov
mov
addb
dec
loope
mov
mov
sbb
add
adc
leave
ret
mov
push
jnp
pop
sbb
repz
fnstenv
mov
push
sahf
push
rolb
pop
call
mov
jns
shrb
xor
pop
push
jbe
ds
fimuls
sub
lods
add
or
add
pushf
dec
icebp
icebp
adc
fwait
dec
loopne
add
aas
pusha
add
add
pop
lock
mov
xchg
shll
add
mov
jb
jo
mov
cwtl
inc
push
shll
inc
movsl
addb
mov
in
pop
ret
stos
fld
add
insl
sbb
cmp
mov
out
les
in
sbb
sbb
aam
add
xor
jmp
push
dec
pop
or
scas
or
xchg
add
push
mov
ret
dec
popf
in
cs
add
mov
add
arpl
test
and
fxch
scas
jmp
or
int3
in
mov
xchg
lahf
and
add
push
call
mov
es
iret
dec
out
loopne
loope
jmp
mov
dec
psrld
ljmp
js
adc
add
sbb
clc
mov
jbe
pop
and
add
nop
leave
fiaddl
movsb
sub
loopne
jp
add
leave
mov
xor
outsl
xor
add
in
pop
hlt
adc
add
divb
popl
outsl
cmp
jle
cld
xor
push
dec
loope
iret
push
pop
addr16
push
mov
xor
in
aam
xchg
adc
or
cmpsl
loop
mov
lcall
cmpl
into
mov
out
idivb
les
out
mov
in
aaa
push
dec
and
add
cmp
hlt
adc
paddusw
popa
cmp
stos
sub
mov
addl
rep
push
ret
mov
push
dec
cmc
pushl
xchg
dec
mov
and
sub
ucomiss
add
ss
faddl
add
add
or
jae
in
push
adc
add
stc
mov
shll
popl
adc
das
addb
or
dec
or
icebp
imulb
mov
or
add
call
xlat
jg
mov
testl
push
mov
lcall
ret
mov
pop
mov
dec
lahf
outsl
push
or
inc
push
xor
sub
mov
aaa
push
movsl
lock
addr16
test
lcall
add
push
jp
sub
xor
pop
stos
int
jbe
test
negl
sarl
mov
arpl
jb
hlt
ss
leave
push
les
pop
cmpsb
fwait
popf
std
jle
hlt
clc
adc
mov
jmp
xlat
pushf
enter
stos
movsl
addb
push
add
cmp
pop
pop
fisubl
arpl
lahf
nop
add
inc
cmp
dec
sub
sub
or
push
jo
test
leave
mov
sub
sub
jo
mov
test
adc
jmp
imul
push
jae
dec
popa
add
xor
cltd
loope
in
popf
int
xchg
xor
mov
xchg
fists
sbb
add
shl
data16
and
jp
jae
push
aad
jp
or
aas
jge
lods
ret
inc
add
jg
sbb
idivb
std
out
dec
repz
daa
out
pop
or
sbb
loope
imul
mov
add
dec
cmp
insb
and
dec
imul
push
sbb
js
add
sarl
sbb
pop
out
in
lret
testl
jns
pop
sbb
sbb
dec
and
xor
out
pop
repnz
loope
xor
fs
addr16
testb
inc
add
test
outsb
jnp
int3
mov
jne
imul
xor
sahf
pop
lret
ja
jbe
inc
ret
xor
clc
xchg
jns
pop
aad
dec
cmc
ss
xchg
insb
mov
out
sbb
cld
addb
das
fidivl
cwtl
jnp
inc
mov
pusha
add
jae
out
add
out
inc
add
jne
ret
push
push
dec
nop
fcmovnbe
icebp
hlt
test
mov
xlat
sbb
aad
pusha
add
out
or
movb
xor
mov
mov
icebp
clc
pop
hlt
xor
out
xor
pop
shll
jmp
stos
andl
sub
jecxz
rcl
push
fisubl
shlb
in
cmp
js
xor
testl
pop
cld
or
add
jnp
popa
push
add
fcoml
out
call
pop
shlb
fidivrs
fs
mov
and
add
dec
xchg
push
push
add
jae
ja
addb
std
or
dec
push
sub
sub
bound
mov
and
insl
in
add
add
cmpl
push
add
inc
add
pop
in
fmuls
xchg
add
and
add
leave
push
pop
lea
ret
xor
xor
adc
addb
adc
push
or
mov
xchg
inc
pusha
add
addl
and
testl
addl
in
cmpsb
cwtl
rolb
cmp
jnp
lods
aaa
test
adc
test
lods
or
cld
xchg
inc
pop
xchg
movsl
mov
outsb
into
add
mov
arpl
add
fidivrl
xor
movsl
jno
add
fstl
add
push
pop
insl
lcall
std
icebp
loope
mov
popf
loop
adc
std
inc
add
cld
add
mov
stc
aad
enter
mov
sbb
insb
fstpl
mov
shl
cmp
scas
test
imul
add
inc
pushf
cmp
subl
es
mov
jne
scas
sub
add
adc
rorl
add
cmp
lcall
push
and
jp
je
sbb
cmc
pop
lods
pop
or
movsl
out
pop
es
stc
jmp
gs
jno
sbb
push
aad
mov
loop
mov
add
sub
jnp
cmp
nop
jae
inc
add
sbb
out
fs
shlb
add
push
sub
inc
jne
add
lcall
and
mov
fldcw
mov
inc
insb
jmp
sbb
lods
mov
add
and
in
adc
lret
mov
add
sub
mov
in
xchg
inc
add
cmp
jp
movsb
lds
lahf
mul
fdivs
lret
push
add
mov
xchg
cltd
mov
gs
jno
add
push
cli
mov
add
adc
add
xor
pop
mov
sbb
xlat
outsl
sbb
cmpsl
pop
cli
outsb
add
cmpsl
stc
into
cmc
pop
jmp
add
xor
shl
mov
mov
pusha
add
les
and
push
inc
mov
fld
add
test
lret
dec
adc
rcll
addb
sub
cmc
addb
xor
sahf
mov
jb
xor
mov
dec
adcl
jmp
push
add
mov
inc
add
push
dec
jnp
add
fadds
xor
into
les
mov
inc
sub
and
cltd
mov
inc
add
jb
clc
mov
push
filds
aad
es
addb
add
xchg
out
mov
flds
fsubs
push
add
and
mov
enter
add
add
add
ret
add
lahf
xchg
out
sbb
or
sbb
xor
jno
push
xchg
mov
add
lock
jnp
sub
into
je
into
lock
or
mov
pop
mov
or
xor
add
mov
das
ljmp
lahf
aas
push
scas
test
pushl
inc
pop
ja
lea
sti
fldenv
push
cmpsl
hlt
sub
add
dec
in
mov
jae
test
push
pop
lods
mov
or
hlt
dec
leave
pop
loopne
outsb
outsb
sub
mov
sahf
xchg
je
lret
xchg
xchg
adc
movsb
cmc
xchg
sahf
ret
sbb
add
xlat
enter
inc
cmc
dec
test
add
cmp
ds
push
add
mov
add
rcrl
ret
push
int
jns
jb
inc
add
cmp
repz
loop
cmp
loop
insb
xchg
pusha
add
add
les
or
sbb
xchg
xchg
push
add
clc
imul
enter
dec
paddusb
es
lcall
pushf
add
sub
cmp
jle
jne,pn
pop
test
out
add
les
adc
xchg
in
lock
int3
loop
je
rolb
ret
and
loop
out
dec
test
mov
add
or
test
dec
or
xchg
adc
fwait
les
push
pop
mov
dec
inc
add
andl
xchg
popf
push
adc
mov
fdivl
clc
popl
sub
sub
mov
hlt
fdivrs
sbb
dec
jns
jb
mov
dec
xchg
xor
fimuls
cltd
test
jl
outsl
stc
test
sbb
xchg
sub
cmp
add
adc
jg
and
cs
jnp
aas
pop
je
insl
int3
rolb
xlat
jle
jg
cmp
ss
leave
mov
in
cmp
xor
mov
mov
int
jp
dec
or
in
ds
or
push
xor
pop
addb
add
pop
mov
mov
mov
mov
cld
mov
mov
out
sbb
ds
das
outsb
mov
bound
repnz
pop
xor
ja
dec
mov
mov
bound
xchg
addl
or
xlat
into
push
addb
jo
mov
mov
inc
add
pop
push
add
mov
pop
jl
out
test
adc
mov
add
repz
outsl
push
mov
add
fsubrs
add
add
jb
cmpsl
dec
mov
stos
stc
sahf
fnstenv
and
cmp
add
add
fcomp
clc
leave
ret
outsl
xor
sub
sbb
sbb
mov
jb
cmp
mov
cltd
push
push
shlb
add
iret
movb
mov
std
jge
mov
test
xchg
fiaddl
xor
inc
ljmp
popa
js
sub
test
data16
cmp
sarb
xor
or
mov
add
loopne
cmpsl
or
jl
in
cli
std
or
mov
daa
jge
jno
movb
fiadds
addb
add
rol
mov
in
sub
add
and
ja
ja
mov
cmp
hlt
push
xor
popa
movsb
mov
pusha
add
xor
inc
add
js
in
dec
call
push
popf
jb
mov
cmp
push
adc
sbb
push
push
dec
add
test
aas
ljmp
lods
or
test
inc
add
daa
adc
jne
xchg
outsb
mov
jmp
adc
inc
add
adc
add
inc
inc
lahf
mov
jo
lahf
jg
add
in
pop
ret
les
jg
pop
inc
add
mov
mov
pop
loopne
outsb
mov
add
mov
bound
push
adc
dec
lea
sti
mov
add
pop
leave
rolb
fwait
aaa
mov
mov
int
inc
cmp
loopne
pop
jo
push
ret
push
sahf
mov
shlb
jns
push
fildl
fwait
cmp
aad
and
mov
add
xor
sbb
daa
adcl
and
xchg
test
adc
add
add
leave
inc
cmpsb
pusha
add
inc
loop
test
xor
rolb
add
dec
repnz
mov
sahf
sub
mov
xchg
dec
push
push
add
lods
aas
mov
inc
nop
fwait
cmp
push
sti
mov
cld
push
ss
popf
sti
insb
pop
mov
add
push
add
icebp
and
jb
add
testb
inc
inc
add
movsl
sub
sbb
dec
addb
and
dec
xorl
daa
aad
aam
rolb
mov
cmp
pop
out
inc
push
pop
mov
stos
lcall
or
pop
cld
mov
gs
pusha
add
cli
pop
int
inc
lret
out
add
stc
rcll
and
jnp
xor
xchg
insl
sbb
add
adc
out
mov
mov
or
je
inc
push
add
xchg
adc
rolb
pop
nop
fs
cwtl
aad
aad
add
xor
sbb
mov
sbb
in
push
inc
lea
outsl
loop
fcomip
xorl
dec
outsl
addl
jb
fnstcw
addb
mov
stc
in
dec
adc
adc
jb
loopne,pn
jbe
icebp
out
lcall
fimuls
jne
andl
xlat
fs
inc
add
sub
add
adc
stos
xchg
in
pop
and
aas
cmp
outsl
jge
push
imul
adc
gs
sub
jb
cmp
lock
xchg
mov
xchg
mov
add
push
add
add
lea
xchg
xchg
push
movl
mov
test
lret
cli
mov
push
pop
or
xchg
icebp
mov
cmp
push
jp
je
inc
and
jge
popf
pushf
cs
test
add
call
mov
inc
dec
push
ss
rcll
test
add
mov
movsb
daa
sub
xorl
stos
jbe
push
lcall
sub
ja
or
dec
lock
insl
cld
lret
sub
mov
cs
jns
add
lods
mov
inc
add
roll
add
xor
loop
addr16
ret
xchg
hlt
aam
out
ret
lahf
inc
add
push
and
lods
and
fnstenv
xchg
int3
xchg
je
inc
add
cmp
sarl
stc
xchg
fcoml
test
pop
sbb
je
lods
rcrb
cmpsl
ja
jb
add
and
dec
jle
mov
idivb
notl
gs
dec
sbb
add
test
test
inc
add
push
jecxz
jb
push
imul
inc
add
add
movsl
jg
add
pop
popa
sub
pop
add
mov
add
push
mov
frstor
pop
hlt
dec
movb
lret
jecxz
xchg
leave
push
mov
popf
fldenv
mov
inc
int
lret
jge
loopne
divb
add
mov
xchg
mov
add
mov
sahf
lret
dec
aam
xchg
cmp
sub
or
loope
jnp
lret
and
lea
enter
repz
sub
dec
mov
cmpsl
subl
mov
inc
add
xchg
lods
fyl2xp1
xor
and
idivb
mov
inc
movb
ret
rolb
add
popf
mov
xor
sbb
das
xor
outsl
jo
test
fdivrp
pop
xor
bound
xchg
into
ja
call
clc
dec
add
or
sbb
icebp
icebp
inc
aam
addb
scas
add
cmp
add
mov
jl
das
mov
nop
fs
push
pop
movb
add
pop
pop
pop
mov
jmp
push
lods
stos
mov
lret
add
outsl
jle
xor
dec
dec
sbb
or
push
xchg
jae
lock
add
into
xor
imul
sti
sbb
sub
inc
add
jmp
addb
outsl
sub
mov
fwait
xor
pop
js
movb
mov
ret
repz
adc
add
daa
push
add
fisubl
jbe
adc
cmp
add
out
enter
xchg
jo
add
es
pop
jle
mov
jne
in
sbb
test
adc
xor
loopne
rolb
xor
add
xor
std
mov
xchg
adc
xchg
mov
hlt
fwait
mov
lcall
jns
push
fimuls
mov
jns
shlb
testl
or
push
test
xchg
addb
push
jae
adc
bound
pop
cld
pop
iret
test
sbb
pop
leave
sbb
pushf
sbb
popf
in
lods
ss
cmc
popa
jb
lock
pop
iret
movb
add
pop
mov
xchg
cli
cmp
lods
mov
add
std
out
sbb
shr
das
imul
inc
add
mov
add
and
roll
and
add
mov
rcrb
pop
or
add
mov
xchg
mov
lock
ret
add
cmpsb
loope
mov
mull
rcrb
add
lds
push
in
add
scas
pop
jae
sub
inc
push
adc
in
cmp
nop
rclb
add
add
mov
mov
dec
bound
jns
sub
dec
addl
pop
mov
shll
add
das
xchg
cmp
dec
gs
jg
popf
mov
add
push
add
out
inc
sub
sbb
cmp
bound
xchg
xor
mov
rolb
xchg
push
add
pushf
adc
xlat
mov
mov
mov
sub
mov
mov
adc
lcall
movsb
cmp
jns
std
fisubs
mov
add
cld
rolb
addb
cwtl
jnp
daa
push
push
call
lahf
mov
xchg
cmp
adc
cli
out
inc
push
and
nop
clc
sub
push
lcall
xor
push
xor
gs
add
sahf
sub
dec
dec
out
sbb
add
shll
das
mov
dec
out
add
rolb
cmp
add
leave
mov
dec
pop
add
stc
jns
pop
sbb
pusha
add
push
andl
add
dec
mov
add
repz
insb
mov
pusha
add
addb
mov
add
add
stos
imul
mov
sub
repnz
add
pop
mov
lahf
xchg
and
lahf
sub
add
jecxz
rclb
fcompl
addr16
incl
outsb
sub
in
or
mov
push
mov
and
xlat
pushf
out
push
push
jl
lret
mov
stc
bound
mov
je
out
loopne
add
bound
inc
add
inc
int
loopne
es
push
shll
add
xlat
xchg
dec
outsb
jmp
call
in
mov
and
loopne
add
and
push
aad
js
fimull
jnp
fistl
pop
lcall
arpl
push
sub
cmpsb
sbb
sarl
jae
cmpsb
jo
add
mov
push
lods
mov
add
add
out
aad
xchg
lret
jns
ret
pusha
add
scas
mov
lods
dec
xchg
xchg
fldt
fwait
xchg
dec
movsl
pop
add
fidivs
mov
lret
sbb
in
add
divb
add
enter
add
and
add
in
xor
add
push
mov
sub
jb
call
sub
sti
cmp
stos
jnp
add
jne
adc
mov
fistpll
mov
lcall
pop
scas
js
mov
out
add
dec
add
arpl
shlb
and
mov
fnsave
outsl
mov
xlat
sub
lea
sahf
or
push
push
inc
add
mov
xchg
popa
or
push
aad
add
shr
out
xchg
test
mov
ficoms
cwtl
mov
push
jne
mov
ds
adc
push
movl
sub
cmp
shll
out
pusha
add
pushf
pop
add
sub
enter
jp
add
xchg
movb
xor
mov
mov
cmc
data16
arpl
mov
mov
les
pushaw
add
jg
adc
mov
pop
rorl
adc
jp
add
out
add
jp
cmc
sub
into
std
xor
rcll
sbb
dec
adc
xor
mov
add
popf
jle
outsl
mov
mov
fld
js
fdivr
in
cmc
out
cmpsl
shll
mov
mov
xor
decl
xchg
inc
jne
adc
pop
aaa
jne
cmpl
xor
add
add
push
idivb
and
das
icebp
mov
test
call
cmp
mov
inc
add
add
aas
xor
add
mov
cmpsb
sarl
daa
ljmp
and
cmp
xchg
icebp
lods
mov
add
mov
mov
adc
add
mov
add
das
fisubl
sti
cmp
imul
push
lea
add
mov
mov
jmp
pop
cmp
jecxz
ret
jb
jb
cld
adc
in
mov
imul
add
dec
sub
test
mov
imul
ffree
xor
and
pop
and
sbb
aam
out
dec
pop
out
pusha
add
cmp
imul
dec
scas
sahf
add
leave
xchg
adc
in
repz
add
repz
cs
add
jnp
mov
popa
in
dec
outsb
mov
mov
sbb
dec
inc
pop
adc
inc
add
and
fisttpll
enter
jo
xchg
fsubrs
mov
call
jae
ret
stc
jnp
js
mov
adc
pop
cmc
push
jmp
es
push
sbb
jle
mov
add
loopne
addb
cltd
stos
notb
add
pop
and
call
add
outsb
xchg
sub
stc
cwtl
andl
sbb
jb
int
add
lea
loop
int3
les
dec
clc
jnp
loop
lret
pop
stc
sarb
rorl
js
and
ljmp
push
fidivl
repnz
arpl
imul
pop
jns
dec
scas
sbbl
inc
xor
xchg
dec
jl
rolb
pop
fdivrs
add
int
mov
jmp
inc
jno
popf
movb
sbb
pop
inc
and
jmp
ret
sub
test
push
fdivrs
xchg
cmovno
movsb
dec
hlt
shll
shll
pop
mov
mov
int
inc
les
mov
push
or
jle
pop
dec
aas
fwait
test
popf
adc
lret
pop
sarb
stc
into
pop
aas
and
outsl
xchg
aas
inc
add
sub
pop
hlt
lret
leave
fwait
les
mov
push
addb
add
imulb
inc
fstpl
rolb
pop
sub
xchg
movsb
or
mov
or
addb
stos
out
and
push
cmp
adc
add
clc
jno
and
push
add
mov
xchg
dec
mov
push
xorl
mov
cmpsl
jmp
les
and
mov
inc
add
mov
adcl
test
add
jno
sub
mov
lahf
inc
mov
in
leave
inc
add
add
jb
inc
add
jbe
aam
sbb
sbb
mov
and
rol
aaa
mov
xchg
jae
add
inc
add
push
fcmovb
inc
add
leave
inc
mov
push
out
ja
push
aas
fcomip
rolb
cmpsl
xchg
rolb
add
imul
movsb
and
mov
lret
ja
int3
repz
adc
paddusb
jl
jge
movsb
sub
and
loop
or
sbb
or
mov
add
add
add
mov
dec
out
mov
movsb
pushf
dec
mov
or
cmpsb
fcoml
xor
add
sub
inc
lahf
jmp
fdivs
push
fisttpll
and
pop
jb
ror
and
dec
mov
jg
xor
and
jecxz
mov
pushf
xchg
call
add
jecxz
or
and
inc
add
mov
mov
jle
push
add
arpl
sbb
into
pop
dec
jb
jp
lock
add
in
outsb
push
orl
and
lret
loopne
or
add
cmpsb
leave
rorb
ret
leave
fldcw
loopne
stos
xchg
das
lods
or
popf
dec
mov
xor
pusha
add
add
xor
sbb
push
das
pop
movsb
cmp
dec
sub
pushf
fsubl
add
adc
mov
into
mov
dec
outsl
mov
dec
mov
shrb
add
cmp
or
add
or
mov
push
cmpl
mov
xor
outsb
sub
and
rolb
sbb
push
in
xor
dec
iret
sub
test
push
or
shlb
pusha
add
mov
addb
insb
push
ds
add
xlat
fwait
clc
dec
lret
test
out
leave
bound
sbb
push
mov
add
dec
lea
add
push
repz
add
or
sub
push
add
rolb
jmp
sbb
lcall
hlt
pop
add
fdivp
das
test
add
sbb
xor
xor
sbbl
out
add
jecxz
add
adc
stos
xchg
xchg
cld
rcll
adc
mov
push
dec
xlat
mov
movsl
sub
daa
jg
add
dec
out
out
sbb
test
sbb
push
call
mov
aad
jb
mov
aas
outsb
sbb
pusha
add
add
in
sbb
xor
push
mov
js
xchg
xchg
xor
in
pop
inc
add
movsl
pop
sub
movb
ds
sub
add
jmp
std
pusha
add
jle
add
mov
rol
fdivl
xor
roll
mov
push
pop
dec
js
mov
mov
or
mov
outsb
lret
xchg
hlt
xchg
ret
xor
pop
xchg
fdivrp
arpl
pushf
cmc
movsb
mov
aaa
repnz
sbb
gs
add
adc
and
outsb
mov
lea
jecxz
addb
mov
bound
into
rclb
mov
outsl
stos
adc
inc
add
das
cmp
add
xchg
mov
test
out
mov
sub
sub
sub
and
es
adc
cmp
mov
adc
mov
cmp
cmpsb
mov
add
adc
inc
cs
push
loope
mov
aaa
outsl
out
jg
fnstenv
cwtl
sahf
jae
add
aad
sti
pop
jp
aas
iret
movsl
int3
lret
mov
xor
sub
or
lret
scas
lcall
mov
test
loopne
mov
add
xor
lret
pop
sbb
add
into
xor
mov
stos
xor
stc
rolb
add
movb
sbb
xor
in
popa
pop
and
fnstcw
aad
cmp
and
ljmp
dec
pusha
add
adc
or
in
push
insl
cmp
push
or
push
mov
ljmp
bound
adc
ds
hlt
lcall
mov
add
jmp
add
in
insb
and
mov
fnstsw
loop
fisttpll
mov
pop
mov
mov
mov
repnz
mov
ljmp
mov
cmp
daa
lds
test
xchg
inc
add
pop
test
xor
push
test
or
cmp
mov
push
loop
mov
jge
push
inc
add
lret
xchg
das
fdivrl
mov
rolb
fidivl
pop
push
dec
cmp
insb
ds
mov
mov
aam
ret
in
push
sub
enter
or
imul
cltd
xor
inc
lret
and
inc
add
add
jb
das
repnz
in
iret
jno
mov
f2xm1
dec
ss
cmp
into
jb
add
sbb
mov
int3
popf
orl
pop
xchg
rcll
nop
jb
pushl
rolb
and
sub
sub
mov
fadds
sbb
mov
lahf
out
test
sbb
test
ljmp
cs
inc
add
mov
sbb
xor
addb
pop
xor
jg
fcmovnu
loope
mov
add
je
rol
pop
pushf
addb
dec
sub
add
pop
push
xchg
pop
rorl
pop
in
jns
mov
dec
test
jl
rcrl
aam
int
add
mov
mov
jae
add
sbb
push
jne
sbb
cwtl
imul
adc
mov
mov
pusha
add
add
sbb
mov
jbe
push
mov
add
iret
nop
test
inc
add
sbb
les
cmp
ret
add
arpl
in
repnz
idivl
outsl
loopne
add
lret
test
test
test
push
fisttps
jae
lret
sub
in
and
and
sbb
xchg
mov
add
out
test
pushf
aam
rorl
sub
jae
sub
jbe
mov
mov
insb
push
jmp
cmpsb
mov
or
add
xchg
pop
sahf
push
jbe
add
push
filds
stos
lret
add
nop
addb
jbe
imul
add
push
add
cmp
loop
outsl
and
rolb
cli
ja
and
enter
shrl
lods
idivb
mov
sti
xchg
pop
lods
fbstp
jle
iret
jae
sbb
jbe
outsb
xchg
sub
rcrb
jge
test
mov
ret
and
addl
or
xlat
rcl
cmp
mov
pop
adc
cmpsb
in
clc
outsl
ret
dec
pop
cmp
test
sub
xor
push
cmc
inc
add
mov
lods
add
push
aaa
data16
jo
mov
add
and
outsl
and
ds
mov
adc
jne
mov
lret
and
out
jno
fildll
add
mov
mov
inc
add
addl
or
add
fstl
inc
add
idivb
xor
inc
add
insb
xor
stc
or
pop
pop
add
sub
test
cwtl
fcomps
std
and
outsb
inc
add
imul
and
push
in
loop
sub
mov
scas
jl
or
pop
xor
addb
xor
jne
or
push
sbb
add
fdivr
incb
sub
mov
add
cmp
lcall
add
cld
int3
cmpsl
cmc
add
enter
popf
jbe
mov
dec
addb
fbld
sar
addb
test
ret
mov
xchg
sub
and
xchg
dec
sahf
xchg
push
inc
add
ret
mov
or
push
imul
repz
adc
mov
sub
mov
jge
xchg
cli
sub
ds
popa
ret
es
inc
pusha
add
leave
flds
fnstenv
xchg
les
push
push
lcall
test
add
je
xchg
in
leave
jnp
pop
stc
dec
pop
push
cld
fcomps
cmc
xor
int3
add
icebp
aaa
popf
or
pop
adc
pop
xor
arpl
std
cs
mov
push
mov
adc
mov
or
ljmp
push
sbb
inc
add
cmp
sub
mov
and
push
in
xor
shlb
jbe
or
add
pop
inc
add
fbld
add
int3
mov
arpl
and
lods
push
pop
cs
add
pop
subl
inc
add
lretw
ds
add
add
push
mov
lods
cmp
add
push
je
lret
cmp
add
les
outsb
pop
outsl
xchg
inc
add
lock
jp
and
or
arpl
insl
push
push
xor
stos
mov
cmp
inc
add
inc
add
movsb
loop
cmpsl
bound
in
or
xchg
ret
inc
jl
add
test
xchg
addb
jae
mov
push
push
aad
out
divl
jns
mov
fstpt
loope
mov
push
or
push
mov
xor
add
insl
stos
adc
sub
mov
frstor
add
addb
or
xor
shll
loope
addl
inc
pop
fsubl
add
rcll
addb
sbb
inc
lret
or
push
addl
jp
xor
mov
mov
addb
xor
xchg
lds
xor
iret
inc
add
mov
cmpsl
pop
pop
adc
or
adc
aas
push
pop
xlat
xchg
xor
push
fnstenv
not
and
pop
lods
in
mov
or
mov
cwtl
scas
into
cltd
rclb
xchg
add
jns
mov
out
and
add
add
in
inc
xor
push
adc
or
push
mov
test
loopne
out
punpcklbw
adc
jle
aam
aad
sbb
into
filds
jecxz
pop
rolb
imul
jmp
xor
popf
sbb
add
mov
and
push
int3
scas
xor
aad
inc
ljmp
inc
outsl
mov
adc
jb
xchg
movsb
data16
or
in
add
pop
xchg
lahf
iret
int3
cltd
or
insl
dec
stos
imul
cs
in
test
add
outsl
push
add
into
pop
cld
es
movsb
rorb
adc
xor
sub
shll
add
sbb
xor
cmp
push
jge
pop
pop
xchg
and
xchg
mov
mov
iret
icebp
in
add
jbe
mov
sub
add
imul
sub
fs
scas
test
nop
or
idivb
imul
xlat
sub
cmpsb
push
xchg
push
icebp
aaa
mov
add
ss
outsb
arpl
sub
aaa
or
mov
stos
inc
add
pop
jl
aam
or
sahf
mov
bound
shrl
xchg
stos
das
test
nop
xor
xor
mov
and
fidivl
jp
sahf
dec
movsb
cmp
cmp
sub
dec
inc
add
add
stc
mov
sub
mov
xchg
pop
repz
es
inc
or
add
mov
xor
out
fs
testl
jge
xchg
or
fcoms
xor
shl
cmp
repnz
pushf
shlb
mov
push
cmp
arpl
cmpsb
push
push
rolb
cmc
clc
jno
jmp
scas
daa
daa
test
add
addr16
pop
pop
adc
mov
pop
sbb
add
push
add
out
shlb
dec
testl
cmp
inc
mov
lahf
inc
mov
nop
into
sub
js
push
pop
mov
lea
jecxz
pushf
push
pop
test
add
insw
fdivs
ret
dec
inc
fs
in
push
add
test
or
or
sbbl
pusha
add
and
iret
movb
popf
xor
stos
and
mov
xor
aam
enter
inc
je
je
stos
add
int
insl
call
scas
pushf
pop
cld
sub
into
mov
out
nop
push
test
sahf
pop
in
adc
das
mov
dec
lods
scas
sub
sbb
add
aaa
mov
xchg
test
sub
mov
out
hlt
dec
lret
or
and
pop
mov
test
subl
test
push
mov
es
add
jnp
out
mov
add
jmp
bound
jns
mov
dec
xchg
mov
cs
movsl
icebp
enter
xor
sahf
rolb
mov
addb
lods
xchg
icebp
dec
fs
movb
adc
cmpsl
sbb
movsl
sbb
add
add
fisubrs
cmp
fs
and
push
stc
imul
xor
push
pop
push
add
test
pop
push
add
add
shl
aam
xchg
stos
std
push
pop
mov
jmp
cld
cmc
lcall
jle
fsubs
fisubrl
adc
adc
adc
psubd
mov
test
inc
add
xchg
ffree
add
fsubl
out
cmpl
jl
sbb
jmp
mov
add
cmp
or
clc
ja
popa
aaa
dec
inc
sbb
or
rcll
adc
fiadds
and
aaa
enter
arpl
fnstcw
je
aad
rcl
call
pop
bound
push
mov
add
cmp
adc
adc
stos
mov
xchg
das
mov
leave
cmpsl
cltd
mov
fld
fnstsw
cmc
sub
call
mov
adc
fisttpll
jle
movsl
add
call
arpl
push
rcll
add
in
or
arpl
xchg
mov
arpl
ss
lahf
jno
insl
out
loop
mov
xor
lcall
add
fstl
add
iret
pushf
push
mov
int3
pop
daa
sbb
ds
addb
cmp
add
cmp
mov
dec
jne
sahf
pop
imul
inc
add
and
jecxz
insl
mov
add
fucomi
jno
add
into
mov
addb
das
out
dec
clc
movb
mov
fldenv
xor
rolb
std
inc
add
pop
aas
int
ss
inc
add
push
int
std
fidivs
outsl
cltd
pop
leave
jb
dec
fidivl
js
out
sbb
add
lods
push
or
cmpsl
repnz
repnz
stc
lahf
inc
add
bound
jmp
xchg
mov
dec
xchg
arpl
add
mov
loope
fists
dec
into
je
in
lea
or
mov
add
xor
int3
leave
mov
loopne
add
jo
push
mov
xchg
xchg
dec
push
dec
or
add
jno
add
sub
sub
ljmp
push
add
fs
mov
aam
mov
push
out
rclb
cmp
pusha
add
add
insb
adc
jmp
nop
adc
dec
sbbl
int
daa
out
test
or
iret
int3
js
in
lds
mov
daa
cmpsb
jp
cltd
sub
add
xor
push
out
jge
bound
rclb
lods
les
or
idivb
mov
xchg
das
cltd
insb
daa
adc
cmp
lods
adc
jne
adc
es
popa
add
sahf
loope
mov
xor
addl
xchg
add
std
pop
mov
pop
mov
inc
or
movb
cmpsl
inc
int3
or
loopne
int
and
add
hlt
add
jp
aad
in
xchg
ret
imul
xchg
je
mov
js
fwait
stc
jb
outsl
mov
push
iret
stos
psubb
push
mov
rclb
pushf
scas
xchg
and
mov
sub
idivb
push
sub
push
xchg
sub
dec
in
xor
idivl
xor
mov
negb
xor
repz
pop
gs
sub
cld
or
jp
pop
popf
cmp
jmp
ficoml
cwtl
cmp
mov
mov
add
add
and
lods
into
iret
push
push
jmp
daa
addb
cmp
ds
sub
sub
out
xor
aas
pop
jno
inc
xchg
fistps
add
js
nop
popa
mov
clc
sarl
std
dec
clc
inc
mov
push
imul
fmul
add
sbb
mov
outsb
outsl
push
enter
cs
int
ret
out
data16
sbb
cmp
add
imul
dec
cmp
or
adc
sbb
cli
ror
and
lock
icebp
addr16
sub
adc
jno
mov
or
mov
xchg
mov
adc
adc
push
push
out
jb
push
sbb
hlt
cmpsb
lret
fistpll
int3
jmp
cld
ror
pop
in
cmc
mov
jne
fiaddl
add
aad
addb
push
add
mov
movsl
cld
das
cwtl
arpl
lahf
inc
add
addl
adc
or
loop
push
and
or
test
into
movsl
mov
cli
lret
ficoml
xor
icebp
adc
stos
add
rcr
int
push
mov
pop
les
call
cmpsb
add
out
lods
pop
repnz
mov
adc
mov
mov
jbe
jmp
lret
dec
mov
cmpsb
aad
ljmp
jp
stos
push
loopne
pop
mov
nop
cmp
push
cmp
pop
stc
dec
cmpsw
pmuludq
lods
mov
mov
lods
cmp
push
mov
mov
push
mov
test
add
add
xor
aas
xchg
cli
add
jae
iret
fcmove
and
jp
or
jp
inc
add
inc
jae
inc
add
xor
lds
jae
sub
push
and
push
mov
notb
shll
mov
push
mov
rorl
call
add
push
jns
sbb
fadds
add
data16
xchg
orl
add
xchg
movb
hlt
jb
mov
inc
call
in
xchg
imul
inc
and
outsl
xchg
insb
in
sub
and
adc
push
inc
add
jp
mov
fildl
add
mov
js
xor
aaa
pushf
cmpsb
ljmp
jns
sub
imul
add
xor
add
leave
arpl
add
add
pop
ret
push
mov
bound
pop
cld
mov
insl
xor
pop
mov
mov
fistl
sub
or
pop
aad
add
adc
pop
adc
push
xor
inc
les
repnz
sub
pop
mov
pop
fs
dec
push
add
jle,pn
jmp
insl
pop
das
push
lods
out
and
int
mov
xchg
cmp
and
testb
jecxz
cmpsl
fcoml
adc
jg
divl
mov
xor
mov
push
stos
addb
out
sbb
jmp
sub
test
int
and
cmpsb
cmp
outsb
ja
test
outsb
lret
add
add
mov
sub
mov
stos
loopne
rcr
ret
das
clc
aad
mov
add
dec
std
xchg
jmp
ds
clc
sub
scas
in
std
mov
and
push
mov
out
adc
ss
sbb
mov
sbb
addr16
pop
sbb
or
xchg
fucomi
xor
xor
dec
cmp
add
pop
or
ds
imul
inc
add
xchg
mov
out
add
cli
test
ja
cmpsb
in
ss
push
mov
push
lock
iret
fcmovnu
lods
pop
addb
shll
add
jbe
sbb
push
lods
mov
cmp
out
dec
add
stos
dec
xchg
dec
jne
dec
cmpsb
nop
fisubl
sub
add
and
inc
add
inc
add
ss
mov
push
cwtl
jns,pn
cltd
test
repnz
call
loop
sub
aad
dec
or
adc
cli
inc
add
rolb
es
dec
fldl
sbb
movsb
andl
dec
dec
and
lock
sbb
lret
push
fisttpl
pop
jne
fstpl
add
ja
in
mov
jno
inc
add
jb
jmp
sub
pop
fsubl
or
and
cld
shl
lods
inc
mov
notl
inc
in
jnp
and
xchg
popl
aas
iret
addb
jne
mov
addb
leave
outsb
insl
test
lret
cld
push
push
add
hlt
fs
sub
mov
and
lock
jmp
add
add
adc
push
cld
fisttpl
lret
mov
fstpt
mov
add
push
inc
add
scas
insl
push
ljmp
addr16
shlb
stc
lcall
mov
wrmsr
sahf
inc
add
into
xchg
and
push
movsl
rcrl
and
or
pop
sbb
and
lcall
fistpl
sbb
mov
jbe
in
xlat
mov
pop
int
aas
daa
jmp
xor
mov
add
xor
add
inc
push
mov
dec
xchg
mov
fistl
and
shr
addb
sbb
inc
add
repnz
sub
cmp
adc
hlt
lret
add
aam
insl
pop
mov
sahf
fildl
popa
dec
movb
std
imul
add
out
dec
mov
clc
frstor
sbb
sti
pop
xor
add
or
shlb
imul
jp
xchg
dec
sbb
out
cmpps
cli
adc
xchg
xor
push
cmc
jp
jo
mov
xor
fistps
add
es
push
fs
hlt
mov
pop
adc
add
imul
cmp
imul
cmpsb
push
sub
cmp
xchg
dec
fimuls
jecxz
dec
movsl
roll
popf
add
sti
loopne
mov
add
and
or
add
std
cmp
add
or
mov
mov
jmp
sarl
and
stos
cmp
jae
outsb
cltd
test
mov
mov
sub
jnp
sahf
mov
cmp
sub
xchg
movsl
addb
sbb
jbe
add
jmp
scas
mov
loope
clc
lahf
in
sub
lea
aam
jmp
sbb
cwtl
inc
add
out
movsb
cmp
xchg
cmp
mov
xor
add
daa
hlt
cwtl
pop
jne
subl
addb
sub
add
inc
add
mov
xchg
jecxz
mov
add
repz
add
push
push
mov
mov
add
outsl
jno
addb
jae
cs
jecxz
imul
daa
jbe
mov
cmpsb
or
jno
popa
or
push
add
clc
push
daa
test
cmpsb
xor
add
and
fldt
in
dec
lds
cld
rcrl
xchg
mov
add
popa
jb
test
out
loope
cmp
add
jne
push
fwait
dec
not
mov
aad
push
out
xchg
roll
jmp
out
and
push
cmpsl
test
add
jns
pusha
add
mov
jmp
bound
in
in
int3
xchg
test
mov
pusha
add
mov
sahf
test
clc
add
add
mov
add
aas
scas
repz
lds
roll
lret
add
movsl
pop
insb
inc
adc
mov
jnp
push
test
add
xchg
sub
inc
add
mov
jae
xor
and
addr16
repnz
ret
or
cltd
cmpsl
mov
xor
pop
sub
add
mov
jmp
inc
loope
movsl
inc
or
movsl
mov
xlat
jns
adc
xor
dec
and
aad
mov
push
cmpsl
inc
mov
xchg
divb
jge,pn
push
test
lret
lret
cmp
pusha
add
shrl
dec
mov
fstl
scas
xor
test
inc
add
in
inc
add
push
add
jle
addb
icebp
jle
iret
test
dec
lds
loopne
add
xor
xchg
mov
sub
push
mov
cmp
pop
daa
std
test
jp
push
sbb
cmp
pop
or
or
add
or
lods
incb
scas
xchg
aad
mov
xor
leave
mull
xor
inc
outsb
cld
test
cltd
mov
mov
jge
arpl
inc
jl
pop
pop
mov
pop
mov
clc
or
daa
scas
sbb
mov
sbb
les
pop
or
add
dec
adc
add
data16
aad
pop
push
jae
ret
loope
add
jae
jns
fdivs
inc
add
and
fidivrs
dec
pop
bound
push
cmpsl
xor
repz
lahf
push
test
cwtl
add
and
shll
inc
loop
test
xchg
int
inc
lods
rcrb
sahf
in
push
int3
cmc
daa
add
lock
bound
mov
cmp
ret
sub
scas
adc
shrb
js
test
add
add
cmc
xchg
out
push
ud0
xchg
pop
jne
ficoms
xchg
jl
rolb
scas
ljmp
inc
add
dec
mov
and
xlat
loope
insl
mov
jl
movsb
fistpl
add
jne
mov
mov
outsb
dec
das
mov
add
xchg
into
gs
int3
and
jne
lds
loopne
push
out
add
dec
fmull
add
push
addb
xchg
xor
rcrl
inc
add
rcrl
int3
sub
insb
test
enter
int
out
stc
mov
jo
add
aas
mov
insb
or
or
adc
mov
dec
sub
add
pop
inc
push
inc
add
inc
imul
pushf
xorl
shr
into
push
or
add
or
icebp
push
add
into
add
add
outsl
pop
shll
mulb
das
mov
mov
add
push
xor
stos
repnz
bound
ficoms
movb
mov
sbb
into
lods
xchg
sti
bound
fcmovnu
rcl
loop
push
jle
xchg
cltd
and
cmp
gs
test
add
pop
loopne
push
cmp
aaa
or
jmp
popf
adc
ficoml
movb
outsl
mov
ret
inc
add
add
sbb
mov
cmpsb
lds
mov
jns
add
jnp
xor
out
movb
xor
add
pop
or
dec
pop
movsl
inc
add
mov
loop
adc
gs
jne
inc
xchg
pop
inc
add
mov
jg
test
mov
rolb
jnp
loop
shll
pop
pusha
add
roll
fldcw
in
cli
dec
into
dec
xchg
push
mov
jmp
inc
add
dec
rcl
xchg
mov
out
sub
les
scas
ret
and
sti
add
push
lret
pop
or
xchg
mov
inc
add
sbb
bound
pop
inc
aam
ret
pop
dec
inc
add
inc
add
xor
lds
lcall
pop
sahf
cmpsl
pop
shlb
mov
notl
xchg
inc
add
scas
xchg
pop
shl
leave
call
pop
lea
lret
cmpl
push
add
mov
xchg
push
add
inc
pop
dec
pop
ja
add
lds
add
cli
mov
cmp
fldenv
popf
lcall
sbb
add
lret
out
pop
lea
and
aas
into
out
sub
sub
sahf
ficoms
cld
test
sbb
and
sub
ret
and
sahf
mov
sbb
mov
ret
sub
leave
ljmp
inc
bound
fsubl
mov
mov
loop
add
loopne
les
xor
jno
jecxz
mov
orl
movsl
jns
xor
and
cwtl
sbb
ja
aam
int
mov
out
inc
in
fwait
xchg
or
das
and
dec
data16
xchg
xlat
pushf
add
loop
push
sarb
xchg
test
inc
add
jno
fstpt
repnz
fmuls
mov
ficomps
add
push
inc
add
into
clc
pop
loope
rolb
loopne
cltd
pop
pusha
add
cmpsl
mov
xchg
add
mov
cmpl
aam
mov
add
cwtl
push
pop
sbb
cs
lret
jne
add
add
sti
iret
jecxz
test
fldenv
lea
jb
ret
pop
cmp
add
inc
test
push
jb
sub
adc
das
add
sahf
xor
sub
push
xlat
addb
adc
add
mov
pop
cmp
jbe
mov
ja
fmuls
insl
dec
mov
ja
jnp
xlat
movsl
rolb
repz
faddl
add
add
add
pop
inc
add
jmp
cmp
in
mov
addr16
push
pusha
add
add
add
push
add
xchg
jecxz
push
stc
stos
mov
inc
mov
ror
imul
sahf
imul
jno
das
sbb
lods
xlat
cmp
dec
pop
xchg
or
test
xchg
mov
call
pop
ror
xor
adc
nop
int3
lds
lahf
adc
and
mov
les
pusha
add
scas
and
sbb
jle
dec
daa
test
pop
or
aas
test
and
lcall
mov
ss
pop
push
out
insb
mov
xor
jp
stos
scas
jp
sub
divl
fwait
mov
inc
and
addb
adc
add
bound
dec
outsl
jge
adc
movsl
push
jns
xchg
hlt
pop
sub
jnp
sbb
add
fcmovbe
push
leave
mov
pop
cwtl
pop
xchg
bnd
addb
and
mov
cld
cld
outsl
mov
imul
int
jno
adc
pusha
add
jl
or
xchg
inc
push
or
add
dec
nop
dec
rcl
stc
add
dec
xor
sbb
cmp
add
mov
cmp
cwtl
out
jmp
pop
lret
xor
push
inc
add
lods
and
push
push
shll
add
push
mov
jnp
ret
and
cmp
mov
cmp
dec
sbb
std
sub
in
pop
out
dec
test
cmp
adc
ficoml
xlat
add
adc
mov
cmp
mov
pop
inc
jns
ja
add
inc
mov
and
add
idivl
dec
push
cmpsl
pop
sbb
popa
xchg
lock
sub
xchg
fdivl
sti
les
xlat
rolb
std
sub
add
sahf
into
clc
adc
andl
add
fiadds
xchg
out
mov
mov
test
mov
mov
pop
sub
mov
mov
dec
repz
stos
sub
inc
add
adc
or
out
stos
fildl
mov
add
push
dec
cmp
addb
addr16
pop
insl
scas
jno
push
repnz
loop
and
stc
js
push
cld
aaa
jno
push
push
mov
sub
les
test
pop
push
std
sub
inc
aad
pusha
add
jb
push
repz
mov
ja
add
xlat
es
mov
shlb
mov
scas
adc
out
cmpsl
adc
or
sub
mov
or
lahf
jne
jecxz
scas
jl
add
sub
pop
xchg
fsubs
aas
hlt
sub
out
add
aaa
out
cs
sbb
sub
out
sub
popf
cmp
aaa
jp
jb
xchg
dec
cmp
and
mov
ret
cwtl
fcoms
dec
push
inc
test
adc
popa
notb
cmp
push
mov
add
dec
mov
cmc
loopne
dec
aas
adc
mov
xchg
cmp
repnz
adc
dec
xchg
lcall
inc
add
cmpsb
add
in
dec
pop
js
loopne
cwtl
mov
fcoml
sub
xchg
mov
mov
mov
dec
int3
mov
inc
fcoms
int
push
mov
mov
push
rol
add
scas
mov
ljmp
add
xchg
movb
das
data16
or
pushf
outsl
xchg
das
and
ljmp
dec
mov
jmp
mov
adc
add
mov
mov
pop
jle
pop
ja
jbe
repnz
mov
jecxz
add
dec
rolb
inc
imul
mov
push
cltd
aad
cs
lds
mov
imul
out
xor
popa
pop
test
sti
cmp
test
push
mov
das
scas
xchg
call
jo
add
mov
pop
push
stos
int3
shlb
and
add
mov
xchg
divl
or
add
sarl
push
add
add
mov
cwtl
sub
sub
pushf
stos
repnz
mov
add
add
ret
mov
xchg
loope
fwait
mov
cld
fcomps
sahf
cs
and
nop
pop
cmp
sbb
jle
jo
mov
xchg
mov
mov
mov
ja
inc
push
push
sub
ljmp
add
mov
test
or
ss
pop
xchg
add
or
sub
jo
fsubl
xchg
addr16
and
cmpl
les
cwtl
subl
mov
iret
jae
xor
addb
cmp
fs
sahf
into
lock
add
loope
fbld
jns
std
sarb
push
sub
add
lcall
jne
and
mov
cld
out
mov
aam
or
imul
and
add
repz
sahf
fbld
cmpsl
fcom
test
sbb
rolb
int
mov
into
lods
loope
pop
lret
pop
dec
or
leave
mov
xchg
or
or
mov
movsl
and
mov
mov
jl
xchg
aad
sbb
pop
push
xchg
xor
or
mov
pushf
into
shrl
mov
sbb
add
outsl
imul
add
add
adc
nop
fmull
popa
push
xor
ljmp
jbe
xchg
das
and
sub
testb
jne
cmp
dec
aaa
rcrl
outsb
lods
sbb
mov
dec
xor
imul
imul
sbb
add
ljmp
popl
push
add
cmp
out
fsubl
es
notb
or
push
add
pop
adc
mov
jmp
push
xlat
test
lods
mov
loop
and
enter
arpl
inc
add
into
insb
aad
mov
pusha
add
mov
jmp
sbb
add
push
jg
scas
pop
cltd
insb
pop
jmp
je
addr16
add
add
lds
push
pop
mov
int
pop
iret
imul
pop
pop
out
insl
xor
cmp
sbb
hlt
int
inc
mulb
negl
adc
sub
and
push
pusha
add
mov
adc
and
jno
lret
mov
inc
daa
cmpsl
es
das
sub
xlat
and
addr16
push
add
lahf
adc
outsb
pop
js
bound
sbb
lods
push
addr16
ret
test
int3
jbe
mov
cmpsb
imul
shlb
add
and
arpl
insb
fstpl
jne
out
clc
fistps
ret
jge
test
outsl
pop
mov
dec
shll
cmp
xlat
les
in
mov
imul
cmp
test
add
add
sub
cmpsl
and
addb
into
adc
test
or
movb
iret
or
adc
call
add
add
out
or
subl
cmc
jae
das
addr16
lds
push
sbb
negb
pop
repnz
out
mov
cmpsl
das
lcall
dec
in
ljmp
add
popa
notl
cmp
sbb
popf
test
sbb
pusha
add
sbb
cmp
pop
fcmovu
in
mov
mov
xchg
jge
stos
mov
icebp
movb
bound
sbbl
dec
pop
loop
inc
inc
add
add
enter
mov
add
addb
ljmp
mov
xchg
cmc
out
cs
mov
fdiv
clc
lret
das
jl
hlt
push
jns
int
push
jnp
outsb
mov
mov
rorl
add
iret
out
arpl
mov
jp
test
and
pop
sub
jno
cmp
sub
enter
sbb
inc
add
jle,pt
fs
push
pop
jmp
sbb
ljmp
icebp
sub
or
rorl
inc
hlt
call
push
add
add
mov
jns
add
jmp
adc
push
xor
les
push
popa
push
sub
lock
jno
jae
fdivs
add
in
and
jnp
or
xor
pop
jmp
rolb
mov
cld
xchg
cmp
dec
insb
into
dec
out
es
daa
mov
push
je
stc
imul
cmp
add
dec
scas
popa
push
jmp
add
scas
inc
push
jnp
mov
arpl
xor
xor
sub
adc
push
into
dec
xor
add
xor
mov
rclb
popa
int
pop
mov
push
inc
add
sbb
mov
testl
dec
xor
int3
jae
push
dec
dec
cmpsl
icebp
outsb
test
jne
pop
imul
xchg
shll
sbb
mov
add
xchg
call
and
je
sti
xchg
fsubl
dec
fwait
insb
test
gs
inc
add
cs
lock
int
xchg
test
shl
mov
mov
mov
movsl
dec
and
aam
jge
jle
or
xlat
jge
cmpl
scas
jge
je
sub
cltd
aaa
jno
dec
adcl
je
imul
sub
xchg
rolb
addb
dec
icebp
ror
xchg
outsb
inc
repz
push
lahf
test
pop
out
pop
or
cmpl
jecxz
push
xlat
in
int
sbbl
popf
or
sub
fstpt
xor
and
aaa
sbb
sbb
in
int3
xor
pop
xchg
jmp
xchg
add
adc
pop
xlat
sub
cmp
fbld
nop
pop
orl
movb
add
outsl
pop
sub
add
fwait
out
add
loopne
int
mov
imul
inc
jo
bound
push
mov
into
insl
dec
sbb
movsl
inc
add
or
jbe
add
mov
cmp
push
idivl
outsl
movsb
xor
roll
pop
rorl
mov
aas
lcall
add
nop
sbbl
add
pop
and
and
push
jnp
insb
mov
cltd
aad
lcall
fnsave
leave
lret
aaa
pop
stos
mov
fwait
or
add
lcall
stos
mov
leave
jo
fcomps
mov
scas
sbb
ljmp
test
mov
addr16
push
pop
mov
lods
jle
aas
sub
lahf
shlb
inc
add
push
popf
mov
dec
mov
inc
mov
push
push
leave
in
ret
popa
mov
ret
movb
lahf
fists
fucomp
les
xor
sbb
xor
add
add
mov
ret
scas
inc
add
xor
dec
push
data16
das
fstl
xchg
jge
push
push
add
dec
adc
loope
or
aad
int
add
mov
xchg
sbb
icebp
aam
pop
daa
mov
scas
std
enter
sbb
add
add
icebp
xlat
loopne
arpl
jge
mov
push
or
cmc
jo
rolb
adc
sbb
and
cld
dec
jae
add
lds
or
sarb
imul
lods
and
or
shrl
add
je
fimull
stos
push
mov
outsb
lahf
mov
rolb
leave
inc
add
xor
scas
aas
into
lea
in
jmp
addb
test
push
cmpl
pop
mov
add
stos
lahf
add
daa
stos
inc
add
add
mov
into
xchg
scas
fidivl
mov
xor
into
addb
iretw
xchg
gs
mov
xlat
aam
pop
enter
fcomps
mov
add
outsl
jb
insl
ss
ret
mov
mov
popf
cmpsb
out
seto
ljmp
sbb
call
inc
pop
mov
mov
add
insl
pop
adc
or
push
xlat
mov
cmpsl
call
insl
fists
lret
or
xchg
dec
or
and
leave
sbb
lret
lret
rolb
and
cwtl
in
add
lcall
aas
inc
add
fucomip
mov
jmp
cld
in
push
pop
stos
dec
dec
inc
leave
mov
add
outsl
ror
cmp
jp
aas
lock
mov
adc
cld
or
jle
inc
les
jmp
mov
xchg
cmp
mov
imul
add
pusha
add
out
pusha
add
das
pop
test
sub
outsl
mov
pop
out
pop
pushf
movsb
out
push
adc
mov
cli
movsl
xor
xchg
lret
mov
push
jl
add
pop
rolb
and
lods
mov
push
xchg
in
xor
je
rolb
shll
shll
push
std
dec
inc
add
adc
loope
push
aaa
cmp
xchg
addb
sub
lock
mov
add
das
dec
ret
addb
add
and
cltd
sbb
xchg
jecxz
sbb
pop
mov
in
es
mov
push
mov
xlat
rcl
mov
insl
jle
lea
rep
jg
or
lret
mov
js
mov
push
sbb
xor
add
sahf
mov
fidivrl
ljmp
push
cmpsl
bound
push
xchg
dec
ds
mov
push
mov
scas
sbb
mov
sub
inc
dec
arpl
jge
lahf
lahf
adc
out
negl
out
xchg
add
sub
fdivrs
add
push
lcall
dec
pop
test
scas
test
stc
or
test
outsb
movsl
dec
lret
adc
dec
mov
leave
lock
pop
hlt
cmp
cwtl
inc
adc
add
fistps
mov
ds
sti
push
cmpsl
pop
ljmp
jae
ror
sub
fwait
jbe
in
movsl
aad
dec
push
mov
fstl
mov
inc
inc
add
stos
or
fistps
addb
pop
lahf
aad
push
icebp
pushf
jecxz
bound
ljmp
outsb
pushf
or
pop
je
mov
test
mov
daa
stc
dec
imul
out
outsl
sbb
ljmp
jae
mov
mov
lret
in
xor
addb
inc
in
movsb
dec
in
inc
add
call
lods
aas
pop
into
bound
aam
into
pop
cmp
mov
pop
jnp
daa
cmp
js
movsl
dec
xchg
or
sub
sahf
mov
sti
in
je
xor
cwtl
push
cli
adc
add
add
add
nop
mov
mov
out
lds
pop
pop
dec
xchg
add
mov
push
jb
jge
add
xor
jmp
out
lcall
ds
xchg
or
and
adc
dec
leave
jb
pop
mov
xchg
and
movsb
mov
lret
lar
hlt
movb
add
push
or
roll
hlt
mov
ss
adc
mov
ja
decb
add
popf
inc
add
out
repz
mov
aam
jo
je
push
imul
mov
dec
push
add
mov
rclb
mov
sbb
pop
mov
loopne
dec
iret
xor
adc
push
pushf
inc
mov
pop
jne
sbb
jle
adc
movsl
or
repnz
fmul
add
mov
rol
add
and
fsubrl
clc
daa
xchg
xor
jno
cwtl
fwait
pop
lock
add
mov
adc
jle
cmp
mov
movsl
outsl
test
ss
loopne
fwait
std
cld
dec
jecxz
mov
pop
aad
iret
sub
mov
loope
dec
fldcw
pusha
add
add
out
jecxz
mov
sbb
inc
popf
clc
cld
cli
sbb
push
dec
icebp
xchg
in
ret
xchg
cmpsb
leave
lds
mov
add
jp
repnz
xor
dec
loop
jp
outsl
inc
fcmovnb
add
mov
call
scas
ret
mov
adc
fwait
push
xchg
or
out
mov
mov
pop
or
outsl
addb
dec
test
in
decb
test
mov
inc
add
mov
cmp
sbb
cli
xlat
mov
mov
jl
ret
fs
mov
dec
negl
adc
bound
shr
jno
pop
mov
mov
cmp
mov
leave
dec
les
iret
xor
gs
das
pusha
add
add
mov
cmp
int
add
stos
add
push
call
add
in
in
insb
repz
mov
fs
movsb
ds
clc
mov
mov
and
pop
out
cs
xchg
jle
jl
pop
pop
rorb
divb
dec
enter
mov
int
sbb
push
cld
push
add
cmpsb
out
mov
fisttpll
mov
xchg
cmp
or
cli
fistl
add
loop
fistpl
mov
jl
jne
add
and
ja
and
or
test
movsb
pop
test
mov
add
inc
xchg
and
sub
xor
add
add
xchg
add
add
out
sub
iret
add
dec
popf
and
jmp
add
js
cltd
xchg
push
add
jp
bnd
popf
mov
fsubs
aam
out
add
sub
scas
fildll
mov
add
aaa
dec
mov
rol
add
cld
dec
sub
mov
or
add
das
out
and
jnp
jecxz
xor
sub
mov
movb
flds
fdivl
sub
bound
add
mov
jo
cs
lcall
mov
xchg
or
and
bound
sbb
stos
sub
aad
add
add
test
jmp
lock
jnp
sti
mov
mov
cmpl
cmpsb
mov
adc
or
cmpl
mov
sbb
add
jno
shll
adc
addb
dec
lock
out
pop
sbb
xor
inc
add
inc
sbb
jmp
aaa
bound
test
imul
add
jno
bound
mov
scas
cmc
mov
jns
ljmp
cs
pop
std
push
inc
or
daa
pop
or
inc
xchg
mov
aad
add
mov
test
pop
les
cli
lret
add
out
ljmp
cmp
cmp
negl
xchg
xchg
add
int3
fucom
repnz
xor
jbe
mov
dec
mov
fimuls
ret
mov
loopne
aas
in
bound
insl
mov
pop
enter
mov
adc
mov
aas
scas
dec
or
mov
push
pop
mov
popa
lret
pop
popf
cmp
orl
data16
dec
addb
inc
add
sub
lcall
lds
imul
stc
xor
ds
sarl
addb
sub
push
xchg
icebp
push
cwtl
push
cmp
lret
xor
rol
add
jbe
pop
jno
ret
mov
add
cs
and
sub
js
jmp
addb
js
sub
mov
xor
mov
add
mov
xlat
mov
or
insl
xchg
ljmp
jle
and
mov
jg
jbe
dec
lret
in
loopne
out
outsb
imul
jl
in
jno
mov
loopne
mov
cmpl
ljmp
add
mov
jp
in
sub
data16
mov
add
xchg
jno
aad
cs
mov
popf
call
push
add
add
cmp
mov
xchg
aas
xchg
push
pushf
rcrb
add
sbb
or
add
in
xor
mov
addb
pushf
ss
out
jg
mov
mov
adc
cmp
add
add
fdivl
pop
das
in
das
test
outsl
and
stos
cs
dec
sbb
inc
add
dec
xor
inc
cmp
or
out
jns
jmp
addb
loop,pt
outsl
scas
jae
mov
cmp
dec
je
lods
es
dec
call
push
aad
pop
int
add
and
shlb
sub
hlt
push
mov
add
push
sti
or
cld
inc
add
pop
xlat
popa
xchg
dec
mov
sub
ljmp
jge
jmp
mov
jnp
test
jae
jp
ja
push
clc
dec
movb
rcrl
mov
add
jnp
add
rolb
jmp
or
fbld
mov
and
mov
mov
adc
lret
adcl
add
lcall
jg
and
sti
stos
icebp
or
jbe
jns
add
or
add
mov
dec
inc
add
add
add
jp
add
mov
mov
lea
ja
add
sbb
shlb
xchg
push
adc
xchg
ret
cmp
nop
lds
sub
and
mov
add
inc
stc
out
adc
jge
jae
aad
inc
add
add
lods
shll
out
pop
cltd
clc
xchg
push
add
je
adc
test
inc
add
xchg
push
aad
and
iret
outsl
test
mov
and
sbb
mov
int3
pop
das
cld
jle
leave
into
add
iret
jo
fs
inc
add
mov
jbe
addb
mov
push
movsb
jno
cmp
xor
dec
sub
or
cmp
int3
dec
int
mov
scas
jg
adc
ljmp
icebp
test
dec
gs
xchg
mov
call
loopne
mov
add
insl
imul
xchg
inc
cli
push
out
mov
je
cmp
daa
es
mov
std
cmp
sbbl
push
rolb
les
cmpsb
sub
xor
cmp
lock
fisubrs
push
push
iret
movsl
dec
test
addb
insl
addb
and
or
mov
jg
or
or
dec
mov
jmp
pop
fimull
decl
sub
pop
mov
lea
call
fs
pushf
mov
push
adc
scas
sbb
mov
sbb
jns
xor
sti
gs
mov
out
cs
jg
mov
add
xor
push
imul
push
lods
lods
mov
pop
cmp
stc
ficompl
insl
pop
test
mov
fstl
call
pop
addb
test
dec
int3
stos
xor
addb
cwtl
hlt
lock
lea
data16
push
shr
leave
pop
pop
scas
jle
lret
dec
xchg
or
hlt
mov
push
je
int
fadd
scas
pushf
mov
pop
aad
mov
loop
pop
imul
leave
mov
mov
xor
mov
xchg
xor
add
jno
add
pop
insl
test
adc
fisttpll
repz
and
outsl
mov
insb
and
mov
je
or
pop
sahf
pop
leave
mov
add
add
jg
push
fadds
sti
cmp
ss
bound
fsubl
add
pop
lahf
cmp
std
ss
jo
fadds
add
addr16
lea
mov
and
dec
lock
mov
xor
cmp
popa
sbb
mov
mov
popa
push
lods
ljmp
loop
xorl
lahf
pop
pop
cs
jns
js
xlat
push
mov
movsl
outsb
ds
jne
xchg
sbb
sub
push
xchg
jle
stc
lret
push
sahf
repz
xor
aaa
sbb
jbe
pop
mov
or
add
test
lret
jmp
sti
adc
mov
ss
shlb
jl
xor
add
add
gs
dec
xchg
pop
jne
movsb
les
push
shrl
dec
testl
xchg
jl
push
lea
xor
imul
sbb
pop
inc
stos
or
add
fwait
or
mov
int
add
lea
and
dec
jne
or
and
ret
in
gs
push
xor
jbe
or
jno
xchg
leave
iret
sub
add
jecxz
cmpsb
insb
cli
xbegin
rcrl
inc
add
mov
cmp
sbb
add
call
jae
fmul
lods
ficompl
hlt
pop
sub
jl
rcrb
mov
cmp
daa
jmp
inc
add
mov
mov
ljmp
push
insl
int
movsl
cmp
adc
mov
outsb
cmp
or
stc
negb
cmp
push
stos
mov
mov
popf
das
and
jae
out
lds
aas
pop
dec
jb
add
fucomip
movsb
mov
fildl
jge
sbb
scas
repnz
les
or
cmpsb
cltd
out
out
and
adc
cmp
sbb
mov
sahf
icebp
pop
pop
outsb
sarl
jge
clc
pushw
xchg
dec
add
add
pushf
data16
jle
add
das
lret
das
jnp
xchg
push
sub
test
dec
lahf
xor
adc
add
jmp
or
sbb
pop
pusha
add
jmp
mov
int
pop
sbb
fdivs
stos
in
add
xchg
lcall
inc
add
add
and
mov
and
out
jb
and
aad
and
adc
jbe
test
add
fs
scas
or
jmp
enter
add
cmp
or
add
and
les
adc
rorl
dec
xchg
and
insb
sub
mul
mov
push
ret
pop
scas
aam
bound
inc
add
xchg
divb
decl
lock
lahf
imul
orl
adc
aam
bound
or
scas
aas
mov
mov
cmp
arpl
mov
into
in
lea
push
mov
aad
aad
push
adc
add
fs
add
lcall
dec
pop
into
mov
add
pop
movsb
sub
add
stc
nop
es
add
movb
push
stc
nop
es
add
fucompp
add
xchg
jnp
push
mov
xchg
ret
add
add
add
stos
cmpl
push
mov
xchg
ret
lods
add
inc
stos
xchg
stc
nop
es
gs
xchg
cwtl
add
or
fiadds
xchg
ret
shl
push
add
cmp
addb
sbb
cld
add
push
stc
nop
es
lahf
push
lods
sub
push
mov
xchg
ret
add
aad
les
and
add
sti
nop
cld
nop
jmp
mov
add
push
mov
mov
xor
stc
add
push
mov
xchg
ret
push
add
decb
nop
es
mov
stc
nop
es
pushw
or
add
mov
stc
nop
es
das
out
rcrb
fimuls
test
add
add
nop
es
add
inc
push
add
stc
nop
es
add
std
mov
stc
nop
es
add
push
add
add
nop
es
das
sub
xchg
stc
nop
es
das
mov
or
loope
inc
add
add
int3
je
stc
nop
es
push
jno
stos
stc
nop
es
mov
push
adc
mov
nop
cld
nop
jmp
shlb
insl
push
push
mov
xchg
ret
incb
add
sub
push
mov
xchg
ret
add
das
fstl
nop
es
sbb
lods
add
arpl
xor
mov
stc
nop
es
add
add
mov
jb
sti
dec
movb
inc
mov
sar
inc
add
std
outsl
mov
push
mov
xchg
ret
cwtl
negb
inc
xchg
leave
and
push
mov
xchg
ret
add
xchg
mov
cld
nop
jmp
add
add
stc
nop
es
add
add
inc
push
mov
xchg
ret
cwtl
add
add
mov
lret
nop
jmp
pop
add
xor
loop
nop
cld
nop
jmp
das
cwtl
out
add
sbb
mov
es
add
push
jae
xchg
loopne
inc
ret
ret
stc
nop
es
jmp
add
clc
stc
nop
es
mov
add
nop
es
add
add
ds
stc
nop
es
cld
jmp
nop
cld
nop
jmp
std
cld
add
outsb
call
stc
nop
es
push
div
xchg
test
shll
es
fimull
add
add
imul
insl
jae
nop
es
lldt
or
inc
cmp
mov
xchg
ret
lahf
dec
add
nop
cld
nop
jmp
std
test
add
jmp
push
mov
xchg
ret
sbb
add
divl
ror
stc
nop
es
test
mov
stc
nop
es
movb
jno
mov
mov
xchg
ret
test
jns
stc
nop
es
push
add
mov
stc
nop
es
lret
outsl
adc
xchg
or
es
add
add
mov
adc
cld
nop
jmp
sbb
add
popa
stc
nop
es
add
lret
add
or
jae
stc
nop
es
add
cmpsl
mov
stc
nop
es
gs
push
jl
dec
adc
popa
faddl
xchg
ret
add
dec
rorl
or
nop
es
add
cld
nop
jmp
add
jno
or
stc
nop
es
add
add
push
loopne
movzwl
nop
cld
nop
jmp
cwtl
cmp
push
stc
nop
es
dec
add
xor
push
push
mov
xchg
ret
add
add
add
mov
call
stc
nop
es
xcrypt-ctr
cmpsl
sbb
nop
es
add
rolb
or
ret
add
adc
incb
loope
std
pop
add
rolb
sahf
or
jg
stc
nop
es
sbb
add
inc
add
ss
push
stc
nop
es
les
add
mov
test
nop
cld
nop
jmp
sub
outsl
xor
add
stc
nop
es
loop
addb
xor
stc
nop
es
sub
add
mov
cmp
ret
mov
das
je
nop
cld
nop
jmp
add
pusha
add
xchg
or
add
nop
es
adc
add
jmp
mov
xchg
ret
mov
adc
dec
add
nop
cld
nop
jmp
sub
add
mov
icebp
nop
cld
nop
jmp
jg,pn
lahf
xor
stc
nop
es
add
add
jmp
cmp
nop
es
das
sti
add
imul
addb
addb
inc
adc
nop
es
adc
pop
and
stc
nop
es
add
cmpsl
call
xor
add
stc
nop
es
fstl
mov
xchg
ret
add
lahf
add
bound
mov
cmpw
nop
cld
nop
jmp
add
loopne
nop
es
notb
add
mov
arpl
nop
es
add
add
pop
and
stc
nop
es
aaa
add
aaa
dec
mov
push
mov
xchg
ret
push
inc
lret
mov
nop
jmp
push
push
data16
lods
decl
stc
nop
es
add
push
add
fimuls
mov
adc
nop
es
push
add
pop
mov
stc
nop
es
add
or
arpl
stc
nop
es
add
je
stc
nop
es
data16
jmp
add
push
add
mov
add
nop
cld
nop
jmp
xchg
mov
es
add
sbb
mov
add
cld
nop
jmp
cld
or
and
lahf
dec
stc
nop
es
out
sub
mov
push
push
mov
xchg
ret
fiaddl
add
push
stc
nop
es
add
add
sub
pop
stc
nop
es
mov
decb
stc
nop
es
push
pushf
jne
stc
nop
es
or
xor
stc
nop
es
add
cmp
nop
cld
nop
jmp
add
add
add
test
and
fists
nop
es
add
mov
sahf
mov
nop
es
xchg
add
nop
es
add
les
sbb
add
nop
es
add
loop
push
mov
xchg
ret
add
test
aas
adc
adc
add
sti
push
add
bound
lret
stc
nop
es
add
push
rclb
pop
add
add
mov
dec
cmp
nop
es
push
sub
nop
cld
nop
jmp
jg
adc
out
cmp
stc
nop
es
add
je
add
stc
nop
es
cld
mov
push
mov
xchg
ret
imul
add
add
stc
nop
es
add
add
and
push
stc
nop
es
xchg
add
add
add
and
push
mov
xchg
ret
add
add
sbb
fdivrp
nop
es
add
add
sti
sti
mov
stc
nop
es
add
out
mov
stc
nop
es
sahf
aaa
add
mov
leave
je
stc
nop
es
xchg
aad
mov
stc
nop
es
adc
rolb
mov
stc
nop
es
add
mov
push
mov
xchg
ret
sub
add
sti
sub
addr16
es
mov
dec
add
nop
es
cld
cwtl
add
les
dec
rep
nop
cld
nop
jmp
add
add
aaa
xchg
aad
push
push
mov
xchg
ret
add
jmp
stc
nop
es
add
cmp
es
push
add
dec
clc
dec
inc
nop
cld
nop
jmp
add
jbe
nop
cld
nop
jmp
xchg
add
push
push
cmp
mov
xchg
ret
sti
cwtl
add
add
add
mov
push
mov
xchg
ret
lods
add
outsl
mov
cld
nop
jmp
add
add
add
sti
rorl
pop
stc
nop
es
add
add
outsl
add
nop
cld
nop
jmp
add
add
out
add
push
mov
xchg
ret
add
add
es
xor
push
push
mov
xchg
ret
add
add
imul
cld
add
jmp
mov
nop
es
add
nop
jmp
sti
cmpsl
lahf
cmpsl
sti
push
movb
cmp
nop
es
jae
sahf
outsl
add
push
mov
xchg
ret
out
cmpsl
add
add
jb
push
add
add
jge
stc
cli
call
cld
incl
mov
jb,pt
nop
cld
nop
jmp
aaa
push
add
push
push
mov
xchg
ret
xor
mov
push
mov
xchg
ret
add
mov
push
stc
nop
es
add
add
ret
sbb
sbbb
lock
jmp
es
add
add
add
add
push
mov
xchg
ret
add
movb
and
cmp
ret
mov
stc
nop
es
jmp
adc
xor
nop
cld
nop
jmp
add
sti
add
add
es
nop
cld
nop
jmp
leave
mov
stc
nop
es
std
add
outsl
pusha
stc
nop
es
lret
add
aaa
add
es
adc
mov
add
add
stc
nop
es
push
add
sahf
add
gs
nop
es
add
lret
adc
clc
incl
add
je
sub
inc
add
push
mov
movb
add
stc
nop
es
mov
stc
add
push
mov
xchg
ret
cmpsl
add
pop
adc
mov
nop
cld
nop
jmp
cmp
mov
nop
cld
nop
jmp
mov
mov
stc
nop
es
jl
lds
add
stc
nop
es
add
add
push
push
mov
xchg
ret
add
test
xchg
push
stc
nop
es
cs
or
nop
es
cld
add
les
push
stc
nop
es
add
add
nop
cld
nop
jmp
std
add
sti
push
lahf
ss
add
mov
stc
nop
es
repz
xlat
and
testl
adc
add
scas
jne
stc
nop
es
add
xlat
lea
nop
es
jae
add
add
mov
add
add
nop
es
mov
test
add
stc
nop
es
das
std
push
push
mov
xchg
ret
sahf
add
test
inc
adc
nop
es
add
fiaddl
or
loopne
inc
add
call
cmp
cld
nop
jmp
add
sbb
rolb
fldl
icebp
stc
nop
es
add
add
add
inc
and
stc
nop
es
add
push
test
call
stc
nop
es
fisubl
add
jne
push
mov
xchg
ret
xor
pop
or
cld
nop
jmp
or
mov
add
stc
nop
es
xchg
push
add
nop
jmp
push
sahf
sbb
lahf
lahf
xchg
inc
add
dec
push
nop
cld
nop
jmp
fiaddl
dec
loope
mov
stc
nop
es
add
and
stc
nop
es
push
add
adc
push
nop
cld
nop
jmp
xchg
add
rclb
nop
es
outsl
xchg
sahf
push
add
sti
add
stc
nop
es
add
rcrb
mov
mov
xchg
ret
add
add
mov
add
nop
cld
nop
jmp
adc
lods
rep
nop
cld
nop
jmp
add
add
and
es
out
jae
add
nop
es
add
push
mov
add
add
push
add
jp
or
loop
mov
push
mov
xchg
ret
add
add
pop
stc
nop
es
add
cmp
add
stos
jne
stc
nop
es
or
add
xchg
push
nop
es
cld
mov
pop
lock
pop
xor
nop
es
paddw
add
mov
mov
xchg
ret
add
movzwl
nop
cld
nop
jmp
add
jmpw
dec
xor
push
mov
xchg
ret
sti
repz
mov
stc
nop
es
adc
cmp
stc
nop
es
call
sbb
sbb
nop
es
xchg
xchg
std
add
pop
stc
nop
es
add
mov
add
pop
leave
stc
nop
es
add
xor
xchg
test
adcb
call
push
push
mov
xchg
ret
xor
xor
ret
stc
nop
es
add
adc
call
stc
nop
es
sahf
add
mov
add
stc
nop
es
jmp
push
push
mov
xchg
ret
cmp
clc
push
stc
nop
es
movb
add
mov
or
inc
add
or
jecxz
add
imul
stc
nop
es
add
dec
popa
stc
nop
es
loope
call
and
stc
nop
es
add
repz
fimuls
cld
nop
jmp
fisubrl
out
imul
nop
jmp
add
sahf
cmpsl
add
popf
nop
cld
nop
jmp
loope
das
call
nop
es
incb
add
jae
aam
xor
stc
nop
es
aaa
add
cmp
fwait
incl
xchg
ret
repz
add
pop
stc
nop
es
add
loop
mov
add
popa
stc
nop
es
cmpsl
xchg
jae
push
sbb
add
stc
nop
es
add
mov
cld
nop
jmp
xchg
dec
dec
add
add
pop
mov
dec
push
stc
nop
es
push
add
xchg
cld
or
jmp
jmp
incb
cmpsl
repz
nop
es
mov
call
nop
cld
nop
jmp
testb
mov
push
leave
stc
nop
es
fiaddl
jmp
lret
push
mov
xchg
ret
add
push
sub
popf
stc
nop
es
lods
scas
add
nop
cld
nop
jmp
xchg
add
stc
nop
es
dec
add
lret
push
push
mov
xchg
ret
add
cmp
mov
stc
nop
es
xchg
data16
ljmp
cli
stc
nop
es
add
add
cwtl
mov
add
xor
push
mov
xchg
ret
out
add
pop
nop
cld
nop
jmp
add
dec
xchg
out
push
adc
call
stc
nop
es
fucompp
push
stc
rep
stc
nop
es
add
movb
clc
cmpl
nop
cld
nop
jmp
loope
add
pop
push
clc
mov
stc
nop
es
add
pop
push
push
mov
xchg
ret
add
add
inc
add
add
add
stc
nop
es
add
add
nop
es
add
test
sub
jmp
xchg
fisubrl
pusha
stc
nop
es
add
cmpsl
test
dec
push
mov
xchg
ret
add
add
movsw
jo
inc
stc
nop
es
xchg
call
sbb
nop
jmp
push
pop
add
mov
pop
nop
cld
nop
jmp
std
sahf
dec
pop
add
cs
nop
es
add
add
cld
xor
stc
nop
es
xor
popa
leave
je
stc
nop
es
shll
stos
xchg
stc
nop
es
cs
push
leave
add
nop
cld
nop
jmp
mov
pushf
mov
stc
nop
es
mov
cld
nop
jmp
lods
add
mov
stc
nop
es
add
add
add
nop
cld
nop
jmp
add
add
xchg
fmull
es
mov
add
fs
popl
stc
nop
es
cmp
movzwl
stc
nop
es
add
add
mov
xchg
ret
add
xchg
out
movb
pop
stc
nop
es
add
add
lods
sti
loope
sbb
push
std
inc
add
out
adc
jne
stc
nop
es
add
add
jmp
lret
add
mov
stc
nop
es
add
add
jb
add
add
sahf
xchg
scas
jne
stc
nop
es
add
test
push
mov
xchg
ret
add
push
add
movsb
stc
nop
es
add
add
push
pop
mov
nop
jmp
push
add
sti
sti
outsl
dec
je
nop
cld
nop
jmp
fisubl
nop
jmp
add
add
push
inc
add
inc
or
nop
es
add
add
leave
add
stc
nop
es
sti
push
xchg
add
adc
push
out
incl
cs
leave
lods
stc
nop
es
rolb
push
jmp
pusha
stc
nop
es
add
add
add
nop
mov
mov
stc
nop
es
add
add
nop
es
adc
add
pop
inc
stc
nop
es
sbb
sti
maxps
inc
flds
es
lret
mov
add
push
push
mov
xchg
ret
cmpsw
add
mov
es
out
mov
add
sub
push
push
mov
xchg
ret
xchg
add
jae
fmuls
nop
jmp
add
add
pop
pop
stc
nop
es
add
cld
xchg
out
push
pushl
rclb
add
add
xchg
add
adc
shr
stc
nop
es
sahf
add
xchg
jnp
add
nop
cld
nop
jmp
fiaddl
add
arpl
add
out
incl
cld
das
fs
add
stc
nop
es
cld
sti
mov
cmp
jae
nop
es
add
and
add
nop
es
add
das
mov
stc
nop
es
cwtl
add
add
nop
jmp
add
add
incb
jo
and
push
mov
xchg
ret
add
xor
push
mov
xchg
ret
add
call
mov
xchg
ret
test
and
or
stc
nop
es
add
add
push
add
sbb
dec
or
nop
es
str
inc
dec
add
stc
nop
es
incb
add
xchg
ret
add
push
les
fists
nop
es
add
add
sahf
popf
mov
stc
nop
es
std
decb
mov
xchg
ret
add
cwtl
jmp
stc
nop
es
std
mov
add
call
stc
nop
es
sti
mov
mov
stc
nop
es
or
and
cld
nop
jmp
add
add
add
nop
es
sti
lods
jmp
nop
es
add
mov
test
nop
es
add
add
stc
nop
es
or
jl
inc
adc
nop
es
sub
mov
push
mov
xchg
ret
ficompl
mov
stc
nop
es
loopne
mov
stc
nop
es
rolb
push
push
mov
xchg
ret
data16
add
nop
es
fiaddl
testb
adc
insb
jne
stc
nop
es
add
push
mov
xchg
ret
add
gs
pushf
jmp
stc
nop
es
add
inc
sbb
clc
add
xchg
inc
add
add
or
add
cli
incl
add
testb
addb
add
dec
add
add
mov
xchg
ret
call
jne
push
mov
xchg
ret
xchg
lahf
add
push
mov
xchg
ret
dec
add
lahf
add
add
stc
nop
es
mov
cwtl
test
nop
cld
nop
jmp
mov
push
mov
xchg
ret
out
add
pop
call
or
add
or
cld
nop
jmp
add
push
mov
sbb
mov
xchg
out
and
mov
mov
xchg
ret
decb
mov
stc
nop
es
mov
mov
adc
nop
es
add
push
push
add
push
push
mov
xchg
ret
lret
add
add
mov
movswl
stc
nop
es
lahf
add
push
xlat
sbb
cld
nop
jmp
out
add
or
xchg
xor
mov
stc
nop
es
les
out
xor
push
mov
xchg
ret
add
scas
dec
nop
cld
nop
jmp
add
add
idiv
mov
adc
nop
es
sahf
push
lret
pop
dec
push
mov
xchg
ret
loope
shl
add
adc
push
mov
xchg
ret
or
mov
nop
es
sbb
add
inc
add
add
sbb
stc
nop
es
push
jmp
stc
nop
es
lods
xchg
cmpsl
gs
inc
stc
nop
es
cld
mov
das
cmp
nop
cld
nop
jmp
add
outsl
add
xor
inc
in
stc
nop
es
mov
push
mov
es
data16
fiaddl
lret
add
stc
nop
es
cs
xchg
movsb
adc
sub
stc
nop
es
data16
push
sub
stc
nop
es
lret
jae
push
stc
nop
es
call
dec
add
es
push
add
xor
add
nop
cld
nop
jmp
add
popa
in
gs
mov
stc
nop
es
jg
fisubrl
sub
xor
stc
nop
es
add
je
stc
nop
es
das
sbb
add
nop
es
mov
add
push
mov
xor
loopne
mov
testb
ret
inc
cmp
nop
es
add
sub
add
mov
stc
nop
es
add
mov
adc
or
stc
nop
es
push
add
mov
add
add
nop
es
sub
mov
es
cld
add
cld
ret
add
aam
div
xchg
imul
inc
add
shlb
sbb
enter
stc
nop
es
add
push
xchg
cld
jb
stc
nop
es
push
arpl
pushl
stc
nop
es
xchg
jmp
sar
cld
nop
jmp
add
imul
stc
nop
es
add
add
dec
mov
nop
cld
nop
jmp
add
add
mov
nop
es
xchg
nop
pop
shl
nop
cld
nop
jmp
cld
add
add
mov
ljmp
dec
cmpsl
movb
push
pusha
add
addr16
jne
stc
nop
es
push
scas
call
stc
nop
es
add
mov
mov
stc
nop
es
lcall
jle
add
xchg
push
jg,pn
add
mov
stc
nop
es
pop
add
add
es
add
jmp
push
mov
xchg
ret
outsl
add
loope
add
mov
push
mov
xchg
ret
add
sbb
push
rclb
stc
inc
add
ficompl
add
test
push
mov
xchg
ret
add
outsl
push
punpcklbw
pop
rolb
add
add
and
lods
mov
stc
nop
es
add
lea
pause
cld
nop
jmp
add
mov
add
mov
xchg
ret
mov
mov
nop
es
dec
aaa
add
sti
add
stc
nop
es
cld
les
xchg
jl
xor
add
stc
nop
es
lods
add
mov
push
stc
nop
es
push
sahf
xor
nop
jmp
add
les
hlt
jl
dec
push
nop
cld
nop
jmp
add
incb
sub
je
push
imul
popl
add
add
add
add
test
nop
cld
nop
jmp
add
dec
add
es
fiaddl
add
outsb
mov
push
mov
xchg
ret
lods
sahf
add
mov
jl
mov
es
add
push
sbb
nop
es
add
add
nop
jmp
add
add
push
sub
nop
es
add
ficoml
push
xchg
jle
movsb
push
mov
xchg
ret
push
add
dec
loope
push
stc
nop
es
add
or
jp
add
nop
es
add
das
add
push
and
stc
nop
es
mov
in
shll
mov
add
add
out
push
add
inc
and
nop
es
push
test
fimull
es
loope
add
loope
fs
jp
sar
nop
es
add
add
mov
xchg
ret
cpuid
add
jb
push
cmpsl
movq
add
test
stc
nop
es
sti
out
xor
push
mov
xchg
ret
add
add
dec
mov
stc
nop
es
movb
add
ss
add
jmp
stc
nop
es
xchg
jg
stc
nop
es
rolb
xor
je
nop
cld
nop
jmp
fcmovu
movzwl
stc
nop
es
add
push
addb
push
push
mov
xchg
ret
push
or
pop
mulb
adc
es
add
add
add
cmp
nop
es
add
push
dec
decb
test
add
stc
nop
es
std
ficoml
xchg
repz
add
add
adc
dec
call
stc
nop
es
add
mov
push
mov
xchg
ret
add
lret
lods
imul
incl
mov
add
add
jb
add
xchg
add
pop
sub
inc
add
add
add
mov
xchg
ret
add
add
sub
xor
add
stc
nop
es
sbb
dec
sub
nop
es
or
add
les
push
jmp
add
add
sti
add
add
sti
std
jmp
push
mov
xchg
ret
add
add
mov
stc
nop
es
push
add
hlt
adc
sub
dec
cmp
mov
xchg
ret
add
add
push
push
mov
xchg
ret
dec
xchg
add
add
in
jmp
stc
nop
es
add
lret
cld
nop
jmp
xchg
repz
add
add
or
sar
es
mul
outsl
jg
pop
mov
nop
cld
nop
jmp
add
fsubl
popa
add
mov
xchg
ret
add
add
call
stc
nop
es
mov
mov
nop
es
add
roll
xchg
ret
push
mov
pop
nop
cld
nop
jmp
add
push
add
repz
cmp
nop
cld
nop
jmp
rcrb
adc
nop
es
incb
incb
mov
stc
nop
es
outsl
les
out
mov
stc
nop
es
add
adc
movb
ret
stc
nop
es
add
push
add
add
nop
es
incb
cmpsl
fcmovbe
push
in
add
add
stc
nop
es
push
pop
rep
stc
nop
es
or
push
sub
cltd
je
stc
nop
es
das
xchg
cmp
test
add
es
add
mov
cld
nop
jmp
add
add
lahf
out
push
nop
cld
nop
jmp
add
add
inc
stc
xor
stc
nop
es
add
lret
mov
stc
nop
es
outsl
push
add
adc
inc
add
or
add
jne
stc
nop
es
add
outsb
push
push
mov
xchg
ret
incb
xchg
cmp
cmp
nop
cld
nop
jmp
add
pop
push
push
mov
xchg
ret
add
push
add
stc
nop
es
add
add
mov
in
add
dec
mov
pop
jb
popf
stos
stc
nop
es
add
cmpsl
xchg
cmpsl
jmp
nop
es
mov
push
push
stc
nop
es
xor
push
push
mov
xchg
ret
jg
jmp
jge
stc
nop
es
add
add
addb
mov
push
mov
xchg
ret
sbb
add
add
xchg
fistpll
nop
cld
nop
jmp
push
add
pushf
pop
nop
cld
nop
jmp
repz
sti
lods
ficompl
call
nop
jmp
add
add
push
imul
es
add
pop
add
jne
nop
cld
nop
jmp
divb
pop
xor
stc
nop
es
push
add
fiaddl
add
add
inc
add
add
mov
repnz
and
gs
loope
dec
dec
push
mov
xchg
ret
lods
add
add
fidivs
add
push
mov
xchg
ret
cwtl
std
cld
addb
pushl
nop
cld
nop
jmp
adc
sti
pop
jecxz,pn
pop
mov
stc
nop
es
cld
push
cwtl
add
loop
cld
nop
jmp
add
cmpsl
add
add
movsb
lahf
add
stc
nop
es
data16
stc
nop
es
add
add
lahf
mov
repnz
stc
nop
es
add
ds
nop
cld
nop
jmp
mov
fidivrl
add
add
std
incl
push
add
test
nop
es
dec
sub
nop
cld
nop
jmp
add
cmpsb
int
movsb
stc
nop
es
add
add
add
xor
cld
sub
stc
nop
es
add
sarb
es
add
repz
push
push
mov
xchg
ret
add
das
shrb
fs
insb
add
nop
es
mov
mov
push
mov
xchg
ret
add
add
scas
push
mov
dec
daa
icebp
add
add
add
mov
in
out
xlat
pop
mov
stc
nop
es
add
adc
stos
push
mov
add
add
mov
lcall
nop
es
add
add
add
add
mov
add
push
mov
xchg
ret
das
out
test
sti
inc
add
add
push
push
test
jg
stc
nop
es
add
add
mov
mov
xchg
ret
std
gs
nop
jmp
xor
add
add
nop
es
add
add
call
hlt
incl
cld
outsl
and
out
les
adc
stc
nop
es
add
mov
or
inc
add
out
out
add
es
sti
pop
das
cs
pusha
add
es
rclb
adc
inc
add
test
ds
stc
nop
es
add
add
add
add
mov
stc
nop
es
cmpsl
aaa
ficompl
nop
es
cwtl
add
add
test
add
xchg
ret
loope
add
add
sbb
es
add
fisubrl
stc
nop
es
sbb
and
stc
nop
es
or
les
scas
add
stc
nop
es
dec
add
xor
stc
nop
es
shrb
jae
rolb
mov
stc
nop
es
add
sub
es
push
mov
push
mov
xchg
ret
push
add
lock
fdivrp
call
clc
incl
mov
and
mov
add
stc
nop
es
sbb
les
aas
lea
nop
cld
nop
jmp
add
push
stc
nop
es
mov
imul
mov
ljmp
push
xor
add
div
stc
nop
es
add
add
add
call
stc
nop
es
mov
mov
stc
nop
es
movb
add
pop
nop
cld
nop
jmp
lahf
sti
mov
add
js
xor
nop
cld
nop
jmp
add
arpl
je
nop
cld
nop
jmp
add
test
es
loope
out
shr
mov
popa
add
add
add
add
cmpl
nop
cld
nop
jmp
add
add
push
mov
xchg
ret
push
add
mov
stc
nop
es
xchg
pop
add
fcos
stc
nop
es
add
add
nop
cld
nop
jmp
add
pusha
push
mov
xchg
ret
mov
inc
xor
mov
push
mov
xchg
ret
dec
mov
stc
nop
es
push
inc
add
testl
test
shrl
es
xchg
rolb
add
mov
stc
nop
es
add
add
adc
xor
stc
nop
es
repz
jg
addb
stos
mov
push
mov
xchg
ret
gs
add
loop
stc
nop
es
add
cmp
nop
es
add
push
rorb
stc
nop
es
test
nop
cld
nop
jmp
sahf
push
loope
push
add
stc
nop
es
jae
sets
and
nop
es
add
mov
add
add
nop
es
jmp
nop
es
add
add
fiaddl
dec
and
nop
cld
nop
jmp
outsl
add
lods
lahf
test
dec
cmp
nop
es
sbb
sub
scas
enter
jb
sti
add
iret
push
stc
nop
es
mov
add
mov
xchg
ret
sub
xchg
nop
lds
sub
add
nop
es
add
add
nop
jmp
add
push
xchg
pop
sub
in
push
lods
pop
add
add
test
mov
or
loopne
mov
pop
xchg
jecxz
xchg
lcall
pop
cs
stc
adc
jle
inc
add
test
pop
mov
jne
test
pop
cmc
sub
insb
or
jg
add
adc
dec
adc
add
cmc
adc
insl
jecxz
mov
xchg
mov
aad
cltd
xor
inc
add
sub
mov
in
mov
test
pop
std
enter
push
adc
jmp
jle
dec
pusha
add
cli
xchg
repnz
mov
ret
repz
xor
adc
xlat
jo
xchg
sub
add
bnd
add
pop
xchg
inc
add
insl
cld
xor
in
cmpsb
lods
jmp
mov
mov
sub
add
js
sub
jo
add
mov
mov
jno
data16
pop
add
scas
cmp
lods
stos
shll
push
adc
mov
in
adc
mov
sbb
inc
add
mov
add
out
xchg
pop
fprem
xchg
in
add
add
add
or
xor
and
or
add
les
addb
fcoml
adc
f2xm1
inc
add
inc
add
cmc
test
sbb
cmpsl
push
jmp
cmp
mov
add
hlt
loop
movsb
fcomp
pop
push
pop
dec
scas
dec
imull
out
cmp
jnp
shrl
push
mov
bound
outsl
or
outsl
mov
add
stc
and
pop
mov
add
dec
imul
sahf
adc
std
mov
shrb
pop
inc
add
cmp
test
cltd
mull
add
fists
aas
jge
add
iret
popf
js
cmp
notb
jle
sbb
or
decb
xor
lock
fadds
dec
sub
and
addr16
int
shlb
subl
fsubrp
inc
fdivs
xor
cmp
rcr
sti
adc
test
call
push
fcmovbe
pop
cmpsb
inc
add
imul
std
in
add
stc
push
add
inc
pushf
add
mov
dec
pusha
add
shlb
inc
jno
repz
lcall
scas
inc
inc
add
movsb
mov
addb
push
xor
sub
add
punpckhwd
lahf
jp
cmp
pop
mov
addb
jno
ljmp
iret
inc
add
push
mov
cmp
pop
aam
cmc
pop
mov
roll
fisubrl
pusha
add
push
cmpsb
mov
dec
xchg
sub
sti
or
outsb
xchg
add
test
loopne
cmp
aas
bound
sub
mov
into
movsl
sbb
and
mulb
lret
scas
inc
adc
fs
push
repnz
lret
or
and
xor
jne
nop
mov
dec
and
or
cltd
mov
add
int
cmp
fsubs
mov
mov
mov
pop
out
hlt
or
ss
pusha
add
jmp
adc
add
mov
dec
dec
out
rcrb
inc
add
pop
mov
data16
inc
outsl
jmp
or
addb
jnp
xor
stc
push
push
bound
dec
cs
cmp
lods
inc
add
lcall
xchg
in
dec
lret
push
jnp
dec
or
sub
lret
inc
push
jns
jle
hlt
dec
sub
and
ss
jne
or
jmp
push
dec
mov
imul
repnz
loopne
cltd
sti
clc
decl
and
jle
inc
in
fcoml
mov
cmp
add
mov
xchg
into
mov
inc
ret
fs
in
push
int3
xchg
mov
xchg
lahf
cmp
mov
or
test
fistpll
nop
pop
mov
cmc
movb
inc
insl
pop
div
or
push
cmp
add
xchg
scas
bound
dec
out
cmp
add
ja
and
add
in
es
mov
test
xchg
add
xor
jmp
call
push
xchg
mov
jmp
jl
add
fmuls
xchg
lahf
call
cli
dec
popa
subl
sbbl
insb
mov
lock
movb
incb
add
add
sub
in
int3
popf
mov
xor
push
dec
in
pushw
mov
adc
pusha
add
push
pop
daa
stos
mov
sbb
stos
movsb
addb
scas
inc
ds
movb
in
and
mov
es
and
mov
sub
add
inc
mov
sub
repnz
cltd
sbb
cli
jo
dec
or
jle
inc
imulb
xlat
jno
sbb
xlat
or
ret
add
test
inc
add
mov
push
push
mov
cmp
in
add
inc
add
adc
mov
inc
addr16
add
mov
icebp
iret
stos
mov
ret
pop
test
int
popa
xchg
insb
and
mov
add
jg
mov
pusha
add
lcall
rol
jns
lods
popf
xchg
jmp
add
push
addr16
cmp
mov
ret
iret
jno
xchg
jno
xchg
outsl
jp
shlb
les
jle
push
mov
into
jnp
xchg
out
addb
les
mov
scas
shr
mov
inc
mov
inc
add
mov
push
mov
movb
adc
cwtl
outsl
call
mov
add
sub
add
mov
hlt
add
push
xchg
loop
sbb
sub
negl
xor
mov
sbb
clc
pop
push
hlt
ds
add
add
cld
dec
pop
xchg
mov
rcrb
fisubl
fldt
lds
dec
sbbl
daa
scas
xchg
imul
sub
push
mov
lcall
mov
dec
xchg
scas
or
add
movb
cmp
add
adc
dec
ret
and
cltd
xor
xlat
loop
icebp
push
inc
iret
xchg
dec
jge
sbb
cltd
test
adc
pop
fisttps
sub
jle
xchg
jge
or
mov
jne
fwait
int3
ljmp
clc
mov
pusha
add
mov
adc
xchg
addb
outsb
jg
mov
pop
jmp
or
lods
into
push
popa
and
out
cmc
in
push
loopne
out
arpl
lret
add
sub
mov
test
jecxz
subl
out
add
add
sahf
xor
scas
mov
repnz
mov
xlat
ficompl
xchg
push
or
sub
sbb
add
or
das
and
pop
mov
movsb
loope
mov
in
icebp
cmpsl
sub
xor
out
aas
or
jnp
mov
and
push
pop
iret
xor
sti
outsl
ss
outsb
test
movsl
push
sti
mov
pop
ljmp
jl
loope
push
lods
mov
xor
ss
cmp
adc
out
adc
aaa
xor
xor
iret
mov
xor
add
mov
add
lret
mov
xchg
jle
lods
sub
xchg
cmp
in
add
adc
sbb
imul
clc
inc
add
cwtl
xchg
pop
fists
add
jo
nop
insb
in
mov
or
xchg
xchg
and
idivb
mov
mov
fcompl
mov
roll
imul
xchg
lock
pop
test
jp
lock
fnstsw
ljmp
add
add
xorl
xchg
xchg
push
inc
xchg
sahf
or
add
add
mov
cmpsb
cld
adc
in
mov
xchg
push
mov
aam
jge
push
addr16
xchg
cmp
push
inc
add
icebp
push
mov
icebp
xor
pop
jno
mov
cwtl
movsb
addb
xchg
das
imul
inc
add
or
out
add
adc
jg
jb
nop
jge
mov
bound
push
add
sub
ljmp
in
xchg
xor
add
xchg
inc
stos
leave
shll
pop
xchg
in
dec
popf
mov
in
mov
xor
repz
lcall
sub
pop
mov
ret
pusha
add
pop
jp
out
ljmp
aaa
ss
push
imul
rorl
int3
iret
rorb
xor
xchg
mov
les
dec
test
daa
xor
jns
push
mov
adc
repz
call
sti
adc
cmpsb
imul
xorl
sti
int
mov
sbb
adc
or
mov
scas
ret
out
rcll
cltd
sub
bound
adc
xchg
movsb
das
ret
rolb
xchg
in
jl
add
movsl
xchg
gs
stos
sbb
push
add
lcall
jl
out
in
test
lahf
cs
loope
sar
sahf
adc
jo
push
loope
pop
movsb
lret
cld
ret
fmull
cmp
lcall
or
push
leave
pop
sti
pop
mov
mov
add
and
test
addb
stos
inc
test
icebp
xor
xchg
sub
shr
jo
lock
cli
mov
adc
sbbl
xor
adc
fists
and
out
ljmp
sarl
add
movsb
mov
cmc
cmc
sub
sbb
add
inc
icebp
mov
add
mov
add
clc
insl
sbb
adc
cmp
fsubp
adc
iret
add
mov
push
jbe
fcomps
sbb
sub
js
imul
cmp
jb
xchg
ret
in
jne
add
or
cmp
or
subl
and
pusha
add
and
lahf
jnp
out
test
lds
mov
in
jb
adc
ss
ret
jno
mov
aad
and
cmpsb
push
addb
cmp
pop
test
inc
add
jge
sti
icebp
pop
pop
push
sbb
ds
fsubl
add
add
adc
add
pushf
imul
cli
popl
add
sahf
addb
lret
imul
popa
cmp
jnp
adc
sub
mov
jo
imul
push
stc
xor
mov
or
stc
pop
add
in
add
add
xor
pop
loope
fmull
dec
dec
cltd
pop
lock
jb,pn
lods
adc
lods
mov
inc
add
add
add
mov
lahf
push
push
inc
add
xchg
clc
xchg
aas
call
push
fistpll
shlb
cwtl
iret
xor
mov
inc
add
ja
dec
filds
negl
mov
clc
icebp
sbb
add
repz
int3
mov
mov
push
sub
push
cmp
pop
mov
fsubr
fsubs
imul
push
inc
dec
fwait
xchg
mov
sbb
out
pop
push
xor
shrl
mov
add
mov
mov
sahf
sub
stc
pop
cmp
jl
add
mov
mov
adc
scas
cld
dec
cmp
movsl
lods
sub
jg
add
cmp
sub
jmp
cmp
lea
imulb
mov
lcall
fxch
aam
add
mov
fs
push
inc
add
fdivr
enter
jmp
imul
push
xor
mov
jne
repz
push
jae
aam
fadds
add
jmp
push
and
fisttpl
inc
inc
adc
adc
mov
fisttpl
jge
aaa
xor
mov
mov
lock
add
dec
jge
add
adc
add
stc
mov
mov
xchg
add
or
xlat
daa
fistl
add
enter
sbb
cmpsb
mov
andl
dec
add
push
sti
dec
adc
mov
inc
sub
xchg
pop
fisttpll
mov
fwait
and
cmp
xor
neg
mov
popa
sub
popa
or
mov
sbb
add
lds
aas
jp
mov
inc
pop
pop
sub
movsl
adc
add
mov
out
cmpsl
dec
sub
add
loop
pop
insl
imul
adc
add
out
jl
fs
mov
les
cmpsl
xor
addb
dec
jns
xchg
jnp
add
mov
inc
mov
mov
stos
outsl
shlb
addb
sbb
ds
test
lock
ds
add
js
xor
imul
lret
rorl
xchg
out
popf
leave
aaa
xchg
sbb
lods
cmp
fiaddl
ret
sub
jne
cltd
mov
dec
cmc
outsb
pop
pusha
add
jmp
add
test
enter
mov
fdivrl
ficompl
mov
xor
or
inc
cltd
add
ss
jl
frstor
popf
pop
in
dec
mov
jmp
je
adc
mov
push
mov
mov
adc
inc
insl
pop
and
sti
scas
pop
fdivs
arpl
movsb
or
aam
push
xor
jnp
add
pop
out
mov
add
sub
add
sarb
cmp
daa
push
lcall
test
add
in
xchg
push
clc
arpl
icebp
popa
in
add
inc
mov
add
mov
mov
sbb
in
dec
in
xor
sti
xchg
movb
pop
jno
mov
mov
je
sbb
add
in
cmpsl
add
nop
fs
les
xchg
jle
pop
mov
lea
cli
mov
icebp
or
cmp
outsl
jae
cs
push
dec
rcrb
jo
and
sbb
xor
inc
xchg
cmp
lahf
pusha
add
jge
je
shll
inc
je
cmpsb
sbb
ja
int
add
nop
xchg
add
rcll
ljmp
cli
fsubp
and
mov
inc
nop
sbb
in
sarl
add
imul
jns
xor
jne
shll
and
pop
dec
je
ret
push
aas
lret
icebp
lret
in
hlt
dec
cmc
xor
fdivrs
scas
test
inc
add
xchg
pop
ljmp
loopne
movb
daa
dec
enter
add
or
cmp
jae
jo
mov
pusha
add
xor
dec
mov
inc
into
xlat
xchg
mov
add
icebp
addr16
xchg
out
rclb
dec
xor
add
jmp
ret
movsl
test
push
in
pop
or
mov
inc
test
repnz
add
lcall
movsb
ljmp
repnz
lret
inc
test
mov
add
add
push
sub
and
scas
adc
sbb
out
mov
lods
fisubl
insl
adc
push
lods
lret
pop
shl
das
repnz
fbstp
sar
pop
outsb
test
addl
hlt
sbb
dec
sub
mov
cltd
mov
mov
xchg
in
rclb
and
in
or
cmp
ret
mov
mov
sub
enter
jmp
ljmp
movsl
movb
lcall
adc
push
push
daa
xor
fadd
add
std
mov
sahf
mov
add
inc
xchg
loop
repz
inc
xchg
cli
jmp
test
jp
lds
fwait
insl
into
insl
cmp
inc
ds
and
push
add
jmp
add
mov
out
fistps
std
ja
cld
mov
add
pusha
add
loopne
ss
inc
xchg
mov
test
xchg
mov
sbb
lcall
pop
push
inc
add
xchg
lret
loop
mov
sbb
test
outsb
rol
add
inc
je
sbb
xor
xlat
les
stc
inc
std
into
mov
cs
cmp
jo
fistps
sub
xchg
cltd
push
iret
jae
lds
add
fcom
cmp
inc
add
adc
fcmovnb
add
add
pop
stos
scas
fisttpll
xchg
out
dec
dec
sbb
popa
rolb
out
stos
lcall
dec
cmc
leave
cmpsl
mov
add
or
mov
lahf
stos
lret
adc
clc
insb
mov
daa
xchg
out
cs
aas
arpl
mov
jge
add
mov
fldl
js
xor
pop
pop
clc
in
or
dec
push
fisttpll
mov
test
inc
outsl
pop
xlat
jg
js
push
idivl
xor
jnp
ret
add
xor
insl
aam
jo
das
xor
mov
add
jl
add
stos
mov
add
inc
add
adc
out
rcll
push
add
test
fnstsw
dec
nop
stos
push
in
sub
ds
insb
sub
ljmp
xor
and
pushf
jle
jmp
fbld
add
dec
shl
pop
test
adc
fs
cmp
sbb
pop
pop
xchg
lea
sub
insb
xchg
bound
inc
add
jno
les
icebp
cmp
xchg
repnz
es
movsl
cli
clc
rclb
push
push
jae
insb
flds
aas
rolb
cmp
add
mov
lahf
or
stos
pop
test
js
add
in
popf
fstpl
pusha
add
dec
mov
sub
out
sbb
addb
sub
js
cld
inc
mov
cmp
cmp
jg
jbe
pop
push
repnz
ret
cmp
xchg
jle
add
mov
es
test
imul
add
cmpsl
inc
push
jno
or
adc
push
mov
out
ljmp
inc
xchg
addb
pop
in
lcall
ja
mov
fwait
push
gs
les
adc
mov
scas
addb
push
sahf
cmc
loope
ja
pop
adc
pusha
add
inc
xor
add
in
cmp
cmp
test
pusha
add
test
loop
add
and
jae
out
stos
xlat
fdivrl
lcall
movsl
lock
cmp
xor
bound
sbb
rolb
sub
cmc
xchg
scas
lods
and
gs
xor
inc
add
ret
pop
or
add
inc
add
fbld
pop
or
mov
xor
in
clc
dec
mov
aad
pop
cs
mov
shl
stos
xor
in
aad
bound
sbb
pop
hlt
push
jne
call
add
or
add
cmp
ret
insb
lcall
cmp
mov
pop
fwait
inc
add
mov
incb
and
and
addr16
xor
push
leave
sub
cli
mov
loopne
sub
cmp
and
imul
xchg
mov
pop
jge
or
sub
pop
popf
gs
les
rolb
mov
jle
in
out
jns
push
add
daa
lahf
test
push
add
shrl
dec
test
insl
lret
cmpsl
mov
loope
shrb
loop
sbb
pop
pop
arpl
addb
add
sub
hlt
and
sub
xchg
or
xchg
ret
add
cltd
insl
inc
add
jecxz
loope
addb
inc
add
frstor
cld
incl
push
add
icebp
test
pop
xor
lcall
sbb
push
jle
out
je
insb
cltd
cs
aaa
lcall
jnp
inc
add
loop
jp
sub
sbb
inc
in
push
jle
aas
mulb
mov
adc
add
cmp
enter
in
adc
pusha
add
hlt
jae
in
addr16
pop
fildll
sbb
sbb
add
enter
lock
mov
xchg
mov
cmp
ffree
fildll
jp
and
hlt
jl
add
xlat
inc
jnp
in
ds
adc
cmp
std
enter
leave
xchg
and
jb
pop
daa
imul
mov
clc
sub
cmpsb
cmp
or
imul
pop
mov
sbb
movb
dec
ror
lods
inc
leave
outsb
out
jge
dec
movsl
dec
std
push
add
xorl
icebp
leave
sbb
inc
test
or
mov
dec
or
or
leave
leave
jb
add
jg
repnz
add
fcomps
dec
or
push
jp
push
cmp
mov
addb
or
test
sub
inc
add
into
pop
mov
shll
inc
add
jbe
bound
adc
push
add
xor
in
and
push
imul
test
int3
push
dec
mov
pop
ljmp
mov
out
or
lods
into
cmc
jbe
pop
mov
mov
cmp
xchg
in
daa
repnz
call
into
movb
mov
stos
xor
into
xchg
xchg
jl
xlat
repz
or
pusha
add
fbld
and
lods
test
aaa
adc
mov
popa
lret
test
inc
pusha
add
sbb
add
add
add
movsb
pop
mov
mov
repz
adc
lahf
mov
add
push
lret
repz
xor
adc
add
lcall
rorb
loope
adcl
add
mov
jns
xor
add
sbb
out
mov
aas
pop
icebp
mov
mov
xchg
pop
ret
sub
add
scas
inc
mov
add
add
add
fstpt
pop
lcall
cltd
rorl
jmpw
add
pop
movb
ljmp
sbb
add
inc
add
jbe
mov
outsb
test
scas
mov
jo
sub
stc
or
add
rorb
int
dec
movsl
ss
push
xchg
sub
sbb
add
scas
hlt
jns
push
add
xlat
es
push
scas
mov
add
movsb
lcall
cld
inc
add
je
push
incl
test
or
add
xchg
jnp
cmp
dec
inc
daa
cmp
mov
aam
sti
mov
ljmp
ss
xchg
mov
addr16
add
adc
ret
add
xchg
pop
aad
mov
mov
adc
add
dec
jb
aaa
inc
add
nop
fdivr
fisubrs
lock
aad
ret
cmp
push
inc
add
cmpsb
rcrb
xor
dec
xchg
out
or
mov
test
loope
pop
cli
fisubl
push
outsb
mov
add
xchg
jbe
mov
scas
push
mov
push
sti
mov
inc
leave
xchg
insb
adc
xchg
fisttpll
imul
gs
ret
aam
mulb
or
push
out
xor
push
inc
add
lods
sub
xor
addb
mov
sbb
mov
cmp
aas
push
hlt
cli
call
ja
stos
jnp
sub
into
dec
pop
in
xchg
sbbl
js
push
add
adc
pop
inc
add
add
add
sbb
push
jae
ss
inc
add
imul
mov
mov
arpl
add
mov
push
repz
roll
add
inc
add
add
lcall
mov
mov
outsb
test
in
cwtl
stos
stos
cmp
adc
cmp
adc
or
mov
repz
push
mov
mov
add
mov
fnstsw
mov
aas
jae
cmp
sti
stos
cmp
les
std
push
xchg
push
add
push
add
add
jmp
add
sbb
jl
fimull
sahf
jle
mov
ss
mov
xor
orl
mov
popa
lret
push
test
add
ret
int
dec
es
arpl
mov
mov
lock
negb
mov
fs
ficoms
mov
addb
mov
xor
aaa
in
setne
sbb
add
sub
mov
aam
pop
test
mov
in
xchg
rcr
cmp
fs
add
jae
lahf
cmp
mov
inc
rolb
call
add
fiadds
add
add
xchg
outsb
clc
test
jge
xor
movsb
inc
add
pusha
add
outsb
sub
adc
mov
lods
sub
ret
jmp
arpl
push
mov
pop
jle
mov
inc
add
rolb
xchg
sub
push
nop
lock
push
mov
and
faddl
shrb
adc
int
mov
mov
test
testl
test
push
repz
cmp
aam
rolb
aad
mov
imul
xlat
jnp
cmp
mov
sub
mov
sbb
jge
adc
ja
add
mov
fcomip
int3
adc
mov
push
jb
inc
push
jne
push
jae
fdivrs
mov
aas
inc
add
push
adc
jne
lock
adc
popa
inc
add
sbb
ret
or
push
pop
jae
stos
pop
jecxz
add
popa
mov
pop
in
daa
imul
push
in
out
jge
movd
in
jns
rcr
test
pop
nop
stos
test
xor
sub
stos
das
jmp
lahf
test
sbb
je
loop
add
add
pop
divl
xor
mov
jecxz
ret
jecxz
out
cmp
mov
xchg
das
mov
push
add
mov
in
jne
sahf
pusha
add
add
push
loopne
std
daa
inc
and
repnz
call
sub
stos
pop
lds
inc
daa
popf
xchg
xchg
jo
stos
lcall
push
or
add
test
pop
lds
loopne
mov
jae
push
stos
jmp
fistl
add
bound
push
add
mov
pop
andl
jb
add
fs
jp
mov
cltd
in
push
outsl
mov
pop
leave
xor
loope
pop
cli
pushf
xchg
pop
enter
cld
pop
roll
sbbl
push
mov
out
inc
add
pop
in
test
aaa
sbb
fbld
pop
xor
pop
mov
xor
add
sub
push
push
mov
mov
es
cmp
inc
add
sub
xchg
dec
cmp
add
mov
xchg
inc
add
add
mov
lods
cmp
push
mov
xor
push
inc
xor
push
jecxz
sbb
sub
shll
add
fiaddl
mov
dec
cmp
pop
push
jge
add
test
fdivs
mulb
and
ret
fcomps
test
xor
jmp
sub
and
push
ret
aas
out
clc
andl
add
nop
rcrl
addr16
add
ret
inc
add
rorb
xlat
add
aad
adc
ret
inc
add
jecxz
addb
add
inc
fidivs
xchg
bound
jmp
test
push
dec
adc
jp
push
jno
repz
push
test
es
lds
out
dec
add
rolb
hlt
lcall
xchg
cltd
sub
fstpt
jno
push
pop
popf
jb
test
jnp
bound
lret
jbe
cmp
add
inc
stos
lds
xor
cltd
mov
mov
mov
pop
dec
outsl
adc
adc
dec
sbb
inc
mov
dec
dec
cmp
jg
add
idivl
add
out
mov
lods
daa
dec
adc
sbb
leave
mov
adc
ret
enter
stc
and
pop
dec
scas
jle
adc
push
into
pop
add
and
inc
add
jae
mov
in
add
pop
in
inc
add
outsb
push
rcrb
lcall
push
outsb
mov
sbb
add
xor
loopne
imul
pop
cmpsb
mov
add
xchg
lret
shr
xor
cmp
repz
add
sub
mov
mov
loope
test
mov
add
and
xchg
je
and
jge
cwtl
pop
mov
xchg
ds
out
stos
pop
jmp
pop
mov
adc
dec
jecxz
add
inc
add
mov
mov
add
cmpsl
adc
in
or
in
inc
pop
roll
roll
xchg
jbe
out
pop
pop
int
popf
dec
cld
fmulp
movsl
push
xor
mov
sarl
fcmove
jge
cmp
ds
add
scas
xchg
xchg
imul
inc
add
pusha
add
lret
add
in
or
xchg
fcoms
ss
sbbl
jae
fwait
sbb
mov
push
test
movsl
lret
lea
pop
outsb
sti
into
adc
mov
movb
sub
xlat
outsb
mov
les
push
mov
movb
mov
xchg
dec
pop
cmp
mov
jb
add
stos
mov
out
ljmp
addr16
shll
pop
in
add
xchg
aad
jnp
add
fisubrl
mov
dec
pop
aaa
aad
inc
and
jp
repz
dec
sub
xchg
addb
push
xchg
jecxz
jne
addr16
lods
icebp
push
sub
cli
mov
fidivrl
dec
adcl
add
pop
lds
sahf
clc
mov
add
add
jne
movsl
dec
fldcw
fidivrs
jns
add
stc
adc
mov
jns
cmp
add
jg
addb
pop
mov
sub
sub
pop
adcl
jge
inc
ja
add
jl
mov
and
into
pop
pop
fldcw
fwait
test
pop
in
xchg
cmpsl
push
test
pop
rolb
add
dec
mov
loop
mov
je
xor
push
stc
or
sub
jle
adc
and
mov
inc
add
mov
push
push
pop
call
add
and
jb
add
dec
xchg
or
push
out
stc
pop
push
mov
add
bound
jno
lods
idivl
int
xor
mov
push
add
cmpsb
push
xor
stos
push
ds
and
and
cmp
lock
mov
mov
mov
in
shll
jb
and
inc
add
dec
imul
push
jecxz
jns
adc
loope
icebp
or
scas
or
addb
add
inc
add
enter
inc
add
xor
pop
lahf
test
adc
mov
jb
mov
mov
test
mov
mov
push
repnz
stc
comiss
push
mov
in
mov
push
xor
je
sub
mov
test
add
sbb
xchg
adc
add
leave
popf
or
nop
int3
push
jecxz
xchg
addr16
testl
mov
xchg
mov
jnp
flds
jp
in
mulb
pop
imul
adc
fwait
in
addr16
bound
test
mov
sub
xchg
mov
addb
into
mov
xor
or
mov
jg
hlt
mov
movsl
or
mov
push
push
add
mov
rolb
adc
repnz
pushf
push
pop
js
jae
mov
popf
add
sub
and
pusha
add
pop
cld
sbb
scas
push
xor
lret
leave
mov
notl
stos
mov
mov
and
adc
outsb
fsubs
and
cmpsb
inc
sbb
les
iret
popa
xchg
mov
mov
hlt
mov
add
jp
mov
mov
fcmovb
adc
fnstsw
iret
inc
add
lods
push
rolb
scas
mov
mov
out
cmp
cmp
mov
sbb
push
mov
dec
jo
divb
pop
into
movb
pop
xor
les
inc
cwtl
cld
add
xor
mov
ret
lock
rcrl
scas
xchg
addb
jno
dec
ljmp
inc
into
cmpsl
stos
push
negb
push
mov
clc
je
adc
sub
push
les
inc
add
sbb
lahf
in
mov
or
out
pop
insb
gs
pop
cmp
cmpsl
out
adc
stos
push
xor
test
mov
adc
adc
and
sub
mull
push
adc
and
cltd
mov
fisubrl
test
cmp
mov
add
xor
dec
fcoml
dec
xchg
xchg
aad
cwtl
or
pusha
add
ret
lea
cwtl
sbb
xchg
jne
sub
push
int
dec
xlat
scas
inc
pop
rcrb
adc
xor
add
cld
inc
imul
test
sbb
cmc
addb
push
sbb
lret
imul
jae
sbb
das
cmp
outsb
jnp
test
push
sbb
add
mov
jo
cmpsl
jp
add
aas
push
leave
std
loopne
mov
lcall
rolb
into
daa
sahf
sahf
scas
es
pop
xor
pop
adc
in
je
jmp
cli
push
jb
bound
mov
sub
jne
fs
in
push
dec
push
lds
gs
punpckhwd
pop
or
fidivrs
and
ret
je
loope
in
xchg
xor
mov
add
test
jae
fptan
jecxz
es
repz
pusha
add
add
sarb
popa
loope
sbb
mov
out
mov
addb
xor
cmpsl
xor
jg
or
mov
jns
or
dec
cmp
jo
cmp
add
in
xor
push
pop
and
add
fst
xchg
add
es
sti
jp
daa
push
mov
jecxz
ja
mov
cwtl
imul
mov
repz
ret
sbb
lods
jg
bound
mov
loope
lahf
xchg
cmpsl
cli
aaa
enter
push
aad
daa
sub
xchg
mov
ja
stos
xor
js
loopne
sbb
stos
lds
lods
je
cltd
xchg
loope
dec
dec
push
add
xchg
pop
pop
or
xchg
ss
inc
add
pop
and
cli
mov
movsb
out
sbb
rcll
add
inc
out
aad
mov
jae
jg
stos
das
xchg
les
fiadds
xlat
popf
mov
mov
loope
mov
mov
pop
push
dec
and
jae
add
repz
shll
cmp
imul
ja
cmp
aas
pusha
add
add
push
rcr
popf
dec
imul
fwait
xchg
sbb
out
in
pop
add
in
xor
into
movb
xlat
or
fisubs
pop
lret
pop
jmp
add
xorl
xchg
daa
movb
outsl
ss
outsb
mov
jno
outsl
jp
data16
arpl
add
fs
out
pop
mov
dec
pop
mov
mov
loop
jmp
add
mov
add
jle
daa
mov
out
add
dec
push
mov
lods
mov
sub
ss
add
lds
xchg
jmp
adc
cs
insl
adc
cltd
out
popa
mov
jo
insl
icebp
out
add
pusha
add
xchg
pusha
add
cmp
pop
mov
addr16
cmp
out
jle
in
xchg
push
and
or
imul
mulb
mov
enter
push
mov
adc
dec
scas
xor
push
sub
inc
es
in
mov
add
clc
push
cs
sbb
sbb
jmp
les
push
pop
in
clc
xchg
sbb
add
xchg
or
add
jge
vpavgb
lret
jmp
pop
cmp
add
xchg
push
iret
or
add
fucom
mov
aam
xchg
cmc
xchg
mov
mov
add
mov
loopne
lret
xchg
add
xchg
test
mov
add
iret
orl
dec
call
push
xchg
pop
pop
mov
shll
add
add
lds
lret
mov
call
jbe
jg,pn
jns
jmp
hlt
mov
xor
push
mov
xchg
gs
cmc
or
loope
aam
add
sbb
sbb
push
ficompl
ljmp
mov
je
add
fwait
mov
cmp
mov
add
bound
dec
inc
stos
jns
negb
xor
dec
in
jne
pushf
pop
xchg
std
call
pop
icebp
push
hlt
sbb
mov
loopne
add
dec
insb
inc
xchg
add
sub
mov
cmc
fsubl
lretw
adc
jle
mov
ljmp
pcmpeqb
fidivl
mov
push
daa
mov
rolb
insl
popa
loope
mov
add
jle
call
into
insl
test
adc
mov
or
subl
mov
dec
pop
ljmp
mov
push
aad
subl
sub
and
std
sbb
addb
cli
nop
out
pop
cwtl
nop
bound
add
pop
xchg
fists
test
xchg
sbb
and
add
mov
add
dec
lods
xchg
adc
test
repnz
movb
pusha
add
lock
sahf
push
add
add
cmc
or
popa
lcall
aad
lods
cs
mov
inc
xor
movb
mov
mov
in
inc
add
jmp
jne
movb
add
xchg
jl
lret
xor
bound
aam
mov
movsl
subl
repz
add
jle
faddl
add
jnp
sub
sarl
and
hlt
sbb
repnz
xor
pop
imul
fmuls
mov
movq
les
lds
add
sub
sub
sbb
push
dec
in
movlps
mov
mov
aas
in
pop
xor
sbb
js
jb
rcll
sub
test
dec
scas
pop
mov
scas
jo
jmp
dec
sbb
int3
xchg
popa
jmp
clc
mov
add
adc
adc
fld
add
xor
in
add
arpl
imul
jo
movb
dec
sbb
mov
jl
and
push
dec
loop
add
sub
sahf
ret
mov
cltd
sbb
add
gs
mov
pop
addb
dec
jmp
addr16
ds
and
in
mov
addb
sbbl
dec
into
cmp
add
jl
fsts
adcl
xor
cmp
gs
push
mov
call
and
dec
cmp
mov
push
pushl
mov
fisubs
add
cwtl
mov
loop
cmp
in
push
hlt
push
inc
add
div
mov
add
add
stos
sahf
mov
push
pop
mov
add
hlt
cmp
add
movsl
leave
dec
lods
dec
push
xchg
lock
xor
dec
cmp
push
stos
push
dec
arpl
jb
inc
bnd
clc
and
sub
test
rclb
push
jl
add
jge
mov
scas
test
xchg
add
lea
in
lahf
pop
fsubrp
xlat
dec
jb
jge
sub
add
inc
sarl
adc
sbb
push
and
lret
sub
sti
fnstsw
negb
xor
cld
and
stos
fyl2xp1
js
repz
dec
pop
dec
dec
and
inc
add
stos
add
testl
lods
lods
xor
mov
jp
mov
inc
imul
sti
adc
inc
icebp
in
adc
jp
sti
dec
popf
or
push
pop
dec
shl
inc
mov
add
ret
in
loope
dec
adc
add
jge
orl
out
jbe
jl
sub
add
add
and
popa
popa
jp
inc
add
pop
xchg
mov
pushf
cmp
gs
cmp
and
out
in
lcall
push
mov
lock
mov
hlt
dec
lret
fdivr
xchg
test
or
xor
lds
shl
popf
das
pop
popa
lret
pop
dec
inc
add
insl
aad
cld
div
sbb
out
sar
add
nop
lret
cmp
fisttpl
divl
cmp
fisttpl
shll
outsb
std
adcl
fbstp
sarb
hlt
mov
psubb
push
bound
jno
add
mov
bound
cmpsl
addb
inc
std
add
xor
cmpsl
and
in
and
incl
mov
jne
loope
pop
jp
sub
outsl
push
scas
loope
cld
jmp
push
or
pop
and
pop
insl
fcoml
movb
cwtl
xlat
out
jl
jo
inc
add
mov
fisttpl
sub
xchg
addb
loope
add
inc
add
inc
or
inc
mov
and
dec
test
mov
pushf
addb
movb
mov
in
jno
jp
icebp
adc
icebp
repnz
sbb
sahf
fldt
mov
cmpsl
cld
inc
pop
cwtl
dec
cmp
roll
add
and
gs
cmpsl
or
push
mov
push
notb
push
cmp
sahf
or
cmp
mov
adcl
sub
xor
mov
xor
add
xsha256
cmpsb
push
or
adc
add
add
mov
rorb
fildl
cmp
add
jo
add
mov
sbb
cwtl
lret
xor
xchg
imul
and
add
icebp
ficoms
shlb
adc
add
fisubrl
fcompl
and
lods
ljmp
addr16
lds
mov
or
jbe
mov
inc
pushf
sbb
pop
inc
add
lret
add
sub
add
xor
nop
nop
jecxz
ds
imul
neg
loop
ret
ret
add
lret
add
add
fsubl
pop
inc
add
add
push
cmp
test
call
sti
pusha
add
clc
fistpll
xor
inc
add
mov
mov
addr16
les
shrl
seto
loopne
push
and
fisubrs
aad
add
adc
or
cmp
loop
aad
std
mov
xchg
mov
pop
in
mov
add
ja
add
dec
cmp
lds
add
jnp
lock
aaa
xchg
test
inc
add
adc
pop
pop
outsb
popa
out
daa
mov
repnz
add
out
mov
adc
jle
cmpsb
movsb
adc
ret
xor
in
mov
mov
jg
mov
je
jmp
test
lahf
dec
jg
add
movsl
hlt
loopne
add
ret
loope
inc
or
mov
adc
pop
pop
mov
jge
in
in
push
mov
add
in
stos
mov
aas
cwtl
xor
addr16
lret
mov
in
lock
sub
popf
mov
mov
outsb
lea
lahf
jecxz
or
addr16
add
cmpsl
xor
clc
rcl
mov
add
outsb
imul
bound
mov
ret
xchg
in
add
inc
add
pop
lods
bndldx
sbb
repz
dec
xor
bound
es
mov
sub
add
jae
hlt
and
xor
add
int
popl
mov
xlat
imul
or
ss
pop
sub
mov
les
inc
add
movsb
stc
in
pop
mov
int
xchg
jge
jne
cmp
stos
out
adc
lods
fnstcw
push
gs
lods
add
aad
loope
adc
jo
iret
cmp
scas
dec
imul
outsb
fcmovnu
mov
out
mov
add
mov
lcall
cmp
cli
jne
out
add
adc
mov
fldcw
lea
mov
add
mov
test
push
mov
mov
xchg
mov
xchg
stos
cwtl
lds
fisttps
nop
sarl
leave
pop
pop
cld
lcall
fidivs
add
dec
shll
jmp
pop
jno
int
mov
xchg
data16
push
xor
add
inc
adc
xor
push
pushf
dec
test
cmp
push
insb
fiadds
pop
clc
ja
sub
add
dec
pop
lret
repz
mov
addr16
ret
sbb
fisttpll
insl
mov
mov
dec
add
cmp
fmull
or
sub
repnz
jg
andl
pop
mov
adc
pop
out
sbb
into
or
mov
add
mov
cli
stos
sbb
popa
lds
add
add
and
add
dec
jle
add
std
js
cmp
ficoml
push
xor
xor
movsb
dec
xor
mov
inc
add
sahf
and
mov
test
jge
dec
rolb
cli
dec
sbb
add
xchg
imul
add
jl
xorl
sub
jecxz
mov
sbb
mov
rcl
dec
gs
and
ss
lods
aad
pop
add
int
sbb
imul
mov
rcr
cld
push
mov
inc
cwtl
add
or
add
in
push
ja
in
dec
ss
mov
push
cli
mov
mov
push
add
inc
pop
iret
sub
mov
int3
sub
jns
xchg
pop
cltd
sbb
push
add
and
mov
scas
pavgb
ret
dec
addr16
les
je
mov
mov
mov
test
mov
jbe
dec
push
jnp
add
stc
std
sub
addb
mov
fistps
imul
add
addl
addr16
pop
push
ret
add
mov
sub
addb
adc
pop
pop
cmc
sub
ds
fwait
lock
fistpll
into
fdivrs
std
rcrl
das
shr
sbb
movsl
sub
movsl
adc
xchg
imul
adc
add
sub
fstps
mov
push
lcall
push
xchg
push
add
inc
stos
sti
jl
and
dec
add
add
xchg
mov
sbb
jg
stc
addb
mov
mov
push
cmc
jecxz
mov
pop
jb
pushf
outsl
mov
loop
jle
ficoml
cmpsb
cmc
or
jp
call
adc
add
inc
add
or
mov
mov
std
jg
aas
stos
ss
jle
jo
mov
sahf
xchg
push
aam
test
je
add
xchg
cli
or
nop
push
add
add
or
cmp
lcall
repz
xlat
push
fists
inc
add
call
js
jg
add
mov
mov
jno
dec
and
xchg
add
outsl
add
fisttpll
mov
cmc
adc
decl
mov
cmc
jbe
insb
fstp
push
inc
jno
lahf
xor
inc
add
push
imull
add
test
xchg
roll
ret
jl
mov
loope
add
add
shll
pop
imul
inc
mov
cmpsl
cmp
int3
cmpsl
and
iret
jo
push
sahf
aaa
outsl
or
jecxz
xor
movsl
jno
int3
pop
pop
stc
into
test
dec
aam
inc
add
outsb
and
cmp
pop
and
pop
lcall
cmc
add
add
and
jecxz
adcl
add
cmp
icebp
sbb
add
movsl
movb
test
and
and
cmp
add
adc
and
sbb
mul
addb
add
aad
mov
aam
in
imul
xchg
stc
mov
lahf
fidivs
cmc
mov
inc
add
jge
sahf
jne
test
addr16
cmp
cmp
add
xor
jecxz
mov
rclb
loope
mov
pop
sbb
in
mov
imul
mov
xchg
cmp
mov
dec
mov
push
jns
clc
fsubl
jns
js
test
fwait
movb
dec
xor
mov
add
xchg
pusha
add
sub
rolb
mov
icebp
mov
das
daa
mov
adc
loopne
bound
in
mov
jae
in
adc
iret
pushf
dec
cli
movsb
out
faddp
mov
add
add
pop
nop
inc
add
push
arpl
xor
add
jae
cmp
pop
mov
add
jnp
jecxz
fiaddl
push
dec
fisubrl
xchg
jae
xor
mov
push
add
adc
jecxz
or
sbb
gs
test
in
push
bnd
and
push
add
xor
out
addb
push
dec
mov
mov
ja
lcall
add
sub
xchg
jl
add
inc
add
xchg
nop
xor
test
lret
nop
jno
cmp
adc
insl
mov
or
jns
cmc
cltd
xor
popa
jns
aas
fisubrs
fisubs
and
jg
push
add
xor
repz
push
outsl
movl
lcall
std
addb
arpl
outsb
jecxz
mov
ss
dec
je,pt
sub
bnd
mov
cmp
ret
out
imul
sub
adc
sub
cld
xor
gs
or
pop
das
icebp
sub
imull
add
push
add
adc
push
push
fidivs
insb
adc
add
mov
inc
call
stc
fisttpl
pop
cld
inc
divl
addl
sti
inc
add
inc
lret
jbe
mov
mov
lock
mov
jg
adc
add
pop
hlt
or
add
out
sets
ret
sub
testl
hlt
mov
es
scas
gs
stos
pop
inc
add
scas
roll
add
mov
scas
dec
or
loopne
out
push
hlt
rcll
jle
jecxz
inc
add
and
shr
xchg
das
sbb
scas
outsl
jp
push
add
sbb
shlb
aam
add
fadd
add
add
xor
jmp
aad
sbb
mov
inc
add
inc
insb
xor
sub
pop
jb
add
inc
add
mov
add
mov
mov
cmc
fxch
cmp
push
xor
cmp
iret
mov
icebp
outsb
inc
add
xor
xor
sub
jo
or
mov
ret
push
scas
sub
loop
lock
add
dec
sbb
add
push
adc
addb
repz
add
cmp
add
add
and
outsb
sbb
push
ret
sbb
adc
out
andl
add
jecxz
jp
xor
mov
and
lret
into
addr16
ja
dec
pop
mov
jo
mov
add
inc
add
fiaddl
inc
add
hlt
loopne
lahf
clc
pop
sub
add
lds
or
in
add
inc
test
dec
mov
pop
lods
repnz
sub
addl
and
enter
sub
fsts
lret
pop
loop
xchg
pop
cli
jecxz
sbb
insb
push
or
push
xchg
imul
adc
sub
repz
fisubl
mov
mov
cli
test
movb
sbb
bound
inc
addr16
movb
cmpsb
or
imul
inc
add
add
shlb
cmp
les
leave
ljmp
cmp
cmp
jge
add
cmp
insl
out
push
fcmovnb
add
xor
mov
xor
mov
push
insb
add
jo
mov
mov
pop
jne
popf
adc
push
adc
pop
cltd
into
add
sub
mov
data16
jg
enter
frstor
shl
jae
popf
loope
ja
add
cmp
add
into
cld
in
dec
lea
xchg
ljmp
cmp
jne
lods
inc
stos
test
mov
cmpsb
loop
fnsave
das
fistps
repz
xor
out
jmp
es
dec
dec
mov
inc
adc
xchg
addb
mov
pop
xchg
jae
lcall
dec
pushf
jae
dec
xchg
mov
sbb
aaa
add
jmp
add
ljmp
aad
pop
aad
add
and
lcall
pop
int3
add
xchg
les
push
add
insb
movsl
mov
popa
mov
aaa
pop
aad
push
xchg
lret
testb
jne
ja
test
push
xchg
xchg
and
stos
or
fistps
add
push
bound
addb
test
mov
icebp
subl
fists
sti
dec
ja
sarb
and
rolb
sub
pop
data16
gs
gs
out
pop
popa
loop
inc
incl
std
ljmp
xlat
jns
icebp
and
enter
nop
ja
and
cmc
xchg
mov
dec
push
pop
or
loopne
loopne
add
sub
test
mov
fisubrs
adc
pop
and
imul
ret
add
jecxz
dec
insb
rorl
pop
jmp
cmpsb
movsl
ficoms
push
sub
ss
es
out
or
inc
add
les
sbb
insl
imul
lahf
popa
dec
push
and
inc
add
mov
xchg
and
inc
fwait
addb
add
xor
out
mov
and
adc
or
add
es
sbb
adc
sbb
jne
enter
pop
mov
div
sub
add
loopne
xchg
push
add
inc
add
mov
mov
sbb
lcall
aas
jae
pop
xor
mov
cmpsl
jbe
cmp
push
jne
xchg
fiaddl
add
add
ss
cld
pause
stc
jl
stos
sahf
test
jbe
clc
imul
sub
push
pop
cmpsl
scas
sbb
pop
loopne
push
in
mov
add
bound
push
push
stos
cmp
leave
stos
movb
and
add
xchg
std
scas
outsb
sahf
cmp
xchg
lcall
pop
push
inc
add
xadd
cmpsb
cs
push
jge
roll
aad
scas
or
shll
add
add
dec
mov
jmp
sub
xchg
add
jbe
push
pop
sub
in
rorl
sbb
pop
insl
xor
lret
int3
je
xchg
or
push
inc
js
push
stc
pop
rolb
pop
inc
add
add
sbb
jp
insl
xor
sbb
nop
stc
insb
jb
movsb
pop
aad
ss
outsb
ret
mov
popf
and
and
mov
mov
mov
in
jcxz
mov
or
xorl
leave
adc
mov
and
adc
xchg
das
in
mov
mov
add
add
or
cli
popf
leave
imul
sbb
pusha
add
shl
sahf
mov
sar
cwtl
jo
imul
das
test
add
mov
jl
in
imul
icebp
push
add
mov
test
aad
xor
ds
stos
mov
lahf
mov
xchg
fldt
add
xchg
imul
rcr
mov
dec
mov
push
mov
push
jb
ret
shr
sbb
into
pusha
add
insl
push
dec
xchg
das
sbb
ss
or
xor
js
lea
or
push
or
lea
mov
cmp
sub
cmp
movsl
pop
push
push
fmuls
inc
add
jmp
push
or
mov
push
stc
jle
lock
push
jmp
fsubrl
or
jmp
movsb
test
nop
xchg
push
xchg
inc
add
adc
add
outsb
inc
push
xor
nop
cltd
nop
arpl
sbb
pop
inc
insl
addb
int3
adc
std
nop
fisubl
adc
sub
mov
inc
jne
mov
lds
lock
mov
add
xchg
outsl
in
call
sub
loopne
jbe
xchg
ficoml
push
fisttps
gs
loop
adc
scas
xchg
push
outsl
mov
mov
jne
push
or
imul
addb
inc
add
jmp
add
test
xor
mov
outsb
rsqrtps
mov
mov
call
ss
pop
adc
pop
mov
lock
mov
push
jg
push
fbstp
add
movb
dec
sub
sub
add
cwtl
mov
and
jmp
add
mov
xor
dec
bound
cmp
sar
and
mov
sbb
lahf
into
mov
mov
pusha
add
sbb
xchg
addb
xchg
in
scas
push
out
fisttpll
inc
add
or
int3
and
bswap
mov
rorl
mov
add
adc
cs
mov
iret
push
xor
add
ljmp
pop
cltd
lcall
sbb
mov
cmpsb
test
cmc
or
sbb
shrl
adc
push
cmp
xchg
je
mov
add
jmp
add
mov
inc
movb
cmpsb
negl
fstpl
addb
xchg
jo
xor
stc
sub
add
stos
cmp
inc
add
xchg
mov
repz
inc
add
int3
or
into
cmp
mov
sub
xlat
adc
xor
aas
jp
clc
jge
cmpsb
adc
clts
add
insl
icebp
inc
aaa
xchg
repz
sbb
fmuls
cmp
repnz
inc
lods
or
add
add
jl
rolb
push
out
push
mov
sub
sbb
adc
add
sbb
add
dec
shll
xchg
shr
jae
daa
inc
inc
add
mov
and
mov
stos
decb
mov
add
sbb
popa
movsl
and
out
push
decl
fdiv
sahf
das
addr16
mov
lock
fwait
into
and
add
add
push
xor
add
sbb
pusha
add
loope
mov
add
push
add
iret
aas
andl
ret
fnstcw
cs
and
xchg
out
icebp
pop
cmp
negb
outsb
mov
std
pop
sahf
rcll
cmpsl
lret
mov
in
adc
cmpsb
add
xor
fnsave
mov
add
mov
addr16
rolb
push
cmp
lcall
cmp
add
sub
fmull
movsb
outsb
mov
sub
out
xchg
adc
pushf
push
lcall
cmp
mov
xorl
jno
jb
sti
pushl
add
mov
mov
or
fstl
stos
jge
pop
shlb
mov
cmp
add
push
xor
add
xor
aam
mov
add
add
sub
bound
or
push
sahf
hlt
loope
cmp
pusha
add
movsl
mov
clc
cli
daa
jb
push
mov
addr16
mov
ror
stos
lea
mov
mov
lods
leave
inc
fs
lds
add
aas
cs
push
xor
aas
lock
sbb
js
int
add
dec
loop
std
and
add
iret
lret
mov
xchg
ja
mov
sbb
int3
data16
sarl
cmpsl
fucom
adc
add
icebp
mov
adc
cmc
call
push
repz
mov
mov
or
add
ja
out
add
mov
cmpsb
jnp
stos
or
shll
or
jne
add
test
mov
lea
add
or
adc
jge
mov
lcall
repnz
scas
xor
push
js
mov
rolb
jb
add
mov
mov
pop
mov
push
push
dec
js
scas
jns
and
decl
sbb
mov
mov
mov
add
fsub
ljmp
pop
xchg
push
pop
dec
and
jae
lods
int3
pop
lds
push
add
cltd
repnz
jp
fwait
push
repz
mov
xorl
push
je
lods
add
fstpl
and
add
in
push
inc
add
sbb
fsts
stos
cmpsb
ret
add
push
add
into
stos
outsl
adc
mov
pop
pminsw
xor
rclb
xlat
or
sbb
inc
add
mov
imul
pop
pop
sbbl
ljmp
fcompl
js
pop
lock
cmp
les
pop
sbb
jb,pn
sub
sbb
inc
add
adc
push
imul
ret
inc
add
push
ljmp
into
adc
test
pop
add
shlb
add
jns
pop
out
lods
xchg
sarl
fld
add
xchg
push
pushf
jae
les
xchg
out
mov
rclb
cmp
push
mov
add
in
cmpsl
and
xchg
arpl
add
js
fnstcw
push
sbb
test
mov
popf
push
add
mov
mov
bound
push
jae
shl
ja
cmp
add
ror
and
pop
xchg
or
repz
add
push
test
pop
or
jns
xchg
adc
aam
mov
movb
add
mov
mov
sbb
cmp
sbb
call
jl
movsl
pop
lret
push
jnp
add
add
xchg
and
inc
outsb
fwait
test
adc
add
pop
push
enter
push
jp
pushf
ljmp
fiadds
jecxz
xchg
cmp
add
add
pop
sahf
push
sub
pop
je
sbb
imul
adc
or
add
xchg
test
xor
jp
ficomps
push
pushf
enter
mov
pop
push
add
jg
lods
xor
hlt
dec
and
xor
jl
dec
rcrl
jle
add
inc
dec
mov
sbb
loope
mov
mov
movsb
push
sub
int
test
add
cmc
je
cs
out
lds
add
pop
inc
add
iret
sbb
pop
mov
xchg
or
xor
test
push
or
pop
cmp
inc
stc
test
aaa
pusha
add
mov
pop
push
das
xchg
outsl
loope
push
inc
mov
imul
fildl
add
jle
test
sbb
out
jne
sbb
mov
pop
fs
mull
neg
push
jmp
adcl
pop
mov
and
popa
ret
cwtl
jge
int
mov
std
and
or
mov
les
inc
push
inc
add
stos
dec
pop
mov
adc
mov
lcall
add
cmpsl
mov
test
enter
xchg
nop
inc
jno
test
loopne
add
add
add
jno
add
fistpll
push
lahf
fmul
xlat
movsl
test
cmpsb
inc
push
test
mov
in
pop
cmp
add
mov
repz
fadd
movsl
out
and
hlt
or
jecxz
addb
jle
add
jle
mov
push
in
add
ret
cmp
add
and
sbb
mov
add
lock
mov
das
mov
add
mov
cmp
and
mov
push
sbb
adc
jbe
jle
mov
or
lods
gs
push
push
add
outsb
aam
in
adc
mov
jne
fcompl
mov
mov
jb
addr16
add
inc
add
sbb
add
mov
add
add
and
clc
push
cmpsb
pop
fcomp
push
out
add
jae
xchg
dec
xchg
out
jmp
add
and
movb
std
scas
cmpsb
mov
add
addb
push
pop
mov
call
push
sbb
cmp
stos
dec
dec
push
insl
ffreep
movsl
push
add
inc
add
jo
sbb
out
mov
sti
or
dec
sub
dec
roll
test
mov
add
pop
push
xor
wbinvd
cwtl
dec
cmpsl
adc
call
mov
sub
int
lcall
in
push
adc
leave
daa
fistpl
or
mov
repz
les
gs
xor
mov
jb
stc
fadds
out
lahf
lcall
or
mov
and
mov
inc
ret
push
aaa
or
xor
mov
mov
xchg
inc
add
daa
mov
pop
and
pop
fcoms
xor
stos
dec
popf
add
mov
ret
sub
inc
add
imul
int3
movsl
or
cmp
mov
jmp
xor
imul
test
stos
inc
add
jle
jns
push
scas
or
pop
sub
jl
mov
inc
scas
movsl
mov
cltd
shrl
push
mov
add
adc
lock
add
add
xchg
jne
add
test
push
add
testl
les
leave
es
lahf
rcrb
and
jb
movsb
mov
lret
xchg
inc
sub
fistl
jns
and
int
ss
sub
pusha
add
into
push
test
sbb
inc
inc
mov
shr
or
inc
mov
data16
add
pop
jg
push
jle
decl
sti
insl
cmp
xorl
sub
inc
leave
fidivrs
fsubrl
in
mov
jge
js
loope
lret
inc
add
mov
std
addl
pop
dec
cmp
lret
test
and
sbb
repnz
add
enter
sarb
sub
in
or
adc
daa
scas
cmpsb
lock
insl
in
pop
add
pop
ret
dec
stc
leave
pop
pop
jae
lock
push
push
add
lret
jge
cmp
in
inc
add
les
cltd
dec
mov
js
int3
mov
call
add
push
sbb
popf
cmp
sarb
and
aas
test
cmc
stc
outsb
adc
aas
adc
in
fnsave
test
add
push
loop
sti
jae
push
add
addb
cmc
cli
or
clc
add
outsb
aaa
xchg
ret
rcl
int3
or
loopne
into
popa
icebp
mov
add
or
loopne
lahf
inc
add
add
add
mov
pop
enter
add
fiaddl
adc
push
popa
jnp
and
inc
add
xlat
inc
add
sub
push
adc
arpl
add
in
mov
mull
or
in
inc
add
ss
jns
outsb
stos
dec
mov
popf
push
jp
fldenv
add
lret
adc
lock
xchg
shlb
es
or
inc
add
mov
adc
xchg
mov
movsl
in
or
fidivs
push
int3
rcll
aad
inc
cmpsb
rorl
add
push
js
adc
cmp
xchg
nop
mov
mov
add
in
dec
into
pop
mov
inc
mov
lock
cmc
jne
stos
push
sub
mov
lock
inc
xlat
xchg
insl
or
cmpsl
test
rep
rolb
cmp
mov
xor
push
sub
adc
aad
sbb
sbb
ret
lods
fnsave
xor
jb
gs
push
and
add
fistpll
and
add
add
xchg
cmp
xor
das
mov
push
add
in
jge
addb
mov
pusha
add
dec
xchg
fldcw
push
mov
xchg
cli
inc
add
add
push
mov
add
lcall
idivl
incl
sbb
into
lret
mov
push
mov
mov
sub
mov
icebp
cltd
inc
add
je
test
fsubrl
push
sbb
enter
add
test
test
jns
xor
cltd
adc
rclb
cmpsl
in
xchg
cli
or
cmp
movb
imul
cs
cmp
add
lods
and
add
in
ljmp
pop
pushf
test
inc
add
add
cmpsl
shll
add
jge
push
push
xchg
pop
jge
rolb
imulb
data16
mov
mov
imul
jg
je
pop
fisubrl
fwait
jae
neg
and
xor
ds
xchg
push
adc
jnp
sti
lret
rcrl
cld
movb
push
repnz
cs
or
mov
sub
jle
mov
addb
add
add
add
and
sub
mov
sbb
aam
push
daa
out
movsb
xchg
xor
subl
into
mov
or
mov
add
pop
or
enter
jno
push
mov
loopne
mov
push
inc
cmpsl
inc
cs
pop
xor
add
xor
movsl
mov
add
add
sysenter
sub
dec
cmp
scas
pop
ficompl
jl
fmull
movsl
or
roll
push
es
test
flds
add
cs
cmpsb
sub
jo
xor
mov
movsb
mov
add
xor
scas
cwtl
or
sbb
addb
add
aam
fnstenv
and
aad
into
xchg
test
test
add
fs
inc
add
into
shll
xor
in
jbe
and
push
lahf
out
pop
int
dec
mov
mov
cs
or
sbb
in
inc
add
add
outsl
fdivl
sti
pop
pop
gs
iret
insb
inc
std
xor
sbb
xchg
test
sbb
cmp
add
out
adc
fnstcw
add
jnp
inc
jns
ret
dec
push
xchg
push
in
inc
add
clc
dec
cmp
adc
and
jecxz
rolb
call
bound
push
push
mov
cld
icebp
lret
loopne
incl
pop
cmpsb
shrl
ret
mov
add
cmp
push
fnsave
cmp
push
mov
add
outsl
push
cs
ficompl
inc
movb
jnp
or
add
dec
aaa
push
jb
xlat
shrl
mov
imul
loope
lcall
fcoms
inc
add
xlat
jle
call
and
cmpsb
stc
add
ljmp
jae
sbb
movb
jmp
mov
cld
test
movb
add
dec
aaa
in
lods
in
inc
add
negb
mov
add
stos
test
icebp
xchg
mov
mov
addr16
fwait
nop
lret
lods
xchg
xchg
cmpsl
lea
sbb
or
sbb
sahf
insb
ljmp
add
xor
test
jbe
dec
xchg
test
push
pop
addb
inc
add
pop
cmp
in
xlat
shl
adc
mov
and
add
fldt
cmpsl
or
dec
je
test
mov
hlt
xchg
leave
ss
push
add
movsb
ss
lret
cld
push
xchg
insb
mov
mov
jbe
xor
out
sbb
dec
movl
cmp
add
adc
add
notb
aad
gs
mov
or
xchg
mul
mov
outsl
xchg
lea
dec
hlt
lahf
or
inc
pop
cmpsl
mov
fistpl
add
pop
sub
mov
xlat
je
add
ljmp
xlat
or
add
or
inc
push
add
cmc
mov
mov
cmc
push
mov
xor
out
int3
addb
xchg
lret
mov
imul
cmpsl
les
addb
xor
jmp
rolw
jl
lods
sbb
push
and
add
mov
jecxz
push
popa
xchg
mov
add
sub
hlt
inc
xchg
mov
inc
inc
add
ror
imul
xchg
ja
cmpsb
adc
push
or
add
rcll
cmpsl
int3
push
movsl
into
leave
xor
dec
sub
jno
pop
pop
popf
pop
fcompp
aas
or
les
sbb
mov
push
pop
fisubs
dec
and
pusha
add
sbb
mov
xor
pop
in
cmc
mov
add
add
cltd
aam
cmpsb
shlb
or
xor
mov
mov
rclb
mov
pop
or
int3
xor
lods
jno
lods
push
cmp
pushl
je
fdivp
inc
add
sbb
cli
mov
sub
or
pop
xor
and
sbb
mov
pushf
outsl
fnsave
sbb
fstl
and
jns
sub
jno
outsl
cltd
rcrb
clc
addb
in
test
outsb
mov
sbb
enter
inc
add
add
push
mov
sbb
pusha
add
add
xor
clc
adcl
inc
mov
mov
jg
mov
xorl
pop
testl
adc
mov
xchg
jo
std
addb
or
mov
test
or
data16
clc
scas
lods
pand
movsl
scas
pushf
sub
add
in
add
shll
test
into
jnp
lret
add
add
inc
add
inc
add
lods
pop
xlat
and
data16
pop
movsl
lea
pop
xchg
pop
cmp
shl
loop
dec
dec
jle
imul
out
sbb
loop
mov
or
divl
outsl
std
bound
pop
mov
push
mov
adc
fwait
movnti
inc
add
jecxz
fcmovnb
pop
adc
add
sbb
fwait
das
inc
add
and
or
add
push
nop
imull
cwtl
out
sbb
and
test
push
insb
mov
nop
sub
mov
mov
out
add
sub
enter
hlt
pop
adc
jno
test
push
xorl
lahf
or
xor
sarl
je
add
pop
je
sub
test
mov
adc
mov
push
add
sub
add
popa
iret
push
cltd
inc
jg
in
pop
cltd
divl
fs
xchg
push
lcall
bound
bound
sub
add
fbld
rolb
loope
mov
in
lret
add
jb
mov
sbb
mov
or
mov
add
sbb
and
addb
loope
repnz
bnd
cmp
add
add
pop
jo
movsl
ror
addb
imul
les
cmp
add
mov
jp
adc
repz
in
cltd
arpl
jno
fstps
cmpsb
movb
add
mov
push
xor
fs
xor
dec
mov
add
ficoml
xchg
mov
mov
mov
jae
pop
jb
daa
enter
daa
sbb
add
xor
fs
je
jnp
add
das
jns
lock
sub
ror
lds
scas
xchg
pop
fmull
sbb
push
mov
xchg
inc
add
dec
clc
mov
pop
pop
outsl
int
out
inc
xchg
cs
add
adc
pushf
xor
call
dec
mov
cmpsl
in
add
pop
cmp
mov
add
dec
and
inc
mov
mov
imul
int
out
out
movsl
test
fldl
aad
push
sub
jns
push
dec
sbbl
add
jne
ret
sbb
add
leave
mov
xchg
inc
add
and
mov
push
test
mov
addb
mov
fldl
sub
sub
adc
les
jnp
jno
jb
ret
rolb
out
pop
push
mov
add
ret
gs
ljmp
stc
out
dec
movb
jb
sub
add
int
add
mov
addr16
movsl
mov
xor
mov
add
cmp
addl
add
mov
dec
test
jecxz
popa
addb
fildll
dec
enter
and
sbb
fstl
imull
ret
inc
repz
xchg
jo
xor
push
pop
loopne
add
push
adc
add
daa
jns
negb
cmpsl
popf
test
scas
xorl
sub
xchg
inc
add
inc
pop
jno
push
jg
xlat
xchg
cmp
outsb
xchg
mov
popf
jbe
add
pop
mov
and
std
push
push
sti
stos
filds
mov
add
notl
dec
sahf
iret
push
add
mov
xchg
ret
and
or
inc
loope
xor
jecxz
jle
cmp
cmpsl
in
xor
or
or
mov
dec
xor
jmp
stos
jne
es
cwtl
lods
add
test
roll
mov
jo
lcall
xchg
icebp
loopne
ret
dec
out
aaa
and
add
mov
aam
das
sbb
test
cmp
inc
outsb
negb
mov
fdivl
loop
push
test
xlat
stc
clc
adc
movsl
adc
jl
mov
push
add
xchg
insb
fldl
jae
lock
pop
test
push
es
add
sbb
fists
and
mov
jo
pop
or
jl
push
pusha
add
pop
mov
dec
in
jp
cmpsl
addb
jo
jl
sbb
fsub
adc
out
aam
inc
add
dec
sub
or
outsb
loope
mov
test
mov
adc
js
xchg
outsb
jmp
call
xchg
or
add
sahf
mov
addb
pop
imul
add
lret
clc
das
aam
les
arpl
repz
pusha
add
sbbl
push
je
sbb
add
mov
xchg
sahf
cld
pop
dec
xor
jp
int
cmp
pop
in
push
pop
outsl
xor
fildll
add
xchg
stc
sbb
add
cmp
push
sbb
out
outsb
and
fdivrl
adc
mov
cmp
add
mov
or
sub
add
add
add
add
lock
inc
aaa
jo
mov
pop
cmc
jle
add
addb
jne
mov
xorl
ja
cs
xor
sbb
icebp
adc
mov
int
pop
dec
rorl
add
cwtl
sbb
repnz
mov
les
push
xchg
in
frstor
xchg
mov
sbb
ljmp
std
or
xorl
pop
push
ja
pop
pop
es
ret
sahf
lret
in
inc
push
sub
adc
add
jp
lods
loope
push
add
fldt
std
scas
or
mov
cmpsb
insl
push
stos
push
or
mov
mov
pop
mov
xchg
ja
mov
mov
out
loopne
and
in
jb
mov
outsl
push
gs
in
lcall
mov
xor
sub
add
dec
pop
ljmp
add
stos
shll
add
ljmp
dec
js
lahf
pop
or
aas
leave
cs
cs
fidivl
mov
and
in
sub
shll
or
push
out
mov
test
shll
ficoml
daa
mov
neg
push
add
fs
shll
mov
mov
lds
mov
dec
nop
fs
mov
arpl
dec
lret
gs
ret
rcr
lret
dec
hlt
adc
inc
add
adcl
daa
xor
out
outsb
inc
je
mov
scas
sahf
adc
or
add
mov
xchg
movsb
jno
add
popf
add
xor
add
or
ja
addb
add
add
cmp
add
daa
push
leave
and
sbb
cmc
lahf
in
fcoms
or
mul
incb
add
dec
fs
cwtl
lds
lret
xor
and
lock
addl
mov
popf
fiadds
add
or
je
movsl
ljmp
insb
lods
dec
jnp
or
sub
xor
sub
mov
dec
sub
clc
mov
pop
lods
xor
movsl
mov
pop
lahf
push
dec
cmp
xor
push
add
fdivl
outsb
or
sahf
cmp
shl
hlt
mov
gs
xchg
push
mov
mov
arpl
lock
adc
xchg
or
or
push
test
repnz
add
add
out
test
add
add
scas
stos
or
xchg
loopne
hlt
ss
dec
xchg
int
jecxz
mov
jmp
mov
bound
inc
add
sbbl
xchg
outsb
lods
push
shr
ss
xor
test
jp
xchg
xor
and
or
jbe
cmp
addl
fldcw
addb
ret
adc
fistps
jmp
pop
pop
ss
push
xchg
or
pop
pop
mov
sub
add
sbb
mov
test
mov
pop
and
ret
jae
pusha
add
loop
jle
pushf
push
pop
addb
xchg
fmuls
pop
sub
mov
xor
enter
out
adc
mov
rol
push
cli
lock
xor
fcmovnb
add
insb
sub
stos
addr16
fs
jns
add
das
test
pop
aad
mov
add
daa
jbe
add
mov
sub
add
xchg
addb
push
sub
xchg
xchg
cli
mov
pop
adc
insl
push
add
pop
hlt
mov
or
xchg
aas
gs
jo
pop
cltd
addb
pop
push
loope
add
jl
movsl
les
das
mov
fs
or
or
mov
stc
pop
das
mov
push
mov
and
repnz
ja
or
and
inc
shl
popf
jp
aam
outsl
inc
std
and
sbb
sub
push
sub
lret
mov
test
xor
add
mov
clc
xlat
inc
mov
arpl
add
lcall
sarl
sbb
and
xchg
popf
fisubrl
add
out
push
imul
pushf
push
icebp
or
popf
jo
push
fisubl
rclb
inc
add
add
add
jmp
fadd
add
gs
pop
fstpl
test
scas
cmp
push
mov
mov
aaa
and
and
mov
push
fucomi
cwtl
or
gs
sub
mov
call
add
bnd
inc
add
outsl
pop
mov
test
mov
lds
inc
bound
rcl
mov
xchg
mov
add
add
or
adc
mov
dec
fdivl
hlt
sub
sti
mov
in
jne
stos
cld
or
jmp
and
dec
cs
movsb
fwait
sub
dec
pop
lret
movsl
xchg
gs
push
rolb
pop
movsb
xchg
push
pmulhw
jecxz
int3
pop
add
repz
xor
and
jmp
loope
cmp
mov
sbb
and
mov
out
mov
test
mov
lahf
std
inc
add
test
jns
sub
mov
push
popf
jnp
rolb
mov
movsb
std
clc
push
in
in
loop
adc
push
mov
sub
loope
les
push
pop
lea
sti
loopne
addr16
sub
punpckhdq
rorb
in
arpl
out
jb
mov
pop
sti
jmp
test
stos
pusha
add
mov
add
sbbl
pop
jl
add
jno
or
add
add
xor
mov
add
rolb
orl
mov
add
inc
jg
sbb
das
fnstcw
shll
ja
jo
add
lret
in
outsl
xchg
or
add
xor
subl
fs
mov
pop
add
or
push
arpl
mov
push
divb
lret
addl
test
dec
mov
enter
lcall
fs
test
gs
dec
test
pop
jmp
out
aad
xchg
dec
lock
or
fldl
xor
add
inc
add
stos
aad
lods
cmc
rolb
xchg
or
pop
dec
pop
in
fistpll
test
push
scas
insb
pop
rclb
insl
cld
loopne
xor
pop
outsb
jl
mov
sarb
cmp
xor
in
fdivrl
dec
loope
dec
out
push
out
sub
inc
pop
lcall
xor
xchg
jp
add
push
pop
cmpsl
shrl
add
out
jae
ds
inc
add
rol
mov
int3
aad
dec
sbb
xchg
frstor
pop
add
cltd
sub
ss
add
loop
movsb
imul
mul
movb
cwtl
dec
inc
add
add
mov
xchg
xchg
or
sti
int3
cmp
jno
and
cmp
mov
xor
dec
inc
push
add
add
sub
xchg
dec
push
loope
push
popf
sti
fcoml
mov
movb
add
add
fistps
cmp
popf
xchg
rcrl
or
mov
xchg
stos
aad
mov
adc
xchg
cwtl
jno
test
mov
js
ret
aam
enter
stc
rolb
add
add
mov
sub
stos
fwait
adc
lods
or
lea
outsb
inc
add
xor
scas
ret
rcrb
add
or
cli
xchg
adc
aam
enter
cmp
fisubs
add
dec
mov
fisubrl
add
fsub
mov
jno
add
jnp
lods
bound
adc
cmp
inc
xchg
mov
mov
add
mov
rolb
loopne
mov
sub
int
add
mov
scas
iret
or
call
mov
int3
test
iret
popf
testb
pop
sbb
cmc
add
jge
add
nop
adc
lret
add
fisubl
mov
jbe
pushl
test
add
movsb
ja
out
add
leave
jp
and
or
jae
add
mov
cmc
adc
stos
push
movsb
jl
and
repz
add
cmp
lods
mov
jo
adc
cmp
fcomip
sti
movsb
mov
addb
mov
ss
push
jbe
sbb
pop
dec
adc
ret
repz
xor
adc
adc
cltd
mov
movsb
std
cli
fsts
fsubrp
notb
sub
insb
jecxz
sub
incl
add
add
rcll
pop
dec
scas
in
in
jbe
xor
pop
test
rorl
fwait
ret
sbb
add
and
adc
push
xor
out
stc
add
enter
js
sti
lret
mov
jle
mov
bound
into
xor
out
adc
fsubrp
or
es
xchg
fisubl
fucomip
js
in
jle
pop
fcomps
sbb
mov
xor
or
fdivrp
ja
add
out
rolb
mov
sbb
pop
inc
pop
sti
jb
out
mov
mov
push
inc
add
lock
cli
int
cli
fimuls
jae
sub
adc
add
mov
andl
aaa
inc
jo
aas
jnp
jl
inc
sub
cmp
pop
aas
fldcw
add
aad
mov
loopne
add
movsb
out
xchg
loopne
call
bound
outsb
xor
dec
mov
faddl
adc
pusha
add
add
adc
add
push
aad
cmp
stc
dec
call
in
shll
mov
scas
addr16
mov
popf
aas
scas
sti
and
js
ljmp
loope
sahf
lods
mov
inc
add
fdivl
or
jecxz
pusha
add
add
add
lret
dec
test
add
jnp
inc
add
add
mov
lds
pop
mov
sub
aas
ds
cmp
jne
lcall
add
outsb
and
pop
fistl
adc
jl
and
sub
mov
pshufw
fstl
loope
shll
sbb
hlt
fldcw
hlt
jl
sub
testl
stos
xchg
pop
stos
cmp
xchg
cld
mov
enter
in
pop
dec
loopne
dec
xchg
sbb
dec
lods
and
adc
daa
inc
add
loop
mov
xchg
adc
dec
arpl
fwait
push
loop
fsubrl
and
outsb
jg
nop
jne
and
jo
add
pusha
add
or
xor
push
in
stos
scas
xor
add
pop
cld
loop
mov
mov
loopne
ss
fsub
lahf
outsl
cltd
xchg
mov
in
xchg
cmp
mov
dec
pop
push
mov
add
jno
push
add
dec
and
sbb
sub
add
add
cmp
cmp
bound
mov
ret
sub
fdivl
or
les
test
mov
es
ret
loope
js
add
movsl
popa
xor
mov
add
les
ss
inc
add
inc
xchg
fucomp
icebp
xchg
lahf
xchg
loope
bnd
cmpsb
outsl
lret
mov
mov
push
scas
nop
clc
aaa
stos
fisubrl
cmp
push
popa
mov
mov
dec
pop
repz
push
das
negl
mov
insl
fstpt
outsl
mov
xchg
lock
add
fcmovnbe
cmpsb
leave
sbb
fwait
xchg
fdivl
push
add
ljmp
add
mov
sub
and
jae
mov
std
call
fwait
in
sbb
iret
sahf
notb
push
in
sub
rclb
jecxz
jg
ret
jne
add
add
jbe
test
add
mov
add
sbb
adc
mov
jo
cmpsl
mov
pop
push
add
call
add
aad
pop
add
mov
fs
cli
mov
fstl
inc
add
mov
add
cltd
add
ss
dec
rol
sub
outsb
sub
sub
int
xchg
cmpsl
cltd
jmp
push
fistl
out
js
pop
pop
rorl
add
mov
fdivs
cmp
lret
add
jmp
jle
out
sbb
mov
jmp
adc
subl
inc
enter
or
fisubl
or
out
jb
inc
push
cmc
cmp
mov
sub
jae
cmp
test
cwtl
lds
adc
mov
xchg
push
mov
mov
sahf
sub
test
sbb
mov
inc
sub
add
inc
cmpsl
add
add
cmp
ljmp
mov
dec
rolb
add
xlat
pop
cmp
and
mov
sti
and
add
icebp
mov
xor
mov
xchg
xchg
xchg
jnp
sbb
inc
add
test
mov
hlt
rcll
pushf
dec
mov
adc
mov
dec
sti
adc
xchg
sbb
mov
and
add
and
cltd
dec
aad
lds
cmpsl
mov
bnd
pushf
pop
rclb
fiaddl
clc
cmp
cmc
mov
jp
icebp
or
mov
aas
sbb
dec
pop
addb
push
add
mov
jmp
add
xchg
lcall
pop
cmp
out
into
sub
in
add
mov
mov
add
add
lods
jne
jno
ret
xchg
sbb
inc
nop
xchg
jns
adc
movb
insb
lea
sbb
and
fucom
pop
push
add
mov
jo
push
add
ret
repz
pop
jae
aaa
mov
xchg
sbb
add
out
mov
movb
jp
sbb
add
or
scas
mov
xor
cmp
add
jg
clc
cmpsl
xor
test
addr16
aad
inc
add
or
cwtl
pushf
inc
xchg
in
das
mov
mov
xchg
dec
rcrl
push
add
sub
add
mov
mov
adc
scas
pop
cmp
out
call
add
add
sub
test
addb
jnp
cmp
inc
xchg
pushl
dec
dec
scas
mov
and
push
decl
clc
cmpsl
dec
or
cld
push
add
add
mov
sub
jne
jbe
inc
add
int
fisubrs
imul
add
adc
loope
xchg
data16
pop
sahf
jae
ss
lahf
in
lret
jle
xchg
mov
mov
push
fildll
jl
add
sti
inc
fdivs
push
jnp
push
push
sub
cmpsl
or
dec
inc
add
dec
rcrb
insl
cmpsb
faddl
lret
sbb
fiadds
test
test
and
add
pop
xor
jg
pop
inc
add
cltd
out
lock
add
cmpsb
in
les
xor
jbe
mov
and
add
push
mov
imul
jle
cmp
inc
aam
push
mov
inc
add
shr
mov
outsl
jno
out
shl
xchg
dec
pop
lods
lods
jmp
xchg
add
rcrl
mov
mov
rsm
inc
add
subl
xor
cmp
sbb
int
insl
pusha
add
add
in
adc
ja
bound
xor
mov
add
mov
add
pop
inc
cmp
and
jns
and
sbb
xor
dec
lahf
mov
cmp
push
jno
mov
repnz
mov
add
push
pop
push
rcrb
cmc
adc
hlt
cmp
add
cmp
sbb
imul
pop
mov
add
mov
xchg
je
pushf
scas
inc
lret
mov
in
or
popa
xchg
insb
inc
add
into
and
daa
out
adc
stos
xchg
xor
mov
mov
sub
jl
lock
insl
aad
mov
push
inc
mov
push
int3
out
mov
pop
fwait
sbb
xchg
add
mov
adc
cli
aam
lcall
nop
sub
sub
and
scas
cmp
inc
add
add
or
add
xchg
das
push
add
mov
js
mov
cmc
inc
sbb
xchg
and
or
popl
icebp
mov
dec
stos
les
ficompl
test
rol
add
icebp
stos
mov
xchg
dec
loopne
enter
add
add
bound
xchg
pop
iret
pop
int3
mov
loope
xor
dec
call
add
mov
sub
adc
pop
incl
enter
cmp
jmp
sar
sub
lcall
sahf
lret
lea
cmp
pop
repnz
xchg
js
bound
faddl
add
outsb
push
push
sbb
aam
sarb
inc
fcomp
loop
inc
repz
pop
cwtl
fisttps
or
dec
mov
mov
push
jns
mov
lahf
dec
xor
aaa
mov
sub
mov
clc
orw
pop
dec
and
fildll
pop
cmp
add
rolb
jmp
jge
aas
sbb
add
insb
xchg
fistpll
popa
test
pop
shrl
out
or
sub
add
fs
and
jge
or
or
fdivs
dec
cmpsb
push
mov
sbb
lods
int
jae
inc
rcl
idivb
shl
xchg
nop
cli
mov
addb
push
pop
dec
push
add
lock
sbb
pop
xchg
mov
orl
inc
add
inc
add
ds
adc
loop
out
xchg
aaa
and
xchg
cwtl
lret
imul
jo
mov
fwait
cmp
add
and
pop
jl
and
inc
add
add
push
cmp
nop
jmp
jnp
add
add
mov
mov
add
pop
mov
jle
call
sbb
fstpt
scas
ret
mov
adc
jmp
and
add
jle
adc
sbb
sbb
jns
add
lret
arpl
add
addb
add
cmp
mov
xor
outsb
mov
pop
adcl
cmp
xor
test
add
add
add
dec
stos
pop
ds
out
imul
inc
add
add
adc
cmp
xchg
pop
pop
mov
inc
add
adc
clc
inc
add
push
mov
xchg
add
add
test
add
add
inc
add
xchg
roll
movsb
mov
sub
cmp
add
insl
gs
mov
inc
cmp
fmull
js
mov
xchg
xchg
xor
mov
push
xchg
cmp
pop
shll
and
ret
sbb
stos
rol
add
dec
push
dec
lahf
addb
rcl
fwait
movsl
icebp
jmp
imul
cmp
xor
mov
std
mov
sub
lock
add
cmp
data16
ficoml
adc
repnz
je
lret
xor
and
sub
iret
sub
add
mov
cli
sbb
add
dec
ficompl
out
stos
sub
xchg
stos
cmp
or
mov
ret
imul
pop
imul
mov
mov
push
aas
repz
insb
movb
lods
pop
jl
mov
fldz
mov
movsb
mov
rclb
add
enter
add
in
mov
ret
sbb
adc
xchg
xchg
add
pop
leave
push
and
xchg
test
jg
sub
mov
add
push
shrl
adc
jae
test
xchg
inc
das
mov
push
es
lock
sbb
lods
fisubs
repz
stc
cmp
sahf
iret
mov
lods
loopne
jmp
pop
adc
mov
or
in
fisubs
test
sbb
xchg
pop
int
test
inc
xchg
fdivr
test
and
in
cmpl
std
ret
std
les
mov
sbb
jg
dec
xor
sbb
jecxz
lock
jae
test
pop
sbbl
push
inc
nop
lea
aam
fldenv
and
pop
sub
in
mov
sub
xor
xchg
cmp
add
ret
hlt
mov
repnz
loop
lcall
push
add
add
cmp
or
pushf
pop
pop
rcl
add
jl
dec
sub
pushl
and
adc
or
cwtl
lret
arpl
dec
inc
add
xchg
sbb
add
push
out
mov
popa
jl
scas
or
add
lds
mov
xor
leave
mov
xor
bound
pop
out
in
pusha
add
add
stc
cmp
adc
sarl
and
cmp
cmp
leave
adc
sub
adc
add
shll
dec
adc
add
fldcw
sbb
sbb
or
out
push
jmp
addb
adc
lcall
test
adc
enter
fstl
popf
mov
negb
imul
sub
mov
sub
dec
jmp
add
add
shll
aas
sbb
sub
fwait
std
add
add
std
sub
mov
scas
fsubp
out
xor
inc
add
push
sub
xor
adcl
push
add
mov
xchg
out
dec
cmpsb
insb
in
dec
js
test
xchg
sbb
xchg
mov
mov
mov
out
add
sub
push
arpl
lahf
and
mov
rcll
jle
mov
push
add
repz
pop
addb
xor
lahf
dec
lret
fcmovu
popa
femms
fwait
xor
loope
loopne
or
std
sbb
sbb
pop
cmpsl
pushf
jns
loope
push
add
inc
jle
inc
add
or
ficoml
sub
cmc
int3
dec
ds
scas
cmpl
push
add
pop
push
movb
gs
cli
lds
repnz
push
movb
loop
add
les
xlat
mov
decb
fs
sarl
mov
jmp
stos
push
cltd
xchg
adc
cmp
xor
inc
data16
xchg
xor
jnp
add
fcompl
aaa
lds
add
shll
ret
arpl
push
add
add
push
mov
das
lods
jmp
imul
cmp
rolb
add
xor
out
lods
mov
fmull
dec
daa
add
inc
add
mov
jle
sub
adc
fwait
jl
mov
sub
jbe
inc
add
cmp
xchg
jb
add
mov
dec
daa
in
popf
jmp
add
mov
shl
lahf
rorl
add
sub
jmp
mov
jo
xor
and
cmp
add
testl
mov
mov
sti
fstl
lcall
xor
mov
add
dec
sub
push
idivb
dec
xchg
or
mov
movsb
push
out
sbb
pushf
lahf
add
dec
sbb
add
pusha
add
into
jmp
or
aam
pop
inc
push
mov
xlat
jno
add
ljmp
dec
xchg
cmp
mov
add
dec
inc
add
push
imul
lret
jo
mov
bound
jg
cmp
lods
jg
xchg
or
xchg
jl
and
insb
mov
add
inc
cmpsl
or
int3
das
ret
mov
sub
pushl
sbb
aas
sbb
mov
adc
mov
mov
jno
adc
mov
iret
sbb
jb
je
cmp
jo
clc
sahf
jno
int3
mov
mov
mov
lods
cmp
add
fs
fs
je
lods
stos
xor
into
cmc
scas
rcrl
bound
jge
xlat
js
dec
pop
inc
add
and
xchg
or
arpl
xchg
fs
dec
xchg
jmp
push
jmp
ret
and
mov
adc
sub
add
mov
mov
or
pop
aam
jge
add
aam
jle
xchg
out
ret
inc
ja
bound
inc
add
ljmp
sbb
add
addl
or
testl
jecxz
pop
inc
add
add
adc
test
clc
xor
hlt
jmp
mov
arpl
sbb
inc
add
nop
lret
cs
cmp
push
jg
adc
mov
mov
push
add
push
mov
insl
cltd
mov
xchg
mov
outsb
xchg
movsl
loope
lods
mov
xor
and
dec
pop
fildll
mov
rolb
rolb
imul
lret
in
and
jne
add
pop
dec
ret
cwtl
daa
movsb
addl
jg
fnstenv
xchg
dec
mov
add
mov
pop
sbb
mov
mov
dec
mov
xchg
inc
cs
xor
loopne
data16
out
adc
mov
dec
mov
outsl
cwtl
pop
jae
vminsd
leave
dec
scas
adc
push
xor
push
add
leave
push
lcall
xor
in
cmp
add
push
adc
or
jmp
xlat
ss
clc
out
bound
xor
fldcw
pop
or
add
jnp
push
clc
xor
inc
add
mov
loop
add
stos
jne
adc
bound
pusha
add
jo
fwait
mov
sbb
dec
adc
push
fdivl
push
shr
cmp
xchg
add
sub
adc
pop
aad
lods
sbb
mov
cmp
addl
je
jp
arpl
pop
xlat
mov
add
xlat
cmp
mov
mov
enter
mov
cmc
sbb
xor
aas
je
stos
sbb
xor
add
inc
inc
add
mov
xchg
in
add
lods
mov
pop
loopne
xchg
ret
mov
pop
into
inc
add
jae
xor
mov
jle
sbb
ss
push
addb
faddp
sbb
rolb
mov
loop
mov
gs
fdivrs
fisubrl
lock
add
xchg
add
leave
out
out
fists
add
jo
xor
rcrb
imul
outsl
stos
movsl
sahf
aas
bound
sbb
add
add
rcll
stos
push
mov
mov
repz
jbe
mov
mov
add
push
xchg
cmpsl
pop
jns
das
es
js
repz
into
int3
shlb
add
add
mov
clc
mov
add
inc
add
jae
add
int
mov
mulb
cmp
add
leave
xor
rolb
mov
loopne
fsubrs
pusha
add
adc
jmp
int3
ror
pop
push
outsb
faddl
add
mov
adc
or
mov
pop
es
dec
pop
push
push
add
add
inc
sbb
mov
inc
add
int3
and
das
gs
repz
push
stos
daa
push
iret
jmp
movb
mov
shlb
push
aas
addr16
mov
or
in
es
fistpl
dec
insl
mov
mov
insb
or
icebp
cmp
and
push
xchg
fistl
insl
push
rorb
scas
cltd
pop
jecxz
arpl
bound
jb
mov
sub
adc
push
sbb
int
adc
or
mov
addb
cmp
push
fnstsw
pop
mov
pop
test
xchg
out
push
lds
movsb
jae
mov
pop
addb
mov
outsb
mov
adc
dec
out
in
test
xor
addb
pop
pusha
add
hlt
dec
jo
sub
int
mov
mov
stos
push
rorl
loope
pop
clc
xchg
mov
dec
lods
sub
mov
fmull
and
pop
push
mov
aas
mov
sub
add
cmpsb
sbb
sti
mov
sbbl
adc
fiadds
gs
jp
sub
in
das
pop
adc
into
pop
loopne
stos
adc
add
dec
mov
mov
mov
sarb
add
faddl
add
and
les
jecxz
repnz
xlat
imul
add
jecxz
or
test
add
and
rolb
push
mov
pop
push
movb
cmp
test
scas
fdivp
pop
dec
js
xor
aas
fcoml
not
pop
in
mov
xlat
dec
lods
xchg
std
adcl
add
xchg
cmpsl
sar
int
add
bound
and
jle
addb
popf
cmp
subl
cmp
add
inc
addb
mov
push
cld
sub
and
les
jbe
cli
jg
in
jg
cmp
add
out
cli
les
jge
add
out
xchg
popf
mov
and
addb
add
jne
add
outsb
lcall
push
rolb
cmc
mov
ret
pop
add
gs
ljmp
add
out
fidivs
add
scas
xchg
stc
sbb
insl
jmp
loop
pop
clc
lcall
jmp
scas
or
mov
pop
pop
loopne
loope
ss
icebp
mov
daa
test
das
push
insb
xchg
jecxz
out
sub
imull
sub
movsl
mov
cwtl
fistpll
mov
addb
sbb
add
outsl
test
and
pop
lcall
add
lea
mov
push
fstpl
mov
mov
out
mov
mov
test
mov
int3
test
pop
pop
jg
rolb
mov
dec
hlt
in
mov
test
adc
add
test
adc
and
out
cli
addb
push
ret
add
or
mov
loop
test
mov
sub
arpl
cmp
mov
dec
mov
mov
add
dec
shlb
add
rolb
imul
mov
or
clc
in
mov
cmc
pop
ret
cmp
fildll
in
sti
mov
add
lods
dec
push
sahf
push
xor
mov
sub
inc
bound
mov
cli
out
lds
pop
pop
xor
js
xchg
mov
ret
in
mov
repnz
mov
add
mov
lea
repz
int3
xchg
aaa
push
add
mov
shrb
stos
aas
adc
fwait
scas
int
mov
mov
daa
mov
jl
out
push
adc
leave
arpl
jg
mov
ljmp
call
scas
adc
je
jb
fdivl
jbe
rolb
add
mov
push
dec
repz
repz
flds
mov
mov
imul
pushf
xchg
mov
mov
push
jle
js
jl
xchg
xchg
mov
add
movsb
jb
sbb
loop
fwait
xchg
jmp
sub
shld
dec
inc
lds
mov
dec
filds
jecxz
inc
test
cwtl
clc
push
add
push
notl
mov
xchg
in
xchg
pcmpeqd
in
add
mov
sbb
aad
int3
int
pop
push
mov
test
nop
cwtl
ficomps
ljmp
mul
jle
pop
add
fsubrl
je
mov
dec
loopw
repnz
mov
push
and
push
xchg
outsb
sbb
add
xchg
xchg
lds
add
inc
dec
push
mov
cmp
pop
adc
out
mov
cmp
imul
ljmp
cmp
out
xor
pop
xchg
mov
idiv
sbb
xorl
fldt
clc
and
jno
int3
cmp
mov
add
ljmp
mov
cmp
jne
pusha
add
jle
jle
test
in
shll
out
dec
js
imul
add
and
out
xor
add
loop
rolb
xchg
lock
dec
adc
mov
mov
stc
pop
lahf
mov
loop
fnstenv
add
andl
pop
push
adc
mov
dec
fadd
add
nop
cli
repz
adc
jnp
sbb
shlb
sbb
inc
add
sbb
icebp
mov
push
sbb
clc
mov
sbb
loopne
ret
shrb
test
movb
cli
imul
push
dec
cmp
fildl
or
loop
mov
pop
test
add
adc
cwtl
movsl
xor
jecxz
inc
mov
out
in
test
xchg
mov
dec
fninit
mov
cmp
popa
stc
les
stc
push
jae
add
dec
push
xchg
int3
mov
dec
jmp
inc
add
scas
mov
push
sub
mov
out
inc
test
add
inc
hlt
testb
push
scas
repnz
xchg
lahf
adc
fstps
sub
sub
push
ficoml
pop
dec
dec
mov
enterw
lret
sub
sti
cltd
lock
xor
pusha
add
test
sub
add
and
sarl
icebp
xor
push
iret
dec
in
movsl
push
jae
xchg
scas
and
jp
sbb
add
stc
dec
dec
mov
add
sti
lock
fnsave
add
sub
test
mov
jbe
les
or
test
push
add
test
add
notb
or
xchg
shrl
adc
dec
repz
insb
pop
incl
adc
mov
pop
push
int3
les
push
call
addr16
cs
fadd
add
ss
jbe
mov
add
jle
add
mov
jae
test
mov
sub
push
mov
mov
add
scas
dec
repnz
mov
inc
cmp
add
std
hlt
cld
mov
dec
pusha
add
ja
mov
and
add
jle
cmp
mov
imul
outsl
adc
pop
cmp
push
xchg
test
sbb
fcmovne
mov
and
addr16
or
out
out
and
pop
rolb
cmpsb
cmpsb
call
dec
subl
lds
pusha
add
cwtl
imul
adc
clc
in
daa
xor
rcrl
add
out
mov
add
and
jo
dec
dec
inc
dec
iret
inc
add
add
js
mov
mov
out
shlb
dec
js
add
shlb
ret
addb
aad
iret
mull
jb
or
xchg
pop
lds
add
jg
mov
sub
fsub
in
scas
jnp
icebp
and
sbb
pop
ss
mov
jo
jb
divb
call
jnp
sub
int3
gs
add
nop
dec
add
jns
in
mov
jno
ljmp
rolb
das
test
mov
xchg
pushf
es
and
jecxz
sbb
xchg
push
jle
lcall
xchg
das
mov
test
int3
mov
xor
icebp
loop
add
pushf
mov
xor
fsts
popf
cmc
in
xchg
xor
divl
mov
jecxz
push
aaa
sub
add
sbb
push
hlt
stos
popf
lret
sbb
add
mov
jle
push
xlat
aad
mov
mov
sub
dec
lretw
mov
pop
stos
les
into
adc
cmp
xchg
push
sahf
repz
lock
dec
sub
inc
add
mov
mov
xchg
arpl
add
add
pop
jno
into
pop
sub
jne
iret
movsb
in
jp
mov
add
and
bound
sub
ds
imul
repz
push
ret
sti
or
xchg
xchg
arpl
jae
pop
movsl
add
jge
mov
es
adc
sbb
cmp
adc
pop
mov
add
mov
pop
addr16
aas
mov
movsl
xor
lea
lods
mov
jno
les
jnp
jmp
sub
jle
sbb
xor
movb
in
push
lea
add
pop
mov
lahf
push
call
rcr
xor
adc
lret
call
push
mov
xchg
stos
stos
adc
pop
mov
xchg
xchg
test
lret
add
and
jbe
xorl
push
add
out
mov
xchg
lmsw
and
xor
adc
add
testl
das
enter
imul
leave
aaa
ret
mov
jge
fmull
jb
jmp
shlb
add
fiadds
add
add
add
call
stos
jns
sub
aad
sbb
xchg
addb
repnz
mov
mov
and
out
dec
push
mov
mov
addr16
sahf
adc
mov
daa
daa
jecxz
jnp
pop
fidivl
lret
nop
mov
frstor
clc
mov
jbe
push
leave
fwait
hlt
sbb
ds
mov
add
fstl
add
jae
in
push
sub
mov
add
pop
cmp
push
aas
cmpsb
cs
inc
add
addb
add
scas
xchg
and
les
cltd
mov
add
mov
xchg
mov
loopne
sub
add
inc
add
test
in
icebp
pusha
add
dec
mov
lcall
inc
add
bound
fcompl
xchg
dec
push
pop
addr16
add
adc
daa
cmp
mov
pop
push
push
dec
adc
mov
jae
add
push
xor
xor
cmp
stc
pop
les
repnz
cs
add
lret
mov
test
lret
mov
xchg
pop
mov
into
inc
add
ret
iret
sbb
test
mov
enter
sti
mov
add
pop
mov
xchg
orl
pop
mov
aam
push
in
add
cltd
xchg
mov
pop
lret
popl
cmpl
fidivl
enter
add
adc
fidivl
fisttpll
cli
imul
xchg
int3
stc
cmp
loopne
inc
add
cmpsb
xchg
xchg
cmpsb
fdivrl
pusha
add
rcll
mov
push
popf
jmp
addb
lcall
popf
inc
sbb
ljmp
mov
movsb
mov
sub
mov
stos
add
arpl
sbb
xor
pop
mov
xor
pusha
add
ja
ret
cmp
sub
je
inc
push
out
add
push
mov
add
add
faddl
sub
sbb
test
sbb
mov
out
jno
mull
or
and
sahf
jle
fbld
cmp
mov
mov
xor
je
nop
fs
cmp
xchg
add
sub
lea
sub
pop
cs
cmpsl
lods
mov
add
cld
aad
adc
sbb
adc
mov
fildll
out
cmp
insl
xor
call
dec
push
mov
add
add
add
cmp
faddl
sbb
pusha
add
into
loopne
lods
notl
adc
xchg
push
sbb
gs
mov
push
cmp
push
jge
mov
ljmp
sbb
repnz
mov
mov
dec
sbb
test
pop
adc
xchg
pop
mov
add
xor
idivb
pop
jmp
movb
adc
dec
pop
in
in
jno
sbb
jns
add
int
lcall
mov
scas
dec
inc
add
divl
dec
std
cltd
dec
stos
and
shll
ss
push
add
sub
pop
mov
jge
repnz
das
push
jecxz
icebp
ja
mov
pop
dec
add
push
sbb
rorb
mov
dec
xchg
sbb
pop
pop
adc
fwait
icebp
ror
push
fidivrl
jnp
lahf
sub
mov
mov
aad
cmp
add
sarl
stc
std
add
lock
inc
add
movsb
or
or
pushf
xor
and
lock
fiadds
repz
hlt
inc
inc
add
jmp
dec
adc
sbb
and
lods
add
mov
addb
dec
push
movsb
cmp
adc
push
sbb
cmc
cltd
push
test
push
mov
adc
add
push
inc
add
push
mov
inc
add
out
add
or
xchg
test
lds
mov
repz
jns
add
dec
mov
in
fwait
xchg
pushf
xchg
xchg
les
pop
addb
in
cmpsl
mov
cmp
stc
dec
inc
add
rorb
pushf
fistps
aam
push
push
jne
mov
movsl
orl
inc
pop
sti
sub
cmp
jne
mov
addr16
push
mov
iret
sbb
inc
iret
adc
jnp
sahf
bound
movsb
mov
adc
sub
add
loope
dec
pop
repnz
push
lret
dec
pop
xchg
gs
lcall
pop
xchg
sbb
add
hlt
data16
add
pop
bound
adc
push
mov
hlt
cs
repz
test
imul
add
adc
xchg
jecxz
cmp
inc
arpl
repnz
fs
mov
cmpl
lods
aaa
dec
lods
push
pop
daa
mov
ret
inc
ffreep
add
jns
cmp
rcl
sahf
xchg
je
bound
mov
add
cmpsb
or
pop
xor
fucomip
fs
iret
mov
gs
loope
out
mov
add
mov
add
xchg
daa
sbb
mov
test
jg
mov
mov
lods
adc
icebp
mov
add
popf
push
jae
and
cwtl
dec
pop
jp
add
dec
aam
aad
outsl
mov
push
addb
xchg
repnz
das
xchg
mov
outsl
cmp
add
mov
adc
aaa
add
cmp
and
out
inc
add
mov
add
xchg
xchg
jecxz
mov
nop
jge
pusha
add
xor
repnz
add
jb
cmp
ds
out
dec
push
dec
and
dec
popa
addr16
dec
not
shl
cmpsb
cld
cmp
and
fsubrl
xchg
hlt
push
dec
sbb
add
outsb
pop
pop
mov
add
cld
cmpsl
dec
inc
rclb
enter
xchg
ja
scas
popf
rolb
cmp
mov
psrad
aas
ret
xor
inc
add
mov
cli
cld
inc
add
pop
xlat
cld
shr
or
test
inc
add
inc
add
add
cmp
stos
jae
pusha
add
push
aas
rcll
pop
ret
push
aad
insb
fsubs
pusha
add
popf
outsb
pop
test
sbb
add
in
push
xor
xchg
adc
push
lahf
icebp
mov
or
addb
mov
icebp
cs
xchg
xchg
mov
adc
shll
hlt
div
jmp
push
test
les
mov
rcrb
sbb
sub
mov
scas
sahf
loope
xchg
and
insl
addb
lds
push
aad
inc
mov
mov
je
rorl
and
push
daa
cmp
mov
in
add
sub
add
enter
ret
ret
movb
xchg
jbe
inc
add
cmp
mov
xchg
mov
add
pop
push
add
mov
mov
cmc
jmp
adc
mov
mov
pop
xchg
adc
test
pop
or
testb
insb
je
inc
xor
mov
das
rcrl
lahf
mov
sub
lock
xor
push
add
and
or
inc
add
shl
test
and
cld
add
mov
cmp
mov
cmp
pop
push
pop
dec
cmp
add
and
loop
mov
leave
lret
add
lock
sub
into
in
sub
ficomps
lahf
xchg
mov
fildl
js
adc
or
repnz
xor
daa
mov
sbb
lea
out
and
sbb
insb
dec
fwait
bound
jmp
scas
lret
sbb
loope
sub
jp
cltd
lods
inc
cmp
repnz
jp
cmp
movsl
inc
add
add
mov
fsubrl
jp
mov
movsl
lock
lock
dec
jl
vpmacsdd
enter
clc
lock
movsbl
lock
xchg
insb
aas
dec
outsb
mov
and
test
cld
rcrb
les
mov
andl
fistl
mov
jb
cmpsb
add
cmp
cmp
insb
out
add
or
add
loopne
mov
mov
sahf
jp
pop
push
insb
imul
sub
nop
loopne
stos
scas
jmp
les
inc
sbb
mov
add
sub
cli
xchg
jae
adc
repnz
dec
cmpsb
sub
inc
add
lret
mov
pop
mov
imul
aam
mov
sub
fimull
out
jo
cmp
pusha
add
and
add
mov
and
xor
aaa
mov
push
add
xor
lods
pushl
push
cmp
fwait
aam
inc
add
add
or
fsubs
add
jmp
lods
xchg
test
and
outsb
stos
shlb
sub
enter
push
lahf
mov
jle
add
add
mov
mov
add
jnp
dec
out
shl
sbb
fs
lea
mov
ret
jae
mov
sub
addr16
cmp
lock
bound
insb
or
adc
add
mov
mov
inc
shrb
pop
add
rclb
hlt
int
insb
test
sub
pop
sti
mov
pop
jp
imul
push
cmp
add
inc
add
add
add
add
insl
test
std
fimuls
inc
add
out
loopne
enter
jmp
pusha
add
xchg
fdivrl
ret
mov
jae
ret
xor
sub
sub
jmp
jle
out
adc
jg
icebp
das
mov
es
xor
cmp
inc
sbb
xlat
outsb
inc
add
add
movb
mov
add
add
ds
lock
out
and
fldl
add
and
js
aas
ficompl
pop
pop
dec
xor
fucomp
insb
sahf
push
iret
loopne
jo
pop
daa
push
add
pop
leave
mov
js
xor
add
push
mov
fisubl
push
in
cli
or
add
or
repnz
and
rcr
mov
mov
mov
mov
ret
je
and
insb
wbinvd
inc
cmpsl
cmpsb
addr16
mov
jne
add
jnp
mov
mov
clc
outsb
cmc
or
dec
xchg
or
push
divb
divb
mov
lret
icebp
jp
loopne
popf
ror
outsl
in
stos
xor
pop
and
jge
mov
fs
dec
test
loope
loopne
out
repnz
xor
push
mov
push
xor
popf
cmc
std
mov
jmp
adc
fmul
lret
mov
add
mov
bound
lea
add
add
mov
cmp
xchg
pop
cmp
push
inc
cmp
push
cmpsl
ds
sbb
imul
cmp
push
or
and
in
pop
in
inc
add
pusha
add
add
stc
pushf
addb
in
cwtl
dec
daa
xchg
repnz
mov
into
or
adc
and
jae
pop
xchg
mov
outsl
int
ret
xchg
sub
jmp
mov
dec
or
rolb
inc
add
movsl
fldt
add
pop
in
fst
or
clc
incb
add
fimuls
or
sbb
cmp
add
add
mov
cmp
iret
hlt
adc
adc
add
sbb
dec
shl
les
push
popa
adc
pushf
cmp
fdivr
cmpl
ja
adc
je
pop
out
dec
xor
mov
mov
mov
rcr
adc
lret
mov
lock
sub
out
add
pop
int3
cmc
mov
lahf
sarl
cmp
push
out
mov
inc
mov
push
movsl
sub
addb
addb
adc
push
add
mov
divb
mov
test
scas
pop
dec
rolb
shrl
aas
xchg
ret
sti
add
add
out
daa
arpl
push
add
enterw
jmp
lahf
push
push
add
cmpl
loopne
mov
sub
push
add
pop
mov
pop
cmp
data16
pop
bnd
femms
decb
dec
dec
mov
and
fs
loop
int3
movsb
mov
orl
inc
in
out
clc
sahf
mov
jmp
repz
xchg
add
jg
gs
jbe
sub
aas
sub
push
call
shll
or
clc
test
xchg
xchg
std
mov
and
mov
clc
lods
out
fsubp
aas
ja
jb
mov
mov
pop
xchg
imul
add
fisubl
and
enter
jmp
mov
push
call
lret
cwtl
adc
scas
and
gs
mov
push
xor
adc
lods
inc
add
sub
lret
xchg
push
fistpll
dec
add
and
ret
call
mov
sub
leave
push
cmc
shrl
testb
mov
pop
cs
leave
xchg
dec
addb
clc
lea
mov
mov
xchg
mov
mov
fs
fldl
inc
xor
test
rclb
inc
aad
stc
pop
enter
or
cmp
daa
rcll
enter
sarl
addb
imul
cwtl
es
lret
add
fmuls
iret
pop
pop
ror
insb
jg
out
jo
sub
adc
addr16
mov
add
in
mov
pop
jg
dec
cwtl
test
mov
shlb
push
fdivs
dec
pop
les
jmp
fcompl
jne
lahf
imul
inc
inc
add
rorb
ret
aam
jl
scas
push
xchg
inc
inc
fs
sbbl
sbb
jbe
xchg
adc
and
inc
add
xchg
sbb
mov
test
cmpsb
loopne
dec
dec
xchg
add
stos
jle
and
mov
add
sub
jb
loopne
mov
fldenv
arpl
push
xchg
lret
sub
xchg
jo
shrb
xlat
sbb
out
add
adc
add
add
lds
pop
addl
aam
daa
mov
in
divb
ja
add
mov
push
xor
jbe
and
adc
jl
enter
pop
sahf
jo
out
sbb
sub
orl
mov
cmpsl
lret
pop
cmp
sbb
add
inc
add
jno
mov
jg
leave
add
push
jno
fisubs
jge
cld
scas
or
add
icebp
pop
xchg
inc
rcrb
add
iret
cmp
rclb
add
rorl
cs
cmpsb
ret
sub
cmc
sub
lods
cmpsb
mov
jns
repz
xor
scas
sarb
push
scas
jecxz
push
push
pop
hlt
outsb
fistl
mov
scas
sbb
mov
roll
pushf
loope
and
sub
mov
add
cmpsl
jno
test
add
sub
rolb
xor
fcmovnb
filds
ljmp
cmp
jge
sub
orl
test
jb
or
mov
and
leave
push
and
ja
lods
mov
insl
or
ret
sti
inc
add
push
ss
das
xchg
call
add
sarb
in
inc
enter
stc
xor
int3
mov
dec
cmp
insl
hlt
dec
outsl
add
cmp
pushf
inc
push
lahf
cmp
fcompl
mov
jecxz
push
addb
jo
add
push
and
xchg
cmp
into
rolb
bswap
int3
adc
add
cmp
xchg
and
lods
mov
gs
cmc
stos
and
in
or
out
test
add
and
xchg
mov
add
or
and
inc
add
lods
pushf
decl
imul
rorl
add
inc
repnz
daa
loop
popf
lds
xor
xchg
sbb
mov
sbb
int
or
arpl
push
sub
aad
mov
mov
fistps
imul
or
fs
addb
add
ds
add
inc
test
std
cmc
lret
inc
add
xor
mov
push
mov
mov
les
push
mov
xor
js
sti
push
add
movsl
sti
pop
dec
sub
add
fsubs
add
rolb
add
cltd
inc
js
idivb
aaa
mov
xchg
push
lcall
adc
pushf
mov
fadd
jo
jbe
and
cmpsl
shll
test
pop
jae
add
pushf
adc
add
xchg
cmp
data16
add
jl
out
push
pop
xchg
stos
inc
sub
push
cltd
sub
pop
xchg
cmp
dec
push
icebp
mov
jmp
push
ret
stos
sahf
ljmp
dec
test
fidivl
pop
repnz
push
sbb
cmpsl
push
int
or
cld
inc
cmpsb
popa
push
lods
lods
xchg
stc
fdivl
push
inc
add
lock
push
lret
mov
add
add
add
add
push
xor
mov
sarb
loope
add
pusha
add
jg
addb
sbb
push
pop
cmp
jae
aaa
lret
add
std
lret
aas
imul
loopne
fldenv
jnp
std
dec
sbb
jecxz
dec
loop
add
add
push
test
cltd
imul
pop
daa
bound
pushf
cmp
popa
int3
inc
add
sbb
insl
cmp
mov
outsb
mov
push
lret
xor
dec
dec
lea
inc
sub
shrl
push
repz
xchg
cmpsb
ror
clc
xor
sub
daa
ja
nop
mov
fisttps
and
pop
jmp
inc
inc
add
add
push
mov
adc
xchg
jno
sti
outsl
jge
loop
pushl
add
fstpt
nopl
add
loopne
dec
dec
cmp
or
mov
sti
jne
jg
adc
ljmp
jle
add
and
jae
out
push
pop
mov
insl
jo
adc
pop
aam
popa
xor
jl
sbb
add
mov
adc
das
mov
stos
sub
sub
les
mov
mov
mov
adc
mov
xchg
test
in
scas
jb
add
pusha
add
mov
cld
dec
aaa
lds
bound
rolb
movsl
loop
add
xor
add
aaa
cmp
cmpsb
jnp
pop
sub
inc
add
out
push
add
stc
cli
nop
jle,pt
dec
and
sub
lret
fwait
pushf
inc
ret
faddl
movb
mov
jecxz
aad
mov
xor
add
jno
push
repnz
dec
push
imul
into
push
mov
and
mov
dec
out
add
shlb
aam
add
sbb
jae
jle
cmpl
mov
movsl
jl
push
in
out
cmp
loope
sub
xor
iret
xchg
mov
add
movsl
adc
add
inc
pushf
sub
or
sbb
outsb
fisubrs
jp
pop
mov
mov
outsb
push
add
push
adc
cmp
xor
inc
scas
filds
add
test
or
mov
sub
imul
jmp
test
cmp
clc
repz
imul
add
add
xchg
inc
add
dec
in
cmp
out
jbe
add
stos
fistpll
insb
cmp
sub
cmp
pop
int3
shll
xchg
sbbl
test
sbb
cmpsl
das
nop
js
add
ss
cld
mov
add
add
cmp
jp
imul
inc
stos
out
hlt
adc
hlt
xor
xchg
sub
jle
jnp
pop
loop
push
popf
hlt
mov
pop
xchg
pop
loop
inc
sbb
add
fcmovnbe
loope
jmp
xor
repnz
add
pushf
or
mov
mov
imul
push
add
jl
addb
sub
cmp
add
push
mov
enter
add
add
dec
in
add
addb
repnz
xor
into
icebp
outsl
jo
inc
stos
mov
fistl
les
push
xchg
test
add
pop
or
ja
mov
and
xchg
scas
and
test
dec
and
mull
jne
add
mov
fnstsw
in
mov
scas
xor
add
addb
les
and
out
aad
push
jne
sub
bound
mov
push
in
js
mov
or
fstps
test
bound
xchg
sbb
incl
aas
add
in
adc
mov
xor
and
pop
jmp
push
jb
lahf
mov
idiv
sbb
mov
and
xchg
jge
push
mov
test
push
int
in
sub
cmp
and
sbb
jle
scas
nop
pop
ret
mov
mov
ds
mov
dec
lret
push
ret
je
adc
movsl
inc
jne
or
in
aaa
adc
cwtl
inc
add
mov
xor
mov
lret
pop
pop
nop
ss
sahf
jo
add
cmp
add
add
cmp
or
in
xchg
rcll
push
rcll
push
xor
add
popf
test
dec
adc
lahf
inc
jne
add
xchg
test
add
rol
push
or
xchg
cmp
fildl
test
es
pop
loopne
add
fs
aaa
out
jnp
ljmp
xor
xchg
repz
ss
incl
mov
xacquire
push
fsubs
jg
pop
adc
jb
or
test
mov
stos
inc
add
mov
pusha
add
stos
fldcw
imul
in
dec
insl
std
pop
fwait
sti
push
pop
fldlg2
xchg
dec
ret
stc
xor
ja
in
negl
push
nop
lret
ret
les
es
stc
add
cwtl
cmp
imul
xor
xchg
bound
movb
stos
and
popa
test
lcall
mov
mov
pop
test
les
sub
sub
adc
push
add
fildll
test
stos
pop
inc
add
push
loop
mov
addb
and
lds
add
pop
cwtl
push
sbb
negl
push
cmpsb
add
mov
add
pop
icebp
cmp
and
mov
and
fdivrs
and
pop
shr
lahf
ja
add
add
adc
arpl
or
repnz
js
and
mov
ret
push
push
add
jge
jne
cwtl
sbb
pop
popa
mov
ja
push
adc
cmpl
cmp
aas
push
add
or
divb
divb
pop
shrl
sbb
das
fsubr
push
sub
jg
add
adc
sub
ret
mov
mov
jl
add
pop
and
mov
or
cmp
rolb
and
cli
mov
and
test
jge
push
add
xchg
push
sahf
sbb
std
xor
stos
test
sbb
pop
jne
sbb
pusha
add
loope
dec
fdivrl
adc
xchg
ja
out
sbb
cmpsb
mov
sbb
mov
das
shll
pushf
data16
decl
ljmp
adc
or
cmp
and
in
icebp
scas
sub
xchg
in
sbb
push
push
sub
rcrb
xor
dec
mov
and
xchg
add
add
in
inc
add
out
sub
add
fstpt
aas
sub
pop
inc
add
mov
pop
sub
addr16
mov
jmp
lahf
cmc
xlat
loopne
adc
cmc
daa
xchg
mov
push
dec
xor
and
ja
mov
dec
and
test
int3
sbb
xlat
pop
mov
jae
jecxz
lds
push
mov
enter
es
jecxz
inc
add
xor
in
pop
ret
je
mov
add
xchg
pop
ss
pop
xchg
addl
insb
cmp
pop
mov
push
pop
add
lea
in
adc
cmp
rolb
cmp
jle
ja
push
clts
add
bound
fldl
mov
cmp
sbb
add
out
sbb
adc
jnp
mov
imul
sti
das
add
sub
xor
fnstenv
pop
add
lahf
xchg
es
mov
xor
jo
iret
fcoml
out
jo
aad
addb
mov
dec
icebp
add
movsb
dec
and
cmp
sub
xor
inc
add
add
idivb
bound
int
lock
push
cmc
sub
js
or
int
add
adc
xor
sbb
mov
xor
inc
xchg
pop
xlat
push
lods
scas
xchg
sbb
mov
lea
pop
mov
sbb
sbb
mov
shlb
or
xchg
imul
pop
aas
pusha
add
add
enter
leave
cmp
xor
dec
test
ljmp
pop
lret
xchg
cs
dec
sti
add
pop
pop
repnz
or
mov
add
mov
mov
out
jge
out
mov
sub
mov
push
cmc
ljmp
cmp
clc
lods
push
xchg
mov
fcmovnbe
sub
inc
test
jnp,pn
xchg
ljmp
mov
testb
and
hlt
shrl
push
add
push
push
arpl
lret
repnz
or
pusha
add
das
and
cmp
enter
add
xchg
add
das
ja
mov
fldl
stos
and
sti
sub
xchg
les
out
and
xlat
mov
add
dec
xor
dec
movb
jbe
pop
push
faddl
add
mov
es
push
aas
incl
movb
sahf
or
sbb
clc
xchg
and
scas
jmp
pop
xchg
std
mov
add
sbb
add
add
pop
movb
movb
iret
ficomps
mov
and
xor
xor
jmp
add
jmp
xchg
shrb
lods
mov
pop
cmp
add
ljmp
cmp
std
jle
out
fldt
cmp
pop
andl
mov
cmp
test
sub
dec
addl
bound
jo
add
adc
mov
into
mov
shrb
add
mov
pop
push
iret
out
pop
int3
vmwrite
adc
xchg
je
ficoml
pop
in
je
dec
das
addb
movb
cmc
pop
pushf
and
jae
add
add
inc
add
int3
jl
stos
sbb
pop
cld
insl
fstps
repnz
cltd
push
add
mov
and
add
sbbl
inc
add
xchg
xor
dec
xlat
cmpsl
into
mov
stos
leave
dec
push
rcll
xlat
addb
jae
addb
fwait
or
fadds
add
ret
push
movb
imul
or
inc
add
and
adc
mov
sarl
xlat
mov
mov
stos
mov
test
add
mov
ss
shl
mov
fwait
insb
bnd
xor
movb
xor
xchg
stos
and
out
stc
mov
js
aad
mov
dec
mov
cwtl
je
adc
bound
notl
push
or
imul
and
gs
sti
sbb
xchg
imul
jne
inc
add
jl
mov
push
inc
xor
xlat
outsb
dec
stos
out
add
mov
aad
enter
inc
add
push
mov
dec
add
fsubr
je
xor
aas
add
fwait
mov
out
pop
ljmp
rcl
xor
add
add
jne
sub
outsl
fistpll
push
pop
addb
rcl
mov
and
mov
xor
sub
mov
icebp
xor
mov
inc
ud1
cmp
scas
rcll
dec
stc
adc
adc
xor
xor
call
addr16
jl
sbb
add
inc
movsl
dec
enter
inc
in
shll
sub
jne
fdivs
add
enter
js
cwtl
mov
shrl
mov
fiadds
mov
icebp
notb
lds
or
in
lea
jg
shl
lock
fdivl
mov
rcrb
fwait
cmp
add
push
in
loopne
add
loope
sub
dec
jp
fisttps
arpl
add
add
ss
loop
sub
imul
add
cmpl
pushf
icebp
lock
int3
pushf
incl
cs
jg
sbbl
adc
mov
scas
dec
loopne
pop
pop
addb
stos
mov
cmp
mov
insb
sub
jns
int
iret
sub
popf
xor
xchg
push
push
shrb
and
filds
into
stos
lods
xchg
in
inc
add
rcll
lret
mov
je
addb
mov
out
jecxz
or
mov
xchg
inc
fildll
ds
add
mov
and
add
gs
ret
sub
and
pushf
jne
iret
inc
add
popa
mov
cli
in
jno
dec
mov
jnp
cltd
dec
gs
lcall
jg
sub
cmp
pop
rclb
int3
inc
add
inc
sbb
mov
cs
push
add
sub
js
stos
into
test
jne
jo
dec
out
shlb
mov
and
pop
out
stos
fwait
xchg
push
fs
sbb
enter
push
and
loop
cld
cltd
rcll
inc
dec
push
ret
sbb
add
cmp
add
adc
push
ret
rcrl
xchg
add
xchg
add
scas
outsl
vcmpss
jb
nop
sti
mov
pop
test
outsl
je
push
jnp
ljmp
fwait
dec
pop
ret
in
cmp
mov
dec
mov
inc
scas
sub
add
mov
lock
leave
and
negb
xchg
and
inc
ss
dec
insb
in
ds
push
add
push
jnp
adc
dec
lods
cmp
into
jb
pop
mov
lods
je
mov
adc
stos
aad
lea
mov
lods
popa
cmpsb
and
and
test
mov
inc
test
or
or
cmp
movsb
mov
scas
scas
mov
test
lret
rol
pushf
mov
add
xor
imul
sub
pop
decb
cld
jge
sbb
test
aas
nop
lods
xlat
lret
clc
inc
add
sbb
ja
imul
fmull
lods
addl
movsb
lret
sarb
imul
cmp
push
add
sahf
testl
jmp
sub
and
mov
xor
ret
leave
out
stos
mov
mov
adc
leave
sub
jl
jle
fninit
sbb
cmp
add
ss
aam
push
mov
cmp
push
iret
pop
mov
push
out
pop
dec
or
mov
push
pause
ds
mov
sub
dec
popf
xor
mov
xchg
mov
xlat
dec
mov
aad
arpl
add
or
sub
fistpl
and
in
out
lahf
cmpsb
sbb
add
inc
add
xchg
fistpll
xor
ja
int
push
push
lds
aaa
jo
push
push
arpl
movsb
std
adc
mov
add
mov
insl
push
mov
jl
add
sbb
mov
les
movsb
inc
fmull
adc
rorl
aaa
stos
cld
imul
add
push
jmp
lret
stos
repnz
mov
add
lret
movsb
filds
add
add
mov
das
mov
imul
rep
out
add
inc
add
sub
mov
mov
loopne
cli
mov
pop
pusha
add
mov
add
imul
xchg
push
fwait
mov
cmp
aad
cmp
mov
xor
fnstsw
mov
into
repnz
or
sub
adc
mov
dec
jb
sub
rolb
pop
inc
add
fmul
adc
pop
sbb
clc
cmp
je
lock
push
sbb
cs
mov
add
inc
fmul
call
mov
add
outsb
lcall
cmp
fwait
push
addr16
mov
add
push
sbb
addb
loope
daa
lcall
fs
jne
fmull
rolb
rclb
in
xchg
mov
or
addb
cmp
push
jno
divl
add
sub
sub
push
aas
jno
push
xchg
push
enter
jecxz
inc
add
sub
pop
lret
call
outsb
loope
daa
mov
dec
pop
fwait
inc
add
mov
addb
xor
pop
xchg
out
add
xchg
stos
dec
jb
pop
popa
xchg
je
aam
inc
jge
add
and
add
sbb
add
dec
or
inc
add
in
add
add
add
fists
dec
or
cltd
int3
addb
add
lods
inc
and
and
push
std
ja
mov
cmp
mov
add
int
mov
cmp
test
cltd
divl
ja
xor
dec
stos
jne
add
loopne
add
scas
mov
add
mov
push
xor
jae
insl
inc
add
daa
cmp
mov
mov
push
into
in
mov
in
cltd
shrl
jmp
nop
mov
fdivr
xchg
movsl
push
push
cmp
add
repnz
or
enter
iret
out
fcoms
fldl
xor
mov
add
bound
cmpsb
nop
nop
push
add
jecxz
adc
popf
sub
or
pop
jecxz
cmp
sbb
and
mov
loopne
ja
not
adc
lea
sub
fneni(8087
div
out
xchg
push
ljmp
xchg
push
out
or
sbb
jecxz
arpl
jns
add
push
frstor
mov
xchg
out
jo
outsb
mov
and
xchg
enter
push
shlb
cmp
adc
sub
add
cmc
dec
mov
test
ds
cmp
pop
xchg
gs
movsl
jmp
sub
dec
ds
lods
cli
sbb
imul
sbb
je
fbstp
inc
add
pop
test
pusha
add
bound
shrb
