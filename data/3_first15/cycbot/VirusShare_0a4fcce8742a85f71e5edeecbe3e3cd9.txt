incl
incl
add
mov
add
dec
add
mov
lcall
adc
add
shlb
adc
cmp
rol
pushl
inc
add
sar
add
jmp
mov
push
rolb
incl
decl
pushl
or
add
cmp
pushl
mov
lcall
ljmp
rolb
incl
cmp
sarb
rol
and
jbe
gs
popl
jmp
adc
nop
dec
sar
mov
mov
xchg
fmuls
out
ljmp
call
aaa
add
jnp
dec
add
lret
call
mov
incl
incl
fdivr
ljmp
incl
mov
addb
add
adc
incl
add
inc
imul
mov
add
add
jmp
call
lret
add
pusha
pop
jnp
xchg
fdivr
add
loopne
pushl
lods
add
inc
push
add
jp
jo
adc
mov
cld
incl
cmp
jge
or
incl
dec
adc
lcall
enter
incl
decl
jmp
loopne
pushl
add
pushl
clc
push
add
loopne
jmp
add
mov
incl
sbb
sar
pop
add
mov
js
mov
mov
or
or
and
sbb
movsb
ljmp
dec
mov
incl
pop
cmpsl
add
flds
xor
decl
incl
jge
incl
jo
add
ljmp
incl
test
push
add
sbb
add
dec
sub
push
xor
add
ljmp
add
fdivs
add
or
sar
call
sbb
push
mov
add
mov
add
mov
incl
adcb
rclb
incl
incl
push
inc
inc
cmp
incl
add
ljmp
mov
mov
lcall
inc
dec
incl
mov
mov
add
call
incl
mov
jmp
incl
add
mov
dec
dec
add
enter
lock
decl
lock
push
jmp
fsts
inc
mov
cwtl
inc
xchg
ljmp
cmp
jmp
push
sar
inc
call
shl
addb
inc
inc
push
jmp
ret
shlb
out
add
fmuls
pushl
mov
add
mov
add
xor
add
enter
cmp
inc
decl
add
incl
dec
or
pushl
dec
add
test
inc
incl
call
cmp
lcall
and
lcall
sub
pushl
incl
sub
ljmp
mov
in
dec
sub
jmp
or
clc
inc
sbb
call
add
cmp
sbb
cwtl
rcrb
incl
rclb
clc
lcall
xor
add
incl
incl
ret
add
stos
cmpb
outsb
add
sub
add
pop
jnp
and
incl
ljmp
fdivr
icebp
fsub
ljmp
sub
cmp
or
ud0
ljmp
add
js
add
shlb
in
clc
sub
dec
loopne
jmp
mov
add
ljmp
repnz
jp
jmp
jo
mov
cwtl
incl
jmp
add
decl
add
add
clc
lock
jmp
add
jmp
adc
inc
or
inc
add
mov
incl
incl
jp
call
call
cmp
add
incl
jmp
sub
or
incl
mov
mov
rcrb
xchg
inc
or
inc
add
fiadds
and
add
push
ljmp
orb
sub
adcb
stos
inc
jmp
cmp
lcall
add
ljmp
sar
aad
lret
orb
xor
subb
call
dec
jp
sub
cwtl
inc
rcrb
incl
incl
mov
sbb
incl
jmp
jne
inc
inc
rolb
pushl
mov
js
pushl
jno
ljmp
js
cmp
incl
jmp
adc
push
add
pusha
dec
stc
incl
call
cmp
cmpsl
add
nop
pop
jmp
test
add
jmp
inc
pop
clc
incl
data16
shl
inc
lcall
incl
incl
decl
incl
call
cmp
addr16
add
dec
addb
add
jmp
jmp
nop
lret
xor
lahf
or
add
rcrb
add
add
add
add
inc
xor
add
js
add
sar
cmp
jo
lcall
incl
dec
lcall
call
ljmp
xchg
incl
les
enter
pop
call
add
call
jl
dec
nop
incl
inc
jmp
cmp
incl
pushl
jmp
xor
es
pop
inc
ret
pushl
xchg
lcall
data16
decl
shrb
inc
loope
incl
lods
xor
add
lcall
jmp
add
mov
out
xchg
add
incl
jl
incl
incl
or
imul
inc
mov
jmp
inc
inc
call
lock
incl
lcall
mov
jnp
addb
adc
incl
incl
dec
test
add
nop
incl
nop
dec
jmp
pop
incl
and
add
rolb
lcall
cmp
call
jo
data16
incl
cmp
cld
cmp
push
call
incl
adc
adc
pushl
incl
out
inc
incl
incl
enter
rolb
lcall
add
cmc
sar
es
or
mov
std
sbbb
add
stc
pushl
clc
add
push
cwtl
mov
add
call
incl
push
decl
call
lcall
inc
in
cld
add
pushl
outsl
add
xor
decl
nop
xchg
jmp
incl
fnstsw
incl
xchg
rorb
push
clc
jge
xchg
incl
jmp
add
clc
cmp
pop
test
add
and
add
ljmp
jge
add
pop
decl
jmp
xor
add
decl
ljmp
lock
clc
incl
call
inc
outsb
push
mov
inc
pop
adc
rclb
je
cmpsb
incl
cmp
call
dec
inc
fcmove
loopne
inc
lret
lcall
data16
ljmp
and
fdivr
add
sub
add
lcall
inc
mov
in
incl
jmp
sbb
sar
ljmp
mov
jmp
sub
add
jmp
mov
add
incl
flds
inc
add
idiv
adc
cmp
ja
adc
loopne
mov
and
out
adc
pop
cwtl
push
adcb
jb
pop
nop
or
incl
sub
mov
and
mov
or
add
mov
dec
cmp
orb
ret
inc
call
rolb
sbb
stc
test
add
add
sub
incl
test
lods
incl
and
call
xorb
add
add
nop
addb
mov
pushl
cld
cltd
ljmp
fildl
imull
jb
scas
mov
cmp
in
sub
pusha
mov
sub
add
cld
addb
adc
rcl
test
mov
sub
add
lods
mov
add
pushf
add
cmp
cmp
in
stc
push
fnclex
adc
jmp
xor
fiadds
xlat
jp
je
add
insb
mov
flds
dec
lods
into
jmp
outsb
inc
aaa
jno
stos
mov
add
loop
jne
popf
sbbl
call
sub
inc
xor
push
xor
add
imul
mov
xchg
add
fdivrl
sarb
xchg
cmpsl
in
jmp
rcll
dec
imul
fimuls
cwtl
add
xchg
addr16
add
sar
rcll
xor
or
leave
cmp
mov
fucomip
shr
pop
push
push
add
repz
inc
cmpsl
popa
pusha
divb
pop
xchg
cltd
pop
ret
pop
push
cmp
movsb
xor
jp
inc
cli
leave
push
xchg
add
xchg
mov
dec
lret
push
sub
inc
in
pusha
mov
rcrl
add
jbe
add
xchg
cmp
push
jg
dec
loope
cmpsl
cltd
aad
lea
mov
aad
inc
vpaddusb
push
xchg
jb
push
add
dec
xchg
fisubl
add
sbb
das
fstl
aas
sbb
sub
mov
jecxz
xchg
or
and
add
leave
rcll
add
push
pop
xchg
out
jmp
add
lahf
sbb
mov
pop
shr
movsb
mov
loopw
jnp
incb
add
adc
mov
aaa
push
add
jbe
dec
inc
enter
push
test
aam
mov
cmp
push
mov
dec
dec
rolb
pushf
add
fsubl
jmp
scas
enter
rol
add
jnp
add
stos
mov
push
jmp
xor
int
and
push
jne
rcr
add
cmc
xchg
addr16
or
jo
clc
or
push
sub
into
mov
lret
js
lods
cld
out
call
xlat
mov
adc
je
shrl
push
sub
stc
out
sbb
je
adc
xor
push
add
add
push
jle
iret
dec
cmp
xchg
das
inc
out
push
add
cmp
jp
lds
mov
add
test
nop
pop
lret
jmp
xor
sarl
and
add
mov
dec
imul
jns
mov
cwtl
add
push
add
mov
mov
enter
std
jle
pop
out
push
mov
mov
out
in
fnsetpm(287
mov
dec
sub
and
xor
jb
xor
jo
pop
pop
cmp
mov
dec
cmp
test
jecxz
add
jo
jmp
xor
ds
add
repnz
add
ret
stos
leave
pusha
pop
pop
rclb
xor
add
clc
mov
add
add
arpl
jge
aas
mov
mov
add
mov
add
sarl
dec
nopl
add
js
cld
addb
push
add
loope
inc
mov
mov
out
pop
mull
ja
icebp
movsl
test
inc
ja
add
rol
sub
xorps
shll
stos
icebp
cmpsb
jo
lock
jno
fdivs
mov
adc
mov
mov
ja
addb
cmp
cwtl
add
mov
pop
or
xlat
push
add
lcall
psraw
leave
cltd
cltd
jbe
push
add
mov
push
mov
mov
xchg
inc
jae
push
add
xchg
lock
xor
add
mov
stos
les
fwait
jl
sbb
nop
mov
testb
sub
out
hlt
sub
or
xor
push
add
lret
dec
adc
lock
ds
test
in
jp
push
add
mov
decl
push
add
push
mov
or
in
icebp
mov
les
push
add
popa
fimull
mov
inc
mov
jo
add
insl
push
add
mov
or
push
mov
mov
lret
mov
cwtl
add
add
lock
fcoms
cwtl
add
adc
leave
xor
add
mov
mov
rolb
mov
jne
mov
prefetchwt1
or
xor
mov
add
add
outsl
imul
sbb
push
cwtl
add
push
movb
add
jns
mov
ja
int3
enter
xchg
xor
add
dec
pop
cmp
in
pop
sub
push
sti
xor
jl
lcall
enter
add
rol
loop
inc
sub
mov
icebp
add
ror
int3
add
add
add
jns
mov
sub
jbe,pt
fsubs
jp
jle
sbb
rorb
add
in
aas
out
imul
add
adc
add
outsb
int
pop
inc
or
inc
stos
xor
add
add
xor
lds
rcrl
jne
or
lock
popa
xlat
test
movsl
or
jo
movsl
pop
cmp
cmc
mov
xchg
jae
psrad
iret
ds
adc
rorb
or
dec
dec
fs
jo
dec
cmp
add
add
pop
or
ret
and
add
sub
mov
cmp
dec
fadd
mov
mov
pop
scas
mov
push
push
cld
dec
outsb
arpl
pushf
add
jo
test
fists
dec
hlt
or
xor
xchg
pop
stc
jo
add
xor
clc
outsb
jmp
orl
movsl
std
das
dec
fldcw
add
outsl
jmp
xchg
xor
nop
add
inc
and
cltd
aad
mov
pushf
add
jp
add
sbb
and
fistl
xor
cld
inc
sub
sbb
sub
add
add
xchg
daa
xor
add
xchg
pop
daa
jb
cmp
outsl
sbb
rclb
popa
jg
test
push
sbb
shlb
xor
call
lds
mov
in
ret
lods
fwait
arpl
jb
push
jnp
add
and
jbe
movsb
mov
mov
xchg
push
pushl
pushl
sub
mov
mov
ja
inc
mov
add
xor
pop
divl
adc
shlb
dec
push
call
jl
pushl
xlat
mov
adc
pusha
jne
push
dec
mov
pushl
call
popf
xor
call
out
dec
int
push
dec
cmpsb
lret
or
nop
test
xor
popa
leave
add
adc
nop
xor
rcrb
adc
int3
inc
test
jmp
dec
jne
leave
ss
shlb
inc
xchg
loope
sarl
or
test
and
mov
sti
pusha
gs
sbb
mov
in
nop
push
call
les
stc
sbb
sbb
rcrb
fcoml
inc
notl
mov
pushl
add
cmp
pushl
sub
xchg
fidivs
pushl
pop
pop
push
pushl
xchg
call
pusha
test
xchg
push
cmp
mov
push
push
mov
jo
adc
mov
shl
cmp
mov
pop
or
jo
mov
lock
mov
popa
sbb
mov
das
cmp
gs
adc
push
jo
mov
push
mov
push
pop
cli
inc
sarl
clc
push
mov
add
lock
cltd
or
xor
cmc
dec
mov
jle
in
mov
push
rclb
xchg
push
das
inc
pushf
push
xchg
out
rolb
adc
rolb
jo
mov
lock
std
fdivrp
or
cmp
pop
xorw
cmp
les
sahf
push
sti
pusha
inc
adc
rcrb
jo
cli
in
leave
testb
sub
push
inc
push
rcrl
movsl
mov
rcrb
xor
arpl
xor
outsb
mov
jo
or
nop
arpl
jne
ss
sbb
roll
in
je
lock
xor
mov
dec
fldt
sbb
jo
scas
jne
gs
dec
pop
arpl
shlb
adc
nop
mov
test
push
std
mov
lahf
xlat
and
std
rcr
jecxz
mov
nop
ss
cwtl
std
nop
in
das
mov
out
fwait
push
sbb
jo
lret
adc
jg
dec
cmp
add
std
nop
dec
inc
push
pop
fcomps
cmp
std
sub
mov
mov
std
rcl
and
std
adc
push
std
xor
std
adc
std
adc
jmp
std
jo
mov
cs
repz
adc
std
nop
xchg
je
add
fdivr
push
cmp
or
in
std
xor
jo
popa
mov
push
or
push
or
xor
std
jo
std
mov
insl
es
stos
mov
xor
xor
sbb
js
stos
in
xchg
std
shlb
cmpsb
mov
xor
ss
lea
sub
std
lock
jp
sub
daa
jo
std
xor
cmp
outsl
gs
lods
xchg
std
mov
cmp
add
xor
jns
jp
cmp
bound
mov
idiv
daa
leave
in
cmp
into
rclb
testl
push
jge
jge
mov
enter
pushf
cld
shlb
mov
add
push
jne
xor
xchg
ss
sbb
pop
mov
mov
add
sti
ljmp
xor
lds
cld
push
add
mov
cli
mov
pop
xchg
cld
nop
test
xor
aam
mov
out
cld
push
cmp
loop
dec
add
nop
pop
push
iret
fs
mov
jmp
cld
adc
cmpsl
imul
cld
xor
inc
aas
test
rclb
loopne
cmp
js
cld
jo
sub
sbb
add
adc
lret
push
cwtl
cld
push
inc
jnp
jae
add
xor
or
lock
pushf
cld
adc
mov
mov
fldpi
and
imul
jmp
cld
push
les
push
cld
mov
pop
or
adc
xchg
cld
push
sbbl
and
mov
aam
cld
push
or
cmp
push
dec
in
mov
rclb
addr16
mov
inc
push
jmp
adc
sti
adc
fildll
ljmp
push
mov
cwtl
sti
mov
jmp
jno
sbb
push
rcl
arpl
sti
jo
sti
jo
test
shl
cmp
addr16
jle
sti
adc
sti
lock
xlat
push
sti
lock
mov
inc
jl
push
adc
aam
fwait
cli
cli
dec
push
xor
sti
rcrb
loop
mov
add
sti
adc
push
rorb
mov
push
or
stc
and
das
test
nop
inc
ret
call
rclb
fwait
decb
call
sti
lock
add
mov
push
fwait
mov
sti
rcrb
jge
pop
icebp
adc
adc
add
lock
pop
sti
gs
mov
sbb
push
cmp
push
out
inc
mov
cmpsb
shlb
sti
adc
xchg
pusha
mov
bound
movsl
in
fcmovb
mov
sbb
into
repz
xor
repz
fdivrs
sti
lock
rcrb
inc
int
aam
lock
fimull
cli
lock
sbb
mov
fsubrl
cld
mov
inc
xor
imul
cli
shlb
cli
shr
inc
pop
adc
or
mov
mov
out
pop
scas
out
jecxz
cli
adc
cmpsb
enter
add
jo
pop
jmp
pop
jge
inc
scas
mov
push
lods
push
cli
rolb
mov
cmp
sti
push
jl
pop
xchg
into
loop
mov
fs
call
xor
push
dec
fldcw
cli
mov
loop
cltd
out
mov
adc
adc
sbb
inc
mov
or
adc
xor
fcmovnbe
fwait
pop
mov
xor
mov
jg
cmc
pop
inc
xchg
push
cli
rolb
jo
je
cli
mov
scas
shl
or
nop
mov
fldenv
shll
jne
out
sbb
fldl
and
cli
shrb
mov
nop
xchg
dec
push
mulb
mov
sub
mov
test
xchg
outsb
subl
lock
xor
sbb
aas
fisubs
jne
fildl
stc
jo
stc
sarb
jbe
sub
push
or
nop
mov
stos
jp
sbb
and
xchg
stc
nop
sbb
nop
cmp
stc
jo
inc
mov
ds
stc
shr
pusha
repz
adc
xlat
daa
hlt
popa
cltd
cmpsl
xchg
stc
lock
addr16
push
pop
les
imul
lock
enter
sbb
adc
ljmp
hlt
mov
mov
mov
xchg
stc
lock
jg
ljmp
xchg
fistpll
cmp
inc
outsl
cltd
mov
je
mov
stc
adc
and
sbb
aad
pop
mov
stc
jo
push
add
repnz
xchg
cmp
ret
addl
add
inc
cmpsl
shlb
arpl
stc
nop
fldt
jb
add
mov
es
mov
stc
nop
mov
stc
xor
xor
loop
xor
int3
ja
dec
pushf
stc
nop
push
pop
into
imul
in
stc
xor
push
stc
mov
push
rol
mov
jl
clc
shrb
sbb
mov
enter
loop
adc
out
sub
xchg
clc
adc
aaa
mov
xor
in
divl
insl
cmpsb
xor
mov
shl
popf
arpl
in
push
push
ficoml
clc
mov
dec
test
add
push
clc
shlb
xor
push
jo
xchg
mov
lock
das
jge
sar
pop
xchg
xor
jmp
or
movsb
or
je
and
jo
clc
aad
fisubrs
cld
cmp
int3
shlb
mov
jo
mov
lock
int
sub
testb
jo
jae
shrb
push
mov
xor
clc
xor
sbb
cmp
dec
data16
xlat
andl
mov
xor
lret
mov
lock
jnp
clc
jo
clc
rolb
mov
mov
and
clc
shlb
repz
in
sub
sahf
clc
mov
and
sti
iret
test
jo
mov
lock
call
and
and
fs
jnp
mov
mov
fstps
add
push
movsl
arpl
lea
sub
lea
divl
ret
adc
out
adc
rcr
dec
and
cltd
or
lock
mov
push
mov
notl
inc
movl
or
shl
pop
xchg
notl
repz
push
xor
fistps
notl
sub
decl
notl
stc
dec
jns
les
outsb
pop
pop
xchg
notl
stos
js
fmul
adc
xor
xchg
mov
xor
divl
fdivs
cli
bound
outsl
sub
jmp
not
add
push
not
aas
in
divl
mull
cld
jp
div
data16
lock
or
lock
notl
loope
notl
arpl
fdivs
adc
xchg
bound
ja
inc
aas
imul
mov
cwtl
divl
cmp
jb
cmpsb
jnp
divl
fbstp
in
aaa
mov
jge
ret
div
sub
adc
mov
notl
ja
out
inc
pop
ljmp
and
push
pop
and
and
bound
lret
push
divb
sub
lock
ds
rcrb
lock
push
push
jns
sub
sbb
push
mov
sub
mov
adc
mov
add
nop
mov
mov
jne
lea
movsl
mov
notb
repz
and
js
xor
adc
lock
mov
gs
das
adc
push
nop
not
dec
mov
pop
pop
push
notb
dec
pop
push
divb
sti
and
add
mov
std
data16
cmp
push
int3
int3
mov
xchg
mov
sbb
divb
cli
push
sub
and
xchg
arpl
add
cltd
ret
sbb
add
dec
fprem1
rorl
xchg
test
jg
stos
adc
jo
icebp
rcl
cmp
xchg
mov
mov
and
imul
adc
ds
stc
out
xchg
divb
dec
xchg
lods
xchg
and
mov
int3
pop
and
or
xor
stos
popf
daa
rol
sahf
divb
les
push
pop
xchg
cmc
adc
nop
js
insl
call
sysexit
aam
or
ficoms
cmc
nop
imul
mov
push
into
push
scas
icebp
int
jae
call
lea
cmc
jo
cmp
cmc
mov
pop
jmp
jo
ror
jle
call
fnop
xor
mov
xor
or
in
add
shlb
cmc
adc
jecxz
cmc
mov
cmc
jo
cmc
lock
inc
in
cmc
jo
lret
xor
shll
gs
call
sub
stos
movsb
jge
cmc
mov
stc
push
push
cmc
push
adc
mov
das
mov
cmp
sub
comiss
cwtl
cmc
shlb
repz
add
cmc
xor
fidivrs
in
negl
xchg
pop
push
rorb
enter
dec
sbb
adc
ror
imul
adc
push
cmc
xor
mov
sub
clc
pop
cwtl
cmc
adc
jmp
mov
sar
mov
push
jmp
cmp
je
enter
fdivrl
jl
fidivs
cmpsb
invlpg
jle
insb
jmp
add
clc
sub
sahf
hlt
adc
mov
jo
out
popa
dec
iret
push
hlt
mov
push
jae
jmp
sub
and
in
sub
fwait
outsb
or
adc
mov
push
hlt
xor
jnp
aad
mov
mov
clc
sarl
das
subl
lock
ret
lds
pop
mov
xor
aaa
sub
fdivrl
movsb
and
fiadds
inc
test
and
hlt
rclb
hlt
mov
repz
mov
push
push
std
jg
sbb
push
mov
nop
hlt
nop
pop
mov
add
jo
cmp
hlt
xor
xor
dec
push
mov
jbe
mov
mov
or
adc
jne
pop
mov
xor
xor
repnz
clc
and
in
hlt
mov
cmp
dec
je
pop
push
sub
mov
fcomi
repz
hlt
jo
adc
rclb
enter
aas
or
jl
mov
cmpsb
hlt
sub
fsubrs
xlat
cmpsl
sub
js
cmp
mov
decl
repz
ret
mov
or
pop
mov
adc
mov
sbb
push
repz
repz
dec
xor
cmp
inc
loopne
adc
mov
repz
xor
adc
repz
xor
and
dec
push
repz
repz
and
pushf
repz
repz
repz
sahf
repz
in
bnd
pop
add
cmp
mov
nop
loopne
xchg
repz
cmp
xlat
push
icebp
mov
hlt
add
out
subl
test
jp
jnp
enter
sbb
fucom
out
mov
rclb
ror
pushf
repz
mov
add
adc
mov
clc
mov
xor
sahf
repz
sarb
cmp
out
jle
xor
repz
repz
mov
push
pushf
repz
clc
mov
hlt
cmp
mov
stc
lods
adc
adc
ja
sbb
push
pusha
hlt
inc
mov
repnz
lret
sub
cli
inc
bound
inc
addr16
aad
mov
fcmovnbe
fcomps
add
aaa
adc
mov
jp
sbb
lods
push
and
ret
jecxz
pop
outsb
or
nop
pop
rolb
push
cld
je
rorb
cmpsl
inc
clc
movsb
adcl
adc
repnz
fdivr
push
sbb
mov
aam
arpl
push
fistl
movsb
frstor
mov
lock
push
ret
sbb
push
rcrb
bnd
repnz
test
xchg
enter
fsubs
les
repnz
bnd
mov
mov
xor
repnz
and
imul
scas
cli
rdmsr
js
imul
push
rcrl
push
shrb
jg
mov
mov
cli
sub
mov
xchg
bnd
mov
cmp
push
or
pop
inc
push
frstor
xchg
jecxz
push
repnz
in
cmp
push
imulb
shrl
dec
cmc
cmpsl
mov
mov
fsubrl
push
jmp
cmp
enter
lock
jle
je
xchg
icebp
shrb
rolb
mov
cmp
icebp
nop
xchg
lahf
les
fldl
push
sub
adc
jo
dec
mov
hlt
mov
push
frstor
std
std
imul
mov
rcrb
xchg
icebp
mov
inc
mov
lcall
adc
rcll
or
jo
ss
sahf
icebp
lock
mov
icebp
xor
jl
shll
outsb
nop
icebp
adc
je
sub
rcr
pop
inc
fs
sahf
icebp
rorb
or
popa
and
mov
imul
dec
pop
test
adc
xchg
leave
xchg
popa
mov
pop
insb
je
icebp
adc
and
xor
je
arpl
imul
icebp
jo
es
pop
gs
icebp
rcrb
dec
repz
adc
mov
cld
je
pop
mov
into
jp
icebp
jo
push
icebp
nop
push
mov
pop
cmp
mov
pop
xor
fldt
inc
repz
mov
mov
arpl
push
push
jne
fisubrl
mov
test
mov
jp
dec
and
pop
pop
xchg
lock
cld
push
mov
sub
sbb
jo
or
adc
gs
in
pop
ljmp
les
mov
mov
sti
int
lock
mov
js
add
mov
jns
mov
rcr
shrb
jle
loop
lock
data16
xor
add
mov
gs
pushl
mov
fmul
add
xor
fmull
lock
shrb
lds
push
adc
jae
cli
leave
sbb
adc
out
insl
lahf
inc
push
lock
sbb
cmp
mov
jecxz
push
lock
repz
nop
bound
nop
add
repnz
lock
inc
xor
test
or
clc
xchg
movzbl
xchg
mov
outsb
sbb
nop
sbb
push
mov
mov
pusha
dec
fidivrs
roll
loopne
mov
in
shrb
cmp
hlt
mov
lock
cmp
jp
xchg
out
nop
out
cmp
pop
xchg
and
fwait
aad
out
xor
and
or
stos
bound
sti
scas
fwait
in
or
out
adc
adc
fs
xorl
mov
add
out
push
mov
ds
out
lock
out
xor
jno
cwtl
out
push
stos
out
xlat
mov
lods
inc
mov
mov
sub
sbb
jo
in
mov
out
adc
lods
aas
daa
js
adc
adc
out
mov
ret
adc
adc
nop
ja
add
nop
adc
rolb
aas
in
out
push
aam
in
sub
jp
dec
movq
cs
push
test
mov
jbe
enter
out
push
mov
xor
aaa
xor
cld
push
cmpsl
cmc
pop
add
push
popf
xchg
js
adc
icebp
and
out
lock
inc
mov
lock
mov
xor
movsb
add
inc
fstps
mov
lahf
mov
outsl
shrb
dec
and
push
out
nop
inc
imul
jg
adc
shr
aas
mov
push
out
lock
out
pushf
out
push
cld
jno
sub
pop
out
out
jo
pop
mov
mov
mov
jo
stos
push
out
lock
js
add
pop
stos
cmp
jle
fdivrl
jo
jg
and
cltd
cwtl
out
lock
out
lock
out
out
adc
out
shlb
xor
fs
mov
sti
iret
lahf
jmp
movsb
mov
xchg
cmpsl
sub
clc
in
dec
cmc
pop
fcmove
test
int
out
jo
push
out
lock
jmp
xor
sti
fsubl
cmp
add
pop
sub
mov
pushf
out
push
cmpsl
int
shrl
jo
and
xor
nop
lods
stos
movsb
or
nop
ja
int
ss
rolb
push
sub
fs
out
adc
xor
or
out
jo
dec
cltd
popf
movsl
scas
lock
cltd
jge
out
push
push
adc
jo
jne
inc
cmp
out
rcrb
or
out
ret
iret
in
mov
shrb
sbb
cmc
mov
out
xor
out
adc
js
lea
out
push
cmp
xor
pop
jns
lret
scas
mov
mov
incb
push
in
jo
jo
fadds
mov
cltd
arpl
inc
mov
adc
mov
or
and
lds
das
or
in
rolb
pop
and
jo
lret
out
jge
sbb
test
lock
loopw
xor
sahf
in
jo
test
inc
fsubl
scas
xor
fucomip
cmp
dec
mov
in
mov
cld
xchg
in
jo
gs
test
xlat
adc
adc
jg
pop
sbb
jo
sbb
lock
in
mov
aas
and
push
push
in
rcrb
mov
and
imul
xor
in
rclb
in
jo
cltd
mov
movsl
lock
cmp
sub
sub
mov
imull
mov
push
cmovbe
mov
pusha
or
nop
in
in
nop
jmp
mov
stos
cmp
inc
out
or
and
push
scas
ljmpw
xor
test
mov
scas
test
in
lock
sub
push
mov
pop
rorb
add
and
in
shl
test
inc
lock
xor
ret
fdivp
testl
insl
pop
push
jbe
lret
lds
rol
add
ljmp
push
sbb
mov
cld
mov
mov
test
in
push
daa
mov
sub
or
adc
dec
sbb
adc
mov
adc
xchg
ds
ljmp
or
mov
sub
in
adc
lahf
jp
cmp
mov
inc
jp
cmp
jmp
add
adc
or
mov
loop
mov
jo
in
mov
dec
pop
xchg
push
std
cwtl
in
lock
mov
mov
adc
xchg
xchg
in
mov
out
or
mov
shll
or
xchg
arpl
in
xor
mov
pop
test
adc
pop
jle
in
lock
push
jp
out
push
in
jo
and
jg
push
cmp
nop
in
out
mov
divb
jmp
adc
cltd
sub
inc
and
cmp
mov
and
sub
and
mov
xchg
or
jmp
jle
sbb
push
imul
pusha
jbe
shll
je
ret
ja
inc
sub
mov
popa
imul
nop
dec
popa
mov
xor
adc
leave
lahf
dec
out
stc
pop
mov
jmp
je
inc
loope
stos
cmpsb
enter
pop
int
enter
stc
dec
daa
cld
xchg
adc
das
dec
imul
cli
mov
sbb
jo
mov
mov
ljmp
sbb
mov
mov
fbstp
paddusw
pop
clc
js
arpl
into
call
jmp
ffree
lds
adc
jmp
cmpsb
std
mov
mov
xor
dec
or
add
sub
push
mov
add
lea
push
push
push
push
and
push
push
mov
push
add
test
nop
je
mov
nop
adc
add
clc
lea
mov
or
es
pop
lea
shr
add
push
push
push
call
or
sub
leave
ret
ret
sub
xchg
xchg
and
or
sub
add
add
lea
sub
shr
dec
not
xchg
sub
xchg
sub
mov
je
jne
push
pop
sub
add
lea
stc
pushl
es
push
mov
mov
push
loop
lea
movl
andl
lea
push
push
push
cmpl
je
push
push
cmp
jne
ja
adc
lea
movl
and
jne
loope
push
push
push
call
movzbl
lea
push
and
pop
je,pn
loope
mov
adc
xor
push
jmp
mov
stos
ja
js
xchg
shrb
jecxz
stos
jbe
sub
rol
into
dec
fistl
inc
sub
jmp
mov
scas
push
jecxz
and
in
test
out
daa
adc
dec
mull
adc
lock
sub
cwtl
ljmp
jmp
or
ljmp
mov
daa
fstps
clc
or
lcall
xchg
cmp
repnz
and
ljmp
jae
mov
sti
xor
es
mov
dec
add
fisttps
es
in
andl
rcl
fbstp
adc
int3
inc
push
sbb
shlb
push
cmp
and
add
lahf
dec
pop
inc
push
cld
add
xor
out
or
mov
adc
lock
and
arpl
jns
cmpl
push
repnz
ljmp
test
adc
fldcw
mov
ja
test
loop
rorl
ljmp
jl
adc
sub
sahf
ljmp
ljmp
xchg
fsubs
arpl
ljmp
rorb
push
or
lock
js
lret
ja
mov
in
cmpsl
fcmovne
jae
xchg
mov
mov
mov
jmp
in
mov
or
xlat
mov
xorl
sti
out
xor
pop
pop
movsl
out
mov
pop
maxps
addr16
push
fildll
inc
outsl
cmpsb
jbe
fisttpll
xor
jmp
xor
xor
fwait
or
rolb
outsb
xlat
jmp
call
lret
push
jmp
mov
inc
fs
lds
sub
stc
dec
mov
jmp
inc
daa
adc
sar
mov
outsb
sbb
mov
in
repnz
push
jmp
sahf
jmp
xor
sub
leave
out
jnp
ret
insl
jns
sahf
jmp
pop
cld
sub
xor
lock
jmp
sub
xchg
jmp
sub
jmp
jle
jmp
sub
and
xor
jmp
pop
sbb
loope
outsb
mov
jmp
iret
aaa
ss
adc
jo
jmp
mov
jmp
rcrb
fsubrs
mov
pusha
stos
add
in
pop
cmp
mov
pop
ret
sbb
xor
lods
cld
push
pop
adc
push
push
xor
pusha
cmp
mov
pop
sub
mov
mov
pushf
call
push
fs
call
add
push
inc
dec
aas
jno
mov
lcall
stos
aam
addr16
call
sub
add
call
sub
mov
jecxz
mov
push
js
add
lock
adc
dec
testl
fdivp
mov
push
filds
mov
mov
rorb
or
xor
call
cmpsl
std
xlat
and
adc
call
aas
fimuls
aas
ret
call
sbb
lock
sti
or
push
call
jb
je
out
jns
xchg
pop
cmp
sbb
lock
test
cli
sbb
push
call
inc
out
jbe
call
nop
call
popf
sbb
cltd
call
or
adc
mov
mov
imul
sub
pop
js
call
call
jo
call
xchg
loop
dec
dec
xor
push
out
movsb
out
stos
jne
data16
out
push
out
cld
scas
or
adc
and
out
leave
dec
jno
rclb
int
incb
aaa
add
mov
popa
jle
adc
nop
inc
mov
data16
sbb
mov
les
adc
rcrb
out
push
out
mov
mov
sbb
lock
loopne
add
push
sub
insb
gs
push
call
dec
jl
pushl
xor
mov
nop
insl
mov
leave
lods
sti
and
push
pop
icebp
mov
out
mov
out
sbb
push
pop
mov
jmp
pop
leave
iret
cltd
xchg
ror
sbb
fdivrl
push
cmp
faddp
fisubrs
mov
xor
jo
pop
mov
sub
std
push
hlt
cmp
stos
pop
hlt
jo
stos
imul
xchg
out
jns
out
repnz
and
shll
stc
insl
fistps
ljmp
xor
in
movsl
mov
imul
lods
sub
test
rcrl
dec
sub
sub
test
xor
push
repz
jo
push
ljmp
jge
jae
and
add
fwait
cltd
outsl
iret
xor
pop
mov
mov
xchg
out
dec
pusha
fwait
dec
xchg
mov
xor
mov
in
pop
pop
in
jne
lret
sbb
adc
push
mov
cmp
out
es
dec
aam
out
in
out
aad
push
pop
cmpsl
sub
pop
mov
push
adc
adc
out
out
jl
mov
jo
out
push
mov
dec
dec
or
lock
out
hlt
adc
rol
jle
adc
adc
lock
xchg
and
jb
aas
jg
pusha
lods
cli
idivb
enter
xchg
mov
add
stc
and
push
inc
ds
xchg
push
push
ret
cmp
xchg
and
push
out
xchg
ds
mov
dec
jl
lea
out
mov
push
and
lret
andnps
js
pop
mov
push
outsl
fstps
and
push
out
xor
pop
sub
addr16
mov
jo
ret
fisttpl
das
sbb
hlt
outsl
and
xor
dec
pop
cltd
sub
lock
mov
dec
das
jmp
icebp
in
lods
inc
mov
mov
adcl
loop
cmp
mov
xor
in
or
in
and
ja
in
js
in
pop
or
lock
inc
jmp
push
add
jo
clc
mov
aas
lock
sub
xchg
in
pusha
jnp
in
jp
pop
mov
mov
or
rorb
fstpt
sti
lahf
cmp
jns
data16
inc
in
sub
js
in
xor
dec
xchg
mov
mov
in
jo
dec
mov
mov
int
loope
push
into
imul
ret
pop
testl
into
jmp
mov
lock
jno
cld
mov
in
sub
in
leave
loope
jmp
xchg
xchg
sub
add
in
out
cmpsl
std
jge
scas
mov
xor
pop
xlat
sub
stc
cmp
iret
add
jmp
mov
and
into
pop
cltd
shrb
push
sub
and
in
jmp
push
in
xchg
ja
jl
add
popa
add
mov
jo
jmp
loop
lret
adc
jge
push
cwtl
in
std
std
sti
or
add
bound
cmpsl
leave
ret
in
sub
cmp
pop
mov
jmp
push
sub
aaa
jns
and
test
jo
in
fidivl
dec
movsb
jae
xor
fisubl
jnp
imull
fbld
xlat
xlat
inc
pop
inc
vpmulhuw
cmpsb
imul
lea
jnp
jnp
pop
cli
and
adc
lahf
inc
repz
nop
in
pop
outsl
pop
sbb
xor
lock
push
xchg
add
sub
cs
shl
xchg
adc
int3
fidivrl
lds
rorb
data16
inc
stc
sahf
in
pop
or
subl
and
jecxz
daa
xchg
jecxz
jg
jecxz
adc
mov
add
jo
int3
lahf
iret
cltd
push
sub
and
out
jle
leave
jmp
out
jo
frstor
or
lcall
pop
out
scas
or
aas
and
mov
and
insl
inc
push
jmp
mov
adc
mov
js
mov
jecxz
jp
ljmp
mov
mov
jno
ds
bound
jecxz
adc
jo
or
jo
jno
jecxz
jl
pop
or
add
lock
sbb
jecxz
into
cmpsl
mov
jo
scas
add
adc
aad
add
xor
jecxz
mov
fwait
jno
std
push
adc
rcll
shrb
lcall
nop
jecxz
dec
and
or
push
mov
mov
lcall
mov
inc
push
and
mov
xchg
jo
dec
push
sub
scas
cmpsl
adc
shrb
jecxz
out
pop
push
jecxz
fmulp
sub
stc
xchg
fs
push
stos
movsb
outsb
repz
dec
mov
in
and
xor
out
jecxz
sarl
sbb
mov
out
dec
cwtl
loop
movsl
xor
push
loop
push
int3
mov
jmp
in
addr16
push
cltd
int3
adc
rolb
loop
int3
pop
sbb
mov
or
mov
sub
cmp
inc
or
xor
cmp
shlb
and
fmull
iret
loope
test
and
push
loop
ljmp
cwtl
loop
loopne
jecxz
cmp
lahf
je
jge
lcall
loop
pop
movsl
push
test
xchg
ret
add
jo
je
rorl
jo
loop
sbb
xchg
les
jge
or
cli
ficoms
inc
mov
mov
and
js
fbstp
cmp
pop
xor
pop
cmc
or
inc
scas
sub
pop
fs
jge
loop
mov
std
push
bnd
mov
les
mov
rcrb
out
xchg
xor
bound
and
or
nop
jl
cmpsb
adc
shrb
loop
and
mov
rolb
stc
aas
es
adc
xchg
shr
push
int
cmp
and
or
xchg
loope
push
jmp
sbb
cltd
dec
ret
loope
out
inc
fs
jp
loope
mov
lcall
les
hlt
lahf
ljmp
loope
or
push
mov
outsl
sub
sub
into
sub
loope
xlat
xchg
jo
flds
arpl
lcall
mov
or
sbb
lock
cs
sub
lods
mov
orl
xor
sti
scas
sbb
mov
data16
lods
push
adc
push
jecxz
in
nop
loope
mov
ljmp
mov
jge
ljmp
xor
jo
dec
push
xlat
repz
xor
xchg
loope
out
pop
mov
or
jo
aas
cmp
loope
push
loope
lods
imul
ds
loope
dec
out
lahf
xor
loope
mov
jo
loope
das
jl
inc
or
cmp
push
loope
mov
imul
jmp
and
xor
sbb
mov
mov
leave
jb
out
cmp
scas
std
pop
call
out
inc
or
mov
daa
insb
pop
icebp
or
mov
outsl
jge
push
loopne
lods
call
push
loopne
lret
jne
fsubrl
sbb
loopne
push
bound
mov
inc
cmp
loopne
adc
sarb
jbe
loopne
jp
fsub
mov
and
popa
ret
mov
push
add
sbb
mov
out
push
fnstcw
xchg
loopne
pushf
loopne
pop
gs
push
mov
xor
int
mov
sbb
lock
adc
push
mov
pop
movsl
adc
xor
mov
mov
pop
lods
pop
es
ficoml
loopne
inc
mov
stc
and
int3
inc
mov
sbbl
orl
sarb
adc
jecxz
jno
sbb
loopne
pop
and
in
mov
mov
std
lock
ljmp
imul
jae
mov
jo
rcl
and
outsl
xchg
dec
int3
adc
mov
sbb
nop
mov
in
cmc
push
fsubs
or
nop
lods
cmpsl
dec
dec
cltd
mov
rolb
push
fbstp
sub
add
nop
adc
popa
mov
fbstp
scas
pop
fisubs
fbstp
notb
xor
pop
leave
lds
gs
mov
stc
dec
fdivrl
sub
push
inc
cld
fcmovnb
jmp
mov
push
mov
or
nop
push
shlb
pushf
fbstp
cwtl
fcomip
cli
push
dec
lret
or
fldcw
fstpl
fists
mov
nop
fbstp
or
popf
in
dec
fidivrl
aam
in
mov
lock
pop
xor
ret
fidivs
clc
and
cltd
pop
and
fbstp
cld
add
ror
jmp
and
call
and
ss
xor
fbstp
loope
decl
fists
mov
fdivr
mov
out
inc
xchg
les
and
push
fisubrs
lods
imul
jb
out
and
pusha
sub
fnsave
inc
out
pop
mov
push
cwtl
fcomip
lahf
lods
call
jbe
dec
xlat
lea
fists
fists
ret
xor
mov
push
inc
inc
out
sti
push
inc
ja
icebp
nop
ficoms
jo
out
inc
add
call
je
fidivs
les
jne
fisubs
rolb
insl
push
iret
out
loopne
lahf
cmp
sbb
sar
xor
insb
ljmp
nop
rcrl
sarb
cwtl
orl
mov
pushf
ficoms
pop
out
jg
movsl
jb
imul
sahf
dec
xchg
fidivs
fidivs
ss
nop
and
lods
xchg
push
fidivs
push
jb
lcall
ret
sti
xor
cli
outsl
sti
test
mov
add
push
ret
pushl
popf
out
xor
das
mov
rorl
outsb
cs
sbb
xor
out
outsb
dec
sub
mov
dec
aas
xlat
mov
lds
push
fidivs
out
inc
movsl
and
fidivs
mov
icebp
shr
lcall
xchg
mov
fidivs
mov
les
cmpsl
mov
aam
adc
adc
mov
or
jo
fstl
sahf
fstl
cld
mov
nop
fst
mov
xchg
fstl
dec
jg
fimuls
jecxz
movsl
cwtl
fnsave
dec
ret
fwait
test
out
clc
xor
cltd
push
and
dec
mov
mov
cmc
mov
or
xor
repz
pop
ja
fnsave
fwait
mov
fwait
jo
fstl
lcall
push
clc
nop
nop
nop
nop
jae
sub
add
mov
popf
add
jne
clc
nop
nop
nop
nop
jae
add
xchg
test
push
mov
xchg
ret
jns
xor
inc
sbb
sbb
nop
nop
nop
nop
jae
and
add
push
xor
add
add
add
clc
xchg
jne
clc
nop
nop
nop
nop
jae
cmc
add
add
shrb
lods
clc
nop
nop
nop
nop
jae
mov
mov
jg
xor
and
fstl
shrb
nop
nop
nop
jae
inc
dec
mov
xor
push
lahf
mov
pop
outsl
add
or
out
add
dec
mov
push
mov
nop
nop
nop
nop
jae
cwtl
add
push
add
out
push
push
xor
inc
add
clc
nop
nop
nop
nop
jae
push
add
add
inc
mov
cltd
mov
clc
nop
nop
nop
nop
jae
add
mov
add
add
push
mov
leave
cs
aad
add
add
add
gs
sub
jbe
clc
nop
nop
nop
nop
jae
sub
rolb
add
mov
clc
nop
nop
nop
nop
jae
and
pop
test
stc
pusha
push
mov
xchg
ret
in
push
mov
add
add
push
sub
cs
push
add
cwtl
add
clc
nop
nop
nop
nop
jae
aam
inc
mov
add
add
and
push
clc
nop
nop
nop
nop
jae
add
bound
add
and
xor
dec
push
nop
push
mov
leave
cs
add
cmc
and
add
jb
mov
add
add
pop
cwtl
pop
add
test
fiadds
add
mov
clc
nop
nop
nop
nop
jae
shlb
push
or
sbb
mov
mov
clc
nop
nop
nop
nop
jae
and
add
xchg
add
out
push
push
mov
xchg
ret
push
pop
add
add
into
xor
add
scas
mov
nop
nop
jae
je
add
mov
add
nop
nop
nop
nop
jae
outsb
add
bound
in
clc
nop
nop
nop
nop
jae
add
xchg
xor
xor
cmp
nop
push
mov
leave
cs
xchg
mov
xchg
push
aad
mov
nop
nop
nop
jae
add
add
push
js
add
call
nop
jae
and
mov
dec
in
add
add
add
pop
clc
nop
nop
nop
nop
jae
sbb
xchg
mov
add
add
push
sbb
sbb
mov
fidivl
xchg
pop
clc
nop
nop
nop
nop
jae
add
mov
add
jb
sti
push
push
mov
xchg
ret
add
test
aam
add
repz
clc
nop
nop
nop
nop
jae
add
push
add
add
ror
push
mov
xchg
ret
js
add
ljmp
sub
inc
and
nop
nop
nop
nop
jae
cmc
lahf
test
add
jns
cmp
push
mov
leave
cs
popf
lahf
add
add
add
add
mov
fidivl
clc
nop
nop
nop
nop
jae
mov
outsb
je
cwtl
bound
jb
jne
jmp
add
jb
add
add
inc
inc
pop
aam
add
clc
nop
nop
nop
nop
jae
jg
add
test
add
mov
clc
nop
nop
nop
nop
jae
mov
add
xchg
xor
movb
mov
xchg
ret
add
or
sub
fmull
clc
nop
nop
nop
nop
jae
and
mov
add
add
sub
fwait
nop
push
mov
leave
cs
pop
xchg
add
cmc
mov
add
out
shr
push
std
call
cs
mov
add
push
add
push
lods
ret
clc
nop
nop
nop
nop
jae
pop
add
add
push
add
jne
clc
nop
nop
nop
nop
jae
add
sbb
inc
add
insb
push
fsts
mov
clc
nop
nop
nop
nop
jae
add
add
add
ret
xchg
ret
clc
nop
nop
nop
nop
jae
lret
push
pop
add
and
push
clc
nop
nop
nop
nop
jae
add
aam
and
lahf
xor
shl
dec
mov
lock
sbb
clc
nop
nop
nop
nop
jae
add
add
mov
add
add
adc
in
mov
add
fdivrs
add
enter
push
add
call
clc
nop
nop
nop
nop
jae
and
add
mov
add
inc
add
add
xchg
push
hlt
add
add
jecxz
sti
clc
nop
nop
nop
nop
jae
add
mov
bound
add
nop
nop
nop
nop
jae
add
mov
pop
lret
add
aaa
push
push
mov
xchg
ret
add
and
pop
add
add
inc
dec
es
nop
nop
nop
nop
jae
add
add
or
jge
clc
nop
nop
nop
nop
jae
add
dec
mov
add
add
nop
push
mov
leave
cs
add
in
add
or
nop
nop
nop
nop
jae
mov
dec
add
cmp
nop
nop
jae
ret
add
in
aam
add
push
nop
push
mov
leave
cs
add
aam
add
mov
shr
clc
nop
nop
nop
nop
jae
sbb
inc
add
and
lock
fdivs
xchg
push
inc
add
add
add
add
push
add
mov
les
nop
push
mov
leave
cs
push
js
lret
add
add
not
clc
nop
nop
nop
nop
jae
js
pop
sbb
xor
outsb
jbe
fistpl
clc
nop
nop
nop
nop
jae
add
push
jg
mov
in
leave
cs
and
sbb
and
push
xor
push
mov
leave
cs
add
add
add
xor
clc
nop
nop
nop
nop
jae
add
add
add
add
add
test
push
add
clc
nop
nop
nop
nop
jae
add
add
xlat
mov
push
clc
nop
nop
nop
nop
jae
add
dec
add
add
stc
push
clc
nop
nop
nop
nop
jae
popf
add
jb
and
push
clc
nop
nop
nop
nop
jae
add
add
dec
add
pop
add
xor
xlat
adc
mov
leave
cs
mov
add
hlt
dec
add
mov
pop
clc
nop
nop
nop
nop
jae
add
rclb
add
push
or
mov
je
clc
nop
nop
nop
nop
jae
mov
sub
inc
push
push
mov
xchg
ret
bound
add
add
pop
or
add
push
jo
add
inc
clc
nop
nop
nop
nop
jae
xchg
fimuls
ret
jo
pushl
push
mov
xchg
ret
add
xor
aad
cmc
sarl
clc
nop
nop
nop
nop
jae
ret
push
add
add
add
loop
dec
pop
clc
nop
nop
nop
nop
jae
add
xchg
outsb
or
add
cmc
add
insl
add
nop
push
mov
leave
cs
sbb
sbb
add
leave
clc
nop
nop
nop
nop
jae
sbb
add
push
outsb
add
icebp
add
push
mov
xchg
ret
add
add
xchg
xchg
mov
add
ds
adc
nop
nop
nop
nop
jae
add
add
mov
xchg
add
or
sqrtps
inc
jns
add
add
add
add
xchg
add
push
mov
clc
nop
nop
nop
nop
jae
sub
xchg
inc
and
xor
clc
nop
nop
nop
nop
jae
push
mov
dec
add
gs
add
push
mov
xchg
ret
xchg
lahf
xor
out
mov
add
mov
pop
inc
add
mov
hlt
add
roll
repnz
add
add
lock
call
inc
add
aad
add
push
mov
add
stos
rcll
nop
nop
jae
push
jb
add
and
jg
add
add
push
mov
leave
cs
and
mov
sub
and
mov
jo
jae
je
sub
nop
nop
nop
nop
jae
add
add
mov
nop
nop
nop
nop
jae
add
sbb
add
add
add
enter
adc
and
inc
add
mov
add
shlb
mov
push
push
mov
xchg
ret
add
add
mov
add
jns
add
and
mov
adc
pop
clc
nop
nop
nop
nop
jae
add
inc
aad
pop
popf
add
add
cwtl
je
nop
aam
icebp
push
clc
nop
nop
nop
nop
jae
add
add
outsb
add
je
add
push
mov
leave
cs
mov
and
add
dec
cmp
and
or
ret
push
test
aam
jns
cwtl
jp
aam
push
or
adc
pop
clc
nop
nop
nop
nop
jae
inc
add
add
add
pop
pop
add
add
push
mov
xchg
ret
pop
add
fiadds
xchg
add
mov
cmp
nop
nop
nop
jae
add
and
add
ljmp
in
leave
cs
add
xchg
add
add
nop
push
mov
leave
cs
jg
sbb
lahf
add
push
sbb
dec
mov
nop
nop
nop
nop
jae
and
add
sbb
and
nop
push
mov
leave
cs
add
inc
sbb
out
xor
aam
aaa
cs
clc
nop
nop
nop
nop
jae
add
gs
mov
mov
and
fimuls
in
leave
cs
mov
add
and
add
rolb
cmpl
nop
push
mov
leave
cs
add
or
add
nop
nop
jae
add
sbb
dec
add
lods
movsb
push
push
mov
or
add
add
aaa
add
pop
jns
inc
add
add
lret
das
fistpl
push
mov
xchg
ret
xchg
jg
bound
je
add
jg
cmp
add
nop
nop
nop
nop
jae
add
js
push
shl
mov
loop
add
clc
nop
nop
nop
nop
jae
pop
rolb
aam
push
add
mov
nop
nop
nop
jae
mov
jg
mov
mov
push
data16
clc
nop
nop
nop
nop
jae
xchg
dec
add
je
add
dec
add
cmpsl
mov
clc
nop
nop
nop
nop
jae
add
add
add
sbb
mov
lock
mov
aas
xor
clc
nop
nop
nop
nop
jae
mov
add
add
lods
inc
inc
or
nop
nop
nop
jae
xchg
add
add
add
in
add
clc
nop
nop
nop
nop
jae
xchg
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
pop
pop
in
mov
and
nop
nop
nop
nop
jae
and
add
push
mov
adc
rolb
xchg
inc
insl
shr
pop
add
inc
icebp
sarb
testb
mov
dec
fld1
push
mov
xchg
ret
and
add
add
add
dec
add
sub
lds
mov
xchg
ret
dec
sbb
add
dec
push
sub
nop
nop
nop
nop
jae
aad
add
mov
add
add
mov
xchg
ret
outsb
in
add
or
add
push
mov
xchg
ret
out
mov
push
add
test
fmul
das
pop
push
mov
xchg
ret
out
jb
add
add
ljmp
nop
nop
nop
jae
mov
add
ret
xor
lret
repz
call
cs
add
add
dec
xor
push
mov
xchg
ret
push
je
add
add
sub
in
add
push
roll
add
adc
adc
pushf
jae
test
je
inc
clc
nop
nop
nop
nop
jae
push
add
add
ljmp
lahf
push
mov
xor
push
and
add
in
push
addl
add
cmpl
xchg
mov
clc
nop
nop
nop
nop
jae
outsb
mov
add
add
lret
nop
push
mov
leave
cs
add
test
mov
add
push
clc
nop
nop
nop
nop
jae
push
add
mov
push
out
add
rorl
clc
nop
nop
nop
nop
jae
add
add
add
cld
jmp
cmc
add
push
add
add
xchg
add
xor
lock
nop
nop
jae
add
mov
push
add
mov
or
push
mov
xchg
ret
mov
inc
add
add
add
add
fwait
addb
or
ret
add
jns
xchg
add
add
pop
lds
clc
clc
nop
nop
nop
nop
jae
push
pop
sbb
mov
mov
iret
mov
nop
push
mov
leave
cs
xchg
mov
add
add
out
sti
add
clc
nop
nop
nop
nop
jae
add
add
sbb
mov
hlt
or
nop
nop
nop
nop
jae
add
xchg
ljmp
rclb
dec
push
mov
add
je
mov
push
cmp
add
sti
sub
push
mov
xchg
ret
sbb
push
sub
popf
jmp
nop
nop
nop
jae
pop
add
cmc
xor
push
add
push
mov
xchg
ret
outsb
add
sub
mov
mov
test
nop
push
mov
leave
cs
add
mov
add
dec
add
mov
dec
xor
nop
nop
jae
add
sbb
add
out
cmc
out
cmc
ret
mov
push
mov
xchg
ret
xor
xchg
or
add
push
jle
push
nop
push
mov
leave
cs
sub
bound
jns
mov
add
pop
inc
add
xor
ret
loop
add
ret
clc
nop
nop
nop
nop
jae
add
gs
add
add
clc
nop
nop
nop
nop
jae
shr
add
add
dec
push
push
mov
xchg
ret
push
mov
sbb
pop
add
add
iret
xor
clc
nop
nop
nop
nop
jae
in
add
add
mov
add
add
mov
nop
nop
nop
jae
sbb
jns
add
add
cmc
add
iret
xor
sub
nop
nop
nop
jae
add
and
mov
sbb
popf
xor
add
in
mov
mov
add
sub
xor
iret
nop
and
call
inc
add
add
add
sbb
lahf
dec
es
mov
xchg
ret
bound
add
bound
inc
add
adc
add
nop
nop
nop
nop
jae
add
jg
add
cmc
lahf
popa
clc
nop
nop
nop
nop
jae
push
xchg
push
inc
xchg
lahf
mov
sbb
add
push
mov
lcall
lret
add
repnz
add
xor
hlt
sub
rep
nop
push
mov
leave
cs
xor
add
add
sti
push
mov
pusha
lds
sub
add
popa
cmp
popa
add
inc
loopne
push
nop
push
mov
leave
cs
test
jb
push
into
ljmp
out
clc
nop
nop
nop
nop
jae
and
add
rolb
sbb
into
lock
pop
add
nop
push
mov
leave
cs
add
pop
add
add
cld
push
inc
add
outsb
dec
and
sbb
xchg
call
clc
nop
nop
nop
nop
jae
and
in
add
xchg
cwtl
incl
or
nop
nop
nop
nop
jae
add
add
add
sbb
pop
push
push
mov
xchg
ret
add
add
inc
lahf
add
add
mov
rorb
shr
push
mov
xchg
ret
and
add
add
add
mov
leave
cs
mov
and
lret
xor
mov
clc
nop
nop
nop
nop
jae
add
hlt
add
popf
add
into
sub
fistpl
clc
nop
nop
nop
nop
jae
xchg
add
add
add
mov
clc
nop
nop
nop
nop
jae
js
je
outsb
popf
add
out
add
mov
push
sub
outsb
inc
add
cmc
mov
jg
mov
test
push
mov
leave
cs
add
in
rolb
add
sarl
nop
nop
nop
nop
jae
xor
add
mov
push
cmp
rclb
pop
popa
inc
add
add
and
pop
add
sbb
xchg
mov
mov
test
nop
nop
nop
nop
jae
rclb
add
sarb
jo
scas
dec
clc
nop
nop
nop
nop
jae
add
add
outsb
add
inc
add
sub
push
int3
nop
stos
mov
pusha
inc
add
sbb
aam
and
cmc
and
mov
nop
nop
nop
nop
jae
add
add
push
popf
add
add
sub
mov
nop
nop
nop
jae
add
add
js
hlt
xchg
xchg
test
rclb
lea
and
add
add
dec
and
add
xor
cld
push
inc
sbb
cs
sbb
mov
push
add
nop
nop
nop
nop
jae
add
add
xor
add
test
cmpsl
rep
clc
nop
nop
nop
nop
jae
and
and
outsb
add
in
test
nop
nop
nop
nop
jae
add
mov
sbb
add
mov
rol
push
mov
xchg
ret
add
lret
loop
add
xor
mov
clc
nop
nop
nop
nop
jae
xor
sbb
pop
inc
add
jge
clc
nop
nop
nop
nop
jae
add
add
and
add
popf
dec
xchg
mov
leave
nop
push
mov
leave
cs
xor
dec
rolb
popf
add
lea
clc
nop
nop
nop
nop
jae
add
add
lahf
add
add
test
xor
xor
loop
mov
xchg
ret
add
add
add
add
xchg
jg
add
pop
pop
push
mov
xchg
ret
ljmp
lret
pop
add
into
add
notl
push
mov
xchg
ret
add
add
pop
outsb
add
pause
push
mov
leave
cs
add
sbb
mov
cwtl
aam
add
stos
sub
nop
nop
nop
jae
add
add
popf
and
out
clc
nop
nop
nop
nop
jae
xor
out
xor
pop
dec
fdivs
lret
xor
cmp
nop
nop
jae
mov
out
mov
add
and
jae
clc
nop
nop
nop
nop
jae
add
xor
mov
outsb
stos
cld
clc
nop
nop
nop
nop
jae
add
and
add
test
add
lret
pop
push
mov
or
add
add
add
aas
add
inc
push
xchg
sarb
clc
nop
nop
nop
nop
jae
add
add
mov
push
ret
add
rclb
dec
imul
leave
cs
add
add
add
ret
je
fwait
push
mov
xchg
ret
sbb
push
add
add
add
sub
cmpsb
aad
add
nop
nop
nop
nop
jae
pop
add
add
add
adc
add
push
mov
inc
add
fidivs
out
add
add
nop
nop
nop
jae
xchg
inc
and
add
jo
add
push
mov
xchg
ret
add
add
dec
add
add
add
lret
stos
push
mov
xchg
ret
cmc
add
add
test
add
pop
push
lret
pop
clc
nop
nop
nop
nop
jae
push
add
out
add
bound
push
pop
cmp
xchg
and
push
mov
xchg
ret
xor
jb
pop
add
js
add
inc
ret
clc
nop
nop
nop
nop
jae
and
add
add
pop
aad
mov
cmp
clc
nop
nop
nop
nop
jae
push
lret
xor
pop
shlb
cmp
nop
nop
nop
nop
jae
add
sbb
into
loope
nop
push
mov
leave
cs
dec
dec
add
cwtl
add
add
push
nop
push
mov
leave
cs
fiadds
add
push
jb
add
bound
add
push
mov
xchg
ret
cwtl
add
aam
add
and
mov
xchg
ret
dec
add
add
cwtl
push
xor
add
nop
push
mov
leave
cs
add
sub
sbb
clc
nop
nop
nop
nop
jae
push
outsb
pop
ret
ljmp
fiadds
push
mov
xchg
ret
js
or
and
add
ret
xor
test
inc
add
add
add
pop
and
dec
into
push
and
enter
dec
clc
dec
inc
clc
nop
nop
nop
nop
jae
lahf
add
pop
mov
ficoms
push
clc
nop
nop
nop
nop
jae
add
test
add
xor
jmp
nop
nop
nop
nop
jae
cmc
add
add
add
add
add
stos
clc
nop
nop
nop
nop
jae
add
loop
add
add
inc
or
enter
enter
jl
enter
enter
movsb
clc
nop
nop
nop
nop
jae
add
fimuls
mov
gs
nop
push
mov
leave
cs
bound
add
add
test
xchg
call
clc
nop
nop
nop
nop
jae
into
add
add
lret
pusha
push
mov
xchg
ret
add
mov
ljmp
mov
push
imul
and
nop
nop
nop
nop
jae
hlt
push
jns
jb
gs
add
dec
sub
pushf
pop
inc
add
je
and
add
outsb
mulps
orl
ret
add
add
add
add
jecxz
rclb
xlat
mov
xchg
ret
add
xor
lahf
inc
add
add
clc
nop
nop
nop
nop
jae
add
sbb
add
and
xchg
add
jae
add
clc
nop
nop
nop
nop
jae
add
mov
cmc
add
mov
add
add
clc
nop
nop
nop
nop
jae
mov
push
add
or
push
or
mov
xchg
ret
or
pop
dec
xchg
pop
or
mov
xor
je
mov
clc
nop
nop
nop
nop
jae
outsb
add
add
add
lahf
aad
sub
inc
pop
push
mov
xchg
ret
add
add
bound
lret
cwtl
gs
test
push
mov
leave
cs
xor
inc
add
xor
push
mov
xchg
ret
add
add
add
sbb
lock
add
clc
nop
nop
nop
nop
jae
add
add
xor
push
mov
xchg
ret
add
inc
lret
ljmp
call
nop
push
mov
leave
cs
add
inc
add
add
stos
jmp
add
sbb
add
add
add
pushl
xchg
test
inc
add
add
add
push
sbb
adc
shr
push
mov
lock
scas
dec
pusha
clc
nop
nop
nop
nop
jae
sbb
add
lret
and
add
add
jnp
clc
nop
nop
nop
nop
jae
add
add
sbb
add
shrl
nop
jae
add
pop
pop
in
sbb
add
test
add
clc
nop
nop
nop
nop
jae
add
add
iret
push
nop
push
mov
leave
cs
add
bound
xchg
and
and
ret
clc
nop
nop
nop
nop
jae
js
hlt
lret
popf
inc
and
add
mov
mov
jo
je
clc
nop
nop
nop
nop
jae
mov
and
outsl
add
clc
nop
nop
nop
nop
jae
add
add
add
add
nop
nop
nop
nop
jae
add
hlt
mov
xchg
ret
push
mov
add
add
add
and
lds
leave
add
clc
nop
nop
nop
nop
jae
add
add
add
out
push
lahf
add
add
clc
nop
nop
nop
nop
jae
add
jg
mov
popf
push
mov
bound
add
in
in
outsl
movsl
sbb
add
adc
mov
xchg
ret
add
or
js
add
add
nop
nop
nop
nop
jae
add
ljmp
add
sub
nop
nop
nop
nop
jae
push
fiadds
gs
sub
add
add
add
nop
nop
nop
jae
add
mov
hlt
add
movsb
cltd
jne
clc
nop
nop
nop
nop
jae
sbb
jg
jg
sbb
clc
nop
nop
nop
nop
jae
mov
mov
mov
add
sub
test
idiv
clc
nop
nop
nop
nop
jae
add
add
cwtl
add
nop
nop
nop
nop
jae
add
and
add
bound
inc
mov
add
push
mov
xchg
ret
or
test
cwtl
into
push
les
xchg
nop
push
mov
leave
cs
pop
xor
ret
cmc
mov
pop
add
sti
push
push
mov
xchg
ret
bound
add
add
js
pop
pop
inc
push
loop
pop
push
mov
xchg
ret
test
add
dec
add
rorl
or
ret
mov
in
jg
add
fistpl
push
mov
leave
cs
sbb
push
add
add
xchg
jne
clc
nop
nop
nop
nop
jae
push
aam
into
push
push
add
add
xchg
nop
push
mov
leave
cs
test
add
and
call
nop
jae
add
add
add
lret
xor
ror
repnz
nop
jae
push
add
and
and
sahf
add
add
nop
nop
nop
nop
jae
add
add
push
je
lahf
push
push
mov
xchg
ret
into
pop
ror
pop
sbb
je
xor
fld1
clc
nop
nop
nop
nop
jae
cwtl
add
add
mov
inc
add
ret
jo
mov
clc
nop
nop
nop
nop
jae
lret
push
add
inc
add
inc
cmc
test
nop
nop
nop
jae
push
add
dec
add
and
jg
sub
push
mov
add
orl
xor
test
pop
fisttpl
nop
nop
jae
or
add
bound
nop
nop
nop
nop
jae
add
add
add
push
add
nop
nop
jae
add
mov
add
add
add
inc
push
nop
push
mov
leave
cs
mov
cmc
xor
add
sbb
clc
nop
nop
nop
nop
jae
bound
add
add
xor
push
clc
nop
nop
nop
nop
jae
or
xchg
and
mov
js
push
clc
nop
nop
nop
nop
jae
rolb
add
bound
aad
out
add
jnp
les
nop
nop
nop
nop
jae
add
and
add
push
cs
add
mov
push
jns
mov
je
add
ljmp
inc
rorl
nop
nop
jae
mov
add
pop
add
jns
insb
or
push
stos
pop
clc
nop
nop
nop
nop
jae
xor
dec
lret
test
pop
jmp
incl
mov
push
xchg
test
sbb
push
shlb
rcll
jbe
inc
add
add
add
add
add
call
cs
add
push
or
mov
out
push
mov
xchg
ret
sbb
ret
rolb
add
mov
push
and
or
push
mov
leave
cs
mov
add
lahf
bound
aam
mov
add
clc
nop
nop
nop
nop
jae
add
sbb
push
pop
jo
test
stos
nop
push
mov
leave
cs
test
dec
sub
add
aad
xchg
xor
push
mov
pop
js
ja
xchg
fldl
or
ljmp
mov
pop
push
mov
xchg
ret
add
mov
add
add
and
adc
or
ret
inc
add
sbb
aad
sbb
push
pop
push
mov
clc
nop
nop
nop
nop
jae
add
add
hlt
add
out
mov
add
add
into
fst
lret
insl
xor
add
mov
xchg
push
je
pop
nop
push
mov
leave
cs
add
add
add
add
ret
lret
add
mov
clc
nop
nop
nop
nop
jae
xor
je
add
jae
nop
nop
nop
nop
jae
add
aam
inc
add
in
mov
xchg
ret
aad
ret
cwtl
ret
pop
and
pop
js
push
mov
leave
cs
add
mov
add
add
sbb
pusha
clc
nop
nop
nop
nop
jae
xor
push
jg
and
add
adc
nop
nop
nop
nop
jae
add
and
add
sbb
test
pop
add
clc
nop
nop
nop
nop
jae
add
add
add
mov
leave
cs
add
xchg
ret
push
fiadds
inc
lahf
mov
xchg
shlb
shlb
push
mov
leave
cs
js
add
rclb
and
clc
nop
nop
nop
nop
jae
add
add
push
add
ljmp
fdivl
add
jg
loop
add
add
clc
nop
nop
nop
nop
jae
xor
mov
add
add
add
ds
es
test
sbb
add
nop
nop
nop
nop
jae
add
and
xlat
fld1
nop
push
mov
leave
cs
gs
add
je
add
mov
mov
clc
nop
nop
nop
nop
jae
mov
add
xor
jg
add
shl
clc
nop
nop
nop
nop
jae
or
push
add
add
add
nop
push
mov
leave
cs
ficomps
add
push
and
mov
xchg
ret
add
add
add
add
in
xor
in
leave
cs
add
lahf
and
rclb
jle
add
aad
xchg
mov
add
dec
pop
call
nop
push
mov
leave
cs
add
add
nop
nop
nop
jae
add
and
add
inc
hlt
pop
mov
push
mov
xchg
ret
add
inc
add
inc
out
add
add
mov
clc
nop
nop
nop
nop
jae
add
pop
add
loop
xchg
add
test
nop
nop
nop
nop
jae
add
push
add
add
add
hlt
xor
insl
shr
clc
nop
nop
nop
nop
jae
cmc
cwtl
push
js
gs
je
nop
push
mov
leave
cs
add
aam
js
mov
clc
nop
nop
nop
nop
jae
fiadds
add
out
add
lock
nop
jae
jg
xor
add
sbb
outsb
outsb
inc
mov
clc
nop
nop
nop
nop
jae
add
add
sbb
lea
clc
nop
nop
nop
nop
jae
add
mov
mov
je
clc
nop
nop
nop
nop
jae
ret
add
add
add
push
clc
nop
nop
nop
nop
jae
and
gs
add
pop
add
nop
nop
nop
nop
jae
add
add
add
lahf
add
jb
add
add
sbb
add
add
clc
nop
nop
nop
nop
jae
rolb
popf
sbb
fiadds
and
jno
roll
nop
nop
nop
nop
jae
push
and
push
aad
lahf
aad
jg
mov
push
mov
xchg
ret
loop
add
add
add
inc
add
les
mov
xchg
ret
add
hlt
loop
rolb
lret
add
pop
mov
clc
nop
nop
nop
nop
jae
add
sub
mov
rclb
outsl
inc
add
sbb
sbb
add
repz
mov
xchg
ret
jb
xor
in
cwtl
add
push
jmp
add
add
jns
add
in
add
cwtl
dec
add
ljmp
nop
jae
add
add
bound
movzwl
clc
nop
nop
nop
nop
jae
in
loop
cmc
add
add
mov
popa
clc
nop
nop
nop
nop
jae
out
add
add
add
add
pop
pop
lds
sar
nop
nop
nop
jae
add
add
add
in
icebp
mov
clc
nop
nop
nop
nop
jae
add
add
xor
mov
push
mov
push
nop
push
mov
leave
cs
add
add
sub
add
add
push
mov
xchg
ret
add
gs
add
add
push
mov
xchg
ret
add
jb
add
xchg
pop
jns
add
sti
push
push
mov
xchg
ret
add
into
add
add
xchg
or
mov
clc
nop
nop
nop
nop
jae
push
jg
into
add
in
xor
nop
push
mov
leave
cs
sub
add
loop
sbb
push
mov
xchg
ret
mov
add
mov
add
xchg
push
add
in
leave
cs
add
loop
add
add
icebp
imul
clc
nop
nop
nop
nop
jae
fmulp
add
add
add
jg
add
insb
nop
push
mov
leave
cs
add
mov
or
aaa
lss
add
add
popf
add
add
pop
dec
push
mov
xchg
ret
je
and
add
add
fistpll
clc
nop
nop
nop
nop
jae
add
add
adc
test
in
clc
nop
nop
nop
nop
jae
add
add
xor
xor
xor
clc
nop
nop
nop
nop
jae
and
add
add
mov
xchg
ret
cmc
add
add
push
sub
add
fildl
stc
nop
push
mov
leave
cs
rclb
test
push
mov
clc
nop
nop
nop
nop
jae
sbb
pop
into
sbb
sar
nop
nop
nop
jae
xor
add
jns
add
cmp
push
mov
xchg
ret
add
add
and
add
mov
in
cmc
add
add
xchg
xor
add
loopne
add
cmp
fwait
add
clc
nop
nop
nop
nop
jae
add
pop
add
jb
add
sbb
clc
nop
nop
nop
nop
jae
pop
add
add
lret
xor
mov
mov
clc
nop
nop
nop
nop
jae
sbb
add
mov
add
adc
nop
nop
nop
nop
jae
jb
and
mov
push
xor
call
inc
add
add
sbb
and
add
in
add
add
clc
nop
nop
nop
nop
jae
xor
ljmp
inc
loopne
nop
nop
nop
nop
jae
add
add
push
add
outsb
dec
push
mov
test
nop
push
mov
leave
cs
mov
sbb
add
add
add
mov
clc
nop
nop
nop
nop
jae
je
lahf
add
bound
mov
xchg
ret
add
pop
mov
bound
nop
nop
nop
nop
jae
jg
ljmp
and
pop
pusha
jp
mov
clc
nop
nop
nop
nop
jae
push
add
add
push
add
aam
inc
pop
mov
mov
xchg
ret
add
add
ljmp
add
pusha
xchg
mov
clc
nop
nop
nop
nop
jae
push
add
pop
sbb
add
clc
nop
push
mov
leave
cs
sbb
and
push
out
aam
test
or
ret
add
or
push
xor
add
aad
push
and
or
nop
nop
nop
nop
jae
and
hlt
add
and
clc
nop
nop
nop
nop
jae
outsb
add
add
sub
add
call
adc
mov
jo
pop
nop
push
mov
leave
cs
aad
push
pop
add
add
add
mov
push
mov
xchg
ret
xor
gs
add
or
xlat
jb
clc
nop
nop
nop
nop
jae
cwtl
and
add
add
xor
nop
jae
add
cwtl
add
sbb
mov
add
add
mov
jmp
add
shlb
scas
add
add
add
add
clc
nop
nop
nop
nop
jae
add
xor
add
inc
push
call
nop
push
mov
leave
cs
mov
push
and
aad
push
cltd
push
mov
add
sbb
aad
mov
add
add
jo
cmp
push
mov
xchg
ret
inc
pop
add
aad
add
mov
call
cs
add
and
fld1
clc
nop
nop
nop
nop
jae
test
aam
add
shrb
fwait
clc
nop
nop
nop
nop
jae
mov
ficomps
xchg
ret
aad
pop
stos
clc
nop
nop
nop
nop
jae
fisubrs
xor
add
jb
fistpl
clc
nop
nop
nop
nop
jae
push
sbb
xor
jle
mov
add
clc
nop
nop
nop
nop
jae
test
and
mov
push
mov
leave
cs
dec
gs
add
mov
mov
push
mov
xchg
ret
lahf
mov
add
sbb
lea
clc
nop
nop
nop
nop
jae
jg
add
out
je
add
xor
mov
or
cs
add
jg
add
movsl
add
push
mov
xchg
ret
push
add
sub
add
add
nop
push
mov
leave
cs
add
lret
xor
push
pop
jmp
inc
add
jns
add
add
add
clc
nop
nop
nop
nop
jae
add
xor
add
pop
jb
dec
add
jns
and
repz
inc
add
and
or
add
mov
add
je
nop
push
mov
leave
cs
add
push
add
mov
xor
dec
push
je
mov
popa
add
sbb
xchg
xchg
mov
clc
nop
nop
nop
nop
jae
dec
add
xor
xor
sbb
clc
nop
nop
nop
nop
jae
je
lahf
mov
lret
mov
push
mov
dec
cmp
push
mov
leave
cs
add
fiadds
jb
or
lahf
add
adc
sbb
push
mov
xchg
ret
shlb
add
outsb
pop
lds
mov
clc
nop
nop
nop
nop
jae
add
add
add
jo
mov
push
cmc
mov
clc
nop
nop
nop
nop
jae
lret
add
ret
in
hlt
into
mov
out
shll
clc
nop
nop
nop
nop
jae
cwtl
inc
push
xor
push
dec
mov
clc
nop
nop
nop
nop
jae
add
xor
add
test
nop
push
mov
leave
cs
xor
pop
add
add
dec
cmp
push
mov
leave
cs
inc
add
mov
add
add
inc
xorl
clc
nop
nop
nop
nop
jae
sbb
xor
adc
adc
mov
popf
adc
or
xchg
adc
scas
repz
aam
add
dec
cmp
nop
push
mov
leave
cs
add
loop
mov
popa
inc
add
mov
lahf
into
sbb
add
scas
enter
jo
fwait
clc
nop
nop
nop
nop
jae
cmc
add
mov
inc
add
add
push
clc
nop
nop
nop
nop
jae
loop
outsb
ljmp
add
stos
push
nop
push
mov
leave
cs
add
add
add
add
mov
sub
jg
clc
nop
nop
nop
nop
jae
add
add
shlb
push
push
mov
xchg
ret
add
add
and
add
push
loop
fld1
clc
nop
nop
nop
nop
jae
jns
add
push
add
add
add
addr16
push
mov
xchg
ret
lahf
lret
dec
add
lahf
ljmp
push
mov
into
dec
je
clc
nop
nop
nop
nop
jae
add
add
cmc
add
xchg
add
clc
nop
nop
nop
nop
jae
add
add
nop
nop
nop
nop
jae
pop
pop
shlb
push
rcrb
in
add
mov
nop
nop
jae
add
add
add
lea
nop
push
mov
leave
cs
add
add
ljmp
test
or
ret
add
jg
add
inc
cwtl
add
lcall
add
add
clc
nop
nop
nop
nop
jae
jb
dec
mov
add
js
mov
nop
push
mov
leave
cs
jb
push
cmc
add
pop
bound
sub
mov
inc
push
mov
xchg
ret
add
add
pop
cwtl
add
add
mov
pop
push
mov
xchg
ret
add
and
add
add
clc
nop
nop
nop
nop
jae
mov
add
inc
add
add
mov
shlb
cmp
push
mov
leave
cs
gs
gs
filds
push
mov
leave
cs
mov
add
mov
add
clc
nop
nop
nop
nop
jae
add
sbb
add
add
add
push
mov
sub
push
push
mov
outsl
push
clc
nop
nop
nop
nop
jae
pop
lret
into
pop
inc
add
add
mov
nop
nop
nop
jae
hlt
mov
mov
add
outsb
je
push
mov
jge
add
add
pop
movl
add
xchg
lcall
jae
add
add
add
dec
fwait
clc
nop
nop
nop
nop
jae
add
xor
aad
mov
push
clc
nop
nop
nop
nop
jae
or
add
add
xor
and
mov
push
mov
xchg
ret
and
push
xchg
fiadds
inc
mov
mov
jecxz
push
mov
xchg
ret
rolb
add
add
rolb
dec
xchg
mov
icebp
add
clc
nop
nop
nop
nop
jae
lret
add
add
mov
push
inc
sbb
fdivr
nop
nop
nop
nop
jae
loop
out
add
pop
in
ljmp
sub
nop
nop
nop
nop
jae
add
aad
shlb
lret
add
inc
add
or
clc
nop
nop
nop
nop
jae
ret
add
out
sbb
add
mov
xlat
add
nop
push
mov
leave
cs
add
add
jg
add
add
and
roll
nop
nop
nop
nop
jae
mov
mov
add
inc
add
shlb
add
nop
nop
nop
nop
jae
add
and
aad
add
rep
clc
nop
nop
nop
nop
jae
loop
mov
dec
sbb
jg
into
sbb
mov
xchg
nop
nop
nop
nop
jae
add
lahf
add
mov
cwtl
rolb
add
insl
push
clc
nop
nop
nop
nop
jae
add
add
add
add
add
add
outsl
loopne
nop
nop
nop
nop
jae
add
add
add
outsl
mov
clc
nop
nop
nop
nop
jae
add
add
lahf
ret
mov
nop
push
mov
leave
cs
add
shrb
mov
nop
nop
nop
jae
add
add
dec
add
xchg
xor
aas
add
add
lcall
add
and
and
ret
add
clc
nop
nop
nop
nop
jae
sbb
add
mov
clc
nop
nop
nop
nop
jae
add
sub
push
add
fwait
clc
nop
nop
nop
nop
jae
pop
add
gs
add
push
push
clc
nop
nop
nop
nop
jae
out
add
add
mov
je
shlb
adc
add
clc
nop
nop
nop
nop
jae
add
popf
ljmp
adc
push
mov
leave
cs
mov
push
hlt
js
pop
mov
xchg
mov
mov
add
mov
fwait
add
and
pop
cmc
mov
clc
nop
nop
nop
nop
jae
jns
mov
add
pop
lret
bound
mov
lret
repz
nop
nop
nop
nop
jae
add
popf
add
add
popf
pusha
push
mov
xchg
ret
add
add
add
push
loop
add
add
dec
push
mov
xchg
ret
add
add
add
pop
xorb
addl
nop
push
mov
leave
cs
dec
add
cwtl
in
sbb
adc
nop
nop
nop
nop
jae
loop
add
add
pop
add
mov
jl
mov
push
rcll
xor
add
add
mov
add
and
cld
push
mov
xchg
ret
jb
aam
add
mov
inc
in
add
xor
nop
push
mov
leave
cs
add
add
fidivs
jne
sar
nop
nop
nop
jae
add
pop
add
add
lods
push
mov
xchg
ret
add
mov
add
rolb
leave
nop
push
mov
leave
cs
add
push
ljmp
jns
xchg
mov
outsl
lods
nop
push
mov
leave
cs
pop
sbb
sbb
dec
fiadds
mov
add
clc
nop
nop
nop
nop
jae
sbb
sbb
xor
add
nop
nop
jae
add
mov
add
push
add
push
clc
nop
nop
nop
nop
jae
ljmp
mov
add
inc
div
nop
push
mov
leave
cs
mov
loop
hlt
add
sbb
jns
jg
sbb
clc
nop
nop
nop
nop
jae
cmc
add
add
rolb
add
add
sub
clc
nop
nop
nop
nop
jae
add
xor
dec
push
push
mov
xchg
ret
mov
fiadds
rolb
or
add
add
xor
test
nop
nop
nop
jae
add
add
and
dec
cmp
nop
nop
nop
nop
jae
push
push
sbb
add
scas
nop
xor
scas
lock
mov
clc
nop
nop
nop
nop
jae
add
mov
push
out
bound
add
push
clc
nop
nop
nop
nop
jae
in
add
push
jg
xchg
add
add
xchg
clc
nop
nop
nop
nop
jae
lahf
into
mov
dec
add
dec
add
and
nop
nop
nop
nop
jae
add
add
imul
xor
and
add
inc
push
push
add
push
clc
nop
nop
nop
nop
jae
add
xchg
add
dec
pop
add
jne
clc
nop
nop
nop
nop
jae
outsb
inc
add
sbb
add
scas
adc
pop
xor
clc
nop
nop
nop
nop
jae
outsb
add
xor
out
rclb
jmp
mov
sbb
add
clc
nop
nop
nop
nop
jae
and
push
sbb
ljmp
dec
or
clc
nop
nop
nop
nop
jae
dec
add
inc
add
mov
test
nop
push
mov
leave
cs
add
mov
xchg
add
je
repnz
push
clc
nop
nop
nop
nop
jae
cmc
hlt
mov
add
mov
add
add
es
cmp
shrb
pop
mov
rclb
jmp
add
add
add
add
ret
and
js
inc
add
sbb
rolb
jg
add
add
inc
jl
cmpw
nop
push
mov
leave
cs
aam
jns
test
fwait
clc
nop
nop
nop
nop
jae
add
add
rolb
push
mov
add
xchg
pop
clc
nop
nop
nop
nop
jae
js
xor
sbb
xor
pop
inc
push
push
mov
xchg
ret
add
or
add
add
js
outsb
add
nop
nop
nop
jae
add
add
mov
nop
nop
nop
nop
jae
add
lret
add
pop
out
add
and
add
nop
nop
nop
nop
jae
add
dec
add
add
add
sti
sub
nop
push
mov
leave
cs
add
mov
add
into
lods
pop
test
clc
nop
nop
nop
nop
jae
add
mov
add
xor
lea
clc
nop
nop
nop
nop
jae
mov
add
add
push
lods
push
fwait
pop
push
mov
xchg
ret
xchg
add
add
xchg
add
sbb
fistpl
push
mov
xchg
ret
ret
pop
add
pop
xchg
add
add
sub
push
mov
divl
std
push
jns
add
pop
leave
hlt
xchg
mov
mov
clc
nop
nop
nop
nop
jae
ret
lret
cwtl
aad
popf
test
rol
les
push
mov
xchg
ret
outsb
add
push
add
push
outsb
add
pop
nop
push
mov
leave
cs
push
sub
add
test
fs
sbb
nop
push
mov
leave
cs
dec
jb
add
add
mov
xchg
ret
add
add
add
push
add
pop
fisttpl
nop
nop
nop
nop
jae
add
aam
add
or
inc
add
add
and
dec
xor
add
inc
mov
mov
nop
push
mov
leave
cs
add
xor
xor
or
inc
add
add
mov
test
add
add
pop
inc
add
loop
add
xor
test
movl
in
inc
add
popf
add
outsb
add
xchg
xchg
fisubrl
add
nop
nop
nop
nop
jae
mov
add
lods
sarb
sub
push
mov
xchg
ret
push
sbb
add
add
add
insb
inc
jb
clc
nop
nop
nop
nop
jae
xchg
push
add
pop
add
lods
nop
fstps
nop
nop
nop
nop
jae
add
add
add
push
aam
cwtl
add
in
push
loopne
mov
xchg
ret
aam
lahf
outsb
add
pop
push
aad
mov
call
clc
nop
nop
nop
nop
jae
ljmp
test
and
nop
nop
nop
nop
jae
xor
add
jg
add
clc
nop
nop
nop
nop
jae
add
add
add
cmc
add
mov
rep
nop
push
mov
leave
cs
mov
cwtl
add
and
push
mov
leave
cs
out
add
push
outsb
and
add
jb
movzwl
clc
nop
nop
nop
nop
jae
in
add
add
xchg
xchg
clc
nop
nop
nop
nop
jae
in
add
add
out
add
cmpsb
jb
loopne
subb
nop
nop
nop
jae
add
js
add
add
mov
xchg
ret
add
add
hlt
cwtl
dec
mov
push
push
nop
push
mov
leave
cs
sub
ljmp
inc
pop
jmp
nop
nop
nop
nop
jae
jb
sbb
add
pop
add
mov
nop
nop
nop
nop
jae
inc
aam
ret
add
cmc
add
lret
mov
stos
lock
xor
loop
mov
push
mov
xchg
ret
outsb
lret
add
add
add
add
lahf
pop
sub
nop
nop
nop
jae
bound
add
cwtl
add
stos
sarb
pop
push
mov
xchg
ret
or
mov
jg
add
add
add
inc
roll
nop
nop
nop
jae
inc
mov
add
popf
testl
clc
nop
nop
nop
nop
jae
jns
add
add
add
clc
nop
nop
nop
nop
jae
mov
outsb
add
xchg
dec
jge
clc
nop
nop
nop
nop
jae
add
sbb
add
pop
add
faddp
add
cli
data16
push
mov
xchg
ret
add
ret
add
add
xchg
and
stos
adc
and
in
leave
cs
add
in
bound
xor
in
add
add
add
add
add
push
add
cld
add
loop
xchg
test
nop
push
mov
leave
cs
outsb
push
dec
xchg
mov
in
nop
test
nop
nop
nop
nop
jae
mov
bound
add
add
add
push
ret
add
push
mov
xchg
ret
add
add
xor
add
nop
nop
nop
jae
add
sbb
js
pop
add
test
pushl
clc
nop
nop
nop
nop
jae
add
aam
add
push
mov
flds
add
inc
in
xchg
add
add
faddl
lcall
int
aas
adc
cs
popf
xchg
add
sbb
sub
test
fld1
clc
nop
nop
nop
nop
jae
mov
inc
add
out
popf
add
add
pop
clc
nop
nop
nop
nop
jae
add
ljmp
fld1
clc
nop
nop
nop
nop
jae
mov
aam
xchg
add
xchg
jns
popf
imul
nop
nop
jae
add
add
bound
add
add
pop
clc
nop
nop
nop
nop
jae
xchg
add
ret
pop
push
pop
add
add
shr
clc
nop
nop
nop
nop
jae
add
push
add
add
xor
mov
add
clc
nop
nop
nop
nop
jae
push
test
add
and
rclb
nop
push
mov
leave
cs
push
add
inc
add
add
mov
mov
xchg
ret
in
add
pop
pop
ljmp
inc
addr16
clc
nop
nop
nop
nop
jae
or
into
cs
mov
nop
nop
nop
jae
xchg
mov
add
add
clc
nop
nop
nop
nop
jae
outsb
add
xor
dec
dec
outsb
mov
in
leave
cs
pop
ljmp
mov
add
pop
push
mov
xchg
ret
mov
push
and
and
push
push
mov
xchg
ret
and
push
xchg
add
add
add
clc
nop
nop
nop
nop
jae
sbb
mov
xchg
jns
jg
cmc
add
mov
nop
nop
nop
nop
jae
fiadds
or
xor
add
push
mov
aam
mov
aas
dec
add
push
sub
xor
add
repz
nop
nop
nop
nop
jae
add
add
add
pop
add
add
fincstp
jmp
nop
jae
xor
push
mov
lahf
add
lods
and
clc
nop
nop
nop
nop
jae
add
add
pop
clc
nop
nop
nop
nop
jae
mov
add
lret
bound
pop
push
add
jmp
mov
jbe
add
mov
add
push
xchg
daa
sub
hlt
push
pusha
add
cmc
call
clc
nop
nop
nop
nop
jae
ljmp
push
ljmp
push
mov
xchg
ret
add
push
add
xor
add
push
cmpsl
adc
les
inc
clc
nop
nop
nop
nop
jae
in
aad
add
or
rolb
xor
add
subl
nop
nop
nop
jae
add
cmc
add
out
add
add
xor
push
clc
nop
nop
nop
nop
jae
xchg
add
cmc
and
add
inc
jg
testl
nop
nop
nop
nop
jae
add
push
add
adc
clc
nop
nop
nop
nop
jae
add
out
cwtl
mov
loope
push
mov
xchg
ret
ret
add
add
inc
xchg
cwtl
add
and
push
pop
mov
clc
nop
nop
nop
nop
jae
add
add
aad
add
ret
add
nop
push
mov
leave
cs
sbb
add
sbb
gs
repnz
cli
mov
clc
nop
nop
nop
nop
jae
add
sbb
sti
push
push
mov
xchg
ret
add
out
pop
add
xor
push
push
mov
xchg
ret
push
add
inc
sbb
add
mov
push
jns
push
mov
xchg
ret
gs
push
add
pop
sub
lahf
add
xchg
and
nop
nop
nop
nop
jae
cmc
dec
add
sbb
icebp
pop
push
mov
xchg
ret
lahf
and
add
bound
add
mov
nop
push
mov
leave
cs
add
add
add
push
clc
nop
nop
nop
nop
jae
je
mov
jb
add
add
add
nop
nop
nop
jae
push
into
add
xchg
add
sbb
push
mov
xchg
ret
pop
inc
test
shlb
popf
lods
push
mov
xchg
ret
bound
mov
add
outsb
add
and
mov
xchg
ret
popf
sbb
sbb
add
mov
add
pop
clc
nop
nop
nop
nop
jae
fidivs
add
add
cmp
add
clc
nop
nop
nop
nop
jae
lahf
add
add
js
mov
clc
nop
nop
nop
nop
jae
inc
add
add
add
add
push
repnz
decl
aam
fsubrp
add
or
add
in
test
cli
clc
nop
nop
nop
nop
jae
ret
add
xor
mov
call
nop
push
mov
leave
cs
push
add
add
into
js
pop
rep
clc
nop
nop
nop
nop
jae
push
add
cwtl
add
pop
add
add
imul
add
sbb
add
cmc
xchg
add
call
add
cmp
nop
nop
nop
jae
xchg
sub
sbb
add
add
add
nop
push
mov
leave
cs
fisubs
mov
add
add
nop
nop
nop
nop
jae
jb
push
test
jg
repnz
mov
xchg
ret
popf
xchg
add
fisubrs
jb
mov
mov
push
mov
xchg
ret
cwtl
ljmp
sub
push
pop
add
nop
push
mov
leave
cs
into
add
add
add
ja
clc
nop
nop
nop
nop
jae
add
add
mov
xor
sbb
rclb
jb
add
push
add
add
push
aad
mov
repnz
jp
imul
clc
nop
nop
nop
nop
jae
bound
add
xchg
add
add
xor
pop
push
mov
xchg
ret
cmc
add
mov
in
into
add
rcll
push
mov
leave
cs
add
add
aam
add
clc
nop
nop
nop
nop
jae
add
rolb
lret
call
inc
add
push
and
push
lret
sbb
mov
mov
xchg
ret
dec
add
push
add
pop
add
add
mov
clc
nop
nop
nop
nop
jae
sub
add
and
jmp
nop
nop
nop
jae
sbb
push
and
bound
cmc
pop
jl
mov
add
clc
nop
nop
nop
nop
jae
cmc
aad
je
add
popl
fimull
xchg
ret
aad
jb
loop
add
and
jnp
out
call
cs
or
add
fistl
in
add
js
add
add
inc
mov
cmp
dec
mov
clc
nop
nop
nop
nop
jae
add
add
fiadds
dec
add
sbb
nop
push
mov
leave
cs
add
dec
add
test
sub
in
testb
add
mov
push
out
add
cmp
fidivl
add
add
lahf
inc
sub
jne
adc
mov
push
mov
jb
mov
and
dec
pop
or
add
jle
mov
in
lahf
pop
add
mov
mov
inc
adc
xor
pop
aaa
jb
mov
call
mov
mov
fcomip
movl
sub
call
andb
pop
punpckhwd
mov
xor
xor
xor
xchg
mov
fcoms
mov
nop
mov
pusha
in
imul
test
int3
std
ret
fiadds
mov
mov
adc
sbb
ret
mov
push
cmp
push
in
shlb
xor
adc
nop
imul
push
xor
dec
out
int3
push
mov
out
call
ja
out
sub
scas
xchg
mov
and
mov
fwait
mov
outsb
xchg
mov
mov
aam
sahf
mov
repz
aad
cmp
sbb
stc
inc
pop
jle
negl
sarl
xchg
xor
push
ret
mov
dec
shl
lcall
dec
sbb
mov
mov
xor
push
into
adc
sub
mov
stc
cmp
sub
xlat
mov
xchg
or
jo
mov
pop
adc
jae
mov
pop
test
ss
mov
gs
mov
xchg
mov
aaa
xor
aad
jmp
mov
out
mov
mov
nop
mov
pop
or
shlb
sahf
mov
mov
mov
or
testb
cltd
pop
pop
push
call
sbb
add
inc
jmp
out
pop
pop
es
jo
xor
out
je
in
lea
mov
orl
rcrb
call
sarb
adc
stos
scas
xorl
pop
shll
mov
adc
in
ss
bnd
mov
xor
sbb
mov
sub
cmp
imul
xor
push
aas
push
fcomps
outsl
int3
sub
loope
mov
fnstsw
scas
push
daa
push
aas
clc
xor
sbb
cld
mov
in
pop
sahf
mov
adc
pop
dec
aad
push
mov
divb
xor
rolb
loopne
mov
pop
xchg
call
dec
fnstcw
xchg
lahf
add
adc
es
lcall
jbe
jae
push
adc
pop
jmp
pop
dec
cmp
es
mov
lahf
jo
jle
xchg
ja
fsts
daa
repnz
rcrl
mov
in
lahf
push
or
test
lahf
xor
or
add
lock
nop
xchg
pop
inc
fimuls
mov
enter
lahf
shrb
cmpsl
mov
and
pop
xor
lods
and
popf
xchg
hlt
pop
js
jmp
and
pushf
lahf
jo
or
adc
lcall
pushl
loope
rorb
nop
jb
ret
movsb
les
enter
ror
fnstcw
xchg
mov
insb
clc
xchg
lahf
lock
jecxz
adc
iret
mov
je
aam
lahf
xor
dec
fwait
popf
and
push
lahf
shlb
add
mov
xchg
jo
out
lahf
push
push
jo
lahf
lock
mov
and
js
les
dec
jg
lahf
xor
push
and
int3
out
xor
ds
pop
mov
ror
es
cld
jo
jmp
mov
jo
pop
mov
and
dec
push
cmp
mov
xor
pushf
sahf
mov
dec
ss
mov
lock
lods
jg
arpl
adc
mov
jno
adc
lahf
xor
jb
sahf
rclb
mov
icebp
jne
mov
mov
mov
sahf
push
test
aam
xlat
inc
mov
mov
sub
inc
xchg
sahf
sar
stos
inc
push
or
dec
inc
inc
or
xor
mov
mov
dec
mov
sahf
push
enter
push
xor
mov
scas
adc
push
imull
incb
aam
roll
xchg
pop
lcall
aad
pop
mov
out
int
or
push
pop
sub
add
repz
cmp
outsl
push
aaa
mov
cmc
insb
mov
cmpsl
inc
gs
sub
sbb
repnz
aaa
adc
xlat
cli
cmp
repz
ljmp
sbb
js
sahf
xor
sahf
lock
out
dec
bound
ret
push
popf
xor
testl
cmpsb
shl
cld
pop
pop
in
jne
adc
js,pn
leave
loope
movsb
out
popf
rclb
call
xor
popf
lock
jmp
sbb
mov
xor
nop
popf
rorb
popf
push
and
push
xor
lock
mov
pop
mov
popf
sarb
fistpl
popf
lock
pop
mov
jp
lds
jns
popf
jo
or
mov
popf
adc
in
mov
sbb
ljmp
jno
fcomps
ja
jmp
subl
sbb
rcrb
inc
sub
lret
sub
lods
aam
aaa
push
popf
nop
or
popf
jo
daa
ds
rcll
mov
popf
lock
jbe
cmp
popf
bound
popf
jo
lahf
xchg
shll
push
popf
rolb
popf
nop
icebp
pop
dec
les
sub
ss
fnstcw
out
imul
ljmp
add
pop
push
xor
lcall
and
pushf
lock
xchg
jae
and
imul
shrb
pushf
nop
mov
pushf
lock
mov
or
sub
adc
leave
jle
and
mov
push
hlt
lret
into
mov
pop
call
pushf
jo
sbb
cwtl
pushf
jo
pushf
adc
sbbb
les
lock
lods
mov
into
es
lahf
jnp
inc
cmpsl
add
sub
ljmp
pushf
jo
mov
adc
pushf
nop
sbb
mov
pushf
lock
stos
mov
ds
sbb
div
shlb
mov
outsb
outsl
jle
lret
adc
pop
fidivrl
or
shl
adc
jg
push
adc
inc
dec
roll
pushf
push
jg
jno
or
nop
popa
test
cmp
jge
jne
sub
cwtl
pushf
mov
dec
in
or
mov
mov
pushf
xor
dec
std
mov
xchg
xchg
insb
jo
xchg
mov
push
int3
ret
sbb
sub
icebp
shll
push
fwait
ror
popa
inc
lods
push
std
fiaddl
sarb
pop
cmp
out
push
fwait
xor
aaa
sbb
push
xchg
fwait
nop
cli
mov
fwait
adc
int
in
dec
out
sbbb
mov
add
fwait
lock
mov
rol
add
xor
ret
cmp
jl
pop
pop
adc
fwait
nop
sbb
nop
inc
mov
into
pop
push
fwait
adc
cmp
fwait
mov
fwait
push
xlat
dec
pop
test
xsha256
cmpsb
adc
fwait
xor
jo
call
sbb
ljmp
or
pop
cmp
lahf
daa
lcall
xchg
xor
in
mov
cmp
jge
jl
lods
sbbb
and
and
jl
fdivrs
add
xchg
callw
fldl
sub
cmp
pushf
lcall
aas
mov
adc
jo
lcall
push
adc
lcall
dec
out
mov
lcall
lcall
shlb
out
and
adc
sbb
inc
test
lcall
push
lcall
out
jl
mov
ret
push
lcall
xor
push
pop
popa
inc
add
clc
hlt
dec
xchg
gs
sub
push
mov
fs
imul
ss
lock
lcall
lods
scas
scas
inc
mov
lcall
idiv
clc
fmuls
jbe
repz
cmp
lret
lock
mov
pusha
imul
mov
sbb
fwait
insb
add
lcall
xor
lods
or
jb
lcall
inc
push
clc
sti
inc
sbb
add
test
jb
sbb
pop
add
repnz
lock
lods
cltd
fistpll
sbb
cltd
shlb
lret
or
xlat
sbb
sbb
pop
iret
into
arpl
cld
cmp
mov
pop
xchg
mov
adc
adc
cld
lret
or
or
or
mov
cltd
nop
je
dec
sarb
xchg
mov
ret
adc
cltd
mov
mov
popf
or
push
mov
cltd
lock
and
test
inc
movsl
gs
and
sbb
popf
mov
lcall
out
and
cmp
xor
dec
inc
imul
cltd
jo
sub
mov
enter
sarl
sbb
out
test
nop
mov
repz
sub
mov
pop
xchg
sbb
sub
or
test
mov
sbb
test
movsl
insl
jb
cwtl
adc
popf
dec
addps
and
pop
sbbb
mov
and
push
loopne
mov
xor
cwtl
nop
lock
xchg
nop
cwtl
rclb
sub
shl
push
cwtl
nop
jnp
and
jg
sbb
cwtl
xor
or
jecxz
push
cwtl
xor
cwtl
push
cs
inc
pop
jmp
addr16
mov
cmpsb
mov
mov
push
mov
mov
dec
dec
jmp
adc
mov
cmp
mov
pushf
cwtl
adc
jmp
cli
push
cwtl
rorb
mov
fwait
ret
dec
add
and
mov
add
mov
ret
mov
adc
push
cwtl
nop
insb
icebp
les
scas
xchg
cwtl
shlb
add
adc
aad
add
push
pandn
cwtl
lock
cmp
xchg
cwtl
mov
dec
call
lret
rol
enter
nop
cwtl
xor
ja
arpl
adc
icebp
adc
mov
add
lock
in
out
xchg
lock
sbb
in
inc
daa
scas
jmp
adcb
mov
insl
adc
xor
jl
movsb
push
xchg
lock
xchg
xchg
rolb
call
sub
sti
push
aam
fistl
xchg
mov
shrb
and
xor
mov
sbb
das
and
mov
loopne
xchg
xchg
push
inc
mov
inc
sbbl
pop
adc
shr
call
lds
xchg
xor
cmpsb
jnp
xchg
adc
pop
and
aaa
cmpsb
sub
scas
nop
xchg
nop
repz
xor
jae
xchg
adc
xchg
xor
xchg
lock
int3
inc
dec
inc
fnstenv
shrb
xlat
xchg
xchg
adc
mov
scas
pop
or
xchg
nop
icebp
pop
ss
cmpsb
xchg
xchg
adc
xor
xchg
adc
dec
pop
pop
incl
inc
mov
sub
xchg
mov
stos
int
iret
out
xorl
xorl
fdivl
sbb
jo
out
icebp
mov
test
or
push
xchg
adc
xchg
nop
int
and
jl
sbb
jmp
mov
push
xchg
xchg
push
push
add
mov
je
bound
hlt
ficoml
rsqrtps
outsl
mov
nop
xchg
mov
scas
jne
cld
jmp
cmp
cmp
cmp
mov
mov
push
mov
jg
mov
pop
xchg
xchg
nop
or
iret
movsb
imul
xchg
jecxz
fsubl
fdivl
push
mov
scas
lcall
xchg
jo
xchg
mov
adc
in
pop
leave
mov
mov
xchg
xor
mov
adc
dec
sahf
xchg
lock
adc
imul
mov
jnp
enter
inc
pop
jno
jo
push
out
mov
ds
mov
xchg
lock
pop
in
jecxz
out
pop
inc
add
xor
outsb
sub
sbb
rcrb
xchg
lock
xchg
xchg
xor
scas
push
xchg
shrb
inc
fisubrl
mov
jno
mov
daa
lahf
cmc
mov
add
inc
shll
aaa
jo
int
std
aam
aas
clc
insl
pop
xchg
mov
adc
xchg
adc
popf
cltd
jl
mov
jge
xchg
push
xchg
jo
xor
pusha
or
lock
cltd
aaa
daa
les
adc
cmp
mov
movsb
cmc
aaa
dec
js
xchg
jo
cmpsb
cmp
jge
mov
xor
scas
adc
adc
add
inc
push
xchg
xor
fildl
dec
pcmpgtb
xchg
lock
xchg
mov
adc
xchg
lock
andl
lret
shrb
sbb
jo
inc
enter
mov
sti
inc
inc
fnsave
jmp
mov
xchg
std
rolb
stos
mov
xchg
nop
push
imul
imul
add
mov
cmp
fadd
jmp
sub
cltd
sub
movsl
lds
mov
lret
sbb
xchg
xchg
adc
push
xchg
nop
mov
xor
pop
xchg
lret
xlat
loop
xchg
mov
push
in
xchg
push
xchg
gs
xchg
rorb
rorb
lock
out
cmp
lock
push
fmull
xor
adc
xchg
adc
dec
mov
cs
xorl
jae
loope
cwtl
xchg
push
outsl
fcmovb
into
jecxz
jae
xchg
xor
test
xchg
nop
out
mov
jne
inc
rclb
cmp
int
cmp
mov
outsb
jo
xchg
lock
pop
movsb
aaa
arpl
iret
or
jo
xchg
adc
pusha
or
xor
inc
js
xchg
sar
or
fcoms
cli
mov
lret
les
in
xor
ja
mov
enter
lahf
das
sahf
xchg
xor
mov
xchg
nop
int
push
mov
xchg
xor
rcr
aad
push
xchg
nop
xchg
loope
jmp
adcb
jmp
pop
shll
xchg
xchg
jo
ficoml
clc
mov
inc
dec
cmp
sub
and
jns
or
jo
fs
xchg
int3
insb
push
sub
aad
pop
or
shlb
push
xchg
nop
popf
cmp
jge
jmp
fs
and
insb
cmp
aam
out
mov
xchg
push
add
xchg
mov
in
cmpsl
iret
lock
iret
ret
pop
mov
imul
repnz
sub
sub
mov
pop
mov
jo
jnp
ds
test
adcb
xchg
lock
push
xchg
adc
pusha
fsubs
lock
xchg
mov
sub
scas
push
lea
divl
out
pusha
in
mov
insl
jmp
and
mov
jl
push
inc
inc
dec
add
jo
push
xchg
jo
pop
adc
cld
jmp
and
and
jne
push
and
push
adcb
xchg
lock
add
sbb
jp
lods
inc
cmpsl
mov
rcr
sahf
xchg
push
cmpsl
dec
sub
testl
lock
push
xor
or
mov
push
loope
outsb
in
adc
push
xchg
xor
adc
inc
std
aas
mov
xchg
xchg
lock
aam
test
adc
xchg
xor
sti
lods
sbb
nop
jg
ret
pusha
cmpsl
add
repz
test
push
xchg
mov
fistpll
xchg
lock
mov
lret
push
mov
cmpsb
fidivs
jo
sub
cmp
xor
loopne
xchg
shl
and
leave
cmp
ja
push
in
out
jns
sbb
mov
mov
pop
popf
movzwl
fcmovu
dec
push
mov
jno
cwtl
xchg
lock
leave
movsb
cmpsl
sbb
mov
pop
scas
add
in
daa
divl
pop
adc
xchg
fwait
xor
aam
push
xchg
lock
aad
lcall
jo
xor
xchg
xor
xchg
adc
lock
clc
push
xchg
lock
lahf
loope
es
xor
dec
mov
repnz
xchg
push
cmc
cmc
repnz
push
xchg
xor
sub
aad
xchg
mov
leave
lds
and
dec
test
xchg
xchg
nop
bound
aas
out
jns
mov
pop
adc
rcr
mov
mov
loop
into
push
cld
mov
xchg
lock
pop
dec
mov
pop
xchg
xchg
nop
pusha
insl
adcl
xchg
out
xchg
shlb
inc
shl
jmp
mov
xor
xchg
sarb
in
mov
adc
adc
xchg
nop
push
sbb
adcb
testl
mov
loopne
leave
movsw
sub
adc
repz
and
aad
mov
xchg
jo
or
fidivs
les
xchg
push
jecxz
xchg
xor
pop
xor
mov
xchg
push
push
sarl
dec
in
pop
mov
adc
pop
sub
cmp
jo
cmc
ds
lock
inc
mov
push
pop
loope
adc
lret
loope
add
fstps
jne
ret
pop
cmp
xor
ss
add
adc
mov
pushf
xchg
push
mov
xor
cmp
nop
push
repnz
cltd
in
jle
dec
clc
fcomi
jge
nop
mov
fisubl
popf
in
adc
adc
lds
jbe
scas
dec
sbb
cmp
rcrb
nop
mov
sbb
sbb
mov
rcrb
nop
daa
cmp
mov
xlat
xchg
cmp
mov
and
movsl
sbb
fldcw
in
jle
mov
notl
xchg
into
xchg
nop
xor
jbe
scas
dec
dec
push
out
cli
adc
push
mov
ja
jbe
test
mov
xorl
and
jp
mov
nop
mov
add
lock
fdivrl
inc
ss
sub
nop
nop
jns
cmp
rclb
lods
ja
mov
ret
mov
mov
mov
stos
jbe
pusha
jl
nop
jo
push
dec
mov
addr16
push
nop
xor
popf
aad
and
or
nop
adc
cwtl
nop
jo
nop
shlb
rcrl
push
cmp
scas
jae
aam
mov
insb
faddl
rcl
adcl
mov
adc
dec
lods
movsl
test
arpl
mov
xor
mov
lret
sub
std
inc
jbe
mov
insb
cmc
sub
add
push
adc
inc
imul
inc
sbb
stos
adc
push
push
xor
daa
add
cs
popa
xor
pop
aad
lret
sbb
and
xchg
lret
inc
shrb
adc
sub
lock
sbb
nop
daa
call
nop
xor
int
cmp
cmpsl
orb
nop
lods
inc
jns
lds
dec
ja
js
clc
orb
mov
mov
shlb
cmpsb
std
cmpsl
mov
push
adc
out
rcr
add
adc
cli
mov
mov
fisubs
das
test
stos
pusha
sbb
orl
mov
xchg
mov
mov
adc
mov
jnp
lret
cmc
lcall
les
pop
movsl
pop
and
ret
xchg
cmc
xor
push
mov
scas
mov
pop
lea
xchg
cwtl
mov
negl
fnstenv
pushf
mov
js
dec
mov
sub
pop
pop
push
jecxz
lods
push
or
cld
sub
mov
sub
addl
pop
dec
flds
mov
mov
fwait
popf
jmp
sub
aam
mov
mov
aad
loopne
outsb
mov
pushf
mov
cltd
pavgb
int
mov
fidivrs
xor
pop
mov
mov
mov
lret
push
sti
dec
lcall
xor
jne
aad
cmp
sub
push
leave
hlt
loope
lret
sub
mov
sarl
jl
dec
mov
inc
subl
mov
xchg
inc
add
adc
cmpsl
sbb
or
xor
stos
adc
insl
sub
push
mov
push
insl
mov
lock
jecxz
je
fwait
dec
mov
outsb
mov
rorl
repz
add
lods
jg
scas
sub
jne
lahf
out
push
enter
adc
add
lea
add
in
mov
in
dec
addr16
nop
lea
arpl
into
xor
mov
stc
mov
aaa
xor
add
jo
loop
lea
daa
xlat
xor
adc
xor
push
std
jne
mov
xor
inc
repnz
rcrb
jbe
add
lock
jg
sbb
call
sub
jo
xchg
les
pop
outsl
lods
mov
ja
lea
repnz
jg
ljmp
xor
cmp
lea
ret
lock
subl
cmp
push
lea
popf
nop
lea
pop
ljmp
adc
ds
es
rcrl
test
gs
inc
out
inc
lods
andl
aad
push
sarb
sbb
push
daa
cmp
xor
mov
daa
aam
enter
push
mov
in
jae
push
inc
fcomps
mov
xor
jb
adc
out
shlb
mov
outsb
int
xor
incb
nop
ret
ja
mov
jle
out
xchg
mov
jne
jmp
fwait
mov
sti
repz
inc
test
dec
mov
enter
adc
jge
inc
xchg
push
mov
mov
and
adc
jo
mov
pop
fxch
add
mov
outsb
testl
syscall
jg
fisubl
mov
mov
aad
adc
xor
push
dec
cld
orb
push
mov
mov
cmpsb
push
inc
xchg
mov
add
mov
add
xor
cmc
lods
in
decl
mov
inc
mov
fwait
mov
lods
shll
jb
xlat
pop
push
out
xchg
mov
inc
rolb
inc
out
out
sub
mov
fnstcw
add
jno
orb
nop
out
dec
pop
push
lock
std
fnstcw
pop
fcoml
adc
inc
in
repz
xchg
mov
ret
fisttps
mov
arpl
ficompl
jp
xor
push
mov
test
mov
inc
jl
mov
stos
push
mov
ljmp
test
shlb
dec
dec
mov
jg
lock
test
mov
push
cmp
pop
push
jl
in
rclb
mov
lret
ds
jns
sub
test
push
xor
arpl
and
popa
ja
sti
lret
cmp
mov
adc
mov
mov
and
imul
mov
jno
jle
add
mov
in
test
adc
orb
insb
mov
jle
test
push
arpl
mov
cmp
push
mov
fs
loopne
sub
cmp
inc
nop
mov
fdivs
add
scas
stos
cmp
jl
cmp
rolb
mov
or
and
jecxz
lahf
pop
fsub
cmovle
mov
add
lock
shrb
sub
mov
fstpl
cmpsb
mov
mov
lock
int3
cltd
and
mov
fidivrs
dec
cmp
fstpt
scas
and
orb
repz
sti
push
fildll
scas
dec
jecxz
mov
test
xchg
mov
ret
push
addr16
inc
push
cwtl
mov
mov
sbb
xor
ja
mov
loopne
mov
xor
mov
je
in
mov
jge
mov
cmpsl
shll
fimull
mov
in
mov
inc
mov
out
mov
mov
jb
jbe
pop
data16
inc
daa
pop
mov
mov
push
iret
inc
icebp
xchg
mov
push
inc
push
sbb
test
hlt
and
pop
mov
test
ret
test
stc
push
sbb
arpl
adc
jge
xchg
jo
jbe
jle
sub
nop
mov
xchg
push
cld
lods
sahf
mov
lcall
scas
push
adc
test
adc
adc
or
inc
mov
mov
mov
out
sbb
test
inc
stos
aaa
data16
loop
pop
dec
inc
sti
out
pop
xlat
push
xchg
mov
mov
xlat
jbe
jg
mov
push
mov
mov
jo
mov
mov
cmpl
or
adc
cmp
mov
jge
sar
lret
in
and
push
mov
scas
xlat
sbb
adc
mov
or
mov
adc
mov
jl
movsb
sub
mov
std
mov
mov
or
jle
out
outsl
cmp
outsb
out
pop
inc
addr16
mov
repnz
shlb
imul
rclb
call
jge
mov
sbb
dec
movsb
or
mov
push
push
or
mov
xchg
lock
nop
addr16
mov
push
mov
dec
insb
fldl
roll
mov
cwtl
mov
enter
dec
imul
mov
mov
loope
mov
add
push
in
mov
mov
orb
pusha
push
test
mov
data16
mov
dec
jo
mov
mov
xor
mov
nop
cmp
leave
lods
out
mov
xlat
mov
rclb
in
cmpsl
pop
sbb
xor
or
mov
or
mov
push
lods
repz
cmpsb
sbb
lock
mov
jns
test
orb
or
mov
popa
test
nop
cltd
xchg
hlt
lods
sbb
jo
ficoml
jbe
cmc
ret
sub
push
mull
aam
or
ror
es
adcl
pop
mov
aaa
mov
sbb
mov
and
je
das
movsb
jl
test
movsb
pop
xchg
stc
shlb
mov
push
notl
mov
pop
aad
cmpsb
sahf
mov
jns
mov
mov
push
mov
and
jns
and
in
out
lahf
xor
xchg
gs
clc
adc
and
jle
lds
inc
rolb
ljmp
jbe
xor
aad
imul
xchg
inc
and
jne
test
jbe
xor
fisubrs
cmp
outsb
outsb
sub
push
xchg
or
nop
enter
mov
lock
xchg
xchg
cmpl
xchg
sbb
popa
scas
cltd
in
testb
adc
shll
xchg
sarl
lock
lea
sahf
xchg
sbb
jmp
cmp
daa
dec
cld
pop
paddd
add
xor
fisttps
xchg
adc
bound
out
inc
adc
fwait
cli
jno
std
outsl
cmp
loope
xchg
popf
push
cmpsb
lds
out
test
xor
fsubrl
xchg
xchg
xchg
jb
addb
cmpsb
xor
jns
mov
ror
lea
popf
mov
idivl
clc
mov
and
mov
ljmp
or
inc
fsubs
xor
mov
stos
fcomi
cld
loope
or
cwtl
xchg
mov
out
pop
adc
adc
mov
xlat
je
fwait
pop
push
test
std
stos
int
dec
adc
movsb
add
xchg
dec
inc
out
aam
jns
shl
and
iret
cmp
xchg
loopne
ret
sbbl
jnp
rorl
sub
xchg
clc
dec
cwtl
xchg
sub
ficompl
sahf
xchg
xchg
push
xchg
ret
and
rcrb
pop
mov
jnp
mov
xchg
xchg
xchg
test
das
mov
sbb
push
sub
cmc
addr16
add
xchg
test
xchg
jb
add
mov
testl
cltd
and
lret
mov
sti
repz
push
mov
jo
mov
cmp
pop
xor
cwtl
xchg
fisubs
rcl
in
xchg
jne
xchg
fstps
inc
add
or
pushf
test
xor
enter
adc
popf
inc
xchg
test
aam
xchg
bound
mov
cmp
es
jle
hlt
or
mov
jo
test
jp
mov
jo
jbe
iret
xchg
test
repnz
jg
pushf
test
test
mov
das
addr16
out
and
loop
adc
jmp
dec
and
btl
fs
jle
mov
jo
jne
cmc
lcall
leave
cmp
xchg
mov
push
test
test
inc
in
push
outsb
or
mov
jne
test
add
test
sub
test
cli
outsb
popa
inc
inc
in
jle
inc
loope
ficoml
test
sbb
das
enter
test
add
test
xchg
add
mov
adc
inc
in
push
icebp
push
push
test
pushf
test
inc
pop
fistps
aam
inc
jae
in
shll
sbb
test
movsb
sbb
push
aaa
push
test
jge
lds
lock
popf
ljmp
ja
dec
cmp
ret
adc
sub
jle
test
insl
push
and
jo
in
loope
and
lahf
or
movsl
mov
mov
and
push
sub
jle
test
test
cmpsb
sbb
jo
out
test
lock
outsb
adc
add
roll
cmp
jno
xor
ret
imul
xchg
test
jb
das
xor
movsl
idivb
daa
addr16
jo
popa
rolb
fsubl
jno
sbb
test
dec
mov
sbb
xor
ret
xchg
test
nop
test
insb
dec
sub
imul
mov
xlat
xchg
icebp
dec
mov
inc
inc
stos
add
mov
mov
rolb
out
cmp
mov
jns
dec
out
psubw
nop
xorl
adc
xorl
nop
addb
int
jecxz
adcl
dec
push
pusha
lds
in
push
xor
or
adc
fucomp
mov
pop
and
lea
imul
lds
mov
test
fdivr
es
pusha
sub
aad
mov
xor
cmp
or
pop
in
sbb
xor
ljmp
jne
sub
dec
fwait
pop
stos
sub
sahf
adcl
pop
cmp
dec
xlat
jnp
lods
pop
pusha
mov
pop
or
push
ja
adc
shlb
xor
lock
dec
aad
and
shrb
pop
pop
lock
xorl
push
adcl
cmp
and
add
jo
jnp
xchg
or
mov
cltd
aad
insl
push
xorl
cmp
adcl
and
cmp
sub
pop
ljmp
pop
adc
in
cmp
mov
fdivl
xor
xorb
sub
mov
xchg
xorb
stos
add
lret
mov
rclb
adc
and
shll
shll
jecxz
in
fmull
and
push
out
adc
or
or
fldl
mov
mov
mov
and
adcb
addb
rolb
sahf
xor
mov
sti
pop
sub
gs
popf
ret
and
xchg
mov
xor
adc
nop
xorb
mov
adcb
out
lea
adc
jp
icebp
add
adc
xor
loope
adcb
enter
shrb
pusha
scas
mov
into
lods
rcrl
xorb
push
cwtl
xorb
movsb
fimuls
shr
les
ljmp
das
add
fisttps
xor
aam
cltd
xor
out
xchg
inc
clc
jmp
xchg
adc
shlb
push
mov
clc
cmpsl
testl
je
insb
add
mov
pop
mov
push
pop
fs
shr
mov
xorl
ret
es
or
push
sbb
lea
inc
shlb
xorl
adc
cmpsb
mov
int3
add
adc
andl
adc
cltd
or
sub
adcl
xor
pop
fs
xorl
leave
sti
inc
cmc
test
or
xor
mov
sub
mov
mov
jo
jno
shl
inc
lahf
inc
sbb
push
fildl
dec
sahf
adcl
ror
mov
xor
cmp
or
push
xorl
lret
lret
es
stc
popf
xor
hlt
and
mov
hlt
dec
aaa
test
mov
jo
xor
insl
cld
add
shll
adc
xorb
cmp
xorb
fwait
push
adcb
lock
insl
aaa
dec
mov
sbb
data16
cld
mov
mov
shl
jge
outsb
leave
push
adcb
adc
iret
mov
mov
lods
and
js
sbb
les
inc
pop
mov
push
xorb
test
fidivs
sti
push
adcb
jbe,pt
push
inc
sbb
xor
mov
and
or
adc
xchg
xchg
mov
test
jo
ss
mov
add
pop
negb
mov
into
push
adc
pop
and
adcb
push
cmp
lea
jge
addb
lea
lahf
mov
ds
xor
push
and
xor
jmp
imul
aas
push
xor
shr
lds
jg
jg
jecxz
scas
inc
mov
jae
and
mov
cwtl
jg
jae
daa
xchg
mov
jg
push
sti
cld
cmp
hlt
sub
fmuls
int
divl
lcall
outsb
sub
in
jg
es
jg
mov
mov
jo
mov
xor
push
cmp
cs
mov
in
push
test
mov
and
or
and
mov
cmpb
jg
pop
sub
jg
addr16
mov
cwtl
jg
push
sub
aas
int
pop
mov
fmuls
jg
repz
sub
stc
push
out
push
jg
sbb
pop
mov
loop
jg
or
sbb
push
pop
lahf
mov
push
pop
dec
fisubl
adc
dec
in
in
mov
repz
jg
jae
add
shl
cmc
aas
push
jg
xor
jns
jg
pop
add
popa
leave
iret
pop
cmc
lods
ficompl
push
or
mov
gs
shl
fs
and
xchg
adc
xor
jg
imul
stos
jns
test
xchg
jg
sub
hlt
fimull
test
cld
das
cmp
jle
aaa
pop
or
sub
add
dec
movsl
fs
jge
dec
push
jle
leave
adc
jl
rcll
ljmp
cli
call
cwtl
jle
or
xchg
push
fdivl
mov
mov
jle
push
nop
jle
cmp
mov
fs
push
iret
xchg
jl
test
movsb
add
lods
inc
mov
adc
xchg
jle
push
outsl
dec
or
hlt
dec
cmpsl
mov
mov
jo
dec
xlat
outsl
xchg
jle
jl
mov
adc
xchg
loope
jle
test
addr16
lock
hlt
cmpsb
xchg
ret
mov
jl
out
arpl
pusha
test
testb
mov
inc
mov
imul
jle
mov
roll
cmpb
mov
jle
outsb
inc
cmpb
mov
test
ja
fistpll
xchg
mov
pop
push
jle
in
in
flds
mov
xchg
jle
mov
dec
push
xchg
mov
cmpsb
pop
push
xchg
jge
int
mov
jae
push
add
jge
pushf
jge
adc
shlb
cmpsl
mov
push
dec
call
popf
or
rorl
or
mov
loop
adc
ret
or
out
jge
imul
mov
cli
aas
mov
test
mov
hlt
jecxz
xor
mov
and
stos
dec
cmpb
jge
lods
mov
jge
aas
push
rcrl
cmpsb
test
popf
into
dec
cmp
xor
lock
xchg
int3
mov
ds
sbb
inc
xor
jge
stos
fistpll
fsubs
dec
xchg
lret
mov
std
xchg
imull
jl
inc
cmp
movsb
pop
repz
fisubs
jo
push
cld
pop
add
adc
mov
cmc
and
pop
dec
stc
dec
xchg
frstor
sub
cwtl
jge
push
jge
xor
in
sub
adc
xor
mov
lock
cmpb
lock
xchg
test
cmpb
pop
out
jbe
xor
jo
jle
cmp
push
gs
jl
mov
xchg
jl
leave
test
add
nop
in
daa
push
jl
cmc
push
jl
dec
push
jl
sti
fwait
iret
and
mov
xor
mov
cs
test
jnp
loop
loop
shl
mov
xor
iret
mov
xlat
repz
test
insl
imul
pusha
orl
es
repnz
rcll
inc
fwait
push
jl
xchg
test
lock
jl
fidivrs
jmp
jl
outsb
mov
jo
les
fsubl
out
pop
rcr
inc
push
cmp
clc
bound
imul
lock
cmp
cmpl
jl
cwtl
jl
dec
popf
sub
inc
mov
or
rorb
rolb
out
push
jl
adc
imul
shl
or
jnp
mov
loope
pushf
jl
mov
fcmovnb
xor
repnz
mov
push
jl
scas
inc
add
out
inc
pop
das
xlat
imul
in
pop
ljmp
push
fsubrs
push
into
and
xchg
jnp
jno
cltd
pusha
popf
xchg
or
inc
cmp
and
mov
lea
rcrb
inc
or
sub
push
mov
loop
push
jnp
mov
ljmp
jne
test
inc
data16
cltd
adc
pop
push
insl
leave
or
mov
adc
rcr
rclb
xlat
decl
xchg
jnp
test
data16
jnp
jl
dec
sbb
push
jnp
mov
jnp
adc
arpl
inc
mov
push
sbb
adc
sbbl
jo
lods
loopne
bound
xchg
jnp
sti
inc
inc
cld
mov
dec
out
repnz
jge
inc
xor
pop
fisubl
lods
pop
rorb
jnp
xchg
dec
and
jnp
mov
push
roll
fsts
jnp
pop
popf
cs
sbb
insl
ja
push
jnp
push
rorb
fbld
inc
mov
and
and
push
inc
xor
aaa
loop
xchg
jnp
xchg
push
jnp
ja
lods
adc
push
mov
hlt
jb
sti
fnsave
or
cmpb
sti
stos
insl
lds
xor
insl
fistpll
ss
ljmp
stc
jp
jns
lods
paddusb
fisttpll
jp
dec
xor
in
dec
fiaddl
mov
std
push
sub
push
jp
cmpsb
aam
fisttpll
push
cmpsl
mov
push
faddl
xor
mov
dec
and
sub
adc
mov
out
jp
addr16
ds
and
repz
test
jp
xchg
jp
call
push
jmp
shlb
jp
mov
pop
add
imul
sbb
nop
cmpsl
xchg
cmp
in
cmp
inc
nop
jp
je
cltd
and
out
inc
cmp
ss
ss
inc
or
ficomps
insb
daa
mov
lahf
dec
adc
jp
dec
xchg
jp
movaps
incl
jo
mov
in
push
jp
adc
push
inc
adc
repz
sub
js
scas
pop
sti
jge
lods
sub
inc
arpl
mov
push
jp
stc
rolb
jle
ror
mov
dec
ret
jge
jns
adc
mov
pop
add
nop
pushf
jns
dec
adc
jo
movsb
cli
xchg
jns
cli
mov
push
push
scas
rol
push
cmc
cmpb
out
shlb
jns
inc
pop
cmpb
outsb
icebp
xchg
adc
push
stc
sti
push
mov
xor
sbb
test
mov
push
lods
mov
lret
lock
loope
mov
or
jo
mov
cmc
popa
loopne
loop
fstpl
jns
xor
or
mov
jns
std
push
jns
inc
inc
cmpb
cltd
lret
xchg
jns
loopne
cmp
adc
loop
data16
repz
mov
into
xor
insb
push
jns
xchg
jns
stos
scas
in
fs
rcrb
insb
fsubs
sub
adc
das
adc
arpl
adc
push
sub
push
outsl
sbb
pop
add
cmpsb
test
mov
cli
sar
lock
pop
mov
pop
or
sbb
push
test
jmp
insl
in
bndldx
pushf
js
inc
decl
int3
hlt
sbb
adc
pop
cli
lahf
and
in
shrl
js
mov
incl
push
adc
pop
or
adc
lods
es
xchg
js
push
cmpsb
lods
pop
dec
jo
and
hlt
xor
js
xchg
js
mov
xor
js
fmul
mov
push
js
mov
xchg
js
stc
dec
cwtl
js
push
aad
and
sbb
pop
fistpll
dec
dec
fldl
xchg
pusha
pop
push
arpl
mov
js
aaa
fsubrs
movsl
mov
nop
jp
jmp
js
xchg
js
dec
cmpsb
jmp
js
cltd
jl
xlat
cmp
in
test
stc
push
in
js
test
call
mov
std
dec
out
xchg
and
nop
or
nop
orl
aad
sub
repnz
sub
imul
js
js
cli
pop
mov
jb
xchg
jg
fxam
subl
and
cmpsb
cli
add
ja
imul
nop
out
lods
mov
mov
add
ja
std
icebp
mov
in
imull
lock
jo
ja
jo
mov
sbb
cld
inc
movaps
ret
out
lods
int
movl
fisttps
ja
mov
stos
out
int
fdivrs
mov
add
lock
dec
add
jo
inc
ret
in
lcall
ja
jecxz
ja
call
mull
inc
sbb
ja
mov
sbb
out
fisubs
sub
cmc
xorb
add
outsb
bndstx
mov
cld
or
lods
sub
loope
mov
ja
stc
xor
loop
cmp
adc
fs
sub
jg
movsb
xchg
add
adc
in
lahf
push
ja
into
dec
lods
mov
subl
call
sub
sti
and
adc
mov
divb
cli
push
pushf
ja
push
inc
xor
popf
sahf
ja
sbb
or
lods
and
mov
pop
mov
lcall
jbe
mov
mov
lock
scas
mov
jbe
addr16
jle
sub
inc
mov
sub
jbe
push
pop
insb
sub
pushf
jbe
add
dec
xchg
adc
stos
cmpsl
aam
jbe
jae
mov
xchg
mov
xchg
jbe
dec
outsb
mov
mov
adc
xorb
jbe
push
pop
sbb
sbb
nop
insl
push
mov
cmpsl
jmp
push
scas
and
jbe
push
xchg
jbe
stos
xlat
cwtl
jbe
mov
pop
mov
jbe
and
pop
mov
jmp
sar
inc
jno
test
sub
xchg
jb
jbe
add
mov
imul
out
add
into
cmc
aad
xchg
jbe
aaa
and
clc
inc
cmp
stc
lret
xor
ljmp
lock
in
xor
jbe
add
mov
mov
or
xor
in
jl
jbe
xorb
lcall
pop
cmpsb
arpl
movsb
stos
ds
inc
cmpsb
orl
xchg
insb
sbb
hlt
popa
push
aaa
inc
mov
jne
mov
xor
ja
mov
stos
sarl
adc
hlt
sub
pushf
jne
add
das
mov
filds
outsl
jmp
push
jp
cli
bound
hlt
and
jne
and
outsl
mov
mov
pop
mov
jb
jne
sub
jo
negb
jmp
pop
std
cmp
jo
jo
mov
cmp
lea
add
mov
mov
ljmp
push
movsb
test
pop
xchg
xor
inc
or
addl
ds
jne
xor
xchg
jne
lock
js
rcrb
cmp
lods
mov
jne
or
push
out
xor
jo
mov
push
push
mov
mov
sbb
jne
and
xor
lcall
nop
adc
lock
stc
std
lcall
push
daa
mov
or
mov
xlat
add
adc
dec
jmp
add
nop
jge
cmp
jne
stos
cmove
push
xchg
add
xor
push
add
fnstsw
out
jmp
adc
and
lock
adc
push
pop
loope
jnp
popa
push
leave
jns
add
insl
fldcw
repnz
je
sbb
jae
sub
lahf
xor
je
aaa
adc
xor
jp
or
test
je
pop
dec
dec
int
aad
inc
sbb
pop
sbb
mov
loopne
pusha
cmpsb
and
stos
scas
stos
cmp
fimuls
push
pop
dec
sbb
aas
in
stc
into
push
je
dec
call
enter
test
and
xchg
je
xchg
cmc
stos
jb,pn
add
arpl
jbe
and
and
sub
cmpsb
and
iret
xor
and
mov
nop
test
sub
pop
mov
shll
add
xor
push
xchg
pop
jl
lods
jo
xchg
dec
mov
adc
xchg
je
adc
xor
je
lock
in
jecxz
mov
pop
cli
mov
outsb
and
in
movsl
shrl
jmp
jae
mov
xchg
dec
jecxz
push
shl
xlat
in
cmp
jae
mov
add
lods
and
test
imul
out
jns
sub
sti
xchg
test
decb
pop
je
or
mov
lock
add
adc
pop
lahf
test
rorl
jae
jge
std
sbb
out
jb,pt
adc
shlb
icebp
addr16
push
rol
mov
mov
popa
ret
jo
outsb
mov
loopne
ficompl
jae
jecxz
xor
in
mov
and
mov
lock
and
and
dec
test
arpl
ss
arpl
movsb
xchg
mov
inc
nop
jae
pop
xchg
fisubs
arpl
push
aam
fnsave
cmpsb
movsb
jno
mov
sbb
add
inc
mov
jo
aaa
xchg
arpl
rolb
iret
bound
cld
add
jae
and
test
bound
dec
xchg
push
lods
inc
int
in
loopne
jb
scas
cmp
sub
and
adc
dec
jle
cmp
sbb
ljmp
lock
movsb
stc
add
cs
mov
sub
jb
loop
in
aas
mov
int3
test
xor
cmp
rclb
lods
daa
cmp
mov
addr16
aad
lret
jge
inc
mov
or
out
and
xchg
jb
std
adc
insb
xorb
pop
jle
leave
es
lcall
cmp
aad
cmp
jb
inc
cmc
push
test
mov
push
jmp
jecxz
lret
movsl
jl
fbld
das
and
mov
jae
jb
sbb
jo
xchg
jb
xor
aas
fadd
push
je
jb
dec
sti
sub
jge
sub
lock
sbb
sti
clc
scas
stos
adc
testb
mov
push
xor
push
jb
ret
push
jb
xchg
sub
addr16
jb
fildll
jb
jb
addr16
data16
clc
mov
xor
ljmp
fwait
lcall
push
shlb
popf
cmpsl
cmpsl
ret
inc
pushf
jno
icebp
add
ss
cmp
sbb
push
adc
adcl
cltd
insl
add
inc
gs
imulb
jge
insl
fadd
jb
xchg
jno
je
mov
xor
movsb
insb
stc
dec
hlt
negb
cmp
stos
orl
fisttps
das
xor
and
adc
cmp
adc
cmpsb
sti
mov
add
jle
int
sti
adc
or
sahf
jno
movsb
pop
ret
xchg
hlt
cmp
cs
sub
adc
mov
gs
popf
inc
dec
xchg
adc
or
adc
jge
fistps
out
xor
mov
cli
decb
dec
mov
sub
and
int3
insl
jne
inc
cld
adc
jns
and
into
inc
in
inc
and
pop
pop
dec
jnp
sbb
and
mov
scas
jnp
mov
in
fadds
push
mov
js
ret
pop
shlb
scas
outsb
cmp
jo
movsb
cmpsb
or
sarb
jecxz
rcl
jnp
clc
jae
fcmovb
push
fstpt
jo
mul
lea
out
ret
mov
lea
pop
push
popl
and
fstps
mov
shll
stos
xor
xchg
jo
insb
pop
ja
test
pshufw
cs
jnp
mov
pop
jmp
jge
push
test
lahf
out
aas
xlat
xchg
pop
add
jo
das
sbb
jo
enter
pushf
jo
and
cwtl
jo
addr16
xchg
enter
jo
ja
fsts
pop
movsl
xorl
repz
jo
xor
idivb
or
aad
adc
xor
sub
aas
sub
ret
xor
push
pusha
xlat
jno
cmp
jo
jbe
inc
mov
pop
xchg
hlt
das
add
jb
outsl
addl
dec
pop
js
outsl
data16
das
push
adc
cmpsb
mov
gs
lret
nop
jo
repnz
js
insl
inc
rcll
out
adc
int
and
pop
sub
outsl
push
cmp
adc
ja
sub
and
xor
sub
outsl
lock
aam
dec
mov
outsl
adc
sub
adc
lock
loopne
loopne
mov
vmovss
outsl
nop
test
in
jmp
cmp
outsl
mov
push
or
lods
pop
iret
subb
mov
and
sbb
mov
outsl
adc
rcll
adc
aad
shr
adc
hlt
lods
pop
add
push
outsl
nop
insl
stos
ss
xchg
mov
cmp
dec
subb
jb
out
js
mov
in
lods
mov
fcmovnb
dec
repnz
dec
pop
scas
lods
push
pop
test
push
lea
adc
rclb
outsl
xor
xor
sub
adc
nop
mov
pop
ret
divb
ret
mov
test
movsl
jo
inc
in
xchg
cmpsb
pop
add
jo
sahf
outsl
nop
push
xchg
mov
or
cltd
pop
subb
ret
loope
adc
movsl
lahf
pop
add
testb
cmpsb
mov
sarb
stc
or
nop
cltd
outsb
aas
ljmp
std
out
outsb
lock
xor
inc
pop
adc
push
outsb
mov
arpl
dec
sahf
outsb
push
adc
pop
frstor
outsb
jo
add
cmovnp
jle
mov
rcrl
repz
dec
lahf
xlat
sarb
das
ret
in
icebp
cmp
outsb
mov
adc
push
rcrb
and
movsb
ret
jle
xchg
sub
outsb
push
dec
push
outsb
nop
adc
iret
jecxz
outsb
push
jle
mov
sbb
mov
enter
mov
inc
fisubl
xor
pop
xor
push
lret
mov
mov
lahf
and
movsb
inc
sti
fidivl
outsb
mov
sbb
push
aas
loop
or
and
outsb
nop
ja
sbb
mov
cs
jns
or
or
pop
pop
call
adc
data16
bound
add
xchg
outsb
lock
push
outsb
push
inc
stos
sub
fchs
insb
xchg
pusha
jp
fmull
scas
shl
inc
pop
scas
inc
mov
jge
outsb
xor
lret
lock
repnz
insl
nop
cmp
daa
pop
mov
pop
arpl
insl
lock
pop
adc
or
push
push
insl
mov
jo
aam
cmp
xchg
movsl
cmp
push
mov
lods
mov
mov
iret
pop
or
jo
bound
jne
clc
and
test
cmp
jae
aas
or
xor
rol
xchg
insl
nop
nop
insl
jo
flds
nop
imul
jae
adc
nop
repz
insl
lock
jb
fstpt
or
jle
pop
es
pop
jmp
jle
stos
fisttpl
insl
push
cmp
insl
xor
add
adc
lock
insl
xor
mov
push
cmp
ficomps
mov
fsubr
sub
xlat
sbbl
push
cmc
popa
shll
jg
insl
jo
inc
and
lcall
insl
jo
fiadds
inc
xor
xor
aam
jmp
mov
mov
jne
cmc
add
mov
sbb
inc
add
bound
insb
nop
test
sbb
sbb
jmp
mov
mov
sbb
nop
in
mov
jp
test
mov
xchg
popf
mov
lahf
pop
dec
aas
cmp
jmp
shll
arpl
insb
lock
insb
lock
fwait
pop
ss
insb
xor
out
adc
push
mov
or
adc
insb
push
mov
lods
xor
imul
jno
insb
jo
insb
rcr
clc
jnp
aad
subb
mov
xchg
insb
push
stos
dec
xchg
les
inc
jge
lahf
lahf
dec
pop
lock
movsb
pusha
ja
jge
scas
push
sbb
jno
jbe
fdiv
out
cld
imul
fwait
sarb
cmpsb
inc
mov
mov
insb
jo
or
and
insb
mov
mov
pop
jno
and
loope
lods
jmp
jae
fsubrp
and
push
xor
lock
cmp
jl
or
push
sub
cmp
sub
push
xor
insb
xor
arpl
cmp
pop
add
nop
cmpsl
sbb
mov
das
push
imul
aam
add
mov
inc
in
push
imul
arpl
js
or
jg
inc
in
loopne
insl
xchg
imul
xchg
imul
mov
inc
pop
push
push
mov
aam
cmp
arpl
js
addr16
int
dec
in
cli
subb
imul
popf
xchg
shrb
imul
xchg
stc
lcall
je
cmp
push
inc
mov
clc
rclb
dec
test
out
jmp
push
sub
imul
in
int
or
xchg
imul
movl
inc
xor
mov
aas
jne
add
adc
insl
test
cmp
stos
ret
mov
sub
pop
cmpsb
lods
out
testb
fcompl
sub
push
imul
pop
dec
mov
fwait
jne
dec
add
in
mov
cmp
push
push
das
xor
fdivl
lret
imul
imul
loope
adc
push
dec
repnz
test
sbb
subb
xor
or
xor
int
jl
cltd
ret
scas
iret
icebp
inc
or
in
gs
push
mov
call
nop
jo
push
xor
jl
into
pop
in
dec
cmp
push
mov
mov
fs
jbe
jp
mov
add
cmp
sbb
mov
iret
push
clc
stos
data16
adc
dec
mov
les
dec
pushf
push
shrl
adc
jo
xchg
push
mov
add
push
mov
iret
xor
jge
xchg
or
iret
dec
rcrl
and
adc
repz
adc
pop
xchg
movsb
mov
xor
adc
adc
enter
lret
push
cwtl
push
imul
mov
and
push
dec
js
cmp
push
xchg
adc
iret
scas
in
pop
shlb
int3
xor
xor
adc
push
mov
add
jl
xor
outsl
jae
lcall
push
popa
mov
test
mov
push
imul
adc
fs
rcrb
pop
jmp
inc
mov
cwtl
imul
lods
leave
cmpsb
je
iret
out
mov
movsl
mov
scas
xor
movsb
xor
out
mov
mov
imul
outsb
push
jno
pusha
inc
inc
jp
push
ss
xor
addr16
add
jo
inc
push
mov
fisttpl
ss
imul
mov
lods
subb
js
push
mov
push
dec
test
rcrb
jp
fimuls
jo
add
loopne
imul
daa
out
add
jo
sysexit
jl
pop
enter
daa
ret
test
loopne
jne
std
dec
ret
sub
xchg
cld
xor
xor
imul
mov
sbb
icebp
add
xlat
mov
stos
dec
jnp
and
in
loopne
cmpsl
popf
cmp
imul
xchg
imul
adc
xchg
stos
stc
and
lds
icebp
idivl
sarb
nop
icebp
add
int3
testb
sbb
sbb
adc
push
add
add
xor
sub
push
jb
push
test
cmp
pushf
push
shlb
and
mov
loop
push
lcall
push
dec
jg
mov
leave
pop
sub
or
xor
xor
inc
inc
inc
xchg
mov
dec
in
fldl
xor
sbb
mov
mov
iret
lret
cltd
adc
mov
pop
dec
mov
les
mov
cmp
or
sub
bound
xor
jl
adc
push
push
scas
cmp
hlt
or
xchg
es
std
subb
mov
arpl
push
ss
mov
and
or
imul
xlat
push
stos
lods
sub
lret
data16
cmp
jno
call
push
int3
add
pop
xor
jecxz
sub
cmpsl
cmp
cli
lock
xor
addr16
add
push
js
or
addr16
test
xchg
addr16
inc
rcll
mov
nop
mov
ljmp
addr16
ja
fwait
jns
aaa
into
js
mov
sub
test
mov
mov
mov
cmpsl
mov
and
shrb
jg
mov
rcr
fwait
push
addr16
sub
addr16
je
in
mov
test
pop
loope
fnstcw
call
lret
test
xchg
insl
jnp
cmp
rcrb
addr16
mov
jp
add
ficomps
outsl
jl
imul
addr16
in
xor
mov
outsl
xor
pop
xchg
fs
je
inc
xchg
cmpsl
inc
loop
and
cli
jae,pn
shlb
mov
int3
repnz
sbb
cli
and
fcoml
mov
repnz
popa
push
mov
shrl
andb
addr16
mov
lea
pop
sub
cmpsl
push
adc
pop
or
xor
jo
mov
inc
test
push
xchg
sub
fs
call
mov
xchg
pop
xchg
mov
fwait
scas
pushf
data16
push
ret
push
out
sti
pop
es
data16
adc
dec
mov
xor
data16
xor
test
sbb
jo
lahf
das
dec
or
fldcw
std
js
sbb
jp
loope
mov
push
gs
mov
enter
push
and
xlat
pop
daa
test
push
push
mov
outsl
es
xor
repnz
xchg
inc
call
pusha
fwait
mov
jbe
hlt
repz
lods
pop
xchg
or
mov
js
in
popf
ret
andl
idivb
push
pusha
mov
add
nop
push
push
out
inc
aad
faddp
mov
push
mov
pop
out
mov
data16
mov
push
pop
xor
data16
fadds
fnsave
xchg
fwait
add
lea
in
dec
fcmovu
aam
inc
gs
or
mov
aam
jmp
dec
es
adc
mov
xor
adc
scas
xor
test
and
lock
std
sub
push
xor
cmpsl
aam
mov
lock
sbb
and
test
cli
scas
mov
test
push
sub
mov
pop
out
gs
xchg
shrb
cld
iret
movl
shr
inc
pop
mov
push
mov
mov
add
hlt
ret
out
push
pop
sbb
sahf
xor
sbb
push
jg
push
gs
sub
gs
mov
gs
and
lret
push
gs
pop
inc
or
cmp
or
gs
aad
lods
inc
out
dec
pop
sbb
or
pop
inc
lock
pop
or
cwtl
xor
fcoml
mov
xor
gs
jns
mov
jl
gs
cmp
sub
pop
pop
cld
repnz
shrb
imul
mov
lds
cmpsl
lea
jae
cs
jo
xor
stos
int
adc
jo
jnp
dec
in
inc
ja
lcallw
rorb
or
adc
shrb
adc
mov
adc
pop
hlt
sub
jecxz
sbb
mov
cli
cwtl
xor
lock
fs
and
and
fs
and
add
mov
bound
ret
lock
outsb
jns
mov
in
lock
mov
repz
rcrb
fs
dec
int
push
rclb
mov
push
fs
stos
xor
adc
fs
aam
mov
inc
mov
jo
rorb
imul
push
adc
mov
out
imul
xchg
fs
fs
ret
rcl
mov
loopne
sbb
adc
fs
insb
add
push
push
sbbl
nop
dec
push
mov
and
jns
mov
xor
shlb
outsl
xchg
push
mov
mov
mov
dec
or
adc
arpl
cmc
icebp
push
andb
addr16
lcall
jbe
aad
fdivl
sbb
jb
or
sbb
sarb
pop
es
adc
fwait
leave
lock
or
arpl
push
jae
mov
mov
arpl
andb
dec
vmovdqa
jno
scas
cmp
arpl
sbbl
pop
inc
push
adc
lock
les
jo
pop
push
arpl
outsb
popa
std
mov
or
in
mov
arpl
cmp
sbb
pusha
cmp
jne
pop
or
push
jo
sub
mov
push
mov
dec
cmp
jae
ret
mov
and
cmp
mov
jge
out
xchg
arpl
arpl
aas
push
push
test
pushf
arpl
dec
add
cwtl
arpl
lods
icebp
ret
shlb
jle
jle
sub
mov
in
inc
fidivrs
dec
adc
dec
out
ret
mov
mov
push
bound
cmp
daa
dec
add
dec
iret
addr16
xlat
mov
movb
jo
mov
or
rcrl
lret
jmp
xor
popf
adc
bound
cmpsl
dec
sub
adc
jae
and
nop
ret
mov
xchg
xchg
bound
mov
sarb
cltd
jge
insl
dec
lea
jne
and
fdivrl
cs
movsb
int
bound
jns
mov
bound
mov
push
bound
mov
hlt
xor
and
inc
movsl
push
mov
or
sub
lcall
pop
sbb
add
add
dec
aaa
aaa
iret
xchg
push
bound
loope
call
leave
push
shl
movsl
dec
fdivl
nopl
fists
inc
jp
and
jae
sbb
cltd
imul
mov
bound
les
sarb
fstpl
popa
pop
fildll
xchg
dec
pop
dec
pusha
stc
push
or
push
imul
pushf
popa
jo
pop
xchg
leave
push
daa
or
sub
push
popa
adc
adc
xchg
popa
nop
mov
lods
mov
add
mov
scas
frstor
sub
icebp
sbb
aam
sbb
nop
adc
push
popa
adc
mov
lods
push
fwait
adc
sarl
and
insl
in
jb
lock
popa
push
rol
pushf
popa
lock
in
arpl
jae
fwait
sub
andb
test
outsb
repz
stos
mov
xor
cmp
pop
iret
inc
fwait
inc
cmp
jae
idiv
lods
jmp
mov
stos
inc
mov
jp
mov
xchg
ds
insl
or
shrl
popa
mov
push
popa
lock
jbe
adc
adc
nop
pop
out
nop
popa
jo
iret
adc
inc
popf
mov
cld
dec
repnz
enter
cmp
daa
xor
hlt
sub
popa
push
xchg
popa
jo
popa
rcrb
out
jl
pop
clc
or
shrb
ja
xor
pop
nop
pusha
mov
bound
pusha
nop
lods
jnp
xor
jo
sbb
push
mov
add
mov
fwait
repnz
les
cmp
pusha
nop
pusha
pop
ds
dec
mov
cmc
iret
pop
dec
xchg
xor
hlt
popf
clc
add
imul
sarl
lods
ljmp
ds
scas
push
mov
mov
cmpsb
cs
testb
nop
pusha
push
ss
push
pusha
mov
data16
shlb
pop
xchg
popa
sar
sahf
pusha
jo
pusha
jo
pop
outsl
xor
pushf
pusha
rorb
movsb
outsb
xor
push
jmp
mov
ret
pusha
adc
jae
mov
inc
xor
pusha
lock
out
jle
scas
lahf
repz
pusha
xor
and
cmp
and
push
push
mov
pusha
lock
int
outsl
ljmp
jg
xor
iret
jle
jbe
push
xor
pusha
jo
pusha
shl
sub
lods
sbb
xor
shl
mov
xor
adc
jo
std
testl
pusha
xor
sub
icebp
hlt
test
inc
jbe
mov
mov
dec
jo
addr16
pop
mov
sub
push
shl
cmpsl
add
push
and
inc
adc
loopne
sarl
gs
adc
fs
adc
xchg
jg
stos
inc
ret
shrl
jl
sub
popf
mov
cld
mov
cmc
cld
call
mov
push
repz
xorl
pop
xor
out
xchg
inc
push
aad
pushl
jnp
outsl
jle
arpl
popa
decb
fwait
inc
sbb
lock
fstl
pop
lock
mov
adc
inc
decl
out
mov
loope
sbbb
pop
lock
pop
push
push
inc
stos
mov
push
pop
push
mov
testl
mov
or
adc
mov
pop
adc
lods
out
imul
adc
ret
jns
aad
fisubs
adc
push
popf
scas
outsb
push
pop
jo
adc
testl
mov
inc
imul
sbbb
dec
inc
or
push
or
dec
ljmp
lock
and
aaa
dec
das
jecxz
jg
adc
inc
fwait
jg
pop
mov
pop
xor
add
imul
mov
pushf
pop
lock
xchg
inc
enter
jecxz
pop
xor
adc
mov
or
shl
lods
mov
jl
pop
nop
mov
ds
jb
hlt
mov
pop
or
ljmp
pop
lock
fcompl
mov
mov
mov
adc
insb
fsubrl
das
dec
aad
mov
inc
pop
add
or
inc
sbb
add
and
pop
push
xchg
or
gs
mov
jb
in
pop
fiadds
ret
pop
and
push
cltd
ret
jecxz
sti
sbbb
sbb
and
mov
mov
insl
cmp
pop
add
jo
and
lock
aad
jo
pop
inc
mov
and
mov
loope
mov
push
pop
lock
fdivrs
cmpsl
mov
repnz
movsl
fstl
nop
cmpsl
mov
dec
pop
xor
adc
repnz
add
adc
mov
sbb
xchg
pop
push
sub
mov
cltd
je
jmp
out
pop
mov
cmpsb
ds
dec
roll
popl
adc
bound
repz
aas
sbbb
ror
and
add
ja
insb
inc
out
idivl
repz
sbb
into
cmc
mov
sbb
and
in
mov
sbb
scas
dec
sub
mov
fidivs
std
xchg
pop
nop
or
rolb
pop
mov
ret
pop
jne
loop
pop
push
dec
sub
pop
nop
cmp
lods
mov
ret
mov
sbb
jo
icebp
ljmp
popa
loop
adc
inc
add
push
mov
dec
adc
add
fistpll
pop
nop
imul
fmull
xchg
pop
jo
and
mov
cmpsl
jmp
test
ret
fists
pop
xor
xlat
jge
repz
xor
cs
push
out
push
in
and
inc
daa
icebp
xchg
pop
mov
cli
or
sahf
pop
nop
inc
cmp
nop
cli
repnz
dec
incb
in
dec
push
repnz
pop
adc
test
rclb
mov
pop
xor
add
pop
adc
iret
in
add
cmp
pop
pop
dec
cmp
fs
add
rorb
push
mov
inc
pusha
inc
mov
inc
and
mov
fistpl
pop
push
insl
inc
jbe
mov
cwtl
pop
jo
sahf
pop
shlb
imull
loop
ljmp
pop
mov
notb
pop
adc
movsb
add
and
popa
addl
xlat
shll
inc
adc
sub
pop
jo
cwtl
pop
adc
sbbb
inc
movsl
or
insl
loope
pop
dec
push
pop
rorb
fdivrl
pop
push
mov
decl
jle
add
mov
or
bnd
in
repz
shlb
aas
pop
push
or
push
pop
jo
shrb
pop
mov
dec
jge
ja
ret
test
ret
jecxz
aas
jns
test
push
insb
mov
jge
sbbb
or
cmp
shlb
mov
or
dec
hlt
in
pop
push
and
int3
cmp
adc
and
pop
xor
mov
dec
sahf
pop
lock
inc
add
pop
push
adc
stc
mov
jno
push
pop
nop
nop
pop
rclb
push
mov
sahf
pop
xor
adc
ja
dec
int
mov
sub
pop
jo
xchg
mov
sbb
pop
push
mov
xor
ret
sub
shlb
inc
scas
in
dec
ret
sub
mov
leave
push
pop
jo
inc
dec
push
les
std
lret
cmpl
push
cltd
or
push
fdivrs
inc
pop
sbb
inc
pop
stc
xor
insl
jmp
mov
adc
out
ret
mov
push
sub
pop
inc
mov
outsl
jnp
sahf
pop
shr
jp
out
test
mov
add
pop
nop
cltd
ret
clc
add
hlt
pop
int3
push
xchg
add
sub
jge
cmpsb
in
cmpl
xor
pop
xor
xor
sbb
pop
movsl
stc
in
xor
scas
je,pn
push
lcall
clc
push
push
scas
call
jle
jne
and
mov
lret
cli
outsb
out
mov
clc
ficompl
pop
push
xor
outsb
or
lcall
clc
mov
shlb
pushf
pop
mov
pop
xor
in
xor
movl
pop
rclb
push
pop
lock
aad
pop
lock
adc
je
in
pop
popa
jb
pop
jo
cmp
pop
ror
add
cli
mov
xchg
adc
jecxz
std
jo
mov
add
outsl
mov
sbbb
and
stos
mov
sub
cmp
nop
dec
adc
fsubrs
sub
sbbb
ss
add
addr16
loopne
dec
sbb
add
sbb
shrb
aas
test
inc
sarb
outsb
or
shr
or
sbbb
loop
sub
inc
lcall
adc
xchg
pop
lock
pop
nop
cmp
cld
xor
mov
pop
mov
out
or
nop
test
loopne
and
sbb
fs
cmpsl
inc
loopne
xor
int3
pop
add
cmpsb
pop
inc
lret
lock
inc
pop
jp
pop
rcl
scas
mov
mov
in
in
test
in
fnstenv
int
xchg
pop
lock
out
adc
jo
pop
mov
push
jecxz
pop
lock
nop
pop
xor
popa
dec
lods
add
nop
repz
pop
jo
data16
sbb
push
pop
push
jge
pop
push
inc
jp
pop
inc
jge
lahf
sti
cmp
cmp
mov
jne
out
aam
xor
pop
adc
jo
sbb
jno
aas
ljmp
fisubrs
lahf
inc
xchg
out
cmp
cmpsl
pop
or
ror
push
mov
test
call
mov
pop
xor
dec
jle
pop
shlb
cltd
or
sub
sahf
pop
shrb
pop
lock
ss
push
adc
cmpl
lods
push
or
sahf
pop
lock
lahf
adc
push
incb
mov
jb
pop
rolb
fcoml
loop
fistps
pop
lock
mov
ds
lcall
mov
pop
xor
mov
add
jbe
pop
nop
sub
lock
mov
cmpsb
icebp
loop
cmp
lods
mov
nop
pop
nop
pop
lock
mov
adc
xchg
pop
xor
push
pop
adc
pop
jbe
pop
adc
push
adc
iret
push
pop
adc
icebp
enter
mov
aaa
rolb
ret
mov
icebp
daa
sbb
pop
rcll
pop
sbbb
in
inc
outsl
push
and
bound
inc
jmp
das
insl
xor
ret
imul
push
xor
arpl
in
movsl
pusha
xchg
adc
jb
pop
jo
xchg
pop
push
cmpl
mov
in
dec
push
xchg
pop
push
out
ljmp
sbb
pop
shlb
shlb
dec
sub
and
jo
mov
pop
nop
inc
nop
pop
adc
fs
jle
ret
call
jns
push
pop
mov
movsl
push
repz
mov
add
pop
les
rcrb
pop
xor
adc
stos
inc
pop
mov
adc
mov
ljmp
and
dec
xchg
popf
sub
jb
xchg
xchg
pop
jo
dec
loop
pop
mov
lds
mov
jecxz
push
rclb
pop
xor
add
fs
mov
add
loop
scas
jge
sub
mov
adc
mov
mov
ljmp
push
adc
jmp
adc
nop
add
jecxz
call
aad
push
mov
push
jo
aaa
and
ja
ljmp
push
push
pop
call
push
push
push
aam
fnstenv
shrl
push
push
scas
out
dec
popa
mov
into
and
fpatan
cmp
add
adc
pop
jnp
jns
push
jo
fiadds
inc
pushf
push
jo
je
int
push
push
push
lock
dec
dec
xor
loop
push
rclb
xchg
enter
es
xor
adcl
xor
and
cmp
mov
lods
stc
xor
out
inc
add
xchg
mov
nop
xor
dec
dec
jnp
jno
jb
test
adc
pop
loopne
or
je
push
nop
les
sbb
cmp
push
xor
jae
inc
popf
mov
jl
sbb
shlb
xor
shl
cwtl
push
lock
call
mov
cli
das
xchg
fidivl
push
mov
call
push
stc
xor
aas
add
fcompl
jae
popa
out
mov
push
nop
xchg
repnz
pop
add
push
push
jo
aad
fistpll
cmp
inc
stc
dec
aaa
ffree
dec
sbb
push
mov
xchg
push
adc
test
mov
xor
pusha
mov
nop
push
jo
and
or
or
cmp
push
mov
push
mov
test
notb
fsts
jle
cmp
fadds
push
nop
pop
mov
sbb
push
into
adcb
shrb
lret
int
pop
icebp
repz
xor
and
les
mov
in
bnd
shrb
mov
cmp
push
push
xchg
and
daa
loopne
pop
lcall
mov
fstl
adcb
test
xor
ja
cmp
ret
cmp
push
lock
jnp
push
jo
push
shrb
bound
adcb
stos
mov
xchg
jns
shrb
nop
push
push
int
cli
adcb
lcall
adcb
push
xor
push
jo
leave
or
clc
sub
push
adc
in
cs
roll
nop
pop
fdivs
cld
mov
sub
jne
pushl
pop
loope
mov
lcall
and
sar
pushf
push
nop
ss
fnstenv
push
ss
mov
aam
cmc
xchg
push
mov
daa
in
push
cmp
daa
push
push
nop
call
lea
aaa
xchg
push
adc
mov
mov
call
into
pusha
jg
fs
adc
sub
inc
lds
push
adc
sub
dec
aad
mov
insl
movsl
mov
shrb
mov
or
lea
mov
xchg
xor
adc
js
sub
push
jo
cmpsl
ss
movsb
push
cmpsb
xchg
add
sti
cli
adcb
jmp
sub
fisubs
js
push
jo
inc
ret
mov
push
shr
cs
mov
or
rcrb
push
adc
jo
inc
cmpsb
ljmp
dec
mov
mov
in
imul
push
push
sar
pop
jl
push
rclb
imul
mov
add
push
adc
push
ror
movsb
in
jbe
flds
push
mov
mov
push
nop
in
adcb
adc
les
enter
push
push
adc
push
xor
dec
push
sub
xchg
push
lock
fs
into
pushf
push
push
xor
push
nop
cld
lret
push
adc
repz
int
clc
ljmp
mov
adcl
sti
test
imul
dec
add
lock
inc
mov
sub
lret
inc
xlat
mov
dec
mov
divl
dec
int
lcall
inc
stc
sbb
push
lock
push
xor
mov
xor
push
adc
xchg
push
mov
jae
mov
mov
aam
cld
fmul
pushf
push
sarb
ss
outsl
sub
jnp
add
inc
shrl
push
adc
mov
clc
int
fimull
ret
enter
das
adc
iret
lcall
test
std
push
or
mov
jmp
mov
movsl
push
stc
dec
inc
xor
lock
mov
cltd
jge
bound
adc
rcl
gs
sahf
push
adc
jmp
cmpsb
jp
lods
shrl
push
ficoml
aas
cltd
aaa
cmc
rolb
push
jo
jae
adc
jl
mov
lea
inc
lahf
rcll
mov
in
push
shlb
xchg
and
aad
clc
or
lock
xchg
push
nop
push
push
push
lock
repz
adcb
push
mov
mov
xor
jb
cmp
xchg
jmp
popa
xchg
push
jo
and
loopne
push
xor
cmp
outsl
int
push
xor
push
aas
dec
lcall
xchg
xor
xchg
push
adc
push
jo
mov
xor
push
nop
push
jo
lods
jmp
add
xor
push
in
xor
loope
push
xor
rclb
fsubrs
cwtl
push
xor
scas
repz
or
jno
push
xor
inc
add
nop
outsb
mov
or
nop
jle
fsubrp
ja
xor
xlat
loopne
mov
jmp
testl
inc
leave
and
lock
cmp
xor
fmulp
push
xlat
jg
mov
push
mov
mov
cwtl
push
push
hlt
leave
cld
imul
data16
popa
push
sbb
shrb
push
inc
mov
int3
lret
call
push
insl
mov
dec
in
adc
insb
dec
lods
push
cmc
fcmovb
shll
push
jo
xor
popa
in
xchg
mov
imul
notb
test
pop
inc
mov
ja
mov
jns
cmp
cmp
scas
test
xor
xchg
dec
xlat
daa
in
leave
fidivrs
push
movsl
xchg
int
pop
pop
lds
sub
push
push
jne
inc
sub
xchg
es
outsb
in
arpl
push
xor
mov
xchg
stc
divb
sbb
push
adc
push
mov
jo
test
mov
xchg
loope
out
dec
daa
pop
fnstsw
out
mov
jae
enter
pop
cmpsb
xor
out
sbb
rorb
outsl
fidivl
pop
pop
add
test
jns
and
fisubrs
pop
xor
push
mov
fisubl
push
lock
mov
je
repz
add
nop
aad
ds
xchg
je
lock
sbb
aam
roll
jge
push
jo
mov
push
xor
cmp
mov
lock
mov
push
ds
mov
lock
in
in
cmc
push
pop
add
push
sahf
push
lock
ss
fisubrs
push
cmpsl
adc
adc
leave
stos
cmp
xor
repz
pushf
push
push
pop
add
leave
int
inc
pop
cwtl
push
shlb
adc
push
rcrb
push
jo
div
cwtl
push
push
add
shll
jne
xor
adc
push
jl
int
inc
stos
pop
pop
push
aaa
push
pushf
push
xor
loope
lret
xchg
add
rolb
push
nop
xchg
and
and
push
push
mov
adc
cmp
mov
mov
shrd
push
sti
jb
inc
pop
mov
imull
movsb
into
stos
push
push
mov
ja
mov
lods
mov
mov
mov
pop
mov
loopne
sbb
xor
jns
sbb
sahf
push
lock
mov
imul
jnp
pop
mov
es
xchg
mov
xor
push
nop
mov
push
sar
inc
fs
push
nop
mov
adc
inc
subl
push
xor
sbb
dec
jle
lods
add
lcall
push
or
pop
sbb
je
lea
outsb
jle
mov
xor
in
push
fs
adc
les
fsubrp
pushf
push
rolb
push
mov
inc
mov
test
mov
jle
testb
jge
and
push
jo
in
adcb
cmpsl
jbe
sbb
ja
jno
dec
inc
ljmp
cltd
cld
jb
cmpsl
std
or
xor
add
lock
mov
loopne
ljmp
mov
sbb
push
jg
cmc
mov
test
fadds
jb
rsqrtps
pop
fstpt
fsubr
mov
push
sarb
mov
dec
test
pop
xchg
in
cmpsl
push
push
push
rclb
in
leave
icebp
cltd
pop
js
ss
lret
xchg
inc
filds
popf
push
push
cmc
loop
rcll
dec
jo
sbb
mov
jae
jmp
dec
xor
cmpsb
hlt
mul
dec
and
int3
das
mov
rcrb
inc
sbb
outsb
mov
shlb
mov
or
dec
nop
and
sub
scas
jecxz
jns
xchg
inc
arpl
scas
cmp
dec
lock
mov
call
imul
xor
and
inc
mov
or
dec
ds
mov
adc
popf
pop
xor
sti
fsubl
xor
dec
xor
fildll
mov
icebp
popf
xchg
dec
jo
sbb
mov
push
dec
rcl
lahf
nop
dec
adc
xor
mov
jp
dec
nop
dec
or
xor
jmp
sbbl
jo
dec
aad
dec
rorb
dec
mov
int
adc
xor
test
cmp
push
dec
jo
dec
adc
fnstenv
dec
shlb
and
js
mov
inc
jne
mov
leave
ljmp
ja
xchg
dec
sarl
insl
mov
mov
dec
mov
mov
lahf
xchg
fstpl
jo
dec
rolb
dec
xor
jo
aaa
inc
aaa
push
int3
popf
mov
and
pop
dec
addr16
add
sbb
hlt
adc
popf
mov
sbb
in
mov
insb
xlat
xchg
or
imulb
fstl
rol
or
push
mov
dec
shrb
pop
sub
xor
xchg
dec
lock
and
sbb
xadd
dec
adc
pop
adc
sub
xor
popf
cmpsb
aam
pop
hlt
adc
xchg
sub
mov
cmp
push
jo
or
test
mov
or
testb
mov
mov
adc
and
into
in
sbb
out
das
sbb
popf
cltd
cmpsl
push
dec
rolb
dec
mov
enter
pop
add
pop
aad
dec
xor
inc
test
js
pop
iret
push
cld
sbb
bound
jecxz
jo
pusha
adc
nop
or
sbb
dec
push
dec
mov
add
cwtl
dec
push
ljmp
inc
mov
fdivrl
addr16
cmp
dec
xor
lods
lret
jle
dec
jo
xor
sub
pushf
dec
rclb
ss
scas
cld
scas
jp
dec
or
orb
sub
mov
imul
lea
dec
push
aaa
nop
dec
adc
adc
xor
dec
jo
lock
adc
xchg
mov
nop
dec
nop
mov
cmovns
and
sub
dec
adc
int
dec
push
insl
and
dec
xor
xor
inc
mov
dec
mov
loope
pop
adc
jle
cwtl
dec
mov
and
negl
dec
nop
jle
mov
push
add
push
out
mov
cmpl
mov
daa
xlat
add
je
dec
rolb
sub
orb
lret
aas
mov
dec
adc
jp
jecxz
inc
outsb
movsl
leave
and
xor
xchg
jmp
aam
lret
je
test
orb
xchg
rcrl
lds
lock
jo
sahf
dec
lock
jp
xor
popf
loop
cltd
cmp
dec
push
pop
push
nop
dec
nop
inc
imul
stos
in
or
nop
dec
adc
or
and
push
dec
mov
das
stos
sbb
jnp
jne
movsl
pop
dec
insb
mov
jp
inc
incl
pop
sbb
fldl
dec
mov
aaa
jg
dec
adc
dec
jo
sub
jno
pop
xor
jnp
cmpsl
ja
mov
jp
inc
repz
sub
dec
int
xor
jno
dec
sarb
push
sub
xor
dec
lock
mov
pop
gs
shlb
popl
dec
nop
fiaddl
dec
mov
loopne
sub
aam
xchg
dec
adc
dec
adc
xlat
popf
and
std
mov
fiadds
add
pop
pop
icebp
cmp
leave
inc
cmc
sub
jae
lods
dec
fwait
pop
mulb
dec
adc
and
mov
cmp
dec
nop
jo
das
out
ja
jo
movsb
xchg
dec
lock
dec
rorb
sbb
dec
adc
shlb
pop
mov
add
movsb
lock
dec
nop
and
dec
adc
aas
test
dec
xor
test
dec
out
and
add
nop
lret
scas
lret
clc
inc
xor
add
mov
mov
xlat
in
mov
cmp
dec
lock
jecxz
jge
mov
lret
dec
jbe
sub
inc
out
adc
jo
xor
ficoms
scas
ja
cmp
inc
xor
jae
dec
sarb
das
cmp
sahf
dec
xor
xchg
adc
push
insl
or
jge
cmp
clc
fisubrs
test
adcl
jae
lods
orb
aad
mov
dec
nop
xorps
dec
jo
scas
mov
xor
dec
lock
jnp
movsl
xchg
std
mov
scas
mov
push
cmpsl
out
and
ret
dec
jo
test
cli
movsl
xchg
dec
push
or
out
mov
dec
nop
xor
les
xor
gs
cmp
lods
divl
dec
mov
loop
xchg
cmpsb
into
test
in
cmpsb
cs
lcall
pusha
sbb
nop
add
cmpl
jbe
mov
pop
xchg
jno,pt
push
pop
xchg
dec
xor
pop
addr16
hlt
movnti
dec
lock
mov
jno
jns
mov
mov
nop
dec
jo
icebp
dec
repz
lds
cmpsl
repnz
aaa
fists
dec
rclb
into
sub
pop
inc
sbb
jbe
mov
jne
ret
aam
dec
nop
dec
in
inc
mov
es
pop
sbb
jmp
dec
mov
mov
mov
lods
xlat
push
dec
push
pop
lock
int3
mov
adc
mov
cmp
in
gs
out
lcall
adc
add
lahf
imul
dec
lock
fidivrs
adc
les
xchg
movzwl
sub
cmp
gs
loop
cmpsl
jmp
rorl
pop
ljmp
inc
dec
ret
inc
jecxz
xor
xchg
inc
je
mov
shrl
decb
dec
mov
jmp
dec
nop
mov
clc
gs
mov
cld
aam
xchg
cmc
xor
dec
lock
iret
popa
mov
ja
in
gs
fnstenv
mov
cmp
xchg
xor
in
sti
je
sbb
lock
inc
dec
xchg
dec
jo
sub
sbb
loop
dec
lock
cmp
pop
int3
pop
xchg
dec
push
pop
jmp
loopne
enter
jne
aad
sbb
aaa
dec
pop
cs
inc
push
push
pusha
pop
mov
aad
in
pop
in
jmp
and
and
dec
nop
shlb
lock
xor
dec
shrb
imul
xor
cmp
dec
cltd
adc
repz
rorb
pop
cltd
loop
out
roll
jo
or
es
dec
jo
dec
xor
mov
adc
inc
inc
dec
mov
xor
push
and
es
push
out
in
jp
lret
fildll
gs
mov
mov
paddw
daa
shrb
fiadds
ret
jns
xchg
jp
sub
push
mov
idivl
je
dec
jnp
jae
ss
mov
mov
outsb
sarb
dec
xor
rcll
jo
out
filds
cltd
popf
outsb
and
xchg
icebp
mov
test
cmp
sbb
mov
sub
fcompl
insl
in
dec
xor
nop
dec
jl
orb
loopne
std
add
push
shl
xor
sahf
dec
push
or
leave
lods
inc
push
dec
and
jl
jo
jns
insb
mov
inc
or
test
in
bound
fs
sahf
dec
jo
adc
jecxz
dec
nop
in
xchg
inc
lock
xchg
int
aaa
popa
cmp
xchg
dec
jo
lret
mov
outsl
aas
mov
or
push
mov
lret
loopne
rclb
dec
sarb
jo
clc
jmp
xor
test
dec
nop
orb
adc
popf
movsb
or
inc
loope
mov
and
pop
das
test
pop
loopne
jecxz
dec
mov
mov
jg
and
push
jmp
xchg
nop
dec
mov
push
dec
push
mov
aad
in
jb
or
inc
sub
jmp
and
lcall
pop
lcall
nop
xlat
movsb
cmp
pop
lret
cli
or
fucom
or
inc
lock
lcall
dec
pusha
orl
and
adc
inc
rol
inc
sbb
adc
lret
jae
adc
xor
es
inc
push
pop
bound
cmp
inc
push
bndldx
or
or
mov
cwtl
inc
nop
mov
mov
jge,pt
inc
sarb
and
inc
xor
cli
xor
arpl
cwtl
inc
mov
inc
nop
inc
mov
mov
mov
add
inc
mov
fsts
add
inc
and
xchg
adc
shl
stos
mov
insb
mov
jg
xor
inc
adc
rcrb
or
pop
sbb
clc
clc
gs
cwtl
inc
push
pusha
sub
push
inc
nop
adc
mov
aad
jp
inc
adc
int
sub
push
ret
push
mov
inc
rcrb
mov
push
insl
mov
fbstp
dec
and
es
lods
jmp
inc
mov
pop
inc
mov
inc
call
sbb
adc
adc
sub
mov
adc
leave
out
push
inc
adc
outsb
pusha
push
inc
xor
add
jb
mov
fnstenv
pop
sbb
lods
add
nop
xchg
mov
ds
fnstcw
movsl
out
aas
pop
ret
pop
les
nop
mov
sahf
inc
lock
out
and
xor
gs
lds
cmp
flds
inc
lock
xchg
inc
rclb
into
mov
fstpt
and
inc
xor
inc
sar
dec
mov
inc
pop
push
test
sub
xor
xlat
sbb
dec
rorl
jmpw
lock
inc
rolb
sbb
mov
sbb
jp
inc
adc
shrb
or
cmc
cmpsl
and
xlat
jmp
push
cmpsl
add
mov
lods
jne
push
inc
jo
mov
inc
xor
mov
scas
push
inc
adc
push
scas
out
mov
and
sub
xor
jmp
push
or
mov
pop
xchg
inc
nop
lcall
inc
push
cmc
stos
sub
stos
adc
add
icebp
xchg
pop
jno
std
addb
sahf
inc
adc
mov
inc
mov
inc
jo
add
push
pop
in
mov
mov
ds
inc
nop
cld
hlt
xchg
inc
rcl
jecxz
std
shlb
and
xchg
cli
out
xor
fsubr
push
inc
jo
xchg
mov
mov
hlt
out
push
outsl
fsub
dec
repz
aam
inc
rclb
mov
aaa
sbb
insb
inc
shlb
cmc
add
adc
out
data16
std
inc
pop
mov
jle
fwait
mov
js
fcmovnb
aas
negb
outsl
and
jmp
lea
shlb
inc
adc
sub
pop
mov
idivl
lock
loope
lret
pop
push
pop
sbb
das
pop
in
cmpsl
mov
imul
pop
jmp
cmp
lods
mov
je
xor
jnp
sub
inc
push
xor
pushfw
inc
mov
fsubrp
out
push
pusha
jp
test
cs
inc
jo
xor
cli
mov
inc
mov
hlt
or
nop
nop
inc
lock
cmp
inc
mov
inc
lock
nop
iret
jmp
sub
mov
jl
dec
adc
push
dec
cs
rcr
mov
sbb
out
call
mov
dec
aas
enter
mov
fwait
outsl
imul
push
mov
and
inc
mov
pop
mov
insl
xchg
cmp
in
push
ret
jns
fmull
xor
xchg
inc
push
repz
ss
out
arpl
mov
popa
jle,pt
or
ljmp
sbb
mov
inc
xor
pop
jne
inc
ror
aas
jmp
jcxz
inc
lock
shlb
bound
cmpsl
lods
xor
inc
mov
cli
add
inc
lock
or
xor
loopne
lock
xchg
inc
xor
inc
jo
and
or
sub
sub
cmp
mov
shlb
mov
lods
mov
mov
inc
adc
mov
scas
dec
push
inc
mov
jmp
sub
mov
push
adc
js
jl
inc
in
cmp
jl
fisttpl
inc
xor
mov
out
xor
cmpsl
mov
pmuludq
push
jne
xor
mov
dec
das
call
testb
jg,pn
pop
xor
pop
mov
mov
xchg
inc
nop
outsb
fcmovbe
cmp
push
mov
sbb
sti
adc
inc
sub
inc
lock
mov
mov
sub
fcomps
and
int
ror
adc
sub
inc
adc
mov
addb
out
and
and
jmp
movsb
repnz
popf
arpl
psllq
push
lcall
inc
push
rclb
inc
lea
mov
or
push
jo
adc
and
fbstp
jns
inc
lock
xor
dec
mov
and
rorl
mov
rorl
popf
xchg
xchg
inc
jo
jbe
push
mov
mov
pushw
mov
cld
in
je
pop
addl
adc
mov
and
mov
fwait
repz
ret
pop
cwtl
inc
adc
mov
mov
push
push
test
xor
lods
push
lcall
pusha
scas
adc
out
jbe
inc
nop
fidivs
repz
scas
cmc
jno
cwtl
inc
lock
inc
push
sub
mov
cmp
cmp
cmp
sub
loope
mov
and
or
adc
mov
dec
xlat
sub
xlat
je
ret
aad
not
jmp
repz
inc
mov
inc
adc
mov
ficoml
adc
jne
iret
sbb
jg
lock
inc
adc
mov
inc
jo
insl
inc
jg
movsl
jecxz
lahf
inc
bnd
fisttpll
in
push
out
mov
mov
or
ficomps
fucomi
xor
mov
cltd
xor
lret
pusha
rcl
or
jle
popa
mov
adc
shrb
or
xchg
mov
push
mov
jae
punpckhwd
inc
adc
icebp
insl
lock
cmpsl
rorl
xor
cmpsl
xchg
inc
nop
cmovb
insb
push
xor
inc
xor
xchg
inc
jo
hlt
es
fistl
inc
ror
inc
dec
and
inc
xor
push
xchg
inc
nop
repnz
pop
mov
sub
dec
mov
pop
fs
inc
nop
fsubrs
inc
lock
dec
pop
hlt
stos
push
cmp
jno
mov
add
inc
xchg
or
or
mov
mov
sbb
inc
mov
mov
scas
adc
dec
pushf
inc
mov
repz
ret
sbb
xor
bound
inc
xor
inc
jo
js
inc
nop
lret
sub
mov
addb
add
inc
jo
dec
and
arpl
popf
sahf
inc
push
arpl
inc
daa
in
dec
jo
mov
xor
aas
push
xor
jb
leave
rorb
xchg
inc
lock
in
push
or
loope
iret
adc
push
sub
pop
mov
mov
push
and
shlb
add
fsts
push
push
inc
push
in
mov
jp
mov
or
mov
lock
and
inc
sbb
adc
rol
push
inc
mov
push
addl
in
push
popf
frndint
in
mov
gs
jl
cmc
pop
jmp
lret
stc
add
cmp
rol
xor
mov
xchg
ljmp
push
inc
jo
pop
sbb
ja
andl
sbb
je
inc
adc
pop
repz
inc
push
iret
sbb
xor
xor
and
inc
lock
jns
xor
lcall
movl
mov
push
inc
xchg
hlt
push
inc
jo
sub
cmp
inc
push
std
xchg
dec
sbb
rol
movl
and
mov
push
inc
push
sbb
repz
sbb
xchg
ljmp
cmp
push
aaa
lret
mov
push
inc
nop
mov
shlb
and
rorb
inc
pop
shrl
xlat
in
das
cmpsl
cmp
mov
jae
and
pop
mov
lock
xchg
rorl
addr16
cmpsl
add
lock
outsb
xchg
aas
push
or
dec
clc
xchg
jl
out
iret
jno
pmuludq
stc
adc
xor
imul
dec
jl
aas
adc
ror
insb
pshufw
aas
mov
jae
pushl
sub
pop
ljmp
mov
push
aas
rolb
movsb
push
pop
add
cmp
imul
out
mov
aas
jo
mov
push
outsl
mov
test
cmp
sbb
nop
callw
arpl
sub
adc
lock
sub
mov
fldl
aas
xor
add
jg
insb
pop
jl
imul
fidivl
mov
mov
dec
sub
cmpl
cmpb
lret
fstpl
sbb
mov
mov
movsb
sub
push
aas
adc
cmpb
les
inc
ficomps
aas
nop
cmp
add
nop
mov
sub
inc
std
sub
push
and
mov
aas
xor
pop
mov
push
sub
shr
hlt
sahf
jo,pt
jmp
pop
inc
fs
div
push
cmpsb
test
and
ds
push
cmp
xor
sarb
movsb
sti
icebp
loope
inc
sbb
mov
xchg
xor
pop
out
jg
push
cmpsb
scas
push
lods
scas
ret
loopne
insl
rcrl
push
repz
cmp
push
or
loop
stc
dec
sub
in
jmp
cmpb
out
sub
bound
inc
lahf
mov
lock
xlat
shlb
mov
jo
adc
shl
xchg
xchg
jo
shlb
mov
xchg
adc
sar
adc
stos
xchg
and
and
nop
loopne,pn
or
rcrb
aaa
call
inc
out
sbb
jo
or
lock
ds
and
ds
repz
std
and
push
pop
fucomi
ds
test
into
and
mov
adc
ds
in
mov
sbb
jo,pt
add
jo,pt
out
fdivs
mov
lret
cwtl
ds
outsb
addl
push
divl
dec
ficompl
sub
jp
push
add
xlat
pop
jle
outsl
sub
adc
jecxz
push
cmp
leave
stos
cmp
add
mov
sarb
adc
adc
fsubs
jne
jle
cmp
sahf
cmp
arpl
cmp
mov
jle
aad
int3
jl
into
out
sub
mov
cmpsb
sub
popa
aaa
jnp
inc
dec
mov
mov
ret
xchg
pusha
out
xchg
ds
lret
sbb
cmp
int3
mov
jp
sub
test
jo
push
in
test
test
sbb
lock
pop
cmc
mov
cmp
xchg
cmp
lock
lods
mov
push
cmp
xor
mov
bound
cmp
inc
adc
movsl
popf
cmp
cwtl
cmp
xchg
adc
das
adc
cld
fwait
jns
cmp
std
inc
xor
push
cmp
shl
in
mov
fs
mov
in
sbb
repz
and
outsl
scas
dec
jmp
fnstenv
icebp
xor
aas
xlat
shlb
cmp
mov
daa
je
sub
push
test
ja
pusha
in
into
movsl
js
in
in
jmp
cmp
cwtl
cmp
das
rcrb
lock
mov
mov
mov
pushf
cmp
sub
cmp
pop
jp
gs
add
pop
imul
jmp
out
push
cmp
jne
jbe
sbb
or
test
in
push
sbb
xor
jns
leave
and
in
shll
push
dec
setp
insl
xor
pop
popfw
mov
and
fs
out
add
push
pop
lret
je
out
xchg
cmp
or
push
cmp
xor
icebp
rcll
cmp
cs
lods
pop
fs
lock
cmp
stc
popa
lret
fstp
jmp
inc
add
cmp
scas
mov
js
lret
arpl
rolb
movsl
cld
cmpb
xchg
cmp
fs
cs
fiaddl
mov
mov
test
sbb
or
insb
pusha
push
mov
sar
hlt
inc
jle
mov
in
pushf
cmp
stc
data16
mov
inc
pop
jbe
cmc
sti
mov
cmp
jbe
lds
sbb
adc
jnp
xlat
inc
push
fld
mov
lock
insl
lea
jnp
sbb
ret
ja
cmp
rcll
push
cmp
xchg
cmp
cmp
mov
mov
lock
ds
inc
fwait
jnp
fcoml
xchg
mulb
cmpb
std
aam
and
std
cmc
mov
adc
or
dec
push
cmp
mov
cmp
sarl
dec
popf
sahf
cmp
loop
or
rorl
stc
daa
aaa
xchg
push
cmp
repnz
cmpsl
push
cmp
jae
add
sarb
stos
xchg
cmp
insb
xor
cmp
push
cld
inc
lds
mov
xor
cmp
or
enter
cmp
lock
jae
dec
xchg
jo
aad
dec
mov
cmp
and
sub
cmp
inc
std
roll
fisubrl
push
cmp
cmp
and
push
cmp
icebp
out
lret
clc
or
lock
les
mov
cmp
xchg
cmp
mov
mov
in
xchg
push
insl
xchg
cmp
add
push
cmp
jo
mov
adc
shrb
lock
cmp
cmp
dec
adc
ret
cmp
pop
mov
adc
aad
and
dec
lods
xchg
cmp
pop
mov
jp
stos
lds
inc
int3
mov
lock
cmp
shll
loopne
pop
mov
mov
push
cmp
fadds
jge
cmp
pusha
jns
data16
or
shlb
xor
lret
push
cmp
stos
lea
dec
add
stc
pushf
cmp
aaa
scas
lock
test
rolb
lock
nop
lea
js
cmc
inc
xchg
adc
cmp
xor
xor
mov
jnp
mov
cmp
aam
ljmp
mov
cmp
fwait
inc
js
es
and
sub
loope
mov
cmp
insb
insl
lock
mov
xor
add
adc
cmp
xlat
daa
adc
push
data16
scas
ret
push
cmp
inc
fwait
repnz
cmpb
jae
cmp
inc
jnp
cwtl
cmp
jge
sub
xchg
and
fstps
adc
in
das
sbb
push
jge
insl
lret
in
daa
xchg
cmp
jg
cmp
bound
data16
adc
out
cmp
sbb
jo
push
addr16
jp
dec
cmc
pop
add
nop
dec
sub
mov
push
into
enter
js
mov
sub
mov
mov
sub
jmp
out
fisttpll
lea
dec
ljmp
ret
jo
daa
lock
aam
outsb
pop
ds
xchg
punpcklbw
insb
xchg
mov
pop
sub
jne
cld
inc
jbe
lods
rcll
popf
pusha
sub
adc
push
outsb
cltd
mov
mov
or
push
sbb
jo
mov
xor
js
sub
pop
div
nop
cmp
dec
sub
push
mov
cmp
in
scas
xchg
pushf
cmp
and
fcoml
cmp
ja
mov
mov
shll
rorb
jb
and
dec
adc
shlb
pop
push
push
cmp
das
hlt
pop
xchg
out
mov
nop
jg
in
mov
call
dec
lods
inc
and
push
cmp
mov
mov
cmp
aad
pop
cmpsb
xor
loopne
cmp
cs
mov
xor
ds
lret
and
cmp
int
sbb
mov
divb
stos
mov
scas
scas
sbb
iret
test
cmp
or
adc
mov
add
jo
or
cmpb
xor
cmp
sub
callw
cld
imul
or
nop
push
cmp
and
cltd
mov
leave
add
mov
push
add
shlb
push
cmp
push
jecxz
fstl
sti
dec
aas
sar
push
push
pushf
cmp
and
scas
xchg
cmp
mov
aas
fidivrs
cmp
arpl
cmp
je
and
ror
js
ror
out
lcall
arpl
fsts
or
push
adc
and
and
cmp
sub
sub
repnz
imul
push
bound
cmpb
int3
bound
cmp
ret
loop
cmp
push
cmp
lea
rdmsr
dec
sarb
inc
pop
in
jo
sbb
xor
mov
xor
cs
xor
mov
cld
into
cld
xlat
mov
aaa
adc
dec
push
aaa
lock
xor
jo
cmc
sti
enter
sbb
mov
aaa
xor
pop
mov
inc
jmp
push
jne
aaa
mov
pop
gs
imul
shrb
cmp
clc
pop
cmc
popf
gs
test
aaa
lock
dec
imul
aaa
xor
jb
push
aaa
xor
xorb
in
ss
mov
or
mov
sub
sub
popf
repnz
inc
sub
dec
mov
jp
jae
call
sbb
adc
add
adc
aaa
shrb
sahf
aaa
lock
push
jg
out
dec
xchg
lahf
push
aaa
adc
mov
inc
mov
mov
mov
aaa
lock
int
enter
inc
or
cmp
inc
dec
loope
xorb
popf
xchg
aaa
lock
xor
test
pop
notl
aaa
xor
pop
sub
lock
and
jg
xchg
fwait
or
mov
dec
mov
and
in
push
shrb
xchg
jo
mov
call
jb
sar
jo
xchg
aam
mov
addl
jno
popa
add
or
adc
in
out
iret
pop
cmp
mov
dec
cs
and
ja
inc
sub
movsb
inc
cmpl
ja
or
xor
mov
lock
ss
out
scas
xlat
or
fdivp
xchg
jae
adc
stos
movsb
dec
push
ss
cwtl
ss
loop
xchg
ss
cmp
ficompl
lds
fstl
pop
in
addr16
insb
and
scas
xorl
push
iret
stos
ss
popf
jle
ss
mov
arpl
sbb
mov
xor
jo
jo
ss
mov
adc
or
lock
sbb
nop
ss
add
mov
xorb
or
add
nop
push
and
ss
in
cmp
jmp
int3
ja
push
inc
sub
inc
lret
jge
aaa
test
mov
inc
or
jo
repnz
aam
pop
pusha
sbb
xlat
sbb
xchg
and
sub
push
xor
push
cmpsl
mov
mov
xor
adc
enter
nop
mov
and
xor
add
sub
stos
add
xor
pushf
xor
push
movsl
push
xor
test
mov
xchg
mov
fisubrl
sub
test
mov
or
in
dec
in
pop
fsubrs
jns
xor
out
lcall
daa
lods
xor
mov
push
out
jnp
loopne
and
ljmp
test
xor
xor
xor
xor
dec
addl
xor
xor
aad
adc
xor
xor
inc
pop
scas
xorb
hlt
mov
fildll
loopne
int
scas
fs
fwait
mov
sbb
jo
movsb
and
mov
or
in
pop
sti
clc
push
xor
sbb
mov
xor
cmpsb
add
add
