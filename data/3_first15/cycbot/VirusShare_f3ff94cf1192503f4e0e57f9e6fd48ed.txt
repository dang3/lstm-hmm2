add
int3
add
add
sub
sub
sub
sub
cmp
xchg
or
or
or
lods
lods
and
and
add
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sub
sub
sub
add
add
faddl
add
fldcw
lods
add
add
jl
roll
add
pop
pop
add
add
mov
mov
div
mul
in
add
add
add
inc
inc
inc
add
mov
and
cs
rol
add
add
cmp
add
add
mov
mov
mov
add
out
out
out
out
out
out
xchg
xchg
xchg
mov
add
add
add
scas
add
add
add
add
fstp
fstp
fstp
fldl
add
adc
adc
adc
adc
adc
sub
sub
sub
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
addb
movsb
movsb
movsb
jns
jns
jns
jns
add
add
out
out
subb
scas
scas
scas
scas
scas
enter
insb
mov
inc
inc
inc
inc
jl
jl
jl
add
fcomp
fcomp
fcomp
fsubs
daa
add
add
stos
cltd
cltd
add
add
add
in
in
in
in
add
add
push
push
jbe
lcall
rcl
rcl
shll
mov
mov
mov
outsb
lods
mov
add
add
add
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
or
out
out
out
out
out
add
add
add
add
xchg
sbb
add
cmpsb
cmpsb
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
incb
add
add
or
add
add
mov
push
push
push
out
inc
inc
fcmovnu
fcmovnu
add
add
js
js
in
sbb
fcmovnu
fcmovnbe
rcl
rcl
rcl
rcl
rcl
rcl
adc
adc
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
push
push
push
push
imul
add
imul
xchg
xchg
vpunpcklwd
popa
popa
popa
popa
rcl
rcl
add
add
add
add
into
into
add
add
add
add
add
add
add
jg
jg
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xor
xor
repz
int
sbb
sbb
sbb
sbb
add
add
inc
inc
inc
inc
inc
inc
inc
lds
sub
sub
dec
add
add
or
or
jmp
jmp
xchg
data16
ss
inc
add
add
add
aas
rol
push
push
push
push
push
push
push
push
push
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcmovu
fcomp
fcomp
cmpsl
cmpsl
cmpsl
adc
adc
add
add
or
or
or
aad
jae
jae
jae
sbb
sbb
sbb
sbb
icebp
icebp
push
push
push
push
push
push
push
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
mov
mov
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
add
add
add
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
push
dec
dec
dec
dec
dec
dec
dec
dec
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
addl
add
ror
jecxz
jecxz
jecxz
jecxz
jecxz
add
faddl
add
ss
xchg
xchg
dec
add
leave
xchg
xchg
add
add
add
test
test
insl
insl
insl
leave
leave
leave
leave
leave
leave
leave
enter
add
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
mov
mov
pop
pop
pop
pop
pop
mov
add
add
add
add
add
or
xchg
xchg
xchg
add
mov
out
add
add
add
add
sub
add
addr16
popl
add
add
mov
xor
sldt
test
test
test
test
test
test
test
add
add
jl
jl
jl
jl
jl
jl
jl
add
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
adc
adc
adc
loope
je
enter
test
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
pusha
pusha
pusha
pusha
jecxz
jecxz
jecxz
jecxz
pushf
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
adc
adc
mov
add
add
add
add
cltd
cltd
cltd
and
and
and
and
jbe
jbe
jbe
add
add
add
das
das
add
mov
add
and
flds
add
daa
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
mov
add
add
add
stos
stos
stos
stos
stos
stos
stos
stos
add
xchg
dec
dec
dec
imul
addr16
div
add
add
mov
and
xlat
xlat
xlat
add
add
les
dec
dec
dec
dec
dec
pop
pop
les
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
and
and
and
push
push
push
push
push
push
push
push
push
push
push
add
add
add
ret
ret
add
jne
jne
jne
call
add
into
add
outsb
outsb
outsb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
std
ja
inc
inc
inc
add
add
lcall
es
mov
add
add
add
add
dec
dec
daa
daa
aad
aad
add
ss
add
sbb
sbb
sbb
add
add
pop
add
addr16
inc
aaa
aaa
aaa
aaa
aaa
add
add
es
fstp
in
in
in
in
mov
mov
add
add
add
adc
addb
add
add
add
add
aam
xchg
xchg
add
imul
inc
mov
mov
dec
dec
push
push
push
push
jnp
dec
dec
dec
dec
aaa
aaa
aaa
aaa
aaa
div
div
div
testb
add
add
mov
fldcw
dec
dec
dec
ljmp
test
add
xor
add
add
adc
insl
insl
insl
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
add
add
add
push
push
push
add
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnbe
rcl
rcl
rcl
rcl
ror
or
or
arpl
arpl
arpl
add
loopne
rol
rol
scas
add
add
stos
pop
stc
stc
stc
stc
stc
stc
stc
stc
stc
jl
jl
add
add
add
add
add
ljmp
ljmp
ljmp
ljmp
add
mov
mov
mov
stos
stos
ret
add
xchg
add
add
add
add
jb
add
add
push
push
add
ret
ret
ret
ret
ret
ret
cmc
cmc
cmc
cmc
js
mov
mov
push
pop
pop
pop
cmp
mov
add
add
add
add
int
int
mov
fildl
add
sub
sub
add
add
cmpsb
cmpsb
cmpsl
popa
add
out
out
out
out
out
out
out
out
mov
pop
pop
pop
pop
or
or
jge
jge
jge
jge
jge
jge
xchg
xchg
xchg
xchg
mov
rcl
aam
aam
aam
or
pop
pop
pop
pop
mov
xor
or
or
or
or
or
or
or
add
push
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
ds
and
and
add
add
add
add
add
or
or
jmp
jmp
push
repnz
add
add
xlat
xlat
xlat
xlat
xlat
xlat
faddl
add
add
add
add
add
sahf
sahf
sahf
sahf
js
outsl
outsl
outsl
outsl
add
push
push
push
push
push
push
stc
stc
stc
add
push
push
add
add
and
and
and
and
pop
pop
pop
add
add
add
in
jecxz
addl
add
add
mov
add
add
fcmovu
cmc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
call
lahf
lahf
sahf
sahf
adc
addr16
addr16
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
les
add
push
push
push
push
push
aas
aas
aas
aas
aas
je
je
jg
jg
jg
mov
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
div
idivl
add
aas
aas
aas
aas
push
push
push
push
sub
sub
clc
mov
mov
xlat
add
add
stc
push
push
push
push
push
push
push
push
pop
pop
pop
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
inc
inc
lret
dec
stos
stos
stos
stos
stos
stos
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
mov
aam
xchg
xchg
xchg
xchg
xchg
xchg
add
add
rcl
dec
dec
dec
dec
pop
pop
pop
rol
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
rcl
imul
add
je
push
push
push
inc
inc
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
aam
aam
cld
cld
cld
cld
mov
mov
mov
mov
mov
add
add
cli
cli
cli
cli
cli
cli
add
add
int3
int3
int3
int3
int3
int3
int3
rcl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
add
or
push
push
add
jmp
jmp
add
add
add
mov
add
sub
add
inc
inc
inc
pop
and
add
add
add
add
add
add
add
add
add
arpl
stos
stos
stos
xchg
inc
mov
xor
add
push
add
add
add
add
add
iret
iret
iret
iret
iret
iret
iret
iret
aaa
aaa
inc
inc
mov
lcall
and
enter
enter
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
mov
mov
mov
mov
mov
mov
sub
add
add
add
add
jbe
jbe
jbe
jbe
xlat
add
inc
inc
mov
add
add
add
sub
sub
sub
sub
xor
xor
xor
xor
xor
push
or
and
and
and
and
xor
je
cltd
mov
add
add
add
aam
cmc
cmc
addl
rcl
rcl
rcl
rclb
rol
rol
rol
rol
rol
rcr
add
push
push
push
push
push
push
add
add
int
int
int
int
pop
pop
pop
pop
pop
pop
pop
js
fwait
fwait
add
aaa
add
add
add
nop
nop
test
add
add
inc
and
and
and
and
jb
jb
jb
dec
dec
dec
dec
dec
add
add
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
rol
rorl
rol
rol
int
add
add
add
add
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
add
add
test
test
test
push
push
push
push
push
push
add
rol
call
adc
add
mov
add
add
mov
mov
add
add
data16
add
push
push
sub
insb
insb
insb
insb
add
and
add
add
div
negl
fwait
fwait
fwait
cmp
cmp
cmp
cmp
es
add
add
add
iret
add
adc
adc
adc
adc
add
lds
adc
adc
adc
add
add
add
add
jnp
test
test
add
add
dec
dec
dec
dec
dec
dec
stc
popl
add
add
cmc
cmc
cmc
xchg
inc
inc
inc
inc
inc
inc
pop
pop
pop
fsubrl
or
add
add
sahf
sahf
sahf
aas
dec
push
push
push
pusha
pusha
pusha
pusha
pop
pop
pop
add
add
sarb
cmp
cmp
out
out
out
add
add
add
loop
add
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
cmp
sub
sub
add
add
add
lret
lret
lret
lret
add
add
add
in
in
push
push
push
sub
sub
sub
sub
sub
sub
sub
sub
add
add
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
xor
xor
xor
add
add
and
and
or
add
cmp
cmp
add
out
out
out
out
out
out
out
out
out
out
out
out
outsb
outsb
pop
pop
pop
jo
jo
insb
insb
insb
insb
insb
insb
insb
insb
insb
add
add
add
sbb
sbb
sbb
jno
jno
add
add
add
add
inc
cli
cli
cli
cli
cli
cli
cli
pop
pop
pop
pop
pop
je
je
je
je
je
je
into
into
into
into
insl
insl
insl
insl
insl
insl
insl
insl
jge
add
add
add
ss
add
add
or
or
sub
sub
add
xor
lea
jne
add
xor
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
cs
jns
jns
add
pop
pop
pop
add
add
add
fucompp
jmp
add
icebp
jmp
jmp
add
add
add
test
test
test
aas
aas
aas
aas
aas
and
and
and
cltd
cltd
cltd
cltd
add
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
loopne
loopne
loopne
cli
cli
cli
cli
cli
cli
add
cli
fstp
mov
incb
add
adc
adc
adc
adc
adc
xchg
xchg
push
push
push
push
add
mov
mov
rcl
ret
ret
repz
xor
cld
cld
cld
lret
lret
outsl
outsl
outsl
outsl
outsl
outsl
cwtl
cwtl
std
dec
dec
dec
dec
out
out
out
add
add
jmp
jmp
add
add
add
add
add
dec
dec
dec
leave
leave
leave
add
arpl
mov
mov
movb
adc
adc
adc
adc
adc
add
fadds
add
cmp
sub
dec
add
inc
inc
inc
inc
inc
inc
int
int
add
nop
nop
nop
nop
nop
nop
rcl
rcl
roll
add
add
mov
mov
mov
mov
xor
mov
mov
mov
push
push
push
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fnstsw
pop
add
add
adc
add
add
cmp
xor
lods
sbb
add
add
add
add
lret
es
iret
iret
iret
iret
iret
add
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
xchg
and
and
add
or
or
or
or
cmp
push
push
push
push
push
push
push
jbe
add
mov
ds
add
scas
scas
scas
scas
scas
add
sti
sbb
sbb
sbb
in
jbe
jbe
jbe
dec
dec
dec
dec
dec
push
lcall
add
add
add
inc
add
add
add
adc
add
add
div
imulb
stos
stos
stos
stos
stos
fstp
fstp
fstp
mov
pop
popa
popa
popa
popa
popa
popa
popa
popf
add
inc
dec
dec
dec
dec
dec
dec
dec
dec
add
cmp
add
add
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
addr16
jb
jb
add
pop
pop
xchg
sbb
or
add
adc
adc
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
jns
push
push
push
push
sbb
sbb
scas
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
or
jnp
add
ret
scas
es
jge
jge
add
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
fs
sub
sub
add
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
add
add
insb
insb
mov
or
or
mov
mov
mov
add
add
cmpsl
cmpsl
cmpsl
es
add
mov
add
add
add
aaa
add
clc
clc
clc
clc
repz
add
add
push
pop
pop
ds
add
add
add
jo
jo
add
leave
stos
stos
stos
stos
stos
add
add
add
add
and
and
cmp
cmp
in
sub
sub
sub
sub
sub
sub
sub
stos
xor
pushf
or
or
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
movsb
add
add
add
addl
add
std
std
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
push
add
or
or
or
add
mov
add
add
xor
mov
mov
mov
mov
mov
mov
mov
inc
lds
pop
mov
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
add
add
inc
add
xchg
xchg
xchg
jns
jns
jns
add
push
push
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
rol
mov
jge
jge
add
add
clc
clc
clc
clc
clc
clc
clc
clc
add
add
add
add
add
add
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
popf
popf
popf
popf
mov
add
add
add
xor
xor
add
add
add
add
enter
enter
add
inc
inc
inc
cs
add
add
add
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
jmp
sbb
lods
lods
lods
lods
lods
lods
lods
add
js
js
add
cmp
push
push
cmc
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
imul
out
out
out
out
out
out
out
out
add
add
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
add
mov
arpl
arpl
arpl
add
add
es
dec
add
add
mov
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
add
lret
push
add
add
add
push
push
add
add
mov
pop
pop
pop
ret
push
mov
mov
mov
add
add
pop
pop
pop
pop
pop
pop
add
add
add
cwtl
add
add
add
add
xlat
xlat
xlat
out
cmc
cmc
cmc
cmc
cmc
cmc
cmc
mov
add
add
push
push
push
push
push
push
push
add
add
add
jno
jno
arpl
arpl
arpl
add
push
push
add
push
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cwtl
adc
adc
adc
adc
adc
dec
dec
dec
dec
dec
je
je
or
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
add
add
add
or
or
or
or
jnp
add
dec
ret
ret
add
loope
sub
and
and
and
and
and
push
push
dec
add
add
mov
jp
jp
jp
jp
jp
jp
jp
mov
mov
mov
mov
cmp
cmp
pop
add
add
add
pop
add
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
in
in
daa
daa
daa
daa
add
incl
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
xor
add
add
pop
pop
pop
pop
pop
pop
add
sbb
sbb
sbb
sbb
sbb
insl
add
bound
bound
add
pop
pop
pop
inc
stc
stc
stc
add
add
xor
xor
add
rcl
rcl
rcrb
cwtl
cwtl
into
into
into
inc
inc
inc
inc
inc
inc
inc
sub
inc
mov
add
add
add
add
cli
xor
xor
add
cmp
add
rcl
rcl
rcl
mov
mov
movb
add
add
loope
loope
loope
loope
aaa
add
add
add
cmovl
imull
push
push
add
add
sti
dec
dec
lods
lods
lods
lods
lods
lods
lods
lods
add
add
add
add
add
add
adc
adc
adc
add
in
sti
out
sti
sti
sti
sti
sti
lahf
lahf
lahf
lahf
lahf
adc
adc
add
add
popl
add
add
add
add
add
add
loopne
add
bound
add
enter
test
mov
sub
sub
sub
add
add
dec
dec
dec
dec
dec
stos
stos
hlt
add
add
cmp
add
mov
add
add
int
int
int
mov
add
add
sub
sub
sub
push
add
add
arpl
dec
dec
and
add
inc
inc
inc
inc
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
add
mov
and
and
jns
cmp
fstp
fstl
push
push
push
push
push
push
jb
cmp
and
and
and
lds
and
add
push
push
inc
inc
inc
inc
inc
inc
inc
leave
add
add
push
push
push
push
push
push
push
push
push
add
add
jp
jp
jp
test
add
add
stos
add
popa
add
add
sub
hlt
hlt
add
add
add
addl
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
cmpsl
add
imul
imul
movsl
movsl
movsl
movsl
movsl
movsl
rcl
rcl
sarb
xchg
jne
jne
mov
inc
inc
inc
inc
xor
add
addr16
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
push
push
push
add
add
je
je
je
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
add
or
addb
push
add
add
add
clc
clc
clc
clc
mov
sbb
sbb
sbb
sbb
pop
pop
pop
pop
or
jp
jp
jp
jp
imul
or
or
xor
ret
out
call
call
cmc
add
ds
add
rol
adc
adc
add
add
add
jecxz
jecxz
jecxz
jecxz
push
push
stc
stc
add
add
jp
iret
iret
iret
dec
dec
dec
dec
jge
jge
jge
add
add
int3
int3
int3
int3
int3
addb
push
push
push
and
and
and
in
in
in
in
add
out
out
out
out
out
out
out
out
out
add
inc
inc
inc
inc
mov
das
das
das
das
das
das
das
das
das
add
add
aaa
aaa
aaa
aaa
aaa
add
add
inc
inc
inc
inc
inc
inc
inc
inc
add
push
push
push
push
push
push
push
push
add
add
push
push
push
push
xchg
add
add
inc
xchg
xchg
xchg
xchg
xchg
add
mov
mov
mov
mov
addl
add
add
cmp
scas
scas
scas
scas
scas
scas
scas
scas
add
rcl
roll
add
add
add
lcall
add
movl
incl
loop
loop
loop
loop
loop
loop
loop
loop
loop
add
add
loop
loop
mov
push
push
add
shl
out
out
add
add
add
add
jge
adc
sbb
add
add
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
mov
mov
mov
mov
push
push
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
rol
rol
add
add
adc
mov
mov
add
jnp
jnp
jnp
jnp
jnp
rol
add
xor
xor
add
push
jo
jo
jns
jns
jns
jns
aad
add
add
add
adc
and
ss
add
add
add
xor
add
mov
mov
jns
jns
jns
jns
push
push
add
add
lock
xchg
xchg
xchg
add
add
lock
fcomp
fadds
add
add
add
add
add
add
add
add
add
add
cmc
cmc
add
mov
rclb
stos
fstpt
ds
shrl
add
pop
pop
pop
bound
cmp
cmp
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
inc
inc
inc
inc
add
add
inc
inc
cli
cli
cli
cli
xor
push
push
push
mov
mov
add
ljmp
add
add
pop
pop
pop
add
adc
jae
dec
or
pop
pop
pop
pop
pop
add
sti
add
add
add
lret
lret
lret
lret
lret
lret
lret
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
addb
add
leave
leave
leave
leave
add
xor
xor
xor
mov
add
cli
in
add
add
and
add
add
xor
add
add
ja
ja
ja
ja
ja
push
push
rcl
rcl
rcl
rcl
rol
sub
sub
sub
sub
add
aas
aas
cwtl
cwtl
cwtl
cwtl
add
fs
mov
push
push
push
push
push
push
push
push
push
add
add
adc
adc
adc
adc
adc
push
push
push
push
add
or
add
add
rcl
rcl
rcl
rcl
add
add
mov
add
sub
sub
add
add
add
add
leave
leave
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
add
add
mov
out
out
out
out
out
out
out
out
cmpsl
jns
add
add
orps
add
add
add
push
push
push
push
add
lods
lods
add
add
xor
xor
jge
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
fnstcw
aas
aas
aas
aas
aas
aas
jl
add
add
pop
pop
add
add
add
add
fildl
add
rcl
or
push
adc
adc
add
add
pop
pop
pop
pop
pop
pop
fcomp
fcomp
fdivs
xor
lcall
add
add
add
add
ret
ret
add
push
push
push
mov
addb
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
test
aam
aam
aam
aam
aam
aam
aam
aam
aam
lods
outsl
dec
jno
inc
sbb
add
inc
andb
popl
jle
movsl
movsl
inc
lods
outsl
in
mov
inc
mov
test
loopne
jecxz
imul
je
mov
cli
and
or
std
notb
repz
push
aas
mov
mov
push
jno
aaa
outsl
xchg
dec
lods
das
mov
loop
xlat
movsl
ds
inc
outsb
rorb
push
das
push
xor
and
cmpl
push
popf
sar
pushl
std
cmp
add
repz
jg
add
jmp
add
add
pusha
pop
or
jecxz
ss
in
js
lds
inc
ss
js
stc
mov
scas
pushf
shl
mov
add
mov
add
cmp
loopne
nop
andb
faddp
out
movd
insb
xor
out
loopne
dec
jecxz
xchg
or
or
lock
push
loop
or
add
scas
inc
and
and
stos
push
sbb
or
loopne
ficomps
jns
adc
scas
xor
mov
xchg
rolb
scas
je
jnp
push
stc
pop
iret
movsb
and
sbb
stos
inc
pusha
movsl
addb
and
mov
inc
sub
push
ret
pushf
sub
xor
mov
pusha
jbe
inc
inc
lods
mov
adcb
or
and
mov
icebp
pop
sub
add
inc
and
add
mov
adc
fisttpll
mov
cld
inc
inc
es
loopne
mov
mov
leave
add
loop
pop
cmp
cs
andb
lret
jae
in
xlat
scas
loopne
aam
repz
dec
xchg
inc
xchg
xchg
xlat
sbb
call
int
cmc
mov
mov
mov
insb
addr16
jns
addb
fidivs
cmc
jmp
add
mov
ds
je
cmp
addr16
das
dec
ljmp
rolb
imul
ds
xchg
insl
xor
test
mov
mov
rolb
mov
push
shlb
push
and
and
jo
repz
sub
shrb
xchg
xor
repz
rcr
inc
cltd
cmp
out
cltd
mov
sub
inc
pop
push
test
and
mov
mov
jae
dec
sub
mov
fldenv
rolb
add
inc
inc
dec
bound
pop
leave
xor
inc
mov
les
orb
pusha
push
inc
out
xchg
into
add
push
dec
loope
pop
add
xor
sbb
test
rol
xor
pusha
in
add
or
adc
add
in
push
sbb
repz
mov
xor
sub
mov
mov
outsl
enter
mov
outsb
push
fdivrs
mov
pusha
add
arpl
fwait
mov
push
jbe
pop
test
outsb
js
mov
shl
rcr
test
cmp
add
in
xor
daa
dec
lret
or
stos
lods
mov
in
out
jge
sub
popa
sbb
pusha
mov
test
rclb
pusha
loopne
gs
clc
out
inc
je
push
daa
sbb
mov
sub
outsb
andl
int
or
pusha
and
or
in
jmp
add
xchg
shll
fwait
pop
mov
pop
sti
lahf
mov
push
and
stos
pushf
cli
and
pop
movl
aad
fimull
pushf
iret
pop
dec
insb
lods
add
xlat
sub
jge
or
jmp
bnd
push
jge
ja
fcmovnbe
mov
cli
xchg
shl
cwtl
inc
aas
in
mov
pusha
sbbb
push
jae
lock
pmaxub
fstl
mov
add
mov
aaa
and
arpl
out
imul
pop
aas
mov
mov
jne
or
loopne
inc
push
add
inc
pusha
inc
js
jnp
xchg
cmp
dec
adc
jne
jmp
add
pop
dec
popf
sahf
adc
arpl
inc
and
cmp
insb
push
add
jmp
jge
scas
pusha
loopne
dec
and
mov
mov
ret
lock
subb
inc
sbb
push
dec
mov
and
add
mov
sbb
mov
jg
push
stos
push
sub
leave
fwait
lea
dec
ljmp
cmp
out
mov
add
sub
add
xorb
out
cltd
adc
jmp
pusha
push
mov
xorb
in
aas
iret
movsb
pusha
add
popf
mov
pop
and
mov
and
sub
incl
add
cmp
in
pop
popf
lret
or
loopne
aam
dec
pop
pop
test
mov
dec
or
mov
inc
push
add
rcr
inc
int3
hlt
jne
pop
jns
popf
jle
popf
bound
add
loopne
mov
nop
gs
pop
and
inc
js
mov
out
mov
repz
push
or
in
and
sbb
cmp
sbb
jbe
pop
fmuls
cwtl
push
int3
mov
out
out
dec
add
pusha
test
loope
movsb
loopne
pushf
repz
jbe
sub
loopne
ficompl
loopne
cmp
test
loopne
dec
ss
add
push
pop
aaa
push
std
jle
lock
mov
out
push
add
inc
fs
or
orb
out
mov
or
add
hlt
mov
xor
fcoms
clc
push
shr
call
dec
fcomps
mov
out
hlt
jge
dec
mov
add
and
and
inc
and
rorb
pop
inc
mov
js
fldcw
fldt
andb
andb
stc
sub
mov
and
scas
mov
addb
xor
je
cwtl
or
adcb
addb
movsl
fwait
pop
xor
dec
stc
jb
addb
ret
push
lret
inc
lret
jecxz
push
mov
aas
add
orb
andb
lret
in
fstl
cld
push
sub
add
insl
xchg
inc
enter
mov
jle
xor
outsb
mov
sub
and
loopne
test
lods
inc
mov
push
push
sub
adc
mov
inc
jecxz
add
inc
and
mov
daa
clc
and
int
std
push
dec
and
add
shl
pop
ficoml
repnz
inc
xlat
cmp
ret
push
incb
fnstcw
and
loopne
and
notb
stos
inc
pusha
mov
push
inc
mov
call
andb
xchg
add
mov
push
addb
sbbl
orb
add
jg
pop
sahf
add
mull
push
pop
das
jmp
pusha
mov
fistpl
dec
mov
les
push
pop
cmp
and
sub
loopne
mov
loopne
outsb
int3
addb
mov
mov
movsl
bound
and
out
jp
adc
mov
push
stos
shl
movsl
push
arpl
ds
jle
xor
lret
sti
rcll
inc
xorb
add
xor
out
aas
and
cwtl
int3
scas
outsl
lcall
mov
or
xchg
in
dec
mov
js
inc
loopne
outsl
mov
cmp
and
and
sbb
les
pop
aam
dec
iret
mov
xchg
fdiv
loopne
inc
mov
pusha
and
and
add
mov
pop
ja
xchg
fidivl
jno
xchg
test
push
jle
sbb
cmc
mov
adc
push
repz
fs
fwait
in
out
xor
jns
add
cmp
push
pusha
add
arpl
mov
push
add
rcl
pusha
pusha
loope
imul
in
push
dec
xchg
cld
sub
pop
push
js
mov
and
inc
sub
sub
and
mov
sub
pusha
and
xor
je
into
iret
out
and
and
daa
gs
loopne
and
pusha
inc
test
loopne
repz
fs
mov
out
cmp
loopne
xor
sub
loopne
xlat
loope
shlb
rclb
mov
hlt
pop
xor
dec
cmp
arpl
enter
and
mov
std
mov
mov
inc
xchg
sahf
mov
inc
mov
testb
rol
and
mov
xchg
xchg
lea
inc
sbb
loope
sti
popf
or
inc
jno
cs
loopne
pop
and
push
or
shrb
imul
stos
inc
rolb
mov
pusha
and
movsb
andb
cmp
arpl
rolb
pop
cmc
jmp
lret
fidivs
das
in
call
cmp
and
inc
stc
or
add
dec
jo
mov
and
gs
arpl
fprem
out
mov
or
test
mov
jnp
cli
addb
outsb
cmpsl
sub
lret
mov
pop
and
and
pusha
mov
inc
and
xor
lret
jl
rclb
into
jmp
jne
clc
inc
add
mov
cmp
xchg
adc
dec
iret
dec
add
sub
lods
or
xchg
push
xor
push
push
lcall
sbb
inc
cmp
rcrl
mov
adc
and
pop
data16
sbbl
cmp
add
and
loopne
inc
sbb
cmpsb
and
inc
inc
repz
push
shrb
outsl
lock
aam
addb
lds
lea
adc
pusha
rorb
in
sub
adcb
loopne
sub
scas
mov
fnclex
push
inc
loopne
ja
inc
adc
xor
loop
aaa
or
imulb
inc
ror
cmpsb
andb
jle
popa
incb
pusha
hlt
lret
add
outsb
pop
inc
sub
inc
cmc
mov
rcrb
fs
scas
add
data16
add
inc
sbbb
sub
push
cmp
stc
add
add
int3
lret
cmp
loopne
aas
mov
addb
in
popa
cmp
mov
sbb
popf
mov
mov
mov
xchg
pop
adc
xchg
pop
scas
mov
pusha
fcmove
shl
mov
lds
test
and
and
mov
mov
inc
test
sub
mov
pop
gs
pusha
sub
add
pusha
loopne
outsl
mov
inc
add
shlb
int
lret
inc
add
aad
push
sbb
icebp
jo
shll
sub
leave
fs
or
loopne
and
insl
adc
mov
repz
pusha
mov
add
sub
rol
mov
loopne
repz
sub
loopne
xchg
xchg
sbb
int
test
vmovdqu
ret
cmp
les
mov
cwtl
add
addb
fimull
loopne
repnz
lock
mov
js
jge
pusha
mov
push
in
pop
int3
scas
and
pop
in
fstl
adc
xor
push
and
pusha
adc
inc
test
mov
and
pusha
xchg
add
and
jmp
mov
rorb
mov
test
sbb
leave
pop
in
dec
mulps
and
stos
movsl
or
push
roll
push
jmp
rolb
xor
push
add
call
movsl
push
addb
adc
loope
negl
rolb
jo
mov
mov
mov
andb
addb
aad
insl
enter
push
cmp
sub
loopne
shl
sub
loopne
addr16
adc
xlat
out
repz
ljmp
andb
dec
mov
xor
test
rol
jp
mov
add
add
lcall
icebp
ja
shl
and
adc
xchg
jmp
mov
popf
aam
jmp
loopne
insb
test
add
loopne
inc
adc
jns
fcompl
and
push
xor
mov
lea
pop
lods
rolb
in
js
mov
cltd
push
sbb
inc
out
stc
xchg
mov
shll
mov
pop
jecxz
mov
jae
mov
fldenv
test
mov
xor
sbb
add
jnp
jnp
std
imul
add
xor
mov
ret
xor
mov
jnp
cmp
dec
push
xchg
mov
mov
add
mov
pusha
loopne
fisubs
iret
das
int3
lret
mov
sqrtps
loope
fdivrs
xorb
xchg
jae
lds
pop
cltd
popf
rolb
repz
cmp
rolb
sti
gs
mov
mov
mov
test
pop
cwtl
or
inc
mov
test
pusha
and
add
fimuls
mov
fimuls
inc
movsl
xchg
add
mov
and
aad
mov
inc
or
and
rolb
and
push
jge
idivb
in
sbb
mov
andb
shlb
inc
mov
enter
bswap
movsl
call
lret
sub
inc
fldenv
xchg
out
add
and
fnstcw
inc
loopne
cltd
lds
cmpsl
inc
fmulp
mov
popa
push
pop
push
loopne
scas
adcl
rolb
cmp
and
dec
inc
push
shll
inc
mov
pusha
dec
daa
adc
rorb
push
mov
and
xor
inc
lret
inc
adc
pusha
mov
and
inc
out
pop
mov
add
sub
dec
movsl
jae
inc
inc
mov
stos
loopne
add
sarb
lcall
and
pusha
inc
adc
leave
cmp
in
iret
sub
fcomi
outsl
ljmp
jp
sahf
mov
imul
dec
sub
xchg
sbb
imul
inc
cmp
shl
xor
xchg
lcall
loopne
dec
pop
dec
push
inc
adc
jmp
cmp
or
and
cwtl
cltd
data16
xchg
and
insl
push
add
addl
and
push
nop
rcrb
repz
inc
std
mov
push
fistps
jne
dec
hlt
into
xchg
loopne
inc
add
and
fucomp
jl
loop
cmp
mov
cmpl
or
pop
pop
stc
fwait
addb
xchg
loop
inc
sbb
inc
and
inc
push
gs
ret
sbb
pusha
jl
lahf
and
push
sbb
cmpl
test
add
pusha
mov
ret
shl
rclb
sahf
cmp
sti
int3
adc
or
sub
inc
adc
xor
pop
jge
in
mov
loop
mov
xchg
dec
sbb
cwtl
sbb
and
sbb
sbb
mov
xor
sub
dec
add
sarb
xor
lea
push
push
add
and
outsl
dec
test
pusha
pop
push
add
xchg
dec
bound
sbbl
sbb
mov
sbb
pusha
and
and
and
js
aam
add
mov
cmpsb
add
inc
and
rol
pop
mov
and
sbb
cmpsl
jg
testl
fiaddl
inc
cmpb
and
pushl
clc
fildll
mov
mov
push
adc
insl
scas
cmpsb
and
add
out
rol
add
and
xor
push
pusha
shl
aam
mov
out
pop
mov
adc
inc
loop
aaa
jb
mov
or
aaa
fstpt
loopne
jnp
jns
cmp
mov
fwait
hlt
cmp
cmp
xchg
mov
int3
sbb
push
jbe
jb
sbb
loopne
and
addl
pop
sti
and
loopne
mov
rolb
mov
push
xor
test
and
test
popa
rcrl
mov
add
popa
inc
push
sub
and
add
gs
adc
inc
and
jge
lahf
add
pushl
jo
mov
in
sbb
inc
xchg
push
push
movsb
mov
add
and
dec
int3
lock
jo
jbe
fsubrs
and
inc
mov
lea
fldl2e
or
sbb
sub
xchg
in
sbb
out
push
lock
cmp
dec
data16
sub
fs
and
inc
sbb
dec
ffree
divb
pop
bound
mov
add
inc
stos
inc
mov
cmpsb
and
xor
lds
push
imul
add
mov
dec
xor
out
mov
mov
sbb
inc
cwtl
inc
out
repz
xchg
dec
test
andb
fcompl
mov
jp
mov
imul
push
rolb
loope
mov
adc
loopne
mov
adc
add
mov
or
add
jne
push
pop
push
frstor
dec
clc
ja
and
mov
add
imul
pop
addr16
out
lcall
addb
and
lods
loopne
int
push
sub
add
and
and
sub
out
outsl
sbb
pop
imul
push
pop
add
roll
push
or
add
push
add
or
and
pusha
mov
push
out
ss
adc
xor
sub
mov
xchg
insb
or
mov
inc
stc
mov
mov
inc
gs
loopne
and
scas
inc
add
xchg
subb
add
pop
push
lods
add
out
mov
sub
inc
mov
loopne
add
mov
test
ss
dec
mov
pop
mov
push
jbe
inc
pusha
mov
mov
rolb
cld
sbb
les
pop
in
shll
pusha
rclb
fwait
mov
or
test
inc
shlb
mov
or
shlb
xchg
popa
sbb
cmpsl
fs
and
outsl
bswap
sbb
xor
sbbl
pusha
mov
push
jbe
jns
aad
xor
cwtl
insl
test
in
xor
pop
mov
aad
lock
cli
or
loopne
daa
mov
jb
rolb
fsubrp
adc
inc
shlb
xchg
gs
int
andb
xor
idivb
scas
and
add
adc
rcll
pop
or
les
adc
aam
xor
andb
cmp
and
mov
daa
mov
mov
out
sar
gs
push
rcrl
stos
andb
repnz
mov
xchg
xor
dec
mov
push
imul
fs
imul
es
xor
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
and
add
jae
fimuls
arpl
addl
xor
stos
xchg
js
fsin
out
xor
pusha
loopne
repz
in
sub
out
das
in
xchg
mov
and
add
nop
mov
and
mov
mov
mov
and
and
jb
loopne
xchg
out
xchg
mov
mov
negb
or
inc
aas
negl
or
orb
cmp
mov
lea
xor
or
and
stos
and
jmp
inc
enter
and
mov
loop
mov
pop
mov
pusha
xchg
cmp
loop
movsb
and
clc
mov
pop
dec
cld
shrl
jne
cmpsb
inc
pusha
call
enter
or
aad
movsl
andb
loop
sub
xorb
or
add
mov
clc
mov
push
rorl
movsb
shlb
pop
cmp
pusha
js
push
xlat
rolb
pusha
mov
and
std
cwtl
inc
out
cmp
andb
inc
loopne
adc
rclb
or
test
shrb
dec
jle
ds
dec
jmp
xchg
shrl
loope
sti
sbb
adc
mov
pop
push
addb
inc
add
mov
and
pusha
inc
cmp
je
icebp
test
loop
jae
add
rorb
inc
and
pushf
decb
add
jno
push
sar
jecxz
fdiv
jno
add
ja
sbb
xchg
sbb
loopne
and
dec
gs
rorl
andb
and
popf
clc
out
andb
mov
dec
insb
or
cmp
call
sbb
imull
leave
outsl
ds
insb
pop
jb
roll
loopne
xchg
mov
inc
push
jne
loopne
mov
icebp
jle
inc
push
fnstenv
mov
pusha
dec
popa
mov
and
xchg
stc
adc
sbb
and
jg
mov
inc
cmc
add
mov
mov
sbb
xor
orb
jno
add
sbb
pusha
pushf
cmp
sub
les
jne
and
add
bound
scas
rol
mov
add
rolb
outsb
inc
xchg
into
inc
mov
test
rclb
mov
ret
stos
shl
add
mov
and
add
lcall
fadds
iretw
mov
mov
aad
xor
ret
and
dec
and
pop
ds
xor
int
loopne
inc
push
adc
aaa
aam
ret
ss
mov
dec
sub
loopne
jo
jge
mov
nop
jmp
xor
nop
xchg
mov
ret
stc
std
addb
popf
inc
pop
fbld
mov
mov
add
rcl
jbe
test
ret
add
rorb
lret
sub
mov
shlb
call
mov
add
in
sti
push
inc
mov
inc
icebp
jmp
mov
decb
pop
cwtl
push
cmc
lds
pusha
sbb
lret
xor
fistl
mov
jg
push
add
fxtract
mov
mov
lds
cmpsl
or
cld
lock
insl
mov
add
rol
cmp
cmpsb
inc
sar
lea
sub
sub
ror
rcrl
add
in
push
addb
add
push
in
popf
cmp
cs
dec
dec
push
mov
xchg
mov
shrb
loopne
add
pop
stc
lock
loopne
cltd
xchg
fcmovu
rorl
add
rol
cmp
inc
lods
sub
push
or
and
in
add
outsb
xlat
mov
rolb
inc
fxtract
ds
ss
xor
loopne
out
and
mov
sub
add
jbe
data16
ds
cs
jne
mov
jb
and
push
leave
dec
inc
jg
inc
shlb
add
add
test
mov
or
cmp
and
fdivrs
cmp
sbb
mulb
xchg
or
add
jne
jne
pop
fcoml
sbbb
das
int
loopne
add
loopne
nop
pop
call
mov
cmpsb
inc
and
inc
and
xlat
cmc
bound
mov
jecxz
push
ljmp
stc
inc
shlb
add
xchg
and
and
and
add
inc
dec
jp
adc
or
lea
xchg
dec
lock
in
sar
out
sarb
ljmp
dec
fsubl
inc
sarb
test
mov
imul
je
inc
xchg
stos
xor
mov
cli
xchg
loopne
mov
jae
push
dec
jecxz
adc
xchg
cld
mov
inc
addb
stos
sbb
pusha
inc
pop
mov
jb
lea
repnz
dec
inc
mov
popf
mov
sbb
jbe
jno
sbb
mov
inc
mov
jns
ja
daa
xchg
adc
xor
sub
in
out
ja
addr16
rolb
lcall
loopne
rorb
in
add
movsl
daa
xlat
jmp
xor
xor
andb
in
xchg
adc
sarb
scas
andb
test
mov
jae
sbb
or
add
and
shrl
push
jae
aam
pop
push
pusha
mov
aas
add
inc
adc
loopne
addb
loop
addb
shlb
inc
mov
test
pop
enter
mulb
pop
jg
or
push
pusha
shrb
std
aad
sbb
loopne,pn
sbb
ret
andb
stos
loopne
cltd
mov
cs
loopne
repz
rolb
fistpl
addb
loopne
mov
mov
or
inc
xor
out
scas
loopne
out
or
out
adc
int3
mov
inc
mov
push
lcall
and
mov
dec
mov
or
icebp
mov
jge
jno
addl
pop
mov
add
popa
outsl
fs
mov
add
or
cmpsl
aam
inc
pusha
mull
das
daa
cs
test
lods
and
mov
cmp
cmc
mov
loopne
loopne
adc
fbld
scas
mov
and
sbb
inc
mov
sub
adc
and
sbbb
sub
xchg
iret
int3
rorb
movsl
jecxz
mov
insl
jg
push
pusha
add
loopne
insl
inc
test
mov
cmp
pop
jae
add
rolb
mov
mov
and
sbb
mov
pusha
push
and
rcll
imul
repz
sbb
jp
and
and
cmc
pop
les
xlat
lret
ret
dec
and
and
loopne
dec
shlb
adc
mov
push
inc
add
sbb
push
cmp
jg
sbb
stos
addb
add
clc
sahf
imul
ret
push
xor
xchg
cli
or
loopne
add
lods
mov
mov
pusha
and
and
inc
ljmp
xchg
loopne
cmpsb
addb
add
lcall
jg
jbe
aas
and
rol
shlb
adc
shlb
and
inc
aad
ljmp
jge
imul
and
loopne
not
sbb
idivb
mov
pop
out
or
and
add
fsubl
jae
addb
add
inc
sbb
inc
rcrb
xlat
xchg
addr16
mov
mov
mov
mov
in
or
cmpsb
rolb
inc
mov
orb
in
int3
sbb
sub
rol
hlt
sbb
ja
test
push
ljmp
idiv
loope
ds
lcall
or
inc
mov
inc
lock
repnz
dec
mov
xchg
xchg
dec
sub
loopne
push
pusha
shlb
mov
or
shl
pop
aam
or
loopne
mov
mov
dec
mov
insl
bswap
ret
inc
rcrb
scas
push
andb
jae
lods
inc
and
clc
pop
xchg
insl
sbb
ficompl
xchg
sarb
das
and
ljmp
loopne
cmp
lahf
dec
inc
outsl
jns
add
and
cli
ss
pusha
adc
stos
mov
loopne
xchg
aad
ret
out
pop
clc
stos
mov
jno
repz
rolb
and
scas
dec
mov
loopne
mov
mov
and
nop
mov
mov
out
cmp
js
movsl
or
roll
lods
mov
scas
jbe
sbb
mov
adc
inc
ljmp
sub
xor
hlt
adc
add
rol
mov
mov
jbe
cmc
data16
inc
mov
xchg
inc
hlt
out
inc
pop
xor
aad
subl
add
adcb
loopne
inc
xchg
push
xor
test
and
xchg
cmp
mov
cmpsl
sbb
ret
adc
add
shlb
sub
loop
ljmp
add
cmc
test
inc
mov
jg
dec
push
jl
cltd
fisubl
andb
push
fdivp
adc
push
and
push
andb
icebp
cmc
ds
cltd
xchg
push
sti
mov
pop
out
in
mov
ljmp
jp
jge
aas
sub
pusha
addb
loopne
add
mov
jl
lods
iret
xchg
stc
push
and
sarb
xchg
pusha
inc
pop
fists
pusha
pusha
cmpsb
loopne
inc
jo
cmp
mov
sti
xchg
jg
cmp
punpcklwd
mov
mov
fistpll
aad
pop
pop
fs
jnp
cmpsb
addb
fnsave
fadd
mov
mov
pop
push
xor
xor
mov
cwtl
cmp
jge
mov
inc
aaa
jecxz
jg
cwtl
iret
mov
xor
test
mov
inc
ja
lret
fbld
pusha
rclb
jno
sub
inc
pop
imul
dec
mov
loopne
jno
sub
pusha
and
mov
subb
inc
mov
lret
and
add
test
iret
jle
xchg
xchg
enter
jmp
stos
add
iret
sbb
andb
clc
cwtl
cmpsl
bound
pusha
loopne
enter
jp
outsl
pusha
lret
lea
sbb
or
add
sti
divl
and
dec
push
js,pt
scas
into
cs
sarb
das
pop
mov
jle
repnz
bound
cmp
fsubrl
xchg
scas
rolb
sbb
loopne
int
shl
push
ja
pusha
rol
imul
scas
mov
and
es
mov
mov
inc
push
pusha
add
dec
fildll
jns
and
dec
dec
mull
dec
xchg
out
out
cs
daa
icebp
call
and
shrl
cmpsl
repz
cmp
repz
xor
shr
iret
or
loopne
jmp
iret
rcll
and
ret
jb
dec
xchg
xor
fidivs
xlat
mov
xor
test
shlb
dec
data16
shl
das
xlat
jg
ret
push
andb
inc
sub
mov
lods
pusha
rclb
sub
les
andb
nop
lods
adc
aaa
sub
loopne
xchg
js
pop
mov
pusha
mov
les
nop
lret
fcompl
andb
stos
leave
jg
repz
dec
fstl
orb
jbe,pt
cs
or
rolb
mov
and
loopne
inc
jno
movsb
inc
shrb
insl
adc
lcall
fcomip
push
cli
pop
or
inc
and
testl
fidivs
sub
mov
lds
mov
inc
xor
fisttpll
cmp
clc
push
into
aaa
sahf
add
sbb
jp
repz
or
cmpsb
shlb
mov
cmpsb
add
nop
jb
in
into
sub
xorl
ds
add
rolb
mov
cs
sarb
pop
out
int
div
loop
push
mov
and
mov
and
andb
mov
cld
icebp
ljmp
or
fcomps
inc
mov
leave
sahf
lock
pop
and
loop
andb
and
lods
test
mov
test
pusha
pop
push
dec
stc
add
push
ljmp
jb
clc
lcall
and
fadds
movsb
loopne
pop
pop
xor
notl
xchg
mov
frstor
mov
xlat
cld
push
add
loopne
sbb
mov
loopne
add
int3
mov
sub
mov
mov
pop
dec
mov
int
lods
rolb
jmp
xor
add
imul
add
add
mov
ljmp
pusha
and
lahf
or
aas
insb
fistpll
cmp
adc
imull
arpl
pushf
cmc
cmc
add
mov
xrelease
push
rolb
inc
pusha
mov
xchg
pop
aam
jnp
mov
mov
movsl
jg
push
mov
shlb
movsl
or
pop
pop
mov
aas
leave
in
roll
mov
sbbb
loopne
sahf
mov
and
mov
sbb
icebp
shlb
pop
jl
fsubs
addb
adc
pusha
and
fsubs
mov
add
loopne
xor
lcall
push
cmpsl
or
orb
ret
pop
push
mov
adc
lock
push
dec
push
pop
movsb
pusha
add
xor
xor
stc
push
inc
jl
add
pop
and
add
stos
add
and
in
bound
inc
faddp
shlb
and
shlb
lret
pusha
lea
mov
sub
push
lods
adc
jle
pop
clc
ss
or
inc
sub
andb
xchg
stc
lretw
aad
adcl
push
push
xchg
pushf
mov
fisttps
sar
inc
mov
scas
or
cli
subl
repnz
nop
cld
jae
add
push
inc
push
dec
clc
repnz
nop
cld
jae
faddl
pop
add
mov
xchg
ret
js
add
add
add
mov
repnz
nop
cld
jae
add
add
pushl
clc
repnz
nop
cld
jae
add
push
add
dec
jge
jbe
push
mov
xchg
ret
add
pop
mov
pop
nop
push
mov
leave
nop
jmp
pop
jbe
add
add
clc
repnz
nop
cld
jae
pop
hlt
nop
add
add
call
shrl
repnz
nop
cld
jae
push
cmp
cltd
pop
enter
mov
xchg
ret
add
add
add
test
add
repnz
nop
cld
jae
cmc
add
add
stc
add
clc
repnz
nop
cld
jae
add
xor
scas
pusha
nop
push
mov
leave
nop
jmp
icebp
add
mov
repnz
nop
cld
jae
das
and
outsb
add
subl
nop
jmp
add
mov
in
mov
int3
jnp
add
add
add
push
cmpsl
je
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
add
out
sub
nop
cld
jae
add
add
add
add
mov
xchg
ret
add
cltd
add
add
nop
cld
jae
push
push
add
add
inc
je
clc
repnz
nop
cld
jae
jl
and
xor
push
mov
xchg
ret
scas
cmc
add
add
mov
push
mov
xchg
ret
or
mov
xor
clc
repnz
nop
cld
jae
cmp
pop
icebp
pop
push
clc
repnz
nop
cld
jae
add
add
add
pop
shlb
rolb
xor
addb
cmp
ret
cltd
in
test
add
add
sbb
xor
clc
repnz
nop
cld
jae
xchg
add
jo
inc
mov
clc
repnz
nop
cld
jae
jo
add
popl
add
and
add
leave
clc
repnz
nop
cld
jae
add
test
mov
mov
sub
repnz
nop
cld
jae
add
addb
loope
sar
repnz
nop
cld
jae
push
addl
pop
add
inc
jne
nop
push
mov
leave
nop
jmp
add
add
fdivrp
repnz
nop
cld
jae
add
add
mov
nop
push
mov
leave
nop
jmp
add
pop
hlt
mov
in
pop
rep
clc
repnz
nop
cld
jae
add
pop
ljmp
inc
add
mov
add
fidivrl
add
clc
repnz
nop
cld
jae
mov
add
scas
mov
clc
repnz
nop
cld
jae
add
subb
and
clc
repnz
nop
cld
jae
scas
push
add
or
je
add
nop
push
mov
leave
nop
jmp
add
cmp
inc
mov
add
repnz
nop
cld
jae
add
scas
scas
inc
subl
clc
repnz
nop
cld
jae
jg
add
mov
and
push
inc
add
sub
pop
add
hlt
xor
aaa
mov
clc
repnz
nop
cld
jae
nop
add
push
jmp
push
mov
xchg
ret
add
add
add
mov
nop
nop
cld
jae
in
sub
cmp
sub
jno
clc
repnz
nop
cld
jae
add
add
add
and
rorl
add
repnz
nop
cld
jae
addb
mov
nop
cld
jae
add
add
add
ja
inc
nop
jno
jne
push
mov
xchg
ret
add
add
add
push
addb
mov
clc
repnz
nop
cld
jae
add
rorl
addb
fmull
pop
push
mov
xchg
ret
jbe
dec
icebp
cmc
in
or
scas
in
xchg
push
clc
repnz
nop
cld
jae
add
push
add
push
add
nop
push
mov
leave
nop
jmp
js
add
cs
insb
clc
repnz
nop
cld
jae
pop
push
add
inc
pusha
or
nop
nop
cld
jae
or
add
cmp
mov
inc
clc
repnz
nop
cld
jae
pop
add
je
clc
repnz
nop
cld
jae
add
or
mov
nop
adc
nop
nop
cld
jae
add
add
adc
nop
cld
jae
pop
pop
xchg
add
in
mov
pusha
leave
push
push
mov
xchg
ret
add
add
mov
add
lret
xor
push
mov
xchg
ret
mov
add
subl
mov
leave
nop
jmp
dec
add
push
clc
repnz
nop
cld
jae
add
sub
add
pop
clc
repnz
nop
cld
jae
add
outsb
lahf
push
add
ds
pusha
push
or
mov
leave
nop
jmp
add
add
leave
sub
repnz
nop
cld
jae
add
ja
dec
mov
repnz
nop
cld
jae
cmc
mov
std
movzwl
clc
repnz
nop
cld
jae
js
fiaddl
add
clc
repnz
nop
cld
jae
fimull
sub
popl
add
xor
add
repnz
nop
cld
jae
add
cmc
pop
mov
clc
repnz
nop
cld
jae
add
add
js
mov
adc
xlat
clc
repnz
nop
cld
jae
pop
mov
fistpl
nop
push
mov
leave
nop
jmp
add
add
add
cwtl
es
hlt
add
loopne
add
push
mov
xchg
ret
add
fcompl
add
xor
push
mov
leave
nop
jmp
fiaddl
add
and
nop
push
mov
leave
nop
jmp
js
das
add
jl
mov
push
mov
xchg
ret
add
push
scas
scas
add
adc
push
mov
xchg
ret
jge
push
mov
push
clc
repnz
nop
cld
jae
rorl
add
jmp
cli
nop
push
mov
leave
nop
jmp
add
in
shl
clc
repnz
nop
cld
jae
roll
add
lret
jg
clc
repnz
nop
cld
jae
add
mov
or
cmp
nop
nop
cld
jae
pop
add
jg
push
lret
dec
imul
cld
jae
cmp
add
mov
pop
rcll
nop
mov
xchg
ret
add
add
addb
das
push
push
mov
xchg
ret
jbe
cmc
jl
add
add
xchg
jb
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
add
incb
sub
push
loop
fucomip
xor
add
ret
add
push
lahf
add
scas
add
add
add
inc
and
clc
repnz
nop
cld
jae
and
movsl
add
nop
push
mov
leave
nop
jmp
add
dec
add
popa
fistpl
clc
repnz
nop
cld
jae
add
hlt
rcr
mov
xor
clc
repnz
nop
cld
jae
mov
add
repnz
nop
cld
jae
add
push
hlt
add
push
mov
repnz
nop
cld
jae
add
leave
xor
pop
or
lss
clc
repnz
nop
cld
jae
jmp
xchg
cmpl
cld
jae
push
sub
leave
pushl
push
mov
xchg
ret
dec
ret
jl
dec
add
call
cld
jae
add
add
pop
add
adc
push
push
mov
xchg
ret
add
add
jae
mov
add
nop
cld
jae
add
dec
xchg
jb
add
push
mov
xchg
ret
add
add
add
or
inc
clc
repnz
nop
cld
jae
add
dec
pop
out
mov
clc
repnz
nop
cld
jae
sub
add
scas
sub
clc
repnz
nop
cld
jae
addb
outsb
pop
push
clc
repnz
nop
cld
jae
sub
cmp
roll
mov
xchg
ret
add
add
icebp
nop
inc
add
add
add
stos
and
xor
clc
repnz
nop
cld
jae
push
add
add
pop
jae
repnz
nop
cld
jae
add
push
adc
test
add
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
hlt
push
add
fcmovu
fwait
clc
repnz
nop
cld
jae
sbb
add
add
clc
repnz
nop
cld
jae
add
and
mov
clc
repnz
nop
cld
jae
ret
pop
js
add
add
clc
repnz
nop
cld
jae
add
pop
movzwl
clc
repnz
nop
cld
jae
in
add
nop
pop
popl
clc
repnz
nop
cld
jae
nop
add
push
add
jne
clc
repnz
nop
cld
jae
add
add
aas
push
clc
repnz
nop
cld
jae
jg
add
faddl
ja
int3
jl
mov
clc
repnz
nop
cld
jae
roll
add
add
mov
xchg
ret
cmp
xchg
in
push
add
icebp
leave
jne
clc
repnz
nop
cld
jae
cltd
jge
mov
and
pop
clc
repnz
nop
cld
jae
shll
js
add
mov
repnz
nop
cld
jae
jl
pop
cmp
add
lea
nop
push
mov
leave
nop
jmp
das
roll
pop
cmp
nop
notb
popa
nop
push
mov
leave
nop
jmp
add
push
add
add
jno
loop
clc
repnz
nop
cld
jae
add
and
push
mov
push
add
pop
adc
sbb
repnz
sub
stos
sub
add
repnz
nop
cld
jae
jge
pop
add
fdivr
repnz
nop
cld
jae
in
mov
add
add
add
clc
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
fiaddl
add
pop
mov
nop
push
mov
leave
nop
jmp
add
and
nop
fistps
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
or
add
call
clc
repnz
nop
cld
jae
or
add
jbe
inc
out
adc
xor
clc
repnz
nop
cld
jae
add
ja
je
clc
repnz
nop
cld
jae
sbb
push
mov
leave
nop
jmp
add
decb
inc
add
clc
repnz
nop
cld
jae
cltd
faddl
sub
add
add
adc
add
nop
jmp
mov
push
clc
repnz
nop
cld
jae
add
add
cs
pusha
inc
stos
dec
clc
repnz
nop
cld
jae
pop
pop
add
cmp
add
clc
repnz
nop
cld
jae
jae
add
sub
jge
add
clc
repnz
nop
cld
jae
mov
icebp
mov
dec
add
adc
and
dec
xchg
fmull
push
clc
repnz
nop
cld
jae
add
add
xchg
add
pop
and
push
mov
xchg
ret
sarl
cltd
hlt
add
inc
mov
andb
add
clc
repnz
nop
cld
jae
add
or
jg
rep
clc
repnz
nop
cld
jae
jl
add
add
add
mov
in
add
add
nop
push
mov
leave
nop
jmp
add
jg
nop
push
mov
leave
nop
jmp
add
add
outsb
add
mov
inc
bound
loope
incl
add
nop
jmp
add
clc
repnz
nop
cld
jae
jge
jge
add
and
loopne
mov
xchg
ret
add
xchg
pop
add
add
push
push
mov
xchg
ret
or
dec
jl
jge
add
lods
addb
mov
clc
repnz
nop
cld
jae
jo
or
cmp
add
lods
nop
push
mov
leave
nop
jmp
js
add
in
dec
add
call
nop
jmp
in
mov
out
fld1
push
mov
xchg
ret
dec
dec
outsb
jae
lret
lea
push
mov
xchg
ret
pop
scas
lahf
add
add
ja
adc
clc
repnz
nop
cld
jae
add
jl
add
add
clc
repnz
nop
cld
jae
cmpb
add
jbe
and
repnz
nop
cld
jae
outsl
add
fld1
clc
repnz
nop
cld
jae
dec
add
add
add
in
decl
nop
push
mov
leave
nop
jmp
faddl
ja
hlt
orl
nop
nop
cld
jae
scas
add
incb
mov
fsubrs
test
nop
push
mov
leave
nop
jmp
jg
dec
add
sbb
push
clc
repnz
nop
cld
jae
fiaddl
add
add
add
jge
les
mov
xchg
ret
add
add
add
in
clc
repnz
nop
cld
jae
js
add
sub
add
aas
push
nop
push
mov
leave
nop
jmp
add
mov
lahf
add
add
clc
repnz
nop
cld
jae
orb
add
fsubr
mov
repnz
nop
cld
jae
sbb
jg
and
call
cld
jae
lahf
add
jae
xchg
test
nop
push
mov
leave
nop
jmp
add
add
mov
inc
nop
push
mov
leave
nop
jmp
sbb
add
call
nop
nop
cld
jae
scas
add
add
cmp
push
mov
xchg
ret
add
mov
scas
fld1
push
mov
xchg
ret
fiaddl
test
add
or
push
pop
push
mov
xchg
ret
jo
jbe
lahf
pop
add
add
dec
push
jmp
add
or
push
add
das
mov
and
test
adc
add
nop
jmp
add
aad
fists
nop
jmp
popl
add
add
mov
dec
shr
clc
repnz
nop
cld
jae
hlt
cmp
add
add
xchg
dec
nop
cmc
pop
nop
push
mov
leave
nop
jmp
add
mov
mov
xchg
ret
outsb
add
add
test
in
or
clc
repnz
nop
cld
jae
add
xchg
cmp
pop
clc
repnz
nop
cld
jae
and
outsb
ja
loopne
mov
mov
nop
push
mov
leave
nop
jmp
add
outsb
add
or
repnz
nop
cld
jae
sub
mov
mov
clc
repnz
nop
cld
jae
dec
add
icebp
add
mov
add
inc
xor
clc
repnz
nop
cld
jae
ret
push
in
cmc
add
mov
push
mov
leave
nop
jmp
js
in
lahf
in
fcoms
push
clc
repnz
nop
cld
jae
add
add
add
jg
out
leave
mov
clc
repnz
nop
cld
jae
ret
ja
mov
nop
cld
jae
push
dec
hlt
add
and
and
inc
sub
push
mov
xchg
ret
js
ja
jae
lret
inc
loope
add
clc
repnz
nop
cld
jae
push
outsb
push
icebp
into
aas
dec
nop
push
mov
leave
nop
jmp
add
add
neg
sbb
nop
push
mov
leave
nop
jmp
add
das
add
popl
push
mov
xchg
ret
add
jg
add
add
xor
fistpl
clc
repnz
nop
cld
jae
add
jg
das
add
add
push
add
push
add
loopne
stos
mov
loope
clc
repnz
nop
cld
jae
in
add
mov
jne
clc
repnz
nop
cld
jae
add
outsl
push
add
clc
repnz
nop
cld
jae
xchg
add
and
nop
push
mov
leave
nop
jmp
mov
outsl
scas
arpl
clc
repnz
nop
cld
jae
add
in
pop
clc
repnz
nop
cld
jae
test
sbb
in
lahf
add
and
add
shlb
dec
add
nop
push
mov
leave
nop
jmp
mov
icebp
add
clc
repnz
nop
cld
jae
add
push
add
repnz
nop
cld
jae
dec
add
rcl
dec
inc
ja
scas
enter
nop
cld
jae
xchg
add
jbe
add
mov
and
add
clc
repnz
nop
cld
jae
test
add
dec
jae
imul
mov
leave
nop
jmp
js
das
add
test
add
clc
repnz
nop
cld
jae
add
hlt
cmc
mov
push
mov
xchg
ret
add
cmp
add
mov
mov
xchg
ret
add
add
or
add
nop
push
mov
leave
nop
jmp
hlt
cmc
add
sbb
mov
leave
nop
jmp
cmc
or
add
mov
outsl
push
clc
repnz
nop
cld
jae
add
sub
add
add
ss
repnz
nop
cld
jae
add
add
cmp
add
pusha
clc
repnz
nop
cld
jae
add
add
add
add
rcrb
adc
repnz
nop
cld
jae
add
outsl
jbe
fisubl
add
push
mov
xchg
ret
cmp
add
outsb
jg
sti
add
add
nop
push
mov
leave
nop
jmp
nop
in
mov
add
in
mov
xchg
repnz
nop
cld
jae
and
push
mov
xchg
ret
jae
cltd
add
add
add
push
mov
xchg
ret
mov
lret
push
inc
and
sub
push
incl
hlt
jge
andl
add
add
nop
mov
push
out
andl
nop
cld
jae
subb
stos
mov
nop
push
mov
leave
nop
jmp
pop
mov
add
cmp
nop
push
mov
leave
nop
jmp
mov
clc
repnz
nop
cld
jae
addl
add
dec
popl
fdivr
fwait
clc
repnz
nop
cld
jae
add
add
aad
dec
cmp
repnz
nop
cld
jae
hlt
add
cltd
icebp
pusha
je
mov
mov
clc
repnz
nop
cld
jae
add
addb
jne
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
ja
pop
js
add
pusha
inc
adc
enter
repnz
nop
cld
jae
add
addl
mov
repnz
nop
cld
jae
cltd
dec
subl
aaa
add
clc
repnz
nop
cld
jae
add
and
jo
nop
push
mov
leave
nop
jmp
add
mov
clc
repnz
nop
cld
jae
add
push
add
pop
clc
repnz
nop
cld
jae
add
add
sub
and
pusha
pop
mov
clc
repnz
nop
cld
jae
add
decb
xor
push
nop
push
mov
leave
nop
jmp
add
mov
add
repz
repnz
nop
cld
jae
jae
add
cmc
mov
push
mov
xchg
ret
add
mov
add
cli
add
push
mov
leave
nop
jmp
das
add
or
testl
add
nop
jmp
pop
add
clc
repnz
nop
cld
jae
mov
or
mov
ret
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
mov
add
dec
nop
push
mov
leave
nop
jmp
cmp
add
jo
outsb
pop
fdivr
add
clc
repnz
nop
cld
jae
add
add
addl
xchg
push
mov
xchg
ret
nop
add
or
add
mov
nop
nop
cld
jae
js
cmc
add
add
outsl
ret
je
jmp
add
add
cmc
add
add
pop
add
push
clc
repnz
nop
cld
jae
cmp
cmc
add
add
lahf
adc
mov
xchg
ret
add
incb
pop
add
icebp
add
jmp
mov
add
incb
pop
jo
outsb
add
pop
mov
nop
push
mov
leave
nop
jmp
pop
rorl
test
add
fdivr
repnz
nop
cld
jae
mov
jl
xchg
fisubl
loopne
les
cmp
push
mov
xchg
ret
jge
dec
sub
fisubrl
shr
clc
repnz
nop
cld
jae
add
add
add
or
or
inc
add
test
mov
add
clc
repnz
nop
cld
jae
popl
cmp
pop
push
jl
jne
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
add
add
push
lahf
pop
cmp
nop
push
mov
leave
nop
jmp
roll
add
push
dec
push
popa
clc
repnz
nop
cld
jae
jg
add
cltd
ja
mov
shlb
jb
fisubl
test
or
add
repnz
nop
cld
jae
add
nop
testb
and
pop
or
repnz
nop
cld
jae
scas
add
pop
clc
repnz
nop
cld
jae
lahf
add
add
fistps
repnz
nop
cld
jae
jg
add
or
add
add
nop
push
mov
leave
nop
jmp
mov
add
add
pusha
ret
mov
clc
repnz
nop
cld
jae
add
leave
and
and
arpl
mov
adc
push
mov
leave
nop
jmp
add
add
repnz
nop
cld
jae
sub
lret
add
mov
clc
repnz
nop
cld
jae
add
add
test
clc
repnz
nop
cld
jae
jae
ret
add
inc
add
push
mov
xchg
ret
fisubrl
add
in
inc
push
push
mov
xchg
ret
and
add
andb
and
int3
insl
inc
add
roll
push
icebp
add
jp
pusha
cmpb
sbb
add
repnz
nop
cld
jae
fcoml
rep
clc
repnz
nop
cld
jae
add
add
cmpl
add
add
add
add
add
pop
jbe
sub
test
inc
adc
repnz
nop
cld
jae
add
mov
shl
clc
repnz
nop
cld
jae
add
mov
fld1
push
mov
xchg
ret
mov
add
add
add
repnz
nop
cld
jae
jo
pop
add
or
call
clc
repnz
nop
cld
jae
or
pop
outsl
pop
clc
repnz
nop
cld
jae
cmp
add
xchg
shl
cmc
fld1
push
mov
xchg
ret
cmc
cltd
add
add
add
xchg
add
push
mov
xchg
ret
pop
add
sub
or
loopne
cmp
xor
clc
repnz
nop
cld
jae
pop
add
add
movzwl
clc
repnz
nop
cld
jae
dec
add
das
cmp
dec
mov
clc
repnz
nop
cld
jae
lahf
xchg
orl
xor
clc
repnz
nop
cld
jae
orl
mov
mov
xchg
ret
sbb
add
add
mov
ficomps
nop
nop
cld
jae
add
add
add
loopne
je
clc
repnz
nop
cld
jae
mov
add
nop
push
mov
leave
nop
jmp
add
add
add
pop
push
mov
xchg
ret
rcl
add
negb
fwait
je
clc
repnz
nop
cld
jae
add
outsb
add
addr16
add
sub
add
push
mov
xchg
ret
scas
add
mov
add
lret
clc
repnz
nop
cld
jae
or
push
add
test
shlb
sahf
adc
add
in
jg
jl
jg
add
test
add
push
mov
leave
nop
jmp
add
add
inc
adc
repnz
nop
cld
jae
add
add
add
imul
add
add
add
add
in
pause
push
mov
leave
nop
jmp
add
ja
add
add
mov
push
mov
xchg
ret
cmp
or
add
sahf
cmp
pop
and
repnz
nop
cld
jae
add
sbb
sub
sbb
nop
push
mov
leave
nop
jmp
add
sub
add
test
mov
mov
clc
repnz
nop
cld
jae
jl
ficompl
clc
repnz
nop
cld
jae
add
add
add
scas
jo
mov
je
clc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
cltd
add
leave
add
jo
add
sar
repnz
nop
cld
jae
hlt
jge
or
add
sub
cmp
add
orb
leave
pusha
leave
push
push
mov
xchg
ret
add
jae
add
add
sbbb
pop
add
clc
repnz
nop
cld
jae
cmc
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
pop
push
mov
xchg
ret
icebp
or
lahf
in
js
sub
loop
pop
mov
clc
repnz
nop
cld
jae
mov
or
add
clc
repnz
nop
cld
jae
outsb
sub
test
and
sar
fiaddl
mov
push
mov
xchg
ret
ja
mov
or
in
leave
nop
jmp
add
add
popf
add
clc
repnz
nop
cld
jae
add
pop
mov
clc
repnz
nop
cld
jae
add
add
inc
add
std
push
nop
push
mov
leave
nop
jmp
lahf
add
and
repnz
nop
cld
jae
pop
add
add
adc
push
mov
leave
nop
jmp
add
add
add
cmpsl
jne
clc
repnz
nop
cld
jae
dec
add
sbb
pop
inc
add
sub
fiaddl
add
add
clc
repnz
nop
cld
jae
sbb
ja
add
add
enter
push
mov
xchg
ret
jo
or
add
mov
in
cld
jbe
mov
nop
nop
cld
jae
add
js
add
sbb
test
out
mov
add
jne
push
mov
xchg
ret
add
lahf
jo
rcr
xchg
push
nop
push
mov
leave
nop
jmp
add
add
jl
bound
addb
push
es
jecxz
repnz
nop
cld
jae
das
pop
add
in
sbb
nop
cld
jae
pop
incb
pop
mov
pop
add
pusha
xor
mov
clc
repnz
nop
cld
jae
jo
roll
mov
add
loopne
dec
push
mov
xchg
ret
cmc
fdivl
pop
add
lret
add
clc
repnz
nop
cld
jae
jae
pop
add
add
loopne
fsubr
inc
push
push
mov
xchg
ret
add
add
add
add
mov
clc
repnz
nop
cld
jae
jae
add
sub
in
push
mov
insl
push
xor
add
xor
call
clc
repnz
nop
cld
jae
mov
push
push
mov
xchg
ret
roll
add
lret
cwtl
inc
push
clc
repnz
nop
cld
jae
leave
sarl
repnz
nop
cld
jae
and
sub
or
jmp
icebp
add
or
cmc
faddl
jbe
pop
les
push
mov
xchg
ret
pop
mov
ret
cmc
mov
mov
sbb
add
clc
repnz
nop
cld
jae
jge
icebp
das
ficoms
push
clc
repnz
nop
cld
jae
add
add
cmp
fsub
daa
push
clc
repnz
nop
cld
jae
add
add
add
mov
pop
nop
push
mov
leave
nop
jmp
scas
add
add
jl
mov
nop
push
mov
leave
nop
jmp
faddl
xchg
push
adcb
ret
sbb
cld
jae
jg
lret
pusha
clc
repnz
nop
cld
jae
hlt
add
add
ficoml
push
mov
xchg
ret
lahf
lahf
outsl
add
roll
jae
mov
push
mov
xchg
ret
push
mov
cmp
stos
xchg
push
mov
xchg
ret
add
jge
push
jbe
pop
adcl
add
jo
outsb
sub
lahf
ss
dec
add
repnz
nop
cld
jae
or
add
ret
push
pop
popa
clc
repnz
nop
cld
jae
addb
add
mov
roll
repnz
nop
cld
jae
add
fmulp
call
nop
push
mov
leave
nop
jmp
add
add
jnp
sti
push
mov
xchg
ret
in
add
xchg
and
mov
push
xor
clc
repnz
nop
cld
jae
mov
sub
cmp
sar
nop
nop
cld
jae
mov
or
imul
cmp
push
mov
leave
nop
jmp
leave
add
lahf
add
mov
clc
repnz
nop
cld
jae
addb
add
add
push
mov
leave
nop
jmp
or
add
add
mov
clc
repnz
nop
cld
jae
cmp
add
add
sti
clc
repnz
nop
cld
jae
add
cmp
nop
add
loopne
sti
add
clc
repnz
nop
cld
jae
add
add
add
push
push
mov
xchg
ret
add
or
add
in
lea
ja
add
sub
nop
icebp
ret
add
mov
rcrb
repnz
nop
cld
jae
and
add
xchg
clc
repnz
nop
cld
jae
fcompl
das
add
add
js
inc
add
add
push
mov
add
fs
outsl
nop
push
mov
leave
nop
jmp
sub
shl
push
pusha
rolb
mov
clc
repnz
nop
cld
jae
xchg
jl
jbe
inc
and
insb
sub
clc
repnz
nop
cld
jae
push
jbe
add
push
pusha
andb
cmpb
add
repnz
nop
cld
jae
add
add
nop
cld
jae
push
add
popl
outsl
js
add
loopne
div
clc
repnz
nop
cld
jae
add
dec
add
add
sbb
es
and
loop
clc
repnz
nop
cld
jae
lret
add
rcll
mov
incl
add
add
pop
push
or
add
push
mov
leave
nop
jmp
add
add
cmp
or
inc
add
cltd
add
add
add
mov
clc
repnz
nop
cld
jae
pop
add
into
fcomip
stos
clc
repnz
nop
cld
jae
fsubrl
add
dec
div
nop
push
mov
leave
nop
jmp
jge
add
add
add
push
push
mov
xchg
ret
jl
jg
add
mov
adc
nop
jmp
lret
or
sub
mov
clc
repnz
nop
cld
jae
dec
and
push
mov
xchg
ret
add
add
sbb
add
test
nop
push
mov
leave
nop
jmp
add
push
and
inc
mov
mov
xchg
ret
outsl
or
nop
add
and
add
repnz
nop
cld
jae
add
add
fdivl
sub
mov
add
push
mov
leave
nop
jmp
mov
add
clc
repnz
nop
cld
jae
add
mov
add
mov
clc
repnz
nop
cld
jae
add
in
outsl
mov
and
fnstsw
nop
push
mov
leave
nop
jmp
add
add
adc
mov
clc
repnz
nop
cld
jae
push
add
mov
add
clc
repnz
nop
cld
jae
add
add
call
adc
dec
jle
add
add
sub
jbe
loopne
cmp
loop
push
mov
leave
nop
jmp
add
or
in
leave
nop
jmp
xchg
add
add
add
and
nop
cld
jae
cmp
mov
hlt
nop
cld
jae
outsl
add
in
mov
clc
repnz
nop
cld
jae
pop
das
add
ja
dec
add
clc
repnz
nop
cld
jae
mov
and
orb
add
sar
repnz
nop
cld
jae
fiaddl
jnp
inc
clc
repnz
nop
cld
jae
add
sbbl
das
test
nop
push
mov
leave
nop
jmp
or
das
adc
add
clc
repnz
nop
cld
jae
add
sub
or
cmp
push
mov
leave
nop
jmp
push
add
add
add
repnz
nop
cld
jae
add
or
cmp
add
push
mov
xchg
ret
or
add
sbb
int3
pop
inc
add
add
das
ja
test
lock
clc
repnz
nop
cld
jae
add
js
int
mov
add
sbb
add
outsb
sub
add
add
das
lea
clc
repnz
nop
cld
jae
jbe
sbb
cmpl
jae
dec
pop
cmp
mov
adc
repnz
nop
cld
jae
in
hlt
push
add
test
clc
repnz
nop
cld
jae
in
dec
and
repnz
nop
cld
jae
add
xchg
mov
lret
push
mov
xchg
ret
add
add
add
add
fcmovne
clc
repnz
nop
cld
jae
pop
fsub
leave
jae
add
ret
fld1
nop
push
mov
leave
nop
jmp
mov
mov
aas
clc
repnz
nop
cld
jae
add
jo
or
mov
loope
push
mov
xchg
ret
add
jo
jg
add
sub
pop
mov
nop
push
mov
leave
nop
jmp
ret
cmpb
sub
adc
clc
repnz
nop
cld
jae
add
add
out
mov
push
mov
xchg
ret
add
dec
or
daa
xchg
nop
push
mov
leave
nop
jmp
add
sbb
lahf
fiaddl
in
mov
shl
shl
add
nop
push
mov
leave
nop
jmp
add
cltd
add
add
addb
cmp
ret
add
add
and
repnz
inc
inc
or
lods
shlb
push
mov
xchg
ret
add
add
jge
fistps
mov
xchg
ret
jae
cmc
hlt
push
add
ret
add
pop
push
mov
xchg
ret
add
dec
test
sub
repnz
nop
cld
jae
add
add
add
pop
add
dec
pop
cmp
loopne
and
clc
repnz
nop
cld
jae
add
add
add
lea
in
leave
nop
jmp
icebp
hlt
outsl
fcoml
cmc
scas
mov
clc
repnz
nop
cld
jae
add
mov
add
nop
jmp
add
push
mov
xchg
ret
sub
fsubrl
pop
add
nop
jbe
xorl
clc
repnz
nop
cld
jae
add
or
inc
add
add
jo
in
add
add
nop
nop
cld
jae
outsb
in
add
add
fwait
push
mov
xchg
ret
add
add
add
add
fisubrl
rclb
push
nop
push
mov
leave
nop
jmp
add
lahf
add
add
dec
xor
pop
inc
add
add
push
add
add
rep
clc
repnz
nop
cld
jae
cmpb
js
add
push
imul
nop
cld
jae
scas
pop
ret
sbb
add
and
insb
popl
repnz
nop
cld
jae
add
add
sub
add
mov
loopne
add
push
mov
xchg
ret
cltd
cmc
mov
add
add
dec
mov
push
mov
xchg
ret
add
add
add
inc
adcb
add
nop
push
mov
leave
nop
jmp
add
add
add
mov
repnz
nop
cld
jae
sub
outsb
add
add
mov
push
mov
xchg
ret
fcoml
add
add
fistpl
clc
repnz
nop
cld
jae
jo
jae
add
push
neg
sbb
push
mov
xchg
ret
add
sbb
loopne
lods
xor
clc
repnz
nop
cld
jae
leave
cmp
adc
pop
clc
repnz
nop
cld
jae
pop
incb
add
add
cmpl
nop
push
mov
leave
nop
jmp
add
add
add
push
mov
clc
repnz
nop
cld
jae
add
leave
pop
outsb
add
and
jecxz
clc
repnz
nop
cld
jae
add
add
movsl
mov
clc
repnz
nop
cld
jae
xchg
add
or
xchg
and
das
xlat
clc
repnz
nop
cld
jae
add
add
pop
imul
clc
repnz
nop
cld
jae
sub
jo
jae
jp
call
mov
nop
push
mov
leave
nop
jmp
add
nop
add
lret
clc
repnz
nop
cld
jae
lret
cmp
push
leave
push
xor
nop
cld
jae
push
add
add
add
xchg
cmp
andb
push
sub
adc
inc
add
ja
jg
lahf
add
test
jmp
call
nop
jmp
add
repnz
nop
cld
jae
add
nop
add
sub
add
iret
addb
cmp
ret
mov
lahf
add
out
imul
or
add
repnz
nop
cld
jae
add
add
xchg
inc
jg
add
mov
add
and
xor
push
mov
xchg
ret
add
pop
and
push
mov
leave
nop
jmp
orb
or
jae
pop
push
mov
xchg
ret
add
test
out
sbb
clc
repnz
nop
cld
jae
in
jo
or
hlt
cmp
call
nop
push
mov
leave
nop
jmp
add
icebp
cmp
push
mov
xchg
ret
add
add
push
clc
repnz
nop
cld
jae
add
jbe
add
add
mov
dec
cmp
mov
xchg
ret
mov
lret
push
push
clc
repnz
nop
cld
jae
add
leave
add
repnz
nop
cld
jae
in
jl
pop
hlt
add
in
je
clc
repnz
nop
cld
jae
pop
sub
mov
loopne
mov
pushf
enter
enter
clc
repnz
nop
cld
jae
jo
shll
and
inc
add
add
mov
push
xchg
push
mov
xchg
ret
cmc
add
pop
add
jg
cld
fidivl
cmp
mov
leave
nop
jmp
add
or
mov
xchg
ret
pop
in
lret
add
add
sahf
psubusw
clc
repnz
nop
cld
jae
add
lret
pop
add
sub
nop
push
mov
leave
nop
jmp
add
icebp
add
ret
add
pusha
cld
in
push
push
mov
xchg
ret
push
add
add
add
add
xchg
add
clc
repnz
nop
cld
jae
add
push
jae
icebp
add
test
repnz
nop
cld
jae
add
pop
insb
mov
inc
xor
clc
repnz
nop
cld
jae
addb
push
pop
push
lods
pop
push
mov
xchg
ret
or
add
mov
add
sub
add
clc
repnz
nop
cld
jae
scas
add
fiaddl
xchg
add
pop
clc
repnz
nop
cld
jae
jl
jae
add
mov
push
push
mov
xchg
ret
mov
add
pop
cmp
and
mov
xchg
ret
in
add
test
sub
sbb
nop
nop
cld
jae
jbe
add
mov
push
mov
xchg
ret
add
add
add
xchg
and
push
clc
repnz
nop
cld
jae
add
push
push
repnz
nop
cld
jae
icebp
in
add
add
xor
in
leave
nop
jmp
add
add
lahf
mov
add
addr16
push
mov
xchg
ret
or
push
faddl
rcrl
ret
repnz
nop
cld
jae
add
mov
add
mov
mov
xchg
ret
or
add
pop
insl
fwait
clc
repnz
nop
cld
jae
push
add
in
roll
add
orb
sub
add
repnz
nop
cld
jae
pop
jae
add
insl
push
clc
repnz
nop
cld
jae
js
add
lahf
add
add
fwait
push
mov
xchg
ret
pop
add
or
mov
je
nop
push
mov
leave
nop
jmp
dec
add
rclb
out
inc
add
add
scas
pop
ja
push
mov
xchg
ret
hlt
cmc
das
scas
dec
jae
outsl
add
repnz
nop
cld
jae
push
jge
add
not
push
mov
xchg
ret
sbbl
add
nop
nop
cld
jae
faddl
add
cmc
dec
nop
push
mov
leave
nop
jmp
jl
add
leave
in
in
sub
pusha
das
lods
clc
repnz
nop
cld
jae
xchg
jo
scas
jg
lahf
xchg
lods
test
push
mov
xchg
ret
add
add
outsb
add
nop
push
mov
leave
nop
jmp
add
hlt
dec
mov
clc
repnz
nop
cld
jae
cmp
lret
outsb
xor
cmpl
nop
push
mov
leave
nop
jmp
incb
add
fwait
push
mov
xchg
ret
add
cmc
sub
jae
hlt
pop
loope
add
incl
nop
push
mov
leave
nop
jmp
add
imul
and
repnz
nop
cld
jae
add
pusha
rorl
add
nop
jmp
icebp
addl
rolb
movb
mov
xchg
ret
sub
add
js
add
addr16
add
das
add
cmc
push
dec
outsb
xchg
fld1
clc
repnz
nop
cld
jae
add
push
add
adc
nop
cld
jae
or
add
mov
rolb
nop
cld
jae
add
sbb
add
sbb
gs
clc
repnz
nop
cld
jae
roll
roll
stos
push
push
mov
xchg
ret
add
add
sbb
repnz
nop
cld
jae
mov
subl
push
clc
repnz
nop
cld
jae
in
or
add
add
mov
add
add
imull
add
add
outsb
mov
inc
call
cld
jae
rcrl
add
jg
push
nop
push
mov
leave
nop
jmp
add
jl
pop
jo
shl
mov
clc
repnz
nop
cld
jae
add
leave
add
ret
push
clc
repnz
nop
cld
jae
add
add
add
pop
call
clc
repnz
nop
cld
jae
lahf
pop
add
loope
push
mov
xchg
ret
fisubrl
add
das
add
push
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
mov
add
add
push
nop
push
mov
leave
nop
jmp
addl
add
hlt
fs
push
clc
repnz
nop
cld
jae
add
add
bound
push
mov
xchg
ret
lahf
add
add
ret
push
mov
xchg
ret
add
pop
add
lahf
add
pusha
xor
mov
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
add
pop
and
repnz
nop
cld
jae
add
and
add
clc
repnz
nop
cld
jae
add
popl
add
jb
and
push
mov
xchg
ret
pop
xchg
add
mov
mov
nop
push
mov
leave
nop
jmp
add
mov
clc
repnz
nop
cld
jae
hlt
js
add
outsb
add
into
bound
push
mov
xchg
ret
push
push
pop
or
cmpl
nop
push
mov
leave
nop
jmp
pop
jg
xchg
and
add
clc
repnz
nop
cld
jae
push
add
cmp
add
lcall
in
leave
nop
jmp
add
add
dec
mov
fistpl
clc
repnz
nop
cld
jae
xchg
mov
add
push
mov
xchg
ret
roll
subb
xchg
arpl
nop
nop
cld
jae
outsb
and
bound
shr
clc
repnz
nop
cld
jae
add
add
push
inc
push
clc
repnz
nop
cld
jae
add
add
or
das
fld1
push
mov
xchg
ret
add
add
add
pusha
rol
pop
clc
repnz
nop
cld
jae
add
in
add
clc
repnz
nop
cld
jae
add
in
cli
add
inc
hlt
or
mov
leave
nop
jmp
push
pop
add
add
mov
addl
cmp
ret
das
add
add
add
clc
repnz
nop
cld
jae
in
dec
add
incb
or
daa
add
add
nop
jmp
add
addl
xor
jns
inc
add
pop
add
add
mov
sub
repnz
nop
cld
jae
mov
outsb
add
outsl
test
repnz
nop
cld
jae
add
pop
inc
pop
sub
and
mov
xchg
ret
jg
push
add
add
jb
add
push
mov
xchg
ret
add
add
leave
add
pop
call
clc
repnz
nop
cld
jae
add
mov
in
cmp
ja
pop
lret
in
jg
add
imul
jmp
cltd
add
push
push
mov
xchg
ret
add
jl
fiaddl
push
enter
push
mov
xchg
ret
add
add
mov
repnz
nop
cld
jae
sarl
das
dec
add
sub
and
jmp
test
repnz
nop
cld
jae
js
add
push
nop
push
mov
leave
nop
jmp
add
cmpb
scas
add
andb
nop
cld
jae
addl
cltd
push
add
jecxz
inc
add
test
add
hlt
outsl
nop
or
clc
repnz
nop
cld
jae
mov
pop
dec
in
stos
clc
repnz
nop
cld
jae
roll
add
add
add
rcrl
push
mov
leave
nop
jmp
pop
pop
jg
add
scas
mov
repnz
nop
cld
jae
add
ja
add
rcll
icebp
add
add
add
in
pop
jb
cmpsb
pusha
add
inc
adc
nop
jmp
sub
add
sar
jae
clc
repnz
nop
cld
jae
add
add
push
mov
add
add
into
pop
sub
popl
call
incl
jae
pop
or
incb
push
mov
xchg
ret
cmp
add
pop
xchg
add
jle
shlb
clc
repnz
nop
cld
jae
outsb
cltd
fcompl
add
add
nop
push
mov
leave
nop
jmp
popl
ret
icebp
sub
lret
pusha
clc
repnz
nop
cld
jae
dec
add
add
cmp
mov
clc
repnz
nop
cld
jae
ja
roll
mov
int
js
in
cmp
cmc
add
add
ret
sub
dec
jne
clc
repnz
nop
cld
jae
nop
sub
add
or
mov
leave
nop
jmp
jo
add
add
xchg
cmpsl
mov
clc
repnz
nop
cld
jae
rorl
and
movswl
nop
push
mov
leave
nop
jmp
add
pop
jbe
pop
mov
push
mov
xchg
ret
add
mov
lock
mov
clc
repnz
nop
cld
jae
outsb
add
add
add
aaa
xchg
clc
repnz
nop
cld
jae
add
add
jae
add
nop
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
cmpb
xor
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
lahf
sub
push
jl
mov
nop
cld
jae
add
add
ja
add
adc
mov
xchg
ret
lahf
add
add
add
nop
mov
nop
push
mov
leave
nop
jmp
add
cmp
add
add
clc
repnz
nop
cld
jae
add
add
iret
pop
push
mov
xchg
ret
push
hlt
outsl
push
faddl
add
or
jns
dec
cmp
repnz
nop
cld
jae
icebp
push
add
repz
clc
repnz
nop
cld
jae
sarl
add
ja
push
mov
add
and
add
into
sub
add
js
iret
or
mov
xchg
pop
dec
add
mov
pop
int3
cmp
mov
mull
rclb
inc
hlt
lcall
adc
rolb
mov
movsb
loopne
push
dec
pop
vunpckhps
and
pusha
push
movsl
mov
loopne
sub
addb
loop
shlb
cmp
loopne
imul
mov
andb
push
cli
test
pusha
rolb
loopne
adc
cwtl
xor
add
add
inc
ficomps
idivb
pusha
add
insl
inc
je
leave
sbb
cmp
pusha
shlb
inc
add
xchg
pop
and
add
and
push
cmp
xchg
cmp
js
mov
out
cmp
pop
jnp
jmp
cs
jl
or
and
mov
dec
sub
les
pop
sub
lahf
dec
push
pushf
push
dec
push
pop
pop
shlb
andb
lea
iret
mov
pusha
mov
jmp
sbb
mov
mov
fstl
jmp
xor
pusha
andb
loopne
and
ds
and
mov
inc
fcoms
inc
dec
push
aad
ror
mov
add
adc
sub
and
pusha
dec
jno
data16
out
pop
jge
ficoms
mov
mov
inc
mov
fisubrl
sbb
data16
mov
inc
subb
mov
xorb
sti
push
jl
sub
add
and
inc
xchg
enter
jnp
cld
test
loopne
pusha
add
mov
mov
mov
fstpt
or
shrd
lahf
dec
and
xlat
dec
xchg
mov
mov
sbb
dec
push
test
adc
in
sahf
es
pusha
loopne
test
and
ret
jg
and
mov
push
inc
int
mov
dec
xchg
mov
cmp
dec
movsb
pusha
loopne
lods
and
and
add
inc
loopne
dec
mov
pop
call
sbb
jecxz
loopne
pop
push
out
mov
aam
shlb
movsb
pusha
add
mov
shl
jb
and
test
pusha
ja
frstor
pop
jle
and
fimull
jb
andb
int
push
inc
rorb
lret
fcmove
push
shlb
jne
loopne
popf
sub
imul
mov
dec
arpl
push
das
repz
fisubrs
adc
ljmp
mov
fmull
or
loopne
add
repz
xchg
in
imul
and
inc
add
shlb
ss
add
and
pop
cmpsb
shl
pop
ja
inc
and
pop
loopne
fcoml
ja
inc
pushf
cmp
push
sbb
mov
sysret
inc
lock
and
sbb
cmp
cmp
test
xchg
xchg
fwait
or
addb
ret
mov
addb
jg
lock
xor
lea
loop
mov
andb
clc
outsb
decb
movsl
xchg
clc
xor
push
lds
mov
rolb
jb
mov
cmp
xchg
popa
fldcw
fists
pop
lock
fadds
insl
iret
scas
push
jns
jle
mov
add
lods
jns
lds
clc
mov
add
pop
inc
mov
mov
jp
out
cli
andb
insl
xchg
cmc
add
and
andb
or
inc
loopne
stos
add
mov
jmp
lahf
mov
rcrb
ljmp
xchg
inc
jmp
adc
add
push
lret
and
add
mov
test
and
adc
cltd
add
inc
mov
and
sub
add
mov
rolb
add
sub
xor
lods
out
push
pop
loop
cmp
addb
sub
loopne
pusha
and
xor
and
and
add
xchg
cmp
in
cmp
loopne
xor
mov
cmc
std
test
and
movsl
out
sbb
cmp
leave
or
andb
aas
testl
add
into
ret
dec
push
mov
loopne
add
pusha
fstpt
subl
sbb
sbb
dec
insl
push
ds
push
inc
std
pop
pop
or
mov
and
adc
pop
and
mov
jmp
inc
jg
mov
sub
push
xrelease
pushf
or
jae
rol
push
rep
inc
and
mov
and
and
push
loopne
call
loope
xchg
bound
or
repz
sbb
jmp
jbe
test
inc
xchg
in
push
or
sar
cli
out
ja
dec
out
mov
add
imul
pop
lcall
sub
mov
and
push
mov
iret
test
and
dec
scas
addb
dec
call
sbb
sti
xor
pop
and
push
inc
adc
insl
shll
xor
daa
shll
xor
mov
xchg
push
into
inc
test
add
rcrb
mov
test
pusha
inc
push
pop
mov
and
loope
inc
xchg
add
movsb
rolb
pusha
sbb
fidivs
shl
ljmp
orb
iret
fwait
dec
sub
loop
or
int3
sarl
jns
mov
pop
ja
leave
sub
inc
pop
lods
jbe
jp
sti
or
inc
lret
in
fstpt
pop
test
inc
pop
outsl
aad
out
jmp
cwtl
test
loopne
outsb
inc
xchg
insw
add
cmp
sub
add
jp
mov
data16
dec
and
inc
lds
mov
add
fcoms
aaa
inc
pop
mov
inc
mov
ficomps
das
stos
loopne
jp
jmp
mov
dec
pop
and
mov
popf
pop
pop
cmp
dec
xchg
loop
sub
loopne
adc
jp
sbb
xacquire
ficomps
repz
mov
stos
cli
fidivrs
pop
add
subb
loopne
push
push
jnp
push
enter
mov
ficoms
inc
dec
pop
mov
pusha
shlb
mov
add
stos
movsl
shrb
shlb
daa
adc
ljmp
int3
jns
cmp
push
push
stos
addb
add
mov
and
mov
mov
out
inc
sbb
ja
pop
push
mov
frstor
jg
xchg
jmp
addb
sub
add
add
jae
jmp
add
mov
sub
mov
inc
sahf
inc
xchg
xor
testl
add
add
inc
addb
aad
je
inc
and
xchg
jns
sti
jnp
orps
sbb
and
or
cmpb
shrb
rcr
pusha
mov
and
nop
mov
sbb
ljmp
xchg
or
inc
sub
inc
enter
inc
adc
in
push
je
lds
mov
sub
loope
push
loopne,pn
scas
pusha
inc
sbb
aad
aam
sbb
loop
aad
push
cmpsl
subl
into
loop
pop
lahf
pusha
xchg
pop
out
loope
ficoml
mov
es
fdivrs
mov
add
sub
sbbb
add
out
shlb
sbb
inc
notl
mov
mov
out
adc
and
mov
and
cltd
ficomps
pushf
push
xchg
test
incl
das
add
pushf
cmp
xor
or
push
enter
gs
ljmp
pextrw
cmp
lods
mov
shrb
pushf
xor
add
lret
pop
xor
enter
mov
dec
xchg
mov
ds
jns
adc
les
add
sbb
add
loopne
les
aas
nop
pop
lret
in
mov
push
adc
xchg
inc
stos
stos
loopne
repnz
cmp
mov
add
mov
test
iret
pop
add
adcb
pusha
aaa
andb
jne
fnsave
mov
aam
movsb
add
scas
scas
fwait
imul
and
lods
andb
or
addb
test
sub
inc
jmp
and
adc
or
rolb
aad
fbstp
in
arpl
loopne
hlt
ret
cmp
hlt
andl
pushf
insl
cmpl
inc
push
dec
cmpsb
pusha
loopne
dec
mov
sti
mov
mov
mov
xor
out
jae
loop
out
sub
pop
cmp
mov
pusha
add
shrb
mulb
es
and
movzbl
or
inc
popf
xchg
mov
mov
mov
aam
or
movsb
rolb
loopne
into
and
pusha
fs
jp
xor
pop
in
xorl
rclb
sub
out
inc
push
adc
cvtps2pi
jne
fists
shl
push
loopne
loopne
loopne
jmp
and
mov
add
mov
inc
inc
mov
repz
sub
shl
icebp
xchg
imul
popa
inc
or
push
stos
mov
and
adc
fidivrs
mov
lods
xor
lods
inc
repnz
or
cmpb
push
inc
sbbb
inc
shrb
mov
adc
cmp
imul
int
or
pusha
inc
or
and
dec
jns
xor
jnp
push
add
pop
adc
out
cmp
test
and
mov
icebp
push
es
and
pushf
push
push
push
mov
inc
gs
mov
mov
and
mov
out
jmp
jp
ss
add
shlb
inc
shlb
or
jg
pop
and
inc
mov
test
cmpb
out
mov
shl
jbe
mov
sub
add
rolb
icebp
adc
sub
sarb
roll
and
addb
mov
inc
rclb
jg
jge
push
addb
sub
xlat
xor
push
jnp
ljmp
xor
add
pusha
rorb
jl
and
xchg
xlat
je
and
pusha
and
scas
mov
in
add
and
mov
test
and
xor
sti
pusha
inc
inc
repz
repz
jnp
push
bound
sub
and
shl
aas
cmc
fs
cld
int
lea
popa
xlat
or
loopne
insl
jge
mov
jns
mov
test
shlb
pusha
cmp
shlb
adc
or
inc
dec
dec
xchg
cld
cmpsb
and
push
cmp
mov
adc
imul
pusha
das
clc
outsb
pop
pop
cmpsb
inc
inc
dec
test
xor
sub
sbbb
cmc
aaa
popa
pusha
stos
pop
scas
int
mov
lahf
js
data16
and
add
mov
add
fisttpl
loopne
jmp
sbbb
sub
sub
mov
mov
sbb
pop
mov
xor
arpl
and
lea
rolb
inc
sub
test
pop
icebp
lahf
int
push
dec
cwtl
or
test
int
mov
ljmp
push
mov
aas
inc
and
rclb
mov
rolb
add
fwait
cmpsb
rolb
mov
mov
jecxz
mov
pop
inc
cmp
getsec
insl
cmp
mov
lahf
loope
mov
cs
and
testl
mov
pop
clc
push
push
or
loopne
and
fildl
loopne
lods
shlb
mov
dec
lea
int3
rolb
aam
inc
adc
mov
push
js
cmp
shlb
mov
loopne
adc
jb
call
mov
test
aad
dec
jecxz
mov
int
lret
pop
fiaddl
inc
les
add
loopne
lret
jp
lods
pop
loope
test
loopne
pusha
adcb
cmp
pop
jno
sbb
lds
mov
cmc
adc
push
or
inc
sub
js
cmp
hlt
jnp
jg
mov
fst
lods
and
aaa
sarb
inc
push
dec
test
testl
aas
insb
hlt
mov
mov
inc
inc
inc
pop
outsb
fldcw
dec
je
ret
or
std
jmp
and
je
orl
jp
std
lahf
inc
push
xchg
or
insl
subl
xchg
mov
xchg
in
enter
jbe
jns
ljmp
and
inc
test
pusha
ficompl
hlt
testl
mov
dec
push
shlb
mov
lret
or
loopne
add
xchg
fcmovnb
xchg
adc
xor
jnp
mov
sub
sbb
cltd
push
rol
xlat
into
mov
mov
fimull
fdivrl
jnp
fwait
or
dec
sbb
mov
enter
and
lods
data16
jg
popa
add
imul
xor
lods
loopne
xchg
add
and
and
loopne
icebp
pop
test
and
dec
scas
add
pop
jb
mov
imul
in
sbb
cld
stos
pusha
and
xchg
adc
add
mov
daa
xchg
mov
shll
notb
and
inc
mov
scas
rolb
loopne
jns
pushl
inc
adc
adc
arpl
jl
filds
jb
sub
daa
xor
add
mov
pusha
ds
jmp
jae
mov
pusha
inc
movsb
mov
mov
mov
mov
outsl
in
push
pop
cmpsb
mov
fldt
and
mov
jle
mov
mov
stos
cmc
loope
sahf
mov
sub
xor
push
sub
inc
mov
or
lret
xchg
add
loopne
jecxz
xchg
pop
mov
push
loopne
clc
out
roll
pushl
cwtl
add
inc
push
jmp
test
mov
mov
movsb
add
lret
leave
fimull
insl
cmp
cmpsb
andb
arpl
pop
repnz
inc
test
sbbb
notl
xor
and
iret
jbe
add
xchg
fwait
xchg
push
xchg
push
push
loopne
jmp
push
add
mov
into
dec
out
inc
or
pusha
into
loope
addl
adc
int
mov
dec
je
sub
dec
cmc
inc
or
xchg
pop
bound
push
lods
divb
out
jle
cmp
insl
push
ret
dec
enter
mov
enter
aad
addb
loopne
mov
cmpsl
push
mov
arpl
pop
add
inc
push
cmp
inc
and
das
stos
add
rcr
aam
pop
sub
inc
mov
pusha
inc
std
and
add
addb
pop
jne
rclb
mov
sub
jecxz
inc
xorb
sbb
loopne
ficoml
mov
mov
xlat
fwait
stc
jns
sbb
mov
shlb
loopne
jae
push
inc
rep
shlb
xchg
pop
lds
loope
test
jne
push
rolb
shll
sbb
adc
aaa
jae
jns
loopne
xchg
inc
jnp
add
pusha
subb
pop
mov
cmc
in
xchg
mov
mov
sbb
adc
inc
scas
mov
shlb
xchg
add
int3
jmp
loopne
ds
pushf
sbb
sbb
or
jnp
mov
fldcw
bound
in
mov
add
stos
and
mov
dec
scas
in
testb
iret
leave
push
sahf
and
rolb
mov
pop
inc
int
sub
mov
mov
push
add
jno
add
dec
lcall
loopne
gs
lcall
pusha
imul
jle
add
jns,pt
sbb
out
daa
pop
push
das
jl
mov
inc
sti
daa
and
push
shlb
fs
fcmovnu
inc
fstpl
dec
sub
mov
dec
dec
js
cwtl
dec
push
inc
sbb
mov
ficompl
mov
and
outsb
cld
mov
ds
xchg
loopne
cmpsl
mov
xchg
dec
outsl
enter
sarb
fbld
xchg
adcb
lea
sbb
in
push
mov
and
lahf
frstor
push
cwtl
sub
in
push
mov
repz
pop
mov
mov
movsl
jbe
cmc
in
lahf
dec
repnz
add
push
or
sti
inc
pop
mov
mov
pop
push
xlat
sarb
pusha
pusha
push
pop
sub
adc
negl
leave
mov
loopne
push
rorb
inc
mov
flds
ss
dec
clc
xchg
jp
inc
inc
inc
sahf
jbe
or
inc
out
mov
sbb
add
sahf
out
add
add
mov
mov
adc
sub
repnz
iret
jb
push
mov
loopne
xor
addb
outsl
fsubrl
mov
loopne
mov
mov
adc
leave
adc
mov
pusha
rcrb
loopne
loopne
xor
mov
into
xchg
and
out
mov
jns
xor
setle
sbb
push
sbb
std
inc
cmpsb
and
xor
mov
pusha
jnp
jecxz
inc
add
mov
mov
pop
xor
pop
pop
jecxz
hlt
mov
dec
loopne
bound
inc
adc
cmc
es
scas
andb
cmp
mov
insl
pop
xor
xor
mov
mov
jecxz
mov
scas
and
xchg
xor
add
shlb
pop
adc
stc
inc
cmp
mov
inc
pop
jbe
loopne
rcrl
sub
loopne
mov
xchg
test
dec
push
mov
andb
mov
dec
addl
stos
pop
mov
pop
and
push
pop
test
sbb
mov
roll
and
and
push
repz
stc
cmpsb
mov
jp
sub
xorb
add
jg
test
andb
sbb
mov
loopne
ficoml
inc
lret
mov
in
inc
add
and
out
mov
pushf
lock
sbb
imul
loope
inc
flds
pusha
mov
or
or
cltd
xchg
push
gs
lea
mov
dec
cmp
or
rolb
push
sbb
mov
lock
sub
inc
subb
std
enter
inc
mov
ljmp
loopne
fcmovnu
mov
add
dec
stos
sbb
add
push
push
lahf
or
add
xor
dec
xchg
fdiv
inc
add
fstp
mov
adc
notl
xchg
in
sub
mov
jbe
lods
lret
or
inc
repz
mov
nop
outsb
mov
add
inc
int
pusha
add
lahf
movsl
mov
into
pop
mov
ficomps
jecxz
shll
ja
out
je
pop
xchg
imul
loopne
mov
mov
into
in
sbb
rclb
xchg
and
add
negl
lds
jns
int3
fwait
push
sbb
lods
loopne
jp
jl
push
les
lahf
push
scas
pusha
pusha
loop
jns
fcompl
jecxz
pop
jo
push
or
aad
inc
xchg
dec
jp
inc
out
popf
imul
ss
fsubl
fs
loopne
in
jae
inc
xchg
mov
loop
fucomip
add
rolb
sub
pusha
sbb
rcrl
jg
andb
sbb
add
mov
inc
inc
cmpsl
push
rorl
add
cli
in
pusha
pusha
sarb
jnp
dec
mov
test
add
in
fsub
das
pop
call
mov
pusha
mov
xchg
shlb
mov
push
loope
or
ds
loopne
je
pop
test
xor
aaa
sti
sbb
movsl
jl
inc
inc
insl
outsl
movsl
leave
push
lret
inc
inc
pop
and
dec
js
imulb
mov
loop
loope
mov
cmp
in
sub
arpl
mov
and
mov
popf
adc
idiv
dec
mov
cmp
test
add
jle
push
sub
rol
xchg
das
fcmovbe
push
cld
dec
outsb
std
out
add
add
test
sbb
lods
bound
mov
lcall
inc
arpl
adc
adc
xchg
cmc
hlt
or
addb
loope
js
adc
loopne
add
aaa
push
jb
inc
paddq
ficompl
addb
sub
mov
mov
and
mov
pop
ljmp
or
and
mov
pusha
sqrtps
xchg
mov
cmp
or
shlb
sbb
shlb
push
and
loopne
call
mov
xorl
scas
xchg
adc
and
and
pusha
pusha
fcompl
cmpl
movsl
mov
pop
xchg
iret
xchg
mov
fld
mov
fcoml
shlb
pop
push
loopne
fmuls
cli
sbb
mov
nop
imul
adc
jecxz
add
pushf
jo
inc
into
mov
pusha
loopne
popa
adc
shlb
andb
mov
push
addb
fnstenv
sub
shl
enter
fcomi
pop
aas
stos
in
or
addb
std
dec
loopne
xor
mov
pop
cmp
jo
cmpl
inc
test
mov
pusha
sbbb
sbb
inc
rcrb
shlb
fidivs
xchg
and
and
loope
addb
pop
push
or
sahf
mov
movsl
jne
mul
das
mov
adc
mov
dec
inc
push
mov
pusha
push
popa
push
xor
stc
dec
in
adc
adc
inc
shll
pop
or
and
mov
icebp
cwtl
adc
sbb
and
and
shrb
and
cmp
adc
aaa
stos
pop
mov
loopne
shl
dec
pop
stos
rolb
jne
push
shlb
inc
aam
add
lahf
xchg
xchg
in
pop
jle
inc
sbbb
fcoms
loopne
cmp
mov
aad
movsl
mov
scas
loopne
xchg
mov
sbb
movsb
loopne
cmc
or
push
or
dec
or
inc
inc
sbb
mov
cmpsl
inc
pushf
out
cmp
push
cmp
shlb
cld
jo
mov
sbb
sub
inc
sbb
rolb
sar
loopne
inc
add
adc
mov
cli
aas
push
xchg
pop
fstps
cld
enter
inc
stos
loopne
adc
mov
pushf
push
push
cmp
pusha
and
xchg
mov
mov
inc
loopne
mov
pusha
mov
jle
clc
lret
push
loope
aas
xor
sub
mov
outsl
loopne
adc
add
pop
pop
enter
divb
out
aad
xor
xor
outsl
sbb
xor
dec
cmp
outsl
add
ret
loopne
pop
xchg
inc
in
or
lods
rol
push
std
mov
inc
scas
xor
pop
mov
mov
sbb
push
rolb
push
sub
loopne
cmpsl
pop
rcll
inc
iret
mov
sarl
into
sahf
add
sbb
arpl
movsl
push
sub
mov
loopne
mov
add
mov
push
je
inc
and
xor
out
lds
add
mov
push
std
dec
imul
sbb
daa
pop
jb
pusha
loopne
mov
rol
shlb
or
mov
mov
inc
dec
sbbl
andb
dec
lcall
jnp
bound
rolb
stos
sub
and
xor
cmp
fstp
cli
insb
jo
sbb
out
adc
pop
lcall
pop
lock
pop
mov
add
rol
enter
add
or
pusha
je
cld
outsb
fstpt
test
loopne
cwtd
fsubs
mov
ret
mov
pusha
jne
mov
ficompl
enter
test
add
out
test
cld
push
fs
and
mov
cmc
ja
in
xchg
cmp
dec
mov
jp
and
jle
push
icebp
cs
inc
clc
sbb
xlat
mov
addb
xchg
and
push
mov
andb
sahf
jae
dec
add
or
add
mov
ret
dec
ljmp
push
xchg
std
dec
ja
inc
and
add
xchg
mov
push
inc
add
loope
movsl
jmp
movsb
and
cwtl
loop
andb
rorb
pusha
divb
push
mov
movsb
mov
push
sub
inc
iret
ficoml
sub
mov
loopne
pusha
add
mov
pop
lahf
test
cmpsl
xor
jmp
cmpsl
mov
inc
ja
mov
sbb
pop
lahf
out
add
das
lret
es
xor
xchg
fidivl
or
xor
jo
repz
mov
mov
mov
cmp
mov
loopne
pop
insl
sub
mov
mov
add
and
cmp
divl
and
mov
cmp
jp
inc
insl
out
pshufw
mov
int
andb
mov
inc
fs
and
inc
pusha
mov
mov
or
rclb
or
andb
cmpsb
loopne
inc
sbb
dec
dec
sbb
dec
mov
psubb
repz
das
xor
test
mov
lock
sbb
and
call
mov
add
xchg
or
mov
cmp
mov
xchg
loop
cwtl
mov
mov
addb
mov
pusha
rclb
sarl
xchg
add
add
xchg
adc
loope
sub
mov
shlb
in
or
loopne
mov
push
cmp
lret
add
out
sbb
stos
push
lock
inc
popf
in
or
repnz
jnp
mov
jmp
mov
bound
pop
mov
pop
ret
fs
push
or
rolb
imul
and
orb
addb
or
add
popa
adc
inc
das
mov
ret
inc
sub
add
pop
or
add
lret
pop
mov
mov
inc
andb
in
mov
add
rep
inc
orb
pusha
in
repnz
push
add
and
or
andb
push
mov
andb
loopne
mov
pop
mov
loopne
cmpsl
dec
js
loopne
mov
stos
andb
sar
pop
and
loopne
dec
mov
rolb
pop
and
xchg
addl
inc
push
or
push
ret
fiadds
loopne
mov
shlb
xor
add
xchg
je
aam
loopne
dec
pop
mov
adc
xorb
divl
push
insb
xchg
mov
in
sub
and
es
and
push
sub
ror
stos
inc
xor
icebp
hlt
pop
in
cmp
adc
lods
mov
loopne
idivb
adc
and
arpl
loopne,pn
into
or
and
loopne
cmpsl
pop
mov
loopne,pn
jbe
and
cmp
push
mov
mov
jne
adc
int
pop
dec
xchg
std
push
jg
jp
and
mov
push
mov
mov
adc
scas
shlb
mov
cwtl
int
xchg
inc
aaa
cmpsl
aaa
dec
add
sub
mov
fnstcw
mov
and
insl
xor
aaa
fucomip
sub
shlb
lret
and
add
sub
and
cmp
jp
arpl
jae
jmp
sbb
bound
mov
mov
and
sbb
push
mov
js
out
shlb
in
adc
daa
testl
rorb
sbb
dec
sub
pusha
mov
mov
pop
add
pusha
jns
add
mov
inc
pop
out
jno
mov
test
out
aas
mov
push
mov
xor
outsl
cwtl
aaa
adc
addb
mov
cmp
andb
pusha
out
push
lea
adc
loopne
inc
mov
rol
push
sbb
jno
pop
jmp
or
addb
loop
and
jp
testb
clc
push
mov
loopne
testl
outsl
mov
je
mov
inc
cmpb
fsts
cmp
loope
jge
loopne
mov
imull
dec
push
cli
js
outsb
addr16
movsl
or
cmpb
std
outsl
fs
andb
add
jb
test
aas
xor
cmp
and
xor
loopne
jnp
or
push
mov
xchg
hlt
pop
sub
pusha
inc
cmp
or
inc
add
mov
faddl
fists
xor
pusha
xor
lods
loopne
xor
int
sub
loopne
jae
lods
inc
imul
mov
sarb
jne
sub
mov
and
ds
pop
not
in
aad
inc
inc
push
push
hlt
dec
lock
mov
inc
add
pop
lret
add
or
xor
cmp
and
popf
arpl
add
mov
ljmp
push
cwtl
cltd
cmc
jb
pusha
inc
js
fistps
addb
es
mov
out
jg
dec
mov
adc
add
mov
add
push
bound
out
xchg
std
mov
das
pop
repnz
pmaddwd
sub
pop
arpl
adc
and
jl
or
and
push
clc
in
ror
leave
mov
and
pusha
mov
mov
dec
in
cs
and
lea
add
sub
loopne
jl
std
add
cmpb
xchg
mov
pop
sti
pop
jns
addb
xor
or
jl
pop
sub
jge
sub
sub
and
cli
mov
pusha
pusha
test
loopne
mov
pop
fldenv
insb
pop
jmp
xchg
lods
loopne
mov
fildll
pusha
mov
jge
mov
insb
jne
push
shl
fdivl
mov
sub
and
mov
and
inc
cmpsb
mov
imul
mov
pusha
inc
shll
sarl
cmpsb
pusha
shl
leave
sub
popf
fcompl
jmp
push
sbbl
sarb
pop
inc
in
ss
add
cmp
aaa
fwait
inc
enter
fsincos
enter
sarb
or
scas
sbb
testl
rolb
cmp
inc
mov
mov
xchg
into
pusha
and
loopne
lods
shlb
sarb
test
mov
loop
xchg
inc
inc
jbe
and
push
arpl
mov
jg
loope
adc
mov
pushf
xchg
out
dec
sbb
jl
sbb
cwtl
popf
mov
shrb
mov
mov
loopne
jo
push
xchg
xchg
icebp
movsb
shl
lahf
or
mov
in
sbb
in
arpl
pop
adc
ds
jbe
cmp
fs
push
jl
cmp
pop
outsl
sub
sbbb
cs
inc
out
mov
addw
cmp
add
fdivrs
nop
mov
add
popf
popa
gs
add
mov
adcl
xor
addb
jns
loop
mov
pusha
add
mov
mov
mov
addl
cmpsb
inc
addb
stos
adc
add
mov
sub
loopne
cltd
mov
mov
movsb
mov
lock
mov
andb
roll
mov
popa
push
jae
dec
pop
sbbl
mov
add
push
daa
mov
and
rol
xchg
aad
jne
in
outsb
sub
into
pop
sub
sub
cmp
fiadds
arpl
add
mov
jecxz
mov
test
and
push
pop
dec
ljmp
loopne
lret
add
pusha
inc
push
inc
add
mov
rorl
and
and
mov
mov
movsl
decl
pop
push
sub
shrb
cmp
jae
jnp
add
and
mov
cs
inc
movsl
inc
mov
mov
sub
or
enter
ja
enter
lods
das
ret
push
addr16
xchg
jnp
adc
xor
loopne
or
pusha
add
or
and
sub
mov
scas
fldt
test
add
and
and
loopne
mov
dec
add
loopne
pop
filds
hlt
mov
fistpl
pusha
sub
mov
neg
mov
loopne
adc
addr16
inc
in
int
loopne
push
pop
mov
xorl
dec
xchg
fildl
mov
add
pop
mov
lcall
rolb
mov
pop
hlt
call
arpl
mov
out
xor
pop
jno
sbbl
rolb
and
mov
mov
test
loopne
dec
xchg
push
cltd
jg
test
pop
cs
cmp
xchg
mov
loopne
and
call
adc
scas
rol
dec
fsubrl
fnsave
jmp
lcall
rclb
cld
mov
pop
inc
cli
fsubs
xor
sub
outsl
jns
dec
pop
jl
xchg
test
out
aas
and
pusha
lcall
nop
sahf
fsubrl
ret
xor
sub
into
fnsave
lret
mov
orb
lock
add
mov
add
mov
int3
nop
in
enter
jge
stos
enter
imul
addb
pop
nop
push
add
loop
inc
sub
push
je
xchg
fcomps
add
jp
push
lret
in
inc
cs
and
mov
imul
lret
sub
mov
mov
enter
add
out
or
add
add
loopne
loopne
iret
fwait
insb
add
add
loopne
data16
sub
pop
out
jmp
ret
ja
aad
daa
and
out
sub
loopne
stc
or
mov
jp
int
xor
push
ss
jns
rcr
test
pusha
lcall
shlb
fwait
lret
loopne
mov
mov
jae
sbb
mov
cmp
jmp
dec
sub
add
pusha
int
sbb
pop
fld
aas
cmp
cltd
add
pusha
mov
popf
sub
and
mov
pop
pop
in
in
jl
psubusw
push
loopne
stos
andb
rcll
mov
shrl
pusha
imul
orb
xchg
sbb
fists
add
add
xor
ret
in
jmp
fildl
shlb
jno
mov
dec
mov
and
cmc
fdivrp
sbb
xor
les
push
adc
shrb
shll
inc
orl
ror
shl
scas
lcall
je
inc
lock
aam
jno
enter
loop
daa
shlb
enter
call
cli
int
out
or
idiv
jl
pop
push
push
mov
scas
pusha
addb
dec
cmc
test
data16
inc
pusha
mov
and
mov
loop
push
insb
ret
xor
pop
mov
or
loopne
push
inc
adcb
das
mov
pusha
sub
inc
mov
inc
scas
movsb
andb
pusha
shlb
cmp
sbb
mov
sahf
leave
or
mov
subl
add
rolb
add
mov
fsts
sbb
pusha
loopne
stos
movsb
rolb
and
clc
inc
mov
inc
jmp
adc
and
xor
cmpsl
and
sbb
cmp
or
mov
lock
rorb
cld
fdivrl
push
movsb
add
add
cmp
xor
mov
jecxz
or
sub
inc
add
adc
clc
dec
xchg
mov
inc
ds
add
and
cmp
inc
adc
mov
mov
or
push
jo
addb
pop
cld
out
divb
stos
cmc
sub
fbstp
cmp
sbb
xchg
push
sub
inc
add
inc
pop
pop
test
loopne,pn
push
xor
sub
pop
mov
rcrl
mov
gs
dec
mov
je
ror
and
sub
inc
xchg
rolb
aaa
fstps
pop
aad
mov
in
cmp
stos
xlat
fdivrs
or
loopne
add
mov
nop
ret
mov
add
imul
loope
mov
inc
adc
pop
loop
add
or
pop
mov
mov
pusha
and
add
mov
ret
add
loopne
rolb
sub
fs
mov
int3
and
mov
shll
rolb
scas
and
xor
and
xchg
inc
push
andb
add
xor
inc
test
and
jae
jno
sbb
into
sti
sbb
aas
pushf
fists
pusha
and
xor
enter
insb
pop
pop
pop
xlat
jbe
andb
hlt
mov
sbb
mov
cmpb
lock
cwtl
sbb
sub
shrb
fildll
mov
mov
rol
and
inc
mov
loopne
mov
addb
and
pop
push
push
add
push
rol
or
push
mov
loopne
movaps
push
mov
out
pop
mov
add
ret
mov
inc
fsincos
stos
and
int3
jle
mov
add
push
xor
dec
pop
or
add
mov
mov
test
loopne
sbb
mov
loopne
enter
aaa
jp
mulb
ljmp
mov
scas
pop
jmp
mov
mov
adc
push
mov
push
insb
mov
sbbb
outsl
imul
and
shrl
notb
rorb
pusha
mov
and
pop
mov
or
inc
sub
push
pop
or
add
andb
inc
into
rcrl
push
mov
xchg
shll
cmp
mov
cld
mov
mov
loopne
cld
cmp
sub
mov
sub
mov
jae
push
jp
or
loopne
pop
loop
sub
jmp
jp
jl
stos
hlt
pop
ret
xor
dec
xor
and
fwait
adc
sbb
push
pop
fdiv
dec
es
add
mov
pusha
xchg
cmpsl
mov
pop
mov
mov
and
add
fwait
xor
mov
xor
sti
xchg
lcall
addb
aam
loopne
scas
test
add
adc
pop
addb
xchg
push
and
gs
pushf
cld
push
add
xchg
loopne
in
adc
pop
imul
fidivrs
mov
dec
divb
adc
and
cld
lcall
and
rolb
xchg
in
mov
loopne
shr
inc
and
out
pusha
shlb
or
fldcw
adc
les
dec
or
pusha
or
shr
enter
push
add
aaa
add
sarb
sbb
dec
dec
push
rolb
in
or
and
inc
inc
jecxz
in
push
gs
aam
frstor
inc
pusha
dec
mov
lods
test
imulb
xchg
xlat
hlt
leave
xor
loopne,pn
rcr
das
stos
addb
inc
add
mov
loopne
scas
loopne
sarl
jg
stos
and
bound
add
dec
fnstcw
xor
pusha
sbb
cvtps2pi
push
shl
subl
addr16
or
loopne
jg
cwtl
mov
mov
jmp
hlt
jmp
pop
in
dec
repnz
sbb
push
jno
pusha
mov
ss
and
mov
andb
jmp
cmpsl
xchg
xor
pop
sbb
inc
iret
out
adc
aaa
enter
pop
or
mov
mov
int
call
dec
stos
jae
fs
or
popf
lcall
xor
inc
into
and
push
push
mov
rol
nop
cmpsb
pusha
xorb
add
mov
scas
dec
xchg
ss
inc
lods
jne
push
std
push
loopne
inc
xchg
mov
sub
add
shrb
loopne
in
sub
sub
mov
lds
ret
fs
and
mov
pusha
mov
xchg
adc
fs
sub
jmp
loop
test
mov
stos
and
cld
mov
sbbb
push
mov
rclb
and
orb
cld
hlt
outsb
lods
push
rolb
pop
sub
loopne
imul
cwtl
xor
add
mov
and
add
movsl
pop
int3
adc
jg
jecxz
mov
cs
inc
mov
mov
xchg
dec
std
jmp
loopne
xor
mov
push
shlb
and
je
inc
std
xchg
movsb
pusha
shlb
inc
adc
rcll
add
jp
dec
inc
mov
add
push
xchg
inc
jno
push
mov
add
push
or
xor
push
lret
xchg
out
mov
jno
pop
dec
sub
and
inc
pop
add
inc
lods
pusha
subb
xor
sbb
inc
cmpb
dec
sub
addb
and
inc
mov
add
inc
mov
stos
mov
inc
xchg
pop
mov
jb
in
int
adc
mov
add
xchg
fld
or
add
push
jecxz
lret
clc
pop
mov
out
add
mov
lods
loopne
adc
xchg
ret
out
pusha
andb
pshufw
loopne
fidivs
pusha
rcrb
test
iret
popl
inc
add
jmp
addb
stc
pop
rcr
addb
iret
pop
pusha
sahf
mov
daa
jg
andb
loopne
ss
enter
cmp
mov
and
mov
icebp
push
jns
mov
sbb
mov
mov
dec
les
sbb
pop
sub
rcr
and
inc
jp
rcrb
mov
adcb
sub
mov
inc
cmc
adcl
sbb
mov
pop
push
andb
xor
nop
iret
add
mov
dec
aas
sbb
jb
jbe
fdivrs
fwait
adc
sub
loopne
out
cmp
in
sub
add
jle
js
addr16
dec
movsl
cld
cmp
cmpsb
add
push
rol
cmp
cmpb
mov
lds
pusha
sbbb
pusha
add
lcall
and
add
add
pusha
xor
sbb
popf
sbb
gs
fsubl
xchg
ss
rcrl
aaa
xor
lcall
bound
sbb
stc
repz
addb
rolb
fdivr
and
punpckhwd
and
inc
inc
es
rorb
add
push
fwait
pop
sbb
dec
inc
push
mov
mov
mov
cltd
cmp
mov
movsl
mov
cmp
movsb
inc
loopne
fisubrs
xor
orl
push
inc
add
adc
dec
sub
iret
movb
ss
out
movsl
gs
pusha
jl
mov
sub
pusha
and
inc
std
mov
mov
fsubrl
iret
insl
test
mov
jg
sbb
add
add
lock
scas
ss
dec
jmp
icebp
cmp
sbb
icebp
getsec
and
ret
dec
push
add
mov
inc
mov
rorb
or
cmp
pop
outsb
leave
cmp
sbb
aam
addb
test
mov
mov
mov
lret
pushf
in
cltd
aam
pushf
add
inc
dec
cmp
dec
push
mov
pusha
push
pusha
fsts
jp
pop
lahf
adc
mov
jb
xor
or
push
das
inc
outsb
dec
in
xor
jo
out
push
movsl
add
lahf
mov
rclb
addb
cmp
sub
addb
add
shr
rolb
sar
ljmp
dec
mov
xor
rol
jl
push
scas
inc
and
jb
in
sbb
addb
add
shr
jge
mov
inc
jo
pop
sahf
mov
push
push
mov
and
mov
aad
shlb
jne
mov
pusha
jo
and
or
test
push
cmp
ss
adc
aaa
out
leave
or
sbb
and
xchg
pop
mov
sbbl
scas
mov
in
xchg
xlat
scas
inc
add
mov
addb
dec
cmp
mov
push
push
xorl
cmp
cs
mov
push
or
jnp
inc
pusha
inc
cmp
movb
inc
push
xor
sbb
xchg
jecxz
pusha
mov
sti
dec
xchg
outsl
aaa
xchg
adc
rclb
test
and
push
mov
pop
sub
shr
fcom
loop
push
popf
push
xlat
jecxz
cld
xor
movsb
shl
mov
pop
mov
inc
loopne
outsb
push
test
inc
mov
int
dec
xchg
dec
adc
mov
mov
in
jmp
add
cmpsb
addb
and
mov
stos
mov
test
mov
sbb
mov
mov
enter
jae
rol
sbb
mov
add
or
shlb
add
and
mov
scas
andb
mov
xchg
cltd
int3
fildl
jnp
out
ficompl
in
mov
loopne
andb
xchg
xchg
cli
imul
loopne
stos
dec
mov
xlat
or
and
add
mov
loopne
adc
ljmp
loopne
jmp
gs
fwait
mov
in
js
jnp
nop
lcall
in
fs
cmpsl
loope
jbe
gs
mov
jno
xchg
clc
lock
and
sbb
ljmp
daa
call
mov
je
pop
in
and
or
loopne
xor
pusha
adcb
movsl
lcall
inc
repnz
pushf
push
mov
movsl
sarb
jmp
mov
sahf
imul
insl
cmp
cld
int3
fwait
outsl
shlb
sub
leave
jg
test
add
inc
addr16
mov
shlb
add
inc
mov
adc
ret
mov
xor
lods
mov
shrb
and
arpl
sarb
mov
ret
loopne
push
inc
loopne
mov
xchg
push
jmp
pusha
inc
int3
xchg
popf
dec
jge
out
test
lcall
add
inc
xchg
cwtl
xor
mov
ss
cmp
mov
sti
out
movsb
and
js
add
out
fildll
mov
imul
cmpsb
pusha
mov
pop
sub
add
cmpsl
imul
lea
push
cs
rcrb
loopne
test
shlb
mov
nop
in
cld
imul
pop
ud1
test
iret
inc
sbb
rolb
loopne
std
enter
pusha
pusha
sbb
sti
pop
pop
push
push
cmp
rolb
or
movsb
and
inc
sbb
jmp
mov
in
pusha
shlb
pusha
dec
repnz
not
mov
add
addb
lods
pop
sbb
andb
pop
inc
mov
out
repnz
clc
int3
mov
fsubrs
cld
mov
lock
cmc
test
addb
lret
stc
shl
shlb
jp
mov
stos
and
and
cmp
push
inc
add
or
imul
stos
and
sub
sbbb
pop
xchg
fisttps
shlb
push
xchg
shlb
and
addb
jmp
outsb
dec
xchg
jle
mov
mov
rcrl
rolb
cmp
pop
xchg
jbe
fwait
cmp
rolb
shlb
adc
xor
pusha
mov
sbb
xchg
mov
dec
cmp
mov
and
pusha
and
arpl
dec
cmp
add
jno
dec
sbb
jp
push
loope
mov
rcl
fcmovbe
mov
add
push
mov
or
pop
repnz
pop
sbb
dec
addb
lods
cmc
adc
sbb
jp
pop
inc
popf
pop
lret
out
xchg
insl
movsl
adc
add
loopne
pop
inc
jge
xor
push
add
xchg
leave
xchg
sbb
lahf
sarb
pop
cmp
sbb
push
mov
addb
mov
jne
loopne
aaa
insl
mov
inc
movsl
mov
and
addb
aad
insl
mov
andnps
cmpsb
pusha
sbbb
jmp
fstpt
test
shlb
or
dec
and
add
adc
pop
out
inc
jns
ret
call
or
clc
aas
inc
in
mov
dec
or
mov
rolb
jnp
and
xor
xor
jnp
add
into
enter
int
in
ret
mov
add
loopne
rol
or
mov
pop
std
mov
add
add
xchg
dec
in
push
xchg
dec
push
mov
and
aad
mov
pusha
aas
dec
mov
or
or
jle
xchg
jle
add
adc
and
adc
xlat
into
das
sahf
jmp
mov
push
pusha
pusha
jnp
pop
jbe
push
inc
pusha
nop
dec
test
js
ret
mov
and
cld
jmp
shl
add
outsb
jecxz
pop
dec
pop
cltd
mov
sub
clc
dec
dec
pushf
fdivrs
xor
mov
mov
sub
inc
sbb
loopne
inc
rol
jl
out
inc
jbe
rcrb
pusha
inc
scas
and
sbb
and
dec
mov
popa
mov
jp
mov
cmp
push
mov
inc
mov
dec
shll
pusha
pusha
sbb
inc
or
fldcw
and
ret
pop
mov
pop
loop
adc
jg
inc
add
ljmp
dec
das
or
rcr
mov
ss
cltd
dec
inc
ret
push
adc
jnp
xor
mov
dec
cld
pop
fldcw
lock
push
mov
mov
pop
addb
add
pusha
and
and
and
push
inc
add
ret
out
dec
mov
es
or
pop
or
xor
ret
dec
mov
xchg
inc
xchg
pusha
fnstcw
sub
andb
sbb
mov
jle
push
cwtl
mov
loopne
ret
pop
dec
inc
ds
adc
and
cmpsb
inc
shrb
je,pt
add
cwtl
outsl
repnz
fistps
and
mov
pusha
sbbl
xchg
inc
pushf
xchg
andl
and
jns
adc
loop
cltd
xchg
push
or
jge
loope
add
subb
sbb
repnz
nop
imul
xchg
fisubs
add
inc
mov
mov
inc
push
xchg
into
mov
adc
push
fimull
mov
iret
lcall
add
pop
jle
or
in
repz
sbb
mov
fdivrp
int3
nop
adc
add
frstor
andb
testl
roll
outsb
aam
mov
inc
mov
push
pop
sub
add
mov
push
and
jp
cli
idiv
outsl
xor
idivl
movsl
jl
xchg
push
xor
stc
mov
xor
add
mov
mov
and
xchg
mov
loopne
cld
cli
or
in
add
imul
roll
shl
push
les
xchg
fs
loopne
push
mov
repz
ljmp
in
mov
jo
and
pushf
dec
scas
lock
cmp
and
pop
mov
or
test
loopne
jg
adc
add
andb
jg
imul
aam
sbb
sbb
subb
sti
jl
or
test
in
aas
jnp
push
pop
sbb
and
dec
mov
pusha
ja
xchg
push
lods
push
adc
dec
insl
rolb
add
outsb
testl
clc
xor
push
push
loopne
sub
xor
fldl
add
les
nop
inc
inc
xchg
xor
xchg
or
inc
outsl
xchg
add
add
add
insb
scas
lock
jle
add
iret
cmp
pusha
andb
adc
add
push
nop
inc
fidivl
mov
mov
xor
movsl
popf
xchg
sbb
out
outsb
or
cmp
out
bound
rorb
lods
mov
movsl
xor
pusha
sbb
and
adcb
loopne
scas
addb
test
add
inc
sti
shll
pusha
jecxz
pop
fisubrl
mov
mov
orl
mov
and
add
add
and
nop
loopne
and
xor
insl
push
aam
pop
pop
xchg
sbb
push
rolb
and
pop
pushf
jp
push
xchg
cld
inc
or
aam
xchg
mov
dec
pop
jl
inc
pop
nopl
jns
or
shr
dec
or
xchg
movl
fildl
push
jmp
add
mov
pop
mov
shl
push
loopne
mov
jne
mov
iret
pop
lods
jp
inc
test
das
rcr
mov
fldl
mov
mov
mov
pop
out
pop
add
loopne
or
and
push
fsts
addl
mov
sub
fbstp
rorl
or
divl
add
pusha
movsl
dec
repz
dec
xor
lods
addb
mov
and
inc
rcll
add
sbb
psrld
mov
adc
dec
cs
sbb
pusha
inc
and
push
dec
sub
inc
mov
imul
sub
inc
loope
lock
movsb
shlb
pop
test
pusha
mov
pop
pop
jno
mov
stc
jl
or
sub
loopne
inc
inc
rcll
jge
adc
sub
loopne
inc
inc
inc
pop
mov
xchg
jecxz
push
rorb
rorb
or
adc
fxch
jb
loopne
mov
xor
pop
fistpll
pop
jae
loop
dec
mov
cmp
daa
int
lcall
orb
adc
mov
out
test
mov
xchg
fs
arpl
lock
negl
scas
pusha
add
into
sub
imul
lods
loopne
push
andb
push
faddl
insl
fstl
or
rorb
push
loopne
daa
xor
and
add
rolb
inc
cmc
out
scas
sbb
insl
sbb
inc
loopne
inc
adcb
pop
repz
ja
sub
movsb
loopne
mov
pusha
sbb
and
and
iret
adc
mov
inc
xor
jno
adc
pop
xlat
and
shlb
ret
cld
fstl
add
mov
pop
pushf
xor
mov
scas
rol
mov
sub
shlb
rolb
inc
pop
sarb
pusha
mov
push
mull
mov
inc
pusha
nop
sbb
dec
pop
pushf
jo
add
popf
pop
mov
loope
notl
mov
mov
dec
popf
lods
mov
jecxz
pop
inc
loop
mov
movl
pinsrw
frstor
pusha
loopne
scas
push
pusha
mov
and
mov
pop
aam
shll
and
dec
jbe
loopne
mov
clc
inc
cltd
lret
icebp
stos
repz
dec
inc
cmp
lods
loopne
lahf
pop
lock
sbb
cs
sbb
subl
add
xor
and
movsl
mov
movsb
and
and
xchg
cmp
rcrb
mov
sub
loopne
and
pop
or
push
pop
mov
shlb
loop
mov
pusha
loopne
shl
push
sbb
dec
addb
add
add
mov
sub
mov
loopne
test
xor
jge
xchg
pop
jb
xor
inc
pusha
push
mov
inc
fdivr
push
pusha
add
rcl
lea
rorb
mov
repz
xchg
test
xor
cmc
and
inc
lret
outsl
addr16
xchg
sti
xchg
and
sahf
inc
xor
and
xchg
dec
push
sub
fistps
pusha
lcall
lea
ficoms
in
dec
cs
add
mov
sbb
cwtl
jno
fcmove
popf
push
or
mov
cmpl
addr16
popa
xchg
sbb
imul
push
dec
inc
cmpsl
xchg
sarb
test
add
or
lcall
push
stc
test
sbb
adc
pop
out
jae
inc
add
movsb
and
or
pusha
aaa
push
cltd
or
loopne
xchg
inc
adc
leave
add
push
push
js
movsl
pop
or
xor
push
test
adc
adc
inc
mov
cmp
daa
jg
rorb
and
test
push
or
subb
rcl
mov
bound
pushl
dec
mov
mov
nop
loopne
ljmp
mov
ds
xor
adc
aad
mov
and
lock
sarl
out
andb
cmpl
jnp
mov
leave
loopne
mov
mov
sbb
mov
jo
test
xlat
shlb
and
rolb
gs
xor
add
mov
jmp
andb
lahf
or
shlb
and
clc
and
and
jle
sub
jg
xchg
sbb
add
inc
data16
mov
loopne
lret
lock
pop
cmp
and
lret
les
and
and
rol
xor
jl
fadds
rolb
mov
loopne
pusha
add
pop
lret
shl
out
push
and
dec
addb
addl
push
lods
loopne
test
out
cwtl
mov
das
je
icebp
addr16
in
andb
fs
mov
lcall
xchg
pop
sub
add
dec
jo
mov
and
mov
ds
mov
pop
xchg
push
ljmp
ret
dec
inc
ss
pop
lcall
adc
stc
enter
popfw
mov
and
gs
mov
addl
in
mov
mov
mov
mov
add
push
scas
inc
mov
mov
addb
je
dec
sub
std
xchg
out
xchg
rorb
adc
stos
andb
shl
mov
sbb
dec
test
gs
hlt
push
inc
push
int3
xor
pop
iret
andb
les
ja
inc
aam
andb
pusha
mov
xchg
subb
movsl
imul
aad
jno
testb
test
add
pusha
mov
push
loopne
mov
pop
sbb
aam
add
pop
mov
ret
push
repz
sub
xlat
inc
mov
xchg
fs
pusha
fs
and
jno
rolb
and
sub
add
add
outsb
xchg
add
or
daa
cmp
cmp
andb
jb
loopne
add
nop
xchg
and
inc
fisubl
or
sub
pusha
push
jne
mov
sbb
aaa
mov
lea
xchg
inc
add
cli
leave
add
dec
iret
movsb
add
jns
aam
pusha
and
cmp
pusha
dec
aas
sbb
arpl
outsl
inc
pop
clc
out
rol
int
fldl
inc
mov
jb
push
div
push
mov
mov
lcall
lret
movsb
mov
cmpb
sbb
out
sbb
xchg
mov
stos
pop
push
push
sub
add
add
xchg
cmpsb
inc
sarb
or
cmc
iret
scas
add
pop
pop
jge
lret
jle
and
addb
bnd
fldcw
add
fdivl
mov
out
sub
shlb
or
xor
je
mov
jno
loop
shlb
or
rcl
enter
negl
mov
push
pop
roll
mov
mov
push
and
and
pusha
mov
sbb
jno
scas
pop
call
ficomps
adc
pop
aas
and
mov
data16
stos
and
addr16
and
sbb
xchg
add
push
cmp
inc
pusha
shrb
imulb
push
jmp
data16
pusha
mov
add
test
add
addb
sub
pop
repz
dec
cmc
imul
mov
mov
jb
adc
mov
sahf
idiv
sarb
inc
dec
hlt
mov
mov
nop
xor
fstl
sar
or
mov
dec
ds
lcall
cmp
jg
mov
xor
add
inc
in
jnp
inc
test
xorb
incl
rcr
ss
adc
pusha
inc
pop
popf
mov
xor
mov
or
sarb
out
adc
adc
add
pop
and
cwtl
loop
popf
dec
push
es
sbbb
std
lock
xchg
jo
mov
mov
xchg
jnp
jle
int3
or
add
xchg
std
aas
pushf
sub
shrb
ficoml
lret
aad
loopne
cltd
insl
and
fildl
cmp
add
outsl
sbb
in
xchg
cmc
jno
jmp
fwait
outsl
lds
cmp
lahf
pop
push
fs
cmp
pusha
shlb
mov
out
out
imul
or
mov
ss
mov
or
adc
and
andb
and
adc
jmp
andb
and
in
pop
xlat
sbb
imul
daa
dec
lds
adc
dec
jb
push
addb
sarb
add
adc
popf
movl
mov
and
jbe
int3
cwtl
and
pusha
cmp
test
add
fsub
dec
fstpl
leave
insb
inc
sub
pusha
mov
subb
es
ljmp
lds
mov
ficompl
push
loopne
xchg
mov
jbe
insl
mov
insl
daa
jno
mov
mov
inc
adc
inc
loopne
repnz
fisubs
rolb
pop
andl
gs
int
js
nop
jge
pusha
pop
sub
inc
and
xorb
inc
shlb
test
sub
mov
xor
insl
mov
divb
jb
sub
inc
push
push
cmc
cmp
xorl
scas
add
xchg
and
inc
daa
ja
mov
push
push
push
xchg
stos
and
inc
loopne
lahf
in
mov
in
scas
dec
int3
cmp
loope
pop
lahf
xchg
add
sub
dec
pop
loopne
sub
inc
inc
imul
out
lds
pop
jmp
inc
pushl
repz
pusha
and
test
mov
bswap
cmp
add
insl
in
loopne
push
in
aaa
and
mov
sbb
mov
dec
jo
inc
add
movsb
and
into
sarb
mov
ss
cmp
out
mov
pop
cmpl
ljmp
lret
mov
xchg
mov
jae
add
inc
sbb
rorl
mov
jg
inc
pusha
mov
loopne
inc
sub
andb
and
repz
loopne
xor
je
jg
inc
out
fwait
addr16
sbb
pop
outsb
in
dec
sub
loopne
notl
enter
addb
cltd
push
fidivrl
hlt
mov
lret
mov
mov
xchg
inc
mov
out
shlb
mov
shlb
xchg
mov
sbb
cli
bound
cli
mov
sarl
outsb
jno
scas
movsb
rolb
mov
sbb
test
sti
cmpsb
mov
and
mov
addb
add
rcrl
cmp
pushf
mov
inc
sar
inc
cmp
ret
push
inc
mov
mov
push
lock
pusha
jnp
js
sti
sub
adc
andb
movsb
pusha
pusha
cli
pop
stc
loopne
movsb
inc
add
sbb
mov
add
add
mov
aam
cmpsl
push
pushl
jg
cmp
sbb
inc
dec
mov
lret
xchg
jge
inc
add
out
lea
xor
in
jg
dec
mov
and
adc
inc
les
in
jmp
inc
cld
jo
fbld
test
ljmp
adc
pop
mov
or
loopne
icebp
mov
push
sbb
sbb
push
js
push
add
divps
sbb
sahf
inc
and
rcll
jne
cld
out
mov
adc
push
ljmp
ljmp
test
and
movq
inc
and
into
dec
sub
test
pusha
cmp
inc
inc
pop
and
scas
mov
fsubrp
mov
call
xchg
sbb
add
push
loopne
mov
mov
and
loopne
or
and
rcl
lods
loopne
mov
mov
push
mov
cmp
pusha
fstps
fidivrs
lea
popf
outsl
pop
faddl
dec
mov
cli
sub
xchg
sarl
lea
xor
pop
mov
cli
sbb
inc
mov
call
repz
imul
ds
add
pusha
lret
cltd
dec
shll
in
lret
push
es
adcb
inc
sub
and
add
inc
and
std
jle
dec
sahf
xchg
mov
xchg
outsb
dec
dec
cwtl
notl
loopne
or
add
push
loopne
loopne
pmulhw
fildll
mov
cltd
addb
out
inc
int
test
rolb
rcr
out
fs
push
mov
push
adc
out
sahf
add
leave
mov
inc
and
cmpb
mov
jne
mov
jecxz
cltd
mov
jecxz
divl
jbe
loopne
and
inc
adc
cwtl
mov
xchg
sub
fisttpl
add
inc
lcall
testb
inc
loop
and
outsb
pop
movsb
pusha
and
mov
cli
int3
jae
inc
jecxz
dec
dec
dec
add
xchg
mov
imul
mov
loopne
pop
mov
ret
jmp
mov
in
mov
ds
addb
jo
dec
dec
aam
push
and
inc
mov
dec
push
mov
loopne
add
loopne
out
sub
out
xchg
ja
loopne
sahf
ja
and
mov
out
sti
icebp
pop
and
lds
stos
mov
roll
sub
inc
out
addr16
mov
mov
and
cmc
fldenv
pop
jne
and
push
hlt
cli
pop
cmpsl
mov
cmp
aas
movhps
das
lahf
mov
mov
in
lret
cmp
xchg
push
adc
jne
stos
pusha
inc
and
fisubs
mov
add
ljmp
loopne
mov
nop
mov
dec
cmpsl
mov
xchg
popf
pop
xor
mov
add
adcb
jmp
jb
fs
or
sbb
jnp
push
pop
pop
inc
or
loopne
or
or
mov
xchg
push
je
outsl
pop
jp
mov
lcall
adc
orb
mov
fadds
mov
shll
inc
or
mov
pop
or
or
dec
divb
add
ret
jl
push
adc
add
and
lret
add
adc
adc
addb
jmp
jns
mov
inc
jno
fcmovne
orl
and
pop
jg
xchg
addb
pop
fmuls
loopne
inc
adc
movsb
andb
aaa
mov
loopne
mov
mov
mov
andb
inc
dec
sbb
mov
mov
ja
test
popa
and
inc
sub
fcomip
xor
lds
cmp
pop
jge
loopne
sbb
lods
mov
and
popf
lock
mov
jg
aam
mov
dec
into
cli
scas
add
nop
adc
add
pop
sbb
xchg
xorb
lret
push
sahf
xor
shlb
pusha
mov
hlt
xchg
jnp
cmp
mov
or
aas
jne
aad
pop
xchg
sbb
add
cwtl
jmp
arpl
icebp
mov
push
pop
lret
mov
loopne
push
aaa
mov
rcr
inc
sub
inc
mov
add
sbb
imul
ja
icebp
cmpsl
fcoms
mov
inc
inc
lea
mov
pop
or
sub
flds
add
lcall
inc
xchg
sbb
ljmp
xchg
inc
test
imul
push
add
mov
scas
or
pusha
divl
mov
rolb
fadds
loop
mov
sbb
push
mov
and
add
cmovge
loopne
sbb
pusha
mov
lods
rolb
or
add
cmp
pop
fmuls
int3
jg
out
or
pusha
and
dec
jmp
movl
sub
pusha
add
leave
insl
pop
mov
pusha
rcr
adc
repnz
addb
imul
lret
bound
push
pusha
pusha
loope
shl
movsb
and
ljmp
dec
aas
push
inc
inc
xchg
dec
bnd
rolb
mov
mov
sub
mov
mov
mov
fstl
xor
pop
stos
andb
dec
mov
rclb
fsubs
mov
repnz
repnz
enter
and
fstpl
jge
dec
cmp
lods
dec
fisttpl
loopne
popa
sub
ret
xlat
mov
lcall
add
cmpsl
mov
popf
outsb
je
push
add
mov
add
sub
xor
xchg
add
sbb
push
sbb
movsl
aaa
jg
adc
leave
xor
aad
push
subb
mov
std
mov
mov
fildl
lock
inc
cmp
push
daa
sti
stos
shl
loopne
push
arpl
adcl
inc
push
fwait
mov
xor
mov
mov
popf
cmc
mov
xor
mov
das
xchg
andb
add
fldt
mov
inc
push
lahf
stos
daa
out
xor
lods
cmpsb
and
adc
inc
ja
mov
in
mov
pop
and
fnstcw
lcall
inc
jg
hlt
mov
test
loopne
test
inc
lahf
pop
out
jmp
or
insb
loopne
repz
rcll
mov
add
sahf
push
jle
push
fcompl
jae
ds
jae
outsl
add
jne
lea
mov
add
imul
mov
xchg
jecxz
inc
dec
sub
mov
push
clc
fmuls
dec
popf
lret
arpl
loop
jecxz
jp
mov
inc
and
aaa
inc
movsl
cmp
icebp
repnz
jne
cli
std
dec
cmp
lods
repz
sbb
cmp
add
pusha
dec
andl
bnd
andb
addb
xchg
mov
ja
leave
clc
int3
nop
inc
xchg
cmp
fiadds
add
inc
scas
loopne
mov
int3
xorl
jl
xor
mov
clc
mov
pop
in
xchg
test
subb
loopne
pop
jnp
scas
add
push
fwait
dec
push
sub
pusha
loopne
insb
mov
sub
adc
lcall
pop
jl
pop
cmp
loopne
add
cld
mov
ljmp
or
rcrb
sub
pusha
rclb
cmp
addl
jmp
inc
pop
mov
into
add
cmp
pop
andl
les
mov
mov
fcomp
lds
shr
jns
and
rolb
gs
les
xchg
mov
adcl
and
enter
pusha
add
adc
popw
mov
lcall
pop
int3
push
and
cmp
xchg
pop
lcall
or
loope
and
loopne
adc
jb
gs
out
xorl
jp
fldenv
repz
mov
imulb
ss
and
inc
js
xchg
adc
jae
and
cmp
push
lods
pusha
loopne
test
mov
scas
adc
sub
inc
push
mov
and
repnz
popl
sub
jp
scas
dec
and
clc
sub
orb
mov
addb
repnz
push
leave
and
lods
out
movsl
jnp
add
or
loopne
add
mov
xchg
fimuls
push
mov
inc
inc
jp
pusha
rclb
add
pop
pop
xchg
mov
imul
popl
cmp
inc
addb
and
and
in
std
mov
popa
add
andb
xor
xchg
in
lar
xorb
xchg
or
loopne
mov
jle
sub
rorb
out
sbbl
inc
xorb
loopne
dec
mov
add
add
movsl
loop
iret
dec
mov
adc
jle
mov
mov
lds
imul
pop
dec
sti
rclb
sub
dec
movsl
mov
inc
push
addb
test
loopne
lds
lea
movsl
mov
clc
mov
test
inc
sbb
pusha
xchg
aas
mov
andb
lret
or
scas
jo
adc
fsubs
mov
add
lret
pop
jmpw
adcb
inc
mov
add
cmpsb
add
mov
push
jae
popa
sbb
les
or
xchg
dec
shll
loop
and
and
dec
mov
dec
dec
mov
inc
dec
inc
pop
mov
pusha
lret
add
add
adc
cli
mov
sbb
or
int3
into
push
loopne,pn
in
mov
imul
clc
cli
stos
add
xor
int
mov
push
daa
stc
adcl
mov
lahf
pop
dec
or
and
andb
push
loopne
lahf
sbb
rorl
mull
add
jns
cmp
jmp
add
cmpl
mov
out
push
rolb
loopne
add
cld
sbb
xor
andb
mov
sbb
leave
pop
lds
js
daa
inc
and
mov
lods
mov
loope
mov
addb
in
mov
popa
decb
add
add
data16
mov
mulb
cmpb
fcoml
and
cli
jg
popf
and
pusha
mov
decl
test
icebp
xor
mov
dec
cmc
mov
xor
loopne
mov
pop
or
pusha
addr16
xchg
xor
ret
sarl
std
sub
shrl
in
pop
cld
and
rclb
jge
sub
pop
push
jnp
jne
jecxz
pop
js
adc
xor
and
push
push
adc
cld
mov
and
pusha
out
rcrb
test
and
cmp
enter
or
shll
or
popa
ss
mov
repnz
jae
mov
and
ja
test
loopne
xchg
mov
pusha
loopne
scas
bound
mov
pushf
aam
cmp
or
add
add
or
add
or
ljmp
aaa
dec
push
jnp
lahf
push
shlb
stos
mov
or
xchg
fnsave
mov
popf
xchg
inc
int
ficoml
ret
xor
mov
sub
pop
xor
or
sub
adc
add
orb
jne
cmc
imul
jg
add
add
loopne
add
add
add
and
and
sub
mov
add
dec
mov
out
adc
xlat
in
bound
scas
sub
dec
fucomip
and
pop
pop
mov
mov
and
inc
and
andb
or
ja
add
pop
lret
bound
jno
aaa
xor
mov
adc
cmp
stos
and
call
pop
in
andb
arpl
filds
adcb
fcoml
and
pusha
jb
and
aam
jmp
icebp
repz
push
loope
ret
mov
loopne
scas
lds
pop
imul
push
cmp
arpl
ret
popa
out
call
out
cmpsl
stos
and
jno
xorl
mov
loopne
push
adc
sbb
movsl
push
sub
add
add
imul
loopne
mov
loopne
add
dec
mov
addb
insb
mov
aaa
inc
repz
and
adc
inc
dec
js
sbb
shlb
mov
rcl
dec
inc
add
movsl
stos
addb
inc
pusha
in
xor
loopne
test
pusha
loopne
inc
cmpb
lcall
imul
loopne
andl
stos
add
jo
shl
mov
or
push
mov
xchg
mov
iret
jns
pop
divl
scas
daa
jno
dec
enter
sub
mov
sub
mov
daa
dec
pop
jecxz
mov
repz
enter
and
lds
jb
xchg
cmc
mov
jge
xor
loopne
cmpsb
inc
addb
loopne
mov
ret
jnp
lret
cmp
jmp
imul
xchg
adc
or
cmp
sbbb
jnp
loope
inc
adcb
push
mov
popa
xor
add
sbb
mov
test
inc
rorl
and
icebp
sub
aad
dec
jo
outsl
shr
mov
outsb
int3
sub
mov
adc
push
add
mov
sahf
ret
inc
sbbl
loopne
stos
icebp
inc
leave
pop
movsl
lret
and
imul
icebp
shl
sub
nop
add
sti
cmp
inc
xchg
je
outsl
loopne
sbb
fstl
xchg
add
loopne
stos
lret
mov
mov
aam
push
ss
call
xchg
push
outsb
fistl
iret
mov
pop
and
dec
xchg
pop
sub
stos
mov
decb
jo
clc
lret
sti
ljmp
sbb
sbb
sub
and
rolb
pop
mov
push
jb
mov
mov
mov
sarl
loopne
mov
enter
dec
xlat
jl
mov
out
aam
and
cmpb
inc
loope
xor
jl
and
and
jp
xor
cmp
call
bnd
stc
scas
inc
cwtl
fwait
addr16
mov
cmpb
pusha
shlb
or
jno
dec
mov
mov
jbe
scas
inc
pusha
lods
repz
ficomps
movsl
lods
push
pop
mov
fstl
inc
in
inc
xorb
push
enter
ds
and
and
hlt
xchg
leave
cmp
loopne
mov
jns
mov
je
xchg
sbb
out
in
mov
xchg
stc
idivb
movsb
and
icebp
repnz
mov
rclb
pusha
mov
shr
incl
or
mov
mov
jecxz
imul
inc
addr16
lock
ficomps
aas
out
ja
fisttpll
dec
in
movsl
in
loopne
shlb
cmc
xchg
daa
call
pusha
pusha
les
dec
insb
adc
sti
fwait
adc
and
add
mov
das
iret
mov
icebp
leave
loop
ljmp
and
out
out
sub
pop
jge
pop
adc
xchg
or
shlb
xor
and
xor
sti
jno
or
loopne,pn
out
mov
inc
das
out
cmp
imul
les
jb
push
pop
cltd
test
dec
or
pop
adc
push
rcl
ja
sbb
icebp
mov
sub
call
rcrl
and
sar
or
and
jae
push
lea
inc
loopne
fisttpll
mov
inc
ret
cmpsl
scas
popf
test
add
outsl
dec
add
pusha
pop
les
into
xchg
dec
adc
push
mov
orb
add
test
mov
dec
dec
sub
inc
mov
mov
mov
and
rcll
out
mov
inc
ja
mov
lcall
xor
pop
faddl
loop
scas
inc
mov
mov
adc
dec
lds
or
mov
xchg
pusha
xchg
jno
call
pusha
bound
add
int3
mov
push
pop
dec
loope
mov
xchg
and
cli
scas
out
es
pop
popf
call
in
out
stc
pop
mov
adc
nop
inc
xor
shll
xor
enter
cmp
sub
and
pop
mov
std
or
pusha
cmp
lea
loopne
aas
lret
inc
jge
pop
push
add
mov
lds
pusha
shlb
pusha
xor
jne
loop
pop
mov
push
mov
mov
jno
mov
sub
pusha
add
loopne
cmp
bound
jo
mov
inc
mov
dec
andl
movsl
iret
push
shrb
jne
inc
pusha
or
scas
mov
into
arpl
pusha
in
lret
cmpsb
shlb
shrb
sbbl
aaa
scas
cmp
test
rcrb
push
or
push
jne
mov
pusha
inc
roll
push
mov
add
add
xor
mov
push
cli
in
rclb
push
ret
cmc
sub
fidivrl
cmp
loopne
pusha
pusha
aam
imul
mov
fcmovne
mov
pusha
or
mov
dec
hlt
shl
mov
out
add
bound
adc
notl
add
adcb
sarl
mov
mov
in
or
push
in
xlat
arpl
push
shl
rorl
js
dec
sub
cmp
repz
push
inc
ss
push
cmp
and
pushf
rcrl
movsl
add
stos
jmp
sub
rcrb
xchg
test
mov
jbe
fcomps
lahf
sti
pop
lea
push
add
cmp
sub
lea
pusha
mov
mov
scas
and
jb
pop
jp
mov
ret
pop
outsb
jecxz
loop
sahf
stos
and
fsts
jno
dec
adc
mov
loopne
or
fsubs
dec
pop
mov
mov
shlb
cmpsl
es
inc
pop
xchg
aam
mov
repz
pop
mov
and
add
stos
je
imulb
mov
andb
arpl
lods
mov
ret
and
push
sub
push
jmp
add
push
pop
xor
fisubrl
pop
xchg
adc
pop
std
sub
and
shll
pop
mov
add
scas
add
jns
cmc
mov
fistpl
shll
add
iret
and
and
jne
insb
mov
mov
or
ret
add
adc
mov
add
in
mov
sahf
mov
add
sub
ret
jmp
or
fs
push
sub
inc
in
or
inc
pop
ret
adc
jno
mov
insb
sbb
mov
mov
fldt
sub
dec
push
jle
xchg
push
fcompl
addb
addb
adc
jbe
insl
jge
fsubl
jno
call
out
mov
cmp
pushf
int3
lds
jbe
mov
inc
popa
mov
cmp
mov
into
push
mov
inc
cmpb
mov
and
inc
xor
aam
inc
loopne
cltd
sub
sti
mov
sbb
or
jmp
fldenv
imul
mov
popf
ljmp
jae
adc
fstps
andb
sti
xchg
mov
cli
or
jle
sub
mov
jno
inc
mov
push
pusha
pusha
dec
filds
sbb
test
sarb
mov
push
add
in
mov
xlat
mov
stos
mov
mov
aad
test
mov
das
mov
adc
rolb
decb
imul
scas
shlb
ret
add
pop
data16
mov
mov
mov
and
adc
shl
cltd
gs
lcall
and
loopne
mov
pushf
lea
ret
push
loopne
xchg
fdivrp
mov
mov
jns
lods
jbe
das
fmul
mov
xchg
pop
sub
popf
mov
mov
dec
mov
and
and
xor
cli
dec
fs
dec
xchg
imul
arpl
lahf
rcll
or
in
movsb
pusha
pusha
stos
and
adc
push
mov
rol
xor
loop
and
es
sbb
loop
sbb
aaa
lods
pusha
jecxz
loopne
out
mov
loopne
cmp
loopne
je
icebp
mov
adc
cmp
mov
test
sub
and
in
or
lock
push
ret
dec
xchg
std
lods
ret
clc
loope
int
dec
ret
xchg
aaa
push
adc
lock
aad
gs
enter
outsl
hlt
outsl
sti
mov
loopne
std
fsubrl
push
fstl
mov
sbb
movsl
fwait
push
mov
test
fmulp
and
arpl
jmp
xor
mov
je
inc
imulb
mov
iret
icebp
cmp
and
stos
and
loopne
shll
popf
movl
and
arpl
test
shlb
test
andb
dec
pusha
mov
push
stc
cmpsl
cwtl
cli
cmp
sbb
inc
add
lock
adc
inc
pop
mov
xchg
mov
inc
add
add
and
test
sbb
stos
inc
addb
cmp
mov
and
shll
in
xchg
jo
mov
shrb
sbb
adc
fldcw
pusha
pusha
mov
jno
mov
push
or
add
xchg
jecxz
enter
repnz
loopne
cmp
inc
mov
or
addr16
sbb
pop
lret
inc
mov
sub
mov
pusha
xchg
dec
jbe
addb
mov
or
and
and
inc
testl
loop
int
xor
jle
inc
cmpb
es
mov
sub
pusha
cmp
icebp
movb
lret
mov
mov
insl
adc
bound
cld
cld
mov
add
out
pusha
inc
adc
adc
lcall
gs
test
orb
xchg
lahf
cmp
loopne
rorl
sub
pusha
push
mov
jmp
and
orb
and
lahf
pop
repz
push
mov
ljmp
jo
add
or
mov
inc
mov
cmp
aad
adc
mulb
loopne
out
or
inc
mov
lock
mov
out
das
xor
dec
jcxz
adc
hlt
inc
or
add
pop
inc
leave
mov
mov
loope
cld
in
ljmp
popf
inc
pusha
add
cmp
jp
mov
ret
sarl
bound
mov
imul
xchg
stos
rol
outsb
lret
negb
mov
out
movsb
addb
add
sub
rorl
push
xor
add
jmp
mov
aas
iret
cmp
xor
inc
inc
int3
imul
xor
xchg
cmp
pusha
sbb
pop
ret
andb
xchg
into
dec
or
jp
mov
pop
mov
negl
pusha
shl
sub
ror
push
and
ja
sub
cmp
nop
imul
xor
cmp
cmpsb
pusha
loopne
sub
and
sub
add
fwait
lcall
insb
dec
push
dec
or
and
and
aad
xchg
xor
xchg
lret
adc
cmp
add
repz
add
je
lcall
pusha
mov
add
pusha
xchg
mov
mov
fnstenv
push
jnp
es
testb
lahf
fildl
mov
outsl
inc
cmp
imul
mov
add
inc
popf
dec
je
pushf
mov
stos
addb
push
cmp
inc
mov
add
je
dec
xor
cmpl
in
outsb
aas
push
sar
clc
out
pusha
pusha
adc
and
inc
das
lahf
inc
xchg
and
mov
rolb
mov
and
lcall
xor
xchg
test
xor
subl
pusha
lods
loopne
lods
dec
sbb
fs
subb
pop
xchg
xor
andb
movsb
and
mov
loopne
in
popw
fimull
push
stos
pusha
inc
aaa
push
jae
mov
das
jbe
or
mov
aam
stos
jnp
mov
and
mov
andb
sbbb
inc
loopne
outsb
mov
xchg
mov
popa
rclb
out
icebp
sub
xor
inc
idivl
hlt
jl
mov
add
pop
add
and
shlb
sti
stc
sub
xor
and
ret
test
mov
imul
lret
fdivrs
adc
mov
jo
inc
mov
inc
adcb
popa
pop
inc
push
js
xor
inc
pop
movsl
pusha
push
loopne
mov
popf
out
ds
cmp
xlat
std
sar
sbb
lcall
popf
sbb
add
jae
push
stos
mov
sbb
sahf
nop
mov
cmp
mov
sbb
sahf
cmp
pop
pop
aaa
ja
push
std
mov
mov
mov
xchg
loop
dec
and
rolb
imul
sbb
push
arpl
stos
pusha
loopne
sub
out
jno
test
loopne
outsb
cmpsb
mov
addb
test
cmp
aas
or
pusha
add
adc
inc
pop
and
in
mov
fimull
loopne
inc
pushf
cmp
mov
inc
pop
popf
xor
cmp
xchg
dec
pop
in
andb
xlat
fnstsw
std
sub
dec
hlt
popf
push
repnz
mov
and
insl
fsts
aad
jno
divb
push
mov
mov
in
dec
sub
pusha
jo
mov
adc
inc
int
scas
mov
rclb
test
enter
fsubs
mov
add
add
pop
addr16
push
jecxz
inc
add
mov
add
loopne
fst
xchg
cmp
or
and
cmp
pushl
or
pop
outsl
filds
insb
pusha
pop
sub
add
sbb
pusha
shrb
or
xchg
je
loopne
mov
cmpsb
shlb
and
jae
xor
cmpsb
andb
xchg
iret
dec
leave
mov
xchg
repnz
add
and
dec
cli
fcoml
loopne
notl
stc
movsl
push
insb
pop
pop
push
push
das
xor
rolb
add
shl
lea
xchg
arpl
mov
les
scas
loopne
lret
roll
jno
divb
stc
or
inc
stos
rorl
and
fcmovnbe
and
mov
cmp
mov
xchg
outsl
inc
and
popl
icebp
xchg
repz
pusha
out
or
add
pop
imul
jbe
fsubs
inc
and
mov
shlb
xor
fisttpl
push
mov
adc
mov
jle
daa
mov
or
mov
cmp
aas
sbb
and
inc
repnz
outsb
cmp
movsl
cs
shlb
inc
mov
loopne
inc
mov
ss
dec
dec
aad
pusha
shlb
xchg
adc
insl
mov
mov
gs
fnstenv
adc
mov
sbb
call
inc
mov
lret
push
out
decb
push
lcall
dec
std
scas
rcrb
sbb
dec
cmc
cmp
cmpsb
andb
jbe
rcl
popf
push
mov
jnp
dec
inc
loope
sarb
sub
pusha
add
mov
nop
push
inc
rolb
add
jge
pushf
rcrl
lods
pusha
and
push
enter
sarl
xchg
add
jle
and
ret
jp
jge
dec
cmp
mov
test
mov
mull
lods
js
sbb
mov
int3
dec
stos
add
das
mov
pusha
test
dec
sub
add
repz
loopne
arpl
jp
aam
rolb
push
and
add
std
push
mov
jge
add
out
or
shlb
frstor
inc
rorb
mov
fbstp
push
mov
ficomps
xor
inc
stos
jbe
pusha
xor
addr16
enter
jp
xchg
add
pusha
into
out
inc
and
inc
xor
and
bound
inc
pusha
movsb
mov
xlat
fistps
js
adc
shrl
loopne
mov
lahf
cmpsl
xchg
imul
test
add
lcall
rcrb
rcrb
xchg
jecxz
pop
scas
inc
cmp
cli
aaa
jmp
mov
or
and
and
pop
gs
rolb
inc
lods
addb
stos
and
push
rolb
and
loopne
repnz
in
jmp
fsts
fsubs
jl
in
fcoml
dec
xchg
jp
cld
mov
mov
stc
loope
or
pop
jnp
das
fucomp
insl
mov
addb
clc
sub
lcall
clc
dec
nop
rorl
add
ss
jbe
xor
cmpsb
and
and
and
jge
sub
add
push
aam
shrb
jne
push
rol
add
out
rol
xchg
in
aaa
push
push
add
pop
mov
in
add
divl
pusha
and
mov
push
push
stos
rclb
mov
sub
andb
mov
xchg
adc
lret
dec
add
add
leave
sahf
jmp
shlb
shl
fwait
sar
add
addb
sbb
aaa
mov
jle
aaa
aad
mov
cltd
subl
scas
add
clc
test
add
xchg
cli
mov
inc
orl
lock
mov
pusha
test
jns
sbb
psubsw
mov
adc
lds
pop
or
rclb
aad
outsb
int
loopne
movsw
shr
mov
insb
xor
je
and
andb
scas
push
jb
sbb
mov
loopne
pop
mov
jp
sub
mov
loopne
and
repnz
je
sbb
iret
inc
arpl
call
and
sbb
mov
stos
mov
aas
shlb
sbb
dec
jle
lahf
int
adc
mov
mov
out
jl
xor
sti
mov
jns
mov
loopne
jp
cmp
add
loopne
adc
hlt
add
loopne
fidivs
mov
xchg
gs
in
sbb
pushf
pop
daa
mov
cmp
jle
pushf
scas
loopne
movsl
andb
dec
lahf
add
pop
cltd
mov
in
xor
inc
inc
call
pop
jb
pop
int3
jle
dec
adc
sub
in
and
xchg
shrb
cwtl
cmpl
push
dec
scas
inc
and
mov
inc
loopne
inc
pusha
mov
mov
and
push
jmp
into
sbb
cli
divl
test
fwait
inc
outsb
xor
mov
xchg
adc
inc
add
and
stos
loopne
adc
insb
or
cmp
shlb
repnz
pusha
xchg
xor
stos
add
pop
mov
fistl
xchg
add
cltd
cmp
ret
aad
cld
mov
jge
pusha
pusha
ret
and
jno
jae
rolb
xchg
sbb
pop
addb
call
mov
or
sbb
data16
inc
mov
and
xor
xor
out
inc
sarb
popa
mov
sahf
pop
nop
jp
add
gs
mov
stos
in
pop
shrb
mov
pusha
loopne
jno
loopne
or
add
shlb
mov
adc
xor
adc
movb
ss
hlt
fmull
add
ror
adc
fdivrl
test
add
xchg
inc
cmp
add
dec
lret
or
inc
lret
popa
or
mov
aam
out
inc
inc
sti
mov
pusha
daa
push
jge
lods
mov
cmpsb
loopne
dec
ljmp
jle
jae
and
xchg
cld
xchg
cmp
jns
and
adc
lds
jg
pop
insb
dec
mov
dec
cmp
or
add
adc
loopne
stc
push
in
xor
jmp
icebp
addb
popf
mov
inc
pop
aam
out
sbb
cmp
mov
jnp
cmp
pusha
push
sahf
add
add
pop
insl
cmpsb
inc
pusha
mov
andb
xor
imul
add
std
imul
mov
ror
gs
rol
xchg
sarb
std
cmp
bound
je
cmpsl
data16
test
ret
sbb
pusha
test
cmpb
add
jb
pusha
adcb
faddl
jmp
xchg
fwait
aaa
fnsave
loopne
xchg
xor
mov
icebp
inc
jmp
or
iret
je
pusha
and
dec
xchg
push
into
and
subb
and
sub
jnp
mov
xchg
mov
iret
call
lods
shll
sub
pusha
gs
shlb
loopne
pop
out
inc
cwtl
lds
test
cmp
iret
xchg
push
and
fwait
not
xchg
invd
and
and
add
mov
adc
scas
iret
and
jecxz
mov
sbb
inc
add
andb
fdivl
sub
ss
or
mov
lock
scas
and
jb
pusha
inc
sub
shlb
mov
repnz
and
repz
add
xchg
sub
andb
das
dec
mov
dec
call
cmp
cli
push
pusha
inc
negl
inc
stos
loopne
lret
call
jb
jecxz
mov
xchg
sahf
or
cmpsb
rol
loopne
xlat
add
loopne
pop
mov
jl
or
xchg
cmpsb
rol
sub
loopne
sbb
imul
rcll
popf
push
int
jle
mov
dec
inc
pop
in
xor
aam
pop
in
mov
mov
and
jg
loopne
jmp
mov
loopne
mov
add
mov
loopne
push
pop
pop
or
rcr
mov
mov
pusha
addr16
icebp
cmovnp
fs
sbb
sbb
pop
daa
bnd
cmp
inc
js
mov
add
and
add
mov
mov
mov
and
cmpsl
jnp
or
lcall
xor
js
xchg
xlat
lret
hlt
dec
lret
imul
mov
pop
ja
add
mov
mov
stos
cmp
or
or
mov
rcrl
fdivr
push
jge
sub
jmp
xchg
loop
cmp
cmp
pusha
mov
cmp
or
add
ficomps
sub
xchg
xor
scas
add
push
andb
dec
or
add
pop
mov
add
fdivr
ja
inc
test
jno
sub
pusha
int3
repz
enter
lds
and
or
mov
insb
adc
and
sahf
mov
push
loopne
test
pusha
in
fcoml
lret
and
mov
sbb
inc
pop
lahf
mov
mov
shrb
cltd
mov
jae
stc
dec
iret
test
repnz
xchg
mov
xor
mov
or
pop
or
jo
inc
fwait
ljmp
lds
pusha
add
gs
rorb
xor
dec
int
ljmp
and
mov
lock
inc
inc
mov
mov
mov
addb
in
jge
fstl
stc
adc
sbb
add
mov
out
int3
mov
arpl
sbb
mov
outsb
mov
fidivl
push
xor
in
jg
shr
rcll
add
and
sarb
mov
pusha
or
sbb
add
xor
mov
add
inc
shrb
push
add
scas
cmp
mov
cmpsl
push
xchg
mov
push
loopne
or
inc
sub
orb
pusha
push
add
lods
inc
fwait
popa
fsubrs
rolb
inc
mov
inc
sub
loope
nop
int
push
addb
adc
jmp
cltd
mov
dec
push
mov
mov
out
pushf
popf
dec
jp
addb
push
rcrb
and
sbb
push
mov
xor
lret
cmpsb
loopne
jecxz
outsl
stos
out
adc
cmp
adc
push
roll
cmp
inc
loopne
mov
inc
add
cmp
es
inc
insb
std
scas
aam
ljmp
xor
lock
lret
fists
mov
pop
add
pusha
push
inc
mov
pusha
js
fwait
iret
neg
iret
pop
lds
sub
sub
sub
fxch
jne
imull
ss
push
inc
mov
adcb
stos
dec
or
mov
inc
sub
pushf
fnstcw
xlat
nop
lods
xor
pusha
and
and
mov
imul
mov
jg
mov
pop
jb
xor
jl
bound
imul
loopne
out
sbb
sub
ret
dec
sbb
push
std
push
push
sti
ljmp
jne
or
xor
int
lcall
add
loopne
sarb
outsb
mov
jmp
add
or
insl
xor
cmc
pop
mov
jg
sbb
pusha
int3
adc
inc
fstpl
sti
adc
sbb
pop
jno
or
push
and
and
mov
mov
inc
inc
mov
fwait
sub
stos
andb
out
push
cmp
cmp
and
aaa
pop
mov
jecxz
xor
push
scas
xor
lea
int3
dec
sub
loopne
adc
add
mov
cmp
or
loopne
stos
popa
jp
cmp
shlb
popf
adc
sbb
test
inc
pop
scas
mov
fldt
pop
sub
and
cs
inc
test
inc
lret
cwtl
aad
or
adc
inc
and
loopne
inc
mov
inc
mov
mov
daa
divl
popf
and
cmpb
popf
sub
sbb
inc
push
imul
fidivrl
push
cmpsl
jo
xchg
mov
add
lcall
lret
jecxz
rol
inc
cmp
gs
dec
or
sbb
inc
or
push
lret
push
jbe
lock
mov
dec
into
dec
jecxz
and
dec
sbb
and
loopne
cli
dec
cmp
testl
andb
jge
in
push
insl
dec
pusha
pop
mov
clc
roll
rorb
pusha
mov
mov
push
loopne
adc
add
jl
jne
jno
add
scas
in
inc
addb
inc
add
mov
pop
jo
adc
lods
xor
pslld
pop
call
shl
push
sbb
cld
jecxz
mov
dec
int3
roll
aam
out
xchg
sbb
add
outsl
pop
or
cmp
dec
fmuls
imul
inc
mov
pushw
push
jl
mov
dec
sub
sbbb
repz
cli
add
ret
int
and
mov
and
mov
xorl
int3
incl
jo
jecxz
les
inc
inc
mov
sbbl
add
outsl
xor
shlb
cmc
icebp
mulb
sub
cmpb
xorb
mov
add
inc
cmp
sbb
movsb
pusha
add
and
mov
jmp
mov
mov
adc
xor
ja
ror
cld
pop
and
pusha
inc
stos
addb
or
push
dec
pop
xor
jp
cwtl
dec
mov
inc
cli
mov
mov
fiadds
jp
xchg
push
jecxz
add
int3
push
sub
loopne
pop
inc
cli
std
shll
shl
shlb
out
cmp
aaa
cmp
andb
push
dec
out
xor
push
add
rorl
cmpsl
imul
daa
push
or
imul
shlb
pusha
inc
rolb
cmp
iret
arpl
repz
push
add
pop
lea
lea
mov
push
sbb
mov
mov
pop
jle
aam
xor
pushl
adc
pop
mov
mov
and
xchg
dec
iret
add
loopne
push
shrb
xor
jne
add
int3
into
and
orb
and
and
mov
and
pop
push
rolb
and
xchg
pop
push
imul
mov
jo
loopne
xchg
mov
shlb
test
xchg
inc
xlat
cmp
push
inc
rcl
aam
addb
sbb
push
add
lcall
mov
mov
pushf
negb
icebp
nop
lcall
cmpsb
inc
inc
fnsave
mov
fucomip
cmpsb
inc
and
in
nop
xchg
shl
jne
fisttpl
aaa
in
lret
flds
loopne
ds
mov
xor
xor
into
inc
mov
aam
lahf
and
sub
addb
jns
mov
adc
add
rcl
imul
daa
call
push
mov
rolb
arpl
repz
push
pushl
push
mov
and
cmp
addb
fstps
cltd
pop
sahf
adc
daa
pop
cs
and
add
sub
and
movsb
rolb
dec
sub
pusha
loope
mov
or
pusha
push
in
loopne
fldt
shlb
mov
clc
add
push
sti
addb
or
add
mov
xor
adc
roll
cmp
pop
and
shlb
and
or
fdivr
fbstp
out
cmpsl
push
aad
fldpi
sbbl
xorl
loopne
add
pusha
push
jge
push
adc
inc
mov
cmp
adcb
mov
popf
push
push
into
add
cmp
mov
push
out
xor
sti
pop
push
rcrl
add
and
sbb
pop
daa
or
and
mov
lahf
stos
and
pop
pop
sar
lods
in
in
xchg
fstpl
sub
and
inc
push
pusha
lock
fwait
test
xlat
scas
loopne
pop
xchg
mov
cmc
jbe
sbb
pop
and
out
xor
cmc
inc
inc
push
loop
xchg
ds
aam
jmp
pop
sbb
in
sub
mov
sahf
push
push
mov
shlb
sub
loopne
scas
inc
subb
or
mov
add
mov
inc
aaa
pop
std
stc
nop
into
out
push
mov
cltd
cmp
andb
sub
lods
and
loop
mov
pushl
pusha
and
add
test
popf
pop
pushf
push
and
jne
inc
sub
pop
iret
pusha
xchg
lea
pusha
aam
stos
addb
cmp
mov
mov
mov
mov
int
add
xchg
sbb
sub
loopne
insb
cmp
mov
push
arpl
loopne
jl
rolb
andb
mov
mov
int3
jbe
jb
int
aas
movsb
mov
movsb
add
imull
gs
inc
scas
mov
mov
xchg
scas
xchg
jl
repz
pop
loope
cmp
andb
pusha
cmp
loopne
imull
popa
sti
push
cmp
enter
pop
sbb
inc
pop
mov
outsl
rclb
pop
call
push
enter
je
mov
mov
inc
dec
movsl
out
cmp
push
or
cmpb
stos
add
mov
cmp
cmp
jg
cmpsl
or
inc
jne
mov
in
je
cmpsl
fwait
push
shlb
cmp
aaa
repz
inc
jnp
mov
mov
jle
test
andb
loopne
ret
pop
xor
or
pusha
dec
dec
cli
dec
fcmovbe
jle
and
cld
test
data16
mov
inc
mov
loopne
mov
fists
mov
mov
and
stc
pusha
andb
dec
xor
xchg
inc
pusha
lcall
rolb
or
add
ja
in
cmp
sbb
test
lods
inc
and
rolb
mov
test
jecxz
adc
xor
loopne
dec
repnz
dec
ja
enter
mov
add
xchg
add
shlb
stc
or
and
sahf
stc
das
and
sbbb
bound
sti
mov
popa
inc
push
mov
sub
sti
insb
xchg
push
jg
xor
rol
test
mov
in
pop
xor
mov
mov
mov
leave
adc
jnp
mov
sub
std
sub
and
inc
push
xor
cli
push
and
loopne
sub
fcomp
dec
cmpsl
jno
mov
cmovb
loope
add
adc
adc
pop
stc
lcall
in
or
mov
and
add
ja
sbb
or
inc
into
mov
fs
loopne
dec
test
cmc
neg
in
addr16
mov
push
jmp
dec
aaa
rclb
jp
inc
pop
aad
xor
loope
push
mov
add
dec
sub
jno
jo
jns
aad
adc
insl
adc
iret
scas
mov
addb
cs
xorl
add
inc
jae
xchg
std
and
cmpb
fcmovne
test
add
mov
shlb
and
adc
clc
aaa
ss
mov
or
pop
or
add
jg
jl
inc
inc
into
mov
rolb
mov
cmp
mov
pop
popf
fadds
scas
inc
loopne
mov
xchg
inc
inc
pop
xchg
shlb
cmp
mov
xchg
mov
clc
sub
xorb
cmp
and
cmc
xchg
int
outsb
insb
repz
std
clc
sbb
sbb
nop
repnz
mov
call
adc
ljmp
jecxz
mov
mov
xor
sub
fs
xchg
sub
shrb
and
insl
stos
mov
xchg
ljmp
xor
pop
pop
sub
loopne
dec
dec
cmp
ficompl
movsl
imul
and
add
aas
mov
lods
cs
in
mov
and
repz
int
inc
out
pop
inc
stc
inc
hlt
mov
aaa
jg
aas
jl
jnp
js
negb
mov
loopne
cld
repz
adc
pop
jo
jo
mov
sahf
sub
sub
flds
pop
movsb
pusha
and
enter
jg
and
bound
jo
mov
ljmp
and
icebp
sub
lret
stos
mov
call
test
mov
sub
out
cmc
sbbl
mov
jle
inc
mov
jmp
iret
dec
nop
inc
lds
movsb
loopne
adc
add
mov
mov
add
xchg
push
loopne
fs
mov
loop
rcrb
ljmp
insl
ss
sbb
shr
push
adc
imulb
inc
xacquire
inc
xorb
inc
shrb
mov
rolb
push
pop
xchg
jg
loopne
insl
aad
xchg
add
and
mov
push
fwait
inc
pop
lcall
pop
mov
xor
jg
inc
movsb
mov
inc
aas
sub
in
sarl
and
loopne
movsl
es
pop
jp
push
imul
xchg
out
and
inc
cwtl
loopne
insl
lcall
lds
dec
xchg
decl
add
popa
sbb
pop
in
mov
xor
mov
loop
push
mov
inc
mov
push
mov
pusha
mov
add
lods
lahf
mov
mov
or
dec
jle
outsl
aaa
add
and
mov
add
pop
xor
in
lret
or
mov
and
loopne
sub
add
loopne
pusha
ljmp
cmp
stos
inc
pusha
mov
mov
cltd
cmp
add
mov
inc
cmpb
stos
or
jo
popf
and
cmp
test
stos
and
add
mov
sti
push
test
add
adcb
shl
enter
add
out
push
enter
rcr
negb
psraw
lret
mov
andb
fisubs
adc
mov
fcoms
cmp
sub
jo
xor
clc
sub
inc
cmpsl
out
icebp
mov
rol
cmp
fisttpl
test
loopne
in
and
mov
pusha
fimuls
lret
jmp
mov
inc
push
jge
and
jns
shll
cltd
test
lcall
inc
into
fcmovu
mov
xor
loopne
stos
in
movsl
jle
dec
mov
ret
cld
sbb
scas
jle
dec
movaps
xchg
loopne
pop
mov
mov
and
push
hlt
sbb
add
lahf
andb
mov
pusha
addb
and
add
imulb
sbb
shrb
shlb
loopne
mov
loopne
and
inc
and
adc
popa
jp
inc
add
adc
pusha
add
add
rol
stos
sub
push
andb
jmp
lret
sbb
cwtl
xchg
dec
in
insl
call
fiadds
lock
cmp
leave
ret
jecxz
andb
cmp
testb
cmp
insl
or
mov
mov
lret
std
scas
iret
jmp
push
andb
mov
xor
rcr
add
mov
pusha
shl
pop
cwtl
nop
mov
sbb
rolb
xor
pushf
out
sub
fistpl
shlb
aaa
gs
loopne
movsl
add
shlb
lods
cmp
push
dec
test
mov
int
out
and
lahf
push
clc
push
cld
fmull
push
jp
mov
loopne
pop
and
mov
js
jno
fmull
inc
jp
ja
fcom
sub
fbstp
adc
loope
movsb
inc
loopne
xchg
fcmove
push
jo
imul
int
push
or
sarb
inc
sbb
mov
pusha
mov
mov
loopne
adc
loopne
jge
imul
loopne
jne
imul
ret
out
add
mov
inc
add
popf
shlb
dec
cmc
ss
or
mov
cmp
jecxz
cmpsl
pop
outsb
rclb
leave
je
pop
lods
inc
mov
imul
and
pusha
xchg
xchg
jge
imul
mov
bound
add
cmp
cwtl
and
loopne
int
sbb
cmpsl
adc
clc
push
hlt
mov
mov
shlb
add
scas
and
cli
push
mov
cmp
sbb
sub
add
sbb
lcall
test
fldenv
mov
lcall
std
or
mov
pusha
pusha
lods
and
mov
mov
jae
shlb
rcr
and
add
and
shrb
mov
jae
aad
xchg
xor
fiadds
loopne
sub
insl
add
pusha
out
xchg
pop
loop
adc
push
aam
add
jge
sbb
jmp
aas
imull
push
inc
dec
cmp
js
jb
leave
outsb
in
popf
sbb
push
xor
orl
mov
xchg
cs
dec
mov
pusha
mov
test
adc
and
imull
pusha
pop
push
pop
cmp
fwait
cmp
mov
sbb
imul
outsl
out
inc
push
add
jle
xchg
jns
and
pusha
and
addr16
push
mov
scas
fxch
cltd
sub
push
lcall
xchg
dec
test
mov
inc
mov
add
pop
mov
mov
aas
adc
leave
test
mov
scas
xchg
and
cmc
call
fdivrl
jbe
dec
xchg
jmp
cmc
jae
ret
sbb
les
popa
mov
lods
rolb
adc
sbb
lea
pusha
pusha
fdivs
rclb
fnstenv
mov
xor
rolb
cmp
inc
jns
lods
pusha
add
inc
icebp
sti
repz
xor
or
pusha
jl
push
or
and
add
rol
loopne
jl
jmp
cs
xor
xchg
je
cmp
iret
or
adc
adc
pop
stos
add
andb
inc
loopne
jmp
push
cwtl
sarl
inc
shlb
fldcw
mov
add
adc
mov
loopne
ljmp
add
addb
inc
pop
addb
jg
cs
add
cmp
mov
jne
and
jge
push
adc
add
mov
decb
inc
loopne
push
jge
dec
pusha
notb
add
sbb
push
fnstcw
mov
cmp
inc
mov
shlb
adc
lret
add
inc
fsubl
aad
inc
add
cmp
in
fnstcw
jp
loopne
cld
divb
fsubs
dec
sti
repnz
sbbl
inc
pusha
mov
add
scas
shlb
xchg
xchg
adc
cmpsb
and
mov
cmpsb
shlb
in
insl
add
jno
cmp
add
cs
loopne
fcmovbe
adc
mov
fidivrs
arpl
jle
sub
fsubrl
addr16
andb
rcrb
pop
lcall
sbb
xlat
cwtl
repnz
pop
cmp
mov
and
push
fs
and
and
sahf
xchg
cwtl
imul
cld
stos
andb
jp
jge
addr16
loopne
jmp
lret
ja
arpl
rolb
arpl
and
add
or
mov
and
dec
push
ret
xor
hlt
mov
nop
jne
popa
shl
and
clc
sbb
test
and
fs
xchg
loope
fcomps
push
fnstcw
or
cmpb
iret
enter
addb
je
mov
xor
xor
in
cmp
ret
cmp
or
sbbb
pop
movsw
push
clc
adc
cmp
jecxz
push
loopne
idivb
add
lods
cmpsl
je
je
xor
and
pusha
pop
jmp
push
inc
mov
insl
mov
pusha
and
shl
imull
xchg
and
pusha
daa
mov
enter
lods
mov
js
push
dec
cmp
dec
mov
mov
test
loopne
inc
inc
mov
sahf
pop
mov
pusha
in
cltd
push
push
jae
pusha
add
or
hlt
pop
das
jp
xchg
jmp
jmp
mov
dec
movsl
test
inc
test
pusha
cli
test
data16
pop
jge
mov
sbbb
push
mov
and
pusha
sbb
dec
das
inc
jecxz
pusha
loopne
mov
pop
dec
cwtl
ss
jge
sbb
mov
fcmovu
push
mov
inc
add
jg
sub
mov
inc
pusha
fs
fmull
and
sahf
cmp
std
sarl
jecxz
sbb
jge
mov
andb
lret
mov
add
jmp
lcall
addb
mov
push
mov
shlb
jl
popf
fcmovne
repnz
jb
call
push
inc
pusha
pop
push
pusha
add
xor
or
sarb
mov
pusha
and
pop
cmpsl
enter
inc
mov
xor
and
inc
add
int3
cmpsb
pusha
mov
into
mov
test
daa
xchg
sbb
xlat
scas
mov
or
and
push
pop
negl
mov
lock
add
test
pusha
scas
and
jecxz
mov
stos
std
cltd
pusha
loope
scas
dec
mov
mov
and
xchg
test
add
adc
mov
shrb
sub
loopne
push
cmp
mov
je
loopne
push
cmpsl
xchg
and
mov
cmp
jae
fldenv
in
ja
adc
cmp
and
loopne
out
daa
not
lods
jns
push
xor
mov
outsb
iret
xchg
inc
mov
iret
shr
addb
and
jb
pop
repz
sub
pop
and
push
add
jo
adc
add
test
pusha
push
addb
fnsave
add
or
xchg
xchg
dec
push
in
es
orb
hlt
sahf
dec
and
mov
add
pusha
rol
enter
inc
inc
push
popf
dec
pushf
jae
addb
and
xor
pusha
cmp
dec
xor
xor
std
push
rolb
outsl
icebp
dec
jl
cmp
mov
js
fisttps
daa
mov
sti
and
loopne
mov
cwtl
jnp
lcall
push
sbb
pusha
ret
cmpsb
addb
ljmp
or
movsb
and
xor
and
xlat
int
sbb
lods
add
cmp
ja
inc
insl
cltd
les
cltd
jp
add
stos
add
xchg
adcb
jne
ror
ja
aam
push
rcrl
shl
add
mov
pusha
adcb
pop
push
pop
mov
inc
inc
push
adc
and
jge
jo
lock
cld
fnsave
sbb
leave
scas
add
push
sub
inc
scas
sahf
pop
xor
dec
push
adc
sub
inc
movsl
addr16
loope
push
mov
add
rcl
mov
pop
les
mov
add
pop
cmp
stos
inc
loopne
inc
pusha
xor
pusha
mov
sti
fldcw
das
scas
and
jecxz
mov
jae
imul
pop
jnp
push
loopne
cmp
pop
xor
mov
jb
or
and
mov
pop
xchg
lahf
pop
jae
adc
mov
jl
insl
loopne
dec
pop
hlt
inc
inc
cmp
jno
jge
les
test
rcl
inc
mov
sub
fdivrl
insb
mov
pop
addb
add
adcb
aam
add
loopne
jp
mov
push
pusha
add
dec
cld
pop
addb
mov
or
loop
mov
popa
pop
imul
cmp
add
scas
popf
dec
leave
jge
push
movsb
add
push
inc
pop
iret
sarl
pop
mov
ja
mov
cwtl
sbb
andb
movsb
and
push
fwait
pop
or
inc
xorb
test
pusha
push
int3
mov
push
inc
shlb
fadds
and
scas
sbb
in
lret
pusha
pop
rcr
or
push
add
pusha
add
inc
mov
fisttps
or
cmpl
cmp
push
clc
xchg
data16
and
and
pop
mov
out
popf
les
neg
je
add
stc
enter
rolb
cmp
mov
sbb
outsl
imulb
inc
clc
rcr
mov
loopne
adc
dec
mov
and
shlb
or
cmp
call
mov
inc
lods
repz
stos
and
inc
mov
add
popf
xlat
fwait
fwait
inc
mov
adc
std
dec
jp
out
cld
push
popa
inc
push
rolb
push
test
add
sbb
xchg
sub
loop
lods
rolb
mov
rclb
or
add
gs
fisubl
mov
inc
cli
ja
in
push
jnp
movsb
shlb
jb
add
enter
or
sarb
mov
int3
cmp
icebp
lcall
xchg
scas
dec
and
mov
daa
cmp
sub
rolb
lret
dec
leave
add
loopne
mov
outsl
jno
fisubrl
shlb
or
add
and
add
mov
test
cmp
addb
pop
pop
or
and
imul
rclb
mov
inc
adc
insb
int
aam
cld
dec
rolb
test
loopne
sub
pusha
outsl
cmpl
pop
mov
iret
out
add
mov
lds
pusha
mov
loopne
out
cmp
rolb
add
mov
imul
sti
cltd
lret
mov
inc
je
inc
pop
push
mov
push
rolb
testl
ljmp
fmull
fbld
loopne
xor
in
stos
rcrb
out
or
mov
xchg
repnz
sub
and
mov
shrl
cmp
jl
or
test
jnp
jbe
jnp
in
add
pusha
rol
andb
jg
lods
pop
je
fstpt
out
loop
pop
and
inc
mov
cmp
add
cmc
cmpsl
xchg
mov
outsl
lods
mov
negl
xor
xchg
subb
shlb
repz
movsb
and
push
mov
mov
pop
and
and
dec
inc
cmp
push
mov
clc
ja
mov
and
jg
cmp
mov
mov
push
stc
lods
aam
xor
fildl
dec
mov
mov
xor
fcmovb
jne
idivb
mov
lods
mov
xchg
jbe
fcoms
dec
incb
imul
fs
jge
and
add
cs
push
das
jb
ss
push
rolb
in
sahf
push
xchg
je
bnd
jle
dec
ret
inc
loopne
loopne
push
mov
mov
lock
cltd
sub
inc
push
fcoml
push
cld
cwtl
loop
xchg
cli
xor
repnz
cmp
aas
mov
add
or
cli
fiadds
or
pusha
sub
pop
lret
dec
int3
clc
loopne
out
xchg
push
push
add
or
arpl
inc
inc
cli
adc
xor
mov
add
loopne
inc
rorb
and
das
aad
pusha
add
jg
add
jmp
ss
mov
or
loopne
repz
sub
add
cmp
pop
pop
stos
pusha
add
test
loopne
xchg
ljmp
andb
inc
loopne
scas
or
cs
and
icebp
cmp
lret
mov
loopne
cld
stos
add
jl
and
add
fsubs
stc
js
fs
sti
out
and
and
out
lods
add
pusha
cltd
push
loopne
mov
fwait
pop
imull
lret
add
cmp
loop
lods
jb
loopne
fisubrl
add
out
dec
jg
clc
or
push
jno
pusha
inc
out
mov
loopne
and
mov
das
adc
mov
xorb
lahf
sbb
add
pusha
mov
loope
test
add
arpl
in
fs
bswap
add
mov
int3
jb
adc
shlb
cmp
fbstp
and
stc
arpl
roll
xor
inc
dec
lods
loopne
push
cwtl
push
bound
std
lea
pop
fdivs
mov
adc
pop
sbb
sub
rcrb
adcl
loopne
sbb
nop
call
and
xchg
pop
pop
mov
inc
pop
dec
cltd
mov
lret
fdivrs
and
inc
das
mov
adc
bound
dec
sbb
push
push
aas
bound
popf
mov
add
and
add
andb
cmp
pusha
inc
xchg
add
stc
cli
xchg
mov
ljmp
shlb
lahf
dec
jne
inc
sarb
in
rclb
in
mov
shrl
push
aad
pop
inc
int
lock
xchg
movsl
mov
cltd
add
mov
stc
repnz
mov
rclb
imul
inc
fistl
sub
lds
pop
adc
push
test
loopne
fmull
inc
cmp
or
inc
add
or
pusha
sar
and
pusha
jnp
pop
sub
mov
cmpb
mov
test
adc
cmp
mov
bound
adc
stos
inc
sbb
std
jmp
jmp
loope
xor
inc
xor
and
push
mov
arpl
xchg
out
shr
movsl
fldenv
mov
add
sub
jp
andb
cltd
cmp
push
dec
adc
and
adc
addb
mov
inc
dec
xor
adc
mov
je
sahf
fsubrp
enter
inc
inc
ror
mov
rclb
sbb
orl
hlt
mov
and
popa
dec
jno
cmp
rolb
loopne
pop
movsl
test
mov
jmp
loopne
or
dec
rol
mov
cmp
jle
fisubrl
cwtl
xchg
inc
push
xchg
repz
aad
loopne
fst
mov
push
cli
decb
mov
out
add
or
aaa
inc
jae
loopne
xor
add
mov
test
and
in
jge
scas
loope
mov
pusha
lcall
xchg
aaa
xchg
ret
cmc
out
outsl
addb
test
rclb
adc
add
pop
xchg
mov
and
and
adc
fiaddl
and
jbe
les
je
xor
sbb
out
test
inc
cmpsb
and
sbb
out
sub
add
pushf
mov
sahf
pop
cltd
sahf
and
xlat
mov
pop
fs
push
call
dec
repnz
addb
and
sarb
inc
add
in
jg
aaa
sbb
inc
mov
push
add
and
inc
lcall
andb
mov
scas
add
adc
lret
add
in
xchg
aam
inc
add
loopne
outsb
fistl
hlt
sbb
lahf
mov
inc
sar
mov
adc
inc
js
xor
ljmp
ficoml
popl
add
sub
pusha
push
test
cmpsl
test
pusha
mov
sar
mov
aas
add
out
cmc
ja
ret
xchg
push
pop
lock
fidivl
mov
xor
out
dec
fwait
xor
sbb
cmp
lock
rol
xlat
xchg
mov
adc
mov
jg
and
cmp
push
inc
mov
mov
add
rolb
and
and
mov
push
mov
and
mov
pusha
stos
push
pop
popf
jns
andb
enter
je
or
and
add
mov
test
or
inc
in
and
cmp
mov
inc
add
loope
push
jae
or
nop
lods
mov
loopne
test
pusha
cmp
add
test
mov
xor
fstpt
mov
add
movsb
add
pushf
repnz
lds
faddl
mov
xchg
jo
push
orl
inc
or
add
out
and
xchg
dec
xor
das
pusha
push
xor
jge
xchg
push
and
in
add
dec
mov
adc
out
jle
xor
and
dec
add
push
cmpsb
addb
les
add
mulb
pop
add
loopne
and
addb
inc
insl
mov
rorb
or
mov
test
test
gs
add
mov
and
pusha
rclb
and
cltd
push
and
push
mov
mov
xchg
xchg
pop
fstpt
add
push
jp
rorl
shrb
cmpb
loop
cmp
sub
jae
add
gs
pop
xchg
mov
or
and
popa
add
sub
mov
fists
jecxz
dec
fimull
push
inc
pusha
leave
jne
shlb
push
mov
out
je
into
enter
aas
jo
dec
jg
push
test
pusha
test
outsb
dec
nop
ljmp
xor
and
je
sub
rclb
inc
ficoms
dec
test
andb
clc
adc
cmp
mov
popf
aad
les
cwtl
les
push
jns
call
mov
and
pusha
and
arpl
jl
fxch
mov
rolb
les
add
jmp
icebp
add
scas
mov
into
jmp
inc
mov
shl
xlat
call
add
dec
in
adc
lret
pusha
cmpsl
enter
aaa
insl
sbb
pusha
pop
push
imul
mov
imul
push
inc
rcrb
push
ret
jp
jbe
and
sbb
inc
fstl
mov
rol
or
and
jbe
inc
sbb
int3
add
or
in
int
and
jle
xchg
roll
mov
add
lcall
xchg
loop
imul
in
inc
outsl
sub
loopne
leave
or
and
rcll
and
iret
cltd
jo
ffree
shll
pop
rep
lock
test
or
lret
mov
cmp
xchg
add
mov
inc
push
jno
cmpsl
inc
adc
sub
loopne
jo
pusha
pusha
clc
mov
js
scas
or
mov
pop
out
outsb
hlt
mov
dec
add
add
jl
mov
pop
xor
add
pop
adc
loopne
dec
add
cmp
xor
or
inc
jg
pushf
push
adc
push
lock
pusha
pusha
icebp
sti
adc
inc
movsb
add
sub
aaa
mov
ret
gs
and
shlb
jmp
lods
divb
pop
dec
xor
into
or
fcomip
mov
sub
ljmp
mov
stos
inc
inc
rclb
mov
add
xor
out
cs
out
dec
dec
and
loopne
fucomp
mov
sbb
pop
or
cmp
and
andb
jmp
fcomp
adc
xor
das
push
mov
mov
push
jl
icebp
sbb
das
mov
mov
xor
pop
arpl
mov
mov
pop
loop
cmp
rolb
int3
dec
dec
mov
pop
icebp
sub
mov
loopne,pn
sub
orb
pop
lcall
cltd
mov
add
mov
xchg
inc
aaa
push
std
outsl
arpl
enter
in
cmp
and
out
sbb
mov
mov
pushw
rolb
js
lret
mov
pusha
pop
mov
out
xlat
cmc
imul
dec
add
mov
rcrb
hlt
test
rol
mov
mov
and
imul
sbb
daa
cmpsl
push
aaa
add
lahf
adc
into
loope
ja
add
insl
test
mov
pop
add
and
andb
cmp
add
loopne
jne
mov
rcrb
jmp
and
dec
xchg
leave
stos
rolb
sub
out
pop
adc
push
sub
push
mov
addl
mov
mov
outsb
andb
add
xor
movb
out
lods
add
mov
pop
push
dec
pop
xor
pop
ljmp
add
jno
add
cmp
mov
pusha
add
and
shlb
cmc
shrl
shl
xchg
sbb
aad
or
add
push
add
jle
add
xorb
rorl
andb
scas
inc
and
mov
lock
push
cwtl
xor
les
jnp
xchg
add
mov
repnz
or
pop
shlb
push
xchg
mov
xlat
sub
add
ja
das
inc
jecxz
inc
adc
je
es
mov
sbb
adc
scas
mov
add
cld
dec
lret
mov
push
pop
loopne
or
mov
into
dec
js
loopne
inc
xor
ffreep
inc
inc
add
aas
xchg
and
jnp
pop
notb
push
xor
inc
icebp
sbb
xchg
pop
push
cld
xchg
das
sbb
stos
or
and
cmp
add
mov
pusha
test
mov
inc
arpl
call
loope
popa
xor
out
pop
add
sbb
test
stc
ret
cltd
int3
call
pop
lds
insl
push
mov
pop
mov
decb
cmp
repnz
jbe
scas
shlb
je
stos
icebp
in
mov
push
add
incl
push
aas
testl
add
add
mull
fsubr
cmpsl
inc
iret
pop
lods
xchg
popa
in
push
jg
sti
jns
shlb
fs
sti
push
cmp
or
xchg
mov
popl
or
dec
outsl
sub
inc
aas
mov
xor
in
ljmp
inc
cmp
mov
dec
pusha
dec
int
adc
out
mov
test
shlb
popf
pusha
dec
scas
loopne
sbb
mov
loopne
xor
push
pop
mov
jge
es
sbbb
or
pusha
loopne
and
loopne
nop
mov
fucomi
into
sub
shlb
cmp
cmc
test
aam
imul
jmp
xchg
mov
mov
outsb
xchg
rcr
jmp
xor
ror
dec
and
loopne
xor
sbb
mov
test
bound
add
insl
cmp
sbb
jns
out
inc
repz
popa
xor
jb
xchg
cmp
je
and
pusha
ds
jp
stos
lea
inc
mov
rorl
add
mov
loopne
xor
pusha
pusha
adc
pop
adc
xchg
mov
mov
ret
pop
jb
addb
push
and
out
pop
cmp
loopne
cwtl
clc
std
xlat
popf
inc
test
iret
fcmovnbe
ljmp
subl
loopne
andb
push
pop
clc
or
or
loopne
imul
inc
sbb
inc
xchg
mov
in
addr16
loopne
lret
enter
ret
and
stc
xlat
daa
lea
rol
loopne
lock
mov
mov
inc
adc
loop
pop
call
jp
jbe
jle
push
mov
fs
add
insb
daa
push
loop
sarb
aam
mov
sub
mov
rolb
roll
loop
push
jnp
push
andb
dec
mov
or
iret
jg
mov
pusha
and
and
loopne
mov
inc
loopne,pn
sub
mov
lahf
fs
daa
xlat
arpl
andb
loopne
cmp
leave
add
sahf
adc
sbb
loopne
and
mov
lods
and
stos
add
cmpsl
sub
loopne
pop
mov
lcall
mov
xchg
jne
jne
sub
in
push
cmp
jmp
andb
ljmp
dec
mov
cwtd
jnp
adc
pop
scas
and
and
fcompl
push
addb
pop
orl
inc
rorl
inc
sbb
leave
js
mov
scas
cwtl
push
and
cmpsb
add
aam
sbb
sbb
add
jne
lock
push
xchg
jl
mov
mov
cs
gs
addr16
loopne
daa
icebp
std
add
dec
push
into
push
mov
int
jne
cmp
adc
mov
into
imul
fcomip
mov
push
inc
rolb
mov
cli
fstpt
insb
aad
das
out
jo
rol
cli
mov
mov
not
imul
add
cmpb
xor
fstl
cli
fistpl
mov
stos
and
xchg
jae
hlt
jg
or
pop
icebp
ret
sbb
mov
mov
xchg
ret
cmp
nop
xchg
mov
pop
dec
movsb
and
psubq
dec
cmp
stos
and
jne
iret
pushf
push
mov
inc
mov
lea
je
mov
das
mov
sti
loop
push
push
lods
sub
add
jnp
rorl
add
pop
loop
sbb
and
loop
lret
sbb
call
dec
xchg
arpl
push
aam
xor
popa
pop
jns
or
sub
or
fwait
insb
add
mov
push
jecxz
push
xchg
ds
sbb
movsb
and
cltd
adc
xor
ficoms
les
mov
inc
sahf
sbb
mov
mov
cmp
and
push
out
sub
inc
out
xor
dec
pop
imull
mov
hlt
push
scas
fstpl
mov
nop
xlat
addb
loop
loopne
scas
shl
mov
pop
in
jb
add
inc
in
push
mov
testb
je
fimuls
and
in
lods
and
ret
jbe
mov
jne
dec
cmp
or
push
pushf
and
inc
push
push
loopne
sub
mov
iret
shrl
andb
imul
cmpsl
vmovsd
inc
popf
push
push
sbb
adc
out
cli
inc
add
shlb
jnp
shlb
add
mov
add
mov
loope
mov
inc
insb
popa
iret
movsb
mov
xchg
mov
mov
hlt
in
icebp
stos
nop
rol
jnp
repz
push
push
mov
push
rolb
in
mov
mov
cwtl
aaa
stos
addb
popf
lock
pop
mov
andb
or
loopne
shl
or
inc
addb
jmp
ret
ud2
aam
push
arpl
rclb
loopne
scas
loopne
lahf
jmp
enter
xor
loopne
mov
mov
mov
loope
jge
sbbl
stc
dec
loop
in
adc
xor
lock
add
loopne
loope
shlb
xor
xchg
or
mov
popa
popf
mov
lods
adc
mov
loopne
fsubrp
pushf
flds
dec
ret
repz
int3
cmp
ljmp
in
aad
ljmp
ds
push
adc
pusha
and
cmp
addb
inc
fsub
push
shlb
push
xor
add
popf
xor
stc
iret
call
rolb
pusha
pop
rcrb
jb
leave
mov
inc
lds
imul
addb
test
je
test
addb
jl
xchg
loop
push
call
loopne
imul
push
add
inc
mov
adc
sti
or
pusha
lds
and
sub
loopne
mov
fld1
and
pop
sub
shrb
jno
lds
stc
inc
pop
adc
stc
push
lock
loopne
pusha
sub
hlt
aam
jns
add
lods
stc
lret
scas
repz
add
andb
gs
loopne
in
sahf
add
xor
test
pusha
mov
pop
and
add
pusha
adc
mov
mov
andb
jb
inc
xchg
lods
cmp
loopne
enter
ds
adcb
test
mov
arpl
pusha
add
les
or
inc
push
dec
cmpsl
mov
sub
add
xor
mov
add
add
pusha
mov
shrb
fistps
add
jecxz
cmp
add
and
lods
lret
pusha
movsl
or
loopne
ret
iret
and
add
fisubrl
loopne
and
jnp
xor
push
ss
mov
in
test
pop
inc
jns
mov
loopne
cmp
mov
fbld
rolb
mov
jo
dec
mov
lcall
rolb
pusha
sub
cmp
mov
jecxz
shrl
loopne
jl
aad
sbb
mov
rolb
dec
push
push
je
daa
and
pop
fcom
fisttpl
loopne
mov
clc
dec
insl
mov
mov
pop
mov
xorb
shlb
dec
fs
inc
and
aam
leave
jp
add
aam
andb
fisttps
cmp
xchg
loop
outsl
stc
jecxz
gs
sbb
subl
pusha
pusha
pop
addr16
adc
shrb
pusha
dec
sub
mov
test
and
jnp
cmp
or
call
orb
andb
subb
add
inc
or
loopne
dec
sbbl
dec
enter
pusha
dec
sub
xchg
imulb
xor
jb
mov
cmp
mov
push
loopne
or
adc
push
pop
mov
leave
push
loop
lret
add
sub
and
sti
push
andb
and
sub
shlb
cltd
sub
sub
mov
jle
xchg
ret
mov
push
mov
sub
sbb
push
jl
inc
lea
les
out
push
hlt
sub
rclb
mov
cmp
jnp
add
mov
or
inc
jb
enter
aas
add
sti
mov
rol
and
inc
pop
cltd
or
bnd
and
jbe
inc
jo
jge
fwait
pop
rcrl
test
scas
dec
sbb
lea
inc
mov
pusha
pusha
jl
mov
add
je
sbb
pushf
movsl
imul
mov
and
push
add
jb
outsl
mov
loopne
mov
inc
and
int3
cwtl
gs
sbb
rolb
mov
gs
shlb
pop
jns
xor
add
or
test
or
add
pusha
sbb
push
roll
jb
and
fldt
xchg
fcompl
xchg
cmp
loope
mov
xchg
and
inc
mov
call
push
pop
int
shlb
mov
mov
mov
sub
das
cmp
adc
cmp
mov
mov
imul
cmp
push
loope
push
fwait
mulb
lcall
fcomps
push
and
pavgb
jne
mov
call
fwait
pop
pop
shlb
mov
daa
shrl
or
inc
pop
push
popf
nop
insb
imul
out
into
pushf
outsl
jecxz
clc
shlb
mov
mov
pusha
and
inc
and
sub
ret
call
mov
mov
movb
loopne
push
addb
jns
push
sub
mov
les
imul
dec
sbb
lret
icebp
andb
xor
int
out
movsl
mov
lds
inc
push
mov
stos
lods
js
dec
mov
inc
sahf
jecxz
shl
fwait
in
cli
pop
loope
inc
add
push
mov
mov
sbb
jmp
or
push
cli
push
js
cmp
add
insw
rorl
fistps
call
aad
iret
inc
jl
adc
loop
rol
and
or
loopne
add
inc
jnp
and
daa
xlat
and
addl
sbb
sub
rcl
sub
xchg
push
shr
je
and
mov
jmp
mov
aaa
data16
mov
orl
add
rorb
inc
mov
out
cmp
sub
inc
lods
mov
or
mov
push
mov
mov
stos
jg
sub
and
push
loop
dec
xchg
mov
adc
mov
shl
sub
fidivrl
dec
push
fwait
xchg
lahf
mov
pusha
jecxz
xor
iret
test
pusha
sub
jecxz
xchg
pop
xchg
jbe
ds
push
outsb
lods
shlb
nop
int3
inc
add
xorb
or
pop
mov
push
pusha
mov
dec
sti
xchg
add
sbb
gs
inc
pop
xchg
mov
sbb
jmp
xchg
rolb
or
mov
add
xchg
adcl
and
dec
add
cmp
nop
ds
cs
push
pop
loope
lret
cmp
fcomps
jmp
sub
fimuls
and
sub
and
sub
add
jno
inc
pop
mov
add
fiadds
add
pusha
cmp
dec
dec
mov
sahf
mov
sub
mull
pusha
shl
xchg
jle
sahf
mov
xchg
jb
inc
lods
ror
jns
test
lods
out
in
mov
mov
push
and
adcl
js
out
rol
push
test
ljmp
add
pusha
jb
rcrl
mov
jb
xor
stos
nop
lcall
add
inc
in
sbb
mov
cmp
xchg
jae
dec
aas
xor
mov
pop
lock
jg
mov
xchg
inc
and
mov
shrl
mov
sub
add
notb
adc
and
xor
rolb
andb
out
xchg
adc
sub
insl
dec
mov
add
sub
orb
and
aad
push
lcall
shlb
loopne
xchg
and
in
add
jmp
or
jle
mov
lds
pop
jb
lock
adc
pop
xor
pop
jl
sahf
jb
repz
mov
iret
sbb
lods
push
pop
add
and
pop
fsts
les
mov
cmpb
enter
rcrl
lret
inc
sub
push
shrb
push
mov
lods
mov
add
inc
dec
sarl
jmp
mov
jl
inc
add
adc
push
push
dec
addb
or
in
in
push
push
dec
lods
fisubrs
in
leave
pop
fstl
rol
jge
iret
xchg
sbb
andb
sbb
ja
and
andb
mov
xorl
xor
fdivrl
push
addb
push
lock
inc
hlt
pop
mov
shl
pusha
lea
movq
jl
dec
mov
xchg
repnz
add
mov
add
sub
dec
test
add
pusha
in
jne
dec
jecxz
adc
mov
insl
push
add
add
out
shl
pusha
and
jns
add
inc
faddl
jg
sbb
xor
pusha
mov
dec
clc
xchg
mov
mov
inc
add
loopne
push
lods
sub
and
sub
in
inc
jl
xchg
add
js
stos
add
shlb
sarb
push
push
add
std
insl
mov
sbb
xor
movl
out
lds
shlb
adc
mov
mov
sub
hlt
jbe
push
or
shlb
pop
jp
dec
pop
outsb
dec
xor
jb
sbb
add
je
mov
add
enter
rcll
add
pop
and
fucomip
mov
out
inc
inc
lahf
push
push
push
pop
in
out
and
jp
dec
xchg
aas
rolb
and
inc
fstpl
lret
mov
into
jno
inc
sub
inc
mov
mov
dec
cld
jp
inc
rorl
add
mov
sbb
dec
outsl
and
loopne
stos
pop
or
add
and
mov
inc
add
xorb
inc
inc
scas
inc
mov
roll
inc
cmp
cmpsb
and
adc
js
int
insb
mov
dec
xor
ja
xlat
lahf
fisttpll
test
iret
or
fcom
pusha
lods
addb
rolb
push
loopne
fsts
jmp
pushl
pop
ficoms
imul
test
mov
cmpb
and
add
push
stc
fsubs
cmp
dec
adc
mov
xchg
out
pusha
inc
outsl
scas
sarl
inc
das
in
stc
bound
cmp
out
push
sbb
mov
rorb
mov
fisubrl
test
loopne
mov
repnz
inc
fisubrs
aam
andb
mov
jecxz
rclb
mov
pop
and
or
mov
push
cwtl
imul
repz
rolb
xchg
movsb
inc
mov
cltd
cmp
mov
andb
inc
inc
add
leave
imul
add
or
shll
mov
les
jae
or
loopne
jae
mov
mov
jnp
dec
shrl
dec
xchg
pusha
push
loopne
fistps
repz
mov
adc
sti
mov
lds
cmpsl
lcall
and
mov
daa
push
daa
push
enter
pop
shl
andb
arpl
bound
pusha
cmpsb
pusha
pusha
cmpsl
out
aas
inc
popa
mov
cmp
in
scas
shlb
dec
popf
into
test
loopne
repnz
xor
push
jg
stos
mov
hlt
arpl
movsl
push
mulb
and
test
add
pop
adc
dec
inc
into
jp
call
sub
shlb
pusha
add
xor
nop
out
sbb
mov
jl
divl
jle
add
pop
cmc
add
inc
and
mov
mov
and
in
out
dec
ljmp
or
xchg
dec
mov
int3
xchg
mov
or
and
mov
ds
pop
aaa
inc
shr
dec
xchg
mov
mov
inc
mov
add
push
les
pusha
mov
mov
add
iret
sub
shlb
icebp
sub
sbbb
and
mov
add
push
push
pop
in
adc
dec
xchg
inc
shll
inc
inc
adc
in
repz
inc
shl
ret
jno
add
lods
shlb
shll
adc
cmpsb
add
fsubrs
cmp
out
and
jge
xor
pop
xor
or
loopne
cmp
aam
xor
push
cmp
jmp
pop
push
add
cmp
pop
mov
repnz
loopne
sub
fsubrl
mov
loop
mov
mov
adcb
in
mov
rcrb
sub
inc
pop
xor
xchg
popa
sti
mov
imul
vunpckhps
mov
xchg
ret
and
test
sarb
adc
jbe
outsl
cltd
push
movsl
loopne
shlb
sbb
dec
fstp
sbb
outsl
mov
inc
xchg
loopne
stos
jl
or
and
loop
test
inc
js
cmp
js
rolb
mov
and
movsb
loopne
cmp
pop
push
dec
pop
js
lcall
cmp
sub
or
mov
cwtl
sub
negl
sahf
leave
scas
jno
jns
sbb
xchg
int3
fwait
into
xchg
ret
lds
inc
cmpsb
rolb
dec
into
add
mov
xor
aad
and
mov
enter
dec
loopne
in
adc
mov
mov
and
loope
jnp
mull
lock
mov
jo
call
or
add
and
and
outsl
push
add
sar
enter
aas
mov
fs
adc
or
mov
fwait
ret
and
mov
les
mov
call
and
jno
xchg
push
cmp
sbbb
inc
xchg
inc
mov
lret
testl
push
inc
xchg
push
inc
and
mov
mov
stos
pusha
shlb
mov
fidivrl
mov
pusha
in
add
mov
test
inc
ret
jle
enter
or
call
inc
push
repz
inc
lods
and
fs
movsl
out
add
loopne
add
loopne
out
shrb
lods
loopne
add
addb
jecxz
sbb
cs
popa
mov
pusha
inc
pop
dec
pop
dec
and
sbb
mov
loopne
push
push
mov
shlb
shlb
andb
aam
dec
idivl
pop
cmp
clc
iret
aas
mov
enter
outsl
scas
andb
add
inc
std
add
jb
jnp
data16
lea
in
popa
loope
xorl
lret
test
jb
stc
loop
add
test
pop
scas
add
dec
cmpsb
add
add
inc
bound
dec
adc
jge
sbb
push
jb
fisttps
dec
divl
ds
sar
inc
jno
add
leave
lret
sub
add
sar
fiadds
add
orl
push
or
shll
xor
adc
lock
mov
pusha
loopne
inc
mov
jecxz
and
xor
cmp
ja
sub
xor
ss
loopne
pop
cs
and
inc
shl
inc
jne
rol
lods
add
xorb
repnz
sub
sub
mov
orb
loopne
inc
scas
add
pushf
sbb
pop
movl
push
cmc
cmp
pop
in
sub
mov
lds
xchg
add
adc
popa
shrl
xchg
stos
out
jns
scas
and
cmp
or
or
popf
push
adc
and
es
xor
inc
sub
lret
jp
shl
les
and
cld
repnz
inc
xorb
add
inc
jmp
dec
xchg
fcoml
daa
arpl
or
loopne
cwtl
daa
mov
inc
dec
push
xor
and
and
jbe
jge
dec
pop
add
lahf
lret
das
push
loop
dec
sub
loopne
das
leave
inc
push
sbb
out
dec
jne
pop
xor
xchg
cltd
repz
sbb
adc
and
and
mov
inc
rcr
and
pusha
mov
int
pop
sbb
sahf
cmp
jnp
sahf
loopne,pn
sbb
adc
popa
fimuls
mov
mov
add
cmpsb
inc
add
lahf
mov
jge
pusha
pusha
cmp
iret
jmp
push
add
jbe
je
and
addb
and
add
lret
or
inc
mov
rcl
xor
ljmp
and
ljmp
xchg
cmp
cli
or
pusha
push
push
xlat
lret
iret
dec
cmp
mov
add
outsb
xor
icebp
out
jle
add
and
int
pmullw
loopne
and
cmp
inc
out
lcall
add
sbb
sbb
jo
popa
jmp
jbe
bound
inc
inc
add
and
hlt
call
sahf
rclb
pusha
rcrb
dec
inc
adc
mov
aad
inc
mov
rol
sarl
out
xchg
andb
icebp
icebp
lds
in
add
pusha
adc
xchg
sub
loopne
sbb
add
cmpsb
andb
sarb
dec
push
clc
sbb
inc
aaa
loopne
test
push
rolb
dec
pop
mov
cmp
fdivr
dec
mov
in
mov
cltd
aam
fs
pushf
rcrb
cmp
out
mov
popf
hlt
fidivl
sub
xor
push
popf
inc
mov
movsl
bound
jmp
loopne
fcompl
xchg
stc
call
andb
pusha
pusha
fs
mov
xchg
add
pusha
add
pop
cmp
xchg
loope
add
shrl
loopne
jno
ret
out
js
jno
mov
sbbl
rorb
das
inc
adc
add
shr
rolb
inc
scas
aaa
fs
inc
jg
mov
fsubp
push
enter
or
or
pusha
inc
call
cmp
jns
pop
outsl
jno
or
repnz
sub
and
mov
pusha
and
neg
outsl
scas
andb
mov
repnz
pusha
push
xor
xor
add
adc
shl
mov
loop
fsubs
gs
pusha
jb
std
imul
inc
imul
dec
repz
cmpsl
or
cmp
aad
js
clc
mov
popf
pushf
fcomi
cmp
push
call
loopne
cmp
and
and
nop
push
andb
pop
jg
mov
mov
jnp
and
add
add
rol
ja
push
pop
add
int
push
lcall
or
push
pop
pushf
sub
gs
data16
pushf
xor
leave
insl
push
pop
cmc
bound
sub
xor
mov
out
inc
notl
jl
inc
mov
or
shrb
pusha
lods
into
sub
andb
push
movsb
mov
add
adc
adc
or
inc
add
sub
and
mov
and
ror
ss
mov
cwtl
jmp
add
mov
testb
fwait
ret
and
inc
xor
xchg
dec
les
cmp
loopne
sub
subb
push
arpl
mov
int
es
add
repnz
pop
jbe
sti
jbe
mov
mov
and
rcrb
mov
out
jb
mov
stc
or
movsb
and
lahf
sbb
test
inc
jmp
sbb
add
mov
dec
daa
jmp
or
or
inc
dec
or
cmp
loopne
pop
dec
repz
pop
lahf
dec
es
sub
mov
sahf
out
rolb
aam
scas
addb
adc
outsl
jl
je
pop
out
dec
push
lods
imul
shlb
jae
bound
jb
push
mov
inc
fs
jno
push
aaa
addb
and
jp
bound
out
pusha
pusha
addr16
push
popa
push
cmp
jo
out
lret
or
pusha
ja
int
jne
out
ds
add
test
add
mov
orb
loope
adc
mov
mov
loopne
push
lea
sub
js
mov
loopne
in
cmp
pop
xchg
das
leave
mov
cmp
sarb
mov
addr16
cmp
xchg
inc
add
or
pusha
loopne
clc
adc
or
popa
and
nop
inc
in
or
out
test
mov
dec
js
loopne
jmp
addb
loopne
dec
xchg
and
inc
adc
jbe
jmp
mov
inc
and
add
add
pusha
mov
stc
push
lods
pusha
mov
pusha
inc
imul
push
add
xor
and
loopne
xchg
sbbb
pushf
push
dec
or
pusha
test
es
inc
sti
inc
sbb
loopne
in
nop
cmp
pop
add
pusha
xchg
notb
jg
sub
inc
divl
xchg
scas
sahf
neg
out
mov
inc
sahf
popa
lock
out
inc
xor
xor
test
sbb
jl
sar
sub
loopne
ds
lahf
mov
pusha
loopne
lret
cmpsl
cltd
or
xchg
sbb
add
mov
inc
bound
or
shlb
jecxz
ror
fmuls
je
fmuls
pusha
jb
inc
sti
jg
pusha
pusha
add
fucomp
repz
movsb
loopne
ljmp
mov
push
daa
inc
jp
and
add
loopne
inc
fisttps
rolb
jg
mov
into
in
inc
jl
sahf
xor
push
addb
mov
add
repnz
dec
inc
lods
mov
shrl
daa
imulb
shlb
rcr
sub
loopne
cs
shlb
in
lret
jae
pop
leave
out
fbstp
iret
outsb
dec
mov
iret
pusha
pop
movsb
inc
pusha
adc
add
fdivrs
cmp
into
loopne
push
cmp
pop
call
rcrl
add
or
loopne
add
andb
dec
pop
mov
inc
fcomip
lods
and
and
jb
repz
andb
push
xchg
and
jbe
dec
add
test
loope
mov
cs
adc
fadds
loopne
bound
inc
test
hlt
aas
in
es
loopne
rcrl
mov
mov
push
xor
mov
jge
pop
adc
into
pop
xchg
fists
ret
sub
add
inc
cli
inc
add
outsb
push
dec
movsl
cmpsb
and
dec
in
shlb
lock
mov
inc
jnp
cmp
rclb
xchg
stc
in
adc
pusha
add
lods
andb
xchg
fisubrl
inc
popa
inc
push
mov
in
aad
xor
rolb
inc
sub
and
mov
inc
inc
roll
cltd
mov
cmp
repnz
fnstenv
mov
mov
shrl
enter
div
popa
addr16
and
inc
loope
jle
lahf
xchg
inc
lock
idivl
mov
jae
lcall
mov
xchg
sub
jge
andl
fmuls
mov
pusha
shlb
loopne
pusha
pusha
or
xchg
add
pusha
not
ljmp
ja
pop
push
mov
sub
sbbb
lahf
mov
shll
dec
jb
fildll
push
adc
cmp
mov
es
jge
dec
enter
and
lcall
mov
or
mov
push
dec
cmpsb
inc
mov
dec
and
push
mov
xchg
pop
dec
xor
adc
cmpl
addb
mov
loopne
sbb
jb
xor
add
jmp
shlb
shrb
insb
adc
loop
add
push
movsl
ret
pop
push
inc
lock
push
rolb
call
sub
aas
addb
neg
aam
fnsave
push
pushf
inc
mov
sbb
imul
inc
decl
and
lock
add
aam
push
inc
mov
and
and
std
add
addb
out
mov
jecxz
mov
and
lds
subl
sub
add
andb
xchg
add
mov
and
inc
addb
sub
out
adc
add
mov
jae
das
lcall
cwtl
flds
xor
inc
add
addb
out
pop
das
dec
xchg
push
pushf
jg
rcrb
stc
ret
pop
and
dec
xchg
jp
outsb
stc
mov
sbb
rcrb
andl
shlb
sub
mov
andb
shlb
je
ds
xor
and
xchg
inc
adc
jns
xor
outsl
push
out
mov
xchg
int3
add
and
cmp
mov
mov
int3
lret
jg
mov
or
mov
inc
mov
mov
loopne
sub
les
stos
loopne
gs
sahf
xor
addb
mov
ret
fld
inc
cli
dec
outsb
ret
popa
cltd
adc
das
sub
out
or
out
pop
jmp
sahf
mov
xchg
jb
cwtl
cwtl
test
add
imulb
cmc
gs
loopne
movsl
inc
and
pusha
push
andb
mov
xor
in
mov
sarb
adc
inc
push
xchg
inc
lret
adc
xchg
jecxz
mov
mov
hlt
ret
neg
sti
xor
mov
addl
lds
fcoml
in
pusha
and
push
inc
inc
mov
and
adc
gs
in
and
sub
das
data16
or
cmp
pop
popf
das
dec
cwtl
pop
mov
shll
xchg
lahf
test
andb
shlb
inc
loope
mov
rolb
inc
loopne
xor
sbb
cmp
push
jmp
decl
pusha
mull
test
into
cmpl
jae
repnz
inc
cmc
repnz
xchg
out
testb
and
pop
mov
pusha
addb
jmp
shl
xor
push
loop
pushf
sti
clc
dec
arpl
insb
scas
shlb
push
dec
push
or
add
and
cmpsb
inc
mov
addb
ljmp
jp
mov
pop
pop
in
mov
loop
das
insl
fstpt
mov
bound
inc
addb
les
jns
pushf
pop
aaa
nop
stos
add
fisttps
xchg
cltd
sti
in
sbb
imul
loopne
mov
cli
cmpsl
jno
or
mov
inc
jge
loopne
lahf
fucompp
sarl
std
popa
push
mov
rclb
cmc
lret
loop
add
mov
jmp
push
jne
adc
mov
sub
rcrb
xchg
hlt
lcall
push
jno
daa
cmp
test
and
test
push
add
test
pusha
clc
or
push
inc
rolb
pusha
pop
add
pusha
shlb
and
mov
cmpsb
addb
jnp
inc
cld
xchg
push
add
jnp
inc
and
arpl
lods
inc
pusha
clc
push
out
cmp
dec
adc
mov
xlat
rolb
out
ljmp
inc
and
mov
sub
xorb
negb
and
inc
add
std
sub
add
cmp
add
fiaddl
add
pusha
idivl
jmp
in
fnsave
rolb
out
fmul
scas
loopne
xchg
xchg
add
push
xchg
xchg
clc
scas
in
lret
add
seta
fs
mov
es
inc
jne
lds
fidivrl
lret
sar
adc
mov
mov
hlt
and
and
loopne,pn
andl
movsb
rol
sub
sarb
mov
pop
jle
push
stos
loopne
or
pop
push
sub
inc
loopne
addb
and
fsub
popf
and
and
lret
xor
xchg
into
andb
lret
out
cmp
mov
loopne
add
insl
or
addb
rolb
mov
sbb
pop
jbe
mov
pusha
loop
dec
mov
rolb
pusha
add
outsl
push
int
aas
xor
rolb
loopne
push
in
stc
dec
add
and
loopne
mov
insb
icebp
mov
ret
cmp
add
push
out
adcl
push
and
lods
add
es
cmp
pusha
pusha
push
mov
addl
cmp
mov
add
pusha
pusha
or
cmp
mov
and
and
mov
dec
sub
cmp
loope
jle
in
ret
xor
leave
mov
mov
and
lret
sarb
cmp
aaa
xchg
cwtl
xchg
push
popa
sbb
push
add
fs
add
xchg
ds
loopne
pusha
and
testl
aad
jno
push
int3
popa
bound
lods
test
pop
and
fcmove
dec
gs
inc
sbb
ljmp
insl
loope
or
cmpsl
sub
sbb
daa
dec
sbb
test
mov
loopne
jae
and
lds
loope
rcr
cwtl
inc
mov
add
rol
fwait
jle
lret
loop
test
addb
mov
andb
imul
popa
push
mov
add
push
push
shll
sub
icebp
or
mov
or
and
imul
in
lcall
pop
rorl
adc
aaa
fwait
in
hlt
pop
xchg
sbb
push
mov
xchg
out
inc
pop
inc
pop
xchg
inc
adc
stos
mov
pop
test
inc
lcall
lods
add
inc
arpl
cmp
mov
ret
stos
and
dec
inc
push
popa
enter
iret
ds
daa
adc
and
sti
stos
and
jp
sub
outsb
sbb
mov
loopne
cmp
cwtl
sarl
adcl
rcrb
cmp
inc
data16
int3
loop
mov
add
or
popa
out
pop
shlb
loopne
push
adc
jg
dec
rcr
sbb
push
mov
jo
dec
ret
push
addb
pusha
pusha
mov
xchg
sbb
popf
int
mov
mov
adc
adc
and
hlt
lds
push
xlat
inc
shlb
cmp
dec
loop
mov
inc
rcl
or
rclb
subl
jnp
xchg
jbe
test
imul
iret
cmp
mov
rcrb
pusha
add
andb
mov
loopne
xchg
mov
fcompl
ss
xchg
and
jnp
sahf
pop
add
jb
into
and
pop
hlt
addr16
dec
fisubrs
loopne
dec
mov
push
push
js
and
lods
and
mov
loopne
test
sbb
out
xorl
loopne
xor
and
andb
cld
push
cmpsl
add
and
inc
sub
iret
fnstsw
inc
in
cld
xorl
mov
sbb
adc
lods
imull
inc
into
pop
aad
std
add
inc
add
popa
inc
call
nop
lret
std
adc
cld
enter
dec
and
rcl
insb
mov
or
into
fs
or
sub
nop
mov
add
push
jmp
and
mov
jb
and
mov
outsb
dec
into
dec
repz
cmp
pop
aam
loope
cmp
fildl
fisubs
and
test
add
in
pop
and
adc
test
mov
pop
leave
data16
dec
out
out
movsb
loopne
lea
in
les
shrb
sub
das
jo
mov
add
add
jnp
imul
mov
mov
pusha
or
pusha
jmp
addb
mov
loopne
repz
sbb
repz
out
test
addb
inc
and
and
mov
mov
and
lret
mov
cmp
je
sarb
hlt
inc
mov
insl
mov
push
and
shrl
sarl
test
add
adc
jae
add
rcrb
movsl
loopne
daa
cmpsb
pusha
subb
xor
sti
cmpsl
push
add
and
pop
xchg
int3
jmp
push
dec
lods
inc
add
dec
xchg
fstps
call
xchg
jnp
ret
jns
cmp
inc
add
cwtl
les
mov
xchg
xchg
cmp
and
ss
xchg
fwait
jl
negl
push
push
movsl
loope
inc
cmp
or
icebp
jl
leave
or
fmulp
ljmp
xchg
das
mov
shrl
add
pop
adc
int3
add
jbe
mov
out
mov
pushf
sbb
aas
jle
das
cmp
and
ret
sub
test
inc
jo
cmp
xchg
hlt
aaa
ja
mov
lret
inc
jecxz
ja
jno
inc
aas
pop
call
inc
add
arpl
sahf
cmc
call
les
fisttpl
les
clc
jbe
add
add
je
adc
jmp
inc
dec
sub
subb
sarl
aam
mov
jmp
pop
fistl
xchg
jns
sbb
jb
mov
inc
sub
out
lods
sbb
imul
push
inc
loopne
mov
push
aaa
jno
or
decl
mov
rclb
shlb
pop
shlb
rcr
testb
mov
cmp
sbb
adc
inc
dec
popf
neg
or
scas
lock
sbb
clc
and
jae
ret
mov
lret
push
cmp
push
add
mov
jnp
in
jecxz
shlb
fsubl
and
xchg
sti
popf
inc
xor
loopne
sub
xor
popa
dec
icebp
xor
or
mov
lea
jmp
test
sub
adc
loopne
aas
inc
push
test
or
jb
int3
dec
cli
lahf
and
stos
addb
out
inc
xchg
cmpsl
into
out
insl
jge
sbb
fcmovnb
rcrb
push
mov
loopne
imulb
rclb
scas
pusha
inc
or
and
sbb
lods
lahf
int3
in
movsb
pusha
inc
pop
out
leave
cmp
ja
ja
icebp
mov
pop
push
ljmp
xlat
and
and
gs
rol
fldt
and
push
mov
adc
add
mov
mov
jecxz
cmp
xchg
rorb
lods
loopne
ss
inc
cmp
jp
andb
push
jmp
pusha
pop
xchg
sub
add
xchg
lds
cmc
push
pop
out
lcall
js
cmp
xchg
jns
insl
fisttpl
sub
fdivrl
xor
data16
dec
and
and
mov
orb
sbb
xchg
gs
pusha
loopne
inc
add
mov
daa
and
das
push
xlat
and
rorb
xchg
pop
dec
cmp
pop
orl
add
pop
dec
andl
pusha
rol
push
repnz
add
rcrb
push
jbe
cltd
outsb
rclb
lret
loopne
and
xchg
shll
int
lds
shrb
adcb
cmp
push
fmull
inc
repz
sbb
mov
inc
xchg
into
rolb
mov
xchg
ret
addb
cld
mov
and
jno
lods
and
out
pusha
mov
mov
mov
xchg
dec
mov
jecxz
and
pusha
sti
aad
sahf
enter
repnz
dec
jae
xor
and
mov
daa
outsb
movsb
loopne
inc
mov
movsb
add
les
adcl
adc
loopne
mov
outsl
cmpsl
mov
int3
outsl
inc
xor
pusha
rorb
pusha
push
jmp
shlb
inc
cmp
fildl
stos
enter
jle
lret
add
outsl
fiaddl
addl
mov
push
mov
movsb
andb
push
loopne
in
loopne
enter
add
xchg
lods
sbb
jl
ss
add
cmp
and
and
gs
xchg
inc
and
sub
mov
bound
pop
ljmp
icebp
pop
shll
add
cmp
mov
jge
aas
mov
lcall
sahf
dec
push
mov
mov
cmp
shlb
sub
mov
xchg
sbb
outsb
inc
fisubrl
cmp
cltd
test
inc
cld
push
popa
in
cmc
mov
insl
inc
pop
dec
pushf
ret
pop
or
cltd
inc
jp
ljmp
rolb
jo
out
inc
adc
push
aaa
cmp
repz
and
aam
aas
fs
sarb
scas
push
jb
xor
test
and
mov
mov
das
or
cmp
andb
inc
mov
imul
mov
mov
add
jl
enter
mov
dec
jno
stos
add
imul
pop
dec
and
mov
rolb
ljmp
fs
les
dec
mov
mov
fbld
dec
cmp
mov
addb
lahf
test
addb
mov
pusha
sbb
sbb
in
pop
repz
xchg
mov
std
mov
sahf
stos
mov
pusha
inc
mov
aas
push
cmp
into
mov
notl
mov
popa
cli
or
inc
mov
inc
jge
jle
adc
outsb
pop
mov
mov
sub
call
sti
xchg
call
jecxz
outsl
or
fstpl
xor
jb
or
fwait
test
rolb
scas
in
add
adc
pusha
loopne
pusha
inc
imul
add
outsb
imul
ja
and
and
sub
test
pop
push
cmp
inc
pop
sub
fs
cmp
negb
add
loop
add
fsubp
out
sbb
add
xor
addl
loope
aaa
fsubr
cli
push
xchg
dec
sbb
icebp
jnp
jle
inc
and
mov
xor
inc
out
test
shlb
or
shll
movsl
or
mov
shr
pop
jecxz
lds
mov
mov
cmpsb
add
push
and
xchg
lret
or
in
frstpm(287
or
and
sbb
jns
clc
jge
jb
pusha
loopne
push
arpl
loopne
sub
mov
cmp
outsl
inc
mov
mov
mov
test
scas
xchg
stos
popa
fdivl
aas
pushf
testl
repz
sbb
and
mov
jl
xchg
out
xor
or
cmc
lods
shlb
shlb
int3
pop
test
and
sbb
mov
sub
repnz
outsl
imulb
add
add
mov
push
icebp
jnp
inc
mov
out
ljmp
shlb
pusha
pop
jl
and
dec
mov
cmpsl
lret
and
xchg
divb
or
subb
and
xlat
gs
add
and
adc
inc
jae
or
rolb
out
call
push
shl
addr16
mov
or
xlat
aas
mov
insb
jno
or
shlb
shlb
pusha
xchg
ljmp
inc
shlb
clc
mov
test
scas
insb
push
xorl
outsl
idiv
pop
push
mov
pop
fstl
mov
ret
out
dec
push
add
push
dec
add
mov
mov
and
lods
mov
orl
jge
ficompl
cmp
dec
sbb
pushf
mov
jmp
jg
jo
dec
push
scas
mov
pop
pop
shl
leave
adc
add
rorl
add
adc
mov
sub
loopne
ss
mov
pusha
xchg
dec
fidivrs
loope
adc
loopne
jg
mov
repnz
xchg
and
xlat
sahf
inc
adc
or
mov
insb
pusha
mov
xlat
frstor
int
in
inc
dec
pusha
push
int
dec
dec
cmpsb
pusha
addb
xor
pusha
out
mov
xor
mov
push
add
in
xchg
fadd
es
les
faddl
in
ret
lock
jle
sbb
pop
xor
push
in
jmp
push
push
icebp
shrb
andb
xor
jge
mov
pusha
loopne
add
jmp
push
and
sub
loopne
js
shlb
jle
mov
pop
andb
or
gs
pusha
add
mov
xchg
arpl
add
add
and
and
stos
pusha
mov
negl
mov
notl
inc
loopne
dec
cltd
ret
fstl
out
ret
insl
mov
popa
rorb
and
lods
mov
mov
sub
xor
fsub
sub
cmpb
jg
ss
push
testb
xor
ja
pop
std
sbb
mov
xchg
add
scas
addb
inc
divl
sbb
xlat
sub
loopne
or
loopne
xor
sub
push
inc
add
inc
and
and
mov
loopne
pop
popa
sub
xchg
mov
and
pusha
shlb
and
mov
add
mov
add
add
add
aam
jo
mov
xorb
scas
and
les
movsb
loopne
and
fdivs
popf
lods
stos
andb
out
sub
jecxz
dec
or
add
ljmp
jecxz
addb
sti
push
xchg
addb
pusha
in
mov
out
sbb
adc
fcoml
int3
lock
andb
xchg
mov
cmpsl
pushf
les
pop
inc
push
sarl
test
loopne
pop
out
mov
pusha
sbb
addr16
push
bound
and
icebp
je
icebp
cs
pusha
pop
call
add
std
popf
int
add
data16
pop
sbb
mov
cli
pop
out
stc
cmp
sbb
or
jecxz
adc
or
pop
pop
push
xor
lahf
mov
push
cmp
aas
adc
mov
movsl
ss
xchg
push
jg
pop
dec
icebp
inc
hlt
icebp
stos
addb
fildll
rolb
enter
lock
mov
mov
pop
dec
inc
addr16
adc
stos
mov
add
sarb
in
js
fisubl
mov
aam
push
mov
add
loopne
shlb
test
xor
and
dec
aam
js
cmp
loopne
sbb
rolb
push
rol
and
push
cmpsl
in
dec
sbb
adc
in
and
push
mov
scas
inc
inc
into
inc
sbb
pop
rorl
out
mov
rclb
lret
adc
in
in
enter
scas
push
adc
pusha
pusha
mov
movsb
mov
loopne
loope
loopne
mov
lods
inc
sub
dec
dec
and
je
pusha
add
jle
inc
add
test
inc
ret
xor
mov
and
xchg
rorb
ss
xchg
mov
mov
mov
pop
ja
mov
stos
lods
fbld
sbbl
shlb
ljmp
jp
inc
mov
jg
or
mov
jle
icebp
jecxz
or
adc
inc
int3
imul
inc
mov
testl
insl
or
sbbl
mov
and
iret
inc
repz
out
hlt
in
rolb
sbb
jg
lcall
pusha
into
push
hlt
cltd
rcrl
lcall
and
mov
scas
add
mov
sbb
xor
jo
inc
pusha
ret
xor
xchg
shr
nop
sub
addb
mov
adcb
or
idivl
addr16
and
inc
mov
inc
xchg
dec
in
mov
xchg
adc
fsubrl
push
xchg
pop
xchg
dec
dec
js
fsub
stos
mov
dec
adc
cmpsb
add
sub
pusha
pop
pop
scas
jne
stos
add
mov
sub
inc
mov
sahf
outsl
push
movsl
pushaw
inc
jp,pt
sub
inc
pshufw
adcl
mov
loopne
or
addb
dec
cld
dec
jae
or
or
fisubrl
loope
push
mov
mov
rol
push
loope
andb
cmp
jbe
cwtl
xor
shlb
stc
xlat
lahf
fs
inc
jo
and
stc
xchg
out
inc
inc
cli
repz
loopne
cmp
push
addb
cwtl
lret
inc
mov
add
add
je
xchg
pop
or
add
mov
cmpsb
rolb
pusha
das
mov
mov
andl
or
loopne
push
and
add
out
cli
xor
xor
test
and
cmp
dec
cmp
and
add
adcb
add
or
lret
aaa
add
mov
push
adc
add
dec
fnsave
dec
arpl
mov
sbb
outsb
aad
cmp
sbb
pusha
fisttpll
dec
int
rol
mov
loope
outsb
push
pop
pop
push
jle
xor
push
cs
shlb
fwait
adc
pusha
dec
loope
repnz
lahf
out
fdivs
shrb
addb
aas
iret
fmuls
add
and
loopne
das
dec
xor
out
popa
nop
movsb
inc
add
into
insb
out
nop
mov
inc
js
cmp
ds
inc
dec
cmp
inc
lret
add
imul
aad
push
cwtl
int
ljmp
mov
sub
mov
xorb
pop
ret
adc
mov
fs
mov
sbb
adc
icebp
ja
sub
and
mov
shlb
push
add
pushf
das
out
dec
pop
push
or
add
in
js
gs
ficoms
inc
pop
xchg
call
pop
adc
and
test
stos
and
jmp
in
jmp
in
adc
or
adc
das
stos
and
pusha
loopne
adc
xchg
add
or
inc
lods
jg
mov
adc
jbe
inc
loopne
notb
inc
in
cmpsb
shlb
xor
mov
push
nop
dec
ret
into
iret
bound
popa
jge
push
and
dec
fildll
jnp
lcall
mov
add
jno
mov
inc
cld
inc
pop
stos
jecxz
fistpll
dec
cmp
sub
inc
test
mov
add
sarb
add
out
dec
stos
loopne
scas
inc
or
loopne
add
xor
cld
aad
mov
fnstsw
add
sbb
pop
int3
pop
clc
jecxz
cmc
or
loopne
push
cmp
mov
fsubrl
rolb
inc
sbb
and
add
das
mov
rol
pop
popa
imul
and
mov
jg
pusha
sbb
ss
sbb
js
mov
and
push
dec
aaa
fbstp
int3
test
int
pusha
rcrb
ss
imul
lods
and
test
xorb
rcrb
sbb
cmc
lret
call
dec
add
loopne
fndisi(8087
popf
jbe
andb
pop
mov
test
jge
mov
pop
shlb
mov
add
push
and
dec
jge
and
hlt
in
test
and
mov
xchg
jbe
cmpsl
sub
lret
mov
dec
sbb
loopne
pusha
orb
lods
loopne
jecxz
ret
push
out
and
mov
dec
test
sarb
jecxz
cmpsl
pop
sbb
xchg
jnp
inc
fmull
rorb
mov
loopne
fidivl
out
pusha
repz
xor
mov
lret
adc
ret
push
jg
loopne
dec
pop
sub
and
pop
loopne
push
loopne
loopne
jle
mov
xchg
mov
mov
adcl
dec
nop
or
add
add
xor
aam
andb
add
fwait
out
lahf
mov
pop
inc
enter
add
shufps
pusha
sarb
rolb
sub
inc
clc
xchg
pusha
mov
dec
push
mov
test
clc
mov
ss
jnp
push
popf
sbb
inc
mov
xor
xchg
dec
mov
and
sub
popf
leave
je
ss
dec
adc
aaa
add
mov
iret
popa
cmpsl
repz
imul
or
rclb
xor
mov
loope
dec
das
mov
stos
inc
shlb
pop
add
loopne
in
jl
negl
stos
add
mov
lea
add
pop
stos
inc
inc
je
inc
loope
xchg
inc
enter
inc
xchg
xor
add
test
pushf
and
loopne
insb
push
loopne
lods
std
lahf
xor
stc
push
sub
nop
ljmp
ja
mov
push
xchg
stos
add
dec
add
pop
test
loopne
adc
mov
sbb
ljmp
insl
push
mov
mov
pusha
xchg
out
gs
xor
ja
jae
and
je
mov
and
dec
test
into
push
add
pop
repnz
ret
inc
out
lret
movsb
andb
cmp
xor
ds
and
repz
add
jne
mov
adc
je
or
dec
out
sbb
fdivl
mov
ljmp
out
and
stc
add
mov
sub
add
inc
mov
inc
lahf
or
mov
fwait
cmp
add
xorb
fstpl
push
pop
push
mov
pop
std
push
and
xor
pop
pop
mov
imul
and
pusha
xor
sub
mov
push
inc
and
push
dec
pop
xor
push
push
cld
add
mov
ret
or
or
inc
lock
lods
pusha
pusha
and
mov
outsl
and
mov
xor
sbb
xchg
shrl
add
out
or
pop
and
int3
xor
push
xchg
add
and
pusha
pop
adc
inc
or
and
pusha
jmp
inc
imul
pop
mov
inc
pop
scas
pusha
xor
mov
pop
sbb
cmp
fwait
stc
sar
add
es
std
dec
adc
arpl
scas
test
cmp
outsb
iret
push
push
gs
mov
scas
and
ja
add
pusha
inc
pop
push
mov
mov
mov
adc
mov
rcll
jo
popa
sarb
pop
and
mov
addl
dec
and
ret
loopne
leave
add
adc
dec
jns
test
pusha
mov
sbb
jle
pop
movsb
pusha
mov
xorl
btrl
sbb
pop
push
int3
aam
lcall
lods
and
subl
rclb
add
lcall
pusha
pusha
daa
cmp
mov
mov
mov
out
cmp
pusha
mov
movsb
shlb
sbb
repnz
pop
jp
jmp
cmp
ljmp
out
mov
jmp
rorl
mov
inc
iret
fwait
cli
mov
and
cmp
clc
push
and
mov
push
pop
clc
xlat
lea
pop
int3
mov
jns
jbe
arpl
rolb
or
shlb
scas
lcall
cmp
mov
cltd
mov
in
das
push
adc
mov
call
pop
xor
loopne
xor
imul
loopne
dec
sbb
sti
ret
mov
xchg
ja
sahf
lret
dec
ds
and
pop
push
push
imul
lea
mov
shrb
lock
and
add
mov
or
pusha
int3
add
loopne
test
pusha
fsubrl
add
pop
pop
ficoms
push
lock
mov
add
mov
int
add
pushf
test
mov
arpl
rcpps
jecxz
bound
cmp
sub
sarb
push
jb
ret
adc
cmp
leave
mov
test
es
add
stos
ss
sti
push
pusha
loopne
pusha
loopne
loopne
enter
dec
or
cmp
shlb
outsl
popf
cli
outsl
dec
mov
xor
out
add
adc
dec
out
sbb
and
mov
pop
sbb
lahf
adc
ljmp
mov
ret
mov
add
xchg
jne
mov
inc
ret
xor
mov
and
mov
push
inc
mov
push
pusha
dec
push
fmuls
je
cmpsl
addb
fldcw
mov
xlat
fwait
mov
mov
out
xchg
adc
xor
sub
push
es
jns
sbb
shlb
dec
and
mov
mov
rolb
xchg
xor
loopne
lcall
sbb
xchg
loopne
sbb
adc
pop
and
xchg
mov
mov
and
rolb
jbe
lret
pusha
sbb
aad
std
icebp
jp
into
sarb
mov
pop
add
xchg
cmp
lahf
and
loopne
jge
sahf
push
shlb
and
imul
cmpb
sub
addb
das
xchg
fsubl
push
ja
pusha
adcb
add
push
loopne
jmp
test
add
hlt
dec
mov
pusha
sarb
les
dec
lock
cli
xchg
mov
and
rcr
mov
pop
sub
xor
pop
xlat
sbb
add
lahf
fisttpll
loopne
sub
add
daa
jg
mov
imul
ss
lods
add
mov
inc
arpl
outsb
push
push
hlt
pop
aas
mov
lret
pusha
mov
dec
rclb
and
loopne
push
sub
addb
shrb
mov
and
push
and
loopne
enter
mov
rcrl
addr16
addb
xchg
shl
sub
mov
xchg
xchg
test
add
add
add
mov
pop
jno
push
test
and
lcall
loope
or
jg
and
loop
cli
or
adcb
inc
inc
icebp
mov
mov
and
sahf
inc
mov
subb
insb
and
jl
out
pop
sbb
cmpsb
and
fwait
adc
mov
inc
jbe
andb
adc
pusha
mov
popl
pusha
shlb
fisubs
mov
jg
ja
xchg
fstps
rolb
sub
stc
movntps
addb
dec
cmp
add
fmull
adc
sbb
add
pop
loope
push
das
mov
cmp
mov
jnp
out
and
and
inc
xor
sub
leave
bound
hlt
cmpsb
add
xchg
xchg
mov
mov
icebp
xchg
pushf
movsl
adc
icebp
mov
pop
xchg
adcl
jg
daa
xor
dec
cmp
fisttpll
mov
es
push
inc
push
jp
daa
mov
jb
rcrb
out
sub
pusha
xchg
pop
pushf
jnp
movsb
add
or
add
addr16
loopne
sbb
pusha
shlb
mov
xor
mov
mov
xchg
mov
std
pop
or
repz
mov
lret
icebp
test
rcr
sub
loopne
fbld
loopne
push
fs
jo
pop
adc
cltd
ret
jns
add
mov
sub
js
jmp
jnp
int3
dec
inc
sub
and
fcompl
popa
xor
mov
add
push
loopne,pn
adc
inc
mov
pop
sub
aam
pop
dec
sbb
mov
xchg
jno
cwtl
loopne
mov
dec
mov
int
aaa
add
cmpb
fidivrl
inc
pusha
cmp
push
xchg
cmp
xor
loope
pop
sbb
movb
rolb
sub
push
add
inc
push
pusha
in
arpl
jno
fwait
in
and
and
shlb
xor
jg
lahf
out
fucom
sti
xor
into
pop
loopne,pn
leave
popf
or
loopne
or
shl
int
jns
ret
dec
sub
mov
sbb
and
fldl
popa
test
loopne
in
adc
cmpsl
cmovs
sub
ds
mov
or
inc
mov
mov
sub
xorb
jge
pushf
aas
mov
and
cmp
lret
lea
xor
mov
in
outsb
sbb
add
sbbb
add
sbbb
lock
pusha
pusha
int3
outsb
jge
icebp
mov
and
pusha
js
xor
fsubs
int3
outsl
icebp
push
sub
inc
xor
inc
and
rolb
imul
pop
jl
push
ja
andl
adc
push
pop
sbb
ret
jne
hlt
test
decb
test
pusha
mov
mov
daa
jne
sub
inc
xor
push
outsl
inc
adc
rolb
loopne
inc
mov
inc
or
cwtl
cltd
xchg
xchg
dec
xlat
add
ficoml
push
cmp
and
lods
loopne
mov
push
add
lock
sbb
test
mov
addb
shrb
mov
cwtl
fldt
subb
pushf
sbb
gs
in
xchg
int
pop
aaa
jge
xor
pop
inc
adc
in
pop
aas
daa
enter
mov
das
mov
inc
sbb
outsb
inc
outsb
sbb
mov
xchg
repz
jo
insb
std
test
pusha
fwait
cltd
sub
add
xchg
aaa
jl
sbb
mov
cmpsb
shlb
jmp
loopne
jnp
and
shrl
loopne
fcomps
je
sbb
add
mov
mov
sahf
fildll
pop
repnz
dec
adc
pusha
ss
add
pusha
add
loopne
sbb
mov
popa
cli
enter
stc
xchg
cmpsb
shlb
push
dec
in
push
test
add
ror
in
jne
pusha
mov
shl
jae
mov
fisubrs
jns
sub
orb
jp
sub
out
xchg
mov
push
pop
hlt
sar
fs
ja
sahf
and
add
inc
mov
add
xor
xchg
cwtl
mov
mov
jae
mov
xchg
push
shll
pusha
inc
add
sub
addb
insl
rolb
sub
mov
add
and
dec
faddl
jbe
pop
in
inc
dec
lea
shlb
mov
pop
hlt
lret
shll
mov
stc
pop
stc
jmp
mov
data16
shlb
cmp
dec
sbb
out
cmp
addb
and
aas
scas
and
mov
mov
shl
rcrb
dec
leave
sbb
push
ds
xchg
add
in
xorl
fcmovbe
loop
dec
mov
pusha
loopne
xchg
xor
mov
aam
andb
inc
add
mov
andb
lds
and
push
lret
or
rorb
add
stos
and
outsb
push
cmp
pop
pop
enter
je
cmp
dec
jmp
addb
loopne
addr16
das
push
push
and
cmp
mov
mov
inc
and
cmp
xor
rolb
daa
dec
decb
test
inc
stos
addb
pusha
lods
pusha
and
add
sbb
fsubrp
movl
std
out
stos
ret
push
fcomip
and
loopne
rolb
mov
imul
fcompl
lret
pop
das
mov
es
xor
sarl
pusha
test
inc
rclb
out
push
sub
inc
insl
fadds
and
mov
sbb
sahf
adc
cli
jns
jb
jns
lods
mov
inc
loopne
mov
pop
test
loopne
leave
xchg
xor
popa
add
loopne
inc
inc
fs
mov
arpl
std
xor
test
or
add
sar
pusha
or
fdivl
add
add
pop
and
mov
stos
loopne
inc
cvtps2pi
int3
xlat
cs
and
insb
jecxz
lds
in
mov
inc
inc
icebp
push
rolb
jle
popa
dec
mov
cld
push
adc
jp
cld
and
pusha
loopne
aad
scas
and
insl
xor
cmp
imul
and
sub
ds
dec
loopne
int3
lret
fldt
test
push
mov
andb
pop
aas
cmp
pop
addr16
je
fsts
add
jnp
sub
adc
into
sub
pusha
add
inc
cmpsl
jecxz
out
cmp
addb
jmp
lds
dec
push
in
loopne
inc
imul
mov
into
mov
mov
push
dec
aam
xor
mov
aam
testb
in
cli
jns
imul
mov
ret
bound
test
cmpb
and
flds
lods
scas
shrl
das
sbb
cwtl
sub
jmp
and
cmp
inc
inc
insb
xchg
jns
lret
sub
pop
push
adc
jno
shlb
cli
std
mov
loopne
cmp
mov
or
inc
inc
sub
dec
cmp
push
movsl
ljmp
shlb
push
test
iret
fwait
fs
push
rolb
xchg
sti
xor
cmp
jl
mov
loope
sub
add
and
inc
dec
lods
and
addb
pop
cli
mov
in
pop
call
or
pusha
stc
jl
push
cmpsl
fbstp
push
bound
pusha
out
add
stos
loopne
push
sarl
test
pusha
cmp
push
sbb
lock
mov
xor
mov
inc
add
sbb
jb
nop
dec
push
pop
sub
imul
pusha
mov
add
rorb
cmpsb
loopne
dec
stos
movsb
pusha
shrb
int3
cmp
pusha
stc
repz
wbinvd
popa
or
sub
sarb
andb
sbb
clc
jb
pop
inc
test
inc
adc
mov
and
xlat
adc
arpl
xlat
push
lahf
pusha
popf
push
addb
fcmovbe
mov
shlb
dec
mov
imul
icebp
test
mov
xor
jl
and
pop
lods
inc
inc
fwait
and
inc
cmp
sbb
mov
outsb
lahf
mov
mov
pop
sbb
fnstenv
or
xchg
scas
and
push
push
shl
rcrl
mov
leave
leave
loope
mov
jge
push
icebp
lock
clc
mov
out
sbb
adc
sub
pusha
and
stos
mov
mov
lcall
jge
jle
mov
popl
xor
dec
repz
dec
cltd
pop
addl
mov
sbb
pusha
xchg
loopne
dec
stc
pushf
test
sub
mov
inc
loope
inc
xor
add
dec
add
divl
pusha
dec
push
fdiv
les
and
aam
js
enter
shlb
sub
out
adc
leave
push
add
ret
iret
mov
inc
js
dec
mov
stos
mov
cmp
daa
jo
and
pusha
loopne
bound
push
inc
lea
aad
loopne
or
add
movsb
andb
dec
push
pop
xor
xchg
int3
sub
pusha
xchg
dec
or
dec
cs
add
scas
add
and
andb
in
and
lods
sub
add
test
push
insl
imul
jmp
test
add
out
sbb
dec
mov
mov
subb
addb
xchg
call
or
loopne
gs
or
lea
xor
xlat
mul
dec
jbe
or
adc
and
mov
mov
jp
in
xchg
sbb
xor
sub
inc
pop
movsl
enter
cld
mov
mov
out
dec
sbb
push
insb
sub
loopne
rcr
sub
and
sub
jmp
out
aas
mov
xchg
push
popa
jno
addb
pusha
mov
xor
in
lods
push
jle
add
rolb
inc
push
and
and
sbb
jo
sti
fistpll
pop
arpl
mov
xchg
xchg
fmuls
shrb
lock
ss
mov
sbbb
pusha
fildl
movb
jle
lock
sub
icebp
int3
adc
xor
vpunpckhqdq
pusha
add
mov
mov
je
jg
xchg
add
inc
out
add
orb
mov
mov
dec
mov
in
pop
mov
mov
and
popa
out
dec
rol
loop
pop
cmp
dec
loop
lods
movsb
and
ds
clc
ficoms
je
adc
xchg
movsl
xchg
sbb
shlb
loopne
in
popf
push
mov
adcb
inc
add
pusha
stos
pusha
orb
pop
in
addb
icebp
int3
lahf
mov
test
mov
pusha
aam
test
mov
fnsave
xor
dec
dec
lahf
lds
push
dec
ret
popf
and
xchg
mov
jne
fdivrp
push
rcl
shlb
gs
addr16
call
arpl
and
pusha
sbb
loopne
push
jnp
xchg
mov
cld
stos
and
xchg
imul
mov
mov
cmp
add
cmp
push
aam
adc
adc
hlt
lcall
hlt
pop
push
popf
fidivrs
cmpsb
add
add
shl
imul
repz
loopne
repnz
and
shlb
and
push
andb
mov
mov
mov
test
out
xchg
mov
add
dec
push
or
xchg
xchg
jle
loopne
aad
sbb
mov
jmp
mov
mov
mov
andb
add
aad
add
add
pusha
inc
xor
mov
mov
jecxz
daa
or
rorl
and
mov
sub
push
js
lret
mov
jb
push
gs
dec
jo
and
in
xchg
cwtl
add
cs
and
mov
pop
push
xchg
lods
mov
out
push
outsl
and
pop
inc
cmp
daa
and
addb
mov
test
adc
jge
clc
mov
fldl
xlat
and
pop
dec
xchg
iret
push
cmp
push
lret
and
in
cltd
adc
inc
inc
jle
adc
dec
ds
mov
ret
pusha
jbe
imul
shl
clc
bound
cltd
mov
aad
pop
sbb
adc
and
std
shl
out
pop
mov
scas
mov
mov
add
rorb
push
imul
stos
mov
ljmp
nop
jo
sarl
aaa
mov
loopne
cmp
sub
xchg
sbb
into
pop
sbb
cmpsb
add
roll
mov
xchg
xor
sub
jmp
cwtl
lret
add
in
out
push
pusha
xorb
iret
scas
and
mov
aam
push
and
outsb
jl
movsl
adc
xor
mov
ret
add
dec
pop
sub
add
pop
shrb
sbb
cmp
dec
in
mov
rcll
jo
fmuls
push
cwtl
mov
loopne
movsb
and
mov
and
int
jmp
inc
mov
dec
scas
and
iret
xchg
xchg
fcoml
add
add
mov
jae
int3
add
inc
ret
shl
in
pop
loop
pusha
loopne,pn
add
inc
mov
repnz
loopne
xchg
xchg
push
cwtl
cmp
pop
imul
push
shl
sub
add
push
and
aam
pop
jne
pop
nop
pop
sub
and
ljmp
push
pusha
and
mov
add
enter
sub
shl
dec
fwait
mov
popf
and
and
sbb
loope
or
and
scas
and
add
and
les
and
add
and
loopne
mov
mov
lock
enter
pop
or
lcall
pusha
push
loopne
pop
adc
inc
stc
push
mov
mov
xchg
int
andb
je
lret
xor
jne
cld
cmp
sarl
insl
ret
sbb
rorb
test
cmp
aaa
jnp
mov
enter
xchg
cltd
into
sbb
orl
and
or
mov
ss
and
decl
loopne
cmp
je
add
sbb
cmp
call
xor
aas
mov
iret
jno
rclb
push
in
mov
push
inc
rol
scas
cmp
leave
lea
and
negl
push
sub
je
std
sbb
pop
adc
dec
jge
fwait
or
loopne
mov
xor
pushf
movsl
sub
and
xchg
sarl
lcall
mov
lea
xor
outsl
imull
cmpl
iret
dec
test
mov
pusha
pusha
idivl
add
add
cmpb
loopne
or
inc
pop
hlt
out
insb
cmpsb
mov
push
les
mov
pusha
push
cmp
dec
xchg
inc
mov
int
sbb
adc
lahf
js
pusha
inc
add
cmp
fwait
lcall
mov
loopne
inc
mov
pop
movsl
test
mov
inc
and
ret
rolb
sub
inc
push
cmpsl
jecxz
je
divl
pushf
test
push
push
xchg
shl
inc
mov
mov
pusha
rcrb
and
jb
inc
loopne
xor
mov
fwait
lock
xlat
enter
loopne
lods
insl
pop
mov
push
loopne
in
and
dec
cmp
inc
and
fisttpll
dec
pop
jae
push
push
iret
iret
sub
rolb
xor
jl
sub
push
sarl
dec
ret
stos
ret
dec
xchg
xor
imul
adc
sub
out
add
call
sbb
and
xor
and
out
and
mov
loopne
sbb
insl
dec
into
lods
rclb
jbe
lea
mov
push
into
sti
fimull
sub
push
into
xor
push
nop
lcall
loop
je
and
inc
stos
test
mov
sbb
xchg
loopne
pusha
mov
ret
dec
xchg
add
mov
lret
lea
mov
call
cli
ret
mov
mov
fisubs
std
xchg
out
mov
mov
rolb
cmp
cmp
sbb
pop
dec
repz
sub
xchg
frstor
mov
addb
loopne
mov
add
enter
subb
rorl
sahf
and
pusha
repnz
jmp
ficoms
add
stos
and
outsb
movsl
stos
jg
dec
push
and
pop
add
cmc
or
stc
aaa
mov
and
sbb
imul
out
call
loope
fadd
push
or
fsts
insl
cmpsb
rol
dec
push
xor
mov
call
and
shr
and
mov
insb
andb
dec
scas
addb
pusha
and
fisttps
mov
pusha
test
pusha
adc
negb
rolb
push
add
popf
add
rclb
scas
andl
insl
out
daa
mov
loopne
adc
sub
fucomp
mov
or
add
fcomp
std
rolb
or
es
adc
sbb
loopne
fnstsw
xchg
lods
addb
fcoml
mov
icebp
ljmp
dec
jae
sub
add
cmp
pop
je
loope
pop
daa
add
xor
push
dec
or
imul
push
repz
add
cmc
loop
test
mov
add
xor
lret
bound
add
adcb
cwtl
in
roll
xor
jge
cmp
and
lea
stc
mov
daa
scas
inc
add
adc
pusha
pusha
and
add
sarb
and
pusha
or
loopne
leave
jb
sbb
int
ret
jmp
fidivl
push
cld
cmc
push
aam
pop
sub
dec
jmp
repz
and
mov
push
cmp
je
inc
stos
orl
mov
jecxz
mov
andb
pop
push
fwait
ret
add
push
push
jnp
frstor
sub
and
mov
sti
sar
jp
sbb
and
dec
inc
pop
cmpl
add
push
push
push
lea
cwtl
imul
loopne
cld
and
push
stos
pusha
add
add
mov
into
mov
sbb
jp
pusha
and
mov
push
adc
in
bound
push
addb
enter
rol
inc
or
mov
sbb
inc
push
mov
push
fldcw
mov
cmp
xchg
jo
lcall
adc
test
push
rolb
lahf
leave
mov
adc
mov
iret
xchg
out
pushf
jns,pt
push
movb
inc
mov
jo
mov
test
add
pop
in
dec
mov
mov
or
pusha
scas
xchg
mov
or
jecxz
and
cmp
add
ljmp
fadds
cmp
push
data16
mov
ds
jmp
mov
mov
mov
sarb
insl
cs
inc
and
push
dec
push
call
loopne
sahf
cmc
mov
aam
adc
dec
push
pusha
mov
leave
mov
mov
and
sub
push
mov
xchg
mov
xchg
inc
mov
das
mov
inc
and
scas
and
inc
incl
inc
push
mov
aas
push
add
inc
jp
lcall
dec
pop
jbe
lret
xlat
sti
or
inc
mov
sti
xchg
mov
lds
pusha
inc
jmp
xor
and
shlb
inc
andb
xchg
mov
pop
sbb
adc
lret
sub
jnp
inc
test
cmpb
add
arpl
inc
cmp
scas
inc
add
int
and
xchg
jg
xchg
jne
in
out
xor
mov
lock
mov
cmp
scas
ret
push
add
ja
jge
in
loopne
or
rclb
xchg
jmp
int3
div
cmpsb
loopne
addb
xor
aam
out
jmp
rorl
xor
and
pusha
mov
andb
mov
mov
mov
mov
out
mov
xchg
in
call
add
fdivs
adc
mov
mov
adc
adc
shlb
rclb
or
pop
sti
mov
pusha
xorb
jns
inc
loop
dec
add
lds
cmp
mov
xor
push
pop
xchg
xor
sbb
sbb
jno
sbb
adc
sub
pusha
sarl
jbe
lds
inc
and
ficoml
and
add
rcrb
or
andl
jg
pop
pop
scas
int
add
xchg
push
add
loopne
and
mov
sub
rcrb
dec
in
pop
stos
add
outsb
and
addb
add
inc
and
movsb
mov
sbb
notl
and
pusha
cmc
mov
and
mov
scas
rolb
jnp
mov
inc
imul
adc
stos
adc
hlt
adc
sub
not
fwait
and
inc
adc
mov
xor
mov
add
mov
jbe
push
shlb
jmp
lock
aad
adc
mov
loop
and
out
aam
icebp
iret
aam
daa
jle
loope
sahf
cmpsl
mov
pusha
cwtl
mov
xor
add
jb
inc
and
add
add
test
pop
and
jns
cmpsb
add
and
mov
lock
xor
lret
popl
sarb
ret
xor
jne
pop
mov
outsb
and
int3
or
add
idivl
divl
inc
rclb
jl
int
pop
loop
xlat
pop
push
inc
loopne
xor
pop
in
lret
andl
push
mov
adcb
nop
mov
mov
push
ret
fdivr
xor
insb
cmpsb
add
scas
push
insb
pop
xchg
jl
jno
sub
pusha
pop
andl
and
and
pop
sbb
shll
loopne
add
outsl
daa
add
adc
xchg
dec
xor
ja
rolb
and
sub
add
or
movsb
andb
in
jp
push
in
movsl
inc
or
and
and
in
jns
inc
pusha
mov
mov
lahf
movsb
rol
sahf
jmp
pop
mov
xchg
mov
test
pusha
pusha
xor
scas
inc
sbb
and
mov
movsl
push
add
inc
inc
sub
sbbb
pushf
cli
lret
inc
cli
fcmove
add
lahf
fnstcw
fsubs
pusha
adc
xlat
mov
pop
inc
mov
adc
xlat
dec
mov
pop
fisttpl
loopne
lret
arpl
mov
adc
outsb
in
lret
mov
xor
pop
insb
sub
loopne
mov
cmp
mov
test
rcrb
xchg
push
add
and
sbbl
push
dec
sub
loopne
and
fwait
mov
xor
divb
gs
loopne
push
mov
and
push
fsubrl
pusha
inc
fdivrs
roll
wrmsr
mov
repnz
xchg
xor
addr16
lret
test
jmp
and
push
and
in
mov
aad
dec
jle
out
pop
neg
loopne
lahf
push
dec
mov
subl
addr16
xor
in
repnz
cmp
mov
and
jecxz
mov
adc
call
cwtl
in
or
jl
lods
andb
pop
sar
inc
lea
pop
ja
iret
gs
icebp
sbb
mov
push
cmpsl
rcrb
ret
out
sbb
test
cmpl
and
and
into
xchg
call
xchg
int
add
jbe
push
je
les
mov
iret
int
inc
mov
aaa
add
mov
outsb
lds
andb
push
add
ret
mov
inc
pop
pushf
push
daa
jbe
sbb
dec
and
pusha
lcall
cmpsl
fst
ja
inc
inc
dec
mov
push
lret
and
cmpb
loope
push
rolb
push
push
cld
mov
mov
mov
stc
out
test
or
loopne
fsub
dec
lret
loopne
lods
divb
add
pusha
inc
cmp
or
push
aam
pop
fmull
pusha
std
pavgw
dec
or
adc
mov
lahf
stc
jae
lahf
mov
inc
push
inc
inc
mulb
sarb
in
lahf
shlb
push
adc
sbb
mov
jle
les
xor
push
cmp
addr16
mov
mov
lret
mov
mov
icebp
sub
add
popa
jb
fimuls
jmp
loopne
jbe
inc
mov
iret
add
loopne
outsl
repz
inc
clc
mov
cld
dec
roll
push
loop
popa
loope
xor
jno
jno
and
mov
test
pop
ljmp
out
push
popa
pop
pop
and
and
push
xchg
sti
lds
sbb
shlb
xor
mov
loopne
xchg
test
orb
popf
repnz
push
test
sbbb
es
add
dec
popa
jmp
out
repz
out
out
into
test
lods
in
lret
ds
push
add
pusha
cmp
loopne
stos
xchg
mov
insl
scas
das
out
pop
push
add
es
out
or
and
or
push
xchg
dec
and
jge
mov
pusha
fcompl
mov
mov
in
mov
mov
jl
fdivr
in
scas
rolb
jno
ret
popa
jo
jo
mov
pusha
shl
inc
xor
lds
int
ret
stos
pusha
add
jne
fsubr
dec
mov
xchg
push
shl
rorb
iret
outsb
mov
sub
and
shlb
xor
mov
shlb
push
fpatan
test
ljmp
outsl
das
pop
loopne
arpl
cmpsl
ud1
rorb
add
dec
cltd
lcall
cmp
pop
imul
ja
lret
push
and
mov
icebp
nop
leave
jl
pusha
mov
dec
mov
and
inc
and
test
inc
dec
inc
fwait
jge
jmp
sub
lds
sub
ss
pusha
and
jl
mov
shrl
and
push
fldt
shlb
mov
loopne
and
dec
push
pop
dec
pop
popa
add
loopne
and
cmp
inc
fwait
or
or
adc
call
and
mov
cmp
push
mov
rclb
push
xlat
push
push
rolb
and
or
pusha
fdivrl
bound
mov
and
push
mov
and
repnz
popf
or
add
mov
mov
lds
paddd
pop
cmp
cmp
loopne
xchg
sti
mov
adc
push
inc
pusha
xor
dec
add
and
or
cmp
insb
fcomi
pop
inc
sbb
sahf
sbb
cmp
cld
pop
fistps
add
inc
cmp
pop
test
add
andb
sub
adc
push
push
mull
add
pop
pop
adc
je
std
sbb
shl
dec
cld
sbb
idivb
mov
xchg
dec
iret
mov
int
out
jnp
mov
andb
inc
push
cld
test
inc
fsts
and
jbe
sbb
pop
xchg
icebp
and
fisubrl
scas
inc
mov
inc
mov
add
loopne
and
imul
loopne
jmp
imul
mov
add
add
andb
lcall
cwtl
pop
inc
and
xor
lahf
sti
and
inc
clc
dec
jns
std
mov
mov
pop
stos
rol
rolb
mov
mov
test
xor
push
pusha
loope
inc
outsb
and
decb
add
mov
les
andb
inc
dec
ret
add
inc
int
push
in
and
pusha
loopne
ds
lock
push
and
cmpb
std
mov
xor
inc
cli
mov
mov
push
add
add
xor
sahf
add
and
cli
outsl
mov
int3
pop
imul
jnp
mov
mov
andb
inc
jb
jg
sbb
test
add
sti
fists
cltd
mov
pusha
mov
inc
aas
inc
cmc
out
sub
inc
bound
andb
or
pop
jae
lret
sub
lret
cmpb
icebp
lods
inc
sub
cmc
push
add
test
mov
jo
insb
mov
and
imul
cs
pop
fisubs
mov
jle
fisubrl
jecxz
andb
and
mov
imul
jae
pusha
pusha
loopne
add
cli
int3
daa
cmp
sub
xorb
xor
cmp
lahf
add
sbbb
repz
repz
and
xchg
int
adc
mov
out
data16
and
add
and
cwtl
ljmp
stc
inc
inc
aam
mov
shll
mov
mov
inc
mov
shll
xlat
mov
loopne
inc
xchg
dec
ficoml
cmpsl
xor
pop
add
insl
lock
addb
jmp
lock
push
mov
cwtl
add
sbb
xchg
xor
andb
add
pop
xor
fs
pop
js
xchg
jp
cmp
pop
lret
mov
stos
out
jno
push
inc
fptan
mov
cmpsl
or
and
dec
xchg
sar
cmp
test
fcmovnbe
and
mov
addr16
outsl
std
jno
out
sbb
shll
rolb
pop
xchg
hlt
jmp
sub
andb
ja
push
inc
add
dec
data16
repnz
sub
and
and
stos
into
inc
or
je
lock
icebp
xchg
clc
mov
shrl
gs
and
adcb
lret
scas
add
fdiv
pop
in
das
dec
ror
shlb
mov
pop
fldpi
rcll
xor
shlb
outsb
aaa
shll
jge
mov
inc
out
xchg
mov
pop
xchg
int3
pop
rcll
adc
fcoml
mov
mov
mov
xchg
in
jne
ja
xchg
inc
push
loopne
je
mov
les
jg
cmc
leave
sti
mov
add
and
xor
enter
jmp
sbb
loopne
mov
in
dec
jmp
test
pusha
jnp
addb
test
cwtl
scas
loopne
pop
dec
push
add
mov
xchg
sub
les
sub
pusha
sbb
shl
jb
xchg
sbb
insl
ja
enter
sbb
push
mov
fisubrs
or
mov
mov
repz
adc
push
lret
das
inc
sub
add
dec
jae
push
jno
and
mov
mov
sbb
push
cmpl
pusha
jae
aam
sub
iret
shlb
jbe
and
addr16
push
pusha
add
negl
pop
dec
pop
jle
aam
sarl
jne
aaa
inc
dec
sub
mov
push
mov
push
popa
scas
addb
and
mov
add
addb
xorb
sub
push
pusha
shrb
mov
adc
and
aam
mov
mov
aad
and
inc
pop
pushf
ss
popf
xlat
dec
daa
pop
adc
dec
inc
into
xor
leave
loopne
push
test
and
xchg
dec
cmp
dec
lods
andb
out
shrl
loopne
jmp
mov
xchg
in
shlb
loopne
jae
mov
in
pusha
fsubrp
cltd
or
sbbb
loopne
or
cli
cmp
add
jg
push
pushf
out
and
loopne
rcll
jb
imul
popa
mov
adc
push
jae
adc
rolb
add
cli
imul
nop
arpl
stos
loopne
push
and
pusha
mov
xchg
fnstcw
fsubs
rolb
xlat
push
push
jns
mov
aas
scas
pusha
and
add
imul
mov
jae
imul
and
inc
orb
std
cmp
push
div
pop
mov
dec
adc
inc
cmpsb
rol
mov
push
cmp
mov
loopne
arpl
and
sbb
in
nop
aas
mov
jmp
inc
sbb
imul
pusha
pusha
pusha
pop
leave
stc
adc
mov
push
mov
sub
fimull
push
mov
clc
push
pusha
mov
xor
mov
popa
dec
popf
in
cmc
adc
cmpsl
cmp
inc
js
loope
std
in
xchg
mov
test
loopne
sbb
mov
loopne
or
xor
hlt
notl
jb
add
add
fldcw
jb,pt
mov
mov
stc
cmp
mov
jecxz
out
adc
mov
add
add
cmp
or
pusha
jb
jns
nop
push
lcall
mov
or
add
ja
adc
mov
loopne
sbb
sub
pop
arpl
stc
addb
push
andb
pushf
or
pusha
mov
add
push
fisubrl
ret
mov
xchg
cmpsb
loopne
sbb
mov
ja
mov
fldt
lcall
shrb
addb
shr
stc
adc
test
sub
rcr
pushf
stc
movsl
insb
out
mov
pop
mov
loopne
xchg
int3
mov
push
into
cmc
andb
add
sbb
loop
xor
jl
push
movsl
sbb
push
mov
or
dec
test
xchg
dec
mov
pushf
inc
mov
xorb
fists
mov
add
scas
pusha
and
adc
push
xor
inc
and
loope
pop
cmp
sub
add
mov
test
loopne
add
fimull
shl
mov
jge
pusha
add
cmp
and
dec
mov
add
lock
mov
and
and
add
mov
loopne
lret
test
fistpl
and
rcl
mov
mov
fldt
cmp
mov
out
mov
sbb
mov
xor
inc
mov
xchg
push
call
jnp
push
sarb
jg
mov
fistps
xchg
fmull
mov
inc
jg
mov
mov
push
push
pop
dec
sub
xor
out
xchg
and
adc
shlb
rolb
dec
loopne
cld
insl
pop
pop
inc
test
inc
xchg
cmpsb
inc
loopne
and
xor
addl
mov
repz
jnp
add
mov
popf
push
inc
rcrb
sub
add
lahf
xor
or
fdivrl
out
dec
call
inc
cld
stos
shll
shlb
mov
in
inc
xor
js
aaa
sub
je
loopne
push
cmpsb
shlb
lock
mov
repnz
ret
lods
or
jmp
jecxz
push
sbb
or
inc
push
loop
or
sbb
mov
pop
jo
inc
shlb
add
test
and
inc
and
loopne
sbb
push
mov
addb
add
jno
mov
dec
inc
in
dec
test
inc
add
jp
inc
push
jbe
mov
mov
cmp
arpl
mov
cmc
xchg
push
xchg
fstpt
int
mov
mov
shl
cli
call
daa
mov
int
sahf
dec
inc
xor
shll
xchg
pop
inc
in
rcrl
and
dec
test
inc
jle
imul
pop
xchg
stos
rolb
and
adcb
pop
int3
hlt
or
lret
xchg
jns
pop
adc
mov
and
leave
outsb
ret
and
loopne
pusha
adc
push
lret
loop
add
ss
cwtl
mov
mov
or
cld
out
dec
fldenv
mov
stos
scas
loopne
aam
adc
mov
popa
shlb
lds
scas
inc
mov
sub
inc
inc
lea
pop
and
call
xchg
movl
xchg
xchg
adc
dec
pop
nop
out
adc
fdivp
in
jnp
and
mov
jns
lret
mov
inc
mov
xor
loopne
fs
inc
mov
sti
cmp
pop
popa
sub
bound
jp
pushf
adc
movsl
out
mov
mov
cmp
ret
mov
in
cld
test
pusha
cs
pusha
loopne
xchg
fdivrs
in
daa
inc
xor
sahf
push
xchg
and
aad
test
ret
ficoml
push
and
addr16
push
andb
fstps
push
inc
cmp
cld
jmp
stc
mov
add
test
mov
aas
xchg
loopne
in
jl
gs
and
mov
inc
dec
pop
add
aaa
inc
push
mov
pusha
jmp
inc
jl
mov
xor
mov
rcl
mov
addb
cmp
pop
sbb
mov
dec
push
lea
and
sbb
rolb
loopne
add
repz
adc
push
clc
jnp
pop
cmp
adc
ror
xchg
rcrb
jmp
cli
pushw
testl
dec
mov
pop
jbe
dec
leave
jle
xor
insl
sti
and
rorl
or
jae
inc
inc
jl
sbb
test
loopne
cmp
add
mov
add
out
mov
mov
xor
and
cmp
push
add
jmp
add
in
sahf
add
add
stos
and
dec
imul
dec
cmp
rolb
sarb
add
xchg
mov
and
inc
or
stos
idivl
and
mov
js
inc
add
jae
xorl
loopne
imul
addb
popf
dec
sti
xchg
sub
lcall
add
xor
add
icebp
daa
dec
pop
mov
jae
bound
push
xchg
dec
shlb
sub
rcrb
fbld
js
xchg
inc
pusha
fsubrs
push
sti
aaa
inc
in
cmc
aam
mov
mov
sub
mov
push
andb
and
loopne
aas
or
rcr
or
inc
inc
fwait
add
mov
pop
movsl
testb
cwtl
cmp
adc
adcb
cmpsl
shlb
jnp
inc
mov
lock
mov
mov
mov
aad
pop
mov
cmpsb
and
fwait
mov
and
or
loop
addr16
inc
hlt
sub
sarb
cmp
hlt
adc
sub
add
add
add
out
and
sahf
cmp
nop
add
cmp
adc
sbb
cmp
sarb
add
and
rcl
movsb
inc
add
inc
insb
aad
mov
jmp
nop
push
or
sub
out
mov
rcl
cmp
std
out
xor
orb
mov
mov
ss
fsub
stos
decb
shl
fcompl
scas
pop
cmpsl
idivb
inc
andb
inc
inc
mov
cmc
outsl
pushf
pop
gs
push
rolb
and
mov
mov
das
sbb
mov
xor
fnstenv
lcall
inc
stos
and
push
pop
dec
shll
and
and
cli
and
loopne
cmc
call
je
idiv
push
xor
and
dec
mov
mov
lahf
mov
mov
push
rolb
cmp
adc
enter
xchg
cmpsb
rol
aaa
loopne
cmpw
inc
movsl
or
xorb
andb
ror
xor
pusha
mov
cltd
lcall
cmp
lds
add
xlat
out
loopne
dec
je
mov
mov
rcll
ss
xchg
add
dec
je
cmp
and
mov
out
sbb
loopne
mov
cmpsb
loopne
dec
loopne
pushf
cmp
add
add
dec
gs
pusha
mov
push
cwtl
xor
lcall
sbb
mov
mov
loopne
mov
mov
fnsave
inc
sarb
jle
pusha
inc
and
and
pop
andl
test
add
adc
sub
adc
fsubrp
addb
add
mov
and
repz
sub
mov
mov
repnz
mov
add
sahf
int3
mov
es
adc
lea
push
sub
mov
shlb
in
out
add
xchg
leave
repnz
xchg
sarl
std
mov
test
lret
js
mov
mov
xchg
je
adc
mov
rcll
sarb
popf
xchg
mov
ret
adc
push
pop
pop
xchg
into
es
rcrb
aas
aad
jo
and
test
adc
imul
addb
pmulhw
push
mov
fisttpl
and
jg
pop
mov
out
mov
loopne
daa
in
cld
cli
pop
sbb
scas
popf
pop
pop
inc
outsb
lock
cwtl
and
andb
mov
cmp
dec
xchg
jbe
xor
sti
lret
jle
dec
das
cwtl
lea
out
ja
icebp
or
inc
add
sar
jo
rol
fists
jno
shll
icebp
inc
scas
xchg
data16
hlt
cltd
push
pusha
add
fldlg2
mov
sbb
mov
cli
add
rolb
sbb
std
in
fcmovnu
mov
and
in
js
ret
inc
mov
aad
shrb
outsl
jbe
addr16
mov
add
inc
pop
ret
mov
enter
mov
shlb
loopne
leave
push
das
cmp
wbinvd
mov
andb
sbb
jns
iret
in
aas
imul
ljmp
xchg
pop
rolb
loopne
pusha
inc
jle
add
mov
and
leave
ja
pop
mov
mov
fisttpl
loopne
ljmp
outsb
sysexit
stos
jns
mov
push
daa
outsb
mov
fdivrp
xchg
and
and
mov
pop
test
adcb
mov
pusha
add
mov
loopne
sbb
push
cwtl
loopne
inc
and
add
pusha
and
lret
fcompl
lea
addb
iret
cmp
shlb
and
jmp
dec
aaa
rcrl
inc
mov
push
mov
mov
xchg
repz
loopne
fnstsw
add
push
inc
dec
imul
dec
pushf
std
negl
nop
fldt
pushf
repnz
pusha
loop
mov
xchg
ss
mov
out
pushf
cmpsb
and
or
aaa
cmp
or
std
jns
dec
stos
and
adc
aaa
mov
mov
and
jle
sub
inc
loopne
shlb
rclb
out
jbe
fs
movsl
pop
jb
rolb
loopne
ds
xchg
nop
sbb
jmp
push
xchg
and
pusha
xchg
sub
loopne
xor
out
lea
aas
push
mov
inc
shr
lahf
lret
testl
not
sub
and
push
and
inc
mov
mov
sub
imul
jl
hlt
fnstsw
and
and
mov
xchg
mov
xor
jmp
das
push
shll
sahf
inc
sub
pusha
ret
and
and
aaa
push
out
jbe
shlb
shlb
sub
pushf
or
cmpsl
and
and
xchg
cmpsb
mov
aam
mov
push
shl
les
pop
dec
cltd
imul
orb
pushf
lahf
mov
cmp
pop
cmp
add
adc
inc
inc
jbe
insl
xchg
adc
push
loopne
jno
pop
sub
fdivrl
push
popf
pusha
fndisi(8087
lock
add
call
lods
ret
mov
test
pusha
adc
loopne
cld
pop
cmp
cmp
test
andl
cmp
inc
xor
shlb
lret
std
imul
mov
in
mov
add
xor
mov
out
loop
push
loopne
addb
sbb
add
lods
xor
stos
rolb
pop
or
rcll
cmp
pusha
inc
jb
cmc
or
and
jle
mov
scas
shlb
test
add
cmp
and
push
xchg
xorl
mov
inc
add
sbb
inc
int3
das
cmp
add
shrl
xchg
sub
pusha
jge
cmp
cmpsb
and
mov
pop
icebp
lea
push
sub
mov
fs
fidivrs
mov
ss
and
out
sub
addb
fsubr
mov
add
xchg
jo
scas
and
mov
inc
mov
inc
sub
andb
lea
push
adc
je
js
and
push
sarb
inc
scas
and
scas
fildll
rolb
lea
mov
je
jmp
pop
jmp
cltd
xor
out
push
imul
sub
icebp
xchg
dec
inc
js
pusha
daa
lods
rolb
jmp
int
mov
pusha
mov
jmp
adc
pusha
rclb
fsubrs
test
add
add
and
pop
lock
addr16
mov
in
mov
push
and
rcl
das
in
push
pusha
loopne
inc
xchg
sbb
jecxz
mov
adc
loopne
lret
pop
mov
add
mov
repz
mov
push
sti
inc
imul
scas
ficomps
xor
fists
jno
in
lea
cld
cmpsl
int3
pop
dec
pop
or
add
stos
addb
ljmp
loopne
not
call
sbb
enter
lret
sti
leave
dec
les
fiaddl
loopne
addl
or
push
cli
mov
adc
add
int
sub
pusha
cltd
or
pop
imulb
shlb
and
jmp
cmc
inc
cmpsb
inc
subb
adc
mov
pusha
mov
add
jae
adc
jb
cwtl
cmp
aam
sbb
int
dec
add
and
inc
or
pusha
adc
add
and
push
scas
sbb
call
pop
imul
and
adc
or
and
out
adc
xor
pop
cwtl
sub
pop
negl
ds
hlt
mov
or
push
jg
xchg
dec
iret
aam
push
mov
xorb
dec
hlt
or
and
pusha
xlat
adc
stos
loopne
aas
adc
frstor
xchg
mov
cmp
sarb
or
sti
xor
sbb
pushf
fists
shrl
sahf
mov
adc
mov
mov
and
add
add
adc
out
ficoms
mov
dec
add
shlb
fsubl
clc
add
inc
pop
push
inc
add
mov
vpackuswb
inc
inc
push
and
sarb
call
loopne
loop
cmp
sbb
adc
cld
call
mov
and
aaa
out
mov
cs
and
mov
popf
test
sbb
pusha
add
movsb
inc
inc
sub
cmp
lcall
addb
lcall
or
notl
or
mov
loopne
mov
dec
ret
jno
jecxz
and
and
mov
push
adc
pusha
inc
iret
out
loop
jg
pop
sub
ljmp
hlt
inc
mov
and
inc
sub
ficoms
and
repnz
mov
mov
add
add
jbe
mov
jmp
stos
loopne
stos
pusha
cmpb
pop
sti
xor
aas
rcrb
adc
mov
cli
out
jle
mulb
and
test
adc
mov
stos
ret
mov
jne
mov
pop
add
loopne
jecxz
shl
rolb
pusha
loopne
lods
and
xchg
data16
sub
repnz
mov
inc
les
mov
and
push
pusha
pusha
popa
and
cmp
jmp
mov
cmp
fiadds
pop
lea
jg
push
aad
xor
addb
inc
mov
add
adc
out
testl
incb
out
lret
inc
scas
add
push
and
gs
andb
cmpb
icebp
push
and
cmpsb
add
test
push
sbb
sub
add
aaa
or
add
pusha
mov
pusha
add
je
xchg
pop
out
pop
jno
adc
jmp
pusha
imul
addr16
add
mov
shl
mov
dec
jl
lods
imul
xor
shlb
sub
mov
inc
fildl
stos
addb
push
mov
sarb
loopne
mov
mov
jl
inc
rcl
inc
cmp
rclb
inc
jbe
ficomps
push
pop
jae
mov
enter
insb
divb
inc
jecxz
imul
and
rcrb
shl
andl
leave
and
push
shlb
ds
xor
push
aad
push
mov
addb
cltd
mov
leave
cmp
mov
loopne
dec
aas
and
add
cltd
mov
push
push
sub
rcl
adc
add
repz
pop
sahf
pop
mov
lods
insb
add
jge
add
shl
jns
and
jmp
ja
ret
adc
in
sti
aam
ret
andb
inc
lret
cwtl
cmp
adc
pusha
inc
ret
shll
popa
hlt
sbb
and
xchg
push
stos
mov
stc
fiadds
inc
loopne
push
pushf
daa
ja
imul
pop
xchg
leave
out
sar
in
jmp
mov
add
mov
sbb
ret
push
sbb
decl
cmpsb
add
addb
loope
leave
mov
aad
pop
or
sarb
rcl
je
inc
adcb
mov
add
push
mov
cmp
push
xchg
ret
adc
std
sbb
and
cmp
inc
imul
pop
jns
and
and
in
mov
testl
or
cmp
shll
scas
mov
mov
sti
aas
push
lret
sbb
adc
jae
add
xchg
leave
test
jae
shlb
fwait
inc
bound
or
pusha
popf
psubq
rcll
rcll
mov
mov
shrb
cmpsl
push
stos
shlb
mov
mov
sbb
orl
andb
repnz
repnz
push
jl
andb
pusha
neg
scas
pop
mov
push
and
addb
popa
das
sbb
lcall
cld
out
int3
adc
jb
dec
test
inc
loopne
and
pop
xlat
push
rcrl
mov
dec
les
test
mov
cld
clc
stos
inc
rclb
icebp
in
fsubrs
jns
call
pusha
loopne
pop
clc
fs
ljmp
push
pusha
orb
jno
lret
icebp
jmp
lahf
sti
pusha
insb
mov
fdiv
int3
xchg
mov
sub
sub
repnz
popf
cmc
xor
std
pmuludq
scas
pusha
loopne
adc
and
cmpsb
add
inc
pop
scas
add
xchg
icebp
push
jbe
ficomps
cmp
daa
pop
inc
cmp
inc
shl
sbb
and
test
add
enter
add
cld
dec
imul
inc
rclb
pop
out
fildl
inc
call
xor
dec
sub
mov
and
cmpsl
xor
adcl
inc
stos
and
shrb
adc
mov
and
jno
add
loopne
stc
fs
loop
loop
jl
push
add
jl
cmc
loop
test
pusha
dec
rorl
pusha
gs
mov
push
jns
dec
out
mov
pop
adc
aaa
mull
test
pusha
pop
mov
sub
rclb
leave
cmp
jecxz
adc
sbb
test
cmp
mov
repnz
adc
insl
push
xor
pop
imul
shl
add
add
lods
jmp
adc
gs
dec
fwait
repnz
sub
xchg
pop
in
xchg
adc
fcomps
sub
loopne
pusha
mov
inc
mov
imul
pop
xorl
mov
das
arpl
xor
mov
imul
xchg
test
xlat
iret
cli
stos
adc
or
rclb
inc
mov
dec
push
fisttps
jge
rcll
lods
mov
jno
insl
imul
mov
add
lock
popf
and
sar
loope
rorb
jp
loope
sarl
add
pop
addr16
adc
jae
dec
clc
mov
pop
lds
loopne
int
mov
pop
dec
loopne
sub
out
add
test
and
sbb
inc
xlat
sub
loopne
cmp
lea
inc
push
fldt
inc
push
in
push
rorl
mov
add
pop
pop
push
pusha
rcrb
sbb
and
and
add
shlb
inc
and
inc
push
gs
add
inc
and
outsl
repnz
dec
sub
inc
sbb
or
inc
cvttps2pi
rorb
fadds
and
mov
lret
shl
aad
je
rorb
mov
and
or
jmp
dec
mov
pusha
loopne
xorl
rolb
rolb
fisttpl
add
jae
daa
and
mov
dec
sub
inc
inc
rolb
roll
and
or
test
outsb
and
and
mov
jae
addb
mov
sub
inc
jnp
adc
push
add
loopne
leave
mov
xor
andb
pop
mov
add
loopne
int3
mov
mov
add
add
loopne
mov
ficompl
inc
or
push
in
loopne
push
xor
loop
in
sbb
aas
in
push
stc
xchg
daa
pop
ljmp
mov
cmp
daa
fistps
push
adc
and
loopne
dec
scas
loopne
outsl
pop
mov
and
push
sahf
dec
pop
andb
imul
imul
outsb
addr16
and
add
and
sti
das
pop
loope
loope
mov
aaa
or
jne
jl
gs
pop
pop
inc
mov
idivl
out
test
mov
cmp
lds
inc
xchg
adcl
xor
jns
cmp
js
inc
jmp
pusha
inc
add
and
push
push
jne
jnp
enter
cwtl
jmp
jg
pop
shlb
gs
icebp
nop
jne
sbb
push
into
dec
or
inc
inc
test
xchg
inc
cmp
jno
xor
test
pusha
mov
cmp
fbld
scas
jb
addr16
pop
mov
js
adc
addb
inc
sbbl
and
mov
sbb
mov
or
jns
andb
stos
add
sti
mov
mov
lahf
xchg
cmp
arpl
or
xor
mov
and
push
mov
xor
shl
or
stos
pusha
inc
xchg
xlat
sbb
fimuls
lods
inc
push
sbb
in
xchg
cmp
push
dec
repnz
rcrl
xchg
push
add
mov
outsb
mov
fs
andb
or
andb
adc
mov
push
mov
orb
or
inc
and
and
sbb
add
out
sub
adcb
cmp
sbb
push
pusha
xchg
iret
loop
cli
cmp
andb
xchg
out
in
xchg
loope
adc
mov
cmpl
loop
and
scas
pusha
and
add
xchg
and
pusha
sbb
add
jge
mov
xchg
dec
test
mov
sbb
and
subb
xlat
inc
xor
aas
cmp
adc
iret
fmuls
or
fldl
jp
xchg
inc
or
pusha
adc
inc
inc
dec
jp
inc
iret
dec
andb
repz
aad
inc
inc
pop
jl
sub
rcrb
dec
dec
dec
xchg
add
loopne
imul
mov
mov
xor
and
rolb
push
or
loopne
loopne
nop
jbe
mov
and
jmp
and
cmp
push
loopne
sbb
lods
rol
enter
pop
inc
outsb
pop
iret
jg
shrl
or
loopne
aas
sbb
loopne
and
sbb
add
pusha
fidivl
sbb
push
mov
push
lret
stos
push
lret
inc
addb
cld
int
clc
xchg
dec
inc
outsb
notb
out
aad
adc
cmp
test
sub
mov
into
insl
add
mov
jo
sbb
mov
push
rolb
addl
sub
repnz
push
push
std
sbb
add
cld
sub
and
ret
and
mov
mov
divl
test
mov
xor
mov
jno
push
mov
push
call
repnz
arpl
jo
pop
lcall
cmp
pop
lcall
hlt
cmp
les
push
add
int
js
shr
sub
rol
mov
loopne
fs
pop
scas
ret
jbe
mov
add
push
addb
addr16
jbe
pusha
inc
ficomps
out
push
stc
fildl
mov
adc
xchg
sbb
pusha
int
and
adc
pop
add
inc
in
jb
add
xor
out
faddl
add
add
