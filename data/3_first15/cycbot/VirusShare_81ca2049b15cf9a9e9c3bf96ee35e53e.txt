sbb
dec
dec
inc
inc
lock
pushf
xor
lret
mov
inc
popf
ja
adc
mov
add
loopne
mov
xchg
mov
mov
loop
mov
inc
and
mov
xor
insl
lret
mov
leave
dec
hlt
mov
mov
pop
xor
mov
cltd
cmc
div
add
insl
mov
int
je
push
in
movsb
jnp
mov
add
idivl
add
icebp
jne
ja
int3
add
mov
or
and
mov
mov
add
lcall
clc
or
insb
subl
push
inc
add
add
into
fisttps
mov
xor
adc
lret
mov
mov
rolb
push
aad
cmp
lock
mov
cmp
xor
ds
add
inc
pop
push
adc
shr
push
fs
lret
orl
lock
sub
push
outsw
add
cmp
inc
add
imul
ret
orl
add
xor
sti
and
mov
adc
mov
arpl
hlt
mov
mov
lds
add
fmul
xchg
add
in
aad
add
mov
mov
aam
mov
jge
outsb
mov
dec
xchg
jnp
add
lock
in
pop
stc
mov
pop
fdivl
mov
ljmp
imul
ret
inc
mov
mov
in
rcll
inc
fdivl
mov
notb
test
lret
mov
sub
cmp
je
and
outsl
inc
int3
addb
jb
mov
mov
rolb
pop
add
mov
pop
lock
cmp
or
mov
add
xlat
xor
mov
int3
xor
mov
sti
std
xchg
pop
xchg
cmp
mov
mov
les
push
push
add
mov
mov
int
iret
push
notl
popa
mov
dec
mov
nop
add
xor
push
shll
inc
mov
mov
movq
dec
mov
rolb
sub
or
ss
rolb
mov
sub
jp
repz
mov
mov
es
rolb
mov
add
xchg
decl
xor
pop
addb
pushf
adc
mov
pop
dec
jg
movsb
adc
mov
xchg
rolb
jo
mov
fwait
insl
dec
jp
pusha
add
cmp
aas
adc
mov
aad
or
fcoms
mov
pop
mov
adc
add
mov
add
add
mov
adc
push
add
rolb
adc
mov
addb
mov
mov
daa
mov
movsl
pop
hlt
insb
gs
add
icebp
out
jno
jmp
add
aam
jle
add
test
add
adc
add
mov
add
add
adc
mov
shr
cmpsb
outsb
decl
jl
dec
stos
add
mov
adc
mov
lock
dec
scas
imul
hlt
pop
add
xor
dec
iret
ret
ljmp
adc
add
aas
out
fsubs
add
insl
pop
or
and
or
add
add
add
lret
inc
sbb
mov
mov
add
xchg
fimull
push
filds
aaa
mov
push
cmp
sub
adc
dec
cmp
mov
in
aaa
or
mov
xchg
stc
and
mov
pop
arpl
pop
pop
rolb
mov
mov
lods
bswap
cmp
add
fwait
aad
push
add
mov
pop
jp
sbb
es
sub
scas
inc
test
push
xchg
data16
fstpl
dec
sub
icebp
test
insb
fnop
add
push
add
add
out
sub
mov
jl
repz
clc
or
gs
jle
scas
fldenv
mov
adc
lret
mov
aam
add
dec
lock
jne
subl
mov
hlt
into
mov
fisttps
je
push
inc
andl
add
and
mov
dec
stc
xchg
jle
adc
add
jle
mov
loop
mov
mov
aas
fwait
adc
mov
mov
xlat
popf
sbb
or
adc
inc
dec
sbb
lret
aas
jmp
xchg
cs
iret
and
cmp
in
sbb
sahf
decb
add
or
add
test
fucomp
icebp
in
cmp
out
cs
add
fistps
leave
test
sarl
sti
in
divl
pop
add
scas
cs
mov
mov
mov
mov
inc
xchg
add
mov
addr16
das
mov
and
jno
in
dec
cld
push
and
mov
and
mov
enter
lahf
dec
rolb
mov
addr16
aas
push
fbstp
dec
inc
add
adc
sub
jle
and
pop
adc
bound
mov
test
cmp
std
cld
lds
ss
mov
int3
fdivrl
sbb
adc
add
push
or
push
add
jo
mov
mov
in
mov
mov
loope
ss
je
pop
scas
out
fdiv
test
sub
fcomip
sahf
leave
sbb
ds
stos
movsb
cltd
sub
and
rcrl
or
in
loop
mov
dec
jno
xchg
or
pusha
add
adc
add
mov
mov
sar
dec
or
add
mov
mov
mov
testb
or
mov
rolb
inc
mov
mov
xlat
cmp
std
inc
add
movsl
mov
jecxz
fdivrs
test
add
add
mov
mov
mov
jp
xor
mov
xchg
mov
ljmp
pusha
add
stc
xor
mov
inc
add
inc
add
add
ret
and
mov
cmpsl
pop
das
push
cmp
gs
addb
mov
xchg
or
mov
icebp
jle
gs
addb
outsl
and
inc
add
mov
jne
dec
or
lcall
jbe
cmp
or
loope
hlt
cwtl
and
mov
lods
outsb
xor
fwait
pop
adc
cmpsb
push
in
imul
xor
mov
jecxz
jns
add
add
cmp
in
sub
push
push
push
push
push
push
cld
call
add
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
cmc
popa
mov
add
fsubrl
stos
push
add
fdivrl
fildll
mov
push
mov
bound
mov
push
xor
add
xchg
es
adc
mov
push
or
loop
mov
jg
add
fdivs
xchg
add
nop
add
or
stos
jmp
push
adc
inc
dec
push
pusha
add
decb
loop
mov
test
xor
mov
dec
add
mov
int3
xchg
sub
in
inc
add
enter
inc
sbb
add
add
or
mov
movsb
xor
jb
mov
lret
xchg
std
add
mov
dec
sbb
mov
add
jbe
ret
mov
add
add
mov
inc
jns
fnstsw
jb
mov
add
add
adc
aas
dec
loopne
mov
add
mov
add
mov
mov
scas
dec
pop
cltd
loop
mov
cwtl
cwtl
add
mov
fidivrs
and
mov
dec
add
mov
and
mov
lods
sub
out
pusha
add
sahf
cmp
cwtl
ss
lcall
mov
sub
jae
xor
mov
adc
add
repz
lock
mov
test
add
bound
mov
ss
push
jge
aad
mov
cld
fadds
inc
adc
add
aad
imul
jmp
push
les
aam
iret
cltd
inc
add
mov
bound
mov
mov
jb
mov
add
sbb
jo
mov
mov
mov
mov
test
sub
out
sub
add
pop
mov
adc
mov
fdivs
sub
pop
pop
stos
test
and
mov
add
push
push
jge
ljmp
mov
or
add
lock
jle
mov
add
mov
add
mov
cld
sub
stos
xchg
out
sub
add
out
add
mov
add
call
jecxz
add
das
inc
adc
mov
and
or
dec
cmovp
mov
mov
pop
inc
inc
pop
mull
mov
mov
add
mov
fs
pop
mov
mov
jnp
add
mov
dec
mov
int3
jmp
adc
dec
shrl
cmp
das
lret
mov
mov
data16
mov
add
mov
in
mov
add
jo
mov
xchg
lret
ret
push
jne
pop
pop
inc
mov
lds
lret
cmc
dec
imul
mov
cmp
mov
mov
xor
mov
mov
mov
imul
mov
mov
mov
rcrl
dec
dec
cs
push
xchg
addb
sbb
pop
pop
ja
cwtl
cmpsb
scas
adc
mov
imulb
mov
imul
push
push
std
sbb
add
mov
mov
dec
test
push
mov
or
mov
xchg
or
add
push
in
mov
sub
scas
nop
add
mov
cwtl
push
lods
test
lahf
jmp
jbe
xchg
outsl
sbb
ss
fistpl
adc
mov
add
rolb
mov
ret
sbb
ficomps
addb
jns
stos
call
and
mov
mov
ret
inc
scas
in
xchg
mov
pop
add
ret
bound
mov
outsb
push
rolb
mov
add
lods
rcrl
jb
mov
clc
sbb
add
add
lret
out
sub
imul
jb
mov
xlat
js
add
arpl
add
lahf
std
imul
pop
test
inc
cmp
add
rcrl
jmp
in
bound
mov
popl
cmpsl
loope
loope
add
fisubl
mov
mov
xchg
in
and
mov
xor
ss
repnz
bound
mov
sbb
cmp
lahf
daa
rolb
mov
nop
add
negb
in
push
jecxz
scas
je
add
push
pop
test
cmp
in
setnp
add
sbb
and
sbb
sar
fdivrp
and
je
pop
gs
mov
add
add
add
es
dec
mov
mov
lahf
rolb
mov
sahf
popa
or
lds
add
aam
cmp
and
xor
mov
mov
adc
mov
mov
je
mov
push
add
mov
xlat
insb
stc
jns
pop
pop
je
lods
fdivl
inc
pop
adc
sub
stos
xchg
add
jnp
push
repnz
add
and
add
mov
jb
mov
test
adc
add
jb
mov
add
addr16
popa
xchg
aas
sbb
xor
pop
fadd
add
and
add
fisubs
dec
dec
xchg
rcll
adc
mov
aam
loopne
mov
add
les
cmpsb
sbb
add
xor
mov
scas
sub
add
mov
std
lods
loope
push
or
mov
lods
jno
sub
add
push
out
jne
rolb
mov
mov
lds
loop
mov
fcoml
test
pop
arpl
std
adc
cwtl
sbb
decb
mov
rolb
pop
rolb
scas
in
add
inc
fstp
xlat
std
cs
xchg
pop
jl
fdivr
movsb
pushf
hlt
out
sub
or
and
mov
xor
or
int
jbe
or
sbb
stos
decl
inc
add
mov
mov
dec
cmpsb
pop
mov
sbb
loop
mov
add
mov
mov
lods
push
rcll
jns
out
loop
mov
adc
sub
push
or
adc
mov
popa
addb
inc
add
xor
inc
fldenv
outsb
cmpsb
ret
cmp
mov
negl
addb
movsl
stos
enter
pop
xor
mov
in
inc
xchg
jle
push
lcall
add
mov
xchg
sbb
xor
sub
mov
mov
add
in
jnp
in
imul
mov
mov
clc
jl
add
jge
cmp
sub
add
mov
pusha
add
mov
nop
add
mov
mov
iret
mov
xor
mov
adc
mov
cmp
lcall
ja
add
je
lahf
test
add
pop
xchg
push
inc
and
jns
int
add
add
add
fisttpl
stos
jge
add
push
mov
add
xlat
xor
test
rolb
mov
add
arpl
dec
test
mov
movsl
ret
rolb
xchg
mov
mov
mov
loope
add
add
popa
mov
std
sub
rolb
mov
mov
rcrw
xor
test
xchg
arpl
xchg
mov
lods
std
push
icebp
insl
xchg
and
add
mov
and
bound
mov
dec
sbb
sub
pop
push
pop
add
test
xor
aas
pop
mov
push
and
mov
add
add
in
push
fcomi
mov
add
push
icebp
movsb
into
mov
sahf
out
je
scas
mov
add
repnz
cmp
add
js
mov
add
lcall
jno
pop
in
iret
xor
in
out
mov
mov
test
fisubrl
jbe
movsb
lea
sbb
add
aas
inc
scas
pop
sub
addb
push
dec
call
add
mov
sub
xlat
lock
adc
into
xchg
ljmp
imul
fildl
mov
add
mov
xor
mov
sub
addb
mov
jecxz
pop
test
and
sbb
rolb
mov
and
mov
mov
adc
clc
rorl
add
cmp
push
mov
add
mov
mov
add
in
sub
mov
add
mov
mov
pusha
add
bound
mov
outsb
pcmpgtw
mov
mov
xchg
xchg
mov
add
jmp
fisubrs
sbb
scas
mov
add
dec
cmp
dec
daa
add
mov
or
jge
jl
stc
xor
pop
in
push
mov
insb
addl
mov
add
in
push
cmp
mov
xlat
jecxz
movsb
dec
mov
add
mov
in
stc
icebp
mov
divl
add
inc
add
lods
mov
add
add
clc
mov
and
mov
jne
sbbl
mov
mov
mov
into
in
gs
mov
xchg
adc
mov
xchg
pop
mov
lds
push
mov
int
sub
or
xor
mov
rolb
mov
insb
sub
mov
test
adc
cmpsl
leave
xchg
add
dec
mov
adc
nopl
add
fsubrl
jl
aam
fimuls
xchg
mov
push
add
negl
pop
xchg
fwait
sub
jne
inc
add
cmp
hlt
adc
cli
das
ds
sub
pop
loope
lcallw
das
mov
sub
sar
add
outsl
pusha
add
mov
in
int
xchg
push
adc
decb
lea
cmp
sbb
loop
mov
in
shr
out
jp
testb
icebp
daa
call
cmp
inc
add
pop
leave
mov
sbb
adc
rolb
mov
out
inc
pop
and
mov
and
test
add
add
out
sub
in
jg
outsl
jbe
arpl
sbbl
fildl
add
mov
add
sbb
add
rolb
mov
sbb
cld
out
add
jge
enter
inc
pop
pop
out
adc
jg
fcmovnbe
add
mov
mov
mov
sub
sub
je
popa
or
daa
push
mov
mov
and
dec
adc
mov
sbb
pop
sbb
add
sbb
add
icebp
js
mov
mov
pop
sub
and
mov
sbb
daa
aas
popa
ja
popf
sub
sbb
mov
add
cmp
mov
sti
and
and
add
cmp
add
sbb
ljmp
add
fsubp
push
into
es
scas
les
add
mov
lcall
test
jecxz
add
mov
dec
xchg
addb
mov
cmpsb
and
pop
jg
xchg
xor
mov
and
mov
and
mov
xchg
dec
adc
mov
pushf
lods
and
pusha
add
pop
aad
inc
es
insl
add
mov
nop
add
jne
xchg
cmc
stc
cwtl
rolb
mov
add
mov
add
mov
xchg
enter
test
mov
and
mov
fdivrs
movsb
pop
push
mov
mov
loope
mov
cmc
imul
or
lret
movsb
lea
mov
lds
mov
imul
jns
lds
adc
mov
mov
add
jae
in
in
icebp
mov
rolb
mov
flds
sbb
int
cmp
scas
int3
sub
add
adc
les
jp
push
hlt
std
xchg
and
add
add
add
add
xchg
add
insl
sbb
lahf
cmp
ret
xchg
or
push
xchg
jb
mov
rolb
mov
ja
out
jecxz
sti
mov
sti
cli
jle
lret
add
dec
pop
jg
cmp
insb
mov
mov
or
or
add
add
xor
mov
dec
ficomps
add
aaa
pop
inc
add
sbb
mov
dec
cmc
or
add
mov
add
movhps
mov
inc
pop
push
cmp
pop
dec
fisubrs
lock
leave
movsb
bound
mov
out
mov
jne
cmp
jl
xchg
mov
cmp
orl
sbb
sub
sub
fstpl
jp
lds
les
inc
adc
mov
xor
mov
lretw
out
jno
andl
pop
push
add
add
xchg
push
xchg
gs
cwtl
cmp
arpl
orl
add
add
add
insb
test
fisubrl
js
insl
cld
mov
inc
cmp
lock
ficoml
xchg
movsl
push
out
or
in
scas
mov
add
mov
xor
mov
pop
mov
adc
mov
addb
frstor
mov
cmp
enter
fdivrs
movsl
mov
xchg
xchg
push
cld
dec
cmc
jne
clc
fadds
test
mov
sti
addr16
push
mov
mov
mov
rolb
mov
fisubs
add
mov
test
pop
push
sub
mov
jnp
jno
xchg
mov
test
jnp
outsl
xor
loop
mov
xlat
jno
repz
add
add
mov
add
add
sbb
inc
cli
inc
lret
scas
shll
add
subl
repz
sub
icebp
fxch
sbb
adc
mov
daa
ljmp
xor
repnz
dec
out
insl
push
xor
mov
mov
fsubrp
mov
inc
dec
enter
out
mov
sub
repz
mov
stos
or
addb
fldl
mov
mov
and
mulb
test
xor
add
inc
add
jg
mov
add
and
int
add
outsl
or
adc
mov
imul
sahf
lods
adc
inc
add
add
or
leave
pop
aad
stos
pop
dec
outsl
pop
jg
lock
mov
adc
sbb
out
icebp
orl
or
add
or
das
jmp
fimuls
std
lods
mov
inc
mov
scas
xor
cmp
call
cmp
call
bound
mov
loope
mov
mov
inc
xchg
or
xchg
jl
xchg
cmp
sbb
and
mov
pop
sbb
mov
mov
clc
icebp
enter
cli
shl
add
dec
xor
add
fwait
mov
out
scas
mov
mov
pop
dec
fs
lods
jmp
mov
jp
testb
dec
mov
push
fnstsw
lods
out
fsubrl
cmp
mov
xor
inc
adc
nop
add
dec
jne
mov
push
imul
mov
addl
pop
jmp
outsl
cmp
jb
mov
je
pop
aad
push
clc
int
push
pop
insl
mov
call
mov
xor
mov
push
mov
sbbl
in
add
push
inc
into
hlt
lods
pop
cmp
imul
jp
adc
pop
or
aad
mov
mov
add
cmp
dec
push
xor
lret
inc
iret
loopne
mov
xchg
rolb
loope
adc
lcall
rcll
add
pop
out
imul
mov
cmp
jmp
add
adc
out
push
aam
imul
dec
repnz
add
adc
push
jge
mov
in
stc
js
mov
js
std
lds
adc
mov
add
lret
je
daa
ds
add
data16
mov
add
mov
pusha
add
mov
add
mov
ss
in
fcmovnb
nop
add
push
xor
sub
add
mov
ja
add
pop
add
das
mov
int
dec
inc
int
hlt
add
add
pusha
add
and
inc
arpl
cmp
je
rolb
mov
and
add
jecxz
rolb
mov
outsb
jp
add
add
jb
mov
mov
mov
jge
jl
add
adc
mov
xchg
cmpsl
push
outsb
lret
test
arpl
mov
lock
mov
cmp
dec
enter
push
rcl
dec
divl
and
jbe
xchg
popf
xor
mov
mov
cli
or
mov
sbb
xchg
adc
cmp
adc
daa
lahf
rorl
ljmp
jns
or
add
loop
mov
dec
popf
ljmp
inc
clc
fistpl
mov
rolb
mov
popl
pop
jo
mov
cmp
ret
cmp
dec
pop
stc
jecxz
imul
dec
fmull
add
addb
sub
adc
mov
add
ds
xchg
inc
aas
in
loop
mov
addb
mov
test
and
flds
add
and
push
add
ret
nop
add
adc
imul
mov
mov
out
loopne
mov
shll
and
mov
add
ret
cld
js
add
outsb
add
sub
pop
in
add
add
dec
cltd
mov
dec
addb
adc
pop
stos
push
or
xor
addr16
mov
mov
aad
pop
fildll
jge
inc
sub
sbb
add
cld
jge
add
imul
ret
ja
ds
push
and
das
iret
lods
stos
mov
xor
and
outsl
push
mov
jbe
pop
xor
mov
add
and
and
sub
xchg
mov
mov
loop
mov
mov
out
sbb
repnz
bound
mov
add
add
inc
loopne
mov
fstpt
jo
mov
addb
inc
insl
loop
mov
nop
add
popf
idivl
call
out
movsl
subl
negb
adc
mov
mov
out
ljmp
mov
jmp
push
cmpsl
test
jae
loope
cmpl
nop
add
rolb
mov
inc
pop
or
in
xor
je
int3
cld
pusha
add
lret
mov
mov
inc
mov
sub
popa
mov
es
out
inc
mov
mov
or
xchg
mov
mov
mov
out
mov
test
sub
add
lret
lret
mov
repnz
mov
mov
lret
pushf
call
cli
xlat
push
mov
pop
mov
push
add
push
mov
cwtd
sub
and
adc
and
add
or
out
hlt
and
mov
and
xor
mov
sbb
ret
rolb
pop
aas
add
mov
cmp
dec
xchg
mov
cmp
mov
out
dec
fucomi
push
jg
mov
mov
rolb
mov
pusha
add
or
dec
mov
add
add
add
mov
shl
add
loope
add
add
mov
push
lods
outsl
fisubl
add
repnz
mov
addb
push
sti
cmp
sub
adc
adc
mov
fwait
dec
hlt
inc
add
add
add
add
xchg
into
inc
fldt
idivl
loopne
mov
imul
aad
orl
lods
ficompl
outsb
inc
sti
pop
jmp
and
mov
rcrl
fmul
or
mov
fsts
mov
mov
dec
pop
jecxz
jmp
add
bound
mov
lcall
sub
or
cmp
add
jmp
data16
xlat
mov
ja
push
mov
cmp
mov
add
loop
mov
sub
mov
add
cs
popa
inc
add
mov
cs
push
lret
lret
add
xchg
add
xor
mov
test
add
xor
mov
cmp
dec
ret
sub
scas
sahf
mov
fcompl
mov
repnz
add
mov
enter
and
dec
inc
sarl
mov
add
addb
test
mov
mov
add
mov
add
xlat
pusha
add
adc
sub
stc
xchg
movsl
out
pop
outsb
jge
mov
movsb
dec
jle
mov
adc
mov
stos
fisttpl
inc
ficoms
add
ja
mov
pop
cmp
add
push
mov
mov
push
insl
mov
inc
aas
mov
add
add
stos
out
jg
pop
inc
std
mov
jnp
cs
inc
add
stos
hlt
sub
pusha
add
sbb
xlat
add
mov
int
loopne
mov
jne
pusha
add
rolb
inc
add
lods
inc
or
lcall
mov
xor
shrl
jno
into
lods
dec
adc
mov
addb
in
lcall
aam
test
loop
mov
dec
addr16
add
inc
jp
mov
mov
mov
outsb
outsb
into
lods
outsb
jb
mov
test
stc
add
or
leave
xchg
movsl
push
inc
add
cmp
sub
divb
pop
movl
inc
inc
add
mov
gs
addb
loop
mov
cwtl
nop
add
mov
ja
xorl
xchg
mov
add
sbb
adc
mov
jns
loope
fisttpll
call
add
roll
xchg
add
xchg
jmp
mov
mov
testl
fldcw
int3
scas
rolb
mov
add
popf
sahf
in
mov
push
testl
ds
mov
insl
mov
jns
adc
lods
out
notl
add
add
or
add
pop
rolb
mov
pop
int3
out
insl
sbb
jge
pushf
sub
add
popf
dec
cmp
inc
in
cmc
shrl
addb
or
or
dec
add
xchg
inc
lods
std
movsl
push
pop
pusha
add
mov
mov
pop
pop
pop
sbb
das
add
mov
sbb
sub
add
enter
mov
mov
stc
and
mov
data16
dec
mov
int
cmp
cmp
mov
jbe
je
mov
dec
cmp
addl
dec
xor
out
inc
add
mov
mov
and
int3
stos
add
add
mov
mov
std
and
pop
adc
addr16
in
cli
jbe
es
mov
fwait
mov
inc
add
jnp
add
dec
outsl
lcall
mov
ljmp
or
xchg
add
mov
sub
xchg
mov
nop
add
mov
add
repz
fidivrl
int3
in
ja
add
mov
pop
xchg
loope
pop
xchg
mov
mov
stc
sarl
add
mov
add
xchg
add
addb
rolb
mov
add
add
scas
mov
inc
sbb
add
inc
xchg
add
pop
xchg
shl
sub
call
js
add
mov
or
in
stos
jne
sarl
aaa
rolb
cmp
mov
dec
call
lcall
sub
mov
cmp
cmp
mov
mov
lea
inc
pop
roll
rolb
mov
xchg
add
out
or
das
out
mov
aam
xor
mov
data16
push
stos
push
je
test
in
aas
inc
sbb
mov
lcall
aad
dec
lahf
jecxz
xchg
mov
pop
divb
pop
dec
mov
bound
mov
aas
add
leave
adc
cld
push
hlt
pop
jecxz
sub
mov
mov
mov
pop
inc
fwait
sbb
or
add
out
jp
mov
les
mov
iret
push
dec
ret
mov
dec
inc
mov
hlt
in
imul
dec
jb
mov
mov
pop
xchg
fucomi
mov
add
and
mov
mov
sbb
stos
mov
sti
je
stc
fcmovne
lret
fsubrs
das
fidivl
jge
add
daa
pop
jge
cmp
push
cmpsb
pop
jl
dec
xor
mov
cltd
adc
loop
mov
loope
ret
pop
xchg
in
pusha
add
add
add
and
mov
mov
add
adc
adc
ljmp
add
dec
xor
mov
sub
adc
mov
mov
rcrl
je
dec
dec
lret
clc
fistps
mov
sub
faddl
insl
mov
loope
bound
mov
sub
mov
rolb
mov
pop
mov
cmp
and
mov
push
out
or
stc
xlat
inc
add
push
sbb
add
add
sbb
inc
addr16
lea
call
add
mov
jne
lea
inc
xchg
insb
fidivrl
ret
insb
fnsave
jle
add
mov
adc
add
nop
add
movzwl
pop
cs
int3
mov
bound
mov
ja
daa
jbe
or
cmc
inc
jge
addb
push
test
cmp
add
add
pop
xor
sbb
outsb
add
mov
xchg
mov
aad
scas
sbb
adc
jge
mov
repz
add
outsb
notl
cld
fisttpll
das
scas
arpl
add
adc
mov
mov
add
jne
ficomps
insb
inc
insl
add
out
and
mov
sbb
lahf
and
mov
stos
mov
push
sub
dec
sbb
repz
pop
mov
mov
or
cmc
pop
in
inc
add
popf
inc
add
add
movsl
mov
cli
sbb
mov
popf
mov
add
jg
sub
lea
mov
add
cmp
mov
add
add
xchg
stos
out
mov
lcall
fisttps
shrl
add
cmc
xorl
repnz
add
mov
insb
insb
xchg
popl
lds
add
mov
out
inc
pop
mov
adc
rolb
mov
or
mov
adc
mov
mov
enter
sbb
xchg
push
notl
push
inc
into
cs
cmp
add
imul
cmp
fs
pop
sub
add
in
push
and
mov
mov
movsl
movsb
cld
cmpsl
aas
repnz
sbb
mov
js
incl
jae
sahf
xor
mov
xor
inc
mov
pop
cs
incb
pop
push
scas
add
mov
in
cli
cmp
inc
mov
pop
sub
arpl
jp
add
subl
mov
add
enter
lods
push
push
gs
adc
mov
outsb
mov
push
dec
push
add
add
cmpl
notl
mov
ret
ret
push
push
adc
mov
lea
enter
or
nop
add
es
lahf
cmp
xor
xchg
aas
jns
mov
mov
mov
adc
mov
add
cmp
cwtl
ret
add
or
cmpsb
movl
lods
xchg
jbe
add
mov
add
call
and
mov
jae
imul
xor
mov
mov
cmc
mov
pop
outsl
sbb
in
mov
add
push
mov
imul
pop
mov
mov
addr16
add
xchg
inc
ss
mov
ljmp
lret
add
out
jle
xlat
dec
addb
icebp
dec
loope
out
sub
push
mov
add
lock
push
add
shrl
xchg
int3
sbb
push
add
mov
xchg
pop
pop
xchg
lds
mov
mov
lahf
cli
and
mov
add
xchg
add
mov
mov
inc
movsl
sub
add
add
mov
gs
add
leave
addb
push
push
push
iret
xchg
mov
loop
mov
ret
pop
sub
mov
adc
mov
mov
xor
mov
loop
mov
call
daa
jb
mov
xlat
xlat
xchg
add
loop
mov
nop
add
mov
cmp
aad
sbb
add
add
or
push
add
and
mov
mov
mov
imul
add
cwtl
sahf
ret
sub
imul
mov
xchg
lcall
ds
pop
scas
or
add
js
jmp
lock
inc
add
mov
arpl
and
mov
scas
dec
xchg
mov
das
iret
cmp
mov
mov
mov
outsb
and
popa
mov
cmpsb
loopne
mov
lea
ret
sub
mov
mov
xchg
push
stos
adc
jbe
push
test
insl
xchg
stos
mov
add
addb
ss
leave
xchg
icebp
lock
cmp
psllw
or
add
pop
in
dec
out
mov
xor
and
adc
loopne
mov
enter
mov
shll
test
jge
push
add
jl
cli
andl
add
pop
and
mov
nop
add
mov
lcall
mov
stos
cs
push
mov
pop
push
add
add
mov
xor
mov
aas
cli
lock
jne
movlps
mov
or
lods
mov
mov
jg
mov
jmp
inc
cs
ret
fwait
lahf
dec
sahf
lods
mov
adc
cmp
dec
inc
pop
dec
rolb
adc
rcll
decb
pop
scas
mov
jmp
jmp
daa
jp
and
mov
fsts
add
mov
mov
nop
add
mov
pop
push
push
test
loopne
mov
call
push
clc
ret
mov
cli
inc
push
add
inc
test
xlat
and
leave
aas
add
mov
dec
test
scas
fistl
mov
cwtl
fisubrl
lods
xor
pop
scas
add
mov
icebp
divl
mov
out
pushf
notl
xchg
xor
add
or
flds
add
mov
add
cmp
xor
mov
push
and
or
das
inc
add
mov
adc
xlat
mov
inc
push
dec
xchg
jo
mov
fldcw
aaa
xor
jle
cmc
adc
and
add
cmp
push
fs
cmpsb
or
nop
add
cs
push
movsl
imul
movsl
fistps
add
and
pop
sub
fstl
push
inc
fcmove
das
shll
cmc
xchg
push
add
sub
mov
push
or
jp
jnp
sub
xlat
add
into
xor
mov
cltd
inc
add
adc
or
mov
mov
xor
sahf
push
scas
lods
sub
inc
test
xchg
out
loop
mov
jecxz
and
add
mull
xor
and
mov
int
aad
inc
std
aaa
lock
repnz
lahf
loope
xlat
shrl
mov
push
mov
pop
addb
cmp
add
popa
add
mov
lods
pop
push
arpl
jnp
ds
mov
pop
cmp
add
sub
mov
push
add
test
xchg
rcr
mov
inc
mov
mov
mov
dec
inc
mov
mov
int
in
xor
add
mov
and
mov
pop
clc
popa
cmpsl
testb
or
dec
mov
mov
sbb
pop
cli
xor
mov
fs
pop
pop
ss
stc
hlt
jne
pop
iret
mov
adc
sub
add
inc
cmpl
rolb
add
mov
mov
add
add
leave
in
sahf
push
dec
or
add
jbe
mov
iret
fadd
inc
adc
add
mov
mov
cld
sub
or
test
add
pop
fisttps
jg
or
roll
add
mov
xchg
movsl
stos
pop
divl
stos
push
xor
lea
add
lds
mov
xor
cmp
mov
lock
mov
xchg
xlat
add
mov
mov
sbb
xchg
cld
inc
aaa
xor
xchg
or
dec
iret
sub
xchg
add
rolb
mov
adc
mov
push
aam
add
insb
push
push
or
lods
xor
mov
das
movsb
std
bound
mov
leave
mov
stos
nop
add
jmp
xchg
ret
ret
out
xchg
std
test
or
add
pop
lds
sbb
xor
mov
mov
cmp
insb
fcoml
lods
pop
pusha
add
xchg
daa
inc
and
mov
or
sub
fadds
test
jmp
dec
fdivl
dec
enter
stos
insl
bound
mov
add
dec
filds
js
pop
fisubrs
xchg
push
pop
mov
test
je
popf
cltd
sub
pop
test
sub
add
xor
mov
push
add
or
addl
pop
dec
leave
xor
mov
push
rolb
mov
or
mov
add
int3
rolb
sub
imull
mov
adc
add
mov
dec
sub
call
cmp
stos
cmp
mov
out
cmp
scas
mov
aas
stos
sbbl
add
mov
mov
mov
cmp
add
mov
cli
add
xchg
lcall
push
mov
add
data16
cmp
lcall
mov
mov
add
fsub
add
add
mov
xor
popa
fs
mov
stos
pop
xor
xchg
add
out
outsb
ljmp
addb
test
add
sub
nop
add
pop
mov
aaa
inc
jp
add
test
mov
mov
ds
add
in
mov
adc
sarl
test
add
mov
mov
mov
pop
or
xchg
sub
out
lods
pop
test
add
dec
mov
movsl
dec
test
mov
add
mov
ret
mov
add
mov
inc
mov
ss
sbb
add
mov
push
mov
add
mov
fidivrl
mov
push
leave
aas
test
andl
push
mov
adc
mov
sbb
mov
movsb
lcall
mov
adc
jo
mov
fwait
push
pop
xor
inc
cmp
loope
add
and
mov
xchg
add
mov
pop
xchg
push
cwtl
mov
sub
loop
mov
xor
pop
cmc
add
mov
das
jle,pn
or
add
imul
add
mov
and
pop
jmp
imul
add
or
push
inc
xor
mov
xchg
lahf
lret
mov
pop
mov
pop
rep
out
imul
dec
lret
inc
sbb
gs
cmc
pop
cmp
mov
dec
daa
rolb
mov
pop
nop
add
mov
jl
xor
mov
adc
mov
jl
and
enter
mov
inc
sub
or
imul
insb
mov
xchg
and
hlt
lret
mov
add
mov
out
fwait
and
add
fs
mov
loop
mov
mov
push
add
mov
out
rolb
mov
out
sub
lods
in
xchg
nop
add
mov
sbb
push
or
sbb
notl
inc
imulb
mov
dec
loope
imul
dec
jmp
fmull
lea
cli
lahf
xchg
inc
add
sub
mov
cli
mov
mov
stc
das
sahf
inc
fiaddl
mov
out
fdivrs
ljmp
rcll
add
mov
cltd
rolb
clc
pop
and
add
stos
cmp
lds
pop
mov
clc
and
pop
dec
sub
imulb
jle
mov
add
jnp
add
mov
pop
insl
mov
adc
mov
lds
jmp
gs
aam
std
loop
mov
adc
movsb
test
add
mov
in
inc
fbstp
fisttpl
add
inc
int3
mov
rolb
mov
adc
mov
cmpsl
push
hlt
xchg
cwtl
ja
sbb
xchg
mov
arpl
test
out
push
cltd
in
push
jae
dec
pop
jmp
stos
sahf
jmp
sti
dec
xor
mov
insb
fdivl
mov
add
pusha
add
sbb
dec
mov
inc
leave
aad
dec
imul
fcmovnu
out
fwait
xchg
std
xorl
cli
push
cmp
add
or
sub
lret
bound
mov
add
add
jbe
je
jns
sub
add
mov
call
add
mov
adc
dec
dec
push
addb
sti
and
mov
jl
add
push
xorl
inc
pop
insb
pop
push
aaa
cwtl
ret
pop
xchg
add
inc
add
add
push
mov
mov
sbb
sub
fnstcw
cmp
stos
xchg
cltd
jmp
sub
add
lahf
clc
lahf
mov
lret
inc
add
adc
out
mov
adc
mov
pop
pop
add
xlat
test
ds
mov
sub
or
add
repnz
insb
mov
mov
pushf
int
sub
loop
mov
mov
mov
mov
add
in
dec
int
inc
add
mov
jb
mov
ds
int3
push
inc
std
pop
cmp
mov
add
xchg
out
out
cmpsl
push
pop
pushf
xor
mov
test
add
jg
mov
sub
push
xorl
sbb
rcrl
add
imul
jno
xchg
aam
push
xchg
inc
clc
mov
mov
repnz
movsl
or
mov
lea
loope
jg
xchg
out
and
ljmp
or
outsb
and
dec
xor
and
xchg
je
stos
cs
out
push
lea
scas
jl
add
add
fbld
jbe
add
pushf
inc
add
mov
add
mov
adc
sahf
pop
lret
add
das
jne
add
mov
jbe
add
ret
dec
mov
cmpsl
aas
cmpsb
das
fildl
stos
inc
scas
lock
xchg
fildll
sub
cli
xchg
sbb
lahf
push
dec
inc
add
add
cmp
pop
cmp
inc
sti
xchg
mov
imul
mov
lods
icebp
rolb
push
push
cmpsb
popf
adc
out
inc
add
mov
aaa
push
add
cmp
cld
incb
and
mov
jp
addb
out
ds
add
mov
out
mov
xchg
inc
lods
inc
add
push
ss
fwait
call
shl
mov
xchg
repnz
push
lcall
mov
mov
out
jmp
add
push
das
pop
or
push
pop
mov
arpl
mov
mov
adc
xchg
mov
or
adc
fcomp
pop
movsl
adc
push
cs
mov
arpl
mov
pushf
inc
rolb
mov
and
jmp
stos
jmp
rolb
mov
mov
pop
inc
in
xchg
dec
out
jp
addb
stos
enter
mov
dec
pop
cmp
xor
xchg
add
add
call
les
sbb
jbe
sub
ja
inc
jl
add
mov
cmp
mov
push
push
cmc
dec
fs
fwait
mov
fwait
adc
out
inc
mov
es
cmpsl
adc
shll
add
jp
push
add
sbb
mov
push
jecxz
out
mulb
inc
out
je
cmp
inc
jle
scas
adc
adc
mov
push
mov
addr16
xchg
xchg
inc
push
or
cmp
flds
mov
sbb
inc
scas
call
jg
inc
fdivr
gs
or
sbb
push
pusha
add
adc
rep
mov
or
mov
dec
loop
mov
orl
movsl
mov
push
and
and
fdivrs
popa
cmp
xor
mov
divl
add
lcall
lret
addb
or
pop
mov
pop
jl
xchg
mov
sbb
add
mov
daa
lcall
adc
imul
add
add
mov
xchg
aam
lods
xchg
lahf
mov
mov
mov
cmp
lret
ret
sub
jp
dec
sub
cmp
add
pop
cld
test
mov
mov
call
dec
jb
mov
clc
loop
mov
add
das
les
mov
mov
xor
addb
jecxz
cld
pop
ret
jb
mov
xor
add
xchg
lds
add
pop
or
add
movsb
fadd
push
push
push
clc
cmp
push
fst
xor
rolb
out
sbbl
fisttpll
mov
cltd
xchg
add
jno
int3
mov
ds
pop
mov
add
in
push
push
int3
push
sbb
lahf
jbe
lock
add
mov
xchg
mov
add
mov
shrl
jb
mov
pop
test
rolb
mov
push
xchg
out
testb
add
jmp
add
ljmp
mov
rolb
mov
leave
and
mov
mov
mov
inc
add
scas
shrl
add
or
jmp
push
loopne
mov
push
in
pop
inc
add
stos
popa
lds
inc
sub
pop
cmp
jo
mov
mov
mov
rolb
mov
add
mov
jge
into
mov
mov
movsb
pop
cmp
add
std
sub
scas
mov
jb
mov
add
mov
inc
adc
mov
pusha
add
aad
inc
adc
mov
jns
rolb
dec
inc
cmpsb
push
sub
into
jl,pn
pop
das
fidivrs
ret
cld
and
in
add
add
pop
pop
jp
outsb
loopne
mov
rolb
mov
mov
mov
dec
fadds
push
fwait
adc
cmp
sbb
stos
sub
xchg
push
mov
sub
mov
mov
mov
dec
xchg
addb
add
in
push
mov
imul
jbe
mov
push
add
cmp
mov
add
leave
aaa
fnstcw
test
fdivrs
out
ss
mov
dec
mov
sti
data16
adc
mov
add
mov
xchg
scas
sbb
mov
insb
dec
in
lea
xor
pop
out
mov
imul
gs
int3
mov
inc
add
inc
jecxz
push
arpl
sbb
jb
mov
add
jl
outsl
ljmp
xchg
stc
rolb
mov
add
add
pop
out
and
mov
loop
mov
jbe
jns
mov
out
jnp
imull
ljmp
mov
mov
pushf
aaa
inc
add
push
jg
fstp
sub
mov
movsb
ret
and
pusha
add
xchg
lods
sub
xor
mov
mov
mov
inc
add
test
pop
mov
pop
push
push
cwtl
cmc
mov
ss
or
jbe
flds
mov
ret
ficompl
add
lret
rolb
mov
scas
mov
jns
mov
add
jno
gs
mov
mov
cmp
arpl
cmpsl
sti
dec
inc
pusha
add
or
sahf
incl
cmc
lods
pusha
add
add
add
rolb
mov
aam
cmp
cmp
mov
mov
mov
sbb
cmpsl
jne
jge
jg
add
icebp
push
shrl
add
mov
and
jnp
test
push
mov
fld
and
ljmp
sub
xor
mov
pusha
add
fcoml
push
loop
mov
mov
icebp
hlt
aas
aad
adc
test
mov
adc
mov
xor
mov
mov
repz
pop
xchg
loop
mov
in
lds
add
imul
int
sbb
outsb
cmp
dec
movsl
push
jg
negb
daa
ja
aad
out
inc
popa
adc
jl
leave
mov
jo
mov
add
and
mov
push
push
sti
aas
loopne
mov
sub
mov
in
pop
xor
mov
or
dec
ret
cwtl
clc
mov
cmp
aas
mov
dec
xlat
aaa
mov
fsubp
xlat
pop
clc
out
mov
jbe
repz
out
int
inc
lock
pop
pop
outsb
inc
add
pushl
push
fwait
xchg
leave
mov
add
adc
cli
cmp
pop
int
xchg
inc
scas
sbb
ljmp
cmp
xchg
or
push
mov
dec
in
les
shrl
jmp
adc
mov
jae
lcall
nop
add
xor
cmp
or
add
outsb
xor
cmp
aas
dec
rolb
mov
add
arpl
stos
sub
dec
addb
pop
test
cld
mov
mov
pop
jo
mov
ljmp
jae
mov
mov
add
pushf
add
mov
aaa
dec
push
iret
mov
fs
in
cmp
dec
nop
add
cmp
mov
mov
faddl
fcoms
add
cltd
enter
inc
pusha
add
loopne
mov
xchg
or
pop
and
out
fidivrs
jo
mov
lock
mov
xor
inc
inc
add
inc
add
and
cmp
jle
xchg
and
push
add
pop
lea
dec
sub
rolb
push
stos
mov
pop
popa
fcom
ret
pop
adc
mov
mov
lock
lret
push
add
daa
or
mov
add
add
les
jnp
push
testl
and
hlt
nop
add
stos
inc
add
addb
mov
imul
dec
popf
cmp
xchg
adc
rolb
mov
mov
push
xchg
jmp
mov
mov
sbb
mov
sti
mov
mov
add
in
sahf
or
add
dec
insl
cmp
out
fisubs
or
add
mov
sbb
fs
jp
out
rcl
roll
rolb
mov
popa
pusha
add
jmp
inc
add
mov
adc
add
mov
mov
mov
mov
js
jne
divl
mov
lock
add
pusha
add
sbb
pop
dec
rolb
mov
mov
cmp
mov
imul
addb
mov
sbb
test
mov
rolb
mov
cmp
stc
mov
push
pushf
and
popa
sub
mov
pop
addb
imul
adc
mov
mov
bound
mov
add
ja
jle
pop
cli
pop
fnstenv
sbb
jae
js
out
cmp
pusha
add
mov
std
fs
aam
or
loop
mov
aad
test
mov
mov
add
test
data16
pop
cmp
or
add
jnp
push
jmp
popf
test
ret
mov
inc
jmp
add
mov
push
pusha
add
pop
int
out
add
or
mov
jg
test
into
cltd
js
add
mov
popf
mov
add
add
mov
dec
out
lea
jne
in
push
push
mov
in
jbe
add
negl
adc
mov
fmul
bound
mov
lahf
je
or
lret
out
mov
mov
push
push
mov
add
pop
mov
lds
sbb
gs
imul
jno
mov
mov
mov
into
test
xchg
cmpsb
lahf
push
cld
das
scas
sub
jl
jl
cld
jnp
outsl
in
fxch
rorl
push
into
les
mov
xchg
sub
xor
mov
mov
enter
and
add
mov
push
sub
lahf
jmp
aam
std
sbb
roll
in
or
aaa
add
mov
and
adc
xor
mov
mov
dec
sub
and
xor
shrl
push
add
mov
add
ret
nop
add
sbb
aad
xor
mov
add
sub
pop
bound
mov
add
stc
fcomip
push
out
fstl
loope
fnstcw
sbb
jge
loope
lcall
mov
push
cmp
out
ss
mov
mov
add
cmp
mov
mov
mov
mov
mov
addb
sbb
pop
mov
xchg
xor
add
mov
mov
mov
sbb
sub
ret
insl
popa
pop
ljmp
mov
push
cmp
mov
in
cmp
add
notb
add
jmp
jne
add
cs
add
mov
sub
xchg
xor
cli
mov
js
into
sbb
pop
stos
mov
push
cmovb
mov
cmpsl
push
adc
int3
repz
js
test
iret
add
mov
push
bt
sub
xchg
xor
cwtl
rolb
mov
adc
mov
add
mov
xor
cmp
outsb
rolb
mov
and
mov
sbb
dec
stc
jl
pcmpeqb
pop
ffree
add
sub
push
stc
dec
sub
sbb
add
dec
sbb
push
dec
inc
outsl
pop
push
add
add
pop
adc
mov
mov
add
mov
mov
dec
dec
xchg
sub
jge
jecxz
add
push
pop
ss
push
inc
jg
cmp
xchg
push
sbb
mov
mov
jno
dec
dec
pop
or
mov
dec
inc
push
xchg
mov
mov
or
jae
inc
mov
mov
clc
mov
cmp
mov
add
xchg
lret
adc
mov
add
stc
adc
mov
add
or
push
dec
mov
mov
add
test
mov
mov
scas
xchg
add
cmp
sbb
push
leave
xchg
mov
mov
add
mov
leave
add
mov
lds
and
data16
add
cmpsl
sbb
clc
sbb
pop
fistpl
mov
dec
mov
int3
addr16
sub
ret
inc
push
add
sbb
cmpsl
push
stc
ret
pop
push
daa
stc
clc
es
mov
mov
add
loope
addb
xor
test
int3
sbb
pop
fcomps
push
mov
ss
xor
lea
pop
and
add
add
cmp
sbb
cltd
out
int
lret
aam
sti
notb
imul
fsubs
jnp
mov
add
cmpsb
and
dec
loop
mov
inc
add
data16
add
lods
ljmp
dec
push
xchg
fwait
adc
movsl
sbb
cmp
icebp
rolb
mov
mov
cmp
add
mov
add
mov
movsl
fnstcw
cmc
test
fnsave
add
add
cmp
mov
movsb
rorl
aam
or
add
sub
lock
sbb
stos
push
mov
sub
mov
add
test
push
rorl
xor
cmp
xchg
xor
jl
cmc
mov
add
loop
mov
adc
add
mov
pop
negl
inc
ljmp
pop
sahf
mov
pushf
faddp
hlt
pusha
add
mov
mov
or
xorl
add
arpl
push
jmp
add
shrl
mov
dec
addb
lods
arpl
inc
xchg
jg
pushf
ljmp
out
pusha
add
pop
loopne
mov
mov
and
mov
shll
mov
fldcw
mov
inc
add
mov
dec
adc
mov
add
add
iret
sub
subl
pop
js
add
std
fs
sbb
cltd
mov
add
gs
lahf
lret
xor
inc
mov
iret
call
ficoml
insb
xorl
mov
push
cmp
enter
cld
rolb
mov
mov
mov
xchg
fstp
xchg
ficoms
mov
pop
adc
add
xchg
push
pop
mov
jge
scas
mov
add
mov
fwait
aam
in
push
add
adc
cmpsl
in
ja
rep
cli
jnp
or
add
rolb
or
xchg
stc
mov
mov
sbb
sbb
notb
adc
or
cltd
fcomp
out
cltd
pop
dec
mov
mov
add
xchg
clc
push
sti
pop
into
push
add
add
lea
addb
pop
push
sub
add
out
fwait
stc
adc
xor
add
xchg
xchg
inc
rolb
sub
frstor
mov
mov
xor
mov
add
scas
je
je
fistpll
outsb
daa
pop
mov
and
cs
sbb
add
mov
cmp
decb
jp
add
add
mov
cwtl
and
scas
push
dec
insl
mov
lahf
sub
inc
out
jmp
inc
scas
in
inc
fs
mov
dec
jo
mov
mulb
lods
jmp
mov
addb
daa
sub
and
mov
aam
mov
fs
and
and
mov
ljmp
inc
inc
xchg
mov
add
or
arpl
add
add
fcompl
sub
mov
daa
mulb
pop
jl
and
mov
mull
adc
mov
mov
mov
add
cs
push
sbb
mov
mov
loopne
mov
mov
les
cltd
sbb
adc
add
mov
aad
std
bound
mov
inc
or
push
dec
fsubl
xlat
stos
pusha
add
mov
xor
mov
or
fcmovnbe
dec
addb
stos
add
mov
mov
inc
xchg
test
xchg
lods
jbe
into
out
push
push
cmp
mov
add
xor
mov
insl
cmp
repz
add
rolb
mov
sub
jle
sub
les
dec
pop
mov
push
add
mov
add
or
xchg
std
jmp
mov
push
idivl
js
jg
out
adc
inc
add
lds
hlt
or
repz
aas
jecxz
insb
jo
mov
scas
cmp
out
gs
nop
add
mov
xor
mov
sbb
mov
add
fadds
ret
sahf
fadds
into
mov
jns
rol
jl
jne
stos
cwtl
pop
arpl
sbb
inc
cli
into
rolb
pop
sbb
add
pushf
inc
add
mov
clc
sub
bound
mov
loope
stos
sbb
mov
test
fcmovnb
pop
mov
mov
adc
add
mov
into
xor
mov
loope
push
jbe
mov
mov
mov
scas
imul
rolb
mov
stc
push
add
add
mov
mov
dec
add
mov
decb
xor
mov
mov
add
inc
fs
mov
ja
add
cmc
inc
jae
adc
mov
pop
sub
xchg
shll
xor
mov
mov
mov
pcmpeqw
mov
push
dec
mov
jl
stos
or
mov
test
add
and
xor
xchg
nop
add
sbb
mov
inc
sbb
cmp
mov
add
add
mov
out
pusha
add
or
insl
push
mov
add
mov
notl
shll
inc
push
push
imul
in
push
mov
mov
jmp
sbb
push
add
mov
pushf
fistpl
cwtl
scas
or
lock
cld
jp
mov
push
pop
mov
push
add
jae
pop
iret
js
fisttpll
xchg
mov
push
in
push
add
sub
sbb
mov
aam
lcall
leave
fnstcw
mov
mov
add
fnsave
add
push
mov
std
jae
repnz
add
xchg
mov
mov
fisttpl
leave
cld
test
and
mov
add
pop
daa
ja
sbb
shll
cmp
idivb
and
add
dec
aad
add
push
hlt
sbb
add
out
and
mov
pop
daa
fs
insb
mov
pop
sub
out
fdivr
cmp
mov
xor
mov
imul
lds
jo
mov
adc
data16
fbstp
sub
add
push
mov
push
gs
imul
push
inc
rolb
popa
mov
add
movsb
fisttpl
and
inc
roll
add
cld
js
test
and
add
cmp
xor
int3
dec
or
ljmp
cmp
cld
imul
push
lods
jecxz
add
mov
scas
inc
jae
scas
xchg
hlt
rolb
xchg
and
or
movsl
adc
push
loope
adc
xchg
jle
inc
add
add
mov
popa
inc
mov
in
outsb
addr16
xor
repz
scas
inc
mov
push
add
add
add
mov
aad
mov
add
hlt
lcall
or
addb
adc
mov
lods
jns
por
or
pop
ret
cmp
int3
pop
adc
dec
lret
cwtl
cmp
inc
movsb
icebp
cltd
add
mov
mov
mov
adc
mov
jnp
int
sahf
dec
rolb
mov
xchg
scas
incb
add
add
mov
jo
mov
dec
jl
lcall
pusha
add
fcoms
insl
inc
jbe
mov
add
jnp
mov
inc
add
sbb
jo
mov
sbb
cltd
dec
sbb
add
test
or
dec
adc
sbb
movsb
jl
rolb
sub
inc
dec
mov
mov
mov
mov
out
jecxz
cltd
sub
gs
push
add
daa
daa
gs
mov
mov
stos
jns
add
push
sbb
hlt
pop
sub
pusha
add
add
mov
shl
mov
adc
mov
push
push
loopne
mov
add
cmp
add
jp
add
add
mov
out
pushf
scas
int3
push
xchg
mov
icebp
push
mov
rolb
mov
xchg
mov
mov
mov
lahf
in
fildl
pop
pushl
daa
sub
add
outsb
mov
lock
mov
sti
mov
sub
add
push
addb
pusha
add
mov
xor
mov
mov
jb
mov
pushf
out
lods
ret
fwait
cs
push
outsl
test
xchg
pop
inc
inc
add
mov
mov
mov
std
lcall
lcall
add
sub
mov
rolb
mov
add
xor
mov
xor
mov
fldl
add
out
mov
mov
in
jae
adc
jmp
mov
rolb
mov
cli
insl
push
jo
mov
inc
cmp
xchg
call
femms
imul
adc
mov
mov
std
mov
jne
ret
inc
add
mov
fisttps
lahf
test
jbe
into
and
loope
add
pop
pop
jmp
mov
sub
mov
lods
inc
mov
inc
fldenv
adc
mov
imulb
lahf
imul
cmp
fidivs
sbb
cmp
sti
cmp
xchg
add
mov
mov
jle
add
add
mov
out
xor
mov
test
arpl
into
ljmp
lcall
sbb
clc
mov
lds
enter
mov
cltd
out
jnp
xchg
jmp
psubq
mov
loopne
mov
xchg
dec
ds
test
addb
inc
insl
loope
faddl
add
mov
lcall
xor
repnz
int3
out
stos
je
test
xchg
mov
js
jge
add
iret
pop
adc
mov
fcmovb
mov
mov
mov
and
and
mov
dec
es
add
ds
leave
mov
jl
mov
add
int3
and
mov
push
or
push
insl
pop
jmp
jnp
int3
dec
aaa
xchg
push
push
dec
stos
mov
push
fiadds
sub
sub
cmc
sarl
imul
mov
fwait
dec
push
add
jecxz
aad
mov
rolb
mov
xchg
movsl
into
bound
mov
mov
cwtl
cmp
jl
add
pop
mov
adc
jp
ficompl
add
xchg
out
lea
add
stos
jp
add
mov
iret
in
add
aas
negl
lock
inc
add
mov
addb
ds
mov
mov
add
rolb
mov
mov
and
lahf
mov
cli
jle
adc
push
adc
ds
mov
fidivrl
popf
pop
addb
cltd
and
mov
xchg
add
and
ret
sub
jmp
ss
mov
xchg
xchg
int3
imul
push
rolb
mov
mov
add
inc
lahf
rcrl
leave
fwait
dec
movsb
mov
icebp
xchg
mov
adc
mov
jge
dec
mov
imulb
aaa
mov
mov
shr
sbbl
rcrl
push
gs
dec
push
in
sbb
mov
pop
aam
push
or
pushf
int
inc
mov
add
pop
repnz
add
mov
add
mov
pop
fmul
in
idivb
pop
loop
mov
cld
lock
fisubl
mov
fsubs
add
xchg
nop
add
fs
push
dec
mov
jp
jne
mov
enter
add
mov
hlt
lcall
sbb
daa
jmp
inc
sbb
stos
into
cltd
stos
lahf
inc
cmc
push
add
jnp
inc
inc
push
xchg
add
stos
rolb
mov
add
popf
cmp
lock
add
ljmp
ja
adc
leave
sub
test
jg
mov
cmpsb
mov
pop
enter
add
or
pop
nop
add
mov
pop
xor
add
or
add
mov
stc
lcall
jmp
pop
lcall
in
inc
cmp
into
sub
jp
xchg
add
add
sub
mov
jecxz
add
add
xchg
cmp
xchg
sbb
jbe
aam
add
adc
add
movsl
mov
mov
push
mov
pop
test
rolb
mov
sub
mov
movsb
repz
mov
add
fisubrs
and
mov
leave
xor
inc
loop
mov
jns
insl
lock
sarl
decb
pop
sub
in
out
mov
rcll
cwtl
push
xchg
or
xor
mov
enter
dec
shll
sti
fisubrl
daa
mov
mov
add
mov
xlat
pop
movsl
mov
mov
jmp
into
dec
ja
add
add
dec
int
iret
sub
push
push
js
sub
imul
jle
add
mov
push
out
mov
adc
mov
add
leave
sti
cmp
add
jmp
add
setne
and
push
add
lods
repnz
push
push
popa
aaa
scas
mov
add
mov
lea
fisttpll
add
mov
mov
xor
mov
and
mov
mov
sub
mov
xchg
xor
mov
mov
and
mov
mov
outsb
dec
and
mov
dec
adc
mov
pop
mov
jnp
and
in
jg
add
std
jb
mov
aam
push
jo
mov
test
sbb
jmp
pop
ds
mov
mov
add
add
mov
mov
mov
outsb
aaa
sbb
fcoms
mov
mov
xchg
add
adc
inc
mov
add
add
sub
aad
add
shrl
mov
outsb
xchg
nop
add
push
les
pushf
cmp
mov
cmpsl
or
add
mov
pop
rcl
sbb
fimull
add
pop
inc
add
add
sbb
pop
fcmovnbe
sbb
test
add
imul
lahf
leave
lahf
xchg
addb
dec
aaa
leave
scas
daa
cmp
sbb
xorl
and
mov
insl
stos
xor
fdivrl
adcl
stos
add
fcomip
mov
add
adc
mov
or
sbb
or
call
in
fwait
or
push
sbb
dec
stos
cld
jne
mov
in
inc
repnz
stc
loope
cwtl
pop
in
add
mov
out
push
add
and
mov
mov
arpl
in
icebp
out
repz
aad
movsl
aam
add
mov
dec
sysexit
xchg
add
dec
rcrl
jno
mov
push
daa
inc
mov
rolb
mov
or
mov
mov
xor
mov
pop
mov
mov
scas
push
hlt
xchg
aam
push
mov
inc
push
scas
iret
xor
cmp
pop
inc
repnz
and
lds
push
jbe
sub
test
push
cmp
pop
or
pop
nop
add
jmp
lea
mov
add
sub
ss
mov
stos
sbbl
sub
aaa
popf
mov
push
repz
xchg
push
add
add
mov
sarl
outsl
ss
push
add
iret
rolb
sbb
out
pop
and
fdivrs
rolb
mov
adc
mov
xchg
fs
add
leave
xchg
pop
mov
fs
cmp
int
scas
inc
insb
stc
cmpsl
lret
out
aad
xchg
add
pop
inc
push
mov
ja
push
mov
mov
xchg
mov
add
mov
out
mov
pop
push
add
bound
mov
lock
negb
mov
add
adc
add
loopne
mov
mov
push
jecxz
rolb
xchg
fisttps
pop
clc
mov
pop
sar
test
jp
jmp
xchg
xchg
test
sub
insl
push
dec
and
mov
mov
mov
jns
inc
add
rolb
mov
add
ss
repnz
stc
mov
jo
mov
add
scas
imul
jb
mov
add
add
popa
push
mov
jnp
dec
repnz
fstpt
lea
outsb
sub
fstps
sub
mov
jp
and
mov
add
pop
xlat
test
add
add
jno
add
mov
sbb
div
addb
sti
scas
xor
add
or
add
add
data16
xor
mov
xchg
jp
add
ss
ss
cmpl
mov
cld
mov
add
lcall
mov
mov
xlat
lcall
insl
aas
addb
mov
xor
mov
hlt
sub
add
hlt
cmp
mov
add
xor
add
jbe
int
push
stos
data16
xchg
cli
xor
mov
mov
into
loopne
mov
popf
test
or
add
sub
outsb
pop
mov
mov
fisubrl
sbb
add
int3
and
sub
add
pop
pop
xor
mov
mov
xchg
cwtl
loop
mov
filds
xchg
or
sub
xchg
ja
or
mov
jecxz
mov
pop
or
hlt
dec
or
add
mov
add
add
add
mov
dec
xchg
enter
out
xor
mov
add
fidivl
mov
cld
pop
int
add
add
sbb
push
add
hlt
or
sbb
add
xorl
sahf
mov
mov
ja
add
pop
insl
es
inc
adc
mov
add
outsb
xor
jmp
inc
dec
cld
inc
js
dec
mov
pop
sub
cmpsl
mov
mov
add
dec
dec
xchg
pop
jge
xlat
negb
inc
and
mov
mov
mov
add
jg
enter
js
dec
shrl
mov
mov
add
mov
cmpsl
inc
jle
xchg
xor
ret
jmp
pusha
add
mov
orl
mov
std
mov
fldl
leave
push
cmp
jnp
sahf
jmp
sti
cmp
shl
mov
add
jns
add
mov
and
cmpsb
fbld
jp
out
pop
and
mov
sarl
testl
movsb
add
loope
iret
jmp
mov
or
mov
cmp
xchg
loop
mov
lahf
icebp
in
add
cmp
in
dec
add
add
mov
dec
lea
mov
inc
fs
mov
adc
cmp
add
fnstsw
lods
cmc
cmpsl
or
stc
push
cmp
jb
mov
mov
dec
rcll
add
push
cmp
and
imul
ret
mov
add
imul
loopne
mov
dec
inc
mov
insl
clc
addr16
out
xchg
mov
add
iret
or
mov
and
out
shl
mov
cmpsl
ja
add
sub
call
shr
aad
jmp
dec
bound
mov
pushw
mov
sahf
or
repz
dec
xor
adc
add
xchg
sti
xor
mov
out
ss
and
xor
aaa
pop
pop
sub
add
pop
mov
or
xchg
sbb
xor
les
mov
fsubrs
xchg
mov
sahf
cltd
xchg
xor
mov
test
popa
aad
or
mov
push
test
fldl
add
test
dec
xor
add
andl
adc
mov
pop
pop
loop
mov
add
movsb
mov
mov
rolb
outsl
xlat
cli
loop
mov
gs
jmp
gs
jo
mov
stos
fdivr
in
les
sti
test
adc
daa
mov
test
fwait
mov
push
jno
push
sub
int
mov
xor
mov
add
sub
jno
popf
outsl
cmp
mov
adc
adc
sahf
iret
shrl
cmp
mov
sbb
cmp
add
test
sub
negl
clc
xchg
add
pop
into
push
sbb
sbb
xchg
add
mov
or
add
fisttpll
mov
sub
add
xchg
jmp
rolb
mov
xchg
aaa
or
out
shll
mov
sbb
adc
dec
push
sbb
add
xchg
mov
cmp
push
lds
in
enter
push
pop
xor
arpl
jns
add
adc
xor
add
and
mov
add
cmpsb
mov
xor
mov
cwtl
xor
out
outsl
movsb
jne
ja
sarl
mov
mov
xchg
insb
fwait
sti
daa
dec
push
stos
or
mov
mov
sbb
mov
mov
pop
lods
adc
mov
frstor
je
fucom
mov
add
add
add
and
push
adc
mov
clc
call
imul
iret
xchg
mov
mov
add
inc
add
sbb
arpl
aam
cld
les
mov
add
add
mov
add
jae
daa
rcll
jne
pop
fs
add
addb
push
pop
das
mov
or
xor
out
add
js
xlat
fistps
addl
add
mov
mov
add
cmp
add
add
aad
cmpsl
and
sbb
add
shll
sbb
add
lods
cmp
add
jnp
sti
jl
mov
inc
pop
rolb
mov
aas
pop
ds
cmc
movb
mov
dec
adc
push
xchg
mov
es
mov
mov
rcl
into
imull
cmp
rcrl
add
push
popf
mov
cmp
popa
call
add
adc
push
mov
mov
add
push
scas
jecxz
add
call
cmp
mov
xchg
jae
sub
add
lret
ljmp
lds
and
add
aad
and
mov
add
xor
out
mov
bswap
imul
cwtl
rolb
mov
mov
ljmp
andl
mov
mov
xchg
movsb
sbb
fs
inc
add
iret
xor
mov
out
add
sub
adc
mov
rcrl
test
jp
cli
repnz
jo
mov
push
aas
lods
xor
mov
mov
add
and
or
mov
std
filds
add
loop
mov
add
inc
sub
ja
test
add
xor
into
ficoml
add
add
in
mov
add
lds
mov
add
daa
mov
add
add
cmp
rolb
in
push
add
mov
xchg
sub
lret
add
stos
nop
add
add
sub
sti
in
push
xor
in
popf
push
cmp
bound
mov
adc
mov
sub
addr16
add
jp
pop
pop
mov
aas
mov
add
xchg
mov
add
and
hlt
pop
sbb
jns
mov
add
add
add
mov
addb
insb
addb
mov
jne,pt
mov
ljmp
add
mov
mov
adc
aam
divl
push
inc
add
shll
adc
mov
xchg
icebp
scas
jp
loop
mov
add
data16
add
popf
imul
rolb
mov
pop
or
jl
stc
aam
xor
mov
xor
xchg
mov
popf
daa
xchg
pop
xor
sti
movsb
or
adc
add
loopne
mov
mov
adc
mov
cmp
out
add
add
dec
xchg
push
pop
mov
fstp
cmp
cmp
test
xor
cld
push
aam
dec
outsb
mov
dec
int
repz
mov
cld
mov
mov
push
dec
or
xor
aad
das
in
pop
pop
xor
popf
stos
inc
add
inc
aaa
mov
jge
mov
push
add
sbb
xor
mov
ror
fidivrl
mov
push
pop
scas
ja
push
add
add
shrl
or
rolb
mov
dec
and
lock
nop
add
sbbl
adc
adc
add
mov
add
mov
sbb
test
popl
cmp
cli
and
lahf
push
add
rolb
mov
xor
bound
mov
fistps
aam
push
add
lret
cmpl
sbb
push
inc
or
sub
lcall
cmp
rolb
mov
push
add
mov
sbb
push
dec
cld
dec
mov
add
clc
test
pop
int3
jns
add
add
outsb
cmp
mov
outsl
pop
inc
jl
dec
inc
or
call
flds
aad
mov
addb
jb
mov
add
fnsave
dec
mov
cmp
push
mov
in
imul
mov
lods
test
mov
push
mov
nop
leave
jmp
add
add
lods
outsb
cmp
push
mov
nop
leave
jmp
xchg
add
or
mov
mov
inc
add
add
das
add
call
add
xor
add
clc
repnz
nop
cld
jae
add
negb
dec
add
inc
roll
xchg
ret
and
add
add
repnz
nop
cld
jae
das
add
inc
add
clc
repnz
nop
cld
jae
add
orl
mov
nop
leave
jmp
add
ret
pushf
add
clc
repnz
nop
cld
jae
add
add
mov
lea
push
mov
nop
leave
jmp
nop
add
or
out
lods
clc
repnz
nop
cld
jae
jp
add
mov
mov
mov
clc
repnz
nop
cld
jae
mov
ljmp
in
add
fwait
incb
add
add
add
jmp
dec
push
clc
repnz
nop
cld
jae
add
and
add
mov
clc
repnz
nop
cld
jae
lahf
add
aam
test
push
mov
nop
leave
jmp
add
inc
add
cmp
rclb
xor
inc
add
inc
add
jp
call
in
add
clc
repnz
nop
cld
jae
lods
add
outsl
pop
clc
repnz
nop
cld
jae
addl
add
cs
clc
repnz
nop
cld
jae
jmp
push
mov
call
clc
repnz
nop
cld
jae
sbb
add
pop
add
dec
imul
leave
jmp
pop
add
add
mov
clc
repnz
nop
cld
jae
xchg
add
add
mov
les
clc
repnz
nop
cld
jae
add
loop
jmp
add
cmp
test
repnz
nop
cld
jae
in
add
ljmp
jmp
add
outsl
add
push
add
dec
or
in
nop
leave
jmp
sbb
mov
add
mov
add
cmp
dec
inc
pop
nop
das
jp
add
scas
add
clc
repnz
nop
cld
jae
add
fwait
mov
add
inc
ljmp
nop
cld
jae
add
outsl
incb
mov
add
add
repnz
nop
cld
jae
add
incb
cmp
inc
add
addl
xchg
mov
add
push
mov
nop
leave
jmp
jae
movsb
xorl
in
nop
leave
jmp
add
cmp
jp
call
push
push
mov
xchg
ret
add
add
or
cmp
inc
xor
mov
push
add
and
clc
repnz
nop
cld
jae
add
add
loop
and
cld
jne
push
mov
nop
leave
jmp
sbb
nop
add
mov
clc
repnz
nop
cld
jae
mov
or
repnz
nop
cld
jae
cmpsb
xchg
add
fwait
add
add
push
push
mov
xchg
ret
add
pop
add
push
xchg
pop
or
or
repnz
nop
cld
jae
or
nop
add
cmp
rep
push
mov
into
lds
add
add
add
dec
out
inc
add
xchg
add
add
mov
clc
repnz
nop
cld
jae
add
cli
call
clc
repnz
nop
cld
jae
add
outsb
xchg
dec
push
push
mov
xchg
ret
lahf
add
inc
inc
shl
clc
repnz
nop
cld
jae
pop
int
fwait
in
repz
lods
jne
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
jp
or
test
pop
add
clc
repnz
nop
cld
jae
add
or
mov
clc
repnz
nop
cld
jae
cmpsb
add
and
insb
inc
jb
clc
repnz
nop
cld
jae
in
mov
repnz
nop
cld
jae
or
outsl
jp
test
adc
das
iret
mov
inc
add
sahf
mov
inc
mov
and
repnz
nop
cld
jae
lods
testl
push
mov
mov
xor
idivl
xchg
add
push
push
mov
nop
leave
jmp
add
sbb
mov
rclb
stc
inc
add
add
add
in
imul
jae
add
jae
add
inc
add
mov
add
repnz
nop
cld
jae
add
outsl
pop
addr16
repnz
nop
cld
jae
mov
cmp
je
clc
repnz
nop
cld
jae
push
mov
mov
repnz
nop
cld
jae
nop
push
jmp
call
nop
cld
jae
add
nop
or
add
add
repz
lea
aam
add
outsb
xchg
ljmp
push
mov
xchg
ret
jp
test
test
add
into
ror
push
mov
xchg
ret
mov
sbb
add
mov
xchg
ret
add
push
add
pop
add
movsb
jge
ret
mov
nop
leave
jmp
add
lods
sub
add
mov
repnz
nop
cld
jae
add
fwait
das
add
add
inc
push
mov
nop
leave
jmp
add
add
mov
mov
push
clc
repnz
nop
cld
jae
add
in
sahf
xor
jmp
incl
mov
pop
cmpsb
add
add
stos
add
clc
repnz
nop
cld
jae
mov
sbb
inc
sbb
add
repnz
nop
cld
jae
add
pop
jmp
push
mov
nop
leave
jmp
mov
add
add
fwait
das
mov
subl
nop
cld
jae
inc
add
cmp
sbbl
push
mov
nop
leave
jmp
int
mov
add
clc
repnz
nop
cld
jae
add
dec
dec
nop
add
ret
pop
xor
add
add
std
add
nop
jbe
sbb
repnz
nop
cld
jae
xchg
add
add
fnstsw
clc
repnz
nop
cld
jae
mov
mov
push
mov
xchg
ret
outsl
ss
cmp
mov
jne
clc
repnz
nop
cld
jae
push
das
idivl
shrl
repnz
nop
cld
jae
add
add
test
mov
nop
leave
jmp
xchg
pop
xchg
nop
mov
mov
nop
leave
jmp
add
or
das
mov
call
clc
repnz
nop
cld
jae
mov
xchg
clc
repnz
nop
cld
jae
adcl
dec
cld
add
clc
repnz
nop
cld
jae
add
add
add
add
jno
add
mov
xchg
ret
add
or
adc
mov
sub
push
mov
nop
leave
jmp
sbb
and
add
add
and
and
clc
repnz
nop
cld
jae
add
add
cmpsb
sub
jmp
and
or
add
addl
in
nop
leave
jmp
mov
add
xchg
das
rcr
stos
clc
repnz
nop
cld
jae
add
add
ss
or
aaa
xor
mov
pusha
clc
repnz
nop
cld
jae
xor
mov
add
incb
cmp
in
scas
call
stos
add
in
add
inc
xchg
add
aam
ja
xor
push
mov
xchg
ret
add
add
add
add
nop
cld
jae
sbb
add
mov
mov
push
fcomi
movsb
push
mov
xchg
ret
mov
add
out
add
fcmovbe
inc
add
add
mov
outsb
sbb
ljmp
clc
repnz
nop
cld
jae
pop
sub
mov
xor
clc
repnz
nop
cld
jae
add
add
add
adc
repnz
nop
cld
jae
fwait
add
add
cli
add
clc
repnz
nop
cld
jae
or
cmpl
add
add
repnz
nop
cld
jae
or
test
loop
mov
push
mov
xchg
ret
mov
add
outsl
jmp
xchg
lea
push
add
add
add
das
add
testl
adc
repnz
nop
cld
jae
inc
pop
mov
add
pop
mov
clc
repnz
nop
cld
jae
filds
add
mov
andl
push
push
mov
nop
leave
jmp
testl
xchg
add
test
push
push
mov
nop
leave
jmp
add
mov
add
movsb
mov
and
mov
add
dec
add
addl
inc
fwait
sbb
std
je
clc
repnz
nop
cld
jae
add
add
in
mov
nop
nop
cld
jae
mov
cmp
mov
hlt
xor
mov
aam
movsl
daa
and
clc
repnz
nop
cld
jae
add
jp
sub
add
add
add
repnz
nop
cld
jae
add
inc
inc
add
jnp
jl
sbb
repnz
nop
cld
jae
add
add
add
jae
mov
add
add
add
add
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
testl
lock
dec
inc
clc
repnz
nop
cld
jae
pop
ljmp
add
sbb
or
and
testl
jne
clc
repnz
nop
cld
jae
add
mov
xchg
ret
dec
add
add
mov
push
mov
nop
leave
jmp
add
test
nop
in
push
push
mov
xchg
ret
or
int
add
xor
add
clc
repnz
nop
cld
jae
add
push
loope
add
add
nop
repz
xchg
inc
add
inc
push
mov
nop
leave
jmp
div
in
add
add
xchg
repnz
nop
cld
jae
add
lods
add
mov
push
mov
nop
leave
jmp
push
pop
nop
in
xchg
repnz
nop
cld
jae
or
or
and
mov
mov
xchg
ret
call
add
add
add
repnz
nop
cld
jae
outsl
add
add
add
add
clc
repnz
nop
cld
jae
sbbl
mov
dec
sub
clc
repnz
nop
cld
jae
mov
call
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
inc
add
push
add
add
clc
repnz
nop
cld
jae
incb
add
cmp
test
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
add
xor
nop
nop
cld
jae
sbb
add
xchg
in
jp
add
test
subl
jae
loop
sub
add
das
sub
sahf
or
add
repnz
nop
cld
jae
lods
testl
cvtps2pd
repnz
nop
cld
jae
mov
add
push
js
mov
xchg
ret
xchg
add
loop
add
shl
push
mov
xchg
ret
addl
addl
pusha
clc
repnz
nop
cld
jae
nop
lods
add
push
add
in
nop
leave
jmp
add
mov
pop
int
push
push
mov
xchg
ret
add
add
add
int
add
nop
nop
cld
jae
add
mov
int
outsb
or
push
mov
nop
leave
jmp
add
nop
add
icebp
ljmp
cli
inc
add
sbb
add
call
sbb
add
repnz
nop
cld
jae
add
add
pusha
push
mov
xchg
ret
add
add
add
outsl
and
jmp
push
cmpsb
push
add
xchg
add
repz
xorl
push
mov
nop
leave
jmp
or
mov
add
jg
clc
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
cmp
sbb
ss
lea
push
mov
xchg
ret
filds
add
add
mov
clc
repnz
nop
cld
jae
lods
add
int
jbe
clc
repnz
nop
cld
jae
pop
add
add
clc
repnz
nop
cld
jae
add
add
push
fcomip
sub
repnz
nop
cld
jae
call
add
add
je
clc
repnz
nop
cld
jae
das
call
mov
dec
jmp
add
ljmp
add
add
test
add
clc
repnz
nop
cld
jae
addl
leave
sub
in
nop
leave
jmp
or
pop
add
inc
call
leave
jmp
incb
add
addl
add
clc
repnz
nop
cld
jae
pop
add
add
leave
and
push
mov
xchg
ret
add
rcrl
popa
add
repnz
nop
cld
jae
or
nop
nop
mov
jbe
clc
repnz
nop
cld
jae
jae
add
pop
jmp
out
out
clc
clc
repnz
nop
cld
jae
mov
rep
clc
repnz
nop
cld
jae
add
in
add
imul
adc
add
ss
inc
mov
push
mov
xchg
ret
add
add
mov
push
mov
nop
leave
jmp
add
add
aas
les
clc
repnz
nop
cld
jae
add
int
jmp
mov
loop
clc
repnz
nop
cld
jae
add
add
movsb
add
cwtl
mov
clc
repnz
nop
cld
jae
in
add
mov
repnz
nop
cld
jae
pop
in
add
ljmp
clc
repnz
nop
cld
jae
loop
pop
mov
add
or
nop
cld
jae
add
add
ret
adc
or
xor
add
clc
repnz
nop
cld
jae
incb
push
clc
repnz
nop
cld
jae
or
jmp
or
or
repnz
nop
cld
jae
add
test
xchg
ss
mov
push
mov
nop
leave
jmp
lahf
add
out
mov
push
mov
xchg
ret
imull
add
aad
decl
push
mov
xchg
ret
sbb
sub
nop
nop
cld
jae
in
das
lahf
inc
add
fmull
nop
nop
cld
jae
add
xchg
pop
nop
add
add
add
repnz
add
fistps
fwait
add
and
mov
clc
repnz
nop
cld
jae
in
jp
pop
add
clc
repnz
nop
cld
jae
repz
mov
rolb
jge
mov
add
mov
nop
leave
jmp
xchg
add
add
adc
add
repnz
nop
cld
jae
mov
mov
push
push
mov
xchg
ret
int
int
pop
add
mov
mov
clc
repnz
nop
cld
jae
nop
add
sbb
repnz
nop
cld
jae
add
mov
mov
fldl
nop
testb
add
add
cltd
repnz
rol
push
mov
xchg
ret
add
add
add
sbb
jmp
ljmp
add
fwait
add
add
add
clc
repnz
nop
cld
jae
add
mov
dec
mov
push
mov
xchg
ret
or
add
add
add
rcrl
mov
nop
leave
jmp
or
or
fmull
nop
nop
cld
jae
mov
add
add
inc
mov
in
add
mov
mov
lret
and
cli
mov
add
add
push
mov
nop
leave
jmp
das
in
mov
popf
mov
clc
repnz
nop
cld
jae
loop
add
add
fadd
jmp
nop
cld
jae
add
add
pop
jp
add
push
mov
nop
leave
jmp
in
add
cmpsb
and
mov
cwtl
icebp
add
add
add
addb
inc
add
fcomps
jb
sbb
add
ret
sbb
sbb
add
in
nop
leave
jmp
addl
cmp
dec
or
push
mov
nop
leave
jmp
lahf
test
add
or
fiadds
xchg
ret
in
dec
cmp
mov
inc
filds
xchg
subl
push
mov
xchg
ret
cmp
cmc
cmp
nop
cld
jae
add
or
mov
clc
repnz
nop
cld
jae
add
mul
sbb
nop
nop
cld
jae
incb
addl
outsb
mov
and
imul
jmp
add
call
add
incb
add
mov
clc
repnz
nop
cld
jae
subl
add
add
repnz
nop
cld
jae
add
add
mov
xor
clc
repnz
nop
cld
jae
add
add
add
pop
push
push
mov
xchg
ret
add
inc
sub
cmp
nop
call
mov
xchg
ret
add
int
loop
add
push
ret
xchg
add
repnz
nop
cld
jae
lods
add
add
repnz
nop
cld
jae
add
add
fbld
mov
out
add
fwait
or
add
cmp
add
add
clc
repnz
nop
cld
jae
outsl
add
add
add
add
clc
repnz
nop
cld
jae
add
add
loop
stos
push
clc
repnz
nop
cld
jae
add
add
mov
pusha
add
nop
nop
cld
jae
add
add
sbb
mov
nop
nop
cld
jae
xchg
add
add
add
lret
in
add
pop
sub
xchg
xchg
add
push
repnz
sub
out
addr16
rep
push
mov
xchg
ret
add
mov
add
add
xchg
inc
add
rcll
cli
inc
add
and
negl
add
hlt
and
mov
push
dec
rep
clc
repnz
nop
cld
jae
inc
add
add
lahf
or
pop
mov
push
mov
xchg
ret
movsb
add
pop
clc
repnz
nop
cld
jae
int
add
add
sbbl
clc
repnz
nop
cld
jae
xchg
int
add
add
push
push
mov
nop
leave
jmp
add
cmp
cmp
add
jne
je
repnz
nop
cld
jae
sub
loop
cmp
nop
cld
jae
test
nop
sbb
int
lods
push
push
mov
xchg
ret
add
add
add
add
nop
nop
cld
jae
add
add
add
mov
xchg
ret
jp
mov
add
in
fwait
mov
push
mov
xchg
ret
add
add
mov
xchg
ret
in
add
mov
add
or
dec
pusha
clc
repnz
nop
cld
jae
add
cmp
in
mov
repnz
call
in
nop
leave
jmp
jmp
add
dec
call
add
clc
repnz
nop
cld
jae
add
add
pusha
clc
repnz
nop
cld
jae
add
add
nop
add
xor
nop
clc
repnz
nop
cld
jae
cmp
add
sbb
popa
add
mov
xchg
ret
pop
or
jae
sbb
mov
add
clc
repnz
nop
cld
jae
add
fisttps
mov
xor
clc
repnz
nop
cld
jae
ljmp
add
clc
repnz
nop
cld
jae
lods
inc
jmp
sub
adc
mov
xchg
ret
lahf
add
outsb
add
outsl
add
mov
jmp
jmp
or
jp
orl
and
repnz
nop
cld
jae
add
jp
add
jne
push
mov
nop
leave
jmp
inc
int
or
insl
pusha
clc
repnz
nop
cld
jae
inc
jmp
add
xor
push
mov
nop
leave
jmp
add
add
jns
stos
sbb
add
add
das
xchg
lahf
add
nop
add
test
push
mov
nop
leave
jmp
xor
cmp
add
int
mov
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
fistpll
int
add
int
add
in
nop
leave
jmp
or
add
repnz
nop
cld
jae
add
add
xrelease
js
push
mov
nop
leave
jmp
in
lods
xor
or
add
lcall
cld
jae
add
in
xchg
add
mov
xchg
ret
inc
cmp
aaa
dec
not
clc
repnz
nop
cld
jae
add
add
int
add
clc
repnz
nop
cld
jae
add
mov
mov
add
aaa
fwait
shr
clc
repnz
nop
cld
jae
das
add
push
clc
repnz
nop
cld
jae
lahf
add
fwait
xchg
int
add
mov
repz
mov
xchg
ret
cmpsb
cmpsb
mov
fists
push
add
clc
repnz
nop
cld
jae
xorl
pop
add
clc
repnz
nop
cld
jae
xchg
add
lods
mov
or
out
into
inc
add
int
add
add
clc
repnz
nop
cld
jae
inc
inc
add
cmpl
hlt
inc
add
add
ljmp
cmp
inc
cld
clc
repnz
nop
cld
jae
test
loop
js
dec
cmp
repnz
nop
cld
jae
dec
jp
add
lods
and
mov
cmpl
push
mov
nop
leave
jmp
mov
in
mov
inc
lret
or
inc
add
outsb
outsl
add
add
icebp
mov
cmpl
push
mov
nop
leave
jmp
add
add
nop
outsb
pushf
cmpl
push
mov
nop
leave
jmp
nop
add
mov
mov
pushf
mov
clc
repnz
nop
cld
jae
movsb
add
add
clc
repnz
nop
cld
jae
add
add
rclb
out
add
nop
add
add
repnz
nop
cld
jae
add
add
add
xor
mov
nop
nop
cld
jae
sbb
add
nop
add
push
mov
nop
leave
jmp
ss
subl
jge
clc
repnz
nop
cld
jae
add
add
add
push
xchg
sti
add
push
mov
xchg
ret
add
int
in
cmpsb
push
push
mov
xchg
ret
add
int
add
xchg
add
jno
push
mov
nop
leave
jmp
addl
repnz
nop
cld
jae
loop
mov
pop
ljmp
sti
push
mov
nop
leave
jmp
add
lahf
in
mov
outsl
push
push
mov
nop
leave
jmp
add
add
push
mov
nop
leave
jmp
add
call
and
add
out
inc
add
add
cmpsb
inc
sub
fistps
mov
clc
repnz
nop
cld
jae
add
add
add
nop
fnstcw
push
mov
nop
leave
jmp
add
add
test
mov
xchg
ret
call
add
add
push
clc
repnz
nop
cld
jae
incb
mov
outsb
add
add
jne
clc
repnz
nop
cld
jae
testl
repnz
nop
cld
jae
add
fwait
add
add
xchg
add
clc
repnz
nop
cld
jae
add
add
pop
mov
addb
ljmp
jae
ss
add
add
mov
clc
repnz
nop
cld
jae
outsl
ljmp
mov
nop
nop
cld
jae
add
fwait
xchg
inc
xchg
add
mov
jge
push
mov
nop
leave
jmp
xchg
nop
repz
add
jns
movsl
clc
repnz
nop
cld
jae
outsl
in
add
movsb
mov
inc
and
repnz
nop
cld
jae
jp
add
add
mov
cmpw
push
mov
nop
leave
jmp
nop
add
int
pop
imul
clc
repnz
nop
cld
jae
loop
add
subl
pop
push
mov
mov
inc
add
dec
cmp
add
ficoml
add
int3
sub
jmp
add
add
add
pop
and
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
add
add
inc
add
sub
in
nop
leave
jmp
nop
jae
add
repz
add
outsl
flds
xchg
ret
dec
xor
imull
and
iret
pushl
push
mov
xchg
ret
mov
add
dec
loop
jns
clc
repnz
nop
cld
jae
add
add
cmp
nop
nop
cld
jae
int
add
push
mov
xchg
ret
add
add
add
add
push
push
mov
xchg
ret
cmp
add
and
add
lea
clc
repnz
nop
cld
jae
add
add
add
xchg
add
pusha
add
xor
clc
repnz
nop
cld
jae
sbb
add
add
rolb
mov
push
push
mov
xchg
ret
outsl
add
lahf
sub
nop
lahf
add
pop
clc
repnz
nop
cld
jae
add
inc
dec
jae
add
add
nop
nop
cld
jae
sbb
add
mov
add
repnz
nop
cld
jae
add
add
add
xchg
aaa
jmp
pop
add
add
ss
nop
xor
jmp
xchg
dec
mov
push
mov
xchg
ret
in
cmp
cmpsb
add
sti
add
add
in
nop
leave
jmp
xchg
add
add
mov
push
mov
xchg
ret
add
add
add
sbb
repnz
nop
cld
jae
add
inc
add
push
lock
mov
xchg
ret
fwait
loop
xchg
dec
jp
call
push
clc
repnz
nop
cld
jae
add
cmp
addl
add
push
mov
nop
leave
jmp
add
cmpsb
iret
push
mov
pushf
and
push
add
add
add
add
add
add
adc
clc
repnz
nop
cld
jae
xchg
add
add
pop
clc
repnz
nop
cld
jae
xchg
sub
add
cld
or
nop
leave
jmp
add
fisttps
add
mov
nop
leave
jmp
sbb
inc
mov
pushl
clc
repnz
nop
cld
jae
addl
dec
mov
clc
repnz
nop
cld
jae
xchg
add
or
clc
repnz
nop
cld
jae
mov
mov
nop
leave
jmp
add
lods
sub
add
imul
push
mov
nop
leave
jmp
add
and
loope
ret
clc
repnz
nop
cld
jae
repz
cmp
add
orl
inc
add
add
pop
add
sub
add
inc
mov
clc
repnz
nop
cld
jae
inc
pop
mov
pop
add
push
mov
nop
leave
jmp
add
add
add
add
or
mov
xchg
ret
sbb
testl
add
jnp
push
mov
nop
leave
jmp
inc
mov
movsb
add
mov
clc
repnz
nop
cld
jae
jmp
ljmp
repz
mov
nop
leave
jmp
add
cmpsb
lods
mov
mov
repnz
nop
cld
jae
add
inc
inc
int
or
in
nop
leave
jmp
add
int
mov
pop
jmp
jp
add
xchg
cmp
nop
add
cmp
div
clc
repnz
nop
cld
jae
add
add
popa
test
push
mov
clc
repnz
nop
cld
jae
add
mov
fbld
mov
nop
leave
jmp
add
add
call
adc
mov
jl
movb
add
push
mov
nop
leave
jmp
cmpsb
cmp
test
add
in
nop
leave
jmp
add
in
jmp
add
push
mov
nop
leave
jmp
add
add
pop
mov
mov
push
mov
nop
leave
jmp
add
add
cmp
int
xchg
sbb
or
clc
repnz
nop
cld
jae
add
add
das
pop
add
clc
repnz
nop
cld
jae
pop
add
sub
add
mov
imul
clc
repnz
nop
cld
jae
ljmp
xor
mov
popa
sbb
ret
add
mov
inc
add
add
test
add
mov
stos
mov
clc
repnz
nop
cld
jae
add
sub
nop
leave
jmp
add
lods
sbb
mov
clc
repnz
nop
cld
jae
in
xchg
repz
daa
dec
mov
push
mov
nop
leave
jmp
add
xlat
jnp
test
in
clc
repnz
nop
cld
jae
add
add
mov
mov
clc
repnz
nop
cld
jae
cmpsb
movsb
add
add
or
add
in
nop
leave
jmp
test
adcl
mov
add
clc
repnz
nop
cld
jae
mov
add
sldt
xchg
mov
ss
add
add
add
jbe
add
clc
repnz
nop
cld
jae
add
add
add
int
mov
add
int
or
add
mov
clc
repnz
nop
cld
jae
nop
mov
imul
int3
or
loop
leave
add
popf
shlb
jmp
add
add
movsb
mov
mov
inc
mov
jg
clc
repnz
nop
cld
jae
mov
outsb
add
faddl
xchg
ret
add
in
xor
jmp
add
mov
xchg
ret
movsb
pause
add
add
xor
push
mov
xchg
ret
int
add
nop
outsb
add
aas
pop
push
mov
xchg
ret
add
addl
add
push
add
in
xchg
add
pop
mov
loop
mov
jne
push
mov
xchg
ret
or
xchg
movsb
mov
nop
nop
cld
jae
fwait
pop
inc
jp
in
jo
mov
adc
repnz
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
testl
add
movsl
rolb
mov
and
clc
repnz
nop
cld
jae
add
jp
das
add
ret
clc
repnz
nop
cld
jae
pop
lods
add
repz
in
mov
clc
repnz
nop
cld
jae
add
outsl
add
add
clc
repnz
nop
cld
jae
nop
int
nop
add
sbb
dec
push
mov
nop
leave
jmp
mov
mov
addb
imul
push
mov
xchg
ret
addl
push
add
adc
add
add
in
nop
leave
jmp
add
loop
jmp
pop
call
in
nop
leave
jmp
add
add
push
sbb
in
nop
leave
jmp
xchg
ss
loop
mov
mov
push
mov
xchg
ret
divl
add
push
clc
repnz
nop
cld
jae
add
add
call
in
nop
leave
jmp
add
mov
mov
add
add
repnz
nop
cld
jae
inc
mov
push
clc
repnz
nop
cld
jae
call
clc
repnz
nop
cld
jae
add
pop
fwait
outsb
inc
add
add
clc
repnz
nop
cld
jae
mov
and
add
mov
nop
leave
jmp
add
testl
add
clc
repnz
nop
cld
jae
add
add
nop
sbb
lea
push
mov
nop
leave
jmp
pop
add
ljmp
add
clc
repnz
nop
cld
jae
fwait
pop
dec
add
in
add
repnz
nop
cld
jae
add
inc
sbb
xchg
fadds
xchg
ret
in
add
int
repz
mov
clc
repnz
nop
cld
jae
add
call
clc
repnz
nop
cld
jae
mov
insb
cmp
push
mov
nop
leave
jmp
outsl
add
or
cmp
clc
repnz
nop
cld
jae
outsl
add
repnz
nop
cld
jae
fisttps
cmp
sub
add
mov
push
mov
xchg
ret
and
add
testl
push
mov
nop
leave
jmp
add
inc
add
add
mov
xchg
ret
jmp
add
in
pop
inc
and
call
push
mov
nop
leave
jmp
add
add
push
mov
xchg
ret
add
add
lahf
add
mov
push
stc
inc
add
add
add
add
add
mov
cmp
inc
cmp
repnz
nop
cld
jae
add
outsb
mov
dec
add
repnz
nop
cld
jae
lahf
sbb
add
mov
xchg
ret
add
loop
movsb
ljmp
add
hlt
cli
and
add
cld
mov
push
mov
xchg
ret
in
fwait
call
mov
add
push
mov
xchg
ret
add
in
in
sbb
add
push
add
clc
repnz
nop
cld
jae
add
and
clc
repnz
nop
cld
jae
add
add
and
cmp
subl
clc
repnz
nop
cld
jae
jae
add
add
nop
cld
jae
or
outsb
add
nop
outsb
mov
mov
add
sbb
and
clc
repnz
nop
cld
jae
add
add
add
movsb
xchg
push
les
mov
or
add
repnz
nop
cld
jae
loop
imul
and
int
dec
add
mov
nop
leave
jmp
add
add
add
add
cs
clc
repnz
nop
cld
jae
inc
nop
add
inc
sbb
inc
scas
mov
clc
repnz
nop
cld
jae
nop
ljmp
mov
sbb
inc
mov
add
add
push
mov
xchg
ret
add
filds
add
fisubl
popa
add
mov
xchg
ret
cmp
pop
lods
add
aas
clc
repnz
nop
cld
jae
add
add
add
or
clc
repnz
nop
cld
jae
xchg
add
add
adc
mov
clc
repnz
nop
cld
jae
fwait
jae
xor
add
gs
sbb
mov
xchg
ret
add
dec
shr
push
mov
nop
leave
jmp
and
add
testl
cmp
repnz
nop
cld
jae
jp
test
or
add
sar
repnz
nop
cld
jae
add
call
lock
sbb
cmp
ret
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
imul
insb
insb
push
mov
nop
leave
jmp
xchg
or
repnz
nop
cld
jae
xchg
nop
add
sub
clc
repnz
nop
cld
jae
add
int
jmp
and
clc
repnz
nop
cld
jae
add
push
js
sar
nop
nop
cld
jae
jp
mov
cmc
frstor
repnz
nop
cld
jae
add
add
sbb
mov
sub
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
add
pop
add
movsb
dec
inc
push
mov
xchg
ret
mov
add
inc
and
int
dec
push
clc
repnz
nop
cld
jae
or
ljmp
pushl
clc
repnz
nop
cld
jae
inc
loop
mov
mov
andl
nop
cld
jae
add
add
xor
jne
clc
repnz
nop
cld
jae
fistpll
xor
add
push
mov
xchg
ret
add
ss
dec
out
pop
clc
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
add
pop
add
adc
mov
add
clc
repnz
nop
cld
jae
add
fwait
addl
push
push
push
mov
xchg
ret
sbb
xchg
add
push
out
push
clc
repnz
nop
cld
jae
inc
incb
add
repz
repnz
nop
cld
jae
inc
lahf
in
mov
cmpsb
push
mov
push
mov
nop
leave
jmp
ljmp
jmp
nop
cld
jae
xchg
or
loop
mov
int
pop
jae
repnz
nop
cld
jae
add
or
lea
nop
nop
cld
jae
add
dec
addl
repnz
nop
cld
jae
negl
add
push
scas
add
clc
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
add
mov
nop
cld
jae
inc
add
push
add
mull
mov
nop
leave
jmp
add
int
mov
clc
repnz
nop
cld
jae
add
ljmp
cmpsb
xor
push
clc
repnz
nop
cld
jae
lahf
pop
add
adc
repnz
nop
cld
jae
sbbl
pop
stos
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
int
lods
add
add
nop
nop
cld
jae
add
xor
in
mov
clc
repnz
nop
cld
jae
add
add
jmp
test
cmp
mov
fcos
clc
repnz
nop
cld
jae
loop
xchg
inc
js
mov
push
mov
nop
leave
jmp
mov
popa
add
mov
xchg
ret
int
add
jae
es
clc
repnz
nop
cld
jae
movsb
jb
mov
add
nop
nop
cld
jae
add
test
add
add
xchg
pop
xor
push
mov
nop
leave
jmp
lahf
add
int
add
jmp
mov
clc
repnz
nop
cld
jae
in
inc
jae
pop
cmp
jmp
sbb
mov
test
add
add
pop
inc
inc
push
nop
nop
cld
jae
add
xchg
jae
in
lds
inc
and
clc
repnz
nop
cld
jae
add
add
or
mov
add
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
pop
mov
add
push
mov
nop
leave
jmp
inc
mov
inc
add
repz
clc
repnz
nop
cld
jae
nop
add
add
jmp
nop
nop
cld
jae
add
int
aad
push
loopne
mov
mov
add
add
mov
xor
add
repnz
nop
cld
jae
outsb
fists
mov
xchg
xor
nop
nop
cld
jae
mov
inc
add
add
or
pop
cmp
mov
xchg
ret
add
nop
add
jne
clc
repnz
nop
cld
jae
sub
sub
aad
inc
add
imull
ds
clc
repnz
nop
cld
jae
pop
in
addl
fildl
add
repnz
nop
cld
jae
nop
int
add
push
mov
nop
leave
jmp
incb
ss
or
jae
pop
push
mov
xchg
ret
add
add
not
jo
mov
add
arpl
mov
nop
leave
jmp
movsb
cmp
add
ljmp
nop
nop
cld
jae
sub
add
add
jmp
mov
nop
leave
jmp
dec
add
ljmp
push
mov
xchg
ret
mov
sbbl
pop
mov
clc
repnz
nop
cld
jae
ss
push
lods
add
clc
repnz
nop
cld
jae
inc
movsb
add
incl
repz
repnz
nop
cld
jae
add
nop
fisubl
xor
add
clc
repnz
nop
cld
jae
int
lret
movzwl
clc
repnz
nop
cld
jae
mov
in
cmp
imul
nop
nop
cld
jae
pop
add
xchg
fwait
mov
clc
repnz
nop
cld
jae
int
idivl
mov
pop
mov
clc
repnz
nop
cld
jae
pop
add
push
mov
xchg
ret
push
das
xchg
sub
mov
out
add
clc
repnz
nop
cld
jae
cmpsb
lahf
add
in
lea
push
mov
xchg
ret
add
jmp
int
add
fcoml
and
cmp
ret
add
add
jae
add
add
movzwl
push
mov
nop
leave
jmp
add
call
insb
push
clc
repnz
nop
cld
jae
cmp
pop
mov
mov
mov
xchg
ret
add
add
cmp
add
sahf
ja
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
cmp
add
add
test
xchg
loop
mov
mov
add
clc
repnz
nop
cld
jae
add
add
test
iret
add
push
mov
nop
leave
jmp
add
add
add
inc
lahf
mov
push
mov
xchg
ret
or
add
add
pop
push
mov
nop
leave
jmp
pop
ss
repz
add
jne
push
mov
nop
leave
jmp
ljmp
aam
pop
clc
repnz
nop
cld
jae
call
outsb
add
dec
mov
push
mov
xchg
ret
sbb
cmp
add
das
mov
popa
add
mov
xchg
ret
add
add
add
icebp
bound
mov
push
push
mov
xchg
ret
add
testl
adc
pushl
push
mov
xchg
ret
xchg
loop
xchg
fwait
lahf
pop
adc
push
mov
xchg
ret
inc
xchg
add
xor
add
ljmp
jae
add
add
xchg
clc
repnz
nop
cld
jae
add
xchg
or
repnz
nop
cld
jae
mov
add
xor
clc
repnz
nop
cld
jae
xchg
add
or
call
in
nop
leave
jmp
mov
rolb
mov
leave
push
mov
xchg
ret
xchg
add
mov
das
add
aas
movswl
clc
repnz
nop
cld
jae
add
outsb
add
addb
rolb
mov
push
mov
xchg
ret
repz
das
mov
clc
repnz
nop
cld
jae
incb
loop
add
addl
push
fisttps
in
nop
leave
jmp
add
add
lret
push
mov
xchg
ret
nop
add
add
add
nop
nop
cld
jae
add
add
add
add
sub
leave
inc
add
fwait
add
mov
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
add
inc
add
inc
add
in
in
add
lods
lea
clc
repnz
nop
cld
jae
add
xor
aas
xor
push
mov
nop
leave
jmp
nop
add
add
jg
clc
push
mov
nop
leave
jmp
in
add
push
mov
addr16
add
nop
nop
cld
jae
sbb
cmp
sbbl
repnz
nop
cld
jae
add
xchg
clc
repnz
nop
cld
jae
negl
mov
push
clc
repnz
nop
cld
jae
cmp
jp
inc
nop
add
out
jmp
add
add
add
outsl
add
fwait
or
mov
pop
clc
mov
push
mov
nop
leave
jmp
lods
add
je
mov
mov
xchg
ret
add
or
ss
nop
inc
pop
stos
pop
clc
repnz
nop
cld
jae
pop
nop
incb
fbld
add
push
mov
nop
leave
jmp
add
add
add
push
clc
repnz
nop
cld
jae
add
and
sbb
repnz
nop
cld
jae
loop
add
add
add
cltd
add
clc
repnz
nop
cld
jae
addl
add
add
repnz
nop
cld
jae
inc
add
repnz
nop
cld
jae
mov
dec
add
addb
outsl
lea
push
mov
xchg
ret
add
jp
add
fistpll
clc
repnz
nop
cld
jae
add
or
inc
add
add
ss
sub
clc
repnz
nop
cld
jae
add
notb
adc
arpl
movzwl
push
mov
nop
leave
jmp
sbb
pop
ljmp
mov
clc
repnz
nop
cld
jae
mov
mov
sub
add
clc
repnz
nop
cld
jae
add
add
ljmp
cld
jae
in
cmp
nop
nop
xchg
shrl
test
clc
clc
repnz
nop
cld
jae
push
add
add
clc
repnz
nop
cld
jae
inc
int
add
push
mov
add
inc
add
xchg
jb
jb
adc
sbb
lcall
sub
enter
and
inc
std
inc
sti
xchg
pop
dec
jb
mov
nop
add
loope
rolb
mov
push
stos
sub
nop
add
push
mov
addb
lahf
movsb
inc
aam
addb
sub
test
pop
push
ret
sahf
lods
mov
stos
ss
push
lods
dec
lret
mov
ds
movsl
push
add
adc
mov
and
xorl
stos
push
cld
mov
pushf
pop
rolb
mov
sbb
addb
loope
adc
mov
xchg
add
clc
cmpsl
addb
push
jecxz
in
aas
jg
xchg
jg
insb
rolb
mov
fiaddl
pushl
fmuls
mov
mov
mov
mov
out
mov
in
lods
loope
loop
mov
fs
cli
mov
cmpsb
or
add
scas
pop
mov
push
add
loop
mov
insb
inc
add
jg
add
and
add
jge
std
into
pop
xchg
arpl
test
mov
aas
inc
dec
lret
testb
pop
dec
sbb
imul
mov
push
test
mov
mov
iret
fcomip
add
sbb
cs
xor
add
loop
mov
adc
fcmove
adc
mov
jb
mov
cld
rolb
mov
add
ljmp
and
dec
loope
mov
insb
xor
fnstenv
dec
mov
dec
clc
insb
xchg
jb
mov
add
sar
dec
add
mov
test
out
or
sub
and
mov
fnstcw
add
dec
push
cli
inc
add
in
add
dec
movsl
mov
cmp
pop
push
daa
jl
jmp
mov
cli
adc
xor
lcall
std
rolb
jg
mov
loopne
mov
add
mov
mov
xchg
add
xlat
bound
mov
push
add
adc
mov
pop
popf
icebp
jne
jg
sub
add
mov
add
add
mov
sbb
mov
adc
fiaddl
sbb
sbb
fiaddl
add
mov
push
cs
pop
sahf
add
mov
xlat
insl
sahf
or
repz
cmp
mov
mov
lahf
adc
mov
cmp
or
add
out
fimuls
xor
add
lcall
sbb
xchg
scas
push
dec
repnz
add
sub
sbb
jns
push
push
xchg
add
jne
fidivs
lcall
lret
icebp
xchg
add
pop
add
mov
adc
mov
lret
cmp
cmp
add
insl
cmp
add
mov
test
sub
ss
inc
addb
je
lds
pmulhuw
xchg
push
jl
add
adc
stos
inc
jmp
mov
lret
mov
cmp
rolb
mov
sbb
mov
fldenv
adc
jae
gs
in
xchg
arpl
cmp
sub
pop
cmp
mov
add
mov
mov
xor
mov
cmp
inc
mov
xor
mov
shrl
adc
sub
add
lods
fcoml
mov
lds
add
sub
pusha
add
mov
mov
prefetchnta
add
mov
frstor
sbb
mov
andl
ds
test
rolb
outsb
jnp
sub
fwait
sbb
pop
lea
xlat
insl
loop
mov
mov
pop
aaa
rolb
mov
aam
insl
jne
je
xlat
ret
sbb
add
stos
mov
int
dec
mov
mov
fistpll
cmc
mov
mov
aas
shll
lods
call
imul
mov
cwtl
push
push
fsubr
push
daa
fidivs
cmp
es
sbb
repz
out
add
cmp
add
dec
or
repz
ffree
add
push
rcll
jb
mov
mov
xor
mov
icebp
mov
mov
imul
sub
add
cmp
add
cltd
dec
xor
or
add
imul
insl
xlat
test
testl
enter
insb
sbb
mov
add
clc
enter
sub
cmp
dec
and
fs
bound
mov
into
mov
mov
leave
outsl
cli
inc
fs
sbb
mov
add
frstor
xchg
rolb
mov
jae
in
daa
add
add
mov
mov
lret
add
mov
lret
pop
fbld
loope
add
xchg
sub
test
pop
rorl
mov
sbb
xor
mov
sti
sub
add
mov
dec
cmp
icebp
pop
int
inc
je
xchg
loope
mov
mov
add
mov
mov
mov
jle
add
jl
ret
test
addb
sti
inc
call
mov
rolb
mov
scas
or
jecxz
call
ds
jne
lret
test
adc
mov
fimuls
jecxz
mov
mov
loopne
mov
fucomp
push
movsb
xor
mov
in
push
dec
ja
sub
in
ret
jmp
cmp
add
cli
movsl
xchg
outsl
nop
add
mov
das
fxch
fadd
int3
jl
and
add
test
pop
adc
mov
inc
cld
and
lea
jmp
addr16
ja
repz
stos
pop
daa
hlt
push
pop
or
cmp
add
mov
lcall
push
bound
mov
iret
jl
or
sti
dec
jmp
add
jb
mov
mov
dec
dec
or
fmuls
insl
in
cs
loope
and
mov
mov
mov
mov
fisttpll
jbe
sub
pop
jae
xor
test
mov
mov
mov
inc
add
into
dec
cmp
add
sbb
cli
dec
roll
add
sub
loop
mov
xchg
add
add
add
cmp
out
popa
inc
adc
mov
mov
sub
add
add
push
add
sub
mov
pop
sbb
xor
mov
xchg
cltd
je
inc
testl
mov
clc
xor
mov
jbe
add
gs
push
add
iret
ss
jp
pushf
xor
add
push
and
xchg
add
jmp
jle
lods
out
push
mov
xor
mov
fnstsw
data16
cli
scas
jae
fs
imul
js
mov
sbb
rcr
add
int
add
mov
mov
xchg
decl
test
hlt
xor
mov
or
testl
mov
add
add
popf
and
lret
dec
xor
inc
add
or
mov
mov
stos
pop
xor
call
outsl
cmp
add
add
icebp
mov
mov
add
add
cmp
and
pop
fdivs
mov
fst
add
mov
jg
add
xchg
add
and
mov
mov
adc
mov
lock
gs
cmc
inc
add
rolb
mov
jecxz
imul
lods
lret
int3
inc
out
push
mov
mov
pop
jne
mov
inc
xchg
add
add
ficoml
mov
fisttpl
xchg
push
mov
and
mov
fisttpl
add
add
jb
mov
movsb
jno
mov
add
mov
outsl
shrl
nop
add
fists
rolb
lahf
xchg
fnstsw
and
mov
ficompl
rolb
mov
pusha
add
shrl
mov
mov
xor
add
xorl
add
repz
mov
mov
lahf
aad
add
inc
add
xchg
out
dec
ja
add
pop
ret
sbb
aad
push
jne
dec
loopne
mov
adc
mov
popf
int3
xor
and
dec
pop
sub
ds
outsl
aad
push
xor
outsl
nop
add
jge
mov
mov
add
mov
sub
mov
and
mov
add
dec
sbb
mov
mov
addb
fcomps
dec
sub
es
push
aas
fucomi
rcr
nop
add
mov
int3
mov
push
mov
inc
addb
xor
mov
add
mov
xchg
sbb
add
std
ss
lock
cltd
sub
push
dec
xor
mov
mov
nop
add
adcl
into
dec
xchg
lret
mov
mov
mov
mov
xor
sub
fmuls
add
outsb
sbb
lods
pusha
add
mov
add
rolb
in
gs
lods
ljmp
sbb
pushf
les
in
in
insl
iret
addl
jnp
mull
mov
repnz
rolb
je
sbb
repz
pop
loop
mov
add
push
sti
lret
rolb
mov
xchg
aad
rolb
mov
les
push
call
lcall
pop
sysenter
pop
dec
pop
sub
inc
add
inc
in
add
mov
cmp
add
aaa
mov
repnz
or
das
mov
nop
add
cmpsl
push
jo
mov
mov
pop
xchg
xor
shll
rolb
mov
mov
icebp
loopne
mov
xchg
mov
and
cmp
jl
mov
lret
or
inc
push
add
pop
notb
pop
das
xchg
xchg
adc
ljmp
hlt
in
fdivl
mov
and
xchg
or
test
add
lret
pop
push
pop
sub
mov
mov
and
xor
mov
int
scas
inc
add
mov
xor
mov
add
mov
lock
add
mov
jnp
add
add
jb
mov
mov
jecxz
xor
mov
sub
cmp
sbb
xor
fiaddl
jnp
lcall
mov
mov
add
xchg
call
out
mov
dec
cmp
xor
add
call
mov
pop
das
mov
shr
jbe
pusha
add
stos
rcll
loop
mov
les
and
mov
xchg
add
mov
push
in
imul
dec
xchg
lods
aam
data16
aas
cmp
sub
aaa
jge
pop
jb
mov
pop
mov
rolb
mov
push
adc
or
adc
in
scas
push
lea
test
xor
add
fwait
add
add
xchg
add
add
mov
mov
add
mov
les
push
add
scas
scas
aas
fsubr
or
add
pop
dec
movsb
lret
cmp
add
and
mov
jmp
add
mov
add
iret
jp
cmp
sbb
add
add
cmp
stos
loope
nop
add
add
add
add
add
pop
sbb
dec
sbb
rolb
stos
pushf
push
pop
push
scas
std
inc
fldenv
idivl
add
sbb
mov
int3
test
push
test
add
cltd
sub
outsl
int3
adc
sub
imul
popf
push
sub
push
push
dec
aaa
add
js
fidivl
cvtps2pi
sarl
test
mov
push
testl
jg
in
rcrl
dec
into
mov
orl
pusha
add
add
add
mov
adc
dec
push
sub
mov
out
dec
mov
add
filds
insb
mov
repz
mov
mov
insb
cli
and
mov
add
adc
or
imul
dec
js
cltd
gs
add
add
popa
mov
add
lock
addb
dec
fwait
arpl
test
dec
xchg
lret
cli
sub
pop
cltd
ficoml
add
cli
xchg
rolb
mov
pop
and
arpl
dec
xorl
adc
or
sbb
xor
test
imul
jb
mov
add
cmc
jnp
in
mov
outsb
cmc
repz
mov
push
int
dec
push
xor
mov
fdivs
cmp
pop
sub
lret
push
dec
push
add
adc
add
insb
out
in
mov
les
pop
repnz
mov
add
mov
mov
rolb
addb
jae
mov
jl
add
rolb
mov
add
div
cwtl
loope
xchg
push
add
clc
lea
or
or
push
repnz
sbb
mov
pusha
add
sub
incl
mov
insl
mov
mov
mov
inc
push
icebp
lcall
inc
in
push
sbb
repnz
out
push
add
addb
std
adc
incb
xor
sti
mov
fmulp
in
xor
sbb
repnz
add
sbb
lock
popa
out
jle
jb
mov
push
stos
inc
add
xchg
nop
add
and
and
and
mov
jae
out
lock
and
mov
and
add
inc
ljmp
nop
add
outsb
enter
cmp
push
add
pushf
xchg
mov
outsb
clc
dec
hlt
or
add
push
dec
loopne
mov
adc
lods
rcrl
push
rolb
test
repz
cwtl
push
fdivrl
fld1
das
sub
mov
ret
push
inc
add
add
mov
push
sbb
mov
mov
bound
mov
mov
dec
loope
loop
mov
sbb
or
push
adc
cltd
scas
ja
int3
fsubr
or
dec
les
rolb
mov
test
data16
test
sub
jge
cltd
jnp
xchg
dec
sbb
add
add
fs
push
xor
mov
add
ret
rolb
aaa
ffreep
add
jnp
cmp
outsl
jp
sub
test
arpl
xbegin
jmp
rolb
mov
push
dec
clc
outsb
icebp
dec
xchg
add
cmp
or
dec
mov
add
mov
fdiv
and
mov
add
mov
mov
inc
add
enter
xchg
add
jne
ja
sub
mov
mov
add
mov
mov
movsl
movsb
mov
add
mov
jbe
lahf
out
call
cmc
and
movl
cmpsl
push
ds
fisubrs
test
mov
fadds
dec
mov
test
pop
xchg
pop
js
lods
sbb
adc
inc
test
sub
adcl
arpl
jne
push
rolb
mov
mov
mov
cmovnp
mov
insl
sub
add
out
push
adc
imul
add
mov
arpl
xchg
and
jle
out
lcall
fisttpl
pop
jne
les
add
push
add
adc
mov
add
aam
jbe
cmc
adc
add
sbb
add
jecxz
mov
call
movb
mov
add
mov
mov
scas
pushf
divb
rolb
mov
jecxz
xchg
dec
cs
out
ljmp
rolb
mov
mov
das
push
add
inc
fucomi
lods
rolb
ficoms
push
mov
testb
mov
mov
enter
push
mov
test
mov
dec
xchg
pusha
add
add
mov
mov
dec
add
mov
mov
xlat
insb
pop
ja
mov
mov
jp
popf
mov
cmpsl
adc
mov
stc
jecxz
add
out
add
pop
or
test
and
mov
add
lret
cld
inc
or
pop
xchg
pushf
enter
mov
pop
sbbl
mov
cmp
loop
mov
push
repnz
jnp
out
push
sbb
jecxz
movsl
add
dec
test
pcmpeqb
xor
mov
jo
mov
jle
cmp
popf
and
mov
inc
fldenv
xor
and
add
aaa
mov
add
add
cmpsl
addb
pop
in
dec
push
sbb
inc
add
mov
xor
mov
cmp
inc
jle
push
xchg
mov
add
mov
and
ds
mov
add
or
in
jg
pop
flds
mov
xchg
add
sbb
or
add
add
mov
pop
aas
stc
push
inc
mov
add
mov
xchg
xchg
mov
rolb
addb
or
xorl
sti
mov
add
mov
add
and
movsl
outsl
js,pt
mov
or
popa
and
dec
pusha
add
sbb
and
xchg
add
cmp
out
lock
mov
shrl
sbb
stc
jnp
push
pop
into
popa
mov
add
in
fcom
add
inc
add
add
loop
mov
jp
outsb
rorl
fdivl
jle
mov
mov
rolb
mov
lods
mov
subl
movsl
enter
jne
inc
add
adc
mov
cld
mov
add
lea
add
hlt
cmpsl
dec
leave
xchg
push
and
add
fs
test
dec
rcr
mov
mov
add
out
pop
pop
xor
mov
push
jo
mov
adc
mov
jp
daa
pop
call
sbb
sbbl
in
iret
scas
lcall
dec
jl
mov
mov
or
mov
mov
xchg
int3
sub
int3
jmp
jae
gs
fldln2
leave
call
sbb
out
add
imul
or
add
adc
jge
add
push
jnp
sbb
enter
pop
dec
adc
sbb
adc
mov
dec
adc
mov
loopne
mov
iret
xchg
scas
ret
pop
repz
int3
pop
mov
push
les
mov
adc
mov
in
mov
mov
xlat
xchg
into
or
outsb
mov
and
add
loopne
mov
sub
popf
xlat
jmp
std
push
lds
cmpsl
iret
xor
add
xchg
add
pop
sti
popa
sbb
mov
fs
int
inc
add
rolb
mov
jmp
dec
mov
in
call
add
cld
or
test
shll
add
sbb
add
hlt
push
inc
cwtl
mov
jbe
dec
jbe
and
mov
cld
fxch
mov
add
push
std
arpl
add
addb
adc
xlat
hlt
xlat
popa
shrl
mov
das
jo
mov
add
add
je
cmp
mov
sub
dec
mov
mov
add
pusha
add
test
sub
jl
add
movsl
jge
scas
pop
mov
movsl
xchg
fdiv
adc
ds
push
or
mov
inc
add
add
pop
rolb
jg
push
jmp
cmp
add
mov
mov
movsb
adc
mov
push
or
je
add
lahf
jns
jle
cmp
add
sub
movsl
sbb
xchg
add
adc
mov
faddl
add
fdivrs
push
lcall
add
xor
mov
xchg
mov
mov
dec
mov
adc
mov
xlat
hlt
dec
sub
jo
mov
mov
add
add
cmp
pop
jne
adc
xorl
and
push
xorl
push
cltd
push
int3
rdtsc
stc
xchg
or
mov
xchg
jmp
shrl
sub
dec
imul
in
push
mov
add
mov
aad
and
out
movsl
icebp
dec
mov
push
hlt
sub
aam
lods
out
and
mov
ljmp
adc
push
jecxz
js,pn
add
add
int
in
ficomps
incl
mov
mov
and
add
outsb
mov
stc
inc
xchg
leave
stc
mov
lahf
mov
xchg
mov
jg
mov
mov
adc
movsl
jns
add
sbb
pop
scas
cmc
mov
std
mov
in
out
jae
sahf
add
mov
add
cmp
ss
aam
push
out
sbb
lods
jnp
fmull
sbb
mov
je
cmp
mov
mov
add
mov
mov
mov
sub
mov
insl
loop
mov
mov
add
push
xchg
pop
ds
add
mov
outsb
fnstenv
test
pop
xor
add
fld
mov
es
daa
lret
mov
mov
sub
pop
mov
stc
jbe
lcall
cwtl
movsb
repnz
cmp
cs
test
push
les
incb
add
and
shll
add
pushf
outsl
movsl
lahf
push
fimuls
sbb
sub
sub
hlt
pop
iret
stos
xchg
inc
repz
jns
out
push
lret
shll
mov
adc
aas
into
fsubrl
outsl
push
lea
mov
jbe
dec
dec
js
js
add
cli
xchg
mov
in
mov
xchg
mov
lock
insb
insl
fcompl
stos
add
addb
mov
test
inc
add
mov
xor
mov
inc
out
sub
test
mov
xchg
mov
into
push
jno
xlat
daa
test
std
pop
add
mov
imul
cmp
add
gs
scas
xor
mov
fcmovnb
add
mov
xchg
push
add
lea
fdiv
lods
sub
push
push
dec
movsb
xor
dec
xchg
cmp
sub
cltd
jge
lret
in
sub
push
push
push
jg
jecxz
aam
sub
add
inc
pop
in
enter
push
add
mov
iret
push
adc
mov
mov
jmp
jl
outsb
cs
mov
adc
mov
add
sub
cmp
pop
popf
adc
aam
in
add
push
rolb
mov
or
sbb
jmp
add
mov
jle
push
movsw
adc
mov
or
jle
jg
add
mov
adc
sub
add
dec
jecxz
idivb
fildl
or
daa
cmp
fcmovb
addb
clc
adc
mov
add
add
add
mov
mov
out
rolb
cwtl
loop
mov
popf
xchg
pop
xor
add
adc
mov
add
stc
out
sbb
mov
ljmp
mov
xchg
psllq
ja
mov
sbb
mov
insl
or
lods
add
dec
and
mov
in
movsb
mov
cmp
add
mov
add
jecxz
fisttpl
lea
push
sub
rolb
mov
xchg
les
nop
add
scas
es
sti
mov
or
decb
jae
mov
mov
sbb
call
dec
cmp
dec
mov
xchg
cli
push
mov
pop
pop
and
mov
insl
push
jne
mov
dec
sbb
out
lds
rolb
pop
sbb
clc
sbb
inc
enter
pop
mov
pop
sbb
xchg
add
mov
fsts
mov
or
cmc
insl
outsl
adc
ds
or
cmpsl
pop
inc
jbe
lods
dec
xchg
movsb
sar
xchg
data16
faddl
out
cmp
lods
imul
fisubrs
addb
test
ss
clc
mov
jae
test
iret
mov
add
rolb
test
scas
dec
mov
add
lahf
xchg
out
repnz
cmp
aaa
or
scas
pop
into
or
je
stos
shll
add
sub
and
jne
enter
dec
xchg
push
add
add
mov
add
movsl
xor
mov
jecxz
xor
inc
gs
shll
add
daa
cmpsb
jo
mov
out
add
mov
and
mov
mov
rolb
out
inc
pop
cmpsl
ficompl
jp
mov
push
dec
inc
in
pop
cmp
cli
lock
stos
enter
jl
xor
leave
pop
scas
xchg
ficoml
inc
fcompl
pusha
add
pop
pop
popa
cs
in
mov
inc
imul
xlat
enter
lea
sbb
addr16
add
mov
push
add
clc
mov
lock
xor
add
gs
mov
mov
out
gs
cmpsl
sbb
mov
mov
dec
loop
mov
das
mov
push
pop
xchg
inc
push
imul
add
aam
xlat
cmp
addb
xor
mov
xchg
punpckldq
mov
cs
mov
mov
or
add
addb
jecxz
lea
fwait
lret
or
inc
add
add
add
ret
mov
pop
pushf
push
rolb
mov
xchg
xchg
data16
cmp
add
test
inc
add
sbb
and
mov
xchg
add
add
loope
xchg
inc
roll
ret
icebp
test
out
jmp
repz
data16
sbb
or
mov
js
lret
enter
rolb
loopne
mov
jae
sub
add
std
out
cmpsb
dec
mov
adc
mov
dec
dec
jge
lret
mov
mov
aas
xor
mov
cmp
xor
mov
and
add
mov
int3
pop
or
inc
mov
adc
mov
add
xlat
ret
test
add
pusha
add
jge
add
repnz
ja
add
lret
pusha
add
push
jne
adc
xor
sarl
xchg
fistps
out
xchg
sub
ficomps
loopne
mov
sahf
cmp
add
add
push
or
ficoms
cli
and
mov
aas
into
fcoms
mov
xor
scas
adc
mov
addb
push
and
xchg
mov
ret
jnp
test
add
xor
mov
add
in
fsubrs
frstor
rep
sbb
and
xchg
add
mov
fadds
mov
add
fisubl
sbb
test
add
add
adcl
cmc
insl
das
inc
sarl
mov
push
or
xor
lods
loopne
mov
or
nop
add
add
add
lock
faddl
pop
stos
insb
es
shll
or
pusha
add
xor
mov
test
testb
jno
lcall
popf
popl
add
frstor
add
inc
daa
add
or
ds
lock
mov
je
dec
roll
jl
add
addb
xchg
xchg
jo,pt
mov
push
cwtl
into
ja
int
add
subl
add
ds
jle
pop
cmpsb
mov
add
mov
aas
cmp
xchg
mov
mov
daa
inc
xchg
or
pop
pop
in
pop
pushf
adc
out
add
pop
data16
cmp
push
xchg
roll
lods
mov
mov
push
add
clc
movsb
and
xor
sub
lock
jmp
add
xlat
jg
add
mov
nop
add
add
mov
lea
xor
add
mov
add
mov
int3
sbb
sbb
and
sahf
sar
and
shll
pop
jge
and
enter
cmpsl
inc
popa
mov
in
lods
es
push
and
add
nop
add
cmp
cmp
pop
cmp
addb
arpl
add
int3
iret
lods
add
mov
pusha
add
into
fwait
jp
fs
dec
xchg
std
or
mov
ja
daa
out
and
cmp
mov
jae
push
movsb
sbb
out
mov
int3
mov
cwtl
into
and
sti
out
mov
les
repnz
add
push
add
jo
mov
adc
aam
add
mov
ret
xchg
aad
out
push
fmull
ret
mov
xor
mov
jecxz
addb
mov
push
add
push
cmp
add
add
cmp
std
addb
xor
add
cltd
xchg
xchg
hlt
jae
jb
mov
cld
rolb
icebp
xor
mov
outsb
dec
sub
sbb
or
mov
adc
ljmp
das
push
sarl
mov
xor
mov
repz
iret
push
rorl
je
bound
mov
stos
sub
or
mov
mov
xor
mov
add
sbb
add
adc
mov
mov
imul
xor
sti
mov
push
insl
adc
add
mov
mov
aad
mov
ds
push
xchg
cmp
adc
pop
outsl
and
cmc
xlat
aaa
mov
add
cltd
pop
cmp
and
fisubrs
mov
adc
mov
add
add
popf
into
mull
add
addb
fnsave
movsl
mov
nop
add
mov
dec
xor
mov
sub
enter
and
mov
add
add
add
push
lds
add
es
mov
add
gs
adc
xchg
gs
fwait
push
mov
pushl
mov
subl
adc
lods
jbe
ret
mov
add
pop
pop
enter
inc
pop
xchg
mov
ret
push
scas
xor
mov
fmul
xor
add
mov
pop
insl
and
bound
mov
adc
rolb
repnz
lock
inc
ds
jb
mov
mov
xor
movsl
inc
outsl
jo
mov
push
ret
lods
add
pop
lds
pop
push
fcomip
sub
movb
cwtl
jecxz
cmp
popf
dec
push
xchg
mov
or
insl
xor
loop
mov
cmp
fcmovnbe
pop
jb
mov
jbe
inc
arpl
push
movl
add
add
mov
and
mov
inc
add
arpl
fists
push
sub
xchg
pop
je
sbb
roll
lea
mov
sbb
inc
addb
lods
pop
mov
es
mov
fistps
fisttps
sti
fisttps
dec
out
jmp
push
fwait
ds
jno
fdivs
xchg
xchg
int3
adc
mov
mov
add
sti
mov
mov
data16
inc
jg
add
fnstsw
add
test
es
jnp
dec
cwtd
movsl
test
stc
jecxz
into
leave
xchg
mov
pushf
jmp
ss
flds
aam
mov
mov
mov
add
add
mov
loopne
mov
aaa
jno
add
and
sbb
dec
mov
imul
mov
jns
inc
sti
lods
add
mov
mov
push
jb
mov
push
idivb
jmp
sub
add
mov
call
push
addb
or
jle
add
and
mov
add
jl
test
push
cmpsl
std
xlat
imul
pop
jne
push
jbe
jg
enter
add
fnstcw
je
dec
enter
addb
arpl
pop
adc
cmc
mov
add
mov
mov
mov
pop
mul
stos
in
add
mov
add
mov
bound
mov
fs
mov
sub
mov
lret
test
xor
jo
mov
rolb
fcompl
adc
mov
scas
adcl
nop
add
mov
xor
sbb
js
add
data16
push
std
je
testb
mov
push
imul
arpl
jns
dec
mov
adc
in
sbb
sub
mov
cli
cli
xchg
add
stc
icebp
mov
mov
xor
fnstsw
sub
mov
mov
sub
add
xor
bound
mov
xor
outsl
outsl
into
popa
sbb
push
sub
xchg
add
adc
aam
push
cli
pop
mov
mov
and
fdivrs
add
pop
aad
ds
jbe
add
add
mov
dec
ja
xchg
add
mov
add
or
jno
dec
dec
rol
add
shl
dec
add
leave
jmp
pushf
out
push
add
inc
rorl
dec
in
pop
je
fidivrl
add
add
mov
add
pop
lock
dec
rolb
mov
mov
arpl
int
pop
add
mov
jb
mov
xor
mov
test
mov
out
jns
jnp
call
test
sub
sub
mov
xor
xchg
xor
loopne
mov
push
dec
cmp
sub
add
fwait
nop
add
imul
out
sub
lea
test
hlt
xor
mov
sub
and
mov
icebp
sbb
inc
mov
in
sbb
add
scas
add
inc
add
cmpsb
dec
out
inc
add
scas
dec
repz
sub
inc
add
lods
push
cltd
push
test
sbb
dec
stos
test
mov
int
pxor
mov
rolb
mov
decl
stos
cld
mov
out
jb
mov
adc
mov
add
mov
add
rolb
mov
rolb
adc
adc
add
add
cmp
repz
push
sub
add
cmp
jp
cmp
fstp
sub
adc
add
add
mov
add
mov
test
mov
sub
push
xchg
inc
imul
mov
add
jo
mov
xchg
add
mov
mov
add
call
and
mov
and
fnstcw
out
les
add
mov
dec
aad
shll
xchg
jg
add
lock
mov
mov
sub
mov
mov
cmp
adc
fsts
imul
xor
mov
xor
mov
push
mov
inc
stos
addb
or
mov
sub
sub
add
add
imul
or
stos
les
push
fstp
push
add
cmp
sub
arpl
xor
jl
pop
mov
jb
mov
jae
rorl
mov
std
outsb
stos
pop
mov
jg
xor
mov
sbb
ret
mov
mov
push
cs
push
add
and
pop
sub
add
xchg
cmpsl
xchg
ja
add
mov
add
add
mov
mov
mov
mov
js
nop
add
pusha
add
dec
xchg
pusha
add
mov
mov
fsubp
add
lahf
fwait
mov
fsubr
lret
das
sbb
jl
outsb
out
push
mov
add
jmp
hlt
ss
add
mov
stc
imul
cmp
into
sbbl
push
outsb
adc
mov
ret
test
add
pop
push
add
pop
mov
push
lods
pop
cld
adc
mov
add
mov
popf
imul
mov
int3
into
pop
call
mov
or
add
rcrl
inc
add
addb
cmpsb
enter
or
cmc
gs
jmp
add
xchg
push
jne
dec
pop
mov
imul
add
int
cli
addb
mov
mov
mov
add
out
jns
add
lods
cwtl
aad
or
add
jl
into
pop
stos
out
inc
fstpt
add
imul
repnz
adc
mov
adc
pushf
adc
xchg
lcall
mov
out
aam
cmp
sbb
add
xor
mov
push
fcomps
mov
and
mov
mov
out
push
cmp
in
sbb
sbb
ja
lods
xor
in
mov
mov
std
or
imul
adc
mov
rolb
mov
loopne
mov
mov
push
adc
jo
mov
adc
add
push
add
dec
or
enter
xchg
mov
fists
imul
cli
ret
and
fstps
sub
rcrl
sbb
add
add
and
mov
std
cwtl
inc
add
cmp
add
add
arpl
cmp
mov
test
push
in
jns
add
lods
out
cmp
push
stos
push
into
mov
push
inc
je
lret
into
xchg
jge
pop
push
and
add
jle
push
lock
add
mov
dec
lret
mov
icebp
jge
xlat
hlt
pop
mov
mov
push
out
adc
sbb
add
shrl
or
add
add
daa
pop
jp
outsb
inc
testl
push
inc
add
iret
test
hlt
pop
mov
mov
test
sahf
xchg
cld
dec
mov
cld
stos
adc
add
mov
xchg
sbb
jmp
test
sub
cmp
mov
aas
lds
pop
ret
mov
js
movsb
mov
jns
push
adc
xchg
inc
sti
pop
stos
call
sub
mov
add
add
leave
faddl
jecxz
add
add
mov
add
and
mov
lea
outsl
inc
push
fstpt
mov
jbe
jne
fisubs
mov
addb
inc
repnz
std
iret
or
aas
dec
popa
xlat
cmpsb
idivl
into
sbb
push
cmpsb
and
int
mov
cltd
mov
in
jge
xor
xor
loopne
mov
push
mov
stos
loopne
mov
mov
cmpsl
insl
push
outsl
stos
test
add
push
xchg
loop
mov
pop
pop
xchg
push
nop
add
aas
cmp
aaa
sbb
jne
lea
jns
data16
stos
pop
test
add
call
pop
and
cltd
lahf
cmp
add
and
stos
mov
push
add
shr
insl
sar
xor
add
movl
ss
add
mov
mov
adc
lods
push
xchg
jb
mov
push
cmpsl
xchg
mov
popf
add
or
ret
adcl
and
add
addb
mov
mov
dec
jbe
pop
outsb
cmp
addr16
cmp
push
and
mov
mov
data16
and
add
addb
inc
adc
mov
out
sbb
imul
movsb
mull
in
pop
mov
jmp
addr16
loopne
mov
jp
mov
inc
js
mov
mov
gs
add
ret
out
mov
daa
pop
ret
adc
mov
xor
scas
adc
loop
mov
in
int
adc
add
cmc
jne
mov
add
cmc
out
repz
test
mov
loop
mov
mov
sub
jo
mov
sub
pop
and
push
in
nop
add
jmp
lock
fcompl
dec
cmp
loope
sbb
add
rolb
mov
cs
stc
add
out
loopne
mov
jns
loop
mov
dec
pop
scas
bound
mov
xor
mov
ficomps
rolb
lret
jle
jmp
add
xlat
jmp
notl
mov
push
das
nop
add
repz
add
xor
out
loopne
mov
daa
inc
add
cld
dec
xor
adc
and
mov
and
add
push
roll
mov
scas
xchg
mov
push
and
mov
loopne
mov
loopne
mov
mov
sbb
sub
mov
fcompl
lods
jne
rolb
mov
out
push
adc
fidivl
fnstsw
scas
repnz
mov
cmc
sub
add
add
mov
xchg
test
sbb
lods
add
rorl
sbb
mov
xchg
jl
stos
rolb
mov
add
fs
jo
mov
push
mov
inc
cmc
in
mov
jle
add
add
notb
cltd
lcall
push
and
mov
pop
ja
loopne
mov
cmc
test
dec
nop
add
lods
popa
nop
add
adc
mov
inc
adc
sqrtps
mov
mov
inc
sbb
mov
sbb
das
out
outsl
out
cmp
cltd
push
add
or
repz
push
add
xor
and
in
jl
mov
fs
addr16
add
dec
dec
xlat
lds
adc
mov
sub
inc
pushf
outsl
sbb
sbb
les
mov
fdivs
std
mov
mov
mov
mov
xchg
and
dec
mov
mov
mov
test
mov
mov
gs
add
xchg
in
sbb
pop
fsubs
pop
dec
test
pop
xor
mov
mov
xor
jg
aaa
sahf
xchg
imul
daa
add
add
ss
cld
mov
int3
mov
mov
mov
mov
mov
add
shl
add
pop
mov
mov
in
jp
add
adc
dec
fsubrs
xor
mov
mov
mov
inc
add
aas
mov
scas
repz
out
cmp
and
test
bound
mov
nop
add
lahf
push
fcomps
xlat
addb
sbb
dec
lods
pop
mov
jns
lods
pop
out
mov
xchg
add
mov
mov
add
leave
cmp
xor
mov
js
fwait
jmp
stos
mov
addr16
jno
nop
add
cmp
add
adc
dec
in
xor
mov
xchg
xchg
add
mov
roll
add
mov
adc
mov
adc
mov
cs
add
mov
add
lods
dec
sbb
add
ja
movsl
push
mov
int3
lahf
mov
mov
sub
gs
adcl
pop
clc
sbb
adc
push
add
pop
dec
lods
inc
push
mov
add
mov
test
sbb
or
mov
add
mov
rolb
mov
scas
mov
scas
xchg
add
jg
fistps
mov
jb,pt
mov
xor
mov
in
or
inc
icebp
les
mov
inc
lret
ja
addb
adc
cld
push
test
dec
addr16
leave
ja
stos
and
in
mov
gs
add
jl
jl
add
nop
add
mov
push
test
xor
add
je
mov
in
xor
in
jg
faddl
add
mov
add
rolb
mov
les
mull
das
add
mov
xchg
adc
mov
add
mov
out
cltd
rolb
mov
mov
adc
mov
mulb
or
add
ret
xor
mov
stc
adc
cwtl
cmp
adc
mov
add
mov
rolb
mov
push
add
iret
add
mov
and
or
cmp
addr16
out
xor
lds
or
incb
mov
mov
loope
fcompl
fists
mov
pop
xchg
add
push
xor
mov
mov
add
daa
mov
pop
fnstcw
add
xchg
lock
int
sti
ds
je
aas
xor
mov
adc
push
add
push
aaa
and
add
popf
and
insb
mulb
mov
jge
std
mov
outsb
mov
jecxz
mov
orl
data16
add
rolb
mov
mov
mov
clc
fldl
out
repnz
pop
jo
mov
in
cmp
inc
repz
mov
lret
mov
aaa
adc
mov
sub
lods
cmp
inc
add
xorl
jne
or
add
pusha
add
mov
mov
mov
or
mov
pop
daa
and
mov
shl
cwtl
popf
and
aam
xchg
add
add
and
mov
xchg
cmp
mov
mov
gs
jae
mov
mov
repz
out
pop
enter
push
pop
mov
inc
ljmp
or
iret
les
jns
push
je
add
mov
mov
add
shrl
xor
push
out
rolb
mov
fmuls
mov
mov
and
mov
into
rcrl
mov
movsb
xor
bound
mov
or
or
add
ds
add
push
ss
ljmp
add
lds
sub
cmpsb
out
pushf
sbb
fwait
incb
mov
add
sti
rolb
mov
mov
add
mov
add
nop
add
sub
mov
inc
es
icebp
mov
mov
add
test
add
cmp
inc
pop
jecxz
mov
es
gs
xor
mov
and
add
popa
mov
adc
or
sbb
mov
add
inc
push
add
jo
mov
mov
add
or
push
add
push
add
call
ret
push
sub
in
rolb
mov
pop
jne
mov
add
xchg
call
loop
mov
daa
adc
push
test
mov
sub
xchg
in
xor
mov
or
lcall
hlt
add
add
add
loopne
mov
add
mov
fiadds
test
mov
mov
add
xor
movsl
adc
mov
dec
push
data16
mov
mov
or
mov
add
cs
inc
dec
push
mov
fcoms
cmp
mov
add
loope
and
mov
add
add
femms
popa
fwait
add
add
fcoml
xlat
push
add
popf
mov
test
xchg
mov
push
daa
xor
stos
jb
mov
push
jno
xchg
push
mov
cmpsb
addb
and
js
repz
add
push
add
jecxz
cmp
jo
mov
xchg
dec
jae
cmpsb
and
mov
in
ror
rolb
or
pop
push
addr16
push
add
test
imul
add
add
push
or
xorl
pusha
add
mov
dec
or
sub
shl
jo
add
mov
sbb
add
jo
mov
movsb
mov
add
add
add
push
push
ss
add
inc
add
fmuls
inc
push
cmp
lods
scas
mov
mov
or
add
cli
jmp
cmp
pop
mov
fimull
dec
jns
cmp
push
and
jmp
mov
and
mov
call
inc
lds
push
add
mov
sbb
cli
jnp
aam
sub
adc
dec
adc
add
inc
add
jb
mov
int
mov
push
insb
into
pop
or
add
bound
mov
and
add
rorl
lahf
pop
mov
add
addr16
insl
ljmp
sbb
or
ds
lds
mov
je
call
test
daa
mov
or
sbb
push
clc
mov
fnstenv
mov
movsl
imul
sub
in
mov
shl
pop
xchg
cmp
stos
cmp
shrl
xchg
pop
cmovnp
mov
inc
add
mov
daa
xlat
push
add
dec
cmpsl
out
dec
testl
stos
test
jl
fdivr
imul
aam
mov
nop
add
mov
add
inc
mov
cmc
jns
add
mov
nop
add
loope
out
and
mov
sub
cmp
sub
cmc
mov
dec
scas
dec
lret
mov
inc
add
mov
add
cld
decl
xchg
mov
sbb
mov
mov
rcll
aas
sub
mov
movsb
push
pop
in
push
test
dec
sub
dec
test
fs
scas
outsb
popa
sub
popa
jnp
pop
and
push
insb
arpl
mov
sbb
lret
xchg
lds
adc
jbe
popa
out
add
mov
xor
mov
pop
aas
adc
cmpsb
inc
inc
add
dec
mov
das
mov
add
icebp
frstor
mov
add
add
xchg
and
xor
mov
in
adc
repz
and
cmp
pop
push
push
pop
xchg
pop
inc
mov
add
mov
xor
mov
inc
cmp
add
sub
cmp
pushf
repnz
out
inc
dec
or
mov
gs
mov
pop
ret
aaa
xor
add
xchg
out
fbld
cltd
mov
jmp
sub
sahf
pop
add
jnp
push
adcl
mov
xlat
mov
das
pop
fiadds
nop
add
ja
int3
xor
xchg
lods
loope
xor
mov
and
mov
les
mov
add
ficompl
add
testb
xchg
lods
adc
fldt
lret
add
mov
add
mov
mov
ficoml
adc
xchg
or
dec
mov
xor
mov
call
fwait
scas
mov
jge
or
daa
rolb
mov
mov
adc
inc
add
mov
fmul
inc
add
mov
ja
dec
push
loopne
mov
sbb
or
sub
lret
add
leave
adc
mov
into
mov
mov
daa
andl
mov
imul
sub
add
mov
inc
push
mov
cmp
add
add
sub
pushl
mov
mov
fistl
filds
mov
addr16
sbb
je
add
mov
leave
mov
push
movsl
xlat
dec
outsl
leave
fdivrp
pushf
aas
test
sub
mov
lahf
pusha
add
xchg
test
and
jle
dec
lods
arpl
mov
add
mov
je
aaa
aad
add
and
mov
add
push
cmp
std
aaa
jo
mov
test
les
repnz
pushw
mov
ljmp
adc
xor
mov
nop
add
addb
pop
xlat
jp
addb
jbe,pt
cmp
xchg
add
and
mov
push
add
xchg
add
mov
je
and
loop
mov
daa
sbb
sbb
jno
and
xlat
and
mov
and
aad
add
imul
iret
mov
dec
out
cmpsl
mov
call
dec
inc
add
xchg
popf
mov
add
mov
mov
xlat
dec
ret
adc
mov
jb
mov
addb
xchg
fistpll
xchg
mov
pop
sbb
mov
and
pop
add
inc
fwait
or
sub
pop
xchg
iret
pop
setle
lods
sbb
sub
stc
iret
imul
sbb
mov
mov
sub
aas
pop
or
cmpsl
and
fcmovbe
add
add
fs
dec
mov
fs
ficoml
mov
dec
fadds
add
fdivrs
jae
sbb
hlt
mov
out
cli
mov
jl
mov
mov
adc
mov
or
or
dec
or
sbb
add
lds
test
movsl
mov
and
push
sbb
cltd
jl
les
mov
ficoml
cmpsb
cltd
test
mov
popw
ja
adc
mov
lock
add
mov
cwtl
sub
sbb
mov
or
inc
aaa
inc
enter
negl
add
mov
sub
fucomip
sbb
iret
jne
movb
add
push
stc
lods
rolb
das
sahf
jecxz
add
jae
add
mov
adc
or
and
cmc
sbb
cmp
inc
mull
enter
mov
lahf
int
cmp
loop
mov
stos
ds
add
lods
pop
jnp
sub
addb
push
dec
bound
mov
test
lock
cs
xor
jnp
stos
int
push
lret
cs
dec
nop
add
mov
add
and
imul
add
push
inc
pusha
add
add
jae
dec
int3
sub
sbb
add
pop
gs
sahf
rolb
cmp
cltd
sbb
push
mov
nop
add
dec
pop
xor
mov
or
push
mov
cwtl
das
icebp
mov
stc
enter
dec
and
scas
push
and
mov
dec
sbb
or
xchg
loop
mov
test
bound
mov
pusha
add
add
sti
pop
push
repz
push
add
mov
lret
out
xchg
in
mov
mov
cmp
add
add
inc
mov
sub
xlat
or
ljmp
jo
mov
add
add
rolb
push
aaa
rcll
mov
add
mov
imul
vandpd
jo
mov
cmp
lcall
add
mov
and
add
mov
aad
push
cs
mov
sub
inc
cmp
in
push
jle
cltd
and
pop
gs
addb
push
int3
negb
xor
mov
add
mov
outsb
or
mov
add
loopne
mov
mov
out
sub
mov
inc
fwait
cli
mov
jl
pop
inc
outsb
jp
add
out
leave
mov
adc
mov
jge
add
add
stc
add
mov
mov
inc
aaa
sub
adc
ret
arpl
xor
add
mov
xchg
add
add
xchg
add
fdivl
xchg
push
add
push
test
je
cmpsb
mov
push
fildll
into
mov
int3
idivb
pushf
pusha
add
dec
push
add
mov
scas
cli
xor
popf
in
insb
mov
xor
mov
mov
mov
xchg
add
jg
jbe
jne
arpl
cmp
xchg
cmp
inc
call
mov
scas
adc
add
add
out
lds
dec
jnp
add
bound
mov
add
mov
xorl
in
popf
lahf
test
in
mov
lds
test
loope
fdivp
push
dec
in
frstor
sub
mov
add
mov
add
push
rcll
outsb
mov
add
xor
add
mov
pop
mov
add
jge
mov
add
aaa
sbb
add
push
xchg
lods
rolb
mov
xchg
in
xor
mov
fwait
rcll
mov
xchg
add
out
dec
xchg
add
add
add
rolb
adc
mov
sub
cmpsl
lods
outsb
stos
or
add
cmpsl
mov
movlps
xchg
jo
mov
js
cli
mov
popa
imul
lahf
enter
cld
jae
icebp
pusha
add
add
add
mov
loopne
mov
and
gs
and
cltd
cmp
rorl
mov
add
clc
test
popf
rolb
mov
add
in
mov
sarl
cmp
ss
add
add
push
std
fwait
lods
mov
mov
cmc
shll
push
movsl
ss
in
cwtl
jl
mov
jg
cli
test
sub
adc
clc
mov
xchg
ret
mov
lcall
in
push
sbb
addl
add
or
loop
mov
mov
das
and
pop
sbb
add
sub
mov
pop
sti
add
mov
jno
out
add
or
adc
jne
loopne
mov
add
std
ja
fbstp
outsl
push
adc
icebp
in
adc
mov
mov
mov
add
icebp
mov
and
jb
mov
add
add
dec
movb
mov
mov
lcall
insl
out
add
cmp
int
add
push
add
fdiv
add
mov
mov
daa
out
lods
aam
push
rolb
mov
add
lahf
icebp
cltd
adc
mov
mov
fwait
jmp
jmp
int3
addr16
repz
mov
adc
mov
cmpsb
into
addr16
add
ljmp
push
adc
mov
xor
mov
or
add
ret
mov
adc
mov
mov
lea
add
add
out
mov
xchg
add
mov
int
in
xchg
mov
xor
fwait
xchg
dec
push
cmp
lret
and
ret
add
mov
mov
add
push
mov
push
jge
inc
add
inc
fstpt
xchg
idiv
addb
inc
lret
rolb
mov
add
scas
aas
and
cmp
hlt
inc
add
cmpsl
repnz
add
cmp
add
sbb
fdivs
add
sahf
aad
es
dec
sub
add
or
xchg
add
jecxz
es
xchg
xor
mov
xchg
and
dec
adc
sub
les
iret
fsub
int
stos
mov
ljmp
jg
sbb
xchg
jg
sub
sti
outsl
add
add
fs
add
mov
add
dec
cmp
mov
mov
cs
and
mov
add
mov
add
inc
imul
cmp
push
inc
jle
add
rcrl
jl
loope
xor
mov
nop
add
inc
stos
or
jae
shrl
mov
dec
xchg
mov
jl
fimull
pop
lcall
test
push
push
scas
movsb
push
xor
lea
cmp
mov
mov
mov
aaa
push
adc
mov
sub
fidivrl
imul
push
push
pop
push
dec
ret
sub
popf
push
lods
icebp
mov
and
cld
rolb
out
jns
add
mov
xchg
mov
dec
jno
lahf
fisttpll
dec
cld
pop
loopne
mov
test
add
fucomp
cli
jmp
sub
add
sub
pop
xor
pop
cmc
xor
mov
nop
add
jne
dec
lods
in
mov
insl
nop
add
add
je
lahf
push
fwait
jo
mov
pop
push
or
aas
jo
mov
jmp
sub
add
mov
add
push
inc
jg
add
sbb
pop
stos
mov
sbb
sbb
scas
es
enter
mov
mov
gs
add
inc
cmp
ret
inc
dec
aas
xor
inc
add
mov
in
out
inc
hlt
icebp
add
mov
sti
adc
out
adc
mov
lcall
mov
push
cmp
xchg
insl
jne
pop
adc
lret
mov
imul
mov
dec
mov
div
js
vzeroall
add
mov
mov
mov
mov
mov
arpl
add
data16
dec
push
add
fiaddl
jge
jge
shll
daa
mov
pop
out
je
cltd
in
add
mov
mov
aaa
aas
jno
repz
in
add
pusha
add
or
add
rolb
je
add
das
cmp
mov
sti
ret
xchg
add
xchg
rcpps
outsb
mov
mov
fstl
add
pop
inc
test
mov
mov
cli
mov
add
pop
xchg
add
mov
test
std
pop
pop
pop
fwait
lea
lock
add
and
jne
sub
pop
dec
gs
cmp
lahf
sub
xlat
fisubs
aad
leave
insl
lods
or
je
add
jl
add
in
push
mov
test
mov
add
add
addl
enter
mov
dec
int3
push
lea
inc
add
add
mov
inc
add
out
inc
xchg
cwtl
bound
mov
mov
sbb
jg
test
jge,pt
je
fdivs
popa
das
cmp
add
repz
and
mov
xchg
lret
movsb
pop
stos
push
xchg
sti
sub
mov
xor
fists
pop
inc
add
and
mov
lea
mov
in
push
add
fisttpl
pop
push
dec
xor
mov
icebp
cmpsl
testl
cltd
or
in
adc
pop
sti
call
xlat
fidivl
or
add
add
mov
out
jno
and
js
filds
in
in
mulb
xchg
out
cwtl
jg
jns
jl
and
mov
mov
add
mov
enter
test
mov
add
sub
in
mov
mov
inc
dec
out
or
rolb
mov
mov
add
je
jle
add
mov
add
add
add
movsl
lcall
jnp
add
mov
imul
mov
and
mov
pop
add
add
mov
add
mov
push
dec
jmp
and
mov
add
push
and
sbb
ds
sub
or
add
fimull
pop
lods
mov
dec
jp
push
add
adc
mov
adc
mov
rolb
mov
ljmp
fld
add
cmpsl
push
cli
mov
dec
les
aaa
addb
pusha
add
pop
in
loop
mov
add
idiv
cmp
dec
or
mov
cltd
ss
add
ret
call
cmc
sub
jne
xchg
mov
stos
or
mov
mov
mov
mov
enter
jl
subl
les
in
divb
add
imul
loopne
mov
ja
sub
mov
jo
mov
leave
dec
idivl
fisubrl
inc
add
add
jp
jmp
mov
in
dec
and
mov
xlat
push
pop
sub
add
fdivrl
jns
mov
pusha
add
data16
mov
jmp
mov
mov
xchg
mov
adc
mov
or
add
jge
imul
add
add
add
mov
aad
push
add
sti
out
out
imul
test
outsb
inc
mov
into
jno
aaa
add
jns
push
jae
mov
mov
add
rolb
mov
jp
lds
rolb
mov
push
es
mov
push
scas
mov
push
add
add
push
or
arpl
xchg
adc
pop
rolb
mov
mov
daa
hlt
dec
test
xchg
ja
sbb
mov
xchg
push
xor
mov
inc
mov
rolb
mov
add
scas
ja
mov
in
es
sub
cmp
mov
inc
clc
sbb
add
iret
mov
mov
iret
inc
inc
test
add
pop
mov
add
out
add
inc
in
fcmovbe
add
mov
dec
mov
pusha
add
mov
or
lea
inc
add
mov
addb
je
add
mov
xchg
mov
add
jbe
ds
xchg
add
add
push
and
mov
adc
jns
push
imul
rolb
mov
mov
nop
add
movsb
push
insl
daa
pop
in
jns
add
push
loopne
mov
add
or
add
mov
jnp
sti
adc
jae
add
xor
ss
add
xor
sbb
mov
xchg
fisubl
ret
popf
mov
add
repz
std
push
xchg
data16
push
ljmp
mov
xchg
inc
add
aas
cmp
ret
popa
idivb
in
hlt
aam
inc
inc
and
mov
and
jecxz
lret
in
repz
pop
dec
jbe
mov
aam
and
fistpll
test
out
addr16
imul
add
add
test
pop
pop
jl
ret
jecxz
add
add
add
lahf
lods
xor
add
pop
cmp
add
scas
sbb
pop
es
lock
mov
mov
inc
in
ja
int
adc
mov
push
or
mov
sbb
mov
xor
mov
lds
mov
mov
nop
add
int3
adc
jb
mov
add
rolb
add
test
and
cld
rcll
aad
dec
lea
xchg
add
fsts
stos
sbb
mov
add
mov
add
sub
adc
rolb
mov
push
stos
insb
icebp
addr16
mov
fs
add
sub
filds
cmc
jge
out
add
aam
ljmp
or
ss
mov
shll
jo
mov
dec
rorl
xchg
pop
repnz
lock
arpl
lahf
loop
mov
jg
fildll
arpl
add
arpl
mov
mov
mov
mov
mov
or
sub
add
nop
add
sbb
mov
sbb
and
mov
inc
cltd
ret
loopne
mov
jle
incb
push
vmread
lods
lds
push
mov
imul
adc
mov
sbb
jo
mov
cmpsb
lret
inc
push
out
xchg
mov
sbb
out
xor
and
mov
mov
mov
mov
lea
outsl
stc
bound
mov
shr
leave
mov
mov
jae
les
add
add
es
add
jno
and
mov
cli
pop
scas
ds
lahf
cmp
xchg
or
jg
cmp
cmp
dec
xor
mov
and
ret
bound
mov
add
int
out
mov
mov
jo
mov
negb
daa
loopne
mov
les
in
iret
mov
add
sub
xor
jb
mov
movsl
xchg
imull
shll
cmp
cmc
sbb
std
pop
adc
aam
pop
shll
mov
cwtl
repz
mov
ds
scas
int
in
push
lods
out
stos
inc
cmp
dec
mov
dec
push
pop
xor
clc
outsb
stos
loope
mov
mov
push
lock
xor
or
fsts
stos
insb
cmpsl
xchg
mov
jle
inc
add
add
or
xchg
js
add
insl
xchg
mov
imul
test
add
int
outsl
std
xor
sub
inc
dec
test
xor
mov
dec
enter
push
inc
add
sub
pop
sub
push
mov
sbb
dec
int3
test
mov
mov
loopne
mov
push
out
dec
aad
rolb
pop
es
fldenv
mov
rolb
mov
insl
xchg
push
add
fldenv
add
cwtl
jns
hlt
jg
add
arpl
cltd
call
fucom
fcmovnbe
rorl
notl
cmp
xchg
loop
mov
cmp
ror
cld
jb
mov
mov
jae
daa
hlt
addb
fisubl
add
sub
mov
mov
not
pop
adc
mov
cmp
mov
je
frstor
push
add
mov
mov
pop
sbb
pop
mov
scas
rolb
mov
xchg
xchg
mov
xor
mov
stos
pop
inc
out
das
add
imul
jno
pop
jne
movsl
sbb
or
test
movsb
bound
mov
mov
cld
repz
sbb
xor
add
jp
cmc
adc
mov
jmp
jo
mov
test
aad
test
cs
push
cmp
push
lods
mov
push
fisubs
mov
add
pop
pop
lods
lret
xlat
divl
mov
and
mov
add
mov
add
mov
ja
inc
add
pop
xchg
push
loope
jnp
in
loop
mov
mov
mov
add
scas
jne
sbb
push
add
dec
inc
rolb
pop
push
cld
fstps
add
icebp
push
jb
mov
addb
sarl
mov
sahf
mov
add
or
adc
iret
xor
sbb
shll
out
mov
dec
xchg
add
push
je
aas
sub
adc
mov
mull
mov
add
out
sub
arpl
out
jnp
jge
out
push
lods
push
add
xor
xchg
je
add
jmp
xchg
or
lock
test
fidivl
sahf
or
mov
cld
mov
mov
xor
dec
jb
mov
mov
js
push
into
add
sub
mov
xchg
mov
test
mov
push
cmpsb
sub
lods
rcrl
aam
js
or
sbb
mov
lahf
mov
or
add
insb
das
rorl
outsl
xchg
add
xchg
add
loope
jmp
jae
add
ds
aas
testl
cmp
imul
flds
add
addb
repz
out
pop
in
repz
and
arpl
lds
add
hlt
fistps
es
pushf
rolb
out
mov
add
push
pop
push
push
test
add
push
add
or
xchg
add
push
jb
mov
inc
movsb
clc
adc
mov
stc
cmp
stos
in
insb
or
fs
cld
int3
xchg
pop
mov
xlat
sbb
stos
sbb
pop
mov
add
in
addb
push
addb
push
dec
lods
les
fnstenv
popa
int
add
clc
dec
mov
pop
cld
and
imul
pop
mov
mov
push
int
mov
mov
jno,pt
adc
mov
pop
cld
fsubs
hlt
daa
imul
sbb
add
mov
mov
imull
mov
test
stc
mov
gs
xchg
ljmp
push
and
add
jmp
outsb
mov
dec
inc
mov
mov
add
mov
push
sbb
out
mov
pop
dec
fldenv
inc
add
fadd
mull
mov
ja
in
or
jns
xchg
inc
je
and
mov
js
daa
inc
pop
pop
lahf
push
call
sti
loopne
mov
add
or
and
sub
cmp
add
jbe
dec
loope
pusha
add
bound
mov
sbb
add
mov
mov
mov
in
mov
pop
popa
popa
imul
jae
mov
mov
mov
pop
mov
xchg
dec
arpl
xchg
add
test
repnz
out
lods
cmpsb
movsb
loop
mov
inc
mov
cmp
orl
xor
ret
add
fcoml
ret
cmpsl
ret
push
cmpsb
scas
movsb
adc
mov
ds
inc
xor
mov
xor
or
xor
mov
rolb
push
les
into
xchg
lcall
push
aam
inc
xchg
sti
das
cltd
shll
add
and
xchg
inc
aam
add
test
ret
adc
cmpsl
rcll
mov
adc
pop
xor
test
xchg
hlt
sbb
dec
test
jge
or
mov
mov
cltd
fcmovb
add
mov
jmp
mov
out
mov
popf
pop
lock
mov
sub
rolb
mov
daa
das
movsb
arpl
test
fisttpll
mov
mov
addr16
mov
mov
mov
mov
sti
push
add
rolb
mov
mov
xor
add
mov
adc
lahf
imul
mov
movsl
add
and
ret
cltd
inc
add
inc
or
add
add
jne
fisubrs
cwtl
dec
into
out
jbe
add
mov
cld
loope
mull
mov
pushl
testb
rolb
mov
pop
loop
mov
lods
push
jno
dec
call
leave
popa
and
mov
sahf
insb
add
adc
xor
xchg
and
mov
lds
sub
in
add
mov
xor
out
ss
add
add
xor
into
jle
sub
xor
mov
ret
push
add
iret
clc
fucomi
dec
inc
adc
movsl
mov
adc
mov
shll
mov
mov
fnsave
je
loopne
mov
gs
pop
stos
pop
mov
mov
and
fbstp
add
mov
cmovns
sbbl
mov
mov
xchg
push
in
mov
sub
sti
ds
lds
movsl
add
loop
mov
mov
call
add
loopne
mov
add
insl
cwtl
dec
loopne
mov
fistpll
pop
fldenv
cli
and
jo
mov
add
loopne
mov
adc
enter
adc
mov
arpl
mov
pop
xchg
cltd
or
add
mov
pop
adc
mov
hlt
cmp
mov
rolb
mov
jbe
add
andl
add
std
jle
pop
sbb
iret
or
mov
push
add
mov
fiaddl
addl
ss
out
push
adc
mov
stos
dec
or
ja
negb
xchg
sti
loope
jnp
add
aaa
mov
adc
inc
sbb
pop
bound
mov
add
xchg
cwtl
imul
add
push
inc
in
inc
dec
sub
sub
add
mov
push
aas
dec
xor
mov
es
iret
aas
or
and
leave
sbb
sti
mov
jnp
iret
cmpsb
inc
sbb
jb
mov
aaa
ss
push
imul
cmp
fwait
repnz
xchg
add
jb
mov
mov
add
jbe
dec
mov
sub
or
mov
daa
dec
stos
enter
enter
dec
pop
lcall
adc
xlat
sarl
das
inc
insb
addb
sbb
add
hlt
push
jo
mov
outsl
and
mov
push
leave
das
mov
sub
int
sub
sub
inc
and
mov
mov
push
adc
out
xchg
adc
add
add
mov
or
add
push
mov
push
add
mov
scas
or
adc
mov
sub
add
push
icebp
addr16
arpl
lock
add
add
or
bound
mov
add
jno
enter
das
push
lret
mov
std
jecxz
pop
fmuls
out
gs
out
rolb
mov
inc
xchg
pop
push
aad
gs
add
in
int3
jmp
mov
pop
rolb
mov
inc
jns
add
enter
les
cmp
cltd
push
cmpsl
sbb
cmp
mov
lret
mov
mov
loopne
mov
xchg
mov
inc
xchg
add
mov
add
jg
add
inc
add
and
pop
inc
inc
pop
fisttpll
sub
xor
divb
add
inc
lock
out
fistl
enter
or
lret
add
push
dec
clc
push
es
jl
add
pop
mov
cli
pushf
rolb
mov
add
xchg
sahf
add
add
addb
xchg
andl
mov
add
sbb
add
out
jnp
aam
and
or
pusha
add
outsb
mov
push
popa
xchg
mov
test
outsl
mov
scas
sarl
add
inc
addb
test
sub
pop
sub
faddp
jb
mov
aas
das
jle
sub
xchg
dec
xchg
add
fnstsw
mov
inc
push
fsubs
add
xlat
ss
dec
pusha
add
and
fwait
jae
sti
cmp
cld
sbb
add
xchg
push
loopne
mov
call
fidivrl
add
outsb
sbb
add
cmp
dec
add
ret
fidivrs
push
repnz
add
imul
cltd
scas
inc
add
xchg
add
inc
dec
push
xor
add
mov
ljmp
jge
cmp
add
sbb
mov
add
pushf
sub
repz
inc
add
inc
add
add
mov
push
hlt
sub
mov
add
sbb
mov
mov
in
imul
cmp
push
dec
movb
mov
loopne
mov
add
bound
mov
fcoml
loope
in
call
loope
test
imul
fwait
dec
imul
dec
inc
add
aaa
and
add
mov
sbb
inc
add
add
add
aas
lds
lods
mov
mov
xchg
mov
movsb
hlt
mov
roll
mov
xchg
add
and
mov
mov
popa
pop
movsb
fcmove
adc
push
sbb
inc
sbb
add
mov
add
mov
std
into
sub
negb
pop
xor
mov
jnp
fwait
mov
mov
add
mov
mov
xchg
mov
add
movsl
cltd
jne
std
clc
sub
je
mov
gs
loop
mov
mov
data16
dec
xchg
lock
add
xlat
pop
arpl
mov
mov
lret
daa
sbb
les
cli
mov
add
mov
sub
iret
ja
xchg
popa
in
insl
cwtl
ss
stos
popa
shll
mov
cmpsb
into
lods
or
and
or
sbb
or
sub
fistps
iret
inc
hlt
add
stc
cld
xor
pop
sahf
cmp
add
icebp
push
sub
push
sub
test
sub
xchg
add
popa
add
xor
mov
sbb
add
inc
cmp
xchg
add
xor
mov
add
mov
add
cmp
sub
ja
add
add
add
mov
add
ret
sbb
aad
inc
add
add
fwait
xor
pusha
add
lcall
mov
xorl
or
lahf
adc
add
mov
add
mov
test
arpl
pop
xlat
mov
xchg
sub
lcall
lds
loope
lahf
mov
cs
add
or
inc
mov
xchg
inc
mov
cmp
arpl
or
cmp
fwait
data16
add
into
jae
scas
insb
jne
add
add
lods
lods
mov
fldt
test
push
cmp
insl
inc
add
dec
mov
inc
divl
mov
in
and
mov
fimull
adc
mov
mov
add
js
and
xor
or
addb
pop
jno
stc
push
add
xchg
add
roll
repnz
or
cmp
add
sti
dec
mov
ficompl
test
xor
fisttps
jmp
add
mov
mov
pop
andl
scas
pop
gs
jecxz
cmpsl
mov
add
push
adc
mov
mov
daa
adc
mov
movl
dec
stos
jb
mov
adc
mov
fcomps
rolb
mov
aaa
in
xor
test
xor
add
add
jno
jnp
int3
sti
inc
mov
add
pop
cmp
jbe
mov
iret
inc
ss
xchg
roll
jns
jg
add
test
nop
add
rolb
rolb
mov
mov
sbb
pop
hlt
repz
ja
call
xchg
fisubl
int3
push
nop
add
mov
add
out
jns
add
bsr
mov
js
jnp
push
xchg
xchg
add
add
pop
lahf
rolb
mov
add
inc
test
mov
mov
outsl
sub
insl
mov
or
add
fadds
xor
dec
cmp
mov
add
cltd
push
adc
mov
cmp
ja
add
nop
add
mov
push
jns
mov
fcompl
xchg
in
jbe
fwait
test
cmp
fdivrl
mov
mov
xlat
rolb
mov
pop
mov
mov
add
inc
add
mov
pop
addb
les
add
cwtl
cltd
dec
fwait
or
stos
pop
gs
add
test
add
add
dec
jp
arpl
mov
and
mov
add
add
iret
xchg
or
and
scas
mov
and
mov
mov
push
and
add
addb
pop
lods
mov
pop
in
sub
lcall
add
les
rolb
mov
add
pop
hlt
sti
push
mov
mov
mov
push
xchg
push
icebp
movsb
mov
jae
mov
or
fdivl
sub
popa
and
add
add
sbb
mov
insl
adc
mov
sub
test
add
stos
lock
sbb
insb
or
inc
mov
xor
mov
cmp
dec
lcall
add
mov
add
mov
testl
repz
insb
mov
mov
mov
mov
loop
mov
add
push
inc
push
repz
pop
rolb
mov
mov
cmp
call
pop
mov
das
pop
or
mov
outsb
dec
or
js
add
movsb
jb
mov
sarl
or
inc
ljmp
jae
lahf
leave
or
jle
dec
insb
xchg
xchg
add
mov
add
sub
mov
jge
inc
inc
pusha
add
lcall
mov
inc
stc
popa
popa
xor
jbe
movsb
dec
adc
mov
into
mov
sahf
xchg
movsb
fucomip
sti
jns
jo
mov
inc
push
add
add
rorl
inc
and
inc
sub
mov
mov
mov
cltd
sbb
roll
mov
push
add
add
add
mov
int
imul
ret
rolb
mov
add
add
mov
add
xchg
add
rolb
mov
cld
in
stc
xor
ja
xchg
adc
xor
mov
jnp
add
and
lods
outsl
ficomps
add
mov
jnp
idivl
adc
ja
rolb
dec
stos
sbb
das
inc
cmp
jns
add
mov
add
mov
das
gs
mov
cmpsb
fldenv
add
add
sti
dec
sbb
add
adc
mov
hlt
je
add
rolb
mov
lock
fisubs
add
add
mov
scas
push
fxch
mov
sub
fs
mov
lret
and
mov
mov
add
dec
mov
fiadds
mov
sub
repnz
data16
loopne
mov
lds
xchg
mov
incl
add
jne
or
xchg
cli
inc
xor
adc
mov
push
push
repnz
jnp
pop
addb
adc
cwtl
mov
jbe
aam
add
xchg
add
es
imul
ds
sbb
and
jmp
inc
cmpsl
jecxz
jle
add
add
fcoms
mov
push
mov
mov
add
in
mov
mov
mov
xor
mov
add
repnz
add
cmp
bound
mov
and
xor
dec
ret
xor
mov
pop
dec
nop
add
mov
xchg
fadd
mov
add
mov
or
scas
pop
stos
leave
push
dec
addb
mov
imul
mov
mov
push
push
cld
mov
push
add
push
add
mov
fdiv
xor
sub
mov
mov
push
mov
lock
std
mov
and
mov
popa
ljmp
xor
in
xor
mov
inc
add
inc
out
loopne
mov
xchg
xor
mov
mov
and
mov
sti
lret
jl
pmaxsw
pop
xor
add
pop
jnp
or
int3
bound
mov
add
push
add
shl
mov
imul
in
das
stos
mov
jmp
stos
add
mov
xor
add
jge
in
and
mov
mov
cmp
and
add
cwtl
mov
dec
pop
cs
xor
mov
push
out
pop
xor
mov
mov
je
into
fstpt
outsb
lret
insb
and
mov
inc
iret
and
mov
add
lretw
xor
add
inc
push
xchg
pop
xchg
lcall
sbb
add
jmp
rolb
in
ja
sbb
mov
pushf
or
std
lock
mov
cwtl
out
out
or
push
cmp
ficoml
and
movsb
add
adc
xor
mov
lcall
loope
sbb
cld
stc
add
mov
inc
add
fiadds
xchg
xor
mov
imul
fisubs
movsl
mov
add
add
mov
lret
cs
jne
lret
pop
pop
mov
mov
mov
stc
je
dec
ljmp
cltd
jp
fwait
mov
popf
adc
ja
int
das
sbb
xor
mov
leave
pop
mov
mov
inc
addb
mov
mov
rolb
sub
cmc
loopne
mov
add
sti
adc
rolb
cltd
push
mov
push
outsb
xchg
push
lcall
add
sub
int
addb
cmp
pusha
add
pop
loopne
mov
add
jg
add
add
mov
xchg
lret
push
loopew
mov
add
ret
add
dec
lret
sub
xchg
insb
xchg
lcall
rcrl
cmp
and
add
mov
shrl
into
fs
jno
xor
mov
out
mov
add
mov
lcall
pop
outsl
dec
sti
fs
sub
aas
dec
mov
lods
jns
xor
add
mov
add
add
inc
insb
ficoms
pop
scas
push
nop
add
adc
mov
xorl
inc
cmp
xor
insl
insb
and
mov
in
push
xor
or
add
jp
add
xor
xor
jbe
inc
add
popf
je
add
push
icebp
push
add
mov
shll
add
push
mov
dec
or
inc
je
scas
lret
call
pop
push
mov
movsl
out
add
push
sub
sbb
ss
insb
in
add
in
inc
int
outsl
push
movl
fmull
jecxz
mov
add
add
fucomp
scas
ljmp
cmp
sub
sbb
mov
sarl
jle
or
mov
push
jbe
add
jnp
int
call
sbb
mov
gs
enter
and
mov
out
test
add
movsl
cltd
ljmp
add
jmp
lret
out
lret
add
mov
mov
fistps
mov
add
mov
add
loop
mov
cmpsl
xchg
add
lea
scas
rolb
mov
repz
mov
xor
mov
mov
cmp
cwtl
and
mov
icebp
les
mov
jg
iret
push
push
cmp
xchg
jns
or
add
mov
jecxz
out
rolb
mov
xchg
int3
dec
ret
fsts
and
pop
loop
mov
es
imul
mov
add
sbb
out
xchg
mov
sub
cwtl
sub
call
xchg
push
inc
fcoml
mov
mov
sub
sbb
cli
mov
add
or
clc
xor
xchg
lods
jmp
sub
scas
dec
icebp
dec
push
add
dec
es
fwait
xchg
sbb
and
gs
sbb
inc
test
add
add
mov
push
imul
mov
add
enter
aas
mov
jecxz
add
lods
ljmp
mov
xchg
out
sub
mov
imul
jg
xchg
add
sbb
xchg
ljmp
mov
repnz
jmp
sbb
sub
sbb
pmulhuw
mov
add
add
ds
scas
aam
dec
inc
and
mov
in
add
pop
xorl
add
stc
mov
pop
sbb
add
push
daa
sahf
push
paddusw
lcall
loopne
mov
mov
jo
mov
add
and
mov
pop
lahf
in
jmp
imul
mov
js
add
mov
xchg
fistpll
lret
call
in
fsubrl
sub
add
mov
and
repnz
fidivl
fcmovb
sbb
inc
inc
add
push
pop
aaa
push
jno
call
add
add
int3
faddl
add
add
ficoml
xor
xchg
mov
fwait
cmp
add
cmpsl
enter
std
mov
in
shl
test
jae
add
movsb
loop
mov
out
xor
mov
mov
es
inc
add
scas
inc
cmp
push
and
mov
clc
scas
ret
pushf
pop
xchg
sbb
add
or
add
and
mov
cmp
gs
add
mov
mov
punpckhbw
ljmp
push
add
mov
mov
nop
add
iret
fdivp
add
add
mov
negl
jnp
push
mov
mov
xor
add
wrmsr
add
inc
addb
and
mov
sbb
or
stos
addl
out
iret
adc
mov
dec
addb
out
call
loopne
mov
mov
lods
rolb
mov
add
sahf
leave
xchg
pop
into
cmpsl
cld
mov
add
addb
inc
add
mov
add
dec
testb
mov
das
pop
mov
faddp
add
add
ljmp
call
cmp
add
outsb
sub
add
jbe
lret
test
pop
sahf
std
lock
int3
enter
jae
lock
inc
out
std
inc
in
mov
pop
adc
mov
je
jmp
mov
adc
mov
push
dec
add
mov
jl
mov
mov
sub
dec
mov
out
scas
stos
jmp
adc
stc
loope
ret
repz
add
daa
lods
mov
mov
push
loop
mov
enter
fstpl
cltd
call
and
jae
add
jnp
clc
pop
push
adc
adc
adc
cli
adc
mov
dec
sahf
sub
mov
lahf
adc
mov
mov
mov
stos
cmp
adc
ficomps
cmp
and
mov
add
inc
xchg
mov
mov
xor
mov
adc
add
add
or
push
test
add
xor
dec
push
das
jns
stos
mov
cld
push
das
lods
enter
or
add
pop
lods
popa
jg
mov
add
mov
inc
add
add
test
mov
xchg
add
movsb
xor
mov
cmp
add
out
in
fnstsw
fsts
push
xchg
or
xor
mov
icebp
dec
jecxz
add
adc
mov
sub
imul
rolb
mov
mov
mov
mov
sti
cmp
add
push
jae
lea
add
sub
add
sub
add
aad
pop
mov
add
mov
mov
rolb
ljmp
out
push
outsl
dec
mov
push
dec
or
les
adc
mov
movsl
and
mov
mov
add
xchg
mov
ss
adc
mov
add
rorl
add
imul
xchg
jmp
mov
xchg
add
xchg
aaa
mov
mov
jno
add
lcall
jl
clc
cmp
push
mov
sbb
add
pop
mov
mov
idivl
stos
outsb
movsl
aam
in
jbe
adc
mov
dec
adc
mov
push
or
mov
xchg
xchg
lea
addr16
icebp
inc
shrl
loopne
mov
cmp
mov
ja
dec
int
or
rcrl
adc
mov
pop
cmp
xchg
pop
das
jne
pop
enter
mov
add
mov
push
add
mov
xchg
add
mov
push
imul
or
mov
iret
and
dec
aaa
lret
cmpsl
sbb
mov
adc
into
cmp
sub
hlt
mov
pop
adc
mov
mov
dec
or
mov
fcomps
sbb
add
mov
aaa
push
pop
jo
mov
add
lahf
je
add
jno
add
cwtl
add
add
mov
fucomp
mov
mov
sbb
push
add
xchg
mov
add
into
jge
jge
fwait
pop
adc
mov
iret
jno
add
ret
fadds
test
mov
rolb
mov
add
add
mov
mov
in
mov
add
popa
dec
addb
mov
dec
pop
inc
mov
mov
add
mov
cmpsb
dec
mov
sahf
jle
add
jnp
add
scas
xor
add
lea
push
bound
mov
mov
push
mov
imul
cli
xor
mov
loopne
mov
mov
mov
or
repz
rolb
mov
cmp
fwait
push
or
push
and
mov
push
fisttpl
div
dec
add
mov
in
cmp
das
pushf
je
xchg
cs
fdivs
mov
test
push
add
and
lea
fwait
inc
stc
inc
mov
mov
rolb
mov
pop
xchg
aas
dec
sbb
mov
call
add
mov
xchg
js
add
push
add
xor
mov
and
mov
sub
cmp
and
mov
inc
inc
xchg
outsb
pop
aam
rolw
add
popf
in
lret
cmpsb
pop
cmp
push
inc
out
imul
dec
scas
sbb
and
lods
xor
add
mov
push
loopne
mov
push
add
jl
add
mov
add
push
mov
mov
les
jmp
lret
jp
lcall
cmpsb
lahf
pop
sbb
mov
add
add
fucomi
fs
add
cmpsb
cmc
aad
test
mov
add
sub
roll
add
js
mov
add
out
inc
inc
add
xor
and
lcall
xor
mov
mov
mov
leave
jo
mov
ja
mov
mov
rorl
mov
mov
cltd
stc
inc
iret
gs
jge
leave
out
out
dec
test
sbb
mov
cwtl
addb
pop
not
jl
in
mov
imul
add
out
push
add
xchg
test
xor
mov
xor
sbb
sub
mov
mov
and
jecxz
std
popa
pop
iret
adc
mov
das
sub
lahf
call
add
cmp
inc
nop
add
mov
pop
lret
add
popa
pushl
push
adc
xor
cmp
ljmp
mov
adcl
mov
fs
jg
lcall
add
popa
sarl
add
push
punpckldq
mov
das
je
push
mov
xchg
cmp
gs
and
mov
aam
add
stos
xor
out
jmp
add
add
shll
mov
mov
or
push
xchg
bound
mov
and
and
mov
pushf
ss
pop
pushl
jg
rolb
les
outsl
cmp
inc
rorl
xchg
repz
cwtl
sbb
cmpsl
add
mov
mov
mov
push
mov
out
inc
dec
xchg
rorl
add
adc
add
add
mov
push
or
roll
aaa
fisubrl
inc
push
xchg
ret
movsl
inc
js
xor
movsb
xor
mov
adc
mov
lahf
fcoml
add
jmp
test
sbb
mov
outsb
mov
inc
int3
stos
mov
mul
jnp
into
add
icebp
ss
aam
cmpsb
ss
pminub
lret
filds
mov
ss
add
fsts
add
fmuls
cmp
mov
and
in
loopne
mov
nop
add
lods
push
xor
cmp
arpl
add
jle
ret
fwait
popf
jo
mov
cmp
jo
mov
mov
mov
add
mov
push
repnz
pop
push
xor
addb
rcrl
in
sbb
pop
imul
mov
mov
jp
adc
mov
add
addr16
lds
xlat
test
frstpm(287
mov
pop
out
inc
ret
mov
and
mov
popa
sub
movsb
cmp
lock
daa
popa
in
adc
jge
arpl
xor
mov
mov
add
in
in
jno
outsb
and
mov
add
dec
xchg
clc
jecxz
aas
adc
mov
mov
mov
leave
push
stos
test
aaa
push
cmp
jmp
popf
lcall
cs
xchg
add
mov
lods
push
test
add
cli
ljmp
dec
push
leave
mov
pop
pop
sbb
aad
aad
xor
jl
mov
adc
mov
jge
cmp
add
xlat
xor
enter
jge
jl
or
mov
mov
add
test
mov
add
push
add
add
add
push
add
cwtl
dec
adc
or
popf
je
cs
sub
push
inc
fs
loope
add
mov
jb
mov
add
mov
add
dec
mov
add
test
subl
add
fmul
adc
mov
jne
add
mov
rolb
mov
call
mov
jb
mov
add
xlat
in
cld
ljmp
jp
scas
in
xlat
xor
jns
test
push
inc
ret
push
popfw
mov
mov
mov
aad
in
inc
rolb
mov
mov
data16
sub
mov
dec
loopne
mov
mov
xor
mov
iret
pop
lret
push
lahf
or
inc
ds
test
in
push
adc
outsb
push
ret
addb
fcom
add
adc
mov
lahf
sub
jge
push
sahf
push
jne
mov
addr16
pop
into
movsl
loop
mov
inc
add
add
sub
fisubrs
add
xor
mov
add
mov
pop
push
and
mov
add
and
add
mov
sti
shll
sbb
add
adc
mov
imul
add
or
push
pop
sbb
scas
mov
repnz
enter
mov
add
js
dec
mov
push
cmc
dec
out
xor
decl
jbe
mov
hlt
mov
xor
mov
dec
addr16
leave
lret
or
dec
aas
ja
in
scas
dec
cmp
cld
gs
call
sbb
lcall
incb
fs
in
rolb
mov
sti
push
push
loopne,pt
mov
or
sbb
add
add
fs
inc
adc
cwtl
test
negb
mov
add
dec
inc
add
leave
stc
inc
mov
and
fcmovbe
add
imul
mov
jno
adc
mov
mov
jg
cs
test
adc
mov
mov
pop
xor
mov
push
add
add
hlt
imul
pop
jne
fisttps
testl
add
popa
out
mov
cli
sub
imul
push
fiadds
mov
xchg
add
shll
mov
fstl
addr16
push
mov
xor
lcall
pop
push
aad
and
mov
loop
mov
add
pop
jecxz
mov
add
cmpsb
pop
cmp
sub
cmp
scas
jns
outsl
leave
mov
fwait
push
inc
and
mov
inc
add
test
jmp
das
mov
xor
dec
loope
stos
out
bound
mov
pushl
popl
notl
dec
fsts
mov
in
lods
jae
pop
cmp
add
mov
frstor
mov
sbb
scas
repnz
mov
test
adc
adc
add
push
adc
mov
fcoml
mov
out
push
ds
add
lret
sarl
jl
sub
inc
arpl
addl
add
jnp
push
and
add
inc
int
push
icebp
mov
sub
sbb
lahf
sub
mov
lods
ja
mov
dec
pop
pop
sub
adc
mov
dec
adcl
inc
add
add
pop
lock
pop
pop
dec
mov
mov
sbb
fwait
pop
cmc
adc
mov
cmc
out
fs
mov
sub
or
add
test
aam
and
mov
xorl
sub
les
jecxz
notb
mov
shll
scas
ss
inc
mov
add
rolb
mov
mov
push
inc
add
mov
aaa
out
loop
mov
ret
jne,pn
xchg
aas
ljmp
or
push
pop
aam
insl
mov
mov
dec
ss
pop
push
sbb
hlt
pop
jno
addb
ficoml
or
popa
cmp
je
lods
add
mov
sub
pop
iret
jle
add
stc
push
xlat
hlt
mov
lcall
pop
sbb
add
adc
add
rolb
mov
mov
hlt
and
xor
mov
mov
cli
cli
insl
insb
cmc
sbbl
sbb
mov
cmp
fs
push
jmp
xor
mov
iret
dec
nop
add
add
mov
ds
push
test
dec
dec
mov
mov
sub
popa
mov
mov
je
loopne
mov
clc
jge
push
cwtl
fdivs
ss
lods
roll
jge
xchg
fmul
stc
jp
jp
mov
nop
add
xchg
call
movsl
pop
iret
xchg
push
xchg
add
pop
cs
lods
pop
aas
mov
add
jmp
inc
add
mov
mov
sub
xchg
xchg
adc
mov
aas
stos
push
mov
mov
lods
fsubrl
in
mov
pop
mov
aam
mov
test
rolb
mov
sub
scas
outsl
mov
dec
sahf
cmp
aad
add
nop
add
and
mov
add
scas
ror
pusha
add
fimuls
faddl
sbb
xor
sub
dec
add
ss
mov
mov
mov
push
dec
mov
fisubl
sbb
sub
pusha
add
lea
or
sbb
mov
cwtl
jo
mov
mov
jnp
dec
xlat
scas
gs
mov
lods
and
mov
push
mov
gs
sub
push
add
inc
lds
adc
mov
addl
sbb
sub
mov
nop
add
stc
pushl
addb
in
xchg
mov
inc
add
add
mov
jp
add
lods
fsubs
mov
lock
je
pop
and
add
lea
mov
test
xchg
pop
xchg
repnz
mov
pop
jbe
push
add
and
mov
jne
cmp
iret
hlt
mov
popa
ret
sub
add
xchg
das
pop
daa
ss
rolb
mov
sbb
add
add
mov
add
iret
pop
addr16
sub
add
mov
leave
xchg
cli
iret
repz
xchg
jne
cli
mov
in
loop
mov
std
repz
mov
bound
mov
inc
add
jmp
lock
cmpl
jae
bound
mov
jle
add
mov
loopne
mov
sti
cmp
cwtl
stos
pop
adc
cltd
movb
pop
sub
lds
pushf
adc
lcall
add
adc
and
mov
je
test
mov
pop
fsubs
shrl
in
and
mov
add
inc
nop
add
out
es
add
inc
stos
scas
testl
mov
popf
daa
jle
cmp
addb
pop
out
lret
incb
dec
call
mov
push
push
pop
inc
test
add
mov
mov
out
add
jo
mov
jl
imul
add
mov
add
nop
add
mov
mov
mov
sbb
loop
mov
sbb
xchg
icebp
push
push
add
mov
fsub
mov
icebp
add
mov
push
les
mov
pop
xchg
cmpsb
cmp
inc
add
push
dec
mov
add
push
or
insb
jg
enter
push
lret
push
add
mov
idiv
je
add
ds
mov
addr16
aas
lcall
mov
and
mov
jns
add
rolb
mov
mov
pop
rolb
mov
xchg
roll
mov
lcall
mov
mov
xchg
pop
push
pop
mov
pop
push
loopne
mov
pop
jp
jmp
mov
push
repnz
mov
ret
repnz
pushf
repnz
mov
loope
mov
mov
inc
pop
sbb
mov
test
add
add
xor
push
add
das
or
add
imul
add
ds
into
push
pushf
loope
add
lret
mov
xor
int3
je
add
xchg
mov
inc
xchg
or
out
dec
jecxz
rolb
mov
pop
dec
cmp
addb
stc
push
add
mov
pop
cli
sub
lret
or
pop
and
cmp
add
aas
add
mov
mov
push
xor
mov
aaa
mov
xor
loopne
mov
add
adc
and
and
mov
mov
or
add
adc
mov
repz
stc
xor
mov
mov
loop
mov
jge
pushf
ret
mov
fbld
mov
add
push
add
mov
imul
add
add
sub
jg
out
stc
pop
inc
int3
fmul
jmp
iret
mov
jp
mov
mov
pop
addb
lret
stos
nop
add
push
lods
mov
outsl
testb
je
xchg
xor
les
jl
add
dec
adc
mov
xlat
xor
mov
ret
inc
add
sub
lret
rolb
mov
dec
adc
mov
testl
arpl
adc
mov
add
sahf
adc
icebp
cmp
mov
shll
mov
mov
sbb
mov
iret
out
jmp
fidivrs
add
add
mov
cmp
inc
pop
dec
jecxz
mov
lret
fdivrs
call
pusha
add
aaa
mov
cwtl
pop
ja
add
mov
xor
mov
add
sar
pop
sub
add
mov
lds
jns
leave
lret
sbb
xorl
adc
xchg
outsl
dec
sub
in
ret
js
lock
rolb
sub
fimuls
sub
es
int
cwtl
repz
data16
add
jbe
push
outsb
int
sbb
add
stc
fidivl
jp
divb
inc
insb
adc
inc
hlt
xchg
roll
in
arpl
shll
popa
xchg
sbb
leave
cmp
dec
lahf
mov
mov
mov
sbb
mov
xchg
hlt
test
sbb
inc
mov
mov
xor
mov
lcall
push
add
pop
sub
aam
xor
cld
addr16
xchg
insl
xchg
push
and
add
out
aaa
sbb
inc
sub
cmpsb
xor
mov
add
hlt
lea
sub
xor
mov
jae
popf
add
aam
mov
lea
or
out
dec
aas
mov
mov
add
mov
pop
fsts
dec
rolb
mov
sub
inc
imul
mov
mov
xchg
add
lcall
scas
cmc
push
dec
mov
fidivrs
sbb
mov
stc
nop
add
mov
adc
inc
adc
mov
jb
mov
xchg
jmp
mov
push
jae
and
sub
add
scas
jno
add
loopne
mov
push
jge
ljmp
add
mov
mov
mov
out
in
xchg
add
mov
addb
mov
mov
cmpsb
adc
mov
jle
dec
xchg
fistpl
repnz
out
add
mov
testl
and
data16
sub
xor
stos
add
mov
cld
mov
add
incl
dec
cmp
fsubrp
mov
xchg
add
mov
or
xor
mov
mov
fs
enter
add
inc
push
add
scas
dec
call
mov
and
mov
mov
das
cmpsl
and
add
test
or
addb
popl
mov
add
mov
pop
addb
sub
fsubrs
in
mov
dec
mov
lret
fcom
lock
add
inc
xlat
xchg
add
dec
sbb
sbb
dec
repz
enter
insl
lods
negl
add
aaa
pushf
popf
fadd
add
mov
in
xor
cltd
out
insl
fstl
inc
add
insl
cmp
out
ret
pop
lcall
cmp
stos
dec
mov
test
add
mov
mov
push
or
xor
and
mov
pusha
add
ljmp
mov
je
aaa
push
jo
mov
and
mov
fsubrs
add
clc
dec
sub
and
je
or
scas
fcom
cwtl
out
notb
or
aaa
in
in
in
add
ret
dec
xor
popf
dec
incl
ror
hlt
pop
call
fdivrl
repz
je
fcom
mov
addb
sbb
xchg
push
fcompl
add
rolb
mov
cmp
out
icebp
mov
xor
out
inc
sbb
xchg
bound
mov
fwait
push
loopne
mov
add
leave
aas
lcall
imul
mov
aas
xchg
jmp
add
adc
mov
lods
add
mov
add
add
cltd
push
iret
sti
movsb
fldl
andl
mov
mov
xor
mov
add
mov
fnstenv
mov
pop
push
mov
mov
add
cmp
sub
mov
icebp
dec
inc
jle
cld
jl
or
add
sub
mov
dec
pusha
add
push
jno
cmpsb
lcall
add
pop
out
adc
mov
jbe
mov
add
rcl
add
mov
xchg
add
test
repz
movsb
fwait
add
loopne
mov
inc
jae
test
clc
xchg
xlat
mov
jl
xlat
jb
mov
add
ret
dec
lods
into
or
inc
add
cli
insl
std
mov
add
push
add
adc
sbb
rolb
mov
dec
jg
test
push
push
les
add
adcl
shl
add
adc
mov
mov
sbb
fistps
jmp
add
mov
cmp
push
or
xchg
xor
mov
test
mov
scas
inc
push
push
loop,pt
mov
push
addb
aad
mov
in
mov
out
push
fsubl
cmc
fldenv
nop
add
insl
adc
imull
popa
outsb
es
or
mov
sub
mov
mov
add
mov
and
mov
scas
xchg
int3
cmp
cmp
mov
pop
out
adc
mov
dec
push
fcoml
cltd
enter
into
pop
std
sarl
pop
and
mov
jb
mov
or
push
faddp
add
mov
aas
stos
cmp
push
cmp
add
dec
lcall
cmc
hlt
cmp
jne
faddl
mov
cmp
std
sti
mov
sub
jne
jbe
sub
mov
adc
mov
lods
dec
sti
rolb
mov
push
addr16
repz
enter
mov
add
mov
push
add
jl
sbb
jmp
xor
fdivl
inc
ljmp
mov
mov
push
xor
add
add
and
les
data16
dec
jae
adc
ror
dec
mov
add
fbld
dec
scas
cltd
mov
pop
dec
sti
mov
mov
push
add
push
mov
push
push
jp
ret
add
mov
mov
outsb
mov
add
mov
jl
jmp
test
jo
mov
loop
mov
and
or
add
rcll
pop
inc
add
dec
jle
sbb
ljmp
lea
ss
sbb
adc
dec
lds
add
stos
aaa
sbb
int3
enter
xor
xlat
mov
aas
inc
repz
divl
jecxz
cwtl
loop
mov
xor
mov
popa
sbb
push
out
mov
mov
mov
rolb
cli
sbb
mov
jge
imul
lock
jecxz
add
add
add
push
test
add
adc
xor
mov
mov
jnp
fsubrs
add
add
add
out
jb,pn
mov
push
int3
repnz
mov
mov
addr16
loope
mov
andl
es
cltd
jns
addb
push
es
into
in
add
movsb
in
nop
add
dec
add
add
jp
stos
ret
sbb
cmp
rolb
mov
leave
mov
or
imul
add
and
lret
or
add
mov
lahf
inc
push
jmp
lahf
pminsw
sbb
enter
in
repnz
loope
add
lcall
and
mov
int3
test
sub
jo
mov
iret
adc
mov
add
cmpsl
lahf
es
orl
sahf
or
ja
sbb
stos
loop
mov
orl
incl
mov
cli
pop
and
popa
js
sbb
fdivl
add
and
mov
mov
cld
jecxz
add
mov
jns
xchg
add
sub
pop
or
push
cmp
mov
mov
lcall
pop
fiaddl
scas
mov
rolb
mov
add
out
pop
xchg
out
shll
in
xchg
mov
popa
psubsw
mov
imul
jge
rolb
xor
rolb
mov
fs
add
fiadds
jbe
scas
fidivrl
add
out
jp
outsb
sbb
push
add
add
ret
sbb
ret
cmpsb
call
mov
div
out
add
mov
outsl
sub
and
mov
lea
idivb
fadd
add
add
mov
test
add
mov
and
ljmp
cmp
out
or
xchg
and
insl
gs
fdivrs
cmp
push
sbb
mov
lret
stos
or
aam
or
scas
addb
test
rolb
imulb
xor
mov
jo
mov
repz
testb
mov
outsb
in
lret
repnz
mov
push
add
cwtl
fdivr
xor
dec
addb
mov
xchg
in
ss
sahf
xor
mov
repnz
dec
loopne
mov
mov
add
jp
movsb
sub
adc
add
xlat
fmul
ljmp
popf
sbb
mov
inc
scas
roll
cmp
push
ss
cmpsl
sbb
add
mov
ficomps
shl
jl
add
mov
mov
mov
aas
fists
shll
out
push
and
rolb
mov
mov
add
add
fmulp
mov
add
cmp
call
mov
and
dec
mov
cld
lods
fistl
mov
or
out
pop
sti
xchg
xor
or
orl
add
fcmovnu
dec
pop
xor
mov
mov
xchg
inc
push
add
mov
pavgb
mov
xor
mov
loop
mov
icebp
push
inc
add
mov
data16
inc
mov
xor
mov
inc
jae
mov
mov
sub
mov
popa
insl
sub
stos
mov
mov
add
mov
push
outsl
ja
arpl
icebp
adc
mov
push
mov
mov
stc
xchg
xor
mov
dec
cld
fmuls
cmp
mov
shll
loope
int3
or
daa
decl
in
mov
mov
std
test
cmp
add
sub
cmpsl
and
dec
outsl
aas
div
movsb
lret
lea
or
mov
rorl
outsl
mov
insb
aas
jl
mov
mov
mov
mov
fdivrl
adc
mov
jle
add
in
fcmovne
mov
xchg
mov
pop
adc
mov
mov
mov
mov
push
loop
mov
adc
mov
push
add
mov
pop
xchg
mov
mov
mov
push
and
jecxz
add
mov
add
imul
or
shl
dec
dec
mov
jnp
sub
cmp
daa
lods
das
jne
lahf
jecxz
dec
jnp
mov
push
lock
push
add
fstpl
mul
push
sbb
add
mov
mov
xchg
add
call
add
cltd
xchg
add
mov
inc
testb
cmc
popf
in
in
and
add
loopne
mov
out
sbb
scas
lahf
sbb
rolb
mov
dec
cmpsl
mov
out
sbb
push
jg
dec
or
lods
je
jo
mov
cmp
test
sub
add
xor
fs
adc
xchg
add
sub
mov
lds
repnz
jl
jmp
rolb
mov
mov
aaa
and
mov
mov
mov
add
xchg
in
sub
mov
mov
add
arpl
sub
dec
fdivs
mov
rolb
mov
movsb
xor
mov
jae
and
stos
popa
jne
pop
imul
xor
add
pop
ret
cmpsl
rcrl
das
push
add
adc
mov
daa
cs
add
sub
jns
mov
inc
cld
outsb
stos
clc
call
loop
mov
pushf
pop
test
fwait
addb
rolb
scas
pop
lea
push
stc
rcll
add
dec
mov
add
mov
and
pop
hlt
jae
nop
add
pop
mov
sbb
cs
add
insb
dec
jle
add
sahf
xor
es
cmpsb
or
test
lret
jge
iret
xchg
mov
xchg
ja,pn
dec
aaa
mov
test
lea
dec
in
cmp
ss
inc
inc
jnp
fbld
lea
dec
test
xchg
sub
jmp
cmp
push
lock
add
add
adc
mov
sbb
rcll
psllw
push
or
push
lahf
push
push
std
movsl
adc
mov
pushf
dec
lock
imul
cli
jae
jo
mov
add
cltd
int
add
popa
test
data16
aam
xor
aad
scas
lods
sub
jno
xchg
xchg
shl
add
mov
mov
or
xor
shll
add
fcomps
filds
pop
aas
jns
out
xor
and
repz
cmpsb
sbb
loopne
mov
jne
add
cmp
mulb
sti
dec
adc
imul
into
mov
mov
sbbl
jae
jo
mov
ljmp
mov
rorl
jno
sub
stos
mov
fidivrl
stos
mov
in
add
sub
cli
std
fstpt
add
mov
pop
push
mov
add
iret
xchg
adc
mov
mov
mov
fcomps
ja
mov
adc
mov
push
pop
mov
adc
xor
inc
add
jne
into
std
jno
in
mov
dec
push
mov
push
movsb
xor
xchg
dec
jbe
fs
pop
out
jmp
add
outsb
pop
cmp
add
add
jp
push
add
mov
repnz
add
loopne
mov
rolb
xchg
mov
mov
mov
std
sub
jne
push
out
int3
lcall
test
ss
fwait
inc
fistps
mov
fs
sti
mov
xchg
sbb
or
aam
inc
iret
lahf
jmp
clc
mov
mov
add
arpl
arpl
leave
lcall
add
dec
mov
or
addb
push
add
adc
std
and
mov
scas
cmpsb
jne
add
dec
add
add
and
mov
inc
frstor
adc
shll
sub
mov
mov
xlat
movsb
jnp
ss
fiadds
cltd
xor
add
out
std
push
insb
push
addb
pushf
mov
xchg
pop
or
dec
mov
mov
mov
das
push
or
sub
ret
insl
out
xchg
mov
mov
movsb
aam
dec
fwait
mov
add
aas
nop
add
add
inc
out
pop
fmul
cmpsb
inc
je
mov
push
rolb
movl
dec
out
cs
shld
mov
jle
add
lcall
mov
sbb
hlt
pop
fnstsw
test
outsl
aaa
outsl
stos
cmp
lcall
call
add
mov
lods
int
fcomip
test
add
mov
push
sub
dec
or
add
lahf
sub
lcall
and
add
rolb
mov
lods
loope
jno
or
push
add
jnp
inc
push
xchg
add
jbe
ret
lcall
pop
adc
mov
mov
pop
lock
loop
mov
xor
dec
mov
mov
fisttpl
les
jl
add
and
out
call
mov
add
imul
adc
add
dec
xor
movsb
sub
int
push
out
movsl
jg
movsl
sbb
out
loope
add
ret
cmp
and
rolb
mov
add
xchg
mov
pop
leave
movsb
rolb
mov
and
mov
imul
add
out
mov
and
inc
mov
sbb
ret
addb
mov
add
adc
imul
int
addb
mov
insb
jecxz
in
push
repnz
lret
ss
cmc
add
mov
scas
in
cmpsl
mov
stos
inc
cmp
sub
rolb
mov
mov
ja
cli
jne
adc
aas
aaa
sbbl
jno
jge
mov
mov
sbb
mov
mov
add
mov
loope
push
lea
mov
add
adc
mov
mov
pusha
add
mov
add
mov
test
gs
add
lea
jno
dec
add
mov
cmc
cmp
test
add
mov
or
mov
divb
adcl
xor
push
inc
push
ljmp
nop
add
add
xor
mov
lea
push
repnz
mov
test
adc
and
xor
les
or
outsl
cmp
notb
jo
mov
push
or
scas
fisttpll
sbb
int
xchg
sbb
fwait
rolb
inc
negb
lea
insb
mov
cmpsb
shl
int
add
mov
mov
sahf
mov
pop
inc
call
jns
mov
into
out
add
popf
cs
clc
out
int3
or
mov
add
out
or
mov
lret
stos
lret
add
mov
dec
stc
push
adc
mov
stc
sub
sbb
add
mov
add
push
add
in
sub
js
lcall
insb
push
das
add
mov
xchg
aad
add
pop
lcall
or
pop
jg
fidivl
add
or
cltd
rolb
mov
ret
xchg
setge
popa
ds
inc
add
bound
mov
jbe
add
test
mov
add
mov
imul
mov
mov
test
loopne
mov
add
xchg
add
mov
pushf
fcmovnb
ds
add
mov
add
mov
shll
mov
sbb
push
mov
sbb
mov
rolb
mov
xchg
jle,pn
add
out
sbb
rolb
mov
jge
cwtl
int3
cmp
xchg
cli
movsl
dec
xor
je
add
jnp
add
out
movsb
pop
cmp
movzwl
push
adc
ja
std
push
pop
mov
adc
xlat
adc
mov
mov
add
inc
push
or
push
ja
bound
mov
leave
sbb
sub
add
popa
dec
sbb
fdivr
js
add
lea
das
sbb
nop
add
fnstcw
mov
xchg
xlat
imul
mov
add
adc
mov
in
mov
sub
dec
mov
add
flds
pop
jo
mov
mov
pop
dec
int
cli
push
lahf
xor
out
stos
hlt
lahf
cld
xchg
movb
js
fstpl
cmp
lods
mov
push
dec
mov
inc
jno
mov
sbb
or
or
add
xor
icebp
addb
lods
cmp
inc
add
jmp
ret
add
mov
gs
aas
cs
pop
popa
pop
add
mov
add
add
bound
mov
add
jnp
out
push
mov
xor
mov
push
sub
pop
or
add
dec
and
add
mov
add
dec
nop
add
add
mov
xor
mov
leave
mov
mov
push
add
xor
mov
push
pop
jb
mov
scas
inc
add
add
inc
add
outsl
lds
mov
jmp
mov
sbb
jae
insb
or
loope
add
add
add
cli
jle
popf
aam
or
adc
mov
lret
and
in
add
add
and
dec
add
addr16
jge
add
outsl
mov
cmp
add
fbstp
xor
ret
flds
cmp
dec
xor
add
mov
mov
addb
inc
xchg
add
out
cmp
inc
js
movsb
enter
mov
cmp
mov
and
mov
adc
movsb
push
push
add
mov
mov
lods
xchg
mov
decb
add
leave
pop
and
mov
ds
add
add
sub
mov
sub
lret
and
mov
mov
pop
repz
sbb
pop
cmp
insl
rolb
mov
loop
mov
add
add
mov
test
push
rcl
int3
cmpsb
inc
enter
add
dec
out
adc
mov
mov
into
push
add
ficoml
inc
xchg
mov
cmp
stos
and
add
int
and
mov
jle
rolb
lea
add
push
int
push
push
add
mov
inc
cmp
push
fnstsw
mov
lds
mov
adc
mov
sub
add
pushf
push
xor
push
mov
xor
fldenv
cmp
popa
enter
mov
push
add
mov
add
mov
mov
xchg
jns
fwait
stos
lods
jns
and
rcl
or
mov
movsl
pusha
add
pop
adc
sbb
xchg
addb
es
push
fmull
xor
popf
mov
icebp
inc
add
cld
push
and
jp
cmpsl
ds
mov
jmp
add
adc
mov
push
add
addb
xchg
push
cmpsb
addb
add
mov
cwtl
mov
add
adc
mov
xor
pop
pop
out
and
jns
and
mov
mov
mov
xchg
rolb
mov
cmp
adc
add
repz
mov
cmp
pop
push
xlat
fcompl
and
add
mov
lea
mov
lcall
fisttps
ret
xor
aad
sub
add
add
xchg
jbe
add
lods
jp
and
pop
repnz
mov
push
dec
lcall
iret
dec
inc
cltd
jecxz
add
js
ljmp
mov
pop
shr
cli
ret
in
insb
add
mov
loope
rcr
icebp
lods
push
pop
aaa
dec
adc
andl
jns
xor
pop
movsl
mov
mov
mov
add
sub
lds
test
add
addr16
dec
test
mul
cs
lcall
xor
int3
xchg
lret
xchg
add
addb
mov
inc
or
movsl
add
xor
mov
je
outsl
mov
dec
dec
adc
mov
mov
xrelease
mov
mov
in
enter
out
push
addb
out
incb
sbb
addb
clc
jle
xor
inc
ds
aaa
mov
push
or
push
sub
lods
shll
daa
negb
sub
shr
imul
xor
mov
lock
ret
shrl
push
adc
mov
add
add
jo,pt
mov
add
shll
mov
push
int3
mov
add
mov
and
xor
pop
lahf
hlt
popf
xchg
add
adc
mov
std
sub
outsl
aaa
xor
lret
mov
add
mov
add
xchg
pop
or
je
mov
fwait
mov
cmp
mov
ljmp
rolb
mov
jns
add
inc
inc
pminub
xchg
add
add
arpl
add
js
stos
test
fcmovnbe
add
add
mov
push
xchg
add
movsl
imul
fisubrl
jg
mov
fsub
mov
lret
enter
mov
popa
fsubs
mov
add
scas
adc
add
sub
inc
add
outsb
lea
test
pop
pop
addb
pop
xchg
dec
test
mov
in
adc
xor
xchg
sbb
js
fwait
fwait
repz
inc
or
nop
add
mov
add
mov
add
aam
jbe
mov
daa
mov
daa
and
mov
fwait
jae
and
mov
negb
cltd
iret
clc
ljmp
pop
pop
sub
push
xor
inc
dec
hlt
das
cmp
push
sub
arpl
adc
mov
rorl
ret
and
mov
ja
push
cmp
mov
in
nop
add
mov
xor
mov
aas
lock
or
pop
scas
lahf
scas
hlt
nop
add
add
or
adc
add
mov
imul
jne
dec
shr
scas
stc
inc
adc
add
mov
mov
movsl
imul
jne
movntq
cmpsl
aad
and
addb
dec
addb
lret
and
fistl
mov
dec
cmp
mov
addr16
out
add
mov
mov
add
cwtl
dec
ja
rolb
mov
xor
ret
scas
sbbl
daa
adc
lea
out
addb
leave
loop
mov
pop
rolb
roll
out
sbb
add
leave
sbb
jb
mov
mov
add
add
mov
xchg
mov
into
jnp
add
pop
daa
xor
hlt
push
dec
movsb
stc
test
jb
mov
out
mov
cmpsl
jno
xor
aam
xor
and
clc
roll
mov
mov
and
std
mov
jae
push
test
scas
dec
mov
jge
mov
add
jnp
adc
sti
cmp
mov
add
mov
cmp
push
fxch
rolb
mov
add
fimull
mov
jmp
lea
sub
test
repz
imul
scas
mov
stos
cmpsl
jae
test
mov
add
cmp
sbb
sbb
fcmovb
add
cltd
sub
mov
mov
daa
and
enter
jmp
mov
and
mov
jns
sahf
jno
xor
das
popf
aad
clc
dec
push
mov
adc
mov
mov
loopne
mov
adc
mov
mov
enter
inc
add
mov
mov
pop
in
outsb
or
add
in
addb
scas
lock
mov
iret
stc
mov
add
mov
push
cmp
add
bound
mov
or
add
jle
push
lret
xchg
repz
add
repz
lock
ljmp
dec
cmp
mov
mov
cmp
outsb
daa
in
adc
mov
adcl
daa
dec
sub
mov
movsb
aad
xchg
mov
xchg
dec
ficoms
push
push
pop
imul
sbb
gs
and
push
add
jnp
insl
add
add
add
add
nop
add
stc
lcall
and
xor
pop
jmp
std
outsb
cmp
add
aaa
paddusb
add
add
and
fbstp
mov
cltd
cwtl
jle
std
push
call
mov
xchg
mov
mov
xchg
lods
dec
sub
movsb
sahf
inc
add
outsb
sti
cld
int3
filds
leave
cmp
add
enter
stos
ret
mov
icebp
jae
icebp
and
add
xchg
imul
mov
fmuls
mov
fsub
cmpsb
cmova
push
out
pop
les
inc
das
pop
mov
mov
push
cmp
notl
add
gs
sub
sub
push
pop
cli
push
adc
xor
mov
cs
adc
cltd
mov
add
dec
xlat
cwtl
or
lcall
clc
jno
xchg
insb
cmc
into
hlt
sub
mov
mov
inc
inc
add
out
mov
sub
sub
cltd
inc
add
mov
cmp
imul
out
inc
add
iret
inc
sbb
scas
dec
sbb
daa
fs
enter
aam
in
adc
sbb
mov
dec
jmp
ds
mov
fcompl
fnop
add
jae
pop
movsl
cmc
jo
mov
mov
test
fldenv
push
dec
dec
icebp
sbbl
cmc
hlt
cmpsl
and
mov
mov
mov
jp
in
popa
xor
int3
jge
fcompl
in
mov
push
adc
add
xor
mov
stos
cs
add
cli
xchg
xor
shll
shll
lea
xchg
test
cld
adc
mov
mov
jns
xor
fwait
sarl
sub
jle
cmpsl
pusha
add
scas
insb
mov
push
enter
ljmp
out
pop
jp
mov
cltd
sbb
mov
mov
lret
enter
std
jo
mov
mov
push
adc
mov
mov
in
popf
ficompl
test
jecxz
jmp
sahf
fimull
xchg
jno
dec
mov
adc
mov
loop
mov
inc
add
lahf
xchg
jmp
movsl
inc
sbb
mov
mov
add
lahf
mov
xchg
rolb
mov
cmpsl
jo
mov
mov
pop
mov
rcrl
and
add
ja
ret
popa
lds
add
inc
or
out
cmp
add
addb
insl
add
sti
lret
movsb
fstl
mov
or
cld
sti
scas
pop
es
mov
mov
jae
cmpsl
es
mov
dec
fidivl
add
mov
mov
xchg
add
or
les
lock
arpl
add
jge
outsb
push
add
or
add
loope
inc
xchg
dec
pop
pop
mov
stos
adc
add
dec
in
js
or
fwait
hlt
or
stc
in
xor
mov
enter
rol
mov
xor
mov
flds
mov
add
xchg
cli
insl
popf
hlt
sub
fbld
dec
test
or
data16
jg
scas
ljmp
mov
pop
xchg
add
and
stc
mov
mov
ffree
add
adc
rcr
cmp
cmpsl
es
or
push
push
inc
rolb
mov
xlat
sbb
jne
jp
je
push
add
mov
ds
sub
push
lds
das
pop
lock
add
pusha
add
xor
add
aaa
out
lods
scas
jmp
movl
das
mov
add
mov
push
adc
out
leave
or
add
out
addb
jns
mov
inc
test
add
addb
lcall
cwtl
test
loop
mov
mov
pop
rolb
mov
jle
pop
xchg
iret
aad
fs
jg
mov
mov
mov
cltd
repz
movsl
addb
sbb
adc
fstpl
cmp
cmpsb
xchg
add
mov
mov
add
pop
mov
into
ljmp
rolb
mov
and
mov
call
mov
iret
xchg
shrl
sti
mov
mov
inc
cmp
adc
cltd
js
add
add
mov
or
and
adc
popl
sbbl
mov
dec
push
cmp
mov
mov
out
add
add
jge
add
mov
sub
add
mov
mov
sub
dec
push
add
mov
popf
jl
jecxz
ret
into
jl
cmp
test
orl
mov
mov
sahf
xchg
add
add
mov
add
add
push
jle
pop
sub
decl
and
inc
in
xchg
pop
xor
add
mov
mov
loope
cwtl
inc
fwait
std
jle
das
movsl
pop
rolb
mov
add
inc
mov
mov
add
xor
mov
addb
popf
repz
in
add
stos
jb
mov
mov
pop
inc
jne
pop
push
or
add
mov
jl
add
mov
or
ljmp
add
xor
mov
cwtl
daa
outsb
std
lods
mov
addb
lods
lahf
add
adc
sub
cpuid
add
leave
xchg
fstl
aas
push
lods
pop
push
push
sub
sub
daa
push
add
insb
push
mov
mov
mov
add
mov
test
stos
arpl
add
dec
lahf
jl
fiaddl
jne
mov
jg
mov
into
es
in
add
mov
add
enter
mov
push
add
and
mov
push
mov
xchg
adc
xchg
fwait
xchg
popa
cmp
into
outsb
into
dec
outsb
out
lret
and
mov
stc
sbb
cwtl
addb
lahf
dec
mov
mov
in
out
arpl
xor
mov
dec
and
mov
leave
ret
and
mov
jl
rolb
insb
outsl
stc
push
aad
loopne
mov
lret
jmp
mov
mov
cmp
mov
pop
cld
mov
xor
stos
popf
push
pop
lret
jge
jle
es
insl
xor
jbe
fmuls
pusha
add
inc
add
inc
add
push
dec
mov
mov
jp
push
add
jnp
add
addl
cvtps2pd
sahf
test
add
repz
sub
mov
mov
stos
jmp
jns
addl
dec
pop
sbb
fdivr
test
or
mov
add
stos
jne
mov
or
scas
cmp
mov
adc
ljmp
sbb
inc
add
xchg
jmp
loopne
mov
add
adc
cmp
jge
jge
popa
outsb
dec
xchg
lret
xlat
je
sbb
mov
mov
push
add
insb
call
aas
push
add
mov
subl
add
push
xor
jo
mov
cltd
xchg
and
mov
jmp
add
int3
test
adc
arpl
add
pop
dec
mov
mov
ret
or
inc
add
pop
xlat
pop
ljmp
fiadds
add
mov
push
add
cmp
sub
mov
sub
mov
push
cwtl
push
add
mov
mov
out
iret
ss
add
mov
add
movsl
inc
cmp
jb
mov
pushf
mov
jae
mov
mov
mov
sbb
fistpl
jecxz
movsb
into
cltd
adc
xchg
add
roll
test
cwtl
gs
dec
add
inc
pop
addl
movsl
pop
xor
ds
inc
test
add
xor
mov
cli
test
jle
movsb
xor
mov
mov
jle
sub
and
rolb
mov
pop
mov
call
rorl
dec
jmp
xor
mov
jno
add
stos
aad
inc
ja
in
jg
sbb
mov
mov
add
dec
mov
pusha
add
push
aad
push
mov
enter
mov
mov
adc
lds
pop
popa
and
mov
scas
stos
mov
rolb
inc
stc
push
add
popa
fdivl
rolb
mov
pop
xchg
call
in
add
mov
mov
fsts
add
mov
add
rcll
adc
add
add
dec
sbb
xchg
add
add
xor
mov
iret
push
addb
xor
push
repnz
sbbl
mov
mov
push
fcmovnbe
mov
xchg
mov
add
jg
mov
add
ret
push
and
add
cmpsl
lock
push
add
adc
aaa
ljmp
push
mov
cmp
inc
sti
rolb
mov
jmp
int3
gs
insl
jp
and
mov
out
add
mov
jae
lcall
jp
mov
aas
hlt
sub
ret
mov
add
mov
add
mov
add
add
fs
mov
xlat
into
push
adc
rolb
xor
out
add
insb
call
clc
test
sbb
outsb
sbb
imul
out
push
icebp
leave
cltd
sub
lea
repz
pop
notb
push
dec
lods
repnz
fdivl
mov
dec
int
and
mov
out
sub
daa
mov
xchg
add
lcall
notl
xlat
sub
inc
out
mov
rolb
mov
lock
mov
addb
int3
in
or
das
orl
jg
sbbl
mov
in
out
popa
jnp
xor
mov
cmpsl
repnz
mov
push
push
lcall
mov
mov
loop
mov
sbb
jg
lock
out
add
jp
add
addb
sbb
fdivrs
dec
js
cwtl
jge
sub
mov
clc
mov
data16
mov
out
add
lret
pop
lods
push
push
push
dec
fldcw
xchg
mov
add
mov
mov
mov
paddusb
mov
mov
xlat
iret
cmp
stos
repnz
add
insl
xchg
icebp
mov
lret
sbb
jne
je
cli
stos
les
int3
dec
fcoml
add
mov
jo
mov
add
xorl
fisubs
pop
mov
xchg
push
and
mov
clc
cmp
mov
mov
add
sbb
mov
mov
insb
in
pop
sbb
cltd
mulb
sti
push
cmp
sbb
push
jae
cmp
rolb
inc
fnstcw
test
out
xor
add
push
in
lahf
dec
insl
push
xor
std
dec
loopne
mov
jmp
ss
iret
jbe
add
jp
add
push
pop
dec
mov
out
adc
ss
mov
mov
mov
mov
pushf
push
outsb
loop
mov
pop
lea
and
cmp
jnp
jle
mov
inc
mov
xchg
fistps
mov
inc
push
jnp
adc
sub
add
add
add
jecxz
pop
pop
mov
dec
in
inc
sbb
adc
mov
cld
mov
inc
or
mov
leave
fisttps
xchg
cmp
jo
mov
mov
js
dec
test
mov
lret
fildl
or
imull
movsl
repz
adc
mov
andl
outsl
inc
add
or
les
dec
mov
in
adc
mov
add
test
aam
add
mov
sub
loopne,pn
mov
push
and
inc
pop
adc
add
movsl
xlat
cmc
cltd
cmp
add
sub
inc
add
push
bound
mov
popa
mov
dec
sahf
fimuls
mov
add
sub
mov
lds
cld
sahf
dec
js
rolb
mov
in
and
mov
daa
xor
mov
divb
icebp
ret
and
testl
mov
xor
mov
rolb
mov
add
loop
mov
add
xchg
add
sbb
pop
pop
popf
inc
pop
lods
sbb
test
repnz
inc
aaa
push
dec
mov
popf
das
into
out
add
scas
je
cs
push
xor
stc
xchg
movsl
pop
mov
mov
lods
cld
ds
add
sub
add
in
jmp
sbb
icebp
nop
add
scas
mov
xor
leave
cmp
cmp
int3
mov
add
sbb
pop
xor
mov
sbb
xchg
or
jnp
les
mov
cld
adc
or
fnstenv
add
push
xchg
jl
fildll
adc
mov
outsl
mov
cli
ja
mov
xlat
arpl
cld
in
sbb
add
adc
mov
push
fldt
add
ficoms
add
mov
xchg
inc
jmp
jg
pop
addb
out
mov
mov
ljmp
in
insb
aam
add
add
call
mov
popf
xor
mov
add
call
mov
xchg
inc
inc
insb
fdivrp
cmp
insl
mov
inc
inc
add
add
mov
ljmp
add
mov
insb
mov
mov
iret
mov
test
jne
push
add
aam
fimuls
mov
add
mov
or
jns
dec
dec
aam
mov
xor
jb
mov
sub
sbb
inc
push
add
mov
mov
mov
mov
mov
fdivl
mov
add
je
daa
ret
fwait
lret
add
mov
mov
mov
cmp
out
xor
mov
sbb
xchg
insl
addb
fisubrs
ljmp
xchg
fdivs
xchg
adc
mov
dec
inc
add
add
cli
mov
je
pop
xchg
addb
in
xchg
loopne
mov
sub
add
ja
into
xchg
mov
sub
popa
mov
cmc
gs
mov
test
je
xchg
xadd
mov
in
pop
outsb
xchg
stos
ljmp
or
inc
add
aas
xor
mov
stc
adc
out
mov
and
jmp
or
insb
adc
mov
hlt
sub
add
mov
mov
mov
add
xchg
mov
add
pop
insb
cli
call
add
or
pop
outsb
dec
inc
add
push
dec
mov
daa
jbe
lret
ds
pusha
add
out
or
push
add
or
add
inc
insb
jnp
xchg
icebp
addr16
and
mov
pop
es
and
mov
mov
adc
test
pusha
add
aas
cmc
push
rolb
jge
and
mov
add
xchg
or
add
negb
cmp
add
adc
push
faddp
jns
loopne
mov
mov
xor
mov
cmp
jns
add
and
ficomps
xlat
roll
jns
push
add
outsl
add
in
aam
test
adc
pop
jp
xor
mov
dec
aaa
jb
mov
jmp
push
nop
add
mov
lahf
out
and
leave
ljmp
xchg
xchg
cltd
and
pushf
mov
jg
xchg
rorl
sahf
jge
add
add
mov
outsl
adc
incb
jle
subl
test
or
add
mov
jl
addr16
sahf
outsl
jp
jns
add
out
int3
leave
xchg
mov
add
notb
pop
cmp
pop
sti
sbb
and
repnz
sbb
das
out
jg
add
cmp
mov
xchg
daa
push
inc
addb
jp
stos
jae
addb
lods
outsb
or
or
push
fcmovnbe
jp
add
mov
popa
call
in
xchg
out
repz
push
inc
stos
ljmp
mov
push
es
xchg
push
xchg
and
mov
add
or
ret
ret
sbb
test
jne
dec
movsl
arpl
push
addb
cmp
mov
jecxz
push
inc
sahf
fdivrl
mov
loopne
mov
add
lret
mov
addb
sub
js
pop
mov
mov
add
out
filds
fildll
iret
out
enter
je
test
test
call
push
or
popa
test
int
sub
add
or
add
dec
imul
in
sbb
rcrl
add
mov
imul
frstor
insl
mov
inc
and
mov
jecxz
push
add
add
mov
mov
loop
mov
push
das
lret
add
push
mov
mov
add
cmpsb
mov
jb
mov
pop
mov
add
mov
mov
test
add
loopne
mov
inc
inc
out
mov
stc
jg
and
add
mov
mov
fisubs
mov
sub
mov
adc
add
xchg
into
cs
add
or
adc
mov
and
mov
int3
pop
jl
add
xchg
add
ret
sti
loope
cwtl
test
inc
add
add
cmp
pop
fadd
fs
cmpsl
add
cltd
stos
and
jl
xchg
xchg
testl
add
add
mov
add
sarl
adc
mov
or
std
xor
add
mov
pop
push
push
sub
mov
sbb
lods
movsb
ret
repnz
vmwrite
add
add
imull
jns
stos
pop
pop
test
mov
addb
push
in
xor
push
add
in
int3
sbb
nop
add
add
sub
xor
mov
fidivrs
aas
sbb
mov
test
pop
cs
jecxz
insb
dec
jb
mov
xor
mov
mov
mov
int3
call
mov
ret
and
mov
jl
leave
xor
mov
add
xchg
xchg
lcall
movsl
stos
scas
mov
add
lock
pop
mov
xchg
xor
mov
add
dec
aaa
push
dec
dec
fdiv
add
push
add
mov
test
aas
in
cmpsl
xorl
add
cld
stc
gs
insb
fldl
test
add
cmp
push
adc
xchg
mov
mov
sbb
sub
jle
jmp
mov
lahf
xchg
pop
jns
ret
add
mov
add
sbb
fdivrl
into
fistps
insb
in
iret
and
out
lea
add
and
push
data16
daa
pop
jb
mov
add
mov
in
inc
push
inc
and
mov
mov
mov
sub
add
mov
add
ffreep
pushf
test
shr
add
popf
jp
mov
mov
mov
xchg
mov
into
push
test
negb
call
stos
jo
mov
add
test
rolb
mov
mov
adc
mov
or
mov
mov
icebp
fwait
cmp
sub
sti
or
loopne
mov
jp
add
dec
aas
aas
xor
fstpl
outsl
push
ja
mov
mov
xchg
rolb
mov
addb
inc
jle
sub
clc
insb
push
inc
add
push
adc
fsubs
cmp
xor
mov
sub
mov
nop
add
inc
dec
adc
dec
stos
cmp
add
call
or
push
lret
mov
add
bound
mov
loopne
mov
sbb
mov
add
or
sub
in
pop
std
pop
xor
mov
adc
into
rolb
sbb
add
aad
aad
mov
jae
mov
jne
stos
push
push
loopne
mov
mov
jo
mov
das
lahf
sub
push
adc
lock
xchg
cli
into
subl
pop
iret
add
mov
add
pop
or
mov
stos
jbe
or
jmp
add
mov
xlat
add
lret
das
xorl
pop
aaa
jo
mov
push
bound
mov
and
push
cmp
daa
cmp
lock
mov
call
movsl
clc
lret
push
clc
repnz
mov
aam
ja
es
inc
adcl
testl
pop
into
jecxz
mov
out
sbb
or
pop
ljmp
jae
das
jmp
outsb
inc
in
insl
fidivs
or
push
dec
jns
faddl
mov
and
mov
push
inc
pushf
or
mov
flds
cmp
dec
xchg
pop
fcomi
fstps
mov
push
add
cld
scas
aas
mov
divl
stos
insb
popa
and
repz
inc
add
addb
sub
ss
jnp
mov
inc
xchg
aam
add
add
push
add
cmp
notl
mov
jge
roll
mov
add
mov
pop
dec
xchg
out
in
add
ss
insb
mov
mov
mov
mov
jno
mov
pop
fsub
add
lahf
pusha
add
mov
pop
ret
fcomip
adc
mov
filds
dec
sub
aas
mov
js
rolb
mov
and
and
push
fimull
xor
mov
cs
add
adc
mov
add
xlat
cmpsl
stos
cmc
mov
mov
cmp
pop
rolb
mov
push
inc
jg
out
enter
inc
add
pop
hlt
lahf
jns
sbb
sub
shrl
fsubrs
mov
test
fs
cmp
ljmp
test
das
dec
sub
push
std
fstl
add
push
das
sbb
pop
xchg
inc
lock
add
adc
xlat
popf
push
fwait
mov
rolb
mov
lock
cltd
test
arpl
mov
add
mov
or
push
out
add
aam
adc
pop
mov
arpl
add
mov
lcall
bound
mov
or
frndint
orl
mov
aad
and
mov
add
iret
std
pop
lock
inc
mov
jo
mov
scas
xor
add
rolb
mov
out
pop
xchg
push
cmp
mov
mov
mov
insb
xlat
add
mov
sbb
jp
ss
add
outsb
out
imul
cmp
dec
xchg
mull
mov
mov
add
xchg
inc
ficomps
inc
addb
scas
aaa
fimull
call
mov
cmp
push
add
add
pop
lds
or
mov
mov
ljmp
xchg
ja
int
dec
ret
sub
push
sub
mov
into
pushf
int
lds
rolb
mov
mov
xlat
leave
nop
add
mov
xchg
arpl
rorl
hlt
mov
mov
add
xor
add
addb
aam
add
inc
lret
xchg
addb
call
add
lock
jno
xchg
sbb
mov
pop
imul
add
lock
push
rolb
hlt
push
push
hlt
push
xor
mov
aad
je
push
inc
dec
add
repnz
mov
push
add
insb
insl
insb
movsl
add
inc
and
mov
inc
add
mov
sahf
xor
mov
clc
inc
pop
mov
mov
pop
push
fnstcw
addb
mov
push
pop
mov
add
xor
dec
stc
rolb
mov
inc
add
mov
ds
es
and
ret
dec
push
lret
xchg
ss
mov
adc
mov
mov
xchg
pop
sbb
or
xlat
cmpl
add
jbe,pn
push
mov
outsb
nop
add
ds
xor
mov
add
mov
aad
jnp
or
add
inc
push
add
add
inc
xchg
add
out
lcall
push
icebp
jbe
jo
mov
jae
mov
mov
add
or
add
repnz
mov
leave
xchg
add
adc
mov
je
nop
add
add
add
mov
or
xor
mov
call
dec
ror
cmp
mov
sub
call
and
push
clc
sub
dec
cld
rolb
mov
add
xchg
add
mov
jmp
int3
outsb
mov
and
or
test
movb
ja
add
mov
push
clc
rolb
mov
mov
mov
or
mov
mov
mov
sti
sub
push
notb
add
sub
sub
mov
loope
mov
pop
nop
add
mov
lds
dec
push
mov
xchg
xchg
loopne
mov
jno
add
cwtl
imul
into
mov
cmpsb
lret
mov
and
mov
popf
arpl
jb
mov
rcl
add
fst
arpl
mov
pop
push
decl
add
cvtpi2ps
pop
mov
stos
je
sbb
mov
add
add
xchg
pop
addb
mov
add
push
add
jp
outsl
xchg
add
xlat
lret
or
test
mov
pushf
mov
cltd
cmpsb
mov
dec
cltd
subl
clc
or
fdivp
and
mov
add
ret
fcomi
push
mov
add
es
je
jg
xor
cmp
dec
std
xchg
add
call
lods
dec
xchg
xchg
dec
pop
bound
mov
pop
xchg
lea
lock
icebp
popf
addb
fdivrl
scas
mov
mov
xlat
jns
add
sbb
mov
rorl
imul
mov
mov
mov
add
add
mov
push
cmp
add
mov
mov
pop
sub
jmp
fwait
push
loop
mov
jo
mov
cld
xor
or
fildl
sbb
pushf
lods
or
jae
pop
adc
mov
call
inc
mov
inc
into
scas
xor
mov
xlat
sti
mov
cmp
pop
idiv
rcrl
mov
dec
js
or
mov
mov
xor
mov
aad
adc
je
mov
xlat
mov
adc
mov
jg
jle
jo
mov
sub
scas
xchg
add
or
cmp
aam
add
jno
inc
add
scas
in
and
movsb
outsl
rolb
mov
inc
add
mov
loopne
mov
inc
add
stc
inc
lcall
in
sbb
sbb
daa
cmp
dec
stc
sti
dec
rolb
mov
mov
and
cmp
add
add
pop
adc
mov
push
cmpsl
arpl
mov
addr16
mov
les
pop
sbb
xchg
leave
lock
lcall
add
mov
dec
es
wbinvd
mov
add
mov
push
pushf
mov
dec
lret
out
cli
pop
js
jg
mov
mov
sbb
mov
lcall
xchg
int
out
movsl
cmpsb
jne
sti
int3
dec
iret
or
popa
in
mov
and
add
jle
push
addr16
add
pop
mov
insb
mov
adc
xchg
pop
push
andl
ret
jg
xchg
sbb
imul
jmp
mov
xchg
sub
xchg
push
in
arpl
and
mov
xrelease
sbb
push
mov
ds
jg
sub
push
sbb
cld
pop
adc
mov
jmp
pop
fstpl
ss
nop
add
insb
outsb
pop
jno
add
add
add
add
