xchg
rorb
add
inc
add
lret
insb
dec
push
inc
jns
add
add
popf
cmp
sub
cmp
ljmp
popa
inc
pop
adc
arpl
mov
mov
dec
cmpsl
adc
adc
push
add
jae
sbb
popf
rcrb
or
nop
lret
int
fsubs
aad
cld
iret
cmp
shlb
addr16
add
cli
fnstcw
stc
cmp
dec
stc
xchg
inc
add
sbb
ficoms
imul
rolb
add
xlat
sahf
push
lock
sbb
mov
jge
imul
lods
pop
or
cwtl
and
cltd
rcrl
bound
lods
pop
cmpsl
mov
repz
js
mov
out
insl
sub
movsb
adc
add
ficoms
mov
add
xchg
sarl
jmp
inc
aaa
pop
sub
aad
mov
jo
mov
mov
or
mov
movsb
fwait
out
jmp
cltd
pop
outsb
and
jle
xchg
or
fisubs
add
lahf
inc
dec
jl
out
jge
cwtl
clc
loope
shrl
jmp
addb
adc
addr16
cmp
pop
jp
add
insb
ret
fdivl
and
cmpsb
xchg
add
push
sub
push
add
push
adc
sub
daa
push
imul
inc
add
pushl
cld
jne
inc
add
outsl
sbb
test
das
xor
xlat
push
add
mov
xor
adc
xchg
popa
sbb
cmp
fsubrp
lcall
add
jl
mov
pop
mov
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
notl
push
sub
jae
sbb
cmp
bound
and
les
shl
and
mov
stos
lods
push
sub
or
inc
cwtl
push
rcr
inc
add
enter
shrb
inc
jg
push
adc
jp
xor
jbe
add
lea
sbb
fiaddl
or
out
push
stos
jne
add
dec
aad
push
xchg
add
cmp
jno
pop
mov
pop
ror
inc
add
ja
pop
fsubrp
dec
add
and
xor
sub
addr16
add
loopne
cmp
add
pop
xchg
mov
movsl
sahf
das
jne
leave
dec
cmp
imul
add
pop
ja
add
sbb
loopne
jle
add
mov
inc
add
movb
add
or
add
inc
xor
scas
sti
imul
pushf
inc
add
add
inc
pop
dec
add
scas
addb
ds
lods
stos
int
cmp
pushw
scas
stos
mov
rolb
mov
jmp
popa
adc
cli
adc
jae
jnp
adc
xor
ficoms
add
inc
or
cmp
addb
rol
adc
xchg
in
scas
rol
mov
loope
frstor
xchg
fs
add
mov
mov
in
push
mov
lods
push
jge
insb
outsb
sbb
shrb
sbb
imul
in
or
insb
and
stos
testl
fwait
push
testl
out
mov
adc
mov
xor
sub
jno
imul
in
push
mov
rorl
lret
jb
ja
add
lret
fnsave
adc
dec
dec
mov
scas
out
add
jg
mov
rolb
ret
cmp
push
jno
xchg
lret
or
outsl
popl
pop
jmp
push
add
cltd
xchg
scas
movsl
mov
inc
or
xor
test
add
stos
add
add
mov
dec
jno
sti
ficomps
addb
rolb
xor
add
into
inc
add
clc
cmc
setle
insb
hlt
and
sbb
ret
cmpsb
xor
add
iret
insb
adcl
fadds
dec
addb
lret
pop
sub
test
bound
das
es
in
sbb
adc
pop
adc
inc
add
jle
popf
cmp
stc
incl
cmp
sub
jge
add
or
add
leave
mov
mov
cs
cltd
int
clc
fcoml
mov
ds
pop
jae
incb
add
push
repnz
test
jne
dec
das
add
mov
xchg
cmp
movsl
sbbl
push
jecxz
nop
iret
ss
cmovg
aaa
push
movb
cmc
dec
pop
adc
js
lods
sti
fcomi
xor
out
daa
leave
and
out
sahf
pop
sub
mov
or
clc
paddsw
hlt
add
sbb
mov
test
pop
sbb
xchg
addb
data16
push
mov
xchg
icebp
mov
int
add
xor
addr16
lods
jno
mov
hlt
out
movsl
dec
iret
xor
lahf
cmp
sbb
add
call
cmc
out
divb
push
adc
sub
ds
mov
divl
and
sbb
cmp
fmuls
add
sti
mov
jns
inc
add
imul
das
and
les
hlt
jg
xor
out
loopne
loope
xor
es
imull
add
scas
mov
inc
nop
push
scas
enter
xchg
cs
dec
push
imul
lods
lcall
out
xor
mov
push
push
lret
push
dec
lcall
repz
outsb
mov
inc
add
mov
mov
iret
push
mov
pop
add
add
sbb
in
add
ret
lret
ja
lret
imul
cltd
xor
push
fcomps
push
add
jge
fs
add
gs
cmc
cmp
decb
dec
das
inc
add
add
cmp
mov
movsb
pop
rolb
clc
and
or
mov
ljmp
add
test
insb
and
add
shll
pop
shll
lods
pop
cld
sbb
jg
cmp
cmp
pop
popf
mov
je
and
lds
rolb
jl
stc
orl
les
ds
or
pop
insl
shll
rcrb
in
sub
or
add
rcll
mov
js
dec
jge
les
sbb
add
es
adc
into
testb
aad
insl
lret
std
ret
add
adc
dec
lds
adc
lea
out
ja
dec
cmp
leave
aad
pop
sbb
sbbl
inc
add
mov
add
inc
add
push
out
aaa
cmp
push
leave
popa
imul
xor
je
inc
negl
dec
pop
dec
and
mov
add
add
out
sub
and
outsb
sub
dec
xchg
addr16
sti
das
jl
into
lahf
and
inc
add
jge
daa
sbb
dec
sbb
cmpsb
dec
jns
mov
jae
lcall
lea
lock
mov
add
aas
xchg
jo
rcll
mov
mov
sbb
fs
xlat
cmp
cmp
faddl
add
popf
jmp
hlt
xor
test
pop
adc
add
das
jno
cld
dec
mov
add
pushf
jecxz
mov
sub
dec
add
rcll
aaa
pushf
and
mov
add
ja
jne
jb
add
insl
movsb
or
cmp
js
clc
xchg
out
sbb
data16
jg
addb
sbb
ret
push
mov
xchg
add
subl
adc
jle
add
inc
jg
mov
add
or
add
dec
pop
in
mov
jecxz
insl
scas
aad
fs
mov
insb
push
mov
fsts
jae
xchg
test
xchg
sbb
inc
adc
cmp
mov
das
inc
dec
pop
out
cld
pop
add
inc
add
pop
mov
mov
fisubl
add
repnz
jmp
addb
add
push
test
xchg
jns
add
push
add
loopne
shll
ja
setns
xor
enter
sbb
roll
flds
test
andl
adc
icebp
sub
sbb
dec
movsb
mov
add
and
mov
or
ss
jo
add
add
lds
cmpsb
ficompl
lock
adc
aas
cmp
mov
xor
scas
add
ljmp
rclb
or
xchg
adc
stc
movsb
inc
add
pushf
sbb
jmp
add
ljmp
movb
or
add
sub
add
mov
addb
mov
xor
cmp
les
or
outsb
dec
jg
add
jno
push
addb
shll
inc
add
push
jmp
cmp
xchg
dec
dec
lods
sbb
add
int
cld
es
push
jp
mov
adc
push
outsl
sub
cmp
ljmp
add
enter
pop
scas
pop
in
mov
mov
or
cmp
call
movsl
je
inc
int3
inc
bound
ret
dec
cmp
cld
jmp
mov
imul
test
adc
aad
mov
adc
add
xor
aas
cmp
mov
leave
lret
rcrb
iret
test
jno
fnstenv
and
fnstcw
shll
sub
mov
fistpl
fisubrs
push
add
xor
add
mov
and
push
cmp
cmp
cmp
dec
cmp
inc
add
add
xchg
cmp
pop
clc
je
test
cltd
or
xchg
lods
sbb
add
std
inc
loopne
loopne
sub
jl
icebp
clc
js
add
fsts
dec
jo
fists
addb
mov
mov
cmc
mov
adc
push
dec
push
inc
add
sbb
fcmovu
ds
add
aam
jns
add
add
leave
int
lahf
repnz
fdivrl
das
pop
mov
outsl
inc
push
add
adc
push
add
mov
xor
jle
jl
fldl
popf
mov
mov
pop
pop
pop
les
addr16
or
pop
lods
push
hlt
and
test
xchg
dec
cs
mov
xchg
pop
pop
mov
sahf
mov
jnp
int
ret
cwtl
dec
sahf
jp
into
jne
rcrl
mov
mov
jnp
and
xor
mov
daa
or
push
add
add
scas
pushf
clc
inc
add
movsl
mov
imul
test
mov
dec
mov
in
dec
or
and
sarb
or
repnz
adc
push
mov
mov
mov
das
popf
push
lahf
cli
lret
mov
inc
add
push
mov
dec
ds
hlt
dec
dec
adc
sbb
stos
sti
mov
xor
test
enter
loop
push
rcl
mov
jno
jae
fsubrp
negl
cmpsl
sub
cli
sarb
mov
das
mov
out
mov
sub
push
add
add
mov
add
sub
add
add
push
mov
sbbl
xchg
xor
mov
add
mov
popf
pop
shrb
out
int
in
mov
and
dec
jmp
pushf
jg
movsb
lods
adc
inc
xchg
imul
mov
insb
cli
scas
sbb
pop
cmpsl
sub
jmp
test
add
add
add
add
movb
xchg
cmp
jge
add
call
dec
div
jl
lcall
mov
insl
ja
bound
mov
mov
add
xor
mov
push
fcomip
jge
aas
and
sub
add
js
mov
aad
adc
add
hlt
adc
pusha
add
push
aas
or
inc
add
int3
mov
dec
lods
addr16
xchg
push
add
jle
xchg
mov
test
fwait
test
fstps
fwait
push
add
fmulp
or
jns
inc
push
push
movsl
leave
push
in
out
xchg
cmp
ljmp
leave
cmp
inc
add
jae
or
push
mov
jbe
in
fdivrs
les
std
xlat
or
or
daa
in
sti
jbe
push
jno
jo
add
dec
movb
fs
sbb
mov
xor
in
pushf
xchg
in
pop
mov
inc
add
mov
adc
pop
pop
mov
and
scas
sti
mov
xchg
adc
adc
dec
pop
mov
push
std
scas
inc
add
add
jge
test
inc
pop
inc
add
sbb
jmp
adc
inc
add
fxch
jp
add
mov
add
inc
dec
cmpsl
out
xchg
stos
push
add
and
add
push
aad
mov
or
or
popl
xor
fwait
push
inc
je
fcompl
faddl
xchg
pop
fs
push
mov
gs
sti
arpl
and
les
adc
add
add
add
xchg
lret
mov
pop
iret
lods
mov
sbb
scas
xor
je
out
xchg
add
mov
cmp
stc
sarl
in
in
xchg
subl
add
pop
xchg
test
icebp
and
fdivp
push
popa
dec
stc
fs
cld
xchg
jb
xchg
decw
inc
add
mov
testl
push
xchg
inc
add
xchg
pop
stos
iret
frstor
mov
mov
or
pusha
add
xor
sbb
jne
dec
cmp
add
cmp
xchg
repz
or
int
jbe
push
je
dec
xchg
jecxz
and
pop
repz
iret
mov
outsl
adc
dec
pop
push
dec
mov
fs
xchg
mov
je
jecxz
add
aaa
sub
push
stos
mov
jae
mov
cli
enter
add
adc
mov
addb
pop
or
add
pusha
add
jge
push
jae
pop
ss
sub
or
jb
sub
fdivr
movb
fxch
lcall
insb
lret
icebp
test
cmpsl
inc
add
push
and
add
jo
js
sub
rcll
add
cli
je
movsb
pop
inc
inc
add
outsb
and
movb
into
mov
jno
addr16
pushf
mov
push
and
faddp
testb
mov
add
rol
mov
pushfw
int3
mov
cmp
int
ja
add
or
pop
roll
std
dec
outsb
cmpl
addb
sbb
std
xlat
addl
add
shll
adc
pop
ret
hlt
gs
out
xor
insl
mulb
sub
mov
daa
dec
sub
xor
jbe
dec
and
pop
out
add
or
xchg
fildll
movsl
ja
add
xchg
mov
pop
into
negl
subl
add
or
push
les
rolb
cmc
aam
dec
popf
les
adc
adc
xchg
jnp
sub
or
aam
icebp
int
and
lock
or
xor
inc
add
add
xchg
jno
mov
ret
pushl
sub
add
lahf
loop
xchg
pop
sub
lock
inc
add
add
repz
xchg
cld
aam
dec
mov
add
mov
inc
pushf
popa
dec
xor
rcrl
cwtl
pop
orps
into
lcall
or
sbb
cwtl
dec
int3
fwait
xchg
mov
jmp
jp
add
popf
popa
dec
into
cli
xlat
addb
imul
mov
mov
fldlg2
rcll
xchg
aaa
jae
mov
arpl
pop
iret
dec
call
les
and
mov
jmp
lahf
sbb
mov
cmpsb
loope
add
jmp
fs
or
idivl
pop
mov
jl
adc
fwait
repz
inc
add
mov
add
je
movb
add
pop
or
and
push
cmp
sbb
sub
add
inc
add
sbb
pop
dec
std
sub
push
in
iret
sahf
enter
xchg
or
or
into
jge
add
imul
add
pop
push
lds
cs
dec
pop
ja
mov
mov
pop
add
inc
lret
ret
sbb
inc
xor
bnd
lcall
add
mov
je
mov
fs
mov
sub
pop
jae
mov
add
lret
add
fistpl
call
fwait
xchg
inc
add
cli
push
cltd
decb
and
mov
repnz
pop
test
mov
sti
jae
xchg
stos
movsb
xor
pop
lea
and
jno
jae
test
mov
cli
cmp
sbb
movb
push
jnp
xor
sub
bound
sarl
out
cltd
xor
inc
adc
inc
mov
pusha
add
cmp
loope
jge
push
xchg
adc
outsb
out
bound
pop
stc
rcll
or
jns
fcomps
scas
in
std
jecxz
repz
cltd
cs
add
mov
lret
adc
push
lds
bound
in
ret
pop
cmp
xchg
push
sub
cmp
mov
push
inc
add
arpl
add
pop
rolb
aad
sbb
fisttps
adc
sarl
sub
cmpsl
push
jle
shrl
jo
out
add
imul
cmp
pop
ret
outsb
mov
inc
popf
arpl
pop
or
mov
cmp
sahf
stos
xchg
aaa
lcall
mov
mov
jne
fildll
add
movb
and
xor
mov
test
or
popa
or
xchg
dec
bndstx
rolb
add
inc
add
mov
push
add
and
cltd
dec
jo
gs
testl
scas
fsubs
add
jl
inc
add
out
add
cmp
inc
add
xorl
lcall
xor
mov
adc
mov
mov
adc
outsb
pop
ja
and
out
and
jg
add
push
sbb
sub
push
arpl
rclb
test
les
movl
inc
add
jno
clc
int
lahf
mov
addb
mov
daa
sbb
mov
xchg
cwtl
hlt
ja
pop
sbb
movsb
mov
add
add
sahf
and
adc
stos
mov
add
mov
sbb
outsl
fldl
sbb
lcall
mov
imul
stc
popa
call
lds
in
add
sbb
sub
movb
jne
mov
mov
sub
cmp
repnz
sub
pop
movb
xchg
jo
mov
fsub
dec
das
inc
cmp
stos
iret
mov
repnz
fld
add
cmp
push
scas
dec
or
js
mov
sbb
fstpt
rcrl
sub
jns
fisubrs
in
in
incl
fisttpll
pusha
add
inc
add
jae
mov
dec
fists
jmp
loope
add
js
negl
xchg
pop
pop
dec
sbb
or
iret
pop
test
mov
jecxz
mull
dec
les
sbb
xchg
or
and
js
arpl
mov
add
mov
aam
iret
jae
mov
call
push
sub
jg
enter
or
roll
aad
dec
lods
dec
les
addb
call
iret
cmp
dec
ja
add
popa
push
outsb
clc
loope
arpl
imul
test
pusha
add
xchg
xor
lock
jp
sub
stos
test
mov
popa
and
daa
or
into
mov
push
sahf
mov
hlt
or
aas
arpl
or
mov
adc
inc
add
loopne
cmp
cmp
ret
pop
jp
pop
cmp
xchg
mov
imul
insl
dec
and
xchg
sbb
adc
cld
sub
mov
lds
add
sub
leave
gs
sub
arpl
push
and
jl
jo
cli
gs
add
outsl
into
rorb
rcrl
fs
movsl
addb
or
rol
sub
fsubrl
sahf
xor
mov
mov
outsl
jbe
add
pusha
add
add
dec
out
addb
mov
int
mov
sub
cmpl
jp
int
rolb
push
inc
add
decb
xchg
imul
cld
mov
notb
xchg
mov
add
fldl
jno
call
xchg
inc
add
js
adc
pop
data16
mov
jge
add
push
sahf
das
jg
pop
pop
push
add
in
add
lret
loope
xor
std
xor
sub
xlat
mov
cmp
ja
sub
xlat
rol
add
aas
pop
js
inc
adc
add
rolb
dec
cmp
push
aam
aaa
add
lret
dec
cld
loopne
mov
pop
inc
std
lahf
fdivrs
lret
out
dec
imulb
pop
pop
push
lds
sub
add
lock
push
jb
xor
stc
aas
frstor
aaa
xor
out
add
clc
enter
in
lea
mov
lahf
add
jecxz
shrl
rolb
xchg
dec
push
pop
dec
shl
mov
add
and
jb
mov
pop
add
jg
aam
jle
outsb
mov
lds
xlat
cmp
add
lcall
pop
mov
cmp
pop
xchg
les
lock
push
mov
ret
data16
inc
mov
or
cmpsb
add
sbb
cli
and
add
adc
daa
movb
add
adc
dec
clc
test
sbb
jmp
xor
cmp
lods
xchg
pushf
xchg
mov
inc
out
call
sbb
addb
add
add
rolb
xor
daa
mov
jge
imul
fdivp
mov
jp
xchg
sub
fdivp
mov
es
cmp
ret
imul
add
rcr
pop
sub
in
hlt
rcrb
add
pop
jle
cmp
push
mov
mov
push
aad
stos
pop
mov
adc
add
adc
clc
outsb
or
movsb
push
or
xchg
cltd
lods
mov
popa
xor
sub
fcomps
jo
test
stos
imul
icebp
pushf
xor
add
add
fcoml
out
mov
xchg
add
sbb
mov
ret
push
je
aas
les
lods
pop
or
out
xchg
pop
or
add
int
in
and
sub
or
test
xlat
push
lods
ret
xchg
jl
xchg
and
and
les
lret
enter
sub
mov
int3
jns
leave
cld
leave
out
out
mov
sbb
add
lret
leave
xor
add
sub
add
pop
data16
xchg
movsb
les
das
sub
bound
sahf
bound
cmp
shll
shll
das
inc
loope
sbb
gs
and
outsb
pop
fldl
mov
pop
fcomps
add
pop
jl
loop
pop
inc
add
test
xchg
lea
sar
outsl
scas
divb
push
popa
jge
jo
sub
add
and
dec
out
push
scas
push
mov
and
sub
jae
sahf
xchg
mov
jge
cmp
fwait
mov
xchg
ret
stc
insb
out
pop
or
fadd
add
jg
rorl
add
mov
xchg
mul
pop
pusha
add
xor
lods
clc
sub
sti
loope
pop
inc
add
add
or
shrl
add
dec
push
add
shrl
mov
insl
mov
jno,pt
sub
jnp
add
std
lahf
dec
outsl
js
push
idivl
repnz
xchg
out
aas
push
mov
and
rcrb
xchg
out
mov
adcl
dec
lods
arpl
mov
add
enter
fistps
enter
cmpsb
icebp
pop
les
inc
add
aaa
gs
xor
add
or
cmovle
inc
add
inc
xor
repz
dec
bound
push
push
push
add
jmp
loop
sub
shl
mov
fs
jae
add
adc
pop
inc
add
add
inc
add
arpl
data16
add
push
push
movsb
push
pop
mov
mov
stc
pop
mov
push
mov
add
jecxz
das
fwait
in
lahf
cmp
add
loopne
out
test
xchg
aas
call
pop
in
test
in
jne
mov
pop
repz
add
add
pop
adc
fldenv
int
in
and
cmp
push
jae
in
pop
jb
dec
fs
push
imul
out
addl
push
daa
scas
jbe
out
xchg
mov
dec
outsb
jge,pn
sbb
push
inc
cmpsb
add
fimull
pop
sbb
lcall
add
cmp
mov
cmp
mov
pop
sbb
mov
pop
ds
stos
xor
ret
outsb
push
ret
adc
push
imul
andl
add
mov
dec
mov
aam
dec
adc
movb
mov
add
jge
cmp
sbb
ret
outsb
out
jae
rcrl
rcl
xor
push
lahf
jl
dec
sarl
xchg
pop
outsb
dec
and
movb
leave
xchg
jb
in
fdivl
mov
outsl
in
popa
jb
inc
add
out
inc
mov
cmc
sbb
aam
pop
sbb
or
or
xchg
scas
xor
jge
mov
jb
out
sbb
popf
push
cmp
add
fistpll
cmp
inc
lods
ljmp
sbb
mov
addb
cwtl
pop
jmp
sub
push
fmull
movb
scas
js
jmp
and
sar
cmp
inc
add
aam
fwait
fwait
mov
test
daa
ss
repz
test
or
cmp
push
inc
add
mov
and
push
fisttps
leave
rcr
mov
addb
inc
faddp
add
add
add
popf
negb
mov
add
das
outsb
mov
xor
pop
dec
dec
mov
add
add
fistl
stos
jb
lods
xor
xlat
push
adc
cmp
mov
outsb
jo,pt
xor
push
test
movsl
cmc
lock
call
xor
pop
push
mov
pop
insb
std
sbb
add
adc
leave
sbb
mov
arpl
mov
and
nop
cmp
jae
xchg
sahf
fcmovnbe
ljmp
adc
adc
sub
neg
int3
fwait
sub
xor
xchg
push
mov
mov
mov
aaa
add
push
jbe
adc
xchg
mov
pop
imul
outsl
pop
pop
and
sti
shrb
shll
xchg
aad
insb
enter
add
push
popa
xor
addb
pushl
daa
fcmovnbe
gs
add
adc
push
mov
je
mov
inc
add
shl
cwtl
jmp
mov
add
das
mov
jns
jb
pop
pop
pop
dec
jg
cld
jge
aad
push
push
push
cmpsb
lods
mov
jb
push
fidivl
pushfw
sbb
movsb
dec
push
or
gs
adc
int3
icebp
outsl
add
arpl
xchg
retw
mov
shll
cmpsl
arpl
addr16
lret
movsl
push
aaa
cmp
add
lret
pop
mov
pusha
add
push
add
andl
push
mov
and
jno
cmpsb
shll
add
lea
cli
loop
add
stos
add
pop
int3
rcrl
xchg
int
shlb
in
fstps
sub
xor
xchg
dec
sub
pop
jle
add
fisttpl
add
subl
sbb
push
sbb
cmp
gs
adc
shrb
push
arpl
popa
jg
push
pop
pop
clc
add
and
pop
jb
xchg
inc
scas
sbb
movsb
xchg
xor
xor
stc
add
insl
xchg
rcrl
xchg
add
addb
repz
addb
xchg
shlb
incb
pop
fisttpll
pop
into
jae
aas
inc
add
fisubl
decl
cmpsl
inc
mov
lret
outsb
pop
inc
add
xor
sub
push
jno
add
add
add
inc
dec
mov
clc
add
add
push
repnz
inc
add
mov
das
push
aas
outsl
pushf
cltd
inc
movsl
scas
or
fnstenv
add
sbb
stc
je
push
add
addr16
pop
les
add
xor
rcrl
fcoml
call
lea
mov
enter
in
add
and
mov
and
xchg
lock
mov
push
aad
imul
stos
std
adc
mov
addb
xlat
daa
int
sub
rolb
cmpl
sti
sub
fimull
add
cmp
adcl
icebp
test
jg
mov
fldl
add
ds
cs
or
mov
cld
idivb
push
mov
in
enter
jbe
jmp
jp
ret
fidivs
dec
mov
xlat
pop
push
add
insl
or
lret
and
loop
fwait
inc
add
jle
cmp
scas
scas
scas
lret
cwtl
fsubrs
adc
mov
and
sbb
test
sbb
shl
call
jp
pop
jmp
xor
sub
cltd
insl
xor
add
inc
add
add
mov
mov
ljmp
push
add
adc
xchg
or
push
add
xor
mov
mov
inc
add
push
pusha
add
loop
and
aas
cld
adc
add
hlt
jnp
dec
mov
scas
pushf
pop
jge
mov
mov
pusha
add
inc
rol
xor
fcomps
add
sbb
inc
add
imul
fisttpl
push
mov
xor
ljmp
jb
add
push
add
rorl
xlat
es
arpl
add
cmc
aaa
and
sbb
jecxz
fsts
inc
flds
add
push
and
jne
jbe
mov
movsl
popf
xchg
add
sbb
push
test
mov
call
push
repz
xchg
mov
xor
jg
add
repz
mov
incl
ja
and
sub
subl
test
push
push
jns
pop
xchg
in
imul
mov
insl
mov
test
jg
dec
adc
int
jle
lods
in
sub
fidivrl
xchg
xor
mov
jnp
add
popf
imul
add
push
gs
pop
repnz
movsl
pushf
movb
add
repnz
dec
sti
pop
dec
rolb
xor
out
push
push
inc
add
pop
int3
xchg
imul
imul
dec
jns
add
data16
pop
pop
push
add
inc
cmpsl
xchg
inc
lods
sbb
popf
rol
sub
nop
fcmovnb
ja
inc
add
mov
mov
add
pushf
pop
in
rolb
aad
add
add
jp
jge
add
add
sub
and
loopne
adc
mov
add
mov
push
inc
jbe
call
sbb
stos
shlb
adc
mov
cmc
negb
inc
add
lds
ret
inc
pop
mov
xor
fdivs
sahf
out
and
inc
pusha
add
rolb
xor
cmc
mov
mov
jp
push
sub
loopne
popa
sbb
adc
ss
aam
mov
xor
xorl
imulb
inc
add
add
mov
sub
mov
dec
mov
js
cld
xor
sbb
movsb
mov
add
add
daa
cs
mov
data16
adc
or
mov
or
repz
mov
sub
xlat
and
xchg
sub
pop
push
inc
scas
add
arpl
push
mov
sub
int3
ret
and
pop
les
xor
shll
push
dec
add
addb
aaa
aam
addb
sub
xchg
push
add
movsl
pop
test
in
cld
xchg
dec
inc
mov
mov
faddl
add
pop
ljmp
mov
test
mov
add
xor
add
lods
mov
movsl
lcall
enter
mov
stc
cwtl
inc
shlb
sub
loop
mov
int3
xchg
addr16
cltd
mov
sti
jl
mov
ss
repnz
dec
rorb
js
popf
setge
stc
scas
in
inc
add
push
or
mov
aas
jns
out
push
add
in
imul
cwtl
or
cmpsl
xchg
inc
add
mov
or
cmp
lret
add
add
ror
cmp
mov
popa
mov
xchg
pop
jns
stos
or
fcmove
and
hlt
jg
jae
repnz
leave
dec
jne
addr16
xor
adc
repz
into
and
mov
pop
shrb
jmp
mov
pop
sbb
jbe
shll
fsubs
xor
addr16
xor
jmp
mov
data16
add
shll
add
add
int3
sub
cmp
jno
adc
mov
inc
repz
stc
mov
adc
fs
subl
add
cmp
test
inc
add
popf
cmp
sahf
or
add
xchg
inc
mov
imul
sbb
add
lcall
arpl
add
pop
add
out
lcall
cmp
bnd
add
add
outsb
inc
ficomps
adc
imul
fistpll
sti
and
sbb
or
movsl
mov
addr16
insl
push
cmp
in
inc
add
jl
add
jmp
mov
cld
hlt
arpl
iret
cmp
push
rcll
add
iret
sub
rol
add
pusha
add
dec
lds
ja
add
and
add
sbb
jmp
outsl
or
or
insl
in
fnstsw
adc
xchg
jo
fmulp
fistpl
rolb
pop
add
lds
cmp
adc
pop
pushf
inc
add
mov
movb
loopne
jb
pop
push
fwait
cmp
cli
jbe
dec
mov
pop
dec
mov
cmp
add
fnstcw
jge
les
je
xorl
mov
ja
dec
dec
cmpsl
sbb
push
loopne
lcall
adc
iret
cmp
loope
mov
fstpl
test
sub
adc
lods
and
pop
dec
dec
jnp
es
inc
xor
cli
jnp
out
jne
cmp
inc
add
mov
add
jmp
rolb
push
mov
sbb
addr16
rclb
jnp
aas
pop
xchg
clc
ficomps
push
add
out
jge
mov
das
or
cmc
push
outsl
mov
int3
pmuludq
cmc
push
add
out
scas
inc
add
in
xor
int3
sbb
jnp
push
pop
push
add
push
gs
adc
push
jp
sub
or
in
pusha
add
mov
lods
fadd
shrb
dec
pop
and
rolb
dec
loope
fcmovnu
lock
movsl
dec
fsubl
pop
in
inc
inc
add
les
or
iret
mov
mov
push
xchg
lock
ljmp
or
add
stos
bound
mov
jae
mov
add
enter
out
jnp
addb
jae
fwait
cld
sbb
hlt
out
dec
stos
and
ljmp
ret
jmp
jp
and
ret
ret
inc
add
dec
pop
pop
jo
call
push
cmpsb
push
shrl
test
xchg
mov
pop
push
test
arpl
pushf
imul
adc
add
pusha
add
and
fidivs
jne
js
arpl
lods
pop
int
addb
add
xchg
pushl
movsb
pop
pusha
add
mov
dec
enter
fstpt
pop
mov
add
mov
ret
cwtl
pop
fucomp
hlt
and
jb
imul
mov
test
pop
out
in
add
and
mov
leave
xchg
popa
outsb
jnp
push
out
xor
test
push
sbb
movsl
nop
outsl
fwait
push
outsb
mov
mov
aad
add
enter
cmc
mov
scas
xor
add
jmp
push
mov
inc
add
shll
outsl
cmp
xor
or
hlt
add
cwtl
je
movsb
mov
das
rorl
mov
add
xor
mov
scas
jle
push
sbb
rorl
inc
adc
aad
filds
add
fisubrs
push
xchg
shrl
mov
xchg
mov
add
daa
mov
sbb
call
xlat
jb
adc
daa
imul
push
fildl
hlt
xchg
push
sbb
shrb
aad
int3
mov
lahf
jg
movsb
fcompp
and
lods
cmc
sbb
pop
jns
lahf
and
in
pop
dec
lods
mov
sub
lds
aam
addb
adc
sub
xlat
fidivs
fwait
push
pop
dec
mov
add
cmp
xchg
xchg
cli
cli
or
push
pop
fstl
mov
cmp
repz
sbb
jmp
fiadds
sbb
adc
add
dec
dec
adc
pop
fdivl
mov
jge
add
sub
lcall
and
and
xchg
mov
sahf
dec
pop
push
sti
aas
cltd
cmp
add
orl
dec
jp
cmpsb
sub
pusha
add
adc
ret
sbb
out
xlat
mov
enter
jns
testl
int3
test
je
sbb
add
add
and
fdivrs
sbb
xchg
rolb
lock
dec
popf
adc
data16
mull
mov
add
pop
cmpsl
sub
mov
add
pop
outsl
jbe
mov
push
pop
pop
stos
jae
jmp
cwtl
bound
pop
push
and
fs
stos
cmpsb
pop
ds
mov
add
cmp
cmc
add
fmuls
or
add
sbbl
add
test
adc
outsb
pop
loopne
add
mov
mov
arpl
mov
add
cmpl
sahf
loop
cmp
lea
dec
xchg
jne
movsb
stos
xchg
je
jno
into
int
or
push
loope
and
pusha
add
shlb
pop
cld
in
xor
push
push
adc
bound
and
es
pop
hlt
inc
ret
lahf
bound
mov
in
add
pop
ds
scas
sub
roll
popa
mov
ss
and
mov
lods
iret
imulb
mov
dec
inc
jg
pop
sub
imul
xchg
addb
push
data16
jecxz
stos
rcrb
cmp
movsb
mov
xchg
shll
dec
ret
ljmp
stos
loopne
jmp
ss
push
add
jecxz
dec
lcall
cmp
jno
add
jg
ret
inc
jge
pop
mov
add
cld
jo
pop
jne
mov
call
frstor
add
test
clc
adc
jmp
mov
icebp
mov
arpl
inc
add
pop
adc
lcall
or
aad
into
filds
jmp
mov
cmp
dec
fldcw
push
and
xchg
cmp
inc
add
mov
xchg
sub
sbb
mov
mov
or
xor
mov
cmp
jl
je
and
mov
or
add
imull
sbb
xchg
loope
and
inc
add
add
adc
push
and
add
xchg
pop
cmp
xchg
addb
add
and
aas
fdivrs
inc
add
add
mov
cs
push
mov
scas
adc
jbe
mov
shll
add
adc
add
mov
dec
push
jmp
cmpsl
or
iret
or
arpl
xchg
stos
cmpsb
push
cmc
decl
aad
cmc
cmp
mov
adc
dec
mov
add
sbb
adc
add
add
adc
pop
fsubrs
lods
xchg
dec
sbb
pop
and
daa
and
dec
fildl
push
ffreep
andps
ret
push
lret
inc
add
int3
push
push
insl
popa
adc
cmp
xor
mov
std
mov
in
mov
aad
sbb
add
int3
mov
fbld
mov
gs
ja
pop
out
jle
or
jmp
push
xchg
add
mov
rcl
data16
sub
add
repnz
cmp
and
shlb
iret
add
lcall
push
rcll
sti
sub
add
pop
lret
xchg
inc
jecxz
sub
or
rcrl
jae
mov
pop
and
frstor
jns
daa
mov
test
cmpsl
loope
inc
add
pop
arpl
xor
xor
mov
xchg
add
sbb
ss
add
or
xacquire
scas
add
lahf
stos
ja
imul
je
add
add
pop
cmp
pop
cmp
stc
mov
inc
add
ds
adc
outsl
inc
add
fdivp
cmpsl
mov
clc
or
imul
pop
adc
icebp
push
imul
sbb
or
inc
sbb
and
sbb
jmp
mov
sub
inc
cli
imul
cli
and
rolb
test
push
jo
or
add
mov
jg
in
stos
pop
lret
fs
push
xchg
lret
data16
stc
pop
imul
adc
dec
add
lahf
rcrl
jno
fs
and
cmp
fucomip
in
stos
scas
stc
loop
loope
or
jb
jg
xchg
pop
test
movsb
inc
mov
ja
mov
jmp
scas
xor
xchg
add
ror
add
insl
mov
mov
add
lcall
sub
add
pop
int
je
jl
je
ffreep
sub
pop
inc
addr16
mov
add
inc
inc
add
xchg
sub
movb
dec
shll
pop
and
je
add
std
ret
inc
aam
jo
add
add
jmp
pop
loopne
jno
dec
and
rorl
in
rcrb
sub
xlat
movsl
ds
imul
fstps
jbe
fwait
mov
and
sbb
push
push
add
je
aam
add
mov
addb
sahf
dec
test
ret
sbb
pushf
xchg
add
mov
mov
and
cmpsb
je
js
jbe
xor
lcall
and
and
pop
scas
push
std
jne
fcoms
imul
mov
sbbl
loop
add
mov
pop
jae
add
enter
push
lret
pop
dec
pop
cmp
add
out
das
inc
add
or
lods
xor
and
in
pop
clc
in
ss
add
add
adc
jle
jg
sbb
push
pushf
mov
jecxz
stos
or
add
lock
scas
lret
aam
bound
lds
or
mov
aas
pop
cmp
cs
add
aad
jno
sub
jne
test
jge
and
adc
gs
dec
xchg
cmpsl
mov
add
add
mov
jne
push
outsl
pop
sbb
mov
ss
addr16
jae
loop
daa
add
jae
inc
cli
sub
add
dec
loope
or
rorl
jg
dec
call
scas
cmpsl
sbb
pushf
dec
jno
add
inc
and
fisubs
mov
cmp
pop
xchg
add
push
loop
rorb
mov
mov
scas
jno
gs
iret
push
inc
add
mov
push
add
add
fists
call
mov
les
or
mov
add
add
mov
add
stos
cmc
or
mov
out
nop
push
mov
sbb
add
movb
and
js
adc
push
ljmp
fisubs
adc
int3
mov
fyl2x
pop
xor
cmp
sbb
into
add
lret
idivb
jp
insb
movl
mov
cwtl
push
imul
xchg
pop
pop
adc
addr16
lock
xchg
push
cmp
out
add
mov
and
notl
and
mov
push
aam
stc
fists
addb
aas
mov
and
pop
sbb
addr16
sub
jo
and
iret
std
movl
pop
lea
ret
in
imul
aam
inc
sbb
mov
lock
dec
or
repnz
dec
insl
cmp
scas
mov
jmp
cmp
push
daa
movsl
push
mov
insb
negl
sub
xor
icebp
sbb
es
into
push
jo
fisttps
cld
push
inc
add
out
jns
outsb
jbe
sub
insl
movsb
cmp
aaa
ljmp
mov
mul
sahf
cmp
add
cltd
out
pop
or
sub
stos
movsb
inc
add
mov
inc
add
sahf
jns
call
dec
dec
mov
xchg
mov
mov
cmp
mov
in
cmp
add
or
xchg
test
dec
repnz
rorl
sti
aam
mov
push
mov
dec
cmc
js
or
pusha
add
inc
add
mov
loop
lret
lea
xchg
mov
loopne
cwtl
sbb
add
das
inc
imul
fildl
xor
cs
subl
push
mov
add
mov
lods
inc
add
add
and
add
pushf
loopne
add
rcl
test
pop
pop
fsubrl
add
push
leave
lret
add
fimull
adc
inc
jne
decl
mov
jno
int3
mov
mul
jle
adc
loope
clc
inc
add
sub
mov
push
cmp
movsb
movsl
in
sti
or
sub
in
je
es
addr16
or
les
mov
lret
mov
jno
jb
cmpsl
inc
add
ljmp
jb
jle
pop
pop
addr16
pop
test
inc
add
cwtl
stos
push
inc
pop
aaa
in
sub
mov
add
or
test
and
jbe
and
mov
or
fistl
xor
add
add
or
mov
add
push
lea
xchg
cmp
lock
test
pop
aam
add
iret
pop
shrb
xlat
enter
add
jo
popa
pop
nop
test
mov
add
scas
lods
add
add
sahf
and
mov
mov
sub
mov
xor
pusha
add
fdivl
xchg
scas
dec
sahf
fsubs
pop
mov
cmp
lock
xchg
insl
inc
add
aas
dec
cmp
out
fistps
adc
jp
mov
ret
mov
cmp
add
mov
jmp
pop
mov
mov
cwtl
adc
leave
imul
sub
adc
leave
ret
fstps
outsb
add
or
aas
jmp
xchg
mov
insb
testb
adc
stos
fwait
or
sbb
push
orl
add
sti
in
xlat
push
bound
mov
lods
iret
addb
xchg
out
pop
test
push
inc
add
cmovge
and
pop
dec
out
repnz
cltd
add
xchg
sub
jg
ret
push
mov
sbb
clc
inc
imul
outsb
out
jne
roll
nop
iret
mov
scas
sbb
dec
xchg
je
pop
dec
and
insb
into
xor
add
jno
mov
push
sub
lahf
jmp
pop
aaa
fisubrs
jge
add
mov
mov
lods
cmc
push
fbstp
xchg
mov
xchg
cltd
ss
int
xor
sbb
movb
addb
add
add
add
push
imul
add
add
addb
das
in
add
rcrl
out
add
jl
mov
and
pop
popf
mov
add
ftst
out
enter
pop
cmp
xchg
push
shll
inc
jge
sarl
sub
inc
adc
mov
rolb
mov
rcll
aaa
daa
outsl
test
lds
fsub
notl
shll
jo
sub
arpl
pavgb
cmc
ret
mov
orl
mov
add
add
xor
dec
pusha
add
jg
arpl
stos
push
push
push
stos
cmp
push
push
ds
stc
xor
adc
fiaddl
repnz
or
cmpsb
je
xor
push
add
inc
add
es
pop
test
stos
ljmp
add
mov
cmp
aas
sub
lcall
lods
adc
out
cltd
cs
xchg
stos
jmp
jle
in
dec
xchg
adc
mov
addb
inc
add
or
add
rclb
and
int3
or
lcall
sbb
add
add
ja
ret
iret
sahf
sub
sub
add
fs
sbb
std
jl
add
add
sub
test
mov
insb
or
push
sbb
leave
test
bound
ss
mov
fucomip
push
inc
add
popa
out
popa
pop
add
jo
lcall
push
mov
add
xor
push
pop
lret
in
jmp
icebp
decl
mov
rorb
fistl
add
ret
pop
mov
push
push
sbb
jb
mov
add
sbb
or
push
int
stc
add
sbb
or
sbb
sbb
jge
mov
lock
lret
rclb
inc
add
add
mov
dec
mov
xchg
dec
lds
ds
rclb
cmp
or
rolb
jo
shll
out
sbb
sbb
sub
je
lahf
dec
add
push
dec
inc
ret
rolb
dec
dec
jp
stc
jp
add
or
mov
jae
add
add
and
insb
xor
pop
mov
add
xor
dec
and
stc
popf
dec
les
lds
pushf
adcl
add
inc
push
lahf
xor
jg
in
call
inc
pop
mov
pop
xchg
adc
test
or
lods
popf
push
add
cmc
xor
adc
sar
hlt
add
pop
push
dec
in
adc
sbb
rolb
decb
inc
add
dec
cmp
test
xor
mov
stos
cmp
adc
rcl
adc
dec
xor
sti
pop
cmp
ret
in
push
mov
pop
and
dec
inc
mov
inc
sbb
repz
leave
and
add
scas
arpl
jmp
test
push
jo
push
cwtl
frstor
das
dec
aaa
cmp
out
cmpsb
das
cmpsb
jp
in
icebp
bound
outsl
out
stc
out
xor
xor
jo
mov
jbe
sub
popf
jns
add
cmp
movsl
daa
mov
pop
nop
js
adc
addb
cmovo
add
jp
or
xchg
movsb
xor
add
mov
or
or
addr16
js
pusha
add
push
inc
add
mov
xchg
lods
popf
nop
push
test
cmc
dec
mov
arpl
test
fwait
lods
testb
das
push
push
sbb
inc
xchg
push
pusha
add
xor
aam
add
mov
dec
jae
dec
sbb
inc
inc
aam
or
add
mov
mov
push
inc
add
iret
sub
add
hlt
daa
stc
add
lea
sub
push
push
or
jmp
add
dec
outsl
mov
dec
push
cwtl
in
sub
jns
outsb
scas
adc
cli
shlb
mov
imul
inc
dec
ljmp
add
jp
loop
fisubrs
cmp
inc
add
imul
mov
xor
add
push
cs
push
int3
mov
add
jno
mov
pop
mov
js
xchg
ret
cmp
cltd
pop
test
addb
push
pusha
add
mov
pop
mov
ja
fbld
test
mov
add
sub
jmp
je
cs
mov
rcl
xor
psubusb
sub
pop
mov
mov
cld
fs
movsb
call
mov
sbb
jecxz
repz
fdivs
ds
mov
cmp
je
enter
insb
xchg
stos
push
or
push
cmc
cld
pusha
add
imul
cmp
add
loopne
jmp
fildll
lock
mov
js
addb
pop
cmpsl
addb
sub
add
mov
jns
hlt
mov
lods
cmp
cmc
cmpsb
mov
loop
inc
mov
add
mov
jb
adc
movsb
jmp
jb
pop
xchg
enter
cltd
inc
add
or
adc
add
mov
cmp
jmp
sub
jae
psubq
adc
and
xor
mov
out
pop
sub
stos
jg
mov
push
rcrb
cwtl
loopne
cs
push
add
in
adc
ja
loopne
aad
ja
mov
fistpll
popa
insl
in
lahf
jp
mov
or
dec
popa
shr
adc
js
push
enter
and
aaa
jle
sub
add
cmc
add
pop
jmp
add
add
push
jecxz
daa
push
xor
add
insl
inc
dec
and
pop
mov
add
mov
test
fistpl
add
mov
jno
dec
pop
sub
loopne
cmp
xchg
cmp
rolb
ds
jno
and
or
mov
jle
scas
in
cmp
insb
adc
adc
aam
loop
arpl
and
iret
sbb
into
cmpsb
mov
and
add
add
sahf
cmpsl
mov
fidivs
loopne
jb
test
xchg
jp
xor
jnp
frstor
fs
test
in
adc
arpl
fsubs
lret
lret
enter
cmp
xchg
fwait
into
add
iret
stc
mov
mov
push
mov
bound
leave
shl
stos
fidivrl
je
dec
repnz
cmp
xchg
jmp
sub
or
push
in
xorl
mov
lahf
in
jle
xchg
js
sub
loopne
jge
adc
out
xchg
ja
jp
outsl
lcall
arpl
dec
pusha
add
fdivr
rorl
add
mov
push
lret
jo
pushl
pop
arpl
fldt
add
or
pop
bound
mov
add
and
pop
out
sub
ljmp
push
dec
adc
daa
bound
addb
add
in
dec
cmp
gs
imul
pop
mov
pushf
mov
test
inc
add
mov
add
jo
in
add
push
ret
pop
addb
push
or
movl
out
test
aad
jns
fs
cmp
ret
loop
push
stos
enter
and
iret
cs
out
lods
pop
stos
jno
xchg
ds
lret
push
enter
mov
dec
movsb
mov
jecxz
mov
mov
xor
inc
add
je
mov
inc
popf
cmpsl
ret
adc
add
jecxz
inc
add
popa
xchg
mov
mov
fdivp
popa
movb
push
addb
out
xor
movsl
xchg
add
ret
push
push
cltd
jmp
add
xor
pop
sub
add
add
push
jecxz
loop
or
shr
mov
add
and
js
sub
add
out
bound
test
ret
xchg
sub
mov
movb
adc
sar
pop
mov
xlat
leave
pop
sbb
lock
add
add
or
fadds
mov
into
fwait
and
mov
enter
rolb
decb
add
xchg
mov
and
ret
fdivs
dec
xor
or
aas
cwtl
int3
cltd
ret
mov
imul
mov
push
cmpl
pop
mov
dec
fisubrl
add
daa
iret
jae
jecxz
cwtl
pusha
add
add
push
or
fimull
ret
insb
sub
enter
jb
or
in
cltd
or
lea
data16
mov
push
mov
fwait
mov
enter
push
add
mov
pop
hlt
repz
out
insl
sbb
add
push
push
std
sub
jb
or
mov
xchg
or
rolb
les
fistps
int
or
jns
loope
ret
test
jno
inc
jb
pop
sti
into
sbb
ss
pop
mov
adcl
cwtl
mov
mov
out
add
out
sub
xor
loop
gs
adc
mov
lcall
pusha
add
nop
and
add
and
int3
sub
lods
fmuls
add
or
loope
jo
icebp
or
ja
andl
inc
sbb
test
orl
imul
and
cmpsb
nop
aam
addl
outsl
mov
sub
popa
fcomps
inc
add
pop
addb
jl
jns
sahf
jmp
int3
addb
adc
test
aam
sbb
rclb
mov
mov
mov
mov
xor
xchg
addb
or
jl
mov
add
jns
shl
ret
jmp
fwait
outsb
lods
test
pop
jo
jns
sbb
cmpsl
iret
cwtl
pop
inc
push
sbb
sbb
xchg
cmp
aam
mov
xchg
inc
aad
js
push
int3
inc
fcomp
stos
aam
in
xor
imul
push
sbb
add
test
scas
mov
xchg
repz
cmp
mov
add
lods
push
adc
push
ljmp
mov
sarl
add
inc
or
aam
sub
and
pop
cmp
scas
mov
mov
je
xchg
pop
fwait
arpl
xchg
std
pop
ret
sub
loope
fstps
rorb
add
loop
push
insb
ljmp
mov
xchg
das
push
ss
lods
sbb
dec
lods
and
and
movb
pop
and
int
sub
je
add
movsb
jg
mov
rolb
sarl
out
roll
add
adc
lahf
in
xor
sub
pop
jecxz
push
jp
cmpsb
loope
cs
push
scas
cld
sub
mov
fmull
out
add
add
sub
in
xor
xlat
adc
add
mov
dec
sub
jno
leave
add
addb
push
sbb
lret
cmc
push
cmp
cld
xchg
in
leave
into
xchg
aas
pop
mov
imul
loopne
leave
push
cltd
mov
loop
mov
sahf
outsb
mov
push
and
sub
out
mov
idivl
dec
mov
sub
add
fmul
jl
xchg
fbld
fcompl
jmp
out
arpl
mov
push
add
mov
mov
lea
mov
imul
mov
sub
cmp
cli
enter
aas
jp
fwait
add
jae
add
jle
push
aas
sti
lea
pop
sub
mov
dec
cmp
scas
cmpsl
push
inc
add
sbb
std
pop
mov
enter
push
adc
popf
int3
xor
push
arpl
dec
rcll
add
jbe
inc
add
push
ret
das
lret
ja
imul
mov
mov
fdivl
add
pop
addb
add
test
mov
jle
add
shrb
clc
std
pop
mov
add
add
bound
lods
stos
loope
jmp
inc
add
dec
xor
jle
add
scas
cmc
jmp
pop
push
pop
mov
in
cld
dec
daa
mov
scas
adc
arpl
out
movsl
and
aad
add
jl
xor
incb
add
jo
pop
mov
mov
push
in
mov
ret
add
mov
add
ret
add
sbb
add
push
aam
push
and
and
mov
sub
in
xchg
std
nop
sub
rolb
scas
scas
ja
test
push
daa
int3
hlt
stc
pop
or
scas
dec
mov
mov
and
repnz
pop
inc
add
mov
shll
cmp
out
scas
int
add
mov
les
insb
push
jge
inc
stos
jmp
mov
inc
pushf
push
add
bound
push
rolb
and
mov
scas
mov
sub
sub
rcrl
cmp
mov
jb
jo
outsb
lret
fiadds
cmp
ja
imul
xchg
push
and
ss
xor
out
mov
aam
cmpl
dec
jo
mov
ds
shrb
and
add
ror
mov
stos
adc
sub
pop
lea
add
cmpsb
or
push
mov
inc
pop
cmpsl
lods
add
mov
fstpl
pop
into
movsb
jg
cmp
addb
das
pop
out
push
sbb
addr16
jle,pn
sub
add
cmp
adc
movsb
out
xchg
xchg
pop
xchg
cs
in
adc
int
mov
cs
ja
jp
aaa
fwait
add
add
outsb
daa
bound
mov
mov
fldl
idivb
push
fcoms
mov
aad
xor
aad
hlt
jae
hlt
sbb
imul
rolb
mov
movb
mov
xor
inc
insb
add
sbb
and
ret
je
or
sti
pop
in
lahf
in
xor
movsb
push
add
add
add
fbld
rcrl
imul
sub
lret
xor
lods
inc
xlat
jle
sbb
imul
jno
add
pop
stos
adc
lret
cmpsl
addb
mulb
and
and
cs
loope
pop
jnp
cs
add
loope
sbb
xor
mov
lcall
add
mov
mov
ds
sbb
add
aas
shrl
nop
xchg
dec
cmpsl
es
xlat
cmp
jg
pop
mov
push
lret
sub
mov
jb
out
or
dec
shlb
sbb
push
push
push
aam
push
pop
ljmp
rcl
fmulp
jl
enter
push
cmp
add
fiadds
cmpsb
mul
dec
in
pop
and
ficoms
push
mov
cmpsl
mov
das
xchg
xchg
out
xor
add
xor
push
push
mov
incl
adc
out
pop
xchg
in
hlt
cmp
adc
push
xlat
adc
dec
xchg
or
lds
jmp
imul
push
std
xchg
or
mov
imul
rcr
inc
jne
cmp
hlt
add
out
mull
movsb
push
rolb
cmp
mov
xlat
lret
mov
inc
add
lret
les
ss
iret
mov
pop
or
mov
sub
or
pop
das
addb
fsubl
out
xlat
leave
ja
test
inc
add
xadd
icebp
sahf
xor
mov
jne
movsb
inc
add
add
cmp
pop
stos
xchg
dec
popa
jle
xlat
xor
mov
push
into
mov
pop
pusha
add
inc
stos
mov
idivb
push
add
xchg
or
jmp
fcmovne
test
mov
xlat
add
hlt
xlat
arpl
jmp
adc
mov
mov
add
xchg
sub
dec
sub
jmp
adc
sti
es
push
add
ficompl
mov
push
jmp
mov
test
sbb
cmpsb
xlat
sub
push
mov
jmp
cmp
mov
fldenv
cwtl
jg
dec
movb
add
cwtl
rolb
xchg
dec
cmp
mov
cmp
jb
pop
icebp
in
repz
mov
test
leave
imul
in
imul
repnz
rolb
push
fs
mov
push
rolb
fdivrs
test
and
test
inc
add
cmp
xchg
mov
lods
pop
xor
push
ss
out
cmp
dec
fwait
push
adc
push
int
sbb
sahf
xchg
bound
repnz
mov
fdivrl
inc
fistpl
in
daa
cmp
out
jge
sbb
andl
les
and
insl
cmpsl
or
pop
cmc
pop
push
ds
iret
xchg
iret
dec
push
stc
in
pop
sub
lds
loope
xchg
mov
push
lock
xchg
or
int3
lods
push
inc
mov
adc
rorb
movsb
flds
xor
add
cmp
jg
mov
push
add
shrb
sub
dec
sub
jnp
jl
sub
sti
sbb
jl
add
cs
sbb
jecxz
ds
adcl
add
aas
mov
fcomi
cmp
jle
jp
out
int
fs
push
bound
mov
add
xchg
adc
es
or
add
cmp
sub
add
sbb
test
sbbl
in
popa
push
mov
xchg
imul
mov
sbb
adc
fmul
jne
add
popf
stc
mov
movsb
add
pop
ficompl
add
call
out
lea
ds
xor
pushf
push
mov
loop
push
adc
pop
or
xchg
dec
cmp
mov
adc
pop
pushf
jns
in
popa
mov
add
cli
mov
xor
ja
add
xlat
dec
test
sbb
or
ficoms
jmp
mov
aaa
int3
pop
popf
cmp
fistps
add
int
dec
movsl
popa
mov
fsubl
cld
movsb
sbb
and
add
pop
xchg
jl
std
mov
push
mov
aad
outsb
mov
add
movsl
scas
mov
add
jg
mov
aam
add
fiaddl
push
add
imul
mov
aas
jle
sbb
inc
add
test
mov
andl
mov
fdivl
and
imul
adc
pop
mov
dec
jle
pop
mov
fcom
and
scas
rorb
daa
cmp
and
icebp
and
lods
and
cmp
push
mov
movb
lods
jmp
shrb
mov
int
scas
cmp
out
repz
in
ffree
add
ss
xlat
mov
mov
or
jns
scas
cmp
test
dec
mov
sub
cmpsl
xor
add
add
mov
pop
pop
jp
add
mov
nop
in
pcmpgtd
fnstsw
lods
mov
xlat
jae
fs
pop
add
pop
mov
arpl
jnp
rolb
pushf
add
inc
add
add
mov
pop
push
sbb
xor
pop
dec
clc
cltd
or
inc
add
push
mov
mov
push
cmpsb
scas
sarl
add
xor
adc
pop
ja
mov
add
push
or
push
and
cmc
pop
push
ljmp
xchg
iret
mov
lods
dec
movsb
out
nop
gs
inc
add
iret
mov
mov
adc
sbb
add
mov
loop
and
push
add
dec
jp
dec
pop
sarb
jae
jle
sub
dec
xchg
sbb
rclb
inc
add
leave
cltd
xchg
add
jno
or
rorl
rorb
scas
ret
addr16
out
jmp
pop
in
mov
jb
ss
shll
dec
sub
push
mov
lods
fdiv
pop
dec
push
dec
movsb
jle
dec
stos
dec
jg
clc
stos
daa
cwtl
pop
insl
out
out
in
sbb
cmp
mov
loopne
xchg
rolb
push
sarl
xchg
jp
jp
cltd
xchg
add
xor
dec
cmp
sub
add
cmpsl
lods
xchg
dec
add
aad
rcrl
add
jbe
idivl
add
mov
addb
add
add
or
mov
jg
gs
jl
push
push
fmuls
xchg
imul
lods
xchg
xor
dec
xor
jb
jo
jle
mov
jne
int
imul
lahf
out
cmpsl
dec
cmp
add
cmp
addb
scas
xor
pop
faddl
jne
lret
cld
pop
mov
sbb
mul
add
cltd
xchg
andl
adc
mov
adc
add
dec
fimull
mov
mov
scas
cmpsl
sbb
stos
je
jmp
rcll
movsb
leave
jecxz
rolb
loope
fnstenv
scas
daa
pop
punpckhdq
or
shll
leave
cmpsb
jle
jnp
sbb
cmp
pop
mulb
dec
push
jbe
ficompl
cld
filds
inc
xor
cmpsl
aam
pop
cmp
cmpsb
xchg
fwait
cmpsl
add
xchg
mov
in
or
xor
inc
add
add
adc
outsl
lods
mov
roll
lds
xchg
adc
add
out
lock
or
imul
sarl
addb
mov
sub
mov
jbe
push
mov
and
push
adc
dec
add
addb
xchg
or
repz
add
or
and
js
sbb
add
push
dec
pop
mov
or
adc
jbe
lods
dec
leave
xor
into
out
lea
fs
ljmp
popf
and
imul
dec
nop
jmp
push
aas
mov
mov
jbe
xor
jge
outsl
mov
adc
outsl
lea
sub
jmp
das
cmpsl
inc
add
dec
fcoml
in
out
in
int
and
add
rcrl
push
aad
xor
repnz
add
pop
adc
jp
aam
mov
xor
lcall
mov
add
sub
or
inc
add
mov
repz
pop
fucomp
mov
add
js
cmpsb
mov
add
out
sbbl
mov
jg
mov
inc
sub
or
add
add
pop
pop
sub
adc
inc
add
loop
add
and
add
jp
dec
dec
mov
fnsave
repnz
pop
and
insb
push
mov
add
cmpsb
mov
mov
test
cltd
mov
popa
push
mov
add
cmpsl
push
shlb
jmp
shl
roll
cli
jb
or
push
inc
iret
lods
fadds
pop
insb
cmp
ret
gs
and
sub
leave
push
mov
loop
rcrb
arpl
cmp
mov
clc
jae
cld
ret
xchg
mov
aad
add
rclb
add
movsb
push
mov
sub
add
in
pop
push
fstpt
movsl
addb
jns
add
cmpxchg
jmp
ljmp
cmp
add
lret
pop
xor
jl
mov
push
sahf
mov
adc
cmp
dec
jbe
inc
mov
push
add
mov
cmp
xor
add
sbb
add
pop
test
imul
pop
xor
inc
cmp
inc
add
cmp
add
nop
cmpsb
push
es
pop
iret
mov
pop
outsl
add
mov
inc
add
or
mov
xchg
addr16
add
stos
mov
inc
pop
xor
cmpsb
and
gs
in
enter
addb
add
cld
idiv
pop
repz
add
xor
add
add
fiadds
inc
add
in
ds
insl
mov
rolb
sub
outsl
test
scas
and
cmc
dec
int3
sbb
jae
add
arpl
xor
mov
loopne
pusha
add
cmp
rcrb
dec
dec
pop
sbb
mov
jg
push
popf
loop
insb
ljmp
mov
and
xchg
gs
cmp
sbb
lock
mov
ss
add
movsb
cwtl
js
lods
imul
jle
sti
in
icebp
push
adc
jge
mul
adc
shrb
test
dec
push
add
aam
mov
mov
cmpsl
lahf
shrb
add
ja
mov
pushf
push
pop
fcoms
jnp
fidivl
mov
out
test
test
jge
jns
sub
sub
nop
dec
insb
push
imul
inc
add
jle
aam
adc
push
daa
fwait
push
adc
rol
add
arpl
dec
aad
popf
fadds
lcall
ljmp
je
jmp
add
cmpsl
xchg
fdivs
mov
cmpsb
loope
addb
sub
test
ret
adc
or
mov
mov
and
add
rolb
mov
sar
jle
add
cmc
xor
int3
jl
jle
add
mov
jl
sbb
xchg
pop
icebp
mov
test
sbb
rol
add
add
out
pop
adc
movsb
and
inc
add
mov
movsl
push
cltd
push
mov
pop
int
inc
movsb
or
jnp
push
nop
xor
xlat
lock
loope
add
in
fwait
pop
mov
mov
test
loopne
sub
rolb
xchg
xor
sub
sub
xchg
repnz
iret
push
add
popf
data16
test
cs
stos
out
inc
outsb
xor
dec
inc
shll
add
shrl
subl
js
cltd
pusha
add
xchg
jg
jb
mov
push
mov
or
or
pop
xchg
jp
aad
and
ljmp
ret
pop
cmc
push
cmovne
push
pop
xor
sbb
movb
jne
mov
movb
jne
mov
mov
jae
movsl
and
loop
add
dec
inc
add
cli
rcll
mov
icebp
xor
rolb
addl
mov
pop
xchg
xor
cmp
add
mov
inc
testl
adc
fldl
add
fcomp
in
fstpt
jecxz
lea
inc
loop
gs
lret
mov
pop
je
loop
clc
adc
add
outsb
movb
fcompl
push
lahf
les
dec
pop
push
inc
add
leave
mov
add
add
sbb
and
add
negl
xchg
in
ja
fidivl
addb
inc
dec
jno
int3
mov
addr16
popf
imul
add
icebp
or
cwtl
int3
std
fidivrl
das
pop
imul
sub
pop
jae
jb
add
stos
cmp
arpl
add
jecxz
xchg
xor
shll
xchg
xchg
sub
mov
mov
test
fists
and
inc
icebp
xchg
mov
addr16
test
call
std
lods
inc
clc
les
inc
add
add
aad
stos
jae
pop
jmp
sbb
xchg
jbe
test
cmp
arpl
fs
adc
in
ret
adcl
jno
js
lret
dec
add
cmp
inc
add
sub
mov
scas
mov
xchg
hlt
ljmp
fidivs
or
lock
decl
mov
daa
cmp
dec
xor
sbb
sbb
in
mov
pop
cltd
push
xchg
sbb
popa
scas
out
and
sbb
add
into
push
hlt
jp
and
mov
rolb
lahf
pop
jecxz
and
call
xchg
push
arpl
je
cli
jmp
sbb
notb
jmp
adc
push
mov
lock
mov
lods
pop
std
or
popl
rolb
and
adc
lea
fistpl
aas
sbb
cwtl
in
sbb
sbb
insl
lods
mov
xchg
dec
daa
rolb
inc
add
push
dec
pop
mov
xchg
scas
pop
fwait
sbb
jmp
std
inc
add
jno
xor
inc
test
in
aas
cwtl
ljmp
les
cmp
cs
mov
das
jne
xor
lock
insl
in
pop
shll
jbe
cmp
cs
or
sub
addb
add
aaa
cmpsl
lcall
xchg
aas
ret
xchg
cld
lcall
or
or
xchg
leave
je
inc
add
xchg
inc
xor
cltd
xor
pop
cwtl
pop
xchg
out
inc
add
mov
clc
ljmp
push
mov
inc
add
insb
add
add
popf
inc
xor
jmp
pop
sbb
xchg
adc
push
fwait
arpl
mov
add
mov
lods
dec
xlat
aaa
cltd
sub
add
push
cmpsb
jo
cs
inc
add
jne
lret
sub
add
mov
test
pushf
adc
out
cmp
or
or
xor
aam
inc
add
cmc
popa
push
lret
dec
in
movsb
xchg
int3
pop
or
insb
addb
data16
sbb
add
pop
mov
add
nop
lds
add
cmp
stos
mov
lret
imul
fdivl
jg
mov
adc
or
sbb
loopne
push
sbb
scas
push
popf
out
cmp
mov
mov
es
push
jecxz
or
cmpsl
push
dec
add
addb
mov
jl
adc
dec
imul
cmp
mov
mov
xorl
cmp
xchg
notl
mov
movsb
loop
sub
test
test
xchg
in
addb
addl
sub
scas
movb
mov
das
mov
add
in
scas
addr16
pop
jmp
sub
cmpsl
push
out
out
arpl
xchg
adc
add
cmp
pushf
xchg
xchg
adcl
xchg
jno
add
lret
js
std
inc
add
jnp
add
cmp
divl
fidivrl
popf
popf
mov
jmp
sbb
stc
jmp
mov
js
sarl
dec
sbb
daa
push
mov
add
je
lcall
icebp
lods
sub
sarl
in
mov
loope
xchg
pusha
add
and
cld
xor
or
dec
out
mov
clc
ret
jecxz
xor
xlat
jle
std
xchg
mov
loopne
add
int3
mov
xchg
mov
jbe
aaa
push
cmp
xchg
pop
repnz
out
adc
in
test
cltd
scas
pop
call
add
lahf
in
insb
xor
mov
call
rcll
popf
inc
add
outsb
roll
sbb
test
movb
ss
adc
int
scas
jnp
jnp
mov
add
outsb
xchg
jb
sbb
mov
add
dec
rolb
xor
aas
add
in
xor
fwait
mov
jnp
or
inc
add
shl
rolb
movsl
or
sar
inc
aad
push
mov
mov
daa
aas
ret
push
imul
cmp
pop
push
mov
out
sbb
xchg
ret
mov
add
jl
and
add
call
add
data16
icebp
jbe
xor
adc
dec
jp
aas
mov
mov
add
inc
add
loopne
mov
sub
mov
fdivs
imul
ret
push
add
xor
xchg
mov
adc
mov
push
pusha
add
xchg
repz
sahf
stc
imul
push
xlat
push
xchg
int3
xchg
aas
mov
add
mov
into
imul
xchg
popf
mov
xchg
ja
mov
inc
mov
repnz
sbb
add
int
sbb
das
and
xor
mov
jne
stos
or
insl
mulb
add
jl
dec
mov
in
inc
out
xor
into
xorl
or
test
mov
inc
add
outsl
adc
or
add
divb
mov
rorl
xchg
jecxz
xchg
pop
mov
outsb
repz
mov
push
push
xchg
outsb
movsl
xlat
and
sbbl
out
xchg
inc
add
adc
lcall
data16
jno
aad
stos
scas
enter
xchg
aaa
dec
add
scas
lods
iret
jb
movb
push
lret
aas
fcoml
enter
or
add
movsb
pop
popf
fildll
push
mov
adc
mov
sbb
jecxz
test
jns
push
sub
mov
cmp
pop
sbbl
push
inc
popf
in
lret
rolb
movb
xor
xchg
push
imul
dec
or
mov
jecxz
push
pop
lahf
nop
or
popa
mov
pop
cltd
push
mov
and
das
rol
add
xchg
pop
rorl
xor
dec
je
test
jo
ljmp
fwait
mov
push
dec
dec
pop
ret
shll
mov
lds
out
mov
in
mov
clc
pop
popf
pop
or
mov
or
jnp
lahf
jmp
mov
lret
das
xchg
xchg
orl
xor
cmp
jl
out
xchg
addb
incb
dec
jb
sub
xor
bound
icebp
and
js
fisubs
and
scas
pop
jne
sbb
jae
mov
cld
inc
add
mov
add
xor
cmp
popf
ja
jecxz
push
stos
inc
add
or
jo
add
and
ljmp
pop
je
imul
adcl
add
pop
andl
and
pop
in
lock
xchg
add
daa
pushf
fldl
arpl
jbe
mov
pusha
add
pop
and
mov
jle
rol
sub
outsb
jae
outsl
or
lds
test
or
lock
mov
data16
sub
inc
cld
out
gs
add
fcomip
hlt
ds
add
addb
xchg
ja
inc
pop
rorl
jp
outsl
ficompl
xor
out
push
fidivrl
sub
jno
hlt
push
sbb
sub
test
add
adc
stos
jns
stos
or
fldcw
add
adc
cmp
mov
hlt
aas
fidivs
addb
or
jge
ljmp
movb
jae
mov
and
in
icebp
jns
test
popf
push
add
xchg
inc
movsb
adc
xchg
xor
clc
and
and
jmp
mov
add
adc
int3
mov
mov
xor
and
cmp
movb
ss
rorb
push
insl
into
cld
lahf
cli
push
scas
adc
fcompl
mov
mov
scas
mov
jp
rolb
or
mov
xor
or
out
push
sub
dec
sbb
sahf
push
into
jbe
arpl
jo
inc
pop
jge
add
push
call
out
jns
lret
int3
mov
stos
fdivrs
ret
out
lods
hlt
insb
lds
xor
lea
addb
add
cmc
sub
out
add
movsb
xor
jmp
jg
les
adc
mov
nop
push
mov
sub
or
mov
xor
lahf
sbb
fstps
idivl
pop
das
mov
inc
arpl
loopne
dec
cmpsl
lret
and
imul
inc
jne
testl
js
insb
hlt
out
xchg
xor
and
leave
dec
push
push
jl
add
sub
arpl
dec
cltd
rorl
pop
jns
push
add
pop
imul
xchg
dec
scas
jle
mov
xchg
jle
ss
jmp
mov
sub
adc
fcompl
sbb
and
pop
shll
movsb
insb
fstps
jp
add
std
fidivs
add
cwtl
mov
das
cmp
add
jae
mov
add
daa
pop
mov
ficompl
pop
cmp
xchg
inc
add
jne
mov
inc
add
pop
sbb
mov
push
aaa
and
sub
popa
lcall
mov
bound
mov
dec
icebp
jmp
je
es
stc
xchg
lahf
inc
add
add
add
mov
repnz
add
pop
sub
push
in
jns
sub
push
lahf
jmp
add
cli
addb
and
mov
mov
adc
inc
add
and
lock
negl
sbb
out
add
rcr
test
dec
aam
in
movb
inc
add
das
xor
ret
sahf
or
loopne
xchg
sbb
adc
or
adc
dec
pop
ja
addb
lods
dec
inc
int
xor
sbb
sub
daa
mov
ret
xchg
out
loope
add
mov
sbb
dec
ja
sub
jne
pop
pop
lock
ficoms
add
jle
pushf
ss
addb
jge
dec
or
push
sbb
jecxz
shll
fdivrl
add
icebp
sub
xchg
add
mov
lret
cmp
rolb
adc
sub
clc
add
push
add
mov
add
add
or
out
pop
mov
out
sub
adc
mov
clc
lea
popa
add
loopne
idivb
jmp
mov
sbb
add
jns
sarb
not
arpl
pusha
add
mov
jge
std
push
sub
add
pushf
or
cmc
add
fstps
aaa
daa
dec
testb
es
add
mov
je
stos
test
jmp
sarl
add
stc
dec
xchg
push
popa
adc
movsl
sbbl
xchg
xchg
mov
scas
shr
fstpt
and
loopne
jb
daa
test
inc
aaa
dec
xchg
add
insb
arpl
xchg
sbb
push
addb
add
lcall
mov
sub
add
xchg
into
call
mov
add
mov
cmc
sub
repnz
addb
pop
fisubs
pop
or
add
add
pop
inc
add
lret
or
cmpsb
pop
ss
mov
std
pop
mov
addb
flds
stc
xor
rolb
pop
in
shlb
sub
jns
pop
fldcw
out
pop
imul
sar
mov
stc
nop
es
add
sub
popa
push
or
jmp
xor
add
js
stos
mov
push
push
stc
nop
es
sbb
sarl
stc
nop
es
add
sbb
movsl
roll
ret
inc
add
incb
xchg
ret
xchg
xchg
lods
push
adc
enter
jb
daa
pop
add
mov
dec
adc
nop
es
aas
add
pushf
gs
cmp
inc
and
nop
es
pop
add
dec
lea
movzwl
stc
nop
es
add
mov
out
add
stc
nop
es
add
add
add
es
push
mov
xchg
ret
loope
sarl
mov
lret
add
stc
nop
es
jnp
add
rorl
xchg
jo
adc
es
loope,pt
mov
xchg
mov
loopne
nop
es
mov
add
and
mov
xchg
ret
add
add
dec
cmp
cld
nop
jmp
rolb
add
pusha
stc
nop
es
enter
add
daa
and
stos
push
mov
xchg
ret
add
fldl
push
adc
stc
nop
es
sub
add
add
inc
add
mov
push
mov
xchg
ret
rcrl
add
out
sub
nop
cld
nop
jmp
add
addb
hlt
xchg
lret
lods
stc
nop
es
add
dec
add
add
jo
rep
stc
nop
es
add
add
scas
add
cmp
sbb
cmpsl
add
clc
stc
nop
es
add
sbb
push
js
pop
mov
stc
nop
es
shr
add
mov
stc
nop
es
add
mov
ljmp
inc
sbb
add
add
imul
jmp
add
daa
add
lods
sub
es
add
pop
cmpsl
add
mov
nop
cld
nop
jmp
add
add
lods
sbb
push
pop
stc
nop
es
sahf
add
add
and
adc
cld
nop
jmp
pushf
jp
xor
ds
popa
add
mov
xchg
ret
add
imul
pusha
push
mov
xchg
ret
sub
add
testb
cmpb
add
jns
aas
add
mov
mov
push
mov
xchg
ret
add
stos
add
push
mov
nop
es
add
and
ss
imul
stc
nop
es
aas
mov
or
nop
es
add
fisttpll
cld
nop
jmp
imul
add
stc
nop
es
add
xchg
pop
mov
stc
nop
es
mov
add
inc
or
mov
xchg
ret
add
hlt
add
pop
stc
nop
es
add
roll
add
jne
stc
nop
es
add
add
stc
nop
es
dec
add
add
add
add
push
stc
nop
es
pop
sbb
add
xchg
add
push
push
std
inc
add
add
loope
pop
shll
inc
mov
cld
nop
jmp
sbb
add
movsl
add
push
scas
lea
push
mov
xchg
ret
xchg
adc
sbb
es
add
add
cmpsl
pop
xor
stc
nop
es
xchg
add
push
xadd
or
sbb
add
aas
rolb
add
push
push
mov
xchg
ret
enter
add
xchg
inc
dec
mov
push
mov
xchg
ret
stos
add
push
pop
push
stc
nop
es
add
push
add
subb
es
jns
add
incb
and
push
sbb
jb
dec
scas
add
add
movsb
stc
nop
es
push
add
sub
cs
push
cmpsb
pushf
mov
stc
nop
es
add
sub
es
add
js
pushf
add
data16
es
pop
js
jnp
scas
fldenv
arpl
nop
es
add
pushl
stc
nop
es
sub
add
push
mov
nop
es
loope
add
add
stc
nop
es
add
add
add
nop
cld
nop
jmp
xchg
add
mov
mov
stc
nop
es
add
jl
nop
cld
nop
jmp
add
cmp
movsl
add
add
add
stc
nop
es
add
lea
jb
roll
add
repnz
mov
stc
nop
es
aas
pushf
add
ret
push
push
mov
xchg
ret
sbb
add
enter
push
add
nop
es
add
add
add
shrb
nop
es
mov
add
jnp
add
fisttpll
jne
inc
add
add
pushf
sub
jb
ds
add
nop
movl
clc
dec
inc
stc
nop
es
add
add
adc
add
add
pop
stc
nop
es
add
cmp
fnsave
add
stc
nop
es
dec
add
add
lods
mov
mov
stc
nop
es
push
rcll
cld
nop
jmp
add
add
cmp
cld
nop
jmp
pop
jnp
jnp
mov
add
stc
nop
es
or
cmpsl
sbb
jne
pop
push
mov
xchg
ret
add
add
popa
faddl
xchg
ret
sub
lea
pop
push
mov
xchg
ret
push
add
xor
aas
cs
add
push
mov
xchg
ret
add
stc
nop
es
add
xchg
pop
hlt
icebp
je
dec
mov
push
mov
xchg
ret
add
add
add
mov
xchg
ret
roll
mov
push
inc
in
imul
mov
add
stc
nop
es
add
jnp
call
stc
nop
es
add
add
dec
adc
nop
es
add
pushf
add
push
mov
jb
movsl
add
cmp
add
stos
outsl
cmp
nop
cld
nop
jmp
push
shrb
ds
imul
es
pop
xchg
add
hlt
add
inc
call
decl
cmp
gs
sahf
arpl
add
stc
nop
es
jmp
mov
stc
nop
es
scas
add
add
mov
push
mov
xchg
ret
add
add
movsb
jg
stc
nop
es
mov
add
add
add
sar
add
push
add
add
jmp
mov
xchg
ret
add
js
add
add
nop
es
add
push
mov
xchg
ret
add
add
sahf
add
pop
push
push
mov
xchg
ret
lods
lods
push
mov
dec
add
add
stos
add
stc
nop
es
pop
dec
add
add
sar
es
add
add
lea
stc
nop
es
xchg
pop
mov
mov
nop
cld
nop
jmp
xor
add
push
add
add
add
nop
cld
nop
jmp
xchg
jns
aas
add
mov
stc
nop
es
adc
xchg
add
add
stc
nop
es
mov
stc
nop
es
sub
lods
loope
pushf
add
arpl
add
add
add
xchg
add
add
mov
add
nop
es
roll
add
sbb
add
jb
pop
mov
add
push
stc
nop
es
jns
add
es
pop
sahf
pop
add
cmp
loope
dec
push
mov
xchg
ret
add
jns
sbb
xchg
rcpps
nop
es
add
add
aas
stc
nop
es
add
xor
adc
adc
nop
es
enter
xchg
nop
es
add
shll
add
push
xchg
scas
push
push
mov
xchg
ret
lods
scas
add
add
add
add
mov
stc
nop
es
jmp
add
add
push
mov
xchg
ret
add
add
clc
and
push
mov
xchg
ret
push
add
adc
cld
nop
jmp
add
add
mov
push
stc
nop
es
push
add
xchg
add
mov
xchg
ret
sub
add
mov
stc
nop
es
add
mov
fwait
cmpl
nop
cld
nop
jmp
gs
push
in
push
nop
cld
nop
jmp
add
lea
dec
add
add
jecxz
add
mov
subl
push
mov
xchg
ret
xchg
mov
cmc
mov
add
stc
nop
es
gs
mov
sbb
es
rcrb
add
nop
es
mov
add
push
movsl
inc
or
jmp
add
stos
adc
cmpsl
inc
pop
rep
stc
nop
es
add
shll
stos
rep
mov
movsb
dec
sub
push
mov
xchg
ret
imul
xor
ret
sbb
subb
add
add
das
mov
push
mov
xchg
ret
movsl
add
hlt
add
jno
je
stc
nop
es
sbb
or
jne
stc
nop
es
movsl
dec
add
nop
jmp
aas
pushf
add
ds
roll
loopne
add
stc
nop
es
add
lods
add
jns
jmp
nop
es
add
pop
pop
sub
pushf
sub
stc
nop
es
add
add
add
dec
cmp
nop
es
dec
daa
shlb
popa
add
cld
nop
jmp
add
lods
and
add
add
pop
push
mov
xchg
ret
lea
add
xchg
add
les
fiaddl
nop
jmp
mov
add
mov
stc
nop
es
aas
mov
pop
je
stc
nop
es
add
aas
les
ljmp
inc
add
add
js
and
add
std
lea
stc
nop
es
jp
add
add
addr16
sub
nop
cld
nop
jmp
orb
add
nop
cld
nop
jmp
add
pushf
add
and
cmp
mov
nop
es
add
fisttpll
es
add
rorb
addb
add
stc
nop
es
dec
add
mov
nop
cld
nop
jmp
sbb
add
jp
lret
mov
stc
nop
es
hlt
aas
add
push
pushf
clc
popa
nop
cld
nop
jmp
add
add
push
add
pop
push
mov
xchg
ret
dec
add
add
add
xor
nop
es
adc
shll
nop
es
stos
push
mov
pop
add
mov
xchg
ret
js
add
xor
jb
and
stc
nop
es
add
dec
roll
mov
cmp
es
cmp
add
or
mov
es
add
sub
gs
mov
add
adc
and
mov
add
stc
nop
es
lea
add
pop
lods
push
push
mov
xchg
ret
pop
add
dec
roll
sub
add
idiv
incl
imul
jne
nop
cld
nop
jmp
add
push
lods
push
mov
stc
nop
es
sbb
add
sub
push
rcrb
add
stc
nop
es
add
add
adc
nop
es
aas
add
xchg
icebp
fs
add
es
lcall
jb
xchg
push
xchg
add
inc
mov
mov
xchg
ret
add
add
scas
add
push
inc
xchg
mov
pop
cmp
mov
xchg
ret
add
add
roll
aaa
stos
mov
nop
cld
nop
jmp
and
dec
scas
add
and
nop
cld
nop
jmp
add
add
adc
sub
nop
es
dec
aas
scas
add
add
je
stc
nop
es
add
add
int
test
push
add
nop
cld
nop
jmp
add
rcrl
es
add
js
sbb
xor
ficoml
add
nop
es
roll
rolb
add
stc
nop
es
push
add
js
mov
sub
sti
ljmp
xor
add
add
fildl
xchg
ret
add
jmp
mov
stc
nop
es
add
xchg
mov
jmp
stc
nop
es
cmp
add
cmp
nop
jmp
scas
add
add
add
add
add
stc
nop
es
shr
pusha
add
ja
stc
nop
es
cmpsl
add
mov
addb
cmpl
nop
cld
nop
jmp
add
add
mov
stc
nop
es
jp
add
fisubs
stc
nop
es
daa
stos
incb
add
add
push
mov
xchg
ret
rcll
mov
es
add
hlt
movsl
add
jge
stc
nop
es
add
daa
add
sub
or
cmp
nop
cld
nop
jmp
add
add
mov
repz
nop
es
dec
rolb
aas
jnp
jnp
push
stc
nop
es
jmp
mov
int
pop
jae
cld
nop
jmp
add
xor
add
mov
fdivr
nop
es
addb
push
loope
enter
mov
xchg
ret
xor
mov
mov
stc
nop
es
sbb
mov
jne
stc
nop
es
add
sbb
jp
mov
stc
nop
es
sbb
push
mov
xchg
ret
add
add
lea
aas
inc
add
nop
cld
nop
jmp
adc
add
mov
es
add
add
add
outsl
call
stc
nop
es
js
dec
rcrl
daa
icebp
incl
loope
add
add
add
push
mov
xchg
ret
add
add
jp
dec
sbb
mov
xchg
ret
add
add
and
push
andl
add
je
add
nop
cld
nop
jmp
push
add
sbb
imul
jb
mov
xchg
xchg
nop
cld
nop
jmp
loope
add
pop
dec
add
add
mov
push
mov
xchg
ret
add
add
add
enter
jb
sub
cmpsl
add
pop
adc
add
add
shll
add
cmpsl
jl
mov
stc
nop
es
mov
mov
xchg
ret
add
add
xor
add
stc
nop
es
sbb
jnp
pop
add
stc
nop
es
add
dec
jnp,pt
xor
es
dec
add
sahf
add
or
inc
push
mov
xchg
ret
add
push
add
mov
jle
sar
es
lea
add
sbb
fidivs
rclb
out
flds
xchg
ret
pop
add
cmp
add
sub
stc
nop
es
add
add
lahf
mov
stc
nop
es
xchg
sbb
add
nop
es
scas
add
cltd
xchg
stc
nop
es
push
add
roll
and
add
add
add
nop
es
add
add
inc
add
fiaddl
xchg
ret
add
add
add
sar
nop
es
add
add
mov
clc
inc
add
dec
addb
xchg
fstp
push
stc
nop
es
xchg
add
add
mov
stc
nop
es
cmp
dec
push
nop
cld
nop
jmp
add
add
add
stos
and
loope
pop
stc
nop
es
add
add
std
cmpl
nop
cld
nop
jmp
add
mov
mov
stc
nop
es
add
xchg
add
and
push
mov
xchg
ret
add
add
stc
nop
es
mov
add
hlt
ds
in
rep
stc
nop
es
hlt
sbb
cmp
add
ss
xor
stc
nop
es
add
xlat
cmp
jmp
add
add
hlt
push
dec
push
sbb
inc
and
push
mov
xchg
ret
add
js
mov
outsl
popa
fs
cld
nop
jmp
add
sub
add
popa
add
mov
xchg
ret
mov
jnp
inc
push
adc
stc
nop
es
js
cmp
mov
mov
stc
nop
es
gs
jns
or
nop
jmp
add
dec
mov
jno
test
add
pop
add
stc
nop
es
dec
sbb
loope
push
push
mov
xchg
ret
add
mov
idivb
jb
add
add
xchg
imul
stc
nop
es
add
add
push
sti
xor
stc
nop
es
movsl
movsl
add
dec
and
sub
cld
nop
jmp
add
add
add
lea
push
mov
xchg
ret
add
mov
stc
nop
es
pop
add
sub
sbb
nop
es
add
add
and
add
xchg
mov
push
mov
xchg
ret
addb
jp
fstp
jmp
nop
cld
nop
jmp
pushf
mov
add
lods
stc
nop
es
pushf
or
pushf
mov
lea
adc
nop
es
lods
pop
movsl
lods
mov
nop
es
add
scas
js
movb
mov
stc
nop
es
hlt
add
xchg
push
add
mov
stc
nop
es
add
mov
nop
es
daa
pushf
mov
add
dec
nop
cld
nop
jmp
add
sub
jnp
add
jnp
or
mov
stc
nop
es
jp
push
sbb
stc
nop
es
add
add
add
mov
call
stc
nop
es
roll
rolb
add
jmp
add
loope
add
mov
nop
es
adc
add
cld
nop
jmp
dec
add
aas
add
nop
es
mov
and
adc
or
add
add
push
cltd
call
stc
nop
es
jp
mov
cld
nop
jmp
add
add
jp
add
add
xor
jmp
jb
add
adc
jo
xchg
push
mov
xchg
ret
push
add
add
dec
push
nop
cld
nop
jmp
jns
add
daa
fldl
pushf
mov
nop
es
dec
jmp
push
xchg
addb
add
stc
nop
es
add
nop
es
adc
add
sub
stc
nop
es
add
add
sbb
daa
xchg
nop
cld
nop
jmp
add
imul
sahf
jnp
jmp
nop
es
aas
add
aas
add
out
sbb
popa
add
nop
es
aas
jnp
pop
incb
pop
jno
add
stc
nop
es
ds
loope
sbb
add
nop
cld
nop
jmp
add
add
mov
stc
nop
es
add
imul
xchg
and
push
adc
nop
es
add
add
mov
stc
nop
es
fldl
add
cmpsb
pop
mov
stc
nop
es
add
add
rcll
test
nop
cld
nop
jmp
pop
add
add
pop
add
fidivs
add
push
mov
xchg
ret
roll
jns
js
iret
ret
stc
nop
es
sbb
sahf
push
xchg
xor
stc
nop
es
pop
aas
or
jns
sahf
push
nop
cld
nop
jmp
and
add
add
mov
rcrl
popa
stc
nop
es
js
add
fmull
es
add
imul
lds
jb
add
add
scas
jnp
push
aas
mov
stc
nop
es
dec
add
decl
push
mov
xchg
ret
add
push
imul
push
mov
jge
pop
mov
add
inc
pop
add
inc
out
cld
jne
stc
nop
es
add
pushf
mov
push
mov
xchg
ret
and
add
dec
aas
test
nop
cld
nop
jmp
dec
scas
pushf
pop
add
add
nop
adc
jb
enter
cmpb
or
stc
nop
es
add
cmp
ret
push
mov
xchg
ret
daa
add
pushf
mov
push
mov
xchg
ret
jns
sbb
add
imul
jmp
andb
lods
add
js
mov
add
stc
nop
es
add
add
scas
gs
jle
mov
nop
es
jns
sbb
and
push
mov
xchg
ret
push
enter
push
rol
add
add
stc
nop
es
xchg
add
mov
ret
adc
xor
push
stc
nop
es
sarl
add
enter
shll
lcall
ret
pushf
add
push
add
cmp
push
mov
xchg
ret
mov
sarb
stc
nop
es
jmp
lea
stc
nop
es
pushf
enter
bound
push
stc
nop
es
sbb
add
clc
add
cmc
incl
add
imul
js
fs
push
stc
nop
es
pop
add
pop
add
add
inc
add
mov
push
mov
xchg
ret
add
xor
sub
push
stc
nop
es
sbbb
sahf
add
jne
stc
nop
es
cmp
add
add
and
stc
nop
es
aas
hlt
adc
sti
push
nop
cld
nop
jmp
add
sahf
add
push
stc
nop
es
and
jns
xchg
rcrl
mov
stc
nop
es
push
loope
fldl
add
push
nop
cld
nop
jmp
add
sbb
in
mov
call
repz
incl
add
lea
jno
cmp
add
nop
es
js
mov
inc
add
lcall
inc
add
add
and
mov
add
stc
nop
es
add
in
rolb
add
inc
and
stc
nop
es
xchg
add
push
or
repz
add
add
hlt
aas
add
imul
sub
incl
sbbb
push
call
stc
nop
es
add
daa
ds
lret
test
nop
cld
nop
jmp
dec
add
add
jns
stos
add
stc
nop
es
add
add
enter
dec
nop
cld
nop
jmp
js
add
add
add
pop
decl
stc
nop
es
aas
xchg
daa
loope
add
add
push
mov
xchg
ret
add
loope
js
xchg
sbb
nop
es
add
add
js
repz
inc
and
stc
nop
es
pop
add
gs
fwait
mov
stc
nop
es
add
pushf
pop
std
cmpl
nop
cld
nop
jmp
mov
mov
inc
or
stc
nop
es
sahf
stos
add
add
mov
stc
nop
es
add
add
in
push
push
mov
xchg
ret
add
popl
stc
nop
es
add
sub
sahf
lret
cltd
and
stc
nop
es
sub
daa
add
fldl
enter
jmp
add
add
jb
fnstcw
nop
cld
nop
jmp
dec
sbb
popa
add
mov
xchg
ret
xor
xchg
add
mov
push
out
stc
nop
es
add
add
nop
xchg
out
jmp
stc
nop
es
push
aas
aas
cmp
stc
nop
es
add
add
stos
lea
stc
nop
es
add
add
add
cmp
icebp
nop
cld
nop
jmp
jmp
movsl
cmpsl
add
stc
nop
es
lea
loope
jnp
pop
add
mov
mov
xchg
ret
lods
pop
mov
mov
mov
xchg
ret
dec
jp
add
and
rcr
mov
stc
nop
es
pushf
add
dec
push
stc
nop
es
and
add
xchg
add
aam
mov
stc
nop
es
movsl
add
pop
jns
mov
add
stc
nop
es
add
sbb
pop
add
stc
nop
es
mov
add
sub
inc
adc
nop
es
add
adc
pusha
push
mov
xchg
ret
add
xor
lods
push
mov
add
add
add
add
arpl
mov
nop
cld
nop
jmp
sbb
js
add
stc
nop
es
and
stos
xchg
add
mov
xchg
ret
xor
add
repz
stc
nop
es
pushf
dec
loope
enter
mov
add
fimull
add
sbb
mov
stc
nop
es
adc
add
push
and
jb
cmpb
add
add
add
mov
xchg
ret
push
add
gs
add
test
nop
es
cmpsl
incb
fmull
es
cmpsl
sahf
scas
add
lcall
inc
add
add
add
sbb
mov
push
mov
xchg
ret
push
add
stc
nop
es
dec
add
dec
rcll
movzwl
nop
cld
nop
jmp
add
lods
add
stc
nop
es
pop
enter
add
mov
stc
nop
es
push
ds
nop
es
mov
stos
adc
dec
add
nop
es
add
scas
add
fsubrs
xor
fs
nop
es
js
add
sbb
sar
es
xchg
add
dec
rclb
ret
jmp
stc
nop
es
add
add
cmpl
nop
jmp
add
add
xchg
cmp
mov
sub
cli
incl
xor
add
xor
cmp
nop
cld
nop
jmp
dec
pop
movsl
hlt
or
mov
xchg
ret
or
add
stc
nop
es
add
add
add
add
push
mulb
xchg
stc
nop
es
push
mov
gs
mov
xchg
ret
lea
jp
add
add
jg
lcall
sarl
js
addb
imul
jb
add
cmpsl
daa
mov
nop
cld
nop
jmp
rcll
sbbb
scas
mov
stc
nop
es
add
hlt
aas
add
inc
xor
add
stc
nop
es
add
pushf
in
push
stc
nop
es
js
pushf
add
add
mov
hlt
call
or
add
gs
xor
stc
nop
es
or
and
add
mov
stc
nop
es
add
add
cmp
aas
mov
xlat
inc
add
pop
add
pusha
nop
cld
nop
jmp
movsl
add
gs
add
add
incl
nop
cld
nop
jmp
add
add
or
in
push
adc
cmp
add
dec
ljmp
add
nop
jmp
mov
nop
push
mov
xchg
ret
jp
movsl
stos
cmpsl
add
es
mov
nop
cld
nop
jmp
jp
sub
add
sbb
inc
add
push
mov
add
fstpl
push
mov
cmp
add
jne
stc
nop
es
add
imul
nop
cld
nop
jmp
add
add
mov
mov
stc
nop
es
add
and
mov
out
nop
cld
nop
jmp
add
add
dec
add
pop
mov
stc
nop
es
jmp
dec
enter
add
nop
es
fldl
adc
mov
stc
nop
es
sbb
add
aas
xchg
add
or
jne
stc
nop
es
add
jns
add
dec
leave
stc
nop
es
cmpsl
add
add
inc
stc
nop
es
sahf
stos
add
add
pop
jp
jmp
nop
cld
nop
jmp
add
enter
pop
stc
nop
es
add
dec
add
add
nop
cld
nop
jmp
add
add
aas
add
nop
cld
nop
jmp
add
jne
mov
stc
nop
es
jmp
nop
es
push
movsl
pop
add
daa
cmp
call
nop
cld
nop
jmp
js
xchg
mov
jb
add
add
aas
add
pop
scas
add
nop
cld
nop
jmp
mov
add
xchg
add
push
push
mov
xchg
ret
aas
mov
add
stc
nop
es
add
add
ds
add
add
add
imul
sub
es
hlt
movsl
aas
add
hlt
xor
or
nop
cld
nop
jmp
mov
and
add
add
stc
nop
es
add
incb
js
add
cld
nop
jmp
cmp
add
rolb
sub
add
call
cld
nop
jmp
gs
dec
aas
loope
dec
into
xor
stc
nop
es
aas
xor
hlt
sarl
push
mov
xchg
ret
ds
cmpsl
add
stc
nop
es
xor
xchg
jp
pop
xlat
aad
or
fdivrp
stc
nop
es
add
daa
pop
push
mov
stc
nop
es
add
pushf
dec
add
add
mov
xchg
ret
push
pop
add
jle
nop
cld
nop
jmp
sub
add
dec
add
ret
mov
nop
jmp
rolb
hlt
push
add
js
or
es
add
cmpsl
add
add
sbb
stc
nop
es
add
add
in
repz
add
pop
xchg
jns
test
add
mov
jmp
add
cmpsl
add
dec
push
stc
nop
es
js
cmp
add
stos
stc
nop
es
scas
imul
pushf
add
out
mov
push
mov
xchg
ret
add
mov
mov
xchg
ret
add
add
clc
mov
push
mov
xchg
ret
aas
aas
add
popa
cmc
jae
es
add
xchg
add
push
testl
add
add
cs
add
xor
stc
nop
es
add
stos
add
or
nop
es
push
add
push
stc
nop
es
add
pushf
sbb
pop
stos
add
inc
push
mov
xchg
ret
add
xchg
cmpsl
loopne
xor
stc
nop
es
add
imul
es
add
and
rolb
insl
inc
stc
nop
es
sub
add
dec
jne
nop
cld
nop
jmp
mov
add
rep
stc
nop
es
jnp
add
sub
stos
adc
nop
es
add
add
add
or
xchg
cmpl
adc
incl
xchg
add
loopne
mov
push
mov
xchg
ret
mov
sbb
jge
add
nop
es
mov
decl
stc
nop
es
add
add
rcll
nop
es
pop
mov
add
add
add
stc
nop
es
add
das
and
push
mov
xchg
ret
shrl
lret
cld
nop
jmp
push
pushf
daa
add
add
sbb
xor
add
push
mov
xchg
ret
add
xchg
mov
add
stc
nop
es
add
lea
nop
es
mov
add
add
push
mov
xchg
ret
sub
pop
add
hlt
sub
stc
nop
es
pop
add
adc
pop
fadds
xchg
ret
rcrl
inc
jb
stc
nop
es
add
add
or
inc
add
add
sbb
sarl
stc
nop
es
add
add
jns
lods
pushf
arpl
nop
es
add
add
pop
xor
aam
jl
clc
nop
cld
nop
jmp
pop
add
incb
add
mov
xchg
ret
addb
pop
add
dec
not
push
mov
xchg
ret
add
sbb
add
stc
nop
es
pushf
add
cmp
sbb
jg
stc
nop
es
add
adc
jne
stc
nop
es
add
or
es
mov
pop
add
xor
push
mov
xchg
ret
js
incb
into
mov
nop
cld
nop
jmp
add
ds
push
nop
cld
nop
jmp
add
add
add
dec
cmp
cld
nop
jmp
add
add
pushf
inc
add
loopne
stc
nop
es
pop
jns
rolb
shl
mov
je
add
loopne
incl
add
sbb
sbb
jmp
add
xchg
add
je
stc
nop
es
add
pushf
andl
jmp
pushf
mov
add
xchg
jbe
subl
push
mov
xchg
ret
sarl
xor
stc
nop
es
add
js
push
fistpll
stc
nop
es
and
hlt
sbb
lock
add
daa
sbb
add
adc
stc
lcall
cs
sub
add
cmp
stc
nop
es
add
xor
jmp
call
idiv
incl
jmp
xor
stc
nop
es
add
jmp
dec
mov
stc
nop
es
enter
xor
add
push
mov
add
xchg
xor
pushf
add
pusha
rcrl
inc
xor
nop
cld
nop
jmp
xchg
add
mov
add
addr16
cmp
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
cs
lea
jl
xor
nop
es
add
pop
push
mov
xchg
ret
aas
scas
push
add
add
stc
nop
es
xor
add
cmp
es
adc
add
add
stc
nop
es
daa
add
fsub
push
pop
add
add
add
enter
push
stc
nop
es
mov
add
push
stc
nop
es
push
stos
add
and
stc
nop
es
js
add
push
ja
push
push
push
mov
xchg
ret
push
gs
lea
add
xchg
inc
add
add
mov
movzwl
stc
nop
es
movsl
dec
add
mov
nop
cld
nop
jmp
add
stos
movb
add
nop
cld
nop
jmp
loope
roll
add
push
mov
xchg
ret
add
mov
sahf
and
push
mov
xchg
ret
add
add
add
jb
add
add
loope
push
and
cld
stc
nop
es
and
sub
xchg
add
stc
nop
es
add
add
loopne
pop
add
stc
nop
es
add
push
ds
gs
add
xchg
int
popa
add
cld
nop
jmp
scas
push
sub
xor
fcoml
mov
xchg
ret
add
xchg
jmp
nop
cld
nop
jmp
push
add
xchg
imul
cld
nop
jmp
xchg
add
pop
or
mov
in
pop
add
push
push
add
dec
add
nop
cld
nop
jmp
sahf
cs
aas
jnp
idiv
nop
es
stos
hlt
add
lea
sbb
jne
stc
nop
es
mov
gs
out
jmp
nop
cld
nop
jmp
add
pop
sub
pushl
nop
cld
nop
jmp
rolb
add
call
stc
nop
es
add
push
orps
xchg
cmc
inc
add
lea
add
pop
stc
nop
es
dec
add
roll
sbb
xor
stc
nop
es
pop
xor
jp
xchg
addb
add
push
mov
xchg
ret
add
jp
add
pushl
push
mov
xchg
ret
add
scas
enter
jb
push
add
xor
test
stc
nop
es
xchg
add
mov
jb
add
add
add
add
enter
nop
cld
nop
jmp
pop
loope
adc
jl
mov
nop
es
jns
aas
or
cmpsb
out
stc
nop
es
add
hlt
add
call
in
jmp
cmpsl
add
stc
nop
es
xor
pop
cmp
push
cmpsb
sub
mov
xchg
ret
xor
add
add
jmp
jb
mov
aas
and
mov
stc
nop
es
add
and
cld
nop
jmp
add
cmp
add
fstpl
dec
jne
nop
cld
nop
jmp
add
js
imul
add
popf
out
add
cs
cmpsl
cld
je
stc
nop
es
add
outsb
mov
stc
nop
es
pop
add
mov
cmp
nop
cld
nop
jmp
add
add
lock
mov
lret
nop
jmp
movsl
xchg
or
leave
and
push
mov
xchg
ret
gs
sub
pop
cmp
mov
adc
nop
es
add
add
add
shr
push
mov
xchg
ret
add
xor
stc
nop
es
pushf
cmpsl
mov
shr
and
push
mov
xchg
ret
add
add
dec
mov
stc
nop
es
add
xor
addb
shrb
jge
nop
cld
nop
jmp
scas
add
mov
mov
nop
cld
nop
jmp
xor
pushf
jns
mov
push
mov
xchg
ret
sub
jmp
stc
nop
es
add
stos
add
add
or
nop
es
pushf
add
mov
nop
cld
nop
jmp
mov
cmpsl
add
lcall
add
or
add
cld
test
stos
mov
push
add
inc
add
fistl
mov
mov
mov
fcmovnu
in
add
push
fsubrl
insb
icebp
fs
movb
divb
pop
pushf
mov
stos
xor
jbe
or
add
add
and
xor
jecxz
mov
jno
test
mull
sti
cmc
scas
and
mov
jmp
mov
jbe
xchg
sbb
repnz
out
xchg
popw
push
out
xor
andl
add
xchg
jecxz
dec
outsb
hlt
aad
add
movb
aaa
in
mov
jmp
into
jmp
mov
cmpsl
mov
ja
xchg
pop
gs
stos
or
mov
movb
mov
add
jno
insb
or
test
imul
xor
add
mov
cmpl
repz
adc
jmp
pop
push
mov
push
add
pop
outsb
push
add
fs
je
nop
ljmp
adc
sahf
dec
int3
cli
sbb
mov
fidivrs
jnp
sbb
fldlg2
jge
mov
movsb
decb
addr16
sbb
mov
clc
movb
push
sub
jbe
jl
mov
out
icebp
das
xchg
pop
dec
and
data16
scas
jp
rclb
pop
shll
add
inc
lds
sbb
add
rcl
pop
lret
mov
daa
insb
scas
lods
jge
js
jo
repz
cmp
inc
mov
jbe
xor
add
imul
fst
push
push
or
add
jbe
sarb
cld
pop
sbb
xor
pop
cmp
push
cwtl
jb
pop
jg
stc
gs
add
test
sbb
dec
iret
adc
std
mov
add
add
jmp
scas
hlt
mov
popa
gs
dec
dec
add
out
mov
pop
addr16
xchg
inc
add
addb
adc
inc
pop
aaa
in
mov
repz
popa
fimull
mov
dec
mov
mov
loopne
pop
stos
pop
hlt
inc
sbb
xchg
addr16
adc
xchg
jo
dec
filds
test
out
in
lds
ret
test
ss
nop
xlat
clc
mov
movsb
pushf
sub
rolb
je
push
and
addb
or
sub
test
inc
add
test
or
xor
add
jnp
add
push
xor
popf
fnstcw
pop
ss
mov
mov
add
popf
and
in
pop
sub
sti
repnz
aad
enter
mov
dec
dec
sub
pop
cli
or
cmpsl
xchg
inc
add
shlb
xor
add
mov
jae
xchg
lods
js
sub
cli
jmp
add
aaa
int3
loop
xlat
mov
cwtl
sub
and
lea
jnp
cmp
lea
scas
js
js
lret
push
add
iret
js
add
fsubrs
cmpsb
and
or
jle
fxch
movsl
mov
xor
mov
pusha
add
js
sbb
add
add
xchg
jne
push
pop
add
fwait
or
pop
dec
andl
mov
sub
add
jmp
ret
loopne
pop
sub
add
mov
add
jae
add
cld
sub
movsl
lret
sub
in
mov
push
outsl
mov
cwtl
jnp
addb
mov
ljmp
repnz
ja
fmuls
or
pop
out
pop
mov
dec
ljmp
daa
out
sub
jnp
or
out
imul
mov
stos
loopne
test
sbb
in
test
movb
scas
lods
or
loope
fisubrl
adc
lcall
push
fcompl
adc
iret
xchg
mov
mov
mov
adc
add
cmp
addb
inc
add
icebp
mov
aas
add
pop
int3
push
addb
inc
mov
inc
add
xor
add
lret
push
sbb
cmp
lock
inc
cld
mov
fwait
sub
cmp
jecxz
push
mov
xchg
mov
popa
call
mov
add
addb
and
or
in
divl
andl
mov
sbb
mov
add
and
xchg
cmpsb
adc
jbe
sub
add
xor
inc
cmp
jnp
adc
pop
pushl
addb
es
shr
inc
add
stc
loop
lret
lahf
lds
test
adc
mov
push
add
dec
add
add
inc
add
sti
scas
ljmp
push
sbb
xchg
loop
bound
loopne
cmp
sti
mov
sub
xor
sbb
imul
or
loope
fildll
int
add
xchg
mov
add
push
push
sahf
lret
mov
sub
inc
rcrb
cmp
push
inc
pop
arpl
jae
push
xchg
adc
std
jge
jae
add
lock
adc
enter
clc
fisttpl
test
xor
movb
cmc
insl
cli
arpl
rcr
xchg
icebp
push
dec
jle
cmp
jmp
lods
and
jg
mov
movsl
push
add
scas
outsb
inc
or
inc
add
cltd
jmp
xlat
roll
push
mov
imul
adc
add
cmp
ljmp
mov
cmp
out
xlat
add
or
addb
clc
mov
push
pushf
xchg
jmp
fiaddl
push
add
jle
lea
addb
bound
in
xor
sub
std
out
push
call
push
and
mov
mov
dec
aam
daa
mov
lds
shl
mov
movsb
pop
fstps
test
clc
sahf
aas
stc
add
add
jae
push
andl
dec
or
add
add
rol
clc
fdivs
xchg
nop
addr16
bound
dec
loop
add
adc
and
pushf
dec
nop
pop
in
pop
mov
mov
and
and
lahf
addb
and
movsl
xchg
cwtl
pop
cs
call
movsl
adc
jns
es
outsb
in
data16
dec
and
mov
pop
lods
fsubrp
and
lahf
push
in
aaa
and
out
add
imul
mov
adc
pop
test
xchg
les
addb
adc
outsb
stos
fs
addb
ret
cwtl
test
sub
nop
outsb
sub
cmp
add
xlat
addb
ds
je
addr16
or
mov
int
imul
nop
pop
repnz
mov
jecxz
mov
negb
mov
add
addb
push
cmc
sti
lahf
jg
fstps
les
and
add
dec
mov
xor
nop
outsb
mov
in
stc
rorl
jne
mov
cmp
ljmp
mov
add
loope
xor
rolb
adc
xchg
push
pop
add
sbb
cmp
stos
fs
sbb
mov
mov
jmp
mov
shll
xchg
cwtl
scas
je
or
inc
add
mov
adc
mov
or
jmp
es
in
in
ss
and
xor
add
xor
popa
sbb
inc
add
push
inc
add
aad
push
testl
add
push
outsl
xor
or
adc
scas
jge
sbb
popf
jb
push
mov
xor
jns
pop
or
jne
mov
fdivrs
leave
loopne
mov
stos
inc
add
add
mov
ljmp
add
dec
idiv
arpl
or
lahf
pop
loopne
sub
sbb
jb
out
mov
loope
aaa
push
stc
rcrb
std
fs
mov
mov
popf
push
nop
rclb
mov
outsb
sub
hlt
sub
mov
jne
and
int
ffreep
add
adc
outsb
push
mov
in
jne
dec
sbb
insl
mov
stos
xchg
jge
std
pop
ret
mov
subl
pop
jno
xor
dec
and
into
or
call
add
sub
mov
mov
negb
xchg
stos
int
add
mov
mov
mov
or
or
lcall
outsl
or
mov
aas
fdiv
sbb
data16
shl
sahf
addb
jmp
fistpl
dec
loop
in
es
dec
mov
xchg
xor
mov
nop
push
fsubs
pop
ja
jle
sarl
clc
lods
cmp
repnz
adc
cwtl
dec
cwtl
xor
rolb
mov
movsl
sahf
daa
xor
cs
add
push
push
dec
cmc
inc
nop
ret
jmp
jnp
pop
ret
incb
fwait
sbb
add
repz
rolb
mov
or
sbb
orl
adc
test
sbb
sbb
add
add
add
aas
lahf
sbb
adc
ror
mov
rolb
add
lods
jo
ds
faddp
leave
dec
shr
sub
loopne
lds
sti
imul
push
and
lcall
and
add
js
das
or
push
sub
cmp
bnd
adc
into
test
jae
ljmp
add
and
cmpl
pop
xchg
adc
movb
cmpsl
sti
fnstcw
hlt
and
pusha
add
in
out
scas
loopne
jnp
das
addb
loope
mov
xchg
scas
sub
stc
sbb
mov
test
push
je
mov
or
sbb
and
pop
cmpsb
mov
and
xchg
lret
mov
xchg
push
adc
cltd
imul
outsl
hlt
adc
test
lea
stos
and
repz
addb
in
push
out
addr16
test
xor
outsl
push
or
add
mov
add
lds
rcrl
xchg
xlat
fcompl
inc
add
ret
jecxz
cltd
aaa
addb
out
and
or
out
add
xlat
sub
lret
lret
push
push
scas
lods
int
add
inc
pop
repz
add
dec
hlt
test
inc
andl
sub
add
jae
cmp
xor
jne
add
add
jl
mov
jle
cltd
out
or
inc
add
leave
adc
dec
lret
xorl
stc
jle
call
mov
push
outsb
xchg
add
and
fadds
jmp
dec
int3
mov
xchg
lods
mov
xor
scas
pop
xchg
inc
add
add
push
mov
add
and
insl
sti
test
adc
test
test
insb
iret
push
test
sub
mov
cmp
mov
pop
inc
add
adc
add
add
mov
in
mov
push
mov
ficoms
adc
popa
inc
lods
sbb
push
cli
and
pop
ja
out
lods
cmp
mov
out
jle
add
fs
xor
lahf
cmp
dec
mov
shl
dec
lahf
or
gs
roll
stos
scas
dec
std
data16
popf
or
popa
mov
add
fs
les
push
cmp
adc
add
add
mov
pop
dec
mov
pusha
add
add
outsl
ljmp
dec
stos
add
sbb
pop
shl
mov
ret
push
add
sahf
repnz
outsl
jno
xchg
stos
or
fs
loop
and
or
sub
aaa
mov
mov
outsb
mov
js
repnz
add
test
bound
shll
test
dec
addb
add
sbb
cmp
movsb
adc
cmpsb
cmp
jg
jmp
sub
roll
cmpsb
push
add
mov
ljmp
sbb
scas
ret
aam
xor
fcoml
mov
iret
std
add
mov
into
push
add
mov
out
repnz
mov
add
adc
xchg
pop
jae
or
int
nop
insb
popa
add
mov
sbb
dec
mov
sbb
xchg
js
jg
add
and
gs
and
cmp
std
dec
iret
sub
xchg
aam
cld
addb
mov
mov
repz
mov
movb
xor
push
and
xchg
test
std
mov
pop
in
cmp
out
add
push
insl
adc
pop
cs
adc
push
mov
dec
jbe
inc
fisubl
inc
add
dec
hlt
add
add
adc
movsb
pop
and
int3
push
cmp
add
inc
das
sub
pop
mov
cmc
lock
inc
add
push
jo
in
sahf
push
lods
aad
inc
add
jo
mov
or
sti
nop
pop
stos
push
fistl
mov
scas
out
cmp
xor
add
fldenv
mov
data16
inc
add
or
xor
int3
shlb
sub
lea
call
add
icebp
ss
lcall
jno
or
add
scas
not
mov
dec
jae
jbe
push
or
mov
addb
in
insb
testb
xchg
call
stos
inc
jl
sbb
daa
mov
jae
hlt
lock
movsb
shlb
gs
add
xor
icebp
dec
cld
pop
ret
xor
mov
lahf
jno
in
jecxz
jo
in
mov
dec
jle
and
push
mov
add
fistl
or
jbe
push
aam
mov
call
sbb
push
sbb
add
arpl
adc
out
loopne
inc
add
cmp
enter
cmp
loope
push
mov
call
lea
shll
insb
pop
test
fcompl
jp
roll
into
jae
mov
insl
xchg
ficompl
jno
rolb
add
cmc
push
imul
push
cmc
and
add
mov
ret
scas
lock
std
in
pop
outsb
sub
mov
ret
sarb
idiv
push
lock
jle
pop
xchg
lods
xor
clc
or
mov
nop
xchg
adc
sbb
xor
sub
adc
daa
lret
fcom
lods
aam
add
push
or
daa
dec
nop
imul
jle
add
dec
jp
push
sbb
stc
popf
aaa
adc
ljmp
scas
and
popa
and
sub
and
add
fcmovu
inc
mov
roll
add
clc
inc
add
cwtl
adc
enter
ret
jbe
cld
roll
ja
jno
xchg
addr16
nop
mov
js
xchg
insl
loopne
es
cmpsb
xchg
mov
or
hlt
or
jnp
add
jo
add
add
and
imul
lret
ds
gs
and
mov
cwtl
dec
jge
pusha
add
push
mov
clc
sub
mov
xchg
cli
fisubl
bound
test
xor
xor
ficomps
in
or
dec
inc
fmull
jp
inc
dec
ss
loopne
and
jmp
add
dec
mov
adc
je
add
jmp
cs
out
sbb
mov
add
add
cld
add
mov
test
addb
cmp
imul
or
ds
cmp
add
xor
xchg
or
addr16
add
inc
call
imull
xor
mov
testb
add
pop
mov
xlat
mov
sbb
mov
aas
iret
dec
cmpsb
sbb
fldt
call
adc
mov
stos
mov
sub
pop
sbb
jnp
jae
lret
test
shl
sti
push
pop
xor
jae
adc
movsl
adc
call
cmp
pushf
lret
scas
test
and
inc
lea
sbb
test
push
add
add
repz
lds
leave
push
sbb
cs
sbb
ljmp
out
mov
data16
jp
or
dec
push
mov
mov
sti
or
and
adc
scas
xlat
test
sbb
movb
jns
decl
xchg
dec
popa
cmp
dec
mov
adc
mov
js
and
mov
jbe
cmp
fnsave
or
add
dec
out
mov
inc
add
sbb
dec
mov
out
sub
add
mov
repnz
jle
inc
add
arpl
push
adc
in
addb
arpl
addb
push
lret
pop
mov
add
into
pop
xor
lcall
fwait
dec
repnz
pushf
jno
into
add
sub
shll
andl
add
jle
jbe
add
xchg
lcall
mov
sbb
xchg
fucompp
add
and
dec
cmc
je
jmp
lret
jle
int
stos
lahf
sub
mov
fwait
test
popa
and
inc
lret
xchg
les
xchg
aas
mov
cld
movl
add
test
lea
int3
incb
out
cmpsl
pop
xor
mov
cmp
stos
imul
stc
int3
push
mov
add
in
and
ficompl
cmpsl
lcall
add
mov
push
cs
mov
jne
stos
dec
and
repz
in
xchg
inc
fldenv
popf
sti
adcl
xchg
cmp
lock
mov
sbb
pop
lock
popa
imul
jmp
push
lret
and
out
and
stos
bswap
push
cmp
adc
test
icebp
mov
and
in
xor
stc
sbb
iret
sub
enter
push
cmc
dec
roll
jne
negb
pop
js
sbb
mov
and
xchg
add
push
aad
cmp
lret
adc
pop
addb
sti
xor
sar
and
repz
inc
add
xor
inc
dec
jp
adc
sub
fsts
jo
push
int3
fwait
sub
or
push
push
scas
inc
add
lea
push
sbbl
cli
add
dec
and
sbb
mov
clc
scas
int
xor
jo
nop
mov
ss
add
mov
arpl
xchg
push
adc
testb
push
push
xchg
je
add
insl
sub
and
push
add
scas
jmp
xor
movb
xorl
sub
dec
inc
cmp
icebp
xor
mov
sahf
cmp
sub
mov
cmpsb
jno
inc
add
stc
mov
add
xor
je
fsubs
cwtl
repz
xor
jns
mov
mov
neg
push
lods
les
aam
repz
popa
movsl
in
or
adc
xor
mov
add
into
jmp
jno
enter
movsl
lret
mov
test
push
jb
fwait
test
inc
mov
sahf
sahf
pusha
add
rorb
cmp
cvttps2pi
not
dec
loope
jle
lret
imul
add
popf
pop
push
jne
cmp
rorb
add
jmp
insl
add
push
inc
loope
popf
lods
xchg
cs
sub
add
cmpsb
sub
popf
dec
xchg
test
stc
bound
stos
in
cmpsb
adc
mov
ja
lods
push
push
mov
inc
add
out
leave
lock
add
dec
insl
lcall
mov
inc
add
test
adc
sbb
les
pop
movsl
xlat
aad
jle
movsl
xlat
cmc
sub
mov
std
dec
sbb
fsts
gs
jb
gs
push
jnp
or
adcl
add
leave
test
pop
sahf
sub
sub
shll
push
in
outsb
cmp
mov
loopne
pop
hlt
and
sbb
loope
rolb
inc
add
xchg
cmc
cmp
adc
ja
push
repz
add
notl
dec
lods
insb
insb
cmp
and
mov
test
cmc
in
dec
mov
mov
cs
add
leave
ja
in
jge
shll
imul
add
cmpsb
cld
mov
sub
adcl
loop
adc
fwait
dec
leave
mov
and
pop
mov
mov
add
out
dec
mov
adc
in
sahf
imul
loope
or
lret
mov
popf
lret
jnp
adc
ficomps
add
ss
add
and
add
fisubrl
out
pop
sbb
fdivr
dec
add
testb
in
add
into
push
repz
mov
adc
scas
leave
pop
out
daa
aas
aam
jns
xchg
movb
loop
cmp
pop
out
inc
add
movsb
pop
mov
sbb
add
js
call
xor
add
cmp
cmp
int
xchg
enter
rolb
nop
into
outsl
imul
dec
push
pop
pop
insl
sbb
dec
jl
popf
loop
jge
push
addr16
mov
add
cmp
push
fs
arpl
lret
dec
inc
add
mov
xor
test
out
push
fmulp
mov
sub
lahf
push
add
jecxz
jno
add
cli
or
mov
dec
ljmp
push
add
xor
inc
add
or
loopne
shll
arpl
mov
jne
sarl
add
push
lahf
xchg
inc
push
or
loopne
lea
push
mov
cmp
add
lock
insb
inc
add
outsb
sahf
cwtl
out
inc
addb
movsb
push
mov
cmpsb
das
push
cmp
inc
sbb
and
dec
shrl
mov
pop
pop
icebp
filds
add
bound
cltd
add
sbb
mov
int3
out
mov
add
scas
sarl
nop
sbb
and
add
adc
or
push
aam
adc
insl
lret
out
push
add
jmp
jl
testl
js
push
insb
cmp
test
add
cli
fidivrs
aaa
pop
adc
xor
xor
arpl
scas
sti
ljmp
xchg
xor
push
dec
ret
xchg
je
out
xchg
scas
mov
arpl
into
out
lcall
pop
cmp
add
adc
clc
popf
shl
push
add
dec
pop
push
rorl
testl
add
and
cltd
outsb
jns
lock
sub
or
dec
dec
aaa
les
adc
add
xlat
jns
cmp
or
inc
out
push
ficompl
cwtl
out
mov
outsb
inc
add
addb
jle
fmuls
sub
pop
iret
sub
cmp
addb
add
pop
jae
repz
loope
test
aam
js
add
mov
pop
dec
ret
pusha
add
nop
test
fimull
jno
jge
pop
inc
add
adc
mov
daa
fwait
xchg
push
lods
divl
lret
fucomp
movsl
mov
cmp
add
add
clc
adc
icebp
jnp
imull
add
add
lds
add
test
pop
les
and
add
lret
jg
mov
call
add
into
movsl
mov
add
lea
repz
mov
inc
or
pop
lahf
movsl
xlat
scas
and
fnstenv
lea
sub
cs
fdivrs
cmp
movb
add
enter
sti
sub
adc
faddl
in
in
mov
jae
js
lret
out
push
bound
mov
mov
lock
add
shl
cmp
fidivrl
jae
push
add
add
rorb
add
out
arpl
or
fdivrs
js
cmp
in
fldt
test
leave
outsl
jbe
adc
mov
stc
xchg
icebp
pop
loop
pop
les
sub
lods
imul
xchg
mov
jae
sub
ljmp
call
fadds
xchg
cmp
or
rcr
xchg
addb
xlat
push
push
inc
pop
mov
daa
das
inc
add
add
jb
xchg
repnz
jle
xchg
popa
fcmovbe
rcrb
mov
mov
add
adc
jmp
lea
addb
mov
add
lea
add
sub
add
add
test
je
add
repz
xchg
inc
xor
clc
ljmp
or
sub
xchg
xor
sti
movsl
xchg
and
add
int
pusha
add
sti
adc
repz
outsl
ljmp
dec
pop
inc
add
out
push
pop
pop
or
pop
rorb
and
pop
loop
mov
pavgw
pusha
add
cli
fxch
out
pcmpeqd
mov
test
aaa
lret
incl
lods
daa
jmp
jmp
aas
jmp
push
fadds
push
or
test
repnz
out
rolb
add
mov
sbb
addb
sub
or
scas
outsb
int
push
cmp
inc
add
mov
lahf
add
cmp
dec
add
notb
out
add
imul
movsl
sbb
jmp
push
sbb
fiadds
mov
add
pop
aaa
mov
ljmp
lret
adc
fistpll
xor
sbb
ret
aam
add
int3
cmp
jb
and
mov
add
add
jo
sar
push
and
out
jne
arpl
inc
add
push
fimuls
jge
cmc
clc
int
xor
sub
ficompl
out
repz
cltd
mov
mov
add
push
jb
sti
mov
test
fs
pusha
add
hlt
xchg
fadd
add
add
xor
cs
insb
add
add
sbb
add
mov
mov
pop
push
jle
dec
rolb
test
add
adc
or
add
addb
addb
mov
test
xchg
in
pop
inc
add
jge
imul
lods
loope
pop
std
mov
into
or
stc
mov
rcl
adc
rcrl
pop
pop
pop
cmp
imul
add
cmp
outsl
sub
xchg
lret
push
repz
gs
fdiv
inc
add
rolb
pop
gs
xchg
adc
andl
xchg
stc
xchg
mov
xchg
pop
mov
xor
test
jge,pn
xchg
and
es
es
loopne
in
addl
adc
mov
cwtl
xchg
sahf
and
push
in
adc
add
ss
push
add
mov
add
loop
or
out
jmp
test
lret
mov
add
adc
add
pop
add
sti
rolb
mov
push
mov
das
popf
mov
push
out
mov
movb
fidivrs
mov
ds
add
pop
testl
loop
daa
idivb
xor
movb
cs
les
pop
ss
cmp
or
dec
dec
push
push
mov
das
pusha
add
cmp
fstl
or
xchg
ds
bound
adc
outsb
popa
mov
lret
mov
bound
xchg
xor
add
jg
je
cmp
jp
or
jge
push
jl
mov
xor
fcoml
mov
cli
add
mov
adc
mov
add
pop
adc
sub
lret
popf
mov
out
push
hlt
gs
jne
arpl
push
xchg
es
aam
sbb
xor
fdivrl
add
dec
add
inc
mov
xchg
push
push
add
add
test
xchg
pop
lock
lahf
icebp
mov
lcall
movsl
push
xchg
xor
in
test
or
push
test
ret
scas
add
mov
imul
mov
roll
mov
push
jne
sbbl
mov
or
mov
lds
rolb
xchg
fiadds
and
ja
nop
scas
add
sbb
add
add
orl
push
mov
mov
inc
add
gs
movsb
sbb
adc
enter
jb
push
scas
jns
adc
lea
aad
lcall
fiadds
out
add
push
stc
aaa
fwait
add
inc
and
lods
in
dec
mov
jl
add
mov
push
aad
jns
in
xor
xchg
out
mov
sub
je
and
inc
clc
movsb
arpl
inc
add
loopne
ljmp
ret
jl
pop
jmp
add
outsb
add
push
add
daa
ret
mov
out
mov
inc
xor
loope
bound
inc
add
pop
in
imul
cmp
and
jns
insl
push
mov
mov
pop
inc
cs
mull
movb
enter
inc
add
frstor
xor
flds
jnp
inc
dec
ret
loop
jb
notb
adc
ret
pop
pop
push
sahf
or
dec
int
add
inc
add
rclb
cmpsl
jne
mov
mov
leave
outsl
or
sbb
mov
sbb
sub
and
mov
add
mov
mov
push
cmp
in
dec
dec
push
cmpsb
mov
mov
ja
pop
jne,pn
mov
inc
add
ja
popf
dec
call
dec
movsb
pop
clc
sbb
cmp
les
mov
add
sbb
and
sub
dec
dec
sub
add
stc
dec
lret
cmpsb
ja
jg
add
lret
insb
out
add
inc
fisttps
shll
loopne
int
xor
or
jbe
add
sbb
lcall
imul
add
or
das
lock
out
push
test
in
mov
and
add
sbb
xor
sub
fwait
insb
dec
cmp
and
mov
aas
cmpl
lock
xchg
ja
inc
add
inc
clc
dec
xchg
pushf
gs
lods
pop
jbe
es
test
add
or
sub
popf
push
xor
xlat
and
call
xor
add
sub
or
pop
mov
inc
add
bound
loope
add
jmp
add
imul
pop
repz
add
dec
sbb
cltd
inc
mov
cmp
adc
add
sbb
sahf
pop
movsl
imul
xchg
sarl
pop
push
int3
hlt
push
inc
add
js
mov
movb
stos
in
add
jne
jno
add
add
addb
in
mov
xchg
or
jno
add
cmc
mov
scas
loope
ret
xchg
adc
push
mov
add
add
add
mov
das
and
fs
fisubrl
loopne
mov
mov
ds
jbe
or
add
sub
jbe
mov
xchg
dec
push
movsl
ror
push
iret
iret
inc
add
enter
inc
or
push
mov
int3
mov
mov
mov
add
jmp
hlt
xchg
or
in
add
fdivs
out
pop
test
ja
pop
cmp
cmp
inc
add
xlat
mov
stos
pop
cmp
pop
jns
icebp
pop
dec
jno
es
jb
addr16
stos
test
jne
test
inc
sub
add
add
dec
adc
pusha
add
sbb
cmp
add
ss
pop
and
mov
inc
or
sub
or
sbb
loope
add
out
xchg
sahf
mov
inc
add
sub
ret
mov
les
push
mov
push
dec
cmp
cmp
pop
mov
addb
jb
mov
add
loope
mov
mov
cwtl
lret
pop
adc
fmulp
inc
add
push
add
mov
push
hlt
movb
and
pop
hlt
imul
or
add
add
mov
add
or
add
call
xchg
cmp
test
mov
xor
adc
adc
adc
stos
pop
repnz
add
dec
xchg
mov
cmovle
shlb
add
lods
push
pushf
pop
dec
add
jae
into
out
mov
inc
ret
pop
jge
cs
xchg
neg
mov
cmpsl
cmpsb
das
std
inc
add
ret
mov
icebp
sub
add
add
popa
in
iret
inc
mov
lahf
pop
or
add
add
ja
into
xchg
cmp
out
jne
imul
dec
xchg
push
daa
sbb
subl
fndisi(8087
pop
mov
xchg
test
inc
add
addb
xor
arpl
test
jns
addr16
and
call
dec
sbb
jbe
xchg
mov
test
cltd
mov
int
in
in
fucomip
xchg
fdivrl
jo
addr16
dec
lods
push
inc
imul
adc
outsb
xchg
daa
inc
add
data16
jns
lea
pop
sbb
and
xor
inc
add
mov
mov
xor
dec
decl
loope
cltd
inc
add
shrl
dec
cmc
filds
or
or
test
cli
and
adc
scas
mov
cwtl
xor
mov
int
pushf
call
adcl
add
stos
adc
sbb
sub
jno
push
imul
jg
movsb
int3
ljmp
add
add
sarb
push
iret
mov
add
div
mov
xor
scas
cmp
and
push
xor
jo
mov
les
sub
scas
mov
movb
cli
inc
push
mov
xor
or
std
sub
add
lret
mov
js
into
pop
or
jge
inc
sbb
out
cli
mov
or
xor
pop
imul
imulb
pop
dec
testb
out
add
push
add
mov
xchg
mov
lea
xor
jle
arpl
fisttpl
xor
outsb
cwtl
arpl
dec
cmp
loop
sbb
sub
mov
add
inc
arpl
call
into
push
es
push
adc
add
mov
mov
push
shl
sub
xchg
fsubs
add
sbb
stos
mov
fisubl
add
push
xchg
add
mov
aam
fs
das
outsl
xchg
test
aas
aaa
cmpsb
stos
mov
addr16
mov
icebp
addb
cmp
pop
lock
lods
popl
and
dec
jl
out
mov
mov
lock
dec
stc
push
ror
sub
add
out
lret
add
hlt
add
in
mov
pop
pop
dec
das
xchg
adc
arpl
and
dec
push
icebp
or
mov
sbb
mov
lahf
jmp
xor
pop
push
sbb
and
jo
push
xchg
pop
lret
lods
xor
add
js
add
xor
ret
xchg
add
pusha
add
add
dec
mov
add
out
mov
jb
add
sbb
rclb
int
and
shll
add
cmpsb
lods
fsubrl
ret
test
test
pop
and
je
add
adc
sti
fistpll
mov
add
out
aas
test
add
addb
push
ror
sub
lds
scas
lock
and
add
push
cwtl
popa
cmpsl
lcall
sahf
sahf
repz
addb
jb
push
addb
mov
scas
mov
add
rolb
mov
fbld
jp
lods
daa
cltd
add
jl
fstl
and
cwtl
stos
clc
mov
stc
dec
push
inc
add
movsb
cmp
nop
pushf
in
and
andl
jae
mov
inc
push
repz
loop
rcrb
xchg
aad
insb
sahf
jb
xor
cmp
cmpsb
loopne
or
jp
add
cld
dec
lahf
pop
xchg
sbb
jae
xchg
mov
ret
movb
int3
push
cmc
xchg
sbb
sbb
repz
scas
push
arpl
cmpsb
daa
into
das
or
dec
inc
jg
or
adc
add
loope
in
mov
rorl
repnz
mov
fxch
fists
inc
add
adc
test
es
xor
cmp
mov
enter
add
add
test
adc
sbb
movb
sahf
dec
mov
add
aam
sbb
cltd
push
push
sub
sti
addr16
xchg
nop
sbb
add
inc
cli
pop
lock
mov
and
mov
push
icebp
fmull
cmpsl
or
add
push
add
cltd
in
mov
sar
addb
or
sbb
cmovs
lret
add
xchg
dec
lods
outsb
enter
dec
popf
or
adc
ret
lea
pop
inc
add
adc
mov
ja
sbb
and
popf
jne
xchg
mov
and
xchg
imull
or
movb
push
add
loop
add
jecxz
gs
ljmp
insl
lods
push
hlt
inc
add
pop
mov
pop
sbb
mov
pop
dec
sahf
or
adc
dec
hlt
ljmp
add
dec
test
hlt
lcall
pop
icebp
or
arpl
dec
ja
repnz
repnz
xor
lret
xor
cltd
mov
cwtl
lods
xchg
inc
and
sbb
movb
aad
xchg
inc
aad
fstps
aad
test
ffree
insl
mov
push
hlt
lock
and
add
loope
cld
clc
cmp
enter
pop
bound
lds
cmp
ds
sub
push
jb
ds
imul
lret
add
add
add
js
test
sbb
cmp
mov
jae
jo
push
add
xchg
pushl
dec
leave
xchg
shrl
insl
jae
jbe
sarl
dec
mov
mov
fistpll
xchg
fimuls
mov
test
ja
movsb
pushf
cs
cmp
lret
inc
add
cmp
dec
jo
and
pop
mov
sub
out
addb
and
dec
xor
add
cmp
xlat
or
std
sub
lea
ss
add
mov
inc
lds
jl
insl
shll
lea
or
dec
andnps
punpckhdq
push
rcrl
xchg
pop
pop
lds
add
and
xchg
aaa
es
push
mov
sbb
mov
and
add
movb
xchg
test
test
add
mov
movsb
mov
cmp
in
xchg
fiadds
add
mov
insb
fcompl
sbb
mov
les
xor
ret
dec
pop
pop
sbb
xchg
bound
xor
sbb
add
add
jbe
and
dec
out
negl
data16
iret
push
lret
imul
mov
add
lret
ds
adc
cwtl
cmp
add
xchg
mov
mov
arpl
add
cmp
xchg
shrl
mov
js
test
mov
add
hlt
pop
push
xor
int3
adc
fadd
add
pushf
inc
add
loop
cmp
cmc
scas
push
in
adc
dec
pusha
add
add
dec
lock
jne
neg
fstps
jmp
mov
cmp
ret
lidtl
mov
aaa
sarl
mov
icebp
pop
cmp
ret
stos
jae
rcrl
jns
pop
mov
ja
push
or
loopne
push
add
aas
outsl
push
xchg
xor
cltd
mov
test
add
cmp
cs
sbb
mov
dec
ror
xor
add
cmp
aas
int3
ja
aad
test
jp
mov
xchg
sbb
mov
add
sub
add
cmpsl
loopne
jge
mov
dec
add
rolb
add
sub
out
or
add
adc
xor
lea
dec
xchg
aas
xchg
cmpsl
push
mov
lods
stc
mov
push
pop
aam
lods
add
push
lahf
lods
push
test
push
jmp
popa
nop
mov
out
sbb
dec
aad
loop
or
rorl
aad
add
fbstp
cmp
fistpll
test
outsl
stos
or
jbe
add
inc
add
cmc
sarl
sbb
arpl
pop
pop
sti
push
sub
add
daa
and
adc
inc
dec
outsb
sbb
adc
pop
jmp
mov
lods
repz
in
push
and
lret
add
shrl
imul
mov
arpl
scas
fisttps
loopne
mov
icebp
mov
push
insb
pusha
add
or
add
pusha
add
dec
xchg
dec
and
cli
lret
test
lods
cmp
add
dec
and
pop
gs
leave
mov
and
pusha
add
dec
sar
nop
outsl
sbb
mov
or
sbb
dec
mov
push
push
sbb
mov
add
or
jbe
jg
loope
or
leave
lret
pop
add
into
lahf
mov
insl
flds
idivl
push
int
sub
push
neg
push
sbb
mov
scas
lods
ret
pusha
add
add
mov
mov
lds
push
add
and
xor
add
fbstp
out
mov
push
xor
sub
ja
inc
mov
repnz
ljmp
fiadds
xchg
pmuludq
xchg
xchg
adcl
ja
leave
lods
sub
cld
sub
lret
pop
push
jnp
sbb
lock
lds
xor
leave
pop
mov
lahf
fcoml
and
lods
fidivs
xchg
dec
ds
or
add
fisubrl
popa
and
insl
xchg
mov
ror
iretw
xchg
int
sbb
addb
jne
xchg
pop
lds
repz
or
addr16
movsl
gs
or
lahf
mov
cmpsl
mov
push
stos
adc
add
sahf
ret
enter
sub
rcr
jo
add
sub
mov
push
pop
sbb
dec
mov
mov
or
leave
dec
and
scas
inc
jno
cs
stos
add
cmp
data16
cmpsb
movsl
sbb
mov
in
xchg
cmp
loopne
jo
stos
push
mov
add
addb
xor
into
dec
inc
ds
pop
inc
add
rolb
and
fbstp
loopne
add
sti
addr16
xchg
dec
pop
mov
jle
sbb
jno
jp
pushf
pop
cwtl
mov
in
jge
mov
push
jnp
xor
and
mov
dec
addr16
stos
stc
sbb
pop
gs
add
scas
jge
out
xchg
mov
or
rcll
bound
aad
jl
jecxz
sub
add
add
cmp
cmp
loop
out
dec
outsb
ss
jp
nop
xchg
cmpsl
les
dec
cwtl
sbb
les
sub
cmpsb
fnsave
sbb
pushf
xlat
jno
mov
ret
dec
scas
cmp
jge
dec
and
sti
mov
inc
sub
xlat
ds
addr16
adc
sbb
cmp
test
lcall
das
dec
sub
enter
mov
mov
repnz
fs
jae
jo
inc
add
jecxz
clc
mov
test
dec
push
add
jb
jno
xchg
pop
lahf
idiv
dec
jo
xor
mov
push
mov
pop
cld
mov
push
and
or
add
scas
addr16
xchg
dec
icebp
adc
xchg
sbb
test
push
stos
out
insl
pop
mov
icebp
mov
stos
mov
cld
aas
fwait
xlat
or
cmc
testl
ljmp
or
add
or
lock
xor
rolb
add
add
dec
pop
aam
add
xor
mov
bound
in
in
insl
loop
push
div
cmpsl
cmp
jno
rolb
xchg
push
pop
sbb
mov
xchg
jge
ljmp
call
xchg
xchg
fs
or
mov
jl
lods
std
fst
cmp
das
inc
lods
shll
jne
or
mov
lahf
cmp
jne
pop
xchg
xchg
inc
add
fs
or
add
cmp
inc
lea
add
imul
gs
insl
divl
and
push
jnp
arpl
movsb
dec
std
pop
cmp
ss
push
int3
hlt
jg
jne
add
inc
add
push
pushf
mov
jmp
add
test
mov
jno
into
sti
imul
mov
inc
mov
add
push
pushf
pop
ret
pop
inc
mov
or
xchg
mov
mov
add
and
pop
loope
cmp
fldenv
movsb
jg
addb
es
or
mov
dec
push
mov
push
and
mov
jg
jge
adc
lods
xchg
cs
add
movb
cmpsl
jecxz
xor
scas
test
jnp
fistpl
add
mov
mov
ret
sbb
ds
xchg
fwait
pop
sbb
add
jle
add
inc
add
lock
ffree
add
dec
and
lret
adc
outsb
xchg
add
cmp
add
mov
pop
jns
insl
lods
popa
push
add
mov
mov
sub
mov
mov
mov
cld
push
xor
push
out
loop
add
mov
inc
xor
inc
add
lcall
gs
loopne
push
rolb
mov
in
xor
mov
dec
pop
fsubp
sub
add
mov
add
sbb
add
xchg
mov
lea
out
mov
scas
int
add
imul
shll
mov
cwtl
mov
fsubp
dec
mov
ficoml
rorb
loopne
in
cmp
ds
cmp
gs
pop
xor
adc
add
dec
bound
jmp
sub
add
jl
add
filds
pop
lret
fistpll
dec
mov
xchg
mov
mov
sbb
xchg
mov
or
add
and
into
les
lcall
and
add
mov
decl
jnp
mull
test
idivl
add
add
repnz
into
pop
xor
lds
lret
mov
add
add
insl
add
inc
add
popa
dec
addr16
cmpsb
mov
or
add
inc
add
dec
dec
xchg
subl
stos
cmpsb
jno
inc
add
aam
stos
nop
sbb
inc
add
add
xor
sbbl
or
mov
pushf
sub
jb
cmpsl
aad
and
xchg
jo
inc
sub
das
push
push
pop
lods
js
inc
pop
or
data16
cmp
xchg
cmp
lds
and
lods
xchg
insl
or
cmp
pop
mov
clc
cmc
dec
push
testb
mov
mov
xor
leave
stc
dec
imulb
add
add
jbe
push
and
enter
gs
mov
mov
addb
jmp
pop
xchg
adc
test
add
push
sbb
or
mov
ljmp
movsl
lods
inc
add
push
jne
lea
std
cli
mov
lods
or
jbe
fbld
aaa
push
sbbl
in
add
jecxz
adc
add
andl
addb
dec
mov
sbb
paddsw
add
inc
inc
add
add
add
mov
lret
in
pop
sub
out
add
mov
add
pop
adc
arpl
icebp
xchg
aam
lea
add
imul
cli
stos
mov
je
enter
xchg
icebp
mov
rcll
mov
flds
and
stc
lret
mov
test
sub
cmp
pop
test
push
outsl
jmp
xor
out
imulb
repz
mov
xor
loopne
fcomp
pop
cmpsl
outsb
mov
repnz
jl
mov
movsb
or
cmp
pop
nop
test
dec
mov
mov
arpl
aaa
stos
inc
mov
js
lods
insl
or
add
out
fldl
mov
mov
movl
jmp
outsb
in
lds
and
add
add
scas
jmp
dec
mov
std
jge
stos
mov
pusha
add
imul
fnstsw
push
lret
inc
mov
repnz
jo
fmull
or
mov
sti
lcall
dec
dec
rolb
sub
enter
pop
xchg
outsl
or
mov
xchg
sub
test
add
fistps
inc
jae
or
mov
mov
cmp
es
adc
add
cmp
pushf
jmp
lret
pop
and
push
push
int
movl
mov
push
andl
aaa
mov
jl
mov
sub
adc
cmp
mov
adc
decb
pop
dec
mov
inc
add
lods
imul
or
pop
popf
xor
add
adc
mov
mov
mov
xchg
fsubrs
imul
mov
dec
or
call
add
loope
mov
mov
rolb
mov
xor
add
cmpsl
add
aam
fmul
nop
pop
shll
aas
testb
insb
stos
push
or
add
mov
mov
popf
add
sub
sub
out
lock
lahf
adc
mov
jbe
pop
mov
cwtl
xor
adc
negb
and
jne
or
data16
lret
enter
mov
mov
cmp
div
mov
xor
inc
out
in
rolb
mov
xchg
lcall
push
cld
mov
insb
fs
out
xchg
fimull
decb
aam
fstps
sub
and
ret
mov
inc
stos
lods
and
and
inc
hlt
ret
cmp
cltd
loop
roll
jmp
mov
push
add
cli
aad
add
add
ds
add
or
or
fists
addb
dec
out
xor
fistl
cmp
add
cs
enter
or
sbb
xchg
or
add
cmc
sbb
mov
test
daa
dec
lret
pop
dec
repnz
fcoms
push
stc
cmpsl
push
sbb
cli
cltd
adc
inc
jb
sub
pusha
add
mov
sub
xchg
pop
fnsave
jp
dec
int3
jnp
sbb
bound
es
adc
lock
jne
jg
dec
rolb
je
jbe
mov
test
ds
lock
fcompl
call
dec
ja
ds
stos
cmpsl
mov
test
test
aaa
push
cmp
push
xor
mov
sub
test
cli
ja
pushf
data16
sub
sti
xchg
movq
addb
add
ljmp
add
arpl
add
stos
lret
or
pop
push
mov
int
and
pop
mov
inc
add
dec
xchg
inc
add
and
imul
idivl
movsl
loopne
cmp
test
fiadds
jmp
cmp
xor
mov
stos
sahf
lock
sbb
xchg
cmp
test
mov
int
push
add
scas
stos
mov
push
pop
ror
mov
bound
insb
popa
imul
lret
adc
pop
jmp
xchg
data16
lock
inc
add
std
loopne
into
cltd
inc
jne
enter
dec
out
jne
pop
sahf
mov
aad
pop
in
cmovs
push
and
push
jno
mov
inc
add
add
cmp
sti
scas
out
imul
or
and
mov
or
dec
movsl
jp
sub
add
mov
dec
cmp
dec
addl
and
into
xchg
push
cmp
add
xor
xchg
xchg
push
mov
sbb
fbld
inc
push
cmp
xor
sub
add
jnp
jno
cmp
shll
cmp
jbe
sub
mov
arpl
xor
addb
mov
fnstcw
nop
xchg
push
jb
pop
out
push
push
mov
sub
mov
push
push
add
jne
bound
add
jno
cmp
aaa
mov
xor
in
and
ret
jb
xor
xor
sub
add
aas
pop
stos
mov
mov
sbb
ds
sbb
out
cmp
mov
and
insl
jbe
push
lods
inc
xor
sbb
add
daa
ja
stc
mov
enter
lret
inc
ss
push
idiv
lock
cltd
mov
mov
fsts
jno
dec
mov
mov
or
pop
inc
add
pop
pop
aaa
js
mov
sub
mov
in
sub
push
sahf
cmpsb
jle
add
mov
jecxz
iret
into
aam
mov
ret
lret
adc
add
out
sub
rolb
ret
cmp
cs
jmp
cld
mov
jbe
je
lods
aam
daa
cmp
fidivl
and
and
dec
xlat
cmc
test
push
pop
movsb
xchg
inc
pop
mov
add
call
push
aas
xorl
xor
test
outsl
in
into
bound
jge
clc
out
push
outsl
jne
loope
cld
cmp
pop
btc
addb
pop
mov
pop
or
dec
xor
aaa
iret
out
fistpll
lret
pop
dec
fs
clc
lds
mov
sbb
out
imul
loop
jns
mov
mov
cmp
dec
mov
mov
mov
cmpl
mov
add
andl
cmp
dec
ss
mov
or
je
js
shlb
test
xchg
in
add
jnp
cmp
pusha
add
stos
out
lea
dec
sbb
jge
adc
mulb
inc
add
les
jb
mov
and
gs
push
jo
fwait
and
mov
cld
and
das
popf
cmp
add
and
loope
js
mov
and
adc
jne
aad
inc
rcrb
pop
mov
lock
sahf
ds
leave
add
xlat
or
mov
inc
enter
mov
je
jl
cs
repnz
fmuls
add
dec
sti
pop
dec
mov
jo
dec
mov
adc
mov
sahf
outsb
jmp
sub
add
sub
pop
shrb
pop
cmp
adcl
add
add
mov
aam
idivb
idiv
daa
pop
data16
idivb
mov
or
pop
roll
test
add
mov
sbb
adc
mov
das
add
pop
lcall
mov
enter
add
mov
add
add
add
insb
cmpsb
int
sbb
mov
in
movaps
push
filds
call
add
push
jg
outsl
int
pop
xor
add
push
leave
mov
push
loopne
aad
xchg
xchg
sub
inc
add
add
and
mov
cmp
add
movsb
xchg
rcll
bound
pop
sub
mov
jmp
add
shr
shlb
add
pop
mov
sub
jmp
or
fistl
clc
add
pop
mov
mov
add
cmc
gs
lods
dec
cmc
pop
call
insb
mov
fldcw
repz
outsl
xor
cmp
xlat
inc
mov
out
mov
cltd
test
rcr
jne
pop
inc
add
loop
mov
mov
or
sbb
daa
sbb
xchg
pop
xchg
in
pop
fbld
cmove
jns
test
mov
in
mov
mov
rolb
cltd
jl
pop
xor
negl
sbb
aam
js
or
sbb
push
aas
stos
jnp,pn
and
xchg
adc
nop
test
loope
mov
rcrl
mov
adc
sub
arpl
mov
enter
jge
dec
push
mov
mov
dec
shr
add
inc
xorl
jae
cmp
xchg
repz
mov
icebp
and
out
sub
mov
imul
test
add
inc
add
cmp
mov
out
push
int
fs
or
movsl
rcrl
push
add
out
push
mov
or
sub
and
push
xor
push
add
and
dec
call
inc
add
jecxz
repz
shl
add
std
sub
xchg
dec
jg
shlb
pushf
cmp
or
incb
mov
xchg
ret
mov
data16
mov
add
ja
jns
mov
loope
xchg
fwait
and
add
fildll
xchg
sbb
add
sub
xor
fsubs
add
popf
inc
add
and
sbb
lret
add
add
add
out
cli
gs
mov
jecxz
ja
and
adc
js
add
in
adc
pop
lods
inc
leave
jmp
lret
add
adc
lea
mov
mov
push
ss
sbb
mov
jle
mov
add
sti
insl
movsb
push
cwtl
mov
xor
add
lahf
nop
js
cmp
nop
xchg
jl
xchg
lods
xor
mov
inc
add
aad
xchg
mov
jnp
out
jo
daa
or
lods
sub
subl
xor
sub
in
sbb
cmp
lret
fldenv
add
add
scas
leave
lret
addr16
shlb
ret
push
xor
add
ficoml
hlt
test
dec
push
inc
xor
adc
test
imul
add
lahf
and
rolb
das
nopl
fs
xchg
sbb
add
xchg
loope
and
mov
dec
jb
mov
test
and
mov
add
and
call
cli
aad
and
jnp
inc
add
test
sbb
mov
or
rcll
les
mov
adc
adc
mov
fmuls
jbe
data16
cmc
lcall
add
sti
icebp
test
cli
lret
cwtl
mov
shlb
add
mov
pop
mov
lahf
lock
add
add
and
jno
add
movb
pop
cmpl
add
enter
jecxz
es
repz
ss
add
dec
jo
sti
inc
hlt
pop
mov
xor
xchg
fldl
lret
bound
push
ffree
add
es
or
bound
sahf
push
mov
add
mov
adc
pushf
or
cmp
adc
mov
sub
pop
and
mov
adc
test
adc
outsl
push
push
pop
xchg
push
ljmp
scas
je
addl
add
jl
push
cmpsl
pop
movb
jecxz
loopne
or
xor
cs
mov
jns
push
je
mov
pop
dec
lret
add
add
adc
jge
mov
inc
sbb
push
lods
aaa
dec
scas
push
and
jl
add
pop
rcll
and
inc
add
cmpsb
or
es
sub
addb
fdivrl
pop
adc
add
mov
sahf
loopne
jp
sahf
add
pop
or
sub
mov
daa
daa
rolb
movsb
fidivs
leave
mov
nop
or
out
rcll
add
dec
arpl
inc
add
add
push
xor
xchg
xor
mov
mov
icebp
stos
sbb
lret
and
ret
lcall
xor
add
pushf
pusha
add
add
test
push
add
mov
dec
mov
push
fistl
scas
mov
fs
jmp
outsl
repz
repnz
shrb
data16
add
add
idiv
adc
xor
fiaddl
mov
je
adc
add
xor
addb
pop
fimull
and
xchg
sahf
fidivl
add
or
dec
mov
fiaddl
std
addr16
add
fisubs
xlat
xor
push
stc
jnp
jno
scas
fcompl
or
jno
xor
int
pop
push
fdivr
ret
and
jl
jle
sub
xchg
cmp
mov
iret
into
xor
sub
mov
inc
add
lahf
jbe
mov
cmp
in
and
in
iret
inc
scas
push
push
jne
and
stc
add
das
xor
cs
xchg
push
lret
popf
push
das
loopne
jb
or
scas
notl
add
push
lods
mov
fildll
cli
jl
lods
adc
cmpsb
jae
add
sub
incb
add
lock
in
insl
xchg
test
mov
push
add
fs
nop
cld
or
adc
mov
cmp
pop
outsl
adc
lock
add
fwait
scas
in
je
ja
aam
add
add
cmp
in
pop
or
add
repnz
xlat
aam
ret
into
jne
sub
xor
mov
push
loop
je
icebp
mov
ss
sbb
add
pop
and
movb
pop
add
repnz
jo
mov
pop
out
jg
jae
in
rolb
mov
jbe
pop
shlb
addb
cmpsl
push
pop
or
inc
add
repz
pop
rcll
loopne
pop
fmulp
push
ret
ds
xor
daa
cmp
add
fldenv
repz
movsb
mov
xchg
mov
gs
add
xchg
addl
lods
fwait
pop
jle
jg
loope
pop
sbb
jg
call
push
call
and
add
jbe
ret
adc
pop
push
stc
mov
or
and
jmp
or
iret
dec
imul
add
daa
rolb
shrl
add
imul
fwait
and
xlat
mov
clc
and
nop
faddl
hlt
lret
addr16
rcrl
dec
mov
sbb
arpl
xchg
xlat
outsl
jp
xor
add
inc
add
mov
sub
push
add
jnp
mov
sub
mov
push
out
mov
lret
push
mov
xor
or
inc
add
sbb
add
mov
pop
push
imul
arpl
imul
mov
outsb
xchg
mov
hlt
push
sbb
pop
insb
popf
inc
add
std
xor
stc
inc
fistpl
add
dec
and
push
mov
leave
adc
dec
or
jmp
cmp
add
cmc
xchg
fimull
aas
lock
stos
jb
cmp
add
shr
mov
rolb
stos
rcrl
cmp
add
add
dec
lret
inc
add
je
arpl
cwtl
fisubs
and
addb
fidivl
mov
and
fdivs
inc
jp
ja
stos
pushf
jno
lods
jecxz
repz
pop
fidivl
ljmp
pop
addb
pop
aaa
imul
scas
sbb
aaa
rclb
popf
ret
xchg
adc
cld
movsb
xchg
sub
add
inc
add
nop
inc
loop
mov
xor
dec
call
xchg
jnp
mov
mov
hlt
mulb
cmp
rol
add
add
out
loop
sub
jp
cmp
add
push
lock
loopne,pn
xchg
inc
add
mov
and
sbb
add
ja
out
xchg
iret
rorb
out
push
add
xor
ficompl
test
dec
cmpsb
test
sub
ret
inc
add
xchg
jge
jmp
frstor
xchg
pop
mov
add
rorb
lods
lock
push
or
mov
insb
outsl
sbb
or
mov
add
scas
inc
pop
outsb
mov
shrb
push
add
add
scas
cmp
cmp
js
push
in
mov
fwait
xchg
gs
pop
imul
add
add
and
sub
mov
js
sti
js
inc
add
add
enter
pop
lods
cltd
adc
daa
cld
rolb
add
jb
stos
lcall
cmp
pop
adc
testb
insl
cmp
int3
jp
bnd
jmp
popa
pop
xor
push
sbb
bound
fs
add
imul
rclb
mov
movsl
mov
push
dec
cmp
add
and
sub
lahf
xchg
mov
sbb
cmp
scas
mov
rolb
mov
push
adc
jne
jle
sub
ds
fst
sbb
sbb
mov
cmp
mov
ss
mov
cs
scas
aaa
mov
inc
popa
out
js
add
sbb
push
aas
enter
ret
add
inc
push
pop
aam
push
negb
add
lcall
adc
xlat
dec
pop
jae
pop
aaa
cmp
mov
add
adc
lret
test
and
iret
cmp
jp
inc
and
shl
popf
pop
push
lcall
in
xor
sub
add
mov
jg
icebp
js
loopne
push
je
test
js
mov
cmp
int3
in
mov
ss
outsl
iret
mov
dec
sbb
cmp
stos
mov
or
nop
call
or
movsl
fsubrs
sbb
cmpsl
mov
inc
jbe
jge
call
lcall
cmpsb
xlat
in
jle
add
mov
bound
insl
adc
cmp
xor
add
mov
inc
add
repnz
dec
inc
add
cmc
and
cmp
push
sub
inc
sbb
call
outsl
scas
dec
or
movb
pop
mov
clc
pop
or
push
mov
xchg
je
xor
add
and
mov
jo
fsubs
xchg
hlt
sahf
getsec
lods
negb
mov
fxch
fwait
rolb
rclb
or
movsl
sub
repnz
xchg
daa
aad
lock
test
int
ljmp
sbb
sbb
adc
add
pop
shrb
add
ret
dec
jmp
pop
jp
inc
add
insb
jne
lods
test
push
mov
add
add
ss
stos
movsl
movsb
jge
in
lcall
add
mov
xchg
sub
jmp
arpl
addl
jge
fiadds
add
adc
hlt
popf
hlt
icebp
bound
fstpl
stos
test
sub
add
cmc
xchg
sbb
sbb
cwtl
sti
les
je
jns
movsl
ljmp
shll
xchg
pushf
add
mov
in
rcrb
into
in
in
fs
sbb
add
add
mov
stc
jo
gs
xchg
mov
or
daa
out
push
ret
cmp
sbb
loop
add
jbe
add
mov
xchg
cltd
out
pop
js
loopne
imul
js
gs
pinsrw
roll
rorb
adc
push
pop
jbe
and
jae
adc
outsb
lock
rcl
mov
dec
adc
sub
xchg
push
add
stos
jo
push
adc
mov
lcall
xor
pop
lahf
scas
push
loop
daa
js
cld
jmp
mov
mov
pop
jb
insl
je
add
in
mov
jecxz
xchg
stos
push
loope
push
sbb
seto
pop
sbb
xchg
mov
or
xchg
out
mov
push
inc
movsb
push
inc
adc
mov
add
mov
cmp
sbb
jbe
jae
pop
cmp
loop
ss
add
mov
iret
or
jns
jno
mov
jmp
leave
cmpsb
rorl
push
mov
inc
add
rdpmc
loop
mov
cmp
mov
mov
out
lret
pushf
mov
xor
ja
xor
outsl
fbld
mov
pop
cld
jmp
je
add
sub
and
mov
push
mov
mov
xlat
into
push
jne
sbb
pop
xor
or
mov
cli
sbb
xchg
cmp
int3
jne
stc
or
rclb
xchg
aad
dec
mov
bound
pop
fistpll
push
mov
and
addb
mov
dec
fwait
mov
mov
push
test
cwtl
inc
or
clc
rcll
test
pop
xchg
lret
iret
insl
push
xchg
xchg
add
insl
movsl
insb
iret
popa
adc
sarb
push
xchg
cmpsb
xor
mov
dec
scas
pop
leave
inc
xor
xchg
xor
negl
outsb
push
js
mov
rol
add
inc
add
or
fbld
push
sahf
jbe
ds
fsubs
rcll
filds
test
arpl
and
popa
outsl
ficomps
mov
js
cltd
jge
pushf
pop
addb
add
pop
sahf
jge
push
lea
loop
imul
out
out
mov
pop
loope,pt
outsb
testl
test
mov
sbb
ret
outsb
mov
insl
stc
mov
adc
jl
fwait
out
bound
cmp
pop
fisubrs
sbb
das
dec
popf
je
sub
int3
mov
ficompl
mov
jge
les
dec
add
imul
roll
jbe
scas
add
mov
fwait
push
addb
jnp
push
bound
rcr
test
cld
or
and
insl
int3
fwait
bound
cwtl
popa
mov
leave
in
or
xchg
ficomps
cmp
addr16
mov
add
mov
fsubp
aad
pop
inc
add
pop
sub
jne
mov
clc
int3
outsl
pop
lret
pop
add
cwtl
fsubl
jne
lods
adc
enter
push
arpl
loop
aam
mov
jbe
clc
test
std
decb
inc
dec
mov
mov
add
jl
popf
aam
add
mov
adcl
push
outsl
sbb
js
outsb
xor
add
dec
in
iret
and
cmp
testl
out
test
arpl
movb
ss
dec
imull
popa
xchg
andps
adcl
sbb
xor
or
jno
fstps
push
lret
xchg
fxch
push
lock
shl
mov
jno
ljmp
scas
js
and
fwait
mov
mul
push
out
jne
daa
mov
and
xchg
mov
xchg
adc
lods
xchg
mov
popa
jne
add
mov
mov
inc
add
mov
out
add
pop
adc
mov
sti
fsubl
add
or
add
outsb
mov
add
pop
stos
imul
and
xlat
xchg
inc
add
pop
addr16
xor
jp
int
jne
add
mov
in
mov
lods
lds
lret
dec
ss
xchg
or
outsb
xchg
mov
iret
adc
xchg
jae
out
test
mov
inc
add
adc
mov
out
adc
icebp
addb
and
cwtl
inc
add
dec
cli
jnp
xor
fildl
or
dec
push
push
sbb
push
jnp
aas
inc
add
add
add
es
repz
sbb
jbe
out
adc
xchg
and
mov
and
addr16
in
lcall
in
inc
add
jno
xchg
mov
movsl
jge
xchg
or
out
xchg
push
mov
inc
add
scas
add
xchg
nop
mov
loope
inc
lcall
sti
xlat
xchg
fwait
pop
movb
stc
mov
sahf
fistps
aam
mov
jl
mov
push
inc
add
add
sbb
loope
add
xor
add
fsubs
aam
mov
mov
mov
jle
and
dec
test
cli
insb
scas
xor
aaa
cli
inc
inc
add
in
dec
inc
fisubrl
sub
add
mov
mov
out
data16
or
adc
jbe
rorb
jle
xchg
lcall
shll
fsubs
mov
rorl
dec
repz
ficompl
movsl
lods
insb
dec
add
sub
pusha
add
adc
push
sbb
sarl
cmp
jle
outsl
fisttpl
rclb
mov
ljmp
in
add
add
mov
jne
mov
adc
jle
xchg
inc
push
mov
inc
add
pushf
hlt
scas
movsb
ja
test
sub
mov
add
lcall
mov
xor
add
jge
and
add
xchg
xchg
or
enter
jno
sbb
dec
mov
repnz
test
dec
stos
dec
stos
inc
add
aaa
ds
add
add
and
add
test
adc
addb
mov
cmp
xchg
ds
inc
into
and
adc
cmp
or
aaa
ret
repnz
repnz
mov
loop
ljmp
add
adc
insb
add
aad
mov
and
jge
pop
call
ja
pushf
or
fcoms
mov
adc
ss
add
cmpsb
and
aam
jb
pop
loopne
scas
adc
fcmovne
repz
xlat
jnp
rcl
xlat
adc
aad
call
xchg
lea
mov
sub
mov
inc
cli
jecxz
sub
nop
inc
xor
xchg
pop
test
push
js
add
scas
mov
addb
pop
dec
arpl
sahf
push
rclb
ja
enter
push
lahf
loope
fisubrl
add
repnz
aaa
push
lret
jo
popf
pop
add
mov
sub
addr16
inc
jmp
sub
lods
and
and
mov
add
call
inc
add
xor
or
lea
std
cmpsl
jbe
addb
test
int3
sub
mov
pop
das
outsl
pushf
dec
stc
test
xchg
pop
sbb
mov
mov
shl
repz
jne
add
jbe
and
push
add
mov
cwtl
aas
push
mov
lret
aam
jle
cmp
add
mov
jnp
mov
or
push
add
aad
out
cwtl
fwait
les
inc
fsubl
pop
and
sbb
test
add
mov
fdivs
sbb
andl
push
imull
cltd
mov
loop
sbb
ss
push
nop
fisttpll
enter
jb
add
mov
sar
leave
mov
popa
dec
xchg
xor
incl
iret
aaa
inc
add
add
pop
icebp
add
decl
clc
jmp
mov
pop
addb
in
push
add
fldl
popf
lcall
out
mov
int3
push
add
int3
out
pop
inc
add
fisubs
cmp
addb
mov
dec
stc
sahf
xor
das
dec
mov
data16
mov
add
clc
int3
les
jns
fisttpll
in
adc
cmp
les
fs
cmp
add
cwtl
push
call
xor
insb
cmp
addb
addb
dec
push
movsb
mov
sbb
shl
repnz
out
cmpsb
sarb
adc
clc
insl
push
int
pop
aam
test
dec
dec
mov
cmp
int
shlb
or
xchg
push
cmpsl
cli
ja
int
pop
incb
add
aaa
rcr
cmp
addr16
mov
mov
mov
push
xchg
mov
hlt
dec
push
pusha
add
addb
subl
dec
mov
or
inc
scas
aam
pushf
fwait
jg
clc
pop
clc
push
mov
aas
js
inc
iret
inc
daa
push
std
jnp
pop
int3
repz
cmp
or
pop
call
add
push
shl
cmp
in
std
sub
sub
mov
dec
or
pusha
add
mov
xchg
pop
sub
out
fstpt
aaa
jl
pop
jae
mov
popa
inc
mov
rcrl
popa
adc
push
cld
pop
mov
incl
insb
outsl
test
mov
sahf
xor
into
fistl
stos
or
ret
adc
lret
pop
xor
adc
mov
in
jo
addb
push
sub
stc
lahf
cld
imul
bound
stos
sub
add
addb
outsb
sub
add
jle,pn
pop
subl
mov
cmpsb
add
pop
mov
lret
les
repnz
and
add
sub
pop
lcall
xorl
loopne
mov
push
out
icebp
movsb
jns
push
data16
mov
add
popf
sbb
fcoms
test
or
add
add
fdivr
mov
inc
enter
add
lret
in
dec
fs
push
in
jb
add
xchg
mov
ds
push
push
daa
pop
adc
cmpsl
inc
add
jno
dec
sbb
xchg
push
adc
sub
outsb
and
push
lea
out
push
push
inc
xlat
and
add
xchg
sahf
in
sbb
into
cmp
das
add
push
and
call
inc
add
jmp
xchg
inc
into
mov
in
popa
push
in
stc
xor
into
js
sub
in
addb
fisubl
and
pop
pushf
sbb
sub
sub
lret
out
mov
pop
pusha
add
push
popf
loope
test
bound
adc
lret
or
loop
mov
add
cld
push
fs
adc
lret
push
mov
mov
js
jle
mov
dec
mov
mov
add
mov
or
pop
dec
cmp
fs
movnti
shr
xor
movb
ja
add
fwait
jecxz
fstps
xor
mov
cmc
mov
ret
cmpsl
sbb
out
popa
nop
xchg
ja
pop
fwait
adc
adc
cmp
icebp
popf
mov
pop
push
add
psubq
xor
stos
mov
add
dec
jno
cmp
pop
bound
xchg
ret
popa
daa
or
inc
add
loopne
xlat
adc
jecxz
pop
movb
add
fisubrs
shll
je
add
dec
iret
notl
in
addr16
add
jmp
movb
mov
mov
add
xor
scas
iret
out
xchg
mov
inc
pop
jp
inc
cwtl
push
mov
outsb
jl
push
dec
sub
xor
add
or
into
push
scas
or
cld
or
or
adc
fldenv
adcl
xor
out
jnp
shll
andnps
mov
js
test
add
mov
xor
add
mov
sub
cmpsl
addb
dec
xor
adc
pop
jb
cmp
jp
add
cs
add
pop
push
mov
out
loop
or
sbb
sub
push
in
pusha
add
imul
add
dec
pop
bound
lcall
xor
xchg
inc
inc
add
sar
in
movsb
mov
dec
pop
sbb
rolb
xchg
adc
sbb
adc
jmp
and
sahf
mov
add
movb
push
sbb
pop
add
lods
inc
add
mov
xor
push
sti
and
les
push
addr16
outsl
jg
ret
imulb
in
imul
movsb
mov
scas
mov
lea
cmpsb
xor
daa
jno
add
cmpsb
iret
nop
mov
cmpsb
jmp
mov
sbb
sub
aam
out
xchg
jb,pn
adc
or
add
cwtl
outsl
mov
and
xchg
repnz
addr16
add
cltd
inc
xor
add
push
sahf
insb
push
inc
les
xor
add
test
in
lahf
mov
popa
inc
add
cli
outsb
addr16
cmpsb
pop
jl
ljmp
and
adc
mov
add
add
outsl
dec
mov
jae
or
mov
dec
adc
jbe
push
add
mov
xor
incb
test
cs
or
in
out
test
imulb
pop
sbb
add
jge
imul
push
aam
arpl
inc
jmp
ljmp
mov
lcall
xchg
cmp
out
daa
ja
cmc
fcoms
push
imul
jnp
sbb
cmp
sahf
add
add
xchg
inc
add
add
push
pop
pop
mov
add
mov
sbb
add
cmp
add
dec
lret
hlt
xor
add
dec
cmpsb
adc
ja
pop
cmp
ficoms
adc
sar
out
movsb
cltd
das
xchg
pop
or
xchg
xchg
divl
jns
sti
pop
lahf
rolb
sahf
in
add
lock
xchg
mov
jg
adc
fsubp
lds
leave
inc
repnz
pop
inc
mov
stc
push
fstps
int3
xor
fsubrp
xor
cmpsl
mov
add
mov
mov
push
mov
mov
and
outsl
in
add
jae
pop
adc
and
popf
xchg
cmp
cmp
jbe
mul
dec
ja
inc
add
xchg
push
push
jmp
std
loopne
test
add
xchg
imul
xchg
cmpsb
sarb
or
push
enter
dec
bound
sbb
nop
cltd
cwtl
test
dec
nop
rolb
push
fcoml
hlt
mov
mov
lcall
add
js
fimull
add
mov
push
mov
lahf
or
push
mov
adc
loope
fdivp
addr16
and
xor
outsl
aas
xlat
push
add
xor
cmpsb
insb
jmp
cld
lahf
inc
jl
inc
add
test
mov
mov
out
iret
mov
mov
mov
xchg
cmp
std
iret
jb
and
inc
pop
cmc
mov
sbb
add
add
add
lods
xchg
cmc
inc
fistpl
sbb
jp
adc
push
mov
int3
fstpt
les
sub
mov
std
mov
ret
shlb
push
xor
mov
sub
push
mov
ds
icebp
and
in
add
mov
add
fwait
adc
fwait
add
int
mov
fidivs
cmp
je
das
ret
mov
or
add
mov
clc
ret
dec
adc
mov
push
fldpi
push
shrb
shlb
add
sbb
lahf
ljmp
addb
xor
subl
inc
inc
aam
dec
adc
add
add
nop
lods
test
popf
push
xchg
dec
data16
adc
in
jno
das
sbb
lds
rolb
push
add
and
pop
sub
enter
xchg
lcall
add
ja
pop
mov
cltd
xor
pop
shlb
push
ficoms
inc
loop
and
out
sub
in
sbb
fmul
out
jle
xchg
scas
jl
xchg
call
add
mov
outsl
xchg
bound
js
xchg
or
add
adc
rolb
add
jecxz
dec
mov
cld
xor
mov
lret
mov
test
add
mov
and
xchg
jge
push
xor
mov
rolb
add
in
dec
sbb
push
fcmovbe
enter
stos
pop
sbb
fnstenv
test
jp
int3
inc
add
dec
mov
cmp
fists
stc
sbb
insb
call
ret
jo
addb
negb
sbb
addb
ds
xor
stos
test
insb
iret
xchg
roll
sub
jno
add
xor
idiv
xlat
test
in
jg
test
add
mov
cmp
inc
aad
cmp
dec
xchg
sti
jb
xchg
aas
or
insb
sbb
popa
inc
xchg
stos
mov
sub
cmp
into
pop
pop
jnp
pop
ja
push
push
cmp
jb
jbe
sub
xchg
mov
arpl
cmp
xor
pop
pusha
add
gs
mov
scas
and
adc
or
cmp
lahf
pop
mov
cmpsb
out
add
push
or
std
in
int3
push
dec
jle
jge
into
sub
je
sub
pusha
add
ljmp
push
mov
int3
outsb
mov
arpl
sub
add
adc
cmp
add
pop
inc
add
lahf
fcmove
sbb
frstor
ficoms
ljmp
jb
test
mulb
add
and
ja
dec
fists
mov
xchg
arpl
dec
xchg
scas
ficomps
pop
cmp
mov
xchg
iret
aam
out
push
mov
add
lock
add
dec
xor
popf
dec
jg
imul
movb
jecxz
cmp
xor
and
daa
dec
jo
fistpll
int3
xor
mov
addb
cmp
inc
dec
xor
and
insb
mov
jg
push
cld
test
xchg
pop
lea
addb
dec
fwait
xchg
ret
pop
jle
div
loopne
mov
outsl
and
fldcw
mov
mov
add
xchg
rcll
add
add
enter
cmp
mov
add
push
add
and
push
fldenv
push
daa
lock
adc
gs
rolb
xchg
push
andl
sti
pusha
add
add
fsubrp
mov
loop
fstpl
jmp
ja
xchg
pop
mov
ffreep
add
mov
test
fcompl
lods
mov
cmpsl
mov
test
and
sti
xchg
xchg
sbb
jo
add
and
pop
insb
mov
xor
insl
fucompp
push
sbb
movsb
push
je
mov
out
dec
cld
outsb
sbb
fcmovbe
ja
add
lret
out
addr16
add
jecxz
call
ret
ret
sbb
inc
sub
test
jnp
pop
nop
inc
ret
insl
fcomps
sub
leave
sbb
xchg
mul
push
in
fnstenv
loopne
test
mov
push
imul
lods
repz
fistpll
push
ss
sub
adc
pop
or
xor
and
out
dec
ror
cmpsl
and
cmp
inc
add
test
loop
test
test
dec
or
add
dec
in
popf
jae
in
and
scas
inc
out
jno
pop
mov
sahf
sti
rolb
xchg
lret
jecxz
insl
stos
test
add
add
xchg
xor
mov
test
mov
mov
mov
imull
add
cmp
jne
sub
in
dec
fisubs
pushf
jmp
add
add
cli
test
lock
daa
lcall
fstps
push
fdivr
fs
or
stc
bound
push
lcall
in
mov
stos
jle
ljmp
sbb
xchg
xchg
mov
movb
mov
arpl
mov
push
add
add
pop
out
test
add
xchg
dec
pushf
ja
ret
mov
iret
sarb
fistl
inc
cmp
lods
push
idivl
addb
sbb
inc
mov
dec
fsubs
fisttpl
xchg
lret
rol
sub
int3
aam
call
test
fsubl
mov
and
out
clc
subl
xor
cwtl
mov
add
push
mov
gs
push
mov
dec
and
imull
mov
or
adc
jmp
mov
ret
mov
jl
fcomps
arpl
jne
cmp
aad
in
dec
mov
add
ds
mov
jmp
mov
fwait
pop
ss
inc
jnp
pop
aad
pop
lods
jnp
dec
push
js
decb
js
sbb
fwait
outsb
pop
ss
or
inc
dec
jb
cmp
pop
add
jmp
cmp
int
jne
int
push
add
lds
push
fistl
repz
add
jb
repnz
mov
out
les
call
pop
inc
add
add
test
popf
pop
add
and
sub
add
jo
jmp
jge
sub
cmpsl
jbe
mov
ret
rolb
loop
popa
pop
mov
insl
je
jnp
pop
push
ja
shll
cwtl
xchg
cmp
lods
sahf
mov
pop
enter
imul
ljmp
xor
push
add
clc
jg
jl
pop
repnz
add
push
loop
stc
dec
lock
stc
cli
push
jp
mov
cs
add
cmp
add
jnp
inc
add
pop
cmp
jp
repnz
aaa
mov
add
mov
inc
add
add
xchg
pop
fmull
outsb
je
add
add
adc
addb
stos
inc
insb
push
dec
sub
das
lret
mov
add
and
and
dec
gs
rolb
pop
push
dec
out
cmp
jmp
add
jmp
add
cmpl
xor
mov
lods
movsb
int
incl
cs
ljmp
adc
out
popf
aaa
pop
dec
lds
mov
inc
add
push
jl
add
aad
add
xor
in
sbb
and
aad
cwtl
dec
push
std
fcmovnb
add
test
jmp
mov
pop
jmp
cmp
cwtl
rorb
aas
cmp
cltd
das
push
mov
and
int
xor
add
gs
pop
sbb
loopne
popf
xchg
mov
hlt
mov
push
arpl
xchg
ret
in
inc
dec
xchg
ror
dec
inc
mov
repnz
or
add
daa
mov
add
scas
jno
push
mov
adc
popa
sub
icebp
movsb
insl
cld
cmp
popa
inc
mov
or
add
add
add
mov
sub
push
cmp
ret
stos
push
outsl
in
ret
clc
out
repz
in
sbb
jl
sbb
scas
adc
lahf
sarb
lret
pushf
mov
nop
bound
out
xbegin
jbe
test
jmp
add
dec
icebp
loopne
rol
add
dec
movb
das
mov
add
jnp
fdivs
insb
lods
fistl
mov
int3
inc
add
in
ret
xor
dec
pop
push
gs
adc
fs
enter
adc
mov
das
call
fwait
loope
out
mov
sti
mov
inc
add
adc
sarb
scas
in
jmp
mov
pop
mov
loope
addr16
lret
xchg
call
pop
push
stos
mov
mov
lret
xchg
cmpsl
and
ljmp
out
push
mov
movb
lods
xor
sub
inc
add
inc
add
pop
push
mov
int
and
enter
push
inc
daa
dec
int
dec
lret
mov
xchg
sub
mov
pop
bound
add
fstl
rolb
xchg
mov
push
and
pop
adc
fsts
jo
add
add
add
lret
add
shl
add
ror
bound
mov
and
and
insl
rorl
push
push
add
aaa
aad
addb
add
xchg
push
add
adc
or
sbb
mov
add
les
mov
loopne
cmp
mov
add
fwait
mov
dec
jl
add
flds
test
daa
out
or
cmp
lods
sbb
xchg
mov
leave
pop
mov
push
fdivrp
dec
in
cmp
adc
mov
fdiv
xor
sub
shll
leave
sti
inc
adc
cmp
jmp
fsts
and
cmpsl
inc
fwait
maxps
or
dec
cmp
xchg
jae
add
jmp
mov
add
inc
mov
jnp
mov
or
or
mov
inc
add
pusha
add
adc
jo
pop
jl
mov
aad
sbb
inc
add
xchg
pusha
add
test
je
fsubl
sub
cmp
push
addb
add
or
push
or
cld
mov
iret
movsl
enter
rcll
andl
outsl
mov
cld
pop
add
aad
jb
cld
movsl
fisttps
push
adc
test
jno
orl
or
pop
out
sti
mov
and
fstpl
inc
add
mov
lea
xlat
xchg
out
les
mov
jbe
cmpsb
push
fcoml
outsl
sub
add
jl
std
gs
aad
mov
xor
add
jnp
jmp
add
and
les
pushf
in
je
mov
add
mov
repnz
daa
popl
sahf
insb
pop
rcr
mov
iret
xchg
loopne
mov
push
dec
mov
mov
sub
negb
int3
loope
lods
or
dec
test
inc
add
inc
add
test
add
or
xorl
lahf
test
addb
jae
rcr
cmpsb
repnz
mov
adc
lret
xchg
and
into
pop
mov
add
rclb
sub
lock
mov
movsb
fs
add
lods
je
xchg
div
pushf
mov
es
and
repnz
add
sbb
inc
add
add
jae
push
add
xchg
xchg
popf
addl
cli
aad
incl
mov
aad
add
psllw
into
mov
pop
adc
lcall
fistpl
dec
cmovae
pop
xchg
sbb
mov
adc
fdivrl
adc
cld
pop
mov
pop
jecxz
lret
xchg
xor
ja
stos
adc
sbb
stc
movsb
std
mov
adc
pop
pop
jno
mov
and
ss
lahf
aas
nop
and
jae
add
xchg
enter
and
sbb
or
add
dec
lret
repnz
iret
mov
add
jae
sbb
or
inc
cltd
mov
lahf
jmp
mov
push
inc
pop
xchg
iret
lret
add
repz
inc
mov
sub
cld
andl
jo
in
fwait
imul
add
add
adc
push
cmp
in
xor
js
mov
outsl
loope
iret
sub
add
and
fidivs
push
cmp
lock
das
dec
dec
and
addr16
ret
jg
add
push
or
xor
add
push
andl
inc
add
push
add
jb
add
popa
scas
insl
aad
jbe
dec
roll
add
jmp
test
jns
xchg
fxch
aas
rolb
push
cwtl
loop
in
fcompl
test
sbb
jp
add
int
outsl
in
sti
push
sbb
aaa
jnp
add
loop
loop
mov
jg
jbe
add
lcall
int3
lods
addb
subl
xor
sbb
cmp
add
cmpsl
inc
xor
add
arpl
mulb
ljmp
add
out
popa
test
lods
sub
mov
add
add
stc
mov
or
mov
pxor
stos
xor
mov
jl
aas
sub
cmc
sbb
xchg
dec
scas
hlt
mov
and
lret
in
popf
sbb
add
sbb
sub
enter
rcll
xor
push
sub
mov
xchg
fwait
mulb
inc
mov
ss
sbb
std
cmpsb
addb
add
insl
mov
mov
add
xchg
jne
es
fldenv
mov
xchg
clc
xchg
sbb
and
jb
in
cmpsb
dec
sbb
xchg
dec
or
dec
es
cltd
sub
aas
pusha
add
cmpsl
or
cld
out
and
mov
push
scas
incl
mov
mov
aaa
ss
push
xchg
clc
or
pavgb
add
add
data16
jns
arpl
xor
lahf
cli
or
loop
ja
mov
dec
jns
inc
xor
lcall
add
add
jb
addb
xchg
add
add
aad
jno
xor
add
add
and
sarl
aas
scas
outsl
test
cmp
mov
xchg
movsl
mov
jp
add
int3
arpl
add
add
addr16
fisttpll
popf
fldt
jmp
pop
mov
jl
leave
dec
mov
rolb
mov
xor
repz
shrl
dec
push
pop
fsubrs
mov
mov
add
test
iret
add
std
jo
jo
into
cmp
pop
lods
cmp
push
push
movsl
or
loopne
fldenv
imul
rolb
jmp
les
in
test
xor
negb
js
cld
pop
fnstcw
xor
popf
and
xchg
out
cs
data16
dec
mov
pop
mov
aaa
lea
sub
and
loopne
or
mov
mov
movaps
mov
mov
add
adc
loop
add
xor
xchg
ficoml
sti
push
mov
adc
aaa
xor
mov
lods
jp
push
mov
mov
mov
add
mov
sbb
ret
sbb
xchg
pop
les
or
sbb
jg
add
std
or
movb
jno
into
cmp
add
add
push
jp
pushf
pop
cli
mov
or
and
cmp
jge
add
inc
add
lret
mov
add
aas
test
mov
and
mov
cmp
and
add
fists
xor
sti
rcr
push
cld
scas
xor
mov
roll
stos
in
lds
imul
repz
add
scas
push
mov
mov
pop
add
and
adc
add
push
xchg
es
out
inc
add
aaa
dec
insb
and
or
cmc
adc
jo
push
int3
mov
shrl
or
add
inc
pop
push
lcall
add
shll
pusha
add
inc
xchg
stos
lret
jp
addr16
stos
inc
add
xor
mov
xchg
xlat
les
fimuls
dec
and
dec
bound
sub
mov
cwtl
mov
sti
jp
and
dec
jnp,pt
jmp
icebp
in
mul
out
popf
mov
xchg
out
xchg
fdivl
jb
pop
dec
inc
add
sbb
pop
sti
lock
aad
daa
xor
cmp
and
adc
std
add
sub
addb
movsl
je
xor
dec
fwait
gs
int3
xor
or
fcmove
dec
sti
dec
push
inc
sbb
cli
push
jle
jge
and
push
add
shrl
push
add
or
cltd
jo
add
add
and
xor
mov
jle
xchg
insb
ret
fcomi
sbb
mov
fbld
adc
add
out
inc
add
pop
pop
mov
push
shr
aas
mov
xchg
fs
mov
or
sti
xor
fmull
addb
int
cmp
sbb
flds
addb
addr16
cmp
push
sbb
jg
fldenv
or
das
in
popf
mov
fucomp
les
pslld
jne
movd
pop
push
insl
pop
pop
aam
add
dec
lahf
dec
jne
or
int
push
js
jns
test
sub
jl
ljmp
push
jo
dec
fistps
sub
cltd
add
mov
or
enter
lds
ljmp
rcrl
add
push
pop
pop
lds
out
jo
add
mov
jb
ret
mov
hlt
shrl
inc
add
xor
scas
mov
je
mov
lods
mov
insl
sahf
mov
inc
lea
std
mov
add
fmull
xor
push
out
pushf
mov
mov
sub
push
add
mov
int3
popa
xor
xor
testb
frstor
cs
dec
rcrl
mov
mov
std
push
aam
jp
sub
adcl
inc
cld
mov
icebp
mov
add
mov
jnp
hlt
repnz
into
rclb
lret
ljmp
cmp
inc
icebp
jae
mov
mov
lea
cltd
aaa
inc
ret
push
hlt
fsts
dec
add
sti
sbb
pop
iret
push
jbe
xchg
jne
aad
je
sarl
movsb
aam
cmp
or
imul
gs
ljmp
arpl
in
loop
sbb
inc
add
push
xlat
mov
rcll
test
pop
xor
sbb
and
mov
add
call
imul
cld
xor
ss
mov
scas
dec
out
jnp
fistpll
add
mov
das
mov
add
add
fstps
lock
pop
fcos
cmp
sub
add
shll
inc
add
cmpsl
jne
mov
fwait
dec
pop
in
sub
push
pusha
add
fwait
scas
mov
fldt
outsl
mov
push
jmp
imul
rol
pusha
add
lock
pop
outsl
fstps
add
mov
rcll
add
push
nop
sbb
mov
leave
aad
std
stos
mull
imul
sub
mov
xchg
fcomps
sbb
icebp
dec
insb
pushf
out
aad
sbbl
aam
sahf
test
sub
aam
out
popa
stos
jo
sti
imul
aam
mov
ljmp
fs
fs
or
lock
push
ljmp
jnp
fstpl
adc
cmpsl
inc
add
mov
pop
aad
repnz
stc
loop
das
ljmp
jecxz
mov
fldt
inc
add
icebp
or
scas
adc
push
das
sahf
int
rolb
sub
push
fwait
loope
gs
or
add
sahf
mov
xchg
or
std
loopne
test
xchg
pushf
pop
icebp
sub
mov
iret
jae
pop
jmp
mov
cmp
in
cmc
sub
stc
add
out
fisubrs
xchg
xchg
dec
sbb
int
loope
loop
ljmp
mov
cwtl
int
pop
cmp
add
inc
mov
es
outsl
out
or
push
add
jg,pn
pop
and
add
std
cmc
sub
add
xchg
jne
imul
push
insb
in
xlat
lock
xchg
bswap
dec
xor
mov
jne
shll
cmp
sbb
in
dec
push
pusha
add
add
loope
sbb
mov
mov
add
cwtl
adc
outsl
icebp
push
mov
lcall
mov
repnz
dec
gs
add
test
dec
lret
andl
xchg
mov
xchg
ss
push
xchg
lea
aas
lcall
sbb
add
insb
ret
cwtl
jg
add
out
lds
xor
test
jge
das
rorl
jp
pop
sahf
lret
testl
sub
add
jl
add
sub
or
jge
mov
in
call
cmpsl
les
jns
xor
mov
inc
add
mov
add
jge
lcall
and
and
lds
add
or
add
sub
sub
shlb
dec
ljmp
lds
insb
movsl
pop
lret
fcompl
add
mov
std
int
ljmp
fdivrs
mov
xchg
xchg
mov
test
cmpl
repnz
call
jae
repz
sbb
inc
add
fidivrl
loope
addb
pusha
add
leave
scas
out
data16
mov
leave
inc
ja
pusha
add
push
std
jae
stos
add
add
mov
add
push
daa
mov
adc
fidivl
push
fcmovu
or
cld
cwtl
fwait
lahf
pop
js
add
mov
add
xchg
mov
add
inc
add
dec
inc
add
ret
popa
xor
lcall
or
aad
lods
in
pop
push
add
icebp
arpl
sarb
fwait
and
cld
enter
dec
outsl
in
rcrl
inc
add
add
mov
mov
movsl
hlt
mov
sub
test
std
and
rolb
jb
movsb
out
cmp
mov
movsl
pop
jns
mov
jne
aam
out
pop
xchg
push
or
inc
cld
sub
loopne
imul
jle
daa
push
lock
mov
push
pop
inc
cwtl
push
adc
jmp
add
mov
mov
aam
outsl
jbe
sbb
jae
stos
out
inc
xchg
gs
adc
push
fcom
in
xlat
xor
xlat
inc
add
rolb
cwtl
inc
add
xchg
push
inc
or
add
or
imul
sbb
es
cmp
add
inc
cmp
mov
dec
cmc
xchg
xor
or
cmp
je
mov
cmc
adc
frstor
dec
mov
or
pop
xchg
dec
add
mov
pop
fs
pop
cltd
gs
and
fnsave
mov
lret
fisubrs
decb
mov
stc
movb
push
pop
adc
push
mov
pop
imul
sbb
into
sub
sbb
mov
add
mov
cmp
sarl
inc
and
push
add
movsb
dec
daa
push
add
xchg
sbb
fs
fcompl
mov
shr
lock
pop
cmp
addb
out
mov
jo
mov
faddl
xor
add
add
cmp
xor
test
scas
cmp
jo
jge
add
inc
add
mov
subl
add
ja
sbb
pop
in
jnp
in
ja
mov
xchg
pop
jl,pt
pop
outsl
fcomps
loopne
leave
lahf
fwait
nop
imull
fiadds
outsl
std
loop
test
xor
sahf
popf
cli
insl
jb
lsl
mov
push
cwtl
adc
add
add
push
mov
popf
test
mov
out
lds
mov
popf
in
mov
jno
cmpsb
int
add
or
sti
add
and
movsb
outsl
adc
pusha
add
add
lods
adc
push
and
sti
xor
imulb
or
stos
cmc
add
mov
sub
jns
and
cmp
and
jp
xchg
ret
cmp
xor
add
xchg
loopw
add
ret
leave
repnz
fwait
test
sub
inc
mov
xor
jbe
icebp
xor
add
mov
and
insl
ret
lahf
cwtl
jo
add
jmp
aam
add
push
or
movb
add
push
cmpl
add
add
or
mov
dec
outsb
mov
icebp
js
sbb
fs
add
push
and
call
lock
pop
dec
pop
dec
pop
push
out
inc
xchg
add
adc
int3
pop
lret
or
std
jnp
xor
testl
add
mov
out
fcoms
enter
push
mov
aam
mov
mov
cmp
data16
repnz
mov
add
cmp
add
add
jno
ja
jle
xchg
cmp
sub
and
adc
dec
sbb
das
xor
or
mov
aaa
push
push
mov
cmpsl
pop
les
pushl
psubsb
jg
push
ret
adc
rcrb
test
inc
add
sbb
pop
js
push
xor
scas
jg
add
add
sarl
jmp
add
sbb
cmc
pop
sub
cmc
rcr
mov
jg
jg
lret
mov
dec
shrl
imul
lds
dec
xchg
push
outsb
adc
decl
pop
and
pushf
mov
daa
movsl
pop
inc
es
jb
mov
scas
fistpl
and
pop
or
loopne
add
sbb
jae
imul
xor
pop
aas
gs
inc
xor
add
mov
out
add
push
add
mov
add
adc
les
leave
mov
xlat
test
inc
add
add
mov
mov
add
jmp
test
add
push
add
inc
dec
in
fstps
adcl
out
fwait
aas
cmp
cltd
test
lret
in
out
movb
jg
add
mov
incb
push
add
jae
lret
xor
or
fs
lret
xor
pop
lock
sti
out
pop
push
xchg
mov
add
lret
data16
mov
pop
test
loope
sub
es
mov
in
lods
push
outsl
outsl
and
mov
or
add
add
sub
or
dec
filds
sub
xor
cmp
mov
adc
fst
xor
or
fs
mov
mov
pop
pop
arpl
jle
psubb
add
scas
mulb
inc
add
fwait
mov
sub
cmpsb
push
iret
push
or
add
lahf
in
movsb
clc
xchg
lahf
imul
mov
add
jne
std
cmc
mov
fldl
lock
push
icebp
js
leave
cltd
cltd
cltd
std
aaa
pop
inc
add
in
mov
out
sub
push
lods
xor
hlt
mov
out
loope
jl
xchg
xchg
xchg
dec
mov
aam
sub
aaa
scas
add
add
popa
or
dec
ficoml
mov
dec
adc
add
cmp
add
lret
dec
loope
jnp
popf
push
mov
xchg
push
in
jo
xchg
sbb
pop
mov
and
out
and
sub
mov
inc
jge
mov
and
xor
fsubl
adc
xchg
cli
scas
mov
pop
push
xor
ja
pusha
add
ja
fsts
ret
xchg
data16
cmp
sub
xor
outsb
and
sarl
add
jae
fisttps
rol
iret
push
and
mov
iret
sbb
lds
stc
je
push
jmp
in
fisubl
mov
js
add
mov
add
loop
inc
lahf
mov
xchg
dec
sub
mov
xchg
xchg
cmp
fisttpl
pop
cmp
outsb
lret
cli
cmp
push
add
gs
test
imul
jp
pusha
add
jg
add
jp
adc
popa
cmp
jl
sub
mov
adc
xchg
add
fsubrp
test
dec
stc
pop
inc
add
addb
scas
repnz
negb
iret
imul
cmp
repnz
sahf
fdivl
pop
stos
jge
mov
inc
add
popf
mov
mov
outsb
sahf
je
jmp
test
arpl
inc
add
aas
addr16
outsb
imul
adc
je
mov
mov
cmp
mov
cmpsl
push
outsl
loopne
data16
mov
outsb
lods
out
sti
inc
sbb
std
push
xchg
push
add
sub
jle
adc
mov
dec
addb
addr16
mov
hlt
jo
out
out
cli
and
mov
ds
or
dec
adcl
push
jb
jg
mov
push
lahf
mov
data16
lock
test
mov
cmp
add
mov
loop
push
stos
xchg
xor
pshufw
rol
sti
clc
aam
int3
jae
repnz
cltd
aad
call
test
add
bound
xchg
mov
inc
adc
lret
mov
cs
add
loopne,pt
push
daa
pop
and
inc
add
mov
dec
pushf
mov
fstps
mov
xor
sahf
es
add
mov
or
sub
outsl
pop
push
and
adc
cli
xchg
insl
jne
aam
xchg
ret
push
sti
fldenv
andl
add
iret
jg
cs
push
add
dec
fbstp
hlt
cli
int
sbb
add
test
xchg
in
xor
mov
add
push
outsb
test
rol
add
cmp
pop
pop
loopne
aaa
call
mov
lcall
xchg
shl
call
ds
hlt
fcoml
addb
je
lods
pop
or
icebp
mov
add
sbb
xchg
fstpt
mov
push
rorl
fisubrs
pavgb
add
int
or
or
add
jae
jbe
aam
adc
addb
or
add
add
mov
xchg
mov
cld
js
mov
mov
add
iret
push
or
adc
mov
adcl
sbb
cmp
jo
and
addb
add
es
or
dec
xchg
pop
sub
jns
sbb
add
pop
dec
mov
mov
inc
add
pop
mov
xlat
mov
inc
add
pop
sahf
mov
mov
stos
enter
repnz
pop
push
dec
mov
rcrl
int
cmc
dec
lcall
xchg
cmc
mov
adc
adc
or
sarb
push
xchg
cmp
in
adc
mov
movaps
or
mov
xchg
xchg
mov
add
test
add
int3
icebp
adc
or
sbb
add
jecxz
push
add
xor
test
lods
xor
cld
jmp
adc
dec
aad
pop
or
inc
mov
sub
and
and
jge
cmc
pop
enter
clc
jnp
dec
arpl
mov
mov
or
ds
or
or
lds
mov
call
fidivrl
adc
fldt
test
push
enter
lods
mov
inc
dec
dec
outsl
xor
clc
in
movsb
xchg
fldpi
insl
mov
xchg
fiadds
push
icebp
push
dec
mov
add
fldl2t
rcl
popf
cs
add
jmp
mov
lcall
add
addb
mov
xchg
leave
xor
or
jg
dec
adc
lods
lahf
sbb
notl
add
or
add
sub
dec
aaa
inc
adc
inc
push
jb
pop
mov
imul
add
loope
jle
mov
jo
stc
iret
push
imul
push
xchg
hlt
in
leave
inc
add
lcall
jg
jo
add
mov
dec
fs
jle
insb
int3
ret
add
lret
jmp
cmpsb
iret
xchg
inc
add
add
add
jnp
push
lods
clc
push
cmpl
data16
sbb
cld
popa
xchg
mov
mov
aaa
fnstcw
add
into
neg
sbb
push
xchg
push
sub
into
scas
daa
xchg
jns
sbb
push
outsb
js
notl
xchg
imul
add
cmp
pop
mov
adc
enter
adcl
add
pop
mov
add
dec
imul
sti
popf
lret
lret
aas
xor
inc
imul
loope
xor
lahf
lret
mov
pusha
add
sbb
cmp
icebp
add
add
cli
cmp
push
cmp
mov
loop
xchg
xchg
push
insb
ljmp
shll
add
lock
insb
add
jg
cli
sub
icebp
mov
fldcw
adc
sub
xchg
jb
imul
addb
xchg
and
mov
dec
shll
inc
add
mov
push
aaa
mov
xor
mov
icebp
xor
loop
sbb
jecxz
cmp
divl
sub
jns
fistpll
xchg
icebp
neg
call
jp
iret
push
icebp
test
add
add
dec
inc
add
imul
lock
sub
push
movb
xchg
add
jae
inc
add
mov
leave
pop
mov
popa
push
popa
fsubrl
sbb
punpckhbw
and
cmp
mov
ja
cmp
lahf
dec
sub
into
xor
xchg
push
mov
sbb
dec
or
sub
bound
insb
mov
cltd
mov
xor
repnz
and
jl
add
sbb
add
add
mov
sub
xchg
sbb
add
add
mov
out
test
ja
mov
lock
push
and
int3
push
int
test
arpl
in
dec
jnp
mov
push
mov
inc
add
lret
jo
add
cmp
sub
pop
mov
mov
mov
aas
xor
add
jne
js
adc
aas
mov
xor
jecxz
into
mov
inc
in
jge
mov
fcoms
fimull
insl
fisubrs
mov
loopne
inc
dec
lret
inc
add
rol
push
and
es
push
or
mov
addb
ret
lds
jbe
in
fidivl
inc
add
dec
sub
pop
mov
add
stos
jbe
push
iret
pop
sub
xor
or
adc
jg
out
jae
jno
push
mulb
sub
or
test
add
lods
pop
jge
sbb
or
nop
shrl
cmpl
add
sub
push
repnz
dec
ffree
cltd
cmp
mov
mov
imul
mov
addb
inc
or
add
ljmp
sbb
add
pusha
add
inc
int
sahf
js
pop
mov
outsl
das
rcll
xchg
jecxz
add
xchg
out
mov
adc
xchg
jg
pop
xor
out
pop
outsb
pop
sub
dec
push
fdivl
nop
out
sub
or
std
xchg
lods
inc
add
add
push
sbb
jne
arpl
and
es
xlat
int3
rcll
push
std
jb
outsl
and
inc
bnd
pop
or
popa
or
and
das
addb
int
jns
xchg
lock
pop
add
repz
cmpsl
xchg
jl
ss
sub
aaa
jge
xchg
loopne
mov
dec
add
dec
xchg
clc
sarb
decb
pop
sbb
add
scas
sub
test
push
pusha
add
jmp
movsb
clc
movb
lret
lods
jb
push
xor
lret
and
stos
pusha
add
fildll
rcr
pop
or
cmp
scas
mov
fcompl
ja
cmc
aad
hlt
dec
lock
sbbl
adc
mov
iret
push
mov
dec
or
mov
fiadds
add
add
stos
mov
bound
dec
mov
fsubr
push
outsl
out
in
bsf
test
jmp
lock
add
jo,pt
scas
add
mov
into
js
add
test
mov
movb
scas
sub
cltd
mov
add
mov
jo
jae
fwait
div
push
mov
push
jne
add
int3
push
ss
add
daa
pop
push
xchg
xor
stos
and
fsqrt
cld
add
insb
jno
mov
adc
pop
fninit
push
in
out
fstl
push
push
add
jo
ret
aad
divl
dec
cld
lret
outsb
pusha
add
rorl
jmp
cmp
aam
add
xchg
ficoms
int
sub
in
insl
mov
add
and
cmp
inc
pop
out
xchg
dec
std
test
dec
mov
add
outsl
rcll
add
cltd
inc
add
mov
cld
aaa
jne
add
movb
rcll
add
mov
and
jbe
lret
inc
pop
in
add
addb
in
inc
jae
test
movb
lret
cmp
or
cwtl
or
test
push
enter
sbb
mov
mov
rcrl
sbb
push
adc
xor
repnz
outsb
ret
add
fwait
inc
jl
push
outsb
cmpsl
dec
cld
mov
cmpsb
imul
jle
xor
dec
ficompl
out
pop
dec
test
add
cmp
add
jb
lods
push
push
aad
enter
pop
bound
sti
xor
mov
cli
pop
pop
sbb
sahf
fcmovnbe
hlt
inc
add
lods
inc
push
nop
and
add
cwtl
nop
sbb
sub
adc
inc
add
out
sbb
add
fisubrl
add
inc
xchg
jl
push
adc
inc
fsubr
push
aaa
dec
lcall
gs
cmp
loope
jb
test
add
fnsave
fdivl
cli
jecxz
loop
cmp
insl
loopne
mov
jnp
add
jne
add
jge
mov
mov
sti
arpl
xlat
pop
push
sbb
dec
mull
pop
bnd
movsb
xchg
mov
push
in
mov
lea
int3
sti
