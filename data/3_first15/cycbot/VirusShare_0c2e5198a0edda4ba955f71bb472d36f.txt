dec
leave
add
int
subl
sub
insl
in
test
pop
sub
sub
outsb
or
iret
push
sub
inc
test
data16
movsb
movsb
or
push
mov
fs
in
ljmp
out
push
in
test
cs
cmpsl
and
and
dec
orl
and
inc
andb
bound
dec
dec
arpl
mov
or
add
mov
dec
out
lret
loop
mov
test
push
push
jmp
cpuid
add
dec
in
es
lea
sub
fs
jmp
subb
sub
call
inc
lret
or
inc
inc
out
insl
roll
lret
add
stos
out
test
cmpsb
outsl
daa
call
and
inc
and
call
inc
and
or
movsb
into
out
daa
inc
inc
loopne
dec
lods
inc
push
imul
leave
daa
xchg
dec
dec
lods
sub
add
movsl
dec
ret
or
pop
pop
mov
ljmp
xchg
fs
lods
add
insl
and
fs
dec
sub
stos
or
dec
mov
movsl
enter
xchg
and
loop
sub
and
imul
sub
and
xchg
push
orb
add
lods
inc
stos
movnti
add
add
inc
dec
mov
or
call
dec
sub
add
dec
insl
mov
lods
mov
popa
xchg
inc
gs
xchg
rol
mov
movsl
in
jmp
xchg
subl
sub
add
push
ror
es
jecxz
push
out
and
pop
andb
mov
daa
call
sub
popa
inc
inc
sub
mov
ud2
movsb
bound
cmpsb
orb
lea
mov
or
inc
stos
jmp
dec
add
mov
call
push
and
lods
and
out
movsl
pop
in
scas
and
dec
subb
lods
inc
cs
inc
enter
mov
loope
add
out
add
in
mov
das
leave
pop
and
inc
or
dec
lret
pusha
sub
dec
or
daa
lods
push
dec
cmpsb
xchg
loop
out
cs
dec
loop
test
and
out
and
sub
out
cmpsl
insb
inc
leave
push
add
cmpsl
leave
ret
mov
lret
insl
mov
or
inc
mov
in
bound
lods
lret
add
dec
subl
enter
add
jecxz
or
and
loop
add
das
ret
daa
inc
addl
add
cmpsb
movsb
dec
outsl
inc
pusha
and
cs
inc
dec
inc
mov
lret
sub
and
loope
int
loopne
rolb
shrl
int
cmpsb
jmp
sub
out
mov
lret
loope
pusha
mov
and
lds
orl
les
arpl
or
out
dec
xchg
test
out
stos
dec
and
and
xchg
dec
pop
or
add
outsl
shrb
mov
leave
or
mov
in
dec
ljmp
insb
xrstor
dec
mov
and
popa
dec
inc
out
out
movl
iret
mov
shlb
test
ret
pusha
sub
out
mov
dec
enter
dec
inc
pmulhuw
jmp
mov
out
out
lods
mov
and
dec
push
stos
push
sub
call
in
imul
or
mov
test
loopne
cmpsb
ret
cmpsb
test
iret
jmp
or
add
in
or
push
enter
push
test
dec
inc
dec
pcmpgtw
xchg
pop
test
das
loop
movl
add
es
dec
rol
and
mov
cmpsl
scas
sub
dec
movl
or
jecxz
fs
scas
jmp
test
push
lret
mov
or
out
push
leave
out
loop
or
dec
sub
mov
push
lret
inc
lods
pusha
pusha
xchg
movsb
data16
add
add
add
add
daa
shl
dec
gs
leave
stos
enter
sub
str
cmpsb
mov
inc
rolb
dec
outsl
outsl
dec
ret
roll
add
dec
or
or
insb
sub
gs
lret
iret
mov
and
bound
add
pusha
and
test
mov
inc
test
xchg
push
les
add
call
out
cmpsl
dec
xchg
inc
xchg
mov
scas
kaddb
push
enter
mov
pop
sub
mov
test
push
mov
insl
dec
movsl
and
sub
test
loope
mov
in
lods
stos
imul
rorb
inc
call
lods
lods
mov
and
mov
inc
mov
leave
mov
sub
stos
and
mov
cmpsl
gs
and
lds
or
cs
mov
mov
cmpsl
mov
arpl
mov
and
outsl
add
test
mov
inc
sub
mov
sub
or
into
in
or
sub
int
gs
enter
imul
mov
dec
mov
mov
in
lds
add
dec
cs
out
or
subb
push
inc
scas
inc
sub
daa
test
inc
add
inc
add
ror
daa
and
dec
or
test
test
outsb
jecxz
inc
sub
movsb
inc
sub
inc
xchg
movsb
daa
shr
es
daa
test
sub
mov
inc
mov
push
out
ret
pop
outsl
jecxz
les
mov
iret
loop
cmpsb
inc
iret
ret
mov
out
or
insl
jmp
popa
sub
es
xchg
sub
pop
loope
shl
leave
or
or
or
add
imul
lds
out
inc
out
subb
data16
or
test
jmp
and
gs
jmp
in
scas
inc
insl
outsl
addb
loop
in
test
ljmp
xchg
lret
and
and
push
add
sub
add
mov
scas
xchg
sub
test
mov
daa
in
sub
outsl
movb
pop
inc
movsb
add
cs
inc
scas
out
mov
mov
xchg
sub
or
les
out
dec
out
and
or
imul
mov
and
mov
sub
and
bound
or
loop
dec
or
xchg
and
sub
sub
imul
sub
outsb
mov
lret
pop
lods
mov
dec
movsl
mov
jle
push
das
cs
call
dec
test
lea
enter
insb
cs
mov
mov
add
mov
mov
orl
movsl
out
mov
das
sub
int3
add
jmp
push
ljmp
rolb
or
orb
ljmp
sub
lods
popa
mov
andb
or
test
addb
stos
inc
jmp
movsl
scas
into
loopne
add
inc
add
ljmp
lds
out
add
add
bound
dec
inc
in
dec
in
insb
test
cmovne
in
or
sub
add
mov
ret
or
imul
gs
into
das
push
or
subb
inc
lods
movsl
inc
movl
mov
push
test
insl
out
daa
outsl
movsl
out
sub
and
test
iret
add
dec
loopne
mov
insl
insb
outsl
in
stos
dec
loope
inc
outsl
in
movsl
loopne
in
jmp
int3
or
push
inc
xchg
ret
rorl
dec
out
scas
mov
test
dec
lea
pusha
mov
inc
dec
cmpsb
jmp
test
and
orl
les
dec
test
in
insl
sub
add
in
leave
pusha
cmpsb
mov
out
shrb
arpl
inc
cs
scas
ror
inc
iret
cmpsl
mov
outsl
lret
ret
imul
lret
mov
arpl
or
movsl
stos
enter
and
lea
es
xchg
lods
andl
bound
iret
fs
sub
mov
movsb
insb
jecxz
or
dec
in
or
shrd
sub
dec
add
dec
xchg
es
dec
stos
and
subb
loope
dec
scas
push
int3
daa
ljmp
loop
add
inc
subb
and
cs
subl
xchg
dec
mov
jecxz
in
inc
or
mov
mov
dec
ucomiss
pop
lods
mov
dec
and
imul
add
shrl
and
mov
or
push
insl
ljmp
int3
outsl
and
scas
add
lods
test
dec
jmp
add
in
addb
lret
or
popa
add
mov
mov
test
inc
lods
iret
add
and
dec
mov
sub
daa
pusha
insb
out
scas
subb
and
mov
leave
add
loopne
dec
jecxz
iret
ljmp
add
dec
test
pop
data16
or
xchg
inc
int
add
mov
mov
ret
or
rorb
andb
mov
loope
and
inc
rol
imul
jmp
les
leave
dec
scas
scas
and
jmp
shr
xchg
popl
lea
leave
out
pop
bound
lds
bound
mov
dec
mov
scas
mov
dec
and
inc
dec
mov
ret
movsb
and
xchg
lods
jg
push
scas
out
and
outsb
mov
pop
dec
dec
in
test
ret
and
and
mov
or
out
imul
scas
iret
fs
mov
gs
bound
inc
add
and
roll
iret
inc
outsl
into
in
sub
mov
sub
cmpsb
inc
orb
sub
mov
inc
cmpsl
loope
in
dec
and
inc
int3
in
stos
inc
pusha
dec
mov
or
dec
sub
ljmp
add
sub
ret
test
out
scas
out
mov
inc
pusha
mov
or
mov
ret
imul
test
sub
daa
lods
movsl
dec
popa
outsb
les
outsl
imul
pusha
dec
dec
out
in
out
es
jmp
sub
stos
mov
iret
or
les
data16
enter
xchg
imul
data16
inc
les
lds
add
movsb
or
in
out
lods
cmpsl
gs
lret
es
enter
ret
sub
xchg
or
inc
and
lret
and
out
or
scas
and
and
cs
out
cmpsb
and
push
lea
mov
out
cmpsl
mov
aam
mov
mov
into
test
int
mov
add
into
and
ds
lock
lods
lcall
cltd
dec
call
subb
pop
xchg
and
push
sti
mov
mov
pop
jne
fcompl
pop
mov
frstor
adc
fs
fnsave
push
pop
sub
rorb
xor
mov
xor
jbe
cmc
out
mov
xchg
shl
inc
ljmp
shll
push
adc
fldl
loopne
mov
loope
stos
mov
inc
arpl
sub
cmp
test
ficoms
sbb
mov
icebp
and
ret
xor
fs
clc
loop
les
ret
inc
enter
aam
xchg
mov
loopne
add
dec
popf
mov
aaa
push
jl
sti
lret
push
mov
daa
mov
outsb
dec
xor
and
out
xchg
add
arpl
or
sub
test
xchg
rolb
sbb
sbb
icebp
add
add
mov
and
or
lods
mov
inc
rclb
mov
jl
adc
dec
icebp
sub
jg
das
aas
dec
pop
ret
sub
movsb
ljmp
and
xchg
addb
test
mov
cli
movsl
xor
in
sbb
adc
aas
mov
pusha
jge
in
loopne
pop
imul
jl
shlb
adc
cmp
mov
pushf
aam
inc
xorb
in
aas
dec
push
mov
or
adc
add
xorb
cmp
cmpsl
subl
rcll
jbe
xchg
push
or
add
loopne
clc
mov
lahf
mov
jne
cmpsb
aam
pusha
and
inc
sti
xor
dec
push
sbb
rorb
lea
adc
push
in
loop
sbb
sub
xor
or
hlt
stos
int3
mov
mov
or
inc
loope
clc
daa
idivb
out
xor
push
jecxz
jmp
icebp
add
icebp
adc
inc
lret
adc
pushf
lock
sbb
cmp
insb
xor
enter
test
into
cs
pop
dec
xorl
cmp
push
outsl
iret
and
loope
mov
mov
subb
imul
push
xchg
aaa
rcrb
shl
fcmove
movsl
sub
ret
fldt
dec
adc
sti
push
cmpsl
ljmp
adc
test
or
pusha
dec
pop
popa
sub
je
je
sbb
insl
mov
mov
mov
push
sti
push
fsubp
inc
adc
loope
mov
pusha
pusha
out
rolb
mov
and
prefetchwt1
insb
rorl
pusha
and
mov
aaa
call
cmpsl
subl
adc
add
mov
daa
scas
sub
adcb
loopw
jb
jae
jp
dec
cmpsl
dec
xor
sbb
dec
js
xor
bound
ret
sbb
push
shl
mov
dec
fidivrl
loope
adcl
ror
fdivr
xchg
xor
mov
xor
fistpl
notb
fists
mov
clc
inc
jmp
mov
leave
mov
lds
push
and
arpl
sbb
in
rcrb
or
and
dec
adc
and
std
loopne
hlt
mov
push
mov
lods
pop
mov
dec
xor
xchg
fcompl
test
mov
dec
push
lret
inc
lock
jp
les
add
push
sub
ret
lcall
mov
je
fmul
xchg
sar
pop
dec
xchg
les
or
inc
shrb
lds
add
sahf
cmp
mov
fildl
or
push
and
and
inc
inc
std
scas
mov
or
iret
mov
insl
inc
xor
test
mov
xlat
cmpsl
fnstcw
imul
or
sub
mov
jno
scas
pop
jle
add
add
mov
pop
rol
ret
test
sub
fcomps
mov
mov
lcall
and
pop
xor
and
push
cmpsl
out
clc
popf
inc
inc
stos
ljmp
sbb
pop
movsb
xchg
imul
cmpsl
mov
pop
aas
lods
xchg
insb
std
into
mov
pusha
shlb
mov
jne
test
int
fiaddl
lret
lock
sub
outsb
jecxz
and
dec
mov
imul
jmp
xor
idivl
ds
xor
sub
aad
leave
in
xchg
mov
ds
out
int3
enter
hlt
shlb
fmul
icebp
shrl
sub
adc
jl
in
xorl
jae
xor
std
xchg
mov
ret
lock
jae
rclb
xor
adc
aad
imul
les
rcrb
cmp
adc
and
xchg
jecxz
pop
pop
repz
xlat
cmpsl
xchg
out
xchg
gs
push
jg
xchg
or
add
lods
jmp
and
or
xor
negb
pop
call
adcb
sub
inc
addb
or
add
roll
inc
or
sbbb
jmp
scas
sbb
pop
push
enter
shll
inc
bound
js
mov
out
mov
fcoms
andb
pop
mov
inc
insb
and
pop
stos
mov
push
stos
ffree
push
iret
in
fwait
dec
mov
cld
nop
fsubs
js
mov
test
orb
inc
scas
imulb
cld
inc
popf
xchg
xchg
test
and
push
push
mov
mov
jge
jmp
nop
xor
lock
push
rorb
mov
insb
dec
mov
mov
cmp
pushf
loopne
or
add
test
mov
loopne
movsl
or
and
cli
test
adc
xor
cltd
scas
cmp
pop
addb
out
stc
cvtpi2ps
pop
in
dec
leave
pop
insl
mov
lods
pusha
xchg
cwtl
fsubl
popf
sub
test
es
icebp
jo
mov
mov
in
sti
push
xchg
push
pop
enter
out
in
out
cwtl
lock
pop
inc
sub
inc
and
push
cmp
push
xchg
xor
add
inc
cmpsl
mulb
dec
inc
add
loopne
into
cld
stc
sbb
test
mov
add
pop
adcb
xchg
xor
loope
sbb
in
inc
andb
mov
add
jns
cmc
dec
xchg
push
inc
push
add
insl
push
pop
gs
mov
test
or
sub
js
and
add
es
xor
push
and
dec
out
xchg
pop
adcb
pop
jns
das
imul
fnstsw
dec
std
pop
cmp
orb
xor
repnz
mov
push
sbb
xchg
push
mov
shlb
fisttps
lods
xor
sbb
inc
or
aaa
call
sbb
cld
je
in
pop
xchg
mul
imul
mov
sbbb
mov
loope
sbb
daa
mov
pusha
mov
shll
xor
pop
mov
pop
aam
push
xchg
loop
les
xlat
push
stos
xchg
sbb
fisttpll
call
add
xor
ret
or
cwtl
mov
lods
das
adc
and
add
dec
stos
sbb
hlt
jle
sub
add
aaa
dec
or
lahf
inc
test
jo
aam
sub
pop
movsl
test
and
sbb
cli
xchg
add
std
notl
and
daa
sbb
repz
inc
dec
xorl
aam
sub
rolb
adc
jp
mov
mov
push
cld
xchg
xchg
jno
movl
daa
aaa
aam
test
adc
or
mov
xor
adc
test
fmulp
inc
cli
fldcw
aad
sarl
fcomp
xchg
sub
dec
dec
test
fs
cmpsb
xchg
mov
pop
and
fwait
adc
push
jmp
add
pop
mov
xor
iret
jle
jb
fscale
xor
test
in
divl
fcomps
les
or
subb
in
into
jl
xor
insl
or
subb
push
test
mov
or
mov
out
enter
mov
ret
cmp
inc
mov
lock
jne
and
cmp
jecxz
loope
dec
lahf
mov
cmpsb
insl
adc
pusha
jp
mov
data16
lods
sbb
mov
cmpsb
mov
in
fiaddl
mov
aas
cmp
das
nop
in
inc
aad
pusha
cwtl
jo
xchg
or
pusha
ficompl
or
push
pop
mov
or
mov
loopne
lcall
loopne
push
stos
andb
or
xor
mov
push
ljmp
adcb
js
mull
or
push
loopne
lret
pop
mov
mov
rcll
sbb
adc
rclb
inc
xor
lret
inc
push
xor
fisttps
cmp
cmp
dec
mov
adc
testl
aaa
push
or
xchg
imul
stos
jmp
mov
mov
sub
mov
push
push
mov
and
cld
pusha
dec
andb
pusha
adc
and
pop
xor
out
repnz
popf
fbld
push
movsl
test
mov
fs
mov
lods
repz
repz
adc
repz
jo
jbe
push
jle
cli
jnp
fwait
cmp
pushw
xchg
shrl
jg
sbb
shl
add
jns
inc
loope
loopne
lods
les
or
and
stos
inc
mov
sub
fiaddl
jo
dec
push
stos
inc
das
and
jne
add
cmp
and
mov
jmp
dec
inc
call
dec
cmp
insl
push
mov
mov
push
scas
in
xor
adc
fstpt
xchg
adc
icebp
or
mov
fs
test
xchg
movsl
adc
iret
push
cmpsb
sub
pushf
add
sbb
mov
lahf
xchg
and
out
xchg
and
xchg
std
mov
fistpll
std
neg
cwtl
xchg
mov
rolb
imul
pop
fisubrl
xlat
pop
push
mov
out
cmc
xlat
pop
dec
dec
xchg
jo
std
jecxz
mov
popf
dec
bound
pop
ljmp
js
xchg
nop
lock
mov
sbb
lcall
push
jno
or
decb
pop
inc
or
aam
inc
jae
fs
and
adc
jno
out
mov
enter
mov
stc
mov
clc
xchg
cmp
or
dec
icebp
iret
movsl
cld
xor
in
cmp
mov
data16
push
xchg
in
pusha
daa
shll
aaa
pop
aam
xchg
push
ss
jne
imul
push
test
les
mov
imul
call
out
inc
inc
mov
pop
pusha
xchg
test
movsl
mov
xor
cltd
inc
sub
fsubrl
mov
ja
mov
subb
or
ret
fldt
ljmp
mov
jae
lods
mov
dec
cs
cmp
mov
mov
nop
hlt
loopne
sub
sarb
pop
insb
sar
nop
pushf
inc
adc
lret
lret
sub
mov
xchg
addr16
xor
into
movsl
out
insl
pop
mov
cltd
hlt
xlat
mov
imul
mov
or
ret
pop
mov
adc
lds
out
and
daa
mov
movsb
into
outsb
inc
in
or
cmp
aas
subb
out
stos
jmp
fsubl
gs
lea
lock
sub
mov
ljmp
mov
rclb
ret
aaa
lea
cwtl
and
sbb
add
test
jmp
xor
xchg
inc
xchg
mov
mov
sub
sbb
and
add
adcb
dec
lock
enter
out
divl
scas
pop
inc
inc
shr
ret
xchg
stc
lret
add
xor
stos
push
fcmovnu
fidivrl
data16
lds
pusha
leave
push
imul
sbb
orb
aad
pop
out
out
cmpsb
and
and
pop
mov
pusha
ror
mov
addl
sub
jp
hlt
je
jno
jo
push
sbb
cwtl
or
inc
add
xor
and
popf
pusha
xchg
jne
or
dec
test
mov
mov
nop
loopne
out
adcl
sbb
add
stos
and
xchg
sbb
orb
push
inc
imul
cmpsl
inc
jo
test
loop
xchg
incb
loopne
pop
ljmp
into
test
imul
jnp
pop
push
cmp
cld
inc
xor
pop
loopne
pop
lds
out
mov
aaa
into
mov
jae
ret
lea
or
add
pusha
orb
and
mov
xorb
stc
cmp
jecxz
ss
fdivrs
pusha
sub
loopne
add
pusha
js
fdivrl
xor
mov
das
js
shrl
mov
xor
push
and
mov
mov
push
movsl
adc
stos
aam
lcall
cmp
inc
call
pop
cltd
push
dec
imul
cli
sbb
rclb
int
xchg
incl
jecxz
xor
xor
ret
jb
xor
xor
mov
push
mov
in
mov
mov
inc
arpl
xchg
xchg
movsb
mov
push
add
sarl
daa
mov
add
fcmove
add
loopne
adc
inc
adc
shl
mov
in
shrl
lret
add
and
aaa
nop
mov
pop
push
sti
adc
call
add
int
pop
popa
mov
pusha
jl
adc
mov
adc
std
in
sub
and
xor
icebp
mov
faddl
sbb
push
aaa
jmp
pop
xor
mov
xor
hlt
lock
adc
les
and
inc
add
dec
test
stos
negb
add
lahf
fidivrs
sahf
mov
cmp
fsubrs
lods
rorl
stc
andb
xchg
inc
or
ds
mov
test
repz
jns
pop
push
daa
add
subb
push
jnp
movsb
shl
test
in
stos
aad
pop
xchg
stc
mov
rolb
pushf
pushf
and
hlt
dec
jno,pn
mov
dec
push
sahf
inc
and
pop
xchg
ljmp
dec
pop
push
enter
aad
inc
dec
or
inc
xchg
stos
imul
push
dec
adc
or
in
test
lret
push
inc
cld
imul
js
xchg
sub
push
subl
xchg
dec
cmp
mov
push
icebp
clc
in
sub
ss
int3
loopne
bnd
push
add
js
fstps
mov
cmp
sbb
xchg
cwtl
and
cmp
jbe
cs
sbb
xchg
incl
mov
add
addr16
inc
pop
adc
push
lea
es
hlt
iret
call
call
es
das
mov
int
sub
subl
add
push
xorl
push
test
std
adc
outsb
cmp
mov
cmc
in
sub
and
mov
in
movsl
mov
inc
fisttpll
call
addl
arpl
xor
sbb
fs
je
outsb
popf
jge
repnz
add
stos
jbe
mov
adc
arpl
adc
or
mov
pop
jb
cwtl
sub
mov
add
inc
xor
bound
test
adc
movsb
add
cpuid
jl
shl
xchg
push
inc
mov
xchg
or
ficompl
stos
popa
gs
testl
jb
cmpsl
push
out
sub
fwait
push
xchg
outsl
adc
inc
inc
cmp
je
push
nop
pop
inc
ja
lahf
and
mov
cld
jecxz
aam
mov
pop
jae
addb
push
das
xor
stos
cmp
fdivrs
cld
enter
cmpsb
jbe
dec
push
pop
sub
mov
and
or
inc
pop
push
mov
lret
scas
sbb
loop
push
jge
and
sahf
mov
faddl
lcall
mov
pop
sbb
dec
aam
das
outsb
mov
call
or
pusha
nop
adc
jb
inc
sar
mov
dec
pop
add
int
adc
dec
xorb
jne
aaa
xchg
mov
mov
outsb
lret
loop
push
xchg
xor
or
mov
out
mov
fcmovnu
cmp
cmc
stc
imul
and
jp
arpl
xor
inc
sub
data16
lret
leave
add
loopne
test
push
push
adc
or
iret
insl
lods
mov
pushl
and
imul
pop
popa
fs
ds
jmp
mov
mov
mov
sbb
add
fdivs
enter
and
inc
cmp
push
enter
mov
xor
pop
inc
mov
sahf
dec
xor
lods
and
sbb
and
xor
imul
lahf
xor
pop
test
sbb
xchg
dec
into
loop
nop
shlb
push
data16
cs
in
xchg
sub
xor
cmp
pushf
enter
jmp
adc
xor
int
cmc
xchg
dec
stos
inc
jbe
xchg
dec
jbe
insb
cld
data16
ret
stos
dec
clc
aad
mov
sub
xor
mov
mov
jle
mov
pop
cmp
xchg
push
sti
jge
xor
cmp
pusha
jmp
cmp
dec
mov
adc
or
and
test
sub
stc
inc
lds
aaa
jnp
xchg
sbb
sub
push
pop
outsb
fwait
or
dec
inc
jl
cmp
cmp
cmp
in
mov
ljmp
insl
rorb
or
cmp
xor
mov
mov
push
pop
xor
aas
sbb
xchg
insb
add
out
xchg
pop
mov
push
jno
pop
repz
ret
sub
aaa
std
xchg
jae
xchg
loopne
or
pop
and
sbb
dec
cs
cmp
sahf
inc
testb
inc
mov
mov
or
sbbb
sub
xor
mov
arpl
cltd
mov
popa
icebp
dec
push
cs
fucompp
stos
or
loopne
dec
pop
cltd
cmp
hlt
andl
push
inc
xchg
dec
repz
ljmp
push
lahf
xchg
mov
test
cld
inc
inc
mov
mov
mov
test
dec
adcb
pop
xchg
push
testl
popa
adc
rcrb
xchg
xchg
mov
fs
aad
ficoms
std
cmp
call
adcb
mov
mov
mov
add
dec
push
sbb
or
mov
and
into
push
arpl
push
std
clc
dec
jno
inc
and
inc
gs
stos
mov
rcrb
roll
rol
dec
or
cmp
loopne
aam
shrl
lcall
xchg
or
mov
xor
sub
lods
cmpsb
mov
jecxz
nop
loopne
js
mov
sbb
push
or
pusha
insl
sub
ja
enter
and
mov
sub
and
inc
outsb
mov
mov
shlb
xor
fadd
sbb
push
sub
dec
in
xchg
inc
fiadds
inc
out
das
push
xchg
fsubl
cmp
out
lea
out
pop
cwtl
sbb
xchg
add
push
mov
shr
mov
insl
pop
iret
mov
sub
fwait
pop
ljmp
pop
mov
push
pop
loopne
call
inc
mov
ficoml
add
shlb
jns
dec
out
and
push
sarl
dec
dec
arpl
jge
aam
sbbb
push
loop
stos
mov
stos
and
int
inc
faddl
popf
inc
insb
lods
inc
aas
in
xchg
xchg
sti
lods
or
jmp
lea
movsl
cmc
mov
outsl
push
mov
pop
ret
sbb
pop
sub
popa
xchg
test
push
insb
das
aas
xor
aad
sub
call
das
inc
pop
hlt
pop
lahf
testb
push
icebp
aas
out
or
mov
jl
inc
shll
xchg
in
add
jp
mov
add
and
mov
sbb
adc
push
jb
xchg
lods
loop
ljmp
cmp
cmp
sahf
adc
aas
and
and
loope
and
int3
roll
add
inc
mov
mov
mov
mov
xor
cmp
pusha
mov
and
push
inc
jae
movsl
imul
ss
jo
jmp
sbb
rolb
loopne
xchg
lock
mov
xor
aam
ret
xchg
xchg
mov
or
rcl
fmull
cmpsl
push
shl
mov
mov
jbe
testb
shlb
inc
sub
mov
fisubrl
nop
pop
sbb
aaa
lahf
test
loopne
pop
jl
mov
inc
outsl
std
jae
mov
test
repnz
pop
sub
sbb
add
aas
add
scas
shll
pop
xor
adc
cmp
dec
add
fdiv
lds
mov
push
ljmp
pop
push
jns
js
fstpl
push
int
add
out
jae
xor
adc
push
xchg
pop
arpl
cs
cs
jb
xor
cmc
or
cltd
xchg
xor
pop
jne
aam
ja
hlt
adcb
fidivl
add
and
ja
bound
loopne
pop
add
jbe
jnp
mov
je
mov
and
jns
push
arpl
sub
jmp
pop
and
push
pop
mov
mov
push
adc
pop
dec
addr16
inc
mov
pop
sub
mov
adc
mov
inc
in
push
push
adc
mov
cmc
ret
jl
scas
mov
xlat
inc
inc
outsl
sarl
mov
pusha
sub
pop
arpl
nop
inc
and
mov
addb
add
ljmp
dec
lret
lods
popf
jb
orl
push
mov
dec
test
shrb
mov
fwait
push
iret
or
push
je
outsb
push
je
and
fists
and
pop
rcrb
mov
push
insl
mov
mov
sbb
mov
pop
mov
hlt
lea
jecxz
and
pusha
or
and
cmp
mov
gs
xlat
rcrb
sbb
mov
jne
xchg
jecxz
lock
not
mov
daa
cmc
repnz
ficomps
fsubrs
movsb
js
pop
lds
dec
std
mov
jne
mov
sar
shlb
inc
popf
js
xchg
int
inc
adc
push
or
and
call
rolb
inc
jle
and
adc
add
aam
xor
adc
addb
sub
cmp
push
sub
and
pop
jg
mov
pop
xlat
popa
aas
xchg
push
pop
aad
and
clc
push
xorb
push
pop
mov
xor
xor
in
xchg
pop
shlb
inc
je
mov
jae
mov
cmp
push
sub
aas
test
jg
sbb
inc
fcmovnb
or
mov
cmpsb
dec
cmp
sbb
mov
or
daa
test
leave
mov
add
adc
fcompl
fadd
loopne
stc
iret
lahf
xchg
je
fildl
add
pop
push
pushf
push
add
mov
inc
out
cmc
jno
and
call
adc
cwtl
cwtl
sarb
dec
push
jnp
sti
test
mov
aam
repz
mov
add
xor
enter
add
jge
add
movsl
cmp
mov
mov
inc
inc
imul
sub
push
mov
add
lea
and
push
push
push
push
cld
push
push
clc
push
nop
test
xchg
je
jmp
pop
push
inc
add
or
add
xor
jmp
push
push
call
leave
ret
ret
xchg
mov
mov
or
add
add
lea
sub
shr
dec
not
sub
mov
jne
push
pop
add
lea
stc
jmp
jmp
push
mov
add
lea
orl
andl
push
push
cmp
jne
call
and
jne
loope
dec
and
push
push
push
call
mov
lea
test
je
pop
lret
xor
ds
inc
add
xchg
adc
mov
call
imul
or
in
mov
sub
or
shl
cmp
mov
cmc
xor
dec
ljmp
adc
add
inc
dec
adc
sbb
jae
pop
stos
mov
ret
enter
xchg
test
xchg
xchg
push
cmp
imul
mov
popa
ret
lods
jge
dec
cltd
push
cmp
adc
cmpsb
xor
rclb
es
imul
in
pop
inc
lret
mov
in
push
es
xor
inc
fnstenv
and
sub
xchg
dec
stos
jns
je
cmp
cmp
add
int
les
fsubrp
mov
push
out
pop
push
mov
mov
adc
test
mov
mov
sbb
loopne
ja
hlt
and
mov
or
pop
xor
push
loopne
add
sub
stc
mov
inc
addb
mov
adcb
jecxz
and
mov
push
dec
je
hlt
sti
or
add
repz
push
push
jnp
test
movsb
add
bound
add
cmp
xor
xchg
inc
rcrl
jge
jb
jle
std
jle
fcomps
enter
jecxz
xchg
pop
rorb
test
loope
aad
jo
sahf
push
mov
loopne
jnp
je
std
xchg
mov
loop
cmpsb
and
mov
jb
xor
mov
inc
add
and
lahf
mov
lea
xor
adc
movsl
lcall
xchg
push
imul
loop
mov
movsl
sub
les
xchg
imul
sbb
jns
pop
imul
out
mov
inc
pop
ja
rolb
mov
dec
dec
xchg
cmc
inc
scas
fstpt
rol
in
push
lock
jle
mov
inc
clc
sbb
and
test
jb
rcll
cs
add
cmpsb
sarb
movsb
movsb
xor
sub
adc
xor
es
mov
shl
xlat
mov
or
lret
push
mov
bound
stos
std
dec
sbb
and
out
gs
mov
dec
fisubrs
rorl
jnp
push
rcl
sub
test
mov
sub
xor
sbb
inc
xchg
and
cltd
into
mov
add
stos
sub
arpl
lock
mov
mov
sahf
jns
test
dec
inc
sub
inc
xorb
stc
xor
cs
cli
jae
cmp
js
fnstenv
js
sbb
pusha
adc
int3
test
xchg
mov
jb
xchg
test
sbb
sub
cmp
add
sub
and
and
jbe
mov
mov
xchg
jno
jl
repz
scas
aas
out
aas
mov
out
dec
bound
das
push
loopne
jns
nop
jo
push
addb
mov
xor
push
jne
popf
imull
loopew,pt
sub
test
inc
dec
xchg
lret
loope
or
pusha
std
inc
mov
sbb
xorl
popf
cmp
ja
jo
cmc
or
gs
adc
push
outsb
sub
sub
add
mov
bound
test
add
lods
cwtl
cmp
cmpsl
cwtl
sbb
les
popa
cmp
loopne
sub
aas
sbb
sbb
inc
pop
sub
sahf
add
addb
add
pop
mov
popa
popa
mov
adc
xor
and
into
mov
rorb
fbld
inc
add
loopne
lds
leave
fs
cmpsl
js
mov
xchg
xor
adc
into
out
jle
mov
sahf
jge
dec
inc
mov
xor
stos
and
push
mov
pop
test
sub
scas
xor
cmp
or
scas
loop
jle
fistps
outsl
pop
int
pop
and
jg
loopne
inc
ret
test
push
mov
fimuls
push
mov
cltd
sub
call
xchg
ja
mov
shlb
jno
xor
ljmp
imul
decb
cmc
ret
dec
mov
mov
pop
sub
test
das
push
imul
mov
ss
stc
mov
and
jno
inc
mov
sub
xchg
or
jmp
aam
gs
subl
jnp
and
mov
hlt
pusha
adc
int3
xchg
fs
dec
xlat
cwtl
add
rcrl
sbb
out
pop
pushf
loopne
add
push
inc
xchg
inc
sub
and
dec
jl
inc
decb
and
fiaddl
iret
xchg
mov
in
or
js
cld
aas
hlt
fpatan
loop
jmp
pop
cmp
or
jbe
xchg
sub
inc
in
adc
fisttpll
call
inc
unpcklps
mov
jmp
add
int
fs
pop
fstl
mov
add
jno
mov
sti
inc
repz
pop
ret
mov
jle
pop
outsb
stos
bsf
or
push
adc
rorb
mov
xchg
push
xor
outsl
out
push
ljmp
out
ret
jns
mov
push
pop
pop
jmp
push
and
daa
dec
repnz
repnz
sbb
stc
into
insl
movsl
xor
inc
repz
mov
popa
test
jnp
push
addr16
add
clc
mov
inc
mov
mov
out
cmpb
outsb
jne
paddusw
mov
cmp
cmp
mov
add
jo
popf
callw
push
out
mov
scas
fdivr
jae
hlt
loop
jbe
out
clc
dec
mov
mov
out
jnp
jbe
frstor
test
push
cmp
pushf
dec
add
popf
mov
pop
fimuls
hlt
mov
push
imul
dec
subb
cld
dec
add
mov
inc
lret
pop
int
imul
xchg
dec
mov
mov
pop
jns
fcmovne
mov
pop
mov
add
cmp
adc
inc
loop
xor
push
cld
jmp
xor
push
mov
or
loopne
mov
lock
xor
ds
lds
mov
mov
adc
js
adc
jge
xor
sbb
add
cltd
push
dec
xor
jno
push
mov
add
add
jbe
mov
je
nop
sbb
mov
mov
jmp
adc
inc
cmp
jp
mov
push
pop
add
mov
cmpsb
fcomp
xorb
cmp
ret
xchg
push
jb
or
inc
out
jno
insb
adc
aaa
aam
cmpsl
or
mov
aaa
dec
out
dec
sub
add
fcomp
mov
outsl
stc
out
iret
mov
enter
add
sbb
pop
dec
ss
lock
mov
xchg
sub
sub
call
xor
pop
ret
test
rcrl
lret
std
arpl
pop
xchg
fidivrs
add
pusha
cltd
ret
or
data16
loopne
or
pusha
cmpsl
lock
cmp
xor
test
shll
xor
insb
jbe
rcl
cmp
sub
adc
or
inc
sbb
test
mov
scas
xchg
call
clc
sbb
inc
aaa
pop
dec
xor
andb
ret
adc
and
sub
fsts
adc
loopne
xchg
sahf
sub
xchg
dec
mov
shr
jnp
rolb
add
add
cmp
push
add
xchg
pop
xor
shll
sbb
push
arpl
cmpsl
and
sbb
pusha
push
xchg
sub
jnp
push
xor
outsb
jb
pop
cmp
mov
xchg
add
insl
scas
push
and
adc
and
dec
push
jb
cmp
pop
jl
dec
jns
test
mov
push
rcrb
inc
cmp
js
add
mov
mov
scas
stos
fwait
inc
inc
scas
mov
jno
mov
jb
mov
aas
fcompl
jmp
cmp
shll
lcall
mov
jecxz
cmc
xchg
sub
jmp
mov
mov
loopne
inc
aam
pop
pop
loopne
test
add
aad
sbb
dec
or
es
sahf
mov
leave
push
pop
repnz
arpl
mov
in
cmc
dec
les
test
in
and
cmp
lret
push
in
jno
negb
xorl
lret
test
pusha
sub
sub
lods
sarb
clc
daa
inc
lods
sub
mov
mov
push
mov
rorb
fiadds
xchg
int
insl
test
add
cs
mov
jle
daa
mov
pop
test
aaa
inc
sub
mov
test
js
stc
cmp
dec
jp
xor
dec
sub
js
xlat
outsb
jae
jae
cld
add
es
xchg
ret
xor
or
add
pop
aaa
xchg
inc
mov
or
push
enter
repz
fbstp
popf
inc
push
ffreep
je
shll
das
inc
loope
mov
in
cmp
stc
dec
jne
xchg
out
push
sub
mov
lea
mov
out
in
imul
lods
cmpsb
mov
ret
push
xchg
adcb
rorb
jb
mov
mov
or
loopne
or
or
add
xor
sahf
sub
mov
pop
sub
loopne
mov
xchg
xchg
sub
cmp
dec
loopne
adc
inc
scas
dec
push
sub
cltd
and
inc
movsb
and
inc
xor
mov
in
fisttpll
hlt
inc
sub
cmpsl
loopne
jne
movsb
testb
inc
push
sub
sarl
mov
adc
add
pop
das
jo
sub
adc
lds
ljmp
leave
push
aam
lods
cwtl
pusha
mov
fwait
mov
mov
stc
rcll
and
test
adc
mov
imul
cmpsl
aas
fists
lds
xchg
and
test
pop
movsb
pop
sub
andb
cmp
cmp
es
push
and
lcall
in
adc
and
js
xchg
loop
cmp
shrb
inc
mov
ret
xor
dec
adc
sarl
shlb
push
bound
add
jnp
sahf
adc
shlb
test
sbb
add
cmp
daa
repnz
cmp
mov
in
out
loop
mov
ss
push
xchg
cmp
movl
dec
lret
sbb
das
or
add
stos
out
mov
test
sub
stos
sub
stc
iret
add
add
sub
mov
shrb
add
rorl
jg
sarl
adc
adc
push
int
je
dec
pusha
stc
add
cmp
jp
in
xchg
clc
sarl
cli
or
dec
int
pop
jecxz
jno
pop
cmp
decl
int
jecxz
mov
jp
decl
jbe
popa
mov
insl
jecxz
push
inc
add
mov
mov
mov
inc
mov
mov
in
mov
jns,pn
movsl
dec
push
mov
xor
enter
aam
test
add
mov
add
inc
inc
int3
pop
push
cmc
push
xlat
or
and
sbb
cli
mov
in
xchg
test
lock
lock
adc
rclb
mov
add
loopne
into
mov
aas
push
sbb
mov
mov
andb
jo
cmp
jno
and
cmp
in
push
pushf
lods
inc
cmp
push
stos
les
jge
xchg
in
pusha
ret
cmp
ficoml
out
xchg
mov
rcrb
loop
test
andb
pmulhw
inc
shlb
cmpsl
or
and
pop
loop
insl
insl
pop
xor
shrl
mov
nop
xchg
addb
xor
sti
movsl
jle
psubd
and
xchg
ljmp
pusha
cmc
dec
push
loope
cwtl
clc
inc
add
lods
loopne
push
fsubrs
pushf
insb
orb
sbb
mov
cs
int3
xchg
fadd
incl
cmp
mov
push
mov
or
call
enter
adc
xchg
stc
mov
push
ror
cld
mov
gs
push
jp
mov
out
adc
in
cmp
pop
jge
imul
adc
fmuls
sbbb
inc
mov
cmp
int3
lret
inc
mov
cmp
cli
and
inc
add
imul
roll
push
js
jae
mulb
mov
enter
push
pop
dec
push
lret
pushf
push
sarb
cld
arpl
fisttps
lcall
add
fprem1
test
and
js
fwait
jmp
mov
iret
scas
arpl
add
ja
sub
cltd
outsb
xchg
mov
mov
mov
jne
daa
loopnew
js
popa
adc
xor
push
pop
inc
sbbb
add
mov
int
int
cmp
lea
insl
movsb
mov
scas
add
repnz
mov
je
adc
sbb
ja
or
in
out
cmp
mov
xchg
inc
mov
mov
arpl
pushf
jo
shl
daa
sub
pop
lds
jo
dec
mov
leave
jp,pt
pop
push
mov
cmpsl
jg
iret
sub
sbb
mov
mov
pusha
loopne
dec
pop
gs
cld
insl
add
aaa
mov
test
and
rcll
xchg
rolb
inc
cmp
scas
rcll
scas
test
mov
loopne
rclb
aad
ss
dec
movsb
je
xor
test
mov
jnp
movsb
out
lcall
call
loope
add
and
mov
idivb
mov
sub
jmp
push
xor
or
pop
push
jns
imul
push
inc
push
sbb
insl
pop
test
dec
mov
pop
test
out
mov
in
mov
int3
lods
mov
add
add
mov
out
in
push
sarl
enter
ds
sub
scas
lds
lret
xor
idiv
nop
push
mov
leave
cs
jbe
popa
stc
add
bound
nop
push
mov
leave
cs
or
push
dec
add
add
xor
inc
adc
mov
xchg
ret
add
add
ja
add
mov
nop
nop
nop
nop
jae
cld
fldl
add
in
xor
cltd
and
clc
nop
nop
nop
nop
jae
add
jno
jp
std
adc
mov
clc
nop
nop
nop
nop
jae
inc
dec
lcall
cld
or
mov
nop
push
mov
leave
cs
add
cltd
aad
add
add
add
pusha
sbb
andb
rcrb
xchg
ret
add
pop
add
add
insb
add
clc
nop
nop
nop
nop
jae
add
jbe
add
add
inc
inc
add
cs
lcall
add
cwtl
fadds
cwtl
sbb
loop
test
jl
inc
ret
add
insl
jne
clc
nop
nop
nop
nop
jae
add
inc
add
enter
cmpsb
sbb
mov
leave
cs
add
add
pop
jbe
pop
add
ret
push
mov
xchg
ret
add
inc
mov
jp
pusha
xor
sarb
add
sbb
adc
enter
add
add
clc
dec
inc
clc
nop
nop
nop
nop
jae
add
add
or
mov
push
js
push
add
mov
cmp
push
mov
leave
cs
add
iret
fldl
pop
cld
fst
fld1
nop
push
mov
leave
cs
repz
and
adc
ja
dec
shr
clc
nop
nop
nop
nop
jae
ja
hlt
repz
add
pop
xchg
shl
push
push
mov
xchg
ret
lcall
repz
adc
push
mov
xchg
ret
hlt
xchg
sub
add
add
dec
lcall
rclb
nop
push
mov
leave
cs
add
adc
add
jp
and
push
mov
leave
cs
popf
add
add
sbb
ficoml
bound
xchg
ret
in
frstor
add
add
dec
inc
popf
adc
sub
clc
nop
nop
nop
nop
jae
jl
dec
add
dec
addl
mov
clc
nop
nop
nop
nop
jae
pop
add
add
jno
push
push
mov
xchg
ret
mov
and
add
stos
push
mov
clc
nop
nop
nop
nop
jae
cld
add
add
add
add
cmpsb
iret
push
clc
nop
nop
nop
nop
jae
adc
add
cmp
stc
insb
add
fsubs
nop
nop
nop
jae
add
and
add
add
inc
add
adc
andb
jl
sbb
nop
nop
nop
nop
jae
mov
jp
dec
add
xor
push
mov
leave
cs
add
jno
lcall
xchg
nop
push
mov
leave
cs
cld
push
std
add
cltd
dec
add
add
shl
adc
clc
nop
nop
nop
nop
jae
dec
mov
adc
jbe
jl
mov
clc
nop
nop
nop
nop
jae
mov
dec
dec
push
xchg
add
mov
push
mov
xchg
ret
add
popa
and
inc
or
jne
clc
nop
nop
nop
nop
jae
inc
and
inc
mov
add
nop
nop
nop
jae
inc
xlat
repz
ja
sub
push
lcall
pop
addl
lcall
add
jbe
adc
nop
nop
nop
nop
jae
add
add
add
add
add
adc
pusha
jecxz
stos
clc
nop
nop
nop
nop
jae
mov
add
xchg
add
push
jno
ja
jne
clc
nop
nop
nop
nop
jae
push
push
add
pop
adc
mov
leave
cs
push
pop
mov
add
add
sti
nop
push
mov
leave
cs
add
add
add
mov
movsb
insb
sbb
add
nop
nop
jae
add
add
xorl
xor
lcall
push
mov
leave
cs
adc
adc
xor
mov
fs
mov
push
mov
xchg
ret
add
add
add
cmp
nop
nop
nop
jae
add
add
add
popf
repz
movsb
nop
push
mov
leave
cs
sub
add
push
std
inc
and
mov
push
mov
xchg
ret
add
add
ja
insb
incl
cs
add
adc
stos
lcall
les
push
mov
xchg
ret
add
add
add
addl
clc
nop
nop
nop
nop
jae
jbe
add
xlat
add
stos
push
repz
mov
clc
nop
nop
nop
nop
jae
add
add
outsl
lcall
add
fcomps
jp
add
xor
dec
adc
nop
push
mov
leave
cs
add
enter
stos
add
fldl
repz
or
add
push
mov
xchg
ret
adc
cmp
add
and
clc
nop
nop
nop
nop
jae
add
add
add
popa
add
fsts
nop
nop
nop
jae
and
ja
push
add
add
ja
inc
cmp
ficoml
repz
push
mov
xchg
ret
add
xor
jbe
or
add
rcr
push
nop
push
mov
leave
cs
xor
cmp
dec
add
pop
push
mov
xchg
ret
add
repz
mov
mov
clc
nop
nop
nop
nop
jae
xlat
adc
add
mov
subb
aas
adc
cs
dec
add
popf
xlat
add
insb
repz
in
std
mov
push
mov
xchg
ret
add
aad
add
adc
std
pop
clc
nop
nop
nop
nop
jae
add
adc
pop
add
mov
add
cmpsl
or
clc
nop
nop
nop
nop
jae
add
enter
mov
lock
clc
nop
nop
nop
nop
jae
pop
and
add
pop
add
add
mov
nop
nop
nop
nop
jae
jno
add
add
ja
inc
add
test
add
nop
nop
nop
nop
jae
add
pop
push
add
add
clc
nop
nop
nop
nop
jae
add
pop
add
add
add
mov
nop
push
mov
leave
cs
xlat
add
add
pop
push
mov
xchg
ret
add
pop
jbe
add
add
mov
nop
nop
jae
sbb
hlt
cltd
xchg
add
add
add
fld1
push
mov
xchg
ret
jbe
add
add
add
nop
mov
xchg
push
mov
pushf
ffreep
add
add
enter
lea
adc
sbb
shlb
add
clc
nop
nop
nop
nop
jae
push
stc
outsl
add
add
lcall
push
pop
flds
sub
add
add
je
cmp
mov
add
xor
clc
nop
nop
nop
nop
jae
add
add
add
cmp
fistpl
mov
xchg
ret
cmp
add
add
pop
add
popf
pop
addl
add
clc
nop
nop
nop
nop
jae
add
mov
inc
popa
add
clc
nop
nop
nop
nop
jae
add
iret
cld
repz
add
shlb
in
mov
mov
xchg
ret
add
add
add
jp
add
xor
clc
nop
nop
nop
nop
jae
sbb
pop
add
add
add
jp
mov
clc
nop
nop
nop
nop
jae
std
outsl
add
lcall
and
nop
nop
nop
jae
add
xlat
repz
cmp
in
leave
cs
mov
inc
add
repz
mov
nop
nop
nop
jae
add
shrb
cmp
add
clc
nop
nop
nop
nop
jae
popf
add
adc
nop
push
mov
leave
cs
jno
add
rorb
add
mov
nop
push
mov
leave
cs
add
shrb
add
mov
xchg
mov
clc
nop
nop
nop
nop
jae
add
hlt
enter
jbe
mov
clc
nop
nop
nop
nop
jae
add
insb
add
inc
add
cmp
nop
nop
nop
jae
add
add
hlt
add
add
add
loop
aas
mov
clc
nop
nop
nop
nop
jae
add
and
stc
add
scas
andb
sub
mov
xchg
ret
hlt
add
dec
add
dec
push
add
fstp
sbb
clc
nop
nop
nop
nop
jae
add
pop
cmp
add
cmp
fs
add
inc
add
mov
pop
add
mov
mov
clc
nop
nop
nop
nop
jae
mov
dec
dec
add
push
mov
pop
mov
add
mov
loopne
push
pop
add
clc
nop
nop
nop
nop
jae
push
add
add
mov
adc
nop
nop
nop
nop
jae
adc
pop
add
add
pop
dec
mov
push
mov
leave
cs
push
dec
add
add
jbe
add
aas
test
nop
push
mov
leave
cs
repz
add
push
push
outsl
add
gs
clc
nop
nop
nop
nop
jae
add
stos
adc
stos
add
add
sbb
and
add
nop
nop
nop
nop
jae
push
add
pop
add
add
push
mov
xchg
ret
add
lcall
in
std
sub
test
std
clc
nop
nop
nop
nop
jae
add
pop
addl
mov
xchg
ret
xlat
add
add
add
scas
jl
mov
nop
nop
nop
jae
dec
add
repz
add
stos
pop
adc
and
pop
call
cs
push
add
add
adc
pop
dec
pop
push
nop
push
mov
leave
cs
dec
enter
add
add
add
les
mov
xchg
ret
add
pop
add
dec
stos
clc
nop
nop
nop
nop
jae
in
add
sbb
pusha
add
or
nop
nop
jae
add
add
add
mov
nop
push
mov
leave
cs
add
add
popa
add
push
clc
nop
nop
nop
nop
jae
aad
jbe
add
adc
add
fs
pushf
fsubs
mov
pop
push
mov
xchg
ret
add
add
push
add
xlat
add
inc
adc
es
nop
nop
nop
nop
jae
add
fldl
adc
add
nop
nop
jae
add
enter
adc
add
iret
sbb
nop
nop
jae
add
add
add
add
mov
lret
clc
nop
nop
nop
nop
jae
dec
xor
add
jno
add
add
sbbl
nop
nop
nop
nop
jae
add
pop
popf
xchg
add
add
mov
in
add
sahf
lcall
add
pop
add
add
data16
pop
orb
and
mov
xchg
ret
popf
add
push
cmp
add
push
mov
xchg
ret
popa
mov
and
add
stos
or
push
mov
leave
cs
stos
pop
add
add
inc
add
jge
push
mov
xchg
ret
enter
pop
fldl
pop
push
lcall
or
push
mov
leave
cs
add
adc
jl
add
and
xor
jl
outsb
or
cmp
out
push
inc
add
adc
add
jp
and
fwait
clc
nop
nop
nop
nop
jae
mov
add
xor
inc
sub
popa
add
rcll
nop
nop
nop
nop
jae
add
iret
addl
add
lods
add
clc
nop
nop
nop
nop
jae
adc
add
pop
pop
adc
sub
push
xor
in
stc
scas
stos
jne
add
add
lahf
add
jbe
mov
lcall
add
adc
add
ret
inc
add
add
add
push
addr16
rcl
clc
clc
nop
nop
nop
nop
jae
adc
and
add
mov
in
leave
cs
popa
add
mov
add
add
mov
xchg
ret
push
add
add
ja
adc
sar
call
nop
jae
add
sub
popa
adc
hlt
pop
add
sbb
call
nop
nop
jae
adc
add
add
add
push
clc
nop
nop
nop
nop
jae
add
adc
stc
dec
jp
pop
adc
add
nop
nop
nop
nop
jae
sub
add
add
add
cltd
add
ja
mov
add
add
inc
add
xchg
fldl
in
add
test
mov
add
clc
nop
nop
nop
nop
jae
lcall
sbb
dec
jbe
ficomps
add
pop
shrl
iret
add
lods
clc
nop
nop
nop
nop
jae
and
enter
pop
jbe
add
add
andl
in
leave
cs
add
and
mov
clc
nop
nop
nop
nop
jae
cmp
cltd
add
sub
add
add
mov
push
mov
xchg
ret
push
add
and
lcall
mov
and
dec
add
add
jp
jp
add
clc
nop
nop
nop
nop
jae
add
xor
add
hlt
add
sti
cld
push
mov
xchg
ret
add
push
add
adc
mov
sahf
in
scas
enter
nop
nop
jae
lcall
add
in
mov
clc
nop
nop
nop
nop
jae
add
add
add
add
insb
hlt
mov
loop
filds
add
nop
nop
nop
nop
jae
add
mov
outsl
add
xor
inc
test
nop
push
mov
leave
cs
add
pop
mov
add
sbb
pusha
push
mov
xchg
ret
mov
add
add
add
add
movsl
call
clc
nop
nop
nop
nop
jae
sbbl
push
push
cmpw
nop
push
mov
leave
cs
adc
mov
mov
add
xor
cli
dec
adcb
push
clc
nop
nop
nop
nop
jae
ja
add
add
pop
mov
add
dec
mov
push
mov
xchg
ret
add
add
add
add
inc
clc
nop
nop
nop
nop
jae
adc
add
lret
mov
clc
nop
nop
nop
nop
jae
add
add
in
add
add
lea
clc
nop
nop
nop
nop
jae
repz
add
movsl
nop
push
mov
leave
cs
pop
add
repz
add
rcr
call
inc
add
add
add
insb
add
add
pop
push
fwait
clc
nop
nop
nop
nop
jae
pop
add
pop
adc
cmp
mov
or
add
clc
nop
nop
nop
nop
jae
std
add
add
add
clc
nop
nop
nop
nop
jae
mov
add
mov
mov
or
pusha
cmpsl
mov
push
mov
xchg
ret
add
add
or
add
add
pop
push
mov
xchg
ret
push
repz
add
add
insb
add
jg
push
mov
xchg
ret
jbe
mov
in
lcall
stc
pop
push
mov
xchg
ret
add
pop
add
add
mov
clc
nop
nop
nop
nop
jae
addl
add
popf
cmp
mov
jo
call
add
clc
nop
nop
nop
nop
jae
cltd
sub
in
sub
add
test
repnz
clc
nop
nop
nop
nop
jae
mov
popf
sub
mov
leave
cs
addl
cmp
add
add
loop
push
mov
xchg
ret
add
inc
adc
pop
add
jnp
clc
nop
nop
nop
nop
jae
pusha
or
add
mov
jbe
pop
clc
nop
nop
nop
nop
jae
sub
add
add
mov
mov
push
mov
leave
cs
add
add
cld
pop
add
roll
addl
or
ret
add
jno
adc
add
sbb
nop
push
mov
leave
cs
jbe
add
add
add
in
mov
add
andl
pop
dec
add
add
mov
add
clc
nop
nop
nop
nop
jae
add
and
push
add
inc
and
nop
push
mov
leave
cs
and
jno
jp
jbe
and
jmp
outsl
mov
sub
pop
pop
lcall
add
jmp
fld1
clc
nop
nop
nop
nop
jae
add
add
mov
push
mov
leave
cs
adc
addl
add
sub
and
add
add
add
add
add
nop
pop
mov
jb
imul
add
push
repz
dec
add
cmp
add
clc
nop
nop
nop
nop
jae
add
mov
aad
add
add
mov
add
xchg
add
add
je
inc
push
add
xchg
call
clc
nop
nop
nop
nop
jae
adc
add
add
add
jmp
add
add
in
cmp
stc
and
stos
addl
push
jb
clc
nop
nop
nop
nop
jae
add
push
add
add
nop
push
mov
leave
cs
lcall
inc
sub
lret
push
nop
push
mov
leave
cs
pop
jno
jl
xor
add
hlt
sub
insl
je
clc
nop
nop
nop
nop
jae
pop
and
inc
dec
lcall
add
nop
push
mov
leave
cs
push
add
add
sub
les
nop
nop
jae
add
add
iret
add
add
insb
add
nop
nop
jae
adc
add
sbb
sbb
add
jle
push
mov
sbb
or
rolb
add
add
add
add
pop
cmp
rep
push
mov
xchg
ret
add
push
mov
add
add
fldcw
push
inc
sbb
nop
nop
nop
nop
jae
mov
fldl
insb
add
add
nop
nop
nop
nop
jae
add
sbb
push
clc
nop
nop
nop
nop
jae
lcall
adc
fwait
clc
nop
nop
nop
nop
jae
add
add
adc
push
loope
movb
nop
nop
nop
nop
jae
add
add
add
or
cmp
push
mov
leave
cs
cltd
repz
pop
add
add
push
jg
nop
push
mov
leave
cs
add
add
push
sub
or
jmp
pop
add
aad
add
add
add
sbb
add
add
add
or
add
cmp
cmp
pop
adc
sub
and
jne
push
mov
xchg
ret
cmp
add
add
lcall
dec
cmp
push
mov
leave
cs
cld
mov
add
mov
add
push
mov
xchg
ret
mov
mov
add
shrb
push
cmp
nop
nop
jae
add
push
add
lcall
dec
mov
nop
push
mov
leave
cs
mov
jno
push
add
jp
mov
add
clc
nop
nop
nop
nop
jae
mov
pop
add
adc
fld1
push
mov
xchg
ret
add
add
add
add
add
inc
lock
mov
xchg
ret
ja
adc
add
and
dec
pop
lcall
nop
jae
jno
dec
add
add
add
iret
add
push
mov
xchg
ret
mov
add
or
add
sub
add
nop
push
mov
leave
cs
adc
push
rcrb
add
add
nop
push
mov
leave
cs
add
add
add
out
mov
clc
nop
nop
nop
nop
jae
jno
and
dec
sbb
add
scas
dec
sti
push
clc
nop
nop
nop
nop
jae
jbe
add
pop
add
mov
clc
nop
nop
nop
nop
jae
add
mov
xlat
hlt
rolb
popf
or
mov
xchg
ret
inc
cmp
add
add
popa
jbe
dec
mov
and
rclb
cs
push
adc
stos
addl
pop
mov
cmp
cs
outsl
iret
add
jbe
add
jb
sbb
mov
xchg
ret
aad
add
add
add
jbe
push
mov
add
adc
xchg
add
add
xchg
xor
in
enter
pop
fwait
push
mov
xchg
ret
add
cmp
jbe
add
cld
add
add
mov
clc
nop
nop
nop
nop
jae
sub
outsl
add
add
xor
push
mov
leave
cs
push
adc
pusha
add
add
in
ds
mov
nop
push
mov
leave
cs
mov
add
add
jp
xchg
fistpl
nop
push
mov
leave
cs
adc
popa
add
add
add
test
nop
nop
nop
jae
or
adc
add
repz
out
leave
mov
push
mov
xchg
ret
adc
adc
add
add
xchg
push
mov
and
add
add
add
and
add
fisttpl
mov
cld
push
repz
pusha
cltd
ja
add
add
add
jno
mov
add
nop
nop
nop
jae
add
sub
adc
lcall
test
add
nop
push
mov
leave
cs
sub
xor
testl
add
nop
nop
nop
nop
jae
hlt
std
add
push
add
call
nop
push
mov
leave
cs
lcall
std
mov
pop
nop
push
mov
leave
cs
add
insb
add
add
pop
add
add
cmp
push
mov
xchg
ret
add
aad
add
and
popa
add
mov
call
mov
nop
nop
jae
add
outsl
inc
pop
sub
add
nop
nop
jae
add
ja
jno
in
mov
sbb
cmpsl
push
and
adc
jbe
add
cmp
lock
sub
push
inc
add
stc
outsl
add
add
adc
mov
mov
nop
push
mov
leave
cs
adc
cmp
add
add
orl
cs
cmp
push
add
add
add
mov
jo
mov
push
mov
leave
cs
add
add
cmp
mov
add
clc
nop
nop
nop
nop
jae
iret
push
sbb
xor
call
les
cmp
add
test
call
add
add
enter
roll
nop
nop
nop
nop
jae
add
add
adc
add
push
mov
xchg
ret
repz
jp
mov
add
add
push
inc
clc
nop
nop
nop
nop
jae
add
add
ror
push
add
int
mov
sub
cs
adc
adc
xlat
sub
jl
push
push
mov
lret
addr16
cmp
repnz
add
data16
mov
pop
add
mov
xor
nop
nop
nop
jae
sub
lcall
repz
jno
clc
nop
nop
nop
nop
jae
stos
pop
adc
pop
dec
xor
clc
nop
nop
nop
nop
jae
add
xlat
adc
add
add
xchg
clc
nop
nop
nop
nop
jae
and
sbb
push
add
call
nop
jae
add
add
add
dec
push
iret
popf
mov
mov
nop
nop
nop
jae
and
add
insb
lcall
addr16
pop
adc
add
add
xchg
add
ret
pusha
nop
push
mov
leave
cs
xor
mov
rcrb
repz
mov
clc
nop
nop
nop
nop
jae
jno
lcall
add
add
es
clc
nop
nop
nop
nop
jae
pop
enter
add
add
mov
nop
nop
nop
nop
jae
stos
popf
pusha
add
add
mov
add
and
clc
nop
nop
nop
nop
jae
jl
mov
add
jp
add
xchg
js
in
popf
push
clc
nop
nop
nop
nop
jae
lcall
mov
add
cwtl
add
lea
clc
nop
nop
nop
nop
jae
insb
jbe
pop
add
pop
add
pop
cld
pop
add
push
mov
xchg
ret
add
cmpl
mov
clc
nop
nop
nop
nop
jae
add
add
inc
add
add
sar
nop
nop
nop
nop
jae
dec
popa
jno
inc
cmp
cmp
sub
clc
nop
nop
nop
nop
jae
adc
pop
add
add
sbb
push
mov
xchg
ret
add
stos
add
popa
ja
stc
add
xor
je
sub
and
add
push
mov
lcall
adc
add
nop
nop
nop
nop
jae
adc
add
mov
push
clc
nop
nop
nop
nop
jae
add
push
aad
popf
push
add
push
ja
pop
fisttps
test
and
add
nop
nop
nop
nop
jae
adc
fldl
mov
cld
sub
int
add
nop
push
mov
leave
cs
aad
add
dec
add
mov
push
mov
xchg
ret
adc
add
add
popf
pop
aad
test
nop
push
mov
leave
cs
dec
add
pop
and
enter
movl
add
cs
ja
push
add
add
or
pushf
lock
push
clc
nop
nop
nop
nop
jae
xchg
popa
pop
lcall
jno
mov
clc
nop
nop
nop
nop
jae
pop
add
mov
add
mov
leave
cs
add
mov
dec
jbe
ret
nop
push
mov
leave
cs
fldl
mov
add
dec
cltd
add
clc
nop
nop
nop
nop
jae
add
push
add
add
add
push
ja
roll
nop
nop
nop
nop
jae
addl
add
mov
add
test
add
data16
addl
add
push
repz
cmc
fldl
test
or
ret
add
fldl
lcall
test
fwait
add
add
mov
add
lods
add
adcb
lea
nop
push
mov
leave
cs
xchg
hlt
add
pop
add
mov
adc
mov
xchg
ret
add
jl
or
add
cmpb
mov
push
mov
xchg
ret
mov
ja
and
outsl
add
stos
enter
mov
xchg
ret
add
pop
cmp
xor
repz
add
add
nop
nop
nop
nop
jae
insb
popf
xor
insb
xor
repz
add
lahf
adc
add
add
in
aad
and
dec
sub
jbe
and
xor
push
mov
xchg
ret
cmp
add
mov
mov
es
nop
nop
nop
nop
jae
add
add
and
mov
enter
jo
push
push
mov
xchg
ret
jp
repz
mov
pop
cmp
lea
test
sbb
add
cs
add
add
add
ja
pop
clc
nop
nop
nop
nop
jae
add
hlt
add
add
sub
test
xorb
fs
insb
clc
nop
nop
nop
nop
jae
addl
add
adc
mov
xchg
ret
add
add
jp
add
lcall
pusha
lea
nop
nop
nop
jae
pop
pop
add
iret
add
add
mov
nop
push
mov
leave
cs
sbbl
add
mov
xchg
ret
pop
add
aad
mov
cld
loope
sbb
clc
nop
nop
nop
nop
jae
add
add
add
push
add
pop
pop
clc
nop
nop
nop
nop
jae
add
cmp
add
add
add
add
push
mov
xor
mov
add
add
icebp
ficoms
jne
xchg
add
push
push
mov
xchg
ret
lcall
popf
popa
enter
inc
js
pop
clc
nop
nop
nop
nop
jae
xor
add
add
ja
loop
push
mov
xchg
ret
cmp
add
add
add
mov
inc
test
mov
imul
nop
jae
add
push
add
pusha
dec
add
clc
nop
nop
nop
nop
jae
push
xlat
jl
inc
add
xlat
pop
aad
push
clc
nop
nop
nop
nop
jae
adc
repz
add
cmp
push
sub
add
roll
stc
clc
nop
nop
nop
nop
jae
mov
cmp
outsl
add
xor
test
push
mov
leave
cs
add
or
dec
cmp
mov
xchg
ret
and
add
add
push
mov
loop
sub
jne
test
xor
std
pop
sbb
imul
sbb
nop
nop
nop
jae
add
add
push
add
add
add
add
test
push
mov
leave
cs
ja
add
jbe
movsb
mov
in
leave
cs
add
add
add
xor
push
clc
nop
nop
nop
nop
jae
push
in
pusha
and
iret
pop
pop
fwait
clc
nop
nop
nop
nop
jae
mov
adc
dec
dec
clc
push
mov
xchg
ret
dec
add
fldl
add
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
sub
add
xchg
add
clc
nop
nop
nop
nop
jae
add
pop
lcall
add
stc
inc
clc
nop
nop
nop
nop
jae
push
add
add
add
add
adc
cs
pop
rcrb
stc
add
add
clc
nop
nop
nop
nop
jae
or
addl
fld1
clc
nop
nop
nop
nop
jae
xor
add
add
add
mov
repnz
insl
shr
clc
nop
nop
nop
nop
jae
add
xor
jg
add
insb
nop
push
mov
leave
cs
inc
adc
add
jbe
xor
nop
nop
nop
nop
jae
add
add
add
add
stos
orl
push
mov
leave
cs
sbb
add
aad
add
adc
push
mov
rolb
add
push
push
push
inc
pushf
mov
add
add
add
daa
mov
push
mov
xchg
ret
adc
push
sbbl
clc
nop
nop
nop
nop
jae
stc
push
pop
xor
repz
add
pop
xlat
mov
nop
push
mov
leave
cs
aad
push
adc
lcall
jmp
adc
pop
rolb
add
dec
add
jp
add
add
mov
clc
nop
nop
nop
nop
jae
add
repz
lcall
push
mov
xchg
ret
xorl
pusha
cld
dec
add
mov
clc
nop
nop
nop
nop
jae
xchg
add
add
add
and
adc
push
mov
add
add
add
fnstenv
and
clc
push
xchg
inc
add
ret
loope
sub
nop
nop
nop
jae
mov
add
add
aad
mov
test
add
xlat
add
inc
dec
sbb
in
add
push
movsb
fildl
test
nop
nop
nop
jae
add
add
add
jp
add
pop
jge
movsb
clc
nop
nop
nop
nop
jae
jl
add
pop
add
add
xlat
add
fistpl
push
mov
xchg
ret
jbe
xor
xchg
xchg
add
sub
clc
nop
nop
nop
nop
jae
inc
cltd
push
pop
stc
add
and
nop
nop
nop
jae
add
or
jno
adc
push
nop
push
mov
leave
cs
repz
add
std
and
repz
rclb
inc
add
add
popf
adc
add
add
add
push
mov
xchg
ret
push
add
add
push
outsl
mov
test
push
mov
xchg
ret
add
inc
enter
add
iret
inc
xchg
test
sub
cs
dec
pusha
add
add
enter
sub
mov
sub
add
add
add
fldl
gs
clc
nop
nop
nop
nop
jae
adc
add
pop
repz
jbe
add
je
nop
push
mov
leave
cs
add
add
test
push
mov
xchg
ret
add
outsl
add
add
popf
lcall
add
clc
nop
nop
nop
nop
jae
add
add
add
fld1
push
mov
xchg
ret
pop
cmp
aad
xor
shlb
inc
xchg
sub
nop
nop
nop
nop
jae
pop
add
pop
nop
push
mov
leave
cs
push
add
popf
mov
cld
add
push
aaa
call
clc
nop
nop
nop
nop
jae
add
inc
repz
add
stos
clc
nop
nop
nop
nop
jae
add
jbe
add
ja
inc
add
add
mov
and
add
add
add
adc
cmpsb
add
mov
and
cmp
rolb
add
or
sarb
sbb
add
nop
nop
nop
nop
jae
aad
sub
jp
iret
jno
dec
pop
nop
push
mov
leave
cs
std
add
add
add
add
add
xchg
inc
in
add
push
mov
xchg
ret
rolb
cmp
outsl
stc
add
cld
stc
xor
nop
push
mov
leave
cs
add
popa
add
add
clc
nop
nop
nop
nop
jae
insb
add
add
cmp
push
clc
nop
nop
nop
nop
jae
add
add
cmp
popa
iret
add
jne
clc
nop
nop
nop
nop
jae
add
cld
add
add
xor
clc
nop
nop
nop
nop
jae
add
adc
add
add
xchg
push
mov
xchg
ret
add
add
add
add
test
das
lods
push
mov
xchg
ret
add
inc
adc
add
add
add
cld
icebp
push
push
mov
xchg
ret
add
push
add
enter
add
push
sub
je
xor
int3
jo
add
add
add
and
stos
ja
pop
dec
daa
popa
clc
nop
nop
nop
nop
jae
inc
xor
xlat
add
add
add
cwtl
and
cmc
pop
clc
nop
nop
nop
nop
jae
mov
adc
add
call
nop
jae
add
add
add
cli
pushf
je
test
loopne
lea
clc
nop
nop
nop
nop
jae
add
add
add
xlat
xchg
cmp
pop
cld
push
mov
xchg
ret
in
adc
pop
repz
and
xor
add
push
push
mov
xchg
ret
add
cmp
add
push
push
add
jl
dec
push
mov
xchg
ret
add
push
sub
add
in
add
add
pushl
push
mov
xchg
ret
add
ja
add
add
in
mov
scas
push
nop
nop
nop
jae
adc
adcl
jp
add
add
push
mov
xchg
ret
hlt
mov
push
add
add
cmp
pusha
and
call
inc
add
sub
inc
adc
add
outsl
mov
push
mov
xchg
ret
sub
add
sbb
mov
add
pop
add
clc
nop
nop
nop
nop
jae
add
add
add
add
add
add
nop
push
mov
leave
cs
add
adc
add
add
sar
push
and
lcall
add
cs
outsl
add
repz
add
test
clc
nop
nop
nop
nop
jae
mov
and
div
nop
push
mov
leave
cs
cmp
lcall
add
xor
nop
nop
nop
jae
stc
popf
aad
adc
add
jbe
mull
nop
nop
nop
nop
jae
add
add
add
hlt
std
and
shr
clc
nop
nop
nop
nop
jae
insb
add
aad
mov
mov
test
add
clc
nop
nop
nop
nop
jae
add
cmp
xchg
add
roll
clc
nop
nop
nop
nop
jae
dec
add
jbe
add
mov
add
nop
push
mov
leave
cs
add
mov
and
ret
push
loopne
nop
nop
nop
nop
jae
cld
add
jl
popa
add
add
clc
nop
nop
nop
nop
jae
cltd
add
cmp
add
dec
mov
clc
nop
nop
nop
nop
jae
mov
dec
hlt
pop
add
sub
add
or
fld1
clc
nop
nop
nop
nop
jae
add
push
rorb
sbbl
addl
add
mov
mov
clc
nop
nop
nop
nop
jae
add
cmp
sbbl
add
ds
add
nop
push
mov
leave
cs
add
dec
add
stos
add
decl
nop
push
mov
leave
cs
add
add
add
push
or
nop
nop
nop
nop
jae
add
jbe
add
add
or
add
nop
push
mov
leave
cs
sbb
fldl
inc
add
mov
leave
cs
add
add
shlb
mov
clc
nop
nop
nop
nop
jae
add
add
pusha
add
ret
mov
mov
add
add
sub
movsb
cmp
add
fisttpl
nop
nop
jae
add
add
ja
add
add
cli
inc
add
nop
push
mov
leave
cs
add
mov
pusha
cmp
push
clc
nop
nop
nop
nop
jae
xchg
add
cltd
std
in
lcall
jne
clc
nop
nop
nop
nop
jae
add
cmp
add
jno
clc
nop
nop
nop
nop
jae
cltd
std
sub
add
popa
jl
jl
cmp
sti
jmp
mov
dec
mov
add
and
add
mov
lods
clc
nop
nop
nop
nop
jae
dec
lcall
or
push
pusha
sub
add
push
mov
xchg
ret
push
sub
addl
add
add
jb
push
mov
leave
cs
cmp
add
fldl
add
inc
lea
nop
push
mov
leave
cs
cld
add
stc
repz
add
jne
nop
push
mov
leave
cs
add
add
add
adc
xbegin
jae
add
mov
insb
sbb
test
nop
nop
nop
nop
jae
add
adc
jno
cld
add
mov
popf
cmpsl
mov
nop
push
mov
leave
cs
add
xlat
sarb
lcall
outsb
fdivr
clc
nop
nop
nop
nop
jae
mov
add
sub
xlat
pop
cltd
add
clc
nop
nop
nop
nop
jae
add
add
adc
dec
cmp
nop
nop
nop
nop
jae
outsl
rolb
add
add
adc
adc
in
add
clc
nop
nop
nop
nop
jae
repz
cld
add
add
fwait
push
mov
xchg
ret
add
aad
insb
add
xor
pop
add
push
mov
xchg
ret
add
lcall
sub
jp
add
clc
nop
nop
nop
nop
jae
jp
pusha
stc
add
add
adc
cs
add
add
jl
adc
popa
xor
clc
nop
nop
nop
nop
jae
add
add
add
add
add
push
mov
xchg
ret
addl
std
add
outsl
add
imul
add
add
add
addl
add
add
jne
nop
push
mov
leave
cs
adc
add
addl
pop
daa
jmp
clc
nop
nop
nop
nop
jae
xor
add
add
jmp
add
add
jp
stos
stc
repz
xlat
xlat
outsl
pop
add
inc
test
add
nop
nop
nop
nop
jae
insb
add
add
cmp
sbb
and
mov
xchg
ret
add
add
add
add
pop
shlb
sub
inc
add
adc
mov
xlat
mov
jne
in
leave
cs
dec
add
xchg
pop
push
mov
xchg
ret
add
add
add
push
push
add
popa
add
jle
push
push
mov
xchg
ret
add
add
jl
or
push
mov
nop
nop
nop
jae
and
cltd
add
jp
add
call
clc
nop
nop
nop
nop
jae
add
add
add
sar
nop
nop
nop
nop
jae
inc
jp
push
pusha
mov
ja
push
mov
add
and
test
jno
xor
add
sti
mov
push
mov
leave
cs
aad
push
add
jbe
add
jmp
add
add
add
add
jbe
add
repz
jl
and
nop
push
mov
leave
cs
in
repz
adc
pusha
js
mov
clc
nop
nop
nop
nop
jae
add
lcall
and
xchg
pop
clc
nop
nop
nop
nop
jae
add
lcall
adc
mov
xchg
ret
sbb
add
add
dec
sub
rorl
xchg
ret
add
xor
addl
and
add
clc
nop
nop
nop
nop
jae
add
insb
iret
mov
add
addr16
mov
sub
sub
mov
rolb
add
fstpt
stos
dec
pop
dec
push
mov
xchg
ret
add
add
add
add
add
push
push
mov
xchg
ret
xorl
push
xor
mov
cld
mov
clc
nop
nop
nop
nop
jae
repz
add
adc
adcl
add
jno
add
iret
add
cltd
outsl
add
push
and
push
mov
xchg
ret
sbb
frstor
add
and
test
call
cs
add
pop
jbe
adc
clc
nop
nop
nop
nop
jae
sub
lcall
mov
fistpl
push
mov
xchg
ret
repz
add
add
add
mov
outsb
inc
add
add
stc
popf
popa
add
add
add
loope
andl
in
leave
cs
pop
add
jbe
shl
push
mov
xchg
ret
push
adc
add
sub
in
add
lret
shr
nop
push
mov
leave
cs
add
add
add
shlb
cli
repnz
jo
pusha
nop
push
mov
leave
cs
xchg
add
repz
sbb
cmc
cmp
nop
push
mov
leave
cs
pop
pop
hlt
pusha
add
add
mov
roll
nop
nop
nop
nop
jae
cmp
add
add
cs
clc
nop
nop
nop
nop
jae
repz
add
sub
or
mov
xchg
ret
add
cltd
adc
add
xchg
insb
push
add
movsb
hlt
adc
sbb
push
mov
xchg
ret
pop
pusha
adc
add
enter
dec
xchg
nop
nop
nop
jae
sub
add
enter
ja
int
leave
clc
nop
nop
nop
nop
jae
add
xchg
repz
sub
mov
or
mov
xchg
ret
add
jbe
jbe
add
inc
clc
nop
nop
nop
nop
jae
add
stos
pop
mov
push
add
xchg
lret
fwait
clc
nop
nop
nop
nop
jae
add
push
pop
lcall
cld
mov
mov
xchg
ret
add
push
sub
add
adc
mov
clc
nop
nop
nop
nop
jae
and
xlat
push
add
and
rolb
nop
nop
nop
nop
jae
lcall
or
sub
push
mov
leave
cs
add
add
mov
add
sbb
push
mov
xchg
ret
in
sbb
inc
push
cmp
add
rclb
outsl
inc
add
ja
add
add
push
clc
nop
nop
nop
nop
jae
add
adc
cld
std
pop
push
add
add
fistpl
and
nop
nop
nop
nop
jae
lcall
adc
and
push
mov
xchg
ret
cmp
add
add
mov
xor
out
sbb
clc
nop
nop
nop
nop
jae
xor
add
xor
in
adc
add
nop
nop
nop
nop
jae
pop
adc
push
mov
js
test
adc
call
cs
add
jl
mov
clc
nop
nop
nop
nop
jae
add
pop
enter
add
sub
nop
nop
nop
nop
jae
pusha
dec
add
add
mov
xchg
lcall
jae
add
cld
add
add
stos
data16
rorl
testl
mov
leave
cs
push
add
stc
std
sub
sbb
mov
xchg
ret
cmp
add
xchg
sbb
add
xor
stc
adcl
scas
js
add
push
add
adc
add
jl
cmp
outsb
pop
add
clc
nop
nop
nop
nop
jae
add
pop
and
add
cmpsb
les
fdivr
clc
nop
nop
nop
nop
jae
add
add
add
push
mov
insl
inc
add
repz
adc
jbe
lcall
mov
leave
cs
push
iret
rclb
dec
inc
add
push
xchg
xor
rclb
push
addl
cmp
push
cld
mov
push
stos
ja
sub
nop
nop
nop
jae
lcall
push
add
mov
in
leave
cs
cld
dec
std
popf
add
add
add
add
stc
xor
clc
nop
nop
nop
nop
jae
add
add
cmp
sub
sub
clc
nop
nop
nop
nop
jae
stos
add
outsl
add
add
adc
adc
add
cs
add
jno
add
popa
fwait
xchg
clc
nop
nop
nop
nop
jae
shl
or
pop
add
push
add
test
nop
nop
nop
nop
jae
xlat
add
add
add
inc
push
clc
nop
nop
nop
nop
jae
cmp
add
add
add
push
clc
nop
nop
nop
nop
jae
std
adc
mov
stos
add
mov
movsl
xor
clc
nop
nop
nop
nop
jae
mov
mov
add
push
mov
leave
cs
mov
push
and
xor
out
add
call
pop
jp
add
pop
add
pop
jno
push
cmp
push
mov
incb
add
add
add
mov
mov
sbb
movsl
inc
push
mov
xchg
ret
add
xlat
push
add
add
add
adc
xor
add
clc
nop
nop
nop
nop
jae
aad
push
add
xor
cld
clc
nop
nop
nop
nop
jae
and
add
inc
ja
cld
add
adc
sub
add
cmp
subb
mov
rolb
loopne
add
push
mov
xchg
ret
cmp
in
add
pop
inc
add
mov
sub
shrl
add
adc
cld
cltd
inc
mov
add
sub
mov
iret
aad
adc
pop
xchg
cld
add
aad
cld
repz
jbe
scas
fstl
in
add
dec
add
add
add
add
int
imul
call
nop
push
mov
leave
cs
add
lcall
push
pop
mov
clc
nop
nop
nop
nop
jae
cltd
insb
add
jnp
loop
nop
push
mov
leave
cs
jno
add
pop
adc
faddl
loopne
rcll
nop
nop
nop
nop
jae
or
add
add
add
gs
clc
nop
nop
nop
nop
jae
add
add
dec
jbe
add
stc
and
mov
clc
nop
nop
nop
nop
jae
add
cltd
iret
adc
add
nop
or
mov
nop
push
mov
leave
cs
add
add
adc
sbb
fstpl
add
add
sub
or
and
mov
add
mov
dec
add
add
or
fwait
clc
nop
nop
nop
nop
jae
add
add
xor
add
sub
add
test
nop
nop
nop
nop
jae
add
add
outsl
pop
in
shlb
mov
clc
nop
nop
nop
nop
jae
push
add
xlat
add
repz
add
nop
nop
nop
nop
jae
adc
add
popf
pop
push
nop
push
mov
leave
cs
adcl
mov
mov
leave
cs
and
add
cltd
enter
in
add
out
add
add
shl
fldcw
add
mov
fsub
in
lock
push
mov
leave
cs
add
add
addl
data16
add
nop
nop
nop
nop
jae
add
add
push
aad
in
jl
sbb
nop
jae
push
add
add
pop
adc
pop
push
mov
xchg
ret
pop
sub
push
add
adc
push
add
clc
nop
nop
nop
nop
jae
add
pop
add
cmp
adc
nop
nop
nop
nop
jae
addl
mov
stc
pop
mov
or
lds
push
mov
leave
cs
aad
add
add
add
outsl
fisttpll
mov
jo
jbe
xchg
add
add
add
add
add
dec
jb
lock
and
xchg
pop
inc
add
cltd
add
push
add
jmp
nop
nop
nop
nop
jae
jp
enter
push
add
lcall
push
mov
pop
jae
add
add
mov
add
add
faddl
in
add
xchg
xchg
push
mov
xchg
ret
adc
dec
insb
pop
mov
jns
or
nop
nop
nop
nop
jae
mov
mov
pop
shl
clc
nop
nop
nop
nop
jae
inc
jl
dec
outsl
sbb
ja
iret
pop
mov
clc
nop
nop
nop
nop
jae
add
push
add
add
mov
mov
push
mov
xchg
ret
add
pop
addl
jl
pop
inc
add
sldt
clc
nop
nop
nop
nop
jae
add
addl
fwait
dec
nop
push
mov
leave
cs
add
add
add
add
repz
push
clc
nop
nop
nop
nop
jae
add
add
add
add
xlat
shlb
clc
nop
nop
nop
nop
jae
sbb
repz
dec
pop
add
imul
or
ret
dec
add
add
cld
add
add
add
decl
nop
nop
nop
jae
add
xor
rcl
push
cmp
call
cs
in
add
inc
pop
add
subl
nop
push
mov
leave
cs
stos
mov
jp
add
adc
nop
nop
nop
nop
jae
sbb
add
dec
or
add
and
in
add
cmp
repnz
mulb
sub
mov
pushf
add
xchg
push
mov
add
mov
add
inc
mov
add
and
mov
clc
nop
nop
nop
nop
jae
adc
jbe
inc
jbe
fistpl
clc
nop
nop
nop
nop
jae
add
pop
cmp
add
icebp
push
push
mov
xchg
ret
add
jno
add
fldl
std
add
stc
pop
pop
clc
nop
nop
nop
nop
jae
jl
stos
addl
add
push
clc
nop
nop
nop
nop
jae
add
and
add
mov
les
push
mov
add
add
call
mov
sbb
lcall
jno
clc
nop
nop
nop
nop
jae
std
add
push
push
sbb
mov
les
add
add
cs
jbe
aad
jl
inc
add
loope
incl
add
nop
nop
nop
nop
jae
add
std
imul
add
jno
lcall
hlt
adcl
push
aad
fcmovbe
mov
push
mov
leave
cs
fldl
xlat
enter
add
aad
mov
call
inc
add
dec
stc
add
pop
push
sub
push
clc
nop
nop
nop
nop
jae
mov
inc
add
add
add
test
push
mov
xchg
ret
inc
cld
add
add
and
xchg
nop
nop
nop
nop
jae
push
add
popa
cmp
inc
pop
adc
cmpl
clc
nop
nop
nop
nop
jae
and
hlt
add
adc
add
inc
add
clc
nop
nop
nop
nop
jae
adc
repz
cltd
add
fs
pop
push
mov
xchg
ret
sbb
xor
in
add
popf
dec
inc
stc
dec
cltd
add
clc
nop
nop
nop
nop
jae
mov
mov
add
outsl
pop
ds
call
push
mov
xchg
ret
add
add
iret
dec
add
add
mov
mov
xchg
ret
pop
add
add
sarb
outsl
repz
add
loopne
xor
clc
nop
nop
nop
nop
jae
add
add
in
jbe
adc
nop
push
mov
leave
cs
add
add
add
adc
add
call
cs
sbb
inc
inc
add
adcl
nop
jae
add
pop
xchg
adc
popa
xor
nop
nop
jae
repz
mov
cmp
fistpll
clc
nop
nop
nop
nop
jae
pop
add
ja
repz
mov
clc
nop
nop
nop
nop
jae
add
dec
popa
add
add
add
mov
leave
cs
sub
add
add
jae
rorl
mov
xchg
ret
pop
push
insb
push
mov
add
add
mov
mov
xor
aad
add
add
aam
add
pop
add
pop
mov
push
clc
nop
nop
nop
nop
jae
push
adcl
aad
hlt
mov
xor
loope
jmp
nop
nop
jae
jbe
rolb
add
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
mov
sti
fs
add
mov
rcr
add
add
cmpsl
fistpl
clc
nop
nop
nop
nop
jae
cmp
add
add
add
add
adc
nop
nop
nop
nop
jae
inc
add
add
dec
add
push
xor
nop
nop
jae
push
add
jp
add
pop
repz
lcall
mov
xchg
ret
add
adc
add
dec
add
add
xor
push
mov
xchg
ret
xlat
add
add
mov
in
sbb
inc
mov
mov
or
ret
aad
add
cltd
add
add
in
cld
clc
nop
nop
nop
nop
jae
add
dec
mov
add
lcall
adc
push
mov
leave
cs
pop
add
add
pop
and
faddl
push
clc
nop
nop
nop
nop
jae
add
add
add
add
push
pop
push
add
jmp
leave
cs
add
push
add
outsl
xor
pop
push
mov
xchg
ret
xlat
adc
mov
pop
mov
adc
adc
nop
nop
jae
add
jl
pop
push
add
xlat
mov
clc
nop
nop
nop
nop
jae
add
xchg
hlt
add
repz
popf
add
in
out
add
lcall
add
xor
mov
clc
nop
nop
nop
nop
jae
insb
frstor
add
add
mov
lret
push
nop
push
mov
leave
cs
add
add
add
adc
add
rcll
nop
nop
nop
nop
jae
inc
add
iret
add
add
stos
adc
sbb
mov
xchg
ret
jno
add
repz
dec
add
nop
nop
nop
nop
jae
lcall
add
mov
call
cs
or
jl
add
mov
mov
xchg
pop
add
mov
inc
xor
lods
mov
add
jne
clc
nop
nop
nop
nop
jae
add
add
orl
in
leave
cs
enter
mov
add
push
pop
nop
push
mov
leave
cs
add
jp
add
push
cltd
adc
add
xlat
popa
clc
nop
nop
nop
nop
jae
push
jp
dec
pusha
cmp
cltd
add
pop
push
push
mov
xchg
ret
inc
inc
popa
in
add
push
add
adc
jl
jne
clc
nop
nop
nop
nop
jae
cld
jbe
add
cmpl
jae
pop
inc
add
ja
add
add
add
pop
fistpl
push
mov
xchg
ret
add
add
add
add
jp
xor
xchg
mov
clc
nop
nop
nop
nop
jae
jbe
mov
dec
rclb
xlat
mov
pop
mov
clc
nop
nop
nop
nop
jae
add
jbe
stc
xor
xor
cltd
adc
push
mov
add
add
add
add
xchg
dec
add
mov
add
add
clc
dec
jmp
add
enter
add
lcall
hlt
xor
pusha
enter
and
fwait
push
mov
xchg
ret
add
lcall
jp
add
mov
xchg
ret
add
add
fisttpll
add
cmp
add
jnp
add
enter
xchg
ret
jno
add
xlat
add
add
sbb
sub
nop
nop
nop
nop
jae
add
stc
hlt
mov
mov
repz
cmp
push
clc
nop
nop
nop
nop
jae
push
push
add
adc
cmp
or
push
clc
nop
nop
nop
nop
jae
add
outsl
pusha
and
addl
xor
nop
nop
nop
nop
jae
mov
add
cmp
add
stos
push
mov
xchg
ret
add
add
add
mov
clc
nop
nop
nop
nop
jae
repz
add
add
xlat
add
mov
push
mov
xchg
ret
repz
add
add
pop
pop
push
dec
add
pop
lea
push
mov
xchg
ret
mov
and
add
add
push
clc
nop
nop
nop
nop
jae
add
add
add
add
xor
nop
nop
nop
nop
jae
enter
adc
push
or
dec
add
push
add
nop
nop
nop
jae
add
pusha
jbe
add
mov
cmpl
nop
push
mov
leave
cs
sbb
cld
addl
mov
clc
nop
nop
nop
nop
jae
add
add
pusha
dec
rolb
add
and
pushl
add
cltd
lcall
jp
add
add
in
leave
cs
popa
add
xlat
add
add
add
add
es
sbb
nop
jae
add
mov
mov
clc
nop
nop
nop
nop
jae
add
push
lcall
adc
mov
add
sub
and
add
xchg
add
mov
add
sbb
add
pop
leave
mov
popa
in
and
inc
cmp
mov
out
cvttps2pi
adc
pusha
jae
or
popa
lods
xchg
lret
pop
sti
imul
inc
push
repz
inc
pusha
test
xchg
dec
push
shrb
sbb
cltd
mov
mov
jmp
sahf
pop
fcmove
mov
sbb
adcb
jns
inc
mov
test
orb
in
orb
sarl
dec
lahf
and
aaa
cmc
sub
jmp
mov
cmpsl
inc
ret
mov
xor
inc
addr16
lahf
fidivrs
cltd
and
push
cli
ret
sbb
loopne
sub
fnstsw
aad
int
bnd
les
cmpsl
jb
ja
stos
std
in
ret
repnz
pop
mov
mov
ffreep
jmp
push
iret
stos
loope
orl
movsl
xchg
js
inc
jmp
mov
andl
mov
mov
inc
pop
add
cwtl
push
add
pop
mov
mov
bound
dec
addr16
fs
addr16
arpl
add
jp
les
cmp
adc
shrb
or
clc
popa
les
hlt
lea
mov
xor
and
shl
cmovl
pushf
push
pusha
mov
inc
cmp
mov
shrb
sub
test
lock
inc
test
fdivrs
into
pushf
sub
cs
lea
sub
and
arpl
sbb
movsl
jns
call
push
dec
mov
mov
jge
daa
into
ficompl
cltd
lret
fwait
aam
arpl
insb
sub
icebp
mov
jne
hlt
xchg
dec
adc
mov
lds
mov
fadds
icebp
addr16
jge
mov
shlb
add
stos
and
push
xchg
testl
xor
or
testb
fwait
repnz
loopne
inc
insl
iret
add
faddl
mov
in
mov
lahf
push
rcll
call
fmuls
and
fstl
hlt
ds
push
fxch
fs
and
repnz
scas
mov
sbb
jge
cmp
and
cmp
mov
aam
adc
dec
inc
fs
jno
clc
xor
arpl
loope
xchg
std
ds
aaa
icebp
mov
jmp
mov
js
adc
scas
jne
clc
loopne
daa
sub
pop
xchg
jae
dec
push
aas
inc
insl
push
std
pushl
das
dec
sbb
add
js
cmp
loope
call
add
test
dec
xchg
mov
inc
stos
dec
leave
stos
and
jge
movsl
sbb
pusha
lret
leave
jl
mov
and
xchg
outsb
cmp
sbb
enter
mov
and
jno
adc
push
pop
dec
cmp
push
xchg
hlt
xchg
cmp
adc
cmp
mov
out
je
addb
push
scas
xorl
test
rorl
test
js
sub
in
scas
cmpsb
ret
pop
and
push
mov
mov
rolb
in
insb
sbb
pop
add
fs
or
or
insb
cmp
mov
rorl
sbb
cld
out
or
mov
sbb
movsl
push
pushf
inc
mov
jne
lret
mov
mov
jl
loope
jl
pop
pop
mov
lock
sbb
xor
lds
loopne
incl
jne
shlb
push
xlat
addr16
cli
int
ss
les
push
movsb
sbb
mov
jo
and
pusha
imul
test
xchg
cwtl
pusha
dec
orb
sub
dec
mov
add
nop
loopne
and
into
sub
pop
lods
aad
lahf
add
rcl
mov
pop
inc
push
scas
out
sub
mov
aaa
neg
xor
pushf
call
jp
stos
mov
inc
pusha
pop
data16
addr16
xor
fs
adc
inc
mov
loop
pop
movsl
pop
pushf
cwtl
mov
jp
jne
pop
or
mov
lock
push
cmp
pop
xor
enter
nop
push
inc
adc
loopne
out
mov
cmp
into
or
mov
cmpsb
jl
pusha
sbb
ret
sahf
sub
mov
addb
faddl
int
scas
inc
cmc
jmp
dec
popf
stc
push
int3
pusha
mov
sbb
sub
fcmovu
and
pop
ret
in
fsubrp
sub
andb
inc
incb
mov
xlat
push
dec
or
xchg
cltd
jo
rcl
sbb
int3
mov
inc
push
inc
int
dec
in
adc
popa
push
shl
and
xlat
inc
pop
cs
mov
push
test
out
out
in
inc
sbb
pop
daa
scas
and
loop
int3
mov
pop
arpl
cmpsl
jg
lock
je
insb
je
mov
mov
sbb
std
outsl
in
ljmp
shl
cmc
outsb
mov
mov
xchg
int
out
insb
pop
in
gs
imull
in
sbbb
mov
pop
cmpsb
insl
mov
incb
es
pmaxsw
out
outsl
test
xchg
adc
push
add
inc
js
add
cmp
cmc
rorb
push
in
mov
mov
add
enter
daa
cmpsl
test
test
aas
cmpb
cmp
pusha
es
out
imul
xor
dec
and
mov
jge
sti
sahf
mov
adc
inc
cmp
and
push
sub
xchg
xor
cmp
sbb
pop
mov
dec
or
pop
mov
push
nop
adc
xchg
inc
popf
loopne
ret
sti
loope
pop
xor
lods
shr
repz
push
xor
aam
addb
aad
vpaddq
mov
inc
sbb
adc
punpcklbw
sar
pop
xchg
sub
inc
mov
lods
add
add
nop
mov
adc
insl
inc
aad
xchg
mov
mov
sub
dec
pop
adc
subb
scas
ret
cmp
pop
orb
fadd
lods
out
dec
inc
pop
push
fsubs
and
enter
rorl
movsl
shl
or
adc
mov
pop
aam
and
outsb
jle
addr16
add
add
loopne
aas
mov
rol
icebp
lret
push
out
shll
mov
mov
sbb
aad
ret
cld
or
mov
cmp
insl
jae
push
mov
sbb
push
pop
push
jb
mov
sub
mov
sub
adcb
ljmp
data16
out
add
dec
bound
ret
lea
mov
xorl
leave
ficoml
and
sub
movsb
dec
outsl
mov
pop
mov
xchg
mov
test
jle
in
mov
inc
adc
and
dec
cmp
int3
dec
and
push
int
gs
cmp
outsl
loop
ljmp
int
cmc
arpl
mov
mov
fcomps
cmpsb
ret
sbb
add
jns
mov
mov
sbb
add
imul
leave
jle
fldl
fisubs
or
pusha
mov
pop
sub
jb
xchg
pop
mov
jge
jl
pop
pop
adc
in
lods
shlb
movsl
mov
jle
lret
pop
stc
lret
das
popf
add
mov
xchg
adc
dec
jmp
ljmp
cs
jns
sub
cmc
add
inc
in
out
adc
pop
scas
fld
clc
pop
mov
loop
cld
lods
sub
lock
fcomi
loopne
test
insb
and
in
popa
push
xchg
jmp
add
push
leave
sub
in
sub
inc
xchg
cmp
pop
xorb
pop
xor
cmp
loopne
dec
pop
pop
or
lds
scas
ljmp
pop
inc
add
jecxz,pt
shrl
movsl
or
mov
jle
sub
ret
mov
inc
mov
shl
addr16
test
mov
pop
xchg
in
jo
call
cmpsb
lea
add
loopne
add
addr16
pop
dec
jge
sub
xor
mov
push
pop
xchg
push
mov
adc
cwtl
xchg
and
das
sbb
adc
pcmpgtd
mov
call
mov
mov
or
inc
stos
mov
sbb
inc
ljmp
ljmp
mov
lock
adc
sarl
jo
clc
adc
pusha
adc
mov
sbb
out
sbb
test
and
adc
mov
cmp
add
and
pop
mov
call
cmc
push
push
xchg
and
shrl
test
mov
mov
sub
push
pop
dec
xor
inc
add
or
shl
jo
fcmovnbe
xchg
jno
stos
enter
addr16
pop
imul
sub
rolb
add
mov
outsb
imul
pop
orl
and
sub
cmpl
shl
pushf
xchg
and
mov
adc
stc
test
ficompl
mov
iret
mov
in
sub
sbb
js
xor
pop
inc
lock
imull
xchg
outsl
and
dec
mov
jmp
jmp
jp
rcl
movsb
add
pop
pusha
sbb
mov
out
push
and
mov
cmpsl
fldcw
push
rcll
addr16
mov
sub
or
stos
inc
jne
mov
mov
pop
decl
mov
cltd
mov
faddl
out
cmp
sbb
cmpsl
lret
mov
or
cmpsl
xor
xchg
xchg
sub
xchg
pop
add
pusha
inc
cmp
shl
pop
repnz
xor
test
js
pushf
js
and
pop
iret
in
push
push
iret
fbld
pop
add
js
shlb
mov
enter
int
clc
mov
sahf
xchg
jecxz
mov
mov
je
push
jmp
pusha
pop
add
pushf
mov
ret
mov
aas
push
ret
xchg
pop
fcmove
and
jle
dec
ss
add
in
sbbb
test
xchg
cltd
and
sub
scas
sbb
sbb
add
mov
scas
sbb
add
mov
inc
imul
add
andb
sti
jb
mov
aad
push
adc
jb
loop
sub
mov
pop
out
hlt
pop
sahf
rolb
jne
repz
cmp
cmp
fildl
pusha
mov
dec
add
mulb
movsb
mov
ficompl
inc
lods
xor
les
mov
lods
pusha
mov
enter
cmp
and
mov
cmc
or
add
fdivl
shlb
push
cs
pop
testb
andb
inc
or
inc
out
gs
mov
sbb
mov
mov
ljmp
push
daa
loop
adc
ds
mov
das
iret
pop
xchg
push
xchg
fcompl
outsb
sbb
jge
icebp
xor
jecxz
out
pop
movsl
jmp
pop
push
jno
cmpsl
movb
dec
sti
dec
push
jecxz
into
test
repnz
jbe
lret
daa
lock
cmp
dec
aaa
mov
inc
sbb
cmp
notb
sub
fisubrs
mov
outsb
lock
adc
dec
shl
lret
aas
fnstcw
nop
dec
rcrb
add
rcr
sub
fldl
sub
cmc
adc
add
sub
mov
arpl
scas
jnp
shlb
in
cmpb
into
mov
mov
fistl
mov
mov
sub
loopne
inc
cmp
mov
adc
popa
cmp
xchg
int
adc
rolb
cmp
jnp
jmp
leave
pop
insb
addr16
test
push
mov
mov
rorb
lret
inc
xor
hlt
loopne
xchg
leave
in
push
cltd
push
loope
lds
lret
divb
inc
xor
inc
inc
sbb
xchg
sarb
jno
mov
aas
mov
pusha
into
cmc
stos
dec
push
add
js
hlt
jo
adc
shlb
popl
pusha
xlat
repz
aad
inc
mov
das
xlat
inc
nop
pushf
and
xchg
dec
sbb
sub
movsl
es
adc
in
lea
call
lea
or
add
movsl
loopne
inc
jno
mov
pop
addr16
gs
pop
mov
mull
jnp
sub
divb
push
ret
ja
in
jnp
shl
iret
sbb
outsl
add
sbbb
mov
sub
add
lods
movsl
sub
inc
dec
aad
or
aas
andb
sbb
cld
popf
xor
pop
dec
xor
int3
in
xor
dec
mov
add
or
out
push
test
xor
add
and
jnp
xor
mov
sub
mov
shl
data16
lea
jno
xchg
add
shlb
xchg
add
in
loopne
cwtl
in
inc
sbb
es
push
xchg
adc
or
jl
cmc
mov
pusha
add
shr
ficompl
scas
fisubrl
dec
push
loopne
push
mov
inc
mov
call
cs
add
push
fldl2e
push
scas
movsb
xor
mov
sub
fimuls
inc
push
in
mov
mov
adc
inc
in
adc
sarb
jecxz
add
popa
sbb
movsb
mov
out
jnp
mov
mov
cmp
add
adc
mov
mov
mov
dec
pop
dec
dec
mov
fisttps
pop
in
outsb
fimuls
add
cltd
dec
xor
and
js
sub
pusha
mov
sar
mov
nop
add
xor
icebp
mov
or
add
add
je
lahf
clc
push
sbb
aas
aad
daa
mov
loopne
add
iret
lods
loopne
out
cmp
mov
lcall
pop
xchg
mov
fucomip
push
add
push
mov
popl
stc
repnz
add
push
outsl
dec
fimuls
and
inc
stos
jnp
ja
or
mov
hlt
xor
push
adc
rol
shlb
test
movsl
xchg
jl
pop
jmp
jnp
xchg
add
leave
adc
fiadds
xor
push
sub
pop
cmp
pusha
sub
call
push
adc
inc
cli
push
jecxz
jp
mov
repnz
fisubl
or
aad
bnd
add
add
push
aaa
loopne
js
je
imul
mov
out
scas
push
orb
stos
rcrl
in
cmpsl
mov
movb
sub
sub
cmp
and
and
xorb
in
cmp
daa
inc
aad
outsl
ret
jns
mov
int3
xchg
push
adc
push
popf
dec
jb
lret
add
outsl
imul
arpl
cmp
stos
out
pop
jne
in
pop
shl
clc
ss
push
aam
mov
notb
pop
sub
js
push
push
repnz
movsb
aam
jbe
lock
into
les
ret
jns
xchg
cmp
sub
out
clc
repnz
jne
test
jl
and
xchg
dec
jmp
cltd
jecxz
push
push
mov
pushl
pop
sti
fnstenv
xchg
clc
pop
sti
enter
sbb
add
push
sti
shrl
mov
sbb
pop
stos
lcall
xchg
mov
int
stos
sbb
mov
pushl
rclb
pusha
jecxz
jae
jmp
dec
pushf
add
pop
or
add
iret
sbb
cmp
adc
lret
sub
ret
mov
pop
mov
out
popf
jb
lock
outsb
shl
xchg
cmp
mov
jnp
xor
test
sbb
pusha
add
adcb
mov
mov
scas
xlat
xor
std
xchg
int3
add
ss
hlt
out
jp
cmp
jg
inc
fistpll
sarb
or
rcrl
cmp
decl
ljmp
jmp
cmpsl
sub
inc
mull
mov
sub
movsb
pusha
rolb
and
lret
or
popa
lds
mov
push
ss
pop
jl
movsb
in
aad
xchg
imul
sahf
dec
or
xchg
stos
lods
lds
push
pushf
pusha
ss
push
jge
sbb
dec
das
pop
popf
sti
divb
jbe
pop
xor
daa
dec
loop
mov
xor
lret
sbb
adc
ror
js
cmc
lods
or
sahf
bound
sahf
or
sarl
in
pop
daa
mov
mov
cmpsb
cmpb
add
popa
enter
test
out
hlt
sti
loop
pop
push
pop
pushf
sbb
lock
mov
xor
pop
stc
mov
sbb
cltd
mov
movsb
aam
add
push
in
jge
popa
into
addr16
sarl
popf
aaa
daa
icebp
arpl
fiadds
in
sbb
pusha
scas
cmp
lock
xchg
dec
lcall
lods
loopne
loopne
mull
cmp
pusha
lea
dec
pop
das
call
pop
sub
test
pop
and
lahf
stos
mov
inc
ret
test
sub
ljmp
in
bnd
pop
or
fiaddl
mov
pop
xor
sti
aaa
xchg
jle
pushf
pushf
pusha
xor
sub
sahf
adc
inc
pop
out
mov
adc
inc
jne
out
mov
mov
adc
out
repz
movsl
aam
and
push
mov
or
xor
jne
mov
in
scas
setge
jp
ss
add
pop
jbe
adc
mov
sbb
add
sub
rcll
jl
adc
add
fimull
or
ljmp
lods
sub
js
rcll
loopne
sub
sbb
inc
jbe
push
sbbb
cwtl
mov
jle
dec
pusha
pop
sbb
int3
outsb
xchg
lock
add
mov
in
aaa
adc
fs
adc
mov
jne
adc
inc
es
pop
and
cli
cmpsb
daa
mov
fisubs
dec
cmp
orb
cmp
pushf
mov
dec
sahf
lock
pop
jmp
lock
clc
sbb
push
adc
cmp
mov
dec
xor
push
xor
jmp
repz
dec
daa
sub
icebp
dec
adc
loopne
push
mov
push
jb
adc
enter
test
jg
pop
adcl
popa
ljmp
push
or
mov
sbb
jns
push
lcall
loope
jl
mov
lret
lcall
fldenv
insb
sbb
and
jno
jno
clc
pusha
lret
ss
xor
inc
jmp
std
adc
mov
lret
pop
dec
adc
subb
and
add
mov
lcall
daa
sysexit
loopne
out
and
arpl
out
cltd
lea
lock
cmpsl
fwait
adc
repz
je
xchg
adc
inc
fwait
movsb
jno
in
inc
pop
cltd
pop
adc
rclb
dec
add
cs
and
lods
iret
jmp
jp
inc
int
stos
and
or
shr
mov
cld
mov
ja
xor
aam
fucomi
cmp
cmp
out
dec
not
dec
pop
xchg
pop
mov
in
add
rol
and
ss
mov
and
popa
test
push
inc
lahf
lds
std
test
pushw
fdiv
scas
and
in
xor
dec
dec
jae
mov
mov
sbb
cli
shlb
addl
push
test
push
sarl
pusha
adc
add
dec
in
aas
xchg
icebp
jecxz
jge
cmc
clc
mov
subb
sub
inc
jne
mov
push
mov
rorb
cli
lret
inc
repnz
mov
cmp
in
out
leave
fcompl
icebp
cmp
jle
sub
fildll
inc
popa
cli
push
mov
adc
lss
and
xor
mov
aaa
stos
mov
and
inc
jnp
or
sbbb
repnz
pusha
cmp
int3
mov
sysexit
pop
sub
mov
push
cmpsb
jnp
arpl
and
push
or
lret
lods
push
push
pop
rcrb
push
mov
pop
pushf
dec
loopne
and
lcall
push
rclb
cmp
jbe
jo
cli
bound
pusha
sbb
es
popf
adc
add
push
subl
cmp
add
inc
and
das
xor
out
cld
lcall
ljmp
mov
fnstsw
lock
or
fbld
mov
pop
dec
xchg
fsubs
dec
xchg
sub
mov
fs
fisubs
mov
pusha
inc
cmp
mov
and
into
xchg
dec
inc
xlat
xor
in
sbb
loopne
cmp
test
and
cli
aas
inc
jl
xor
jge
and
shrb
jae
mov
sbb
add
rolb
stos
mov
dec
test
mov
xchg
leave
adc
pop
or
adc
daa
pop
fdivrp
je
fisubrl
push
pushf
test
test
and
cli
inc
pop
lods
mov
mov
imul
hlt
fdivrl
and
push
outsb
push
out
sbb
jo
fnstenv
int3
rolb
out
into
enter
add
add
or
cli
cli
out
test
call
dec
mov
fstpt
insb
and
mov
sti
sub
xchg
notl
es
movsl
arpl
mov
cld
test
scas
inc
call
rolb
out
jecxz
loope
jo
dec
rolb
cmpsb
xor
or
sbb
inc
mov
insb
mov
fistl
sub
mov
push
cmp
xchg
mov
sub
shll
sub
push
push
mov
ja
xor
and
fnstenv
imul
push
mov
enter
subl
ret
and
push
sbb
push
jns,pn
insl
sar
mov
push
mov
xchg
in
cwtl
pushf
add
aas
out
je
push
fists
mov
popa
sbb
in
call
dec
sbb
sahf
ret
lret
out
aaa
fstpl
pop
mov
popl
mov
sub
mov
dec
cmc
jo
js
fucomp
pop
mov
xchg
test
mov
stc
daa
inc
sbb
xchg
inc
mov
inc
and
andb
sub
lds
xor
leave
rorl
and
pop
repz
mov
sahf
mov
aam
or
mov
mov
popf
js
dec
inc
pop
mov
lock
cmp
pop
mov
cmpsb
and
js
push
sbb
cmp
push
xchg
push
dec
pusha
sbb
rcrb
pop
xchg
pop
mov
sarb
in
push
push
sbb
mov
movsb
mov
fimuls
lods
rclb
add
pop
or
dec
pop
sti
mov
pusha
cmpsb
pusha
push
sbb
push
xchg
or
mov
pop
test
sahf
mov
cmp
mov
dec
int3
push
pusha
adc
mov
in
rolb
push
enter
pop
mov
lret
cmp
into
das
xor
pop
jne
jmp
xor
ret
cmp
ss
sbb
xchg
imul
sub
push
mov
std
fidivl
mov
out
insl
mov
mov
mov
fxch
scas
dec
imul
jae
xchg
push
movsb
add
cltd
xor
xor
cmp
inc
stc
arpl
test
imul
inc
movsb
sbbb
stos
movsl
cmpsb
leave
xchg
or
inc
adc
jnp
in
or
scas
in
cmpsl
jle
sbb
fisubl
mov
in
lret
pop
and
in
pop
mov
or
sbb
sahf
dec
xor
in
and
adc
mov
movsl
push
or
or
icebp
or
jo
mov
out
into
fnsave
cmp
jg
es
push
inc
mov
push
push
adc
outsl
xor
add
push
jle
jae
fwait
sbb
mov
mov
jp
test
dec
xlat
and
jno
push
xchg
hlt
pusha
daa
sub
pop
lock
fidivs
mov
mov
inc
lods
ret
js
pop
fwait
adc
loopne
cmp
enter
adc
add
and
rcll
leave
repnz
sar
xchg
push
les
mov
sbb
and
imul
pop
mov
xor
js
lret
rorl
adc
insl
les
or
and
fs
loopne
push
cmpsb
dec
mov
lahf
scas
ds
sbb
jmp
test
jg
adc
mov
and
dec
sbb
xchg
addb
add
inc
xor
in
lret
in
sbb
jbe
repnz
adc
cmc
aad
jg
dec
clc
sti
and
sub
cmp
out
pushf
adc
jl
add
add
pop
notb
out
lahf
ja
out
ss
jl
aaa
cmp
or
mov
fidivrl
and
lock
pusha
cmpsb
sbb
pusha
cmc
dec
fcomi
fs
repnz
mov
jb
push
mov
xlat
fdivs
daa
inc
sahf
xchg
sub
jge
inc
jno
push
xchg
ficoms
cmpb
loopne
cmp
push
fcoml
fldl
sbb
das
inc
repz
mov
mov
bound
xchg
or
lods
loopne
mov
jl
fcmovnbe
sti
jae
addr16
lret
add
add
mov
sbb
cltd
push
loopne
pop
sarl
imul
push
push
jnp
lahf
sub
dec
mov
push
jne
cltd
in
cmp
xor
fdiv
mov
divl
nop
mov
ret
push
mov
icebp
bound
pusha
bound
int
xorb
adc
push
mov
jb
in
gs
pusha
push
movsl
in
xchg
rolb
cmpsl
mov
jb
arpl
mov
dec
sbb
xor
gs
mov
sahf
cmpsl
add
pop
mov
sbb
xchg
loop
pop
pushw
pop
test
pop
inc
dec
xor
aad
int3
ficomps
xorb
adc
mov
xor
pop
addr16
sahf
cltd
icebp
mov
mov
inc
fadd
lahf
aad
xchg
test
imul
and
mov
jg
jmp
cwtl
sarb
add
outsl
in
outsb
lret
push
inc
cmp
jmp
cltd
add
mov
orb
xchg
out
loopne
nop
push
loopne
pop
mov
jne
aaa
flds
out
push
lock
rolb
push
mov
decl
in
jae
and
lea
mov
bound
call
aaa
dec
xorb
pop
lret
subb
jns
jmp
cli
subl
mov
mov
or
and
cmpsl
and
scas
jle
push
push
xor
in
fsubs
mov
orb
rclb
sbb
and
fs
inc
pushf
xchg
rorb
pushf
and
insl
add
or
xlat
push
mov
adc
insb
stos
xabort
hlt
aad
pop
insb
imul
addb
cmp
jmp
dec
jge
popf
or
sub
adcb
bound
jno
jb
arpl
lahf
add
test
inc
or
rclb
jg
sbb
fiaddl
mov
xchg
orb
adc
jnp
pop
shl
int3
inc
jmp
xchg
pop
loopne
imul
sub
sub
xor
shrl
sbbb
cs
jns
out
sarl
or
bound
test
dec
pushf
shlb
rcll
stos
jae
mov
adc
or
jle
pop
inc
xor
or
test
out
mov
adc
adc
inc
and
add
cmp
sbb
loopne
mov
dec
inc
fcmovnu
jae
add
mov
and
jle
repnz
mov
sarl
fwait
sub
xor
sti
fsubrs
dec
pop
xor
fs
mov
pop
mov
popf
fadds
jmp
std
pop
sbb
sub
and
fidivrs
lret
add
push
stc
lea
mov
les
popa
push
or
testl
out
or
mov
sub
ss
dec
mov
int3
push
lock
mov
movsb
aas
adc
insl
or
fcom
lods
fsincos
nop
insb
add
fwait
xor
mov
les
xchg
pop
sbb
xchg
xor
pop
add
inc
rorl
mov
jns
push
inc
or
push
cmp
lock
cmp
pop
push
push
cmpsl
ret
sbb
insb
jbe
ja
and
mov
mov
ljmp
popf
jp
ja
push
cmp
rorb
mov
sahf
xor
cmp
cltd
jb
paddsb
outsl
or
push
mov
add
cmp
and
mov
cmp
add
loopne
mov
enter
test
enter
test
dec
sub
inc
cltd
pop
or
mov
js
or
pop
std
lods
dec
xchg
enter
add
mov
call
adc
fwait
stc
xor
xor
xor
fmull
lret
and
in
stos
jno
or
dec
and
ret
inc
mov
inc
jne
cmpsl
addr16
iret
sbb
sbb
sub
push
jle
test
in
outsl
gs
movsl
movsl
repz
adc
daa
sar
jno,pn
inc
fs
mov
mov
int
sub
pusha
popa
and
movsl
cs
fidivrs
mov
mov
xor
mov
pusha
mov
cmp
pop
popf
in
sbb
lods
or
sbb
out
sahf
popl
out
dec
push
pop
or
inc
inc
xor
xchg
sub
outsl
sbb
cmp
iret
cld
push
cs
adc
xor
cmp
sbb
andb
fadd
out
shll
test
loopne
and
pop
or
mov
mov
jl
icebp
fidivrs
cmp
int
fwait
orl
fildl
aam
into
loopne
jmp
push
lock
push
loope
mov
cmp
in
or
negb
sahf
lret
mov
out
mov
dec
xor
pushf
xchg
inc
add
ret
jle
clc
mov
mov
and
shl
mov
mov
mov
subb
mov
adc
stos
sub
cmp
mov
inc
rclb
or
loopne
xchg
dec
dec
add
cltd
sub
mov
jno
sub
arpl
andb
lds
sbb
roll
mov
pusha
addl
mov
add
mov
inc
data16
inc
out
mov
jmp
add
jbe
xchg
or
aaa
mov
xlat
and
jp
es
pop
sub
aam
mov
vpsrlq
and
xor
and
sahf
cmp
xor
jo
mov
jo
cmpl
stos
bound
test
int
lock
pop
jo
mov
cmp
cld
jo
ret
int3
xor
add
or
andb
mov
mov
fcomps
xchg
lahf
adc
mov
pusha
sub
add
ret
cld
xor
repnz
fwait
repz
mov
xor
jnp
and
mov
mov
std
out
ficompl
xchg
inc
xlat
push
out
sbb
lret
dec
data16
loop
push
sub
mov
xchg
mov
rclb
add
pop
rcrb
jmp
mov
call
imul
push
imul
inc
out
ret
fidivs
xlat
jecxz
testl
push
sub
sub
adc
cld
jne
ja
loope
cmpsl
ret
xchg
mov
or
xchg
in
adc
cli
pop
daa
fnsave
jecxz
push
dec
sbb
aas
fdiv
and
jg
rolb
add
lret
rcrb
pushl
xchg
inc
fwait
in
lock
jl
shlb
sbb
stc
notl
pandn
xchg
into
xor
pop
pop
fldl
cmpsl
sbbb
adc
and
in
cld
sbb
add
adc
and
jns
jae
jae
sti
xchg
in
not
jge
cmp
add
movsb
xchg
push
sub
sbb
mulb
xchg
jns
cmp
loopne
outsb
ss
ficoms
pop
repz
pop
lret
fcoms
outsb
inc
cwtl
mov
xor
and
and
push
or
scas
je
frstor
lods
mov
add
andb
pop
inc
divl
push
outsl
nop
mov
pop
cli
dec
sahf
sub
or
inc
gs
mov
mov
sbb
lahf
sub
outsl
arpl
push
inc
lret
sahf
mov
into
pop
lea
mov
jle
loop
mov
fs
flds
sub
movsl
push
insl
inc
stos
les
scas
loop
loop
pop
and
pop
mov
lock
mov
sub
inc
cli
pushl
mov
int3
jne
aaa
mov
ret
stc
or
int3
and
cmc
cld
jl
mov
adc
std
in
push
jle
js
push
pop
push
lds
mov
dec
sbb
mov
push
pop
jo
cmpsl
xlat
push
cmp
jo
push
insl
data16
cltd
fs
add
mov
jl
add
jnp
orb
and
dec
dec
scas
xor
lea
jae
icebp
or
rcrl
xlat
stc
shl
dec
test
cltd
cwtl
cmp
sarl
add
shrb
cmp
cltd
cmpsb
xorl
push
jmp
lahf
mov
test
cmp
inc
add
in
add
pop
das
sub
xchg
aam
comiss
cmpsb
test
add
lret
cltd
jecxz
dec
loopne
data16
fistpl
mov
hlt
or
adc
jo
stos
sbb
dec
jno
fisubrs
fimull
sahf
dec
pop
cmpsb
mov
stos
push
sbb
or
mov
ret
push
inc
xor
lock
mov
into
in
push
ss
xor
or
lock
subl
cmp
push
pusha
sarl
mov
cmpsl
int
mov
nopl
inc
aad
cmpsb
repnz
pop
sarb
das
lock
imull
pop
roll
stos
xchg
mov
push
into
outsl
push
pop
cmp
fidivrl
js
mov
inc
sub
aam
cmp
aam
xchg
movsb
mov
test
adc
shrb
adc
mov
jnp
hlt
clc
add
loop
jge
inc
push
or
jnp
div
push
mov
xor
mov
or
inc
fsts
loopne
fistl
xchg
cld
jp
sbb
cltd
loope
clc
add
mov
sub
sti
xchg
or
mov
push
mov
xchg
mov
or
pusha
sbb
loopne
sbb
sarb
orl
dec
vpextrw
lds
hlt
aas
cmc
cmp
icebp
sbb
inc
lods
cmp
lock
and
mov
push
sbb
cmp
dec
and
cwtl
mov
repnz
add
sbb
and
xor
lret
xchg
sbb
push
sbb
adc
andb
mov
cmp
insb
mov
push
or
sub
mov
sti
mov
inc
sbb
add
mov
shrl
inc
pop
lds
roll
pop
sbb
jecxz
adc
pusha
inc
or
addr16
add
stos
aaa
lahf
mov
fsubrl
jns
xor
pop
adc
shr
pusha
pop
xchg
pusha
mov
push
mov
dec
cltd
sbb
jo
dec
adc
mov
adc
jo
lods
pusha
jg
es
notl
or
mov
mov
cmc
pop
mov
out
adcl
push
fadd
mov
and
in
jne
popa
sti
aad
mov
js
outsb
leave
jbe
pcmpeqd
sub
cmc
daa
pop
xor
add
bound
mov
mov
inc
sarl
roll
inc
sub
f2xm1
mov
test
shl
xchg
pop
shlb
sar
sbb
add
push
lods
jae
out
ja
orl
pop
pop
dec
push
mov
mov
lahf
lock
mov
sarb
std
add
out
mov
mov
xorb
sub
inc
shlb
cmp
leave
clc
jbe
loopne
or
mov
mulb
daa
jne
shl
lds
push
cld
in
lock
jg
add
test
and
sub
andb
or
xor
xchg
pop
inc
mov
xchg
shlb
adc
lret
mov
adc
pusha
inc
stc
push
jl
xor
jge
cmpl
sbb
add
push
loopne
idivl
sbb
fidivrl
add
shll
icebp
jmp
push
inc
pushf
dec
pusha
pop
fistpl
and
sub
adc
sbb
xorb
ljmp
lods
lret
and
adc
and
dec
dec
rol
dec
inc
sub
push
xor
and
test
jp
adc
and
jge,pt
mov
cli
arpl
pop
adc
inc
pop
mov
andb
movb
and
leave
push
mov
push
xor
imul
loope
movsl
adc
loopne
jnp
adc
idivl
notl
add
rclb
mov
sub
stos
loope
mov
push
pop
and
cwtl
in
mov
outsl
ret
sarl
adc
dec
repz
cld
jp
in
gs
cmp
inc
insb
xchg
sahf
mov
repz
rcl
and
imul
loopne
pop
add
jns
mov
add
and
jo
rcrl
aam
jae
xchg
fs
jecxz
pop
popf
or
jle
pop
ljmp
and
jne
loope
shl
and
lcall
cltd
leave
lods
lds
stc
mov
jecxz
xchg
jmp
cmc
mov
cmp
jo
pop
nop
xchg
pusha
popa
add
mov
out
sbb
lock
push
lock
icebp
cmp
inc
mov
jae
call
loope
pop
cmp
add
movsb
push
movsb
dec
xor
push
imul
lock
mov
das
enter
mov
push
outsl
addr16
orl
pusha
jle
pop
or
stc
inc
cmp
jge
sarb
loopne
scas
or
test
fldenv
cmovge
fs
insb
cli
scas
in
test
push
cmpl
bound
xchg
jnp
sub
inc
mov
pop
push
enter
inc
mov
cwtl
int3
add
arpl
ljmp
cmp
or
lcall
jbe
sub
pusha
rcrb
mov
data16
aam
lahf
sbb
hlt
fidivrs
cmp
bound
shr
mov
daa
push
push
or
cli
call
cli
cmp
insl
push
push
loope
fwait
mov
test
mov
pusha
jno
rcl
addb
sbb
inc
add
xor
jb
mov
aaa
scas
add
pop
or
adc
xchg
js
jmp
and
pop
cmpsl
push
xor
dec
scas
inc
popf
sub
and
or
loopne
mov
xchg
cmp
jp
or
jns
sub
jno
cmp
adc
ja
cmp
rcrl
ret
icebp
cmc
in
jae
push
cld
movsl
aam
scas
iret
or
mov
hlt
test
cmp
shlb
jns
arpl
sub
repnz
lds
mov
jle
xchg
imul
icebp
out
push
movsl
xor
sub
je
adc
and
push
pop
scas
and
sbb
and
loopne
leave
and
roll
dec
fwait
xchg
shl
jb
aam
sub
xor
fs
das
in
inc
out
xchg
or
cmpsb
outsb
xor
movsb
std
icebp
adc
cmp
lret
mov
jns
cwtl
lock
fistl
push
jno
repz
loopne
fwait
push
jecxz
fbstp
dec
or
cli
xchg
icebp
fisubrs
loopne
push
and
xchg
adc
loopne
mov
mov
daa
xor
leave
cmpsb
jno
mov
lods
adc
clc
push
sarl
dec
adc
movsl
sbb
cmpb
cld
in
mov
xchg
sbb
ss
mov
cli
fistps
lret
test
aas
lods
je
mov
ss
jl
decb
lock
adcl
int3
mov
divb
icebp
push
sbb
sahf
add
inc
nop
clc
and
mov
inc
adc
mov
incb
rclb
or
sub
mov
sub
ret
push
dec
cmpsl
mov
inc
add
sub
add
mov
push
cwtl
aam
test
sar
mov
and
mov
inc
jge
test
sar
loop
mov
out
insl
add
sub
sbb
sbb
mov
movsb
pusha
lret
ror
mov
or
bswap
xchg
roll
addr16
dec
pop
test
jbe
fildll
pop
lock
xchg
andb
xchg
push
jbe
ljmp
and
xchg
mov
loope
jb
mov
pop
scas
push
pop
jle
fnstcw
jbe
ja
sti
xchg
ficomps
test
subb
inc
ds
add
and
lds
push
stc
mov
pop
dec
icebp
mov
scas
inc
loop
or
ljmp
xor
push
adc
idivl
sub
sti
dec
xchg
not
xchg
hlt
fldt
mov
cmc
in
lods
dec
cmc
sub
mov
xchg
imul
and
jg
mov
cmc
lcall
lods
inc
push
push
jno
jne
enter
or
shr
dec
push
or
adc
adc
shrb
xor
xchg
repnz
test
pop
aas
cli
add
inc
mov
inc
sbbl
in
xchg
mov
ret
daa
jb
je
jmp
fimull
sub
cltd
xor
scas
pop
test
test
pop
bound
in
andb
push
movsl
aaa
cli
sbbb
sub
mov
mov
pusha
rcll
adc
inc
xor
and
in
mov
mov
add
mov
daa
jno
inc
jae
in
adc
sti
cmp
movsl
icebp
leave
sub
dec
mov
push
int3
xchg
xchg
pop
jg
adc
adcb
cwtl
dec
shlb
push
je
xor
scas
gs
shll
push
dec
push
cmp
lds
push
mov
ja
fidivs
rol
jne
xchg
in
dec
jl
dec
icebp
test
push
jns
bound
add
mov
leave
ret
fwait
test
ret
push
dec
sbb
and
pop
jbe
int
adc
fisttpl
xchg
movsb
outsb
dec
popf
or
sbb
pusha
pop
mov
pop
pop
mov
call
mov
in
pop
push
insb
test
fs
sub
mov
data16
mov
mov
outsl
sub
or
jno
or
mov
sub
and
shrb
mov
xchg
subb
scas
sub
pop
fimull
subb
shrb
xor
notl
popa
sub
push
cmp
or
insl
aam
cltd
inc
addr16
or
lock
mov
mov
int
out
test
fisubs
pusha
andb
or
popf
jp
sbb
jg
sar
aaa
repnz
mull
scas
inc
mov
mov
mov
or
and
test
insl
fcomps
inc
mov
loopne
pop
push
mov
and
jne
jnp
xchg
add
pop
pop
inc
sub
mov
push
leave
push
push
jbe
xchg
cmp
xchg
gs
jmp
addr16
stc
cmp
mov
fldcw
lods
imul
les
int3
stos
sub
and
dec
cmpsl
jge
fcoml
adc
inc
shrb
mov
int3
scas
in
dec
mov
testb
xchg
mov
pop
ret
mov
js
mov
test
fsubs
mov
sbb
nop
mov
mov
push
mov
or
jl
inc
pusha
sub
and
cli
fs
mov
cmpsb
insb
fdiv
negb
es
ss
adc
inc
fucomp
enter
pusha
sbb
add
mov
mov
leave
les
jge
pop
or
mov
jae
xor
fmulp
sbb
aas
xlat
icebp
inc
xchg
dec
iret
sbb
push
push
and
xlat
cmp
and
ss
leave
jnp
cmp
mov
sbb
std
mov
adc
outsl
ljmp
sarb
jl
and
cmp
mov
test
xchg
xchg
sbb
sub
and
sbb
xchg
test
xor
jbe
imul
mov
or
inc
je
jb
mov
xchg
iret
or
mov
js
aam
xor
push
add
xchg
or
pusha
decl
fstps
lods
cmc
adc
adc
test
push
ljmp
sbb
jbe
ljmp
data16
insl
adc
jmp
gs
inc
sub
popf
and
dec
pop
repnz
or
lahf
or
call
in
stos
push
cltd
insb
nop
clc
shrb
cld
mov
ja
sbb
push
in
xor
insl
in
mov
mov
dec
fwait
xlat
inc
cmpsb
jecxz
idiv
ficoml
loopne
lret
xchg
jns
push
pop
xor
movsb
xchg
ds
cs
in
out
outsb
es
jns
mov
mov
mov
add
push
sahf
mov
rcrb
dec
pop
test
rorl
add
xchg
out
mov
adc
and
lods
es
aaa
add
es
add
int
test
push
das
pop
mov
mov
dec
jae
and
mov
hlt
movsl
mov
xor
outsb
mov
xchg
mov
adc
out
push
fs
mov
push
outsb
std
daa
mov
push
data16
cmc
fsts
pop
pop
es
push
lds
push
mov
das
pop
repnz
jmp
adc
cmpb
loopne
mov
nop
xor
pop
mov
mov
fadds
jns
cmp
xchg
test
and
pop
pop
shlb
nop
push
loopne
push
stc
stc
addl
out
xchg
xor
test
sbb
jge
int3
out
jp
xor
mov
mov
nop
lock
ljmp
mov
pop
fidivl
les
mov
out
push
xor
jb
push
lahf
jnp
fdivrs
and
adc
ljmp
loopne
aad
call
and
jne
lock
mov
das
jmp
dec
mov
call
out
add
mov
pusha
jo
and
pusha
xchg
xchg
fs
mov
and
cmpsl
pusha
rcrb
repnz
jg
mull
aas
ljmp
cld
dec
loop
xchg
or
inc
ret
mov
mov
jb
mov
inc
mov
fwait
inc
lods
out
xchg
pop
out
lcall
cmp
adc
push
sbb
and
hlt
into
es
fcmovnbe
cmp
and
or
pop
pop
into
mov
cld
mov
call
mul
mov
fsubs
insl
cmpsl
dec
or
sar
xchg
or
or
xchg
and
clc
inc
lret
cmp
shll
jl
fbstp
outsl
jno
repnz
inc
dec
movsl
stos
xchg
hlt
mov
mov
and
js
arpl
cmc
scas
or
adcb
shl
es
lea
mov
cmp
mov
xchg
loopne
test
push
nop
mov
sbb
fnsave
outsb
popf
popf
jmp
mov
mov
cmp
or
aad
lods
inc
lret
rolb
adc
push
fdivrl
cli
stos
xchg
mov
insl
pop
sbbb
pop
cmc
adc
and
xlat
dec
push
addr16
add
mov
movsb
popf
cmp
and
outsl
lods
lods
popf
insb
mov
rolb
xor
sbb
cmp
add
mov
or
mov
or
faddp
ljmp
and
loopne
test
outsl
push
pushf
lock
or
rolb
xor
mov
test
push
movsl
xchg
cwtl
nop
mov
hlt
stos
jno
xchg
cmp
in
lahf
pop
sarl
sbb
addb
adc
aam
repz
movsb
xchg
lret
les
mov
stos
das
out
pop
or
scas
int3
aam
out
cli
lcall
call
pushf
loopne
leave
test
lds
jae
mov
iret
cmp
ficompl
mov
dec
pusha
mov
mov
or
andb
cmc
into
outsb
mov
sbb
adc
repz
pop
xor
shl
lods
popa
pop
push
mov
jb
push
jae
cmp
adc
and
loopne
data16
push
rorb
stos
adc
inc
fsubrl
mov
outsb
ret
and
pop
push
cld
xor
int
xor
fisubrs
xchg
mov
shrb
icebp
jb
xchg
mov
xchg
pop
xchg
xlat
or
sbb
out
gs
data16
pusha
xor
cmpsb
xchg
dec
dec
loope
pop
jo
xchg
in
shlb
lods
ret
adc
pusha
notb
inc
pop
mov
call
into
and
and
jp
rcl
adc
add
mov
clc
jne
inc
xor
xchg
nop
inc
cmp
imul
adc
aaa
sub
int
fsubrs
mov
fwait
iret
hlt
aaa
pop
mov
shrl
lods
inc
jge
push
sahf
xor
sub
sub
push
or
rolb
inc
mov
and
loopne
push
and
mov
cmpsl
fidivrl
push
push
daa
shll
push
sbb
xorl
mov
std
adc
inc
je
dec
add
or
mov
loop
daa
xchg
mov
ss
test
call
sub
pop
imul
xor
outsb
test
shlb
pop
rclb
mov
xor
mov
mov
xchg
stos
ss
add
xor
test
jo
addr16
adc
dec
xor
pop
sbb
and
lret
into
into
mov
icebp
lds
pusha
orb
cld
and
cli
ja
stos
ret
hlt
and
add
lret
mov
in
mov
rolb
cmp
popl
cmpsl
sub
xchg
and
dec
and
inc
jo
clc
repnz
out
xchg
xchg
lcall
jne
push
fcoms
pop
nop
pop
inc
push
out
mov
xor
push
jl
sub
lea
sbb
sar
xor
and
rolb
in
mov
or
mov
inc
jp
push
jp
into
add
inc
in
bound
test
dec
xchg
jns
sub
ds
shlb
and
cltd
clc
fsub
mov
enter
or
stos
push
push
ret
inc
sti
pop
mov
lea
les
test
dec
or
pop
push
lahf
cltd
cmc
adc
rcrb
xor
test
loopne
popf
addb
dec
shlb
pushf
adc
fdiv
inc
pop
push
pop
add
dec
aaa
adcl
or
mov
mov
sub
ficomps
movsb
pop
fcom
orl
out
adc
aam
dec
jmp
imul
cwtl
dec
pusha
and
loopne
in
ljmp
loopne
addr16
and
fwait
int3
add
pusha
mov
insl
dec
xchg
mov
push
fcomps
insb
movsl
pop
xchg
les
in
dec
push
sbbl
pop
xor
mov
aam
aam
adc
mov
xchg
out
int3
test
nop
int3
rorb
add
mov
int
out
cmc
xchg
lods
jmp
mov
rorb
sti
mov
sbb
or
sbb
xchg
fiaddl
mov
add
mov
lret
call
out
add
loopne
test
hlt
add
jnp
popa
fcmovnbe
mov
adc
iret
nop
je
cmc
sbb
fsubr
aas
sbb
and
enter
das
xchg
fistl
adc
add
pop
add
push
data16
lret
push
out
daa
clc
stos
mov
mov
out
pop
shll
mov
in
imul
xor
push
pop
out
pcmpeqb
es
lds
or
lea
in
inc
fidivrs
test
mov
sbb
mov
xor
pop
stc
dec
mov
mov
fists
push
hlt
divl
iret
out
adc
outsl
out
enter
jl
mov
or
test
jle
mov
loop
pop
push
or
lds
inc
pop
jp
mov
jle
adc
lea
stc
adc
shll
das
lds
cli
inc
mov
cmp
scas
insl
pop
call
outsl
shr
idiv
dec
sbb
sbb
aad
xor
or
subb
mov
ret
test
adc
push
push
mov
mov
add
mov
push
cmpsl
std
dec
sub
pushf
add
mov
mov
jp
popf
jns
or
or
clc
addr16
stos
pop
nop
mov
xorb
shlb
fnsave
faddl
loop
sbb
mov
xor
xchg
jmp
nop
fsubl
loop
push
and
mov
inc
stos
mov
ljmp
push
sbb
jp
nop
cmp
sub
cmp
add
andb
jbe
iret
push
dec
aaa
scas
out
fs
imul
icebp
fsubl
outsl
aad
stos
fs
sub
mov
fiaddl
and
or
lds
mov
jmp
add
shrb
mov
shlb
addr16
add
push
mul
sbb
daa
cld
inc
sub
scas
push
iret
xlat
in
pop
push
std
lods
out
subb
mov
test
pushf
int3
add
loopne
push
pushf
cmp
and
hlt
ja
dec
les
add
in
flds
mov
arpl
push
push
fwait
push
in
aad
fistl
lods
pusha
gs
mov
and
mov
lahf
cs
lea
mov
loopne
push
insl
mov
add
out
fdivr
push
mov
jo
inc
stos
mov
sbb
sub
sbbl
xchg
fistpll
fisubrl
dec
orl
sbb
mov
out
push
cmp
sub
mov
xchg
loopne
pop
push
scas
lds
dec
scas
mov
adc
mov
inc
loop
push
andb
inc
push
cmpsl
push
adc
mov
cmp
out
sbb
xchg
jae
ja
inc
ffree
mov
jnp
ret
xchg
adcb
in
fucomip
scas
cmp
mov
mov
call
jmp
arpl
pop
xchg
sbb
dec
sub
into
xlat
lods
sbb
and
xchg
cmp
rolb
cmp
push
add
movsl
cmpsl
add
gs
mov
clc
addr16
bnd
sub
mov
bound
inc
sbb
lcall
das
inc
lcall
jg
std
scas
test
mov
pusha
es
sbb
int3
sbb
ret
and
call
sbb
jg
sbb
add
add
loopne
adc
push
pushf
or
and
push
fisttpl
fwait
adc
insb
nop
mov
test
jg
mov
mov
push
cli
popa
sbb
cli
lea
loop
mov
xlat
aaa
jle
dec
jmp
or
xor
mov
mov
sub
nop
xor
cmp
pop
mov
test
and
jg
and
pop
popl
loop
inc
gs
lcall
sbb
iret
cmpb
and
rcr
pusha
hlt
mov
xchg
outsb
clc
fcmovne
inc
and
or
loopne
adc
xor
sbb
into
mov
pop
bnd
cli
add
adc
mov
push
xchg
fadd
cltd
xor
lds
xor
pop
shrl
daa
incl
mov
rolb
scas
sbb
mov
shlb
test
addb
adcb
xchg
cmpl
xor
add
jmp
and
mov
enter
nop
add
pusha
sub
popa
xchg
incb
fistpll
je
mov
movsl
std
sub
adc
xchg
or
psadbw
mov
pop
loopne
lea
lods
sbb
stc
or
loopne
cmp
cwtl
mov
xchg
jae
in
jg
inc
cmp
dec
mov
pop
or
scas
jno
sbb
cs
icebp
sbb
mov
js
out
out
add
pusha
aad
movzwl
sarb
filds
xchg
loopne
or
and
dec
cmp
mov
fcoml
sub
cmpsl
mov
popf
stc
push
decb
push
sub
mov
add
cli
dec
test
stos
rorl
xor
shlb
and
mov
test
sub
data16
sub
out
jne
mov
jns,pt
adc
cmp
cmp
fisubrl
push
push
test
aaa
or
call
adc
loopne
xor
testl
mov
pop
push
mov
stos
std
jge
inc
inc
fiaddl
scas
int3
mov
xlat
sub
add
test
and
mov
pextrw
push
cs
xchg
pushf
add
cmp
je
jnp
popa
lcall
or
fldl
push
and
cmp
sti
mov
inc
cmp
imul
adc
jno
sub
sbb
sbb
and
clc
loopne
es
lret
push
das
adc
push
pop
jns
cmp
lret
loop
in
pusha
mov
in
or
repz
aad
cmp
stc
pop
clc
imul
adc
and
js
xchg
cmp
dec
mov
mov
mov
lds
push
mov
test
movsl
inc
sti
push
inc
shlb
ds
mov
sbb
lds
pusha
pop
je
inc
inc
test
addr16
cmp
jb
sub
mov
fdivrp
out
add
add
inc
shlb
inc
popf
or
stos
dec
mov
jo
lret
lods
dec
mov
xor
sub
cmp
add
pop
aad
jmp
and
xchg
fwait
int
fnstsw
xor
outsb
inc
jae
mov
lods
xor
or
decl
mov
fimuls
hlt
inc
fimull
jno
jmp
lods
add
in
xchg
inc
out
data16
adc
aad
jmp
mov
test
jmp
nop
pop
loopne
jno
adc
in
and
cmp
xchg
andb
pop
inc
das
aam
pop
hlt
dec
lods
outsl
or
ljmp
fiaddl
loopne
rcrb
inc
push
dec
xor
cmp
and
inc
jle
jge
inc
ficoml
out
leave
cmc
loopne
hlt
sub
add
sbb
ret
pop
mov
and
sub
adcb
cmpsb
in
mov
hlt
and
sahf
push
loope
inc
aaa
imulb
inc
in
cmpl
popa
push
cmp
add
cmp
rcrb
xorl
cmp
mov
aad
test
aad
outsl
inc
call
inc
adc
pop
imul
push
stos
jge
add
jg
mov
addr16
mov
xor
pop
inc
outsb
mov
fs
ljmp
xchg
imul
sbb
or
xor
outsl
mov
inc
inc
int
ror
das
sub
add
rol
jg
fdivp
mov
imul
or
rol
fs
push
jp
aam
dec
loopne
jg
repnz
js
mov
push
mov
mov
aam
or
mov
js
cmpsl
lret
in
mov
jbe
jecxz
push
inc
push
or
mov
sbb
and
loopne
ds
mov
js
sbb
les
gs
scas
jae
rorb
and
sbb
pusha
xor
mov
sbb
sbb
fdivp
and
aad
push
sbb
loopne
hlt
mov
push
dec
aad
rcll
ljmp
adc
jl
insl
inc
sbb
mov
push
sbb
mov
nop
hlt
pusha
lret
ss
sub
push
fcom
or
adc
and
arpl
cmp
imul
enter
mov
mov
hlt
inc
jmp
push
mov
loope
aam
loopne
and
push
loope
inc
xor
push
in
xor
add
inc
xchg
out
mov
out
push
xor
loopne
push
and
sbb
fadds
lods
lret
popf
stos
xor
sti
fldenv
cwtl
adc
xor
callw
loopne
gs
sbb
shl
jns
insl
ret
clc
add
inc
jb
es
add
mov
arpl
fadd
and
add
jno
in
je
or
inc
pushf
xor
pop
test
and
fcoms
daa
fs
cmc
mov
xor
hlt
mov
jl
xchg
fistpl
add
cmp
call
add
movsl
ja
cld
adcb
and
sahf
and
in
and
lahf
in
div
mov
fwait
add
pusha
jle
push
and
jmp
mov
int3
lcall
jb
cltd
dec
mov
leave
rcrl
test
mov
rorl
in
sbb
jo
mov
mulb
xor
jg
movsb
pusha
int3
lds
xchg
in
imul
add
mov
or
and
mov
aaa
mov
xchg
cmpsl
int3
jo
sub
inc
xchg
jnp
sti
cli
ljmp
push
bound
call
lahf
jge
shlb
insl
int
cltd
pop
adc
cmpsb
inc
idivb
xlat
add
pushf
lods
pusha
pop
pop
das
vmovaps
mov
rol
fldcw
out
ds
hlt
push
inc
aaa
std
mov
xchg
or
cmp
push
movsb
push
dec
int3
in
xlat
int
or
pop
dec
testl
cmp
add
lock
xchg
or
in
sub
xchg
mov
sbb
inc
pusha
fcmovnu
xchg
fwait
cmp
aam
sub
call
lock
pop
adc
adc
sub
mov
sbb
fwait
cmc
lahf
loop
fdivrs
int
out
leave
xor
sbbl
mov
bound
cmpsl
jge
cs
mov
addb
jnp
out
lcall
dec
dec
sbb
pop
push
pop
sahf
movsl
pop
jns
pop
imul
or
test
jno
icebp
jae
aaa
fcoms
push
mov
or
fidivs
mov
and
push
repz
or
or
pusha
cltd
hlt
orl
dec
and
loopne
or
and
cmc
push
push
xchg
fs
arpl
inc
xchg
in
xchg
sahf
mov
mov
sbb
stc
mov
xchg
movsl
cmp
jmp
xchg
sub
mov
push
stos
xor
lock
cwtl
fs
imul
inc
inc
cmpsb
iret
mov
lock
jg
dec
inc
outsl
sub
xor
inc
push
repnz
adc
daa
js
arpl
loop
aam
imul
je
or
pushf
push
rorb
addb
add
adc
out
lods
in
xchg
inc
jp
or
lock
sbb
push
aas
fldt
and
jns
pop
lods
mov
mov
dec
push
call
and
sbb
adc
or
ljmp
mov
out
pop
mov
in
inc
insl
cmp
aam
add
int
inc
stos
out
dec
jno
clc
sbb
insb
aad
daa
je
xchg
test
or
mov
scas
mov
cltd
xor
inc
jns
pop
fcmovu
cmp
jg
lret
jae
nop
pop
and
xchg
jl
inc
jp
sbb
cltd
idiv
lods
mov
test
jg
fcmovb
push
inc
mov
int
outsl
cmpsl
imul
mov
test
cmc
scas
xchg
ds
mov
push
inc
cmp
push
xchg
xor
imul
decb
adc
out
sbb
loope
inc
mov
pushf
and
xchg
test
mov
fbld
add
sbb
mov
ss
mov
icebp
icebp
popa
push
pusha
outsl
jl
mov
out
pop
jge
cmp
lea
or
xchg
aas
sub
js
jmp
adc
push
out
test
add
sbb
and
xchg
xchg
inc
and
loope
add
stos
fadds
les
cmp
shlb
popf
int
sub
shlb
xchg
js
arpl
jg
in
test
leave
data16
add
fbld
gs
fwait
add
pop
jmp
dec
out
nop
xorb
imul
jb
pop
test
jge
rcl
pusha
sub
push
cli
mov
jbe
stc
sbb
in
push
pusha
ret
test
cmpsl
sbb
nop
push
cmp
lods
mov
mov
aad
mov
mov
mov
inc
ja
test
jns
test
and
and
xchg
or
shlb
movsb
movsb
dec
daa
mov
or
mov
call
outsb
dec
inc
lock
ljmp
jmp
adc
imul
jnp
and
inc
arpl
cli
mov
cmpb
xlat
fmuls
aaa
xchg
loop
aas
jl
and
scas
insb
test
jbe
xor
das
xchg
jecxz
dec
mov
stc
outsb
test
jnp
fldt
fdivrs
mov
pop
je
ljmp
sub
mov
pop
xchg
or
inc
shll
pop
and
imul
adc
aad
adc
adcb
xor
popf
sbb
shl
test
push
pop
cmp
cmp
ret
je
aaa
arpl
mov
out
je
inc
addr16
imul
pop
cmc
xor
inc
adcb
lods
inc
sub
cwtl
loopne
lods
dec
cs
leave
aaa
adc
sub
ficoms
std
popf
sahf
adc
dec
mov
icebp
addr16
add
ror
push
lods
pop
push
lock
adc
push
jno
and
sahf
icebp
pop
or
loope
and
out
adc
sbb
adc
and
cmp
jge
push
loopne
xor
mov
sahf
or
rclb
or
imul
ret
outsb
or
sti
sub
fidivrl
or
lods
mov
push
inc
pop
mov
shl
sbb
loopne
add
jmp
popf
in
popa
decl
cwtl
lods
pusha
add
rolb
enter
stos
movsl
mov
add
mov
or
cmpb
outsb
loop
jl
sub
inc
sub
dec
mov
push
xor
xor
test
movsl
mov
add
inc
lret
and
jmp
pop
aaa
jbe
shrb
pusha
mov
outsl
mov
pusha
xor
mov
icebp
hlt
sbb
pusha
or
pusha
xlat
inc
arpl
mov
in
lret
in
lock
enter
mov
jl
leave
fs
test
scas
jbe
cmc
aad
pop
jae
aam
xor
mov
jp
popf
push
add
sbb
repz
inc
lods
push
cmp
inc
pushf
nop
and
lahf
push
popf
jg
aaa
inc
data16
aam
scas
sub
std
andb
or
enter
sbb
add
loopne
ss
adc
loopne
cmp
pop
sbb
mov
add
jg
jecxz
xchg
sub
shlb
xchg
add
lods
sarb
jle
pop
and
mov
xchg
pop
shlb
jne
pop
add
lcall
add
xor
dec
nop
inc
inc
xchg
cmp
jb
push
xor
fmuls
xchg
jecxz
rolb
cld
into
cmp
fcmovnbe
js
mov
loop
out
repnz
lret
push
xcrypt-ctr
cmpsl
fldenv
xor
sbb
inc
lods
divl
enter
push
push
pop
mov
scas
pop
pushl
scas
test
into
lcall
sub
add
dec
jle
mov
sahf
scas
shll
ljmp
call
stos
stos
sbb
dec
inc
in
das
loopne
xchg
mov
pop
imul
mulb
dec
addb
dec
inc
pop
and
push
out
icebp
pushf
sbb
fists
add
sbbb
push
and
lcall
ds
mov
rcrb
jbe
and
shlb
dec
ds
repnz
mov
or
popa
xor
jne
sub
addb
or
jl
xor
mov
push
cmp
data16
pusha
scas
movsb
inc
les
ljmp
jmp
mov
or
mov
xor
enter
jp
cwtl
lods
add
jb
sbb
mov
mov
rcrb
cmpsl
and
mov
sub
mov
push
lock
and
lsl
leave
inc
cli
mov
mov
jg
push
jecxz
pop
sbbl
pusha
inc
pop
adcl
test
and
xlat
push
dec
mov
iret
int
adc
das
mov
fdivl
enter
or
sti
adc
mov
pop
cmp
test
in
nop
pusha
leave
scas
xchg
ja
mov
add
inc
xchg
std
cmp
dec
repnz
and
test
adc
hlt
out
and
std
imul
sbb
mov
lock
aam
mov
or
in
shrl
jecxz
pop
dec
add
and
inc
sbb
inc
push
sub
es
call
rcrb
ja
fldt
aam
aad
sbb
fidivs
add
orb
call
inc
out
cltd
cld
mov
cmpsl
mov
lods
pop
fs
push
sub
fcoml
sub
inc
cld
adc
jns
jp
push
xor
aaa
sub
xor
cld
jle
xor
xor
cmc
mov
xchg
and
pop
mov
inc
xchg
xchg
gs
push
and
icebp
sbb
jg
mov
adc
das
daa
adc
andb
popf
adc
jle
outsl
cmp
aam
leave
inc
filds
push
adc
jo
call
mov
xor
mov
test
and
into
rcrl
aaa
mov
aas
mov
das
sub
out
mov
sbb
cmc
sbb
lahf
sub
inc
lahf
jb
cmpsb
aas
aad
inc
int3
push
sbb
mov
fisttpll
btc
les
adc
decl
push
jle
leave
pusha
in
out
jecxz
sti
jns
loope
fwait
sub
fnsave
loopne
lock
and
shrb
pop
dec
xor
fnstsw
movsb
mov
mov
lock
outsb
or
test
inc
ljmp
lods
into
push
mov
repnz
test
clc
or
mov
and
test
bound
push
aam
sbb
jnp
lcall
stc
and
sub
jecxz
lret
jge
jnp
mov
ds
sub
xchg
ret
pop
fdivr
decb
add
xorb
orl
ficompl
aam
or
je
ljmp
call
inc
lcall
ljmp
xor
icebp
test
mov
jb
push
popa
push
xchg
pushf
add
aam
psubw
js
popf
out
addr16
out
pop
sbb
inc
mov
ret
test
jno
ja
sub
push
xor
sbb
push
or
cli
sbb
ret
rorb
mov
repnz
adc
push
into
adc
ds
jns,pt
cltd
sbb
add
subb
orb
xor
mov
imul
pop
dec
mov
and
sbb
loopne
mov
push
out
mov
sub
fadds
jo
and
or
inc
pushf
inc
mov
hlt
andb
addl
mov
sbb
jl
jnp
call
and
shll
cmp
js
add
arpl
dec
aad
mov
ja
xor
cmp
mov
lret
je
pusha
cmpsl
ffree
lds
cmp
repz
and
fnstcw
jo
call
fisubs
sbb
sbb
jecxz
adc
push
push
mov
repz
xor
sub
ja
clc
fdiv
mov
jae
xor
adc
out
bound
inc
outsl
push
cmpsl
lods
dec
adc
add
cmp
jb
xor
out
mov
push
cltd
mov
sub
sbb
std
mov
shlb
xchg
cmp
sub
aas
mov
ficomps
loopne
mov
std
incl
pop
iret
or
jl
or
pop
jns
jmp
cmp
ds
das
xchg
scas
mov
mov
sbb
or
cltd
sbb
sti
fdiv
sbb
jae
push
mov
es
mov
cmc
arpl
sub
outsb
cmpsl
inc
data16
lds
push
xchg
aas
add
jmp
mov
xlat
pop
jnp
shr
call
add
add
rclb
sbb
inc
je
dec
dec
sub
in
sbb
pusha
pop
push
mov
mov
int
in
mov
fdivr
sbb
mov
push
arpl
ljmp
jg
test
lods
shl
xchg
in
sbb
sub
dec
xchg
shlb
inc
stc
ss
imul
push
icebp
push
cld
cli
push
lret
sub
inc
sbb
inc
je
scas
jmp
mov
aas
cmc
add
xchg
dec
sbb
pusha
and
push
lea
popl
repnz
adc
nop
insb
loopne
adc
or
stos
add
mov
add
sbbb
sbb
pop
jne
push
mov
test
sarb
sbb
out
push
xchg
xor
je
mov
fisubl
repz
lret
loopne
cmpl
nop
loopne
vmovsd
dec
or
loopne
mov
mov
popf
orl
ljmp
xchg
and
mov
bts
js
in
lods
jae
pop
lods
mulb
push
icebp
mov
mov
lahf
mov
test
test
mov
orb
or
imul
stos
repz
mov
add
cmp
out
test
fstps
jg
sbb
mov
in
leave
cmpsb
and
sub
in
shll
movsb
data16
ret
cmpsb
mov
std
icebp
ret
mov
lds
xlat
shl
lahf
sub
cltd
jl
lea
daa
adc
add
inc
mov
inc
sahf
dec
xor
adc
iret
and
inc
push
pop
jno
aad
sub
push
aas
out
test
adc
push
xchg
pop
out
dec
pop
mov
jmp
xchg
testb
test
les
inc
ljmp
jl
mov
icebp
adc
nop
mov
mov
push
pop
mov
sub
popf
stos
sub
les
je
push
test
xor
and
enter
lods
je
jge
jns
js
insl
xchg
sahf
xorl
fcompl
inc
pop
xchg
push
int3
mov
insb
loopne
pop
add
inc
addr16
jae
lcall
cs
cmp
js
cmpsl
jnp
lret
repnz
bound
rcrl
inc
mov
lret
and
inc
push
jmp
xchg
xor
pop
xchg
testl
sub
xchg
andb
hlt
push
push
push
pop
xorb
dec
std
jp
loope
add
faddl
fwait
das
inc
daa
fwait
jp
ljmp
pushf
loopne
inc
loopne
or
xchg
fidivrs
fnsave
fwait
push
xor
lock
pusha
push
fnstcw
add
ret
sbb
popf
into
dec
inc
mov
fists
or
and
lcall
mov
loopne
js
and
lock
inc
push
in
mov
sbb
and
ror
mov
fstpt
or
and
push
loopne
sbb
cmp
xor
sarb
xor
inc
loopne
testb
lds
test
testl
pop
test
jmp
mov
in
adc
fidivl
iret
movsb
ret
subl
add
rol
xchg
sbbb
mov
mov
call
shrl
dec
adc
clc
add
mov
andb
daa
clc
test
insb
iret
pop
mov
xchg
cmp
or
push
test
add
aas
add
and
mov
jae
pop
rcrb
add
pop
inc
sub
jns
imul
cmp
arpl
mov
push
or
mov
jl
inc
cmp
add
pop
dec
fnstenv
cmpsb
int
pop
lods
lcall
pop
enter
mov
jnp
lcall
pop
xchg
sub
jae
push
pop
into
push
mov
or
mov
into
cmpsl
mov
imul
mov
xor
push
fnstcw
or
shl
hlt
fld
out
add
xor
ss
mov
mov
pop
jbe
sub
cmp
mov
mov
push
mov
dec
xchg
mov
inc
ret
inc
cld
sahf
cmp
push
cs
nop
sbb
mov
imul
adc
subb
addb
and
dec
add
sub
shlb
or
add
push
aaa
mov
rolb
sbb
jle
nopl
mov
mov
push
enter
and
and
imul
leave
or
pop
orl
mov
je
sbb
add
fiaddl
or
sbb
adc
inc
pop
fucom
jge
pop
scas
xchg
cmp
inc
adc
ror
push
pop
cmpsb
mov
inc
and
jmp
test
mov
pop
imul
and
mov
xchg
and
movsl
enter
icebp
or
or
add
sub
pop
xchg
and
push
add
loopne
mov
aad
fwait
inc
pop
add
scas
mov
sbb
gs
in
cmp
sti
loope
popf
sarb
fidivl
push
mov
sbb
loopne
aam
imul
mov
outsl
push
out
jle
lock
fs
pusha
aam
lods
mov
ss
out
dec
jge
inc
mov
cmp
jl
fadd
cltd
push
cmp
sub
fldcw
add
negl
sub
push
pop
sarl
mov
rolb
insb
inc
iret
add
stos
loop
cs
lea
loope
out
clc
aaa
pop
sti
or
into
cmp
in
lea
loope
sub
and
jge
sub
lea
in
push
lahf
fsubs
sbb
pop
add
hlt
daa
mov
sarb
lods
add
adc
rcr
mov
jo
cmp
pop
ror
pop
mov
dec
xor
hlt
xor
mov
pop
jp
or
aam
sbb
bound
pop
pusha
idivb
mull
push
negl
lds
mov
push
iret
roll
aam
mov
mov
pop
push
cs
jnp
jg
add
mov
fisttpll
inc
lods
mov
adc
ret
or
cmpb
les
cmpsb
imul
mov
add
and
xchg
inc
mov
mov
dec
lcall
stos
dec
cmp
das
lods
orl
and
out
les
test
jo
add
repz
mov
pusha
push
je
aam
pop
dec
pop
mov
addl
adc
loopne
out
jl
dec
notb
jecxz
lret
sub
cld
mov
seto
pusha
cli
loope
mov
push
mov
add
adc
cmp
push
pop
stos
adcl
mov
cltd
daa
int3
daa
test
loopne
test
mov
cmp
jbe
scas
in
push
out
loopne
hlt
add
sarb
dec
dec
sarl
dec
repnz
inc
pop
in
fidivs
lret
fsubr
enter
scas
mov
mov
mov
dec
xchg
dec
cmp
test
movsl
add
hlt
add
mov
cld
shll
pop
nopl
dec
sbbl
jmp
push
dec
out
and
fimuls
sub
mov
call
push
xchg
push
inc
dec
push
push
adc
testl
lods
pop
pop
sub
xchg
shrl
lahf
cmpsl
jecxz
cltd
mov
inc
dec
outsb
jae
fistl
into
shlb
fldpi
jg
arpl
jmp
lods
daa
xchg
cmpsb
cwtl
adc
test
mov
shr
lods
xor
jl
cmp
sbb
sbb
mov
sbb
pop
sbb
push
push
add
subb
xor
mov
and
or
cmc
rol
lock
cmp
xchg
sti
or
rorb
aaa
add
pusha
cmpsb
es
lret
je
jle
sbb
clc
add
mov
rolb
repnz
adc
mov
jecxz
push
pop
jecxz
stc
mov
xor
jmp
cltd
and
and
cmpb
ds
pop
hlt
aam
fsubrs
push
je
jmp
mov
or
lock
stos
imul
call
jge
mov
fisubrs
mov
fwait
xchg
mov
sbb
loopne
loopne
cs
adc
pusha
sarl
xchg
inc
or
loopne
sub
ret
icebp
fnstcw
out
test
rcl
mov
mov
sbb
loopne
push
add
das
xchg
or
pop
rcll
or
jl
add
and
mov
xor
enter
sbb
mov
jnp
in
cmp
jb
rep
mov
add
mov
and
in
xchg
sbb
sub
pop
ret
aad
jns
outsl
pop
sub
add
icebp
push
push
scas
dec
cmp
mov
imul
loopne
mov
jns
popf
ficoml
mov
sarl
outsb
mov
testb
mov
ja
scas
sbb
inc
and
clc
aaa
or
push
bound
sub
mov
add
shrb
int
in
ljmp
pop
das
jmp
iret
xchg
divl
call
cs
into
incl
insb
dec
es
stos
push
inc
push
out
xchg
repnz
stos
jns
aaa
lds
sbb
cmpb
stos
test
mov
cmp
mov
mov
push
add
loopne
cltd
adc
mov
mov
repz
das
xchg
scas
sbb
daa
sbb
dec
pusha
xor
aaa
cmp
jmp
mov
xchg
xchg
insb
add
dec
push
setg
push
testb
pop
mov
loop
pop
jmp
popf
ss
dec
pushf
inc
and
dec
add
mov
add
sub
dec
mov
jb
xor
mov
loopne
ficomps
in
dec
leave
hlt
fwait
mov
fwait
push
ja
pop
sahf
mov
pop
adc
rol
loopne
les
loopne
aaa
xor
mov
psrad
fnstcw
cmc
jb
or
and
and
xchg
jno
stc
inc
loopne
pop
push
lret
bound
subl
loopne
int
imul
cld
je
inc
negl
mov
sbb
jbe
xor
cmpl
and
jnp
repz
pop
jg
cmpsb
stos
test
inc
mov
pop
push
cltd
sbb
adc
shlb
repnz
ss
lret
clc
push
data16
mov
enter
ret
jg
add
mov
frstor
shlb
and
scas
mov
adc
daa
adc
mull
mov
clc
adc
dec
mov
pop
xor
icebp
cmp
sub
pop
mov
mull
xor
sub
push
sub
out
lret
int
shrl
dec
pop
sbb
and
sarl
sbb
add
jb
and
pusha
loopne
sbb
sbb
stos
out
ds
daa
dec
mov
xchg
add
add
lcall
in
pusha
jecxz
ss
or
nop
push
loopne
fnstenv
in
inc
pop
int3
xchg
ror
dec
outsl
mov
pop
arpl
nop
lock
addr16
mov
icebp
lcall
out
ja
add
shll
xchg
insb
cmc
jg
mov
iret
lock
and
lock
loopne
push
lahf
nop
mov
push
cmp
cmp
stos
aad
mov
dec
inc
sti
aas
xor
push
and
scas
fldenv
sub
mov
or
fnsave
movsl
popa
sub
lret
cs
in
adc
mov
adc
add
rorb
pusha
xchg
movsl
cmp
dec
push
into
adc
and
jmp
fwait
inc
xchg
sub
cld
pop
fidivs
mov
lcall
cwtl
je
sbb
and
push
jo
mov
lock
jae
divb
add
dec
sahf
ds
xor
loopne
int3
stos
jmp
add
xlat
mov
mov
cmp
push
test
addb
push
es
and
jg
pushf
mov
fcomp
xchg
scas
xchg
sub
repz
jnp
or
add
jns
aam
mov
inc
sub
gs
dec
jns
out
incb
xchg
sbb
pop
rcrb
inc
insl
jmp
and
xchg
mov
pushf
or
mov
out
lret
jg
iret
lods
jb
cli
dec
dec
pop
hlt
push
repz
xor
fildll
xor
fcomps
js
repz
mov
outsb
jno
sbb
cmp
mov
subps
sub
dec
cmp
scas
or
add
cmp
jge
jmp
jl
xor
clc
scas
mov
inc
and
push
out
lcall
jb
insl
ss
out
mov
lea
or
mov
mov
push
out
aaa
hlt
jecxz
mov
adc
dec
jp
dec
push
or
and
push
rorl
int
pop
call
pop
lret
nop
cwtl
add
gs
stos
mov
mov
mov
pop
mov
mov
adc
out
je
sti
sbb
cmp
test
push
bound
cli
cwtl
or
inc
stc
cmpsb
jg
int3
inc
fstps
inc
lahf
arpl
mov
mov
in
jmp
add
rclb
cld
ret
xchg
mov
xchg
pusha
dec
cmpl
ffreep
mov
es
add
push
std
push
cs
or
ja
adc
cltd
and
rol
pop
adc
iret
inc
jge
lahf
daa
and
lret
xchg
fcomps
xor
mov
data16
bound
subb
outsl
rcrb
inc
xor
dec
cmc
jbe
mov
cmp
je
pop
fldz
mov
xor
or
cmpsl
int3
and
rcr
ds
inc
lahf
dec
out
arpl
push
loope
ret
inc
adc
aam
push
jns
fxch
dec
and
aaa
push
sbb
loopne
or
mov
and
sub
test
jmp
dec
xor
movsl
or
sar
add
loopne
loop
mov
lahf
xor
testb
sub
clc
repnz
loopne
push
push
cmp
adc
mov
cmc
dec
or
add
sub
lock
in
xor
outsl
out
fwait
jecxz
je
push
xor
mov
pop
enter
inc
inc
out
leave
cmp
rcl
jne
mov
push
jp
cli
xor
mov
xchg
movsb
mov
sub
and
mov
je
in
and
push
sbb
or
mov
rcrl
mov
call
jp
lods
aam
neg
mov
iret
daa
aaa
mov
mov
fadds
jno
xor
inc
mov
pop
das
or
into
mov
outsb
or
loopne
orb
cmpsl
std
rcl
add
sbb
adc
jmp
sti
mov
mov
jge
mov
repz
ljmp
into
pop
xchg
cs
ljmp
inc
lret
addr16
ja
mov
int
mov
cmpsb
mov
add
and
mov
add
shl
pop
push
sbb
cltd
lods
aaa
inc
lock
mov
cwtl
dec
inc
inc
push
cmp
adc
add
in
add
lds
dec
push
dec
mov
notl
loopne
pop
test
and
cmpsb
adc
sti
mov
or
in
jmp
jne
lock
shll
stc
lock
lret
insb
es
enter
hlt
push
cmpsl
mov
add
and
xor
mov
in
push
lock
aam
mov
movsb
mov
mov
lds
jge
stos
mov
fstpt
jl
inc
int
outsl
cld
mov
or
add
pop
andb
push
jg
cmp
mov
cli
jecxz
mov
inc
push
pop
outsl
out
pop
or
imull
add
add
mov
les
icebp
insl
ds
iret
aas
cli
aam
xor
mov
out
mov
inc
add
pop
std
cmpsb
adc
jle
hlt
mov
out
bound
in
fdivrl
sarb
lea
mov
pop
xchg
push
push
pushf
js
xor
cmp
push
hlt
leave
jl
jno
sub
jo
add
dec
outsl
adc
fs
xchg
test
xor
sti
inc
divb
jns
sub
mov
push
cwtl
aam
push
jge
daa
hlt
jle
scas
xor
dec
xchg
pop
inc
and
xchg
push
pop
xchg
and
cmp
daa
jecxz
test
inc
mov
fdiv
test
mov
mov
jne
lods
cmc
cmpb
cld
sarb
jp
or
cltd
mov
in
shl
movsb
testb
int
loopne
or
sahf
push
fimuls
out
adc
fdivrs
dec
mov
lret
mov
sti
mov
add
adc
pop
push
aad
push
test
ss
adc
inc
daa
in
dec
sub
insb
mov
insl
es
jle
xor
sti
cmpsb
pop
fs
pop
add
sahf
xchg
movb
inc
cli
aas
or
imulb
shl
sub
mov
add
add
in
les
out
mov
pusha
and
jmp
or
sub
and
lcall
xchg
ret
dec
cmp
mov
xchg
enter
xor
jmp
cld
inc
dec
add
fwait
mov
jo
scas
pop
pusha
xor
dec
ja
mov
mov
mov
and
fdivrs
dec
and
into
imul
adc
es
jl
in
sub
cmp
xchg
scas
cmp
addr16
pop
test
mov
mov
cmc
sbb
out
and
test
bound
sbb
rolb
dec
out
shlb
mov
cmp
loop
sbb
dec
push
cmp
or
pusha
cmpsb
jg
sbb
add
iret
or
rclb
xchg
dec
mov
rolb
xor
add
sub
inc
pop
mov
xlat
sub
add
rcrb
cmp
inc
inc
add
pop
pusha
mov
jbe
xchg
adc
or
pop
out
jns
adc
rorl
add
pusha
push
test
mov
xchg
sbb
jne
scas
sbb
pusha
mov
mov
xor
lahf
xchg
cmovg
and
sub
jb
subb
fcmovnu
mov
pop
fsub
out
inc
lea
or
jns
shlb
sbb
cmp
sbb
xor
sub
cmp
or
loopne
js
and
fstpt
xlat
in
inc
add
xchg
push
xchg
dec
xor
jnp
lods
rcrl
xrelease
adc
pusha
in
stos
subl
lds
adc
add
jge
test
sbb
sbb
in
roll
ret
pusha
popa
inc
js
or
inc
out
sarb
fwait
stos
mov
add
aaa
repz
adc
int3
imul
add
cmc
stos
or
push
cli
sub
jp
jno
push
and
and
cmp
push
adc
jnp
mov
cld
rorb
scas
inc
push
faddl
cld
and
sub
int
rol
or
sub
sub
test
imul
pop
mov
xchg
subb
mov
test
pop
in
lahf
mov
inc
dec
lds
or
mov
or
lds
or
loopne
out
cmp
push
or
das
ret
mov
dec
adc
inc
xor
arpl
sarl
sbb
loopne
and
mov
fsubs
stos
xchg
and
pop
or
mov
lds
cmpsb
lods
imul
mov
jne
daa
in
adc
addr16
xor
in
arpl
pushf
pop
and
fmuls
jne
or
ror
inc
movsb
decl
outsb
aam
xchg
inc
inc
add
and
fwait
add
add
ret
sbb
fsubrl
movsl
xlat
pop
cmc
or
xchg
and
xor
enter
decl
fdiv
jecxz
push
push
int3
xor
lcall
add
mov
in
mov
push
movsl
lcall
orl
push
push
add
cmp
sti
sub
push
cmp
xchg
push
fs
lock
dec
xlat
test
jle
mov
scas
xchg
insl
pop
addb
sbb
jns
fdivrp
cmp
iret
cld
std
addr16
dec
and
add
ret
xchg
push
daa
and
faddl
testl
adc
ret
lods
or
pop
fucomi
in
daa
loope
add
sbbb
outsl
inc
hlt
sbb
insb
xor
in
loope
shlb
xchg
dec
xor
mov
mov
shlb
or
loopne
mov
out
add
outsb
pop
cmp
adc
lock
shll
cmp
repz
push
jecxz
and
cmp
lret
add
mov
xor
mov
jl
xlat
mov
mov
aaa
fistl
dec
cmpsb
inc
ds
adc
ljmp
xchg
lret
sub
nop
rclb
loopne
push
aam
aam
insl
or
shrb
push
xchg
ljmp
dec
sub
jle
xor
subl
add
ret
sti
mov
popa
and
cmp
bound
dec
pushf
call
enter
lret
lahf
push
mov
fcmovbe
push
lds
call
pop
sub
sbb
imul
ljmp
mov
fsub
cltd
mov
push
daa
stos
fwait
jnp
pushf
or
out
insl
lret
hlt
mov
add
lcall
xor
lock
cmp
pop
clc
jle
inc
icebp
pop
cli
enter
pop
mov
sbb
int3
mov
rorb
stc
insb
fnstsw
xor
push
inc
dec
cmp
lods
or
pop
sub
int3
ss
test
or
les
jl
push
adc
adc
push
pop
cmpb
inc
mov
push
jmp
stos
rcr
loope
fnstenv
mov
outsb
adc
addb
xor
push
shrb
pusha
inc
pop
pop
pop
into
cmc
pushf
in
add
and
test
cmp
adc
xchg
inc
dec
adc
pusha
leave
inc
stos
lahf
jno
loopne
mov
adc
inc
stos
dec
out
js
ficompl
xor
fmull
insl
mov
mov
jo
cmc
leave
clc
lret
gs
mov
mov
push
dec
jge
stos
inc
call
xchg
inc
sbb
loopne
fwait
or
mov
and
lock
rclb
pop
std
xchg
xor
and
push
outsl
cmp
jmp
outsb
pop
mov
sbb
and
repz
xor
fst
fldl2e
mov
adc
and
lret
loopne
mov
and
or
push
mov
cli
inc
lahf
cmp
in
fdivl
inc
pop
add
and
adc
notb
mov
scas
mov
mov
pop
arpl
gs
sahf
add
cmp
repz
xchg
pop
loope
inc
fwait
pop
popf
loopne
sbb
xor
rolb
shr
subl
sbb
data16
int3
pop
ljmp
movsl
xchg
pusha
jmp
jge
pop
adc
mov
loop
enter
push
add
pusha
out
dec
cmp
dec
sbb
loop
int3
xor
xor
es
popf
adc
cmp
adc
pop
into
dec
enter
in
pop
jb
movsl
clc
scas
xor
push
sub
in
mov
xchg
adc
jbe
sub
sub
pop
sub
dec
aad
pop
dec
subb
into
lahf
leave
stos
xchg
insl
bound
in
sbb
dec
adc
loop
cmc
les
mov
sbb
nop
or
jle
push
mov
push
test
mov
xor
aas
scas
mov
mov
clc
xlat
pop
not
test
push
sub
xor
movsl
cmp
mov
data16
loope
mov
in
sar
push
int3
lea
inc
aam
mov
adc
and
and
and
outsb
pop
mov
xor
ljmp
pop
movsb
mov
sub
leave
xchg
jnp
sbb
orb
push
test
daa
cwtl
jo
es
push
nop
test
fwait
mov
inc
mov
enter
mov
fwait
xorb
je
fs
jmp
xchg
inc
pop
sbb
loopne
push
mov
in
iret
xchg
or
enter
cwtl
sub
xor
mov
push
popf
sbb
dec
adc
fwait
mov
imull
sti
inc
inc
popa
jecxz
icebp
jo
lret
and
mov
dec
jbe
sarb
nop
xor
jecxz
push
cltd
push
mov
dec
negl
mov
stos
insl
es
sub
cs
jl
pop
xlat
out
pop
jbe
sub
jecxz
dec
pop
adc
imul
in
pop
js
rolb
loopne
iret
push
adc
rcrb
mov
scas
cltd
clc
pop
or
out
and
inc
xchg
mov
lcall
bound
sarb
cmp
lds
inc
popf
leave
mov
mov
jge
or
loopne
lahf
jg
enter
fimull
sub
out
xor
sub
ja
adc
mov
push
add
out
pop
sub
xchg
push
inc
stos
jb
int
test
shlb
push
leave
test
sahf
jle
lods
loope
stos
and
xchg
bswap
es
push
xor
cmp
sub
jne
inc
mov
mov
pop
leave
pop
mov
sub
pop
mov
pop
adc
inc
outsl
mov
inc
add
cmp
lods
loopne
sub
das
inc
ljmp
stos
xchg
mov
mov
jb
jb
mov
out
mov
cmp
scas
rolb
xchg
pop
mull
inc
push
xor
push
xchg
fisttps
cld
aaa
dec
push
mov
mov
adc
scas
pusha
inc
pop
mov
bound
cmc
jne
sbb
mov
enter
inc
jl
sub
mov
rcl
push
call
pop
sbb
shlb
loopne
pusha
loopne
divb
push
in
fcom
imul
pop
push
push
arpl
cmp
rolb
pop
lods
mov
add
aad
cld
addb
lock
mov
cmp
inc
adc
inc
loop
outsb
push
imul
or
sbb
cmpsb
inc
or
sbb
arpl
jmp
pop
in
inc
push
pusha
mov
gs
gs
jno
test
inc
xor
ret
mov
cmp
fadds
jnp
rep
push
jl
jl
jl
jae
and
cmpsl
push
repz
jp
xchg
adc
jl
sub
filds
add
lcall
ret
sahf
pop
pop
addl
loopne
inc
add
jnp
xchg
sub
mov
xor
pop
pop
test
mov
aad
sahf
cmpsb
push
mov
ret
mov
xchg
pop
pop
insb
fwait
pop
idivb
and
push
mov
mov
cld
clc
scas
mov
cltd
cli
add
jle
sbb
ds
mov
shll
test
stos
or
orb
loopne
pop
ja
scas
push
dec
lret
mov
xchg
sarb
rolb
jbe
push
sub
mov
rolb
enter
cltd
icebp
adc
mov
pop
imul
insb
and
xchg
push
loopne
sahf
pop
dec
cld
insl
cmp
inc
scas
test
pop
mov
loope
stc
or
scas
mov
loope
mov
xchg
aam
cmp
mov
gs
aas
stos
or
in
out
popf
mov
push
inc
divb
cmp
adc
mov
inc
cmp
into
push
inc
stos
xchg
xchg
cmp
xchg
xlat
sbb
rcrb
test
and
jo
aam
xchg
xor
scas
int
pop
pop
sbb
lea
push
mov
ss
dec
lret
add
pusha
inc
pop
or
js
lods
cmp
fsub
jb
adc
mov
sbb
sti
jns
mov
push
and
cmp
fs
mov
fadds
push
pop
icebp
inc
in
push
mov
push
sub
push
jbe
xor
xor
je
push
xor
insl
shll
pushf
jo
mov
push
lds
xchg
int
stc
mov
xchg
loop
sar
test
mov
dec
movl
gs
aam
inc
in
mov
fninit
dec
jne
mov
cmp
pushf
add
cld
push
jbe
cld
loope
insb
lret
inc
jae
leave
out
and
imull
hlt
sub
jecxz
pop
outsl
popf
pop
cmp
out
pop
mov
cmp
or
xchg
sti
outsl
outsb
lods
jmp
ficoms
lret
psrld
push
rcrb
sti
mov
mov
imul
jo
imulb
push
mov
add
cmpsb
and
mov
rcr
inc
xorps
sarl
ret
cmp
pop
lea
shlb
pop
in
jns
xchg
xor
pusha
inc
idivb
sub
rolb
or
xchg
xchg
lods
add
loop
cmp
mov
sub
sub
lahf
scas
bound
mov
daa
les
cwtl
add
fstpt
dec
adc
cli
scas
jb
cmpsl
insl
jno
test
movsb
out
fsubl
insl
mov
rolb
test
sbbb
add
cmp
mov
mov
mov
shrb
fs
sti
int3
pop
shlb
push
jge
stos
aam
test
mov
pop
leave
xchg
test
and
sbb
hlt
xchg
into
scas
xchg
xor
loopne
mov
mov
add
add
jmp
inc
sub
xor
repnz
and
ja
sub
pop
test
lret
js
xchg
stos
imul
das
add
dec
push
or
sub
mul
pop
lret
into
jecxz
dec
cwtl
movsb
mov
lds
push
pop
inc
bound
arpl
ljmp
mov
popf
fcoms
mov
push
xor
orb
icebp
loop
pop
or
add
pop
dec
test
xor
rcl
pop
aas
popa
jmp
out
verw
mov
test
sub
subb
mov
mov
and
lock
sarb
jb
out
lods
push
loop
pop
fs
outsl
pop
sub
xchg
push
xor
sbbl
xor
adc
inc
mov
and
jns
or
outsl
repnz
or
add
or
pop
xchg
sbb
fcmovb
into
jmp
cmp
lea
mov
add
shrl
sub
test
mov
loope
lcall
cmpl
mov
cmp
mov
mov
adc
dec
cmp
lods
push
jnp
loopne
inc
call
test
xlat
pop
sbbb
popa
and
push
cmpsl
stos
xor
scas
int3
loop
aad
adc
mov
enter
into
mov
jo
fnsave
mov
and
push
cmp
inc
push
pop
cmp
pop
xchg
aam
in
mov
loopne
push
adc
push
dec
cmovbe
jne
add
cwtl
push
add
push
ds
gs
getsec
iret
mov
xor
ljmp
xchg
int3
cmp
jecxz
stos
xor
pop
mov
clc
in
rcl
stos
add
mov
js
les
loop
out
push
and
jne
cmp
push
das
mov
inc
xchg
inc
in
mov
add
loopne
out
cli
push
add
rol
nop
xchg
shlb
mov
int3
inc
inc
sbb
or
test
cmp
inc
add
jge
cmp
pop
movsb
mov
js
mov
push
pop
cmpsb
push
mov
aam
fnsave
cmp
jno
out
xchg
sbb
sahf
jae
xchg
das
push
inc
jo
xchg
call
call
adc
repnz
jns
fldt
pop
imul
sbb
adc
xor
pushf
faddl
or
mov
loopne
adc
or
loopne
and
xlat
mov
les
int3
rcll
adc
mov
fisubl
ficomps
push
divl
cmpsb
push
cmp
mov
scas
add
test
jno
ljmp
mov
shlb
inc
dec
lods
xchg
cmp
ret
xchg
mov
lock
in
andb
mov
sbb
sarb
cmc
add
pusha
repnz
js
mov
mov
dec
stos
cmp
mov
mov
pusha
sub
int3
fiadds
js
push
pop
sub
mov
lret
pusha
jno
fsub
iret
je
out
mov
arpl
jl
int3
insl
jmp
jnp
inc
loopne
clc
push
xor
adc
fadd
pop
xchg
mov
loopne
addr16
js
pop
loopne
adcl
pop
mov
jne
push
in
ss
pop
shl
push
mov
cld
cmp
iret
clc
mov
repz
cld
add
imulb
pop
shlb
test
leave
jl
cmp
push
mov
pop
mov
fucomi
xor
fwait
cmp
jae
cmp
adc
or
pop
or
movsb
jb
sti
rclb
sti
loop
adc
lods
inc
pop
push
pop
jae
mov
popa
notl
cltd
repnz
cs
fbstp
test
dec
pop
push
jmp
mov
xor
xchg
mov
int3
cmp
repz
mov
xchg
pop
cli
and
pop
pusha
mulb
xchg
pop
inc
pop
imul
nop
les
adc
test
xlat
mov
add
and
std
gs
push
lahf
xchg
out
mov
pushw
cmc
test
dec
loope
stos
add
icebp
mov
ret
push
sub
sbb
repnz
xchg
scas
fnstsw
mov
sbb
loope
stos
rol
in
out
aaa
faddl
cmp
sbb
add
inc
xchg
mov
lret
inc
hlt
lcall
loopne
or
loopne
mov
not
push
lret
jg
imul
data16
mov
fisubrs
jmp
mov
sbb
sub
out
add
xchg
cmc
imul
push
into
cmpb
push
xor
dec
adc
xchg
pop
push
in
orb
js
pop
or
sbbb
lret
push
jne
cmpsb
stos
dec
das
mov
pop
orl
dec
cmovo
lret
int
pop
mov
aam
test
test
and
in
or
jmp
mov
movsb
scas
loopne
mov
inc
cmp
mov
or
out
shll
add
push
xchg
enter
pusha
mov
mov
fwait
or
aam
push
lret
mov
shll
pop
pop
ret
jle
cmc
cwtl
fadd
js
jle
scas
push
shll
mov
ret
push
testb
iret
jno
or
jo
xchg
push
ret
out
and
cwtl
pop
orb
and
pop
repnz
xchg
stos
test
aas
repz
test
jb
daa
ret
ret
iret
rcll
jb
ljmp
mov
sub
lods
xrelease
ja
sbb
mov
inc
mov
test
inc
int
jne
aaa
mov
add
into
imull
dec
lahf
mov
in
add
hlt
fwait
imul
xchg
gs
xor
out
test
stos
test
dec
fcoms
ret
in
bndstx
sbb
out
cmpsl
push
sub
enter
push
cmp
test
mov
stos
lcall
xchg
je
sbb
lods
add
push
lret
subl
mov
aaa
pop
sti
sbb
mov
out
shll
loop
push
dec
int
inc
pop
fcomp
ret
arpl
popa
jns
scas
popf
pushf
hlt
mov
jmpw
and
pop
add
cltd
adc
pop
js
mov
mov
pop
mov
or
pop
mov
movsb
int
push
repnz
mov
add
cmpb
shrb
sub
dec
and
ds
sub
adc
sbb
xchg
dec
daa
mov
push
xor
or
cmpb
or
adc
mov
stc
xchg
ret
mov
lock
and
sub
add
out
adc
arpl
frstor
cld
xchg
sub
popa
adc
mov
jecxz
cmp
cwtl
les
xor
xlat
in
test
push
pop
mov
xchg
ljmp
push
pusha
pusha
sbb
add
pop
cwtl
sub
cmp
mov
mov
sub
mov
push
push
xor
popa
xchg
or
mov
pop
adc
loopne
xor
test
add
sub
push
fistps
and
push
inc
mov
xchg
int3
cli
dec
cmp
in
mov
xchg
sub
mov
clc
cli
fdivp
test
enter
push
mov
inc
or
in
fisubrs
xor
lahf
jl
jmp
fdivr
adc
push
adc
lods
ret
movsl
ss
rcr
imul
jbe
mov
sbb
add
cmpsb
xchg
test
and
andb
inc
push
push
pop
idiv
sub
out
sahf
addb
shlb
add
adc
add
mov
jno
dec
leave
outsb
mov
stos
repz
jne
push
fsubs
and
loopne
insl
xchg
into
xor
push
cmp
call
xor
int3
xlat
mov
imull
xchg
test
cwtl
dec
loopne
dec
xor
pusha
jle
jge
inc
shlb
mov
xchg
pop
xlat
jne
and
mov
jo
mov
enter
leave
pop
shlb
pop
pop
push
cmpsl
jmp
mov
or
sbb
jae
sbb
xor
cmovs
daa
imul
dec
push
xchg
cmpsb
rcrb
enter
dec
and
and
pop
push
mov
sbb
and
sahf
mov
adc
jo
jae
ret
in
imul
xor
mov
mov
ss
loopne
aad
les
push
push
add
add
xchg
mov
dec
in
xlat
mov
scas
aaa
and
ja
popl
inc
mov
mov
push
imul
jge
and
clc
outsl
sub
pop
lds
and
mov
mov
int
mov
movsl
std
push
sub
scas
lock
lock
jp
jge
fwait
xchg
nop
or
ret
lea
mov
xchg
inc
push
jmp
leave
add
outsl
insl
aas
data16
jo
fistpl
pusha
jbe
out
mov
cmp
push
add
and
sub
dec
stos
adc
inc
lods
jecxz
out
ret
cmp
cld
call
inc
pop
loope
lret
add
rolb
or
and
addb
mov
mov
sbb
std
and
das
fcmovnb
out
loop
xor
inc
mov
add
pop
fstps
cmp
dec
xchg
in
push
aas
lods
jnp
int
pop
xchg
pop
ja
push
cmpsb
aad
std
repnz
inc
xchg
repnz
push
test
mov
lea
in
mov
add
xor
push
stos
mov
popf
aad
sub
pop
xchg
in
out
test
bound
pop
lds
and
outsb
lds
loopne
pop
jle
bound
push
pusha
mov
aas
xchg
dec
sub
mov
jae
adc
dec
fdivrl
in
xchg
cmp
and
mov
outsl
pusha
int3
or
fimuls
inc
pusha
cmpsl
cmc
loopne,pn
xor
sub
fwait
inc
dec
fcompl
das
inc
xchg
out
lcall
int3
pusha
and
sub
jp
xchg
adc
add
rcrb
push
and
sbb
and
cmpsb
les
lods
loopne
lock
mov
xor
clc
rorb
xchg
jbe
stos
je
xor
call
sbb
negb
popa
pop
arpl
add
pop
jmp
clc
test
sub
test
sti
cmp
lret
divb
cltd
sarl
scas
test
cmp
xor
and
faddl
stos
push
sub
pusha
mov
imul
mov
rcrb
int
cmp
mov
mov
in
not
outsl
sub
push
mov
or
in
stos
leave
jmp
inc
jae
pusha
and
faddl
mov
shll
clc
shrb
pop
push
decb
inc
cmp
mov
pop
pop
fwait
mov
mov
out
rorb
rcrl
push
xchg
clc
push
daa
clc
imul
dec
inc
arpl
test
aas
into
adc
and
mov
jo
out
fwait
xchg
scas
pop
add
xor
pop
mov
or
and
cwtl
pusha
pusha
lods
push
adc
xchg
ja
cmpsl
cs
fcmove
sbb
mov
push
testl
cmp
clc
pop
sub
cs
cli
mov
test
push
mov
add
dec
rorl
jg
dec
or
push
sub
sbb
push
or
mov
inc
mov
dec
cmp
sub
cld
icebp
pop
outsl
sbb
mov
cmp
divb
sbb
pusha
cmpsb
pop
or
push
dec
enter
mov
js
cld
push
aas
repnz
shlb
and
hlt
pop
mov
enter
loop,pt
lcall
jae
ss
fcmovne
loope
clc
loopne
push
xchg
lds
dec
pop
push
fs
cwtl
js
pop
fdivl
mov
lds
outsl
arpl
int3
andb
mov
push
push
pop
pop
loope
fstpl
lret
aam
aam
aam
sbb
icebp
inc
sub
test
jmp
daa
sub
pop
xor
iret
int3
insl
js
sub
mov
add
mov
or
cwtl
mov
movsb
neg
mov
inc
lcall
mov
adcb
aaa
adc
push
or
xor
xchg
push
mov
and
lods
and
popf
push
sub
roll
mov
leave
mov
repnz
add
dec
xor
mov
jbe
pop
repz
push
cmpsl
nop
inc
rcl
insb
test
pop
adc
loopne
mov
inc
mov
push
inc
push
fs
movsb
imul
pop
shll
xchg
inc
das
jns
cmp
mov
sar
aad
jmp
call
push
bound
pop
scas
xchg
inc
div
jb
mov
sub
js
jle
nop
adcb
inc
int3
mov
mov
mov
mov
sbb
inc
js
in
pop
mov
imul
pop
lahf
jg
sub
jg
sub
add
cmp
inc
scas
jnp
out
pop
sbb
dec
inc
arpl
loopne
dec
cmp
mov
push
ret
push
icebp
fldt
cs
push
jnp
adc
sbbb
sub
nop
mov
sub
sub
jb
fsubrl
jg
and
push
shlb
popf
pop
lret
in
xchg
and
pop
and
pushf
adc
pop
cwtl
int3
inc
sbb
jmp
jp
jl
loopne
idiv
es
int
outsl
mov
addr16
lret
adc
pop
daa
loope
xor
push
push
mov
aam
mov
mov
addb
cwtl
loopne
add
or
or
ja
imul
sbb
add
mov
xor
adc
sub
rolb
lcall
scas
shl
jnp
into
incl
rorb
push
cmp
jnp
jg
xor
jle
movsl
pop
inc
xor
loope
and
stos
neg
stos
lods
gs
push
les
js,pn
movsl
sbb
cmpb
or
and
mov
jbe
scas
iret
in
mov
mov
or
out
mov
in
aaa
jb
repnz
adc
push
fisubrs
and
jl
jl
xor
mov
mov
jl
cmp
ljmp
les
mov
bound
fiaddl
adc
mov
cmpsl
mov
test
pusha
ljmp
rcrb
lret
pop
cmc
push
sarl
adc
mov
push
sti
xor
shlb
and
arpl
dec
sub
fdivl
sbbb
faddl
mov
out
mov
xlat
fcomps
lret
xor
push
fbld
inc
sbb
mov
xchg
and
add
mov
add
inc
mov
or
pop
mov
jmp
daa
sbb
fucomp
mov
inc
loop
mov
mov
pop
push
gs
xchg
aas
cltd
aam
adc
mov
repz
dec
pop
jae
pop
dec
cltd
inc
ret
xor
aaa
cmp
outsb
mov
pop
shlb
dec
lods
lcall
or
cmp
lods
pop
clc
pop
les
ljmp
addb
inc
xor
lcall
in
add
pop
mov
pop
js
push
lcall
ljmp
or
shrl
lahf
or
pusha
jecxz
mov
int3
pop
insb
jae
mov
sbb
mov
setge
faddl
sbb
addb
dec
xlat
mov
push
cs
fsubrl
shll
test
inc
add
bnd
dec
in
out
cmpb
inc
sahf
xchg
cltd
ret
in
and
and
cmp
test
gs
rclb
and
loopne
or
and
pop
nop
clc
sarb
cli
xor
test
enter
mov
out
roll
add
mov
push
xchg
pop
inc
mov
test
mov
cmp
inc
xchg
jnp
gs
cmpsb
idiv
inc
test
outsb
jne
js
cmp
mov
aam
call
adc
fmuls
insw
adc
shlb
or
leave
mov
rorb
mov
sbb
shlb
cmp
and
mov
or
iret
adc
mov
ja
cld
lock
and
stc
mov
pop
adc
int3
lea
pop
fldl
pushl
lea
add
data16
inc
rclb
dec
mov
inc
sub
enter
out
cld
stos
cmp
fs
ss
add
cmp
cmpb
or
dec
or
mov
mov
or
arpl
wbinvd
push
addr16
clc
popf
push
jge
ss
test
mov
bswap
das
mov
push
mov
push
sbb
loopne
test
cwtl
test
pop
or
mov
sbb
sub
add
jbe
pop
cmp
sbb
addb
cltd
iret
or
xor
xchg
loopne
sub
jb
xchg
jmp
lods
aam
bswap
mov
cmp
xor
shl
mulb
lods
mov
sub
jbe
in
jg
ljmp
dec
out
cmp
sbb
jne
fs
lods
outsl
and
rcll
enter
mov
mov
adc
dec
scas
xchg
lcall
xchg
ss
adc
clc
imul
out
test
add
push
je
push
dec
add
add
mov
push
pop
aaa
cmp
adc
aam
mov
add
setae
cmp
test
add
es
or
bound
cs
pusha
out
adc
pusha
push
imul
jmp
or
inc
and
fs
adc
push
sbb
and
push
ret
iret
repz
sub
rcrl
mov
shr
shll
inc
dec
xchg
ss
xor
push
mov
jecxz
and
in
xchg
jl
inc
out
xchg
xchg
out
pop
xchg
xchg
fnstcw
xor
adc
and
add
lods
adcb
ja
pop
test
or
and
inc
loopne
icebp
mov
enter
enter
shlb
cmc
xor
xchg
lock
inc
setp
mov
sbb
inc
jne
fisubl
jns
jno
jb
stc
je
imul
fsubrs
and
cmpl
mov
sub
clc
inc
jecxz
sub
jecxz
ret
inc
pop
roll
out
movsb
add
scas
push
imul
out
cs
mov
add
loopne
dec
or
ret
int
sub
cmc
push
fwait
outsl
jb
pop
repnz
inc
mov
les
inc
in
sbb
push
mov
sbb
and
call
loopne
je
mov
insl
pusha
push
mov
xor
sbb
sahf
cmpsb
push
add
mov
shlb
cmpsl
ljmp
sbb
add
loopne
popa
mov
xlat
push
scas
stc
pop
xchg
add
and
cmp
sbb
daa
sbb
sub
adc
dec
push
cmp
mulb
mov
nop
lock
pusha
dec
jmp
test
mov
sbb
mov
loope
add
and
mov
jnp
adc
or
mov
pop
cltd
push
nop
add
ret
enter
popa
adc
add
dec
idiv
ret
leave
dec
push
cmp
pop
neg
mov
sub
pop
jbe
xchg
out
xchg
xor
int3
fdivs
scas
cmpsl
bound
sub
push
bound
adc
mov
xchg
jg
fcomip
sub
pusha
subb
sub
jnp
scas
jnp
lret
ss
jo
inc
or
lock
jne
into
sahf
loope
rclb
mov
pop
imul
mov
hlt
jle
inc
pushf
sbb
add
pop
push
and
call
repz
push
push
lcall
pop
or
dec
mov
dec
jnp
push
mov
mov
adcb
lds
cmpsb
and
pop
sbbl
cmp
leave
cld
mov
in
xchg
adc
pushf
pop
sbbb
xchg
adc
lret
in
cmp
decb
xchg
rcr
inc
jecxz
dec
pop
dec
stc
bound
cmp
add
and
jmp
inc
fsubrl
or
jbe
mov
and
mov
bound
inc
aas
mov
mov
rclb
pop
int
pop
push
lahf
icebp
or
sub
in
sti
mov
icebp
lds
jmp
push
xor
flds
sti
pop
cmp
inc
jbe
jns
cmp
jae
mov
xchg
fmull
jb
add
and
push
cmpsl
sbb
into
jno
mov
rorl
mov
mov
sahf
lcall
dec
jae
jecxz
xchg
hlt
pusha
cmp
jnp
lret
jl
or
shrb
pop
ja
ds
rcr
sub
repnz
pop
adc
shlb
cwtl
or
dec
inc
loopne
and
jns
aaa
and
outsl
xor
inc
fcomps
mov
jbe
cmc
std
into
out
and
aam
imulb
shlb
sbb
cmp
dec
xor
outsb
lret
aam
mov
mov
iret
stos
sub
es
push
add
outsb
popa
dec
fisttpl
mov
in
mov
sub
push
cs
pop
cmpsl
push
hlt
inc
jp
loopne
cli
xorl
ljmp
ljmp
popa
xchg
push
test
addb
pop
pop
dec
sbb
mov
aam
divl
loope
push
fwait
fs
imul
push
gs
gs
push
sarl
add
push
mov
pushf
add
sub
xlat
mov
pushf
loopne
idivl
int
insb
and
jbe
push
hlt
jne
shrl
push
and
addb
jbe
lea
or
outsb
inc
sub
cltd
repz
lods
sub
mov
inc
push
js
lea
sbb
jmp
nop
aam
sub
xor
movl
out
push
dec
push
mov
fdiv
movsl
repnz
inc
push
jl
ds
shlb
inc
jne
int
roll
movb
lds
inc
adc
sbb
aad
mov
inc
loop
inc
repz
mov
adc
add
in
mov
sub
and
ret
mov
push
inc
dec
loopne
lods
iret
push
mov
mov
pop
fmul
mov
shll
push
cltd
mov
adc
int3
add
jecxz
pop
clc
and
mov
neg
sti
aas
movsl
scas
sub
gs
xor
sub
xor
rcll
push
sub
sbb
lcall
mov
mov
adc
or
push
jne
inc
lods
or
xor
aad
fs
dec
stc
xchg
out
sbb
add
sub
pop
sarb
ja
mov
xchg
lahf
loope
pop
outsl
mov
test
mov
and
xor
xor
jae
sbb
data16
in
dec
clc
nop
and
das
push
dec
pop
mov
inc
xor
push
loopne
inc
cmp
loopne
loope
cltd
inc
lods
test
jae
sarl
sar
hlt
pop
jne
xor
xor
and
jp
sbb
dec
jg
daa
xchg
cmpsb
adc
ror
scas
int
adc
push
out
icebp
in
test
jle
ret
adc
jg
lea
mov
inc
addr16
dec
subb
jg
movsl
scas
hlt
cmpsb
mov
cmp
test
lods
and
daa
shlb
jb
fnstsw
mov
jecxz
cltd
stos
inc
dec
call
push
cwtl
fsub
mov
push
ss
mov
rorl
add
mov
ret
lret
repz
mov
dec
shrb
sub
xchg
inc
or
mov
das
xchg
pop
mov
inc
stos
jle
add
rol
sahf
loope
test
lods
fdivrs
sbb
clc
sub
fstp
test
sbb
mov
or
orb
cmovo
and
fldcw
mov
push
jb
xchg
add
mov
mov
xor
xchg
lea
sub
sbb
ret
cld
cli
add
jae
ret
inc
cmpsl
ljmp
popf
fistpll
cmc
or
loopne
addr16
mov
xor
clc
out
clc
fidivrs
cmp
popa
sub
mov
movsb
cmp
xchg
cld
fwait
push
subl
mov
lea
lea
pusha
stc
movsb
imul
out
je
dec
or
test
daa
dec
jecxz
sub
into
aam
lock
mov
push
loopne
std
fdivrs
inc
nop
inc
and
loopne
jno
aad
cmp
test
cmpsb
lahf
iret
leave
test
xchg
adc
subl
loope
jge
mov
push
stos
imul
stc
or
sbb
inc
cwtl
mov
test
mov
jecxz
mov
cmp
lret
idivb
mov
pop
popa
pop
push
nop
and
jns
aam
cs
or
inc
cmp
add
mov
sub
pop
mov
ror
jnp
outsl
push
outsb
adc
pusha
loope
jmp
jecxz
mov
dec
pushf
shlb
add
mov
int3
lods
aas
mov
cmpsl
mov
mov
ds
daa
test
sbb
push
out
ret
fistpll
lahf
jp
addr16
fsts
lds
cmp
lods
pop
cmpb
mov
jnp
jge
test
xor
and
cmp
fs
fldt
jns
insb
andl
mov
dec
fstpt
stc
pop
dec
mov
jns
clc
sbbb
push
daa
mov
adc
and
adc
int
or
and
jecxz
lods
rolb
dec
int3
xor
mov
pusha
adc
pop
lret
mov
popa
cmpsb
jns
pop
adc
xchg
jae
adc
mov
xchg
mov
xchg
ret
push
xor
sub
and
xor
les
sbb
xor
sub
inc
jmp
and
ds
inc
sub
or
pusha
inc
adc
lea
push
xchg
pop
xor
nop
mov
scas
das
jae
mov
mov
ja
enter
mov
inc
ret
lcall
je
loope
mov
ret
jb
and
mov
dec
sbb
pop
andb
jns
add
pusha
out
mov
ljmp
ds
add
mov
dec
lcall
mov
in
push
popf
or
cmpsl
cmc
adc
mov
loopne
mov
mov
fs
clc
shl
test
inc
ds
in
xor
pop
mov
addl
mov
push
mov
push
pop
arpl
mov
cld
push
cld
dec
fimull
sti
ss
mov
mov
inc
int3
and
xchg
xor
cld
and
jmp
or
cmp
dec
pusha
lds
or
pusha
lds
and
push
mov
mov
loopne
jl
or
ljmp
sub
std
sub
push
repz
imul
cmpb
adc
jmp
ja
aaa
add
mov
mov
mov
pushf
mov
bound
adc
xchg
sub
lock
nop
aam
and
fwait
in
and
xchg
cmc
fdivrs
jmp
mov
rolb
je
lock
and
sti
out
push
adc
shr
mov
xchg
ret
add
mov
dec
sub
add
dec
jl
ror
insb
xchg
in
sarl
test
rorl
fmull
pop
int
push
pop
push
loopne
jne
out
push
repz
sar
jbe
int3
add
xor
push
clc
repz
fisubrl
pop
je
insl
popf
stos
and
sbb
add
inc
ret
pushf
and
jle
sar
mov
add
inc
mov
mov
icebp
sbb
or
cwtl
pusha
mov
ret
cmpsl
es
arpl
fs
dec
cmc
fisttps
outsb
and
jmp
cli
jecxz
dec
cltd
sarb
pop
sbb
pusha
call
loopne
out
fstpt
jg
dec
mov
test
cmpsl
enter
mov
push
lods
mov
sub
das
fwait
je
incl
pop
mov
rcrb
push
loopne
ficoms
push
sub
inc
loopne
das
adc
mov
fldl
mov
xchg
push
fmull
sbbl
or
in
enter
xor
push
je
fsubl
pusha
les
orb
lcall
xor
icebp
mov
cmp
sub
push
in
loope
and
xchg
pop
fld
out
dec
loop
outsl
xchg
insl
repnz
pushf
push
pusha
decl
adc
loopne
es
loopne
gs
push
pop
cmp
adc
mov
xchg
cs
adc
shlb
out
in
add
in
push
mov
pop
test
or
and
cmpsb
inc
push
adc
sub
nop
cwtl
and
adc
loopne
adc
pop
data16
and
mov
dec
pop
mov
adc
bound
sub
das
fsubrl
add
iret
xor
jle
and
dec
inc
shll
std
mov
sbb
sahf
pop
cwtl
nop
add
les
aaa
jnp
fmulp
daa
scas
add
fisubrl
add
mov
dec
mov
and
add
dec
cltd
push
push
in
sbb
or
stc
mov
cmp
xchg
and
add
aad
inc
sbb
into
dec
inc
sub
mov
inc
or
xor
add
push
arpl
pushl
ja
into
repz
jmp
sub
inc
in
inc
jecxz
xor
subb
or
dec
mov
andb
sub
and
pusha
incl
ljmp
hlt
pusha
inc
leave
int3
pop
mov
jne
push
loope
push
rcrl
incb
pop
cltd
inc
lahf
lock
faddl
in
mov
mov
dec
inc
mov
and
sti
orb
ficoml
loopne
aaa
aas
dec
mul
ljmp
mov
ret
in
fs
lea
jmp
dec
or
add
test
ss
mov
arpl
aam
mov
pusha
jne
add
pusha
repz
xor
test
int3
fnsave
push
loop,pt
lahf
aas
into
cmpsl
inc
lods
jb
cmp
leave
mov
das
and
aas
fwait
xchg
js
lock
xchg
loopne
fwait
popa
mov
mov
fidivrl
test
mov
out
mov
pop
aas
leave
cltd
adc
push
enter
enter
xchg
xor
aad
cwtl
loopne
sarb
sarl
sbb
daa
and
xchg
add
inc
cmp
arpl
leave
jge
xchg
dec
dec
lock
mov
push
rcr
xchg
sub
or
and
movsb
mov
movsl
cwtl
push
mov
lds
fsubrl
mov
dec
adc
and
or
pusha
xchg
jecxz
xor
call
shl
dec
outsl
lcall
sbb
ss
cwtl
mov
and
icebp
sbb
push
shll
sbbl
mov
sbb
xchg
sahf
sar
insb
and
int
add
jo
stc
jecxz
jmp
jne
data16
ljmp
push
cwtl
hlt
mov
push
stc
mov
pop
out
dec
dec
cmp
pop
into
nop
int3
loopne
xchg
mov
push
inc
inc
fldenvs
mov
pop
add
pop
dec
jne
sbb
enter
cltd
repnz
out
jg
and
das
mov
popa
inc
je
xchg
ja
jge
pop
je
lcall
lods
and
lcall
out
or
rcll
jmp
scas
sub
xor
dec
jb
lea
xchg
pusha
push
stc
insb
dec
mov
loopne
daa
mov
add
mov
add
loop,pn
sbb
mov
in
mov
inc
jo
fisttpll
inc
sbb
lods
dec
mov
clc
in
mov
xor
cmc
and
stos
jnp
mov
test
clc
add
aam
lret
insb
lret
mov
out
daa
inc
lea
or
dec
mov
cmp
jl
loop
cmpsl
add
mov
insl
jns
mov
inc
pop
dec
notl
dec
xor
cmp
xchg
jle
or
add
fdivrs
push
imul
add
mov
adc
mov
or
adc
push
jl
inc
ss
fdivr
inc
andl
sbb
mov
xchg
push
dec
pusha
mov
mov
and
bound
add
inc
sub
aam
xchg
sarl
push
xchg
fsubrs
and
fisttpll
cs
mov
jl
cld
sub
test
push
pop
leave
psraw
lahf
push
daa
les
sub
inc
sti
mov
movsb
jmp
push
jns
sub
jo
mov
mov
mov
cli
pop
lret
roll
cmp
or
shrb
into
rcll
stos
call
bndstx
cwtl
loopne
shll
fidivrs
sbb
mov
loope
cmp
nop
inc
and
xchg
xchg
out
testb
test
and
gs
fisttps
add
pop
jnp
dec
sub
sarl
jb
mov
loopne
ja
bound
outsl
push
imul
into
sub
push
mov
jns
cmp
jo
and
sbb
out
idivb
call
xchg
or
mov
sbb
jmp
xlat
xlat
jp
adc
lds
test
sub
jl
shl
je
aam
aaa
insl
jno
mov
pusha
insl
es
data16
sub
test
fwait
clc
jae
dec
bound
cmp
inc
and
or
pusha
add
mov
jnp
sub
or
fstpt
mov
inc
insl
fidivrl
lret
mov
adc
mov
adc
push
xor
loopne
das
imul
mov
pusha
movsl
sbb
mov
mov
js
push
lret
fdivl
cmp
mov
mov
xlat
setae
imul
into
dec
inc
cmp
ja
pop
jmp
jp
sbb
or
and
mov
ror
sbb
ret
push
adc
cmp
imul
ret
jecxz
and
inc
cmp
cmpsb
adc
pop
xchg
loopne
cmpsb
mov
aam
lods
lret
shlb
xor
call
xor
inc
outsb
push
sbb
inc
fdivp
pushf
shl
jle
pop
sahf
add
dec
pop
mov
xor
xchg
out
inc
arpl
dec
jno
shll
xchg
loopne
stc
sub
dec
ds
xchg
shll
mov
cmp
subb
push
mov
mov
insb
jns
dec
adc
call
insl
pop
fstpl
aaa
or
subb
test
aad
pop
aaa
sbb
les
rol
test
andl
aad
in
pop
mov
xchg
leave
add
mov
mov
mov
inc
int
divb
pop
loopne
mov
jl
add
sub
dec
jae
pop
xchg
sub
in
cmc
xor
lock
movsl
mov
or
jecxz
push
mov
in
inc
fs
shll
add
lods
mov
out
mov
mov
and
lret
add
add
and
popl
pusha
mov
mov
je
mov
sahf
push
sub
jo
lahf
adc
or
arpl
mov
or
sub
and
mov
icebp
subb
loopne
js
negl
pop
les
add
add
in
int
push
out
add
fs
mov
push
or
xchg
cmp
mov
dec
inc
push
shl
out
loope
jl
mov
fwait
cmp
sbb
test
dec
sbbb
std
jb
jmp
sbb
adc
divl
mov
jmp
je
loop
cld
leave
popf
into
fucom
adc
addr16
mov
cltd
cli
ffree
jb
add
xor
mov
pop
enter
and
sub
xchg
mov
xor
fidivrs
les
ss
sti
and
push
dec
lret
out
fisttpl
or
loopne
daa
push
xchg
mov
adc
loopne
fsubl
scas
mov
mov
adc
xchg
loopne
and
loopne
mul
fistpl
sub
dec
lods
out
leave
pop
jp
jae
ret
pop
mov
push
pop
negl
adc
sarl
push
xchg
outsb
aaa
imul
loope
xor
adc
cltd
jns
dec
ljmp
push
loopne
addr16
cmc
or
inc
dec
dec
out
xchg
adc
add
and
dec
out
push
hlt
mov
nop
cmp
xchg
mov
sub
cwtl
mov
pop
sub
rol
mov
into
push
adc
je
shll
inc
lea
shll
int
in
mov
xchg
lock
adc
inc
fwait
out
ja
bound
inc
stos
neg
or
je
jb
test
pop
shrb
test
pop
cmp
or
adc
and
cwtl
fs
dec
testl
fadd
inc
pop
stos
jnp
xchg
sbb
add
mov
sbb
and
adc
cmp
add
insl
jp
sbb
out
xor
pop
jmp
and
js
mov
hlt
and
fucom
xor
mov
sbb
test
lcall
aaa
mov
xor
jns
xlat
inc
inc
repnz
subb
and
daa
sub
mov
mov
adc
into
lods
rcll
fsubs
xchg
test
and
sub
sbb
add
out
mov
or
sbb
add
leave
in
in
adc
cmp
sbb
mov
loopne
sub
jp
nop
xor
pop
call
in
ljmp
mov
inc
push
jns
pop
scas
test
mov
dec
sarb
iret
pop
test
fmuls
jns
dec
notl
push
and
dec
loopne
and
shrl
add
dec
push
negl
lods
loopne
jmp
dec
fwait
out
sbb
shl
jp
push
loope
adc
and
jmp
pop
adc
das
popf
daa
xchg
xor
sbb
rclb
add
xlat
shl
jne
outsb
ret
inc
mov
loopne
or
sub
inc
lret
faddl
daa
ss
aaa
lock
int
arpl
push
leave
lds
leave
push
add
xchg
enter
jg
ss
cs
xorb
in
add
mov
shl
xchg
dec
sub
daa
or
mov
pop
enter
cmp
out
mov
inc
and
add
cwtl
lods
inc
or
jle
or
add
aad
sbb
cmp
sti
gs
push
cmp
xchg
cld
sbbb
fistps
aam
xchg
push
pop
pop
mov
add
testl
mov
pop
roll
dec
stc
cmp
mov
pushf
pusha
pusha
push
add
addb
mov
mov
sbb
inc
rorb
mov
stos
jns
sarb
es
xchg
push
outsb
pop
xchg
inc
stos
cmpsb
out
inc
rcr
stc
pop
js
mov
xor
add
mov
dec
loop
lret
mov
mov
inc
pop
lret
xor
mov
add
das
inc
xchg
or
stos
jle
pop
xchg
xchg
jl
cmc
fimull
int3
addb
and
pop
int3
fwait
bound
push
je
pop
push
pop
push
inc
iret
lret
in
sub
ret
ret
push
in
movzbl
mov
shl
push
movsb
pop
xchg
mov
addr16
sbb
lahf
add
or
int
push
pop
mov
mov
jns
sub
das
imull
or
inc
adc
jno
repz
pop
mov
cwtl
insb
subb
cmp
test
call
sti
mov
iret
loopne
dec
lret
add
pusha
mov
sub
xchg
shrb
dec
imul
popa
or
orl
mov
insb
add
pop
inc
std
movsl
and
dec
xchg
shl
mov
lds
cld
test
jne
fisttpl
jns
pop
push
inc
mov
jns
lcall
test
imul
loopne
fneni(8087
and
rorl
nop
insb
loopne
sarl
jl
jb
jo
and
mov
push
adc
cmpsl
sahf
adc
in
out
outsb
test
movsl
scas
pop
mov
xor
fdiv
stc
sub
daa
adc
repnz
inc
pop
sbb
sub
xchg
inc
sarb
cmpsb
cmpsb
cmpsl
dec
sti
aad
dec
lret
rcrb
add
lahf
jnp
add
dec
jge
setl
inc
mov
mov
repnz
add
sub
pop
or
and
pop
mov
lret
mov
rolb
iret
lahf
fwait
in
or
mov
into
int3
lods
int3
cmc
sbb
xchg
fwait
inc
orl
lods
and
pusha
aas
mov
fnstcw
mov
loope
nop
int3
loopne
pop
and
call
loopne
xor
fisttps
lret
pop
inc
xor
adc
ret
adc
pop
push
scas
cwtl
jl
fistpl
rorb
mov
add
cmp
inc
shr
cmp
adc
mov
adc
sbb
loopne
adc
outsb
in
and
xchg
adc
lret
push
call
and
fdivrl
or
std
test
cmp
js
aam
pusha
cmp
pop
mov
sbb
mov
cmp
xor
jne
les
adc
and
xchg
ss
int3
mov
add
sbb
pop
pop
pop
addb
sbb
aad
cmp
push
push
dec
sbb
xor
js
xor
aam
ja
sub
in
negb
popf
or
mov
pop
fcoms
jb
and
les
ret
inc
in
mov
cltd
sbb
xor
push
popa
sahf
into
pop
adc
mov
cs
mov
insb
aas
stos
lods
in
int
adc
add
add
test
stc
loope
cs
inc
loopne
or
sahf
dec
pop
std
pop
add
or
mov
mov
sahf
adc
jb
cltd
add
das
lahf
dec
adc
sbbl
icebp
inc
sbb
and
les
popl
or
dec
adc
pusha
sbb
mov
mov
imul
mov
or
shrb
lds
leave
int3
out
in
push
shlb
sub
push
adc
sbb
push
inc
scas
pop
xlat
mov
ret
insb
adc
popf
test
ret
imul
cltd
scas
out
pop
and
mov
les
movsb
cld
and
ror
cltd
cwtl
jo
orl
pop
call
mov
pop
int3
enter
cmpb
and
and
and
mov
popf
fcmovb
mov
pusha
in
or
and
popa
mov
sub
push
mov
jb
test
in
pop
movsl
jle
clc
lods
dec
loopne
sbb
daa
arpl
xchg
pop
test
test
sahf
mov
fadd
ja
testl
rcrl
scas
imul
ds
adc
inc
in
lret
xchg
adc
and
add
mov
mov
mov
repz
pop
push
pusha
xor
jmp
xor
mov
xor
adc
inc
test
adc
subb
test
je
cmp
sub
shlb
inc
and
xor
pusha
cmp
cmp
cmp
or
add
push
inc
inc
and
mov
loop
lahf
data16
xchg
mov
fcomps
mov
ds
sub
cmp
imul
lahf
divl
out
mov
fcoms
pop
aam
test
leave
pop
jle
cli
sub
mov
das
add
roll
inc
test
and
lock
dec
negl
mov
in
jge
cltd
cld
pushf
enter
jbe
cltd
mov
lea
push
push
mov
shlb
out
xchg
fs
push
ljmp
addb
pop
inc
jle
xor
adc
xchg
mov
push
movsb
mov
sub
and
cmp
loopne
jbe
lahf
lret
sbb
inc
insl
sysenter
inc
jmp
push
aad
shrl
jns
inc
das
pushf
movsb
pusha
or
add
fbstp
imul
dec
pop
sbb
jge
add
adc
scas
fisubrs
cmp
xchg
pop
and
ret
test
xchg
sub
je
aad
repnz
pop
rcl
mov
sbbl
idiv
loopne
dec
push
push
leave
add
mov
aas
jbe
aaa
inc
cmovnp
mov
adc
rcrb
fistl
pop
fucomp
sub
insb
push
jnp
mov
cmp
loopne
inc
adc
shl
push
adc
inc
pusha
add
loopne
dec
fwait
lahf
adc
popf
xor
jnp
inc
or
add
loopne
ret
movsb
ret
scas
lret
inc
add
adc
push
psubusw
mov
and
js
xchg
push
cmpl
or
shr
cld
jl
shll
mov
mov
loopne
xorb
mov
dec
push
rcll
in
push
pop
sbb
dec
mov
inc
xchg
in
pop
lcall
pop
jne
inc
pushf
dec
mov
and
les
xor
insl
shrb
repz
fadds
xor
insb
fucomp
xchg
js
pop
stc
sub
xchg
and
dec
insl
stc
lret
stos
outsb
cmp
leave
add
pusha
leave
mov
imul
cmp
fsts
xor
lock
push
pusha
loope
xorl
call
stos
pop
and
int3
pop
imul
and
push
pop
add
add
out
lret
gs
mov
push
cltd
sub
mov
sbb
jo
jb
adc
les
push
fimuls
add
sub
pop
and
push
mov
sahf
pop
out
repz
outsb
inc
or
lea
sbb
rorb
fstpt
andb
aad
pop
add
pop
sbb
shrb
cmc
xchg
into
add
das
sub
in
bound
dec
xchg
test
out
cltd
std
cwtl
mov
je
lds
or
cmp
mov
fidivs
gs
in
inc
sahf
movsb
lea
xor
js
inc
nop
sub
inc
out
xchg
dec
mov
rcrl
stos
loope
mov
pop
loop
push
push
jmp
cmp
cmp
es
leave
push
sub
sub
mov
cmp
sti
mov
push
std
adc
xor
jnp
lods
and
in
testb
mov
fwait
cli
sub
in
pop
imul
pop
adc
addr16
push
stos
add
xor
push
jp
sbb
cmpsl
and
pusha
imul
inc
and
enter
nop
sub
data16
push
pop
std
add
sub
xor
test
and
jno
sbb
and
and
bound
dec
pushf
in
inc
xchg
inc
xchg
mov
push
push
mov
lods
pop
push
sti
out
jbe
aad
ror
sub
push
pop
cld
fimull
add
orb
cli
adc
adc
in
and
adc
dec
cld
shll
cmp
addr16
lods
adcb
add
mov
sbb
push
jbe
jo
xor
mov
sub
cmp
or
sbb
sub
jo
pop
inc
add
jg
ret
and
mov
and
push
stos
dec
dec
sub
pop
jecxz
out
cwtl
insb
inc
ficoms
scas
adc
xorb
adc
pop
int
lds
stc
dec
ret
mov
aaa
sti
popf
dec
lods
or
add
pop
sub
lahf
xor
cmp
jp
sbb
scas
dec
and
mov
out
nop
or
xorl
mov
inc
enter
xchg
int3
ror
mov
in
pop
fs
mov
sbb
and
adc
inc
dec
icebp
mov
subb
cmpsl
sbb
sbb
lret
or
cmp
clc
and
in
int
outsl
addr16
orb
loopne
hlt
subb
test
enter
loopne
adc
pusha
jp
mov
out
push
xor
movsb
fwait
sti
testb
pusha
outsl
jg
aas
pusha
push
fwait
push
pushf
pushf
shl
push
fld
push
xor
ficompl
cmp
fldl
shl
lahf
and
and
iret
lods
mov
ds
icebp
es
insb
xor
adc
push
dec
mov
icebp
insl
mov
mov
js
jle
push
leave
movsb
sarb
inc
or
leave
jo
adc
sub
dec
sti
xchg
fdivl
cli
inc
lods
pushf
aam
or
bound
movsb
loopne
cmp
sbb
xor
or
out
insb
mov
addb
or
xchg
push
inc
sbb
xor
jle
adc
sbb
lods
es
popf
inc
cmp
imul
pushf
add
ret
dec
loopne
sub
lret
movl
inc
jmp
nop
add
sub
mov
in
sbb
fcoml
mov
data16
lock
pop
imul
mov
sbb
mov
hlt
data16
inc
sub
ds
cmpsl
add
out
testl
cmc
popa
out
or
pop
pop
and
inc
xor
scas
add
and
sub
inc
or
or
add
adc
cmp
test
movsb
fisubs
cmp
mov
imul
mov
mov
lods
sub
add
test
add
add
fisttpll
mov
cld
sbb
mov
mov
pop
inc
insl
lea
sub
stos
inc
call
insb
pop
xor
adc
loop
icebp
xlat
mov
adc
pop
scas
xor
inc
out
test
and
mov
test
adc
sbb
mov
xchg
imul
jae
sub
push
mov
data16
mov
or
loope
jl
adc
shlb
ss
push
inc
mov
cmp
mov
mov
fnstsw
dec
cmpl
cwtl
rolb
popa
out
frstor
cwtl
adc
push
mov
repnz
and
push
popa
addr16
scas
sbb
or
icebp
or
fcmovb
jp
sahf
or
push
es
jle
fnstsw
sbb
xor
xchg
push
sarl
adc
mov
loopne
fidivl
jno
movsb
loopne
mov
shrl
xor
inc
gs
ss
add
pusha
fs
and
xchg
fimull
xlat
inc
mov
sub
mov
sub
lret
pop
adc
pushf
mov
mov
push
inc
aam
inc
inc
or
aaa
repnz
dec
inc
sub
dec
icebp
cld
xor
or
gs
pop
inc
js
jl
movsb
imul
jl
mov
dec
std
inc
cmp
test
adc
inc
loop
xchg
lods
adc
mov
fisttps
fcmovbe
jl
sbb
mov
lds
loope
in
loop
inc
adc
shlb
cmp
xchg
orl
mov
pusha
add
clc
sahf
mov
pusha
hlt
fsubr
aaa
mov
ja
and
gs
loopne
mov
in
mov
pop
outsl
jl
test
cmp
insb
ret
insb
mov
inc
adc
adc
cli
adc
xchg
repnz
mov
add
xchg
lahf
mov
mov
insl
lock
push
inc
fimuls
call
fstl
dec
jl
sbb
movsl
ret
lods
xchg
sub
jp
mov
inc
or
or
dec
sti
dec
jb
mov
or
mov
fmuls
xchg
hlt
push
sub
xchg
mov
jbe
push
pop
aam
sbb
sbb
por
jg
dec
jg
jns
les
sbb
mov
mov
pop
inc
and
nop
enter
shll
mov
data16
dec
adc
popa
sbb
loopne
jecxz
cwtl
test
out
out
adcl
jnp
add
xor
xlat
xchg
shl
sahf
sti
pop
test
xchg
cmp
negl
pop
repz
bound
sbb
adc
imul
push
int
outsb
test
insb
or
inc
mov
les
mov
fs
xor
scas
jecxz
cltd
lock
jo
loop
push
push
cmp
add
add
adc
cmp
repnz
push
into
mov
xchg
cs
shll
test
xchg
stc
inc
adc
rcr
int3
inc
push
push
xorb
rorb
and
sub
leave
addr16
cmp
or
xorl
rcr
cmp
je
add
orb
xlat
jmp
popf
ds
cmc
adc
inc
adc
add
fadds
adc
jb
fbld
mov
push
inc
pushf
inc
sbbb
ret
loopne
ja
lret
imul
xor
mov
arpl
in
and
and
je
lock
add
cmp
jmp
icebp
mov
xchg
cmp
leave
adc
add
jbe
nop
rclb
mov
inc
subb
stos
and
xor
cs
fstpt
add
sub
je
xor
mov
roll
adc
pusha
adc
jp
loop
add
pop
pop
add
inc
mov
push
aaa
inc
rcrl
loopne
sarl
mov
cmp
popf
fxch
je
nop
hlt
mov
lock
jno
sbb
loop
sarb
inc
ret
loop
xchg
inc
push
mov
pop
inc
fsubs
dec
fisubrl
add
scas
xchg
fsub
aam
mov
stos
pusha
mov
adcb
inc
flds
mov
xchg
add
mov
lea
xor
gs
rcrb
mov
nop
and
sub
adc
js
dec
jg
addl
or
sub
shlb
jns
mov
inc
push
jne
lods
push
xor
xchg
ja
and
sahf
shl
mov
fsubrl
pushf
movsb
pusha
fisubl
cwtl
push
inc
fwait
stos
addl
adc
push
or
push
inc
imulb
inc
arpl
dec
and
sti
mov
xor
ret
je
cs
pop
stos
mov
addb
sahf
adc
inc
adc
dec
mov
ret
adc
pusha
or
sub
je
or
pushf
adc
jl
cmovae
push
jae
lret
xlat
cs
cmpsb
push
add
inc
or
or
insb
push
aad
xor
jecxz
xor
cmp
rolb
or
stc
std
xchg
loopne
pushf
pusha
dec
imull
add
bound
arpl
je
test
mov
imul
pop
dec
jne
fnstenv
sarb
lods
nop
hlt
inc
cmp
popf
mov
aam
inc
xchg
or
xor
sub
mov
add
outsb
sahf
push
jns
cmpsb
sarl
sub
xlat
push
rsqrtps
add
cmpsb
pop
sarl
push
lods
pop
lea
adc
and
movsb
imul
push
rorb
jecxz
shl
push
scas
jo
outsl
repnz
mov
mov
loopne
outsb
and
imul
or
add
mov
sbb
add
loopne
sbbl
int3
xor
jae
push
test
sbb
rcr
ds
cmp
jo
mov
jne
pusha
xchg
push
test
scas
lods
ret
clc
and
int3
sbb
mov
imul
push
imul
xor
hlt
cmp
pop
out
fcmove
jbe
mov
clc
mov
xchg
mov
sti
mov
lret
sbb
and
dec
push
push
addr16
xor
cmp
hlt
leave
hlt
mov
sar
jle
lods
popa
sahf
push
fs
pop
imul
lcall
mov
push
and
mov
xlat
jbe
or
rorb
sbb
jns
or
nop
xor
dec
mov
aaa
push
cli
adc
add
ret
xor
stc
mov
ljmp
scas
jae
jg
rcrl
in
lret
mov
dec
mov
fdivs
mov
shlb
xchg
pusha
addb
lret
test
adc
mov
mov
jno
arpl
cmp
mov
xchg
and
mov
add
inc
roll
mov
je
lret
iret
mov
cmc
xchg
in
dec
add
and
mov
fsubl
insb
mov
icebp
orl
loop
dec
insl
lret
popa
gs
adc
rclb
fmuls
mov
cmc
int3
in
cmpsb
jecxz
test
or
and
adc
lahf
xchg
lret
push
into
ror
add
xor
dec
dec
mov
int
add
inc
mov
dec
aam
dec
fiadds
jae
lcall
cmp
jg
cld
scas
ja
in
sar
cmp
sbb
sub
std
xchg
cld
inc
lret
mov
dec
lret
xchg
jl
lret
xlat
sub
mov
iret
mov
rolb
mov
ja
add
std
mov
pop
dec
push
cli
cmp
int
popf
sarl
mov
pop
xor
les
or
mov
sarb
fst
test
push
arpl
push
mov
xor
les
inc
into
psubsb
test
js
mov
outsb
icebp
stc
add
pop
mov
cmpb
loopne
sbb
ret
cmp
sar
xlat
adc
inc
add
xlat
and
adc
cltd
sbb
mov
jnp
mov
sub
frstor
out
shll
push
and
mov
iret
enter
jmp
mov
js
out
mov
clc
sbb
adc
iret
fiaddl
movsb
out
inc
mov
xchg
insl
sbb
xlat
sbb
stc
shrb
adc
and
mov
sti
mov
lock
or
sub
jno
xchg
adcb
and
and
or
and
add
xchg
orl
push
fiaddl
sbb
sub
sub
ror
mov
stc
mov
mov
icebp
mov
sub
sti
cmp
push
and
out
fdivs
test
push
pop
sub
cwtl
pop
mov
inc
mov
mov
dec
stc
rcrb
in
sub
mov
push
inc
ljmp
enter
ds
clc
mov
cwtl
and
inc
mov
icebp
jb
mov
cmc
mov
pop
clc
pop
xchg
mov
cmp
lds
daa
rorl
and
ds
and
mov
mov
out
cmp
lds
imul
and
xchg
imul
call
push
inc
test
iret
jg
jmp
cmpsl
lret
dec
lds
repz
xor
fucomip
mov
nop
inc
loopne
or
xor
sbb
addb
jb
lcall
out
stc
loopne
push
xor
mov
mov
lds
xchg
in
xor
test
xchg
jo
mov
mov
incl
and
or
adc
mov
jae
and
aam
loopne
aad
mov
imul
rcr
mov
pushf
pop
orb
repnz
or
rclb
es
loopne
cmp
cwtl
adc
xchg
popf
or
int
sub
push
and
cmp
data16
outsb
mov
adc
or
fistpl
les
push
xor
movsb
jle
jae
and
