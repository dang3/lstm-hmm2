lea
mov
leave
add
add
mov
lods
add
and
add
in
insb
inc
test
and
in
add
lea
jmp
addl
sub
add
add
add
enter
lods
add
lds
insl
inc
in
add
mov
in
test
mov
in
rorb
movsb
inc
and
pusha
sub
test
popa
in
int
add
inc
test
lds
in
add
mov
in
loopne
dec
lods
gs
or
add
mov
or
test
in
add
orb
in
add
jmp
gs
dec
or
lods
loopne
and
inc
test
sub
movsb
loope
or
inc
or
sub
add
inc
or
add
and
call
add
push
add
int3
shrl
sub
in
add
add
movsl
inc
or
int
mov
add
les
test
mov
les
add
dec
in
sub
int
add
in
sub
gs
in
rol
and
add
gs
add
insl
movsl
add
mov
test
or
call
and
add
mov
enter
add
in
add
add
or
dec
gs
mov
insl
dec
enter
insl
add
mov
and
mov
and
lds
int
mov
jmp
les
mov
and
test
lods
in
insl
add
or
and
rol
add
inc
in
and
popa
lods
dec
leave
call
lods
add
inc
rolb
inc
mov
lea
call
mov
pusha
add
loope
inc
push
sub
add
lods
sub
lea
lea
popa
jmp
test
jmp
lds
inc
add
or
add
mov
add
in
lods
mov
int
sub
add
in
and
mov
add
imul
add
add
dec
mov
in
popa
in
test
inc
loopne
dec
add
in
push
mov
movsb
and
test
sub
jmp
movsb
movsb
loopne
sub
imul
leave
add
sub
insl
lods
add
add
insb
fs
roll
inc
add
mov
inc
les
in
inc
insl
shrb
add
inc
lods
add
test
loope
test
or
movsl
roll
fs
leave
and
popa
test
test
dec
inc
add
mov
add
enter
mov
lods
pusha
inc
lea
int3
dec
loopne
mov
mov
in
shll
add
mov
movsb
pusha
in
mov
and
mov
insl
add
dec
sub
test
insb
test
sub
and
int3
dec
mov
in
and
push
int
push
sub
sub
add
int3
and
movsb
loope
imul
pusha
and
add
in
dec
mov
insl
sub
add
test
mov
in
inc
pusha
add
rol
mov
inc
inc
inc
les
and
mov
dec
insl
mov
and
add
loopne
loope
les
les
in
inc
sub
dec
or
dec
shll
add
or
in
jmp
mov
and
sub
add
add
imul
add
insl
dec
add
call
test
or
add
int3
call
loope
inc
inc
or
or
fs
mov
lods
jmp
mov
add
lods
sub
lods
add
call
dec
or
sub
imul
add
les
in
enter
loopne
jmp
add
inc
imul
call
add
or
inc
in
in
inc
in
popa
mov
add
add
in
add
and
mov
dec
or
mov
int3
gs
in
test
sub
dec
mov
imul
loope
add
dec
imul
in
inc
mov
add
lds
add
fs
movsb
int3
dec
inc
add
push
add
sub
sub
loope
add
dec
or
roll
inc
insb
insb
mov
fs
int
dec
add
test
andl
dec
sub
test
add
add
mov
loopne
sub
add
mov
dec
add
inc
test
pusha
in
add
loopne
leave
in
add
movsb
or
dec
add
movsl
dec
movsb
sub
lods
and
add
and
popa
test
lds
and
lds
in
les
call
add
in
and
inc
andb
sub
enter
add
call
test
mov
les
test
in
rolb
in
sub
and
movsb
add
dec
test
enter
mov
enter
test
test
dec
add
add
sub
mov
add
test
push
addl
call
add
add
mov
inc
mov
sub
mov
mov
in
mov
and
shrl
add
lods
add
or
test
int
lods
push
int
in
lds
add
inc
add
or
insl
add
dec
in
gs
in
mov
add
add
in
and
loopne
and
add
inc
add
leave
pusha
add
inc
and
lods
mov
dec
and
in
and
add
inc
in
inc
dec
pusha
inc
pusha
les
lods
add
mov
dec
inc
mov
call
or
add
subb
addl
or
insb
sub
mov
in
les
sub
sub
jmp
in
sub
and
lea
insl
call
inc
lods
lods
sub
loopne
addb
lods
in
inc
sub
roll
in
les
test
add
les
sub
movsb
test
loopne
mov
insl
add
and
call
add
sub
sub
add
test
or
and
add
add
subb
jmp
add
or
or
add
imul
test
lods
or
lods
and
subb
dec
or
in
test
in
add
test
dec
mov
subb
dec
sub
dec
mov
test
sub
insb
and
lods
dec
loope
and
and
add
pusha
add
sub
or
in
insl
test
dec
leave
mov
sub
sub
gs
add
insb
jmp
enter
push
test
add
movsb
push
add
and
in
inc
test
add
mov
dec
jmp
in
dec
subl
test
mov
popa
andl
dec
popa
test
add
and
mov
add
inc
and
movsl
test
sub
add
mov
sub
and
dec
add
sub
int
dec
leave
loope
mov
inc
sub
add
dec
int
fs
loope
add
and
inc
lods
roll
lds
movsb
in
and
add
test
dec
inc
shr
add
add
movsl
in
mov
popa
movsl
sub
sub
int3
mov
add
sub
dec
add
lds
popa
or
loope
in
add
and
add
lea
test
in
mov
movsb
int
in
mov
and
mov
or
add
test
sub
add
call
test
or
enter
inc
add
leave
and
mov
pusha
imul
insl
test
addb
int3
inc
add
add
and
leave
in
test
orl
add
test
les
shrb
sub
or
add
enter
test
in
pusha
or
dec
add
popa
gs
movsb
and
test
sub
fs
dec
popa
sub
add
inc
in
and
sub
dec
popa
lea
test
add
shrb
and
add
imul
inc
test
in
add
jmp
inc
dec
sub
and
add
dec
inc
add
test
add
subl
loopne
in
add
jmp
fs
add
loopne
inc
lds
dec
jmp
test
shrb
or
les
add
add
inc
inc
les
movsb
dec
addl
mov
mov
sub
add
int3
or
sub
movsb
lea
orl
add
or
mov
inc
insb
sub
add
mov
int3
lds
and
and
in
and
mov
dec
add
mov
and
dec
inc
loope
test
leave
in
enter
sub
in
les
mov
mov
sub
shl
shl
loopne
add
add
mov
mov
rorl
add
add
insb
lds
gs
add
or
imul
shlb
test
sub
insb
dec
test
inc
dec
mov
dec
insl
orl
sub
popa
in
or
les
lods
test
and
enter
inc
pusha
les
and
and
in
sub
pusha
push
sub
mov
test
call
inc
lods
test
add
inc
or
or
inc
add
lods
dec
or
andl
lods
andb
loope
dec
movsl
dec
sub
loope
and
gs
in
and
or
and
inc
sub
test
fs
and
fs
push
sub
add
and
or
jmp
and
lods
test
test
popa
and
mov
jmp
gs
les
int
dec
loope
mov
inc
dec
or
inc
dec
or
dec
dec
popa
or
inc
add
call
mov
sub
lods
movsl
shrb
test
add
pusha
popa
mov
add
and
mov
movsb
add
test
add
call
orb
add
sub
loopne
mov
enter
sub
inc
in
imul
call
inc
push
test
add
enter
les
insb
dec
imul
inc
leave
and
lods
shll
insb
mov
or
and
add
add
and
gs
gs
test
in
int3
inc
insl
movsl
or
test
add
add
mov
jmp
sub
roll
insl
sub
mov
int
inc
mov
loope
add
inc
inc
movsb
pusha
add
loopne
popa
lea
movsb
add
lea
dec
mov
test
mov
inc
movsb
enter
leave
dec
dec
inc
or
inc
and
addl
mov
insl
mov
dec
loopne
and
enter
test
or
leave
in
in
add
les
and
mov
mov
subb
orl
in
in
test
movsl
pusha
and
test
int3
dec
subb
or
add
sub
dec
or
test
add
add
and
in
movsb
add
add
push
add
inc
loopne
add
and
int3
add
add
and
popa
inc
roll
dec
lods
pusha
les
sub
popa
test
mov
push
loopne
lea
push
inc
sub
enter
test
add
lea
add
sub
and
loope
dec
or
int3
add
test
call
call
pusha
inc
and
or
sub
test
add
lea
fs
loopne
mov
lods
add
movsb
lea
shlb
pusha
sub
imul
in
popa
test
loope
fs
add
inc
add
insb
in
ror
add
mov
dec
imul
popa
in
mov
lea
test
int3
add
inc
dec
test
insb
add
and
movsl
les
push
add
or
sub
inc
movsb
pusha
sub
loope
gs
sub
dec
or
test
inc
or
subl
movsl
sub
movsl
or
lods
push
add
in
add
and
add
loopne
sub
mov
add
lods
int3
or
imul
mov
sub
mov
sub
or
and
sub
inc
shr
int3
sub
int
in
add
test
rolb
dec
loope
mov
and
inc
sub
lds
add
mov
leave
and
mov
in
sub
mov
and
and
add
add
or
dec
dec
insb
pusha
insl
int3
mov
test
insl
ror
add
lds
jmp
movsb
movsb
dec
add
mov
add
dec
add
in
test
inc
dec
andb
test
insb
sub
sub
add
add
int
test
loopne
and
test
les
mov
dec
lea
andl
add
rorb
mov
imul
push
les
mov
dec
test
add
add
inc
int3
dec
in
or
insb
dec
lods
subb
lods
movsb
push
add
pusha
test
mov
sub
popa
or
fs
or
loopne
and
addl
in
les
dec
add
dec
mov
inc
add
add
in
and
call
loopne
add
in
dec
dec
int3
inc
sub
imul
mov
in
and
shrb
sub
or
push
lods
sub
loope
in
or
sub
sub
dec
add
loopne
mov
or
dec
and
mov
loope
and
loopne
mov
add
insb
add
sub
dec
mov
popa
pusha
add
add
add
mov
mov
andl
test
mov
test
inc
add
add
and
enter
dec
add
dec
lods
dec
fs
movsl
or
add
in
enter
mov
add
dec
in
in
movsl
les
sub
test
mov
add
imul
sub
add
add
sub
mov
int3
add
mov
insl
inc
test
lea
mov
and
and
rolb
rolb
or
test
leave
insb
and
inc
or
pusha
and
loope
add
sub
lea
in
call
sub
imul
mov
subl
add
add
in
popa
sub
sub
int3
leave
sub
add
and
insb
lods
loope
in
push
add
enter
int
sub
sub
and
add
call
sub
movsb
sub
call
les
add
sub
mov
inc
test
subb
call
inc
test
add
test
in
les
lods
lds
or
add
mov
lds
mov
shll
in
test
add
leave
add
and
dec
lds
add
push
enter
add
inc
insb
inc
add
or
mov
test
in
in
mov
and
int
pusha
add
test
movsl
enter
mov
or
add
lods
add
or
and
mov
in
add
test
or
add
add
sub
sub
lods
and
insl
test
in
popa
add
mov
or
inc
in
in
test
test
loopne
gs
dec
inc
les
or
int3
inc
or
sub
call
les
add
in
enter
and
in
add
call
dec
dec
dec
in
roll
lea
add
test
and
add
test
and
mov
add
dec
call
add
and
push
roll
movsb
add
in
and
leave
pusha
pusha
andl
and
add
mov
lods
popa
int
in
dec
pusha
lds
lds
dec
inc
sub
add
in
in
popa
fs
or
add
mov
add
in
inc
in
inc
add
in
add
dec
or
and
movsl
test
or
sub
or
dec
add
in
inc
add
inc
add
lea
lds
inc
and
or
orb
and
and
mov
jmp
test
add
dec
in
push
test
lods
loope
mov
int3
and
or
add
movsl
fs
int
and
inc
sub
in
mov
or
dec
and
in
and
inc
lods
sub
and
popa
mov
dec
les
int3
dec
add
leave
add
dec
and
and
in
jmp
movsl
add
inc
or
and
insb
enter
test
test
mov
add
test
or
addl
les
jmp
gs
add
inc
mov
mov
mov
add
add
mov
shrl
inc
mov
inc
in
dec
imul
add
inc
dec
sub
dec
insl
movsl
add
mov
add
lds
and
int3
int
add
insl
sub
add
test
dec
inc
dec
test
test
jmp
sub
in
popa
push
shlb
test
loope
inc
sub
add
add
and
fs
add
dec
or
add
in
jmp
add
sub
inc
inc
add
or
mov
call
shl
add
movsb
inc
rorb
mov
movsb
lds
push
out
dec
jno
inc
push
rcr
fimull
lods
xchg
push
mov
jecxz
add
inc
nop
mov
mov
xchg
test
enter
mov
fldcw
fcmovnbe
push
dec
dec
fcoms
decb
movl
add
jno
ljmp
add
ret
xchg
cltd
sub
decb
das
aas
jmp
cs
push
je
sub
decb
or
inc
ljmp
inc
push
loope
xchg
inc
mov
in
js
sub
sbb
leave
xor
es
sbb
xor
and
rcrb
mov
fbstp
mov
mov
nop
sbb
push
in
adc
ss
dec
out
lods
cmp
xchg
cmpl
in
and
jle
adc
decb
sub
xchg
mov
lods
or
decb
das
sbb
pusha
add
adc
push
jno
ret
sub
sbb
cs
shlb
add
mov
add
in
xchg
pop
pop
fists
in
or
add
xchg
xchg
cmp
mov
mov
fcompl
push
or
aad
mov
lret
xchg
dec
add
fcompl
lock
out
mov
pop
xchg
sarl
arpl
mov
fcomps
jl
sbb
pushf
lret
jp
repz
test
add
cmp
add
xor
lcall
in
jg
add
cmp
dec
lock
outsl
daa
imul
mov
std
aaa
orb
nop
pop
sub
and
jg
push
clc
les
add
sti
std
adc
inc
add
enter
lea
jns
rol
dec
decb
xlat
sbb
aam
xor
lods
arpl
adc
mov
daa
cmpsl
ficoms
popa
dec
add
cmp
and
mov
cwtl
out
mov
xchg
daa
lahf
lea
inc
fistl
lahf
and
decb
dec
in
sub
and
cltd
xchg
dec
inc
jmp
push
aas
dec
inc
mov
inc
add
add
mov
dec
sbb
mov
jmp
cs
jo
pop
sti
xor
and
lcall
daa
scas
inc
incb
je
popa
mov
arpl
xor
inc
lds
add
ljmp
push
and
sub
sti
lea
inc
sbb
add
aam
lret
arpl
addr16
decb
dec
add
call
mov
mov
add
xchg
leave
push
in
and
xchg
and
cmp
adc
pop
jns
ror
outsb
incb
cmp
rcrb
test
rcll
pusha
add
in
pushf
sbb
add
and
outsb
decb
cmc
fdivl
shll
mov
rcrb
add
subb
or
pop
fadds
or
inc
xchg
jp
jno
sub
lcall
repnz
filds
sti
movsl
outsb
add
push
ret
ja
jo
xlat
sbb
cmc
add
out
cmp
add
decb
push
add
addr16
jl
fsubs
push
pusha
inc
lret
inc
incb
fs
cs
sarb
add
sahf
cmp
insl
mov
xor
push
fiadds
sub
xchg
or
incb
cmp
jmp
ja
push
add
jbe
ror
out
add
outsl
dec
pop
inc
cltd
sub
mov
lds
repz
push
cmp
inc
add
xchg
push
dec
add
cmpsb
mov
and
add
adc
jo
test
fbstp
lret
out
mov
add
sarb
mov
cmp
mov
xchg
sahf
mov
jbe
jbe
icebp
pop
std
mov
mov
or
hlt
pop
pop
iret
mov
mov
dec
add
out
mov
orb
incb
ljmp
mov
imul
jb
in
sbb
shrb
out
mov
cli
fs
outsb
add
push
call
cmp
mov
addr16
inc
inc
sub
leave
rorl
add
sbb
add
popa
adc
fs
lods
add
push
cwtl
cmp
shrl
ds
sbb
xor
adc
outsb
add
lahf
daa
nop
adc
fsubr
std
sarb
add
pop
push
fcmovbe
mov
add
cli
jns
les
js
sarl
loope
adc
xor
cltd
test
out
dec
mov
in
ret
mov
dec
call
cltd
dec
add
es
incb
inc
mov
in
incb
push
mov
jge
jecxz
mov
clc
push
les
shl
adcb
std
hlt
scas
sbb
sar
jle
pop
mov
scas
pop
scas
pop
ljmp
or
sub
lods
adc
decb
pusha
add
push
hlt
push
dec
add
pop
mov
les
lds
add
cli
add
or
fwait
dec
sti
inc
fists
add
loope
insb
add
mov
mov
int
lods
adc
sahf
pushf
aas
out
sti
iret
fildl
clc
sahf
pop
add
mov
in
dec
mov
ja
addr16
sub
cmpl
imul
add
push
jmp
fcompl
or
inc
add
arpl
fwait
pusha
add
jbe
mov
push
test
add
adc
test
pop
fucomip
jecxz
mov
and
decb
add
lods
xchg
cltd
pop
mov
cld
sub
loope
popf
fisubrl
add
ja
repnz
mov
cmp
test
pop
mov
cltd
lds
lock
inc
scas
popf
mov
clc
push
mov
push
pop
xchg
push
cmpsl
ficoms
sub
stc
pop
jb
inc
add
imul
mov
in
jo
adc
nop
push
loop
pop
pusha
add
daa
add
nop
subl
jge
pusha
sbb
adc
add
cmp
fcoml
addr16
aad
mov
adcl
cs
incb
mov
and
xor
pop
or
popa
inc
or
pushf
cltd
adc
icebp
fs
jne
add
push
fsubl
jg
mov
or
in
ret
adc
add
mov
cwtl
lods
sbb
dec
arpl
incb
addb
out
lret
incb
pop
pushl
pop
pop
aas
adc
xor
enter
mov
js
add
mov
test
push
pusha
add
cli
mov
arpl
scas
adc
stos
into
insb
jmp
mov
and
xor
push
sbb
mov
mov
inc
cs
sti
pop
push
and
sub
orl
loope
mov
or
inc
inc
mov
lods
sub
shr
jbe
repnz
or
mov
xor
ret
xchg
and
adc
sub
and
jns
inc
push
out
popl
add
inc
push
sti
dec
add
es
mov
int
mov
xor
jecxz
fwait
dec
add
fildl
and
incb
add
into
add
jae
icebp
enter
sahf
xor
mov
xor
jb
jo
mov
mov
pop
int
xlat
push
lods
clc
and
addr16
negb
cwtl
ret
cld
rol
dec
add
outsl
push
and
cmc
mov
jmp
or
adc
jbe
jp
or
mov
decb
and
pop
add
lret
in
xchg
stos
lods
pop
test
test
addr16
cmp
sbb
and
sub
inc
add
add
jnp
pop
or
es
decb
cmpsb
push
add
mov
in
hlt
jecxz
stos
loopne
or
sarb
xor
decb
lcall
ljmp
sub
xor
dec
add
lahf
and
decb
add
push
pop
push
add
add
xor
int3
cmp
out
addr16
leave
std
in
data16
cmp
or
test
mov
xchg
pop
add
outsl
mov
jp
std
sti
xchg
sbb
scas
subl
arpl
pushf
pop
adc
aad
add
lret
cli
jb
push
xor
sub
incb
add
sbb
mov
loop
add
cli
or
incb
add
xchg
sbb
std
aad
mov
jle
out
mov
fwait
sub
add
sub
pop
ret
decb
inc
rorl
out
push
fs
xchg
repnz
loope
decb
adc
hlt
sahf
imul
sub
add
cld
jbe
fisubrs
pop
adc
gs
sub
decb
xor
add
popa
ja
add
out
push
hlt
inc
inc
enter
mov
add
int
dec
add
mov
cmc
mov
adcl
jne
in
aam
out
inc
add
mov
dec
lahf
push
sbb
movsl
lret
pop
add
xchg
arpl
decb
inc
btr
incb
decb
incb
stos
cmpsl
aas
call
decb
pop
sub
cwtl
xchg
cltd
aam
pop
dec
xchg
outsl
stc
jno
test
add
sbb
leave
add
je
add
clc
dec
add
sub
and
cwtl
ja
dec
or
cwtl
std
pop
js
add
xchg
iret
push
add
jle
stc
shll
add
mov
nop
cld
xor
sahf
je
xchg
mov
fcompl
sbb
mov
sub
incb
addb
sahf
mov
jp
fs
mov
adc
sbb
jne
rclb
shlb
push
add
pop
or
mov
cmp
mov
push
inc
cwtl
dec
idivb
and
pop
aam
xchg
sub
push
push
gs
addr16
pop
cwtl
std
les
dec
add
adc
push
sbb
add
clc
out
out
jl
in
jns
out
movsl
stos
test
push
adc
in
adc
push
mov
fdivrs
js
add
incb
pop
xchg
enter
jbe
fst
popl
sub
lahf
pop
mov
fcoml
scas
mov
pop
xor
incb
pop
mov
popf
andl
das
inc
cmp
jle
pop
mov
xchg
dec
add
pop
push
rcll
lahf
xor
adc
jl
push
fbstp
cmp
jmp
jecxz
sub
push
test
cwtl
mov
xchg
push
cmp
xchg
mov
in
subl
adcb
xor
add
mov
pop
je
fwait
imul
cltd
clc
mov
decl
add
fidivl
lods
xor
and
xchg
stos
xchg
pop
adc
incb
inc
insb
add
jo
pop
arpl
ja
jnp
jmp
lahf
orl
add
ja
pop
mov
enter
mov
int
jnp
stos
idivl
pop
stc
fistps
loopne
or
add
repnz
add
clc
add
xchg
mov
mov
ljmp
push
decb
xchg
sbb
mov
clc
jp
mov
xchg
adc
outsl
aaa
xor
dec
or
add
pop
test
dec
dec
add
xor
xlat
mov
add
test
xchg
inc
decb
lea
divl
jo
sbbl
leave
mov
rcrl
ftst
xor
mov
sbb
dec
into
mov
imul
test
push
inc
sbb
movsb
sbb
negl
cs
aas
add
fldcw
jmp
cs
shl
popa
shrl
test
mov
data16
pop
jnp
decb
mov
in
mov
add
lods
test
dec
test
dec
leave
and
loopne
mul
pushf
daa
sti
sub
gs
xor
push
orb
jo
imul
dec
jo
mov
jnp
push
call
out
xchg
jge
or
xorb
add
insb
add
jg
sub
cmp
incb
pop
mov
push
mov
add
cmp
addl
xchg
sbb
cmp
movsl
add
adc
lods
cs
and
icebp
push
push
jne
outsl
call
push
mov
sub
inc
dec
add
imul
cmp
push
fdecstp
cmp
aaa
xor
loope
jbe
cwtl
loopne
lret
movsb
aaa
lods
enter
push
or
movsl
xchg
sbb
inc
pop
ret
xor
movsb
or
mov
push
mov
js
inc
push
push
add
mov
xor
movb
mov
xor
aas
mov
dec
call
nop
addr16
scas
fwait
aas
pop
and
pop
cmp
test
dec
pop
jge
add
movsb
sti
cmc
fldt
sbb
push
iret
cs
out
mov
pop
mov
xor
pop
push
lcall
pop
stos
add
pop
push
popa
xchg
dec
sub
jo
jbe
arpl
mov
decb
jp
push
jle
add
inc
out
fsts
cmp
fsubs
jb
stos
mov
xor
imul
push
xchg
pop
jg
subl
xchg
in
daa
jg
jo
bound
decb
es
lahf
test
leave
out
adc
xchg
dec
add
incb
decb
aaa
test
ja
insb
add
adc
pop
xor
inc
add
aam
lcall
mov
mov
stc
lods
push
cli
loope
int3
lret
imul
xorb
push
loop
mov
cmpsl
les
add
mov
jno
ljmp
ds
add
or
xchg
inc
decb
adc
incb
incb
pusha
add
test
or
jge
cmc
xchg
ror
out
add
jle
jns
adc
movsb
mov
jge
mov
or
push
fidivrl
outsl
test
mov
xchg
in
rcl
adcl
pop
xchg
outsb
pop
push
sbb
inc
jb
add
inc
add
fdivrp
jns
out
mov
stos
into
loopne
int3
sbb
adc
pop
decb
push
aad
inc
cmp
mov
push
pop
inc
push
sub
xchg
dec
aas
mov
xor
add
movsl
push
das
decb
cmp
or
add
and
cmp
cmpsb
adc
aam
addl
dec
pop
push
add
fadds
and
incb
jae
roll
ffree
sub
pop
jl
test
dec
lret
mov
fcomi
jno
jnp
adc
in
push
mov
fidivrs
sarl
and
mov
xor
daa
hlt
jbe
mov
xchg
int
xor
mov
ds
dec
js
cmp
fnstcw
or
mov
xorl
mov
xlat
mov
push
xchg
iret
out
out
pmuludq
out
or
faddp
dec
add
lcall
cmp
aas
lahf
imul
test
loop
push
das
dec
data16
jl
imul
loope
fsub
add
adc
fs
adc
call
sub
fwait
cwtl
ljmp
xchg
mov
imul
cmp
or
dec
xchg
sub
sbb
in
js
pushf
and
lret
mov
xor
nopl
adc
popa
pop
fnsave
pop
inc
aaa
mov
and
sbb
push
cmp
sub
cwtl
in
shrl
cs
decb
cmpsb
xchg
inc
jo
cmpsl
mov
mov
add
mov
add
outsb
add
sbb
ror
prefetch
pop
mov
xchg
neg
jecxz
inc
adc
incb
push
sbb
push
not
add
jle
add
mov
xchg
jns
push
sahf
pop
das
push
mov
into
fstpt
int3
inc
sbb
push
pop
xchg
xchg
in
sahf
sbb
cmp
scas
enter
add
jae
cmp
mov
ret
xor
adc
pop
flds
cmpsl
sbb
loope
and
jns
fwait
mov
enter
dec
add
mov
pop
dec
jecxz
enter
dec
xchg
shrl
add
loop
inc
add
mov
mov
add
push
je
mov
add
lods
dec
aas
out
jb
clc
fbld
sbb
push
jmp
mov
sub
jp
adc
imul
addb
add
mov
hlt
and
sub
push
stos
push
add
jns
iret
push
jmp
fsts
inc
sahf
lock
pop
and
decb
mov
into
shll
arpl
mov
mov
jge
rorb
testb
mov
mov
cld
out
sbb
mov
adc
in
jle
add
xor
in
add
xchg
cs
sbb
xor
and
xchg
push
sbb
lods
in
imul
fs
incb
repz
or
push
or
xchg
mov
dec
add
inc
cmpl
dec
test
add
cli
push
add
xchg
shr
or
incb
stos
push
mov
bound
inc
jo
faddl
movsl
xlat
fsubs
mov
mov
mov
sbb
shrb
mov
fsubl
inc
jg
mov
lods
mov
shrb
pop
fwait
stc
daa
inc
add
mov
inc
call
and
mov
xchg
cmp
clc
sbb
pop
mov
or
xor
xchg
mov
mov
insl
push
push
mov
push
and
fwait
push
stos
loope
or
xor
pop
pop
cmpsl
push
incb
adc
cmp
xor
or
add
adc
jl
lret
add
lods
mov
aas
sub
mov
or
mov
cmp
dec
test
jmp
pop
inc
iret
adc
test
loop
cli
in
and
fmul
mov
jne
cmp
push
out
fidivs
decb
xor
shll
push
xchg
aaa
and
out
jecxz
inc
add
imul
data16
pushf
or
push
mov
inc
add
or
decb
mov
sbb
stc
or
decb
mov
fildll
incb
mov
popf
rclb
mov
push
movsl
sub
fstpl
pop
es
adc
in
add
sar
mov
or
dec
pop
adc
orl
incb
test
in
scas
roll
incb
fucomp
cvtps2pi
lea
arpl
xchg
gs
sarb
addr16
add
mov
jl
ret
stc
fbstp
arpl
cld
jno
pop
mov
mov
jae
push
push
out
testb
push
ds
mov
jle
mov
xchg
push
scas
test
enter
movsb
push
mov
xor
jge
jge
push
push
push
mov
mov
adc
inc
add
lret
clc
xchg
inc
add
cltd
shll
add
incb
lds
fld
stos
xor
mov
jae
dec
add
jae
pop
movsb
cmp
xchg
dec
mov
incb
add
aad
sub
cmc
xor
mov
shlb
add
and
gs
cmpsb
jb
ss
inc
add
and
dec
add
xchg
mov
pop
rclb
imul
lods
sub
decb
decb
add
test
aam
xchg
mov
std
adc
scas
push
adc
cmp
adc
lods
mov
sbb
fnstcw
sbb
icebp
aad
pop
mov
mov
add
adc
adc
in
stc
popa
scas
shlb
fdivrp
inc
add
out
jns
sub
in
fdivrs
lahf
dec
add
loopne
je
inc
mov
and
xchg
jo
decb
mov
pop
aam
dec
lods
loope
dec
add
sub
mov
mov
add
and
call
cmp
xchg
movsb
mov
ret
cmp
and
sbb
inc
ja
mov
adc
cmpsb
in
lret
shl
pop
call
jne
add
sbb
fisubrl
rcrl
inc
add
in
pop
xchg
fadds
mov
imul
icebp
mov
xor
push
movsl
lods
adc
out
dec
nop
movsb
jmp
clc
rclb
call
sub
pop
enter
xchg
imul
xchg
outsl
dec
mov
outsb
add
xchg
outsb
add
jecxz
pop
test
inc
mov
add
repnz
inc
cwtl
int3
daa
jecxz
jmp
lahf
dec
add
mov
push
mov
imul
mov
stos
stc
jl
int3
shlb
sbb
and
mov
inc
add
jmp
sbb
dec
sub
loop
fxch
pop
mov
adc
cmpsl
fs
adc
shr
mov
incb
sub
fwait
inc
add
je
jecxz
data16
je
or
decb
xchg
or
fldl
pop
outsb
imul
push
jo
lret
sbb
inc
xchg
stos
pop
pusha
add
daa
cltd
fnstenv
in
dec
mov
mov
adc
shlb
push
imul
cmpl
push
jge
insl
mov
push
add
inc
ficompl
jnp
cmp
aad
das
les
subl
jge
mov
test
jae
faddl
call
decb
cmp
imul
loop
mov
shll
jge
mov
adcl
sbb
outsb
add
xchg
fists
mov
decb
dec
add
cmp
or
jl
decb
jecxz
and
add
fldcw
add
jle
push
arpl
enter
xor
into
jno
movsb
pop
cwtl
in
dec
and
movsl
inc
mov
jecxz
int3
dec
es
adc
mov
test
stos
xor
xchg
cs
mov
jecxz
adc
add
push
jns
inc
push
mov
mov
loop
hlt
shlb
flds
sub
je
add
decb
mov
in
xchg
std
aaa
cmp
xor
mov
test
sbb
xchg
xor
cmc
sbb
in
test
dec
test
mov
imul
dec
add
ss
out
sub
adc
cmpsl
addr16
add
pop
gs
pop
or
push
xor
stos
push
sti
dec
add
clc
mov
jg
shl
ret
outsl
cmpsb
out
sub
sub
hlt
es
icebp
and
xchg
adc
es
dec
dec
cltd
imul
fistpll
mov
gs
push
cld
and
aad
dec
test
xor
shrl
adc
xchg
scas
xor
mov
cmpb
aaa
in
add
jb
add
mov
inc
mov
add
jle
cld
jno
add
adc
dec
popf
fwait
adc
mov
mov
xchg
aaa
je
cmpsl
ljmp
insl
xchg
mov
call
icebp
xlat
out
leave
dec
push
adc
mov
push
scas
xor
in
mov
aaa
lods
push
push
mov
add
sbb
dec
std
adcb
in
xchg
pusha
mov
or
xchg
dec
incb
fnstenv
nop
jge
sub
jnp
add
adc
or
sbb
jle
add
test
mov
stos
cltd
sub
shll
mov
mov
mov
jae
loop
mov
clts
call
sub
mov
mov
test
pop
jnp
loope
xchg
out
test
jno
mov
bound
dec
jge
adc
dec
scas
jbe
pushf
jbe
sti
mov
repnz
dec
inc
test
bound
sbb
inc
fidivrs
sbb
pop
loopne
cmp
mov
stc
ret
cmp
stos
sub
std
je
aam
xchg
enter
xor
scas
push
iret
sbb
movsb
fs
sub
xlat
cmp
pop
mov
das
js
imul
loope
aaa
sub
repz
popa
mov
pop
pop
mov
popl
dec
jmp
sub
add
sbb
inc
add
push
lods
pop
and
icebp
dec
scas
push
pop
hlt
sar
stos
out
dec
pop
sub
jecxz
dec
push
arpl
push
add
mov
mov
mov
sbb
in
adc
into
jp
mov
push
and
test
outsb
sti
lods
adc
mov
jecxz
xchg
mov
add
cmp
and
dec
shl
mov
pusha
fimull
cmp
insl
ljmp
lret
icebp
jmp
imul
or
push
cmc
fs
aaa
xchg
pop
add
jle
push
cs
push
jle
jae
pop
mov
pop
push
scas
sub
and
pinsrw
xor
sub
xchg
cmpsl
push
xor
xor
sub
stc
push
aas
sar
insb
rcr
mov
sbb
xchg
add
out
jecxz
sub
xchg
lock
stc
aas
or
in
xor
out
decl
push
xchg
pop
inc
ds
and
mov
nop
xor
pushf
iret
popf
data16
mov
mov
jbe
add
mov
ds
jmp
jns
add
sbb
into
sar
aas
adc
add
pop
add
out
inc
add
push
add
mov
outsl
icebp
aaa
add
push
xchg
pushf
into
addr16
or
dec
add
fcomi
xor
xchg
pop
xchg
cmp
xor
in
sub
and
push
dec
sahf
out
icebp
int
fisttps
dec
dec
add
pop
dec
add
mov
sub
xlat
sub
lcall
mov
ror
inc
add
jnp
pop
sub
lcall
xchg
dec
add
pop
je
jo
int
stos
int
mov
dec
add
popa
lret
inc
mov
sahf
arpl
decb
sub
pop
bound
decb
ss
pop
mov
shll
fadds
int
cmp
mov
fwait
inc
sbb
gs
pop
and
push
in
and
push
mov
leave
fadd
fisttpl
rorb
stos
cmpsl
lds
cmp
jbe
pop
pop
mov
adc
sbbl
repz
mov
and
sbb
pop
movsb
stos
aaa
fcmovnbe
inc
xor
hlt
xor
scas
jl
lea
popa
imul
pop
push
rcrl
int3
inc
jl
add
fsub
scas
lock
cli
jb
and
mov
add
scas
cwtl
lock
les
ret
out
mov
sbb
sbb
add
mov
or
decb
adc
add
popa
daa
lods
scas
pop
add
ljmp
or
jmp
jp
jmp
into
xchg
stos
clc
insl
lea
dec
add
mov
xchg
pop
sub
cmp
jge
and
mov
test
inc
jmp
jnp
fdivrl
test
sti
lock
lahf
rol
jnp
add
insb
decb
cs
inc
decb
inc
lea
mov
xor
rcrb
sbb
add
add
mov
push
add
jecxz
lret
sbb
and
jae
cmpsb
es
pop
js
and
mov
xchg
push
cmpsb
mov
ret
mov
cmpsb
push
aas
gs
add
mov
incb
sbb
shrb
shlb
mov
shl
arpl
jno
mov
mov
cld
iret
es
decb
add
jle
xchg
and
movsb
lock
clc
mov
test
mov
mov
add
and
push
mov
add
lea
push
push
push
xchg
clc
test
je
jmp
adc
clc
lea
or
mov
shr
shr
add
push
push
push
push
call
leave
ret
ret
xchg
mov
or
xchg
shl
add
lea
sub
shr
dec
not
sub
mov
clc
je
push
pop
add
lea
clc
jmp
jmp
push
mov
sub
lea
orl
andl
cld
push
push
push
push
call
test
je
in
dec
and
push
push
push
call
mov
lea
test
jne,pn
enter
adc
mov
mov
push
mov
jmp
mov
lcall
push
add
inc
fisubrs
fnsave
or
scas
inc
pop
adc
fildl
jp
test
pusha
icebp
popf
push
sub
mov
out
fsubrl
mov
and
pop
pop
out
add
sbb
lret
mov
add
cmpsb
adc
add
in
adc
push
hlt
int
decb
sbb
and
loope
inc
pop
add
dec
inc
cmp
incb
sbb
push
and
fucomi
push
cmp
pop
std
mov
in
movsl
xchg
add
jmp
out
sub
insb
decb
and
mov
mov
imul
xchg
imul
pop
cmp
ljmp
addl
jae
dec
incb
in
repz
out
enter
push
insb
add
lods
int3
lds
pop
aaa
push
cmpl
mov
cmp
sub
adc
int
inc
jp
insl
popf
mov
or
adc
jno
je
stos
lret
and
jne
sti
mov
nop
lret
inc
sub
mov
rcrb
push
fcoms
inc
mov
ror
aas
or
clc
mov
insl
jg
ret
decb
mov
negb
ret
adc
adcl
mov
inc
or
push
fidivl
xor
andb
mov
int3
shll
ret
gs
hlt
pop
xchg
stos
cmp
repz
jmp
test
incb
decb
mov
out
mov
xchg
sbb
imul
mov
inc
bnd
sbb
pop
push
push
pop
sahf
cmc
add
in
add
cltd
addb
ret
mov
cmpsb
adc
gs
out
add
insb
add
mov
jns
cld
ds
mov
sbb
or
push
out
sahf
rcrl
push
scas
daa
aas
out
add
outsl
loop
or
xchg
inc
dec
and
sub
iret
jle
sbb
add
ja
js
inc
mov
jne
jb
jl
mov
and
dec
xlat
negb
xor
mov
insl
cwtl
cmpsl
cld
out
hlt
cltd
mov
dec
xor
addr16
add
es
push
add
scas
sub
into
xor
jno
jp
sbb
loopne
add
jae
cmovo
jecxz
incb
sbb
lods
push
add
push
pop
addr16
add
pusha
add
loope
stc
popf
data16
popf
mov
into
das
sub
push
mov
sbb
mov
cld
gs
mov
add
into
ds
pop
xchg
fnsave
mov
add
mov
out
xchg
dec
add
push
xor
push
adc
add
scas
or
mov
int
cltd
xlat
sar
add
jl
push
arpl
xchg
lahf
push
loop
fwait
shl
js
pop
test
mov
mov
incb
push
adc
push
stos
xchg
dec
add
dec
sub
dec
jp
and
cmpsb
pop
test
push
mov
sahf
imul
out
jbe
cs
jecxz
pop
and
or
jo
add
ficoml
sarb
cmpsl
mov
adc
dec
add
in
lret
stc
sub
rolb
add
fsubl
test
sbb
jecxz
insl
xchg
mov
test
xchg
mov
movsb
aam
xor
inc
push
test
in
inc
incb
stc
dec
lret
je
pop
sub
shrl
decb
fldcw
sbb
dec
clc
jbe
arpl
add
adc
in
adc
shrl
mov
ja
enter
pop
mov
jge
mov
mov
add
mov
es
sbb
sbb
mov
mov
test
add
imul
mov
sti
lock
es
repnz
xchg
les
or
push
fisttpl
mov
cmpsl
test
sub
lahf
jg
add
xchg
and
mov
mov
jnp
mov
test
mov
add
mov
popf
xchg
pop
xor
sahf
icebp
in
das
sub
cmp
inc
xchg
sbb
or
pop
push
lahf
xor
jbe
cld
cmpsb
leave
sbb
incb
incb
xchg
scas
or
ds
fstl
jne
mov
jmp
mov
sub
leave
lret
sahf
mov
sbbl
es
pop
ja
imul
das
sbb
and
mov
ss
add
mov
pusha
incb
std
stos
add
push
cmp
jecxz
pop
lret
dec
not
fldcw
jecxz
cmpsl
mov
push
sub
and
push
pop
idivb
jg
imul
jecxz
mov
and
mov
rclb
fadds
ja
push
add
jl
cmp
mov
jnp
roll
mov
jnp
call
cmp
sub
shl
mov
ja
xor
arpl
jo
cmp
cmp
aam
push
xor
negl
mov
in
sbb
popf
scas
lret
sub
sub
adc
data16
decb
push
in
mov
repnz
loope
sti
sub
cmpsb
push
adc
cltd
les
je
xor
pop
mov
neg
subl
pop
lcall
pop
out
mov
and
fsubrp
jo
lds
cmp
push
sbb
mov
out
scas
les
add
cmp
aaa
in
popf
adc
push
pushf
mov
lahf
mov
jecxz
mov
enter
push
add
jl
and
inc
fcom
sub
stc
out
or
inc
loopne
xor
jbe
sub
sbb
idivb
leave
jle
es
movsb
fisttps
pop
sub
pop
push
add
push
out
lods
das
pop
xchg
incb
mov
dec
es
ret
outsb
add
lds
decb
daa
push
mov
divl
into
aam
fs
lods
lret
ret
jp
sbb
insl
int
jl
test
stos
or
loope
adc
mov
dec
xchg
pop
xchg
cs
decb
cmp
pop
xchg
mov
push
add
rol
add
xlat
test
inc
popa
iret
sti
cs
call
rcll
ss
jnp
jge
cmpsb
jne
aaa
and
jmp
cmc
and
push
mov
and
adcl
jne
enter
pop
popa
adc
push
fiaddl
mov
jp
es
mov
fldenv
pop
or
push
add
lahf
push
sbb
insl
fdivrs
sbb
push
das
mov
jns
jg
roll
sub
test
div
mov
pop
adc
jo
push
sbb
cmp
push
xor
daa
push
int
lods
mov
xchg
xlat
add
lea
shlb
fwait
insb
and
imul
aas
push
cmovge
lods
ljmp
lret
ror
inc
mov
or
idivb
cmp
mov
insb
jl
sar
push
pop
inc
fucomip
mov
push
addr16
mov
mov
mov
sti
dec
add
aad
pushf
in
jne
data16
daa
imul
adc
ljmp
mov
dec
rcrb
decb
or
cmp
add
mov
psubsw
cmp
xor
std
sub
gs
adcl
fisubs
pushf
adc
rorl
mov
inc
mov
xor
hlt
mov
jbe
xchg
data16
cs
ljmp
and
xor
and
sti
mov
mov
sti
and
or
imul
and
decb
arpl
xchg
gs
mov
dec
cmp
jge
decb
add
adc
mov
add
mov
cmc
dec
cmp
scas
mov
movl
jb
push
pop
mov
sbb
mov
mov
fwait
cld
and
sbbl
jo
inc
ror
push
lahf
push
or
push
jge
add
xchg
outsb
fidivl
pop
dec
cmpsl
sbbb
mov
pop
jmp
push
add
mov
leave
ljmp
push
sbb
lods
push
movb
add
mov
adc
sub
push
xor
add
cmpsb
xchg
daa
jno
arpl
out
mov
aas
xor
das
mov
data16
es
pop
xor
loopne
lock
mov
fs
mov
adc
divl
rclb
std
lds
add
test
cmpl
adc
mov
or
jno
aam
sar
mov
mov
and
sbb
iret
data16
nop
cld
scas
fndisi(8087
testb
cltd
imul
int
lock
sub
pop
imul
nop
xlat
push
mov
lcall
dec
mov
dec
push
popa
adc
mov
pop
add
outsl
add
mov
into
icebp
mov
shrl
fwait
jmp
mov
mov
jmp
add
or
lock
repnz
xchg
inc
add
imul
xchg
push
pusha
incb
and
shr
inc
add
mov
add
jmp
sti
adc
incb
out
inc
loop
roll
push
aas
ds
sahf
xchg
jg
sbb
mov
addl
jmp
adc
fistpll
xor
pop
dec
add
fimuls
arpl
das
xchg
shlb
xor
out
in
in
cmpsl
out
cld
fiadds
jb
add
xor
sub
in
fstl
je
add
mov
shl
add
ja
lds
dec
add
je
jmp
xchg
mov
clc
cmpsb
and
decb
call
cmp
andb
jle
jo
fs
decb
add
xchg
pop
nop
adc
hlt
aam
incb
scas
test
dec
add
mov
sub
stos
fwait
sbb
sahf
lcall
xor
and
push
and
xor
loop
in
pushf
stc
ret
pop
daa
push
and
xor
adcl
mov
and
sub
cmpsl
sbb
dec
dec
mov
add
cmp
lret
sub
popf
jle
mov
mov
push
pop
jae
mov
jecxz
insb
cld
stos
cmc
mov
repnz
mov
sahf
mov
xchg
or
mov
mov
jb
jg
test
shr
neg
imul
mov
hlt
lock
push
sub
mov
xor
or
cmp
add
sub
jbe
out
pop
sub
fists
sub
test
add
cmp
add
pop
js
incb
lret
mov
out
jg
add
sahf
or
dec
pop
in
xchg
sti
xor
and
bound
decb
das
jecxz
push
sbb
popf
sub
jae
mov
test
push
mov
adc
mov
inc
add
add
cmp
test
lcall
shll
xchg
aad
cmp
cmp
xor
xchg
jnp
xchg
ret
rcr
out
shrl
cwtl
insb
add
lds
out
sbb
popl
xlat
cmpsb
adc
addr16
shrl
incb
ds
sbb
mov
mov
fisubrs
imul
push
and
mov
jmp
lret
jecxz
inc
add
aaa
popa
popf
inc
pop
repnz
mov
pusha
add
jno
mov
test
imul
fdivrl
jne
call
push
push
push
lcall
decb
mov
testl
cmpsl
dec
pop
mov
pop
xor
incb
xor
push
js
mov
jnp
rorl
decb
sbb
sub
mov
insb
add
jbe
das
rcl
inc
add
push
add
mov
push
pop
inc
incb
incb
enter
add
adc
and
xchg
jb
add
insl
jb
push
mov
loop
div
imul
and
decb
insl
enter
xor
lods
sub
cs
decb
bound
fwait
cmc
aam
in
mov
jne
pop
es
mov
adc
xchg
inc
add
or
jecxz
xchg
incb
dec
xor
fdivl
sub
insb
add
sti
or
popa
inc
cmp
adc
sbb
push
lods
insb
add
adc
push
jns
icebp
ret
inc
add
out
es
rcrl
dec
add
scas
in
add
cmp
fildll
adc
outsl
fsubrs
mov
insl
stos
xchg
les
and
data16
cmc
xor
into
data16
dec
add
enter
outsb
cwtl
test
into
sub
fidivrs
jge
jmp
cs
dec
dec
add
and
push
in
vpextrw
divb
xorl
js
mov
loopne
js
add
out
cmp
add
pop
jecxz
pop
ds
xchg
sbb
jb
lret
test
jne
js
jge
add
pop
je
ljmp
jp
cmpsb
test
add
decl
rcll
daa
cwtl
scas
pop
sub
lods
lcall
cmp
stos
gs
fsts
mov
pop
sub
shrb
add
decb
inc
cmp
jno
rolb
push
imul
idiv
clc
nop
nop
nop
nop
jae
add
add
icebp
add
lea
nop
nop
nop
nop
jae
dec
xchg
pop
add
nop
mov
push
fistpl
clc
nop
nop
nop
nop
jae
add
add
add
push
push
mov
xchg
ret
sub
pop
adc
add
add
mov
jecxz
add
push
mov
xchg
ret
add
mov
pop
add
adc
jbe
nop
push
mov
leave
nop
jmp
xor
add
dec
dec
add
mov
clc
nop
nop
nop
nop
jae
add
and
mov
add
sti
jmp
add
add
add
mov
add
dec
jle
push
cmp
in
leave
nop
jmp
add
aad
add
add
add
adc
call
clc
nop
nop
nop
nop
jae
and
xor
add
add
leave
add
clc
nop
nop
nop
nop
jae
repnz
add
adc
in
leave
nop
jmp
loopne
add
nop
mov
pushf
sub
je
clc
nop
nop
nop
nop
jae
mov
push
push
mov
xchg
ret
add
jecxz
sbb
add
icebp
add
add
in
leave
nop
jmp
add
pushf
add
add
add
push
mov
lds
add
add
rcll
les
add
test
add
nop
push
mov
leave
nop
jmp
add
add
xchg
je
nop
push
mov
leave
nop
jmp
add
add
xchg
call
in
add
and
xchg
add
add
fldl
or
cmp
and
cli
and
sub
inc
dec
add
jg
mov
add
add
nop
nop
nop
nop
jae
add
mov
mov
push
mov
xchg
ret
mov
add
scas
push
inc
and
clc
nop
nop
nop
nop
jae
add
add
loopne
sbb
jne
clc
nop
nop
nop
nop
jae
xor
and
add
sub
inc
inc
add
nop
jmp
pushf
add
add
mov
add
nop
push
mov
leave
nop
jmp
pop
mov
ret
add
add
add
clc
nop
nop
nop
nop
jae
add
insl
add
add
mov
fld1
push
mov
xchg
ret
add
add
adc
repnz
nop
nop
nop
nop
jae
add
mov
adc
add
clc
nop
nop
nop
nop
jae
addb
jecxz
jle
mov
clc
nop
nop
nop
nop
jae
add
xchg
mov
adc
nop
nop
nop
nop
jae
repnz
add
add
aad
sbb
push
pop
xor
clc
nop
nop
nop
nop
jae
and
adc
pop
mov
in
mov
push
mov
xchg
ret
repnz
mov
popl
add
pop
add
call
nop
push
mov
leave
nop
jmp
push
mov
add
mov
xchg
ret
dec
add
add
nop
push
mov
leave
nop
jmp
jnp
subb
add
loope
add
pop
add
add
mov
fiaddl
mov
add
add
add
add
mov
lret
xchg
add
add
add
add
jg
clc
nop
nop
nop
nop
jae
mov
pop
add
test
lods
pop
xor
clc
nop
nop
nop
nop
jae
mov
mov
add
jle
add
clc
nop
nop
nop
nop
jae
add
add
adc
add
add
notl
nop
jmp
push
add
repnz
repnz
add
add
mov
push
mov
xchg
ret
add
add
sub
jecxz
not
clc
nop
nop
nop
nop
jae
add
add
add
and
mov
fistl
nop
nop
nop
nop
jae
add
add
jnp
mov
mov
xchg
ret
pop
outsl
ret
jle
add
loopne
aad
add
adc
lret
push
mov
xchg
ret
mov
add
adc
add
adcb
clc
nop
nop
nop
nop
jae
add
add
mov
add
jne
icebp
nop
push
mov
leave
nop
jmp
add
mov
add
call
out
les
nop
push
mov
leave
nop
jmp
jg
add
add
ljmp
clc
nop
nop
nop
nop
jae
add
insl
jecxz
add
in
push
nop
push
mov
leave
nop
jmp
push
add
sub
add
aaa
add
pop
add
push
and
mul
cld
cmp
add
jne
nop
push
mov
leave
nop
jmp
add
mov
add
nop
jle
cmc
fisubs
nop
nop
nop
jae
pop
repnz
and
add
xor
stos
push
mov
xchg
ret
sbb
dec
repnz
add
add
add
enter
dec
ljmp
nop
nop
jae
xchg
mov
icebp
sub
add
nop
xchg
pop
push
mov
xchg
ret
jle
add
add
add
mov
leave
add
push
mov
xchg
ret
add
add
add
add
jmp
incl
xor
add
xlat
add
add
popl
add
dec
jp
add
add
and
push
and
add
pop
add
push
repnz
adc
mov
xchg
ret
icebp
push
insl
add
jp
add
mov
popl
cmp
stos
xor
nop
push
mov
leave
nop
jmp
add
jnp
adc
adc
fld1
push
mov
xchg
ret
nop
sub
add
pop
jp
icebp
imul
clc
nop
nop
nop
nop
jae
mov
outsl
pop
pop
jb
add
sar
nop
nop
nop
nop
jae
add
pop
adc
cmpsl
add
ljmp
xor
clc
nop
nop
nop
nop
jae
dec
xchg
add
add
dec
mov
xor
inc
add
sub
into
sub
add
add
xchg
call
nop
jae
add
add
and
ret
add
push
mov
add
add
dec
add
push
add
cmp
push
mov
xchg
ret
cmpsl
add
into
sub
adc
test
jl
pop
clc
nop
nop
nop
nop
jae
jg
add
add
ret
sub
cs
push
mov
clc
add
nop
jmp
mov
push
fdivrp
int3
out
pushl
clc
nop
nop
nop
nop
jae
add
add
add
dec
add
repnz
or
inc
and
add
add
add
mov
add
mov
nop
nop
nop
nop
jae
add
add
and
add
lret
push
nop
push
mov
leave
nop
jmp
add
add
sub
add
adc
add
push
clc
nop
nop
nop
nop
jae
add
add
icebp
adc
repnz
adc
add
nop
nop
nop
nop
jae
pop
and
call
pop
mov
clc
nop
nop
nop
nop
jae
repnz
push
add
popa
mov
clc
nop
nop
nop
nop
jae
dec
add
add
aaa
sbb
data16
incb
dec
test
push
mov
xchg
ret
dec
mov
push
sbb
decb
clc
nop
nop
nop
nop
jae
add
pop
add
test
jp
fld1
push
mov
xchg
ret
add
add
dec
add
add
add
int3
mulb
nop
nop
nop
nop
jae
loopne
cmc
mov
sub
call
cmp
nop
push
mov
leave
nop
jmp
add
add
cmpb
add
int
pop
jae
nop
nop
nop
nop
jae
adc
add
add
add
out
clc
nop
nop
nop
nop
jae
loopne
jnp
add
insl
add
nop
fwait
pushl
push
mov
xchg
ret
add
cmc
add
aaa
add
push
in
cld
clc
nop
nop
nop
nop
jae
add
into
add
jp
pop
je
pop
nop
push
mov
leave
nop
jmp
jnp
add
pop
outsl
adc
fucomip
push
or
mov
leave
nop
jmp
mov
push
pop
adc
push
mov
xchg
ret
add
add
cmpsl
add
cmpsl
add
add
mov
add
nop
nop
nop
nop
jae
add
jb
ret
add
pop
clc
nop
nop
nop
nop
jae
push
add
sbb
sbb
add
add
add
xor
nop
push
mov
leave
nop
jmp
sub
add
pop
xlat
add
mov
xchg
ret
dec
mov
and
add
rolb
cmpsl
cmp
clc
nop
nop
nop
nop
jae
pop
xlat
add
pop
mov
xlat
notl
nop
push
mov
leave
nop
jmp
add
add
add
xchg
jne
clc
nop
nop
nop
nop
jae
add
push
pop
add
sahf
jge
dec
adc
sub
add
add
add
pop
repnz
call
clc
nop
nop
nop
nop
jae
and
add
add
in
inc
push
push
mov
xchg
ret
jecxz
adc
add
add
jecxz
jp
pushf
push
add
punpcklbw
nop
nop
nop
nop
jae
add
sbb
ret
jnp
add
inc
mov
nop
push
mov
leave
nop
jmp
add
ret
add
add
jb
stos
nop
push
mov
leave
nop
jmp
add
add
add
pop
sbb
cld
push
mov
xchg
ret
add
jp
aaa
push
jg
add
add
sub
push
mov
leave
nop
jmp
add
add
xchg
outsl
sbb
add
into
cmp
fld1
clc
nop
nop
nop
nop
jae
adc
add
icebp
push
add
in
add
push
mov
xchg
ret
lds
add
cmpsl
int
add
jne
inc
and
clc
nop
nop
nop
nop
jae
xchg
add
add
repnz
sub
in
pop
lret
pop
clc
nop
nop
nop
nop
jae
pop
add
xchg
add
add
add
push
roll
nop
nop
nop
nop
jae
xlat
add
mov
aad
mov
add
add
nop
nop
nop
nop
jae
add
add
add
add
jle
mov
clc
nop
nop
nop
nop
jae
add
repnz
xlat
mov
push
mov
xchg
ret
add
xor
add
mov
nop
add
adc
add
pop
jns
stos
nop
push
mov
leave
nop
jmp
add
add
add
add
addb
nop
nop
jae
sub
add
add
add
push
andl
in
leave
nop
jmp
add
add
and
int
jle
mov
push
mov
xchg
ret
add
add
jp
int
pushf
add
sub
pop
call
nop
jmp
dec
add
add
and
inc
in
mov
nop
push
mov
leave
nop
jmp
add
pushf
xlat
cmpsl
add
jecxz
clc
nop
nop
nop
nop
jae
add
add
mov
xchg
add
cmp
add
clc
nop
nop
nop
nop
jae
jecxz
lds
sub
jg
sub
push
mov
leave
nop
jmp
adc
add
add
add
aaa
arpl
nop
nop
nop
nop
jae
add
add
icebp
jb
int
add
or
nop
nop
nop
nop
jae
jnp
add
sub
add
add
test
movsl
push
mov
add
push
pop
fcoml
add
add
add
and
pop
clc
nop
nop
nop
nop
jae
jg
push
lds
add
add
loopne
push
clc
nop
nop
nop
nop
jae
mov
add
add
add
push
and
add
add
add
add
hlt
add
add
add
clc
nop
nop
nop
nop
jae
add
mov
add
loop
pop
push
clc
nop
nop
nop
nop
jae
sbb
mov
idiv
add
clc
nop
nop
nop
nop
jae
add
sub
rolb
add
add
push
clc
nop
nop
nop
nop
jae
add
push
dec
int
outsl
dec
pusha
add
sbb
add
nop
nop
nop
nop
jae
jle
mov
pop
popf
push
push
mov
xchg
ret
jp
add
add
aaa
mov
add
push
mov
js
add
add
mov
add
push
add
sub
and
push
sub
nop
jmp
into
mov
loope
add
nop
nop
nop
nop
jae
add
rolb
add
add
add
mov
sbb
push
mov
xchg
ret
sbb
add
sub
sub
cmpsl
fwait
push
mov
xchg
ret
add
sbb
add
add
add
mov
jmp
add
pushf
pop
int
add
add
add
sub
mov
pusha
dec
dec
mov
push
mov
xchg
ret
jnp
mov
push
add
push
fadds
pop
inc
add
repnz
sbb
outsl
add
add
push
clc
nop
nop
nop
nop
jae
adc
sub
add
add
cld
sbb
test
adc
add
nop
nop
nop
nop
jae
add
dec
adc
add
clc
nop
nop
nop
nop
jae
add
mov
int
jb
inc
add
add
hlt
addb
or
ret
nop
add
add
add
add
add
scas
inc
push
mov
in
jnp
add
rclb
add
add
mov
add
mov
push
loopne
nop
nop
nop
nop
jae
icebp
shl
add
add
add
vpsubsb
jne
inc
add
addb
xchg
repnz
int
cmpsl
push
loope
movzwl
sub
daa
jb
add
add
sub
add
adc
loopne
push
nop
push
mov
leave
nop
jmp
add
loope
add
add
jecxz
sub
dec
add
pop
fisttps
nop
nop
nop
jae
sub
pop
adc
add
add
stos
push
mov
xchg
ret
outsl
add
bnd
add
add
cld
sbb
nop
nop
jae
cmc
jle
jp
add
cmpsl
mov
nop
push
mov
leave
nop
jmp
push
jg
sub
xor
insl
mov
incb
mov
clc
nop
nop
nop
nop
jae
jecxz
add
add
jp
add
incb
nop
nop
nop
jae
push
test
mov
jp
add
loop
add
mov
dec
cmp
push
mov
leave
nop
jmp
add
jnp
push
add
push
clc
nop
nop
nop
nop
jae
rolb
in
sub
loope
pop
add
add
imul
cmp
jecxz
icebp
add
add
jmp
bound
add
add
aad
cli
clc
nop
nop
nop
nop
jae
add
rolb
add
and
pop
sub
nop
nop
nop
nop
jae
sub
add
jle
int
jne
clc
nop
nop
nop
nop
jae
add
xor
add
sbb
push
mov
xchg
ret
repnz
pop
cmc
adc
add
adc
add
dec
pop
pop
clc
nop
nop
nop
nop
jae
add
cmpsl
add
mov
add
add
jle
sub
aaa
add
and
adc
repnz
jecxz
xchg
add
nop
push
mov
leave
nop
jmp
mov
mov
inc
adc
nop
nop
nop
nop
jae
jb
add
insl
add
xlat
add
in
ret
clc
nop
nop
nop
nop
jae
add
in
add
and
add
hlt
pop
mov
clc
nop
nop
nop
nop
jae
xlat
adc
add
add
mov
pop
sub
dec
jg
cmpl
mov
leave
nop
jmp
int
pop
nop
xor
add
jne
nop
push
mov
leave
nop
jmp
sbb
cmpb
add
nop
nop
nop
nop
jae
add
aad
add
pop
add
add
mov
clc
nop
nop
nop
nop
jae
mov
add
add
jno
test
push
mov
leave
nop
jmp
mov
add
push
push
mov
xchg
ret
sbb
add
add
mov
mov
xchg
ret
adc
aaa
outsl
repnz
cmc
nop
loopne
xchg
mov
mov
leave
nop
jmp
adc
cmpsl
mov
jp
cmp
clc
nop
nop
nop
nop
jae
add
jecxz
jp
pop
add
mov
clc
nop
nop
nop
nop
jae
mov
jle
add
sub
add
cmp
add
testl
add
ja
sub
add
add
and
incb
incb
clc
nop
nop
nop
nop
jae
add
adc
add
mov
add
pop
add
adc
call
jecxz
call
add
nop
nop
nop
jae
add
add
pushf
icebp
add
add
inc
ja
nop
push
mov
leave
nop
jmp
sbb
and
subl
push
mov
xchg
ret
add
in
add
xchg
push
push
push
mov
xchg
ret
add
add
adc
icebp
add
add
add
jb
sub
add
add
add
das
push
clc
nop
nop
nop
nop
jae
add
add
mov
sahf
push
std
push
mov
sbb
mov
or
sub
inc
add
cmp
sahf
movsb
pusha
add
into
mov
nop
nop
nop
jae
add
add
addb
fadds
sbb
inc
add
mov
je
nop
push
mov
leave
nop
jmp
add
pop
jp
adc
mov
mov
xchg
ret
sbb
add
pop
add
mov
inc
sub
nop
jmp
add
add
jg
pop
pop
clc
nop
nop
nop
nop
jae
mov
dec
add
add
loope
into
fwait
add
clc
nop
nop
nop
nop
jae
add
adc
aaa
add
xchg
push
mov
xchg
ret
add
add
pop
mov
add
out
in
add
jle
shl
clc
nop
nop
nop
nop
jae
dec
pop
pop
adc
in
mov
jo
enter
or
sar
nop
nop
nop
nop
jae
rolb
add
add
add
mov
dec
cmp
nop
nop
nop
nop
jae
jp
add
add
add
sub
in
aas
cmpsl
in
imul
add
fldl
cltd
add
jno
or
sbb
add
nop
nop
nop
nop
jae
add
sub
pop
sub
pop
mov
clc
nop
nop
nop
nop
jae
add
add
rcl
add
jb
add
call
inc
cmp
nop
nop
nop
nop
jae
loope
pop
jle
xlat
add
mov
lods
and
imul
jmp
add
icebp
add
bnd
test
cld
clc
nop
nop
nop
nop
jae
add
insl
add
add
cld
cmc
clc
nop
nop
nop
nop
jae
sbb
adc
dec
aaa
bnd
push
mov
xchg
ret
add
pop
sbb
mov
add
mov
inc
or
stos
mov
clc
nop
nop
nop
nop
jae
jp
jg
int
add
loope
imul
clc
nop
nop
nop
nop
jae
pop
add
add
add
add
add
xchg
add
add
nop
jmp
add
bnd
add
add
nop
nop
nop
jae
add
sub
aaa
sbb
add
xor
rclb
jne
push
mov
xchg
ret
add
jnp
add
add
dec
or
add
add
add
add
add
test
add
inc
push
clc
nop
nop
nop
nop
jae
add
pop
outsl
aaa
mov
cmpb
or
nop
nop
nop
nop
jae
aaa
sub
add
in
add
jp
jmp
clc
nop
nop
nop
nop
jae
sub
nop
sbb
jp
into
mov
nop
nop
nop
nop
jae
xlat
jb
mov
int
add
nop
push
mov
leave
nop
jmp
add
add
cmc
add
add
mov
clc
nop
nop
nop
nop
jae
add
mov
repz
clc
nop
nop
nop
nop
jae
add
pop
and
sbb
jp
repnz
nop
nop
nop
jae
pushf
add
jb
add
aaa
add
push
clc
nop
nop
nop
nop
jae
add
add
add
add
add
add
leave
sub
nop
nop
nop
nop
jae
add
dec
add
insl
jmp
mov
xchg
ret
sbb
loope
into
cmpsl
test
add
or
in
add
jae
add
mov
cmp
add
add
pushf
push
add
pop
fld1
push
mov
xchg
ret
repnz
and
add
jb
add
push
mov
pop
ljmp
inc
add
jg
icebp
call
add
add
flds
clc
push
mov
xchg
ret
add
add
add
xlat
repnz
add
add
cltd
add
clc
nop
nop
nop
nop
jae
add
mov
test
icebp
ljmp
add
or
add
mov
mov
fwait
nop
push
mov
leave
nop
jmp
jp
loopne
add
add
jg
pop
add
dec
dec
add
nop
push
mov
leave
nop
jmp
add
add
push
push
mov
xchg
ret
add
add
add
add
pop
in
mov
push
mov
xchg
ret
sbb
add
outsl
push
add
popl
jge
clc
nop
nop
nop
nop
jae
mov
jle
add
jle
dec
ljmp
nop
nop
nop
nop
jae
pushf
jecxz
pushf
add
mov
sbbl
add
clc
nop
nop
nop
nop
jae
jg
and
add
shrb
dec
pushl
push
mov
xchg
ret
add
add
lds
loope
add
jle
cwtl
jns
mov
add
add
add
shlb
add
jo
add
je
sbbb
add
nop
nop
nop
nop
jae
loope
add
add
xor
fld1
nop
push
mov
leave
nop
jmp
pop
sub
test
add
pop
pop
push
mov
xchg
ret
dec
add
int
adc
add
mov
push
mov
leave
nop
jmp
sub
pop
add
adc
adc
pop
mov
clc
nop
nop
nop
nop
jae
pushf
add
xor
pop
jge
rclb
jnp
add
add
mov
add
pop
mov
ds
inc
add
int
jg
mov
pop
add
js
sbb
push
add
nop
nop
nop
nop
jae
int
add
pop
add
loope
popa
push
clc
nop
nop
nop
nop
jae
add
add
pop
jecxz
mov
into
add
cmp
in
add
cmp
mov
add
fildl
push
sub
fiadds
and
pop
add
add
push
into
mov
cmp
je
clc
nop
nop
nop
nop
jae
add
add
pop
xor
clc
nop
nop
nop
nop
jae
add
add
sbb
mov
clc
nop
nop
nop
nop
jae
add
mov
add
aad
jb
mov
mov
leave
nop
jmp
add
loopne
pushf
add
add
nop
nop
nop
nop
jae
add
add
add
add
add
add
push
mov
leave
nop
jmp
sub
add
sbb
add
jne
rorl
push
mov
leave
nop
jmp
xchg
call
into
subb
push
add
imul
decl
add
sbbb
repnz
mov
add
mov
mov
scas
enter
nop
nop
jae
add
aaa
addb
push
inc
sbb
in
leave
nop
jmp
sub
jg
add
add
mov
push
jmp
nop
nop
jae
add
add
add
add
lahf
xor
clc
nop
nop
nop
nop
jae
add
fs
add
test
push
nop
fcomps
sti
push
push
mov
xchg
ret
mov
pop
add
add
mov
push
mov
add
add
xchg
add
add
sbb
fiadds
aad
repz
add
nop
nop
jae
add
add
and
add
add
jno
push
mov
xchg
ret
sub
outsl
xor
cmc
add
aad
lret
xchg
clc
nop
nop
nop
nop
jae
add
repnz
and
jecxz
lret
clc
nop
nop
nop
nop
jae
pop
add
dec
add
pop
add
stc
ret
clc
nop
nop
nop
nop
jae
add
jnp
insl
dec
add
add
push
mov
xchg
ret
mov
jb
xlat
mov
add
lret
call
clc
nop
nop
nop
nop
jae
jp
sub
add
add
push
add
mov
add
push
mov
xchg
ret
pop
add
sub
ret
sub
push
mov
xchg
ret
popl
jp
add
add
pop
call
decb
dec
push
clc
nop
nop
nop
nop
jae
insl
ret
adc
add
add
and
mov
add
sub
add
cmpsl
fidivrs
mov
adc
add
adc
adc
add
mov
nop
nop
nop
nop
jae
add
pop
jp
sub
addl
or
ret
bnd
add
pop
sub
pushf
add
jnp
add
clc
nop
nop
nop
nop
jae
add
add
add
call
dec
pop
inc
add
add
push
adc
or
jp
push
sub
nop
nop
nop
nop
jae
jb
add
and
outsl
add
pop
gs
jmp
add
add
add
pop
pop
add
icebp
add
add
in
nop
push
mov
leave
nop
jmp
add
mov
add
add
flds
nop
nop
jae
jnp
dec
mov
add
add
add
nop
sbb
nop
nop
jae
sub
add
ret
push
jae
rorl
nop
nop
nop
nop
jae
icebp
test
aaa
outsl
jle
add
add
or
nop
nop
nop
nop
jae
sbbb
add
sub
add
nop
nop
jae
add
mov
add
pop
add
sbb
push
mov
xchg
ret
jle
mov
cmpsl
int
xor
add
inc
test
nop
push
mov
leave
nop
jmp
add
sbb
sub
sub
nop
nop
jae
test
cmc
in
rolb
add
add
test
nop
nop
nop
jae
xlat
aad
mov
xlat
add
pop
push
mov
xchg
ret
add
test
into
push
add
mov
popa
clc
nop
nop
nop
nop
jae
sub
loopne
mov
call
inc
add
add
adc
add
pushf
sbbl
mov
leave
nop
jmp
repnz
jnp
popl
add
add
cmpw
nop
push
mov
leave
nop
jmp
mov
mov
nop
mov
test
add
clc
nop
nop
nop
nop
jae
and
add
xor
add
nop
push
mov
leave
nop
jmp
cmpb
add
mov
cmp
nop
nop
nop
nop
jae
and
mov
add
add
dec
add
dec
nop
push
mov
leave
nop
jmp
lds
add
add
or
nop
push
mov
leave
nop
jmp
push
int
add
add
lds
adc
lea
xbegin
jae
jnp
call
adc
insl
xchg
and
and
nop
nop
nop
nop
jae
add
add
in
call
shr
clc
nop
nop
nop
nop
jae
cmc
mov
and
add
dec
pop
clc
nop
nop
nop
nop
jae
jb
add
add
adc
sub
add
push
mov
xchg
ret
adc
repnz
add
mov
adc
push
mov
xchg
ret
add
add
add
adc
jns
push
mov
xchg
ret
mov
add
add
add
pop
push
clc
nop
nop
nop
nop
jae
add
add
jnp
add
popf
push
nop
push
mov
leave
nop
jmp
add
add
add
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
jp
dec
into
dec
mov
jge
mov
jnp
test
aas
pusha
add
add
add
mov
push
mov
xchg
ret
add
add
add
dec
insb
add
cmpsb
fists
nop
nop
nop
nop
jae
add
add
aaa
popl
sarb
stos
clc
nop
nop
nop
nop
jae
add
jnp
add
lds
clc
nop
nop
nop
nop
jae
adc
dec
addb
sub
add
mov
nop
nop
nop
nop
jae
add
add
add
pop
push
js
xchg
mov
clc
nop
nop
nop
nop
jae
sbb
add
sub
adc
sbb
nop
nop
nop
nop
jae
add
sub
add
add
mov
push
mov
xchg
ret
mov
dec
call
and
dec
mov
push
mov
xchg
ret
adc
push
add
push
cmpsl
add
add
add
sub
decb
mov
nop
push
mov
leave
nop
jmp
in
add
add
add
mov
cmp
nop
nop
nop
jae
sbb
add
xchg
fld1
push
mov
xchg
ret
add
sbb
pop
in
add
add
aad
mov
push
mov
xchg
ret
mov
aad
mov
jmp
add
nop
push
mov
leave
nop
jmp
add
add
nop
nop
nop
nop
jae
add
add
add
push
add
push
clc
nop
nop
nop
nop
jae
int
add
aaa
pop
add
push
add
sbb
cli
std
push
push
mov
xchg
ret
add
jecxz
addb
addb
add
roll
nop
nop
nop
jae
add
add
mov
pop
sbb
incb
mov
clc
nop
nop
nop
nop
jae
xchg
pop
pop
jp
pop
into
loopne
add
nop
nop
nop
nop
jae
add
add
sub
sub
xchg
xor
nop
nop
nop
nop
jae
aad
add
add
add
lods
jmp
xlat
add
add
add
icebp
sbb
add
pop
inc
add
mov
adc
lds
inc
mov
clc
nop
nop
nop
nop
jae
sub
add
add
add
stos
pop
nop
push
mov
leave
nop
jmp
add
jle
add
mov
cmc
lds
mov
lea
clc
nop
nop
nop
nop
jae
add
jp
loopne
pop
clc
nop
nop
nop
nop
jae
add
add
outsl
cmpsl
mov
repnz
mov
push
mov
xchg
ret
add
add
add
insl
add
clc
nop
nop
nop
nop
jae
add
add
mov
ds
in
leave
nop
jmp
add
jp
add
outsl
test
dec
cmc
push
clc
nop
nop
nop
nop
jae
add
add
add
add
aad
add
add
clc
nop
nop
nop
nop
jae
mov
pop
xlat
addb
push
push
mov
xchg
ret
mov
aaa
mov
and
incb
out
add
js
sub
dec
hlt
xor
clc
nop
nop
nop
nop
jae
add
mov
pushf
add
jecxz
mov
nop
nop
nop
nop
jae
jb
call
add
add
fwait
add
clc
nop
nop
nop
nop
jae
xor
rorb
incb
pop
loop
incb
push
clc
nop
nop
nop
nop
jae
add
add
nop
addb
add
aad
sbb
sub
cli
push
inc
clc
nop
nop
nop
nop
jae
add
add
add
pop
pop
push
clc
nop
nop
nop
nop
jae
add
sub
add
jnp
mov
out
add
add
mov
ret
add
add
loopne
sub
into
add
add
mov
xchg
ret
int
add
add
loope
sub
clc
nop
nop
nop
nop
jae
add
sub
mov
loopne
jle
ret
movzwl
clc
nop
nop
nop
nop
jae
add
add
add
nop
loopne
ret
add
clc
nop
nop
nop
nop
jae
mov
add
repnz
jle
pop
clc
nop
nop
nop
nop
jae
add
rolb
add
sbb
int
sar
nop
nop
nop
nop
jae
xor
repnz
mov
add
xlat
add
push
mov
xchg
ret
add
add
nop
sbb
cmpsl
pushf
push
cmpsl
loope
add
nop
push
mov
leave
nop
jmp
add
test
outsl
inc
add
add
add
add
int
rolb
sbb
sahf
sub
xchg
adc
add
add
xchg
pop
and
ja
clc
nop
nop
nop
nop
jae
add
adc
sub
sbb
fisubs
nop
nop
nop
nop
jae
push
add
mov
aad
add
sub
mov
clc
nop
nop
nop
nop
jae
jecxz
call
pop
push
or
sbb
test
clc
nop
nop
nop
nop
jae
loope
popl
mov
clc
nop
nop
nop
nop
jae
xor
insl
insl
dec
cmc
push
clc
nop
nop
nop
nop
jae
add
add
jp
sbb
add
in
mov
xor
nop
nop
nop
nop
jae
add
call
icebp
sub
pop
inc
add
add
add
outsl
pop
add
sub
add
nop
push
mov
leave
nop
jmp
jb
adc
sub
inc
and
nop
nop
nop
nop
jae
xchg
add
adc
add
mov
repz
call
nop
jmp
cmpsl
dec
rolb
add
add
nop
nop
nop
jae
add
jle
pushf
add
add
sbb
imul
add
decl
sub
add
add
xchg
add
add
stos
nop
push
mov
leave
nop
jmp
subb
add
adc
inc
clc
nop
nop
nop
nop
jae
add
add
add
add
sub
insl
mov
clc
nop
nop
nop
nop
jae
adc
add
add
sub
add
lret
add
push
mov
xchg
ret
call
add
add
icebp
pushf
sub
out
clc
nop
nop
nop
nop
jae
in
test
nop
add
add
adc
add
nop
nop
nop
nop
jae
jecxz
cmpsl
jecxz
add
ja
nop
push
mov
leave
nop
jmp
jnp
add
mov
add
pop
cmp
packssdw
xchg
ret
add
add
call
cmp
push
mov
leave
nop
jmp
icebp
push
outsl
xor
cmpl
nop
push
mov
leave
nop
jmp
add
sub
dec
add
add
stos
clc
or
mov
leave
nop
jmp
into
add
xchg
pop
add
cmp
nop
nop
nop
jae
pop
add
jecxz
hlt
imul
clc
nop
nop
nop
nop
jae
add
dec
sub
pop
add
inc
sub
jge
clc
nop
nop
nop
nop
jae
xlat
add
add
add
call
clc
nop
nop
nop
nop
jae
add
add
dec
pop
cmc
loopne
push
clc
nop
nop
nop
nop
jae
adc
add
mov
push
mov
xchg
ret
jnp
aaa
loope
add
int
add
fucomi
add
add
pop
ret
xchg
add
loopne
sub
add
int
add
push
call
inc
add
add
add
push
add
add
add
inc
clc
nop
nop
nop
nop
jae
sub
jle
adc
dec
add
cltd
xor
push
mov
xchg
ret
nop
jecxz
add
icebp
dec
add
test
dec
cmp
adc
xchg
xchg
ret
pop
and
add
add
add
add
clc
nop
nop
nop
nop
jae
repnz
cmpsl
add
negb
je
clc
nop
nop
nop
nop
jae
add
mov
push
mov
rep
clc
nop
nop
nop
nop
jae
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
dec
xor
repnz
adc
idiv
clc
nop
nop
nop
nop
jae
add
pop
dec
ret
sub
clc
nop
nop
nop
nop
jae
add
ret
add
pusha
decb
xor
adcl
nop
nop
nop
nop
jae
loopne
cmc
adc
push
mov
xchg
ret
mov
pop
add
xchg
sbb
test
push
mov
xchg
ret
add
dec
sub
add
add
push
test
push
mov
leave
nop
jmp
mov
aad
insb
add
dec
add
nop
push
mov
leave
nop
jmp
aad
jp
add
mov
nop
nop
nop
nop
jae
sbb
add
mov
lds
es
decb
mov
nop
nop
nop
nop
jae
add
add
add
sub
add
clc
nop
nop
nop
nop
jae
ret
pop
mov
nop
test
add
popa
nop
push
mov
leave
nop
jmp
add
add
add
jp
add
xor
stc
clc
nop
nop
nop
nop
jae
sbb
add
add
jb
popa
nop
push
mov
leave
nop
jmp
add
add
add
lds
push
mov
leave
nop
jmp
add
repnz
aaa
insl
insl
sbb
insl
mov
nop
nop
jae
add
add
add
sbb
add
push
xchg
sti
push
mov
add
shll
add
pop
add
ret
lock
call
nop
nop
jae
and
pop
add
jp
add
add
nop
nop
nop
jae
sub
add
add
jns
clc
nop
nop
nop
nop
jae
add
add
add
add
jne
clc
nop
nop
nop
nop
jae
add
add
addb
mov
push
clc
nop
nop
nop
nop
jae
add
add
int
pop
sub
adc
mov
xchg
ret
add
into
mov
add
add
pop
je
clc
nop
nop
nop
nop
jae
nop
add
add
add
push
push
mov
xchg
ret
cmpsl
push
add
cmpsl
add
jg
push
mov
xchg
ret
add
add
pop
xlat
fs
pop
add
cmpsl
add
testl
xchg
ret
xchg
xlat
sbb
add
push
clc
nop
nop
nop
nop
jae
dec
sub
add
add
leave
clc
nop
nop
nop
nop
jae
add
add
cmpsl
sub
add
mov
xchg
ret
add
add
adc
inc
push
clc
nop
nop
nop
nop
jae
mov
add
pop
jp
add
lret
nop
push
mov
leave
nop
jmp
add
pop
pop
sbb
pop
rclb
bound
xchg
ret
xlat
adc
dec
sbb
jecxz
push
nop
push
mov
leave
nop
jmp
insl
adc
add
add
adc
mov
clc
nop
nop
nop
nop
jae
add
dec
test
push
mov
add
add
mov
mov
stc
stc
cmp
lcall
nop
nop
nop
jae
push
add
into
pushf
add
lds
pushf
sbb
clc
call
nop
nop
nop
jae
xlat
outsl
sub
add
dec
add
fld1
clc
nop
nop
nop
nop
jae
add
addb
add
popl
aaa
add
nop
push
mov
leave
nop
jmp
add
add
add
and
add
nop
nop
nop
nop
jae
add
mov
add
push
nop
push
mov
leave
nop
jmp
add
dec
lds
add
cmpsl
mov
dec
push
clc
nop
nop
nop
nop
jae
add
add
rolb
int
add
pop
clc
nop
nop
nop
nop
jae
add
outsl
adc
add
jnp
add
add
xchg
push
mov
xchg
ret
add
test
pop
adc
push
mov
xchg
ret
pop
add
repnz
sbb
add
aaa
add
xor
clc
nop
nop
nop
nop
jae
jp
mov
add
loope
dec
sbb
mov
clc
nop
nop
nop
nop
jae
insl
add
add
add
add
push
dec
jge
loop
push
mov
xchg
ret
pop
add
lds
sbb
dec
adc
nop
nop
nop
jae
sub
jnp
add
mov
jne
pause
push
mov
leave
nop
jmp
cmc
pop
aaa
jnp
mov
add
loopne
add
jae
push
mov
xchg
ret
add
add
adc
sub
pop
jb
decb
fwait
clc
nop
nop
nop
nop
jae
call
add
jg
add
inc
add
lret
je
clc
nop
nop
nop
nop
jae
add
mov
xchg
clc
nop
nop
nop
nop
jae
aad
add
add
nop
mov
clc
nop
nop
nop
nop
jae
add
mov
xlat
sbb
add
pop
pop
push
mov
xchg
ret
add
adc
add
add
rcr
add
push
mov
xchg
ret
add
add
push
adc
mov
clc
nop
nop
nop
nop
jae
add
repnz
add
ret
dec
nop
push
mov
leave
nop
jmp
pushf
add
jnp
add
add
mov
jnp
loopne
roll
mov
stc
arpl
add
jnp
add
add
nop
nop
nop
jae
add
mov
addb
les
push
mov
xchg
ret
xlat
pop
add
jb
add
add
jg
adc
decl
clc
nop
nop
nop
nop
jae
test
dec
add
das
mov
clc
nop
nop
nop
nop
jae
sbb
add
add
shrb
nop
nop
nop
nop
jae
mov
cmc
xchg
push
xchg
add
push
push
mov
xchg
ret
add
repnz
mov
fwait
clc
nop
nop
nop
nop
jae
sbb
add
push
add
out
movb
sti
xchg
inc
add
add
add
sub
sti
pop
push
mov
xchg
ret
add
add
mov
aaa
mov
dec
push
clc
nop
nop
nop
nop
jae
mov
add
add
mov
push
mov
leave
nop
jmp
pop
nop
jle
adc
stos
add
clc
nop
nop
nop
nop
jae
pop
lds
add
add
add
push
push
mov
xchg
ret
jb
add
sbbb
dec
mov
enter
in
leave
nop
jmp
add
call
or
test
aam
clc
nop
nop
nop
nop
jae
push
push
add
mov
in
dec
pop
insl
repz
and
add
cwtl
dec
push
add
jmp
nop
nop
jae
add
pop
jecxz
add
add
add
add
nop
jmp
pop
mov
add
pop
into
pushf
mov
movswl
clc
nop
nop
nop
nop
jae
loope
add
push
mov
pop
nop
push
mov
leave
nop
jmp
add
jle
add
pop
add
std
jb
clc
nop
nop
nop
nop
jae
add
add
add
add
mov
xchg
ret
add
sub
mov
add
add
cmpsl
jne
clc
nop
nop
nop
nop
jae
ret
lds
sub
in
clc
nop
nop
nop
nop
jae
add
add
jp
add
into
jg
add
push
clc
nop
nop
nop
nop
jae
adc
add
add
add
aaa
cmc
fs
xor
push
mov
xchg
ret
add
ret
insl
adc
fs
push
clc
nop
nop
nop
nop
jae
add
push
lds
sbb
add
lds
add
call
nop
nop
jae
pop
add
push
add
jp
sub
insb
adc
in
leave
nop
jmp
jb
add
add
repnz
jb
sti
mov
clc
nop
nop
nop
nop
jae
add
aad
lods
or
mov
nop
nop
nop
nop
jae
cmc
bnd
add
outsl
jp
push
clc
nop
nop
nop
nop
jae
sbb
sub
add
jle
movl
xchg
ret
add
insl
mov
aaa
add
push
mov
jae
mov
mov
dec
xchg
es
test
add
pop
xchg
mov
clc
nop
nop
nop
nop
jae
add
icebp
pop
add
add
test
nop
push
mov
leave
nop
jmp
pop
adc
add
add
mov
dec
push
clc
nop
nop
nop
nop
jae
add
add
add
add
jb
add
pop
add
jnp
add
icebp
pop
sub
andb
clc
dec
repnz
add
nop
push
mov
leave
nop
jmp
sbb
add
sub
mov
mov
nop
push
mov
leave
nop
jmp
sbb
pop
dec
add
loope
iret
mov
clc
nop
nop
nop
nop
jae
aad
push
add
aad
loopne
jp
mov
test
add
mov
add
aaa
add
cmpsl
and
push
mov
adc
push
mov
leave
nop
jmp
add
add
add
add
fidivrl
nop
nop
jae
jg
add
add
add
xchg
push
mov
leave
nop
jmp
adc
call
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
add
add
jl
push
lret
loope
call
nop
jmp
mov
int
add
lret
mov
leave
nop
jmp
call
xlat
add
dec
mov
loope
clc
nop
nop
nop
nop
jae
sub
loope
jnp
cld
cmc
fistpl
nop
push
mov
leave
nop
jmp
cmc
sarb
addb
mov
cs
push
push
clc
nop
nop
nop
nop
jae
and
call
add
mov
inc
loope
clc
nop
nop
nop
nop
jae
add
add
jnp
add
incb
repnz
nop
nop
nop
nop
jae
loope
add
fists
in
fdivrs
add
jp
sbb
cmpl
test
nop
push
mov
leave
nop
jmp
jnp
add
add
add
cmp
add
push
mov
xchg
ret
add
call
add
add
decb
andb
xchg
ret
add
add
push
add
add
add
mov
cli
fwait
inc
add
add
add
add
add
add
xor
clc
nop
nop
nop
nop
jae
add
aad
add
add
pop
push
clc
nop
nop
nop
nop
jae
into
add
mov
add
mov
jl
fwait
push
mov
xchg
ret
add
add
lds
in
add
mov
nop
nop
nop
jae
push
sbb
add
pop
jp
push
out
insb
inc
jb
clc
nop
nop
nop
nop
jae
push
add
adc
nop
push
mov
leave
nop
jmp
push
repnz
add
outsl
add
pop
clc
nop
nop
nop
nop
jae
add
add
jb
call
xor
clc
nop
nop
nop
nop
jae
add
rolb
jle
push
mov
clc
nop
nop
nop
nop
jae
add
add
mov
clc
nop
nop
nop
nop
jae
icebp
add
add
jle
hlt
or
nop
nop
nop
jae
fs
insl
adc
add
inc
add
clc
nop
nop
nop
nop
jae
mov
add
mov
cmpsb
fcomps
rolb
and
add
nop
jmp
jp
add
aaa
loope
cmpsl
cwtl
pop
push
mov
add
lods
add
add
add
xchg
testb
add
in
add
scas
jns
jo
or
pop
add
mov
in
jb
push
push
add
fldcw
clc
nop
nop
nop
nop
jae
mov
push
add
rorl
mov
add
nop
nop
nop
nop
jae
dec
jp
add
aad
movl
jae
xchg
sub
add
into
pop
xor
dec
popf
push
clc
nop
nop
nop
nop
jae
and
jle
add
add
int3
ret
jne
clc
nop
nop
nop
nop
jae
jp
repnz
mov
clc
nop
nop
nop
nop
jae
add
add
add
jb
popa
add
clc
nop
nop
nop
nop
jae
lds
add
add
andb
or
nop
nop
nop
jae
push
test
into
icebp
add
xchg
add
ret
mov
clc
nop
nop
nop
nop
jae
dec
add
jb
fs
add
jg
les
push
mov
xchg
ret
cmc
into
add
dec
jg
add
add
fimull
push
push
mov
xchg
ret
cmc
add
add
add
dec
adc
mov
inc
jp
nop
push
mov
leave
nop
jmp
ret
add
pop
shl
nop
push
mov
leave
nop
jmp
add
add
subl
push
mov
leave
nop
jmp
pushf
sub
nop
add
nop
nop
nop
nop
jae
test
add
add
cmc
int
add
mov
nop
nop
nop
nop
jae
add
sub
mov
dec
ret
mov
nop
push
mov
leave
nop
jmp
add
and
add
add
push
mov
xchg
ret
add
dec
sbb
pop
outsl
into
add
add
jle
add
push
mov
xchg
ret
sbb
mov
aaa
call
sbb
clc
nop
nop
nop
nop
jae
add
xlat
sbb
adc
loope
clc
nop
nop
nop
nop
jae
nop
add
push
outsl
add
pushf
adc
mov
leave
nop
jmp
add
rolb
pop
add
inc
adc
nop
nop
nop
nop
jae
jnp
add
add
add
push
add
clc
nop
nop
nop
nop
jae
adc
adc
pushf
loope
pop
add
sub
clc
nop
nop
nop
nop
jae
add
mov
bound
nop
nop
nop
nop
jae
add
jle
push
fdiv
mov
clc
call
nop
jmp
sbb
adc
mov
cmp
push
mov
jne
clc
nop
nop
nop
nop
jae
int
icebp
sub
adc
dec
jne
nop
push
mov
leave
nop
jmp
add
jg
outsl
xchg
add
inc
push
push
mov
xchg
ret
add
add
add
add
or
add
nop
nop
nop
nop
jae
add
xchg
push
add
pop
loopne
add
inc
cs
or
test
push
mov
leave
nop
jmp
mov
push
in
sub
and
add
dec
jae
ret
xor
add
xor
dec
push
push
mov
xchg
ret
add
add
push
add
call
xchg
shrb
nop
nop
nop
jae
add
outsl
add
loopne
adc
add
xchg
nop
push
mov
leave
nop
jmp
push
call
lds
pop
repnz
jle
lea
clc
nop
nop
nop
nop
jae
add
sub
add
add
add
xchg
fistpl
push
mov
xchg
ret
popl
add
add
in
xor
adc
jnp
inc
add
add
add
cmc
add
add
sub
lea
clc
nop
nop
nop
nop
jae
add
add
add
pop
sub
jmp
add
add
add
add
add
add
loopne
pop
add
clc
nop
nop
nop
nop
jae
add
loope
add
sbb
repnz
stos
hlt
hlt
int3
adc
nop
nop
nop
jae
pop
add
push
add
push
clc
nop
nop
nop
nop
jae
outsl
add
add
add
gs
push
mov
xchg
ret
add
jg
add
pop
jle
add
mov
fiadds
ret
adc
add
mov
add
mov
add
clc
nop
nop
nop
nop
jae
cmpsl
add
loopne
outsl
lds
shr
clc
nop
nop
nop
nop
jae
jnp
mov
icebp
pushf
dec
jecxz
lods
xchg
lcall
jae
add
add
add
out
inc
or
mov
xchg
ret
add
add
mov
xchg
call
add
outsl
add
push
mov
xchg
ret
sub
mov
add
add
push
add
sub
sbb
add
aaa
jns
je
js
nop
nop
nop
nop
jae
add
add
loopne
mov
xor
sbb
push
mov
xchg
ret
adc
add
add
jg
cmpl
nop
push
mov
leave
nop
jmp
add
and
out
incb
add
aaa
je
clc
nop
nop
nop
nop
jae
add
add
add
clc
jno
aas
add
imul
incl
repnz
dec
add
mov
push
mov
xchg
ret
aaa
pop
add
rolb
add
add
add
mov
mov
nop
nop
nop
jae
ret
xlat
push
add
test
in
xor
pop
shr
clc
nop
nop
nop
nop
jae
add
add
add
adc
add
es
adc
add
clc
nop
nop
nop
nop
jae
add
add
add
add
call
nop
jae
add
dec
in
add
jne
nop
push
mov
leave
nop
jmp
jg
add
add
add
insl
imul
nop
nop
jae
insl
add
add
jg
in
fiaddl
add
clc
nop
nop
nop
nop
jae
outsl
add
call
jg
or
jmp
sar
nop
nop
nop
nop
jae
loope
insl
pop
add
xor
add
lahf
call
clc
nop
nop
nop
nop
jae
jp
in
loopne
add
lret
push
push
mov
xchg
ret
add
adc
push
adc
pop
fwait
cld
clc
nop
nop
nop
nop
jae
add
repnz
add
push
pop
nop
push
mov
leave
nop
jmp
loopne
push
add
mov
aaa
nop
push
mov
leave
nop
jmp
add
add
add
add
pop
push
mov
xchg
ret
lds
nop
add
mov
adc
add
clc
nop
nop
nop
nop
jae
xchg
dec
outsl
cmc
add
pop
outsl
add
pop
xor
inc
daa
mov
clc
nop
nop
nop
nop
jae
dec
add
call
repnz
add
daa
mov
clc
nop
nop
nop
nop
jae
push
aaa
jg
jp
sub
cmpsl
pusha
clc
nop
nop
nop
nop
jae
adc
adc
add
add
clc
nop
nop
nop
nop
jae
add
add
jecxz
add
add
xor
mov
xchg
ret
add
jb
add
add
add
pop
push
mov
xchg
ret
pop
add
outsl
jp
ret
ret
add
pop
clc
nop
nop
nop
nop
jae
icebp
add
add
push
add
add
add
pop
push
mov
add
aam
fldl
push
add
adc
fwait
jae
test
jno
cmp
sbb
clc
nop
nop
nop
nop
jae
repnz
add
pop
jne
nop
push
mov
leave
nop
jmp
add
add
loope
pop
daa
fistpl
nop
push
mov
leave
nop
jmp
mov
add
sub
add
add
nop
nop
nop
nop
jae
sub
add
in
aaa
add
push
mov
xchg
ret
add
add
loopne
add
pop
lea
dec
cmp
nop
nop
nop
nop
jae
aaa
xor
mov
sub
movsb
mov
nop
nop
jae
add
add
jecxz
and
add
add
push
mov
add
sbb
inc
add
add
movsb
add
aas
pop
nop
push
mov
leave
nop
jmp
adc
add
in
icebp
add
fistpl
clc
nop
nop
nop
nop
jae
lds
add
mov
add
add
leave
lea
push
mov
xchg
ret
add
add
aaa
ret
pop
nop
push
mov
leave
nop
jmp
push
loopne
call
push
lds
add
fwait
push
clc
nop
nop
nop
nop
jae
add
add
add
fs
push
mov
add
add
xor
add
mov
inc
cli
ds
adc
repnz
clc
nop
nop
nop
nop
jae
pop
cmc
mov
push
add
sub
nop
nop
nop
nop
jae
mov
jb
icebp
mov
nop
nop
jae
add
cmpsl
push
add
call
nop
push
mov
leave
nop
jmp
sbb
popl
ret
sub
push
clc
nop
nop
nop
nop
jae
add
add
add
in
leave
nop
jmp
cmpsl
icebp
add
in
add
add
add
test
xchg
ret
cmpsl
add
nop
adc
add
pop
or
sti
nop
push
mov
leave
nop
jmp
pop
jp
cmc
mov
xchg
push
call
nop
jae
add
xchg
jle
add
add
mov
xor
push
data16
cmp
stos
push
add
mov
clc
nop
nop
nop
nop
jae
pop
dec
ret
into
add
pop
call
rep
clc
nop
nop
nop
nop
jae
add
add
add
aaa
ret
add
mov
clc
nop
nop
nop
nop
jae
pop
cmc
lds
add
xchg
inc
add
nop
push
mov
leave
nop
jmp
add
add
add
outsl
add
add
nop
push
mov
leave
nop
jmp
add
pushf
add
cmc
nop
jecxz
jg
mov
popf
xchg
inc
add
push
add
add
cmpsl
repnz
clc
nop
nop
nop
nop
jae
pushf
add
add
pushf
add
mov
cmpsl
jl
clc
nop
nop
nop
nop
jae
add
adc
xor
data16
aas
push
clc
nop
nop
nop
nop
jae
pop
add
add
add
nop
add
rorb
mov
push
mov
xchg
ret
jp
add
xchg
in
jle
add
outsl
push
clc
nop
nop
nop
nop
jae
sub
mov
xlat
sub
pop
add
incb
cmp
mov
push
mov
xchg
ret
add
add
cmc
add
adc
inc
and
clc
nop
nop
nop
nop
jae
add
add
add
add
cmp
mov
in
leave
nop
jmp
add
add
add
add
cmp
nop
nop
jae
add
adc
add
add
cmpsl
and
add
enter
nop
nop
nop
nop
jae
dec
add
icebp
nop
pop
add
mov
push
mov
mov
add
add
add
add
add
lcall
iret
or
inc
add
add
dec
pushf
repnz
add
adc
nop
push
mov
leave
nop
jmp
loope
sub
dec
icebp
rorb
add
scas
cmpsb
jbe
or
sbb
mov
xchg
ret
mov
cmc
add
aaa
dec
add
add
cmpsl
add
rclb
jmp
jnp
repnz
pop
aad
add
add
test
push
mov
leave
nop
jmp
cmpsl
add
mov
xchg
push
xor
add
add
lcall
in
leave
nop
jmp
sub
add
call
repnz
rep
nop
push
mov
leave
nop
jmp
dec
nop
pushf
adc
jnp
cmc
subl
push
mov
xchg
ret
xlat
dec
mov
sbb
add
pop
jp
push
clc
nop
nop
nop
nop
jae
add
sbb
add
add
and
ds
mov
or
add
leave
ss
sub
test
and
rolb
dec
add
sbb
cli
or
add
mov
or
js
incb
add
adc
ljmp
cmp
lds
push
xchg
ljmp
orl
add
xor
cld
rcrl
hlt
ret
cmp
jmp
pop
lds
decb
adc
mov
pop
cmp
sbb
pop
or
ljmp
incb
decb
cmpsb
sub
incb
pop
push
pop
xor
js
mov
in
lcall
or
decb
mov
add
aas
movsl
sbb
push
in
or
cmp
sub
out
jne
sbb
incb
sarl
jnp
cmp
xor
shlb
mov
add
mov
ljmp
push
in
xlat
scas
cmpsl
xor
dec
sar
enter
in
or
lea
cs
movsl
aaa
xchg
inc
incb
hlt
cmp
jo
loop
and
aad
xchg
imul
adc
faddl
roll
xchg
push
push
jns
aad
cli
and
test
decb
decb
add
push
mov
decb
decb
add
push
movsl
les
and
push
cli
cltd
lcall
fbld
ret
arpl
ljmp
je
sbb
orb
fs
inc
jb
stos
ja
jno
or
ds
xchg
sahf
pop
inc
lods
mov
jle
add
sbb
jbe
decb
pusha
add
mov
mov
aam
mov
fmull
xor
incb
dec
ljmp
or
add
mov
mov
inc
in
roll
or
inc
add
decb
add
scas
ret
ret
add
ljmp
jae
mov
add
cmp
xlat
mov
dec
jne
add
out
mov
push
inc
ret
and
decb
addr16
lods
xlat
je
aam
loopne
pop
cmp
cmp
jb
jbe
sbb
inc
xchg
adc
mov
adc
gs
ret
sub
sub
lock
cwtl
push
jle
fisubrl
lret
push
add
fmuls
sub
ljmp
or
dec
add
inc
in
mov
add
fisubs
test
jb
add
fs
xchg
adc
arpl
hlt
loope
pop
push
bound
mov
out
add
dec
add
sti
data16
cmp
cmp
icebp
popa
pop
sub
decb
loop
mov
je
mov
movsl
imul
hlt
sub
loop
je
sub
ficoml
mov
cli
dec
add
mov
add
insl
mov
and
xchg
dec
jnp
push
jbe
incb
xor
incb
incb
sbb
test
mov
add
movsl
sub
incb
test
pushf
pop
lds
mov
mov
pop
pusha
add
pop
enter
sarl
push
mov
rorl
xchg
aaa
cmpsb
in
inc
adc
cmp
sub
cmp
ds
scas
push
add
jbe
xchg
bound
pop
icebp
clc
fstpt
cmp
iret
insb
add
pushl
adc
sbb
addr16
fs
in
aam
test
cmp
push
stc
sub
insl
fldl
in
push
and
xchg
jbe
jb
out
dec
and
scas
in
jno
xorl
incb
incb
call
mov
adc
cmc
pop
aas
test
mov
jmp
adc
fisttpl
sbb
add
sbb
incb
call
pusha
pop
sbb
cmp
add
xor
cmovg
sub
fs
cwtl
cmp
pop
xchg
popa
xor
stos
push
arpl
fldcw
push
jle
adc
ror
aaa
mov
mov
push
inc
ljmp
xor
add
jmp
add
inc
add
pop
dec
cmp
cmp
push
inc
add
jb
imul
imul
add
cs
in
dec
mov
inc
sbb
in
xor
xor
sub
mov
out
xchg
jns
mov
push
dec
aaa
cmp
mov
or
fdivrs
xlat
aam
sti
xchg
mov
aam
pushf
push
lcall
lret
push
add
add
adc
incb
call
pop
cwtl
jb
xchg
andl
loop
rolb
lret
jle
mov
movsb
xor
cld
mov
sahf
test
les
add
test
pop
pop
scas
lahf
and
pop
pop
dec
shlb
cmp
xor
add
mov
movsb
data16
fdivs
or
mov
xchg
fists
pushf
jecxz
dec
cmpsl
arpl
stos
pushf
cmp
jns
inc
mov
sbb
pop
jae
decb
decb
push
int
popa
lds
jmp
popf
aaa
adc
mov
std
icebp
dec
add
gs
xor
popf
test
cmp
insb
add
sbb
incb
pop
ficompl
movsl
push
sub
mov
cmp
icebp
jmp
stos
inc
dec
cmp
push
adc
sbb
int3
insl
fisttpl
add
add
incb
add
cltd
push
call
add
scas
hlt
or
rcrb
mov
fcomip
push
mov
push
jp
aad
mov
icebp
and
push
addr16
filds
push
jbe
inc
add
out
cmp
out
mov
add
incb
cwtl
fdivrs
bound
xlat
add
incb
push
int
mov
std
xchg
jg
mov
add
mov
cmp
push
imul
mov
mov
dec
shl
lret
push
fs
xor
or
inc
add
add
mov
ficoml
out
jno
js
dec
je
jno
mov
fmuls
stos
and
nop
flds
add
jno
fnstsw
aam
pop
push
pop
cmp
xchg
lcall
out
dec
xor
mov
cld
inc
sbb
repnz
and
push
fcmove
adc
pop
mov
pushf
and
dec
gs
mov
inc
incb
cmp
pop
mov
jbe
dec
fbld
lock
inc
decb
fisubrs
xchg
frstpm(287
and
in
int3
je
sbb
jne
enter
add
xor
decb
mov
ret
mov
ret
add
cmp
pop
sbb
mov
mov
scas
lret
mov
lret
mov
push
mov
inc
add
or
outsb
add
jmp
add
ljmp
imul
imul
xor
sahf
or
faddl
mov
mov
icebp
clc
inc
mov
in
push
xchg
insl
es
xor
mov
or
decb
incb
add
sarl
xorl
mov
pushf
add
incb
xchg
push
incb
add
pop
addr16
mov
addr16
hlt
sbbl
xchg
inc
popa
xchg
xor
mov
insb
push
mov
or
decb
das
xchg
pop
jns
inc
lahf
pop
jmp
iret
and
dec
shrb
addr16
out
and
sbb
jg
ljmp
mov
xlat
mov
mov
push
fistl
movsb
jno
daa
in
add
jns
cmp
jbe
movsl
or
push
data16
add
pop
mov
pop
lcall
pop
stos
into
push
decb
fnstsw
xchg
jmp
and
pop
in
dec
add
hlt
sbbb
mov
adc
mov
xor
incb
add
cli
pop
fldl
push
imul
inc
sbb
add
jbe
mov
jb
xchg
or
jns
lea
aas
stos
inc
icebp
cmp
mov
dec
rcrb
insl
inc
in
mov
ja
lcall
in
fisubrl
repnz
pushl
lea
sbb
sbb
or
movsl
mov
mov
push
mov
jb
jnp
lcall
lds
add
fisubs
cmp
decl
pop
inc
lock
pusha
incb
mov
decb
mov
outsl
xchg
dec
mov
fistpll
jg
mov
pop
jp
xchg
hlt
add
mov
notl
pop
push
xor
rcrb
daa
lcall
inc
add
pop
sub
sbb
incb
mov
dec
imul
cli
push
mov
insb
add
push
dec
add
push
das
cli
jl
add
mov
repz
rcrl
clc
inc
cli
cld
xchg
ror
jne
fsubr
sbbb
sbb
aad
js
fimuls
add
pop
cmpl
mov
adc
decb
add
out
or
aaa
out
inc
mov
push
outsl
fwait
cmp
and
inc
pop
cmp
ja
sti
inc
stc
cmp
push
mov
inc
mov
mov
stos
out
jb
push
add
sahf
hlt
mov
fcoms
dec
stos
cs
dec
add
mov
and
arpl
push
rorb
jae
add
mov
mov
dec
insl
or
insb
add
aas
and
incb
lds
add
xchg
popf
js
aaa
pop
sbbl
pop
xchg
repz
lods
outsb
inc
push
icebp
rcrb
mov
xchg
jp
pop
jmp
lods
push
sbb
jp
add
in
mov
xchg
cli
jb
icebp
and
cmp
add
icebp
inc
mov
cmpsb
call
decb
add
inc
add
cmpsl
xchg
and
cmp
sub
mov
js
push
add
incl
add
clc
inc
jmp
aad
int
xor
mov
jge
jle
pushf
adc
cmc
je
cmc
ficomps
mov
arpl
ja
pop
sub
push
lret
xor
sub
stos
call
adc
fisubl
xor
out
fiadds
aad
xchg
cmp
outsb
add
pushf
cmc
and
fs
jns
pop
jnp
sbb
sahf
and
cli
sbb
jl
push
add
mov
sbb
popf
adc
inc
sti
sbb
push
mov
mov
mov
ret
adc
data16
push
inc
inc
pop
dec
mov
incb
add
aas
icebp
xchg
inc
pop
in
mov
add
or
jle
rcrl
cmp
cmp
aaa
imul
add
and
pop
pop
std
add
mov
inc
cld
push
dec
add
lret
xor
hlt
jp
and
stos
inc
add
mov
pop
ficoms
adc
xchg
or
decb
add
pop
data16
incb
jne
push
idiv
pop
ret
push
movsb
mov
push
inc
add
adc
call
pop
aad
mov
mov
shll
jae
jl
dec
push
rcll
pop
mov
fs
mov
mov
pop
fildll
pusha
xlat
cmp
xchg
push
xchg
in
and
dec
incl
lods
mov
add
insl
mov
add
mov
repnz
pop
mov
xchg
popa
int
popf
add
adc
imul
cmp
scas
jnp
fisubrl
int
xor
cli
and
adc
das
cmp
cwtl
pop
es
fcomp
mov
iret
pop
pop
and
test
adc
inc
mov
and
sub
decb
push
mov
push
mov
mov
mov
mov
pop
lds
push
scas
sub
decb
sarb
fisubl
inc
sub
shrl
add
pop
fisttps
loopne
lods
pop
negl
insl
xchg
add
sbb
repz
fsub
xor
mov
addb
adc
add
inc
sti
pop
insb
add
push
decb
pusha
add
or
mov
fsub
push
les
mov
jp
iret
push
ficoml
mov
imul
std
cwtl
pop
lcall
adc
dec
mov
incb
jge
lret
ja
jmp
pushf
outsb
decb
arpl
lods
lret
cs
std
mov
mov
ja
dec
jp
dec
add
push
pop
add
mov
xor
sahf
add
xor
inc
dec
lahf
xchg
and
or
and
incb
mov
cmpsb
push
repz
jecxz
and
sbb
sub
aaa
stos
mov
xlat
pop
call
ds
mov
arpl
cmpsb
ss
mov
gs
add
mul
pop
outsb
add
sub
dec
jmp
imul
dec
ss
sbb
inc
add
and
xor
cmp
sub
incb
xor
cmp
xor
aas
addr16
fwait
add
xchg
dec
mov
jg
add
mov
out
daa
adc
adc
ret
insb
mov
sbbb
fsubrl
xor
and
out
add
fwait
xchg
inc
push
int3
mov
in
negl
dec
orl
cltd
bound
cli
loope
lods
ja
inc
notl
test
outsb
mov
shll
pusha
and
leave
sbb
add
dec
cmp
fadds
and
jae
add
mov
push
inc
add
negb
push
cs
ljmp
out
xchg
xor
add
mov
fs
and
incb
cltd
sbb
fs
pop
mov
shl
sub
add
lock
mov
fcoms
add
push
add
mov
dec
mov
popf
test
jmp
mov
stc
or
popa
mov
ja
lret
and
and
push
repz
hlt
push
cs
lods
pop
sbb
push
jns
xchg
mov
mov
xlat
icebp
daa
pusha
insb
sub
mov
inc
sbbb
add
xchg
sub
xor
stos
push
add
iret
int
and
decb
decb
xchg
sub
insb
add
daa
ljmp
add
adc
mov
decl
add
cli
int
inc
add
rclb
repz
ret
xor
xor
enter
shrb
mov
push
add
mov
mov
add
out
cs
pop
in
mov
int
push
dec
jp
add
ss
loope
shl
jp
mov
dec
add
push
test
mov
adc
jge
xor
push
push
hlt
shrb
cmc
mov
push
adc
and
aam
or
call
shlb
jnp
mov
pusha
add
dec
jl
fisttpl
jb
in
push
sti
add
jnp
incb
xor
adc
push
push
xchg
xchg
icebp
in
orb
adc
inc
in
adc
pushf
sub
shlb
out
add
ds
fidivrs
xor
ret
cltd
je
test
ja
test
lods
js
add
sbb
inc
sahf
nop
mov
or
and
jo
sub
insl
ret
sbb
or
sub
add
and
cmc
rcll
mov
push
inc
add
add
mov
push
jle
add
mov
fcom
fistps
xor
cmp
and
mov
inc
pop
jmp
shrl
push
outsb
add
xchg
xor
cwtl
xor
lea
or
or
lret
pop
frstor
stos
adc
pushf
pop
loope
push
xchg
jle
xchg
imul
int3
jbe
cld
mov
inc
and
decb
cmc
insb
add
fwait
cmp
sbb
jns
dec
sub
push
xor
mov
popa
cmp
out
insl
pop
pop
push
sbb
je
and
mov
mov
mov
lods
xchg
mov
jg
cs
out
ss
enter
fdiv
cmp
mov
xor
mov
pop
je
xlat
repz
add
cmp
sbb
call
popf
lcall
in
in
pop
mov
pusha
push
ror
jae
test
add
hlt
mov
mov
add
ds
loope
and
mov
fwait
inc
add
push
in
pop
sbb
decb
and
aad
call
and
iret
mov
pop
jle
lea
inc
popa
push
mov
scas
push
mov
ds
dec
mov
decb
push
and
cli
jb
or
fistpll
jo
scas
cld
push
mov
out
filds
pop
sbb
adc
iret
in
popa
scas
test
in
add
into
test
mov
dec
add
jno
inc
cmp
mulb
or
stos
and
mov
imul
and
lea
inc
mov
cmpsl
iret
pop
add
pushl
test
loope
insb
add
jns
imul
or
adc
adc
leave
cmp
decb
mov
cld
arpl
outsl
cli
pop
push
stos
mov
inc
add
pop
inc
mov
cwtl
dec
fnstsw
popf
inc
daa
mov
stc
and
add
mov
fidivl
push
add
mov
imul
xchg
pusha
fcomps
pop
xor
mov
fcoml
mov
sbb
jle
mov
mov
int3
lods
inc
adc
icebp
fstpl
pop
cmp
into
pushf
xchg
sbb
std
enter
mov
dec
add
shrl
subb
jnp
xchg
mov
shl
iret
push
xor
out
lds
push
imul
cmpsl
inc
add
outsl
inc
add
inc
shll
xor
mov
rolb
cmp
aaa
or
aas
push
jns
lahf
pop
dec
pop
cmp
push
test
add
incb
pop
into
jae
pop
cmp
ja
fists
icebp
in
fidivrs
incl
cltd
push
xor
add
pop
mov
mov
imul
in
dec
add
sti
cmp
add
fwait
sarb
pop
cltd
xor
cmp
int3
sub
add
cmp
test
data16
decb
pop
lcall
and
cmp
cmp
divl
scas
in
addr16
rcrb
jge
mov
lds
push
es
loope
and
push
mov
into
and
loop
xor
in
push
and
dec
add
data16
inc
sub
stc
inc
or
incb
popf
cmp
mov
mov
cmp
sbb
add
xor
jle
sahf
jne
cltd
mov
incb
sub
jo
or
cli
pusha
decb
xor
dec
movsl
jbe
jg
addb
xchg
sub
decb
jge
scas
lret
sbbl
pop
mov
iret
ljmp
cmp
xchg
jmp
enter
add
pop
movl
ds
roll
xor
sub
push
in
sub
lods
inc
pop
lods
push
add
mov
lds
gs
pop
mov
push
xor
cmp
pop
sarb
flds
add
push
add
sub
pop
sti
cmp
sbb
xchg
mov
jbe
push
popl
popf
out
incb
xor
push
add
incb
inc
push
xchg
pop
pop
inc
jge
call
fldcw
in
loope
pop
stc
loopne
sub
xor
xlat
xchg
xchg
scas
mov
mov
add
xor
xor
jmp
into
pop
or
sbb
push
std
mov
ret
pop
ror
jl
lret
test
add
push
cmc
add
icebp
ds
aam
in
jb
shr
jo
add
mov
decb
sbb
repnz
add
add
test
mov
jle
loopne
leave
pop
scas
jp
aam
imul
inc
add
push
icebp
ljmp
andl
stos
out
dec
aaa
sub
xor
fsts
inc
pcmpgtw
sahf
jmp
shl
lods
insl
mov
mov
addr16
sub
inc
cld
mov
and
out
xchg
icebp
mov
add
cltd
das
sub
outsb
add
pusha
add
das
jle
mov
xchg
push
xor
add
and
pusha
sub
sti
jb
insl
hlt
mov
mov
add
lock
aam
das
add
mov
mov
pop
sub
decb
add
out
mov
test
shl
sbb
xchg
lds
imul
add
js
pushf
imul
push
inc
in
dec
ja
sbb
push
loope
jmp
cs
test
ljmp
inc
inc
jo
mov
decb
out
push
mov
push
sub
test
cmpsb
stc
push
inc
aam
fstps
mov
scas
or
negb
push
mov
aas
and
repz
mov
movsl
jecxz
pop
sub
insl
out
shl
mov
leave
jmp
pop
arpl
cmp
jge
sub
push
dec
rclb
mov
das
lahf
das
icebp
cmp
test
mov
add
ds
adc
inc
test
lds
wrmsr
shlb
fcoms
fsubrl
les
incb
in
mov
loopne
je
addr16
xor
add
mov
xchg
push
xchg
jnp
insl
fiaddl
jno
sbb
sti
out
or
daa
popa
ljmp
incb
sub
xchg
incl
lret
adc
cmpb
and
inc
mov
jle
test
aaa
js
mov
pop
xlat
push
push
stc
mov
cli
xor
add
xchg
lea
mov
mov
rol
and
ret
out
push
inc
std
nop
mov
lods
mov
clc
shlb
push
cli
aad
and
mov
fwait
repz
lcall
iret
repz
incb
add
lods
mov
sbb
mov
je
out
sbb
jp
leave
in
xchg
fcom
or
dec
sbb
mov
dec
aaa
jbe
insb
xchg
cwtl
inc
fmuls
sbb
cmp
pop
iret
and
and
fisubs
cmpsl
lcall
cmc
rclb
decb
jno
pop
or
mov
imul
add
insb
add
sub
and
mov
test
mov
push
sbb
jl
xchg
pop
adc
mov
aas
sub
rolb
and
out
inc
ja
mov
xchg
push
jb
je
or
dec
fiaddl
imul
dec
sub
xor
pop
cwtl
js
pop
dec
push
add
pop
or
xchg
dec
out
adc
lcall
incb
inc
mov
decb
add
jo
xchg
movsl
div
mov
add
pop
imul
mov
pop
xor
add
movsl
jno
test
jo
cmpsb
pushf
sbbb
cmpsl
and
and
nop
jbe
in
cli
dec
test
leave
pop
ds
scas
in
add
arpl
dec
push
decb
sub
add
mov
xchg
xchg
sub
fadd
mov
fstps
add
lods
xchg
jmp
jge
insl
fwait
ja
mov
inc
sbb
jne
cmp
mov
iret
and
mull
inc
push
dec
add
sub
hlt
push
sbb
and
mov
xchg
lahf
int
sub
js
loopne
add
les
in
imul
dec
add
pusha
mov
lea
pop
jo
add
pop
mov
pop
pop
cs
xchg
jae
adc
mov
pushf
mov
push
pop
add
movsb
jns
aas
stos
aaa
push
dec
ljmp
sbb
and
stc
and
inc
cmp
loope
insl
daa
popa
fcmovnu
je
jne
inc
icebp
shrl
lods
ja
roll
cmc
and
pop
js
decb
xor
mov
aaa
sbb
out
cmp
add
jb
ja
add
jge
cli
out
and
xor
cs
and
add
mov
mov
xorl
lods
cmp
mov
pop
aad
lds
cltd
xchg
push
fimull
cmp
add
and
cmpsl
add
mov
add
push
inc
dec
sarl
addr16
sub
movsl
sbb
sbb
dec
jmp
push
add
cmp
sub
mov
shll
aam
add
xchg
mov
add
sbb
sub
push
xchg
adc
add
rclb
ljmp
pop
pop
test
xchg
inc
add
mov
mov
or
stos
repnz
dec
add
push
jbe
sbbl
or
push
or
out
push
add
push
ljmp
xchg
cmp
xor
sti
cmpsl
mov
pop
dec
add
mov
pop
idivl
test
daa
cli
mov
xor
jno
sbb
cmpsl
cwtl
add
add
es
mov
cmp
std
mov
jne
adc
decb
aas
inc
add
push
xchg
mov
fldl
int3
les
jne
push
add
test
add
cmp
cli
fadds
xchg
sbb
xchg
jmp
inc
pop
ja
stc
cmpsl
loopne
adc
xor
fwait
dec
add
mov
add
xor
cmp
or
mov
inc
rol
add
decb
jmp
mov
cli
lock
add
test
jnp
insl
jbe
lret
insb
add
cltd
adc
dec
out
and
hlt
sub
push
or
es
mov
inc
add
xchg
mov
xor
add
imul
and
scas
jae
popf
sbb
repnz
sub
sub
aam
sahf
pop
in
cld
fsts
fsin
sbb
add
nop
jae
mov
fisubrl
insl
jb
push
daa
xchg
jae
nop
xchg
jge
out
xchg
or
add
sbbb
push
dec
je
imul
decb
hlt
push
adc
adc
mov
popf
adc
clc
push
add
rolb
xor
mov
mov
bound
icebp
shrb
call
in
xor
fistpl
xorl
faddl
cmp
es
decb
or
repnz
fs
sahf
ss
aas
mov
popa
pop
adc
cmc
call
pop
jne
pop
sub
aad
sub
pusha
add
lods
in
nop
inc
add
lods
adc
dec
jns
leave
or
xchg
in
cmpsb
repz
stos
adc
jge
repz
popa
dec
decb
adc
sbb
xor
or
mov
mov
rcll
ret
sub
pop
mov
in
xor
sbb
aad
dec
cmpsb
jmp
nop
sub
decb
nop
and
repnz
pop
cmp
scas
jmp
lea
inc
pushf
inc
add
sbbl
inc
add
outsl
push
rcll
cmc
aad
xchg
adc
in
jl
add
jmp
add
inc
movsb
aas
icebp
lods
sub
xor
insb
add
adc
adc
in
add
adc
xchg
sub
jne
mov
mov
imul
cmp
es
sbb
add
cmpsl
mov
mov
mov
sub
xor
fnstcw
xchg
es
cmp
lret
leave
fmuls
add
or
incb
in
sub
roll
cmp
xchg
adc
add
test
sub
pop
jmp
decb
ficoms
and
xor
jnp
add
xchg
out
sbb
mov
add
call
loop
icebp
adc
and
sbb
inc
or
add
pop
cmpsl
or
jno
ljmp
add
decb
add
push
cmp
xchg
xlat
or
stos
sbb
mov
xor
or
inc
mov
push
xchg
nop
ss
add
sub
decb
dec
sub
dec
dec
ficomps
hlt
ds
addr16
cmp
daa
lea
imul
test
add
shlb
fst
aad
xlat
data16
xlat
add
decb
mov
dec
inc
add
pop
cmpsb
adc
arpl
xor
mov
aad
pop
jnp
adcb
ret
add
cltd
outsl
pop
xchg
and
pop
or
add
jae
inc
add
xor
loopne
mov
arpl
pushl
enter
adcb
ret
rorl
leave
dec
add
data16
and
decb
xchg
add
xchg
mov
add
adc
or
jmp
scas
add
mov
mov
lea
dec
add
cmpsl
fsub
add
cs
js
mov
mov
std
xor
inc
pusha
in
subb
js
decb
add
add
push
xchg
mov
mov
and
jge
dec
add
fistps
xor
cli
mov
repz
mov
mov
add
repz
push
mov
je
or
jmp
add
cmc
pop
sar
mov
int
adc
jae
add
incb
pop
test
and
es
pop
and
cmpsl
ds
mov
incb
add
dec
sbb
xor
leave
das
xchg
mov
mov
and
incb
repnz
test
add
add
fcoms
out
inc
aaa
in
andb
mov
mov
lock
sbb
mov
push
sub
sbb
xlat
pop
push
or
aam
mov
mov
inc
mov
inc
stos
fwait
ja
jmp
shll
dec
sti
jge
mov
pop
lods
add
and
push
inc
add
pop
insb
add
jge
push
in
add
adc
call
push
leave
and
daa
push
add
incb
pop
add
pop
push
loop
pop
push
jge
adc
jg
mov
mov
jmp
decb
xlat
frstor
mov
add
pop
lret
cmp
loope
jbe
xchg
loopne
repnz
add
push
push
push
jecxz
icebp
jmp
insl
gs
add
cld
sub
mov
int
jns
xor
fs
sub
inc
add
fucomp
daa
and
incb
push
adc
mov
xchg
mov
sbb
es
xor
mov
xchg
repnz
cmp
loopne
insl
jae
add
decb
xor
mov
clc
pop
incl
add
in
enter
stos
outsb
add
adcb
sub
outsl
mov
ljmp
mov
pop
adc
stc
roll
inc
mov
insl
xrelease
sub
decb
and
ds
cmpsl
adc
cmpsl
lcall
out
data16
decb
push
loope
pop
movsb
cmc
loop
add
dec
add
test
jnp
add
das
hlt
stc
iret
in
and
push
mov
add
mov
cs
lret
imul
test
sbb
loopne
xchg
sub
inc
adc
mov
jbe
loope
cmp
and
xchg
fisubrs
xor
test
aas
or
dec
js,pt
inc
dec
outsl
int
fimull
jp
add
ss
stc
push
sahf
jo
or
incb
add
pop
lock
pop
jmp
fprem
push
xchg
es
and
push
fnstenv
pop
add
mov
addl
repz
icebp
xor
mov
pop
popf
mov
imul
adc
dec
add
std
inc
iret
cmp
lods
mov
sbb
lret
loop
repz
add
pop
call
or
jne
int3
icebp
jb
scas
lods
sbb
or
mov
in
add
cmpsl
mov
repz
nop
ss
jo
mov
sbb
pop
in
orl
jne
test
incb
push
fcomps
mov
decb
push
push
inc
cmp
pop
sahf
xchg
push
mov
inc
add
or
inc
insl
mov
pop
gs
xor
or
push
movsl
adc
into
mov
sub
scas
psubw
out
cmp
aaa
push
add
inc
cmpsl
fnstcw
decb
incb
call
xlat
pop
jae
add
mov
decb
daa
xchg
inc
lahf
mov
cmp
movsb
mov
cmpsb
pop
pop
cmp
leave
stc
ficompl
sti
or
cmpsb
movsb
sbb
inc
arpl
add
pop
ret
decb
sbb
inc
roll
xchg
std
mov
stc
std
popa
jbe
movsb
nop
push
std
xchg
cmp
fwait
lea
data16
aaa
push
sbb
xor
clc
jo
sub
nop
fldenv
inc
xchg
mov
arpl
jle
test
add
mov
xchg
mov
addr16
mov
xor
call
mov
inc
insl
jne
sahf
xor
imul
inc
mov
add
xchg
mov
sub
repz
in
adc
sbb
aam
sbb
sbb
mov
and
push
dec
push
mov
decb
leave
adcl
mov
and
add
out
insl
or
data16
dec
add
lods
jle
xchg
loopne
je
imul
cmp
add
int3
jp
mov
loopne
jae
sahf
sub
cmp
imul
stos
jmp
mov
add
js
pop
lret
cwtl
out
shlb
popf
mov
incb
or
decb
sbb
xchg
mov
cmp
inc
add
loop
mov
jo
out
jp
decb
iret
mov
imul
cltd
mov
cmp
rcl
insl
xchg
and
adc
xor
stc
xchg
or
mov
ljmp
add
popa
loopne
lds
aad
adc
dec
jp
mov
mov
push
xor
pop
pop
cmp
clc
cmc
out
jl
testb
push
sbb
loopne
adc
int
out
pop
rclb
cld
test
sub
das
scas
pop
cltd
lret
dec
sub
pop
scas
imul
adc
cmp
aas
adc
jge
push
mov
cmpsl
push
incb
sbbb
or
in
lods
cmc
scas
and
insl
in
sub
popa
movsl
mov
clc
cmc
add
mov
jl
pop
jae
outsb
decb
push
fisubl
addl
or
jnp
push
in
lret
sarb
sub
cs
imul
push
pushf
movsl
xor
xor
hlt
loopne
stos
sub
sti
xchg
mov
data16
fadd
addr16
fdivl
int
ret
push
pop
in
sbb
mov
push
mov
je
sub
fildll
cmp
loop
push
mov
test
and
decb
fcmovu
cs
cmp
push
lahf
into
dec
jae
stc
notb
stos
imul
icebp
mov
sub
dec
sub
mov
sub
cmp
pop
in
pop
jns
and
add
ret
add
and
jbe
scas
mov
loope
sub
idivl
sbb
test
mov
stos
in
cmpsb
sbb
cs
xlat
sbb
xor
test
leave
inc
pushf
cmp
decb
mov
sahf
loop
insb
add
fldcw
add
adc
sti
ljmp
aad
jecxz
or
ds
mov
jo
push
aad
aas
lods
insb
fwait
mov
lock
aaa
sbb
mov
icebp
and
xlat
push
fisubl
sbb
in
add
add
mov
fcoml
lods
push
ret
xchg
and
adc
pop
cld
lea
mov
cltd
sub
xlat
repz
fcmovnu
jne
mov
cltd
sub
pop
push
push
in
mov
jp
lahf
mov
shrl
xor
idivb
scas
frstor
decb
negb
jecxz
lods
outsb
sub
decb
incb
push
mov
push
and
adc
dec
mov
sub
cmc
jge
lods
out
pop
add
incb
pop
xor
cmp
add
fcoms
add
fcmovu
cmpsl
insb
add
pusha
add
lcall
dec
xchg
dec
mov
loopne
movsl
xlat
add
incb
and
sub
decb
add
movsb
inc
dec
mov
scas
jbe
mov
test
cmp
xlat
lret
into
mov
sbbb
mov
mov
cwtl
das
push
add
xlat
push
test
push
inc
mov
mov
fstps
sub
incb
and
xchg
cmp
sbb
push
adc
cmp
pusha
add
and
or
rcll
daa
push
jecxz
sbb
adc
bound
pop
xor
pop
je
adc
out
mov
test
fstpl
jne
rorb
sub
ja
and
inc
add
jp
jo
push
nop
fwait
inc
push
or
cmc
jg
out
mov
lock
xchg
scas
push
dec
mov
lds
in
decb
ftst
xor
xor
xchg
inc
decb
xchg
dec
cld
mov
and
dec
xor
icebp
pop
sahf
cmp
pushf
mov
sahf
shr
push
fidivrl
imul
or
inc
adc
icebp
mov
push
sub
fs
sbb
push
sbb
dec
sub
decb
ret
push
test
add
mov
sub
aam
cmp
scas
fs
cmp
lods
ret
outsb
fdivs
push
cmp
cmp
fs
dec
add
call
cmc
push
mov
incb
xor
lock
out
mov
stos
jb
inc
pop
rclb
sbb
mov
add
or
lret
add
out
pop
jns
fsubrs
push
movsl
loop
fcompl
addr16
add
adc
mov
xchg
adc
xchg
mov
or
cld
sub
lock
jae
sub
sub
jp
fbld
outsl
inc
in
or
pop
or
incb
jl
fadds
stos
lods
in
add
xchg
pop
in
mov
sti
std
fwait
sub
sub
imul
fwait
add
imul
setae
sbb
enter
sbb
add
fnsave
mov
sub
decb
neg
ffree
xor
arpl
out
fcomi
push
lcall
fnsave
xor
cld
test
loopne
pop
jb
jle
mov
and
dec
call
ret
push
and
fsubrl
cmp
clc
dec
pop
loopne
push
jne
add
ja
idivl
incb
in
nop
pop
cmp
mov
xchg
jns
xchg
decb
jbe
ljmp
sub
insb
add
out
mov
jle
cld
sbb
add
decl
add
inc
add
sub
hlt
ja
xchg
jle
push
ret
sub
inc
xlat
fmulp
stc
arpl
add
nopl
pop
dec
add
inc
add
ss
dec
addr16
into
push
cltd
push
decb
imul
or
mov
sarb
inc
mov
test
xor
jle
mov
add
add
add
in
xorl
rcrl
shl
pop
lcall
mov
inc
xchg
jne
divb
fsts
inc
jp
add
dec
clc
xchg
inc
lock
outsb
add
inc
add
orb
sbb
ja
inc
ljmp
jecxz
mov
loope
mov
pop
pusha
add
arpl
and
movsl
iret
mov
fs
scas
out
inc
add
cmpsl
sahf
aas
out
arpl
pop
and
xchg
xchg
push
cs
pop
mov
push
pop
or
fld
or
aad
imul
mov
daa
mov
decb
sub
subl
inc
sub
xchg
test
mov
dec
or
lea
xchg
ficompl
popa
mulb
or
sbbl
xor
out
jge
add
and
addr16
hlt
mov
arpl
mov
xor
stc
hlt
adc
in
cmp
push
stos
es
in
mov
cmpsb
rcrb
mov
mov
out
fnstsw
mov
cmp
inc
aam
lahf
push
cmp
imul
data16
lock
xchg
add
dec
cmpsb
mov
daa
outsb
add
jge
push
xor
add
cmp
mov
pop
fisubs
dec
mov
ja
test
sub
push
test
aas
enter
dec
aam
mov
sbb
pop
jae
outsl
mov
sbb
imul
repnz
xchg
lcall
mov
in
mov
lret
xchg
jmp
push
out
cld
xchg
add
das
fnstcw
lea
push
mov
push
add
push
lods
mov
mov
into
pop
add
jp
mov
or
sti
outsl
test
iret
or
inc
mov
push
pusha
add
adc
popa
dec
xchg
out
push
push
incb
add
mov
push
out
das
adcb
shr
clc
mov
mov
decb
jle
mov
insb
add
filds
in
lods
ret
sub
adc
cmp
dec
add
arpl
mov
movsb
out
mov
pusha
add
sub
xor
adc
cmpsb
out
js
pop
cltd
mov
or
lods
icebp
inc
push
mov
lods
cmc
repnz
push
mov
mov
dec
push
and
mov
add
cltd
sub
cli
je
mov
push
inc
call
xchg
jnp
xchg
sub
xor
push
inc
data16
incb
add
scas
xor
in
mov
sub
shll
sti
jns
es
lods
push
incb
mov
stos
xchg
jl
inc
ss
sub
add
mov
push
cltd
add
es
ret
mov
mov
add
dec
xchg
aaa
fldl
nop
ja
ja
add
mov
sahf
loope
gs
xchg
popa
ficompl
pop
mov
lcall
nop
push
int3
mov
ret
mov
push
fadds
or
std
push
xor
sbb
cmp
fsubrs
incb
xchg
xor
sbb
mov
adc
out
jno
imul
cmp
mov
sub
adcl
scas
lods
and
jecxz
stos
push
incb
rolb
out
cs
pushf
sub
decb
adc
out
movsb
dec
jbe
int3
inc
add
mov
stc
jns
mov
xor
lods
test
rcrl
mov
lret
out
add
andb
pop
fadd
out
stos
xor
imul
push
xchg
mov
adc
pop
and
test
shr
in
lret
mov
mov
or
adc
incb
decb
and
mov
dec
dec
in
hlt
hlt
xor
outsb
xchg
xor
push
sbb
cmp
loope
outsl
mov
lcall
cwtl
lea
test
jp
mov
add
int3
dec
jbe
mov
dec
incb
pop
ja
ret
jns
mov
sub
incl
xor
pop
push
sarb
fsubrl
sub
es
dec
out
repnz
xchg
sahf
jge
sub
sbb
scas
fisubl
add
mov
ljmp
push
loopne
add
scas
push
mov
add
js
addl
notb
or
mov
or
decb
cltd
or
dec
decb
add
cmp
mov
xchg
clc
or
xchg
cmp
iret
stos
iret
clc
add
incb
add
xor
pusha
mov
pop
loope
jo
add
mov
push
jb
xor
and
inc
mov
roll
mov
lods
xor
incb
sub
inc
add
cmpsb
mov
pop
test
add
cmp
aaa
lock
lea
decb
push
incb
lret
add
and
adc
ja
xor
outsl
xor
fbstp
push
popf
adc
nop
popa
and
decb
or
decb
xchg
mov
xbegin
decb
push
stos
dec
in
sbb
pop
sbb
incb
incb
pop
push
or
repz
stc
dec
jns
pop
les
adc
loop
jnp
test
fisttpll
xchg
pop
repz
xor
fwait
wbinvd
xor
out
cmp
xchg
fsts
cmpsb
jo
int3
dec
incb
add
add
je
test
add
insl
stc
inc
cltd
cmp
push
sbb
in
leave
pop
push
into
xchg
adcl
sbb
lahf
out
ror
cs
sbb
jle
mov
mov
xlat
ja
add
and
mov
push
movsb
movsb
cmpsb
mov
add
sbb
dec
adc
sub
cmp
and
xor
push
jno
or
adc
pop
xorl
movsl
mov
clc
inc
loopne
ljmp
adc
adc
ja
mov
das
mov
enter
jecxz
add
bnd
add
lcall
pop
outsb
add
jo
aam
sub
mov
sub
add
xchg
out
loope
dec
pop
dec
inc
xlat
sub
pop
ds
lret
cld
call
rcl
inc
inc
aas
inc
cmpsl
add
xor
jl
enter
add
push
dec
lret
xor
jmp
push
inc
or
in
mov
add
push
adc
std
pop
dec
mov
test
sub
xor
add
mov
addr16
decb
xor
xchg
push
in
popf
xchg
adcb
add
sbb
add
outsb
add
test
es
xchg
cmp
push
ret
fsub
push
aad
lods
dec
decb
inc
add
add
lcall
add
or
xor
cmp
test
mov
add
insl
mov
cmp
and
imul
push
addb
and
mov
dec
add
in
xchg
out
sbb
mov
pop
mov
ja
inc
add
mov
incb
sbb
xor
lock
popf
sub
cmpsl
sbb
mov
fildll
sahf
outsb
add
cltd
int
add
jg
loope
jecxz
add
in
xchg
aad
movb
scas
or
test
orb
stc
fbstp
mov
decb
push
jl
pop
out
je
shll
pop
shrl
pop
mov
push
add
cld
add
decb
xchg
sub
push
push
inc
cli
rcrb
incb
add
insb
and
rclb
add
fisubrs
decb
mov
mov
xchg
das
lret
js
pusha
add
or
jne
jg
test
scas
and
inc
out
icebp
jno
add
scas
inc
cmp
ja
and
sub
mov
jl
push
mov
sti
mov
sub
sub
xor
testb
inc
push
lds
es
lock
or
rolb
mov
adc
mov
shrl
aaa
mov
mov
loope
adc
push
sub
call
add
pop
adc
jecxz
jmp
jecxz
adc
insl
add
jno
enter
sti
jge
cld
sub
jne
call
sbb
out
xchg
or
sti
mov
push
test
pushf
pop
inc
add
ja
repz
decb
add
pop
shll
add
ret
stc
outsb
decb
pop
outsl
aas
dec
daa
xlat
aam
add
outsb
sbb
out
fwait
test
lods
and
dec
mov
fidivrs
decb
add
int
add
mov
insl
ljmp
add
imul
sub
call
arpl
popf
into
nop
mov
addr16
cs
shlb
push
adc
add
stos
repnz
shrb
mov
frstor
adc
xchg
jmp
ficompl
adc
push
jo
mov
iret
pop
aam
or
or
cmp
add
mov
decb
mov
inc
add
jmp
add
es
decb
xchg
cs
pop
sbb
xlat
adc
cli
mov
cmc
inc
dec
add
xchg
addr16
mov
mov
imul
cmp
lcall
pop
mov
cmp
mov
jnp
je
xor
sbb
sahf
nop
pop
inc
lods
mov
sahf
push
cmpsl
out
jge
pop
dec
sbb
lods
scas
mov
ficompl
fs
fidivrl
ljmp
out
mov
xchg
addb
pop
jle,pt
add
data16
push
inc
out
movsb
jno
dec
add
fwait
xor
xor
iret
sbb
cltd
nop
push
jle
outsl
insb
mov
shrl
jg
in
xor
pop
jg
fadds
jmp
lds
jo
add
in
xchg
nop
test
inc
mov
jp
scas
xor
movl
pop
in
or
add
lcall
fbstp
dec
add
in
cmp
mov
xor
loopne
cs
push
in
xchg
add
mov
sahf
gs
sbb
bound
outsl
xor
lock
mov
inc
add
inc
add
xor
cmp
lock
jecxz
es
xor
pop
mov
cs
xlat
leave
movl
pop
hlt
sti
mov
pop
stc
jnp
mov
shl
jge
loopne
ret
lock
xor
cmp
dec
or
faddp
arpl
out
cmp
push
jne
pop
xor
loopne
push
cmpsb
mov
cs
cmpsb
fs
mov
lods
lret
stc
fsubrl
jle
inc
lea
adc
fstpl
xor
mov
sub
ds
andl
mov
mov
push
push
fs
roll
push
test
jl
arpl
mov
out
leave
xor
loop
nop
repnz
mov
hlt
cwtl
adc
imul
push
fildl
add
repnz
jg
sub
add
xchg
rclb
jne
mov
repnz
adc
mov
fidivs
pop
loope
and
jb
subl
xchg
stos
add
dec
push
decb
mov
mov
sub
incb
add
cmp
add
mov
xor
fcoml
dec
into
cmp
mov
cmpsl
sbb
fdivr
stos
jae
push
stos
inc
add
jg
rcll
pop
mov
nop
adc
adc
sarl
rolb
mov
jecxz
cmc
pop
gs
out
push
sbb
pushl
mov
xchg
cmp
inc
inc
rorb
jne
add
int
add
js
rcrb
jne
pop
or
int
daa
mov
in
sub
idivb
filds
fsts
repz
or
loope
add
cmc
ret
les
xor
decb
jge
adc
out
sbb
push
daa
imul
out
mov
sub
incb
jb
mov
pop
aaa
gs
add
pushf
dec
push
pop
mov
dec
xchg
or
inc
fiaddl
mov
jno
mov
jne
enter
cmp
movsb
push
insl
dec
mov
decb
decb
add
iret
push
add
testb
cmp
xchg
jno
mov
fnstsw
lea
fs
push
add
cmpsb
adc
or
sub
mov
mov
add
clc
rcrb
sysexit
imul
adc
xchg
test
mov
andl
roll
pop
cmp
xor
cmpsl
popf
cmp
or
inc
insb
shll
pop
pop
in
mov
test
add
aam
mov
mov
and
jl
out
fcmovbe
movsb
add
xor
in
mov
aad
leave
cmp
rcl
xchg
addl
add
je
repz
or
shlb
repz
add
pop
push
sbb
test
lret
shlb
cmp
fs
fwait
in
flds
xor
pusha
add
adc
rcrb
andb
add
gs
cmpsb
xchg
popf
loopne
fdivl
cmpsb
push
idivb
push
data16
mov
mov
add
fcompl
and
incb
arpl
jno
add
adc
fistl
sub
mov
xchg
imul
test
sub
mov
add
loope
add
sahf
adc
inc
xchg
push
in
mov
xor
es
adc
mov
mov
fistpll
sub
pop
ja
lods
enter
mov
ret
xchg
gs
jae
mov
pop
cld
pop
mov
insl
popf
adc
cmp
push
and
decb
jecxz
jne
mov
loop
hlt
dec
inc
xorb
decb
add
sbb
cmp
mov
ffree
lock
popf
inc
or
enter
xor
mov
mov
mov
add
jo
xchg
cli
adc
sub
and
add
push
cmp
out
and
sahf
cld
push
fsubrl
mov
pop
hlt
orb
hlt
pop
inc
add
or
incb
add
mov
inc
popf
and
ss
imul
mov
out
xchg
mov
push
scas
push
js
cmpsl
pop
lods
lock
xchg
xor
mov
xchg
out
test
stc
cmp
test
sub
add
into
dec
add
inc
sti
sub
fdivs
add
cmc
andl
cmc
or
jne
ja
arpl
ds
aaa
cmpsl
insb
aaa
dec
adc
fistl
push
je
mov
stos
xor
stc
sub
outsl
or
iret
and
data16
clc
adc
pop
vpsubq
addl
pop
cmp
fcoml
insb
and
pop
rclb
test
lds
push
out
imul
xor
cltd
jne
adc
repz
or
sbb
addr16
inc
dec
adc
daa
test
dec
mov
mov
xchg
xchg
rol
jno
add
and
ret
sub
in
jge
pop
xor
and
xchg
jbe
cmp
test
jge
add
nop
mov
xor
jl
inc
shl
lret
cwtl
dec
add
in
sbb
mov
mov
cmpsb
inc
push
mov
data16
incb
add
jp
mov
add
loopne
cwtl
xchg
add
leave
rcl
nop
test
push
lahf
sarl
mov
jns
fwait
xchg
sbb
push
inc
pop
popa
pop
test
mov
repz
adc
add
pop
loope
aas
lret
sbb
test
jnp
adc
mov
and
decb
negb
adcl
gs
and
inc
pop
repz
sbb
mov
stc
cmp
js
std
fs
decb
mov
sbb
cmp
repz
stos
shl
nop
pop
icebp
lea
and
inc
out
ds
and
incb
inc
add
or
mov
mov
sbb
shl
mov
mov
test
pop
into
in
test
push
stos
pop
push
lahf
adc
sub
jne
in
and
jns
pop
mov
dec
pop
jb
incb
and
sbb
mov
xor
ret
js
fldl
xchg
push
mov
push
cwtl
pop
adc
cmp
push
jno
test
aad
arpl
movq
dec
jp
xchg
adc
adc
in
add
addb
mov
and
notb
pop
pop
popf
cmp
adc
popf
jo
jb
sbb
mov
leave
add
pop
js
push
xchg
test
cmp
mov
popf
jns
jb
mov
cli
f2xm1
push
fists
shlb
or
xor
mov
enter
add
push
les
movsb
and
cmp
jno
sbb
jle
sub
sbb
xor
daa
fs
imul
add
adcb
sbb
ds
aaa
in
js
sbb
out
xor
xor
inc
test
jle
jne
js
in
out
add
arpl
dec
xor
jne
jl
cld
cld
out
adc
sub
push
lods
out
cld
leave
mov
subl
jle
stos
cltd
pusha
incb
jb
sbb
fbld
js
push
pop
mov
in
mov
jge
add
add
jnp
mov
jne
cld
or
inc
std
adc
push
jo
xchg
xor
std
stos
sbb
leave
fwait
pop
push
call
fidivl
leave
xor
push
in
mov
data16
out
pop
dec
add
jnp
rorb
push
mov
pop
jl
in
mov
inc
inc
aad
cmp
push
incb
add
dec
xchg
xchg
adc
imul
adc
out
mov
test
cs
sub
mov
mov
adc
add
sub
dec
popf
dec
jno
leave
imul
addr16
xchg
jnp
cmp
scas
or
mov
push
fstp
repz
incb
add
sbbl
mov
dec
pushf
push
jl
arpl
cmp
push
dec
lahf
andl
test
mov
mov
scas
cltd
add
mov
xchg
jnp
mov
xchg
lahf
add
mov
and
sub
cmp
cmpsl
subl
push
push
add
pop
out
inc
add
xlat
inc
add
fnsave
xchg
dec
addb
mov
inc
add
mov
mov
arpl
push
lods
lret
clc
in
sbb
add
cs
repz
adc
inc
xor
push
mov
push
clc
je
lahf
xlat
inc
add
jnp
add
mov
cltd
cli
pop
jo
imul
icebp
push
daa
jbe
dec
push
or
add
and
loopne
fcomps
addr16
jne
mov
stc
ret
out
dec
inc
sbb
cs
div
jle
mull
out
cltd
arpl
pop
imul
mov
jb
shr
movsb
jbe
scas
aad
mov
and
imul
push
repnz
int
inc
add
rcrl
add
loopne
jnp
and
mov
stos
jl
rcl
aad
xchg
pop
sbb
cli
fists
pop
movsl
push
movsl
inc
pop
inc
add
push
push
push
xchg
mov
in
fs
xor
ret
adc
mov
add
aad
push
add
xor
popa
add
add
mov
lea
arpl
xchg
insl
xlat
push
decb
cmpsl
adc
mov
hlt
sbb
pop
ret
out
dec
fstpl
enter
push
dec
pop
push
nop
out
mov
ds
rorl
je
pusha
adc
push
and
shll
jg
xlat
enter
add
jae
add
inc
jp
mov
rclb
imul
adc
shll
vcvttps2dq
incb
hlt
lods
outsl
cmp
lea
movsb
mov
xchg
mov
dec
jge
test
add
out
and
incb
nop
out
ljmp
insb
add
mov
sub
and
jne
loop
fs
js
sub
add
shrb
add
mov
jo
lds
call
cltd
roll
jnp
ror
addl
jns
cmp
mov
adc
adc
imull
add
xchg
repz
mov
xor
dec
mov
xchg
cmp
ja
mov
fcoms
sbb
push
stos
mov
and
cmp
push
loope
cmp
insb
decb
and
jno
xor
add
inc
es
decb
incb
xchg
pushf
insl
jo
add
or
in
aad
xor
loop
lods
ds
push
xor
xchg
lds
adc
fildl
loop
add
or
insl
test
decb
inc
imulb
sahf
jne
xor
arpl
sbb
jle
xchg
pop
in
ret
push
leave
rorb
sbb
push
movsl
add
push
pop
adc
inc
push
lock
fs
mov
dec
mov
inc
add
dec
jl
inc
negb
pop
out
insl
mov
and
incb
scas
or
jge
cmp
pop
xor
add
mov
mov
sub
mov
push
jmp
mov
repz
testb
stos
mov
cmc
cmpsl
jnp
pop
loope
push
lea
out
inc
loopne
jle
add
notb
or
movsl
mov
dec
add
inc
push
mov
inc
add
mov
outsl
shll
into
or
ficoml
jcxz
add
rcrl
dec
add
lcall
add
aam
jp
popa
testl
cmp
cwtl
cmp
cmp
sbb
decb
incb
and
sub
incb
adc
push
fmull
mov
mov
jmp
in
int3
push
push
fldt
incb
incb
add
jp
jb
xchg
fwait
gs
jb
push
jge
jl
loop
movsl
movsl
jle
add
dec
data16
loop
push
mov
or
sti
test
add
mov
cmp
jnp
xchg
cmpsl
push
cmpsb
mov
mov
and
addr16
fcompl
enter
push
cmp
int3
pop
pop
push
out
inc
add
movl
sbb
test
lcall
xchg
scas
add
imul
cmp
add
inc
dec
pop
cmp
decb
cmpsb
sub
in
adc
fcomp
and
incb
inc
mov
scas
mov
push
std
xor
dec
add
mov
add
ss
sbb
xchg
mov
push
decb
aam
add
jg
cmpsb
sbb
inc
or
loop
cmpsb
ja
cwtl
insl
loop
fs
push
pop
mov
add
cmp
mov
data16
mov
xchg
fstpt
or
mov
incb
add
pushf
dec
mov
sti
sti
fst
and
std
mov
add
jmp
sub
fs
out
ja
add
shll
sub
mov
movsl
insl
loopne
ja
jnp
push
imul
iret
in
fwait
cmp
decb
or
lahf
mov
fdivrs
push
aam
insl
push
inc
sub
inc
add
cld
adc
fs
jle
mov
cwtl
out
sbb
add
xor
in
ret
and
and
imulb
popa
cs
sbb
and
std
hlt
add
out
int
lret
ss
sti
fidivrl
addb
insl
es
incb
push
or
inc
aad
call
xchg
ret
add
in
mov
jmp
int3
adc
cmp
mov
mov
mov
mov
fsub
add
out
and
cwtl
fcmovnbe
mov
add
sbb
jmp
jns
test
fcmovu
es
push
dec
icebp
daa
jbe
loope
imul
lds
adc
idivl
mov
sub
sbb
lock
test
into
gs
fbstp
xlat
pop
sbb
and
decb
fistpl
stos
add
in
and
push
loop
lret
jp
lea
mov
ficoms
addl
call
adc
ret
or
mov
outsb
add
xchg
or
incb
decb
adc
and
stc
pop
test
ja
pushf
fs
incb
addr16
insb
decb
movsl
pop
inc
add
jle
adc
loopne
pop
and
decb
lcall
xchg
aam
pop
xchg
repz
decb
fstpl
adc
pop
ja
push
add
and
out
cs
and
sbb
add
test
or
jg
rolb
sub
sub
mov
xor
jns
popf
insl
insb
sbb
or
jnp
mov
pop
rorb
in
ficoms
jecxz
inc
daa
pop
cmp
fcmovb
add
and
push
pop
xorl
jbe
aam
daa
out
sub
decb
int3
in
add
pop
xor
mov
push
inc
jne
enter
loopne
aam
mov
stos
addr16
cs
incb
sub
lcall
jg
adc
loop
and
pop
test
je
popf
pop
mov
addl
adc
scas
out
mov
incb
aaa
and
sub
jle
adc
and
inc
enter
iret
mov
ret
inc
mov
je
test
mov
lock
shll
icebp
mov
mov
movb
jmp
mov
ret
add
in
xchg
das
sub
decb
push
cld
mov
xchg
lcall
push
or
aas
and
stos
cmp
xchg
mov
pop
sbb
loop
mov
sahf
cmpl
mov
leave
loop
sbb
addr16
jno
or
jno
and
dec
cmpsl
jmp
incb
xchg
xlat
xor
aaa
lods
andl
mov
imul
lds
lods
adc
je
movl
aaa
ror
iret
pop
shll
and
push
cltd
and
push
ret
movsb
nop
sub
incb
sahf
inc
add
inc
push
push
jg
and
ds
push
aas
and
jae
xor
into
sbb
mov
loope
jbe
out
leave
inc
or
push
lods
mov
mov
fs
mov
in
test
mov
jb
outsb
cmp
dec
push
lea
push
jmp
mov
xchg
lret
add
jae
mov
sbb
mov
in
cld
mov
xor
sbb
cli
push
mov
arpl
mov
or
mov
dec
add
repz
mov
cmp
xchg
mov
jmp
jl
add
dec
adc
mov
mov
inc
add
mov
aaa
dec
add
inc
mov
mov
jge
fwait
daa
scas
push
xchg
add
popa
negl
cltd
je
imul
ret
pop
mov
push
sarb
out
mov
and
filds
lret
sub
dec
insb
add
cli
push
dec
inc
fdivr
jmp
sbb
jo
cmp
gs
cltd
out
lock
incb
xor
xchg
add
jo
test
mov
insb
add
stos
pop
mov
pop
shrb
div
adc
iret
cmp
jbe
nop
inc
add
push
nop
xor
push
mov
adc
push
add
cmc
in
mov
mov
pop
daa
add
jb
mov
push
mov
aaa
jne
inc
mov
rcrb
mov
jecxz
inc
sti
xchg
sti
and
sbb
xor
inc
adc
cli
xor
xrelease
sbb
icebp
and
and
cmc
out
mov
dec
fmull
sbb
xorb
iret
or
loope
lods
dec
xchg
insl
push
icebp
leave
shrb
xlat
push
ja
inc
add
mov
fimuls
sub
mov
add
add
decb
psubb
and
fdivs
jb
jae
aam
shl
jbe
sbb
and
cwtl
iret
repnz
loope
and
test
xchg
mov
cmpsl
or
push
xchg
jbe
add
lcall
inc
popa
sub
xchg
jle
movsb
mov
cmpsb
xor
cld
out
sbb
clc
mov
lods
stos
jo
pop
inc
ljmp
insb
add
inc
add
ss
add
shrb
add
xor
adc
and
and
pusha
add
testb
int
out
aad
loope
push
incb
icebp
loopne
cmp
std
aas
xchg
mov
pop
sbb
aam
jecxz
test
adcl
cmp
les
sahf
sub
mov
pusha
add
push
push
sbbb
std
mov
mov
clc
cs
xor
mov
push
test
xchg
lds
jno
sub
test
jae
push
inc
add
scas
mov
out
xlat
xchg
adc
adc
sub
incb
push
sub
std
mov
ficompl
add
incb
loopne
jg
and
inc
loope
and
sbb
cmp
ja
mov
adc
mov
daa
sbb
call
in
xor
mov
mull
call
xor
aas
jo
fwait
xor
incb
aaa
aad
add
xor
pop
mov
mov
mov
mov
mov
in
mov
xor
dec
mov
shlb
roll
jl
mov
pushf
subb
lea
lea
mov
scas
and
js
dec
add
add
jg
out
popf
sbb
xor
mov
inc
add
push
add
xchg
mov
xor
nop
pop
pop
fidivrs
inc
cmp
incb
jnp
dec
xchg
add
aas
jecxz
add
pop
sub
leave
addr16
add
mov
xchg
mov
sbb
jle
add
inc
mov
xchg
aaa
enter
hlt
mov
ja
shr
push
add
inc
divl
mov
cmp
cli
js
push
mov
into
sarb
gs
add
pusha
push
add
inc
fimuls
loop
push
mov
pusha
add
outsb
add
jp
add
jp
scas
cmp
add
jle
push
mov
mov
push
sbb
pusha
adc
sbb
popa
dec
adc
xor
sbb
sbb
inc
inc
push
dec
add
mov
rol
aaa
inc
mov
rdpmc
inc
add
dec
add
push
loopne
or
decb
add
and
cmp
jecxz
xor
cmc
xchg
shlb
in
add
xchg
mov
aaa
nop
out
mov
out
sub
pop
loopne
decb
jbe
pop
mov
fstpt
je
cs
dec
stos
inc
movsb
xchg
push
ja
add
fldenv
fs
cwtl
arpl
call
repz
ds
cmpsl
fs
mov
call
mov
shrl
daa
push
pop
push
imul
inc
ss
inc
jne
fisttpl
xchg
jl
hlt
pop
orl
stc
adc
incb
jae
push
cwtl
sahf
pop
sub
push
inc
pop
mov
cs
adc
cmpsl
push
sbb
dec
mov
rorb
aam
sbb
mov
cmp
push
fiadds
sub
dec
add
lcall
jle
sub
incb
pxor
int3
xchg
pop
movsb
fidivl
mov
stos
cs
lock
ja
cs
mov
xchg
or
outsl
lds
xlat
push
je
dec
pop
shll
decb
lock
sub
dec
and
pop
test
and
mov
cmp
add
insl
fbld
mov
sub
xchg
adc
cmpsb
and
decb
into
fbld
cmpsb
add
pop
nop
popf
pop
fcomi
xor
jae
fidivl
xchg
sahf
pop
in
add
mov
or
jo
jno
add
push
pop
cmp
sub
aad
lock
stos
test
into
add
outsb
add
xchg
or
incb
add
mov
scas
xlat
lock
out
xchg
daa
call
sbb
cmpsb
cmp
xchg
jb
dec
leave
inc
pop
push
sbb
call
aaa
fidivl
push
sub
imul
iret
fwait
rdtsc
stc
rcrl
xchg
dec
add
cmpsl
dec
hlt
addb
cmp
xchg
dec
dec
jno
add
pop
les
sti
arpl
push
xchg
cld
xor
mov
push
dec
incb
xchg
sti
mov
rclb
cmpsb
or
fcomi
cmpl
add
andl
incb
lret
rorb
push
mov
ret
fsubrs
add
mov
lds
mov
xchg
add
dec
sahf
jbe
popa
mov
add
inc
or
mov
cmp
rcr
stos
adc
ljmp
out
and
loope
ljmp
icebp
aam
fisubl
add
mov
add
and
aas
test
ljmp
sbb
add
sbb
push
inc
pop
loope
cwtl
pop
push
popf
daa
pop
xchg
insl
cmp
and
jl
outsl
inc
add
mov
lcall
push
cmpl
lods
sbb
test
incb
outsb
add
dec
add
cmpsl
cli
aad
std
loop
out
scas
mov
xchg
adc
and
bound
pop
jp
lock
sub
and
and
jp
outsl
xchg
pop
imul
iret
daa
mov
lahf
pop
and
sbb
add
cmp
pop
adc
popf
sbb
lret
fwait
clc
std
sub
and
pop
jbe
cwtl
push
add
sub
incb
xchg
adc
es
jo
idivb
es
adc
push
sbb
and
ljmp
push
cmpsb
mov
dec
mov
mov
dec
mov
fisttpll
stc
fs
mov
cli
inc
mov
dec
dec
repz
pop
inc
push
lret
inc
flds
dec
sbb
add
push
aam
movsl
ds
divl
in
jns
add
jl
ja
clc
loope
out
imul
adc
movsl
ljmp
mov
fiaddl
fidivrs
or
adc
add
and
incb
int
and
leave
push
dec
js
daa
xor
test
xor
ja
pop
mov
xor
lret
jns
xchg
call
aaa
xchg
scas
sbb
stos
push
fwait
dec
inc
imul
mov
jecxz
pop
sbb
or
fnsave
adc
xor
fisubl
mov
pop
popf
in
sub
incb
incb
cli
test
or
inc
jo
dec
mov
push
inc
add
and
inc
dec
mov
add
add
adc
push
orb
mov
out
push
loopne
add
cmp
test
insl
push
jp
add
push
out
in
sbbl
xor
fsub
cmp
mov
jno
cmpsb
rcrl
lds
shll
js
pushf
dec
sub
lock
decb
hlt
inc
insb
add
in
rsqrtps
andl
sub
ss
ds
pop
iret
cli
gs
jne
test
gs
addr16
xlat
or
cmpsb
jecxz
xchg
xchg
cmp
icebp
push
enter
push
addb
pop
sahf
out
pop
fwait
inc
fs
xchg
mov
xlat
outsb
add
mov
outsl
pop
cmp
scas
shl
lds
xor
xchg
scas
inc
loop
sbb
cs
rorl
mov
pop
sbb
jecxz
test
stos
mov
loop
add
fldt
sub
rcrl
sti
adc
jnp
jb
out
ja
negl
adc
sbb
decb
mov
and
out
enter
sub
insb
cltd
sbb
data16
cmp
sbbl
incb
in
inc
pop
sub
arpl
cli
sbb
cmpb
cltd
cmp
dec
inc
add
mov
jo
jns
lods
hlt
cmp
push
add
inc
out
int3
mov
dec
cmpsb
clc
sbb
icebp
jbe
shlb
imul
call
mov
negl
mov
add
out
das
sbb
push
xchg
sbb
push
push
xor
mov
sti
rclb
mov
clc
adc
popf
xor
mov
xchg
adc
dec
mov
jo
add
lea
out
and
mov
mov
scas
adc
in
xchg
ja
pop
xor
lds
cld
arpl
xchg
aad
dec
popa
scas
aas
mov
stos
test
out
mov
push
add
cs
sbb
decb
mov
pushf
mov
nop
leave
jae
fistps
or
cmpsb
jns
mov
cmpb
xor
pop
leave
cmpsl
dec
fs
push
scas
mov
cltd
xor
mov
pop
pop
mov
pop
imul
mov
lods
ljmp
into
addr16
inc
add
inc
xchg
leave
sarb
test
push
add
pop
ja
loop
mov
pop
rorl
xchg
inc
push
inc
add
sbb
cld
push
jl
scas
js
out
in
int
dec
adc
add
xor
loop
push
or
das
div
nop
insb
xchg
push
jle
inc
jb
mov
rol
sbbl
sarl
aad
inc
jle
int3
sub
pusha
add
inc
clc
mov
sub
add
decb
push
mov
mov
push
clc
mov
and
insl
xor
jecxz
cmpsl
sti
rolb
sbb
cli
std
shl
insb
inc
jge
jae
shr
out
fisubs
mov
sub
xchg
mov
decb
repz
mov
lock
sbb
pop
enter
das
xor
add
xor
cltd
into
pop
mov
add
fimull
incb
mov
or
adc
xchg
lret
cmp
sbb
xor
push
add
repnz
mov
fwait
in
add
mov
scas
add
sub
push
cli
rorl
incb
mov
mov
incb
add
push
icebp
xor
outsb
add
jo
adc
mov
mov
rorb
decb
sbb
jbe
fwait
push
cmp
pop
mov
cmp
mov
mov
mov
clc
mov
stos
pushf
xchg
ljmp
call
pop
sahf
push
pop
stos
mov
add
dec
fs
lret
mov
add
das
jp
jge
mov
mov
mov
shrl
sbb
inc
popf
adc
xchg
sub
mov
loopne
sbb
test
add
ror
mov
and
incb
add
and
decb
add
loope
sar
mov
ljmp
sbb
fdivr
movsb
cmp
ss
jb
mov
and
push
sub
add
pcmpeqw
adc
or
xlat
sbb
fincstp
cmc
adc
dec
fmuls
fcoml
adc
cmp
add
mov
pop
dec
sub
into
gs
dec
mov
mov
incb
incl
push
out
popf
je
jae
out
sbb
cmpsl
add
pop
imul
add
xchg
push
push
xor
xor
and
mov
lahf
xor
ss
popf
mov
sub
push
iret
jmp
xor
mov
bound
decb
inc
test
and
incb
push
add
hlt
popa
sbb
mov
mov
jge
mov
in
inc
add
mov
imul
rorb
ret
icebp
shll
shlb
out
les
cmpb
adc
add
mov
aad
in
stc
je
sar
imul
push
cmp
cld
xchg
dec
mov
xor
xchg
dec
sti
es
jl
fidivrl
lds
scas
stc
imul
ljmp
adc
cmp
imul
pop
adc
add
subl
push
loopne
xchg
pop
push
add
push
adc
mulb
add
ja
cmpsb
es
mov
xchg
jo
ljmp
out
into
aad
add
cld
stos
inc
add
pop
pop
outsl
or
test
add
scas
inc
add
sbb
std
adc
pusha
ss
mov
add
outsb
add
in
data16
imul
es
decb
mov
adc
lods
test
xchg
dec
add
push
pop
test
jae
xchg
ror
dec
popa
rclb
mov
pop
or
lock
cmp
mov
mov
sbb
xchg
arpl
push
jbe
and
fwait
lea
aas
jg
lcall
xor
xor
in
jg
add
mov
ret
in
fildll
and
dec
jae
push
mov
gs
addl
mov
mov
es
decl
mov
shlb
out
pop
sub
push
call
pop
cmp
insl
fwait
xor
fsts
sub
lock
push
mul
add
bound
push
xchg
pusha
add
ficoms
ja
pop
inc
incb
add
iret
rcrl
dec
and
fcmovnb
xchg
pop
pop
xchg
sahf
adc
add
pop
aad
test
cmp
add
cmc
push
aad
lds
mov
mov
jnp
cmc
mov
pusha
add
cmc
dec
cld
mov
fsts
xchg
shlb
pop
sti
jp
cmp
ljmp
mov
adc
push
cmc
add
jecxz
and
mov
lds
xchg
pop
xor
dec
add
add
mov
ja
lds
roll
jmp
xchg
mov
inc
aad
in
dec
add
arpl
adc
add
pop
iret
sub
decb
decb
add
xchg
std
push
loopne
es
stos
pusha
add
inc
add
cs
jb
insb
add
xchg
mov
adc
xor
shl
cwtl
jo
adc
cs
loope
mov
cmp
xchg
popf
dec
add
pusha
out
add
decb
mulb
push
or
mov
iret
stos
or
sub
xor
xchg
fcompl
xor
jns
fnstcw
pop
cmp
addr16
lods
cmp
jp
imul
movsb
out
test
adc
or
xor
js
mov
add
mov
fwait
xchg
cmp
inc
add
mov
mov
icebp
cs
pushf
cmpsb
pusha
add
rorb
popa
pusha
movsl
test
jl
push
xor
xor
fcoml
movsb
push
sbb
decl
dec
xchg
cmc
ds
fnstenv
mov
mov
stos
adc
mov
bnd
mov
add
pop
jno
inc
add
xchg
push
xchg
push
incb
into
adc
add
and
push
push
out
shll
pop
cmpsl
jae
add
jne
add
add
jae
jecxz
sub
js
push
push
add
lds
in
and
cs
insl
sub
decb
icebp
addr16
jno
xchg
xor
decb
add
fcoml
fstl
data16
push
outsl
jno
add
adc
xor
adc
and
push
jp
add
ja
gs
imul
clc
movsb
arpl
cld
add
and
aaa
leave
aas
jp
sub
xor
call
popa
adc
sub
fisttpl
adc
pushf
adc
lahf
mov
jno
sbb
mov
jmp
mov
scas
sahf
xchg
sbb
add
ret
loopne
inc
jo
fists
dec
add
inc
arpl
pop
mov
das
leave
scas
data16
pop
or
out
add
push
dec
add
xchg
hlt
jae
movsl
pop
bnd
inc
cmp
leave
adc
mov
ds
fs
out
cltd
out
push
test
push
mov
incb
mov
or
std
int
adc
dec
add
push
dec
inc
mov
incb
xor
mov
test
fldl
add
ss
jmp
cwtl
lret
jp
push
mov
sbb
mov
xchg
jmp
dec
fs
mov
xchg
add
sub
sbb
push
add
sub
stc
pop
cwtl
mov
test
cmpsl
xor
lcall
incb
lods
jno
add
jge
aam
adc
add
test
fildl
incb
add
sub
gs
dec
push
pop
push
add
fisubrs
or
jge
jne
mov
lret
addb
daa
fdivrl
xchg
mov
xchg
cmp
xchg
imul
adc
pop
sub
loopne
cmp
cld
mov
int3
gs
aam
stos
fisttps
addr16
mov
mov
repz
sub
incb
andl
decb
fwait
sti
scas
inc
int
add
repnz
sbb
int
hlt
stos
rorb
xchg
jg
shrb
gs
sti
int3
insl
sub
add
pop
cwtl
mov
ljmp
fdivl
add
cltd
add
push
or
incb
scas
xor
enter
es
pushf
sbb
test
sbb
add
push
jmp
pop
dec
add
or
loopne
xchg
fs
cs
decb
jecxz
sub
inc
decb
adc
subl
in
aam
jns
das
aaa
insb
add
and
jne
adc
decb
decb
imul
loop
cmp
movsl
test
ja
adc
mov
add
cmp
xor
hlt
insl
jae
add
out
arpl
xchg
pushf
cmpsl
movsb
mov
add
add
subl
mov
cmpsl
cmp
push
xor
test
add
pop
xlat
ret
imul
mov
fistpl
jns
push
sahf
sahf
mov
add
sbb
push
jmp
jecxz
or
mov
loopne
jo
cwtl
imul
popf
or
cmp
lods
mov
and
insb
add
cld
pusha
add
repnz
pop
mov
sarl
mov
pop
icebp
mov
fildl
add
pop
pop
fsubl
mov
push
and
fisttpll
imul
add
push
jge
insl
in
loopne
push
out
lcall
cmp
jecxz
sub
mov
gs
mov
add
cmp
sbb
cmc
in
aam
loopne
aas
adc
das
loopne
icebp
pop
lock
test
outsl
push
cmp
mov
repz
fisttpll
add
dec
outsl
pop
xor
push
popf
out
or
push
add
out
push
jnp
loopne
lods
loop
movsb
add
dec
cmp
fsubrs
icebp
arpl
mov
into
cwtl
add
push
push
incb
dec
jle
outsb
add
add
add
inc
loopne
lcall
adc
icebp
repz
rcrl
test
mov
add
pop
sbb
cwtl
in
xlat
mov
and
adc
push
jl
stos
cmpsb
pop
cltd
or
incb
dec
out
xchg
mov
pop
inc
add
sbb
cmpsl
cmp
mov
inc
gs
lcall
xchg
aam
adc
daa
mov
sbb
mov
adc
xchg
out
dec
cmp
pop
iret
and
xchg
or
decb
jge
in
mov
fiaddl
cmp
sub
decb
arpl
nop
hlt
xor
sub
xchg
push
inc
push
push
xor
repz
ret
scas
ja
mov
pop
jo
xor
add
cmpsl
xchg
jae
pop
nop
stos
xchg
decl
add
mull
add
fucom
xor
mov
add
addr16
mov
push
das
and
jge
int
clc
dec
add
cs
into
push
movsb
adc
sbb
mov
out
sbb
ja
nopl
mov
clc
mov
not
sysret
stc
cmp
cs
push
fs
call
je
mov
inc
hlt
popa
mov
xchg
lret
inc
add
and
jecxz
icebp
or
dec
test
and
fcoml
cli
sub
dec
imul
stos
adc
fbld
clc
int
ja
jns
xlat
push
jns
hlt
int
decb
pop
jmp
fadd
divl
jl
xor
sbb
incb
add
scas
es
in
stos
cmpsb
in
mov
aam
cli
lods
js
dec
lds
add
imul
stos
loope
mov
add
jb
lock
decb
ljmp
and
hlt
dec
jo
rcr
adc
add
mov
mov
int3
dec
add
push
sbb
add
mov
pop
and
mov
scas
mov
pop
and
cld
mov
test
rorl
lahf
pushf
jmp
add
aad
cmc
add
sub
repnz
call
sbb
mov
add
adcb
sbb
mov
cmp
push
cmp
shll
dec
arpl
cmp
nop
loop
add
lods
push
mov
test
pop
ss
ljmp
in
jns
cmova
mov
add
cmpsl
in
mov
add
sti
sub
incb
add
jge
dec
addr16
rorl
in
repz
les
mov
jo
jmp
rcl
icebp
sbb
add
shrb
inc
jnp
add
scas
sbb
cmp
ret
lret
inc
add
dec
incb
mov
aaa
jbe
in
inc
dec
sbb
jb
repnz
push
sar
ss
std
jo
nop
push
jno
xor
out
fwait
push
and
imul
sub
in
jns
iret
add
scas
xor
inc
decb
push
pop
dec
adc
cmpsb
pop
data16
xor
xchg
push
hlt
push
mov
add
push
mov
mov
cli
std
mov
inc
add
inc
nop
adc
loopne
cli
imul
cli
jge
mov
mov
lock
mov
add
fwait
xchg
cmpl
or
fwait
xor
and
aaa
icebp
dec
fdivrp
in
movsb
mov
add
add
loope
push
pop
in
fdivl
hlt
pop
es
xchg
iret
mov
cmp
lds
add
mov
sub
shll
sub
mov
pop
dec
cmc
adc
add
int
imul
leave
xchg
mov
repnz
cmpsl
jge
add
rcrb
stc
fisttpl
xchg
lret
lahf
stos
and
clc
les
push
push
xor
fbstp
cmp
jp
xchg
sbb
push
mov
or
movsb
fcoms
push
add
in
push
data16
decb
sub
aad
roll
lods
cltd
dec
add
sub
outsl
cmp
call
jp
push
inc
mov
and
mov
decb
add
inc
sub
cmc
loopne
stos
mov
dec
add
cmp
les
pop
cmp
add
aam
and
insl
xchg
mov
xor
sbb
pop
add
incb
cmp
fstpl
mov
xchg
js
add
sti
sbb
jbe
add
dec
mov
cmpsb
xchg
dec
sti
cs
test
divb
fcmovnb
and
addb
out
add
push
xor
subl
add
push
pop
mov
outsb
decb
lock
push
add
sbb
pop
insb
add
inc
sbb
add
mov
xchg
adc
mov
fcmove
xchg
sbb
testb
imul
addr16
enter
push
jge
scas
int
jge
add
jle
repz
cmp
xchg
cmpsb
mov
push
lret
mov
inc
loopne
adc
nop
cmp
and
decb
sbb
pop
frstor
popa
sub
mov
push
sbb
jno
pushf
xchg
adc
add
decb
push
jns
mov
ds
mov
rorb
dec
cmp
idiv
test
ret
or
jne
xchg
xchg
out
adc
adc
incb
xchg
jg
add
flds
add
pop
enter
xchg
mov
dec
cmp
daa
inc
add
js
sub
cmp
incb
adc
add
inc
daa
xchg
fists
cmp
into
loopne
popa
push
jo
int3
sbb
pop
out
mov
add
and
mov
add
fmuls
jbe
cmp
sub
test
dec
jg
adc
in
dec
push
popa
lahf
inc
out
or
fcmovu
aas
cmp
xor
incb
inc
pop
jg
cmp
sub
loop
jg
add
pop
scas
out
or
decb
xchg
and
adc
hlt
shrb
pop
or
and
adc
sahf
ret
push
incb
fldl
pop
clc
roll
and
sub
mov
sub
decb
add
mov
cmp
pop
push
stc
push
decb
es
dec
sbbb
jl
xlat
xchg
dec
and
mov
decb
pop
push
loop
fldl
cmpsb
push
add
cs
in
lods
mov
mov
jbe
add
cld
pop
inc
add
pop
sbb
pop
cmp
es
push
sub
mov
inc
inc
loopne
cmp
incb
add
js
xor
ss
dec
popf
mov
mov
scas
adc
or
movsb
push
mov
lcall
daa
xchg
cmp
sar
push
popa
mov
mov
xor
xor
movsb
ds
fsubp
popf
jp
mov
aaa
fisubs
movsb
mov
decb
xor
movsb
and
loop
push
add
data16
xor
sbb
jnp
out
xor
adc
lahf
imul
pop
xlat
cld
dec
add
pop
cmp
add
add
ret
inc
add
xchg
repnz
inc
add
leave
or
pop
pop
mov
or
mov
mov
mov
rcrb
into
pop
test
cmpsb
xor
add
pop
and
dec
push
jns
xor
aam
add
jle
sti
jge
mov
cmp
add
inc
pop
cmp
dec
and
xor
lea
cltd
xlat
pusha
add
out
lahf
out
int
enter
pushf
mov
decb
add
clc
pop
or
pop
xlat
loopne
xchg
repz
lea
push
add
push
hlt
inc
inc
clc
push
mov
repz
lds
decb
pop
js
adc
pop
test
jnp
fstps
ret
jecxz
shlb
adc
or
add
jb
push
mov
movl
cmp
jno
or
incb
inc
mov
add
dec
test
pusha
adc
pop
adc
incb
loop
xor
pop
mov
mov
add
add
sbb
pop
mov
jae
sbb
add
or
mov
xchg
mov
sar
insb
dec
fbld
inc
add
std
sub
movsb
xor
aad
add
es
jns
dec
neg
cmp
ja
add
push
rcr
add
cmp
sbbb
xchg
out
and
stos
dec
cmpsl
ja
fdivl
pop
mov
mov
inc
incb
add
adc
sbb
out
xchg
pushf
mov
divb
shl
cmpsl
adc
mov
insl
outsb
add
daa
lds
incb
lret
push
push
into
testl
pop
out
jp
adc
jl
enter
pop
ffreep
mov
gs
and
mov
add
mov
jne
test
jo
push
dec
lea
mov
push
push
sub
incb
push
test
lret
or
xchg
jp
aas
insl
ja
dec
cmp
add
and
lcall
and
xchg
push
cmp
scas
xor
push
fisttpl
add
fbstp
pop
int
mov
add
pop
shrb
and
nop
dec
add
fcmovnu
cmp
movsb
cs
adc
pop
cmp
arpl
aam
outsl
in
mov
adc
fistl
jbe
je
pop
xorl
inc
pusha
fstl
into
test
add
inc
dec
add
test
loope
push
popa
stos
fcmovbe
xchg
jae
add
pop
sbb
mov
lahf
xor
add
scas
mov
jno
push
push
xchg
out
jmp
add
int3
out
ret
pushf
ret
cmp
lret
mov
jmp
pop
push
leave
inc
add
gs
adc
cltd
ljmp
pushf
stc
push
aaa
jge
add
ds
pusha
sbb
add
outsl
cmc
je
dec
add
add
add
incb
sub
add
sbb
dec
inc
dec
decb
test
and
push
add
add
sub
jl
add
jmp
xchg
or
adc
or
cld
inc
lea
mov
fneni(8087
les
fdecstp
in
std
or
add
sahf
pushf
ret
testb
pop
sbb
decb
and
shr
inc
dec
ficomps
sbb
ljmp
mov
shll
add
xchg
out
xchg
sub
lea
xor
mov
test
dec
jp
cvtps2pi
ljmp
incb
pop
ss
xchg
test
add
mov
lock
adc
jp,pt
ds
pop
add
ret
aaa
inc
aad
into
outsl
dec
mov
sub
add
add
cmpsl
xchg
or
add
add
pop
cs
jo
add
xchg
push
fs
incb
and
inc
fnstsw
dec
decb
ret
mov
or
ljmp
add
sub
cwtl
push
in
dec
add
jg
mov
add
pop
sub
enter
pop
fs
sahf
iret
push
jne
outsl
lds
add
cld
xor
dec
mov
push
clc
dec
decb
insb
push
in
fldenv
incb
fisttps
iret
in
or
pushf
outsb
adc
mov
scas
xor
mov
mov
ljmp
add
cmp
shll
xchg
xor
and
inc
inc
add
pop
clc
test
test
push
nop
ljmp
loop
mov
sub
incb
rcr
scas
pop
jecxz
cli
jae
push
push
insl
hlt
pop
js
outsb
sbb
stos
jp
pop
inc
add
sub
out
insl
xchg
xor
mov
dec
dec
add
cmp
loopne
shrb
pushf
nop
bound
insl
rorl
pop
adc
sahf
icebp
dec
add
sbb
xchg
subl
je
adc
and
cmp
sbb
xchg
sbb
push
js
mov
add
mov
xor
dec
hlt
pop
pop
rclb
sub
out
decb
adc
add
lock
scas
and
adc
inc
repnz
sbb
test
inc
scas
push
add
cwtl
test
or
mov
or
scas
jle
add
data16
and
popa
inc
add
xchg
icebp
scas
in
aaa
or
pop
test
xchg
push
jno
cmpsb
xor
add
adc
sbb
cmpl
rclb
mov
and
sbb
insb
add
data16
add
decb
decb
sarl
or
incb
roll
incb
mov
jmp
movsb
fists
lods
dec
push
sti
adc
push
pop
sbb
add
and
decb
rol
roll
stos
cs
lods
int
or
dec
pop
sahf
push
adc
pop
ret
aas
sahf
xchg
ret
mov
adc
and
inc
sbb
add
jo
pushf
pop
add
cmc
inc
add
call
insl
cmp
xchg
xchg
mov
xor
movsb
push
icebp
inc
add
mov
mov
adc
js
jmp
popf
lret
aad
lock
sbb
xor
add
mov
movsb
and
popa
data16
add
pop
push
or
test
icebp
cmp
or
addr16
jmp
lock
cwtl
pusha
data16
lcall
xor
icebp
xor
xlat
jbe
cmp
arpl
pop
arpl
clc
mov
mov
data16
lods
out
fstl
xchg
test
xchg
aad
push
lods
adc
outsb
cmpsl
sbb
call
sbb
adcb
into
lcall
pop
aas
dec
rcrb
fildl
jnp
sbb
int3
rcll
mov
sti
lock
ds
out
call
push
jecxz
mov
incb
and
and
incb
icebp
mov
mov
movsl
jbe
decb
or
nop
cmc
dec
add
das
xchg
sbb
xor
pop
fisubl
sbb
and
inc
les
dec
add
ret
push
in
mov
jne
dec
outsl
pushf
mov
sub
decb
insl
and
sbb
mov
insb
add
lods
popa
lret
inc
cmp
in
sbb
xor
pop
fcmovne
das
mov
out
repz
into
test
adc
notl
mov
mov
incb
rcrb
add
cli
into
mov
mov
dec
add
lret
lods
inc
sti
repnz
mov
jge
inc
jne
inc
decb
jl
fs
xor
into
fwait
outsb
add
sub
shl
movsb
in
shrl
cwtl
xor
incb
dec
ds
xor
mov
pop
shrl
lds
cs
loopne
decb
push
ja
out
adc
adc
dec
xor
sti
inc
add
ljmp
incb
outsb
decb
popf
or
ljmp
dec
add
mov
imul
scas
lcall
add
dec
cwtl
lcall
mulb
mov
notb
repz
add
mov
and
mov
jnp
sbb
js
jns
shrl
incb
add
lds
sub
add
xchg
decb
jg
cli
jge
add
mov
mov
xor
fildll
lret
add
sub
cmp
cli
aad
repz
repnz
add
sub
fmul
cwtl
dec
stos
xchg
mov
adcb
xchg
push
jecxz
add
test
jl
pop
mov
mov
mov
sub
fsts
cmpb
ds
daa
fidivl
testl
add
das
push
out
lcall
jbe
ds
mov
lcall
js
push
add
jne
dec
pop
int
add
sbb
out
movsl
jle
frstor
scas
jmp
jp
mov
orb
shrb
dec
xchg
mov
std
adc
hlt
sub
je
cld
out
lret
xchg
dec
ret
push
xchg
mov
xor
sbb
icebp
loope
mov
dec
add
cld
movsb
pop
add
in
fs
or
mov
call
cmpsl
std
mov
hlt
mov
sub
add
aaa
or
sbb
aas
jbe
push
cmp
ja
mov
pop
mov
andb
inc
pop
add
incb
lock
adc
fisttpll
cli
cmp
xchg
jg
mov
push
outsl
aam
popf
loope
icebp
jg
add
dec
inc
stc
or
mov
push
jbe
imul
jo
in
push
cmp
dec
add
lock
dec
test
jo
cmp
insb
mov
add
or
decb
jbe
nop
dec
add
push
cli
test
cmp
push
dec
push
rcll
mov
xor
or
add
nop
xchg
ljmp
sbb
push
add
repnz
push
popf
arpl
inc
sub
data16
sbb
mov
pop
scas
sbb
ret
andb
fisttps
cmpsl
in
push
sub
jecxz
lret
addr16
nop
jb
mov
lret
inc
pop
jp
xor
decb
add
and
add
xchg
sbb
mov
lahf
add
mov
xchg
cmpsb
enter
mov
jb
out
cmpsb
xchg
sbb
gs
pop
adcl
push
xchg
mov
mov
xchg
ficomps
out
sub
sti
imul
push
add
icebp
inc
add
pusha
test
insl
out
dec
lods
sarb
js
rcl
fwait
or
and
jecxz
imull
fdivrs
jnp
xor
incb
fucomi
aad
andl
ds
nop
mov
xor
inc
xchg
or
call
mov
push
orb
inc
mov
out
cmp
icebp
stos
sti
push
dec
add
dec
pop
or
push
lret
rorb
fisttps
ljmp
xor
xchg
cld
ret
add
in
mov
je
lods
cmpsl
es
xchg
outsl
cs
pop
mov
sbb
stc
and
xor
dec
push
mov
sbb
incb
nop
pushf
inc
add
dec
adc
jae
movsb
push
and
sbb
inc
repnz
subb
gs
and
jnp
push
mov
jae
inc
mov
mov
jge
loope
dec
mov
sub
push
je
fcmovbe
icebp
cli
add
incb
sub
mov
jno
popa
jle
sbb
decb
icebp
jns
sahf
fsubr
sub
aad
ds
xchg
jg
inc
add
into
push
push
or
dec
mov
incb
add
incb
fcoml
fucomip
pop
inc
cltd
iret
xchg
xor
xchg
arpl
push
negb
js
add
in
mov
nop
inc
decb
mov
dec
add
lcall
xchg
cli
push
jae
test
dec
cmpsb
repnz
movsb
jg
push
jns
and
loopne
pop
mov
stc
sbb
xchg
pop
dec
mov
xchg
insl
icebp
orb
pop
adc
xchg
pop
inc
xchg
lahf
mov
push
insl
call
push
mov
data16
jo
and
shl
sub
bnd
jae
xchg
sti
ficompl
xchg
cmp
jo
xchg
jg
add
insb
stos
rolb
xchg
add
inc
shlb
fs
in
adcb
mov
push
jle
movsb
lcall
add
xor
cli
jg
cmp
fmull
incb
mov
sar
lock
add
stos
popf
push
mov
movsb
fldenv
sahf
push
incb
push
lret
mov
pop
pop
pop
xor
aas
xchg
adc
xchg
jns
sub
in
push
sbb
test
idivl
adc
jae
ret
lret
enter
repnz
lret
repz
add
lock
mov
pop
clc
inc
scas
test
js
mov
sub
cmpsl
jne
dec
add
lods
xchg
pop
loope
add
dec
roll
mov
sbb
sub
imul
push
mov
xchg
sub
in
push
gs
mov
xor
sbb
ss
inc
sbb
cltd
fdivs
pop
call
shlb
das
sti
lock
sbb
cmp
xchg
mov
fiaddl
push
push
fisubs
mov
add
scas
popa
dec
jns
addr16
pop
and
cwtl
in
test
in
scas
sbb
nop
or
inc
decb
inc
add
dec
sub
jp
into
cld
mov
adc
arpl
cmc
pusha
add
imul
xchg
pop
dec
data16
mov
mov
mov
jb
fs
jne
and
je
addr16
sti
das
mov
in
rcpps
sbb
pop
jbe
dec
pop
inc
add
subl
dec
mov
jle
or
fists
mov
inc
or
fbstp
iret
mov
repnz
sar
xor
decb
add
stc
xor
jmp
dec
mov
out
sahf
nop
xor
incb
mov
movsb
testl
mull
shll
add
xchg
jp
sub
inc
cld
mov
add
data16
aam
dec
add
pop
test
rcr
mov
ret
loope
fs
lock
add
inc
xchg
cld
shlb
xor
shl
and
xchg
jge
clc
mov
repz
loope
cwtl
cmp
jns
popa
mov
inc
cmp
dec
cmp
add
outsb
add
in
bound
mov
pop
arpl
push
jg
mov
add
mov
rcll
incb
out
inc
push
dec
mov
jp
inc
mov
int3
lret
arpl
pop
ja
adc
mov
sbb
adc
fstpl
ret
ja
inc
xchg
push
inc
loopne
mov
add
lret
mov
adc
loope
dec
incb
cwtl
dec
sbb
divl
or
incb
gs
push
lds
fadds
sti
out
cltd
nop
sub
adc
sti
movsl
addl
sbb
lods
xorb
test
movsl
sub
pop
lret
mov
pop
cs
aam
notl
xchg
jp
ret
adc
sub
mov
in
std
sahf
ficomps
xchg
aas
aas
cmp
pop
mov
mov
decb
lahf
jle
mov
push
inc
clc
xchg
xchg
dec
decb
jo
inc
decb
inc
shll
add
movsl
push
sub
clc
adc
add
pop
or
loope
add
aad
outsl
mov
mov
adc
outsb
incb
das
lahf
rclb
add
gs
hlt
jo
lds
xor
mov
and
test
popf
adc
cmp
push
int
fmulp
loopne
adc
add
push
out
fadds
popf
or
mov
loop
cmpsl
dec
popf
out
xor
cltd
cmpsl
scas
ret
sti
insb
add
push
jo
pop
sub
xchg
xchg
jmp
into
int
repz
fwait
andl
add
add
aaa
repz
std
adc
and
sub
dec
jns
sub
push
out
ret
adc
jecxz
push
mov
sub
sbb
cmp
nop
adc
dec
add
orl
decb
cltd
int
xchg
arpl
mov
das
nop
mov
push
cmpb
cmp
popf
mov
push
push
fldpi
sub
adc
rcll
out
cld
mov
pop
xchg
pop
gs
push
ja
inc
xchg
sub
adc
inc
add
cmp
mov
incb
mov
sbb
cs
incb
mov
inc
test
fldcw
fimuls
xchg
sbb
testb
mov
mov
incb
xor
imul
cmp
xchg
arpl
add
xor
in
out
faddp
sub
mov
xor
pushf
or
pop
cmpsl
fistpl
dec
aam
push
xchg
js
xor
xchg
pop
scas
add
pushf
inc
add
in
adc
shl
inc
pop
or
div
sub
decb
fisubrs
das
adcl
clts
and
sbb
imul
and
sub
sahf
cmpsl
cmp
in
jl
arpl
sti
mov
out
pop
jne
jp
xchg
dec
add
xchg
lock
add
jo
add
or
nop
xlat
mov
decl
jbe
jo
and
lock
cld
xchg
fnstenv
mov
jns
decb
incb
fisttps
dec
xchg
rcrb
sahf
push
cli
adc
sub
std
inc
cmpsb
mov
add
cs
push
mov
ret
nop
scas
fnstsw
mov
inc
add
sub
mov
jge
jb
or
ror
loop
xlat
dec
jnp
movsl
push
leave
sub
lock
shlb
cmpsl
insb
clc
push
in
ficompl
adc
add
decb
and
sbb
scas
sti
imul
cmp
add
popa
pop
fiaddl
jns
mov
push
sbb
pop
jo
clc
push
add
cld
inc
add
scas
adc
pusha
add
lret
pop
push
sti
adc
jns
and
decb
adc
mov
cmp
stc
inc
xchg
mov
loopne
or
push
pop
cwtl
xchg
inc
cmp
call
in
outsb
adc
cmpsb
iret
adc
icebp
sahf
cmp
cmp
push
test
cmp
inc
bound
inc
push
mov
add
decb
scas
lcall
mov
or
pop
and
data16
mov
call
repnz
jmp
add
xor
std
lds
cld
ret
pop
mov
mov
xchg
dec
fimuls
scas
or
adcl
mov
hlt
inc
mov
notl
pop
out
mov
push
and
mov
out
mov
adc
push
xchg
and
mov
mov
andb
insb
add
test
push
ja
outsl
mov
iret
ss
call
xchg
shll
jl
mov
xor
stos
mov
lea
cmp
decb
inc
clc
jno
pusha
add
std
cmp
mov
jp
inc
add
pop
je
push
incb
xchg
or
xchg
outsb
sub
jge
xor
or
cwtl
xchg
mov
mov
add
or
lcall
xlat
add
sub
inc
subl
pop
sbb
dec
frstor
add
sub
dec
ret
sub
ja
cmp
decb
push
pop
hlt
push
fisubrl
decb
lock
sub
xlat
insb
add
lods
push
dec
stos
push
pop
outsb
add
xlat
icebp
sbb
push
mov
sahf
pop
cmp
add
push
or
fisttpll
decl
adcb
jl
movsl
push
ss
incb
pop
mov
test
decb
popa
jbe
lods
rorb
cmp
mov
or
cltd
mov
add
cs
sub
dec
movhps
pop
xchg
in
xlat
mov
inc
jl
pop
lds
decb
mov
inc
insb
add
mov
inc
sbb
stos
pop
fnstenv
and
sbb
jae
cwtl
cld
ret
mov
mov
stos
pushf
test
fs
incb
add
lods
call
push
sub
pop
test
adc
add
mov
into
popa
fwait
arpl
mov
add
iret
sbb
es
inc
sub
push
fs
mov
xor
ficompl
lods
xchg
mov
jno
fs
sub
pop
rcl
movsl
shll
mov
sbb
rol
popa
sbb
in
outsb
add
xchg
movsl
add
sahf
ja
sub
dec
out
ud0
je
sub
pop
xchg
push
lcall
mov
jns
push
fwait
lahf
ja
xor
adc
pushf
out
add
fsub
aaa
jmp
add
dec
or
decl
arpl
in
xor
aad
pop
dec
add
aam
inc
add
aas
sub
mov
xor
add
daa
out
sbb
inc
add
mov
mov
in
cmpsl
jp
imul
sub
push
jne
or
and
sub
and
sub
and
iret
push
arpl
sbb
xchg
cmp
add
cmp
int
jmp
movsl
cmp
push
push
adc
mov
cld
xchg
ret
repz
daa
rcll
add
mov
lcall
sahf
hlt
insl
add
pop
cmp
jnp
sbb
add
pop
or
push
or
sub
cli
push
push
mov
push
fdivr
sub
sub
enter
nop
adc
lahf
cmpsb
nop
and
in
adc
dec
add
sbb
adc
fisubl
icebp
push
adc
clc
cltd
cltd
mov
in
in
sbb
sbb
add
adc
sub
xor
ret
loope
lock
sbbl
decb
cmc
cmp
inc
sub
mov
inc
xchg
cmpsl
cmp
fidivl
pop
fiadds
mov
mov
loop
sbb
cli
push
mov
sti
xor
cli
jno
inc
mov
adc
sbb
push
sbb
jmp
lahf
iret
decb
add
or
in
lods
mov
push
imul
add
popf
jmp
mov
dec
cmp
gs
popf
pushf
pushf
push
or
dec
popf
test
mov
rol
inc
push
xor
flds
stos
fs
decb
dec
mov
fcos
andb
push
xor
jbe
movsl
mov
mov
pushf
inc
cltd
add
mov
add
sbb
pop
in
lds
jl
add
or
mov
push
ffree
ret
mov
cmp
popf
in
in
fnstenv
xor
decb
incb
add
repnz
cmp
jo
cwtl
mov
cli
orb
pop
mov
fwait
push
ja
jo
jbe
popf
call
or
xchg
jmp
xchg
adc
sbb
mov
inc
jp
rdmsr
mov
sub
popf
push
test
test
scas
scas
cmpsb
or
incb
fimuls
dec
push
add
lahf
pop
inc
into
xchg
loope
outsl
lret
aam
pusha
popa
mov
pop
movl
stos
lahf
test
add
test
fs
cmp
ljmp
inc
pop
xchg
cmp
push
insl
fdivrs
pop
pop
mov
and
add
mov
mov
test
aad
sub
lods
fdivp
mov
add
push
shll
cli
dec
add
out
mov
mov
add
out
out
adc
shrl
mov
add
pop
jae
add
add
orb
jmp
xorb
xchg
and
pop
dec
negl
sbb
mov
out
mov
inc
cwtl
jo
inc
adc
mov
mov
adc
fimuls
outsb
add
push
shl
loop
je
fildl
jno
call
xor
mov
pop
movb
mov
out
pop
inc
pop
dec
add
insb
add
adcb
subb
das
data16
jae
fadd
jne
mov
sbb
addl
push
jl
gs
fnstcw
arpl
jge
jmp
into
sbb
fcmovnb
pop
mov
dec
lahf
sarb
mov
add
add
xchg
jmp
dec
push
imul
or
jmp
icebp
test
shlb
imul
adc
xchg
pop
push
xlat
daa
inc
add
stos
mov
test
xrelease
scas
mov
push
repnz
add
lock
cwtl
fstl
scas
cmc
mov
push
jle
cmp
mov
mov
xor
pop
mov
shrb
push
fsubp
pop
nop
outsb
incb
fs
sahf
xchg
pop
cli
mov
and
hlt
pop
add
mov
cmc
inc
pop
adc
sbb
aad
pop
dec
daa
shlb
es
cmp
xchg
mov
jle
stos
pop
inc
aaa
mov
hlt
sub
rcrb
aaa
mov
lret
ja
pop
and
mov
pop
pop
mov
pop
es
xor
dec
xchg
scas
imul
push
push
or
repz
mov
mov
sub
ror
scas
pop
cmp
pop
mov
std
cmp
inc
sbb
outsl
add
jne
lock
dec
add
lods
push
xchg
popa
aaa
mulps
lret
add
cmpsb
call
mov
mov
dec
jbe
lret
rcr
sub
clc
mov
es
mov
xor
push
xor
stos
gs
mov
push
xor
add
inc
and
je
sub
jle
add
addb
je
and
decb
in
shr
rclb
add
loopne
psraw
insb
sub
mov
and
push
repz
dec
add
xchg
out
add
ja
add
loope
sbb
decb
dec
std
and
unpcklps
fcomip
lahf
aad
add
lock
xchg
fcomip
ds
mov
push
dec
add
mov
sub
push
fs
outsl
jge
adc
lret
mov
imul
pop
xor
call
mov
xlat
gs
ljmp
scas
cwtl
mov
jmp
fldt
dec
xchg
dec
pop
lret
jne
cwtl
data16
dec
inc
add
mov
into
fsubs
movsb
push
les
fnstsw
jecxz
pop
cs
test
aas
loop
nop
cltd
lcall
cwtl
xchg
data16
aam
sbb
xor
orb
out
add
loop
push
scas
mov
pop
leave
or
decb
add
les
mov
mov
jmp
lock
arpl
pop
cmp
mov
sub
ss
inc
jb
fidivl
mov
pop
ret
xchg
andl
bound
cmp
push
cmpsl
fbstp
or
inc
out
loop
jmp
insl
and
jne
and
inc
lods
out
fadds
cmp
xchg
fcomps
mov
aad
loope
pushf
mov
pop
mov
or
in
popa
jb
pusha
add
js
pop
leave
pop
movsb
jl
push
mov
shl
dec
fcomps
push
or
aad
sbb
or
jp
sahf
aaa
stos
iret
imul
mov
mov
pop
ror
test
sti
ret
roll
or
sub
mov
aad
push
in
std
out
scas
cmp
imul
jne
into
push
cli
xor
cltd
outsl
xchg
jle
cmc
insl
popl
pop
iret
inc
jge
imul
xchg
inc
push
out
in
jns
hlt
decl
dec
xchg
push
sub
inc
add
decb
add
push
decb
in
inc
add
js
cltd
scas
mull
and
sbb
xchg
or
add
cltd
sti
jp
ret
je
in
push
std
pop
mov
mov
test
adc
lods
jecxz
arpl
cli
adc
loopne
jo
add
call
decb
lret
dec
pop
ret
and
push
add
dec
icebp
rcl
loopne,pt
inc
jnp
incb
movsl
fucomip
shll
ljmp
add
inc
pop
fsts
add
sbb
movl
idivb
adcl
ficoml
pop
xchg
pop
shlb
mov
sbb
xchg
push
or
jle
inc
fs
decb
incb
inc
sub
adc
xchg
repnz
xchg
mov
out
les
add
bound
dec
xlat
jecxz
loop
decb
stc
sbb
xor
add
inc
add
inc
push
push
call
push
bound
adc
push
fstl
xchg
test
add
cmp
push
mov
jecxz
gs
inc
mov
push
decb
scas
adc
or
call
adc
nop
repz
std
inc
add
push
stos
cs
add
mov
or
daa
push
jg
or
jnp
push
xor
jae
push
int
jecxz
je
cmp
and
std
adc
fwait
mov
xlat
push
pusha
add
xor
mov
pop
cmp
pop
push
rcr
jae
dec
add
aaa
in
xor
pop
out
call
call
imul
cs
rclb
add
mov
add
mov
xchg
adc
in
pop
pop
jne
add
mov
or
add
repnz
into
add
imul
xor
pop
aas
div
orl
incb
dec
add
push
lret
jge
jge
pop
out
in
lret
and
jmp
inc
and
outsl
inc
aas
in
dec
add
ljmp
cmpsb
inc
jns
jbe
inc
add
aam
jbe
jge
stc
out
inc
fs
fstpt
mov
subl
cmp
jp
sub
call
adc
xchg
jae
std
sbb
jg
xchg
test
incb
call
mov
decb
xchg
mov
push
xchg
xchg
mov
add
insb
add
sti
sti
push
push
xchg
cld
mov
ljmp
mov
test
stc
movb
cmp
sub
sarl
mov
mov
dec
sbb
sbb
icebp
mov
dec
add
cs
imul
mov
push
cwtl
jnp
dec
add
cmpsb
into
xor
incb
add
arpl
cmp
out
call
dec
add
mov
or
push
movsl
mov
cltd
push
xchg
cmp
jne
outsb
add
cmc
lods
out
imul
ret
jecxz
je
push
test
dec
dec
shr
outsb
add
test
popf
and
not
inc
mov
popa
stos
lds
decb
decb
dec
scas
in
xor
sub
decb
add
xchg
jmp
stc
loopne
movl
inc
add
and
fsubs
add
pop
scas
inc
fwait
push
mov
inc
cmc
cmpsb
xchg
mov
add
inc
xchg
xor
push
pop
xchg
xchg
adc
fmul
les
and
jns
mov
rcl
outsb
add
adc
or
jecxz
jmp
adc
and
ja
xchg
out
add
push
xchg
add
xchg
lods
add
add
in
sub
rclb
inc
andb
lcall
add
push
jbe
add
dec
cmp
movsb
icebp
or
inc
sub
sub
test
mov
lcall
lea
cmp
mov
sub
xor
into
dec
xchg
mov
push
mov
push
faddl
add
aad
mov
add
sub
decb
imul
pop
xlat
popa
das
cmpsb
mov
rcrb
mov
ss
mov
add
popf
je
arpl
and
insl
sbb
test
mov
adc
lret
cmp
dec
sub
add
cmpb
fisttpll
or
cld
sbb
mov
fninit
pop
sub
sbb
jnp
add
xchg
xchg
cmpsb
std
or
shll
or
leave
push
hlt
or
mov
sub
jne
inc
push
incb
scas
cmp
xor
xchg
cmpl
fwait
push
add
dec
dec
inc
lock
enter
pop
ret
lahf
jno
jmp
loope
iret
sbb
push
iret
dec
add
dec
add
outsb
dec
and
incb
jp
xchg
sbb
gs
jbe
ret
test
xlat
ja
stos
xchg
xor
xor
mov
cmp
inc
push
orb
add
cli
fwait
xor
lcall
mov
mov
pop
scas
sub
push
sbb
or
jmp
xchg
std
inc
fcmovu
jmp
fldenv
and
or
push
scas
rorl
sti
and
fucom
adc
shl
lods
test
lahf
cmc
push
inc
fidivs
jae
movsb
cs
aaa
les
pop
cwtl
push
incb
add
push
movsl
jp
mov
push
xchg
jns
incb
sarl
fildl
test
jg
decb
or
sub
fiaddl
adc
and
scas
daa
xchg
nop
mov
or
into
incb
in
out
cmc
sbb
insl
mov
lock
femms
incb
cld
testb
loop
xchg
jno
or
sub
js
pop
add
xchg
sub
pop
dec
rclb
call
int
cld
mov
xorb
jmp
in
outsl
mov
dec
pop
mov
pushf
sub
outsb
incb
and
mov
jl
add
out
enter
sbb
scas
xchg
rclb
ljmp
pop
stc
cmp
cltd
jge
and
decb
inc
sbb
ffreep
adc
mov
icebp
xchg
shll
repnz
jmp
push
xor
jecxz
inc
decb
mov
add
pop
fdivrs
pop
das
adc
xchg
xchg
cmp
cmpb
inc
loopne
inc
add
sbb
mov
xchg
call
hlt
test
mov
ss
xor
lds
hlt
sub
pop
daa
mov
jg
sbb
add
push
or
mov
jg
mov
shrb
data16
xlat
mov
xchg
pop
mov
in
lcall
push
jb
push
xor
nop
pop
sbb
loope
jmp
sbb
and
test
out
jecxz
add
jg
sub
adc
adc
aas
rclb
xchg
or
jnp
addr16
add
pop
xchg
pop
sarb
add
enter
mov
mov
jp
popf
pop
and
ja
test
sbb
test
xchg
cmp
cmp
cld
out
sub
incb
add
stos
lret
or
add
push
sbb
pop
mov
loopne
add
xor
jecxz
nop
das
xor
outsb
add
icebp
add
dec
out
iret
and
in
inc
add
scas
ss
dec
xchg
sbb
shlb
sbb
aaa
jecxz
test
pop
mov
in
xchg
add
js
lock
xor
push
mov
in
call
fdivrs
pop
push
jle
cmpsb
out
push
mov
inc
add
fisubrl
incb
fsubr
leave
rorl
pop
mov
ds
outsb
cld
jge
add
jmp
sbb
mov
sbb
insb
add
xchg
fs
loop
add
xchg
jae
xor
mov
sti
jl
push
add
movntq
xlat
xor
xlat
addr16
les
lea
xor
mov
pop
xor
xchg
test
add
rcll
outsl
outsb
add
movb
decb
cmp
push
add
or
mov
movsb
aad
xchg
data16
mov
xchg
data16
lahf
lcall
jae
sbb
daa
aam
lahf
repz
mov
fdivs
mov
ljmp
lret
adc
cmp
push
incb
sti
cmp
aad
in
sar
test
popa
ret
jl
sbb
lcall
adc
push
mov
sbb
stos
hlt
jns
mov
jp
push
xchg
sahf
mov
aam
stos
das
sbb
push
xor
insb
add
xchg
sbb
aad
mov
mov
inc
in
cs
mov
mov
nop
mov
sbb
jno
cmpsl
mov
xchg
jl
bound
mov
sbb
inc
aad
dec
dec
add
or
dec
xchg
jne
ret
or
incb
jmp
xor
cltd
jle
jnp
cwtl
js
fistps
jmp
hlt
cli
std
mov
fs
icebp
pop
rolb
jle
mov
outsb
add
jmp
std
fwait
cs
incb
cmp
inc
mov
push
dec
lea
adc
pop
push
jp
pop
test
cmp
into
daa
mov
pop
xchg
cmc
rcrl
out
lods
adc
push
adc
cld
loope
in
push
add
jb
stos
xchg
mov
out
or
add
les
ljmp
idiv
and
fdivs
mov
sbb
sbb
jmp
negb
mov
sbb
cwtl
jbe
out
lea
sbb
ss
call
ljmp
jbe
test
sbb
scas
xor
jo
mov
lahf
xchg
dec
xor
inc
incb
inc
mov
clc
sbbl
aaa
ljmp
fistpl
or
incb
sbb
jg
push
mov
aas
repnz
ljmp
adc
in
sub
out
outsl
mov
in
fwait
xchg
addr16
loope
jb
jecxz
pusha
add
sub
cwtl
push
jg
jg
sar
icebp
test
mov
arpl
sahf
dec
add
sub
stos
jno
pop
aaa
push
andl
xchg
mov
arpl
mov
and
add
fwait
jl
add
aas
sbb
outsb
add
fistl
mov
or
mov
incb
fldt
jo
inc
lock
xlat
push
decb
dec
add
pop
xor
je
loopne
out
scas
inc
inc
aad
pop
aaa
daa
je
jge
jne
lret
movsl
inc
add
pop
lahf
push
push
in
adc
lea
pusha
add
inc
sub
int
add
xor
mov
loop
mov
adc
test
add
loopne
push
xor
add
pop
outsb
sub
fistpll
or
notb
dec
inc
jle
out
xchg
xor
pusha
std
add
xor
testl
mov
pop
push
incb
dec
int3
cld
mov
cli
outsl
testl
aas
cmp
push
loopne
inc
push
pop
xchg
sarl
fwait
mov
scas
push
add
incb
sub
daa
cmp
cmp
push
cmp
and
ljmp
push
test
add
cmp
mov
fsubrl
cmp
and
stc
cmp
lods
mov
dec
and
out
xor
sbb
mov
aad
inc
jge
sahf
sub
incb
sbb
or
inc
jg
stos
dec
mov
in
lahf
imul
subl
and
incb
das
sub
rcr
fisttpll
add
push
and
xchg
ss
in
adcl
hlt
insb
incb
jp
add
cmp
mov
adc
sub
inc
fcoml
push
xor
sbb
pop
ds
push
aaa
lods
negl
stos
or
pop
and
inc
cmc
data16
decb
enter
scas
imul
sbb
test
add
jbe
xorl
aad
int3
icebp
or
frstor
cmp
ljmp
add
dec
sub
add
jl
hlt
dec
orl
add
decb
add
movsl
cmp
add
push
cwtl
scas
sarl
sbb
movsl
data16
gs
sub
push
cmp
add
sub
decl
incb
cltd
sub
sarb
add
or
decb
xor
inc
incb
add
into
imul
jo
sbbb
dec
jnp
not
imul
lods
dec
and
dec
add
xchg
pop
sbb
movsb
data16
sub
mov
in
inc
js
ret
cltd
xor
pop
mov
cli
mov
scas
leave
ficoms
out
mov
iret
add
mov
cli
fs
adc
ss
dec
add
xchg
and
sub
js
movsb
js
cmp
lret
mov
jbe
leave
orb
add
dec
sub
mov
dec
mov
jmp
je
sub
cmp
decb
ds
xchg
push
mov
sysexit
jo
add
push
add
add
fidivs
cmpsl
xchg
push
imul
jbe
pop
ret
pop
cmp
sub
mov
xchg
mov
inc
add
repnz
or
int3
out
cmp
adc
mov
decb
jle
adc
loop
and
pop
outsl
icebp
dec
add
imul
lcall
in
rolb
cmp
dec
ds
testl
pop
scas
imul
decb
in
xchg
sub
push
sub
ja
add
sarl
fldl
xor
mov
pop
stos
and
or
loopne
subl
push
decb
decb
mov
mov
inc
xor
decb
incb
aam
and
add
lret
inc
add
stos
mov
add
mov
js
decb
pop
mov
and
decb
imul
add
mov
das
sub
decb
or
ljmp
lahf
push
sbb
xor
cmp
ss
cld
loop
push
xchg
xchg
pop
outsl
pop
aas
out
repnz
aas
jecxz
mov
cmp
dec
hlt
loop
fdivrs
mov
sahf
sbb
cwtl
in
add
mov
lahf
shrb
sub
mov
push
xchg
jno
scas
shld
push
jge
pop
push
xorb
ljmp
add
cs
xor
add
fs
xor
ja
jge
ljmp
dec
mov
add
mov
add
mov
sub
mov
inc
add
mov
pop
xor
xchg
mov
fnsave
or
movsl
cltd
test
clc
xchg
daa
xchg
and
incb
lea
inc
add
adc
sub
pop
es
nop
imul
aam
cmp
rcrb
testl
cmp
dec
sbb
pop
in
lds
sub
movsl
mov
mov
jg
xor
lds
inc
faddp
mov
jns
testl
xchg
mov
sbb
adc
aas
insb
out
addr16
adc
shll
decb
cmp
adc
add
and
mov
and
adc
and
arpl
test
xchg
in
mov
xchg
out
sub
push
insl
push
add
add
ljmp
lahf
into
push
loope
mov
in
push
add
inc
mov
adc
inc
cmp
into
and
xor
pop
inc
add
push
add
bnd
fucom
push
call
add
test
cli
outsl
cwtl
pop
imul
rcr
dec
test
out
xor
aas
mov
xchg
add
push
dec
lahf
shlb
adc
and
decb
sbb
add
inc
filds
dec
add
test
jb
outsl
hlt
cmp
insb
inc
mull
adc
xor
mov
mov
mov
add
and
push
scas
dec
add
lods
mov
outsl
mov
mov
push
popa
out
inc
mov
pushf
cmp
aad
aas
mov
lods
add
mov
fiadds
xor
es
incb
aad
xchg
dec
cmp
mov
jne
fdivp
cmp
cmp
decb
cvtpi2ps
mov
mov
add
and
mov
test
ret
and
ffree
mov
or
sahf
pop
and
sub
xor
mov
xor
xlat
mov
arpl
arpl
loope
arpl
lahf
test
into
mov
mov
push
stc
aam
cmpsl
mov
icebp
bound
fnstcw
jo
cs
push
lahf
push
cmpsb
xchg
xor
add
cmc
xchg
shll
pop
inc
add
sbb
aaa
in
ficoms
mov
mov
pop
hlt
dec
add
data16
mov
fstl
push
mov
xchg
divl
sub
decb
sti
add
decb
jo
jle
data16
decb
inc
mov
in
and
add
push
int
push
inc
add
or
es
std
mov
imul
add
std
jns
js
dec
out
add
pop
out
jl
shrb
mov
jle
add
decb
sbb
push
fucomp
or
push
clc
mov
out
mov
orl
clc
jg
arpl
decb
cld
sti
xchg
lods
rorl
push
repnz
add
ds
insl
adc
and
mov
xor
cld
pop
mov
stos
and
dec
pop
sub
pusha
add
or
xor
mov
cmc
ja
incb
enter
push
xlat
pushl
add
mov
fs
decb
decb
rcr
repz
in
mov
xor
mov
xchg
andl
fstpl
cmpsl
aam
cmpsb
dec
adc
lock
inc
add
sbb
cwtl
fidivl
arpl
repnz
jg
jg
mov
add
and
jmp
push
icebp
ds
outsl
out
xchg
or
decb
lcall
inc
pop
inc
incb
stos
xor
dec
es
pop
xor
les
ljmp
scas
popf
into
pop
ljmp
xlat
or
xor
mov
mov
aam
dec
fisubl
xor
sbb
xchg
iret
push
add
loop
mov
incb
add
jns
iret
mov
jp
dec
pop
or
arpl
push
incb
and
push
jecxz
iret
lahf
adc
adcl
incl
push
mov
jbe
gs
add
sahf
xchg
scas
fwait
push
push
jb
test
stos
scas
jnp
out
stc
pop
dec
popf
inc
loop
xor
dec
add
add
repz
into
movsl
mov
int
and
js
repz
xchg
notb
mov
jp
or
insb
incb
dec
es
decb
add
xchg
jg
shll
cmp
push
bound
pop
ret
imul
dec
dec
adc
sub
loop
pop
xlat
in
adc
out
cmp
loope
sarb
sub
test
push
incb
lds
xchg
iret
sbb
push
add
push
adc
test
mov
call
test
clc
aam
call
dec
push
lds
pop
jle
mov
cmp
adc
jecxz
add
add
test
mov
jle
mov
sbb
adc
add
inc
imul
frstor
cli
mov
push
add
gs
sahf
xchg
out
imul
or
es
cmp
and
sub
int
dec
out
rol
jmp
sub
incb
ljmp
dec
into
out
sub
push
inc
sub
push
mov
test
inc
add
add
jg
mov
dec
adc
or
push
add
std
divl
dec
test
fstpl
adc
add
and
into
popa
inc
mov
inc
add
popf
add
add
mov
lcall
imul
sub
decb
xchg
in
lret
and
pop
dec
add
and
adc
xchg
out
jecxz
adc
cwtl
mov
add
stc
cld
movsl
dec
add
cltd
adc
dec
add
psllq
lods
mov
sub
mov
jnp
in
ljmp
add
jbe
mov
pushf
cwtl
and
jge
sbb
mov
add
es
jmp
xchg
sarb
xor
or
popf
cmp
je
xor
cld
inc
xchg
call
sbb
and
mov
adcb
insl
enter
scas
xor
test
add
dec
sub
mov
add
leave
xchg
add
popa
movb
hlt
outsl
scas
nop
fwait
jnp
imul
in
movsl
dec
out
add
push
xchg
data16
push
mov
inc
xor
in
call
sbb
fs
pushf
out
gs
shll
dec
inc
push
and
ret
add
cli
cltd
lods
data16
stc
mov
call
jecxz
pop
out
rcrb
in
adc
xorb
jno
cld
mov
and
push
mov
out
or
jb
pushf
mov
popf
push
stos
out
clc
mov
add
sub
mov
inc
push
xor
cli
popl
jne
fs
jo
lret
jns
lods
adc
stos
sbb
pop
mov
nop
jo
and
ficoml
stos
push
sub
decb
repz
jle
imul
inc
inc
mov
sub
inc
mov
mov
lods
lods
xchg
add
imul
mov
outsb
mov
bswap
jne
add
jbe
sti
or
sbb
fs
adc
mov
scas
mov
jecxz
dec
xchg
sub
mov
notb
push
add
outsb
mov
shr
push
imulb
movl
or
jecxz
in
ljmp
add
xor
cmp
dec
fsub
in
sbbb
ss
es
dec
add
jle
or
push
in
adc
cmp
lret
mov
mov
jp
mov
mov
mov
imul
scas
sbbl
sbb
inc
add
loope
add
ds
hlt
mov
movb
mov
or
jne
fwait
nop
jl
inc
stc
psadbw
push
add
cmc
dec
add
pop
scas
out
addb
out
adcb
add
daa
xchg
decb
add
cmc
lcall
int3
mov
xlat
xlat
and
mov
lds
add
push
int3
movsb
inc
add
js
gs
test
mov
mov
jne
mov
inc
add
jg
out
or
jge
outsl
mov
ret
sbb
cs
call
mov
xor
es
cmp
out
cmp
jb
incb
mov
push
lock
out
xor
jb
jmp
imul
test
test
pushf
mov
dec
test
jo
pop
or
daa
jmp
aaa
cmp
ss
pop
leave
out
sbb
scas
xor
daa
push
das
out
jno
movsb
sub
outsb
add
pop
dec
out
add
xor
loop
push
push
mull
into
rorb
fwait
push
adc
movsl
adc
ret
divb
cmp
jb
stos
iret
clc
pop
lret
insl
out
out
fs
sbb
pop
je
cmpsl
or
and
xchg
inc
jg
lret
rcrb
fstl
out
xlat
xchg
loop
decb
aam
pushf
test
loope
cmp
push
add
push
sarb
adc
es
push
and
mov
bound
data16
mov
loopne
mov
lret
jnp
adc
loope
lock
sub
jmp
mov
inc
loopne
sbb
mov
and
incb
cli
sub
in
dec
out
mov
mov
lret
in
cmp
in
aaa
repz
ffree
pop
mov
adcb
add
fidivrs
sbb
rcrb
popf
push
push
pop
ds
mov
loopne
gs
sbb
xor
push
push
cmpsb
outsl
stos
or
repnz
int
daa
outsb
add
clc
mov
sti
xchg
repz
mov
jo
push
rclb
insl
imul
mov
add
decb
cmp
and
adc
ja
pop
xor
xchg
mov
sub
dec
xor
add
sbb
fcomps
mov
out
incb
int3
cmp
mov
inc
aad
inc
add
lds
and
imul
fst
push
sbb
pusha
add
shr
jb
pop
leave
jb
xchg
sub
sub
data16
and
decb
cmpsb
jmp
xlat
push
in
adc
mov
inc
je
ret
out
sbb
popf
and
out
lock
decb
icebp
movsl
cmp
pop
or
and
pop
sub
ds
insb
add
sub
inc
dec
push
adc
xchg
dec
decb
mov
push
mov
out
inc
cs
pop
xchg
pop
movsl
xor
dec
add
push
inc
fsubs
xchg
dec
add
repz
add
rcrl
and
jmp
inc
inc
pusha
add
pusha
incb
mov
and
add
mov
cltd
cltd
nop
fcmovne
pop
lcall
and
dec
outsl
pop
jae
mov
push
jbe
aam
ljmp
outsb
incb
out
mov
dec
clc
or
mov
sbb
adc
inc
cmp
xor
inc
add
and
dec
sbb
scas
ljmp
push
cld
iret
enter
aas
sbb
icebp
mov
aaa
incl
mov
jp
add
neg
mov
mov
and
lods
cmp
add
lahf
add
add
mov
inc
fs
adc
in
insb
mov
repz
aaa
pushf
daa
xchg
and
enter
std
dec
daa
mov
add
je
or
imul
ljmp
cld
sarl
xchg
call
xchg
pop
mov
push
movsl
sbb
cmpsb
dec
dec
mov
xchg
insl
insb
out
xor
mov
lock
and
cmp
je
int
dec
pop
mov
adc
xor
fmuls
incb
mov
inc
add
xchg
cmp
in
dec
dec
add
sbb
xchg
not
imul
push
test
test
ret
pop
sub
dec
into
pop
lock
push
incb
add
aad
add
xor
mov
sbb
je
sub
je
test
jle
sbb
lods
and
xchg
ljmp
icebp
dec
pop
bound
out
xchg
mov
sahf
insb
add
insb
add
push
cs
xor
add
cmp
add
cmpb
sbb
insb
add
adc
add
jb
add
je,pt
xor
insl
adc
incb
pop
scas
cmc
loope
jns
add
push
add
mov
xlat
mov
add
jns
pop
pop
jno
mov
sbb
jno
shr
pop
fs
mov
mov
add
mov
stc
mov
movsb
imul
mov
cwtl
stos
sub
in
test
imul
sub
incb
enter
ljmp
jbe
or
ja
stos
fxch
rcr
xchg
int3
stc
sahf
pop
mov
xchg
mov
std
sbb
lcall
lcall
call
or
bound
ds
sbb
pushf
inc
cltd
lahf
fs
or
pop
or
and
loope
fidivs
cmp
adc
xor
adc
adc
adc
decb
fwait
shrl
cwtl
xor
lahf
cmp
inc
add
dec
add
lahf
mov
mov
fcompl
inc
je
addr16
les
loopne
out
jnp
scas
int
pop
jg
inc
mov
add
cmp
dec
or
pusha
add
fsubl
cwtl
sub
gs
and
in
jmp
fs
decb
add
xlat
fwait
int3
pop
jg
add
repz
xchg
add
adc
jmp
add
and
cs
divl
mov
cs
mov
mov
dec
mov
inc
inc
loope
mov
adc
and
stos
mov
pop
out
iret
xor
iret
dec
add
pop
das
movsl
adc
outsl
mov
orl
lods
xor
das
xor
js
mov
adc
movsl
fisttps
scas
or
outsb
add
mov
inc
add
scas
and
scas
add
pop
xchg
adc
out
leave
cmpb
sub
addr16
mov
enter
push
adc
sbb
mov
and
inc
and
jne
nop
loopne
lods
out
xchg
mov
ret
lret
jge
jno
xlat
out
aad
mov
push
arpl
popa
push
aad
sbb
push
xchg
sti
mov
outsb
add
mov
pop
popf
fwait
stc
fsubr
dec
add
push
add
dec
es
mov
fbld
decb
incb
and
xorb
int3
push
jmp
arpl
jg
insb
inc
es
lcall
xor
mov
mov
or
decb
jp
cwtl
or
cmc
dec
outsl
test
xchg
mov
dec
mov
andl
aad
lods
in
jae
js
push
out
scas
add
add
movl
lcall
mov
sbb
je
imul
push
rcrb
mov
adc
dec
push
add
mov
sbb
pusha
imul
stos
hlt
and
xchg
xchg
mov
jl
sarb
or
in
rolb
out
incb
and
adc
mov
mov
add
clc
ss
loope
add
push
push
inc
mov
incl
jg
popa
pushf
xchg
xchg
jae
add
cmp
xorb
in
scas
rolb
xor
dec
jecxz
loopne
into
scas
sub
mov
or
sar
cmp
shr
shl
mov
xchg
add
roll
add
xchg
les
incb
pop
add
decb
stc
cmpsl
adc
and
addr16
jae
push
push
movsl
xchg
jge
and
and
push
mov
mov
xor
scas
cmc
loope
adc
sbb
mov
pop
adc
or
xor
inc
mov
cmp
pusha
add
xchg
push
and
fcmove
rcr
inc
add
enter
flds
mov
lcall
pop
cld
dec
add
ficoml
jl
popf
addl
cmpsl
das
mov
dec
xor
imul
push
es
arpl
xchg
pop
lcall
fmul
pop
sahf
jecxz
pop
rorb
mov
adc
push
push
imul
add
push
lods
enter
xor
iret
push
pop
lea
es
je
jne
cmp
jns
es
lcall
repnz
call
sub
es
dec
xorb
push
inc
incb
mov
addl
mov
xchg
mov
fwait
pop
push
add
mov
js
loop
adc
inc
call
negb
sbb
xlat
xchg
push
add
xchg
mov
add
jmp
mov
shr
daa
lods
cmpsl
mov
mov
repnz
jne
inc
sub
dec
enter
lods
inc
inc
adc
pop
cld
fistpll
jp
sbb
stos
dec
jle
pusha
js
add
inc
jo
adc
int3
mov
rorb
xchg
pop
add
int3
cmp
cmp
or
xchg
les
jecxz
push
push
xchg
mov
sub
decb
dec
mov
lea
or
lds
sarl
loopne
incb
dec
shr
inc
cmp
mov
mov
pop
inc
xchg
push
stos
arpl
decb
xor
mov
lods
loopne
fcompl
sub
shll
push
inc
xchg
pop
or
decb
stos
sbb
sbb
stc
cmpsl
lcall
int3
sbb
std
popf
cli
mov
sbb
xchg
or
dec
adc
sbb
sbb
ja
lahf
push
jmp
ss
or
jle
in
insl
int3
add
jmp
add
push
add
cmc
mov
in
repz
mov
lock
add
repz
scas
jecxz
mov
inc
pop
call
mov
push
push
icebp
pop
ret
mov
mov
icebp
psubw
mov
and
adc
lea
add
leave
inc
jmp
mov
sbb
aad
add
sbb
push
adc
cmc
pop
mov
jbe
cmc
outsb
sbb
push
mov
dec
mov
jns
inc
or
add
decb
ficomps
xchg
js
sub
dec
cmpb
and
add
mov
adc
dec
fidivs
push
bound
and
testb
push
xchg
iret
sti
xor
xor
add
loopne
iret
rolb
arpl
and
decb
xchg
dec
imulb
mov
fs
loop
jb
cmp
cmc
in
xlat
test
and
xchg
gs
cmp
out
int3
inc
add
mov
adc
mov
mov
pop
scas
ret
lock
fsubr
cs
sub
rolb
add
sti
sti
jge
sub
cmpb
incb
repz
scas
mov
inc
repnz
mov
addr16
add
scas
mov
sub
cmp
add
mov
xor
push
pop
sub
stc
and
pop
mov
push
mov
jne
mov
jbe
pushf
push
or
push
loopne
xchg
dec
incb
idivl
mov
frstor
push
mov
mov
aad
shll
jno
mov
inc
jbe
add
dec
in
jo
sub
ds
popf
sub
shlb
iret
add
enter
push
jae
jae
lods
adc
jge
jecxz
mov
xor
movsl
add
data16
arpl
incb
test
movsb
stc
cmpsl
xchg
sub
in
xor
push
lea
jb
lods
fwait
sbb
mov
pop
fidivrl
incb
xor
stos
ja
lret
xchg
cmpl
incb
decb
cltd
adc
mov
add
decb
cmp
sub
scas
in
lcall
repnz
push
decb
mov
out
pop
pop
and
sbb
incb
or
xchg
pop
mov
scas
sar
jg
inc
jg
push
in
jns
sahf
or
mov
sub
repz
xorl
fisttpll
aam
jnp
lret
and
adc
inc
add
pop
adc
test
incb
movsl
inc
push
mov
arpl
add
inc
and
or
movsb
fdivl
fnstcw
inc
loop
outsb
add
xchg
xchg
push
add
out
xchg
xor
fisttps
out
push
loopne
xchg
dec
inc
jge
popf
adc
add
test
loope
repnz
insl
icebp
scas
sti
push
aam
cmp
push
push
mov
out
xchg
push
sbb
decb
sbb
and
inc
xchg
into
mov
mov
out
adc
enter
outsb
ljmp
out
pop
pop
xor
xchg
mov
inc
and
mov
jle
inc
sar
fisubrs
sbb
fnstcw
add
xlat
or
dec
or
push
lret
or
mov
add
idivl
clc
test
pusha
add
iret
cmpsb
out
xor
leave
mov
aam
shlb
jb
add
incb
decb
and
in
movsb
pop
sbb
sbb
xchg
lea
imul
sti
push
sbb
rcll
adc
addr16
insb
add
aam
fnstenv
dec
add
dec
test
push
adc
loop
pop
dec
aad
dec
push
jae
test
push
pusha
incb
cmp
dec
nop
fcompl
and
int3
addl
lcall
lahf
out
jle
add
adc
lret
mov
imul
adc
add
sbb
mov
sub
pop
mov
gs
adc
ret
popf
jmp
mov
pusha
decb
inc
inc
mov
lds
add
dec
negl
xchg
mov
loope
sbb
fstpt
movsb
sahf
lcall
jecxz
push
sbb
mov
into
sbb
imul
inc
dec
add
js
in
pop
lods
lods
cmpsl
testl
adc
je
jns
cld
pop
out
and
gs
jecxz
sub
sbb
fnstenv
xchg
inc
add
push
add
imul
inc
mov
sbb
call
insb
cmc
pop
je
jae
repnz
data16
cmc
jns
ss
shl
adc
xor
decb
jle
add
mov
bound
repz
fs
lods
sub
jb
fwait
mov
data16
push
imulb
incl
ss
and
incb
push
add
xor
xchg
pushf
xor
std
ret
mov
dec
jmp
pop
outsl
aas
sahf
add
not
div
aas
push
mov
inc
add
pop
fbstp
fsubrs
incb
and
lahf
lods
push
pop
push
imul
divb
lahf
xor
lcall
fwait
addr16
je
add
movsb
rolb
outsb
xchg
xor
cwtl
dec
data16
fwait
mov
outsb
repz
push
fwait
leave
jmp
or
insb
popf
inc
jle
add
lret
scas
xchg
pop
je
filds
add
fsubl
and
aaa
mov
std
sbb
sub
sub
lds
scas
jnp
sarb
imul
add
lods
xor
cmp
std
fists
test
icebp
hlt
and
ret
cmp
add
mov
lret
jns
hlt
dec
mov
mov
sub
adc
add
hlt
jg
in
pop
daa
jo
mov
mov
imull
dec
incb
add
mov
sub
pusha
sub
inc
adc
jl
sub
test
xchg
mov
in
in
sbb
lods
or
xor
sbb
cwtl
das
cmp
incb
jnp
lret
inc
movsl
pop
addr16
add
arpl
xchg
push
add
mov
jae
outsl
sbb
push
pop
popf
icebp
xchg
xchg
inc
sti
add
add
cs
mov
mul
mov
test
int3
mov
jno
stos
mov
incb
add
add
adc
into
xchg
imul
lods
rcrl
aaa
mov
addl
adc
cld
cli
aam
sarb
fstpt
movsb
mov
xor
cltd
jae
mov
fidivl
addl
jno
roll
hlt
jl
scas
shll
mov
outsb
inc
rcrb
incb
lea
add
push
mov
cmc
fists
loope
cmc
decb
out
jl
icebp
push
enter
rcrb
lds
push
sarb
inc
add
mov
or
mov
in
mov
inc
ds
jg
lods
add
pop
add
mov
mov
loope
inc
stos
ljmp
jp
enter
fwait
call
data16
pop
sub
add
mov
fs
decb
in
loop
repz
decb
fisttpll
add
clc
dec
pop
cmp
shrl
call
sub
incb
into
in
test
cmpsb
cmp
inc
jae
test
incb
mov
sbb
std
push
pusha
add
jp
jmp
decb
cmpsl
aam
dec
aas
xchg
xchg
sbb
or
inc
sti
sub
sub
rcrl
out
cmp
fwait
sub
mov
cmc
lock
jne
sbb
xchg
jbe
mov
add
stos
ret
out
mov
stos
adc
push
adc
icebp
es
outsl
nop
es
fmuls
lods
mov
fimull
outsl
add
mov
daa
addb
push
insb
add
lds
add
cmp
cld
or
cmp
fwait
jno
cmpsl
cld
les
rcl
xchg
xor
sub
dec
cli
mov
sub
fidivrl
lea
shlb
push
scas
push
into
mov
js
mov
mov
imul
stos
mov
dec
add
mov
pop
xor
out
mov
adc
lret
xchg
addr16
and
add
and
mov
push
data16
xor
ds
lcall
test
mov
incb
push
fildll
fcomip
std
pop
ror
mov
inc
addr16
fstl
movsb
jns
pop
xchg
xchg
jbe
add
shl
add
mov
push
cwtl
cwtl
cmc
sbb
add
and
sbb
jb
cmp
xchg
or
decb
push
lcall
push
test
add
jecxz
out
inc
add
sbb
incb
xlat
inc
and
lahf
lock
adc
lock
adc
das
popf
jmp
pop
push
sarl
stos
fisubl
sbb
inc
cmp
dec
add
shr
dec
add
xlat
jge
dec
add
addb
stos
mov
repnz
jb
mov
out
subb
jne
sbb
and
jnp
repnz
pop
out
adc
or
jmp
mov
push
cmpsb
mov
push
jecxz
in
xor
and
dec
dec
mov
mov
out
idivl
pop
xchg
aad
cltd
pop
add
jmp
mov
movsl
cmp
incb
jb
add
stos
outsb
add
cmp
and
pusha
repz
mov
incb
stos
sbb
sbb
push
sbb
add
incl
out
adc
ror
add
incb
sbb
adc
js
loopne
or
and
repnz
xor
es
mov
sub
mov
jmp
inc
in
pop
test
mov
mov
lods
loopne
add
iret
jno
xlat
ret
inc
mov
jb
mov
jle
xchg
ret
inc
clc
repnz
bound
mov
add
and
bound
decb
push
andl
dec
push
add
cmc
mov
add
mov
push
xchg
mov
jnp
add
or
fbstp
and
dec
add
sub
dec
xor
push
inc
jae
dec
add
out
xchg
xor
inc
mov
jge
xor
inc
inc
pop
pushf
push
add
ror
out
shl
nop
sbb
outsl
jmp
push
sbb
scas
and
popf
push
jmp
mov
mov
cmp
decb
nop
dec
shlb
mov
cmpsb
jnp
xchg
xor
ds
mov
jno
mov
insl
shrl
dec
in
mov
or
pop
or
decb
jnp
ds
decb
jle
movl
fldt
mov
add
gs
loope
out
pop
inc
iret
lret
rcrl
cmp
add
pop
test
pop
in
push
int3
insb
inc
stc
push
repz
les
and
popa
add
hlt
jae
adc
and
incb
ljmp
dec
add
push
pop
rcr
pop
mov
repz
int
enter
push
fnstenv
mov
mov
lahf
in
mov
test
jnp
jnp
in
add
pop
xchg
push
add
pop
sub
cld
rclb
jp
add
dec
movsl
js
mov
testb
xor
sbb
jmp
pop
jbe
cmp
jg
jo
inc
decb
mov
gs
in
dec
mov
xor
repnz
fisubrl
cmpl
pushf
lahf
ret
test
add
rclb
jg
push
mov
jl
add
jmp
outsb
lcall
in
and
decb
cmp
sbb
repnz
decb
push
and
mov
aad
loopne
leave
mov
loopne
clc
or
xor
je
add
cwtl
fs
mov
in
jbe
mov
incb
nop
insb
in
test
in
decb
incb
fisttps
aaa
and
loope
inc
pop
popa
sarl
out
add
jp
add
jmp
stos
mov
xlat
fimuls
scas
ljmp
decb
ret
decb
xor
xor
insb
add
negl
dec
lods
jecxz
incb
fdivs
xchg
adc
mov
cwtl
fidivl
ja
lret
xor
jmp
repnz
std
leave
shll
mov
sbb
out
sub
push
incb
cmpsl
fildl
and
popf
lea
sti
mov
ss
mov
push
cmp
or
push
sub
mov
sub
cmc
btcl
add
fdivrs
into
add
add
push
xchg
fstpl
in
incb
and
push
dec
mov
insl
ret
les
adc
jp
push
outsl
out
pop
push
add
xchg
fsubl
xor
movsl
stos
shll
jns
add
sub
jae
mov
jg
aad
scas
sbb
jle
incb
js
and
sub
push
rorl
sahf
adc
popa
cli
test
adcl
aas
push
addr16
insl
fimuls
scas
jl
dec
and
sub
aas
mov
mov
mov
jmp
pop
mov
in
stos
inc
add
and
out
xchg
pop
out
ret
and
out
loopne
decb
mov
aaa
out
jno
shll
scas
pop
mov
xor
jmp
aam
call
shl
mov
xchg
cmp
push
aas
pop
xchg
lods
les
inc
dec
mov
out
pop
outsl
daa
ja
lcall
jae
paddusb
xlat
shl
test
jne
cmp
adc
fbld
insb
add
dec
subb
xor
jmp
add
adc
jno
and
add
adc
jl
push
xchg
movsb
sarl
sbb
pop
movsb
imul
add
iret
mov
push
sti
stc
mov
scas
xor
pop
push
jmp
out
xor
cmpsl
and
cmp
adc
jmp
fs
loop
mov
mov
adc
mov
icebp
jo
push
les
out
sub
decb
dec
imul
aad
mov
push
xor
mov
adc
daa
push
pop
jecxz
add
cmp
addr16
pop
insl
aas
sub
push
jbe
dec
sub
incb
jae
and
out
jae
ds
mov
or
pop
rcrl
lahf
xadd
mov
sahf
add
mov
inc
jae
lret
lods
jno
loopne
mov
movsl
adc
pushf
xor
jbe
and
gs
sub
fimull
sub
cmp
jae
mov
gs
out
test
rcrl
inc
adc
add
repnz
gs
add
xor
fisttps
add
lret
or
decb
cltd
push
push
movsl
aaa
repz
xor
xchg
in
mov
adc
add
cltd
outsl
dec
fs
shr
xchg
pop
push
repz
incb
add
or
adc
sub
dec
in
fistl
test
lret
lret
pop
xor
mov
mov
decb
cli
arpl
sub
aas
push
push
and
push
out
fwait
in
dec
add
or
adc
adc
jg
jnp
add
movsb
add
incb
sahf
dec
lahf
push
int3
popf
mov
pop
hlt
fnstcw
jecxz
out
lret
xchg
jle
and
add
xor
add
sub
sub
in
jge
add
jne
pop
or
mov
add
insl
std
cmp
test
stc
out
mov
pop
stos
int
fnsave
push
das
add
shl
mov
xchg
mov
icebp
or
xor
std
outsb
add
jbe
popl
mov
mov
sub
push
in
vunpcklpd
decb
jl
add
pop
clc
lahf
lcall
repz
add
jl
or
dec
push
jae
dec
add
xchg
adc
shll
sahf
xorl
xchg
test
or
sub
mov
aad
popa
adc
sub
mov
mov
mov
nop
cmp
mov
ret
out
mov
rclb
adc
and
sbb
repz
mov
sahf
add
adc
mov
nop
test
cli
jp
xchg
cwtl
es
incb
xor
pop
cld
test
pop
add
mov
add
mov
push
or
decb
fcoml
add
dec
and
xchg
fwait
dec
jecxz
test
or
push
sbb
adc
sub
mov
mov
popf
int
popa
lock
add
and
adc
lcall
les
icebp
lock
leave
add
lahf
push
jp
lds
xchg
sbb
push
mov
scas
push
mov
mov
stc
addr16
arpl
loopne
aam
jle
iret
xchg
sbb
adc
ss
dec
sub
push
inc
jbe
add
cwtl
insl
jge
hlt
ja
imul
add
push
add
decb
mov
mov
add
push
insl
jge
subb
les
dec
decb
mov
fisubs
mov
lahf
mov
add
pop
lret
es
cmpsb
mov
shll
jns
insl
insl
inc
pop
push
sub
pop
in
pop
jae
lds
jg
mov
aad
push
or
fidivrs
sub
incb
incb
sub
imul
push
mov
pop
mov
in
enter
sti
cli
jecxz
pop
loopne
pop
cmp
mov
into
xchg
pop
filds
decb
decb
dec
add
adc
insl
mov
ja
jne
nop
sbb
dec
jno
and
inc
jp
push
inc
mov
mov
pop
pop
test
sub
jne
daa
jno
js
push
lods
fcoms
dec
add
cmp
xor
sub
push
sbb
and
xor
inc
mov
out
loopne
lock
adc
nop
push
add
xchg
mov
jecxz
sub
decb
xor
mov
adc
in
outsb
add
and
incb
push
mov
mov
out
nop
nop
mov
push
stos
xchg
mov
mov
mov
mov
dec
mov
pusha
add
ffreep
sub
lahf
push
xor
jbe
jne
push
jbe
aas
sub
decb
mov
out
loopne
icebp
popa
loopne
pop
mov
repnz
imul
mov
test
mov
pop
cs
nop
mov
push
call
inc
int
scas
aam
add
ret
sbb
xchg
push
add
pop
pop
and
pop
arpl
sarb
ja
xor
hlt
or
inc
push
cmp
push
dec
add
sub
icebp
scas
mov
sti
xor
dec
sarl
add
pop
int3
add
stos
hlt
das
mov
pop
mov
mov
or
push
sub
incb
lahf
repnz
push
push
decb
out
pop
and
jne
push
inc
jmp
push
jbe
les
jbe
icebp
jg
mov
inc
xchg
sub
push
push
mov
mov
push
ljmp
decb
add
sahf
or
repz
lods
in
dec
sbb
sbb
xor
psubq
decb
mov
xlat
std
pop
push
std
insb
add
mov
add
push
loopne
loop
and
and
rcrb
add
lods
iret
adc
lcall
dec
add
mov
popa
fldcw
push
cwtl
in
ficompl
xor
jl
sarb
dec
cmpsb
sub
jb
lods
inc
add
xorb
sahf
add
decb
and
pop
jno
push
stos
pusha
inc
rcrl
mov
mov
mov
pop
iret
mov
push
xor
add
jle
jbe
call
pusha
add
add
sub
repnz
mov
insl
adc
insb
loope
and
push
mov
fs
xchg
in
mov
jmp
imul
fdivrl
mov
sub
xchg
xchg
cmp
movsb
pop
ss
push
lods
roll
mov
cmp
clc
jle
mov
dec
add
mov
pop
hlt
cld
mov
in
mulb
decb
ret
out
test
push
loop
aam
pop
dec
add
cmp
xchg
dec
mov
cltd
and
xchg
pop
insb
add
or
cmp
or
pop
sub
decb
sbb
and
incb
jmp
pop
pshufw
inc
nop
pushf
mov
mov
mov
shl
cmpl
jecxz
push
insb
decb
data16
stos
xlat
mov
jg
pop
das
mov
ss
loop
aad
fwait
lahf
pop
xchg
xor
sbb
inc
add
cmpsb
scas
lods
lret
mov
ret
mov
push
cs
xor
mov
add
pusha
mov
jge
pushf
shll
jno
out
stc
sbb
push
incb
fistl
add
jmp
add
cltd
adc
sbb
sub
add
jge
xchg
out
mov
dec
lcall
in
xor
jns
daa
mov
cmc
xchg
outsb
add
enter
mov
in
dec
clc
adc
mov
add
cmp
int
cmp
xlat
int
incb
je
sbb
ja
adc
xchg
rorb
mov
push
outsl
push
incb
rep
std
leave
movsb
add
std
dec
push
dec
in
in
imul
decl
out
push
push
lahf
data16
sub
decb
jae
fidivrl
add
sub
mov
fistpl
sbb
add
xchg
or
jae
xlat
fnstenv
pop
loopne
cmpb
mov
lock
jge
int
sub
es
lcall
mov
jo
inc
cld
ss
fwait
sbb
sti
subb
push
jp
sub
mov
and
aaa
lea
add
popl
xchg
xchg
div
inc
add
dec
fwait
dec
and
inc
pop
add
push
dec
in
pop
xor
icebp
ljmp
push
mov
decb
add
sbb
sbb
or
dec
cmp
mov
add
jp
fmulp
push
push
decb
xor
pop
and
je
ja
cmpsb
pop
aaa
addr16
cld
andb
cwtl
je
daa
and
fs
and
loop
lods
outsl
xchg
sub
pop
mov
aam
inc
add
jae
inc
cmp
std
mov
in
sub
xchg
or
adc
nop
arpl
mov
lods
mov
int
cmpsb
fs
incb
popa
daa
inc
mov
xor
xor
sub
xchg
push
loop
add
xorl
add
adc
inc
sbb
xlat
test
add
jmp
pop
js
xor
mov
fs
fnstcw
adc
xchg
jecxz
or
jmp
subl
test
incb
add
jns
mov
lcall
cmp
xchg
test
push
incb
call
out
out
aaa
out
aad
and
decb
add
dec
fs
cmc
xorb
push
pop
gs
add
decb
pop
and
cmpsb
imul
aaa
enter
loop
mov
adc
lret
pop
rcr
xor
movsl
push
dec
decb
mov
mov
aam
add
fists
pop
fs
lahf
push
clc
loope
andb
out
sbb
xchg
in
movsb
mov
jg
icebp
cs
fstps
xor
pop
dec
add
in
shrl
dec
mov
and
incb
decb
jb
ja
hlt
ss
call
icebp
xchg
inc
decb
out
pop
loope
out
pusha
add
xor
sbb
sbb
dec
jo
les
cmc
jge
pop
sub
mov
fwait
push
push
mov
stos
clc
imul
xchg
pop
mov
aas
xor
add
into
lcall
add
and
and
movsl
sub
sbb
cmp
cmpsb
sbb
inc
add
cmp
popf
sub
lahf
inc
insl
jne
sub
push
jns
cwtl
add
cmc
pop
jae
pop
lea
push
sbb
ret
test
out
and
fs
pop
aas
hlt
jle
and
sbb
xchg
sbb
add
aas
scas
xor
mov
out
call
cmp
loop
sub
ja
cmp
js
lret
ss
repz
std
orl
add
lods
das
idivl
push
push
test
stos
mov
add
xor
es
cmc
insb
loopne
cltd
cmp
adc
inc
jnp
ss
incb
xlat
dec
jg
sbb
cltd
mov
cmp
inc
incb
out
dec
mov
push
lret
or
and
test
fsubs
rolb
lret
fsubr
hlt
cmpl
jae
adc
mov
xor
inc
movsl
mul
outsl
shrb
jno
add
daa
les
cmp
dec
incb
mov
sub
jecxz
sti
xor
sub
outsb
add
fcmovnu
cmpsl
push
add
inc
xchg
mov
je
xor
into
cmp
add
jge
jle
jb
dec
pop
jo
and
cmp
pop
jb
mov
sbb
push
cmp
xchg
or
push
iret
xchg
dec
mov
in
jmp
add
repnz
jnp
cmp
int3
daa
mov
mov
mov
xchg
and
pop
mov
lods
jnp
add
decb
mov
add
je
dec
xchg
cli
sbb
xor
jge
jnp
out
lea
test
addl
and
add
sbb
clc
lret
pop
fmul
enter
push
add
xor
in
mov
adc
sar
inc
and
jns
js
movsl
cs
test
jns
lret
pop
enter
push
lods
inc
imulb
rcll
pop
pop
movsl
add
incb
cmpsb
adc
or
sbb
lcall
jg
push
decb
pop
aam
daa
and
mov
add
sub
lock
adc
push
adc
mov
fldl
inc
sbb
fldcw
xchg
in
inc
add
xor
inc
add
xchg
xchg
jns
sub
inc
jl
sub
in
jns
add
inc
add
jg
jno
jg
fidivrs
ss
enter
leave
add
push
lock
sub
jae
jne
add
mov
xor
negb
add
incb
aas
dec
add
cmpsl
sbb
cs
shl
loop
xchg
in
add
mov
ja
adc
add
repnz
ljmp
mov
incb
push
cld
pushf
pop
les
fwait
sbb
lods
gs
fstpt
push
stc
push
xor
sub
pop
cld
xlat
es
xchg
sbb
pop
cmp
sub
in
imul
cmpsb
jecxz
xchg
fwait
inc
jmp
cmc
lahf
in
push
dec
pop
out
lea
sub
pusha
add
nop
cs
es
jecxz
addr16
lds
outsl
out
push
dec
jb
int
cmp
movsb
cwtl
movsb
and
cmc
jmp
pop
push
daa
ret
jnp
dec
imul
mov
rol
jmp
insb
add
inc
incb
icebp
out
js
add
add
and
repnz
sahf
pop
shl
jns
mov
dec
add
push
mov
dec
aas
pop
test
sbb
inc
add
jbe
pop
fisubrl
add
mov
dec
xchg
rcll
push
add
jns
sub
and
ds
push
cltd
inc
adc
mov
add
push
sbb
ss
add
push
clc
insl
andb
push
idivb
inc
add
push
xor
fiaddl
daa
jg
pushf
cmpsb
sub
cmp
shr
lods
cmp
or
icebp
int
cmc
adc
rol
add
jbe
pop
jl
or
mov
mov
push
dec
sbb
inc
fbstp
adc
and
mov
int3
nop
adc
pop
or
cmp
test
jb
jge
sbb
fiaddl
add
mov
adc
mov
leave
out
pushf
out
fcomp
loop
sbb
out
adc
mov
jle
dec
add
pop
in
adc
lcall
pop
movsl
bound
cltd
xor
xchg
faddl
sbb
push
fst
or
pop
or
xchg
xor
in
rcl
sub
push
add
cwtl
popa
data16
shrl
incb
js
ret
fcomps
add
cli
jns
cltd
repnz
push
inc
sbb
mov
add
push
pop
sti
lods
aam
xchg
or
push
inc
fdivs
jecxz
in
or
add
push
mov
add
mov
call
cli
loop
jg
addr16
out
mov
cwtl
dec
outsb
incb
push
sahf
jno
arpl
repz
fnsave
out
outsb
decb
incb
incb
leave
pop
inc
incb
mov
mov
lods
aam
add
inc
add
das
rorb
and
incb
aad
cmc
movsb
and
test
add
stos
call
adc
add
scas
scas
out
loopne
loopne
mov
hlt
push
pop
sub
or
cmp
dec
add
and
lret
mov
loop
enter
lcall
incb
aam
inc
add
ret
or
add
loopne
pushf
leave
inc
xchg
rorl
mov
cmpsl
jb
inc
pop
mov
add
es
pop
enter
repnz
incb
mov
xchg
dec
adc
mov
in
lock
call
adc
xor
add
cmpl
pusha
pop
inc
xlat
inc
jg
in
jb
flds
pop
and
aas
subb
cmp
ret
nop
aam
mov
mov
xchg
lds
jmp
clc
lds
leave
mov
mov
adc
icebp
movsb
out
fldt
cs
mov
dec
cmpsl
lret
enter
cmp
outsb
insl
push
test
adc
add
imul
adc
push
out
cmc
decl
mov
xor
decb
add
cli
pushf
andl
pop
dec
push
imul
sub
stos
inc
in
xor
and
mov
jb
jg
stos
das
and
call
sub
decb
mov
sti
pop
xchg
and
movsl
fstpt
mov
ljmp
addr16
imul
scas
xor
imul
inc
add
inc
add
sbb
insl
cwtl
rorb
dec
addr16
and
and
call
ss
xchg
lahf
mov
add
xor
push
fsubr
xor
sarb
xchg
jg
mov
shr
ficoml
mov
jecxz
stos
test
jns
iret
and
sub
cmp
sarb
pop
test
push
xchg
mov
loopne
xchg
outsb
jecxz
sub
xor
add
lret
incb
add
or
es
adc
dec
ja
sub
push
std
sbb
xchg
jns
ljmp
rorl
lds
and
cltd
mull
lock
sub
add
push
add
mov
sarb
daa
push
xchg
pop
pop
scas
es
jbe
addr16
lods
fcomip
leave
jne
adc
aas
add
push
fistpll
outsl
daa
test
xchg
lea
mov
in
imul
inc
or
cmp
das
jb
imul
inc
jp
rcr
out
jb
ja
or
incb
inc
xchg
je
lods
add
add
fmull
incb
jbe
xchg
mov
cmp
mov
sub
decb
decb
add
dec
fadds
std
mov
cs
outsb
add
jg
pushf
outsb
mov
xchg
jmp
xchg
int3
in
push
mov
inc
or
jmp
lea
add
add
mov
inc
stos
dec
sti
mov
mov
xchg
shl
jl
adc
arpl
xchg
jne
fbstp
xor
pop
arpl
rclb
sbb
jl
fidivrs
es
mov
push
adc
out
ljmp
imul
xor
dec
pop
lock
mov
sub
into
loope
mov
jmp
sub
mov
push
pop
xchg
mov
add
ljmp
and
push
push
fnstcw
mov
in
jge
mov
movups
xchg
add
rcl
pop
add
das
mov
ds
add
adc
repnz
popf
adc
testl
jbe
hlt
pusha
call
mov
dec
dec
jbe
leave
mov
shl
pop
cmp
mov
dec
push
lods
and
incb
mov
xor
in
mov
sub
jo
cmpsb
jae
stos
xchg
stc
mov
pushf
outsb
inc
idivb
sub
decb
xorb
mov
pusha
add
aaa
icebp
test
test
sbb
pop
and
mov
inc
repz
mov
ss
cmp
pop
jo
test
arpl
mov
mov
mov
scas
xchg
mov
cmpsl
clc
push
mov
add
or
loope
cs
mov
add
mov
add
push
add
aad
cmpsb
push
add
subl
mov
add
sbb
xchg
out
lahf
pop
cmp
cwtl
dec
push
adc
pop
mov
mov
push
jnp
in
enter
push
iret
mov
add
data16
and
data16
sub
xor
pop
jl
dec
xor
mov
fdiv
xlat
outsl
stos
inc
dec
mov
data16
mov
xor
test
or
outsb
daa
jbe
incb
iret
imul
icebp
or
decb
pop
mov
daa
cmpsl
movl
pop
mov
dec
add
stc
and
lods
loopne
xchg
adc
jp
cmc
rcrb
jne
sub
outsb
add
rolb
fs
push
aam
shlb
aad
push
add
lods
sbb
cmp
mov
xor
cmp
fs
cs
sub
notl
dec
add
push
or
add
inc
mov
mov
cli
sbb
fsubl
or
sti
sub
cli
adc
xor
xlat
sbb
inc
xor
xor
pop
inc
decb
inc
lea
sbb
aad
sub
mov
fbld
into
ljmp
aam
mov
add
shlb
mov
push
push
jbe
adc
xchg
ljmp
mov
add
adc
out
fwait
test
xor
jp
mov
sbb
add
jnp
mov
and
inc
stos
pusha
add
sbb
dec
out
xchg
sub
and
cmc
outsb
mov
stos
mov
jno
inc
pushf
scas
sbb
xchg
inc
xchg
inc
add
fistpll
push
pop
lret
xchg
imul
or
mov
incb
cmpsl
cmp
mov
jl
nop
jmp
pushf
xor
add
pop
mov
hlt
cmpb
lcall
mov
sub
out
push
xchg
fmuls
dec
push
scas
mov
xchg
aaa
cld
sub
cwtl
jnp
data16
jmp
adcb
incb
push
decb
xchg
rcl
aad
dec
add
es
xchg
add
sub
cltd
sbb
ret
xor
incb
xlat
stos
dec
cmpsb
push
fildll
repnz
imulb
int3
fiaddl
push
loope
mov
int
incl
mov
add
lods
clc
or
mov
lea
dec
mov
xor
call
add
lret
pushf
xor
inc
add
mov
sub
dec
add
fcmove
sub
decb
and
mov
insl
cmp
test
sub
mov
loop
shl
aam
push
shll
aam
lahf
bnd
add
andb
mov
push
imul
jge
pop
adc
mov
pop
mov
lret
inc
decb
mov
jne
push
or
add
or
mov
lcall
bound
xchg
sub
add
inc
jne
ljmp
jae
mov
shll
lods
icebp
sbb
pop
iret
fs
xor
shll
pop
cmpsl
lods
push
jg
mov
sbb
adc
or
sub
lods
mov
aad
in
xlat
or
popa
or
lods
mov
cmp
mov
pushf
dec
add
jg
dec
stc
cld
ret
jp
add
add
out
repz
pushf
xor
in
lods
add
outsl
xchg
popa
scas
jmp
jecxz
inc
notl
cwtl
movsl
jp
xor
int3
cmc
push
rcr
xlat
sbb
lret
loope
or
incb
decb
repnz
jl
test
lret
scas
mov
movsl
push
fisubrs
ja
lock
pop
xchg
in
cs
incb
pop
sbb
aas
scas
loope
fdivs
push
xor
xchg
xchg
insl
gs
incb
sbb
xchg
nop
int3
fiaddl
orps
cmpsb
inc
xchg
pop
fistps
add
ljmp
movsb
add
sbb
or
ss
rclb
iret
push
js
cmp
dec
adc
adc
out
in
dec
std
xor
insl
push
notb
incb
dec
outsl
cmpsl
cld
push
jne
xlat
loop
ja
aam
in
pop
aam
dec
xchg
mov
js
xor
pop
ret
add
lcall
decb
pop
mov
lock
push
repnz
loopne
add
in
ljmp
dec
push
ljmp
mov
lods
cltd
aas
pushf
jg
xchg
jbe
xchg
rcl
lds
and
fs
xor
fadd
push
daa
adc
cmp
cmpsb
loopne
icebp
jbe
pusha
mov
push
xchg
mov
stc
push
es
decb
pop
xchg
mov
mov
mov
sbb
cmc
fisubl
dec
decb
rol
jl
movsl
fnsave
loope
icebp
mov
out
push
xchg
loopne
incb
cld
push
dec
mov
int3
loop
cmc
les
cmpsb
push
popf
insl
pop
loopne
ja
stos
sbb
enter
jae
add
cmpsb
xor
in
dec
mov
add
popf
mov
or
adc
xor
test
dec
daa
or
pusha
add
cmp
fs
bound
incb
add
ljmp
cld
cmc
add
sti
push
int3
push
add
inc
add
call
subb
inc
add
xchg
push
sbb
sub
fimuls
std
sbb
out
cmpsb
adc
rcrb
stos
or
loope
lahf
push
push
xchg
mov
xchg
or
je
cs
adc
outsl
pop
lds
or
adc
fcomps
jecxz
jp
add
pop
xchg
xchg
mov
add
fstp
mov
add
jb
popf
clc
rol
popf
outsl
enter
inc
hlt
mov
lret
idivb
add
repnz
mov
lahf
jae
sbbb
sahf
or
out
push
sti
pop
pop
xchg
in
loop
push
in
fcoms
rorl
inc
les
fs
jns
jo
in
pop
mov
lret
and
ljmp
shll
fistpl
dec
jl
mov
lods
repz
pop
aas
rcll
sub
jae
rorb
push
ds
xchg
mov
add
jle
in
and
mov
movsl
jne
ret
daa
fwait
stos
cmp
pop
les
dec
add
mov
stos
ds
sbb
popf
push
gs
divb
sub
mov
add
mov
mov
decb
mov
fisttpl
iret
cmp
sbb
sbb
add
xchg
test
cmp
rsm
xor
int
cmp
add
lahf
cmpsl
out
fwait
int3
add
incb
imul
adc
xchg
push
scas
sbb
sub
inc
lock
sub
movsl
loopne
movsb
inc
popf
or
dec
add
pop
dec
add
je
ret
add
push
cmpsl
or
cmp
cwtl
cmp
pusha
add
mov
add
les
mov
adc
pop
jge
mov
cmpsb
sbb
xor
fcoml
inc
arpl
xorb
les
push
repz
sarl
int
loope
rclb
data16
decb
add
xlat
lds
ss
sbb
pop
jle
add
incb
decb
incb
aam
adc
test
mov
incb
add
mov
sbbl
jno
push
subb
lods
pop
push
cmpsl
fadds
incb
pop
mov
cmp
jo
fmull
add
data16
cmp
in
cmp
mulb
sbb
mov
push
or
pop
loope
add
fcoms
test
cmp
sbb
ja
add
mov
jae
mov
mov
inc
cmp
add
shll
cmp
or
decb
adc
aad
cmpl
loopne
std
adc
das
pop
xchg
neg
inc
add
ljmp
incb
repnz
mov
mov
pop
mov
test
adc
xchg
cld
aaa
adc
adc
xor
and
aaa
xlat
out
or
mov
add
mov
cmp
je
sbbl
dec
cmp
daa
fwait
in
xor
decb
add
mov
lea
sub
call
ficompl
dec
call
in
loop
fwait
or
sub
cwtl
data16
icebp
add
pop
mov
jb
xor
push
add
add
sbb
in
shrl
xlat
cmpsb
xor
or
pop
out
jl
push
arpl
cmp
loope
or
inc
aas
pop
arpl
inc
dec
dec
add
inc
cmp
test
mov
add
push
add
adc
push
aam
push
add
or
add
cli
mov
adc
mov
mov
ljmp
inc
mov
popa
sbb
push
add
jno
mov
inc
adc
pop
out
jp
movsb
rcll
repnz
pop
dec
add
xor
jb,pt
sub
cmpl
push
decb
in
and
jns
mov
add
mov
xor
mov
je
outsl
negl
fs
stc
adc
repnz
cmc
fstpt
sub
in
aas
xor
sbb
incb
scas
mov
sub
decb
por
mov
das
jmp
inc
arpl
mov
adc
jnp
inc
add
sub
incb
or
dec
lret
movsb
mov
cmp
adc
sub
mov
dec
les
fs
xor
xchg
lods
or
insb
add
and
lods
mov
incb
sahf
cmp
cmp
sub
incb
inc
mov
mov
push
sub
into
clc
and
call
xchg
pop
sub
mov
inc
enter
sti
push
idivb
add
loopne
xor
dec
pop
push
inc
sbb
dec
ja
or
pop
xor
ss
push
add
push
fisubl
cltd
ds
je
mov
loopne
inc
in
mov
xor
out
popf
inc
call
adc
cmc
cmp
mov
mov
xchg
push
xchg
pop
lahf
lods
jecxz
dec
push
ss
xor
cmp
outsl
test
lock
xorl
scas
out
lahf
popf
jp
lahf
data16
in
fs
je
mov
jmp
add
jne
incb
add
push
cmc
adc
push
cmp
lods
inc
jp
add
std
je
insb
sbb
stos
pop
pop
xchg
push
jp
mov
jp
addl
decb
jp
fsts
lcall
les
lods
xchg
clc
jle
mov
pop
push
sub
mov
iret
cmp
sbb
add
addr16
imul
xor
inc
cmp
decb
add
dec
adc
loop
test
xchg
dec
add
mov
dec
add
mov
testl
mov
fsubs
out
add
outsb
add
leave
out
sbb
cwtl
pop
cs
and
push
xorl
cs
push
adc
aas
or
out
add
xor
in
lods
xchg
mov
test
mov
add
xchg
std
inc
add
cltd
add
sub
mov
andl
push
ljmp
ret
int
sub
decb
dec
fisttps
adc
push
add
or
and
mov
dec
dec
decb
pop
arpl
cld
mov
jo
mov
stos
push
fcoml
fadds
in
cmp
bound
mov
cmpb
or
imul
add
int
or
decb
inc
imul
in
cmpsl
faddl
les
cmpsl
repnz
add
jb
subl
mov
pop
pop
imul
dec
dec
shlb
mov
jne
repz
int3
int3
imul
pop
push
inc
aam
aad
xchg
movsl
dec
push
jecxz
pop
xor
xchg
and
rorb
cmp
rorl
mov
sub
fdivr
sub
gs
mov
mov
in
pop
push
push
inc
add
je
std
stos
fnsave
mov
push
xor
jbe
add
in
jg
add
negl
sti
ret
jge
outsl
adc
jl
xor
popa
dec
cli
movsl
bound
in
and
sti
fsubs
outsb
add
adc
out
inc
aad
dec
add
inc
decb
mov
pop
sub
pop
add
in
les
stc
int3
mov
push
mov
enter
dec
add
lahf
or
lock
xorb
mov
and
sub
sarb
lods
or
add
xlat
in
cmp
mov
ret
ret
fs
cwtl
mov
xchg
insb
push
fdivs
xchg
push
pop
shlb
rclb
inc
rcrl
es
dec
pop
out
pop
imul
mov
xchg
mov
popf
mov
sti
stos
xchg
shr
push
push
rol
das
lret
incb
jp
gs
nop
mov
mov
ret
aad
arpl
loope
mov
dec
out
ret
jge
rcll
push
add
adc
mov
loopne
cmp
pop
xchg
stos
inc
cli
ret
mov
clc
or
mov
sub
xor
dec
mov
outsl
lret
aaa
jmp
mov
roll
push
mov
sbb
and
daa
lahf
jno
test
in
insb
pop
push
fbld
mov
imul
add
add
jle
sbb
ret
aad
add
sbb
fadds
and
add
ret
push
add
aam
dec
add
add
or
movb
clc
ja
dec
test
or
decb
adc
incb
rcr
shr
adc
imul
loope
loopne
xor
enter
arpl
or
jl
add
fidivrl
int3
or
mov
pusha
ss
jns
add
fdivrl
decb
daa
cmp
nop
fcoml
stos
pop
jg
cs
add
push
repnz
cmp
push
flds
sub
fwait
lock
jle
int3
pop
sub
inc
lret
add
push
sub
decb
lcall
popa
dec
fcos
insb
add
fsts
mov
add
das
lods
sub
pushf
jo
add
xchg
pop
sarb
dec
mov
outsl
adc
sub
cltd
xor
sti
mov
add
scas
shrb
jmp
and
ss
mov
xchg
popf
icebp
pop
inc
add
push
in
add
cmp
jne
add
jg
popa
scas
mov
adc
push
cmpsl
jg
mov
add
mov
xor
jle
add
nop
ss
js
xchg
call
fwait
push
add
xor
loope
dec
inc
jnp
inc
jbe
mov
pop
mov
test
adc
pop
test
mov
or
adc
xlat
cmp
mov
pop
jnp
addr16
imul
xchg
push
add
cwtl
or
pop
enter
sub
mov
pusha
decb
mov
clc
pop
push
insl
int3
jo
fimuls
xor
or
cmp
push
shrb
dec
sbb
mov
outsb
incb
xchg
cmp
xor
jl
pop
inc
add
lahf
or
mov
out
sbbl
insl
xchg
je
mov
mov
leave
cmp
jnp
adc
decb
insb
icebp
sbb
sub
dec
cmpsl
clc
cmc
imul
jb
jne
pop
and
incb
rclb
das
mov
inc
push
add
sbb
fwait
sub
scas
inc
aam
add
test
fistl
clc
shl
mov
repz
sbb
dec
fisubs
mov
aaa
dec
add
mov
adc
sbb
cmp
fildll
xchg
inc
mov
inc
jmp
push
or
incb
mov
into
testl
scas
sbb
lret
sub
inc
jg
add
pop
rorb
ret
dec
mov
inc
cmp
push
xchg
mov
ror
test
cmpps
gs
lods
or
incb
cli
xchg
push
out
pop
lahf
or
inc
scas
and
mov
arpl
sub
push
or
ja
sarb
bound
push
ret
jg
mov
stos
aas
imul
loopne
aam
jp
fcomps
call
int
push
or
fsubr
dec
hlt
dec
xchg
and
ja
fistl
rorb
outsb
sub
cmp
pop
cltd
push
dec
or
out
jge
in
add
adc
fstps
cli
jmp
sbb
or
ret
dec
jbe
fwait
add
sbb
lahf
insl
adc
scas
pop
pop
out
add
jge
mov
jns
jmp
jecxz
call
das
mov
and
sbb
inc
gs
ds
add
xor
in
aad
in
stos
pop
xchg
shll
in
int3
and
sbb
mov
inc
add
xor
shrl
repnz
mov
sub
scas
repz
add
outsb
add
lods
lock
loopne
and
ror
repz
push
aas
add
scas
jne
clc
xor
sub
and
loopne
ficomps
jb
out
out
sub
sbb
cli
push
cwtl
jb
adc
add
push
and
and
cmp
mov
or
popa
push
rolb
add
or
xchg
loopne
cmc
lcall
sbb
notb
add
lea
adc
and
xor
iret
mov
cmpsb
ret
push
pushl
stos
scas
sub
jg
fnstcw
loopne
pop
fdivl
sbb
dec
add
pop
pop
sub
daa
rorb
bsf
and
jo
mov
imul
mov
and
jle
mov
push
std
xor
adc
aad
dec
aam
movzwl
pop
push
push
cmp
insb
jae
adc
sbb
mov
mov
jno
incb
loope
je
lret
test
push
add
test
mov
incb
fwait
jns
jp
push
ret
js
decb
push
fsubr
xor
mov
std
sarl
inc
add
lahf
fcompl
mov
pop
xor
insl
sub
xchg
or
xchg
popf
into
imul
xchg
pop
sbb
add
jne
stos
and
mov
mov
pop
out
pop
sub
and
arpl
aam
mov
jnp
test
add
jno
add
and
mov
outsl
pop
jmp
push
stc
mov
outsl
dec
add
loop
leave
andb
mov
jbe
mov
push
decb
lahf
pop
add
lcall
rcll
addr16
jne
pop
jno
and
incb
pop
lret
gs
ret
hlt
xchg
mov
sbb
xchg
cltd
push
xor
inc
sub
cs
lock
add
out
dec
incb
push
inc
incb
mov
dec
add
lds
es
sahf
pop
pop
dec
add
inc
inc
aam
and
push
jbe
add
jae
addr16
je
dec
or
lods
jg
adc
and
ds
ret
push
movsb
sarl
jno
rorl
dec
mov
add
loopne
cs
incb
add
mov
rorb
scas
cmp
push
scas
mov
incb
jne
and
rorl
xchg
xor
lcall
mov
jg
push
jl
jmp
mov
enter
test
popa
lret
mov
lret
loopne
jbe
movsl
loope
outsb
adc
decb
decb
bound
mov
arpl
sub
push
arpl
sbb
andl
fs
push
addl
sbb
add
cmpsl
and
loop
loop
adc
xchg
iret
out
sub
sbb
jo
sub
incb
mov
and
decb
add
lds
or
test
xlat
add
mov
xchg
call
ss
es
fistl
add
mov
repnz
adc
fs
pop
xchg
mov
add
sbb
ss
jg
push
xchg
stc
sub
cwtl
shlb
mov
jo
bound
jecxz
rcrl
testb
fiadds
adc
test
lock
sub
aaa
add
mov
sbb
gs
mov
push
jo
mov
sbb
and
imul
sbb
add
aaa
sbb
mov
cmp
cmc
push
push
adc
and
lahf
dec
jge
sahf
cltd
mov
les
mov
fs
clc
aaa
int3
pop
lahf
sbb
mov
leave
jne
push
mov
push
out
push
arpl
or
outsl
fs
ja
xchg
fistps
sub
lret
cmp
es
incb
adc
push
addr16
xchg
and
rcrl
cwtl
orl
pushf
dec
in
decb
jle
ds
jne
sarl
adc
btc
pop
xchg
rcl
pop
int3
hlt
out
pop
mov
lock
add
or
repz
call
dec
add
pop
dec
add
sbb
cld
mov
inc
add
ss
aas
xchg
aaa
mov
arpl
jge
loopne
push
arpl
jbe
rcrb
clc
fisttpl
sbb
mov
mov
loop
movb
xchg
mov
adc
movsb
and
mov
rolb
mov
adcl
xor
lock
mov
adc
cmp
test
add
xor
inc
mov
cmp
lock
fisubrs
imul
jo
ud1
or
cmp
cwtl
sbb
cmp
lret
mov
and
mov
mov
gs
mov
jnp
sti
mov
jnp
push
incb
in
inc
cmpsb
data16
rcrb
lahf
or
dec
sub
or
add
andb
mov
push
mov
cmp
cmp
add
aaa
mov
fmuls
dec
inc
jno
sbb
sti
xchg
sub
sahf
inc
cld
hlt
pop
scas
pandn
lods
mov
mov
dec
add
rorb
add
test
add
dec
lods
stc
sub
rclb
push
inc
out
mov
mov
mov
data16
sub
loopne
inc
jno
push
mov
sarb
add
aad
add
fsts
cmp
adc
jne
into
pop
or
decb
dec
pusha
add
jno
decb
incb
stos
adc
lds
fnstenv
add
loopne
sub
movsl
aad
add
dec
add
dec
inc
stc
jns
pushf
imul
cmc
jne
mov
sarl
push
sub
dec
pop
add
incb
sti
xor
xchg
inc
or
decb
jmp
xchg
jb
pop
push
rcl
jle
jo
push
and
incb
xor
int3
mov
shlb
int3
and
decb
sub
pop
das
mov
and
push
pop
and
add
inc
add
jl
cmp
add
out
cli
mov
aaa
popf
add
jg
or
push
decb
or
decb
inc
jns
add
test
cmc
scas
adc
into
jo
xchg
cli
fcmovnu
out
dec
or
inc
lcall
incb
cld
xchg
pop
add
out
dec
in
fwait
das
fisubrs
mov
in
ljmp
pop
mov
loope
adc
push
test
out
add
push
mov
add
push
cmpsb
imul
sub
jb
jg
add
in
jmp
aas
sub
decb
jecxz
gs
cld
and
bnd
popa
adc
mov
repnz
in
mov
cmp
mov
xor
aaa
cmpsb
mov
sub
decb
jl
add
cs
stc
es
inc
test
add
sub
decb
das
es
loop
pop
dec
hlt
xor
push
xor
in
or
jmp
mov
hlt
pop
test
sub
lret
lcall
stos
nop
push
jnp
inc
add
fs
and
incb
add
mov
ret
pop
cmp
push
adc
aas
ds
sub
cmp
roll
mov
sub
in
imul
dec
sti
jae
push
cli
arpl
and
mov
arpl
loop
repz
inc
add
cmp
sub
testb
or
push
bnd
xchg
leave
out
sti
movsb
int
mov
es
cmp
cmp
add
mov
xchg
fldt
testl
in
dec
cs
int
enter
cwtl
pop
hlt
mov
adc
cmp
adc
push
incb
mov
sub
movsl
in
pop
std
je
in
incb
imul
push
mov
add
imul
test
jecxz
dec
add
cmp
mov
je
call
and
mov
pushf
in
rcl
insb
pop
mov
subb
push
push
cli
cmp
mov
imul
and
dec
add
inc
add
jmp
scas
loope
sbb
add
inc
add
add
xchg
dec
sbb
inc
ret
hlt
xchg
pop
xchg
xor
jmp
iret
test
int3
mov
cwtl
in
les
lcall
add
and
dec
push
mov
push
shlb
and
jge
or
rolb
sbb
mov
jle
pop
or
pop
and
ret
jbe
sbb
add
pop
movsb
jge
add
lret
xlat
decl
add
adc
jl
xor
sub
pop
xchg
cmp
cmpsl
jo
sarb
mov
and
scas
sub
repnz
jnp
decb
add
fistpll
pop
xchg
inc
cs
pop
sti
inc
lock
mov
push
incb
jo
sbb
add
sbb
test
xchg
and
pop
inc
push
daa
js
inc
add
test
test
xchg
gs
xchg
inc
mov
inc
adc
xor
aas
sbb
inc
jecxz
out
or
sub
bnd
mov
out
loop
inc
mov
dec
scas
cmp
add
mov
out
ja
dec
add
sub
mov
lea
inc
cmp
leave
sbb
stc
insl
in
jb
xor
test
mov
dec
push
mov
inc
jg
push
add
mov
lea
mov
mov
mov
test
fcmovnbe
rcrl
lcall
cmpsb
jg
inc
add
mov
or
mov
mov
xor
fisttps
add
data16
in
pop
lcall
ljmp
jae
push
sub
ja
add
mov
flds
dec
mov
add
fldcw
push
jle
fcoms
fiaddl
lcall
movsb
pop
call
mov
dec
mov
flds
scas
mov
inc
add
mov
or
incb
ljmp
inc
add
jb
in
cmc
sahf
jle
ljmp
daa
loope
jb
stc
inc
in
and
mov
mov
inc
add
dec
push
adc
add
cmp
mov
xchg
cli
icebp
add
inc
sbb
rorl
loopne
add
sub
incb
movsl
pop
frstor
scas
leave
dec
add
neg
or
subl
fistpl
xor
or
incb
cli
sub
scas
push
lret
fiaddl
jecxz
sbb
and
sbb
cwtl
pop
les
loopew
push
mov
inc
iret
leave
stos
mov
ss
pop
mov
fnstenv
mov
mov
mov
push
loop
loopne
cmp
pop
mov
add
cmp
icebp
sub
pop
pusha
jnp
dec
add
cmc
pusha
decb
aaa
or
or
pop
lret
pushf
xchg
leave
lds
scas
jb
jge
in
sub
cmp
std
cmp
jle
xor
xor
incb
das
mov
add
mov
inc
add
dec
incb
and
pop
in
dec
mov
incb
dec
add
es
decb
xchg
test
lods
lahf
pop
sub
rorb
xchg
popf
push
xchg
clc
cmp
fidivrs
sti
loope
lock
incb
push
mov
movsl
rcrb
stos
sub
pop
jmp
dec
cmp
jge
mov
add
shlb
arpl
or
aad
xor
xchg
or
insb
dec
aad
nop
fstl
pop
push
dec
jo
aas
in
xchg
and
add
fisubrs
aam
add
ss
rclb
sbb
pop
xor
clc
add
fcmove
mov
aas
mov
addr16
xchg
mov
sub
add
mov
push
testl
sahf
ficoml
ret
sarl
mov
hlt
cmp
push
or
xlat
hlt
fwait
jp
push
xor
add
hlt
test
pop
add
mov
mov
insb
fcom
sub
gs
sub
xor
xchg
out
xchg
mov
iret
pop
out
sub
decb
cmp
pushf
dec
mov
push
and
stos
lock
pop
xor
fs
jae
pop
adc
daa
enter
pop
mov
std
fwait
and
out
fsts
icebp
xchg
subl
push
inc
add
xchg
dec
jo
hlt
pushl
xorl
push
loope
iret
mov
rcr
mov
jns
fnsetpm(287
pop
xchg
int3
mov
adc
add
jnp
adc
outsl
mov
add
test
inc
sub
push
add
shl
es
dec
rorb
mov
cmp
sahf
fidivs
stos
pusha
add
dec
xchg
gs
push
stos
inc
cld
push
mov
adc
xlat
leave
movsb
cmp
stos
cld
fidivl
jne
movsl
xor
adc
xor
push
xchg
in
pushf
and
hlt
dec
add
repnz
adc
sub
inc
dec
push
incb
pop
xchg
pusha
add
inc
add
jecxz
cmp
push
xor
adc
mov
or
mov
mov
and
jbe
jg
add
cld
int
and
inc
add
aad
pop
fcoms
popf
pop
fwait
lds
mov
add
call
stos
lahf
sbb
push
xor
std
push
decb
hlt
add
xchg
pushf
mov
or
sbb
add
ret
lods
in
or
add
adc
pop
adc
test
test
add
cmp
imul
ja
xchg
adc
inc
add
hlt
test
add
ret
insb
decb
hlt
cwtl
mov
add
dec
add
mov
dec
pushf
xchg
data16
jl
add
icebp
insl
or
fstl
outsl
out
in
push
imul
cmc
dec
ss
addr16
fdivrp
ret
int3
sub
jnp
adc
in
adc
std
mov
inc
inc
incb
loop
jae
fcmovnb
xor
cmpsb
jae
sbb
xor
adc
fs
xor
dec
test
add
jne
mov
jns
inc
add
dec
loop
lds
pushf
sarl
mov
xchg
clc
cmp
xchg
fcmovnb
iret
out
hlt
sbb
ja
lret
daa
in
icebp
add
imulb
push
push
cmp
xor
stc
push
outsb
add
fs
incb
jns
push
mov
add
adcl
jmp
and
ja
addr16
inc
inc
add
xchg
xchg
mov
sarl
mov
add
enter
add
dec
add
ret
and
adc
hlt
pop
pop
dec
inc
arpl
mov
xchg
and
fcomps
jb
hlt
pop
ss
pushf
adc
add
repnz
dec
sub
mov
ret
ja
ja
jmp
mov
outsb
cmp
fidivrl
cmpsb
push
iret
aas
gs
push
leave
pusha
add
jnp
pop
ljmp
pop
and
pop
lods
ret
int
arpl
fcoms
mov
xchg
add
loop
jae
xchg
ror
xchg
inc
sub
mul
popa
sub
std
in
jno
mov
cwtl
lret
push
outsl
mov
test
sub
and
mov
ss
cmpsb
ds
movsl
add
mov
cmpl
xchg
pop
jmp
mov
mov
leave
mov
sub
inc
push
test
add
arpl
or
jp
rclb
mov
pop
out
outsb
add
out
add
lret
xor
shrl
and
inc
dec
xchg
jle
pusha
jl
sbb
add
push
mulb
add
jns
mov
jo
leave
inc
add
lahf
cmp
push
add
incb
pop
popf
lea
push
enter
cmp
lods
inc
popa
fstpt
inc
add
mov
dec
incb
xchg
outsl
xchg
in
cmp
xlat
fwait
xorb
add
int3
scas
sti
xor
or
pushf
push
inc
add
jo
js
fwait
mov
inc
incb
incb
popa
fcmovnbe
add
adc
add
pop
cld
xchg
or
pushf
push
notb
cld
push
ss
jl
add
test
insl
cli
jae
jp
dec
test
and
decb
add
cmp
stos
xchg
pusha
daa
out
lock
cmc
inc
add
push
adc
adc
jecxz
sub
jno
vcvtsi2sdl
es
decb
xor
dec
fistps
mov
mov
int
jo
xor
sub
roll
dec
add
mov
cmpsb
cmp
test
push
fistl
cmc
clc
inc
add
ds
sarl
xor
push
add
je
out
jbe
pop
cli
stos
jnp
xchg
ja
stos
mov
das
inc
xor
jecxz
mov
pop
cmpl
icebp
push
aam
int
pop
push
hlt
mov
cmpsb
out
imul
dec
pop
adc
aam
xchg
mov
cld
jecxz
filds
lahf
add
std
pop
shlb
sub
incb
adc
ds
cwtl
mov
xchg
nop
sti
and
push
fldenv
fnstenv
incb
decb
push
add
lock
add
lods
call
das
gs
in
dec
add
pop
inc
ret
push
xchg
mov
cmp
insl
sbb
pop
sub
icebp
mov
inc
inc
cmp
stos
out
xchg
test
mov
aam
add
push
pop
or
mov
adc
mov
nop
fmull
insb
ss
cmp
jne
pop
stos
inc
inc
scas
icebp
adcl
test
push
mov
pop
xor
pop
or
clc
ja
icebp
sub
xchg
jbe
stos
push
in
inc
add
ss
out
mov
stc
jge
adc
imul
jg
loop
fsts
decb
sbb
outsb
push
xchg
decb
lock
fisubl
push
xchg
subl
inc
push
fsubl
xor
arpl
mov
mov
add
dec
std
stc
dec
cmp
adc
sub
das
clc
roll
outsl
xor
pushf
mov
push
add
imul
inc
add
outsl
inc
sub
pop
mov
cmc
cmc
pusha
add
out
mov
cmp
rolb
dec
out
sahf
mov
or
call
jg
pop
mov
lock
push
jecxz
xchg
and
fsubrp
stos
popa
xor
les
mov
ja
push
incb
push
mov
push
shrl
jb
dec
dec
push
jae
scas
mov
insb
add
scas
mov
mov
fdivs
loopne
popf
out
mov
pop
outsl
fdivrp
rcll
or
incb
loopne
pushf
pop
push
ja
adc
sub
pop
jecxz
icebp
pop
popf
mov
adc
xor
mov
fsubrl
in
ret
into
lods
push
int
fdivl
js
hlt
mov
sub
push
rcl
call
iret
inc
adc
cwtl
xchg
test
movsl
aad
aas
push
int
add
xchg
scas
cmp
ljmp
out
pop
repz
inc
pop
adc
shll
or
cmp
mov
pop
pop
in
fsubr
lock
je
dec
xchg
and
add
int3
push
add
mov
mov
mov
stos
mov
pop
sub
scas
jbe
jbe
add
xchg
cmp
mov
or
or
rorb
xchg
pop
rcl
adcl
inc
lods
stc
dec
add
jmp
dec
add
movsl
push
sub
push
add
xlat
or
movsl
inc
adc
inc
xchg
pusha
decb
ja
out
xchg
fldl
in
fcoml
cs
imul
jp
xor
and
test
cmpsb
je
dec
adc
add
dec
jno
sahf
jb
clc
je
cmp
mov
push
cmp
rorl
mov
sbb
mov
shrb
xor
js
add
aaa
jmp
iret
pop
fs
shlb
mov
add
dec
add
pop
jo
lods
adc
mov
sub
inc
bound
decb
mov
dec
add
pop
or
sbb
addr16
popf
xchg
repz
and
sub
rcrl
bound
jo
inc
aas
sub
call
das
fmul
and
in
cmc
fs
sub
je
incb
add
ret
int3
push
sti
inc
add
push
inc
je
scas
add
mov
mov
addb
pushf
dec
xor
sarb
pop
mov
fsubrl
pop
xor
popf
aas
mov
outsb
and
add
pop
inc
sub
ja
xchg
xor
cmpsl
mov
cmpsb
pslld
adc
fwait
out
sbb
sbb
xchg
pop
jnp
add
mov
std
cmp
add
pop
test
adc
mov
jle
pusha
push
mov
add
call
int
dec
das
in
loopne
test
mov
inc
cmp
gs
jns
fsubp
imul
fcmovne
sub
es
pop
sbb
and
data16
loopne
mov
aam
bound
push
arpl
decb
sbb
xchg
pop
fwait
mov
mov
xor
out
adc
sbb
aad
sub
mov
scas
xchg
lahf
xchg
imul
fisubrs
inc
adc
int
jmp
cli
sbb
outsl
jp
into
pop
cs
and
decb
add
sti
cmp
pop
mov
sbb
sub
decb
mov
push
dec
mov
xor
dec
fisttpll
in
and
incb
js
scas
xchg
out
insl
filds
sarl
loope
xchg
sahf
andl
mov
adc
mov
rol
loopne
ds
push
lods
pop
popf
jne
popf
aaa
xor
test
outsb
add
cmp
cmpsb
mov
ljmp
loope
es
sbb
add
mov
data16
outsl
cmc
scas
daa
jnp
mov
sbb
nop
in
sbb
lret
add
pop
clc
pop
in
adc
add
in
mov
or
decb
int3
push
mov
incb
jb
pop
ljmp
es
in
and
pop
pusha
cmp
add
inc
andb
pop
leave
stc
inc
roll
pop
lret
jge
in
cmp
add
add
das
lea
sbb
jbe
shlb
shrl
mov
fcoml
jl
inc
jns
repz
mov
adc
add
dec
pop
sub
mov
pop
shll
add
mov
jge
adc
pusha
decb
xchg
ret
out
stos
imulb
push
insl
pop
ret
adc
add
addr16
or
push
incb
push
incb
add
in
popa
push
sbb
pop
jle
imulb
mov
jp
into
call
mov
xchg
mov
ljmp
add
lcall
stos
lds
rorb
push
add
and
jne
clc
push
fisttps
out
fidivrs
push
decb
inc
movsb
sbb
iret
gs
mov
xchg
mov
and
incb
jns
fnsave
mov
inc
add
push
push
movsb
icebp
lock
int3
pop
rcl
test
mov
dec
std
les
mov
push
sub
jmp
push
pop
enter
xchg
dec
add
repz
jmp
mov
fidivrl
daa
jnp
outsb
add
adc
fs
push
decb
rclb
out
clc
mov
mov
xchg
mov
mov
jle
sub
add
push
jb
add
int3
sbb
xchg
repz
in
push
shrb
jo
adc
xchg
imul
insb
add
arpl
jae
out
or
pop
mov
in
unpcklps
sbb
add
sbb
loope
pop
mov
fcmovne
pushf
or
or
imul
sbb
add
mov
inc
cltd
lods
xchg
xlat
adc
inc
xor
imul
hlt
push
incb
mov
push
incb
cs
pop
xchg
mov
cmpb
mov
pop
jno
inc
add
fcoml
stos
shlb
add
and
xlat
pop
loopne
jmp
cwtl
or
mov
cwtl
or
decb
mov
mov
dec
pop
data16
inc
mov
roll
repnz
sti
cmpsb
sbb
and
xchg
dec
ljmp
pop
jg
mov
mov
add
push
ret
outsl
xchg
out
aas
adc
xor
lods
ljmp
ja
add
mov
inc
adc
or
mov
repz
outsl
aam
incb
add
imul
sub
sbb
push
test
and
cmp
sub
loopne
cltd
outsb
add
xchg
adc
dec
js
ljmp
decb
push
out
xchg
or
aad
enter
ljmp
adc
add
decb
mov
mov
push
jg
jmp
jnp
add
or
inc
cs
xchg
out
mov
push
jle
dec
std
ret
data16
jg
cmp
add
cmpsl
test
add
dec
out
push
cmp
pop
nop
cmpl
mov
mov
incb
bound
mov
cli
adc
adc
mov
pop
inc
push
sbb
mov
je
lds
repnz
sub
cltd
insb
add
push
mov
decb
outsb
add
ret
xchg
out
popf
pop
pop
cmp
in
into
pop
aad
int3
fabs
rcr
mov
jle
mov
push
adc
fidivrs
scas
out
andb
cli
lds
mov
rcr
dec
aad
adc
jmp
je
jb
mov
jo
mov
jle
in
and
adc
add
insl
call
stos
in
rol
mov
test
jle
imul
jl
mov
jno
in
adc
nop
daa
nopl
cltd
mov
adc
aaa
pop
lds
mov
xor
out
mov
incl
enter
inc
dec
add
insb
lahf
add
adc
and
aad
sbb
jbe
adc
popa
mov
ja
ljmp
in
in
faddl
add
inc
mov
and
adc
pop
sub
decb
mov
iret
jae
mov
cmp
or
and
cwtl
imul
dec
push
add
int3
loop
adc
jecxz
addr16
loope
jmp
sbb
add
call
and
testb
sbb
mov
add
cmp
add
fmuls
cmc
mov
adc
ds
cmp
adc
andb
js
mov
inc
add
imul
test
add
mov
repnz
in
xchg
push
inc
add
xor
pop
xchg
add
lods
mov
test
sbb
mov
adc
mov
jnp
add
ss
add
inc
xor
jne
add
inc
add
mov
stos
inc
push
in
add
outsb
mov
lods
imul
loopne
nop
lret
inc
xor
int
mov
xchg
aaa
cs
mov
jo
mov
dec
pusha
lahf
push
repz
cmp
cwtl
incl
mov
ljmp
decb
mov
xor
call
pop
mov
sub
mov
sub
sub
and
test
pop
pushf
xchg
test
dec
add
add
fsub
xchg
mov
fnstenv
add
je
xchg
mov
add
cmpl
dec
xor
into
or
movsb
jbe
xchg
pop
xor
in
mov
or
sbb
push
dec
mov
add
cs
cmp
add
popa
or
shl
inc
in
data16
test
es
das
lock
movsb
push
and
decb
push
sti
insb
add
mov
dec
int3
rep
pop
leave
mov
push
out
sub
incb
add
fistl
mov
push
andb
ja
lahf
mov
popf
xchg
idivl
fs
inc
mov
push
adc
jnp
xor
loopne
in
pusha
add
lea
stc
inc
arpl
inc
pop
aam
sarb
mov
xor
mov
dec
mov
adc
movsl
leave
in
mov
movb
cmp
sub
sbb
sub
pop
les
push
sub
jno
add
imul
loopne
pusha
add
gs
cmp
gs
sbb
or
fnstcw
imul
mov
sti
add
mov
dec
and
stos
sbb
mov
out
insl
fstl
daa
jbe
movsb
pop
push
ret
mov
dec
arpl
dec
bswap
or
in
jle
jns
add
orb
pop
pop
sbb
mov
adc
sti
jae
incb
add
insl
and
push
adc
in
sub
decb
sbb
loopne
mov
mov
cmp
adc
inc
cmp
mov
push
loop
stos
sbb
mov
dec
faddl
shll
cmpsl
js
cld
jnp
add
jno
push
pushf
and
es
movsl
call
lods
insl
dec
mov
jne
dec
add
sbb
orl
dec
incb
adc
pop
jno
add
std
jmp
push
shll
mov
sbbb
xchg
les
fisubs
add
add
cmp
mov
push
leave
or
imul
jno
mov
or
cmp
cmpsb
cli
daa
push
jg
push
test
sarl
push
or
mov
mov
sub
movsb
out
push
jbe
jecxz
lods
add
mov
xchg
cmc
jnp
scas
jo
test
fdiv
sbbl
lret
push
lret
pop
jno
mov
inc
fimull
add
xchg
sbb
data16
xor
mov
mov
mulb
incb
bound
movsb
sahf
adc
jbe
pushf
push
decb
jno
decb
xchg
push
fsubrs
jg
test
test
dec
add
cmp
rorb
and
inc
sti
fs
fisttpl
xor
stos
or
aaa
addb
cmp
sub
jl
out
xor
call
dec
scas
divl
decl
pop
xchg
push
decb
cmp
jecxz
jns
loopne
add
inc
jbe
xchg
pop
sbb
and
push
fisttps
jecxz
je
sbb
sbb
pop
lret
lods
rol
mov
push
add
ret
loop
add
xor
sbb
mov
add
scas
jns
or
jbe
cld
enter
aam
cmp
mov
cmp
xlat
xchg
out
cmp
mov
pop
adc
dec
test
push
add
fistl
iret
push
loop
lods
pusha
add
lret
pop
repz
call
pop
aaa
scas
xor
push
xchg
cs
out
int3
ljmp
test
lds
in
push
pop
rorl
add
daa
repz
xor
adc
lods
xlat
test
loope
push
test
dec
sub
stc
push
pop
and
adc
clc
cs
adc
mov
jae
fs
xorl
iret
cmp
decb
decb
jp
imul
add
out
cmp
cwtl
lock
stos
push
inc
mov
mov
andl
and
decb
decb
out
jns
dec
add
xchg
lahf
pop
loopne
out
xchg
test
ljmp
jl
lret
dec
icebp
inc
leave
ja
call
icebp
fisubrs
fstpt
inc
mov
imul
and
mov
pop
fbld
mov
mov
cmp
push
mov
adc
lahf
nop
call
push
cmpsb
mov
out
cmp
xorl
pop
adc
insl
cmp
add
decb
incb
add
sarb
mov
lret
sub
ficomps
or
int3
jne
test
xor
add
fstpl
or
xchg
push
out
or
push
mov
jbe
add
cltd
xchg
add
test
ror
inc
xor
push
sbb
push
daa
cmp
mov
div
mov
fcompl
test
inc
sti
mov
loope
int3
jmp
sbb
lcall
aaa
mov
add
rcrb
cs
sub
cli
push
add
add
xchg
pop
shrb
cmp
xor
insl
xor
push
add
sub
mov
fildl
xchg
add
das
data16
incb
cli
aad
pop
and
inc
add
push
insl
cmp
add
fsubrl
arpl
fwait
lret
pop
mov
iret
imul
pop
and
sub
call
cli
xchg
or
xchg
mov
add
mov
loop
add
in
xor
aas
pop
arpl
lahf
xchg
inc
push
stos
das
inc
add
loopne
in
mov
fcmovne
popf
andb
jmp
add
mov
insb
xor
or
inc
out
hlt
dec
mov
pop
mov
lock
jnp
fstl
or
cmp
dec
cs
cmp
mov
adc
push
es
daa
out
shr
mov
imul
and
fidivl
xor
xchg
loopne
xchg
adc
shl
mov
jecxz
lock
addb
mov
stc
in
dec
cltd
xchg
aaa
mov
mov
mov
add
lock
incb
inc
ret
fldl
data16
incb
and
ljmp
add
adc
imul
mov
rorl
and
inc
outsl
push
push
mov
inc
fisttps
in
arpl
add
sub
dec
ret
cmp
sbb
fbstp
and
mov
mov
ret
adc
mov
mov
pop
cmp
lcall
dec
sub
ljmp
mov
xor
cmpsb
js
adc
xor
incb
mov
and
imul
cmpsl
jg
loop
mov
nop
fmuls
insl
or
decb
pop
mov
pop
imull
in
mov
shrb
cmp
mov
incb
push
ficoml
into
test
stos
mov
data16
out
imul
cmp
cmp
incb
sbb
aas
into
pop
mov
test
and
xor
xor
in
mov
out
inc
pop
imul
mov
adc
sbbb
xlat
adc
jecxz
rcrl
repz
or
mov
sub
decb
and
adc
push
sahf
pop
adc
and
decb
jne
mov
push
dec
add
shl
decb
cld
arpl
movsb
mov
add
mov
test
call
or
pop
addl
repz
incb
cli
into
cmp
mulb
pushf
loop
xor
adc
dec
dec
inc
add
clc
sbb
push
inc
mov
adc
fmuls
xor
lret
mov
in
in
jle
hlt
adc
inc
jo
std
in
call
dec
lahf
xchg
jb
push
sbb
sbb
jge
data16
pop
lods
push
dec
dec
jb
add
adc
push
and
add
es
in
loop
loope
les
pop
ret
pop
fwait
jmp
xchg
dec
cmp
and
cli
lea
cltd
and
and
shl
adc
mov
mov
out
in
dec
enter
cmpsl
sbb
inc
mov
ret
je
add
fwait
adc
cmp
sub
inc
incb
xchg
sbb
dec
xor
xchg
aaa
sbb
add
aad
pushl
adc
mov
and
outsl
fnclex
popa
insl
mov
ret
enter
cld
mov
outsb
fs
jb
sarb
xchg
divl
or
push
add
mov
rsm
xor
andl
push
sarb
xor
mov
dec
faddl
cmpsl
pop
add
pop
adc
mov
aam
adc
ljmp
test
cmp
decb
ljmp
mov
xlat
je
outsl
clc
imul
push
cmc
movsb
add
inc
cltd
test
std
inc
incb
mov
daa
add
mov
sbb
add
rclb
mov
popf
mov
sub
decb
imul
adc
clc
mov
xor
push
add
mov
out
push
mov
ffreep
jno
sbb
sbb
push
testl
push
clc
jns
out
scas
loop
xchg
outsl
mov
sbb
das
aas
push
scas
dec
out
sub
mov
ja
imul
stc
rol
dec
jno
or
repz
add
decb
add
cmp
pusha
mov
inc
add
shlb
mov
xchg
cmp
ficompl
cmp
add
insb
push
scas
cs
xchg
inc
cmc
jno
or
incb
push
cmp
adc
add
fcoml
inc
aam
lds
add
imulb
xor
cmc
add
cld
aad
lcall
pop
and
lods
push
xchg
mov
jmp
xchg
insb
add
es
stos
pop
sub
push
or
je
clc
dec
outsl
xlat
jmp
into
ja
scas
dec
adc
shll
in
outsb
decb
push
fnsave
lea
dec
mov
mov
in
inc
mov
push
cmc
daa
push
add
cmp
xchg
add
adc
daa
lret
fs
sbb
xor
add
mov
cmpsb
and
subl
adc
add
std
xor
mov
addr16
cmp
pop
xor
pusha
add
movsl
call
rcr
lret
jb
jmp
repnz
or
mov
insl
pop
rolb
enter
mov
outsb
add
cli
rolb
mov
out
add
add
incb
andl
mov
push
xchg
out
loop
xor
and
add
cmp
icebp
addl
push
xchg
xchg
push
sbb
movsb
and
aas
clc
mov
ficoml
test
call
filds
imul
lcall
roll
in
pop
repz
inc
dec
test
ljmp
enter
call
test
inc
add
and
or
mov
imul
mov
mov
out
or
incb
in
femms
add
inc
mov
mov
lea
loope
cs
sahf
outsl
sahf
mov
add
lahf
jmp
cmp
push
aam
mov
orl
xlat
xor
jnp
sbb
adc
dec
shrb
cltd
mov
mov
aam
mov
pop
or
js
add
or
pop
pop
outsb
decb
repnz
pop
sti
pop
fdivp
loopne
jno
mov
add
fs
decb
cld
pop
out
mov
incb
incb
push
sbb
call
cmp
repnz
addr16
outsl
std
cmp
bound
decb
add
shrb
push
std
xor
pop
imul
jge
popa
xchg
push
add
xchg
inc
add
fldcw
add
jge
mov
pop
sub
mov
fimuls
ds
dec
add
aad
decb
jp,pt
mov
sub
arpl
push
adcb
lcall
mov
mov
pushf
jo
jmp
mov
repnz
decb
push
loopne
mov
cli
sub
lcall
mov
xor
stc
or
sbb
pusha
incb
pop
jmp
sbb
cs
fwait
xor
jge
hlt
push
mov
push
popa
mov
add
scas
sub
mov
sub
jmp
mov
shr
pop
jge
out
pop
sbb
jb
jmp
stos
inc
add
test
lods
dec
jge
jp
jmp
inc
pop
sub
rcl
xor
test
add
mov
jnp
lds
jno
inc
add
dec
add
dec
aad
add
popf
data16
decb
mov
cmp
fidivl
pop
je
test
mov
loope
aaa
dec
add
and
push
cmp
fcmovu
das
xchg
stos
incb
pop
fcomps
out
push
dec
ret
repz
ja
xchg
dec
aaa
in
sub
incb
add
jmp
push
insl
repnz
mov
aad
cmp
mov
push
jle
ret
adc
adc
ficoms
adc
and
decb
dec
cmp
and
decb
fsubr
or
sub
decb
dec
repz
xchg
push
xchg
mov
add
xchg
xchg
aas
mov
sub
adc
push
fiaddl
or
jmp
popa
xor
sbb
sub
xchg
out
das
sbb
fs
and
mov
xor
in
jge
pop
adc
jge
inc
sub
dec
dec
sbb
insb
add
jb
adc
adc
incb
xchg
int
call
push
sbb
push
sub
jbe
popa
das
jmp
sub
pushf
inc
jg
jb
push
mov
jge
pop
adc
jle
test
mov
xor
movsb
and
icebp
pop
cltd
es
leave
mov
cs
or
add
add
pop
push
push
lret
xlat
clc
push
repz
and
xchg
sub
incb
decb
in
xor
pop
mov
decb
incb
insl
ss
add
adc
incb
movsb
lea
add
jecxz
rcr
xor
add
lcall
cmp
xchg
inc
incb
add
stos
mov
jnp
sub
cld
jge
insl
cs
faddl
lock
and
outsb
lcall
lea
daa
jg
in
cmpb
pop
mov
adc
pop
jns
add
loop
out
fidivrl
decb
push
addb
add
add
cs
mov
jge
mov
negl
sub
out
popa
sahf
insl
mov
xchg
call
push
inc
adc
in
pop
daa
ja
jne
mov
aas
mov
push
loop
and
std
rcl
sub
inc
fdivl
das
adc
ljmp
mov
cs
js
decb
add
mov
xchg
and
cmp
mov
xor
jb
mov
mov
sub
add
mov
daa
bound
negl
lods
aaa
jg
pop
lcall
cmp
add
negb
stos
mov
lahf
loopne
xor
jp
pop
das
orb
movb
fstpl
sbbb
movsb
inc
jp
xlat
mov
or
mov
pop
into
jb
ljmp
dec
je
cmovne
out
shl
movsl
or
stos
or
scas
or
push
call
in
out
std
dec
stc
adc
imul
add
mov
inc
mov
jo
mov
or
sbb
in
imul
loop
mov
aas
ds
repz
mov
aad
mov
add
cmp
mov
fnstsw
xchg
sub
decb
inc
add
sti
pop
and
decb
sbb
out
lock
in
or
call
lahf
mov
pop
add
adc
add
lahf
and
sbb
cwtl
loopne
mov
push
mov
iret
clc
jle
lds
pop
fcmove
pusha
add
ljmp
mov
mov
mov
inc
mov
add
xchg
mov
add
xchg
js
pop
loopne
xchg
inc
xchg
cmp
or
out
mov
adc
add
movsl
addr16
push
sbb
jmp
ds
add
mov
xor
adc
test
cmp
jo
js
incb
add
jp
add
and
inc
push
sbb
out
adc
mov
dec
add
aaa
mov
incb
lahf
pushf
jo
negb
pushf
adc
add
cmp
add
cld
and
mov
incb
or
inc
mov
stc
mov
test
xchg
and
lds
incb
inc
test
insl
jns
add
push
inc
add
jg
fldl
insb
add
sbb
decb
data16
jnp
fisubs
or
jl
in
pop
adcl
shll
dec
add
sar
dec
sahf
xor
cmp
and
ja
cmpl
sahf
inc
decb
add
ljmp
or
decb
push
sbb
lret
je
xchg
cmc
xchg
or
incb
add
stc
repz
adc
pop
mov
decb
xchg
mov
pushf
add
jo
add
cmpb
fs
push
lods
mov
das
cmpsl
lcall
sub
imul
inc
test
ljmp
mov
pop
adc
cmp
repnz
add
xchg
and
jne
xor
cwtl
xchg
decb
loopne
push
scas
adc
fidivs
test
ljmp
loope
dec
aad
jecxz
das
adc
xlat
xchg
in
cmp
jae
cmp
add
adc
or
pop
movsb
imul
and
imul
ljmp
enter
add
test
cltd
int3
test
or
cmp
fmuls
or
pop
push
dec
add
cs
push
incb
shl
lds
decb
fninit
mov
loop
add
and
decb
decb
add
xor
icebp
adc
add
andl
test
adc
or
arpl
shl
sahf
or
decb
decb
pop
out
cld
mov
fidivrl
pop
fwait
or
es
mov
add
in
mov
xor
dec
aam
inc
push
outsl
xchg
ret
push
pop
popf
sub
and
cmpsl
adc
xchg
and
data16
repnz
incb
adc
addr16
pop
cmpsl
lds
lcall
pop
adc
mov
ror
pop
cmpsl
add
lea
decb
imul
add
ret
cli
loopne
ss
loop
std
or
add
stos
xchg
jnp
and
sbb
fiadds
mov
movsl
mov
sahf
imul
cmp
mov
add
mov
cli
xchg
pop
pushf
mov
add
sti
cmpsb
dec
add
jne
data16
rclb
out
sub
sub
pop
lods
mov
cld
je
jnp
stos
fsubr
adc
cmp
add
adc
inc
and
fiaddl
mov
cmpsl
outsl
xchg
or
and
sub
mov
add
lcall
pusha
cmp
lea
pop
dec
add
pop
xchg
mov
rcll
adc
mov
shl
xchg
sub
std
xchg
push
push
sahf
mov
cld
fucom
push
lods
cs
xlat
roll
decb
call
lcall
mov
popa
sbb
jbe
rcrb
xchg
popf
pop
push
add
incb
fidivl
sarl
incb
add
xor
dec
in
stos
push
cmpsb
lods
cmp
decb
hlt
lahf
jmp
sbb
cli
mov
add
movsb
idivl
dec
incb
and
cmp
scas
xchg
lods
and
incb
push
int
add
in
sub
jb
cltd
xor
test
lods
arpl
dec
mov
outsl
push
jbe
ret
xor
decb
mov
push
scas
and
and
fistpl
ja
mov
test
sti
adc
push
decb
inc
sbb
xchg
fldl
mov
js
scas
mov
xchg
sahf
mov
add
testl
jp
imul
imul
dec
push
add
mov
or
mov
inc
gs
mov
adc
inc
ljmp
sbb
incb
test
dec
add
aaa
popf
push
fcomi
bound
dec
rcrl
xchg
adc
jbe
xor
and
cmpl
leave
fsubrl
sub
add
mov
in
jae
loop
inc
lcall
jnp
push
add
scas
arpl
sbb
jle
cli
lods
cmp
push
ss
pop
mov
add
pop
cmp
sub
test
inc
mov
jns
fwait
sbb
mov
js
push
adc
stos
cmp
jb
mov
decl
incb
xchg
mov
hlt
into
jp
sti
mov
jnp
enter
incb
xchg
daa
jne
data16
cmp
mov
or
pop
mov
pop
dec
jg
jl
nopl
mov
add
xchg
xor
fstl
sbb
out
ror
mov
ds
mov
xlat
xchg
push
fisubs
jle
add
mov
in
or
mov
fnstcw
shll
mov
push
loop
in
dec
cmp
xchg
nop
jmp
xchg
out
jp
adc
add
in
mov
pusha
incb
and
pop
jo
sbb
fimuls
aam
enter
xchg
ds
jae
imul
add
pusha
fimull
add
test
xchg
fcmove
pop
xchg
shrb
dec
adc
loope
xchg
into
out
addb
dec
and
mov
fidivrl
js
mov
mov
mov
dec
sub
lcall
popf
sbb
jbe
pop
sub
or
xlat
and
sbb
stc
xor
push
lods
push
decb
dec
repnz
out
dec
add
push
add
in
dec
pop
iret
adc
mov
sarl
dec
insb
add
xchg
orl
rorl
inc
xor
pop
jno
mov
stos
cmp
subb
fcmovbe
ds
xchg
or
aad
icebp
mov
mov
xchg
fs
pushf
jge
hlt
or
jge
inc
lret
mov
inc
jbe
cmp
add
sbb
pop
repnz
jecxz
xchg
scas
sbb
mov
aam
dec
rcrb
scas
jne
test
mov
add
lret
add
sbb
mov
push
in
and
out
gs
push
ss
push
adc
orl
xor
xor
dec
lds
mov
add
mov
pminub
cltd
rcrb
fisttpl
mov
push
dec
js
inc
lods
push
fidivrl
add
mov
cwtl
push
lock
out
pushf
popf
pop
adc
aam
sahf
sub
xorl
incb
add
push
arpl
jecxz
mov
adc
push
out
push
mov
fcoms
vorps
add
aam
pop
mov
call
cmpsl
imul
jmp
xchg
lods
pop
pop
or
incb
test
loop
jo
sub
push
std
loope
mov
mov
push
jb
test
jnp
push
dec
sti
xlat
adc
dec
add
push
mov
gs
cmp
inc
or
mov
pushf
pop
addl
push
dec
add
fwait
gs
pop
test
lods
shl
insl
aaa
mov
into
inc
add
xchg
mov
dec
incb
add
in
je
push
inc
in
inc
pop
push
push
loope
mov
add
into
dec
push
pop
mov
sub
stos
cmp
scas
incl
pushf
in
rcrl
pop
sub
dec
dec
sbb
xor
push
outsb
jl
adc
jp,pt
xchg
fistps
sbb
xchg
push
in
ficomps
fisttps
pusha
inc
and
incb
jno
and
xchg
fcomps
xchg
add
xchg
iret
in
dec
cmp
adc
add
and
inc
add
test
inc
add
clc
int3
jmp
push
inc
dec
jnp
loopne
push
push
daa
neg
cwtl
mov
imul
mov
or
add
scas
mov
fbstp
roll
sub
sub
fsubrs
push
xchg
jmp
adc
incb
jp
aas
scas
sti
jnp
mov
addr16
and
xor
mov
popa
sbbb
mov
xchg
das
cmc
test
push
mov
fimuls
daa
sbb
jge
mov
add
jae
lahf
xor
dec
js
or
lds
daa
ss
out
aad
xchg
in
jno
xchg
or
nop
sbb
push
xchg
pop
pop
xchg
hlt
icebp
add
add
pop
fiadds
enter
call
pushf
pop
mov
aas
jp
add
or
push
data16
insl
movsb
cwtl
and
xchg
addr16
cmpsl
mov
lea
xchg
gs
inc
pop
inc
add
scas
sbb
add
pop
cmp
cmp
in
mov
add
push
rcll
stc
nop
dec
add
enter
jne
scas
int3
cs
jae
jo
push
mov
sub
pop
xchg
fnstenv
fcom
ret
sub
rcl
adc
jl
or
fildl
in
hlt
sub
jb
push
sub
insl
movsb
pop
ljmp
xchg
add
fstl
add
push
movsl
push
mov
sbb
and
cmp
push
cmp
movsb
or
incb
or
incb
je
add
sub
decb
decb
stc
mov
jo
adc
inc
incb
xor
xchg
movsl
pop
leave
push
pop
mov
je
ret
inc
add
into
push
push
push
xchg
and
incb
push
dec
push
scas
jecxz
sub
cs
ret
js
mov
push
imul
xlat
es
mov
adc
sahf
mov
xor
add
and
sbb
push
testb
ret
mov
popa
mov
mov
or
sub
mov
popf
cmp
fadd
add
in
adc
fcmovne
xchg
repnz
cltd
repz
scas
test
insl
push
mov
or
imul
test
sub
add
fstl
sti
ret
mov
aaa
popa
hlt
jo
xor
add
aad
adc
decb
push
aam
add
xchg
ljmp
and
adc
jnp
mov
add
push
push
inc
or
dec
test
sub
nop
mov
lods
aad
push
add
cmp
das
jmp
adc
stc
inc
push
sub
sahf
cmc
loope
leave
adc
add
daa
pop
pop
sbb
xor
rcrl
sbb
popf
popf
out
sbb
add
xor
stc
pusha
add
aad
add
add
xor
popa
divb
bound
mov
and
inc
sub
pusha
in
mov
cmp
inc
mov
movsb
mov
shlb
or
in
rorb
stos
adc
jbe
inc
add
aam
mov
push
mov
fs
es
fwait
add
adc
testl
mov
xor
pop
cmp
lods
sub
pusha
adc
cmpsb
test
sub
add
loopne
mov
gs
shlb
push
sbb
call
pop
mov
imul
or
arpl
add
call
sub
push
ljmp
inc
shrl
incb
cmp
adc
cmc
mov
inc
inc
add
pop
pop
adc
movsb
inc
adc
xchg
push
rorl
fistpll
xchg
fdivl
mov
lods
lahf
mov
pop
xchg
mov
mov
push
in
in
test
stos
es
shll
sbb
inc
jg
sub
incb
fnstcw
addb
mov
test
add
jle
or
loopne
stc
pushf
daa
leave
mov
mov
loop
in
nop
mov
inc
popa
insl
push
xlat
mov
mov
das
mov
sub
rorl
outsl
lcall
out
add
mov
pop
lcall
lcall
aas
cmc
loop
dec
cld
adc
mov
push
test
aas
mov
jns
push
rol
push
ljmp
lcall
or
pop
daa
fwait
adc
jmp
xor
jb
mov
inc
data16
and
dec
push
mov
add
pop
adcb
out
or
decb
sub
mov
je
and
decb
decb
xchg
jbe
fdivrp
nop
dec
decb
xor
jl
call
lds
out
js
jmp
popf
and
repz
push
movsl
je
aad
lea
fnsave
xor
aad
out
negl
mov
pop
sbb
shll
lret
imul
lods
je
outsl
jge
outsb
outsl
mov
sahf
or
xchg
push
stos
sahf
sub
decl
icebp
mov
std
popf
cmpsb
xchg
push
push
sub
mov
aas
popf
mov
out
mov
rorl
scas
add
cmp
and
sbb
xchg
sbb
outsl
mov
mov
add
sbb
ficomps
jb
sbb
push
add
add
push
mov
pop
add
test
rcr
mov
jge
sbb
xor
jae
lret
mov
mull
cmp
adc
out
mov
aad
lock
loop
lods
cmpb
cmp
push
sub
outsb
mov
xchg
jge
jne
rcr
sub
sbb
mov
sbb
cmpsb
inc
adc
cli
push
jo
and
dec
enter
outsb
add
jle
arpl
adc
mov
aam
dec
add
repnz
jo
jbe
fidivrl
add
mov
adc
sbb
loopne
dec
add
in
add
rolb
call
decb
add
or
mov
popf
negb
adc
jae
jmp
sub
aam
adc
lret
mov
popf
les
test
add
xor
bndstx
add
out
add
cmp
fidivrs
inc
mov
mov
cmp
loope
add
sahf
inc
and
fisttpll
adc
xchg
clc
ss
insl
lahf
cli
mov
fs
xchg
push
jbe
sti
pop
in
repnz
out
pop
fs
insl
jns
jmp
stos
stc
mov
xor
dec
mov
shr
fldt
popf
xor
mov
into
push
push
sbb
insl
or
incb
add
movsl
rcll
sub
aas
cmp
dec
pop
add
sti
movsb
mov
add
lea
insb
add
adc
clc
in
pop
ds
sbb
cmpsb
shrb
add
add
ficoml
mov
add
daa
js
xchg
lret
addr16
scas
cmp
sbb
lock
fwait
add
movsl
ret
push
in
mov
sbb
lods
adc
cwtl
xchg
cmp
jmp
fcomps
dec
scas
mov
inc
add
push
or
sub
fiadds
add
inc
sarb
in
test
aam
nop
cwtl
loopne
ja
dec
xchg
cld
imul
xor
mov
adcb
sbb
dec
jle
movsl
cmp
repnz
and
add
ror
sti
lock
or
popa
mov
pop
mov
push
adc
mov
jge
pop
jnp
popa
and
ds
inc
mov
or
xlat
and
mov
jge
dec
ret
sbbb
in
jno
std
mov
std
popf
sbb
mov
incb
pop
out
data16
jb
add
lds
sub
data16
decb
loop
add
scas
iret
vpsubsb
lods
xchg
nop
ds
sub
data16
out
loope
mov
pop
daa
mov
jecxz
test
std
movsl
ficomps
mov
ja
add
inc
fisttps
add
je
icebp
inc
loop
add
aas
cwtl
mov
repz
mov
add
outsb
add
into
loop
icebp
in
add
and
decb
dec
cmpsb
loope
and
fistpll
xchg
cmp
add
incb
lret
adc
add
jns
les
pop
sbb
imul
out
dec
add
pop
xchg
movsl
xchg
adc
stos
jns
repz
dec
incb
or
decb
decb
cmp
adc
bound
fcmovnu
inc
sub
pop
xchg
pop
cmp
repz
pop
adc
pusha
fs
div
cli
jmp
scas
inc
jp
push
stos
ds
insl
data16
and
push
sub
ljmp
lods
clc
lret
outsl
adc
add
and
inc
out
lret
mov
xchg
ja
notl
cmc
cmpb
decb
mov
and
incb
cmp
in
in
push
clc
and
and
ss
dec
std
or
mov
ja
cltd
sub
popa
pop
sbb
mov
imul
insb
pop
stc
dec
negb
add
pop
decl
or
sbbb
inc
cli
add
pop
cwtl
fcoml
scas
movl
pop
lods
ret
push
scas
aaa
xchg
test
in
fs
mov
adc
push
es
lahf
movsl
xchg
push
mov
add
adc
jle
in
or
incb
jecxz
shrl
fistpl
lahf
push
cmp
jl
lods
sbb
adc
and
fcompl
andb
push
xchg
jle
jmp
jge
add
mov
xor
xor
sahf
or
and
pop
push
fs
test
pop
mov
repnz
pop
pop
sub
push
inc
add
popf
test
jp
inc
add
test
lods
fwait
mov
stos
arpl
sti
mov
mov
add
adc
mov
jo
xchg
jb
add
test
stc
gs
repnz
aaa
daa
int3
sub
and
sti
pop
pop
mov
pop
inc
add
cmc
into
inc
add
adc
cmpl
xor
flds
mov
inc
sub
jge
xchg
sbb
adc
loopne
insl
jo
test
jbe
in
aaa
inc
xchg
cmp
lds
add
or
mov
mulb
dec
cmpsb
mov
mov
push
bound
incb
inc
mov
ja
ret
or
ss
test
sbb
mov
test
cs
fs
sub
jo
xchg
dec
decb
add
add
cmp
ss
cmpsb
push
adc
push
incb
sub
xor
push
cmp
sahf
push
decb
movsl
xorb
push
push
sub
mov
push
xor
das
test
mov
xchg
mov
into
addr16
xchg
push
in
sub
decb
aad
mov
dec
mov
jge
mov
into
mov
mov
shrb
decb
adc
outsl
aas
pushf
stc
or
lcall
push
adc
loop
adc
fs
push
xor
add
cmp
movsb
push
and
xor
xor
add
int3
mov
test
test
outsb
xchg
icebp
icebp
aas
mov
xlat
or
jns
mov
movsl
popa
xchg
cs
lcall
cmp
decb
stc
lods
push
aas
movsl
mov
add
cmp
adc
pop
popa
test
xor
add
sbb
add
decb
sbb
xchg
mov
add
mov
mov
fmuls
out
xor
pop
insb
decb
decb
in
mov
daa
dec
arpl
sub
daa
cli
fiadds
push
jne
popf
push
inc
rorl
scas
test
pop
xchg
sub
sarl
lahf
arpl
cmp
adc
cli
out
jg
inc
into
out
push
cmp
repnz
xchg
or
es
push
add
jns
push
out
pop
mov
iret
dec
mov
lds
mov
das
dec
lret
in
xchg
mov
xorb
add
lret
cmc
pushl
imul
sti
inc
sbb
push
arpl
add
fdivrs
ss
adcl
dec
popf
pop
pop
dec
decb
add
sbb
xor
loope
fs
dec
imul
jb
mov
add
loope
xor
aas
push
les
int
adc
cmovg
addl
push
mov
mov
insl
or
decb
aaa
mov
inc
out
lret
sub
jne
jmp
out
sub
inc
fisttpll
mov
cs
icebp
inc
add
popa
adc
imul
mov
pop
cmp
mov
repz
dec
aaa
or
jge
lret
inc
xchg
les
sbb
sub
dec
or
adc
enter
inc
add
sub
mov
push
mov
jno
outsb
add
ja
add
push
pop
lds
or
sub
incb
sbbb
mov
adcb
test
out
push
add
mov
cwtl
daa
sbb
mov
xchg
adc
or
iret
pop
jp
sti
sub
xchg
adcl
add
xchg
mov
push
aas
jbe
test
xchg
lea
xlat
inc
inc
loope
inc
decb
dec
add
inc
loope
sub
decb
mov
jg
scas
inc
jl
inc
cmc
lahf
sbb
cli
sbb
scas
mov
push
test
add
push
sti
pop
nop
pop
aam
fs
adc
sub
outsb
aaa
sbb
cld
daa
inc
stos
sbbl
mov
icebp
lcall
ret
push
scas
out
cld
cwtl
rolb
incb
pop
mov
les
mov
aaa
cmpsb
xchg
into
cmp
pushl
mov
add
sub
jo
lock
dec
jg
or
decb
stos
jne
shrl
fisttpl
inc
aam
xor
ljmp
sub
fcomps
xchg
fst
add
add
in
outsb
pop
sahf
sbbb
sbb
mov
loopne
cmpsb
lock
push
cmp
faddp
paddusw
es
lret
dec
jge
lock
sbbl
xchg
jnp
scas
mov
mov
pop
lods
pushf
mov
jno
lret
sub
pop
push
decb
incb
jb
popa
pop
faddp
jmp
mov
jecxz
xchg
adc
or
push
pop
add
decb
add
das
test
decb
push
sub
jno
sbb
mov
hlt
in
xchg
push
in
cmp
mov
dec
fisttps
add
or
fdivrs
xchg
adc
in
xchg
jmp
sbb
xor
or
dec
mov
movsl
mov
add
xlat
push
sbb
lods
push
mov
jmp
jecxz
je
dec
mulb
add
pop
rolb
jne
add
jae
fsubr
and
decb
test
fs
incb
add
incb
insb
add
jbe
and
push
popa
rcll
xchg
sbb
lea
cmc
dec
add
xchg
cld
icebp
jmp
xchg
leave
or
fnop
in
out
inc
pop
dec
add
fmuls
incb
out
arpl
add
push
xchg
add
dec
add
ljmp
and
ja
dec
mov
add
jg
leave
cmp
add
push
repz
jg
cmp
pushf
mov
in
std
and
xor
sbb
ljmp
mov
sub
jno
int3
stc
loop
xchg
cld
mov
fsqrt
stos
or
add
incb
rcll
popl
add
ss
mov
push
add
js
adc
insl
es
decb
xchg
add
adc
aad
js
jp
stc
fmull
js
inc
sub
adc
push
dec
lods
inc
mov
ss
xor
rorl
cli
int
xor
pusha
incb
xor
jl
xor
outsl
popf
js
roll
mov
dec
imul
inc
push
mov
pop
mov
lea
cmp
out
cmpsb
mov
fisubl
std
mov
out
mov
pop
add
mov
mov
ret
xchg
test
sbb
pop
inc
add
stos
sub
std
cld
fnstenv
add
inc
add
jle
pop
cwtl
adc
dec
lods
mov
and
fldcw
mov
inc
push
mov
mov
add
sbb
decb
icebp
mov
mov
inc
jecxz
adc
hlt
sarl
mov
rorl
decb
incb
jg
in
mov
test
das
push
scas
push
sbb
movsb
mov
mov
ja
xor
sbbb
sbb
stc
adc
mov
sti
fsubl
hlt
aaa
lcall
rcrl
outsb
decb
sbb
jb
add
aam
push
inc
decl
pusha
add
pop
pop
jmp
xchg
pop
jle
cli
mov
mov
pop
ja
or
decb
data16
decb
incb
add
ja
push
mov
or
xchg
loop
lret
lock
aas
mov
fstl
and
lcall
add
lods
jg
inc
add
aas
dec
decb
jne
adc
rorl
lods
inc
outsb
add
fs
out
add
mov
jbe
inc
imul
add
xchg
cltd
sti
loope
aaa
cmpsb
cli
sub
xchg
adc
add
popa
xlat
mov
push
push
or
scas
sub
cmp
push
out
cmp
add
aaa
inc
shrb
add
aad
add
push
lret
rcll
push
inc
inc
in
add
jmp
sarb
out
arpl
mov
ret
adc
bound
decb
ret
mov
test
aad
add
adc
pop
jbe
jns
add
loopne
out
movsl
movsb
fmul
push
mov
in
mov
push
ljmp
xchg
int
insb
add
jp
stc
xchg
jle
fisttpl
decl
add
rcll
pop
aas
stos
xchg
idivb
add
pop
negl
mov
imul
insl
mov
incb
push
lea
mov
xor
adc
and
call
adc
jl
cli
mov
inc
fbstp
les
adc
mov
popf
loope
cld
aad
in
aaa
sbbl
shlb
decb
and
incb
sti
sbbb
push
incb
or
decb
lea
sbb
pop
gs
dec
add
mov
mov
add
mov
xor
cmc
dec
data16
pop
or
in
pop
jg
shl
sub
jl
mov
add
xchg
in
loope
jecxz
mov
pop
lcall
jne
xor
pop
fbld
xor
jl
cwtl
movsb
movsl
les
jg
jbe
add
or
dec
bound
pop
xchg
inc
pushf
mov
xchg
adc
rolb
mov
push
outsl
push
pop
cmpsl
push
incb
sbbb
mov
adc
jmp
popa
jb
mov
fmull
xor
les
add
decb
mov
lret
movsb
ret
jb
push
mov
je
or
incb
loop
xchg
push
add
sbb
push
pop
pop
shl
sbbl
add
in
out
imul
popa
jecxz
add
sbb
ds
daa
dec
xor
sar
or
out
xor
pop
push
push
inc
pop
rclb
sti
push
cmc
and
inc
mov
fnstcw
lods
inc
cmp
out
cmpsb
out
sub
aaa
lret
or
cltd
mov
mov
pop
pop
adc
lds
movsl
movsl
jno
pop
cmp
pop
xor
loop
scas
adc
add
sbb
outsl
dec
add
lcall
sub
incb
sbb
dec
bnd
inc
ss
sbb
add
cltd
mov
sub
dec
call
imul
or
mov
sbb
out
sbb
imul
dec
jge
dec
aad
cmpsl
sub
cmpsb
jb
adc
mov
mov
xchg
sbb
jb
inc
test
stos
subl
test
mov
loop
and
jl
in
movsb
pop
push
push
push
add
push
int
or
sti
loopne
adc
pop
int3
add
mov
and
into
jbe
dec
ljmp
pop
pop
or
incb
xor
rorl
orb
jnp
sti
push
inc
roll
lods
js
add
adc
mov
pop
enter
incb
mov
sub
inc
mov
add
pop
inc
add
adc
movsb
jb
mov
incb
outsl
push
add
lds
push
push
sbb
stos
arpl
push
pushf
pop
ret
or
adc
add
subl
inc
outsl
push
incb
inc
jo
icebp
xorb
push
mov
test
es
xor
xor
jns
add
mov
add
xchg
test
aaa
mov
std
mov
mov
mov
test
add
pop
in
cmpsb
jmp
mov
dec
dec
sbb
add
adc
and
incb
add
xchg
popa
aaa
xchg
scas
xor
and
bound
incb
add
lods
adc
inc
mov
mov
push
mov
xchg
xchg
sarb
das
push
or
jb
xchg
push
add
fstl
push
adc
pop
ds
push
scas
int
jl
mov
add
mov
in
push
outsl
sub
cmp
ljmp
icebp
xor
adc
repnz
rorb
imul
movsl
cld
xlat
insb
add
enter
fwait
clc
jmp
push
incb
add
mov
daa
and
inc
add
pop
cmp
add
inc
push
pop
pop
cwtl
insl
add
pop
sarl
xchg
rcr
repnz
cli
inc
in
xchg
stc
loop
incl
pop
push
or
addr16
inc
push
mov
movsl
xchg
sub
mov
nop
lret
je
lcall
pop
fcoms
cltd
scas
inc
add
xor
stc
pop
icebp
and
push
decb
mov
mov
sub
mov
jle
shll
jmp
push
add
data16
cmp
out
sar
push
out
popa
fdiv
or
mov
mov
add
ret
sub
or
cltd
cli
mov
add
dec
incb
into
paddb
std
xor
stos
add
fsubrs
xor
addr16
jns
or
inc
dec
dec
or
inc
xor
jmp
decb
adc
dec
incb
sub
in
cli
or
mov
add
mov
mov
lods
mov
sub
pushf
es
cmp
mov
shrl
add
and
xchg
repz
test
cmp
mov
push
cmp
pop
test
adc
rcl
and
decb
icebp
les
sti
xor
js
clc
ss
sbb
fidivs
loopne
je
jge
jg
repnz
jmp
sarl
push
lahf
cmp
xor
mov
add
xchg
js
xchg
sbb
push
fwait
jns
repz
fs
popa
adc
and
out
fnstcw
dec
sub
insb
mov
fwait
inc
mov
xor
add
rcrl
mov
rcr
and
push
decb
mov
ds
dec
add
adc
xchg
sub
add
push
xchg
rorl
xorb
cmp
movsl
push
add
data16
lcall
adc
jb
jmp
add
sbb
lret
imul
mov
out
shll
mov
inc
sarl
cmc
xchg
cmpb
mov
sahf
nop
dec
mov
sub
decb
repz
lods
inc
mov
daa
lods
repz
push
dec
loop
movsb
outsl
jo
pop
sub
cmp
daa
mov
mov
aam
sti
aam
test
jbe
add
aaa
push
in
andl
xchg
mov
add
or
cs
jb
int
mov
xchg
pop
adc
add
add
les
int
sti
aaa
nop
mov
mov
or
sub
aam
mov
add
mov
add
xchg
sub
xor
cmp
add
popa
inc
out
addl
jae
adc
inc
mov
decb
sub
fsubrl
ss
in
fsubrp
imul
dec
icebp
in
push
xchg
cmp
loope
pop
add
test
push
clc
popf
cmp
mov
add
std
inc
data16
xchg
lock
stc
ret
fstp
shrl
incb
loop
sub
sub
aad
add
sub
decb
jno
scas
mov
pop
loop
clc
daa
sub
decb
cmp
push
push
outsb
xchg
lds
jmp
lret
or
jbe
pop
and
rcrl
or
cli
pop
fistpll
pushf
ret
pop
fs
pop
pop
scas
daa
repz
mov
cltd
sub
outsb
add
inc
add
cmp
adc
adc
es
addr16
fs
push
aad
cmpsb
jmp
mov
subb
inc
add
mov
ret
mov
add
inc
xor
adc
stc
aad
cld
and
in
pop
lock
xchg
dec
enter
sbb
stos
shl
imul
mov
outsl
fdiv
jp
arpl
pop
shlb
cwtl
ficoms
aaa
push
add
inc
add
adc
scas
fiaddl
ret
adc
add
repnz
fwait
cmp
aam
lds
dec
add
je
pop
sti
push
out
sub
jp
fisubl
jnp
movsl
mov
jg
dec
dec
call
and
mov
loop
mov
jp
add
lods
jp
les
mov
sub
jno
mov
adc
add
incb
and
in
repnz
sub
in
adc
mov
adc
jno
cmpsl
call
rclb
ret
mov
inc
mov
mov
mov
sbb
push
add
push
adc
add
pop
xchg
out
mov
mov
xor
fnstenv
loop
out
cmp
mov
movsl
icebp
out
popf
xchg
pop
xchg
in
out
mov
dec
roll
clc
leave
mov
test
int3
adc
cltd
int
incb
xchg
data16
or
fwait
lret
in
and
sahf
cmpb
add
sub
es
ret
subb
in
imul
stos
cmpsl
cltd
ljmp
cmp
pop
test
std
adc
inc
mov
sbb
cli
cld
inc
loope
add
pop
into
psubusb
push
out
inc
add
into
mov
xchg
popa
push
out
sbb
out
lcall
jb
rcl
ljmp
mov
pop
addb
add
clc
mov
pop
and
decb
xchg
ret
lahf
out
stc
push
adc
mov
mov
pop
dec
incb
sbb
inc
jb
in
dec
add
cs
pop
mov
and
decb
mov
mov
xchg
pop
pop
add
decb
and
pop
in
push
add
mov
js
mov
lods
lret
fimull
pop
inc
push
cmpsl
std
mov
lea
pop
into
add
lahf
arpl
ja
std
fsts
mov
dec
cltd
fwait
adc
decb
incb
int
loope
fisttpll
incb
mov
les
adc
pop
add
and
or
mov
sahf
les
mov
rolb
xchg
pop
or
push
add
nop
pop
pop
pop
outsb
add
ficomps
add
neg
test
cmc
sahf
clc
lret
cmc
stc
jnp
mov
mov
add
mov
js
movsb
xor
ds
mov
mov
or
push
aad
aas
stos
pop
ljmp
ret
push
add
jns
jmp
adc
mov
outsl
imul
xchg
lahf
mov
jno
ret
mov
sub
sti
jp
popf
gs
dec
fidivs
mov
je
fcoms
jmp
ret
fldenv
decb
add
cmp
in
outsb
mov
test
insb
mov
push
cmp
lds
not
jo
pop
aas
rcr
add
push
dec
push
mov
mov
mov
ljmp
out
mov
incb
jno
add
push
or
decb
lods
add
xchg
ja
loopne
imul
mov
or
pop
xchg
aam
movsb
push
out
out
inc
add
insb
add
inc
add
enter
mov
fiadds
sub
insb
gs
pop
mov
jae
inc
hlt
adc
test
add
adc
inc
mov
mov
mov
jg
pop
out
adc
lret
sub
shll
mov
shrl
and
push
inc
and
push
cltd
pminsw
and
loop
hlt
ret
movsl
dec
adc
pop
and
sbb
icebp
icebp
push
rcll
mov
pop
xchg
ret
jno
daa
sti
popa
scas
pop
aaa
cli
cld
in
pusha
in
xchg
adc
xor
add
add
pop
mov
pop
sub
push
out
pop
cmp
fchs
mov
mov
dec
into
cli
js
lods
andl
lds
and
cmp
stos
test
and
add
imul
pop
inc
sub
jge
movsl
sbb
clc
scas
sahf
addb
stos
sbb
add
push
in
sbb
dec
add
xchg
jp
shl
repz
ja
fnsave
addr16
decb
dec
inc
mov
pop
data16
aad
dec
add
adc
sbb
cmp
mov
ret
popa
hlt
testb
enter
lret
std
stos
add
pop
push
xor
xchg
xchg
stos
xchg
mov
repnz
lds
pop
xchg
jge
sub
inc
jle
mov
inc
xchg
adc
out
leave
fs
js
sahf
divl
adc
dec
insl
jp
scas
dec
incb
mov
sbb
mov
repz
cld
cmp
scas
cmp
decb
aam
add
loop
mov
aaa
popf
in
sti
mov
add
inc
adcl
ja
or
mov
add
and
mov
in
xchg
mov
jne
ljmp
adc
incb
outsb
add
sahf
cmp
ds
dec
decb
sbb
dec
mov
hlt
or
dec
mov
or
decb
jbe
daa
xchg
dec
add
jbe
cltd
jae
push
test
add
pop
xchg
dec
jb
dec
add
insb
add
leave
repz
and
add
inc
mov
adc
sub
sub
rep
fcompl
push
mov
les
jne
test
cmpsb
adc
repz
push
fs
daa
dec
aas
mov
das
popf
adc
pop
and
push
les
hlt
mov
subl
incb
enter
cmpb
int
mov
sbb
lea
dec
add
mov
int
andl
insl
test
lds
pushf
stos
clc
dec
test
fstp
ja
add
sub
push
mov
std
ja
add
inc
lea
and
insb
add
rcrl
inc
stos
dec
pop
sub
and
incb
cs
decb
push
xchg
inc
addr16
outsb
incb
ds
sub
mov
daa
mov
add
decb
sbb
jmp
cmpsb
dec
add
jl
xchg
notb
int
cmpsb
jmp
repz
mov
pop
sti
mov
add
push
cmc
mov
shlb
movsb
outsb
add
in
add
pop
cmp
jmp
das
sbb
fucomp
test
jge
adcb
jl
mov
push
incb
add
adc
add
xor
in
sbb
sbb
sarb
add
mov
idivl
das
xchg
adc
sub
cld
mov
in
xor
pop
out
divl
addl
test
add
insb
xor
rcll
jo
xor
lods
xchg
ljmp
popa
aas
xlat
cmp
popf
push
popf
dec
inc
addl
repnz
mov
or
inc
xlat
xor
in
fwait
xchg
test
add
sbb
inc
gs
inc
test
dec
mov
std
mov
jne
data16
mov
das
push
add
inc
mov
ds
or
out
mov
divb
popa
cwtl
int3
or
movsb
adc
push
xchg
jne
mov
dec
mov
xchg
jae
out
mov
and
data16
push
dec
cmp
xchg
xchg
push
cvtps2pd
into
push
adc
mov
cmp
xor
xor
lds
xor
cs
dec
add
push
rcr
scas
xchg
or
repz
sar
cwtl
out
sbb
les
decb
xor
push
add
adc
fdivp
fisttpll
sbb
or
sbb
mov
stos
mov
mov
test
add
mov
lret
nop
sub
fnstenv
rcl
lahf
sub
sub
out
add
jne
jmp
cmp
imul
or
incb
mov
jnp
mov
xchg
mov
inc
es
jnp
es
mov
mov
xchg
add
shlb
mov
push
cltd
es
js
mov
mov
mov
mov
pop
cmp
jae
add
es
push
mov
fsubrl
aaa
and
add
sbb
call
test
xchg
pop
idivl
andb
add
sarl
dec
mov
add
incb
mov
test
mov
cld
lahf
mov
outsb
incb
and
pushf
add
xor
push
mov
out
mov
lahf
ljmp
decb
cwtl
cmp
rclb
pop
push
push
daa
ss
sub
mov
or
fcomps
dec
mov
into
sub
ss
incb
mov
add
xchg
xor
or
sbb
icebp
adc
cltd
sbb
outsb
add
push
add
iret
scas
xor
repz
incb
xchg
pop
sahf
lods
sbb
lret
mov
sub
decb
add
insl
adc
sub
sub
incb
enter
loopne
jo
mov
imul
lock
test
push
outsl
dec
jmp
outsl
ljmp
aas
ret
int3
cmp
sahf
nop
pushl
stc
sbb
cmpsb
fsub
inc
cmp
ds
decb
mov
test
gs
sub
repz
mov
mov
incb
add
inc
mov
repnz
in
sbb
jne
xor
add
dec
push
pop
cmp
insl
out
fisttpll
loopne
sbb
add
sarl
repz
dec
scas
sub
pop
subb
pushf
in
ss
push
xor
repz
lret
push
xor
inc
add
push
rcl
sbb
dec
sbb
or
and
add
mov
xor
adc
aam
insb
add
inc
add
fisttpl
decb
enter
jnp
gs
ss
aaa
lret
cmp
pop
js
lahf
repnz
add
les
mov
decb
dec
fbstp
mov
movsb
je
adc
dec
add
decb
out
data16
in
or
insl
lds
xor
out
testb
lock
sbb
test
outsb
call
in
xchg
lea
shll
cmp
dec
fs
sti
xchg
nop
adc
xchg
or
decb
adc
sbb
shlb
testb
jno
inc
add
mov
add
mov
and
add
fnstsw
mov
test
xor
stc
mov
mov
inc
dec
fmuls
pop
sub
stos
testb
outsb
add
jbe
stos
dec
aaa
sbb
ret
pop
aaa
shrl
incb
push
int
mov
xor
and
dec
clc
cltd
xlat
xchg
add
mov
rclb
mov
jle
jp
add
xchg
add
push
cs
es
decb
out
jnp
sbb
cmc
pop
and
jnp
ret
ja
cmp
stos
jl
iret
adc
xor
mov
jl
jno
mov
inc
shlb
mov
repz
icebp
xlat
ror
scas
cmp
das
out
sbb
xor
add
pop
repz
mov
add
xor
das
jae
imul
add
mov
scas
inc
add
popf
jns
and
hlt
sub
outsb
lahf
and
add
add
mov
out
xchg
mov
in
icebp
movsb
mov
inc
add
call
pop
sub
xchg
stos
mov
mov
mov
push
and
mov
rcrl
imul
push
and
cld
mov
es
in
dec
mov
psrld
xchg
push
xchg
add
lock
test
lcall
push
sbb
and
adc
loopne
xchg
push
add
jp
mov
mov
pop
pop
movl
or
decb
jno
and
decb
mov
incb
das
jnp
ficompl
inc
or
test
into
mov
inc
sub
mov
stc
sbb
hlt
inc
xchg
or
decb
and
push
sbb
hlt
clc
push
repnz
bound
out
mov
fdivs
jmp
icebp
sub
cwtl
mov
in
mov
insl
cmpl
psubsb
add
adc
ss
cmpsb
jp
cld
fstl
aad
add
xchg
mov
pop
jecxz
jns
sub
cld
loop
mov
sahf
jae
add
mov
out
adc
push
xor
divb
and
outsb
add
in
adc
xor
inc
hlt
test
jnp
mov
mov
pop
add
jmp
rcrl
test
mov
nop
lret
stc
lock
pop
ret
cmpsl
mov
aas
mov
mov
mov
jmp
jge
sbb
fildll
mov
push
push
or
lock
aas
push
jmp
pop
push
xchg
je
push
mov
push
mov
pop
add
mov
or
ljmp
mov
sahf
fnsave
test
xchg
repnz
add
mov
push
jb
push
sub
mov
push
in
arpl
stos
dec
clc
insb
add
sbb
and
xor
xchg
jnp
mov
incb
aam
je
or
incb
sub
dec
cwtl
and
into
and
cli
add
dec
imul
pop
cs
sbb
ja
add
sbbb
and
aaa
and
mov
fcmovnb
fstl
and
ljmp
cli
mov
push
mov
ds
sub
cltd
repz
push
jmp
test
jmp
bound
jbe
es
in
jnp
adc
stos
or
and
decb
cmpsb
iret
cmpsl
int
mov
incb
out
add
and
incb
mov
negl
mov
fimull
aam
int
in
ret
test
loop
imul
lods
orl
adc
xchg
xchg
adc
add
or
insb
add
cwtl
repnz
xor
enter
adc
test
and
decb
jbe
sub
and
dec
iret
jg
cltd
fwait
in
xchg
xchg
pop
dec
sbb
add
das
push
add
decb
jmp
dec
add
jmp
pop
sar
mov
rcll
pop
lods
shrb
in
notb
dec
inc
or
inc
add
in
sub
mov
aaa
and
xchg
rcrl
xor
inc
sti
jecxz
mov
add
xchg
and
inc
adc
cmp
pop
sub
and
inc
data16
lret
out
addl
pop
js
in
push
cmp
lds
decb
adc
insb
add
sbb
call
jb
pop
jns
adc
jecxz
inc
outsb
popa
sub
hlt
sbb
outsb
mov
add
xchg
popa
jl
stc
jns
xchg
out
push
xchg
pusha
decb
cmp
xor
rcr
mov
nop
mov
sub
mov
pop
cs
sbb
ds
dec
add
mov
ret
mov
mov
cs
out
sbb
es
jne
loope
pushf
pop
pushl
pop
jecxz
lret
pop
mov
add
pop
xor
inc
pop
and
and
cmp
clc
imul
pop
shlb
movsl
mov
inc
add
xchg
les
aaa
jp
cmp
lahf
pop
fs
dec
add
xchg
lcall
fxch
les
pop
adc
inc
xchg
xor
mov
adc
icebp
inc
sbb
in
in
mov
sbb
aad
stc
pop
in
sub
test
add
in
xor
cs
inc
cwtl
out
jmp
data16
icebp
lds
mov
sahf
lock
lods
xchg
jbe
pop
in
enter
push
add
sti
push
and
inc
add
inc
cmp
push
pusha
add
lods
call
hlt
repz
lock
push
jge
mov
mov
cs
xchg
out
jmp
cmp
insl
cmp
add
pushf
xchg
add
sub
sti
cmpsl
push
add
test
xchg
xchg
vunpcklps
add
sub
xchg
mov
pop
cmp
mov
incb
push
pop
scas
cltd
fstpl
inc
out
fstl
add
ljmp
inc
mov
lds
dec
aam
jne
add
add
jnp
cmpsl
out
mov
incb
repz
add
test
mov
mov
add
nop
test
ss
sahf
jg
rorl
add
clc
mov
decb
and
incb
xorb
pop
mov
repnz
push
pushf
std
jo
inc
add
and
push
sti
data16
inc
ror
fs
xor
popf
test
and
mov
je
test
add
or
sbb
mov
outsl
pop
inc
dec
add
inc
mov
mov
mov
add
ljmp
sarb
shrl
push
xor
mov
imul
mov
adc
decb
sub
call
sar
out
movsb
scas
popf
je
fcomi
data16
mul
xchg
leave
imul
add
test
dec
or
jo
inc
sub
popf
jnp
movsl
sarl
test
cmp
add
push
aas
aad
push
pop
imul
xor
add
xchg
jle
call
rorb
adc
mov
mov
mov
mov
cmp
shrl
add
jae
inc
add
fcomps
jge
out
jb
pop
ja
gs
loopne
dec
mov
lods
aam
nop
loop
sbb
mov
lahf
dec
sbb
ljmp
cs
mov
jmp
jl
bound
mov
mov
jl
pushf
mov
decb
lods
mov
mov
pop
mov
mov
xchg
not
mov
clc
jnp
std
rcr
movsl
cmp
movsb
sbb
in
lcall
add
bound
and
push
lcall
or
addr16
inc
push
xor
mov
push
sub
incb
loopne
sahf
rorl
add
incb
stos
clc
loopne
push
mov
pop
sbb
rcrb
xor
jmp
sahf
cmp
push
jno
in
lods
in
rcrl
dec
mov
cmp
add
ss
xchg
inc
add
xor
rcrl
push
imul
pop
add
data16
mov
pop
shll
add
ds
push
add
out
cs
test
inc
incb
pop
xor
lcall
aas
cmpsb
mov
or
inc
xor
push
loop
cmc
imul
repz
fnstenv
imul
insb
incb
aaa
inc
add
int3
mov
aad
outsb
add
mov
adc
aad
mov
jl
jl
dec
adc
rcll
fisubs
push
stos
cmpsl
xchg
adc
pop
mov
pop
xchg
inc
ss
fsts
ret
jns
add
jl
add
lahf
out
xor
pop
inc
add
inc
add
sub
fsubl
mov
inc
push
lahf
or
gs
cmp
das
rolb
sub
push
das
and
xor
xchg
fwait
bound
push
cmp
jmp
test
adc
fcompl
aaa
imul
dec
out
dec
aam
add
jno
lea
fld
orb
pop
pop
xor
sbb
stc
cs
cmp
decb
add
or
inc
pop
clc
push
push
push
shlb
ret
icebp
test
cmc
mov
xor
addr16
xlat
ss
pop
sub
jne
jl
adc
scas
addr16
incb
add
test
loop
mov
and
sar
ret
dec
add
cmp
in
andl
pop
clc
aad
xor
cmp
inc
add
mov
in
pushf
push
mov
lock
out
bound
dec
dec
add
jg
pop
pop
into
aad
jno
sbb
lret
pop
push
cs
lods
insl
rorb
xchg
pop
xchg
ljmp
jle
in
iret
and
jle
add
push
add
sbb
push
lret
and
mov
cmp
jle
iret
jno
rorb
fisttpll
push
outsb
xchg
jl
inc
test
xchg
mov
add
fwait
mov
push
scas
lcall
xor
add
xor
add
jmp
add
das
sbb
sub
incb
sub
and
push
add
jne
bnd
pop
ret
pusha
add
cmpb
xchg
dec
jae
sub
lods
es
pop
adc
ds
rcr
cs
stos
iret
shll
icebp
jp
leave
scas
sub
pop
mov
add
ljmp
fsubl
add
mov
xchg
out
sbb
add
dec
sub
shrb
decb
shlb
adc
sbb
xor
les
mov
movsb
aaa
mov
rcrb
mov
dec
incb
adc
aad
aad
decb
daa
call
push
cmp
aad
nop
sub
push
out
xorb
jno
mov
lds
idivb
scas
cs
popa
sbb
lods
pop
dec
and
es
es
data16
fdivp
rolb
adc
test
adc
xchg
push
mov
dec
fwait
imul
sbb
dec
decb
jp
sub
decb
mov
scas
cwtl
in
and
incb
lods
cmpsb
add
dec
stos
rorl
add
cld
sbb
add
and
loope
dec
add
adc
push
lds
add
ja
add
jb
dec
decb
shrl
pop
call
xor
ss
int3
lahf
or
add
incb
or
and
orb
arpl
add
loop
stos
test
lcall
xor
cmp
mov
cmp
int3
mov
dec
pop
pop
xor
mov
outsb
scas
cmp
push
cmp
out
add
fadds
pop
lods
into
push
push
std
add
int3
call
add
inc
mov
nop
loop
imul
mov
cwtl
sbb
shlb
decb
pusha
add
inc
movsb
and
jg
stos
mov
mov
ss
lret
and
incb
loope
or
js
dec
push
loopne
push
jns
les
clc
mov
pusha
out
clc
xor
es
in
sub
incb
fcmovnbe
ret
cmp
insl
lret
sbb
divl
jge
xchg
es
leave
fwait
and
decb
add
hlt
xchg
insb
add
pop
stos
nop
inc
sahf
cmp
dec
add
popa
lret
fwait
push
sbb
repz
iret
cmc
sbb
push
add
incb
dec
add
inc
add
or
div
sbb
imul
pop
pop
dec
xchg
xchg
shl
pop
xchg
push
lods
ljmp
stc
mov
sahf
cmp
mov
pop
mov
add
mov
push
cmp
fcmovne
ss
jns
es
sub
out
jg
in
repnz
cmp
test
stc
daa
ret
nop
push
add
xchg
mov
sub
fucomip
add
lea
lahf
sub
and
ss
add
xor
push
out
xchg
or
fbld
add
adc
ds
mov
inc
fs
push
insl
push
lret
and
push
sar
mov
ljmp
adc
enter
fsubl
sub
mov
jne
adc
mov
mov
mov
mov
cmp
shlb
push
add
popf
call
call
out
sbb
call
in
push
pop
jmp
jo
cmpsl
push
push
cmp
pop
pop
ja
sub
loope
push
sbb
cmp
insl
decb
test
fs
and
add
pusha
faddl
mov
jl
mov
incb
dec
scas
fdivl
pop
or
push
sbb
fsubp
pop
test
cmpsl
popf
mov
scas
int3
dec
sbb
inc
add
mov
dec
shll
pop
cmc
fwait
sub
dec
push
dec
jne
sbb
in
mov
mov
push
test
imul
test
push
push
js
rorl
jne
mov
inc
add
jl
pop
cs
push
cwtl
int
xchg
push
sbb
push
xorl
cmpsl
xchg
pop
fisubs
aas
pushf
inc
push
mov
xor
into
iret
cltd
cmp
dec
decb
mov
cmpsl
in
ds
hlt
xor
fwait
icebp
or
add
lods
repnz
dec
add
and
sbbl
mov
push
mov
or
push
incb
jb
inc
cmp
add
or
cltd
cmp
push
shl
push
inc
lcall
jmp
inc
fistl
xor
sar
inc
add
sub
arpl
data16
dec
imul
mov
push
push
inc
sti
clc
dec
cmp
or
mov
repnz
addr16
icebp
icebp
sbb
cmpb
es
incb
insb
add
add
add
pop
shrb
decb
inc
decb
rclb
jno
in
mov
push
rcll
cmpsb
or
cli
js
add
sbb
jbe
and
das
jmp
jge
inc
jae
add
in
pop
jns
mov
repnz
xor
in
add
dec
add
inc
out
xor
dec
jo
push
fdiv
mov
sub
xchg
xchg
add
repnz
mov
jnp
arpl
xlat
xchg
cmp
mov
xor
pop
iret
jo
add
inc
int
lods
sub
decb
add
out
call
xor
mov
lahf
xor
pop
rol
jo
adc
xchg
pop
iret
into
push
adc
mov
stos
push
xor
cld
mov
jno
add
jae
xchg
ljmp
cmp
xchg
std
push
daa
stos
shll
divl
add
pop
and
and
insb
add
imul
mov
push
notl
sahf
sti
inc
stos
xchg
cmp
pop
mov
mov
cmp
add
hlt
gs
mov
dec
dec
mov
sti
jbe
pop
shrb
sub
gs
mov
add
push
and
add
repnz
mov
inc
xchg
pop
jb
pop
dec
sbb
jbe
push
add
fsqrt
or
flds
xorl
fdivl
or
aad
lret
sti
mov
lret
push
add
incb
pusha
and
hlt
mov
aam
add
shll
add
and
dec
add
xor
push
mov
imul
flds
add
push
fistl
jg
sti
mov
rorl
clc
ret
cli
lock
insb
add
cmp
add
sti
jp
dec
cmp
out
movsl
sbb
stos
test
mov
data16
xor
add
xor
inc
sub
incb
cld
test
leave
cs
adc
adc
push
inc
icebp
xchg
mov
test
sbb
in
cltd
pop
test
in
cmp
dec
sub
incb
mov
jns
pop
dec
decb
cmp
mov
xlat
rclb
out
inc
jno
aas
pop
std
mov
push
push
nop
mov
mov
incb
add
adc
and
gs
mov
daa
es
lahf
in
sub
decb
testl
fnstenv
xchg
mov
adcl
insl
adc
std
jae
and
dec
addr16
xchg
dec
cmpsl
mov
decb
inc
add
dec
rcrb
xchg
movsb
lock
out
dec
dec
sbbb
addb
rorl
cmpsl
test
imull
mov
loop
pusha
mov
jne
aas
cmp
lods
inc
push
cltd
xlat
hlt
aaa
ljmp
push
incb
add
mov
pop
inc
add
pop
fnsave
sub
in
arpl
mov
jecxz
outsl
cwtl
jae
xor
inc
push
and
pop
pop
es
push
out
add
cmc
mov
add
inc
and
mov
mov
decb
xor
js
fidivrs
test
xor
test
cmp
aam
mov
and
repz
fwait
hlt
daa
sub
add
inc
movsb
cmp
jg
jo
mov
shrl
jo
movsb
pop
sub
les
call
dec
pop
test
scas
jmp
popf
sub
push
pushf
jno
test
insb
add
mov
shll
shll
sub
out
sbb
cmpsb
popa
repnz
outsb
add
mov
mov
or
inc
int3
out
pop
mov
lods
iret
jae
mov
push
ror
pop
and
jg
push
out
xor
movsb
adc
movsl
pop
popf
mov
sti
dec
mov
fstpl
shl
incb
scas
rolb
pushf
fstpt
xchg
adc
push
pop
stc
mov
add
scas
push
cmp
mov
inc
in
add
aam
jl
inc
adc
out
adc
lret
ret
and
je
loop
insb
add
or
adc
fildl
inc
bnd
xchg
je
xor
pop
push
daa
es
scas
or
rclb
xor
add
lret
mov
sarl
sub
in
xor
xor
and
xchg
mov
iret
jnp
add
decb
jg
je
pop
cltd
loop
xor
js
ret
aaa
cmp
add
scas
jmp
xchg
aas
xor
out
jle
add
push
int3
mov
add
xor
test
and
mov
xor
jnp
out
das
js
mov
add
push
fistps
push
inc
cmp
sbb
fidivrl
sbb
and
cwtl
mov
pop
cld
inc
inc
movb
mov
push
or
incb
js
add
jg
sahf
movsb
enter
je
shrl
mov
call
test
mov
xchg
cmp
cld
cs
jns
ja
and
out
mov
mov
xchg
cmp
notb
or
aad
and
push
mov
decb
sahf
mov
lahf
jmp
adc
pop
lahf
jno
cmp
incb
mov
xchg
pop
mov
fdivr
rol
pop
dec
add
testb
enter
cltd
scas
mov
bound
pop
push
scas
shr
movsb
fstps
out
dec
mov
loop
int3
int
xor
add
ror
aad
cli
repnz
xchg
push
add
aam
mov
xor
cwtl
movsl
insb
add
outsl
pop
xor
ss
scas
pop
jbe
fwait
aas
ret
inc
add
dec
hlt
std
mov
push
sbb
add
sub
mov
les
add
add
jne
mov
push
add
sub
outsb
add
add
popf
adc
pop
and
clc
or
sub
xor
jl
dec
incb
pushf
rolb
cli
push
xchg
pop
sbb
xor
ret
or
std
decl
cmp
imulb
cmp
outsb
add
inc
jns
or
decb
or
cmp
test
xchg
add
inc
sub
negb
jmp
cmp
in
sbb
push
enter
hlt
lea
decb
cwtl
mov
sahf
or
mov
dec
add
aas
cmpsb
adc
push
push
mov
push
mov
add
mov
jne
push
nop
push
or
sti
in
cmp
cmpb
into
mov
jns
add
jge
push
sbb
cmc
push
mov
jnp
adc
push
fidivrl
fimull
subl
sub
inc
clc
dec
add
mov
call
sub
stos
gs
clc
and
incb
add
mov
bound
aaa
push
lods
or
adc
xor
nop
and
pop
idivb
outsl
pop
std
call
aaa
dec
jo
incb
lods
mov
add
insb
push
fs
in
clc
and
incb
mov
and
add
rorl
mov
aad
dec
jne
add
mov
add
iret
sub
pop
pop
ret
cmpsb
or
decb
into
pop
and
inc
mov
aas
pop
aas
xchg
imul
pop
xor
imul
or
incb
cld
inc
mov
dec
push
jno
lea
sarb
pushf
and
or
in
pop
sub
sbb
nop
ret
shrl
or
bound
push
xor
cli
in
lds
add
cmove
fldt
add
xchg
or
sbb
push
std
and
xchg
adc
jo
cmp
in
jle
xchg
out
fcoml
jns
cs
mov
or
data16
out
loope
fcmovne
mov
adc
dec
add
dec
jl
idivb
and
add
hlt
mov
dec
cmpsl
lret
mov
add
call
inc
add
push
xchg
or
xor
adc
loop
lock
pop
cmp
add
push
flds
inc
adc
sbb
add
pop
inc
fdiv
loop
mov
add
lods
lret
fcomps
and
or
cmc
fidivl
xor
xor
mov
mov
dec
bts
dec
outsl
pop
xchg
xchg
insl
jne
sahf
loopne
fstps
pop
aam
pop
test
add
cs
dec
pushf
mov
jnp
shl
mov
test
sub
shl
sbb
add
and
and
jmp
enter
ret
pop
or
add
leave
or
popa
sub
or
mov
xor
cwtl
ljmp
add
pop
enter
mov
add
add
iret
or
or
mov
testb
sbb
popf
or
pushf
int3
jmp
xor
rol
fidivrs
mov
mov
fldenv
fdivs
dec
jecxz
or
sub
lds
mov
repz
cli
add
popa
cmc
jnp
push
jp
pop
movsb
dec
mov
ljmp
std
xor
pop
xchg
je
aas
xor
push
and
aam
lahf
rolb
nop
pop
dec
incb
mov
incb
xchg
pop
out
mov
sub
decb
xorl
adc
into
mov
jne
dec
cmp
jecxz
add
shll
lods
mov
cwtl
lods
out
sahf
stos
push
push
ja
mov
pushf
out
jecxz
adcb
pop
sti
stc
and
dec
mov
adc
rorl
incb
and
jl
add
mov
fcmovnb
inc
mov
sbb
mov
mov
dec
push
pop
adc
idivb
idivb
into
add
push
add
stc
loopne
mov
sub
imul
shll
inc
jae
movntq
add
aas
push
das
es
push
loop
adc
jnp
cmpsb
jp
jo
loopne
pop
jle
adc
push
mull
fcoml
push
movsl
inc
jle
arpl
dec
mov
mov
into
inc
jne
loopne
scas
lea
jbe
incb
mov
repnz
subb
push
imul
mov
lret
adc
sub
decb
dec
add
rcrb
ret
sbb
push
and
mov
xchg
add
inc
pop
enter
xchg
pop
into
js
dec
cmpsb
cmp
jb
jge
mov
inc
xchg
mov
sbb
adc
in
adc
pop
hlt
and
mov
mov
rorl
decb
aas
and
out
lock
dec
daa
add
lcall
mov
test
iret
enter
add
and
mov
inc
xchg
dec
push
add
sbb
sbb
inc
out
cli
and
pusha
decb
add
jnp
xchg
dec
lock
sub
idivb
pop
dec
add
cmpsl
pop
cli
and
std
and
dec
jmp
in
movsb
jg
add
clc
mov
decb
rcll
fistl
lcall
push
mov
in
push
add
stos
shll
mov
incb
testl
test
cmc
lret
pop
loope
adcl
fstps
jbe
add
xor
mov
nop
adc
lret
lods
cmpb
pushf
jl
add
push
outsb
out
sbb
decb
add
js
adc
add
stc
insl
ret
adc
cmp
jbe
incb
andb
xor
push
popa
xchg
aaa
pushl
mov
in
pop
jnp
sbb
mov
cmc
out
cmpsl
es
ds
push
push
add
dec
icebp
fwait
stos
pusha
add
jne
sbb
sbb
stos
outsl
add
mov
adc
std
adc
inc
add
lcall
les
sbb
cld
sbb
dec
cmpsl
pop
fs
jb
sbb
jno
outsb
add
inc
lahf
mov
into
in
sub
out
push
xor
xor
pop
fninit
jo
jge
mov
movsl
lcall
xchg
imul
lahf
add
push
call
xchg
out
jnp
cli
xchg
jg
pop
xlat
cmp
pop
sbb
lds
ds
jbe
test
pop
in
add
cwtl
jbe
push
push
adc
fwait
inc
inc
incb
add
in
scas
lds
jmp
neg
cmpsb
pop
sarl
or
movsb
add
pusha
add
sahf
cmc
sub
test
push
insb
add
jb
sbb
add
add
adc
outsb
incb
lods
mov
xor
cmpsl
adc
jno
add
adc
sub
std
push
dec
cmp
jns
nop
fsubrs
mov
call
loope
pop
cwtl
pop
inc
jb
movsl
fadds
push
add
add
sub
push
std
imul
push
lods
out
aas
mov
sub
adc
pop
into
inc
incb
add
lods
out
outsl
test
scas
jb
int
mov
xchg
subl
cmp
add
push
jb
pop
xchg
xchg
push
xor
add
add
sbb
fstpl
imul
xor
and
mov
insb
incb
mov
jne
push
ds
stos
arpl
cld
jge
scas
fimull
mov
push
incb
hlt
mov
lahf
and
shl
xchg
sbb
add
add
dec
add
jp
clc
dec
repnz
neg
mov
adc
jmp
inc
lret
inc
add
rorb
sub
test
in
stos
out
and
push
ficomps
mull
lods
inc
mov
cmp
push
imul
sbb
or
aam
imul
icebp
sbb
xor
movsl
movl
ds
scas
fisubs
sub
movsl
mov
sbb
mov
mov
das
lds
add
fidivrs
test
mov
notl
inc
fisttps
dec
and
pushf
dec
rol
pop
fnstenv
ja
xor
icebp
test
xor
inc
push
jno
pop
outsb
fstpl
dec
or
icebp
add
xchg
ds
add
lahf
ja
leave
bswap
mov
xchg
cmpsl
cmp
popf
fisubrs
lahf
cmpsb
pop
loop
jmp
pop
push
sub
imul
ja
gs
int
push
pusha
add
dec
add
iret
nop
pusha
add
hlt
stos
popf
xor
lret
arpl
adc
xor
daa
out
mov
dec
orb
or
lods
jo
mov
rcr
into
test
push
sub
rcrb
or
rcrb
fxam
cwtl
dec
add
test
sub
incb
pusha
cmp
add
sub
lods
in
aas
and
outsl
xor
stos
scas
dec
pop
push
xor
les
bound
fnstenv
mov
jmp
sbb
pcmpeqd
repnz
add
outsb
pop
xchg
mov
movsb
lcall
data16
call
inc
add
mov
js
lock
add
test
jmp
mov
or
fadds
decb
push
add
jns
pop
cltd
mov
sti
adc
pop
in
jmp
add
call
mov
inc
xchg
inc
stc
testb
jge
pop
inc
cmc
cmp
fsubrs
icebp
add
popf
fidivl
jmp
je
jne
xor
xchg
jb
xlat
fsubrs
pop
xor
push
outsb
incb
pop
add
xchg
leave
inc
add
mov
push
jmp
sarl
mov
mov
push
cmp
repz
mov
imul
dec
mov
add
cld
cmc
or
mov
das
insl
enter
pop
mov
sub
ret
jecxz
and
cwtl
roll
clc
pop
clc
xchg
pop
inc
sub
adc
push
cltd
inc
add
mov
arpl
sbb
cld
out
sub
decb
jns
add
lock
xchg
mov
scas
jne
mov
jecxz
mov
fs
mov
sub
arpl
roll
sbb
mov
or
xor
jg
jnp
lret
iret
jge
loopne
call
scas
in
inc
incb
add
xchg
fistl
int3
popa
arpl
outsb
add
mov
push
lods
pop
pop
inc
movsl
mov
es
incb
rcrb
fistpl
loop
out
jle
mov
loopne
add
aaa
push
into
test
fwait
mov
repnz
ja
negl
add
repz
push
leave
jl
add
hlt
enter
mov
cmp
lcall
xchg
cmpsb
or
insl
repz
jne
jl
repnz
xchg
in
cld
fisubrl
lcall
xchg
ret
or
jmp
lock
inc
ss
repz
clc
cmp
and
mov
lahf
xchg
mov
popa
pop
xor
jb
es
out
aaa
jns
test
and
dec
or
mov
shrl
mov
data16
mov
mov
sub
incb
pushf
jbe
daa
ja
mul
dec
aas
sub
lcall
fs
xchg
and
push
in
jbe
add
pop
aam
movsl
mov
pop
iret
jns
clc
in
fwait
mov
loopne
cs
incb
imul
fs
lret
sub
mov
fs
jnp
and
daa
lods
icebp
or
jae
lds
and
hlt
sub
ds
icebp
ljmp
rclb
push
sysret
pushf
xchg
ficomps
jo
jle
push
add
call
cs
scas
pop
cs
dec
mov
testb
sbb
imul
mov
push
cmp
jge
cs
pop
mov
inc
xchg
mov
and
push
pop
pop
xor
xor
and
sti
ret
lds
dec
pop
insl
jecxz
xchg
incb
decb
add
faddl
cld
repnz
mov
jp
dec
fs
dec
mov
nop
out
outsl
mov
pop
ret
ds
bound
jecxz
fwait
addl
sbb
sub
or
mov
dec
or
and
adc
call
push
incb
dec
add
ds
inc
mov
or
cmp
cli
es
mov
lcall
incb
test
push
scas
inc
shr
cmp
or
pop
repnz
cmpsb
inc
cs
sahf
jge
push
adc
loop
push
dec
mov
jle
add
mull
and
leave
adc
push
pop
jb
std
faddp
sbb
testl
clc
ss
pop
ja
cwtl
add
test
scas
sub
cmp
jg
add
shr
icebp
mov
or
ss
sbb
push
mov
lcall
xor
xchg
jb
out
fmull
bnd
mov
loopne
enter
fwait
sub
insl
xchg
or
mov
fnstsw
decb
aas
lss
lea
add
sar
and
loop
stos
sub
cmp
inc
loop
push
push
sub
call
add
icebp
mov
pushf
xchg
jo
insl
stc
ljmp
pop
outsl
iret
mov
pop
push
idivb
inc
decb
pushf
add
inc
cld
dec
jns
dec
in
mov
add
nop
cmp
jmp
mov
push
scas
aad
leave
jae
push
cmp
push
loopne
adc
repz
inc
dec
jl
loope
rorb
dec
jne
lcall
add
inc
add
inc
xchg
sub
push
and
or
scas
dec
add
xchg
pop
pop
scas
js
decb
lret
sbb
sbb
inc
ffreep
insb
add
js
dec
add
andb
xor
or
adc
ret
mov
mov
or
decb
xor
pop
dec
add
int
sbb
stos
cwtl
jbe
data16
xor
in
testb
inc
add
cmpsb
loopne
mov
mov
push
sub
mov
out
test
or
stc
add
push
lahf
test
decb
sbb
outsl
jo
cmp
mov
in
test
mov
enter
add
mov
jns
add
repnz
add
aaa
mov
xchg
mov
add
mov
std
jecxz
jmp
imul
xchg
ljmp
fldt
add
add
cmc
orl
enter
xchg
xor
ret
jg
fistl
add
cli
aas
jnp
dec
clc
mov
mov
mov
ss
cmp
add
push
rcr
dec
int
pusha
add
ljmp
push
cwtl
pusha
loope
insl
bound
sbb
div
rorl
xchg
arpl
sarl
js
aad
lahf
orb
sbb
das
fnsave
xor
xchg
scas
popa
xchg
xor
jae
aaa
mov
or
adc
xchg
sub
sub
out
rcrb
xchg
push
sbbb
insl
bound
decb
bound
imul
add
lret
mov
ss
dec
lea
lds
cs
xchg
inc
rolb
movsb
add
arpl
sub
add
adc
cmp
or
decb
lods
mov
push
fstpl
pop
jns
sub
push
inc
push
sub
lret
fiaddl
mov
dec
cmp
jg
push
push
ret
pop
mov
mov
pop
mov
sub
aam
cld
cmp
jno
dec
jmp
rcll
outsl
hlt
push
mov
in
sar
xchg
push
xlat
data16
and
dec
iret
dec
pop
sbb
loope
mov
mov
dec
movsl
jne
mov
xchg
fldcw
add
mov
pop
fcoml
test
inc
es
gs
pusha
add
call
add
push
fdivl
shrl
fistl
mov
xchg
ljmp
mov
push
nop
ret
mov
pop
add
incb
mov
pop
mov
push
adcb
in
fsubs
or
xchg
pop
sub
xchg
jge
sub
ja
xchg
and
jmp
sbb
push
fdivr
sbb
or
sub
dec
mov
ret
fbstp
xor
add
call
inc
add
scas
in
icebp
or
rorl
std
pop
xchg
cltd
push
xor
pusha
add
fs
and
decb
add
lods
dec
add
out
mov
add
xchg
outsl
pusha
incb
lods
jnp
inc
mov
push
incb
daa
cmp
jno
pop
sub
jns
jmp
xlat
jecxz
dec
sub
ljmp
and
into
and
decb
dec
mov
cltd
mov
cmp
adc
dec
jnp
ljmp
ds
cmp
cmp
add
mov
mov
push
mov
push
push
mov
jo
mov
add
xor
scas
and
pop
cmp
mov
xchg
sar
jne
cmpsb
lret
loop
jb
inc
add
sub
sub
lahf
mov
pop
shlb
aam
jl
push
mov
push
fstpt
add
and
xchg
sub
decb
dec
scas
jg
cmp
lcall
jecxz
fsubrl
mov
xchg
ljmp
fnsave
add
inc
mov
add
push
dec
enter
dec
add
sub
cmc
jecxz
lea
and
sti
out
cmp
repz
add
push
outsb
add
jae
sbb
or
sahf
and
decb
cmp
test
das
cs
stos
cmpsl
repz
into
dec
pop
sarb
jp
fistps
popf
enter
out
sbb
decb
add
rorb
sbbb
lcall
inc
add
mov
jbe
ljmp
repnz
cmp
in
shll
lcall
pop
out
and
and
xor
jmp
mov
sbb
xchg
push
pop
and
pop
sbbl
pop
ss
add
pop
pop
xchg
adcl
addr16
movsb
sbb
lret
dec
mov
xor
cmp
fsubp
outsb
add
xchg
push
or
add
dec
xlat
jecxz
cwtl
es
xor
daa
mov
inc
add
add
fmuls
push
mov
outsb
add
add
in
shlb
stos
and
aam
sbb
fsubrl
incl
jecxz
hlt
rcrl
cmp
push
cwtl
push
xchg
sub
movsb
insb
incb
decb
fnstenv
nop
imul
cld
out
push
xchg
mov
add
inc
add
incb
add
lret
add
sub
shl
push
dec
dec
xchg
push
lds
fsin
repz
push
lea
add
sti
ljmp
stos
lret
popf
push
gs
insl
pop
loope
inc
mov
mov
sbb
cmp
lahf
lcall
shr
add
in
and
add
dec
arpl
in
inc
sub
ja
mov
add
clc
repnz
pop
jg
data16
fwait
mov
shrl
dec
sbb
decb
gs
mov
ret
fs
addr16
lcall
incb
inc
into
jbe
mov
aaa
jl
dec
mov
add
je
adc
xor
sarb
cs
incb
mov
or
arpl
cmpsb
pop
stc
loopne
push
cmp
inc
xchg
xchg
std
add
xchg
jp
inc
test
xor
pop
add
fstl
add
jge
into
push
int
aas
jle
xchg
leave
dec
call
sub
and
inc
aam
out
jo
jb
movsb
fs
incb
push
cmp
std
inc
push
xor
mov
dec
jg
in
repz
aas
cmpsl
cmpsb
rcrl
test
add
or
aaa
pusha
add
idivl
sbb
dec
out
out
sbb
mov
iret
in
push
dec
push
xor
ficomps
std
mov
test
std
xor
jo
out
xchg
ds
xor
inc
add
insb
incb
stc
ds
pop
push
xchg
out
imul
shll
adc
mov
fmul
in
cmc
add
cmp
outsb
lods
in
jl
adc
xor
fsubrs
bound
in
add
das
sbb
stc
inc
add
pop
scas
arpl
adc
iret
enter
add
lcall
incb
jo
aad
inc
into
adc
push
jmp
xchg
call
in
fildll
sub
or
push
sbb
popa
outsl
sarl
add
cmc
cwtl
test
dec
add
mov
push
xchg
int
inc
cld
lock
mov
adc
push
and
addr16
imul
cmp
scas
loopne
pop
jb
push
icebp
add
test
lret
mov
shlb
pop
jl
mov
push
push
stc
push
or
pop
jp
or
scas
rclb
decb
loop
paddd
cltd
insb
push
xlat
add
mov
mov
nop
mov
lcall
sti
jb
dec
add
xchg
mov
pushf
dec
and
and
dec
jnp
lods
sti
arpl
xor
add
fs
jl
add
sub
and
and
nop
sbb
or
push
flds
cmp
add
jp
loopne
nop
cmp
xchg
xorb
fcomps
incb
sub
imul
out
sti
jo
sub
inc
adc
push
jno
mov
mov
pushf
push
add
das
adc
xchg
jge
sbb
insb
xchg
fucomip
out
adc
fidivs
push
mov
push
sbb
push
ja
orb
jecxz
aam
mov
adc
jbe
xor
jns
jecxz
sbb
xchg
clc
lcall
into
lret
insb
push
add
decb
sub
cld
ja
and
dec
subl
lret
leave
in
enter
out
add
lods
inc
pop
cmpb
iret
call
add
cmp
scas
call
out
add
popf
jg
clc
lahf
ss
popa
shlb
adc
sub
in
rclb
shl
cmpsl
mov
pushf
xor
and
xor
sub
sti
mov
lds
sahf
sahf
loopne
into
adc
inc
enter
jne
es
incb
xchg
sbb
pop
insb
add
ja
ljmp
add
cli
xchg
cmc
movl
inc
loopne
push
shll
and
decb
mov
sub
rorb
dec
cmpsl
in
jns
add
push
adc
popl
test
inc
fstp
jmp
jb
mov
ljmp
nop
push
inc
add
push
xchg
pop
cwtl
rclb
repnz
push
fiaddl
mov
loop
mov
decb
sahf
hlt
mov
pop
add
dec
ja
sub
inc
or
xchg
fadds
lock
lock
mov
mov
aad
push
pop
out
or
rcl
out
scas
sub
add
pop
lahf
pop
sub
inc
ret
push
out
cmp
out
mov
in
mov
icebp
test
sbb
and
aad
mov
pop
inc
or
adc
push
jmp
pop
jmp
push
aam
jno
push
add
and
decb
add
mov
pusha
scas
mov
fcmovb
rolb
sbb
jne
jle
add
xor
cmc
xchg
jle
sub
xchg
dec
les
test
data16
decb
dec
push
aam
out
mov
jae
xor
cmp
add
gs
arpl
jnp
sbb
and
aam
jg
jne
sbb
add
jp
push
aaa
push
fsubl
decb
jmp
in
mov
incl
loope
int3
or
push
sub
push
dec
sub
add
ds
fsubl
adc
shll
lods
frstor
add
call
sbb
test
inc
add
fildl
es
sahf
bnd
int3
hlt
icebp
xchg
sbb
outsb
add
lods
jmp
push
decb
lret
pusha
add
dec
nop
and
roll
pusha
add
mov
mov
int3
xchg
in
out
call
or
mov
popa
insb
add
add
push
pop
mov
mov
mov
lret
pusha
decb
inc
popf
test
fistpl
std
dec
sbb
cmpsb
sbbb
add
inc
jle
out
fldt
add
push
adc
xor
in
and
xchg
aad
clc
cld
cmp
jnp
mull
pop
insb
add
les
push
cmpsb
lock
in
cmp
jmp
add
in
out
mov
stc
fst
in
or
lock
and
inc
test
or
mov
cmp
cmpsl
shrl
lock
add
xor
cmc
push
sbb
mov
mov
fiaddl
incb
ss
dec
sbb
enter
cmp
and
add
lock
xchg
xor
adc
imul
fsts
testl
das
inc
sbb
lods
add
popa
mov
jb
push
mov
ds
jns
int
lcall
cmp
cwtl
fwait
cmpsb
out
inc
add
mov
push
pop
xchg
in
jbe
fbld
jge
cli
adc
lcall
add
add
adc
cli
dec
pop
cs
sbb
std
cmp
sub
decb
dec
pop
movsl
cwtl
in
inc
xchg
cmp
and
repnz
add
sbb
aas
and
xchg
mov
cmp
sub
repz
ret
test
dec
mov
mov
sti
jg
cmp
pop
inc
addr16
loopne
jb
insb
add
cwtl
out
test
decb
or
decb
sub
decb
sbb
fsubrl
nop
fs
sbb
pop
dec
in
xor
cmp
dec
sbb
jl
in
inc
dec
add
push
add
push
xor
test
push
popl
mov
incb
pop
ja
jecxz
and
fadds
test
cmpsl
mov
sbb
loopne
sahf
ret
es
sub
decb
data16
xor
cwtl
repz
int3
into
decb
add
cmpsl
pop
and
and
movsb
popa
push
mov
xchg
xor
pusha
pop
xchg
sarb
mov
add
mov
mov
mov
xchg
lahf
mov
sub
out
out
ljmp
cmp
lret
jno
or
pop
mov
push
sbbl
ret
push
push
mov
mov
xor
xchg
mov
sub
inc
add
push
jae
adc
idiv
cld
cmc
aam
jge
sbb
mov
or
push
push
lret
or
addr16
mov
cmp
imul
aad
call
in
cmpb
add
sar
push
sub
addr16
inc
add
xor
or
in
xchg
push
xchg
sbb
dec
and
incb
inc
fists
test
shl
inc
lahf
and
mov
inc
imul
je
sub
scas
dec
jae
imul
repnz
sti
stos
push
xor
scas
fidivrs
arpl
mov
dec
out
imul
jmp
jle
enter
loope
jmp
insb
adc
push
pushf
mov
add
xchg
cmpsb
fnstcw
fiaddl
sbb
stc
xor
jmp
sahf
leave
repnz
insb
sahf
stos
das
and
idivl
xlat
fimull
add
xor
lods
mov
pop
rolb
pop
mov
xlat
add
incb
mov
outsb
add
push
xorb
jns
adc
xor
add
pop
daa
pop
jne
lret
loopne
xchg
push
ror
adc
add
decb
xchg
mov
shl
popf
cs
cmp
mov
inc
lcall
rcrb
popa
sti
or
jb
sbb
into
shll
cwtl
mov
divl
add
or
xor
and
inc
mov
icebp
insl
mov
popf
xor
push
add
cmp
jne
lea
mov
inc
incb
out
dec
stos
cs
push
icebp
jmp
ret
push
ror
mov
enter
push
mov
sub
inc
add
lods
data16
push
loop
cmc
out
pslld
push
cmp
shll
xchg
inc
repnz
ror
pusha
add
iret
inc
add
mov
add
inc
add
push
mov
pop
xchg
call
or
incb
adc
dec
add
into
popa
push
cs
decb
or
and
decb
fsubrs
cmc
mov
and
add
div
dec
add
sub
decb
xchg
push
mov
icebp
test
xchg
add
sbb
sahf
mov
lret
sub
push
sbb
mov
in
mov
add
fnsetpm(287
int
daa
notb
daa
cmp
and
incb
add
jmp
pcmpgtb
jp
cmpsb
cmpsl
dec
push
sbb
add
adc
adc
jbe
push
adc
dec
mov
add
fld
fs
sub
decb
movsb
or
add
clc
jmp
inc
stc
mov
jp
xor
stos
sbb
sbb
addb
push
dec
dec
sahf
rcl
out
push
add
ja
scas
fdivl
jnp
movsl
lock
xchg
icebp
leave
mov
mov
ret
push
hlt
or
add
sub
outsl
repz
nop
cmp
mov
push
cltd
aad
sub
pop
loop
and
loop
mov
xor
repnz
add
dec
pop
call
out
xor
popa
jb
xlat
add
nop
inc
imul
inc
daa
int
push
mov
xor
imul
or
lods
insl
mov
addr16
shlb
and
jle
test
lret
aaa
push
pop
pop
data16
push
add
shlb
sub
cmp
scas
test
fimull
incb
stc
notb
fsubs
in
xchg
lds
daa
int
xchg
icebp
fsubr
daa
mov
add
and
mov
ret
cmp
sub
mov
mov
pop
jg
ficompl
lcall
imul
es
test
mov
jp
jne
cld
xchg
es
lods
jo
rcl
lods
ret
jns
sahf
jns
shr
int
push
mov
mov
add
pop
xor
mov
loope
add
sbb
leave
xor
aas
imul
cltd
xlat
inc
loop
ds
insl
jecxz
es
jge
sahf
test
add
inc
xor
adc
test
addr16
add
pop
pop
iret
pushl
das
add
and
cmp
repz
mov
sahf
mov
jnp
je
aas
inc
pop
cld
sahf
dec
add
inc
add
mov
push
xchg
or
xor
adc
je
add
in
adc
add
outsb
add
mov
aad
xor
call
add
cwtl
add
lea
push
pushf
ja
inc
inc
xor
aas
pop
lcall
push
fldenv
mov
loop
mov
mov
add
lret
and
jg
jnp
fmuls
movsb
xor
imul
lods
and
incb
movsl
sub
stc
lock
sub
decb
cli
daa
imul
call
ja
push
cld
adc
add
movzbl
mov
ret
mov
add
push
lock
push
