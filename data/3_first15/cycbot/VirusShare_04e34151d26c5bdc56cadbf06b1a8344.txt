cltd
cmpsb
loopne
movsl
loopne
lods
test
mov
mov
loopne
fwait
cmpsl
loopne
shlb
mov
cmpsl
loopne
xor
mov
loopne
push
test
mov
cmpsb
loopne
xor
loopne
cmp
mov
cmpsl
loopne
jae
loopne
push
movsl
loopne
dec
test
mov
movsl
loopne
ja
loopne
sbb
loopne
cmp
loopne
cwtl
test
mov
test
loopne
pop
cmpsb
loopne
and
mov
loopne
fsubl
loopne
and
loopne
das
test
mov
cmpsl
loopne
pop
mov
loopne
add
loopne
call
cmpsb
loopne
lcall
mov
mov
loopne
dec
test
mov
movsl
loopne
test
loopne
call
movsl
loopne
mov
loopne
sbb
loopne
jecxz
loopne
or
mov
loopne
xor
loopne
inc
cmpsb
loopne
inc
mov
loopne
push
test
mov
mov
loopne
or
loopne
mov
loopne
hlt
movsl
loopne
sbb
loopne
repnz
loopne
xor
loopne
mov
test
mov
mov
loopne
aam
loopne
and
loopne
nop
cmpsb
loopne
cmpsl
loopne
xor
loopne
aaa
test
mov
test
loopne
sbb
loopne
pop
movsb
loopne
jo
loopne
adc
loopne
aam
loopne
das
mov
loopne
in
cmpsb
loopne
mov
loopne
andl
jmp
loopne
ljmp
loopne
and
loopne
inc
mov
loopne
nop
test
mov
movsb
loopne
jnp
loopne
adc
loopne
ret
mov
movsb
loopne
mov
mov
loopne
pop
test
loopne
ret
mov
loopne
sub
loopne
mov
mov
mov
loopne
cmpsb
cmpsl
loopne
aad
loopne
sbb
loopne
jns
loopne
lcall
mov
movsb
loopne
pop
movsb
loopne
and
loopne
push
test
mov
cmpsb
loopne
fsubrl
loopne
mov
loopne
pushf
mov
loopne
mov
loopne
mov
mov
loopne
mov
mov
loopne
data16
loopne
cmpsl
loopne
loope
loopne
xchg
test
mov
mov
loopne
and
loopne
inc
test
mov
mov
loopne
inc
movsb
loopne
fisubs
loopne
ljmp
mov
movsb
loopne
sub
loopne
mov
cmpsl
loopne
aas
test
mov
cmpsl
loopne
int3
cmpsl
loopne
xchg
mov
loopne
popf
mov
loopne
test
mov
cmpsb
loopne
bound
mov
mov
loopne
pop
mov
loopne
js
loopne
mov
mov
loopne
mov
loopne
jno
loopne
cmp
loopne
pusha
test
mov
mov
loopne
push
movsl
loopne
inc
mov
loopne
mov
mov
loopne
jge
loopne
push
loopne
or
loopne
outsb
movsl
loopne
or
loopne
out
loopne
pusha
cmpsb
loopne
xlat
mov
loopne
outsb
cmpsl
loopne
sub
loopne
pop
mov
loopne
mull
loopne
sbb
loopne
or
mov
mov
loopne
dec
mov
loopne
repz
loopne
mov
test
mov
cmpsb
loopne
inc
mov
loopne
mov
cmpsl
loopne
outsb
movsl
loopne
andl
mov
mov
loopne
addr16
pop
mov
loopne
mov
test
mov
movsb
loopne
aas
movsb
loopne
sbb
loopne
and
cmpsb
loopne
push
movsb
loopne
mov
loopne
pop
loopne
into
mov
loopne
test
loopne
shll
loopne
fldenv
loopne
fwait
mov
loopne
jno
loopne
shll
mov
test
mov
mov
loopne
inc
movsb
loopne
das
mov
loopne
push
cmpsb
loopne
insb
mov
loopne
inc
test
mov
test
loopne
leave
movsl
loopne
mov
loopne
jo
loopne
stc
movsb
loopne
xchg
movsb
loopne
in
loopne
andb
mov
movsl
loopne
fs
mov
movsl
loopne
sub
loopne
ja
loopne
mov
mov
loopne
push
test
mov
test
mov
mov
loopne
pushf
cmpsl
loopne
xchg
loopne
mov
loopne
jbe
loopne
std
movsl
loopne
shll
mov
mov
loopne
sbb
loopne
test
loopne
and
loopne
pop
mov
loopne
push
cmpsb
loopne
inc
mov
loopne
sbb
loopne
push
loopne
push
mov
loopne
sahf
movsb
loopne
xchg
cmpsb
loopne
mov
cmpsb
loopne
mov
cmpsb
loopne
inc
test
mov
cmpsb
loopne
data16
loopne
mov
mov
loopne
std
cmpsl
loopne
pop
mov
loopne
mov
loopne
test
mov
movsb
loopne
xchg
movsb
loopne
inc
movsb
loopne
sbb
loopne
inc
mov
loopne
jecxz
loopne
fldenv
loopne
xchg
mov
loopne
push
cmpsb
loopne
andl
mov
movsb
loopne
pushf
cmpsl
loopne
loope
loopne
add
mov
cmpsl
loopne
pop
movsl
loopne
push
movsl
loopne
adc
loopne
push
loopne
out
test
mov
movsb
loopne
mull
loopne
lods
mov
loopne
push
cmpsb
loopne
mov
loopne
jnp
loopne
stos
movsl
loopne
add
loopne
call
test
mov
mov
loopne
mov
loopne
jno
loopne
jbe
loopne
sbb
loopne
lock
mov
cmpsl
loopne
aam
loopne
cwtl
test
mov
cmpsl
loopne
inc
test
mov
mov
loopne
fisubl
loopne
ret
mov
test
mov
cmpsb
loopne
in
mov
loopne
fbld
loopne
scas
cmpsl
loopne
dec
mov
loopne
in
mov
loopne
addr16
mov
mov
loopne
and
loopne
push
cmpsb
loopne
dec
cmpsb
loopne
sub
loopne
aaa
cmpsl
loopne
mov
loopne
push
mov
loopne
hlt
movsl
loopne
loop
loopne
shll
mov
mov
loopne
scas
mov
loopne
jmp
loopne
cli
cmpsb
loopne
adc
mov
test
mov
movsl
loopne
mov
loopne
cmp
loopne
fs
mov
cmpsl
loopne
je
loopne
shll
mov
movsb
loopne
or
mov
loopne
sbb
mov
loopne
xor
loopne
push
loopne
int3
mov
loopne
fsubs
loopne
movsl
loopne
mov
cmpsl
loopne
push
cmpsb
loopne
push
test
mov
test
loopne
in
loopne
out
loopne
movsb
loopne
xchg
movsl
loopne
sahf
movsl
loopne
shlb
xor
loopne
xor
mov
loopne
and
loopne
push
mov
loopne
repnz
mov
test
loopne
shll
loopne
loope
loopne
mov
loopne
mov
loopne
and
loopne
fldenv
loopne
iret
test
mov
test
loopne
and
loopne
mov
loopne
in
loopne
mov
loopne
add
test
loopne
fisubl
loopne
xor
loopne
push
mov
loopne
xchg
mov
loopne
push
mov
loopne
mov
loopne
jbe
loopne
mov
loopne
mov
test
mov
mov
loopne
loope
loopne
mull
mov
movsb
loopne
pop
mov
loopne
xor
mov
loopne
mov
cmpsb
loopne
shll
loopne
lea
loopne
stos
mov
loopne
addr16
adc
loopne
xor
movsl
loopne
loope
loopne
out
loopne
jle
loopne
outsl
mov
loopne
cmp
movsb
loopne
cmp
test
mov
cmpsl
loopne
mov
loopne
jne
loopne
jl
loopne
xchg
mov
loopne
pop
mov
loopne
mov
mov
loopne
je
loopne
sti
mov
loopne
adc
loopne
std
movsl
loopne
jp
loopne
cmp
mov
mov
loopne
cmp
loopne
push
test
mov
cmpsb
loopne
mov
loopne
aas
movsb
loopne
out
loopne
sub
loopne
cmpsl
mov
loopne
fsubs
loopne
adc
loopne
xor
loopne
outsb
mov
loopne
cmpsl
cmpsl
loopne
xchg
loopne
lcall
mov
movsb
loopne
data16
loopne
fldt
loopne
push
mov
loopne
mov
mov
loopne
dec
movsb
loopne
xchg
test
mov
cmpsb
loopne
cmpsl
loopne
loope
loopne
inc
mov
loopne
jmp
loopne
pop
cmpsl
loopne
in
loopne
imul
mov
movsl
loopne
pop
movsb
loopne
aad
loopne
add
loopne
andl
mov
cmpsb
loopne
andl
mov
cmpsb
loopne
push
mov
loopne
xchg
cmpsb
loopne
loopne
int3
movsb
loopne
push
test
mov
movsb
loopne
ja
loopne
imul
loopne
stc
movsb
loopne
dec
test
loopne
xlat
movsb
loopne
int
loopne
mov
loopne
mov
movsb
loopne
xchg
loopne
mov
cmpsl
loopne
push
mov
loopne
loopne
loopne
shll
mov
movsl
loopne
aam
loopne
int
loopne
test
loopne
xor
loopne
mov
loopne
xlat
movsl
loopne
mulb
loopne
pop
test
mov
cmpsb
loopne
lods
mov
loopne
test
loopne
ds
loopne
shld
shrl
loopne
pusha
test
mov
test
mov
test
mov
movsl
loopne
push
cmpsl
loopne
push
movsb
loopne
jno
loopne
push
mov
loopne
fsubs
loopne
arpl
loopne
mov
loopne
mov
mov
loopne
xor
mov
cmpsb
loopne
in
mov
loopne
iret
cmpsb
loopne
xchg
movsl
loopne
mov
cmpsb
loopne
out
loopne
pop
test
loopne
loop
loopne
shll
mov
test
mov
mov
loopne
push
mov
loopne
fsubl
loopne
test
mov
loopne
mov
mov
loopne
mov
loopne
xor
cmpsb
loopne
xchg
mov
loopne
shll
push
mov
loopne
fldenv
loopne
jne
loopne
shll
loopne
shld
mov
mov
loopne
cltd
cmpsb
loopne
push
mov
loopne
shll
mov
movsb
loopne
mov
mov
mov
loopne
bound
loopne
push
cmpsl
loopne
int3
cmpsb
loopne
cmc
mov
loopne
lods
mov
loopne
test
loopne
cmp
loopne
frstor
loopne
shlb
mov
movsb
loopne
out
mov
loopne
icebp
test
mov
cmpsb
loopne
icebp
mov
loopne
in
mov
loopne
out
mov
loopne
dec
mov
loopne
inc
cmpsb
loopne
subl
loopne
stc
test
mov
cmpsb
loopne
stos
mov
loopne
mov
movsb
loopne
insb
test
mov
mov
loopne
mov
movsb
loopne
push
mov
loopne
mov
loopne
or
loopne
popf
mov
loopne
push
mov
loopne
dec
cmpsl
loopne
in
loopne
fsubrs
loopne
ja
loopne
scas
test
mov
cmpsb
loopne
mov
loopne
mov
mov
loopne
jo
loopne
aam
loopne
shlb
loopne
lods
cmpsb
loopne
adc
loopne
dec
movsl
loopne
mov
loopne
mov
loopne
inc
movsb
loopne
ret
mov
movsb
loopne
add
mov
cmpsb
loopne
pop
cmpsl
loopne
mulb
loopne
out
mov
loopne
bound
loopne
lret
mov
cmpsl
loopne
ret
mov
loopne
in
cmpsb
loopne
dec
mov
loopne
add
loopne
mov
mov
loopne
mov
cmpsl
loopne
jns
loopne
or
loopne
cmp
loopne
hlt
movsb
loopne
jp
loopne
add
mov
mov
loopne
dec
movsb
loopne
mov
movsb
loopne
repnz
loopne
clc
mov
loopne
add
mov
loopne
bound
loopne
ret
movsb
loopne
mov
loopne
hlt
test
mov
movsl
loopne
bound
loopne
stc
cmpsb
loopne
push
movsb
loopne
dec
test
mov
mov
loopne
push
mov
loopne
inc
movsl
loopne
mov
mov
loopne
lcall
mov
cmpsb
loopne
push
movsb
loopne
xor
loopne
fsubrs
loopne
add
loopne
test
mov
movsb
loopne
movsb
movsl
loopne
push
test
loopne
inc
movsl
loopne
cli
movsl
loopne
shlb
mov
cmpsb
loopne
out
movsb
loopne
shlb
loopne
and
loopne
jmp
cmpsb
loopne
movsl
loopne
jo
loopne
push
test
loopne
cltd
cmpsl
loopne
sbb
loopne
ss
loopne
or
loopne
mov
loopne
mov
mov
loopne
inc
mov
loopne
test
mov
movsb
loopne
sbb
loopne
and
loopne
out
loopne
xchg
movsl
loopne
shll
loopne
add
loopne
mov
movsl
loopne
adc
loopne
adc
loopne
xor
loopne
xchg
mov
loopne
push
mov
loopne
das
test
mov
test
mov
cmpsb
loopne
or
loopne
jg
loopne
js
loopne
and
mov
movsl
loopne
mov
loopne
insb
cmpsb
loopne
push
movsl
loopne
aaa
mov
loopne
or
loopne
sub
loopne
push
cmpsl
loopne
or
loopne
mov
mov
movsl
loopne
cmp
loopne
dec
movsl
loopne
shlb
loopne
push
movsb
loopne
insl
mov
loopne
out
loopne
sahf
cmpsl
loopne
push
cmpsl
loopne
std
movsb
loopne
inc
movsb
loopne
scas
mov
loopne
jb
loopne
out
mov
loopne
cmpsb
loopne
cmp
loopne
popf
cmpsb
loopne
cmpsb
loopne
jnp
loopne
pop
test
mov
cmpsb
loopne
jl
loopne
push
mov
loopne
jo
loopne
add
loopne
push
loopne
jo
loopne
dec
cmpsb
loopne
push
movsl
loopne
push
cmpsl
loopne
dec
mov
loopne
aam
loopne
mov
loopne
mov
cmpsb
loopne
xor
loopne
scas
movsb
loopne
andb
mov
cmpsl
loopne
bound
loopne
cpuid
loopne
or
mov
loopne
das
movsb
loopne
cmc
movsb
loopne
lea
loopne
pop
cmpsl
loopne
inc
mov
loopne
adc
loopne
push
loopne
mov
mov
loopne
cmpsb
loopne
or
loopne
or
test
loopne
push
test
loopne
mov
loopne
inc
mov
loopne
mov
test
mov
movsl
loopne
insl
mov
loopne
push
cmpsl
loopne
movsb
loopne
xor
loopne
sub
loopne
mov
movsl
loopne
dec
movsb
loopne
mov
mov
cmpsl
loopne
and
mov
mov
loopne
shlb
loopne
stos
movsb
loopne
xchg
movsb
loopne
mov
loopne
push
mov
loopne
and
movsl
loopne
cld
test
mov
test
loopne
or
mov
mov
loopne
sbb
mov
test
mov
movsl
loopne
test
loopne
insb
mov
loopne
push
cmpsb
loopne
in
loopne
stos
test
mov
movsb
loopne
xchg
mov
loopne
lret
mov
cmpsl
loopne
in
loopne
jp
loopne
jbe
loopne
std
cmpsb
loopne
out
loopne
loopne
loopne
cmp
mov
loopne
sub
mov
test
mov
movsl
loopne
push
test
mov
mov
loopne
movsb
test
mov
mov
loopne
dec
mov
loopne
frstor
loopne
dec
cmpsl
loopne
popf
test
mov
mov
loopne
pop
mov
loopne
or
loopne
mov
loopne
and
loopne
aas
cmpsb
loopne
mov
loopne
xchg
movsb
loopne
and
movsl
loopne
sahf
cmpsl
loopne
xchg
mov
loopne
mov
loopne
out
cmpsb
loopne
mov
cmpsb
loopne
jb
loopne
xchg
movsb
loopne
sub
loopne
inc
cmpsb
loopne
or
loopne
push
test
mov
mov
loopne
adc
mov
cmpsl
loopne
pop
cmpsl
loopne
lods
movsl
loopne
sub
loopne
mov
loopne
and
loopne
pop
movsl
loopne
xor
loopne
xchg
mov
movsl
loopne
pop
mov
loopne
stos
cmpsb
loopne
nop
mov
loopne
push
cmpsl
loopne
and
loopne
frstor
loopne
push
loopne
shlb
mov
cmpsb
loopne
push
movsl
loopne
mov
loopne
in
mov
loopne
cmpsl
test
mov
mov
loopne
out
mov
loopne
inc
movsl
loopne
pop
cmpsb
loopne
dec
mov
loopne
mov
loopne
dec
mov
loopne
mov
cmpsb
loopne
dec
mov
loopne
cmp
loopne
sbb
loopne
mov
loopne
dec
test
loopne
mov
loopne
imul
mov
movsl
loopne
test
loopne
jg
loopne
fisubl
loopne
cmp
test
mov
movsb
loopne
sub
loopne
add
loopne
ljmp
loopne
int3
mov
loopne
add
loopne
andb
mov
cmpsl
loopne
stc
cmpsb
loopne
push
movsb
loopne
call
movsl
loopne
andb
mov
mov
loopne
fsubl
loopne
test
loopne
andb
mov
mov
loopne
dec
mov
loopne
shlb
mov
mov
loopne
or
loopne
bound
loopne
sub
loopne
loope
loopne
stc
mov
loopne
cmp
movsb
loopne
push
mov
loopne
stc
mov
loopne
ret
mov
mov
loopne
add
loopne
aaa
mov
loopne
adc
loopne
pop
cmpsb
loopne
jp
loopne
mov
mov
loopne
leave
test
mov
movsl
loopne
mov
loopne
je
loopne
lahf
mov
loopne
stc
mov
loopne
ja
loopne
ja
loopne
inc
cmpsb
loopne
cmpsl
mov
loopne
xor
cmpsl
loopne
mov
movsl
loopne
lods
cmpsl
loopne
out
movsb
loopne
cmp
loopne
xchg
loopne
lea
loopne
test
loopne
fsubs
mov
mov
loopne
xchg
mov
mov
loopne
or
mov
loopne
ret
cmpsl
loopne
cmpsb
mov
loopne
out
cmpsb
loopne
icebp
mov
loopne
sub
loopne
fsubl
loopne
mov
loopne
fisubl
loopne
xlat
mov
loopne
pushf
movsl
loopne
xchg
mov
loopne
dec
cmpsl
loopne
test
movsb
loopne
pop
test
loopne
mov
loopne
jg
loopne
sbb
loopne
ljmp
mov
mov
loopne
jge
loopne
mov
loopne
insb
mov
loopne
scas
cmpsl
loopne
jo
loopne
mov
cmpsl
loopne
and
loopne
mov
loopne
fwait
movsl
loopne
sbb
loopne
mov
loopne
add
cmpsl
loopne
inc
test
loopne
mov
cmpsl
loopne
ja
loopne
inc
movsl
loopne
lret
test
mov
test
mov
movsb
loopne
cs
loopne
mov
loopne
xlat
mov
loopne
jnp
loopne
frstor
loopne
and
loopne
jmp
loopne
popa
cmpsb
loopne
cld
mov
loopne
test
mov
test
mov
mov
loopne
test
test
mov
movsb
loopne
cli
test
mov
mov
loopne
inc
mov
loopne
inc
movsl
loopne
mov
test
mov
movsb
loopne
imul
lcall
mov
test
mov
test
mov
test
mov
mov
loopne
ret
cmpsb
loopne
add
loopne
inc
movsl
loopne
pushf
movsl
loopne
lods
mov
loopne
jnp
loopne
out
loopne
pop
movsb
loopne
lea
loopne
cmpsb
movsl
loopne
andb
jne
loopne
std
movsl
loopne
mov
loopne
jnp
loopne
sub
loopne
mov
mov
loopne
mov
loopne
and
loopne
cwtl
movsl
loopne
adc
mov
test
loopne
aaa
cmpsl
loopne
out
movsl
loopne
mov
cmpsb
loopne
pop
test
mov
mov
loopne
ljmp
mov
mov
loopne
xchg
movsl
loopne
jl
loopne
sub
cmpsb
loopne
mov
test
mov
test
mov
mov
loopne
out
cmpsl
loopne
cli
cmpsl
loopne
inc
test
loopne
scas
cmpsb
loopne
adc
loopne
call
cmpsl
loopne
lock
loopne
add
loopne
outsb
cmpsb
loopne
jo
loopne
sbb
rorl
pop
data16
faddl
clc
sub
stos
outsl
jg
insl
add
add
add
cmp
mov
xchg
shll
add
clc
bound
add
add
cmpsl
clc
sbb
adc
add
pusha
add
and
and
add
repnz
add
gs
inc
clc
call
add
imul
pop
or
add
push
jmp
add
cwtl
leave
sub
add
mov
dec
stos
fldt
adc
add
add
and
add
clc
adc
add
add
add
add
clc
and
lret
xchg
mov
popa
add
lret
repnz
test
or
xchg
stc
aaa
sub
mov
add
scas
jae
add
cmp
clc
xor
add
imul
add
sar
test
add
or
or
clc
jle
jle
push
xchg
xchg
clc
xchg
imul
into
out
jle
add
mov
mov
add
add
shll
mov
add
add
xor
cmp
enter
push
add
push
add
xchg
cmp
inc
clc
xchg
fwait
mov
sub
clc
sahf
sbb
je
call
add
cmp
out
push
xor
lahf
cmpsb
clc
adc
add
jge,pt
outsl
mov
and
add
add
add
add
mov
and
add
clc
dec
repnz
dec
movsb
clc
xchg
sub
pop
sub
add
add
clc
dec
pop
cmp
sub
clc
fmull
xlat
clc
dec
adc
add
shlb
clc
lahf
aam
mov
clc
mov
pushf
adc
add
jno
add
popf
scas
add
add
and
add
clc
add
cli
mov
test
pop
cmp
in
jecxz
lods
icebp
out
push
xor
add
outsl
sar
scas
es
in
push
or
mov
and
add
cmp
inc
add
test
pop
mov
add
add
add
clc
cwtl
push
adc
add
movsb
clc
scas
ljmp
xchg
cmp
sbb
add
cmp
cmp
dec
ss
aas
sub
clc
and
add
xchg
lret
cli
mov
add
mov
je
clc
popa
add
lahf
ret
clc
jle
clc
es
xor
add
clc
cltd
clc
stos
dec
sar
mov
movsl
clc
or
mov
pop
pcmpgtw
int3
inc
clc
mov
push
pop
xor
xabort
mov
add
mov
imul
add
mov
jb
add
jne
sbb
cmp
insl
into
into
push
aam
add
adc
out
add
add
push
adc
add
xchg
fmull
cmpsb
clc
cmp
adc
clc
data16
push
inc
add
rcr
arpl
add
xchg
mov
add
clc
insl
jl
or
sub
clc
into
int3
scas
jno
add
clc
pop
mov
add
lret
fsubrp
xchg
cmp
clc
sub
xchg
pop
nop
cmpsl
clc
popa
add
loopne
cmp
data16
xchg
shr
jmp
stos
das
out
arpl
add
lock
jne
clc
stos
push
push
aam
clc
add
add
add
cmp
clc
add
add
clc
in
mov
jp
cmp
mov
or
add
add
loope
xchg
jecxz
imul
or
add
push
fmulp
push
arpl
add
in
and
add
es
mov
shrl
jno
add
add
add
out
mov
jne
cmc
xor
add
add
pop
movsb
clc
lahf
ret
fists
add
mov
add
mov
cmpsb
clc
ret
fwait
xchg
xchg
fbstp
pop
push
add
lcall
push
dec
mov
scas
mov
xchg
inc
clc
scas
popf
inc
add
sbb
add
add
imul
pop
inc
add
pop
pop
insb
scas
push
call
mov
jns
pop
cmp
adc
add
jecxz
jnp
ret
jbe
or
mov
fldcw
add
jo
add
lea
mov
dec
pop
imul
cli
add
add
xchg
jnp
add
add
sar
and
add
lcall
das
or
add
clc
sbb
jae
add
clc
cmp
icebp
pushf
push
inc
clc
fmul
dec
shll
add
add
cmp
clc
bound
add
scas
in
push
test
xabort
pop
aam
in
xchg
jge
add
add
add
insl
cmp
dec
icebp
xor
add
clc
mov
add
mov
push
in
xchg
aaa
cmpsb
clc
aas
pushf
lahf
xor
add
sub
add
add
add
data16
inc
add
xor
or
add
add
mov
add
mov
or
jnp
inc
add
add
add
leave
cmp
cmpsl
clc
adc
add
add
inc
clc
xor
add
and
add
jns
iret
cmp
dec
jmp
fldcw
clc
xchg
popa
add
iret
sub
add
add
jo
add
adc
add
insb
sub
clc
xchg
enter
clc
imul
pusha
add
lcall
clc
adc
add
mov
add
dec
fwait
dec
jnp
add
add
add
fwait
sahf
inc
clc
mov
or
pushf
out
jle
clc
loop
add
add
fsubs
add
clc
icebp
add
popa
add
jg
push
xchg
xchg
xor
add
add
add
jecxz
inc
add
xbegin
add
add
clc
lahf
adc
add
frstor
add
jnp
sar
add
or
dec
data16
out
adc
add
add
push
std
ja
enter
dec
ret
clc
sbb
cmp
dec
pop
inc
clc
and
clc
jmp
sbb
clc
push
add
addr16
push
dec
sti
leave
mov
add
hlt
sbb
xchg
sub
add
mov
add
and
adc
je
fwait
lret
jo
add
out
cmpsl
clc
roll
js
clc
mov
add
cmp
inc
add
cmp
adc
mov
scas
cmp
fcomi
xor
add
add
or
ss
push
ja
clc
scas
rcrb
sti
cmp
push
int
adc
add
jmp
clc
fdiv
add
add
clc
in
fidivl
call
mov
lahf
cmp
add
std
sub
jae
add
clc
dec
inc
clc
inc
clc
cmp
jnp
mov
clc
inc
clc
push
out
frstor
add
inc
add
cmp
clc
mov
negb
jne
xor
loopne
lret
adc
add
clc
xlat
inc
clc
lea
sti
sbb
xor
insl
adc
mov
mov
xor
add
adc
clc
push
add
dec
lea
mov
add
push
add
sub
add
lods
je
ja
push
jp
mov
rorl
dec
xor
dec
fldenv
cmp
add
cwtl
fnsave
clc
out
fabs
clc
pop
es
or
add
mov
inc
clc
fs
cli
fstl
add
testb
movsl
clc
mov
dec
dec
cmp
mov
clc
movsl
clc
call
vorps
clc
sub
add
mov
fs
fidivs
xchg
push
insl
aaa
vmwrite
add
ficomps
frstor
add
jle
push
stos
mov
outsl
mov
clc
cmp
jno
add
jl
out
add
add
enter
mov
sub
clc
mov
into
inc
add
fadds
cli
call
xlat
mov
mov
sbb
adc
add
clc
cmp
add
add
pop
mov
mov
add
mov
xor
add
clc
mov
clc
and
add
push
nop
mov
das
add
add
cmp
add
push
add
jae
add
enter
push
add
insb
adc
push
add
cltd
pushf
mov
fistl
ss
xchg
adc
dec
mov
mov
add
add
clc
cwtl
ljmp
das
mov
sahf
mov
enter
add
leave
inc
add
in
popl
add
repnz
mov
add
enter
pushf
rolb
add
clc
lahf
test
call
clc
xlat
ja
aad
pop
inc
add
inc
add
or
mov
clc
xor
add
clc
loope
xor
add
mov
add
jne
jp
call
pop
pusha
add
sbb
add
add
scas
movsb
clc
adc
clc
xchg
mov
add
loope
popa
add
dec
movsl
clc
sub
add
mov
rcrl
add
cmp
lret
add
movsb
clc
mov
mov
aas
aad
clc
adc
add
cmp
clc
cmp
mov
aam
testl
or
sti
inc
clc
cli
xchg
cmpsl
clc
shll
add
popf
into
es
sub
sbb
clc
pop
xchg
inc
add
push
add
inc
clc
dec
lcall
loope
xchg
repz
cmp
add
inc
clc
xor
add
add
push
xchg
xchg
lea
test
mov
icebp
add
add
ret
clc
clc
pushf
movsl
clc
sub
cwtl
pop
xchg
sub
add
adc
in
mov
aam
clc
mov
push
jge
push
hlt
out
push
in
sub
mov
add
push
push
ja
mov
add
cli
je
shrb
clc
sub
rorb
add
add
scas
push
jge
cmp
adc
add
icebp
hlt
push
sub
xchg
lret
ret
xchg
xchg
jae
add
clc
or
clc
neg
dec
inc
add
out
pop
cmp
add
clc
loopne
fists
add
cmp
clc
imul
repz
pop
sub
aaa
cmp
push
add
inc
clc
lock
add
cmp
mov
inc
add
pop
pop
xchg
dec
dec
dec
xor
add
clc
testl
add
or
add
jg
xchg
test
push
mov
clc
aad
shl
clc
jge
jbe
adc
add
icebp
dec
push
das
test
jge
mov
clc
fdivrs
cs
fs
aad
mov
xchg
jnp
add
data16
sbb
and
add
lcall
add
dec
mov
or
inc
add
fsubr
jb
add
pop
pop
mov
add
out
rorb
clc
push
jecxz
aas
cmp
clc
das
dec
rorl
js
cmp
cld
xor
add
out
ds
add
mov
jp
clc
dec
lods
push
clc
xor
repnz
add
cli
mov
clc
xlat
mov
or
outsl
outsl
data16
push
cmp
mov
clc
clc
mov
or
xor
add
push
mov
scas
rolb
movsb
clc
in
jno
add
inc
add
dec
mov
mov
outsl
jp
mov
add
add
push
mov
jmp
jne
add
cli
sti
xchg
cmpsb
clc
mov
mov
stos
adc
add
add
and
add
clc
psrld
clc
xchg
sub
jo
add
call
add
add
or
clc
repz
add
add
lcall
clc
clc
sar
leave
xchg
xlat
pop
push
ljmp
mov
mov
repnz
add
cmp
in
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
or
cld
jmp
subb
clc
dec
inc
clc
cmp
loop
xchg
cld
fwait
add
add
adc
add
xchg
ret
clc
push
add
pushl
add
ss
ret
add
clc
out
test
or
adc
adc
xchg
jge
outsb
and
add
mov
clc
mov
clc
pop
and
add
dec
sbb
movsl
clc
and
add
add
clc
jo
add
and
add
jne
inc
clc
dec
dec
mov
addr16
pop
fneni(8087
clc
call
mov
pop
insl
sti
push
add
add
add
cmp
add
dec
and
add
lea
inc
add
or
insl
daa
clc
sahf
push
push
int
mov
add
add
clc
adc
add
mov
ss
ret
and
push
cmp
ret
clc
xor
add
cmp
add
pop
inc
add
aaa
adc
fnsave
add
hlt
out
ja
jns
cld
inc
add
adc
add
clc
adc
add
dec
sbb
inc
clc
in
sti
cld
aad
clc
sub
xbegin
and
add
fs
xchg
cwtl
pushf
jb
add
cmpsb
clc
push
scas
adc
push
add
aaa
pop
inc
add
mov
xchg
in
pop
pop
ret
clc
pop
pop
scas
pop
inc
add
clc
xor
cmp
lcall
push
mov
xor
add
lret
pop
clc
mov
jmp
push
add
jge
pop
cld
jmp
xor
sub
test
clc
push
inc
add
movsb
add
mov
repnz
clc
dec
imul
adc
add
outsb
aad
repnz
cmp
mov
ja
lock
clc
aam
jns
sub
ljmp
add
push
xchg
in
hlt
enter
pop
adc
add
clc
jmp
jmp
or
arpl
add
clc
mov
and
add
in
shll
clc
push
or
push
add
hlt
sbb
clc
mov
mov
jmp
push
add
imul
inc
clc
jo
add
jle
add
addr16
bound
add
add
mov
xchg
fldcw
clc
mov
js
clc
pop
mov
dec
xchg
jecxz
dec
gs
stc
jge
arpl
add
add
mov
xchg
push
pop
jecxz
adc
add
pop
sub
mov
add
test
cwtl
cmp
clc
outsb
inc
add
mov
test
lods
sbb
scas
mov
cmp
mov
jns
pushf
cmp
sub
imul
add
jb
add
sbb
jne
dec
cltd
mov
mov
pop
outsb
lods
sti
mov
imul
add
add
add
in
push
xchg
ljmp
clc
cld
sub
push
dec
cmp
mov
clc
push
lods
and
add
ds
ja
clc
xor
add
dec
nop
aas
ds
inc
add
xor
add
emms
aad
add
sar
clc
sar
xchg
xlat
out
inc
clc
negl
clc
xor
push
jne
mov
adc
add
ret
clc
lahf
into
cltd
lods
jge
mov
clc
cltd
mov
fnstcw
cmpsb
clc
xlat
mov
add
clc
sub
sti
inc
clc
cmp
cmp
add
push
push
xor
mov
xchg
imul
pop
test
call
sub
mov
clc
jae
add
addr16
jl
out
sar
add
or
lods
bound
add
add
enter
data16
rdmsr
add
cmp
clc
movsl
clc
lods
into
in
add
add
or
fstps
clc
inc
clc
cmc
rorl
mov
clc
pop
addr16
xor
pop
inc
add
add
fldl2e
or
dec
dec
inc
add
call
clc
dec
jl
add
push
fs
je
clc
jmp
out
push
add
dec
jne
mov
jge
mov
cld
pop
dec
cld
jge
clc
mov
hlt
aam
clc
loopne
jl
fidivrl
clc
sbb
std
ljmp
sub
sbb
clc
call
clc
pop
ljmp
mov
int
clc
mov
movzwl
cld
jmp
jge
mov
mov
ss
xor
add
fldcw
clc
mov
pop
adc
clc
aaa
jle
push
lea
cld
jmp
xchg
xchg
sub
rclb
cmp
jmp
pop
jg
dec
bound
add
cltd
lods
into
mov
push
jno
add
clc
loope
stos
scas
outsl
pand
mov
ds
out
addr16
aas
clc
jno
add
jge
ljmp
mov
cmp
outsb
mov
outsl
hlt
push
cltd
push
add
sub
pop
pop
js
mov
sub
aad
clc
call
mov
add
add
add
rcll
clc
imulb
clc
xbegin
add
add
pop
icebp
xor
fisubrl
ljmp
add
outsb
xor
and
add
add
add
jne
clc
clc
cmp
add
cld
jmp
adc
enter
push
dec
jg
clc
fistl
add
mov
clc
test
add
fs
fxch
adc
lahf
clc
pop
clc
xchg
repz
inc
add
mov
xabort
jecxz
mov
clc
sti
dec
outsl
pop
ret
clc
call
repnz
cmp
cmp
adc
popa
add
ret
pop
clc
decl
test
jmp
test
add
sub
add
or
mov
clc
mov
add
dec
mul
clc
xchg
inc
clc
out
sub
clc
xor
push
clc
int
mov
add
xchg
ret
jae
add
clc
dec
fcmovnu
push
jmp
mov
add
shrl
or
add
add
sbb
insb
lods
ss
clc
push
mov
cld
jmp
sub
cmp
sub
xchg
pop
push
repz
add
cmp
add
cmpsl
clc
sub
jle
push
add
call
jmp
xchg
push
outsl
es
ljmp
push
out
push
aam
jb
add
mov
lahf
out
jl
clc
dec
shr
add
add
pop
test
ss
ret
sub
add
out
push
mov
stos
imul
test
add
cld
jmp
add
add
clc
pushf
mov
outsl
popa
fs
jmp
cmpsb
das
sbb
or
add
aas
insb
xor
add
mov
or
je
js
jmp
push
jg
xor
add
aas
sbb
push
and
add
jmp
inc
in
repnz
add
addr16
pop
fdivrs
incb
add
mov
ss
ret
push
sub
add
add
xchg
or
add
fadds
add
mov
add
nop
sar
inc
clc
cmp
cmp
jecxz
bound
add
mov
inc
add
inc
clc
adc
add
test
test
jbe
pop
sub
clc
je
cmp
cld
jmp
sub
divl
add
add
sar
insl
jle
xor
mov
repz
push
add
xchg
fildll
clc
sub
clc
fwait
add
add
add
add
icebp
fnstenv
add
ret
clc
or
lcall
jmp
daa
clc
fldcw
test
clc
inc
clc
cmp
sub
mov
clc
clc
lods
cmp
clc
and
lods
or
add
cld
jmp
dec
jg
clc
mov
adc
add
add
inc
add
scas
dec
dec
stc
mulb
test
add
sbb
add
clc
loop
loopne
decl
test
add
cld
jmp
and
add
sahf
sbb
jbe
sar
adc
add
xor
add
clc
das
cli
ss
out
stos
das
push
xchg
sbb
add
dec
hlt
mov
mov
cld
jmp
xor
cmpsb
mov
xor
add
add
mov
vmwrite
jns
cmpsl
clc
push
add
sar
sbb
inc
add
roll
clc
mov
inc
add
aam
gs
sub
cli
outsb
jne
pop
and
add
clc
scas
in
shlb
add
cltd
mov
add
cli
jg
inc
add
sbb
clc
clc
std
inc
add
mov
add
or
mov
ret
cld
jmp
sub
test
repnz
add
xchg
and
add
add
jmp
dec
cwtl
nop
inc
add
mov
adc
add
dec
xchg
clc
in
push
repz
and
add
add
or
clc
mov
clc
adc
add
clc
adc
clc
jl
add
imulb
clc
mov
iret
jle
clc
test
scas
jo
add
mov
xchg
sbb
add
clc
sbb
or
add
dec
jnp
cmpsb
clc
out
and
add
clc
dec
insb
pop
clc
xlat
dec
bound
add
xor
add
test
and
add
add
nop
jns
inc
add
mov
sub
outsb
loopne
pop
out
bound
add
test
xor
add
sar
add
xchg
mov
clc
shlb
add
loopne
cmp
add
cld
jmp
or
clc
xor
add
add
jnp
sarb
sbb
adc
add
andb
mov
mov
clc
mov
add
cld
jmp
sub
pop
popa
jb
add
clc
dec
xchg
xbegin
pop
sti
outsl
into
pop
mov
rcpps
add
faddl
clc
decl
and
add
aaa
das
cmp
aas
daa
clc
cmp
mov
xbegin
xabort
in
adc
add
clc
imul
clc
xchg
lea
cmpsb
clc
mov
or
sar
and
add
add
mov
clc
cmp
xchg
dec
sbb
add
fdivl
clc
sbb
ret
and
add
cmpsb
clc
inc
add
pop
insb
lods
xchg
stos
dec
clc
popf
jne
push
add
movsl
clc
enter
pop
icebp
iret
inc
clc
in
dec
jp
cmp
clc
mov
dec
xchg
enter
out
jno
add
imul
add
push
add
sar
add
lods
out
sub
sbb
clc
and
fs
sti
or
xor
add
sbb
mov
loop
jb
add
pop
xchg
mov
lret
in
xor
add
clc
mov
push
inc
add
push
xchg
adc
movsb
clc
and
add
add
jecxz
shrl
mov
add
jnp
outsb
ja
repz
dec
cmp
je
ljmp
add
cld
sar
clc
mov
jmp
test
ja
xchg
jg
xchg
inc
clc
mov
clc
adc
add
add
mov
add
add
xchg
movsb
clc
xor
add
add
mov
outsb
int
add
sar
add
cld
jmp
xchg
jmp
clc
pushf
push
repz
jae
add
add
test
lods
fnsave
clc
mov
push
cld
jmp
sub
sar
clc
xchg
inc
add
pop
mov
js
cmp
xbegin
jnp
test
mov
add
dec
push
add
dec
in
fwait
mov
add
sub
mov
cmpxchg
add
xor
cs
or
jae
add
addr16
dec
testl
clc
add
add
add
mov
mov
in
lahf
xbegin
jmp
cmpsl
clc
testb
clc
cmp
inc
clc
push
daa
clc
shl
clc
mov
data16
add
add
add
add
or
add
sbb
fsub
clc
xor
add
clc
ja
add
dec
lcall
ljmp
lret
fucom
clc
dec
lcall
add
clc
ret
clc
push
add
cmpsb
clc
pop
clc
mov
mov
xchg
icebp
push
clc
dec
xor
add
fnstcw
hlt
push
add
cld
xchg
push
add
or
add
mulb
clc
sahf
lods
rcl
mov
scas
gs
dec
imul
add
xor
jnp
ja
add
cld
mov
stc
xchg
adc
jge
xor
cld
jmp
pop
ja
add
add
fs
xchg
loope
inc
clc
imul
rcll
pop
xchg
push
gs
negl
inc
clc
xbegin
add
add
jb
add
mov
adc
clc
pop
jecxz
push
push
mov
mov
mov
ss
ret
test
jmp
xchg
ja
imul
add
push
cmp
dec
xchg
lock
add
add
cs
jg
dec
test
out
mov
mov
add
add
fdivs
nop
lret
mull
add
clc
sbb
es
add
jmp
pushw
xor
add
dec
jns
jns
dec
mov
cld
jmp
cmpb
add
enter
js
popa
add
sahf
sub
outsl
cwtl
jle
imul
add
pop
clc
or
add
inc
add
ret
mov
add
add
inc
clc
mov
add
pop
cs
xor
decl
add
jmp
fadds
add
cmp
clc
movsb
clc
aam
push
add
inc
clc
mov
sbb
sbb
jmp
fwait
mov
clc
push
add
ja
add
xchg
out
xor
add
add
loopne
lods
shll
add
clc
cmp
adc
add
clc
push
xchg
cmpsl
clc
in
xchg
dec
cmp
rcrl
add
cld
jmp
test
nop
jg
add
add
add
scas
ss
fs
rcr
xor
add
stos
jmp
mov
clc
cmp
push
mov
fisubs
pop
xor
add
rorb
lret
fstl
add
or
xabort
clc
mov
clc
aam
clc
cmp
cmpsl
clc
outsl
mov
pop
add
pop
add
dec
xor
add
pop
mov
or
xchg
push
add
push
add
add
add
pop
out
icebp
dec
ficompl
out
outsl
dec
fistpll
pushf
out
out
bound
add
clc
jne
xor
add
clc
mov
add
popf
jno
add
add
jecxz,pn
cmp
add
ss
sub
push
add
and
add
mov
sbb
repz
jmp
outsl
sbb
aas
and
add
dec
call
pushf
arpl
add
clc
clc
fs
popa
add
repz
add
add
ficoml
push
loop
adc
add
mov
add
lahf
jae
add
mov
clc
rcrl
clc
movsb
clc
cmc
pop
sahf
adc
add
add
or
jle
mov
scas
fstl
xchg
sub
xchg
test
add
cmp
sbb
add
fstps
add
clc
jg
add
je
sarb
clc
jbe
xor
add
clc
cmp
call
cs
jo
add
jbe
mov
dec
sub
inc
clc
mov
jmp
dec
sub
pop
xor
add
add
bound
add
mov
mov
call
insl
loopne
cltd
inc
clc
add
add
clc
fiaddl
mov
add
movsl
clc
and
clc
xlat
cmp
in
dec
lock
xchg
scas
pop
aaa
ja
clc
repnz
jecxz
ret
cmp
cld
jmp
sub
cmc
test
or
cld
jmp
je
sub
incl
jmp
jmp
outsl
das
xchg
jno
mov
clc
cmp
add
mov
cmp
aas
outsl
icebp
push
add
add
inc
add
mov
adc
cmpsl
clc
sar
clc
imulb
cld
jmp
sub
sbb
push
sub
ss
clc
push
and
add
popf
sbb
mov
sbb
clc
aas
jno
add
cmp
clc
dec
mov
add
sahf
pop
fbstp
clc
xchg
jmp
cld
jmp
adc
xchg
adc
add
clc
lcall
jae
add
inc
clc
mov
cmp
xchg
je
mov
and
xchg
or
sahf
popf
ret
or
add
or
clc
leave
adc
add
shll
add
and
icebp
dec
jg
xchg
das
dec
mov
sbb
cld
jmp
cmpsb
pop
push
dec
adc
add
clc
or
push
add
add
loope
ret
lret
push
add
sahf
xor
add
nop
inc
clc
push
or
push
cld
jmp
fwait
sbb
adc
stos
dec
and
add
add
jmp
xabort
popa
add
mov
cltd
call
lret
add
insl
enter
clc
btr
add
and
inc
clc
xchg
xor
js
sub
add
clc
aaa
test
clc
ljmp
das
fwait
jl
clc
cld
sub
sar
shl
clc
adc
add
jmp
xchg
jb
add
cmc
pop
mov
into
lods
cs
enter
add
dec
popf
bound
add
in
push
add
dec
lret
add
dec
gs
clc
mov
clc
ret
xchg
push
mov
cld
jmp
jge
mov
clc
pushf
shll
add
fucompp
inc
clc
adc
roll
add
mov
add
hlt
sub
clc
pop
ja
or
clc
mov
and
add
mov
add
cmp
outsb
adc
add
repnz
int3
lahf
cmp
pop
cmp
clc
mov
mov
cmp
mov
add
inc
add
push
add
stos
mov
or
popf
adc
inc
add
out
push
jne
jp
clc
adc
add
mov
pop
sahf
mov
and
add
xchg
insb
lods
cmp
add
inc
clc
add
add
add
cld
fs
lea
sub
pop
xor
add
add
nop
xor
add
clc
cmp
add
add
add
xchg
adc
add
clc
int
add
adc
add
adc
dec
cmc
aam
std
and
add
pop
and
push
xor
cld
jmp
xor
dec
adc
add
pop
pusha
add
inc
add
fisubl
fisttpll
data16
cwtl
mov
mov
add
pcmpeqb
data16
scas
cli
imul
add
pop
jno
add
pop
mov
add
jae
add
sar
inc
clc
push
clc
aad
sbb
dec
push
push
push
add
out
sbb
ss
ret
imul
es
push
push
clc
icebp
xchg
cmp
clc
mov
cwtl
incl
pop
adc
sub
add
jne,pn
xor
add
and
or
scas
addr16
das
mov
jns
clc
jno,pn
add
clc
in
mov
adc
sar
add
mov
or
add
fwait
mov
rolb
cmp
clc
jo
add
lods
es
fdivr
enter
add
add
push
push
clc
cld
sahf
jl
iret
int
clc
iret
pop
add
es
shrl
ss
sar
mov
mov
clc
sti
shll
add
in
popa
add
xlat
push
fwait
push
je
add
outsl
adc
mov
jne
or
cmp
add
pop
add
movsb
clc
xchg
mov
clc
xchg
cmc
dec
cmpsl
clc
leave
add
xlat
xor
add
ret
je
je
xchg
cmp
add
cltd
or
clc
sub
add
add
or
clc
sub
sahf
pop
push
add
mov
fwait
add
or
imul
add
inc
add
ljmp
fs
adc
add
cmpsl
clc
loope
jno
add
xchg
xchg
in
inc
add
out
scas
ss
mov
mov
hlt
jle
push
cld
jmp
mov
add
loopne
icebp
inc
clc
inc
clc
faddl
add
xchg
ja
xchg
or
add
sbb
mov
clc
jl
ds
xchg
ret
clc
xor
add
clc
and
add
jp
addr16
sbb
add
jp
pop
clc
cmp
lods
movsb
clc
mov
push
push
test
loope
pop
mov
add
clc
dec
sbb
add
imul
add
xor
add
fwait
mov
lock
lcall
dec
sub
loopne
dec
xchg
mov
clc
add
adc
js
sbb
je
notb
add
pop
or
ficompl
add
cld
jmp
adc
sub
bound
add
mov
push
clc
pop
nop
pop
out
jl
insb
push
cwtl
int
loop
aas
js
clc
push
std
cmc
inc
clc
clc
mov
mov
outsb
push
add
cld
jmp
ja
sub
fimull
sar
add
add
fincstp
xor
add
add
push
add
fldpi
jne
add
sarb
loop
pop
jge
clc
pop
sbb
add
clc
xor
add
add
push
clc
or
clc
fwait
push
xbegin
test
mov
add
jmp
data16
add
fisttps
and
add
xlat
test
clc
and
mov
clc
daa
clc
sahf
in
add
add
inc
add
push
jno
add
insb
push
add
std
jne
mov
cld
jmp
dec
push
mov
dec
xchg
sub
clc
inc
add
sub
add
clc
int3
mov
clc
out
cmc
aas
mov
xchg
or
jne
cltd
iret
jge
clc
pop
fisubs
add
push
add
lods
xlat
out
push
add
int
xlat
cltd
cmp
add
mov
mov
clc
movsl
clc
cmp
add
cmp
test
dec
mov
add
dec
cwtl
in
add
push
and
add
add
add
clc
mov
mov
and
add
and
lods
or
add
sub
imul
clc
divl
clc
inc
add
sub
mov
add
gs
in
pusha
add
idiv
enter
push
add
xchg
inc
add
test
in
movsb
clc
scas
xabort
in
push
add
es
repnz
imulb
add
add
clc
inc
add
ljmp
leave
ss
ret
add
mov
cmp
aaa
and
add
clc
fwait
daa
clc
call
clc
jge
mov
out
jg
clc
cltd
aaa
jmp
mov
add
jb
add
fucomi
shl
stc
iret
lcall
add
inc
clc
das
xchg
sbb
clc
inc
add
mov
scas
faddl
bound
add
add
sahf
std
pop
and
sub
dec
stc
ret
ret
clc
negb
add
xor
xchg
dec
mov
add
cltd
fmul
inc
add
in
inc
add
punpcklbw
add
add
push
jle
pop
sar
clc
in
sbb
cltd
inc
add
ja
orb
inc
sbb
jmp
popa
adc
or
add
arpl
add
clc
dec
outsl
out
call
or
add
sbb
jno
add
cmp
in
pusha
add
shl
clc
imul
mov
add
stc
mov
add
adc
add
mov
jp
clc
fadds
add
xchg
mov
lock
add
movzwl
ss
ret
lods
xchg
xlat
xor
add
add
jae
add
cs
je
clc
xabort
stos
adc
add
jp
push
add
cmp
clc
fwait
in
loope
jp
mov
mov
push
ss
ret
fs
sub
clc
divl
add
sar
push
clc
jnp
add
inc
clc
cmp
lods
push
add
lock
popf
push
and
add
mov
add
mov
enter
aaa
xchg
cwtl
lods
pop
mov
addr16
sbb
ret
clc
mov
jl
and
jmp
mov
add
in
scas
push
add
mov
cmp
add
add
cli
sbb
push
add
mov
add
clc
sar
clc
aam
cltd
cmp
push
cmp
xchg
insl
and
add
clc
xchg
jl
clc
cmp
clc
push
add
pop
das
ret
add
cmp
fdivrl
fidivrl
int3
insl
cmc
cld
mov
cld
jmp
sbb
movsb
clc
pop
loope
dec
mov
clc
cmp
repz
or
jnp
loopne
into
sbb
add
lea
jg
decb
ljmp
clc
mov
clc
ljmp
or
clc
sar
es
mov
clc
arpl
add
add
clc
lret
or
add
sbb
or
and
add
mov
adc
add
fldcw
mov
push
enter
xor
push
testb
add
popa
add
ds
dec
cmp
pop
jl
dec
or
imul
add
add
add
in
clc
fwait
mov
clc
add
add
add
jmp
clc
push
xchg
and
push
clc
fwait
dec
xor
add
add
clc
movsl
clc
jae
add
data16
addr16
iret
jmp
cld
jmp
imul
push
clc
pop
pop
adc
add
gs
dec
es
mov
clc
test
sbb
add
add
add
pop
mov
add
cmovl
push
add
inc
add
cmp
or
add
ucomiss
mov
fsubr
iret
xor
add
add
push
add
jo
add
xor
add
sbb
dec
jg
mov
add
dec
fsts
inc
insb
insb
cld
jmp
pop
int
dec
stos
cmp
dec
jp
stos
push
mov
aaa
push
ds
adc
add
mov
jae
add
es
dec
sub
pop
cmp
aaa
xchg
in
xchg
sbb
jp
xlat
roll
add
leave
pusha
add
cld
sbb
cmp
adc
add
mov
jbe
add
insl
scas
pop
test
ss
ret
adc
or
fsubs
add
popf
or
add
inc
clc
mov
clc
xor
add
lcall
jmp
es
sub
clc
test
cli
pop
sub
adc
std
mov
clc
mov
xor
add
clc
or
add
inc
add
push
add
add
xor
add
mov
test
mov
clc
push
pusha
add
inc
add
sub
pop
sbb
call
sar
clc
pusha
add
stos
inc
clc
xor
add
loop
imul
and
add
dec
icebp
and
add
add
pop
mov
mov
or
mov
jbe
dec
test
in
adc
add
add
dec
pop
sahf
fwait
mov
leave
cmp
clc
mov
clc
adc
add
add
push
xor
add
add
inc
add
push
jle
mov
dec
lcall
clc
jb
add
insb
adc
out
jmp
pop
outsb
and
add
test
bound
add
loop
cld
jmp
test
jp
lea
add
mov
clc
xchg
pop
adc
add
sub
add
cs
jecxz
cmc
push
xor
add
lods
data16
icebp
in
lahf
xchg
and
add
mov
fiadds
add
movsb
clc
xchg
loope
inc
clc
mov
addr16
sti
xor
add
clc
rclb
pop
jmp
add
xor
pop
lock
xchg
das
mov
adc
sub
cmc
mov
add
mov
repz
clc
mov
add
add
add
outsl
into
push
clc
inc
clc
mov
inc
add
xor
add
push
push
and
add
fisubrl
add
xor
or
clc
scas
mov
mov
xor
lock
sub
pop
in
iret
sub
jmp
or
je
lods
imul
pushf
fwait
data16
push
jne
cld
jmp
iret
pop
mov
test
add
das
fidivrs
sub
aaa
mov
leave
mov
jnp
sarl
lret
cld
jmp
sub
clc
sub
clc
mov
int3
cmp
ret
clc
jecxz
mov
clc
or
clc
push
in
lcall
dec
pop
fwait
mov
jecxz
icebp
sub
push
mov
sbb
add
cmpsl
pushf
add
pop
sub
sbb
or
clc
mov
mov
clc
mov
and
add
add
mov
add
push
pop
xor
add
test
jle
leave
xor
pushf
jle
add
sub
add
and
add
push
xbegin
rorb
clc
stos
xchg
int3
mov
fists
add
out
ljmp
cli
aad
lahf
ss
add
mov
bound
add
test
clc
sti
fcmovnu
jnp
clc
sub
clc
lea
add
mov
cmp
jg
pop
fwait
int3
sti
xchg
and
add
push
cmp
std
adc
add
clc
sahf
jne
pop
test
mov
fidivl
mov
in
repz
pop
or
jmp
lods
xchg
sub
and
add
jmp
sub
xor
clc
and
leave
xchg
outsl
adc
add
push
and
add
jg
cld
jmp
sub
add
add
clc
sar
clc
fldt
jle
add
out
and
add
ret
and
add
add
inc
clc
push
jge
and
xchg
inc
clc
or
add
cmp
push
add
xchg
inc
clc
inc
add
pop
movsb
clc
push
add
or
clc
out
in
data16
adc
int3
jne
add
inc
clc
cmp
xabort
aas
sbb
pop
xor
cwtl
mov
clc
dec
mov
add
add
aad
mov
push
testb
add
iret
ror
xchg
add
fdivrs
outsl
insb
rolb
or
add
je
pop
sub
inc
clc
mov
cmp
add
add
inc
clc
mov
stos
stos
jg
add
mov
testb
clc
and
add
pop
clc
cmp
add
cwtl
ret
clc
into
lock
pushf
pusha
add
aad
add
fwait
add
add
add
mov
add
lea
add
movsb
clc
or
clc
test
scas
stos
sub
cmp
add
add
dec
stos
int
or
add
inc
clc
nop
setae
clc
jnp
inc
clc
pop
pop
add
add
aad
jae
add
mov
mov
and
add
in
mov
inc
add
xchg
fwait
or
ss
ret
sbb
or
pop
fnstsw
clc
xor
add
clc
push
inc
clc
and
add
add
stc
daa
clc
pop
fs
sub
jns
sti
and
add
push
ret
cld
jmp
scas
aaa
jp
jno
jb
add
mov
jmp
push
insb
sub
enter
jmp
sub
pop
cmpsb
sub
in
xor
add
gs
addr16
outsl
jb
add
add
nop
mov
sub
xor
inc
clc
jnp
clc
fsts
cmp
jmp
cld
jmp
cmp
mov
cwtl
cmp
xchg
xor
add
add
add
clc
xchg
sbb
clc
fwait
lahf
push
fwait
pushf
and
add
and
enter
jnp
clc
lea
pop
rclb
add
test
cmp
add
push
aas
xchg
mov
add
mov
clc
mov
jmp
sub
sub
add
or
push
mov
lret
add
clc
sbb
or
add
sbb
push
adc
jmp
popa
mov
push
add
pop
dec
mov
add
add
sbb
clc
xor
add
clc
movsl
clc
mov
add
pop
clc
adc
jecxz
ret
dec
sub
clc
fwait
stos
inc
add
cmc
jbe
clc
in
clc
clc
cmp
sti
sub
out
and
addr16
sti
lods
jae
add
mov
sahf
xchg
cltd
xor
sar
add
scas
sub
mov
xchg
ja
and
push
add
sar
add
inc
clc
out
jmp
clc
enter
push
sar
jmp
xchg
subb
add
add
mov
adc
add
mov
add
sub
add
es
xchg
or
add
and
clc
push
mov
xchg
jp
inc
clc
xbegin
mov
imul
clc
sbb
pop
lahf
jno
add
ret
clc
out
cld
pop
es
sti
mov
popa
add
inc
clc
rcrl
mov
clc
inc
add
mov
pusha
add
inc
clc
js
mov
jmp
add
clc
popf
popf
fs
add
add
js
outsl
popa
add
push
and
add
idivb
in
sahf
inc
add
mov
mov
xchg
dec
dec
loopne
cwtl
fs
add
ss
ret
sbb
sub
clc
inc
clc
pusha
add
ds
scas
cmp
xor
add
clc
sbb
jmp
inc
sahf
or
push
inc
add
jle
inc
add
sbb
repnz
add
cld
jmp
sub
int3
pop
lcall
pusha
add
lcall
cli
aaa
add
cld
jmp
mov
clc
rcr
cmc
push
lods
in
xor
xchg
hlt
inc
add
out
cmp
add
xor
add
add
and
add
inc
clc
sub
in
or
add
xchg
inc
add
outsl
loopne
jge
jb
add
add
dec
inc
add
xchg
pop
int
add
xor
add
push
sbb
add
add
in
add
jo
add
arpl
add
add
mov
ds
cmc
xchg
and
add
add
pop
inc
clc
mov
arpl
add
icebp
testl
clc
push
mov
add
add
clc
test
add
fdivl
insl
loopne
int
add
imull
stc
push
add
inc
add
sub
push
mov
cld
jmp
push
hlt
xabort
xor
add
mov
add
cwtl
and
dec
and
add
mov
jge
add
add
inc
clc
sub
clc
popa
add
lcall
clc
xor
add
lock
clc
add
add
fidivrs
add
add
clc
pop
push
xchg
or
iret
push
loop
jns
add
push
add
ljmp
das
out
pop
clc
pusha
add
in
fdivs
clc
decl
test
jmp
out
and
add
add
add
pop
ret
and
add
push
daa
clc
ret
clc
xlat
inc
clc
ds
add
es
add
pop
jg
cmp
loop
mov
jne
lods
scas
adc
add
add
shlb
add
das
outsl
dec
add
mov
lods
jg
add
push
xor
add
das
sbb
jle
clc
push
add
mov
dec
or
mov
clc
mov
in
push
add
xchg
push
sub
clc
mov
clc
hlt
mov
popf
stc
adc
add
adc
clc
mov
setg
clc
cmpsl
clc
pusha
add
lock
and
in
jmp
orb
inc
clc
lods
test
clc
add
add
mov
clc
mov
add
stos
xor
add
push
stos
xor
add
aaa
sub
data16
pop
or
add
clc
add
add
add
dec
xchg
lock
pop
jae
jmp
aas
loop
in
sub
push
mov
inc
add
and
add
aas
out
inc
clc
into
aad
cmp
add
movsl
clc
jbe
add
lret
icebp
in
popa
add
adc
mov
sub
ds
clc
cmc
aas
sbb
clc
xchg
cmpsb
clc
xlat
pop
pushf
ljmp
jno
add
mov
clc
lret
call
inc
add
gs
push
clc
fnstenv
cmp
or
shr
jle
add
sbb
or
cld
jmp
sub
add
cmp
dec
repz
je
add
hlt
sub
add
cmp
aas
jno
add
rclb
add
out
xchg
xchg
pop
fmul
xor
sarl
xabort
mov
sar
clc
cmp
and
add
mov
add
add
clc
sar
negb
scas
jo
add
add
clc
ret
mov
shll
inc
add
jg
fsubs
add
ja
test
mov
adc
add
mov
cmp
or
inc
add
mov
xchg
mov
clc
adc
add
add
add
jecxz
popf
inc
clc
xchg
dec
sar
add
stos
out
cmp
pop
gs
pop
das
out
or
out
jle
stc
call
cld
jmp
and
je
xor
add
movsl
clc
test
lea
push
rcl
pop
mov
inc
clc
arpl
add
lods
mov
cmp
ljmp
lret
fcompl
add
cmpsl
clc
fdivr
push
cltd
repnz
movsb
clc
icebp
sti
xlat
mov
add
adc
add
mov
jp
call
out
or
push
daa
clc
clc
pop
insl
xchg
pop
xchg
dec
push
in
pop
cmp
clc
mov
add
sub
mov
lret
sbb
loope
imul
add
mov
push
clc
mov
test
add
insb
xchg
clc
pushf
loope
aaa
adc
add
clc
scas
push
scas
cmpsl
clc
mov
cmp
add
test
xchg
dec
xabort
jno
add
push
stos
repz
add
sub
imul
jl
dec
test
pusha
add
push
push
cld
jmp
or
cmp
aam
loope
adc
add
into
mov
push
add
test
add
xbegin
mov
cli
fildl
sar
decb
cmp
xor
add
or
push
ss
ret
or
adc
mov
add
push
stos
cld
jmp
imul
add
mov
std
shl
clc
in
imul
mov
sub
cmp
clc
xchg
xchg
push
push
ret
pop
clc
imul
cmp
clc
push
and
add
clc
dec
icebp
push
add
lock
fnstcw
pop
aam
clc
inc
add
pop
cmc
xor
lcall
stos
test
lods
stos
pushf
mov
clc
insl
bound
add
add
ja
mov
xor
int
add
ret
clc
push
fs
add
add
add
pop
xabort
or
dec
push
cld
jmp
sub
dec
lret
daa
clc
bound
add
add
cmp
int3
js
sub
test
dec
mov
repnz
cmc
and
inc
clc
fmuls
clc
mov
fdivrs
mull
add
add
add
mov
test
lret
fs
xor
add
imul
jge
add
push
in
cmp
cmp
movsl
clc
jbe
xchg
gs
inc
clc
flds
add
add
shll
add
sub
in
mov
clc
mov
loope
ds
sub
clc
fstpl
imul
clc
pmaxsw
inc
clc
or
jecxz
sbb
clc
shrl
jmp
hlt
push
add
arpl
add
decl
pusha
imul
pop
push
add
cmpsb
clc
sti
mov
out
aam
jg
sahf
sub
cmp
divb
add
sub
add
clc
ljmp
add
clc
xchg
mov
clc
popa
add
add
add
add
clc
iret
xor
add
add
pushf
push
inc
add
hlt
inc
clc
jp
imul
add
cld
jmp
xor
es
xchg
mov
sar
cmp
inc
clc
pop
push
lcall
push
and
lods
aam
xor
add
and
mov
add
clc
addr16
lods
aaa
in
iret
hlt
gs
fmull
mov
dec
and
add
add
mov
xchg
cs
xchg
cmp
add
adc
out
cmp
ljmp
inc
clc
pushf
cmc
cmp
add
clc
ret
clc
js
lock
lock
sbb
pop
insl
add
test
fmuls
clc
cmp
pop
and
add
clc
or
sbb
cld
jmp
jp
lea
clc
fistps
xabort
adc
add
mov
clc
mov
add
arpl
add
sub
xchg
push
pushf
or
sahf
cmp
add
in
outsl
jnp
clc
ffreep
clc
je
inc
clc
pop
clc
ret
clc
sbb
add
mov
xor
clc
or
icebp
jae
add
lock
clc
inc
add
jno
add
add
cld
jmp
sub
push
add
push
outsb
in
mov
add
das
inc
clc
aam
xbegin
add
jnp
imul
cwtl
cmp
mov
add
and
add
jnp
mov
jle
pop
daa
clc
xchg
cs
and
add
fsub
clc
or
clc
adc
adc
cs
mov
push
add
dec
or
or
add
negb
aaa
iret
dec
jp
clc
cld
xchg
jmp
clc
and
add
cld
jmp
movsb
add
sub
das
outsl
xchg
cmpsl
clc
insl
test
jb
add
hlt
sahf
xchg
sub
movsb
clc
add
add
sbb
or
dec
lret
test
mov
add
jne
sub
clc
jmp
cmp
clc
cmpsl
clc
test
dec
adc
inc
add
lret
roll
add
clc
cmp
call
add
mov
jmp
cli
cmp
cmpsb
clc
xor
add
clc
rep
cmc
cmp
clc
dec
movsl
clc
sahf
in
dec
mov
cmpsl
clc
addr16
adc
add
insl
inc
clc
xchg
adc
data16
mov
mov
pop
fadds
clc
data16
jns
cmp
and
add
fldenv
add
push
push
shll
clc
jno
add
shrl
leave
jne
cltd
cmpsl
clc
and
add
pusha
add
jno
add
fbstp
jmp
decl
in
dec
sbb
jmp
push
jg
clc
jmp
cmp
xbegin
stc
sub
inc
clc
sbb
pop
cld
jmp
jp
movsb
sbb
lods
mov
xchg
cmp
add
mov
mov
cld
jmp
xchg
mov
pcmpeqb
jb
add
iret
popa
add
repz
add
mov
adc
add
add
add
pop
in
push
clc
loop
sbb
add
pushf
sbb
add
dec
adc
add
cmp
clc
rol
clc
pop
jbe
cmp
ret
lods
stos
dec
stc
loopne
adc
xor
add
insb
es
adc
add
add
xor
add
je
xlat
push
and
ss
ret
lea
clc
ret
clc
daa
clc
aam
clc
loopne
icebp
out
jae
add
jp
jecxz
push
imul
cld
jmp
sub
dec
mov
sti
jg
out
outsb
stos
test
jecxz
fisubl
add
xor
add
mov
xor
dec
sub
dec
popa
add
inc
clc
or
das
mov
clc
imul
push
jmp
cld
jmp
xor
add
push
es
cmp
add
add
clc
push
ljmp
push
out
incb
add
xbegin
ss
jns
pop
adc
add
je
sbb
sar
jmp
cwtl
sub
jge
dec
stc
lods
insb
sub
shrl
dec
aas
cmc
fiaddl
add
add
sbb
clc
jge
cmp
clc
popf
dec
sub
xbegin
into
popf
push
mov
in
mov
add
sub
fldenv
clc
and
add
add
clc
cli
or
clc
adc
add
add
push
add
scas
sahf
fstl
movsl
clc
pop
clc
or
add
add
fmuls
or
pop
jnp
add
add
clc
inc
add
popa
add
push
and
add
mov
sbb
loop
cld
jmp
pop
sbb
add
divl
push
repnz
xchg
jmp
add
sahf
bnd
add
sub
sbb
cli
cs
scas
out
clc
sub
add
data16
cli
pop
cmp
jle
mov
cmp
aad
add
xchg
sub
xchg
sar
insb
push
es
cmpsl
clc
jp
and
xchg
adc
add
add
lock
pop
push
clc
pop
call
add
push
aam
sar
xchg
xchg
jns
sar
pop
adc
add
add
sbb
arpl
add
pop
cmp
clc
adc
add
push
clc
mov
sar
clc
cmp
inc
add
ds
push
jg
fst
sbb
stos
pop
dec
fisttpll
clc
sub
add
cmp
add
clc
mov
add
add
loopne
jo
add
sub
sub
xchg
clc
sbb
mov
dec
mov
add
pusha
add
cld
cmp
mov
clc
fcmovbe
xchg
xchg
mov
popf
mov
aam
aaa
out
lock
sub
movsl
clc
add
cmp
clc
cli
cli
enter
test
clc
ret
clc
je
ds
add
xchg
mov
notl
shll
fwait
mov
add
arpl
add
add
rep
ss
ret
jge
scas
repnz
cmp
in
cmp
xor
add
hlt
xchg
jmp
mov
add
add
add
mov
out
jge
add
sub
ljmp
push
or
jmp
lods
insb
xchg
ds
xchg
mov
shl
clc
mov
mov
add
cmp
clc
sub
add
mov
mov
xchg
push
clc
push
clc
daa
clc
or
in
int3
out
pop
je
fidivl
clc
jecxz
or
stos
push
in
cmp
inc
add
clc
nop
push
inc
add
mov
std
ror
insl
scas
rcll
add
mov
clc
jge
clc
mov
clc
pop
popa
add
hlt
mov
pop
ss
ret
or
xchg
sub
psubusw
clc
das
clc
pushf
std
xor
add
add
in
fisubrs
xchg
mov
push
rolb
add
mov
je
and
add
test
pop
push
add
mov
pop
adc
arpl
add
add
clc
mov
or
lods
filds
add
add
push
clc
inc
add
mov
add
jmp
dec
jl
sbb
and
add
add
stc
and
add
jbe,pt
push
cli
lods
pop
xchg
push
dec
mov
xabort
cmp
add
ja
dec
sar
dec
xchg
stos
aas
cmpsb
clc
cmp
dec
movsl
clc
jbe
add
xchg
cmpsl
clc
push
pop
xchg
jne
bound
add
clc
dec
and
add
cmp
ss
add
cmp
test
xlat
or
clc
js
xor
add
add
in
test
dec
clc
push
ret
clc
js
loope
cmp
cs
lahf
cmp
cld
ret
clc
mov
sbb
test
cmp
add
jmp
push
mov
ss
add
jb
add
xor
dec
mov
sbb
mov
add
popa
add
add
cmp
push
mov
push
add
out
sar
add
add
add
push
dec
sahf
jno
add
sbb
inc
add
imul
push
cmp
sub
clc
jmp
mov
push
clc
ds
adc
add
mov
stos
inc
clc
jecxz
aam
sbb
into
in
loope
fstp
mov
test
push
cld
jmp
aaa
jp
jg
add
sub
mov
xor
cmc
push
push
add
jge
aaa
nop
mov
add
add
sbb
int
add
mov
inc
add
test
mov
add
dec
test
dec
jne
add
in
in
add
add
clc
int
clc
inc
add
push
add
ja
inc
clc
mov
test
add
xchg
dec
inc
clc
jmp
sar
add
xor
add
aas
dec
lods
out
sub
lahf
sub
mov
inc
add
fidivl
add
add
repz
sar
lods
je
cmp
add
add
clc
xor
add
add
arpl
add
clc
pop
icebp
inc
add
sbb
hlt
xlat
jno
add
cmp
push
loope
movsb
clc
push
add
in
inc
add
push
clc
adc
add
ja
clc
and
sub
clc
loop
lret
add
add
enter
shll
clc
frstor
jg
mov
clc
xor
add
clc
xchg
leave
cmp
add
jo
add
add
ss
hlt
push
jmp
mov
sbb
add
add
add
add
leave
imul
jno
add
add
clc
fbstp
out
and
add
cmp
add
xbegin
add
clc
pusha
add
ljmp
repz
jmp
pop
sahf
push
sub
add
ss
push
clc
ljmp
loope
js
clc
inc
add
mov
add
pushf
sbb
aad
fidivrl
clc
jmp
clc
mov
sbb
cld
jmp
imul
sar
adc
add
lea
add
jno
add
dec
scas
out
jno
add
dec
daa
clc
ror
scas
sbb
out
xbegin
add
add
add
or
add
add
add
aad
clc
lock
push
add
cld
jmp
pop
das
cwtl
cmp
clc
movsb
clc
mov
push
lret
add
bound
add
clc
daa
clc
add
jmp
sbb
mov
fwait
or
add
loopne
mov
xbegin
sub
mov
add
cmp
adc
xlat
pop
clc
xor
pop
adc
add
inc
clc
mov
pusha
add
adc
add
clc
pop
clc
sub
test
ret
fs
sub
fstps
mov
ss
ret
sub
aas
cmp
add
cmp
mov
adc
add
add
dec
push
pop
inc
add
lea
sub
and
add
icebp
outsl
mov
clc
fidivrs
add
decb
clc
mov
clc
push
add
incl
stc
cld
jmp
push
subb
pop
push
add
xlat
mov
xlat
dec
xchg
leave
sarl
jb
add
lock
add
add
add
add
popa
add
cmpsl
clc
mov
jmp
dec
jb
add
push
jns
add
stos
cmp
xor
bound
add
clc
add
add
dec
cmp
add
adc
add
clc
cs
clc
rcrb
pop
ss
ret
sub
jl
sbb
jle
cmp
flds
iret
xbegin
clc
daa
clc
inc
clc
out
dec
xor
add
and
add
clc
push
add
mov
clc
mov
xchg
cmp
ret
clc
xor
cmpsb
clc
or
and
das
insl
sub
and
mov
sar
and
mov
cmp
in
add
add
mov
xor
add
jl
scas
call
xchg
std
icebp
pop
and
add
sub
mov
nop
mov
add
xbegin
xor
add
sar
je
pop
and
clc
xor
add
cmp
add
adc
add
sbb
add
add
add
push
mov
mov
clc
cmp
mov
clc
das
ret
clc
xchg
out
inc
add
cmp
repnz
clc
dec
add
inc
add
mov
add
sbb
jmp
dec
add
sbb
or
clc
sub
clc
ficoms
movsl
clc
add
add
dec
cmc
in
je
lods
adc
add
repz
add
lock
add
lahf
jne
sub
ss
ret
sub
and
add
mov
clc
sar
clc
and
add
add
xchg
pop
bnd
add
add
sar
lahf
ja
add
and
add
add
clc
rolb
ljmp
aad
sahf
cmpsl
clc
paddsw
pop
adc
add
xchg
scas
fdivl
add
mov
clc
jp
out
lcall
jmp
mov
fs
stos
xchg
mov
xchg
lock
clc
cmp
lcall
shlb
add
add
mov
sub
and
das
adc
add
or
out
and
add
clc
push
add
cmpsb
clc
jne
add
in
xchg
add
add
fs
dec
fs
fldenv
or
jmp
test
clc
or
pop
push
rorl
je
clc
jp
cmp
add
inc
add
incl
jb
add
test
insl
jae
add
inc
clc
nop
aaa
popa
add
mov
add
loopne
adc
jecxz
repz
pop
dec
mov
add
sub
add
push
add
inc
clc
repz
push
add
mov
add
xlat
mov
jmp
lods
inc
and
or
fmuls
add
add
clc
sub
sub
clc
jne
jb
add
ret
clc
outsl
jge
sub
sti
and
add
add
test
add
jge
subb
nop
leave
lods
outsl
mov
iret
mov
add
add
in
xor
add
clc
jmp
clc
cld
jo
add
pop
sar
add
nop
sbb
repz
incl
iret
iret
mov
pop
cld
jmp
push
movsb
jp
je
dec
mov
outsb
sub
cmpsb
clc
sub
gs
sub
add
in
movsl
clc
mov
pop
xbegin
clc
sub
in
dec
jecxz
flds
clc
pop
mov
xor
add
sti
aad
add
cmpsb
clc
push
cld
jmp
test
clc
jae
add
jo
add
adc
int
jnp
add
adc
add
add
add
mov
clc
sar
clc
xchg
inc
clc
mov
jg
rcrb
xor
add
addr16
loopne
aad
ret
mov
clc
add
add
add
push
lret
clc
clc
xchg
jno
add
add
aam
add
add
jb
add
mov
setle
or
ret
add
mov
jmp
adc
mov
test
add
sbb
add
outsb
mov
xor
add
bound
add
add
and
fmuls
addr16
out
dec
xchg
mov
in
xabort
clc
pop
enter
stc
and
cltd
loop
add
add
es
jbe
loopne
push
add
pop
xchg
inc
add
adc
push
add
xor
add
in
fwait
arpl
add
fists
jmp
xor
outsl
adc
or
xor
add
mov
cld
jmp
sub
clc
adc
mov
xor
add
mov
cltd
sbb
mov
lods
test
sub
add
pop
and
add
mov
add
jmp
sub
cltd
data16
fwait
and
dec
ret
clc
adc
add
add
filds
add
sbb
push
ret
cwtl
fwait
lods
lods
push
jb
add
add
add
mov
cmp
cmp
lea
js
cwtl
adc
add
stos
add
mov
inc
add
mov
push
movsb
dec
popa
push
out
xchg
cmp
add
cmc
int
add
test
ljmp
lods
movsb
clc
cmp
push
add
je
popa
add
and
mov
mov
push
clc
movsl
clc
xor
add
add
add
pop
mov
add
jmp
test
cli
jle
in
insl
iret
sahf
dec
xabort
inc
clc
dec
mov
clc
ss
clc
mov
aaa
mov
cmp
and
cmp
js
aaa
sar
clc
inc
add
push
ss
add
sub
std
mov
jmp
lea
jmp
scas
test
fisttpl
daa
clc
mov
add
add
pop
add
mov
movzwl
cld
jmp
and
fcoms
add
mov
add
testl
mov
add
movsb
clc
pop
fadd
clc
xabort
cmp
add
and
add
iret
xchg
sar
aad
add
into
jg
dec
fsub
clc
xabort
mov
arpl
add
leave
repz
mov
ja
clc
flds
sahf
jmp
mov
add
xchg
push
clc
pushl
ss
ret
push
or
add
clc
bound
add
cmp
add
or
mov
dec
cmpsl
clc
push
add
cltd
push
or
clc
fnstsw
lahf
in
xor
add
sbb
clc
inc
add
dec
xbegin
clc
adc
add
mull
add
and
imul
das
adc
add
in
aaa
adc
add
push
loopne
inc
add
cmp
pushf
clc
sub
insl
jg
cmp
add
mov
cltd
shl
clc
jmp
or
add
cmp
clc
cmp
ljmp
test
pop
mov
clc
or
sub
add
inc
add
mov
add
js
clc
xor
lods
inc
clc
push
add
loopne
xchg
inc
add
insl
pop
sub
inc
clc
dec
cmp
inc
clc
int
lcall
cld
jmp
nop
or
or
add
pop
jbe
push
clc
inc
add
call
aaa
scas
insl
fists
add
mov
inc
add
cs
push
cld
jmp
push
cmp
add
adc
add
les
ss
ret
fs
mov
xchg
sar
clc
cmp
cld
jmp
push
cmp
mov
sub
out
xor
add
cmp
push
add
jmp
xchg
pop
out
adc
add
nop
iret
cmp
add
rorb
dec
js
add
jnp
clc
sahf
inc
clc
in
inc
clc
dec
and
inc
clc
sahf
mov
bound
add
add
clc
arpl
add
stos
jo
add
clc
fimull
jnp
mov
sub
push
xchg
and
add
sbb
inc
add
add
add
inc
cmp
push
ret
lods
nop
jle
dec
into
insl
insb
ja
add
jno
add
jne
fidivrs
jmp
mov
adc
mov
clc
data16
arpl
add
sahf
and
add
xchg
cs
add
imul
sti
xchg
fnstcw
fst
lret
cmp
dec
cmp
add
add
xchg
repz
addr16
add
or
or
add
aaa
mov
inc
clc
or
clc
mov
popa
add
cmp
imul
push
add
enter
add
or
jae
add
test
push
add
lods
sar
xor
add
decl
xor
sub
stos
out
cs
stos
fistpll
xor
add
add
add
mov
ss
ret
cwtl
jg
or
clc
dec
insl
add
sub
add
push
clc
ss
inc
add
repz
mov
clc
fldenv
clc
clc
dec
test
ljmp
push
add
stos
cmpsl
clc
iret
ja
xor
add
bound
add
clc
movsb
clc
ret
clc
or
icebp
jge
inc
add
dec
mov
inc
clc
fs
dec
adc
push
je
cld
jmp
mov
int3
das
inc
clc
and
add
mov
mov
adc
jmp
das
push
cmp
add
lret
push
inc
add
mov
jg
mov
mov
clc
movsl
clc
mov
clc
pop
clc
inc
clc
ja
clc
push
mov
pop
test
ljmp
cld
jmp
push
mov
sub
leave
lods
sbb
add
add
mov
rclb
jb
add
clc
cmp
clc
sti
lcall
sbb
jmp
add
cwtl
push
add
decl
jmp
test
or
out
mov
pop
mov
clc
jne
cld
jmp
mov
in
mov
adc
add
add
pop
adc
add
or
add
and
add
jno
add
push
scas
cmp
add
pop
jae
add
divl
add
xchg
je
pop
add
add
add
adc
add
pop
sbb
add
add
add
out
fs
shl
add
add
cltd
sub
test
stos
lea
jge
clc
pop
lret
add
adc
add
add
sub
es
xabort
or
push
rclb
add
loopne
fxch
iret
cli
sub
add
lods
push
dec
lcall
ja
insl
and
add
add
and
add
clc
push
mov
add
jecxz
jmp
mov
icebp
fdiv
inc
clc
lcall
fwait
adc
add
and
add
jge
clc
jp
add
add
cli
jo
add
add
out
clc
mov
push
test
add
cld
jmp
popa
ja
or
clc
out
lret
push
clc
mov
sub
xor
add
test
arpl
add
adc
leave
mov
and
add
fsubr
stos
mov
add
insl
mov
mov
clc
cltd
jmp
inc
clc
into
enter
add
arpl
add
es
cmp
clc
out
dec
cwtl
in
or
jg
and
push
clc
dec
mov
sbb
sub
roll
add
inc
add
cmp
test
push
pop
push
add
pop
clc
adc
add
mov
cmp
add
jb
add
clc
adc
add
sub
ret
add
sbb
sbb
clc
cmp
add
inc
add
popf
gs
fadds
add
std
repnz
xchg
cs
cld
jmp
sub
sub
xchg
mov
mov
clc
xor
add
clc
adc
clc
iret
mov
test
pop
in
scas
scas
out
push
sbb
xbegin
loope
pop
rcrl
mov
xor
add
clc
leave
in
addr16
sar
jne
add
xchg
jle
cs
xbegin
in
cmp
add
pop
popf
mov
or
clc
push
imul
add
add
inc
cld
jmp
aas
cmp
pop
inc
clc
roll
add
jle
inc
add
mov
xchg
inc
add
sub
pop
iret
sbb
inc
clc
aaa
mov
into
hlt
ja
xchg
sub
clc
cmp
clc
add
hlt
ds
pop
cmp
push
mov
adc
add
adc
shl
cld
jmp
lea
insb
sub
add
add
push
fbstp
mulb
add
sbb
cwtl
push
sar
add
mov
mov
fldl
add
or
das
xchg
hlt
cmp
add
jge
clc
xbegin
clc
sar
add
mov
daa
clc
and
mov
or
mov
dec
lods
aad
clc
push
outsb
int
imul
add
aad
cmp
jb
add
adc
add
test
push
add
inc
add
mov
xbegin
lahf
and
clc
sar
xchg
call
jmp
adc
or
add
add
push
cld
jmp
popa
jno
nop
loope
movsb
clc
dec
adc
add
testl
or
adc
add
into
adc
add
clc
mov
jge
clc
in
adc
mov
clc
stc
mov
clc
add
shll
push
inc
add
mov
add
mov
mov
imul
imul
mov
or
inc
add
mov
add
pop
in
nop
sahf
inc
clc
test
add
outsl
rcrl
lods
outsb
out
mov
clc
stos
xchg
mov
stos
mov
clc
add
loope
pop
dec
jg
mov
add
js
clc
push
add
pop
fwait
stc
mov
aam
bound
add
scas
xchg
data16
cmpsb
clc
insl
sub
das
xor
add
dec
sbb
jmp
add
clc
push
add
add
add
orb
push
jmp
cld
jmp
outsl
jae
add
cld
jmp
cwtl
sub
outsl
inc
clc
adc
add
jg
cld
jmp
sub
pushf
xchg
daa
clc
negl
fdivrl
popa
add
int
clc
and
add
in
cmp
and
stos
arpl
add
cmp
sub
mov
add
dec
and
add
call
cli
jb
add
push
pop
push
test
xchg
movsl
clc
jns
gs
mov
jns
clc
pop
clc
jmp
pop
insb
xor
push
cld
jmp
sub
jg
add
pop
arpl
add
imul
imul
push
pushl
cld
jmp
push
inc
sub
outsb
inc
clc
loop
xor
add
add
hlt
out
dec
jae
add
hlt
jmp
push
movsb
clc
out
cmp
add
cmc
pop
jnp
movsl
clc
aas
sbb
fs
add
cmpsb
cmpsb
and
int3
outsl
jmp
clc
mov
in
lcall
loop
cld
js
add
out
and
add
xbegin
sti
xchg
leave
inc
clc
fstpl
or
scas
movsl
clc
mov
push
add
push
xchg
stc
fwait
imul
clc
pusha
add
sub
clc
cmp
divb
add
clc
ret
outsb
es
cmp
hlt
dec
xbegin
pop
xor
add
add
fwait
and
fs
imul
add
loop
mov
clc
call
clc
cmp
adc
clc
push
add
inc
clc
dec
mov
mov
lcall
add
dec
mov
lods
jbe
clc
or
out
or
cmp
clc
jle
adc
add
mov
scas
cmpsl
clc
inc
add
push
icebp
out
outsb
mov
add
sub
add
sbb
mov
add
pop
push
mov
mov
jb
add
xchg
and
add
clc
cs
push
xor
add
loope
scas
dec
dec
inc
add
test
mov
clc
mov
cmp
mov
inc
add
push
clc
inc
clc
jb
add
clc
sub
clc
dec
inc
clc
jmp
or
aas
inc
clc
sub
fnstcw
add
pop
cmp
cmp
ds
sbb
out
add
add
arpl
add
xchg
mov
jg
add
jmp
adc
add
add
in
sub
cmpsl
clc
jg
add
inc
add
push
and
add
add
outsl
sub
jmp
pusha
add
pushl
ss
ret
aas
fwait
in
jo
add
and
add
clc
sti
cwtl
mov
lods
xchg
fbstp
clc
xor
add
ret
clc
mov
add
clc
in
out
nop
mov
add
add
jb
add
vsqrtps
add
sbb
add
add
add
add
add
clc
push
add
fisubrs
mov
inc
jmp
clc
pop
inc
clc
dec
btc
mov
dec
cli
sub
clc
mov
xor
cld
jmp
xchg
or
sub
ds
mov
xor
clc
sbb
add
aaa
scas
scas
iret
sub
clc
je
ljmp
xor
add
movsb
clc
ror
pop
cmp
clc
aas
cmp
clc
cmp
xchg
pop
data16
dec
int3
std
mov
ljmp
jg
gs
sub
mov
add
add
das
mov
add
jmp
add
add
mov
paddb
mov
clc
add
pop
mov
clc
in
popa
add
adc
movzwl
cld
jmp
sub
idivb
loope
inc
add
testb
mov
add
pushf
cmp
enter
add
test
aad
xor
add
mov
jmp
clc
out
cld
push
push
rep
cld
jmp
add
push
push
add
push
clc
sbb
xabort
inc
clc
xchg
jecxz
int3
sbb
call
sub
add
push
scas
in
bound
add
fcmovbe
xor
add
cmpsl
clc
sbb
clc
cmp
clc
lret
cld
xor
clc
nop
aaa
cmp
cmpsl
clc
outsb
and
stc
sbb
int3
sub
and
add
clc
push
add
push
insl
push
mov
cld
jmp
sub
je
int
push
clc
push
daa
clc
dec
pop
in
mov
insb
std
lods
inc
clc
push
add
inc
clc
sbb
add
lahf
and
add
add
in
push
clc
hlt
jb
add
arpl
add
or
add
cmpsl
clc
dec
lods
mov
cltd
stos
data16
lods
pop
jecxz
pop
mov
lret
pop
push
add
xchg
inc
clc
loope
lret
loop
or
sub
sub
clc
int
pop
inc
add
inc
add
jo
add
clc
or
cmp
sar
adc
add
add
clc
xchg
out
xabort
clc
out
mov
add
lret
sub
add
add
faddl
push
clc
xchg
push
stc
mov
xchg
mov
clc
inc
add
fimull
cmp
sar
stos
out
push
add
loope,pt
inc
add
aad
clc
cmp
push
ss
ret
dec
dec
sub
aad
pop
adc
add
add
add
clc
and
add
and
jmp
push
cld
jmp
jno
cwtl
sub
dec
cmp
dec
xchg
cmp
add
lret
sti
push
add
mov
clc
mov
lcall
dec
xor
add
clc
das
nop
arpl
add
cld
jmp
sub
push
int
add
scas
sub
test
adc
add
add
xabort
das
lcall
add
stos
push
mov
cld
jmp
popa
mov
stos
push
cmp
aas
mov
clc
pop
mov
clc
xchg
aad
pop
bnd
xlat
or
psllw
clc
jmp
clc
cmp
dec
pop
outsl
dec
ficoml
daa
clc
cmp
clc
int
clc
iret
test
mov
clc
dec
mov
dec
cmp
pop
clc
push
add
xlat
inc
add
jae
add
jg
push
mov
add
mov
jmp
aas
push
fs
mov
or
push
mov
clc
mov
lods
add
add
dec
aaa
dec
cmp
rorl
fs
ss
imul
or
jle
add
inc
add
mov
test
dec
push
inc
clc
pop
push
mov
cld
jmp
sub
or
outsb
cmp
idivb
clc
mov
ret
shrb
clc
scas
jmp
popf
inc
add
cmp
cmp
clc
push
add
adc
add
jnp
das
pop
repnz
add
xchg
or
mov
push
ret
sub
cmpsl
clc
test
sub
jmp
sub
jg
dec
int
mov
mov
sbb
outsl
pop
sub
push
fisttps
xbegin
clc
push
mov
clc
mov
or
dec
mov
mov
cwtl
or
fsubl
pop
aam
nop
jge
push
add
jne
aam
into
xchg
adc
add
add
mov
clc
icebp
cmp
clc
mov
add
clc
inc
add
pop
fnsave
clc
mov
jb
add
stos
push
popf
in
pop
mov
cld
jmp
dec
or
jae
add
clc
mov
add
test
je
lcall
leave
cld
jmp
sub
add
mov
addr16
fldt
repnz
add
add
mov
sbb
clc
in
mov
loope
fwait
movsb
clc
ficomps
popa
add
loopne
jg
and
add
insl
sahf
out
push
cld
jmp
jg
insl
lret
add
push
ret
test
scas
xor
add
fdivrs
xor
clc
xor
add
add
mov
inc
add
lea
add
jl
push
cld
jmp
mov
roll
mov
add
fdivs
add
clc
add
add
add
mov
clc
xchg
sbb
cmp
aaa
fsubs
add
xor
add
clc
sbb
insl
jae
add
clc
clc
test
lods
addr16
iret
loop
sbb
mov
cld
jmp
mov
clc
pusha
add
cmpsl
clc
push
add
aas
sbb
xbegin
xchg
mov
add
stos
mov
add
pop
roll
clc
mov
jmp
jmp
lea
clc
fwait
or
mov
jb
ss
ret
fs
lock
clc
adc
in
xchg
lods
lock
pop
test
cmp
mov
dec
movsl
clc
aaa
cmp
clc
sahf
jo
add
mov
clc
icebp
jmp
adc
add
cmp
clc
hlt
sbb
add
loope
xchg
lret
clc
icebp
cltd
int
clc
xchg
cmp
cs
inc
add
cmp
clc
pusha
add
je
dec
jno
add
inc
clc
jae
add
clc
pop
push
mov
int
clc
add
add
es
lret
adc
add
aas
outsb
clc
push
clc
cmovg
addr16
mov
clc
cld
repz
pushf
push
add
inc
add
xchg
push
rclb
aas
fsubrs
add
push
clc
aas
data16
movsb
clc
lret
clc
pushf
in
xchg
popf
mov
outsl
aas
lods
movsb
clc
jg
clc
dec
inc
add
push
jne
clc
xchg
and
add
xchg
pop
dec
outsb
loop
mov
add
pop
mov
add
fcmovnb
clc
add
xor
push
cld
jmp
sub
clc
dec
out
ljmp
add
cld
jmp
push
je
sub
xchg
nop
fists
insl
fcoms
mov
add
cmp
jge
add
mov
xor
or
clc
pop
mov
add
inc
add
jl
and
je
clc
mov
movsb
clc
sbb
and
add
clc
sub
clc
add
add
jnp
and
mov
add
stos
cld
jmp
or
pop
and
pushf
jno
add
clc
and
add
push
cmp
cld
jmp
into
xabort
add
stos
cmpsb
clc
dec
repz
mov
clc
jne
clc
jl
outsb
aad
daa
clc
jmp
sbb
cmp
jmp
inc
add
add
bound
add
add
sbb
add
jno
add
cmp
clc
push
imul
mov
push
add
mov
jbe
clc
fildl
add
add
add
mov
cmp
add
xchg
bound
add
or
ss
fildll
xlat
xabort
clc
pop
add
xchg
cmc
in
inc
add
icebp
enter
dec
dec
and
add
test
add
pop
bound
add
jae
add
scas
sahf
jbe
clc
je
add
pop
clc
mov
test
xchg
lods
cmp
mov
add
push
mov
cld
jmp
and
je
pop
add
into
insb
loopne
nop
outsb
inc
add
cmp
in
ds
push
mov
and
add
add
cld
jmp
xor
insb
push
clc
pop
xbegin
mov
mov
repz
scas
mov
jbe
cld
jmp
data16
and
out
sub
add
daa
clc
in
insl
nop
mov
jmp
sub
sar
cmp
jle
xor
add
xor
add
push
cs
and
add
add
push
pop
pop
mov
clc
outsl
divl
add
test
clc
add
stc
push
cmp
clc
test
pop
shrb
add
xor
add
negb
pop
pop
mov
fsubrs
adc
jg
clc
sub
add
add
add
dec
xor
add
daa
clc
mov
adc
add
add
add
repnz
stos
rorl
cld
minps
clc
lcall
add
dec
mov
out
push
push
jne
cld
jmp
cmp
mov
cli
dec
adc
clc
scas
imul
push
add
pop
into
and
repz
mov
clc
outsb
mov
in
ljmp
popa
jg
sub
clc
mov
out
xchg
jp
fwait
mov
add
ficomps
adc
add
clc
mov
sub
pop
clc
nop
std
mov
add
add
add
add
outsl
or
xchg
xabort
mov
ljmp
sbb
jmp
add
sub
xchg
dec
mov
in
sbb
add
add
xor
std
sbb
push
sub
jmp
xor
sub
jne
clc
or
adc
clc
jle
cmpsl
clc
mov
fldenv
clc
and
add
test
add
cmp
cmp
mov
adc
clc
aam
xor
add
add
add
mov
fdivrp
pop
cld
jmp
sbb
pop
inc
je
pop
lock
test
add
push
decl
cld
jmp
insb
sbb
cmp
add
mov
xbegin
add
das
push
clc
leave
test
mov
add
push
cld
jmp
sub
sbb
clc
mov
clc
add
add
mov
mov
clc
inc
add
mov
add
add
clc
es
ja
adc
add
inc
clc
cmp
clc
clc
daa
clc
loop
popa
add
cmp
sar
xor
aas
clc
inc
add
cltd
lods
sbb
loopne
xabort
jb
add
stos
jns
xor
add
push
jnp
pop
sbb
dec
sub
jmp
or
push
outsb
bound
add
call
cld
jmp
adc
sub
and
add
clc
cmc
lcall
jmp
push
aas
dec
dec
pop
outsl
shld
adc
add
addr16
xorps
add
jbe
xchg
sub
add
mov
lahf
jle
jl
clc
xchg
imull
outsb
ret
clc
hlt
or
clc
jmp
clc
gs
push
mov
test
sub
leave
and
insl
pop
clc
xchg
aad
mov
test
jmp
sar
add
pop
cmpsb
clc
dec
xchg
mov
clc
daa
clc
arpl
add
lret
sub
inc
add
fsts
clc
scas
test
add
mov
testl
fcomp
jmp
sar
add
cld
jmp
orb
mov
repz
clc
outsb
push
mov
cld
jmp
mov
sahf
cmpsl
clc
in
mov
clc
inc
add
mov
dec
add
add
adc
cmpl
cld
jmp
inc
sbb
add
add
dec
cmp
dec
mov
jecxz
nop
pop
mov
push
cmpsl
clc
icebp
cmp
add
loopne
push
clc
mov
xor
add
add
cmpsl
clc
arpl
add
insb
sub
ss
ret
pop
pop
xor
add
clc
fiadds
clc
imul
pushf
xor
clc
idivb
add
cld
jmp
ss
add
sarl
adc
test
clc
sbb
jmp
imul
bound
add
cmp
cmp
jg
clc
iret
push
add
pushf
fistpll
jmp
sub
imul
pusha
cld
jmp
das
sub
pop
jno
or
add
add
push
add
iret
jae
add
xor
lock
and
add
pop
repz
xchg
lahf
or
es
sti
icebp
mov
cmp
inc
add
lcall
es
pop
push
pop
clc
call
push
push
add
xchg
std
pop
aad
clc
shlb
add
sbb
mov
pop
jbe
xchg
testl
enter
cmp
shlb
add
add
test
aaa
sbb
decl
pop
lods
push
loopne
push
add
jle
das
push
sub
test
mov
clc
jp
call
arpl
add
repz
clc
aas
and
add
add
jg
imul
into
inc
clc
addr16
pop
xor
lcall
lcall
cmp
clc
loop
scas
xbegin
mov
insl
add
add
lock
add
testl
xchg
mov
and
add
push
add
clc
icebp
mov
add
mov
and
add
lods
push
popf
adc
add
xchg
gs
sbb
icebp
cmc
pusha
add
and
xlat
std
xor
mov
add
xchg
pop
push
clc
ret
clc
dec
pop
or
test
cld
jmp
cs
ss
ret
cmpsb
test
add
adc
add
test
loopne
adc
add
or
sbb
xchg
fldt
sub
cltd
jmp
add
jbe
cmc
push
add
xchg
das
inc
add
or
clc
daa
clc
add
add
vandps
jmp
inc
pop
fwait
xor
clc
mov
adc
clc
es
fimuls
out
negl
pop
xor
add
add
add
inc
clc
fcoms
aaa
icebp
test
fisttpll
cwtl
mov
push
add
cld
jmp
adc
add
cwtl
xchg
jb
add
clc
sub
clc
pop
xchg
test
add
add
scas
inc
add
mov
aaa
int
clc
fsts
hlt
movsb
clc
sti
insl
adc
add
popf
fwait
mov
push
cmp
or
pop
lods
mov
imulb
pop
cltd
enter
mov
popf
cli
cmpsl
clc
mov
add
sbb
pop
stc
mov
inc
clc
int
enter
lahf
movsl
clc
jb
add
add
sub
add
adc
add
xchg
ja
add
test
insl
clc
push
clc
cmpsb
clc
jnp
hlt
aam
add
loopne
movsb
clc
shrl
cld
jmp
sub
clc
int3
decl
mov
jmp
clc
aas
cmpsb
clc
lcall
push
ds
imul
dec
and
add
mov
dec
call
add
decl
das
add
jge
sub
mov
add
push
je
cld
jmp
mov
add
cmp
and
cld
jmp
dec
push
ja
clc
ss
lret
pop
clc
push
clc
add
add
adc
add
clc
dec
je
psubusw
add
cld
jmp
pop
cmp
clc
hlt
pop
xchg
adc
add
lods
imul
add
sar
add
add
pop
dec
addr16
inc
add
data16
or
pop
in
or
jne
pop
cmc
jno
add
push
adc
add
jns
gs
pusha
add
push
clc
scas
fs
lret
pusha
add
and
add
cmp
loope
cmpsb
clc
stos
mov
add
add
inc
add
loopne
test
xor
add
rcl
in
sarl
add
xlat
mov
add
test
stos
mov
and
test
ss
clc
lcall
push
add
jae
add
stos
negb
sbb
imul
incl
jnp
enter
xor
clc
pop
mov
sub
cld
jmp
or
push
add
mov
je
bound
add
or
jg
aam
scas
js,pn
int3
fisubs
add
outsl
lea
clc
scas
and
add
iret
add
inc
clc
cwtl
inc
clc
jecxz
xchg
inc
clc
in
fprem
mov
clc
cs
cwtl
data16
jb
add
xchg
fwait
sub
add
add
or
clc
jecxz
pop
out
push
call
cmp
fisttpll
push
sbb
clc
dec
outsb
add
add
inc
clc
popa
add
sar
mov
into
jle
jg
rcll
add
push
add
int
add
incb
add
dec
shll
lcall
or
xor
add
add
xchg
push
clc
test
popa
add
pop
add
add
mov
hlt
push
add
loopne
add
add
clc
mov
pop
cld
jmp
scas
add
and
dec
or
clc
mov
adc
add
clc
adc
add
cmp
mov
add
test
lret
mov
addr16
mov
pop
clc
inc
clc
dec
addr16
clc
jbe
and
add
adc
add
clc
jne,pn
lcall
clc
cmpsb
clc
xor
sub
enter
lret
dec
jl
clc
aam
scas
hlt
repnz
jecxz
test
out
dec
movsb
clc
dec
fwait
nop
or
leave
sub
lods
xor
pop
out
push
xchg
ficomps
add
push
clc
daa
clc
lods
push
pop
leave
cmp
mov
or
xchg
jns
repz
fs
popf
faddl
rclb
and
stos
sbb
cmp
clc
mov
xabort
in
jnp
add
sbb
pushl
cld
jmp
sahf
das
xor
clc
mov
lahf
sbb
cmpsb
clc
notl
add
mov
clc
lock
sbb
clc
mov
clc
mov
clc
sub
xor
add
clc
dec
mov
pop
dec
and
add
add
ret
clc
inc
add
pop
loop
aam
clc
pop
aad
jp
mov
xlat
cmp
clc
sub
mov
and
add
sbb
dec
inc
cld
jmp
scas
jns
add
addr16
mov
jmp
leave
movsb
clc
fildll
pop
sahf
push
adc
add
add
repnz
fisttpll
sahf
outsb
mov
pop
imul
sahf
add
add
add
mov
clc
add
add
add
jmp
mov
cmp
leave
and
add
out
aam
sar
mov
ss
test
fldl
add
xchg
add
add
adc
add
jp
fucompp
pop
hlt
std
outsb
mov
pop
adc
dec
mov
inc
add
lcall
hlt
inc
clc
fdivrl
jns
add
clc
and
add
cmp
mov
push
add
jb
add
icebp
imulb
add
mov
cmp
or
clc
out
inc
clc
mov
ret
clc
push
pop
mov
jmp
and
dec
imul
clc
aam
cmpsl
clc
xbegin
sub
das
das
sub
adc
add
scas
ja
clc
js
pop
dec
jge
add
in
jmp
pusha
add
sub
clc
sahf
adc
add
shlb
cmpsb
clc
sti
push
push
ret
nop
sub
cmp
or
cmp
fcoms
add
stc
ds
clc
inc
add
mov
out
add
add
pusha
add
loope
jl
push
add
dec
inc
add
push
ljmp
inc
add
jp
add
ja
clc
sbb
mov
test
ss
ret
jp
push
jle
mov
inc
add
jo
add
add
add
add
fs
cld
cmp
fadds
movsb
clc
mov
add
sar
and
add
call
addr16
add
cmpsl
clc
testb
stc
fisttpl
xor
dec
mov
je
clc
mov
les
push
ret
je
insb
pop
flds
clc
xchg
xchg
xor
add
xchg
ja
cmp
add
cmovb
add
clc
mov
test
mov
add
pop
stos
mov
add
out
pop
pusha
add
or
clc
xor
clc
out
scas
in
adc
add
xchg
xor
add
lret
cld
jmp
mov
pop
cwtl
cmc
add
add
pop
and
add
add
fs
mov
pusha
add
cmp
clc
mov
add
dec
aaa
pop
movsl
clc
addr16
fadd
clc
mov
clc
knotw
pop
fbld
adc
add
add
loopne
aad
mov
add
inc
add
daa
clc
loope
push
inc
clc
rcr
pop
decl
add
add
mov
jp
inc
add
cltd
lahf
repz
clc
or
mov
add
add
add
and
add
daa
clc
cmpsl
clc
out
inc
clc
xchg
sub
cmp
jge
bound
add
add
cmc
lods
ret
add
in
fisttps
clc
sbb
lret
movsb
clc
cld
dec
sub
mov
cmp
clc
xchg
clc
or
inc
clc
icebp
cmp
jns
clc
sahf
cmp
add
fcmovbe
pop
sub
xor
add
add
clc
push
xor
add
dec
cld
jge
clc
push
icebp
xchg
arpl
add
add
cmp
or
clc
jmp
clc
repz
mov
xchg
call
add
xchg
sbb
add
fcmovnbe
addr16
mov
outsb
popf
imul
mov
cmp
pushf
clc
loopne
add
add
clc
push
lea
cld
jmp
scas
or
cmpsl
clc
cmp
xor
add
roll
add
add
cwtl
mov
or
call
cmp
clc
mov
push
ret
subb
sub
add
pop
jo
add
add
add
xchg
xchg
call
clc
xchg
mov
push
movzwl
cld
jmp
and
dec
push
and
add
add
sub
add
std
jnp
clc
and
jl
add
leave
cmp
xchg
dec
call
push
cltd
cmpsb
clc
cmp
clc
dec
or
cmp
or
add
loop
cmp
mov
add
jne
add
inc
add
or
sub
mov
in
fnstsw
imul
cmp
int3
mov
aam
add
add
add
or
clc
xor
insl
cmp
outsb
neg
cs
xbegin
clc
jp
jae
add
mov
cli
mov
dec
cltd
mov
sar
jnp
clc
pop
xor
add
clc
push
mov
dec
fistl
mov
cmp
add
sar
mov
dec
mov
test
push
cmc
ljmp
outsl
sub
hlt
mov
inc
clc
xchg
outsl
out
mov
clc
sarb
sar
xchg
xlat
cmp
dec
xchg
sbb
add
in
jle
inc
clc
in
cmp
mov
lret
or
mov
add
add
clc
int
add
sbb
aam
inc
clc
aaa
sub
cltd
pusha
add
imul
and
add
add
push
clc
push
clc
pop
in
xchg
mov
add
cmp
adc
add
outsb
pop
clc
popa
add
push
clc
test
clc
imul
clc
aam
mov
test
inc
add
loop
iret
fs
and
add
sbb
jmp
add
lods
xchg
and
sbb
jmp
aaa
pop
add
decl
inc
add
nop
sub
sbb
add
jmp
jne
clc
scas
pop
add
add
clc
cli
stc
inc
clc
sar
clc
mov
clc
sbb
add
clc
dec
and
mov
add
ret
lods
outsb
clc
in
sar
cmp
dec
dec
cld
stos
imul
xor
xor
add
bound
add
clc
jmp
push
clc
cmp
cmp
add
add
fdivs
add
js
out
adc
ret
dec
sar
clc
or
scas
and
mov
lea
add
push
add
out
pop
and
add
shlb
mov
in
or
dec
pop
mov
add
stos
imul
js
jl
and
add
popa
add
pop
dec
mov
add
mov
lret
add
cmpsl
clc
mov
add
pop
clc
cmp
add
cld
xbegin
add
clc
pop
aas
cmpsb
clc
sub
idiv
jmp
sbb
sub
movsl
clc
xor
add
pop
clc
sbb
push
cmc
arpl
add
fwait
adc
add
add
js
int
mov
push
insl
lock
xor
add
mov
clc
jnp
cmp
add
stc
xor
add
adc
add
clc
imul
aam
add
stos
cmp
adc
add
adc
add
je
or
add
mov
lret
cs
add
xor
add
cmova
mov
clc
mov
scas
lea
outsl
xor
add
pop
xchg
scas
xor
test
scas
iret
xor
add
sbb
clc
sahf
and
add
fwait
imul
add
clc
push
push
cld
jmp
pop
jge
das
adc
sahf
aaa
sub
add
mov
jbe
clc
insb
sarb
add
mov
clc
xchg
int
clc
shlb
sub
stos
jg
or
push
loop
push
stc
call
jmp
aaa
xor
sub
lret
push
add
xabort
clc
xabort
push
in
fnsave
add
sub
push
push
xbegin
cmp
clc
adc
add
add
mov
add
int
mov
add
cmp
stc
or
out
pop
bound
add
inc
clc
cwtl
xabort
sbb
sbb
sar
jge
jmp
daa
clc
mov
mov
dec
hlt
adc
add
test
pop
lret
movsb
clc
std
mov
inc
clc
sti
sbb
bound
add
aaa
lcall
xchg
cmp
add
cmp
dec
mov
sub
pusha
add
test
nop
es
lret
adc
add
inc
clc
add
cld
or
cmp
clc
icebp
cmp
add
sar
add
mov
clc
lods
movsl
clc
lods
cmp
clc
mov
lahf
es
shlb
add
sub
stos
cmp
mov
fdivs
clc
and
add
pop
mov
push
push
xor
mov
dec
in
mov
bound
add
add
and
add
mov
and
pop
clc
jnp
or
add
aam
cmp
jno
add
sar
clc
inc
add
in
push
adc
add
cmp
pop
js
clc
adc
add
pop
cmp
aas
nop
out
das
xchg
adc
add
sub
pop
adc
add
into
ficoms
lret
dec
add
imul
adc
add
int
xchg
sti
js
clc
mov
xabort
add
mov
or
loope
adc
add
cs
push
add
push
add
decl
int
jmp
push
add
out
add
mov
jg
clc
out
sub
cmpsl
clc
insb
xchg
cmp
clc
fldl
clc
test
sub
jmp
mov
outsl
daa
clc
cwtl
or
cmp
in
push
add
cld
jmp
sub
xor
mov
jg
jne
pop
out
call
lods
leave
add
add
xchg
cmp
jo
add
add
add
or
mov
ds
push
clc
data16
cmp
inc
clc
pop
out
cs
insb
and
add
lods
xlat
cmp
xchg
mov
xchg
testl
lcall
sar
inc
add
fldenv
clc
cs
cmp
clc
inc
add
lea
cmp
add
add
inc
clc
cli
shlb
clc
cmpsl
clc
push
add
sbb
adc
jmp
outsl
movsb
inc
cmp
add
and
test
in
mov
fldenv
xchg
add
lahf
pop
pop
xchg
mov
int3
inc
add
push
add
ss
adc
add
mov
pop
movsl
clc
jae
add
test
pop
rcl
out
repnz
clc
push
mov
or
mov
ljmp
cmc
xor
add
add
pop
fdivs
add
xor
add
add
sbb
add
out
insl
adc
add
loopne
mov
add
xchg
std
mov
inc
add
sbb
aaa
add
lea
jg
test
mov
loop
out
cmp
mov
clc
movsl
clc
inc
add
cli
call
mov
cmpsb
clc
pop
adc
cld
jmp
fs
jo
add
clc
mov
or
or
or
dec
repz
sub
clc
into
cmpsl
clc
mov
in
pop
addr16
stos
push
push
mov
pop
add
lds
mov
or
add
out
ret
nop
xabort
add
add
clc
xchg
jne
rcr
aad
repnz
iret
int3
lcall
clc
jns
icebp
out
negl
clc
rcrl
in
or
clc
fldcw
add
gs
mov
lcall
clc
outsl
and
add
clc
sub
lret
clc
rorb
and
add
adc
add
clc
mov
es
xchg
fstpl
jge
add
cmp
add
cmp
bound
add
sti
ja
clc
insb
mov
clc
add
cmp
clc
pop
aaa
jb
add
or
add
scas
bound
add
clc
insb
je
push
pop
jp
arpl
add
xor
add
add
daa
clc
adc
add
arpl
add
or
fisttps
out
sar
dec
int
clc
cs
clc
cmp
mov
jb
add
push
faddl
ret
adc
sub
iret
xchg
aas
jmp
add
cld
jmp
das
cmp
clc
cli
add
push
out
push
add
aad
clc
addr16
mov
mov
clc
fmulp
frstor
or
fisubs
add
inc
clc
popa
add
scas
fwait
mov
clc
call
adc
add
jecxz
jge
pop
clc
out
jmp
shrb
add
clc
sti
lret
sub
dec
mov
aad
clc
push
add
push
xchg
jg
add
in
adc
add
clc
xabort
and
add
out
lret
inc
clc
jno
add
clc
ds
lea
aad
and
ss
add
insl
push
lock
mov
jno
add
inc
add
fwait
int
clc
sbb
add
cld
jmp
push
xchg
jno
mov
clc
push
adc
add
clc
scas
es
gs
mov
sub
clc
or
cmp
adc
add
adc
add
shrl
jmp
cmp
jle
fbstp
mov
add
inc
add
ss
push
clc
out
in
add
add
clc
xchg
jns
and
add
mov
jne
clc
pop
clc
mov
cld
jmp
or
call
clc
xorps
mov
add
clc
in
test
pop
jns
dec
arpl
add
jge
add
fidivrs
and
add
adc
add
lcall
mov
bnd
clc
or
cwtl
xor
add
shl
jmp
clc
jne,pt
add
jo
add
testl
cwtl
in
add
clc
hlt
incl
push
ret
cmpsb
jge
insb
mov
jnp
out
or
popa
add
xchg
ss
jmp
or
and
add
add
add
xor
clc
dec
mov
add
and
add
jg
clc
lret
add
sbb
adc
outsb
jp
clc
inc
iret
or
add
fwait
pop
subb
jae
add
mul
clc
and
add
push
clc
ficoml
cmp
cld
jmp
sub
cld
jmp
mov
cmp
clc
outsb
xchg
in
ror
mov
clc
jg
lcall
movsb
clc
dec
or
cld
jmp
fs
clc
out
sbb
test
push
adc
clc
jno
add
add
add
clc
sti
xchg
jle
mov
jne
outsl
mov
add
aad
hlt
sbb
scas
push
mov
rcrb
inc
clc
fwait
in
sti
xabort
clc
ret
pop
fldcw
icebp
dec
sti
insl
mov
mov
cld
xor
sbb
clc
mov
inc
clc
jecxz
lock
add
clc
or
add
add
bound
add
add
add
add
add
aaa
pop
mov
icebp
jge
mov
clc
das
testb
popf
bound
add
add
stc
cmp
add
add
add
sub
imul
xor
add
out
pop
fcmovne
mov
push
push
add
mov
daa
clc
jle
cmp
pop
or
clc
mov
push
ret
cld
jmp
test
cmp
clc
add
add
fidivl
mov
push
pop
push
xor
cld
jmp
scas
test
es
dec
mov
fisubl
push
add
fucomp
pop
ret
clc
mov
out
jns
add
pop
dec
es
fstl
clc
xlat
jbe
xlat
xchg
and
cmova
pop
ds
popa
add
push
xchg
outsl
out
lret
jne
clc
pop
cmp
add
mov
add
clc
adc
add
inc
add
dec
mov
xor
add
aad
clc
sub
xor
add
jg
clc
adc
add
push
push
mov
add
add
mov
cmp
add
decl
sar
call
test
jb
add
fsts
add
and
ljmp
pop
xor
add
jmp
dec
push
dec
insb
arpl
add
clc
out
fmuls
clc
cwtl
mov
clc
push
add
xor
add
outsb
imul
bound
add
clc
lock
clc
and
add
push
clc
inc
add
adc
push
xor
cld
jmp
inc
push
clc
cmp
clc
scas
jl
clc
or
clc
cmp
ret
clc
sar
rorl
sub
add
xchg
mov
lret
mov
add
xchg
cmp
lods
push
fnstenv
push
int
clc
cli
ficoms
add
xchg
std
pop
add
add
xchg
ffree
clc
test
jp
push
or
dec
cwtl
cli
popa
add
mov
int3
mov
clc
and
add
add
adc
add
clc
xor
int
and
lods
roll
dec
lret
mov
clc
clc
mov
cmpsb
clc
leave
rcl
popa
add
imul
out
dec
lock
xchg
cld
jmp
cwtl
dec
sub
fptan
decl
int
pushl
dec
xlat
and
xbegin
add
pop
sbb
in
inc
gs
push
xchg
dec
mov
fsubl
add
clc
mov
cltd
scas
inc
clc
test
mov
jbe
and
add
push
add
mov
aad
add
cmp
mov
mov
xchg
js
sub
shll
add
and
cld
jmp
push
sbb
mov
clc
xchg
aas
ja
dec
inc
clc
aam
pop
sub
ret
clc
out
lea
sti
inc
add
or
leave
addr16
jo
add
adc
add
ret
clc
mov
call
inc
add
cltd
push
and
add
pop
cld
jmp
and
sub
mov
clc
popf
cmp
icebp
mov
clc
mov
adc
pop
outsb
xchg
mov
aaa
mov
cltd
test
pop
xor
add
add
fdivrs
inc
add
shr
cmp
xor
add
ret
clc
or
add
xor
add
xor
bound
add
push
jle
addr16
test
cmp
nop
out
inc
clc
sar
sarl
add
add
xchg
inc
clc
hlt
cmp
cmp
adc
add
stc
add
add
decb
clc
dec
add
add
clc
add
add
add
add
clc
imul
clc
jne
loope
dec
dec
loopne
jns
call
dec
mov
xchg
add
add
sbb
clc
ds
add
add
push
add
cld
jmp
mov
adc
add
add
and
add
clc
leave
mov
ljmp
mov
in
test
sar
into
xabort
clc
dec
fdivrl
insl
scas
xchg
adc
add
adc
cmp
add
xor
add
add
mov
add
add
add
inc
add
push
dec
cld
jmp
dec
adc
outsl
fs
arpl
add
mov
clc
call
add
clc
cmovle
repz
add
jo
add
add
cltd
jbe
add
cmp
clc
sahf
and
add
add
aas
scas
jp
xchg
inc
add
mov
add
cmp
xchg
cmpsl
clc
out
sbb
clc
add
fcoml
cmp
add
mov
jmp
mov
loop
push
clc
leave
in
lods
rolb
inc
clc
or
fldenv
pop
cltd
icebp
jnp
adc
add
clc
push
add
jge
jbe
clc
jae
add
repnz
jle
clc
inc
add
out
mov
pop
test
icebp
xchg
roll
lea
clc
gs
add
mull
add
rcr
sarl
sub
mov
clc
mov
sub
cltd
xchg
scas
mov
xabort
mull
add
xbegin
jle
mov
clc
push
xor
clc
pop
cmp
add
add
add
lcall
rolb
ret
aas
dec
sub
mov
adc
add
mov
clc
adc
test
and
push
clc
xchg
decl
test
out
cld
jmp
sar
clc
pop
push
mov
cld
jmp
fstpt
mov
out
stos
xor
add
mov
xchg
pop
mov
test
lret
xor
add
clc
dec
cmp
xor
add
loope
push
clc
mov
add
call
lret
inc
clc
mov
leave
inc
clc
add
add
cmp
clc
pop
roll
add
lods
inc
add
test
pop
clc
sub
clc
mov
mov
mov
or
xabort
sub
testl
mov
add
lcall
clc
jl
sbb
sub
or
test
mov
in
popf
jmp
push
pop
cld
jmp
jp
lods
cwtl
pop
icebp
gs
loopne
test
stos
fisubrs
add
add
add
sbb
or
clc
or
xor
add
pop
xor
add
mov
and
add
clc
gs
xor
add
pushf
fwait
push
cmp
data16
sar
add
adc
add
pusha
cld
jmp
sub
es
sub
xabort
xchg
cmp
add
ficomps
push
lahf
inc
clc
fldenv
clc
pop
mov
add
loope
sbb
clc
rcrl
sub
xchg
and
test
out
cld
jmp
jae
add
add
clc
pop
xchg
in
fwait
leave
push
pop
out
adc
cmp
mov
cmp
dec
cmp
adc
add
dec
icebp
pusha
add
xor
add
clc
fwait
mov
sar
add
test
outsb
fs
jno
add
and
add
cmc
cmp
cltd
nop
and
sub
add
or
into
jb
add
repnz
rol
clc
mov
add
sub
jnp
add
fs
dec
cmp
jmp
clc
jnp
push
cld
jmp
test
lods
dec
dec
inc
add
mov
cld
jmp
test
add
in
stos
enter
or
jecxz
inc
clc
pop
inc
add
inc
add
sar
dec
popa
add
divb
in
and
add
adc
add
in
pop
leave
js
arpl
add
clc
dec
jl
pop
push
ret
clc
in
fldl
nop
mov
add
xbegin
or
cmp
out
aam
clc
je
add
push
lock
std
mov
clc
pop
pusha
add
clc
rol
clc
fs
mov
sub
clc
push
add
arpl
add
clc
jb
add
add
add
mov
pop
push
hlt
sbb
xchg
fbstp
mov
or
sub
add
xabort
add
fstpl
mov
int3
mov
and
add
and
add
dec
ljmp
sti
xor
lock
outsb
add
add
clc
dec
sub
cmp
push
ret
push
push
js
push
cmp
leave
inc
clc
test
pop
cmp
sbb
leave
test
jecxz
jno
add
add
cwtl
pop
aad
cmp
jmp
push
mov
es
clc
mov
enter
es
jl
clc
mov
testb
clc
mov
clc
mov
bound
add
add
add
add
enter
xor
add
mov
ljmp
ret
clc
testl
push
popl
cld
jmp
adc
sub
clc
add
add
add
jp
mov
clc
lods
xchg
adc
add
in
pop
int
insl
dec
pop
mov
shrb
adc
add
clc
ja
cmp
jns
add
pop
out
and
add
add
sub
clc
cmp
clc
jmp
jl
add
add
add
pop
sar
sbb
jl
clc
in
kmovw
clc
pextrw
add
mov
jae
add
pop
sub
clc
lods
arpl
add
jne
cld
jmp
or
loopne
addr16
fwait
movsb
clc
aaa
fistps
clc
mov
clc
xor
xor
add
inc
clc
pop
ss
clc
sbb
mov
fisubl
sbb
jmp
or
je
clc
clc
jmp
add
mov
repnz
aas
mov
into
xchg
mov
ficomps
and
add
adc
add
clc
scas
xchg
clc
loopne
cmp
clc
test
cmp
setns
push
add
cld
jmp
jbe
xchg
js
inc
add
shll
fcoml
add
movsl
clc
jle
fnop
mov
outsl
test
out
and
add
add
sbb
cmp
leave
add
xchg
out
dec
inc
clc
cmpsb
clc
jae
add
add
incb
add
push
add
add
add
aas
dec
int
dec
mov
add
cld
jmp
nop
jp
test
add
jmp
sub
dec
dec
repz
adc
add
add
cwtl
adc
add
mov
add
loop
mov
adc
clc
lods
call
clc
mov
lret
add
clc
test
xchg
and
add
pop
add
add
add
cmp
add
push
in
decb
mov
clc
dec
lods
mov
sbb
clc
add
add
lcall
clc
mov
ret
clc
lock
adc
add
jne
pop
dec
loope
sub
inc
clc
push
push
cmpsl
clc
xor
add
add
add
push
xchg
imul
add
loop
sbb
adc
push
clc
and
add
sti
fnstcw
and
pop
clc
sbb
out
xor
add
inc
clc
mov
clc
xbegin
cld
jmp
sub
mov
pop
daa
clc
test
add
ja
icebp
jecxz
fcmovu
outsb
loopne
addr16
lret
addr16
mull
add
clc
movsb
clc
push
add
data16
and
add
clc
jnp
bound
add
mov
push
add
jbe
clc
xor
add
clc
mov
add
and
add
mov
add
cld
jmp
dec
xchg
cmp
negl
dec
push
cld
jmp
xchg
insb
fs
add
fs
bnd
clc
push
prefetcht2
cld
out
repnz
shl
clc
out
mov
push
mov
mov
adc
add
add
clc
sti
test
mov
adc
add
call
imul
push
data16
loop
mov
add
lcall
push
add
jbe
ss
hlt
pop
dec
sub
fildll
outsl
jmp
xor
add
addr16
outsl
iret
jns
xchg
mov
inc
clc
mov
add
xor
clc
cmp
outsl
test
sbb
add
mov
sub
xor
add
clc
stc
or
xor
add
xbegin
add
mov
add
insl
jp
clc
cld
sbb
xchg
xlat
cmp
outsb
jmp
cmp
clc
xabort
sti
iret
das
pop
sbb
clc
sub
clc
idivb
movsb
clc
in
repnz
cli
pop
adc
add
dec
inc
clc
out
pop
ss
add
clc
lock
add
lock
fsubs
add
add
add
add
sahf
iret
div
add
add
xchg
test
inc
clc
sub
test
clc
pop
push
js
cmp
arpl
add
clc
scas
inc
clc
imul
aad
mov
sub
lahf
xchg
pop
mov
lock
out
sbb
mov
and
add
mov
jmp
sub
clc
xchg
jnp,pt
popa
add
call
cs
das
or
add
mov
or
pop
clc
mov
clc
jecxz
adc
clc
sbb
add
add
add
lahf
adc
xchg
xchg
cmc
sbb
xchg
push
scas
mov
lcall
pop
push
cmc
xchg
pop
clc
pop
clc
sbb
add
add
add
sti
cmp
sub
outsl
xbegin
clc
bound
add
xchg
arpl
add
lock
add
add
cld
lret
jg
es
rcr
push
mov
cmp
add
xchg
int
clc
dec
or
clc
lods
lods
fisubs
clc
lahf
adc
add
in
outsb
lcall
and
and
push
push
push
jle
pop
outsb
pop
imul
add
lods
dec
and
add
push
and
add
js
mov
cmpsl
clc
notl
inc
adc
jmp
and
dec
xchg
mov
add
loopne
loop
xor
add
jne
clc
mov
add
add
add
push
sbb
add
cwtl
sub
sub
add
add
clc
sub
data16
es
mov
popa
add
pusha
add
aaa
insb
xchg
bound
add
mov
add
insl
push
mov
ljmp
scas
outsl
adc
clc
je
add
sti
test
add
clc
hlt
imul
imull
ret
clc
gs
push
clc
pusha
add
jo
add
int
pop
jae
jmp
sub
add
add
insb
daa
clc
scas
fisttps
sub
cmp
mov
cld
jmp
add
adc
add
insl
ljmp
lea
dec
out
mov
lock
clc
cmp
mov
clc
int3
ret
clc
inc
clc
push
mov
bound
add
clc
pusha
add
imul
xchg
pop
or
es
sub
jge
gs
adc
add
mov
add
jns
clc
data16
sbb
test
sub
add
jmp
into
pop
jb
add
ret
ljmp
push
and
jnp
stos
jno
add
or
lahf
sarl
movsl
clc
lret
push
mov
fs
loopne
fistpl
repz
and
add
push
add
test
outsb
jl
clc
loop
fwait
dec
inc
clc
lods
mov
add
outsb
mov
pop
decl
and
add
sub
rorl
sar
out
call
clc
xor
add
das
sbb
mov
ja
pop
test
loop
aaa
jge
lret
add
clc
mov
gs
outsl
data16
xor
adc
gs
push
add
pop
fiaddl
add
lret
mov
ljmp
cmp
clc
sar
inc
clc
pop
cmp
clc
lahf
fs
call
clc
outsb
push
inc
add
cltd
movlps
add
clc
push
add
je
dec
sub
fwait
cmp
sbb
xchg
pusha
add
sti
lods
inc
clc
test
add
add
add
pop
jns
in
repz
cmp
lret
mov
sbb
gs
push
dec
loop
frstor
push
popf
sub
cltd
imul
add
sbb
outsl
std
out
scas
push
mov
clc
out
pop
add
add
sti
push
add
push
add
repz
clc
lods
je
fs
pop
clc
mov
add
stos
sub
clc
ficoml
push
add
stos
and
add
pop
clc
xchg
pop
add
add
out
push
fsubr
xabort
into
adc
clc
and
add
push
cld
jmp
das
pop
push
and
cmp
add
fiadds
xbegin
les
cld
jmp
xor
in
loopne
push
clc
mov
clc
loope
arpl
add
inc
clc
sub
clc
imul
clc
outsb
scas
pop
jl
adc
add
clc
and
add
clc
xchg
imul
clc
popa
add
xchg
xchg
cwtl
mov
add
mov
add
add
aas
mov
fst
sub
inc
add
jle
add
clc
ljmp
clc
xor
add
aad
clc
mov
adc
add
clc
insb
cmp
into
je
push
lock
adc
add
sub
dec
cwtl
out
gs
jo
add
popa
add
rcll
add
gs
add
add
in
adc
add
clc
shlb
add
mov
jle
pop
sar
add
fwait
cmpsb
clc
cmp
add
add
out
cmpsl
clc
dec
xlat
push
ljmp
pop
dec
push
ja
clc
jl
cmp
clc
bound
add
jmp
lods
add
add
pop
mov
clc
addr16
mov
add
xchg
mov
or
xor
add
cmp
add
test
jge
clc
sar
daa
clc
mov
add
xor
and
pushf
sbb
add
je
clc
mov
lret
in
repz
add
push
add
xchg
inc
add
cmpsb
clc
sub
xchg
daa
clc
xchg
push
mov
movsb
sub
fidivs
fidivl
add
clc
lret
test
or
inc
add
pop
pop
adc
add
add
push
add
out
mov
add
test
clc
ljmp
push
repz
or
sbb
add
shlb
add
dec
cld
pop
add
add
clc
and
add
repz
cmp
clc
ret
aam
cmp
jmp
push
xchg
xor
clc
or
out
jne
mov
xor
jmp
xor
clc
sub
arpl
add
or
add
and
add
aas
mov
cld
jmp
scas
or
add
daa
clc
stos
push
fdivr
jmp
lods
pushf
outsl
pop
inc
clc
pop
cltd
pop
mov
jle
clc
push
add
mov
sub
dec
cmpsb
clc
imul
jo
add
xchg
sbb
dec
cmp
jmp
inc
sub
cmpsl
clc
in
xor
clc
ljmp
push
cld
jmp
sub
add
xchg
int
pop
pop
xbegin
clc
xchg
mov
add
add
add
xor
xor
call
ss
ret
or
dec
push
mov
cld
jmp
xor
mov
jmp
es
adcb
push
add
int3
sub
add
xlat
test
pop
loope
jmp
add
add
icebp
lret
and
add
inc
add
mov
clc
cmp
movsb
clc
cmc
push
add
clc
pushf
dec
push
push
cld
jmp
cmpsb
push
push
imul
pop
mov
inc
add
adc
add
int
jmp
es
jns
sarl
out
decb
add
push
xor
clc
fcmovnbe
repz
add
fisubrs
add
scas
jl
add
pop
jecxz
out
clc
mov
pop
xor
add
test
cld
jmp
cmp
lods
scas
pusha
add
imul
into
jnp
mulps
push
pop
jo
add
movsb
clc
xchg
push
add
cwtl
push
add
iret
sub
clc
mov
clc
pop
into
aam
cmpsb
clc
bound
add
mov
add
test
xor
add
clc
sar
dec
dec
bound
add
dec
jmp
rolb
jmp
ja
pop
push
sbb
dec
pop
in
rcrl
add
jp
add
scas
cmp
xchg
fsubr
pcmpgtd
pop
out
sbb
jmp
sub
sub
mov
sbb
imul
cld
jmp
xor
popa
inc
dec
lods
mov
add
int
clc
pop
mov
jne
push
add
nop
mov
call
cld
jmp
cmpsb
sub
clc
add
add
int3
mov
or
add
mov
fldt
mov
out
loop
aaa
or
sbb
cmp
and
add
into
sub
roll
add
add
clc
daa
clc
inc
add
aam
xchg
dec
imul
aas
fidivs
add
cwtl
aam
jmp
add
xchg
fisttpl
clc
into
stos
mov
or
xor
add
add
dec
xor
add
out
scas
lahf
int3
xor
add
sti
int
add
add
add
add
dec
pop
clc
pop
add
aaa
daa
clc
ret
dec
sub
cltd
ss
add
clc
sub
fdivrl
clc
notb
pop
arpl
add
lea
clc
bound
add
pop
add
push
pop
pop
mov
lret
scas
lcall
jecxz
adc
add
inc
clc
in
aaa
cmp
mov
mov
dec
fwait
repnz
xabort
clc
jo
add
leave
in
inc
clc
movsl
clc
xlat
mov
clc
jb
add
lret
mov
mov
clc
sub
add
or
push
repz
add
pop
mov
cmp
repz
not
es
int3
repnz
sbb
gs
mov
ds
xchg
lcall
add
sbb
cmp
add
addr16
lcall
jmp
aaa
inc
push
xor
cmpsb
clc
test
fldl
add
mov
clc
inc
add
icebp
pop
je
add
add
cmc
jnp
clc
xchg
mov
and
add
clc
mov
test
outsb
pop
inc
clc
clc
repz
hlt
mov
cmp
add
mov
in
test
clc
nop
repnz
add
add
xchg
addr16
mov
xor
add
nop
jp
cmpsb
cmovle
add
clc
fldenv
add
sub
sub
adc
add
xchg
mov
mov
arpl
add
add
ja
push
add
pxor
aad
clc
or
add
push
cmp
add
or
xor
add
call
cld
jmp
imul
outsb
push
push
add
outsb
push
insl
icebp
das
insb
stos
xchg
lods
xabort
sahf
lahf
das
mov
mov
add
pop
mov
pusha
add
sub
add
jg
jae
add
sub
fs
xchg
xor
add
mov
into
loop
mov
lea
test
decl
jmp
sahf
add
dec
pop
clc
jge
xor
lods
fsubrs
icebp
fcomi
cmp
stos
jecxz
pop
add
push
inc
clc
vpcomd
or
add
sar
data16
enter
pop
clc
pop
jbe
mov
lahf
add
ljmp
shlb
push
ret
or
pop
stos
push
clc
jns
add
out
aaa
dec
cwtl
jle,pt
lods
xbegin
clc
xchg
jae
add
int3
cli
ss
test
icebp
xchg
cmp
add
clc
lea
clc
mov
add
imul
jb
add
clc
push
scas
adc
clc
bound
add
cltd
push
add
jle
enter
dec
cmp
int3
je
sub
push
push
mov
adc
add
push
stc
aaa
icebp
inc
add
xor
add
clc
mov
dec
cmp
add
flds
std
and
add
in
pushl
sbb
cmp
add
jmp
scas
mov
notb
setg
add
cli
call
pop
dec
and
add
add
clc
es
push
xor
add
mov
cmpsl
clc
mov
clc
inc
add
insb
lahf
mov
jmp
adcb
mov
clc
gs
popf
add
add
clc
pop
jb
add
add
push
add
inc
add
cmp
cmp
clc
cmp
add
xlat
mov
mov
clc
mov
clc
rol
clc
mov
test
inc
add
fsubs
out
fistl
add
add
jmp
test
sbb
into
cmp
test
pop
js
clc
adc
add
clc
outsl
add
add
aas
fadd
clc
in
mov
inc
add
outsl
movlps
add
clc
sar
clc
inc
add
sahf
sahf
mov
cld
jmp
imul
clc
movsb
clc
mov
clc
cmp
add
mov
add
cmp
scas
xchg
decl
sbb
jecxz
xor
add
clc
daa
clc
adc
sbb
xor
pop
lods
xchg
inc
add
bound
add
cwtl
popa
add
dec
mov
add
push
add
ficomps
add
and
stos
iret
ljmp
adc
add
sub
add
xchg
xbegin
add
scas
mov
jmp
movsb
and
sub
dec
jnp
adc
and
add
sbb
xchg
std
or
imul
ss
ret
jg
xor
inc
clc
lahf
ljmp
xchg
adc
add
jne
cld
jmp
lret
add
add
insb
jle
mov
clc
sbb
add
sbb
lret
bound
add
out
jns
addr16
push
add
insb
pop
inc
add
stos
jb
add
decb
clc
adc
add
clc
mov
xor
add
aad
outsb
and
add
xlat
mov
mov
xchg
movsl
clc
daa
clc
inc
clc
mov
pop
mov
pop
int3
fs
insl
xchg
hlt
or
push
fcoml
sbb
clc
pop
lcall
add
jnp
xabort
sbb
gs
xor
add
clc
call
ss
ret
adc
pushf
dec
mov
add
clc
pop
in
into
cmp
sub
clc
jns
clc
mov
add
bound
add
sub
add
clc
push
push
add
push
adc
pushl
push
jmp
or
clc
sbb
daa
clc
outsl
inc
add
sbb
mov
ret
lret
jo
add
clc
cmp
xor
movsl
clc
sbb
cmp
adc
add
dec
xchg
test
adc
add
add
mov
test
decl
fsts
add
es
mov
jmp
fwait
insl
cli
out
es
and
fstl
fdivrs
add
pop
add
xchg
popa
add
mov
or
adc
add
mov
clc
aaa
mov
and
adc
mov
sub
pop
sub
cld
jmp
sbb
sbb
xor
add
clc
push
mov
cld
jmp
das
adc
add
adc
push
add
xor
add
dec
xchg
xor
add
pop
clc
aad
add
add
mov
ret
clc
xchg
int
jle
jns
clc
fldl
clc
repnz
cmp
add
sub
cli
imul
fisubs
add
and
js
push
xchg
jg
add
clc
ret
add
fcoml
sub
or
pop
insb
lahf
push
clc
ljmp
add
lcall
clc
push
loope
call
sub
push
ret
pop
lods
add
lods
cmp
mov
clc
jle
clc
insb
xor
add
add
adc
add
test
xor
add
add
add
mov
add
mov
mov
mov
or
daa
clc
lods
ljmp
clc
add
jmp
test
ss
add
out
pusha
add
xor
add
test
mov
jg
mov
test
cwtl
or
loope
push
stc
nop
bound
add
ret
cld
jmp
cmp
or
cmp
add
pop
cld
jmp
ja
adc
clc
iret
popf
aaa
push
add
aad
add
dec
std
cltd
mov
clc
mov
cmp
outsl
mov
fldenv
add
sbb
or
jno
add
adc
ret
clc
xor
add
shl
cld
jmp
cmp
dec
xchg
js
pop
loope
mov
test
or
clc
jne,pt
mov
clc
push
add
addr16
adc
add
pop
jo
add
movsb
clc
lods
call
jg
jmp
sbb
push
ret
pop
cwtl
sub
sub
inc
sub
jmp
sub
push
xor
add
mov
test
pushl
sub
mov
add
sub
add
xlat
xor
add
sbb
scas
jns
decl
shrb
adc
mov
mov
xchg
mov
mov
add
jmp
cld
jmp
pop
mov
add
rol
clc
gs
ds
push
ret
test
add
hlt
or
hlt
loope
fisubrl
add
cmpsl
clc
adc
add
jmp
cwtl
push
cmpsb
stc
pushf
jae
add
cmp
in
pop
mov
sti
adc
std
fistpl
mov
or
pop
mov
jmp
clc
cmp
add
inc
add
pusha
add
in
pop
clc
mov
push
jmp
sbb
int3
push
cmp
loopne
repz
scas
out
inc
clc
cmp
clc
data16
sar
mov
jecxz
sti
mov
xchg
dec
inc
clc
idivl
add
rorl
add
cs
or
add
cmp
clc
jle
clc
add
and
add
js
js
sahf
leave
fildl
add
clc
test
and
mov
lcall
add
bound
add
dec
loopne
fiadds
lret
dec
push
dec
ljmp
popa
add
clc
fdivrl
clc
das
adc
xchg
mov
mov
in
cmc
pop
lahf
add
add
add
sbb
pop
pop
insb
push
mov
cld
jmp
push
sbb
or
clc
mov
sti
mov
clc
ss
cmp
mov
negl
pop
dec
sbb
push
mov
ja
sub
add
mov
pop
clc
cmc
inc
add
loop
inc
clc
push
add
adc
add
shrl
cli
fisttps
clc
jnp
add
rorl
clc
cmp
clc
sub
add
mov
fcmovne
or
dec
xchg
cmc
mov
aas
xlat
pop
or
jns
xchg
mov
nop
push
push
pusha
add
push
clc
sub
clc
mov
cld
jmp
add
adc
add
lret
loopne
adc
add
ficomps
mov
mov
cld
jmp
jp
add
lret
xor
add
dec
xor
pop
cli
mov
adc
add
bound
add
add
add
add
ljmp
call
add
add
xor
fxch
movsb
clc
pop
sar
bound
add
push
fwait
cmp
jbe
cwtl
xchg
es
pop
pop
clc
in
mov
lcall
sbb
add
push
xor
add
cmp
add
clc
sub
add
clc
fwait
sbb
sub
out
cmp
clc
xchg
push
add
sub
ss
scas
pop
clc
and
in
cmp
call
and
add
add
cmp
clc
aas
sbb
lahf
cmp
cld
jmp
sub
jnp
clc
std
sahf
iret
cmp
mov
clc
rclb
add
add
add
and
add
clc
xchg
in
sti
sbb
clc
aas
push
cmp
add
dec
out
in
cltd
fwait
test
loopne
xor
add
push
push
add
sub
lcall
mov
cmp
add
add
add
lret
add
cmp
nop
ret
or
test
mov
vzeroupper
push
add
movsb
clc
mov
mov
inc
sub
rdmsr
add
mov
outsb
insb
or
dec
cmp
sar
xchg
imul
inc
add
dec
fwait
push
clc
inc
add
xor
add
add
fidivs
add
cmp
adc
stos
or
mov
add
mov
je
pop
clc
dec
sub
sub
lods
dec
sub
call
clc
pop
push
mov
add
add
repz
push
cld
jmp
adc
subb
clc
mov
clc
sub
loope
das
inc
clc
adc
add
xchg
xor
add
add
mov
lock
add
imul
sub
clc
das
xor
add
or
adc
dec
cmpsb
clc
rolb
add
adc
add
add
das
in
cwtl
repz
add
add
shl
xor
add
cltd
fwait
stos
ret
xchg
lock
and
pop
pop
xor
add
adc
add
clc
mov
jle
add
sbb
clc
xor
jle
mov
add
lret
add
pop
enter
ror
scas
adc
add
mov
clc
cmpsl
clc
or
popl
add
outsl
out
fs
cmp
fs
inc
add
mov
mov
clc
in
pushf
jg
xor
add
mov
mov
inc
add
insb
cmpsl
clc
push
add
fwait
imul
sub
jmp
xchg
cmpsb
dec
loop
mov
clc
or
testb
sub
dec
icebp
lods
hlt
jg
clc
adc
lret
xchg
xchg
imul
clc
or
sub
dec
call
jmp
pop
sub
pop
jno
add
xchg
cmpsl
clc
pop
es
stos
jnp
inc
clc
ror
fsubp
clc
or
adc
add
addr16
popa
add
lea
loope
or
dec
add
pop
stc
jno
add
clc
add
add
add
add
sar
add
test
lahf
or
dec
repz
add
xchg
cmp
adc
add
push
mov
cld
jmp
fs
mov
lock
scas
mov
loopne
jb
add
add
divb
add
push
outsb
mov
mov
cmc
movsl
clc
pop
inc
add
pop
shr
addr16
in
inc
add
hlt
jp
clc
mov
ret
clc
xchg
sbb
add
rolb
clc
test
shll
add
iret
xor
add
clc
enter
mov
add
arpl
add
test
sbb
outsl
stos
inc
add
dec
push
cmp
mov
daa
clc
jge
dec
dec
and
sub
hlt
pop
clc
clc
adc
add
clc
adc
add
out
adc
add
or
addr16
fists
cmp
aaa
adc
add
and
add
add
add
clc
ss
inc
add
outsb
es
cltd
arpl
add
add
push
push
xchg
xlat
ret
clc
enter
add
add
add
add
add
aas
hlt
dec
xchg
das
rcl
jp
add
mov
add
push
lcall
xlat
jb
add
cltd
inc
add
add
add
pop
and
inc
clc
sub
mov
mov
inc
clc
mov
add
lret
inc
add
adc
add
xor
add
push
mov
add
add
insl
jecxz
sti
scas
add
add
xchg
std
addr16
xor
mov
xadd
cli
movsb
clc
add
add
call
in
movsl
inc
xchg
xor
arpl
add
pop
jp
mov
clc
jg
clc
cmp
or
push
clc
mov
push
outsl
jb
add
mov
cmc
push
push
add
in
mov
and
add
add
shl
test
adc
add
clc
in
in
xabort
clc
adc
push
add
add
cmpsb
clc
pop
jae
add
clc
or
sub
clc
cmp
inc
clc
xor
add
adc
clc
inc
clc
mov
dec
inc
clc
sub
xchg
pop
incl
jge
cld
jmp
or
push
mov
ret
mov
add
push
repz
dec
jle
xchg
lcall
add
decb
arpl
add
sub
mov
jmp
test
clc
mov
clc
out
cld
iret
xchg
mov
jne
xor
cmp
clc
loope
dec
xchg
mov
cmp
add
xbegin
clc
repz
add
lea
adc
add
aad
add
mov
out
sub
add
pop
addr16
rol
clc
pop
fnsave
fldcw
jg
jmp
add
cmp
cmp
xchg
popf
jns
clc
jle
xor
add
mov
movsl
clc
pusha
add
mov
add
cld
jmp
mov
mov
pop
clc
fxch
outsl
xchg
repz
clc
sbb
adc
add
clc
or
clc
inc
clc
ds
inc
clc
fs
and
add
mov
cld
jmp
push
pop
add
add
in
sti
push
jns
insl
push
mov
cld
jmp
add
sbb
or
add
cwtl
and
add
adc
add
aam
xor
or
mov
clc
lret
sub
repz
add
mov
cld
or
clc
cmp
enter
add
push
aas
xchg
push
xbegin
sub
clc
and
add
add
loopne
icebp
clc
push
sub
mov
pushf
cmc
inc
add
lods
sbb
inc
jb
cld
jmp
test
jmp
in
hlt
fnstsw
sub
mov
ret
clc
pop
clc
push
cmc
enter
cmp
adc
add
add
cmp
inc
clc
popa
add
lahf
sbb
add
jge
jle
jl
mov
add
or
fsubl
add
je
insl
sub
clc
dec
js
clc
cmp
xchg
data16
clc
mov
insb
xchg
insb
loopne
aad
out
mov
bound
add
push
pop
cmp
ret
adc
inc
add
inc
add
jg
ds
push
ret
sbbb
cwtl
inc
clc
test
nop
pop
hlt
sub
xchg
mov
clc
adc
add
add
jb
add
sbb
xor
hlt
scas
test
mov
ficoms
data16
jmp
outsl
rclb
add
inc
clc
adc
add
clc
push
xor
add
ret
clc
insb
jae
add
jge
loope
mov
jp
dec
cli
jae
add
add
aad
clc
sbb
add
sar
push
cld
jmp
xchg
nop
ja
add
add
cli
cmp
sbb
sti
mov
aas
mov
cmp
clc
mov
js
clc
push
push
jge
mov
sbb
clc
mov
add
aas
xor
clc
loop
stc
in
sti
stos
cli
shll
jge
je
cld
jmp
cmpsb
clc
loope
mov
push
sub
push
clc
push
add
mov
clc
inc
add
leave
pop
clc
xlat
mov
cltd
sahf
stos
push
push
cld
jmp
or
aas
push
adc
shl
imul
cmp
add
sbb
lahf
sub
clc
fidivrs
clc
push
add
cmpsb
clc
or
cmc
dec
mov
add
bswap
jg
cmc
dec
outsb
outsl
in
push
sbb
mov
imul
xor
add
test
add
in
cltd
bound
add
clc
or
add
loope
push
mov
add
cmp
push
jne
cld
jmp
xchg
add
add
xor
add
and
mov
add
sbb
sbb
ret
clc
add
add
add
inc
clc
popa
add
mov
add
aam
mov
clc
mov
cld
jmp
imul
clc
mov
and
xchg
jbe
add
daa
clc
sahf
push
clc
lret
pop
and
clc
out
clc
not
test
nop
aas
jae
add
jo
add
clc
ret
clc
push
lock
jg
clc
cmp
jl
clc
test
rcll
add
or
jecxz
push
add
imul
inc
add
jmp
cld
jmp
mov
bound
add
lock
add
aam
fwait
clc
insb
popa
add
adc
add
mov
cld
lea
sbb
clc
push
nopl
jmp
sub
adc
add
clc
aaa
cmp
add
call
clc
push
push
jne
clc
mov
imul
cmpsb
clc
xbegin
ja
addr16
push
repnz
clc
xchg
dec
pop
sbb
arpl
add
adc
add
add
adc
add
add
nop
jp
test
clc
outsb
jns
push
add
sbb
push
ret
dec
mov
ljmp
je
xchg
in
sahf
mov
mov
and
add
test
cmp
clc
in
call
rcl
daa
clc
pop
int3
fs
fiadds
cmp
clc
add
mulb
clc
int
in
mov
add
bound
add
add
add
push
enter
adc
jg
fistpl
fnstenv
push
add
and
add
dec
cmpsl
clc
adc
add
in
outsb
xchg
adc
add
mov
or
adc
arpl
add
clc
aam
xor
lock
lods
mov
insl
lret
ja
pop
jmp
add
pop
scas
lret
std
test
clc
mov
pushf
sub
aas
or
loope
cmp
mov
add
clc
push
add
scas
xor
add
outsb
iret
sar
add
add
add
dec
cmp
jl
inc
add
ror
aaa
call
mov
das
lret
and
add
scas
imul
xor
add
stc
leave
jns
add
cmp
add
jnp
clc
pop
into
dec
lea
sbb
cmpsb
clc
inc
add
outsl
push
lcall
xor
add
jg
or
mov
mov
cltd
lret
loope
sub
mov
data16
xor
push
cmp
and
fstps
add
pop
and
add
lahf
mov
cmp
imul
clc
mov
cmp
clc
mov
insb
fnsetpm(287
clc
bound
add
sub
pusha
add
int
imul
jmp
lods
sub
aad
xchg
cld
jmp
sub
lea
xor
or
mov
fs
data16
lock
add
lahf
mov
cs
mov
clc
push
add
push
clc
sbb
add
push
add
in
daa
clc
and
add
mov
xchg
and
add
leave
xchg
outsl
jbe
push
mov
aam
jb
add
add
daa
clc
mov
enter
inc
add
push
add
mov
clc
fs
sub
add
cmp
add
cmp
clc
sar
clc
gs
xchg
mov
dec
mov
clc
adc
faddl
jecxz
xchg
jl
add
in
adc
clc
fsubs
clc
or
iret
loop
xchg
mov
add
xchg
lods
pop
xbegin
push
xchg
jle
iret
mov
clc
push
pop
test
clc
imul
stos
mov
xchg
or
adc
add
jle
xbegin
pusha
add
in
dec
add
arpl
add
shrb
gs
clc
decl
ss
ret
sub
dec
movsl
clc
xchg
insb
pop
imull
das
dec
imul
es
shlb
add
xor
flds
mov
in
sar
sar
cmp
in
jg
clc
and
add
sbb
test
xor
add
fcoml
add
push
add
adc
add
clc
iret
nop
jo
add
clc
fnstsw
int3
out
mov
add
cmp
clc
in
pop
mov
clc
or
xchg
sar
clc
dec
data16
std
mov
sbb
add
loopne
adc
add
clc
sarb
cld
jmp
dec
sub
adc
cld
jmp
pop
xor
sub
add
ficomps
ss
mov
jno
add
bound
add
jmp
xor
dec
cmpb
xchg
test
inc
clc
aas
fisttpl
in
fucomip
mov
clc
mov
add
mov
insb
sbb
add
jno
add
clc
out
push
add
xchg
cltd
iret
mov
lcall
cmp
clc
mov
sub
clc
xor
add
cmp
add
fistps
inc
add
sub
jae
add
add
icebp
fstpl
inc
add
jecxz
mov
mov
in
icebp
fdiv
test
iret
xchg
jne
push
push
add
test
inc
add
sti
xabort
clc
or
clc
imul
add
arpl
add
clc
cltd
jo
add
aas
hlt
xchg
jns
add
add
add
mov
aam
and
add
aaa
sbb
jo
add
add
sub
add
clc
aas
sub
add
ss
call
inc
clc
clc
lahf
cli
clc
xor
add
test
jmp
repnz
dec
push
sar
dec
dec
inc
clc
push
clc
sysexit
scas
shll
add
sbb
cmp
ljmp
push
sub
outsb
in
sub
clc
nop
and
add
clc
mov
push
add
cs
cmp
clc
jns
fadd
clc
std
dec
pop
aam
add
jne
clc
push
popl
add
inc
clc
out
push
xchg
xchg
ljmp
clc
shlb
fcoms
arpl
jmp
mov
pop
pop
inc
clc
sub
mov
es
add
add
emms
imul
jnp
das
jecxz
fadds
add
jno
add
outsb
jb
add
clc
mov
add
mov
add
or
add
xchg
mov
add
mov
mov
cld
jmp
dec
pop
add
xbegin
jnp
clc
cmp
sbb
pop
clc
jmp
fs
pop
xor
clc
lret
xchg
jbe
lods
push
jmp
dec
sub
clc
xchg
popf
inc
clc
cltd
xor
add
pop
add
out
je
add
lret
mov
scas
mov
add
add
adc
add
add
cwtl
dec
mov
xbegin
add
call
cld
jmp
xor
movsb
xor
add
aad
add
jecxz
lret
inc
add
dec
scas
inc
clc
ds
outsl
testl
add
in
repz
jecxz
jmp
jbe
lahf
jnp
jle
daa
clc
lcall
add
popa
add
imul
rcrb
std
cli
mov
sar
clc
outsb
arpl
add
add
add
add
ss
ret
pop
data16
clc
mov
lret
ljmp
stc
adc
sbb
bound
add
popa
add
je
mov
clc
xor
add
cmp
sbb
xchg
shr
lret
clc
jge
inc
clc
adc
add
add
add
cld
jmp
add
or
clc
sub
decb
lcall
fs
cld
cwtl
inc
clc
inc
add
and
add
add
mov
add
push
inc
xlat
pushl
push
jg
add
dec
or
push
nop
jecxz
shl
clc
or
pushf
xor
add
shlb
add
add
xor
add
out
cwtl
decl
test
jmp
test
push
add
and
add
leave
lods
pcmpgtd
inc
clc
ja
clc
leave
xbegin
pop
std
and
add
add
out
push
push
mov
clc
mov
nop
sahf
fiadds
add
clc
mov
xchg
fidivl
mov
xbegin
inc
add
fwait
imul
cmp
jecxz
jae
add
add
add
adc
clc
punpcklbw
add
adc
add
push
add
cmp
add
jne
jne
sar
clc
rcrb
sub
xchg
adc
cmp
add
add
add
mov
mov
lcall
sub
dec
adc
add
sub
cld
jmp
or
pop
fcmovb
clc
or
inc
clc
or
out
call
push
add
leave
out
movsb
clc
push
add
addr16
jmp
xchg
popf
cmp
and
add
pop
mov
aam
std
push
jb
add
clc
enter
outsl
int3
dec
lret
lods
or
adc
add
add
add
adc
xchg
popa
add
data16
sbb
adc
push
lods
ret
clc
pop
icebp
mov
jnp
clc
pushf
adc
add
add
cld
cmp
cmp
in
in
mov
and
add
clc
mov
add
mov
hlt
jnp
push
add
pop
mov
sbb
in
ja
insl
mov
inc
shrb
test
outsl
push
daa
clc
xchg
xchg
xchg
cld
sbb
fst
test
cltd
out
loope
or
clc
xlat
in
out
mov
add
and
std
and
inc
add
in
fists
rol
clc
dec
adc
add
add
add
arpl
add
or
clc
lea
add
lock
cmp
out
ret
lahf
mov
pop
cli
mov
clc
dec
mov
add
add
mov
clc
inc
add
movsl
clc
dec
mov
add
iret
xchg
push
add
push
xchg
pushf
and
and
js
add
jl
xor
add
mov
sar
cld
pop
xchg
push
add
xchg
loop
aas
pop
sbb
mov
sbb
jl
pusha
add
fsubrs
clc
pop
pusha
add
xor
add
add
xchg
repz
clc
adc
add
cmp
add
xchg
mov
dec
sub
or
test
jecxz
cmp
mov
and
add
xchg
add
add
add
pop
jne
clc
mov
mov
dec
lret
call
roll
and
add
add
push
add
imul
hlt
bound
add
dec
clc
or
mov
clc
or
jns
bound
add
clc
mov
jle
pop
sub
mov
add
pop
jge
sbb
add
scas
xchg
sbb
cld
jmp
jge
add
inc
add
sub
rcll
add
xor
mov
inc
add
jge,pt
clc
mov
clc
dec
mov
aaa
cltd
cmp
mov
cld
jmp
add
xbegin
add
clc
hlt
xor
ljmp
mov
xchg
xbegin
imul
scas
cmpsb
clc
fs
dec
jmp
push
cmp
clc
mov
sar
loop
inc
clc
cld
push
lret
inc
clc
mov
push
add
sub
mov
clc
xor
add
pop
jno
add
bnd
clc
ds
add
mov
cltd
and
aad
cmp
cmpsb
clc
lock
xchg
lods
push
add
negl
pop
loope
jle
notb
call
or
aaa
rcll
data16
clc
pusha
add
add
test
clc
int3
in
add
inc
clc
dec
lods
out
cmp
push
mov
add
shlb
inc
add
push
add
fisttps
clc
bnd
stos
pop
clc
xor
add
cli
out
dec
add
add
xchg
jl
add
mov
cltd
int
add
or
clc
cld
leave
cmp
clc
cld
out
pop
sar
add
leave
aad
icebp
sti
in
cltd
push
add
xor
add
daa
clc
out
in
int
push
clc
lods
imul
push
add
cltd
add
leave
xchg
sbb
push
ret
test
push
hlt
icebp
aas
ror
mov
in
dec
inc
clc
jecxz
imul
rcll
add
loop
mov
clc
mov
xchg
xor
arpl
add
pop
ss
ret
and
pushw
mov
daa
clc
imul
dec
adc
add
xor
cld
jmp
cmp
clc
sbb
mov
cld
jmp
xchg
mov
push
pusha
cld
jmp
dec
fwait
pop
add
and
add
mov
xlat
jg
out
fidivl
add
clc
mov
add
add
clc
sahf
out
or
popl
and
add
test
inc
add
push
mov
add
dec
dec
divb
add
add
sbb
add
mov
cmp
mov
add
clc
adc
add
jmp
je
sahf
aas
cmp
cmp
sbb
add
xchg
mov
lret
add
cmp
and
pop
das
and
gs
lea
clc
in
mov
or
add
push
jb
add
rcrl
xchg
mov
push
clc
cs
mov
add
add
aad
clc
sbb
inc
clc
jle
clc
push
inc
add
mov
dec
sub
push
push
ret
pop
cmp
or
push
negb
add
mov
mov
loopne
cld
xor
add
data16
imul
cli
add
fwait
jb
cwtl
bound
add
movsl
clc
insb
xor
jmp
std
pop
loope
sahf
cmc
out
push
pop
clc
sbb
add
sub
clc
or
and
add
push
pop
dec
pop
dec
mov
add
aaa
push
sar
add
add
add
push
sahf
mov
dec
lods
inc
add
int3
ja,pt
mov
cmp
gs
and
add
push
add
stc
sar
add
sbb
add
sbb
aam
cmp
mov
add
xor
add
popa
add
ss
clc
push
add
idivb
mov
clc
jmp
sub
jo
add
and
add
add
add
add
ret
push
scas
jb
add
or
loope
fdivrl
or
clc
cmp
add
add
add
clc
addr16
ja
push
add
imul
pop
mov
clc
jns
clc
dec
in
add
cwtl
insb
mov
add
inc
cld
jmp
sbbb
mov
clc
cmp
clc
xabort
jb
add
add
add
int
jp
mov
test
clc
shll
add
test
std
inc
clc
mov
test
fistpl
add
cmc
mov
add
push
push
pusha
add
fisttpl
mov
test
mov
sar
clc
mov
clc
inc
add
stc
mov
popf
adc
add
data16
jnp
fstpt
inc
clc
mov
add
ss
fst
and
and
add
inc
clc
mov
push
int
clc
mov
add
add
fisttpl
xchg
mov
and
cmp
add
add
add
movsl
clc
test
ror
int3
call
negl
jnp
adc
add
clc
adc
add
jmp
add
mov
xlat
pop
jl
clc
inc
add
push
clc
test
xchg
jns
clc
cmp
add
jne
clc
js
loop
adc
add
clc
sbb
mov
ljmp
lea
pop
xor
add
add
clc
and
add
cli
insl
fisttpll
cmp
add
xor
add
xor
add
cwtl
push
jmp
sbb
dec
or
sahf
fxch
iret
xbegin
mov
add
mov
aam
test
fisttps
add
stc
inc
add
bound
add
xchg
scas
mov
clc
and
cmp
push
add
and
add
in
bound
add
fisubrs
jne
mov
add
repnz
aam
or
je
clc
push
insb
sbb
push
add
cld
jmp
sub
xor
add
push
push
add
inc
add
fisttpl
sahf
or
bound
add
addr16
and
add
pop
push
sahf
jmp
add
and
add
add
fdiv
and
add
push
add
cmp
clc
cmp
cld
jmp
or
sub
adc
lods
fistpll
clc
jg
ljmp
stc
sbb
in
add
clc
mov
adc
enter
clc
add
or
add
aad
or
add
push
add
jnp
shll
add
std
cmp
inc
clc
and
add
outsl
adc
add
negb
sub
add
sar
clc
cmp
stos
push
add
ss
ret
sub
mov
repnz
call
mov
test
lea
clc
imul
test
xchg
mov
sbb
clc
push
sbb
nop
sar
call
pop
cmp
sbb
pop
mov
insb
jns
add
mov
clc
sar
add
dec
imul
mov
out
sub
add
adc
xor
add
stos
cld
jmp
jge
sub
mov
xchg
arpl
add
rol
clc
mov
xor
add
add
pop
or
clc
dec
xchg
nop
mov
mov
hlt
xchg
inc
add
dec
aam
mov
mov
dec
mov
or
sti
icebp
mov
clc
xchg
mov
clc
aaa
daa
clc
mov
push
add
jmp
cmp
movsb
clc
cmp
adc
add
add
hlt
mov
or
fwait
imul
mov
clc
adc
adc
add
das
imul
add
cld
jmp
sub
sub
push
xchg
jmp
sahf
popa
add
jnp
or
jae
add
add
xabort
jmp
adc
add
xor
clc
imul
add
lods
or
xor
add
es
xchg
fmull
add
add
and
add
add
clc
movsl
clc
jo
add
add
mov
clc
mov
push
clc
jb
add
adc
add
popf
jp
clc
xor
add
clc
pop
clc
cmp
add
int
cmp
mov
clc
insb
and
add
clc
xchg
mov
dec
stos
adc
add
clc
jb
add
xlat
push
jne
cld
jmp
and
add
pop
cmp
mov
cld
jmp
adc
xor
add
cmp
pop
cli
sub
clc
popf
jns
clc
dec
loope
push
add
xchg
xchg
jg
clc
add
add
clc
rcrl
outsl
addr16
mov
add
or
clc
dec
push
or
xchg
dec
dec
scas
inc
add
xor
add
inc
clc
mov
xor
add
add
movsb
clc
jl
add
xchg
cmp
clc
insb
sub
mov
clc
pop
je
add
int
lcall
movsb
clc
pop
clc
cmp
add
clc
mov
test
lret
adc
add
clc
adc
add
clc
test
aad
lods
xor
add
clc
push
add
add
add
aam
cli
fnstsw
add
sbb
movsb
cld
jmp
nop
push
jge
test
mov
dec
xlat
inc
add
add
popa
cwtl
and
cmp
mov
clc
outsl
adc
add
outsb
xchg
ja
cmp
xchg
sahf
adc
add
aam
jge
cmp
add
scas
mov
xchg
and
add
xchg
push
jp
clc
cmp
mov
cmp
je
clc
test
sbb
clc
iret
or
clc
lods
imul
add
dec
iret
test
add
mov
into
mov
inc
clc
add
clc
add
add
xchg
data16
fsubl
add
add
fistps
movzwl
cld
jmp
sub
xabort
add
inc
clc
mov
jbe
push
add
cmp
cmp
clc
jmp
bound
add
xchg
aaa
sahf
push
add
cld
je
jb
add
add
add
jmp
mov
mov
clc
xor
add
mov
or
add
mov
cwtl
outsb
push
add
clc
mov
clc
jne
test
mov
add
js
clc
sbb
stos
popf
jo
add
mov
add
add
movsl
clc
xchg
fwait
xchg
xor
add
mov
mov
clc
inc
add
ss
imull
sbb
clc
sub
ljmp
cmp
aas
ss
leave
lods
loope
mov
add
in
xor
add
add
test
xor
arpl
add
add
add
mov
push
in
add
add
xor
add
add
bound
add
xor
sbb
repz
jmp
mov
pop
jae
add
xchg
xchg
adc
add
cmpsl
clc
lods
push
push
das
xor
out
mov
mov
clc
jo
add
jno,pn
add
scas
mov
gs
jge
clc
mov
add
sub
clc
xor
add
stc
lods
mov
clc
jno
add
add
mov
clc
cwtl
push
adc
push
add
cmp
mull
clc
sbb
adc
add
in
cmpsl
clc
sar
bound
add
push
clc
pop
adc
add
in
dec
push
cmp
leave
fisubs
add
inc
clc
adc
cwtl
dec
xor
add
mov
clc
in
int
pop
xabort
clc
sbb
inc
clc
cmp
je
lret
clc
repz
add
sar
fsubl
cwtl
cwtl
loop
insb
xabort
clc
xchg
mov
push
cld
jmp
es
dec
push
add
or
fwait
punpckldq
add
fistps
cmpsb
clc
shll
add
push
add
aaa
bound
add
add
cld
adc
add
clc
mov
jnp
leave
mov
mov
in
fiaddl
inc
add
js
lock
pop
inc
clc
rol
clc
mov
sahf
inc
clc
out
xor
add
je
or
out
ss
mov
daa
clc
push
xchg
testl
clc
mov
push
mov
jne
cld
jmp
outsb
call
jmp
sbb
clc
pop
ret
clc
push
push
mov
add
add
add
push
xor
add
cmp
add
pop
cmp
and
add
add
jmp
popa
inc
sub
cmp
and
push
ss
ret
mov
add
add
call
sbb
jle
cld
insb
in
addr16
mov
add
sbb
ret
clc
inc
clc
insb
out
bound
add
int3
xchg
lahf
jb
add
clc
push
cld
jmp
inc
add
hlt
xor
clc
jl
sub
clc
and
shll
add
inc
ss
ret
fwait
inc
lods
sbb
inc
clc
inc
add
cmp
add
sbb
sub
adc
add
clc
not
pop
loopne
mov
mov
add
add
insb
mov
jne
clc
and
add
add
add
add
add
and
cmp
frstor
add
jle
lods
movsb
clc
xchg
xchg
inc
clc
jle
clc
and
add
add
loopne
insb
mov
mov
clc
xchg
push
add
cld
jmp
sub
fs
jno
add
jmp
cmp
repz
call
in
dec
add
add
sti
mov
add
out
test
jle
loope
mov
mov
fsts
clc
dec
xor
mov
xchg
jl
mov
call
cld
jmp
aaa
push
dec
push
mov
add
push
add
cmp
xchg
scas
mov
add
cmp
aad
push
cmp
mov
ss
stos
int
push
push
mov
add
add
dec
push
adc
fsubrl
mov
xchg
stos
mov
movsb
clc
std
leave
push
xchg
out
push
add
int
clc
inc
add
and
add
hlt
cmp
mov
clc
jg
and
add
inc
add
push
add
and
add
cmp
add
sbb
dec
mov
scas
xabort
add
incl
jmp
imul
clc
jmp
mov
mov
add
lods
jle
stc
push
aad
cmpsl
clc
out
ljmp
mov
enter
add
sub
add
add
adc
add
jo
add
sub
cmp
int
add
in
dec
xor
add
xchg
mov
add
jle
sar
clc
stc
cmp
clc
cmc
pop
mov
clc
mov
mov
mov
jo
add
mov
lcall
dec
ljmp
xchg
cld
jmp
imul
add
adc
add
popf
mov
aas
cmpsl
clc
mov
cld
jmp
sub
clc
out
cmp
cmp
sub
clc
xchg
and
add
sub
push
add
xchg
dec
ljmp
cld
jmp
aas
jl
add
add
push
leave
xor
add
clc
lcall
clc
scas
insb
repz
inc
clc
push
add
je
add
push
clc
fdivrs
clc
mov
jns
pop
stos
test
push
out
or
and
pop
push
add
insl
out
ja
add
fldl
cld
jmp
adc
xor
lods
ret
fistpl
inc
clc
sub
cmp
jmp
popa
popa
push
lods
xchg
inc
add
jae
add
add
es
dec
adc
add
add
clc
adc
add
notl
push
ret
xor
cmp
sbb
in
jae
sarl
sbb
jb
add
add
xchg
jge
clc
add
add
inc
add
dec
push
enter
xor
add
clc
xchg
sahf
pop
dec
ds
push
bound
add
add
mov
add
add
fcoms
stos
push
sbb
push
ret
jge
pop
dec
fnclex
clc
lret
jnp
lret
add
or
jbe
sar
cmp
loopne
aad
clc
cs
add
cmp
add
adc
add
in
cwtl
jne
fimull
push
sar
lcall
shrl
imul
clc
xor
add
lock
clc
xchg
mov
xabort
mov
sar
add
jb
add
dec
dec
fldcw
xabort
jne
mov
clc
lret
scas
lea
add
add
mov
clc
xor
add
add
push
cmovno
add
adc
add
xchg
cli
mov
pusha
add
inc
add
dec
stos
sahf
pop
adc
add
add
testb
pop
clc
jmp
cmc
fwait
push
sbb
enter
add
clc
in
sbb
clc
xchg
mov
arpl
add
clc
fwait
mov
clc
clc
mov
mov
push
pop
pop
mov
clc
scas
mov
sbb
xor
add
pop
cld
jmp
sbb
add
clc
sarb
xchg
bound
add
das
js
ljmp
outsl
pop
and
adc
add
add
mulb
pop
icebp
pop
mov
jmp
cmpsb
sub
and
add
add
mov
cltd
fld
clc
int3
mull
add
inc
add
and
add
clc
dec
pop
and
add
clc
inc
add
test
xor
add
clc
pop
adc
add
cld
aaa
jnp
add
pushl
shlb
push
ret
push
or
dec
mov
add
add
clc
and
add
mov
jo
add
xbegin
clc
cmp
push
mov
xchg
clc
dec
add
add
push
add
adc
add
ja
jg
clc
repz
into
leave
push
clc
test
mov
clc
xabort
push
add
xlat
xchg
in
ljmp
gs
xlat
iret
outsb
clc
cmp
jo
add
add
nop
jns
mov
icebp
cld
jmp
pop
pop
test
xlat
jg
js
xchg
pop
ds
jns
clc
cld
cmp
cmp
test
jno
add
add
cltd
adc
add
clc
inc
add
and
add
clc
pop
push
add
push
lods
cld
jmp
sub
sub
add
lcall
fwait
lcall
jecxz
push
add
addr16
jge
sar
push
lock
ret
clc
add
clc
lods
push
add
lcall
add
clc
pop
out
cmp
jl
add
mov
sub
jl
add
out
mov
clc
ds
mov
mov
test
add
cmp
add
prefetchnta
clc
inc
clc
or
clc
or
clc
sbb
clc
bound
add
ret
gs
iret
pushf
in
iret
mov
jbe
mov
repnz
add
lods
mov
pop
jecxz
in
xchg
or
clc
jns
add
imul
movsl
clc
fdivrp
mov
dec
sub
jmp
push
add
clc
dec
push
add
dec
shll
add
cmp
adc
es
adc
add
add
push
push
and
test
jge
clc
xchg
pop
pop
ja
loop
mov
inc
clc
cmp
cmp
add
or
clc
and
add
add
test
lahf
shlb
clc
aas
dec
lret
loopne
and
add
clc
mov
jo
decl
pop
sbb
xchg
mov
outsl
or
add
and
loopne
cld
jmp
mov
or
add
sar
pop
aas
fs
pop
xlat
ja
clc
adc
add
ret
clc
mov
inc
add
add
add
add
int3
xchg
outsb
xlat
lock
mov
clc
push
cmp
clc
jb
add
ljmp
sbb
inc
and
jmp
mov
push
add
add
add
sbb
add
push
xchg
mov
add
ja
dec
stc
jl
add
int
jnp
ficoms
test
add
cld
jmp
movsb
clc
add
add
addr16
mov
add
idivl
inc
add
jle
mov
rcrl
clc
mov
dec
daa
clc
pop
jg
inc
add
dec
push
pushf
gs
or
mov
and
push
add
in
outsl
or
add
pop
jo
add
clc
decl
push
inc
add
aaa
cmp
dec
pop
pushf
gs
lret
mov
inc
add
mov
xchg
and
add
aas
pusha
add
call
out
aam
clc
or
ret
clc
jno
add
popa
cld
jmp
insb
pop
lods
sub
add
dec
mov
cmc
insl
pop
icebp
xabort
lcall
inc
add
mov
clc
pop
xbegin
add
iret
pop
ret
clc
and
insl
das
cmpsb
clc
mov
add
pusha
add
xchg
jg
jo
add
mov
mov
icebp
mov
mov
clc
aas
loop
inc
clc
int3
aaa
add
add
fistpll
jl
cld
jmp
sub
stos
fstpl
add
cld
jmp
pop
xorb
into
int
and
add
push
add
xchg
test
inc
clc
cltd
push
xchg
nop
stos
rep
clc
add
add
cs
clc
xor
add
mov
cld
jmp
test
inc
add
mov
add
mov
jne
clc
scas
jmp
clc
call
add
push
ret
clc
inc
clc
js
movsl
clc
shrl
xor
add
dec
pusha
add
xchg
scas
jmp
clc
shlb
add
clc
cmp
iret
loope
leave
rolb
add
xchg
mov
lods
call
add
and
add
add
add
inc
clc
mov
sbb
mov
clc
stc
aas
je
jne
clc
add
add
mov
add
xabort
jl
jne
cmp
loop
jg
add
out
js
add
pop
sub
add
mov
data16
rolb
add
dec
push
add
lret
xor
dec
test
pop
xabort
add
add
add
clc
js
cwtl
dec
push
add
inc
clc
push
js
out
jmp
add
add
daa
clc
jp
mov
push
clc
aad
mov
add
cs
dec
mov
pusha
add
mov
jmp
sub
push
dec
popa
cmp
add
push
sub
add
sti
or
add
ret
clc
and
add
cld
jmp
sub
fildll
adc
clc
and
add
clc
mov
inc
clc
sub
clc
mov
test
clc
fstps
pusha
add
test
lret
mov
lods
or
sbb
adc
add
outsl
push
mov
cld
jmp
aas
sub
int3
xor
clc
jns
clc
ror
push
enter
add
pop
ret
clc
std
mov
add
mov
mov
bound
add
dec
add
xchg
cmp
into
pop
mov
add
lock
jne
cld
jmp
sbb
add
fists
add
cmp
sbb
aas
in
scas
mov
adc
add
js
mov
sub
adc
add
clc
pop
clc
inc
clc
sahf
data16
sub
add
mov
test
xchg
xabort
add
add
jb
add
cmp
or
aad
mov
add
pop
icebp
xchg
std
add
sbb
ja
fbstp
fsub
clc
cmc
rclb
add
xor
add
lock
or
sub
inc
clc
fisubrs
inc
add
shll
clc
cmpsb
clc
mov
in
xchg
or
repz
jmp
ja
imul
ret
add
dec
in
sahf
insb
sar
leave
cltd
pop
cmp
pop
or
lods
lahf
popa
add
mov
add
clc
cmp
pop
clc
bound
add
add
cmp
out
or
cmp
add
lret
pop
test
cmp
add
in
lods
or
dec
sbb
push
add
jle
add
arpl
add
or
dec
enter
hlt
adc
add
lahf
inc
add
mov
mov
aaa
pusha
add
in
mov
sti
push
xchg
scas
sar
clc
push
icebp
lret
push
add
fcmovnu
pushf
xor
add
cwtl
movsb
clc
pop
mov
mov
cld
jmp
sbbb
sahf
sbb
cmp
add
inc
clc
xlat
or
add
cltd
xlat
xor
inc
clc
int3
inc
clc
push
pop
inc
add
mov
xor
fidivl
clc
sar
clc
imul
and
add
add
in
aas
cmp
clc
and
push
clc
fidivrs
xchg
fwait
sub
clc
inc
clc
lock
jmp
mov
mov
shrb
xor
add
add
mov
dec
or
clc
mov
add
clc
add
repnz
pop
gs
pop
push
test
sbb
lahf
sbb
sar
incl
jp
and
ret
clc
push
jmp
cld
jmp
aas
pop
int
jmp
cld
jmp
lea
stc
shlb
adc
mov
cld
jmp
sub
push
cmpw
cld
jmp
sub
jae
add
clc
mov
nop
push
clc
mov
aad
jg
cmp
cmp
xchg
jle
decl
ljmp
clc
or
clc
mov
add
movsb
clc
js
add
xchg
into
stos
movaps
clc
loope
xchg
out
cltd
pop
lock
sbb
clc
mov
clc
lods
testb
mov
jp
cwtl
bound
add
cli
lods
and
add
pop
push
divl
arpl
add
and
add
addr16
mov
add
repz
add
cld
xchg
add
add
sbb
add
je
add
pop
mov
int
clc
add
add
add
xor
add
xchg
and
add
clc
xchg
cmp
sub
jne
iret
ret
clc
fldenv
inc
clc
mov
add
std
test
clc
push
add
cmovle
ret
clc
xchg
pop
clc
paddb
add
jg
clc
lcall
add
mov
lods
sbb
mov
jb
add
mov
mov
btc
add
pop
mov
sub
clc
cmp
add
cmpsl
clc
fs
inc
clc
mov
clc
pusha
add
mov
add
add
clc
xchg
mov
and
in
adc
add
aad
fcmove
loopne
jmp
add
mov
pop
sub
pop
or
push
push
add
add
cs
bound
add
scas
dec
mov
push
add
pop
test
enter
add
or
mov
js
insb
push
loope
cwtl
xbegin
loopne
stos
mov
sub
repz
cmp
push
aad
mov
pop
jns
fcompl
bnd
add
stos
xor
add
mov
add
add
add
add
inc
clc
push
add
cmp
or
clc
mov
jb
add
add
clc
movsl
clc
mov
add
imul
cmp
cli
std
imul
es
lock
add
add
add
add
rorl
add
push
add
xlat
push
add
inc
add
pop
mov
jnp
add
ss
clc
mov
mov
clc
in
mov
es
icebp
out
fldcw
and
add
clc
std
cmpsb
clc
xbegin
lods
or
lret
repnz
arpl
add
cmp
cmc
jecxz
add
add
add
add
out
dec
pop
adc
add
enter
mov
clc
push
data16
pop
arpl
add
and
add
mov
sarb
add
jecxz
into
pop
icebp
mull
add
mov
add
mov
sar
clc
pop
stc
in
cld
jae
add
sahf
jg
add
clc
xchg
out
inc
clc
and
clc
hlt
cmp
adc
ss
jno
add
push
add
pop
mov
jmp
add
mov
int
xbegin
or
xchg
inc
add
ror
cmc
mov
clc
adc
add
mov
push
mov
nop
cltd
jae
add
add
addr16
sar
clc
sbb
add
add
mov
clc
pop
shll
clc
xchg
pop
pop
mov
cmpsb
clc
or
sar
clc
push
arpl
add
add
xor
add
insb
cltd
pop
xchg
lea
add
add
fmulp
add
stos
mov
add
lahf
rcll
test
mov
mov
cmp
add
add
into
xchg
add
add
out
mov
sub
cmp
sbb
add
sbb
mov
add
jbe
inc
add
cmp
cmp
add
insl
cwtl
sub
pop
lahf
or
add
pop
scas
adc
add
clc
call
stc
jnp
clc
ja
imul
add
jmp
push
in
sub
add
mov
clc
mov
add
add
add
clc
sbb
add
sub
test
clc
ja
inc
add
pop
lcall
xlat
mov
add
clc
xor
add
mov
mov
mov
cmp
jge
clc
rol
clc
ja
add
xchg
mov
pop
lock
push
add
out
aaa
xchg
loope
stos
sbb
cmp
cmp
add
fisttpl
add
aas
inc
clc
sbb
imul
add
add
clc
pusha
add
loopne
in
ffreep
clc
invd
pop
in
ss
push
add
pop
jnp
call
clc
sub
clc
aas
inc
clc
push
add
add
jg
js
fldenv
sub
inc
clc
jne
fstps
ljmp
pop
aam
dec
jb
add
sti
insl
mull
add
notl
ss
clc
xbegin
dec
add
add
jne
clc
dec
mov
clc
mov
lock
add
xabort
cmp
add
outsl
and
daa
clc
loop
add
add
add
sub
sar
cli
or
cmp
pop
mov
clc
fdivr
lahf
cmpsb
clc
push
add
stc
testb
jne
sbb
add
mov
clc
inc
clc
cmp
add
clc
sub
clc
xchg
lret
or
sar
clc
push
or
clc
sub
jae
add
lret
out
nop
ljmp
clc
push
clc
xchg
sbb
xchg
mov
and
add
in
add
add
imul
xchg
xor
jo
add
icebp
out
xchg
mov
pop
and
sarl
adc
add
clc
dec
adc
add
add
popa
add
xchg
sar
xor
add
clc
mov
push
lock
add
or
mov
pop
push
add
mov
clc
mov
or
cwtl
sub
clc
jg
clc
nop
push
add
adc
add
mov
stc
and
add
add
fs
stos
cmp
dec
pop
scas
fcomps
jg
clc
cmpsb
clc
test
jno
add
add
cltd
dec
inc
add
pop
xor
add
add
cmp
notl
add
jne
aaa
clc
ret
clc
lods
in
shrb
add
aad
ficoml
movsb
clc
adc
add
test
clc
and
add
xchg
cmp
xchg
jp
movsl
clc
mov
clc
mov
sub
insl
inc
clc
inc
clc
push
pop
mov
add
call
sbb
push
clc
loop
inc
add
loop
dec
sbb
cmp
or
inc
clc
jbe
inc
add
jns
lahf
cmpsl
clc
mov
mov
mov
adc
add
xor
add
add
add
sub
add
add
into
mov
jnp
sub
inc
add
add
add
clc
xor
add
cmpsl
clc
cmpsl
clc
addr16
lea
fstpl
fnstcw
loope
loope
push
cmp
xchg
js
clc
adc
add
sub
adc
add
mov
add
inc
clc
aad
xor
add
insl
inc
add
test
cmp
sbb
add
mov
clc
fistpll
insb
xchg
test
xchg
scas
push
sarb
sub
test
mov
bound
add
cmp
mov
adc
add
dec
je
push
mov
clc
jns
clc
mov
mov
dec
aad
inc
add
mov
jns
mov
add
das
clc
mov
cltd
sti
pop
es
jno
add
add
add
pushf
sbb
fdivrp
or
clc
jns
shlb
xor
add
add
add
adc
add
add
int
sbb
jecxz
sub
mov
hlt
js
mov
cld
xchg
mov
lods
mov
ror
push
dec
stos
sub
add
sub
cmp
mov
jb
add
testl
or
lahf
push
add
loopne
enter
lock
jae
add
add
or
lods
xchg
and
add
fldenv
ss
cmpsb
clc
mov
mov
clc
jmp
clc
xor
add
clc
incl
aaa
pop
mov
add
add
sub
sub
add
xchg
pop
mov
enter
and
add
clc
loope
dec
xlat
stc
nop
fsubrl
pop
dec
gs
cltd
sub
clc
in
and
out
cld
arpl
add
clc
int
mov
pop
xchg
imul
pushf
ss
clc
inc
add
xchg
mov
add
cli
cmp
add
clc
push
shlb
clc
es
pop
push
addr16
mov
xor
lea
xchg
xor
add
clc
inc
clc
outsl
push
xchg
cmpsl
clc
push
clc
ss
pop
dec
js
sub
add
jmp
xchg
xchg
sahf
xor
add
clc
cmp
adc
add
fsubrl
xor
add
xchg
in
xchg
xor
clc
cs
clc
cmp
push
add
mov
mov
sub
clc
ds
jp
jmp
clc
cmp
clc
cmp
xabort
add
add
add
inc
clc
adc
jl
ret
test
aad
clc
adc
add
mov
xchg
loop
sbb
cmp
dec
xor
add
add
mov
pop
push
add
lahf
pop
out
xchg
jmp
and
add
mov
mov
frndint
cmpsb
clc
sub
stc
or
decb
adc
stc
lret
or
pusha
add
mov
dec
mov
clc
test
add
mov
add
mov
clc
lea
lods
or
clc
inc
clc
test
imul
clc
cltd
int3
xbegin
clc
push
add
addr16
in
sbb
aaa
sbb
add
imul
mov
sar
add
mov
out
loop
inc
clc
imul
pusha
add
test
adc
add
cmp
or
push
shlb
sbb
sub
add
repnz
dec
jmp
cmp
cmp
cmp
mov
jo
add
add
filds
add
xchg
push
add
mov
jns
insb
fs
es
mov
add
inc
clc
jae
add
add
sub
dec
ja
dec
cmc
lcall
add
add
add
push
adc
add
jns
out
push
add
data16
cmpsl
clc
insl
out
mov
clc
xor
add
outsl
int3
xor
into
test
movsl
clc
sar
add
sub
add
push
and
add
gs
mov
je
aam
clc
jns
pop
shrl
cmp
cltd
xor
add
sbb
clc
xor
add
clc
sub
add
js
add
mov
test
fists
imul
mov
clc
ljmp
insb
das
js
mov
clc
mov
mov
mov
cmp
add
shrl
clc
cltd
mov
add
sub
clc
pop
cmpsl
clc
cmp
fiadds
clc
mov
pop
icebp
sub
adc
add
clc
inc
clc
mov
das
jo
add
add
pushf
sub
clc
imul
mov
sub
xor
add
clc
sbb
adc
clc
mov
pusha
add
stc
stos
cld
push
add
icebp
in
mov
sbb
ds
ret
clc
push
add
sbb
add
add
sti
xabort
clc
movsl
clc
mov
clc
cli
cmp
xchg
and
iret
adc
repz
mov
pop
cld
lcall
int
add
cmp
jae
add
clc
inc
add
outsb
or
add
cwtl
mov
rcrb
push
clc
jge
xchg
addr16
data16
pusha
add
xchg
cli
mov
add
fistps
addr16
test
notl
add
add
add
sar
aas
aam
add
xor
add
lret
clc
jb
add
add
add
in
pop
pop
pop
clc
mov
mov
add
xchg
sub
pop
sar
clc
out
mov
out
das
add
add
add
push
cmp
cmp
cmp
xor
add
clc
js,pn
cltd
inc
clc
repnz
pop
std
dec
sbb
clc
xbegin
rorl
clc
loope
addr16
fxch
adc
add
lock
mov
push
aas
jg
in
xor
mov
clc
jmp
clc
mulb
arpl
add
clc
jnp
clc
imul
add
pop
fdivrs
add
cmpsb
clc
cltd
loope
add
add
fs
and
add
add
jge
jo
add
jo
add
icebp
cmp
xchg
cmc
sbb
std
add
mov
add
add
loopne
cwtl
aaa
cs
cmp
push
aam
pop
cmp
push
add
jo
add
fsub
clc
cmp
pop
in
mov
add
adc
add
pusha
add
ja
add
or
clc
jbe
xor
add
enter
add
xabort
es
jne
es
mov
add
clc
ss
outsl
in
mov
lea
inc
clc
mov
xor
add
jmp
mov
add
aad
clc
mov
sub
clc
xchg
aad
push
dec
sub
jb
add
cmp
clc
shlb
push
scas
xor
add
mov
clc
rcrl
dec
ret
jp
clc
push
repnz
and
sar
lahf
fldl
pushf
sub
clc
dec
ret
clc
es
xor
and
in
out
push
enter
fld
clc
fcmovb
clc
shrd
cwtl
aas
fadds
push
and
add
clc
cmp
clc
rolb
push
lret
lahf
xlat
fnstcw
cwtl
testl
movsb
clc
lods
and
add
dec
or
xlat
fcomi
jmp
xor
add
bound
add
jnp
cmp
clc
je
push
clc
or
dec
pop
clc
cmp
clc
mov
add
insl
sub
nop
push
inc
add
dec
jp
sub
add
cltd
adc
add
test
pop
out
mov
and
add
add
mov
jns
scas
out
lret
add
add
rolb
add
mov
inc
add
push
adc
add
xchg
sub
and
add
mov
cmp
jns
stos
cmp
lods
data16
add
add
icebp
dec
add
add
inc
clc
sbb
clc
testl
insb
movsb
clc
das
push
add
xor
add
clc
stos
std
dec
xor
jbe
test
outsl
jmp
int3
xchg
cmp
and
add
jecxz
add
and
add
pop
cmp
add
add
lods
aas
sub
add
out
test
ja
add
xchg
jne
xbegin
add
test
repnz
pop
cmpsb
clc
lret
outsb
lcall
mov
adc
add
sub
xchg
push
add
aam
in
leave
dec
call
cld
dec
sub
imul
das
cmp
sahf
icebp
push
add
cs
add
sbb
out
inc
add
mov
add
inc
add
xor
add
pop
add
add
jmp
clc
nop
dec
mov
mov
repz
out
insb
dec
into
mov
clc
sti
jecxz
mov
add
sti
js
cwtl
sub
int3
add
add
cltd
push
add
push
adc
mov
pop
jmp
mov
int
cmp
add
sub
clc
sub
jns
jo
add
and
add
add
sbb
in
xchg
xor
add
cmp
mov
and
sbb
mov
clc
add
add
jmp
sar
ds
clc
test
add
clc
add
add
clc
popf
iret
inc
add
inc
add
cld
mov
clc
jns
or
adc
jo
add
repnz
clc
in
adc
mov
xor
add
or
add
add
clc
add
in
xor
cmp
pop
clc
mov
clc
dec
xbegin
ficoml
dec
pop
in
and
add
xor
add
pop
aam
add
icebp
xor
add
and
add
add
dec
pushl
add
jecxz
pop
fcmovb
clc
lock
cltd
insl
fstpl
add
sahf
lea
mov
dec
sbb
push
clc
aam
pop
clc
xchg
popf
cmp
add
shll
clc
pop
pop
inc
clc
icebp
std
test
or
inc
add
mov
push
enter
clc
fists
mov
add
mov
clc
or
inc
clc
inc
add
and
add
push
add
mov
xor
or
jp
bound
add
fsts
add
mov
cmp
push
clc
adc
add
test
add
add
sbb
cmp
repnz
xchg
mov
add
sub
add
ret
clc
clc
sub
pop
dec
std
jg
clc
aam
add
in
mov
clc
jno
add
in
mov
inc
add
cwtl
outsb
dec
lret
xor
add
add
gs
push
cmp
mov
mov
mov
xchg
cmc
mov
add
movsb
clc
sbb
aas
stc
mov
add
jbe
clc
clc
ljmp
add
scas
mov
cmp
add
add
add
and
add
leave
je
add
loop
ljmp
fs
icebp
sar
and
add
ss
stc
js
jae
add
add
stc
push
add
dec
xchg
ljmp
mov
xchg
cld
push
mov
pushf
push
add
cmp
push
add
and
add
add
add
add
call
stos
sar
clc
xchg
jae
add
xchg
je
add
leave
in
cli
out
push
push
add
rcl
dec
adc
add
popf
pop
loope
lahf
cmp
or
clc
mov
js
clc
je
clc
cmp
mov
xchg
outsl
sar
add
call
clc
loope
mov
scas
into
mov
add
xor
and
ljmp
in
inc
add
dec
dec
ljmp
pop
dec
mull
add
test
xchg
mov
adc
clc
out
icebp
push
add
xchg
push
cmp
pop
pop
loop
inc
add
push
clc
rcll
add
add
xchg
and
add
jg
or
clc
cwtl
movsl
clc
sar
repnz
icebp
clc
cmp
popa
add
gs
mov
sub
fstpt
insl
mov
mov
mov
push
in
clc
sub
add
or
fildll
mov
pushf
cmp
into
bsr
add
add
add
cmpsb
clc
test
shld
push
mov
clc
inc
clc
and
ds
sar
xchg
fwait
mov
add
in
lahf
mov
sbb
sti
jg
pop
xchg
sbb
sbb
clc
imul
mov
pop
sbb
clc
shlb
clc
jb
add
clc
xchg
sbb
and
add
dec
sbb
add
pop
jns
insb
jg
pushf
cli
mov
add
sbb
mov
add
fsubr
cs
mov
ljmp
add
add
sahf
outsb
xchg
mov
sub
clc
cwtl
or
add
lahf
sahf
leave
mov
clc
jb
add
cmp
add
dec
jbe
add
push
add
pop
insb
ud0
clc
test
inc
clc
and
add
rcll
lahf
jns
fdivs
test
jb
add
clc
rolb
adc
aas
pop
clc
stos
push
bound
add
lock
sbb
je
movsb
clc
jp
cltd
mov
mov
add
insl
push
add
test
jmp
mov
inc
add
ds
test
xchg
pop
test
xbegin
add
push
push
clc
cld
cmpsl
clc
pop
inc
clc
push
add
lahf
mull
add
fdivrp
fdivrp
icebp
aam
add
add
clc
jge
out
ret
clc
stc
not
pop
push
jmp
mov
add
add
add
add
sbb
mov
lock
cmp
jnp
pop
cmp
imul
cmpsb
clc
dec
or
add
push
push
sahf
sub
popf
push
clc
sub
cmp
rorb
je
hlt
pcmpeqb
fnsave
clc
jmp
clc
cmp
push
xor
jg
cmp
clc
sub
imul
sbb
mov
lock
scas
push
das
pop
push
add
jmp
mov
pop
xor
add
clc
jnp
aad
jns
scas
jp
adc
add
clc
insb
fldenv
clc
adc
add
clc
xchg
sarl
add
sgdtl
add
mov
icebp
fs
dec
sar
mov
inc
add
cmp
cli
push
mov
jbe
fsubl
mov
add
add
add
jle
add
pop
inc
add
push
jecxz
gs
cmpsl
clc
cmp
cmpsl
clc
cmp
mov
cmp
pop
clc
aam
add
ret
clc
mov
pop
and
push
cmp
and
add
sar
add
add
add
add
add
sahf
mov
psubb
clc
pop
mov
add
add
clc
or
out
mov
clc
test
ret
clc
cmp
push
add
xchg
push
arpl
add
clc
or
clc
fs
pusha
add
dec
cmp
sub
pop
clc
shlb
add
inc
add
mov
lahf
mov
clc
nop
je
mov
jl
jnp
jle
shrl
pop
pop
xor
add
clc
das
and
add
push
adc
add
popa
add
jg
add
xor
add
add
add
clc
lock
add
and
add
add
clc
call
add
or
add
addr16
cmpsl
clc
xbegin
xor
add
mov
fsubs
add
clc
repnz
add
jnp
xor
and
add
add
vcmpps
add
jnp
add
pop
push
dec
add
add
lods
inc
add
add
jbe
movsb
clc
sbb
sbb
in
int
insb
mov
mov
add
pushf
cli
ret
clc
sub
clc
fiadds
and
add
xor
add
add
adc
add
stos
sbb
push
jg
cli
dec
jb
add
sub
push
iret
imul
dec
sahf
cmp
push
add
jnp
add
mov
clc
sub
clc
add
add
add
sub
sbb
pop
add
add
clc
pop
xchg
mov
clc
int3
cmp
ret
add
cmc
inc
clc
pop
clc
ret
clc
inc
clc
xor
add
clc
xchg
fcmovnu
add
repz
add
aaa
faddp
clc
mov
dec
lods
inc
clc
sbb
dec
lret
xchg
pop
roll
mov
lcall
add
xchg
jecxz
jle
imul
sar
clc
lcall
add
jge
clc
or
or
jmp
fs
xchg
adc
add
testb
dec
cmp
cli
popa
add
je
jns
aas
sbb
nop
adc
add
ret
clc
dec
mov
mov
fs
push
clc
test
add
cltd
mov
jmp
clc
push
in
mov
pop
int
clc
mov
inc
add
pop
popa
add
or
add
pop
adc
add
add
xchg
mov
das
outsb
mov
bound
add
inc
add
jl
negl
fnstenv
add
cmp
add
outsl
popf
dec
mov
jg
jmp
cld
xchg
sub
inc
clc
loopne
inc
add
fistpll
clc
loope
hlt
or
add
nop
call
xlat
int3
push
clc
mov
insl
add
add
clc
or
adc
iret
stc
cmp
clc
mov
inc
add
sarb
repz
inc
add
jg
faddp
clc
and
add
shlb
jmp
jb
add
test
test
je
add
xchg
repz
add
pop
jne
sub
or
dec
mov
lcall
clc
cltd
mov
hlt
sbb
mov
xor
add
iret
sub
clc
rcrb
dec
lea
adc
mov
add
sti
xchg
bound
add
jae
add
clc
ret
clc
adc
add
dec
xor
add
sar
push
add
sbb
inc
add
fwait
iret
fmulp
cmp
mov
cmpsb
clc
mov
xchg
loopne
popf
ret
xchg
dec
xchg
mov
push
out
std
pop
adc
add
mov
or
clc
dec
inc
add
aam
repnz
clc
iret
imul
inc
add
xchg
sbb
mov
cmp
clc
cmpsl
clc
xor
add
mov
jno
add
repz
cmp
jnp
xchg
insl
and
jo
add
add
pop
inc
clc
xchg
pop
xbegin
clc
jg
es
xchg
cmpsb
clc
mov
dec
je
fildl
dec
into
inc
add
add
dec
sub
jns
mov
or
jl
or
dec
pop
jo
add
fadd
clc
dec
in
scas
ds
clc
clc
push
add
push
clc
lods
aad
inc
add
popl
clc
mov
popa
add
push
stc
ret
clc
das
std
test
clc
adc
call
fistps
pushf
cmp
add
sub
clc
iret
jmp
fs
and
add
out
jl
aaa
repnz
xor
add
clc
cli
add
add
clc
sub
data16
stos
outsb
leave
push
mov
jmp
add
lret
into
mov
dec
pop
into
and
add
cld
add
add
clc
lcall
dec
daa
clc
mov
dec
outsb
nop
mov
sbb
xchg
enter
add
cmp
pop
sbb
clc
adc
divl
add
popl
add
mov
push
add
mov
movsb
clc
lret
dec
fisubrl
leave
pop
cli
pop
jne
sbb
add
idivl
clc
ds
out
xchg
sar
clc
cmp
and
or
sub
adc
add
add
clc
mov
icebp
jae
add
pop
mov
xor
add
clc
test
out
push
add
movsl
clc
cmp
add
dec
test
sub
add
add
push
add
inc
add
dec
push
clc
out
sar
add
add
add
add
in
xor
add
nop
pop
xor
add
inc
add
fdecstp
mov
sar
test
or
mov
push
add
rol
clc
mov
daa
clc
xchg
mov
test
aam
clc
lods
lret
hlt
push
clc
dec
jle
xchg
jmp
xchg
shr
sarb
clc
fs
stos
jle
inc
add
xchg
addr16
pop
jbe
add
in
mov
fiadds
addr16
enter
push
js
cmp
clc
fbld
add
sahf
sub
sbb
stos
rcrb
clc
fcoml
test
jle
dec
adc
add
inc
clc
fldln2
loope
mov
loop
sbb
or
jecxz
sub
call
clc
xchg
mov
clc
sub
jo
add
and
jle
dec
cmp
add
clc
mov
inc
add
xchg
aaa
cmpsb
clc
and
add
data16
popf
cmpsl
clc
sbb
push
clc
xor
add
add
shrl
mov
clc
cmp
adc
clc
mov
ds
cld
mov
sbb
add
xchg
ss
imul
push
das
out
sbb
clc
dec
push
add
daa
clc
fiadds
jge
push
jge
add
paddd
add
push
clc
jg
leave
inc
clc
mov
clc
push
add
jp
clc
stos
sti
fs
pop
mov
clc
lahf
inc
add
ss
add
clc
jo
add
out
adc
add
xchg
dec
cmp
xor
cltd
xchg
je
inc
clc
dec
xchg
sar
clc
lahf
lret
in
test
std
sbb
sub
add
pop
aad
fdiv
push
pop
fiaddl
int
add
add
add
mov
add
jno
add
clc
push
scas
xchg
add
add
add
add
or
clc
mov
xor
inc
clc
push
xor
push
add
jecxz
popa
add
enter
sbb
cmp
pop
clc
addr16
xor
add
mov
data16
cmpsb
clc
std
fistl
xor
add
mov
nop
ds
loop
pusha
add
push
add
es
or
sub
clc
push
add
adc
add
add
inc
add
hlt
inc
add
out
push
add
jnp
dec
mov
add
push
add
pop
call
mov
xchg
outsl
aaa
xchg
add
add
int
add
and
add
xchg
dec
bnd
add
lret
ss
loop
push
dec
lods
mov
inc
add
add
add
loope
add
pop
clc
icebp
mov
clc
clc
mov
add
clc
push
clc
repz
add
add
mov
mov
or
clc
jns
xchg
arpl
add
in
stc
mov
dec
lret
jge
cmp
add
add
add
mov
jne
add
sar
popf
jge
imul
or
cltd
gs
jo
add
mov
push
cmp
movsl
clc
aaa
xchg
rorl
adc
and
add
int3
ss
add
push
add
test
add
jp
clc
inc
clc
xlat
pop
clc
loopne
push
add
mov
xchg
scas
fdivs
add
cmp
into
leave
push
clc
pop
dec
popf
jae
add
add
xbegin
add
cmp
clc
mov
clc
cmp
add
cmp
clc
pop
adc
add
add
xlat
enter
dec
sti
xchg
cmp
clc
xor
add
push
imul
clc
push
jp
add
jl
jnp
jno
add
add
cmp
clc
sbb
cmp
inc
add
push
add
test
pusha
add
mov
pop
adc
add
imul
popa
add
scas
loope
call
sbb
sbb
sti
stos
movsl
clc
jb
add
add
clc
adc
add
clc
mov
clc
mov
add
clc
adc
add
notb
add
mov
xchg
jns
aam
push
fidivrs
imul
jne
fs
int
iret
xor
add
xchg
mov
dec
mov
xbegin
outsb
mov
cmp
lods
mov
pushl
add
add
clc
or
xlat
shrb
clc
clc
test
imul
add
mov
add
insb
sbb
add
enter
mov
jmp
inc
clc
in
xchg
xor
clc
jbe
inc
clc
js
jb
add
arpl
add
add
add
add
add
xchg
dec
gs
mov
lcall
add
add
decb
leave
adc
add
add
and
add
adc
add
mov
push
push
je
add
loop
ret
xor
add
clc
dec
mov
add
pop
mov
loop
inc
clc
pop
or
sbb
jno
add
test
aaa
sbb
add
fucomp
jl
clc
or
addr16
cmp
push
mov
outsb
xchg
fldt
and
add
clc
leave
lea
add
xor
add
mov
add
push
push
add
mov
jb
add
adc
add
add
sbb
jno
add
add
add
test
das
jnp
imul
stos
xchg
pop
mov
add
cmp
clc
adc
add
js
jl
stos
ds
clc
data16
in
jns
jae
add
adc
add
mov
je
pusha
add
mov
mov
add
sub
clc
std
pusha
add
mov
in
mov
clc
cmp
mov
stos
fdivl
pop
lret
xchg
xor
add
clc
out
fldt
add
data16
dec
jp
cmp
mov
cmp
or
add
pop
lret
add
clc
mov
add
clc
xor
add
shll
add
jle
jb
add
add
add
aaa
adc
add
xor
cwtl
clc
or
add
and
decl
and
pop
imull
and
add
clc
test
mov
rcl
cmp
add
arpl
add
and
add
push
inc
add
das
and
adc
add
dec
cltd
mov
mov
pop
clc
rcrl
clc
ja
jb
add
add
mov
xchg
addr16
movsb
clc
rolb
add
pusha
add
mov
push
pop
adc
add
mov
clc
mov
xbegin
mov
xchg
inc
clc
das
aas
cmp
mov
sar
adc
dec
bound
add
clc
shlb
mov
data16
call
pushf
sub
add
clc
scas
in
and
add
add
xor
or
ret
clc
mov
or
nop
in
xabort
clc
mov
cmp
jg
push
es
add
mov
clc
inc
clc
not
enter
cmc
xchg
push
mov
clc
or
fists
xor
add
clc
insb
cmp
add
lock
fiadds
add
fs
lcall
test
add
clc
pop
clc
dec
fbstp
push
add
add
and
add
push
add
in
pop
mov
add
cmp
icebp
or
test
cmp
mov
xor
add
xor
ja
clc
lods
dec
mov
or
add
inc
clc
xor
add
aad
clc
cmp
js
clc
daa
clc
std
pop
ja
sub
out
pop
fwait
pop
adc
add
scas
addr16
test
sbb
and
add
xor
add
add
mov
sarl
inc
add
mov
cmpsb
clc
push
add
dec
xchg
into
mov
mov
inc
add
xabort
xor
add
lahf
lahf
push
and
add
add
dec
cmp
clc
cli
sar
clc
or
inc
add
cmp
clc
mov
popf
mov
jnp
adc
add
clc
pop
clc
inc
clc
stc
jbe
cmp
clc
aam
dec
hlt
jnp
clc
adc
add
xchg
inc
clc
adc
dec
cmp
sbb
jne
jle
mov
addr16
in
loopne
pop
or
lock
jne
stos
mov
add
mov
daa
clc
daa
clc
mov
add
inc
add
jne
pop
add
add
fwait
jl
jle
sub
in
jno
add
and
add
aad
cmp
cmp
sub
add
add
xchg
mov
scas
flds
sbb
cli
gs
dec
push
mov
or
clc
lods
or
sar
inc
clc
sbb
add
jns
add
mov
inc
add
mov
leave
mov
inc
clc
pop
dec
sbb
add
inc
add
lods
lahf
rcrb
in
ljmp
jnp
ret
adc
add
aam
xchg
popf
addr16
dec
xor
add
push
ret
clc
ret
data16
fxam
clc
aam
add
nop
pop
clc
jmp
pop
clc
dec
pop
ret
clc
aam
add
push
clc
pop
dec
test
xchg
cmp
clc
mov
clc
loopne
loopne
mov
adc
clc
push
add
ljmp
pop
jge
lods
lea
fcompl
call
add
shll
add
jbe
mov
rcrl
add
cmp
in
push
clc
adc
add
stos
mov
push
add
sub
add
mov
add
adc
add
ret
add
lahf
fisubrs
add
inc
clc
inc
clc
xchg
dec
sbb
mov
xor
add
adc
clc
int
pop
fs
mov
clc
push
lods
mov
cmp
cmp
lcall
into
out
fdivrs
mov
mull
jne
fwait
sub
add
mov
imul
add
mov
add
xchg
push
add
xabort
add
int3
sbb
scas
or
std
jo
add
or
xbegin
clc
or
iret
xor
aas
dec
pusha
add
into
popa
add
cmp
inc
add
cld
dec
std
push
add
ffreep
clc
test
imul
in
sbb
js
clc
cmp
rcll
add
pop
fbld
add
and
inc
add
imul
add
sub
outsl
lcall
clc
dec
fldcw
push
clc
scas
inc
clc
mov
xor
pop
cmp
int
fsubrl
stc
sbb
aam
push
in
pop
push
das
fwait
push
clc
push
test
add
mov
mov
adc
clc
push
add
ljmp
dec
repz
fisubrl
clc
gs
dec
xor
add
push
lods
mov
clc
cmp
clc
sub
and
dec
icebp
enter
xchg
inc
add
bound
add
sarb
inc
add
aam
add
or
add
sub
mov
lods
cli
dec
mov
clc
mov
inc
add
je
shlb
enter
add
jae
add
xchg
mov
add
dec
sbb
mov
jb
add
mov
add
js
clc
test
and
add
mov
xor
add
adc
add
clc
fcmovbe
xchg
daa
clc
loope
sub
dec
incb
jno,pn
add
pop
jg
clc
dec
scas
cmc
cwtl
mov
clc
add
aas
fistl
clc
xor
add
bnd
clc
stc
ss
mov
clc
es
xchg
shrb
clc
xor
add
movsb
clc
push
add
test
stc
sti
fcmovne
clc
sarl
shl
aam
leave
movhps
add
clc
cmp
clc
clc
rcr
cmp
jp
and
add
mov
add
jb
add
clc
arpl
add
clc
cmp
daa
clc
xor
add
clc
sub
addr16
mov
clc
push
xor
add
hlt
add
sbb
add
loopne
cltd
push
push
in
add
add
imul
mov
add
xor
clc
js
inc
add
dec
pop
cmp
mov
add
pop
clc
cmp
daa
clc
ljmp
pop
cmp
xor
add
xor
clc
cld
dec
cltd
hlt
js
clc
pop
addr16
dec
in
pusha
add
inc
clc
rcll
clc
insb
mov
and
add
jne
stos
out
jno
add
int
dec
push
jl
test
mov
ja
xchg
pop
clc
mov
dec
adc
add
clc
or
jge
pop
mov
clc
loop
test
ljmp
add
add
and
add
clc
mov
adc
push
clc
pop
imull
xchg
xor
add
pop
inc
clc
jecxz
in
add
cmc
xchg
xbegin
add
jecxz,pn
xabort
add
das
sar
jno
add
push
adc
add
clc
sub
add
out
test
loopne
lods
in
insl
cli
mov
jmp
clc
inc
clc
enter
add
ror
aam
scas
jle
add
loope
xor
add
repz
add
std
adc
add
jbe
inc
add
fcompl
add
outsl
aaa
dec
inc
clc
leave
or
clc
sbb
jne
mov
clc
aad
clc
in
mov
sub
push
add
lea
shlb
add
hlt
lcall
push
push
push
outsl
cs
aas
fucomp
outsb
sub
inc
add
cmp
jo
add
add
xchg
add
add
popf
adc
add
ja
push
clc
cmp
jp
and
xbegin
xlat
push
add
shrb
jnp
sub
add
push
mov
mov
idivb
clc
into
dec
jp
ljmp
je
pop
mov
clc
sub
clc
cmc
add
cmp
lock
inc
add
inc
clc
xchg
repz
sub
xor
mov
clc
cmp
clc
gs
rcrb
clc
pop
clc
lret
in
arpl
add
clc
pop
cld
fs
cmp
loopne
add
clc
inc
add
dec
sub
jae
add
xchg
shrl
dec
mov
clc
push
add
cmp
clc
inc
add
cmp
clc
xor
add
loopne
add
add
pop
push
add
dec
push
insb
into
jmp
and
loopne
mov
inc
clc
inc
clc
xchg
sti
leave
lods
push
enter
fiaddl
sar
add
pop
pop
std
push
sar
aad
add
inc
add
int
rcr
daa
clc
aaa
test
inc
clc
xabort
add
fs
inc
clc
jbe
pop
jb
add
clc
adc
add
mov
xlat
in
mov
dec
pop
jnp
adc
fwait
inc
clc
xchg
repz
cmpsl
clc
mov
clc
lcall
or
add
in
imul
sar
and
outsb
iret
divl
push
push
cmp
dec
and
add
add
add
insl
xchg
fists
add
cli
hlt
push
add
add
add
data16
pop
addr16
into
aaa
cltd
pop
push
push
jmp
inc
add
add
add
sbb
sar
clc
or
clc
fwait
adc
add
push
clc
inc
add
jle
add
jne
clc
xchg
aas
jg
push
add
outsb
imul
pushf
out
mov
sbb
inc
clc
cld
popf
push
jge
clc
xor
add
jb
add
add
cmp
stos
dec
pushf
int
mov
ja
clc
clc
popa
add
ja
sbb
sub
cld
popa
add
divl
pop
movsb
clc
mov
std
fidivrl
in
ss
adc
add
add
add
movsb
clc
out
xor
add
cmp
sbb
jle
adc
add
clc
in
push
push
clc
stc
dec
pop
js
sbb
ds
clc
jg
clc
cmp
push
dec
xor
lret
test
dec
ss
lahf
or
add
add
clc
stos
jne
mov
clc
mov
call
add
insl
cmpsb
clc
sti
std
mov
cmpsl
clc
adc
add
loopne
cwtl
data16
popf
jo
add
add
xchg
mov
clc
mov
clc
arpl
add
sbb
push
add
fnstsw
clc
mov
clc
push
lods
or
xchg
outsb
setl
add
test
int3
add
add
adc
add
inc
add
dec
test
clc
lods
mov
pop
ret
xchg
xchg
scas
mov
push
or
push
sbb
leave
jnp
cli
mov
fwait
jl
clc
mov
js
jge
clc
in
add
ret
push
pop
lods
cmp
clc
add
pop
sbb
es
pmulhw
negl
push
add
add
add
jmp
add
jae
add
inc
clc
jae
add
clc
and
add
xchg
cmpsl
clc
add
mov
into
sub
jecxz
push
add
arpl
add
stos
popf
dec
jecxz
mov
add
fnstenv
add
fsubrs
lret
and
enter
clc
loop
dec
ret
clc
xlat
mov
mov
add
add
mov
clc
push
xchg
sub
add
pop
clc
leave
lahf
xor
add
jno
add
inc
add
adc
add
test
stos
mov
xchg
imul
cmpsb
clc
leave
mov
sub
add
jecxz
fldt
popf
cmp
int3
ret
clc
xor
add
loope
fildll
clc
mov
enter
adc
push
sub
fucom
clc
jge
mov
shll
add
push
add
xchg
movsl
clc
jo
add
jl
xchg
leave
popa
add
das
addr16
add
add
add
pusha
add
repnz
es
and
add
push
test
or
cmp
out
rcrb
inc
add
xabort
clc
xor
add
stos
enter
clc
fld
clc
jbe
push
lcall
scas
popl
add
clc
sar
clc
ret
clc
and
add
cmp
sar
add
addr16
sahf
cli
rorb
pop
sbb
test
fcompl
jns
dec
push
add
xchg
iret
and
add
fs
test
in
mov
add
lcall
cltd
mov
add
mov
pushf
pop
frstor
ljmp
add
inc
add
add
outsb
jg
int3
fildll
and
add
add
leave
or
add
icebp
jnp
arpl
add
add
clc
mov
xor
push
push
add
jecxz
xchg
test
lret
dec
dec
dec
rcrb
out
mov
mov
in
sub
add
add
clc
cmp
clc
fisttps
sbb
cmp
add
pop
pop
clc
sbb
out
aas
add
add
mov
xchg
mov
lret
xor
add
add
mov
cltd
mov
mov
add
clc
sbb
cli
adc
add
out
stos
ja
jecxz
push
cmp
inc
clc
jmp
push
push
add
scas
and
sahf
push
inc
clc
jg
insl
cmp
mov
mov
add
leave
push
jge
pop
lock
sub
lret
mov
clc
js
clc
in
es
xchg
push
ficomps
add
sub
inc
add
out
mov
or
clc
jl
imul
daa
clc
lret
add
insl
decb
inc
add
mov
adc
add
add
jbe
ja
mov
cmp
xchg
adc
add
clc
mov
scas
adc
add
sbb
add
scas
pop
push
sub
add
add
mov
jbe
dec
xor
jns
jmp
icebp
sbb
lahf
lret
sbb
out
xor
add
das
xchg
sti
xchg
ljmp
mov
cmpsl
clc
sub
clc
xchg
ret
clc
dec
xchg
sahf
add
enter
std
pop
dec
pop
xchg
out
sahf
mov
clc
xchg
dec
cmp
fistpll
add
mov
das
icebp
xchg
jno
add
add
add
outsb
cmp
mov
das
fstps
push
cmc
insl
jmp
add
inc
clc
shrl
cmp
loop
pop
mov
je
fldt
clc
pop
outsb
sbb
clc
pop
sbb
add
cmp
sbb
lods
test
inc
add
add
add
clc
repnz
clc
frstor
add
inc
clc
rcll
clc
mov
cmp
clc
dec
xabort
dec
mov
clc
mov
lods
sub
xlat
mov
int
scas
xlat
inc
add
jnp
add
add
int3
mov
add
in
adc
add
mov
lea
clc
adc
add
dec
stc
fadds
add
adc
add
dec
cmp
mov
clc
stc
sbb
add
and
add
shlb
add
jb
add
clc
cmp
fistpll
lcall
jns
clc
pop
mov
inc
add
test
jmp
pop
sub
add
adc
add
jae
add
add
jg
movsb
clc
mov
clc
add
add
sbb
xor
add
add
add
jl
lods
lods
dec
or
add
jg
cmp
rol
clc
push
push
push
mov
popf
imull
in
call
bound
add
sbb
add
sbb
cmp
pop
xor
pop
pop
mov
add
pusha
add
pushl
cmp
repnz
outsb
outsb
cmc
into
dec
push
add
sbb
add
mov
shll
mov
xor
add
dec
dec
ret
add
cmpsl
clc
mov
fstpl
out
push
add
mov
adc
lret
mov
add
clc
inc
clc
lret
iret
dec
sbb
add
xor
add
ror
mov
mov
pcmpeqw
clc
dec
sub
loop
mov
clc
jb
add
gs
push
cwtl
xor
add
es
xchg
inc
clc
cwtl
insl
mov
add
in
adc
jmp
add
add
add
loopne
loope
bound
add
fiadds
mov
add
add
pusha
add
es
adc
add
mov
ret
clc
xchg
je
adc
add
inc
clc
push
add
mov
out
push
add
jmp
clc
lock
add
jno
add
and
add
incb
add
in
popf
fwait
mov
add
add
add
clc
and
bound
add
jne
add
dec
rcr
add
add
add
dec
pop
dec
je
add
xchg
stc
scas
inc
add
dec
fnstsw
scas
js
icebp
mov
add
lock
xchg
pusha
add
call
outsb
rorb
clc
sahf
cmp
clc
mov
clc
sarb
jmp
data16
loop
sub
push
mov
sub
ljmp
jle
shlb
add
cld
jb
add
mov
jns
test
shll
xchg
ds
stc
lock
xabort
sub
test
aaa
sti
cwtl
testb
sbb
add
mov
aam
or
sarl
push
add
xor
add
add
cmp
add
int
push
mov
dec
dec
pop
sbb
add
fsts
out
test
jmp
mov
ret
clc
add
add
fsts
add
pop
inc
add
mov
clc
jmp
mov
add
add
jge
out
xchg
jecxz
aad
pop
outsl
out
in
cmp
insl
cs
add
dec
cmp
inc
clc
mov
clc
xchg
fbld
push
nop
testl
loop
pop
mov
clc
mov
call
sub
inc
clc
xchg
dec
mov
clc
aas
mov
push
add
test
or
stos
pop
stos
add
add
xchg
repnz
mov
dec
addr16
jne
pop
ss
test
clc
xlat
scas
jge
clc
cmp
aad
add
jp
inc
clc
loopne
and
add
push
outsl
jmp
nop
push
mov
clc
jecxz
dec
xchg
mov
add
dec
into
sbb
dec
cmp
clc
imul
add
adc
add
sub
pop
mov
sbb
mov
clc
fldt
adc
add
add
jg
lcall
push
clc
hlt
mov
lods
jo
add
add
cmp
add
add
jg
add
or
clc
fwait
mov
lret
dec
pop
sbb
mov
mov
dec
push
clc
stos
mov
push
add
ja
clc
repnz
bswap
in
xchg
mov
das
xor
dec
jecxz
jne
pop
js
clc
cltd
ja
aam
icebp
sub
clc
or
cmp
clc
repz
sub
add
jae
add
fwait
push
add
sar
movsb
clc
mov
xchg
test
add
mov
aad
sub
jb
add
loop
mov
add
clc
xor
add
pop
and
add
add
add
push
xor
mov
add
dec
jmp
in
mov
clc
cli
fbstp
add
xor
add
cmpsb
clc
ja
dec
lea
add
sub
decb
out
imul
mov
clc
pop
movsb
clc
fdivs
push
add
stos
daa
clc
test
mul
clc
sub
inc
clc
sub
jnp
sbb
cltd
sbb
daa
clc
adc
add
add
aas
mov
clc
add
add
xchg
add
add
xabort
push
movsb
clc
mov
jg
cmpsb
clc
ja,pn
cmp
add
add
clc
daa
clc
push
add
add
add
add
and
into
cmp
clc
push
push
test
imul
xchg
xbegin
add
vsubps
pop
mov
clc
notl
add
push
mov
cs
scas
ljmp
xchg
pushf
call
add
fiaddl
add
add
pop
iret
mov
add
int3
sbb
add
add
add
push
add
mov
daa
clc
loope
xchg
cmpsl
clc
add
add
mov
jg
sahf
clc
inc
add
pushf
ss
clc
sti
jb
add
repz
inc
clc
stos
xor
add
imul
aaa
push
clc
push
pusha
add
clc
or
push
clc
add
add
clc
pop
mov
test
sbb
clc
loop
pop
mov
jg
jo
add
data16
xbegin
outsb
cmpsl
clc
cltd
mov
repnz
fs
xlat
dec
mov
add
sbb
add
ja
add
cmp
mov
xor
add
push
xchg
sub
clc
lods
inc
clc
pop
fdivr
xchg
sbb
pushf
cmp
adc
add
push
add
mov
add
jno
add
add
add
add
add
aam
jmp
and
add
clc
fsubrl
pmulhw
jo
add
xchg
outsl
sub
add
xchg
jnp
outsb
mov
daa
clc
pop
xor
fcmovnu
leave
popf
add
clc
dec
divl
in
xor
jecxz
jp
clc
push
and
add
test
in
jecxz
sar
add
loope
daa
clc
jnp
clc
lock
lret
sub
clc
or
sbb
add
sbb
out
rcrl
add
test
aaa
cmp
fwait
arpl
add
cmp
fscale
mov
sbb
or
jmp
repnz
notb
add
mov
add
dec
adc
add
jmp
xor
sbb
jmp
sbb
add
clc
xchg
push
cmp
or
aam
or
xchg
xchg
jecxz
cwtl
int3
out
ja
add
clc
push
hlt
lret
and
add
clc
fwait
jo
add
mov
add
cli
mov
cmp
inc
clc
fs
mov
addps
jns
clc
sub
add
mov
in
stos
clc
sub
pop
add
add
add
and
insb
scas
out
add
add
cwtl
lret
out
xor
add
add
das
int
clc
pop
rcrl
add
cmp
clc
adc
add
popf
cmp
clc
ds
clc
sub
sub
add
xchg
and
add
add
leave
mov
clc
hlt
add
add
cmp
push
add
pop
push
add
sbb
clc
mov
xchg
jno
add
xor
jnp
add
xabort
insb
adc
add
add
sub
inc
clc
fisubs
xbegin
xchg
int
clc
das
mov
mov
clc
iret
pop
test
push
cmp
xor
clc
cld
pop
mov
push
clc
mov
xchg
test
or
clc
inc
add
data16
add
add
clc
mov
lret
fcoml
cmpsl
clc
or
add
clc
prefetchw
mov
lock
add
inc
clc
xchg
ljmp
pop
sub
add
pop
and
add
in
in
sbb
sahf
mov
adc
add
fistl
add
clc
xor
add
xor
mov
clc
mov
clc
loop
cmp
cmpsb
clc
mov
clc
cmpsl
clc
lret
mov
addr16
sahf
movsl
clc
push
add
push
sbb
lock
dec
aam
ficoml
add
pop
cmp
push
add
daa
clc
jo
clc
aas
add
add
or
stos
push
clc
popl
and
add
int3
aam
shlb
add
add
push
add
jp
lock
jmp
dec
mov
cmp
in
loopne
mov
xlat
cmc
mov
clc
dec
jmp
clc
bound
add
add
xchg
and
add
clc
inc
clc
es
lcall
add
add
push
add
data16
cmp
sbb
mov
add
clc
imul
out
sbb
addr16
and
add
arpl
add
cmp
clc
xchg
mov
pop
jl
add
out
inc
add
mov
add
jne
adc
add
jecxz
scas
cmp
sub
clc
ss
data16
jo
add
add
sar
mov
xor
add
aas
dec
dec
cmp
add
imul
movzwl
pop
jp
imul
and
add
fs
fcmovnu
dec
sub
add
aas
cmp
mov
or
fucom
clc
mov
add
xchg
lret
xor
add
clc
jg
clc
movsl
clc
sti
roll
add
push
or
ds
clc
dec
test
sar
xor
test
sub
movsb
clc
sti
sub
test
shrb
sub
mov
add
jg
mov
movsb
clc
cmpsb
clc
movsb
clc
sub
outsb
cmp
sbb
popf
scas
lcall
mov
and
add
filds
add
inc
add
mov
cs
sbb
add
or
mov
mull
add
cld
mov
clc
fisttpll
ffree
clc
adc
add
pop
sbb
xchg
push
clc
push
in
sub
sbb
neg
xchg
scas
jne
sub
add
or
clc
push
repnz
clc
nop
cmp
mov
clc
iret
in
pop
cmp
mov
xchg
and
add
push
das
nop
add
neg
mov
add
sbb
sbb
add
call
lcall
xor
je
cmpsl
clc
arpl
add
add
and
add
add
jo
add
clc
inc
add
and
add
add
clc
mov
clc
or
nop
rorb
repnz
movsl
clc
test
sub
and
add
fs
mov
cltd
jnp
push
into
fcmove
sub
add
dec
das
cmp
mov
cmp
mov
xchg
inc
clc
mov
or
loope
mov
or
add
add
mov
add
cmp
add
clc
lods
nop
fcomp
je
clc
aad
pushf
xabort
test
fmuls
mov
lods
sub
add
clc
fstps
mov
outsb
mov
jno
add
cmp
addr16
mov
cltd
mov
clc
out
pop
mov
or
cmp
int3
cs
clc
hlt
ds
clc
xchg
ficoml
jmp
addr16
repnz
add
dec
mov
pop
cs
clc
fnstenv
out
xchg
cmp
add
loope
daa
clc
xor
add
clc
xor
add
add
fadd
clc
lcall
add
cmp
mov
add
jb
add
movsl
clc
imull
cmp
outsl
shl
clc
push
add
sbb
clc
and
add
add
push
dec
xchg
pop
rorl
cmpsb
clc
in
lods
xbegin
clc
in
push
fiadds
je
add
mov
add
jo
add
clc
testl
das
cwtl
test
cmp
xchg
icebp
fdivrs
clc
fistpll
sar
leave
divb
add
ret
add
lods
aaa
mov
xor
add
add
adc
add
clc
xlat
pop
or
mov
inc
clc
imull
dec
shl
clc
enter
dec
rcrb
cmp
clc
jae
add
add
add
xchg
push
add
adc
add
add
popa
add
pop
clc
push
aam
adc
add
pop
clc
mov
pop
enter
shlb
clc
pop
push
int
jnp,pn
jp
clc
iret
cltd
pop
xchg
pop
fdivr
dec
sub
lret
and
add
add
mov
fs
data16
pop
xor
add
xchg
push
mov
test
add
clc
xchg
das
outsb
test
add
mov
push
pusha
add
cmp
sar
add
mov
add
das
pop
bound
add
clc
mov
pop
loope
js
clc
out
mov
xchg
add
add
clc
popf
es
data16
inc
add
sbb
pop
push
jae
add
add
mov
push
xor
add
add
inc
clc
enter
popf
shrb
iret
mov
clc
dec
clc
add
add
add
lret
dec
pop
inc
add
aaa
xchg
outsl
inc
clc
fs
loopne
jne
clc
repnz
add
hlt
clc
or
dec
das
jns
clc
dec
or
add
mov
test
inc
clc
mov
add
in
out
jne
bound
add
add
rorb
clc
cmp
jg
sub
xor
add
sar
push
jne
and
and
add
divl
add
sub
sub
add
add
fiadds
loop
nop
lahf
sbb
mov
add
pop
xchg
xor
push
incl
clc
adc
mov
faddl
jge
clc
imul
outsl
aad
clc
data16
hlt
cmp
stos
leave
mov
es
lret
cmp
and
add
clc
scas
xor
add
adc
add
ss
sarb
movsb
clc
jae
add
pusha
add
jg
fldt
scas
xor
clc
stos
pop
ljmp
push
clc
popf
imul
jecxz
dec
cmp
add
adc
add
cmp
mov
notb
add
and
add
pop
test
mov
clc
js
xchg
cmp
outsb
xor
clc
xbegin
add
mov
clc
cltd
sub
into
adc
add
nop
inc
add
mov
add
clc
and
add
add
adc
add
clc
sbb
cmp
add
jnp
xabort
clc
xor
add
cmp
clc
inc
add
xor
add
imul
or
add
mov
add
mov
pop
jp
add
mov
add
fldcw
mov
inc
add
xchg
scas
call
ss
or
add
mov
add
push
add
test
cmp
in
sub
and
clc
addr16
dec
std
cmp
or
add
add
sbb
into
call
push
push
add
sbb
leave
pop
mov
dec
xchg
outsb
jo
add
clc
adc
test
data16
xchg
push
add
sub
sub
add
inc
clc
dec
in
dec
cld
mov
clc
jno
add
add
add
push
push
add
mov
jbe
xor
add
js
clc
out
repnz
xchg
leave
push
outsb
imulb
lods
push
into
popa
add
or
ja
pop
imul
add
lahf
es
jns
lret
add
pop
push
adc
add
mov
movsl
clc
mov
into
inc
clc
pop
std
imul
clc
cmpsb
clc
xor
add
clc
cmp
sub
clc
dec
out
shrl
imul
js
pushf
jne
mov
setnp
clc
sub
dec
fcmove
pushf
lods
lods
mov
ds
sahf
imull
adc
add
add
clc
stc
sub
fs
fs
jbe
mov
xchg
test
loope
imul
scas
cmc
ds
scas
mov
enter
add
cs
xchg
lret
scas
scas
enter
mov
int
clc
cmp
cmp
mov
clc
jno
add
imul
dec
push
add
clc
lcall
clc
mov
sbb
add
int3
clc
mov
add
clc
xchg
imul
cmp
add
test
fsubrl
xchg
add
add
daa
clc
sbb
add
sar
js
clc
sub
loopne
mov
clc
cmp
in
sub
xor
add
xchg
jns
clc
imul
stos
mov
in
sub
scas
outsl
out
loopne
push
add
sub
fwait
bound
add
lret
xlat
jno
add
add
xchg
mov
clc
dec
or
clc
push
add
sub
inc
add
out
push
out
jl
push
out
xor
add
add
jb
add
sahf
cld
jne
add
cmp
xchg
inc
clc
jo
add
mov
test
clc
inc
clc
clc
jle
add
push
add
push
add
cli
mov
clc
inc
clc
jo
add
or
add
adc
add
clc
xchg
and
add
scas
inc
add
xchg
jp
and
add
add
sahf
jmp
ret
scas
lock
clc
sbb
clc
mov
jge
xbegin
add
in
cwtl
mov
mov
sub
das
mov
jle
push
dec
mov
fwait
clc
rclb
sbb
add
mov
dec
repz
gs
lods
dec
in
hlt
test
sar
add
jmp
es
and
add
ret
push
clc
outsl
xchg
and
and
add
add
add
add
ljmp
clc
popf
nop
lea
inc
add
mov
add
movsb
clc
adc
add
xlat
xchg
fs
add
add
clc
mov
clc
jno
add
add
shll
and
fisttpl
jae
add
add
pop
clc
and
add
dec
and
add
cmp
cmp
bound
add
add
add
pop
clc
pushf
data16
pop
xor
add
adc
call
inc
clc
mov
clc
push
add
fimuls
push
outsl
decb
and
add
clc
imul
add
adc
enter
mov
clc
stos
test
sbb
out
sbb
fs
aam
jle
pop
cmp
test
pop
dec
or
push
clc
jge
clc
sub
cmp
mov
mov
jb
add
add
dec
popf
mov
mov
push
stos
cli
ds
inc
clc
int3
jp
add
add
add
fst
adc
add
mov
bound
add
cmp
mov
aam
jbe
dec
jns
clc
negb
pop
xchg
jbe
clc
leave
xor
add
adc
add
add
mov
add
nop
add
add
sbb
push
add
lcall
add
xbegin
push
add
jle
pusha
add
jmp
sar
clc
or
test
test
aam
clc
push
adc
add
or
push
out
negb
mov
jb
add
sbb
leave
loop
and
jp
xlat
movsl
clc
jge
add
xchg
fiadds
cmp
rclb
add
cmp
movsb
clc
das
dec
inc
clc
loopne
mov
pop
roll
add
clc
out
jge
jae
add
inc
add
hlt
inc
clc
mov
inc
clc
dec
aaa
lock
adc
xchg
arpl
add
clc
jge
clc
push
xor
add
push
inc
clc
mov
add
jb
add
cmpsb
clc
in
ret
clc
dec
scas
test
adc
add
add
addr16
hlt
add
add
jae
add
add
add
mov
clc
out
out
push
add
lods
cmp
add
push
add
dec
cmp
clc
cld
xor
add
mov
dec
inc
add
in
test
bound
add
add
mov
clc
test
add
dec
jns
push
add
xlat
jbe
ret
clc
mov
inc
add
mulb
add
adc
add
pop
das
dec
ljmp
add
mov
xchg
popl
add
mov
cmp
movsb
clc
enter
ficoml
add
fcomps
add
sti
or
aad
cs
and
add
add
sub
push
add
jp
cmpsb
clc
xor
add
jb
add
sar
popf
insl
fnstenv
add
add
fstpl
clc
sar
stc
mov
add
cmp
add
push
add
adc
add
add
shll
add
clc
mov
inc
clc
fnstenv
jp
xor
add
jb
add
inc
add
xchg
mov
cld
into
sahf
push
add
jns
sub
call
cmpsb
clc
xchg
stos
cmp
clc
sub
add
sub
add
or
clc
clc
or
mov
cmp
add
movsl
clc
jns
lret
incb
add
push
clc
in
bound
add
clc
repz
test
add
add
xrelease
mov
add
and
add
call
clc
adc
add
clc
repnz
clc
into
clc
or
add
mov
mov
test
fidivrl
lcall
sar
insl
mov
jecxz
popf
test
push
hlt
icebp
in
popf
adc
mov
xor
add
nop
pop
push
add
fucomp
in
fstps
xchg
clc
aaa
cli
mov
sahf
xlat
cmp
clc
add
add
mov
clc
mov
clc
or
jmp
adc
add
lea
add
out
mov
xchg
dec
pop
out
xbegin
clc
out
nop
sahf
and
sub
iret
not
sbb
out
cwtl
add
add
jecxz
mov
add
add
adc
clc
mov
bound
add
cmpsb
clc
stc
cmp
sub
inc
clc
push
add
push
call
mov
clc
and
add
clc
imul
add
push
sar
cmp
xchg
and
add
add
add
jb
add
repnz
scas
pushl
add
pop
daa
clc
sub
add
idiv
cmp
mov
ror
xchg
lret
addr16
push
clc
sub
dec
or
stc
clc
dec
data16
loope
adc
push
cmp
add
out
mov
gs
and
mov
ja
pop
cmp
fstpt
clc
jae
add
outsb
mov
clc
fdivrs
add
leave
pushf
push
xchg
lods
cmp
clc
adc
add
clc
frstor
add
add
bnd
inc
clc
fnsave
ficompl
lcall
and
add
clc
jnp
test
neg
adc
add
add
jns
add
shr
or
add
and
add
add
imul
idivl
mov
add
xor
clc
push
inc
clc
scas
out
pop
jbe
enter
daa
clc
xor
add
sub
rorl
push
cli
outsl
cli
into
cmp
sbb
cmp
add
call
pop
sub
xor
add
or
clc
push
fcmove
cmp
fst
inc
clc
jmp
cmp
pop
data16
push
js
add
inc
clc
add
add
sub
insl
lahf
inc
clc
sbb
cs
mov
clc
mov
data16
scas
leave
inc
add
clc
in
int
push
and
add
clc
mov
clc
or
add
jl
cmp
inc
add
pop
dec
test
xor
clc
xchg
dec
sub
clc
inc
add
mov
repnz
add
fnstenv
dec
sub
ss
scas
jp
add
cld
mov
cs
add
mulb
add
jge
inc
add
test
xchg
test
cmpsl
clc
scas
inc
add
mov
dec
imul
push
cmp
stos
mov
clc
mov
stos
xor
add
cmpsl
clc
cmp
clc
or
enter
stc
push
clc
add
add
clc
jmp
pop
sub
adc
imul
xbegin
add
jge
cmp
sub
clc
es
cmp
clc
clc
ljmp
sub
imul
clc
mov
imul
and
mov
je
or
jmp
or
clc
add
add
clc
loope
pop
push
dec
sar
clc
xchg
outsb
lock
mov
add
jnp
add
pop
clc
stos
mov
ret
pop
insl
stc
and
mov
cmp
pushf
adc
add
add
stc
push
inc
clc
cmp
in
popf
cmp
ja
add
arpl
add
add
in
pop
into
or
pushf
mov
pushl
add
xchg
nop
pop
jmp
add
fnstsw
movsb
clc
push
enter
mov
lods
cmpsl
clc
xchg
data16
movsl
clc
fucomip
ret
clc
sarl
lcall
dec
pop
fadds
add
sbb
add
ss
clc
mov
pushf
arpl
add
clc
dec
cmp
call
jns
cld
cmp
jbe
clc
dec
ficomps
sar
xchg
or
bound
add
es
aas
test
clc
pop
add
add
cmp
add
xchg
cmp
inc
add
push
add
and
add
mov
add
clc
dec
cs
add
xor
add
je
cld
clc
aam
clc
call
add
clc
jno
add
add
sbb
call
mov
clc
jne
fdivr
lret
pop
fsubl
add
push
xchg
pop
or
sbb
sar
xchg
aad
clc
xor
ljmp
add
inc
clc
sub
shr
es
jge
jecxz
jns
inc
clc
adc
add
clc
scas
mov
clc
jle
or
clc
pop
das
insb
sar
sbb
add
clc
xlat
aas
push
sub
ja
or
clc
or
clc
stos
je
add
nop
out
into
add
add
shlb
add
test
add
add
cmpsb
clc
xchg
mov
or
mov
fcompl
push
sar
inc
clc
outsb
push
pushf
jl
clc
ja
cs
in
arpl
add
pop
pop
inc
add
bound
add
fs
stc
cmp
mov
clc
lret
add
clc
out
lods
jmp
jbe
clc
sub
mov
clc
pop
enter
clc
imul
flds
add
and
add
add
xabort
add
in
call
lea
add
add
scas
pop
fadd
clc
ret
clc
sbb
add
mov
clc
mov
add
push
enter
lret
imul
push
or
popf
iret
mov
clc
adc
clc
adc
add
nop
in
scas
push
ret
clc
incb
add
icebp
pushf
loope
dec
inc
clc
mov
cmpsb
clc
and
add
repz
mov
clc
cmpsl
clc
cld
lea
popf
or
scas
testb
cmpsb
clc
in
movsl
clc
cmp
and
ja
clc
inc
add
ficoml
ret
mov
add
mov
gs
xor
clc
jnp
clc
jecxz
adc
add
ret
inc
clc
pop
mov
test
mov
rol
clc
inc
clc
mov
out
sar
add
dec
cmp
cltd
mov
inc
clc
stc
cli
add
sbb
inc
clc
ss
sbb
add
scas
ds
leave
mov
add
stos
sbb
repnz
es
pop
xlat
bound
add
clc
xor
lea
clc
lcall
out
cltd
cmp
sbb
clc
lock
ret
loop
sub
outsl
jne
or
xlat
clc
push
repz
fstpl
add
cwtl
xchg
push
add
add
add
ja
leave
xor
add
ret
clc
push
aad
out
mov
cmc
cmpsb
clc
lret
push
cmp
fdivr
sbb
push
lahf
leave
jle
sbb
or
add
das
mov
add
or
xor
add
xor
add
mov
jge
lods
push
ficoms
cmc
mov
ret
clc
daa
clc
cmp
xbegin
add
popa
add
call
clc
js
jge
add
push
mov
sar
loopne
clc
inc
clc
lods
adc
add
add
jae
add
add
inc
add
xchg
in
mov
clc
imul
lods
cmp
mov
mov
mov
jge
clc
jmp
nop
imul
ror
into
adc
add
aad
clc
push
mov
mov
clc
lahf
sub
cmp
cmp
push
lret
adc
add
clc
sar
xor
add
pushf
inc
add
mov
cs
add
pop
pushf
cmp
clc
sbb
lret
add
push
out
mov
popa
add
pop
test
mov
aas
inc
add
cmp
clc
cmp
sar
xor
add
adc
add
clc
cli
pop
adc
loope,pt
jmp
add
push
clc
je
cmp
repnz
in
cmp
and
mov
add
cmc
add
inc
add
and
add
add
inc
clc
shll
clc
cmp
sbb
pushf
shll
jae
add
clc
cmp
mov
jb
add
clc
je
inc
clc
jno
add
inc
clc
mov
jg
clc
sub
hlt
jl
mov
add
or
add
add
xabort
clc
and
mov
dec
dec
std
cmc
and
add
mov
es
cmp
clc
mov
scas
sub
clc
insb
sub
xlat
in
scas
and
add
cmpsl
clc
xor
add
clc
add
add
dec
cmp
cmp
mov
cmpsl
clc
insb
sub
add
jne
jo,pt
add
imul
mov
flds
clc
dec
push
clc
push
lock
add
scas
out
test
jo
add
add
add
clc
js
shll
xlat
mov
xchg
fsubs
out
decl
add
cs
lea
add
out
in
xchg
jbe
sbb
clc
cmp
push
jo
add
cmpsb
clc
cmp
cmp
clc
mov
add
shll
pop
xlat
cmpsl
clc
xor
add
add
pop
inc
add
jmp
mov
clc
cld
iret
data16
jmp
nop
inc
add
sar
clc
jo
add
lcall
push
or
add
addr16
cmpsl
clc
loop
int
lods
mov
clc
pop
test
or
add
push
test
dec
sub
cwtl
jp
add
inc
clc
adc
xbegin
add
xchg
ljmp
cmp
add
ret
clc
mov
mov
push
add
ror
inc
add
sbb
clc
cmp
jg
ficomps
jg
add
mov
jb
add
outsl
jg
clc
mov
cmp
clc
mov
clc
xchg
sbb
push
mov
and
add
faddl
add
mov
std
sbb
add
in
test
nop
mov
movsb
clc
push
clc
xchg
arpl
add
lock
add
push
add
imul
xchg
adc
add
xchg
lods
mov
add
inc
add
cli
dec
mov
or
add
xchg
aam
into
mov
add
mov
push
clc
pop
sub
jnp
clc
out
inc
clc
aad
adc
xchg
and
add
add
jl
clc
xchg
clc
mov
and
add
pusha
add
xchg
cs
or
cmp
inc
add
pop
xchg
imul
cmp
clc
mov
add
test
inc
clc
ret
fcomps
bnd
add
mov
push
stos
add
add
add
xchg
cmp
add
ds
clc
jbe
arpl
add
add
clc
jl
add
mov
loope
arpl
add
cmpsb
clc
mov
mov
add
and
add
rcrb
add
add
mov
add
add
dec
jg
clc
mov
add
cmp
movsl
clc
mov
mov
add
ret
clc
idiv
iret
clc
cmp
clc
sub
add
mov
cmp
mov
clc
dec
and
add
cwtl
mov
clc
dec
mov
clc
mov
ret
clc
bound
add
clc
imul
clc
insb
lret
mov
mov
ljmp
add
clc
scas
mov
or
into
enter
add
add
dec
push
xchg
lods
cmp
and
hlt
sbb
dec
jp,pn
sbb
push
ss
in
sbb
scas
in
push
clc
jnp
add
insb
lret
sbb
add
js
clc
insl
cld
dec
outsl
mov
adc
xor
lea
leave
icebp
clc
out
cmp
add
mov
test
add
add
gs
mov
dec
xchg
adc
xchg
xchg
call
ret
clc
mov
add
clc
aam
mov
clc
push
loope
pop
and
add
sub
fnstenv
clc
shr
push
and
add
inc
clc
xchg
adc
add
clc
repz
sarb
add
add
xchg
xchg
xor
add
push
insl
sbb
add
ss
xchg
stc
xor
clc
inc
clc
pop
addr16
push
sub
clc
pusha
add
in
pop
cwtl
jl
jnp
clc
pop
fsubrl
cs
clc
or
adc
add
add
stc
cmp
clc
scas
out
mov
jbe
xchg
lahf
scas
sti
jl
adc
add
inc
add
add
add
add
test
clc
sahf
lahf
mov
cld
push
add
pop
gs
hlt
push
mov
rorb
cmp
es
mov
add
jo
add
sahf
mov
add
xor
add
daa
clc
int3
aad
add
push
cmp
lret
cmp
cltd
and
add
sbb
pop
add
add
adc
add
push
push
fwait
adc
add
clc
jno
add
add
push
sub
add
clc
fcomp
push
cmpsb
clc
lods
pop
ret
xchg
inc
clc
sbb
and
add
loopne
pushf
adc
add
add
jne
and
add
clc
fisttps
xor
add
add
lcall
sar
add
add
mov
dec
cmp
add
mov
fldt
clc
cmpsl
clc
add
add
pushf
pop
das
scas
shll
mov
add
loope
daa
clc
pop
xor
add
pop
cmpsl
clc
and
in
push
and
add
clc
lret
inc
clc
mov
inc
clc
push
clc
jg
popf
mov
clc
cmp
add
cmp
daa
clc
xchg
xabort
add
xlat
dec
negb
clc
sahf
xchg
icebp
inc
clc
enter
xor
cmp
inc
clc
add
clc
inc
clc
jbe
int
je
and
add
out
out
int3
icebp
out
push
add
call
jbe
cmp
stos
fildll
add
movsb
clc
lret
clc
add
add
mov
sub
adc
ficompl
shl
mov
mov
aad
mov
clc
xchg
out
jl
add
xchg
ja
add
mov
add
push
stos
adc
add
loop
xchg
push
ljmp
sub
fadd
clc
jne
clc
clc
pop
clc
jae
add
dec
jg
cmc
mov
add
popa
add
scas
gs
int
clc
push
and
add
add
je
add
cmc
pmovmskb
cs
popa
add
sub
cmpsb
clc
cli
jbe
add
enter
push
add
call
xchg
mov
xchg
adc
add
add
movsb
clc
xor
add
clc
cmp
mov
clc
and
testb
inc
add
sub
xchg
push
clc
mov
clc
jecxz
fldcw
clc
mov
push
add
push
or
int3
mov
adc
add
outsl
fldl
add
pop
clc
fmull
clc
or
clc
cmp
cmp
mov
clc
cmp
clc
js
jae
add
add
mov
add
mov
adc
clc
mov
fs
push
add
jl
adc
mov
out
mov
aas
lods
adc
add
inc
add
repz
add
sbb
out
mov
pop
movsl
clc
dec
cmp
clc
xor
add
inc
add
popa
add
sahf
mov
clc
sahf
pop
mov
clc
test
mov
cltd
xchg
sub
add
jnp
fcmovbe
pop
dec
pop
mov
lea
and
ja
xor
add
fwait
inc
clc
cmp
add
in
and
xor
add
ss
add
add
dec
pop
sbb
add
inc
add
push
stos
mov
mov
adc
add
data16
sar
add
clc
aaa
add
cli
and
add
add
cmpsb
clc
popa
add
push
add
out
inc
clc
stos
loop
xlat
jbe
clc
jae
add
push
pushf
lods
push
add
data16
sbb
rolb
add
mov
clc
mov
push
arpl
add
clc
scas
sar
aaa
rolb
push
fisubrl
jns
xabort
call
and
add
clc
cmp
inc
add
push
clc
mov
jl
sbb
push
add
bound
add
cwtl
cmp
push
loopne
popf
sahf
roll
add
xor
add
clc
cli
cmpsb
clc
fcoms
add
iret
repnz
cld
sub
add
test
js
clc
pusha
add
insb
fidivrl
add
mov
outsb
adc
add
add
daa
clc
xor
add
xchg
daa
clc
jge
clc
jmp
mov
sar
clc
call
ljmp
dec
jns
lret
lret
pop
jmp
clc
mov
add
js
pop
sub
scas
push
cmp
es
push
cmp
jno
add
out
cmp
add
add
pusha
add
xchg
inc
clc
pop
or
add
sbb
lcall
in
adc
add
add
addr16
arpl
add
add
xor
add
in
test
pop
jmp
clc
divb
add
pop
inc
clc
jecxz
xlat
jle
shrl
clc
sub
in
cmp
jns
das
ffreep
clc
mov
loopne
jae
add
clc
pop
addr16
loopne
xchg
shll
dec
popa
add
pop
movsl
clc
mov
clc
or
add
dec
call
and
add
clc
clc
xbegin
dec
xchg
and
push
mov
test
jne
push
add
sub
add
mov
mov
dec
mov
add
add
addr16
xlat
jmp
pop
pop
mov
scas
decb
sar
data16
je
sub
add
in
cmp
jmp
jmp
cmp
clc
sub
arpl
add
clc
gs
jmp
clc
into
pusha
add
inc
clc
icebp
pop
pusha
add
and
lcall
cmp
fisubl
add
in
xor
add
dec
sbb
cwtl
jecxz
pop
adc
add
clc
jp
popf
sub
sbb
and
add
gs
movsb
clc
mov
clc
addr16
pop
sub
mov
mov
xchg
stos
fldt
cmp
xor
add
add
adc
add
loopne
cmp
clc
ret
clc
aad
loop
ds
mov
mov
clc
mov
add
add
popf
pop
mov
mov
mov
mov
adc
add
cmp
nop
adc
add
cmp
out
mov
loop
jle
cwtl
xchg
cmp
clc
lcall
push
and
call
pop
bound
add
clc
ds
and
add
out
inc
add
minps
add
add
add
adc
add
clc
push
leave
mov
add
aaa
xchg
add
add
sbb
clc
es
mov
add
jno
add
cmp
add
cmp
sbb
jl
xor
add
add
pop
jle
inc
clc
pop
outsl
stos
xchg
inc
add
icebp
fs
mov
dec
add
add
add
loope
xchg
aaa
aad
jno
add
nop
and
add
aad
clc
mov
push
clc
in
inc
clc
notb
jns
add
add
add
cmp
sub
adc
add
clc
dec
jo
add
add
loopne
mov
or
lcall
in
add
outsb
repz
data16
xchg
fstps
repnz
int3
ret
clc
lods
mov
inc
add
push
aad
int
sbb
sbb
imul
clc
push
add
lea
add
cmc
pop
int
jecxz
and
mov
add
dec
mov
clc
or
jbe
add
cmp
clc
mov
adc
sahf
sbb
sbb
inc
add
pop
sar
pop
pop
clc
cmp
or
dec
lock
add
xchg
mov
lock
add
clc
jp
mov
test
push
gs
mov
clc
pop
push
add
inc
add
mov
add
mov
mov
xor
add
clc
gs
dec
aaa
xor
add
add
pop
cmp
ljmp
sahf
fdiv
sti
push
clc
loopne
sahf
or
push
pusha
add
repnz
add
insl
xor
add
insl
push
icebp
and
add
dec
mov
in
inc
add
int
clc
inc
add
jo
add
clc
ja
vzeroupper
mov
add
aam
add
add
jg
adc
add
fisubs
add
clc
push
add
xchg
push
jo
add
fnsave
inc
clc
cli
mov
clc
pushf
adc
add
clc
adc
clc
mov
or
pop
mov
and
test
clc
jno
add
sar
push
add
push
clc
and
add
clc
or
add
cmp
or
add
pop
dec
or
cmp
sub
add
push
clc
pop
sbb
je
pop
push
add
add
add
add
stos
xchg
cmp
sar
popf
sahf
add
add
mov
icebp
xchg
call
cmp
push
sbb
add
test
shll
jmp
clc
jno
add
add
popf
jl
add
repz
incb
add
jge
insl
pop
sub
lock
sti
or
add
xor
add
clc
das
lcall
clc
jae
add
mov
lahf
outsb
cli
mov
cld
push
add
out
shl
clc
or
clc
xchg
nop
push
clc
ljmp
or
add
clc
out
dec
sub
add
jb
add
clc
xchg
rcrl
ljmp
test
mov
xabort
clc
pop
das
pop
adc
add
add
js
scas
jecxz
fnstcw
mov
pusha
add
lods
jmp
push
clc
cmp
xchg
nop
jne
sub
or
flds
push
clc
inc
clc
mov
add
idivb
in
test
mov
push
add
xor
cmp
pop
push
add
add
xor
add
in
dec
into
mov
fists
add
sbb
push
add
cmc
int
pop
add
xabort
add
xlat
bsr
loope
in
mov
pop
sbb
loopne
cmp
push
add
aam
clc
decl
sbb
xor
add
add
inc
clc
aad
scas
sar
and
arpl
add
push
cmp
in
jle
add
dec
pop
std
pop
mov
jge
clc
insb
inc
clc
dec
xchg
lahf
ja
clc
cwtl
push
sbb
cld
sbb
clc
gs
jo
add
test
dec
fcoml
stc
inc
add
fstp
pop
adc
sar
idivl
clc
sbb
jecxz
and
add
or
sar
scas
pop
outsb
shrb
clc
sbb
clc
aas
adc
add
add
fadd
clc
je
repz
clc
ret
pop
shll
add
imul
add
jbe
popf
jp
int3
enter
clc
pop
xor
push
dec
divl
add
stos
xchg
pop
out
repnz
aad
out
loope
das
lods
pop
arpl
add
add
mov
add
clc
adc
clc
data16
repz
add
sub
add
into
inc
add
arpl
add
add
sbb
add
fmuls
clc
mov
sub
sbb
in
lret
add
xchg
push
gs
mov
clc
add
popa
add
int
js
mov
clc
pop
mov
js
add
fcompl
lods
sahf
out
in
xchg
jmp
add
fdivl
add
sub
clc
xchg
adc
add
add
insb
jge
clc
xchg
lods
out
aaa
repnz
xor
add
fisttps
clc
jne
loop
and
add
clc
pop
and
lahf
fnstcw
jmp
clc
mov
add
in
sub
pop
cmp
add
lret
popf
mov
dec
pop
jns
clc
test
outsl
pop
xchg
mov
icebp
mov
inc
add
arpl
add
add
aam
add
out
pop
sub
add
add
inc
clc
xor
add
add
test
push
add
and
add
add
adc
add
xor
add
pop
fstps
popa
add
adc
add
mov
dec
aas
jno
add
xor
add
inc
clc
push
xchg
fmull
clc
repz
pop
clc
insl
mov
clc
sub
inc
clc
je
xchg
ss
clc
es
push
cli
bound
add
clc
aam
imul
push
add
mov
mov
add
add
insl
mov
daa
clc
xchg
es
xchg
mov
clc
pop
mov
xchg
cmc
sar
out
xchg
push
je
in
push
clc
cmp
jp
and
add
add
clc
and
add
add
pop
cmc
stos
cli
or
clc
or
add
mov
clc
or
xor
add
mov
push
pop
icebp
out
ljmp
es
lahf
jns
mov
pop
push
clc
push
push
add
dec
js
clc
mov
roll
jle
repz
pop
dec
nop
cmp
jb
add
pushf
mov
clc
add
ss
push
add
pop
btc
add
lock
clc
jbe
adc
add
add
add
clc
and
rclb
add
jl
add
xbegin
cs
fbld
xchg
mov
cmp
imul
pop
pop
mov
or
fwait
xchg
sub
loopne
cmp
pop
clc
jecxz
loop
sbb
clc
mov
stos
pop
add
add
and
add
jo
add
add
sar
ss
clc
sbb
add
nop
int
add
mov
test
add
inc
clc
out
stos
out
xor
add
add
cmp
add
cmp
clc
clc
mov
clc
cmp
inc
clc
xlat
fs
cmp
js
clc
fs
fimull
repnz
popa
add
gs
fdivr
nop
jge
mov
clc
pop
mov
add
loope
movsl
clc
cli
out
fwait
insl
nop
xlat
outsb
divb
paddq
insl
xchg
imul
clc
xchg
icebp
jge
add
sub
shll
add
bound
add
or
adc
add
pushf
scas
fcmovnbe
and
add
or
and
idivb
in
ret
mov
and
jmp
lods
xchg
inc
clc
jl
add
data16
dec
repnz
or
data16
pushf
lods
addr16
push
repnz
add
sar
pop
out
add
clc
mov
sti
xlat
pop
mov
add
jle
clc
pop
insl
and
add
js
not
movsb
clc
jle,pt
or
jbe
sub
repz
notl
outsl
lea
in
stos
sahf
dec
clc
es
into
pop
inc
add
mov
add
clc
fsubr
fidivs
xor
add
pop
sti
fs
sub
stos
mov
clc
clc
cmp
cmp
push
xor
clc
xchg
mov
xlat
jl
es
in
cmp
jmp
adc
add
and
fmulp
sbb
clc
fcoml
mov
add
cli
cmc
inc
add
push
lahf
sar
hlt
enter
add
cmp
add
add
jbe
test
jae
add
add
xchg
push
lea
inc
clc
ret
clc
outsl
ljmp
insl
sub
clc
es
push
add
push
pushl
add
push
sub
stos
mov
add
add
nop
and
add
clc
rol
clc
dec
mov
lret
dec
fistpll
dec
aaa
or
insl
in
into
lahf
xor
add
fidivs
and
sbb
add
and
clc
test
cmp
clc
and
add
lods
and
add
add
mov
lea
sbb
xor
add
leave
mov
lods
adc
scas
mov
add
popf
inc
add
pop
in
push
pushf
inc
clc
sbb
pop
jo
add
loope
mov
mov
clc
xchg
add
mov
clc
jmp
add
xchg
iret
dec
jge
add
mov
mov
push
clc
fs
loopne
adc
add
loop
ret
clc
xor
bound
add
clc
out
lret
add
push
out
es
adc
add
clc
or
clc
stos
sub
pusha
add
cmp
add
sbb
out
aaa
mov
gs
xor
loopne
pop
mov
add
pop
mov
int3
push
add
mov
clc
mov
mov
cmp
jo
add
add
js
push
and
add
add
add
mov
add
clc
shrb
clc
xchg
loope
outsb
mov
add
pop
add
add
add
jno
add
f2xm1
in
jae
add
cmp
cmp
sub
std
mov
jmp
jmp
cmp
add
sbb
clc
and
add
add
xlat
repnz
mov
push
adc
add
push
add
jmp
pop
xor
add
clc
push
add
xlat
ja
repnz
sti
pop
mov
std
jae
add
clc
outsl
mov
sub
clc
ret
clc
in
fsts
add
nop
icebp
sub
add
add
add
add
iret
pusha
add
adc
add
and
mov
clc
pushf
dec
lahf
scas
inc
clc
jl
add
test
aam
xlat
stos
enter
dec
lret
push
clc
xabort
add
cmp
aaa
xlat
frstor
inc
clc
out
xchg
dec
push
cmp
clc
enter
fsubl
add
cld
jo
add
add
leave
cmpsb
clc
or
push
jmp
add
int
clc
in
inc
add
mov
xlat
mov
add
lea
clc
dec
divb
ja
pusha
add
jae
add
clc
test
add
xor
add
add
kmovw
dec
xchg
call
fs
or
clc
ror
sar
clc
es
mov
pop
loop
test
and
add
ret
clc
aas
fbstp
push
add
lret
clc
insl
mov
mov
das
add
add
pop
ret
out
and
dec
roll
push
imul
insl
dec
jbe
add
scas
dec
icebp
mov
jb
add
jne
mov
clc
push
movsl
clc
dec
test
xchg
shll
add
int
clc
outsl
cmp
call
cmp
clc
popf
pop
mov
add
add
mov
mov
clc
push
add
xchg
add
add
int
clc
imul
test
add
addr16
xchg
in
fcmovne
mov
jge
jmp
pusha
add
xchg
and
add
mov
clc
inc
add
loope
rorl
adc
mull
clc
incb
sbb
sub
clc
enter
add
lock
cs
jg
clc
outsl
xchg
test
sbb
dec
xbegin
add
add
push
pop
std
rcrb
jb
add
lret
add
add
loope
test
and
add
push
cmp
add
dec
cmpsl
clc
out
or
add
sub
add
vmaxps
add
cmc
pop
fistpl
clc
and
add
out
xlat
xchg
lods
int
fadds
clc
stos
mov
add
xlat
inc
add
pop
and
add
add
add
sub
xchg
mov
pop
mov
sbb
clc
bound
add
add
pushf
std
pop
push
out
cmp
mov
stos
das
and
add
clc
test
xor
and
add
std
mov
add
mov
mov
add
dec
mov
div
dec
mov
mov
mov
adc
add
and
add
clc
add
add
nop
ds
jae
add
mov
add
or
clc
or
clc
push
jle
mov
push
dec
jb
add
mov
dec
sbb
daa
clc
jl
add
add
add
add
repnz
sar
ds
clc
aaa
cld
div
rorb
fldcw
jp
ds
xchg
xor
add
pop
inc
clc
lahf
aam
xchg
nop
sar
add
cmp
bound
add
clc
lock
fbstp
clc
inc
clc
xor
shl
cld
out
cs
xchg
ja
dec
nop
popa
add
aaa
mov
add
icebp
cmp
add
cmp
clc
cmpsl
clc
adc
add
sbb
arpl
add
lods
in
push
adc
add
dec
pop
mov
dec
stc
mov
or
or
arpl
add
mov
adc
dec
add
add
add
dec
pop
clc
xchg
mov
lret
add
test
clc
and
add
add
and
aad
cmp
clc
test
lock
add
sbb
add
into
mov
inc
add
imul
add
xor
add
clc
and
add
cmp
fucomp
mov
fsubrs
mov
add
test
push
or
inc
clc
mov
imul
cli
mov
inc
clc
repz
cmp
clc
aas
mov
fld
clc
cmp
and
add
push
pop
std
jg
add
pop
fwait
addr16
xabort
clc
test
mov
add
int
and
nop
mov
int3
cmp
mov
fs
mov
add
mov
out
test
cld
nop
cli
pusha
add
mov
push
add
cmpsl
clc
insl
cmp
sbb
test
cmp
fmull
clc
push
add
xchg
mov
adc
add
push
add
or
mov
add
sahf
add
mov
popa
add
jecxz
and
add
clc
jne
add
aas
push
ss
scas
loop
jge
and
add
clc
loopne
jnp
mov
mov
inc
add
lret
mov
adc
add
xor
add
add
xabort
jne
clc
mov
add
test
pop
inc
add
jmp
cltd
add
nop
cmp
outsb
pop
sbb
cmp
add
mov
add
xor
add
clc
cmp
push
add
fildll
clc
cmp
add
inc
add
sbb
push
add
sbb
jge
sub
fldl
clc
adc
add
adc
add
add
knotw
lahf
jbe
xor
add
mov
cmpsl
clc
xchg
mov
clc
mov
pusha
add
adc
add
clc
jge
clc
lods
or
addr16
mov
dec
mov
add
test
shl
clc
push
add
jb
add
lret
jg
clc
and
add
and
xor
add
dec
cmp
loop
mov
clc
xlat
inc
clc
sbb
dec
xor
add
xbegin
clc
cmp
sub
sub
clc
dec
jl
clc
mov
aas
sbb
clc
imul
lcall
outsb
pop
cmp
stc
sub
aas
int
jecxz
imul
clc
xor
add
clc
add
add
clc
ljmp
out
int3
add
add
sub
fcoms
mov
add
insl
arpl
add
xchg
and
add
add
clc
push
add
or
xor
add
add
dec
nop
cmp
lcall
icebp
cmc
mov
add
fiadds
outsb
cmp
cmc
push
clc
mov
push
loope
fbld
clc
data16
sbb
add
and
add
and
add
mov
lock
add
adc
add
pop
push
cmp
xbegin
cmp
repnz
add
push
or
arpl
add
add
xor
add
sti
mov
xchg
add
add
psubq
add
fidivl
clc
jae
add
loopne
js
clc
leave
out
xbegin
js
add
bound
add
pop
or
add
sbb
add
sub
add
fsubrl
inc
clc
imul
clc
dec
pusha
add
jne
jge
mov
addr16
inc
add
repnz
clc
add
fs
jp
negb
add
sbb
add
ss
mov
pop
sbb
clc
inc
add
sbb
in
daa
clc
repnz
add
fimuls
fcoml
insb
cmp
insl
sub
add
add
idivl
clc
jae
add
add
aam
clc
add
and
add
clc
filds
int
adc
add
sahf
fidivrs
dec
mov
test
add
add
add
and
add
dec
cmp
clc
cs
testb
clc
scas
push
add
rcrl
in
mov
inc
add
cmp
add
mov
ss
lods
fs
popa
add
xchg
and
add
or
add
cli
adc
add
add
shr
xchg
hlt
aad
push
xor
add
lret
cld
fcompl
push
sub
mov
xchg
clc
mov
dec
jmp
push
push
add
ss
jge
clc
icebp
cmp
clc
clc
jo
add
add
jmp
add
mov
rcr
mov
inc
clc
push
lcall
add
inc
add
xchg
ret
clc
in
mov
in
jmp
clc
push
sub
pop
clc
clc
rclb
lods
sbb
fisttpll
out
stc
jb
add
clc
mov
dec
mov
add
ss
pop
clc
pop
clc
mov
scas
gs
pop
mov
clc
adc
add
clc
adc
add
aaa
outsb
mov
daa
clc
cmp
decb
mov
push
jo
add
clc
test
out
or
jae
add
fyl2x
ljmp
std
test
cld
mov
add
clc
sub
xabort
clc
cli
adc
add
and
add
add
fldcw
dec
cmp
add
jbe
add
add
mov
clc
jns
xchg
fists
inc
add
arpl
add
jp
sub
clc
in
inc
clc
das
es
movsl
clc
fldcw
sub
xchg
push
das
sub
cmp
clc
jnp
clc
shr
pop
clc
imul
xlat
mov
add
mov
clc
out
lods
jbe
clc
mov
xor
out
dec
cmp
or
clc
insl
push
pop
clc
inc
clc
loopne
sub
clc
inc
clc
cmp
add
div
sub
jp
jbe
negl
clc
clc
inc
add
dec
push
jnp
add
add
clc
in
cmp
adc
add
push
mov
add
add
adc
add
xchg
mov
add
pop
mov
clc
jmp
clc
out
add
cmp
push
jl
mov
sbb
jge
mov
add
inc
clc
xor
add
add
mov
and
add
add
add
aad
add
loop
das
jb
add
add
aam
add
loope
outsl
sbb
rcl
xchg
pop
mov
cmp
add
scas
das
push
push
clc
jne
iret
push
aad
stc
clc
jmp
add
add
add
dec
enter
add
mulb
popa
add
inc
add
dec
lret
push
add
cmp
xbegin
add
dec
push
mov
sahf
cmpsl
clc
xchg
test
lret
inc
add
clc
push
xchg
dec
sahf
in
sbb
add
xor
add
fisubrs
xchg
push
sbb
push
add
lret
push
or
add
dec
inc
add
addr16
sbb
cmp
add
or
jno
add
push
fwait
mov
add
fcomps
cmp
add
fcompl
clc
int3
test
aaa
scas
dec
fs
pop
adc
add
std
cmp
xor
add
cmp
movsb
clc
mov
bound
add
ret
clc
mov
clc
ficoml
xor
add
pop
cmp
and
xchg
xabort
clc
mov
clc
sub
loope
es
mov
std
mov
mov
clc
dec
and
add
mov
add
jnp
add
add
add
fwait
movsl
clc
lahf
dec
mov
aam
add
scas
ja
popf
sbb
pop
clc
out
push
mov
pusha
add
movsb
clc
insb
sub
dec
popf
aaa
and
add
xchg
hlt
or
add
add
clc
mov
add
test
add
pop
xchg
ret
cmp
jmp
jecxz
fs
mov
add
sub
out
push
mov
es
lcall
inc
add
jp
clc
inc
add
sar
push
cs
movsb
clc
stos
repnz
clc
mov
pop
pusha
add
jmp
push
movsl
clc
jae
add
stos
out
aam
clc
lock
clc
adc
jae
add
movsl
clc
cmp
addr16
jl
movsb
clc
mov
cmc
mov
adc
lock
inc
clc
popf
sbb
aas
daa
clc
jb
add
jle
cmp
add
clc
stos
cmp
add
clc
in
rclb
pop
pop
ja
lcall
out
jno
add
add
add
cmovbe
popa
add
push
xlat
mov
clc
mov
or
pop
xchg
sar
ror
push
clc
mov
clc
bound
add
add
clc
dec
pop
fisubrl
push
add
out
jne
add
mov
clc
cli
pop
adc
clc
sub
out
and
add
push
adc
add
fs
sub
or
imul
add
leave
adc
clc
sbb
mov
sbb
xor
add
adc
mov
add
ret
es
mov
push
or
add
xlat
and
add
add
cmp
mov
dec
sar
add
aad
clc
cmpsl
clc
int
inc
add
or
clc
scas
lret
push
add
cmpsl
clc
mov
and
lods
inc
clc
inc
add
je
dec
sub
mov
icebp
push
mov
or
sbb
xchg
xchg
enter
add
push
clc
mov
int
clc
lahf
mov
clc
cltd
jp
pop
setne
add
xbegin
xor
add
sbb
or
clc
mov
clc
ss
add
cmp
fnstsw
mov
and
enter
ss
pop
loop
xor
shrb
mov
mov
scas
scas
sahf
cmpsl
clc
movsl
clc
inc
clc
ret
addr16
fidivrs
xor
add
clc
inc
clc
adc
add
mov
add
testb
mov
clc
push
pushf
sub
cmp
mov
add
push
clc
push
add
and
add
clc
stos
mov
loope
pop
test
loop
in
cld
add
add
rorl
mov
sbb
clc
jle
cmp
add
aad
add
lahf
fidivrl
ja
test
pop
sar
stc
sbb
clc
aam
clc
and
add
clc
mov
clc
dec
fwait
dec
aaa
xbegin
clc
lods
repz
nop
jb
add
add
clc
gs
data16
arpl
add
add
rorb
add
xchg
js
mov
clc
testl
lret
dec
cmc
add
inc
clc
push
clc
stos
mov
add
add
push
clc
push
add
push
add
ljmp
add
ja
shrb
into
jne
fcos
ret
inc
clc
push
add
sarl
mov
or
clc
pop
clc
iret
dec
sti
addr16
push
dec
jg
aaa
pop
mov
add
sub
fmulp
es
movsb
clc
jne
call
push
add
xor
clc
inc
add
sub
das
sar
jmp
jle
sub
loopne
xchg
test
push
add
cmp
movsl
clc
dec
push
and
add
pop
clc
hlt
scas
int3
std
pop
pop
pop
inc
clc
sbb
cmp
add
enter
popa
add
mov
clc
stc
jg
mov
stos
clc
ret
clc
jbe
mov
add
aam
xchg
lods
inc
clc
jns
add
cltd
add
pop
cmp
fs
popf
mov
fidivrs
xchg
mov
xchg
mov
add
repnz
leave
mov
mov
xchg
inc
add
dec
pop
clc
out
cmp
adc
add
add
add
jecxz
iret
mov
sub
add
add
jle
clc
scas
jo
add
mov
adc
xor
add
clc
in
fidivrs
clc
or
repz
pop
lahf
xlat
add
pop
mov
insb
jns
add
sbb
adc
add
jecxz
loope
cld
into
repz
or
add
in
inc
add
out
inc
clc
stc
mov
sub
dec
fsubrl
or
add
fistpl
inc
add
pushf
push
pop
enter
add
shrb
jbe
jp
clc
jge
clc
xor
add
dec
adc
cmp
fstp
mov
clc
or
and
add
xchg
hlt
inc
clc
sbb
add
arpl
add
int3
pop
add
add
clc
cmpsb
clc
cmp
xchg
jne
clc
sbb
xchg
sbb
mov
xchg
iret
data16
push
add
je
add
mov
clc
mov
das
cs
clc
inc
clc
adc
add
add
cmp
push
add
call
sub
movsb
clc
in
call
lods
or
add
add
mov
stos
adc
add
xor
add
add
add
fsub
clc
cmp
add
aam
pop
in
jo
add
push
cmp
xchg
out
jnp
popa
add
mov
add
repnz
add
add
fiadds
clc
lret
add
pushf
aaa
clc
sar
xchg
cltd
and
add
clc
in
xchg
xor
add
clc
or
xchg
sub
ds
incl
mov
enter
stos
rcll
add
sub
int3
int3
mov
pop
js
dec
ror
pop
fstps
daa
clc
jae
add
add
popf
imull
clc
xor
add
add
add
add
push
and
sub
add
xbegin
push
js
sub
add
jg
icebp
sarl
dec
push
add
clc
jb
add
clc
xabort
dec
xchg
xchg
fs
imulb
in
cmp
add
clc
popa
add
xchg
mov
enter
mov
outsl
fsubl
clc
jl
stos
xchg
mov
cli
dec
or
in
gs
and
clc
insb
in
push
xchg
pop
cmp
cld
divb
add
in
sub
clc
cmc
mov
adc
add
add
mov
aam
add
cmp
clc
popa
add
sbb
int3
ss
add
ljmp
dec
pop
push
mov
out
in
pop
clc
sahf
out
mov
push
movsb
clc
mov
clc
mov
xchg
mov
mov
mov
test
clc
ljmp
jecxz
es
imul
add
jb
add
add
test
clc
dec
pop
clc
inc
add
sbb
sub
sahf
sar
nop
iret
jge
mov
push
xchg
aad
jl
mov
sub
add
add
shl
add
add
loop
imul
add
test
add
push
pop
lret
add
add
xabort
jecxz
or
add
test
pushf
filds
add
stos
and
jecxz
pop
repnz
cmp
jle
out
dec
xor
repz
and
add
xchg
iret
mov
fsts
add
add
add
mov
clc
pop
ljmp
pop
cmc
aas
cmp
clc
cmp
add
cmpsl
clc
gs
mov
pop
cmp
add
add
scas
lock
fs
mov
clc
mov
clc
push
arpl
add
mov
fwait
ljmp
fsubl
ja
inc
add
cmpsl
clc
push
clc
ja,pn
stos
ljmp
add
sahf
dec
cli
stos
or
mov
sarl
adc
add
add
and
inc
clc
inc
clc
int3
pop
mov
in
or
push
xabort
mov
add
xbegin
add
pop
std
cs
clc
nop
cmp
clc
addr16
push
inc
clc
dec
xchg
jae
add
cltd
jge
enter
push
add
iret
cmp
xchg
gs
add
clc
mov
adc
add
sar
shl
mov
clc
and
add
clc
push
xlat
push
add
sbb
add
mov
adc
int
cmp
push
add
cmp
fcompl
test
aas
ja,pt
lret
add
movsl
clc
and
add
sub
add
cwtl
mov
adc
add
out
xchg
sar
push
outsl
push
cld
stc
aaa
and
add
outsl
hlt
pop
clc
cmp
push
add
test
daa
clc
and
add
clc
push
add
vmaxps
sti
pop
xchg
pushf
push
popf
aas
lods
loop
jo
add
data16
clc
jne
fs
lea
or
or
jecxz
cmp
dec
mov
mov
scas
push
dec
ss
clc
mov
add
xchg
scas
in
int3
data16
inc
clc
stc
add
add
leave
and
add
sub
push
aas
mov
adc
aad
jg
add
mov
scas
pop
mov
dec
out
jmp
add
scas
insb
pop
daa
clc
lret
push
pop
clc
and
add
push
xor
add
xor
add
data16
ret
clc
sub
clc
popa
add
adc
dec
or
jmp
sub
or
clc
test
jl
xchg
jmp
mov
rorl
clc
jecxz
in
sbb
in
cmp
lods
mov
clc
mov
xor
add
aad
cmp
out
sar
imul
clc
add
add
lods
cwtl
dec
push
add
mov
pop
fldenv
in
scas
xchg
xabort
loopne
inc
add
push
clc
xor
add
leave
popa
add
push
call
mov
fcoms
add
lfs
imul
cmp
cs
mov
xchg
fs
xor
out
mov
fisubl
add
stc
add
add
inc
add
adc
add
test
mov
clc
mov
add
gs
mov
push
clc
jbe
mov
add
test
clc
and
repnz
dec
lcall
in
jmp
call
inc
clc
into
jmp
push
out
inc
add
jb
add
xor
add
addr16
je
test
lock
inc
clc
repnz
cmpsl
clc
mov
lcall
push
clc
pop
mov
sub
clc
push
movsl
clc
sahf
push
inc
clc
loop
xchg
push
sti
mov
clc
xor
add
lock
lea
ffreep
clc
int3
mov
clc
inc
clc
jecxz
dec
stos
sar
mov
mov
xchg
xchg
adc
and
add
add
inc
add
rolb
add
sub
pop
ja
mov
mov
clc
insl
cmp
mov
call
jae
add
adc
add
cwtl
push
dec
xchg
js
clc
mov
add
add
cmp
push
add
jae
add
add
or
clc
dec
pop
inc
add
cmp
arpl
add
ljmp
add
add
add
add
jae
add
sbb
insb
mov
xor
clc
xor
add
adc
add
aaa
adc
add
jg
sub
sbb
clc
push
add
cmpsl
clc
loopne
mov
cltd
mov
add
mov
mov
mov
imul
fistps
mov
adc
add
add
pusha
add
ret
fs
sar
mov
popf
and
add
add
mov
scas
dec
das
pop
add
add
mov
or
adc
add
fcomp
aaa
in
aaa
mov
movsb
clc
inc
add
jno
add
jl
add
ja
inc
clc
fistpl
xor
add
sub
add
clc
add
add
clc
cmp
inc
add
lahf
lret
push
dec
add
add
add
dec
cli
ja
mov
push
add
cmp
clc
mov
add
lahf
jnp
xor
int
clc
xchg
xor
or
add
adc
add
clc
xchg
loop
mov
aaa
jge
je
outsb
add
mov
clc
movsl
clc
mov
add
jge
scas
dec
mov
mov
stos
dec
outsl
sub
hlt
fnstsw
inc
clc
cld
and
add
clc
test
nop
xlat
gs
sbb
out
xchg
push
add
jne
add
roll
add
add
add
add
inc
clc
mov
daa
clc
enter
lret
pop
sar
jge
ja
cmp
clc
movsl
clc
pop
xabort
jnp
dec
dec
cmp
mov
add
xabort
cmp
repnz
pushf
and
add
cltd
mov
add
sbb
add
clc
dec
xchg
add
add
int
add
sti
push
test
pop
fistps
notl
cmp
clc
adc
add
dec
test
popf
cmp
add
mov
repz
add
adc
add
xabort
fwait
sbb
iret
repz
pop
pop
clc
pop
das
out
sub
add
clc
insb
scas
sub
xchg
lahf
ficompl
notl
push
inc
clc
push
mov
clc
fildl
jmp
and
mov
sub
clc
sar
cmp
clc
push
clc
pop
arpl
add
stc
shll
push
mov
dec
adc
add
clc
push
push
clc
pop
jmp
dec
std
bound
add
punpckhdq
addr16
mov
push
cs
xchg
inc
clc
jmp
clc
sbb
pop
push
add
incl
clc
xabort
lock
sub
xor
movsl
clc
cmpsl
clc
jne
inc
add
mov
xbegin
sbb
es
stos
bound
add
cmp
or
out
inc
clc
add
add
loop
sbb
add
lock
hlt
pusha
add
push
pop
jno
add
cmp
add
repz
inc
clc
add
add
or
xor
add
clc
dec
leave
inc
add
int3
xchg
xlat
sub
rclb
add
call
adc
stos
sbb
je
cld
loop
data16
test
adc
cmp
mov
arpl
add
add
add
das
inc
add
lar
add
add
xor
or
xor
add
stos
dec
cmpsb
clc
push
mov
clc
inc
clc
call
add
add
sbb
add
cmp
enter
cwtl
es
pop
cmp
add
cli
imul
clc
xchg
fs
faddl
clc
cmp
test
lods
insl
out
jne
add
cmp
or
lret
cmp
clc
cmpsl
clc
test
loope
int3
repnz
pushf
mov
sbb
pushf
test
mov
mov
sbb
mov
loopne
mov
add
jp
clc
dec
jb
add
jae
add
pop
lfs
clc
mov
add
cmp
clc
or
add
in
out
pop
pop
pusha
add
sahf
fstl
add
jb
add
clc
gs
fwait
push
lods
adc
jl
add
and
add
scas
pop
cmp
sbb
add
xchg
xor
cld
das
outsb
xor
cmp
xor
popf
adc
add
nop
xor
mov
cmp
clc
lods
pop
aam
clc
icebp
insb
pop
clc
lods
cmp
sub
sub
add
mov
add
lock
clc
dec
and
add
clc
cmc
roll
out
sub
mov
xbegin
add
lods
cwtl
or
push
add
test
push
add
mov
sbb
add
fmul
ja
jns
shll
push
add
mov
testb
lret
dec
sahf
repz
mov
add
imul
add
add
add
fdivs
fwait
jae
add
clc
push
add
mov
xchg
js
inc
add
in
inc
add
hlt
mov
add
sub
jo
add
xchg
jbe
es
unpckhps
in
and
pop
into
push
adc
add
clc
pop
jle
xchg
out
loop
std
mov
hlt
movsl
clc
cmp
pop
or
jle
mov
mov
imul
add
mov
mov
add
clc
pop
dec
test
popa
add
xbegin
xor
cmp
add
mov
add
adc
add
clc
pop
mov
rcr
adc
add
clc
push
jo
add
clc
ja
mov
clc
mov
mov
pop
arpl
add
clc
lahf
std
jle
clc
pop
adc
pusha
add
test
xor
add
add
jb
add
test
clc
jp
add
and
add
dec
mov
inc
add
test
clc
mov
and
mov
add
mov
loop
and
jns
insl
cmp
mov
cmpsb
clc
shrb
cmp
add
dec
inc
clc
inc
clc
add
add
mov
clc
out
xchg
int3
inc
add
sbb
pop
mov
clc
cmc
cltd
dec
shl
clc
out
mov
xbegin
clc
pop
adc
add
mov
clc
adc
add
cld
add
add
aas
mov
sti
pop
sbb
icebp
mov
fs
push
clc
cmp
clc
psraw
pop
jbe
jbe
clc
add
add
add
push
clc
jp
clc
push
jbe
jp
clc
pop
jne
mov
sub
in
in
xchg
add
add
xchg
add
add
push
clc
cmp
popf
sti
jge
je
pop
jae
add
inc
add
sub
add
bound
add
mov
ss
insl
jb
add
add
mov
jp
clc
xabort
inc
clc
aaa
dec
sub
push
add
mov
sub
xchg
add
add
add
add
clc
mov
jae
add
in
pop
pop
xchg
clc
cmpsl
clc
out
clc
sub
pushf
push
add
xchg
int
and
add
add
dec
lea
add
push
add
fisttpl
add
sahf
mov
mov
mov
stos
sub
add
lahf
pop
jmp
fs
add
add
clc
push
add
imul
dec
cwtl
xchg
sub
negb
sub
clc
cmpsl
clc
jg
ret
clc
fidivs
add
xchg
iret
mov
add
cmp
stos
dec
stos
dec
leave
movsb
clc
inc
add
gs
aaa
dec
push
mov
cwtl
cmp
add
sbb
clc
adc
add
pop
mov
xchg
dec
and
add
ret
clc
mov
adc
add
push
add
xchg
push
scas
loop
xbegin
cltd
or
jnp
leave
mov
dec
fmuls
not
mov
fsubs
add
clc
mov
fimull
or
xabort
add
lcall
dec
ret
jnp
add
mov
rolb
clc
dec
mov
mov
imul
dec
cmp
clc
dec
insb
pusha
add
and
add
inc
clc
cmpsb
clc
insl
push
add
adc
add
add
clc
hlt
and
add
add
and
add
add
or
or
int3
cld
mov
fimull
inc
add
sbb
lret
dec
fnstenv
add
clc
jecxz
je
enter
inc
clc
mov
clc
cwtl
adc
add
mov
mov
add
clc
lret
mov
es
push
and
add
pushf
cmp
dec
mov
cmp
fsubs
add
xbegin
in
imul
add
mov
add
xabort
clc
mov
mov
adc
mov
stos
push
add
jbe
adc
push
fldpi
xabort
call
mov
loop
fbstp
scas
mov
in
jb
add
push
push
adc
push
jmp
add
sub
add
inc
clc
es
push
add
aad
clc
mov
add
add
lret
je
dec
pop
pushf
clc
cmp
add
inc
clc
mov
clc
cmc
fdivs
xor
add
add
inc
clc
cmp
add
inc
clc
mov
push
ret
aad
inc
clc
outsl
or
stos
adc
add
clc
lea
clc
incb
xbegin
cmpsl
clc
cmp
xbegin
add
rcl
in
push
xabort
mov
add
xbegin
add
push
add
lcall
or
fimull
clc
add
add
add
add
inc
add
mov
loopne
mov
fbld
sbb
mov
dec
cmp
stc
mov
and
jmp
imul
and
add
add
frstor
testb
or
add
adc
clc
loope
cmp
js
clc
jbe
xchg
dec
adc
add
xchg
pop
ja
sar
or
sbb
clc
and
add
fsts
scas
pusha
add
inc
clc
inc
clc
int
clc
rorl
sahf
in
fisttpll
clc
sub
clc
loopne
sarb
add
jne
clc
fdivrs
and
add
add
add
add
clc
test
in
add
add
xor
cmp
add
js
add
leave
std
mov
and
add
xchg
pusha
add
sbb
clc
jecxz
jecxz
mov
inc
add
movsl
clc
mov
ds
iret
es
pop
inc
clc
cmp
jnp
test
dec
pop
clc
or
add
pop
mov
add
shrl
jnp
clc
leave
ret
clc
jecxz
or
pop
or
or
inc
clc
pop
add
add
iret
lret
add
push
add
gs
mov
clc
or
clc
call
and
add
clc
arpl
add
adc
add
add
add
lret
pop
xor
clc
push
add
xchg
jl
pushf
ret
add
aam
jg
loop
fimuls
add
clc
sub
add
add
jp
imul
clc
add
add
movsb
clc
clc
xor
shll
add
dec
mov
clc
dec
push
add
jl
clc
cmpsb
clc
xchg
mov
xor
add
inc
clc
sbb
cmp
hlt
push
inc
add
mov
or
add
clc
mov
add
sar
clc
jno
add
inc
add
mov
arpl
add
xor
sbb
lret
push
clc
aaa
popa
add
pop
mov
mov
xor
add
or
iret
mov
mov
add
mov
cmp
clc
sar
push
add
pop
sub
or
loopne
push
pop
vandnps
sub
mov
loopne
fnstsw
inc
clc
and
add
stc
mov
pop
imul
mov
inc
clc
inc
add
cmp
add
notl
insl
mov
add
aad
cmc
jo
add
add
pop
mov
jmp
roll
jnp
clc
adc
add
lcall
lret
mov
xchg
xlat
push
add
xor
add
int3
fsts
clc
dec
bound
add
push
test
or
nop
mov
gs
sbb
or
clc
cwtl
sarl
xchg
loope
cmp
mov
cmp
push
add
into
fsub
clc
jne
je
cs
int3
mov
in
sbb
sti
mov
add
dec
data16
fwait
aaa
pop
gs
sar
clc
inc
clc
lahf
leave
mov
pop
lods
pop
das
jo
add
xchg
das
cmp
cld
cmp
add
lcall
mov
cmpsl
clc
xor
add
loopne
mov
clc
mov
cli
mov
push
and
add
xor
xchg
cmp
aam
dec
ljmp
add
clc
jl
xor
add
add
or
clc
pop
daa
clc
cmpsb
clc
pop
aad
clc
dec
fmuls
ret
clc
dec
add
add
daa
clc
or
or
add
xchg
into
or
add
cwtl
sbb
add
lahf
xbegin
inc
add
xchg
add
add
push
xor
enter
clc
imulb
add
sti
adc
add
mov
fwait
push
inc
add
adc
add
clc
aas
fidivrs
iret
cmpsb
clc
dec
pop
scas
cmc
add
add
sahf
push
lock
sbb
jo
add
mov
inc
add
lods
mov
ret
clc
scas
xor
add
clc
ljmp
sbb
add
clc
cmp
add
repnz
clc
fcomi
lock
clc
inc
clc
je
leave
addr16
dec
lret
clc
and
add
add
mov
and
add
add
pop
clc
sar
clc
or
clc
clc
loopne
sbb
jecxz
psubd
call
stc
push
aas
push
push
add
fwait
inc
clc
rolb
clc
xor
add
jmp
int
clc
fisubrs
add
push
add
rcrb
jle
dec
adc
add
clc
out
inc
clc
outsb
ret
clc
sub
pop
imul
xor
add
mov
sbb
sub
ret
shl
clc
sti
jo
add
push
dec
hlt
test
cmp
and
add
xchg
mov
clc
sub
adc
add
add
xchg
ficoms
into
clc
cmp
icebp
insl
std
inc
add
push
cmp
and
add
pop
mov
add
es
adc
add
add
iret
dec
cmp
sbb
icebp
cmc
aad
mov
test
int
clc
aam
push
sar
clc
stc
fsubr
mov
clc
add
add
or
mov
cmp
test
mov
add
fidivl
pushf
call
repnz
clc
int3
aam
mov
add
pop
jg
lret
pusha
add
call
adc
add
out
test
jae
add
daa
clc
xor
clc
in
or
jmp
push
add
cmp
xor
add
clc
fimuls
sar
dec
pushf
cld
mov
cmpsl
clc
sti
lods
or
jecxz
outsl
jg
lods
lea
cmp
clc
ret
clc
cli
inc
clc
fisubl
clc
ss
test
pop
adc
add
sub
xbegin
add
add
loope
lret
add
add
xchg
ret
clc
gs
mov
adc
add
and
sub
jmp
mov
push
adc
add
dec
fxch
sub
clc
jge
pop
clc
jnp
add
jmp
mov
sub
clc
mov
xchg
or
clc
mov
add
mov
lods
gs
add
adc
mov
cld
sbb
clc
mov
xbegin
aas
mov
mov
add
scas
push
shrb
add
jmp
insb
sbb
hlt
push
xchg
scas
shufps
xor
add
jp
clc
jno
add
cmp
cmp
popa
add
sti
jl
clc
xchg
or
cli
mov
mov
pusha
add
dec
lea
add
pop
test
clc
xchg
lret
pop
add
add
ljmp
xor
add
add
movsl
clc
jns
test
jae
add
add
pop
sub
add
test
mov
adc
add
clc
aaa
lock
dec
pop
inc
add
pop
leave
xor
add
pop
js
push
lret
mov
nop
dec
fdivrs
add
pusha
add
movsb
clc
cmp
or
clc
mov
out
outsb
dec
sti
loop
pop
aas
jp
out
push
test
daa
clc
aam
cld
cli
inc
clc
push
add
sar
add
mov
dec
repnz
add
cmp
das
mov
clc
stc
and
add
or
pushf
sub
add
lcall
add
loope
xchg
inc
clc
outsb
xchg
data16
ljmp
in
cmp
clc
dec
jbe
xchg
test
out
scas
mov
clc
stos
pop
test
stos
data16
add
outsl
repz
xchg
sar
clc
pop
mov
cmp
add
xchg
enter
clc
push
shrl
xabort
mulb
or
add
cmp
insl
movsb
clc
push
jne
xor
add
lea
hlt
adc
add
add
add
add
clc
push
stos
leave
add
sub
sbb
dec
addr16
push
push
mull
add
add
mov
clc
and
outsb
mov
sarb
pop
out
inc
add
test
in
inc
add
xchg
fs
push
ds
add
add
add
adc
add
scas
and
add
outsl
in
into
je
mov
add
mov
mov
add
addr16
std
scas
jns
popa
add
pushf
xor
add
clc
push
xchg
add
add
add
aas
arpl
add
xor
add
mov
sahf
dec
jnp
xbegin
bound
add
mov
push
jne
add
imul
xchg
js
xor
add
add
push
scas
mov
out
cmc
in
enter
out
mov
add
mov
add
dec
rcl
push
clc
xchg
or
shll
add
dec
dec
shr
ja
add
test
sub
pop
clc
das
inc
add
aas
xchg
push
test
adc
add
add
lret
fcmovbe
inc
clc
push
lock
pop
clc
dec
pop
lock
clc
movsl
clc
bound
add
add
clc
mov
clc
cmc
icebp
push
fstpt
add
push
clc
xor
add
dec
loop
popa
add
mov
fiadds
clc
outsl
cmp
add
jge
add
out
sar
add
jmp
mov
xchg
scas
and
add
add
mov
clc
push
bound
add
push
add
out
adc
in
inc
add
jns
clc
mov
adc
add
jo
add
add
push
jle
xchg
xor
add
clc
aaa
mov
outsb
fmuls
dec
scas
push
jge
mov
xchg
lcall
clc
mov
add
xchg
sub
clc
cmp
add
xlat
cli
xchg
sbb
add
push
int
clc
xchg
or
add
xchg
cli
xchg
cmp
in
pop
pop
jle
jge
popf
ret
clc
in
pop
push
pop
cmp
je
clc
in
push
cmp
add
fwait
dec
jb
add
clc
sub
push
add
push
add
sti
mov
mov
loop
ja
and
add
rcr
imul
int3
repnz
mov
add
in
repnz
inc
add
push
call
add
idivl
fmul
cmpsb
clc
and
add
and
add
pop
clc
clc
test
enter
clc
mov
cld
mov
add
cmp
add
test
push
daa
clc
jecxz
xor
add
add
clc
and
add
add
cmp
add
packsswb
add
add
xbegin
pop
mov
push
add
xor
add
sbb
mov
add
clc
mov
sub
dec
pop
clc
loopne
cmc
inc
add
es
or
clc
aam
clc
loop
arpl
add
test
push
test
aaa
cltd
xchg
push
je
and
add
jns
mov
add
clc
icebp
mov
gs
xchg
int3
mov
stc
jae
add
add
cmp
or
rcr
push
fldenv
inc
clc
jae
add
stos
lock
clc
in
cmp
inc
add
sub
sar
jbe
add
add
faddl
add
clc
sti
aam
movsl
clc
cmpsb
clc
jnp
or
ret
clc
sar
movsl
clc
xchg
jno
add
addr16
popa
add
negl
pusha
add
data16
cmp
push
push
add
gs
push
dec
xabort
clc
mov
add
divl
mov
xor
clc
pop
fnstcw
out
test
sar
lret
dec
out
adc
add
add
cmp
mov
clc
test
lahf
fldl
add
addr16
cmpsl
clc
mov
add
sub
sbb
dec
xbegin
dec
adc
add
or
xbegin
mov
mov
mov
clc
into
mov
adc
add
sub
in
mov
lcall
ss
cmp
addr16
sub
add
pop
pop
mov
sub
cmp
cmc
rorl
clc
inc
add
dec
xchg
lret
out
adc
cmp
clc
mov
clc
nop
and
add
add
cmp
and
add
cmp
sahf
cltd
mov
mov
sub
dec
sbb
pop
fisubl
add
adc
add
fidivl
jecxz
pop
in
aas
mov
xor
lock
clc
cmp
sar
add
add
add
clc
call
add
mov
data16
enter
dec
scas
mov
popf
jo
add
add
sub
mov
repz
push
lea
add
cmp
sti
outsb
sbb
add
test
cli
add
add
add
int3
pushf
jge
clc
sbb
clc
pop
fwait
jns
jmp
clc
sahf
adc
add
fs
enter
in
xchg
mov
clc
sar
iret
repz
das
add
adc
push
lcall
add
cwtl
adc
add
insl
lods
fwait
pop
cmc
ds
mov
xchg
and
add
clc
mov
js
subps
in
sti
cmp
clc
insb
hlt
aaa
xchg
in
mov
out
push
add
insl
idivb
jbe
sub
outsl
aaa
pop
int
add
adc
add
adc
clc
mov
push
and
add
mov
adc
jmp
clc
dec
inc
add
inc
add
pop
lcall
sti
inc
clc
ds
jbe
add
pop
movsb
clc
ficoml
add
lock
loopne
dec
idiv
test
mov
mov
or
test
xor
add
pusha
add
ljmp
jnp
add
lret
std
pusha
add
xor
add
clc
popa
add
sbb
sub
add
cmpsb
clc
mov
rol
clc
movsl
clc
dec
adc
clc
fisubl
add
pop
test
sub
mov
mov
add
pop
fists
popa
add
mov
clc
push
std
lahf
xor
add
add
sar
add
xlat
out
jl
xchg
cli
fstps
cmp
clc
call
add
adc
add
fcmove
inc
add
cmp
or
cld
lods
enter
clc
nop
pop
clc
and
add
dec
cmp
fisttpl
fwait
xor
add
lea
inc
clc
mov
jl
ss
in
jmp
mov
push
jge
sub
add
add
xchg
ret
mov
sti
sbb
add
add
in
xbegin
loop
push
xor
add
add
in
int
jae
add
clc
fisttpl
nop
cmp
add
frstor
add
das
clc
dec
lods
lret
add
dec
dec
ss
clc
out
xabort
mov
add
shll
add
flds
add
clc
adc
add
data16
add
cmp
xchg
jns
fwait
es
sub
dec
out
sarl
lcall
add
mov
add
fstpl
cli
out
scas
sbb
add
cmp
dec
in
test
mov
add
pushf
roll
clc
push
jb
add
clc
aaa
cltd
xabort
or
clc
xbegin
clc
xchg
xlat
in
mov
sahf
cmp
add
mov
add
mov
add
int
xlat
cmp
clc
add
add
pop
clc
xor
sbb
sub
or
pusha
add
jb
add
inc
add
mov
clc
fiaddl
sarl
clc
mov
sub
out
sar
add
cmp
loopne
mov
clc
mov
cmpsb
clc
bound
add
pop
and
add
incb
add
bound
add
clc
adc
add
jno
add
pop
mov
add
jne
cmp
adc
add
clc
test
adc
add
clc
div
mov
mov
mov
mov
popf
das
fadds
add
scas
add
ret
out
cmpsl
clc
jge
pop
cmp
jb
add
add
add
add
add
cmp
vmovhps
js
clc
add
add
clc
test
imul
clc
push
jp
xor
add
lcall
add
add
mov
push
es
fs
jecxz
adc
clc
aad
xor
add
xor
add
lods
dec
or
push
jge
add
xchg
mov
mov
mov
add
cmp
popf
adc
add
clc
mov
data16
add
sub
add
cmp
clc
fsubp
clc
popa
add
push
clc
insl
cmp
add
cmpsb
clc
ret
clc
jne
mov
jmp
popf
call
dec
xchg
mov
add
xchg
mov
clc
test
sub
cld
sbb
add
es
dec
xchg
jb
add
push
push
add
es
int3
mov
clc
add
add
xor
add
add
add
or
mov
aam
clc
clc
xor
add
pop
push
add
filds
cwtl
ret
clc
and
add
mov
int
lret
sar
add
int
pop
cmp
clc
pop
dec
push
jno
add
clc
mov
and
pop
cmc
inc
clc
cmovg
cmc
adc
mull
add
and
add
stos
loop
outsb
rcl
ret
clc
adc
add
aad
in
xchg
mov
into
mov
sub
add
add
nop
js
clc
pop
and
xabort
push
pop
jnp
or
int3
pop
adc
add
clc
sahf
push
pop
push
addr16
adc
add
lcall
clc
dec
or
clc
inc
clc
dec
es
insl
ret
clc
push
add
in
mov
lret
clc
adc
add
lods
fistl
add
hlt
push
add
fsts
xchg
xor
add
lahf
and
clc
xabort
clc
pop
out
test
das
fsubrp
sub
mov
ret
clc
call
and
add
dec
mov
push
fadd
clc
push
add
xchg
inc
add
add
add
clc
mov
clc
dec
mov
add
cmp
clc
paddq
add
add
ret
test
ja
cmc
mov
cwtl
testl
add
add
jns
clc
dec
in
dec
and
fnsave
clc
dec
ss
add
je
jbe
call
cmp
clc
jmp
clc
inc
add
loope
adc
add
add
lahf
sti
xchg
outsl
sar
jle
cli
ja
clc
out
mov
add
add
cmp
jmp
xor
add
ss
bound
add
jmp
cmp
add
sbb
clc
or
clc
sbb
ja
inc
add
or
data16
in
pop
stc
movsl
clc
add
add
cwtl
movsl
clc
arpl
add
pop
clc
test
and
add
add
cmp
out
mov
inc
clc
inc
clc
incb
clc
iret
push
sti
dec
add
add
incb
addr16
xchg
sbb
mov
test
xbegin
aas
frstor
add
xchg
movsl
clc
cmp
mov
add
or
add
pop
sar
add
mov
clc
iret
push
popf
mov
fildl
and
out
outsb
push
out
pop
pop
push
add
das
push
call
mov
jne
pop
jo
add
add
add
ds
clc
push
test
clc
add
in
and
add
clc
xchg
imulb
pop
fsubs
clc
mov
inc
add
xor
add
add
cli
sbb
add
movsb
clc
daa
clc
fsubrl
add
jp
mov
push
test
pop
cmp
sub
dec
fcompl
dec
pop
shll
das
add
add
dec
dec
mov
jecxz
mov
add
clc
in
sbb
test
xor
jns
clc
xlat
or
clc
mov
add
add
add
fistl
add
in
push
das
cmp
mov
dec
mov
dec
push
add
ds
add
mov
cmp
in
fldcw
sbb
jo
add
clc
sarb
push
clc
js
clc
dec
pushf
mov
shrb
xchg
or
sar
das
sub
add
mov
pop
js
addr16
cmovb
add
clc
gs
or
add
mov
add
aaa
fiadds
adc
add
dec
xchg
daa
clc
mov
mov
jne
clc
lahf
scas
je
jns
clc
jmp
xor
add
push
clc
or
arpl
add
mov
and
cmp
addr16
push
sbb
mov
clc
mov
add
test
sub
inc
clc
lods
pop
in
or
inc
add
stos
test
and
add
add
fidivs
add
lods
icebp
or
das
and
add
add
push
mov
inc
clc
dec
jg
lahf
out
adc
add
add
dec
push
fistps
mov
clc
cmp
into
jns
clc
imul
sbb
add
add
xchg
pop
jbe
loope
mov
jp
out
jae
add
mov
daa
clc
popa
add
sub
leave
xchg
pop
hlt
aam
clc
mov
add
clc
push
cwtl
adc
ret
cld
mov
nop
or
sub
clc
sub
add
mov
pop
inc
clc
push
add
push
add
arpl
add
add
dec
in
jg
nop
and
cmp
leave
pop
das
into
stc
fmull
ljmp
sub
cmp
clc
push
out
push
aad
inc
clc
arpl
add
add
cmp
xor
add
and
jmp
add
add
in
fidivrl
add
fs
js
test
adc
add
mov
jno
add
jp
lods
in
imul
push
je
add
dec
cmp
call
mov
outsb
pusha
add
mov
addr16
xor
add
mov
popa
add
aad
clc
push
add
jmp
into
xchg
cmpsl
clc
and
add
inc
clc
sub
push
pop
shll
sub
sub
clc
ficoms
add
add
add
sub
add
pop
clc
sar
clc
lret
mov
jge
gs
push
lock
clc
pusha
add
add
add
loopne
add
or
cmpsl
clc
clc
xor
repz
nop
fdivrl
xchg
inc
add
roll
adc
add
clc
cmp
pop
outsl
ret
clc
inc
add
sub
jl
lcall
add
pop
ret
add
pop
movsb
clc
mov
clc
sahf
sbb
insb
lea
push
or
add
clc
xchg
stos
repnz
popf
inc
add
lods
shrl
rorb
add
jmp
adc
add
sbb
add
scas
dec
inc
clc
xchg
and
add
dec
sbb
push
es
jne
scas
mov
mov
add
scas
mov
clc
dec
jl
jns
mov
cmpsl
clc
mov
clc
add
add
clc
mov
dec
sbb
sar
mov
aam
dec
push
clc
into
push
add
out
icebp
mov
lret
pop
mov
je
hlt
and
add
fwait
cmp
aam
mov
movsb
clc
jg
cmp
mov
mov
cmpsl
clc
xchg
jp
ds
mov
fcomps
aaa
call
inc
add
add
stos
pop
push
add
push
lahf
add
xchg
xor
clc
xchg
in
out
inc
clc
xchg
sbb
add
loopne
fcompl
inc
add
inc
add
dec
pop
add
add
add
push
clc
xchg
sub
mov
je
fs
ret
mov
push
add
adc
clc
insb
mov
add
add
movsb
clc
cs
clc
dec
jnp
add
and
add
push
or
add
and
or
clc
enter
push
dec
jb
add
dec
imull
clc
scas
cmc
inc
add
jbe
into
icebp
pop
adc
add
clc
loope
rcll
sbb
cmp
and
add
popa
add
fbld
cmpsb
clc
out
and
add
add
add
add
clc
inc
add
cltd
push
push
add
add
mov
add
add
add
pop
mov
mov
sbb
shll
xchg
sbb
add
add
or
clc
mov
arpl
add
gs
outsl
cmpsl
clc
outsl
mov
add
pusha
add
mov
jg
cmpsb
clc
stc
std
add
aam
clc
pop
mov
sub
and
ja
outsl
mov
mov
add
push
adc
add
clc
cmp
add
outsb
in
int3
xchg
sar
push
xchg
jmp
add
add
jo,pn
add
add
inc
clc
ret
clc
push
add
and
add
add
cmp
jb
add
clc
sbb
jmp
nop
xchg
leave
stc
fs
in
mov
clc
mov
adc
push
js
addr16
enter
clc
stos
in
pop
mov
xchg
or
cmp
test
jg
cmpsl
clc
mov
add
pusha
add
fnstsw
test
inc
clc
add
mov
idivl
add
notl
pop
or
clc
stos
xor
add
add
push
add
and
fisttpl
xchg
inc
add
push
imul
add
call
clc
cmp
pop
and
add
mov
add
and
add
fstpt
add
add
xchg
mov
cmp
outsb
sbb
add
into
and
add
dec
pusha
add
and
add
clc
ret
clc
mov
mov
add
or
clc
es
lock
cli
jl
mov
add
dec
inc
clc
pop
call
dec
jno
add
clc
fwait
and
add
clc
mov
dec
notl
add
cltd
jle
dec
fs
xor
add
sub
clc
sbb
add
loopne
psrad
cmp
lods
std
xor
add
clc
cmpsb
clc
rorb
int
shrb
clc
cmpsl
clc
mov
iret
xor
add
test
clc
mov
sarl
gs
cmp
rcrl
add
enter
add
mov
add
pop
imul
jae
add
add
push
add
mov
loop
pop
pop
clc
adc
pop
add
in
sar
repz
clc
inc
clc
fdivr
cmp
adc
add
lcall
add
loop
and
add
fs
mov
cmp
cmp
aas
sub
clc
movsb
clc
push
add
pop
cmpsb
clc
loopne
sub
mov
add
lahf
popf
imul
jl
clc
push
aad
clc
jle
clc
jnp
inc
clc
aad
jbe
cmpsb
clc
es
xchg
push
adc
add
xchg
push
add
adc
add
clc
stc
lods
iret
fwait
cwtl
jmp
add
mov
add
lahf
xor
add
clc
data16
inc
clc
test
pop
stos
mov
add
add
push
test
dec
pop
jl
cmc
mov
clc
dec
testb
pop
popa
add
aas
repnz
sbb
bound
add
fs
mov
insl
push
insl
pop
lock
inc
add
es
nop
ss
add
add
add
iret
sub
repnz
mov
add
xor
add
repnz
add
clc
cs
pop
xchg
test
lahf
popa
add
sbb
add
add
add
jp
clc
sub
lret
cmp
sar
in
cmp
clc
mov
sub
adc
add
add
clc
scas
inc
add
mov
cli
jb
add
jp
clc
sub
push
fs
fisttps
mov
inc
add
mov
clc
aam
insl
in
cmp
hlt
stos
xchg
sub
clc
fadd
clc
or
daa
clc
and
add
aad
add
insl
sbb
cmpsl
clc
cmp
clc
adc
add
outsl
xchg
ret
and
add
clc
lahf
mov
call
add
in
mov
clc
xor
clc
or
add
cmp
icebp
inc
clc
dec
jge
cmc
aas
sar
sahf
jp
fsubrs
add
sub
jo
add
add
jno
add
cmp
clc
mov
clc
adc
push
cmp
dec
add
add
lcall
pop
dec
mov
clc
dec
loope
mov
mov
sbb
add
and
xchg
iret
test
sbb
add
adc
out
out
or
add
rorb
add
mov
jmp
lret
ss
adc
add
sub
std
std
enter
pop
clc
fs
int3
mov
fdivl
aam
add
sar
xchg
push
cmp
add
movsl
clc
movsl
clc
xbegin
pop
clc
mov
data16
inc
clc
in
lcall
xchg
ret
clc
xchg
scas
fwait
sbb
lret
add
push
add
mov
push
out
adc
add
add
fdivl
mov
add
arpl
add
stos
lahf
or
clc
xchg
icebp
sub
clc
pop
sub
xor
cmp
clc
inc
add
outsb
dec
xchg
mov
in
mov
bound
add
add
adc
add
add
pop
data16
mov
aad
push
lret
mov
clc
mov
popf
push
jmp
lret
cld
popf
jae
add
clc
xchg
enter
push
sub
lods
iret
pusha
add
jb
add
sar
stos
or
clc
sub
inc
clc
inc
clc
ds
lcall
imul
test
cld
push
add
or
clc
sar
mov
add
into
lods
enter
clc
imul
xchg
fs
or
mov
push
add
ss
inc
clc
lcall
mov
xor
add
jo
add
xor
add
xchg
pop
clc
scas
aas
shll
cmp
lock
clc
jg
aas
mov
ja
sar
sub
jnp
jo
xabort
xor
add
clc
pop
ds
stos
roll
add
or
stos
js
fs
adc
add
add
stos
outsl
inc
clc
add
add
add
add
push
jb
add
add
pop
cmpsb
clc
and
shrb
xchg
cld
mov
cmpsl
clc
mov
clc
fsubs
add
xor
add
insb
test
xbegin
clc
push
add
dec
popf
stos
inc
clc
into
std
xchg
sar
push
sbb
add
clc
mov
sub
add
add
add
push
scas
push
clc
cs
add
pop
cltd
adc
ret
clc
pop
pop
adc
add
ds
js
add
pop
lock
xchg
pop
push
add
xor
add
mov
add
enter
add
dec
xchg
pop
outsb
inc
add
pop
pop
rcll
add
outsb
mov
sub
pop
mov
clc
cmp
or
clc
jo
add
add
rorl
mov
test
pop
sbb
or
mov
add
clc
leave
cld
in
jle
clc
sahf
add
sub
cli
leave
mov
sar
inc
add
pop
push
xlat
or
icebp
jae
add
add
cs
add
clc
aam
pop
push
xor
add
pop
sbb
push
testb
add
ds
nop
stos
sbb
clc
inc
add
mov
sar
add
jl
int
lea
cmp
lods
jo
add
xchg
jns
clc
lcall
mov
push
clc
cmp
fidivs
repnz
xchg
stos
adc
add
call
add
push
add
push
or
in
test
sub
clc
mov
stos
cmp
xor
add
ss
clc
ret
clc
push
add
std
dec
aaa
shr
mov
clc
push
add
popf
pop
daa
clc
dec
rolb
in
roll
add
push
or
jbe
icebp
insl
clc
inc
add
mov
clc
dec
inc
add
pop
or
or
mov
arpl
add
add
add
add
imul
xchg
xlat
sar
cmp
xchg
rcl
cld
mov
fdiv
addr16
in
xor
add
add
imul
add
data16
dec
rep
pop
cmp
clc
cmp
clc
lods
cld
mov
add
add
das
sub
sbb
and
add
clc
sbb
repz
es
aad
pop
adc
add
add
add
icebp
mov
add
add
cmpsb
clc
adc
add
pop
mov
cmp
clc
aas
jno
add
clc
aam
add
sahf
mov
out
daa
clc
fsubrp
aaa
sbb
add
popf
cmp
lods
outsl
xbegin
stc
cmp
add
dec
addr16
imul
pusha
add
ret
clc
xor
adc
add
rol
clc
movsb
clc
cmp
add
xor
add
dec
push
add
add
add
sub
popa
add
mov
add
add
clc
xor
add
push
mov
xor
add
add
add
mov
jne
fnsave
bound
add
shrb
clc
ss
or
outsb
pop
clc
mov
clc
popa
add
mov
cmp
add
clc
popf
pop
clc
xchg
xchg
ret
clc
sbb
clc
out
das
push
cmp
data16
cmpsb
clc
and
add
add
dec
dec
cwtl
loopne,pn
sbb
rorb
jno
add
add
jae
add
add
clc
pop
clc
pop
nop
xor
sar
add
and
add
inc
clc
dec
sub
clc
xchg
cli
cmp
jecxz
lods
add
add
clc
push
dec
imul
cs
add
popa
add
shrb
inc
clc
pop
pushf
add
fistl
inc
clc
sahf
outsl
into
mov
clc
leave
addr16
loop
xchg
adc
add
cmc
in
pop
jnp
inc
add
in
dec
sarb
cmpsb
clc
dec
vunpcklps
clc
sbb
push
fsubl
xchg
mov
jnp
push
clc
adc
add
adc
add
mov
clc
es
cli
clc
dec
push
es
xchg
hlt
test
clc
lret
or
gs
lret
clc
pushf
mov
clc
je
clc
xchg
adc
add
add
clc
sub
insb
and
dec
movsb
clc
ljmp
clc
push
mov
add
add
pop
ret
clc
cltd
dec
sub
add
inc
clc
inc
clc
dec
xabort
clc
inc
clc
push
fldt
clc
stos
pop
in
jp
test
clc
xor
add
popf
ret
clc
test
sub
stc
loop
sar
adc
add
mov
or
mov
fsubl
mov
add
test
sub
into
or
add
fdivs
mov
cs
daa
clc
xchg
dec
int3
or
add
ljmp
fwait
lret
jae
add
xabort
xchg
xor
add
mov
mov
add
mov
xchg
and
add
cmp
clc
inc
add
aas
cmp
loop
sbb
clc
mov
sbb
add
sbb
xchg
pop
sar
repz
jbe
clc
jmp
clc
fwait
xor
add
sub
shll
outsb
push
add
push
mov
clc
and
xchg
cmpsb
clc
icebp
pop
dec
sbb
clc
xor
clc
cwtl
xbegin
push
mov
flds
add
in
inc
add
push
add
cli
push
insb
mov
mov
ds
and
loopne
leave
or
clc
mulb
add
add
mov
add
ss
xchg
cmp
scas
push
add
int
clc
sub
sub
mov
hlt
bound
add
clc
jge
inc
add
je
xchg
loop
adc
add
add
lods
cltd
or
clc
out
test
xabort
cli
data16
mov
push
add
lret
pop
mov
popf
stos
stos
xor
and
add
xchg
xor
add
insb
movsl
clc
daa
clc
jl
arpl
add
add
mov
dec
lcall
outsb
or
clc
mov
mov
cmp
aad
clc
xabort
mov
mov
sbb
mov
outsl
in
push
add
add
icebp
push
pop
mov
add
clc
and
add
clc
cltd
sarb
cs
add
movsb
clc
std
dec
or
loope
adc
stos
movsl
clc
mov
lcall
jo
add
push
add
push
ret
clc
stos
in
out
mov
and
add
add
mov
jl
popa
add
jmp
clc
unpckhps
popa
add
add
repz
cmp
jbe
cmpsb
clc
daa
clc
inc
add
xor
clc
shrb
ja
adc
mov
clc
fists
in
cltd
cld
pop
add
clc
addr16
int
clc
test
xchg
in
and
add
into
aad
movsb
clc
sbb
add
add
sahf
cmc
push
clc
xchg
ucomiss
push
add
sbb
jl
and
cmp
dec
pop
paddd
clc
jbe
pop
fsubp
clc
sub
lock
and
add
add
add
clc
insb
es
mov
add
pop
clc
mov
inc
add
repnz
jle
mov
push
mov
mov
es
test
jge
ret
clc
push
mov
inc
clc
push
inc
clc
push
mov
mov
add
hlt
or
mov
sbb
pop
inc
clc
pop
pop
sub
mov
add
clc
pop
push
dec
loope
insb
adc
clc
mov
rep
clc
mov
addr16
in
cmp
pop
mov
mov
mov
sub
clc
or
clc
stc
inc
clc
mov
mov
clc
cwtl
xabort
call
sub
mov
clc
and
xchg
jnp,pt
sbb
sbb
cmp
xchg
out
jg
sbb
add
lret
mov
add
add
xlat
outsl
popa
add
xbegin
add
and
add
inc
clc
push
add
mov
iret
bound
add
clc
packsswb
add
ret
clc
out
dec
test
xchg
xchg
and
adc
xor
add
cmp
js
add
test
mov
xabort
hlt
adc
add
sahf
mov
mov
add
xor
inc
add
pop
mov
cmp
in
add
add
add
sub
xor
pop
clc
push
sahf
fisttpll
add
add
fisttpll
dec
mov
lods
dec
lea
pop
mov
scas
push
out
movsb
clc
test
gs
mov
inc
clc
mov
out
cmp
inc
clc
test
jp
fdivrs
add
mov
mov
dec
xchg
and
add
mov
add
cmp
cmp
mov
mov
out
push
add
mov
push
das
push
add
ficomps
in
clc
lahf
pushf
dec
mov
add
sahf
shll
push
cmp
add
data16
xor
add
dec
nop
addr16
xchg
and
add
push
add
add
jmp
dec
cmp
pop
fldpi
insl
mov
push
sti
jbe
pushl
push
push
adc
es
inc
add
push
add
in
jnp
inc
clc
mov
fimuls
dec
add
add
clc
push
add
jge
rcll
add
clc
lock
insb
adc
test
push
stos
ja,pt
stc
and
add
ljmp
add
add
xchg
cltd
jl
cmp
sbb
clc
cmp
aam
xchg
hlt
jo
add
js
cmp
test
clc
into
sbb
add
sbb
mov
das
es
pushf
dec
jmp
fnstenv
add
sbb
inc
clc
pop
sub
add
and
add
aas
sub
add
in
nop
data16
fmuls
ja
inc
clc
outsl
lret
add
adc
add
dec
in
mov
add
add
clc
div
cmp
bound
add
adc
add
mov
clc
inc
clc
pop
dec
sub
cs
inc
clc
aas
or
ja
clc
mov
add
inc
clc
inc
clc
cli
movsl
clc
cld
sub
clc
insl
pop
xchg
ljmp
add
add
clc
stos
aaa
daa
clc
xchg
sbb
lods
dec
aam
add
mov
cmpsb
clc
add
clc
sti
sub
add
mov
loop
xor
add
add
clc
lret
clc
test
mov
add
add
add
pop
mov
and
je
clc
ljmp
add
dec
sar
and
add
add
sub
add
add
and
add
clc
mov
mov
clc
adc
add
and
push
mov
or
add
push
add
stos
in
mov
clc
int
aam
inc
add
popf
in
jmp
leave
test
inc
clc
ja
sub
add
add
das
jle
clc
in
lcall
clc
jae
add
lea
pop
clc
and
add
push
mov
or
sub
clc
add
add
sahf
mov
pop
xbegin
add
data16
gs
push
add
sub
cmc
mov
dec
cmp
add
fs
xor
add
clc
lcall
xor
or
push
int3
pop
movsb
clc
push
add
lret
clc
push
add
dec
inc
clc
in
popf
stos
pop
icebp
push
clc
stos
sub
push
add
shl
clc
into
mov
clc
mov
sub
clc
jns
js
mov
add
ret
xchg
pop
es
xchg
jg
clc
jg
clc
je
fbstp
inc
clc
cmp
add
push
clc
inc
clc
sti
std
xbegin
cmp
add
jg
cld
inc
clc
jecxz
sbb
cltd
jmp
in
sub
add
seta
icebp
dec
into
sbb
add
je
sahf
mov
clc
cmp
add
clc
xchg
adc
add
clc
sahf
inc
clc
push
test
mov
jg,pn
xchg
or
xchg
pop
clc
jge
ficomps
clc
sahf
cmpsb
clc
sti
scas
pusha
add
xchg
push
loope
enter
fmul
aas
in
push
dec
xor
add
mov
inc
clc
and
add
cmp
data16
inc
clc
lock
clc
xchg
sarl
and
add
jne
mov
add
add
jg
mov
in
stc
test
pushf
jg
add
std
mov
clc
lods
loopne
dec
jge
clc
jnp
add
addr16
cmp
test
mov
or
mov
add
add
dec
mov
lock
test
cld
outsl
jne
add
jmp
cmp
inc
clc
cltd
jg
add
add
xchg
xor
add
add
add
clc
pop
call
clc
arpl
add
leave
out
push
lods
cld
insl
inc
add
sbb
clc
adc
add
nop
inc
add
sbb
mov
xchg
jp
imul
lock
gs
lahf
dec
mov
add
add
xchg
test
mov
or
lcall
ret
clc
int3
js
adc
add
fdivrs
add
fidivl
add
int
cli
pop
mov
mov
dec
adc
fdivrl
and
add
push
add
clc
sti
cmp
clc
inc
clc
js
clc
aam
mov
sar
arpl
add
out
or
add
fistps
pop
add
add
add
stos
jmp
jl
clc
or
jae
add
rcrl
arpl
add
clc
fldenv
mov
add
adc
add
push
add
daa
clc
and
cltd
or
test
sar
cwtl
mov
push
repnz
rcl
sbb
and
add
clc
outsb
inc
clc
fucomi
or
inc
clc
insb
xor
add
clc
roll
add
dec
int
mov
dec
insb
fldl
or
push
shrb
dec
mov
pop
movd
pop
xor
add
clc
lret
sub
add
cmpsb
clc
and
add
add
pop
clc
aas
movsl
clc
sub
pop
dec
mov
daa
clc
mov
xbegin
and
add
arpl
add
add
add
clc
sbb
inc
add
add
push
add
mov
mov
mov
sub
clc
jne
shl
pop
clc
je
add
dec
mov
dec
ss
cli
cmp
add
clc
cwtl
xor
arpl
add
pop
out
and
add
xor
add
clc
mov
xor
add
ss
clc
enter
or
mov
fildll
mov
add
inc
add
jnp
add
mov
clc
data16
bound
add
ret
clc
pop
push
add
loope
testl
add
clc
fcmovu
push
add
ret
mov
add
mov
mov
add
push
add
mov
cmc
es
inc
add
mov
clc
sbb
bound
add
sar
and
add
clc
fsubr
fwait
ret
push
add
stos
inc
clc
and
add
jne
lock
clc
lret
inc
clc
mov
add
add
push
ret
clc
fdivrl
jbe
add
ss
aad
lock
int
xabort
test
sub
clc
scas
cmp
mov
add
push
jb
add
inc
add
test
rorb
lret
data16
pop
mov
add
and
add
add
out
cmp
fidivrs
ja
and
add
pop
mov
mov
add
pop
es
xchg
cwtl
pop
mov
ljmp
outsl
mov
sbb
cmp
push
add
mov
clc
push
jb
add
sbb
clc
inc
add
mov
lea
mov
add
mov
sar
add
loop
into
jg
clc
or
jmp
cmpsl
clc
sub
jecxz
and
add
pop
loope
es
fwait
shlb
add
inc
add
in
aam
cmp
clc
ljmp
add
out
jmp
xchg
cld
aam
adc
mov
clc
xchg
pop
sti
xchg
pop
aad
mov
cmpsl
clc
std
add
add
xabort
clc
sar
pop
add
add
clc
bound
add
jp
hlt
or
mov
xchg
mov
cmpsl
clc
test
xchg
arpl
add
mov
and
add
add
inc
add
or
jp
mov
clc
outsl
cld
push
ljmp
add
in
js
add
mov
add
mov
push
add
enter
scas
sahf
jle
add
push
out
outsl
push
lcall
cltd
xchg
sub
rcr
inc
add
and
add
sbb
mov
inc
clc
xchg
test
jbe
mov
clc
ljmp
clc
pop
mov
clc
jmp
cmp
mov
push
add
jae
add
sar
xor
add
clc
inc
add
add
aas
dec
xor
add
add
inc
add
rcrl
pusha
add
cltd
and
add
add
fistps
sar
xor
add
lahf
xor
add
or
aam
clc
lock
lods
inc
clc
mov
and
add
mov
adc
clc
ja
mov
adc
add
add
mov
xchg
jbe
clc
sub
add
clc
roll
mov
insl
cmc
inc
clc
push
test
push
or
icebp
je
clc
loopne
push
std
stos
xchg
xchg
add
add
dec
jo
add
pop
or
pop
neg
xchg
out
mov
add
xchg
inc
add
mov
mov
add
add
add
scas
dec
outsb
xchg
lcall
add
mov
dec
push
insl
sbb
mov
sbb
xchg
mov
xchg
aad
ljmp
dec
mov
jecxz
dec
cmpsb
clc
jge
or
mov
sbb
fcom
sbb
push
inc
clc
loope
add
add
push
inc
clc
jnp
pop
data16
ret
mov
jg
push
add
rclb
lret
mov
add
adc
add
clc
ret
clc
out
bound
add
fistl
and
add
add
sub
xchg
inc
clc
sub
cmc
nop
xchg
push
jl
cmp
pop
clc
test
add
cmp
xchg
jnp
pop
push
clc
inc
clc
aad
clc
jmp
adc
inc
clc
cmp
sar
adc
clc
filds
add
sub
add
pop
clc
sbb
imul
pop
sbb
clc
sub
push
mov
clc
push
jb
add
cltd
sbb
dec
jmp
push
add
dec
push
add
mov
clc
mov
sub
das
cmp
or
pop
testb
sbb
add
pop
adc
add
mov
sub
mov
gs
es
bound
add
clc
dec
push
add
add
add
outsb
lock
xor
add
jno
add
ret
clc
mov
add
xchg
push
pop
clc
cltd
pushf
xchg
push
add
fnsave
add
clc
dec
xchg
fcmovu
inc
clc
arpl
add
add
ss
clc
jns,pn
or
clc
inc
clc
pop
or
pop
clc
out
adc
add
bound
add
or
add
fnstcw
jbe
clc
sbb
fmuls
dec
sub
sti
xbegin
adc
ret
clc
ficompl
add
xchg
dec
xabort
clc
aam
xor
add
gs
xchg
fnsave
add
push
clc
add
add
sub
add
xbegin
lock
repnz
add
call
sahf
mov
in
dec
push
add
xchg
or
cmpsb
clc
lods
mov
add
dec
or
pop
sar
xchg
add
add
scas
cmp
inc
clc
movsl
clc
jmp
add
dec
mov
add
inc
clc
cmp
mov
or
xor
add
js
popa
add
mov
clc
push
add
add
lret
mov
das
xbegin
clc
adc
add
push
xchg
mov
adc
pop
data16
add
add
popf
pop
in
daa
clc
dec
jle
movsb
clc
mov
insb
ret
es
out
sub
clc
addr16
repnz
sar
clc
dec
lret
adc
add
inc
add
cld
adc
or
call
push
add
stos
xor
add
xchg
fwait
outsb
mov
pop
cmpsb
clc
adc
add
clc
into
pop
stc
es
test
out
adc
add
cmp
jno
add
test
mov
push
cmc
and
add
call
pop
in
xlat
je
add
aad
lods
cmp
add
sub
in
loop
push
lods
clc
fdivrs
clc
inc
clc
xchg
cwtl
mov
xbegin
dec
or
rolb
pop
dec
sar
add
pop
es
in
push
clc
es
loope
daa
clc
xchg
pop
mov
cmp
push
xor
and
add
add
stos
fisttpl
add
fistpll
rcr
addr16
pop
clc
popf
out
mov
add
adc
add
adc
add
add
loop
je
clc
fwait
jge
sub
add
add
mov
sar
clc
sub
clc
stos
mov
ss
sarl
add
pop
es
fiadds
imul
ss
leave
faddl
in
xchg
ss
clc
sahf
int3
push
add
inc
clc
arpl
add
add
clc
das
dec
movlhps
int3
cs
jmp
jl
lret
jmp
jb
add
daa
clc
outsb
and
adc
add
cltd
fldl2t
fcomps
add
mov
add
cmp
cmp
add
lahf
out
push
mulb
cmp
pop
rcrb
clc
shrb
in
mov
lods
cmp
adc
add
add
mov
pop
inc
clc
rolb
add
rolb
loopne
cs
fwait
push
add
mov
add
fwait
imul
clc
add
add
push
mov
sar
lea
sbb
sbb
sbb
xchg
jp
clc
mov
cmp
jnp
add
outsl
lods
std
movsl
clc
clc
xor
add
lock
xchg
loop
fst
xchg
push
add
sbb
sar
clc
xor
add
iret
xabort
add
mov
cli
sub
clc
adc
add
xbegin
push
sub
and
add
in
std
push
jno
add
inc
add
in
push
ds
nop
jns
add
xchg
ljmp
jo
add
sbb
add
es
enter
nop
repnz
add
sar
into
dec
add
es
pop
adc
sbb
add
xchg
cmp
jb
add
add
push
add
and
add
add
xor
add
push
mov
lret
mov
clc
and
add
add
xor
clc
mov
push
clc
dec
out
out
xchg
aad
mov
mov
enter
sub
cmp
adc
clc
outsb
xor
add
pop
stos
push
daa
clc
xor
add
cmp
add
insb
ret
cmp
inc
add
xor
add
pop
clc
movsb
clc
mov
hlt
loop
cmp
clc
dec
sub
or
xor
add
das
adc
add
add
in
lcall
lret
or
jbe
rcrl
rclb
add
clc
rol
clc
pop
ljmp
jns
clc
dec
leave
daa
clc
add
add
dec
sub
in
cmp
adc
add
lret
xchg
or
add
inc
add
leave
push
add
push
xchg
dec
nop
popa
add
add
add
mov
cmp
clc
aas
push
cmp
add
push
add
xabort
clc
mov
add
xlat
icebp
xchg
sbb
add
outsb
hlt
shl
clc
fs
pusha
add
std
sbb
or
jecxz
xchg
gs
ds
add
rorl
cmp
clc
arpl
add
shl
inc
add
ret
clc
loope
clc
dec
mov
cltd
jl
mov
fcompl
inc
clc
push
cmp
into
rcrb
into
mov
enter
ja
clc
cmc
jl
add
mov
outsb
sbb
add
pop
cmp
test
clc
mov
adc
clc
outsl
xchg
ret
clc
out
mov
push
sbb
icebp
icebp
popa
add
dec
lods
incl
clc
dec
or
clc
loop
aaa
rcl
mov
sti
xchg
dec
icebp
add
add
fwait
adc
sbb
mov
leave
mov
test
push
js
jmp
sbb
lods
out
sub
push
jecxz
std
pop
clc
je
daa
clc
insb
es
xlat
inc
clc
add
add
js
lret
xabort
clc
test
pop
xor
add
adc
add
into
into
ret
clc
or
out
add
add
pop
lea
test
clc
jmp
mov
and
add
pop
lret
xchg
pop
jne
add
sbb
cmp
dec
sarb
xchg
pusha
add
fwait
cmpsb
clc
fdivs
add
int
adc
add
jmp
clc
adc
aam
push
push
fisttpll
jmp
push
add
iret
scas
mov
mov
mov
shlb
add
in
fwait
pop
dec
incl
out
pop
xchg
push
clc
testb
call
pop
movsl
clc
das
ss
clc
mov
add
ret
iret
es
test
dec
jno
add
lock
cwtl
shrb
pusha
add
data16
mov
add
add
test
mov
push
add
not
xor
add
clc
xchg
mov
sub
js
xor
add
add
cmp
sar
clc
sub
je
clc
movsb
clc
jbe
hlt
inc
add
xor
add
jge
pop
pop
or
push
add
jae
add
shl
clc
pop
fdivl
cmc
cld
out
std
jmp
dec
inc
clc
sar
mov
and
add
iret
sub
jg
push
clc
sar
mov
clc
jmp
and
add
jg
add
pusha
add
out
mov
in
fnstsw
pop
jp
xchg
jne
clc
mov
cmp
jg
pop
fs
push
ret
insb
or
movsl
clc
int
sti
pop
aam
clc
lea
cmp
clc
popf
or
jno
add
xor
add
outsl
xchg
add
jl
dec
popf
nop
push
or
clc
mov
clc
mul
clc
add
add
jp
clc
imul
ret
add
or
pop
bound
add
sbb
push
call
lock
lret
ds
lret
clc
clc
and
insl
and
add
cmp
add
imul
push
rorl
imul
add
mov
cmp
add
outsl
mov
mov
test
fisttps
add
clc
movsl
clc
push
sbb
jge
add
sub
sbb
pop
jb
add
inc
clc
push
clc
clc
or
cmp
add
mov
add
fdivrl
clc
xchg
mov
dec
xchg
gs
icebp
and
add
cmp
clc
lea
sahf
cmp
add
loopne
pop
clc
push
imul
call
lods
imul
insb
pop
jmp
pop
mov
rorb
and
test
mov
xchg
jl
ret
cmp
push
adc
add
add
in
push
lret
pusha
add
das
int3
aam
clc
dec
icebp
cmp
clc
or
rcll
add
std
stos
jge
xchg
mov
dec
sub
lods
add
xchg
mov
add
fistpll
xor
add
add
icebp
pop
aam
add
out
pop
fs
or
mov
aad
add
adc
push
add
dec
push
popa
add
addr16
and
shll
add
xchg
sbb
mov
clc
mov
mov
clc
aaa
test
mov
js
clc
inc
add
jmp
add
lret
mov
call
aaa
into
mov
mov
das
inc
add
inc
add
aam
jge
add
mov
clc
bound
add
add
add
fdivrs
sub
clc
push
add
int3
jnp
add
das
jnp
clc
test
ja
gs
vmovaps
sub
add
fwait
lods
int
clc
mov
or
add
mov
sar
push
clc
inc
clc
inc
clc
and
add
add
add
lea
add
sub
clc
mov
inc
clc
inc
clc
ss
out
cmp
fisttpl
sahf
push
out
daa
clc
jbe
in
out
xchg
pusha
add
mov
outsl
cli
loop
cmp
clc
cmp
bt
jo
add
pop
fs
jb
add
jnp
sbb
add
scas
jge
add
inc
add
and
repz
je
clc
adc
add
clc
pop
clc
inc
clc
lcall
mov
add
fnstenv
add
dec
into
dec
cs
je
push
jnp
add
mov
add
add
add
and
add
lock
add
pop
repz
xor
lret
test
add
clc
lret
pop
rcrl
inc
add
xlat
pop
jnp
clc
test
out
add
mov
clc
push
test
or
add
filds
adc
add
add
dec
addr16
lret
shll
imulb
fcoms
add
je
test
push
add
mov
xchg
inc
add
adc
add
out
jns
movsb
clc
cmp
xor
add
push
add
jp
clc
clc
outsb
adc
jbe
add
mov
and
add
clc
cli
xchg
add
add
loop
pop
mov
pop
nop
mov
mov
add
jnp
clc
dec
xchg
pop
add
xchg
pop
stos
add
add
cwtl
xchg
inc
clc
test
mov
inc
add
fists
loop
jle
add
inc
add
loope
mov
mov
add
xor
add
push
sar
or
in
jnp
lock
cmp
test
pop
clc
jp
cwtl
fiaddl
add
enter
add
push
add
stos
ss
xchg
pop
pop
cmp
add
in
inc
add
stos
xor
add
jle
add
or
es
or
mov
dec
movsl
clc
enter
iret
mov
add
and
add
clc
fistps
sub
pop
dec
or
cmp
push
mov
aam
cmp
push
xchg
cmp
adc
add
clc
cmp
clc
dec
mov
add
and
add
aaa
scas
out
cmp
sub
inc
add
int3
xchg
or
clc
cmp
sbb
cmp
clc
push
icebp
rolb
cmp
clc
fadds
add
int
clc
lea
add
xchg
pop
pop
shr
sub
add
dec
jp
push
insl
rclb
clc
into
push
pop
and
clc
cmp
nop
shl
clc
pop
stos
jb
add
fwait
push
and
add
add
rolb
mov
dec
xor
add
mov
jl
mov
add
aam
xchg
or
aad
out
inc
add
mov
cmpsl
clc
out
or
push
arpl
add
unpcklps
js
clc
sub
and
add
clc
mov
cmpsb
clc
mov
mov
add
int
add
std
imul
push
add
enter
jb
add
add
jo
add
xor
add
arpl
add
xbegin
clc
push
fwait
add
add
sub
xchg
fs
stos
inc
add
inc
add
and
add
ret
arpl
add
sar
clc
mov
jge
je
clc
pop
clc
cs
mov
xor
add
outsl
addr16
sar
clc
xor
add
clc
add
add
add
add
movsl
clc
cmpsl
clc
adc
add
and
add
lods
insl
mov
mov
int3
mov
add
outsl
mov
add
cwtl
pop
add
jecxz
xchg
addr16
cli
imul
sub
add
push
dec
cli
and
jns
scas
sbb
cmp
lea
mov
add
mov
or
clc
repz
cmp
stos
insb
fdivrp
imul
or
add
in
clc
out
fstps
pop
mov
add
jle
clc
and
add
xor
clc
cmc
insb
pop
mov
jb
add
jns
test
into
stc
cmp
clc
push
cmp
sarl
clc
xchg
in
cmp
clc
inc
clc
jmp
add
dec
cmp
jnp
mov
dec
adc
add
jg
clc
pop
clc
adc
inc
clc
dec
mov
clc
cwtl
cmp
pop
lods
fisubs
add
xchg
fistpl
cld
das
iret
mov
test
or
inc
clc
jge
and
add
pop
scas
jne
clc
jmp
pop
fldenv
add
clc
mov
sahf
iret
testl
jb
add
clc
sar
in
inc
add
sbb
jmp
inc
add
inc
add
clc
pop
pop
jecxz
mov
clc
mov
aas
cmpsb
clc
fimull
scas
cmp
add
add
add
and
add
scas
stos
out
aaa
or
add
clc
xor
add
pop
fdivs
add
add
inc
clc
lahf
add
add
clc
or
clc
pusha
add
aas
jb
add
inc
add
out
cmp
add
add
add
dec
sbb
mov
inc
add
add
cmc
notb
add
pop
pop
sbb
xchg
jb
add
add
lods
mov
ds
loopne
pop
addr16
xor
add
mov
cmp
clc
pop
lods
sbb
add
sbb
or
add
and
add
call
pop
fnsave
lcall
repnz
push
adc
add
add
push
xchg
js
add
daa
clc
jmp
add
and
xchg
cld
pop
pop
clc
cli
inc
clc
or
pop
outsl
or
mov
pop
jne
add
out
pop
cmp
clc
mov
mov
xabort
add
leave
sahf
fld
clc
ljmp
add
xlat
rorl
or
add
pushf
clc
xchg
push
mov
xor
inc
clc
icebp
xor
add
push
push
dec
rolb
je
mov
clc
sbb
and
add
stos
cmp
clc
add
add
clc
push
clc
int
clc
inc
add
and
add
fidivl
add
daa
clc
xor
add
or
clc
dec
cli
dec
jl
sar
sar
scas
in
push
jnp
add
push
jb
add
clc
sub
add
cltd
push
movsb
clc
int3
mov
cmpsb
clc
cmp
mov
adc
add
movsb
clc
icebp
out
movsb
clc
iret
jle
add
xlat
repz
push
add
cmp
and
add
push
add
fildl
add
or
clc
movsb
clc
mov
imul
xlat
mov
into
add
jns
cwtl
jno
add
lahf
stc
bound
add
add
call
add
add
movsl
clc
int
int
imul
cmp
clc
dec
in
jp
add
xchg
mov
clc
nop
in
out
adc
add
clc
aas
xor
add
jno
add
in
in
lods
lods
jae
add
jbe
dec
rcll
pop
push
fmulp
dec
ficomps
dec
xchg
incl
stos
dec
pop
xlat
mov
dec
cmp
push
mov
clc
jg
pop
add
add
idivl
arpl
add
add
out
pusha
add
cmp
or
mov
add
cli
in
xor
xor
add
ss
mov
repnz
sar
add
xchg
xchg
std
addr16
cmp
aam
rolb
es
lods
add
test
mov
insl
jb
add
push
add
and
add
jge
sbb
cmp
lret
add
jbe
bound
add
xor
push
mov
sti
jno
add
add
push
and
call
sarb
mov
clc
adc
add
add
add
sbb
cmpsb
clc
mov
xchg
push
add
inc
add
out
fdivrs
or
clc
stos
xchg
jg
cmp
cmpsl
clc
shll
add
add
ss
clc
jecxz
out
iret
add
add
push
hlt
pop
pop
or
clc
aam
mov
daa
clc
jne
clc
out
xor
add
data16
pop
push
sbb
jns
clc
sar
nop
or
clc
in
test
add
add
dec
mov
add
and
add
jle
dec
push
shlb
add
and
fmull
cmc
gs
cmp
pop
sub
add
add
add
push
add
xabort
mov
clc
dec
xor
xor
add
adc
add
xchg
cmp
clc
rep
insb
xchg
sbb
xchg
ss
jecxz
bound
add
out
lods
xor
add
mov
in
dec
xabort
clc
mov
clc
movsb
clc
add
add
fistl
push
repz
or
clc
fbld
clc
int3
fsubrl
clc
push
enter
mull
add
mov
mov
xchg
mov
cmp
clc
popf
adc
add
mov
cmp
pop
cli
inc
add
and
add
jp
add
cld
or
add
cltd
or
pusha
add
outsl
inc
add
stc
jb
add
pop
mov
add
add
pop
in
push
jecxz
adc
and
push
sarl
inc
clc
push
arpl
add
inc
add
push
aam
pop
clc
ljmp
sar
lods
scas
mov
popf
xchg
xor
add
das
jg
jecxz
mov
cmpsl
clc
and
add
das
mov
clc
adc
add
push
inc
clc
movsb
clc
jmp
clc
fdivrl
clc
pusha
add
loop
jnp
sbb
add
sub
inc
clc
fimuls
clc
mov
lods
add
clc
or
loope
testl
shl
cmp
clc
and
add
add
lock
clc
fcmovb
clc
mov
int3
in
ja
clc
stc
add
add
cli
out
cmp
add
and
pop
fwait
jo
add
sub
jge
clc
and
add
jo
add
clc
arpl
add
mov
add
cmpsb
clc
iret
add
pop
mov
mov
clc
inc
clc
mov
iret
iret
fbld
clc
dec
sub
int3
adc
mov
clc
cmp
add
sub
ret
mov
and
add
clc
mov
push
cmpsb
clc
ds
clc
mov
mov
pop
out
mov
cwtl
xor
add
xor
add
add
sti
mov
test
ds
add
clc
add
add
clc
rdtsc
add
pop
xor
test
add
dec
mov
xor
add
scas
cmp
clc
jecxz
push
sub
cmp
inc
add
in
xor
add
clc
and
add
sub
add
add
stc
jg
lret
cmp
clc
mov
cmp
pop
arpl
add
clc
xor
add
pop
xchg
clc
icebp
pop
cmp
popa
add
sti
xlat
xor
add
push
add
sahf
mov
clc
cmp
clc
mov
jne
jno
add
sbb
adc
add
rorb
clc
mov
add
aam
jg
push
add
rorb
in
mov
imul
xchg
mov
cmpxchg
jmp
mov
add
test
int3
or
add
and
add
dec
mov
int
clc
mov
clc
pop
bnd
clc
lret
in
pop
xchg
mov
movsl
clc
xor
add
sbb
pop
mov
es
jbe
mov
cmp
into
mov
clc
fsubp
clc
inc
clc
mov
add
pop
push
add
fildl
clc
icebp
imul
cwtl
dec
mov
jb
add
add
adc
je
je
push
clc
mov
add
mov
clc
scas
mov
xchg
push
sbb
leave
inc
add
lret
add
and
add
add
add
sar
adc
adc
add
addr16
cmp
add
enter
or
jmp
clc
xor
xor
add
jmp
aas
jb
add
inc
clc
cmp
xchg
push
sub
clc
pop
clc
and
add
pop
mov
test
mov
jge
sbb
out
mov
add
into
xchg
sar
fs
push
test
clc
imul
dec
fiadds
add
aas
outsb
jns,pt
ljmp
mov
flds
add
dec
jns
into
push
clc
scas
xchg
bound
add
cld
out
xbegin
dec
and
add
clc
bound
add
in
mov
cli
fsub
clc
jl
ljmp
mov
adc
shr
hlt
aaa
xchg
inc
clc
push
xbegin
cmp
nop
mov
jns
lea
mov
or
clc
test
dec
fldl2t
ss
lods
je
push
jecxz
repnz
clc
jmp
clc
aaa
ja
push
mov
mov
add
mov
ds
xor
add
clc
pop
xor
add
add
jb
add
mov
mov
adc
fisubrs
or
cli
sub
sub
clc
mov
clc
mov
sub
sub
jmp
mov
dec
in
add
and
add
clc
sti
sbb
add
movsl
clc
xchg
adc
add
lods
lods
and
add
mov
add
lcall
lea
mov
enter
ret
clc
or
nop
cmc
xbegin
pop
or
mov
jecxz
inc
add
adc
jne
pop
clc
mov
add
inc
clc
push
xchg
mov
adc
add
fucomp
jno
add
adc
add
sar
adc
add
fists
add
xbegin
add
and
add
clc
popl
add
out
clc
dec
jge
and
cld
cmp
lcall
clc
and
add
push
clc
sbb
jno
add
add
xchg
ss
push
add
cmp
add
sub
lods
mov
adc
mov
out
clc
pop
clc
cmp
cmp
push
mul
clc
leave
adc
add
movsl
clc
or
push
xor
add
jg
ljmp
pop
mov
fidivl
add
loope
mov
cltd
lcall
cli
mov
add
sub
scas
das
sbb
clc
mov
cli
xor
add
add
pop
adc
ficompl
jo
add
out
sti
xchg
outsb
repnz
adc
add
xchg
mov
adc
add
and
add
mov
xlat
add
addr16
push
jno
add
or
push
xchg
lods
sub
nop
int
xchg
aas
dec
adc
add
fdivrl
push
or
add
nop
jp
hlt
fbld
add
mov
dec
cltd
data16
add
add
inc
clc
ret
clc
rcll
add
nop
xchg
sarb
jge
clc
adc
add
xbegin
or
adc
add
adc
add
jl
pop
clc
or
scas
or
clc
loope
xchg
outsb
lret
imul
sbb
add
mov
add
popf
xchg
push
jp
clc
fs
sub
add
dec
cmp
add
arpl
add
add
adc
add
add
clc
jbe
sub
sbb
mov
mul
clc
and
add
fcoms
lahf
pop
out
stos
xchg
mov
add
and
xor
add
je
clc
xor
clc
insl
stos
shrl
sub
add
push
mov
push
pop
cmpsl
clc
xchg
xchg
cltd
pop
jo
add
daa
clc
fsqrt
add
add
or
inc
clc
add
push
dec
inc
clc
mov
stos
notl
sbb
add
nop
ret
clc
loope
xbegin
clc
xchg
adc
sar
mov
and
mov
dec
in
mov
popa
add
xchg
popf
aas
shlb
cmpsb
clc
daa
clc
pop
jg
out
aas
jno
add
aaa
mov
stc
or
add
add
cmp
outsl
mov
fstpt
insb
clc
sub
pop
iret
or
ficoml
add
and
add
xchg
xabort
test
or
mov
add
add
mul
clc
enter
mov
jmp
lret
repnz
push
mov
sbb
add
adc
add
clc
decb
in
xchg
out
fwait
and
add
clc
cmp
mov
mov
mov
and
add
clc
cmp
repnz
clc
pop
mov
clc
cmp
jmp
mov
inc
clc
sar
clc
cli
and
add
clc
jnp
clc
movsb
clc
pop
data16
iret
mov
clc
imul
pop
or
js
or
jecxz
xchg
mov
xchg
je
lahf
das
cmp
add
test
mov
out
clc
aam
add
jmp
clc
push
add
add
add
ficompl
push
imul
clc
pop
lret
add
loope
inc
add
repz
xchg
add
add
add
mov
clc
mov
pop
cltd
pop
fsubl
and
add
insb
and
add
mov
je
and
add
mov
cmc
icebp
movsb
clc
test
pop
jno
add
adc
add
xor
add
add
clc
mov
clc
ja,pt
xor
ss
add
int3
dec
mov
aas
cmp
test
clc
and
add
add
fstpt
addr16
or
clc
pop
rolb
add
mov
mov
clc
mov
dec
xor
add
add
popa
add
hlt
iret
popf
or
dec
outsb
lods
jbe
sbb
xor
add
shrb
mov
clc
sarl
clc
in
or
xchg
cmp
ret
enter
mov
jecxz
push
add
std
adc
adc
pop
mov
adc
add
clc
out
in
insb
test
jo
add
sahf
stos
or
add
out
ss
xchg
imul
xor
add
cwtl
jae
add
inc
clc
xchg
lock
enter
pop
xabort
add
outsl
inc
add
jmp
movsl
clc
or
fs
jp
stos
enter
add
js
clc
cmpsb
clc
popa
add
fwait
adc
add
clc
nop
pusha
add
and
add
inc
add
fsubs
add
popa
add
pop
hlt
aam
pop
mov
add
add
fs
loopne
cmp
fs
cmpsb
clc
mov
clc
pusha
add
mov
add
clc
repnz
jge
add
insb
pop
clc
loopne
shr
dec
sar
and
add
test
fwait
inc
add
hlt
fnsave
icebp
out
lret
add
clc
fistpll
dec
inc
clc
push
add
sub
aaa
cmp
clc
sbb
add
loope
test
add
pop
in
mov
or
xlat
or
add
pop
cmc
data16
cli
push
jae
add
add
in
push
aam
clc
xchg
pop
lods
out
xchg
lock
push
stos
add
xor
add
cmp
dec
ljmp
dec
lret
mov
out
xabort
clc
push
push
mov
clc
sti
int
mov
inc
clc
cmp
mov
clc
push
xor
add
clc
dec
xchg
xor
add
add
add
popf
add
add
add
call
shlb
add
pop
movsl
clc
aas
mov
mov
pusha
add
cmpsb
clc
shlb
cmp
add
aad
adc
add
add
cmc
dec
inc
clc
fiaddl
and
sar
add
jb
add
clc
cmp
fwait
cmp
adc
add
add
ficoml
add
add
imul
clc
inc
clc
cwtl
cltd
out
inc
add
mov
and
clc
cmp
iret
push
mov
add
add
hlt
sub
add
mov
out
jb
add
add
or
add
add
test
add
pop
clc
lods
add
add
clc
stos
pop
clc
cmp
cmpsl
clc
hlt
jae
add
fcomps
mov
clc
not
jg
clc
lret
dec
mov
or
xchg
sar
clc
scas
mov
inc
clc
and
add
add
pop
jne
insl
aaa
adc
add
dec
cmp
add
mov
loop
ret
iret
sub
fsubl
add
int3
xor
sub
sar
mov
add
pushf
adc
add
bound
add
clc
leave
push
add
sar
bound
add
clc
sub
push
popf
cwtl
or
clc
and
add
lods
mov
add
add
data16
xor
xchg
out
add
add
fmuls
cmp
stos
jmp
pop
push
add
pop
movsl
clc
rcll
clc
sbb
sub
pushf
add
std
and
add
clc
xchg
mov
xchg
cltd
movsb
clc
lock
add
sub
clc
pop
jnp
jle
cmpsl
clc
sbb
clc
lods
cli
decl
std
movsb
clc
clc
push
clc
in
xor
add
jle
add
sbb
in
icebp
clc
test
and
add
pop
out
inc
add
stos
jge
cmp
add
ds
stos
add
aad
inc
add
lock
stc
xbegin
add
mov
and
add
add
or
add
add
clc
adc
clc
mov
in
sahf
out
aaa
jmp
clc
dec
add
add
xor
add
or
stc
jo
add
xchg
imul
lahf
jmp
clc
lahf
add
add
adc
clc
lahf
mov
fcoml
add
push
mov
add
clc
mov
out
push
jae
add
add
sub
clc
sbb
pushf
cltd
dec
clc
sub
cltd
cmp
clc
mov
add
and
add
add
jae
add
je
in
or
clc
movsl
clc
scas
aam
mov
pop
pushf
ja
iret
cmp
add
cmp
or
xlat
add
inc
clc
push
dec
adc
add
clc
in
pop
clc
insl
inc
clc
sub
clc
test
sub
xchg
dec
out
mov
add
jbe
add
sar
inc
clc
cmp
add
push
push
sub
mov
loop
repz
mov
lods
xor
arpl
add
gs
add
add
clc
cs
dec
loopne
and
add
jmp
add
pop
sbb
in
sti
pop
clc
enter
inc
add
sub
add
mov
ljmp
clc
sbb
loope
bound
add
mov
add
test
dec
jl
push
data16
cmp
es
clc
cmp
add
arpl
add
xor
add
push
inc
add
jl
xabort
nop
arpl
add
add
cmp
cmp
add
mov
add
pop
mov
fldenv
add
cmp
add
inc
add
xor
daa
clc
call
clc
ss
daa
clc
or
sub
out
int3
idivl
add
sar
add
js
outsb
out
leave
dec
ret
pop
cltd
pop
cld
mov
mov
clc
ror
dec
cmpsb
clc
add
mov
nop
inc
clc
mov
add
mov
push
add
jl
jmp
pop
in
cmp
popa
add
loopne
cmpsb
clc
and
dec
test
sub
mov
clc
out
sbb
adc
add
add
mov
scas
scas
mov
clc
and
add
mov
pop
clc
lret
add
push
xchg
jo
add
test
push
loopne
xchg
jle
push
cld
loop
mov
xchg
ja
clc
adc
add
add
jl
clc
fs
jb
add
and
add
or
push
add
and
mov
cli
push
add
pop
pop
pxor
std
aas
dec
mov
clc
lcall
add
adc
add
add
jle
pop
sar
jle
xchg
mov
clc
cmp
clc
clc
dec
pop
shlb
add
icebp
push
add
inc
add
cmp
test
jle
fs
mov
sar
mov
clc
inc
clc
push
sbb
clc
mov
add
inc
add
mov
add
cmpsb
clc
movsb
clc
adc
add
pop
cli
cmp
add
add
iret
add
add
add
sub
mov
sar
jno
add
mov
mov
es
adc
mov
cmpsb
clc
lods
add
add
in
test
ficomps
clc
inc
add
mov
add
inc
clc
loop
xor
add
xchg
repz
fs
pop
xor
add
in
cwtl
ds
lods
pop
clc
push
jnp
sbb
add
cmp
clc
pop
bound
add
ret
clc
incl
clc
scas
daa
clc
js
add
add
xbegin
add
popf
add
add
and
add
icebp
sbb
adc
jb
add
add
pushf
cmp
cmpsb
clc
cmp
add
mov
mov
pop
push
dec
push
mov
add
ljmp
cmpsl
clc
fistpll
clc
stc
lret
add
sbb
add
xchg
dec
fs
fisubl
add
add
mov
clc
add
add
jmp
clc
popf
xor
lcall
push
add
xchg
adc
add
clc
clc
sar
sar
add
aad
clc
incl
mov
add
loopne
mov
add
sahf
xchg
rcll
or
inc
clc
stos
test
inc
clc
pop
xor
add
xchg
push
invd
test
dec
clc
push
sbb
clc
jbe
clc
pop
pop
scas
popa
add
inc
clc
dec
aaa
or
clc
bound
add
add
xchg
stos
xor
add
mov
add
clc
rcrl
shrl
mov
add
popa
add
hlt
push
stc
mov
jp
clc
adc
pop
pop
dec
in
aam
fisubl
add
dec
pop
mov
add
add
add
adc
add
ja
call
sbb
clc
mov
das
not
cmpsb
clc
or
arpl
add
pop
jns
clc
add
add
add
mov
cmpsl
clc
ljmp
xchg
jne
sub
add
vunpckhps
jl
and
add
clc
pop
jge
cmp
clc
push
add
sub
popa
add
insb
lods
in
dec
mov
add
adc
sti
int
clc
cmpsl
clc
je
add
mov
push
add
sub
pop
xbegin
add
jp
clc
sub
sbb
xchg
movsb
clc
clc
incb
add
jo
add
in
bound
add
inc
add
add
add
add
lret
sub
add
xlat
sub
add
inc
add
clc
xchg
mov
xor
add
add
pop
ret
clc
jmp
clc
mov
dec
int3
fs
sahf
out
pop
push
add
fbstp
dec
fmuls
jg
clc
test
incb
cwtl
shr
pop
out
sti
pushf
push
stc
mov
or
aaa
test
lods
sbb
add
mov
add
pop
cmp
stos
rol
clc
push
add
scas
iret
push
xabort
add
or
add
lods
jns
xor
add
jmp
cmpsb
clc
mov
lods
es
cmp
cltd
fisubs
jno
add
add
add
adc
add
xor
add
mov
imul
add
clc
mov
add
adc
add
cmpsl
clc
adc
add
add
repz
sub
clc
in
cmp
dec
adc
add
fbstp
add
nop
arpl
add
pop
jp
fsubrl
clc
icebp
out
out
add
ds
ret
add
in
ret
clc
push
add
sar
add
dec
iret
popf
arpl
add
jo
add
add
loopne
loop
ret
cmpsb
clc
int
clc
or
and
add
add
jmp
pop
flds
add
flds
add
mov
sub
add
mov
add
dec
popa
add
xchg
add
add
xabort
clc
mov
clc
sbb
sub
cmpsl
clc
in
jo
add
clc
xchg
fs
sbb
fxch
popl
xor
add
cli
outsb
add
xchg
cmp
cmp
cmp
mov
clc
imul
add
mov
out
das
adc
add
add
sti
mov
add
jle
mov
clc
xor
add
add
cmc
aad
cmpsl
clc
hlt
adc
add
pop
mov
in
and
add
add
add
sbb
mov
xchg
sub
jo
add
out
in
or
daa
clc
sub
clc
gs
xchg
cmpsl
clc
push
clc
and
add
clc
ds
clc
mov
clc
push
add
push
rclb
add
inc
add
add
inc
clc
jbe
add
or
add
push
xchg
fiaddl
into
loopne
int
jmp
outsl
es
xabort
lahf
rcr
sub
push
mov
add
xchg
pop
pop
sub
add
clc
test
jp
clc
push
clc
insl
mov
cmc
popl
add
cmp
clc
iret
jge
push
add
dec
mov
insl
popf
or
clc
div
xchg
push
add
pop
clc
testb
clc
xlat
pop
fpatan
push
add
inc
add
pushf
dec
sti
je
adc
pushf
and
add
mov
clc
testl
cmp
add
jb
add
clc
pop
jo
add
js
clc
notl
add
add
call
clc
mov
clc
ja
xchg
rorl
iret
scas
leave
jns
or
cmp
sub
mov
int3
add
add
cli
test
sbb
clc
dec
leave
lods
hlt
and
cmp
dec
jmp
xlat
add
add
stc
cmp
add
add
lods
cli
or
add
jnp
sar
frstor
add
dec
lahf
sub
int3
cmp
add
mov
clc
in
mov
xchg
ljmp
sub
jge
je
rol
clc
push
inc
add
pop
mov
inc
add
outsb
sbb
mov
push
mov
xor
mov
clc
sahf
int
cmp
pop
clc
sbb
mov
add
hlt
push
add
fs
inc
clc
addr16
or
xabort
data16
test
jge
clc
adc
add
clc
xor
add
adc
add
shrl
jb
add
mov
cwtl
cmp
adc
add
stos
push
loop
jae
add
stos
hlt
xor
add
add
clc
pop
clc
hlt
mov
add
sbb
add
add
sub
mov
cmpsl
clc
dec
pushf
mov
pavgb
daa
clc
sti
pop
clc
sbb
inc
clc
add
add
add
lret
call
jecxz
leave
dec
shrb
cmp
clc
mov
push
fists
add
fcomp
mov
dec
push
lcall
mov
add
or
and
jge
loopne
mov
or
add
jp
decb
add
push
add
or
aaa
loop
sub
sbb
fbld
ret
clc
cmp
cmp
xchg
iret
or
add
mov
add
add
test
inc
clc
adc
add
inc
add
adc
clc
push
inc
add
jbe
push
rorl
dec
in
and
add
clc
inc
add
cmpsb
clc
and
add
add
iret
fisttps
push
add
enter
add
push
pop
out
not
mov
lea
add
push
add
pop
clc
push
clc
stos
mov
or
ror
in
or
pop
xchg
mov
sbb
add
pushl
add
clc
pop
cmp
enter
push
jmp
daa
clc
aad
and
add
cmp
clc
iret
sub
add
addr16
cs
fisubrs
push
add
push
fdivrs
out
loop
in
in
in
out
insl
clc
scas
test
cltd
push
add
xor
shll
and
add
fcompl
add
lea
add
add
mov
add
mov
xor
dec
cmpsb
clc
mov
mov
add
test
sub
and
add
pusha
add
push
fcoms
add
ret
adc
add
addr16
jl
insl
sub
out
ljmp
dec
xabort
outsb
cli
mov
lock
add
xor
jbe
pop
f2xm1
iret
cld
xchg
sar
or
mov
divb
add
pop
mov
add
pushf
jne
add
inc
clc
inc
clc
inc
add
arpl
add
loop
jne
fistpl
jbe
inc
clc
cli
popa
add
xchg
in
stos
dec
pop
pop
or
jns
mov
add
clc
push
mov
push
pop
pushf
xchg
pop
test
clc
vandps
sarb
mov
clc
xchg
sub
or
ja
in
mov
addr16
cmpsl
clc
sub
inc
add
inc
add
std
test
aad
loop
dec
and
out
dec
mov
fwait
pop
sub
cwtl
in
in
pop
clc
aas
xchg
sarb
push
mov
clc
je
clc
popa
add
cmp
nop
test
adc
add
clc
or
add
pop
aas
jae
add
add
aam
sub
loopne
addr16
cmpsb
clc
pop
test
xchg
or
clc
in
stos
xor
add
add
jne
clc
push
add
dec
data16
test
loopne
cmp
add
add
clc
out
pusha
add
mov
clc
test
in
inc
add
out
cmp
add
in
mov
clc
push
add
lods
sar
clc
add
add
mov
clc
insl
loop
dec
push
add
add
pushf
mov
in
mov
xor
add
sbb
dec
bound
add
dec
loope
mov
pop
sbb
adc
sar
push
add
sub
cmp
push
add
xchg
xlat
inc
clc
lcall
mov
inc
add
loopne
arpl
add
push
cmp
sarb
pop
sarl
sbb
test
xchg
in
out
lret
outsl
popf
arpl
add
add
add
add
jno
add
add
mov
add
push
add
aad
test
out
push
add
jecxz
and
add
in
sub
push
clc
mov
xchg
mov
sub
scas
cs
add
mov
clc
addr16
lods
cmp
clc
mov
ds
add
add
dec
aam
inc
add
sbb
shrb
clc
loop
mov
ret
clc
rcrl
add
push
add
push
add
mov
clc
jnp
icebp
fsts
mov
data16
inc
clc
or
add
mov
clc
cmp
sahf
cmp
jo
add
scas
inc
clc
in
dec
arpl
add
add
push
data16
push
add
loope
clc
sub
lret
lcall
lret
sub
sub
clc
mov
push
xchg
pop
popf
xor
add
clc
pop
pop
pop
scas
fs
in
xabort
imul
fmul
ja
cli
adc
add
add
popa
add
and
push
mov
xlat
cwtl
dec
and
add
dec
stc
xor
add
or
push
add
or
adc
add
clc
add
add
sbb
clc
push
clc
inc
clc
mov
test
ficompl
clc
xor
add
add
int
int3
leave
sar
imul
int3
mov
js
mov
ja
add
pop
mov
push
add
lods
sti
pop
pop
mov
add
add
jl
insl
ret
imul
nop
and
add
add
cmp
clc
data16
adc
add
gs
add
add
je
add
xchg
outsl
xchg
or
add
test
mov
clc
clc
aas
jnp
add
out
xchg
sti
dec
test
arpl
add
clc
int
fcoms
clc
pop
sar
shl
clc
lods
adc
add
jle
fs
out
out
imul
das
xchg
loope
mov
clc
sbb
and
add
je
push
add
vshufps
jl
mov
jecxz
popa
add
jno
add
clc
mov
clc
fwait
call
xabort
jmp
lods
std
lods
lret
pop
fisttpl
mov
test
inc
clc
sar
add
add
add
aam
test
in
and
add
add
inc
add
sbb
xabort
sbb
lea
add
sar
jne
push
add
into
lods
out
aaa
mov
mov
add
clc
add
add
add
sub
add
adc
add
add
mov
clc
sar
inc
clc
movsl
clc
into
dec
add
test
mov
clc
js
cmp
add
or
nop
or
clc
scas
enter
push
aam
test
jp
in
pop
inc
clc
xchg
insb
pop
icebp
lods
pop
push
cli
cmp
sub
fbstp
add
jmp
inc
add
outsl
sbb
add
int
fildl
cli
cs
fwait
inc
add
ds
add
mov
add
clc
mov
mov
cli
leave
push
mov
mov
add
sbb
dec
or
add
sub
mov
fsubs
add
xor
add
idivl
push
in
inc
add
lret
mov
sbb
add
mov
jmp
sub
add
mov
clc
push
cmpsl
clc
cli
mov
fdivrs
mov
add
adc
add
cmp
add
clc
inc
add
pushf
mov
add
inc
clc
out
mov
nop
dec
and
fidivrl
jmp
clc
add
add
sbb
leave
mov
mov
add
jae
add
clc
jge
clc
cwtl
pop
inc
clc
jle
add
es
add
add
add
mov
clc
out
sbb
add
test
jle
clc
xchg
and
add
add
fdivrl
add
push
push
jecxz
push
add
lods
shrl
in
sar
mov
es
sub
pop
mov
and
xor
add
clc
movsb
clc
sub
repnz
loopne
in
movsl
clc
addr16
push
add
adc
add
test
sti
xchg
xchg
ja
add
sub
add
clc
iret
imul
add
cmp
cmpsl
clc
pop
mov
ja
clc
mov
add
stos
adc
clc
dec
jmp
add
arpl
add
add
add
inc
add
adc
add
xchg
scas
scas
xchg
push
add
xchg
dec
rorb
mov
cli
imul
add
add
mov
rol
clc
push
push
lods
shll
add
add
or
clc
cmp
clc
xor
add
lret
std
jl
sub
and
add
cmp
in
ja
clc
mov
mov
add
mov
mov
add
sbb
clc
and
xchg
movsl
clc
push
cmpsl
clc
das
fistps
push
clc
add
dec
lgs
cmp
shr
push
cmp
clc
repz
add
add
nop
adc
add
add
cmpsb
clc
outsb
cltd
in
mov
push
insb
mov
mov
clc
ss
leave
inc
add
cmp
add
test
sub
push
mov
xabort
clc
lods
jae
add
popa
add
in
or
add
fsub
clc
loopne
add
add
cld
inc
clc
push
sub
sbb
pop
mov
pop
add
pop
sar
scas
imul
ret
clc
push
add
lods
xchg
and
add
sbb
repz
aas
sar
mov
push
add
in
sub
cmp
clc
test
sbb
clc
cmp
sar
sahf
fwait
imul
sbb
adc
ror
dec
outsl
dec
sub
int
dec
mov
add
inc
clc
pop
test
add
sbb
clc
cld
pop
leave
push
clc
mov
add
sahf
xor
sar
hlt
fsubr
movsb
clc
sar
aam
cld
jg
clc
mov
clc
push
add
daa
clc
ja
mov
clc
push
add
add
add
cs
sar
ljmp
clc
clc
push
cmp
clc
testb
clc
and
aas
aas
or
mov
int3
cmp
clc
lcall
add
pusha
add
sbb
add
loope
sahf
pop
fists
add
add
adc
add
jae
add
clc
sar
mov
clc
inc
add
pop
mov
add
stos
xchg
clc
add
pop
jge
add
sub
add
outsl
cmp
repz
add
cs
fcompl
clc
mov
sbb
adc
loop
bound
add
movsl
clc
nop
xor
ds
add
mov
clc
into
cmpsl
clc
cmp
sub
mov
popa
add
sbb
lret
cmpsb
clc
mov
sbb
or
xor
add
add
test
addr16
into
cmc
push
clc
cmc
ss
lret
mov
arpl
add
add
loope
push
test
imul
shrl
adc
add
cmp
in
sbb
inc
clc
cmp
and
add
add
add
dec
insb
lahf
out
test
push
add
ffreep
clc
adc
add
xabort
push
push
xbegin
mov
out
inc
clc
clc
mov
mov
lock
pop
cmp
push
clc
data16
dec
leave
das
mov
xlat
mov
nop
fsub
clc
and
add
add
jecxz
aas
dec
jl
clc
cmp
push
mov
pop
xor
jp
jno
add
clc
sbb
add
dec
enter
push
add
and
add
test
mov
push
cmp
xchg
ret
clc
out
out
sahf
cmp
add
push
add
inc
add
pop
sahf
repz
outsl
or
xor
mov
jp
test
mov
xor
lcall
stos
cltd
movaps
add
add
test
add
add
add
mov
add
out
or
lret
pop
jge
pop
in
cmp
cmpsl
clc
push
clc
test
clc
xchg
push
clc
dec
mov
or
inc
clc
fstps
mov
and
add
sarl
pusha
add
mov
and
dec
pop
jg
clc
cmpsl
clc
int
jnp
add
xchg
cmpsb
clc
call
addr16
xchg
jle
add
pop
lods
sar
add
xabort
clc
dec
lock
clc
ljmp
clc
loop
push
out
pop
mov
add
add
imul
add
repz
fstps
adc
add
add
popf
or
add
int3
jnp
clc
mov
pop
clc
pop
or
xlat
or
add
adc
add
loopne
sub
fisubs
add
add
push
mov
cmp
push
add
cltd
loop
and
add
add
adc
scas
cltd
push
sbb
add
fmuls
inc
clc
xchg
mov
lcall
push
mov
clc
fdivs
jmp
sub
add
cmp
loopne
je
test
fdivrs
adc
add
imul
add
inc
clc
clc
gs
xchg
mov
xor
add
push
sub
ficomps
add
add
fstp
cld
sahf
add
data16
movsl
clc
icebp
inc
add
rep
mov
xor
add
add
pop
or
test
mov
pop
cltd
pop
sar
clc
xbegin
mov
sar
add
outsl
cmp
push
add
out
push
mov
add
cmp
add
inc
clc
jp
arpl
add
push
add
das
adc
clc
jb
add
shl
stos
out
insl
mov
mov
test
leave
das
sha1nexte
clc
cmp
add
push
add
push
pop
mov
pop
outsl
mov
adc
add
repz
inc
clc
addr16
sub
add
sarb
inc
clc
cmp
sar
popa
add
lock
push
jne
clc
es
int
inc
add
jl
sbb
aad
gs
adc
add
add
xor
add
clc
adc
mov
or
adc
add
xchg
in
mov
sbb
ret
and
inc
clc
lods
pop
clc
aad
pusha
add
inc
clc
xor
add
jo
add
add
add
stos
push
lahf
ja
clc
push
inc
clc
pop
clc
xbegin
jp
add
mov
adc
clc
xor
add
add
inc
add
fildll
insb
mov
clc
sahf
movsb
clc
scas
mov
clc
fs
xchg
stc
cli
pmullw
jb
add
mov
and
add
or
ja
clc
pusha
add
fistps
fstpt
clc
scas
xchg
repz
lock
clc
and
add
shr
add
add
add
add
mov
mov
imul
clc
cmpsl
clc
call
xor
add
clc
sbb
add
add
shrb
loope
sti
cmpsb
clc
cmpsl
clc
cmp
sar
add
std
dec
sub
icebp
push
clc
cmp
out
xlat
mov
nop
inc
add
mov
fs
cmp
mov
add
add
test
dec
mov
int
imul
add
clc
and
outsb
jbe
add
je
add
data16
lods
icebp
cmp
pop
mov
mov
inc
clc
push
add
xchg
mov
je
add
sar
pop
sub
rol
clc
push
add
lock
mov
add
pop
sahf
imull
clc
dec
imul
cmp
clc
sub
sarb
movsl
clc
dec
imul
mov
clc
add
sti
cmp
aad
add
gs
fcomps
gs
inc
clc
sbb
test
adc
add
sarl
add
add
int3
fdivl
jae
add
clc
jmp
add
jne
push
aad
mov
fistpll
cld
in
xchg
out
add
add
imul
push
jg
xchg
xchg
push
xchg
in
lret
fs
lea
jle
cmp
add
cltd
and
movsl
clc
mov
ljmp
push
xchg
stc
jmp
lret
or
clc
clc
out
stos
addr16
push
clc
stc
scas
push
add
or
scas
mov
cmp
add
push
add
sbb
inc
add
scas
cltd
hlt
cmp
loope
sub
clc
push
add
data16
xor
clc
int
gs
and
aaa
or
add
clc
popf
cmp
sarb
in
outsb
adc
add
xchg
xor
add
xchg
lods
arpl
add
or
add
push
add
addr16
xabort
inc
clc
lods
data16
shlb
loopne
and
add
mov
jg
xchg
das
in
clc
dec
sbb
clc
into
dec
aaa
cmp
add
scas
bndldx
loope
xbegin
pop
cmp
add
mov
clc
mov
mov
insb
jg
out
mov
mov
and
clc
pop
xor
add
out
test
in
xlat
inc
add
data16
sahf
loop
mov
push
icebp
ret
push
hlt
push
add
dec
mov
sub
clc
stos
add
add
mov
lcall
sar
aas
or
fists
clc
movsb
clc
inc
clc
jne
sub
ja
clc
lret
xor
add
adc
add
adc
add
jmp
clc
jmp
add
mov
clc
sbb
addr16
pop
clc
xchg
push
vmovups
add
add
jge
add
mov
loope
aaa
stc
and
mov
rcrl
lods
jmp
filds
add
sub
jae
add
jle
add
mov
jmp
jmp
pop
je
and
add
lahf
mov
loope
test
mov
clc
mov
loope
push
clc
mov
das
sbb
add
popf
xor
add
pcmpeqd
fidivl
inc
clc
sbb
clc
cs
fidivs
add
sub
ficompl
sbb
add
clc
pop
jle
or
clc
push
or
add
sbb
clc
lea
push
ret
outsl
pop
xchg
insl
push
add
xchg
or
aaa
hlt
mov
cmp
into
sub
clc
xor
add
add
mov
push
add
lret
mov
inc
add
mov
add
fdivp
mov
clc
adc
or
add
xchg
inc
add
mov
cmpsl
clc
mov
add
add
and
sub
clc
loopne
testl
stos
sbb
push
mov
and
add
add
imul
clc
shrb
mov
repz
mov
inc
add
insl
sub
mov
lahf
push
insb
mov
clc
jbe
out
mov
xchg
loope
stos
cwtl
es
rcll
add
add
clc
dec
nop
lahf
es
jbe
clc
pusha
add
shll
add
pop
stos
add
mov
add
pop
push
aad
or
or
add
add
add
cmc
jbe
add
xor
add
xor
add
add
inc
add
adc
add
mov
clc
sbb
std
push
lcall
add
dec
sbb
xor
add
je
fiaddl
push
clc
mov
clc
sub
fbld
add
inc
add
aaa
pop
fs
jle
icebp
or
push
sahf
data16
cld
cs
mov
add
mov
pop
mov
inc
clc
dec
movsb
clc
cmp
push
add
jnp
add
xchg
push
cmpsl
clc
inc
add
fimull
data16
out
mov
sbb
sub
arpl
add
clc
xchg
loopne
lea
cs
outsl
add
add
push
jno
add
or
sbb
cli
mov
add
in
sbb
aam
add
enter
clc
push
add
into
cmpsb
clc
xchg
add
add
clc
xor
add
sahf
popa
add
clc
push
sbb
lahf
jge
test
out
std
push
add
arpl
add
add
std
mov
icebp
jo
add
mov
out
out
fisubs
add
add
ret
clc
mov
pop
addr16
or
add
and
add
add
cmc
lcall
adc
add
dec
push
add
ss
mov
test
sub
push
clc
int3
sti
lret
vmwrite
or
xchg
int
dec
xchg
jmp
push
mov
cs
cmpsl
clc
cmp
inc
add
mov
clc
add
cmp
add
not
cmp
clc
pop
clc
gs
popa
add
adc
xabort
pusha
add
ljmp
out
mov
adc
add
int3
ja
clc
push
add
xchg
fidivrs
and
add
mov
clc
fdivr
repnz
mov
add
insb
clc
jp
adc
add
xor
mov
pavgw
dec
push
clc
pop
cmp
clc
imul
inc
clc
xor
add
clc
and
add
sub
scas
sahf
imul
jae
add
xor
idivl
dec
mov
add
jo
add
add
out
inc
add
push
movsb
clc
xchg
faddl
inc
clc
in
sbb
dec
pop
clc
jb
add
add
add
sub
clc
push
ljmp
dec
test
add
clc
bound
add
and
add
jb
add
push
add
lcall
cmp
clc
stos
cmp
clc
push
sbb
sub
clc
pop
fimull
pop
adc
clc
mov
xor
add
stc
in
push
add
inc
clc
inc
clc
enter
or
add
into
fsubr
inc
add
int3
pop
mov
jb
add
add
out
lahf
loope
inc
clc
mov
add
xbegin
adc
jo
add
pop
jne
pop
pop
pop
cmpsb
clc
cmpxchg
jno
add
cmpsl
clc
adc
nop
in
jmp
add
inc
add
dec
lods
pop
clc
cmp
clc
gs
pop
jns
lods
and
add
jno
add
gs
lock
mov
lods
xchg
pushf
jg
xor
add
cwtl
or
outsl
mov
pop
xchg
arpl
add
add
inc
add
pop
shll
add
xchg
push
add
fisttpll
enter
out
cmp
mov
cmp
jle
clc
sti
pusha
add
dec
xchg
into
push
add
sbb
pop
jle
icebp
sbb
add
data16
loopne
imul
mov
nopl
ss
or
add
leave
cmc
mov
jnp
in
leave
jmp
dec
inc
clc
jne
add
xlat
clc
push
add
push
adc
sub
xbegin
mov
mov
clc
fsubs
clc
jbe
mov
arpl
add
clc
mov
xor
clc
jno
add
xchg
xchg
leave
push
add
push
mov
lret
pop
jnp
push
dec
imul
clc
xchg
sub
sub
xbegin
sub
ljmp
clc
clc
clc
jno
add
mov
mov
shll
dec
cwtl
rclb
sti
pop
xchg
sar
clc
pusha
add
mov
and
add
insb
bound
add
test
repz
inc
add
inc
add
mov
add
xchg
mov
clc
out
or
ss
test
loopne
pushf
cmpsl
clc
daa
clc
cmp
inc
add
loope
or
clc
xchg
cmp
clc
loopne
jp
in
cmp
out
iret
and
add
dec
lods
pop
push
and
add
mov
clc
xchg
outsb
mov
add
cmpsl
clc
fmul
lods
cli
data16
dec
cmp
aas
fldenv
clc
xor
imul
pop
cmp
or
insb
sub
add
push
mov
add
xor
add
add
data16
adc
add
add
xor
mov
nop
clc
out
mov
aaa
mov
pop
lret
push
mov
add
cli
add
add
mov
xor
add
imul
add
int
clc
or
pop
ljmp
clc
pop
mov
popf
pop
clc
mov
repz
es
out
xchg
test
push
pop
mov
add
popa
add
es
mov
xor
add
cmpsl
clc
cmpsb
clc
insl
xchg
out
insb
outsl
or
clc
sub
cmp
clc
hlt
inc
clc
pop
clc
xor
add
testl
pop
mov
aad
inc
add
jle
daa
clc
lcall
dec
dec
or
mov
loope
stos
and
add
add
inc
add
out
movsb
clc
test
dec
sub
add
out
sub
add
add
ret
clc
movsb
clc
cmpsl
clc
std
icebp
push
add
jg
imul
mov
push
add
inc
clc
jno
add
fldl
add
xchg
into
in
push
jg
cwtl
pop
cld
and
add
add
jo
add
enter
pop
push
mov
clc
sub
clc
jnp
clc
or
clc
lret
imul
dec
popf
mov
push
add
mov
add
ljmp
es
pop
and
add
fxch
xor
add
push
pop
dec
jne
clc
bound
add
pop
fdivrl
stos
aam
or
clc
sbb
cs
in
push
adc
add
add
cmp
add
add
outsl
out
inc
add
sub
xlat
fs
add
inc
add
dec
testb
push
add
shll
add
jbe
clc
xlat
popa
add
sbb
mov
add
jno
add
or
cmp
add
repz
fidivrs
inc
add
jbe
scas
data16
jmp
movsl
clc
in
ljmp
xbegin
addr16
int3
or
mov
push
testl
clc
cmp
mov
call
clc
cwtl
lods
xabort
scas
incb
clc
pop
mov
dec
dec
dec
pop
int3
test
sar
inc
clc
repz
adc
add
cmp
and
add
inc
add
xor
add
ja
clc
push
loope
out
popa
add
dec
in
cmc
add
add
cmp
add
daa
clc
lods
dec
cmpsl
clc
sbb
add
lock
inc
add
xor
clc
xabort
clc
in
xchg
xchg
mov
clc
jns
or
push
in
push
add
lock
fisubl
outsb
xchg
ret
loopne
fucomp
cmp
leave
test
mov
clc
mov
jl
lock
cmp
mov
scas
lock
insb
pop
lods
adc
add
in
xchg
push
add
inc
clc
cmp
push
push
add
sar
clc
sti
js
xchg
hlt
ret
mov
clc
sar
mov
jge
cmp
cmp
pop
xor
add
cmp
pop
clc
js
clc
push
aam
sahf
xchg
sar
mov
push
add
xabort
cmp
clc
rclb
cmpsl
clc
mov
clc
outsl
cmp
inc
add
adc
add
mov
stos
jno
add
mov
dec
scas
out
xchg
dec
popf
es
pop
mov
rclb
add
clc
ret
clc
lods
mov
mov
rorb
or
add
add
and
push
mov
clc
xchg
xchg
cld
pop
dec
lahf
xchg
sar
add
xor
mov
sbb
xbegin
add
pop
mov
inc
add
dec
cmp
ss
lods
or
add
inc
clc
dec
inc
clc
push
mov
clc
into
dec
ror
test
hlt
and
add
add
fmul
push
clc
sub
xor
add
in
jge
sbb
xchg
pop
pop
cmp
fcoms
push
dec
fimuls
out
sar
push
mov
add
sbb
clc
dec
and
add
or
daa
clc
pop
clc
lahf
lods
aas
xbegin
popa
add
aam
mov
clc
loopne
aaa
xchg
mov
xor
cmp
pop
and
jo
add
cmp
add
mov
pop
and
add
pop
outsb
in
xor
sar
int3
lret
js
in
sbb
add
ljmp
add
rolb
jl
gs
aad
add
xchg
mov
add
dec
mov
lock
fisttpll
das
dec
mov
add
xchg
cltd
icebp
divb
xchg
mov
pop
xor
add
mov
mov
daa
clc
or
addr16
lret
pop
add
add
dec
mov
xchg
rcl
rcrl
sub
clc
mov
pusha
add
data16
sub
rorl
jns
add
arpl
add
inc
clc
cwtl
xor
add
dec
adc
add
dec
add
add
add
in
xor
add
leave
xlat
and
mov
clc
scas
adc
add
add
xchg
addr16
mov
data16
lock
mov
sub
into
jecxz
dec
in
cli
jge
mov
mov
push
add
insl
push
add
vsubps
clc
xchg
clc
mov
clc
xchg
fwait
aam
adc
add
jne
sub
test
add
cmp
cmp
jbe
call
data16
test
inc
add
mov
or
add
out
xor
add
aam
dec
adc
add
add
cwtl
adc
add
test
add
xor
add
sbb
in
jp
add
in
popf
lods
and
add
test
push
clc
xchg
mov
clc
popf
outsl
cmp
jne
sbb
xchg
add
add
aaa
aad
aas
outsl
and
add
add
outsl
enter
clc
xor
add
xchg
fwait
inc
clc
out
push
add
xchg
sti
ret
clc
lods
jecxz
mov
push
xchg
or
dec
and
add
add
xchg
add
add
inc
add
add
add
jg
jle
jle
sar
clc
push
push
fdivl
add
cmp
add
xor
add
lcall
add
and
add
clc
jp
or
add
push
clc
push
add
cmc
lods
sub
inc
add
imul
add
dec
repz
mov
sub
add
push
add
clc
xchg
dec
gs
in
fsubr
and
add
pop
pushf
arpl
add
add
sub
add
xchg
sub
enter
cmp
add
loope
rclb
add
xchg
mov
rcl
push
lods
jnp
or
cs
add
or
cmp
incb
add
repnz
jno
add
mov
clc
int
add
dec
push
add
pop
insb
pop
test
jecxz
jb
add
xchg
std
cmp
xchg
into
xchg
cli
data16
lods
jns
pop
sti
pop
cmp
pop
clc
mov
int
shlb
add
clc
shll
add
jecxz
and
add
mov
clc
sub
clc
ret
add
add
sbb
inc
add
mov
clc
or
data16
xor
add
out
push
bound
add
sub
pop
int
or
lcall
add
and
add
add
pushf
test
inc
add
fcmovbe
fwait
out
add
add
inc
add
sub
add
pop
repz
xchg
jle
jne
clc
xchg
stos
inc
add
rcl
or
clc
cmp
add
clc
push
add
pop
cmp
push
add
inc
clc
divb
add
add
add
mov
clc
in
or
outsl
cwtl
inc
add
xor
mov
jl
clc
fistpl
in
jl
clc
bound
add
pusha
add
std
std
sbb
add
xor
add
scas
or
hlt
shrb
mov
sarl
loopne
cmp
popa
add
sub
bound
add
je
clc
cmpsl
clc
adc
or
mov
stos
xor
bound
add
add
inc
add
adc
add
fimull
dec
jge
mov
xchg
gs
pmuludq
pop
xchg
xchg
xor
add
add
add
add
add
mov
mov
in
inc
add
fsubrp
sbb
mov
jo
add
pushf
add
leave
popf
push
and
add
xchg
adc
add
add
add
stos
jmp
clc
shll
mov
ljmp
jle
mov
setno
and
icebp
push
pushl
or
sarl
xabort
cmp
inc
add
gs
imul
clc
or
add
enter
dec
cmp
out
mov
clc
cmpsb
clc
sub
adc
add
aad
or
clc
pop
inc
add
mov
adc
add
clc
js
xor
add
loope
jo
add
mov
fstpt
clc
jg
inc
clc
and
add
pop
sub
add
jne
cli
outsb
mov
rcll
dec
xor
add
lods
jge
sbb
pop
cmp
call
clc
lock
clc
dec
fdivrs
add
add
add
dec
test
lret
sbb
in
iret
pop
in
jle
and
add
cmp
push
add
arpl
add
add
mul
clc
pop
mull
in
cmp
ror
xchg
mov
jg
repz
push
add
mov
rorl
cmp
pusha
add
out
stos
xchg
xor
clc
fwait
sub
add
clc
js
clc
cwtl
cmp
mov
adc
add
loope
jp
stc
xbegin
add
jns
clc
pop
in
icebp
push
add
and
push
popf
or
imul
hlt
popf
mov
or
dec
pop
mov
and
add
add
add
clc
data16
fucom
clc
out
negb
pop
hlt
loop
and
add
dec
and
add
clc
or
clc
iret
jae
add
add
hlt
sar
test
fwait
cltd
dec
fsubl
pop
inc
add
adc
clc
loope
or
clc
sbb
dec
pop
ret
clc
xor
add
movsl
clc
sbb
dec
cmp
in
cmp
xchg
ret
clc
xchg
push
dec
inc
add
movsl
clc
lock
mov
cs
add
fsubs
das
xabort
dec
outsb
dec
push
cmp
rclb
xchg
loop
adc
add
xor
add
clc
lods
inc
add
movsb
clc
idivb
add
fstps
es
inc
add
stos
mov
clc
xchg
xabort
clc
movsl
clc
insl
mov
pop
inc
add
xabort
add
cmp
lahf
fdiv
and
add
and
add
and
add
inc
clc
out
push
add
cwtl
jo
add
shl
clc
aaa
xlat
idivl
cmp
push
pop
add
add
clc
jge
clc
inc
add
icebp
cmp
jmp
cmp
ss
movsl
clc
xor
fdivrp
add
clc
popf
outsb
sar
add
cmp
clc
pushf
test
mov
add
test
mov
push
add
jnp
mov
sbb
dec
inc
clc
mov
popa
add
inc
clc
dec
cmp
data16
lahf
jl
frstor
add
cmp
clc
pop
xchg
add
add
mov
xchg
sub
inc
clc
inc
clc
push
clc
cld
pushf
push
or
sub
sub
in
cltd
ss
clc
mov
pop
inc
add
addr16
and
add
clc
pop
adc
and
add
test
ret
clc
push
sbb
clc
es
dec
fwait
cwtl
pusha
add
xchg
outsb
lret
in
xchg
icebp
add
add
add
stc
and
add
clc
inc
clc
mov
push
add
cltd
mov
dec
inc
clc
push
add
insl
aam
cmp
add
fbld
xor
add
clc
cwtl
push
add
push
xchg
outsl
jne
das
cmp
pop
iret
push
cmp
clc
sti
out
mov
clc
ljmp
mov
fidivrl
clc
push
das
cwtl
movsl
clc
leave
cmp
pop
pop
push
push
mov
stos
push
push
push
jge
popf
cmp
clc
ss
xor
add
add
add
adc
add
pop
sti
scas
and
add
mov
and
add
clc
jns
pop
out
inc
clc
loope
repnz
lcall
movsb
clc
int
xchg
insl
cmp
cld
cmp
inc
add
dec
fdivrl
xchg
jae
add
sar
cmp
clc
and
add
inc
add
popa
add
sub
jae
add
clc
jb
add
incl
pop
and
add
add
xchg
cs
push
add
stos
imul
dec
pop
leave
xchg
std
test
jnp
loope
loope
out
sbb
clc
inc
add
scas
sub
clc
jge
clc
cs
in
lea
add
push
pushf
ljmp
xchg
inc
clc
mov
add
idivl
cmp
lea
xchg
dec
call
stos
jne
add
lock
clc
mov
xor
add
add
ja
popf
ss
xchg
scas
xchg
rcll
add
xor
add
add
add
add
int3
jl
clc
mov
clc
sbb
mov
jb
add
jbe
add
imul
clc
mov
movsb
clc
mov
ss
mov
pop
negb
clc
cmpsb
clc
clc
incb
add
fsubs
clc
lahf
outsl
into
mov
fnsave
pop
pop
repz
push
add
inc
clc
ds
add
repz
clc
xor
adc
add
clc
dec
cmp
lods
cmp
add
push
aaa
ucomiss
fisubrl
adc
add
cmp
push
jne,pn
js
jo
add
test
jns
or
clc
sub
xor
add
cmp
jns
push
add
push
dec
and
cld
sbb
ds
inc
add
addr16
mov
cmp
xchg
bound
add
clc
xor
clc
repnz
add
mov
add
cli
cmp
add
cmp
clc
out
out
out
lcall
pop
pop
mov
or
cmp
add
ror
cli
imul
sahf
or
add
fcmovu
sub
xchg
pop
daa
clc
movsb
clc
cltd
testb
jmp
jecxz
cmp
add
pop
aad
add
aaa
negl
sub
add
add
clc
ja
fcom
or
push
clc
or
clc
and
inc
add
jnp
cmp
add
xchg
add
xlat
fidivrl
hlt
xlat
mov
clc
fdivr
mov
clc
inc
add
in
dec
and
add
sub
add
sub
ljmp
adc
clc
out
cmpsl
clc
dec
and
add
jmp
out
fsubrs
fimull
aam
add
add
pop
push
add
outsb
clc
call
lcall
int
add
and
add
add
add
mov
int
xor
add
add
add
cs
clc
pop
pop
clc
ja
mov
add
insb
mov
fs
testl
mov
jnp
jmp
faddl
clc
sbb
clc
add
add
add
cmp
clc
and
clc
mov
clc
stos
setno
mov
in
daa
clc
mov
push
clc
add
add
movsb
clc
add
iret
push
and
add
pusha
add
cmp
clc
call
add
xchg
int
ja
clc
push
add
fcomp
or
enter
cld
cmp
clc
enter
xchg
fsubs
pop
xchg
fs
pop
gs
outsb
jbe
sub
push
pop
jns
pusha
add
aad
clc
insl
and
add
add
std
inc
clc
mov
btr
xor
add
add
add
cwtl
fistl
push
push
or
clc
js
inc
add
sub
cmp
dec
adc
add
clc
inc
add
push
xchg
add
add
add
lahf
jl
hlt
fldenv
add
cmp
popa
add
push
add
clc
pop
pop
clc
adc
xor
add
fs
jl
add
aaa
xor
add
mov
js
sar
add
cwtl
fiadds
test
cmc
scas
mov
adc
add
cmp
add
xor
add
out
ret
ja
push
cmp
stos
cmp
sbb
and
in
stos
ret
add
add
sar
xchg
out
add
add
adc
cmp
arpl
add
mov
popa
add
mov
scas
adc
add
sar
das
inc
add
ret
clc
nop
movsl
clc
cmp
sub
or
add
sub
cltd
dec
cmpsb
clc
data16
ja
clc
sahf
jbe
clc
push
sahf
mov
mov
sahf
insb
push
xchg
mov
bound
add
jmp
mov
clc
mov
add
clc
test
jno
add
add
xchg
out
imul
clc
mov
add
sub
push
jecxz
stc
js
clc
jg
and
cmc
idivl
or
xchg
mov
add
daa
clc
xor
add
es
mov
sub
add
loop
clc
sub
divl
das
mov
push
clc
fxch
and
add
shll
clc
xchg
enter
clc
in
or
mov
inc
add
in
loopne
nop
cmp
clc
sbb
out
or
add
insb
clc
push
add
inc
clc
pop
jae
add
cmp
aaa
mov
lock
or
imul
nop
out
and
in
adc
adc
add
outsl
cmpsl
clc
push
fisttpl
lcall
jne
es
cltd
jbe
cmp
out
xchg
cmp
clc
push
mul
clc
push
in
scas
lret
add
lret
add
sub
clc
pop
push
xor
add
inc
clc
cld
push
push
clc
mov
clc
add
add
add
out
pop
imul
pop
stc
adc
pushf
rorb
scas
inc
clc
xchg
dec
pop
xchg
dec
and
add
add
lret
lea
clc
sahf
xchg
fstl
pop
inc
add
imul
out
cmp
movsb
clc
push
dec
mov
clc
scas
imul
clc
pusha
add
xor
add
add
clc
leave
out
das
fsub
clc
fwait
rcll
stos
loop
in
lret
add
mov
mov
add
movsl
clc
cmp
leave
mov
ret
pop
test
cmc
inc
clc
clc
add
add
mov
and
mov
add
xchg
pop
xor
add
add
jmp
add
mov
cmc
ror
mov
add
dec
mov
repz
add
icebp
ret
clc
movsl
clc
sbb
sbb
cmp
jmp
pop
cmp
clc
ss
mov
push
das
cmp
test
clc
dec
adc
add
push
clc
push
add
add
pop
mov
push
add
mov
clc
imul
xchg
sar
sbb
mov
add
pop
ret
clc
mov
push
add
sub
aam
inc
add
push
add
mov
clc
in
enter
clc
jle
js
clc
sub
xchg
sarl
clc
lret
bound
add
jge
add
or
mov
cmc
sub
jge
daa
clc
sbb
add
inc
clc
push
add
mov
xbegin
add
add
jecxz
sahf
cmp
insb
xor
add
clc
out
dec
icebp
xor
add
in
fmul
xchg
pop
mov
mov
mov
clc
lea
and
add
ss
or
cmp
fadds
jb
add
add
inc
clc
cwtl
bound
add
aaa
imul
pusha
add
add
add
gs
xchg
push
out
loop
pop
bound
add
sub
in
fmull
cltd
lcall
movsl
clc
ret
clc
sbb
cmc
push
movsl
clc
and
add
pusha
add
in
jne
outsb
mov
pusha
add
mov
clc
mov
add
imul
sub
mov
inc
add
xor
dec
xor
add
push
add
scas
add
add
out
mov
add
mov
add
push
xor
add
sahf
pushf
mov
out
xchg
rol
clc
pop
mov
adc
add
add
sar
add
sbb
shlb
add
pop
clc
fldpi
stos
ljmp
mov
add
ds
xchg
ret
clc
clc
mov
mov
lock
clc
jo
add
cltd
notl
ficoms
xor
add
add
add
mov
cs
pushf
pop
jns
push
int3
mov
add
xchg
ja
add
mull
sub
sahf
xlat
cmp
clc
add
add
mov
in
mov
clc
sbb
dec
adc
add
clc
mov
clc
sbb
cmpsb
clc
jns
add
mov
mov
add
cmp
mov
bound
add
mov
mov
add
add
sub
add
xchg
addr16
push
add
test
mov
clc
xchg
fsubl
add
push
ja
xor
add
clc
pop
mov
add
push
add
push
add
movsl
clc
fninit
clc
in
sahf
mull
clc
pop
clc
ficomps
add
cmp
clc
xor
add
flds
iret
out
xabort
data16
xchg
cmp
jmp
clc
xchg
add
mov
clc
shlb
add
add
test
in
int
clc
jp
mov
or
loope
test
clc
adc
add
lods
popf
sbb
pop
push
sub
dec
sbb
mov
jbe
outsl
mov
mov
aam
mov
mov
xor
xchg
lea
adc
add
mov
sbb
mov
inc
add
xor
rcrb
rcl
cli
xlat
dec
jb
add
stos
stc
push
fisubrs
jo
add
clc
mov
jg
clc
pop
pop
clc
sbb
clc
adc
add
add
mov
or
js
stos
shl
clc
insl
dec
adc
sbb
mov
das
stc
xor
add
mov
dec
adc
add
add
out
xor
add
push
clc
mov
add
mov
jns
clc
sti
sar
loope
mov
lret
daa
clc
imul
clc
or
nop
inc
add
push
sti
jg
lcall
fcmovnb
clc
jp
add
mov
fwait
cmp
xchg
sahf
int3
dec
mov
or
mov
clc
dec
add
add
add
pop
adc
fwait
inc
clc
xchg
xchg
clc
loope
outsb
xor
add
outsl
in
pop
clc
lea
pop
sub
clc
sub
mov
mov
sar
bound
add
add
mov
clc
xor
or
add
gs
into
cmp
xchg
pop
push
add
mov
jns
xor
add
aaa
xchg
add
dec
jle
clc
ret
clc
aaa
mov
add
inc
add
pop
enter
fistpl
pop
aad
push
clc
mov
sar
adc
add
dec
adc
add
add
and
add
xchg
cmpsb
clc
lret
jp
adc
push
push
inc
add
xabort
clc
sbb
add
out
lcall
add
aam
gs
imul
stos
bound
add
inc
clc
pop
clc
xor
add
lahf
in
jecxz
cmp
clc
out
inc
add
das
js
clc
stos
xor
add
pop
jae
add
mov
add
sbb
test
cmp
pushf
or
dec
mov
add
dec
int3
cmp
add
mul
clc
fistpll
add
mov
add
add
pop
daa
clc
loopne
daa
clc
cmp
lods
cmp
movsl
clc
add
add
clc
mov
xor
add
dec
lock
add
xlat
or
add
cmc
jge
dec
jge
and
mov
add
fs
and
add
clc
outsb
aaa
xchg
mov
jbe
bound
add
or
clc
cmp
fisubrl
call
insl
sbb
ss
lock
clc
call
out
insb
mov
enter
add
lcall
add
gs
cmp
xchg
lods
popf
ds
xchg
mov
jge
clc
xchg
push
add
mov
cmp
jo
add
cmp
add
sub
aam
clc
std
pop
inc
add
xbegin
in
pop
sar
mov
clc
xor
add
add
mov
and
add
mov
add
inc
clc
dec
and
add
clc
out
cmp
cmpsb
clc
mov
inc
add
in
cmc
adc
mov
clc
lret
cmp
cmp
add
push
add
sub
lcall
jg
inc
add
loopne
fsubrl
mull
xchg
jl
xchg
ficoml
add
sbb
mov
clc
adc
add
inc
add
lcall
in
jmp
mov
jecxz
push
cmp
inc
clc
jecxz
repnz
push
mov
vandps
jbe
add
jmp
xchg
dec
mov
add
ds
daa
clc
filds
xor
add
add
cmpsl
clc
jns
dec
jp
clc
cmp
sub
xchg
jne
mov
add
lock
add
mov
scas
ficomps
inc
clc
in
in
clc
cmpsl
clc
xor
add
add
sbb
clc
or
outsb
mov
jmp
inc
clc
mov
push
add
xor
pop
jns
sbb
pcmpgtw
popa
add
movsb
clc
addr16
fbld
clc
out
sbb
clc
sar
sub
sbb
push
sbb
in
leave
test
sub
clc
cmp
dec
test
jmp
lock
xor
add
clc
xabort
clc
cmp
push
clc
inc
clc
in
jnp
clc
sar
clc
mov
in
adc
add
push
clc
gs
push
xchg
jmp
xor
add
sbb
mov
clc
daa
clc
aas
hlt
adc
add
daa
clc
scas
inc
clc
pop
sarb
clc
sub
add
cwtl
push
add
mov
sbb
es
popa
add
push
xchg
js
sub
sti
inc
clc
or
jae
add
add
cmp
xor
add
push
xor
ficompl
imul
rcr
fs
and
add
adc
add
clc
sbb
fisubrs
stos
out
cmp
add
fdivl
mov
loope
jle
inc
clc
int
repnz
clc
imulb
add
icebp
inc
clc
xchg
in
pushf
cmp
pop
movsl
clc
mov
add
ficomps
add
add
pop
movsb
clc
fs
dec
xchg
jmp
js
test
add
pop
adc
pop
movsb
clc
and
mov
call
lods
cmp
jl
jge
pushf
xchg
xabort
scas
in
in
int3
mov
xor
add
add
cmp
inc
clc
push
clc
data16
pop
clc
lods
cmpsb
clc
hlt
jae
add
push
clc
push
or
pop
into
mov
loope
sbb
add
mov
sub
add
call
add
adc
add
fadd
clc
inc
add
packsswb
add
data16
aam
loopne
xor
add
arpl
add
clc
add
add
or
imul
add
lret
clc
xchg
fdivs
mov
add
sub
push
add
and
mov
mul
clc
cmp
add
test
xor
add
movsl
clc
dec
in
fdivl
cmp
add
leave
ss
clc
cmpsb
clc
loopne
aas
xor
add
pop
push
rol
clc
pop
mov
clc
mov
xchg
test
test
imul
in
mov
cmp
mov
cs
push
sahf
bound
add
add
fidivl
clc
negb
jecxz
xlat
dec
pop
out
add
add
cld
movsl
clc
mov
aam
loope
iret
sarb
clc
jne
shll
add
fcoml
add
cmp
clc
enter
xchg
int
cmp
pop
push
clc
pop
js
clc
adc
add
xchg
push
add
mov
clc
loope
imul
js
pushf
adc
add
rcll
mov
xlat
dec
cmp
inc
add
add
lret
or
jmp
mov
test
fiadds
add
imul
add
addr16
or
push
add
mov
call
clc
xor
mov
jae
add
add
neg
push
add
adc
add
clc
rcr
cmp
push
pop
mov
sbb
leave
cltd
pop
xor
add
clc
outsl
jno
add
pop
js
add
cli
mov
dec
lock
arpl
add
clc
cltd
mov
jb
add
add
sbb
push
add
xchg
jge
clc
push
add
xchg
imul
hlt
repz
cmp
sbb
ss
add
sbb
sub
js
clc
pop
scas
in
or
imul
add
push
clc
movsl
clc
inc
clc
insl
jmp
out
mov
clc
push
xor
add
add
jno
add
add
add
add
dec
in
popf
aam
xlat
cwtl
xor
add
adc
add
inc
add
cmp
add
sar
inc
clc
pushl
add
jmp
enter
fsubl
add
or
clc
fnstcw
adc
add
fs
ja
mov
jbe
pop
mov
or
xchg
mov
pop
shrl
and
add
leave
push
clc
out
jbe
clc
jge
mov
loop
or
clc
or
clc
add
add
clc
push
add
xor
add
mov
mov
cmp
leave
jne
nop
out
into
mov
add
mov
loopne
gs
pop
scas
sub
insl
in
cmpsl
clc
pushf
sub
sub
mov
imul
add
sub
sub
test
dec
icebp
fcoml
add
enter
add
add
add
xor
add
int3
test
sub
xor
es
adc
add
add
add
add
mov
xor
add
ficoms
mov
sar
clc
mov
adc
add
cmp
jle
clc
mov
loope
add
add
add
sar
xor
add
add
push
cmp
sahf
data16
jg
clc
mov
outsl
xabort
add
jp
add
stos
nop
ret
clc
sub
enter
jne
mov
popf
fmull
mov
or
add
xor
add
ljmp
cmp
jo
add
pop
or
clc
mov
lods
adc
add
add
add
push
add
dec
dec
mov
add
clc
cli
jno
add
add
push
mov
add
ds
int3
dec
sti
ss
adc
add
or
out
sub
cmp
and
add
inc
add
loopne
fcmovnb
clc
xabort
cltd
jb
add
add
dec
xchg
add
add
or
xchg
ljmp
clc
rclb
add
and
add
add
push
add
adc
add
add
clc
fdivrs
add
neg
pop
cmp
gs
addr16
pusha
add
sub
add
push
add
adc
add
jo
add
add
stc
cmp
dec
push
add
mov
pop
dec
xchg
imul
mov
imul
dec
push
std
push
clc
sub
dec
or
clc
fistps
add
add
add
add
cmpsb
clc
add
add
push
add
add
add
cmp
add
sar
stc
ljmp
loop
add
add
insl
sar
add
add
clc
repz
addr16
fwait
out
bound
add
clc
dec
mov
inc
add
bnd
add
add
mov
ja
mov
push
xchg
push
or
in
xor
jmp
add
add
add
push
clc
cwtl
adc
add
dec
push
add
sarb
mov
sbb
jns
arpl
add
mov
clc
push
adc
add
xchg
adc
mov
mov
mov
clc
iret
cmpsl
clc
xchg
push
add
xchg
popa
add
lahf
sbb
add
add
xchg
sub
mov
add
xchg
fwait
mov
add
add
add
cmp
sub
sbb
clc
pop
insl
stos
pop
cs
arpl
add
shll
mov
daa
clc
push
add
bound
add
mov
daa
clc
jp
clc
mov
add
loopne
inc
add
loopne
fimull
add
scas
dec
cmp
add
lcall
add
aad
leave
das
cmp
xabort
insb
pop
sar
add
add
movsb
clc
xchg
lcall
add
sbb
sar
clc
and
add
mov
sbb
dec
lret
mov
pop
mulb
clc
sti
imul
sarl
daa
clc
nop
cmp
clc
push
dec
loopne
cmp
insl
mov
clc
fstpl
aaa
sub
clc
mov
int3
push
or
push
inc
clc
div
shrl
ljmp
pushf
push
clc
push
mov
out
cmp
vzeroupper
push
clc
jne
and
add
mov
adc
add
or
daa
clc
xabort
lcall
sub
add
mov
shrb
cld
cwtl
leave
xchg
or
xor
add
adc
add
nop
into
cmp
std
mov
clc
sub
dec
mov
test
sbb
xchg
ljmp
pop
push
mov
pop
cmp
inc
clc
je
clc
clc
fstl
add
clc
cli
mov
mov
add
cmp
add
add
mov
mov
add
jns
decb
add
int
dec
aam
dec
xlat
or
add
in
mov
add
dec
jae
add
add
rorl
clc
dec
iret
push
sub
pop
addr16
mov
clc
leave
pusha
add
xchg
or
daa
clc
ljmp
mov
clc
push
outsb
xchg
and
add
pop
jnp
dec
jne
jbe
stos
sar
clc
and
add
clc
mov
loopne
jp
pusha
add
pop
sub
ljmp
adc
add
add
mov
popa
add
xchg
pop
clc
inc
clc
dec
mov
xor
add
or
inc
add
aaa
sub
cmpsl
clc
test
mov
sub
clc
or
add
xabort
or
mov
stos
mov
mov
jne
clc
jecxz
insl
pop
out
out
icebp
sarl
test
adc
add
pushf
push
sar
add
xchg
testb
sub
cmp
and
add
xlat
pop
mov
in
jns
jnp
add
daa
clc
stos
cltd
and
add
add
icebp
cmp
fisubl
loop
outsb
data16
xor
add
clc
adc
add
clc
jmp
add
das
repnz
fld1
mov
clc
mov
add
inc
add
and
dec
clc
setne
xor
add
fcomps
jno
add
dec
mov
aam
xchg
mov
fdivrl
mov
cli
add
xor
add
add
inc
add
sbb
mov
cmp
sahf
lret
aaa
pop
mov
add
fisttps
add
add
sbb
jecxz
in
cmpsb
clc
jg
clc
and
add
mov
add
in
pushl
add
cmpsl
clc
clc
push
and
fiaddl
cmc
repnz
test
add
add
add
xchg
mov
std
test
add
mov
testl
test
cmp
add
jbe
jl
add
xor
clc
push
dec
mov
or
xchg
cli
push
add
loopne
testb
inc
clc
jbe
clc
test
sub
clc
lods
clc
sar
pop
or
clc
fwait
in
xabort
add
xchg
dec
arpl
add
sbb
clc
xor
data16
pushf
dec
fbld
add
push
sbb
inc
add
jmp
jge
and
test
fwait
inc
add
or
add
int
imul
data16
mov
jecxz
xor
jmp
fcoml
add
popa
add
ret
lea
sub
clc
cmpsb
clc
stos
and
add
add
add
add
xabort
loopne
popa
add
in
adc
add
add
push
add
mov
popa
add
sub
loopne
inc
add
xor
pusha
add
jge
add
cmpsl
clc
dec
add
clc
sbb
dec
xor
add
clc
mov
clc
mov
hlt
xabort
clc
es
gs
scas
aam
add
popf
inc
add
std
or
mov
dec
arpl
add
push
add
cmp
xor
add
cmp
add
hlt
or
cmp
clc
mov
cmp
xchg
mov
fistpll
pop
and
frstor
clc
mov
sub
add
ret
lods
sub
call
add
fisubl
clc
cltd
dec
pop
lcall
mov
add
je
and
add
lods
xchg
leave
inc
clc
inc
add
clc
xabort
out
fidivrl
cmp
xchg
add
add
pop
clc
xchg
push
mov
psllq
clc
jnp
xchg
pop
push
jmp
clc
call
push
add
adc
add
fildll
ss
sahf
cmp
inc
clc
data16
and
add
clc
out
rcrl
jmp
clc
mov
clc
inc
add
mov
lea
or
cmp
decl
xor
mov
add
decb
add
in
data16
and
add
add
xor
clc
cmp
add
and
add
cmp
fwait
add
loope
mov
inc
clc
lcall
push
add
add
jmp
cmp
clc
lea
add
test
push
pop
or
xchg
push
add
loope
imul
sti
mov
loope
mov
mov
clc
mov
sbb
mov
xchg
xlat
popa
add
dec
enter
sbb
clc
inc
clc
cmp
add
dec
in
ljmp
add
call
clc
mov
repnz
data16
or
add
clc
outsb
push
inc
clc
inc
add
scas
pop
sbb
add
clc
xchg
push
jne
jns
push
add
jnp
clc
lock
mov
inc
clc
mov
add
xchg
mov
add
test
jo
add
in
lods
sub
cmc
mov
jmp
jne
flds
add
int
and
add
ficompl
sub
add
add
jecxz
out
cs
mov
cld
stos
push
add
in
sub
add
iret
xchg
add
add
or
push
pop
add
add
adc
add
popa
add
push
call
add
add
add
add
clc
xor
add
dec
es
iret
adc
add
mov
cmpsl
clc
add
add
mov
push
push
adc
add
mov
mov
clc
in
jecxz,pt
jno
add
push
pushf
xor
add
jle
add
adc
add
xchg
cmp
sbb
pop
and
gs
shlb
ss
repnz
add
shrl
in
push
sbb
clc
xchg
mov
adc
add
pop
out
adc
clc
xor
add
mov
clc
testl
add
mov
fisttps
mov
clc
js
add
sub
add
adc
add
mov
filds
and
add
fldcw
movsl
clc
flds
add
lods
cli
xchg
dec
dec
rolb
cs
popa
add
call
add
add
in
ret
clc
push
cmp
add
lock
clc
nop
pop
inc
clc
sub
sti
cmp
add
dec
mov
loop
clc
mov
mov
dec
out
add
add
fs
clc
inc
clc
sbb
mov
sbb
clc
lods
aad
dec
jae
add
xlat
push
add
push
sbb
clc
daa
clc
mov
add
xchg
lock
fisubl
clc
pop
cmp
sar
clc
in
testb
jne
cmp
add
dec
cmpsl
clc
pshufw
adc
add
add
clc
jle
vcomiss
ficomps
sub
clc
ja
mov
add
clc
mov
clc
add
add
dec
fsubr
loope
dec
lahf
fdiv
lock
add
add
xor
add
jns
add
xor
add
add
adc
add
dec
push
xor
add
clc
nop
aad
add
cmp
sub
add
je
jl
clc
mov
clc
xchg
add
add
xor
pop
xor
es
lcall
add
in
enter
out
xor
add
lock
xor
add
inc
add
jg
repz
clc
or
xchg
shlb
add
jg
add
movsb
clc
outsb
or
clc
call
jl
clc
and
scas
in
cld
jno
add
sub
clc
aas
push
pop
bound
add
add
sbb
cltd
xchg
inc
add
sub
push
add
repz
add
xchg
dec
mov
clc
mov
clc
adc
clc
dec
psubsw
cmp
pop
clc
in
mov
cld
scas
insl
jmp
fistl
clc
push
add
mov
xchg
test
clc
push
cmp
push
ljmp
clc
cltd
xchg
arpl
add
adc
add
add
gs
jle
clc
lea
dec
clc
or
notl
add
xor
imul
adc
add
add
mov
xabort
push
out
lock
add
ljmp
mov
add
jp
add
pop
cmpsb
clc
das
mov
leave
testb
clc
aaa
out
push
add
push
pusha
add
neg
mov
dec
jmp
popf
iret
pop
dec
add
mov
call
cmpsb
clc
sub
clc
mov
add
sub
xchg
xchg
cmpsl
clc
lcall
clc
pop
dec
outsb
mov
add
clc
inc
clc
clc
js
push
notb
pop
add
add
sub
insb
loopne
dec
xchg
push
loopne
mov
add
add
add
push
cmpsl
clc
add
clc
popf
push
mov
push
popf
aas
cmpsl
clc
xabort
or
fldl
test
sbb
add
add
pop
clc
loop
repnz
push
add
adc
add
fbld
dec
jg
add
je
aam
push
jl
add
add
clc
es
dec
sbb
jp,pn
push
popa
add
xor
add
add
clc
shlb
loopne
push
inc
clc
push
xor
mov
cmp
clc
pop
clc
ret
cmp
mov
stos
dec
mov
add
clc
js
add
or
add
jg
dec
mov
and
add
jno
add
push
xchg
mov
add
xabort
adc
add
add
or
push
mov
shr
and
mov
imul
xor
add
bound
add
add
ljmp
add
fidivs
add
clc
pop
or
leave
fidivs
sub
xchg
mov
jmp
stos
lods
das
stos
dec
clc
out
test
clc
icebp
mov
cs
loop
jno
add
clc
adc
negl
sarb
clc
out
inc
clc
cmp
add
stos
pop
js
add
jmp
data16
add
add
ja
add
push
clc
mov
xchg
sar
in
knotw
cmpsl
clc
jg
add
sub
mov
or
sbb
push
lret
add
cmp
and
add
clc
push
mov
mov
clc
add
pop
in
jg
add
stos
xabort
lret
enter
sub
std
mov
add
add
adc
add
mov
add
cmp
clc
ja
pusha
add
aam
xabort
mov
add
pushf
lea
mov
in
cmc
jnp
xchg
fdivr
push
add
lods
mov
clc
push
mov
mov
add
add
mov
xchg
and
add
sar
pop
outsl
fnsave
add
lcall
clc
lret
loope
xlat
js
add
fwait
push
add
ret
repz
add
or
add
push
add
add
xor
add
clc
stos
fwait
lret
mov
ljmp
add
push
add
xabort
push
xchg
xchg
mov
mov
daa
clc
pop
clc
push
aaa
imul
std
icebp
iret
dec
xchg
mov
mov
jo
add
add
call
add
clc
add
add
clc
lea
lock
bound
add
xchg
icebp
cmovl
out
pop
adc
jp
clc
jl
clc
imul
push
aam
sarb
push
xchg
clc
adc
add
inc
clc
inc
clc
in
add
int
fsubrs
mov
add
clc
and
add
lods
jae
add
mov
pop
leave
aad
clc
xchg
adc
and
add
fs
clc
jns
clc
add
add
add
dec
jl
mov
mov
jb
add
xchg
mov
pop
inc
clc
or
int
add
mov
cmp
icebp
jp
clc
mov
clc
loope
adc
add
out
daa
clc
mov
xchg
jo
add
and
add
xchg
cmp
imul
daa
clc
jne
cwtl
sar
add
mov
jle
add
add
add
repnz
jno
add
cmp
xchg
ret
clc
stc
lret
clc
std
out
sbb
xor
add
and
add
clc
inc
clc
icebp
push
add
in
fs
pop
sub
pop
push
cmp
cmp
test
xbegin
mov
clc
sub
clc
pop
inc
clc
or
cmp
pop
sbb
clc
jno
add
test
arpl
add
pop
mov
sti
clc
cmp
sub
movsl
clc
dec
movsl
clc
clc
dec
sbb
push
fst
fnstcw
mov
add
cld
pop
js
mov
stos
or
test
add
clc
add
scas
adc
add
pop
cld
jg
add
or
jg
mov
pop
in
mov
xor
add
lret
xabort
clc
test
xchg
je
add
mov
call
add
or
clc
cmp
je
add
inc
add
cmp
sbb
clc
xabort
cs
sub
add
jecxz
inc
add
dec
leave
and
add
rcrb
or
add
xchg
pop
movsl
clc
out
div
sbb
add
cmp
and
inc
clc
aam
xabort
add
cmp
add
loope
out
mov
bound
add
sti
fstl
add
push
leave
repnz
and
add
pop
and
je
and
add
mov
clc
inc
add
lods
cltd
mov
or
mov
clc
push
das
jmp
clc
mov
sub
clc
sub
dec
dec
movsl
clc
arpl
add
clc
mov
add
mov
xor
add
lahf
cmp
add
and
add
clc
pop
popf
test
lahf
sbb
add
in
adc
add
clc
pop
sub
add
rorl
dec
inc
clc
add
add
add
iret
enter
jge
enter
inc
clc
adc
add
sub
js
push
ljmp
clc
enter
add
cmp
push
adc
add
jp
cli
ror
sub
add
adc
add
cld
in
imul
add
sar
xor
add
clc
int3
mov
mov
adc
add
add
mov
clc
lret
imul
or
clc
and
add
cmp
add
cld
out
mov
sub
fstpt
or
pop
lods
fscale
adc
add
movsb
clc
adc
clc
push
xor
insl
and
add
push
lcall
push
push
or
mov
add
clc
jmp
push
add
cld
dec
dec
jns
add
push
pop
test
xor
add
add
cmp
jl
repz
lahf
movsl
clc
rcrb
clc
dec
jae
add
add
add
sarb
inc
add
in
cmp
add
stos
jns
in
popf
jo
add
icebp
pop
xor
clc
outsl
das
adc
clc
ret
clc
cmpsb
clc
cli
loopne
xabort
es
jg
inc
clc
xchg
jbe
cltd
inc
add
sbb
clc
fldcw
in
es
popf
jle
inc
add
mov
clc
adc
add
add
aaa
xabort
add
cld
jmp
sahf
loope
mov
add
dec
sub
xchg
push
pop
insl
sbb
jnp
push
mov
stc
shl
clc
in
add
add
loope
inc
add
cmp
popf
jg
mov
fidivl
add
cmp
add
test
in
xchg
jecxz
out
pusha
add
in
push
add
mov
add
push
add
inc
add
fdivrp
loope
and
add
es
and
add
cmp
clc
sbb
clc
aaa
dec
push
jnp
fbld
add
int
pop
jle
xchg
int
mov
clc
loope
pop
lret
cmp
clc
mov
push
inc
add
ret
clc
scas
cmp
fldl
add
in
fldl
add
in
int
sub
add
jae,pt
add
clc
sbb
sahf
test
sub
add
jne
clc
cltd
aam
clc
aad
xor
add
sub
cmp
sbb
pop
pop
and
add
push
stc
cmp
clc
jb
add
jmp
add
cmp
xor
add
cmp
int
clc
push
add
roll
xchg
cltd
push
cmp
add
fistpll
clc
loop
sub
aam
lods
add
add
add
inc
clc
data16
pop
pop
mov
mov
inc
add
mov
jmp
lret
clc
or
out
sar
add
jbe
clc
sbb
clc
cmp
add
add
loop
pusha
add
mov
js
xlat
xchg
lret
leave
add
add
xchg
inc
clc
and
add
lods
cmp
or
stc
outsl
adc
add
clc
push
xchg
cmp
cmpsl
clc
rcll
dec
dec
ret
clc
lcall
das
dec
add
add
in
stc
mov
sahf
mov
ret
clc
insl
and
add
inc
clc
and
add
aaa
sub
repz
add
dec
iret
push
mov
add
gs
sub
mov
xchg
push
clc
loop
cmp
add
mov
add
cli
int
clc
nop
sbb
mov
add
pop
iret
cmp
add
call
and
mov
or
divl
add
pop
xbegin
gs
xchg
and
add
push
add
cltd
scas
jle
cmp
add
lret
jno
add
push
add
xlat
fs
sar
stos
mov
add
clc
cmpsb
clc
fs
inc
add
aad
cmp
ds
call
daa
clc
push
clc
fists
push
add
xchg
test
add
lea
add
or
dec
or
add
push
dec
sbb
push
add
cltd
dec
push
xabort
clc
mov
ret
enter
clc
or
ret
dec
lahf
popf
mov
push
in
cld
lahf
sbb
pop
clc
int
mov
insl
inc
add
lret
add
add
sub
jns
and
add
jne
fstpl
dec
push
add
stc
fldcw
clc
imull
clc
out
cmp
nop
sub
add
add
pop
cmpsb
clc
sub
xabort
add
or
add
out
aas
ret
or
add
mov
add
add
mov
clc
jecxz
cmpsl
clc
pop
ljmp
add
bound
add
clc
push
add
fisttps
mov
or
clc
test
es
add
cmc
push
mov
rolb
popf
int3
jns
sbb
add
mov
clc
mov
mov
fwait
or
test
cmp
clc
and
clc
fdivr
mov
add
add
mov
mov
add
pop
adc
add
hlt
push
clc
movsl
clc
repnz
jo
add
jns
in
or
add
data16
jne
cld
sbb
js
sub
data16
xbegin
cmp
test
and
add
add
mov
add
inc
clc
add
lahf
clc
es
aam
sub
clc
or
shr
call
clc
and
mov
sub
or
clc
or
mov
xor
add
add
add
aaa
fwait
sar
mov
or
add
mov
add
fisubl
add
ja
clc
adc
add
add
mov
clc
cmp
int
add
inc
clc
lahf
pushf
cmp
push
pop
fstps
scas
std
stc
and
imul
add
popf
mov
clc
arpl
add
xchg
mov
ja
jp
add
mov
xor
lcall
cmp
clc
addr16
cmp
movsb
clc
mull
inc
add
inc
add
pop
clc
jl
clc
std
xbegin
in
or
insb
mov
repz
clc
ja
add
not
cmp
fwait
dec
div
das
je
cli
daa
clc
and
push
inc
add
out
js
pop
clc
mov
pop
mov
fcompl
adc
add
stos
bound
add
or
mov
clc
push
add
dec
in
lret
dec
pop
clc
cli
sub
clc
sti
std
das
pop
clc
cmp
clc
jge
clc
push
add
sub
pop
cmc
push
add
out
push
adc
sbb
out
dec
xor
add
add
gs
or
jb
add
shl
clc
lock
pop
ret
clc
lret
xlat
sbb
pusha
add
data16
call
jae
add
xor
add
pop
jge
add
call
arpl
add
mov
cmp
inc
clc
mov
rorb
add
clc
add
add
in
insl
out
sub
add
xchg
in
pusha
add
mov
dec
and
add
lcall
clc
rolb
mov
mov
ret
clc
add
add
icebp
popa
add
cltd
cmpsb
clc
data16
scas
cwtl
outsb
pop
sbb
outsb
hlt
sar
add
sub
clc
ret
imul
add
cwtl
jb
add
pop
mov
add
aas
fildl
add
clc
or
inc
add
jmp
add
add
add
sahf
fiaddl
mov
cmpsl
clc
lcall
adc
clc
popa
add
mov
fnstcw
add
xchg
leave
push
add
int3
imul
pop
or
cmp
or
pop
clc
mov
clc
or
dec
mov
arpl
add
sbb
clc
or
ficompl
add
ret
clc
adc
add
clc
push
add
je
es
in
movsb
clc
xchg
adc
add
clc
xor
insb
clc
mov
xchg
push
clc
sti
push
inc
add
sub
sar
clc
ja
clc
sahf
jb
add
sahf
xchg
lahf
pop
inc
add
sarb
push
clc
enter
es
adc
add
mov
clc
ljmp
seta
add
mov
add
add
loopne
pop
addr16
xbegin
clc
outsb
mov
pop
sbb
mov
ret
jecxz
inc
clc
ret
clc
mov
clc
xchg
add
add
shlb
leave
rclb
mov
add
add
int3
push
add
push
clc
xor
add
cltd
push
clc
jae
add
clc
pop
fwait
loopne
jecxz
imul
cmc
jg
leave
movsb
clc
or
mov
push
popf
xchg
mov
add
sub
popa
add
jnp,pt
das
push
out
xchg
sbb
add
fidivl
add
icebp
xlat
sbb
scas
cli
xchg
sar
add
sahf
mov
add
push
cltd
sub
add
adc
inc
add
lret
clc
adc
add
sbb
pop
jne
clc
iret
insb
mov
cmp
push
cmpsb
clc
dec
ds
testl
aaa
lcall
movsl
clc
inc
add
cmp
lret
add
enter
xabort
clc
and
add
sti
gs
aam
sar
jge
mov
arpl
add
clc
fldt
cmp
adc
inc
clc
cwtl
push
add
push
add
sahf
jl
outsb
mov
sub
push
pusha
add
pop
cmp
psubusb
mov
js
add
xor
add
push
clc
divl
add
mov
adc
add
pop
inc
clc
sar
add
pop
jl
clc
push
add
adc
clc
mov
clc
add
add
fisttps
dec
dec
into
cs
add
push
mov
xor
dec
in
cld
xchg
inc
add
stc
dec
xor
add
add
add
clc
aam
sbb
add
out
xchg
adc
add
add
add
add
es
pop
dec
ret
inc
add
mov
add
mov
add
jo
add
scas
and
mov
inc
add
jns
clc
das
xchg
or
jne
dec
pop
and
inc
clc
or
mov
xor
add
add
adc
add
add
clc
fs
sti
and
add
inc
add
iret
pop
adc
add
ret
clc
fdivrl
iret
or
jnp
add
jo
add
movsb
clc
xlat
mov
loope
ja
add
xchg
xor
popf
bound
add
add
clc
add
add
jge
clc
push
scas
xchg
cmp
or
lea
add
nop
jmp
push
add
fbstp
clc
pop
ret
clc
bound
add
add
and
add
clc
iret
lahf
clc
push
add
inc
clc
popa
add
dec
stos
xor
sbb
add
sbb
add
add
cmp
add
fstps
jle
inc
add
inc
add
gs
addr16
xlat
sti
mov
clc
jmp
clc
dec
js
xor
add
dec
cs
add
jnp
clc
cmc
jp
clc
add
add
clc
int
lods
in
scas
fmull
mov
loope
jge
clc
sbb
clc
call
mov
clc
fidivrl
clc
jmp
adc
add
add
loope
testl
repnz
ja
jne
clc
pop
and
add
clc
mov
js
je
add
mov
and
clc
add
inc
add
test
stos
loopne
push
add
cld
ss
add
inc
add
je
inc
clc
ja
sti
add
adc
add
mov
cmp
sbb
jo
add
add
push
add
sarb
add
jl
cmp
popa
add
mov
clc
add
add
fwait
dec
add
add
add
bound
add
mov
fisubs
mov
sar
out
arpl
add
clc
mov
adc
add
loopne
jp
jb
add
mov
add
mov
adc
sbb
mov
lret
sbb
clc
sar
cmc
jns
pop
lock
add
pop
sbb
int3
mov
inc
clc
fwait
xchg
mov
insb
cltd
inc
clc
out
stc
imul
mov
clc
out
mov
add
clc
incb
add
pop
sub
add
pop
in
mov
sbb
int
test
int3
bound
add
clc
xabort
and
add
clc
mov
inc
clc
movsl
clc
lea
add
push
outsb
inc
add
and
add
add
ret
clc
sub
clc
sbb
leave
mov
pop
clc
push
pop
jle
hlt
mov
add
pop
cmp
data16
mov
add
hlt
and
add
clc
loopne
test
sar
xor
fs
pusha
add
jl
add
shrb
imul
push
hlt
lea
idiv
sub
mov
push
jmp
push
dec
loopne
sub
ss
js
iret
push
mov
clc
cmc
pop
jae
add
cmpsl
clc
xabort
add
dec
ret
clc
out
sahf
sub
add
xchg
dec
aam
xor
push
cmp
sub
add
movsl
clc
cmp
xchg
stos
jp
clc
cltd
inc
clc
fisubrs
ljmp
push
ret
clc
push
dec
scas
xchg
aad
clc
sub
adc
cmp
xchg
xchg
inc
add
pop
pop
clc
jmp
clc
rclb
js
clc
std
lods
inc
add
mov
add
insb
xchg
repnz
mov
stos
test
or
clc
daa
clc
ret
pusha
add
test
adc
add
mov
push
clc
insb
test
jmp
pushf
dec
mov
jge
fs
jb
add
add
pop
cmp
add
pop
dec
ss
add
out
jb
add
add
jbe
mov
pop
sub
clc
or
ret
clc
inc
clc
clc
test
lcall
add
push
add
je
mov
mov
jb
add
mov
add
sub
clc
and
add
add
popa
add
sbb
clc
xlat
jp
clc
xchg
mov
repnz
nop
insl
push
fidivl
add
test
test
and
add
add
clc
pop
cwtl
mov
xchg
loopne
xbegin
inc
clc
lret
lods
loopne
popa
add
xchg
sarl
add
push
add
out
mov
dec
cmc
push
clc
fadds
clc
fabs
clc
jge
clc
out
aam
jne
inc
add
aad
clc
ja
loope
mov
adc
add
clc
mov
in
push
add
pop
push
add
scas
rorb
add
or
add
sub
push
pop
clc
mov
clc
lret
jmp
pop
js
fsts
xchg
clc
in
sub
mov
xchg
imul
clc
rolb
add
repz
adc
add
xchg
inc
add
ss
add
cmp
jae
add
cmpsb
clc
mov
bound
add
add
xchg
and
add
clc
and
add
add
pop
test
aad
ficompl
push
ja
add
testb
add
push
mov
clc
sar
outsb
jg
and
aaa
xor
add
mov
loope
mov
clc
pop
das
dec
or
hlt
jle
cmp
mov
xchg
push
add
sahf
xor
add
test
xchg
pop
sub
add
movsb
clc
mov
icebp
lahf
xor
hlt
push
or
cmc
push
add
mov
clc
and
add
add
out
push
mov
pop
mov
iret
out
jns
insl
push
jbe
mov
add
fists
add
xchg
push
outsb
and
add
sub
pop
popa
add
push
out
cld
shrl
add
or
dec
ds
filds
clc
cmpsb
clc
stos
pop
sar
data16
adc
add
adc
add
add
add
add
fdivrs
cwtl
xor
add
add
or
adc
add
push
xchg
push
icebp
jmp
hlt
jo
add
clc
sbb
sbb
pop
inc
clc
dec
jns
clc
lock
jo
add
cmp
lods
push
pop
add
add
clc
neg
inc
clc
bound
add
add
mov
dec
ljmp
idivb
cmp
scas
pushf
or
sbb
push
xabort
clc
dec
jge
xor
add
fadds
add
loop
movsl
clc
test
sub
cmp
call
dec
or
add
add
es
adc
add
and
add
xchg
loop
jmp
fs
std
mov
add
add
jne
add
clc
mov
dec
xor
add
add
ljmp
outsl
mov
into
arpl
add
add
add
mov
mov
inc
add
sar
jp
or
or
add
sahf
testb
push
jge
add
adc
add
add
cs
push
add
pop
cmp
clc
cmp
mov
and
add
add
es
push
add
mov
add
dec
mov
adc
and
add
sub
sub
pop
adc
negl
xchg
data16
ret
clc
jmp
add
and
lahf
jno
add
idiv
out
bound
add
call
fiaddl
shll
rcrl
clc
or
cltd
mov
clc
or
clc
inc
clc
mov
xchg
sbb
clc
sar
outsl
inc
clc
aam
clc
ss
leave
scas
repnz
xchg
fidivrs
pop
mov
cltd
sar
sbb
clc
add
add
shrb
pop
and
incb
stc
lods
bound
add
clc
and
add
clc
push
sahf
into
or
clc
jg
icebp
fidivl
add
inc
add
mov
or
add
cmp
incb
clc
mov
clc
in
fsubrl
ds
add
adc
add
add
pop
pop
jg
clc
lcall
dec
lock
mov
jb
add
nop
cs
add
fadd
clc
cli
bound
add
clc
and
clc
push
xchg
pop
push
js
add
xor
clc
inc
clc
test
fs
inc
clc
fwait
stc
aam
sahf
adc
add
ljmp
mov
pop
popa
add
out
push
add
mulb
clc
movsl
clc
inc
add
xlat
or
and
add
clc
scas
idivb
add
add
inc
add
inc
clc
rorb
cmp
sti
push
sbb
add
mov
clc
pushf
pop
clc
add
add
clc
cmp
clc
test
clc
sub
jge
clc
into
inc
add
mov
add
dec
jmp
fmul
push
add
inc
clc
mov
add
mov
clc
cmc
xor
add
or
clc
mov
xor
add
inc
add
jle
add
cmpsl
clc
inc
clc
icebp
imul
dec
lea
ja
cli
xor
sub
clc
out
jp
gs
aaa
in
push
in
xlat
mov
clc
lcall
in
and
add
add
clc
pop
pop
frstor
clc
push
dec
je
push
xchg
xchg
and
add
mov
clc
loopne
cmp
jle
cmp
add
pop
cwtl
ja
pop
or
add
add
sbb
bound
add
dec
mov
mov
add
xchg
fists
inc
clc
dec
into
int3
cmp
add
push
xchg
mov
sti
and
push
scas
jg
clc
shrl
sbb
pop
add
or
in
mov
aas
jle
xchg
dec
or
clc
cmpsb
clc
jno
add
rclb
mov
lret
mov
loope
push
add
cmp
lret
push
clc
pop
lods
sbb
clc
lret
mov
mov
push
clc
in
je
je
ds
test
sub
add
adc
add
clc
ror
cmp
add
add
xchg
push
sar
inc
add
add
add
dec
pop
call
insb
inc
add
push
dec
data16
lods
outsb
out
cmc
push
sar
adc
cmpsl
clc
jae
add
xor
add
sub
xor
add
xlat
push
adc
add
add
add
cmpsl
clc
nop
inc
add
push
clc
xchg
das
adc
add
clc
mov
into
jno
add
add
push
add
out
sub
add
loopne
sti
aad
pop
popf
scas
ds
add
mov
inc
clc
add
xchg
inc
add
mov
clc
icebp
add
rolb
add
stos
or
outsb
jbe
es
and
add
stos
lods
pop
mov
clc
mov
xchg
dec
lret
dec
mov
clc
cmp
mov
add
pop
sarl
add
push
pushf
dec
arpl
add
dec
cmp
inc
add
enter
clc
dec
sub
push
add
jge
xabort
lret
dec
lret
or
and
add
fisubs
jp
clc
adc
add
sbb
out
fstps
out
lcall
add
xchg
stos
mov
mov
jmp
mov
test
jle
add
out
cmc
scas
jns
clc
lods
test
xor
add
sub
iret
cmp
clc
xlat
mov
pop
nop
ds
add
js
clc
ss
test
jne
loop
push
add
inc
clc
cld
imull
or
add
popa
add
and
add
hlt
popa
add
jne
add
inc
add
jmp
imul
cmp
mov
clc
aam
frstor
ret
clc
mov
pop
pusha
add
xchg
nop
insb
fldt
movhps
add
pop
xor
clc
mov
mov
pop
imul
fwait
inc
clc
jg
add
cmpsl
clc
adc
add
loop
dec
inc
add
push
pop
daa
clc
jo
add
shrb
clc
mov
dec
push
clc
jl
out
std
lahf
jo
add
clc
ret
clc
cmp
xor
add
das
mov
sub
bound
add
jecxz
add
adc
add
icebp
jae
add
add
xchg
xchg
scas
mov
xor
add
clc
inc
clc
xchg
mov
in
add
add
inc
clc
rorl
hlt
jg
in
cmp
clc
gs
iret
inc
add
xor
cwtl
sbb
xchg
mov
int
addr16
cmp
push
add
popa
add
out
adc
add
sub
add
mov
clc
insb
lret
inc
add
cmp
imull
pop
jmp
addr16
pop
pop
inc
add
stc
fs
out
mov
cld
stos
aas
mov
add
and
add
add
clc
inc
clc
fisttps
clc
inc
add
scas
or
je
add
mov
imul
clc
and
add
add
pop
clc
xchg
pop
clc
xchg
xor
addr16
sahf
sarl
outsl
mov
add
cmp
clc
push
add
loop
sub
add
add
xor
add
jge
sub
xor
add
mov
add
sar
insb
add
add
mov
jb
add
in
das
in
gs
pop
pop
pop
cmp
clc
or
add
inc
add
in
jp
add
push
lods
stc
inc
clc
push
adc
add
clc
mov
dec
push
clc
xchg
das
inc
add
adc
add
out
push
add
cmp
inc
clc
clc
mov
insb
dec
loopne
mov
inc
add
jns
xlat
imul
sar
jo
add
mov
pop
mov
sub
jg
clc
xor
add
add
mov
cmp
clc
cmpsb
clc
lret
rcr
fwait
mov
add
add
mov
add
add
outsl
sar
and
ljmp
jbe
dec
push
add
mov
mov
jecxz
ss
sti
push
and
add
mov
add
pop
icebp
mov
dec
aam
fistl
sahf
xchg
jp
dec
adc
and
add
das
cmp
scas
pop
jg
sub
nop
lcall
add
pop
mov
es
mov
mov
movsl
clc
imul
inc
clc
pushf
push
outsb
aaa
mov
pop
dec
inc
add
in
fiaddl
clc
data16
mov
xchg
mov
xchg
es
dec
mov
clc
call
fs
aas
mov
movsb
clc
jmp
icebp
imul
stc
push
ja
mov
add
jo
add
clc
sub
and
add
add
clc
sbb
cmp
xchg
push
add
inc
add
adc
mov
outsl
xchg
mov
lret
pop
adc
popa
add
ffreep
clc
adc
add
cs
xchg
lods
and
add
push
cs
mov
stc
inc
add
icebp
imul
clc
inc
add
lods
sub
in
xchg
movsb
clc
test
jne
dec
test
add
add
lret
jo
add
jmp
lret
clc
ret
out
pop
shll
add
xchg
addr16
stos
dec
ja
jns
jg
cmp
add
addr16
cli
xor
add
clc
cmp
clc
push
clc
adc
out
inc
clc
or
clc
jmp
rolb
sbb
es
fistps
ds
in
add
add
jne
clc
mov
clc
js
repnz
add
sub
shld
fistpll
ss
loopne
jle
clc
sub
hlt
or
jo
add
add
cmpsb
clc
loope
cmpsb
clc
inc
clc
inc
clc
mov
cmp
sub
add
xor
add
dec
lret
sub
clc
fwait
scas
sub
scas
or
sub
clc
cmp
imul
add
cmpsb
clc
cs
fwait
xor
add
clc
and
add
clc
push
add
jae
add
clc
push
daa
clc
mov
add
add
idivl
clc
fadds
add
mov
cmp
iret
popf
cmp
add
mov
clc
ljmp
lods
leave
sbb
ljmp
aaa
lcall
clc
pop
jmp
sbb
std
and
add
add
mov
add
xor
add
push
out
loopne
dec
inc
add
fnstenv
jmp
add
dec
xchg
push
add
hlt
and
add
fidivl
add
je
cmp
clc
and
add
add
sbb
clc
sub
add
lods
inc
add
sub
mov
test
jecxz
inc
clc
push
sarb
stos
jbe
xor
lcall
leave
sahf
lcall
add
enter
clc
gs
cmp
sub
add
add
add
in
jno
add
dec
test
and
add
add
add
add
cmp
clc
mov
push
dec
xor
add
inc
clc
pushf
iret
in
xor
add
add
mov
push
add
add
add
in
sub
inc
clc
clc
sbb
clc
pop
clc
or
imul
clc
add
fdivl
add
add
int
into
jb
add
pusha
add
test
imul
jl
dec
mov
add
push
pop
push
add
add
add
jae
add
insb
jo
add
dec
add
xlat
inc
add
cmp
cmp
clc
out
mov
clc
std
or
pusha
add
je
add
add
xbegin
mov
mov
fdiv
adc
fidivrs
lods
jle
clc
jg
clc
in
push
add
outsb
pop
push
add
add
add
xor
add
mov
mov
dec
xchg
imulb
outsb
inc
clc
outsb
fs
adc
add
clc
cmp
or
add
lea
ja
pop
es
loopne
cmp
push
scas
nop
in
fsub
clc
push
add
sbb
add
inc
clc
jmp
mov
test
mov
leave
sbb
or
jo
add
add
dec
xchg
out
into
mov
sarl
adc
enter
jg
clc
xor
clc
sbb
add
scas
or
cld
xor
add
cld
lock
add
mov
leave
pusha
add
mov
add
cwtl
mov
clc
dec
add
add
mov
dec
cmp
add
stos
jg
lock
pop
mov
clc
shrb
xchg
data16
imul
add
clc
fwait
push
ret
xchg
gs
jg
ret
outsb
xchg
ficompl
insl
or
test
add
test
fistpl
push
bound
add
clc
push
out
test
paddd
jp
push
clc
shrl
inc
add
pop
sub
add
add
add
xor
add
daa
clc
sarb
lahf
jp
cwtl
pushf
pushf
es
inc
clc
popa
add
cs
cs
aad
jmp
pop
pop
fisubrs
and
lea
movsl
clc
sbb
cmp
or
clc
jnp
mov
clc
xchg
and
add
clc
jge
clc
repz
in
dec
cld
jge
clc
notb
add
movsl
clc
jmp
push
add
iret
and
add
jo
add
loope
xlat
rcr
jl
xor
add
clc
cmpsb
clc
imulb
cmp
aam
sar
in
sub
add
jns
clc
stos
popa
add
push
add
pop
pusha
add
mov
ret
clc
js
add
mov
push
add
rolb
add
and
sbb
clc
xchg
dec
mov
clc
inc
add
popl
add
push
jge
clc
or
aam
cmp
jo
add
ret
clc
insb
fimuls
clc
sub
bound
add
dec
test
cs
clc
or
add
add
in
lcall
xabort
add
jl
loopne
rorb
scas
xchg
cmpsl
clc
in
add
add
aam
add
hlt
fsub
clc
xchg
das
ret
xor
add
push
clc
int
fsubr
sti
or
mov
insl
cmp
mov
add
mov
lcall
sti
in
jge
pop
stos
loope
pop
push
mov
add
sahf
add
add
add
in
push
fsubrs
or
lods
push
adc
cmp
add
clc
xchg
xchg
push
sub
add
adc
add
sar
fs
cli
packuswb
xabort
add
mov
insl
adc
xbegin
ret
clc
pop
insl
ds
cmp
clc
mov
add
jbe
clc
push
add
sarb
in
rorl
in
mov
add
mov
add
cmpsl
clc
push
add
dec
cmp
js
fistl
jmp
clc
or
ss
clc
sbb
nop
cmp
pushf
inc
add
lods
push
add
inc
clc
mov
clc
push
add
sbb
clc
jo
add
stos
push
stos
dec
jge
pop
div
sar
fmuls
pop
test
not
fs
mov
add
clc
dec
fsubr
and
pop
lahf
or
clc
xor
iret
cmc
fidivl
fadds
out
mov
xor
add
bound
add
fld
clc
xor
add
add
xor
add
add
ds
in
in
test
stos
and
cmpsl
clc
int3
pop
jl
xor
push
rorl
stc
iret
jo
add
push
add
cmp
mov
xchg
scas
bound
add
add
add
clc
popa
add
scas
pop
clc
jno
add
add
mov
pop
sub
clc
iret
lea
sub
aam
clc
push
add
aas
xchg
lahf
loope
stos
push
mov
cli
adc
add
ror
test
cmp
jnp
ds
push
pop
roll
add
push
cld
sub
xchg
sbb
cmpsl
clc
push
aas
sub
add
xor
clc
pop
push
test
and
add
add
xor
add
clc
movsl
clc
cmp
in
aaa
mov
add
push
add
push
mov
ds
sbb
inc
clc
sbb
adc
add
jnp
xbegin
jmp
clc
cmp
and
add
add
adc
add
or
lret
dec
dec
imul
add
aam
clc
add
add
add
mov
mov
add
pop
clc
clc
int
add
inc
clc
sub
test
gs
mov
jbe,pt
clc
cmpsl
clc
cld
scas
add
mov
sub
push
jo
add
add
dec
inc
clc
mov
mov
cli
inc
add
fwait
and
add
clc
add
sbb
imul
add
out
fcomi
outsl
mov
sub
clc
das
hlt
js
pop
sub
ffree
clc
dec
add
add
cmp
ss
rorl
add
gs
push
fildll
cmp
sub
and
xchg
setl
xchg
jbe
push
adc
sarb
add
das
call
fsubr
lods
pop
iret
stc
fcoms
add
clc
fisttpl
clc
sub
clc
mov
dec
or
pop
mov
jmp
clc
js
clc
scas
es
jbe
fsubrs
insb
inc
clc
mov
scas
sbb
in
dec
std
fucomp
lea
inc
add
or
or
clc
jecxz
pop
outsb
xor
pop
mov
shlb
clc
fnstsw
clc
out
pop
clc
mov
pop
repz
add
scas
sar
cltd
cmp
lea
add
inc
clc
adc
add
int
cmp
clc
xor
add
fldz
dec
je
cli
jecxz
cmpsl
clc
out
testl
jp
clc
xor
mov
push
mov
or
fiaddl
add
movsl
clc
imul
cmp
ret
clc
sbb
vunpcklps
xabort
ret
clc
mov
test
jle
fnsave
mov
lahf
fldl
xlat
fcmovnu
cmp
or
add
mov
or
into
mov
add
pop
fnstcw
clc
adc
add
inc
add
sub
add
mov
xabort
addr16
notl
add
mov
mov
add
add
jns
ja
push
add
cmp
add
out
test
push
jno
add
jmp
add
std
sar
and
add
repz
mov
jo
add
pusha
add
mov
cmp
addr16
stos
test
jns
cmp
sub
clc
add
xchg
sahf
and
add
das
or
clc
outsb
add
add
jae
add
into
out
sbb
add
and
sti
mov
in
cwtl
cmpsb
clc
jne
mov
pop
mov
jge
xchg
xor
add
clc
push
add
mov
add
sub
aad
mov
xor
add
clc
jne
pop
pusha
add
test
adc
add
add
sti
icebp
mov
clc
mov
stos
or
xor
add
inc
add
push
clc
sar
or
fldt
stos
mov
stos
inc
clc
filds
clc
std
push
add
loope
je
es
in
insb
mov
icebp
pop
repnz
fistpll
clc
xabort
ss
mov
add
filds
xabort
clc
idiv
xchg
mov
insl
mov
add
clc
inc
clc
xchg
adc
clc
cmpsl
clc
sti
cmc
cmp
test
sub
insl
adc
lods
push
clc
xbegin
ljmp
lock
stos
cmp
rorl
ljmp
insl
dec
mov
clc
cmp
clc
fdivp
jp
movsl
clc
dec
loop
cmpsl
clc
lcall
out
inc
add
xchg
shlb
clc
insb
das
pop
lahf
hlt
lret
dec
xor
add
add
sbb
add
add
clc
pop
mov
clc
mov
fimuls
push
add
rol
clc
fsubr
aam
or
or
ja
sbb
add
cmp
and
add
add
test
mov
add
insb
fsubs
adc
jl
clc
push
cli
mov
das
fdivp
in
mov
add
jne
outsl
shr
movsl
clc
push
inc
clc
and
add
in
adc
clc
inc
add
ljmp
aam
aam
sahf
cwtl
xchg
cmp
bound
add
push
add
fidivrs
add
lcall
add
cmp
pop
pop
pusha
add
jbe
add
in
aaa
fcomps
ljmp
setl
outsb
lcall
mulb
add
xor
add
pop
jb
add
jle
mov
mov
repnz
outsb
mov
rcr
mov
out
xchg
fdivrs
data16
cmpsb
clc
sub
imul
clc
out
xor
add
add
fdiv
adc
add
daa
clc
sar
add
dec
inc
add
out
and
add
inc
clc
xchg
outsl
sub
mov
xchg
push
cs
add
inc
clc
call
cmpsl
clc
push
fadd
clc
add
add
clc
and
add
or
push
es
add
add
scas
ret
clc
lea
mov
sub
leave
in
outsl
js
and
es
xabort
xchg
xor
add
jbe
xor
add
cmp
jmp
clc
adc
add
clc
adc
add
pop
clc
xchg
pop
lret
pop
test
ds
jno
add
aam
clc
xchg
movsl
clc
mov
mov
clc
sbb
add
data16
je
clc
fiaddl
add
bound
add
daa
clc
fildl
pop
pushf
fs
hlt
test
nop
sti
adc
add
jle
clc
mov
clc
loop
mov
clc
int3
iret
push
mov
clc
arpl
add
mov
popa
add
xor
add
bound
add
insl
xchg
mov
clc
in
cli
je
in
and
add
dec
mov
inc
add
and
sar
dec
mov
mov
nop
movsl
clc
xchg
outsl
xor
add
dec
mov
aam
jo
add
add
dec
push
add
mov
out
mov
and
add
lods
out
pushl
decb
xchg
pop
pop
mov
clc
cmp
enter
xchg
xchg
popf
cmp
clc
and
add
inc
clc
lcall
jae
add
mov
sbb
xchg
cmpsb
clc
clc
xor
pop
pop
sbb
add
clc
lods
mov
out
inc
add
addr16
mov
sbb
movsl
clc
push
lcall
clc
mov
clc
jle
add
mov
in
test
push
aaa
add
add
jne
jmp
add
data16
mov
clc
out
inc
clc
jg
ja
clc
or
add
test
fwait
inc
clc
bound
add
das
mov
mov
jo
add
clc
push
add
dec
outsb
scas
mov
dec
inc
clc
xchg
mov
dec
sub
fildll
faddl
add
sbb
mov
add
fwait
add
add
and
add
push
sbb
repnz
push
add
xabort
xor
add
popa
add
xchg
gs
inc
add
and
add
add
add
add
add
add
add
pushl
add
arpl
add
clc
jle
clc
rcrb
arpl
add
add
mov
and
add
cwtl
and
add
ret
clc
jbe
clc
insb
cmp
clc
xor
add
dec
jo
add
xchg
clc
in
or
or
add
add
je
iret
or
repnz
in
loop
mov
add
add
sbb
imul
mov
out
xor
add
clc
shrl
add
clc
add
add
clc
call
hlt
fsts
sti
jp
int3
es
or
clc
movsl
clc
xchg
adc
add
xor
cmpsl
clc
mov
shl
ljmp
inc
add
clc
pop
test
dec
and
add
clc
jmp
sbb
mov
cmp
clc
hlt
mov
icebp
mov
add
clc
inc
add
ret
clc
cwtl
xlat
pop
out
cwtl
mov
mov
mov
outsl
xlat
rorl
push
jl
clc
aam
imul
clc
xchg
mov
mov
add
add
dec
add
add
push
sbb
lock
sbb
dec
inc
add
and
add
inc
clc
pusha
add
pop
insl
push
clc
lcall
add
mov
push
dec
fidivrs
ljmp
enter
inc
add
pop
daa
clc
sti
mov
clc
jle
clc
push
mov
cmp
clc
or
aas
jno
add
add
mov
sub
arpl
add
xabort
clc
pushf
xchg
fwait
sbb
clc
mov
mov
add
cmp
shr
mov
repnz
jnp
jns
adc
add
outsb
adc
add
clc
jnp
call
sbb
into
mov
mov
clc
xor
add
lea
add
push
imul
add
add
sahf
and
add
xlat
cltd
js
add
or
clc
aaa
xor
clc
iret
cmp
clc
ljmp
push
pop
lock
clc
vsqrtps
add
add
add
clc
cltd
mov
jmp
clc
mov
clc
xchg
sbb
clc
lret
jl
pushf
push
not
cmp
inc
clc
stos
popa
add
jbe
neg
lock
cli
bound
add
add
fisubrl
bound
add
mov
clc
inc
clc
std
pop
scas
ja
pop
cmpsl
clc
add
add
or
push
sar
jne
clc
pusha
add
iret
stc
xchg
mov
notl
add
xor
shrl
mov
clc
xabort
add
iret
lea
jle
push
add
add
add
popl
add
out
jb
add
add
add
outsb
stos
pushf
hlt
js
xchg
mov
xor
add
sub
add
out
inc
add
sbb
icebp
movsl
clc
ret
add
and
add
test
add
add
add
add
dec
cwtl
mov
clc
inc
add
fwait
mov
call
clc
ret
clc
xchg
rorb
xchg
push
add
hlt
or
clc
mov
call
clc
push
add
pop
jno
add
clc
lcall
and
add
clc
popa
add
mov
loope
and
add
add
fsubr
cmp
cmp
scas
movsb
clc
aaa
jp
jb
add
add
cmp
into
add
add
es
movsb
clc
cmp
inc
clc
outsl
sbb
add
clc
pop
sub
movsl
clc
ds
add
cmpsb
clc
ss
xchg
xchg
lods
sar
sbb
aam
dec
cli
pop
mov
add
iret
mov
dec
xor
test
sub
sbb
mov
clc
add
icebp
mov
fidivl
jge
sub
xchg
in
cmp
clc
cmc
sahf
jl
aas
cmpsb
clc
adc
jecxz
add
add
rorb
cmp
add
ss
push
ljmp
adc
add
clc
xchg
jge
add
ss
jne
ljmp
clc
sub
jae
add
xabort
sub
fbld
in
cmp
ss
add
call
xor
add
imul
jne
clc
cmp
or
mov
mov
in
cmpsb
clc
clc
sahf
in
fs
sub
fsubrs
add
add
cmp
arpl
add
jmp
test
push
add
dec
adc
add
add
push
add
rorb
mov
bound
add
cmp
sar
add
mov
lods
outsl
xabort
cmp
mov
clc
inc
add
insl
je
arpl
add
clc
mov
adc
inc
clc
in
pop
xchg
mov
jecxz
cwtl
fs
sbb
cmc
clc
sub
sub
push
clc
movsb
clc
sti
cmpsl
clc
shr
xchg
pushf
sar
cmp
fildl
add
clc
call
dec
and
pop
cli
pop
mov
add
pop
clc
inc
clc
cmp
lods
iret
and
add
cmpsl
clc
mov
pushf
add
add
inc
clc
push
movsl
clc
loope
stc
sti
mov
sub
stos
jb
add
pop
sar
clc
xchg
into
lcall
dec
pop
aas
jbe
mov
add
add
in
rcrb
add
arpl
add
cwtl
scas
sbb
clc
cmpsl
clc
insb
cmp
sub
jb
add
jno
add
xchg
das
out
mov
add
clc
inc
add
stc
leave
loop
mov
push
mov
add
add
call
clc
pop
clc
dec
daa
clc
and
add
push
jne
add
add
clc
mov
dec
and
add
add
mov
dec
xchg
mov
mov
in
mov
add
ljmp
jns
clc
sbb
cmp
inc
clc
mov
add
enter
mov
add
dec
lea
add
add
jb
add
xchg
int
clc
mov
push
test
and
add
add
xchg
and
add
loope
rcr
cmp
cmp
gs
lea
mov
add
xchg
and
add
inc
clc
testb
pop
push
ds
clc
testl
add
sahf
aam
add
push
push
add
imul
push
add
into
fcoml
add
xor
add
clc
test
inc
clc
add
clc
fidivs
adc
add
add
add
cmp
clc
sbb
xbegin
xchg
cmp
add
mov
xchg
fbstp
add
adc
add
sbb
clc
mov
xlat
push
into
sbb
or
sbb
sub
add
jne
fnstsw
cmp
aad
push
test
and
add
iret
or
xchg
sahf
or
xor
add
aaa
data16
mov
popf
popf
mov
mov
idivb
test
sbb
jl
add
fstps
xabort
sbb
loope
dec
aam
insb
lret
add
scas
out
push
mov
icebp
push
fstl
add
pop
jmp
daa
clc
cwtl
sub
pop
xchg
adc
add
pop
clc
mov
clc
cli
scas
jnp
jnp
clc
pop
sbb
fisubrs
mov
xor
add
ja
xabort
inc
clc
add
adc
fistps
clc
inc
add
cmp
push
loope
mov
clc
mov
pop
sbb
mov
cmp
add
push
adc
add
mov
out
cmpsb
clc
dec
mov
mov
pop
adc
add
mov
clc
movsl
clc
lock
cmp
cmpsl
clc
and
add
clc
mov
dec
and
mov
clc
adc
add
sub
clc
cs
ja
divl
add
outsl
adc
add
add
add
pop
mov
and
ja
clc
push
stos
mov
xchg
xor
add
jno
add
mov
xchg
sbb
dec
and
add
add
fwait
add
add
clc
sti
cmp
or
add
or
mov
std
xchg
lret
clc
enter
add
xchg
add
add
ljmp
js
cmp
repz
sbb
add
or
add
mov
xchg
popa
add
sub
mov
push
lock
add
clc
cmp
add
and
add
cmp
xchg
pushf
popf
add
sbb
add
sub
rclb
clc
xor
stc
mov
fcomps
ja
idiv
loopne
ret
clc
and
add
or
clc
inc
clc
or
pop
mov
out
pop
arpl
add
xchg
ret
clc
imul
cmp
clc
mov
clc
test
ret
clc
repz
add
mov
cmp
xor
sub
add
cltd
mov
dec
pop
push
add
je
add
call
add
adc
add
add
leave
cmp
add
xchg
inc
clc
sub
aas
xor
add
popa
add
lcall
cmp
add
decl
sub
lret
imul
sub
adc
add
add
mov
add
add
je
push
scas
addr16
sub
incb
add
stos
inc
clc
mov
pop
jmp
cmp
xbegin
