fmull
dec
xor
mov
dec
mov
mov
mov
jge
add
rcll
in
cmp
cli
lret
mov
leave
add
mov
mov
rcll
push
add
add
leave
clc
dec
sbb
add
rolb
movsb
add
pop
add
add
dec
ret
nop
add
push
add
add
pop
mov
inc
add
xor
mov
or
arpl
pop
out
loopne
adc
add
pusha
add
cmp
icebp
mov
add
dec
addr16
lea
insl
mov
dec
push
repz
mov
add
loope
add
aaa
lret
je
mov
lock
insl
pop
push
add
dec
lcall
arpl
rolb
fs
add
ja
insb
cmp
adc
test
addb
adc
or
and
and
push
add
insb
xor
add
fwait
ljmp
hlt
add
dec
lcall
add
dec
jbe
adc
fdivrs
sbb
dec
xchg
add
rolb
jle
cmp
aam
pop
sbb
xor
loop
dec
ret
add
addb
cmp
rolb
pop
fwait
mov
mov
icebp
les
in
leave
mov
aam
mov
sbb
or
cmp
mov
int
jmp
push
add
jl
add
test
lcall
pop
mov
sub
mov
add
mov
add
jnp
in
add
add
inc
clc
insb
std
sub
mov
xchg
add
add
stos
sarl
pop
aaa
mov
jns
sub
xlat
dec
pusha
add
mov
mov
pusha
add
jmp
add
dec
iret
fisubrl
lock
lahf
dec
popf
xor
jg
jae
add
pushf
aaa
movb
add
jp
mov
add
adcl
fldl
add
js
add
insb
add
popf
mov
add
pop
push
add
dec
inc
add
jp
push
add
mov
movsb
add
stos
pop
repz
push
and
mov
stc
loope
xchg
add
fsubrs
push
add
les
lret
insl
sub
add
mov
xchg
pushf
jnp
hlt
add
mov
add
mov
sbb
push
xorl
and
mov
mov
cwtl
pop
xchg
add
sti
lahf
out
mov
xor
add
mov
testb
popa
push
add
ljmp
jp
pop
out
enter
adc
adc
outsl
xchg
bound
mov
movb
push
jns
add
jnp
add
push
addb
add
sbb
int3
ja
nop
add
ret
add
inc
addr16
push
sub
add
push
dec
pop
test
adc
mov
shlb
inc
data16
push
mov
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
jmp
dec
push
add
adc
addb
add
jg
stos
mov
add
add
loope
daa
add
mov
mov
push
add
bound
mov
lcall
cs
cmp
jl
ret
add
int3
enter
pop
cmp
pop
jl
mov
aam
or
mov
mov
add
mov
mov
jmp
add
add
add
jo
dec
jno
sbb
enter
mov
push
add
jmp
add
push
fstp
aas
cld
add
mov
daa
fimull
pop
std
or
add
add
in
lret
add
stos
sbb
add
add
icebp
movsb
add
add
pop
sbb
sub
or
add
js
cmc
notl
cmp
add
add
xchg
jg
ret
inc
xor
into
stc
jo
fldcw
in
pop
dec
cmp
mov
js
add
ret
xor
cmc
push
shll
arpl
add
testb
pop
nop
add
fnsave
lods
push
add
add
or
out
mov
add
jecxz
push
add
test
mov
movsb
add
or
inc
add
call
bound
mov
adc
roll
or
mov
xchg
cmpsb
add
or
addr16
add
inc
add
xchg
in
mov
lock
xor
flds
aas
jp
sbb
insl
xchg
add
jg
pop
iret
adc
adc
popf
mov
cmpl
add
test
jmp
mov
add
jmp
add
ficomps
int3
push
dec
add
jb
loopne
sbb
add
add
mov
add
add
mov
sub
inc
add
mov
add
add
add
in
shll
mov
jo
cmp
push
pop
inc
cmpsl
movsl
sub
mov
loopne
paddq
and
and
sub
inc
xchg
add
cli
xor
add
push
add
lahf
push
nop
add
xor
call
add
cmp
loope
add
lcall
add
mov
add
out
pop
sub
add
add
add
jmp
addb
add
dec
imul
fists
in
inc
add
lods
push
adc
add
xor
jl
call
add
mov
ret
ret
add
add
in
add
mov
cld
mov
popa
cld
addb
sbb
clc
mov
mov
or
add
mov
add
add
stos
sub
add
xor
add
add
mov
push
scas
scas
xor
mov
push
xchg
add
and
dec
insl
push
add
aad
out
xchg
pop
iret
test
jns
rorl
add
add
add
enter
pop
ljmp
arpl
mov
lret
lahf
and
mov
mov
sub
add
inc
add
push
bound
mov
inc
add
add
xchg
add
pushf
dec
and
add
repz
jo
add
nop
add
add
add
add
mov
push
xor
sub
add
pop
push
mov
popf
pop
or
mov
push
xor
mov
or
mov
add
cmpsl
hlt
add
data16
clc
pop
in
stc
iret
sbb
add
push
add
movb
scas
movb
lahf
add
lea
or
sub
mov
add
lcall
jne
cmc
cs
add
push
add
add
cmp
and
jecxz
pop
inc
add
enter
testb
adc
add
fwait
lods
aas
push
cmp
les
dec
xchg
add
add
add
mov
mov
clc
mov
sub
mov
jns
cld
cwtl
mov
dec
les
jmp
and
add
sbb
mov
filds
push
add
push
add
add
mov
fnstcw
add
mov
repz
adc
add
add
jmp
add
jg
add
mov
in
hlt
add
js
add
lahf
testl
lahf
stos
sub
pop
adc
sbb
outsl
mov
add
mov
fists
add
push
pop
gs
lods
loop
pushf
and
cmp
mov
cltd
iret
pop
xchg
add
add
gs
add
add
movsl
or
imul
add
popa
inc
pop
nop
add
mov
add
add
mov
test
cmp
jne
mov
cmp
add
mov
push
push
add
sub
xor
data16
add
add
push
xchg
ficompl
addr16
pop
add
add
mov
pushf
ret
add
mov
js
test
lds
stos
mov
fwait
xchg
add
cmpl
inc
add
push
lock
add
stos
lds
pusha
add
jae
or
jg
add
push
push
ljmp
aaa
dec
push
add
add
mov
ret
add
add
adc
mov
sbb
xor
ret
stos
pop
inc
add
mov
lcall
ljmp
add
lods
push
xor
sahf
add
sbb
add
xchg
adc
testb
ja
sti
or
add
mov
mov
xor
xlat
push
add
ja
xchg
add
ljmp
les
aam
out
les
fidivrl
imul
add
or
add
and
nop
add
add
ror
jnp
nop
add
add
add
movsb
add
jge
add
popa
testb
sub
jae,pn
iret
lcall
pop
leave
push
add
rcrl
sti
fdivl
dec
add
test
outsl
mov
mov
lret
add
rcrl
rolb
lret
add
jb
pop
bound
mov
push
add
push
add
sub
iret
mov
sbb
add
loopne
cmp
movsl
push
mov
xlat
arpl
add
add
rolb
xor
sub
add
jb
pop
out
sarl
ljmp
sbb
repnz
add
lret
add
add
popa
lahf
ficoml
or
jae
add
xchg
cmpl
out
in
mov
xchg
add
pop
sub
add
xchg
add
and
pop
jle
add
dec
xchg
add
mov
rcl
add
pop
stc
lock
xchg
add
mov
push
add
mov
addb
xor
fmull
cmp
mov
add
or
cmpsb
add
add
jno
les
ret
movsb
add
add
mov
add
mov
pop
daa
loope
add
mov
adc
add
add
jns
add
xor
les
mov
arpl
add
mov
sahf
add
add
lods
stos
incb
mov
mov
jbe
inc
pop
pop
loopne
movsl
jns
addr16
aaa
or
daa
ja
inc
add
out
push
add
sarl
push
add
jno
add
aam
pop
fstp
lock
cmp
add
add
cmp
add
test
mov
or
adc
xor
add
jmp
daa
icebp
push
add
dec
sub
add
ret
cmpsl
xchg
xchg
xor
imul
test
les
cltd
mov
mov
rcll
sbbl
add
add
fldcw
add
ficomps
lret
push
dec
adc
add
sub
in
add
mov
or
lret
or
push
add
fwait
sbb
dec
or
dec
add
mov
sub
add
mov
repz
cwtl
inc
mov
inc
add
add
lods
in
jb
cli
lea
test
int3
jg
pushf
jns
jb
add
add
xchg
add
dec
or
int3
testb
test
or
xor
add
subl
sbb
xchg
jo
jg,pt
repz
jb
popf
shll
dec
cwtl
mov
out
jl
lcall
dec
rolb
lods
cmc
bound
mov
add
add
add
popf
xchg
shll
add
loope
add
rcll
sub
imul
dec
mov
add
add
xlat
dec
mov
mov
jg
imul
movsl
inc
add
add
or
add
int3
xor
arpl
stc
cli
push
add
popf
inc
ret
mov
push
add
jno
or
and
shll
add
lds
add
mov
add
mov
pusha
add
addr16
loope
dec
push
add
mov
add
repz
outsb
dec
cmc
rolb
fndisi(8087
dec
roll
pop
dec
cmp
mov
mov
jl
cmp
aad
add
mov
daa
pop
sti
cmp
add
add
xor
sbbl
inc
mov
adc
aaa
shl
add
fisttpl
xchg
enter
fnstenv
pop
push
adc
leave
scas
fisubs
add
decb
push
add
jae
pop
clc
in
cmp
repz
add
or
dec
jne
hlt
add
imul
insl
iret
clc
xor
add
dec
push
add
pop
fisttpll
popa
adc
addr16
adc
rcrl
stos
test
pop
adc
cmpsl
aam
loopne
sbb
mov
enter
pop
imul
cmc
loopne
and
add
insb
insl
adc
lds
lret
cmpsb
add
inc
add
hlt
add
std
push
add
into
pop
sbb
stc
or
add
or
add
in
stos
test
pusha
add
testb
das
add
xor
testb
add
mov
xchg
add
add
and
cmp
add
mov
add
dec
stos
testb
cmp
mov
fs
xor
test
in
or
ljmp
xchg
add
pop
push
lds
sub
add
lods
cli
sbb
sub
add
and
and
dec
lods
ljmp
add
addb
sbb
sbb
xor
push
mov
add
mov
add
mov
movb
ja
add
mov
movsb
add
leave
jmp
adc
stos
clc
lock
testl
xor
add
inc
add
idivl
shll
add
add
adc
push
test
add
xchg
lcall
sbb
add
movb
movsl
mov
add
jmp
add
dec
jp
and
std
mov
sbb
sub
outsb
pop
test
out
cs
add
test
add
stc
dec
adc
addb
out
lcall
sub
inc
add
and
or
inc
rolb
add
sbb
add
and
sahf
sub
push
add
add
pushf
pop
xor
into
adc
pop
fwait
lret
out
loopne
mov
ret
test
push
add
sti
addr16
lea
cmc
xchg
add
mov
add
in
imul
add
aas
lcall
add
xor
mov
mov
insl
and
mov
add
add
mov
data16
adc
cwtl
in
shll
xchg
fcoml
xor
call
push
xchg
jbe
pop
xchg
pop
ljmp
out
out
lea
add
clc
xchg
or
add
test
rolb
adc
jmp
nop
add
xor
test
pop
push
sub
xchg
add
add
lock
pop
adc
movsl
loop,pt
pop
mov
sbb
inc
add
mov
bound
mov
jmp
xchg
iret
mov
sub
inc
mov
or
negl
pop
iret
xchg
add
sub
mov
data16
bswap
sbb
mov
in
add
add
cli
movsl
movsb
add
xlat
xchg
jmp
mov
pop
adc
add
cmp
adc
movsb
add
inc
add
add
hlt
add
ja
cltd
adc
push
movsb
add
add
out
mov
rolb
sub
insb
fs
dec
dec
xchg
add
cmp
dec
stos
rolb
adc
and
outsb
mov
dec
sbb
push
add
add
xchg
jo
icebp
dec
xchg
add
add
push
sub
jg
outsl
pop
add
adc
jmp
cmc
lahf
jns
push
mov
sub
sub
lock
jae
add
xchg
dec
pop
aad
rolb
aaa
in
add
popf
aaa
mov
adc
hlt
add
or
into
stc
pop
add
mov
add
out
add
test
push
cmp
mov
jne
add
aas
pop
push
lods
jns
sbb
add
add
cmc
bound
mov
add
add
mov
aam
ret
push
repnz
jp
mov
hlt
add
push
pop
mov
mov
add
in
ret
dec
jbe
rcll
inc
dec
ljmp
call
ret
enter
push
add
jmp
adc
push
add
in
stos
and
test
push
add
add
and
add
movsb
add
mov
xor
add
mov
mov
add
inc
add
sbb
lds
aas
addb
fdivp
push
xlat
ljmp
jmp
cmp
mov
mov
cmp
and
jl
in
mov
testb
jmp
loope
fidivs
in
mov
add
add
sbb
fdivrs
sbb
add
add
in
push
add
push
movb
std
je
and
in
and
sahf
mov
add
jmp
push
add
movsl
or
stc
addl
repz
add
add
movb
add
mov
mov
leave
adc
cmp
imul
pop
mov
and
add
testb
xchg
add
mov
add
imul
sub
pop
ja
add
bound
mov
add
mov
pop
dec
movb
add
lods
imul
lods
dec
ljmp
scas
out
add
aaa
inc
add
cmp
inc
add
xor
int
add
and
add
repnz
inc
add
add
pop
aam
xchg
movb
loopne
loope
pop
aam
fmuls
fucomip
fwait
mov
add
add
loop
add
not
ret
popa
dec
data16
add
xor
fcompl
add
add
add
add
add
inc
stos
sub
xlat
sbb
add
shll
add
mov
nop
add
add
add
add
pop
sbb
mov
add
add
xchg
sub
fcomip
loopne
adc
xchg
push
and
mov
or
cwtl
loop
int3
sub
iret
sbb
sahf
pop
loopne
inc
add
or
and
add
lahf
cmpsl
xchg
add
xchg
add
add
cwtl
or
sbb
mov
add
jns
add
xor
cmpsb
add
add
movb
in
or
shll
add
mov
pop
and
jbe
cmp
jle
aad
scas
or
pop
add
test
add
mov
addr16
add
mov
add
rolb
mov
cmc
sbb
stc
lahf
mov
or
clc
lock
sub
inc
add
add
imul
xchg
add
push
add
add
cmpsl
push
pop
pop
aaa
cld
sbb
cmp
xchg
std
das
push
add
push
pop
ret
add
mov
jg
add
add
mov
mov
ljmp
inc
add
bound
mov
addl
jnp
add
ret
sub
ja
adc
clc
dec
or
add
add
mov
loop
shrl
push
add
loopne
adc
sbb
out
jo
ja
add
jne
aaa
in
push
add
add
mov
dec
sahf
add
mov
push
mov
mov
dec
cli
scas
dec
fwait
push
leave
xor
mov
das
cmp
jbe
push
add
xor
or
cltd
leave
cmpsl
cs
add
sbb
add
sub
xchg
add
sub
je
mov
push
add
out
rorl
ljmp
stc
daa
mov
scas
std
mov
test
xor
movsl
adc
xchg
int3
fidivrs
mov
add
add
mov
cmp
les
pop
daa
sbb
mov
lahf
dec
mov
mov
add
or
popa
gs
xorl
add
mull
sub
sbb
testb
fs
bound
mov
add
and
and
mov
jo
mov
mov
add
adc
iret
xor
and
sub
mov
ljmp
or
sbb
push
subl
or
ret
les
out
jg
add
add
inc
mov
adcl
test
push
sbb
jle
and
add
sub
cli
rorl
add
mov
cltd
xchg
inc
add
add
add
cmp
or
lea
add
shl
add
add
add
push
sbb
push
add
stos
ret
add
repz
add
push
add
test
add
icebp
idiv
mov
mov
add
mov
add
xor
jmp
mov
sbb
clc
data16
movsb
add
rolb
pop
pushf
stos
sahf
add
mov
sahf
adc
lret
push
add
lahf
inc
sahf
adc
nop
add
jp
add
add
cmp
add
add
xchg
sahf
repz
pop
jl
stos
pop
cmp
test
test
cmp
and
mov
add
add
xor
call
shll
add
inc
add
inc
cld
jl
fnstenv
xlat
sub
pop
lret
inc
aas
push
or
data16
or
inc
add
add
pop
cmc
mov
adc
add
add
rolb
dec
inc
addr16
lret
stos
rcrl
mov
mov
jbe
nop
add
fwait
mov
fstl
ja
dec
inc
add
add
jne
inc
cmp
pusha
add
out
inc
popf
cmp
lahf
mov
xor
stos
icebp
cmc
mov
xchg
add
jmp
add
add
mov
sti
xlat
lock
add
add
push
xchg
jo
mov
xor
add
shl
add
inc
add
push
add
aam
out
add
cmp
int
sbb
addb
pop
enter
rolb
rolb
ljmp
repnz
add
jb
dec
js
out
and
mov
cli
mov
lret
add
add
xchg
add
add
add
dec
jl
leave
inc
add
and
fstpt
or
lods
cwtl
loope
add
push
sbb
sbb
add
and
add
add
loopne
dec
pop
imul
roll
daa
inc
jbe
mov
add
sbb
add
cltd
inc
dec
jbe
add
add
in
sub
sub
fwait
out
or
and
jle
add
fisttpl
lods
mov
push
add
aaa
jnp
das
push
add
ret
add
repz
add
shll
xor
xchg
xor
and
mov
add
ljmp
outsl
je
add
mov
sbb
mov
xchg
add
sub
push
add
mov
cmc
pop
int3
pop
pop
inc
xchg
pop
dec
faddl
push
add
push
cmp
pop
insl
imul
ret
sahf
xor
or
push
mov
add
aas
clc
cmp
nop
add
add
cmp
mov
add
fs
add
pop
test
sbb
add
add
mov
mov
add
daa
bound
mov
add
data16
pop
sbb
mov
inc
rolb
or
pop
rcr
bound
mov
rcr
out
sbb
scas
std
jg
aad
mov
jg
add
sbb
arpl
and
loop
pop
call
popf
push
sub
sub
jmp
aad
and
jmp
cmp
sub
push
scas
push
push
sub
movsb
add
dec
push
add
add
add
andl
add
mov
adc
mov
jg
add
fdivrl
or
int
xor
pop
testb
add
pop
cmp
pop
and
je
sub
and
mov
xchg
out
adc
push
lods
lea
add
mov
ret
or
dec
and
jecxz
loop
aad
or
mov
add
sub
sti
sub
add
add
mov
icebp
cmp
add
adc
loope
inc
popf
iret
cmp
test
add
add
add
add
js
insl
dec
xor
mov
mov
cs
dec
outsl
push
add
test
in
add
cmp
sub
mov
add
arpl
add
hlt
add
cmpsl
push
adc
add
jne
add
add
jb
test
jne
sub
sub
out
mov
test
clc
test
stc
out
xor
rolb
push
sbb
dec
xchg
add
rcrl
addl
add
xlat
aad
add
dec
or
outsl
sbb
add
sbb
faddp
imul
mov
add
xchg
xchg
add
add
fidivrs
sbb
jl
out
sbb
and
sti
push
add
xor
out
jbe,pn
iret
add
mov
mov
mov
mov
repz
pop
pop
shll
add
add
add
add
sub
int3
leave
lcall
add
add
inc
add
imul
add
mov
lret
mov
pop
hlt
add
aaa
fistpl
js
lock
mov
add
out
mov
push
loope
cmp
add
lahf
movsl
sub
clc
imull
mov
add
mov
mov
pop
add
adc
push
sub
add
mov
add
add
mov
les
ficoml
jecxz
push
arpl
pop
test
add
cmp
sub
push
add
rolb
adc
and
and
mov
jae
mov
dec
in
enter
add
mov
push
add
mov
add
jg
mov
pusha
add
add
sub
out
fwait
call
sahf
xchg
xor
add
jns
adc
and
adc
jnp
mov
test
sub
adc
add
in
add
jecxz
cltd
cltd
out
outsl
xchg
add
push
add
ljmp
cld
adc
xchg
mov
insb
push
add
add
insb
xchg
add
hlt
add
nop
add
addb
jg
dec
add
mov
ljmp
rolb
loop
mov
add
or
test
sbb
mov
xchg
add
int3
jbe
or
cmp
mov
pop
sbb
add
mov
xor
cld
lea
add
add
push
pop
jp
orps
lods
pop
lea
add
pop
and
push
add
add
add
pop
inc
or
mov
in
outsb
lcall
mov
add
add
into
fcomps
sbb
add
add
std
call
add
cmp
add
push
add
rolb
pop
aaa
pop
dec
push
add
add
add
push
add
in
sub
mov
mov
inc
add
add
seto
test
add
add
pop
addb
jae
sbb
add
xor
out
add
add
add
xchg
push
add
cmpsl
sub
out
sub
cmp
cmpsb
add
add
add
sub
cmp
leave
cmp
pop
mov
add
mov
add
push
adc
add
shrl
dec
stc
pop
repz
pop
rcll
cmpsb
add
arpl
add
add
xchg
mov
add
int
xor
fdivs
loope
xchg
add
leave
jnp
dec
call
add
jmp
jp
cmp
cwtl
pop
xchg
mov
add
add
pop
cld
sbb
mov
test
add
add
cmp
add
xchg
add
jge
stc
int
test
adc
inc
add
add
add
stos
push
pcmpgtd
mov
push
inc
add
and
mov
mov
inc
sbb
jmp
cwtl
and
adc
pop
int3
sub
dec
dec
arpl
je
mov
rolb
inc
add
popf
xchg
pop
jle
insb
push
fcmovnbe
add
sti
leave
pop
mov
add
add
jmp
pop
and
add
jge
xchg
add
add
and
or
sub
fwait
popf
xor
inc
add
mov
int3
out
mov
add
add
cld
fwait
add
add
add
pushf
inc
add
fsubrl
scas
and
adc
and
add
add
shll
in
lret
in
add
add
mov
fucomi
leave
imul
add
add
scas
addb
call
jmp
sbb
xchg
add
add
cmp
mov
add
sub
or
daa
xchg
xchg
xchg
add
dec
cmpsb
add
gs
add
cmp
add
loopne
bndldx
fcoms
pop
cmp
test
lea
nop
add
add
mov
add
jb
shll
inc
fldl
inc
add
add
add
sub
push
cmc
add
mov
add
mov
inc
add
test
mov
adc
addb
sbb
ss
add
repnz
test
outsl
movb
add
cmpsb
add
jecxz
rolb
add
fisubrs
mov
cltd
dec
mov
out
fucomip
adc
add
pop
push
dec
xchg
dec
sbb
push
test
add
add
xchg
mov
ja
add
push
add
stc
enter
cmpsl
pop
inc
add
adc
and
mov
lret
push
adc
addb
adc
movsl
insl
mov
mov
mov
scas
fcomip
jbe
rolb
pop
mov
mov
jno
xchg
add
add
mov
adc
iret
test
adc
int
add
push
add
loop
movb
jp
push
stos
ds
test
mov
jno
add
jb
lds
adc
out
inc
pop
xor
jp
mov
xchg
dec
sti
pop
pop
xchg
add
pushf
iret
cmp
lods
add
mov
mov
and
lret
xor
dec
repz
push
js
popf
les
sbb
add
lret
xchg
add
stos
loop
fdivr
sub
add
mov
dec
out
pop
pop
loopne
in
stos
xlat
xor
out
cltd
sub
add
add
xor
enter
push
push
add
adc
test
add
dec
rep
mov
inc
add
popf
jmp
push
test
mov
dec
jno
add
add
add
add
pop
and
sub
cmp
add
add
add
ja
mov
pop
xchg
lods
push
dec
fcomp
movsb
add
rol
add
mov
push
add
add
add
addr16
pop
call
enter
sub
out
dec
lret
push
inc
insl
pop
xchg
ficoml
xchg
jbe
repz
or
add
das
mov
outsb
outsb
cltd
js
pop
adc
push
add
add
add
and
add
mov
daa
jg
jp
dec
je
xor
add
insl
jo
sbb
mov
add
add
outsb
pop
add
add
repnz
lret
aaa
insl
mov
inc
ret
push
sbb
xor
lea
lock
mov
mov
cmpsl
pushl
rolb
icebp
mov
ljmp
fiadds
repz
adc
add
repnz
pop
push
add
xchg
add
cmp
sub
add
add
mov
mov
loope
dec
outsl
xor
bound
mov
push
add
add
mov
add
cmpsl
scas
lcall
add
lock
hlt
add
dec
mov
pop
pop
into
mov
mov
add
pop
lea
cmp
add
mov
jge
add
sub
lds
push
add
fstps
add
add
add
scas
sub
movsl
jmp
jb
lret
fcmovu
add
sbb
sub
add
bound
mov
add
mov
adc
mov
nop
add
sbb
mov
add
rolb
mov
aad
scas
rolb
push
add
addb
cmp
add
or
pop
cmp
pushf
outsl
mov
enter
add
sahf
clc
and
lds
nop
add
add
cmp
add
jle
add
popa
jp
cmc
dec
ret
enter
xchg
sahf
sub
in
add
and
mov
add
ds
jae
mov
out
jo
mov
mov
movb
add
repz
fsubs
add
cmp
sahf
pop
push
mov
add
dec
add
push
add
add
loopne
cltd
hlt
add
add
cmpsb
add
add
mov
jbe
adc
add
or
mov
mov
push
sahf
mov
jl
push
push
mov
or
cmp
and
mov
mov
add
or
jle
in
lea
push
push
out
add
std
sub
xor
mov
daa
lods
jbe
icebp
mov
add
loop
add
cli
mov
add
xor
sti
or
mov
add
adc
mov
int
add
or
mov
jb
in
rcrl
add
pop
addb
out
ljmp
mov
pop
mov
pop
and
add
inc
add
add
in
cmp
add
dec
fsts
add
add
add
add
sbb
mov
xchg
add
add
add
mov
add
cmp
add
jae
xchg
xchg
add
ds
out
je
add
dec
and
sbb
test
pusha
add
mov
add
ret
loope
mov
dec
ja
mov
ja
fidivs
add
pop
pop
pop
and
mov
push
add
add
aam
cmpsb
add
fwait
inc
push
or
jg
add
jae
add
xchg
daa
in
xor
or
movsb
add
add
imul
pop
mov
xchg
rorl
stc
les
cld
adc
xchg
lods
mov
add
jp
mov
rolb
or
inc
jae
out
stos
ljmp
pop
dec
pop
ret
push
loope
data16
adc
add
add
fistl
add
add
add
jl
hlt
add
lcall
insl
push
mov
mov
rolb
add
jmp
js
mov
inc
add
add
mov
lods
cltd
stos
add
adcl
mov
mov
rolb
jae
pop
in
push
jl
pop
int
in
and
pop
cwtl
xor
mov
ret
imul
mov
add
add
inc
add
add
add
js
jp
gs
push
in
push
add
repz
xchg
dec
mov
cmp
mov
mov
add
cmp
mov
mov
add
mov
inc
pop
add
inc
insb
rolb
add
add
fsubl
imul
cmp
jmp
dec
adc
int
adc
add
sub
or
testb
into
sbb
xor
loopne
mov
mov
mov
sbb
imul
add
sbb
jnp
jecxz
adc
adc
ds
addr16
push
jne
ss
addr16
lds
add
add
arpl
sti
add
mov
xchg
add
add
add
inc
add
inc
mov
add
out
pop
xor
jae
jns
mov
add
ror
xlat
jecxz
addb
repnz
pushf
adc
rolb
cmovl
add
rolb
xor
pusha
add
data16
mov
lea
testb
add
js
sub
add
lds
inc
vaddps
add
add
add
in
inc
lock
add
test
push
clc
cmp
loope
add
bound
mov
push
std
nop
add
mov
sub
push
inc
xor
jp
lods
xchg
add
add
jne
rolb
xor
cmp
push
ror
add
add
add
mov
pop
push
add
lods
in
or
add
push
add
xor
push
add
fdivrp
sub
mov
nop
add
add
add
cli
shll
gs
add
add
sub
add
add
add
or
rolb
daa
data16
add
mov
add
mov
cli
scas
imul
add
jg
fdiv
add
dec
jo
out
lds
add
cmc
sti
mov
mov
scas
pop
ds
add
push
add
stc
hlt
add
or
add
jae
mov
add
add
fmul
inc
xor
xor
stos
out
daa
inc
js
add
les
testb
add
or
add
add
jmp
add
add
mov
jno
jns
ret
push
das
ret
push
or
pop
xchg
mov
add
cmp
push
add
add
add
add
xchg
add
ljmp
xor
sub
pop
xor
dec
repz
scas
data16
test
sbb
jb
addb
fiadds
les
push
add
sbb
inc
imul
mov
pop
fcoml
ds
icebp
xchg
add
dec
sbb
pushf
fildll
mov
mov
add
movsb
add
add
jns
in
sbb
pop
repnz
jge
add
mov
mov
add
aaa
mov
add
sbb
ret
dec
jmp
mov
cmp
cmpsl
or
add
sbb
add
add
aad
sbb
mov
pushf
jecxz
add
mov
jo
mov
scas
xchg
jae
jmp
dec
std
sub
add
into
sub
iret
test
add
hlt
add
add
or
loop
mov
roll
aam
jae
add
movsb
add
pop
addb
mov
dec
mov
adc
inc
add
mov
pop
and
mov
icebp
cmc
jge
mov
add
imul
xchg
mov
pop
leave
ljmp
add
in
and
mov
add
int3
mov
add
push
daa
lret
xchg
xchg
push
add
add
jne
mov
aaa
jmp
add
mov
xlat
lret
call
add
hlt
add
add
rolb
add
add
dec
fdivrs
cs
ret
cltd
xchg
imul
mov
add
mov
xor
pop
xor
mov
loope
cli
rolb
pop
scas
xchg
jmp
add
adc
addb
stc
mov
ja
mov
aad
adc
hlt
add
add
xchg
shl
add
adc
xchg
add
adc
mov
mov
rolb
subl
add
push
arpl
nop
add
pushf
cmp
mov
sub
adc
rolb
jns
add
sub
or
push
add
mov
js
into
xor
inc
testb
pop
or
add
push
add
jo
push
add
mov
loope
pop
jge
test
xchg
dec
mov
mov
pop
ret
mov
xchg
inc
data16
or
inc
js
add
add
and
xchg
add
or
push
add
clc
jno
scas
ret
inc
add
sub
xor
pushf
pop
mov
add
mov
bound
mov
cld
movsb
add
add
pop
push
mov
pop
sub
xlat
mov
data16
and
add
add
push
lock
add
imul
xor
add
add
hlt
add
std
mov
movb
add
mov
addb
or
adc
mov
adc
mov
mov
add
lahf
fdecstp
add
xor
mov
mov
xor
xchg
add
stos
add
hlt
add
in
dec
mov
add
add
add
pop
sub
add
fsubp
add
fadd
add
add
add
adc
fmull
testb
add
dec
push
add
and
mov
add
jo
mov
push
add
mov
xor
cmp
dec
sbb
cltd
jno
repz
addb
push
mov
jb
pop
jmp
jnp
scas
negl
fdivl
bswap
push
lahf
xchg
and
leave
mov
add
arpl
inc
cmp
push
push
jae
pop
outsl
sbb
add
add
stos
add
subl
dec
add
cmpsl
xchg
mov
mov
add
add
or
ret
repz
loopne
arpl
add
add
js
sub
jno
or
add
add
pop
mov
mov
stos
out
rolb
call
and
cmp
enter
pop
mov
add
fisubl
mov
add
add
daa
mov
sub
add
sahf
adc
subl
in
adc
push
add
add
push
push
push
push
imul
add
rolb
add
sub
add
add
jl
push
out
push
add
add
add
xchg
add
pusha
add
add
add
sbbl
out
xchg
add
add
inc
insb
and
dec
pop
push
cmpsb
add
add
push
add
dec
aas
cmpsl
sbb
pop
movsl
mov
add
add
add
cmpsb
add
add
lods
xor
icebp
or
pop
push
add
adc
jp
add
xchg
xlat
aad
xchg
inc
add
iret
mov
dec
or
or
pop
inc
xchg
cmp
mov
push
add
scas
movb
lods
test
add
add
dec
das
or
mov
cld
out
xor
enter
add
push
add
enter
jecxz
scas
mov
rolb
out
dec
insb
push
add
add
mov
sbb
jne
push
add
add
shrl
mov
mov
test
stos
mov
add
out
imul
inc
inc
add
add
ds
jne
add
mov
jle
add
add
or
mov
mov
add
add
add
pop
jo
fsubs
add
pusha
add
and
push
add
push
and
mov
popf
hlt
add
cltd
out
mov
xchg
add
mov
xor
add
xchg
add
out
jmp
popa
xor
inc
add
add
outsb
mov
mov
inc
add
incb
add
fiadds
rolb
sbb
add
lret
clc
cmpsl
sbb
out
js
xchg
add
add
add
cmpsb
add
pop
jnp
add
inc
add
dec
ret
jae
add
add
rorl
stos
pop
aam
cltd
pop
fisttpll
dec
inc
add
rcrl
mov
cmp
add
or
add
pinsrw
add
pop
push
add
mov
ret
add
add
jne
adc
cmp
mov
dec
or
daa
and
jecxz
mov
dec
int3
pusha
add
add
cld
add
rolb
ret
or
cltd
ja
fdivr
fstps
and
mov
fimuls
add
cmp
add
dec
int
add
mov
mov
jle
lods
inc
add
add
mov
pop
aad
mov
sub
int
add
mov
lock
add
push
jne
add
push
jl
add
insl
in
adc
adc
sub
mov
sbb
jle
outsl
and
push
add
jmp
add
mov
mov
and
outsb
dec
sbb
add
std
or
fwait
mov
hlt
add
add
int
fistps
add
add
nop
add
mov
ja
push
add
fiaddl
mov
add
adc
mov
sbbl
push
add
loop
jne
add
add
add
xor
add
fldl
aad
mov
cmp
push
add
mov
rorl
dec
in
and
mov
fdivl
dec
daa
lea
pop
mov
add
add
add
xchg
fcmovu
inc
call
fidivrs
ret
sub
xchg
mov
loop
mov
aaa
lret
add
jmp
add
imul
add
in
push
add
jle
bsf
pop
insb
xchg
test
pop
add
mov
add
nop
add
into
shrl
flds
jae
cmp
sub
lock
rolb
sbb
imul
repz
add
stc
push
and
mov
jno
iret
and
mov
pop
fistpll
jp
add
add
pop
movsl
outsl
adc
cwtl
int
add
das
popa
test
adc
mov
xchg
cli
int3
test
cltd
lock
push
push
add
dec
arpl
lds
add
std
testb
add
les
jne
adc
mov
test
add
add
gs
nop
add
cli
fildll
repz
mov
add
mov
add
sbb
jl
add
dec
pop
lock
add
add
add
push
pushf
xor
lahf
pop
sub
das
repnz
add
lea
adc
popa
jmp
add
xor
mov
insl
mov
sahf
hlt
add
add
xchg
mov
pop
adc
add
add
dec
mov
ljmp
add
lcall
imul
aam
adc
add
add
or
add
add
sub
add
cmp
arpl
rolb
push
add
stc
xor
repnz
or
fdivrl
jo
xchg
or
sahf
xor
add
les
insb
addb
mov
ret
movsb
add
aam
mov
inc
jp
add
mov
add
jge
sbb
daa
stc
hlt
add
dec
mov
das
xor
es
add
mov
add
mov
sbb
xor
out
xorl
add
in
and
cwtl
mov
inc
mov
ljmp
fdivrl
cmp
add
and
leave
or
aas
mov
fdivl
bound
mov
adc
mov
add
xor
pushf
mov
cmpsl
mov
stos
sub
add
jbe
test
pushf
es
xchg
add
add
roll
jg
add
pushf
fidivs
gs
pop
mov
cmp
push
add
test
add
lret
push
in
in
jg
push
filds
add
shl
add
add
inc
xchg
int3
insl
pop
push
add
add
add
adc
js
push
xor
add
inc
add
fmull
loop
push
or
inc
mov
or
inc
add
sub
inc
add
dec
cmp
mov
jecxz
inc
inc
adc
mov
jbe
and
mov
sbb
int3
shrl
add
xchg
out
push
add
in
insl
jg
push
xor
loop
arpl
repz
and
addb
jge
sbb
push
add
mov
or
mov
sub
adc
idivl
jnp
push
add
mov
popf
int3
imul
add
sbb
add
add
add
add
aas
add
add
add
xor
movb
int3
les
add
jg
mov
add
pushf
and
out
jno
and
mov
add
cmp
outsl
popf
inc
arpl
mov
add
add
push
add
add
mov
xor
add
aas
cmc
xchg
arpl
sbb
std
dec
sub
loopne
pop
pop
adc
add
ja
push
add
test
sub
scas
mov
add
add
insb
aam
sti
addb
add
or
mov
testl
add
dec
push
jge
movb
xorl
inc
lahf
aam
loop
jo
jno
dec
incb
cltd
enter
add
cltd
inc
inc
lods
lahf
loop
mov
add
jns
add
inc
add
dec
add
insb
test
add
les
daa
pop
xchg
outsl
fsubrl
add
mov
add
jo
mov
dec
repz
add
movsl
movntq
inc
cmc
data16
stc
adc
add
ds
add
pop
lea
cli
adc
mov
cltd
testb
jb
add
mov
and
xor
and
or
jae
push
pop
jo
jnp
hlt
add
testl
add
subl
pop
addb
dec
aam
addb
daa
negl
mov
add
mov
addb
add
add
cmc
xor
fistpl
fimull
add
or
add
add
mov
add
cmp
lock
mov
add
dec
dec
mov
jle
add
xchg
add
add
add
mov
push
add
add
arpl
add
jne
ljmp
add
xor
inc
add
add
add
add
mov
mov
sub
add
sub
sahf
adc
cmp
add
add
dec
mov
mov
ja
add
inc
add
mov
scas
mov
movsb
add
add
in
ljmp
inc
data16
push
add
bound
mov
frstor
add
jp
jb
mov
xchg
icebp
aam
testb
mov
xchg
je
xor
sub
add
add
mov
ficoml
out
add
out
call
mov
add
mov
jae
clc
icebp
inc
add
add
ja
pop
mov
jb
mov
and
icebp
sbb
push
xchg
add
add
add
sahf
and
mov
add
jns
jg
add
into
jg
dec
inc
out
rolb
addb
lcall
and
mov
int
aam
movsl
testb
add
add
mov
add
add
mov
mov
add
dec
gs
ds
fisubrl
cwtl
push
add
jbe
popa
es
add
mov
jno
jecxz
jmp
movb
add
fistpl
mov
loopne
jno
rolb
add
imul
add
mov
add
add
sahf
or
jae
roll
pop
dec
mov
mov
dec
shrl
addb
add
outsl
and
add
loop
lret
jle
das
mov
pop
push
add
xor
adc
aam
test
sbb
cwtl
movl
or
add
cld
pop
addb
add
and
pop
rcrl
inc
dec
imul
fisubrs
lea
jne
in
push
jg
mov
inc
in
mov
add
sahf
movsb
add
add
pop
xchg
xlat
or
int
aas
inc
mov
lods
adc
fwait
jnp
add
ljmp
push
add
add
push
sbb
mov
add
cld
adc
stc
sub
pop
mov
add
push
add
sub
add
pop
or
dec
sub
add
and
lcall
mov
jge
mov
mov
jl
push
je
jg
add
cmpsb
add
or
add
and
sub
add
loopne
and
rorl
lea
cs
add
movsb
add
sbb
sbb
xor
adc
mov
cmp
mov
mov
add
fnstcw
in
ljmp
jo
ja
rolb
cmovo
mov
add
mov
mov
xor
jecxz
lods
xchg
add
mov
add
mov
rdtsc
ja
add
sbb
xlat
in
mov
xchg
add
loopne
in
les
xor
mov
add
adc
into
testb
fcomi
add
add
imul
test
pop
push
add
jge
adc
mov
mov
add
add
sbb
add
xor
xor
mov
aad
sahf
inc
push
pop
scas
xor
push
add
add
add
rolb
mov
ret
aaa
inc
jbe
test
pop
jge
jecxz
f2xm1
add
rolb
add
add
orl
insl
sti
repnz
xchg
adc
gs
adc
and
inc
mov
cmp
rolb
pop
aam
mov
add
adc
xor
ret
xchg
add
add
xchg
jae
addb
add
inc
adc
add
jl
add
push
adc
sbb
add
loop
xchg
add
inc
add
mov
add
push
pusha
add
add
roll
lds
out
pop
iret
sub
xchg
add
xchg
lea
mov
movsl
cmpsb
add
mov
outsl
sbb
push
loope
mov
mov
add
fidivl
push
inc
add
add
add
mov
pop
loopne
xchg
es
rcrl
daa
mov
add
add
jg
add
add
xchg
ss
xchg
out
jl
push
add
push
aaa
mov
inc
stc
add
or
pop
nop
add
add
sarl
mov
adc
mov
add
and
add
lds
add
stos
jp
add
add
xchg
adc
xor
adc
add
add
dec
mov
outsl
and
xchg
add
add
int
add
add
scas
lods
xchg
add
mov
add
sub
xchg
sbb
pusha
add
mov
cli
mov
add
or
add
sbb
jae
sub
ffreep
mov
xchg
mov
ss
jns
cwtl
insb
add
mov
mov
call
movsb
add
mov
mov
push
push
add
add
pop
add
les
add
adc
pushf
add
in
jbe
stos
repz
testb
outsl
inc
sbb
movsb
add
push
add
pushf
or
add
dec
xor
enter
add
test
jo
or
lahf
fistpll
imul
rolb
sbb
mov
fiaddl
add
add
cmp
in
lahf
pop
mov
inc
popa
andl
inc
add
add
add
add
xchg
add
add
add
mov
add
in
mov
sub
push
push
dec
mov
add
inc
push
inc
dec
xor
and
mov
add
mov
mov
push
add
add
pushf
ljmp
int
add
push
ljmp
sbb
add
add
inc
mov
mov
mov
add
and
fwait
mov
or
cld
or
mov
mov
push
add
adc
push
add
add
dec
mov
cld
push
mov
stos
inc
add
pop
mov
cmp
add
inc
jae
add
enter
jmp
add
jo
or
jl
add
sub
stc
cmp
add
fwait
insl
inc
mov
add
add
cmp
stos
inc
add
and
mov
mov
and
mov
add
add
inc
insb
fwait
cmp
add
add
cltd
imul
inc
mov
repnz
xor
add
loop
out
lcall
jns
inc
add
add
add
add
cwtl
or
add
out
and
add
testl
mov
mov
add
push
pop
popa
sub
or
xlat
fldl
mov
aam
testl
std
add
jle
add
mov
mov
pop
das
loopne
xchg
aam
stos
pop
sub
pop
xchg
add
add
out
add
das
test
jecxz
movsl
sbb
mov
mov
add
xchg
add
add
push
movsl
mov
mov
mov
lock
out
jo
pop
in
sbb
mov
xchg
add
sub
mov
push
adc
cmp
pusha
add
and
mov
xchg
mov
adc
mov
fidivs
sbb
sbb
fistl
add
xor
outsl
leave
cmp
inc
add
or
test
jb
std
aad
add
iret
push
out
inc
add
add
rcr
add
fmull
call
add
xor
add
push
add
mov
add
add
rcl
xchg
add
incb
aaa
decl
jl
sub
test
dec
cmp
imul
add
add
movsl
pop
sarl
and
sti
stos
sub
add
fwait
push
jp
pop
in
xor
push
and
addr16
mov
addr16
mov
movsb
add
mov
add
jp
mov
mov
fcos
test
lret
in
inc
loope
and
rcrl
push
add
add
xlat
push
push
add
cmp
mov
add
add
add
push
cmp
add
xor
sbb
iret
fbld
add
push
sbb
inc
sarl
mov
add
fs
int3
aas
out
mov
loop
popl
sub
inc
add
sarl
ja
sub
repz
mov
stc
mov
test
addb
rcpps
fadd
add
sub
dec
cld
sub
pop
test
nop
add
add
or
add
pushf
in
scas
sbb
shll
jns
add
push
add
add
add
ret
push
add
jle
jle
add
add
add
mov
out
or
add
add
in
xchg
add
gs
aaa
jne
inc
add
xor
sbb
pop
dec
cmpsl
popa
imul
add
pop
xor
add
mov
xor
mov
sub
add
lds
cmp
mov
pmullw
sti
push
add
add
pop
sti
pop
dec
push
jl,pt
xchg
es
scas
pop
rolb
movb
adc
xor
sub
lret
jne
add
mov
adc
sbb
add
lods
mov
data16
cmc
int
add
add
movb
out
cld
cmc
sub
push
add
call
xlat
sub
add
and
mov
cmp
nop
add
movsl
mov
jp
out
push
add
stos
movsb
add
jge
add
inc
add
and
pop
lcall
add
js
sbb
lret
lock
repnz
add
pop
xchg
mov
add
call
dec
int
xor
push
add
mov
add
mov
out
adcl
sbb
sub
push
add
mov
inc
sbb
cmp
out
imul
dec
test
lret
leave
sub
add
add
pop
inc
add
pop
aam
ja
add
inc
loopne
out
aaa
push
inc
add
add
cmp
and
rolb
cmpsb
add
dec
into
daa
int3
out
add
fists
mov
add
test
add
fcmovb
pop
test
into
add
add
rolb
ja
sahf
mov
add
add
push
lds
add
push
add
in
push
stc
decb
aaa
add
hlt
add
add
add
sub
add
pop
and
scas
sahf
and
push
push
mov
scas
cs
add
sbb
cmpl
adc
mov
add
sbb
sub
jae
mov
add
jno
lcall
add
aaa
sbb
dec
insb
push
add
cmp
fildll
pop
enter
arpl
ret
lods
pop
out
insl
jbe
cltd
cwtl
mov
icebp
aam
sbb
call
add
dec
mov
add
mov
add
outsl
push
int3
sub
pusha
add
add
xchg
xor
rorl
repnz
mov
lods
out
jo
push
sub
add
add
add
jo
jae
add
add
ret
shr
or
or
add
xor
mov
cmp
movsb
add
mov
stos
adc
add
sub
lods
out
cmp
mov
fwait
inc
std
adc
mov
fdivrl
add
ds
pop
lret
ja
daa
adc
mov
fwait
add
xchg
add
add
repz
add
add
mov
mov
pop
mov
imul
mov
mov
push
add
jno
mov
mov
mov
adc
inc
movsl
jmp
jae
cmc
push
add
stos
cwtl
push
sub
and
xor
or
popa
movsl
xor
adc
fsubl
dec
and
mov
icebp
push
add
or
dec
loope
sub
popa
xchg
cmpsb
add
add
or
add
shll
cltd
sbb
add
or
movb
cmpsb
add
shll
and
add
add
ss
add
stos
sub
mov
into
push
xor
inc
xchg
add
sub
mov
adc
sbb
xchg
add
sbb
add
cmp
jbe
out
iret
outsl
filds
add
xor
nop
add
add
scas
aam
pop
inc
add
jp
sbb
add
outsb
inc
add
sahf
sbb
aam
inc
mov
out
inc
in
inc
mov
add
add
adc
mov
inc
add
sub
mov
add
jg
sbb
add
xor
add
add
ret
and
mov
or
lahf
and
mov
dec
add
add
xchg
into
jae
mov
add
jge
add
add
adc
in
lea
mov
add
mov
les
xchg
and
add
adc
xor
pop
sbb
add
cmpsl
lret
cmp
add
ds
jno
mov
ljmp
add
mov
inc
popf
xrelease
loop
push
pushf
addb
mov
je
and
pop
aad
les
push
pushf
mov
aaa
or
add
add
mov
mov
add
in
int
cmc
xchg
or
pop
cmp
mov
add
add
and
pop
cwtl
call
xlat
lcall
and
mov
add
add
and
rsm
inc
add
gs
bswap
fistpll
cld
ja
je
add
inc
add
add
testl
aas
mov
lds
sbb
mov
pop
mov
and
mov
jns
add
xor
xor
sub
pop
add
or
jmp
push
xor
movsl
mov
lret
mov
mov
js
add
sbb
xchg
jnp
inc
add
fsubl
fdivr
cvtdq2ps
out
and
mov
inc
imul
sarl
in
scas
lods
add
adc
test
cs
jmp
ja
jb
xchg
aam
pop
xlat
imul
lea
aas
adc
fiaddl
mov
movsb
add
fdivrl
or
mov
lcall
push
sbb
or
in
mov
add
add
inc
add
jno
inc
xchg
add
add
push
movsl
jb
mov
inc
add
shll
pop
push
add
or
movsl
lahf
mov
addb
in
inc
add
jg
test
fcomip
add
mov
jbe
and
add
movsb
add
notl
dec
pop
sub
iret
call
test
movsb
add
add
sub
dec
xlat
fnstcw
xchg
dec
insb
mov
add
stos
push
add
and
pop
mov
daa
out
mov
data16
mov
add
add
add
lcall
add
add
and
xor
sub
loop
out
and
das
popa
stos
call
add
mov
daa
mov
add
mov
loop
pushf
dec
jno
fmul
add
mov
add
mov
jbe
sbb
add
loop
cmp
add
add
add
hlt
add
jmp
mov
mov
scas
xor
jno
cmp
daa
xchg
ds
enter
add
add
add
cmp
icebp
xchg
adc
xor
in
push
addr16
xchg
add
flds
add
cmpsl
sub
add
sbb
inc
push
mov
push
add
add
add
add
dec
iret
adc
adc
add
cmpsl
jbe
icebp
std
sub
sub
and
add
ret
cli
pusha
add
testb
rolb
movsb
add
mov
or
sahf
popa
mov
push
add
add
outsb
push
add
iret
out
add
jnp
sbb
pop
mov
cmp
fwait
sti
or
insb
int3
movb
mov
sub
addb
add
fisubl
addb
repz
pop
lea
mov
sbb
in
cltd
pop
mov
add
add
mov
push
add
cld
mov
add
loopne
mov
fmuls
addb
js
outsb
aaa
add
bound
mov
in
call
mov
int3
arpl
enter
add
push
inc
mov
push
mov
subl
les
les
lea
push
insl
pop
jne
add
call
test
push
jb
aaa
mov
add
add
daa
test
adc
add
sbb
add
xor
adc
mov
xchg
xor
mov
pop
sbb
sarl
xlat
cmpsb
add
fwait
pop
xor
icebp
xchg
add
mov
mov
or
addb
add
push
add
push
mov
aaa
mov
andnps
add
push
data16
insb
adc
adc
dec
outsb
lods
add
jb
out
rolb
lods
add
mov
mov
sub
dec
xchg
add
push
pop
xchg
pop
test
add
add
add
adc
imul
mov
aaa
pop
stc
xlat
dec
add
dec
adcl
pushf
mov
fimull
fcomps
cli
pop
inc
add
add
lods
pop
fsubrp
enter
add
add
mov
jbe
int
adc
enter
and
mov
popa
adc
sub
testb
dec
popl
in
sub
aas
outsb
jne
or
mov
add
push
add
xor
adc
fcompl
dec
test
add
insl
ss
add
mov
inc
push
add
xor
pop
into
fcoms
jnp
add
sub
add
add
add
sbb
add
add
rolb
push
cmpsl
data16
pop
jne
int3
inc
sub
or
sub
add
add
or
lods
ja
xlat
fstpt
add
add
scas
push
add
add
add
imul
sub
add
add
add
aaa
xlat
add
mov
add
je
dec
push
add
add
inc
push
mov
add
add
addl
add
dec
stos
sub
mov
pop
fisttpl
pop
jp
fucomip
mov
pop
mov
add
add
xor
inc
lods
xchg
je
popa
pop
data16
add
add
add
cli
adc
ret
dec
into
cs
pop
push
cmp
add
add
jnp
add
add
js
dec
adc
movb
add
or
add
pop
and
add
fistpl
mov
jnp
add
xchg
lahf
cli
movb
add
aaa
add
icebp
mov
xchg
jge
popf
sahf
adc
popf
test
add
mov
or
mov
jb,pt
movsb
add
stc
imul
add
and
mov
pop
adc
add
mov
in
rolb
dec
in
adc
sbb
adc
lods
loop
bound
mov
xor
cmp
xchg
notl
in
add
mov
mov
cmp
or
add
add
ficoms
add
mov
add
shl
dec
mov
pop
loop
rolb
test
add
cmp
inc
add
sub
pop
mov
add
andl
mov
add
out
ss
or
lock
or
push
add
adc
dec
popa
iret
inc
mov
ficoml
lock
clc
adc
nop
add
rolb
ficompl
std
data16
mov
and
mov
and
xchg
add
adc
mov
scas
sbb
les
xchg
add
xor
xchg
gs
mov
inc
add
add
xchg
pop
cmp
jb
add
jo
leave
inc
add
out
ret
mov
mov
imul
inc
dec
outsl
testb
add
jae
fidivrs
cmp
stos
sub
mov
dec
sti
pusha
add
push
loopne
fildl
cld
jmp
out
loop
mov
arpl
adc
and
add
add
add
sti
sbb
imul
mov
add
jp
and
addb
mov
shrl
mov
inc
add
add
add
mov
add
data16
pop
pop
or
push
jo
sarl
mov
aam
pop
arpl
add
push
mov
mov
test
cmc
insl
lahf
mov
add
fstpt
punpckhdq
jmp
je
push
sbb
adc
sbb
add
addb
add
dec
add
mov
cmp
stos
les
cmp
adc
add
adc
dec
cwtl
int
add
stos
mov
push
rolb
sub
insl
fcoms
aam
jecxz
add
and
pop
pop
pop
cmp
cmc
mov
add
ficoms
addr16
mov
cmpsb
add
pop
cmp
insb
sbb
mov
in
push
jno
add
add
loop
pop
in
fnstsw
testb
add
popa
mov
mov
xor
add
jp
mov
je
push
add
add
inc
jmp
xor
repnz
test
mov
out
testb
xchg
add
shld
je
cmpsb
add
add
pop
push
add
add
add
mov
imul
loopne
cmc
or
ja
push
jns
mov
add
sbb
add
mov
add
inc
add
incb
mov
add
xor
push
cmp
mov
das
dec
push
add
sbb
add
inc
add
cmc
fidivs
ret
sti
lahf
push
add
movb
repnz
adc
pop
sbb
pop
add
xchg
add
fwait
inc
je
aaa
jae
push
push
add
mov
dec
insb
repz
add
add
xor
mov
xchg
pop
fimuls
std
lret
shrl
sub
xchg
push
add
in
pop
jg
shr
push
add
lods
data16
add
movsl
inc
xchg
movsl
mov
rolb
daa
lret
dec
adc
pop
aaa
and
mov
add
xchg
out
jo
imul
xor
adc
jmp
cmp
cmp
scas
repz
lcall
mov
fidivl
push
add
js
add
or
and
add
adc
sub
push
jp
add
pop
dec
xor
mov
add
out
stos
mov
jno
lret
mov
add
push
test
mov
add
add
mov
repz
pushl
shrl
cltd
jp
dec
sub
add
add
fsubrl
std
push
add
add
imul
add
and
out
push
add
inc
pushf
pop
fisubrl
sbb
mov
adc
mov
dec
sub
mov
pop
pop
xor
pop
aas
mov
add
mov
rolb
push
add
mov
lds
stc
addr16
mov
stc
cmp
add
push
add
mov
pop
lea
cmp
mov
pop
jmp
add
cwtl
leave
sub
add
insb
pop
xchg
add
add
xor
add
add
add
cmp
jl
add
bound
mov
add
in
pop
inc
pop
cmc
decl
cwtl
cltd
push
add
mov
cmp
inc
add
icebp
fcmovnb
mov
mov
mov
in
add
xor
idiv
cwtl
movsl
in
add
into
into
sbb
or
jae
mov
in
std
aaa
sbb
sbb
incl
add
mov
loope
add
dec
icebp
mov
xlat
mov
adc
xor
sarl
test
fwait
lcall
jg
jp
mov
push
add
mov
xchg
mov
scas
adc
fadds
add
xchg
xchg
inc
add
insl
mov
add
add
movb
xchg
sbb
and
stc
add
lret
adc
push
in
mov
out
fsub
or
add
cwtl
sti
mov
std
xchg
dec
and
mov
mov
bound
mov
aad
push
pop
ds
jae
cmp
rcrl
sbb
sti
mov
je
mov
mov
fwait
repnz
ds
add
xor
and
lcall
add
or
mov
adc
dec
cmp
sarl
add
add
ret
addr16
ds
push
sub
xchg
rcll
imul
xchg
repz
jae
icebp
mov
mov
cmp
or
adc
cmc
fwait
call
leave
or
add
add
lret
xchg
aad
add
cltd
int3
adc
les
movsbl
push
push
add
push
incl
lods
lods
mov
mov
scas
mov
add
jle
add
xchg
addb
lcall
add
sbb
inc
add
jae
add
adc
cmpl
mov
movb
push
lcall
or
popf
xor
testb
push
jmp
dec
mov
and
add
sbb
add
jnp
add
add
dec
push
add
add
add
add
add
mov
out
xchg
add
mov
add
mov
sbb
jns
inc
inc
add
adc
fildll
pop
pusha
add
gs
pop
aas
pop
jbe
jecxz
add
inc
add
rolb
out
add
sti
xchg
aas
outsb
lret
out
push
das
iret
or
xlat
stc
push
add
rcrl
add
arpl
out
and
pop
cli
jp
jb
pop
add
mov
xchg
or
or
mov
pusha
add
add
call
sbb
mov
add
cmc
mov
pop
pop
jecxz
dec
or
add
add
add
ret
scas
sub
add
orl
das
xor
aaa
xchg
add
mov
lods
mov
stos
push
add
addb
rorl
sbbl
add
pop
dec
fldenv
xchg
jnp
and
mov
xor
xor
mov
aaa
lods
jns
adc
hlt
add
and
mov
and
mov
not
add
inc
add
add
jo
or
add
mov
movlps
in
jae
daa
jae
push
add
mov
push
add
lock
or
pop
sbb
add
outsb
mov
out
jecxz
sub
dec
sub
addl
test
xchg
mov
addr16
add
cmp
scas
inc
add
cmpsb
add
lds
add
ja
jnp
add
inc
add
adc
fistps
add
add
rolb
lret
jno
test
push
or
add
in
fsts
add
out
sbb
push
es
add
cmpsl
hlt
add
push
add
xor
cwtl
cli
xchg
cmp
addb
xchg
sub
add
add
add
pop
adc
push
stc
gs
add
xor
stos
sub
add
pop
add
mov
mov
add
mov
jecxz
add
mov
jo
dec
in
inc
add
std
mov
pop
and
mov
xchg
add
repz
out
jl
add
pop
mov
in
out
dec
inc
fcompl
jae
mov
aaa
xor
xor
or
jae
aad
cmc
or
sub
movb
add
mov
cwtl
mov
adc
cmp
ja
and
mov
add
add
add
add
mov
add
or
addb
and
insl
pop
cmc
sub
add
scas
les
out
shll
add
lahf
push
dec
arpl
add
mov
jns
into
xchg
bound
mov
pop
ds
sbb
push
addb
aaa
cli
xor
test
add
add
push
mov
push
add
add
loopne
jp
add
adc
jle
mov
xchg
je
cmp
movsb
add
add
fstpl
rcl
sub
add
xor
outsb
sbbl
int
add
mov
fcompl
lods
fwait
xchg
or
stos
in
sahf
fsubl
add
sub
sbb
ja
add
mov
pop
sbb
adcl
lahf
nop
add
cmc
xchg
lods
mov
add
add
stos
push
add
fcompl
das
fcmovne
pop
fldenv
adc
pop
cltd
and
mov
add
sub
inc
add
lea
mov
add
mov
shll
dec
arpl
jmp
add
add
mov
xchg
add
mov
rolb
ljmp
pushl
add
jmp
xor
test
add
add
xchg
and
mov
add
add
add
sbb
add
sub
cmp
cmp
lods
adc
pusha
add
mov
fnstenv
add
inc
ret
add
mov
add
push
add
cmp
sbb
add
mov
jno
xor
pop
flds
mov
push
add
mov
lds
add
in
pop
mov
dec
sti
add
xchg
adc
imul
add
pop
mov
lds
xchg
and
mov
add
mov
cmpsl
movsb
add
out
xchg
mov
fnstsw
data16
mov
add
add
repnz
add
dec
das
fwait
addb
repz
out
in
loope
push
add
add
xor
jl
mov
add
add
add
popf
push
icebp
push
popa
loopne
jo
mov
or
or
mov
js
add
add
add
jge
and
addb
or
scas
adc
pop
mov
nop
add
push
jg
add
add
add
add
mov
add
mov
add
adc
add
mov
jmp
cs
add
push
or
in
je
jp
adc
mov
loop
add
mov
add
sub
add
rolb
push
cs
pop
rolb
popa
cmp
push
dec
or
add
and
add
mov
stos
rolb
add
outsl
repnz
add
clc
inc
add
inc
add
aam
push
add
xor
xor
cwtl
test
inc
aas
fsubl
adc
adc
mov
insb
adc
mov
mov
leave
mov
jle
push
add
loop,pn
testb
cltd
movsl
pop
add
mov
add
add
adc
insl
inc
dec
dec
and
aam
out
lahf
test
add
add
adc
addb
popf
and
mov
mov
aaa
ds
pop
insb
xchg
movnti
nop
add
mov
add
jge
xchg
add
push
sub
adc
popf
mov
loop
mov
fisubl
loop
jg
mov
test
xlat
pop
xchg
mov
movb
enter
push
add
cld
nop
add
add
add
mov
in
add
mov
popf
push
and
mov
ret
xlat
sub
add
rolb
lds
icebp
aas
mov
movsl
push
jns
jne
push
dec
mov
or
fwait
push
stos
cmp
add
sbbl
pop
jmp
adc
mov
add
cmc
dec
aam
cmp
js
fisttpll
std
push
rolb
out
pop
loop
push
add
add
push
test
add
mov
out
jp
cmp
fldt
add
push
and
add
pop
cmp
out
sbb
out
ret
add
insb
daa
repnz
test
inc
data16
add
mov
cltd
cmp
rcll
mov
xlat
sbb
lcall
sti
out
call
inc
lret
dec
pop
ds
push
add
add
out
mov
mov
aam
ss
mov
mov
xchg
mov
jno
add
add
add
add
add
rolb
sub
inc
cmpsb
add
mov
and
add
and
mov
les
jecxz
add
pop
fidivs
ficomps
pop
mov
push
add
in
adc
lea
mov
out
adc
jp
add
mov
adc
xchg
add
stos
lcall
add
add
add
add
sbb
sub
dec
cmp
jmp
repnz
aaa
pop
xchg
add
add
data16
jns
and
mov
add
dec
ds
pop
ljmp
add
outsl
sub
push
jne
sbb
mov
add
mov
fwait
dec
mov
es
push
add
add
inc
test
and
push
or
add
mov
add
add
das
push
add
inc
sub
jnp
xchg
out
mov
cmp
or
dec
imul
xchg
add
repz
lahf
es
xor
push
add
inc
dec
rolb
movb
add
bound
mov
pushf
popf
les
cs
push
imul
xchg
lcall
xchg
sti
adc
add
mov
add
or
orl
adc
pop
cmp
add
stc
cmc
jbe
pushf
or
add
mov
push
jmp
xchg
mov
add
add
mov
hlt
add
add
add
out
mov
mov
sbb
stos
xchg
aam
lahf
and
pop
mov
stos
and
mov
movsb
add
pushl
mov
add
push
add
mov
add
fwait
in
adc
fwait
inc
xchg
sbb
addl
cmpsb
add
cwtl
outsb
add
mov
lret
add
cmp
fucomp
andl
fstps
fistpll
mov
add
roll
mov
cmpsb
add
mov
xchg
or
jne
inc
lcall
or
push
daa
mov
add
add
fucomp
jnp
xor
push
add
xchg
ret
mov
jmp
push
cmp
fwait
cld
nop
jmp
popl
add
push
xchg
add
mov
sbb
out
add
jb
iret
add
insl
push
fwait
cld
nop
jmp
xlat
mov
popf
add
xchg
add
mov
inc
add
add
roll
movsb
add
add
inc
add
add
add
mul
inc
add
repnz
add
repnz
jae
add
and
mov
mov
xchg
ret
add
add
test
clc
repnz
jae
shr
add
cld
mov
clc
repnz
jae
sti
ja
add
sub
or
dec
cmp
cld
nop
jmp
fisubl
add
add
rcll
mov
clc
repnz
jae
add
insl
add
mov
clc
repnz
jae
iret
fwait
add
add
adc
jp
add
add
out
push
add
jae
add
xlat
adc
in
mov
xchg
ret
inc
jecxz
add
aas
add
push
mov
xchg
ret
add
js
out
test
add
xlat
inc
add
add
push
rep
push
mov
xchg
ret
mov
sub
test
mov
inc
push
add
popa
add
repnz
jae
add
add
clc
repnz
jae
jecxz
or
xchg
inc
add
push
push
mov
xchg
ret
jmp
xchg
or
ja
mov
add
clc
repnz
jae
jmp
add
movzwl
clc
repnz
jae
add
mov
aad
decl
clc
repnz
jae
aad
jnp
add
add
icebp
fwait
cld
nop
jmp
add
mov
add
test
nop
jae
add
fwait
cld
nop
jmp
add
imul
nop
jae
jae
lods
mov
int3
mov
clc
repnz
jae
add
xchg
add
mov
clc
repnz
jae
pop
fs
clc
repnz
jae
in
out
add
sub
add
mov
clc
repnz
jae
add
sub
nop
jae
add
add
jmp
mov
xchg
ret
add
popl
movzwl
push
mov
xchg
ret
ljmp
repnz
jae
add
jae
xchg
add
adc
push
add
jae
add
jae
jb
add
daa
xchg
movsl
mov
repnz
jae
mov
cltd
inc
push
mov
xchg
ret
popf
test
add
mov
add
cs
clc
repnz
jae
repz
imul
clc
repnz
jae
cmpsb
add
repnz
mov
clc
repnz
jae
add
pop
js
scas
add
and
clc
repnz
jae
jb
and
push
xor
fwait
cld
nop
jmp
add
add
jb
pop
in
jne
clc
repnz
jae
add
add
lock
fadds
nop
jmp
add
add
in
mov
clc
repnz
jae
jo
add
and
push
mov
xchg
ret
add
mov
jae
sub
sti
shll
push
mov
xchg
ret
lret
add
fwait
xor
loopne
jnp
inc
inc
add
repnz
jae
add
sub
insl
jnp
lret
push
mov
xchg
ret
add
sub
in
lahf
subl
fwait
cld
nop
jmp
add
add
clc
repnz
jae
outsb
sub
add
add
call
clc
repnz
jae
ja
add
sub
xor
inc
add
repnz
push
clc
repnz
jae
xor
xchg
popf
mov
clc
repnz
jae
add
cmpb
movb
add
clc
repnz
jae
add
add
add
nop
jae
add
add
jle
add
clc
repnz
jae
jmp
add
sbb
nop
jmp
fwait
add
add
aam
add
sti
clc
repnz
jae
insl
add
mov
clc
repnz
jae
iret
add
scas
aam
in
add
clc
repnz
jae
lods
add
push
add
add
add
clc
repnz
jae
sti
and
mov
and
pop
decl
clc
repnz
jae
add
pop
xchg
bound
mov
loopne
add
xchg
add
mov
fwait
cld
nop
jmp
add
add
insl
add
pop
mov
fwait
cld
nop
jmp
out
add
cmpsb
add
add
repnz
jae
add
or
xor
jne
xor
clc
repnz
jae
jo
add
add
pop
int
clc
repnz
jae
add
jae
add
fwait
mov
lock
repnz
jae
sub
aad
lret
insb
mov
clc
repnz
jae
add
add
add
or
nop
jae
add
and
mov
xchg
ret
lods
ja
outsb
jmp
add
jle
add
sti
pushl
inc
add
pop
add
mov
jmp
repnz
add
push
clc
repnz
jae
test
add
rcrb
mov
ret
add
and
inc
add
insl
add
add
mov
push
mov
xchg
ret
outsb
add
add
jae
je
fwait
cld
nop
jmp
mov
add
or
nop
jae
add
addb
cmpl
fwait
cld
nop
jmp
addl
cmpb
clc
repnz
jae
add
sub
outsb
lret
pushf
push
clc
repnz
jae
mov
add
add
and
push
mov
xchg
ret
aam
jb
cmpsb
push
add
js
clc
repnz
jae
add
add
outsb
add
aam
mov
clc
repnz
jae
insl
mov
aam
mov
push
mov
xchg
ret
pop
add
ljmp
mov
xchg
ret
add
mov
xor
clc
repnz
jae
add
jo
mov
clc
repnz
jae
add
jno
add
ret
clc
repnz
jae
jecxz
mov
fs
sub
jae
sub
add
sub
jmp
add
add
mov
clc
repnz
jae
add
popf
add
jmp
mov
xchg
ret
popf
add
jecxz
cmpsb
add
jmp
add
add
repz
fwait
lods
push
repnz
jae
add
popf
add
add
dec
sub
repnz
jae
cmpsb
sub
add
mov
clc
repnz
jae
add
add
jnp
add
clc
repnz
jae
inc
and
repnz
add
clc
repnz
jae
add
jb
fs
mov
repnz
jae
add
add
jg
fwait
cld
nop
jmp
add
insl
add
outsb
push
add
int3
inc
add
add
test
cmc
movsb
add
mov
jns
add
pop
add
add
add
and
movzwl
clc
repnz
jae
sub
dec
inc
out
lea
mov
adc
cld
nop
jmp
add
in
fiaddl
pop
inc
clc
repnz
jae
add
xlat
add
mov
mov
clc
repnz
jae
add
andl
mov
clc
repnz
jae
add
add
mov
addb
mov
clc
repnz
jae
out
jo
add
stos
push
mov
xchg
ret
jb
sub
mov
pop
call
clc
repnz
jae
fidivrl
les
cld
nop
jmp
jo
add
add
xor
repnz
jae
test
mov
iret
stos
clc
repnz
jae
inc
popl
xchg
mov
add
add
repnz
jae
jb
sub
mov
fwait
cld
nop
jmp
and
addl
je
clc
repnz
jae
repz
sub
repnz
jae
add
fwait
cmpsb
jae
add
fwait
cld
nop
jmp
shll
push
mov
xchg
ret
sub
mov
dec
sub
mov
inc
add
add
sar
repnz
jae
xchg
add
in
add
mov
clc
repnz
jae
inc
mov
fldl
out
inc
add
popl
add
lods
add
push
mov
xchg
ret
out
and
adc
nop
jae
add
add
jmp
add
fwait
test
test
add
or
add
mov
clc
repnz
jae
mov
pop
clc
repnz
jae
add
add
int3
mov
push
mov
xchg
ret
aam
add
mov
cld
nop
jmp
ds
sub
mov
add
push
mov
add
add
lock
mov
xor
scas
add
clc
repnz
jae
sub
lret
or
fiaddl
jmp
xor
add
data16
add
push
mov
xchg
ret
xchg
add
add
clc
repnz
jae
sub
repz
add
or
add
in
sub
lea
push
mov
xchg
ret
dec
test
sti
popf
call
fwait
cld
nop
jmp
add
add
mov
mov
xchg
ret
sti
mov
repz
or
clc
repnz
jae
popf
insl
or
test
mov
clc
repnz
jae
test
add
mov
add
pop
add
in
data16
and
popa
add
repnz
jae
insl
add
mov
mov
clc
repnz
jae
mov
js
repnz
inc
fwait
cld
nop
jmp
mov
jmp
shlb
add
pusha
cld
clc
repnz
jae
fiaddl
add
shr
clc
repnz
jae
addl
add
cmp
repnz
jae
jnp
mov
add
add
in
int
add
inc
sub
add
add
mov
dec
add
add
mov
cmpsb
push
xor
pop
cmp
repnz
jae
add
cmc
rcrl
jp
jbe
clc
repnz
jae
add
sub
loopne
or
nop
jae
pop
jb
add
outsb
icebp
add
sti
mov
fwait
cld
nop
jmp
or
jae
sub
mov
xchg
ret
mov
jb
sub
loop
clc
repnz
jae
aam
mov
fmuls
repnz
jae
aad
test
sub
cmpsl
add
and
je
clc
repnz
jae
add
add
push
mov
xchg
ret
add
jo
add
insb
jne
clc
repnz
jae
add
adc
pop
push
mov
xchg
ret
xor
test
jo
add
jne
inc
add
jecxz
add
add
repz
repnz
jae
add
and
add
jbe
clc
repnz
jae
iret
add
add
add
repnz
jae
add
clc
repnz
jae
add
add
mov
mov
mov
xchg
ret
add
lods
mov
clc
and
add
push
add
add
call
cmp
inc
add
mov
int
movb
repnz
jae
add
add
mov
adc
repnz
jae
add
add
add
nop
jae
outsb
aam
test
popf
add
les
ret
push
clc
repnz
jae
roll
jo
and
xor
add
add
repnz
jae
add
addb
push
clc
repnz
jae
add
scas
add
sub
gs
dec
popa
clc
repnz
jae
add
ja
add
sub
clc
repnz
jae
add
cmpsb
add
out
outsb
add
sbb
clc
repnz
jae
repz
xchg
add
aad
mov
clc
repnz
jae
jnp
jle
mov
mov
add
add
sbb
nop
add
call
clc
repnz
jae
add
add
push
push
mov
xchg
ret
mov
pop
add
add
jno
jmp
add
aad
add
inc
add
add
add
add
adc
cld
popl
clc
repnz
jae
add
mov
jecxz
lahf
mov
clc
repnz
jae
aam
mov
inc
add
outsl
loopne
repnz
jae
add
and
mov
clc
repnz
jae
dec
out
xchg
jmp
jae
fwait
add
inc
add
cmp
cld
nop
jmp
test
inc
add
cmp
add
repnz
jae
mov
add
mov
repnz
jae
or
add
and
inc
pop
loop
sahf
mov
clc
repnz
jae
add
mov
push
mov
xchg
ret
and
xor
jbe
mov
nop
jmp
out
fcmovbe
add
add
mov
mov
push
clc
repnz
jae
test
popa
add
repnz
jae
add
add
test
or
add
repnz
jae
add
jne
clc
repnz
jae
jecxz
pop
and
mov
inc
add
sub
add
fs
push
mov
push
add
call
add
jecxz
roll
jne
jne
clc
repnz
jae
add
sti
pop
sub
cld
nop
jmp
xor
add
add
and
cmp
cld
nop
jmp
add
mov
rolb
add
dec
fwait
cld
nop
jmp
add
insl
lods
inc
addr16
sbb
test
repnz
jae
sub
inc
mov
mov
int3
mov
push
mov
xchg
ret
add
add
mov
pusha
clc
repnz
jae
inc
add
scas
xorl
inc
jbe
jle
enter
jae
inc
test
add
cld
add
clc
repnz
jae
ljmp
sbb
jae
pop
in
add
add
fisttps
test
or
add
repnz
jae
scas
xor
xchg
add
mov
xchg
ret
add
repnz
jb
add
add
dec
fwait
cld
nop
jmp
insl
fiaddl
add
ja
add
scas
push
clc
repnz
jae
add
add
push
cmp
jmp
add
add
js
add
test
lea
mov
xchg
ret
jb
outsb
add
in
mov
nop
jae
jb
add
add
jecxz
push
fwait
cld
nop
jmp
add
sub
jo
out
mov
clc
repnz
jae
add
ljmp
mov
clc
repnz
jae
add
and
mov
test
repnz
jae
jmp
repz
dec
fisttps
out
inc
add
jecxz
add
out
iret
mov
clc
repnz
jae
outsb
iret
add
add
rolb
ficoms
andl
add
add
add
or
in
lret
inc
add
mov
add
mov
clc
repnz
jae
xchg
rolb
clc
repnz
jae
mov
add
mov
clc
repnz
jae
mov
repz
pusha
clc
repnz
jae
inc
lods
add
jecxz
popa
push
mov
xchg
ret
add
iret
and
jb
clc
repnz
jae
add
xchg
test
repnz
clc
repnz
jae
add
insl
add
mov
clc
repnz
jae
jo
sti
in
add
mov
add
add
push
js
mov
xchg
ret
js
mov
lret
add
clc
repnz
jae
add
add
add
xchg
sub
jmp
iret
inc
add
xchg
mov
clc
repnz
jae
inc
out
add
add
and
clc
repnz
jae
and
add
add
lret
push
mov
cld
mov
add
mov
add
cmp
fwait
cld
nop
jmp
sti
sti
xlat
mov
repnz
add
mov
clc
repnz
jae
roll
lret
add
sub
nop
jae
rcl
add
test
sub
repz
repnz
jae
inc
xchg
mov
movsb
clc
repnz
jae
add
add
add
add
lea
clc
repnz
jae
inc
add
add
mov
clc
repnz
jae
and
add
mov
add
clc
repnz
jae
mov
jb
add
mov
push
mov
xchg
ret
jb
popf
xor
or
nop
jae
test
dec
mov
movsb
push
mov
xchg
ret
jb
add
add
sbb
repnz
jae
add
add
xchg
add
clc
repnz
jae
add
leave
add
push
mov
xchg
ret
repz
xchg
out
cmc
add
cmp
nop
jae
xor
add
push
fwait
cld
nop
jmp
inc
add
add
lretw
repnz
jae
iret
jo
cmpsb
jb
in
lret
push
push
mov
xchg
ret
or
add
inc
add
clc
repnz
jae
add
add
fmuls
repnz
jae
add
addr16
add
add
dec
push
clc
repnz
jae
xchg
gs
push
mov
xchg
ret
repz
repnz
mov
fwait
cld
nop
jmp
add
mov
test
pop
pop
clc
repnz
jae
mov
add
iret
out
mov
mov
fwait
cld
nop
jmp
add
add
add
pop
dec
push
fwait
cld
nop
jmp
add
fwait
add
in
test
push
adc
push
push
mov
xchg
ret
add
and
and
push
mov
xchg
ret
aam
add
repnz
nop
jae
jb
scas
aad
repz
xchg
daa
fimuls
test
repnz
jae
add
jnp
add
sub
mov
add
add
inc
aad
fimull
mov
or
add
repnz
jae
add
sbb
roll
xchg
ret
fiaddl
add
sar
nop
jae
add
add
add
rcl
add
add
pop
clc
repnz
jae
add
lret
rcr
push
clc
repnz
jae
mov
add
or
push
mov
xchg
ret
popl
add
add
add
imul
clc
repnz
jae
add
add
and
repnz
jae
jb
add
add
inc
dec
pop
clc
repnz
jae
inc
add
xchg
jae
add
sti
cmpsb
out
mov
clc
repnz
jae
add
add
mov
dec
sub
test
add
lret
jo
add
fwait
cld
nop
jmp
jo
add
lret
sub
test
push
clc
repnz
jae
jae
xchg
mov
jae
add
mov
add
ss
repnz
jae
add
in
jae
lret
stos
mov
clc
repnz
jae
add
mov
lods
clc
repnz
jae
sub
test
add
fwait
cld
nop
jmp
jo
scas
add
sub
ja
or
nop
jmp
xchg
add
call
clc
repnz
jae
js
add
ljmp
jae
mov
mov
repnz
jae
add
add
add
pop
jp
popf
add
add
add
repz
add
adc
mov
xchg
ret
add
in
insl
add
add
clc
repnz
jae
js
insl
sub
add
xchg
add
jmp
add
jb
insl
add
test
mov
push
mov
xchg
ret
add
add
add
push
sub
fwait
cld
nop
jmp
xchg
cmpsb
xchg
cmpsb
and
mov
nop
jae
add
add
add
add
jmp
movsb
clc
repnz
jae
add
scas
xor
jne
clc
repnz
jae
add
mov
push
add
push
clc
repnz
jae
insl
lods
add
add
adc
add
add
repnz
jae
and
add
sub
xchg
test
add
mov
xchg
ret
add
add
addr16
push
push
mov
xchg
ret
add
add
add
sub
sar
repnz
jae
add
add
add
xor
mov
jo
repnz
jae
mov
add
add
lods
jae
push
clc
repnz
jae
add
add
add
add
mov
cmp
ret
jb
and
dec
pop
rep
clc
repnz
jae
sub
xlat
add
fcoml
mov
xchg
ret
aad
add
xlat
add
mov
fwait
cld
nop
jmp
jo
mov
dec
xor
fwait
cld
nop
jmp
add
in
pop
test
loopne
fwait
cld
nop
jmp
rcl
add
jecxz
add
mov
pop
clc
repnz
jae
popf
jo
mov
cmc
popa
or
ret
push
mov
xchg
ret
subl
add
or
jb
fwait
cld
nop
jmp
lods
jo
lcall
cmp
add
mov
fwait
add
add
add
mov
iret
std
div
fwait
cld
nop
jmp
out
add
add
in
shrl
pusha
repnz
ds
fs
test
add
sar
nop
jae
rep
inc
jmp
add
add
add
repnz
jae
addb
add
pop
push
mov
xchg
ret
data16
add
sub
add
clc
repnz
jae
add
scas
mov
clc
repnz
jae
out
add
jg
dec
cmp
repnz
jae
fwait
add
test
fs
mov
push
mov
xchg
ret
add
in
and
mov
je
cld
nop
jmp
add
add
nop
jae
add
inc
sti
addr16
add
add
clc
repnz
jae
pop
add
ja
add
int
pop
jae
repnz
jae
and
add
cld
nop
jmp
add
addb
clc
repnz
jae
add
add
jecxz
add
mov
clc
repnz
jae
add
jmp
jae
iret
add
and
add
mov
jae
scas
add
outsb
ja
add
fimuls
repz
add
add
inc
jnp
mov
jae
add
jae
ds
add
add
fwait
cld
nop
jmp
add
outsb
add
test
mov
push
clc
repnz
jae
add
and
jae
ja
mov
data16
push
push
mov
xchg
ret
and
add
adc
sub
jne
push
mov
xchg
ret
add
add
jae
add
clc
repnz
jae
add
add
jne
fwait
cld
nop
jmp
dec
ja
test
mov
fwait
cld
nop
jmp
sub
cltd
shl
clc
repnz
jae
fwait
cmpsb
jb
xlat
lret
jne
clc
repnz
jae
insl
test
jb
into
mov
clc
repnz
jae
addl
fmuls
mov
xchg
ret
fwait
js
insl
add
out
nop
push
mov
xchg
ret
add
dec
dec
mov
clc
repnz
jae
fs
jae
addl
jmp
mov
js
dec
ds
repnz
je
fwait
cld
nop
jmp
add
add
jmp
jae
insl
mov
mov
je
cmp
fistps
or
jb
add
add
scas
rep
clc
repnz
jae
xor
add
xchg
jno
rep
clc
repnz
jae
sub
xor
add
add
add
cmp
fwait
cld
nop
jmp
add
add
addb
dec
clc
repnz
jae
add
add
jo
add
lcall
out
jmp
add
aas
pushl
clc
repnz
jae
repnz
lret
add
cmp
cld
nop
jmp
inc
add
outsb
add
pop
jmp
add
andb
add
add
xchg
xchg
add
push
clc
repnz
jae
add
insl
test
pop
push
mov
xchg
ret
mov
cmp
mov
nop
jae
jnp
xchg
add
lcall
or
add
mov
add
clc
repnz
jae
add
imul
add
repnz
jae
add
add
cmc
cltd
pusha
push
mov
xchg
ret
add
add
jb
add
sbb
cld
nop
jmp
add
add
add
jge
add
add
clc
repnz
jae
cmpsb
add
arpl
xor
clc
repnz
jae
sub
test
iret
js
push
clc
repnz
jae
jmp
cmpsb
add
jo
outsb
test
jae
popf
insl
jecxz
add
add
mov
mov
jae
aam
add
inc
xchg
add
mov
push
mov
xchg
ret
add
add
xchg
cmp
clc
repnz
jae
add
jb
nop
add
add
nop
jae
xor
add
fimuls
cld
nop
jmp
shll
mov
add
fwait
cld
nop
jmp
fiaddl
lods
add
andl
jae
add
ja
mov
clc
repnz
jae
pop
sub
sti
xlat
jb
mov
clc
repnz
jae
add
out
add
testl
add
add
add
add
add
adcb
jmp
mov
xchg
ret
jae
mov
mov
add
mov
cmpsl
add
dec
dec
add
gs
add
outsb
or
cld
nop
jmp
add
add
mov
dec
ja
clc
repnz
jae
in
add
add
popa
clc
repnz
jae
ja
add
addl
decb
nop
jae
add
add
popf
xorl
nop
jae
fwait
and
add
clc
repnz
jae
add
add
or
fwait
cld
nop
jmp
add
jecxz
add
jnp
jne
clc
repnz
jae
iret
xlat
add
inc
and
clc
repnz
jae
dec
repnz
enter
cmp
fwait
cld
nop
jmp
repz
add
xor
mov
inc
add
cmpsb
rolb
in
fwait
jmp
clc
repnz
jae
and
out
and
push
icebp
inc
add
add
repz
push
mov
xchg
ret
add
and
cld
test
push
mov
xchg
ret
add
add
mov
clc
repnz
jae
add
push
clc
repnz
jae
aad
add
add
xchg
add
nop
jae
add
mov
outsb
clc
repnz
jae
outsb
xchg
xchg
add
jno
and
fwait
cld
nop
jmp
xchg
add
add
clc
repnz
jae
mov
add
and
pop
add
add
repnz
jae
ljmp
in
call
fwait
cld
nop
jmp
add
ljmp
imul
orl
inc
add
or
pop
clc
repnz
jae
add
add
add
inc
rolb
aad
cmpl
fwait
cld
nop
jmp
lret
jae
aaa
adc
mov
add
pop
clc
repnz
jae
add
add
js
jmp
add
out
mov
push
mov
xchg
ret
jb
add
add
push
clc
repnz
jae
add
lods
outsb
inc
jo
add
and
push
fs
repnz
jae
insl
jb
add
xor
and
push
clc
repnz
jae
add
add
jb
push
push
mov
xchg
ret
rolb
add
in
sbb
dec
adc
repnz
jae
sti
add
in
dec
insl
mov
fwait
cld
nop
jmp
add
add
cmp
fwait
cld
nop
jmp
pop
shrb
sub
clc
repnz
jae
lods
add
jo
add
lret
jne
clc
repnz
jae
add
out
mov
fwait
cld
nop
jmp
mov
outsb
data16
adc
add
outsb
and
mov
xchg
ret
xchg
add
add
clc
repnz
jae
inc
add
popf
data16
sub
dec
cmp
repnz
jae
addr16
pop
clc
repnz
jae
add
add
ljmp
repnz
jae
mov
add
sbb
nop
jmp
out
js
add
repz
nop
jae
ja
or
repz
add
clc
repnz
jae
lods
add
in
add
insb
mov
clc
repnz
jae
roll
aad
pop
mov
clc
repnz
jae
outsb
mov
fs
add
jg
fwait
cld
nop
jmp
scas
or
add
add
cmpw
fwait
cld
nop
jmp
ror
add
mov
repnz
jae
jo
add
add
movzwl
clc
repnz
jae
jae
add
insl
fwait
cmp
fwait
cld
nop
jmp
add
add
mov
xchg
ret
add
add
mov
xchg
ret
add
add
jb
add
push
mov
xchg
ret
add
add
add
mov
in
add
test
add
xchg
add
pop
fwait
cld
nop
jmp
data16
jmp
add
mov
clc
repnz
jae
add
add
add
dec
push
mov
add
movl
iret
jg
add
add
mov
repnz
jae
jmp
sarl
xor
clc
repnz
jae
outsb
sub
mov
clc
repnz
jae
pop
in
push
clc
repnz
jae
add
add
jb
add
fnsave
sar
nop
jae
add
add
add
push
mov
xchg
ret
add
call
clc
repnz
jae
add
and
clc
repnz
jae
jnp
mov
add
nop
jmp
repz
add
add
enter
xchg
ret
add
roll
dec
sub
clc
repnz
jae
xorb
inc
add
imul
clc
repnz
jae
add
dec
add
pop
mov
clc
repnz
jae
add
add
popl
adc
mov
pop
push
mov
xchg
ret
jo
add
andb
sbb
add
clc
repnz
jae
popf
add
loop
testb
push
clc
repnz
jae
add
jb
push
clc
repnz
jae
add
add
mov
xchg
ret
add
mov
add
jae
lret
add
add
add
push
mov
xchg
ret
add
add
ror
data16
test
sar
nop
jae
add
inc
mov
xor
testb
add
push
mov
xchg
ret
mov
test
jne
pop
mov
push
mov
xchg
ret
outsb
addl
xor
and
push
mov
xchg
ret
add
clc
repnz
jae
aam
add
add
add
jle
xabort
nop
jae
add
mov
in
or
in
cltd
add
sub
hlt
add
pop
fadds
add
add
nop
jmp
add
scas
add
out
and
ljmp
jmp
add
add
jne
fwait
cld
nop
jmp
addr16
and
add
add
sbb
clc
repnz
jae
add
add
add
movsl
fwait
cld
nop
jmp
add
js
repz
push
mov
xchg
ret
add
jnp
add
add
mov
clc
repnz
jae
fwait
lret
enter
nop
jmp
ja
or
add
js
jns
clc
repnz
jae
pop
mov
fiaddl
add
je
cld
nop
jmp
jo
add
repnz
jae
add
add
add
jb
add
fwait
cld
nop
jmp
add
add
add
xor
add
icebp
add
xor
andb
mov
cmpsl
push
repnz
jae
test
nop
add
mov
clc
repnz
jae
repz
sub
add
push
cld
nop
jmp
insl
add
add
add
incl
fwait
cld
nop
jmp
add
add
insb
sub
push
mov
xchg
ret
jae
cmpsb
add
add
clc
repnz
jae
add
cmpsb
add
push
clc
repnz
jae
rolb
add
add
pop
xlat
outsb
push
push
mov
xchg
ret
cmpl
add
add
fwait
cld
nop
jmp
sti
add
add
add
es
clc
repnz
jae
insl
xor
out
push
clc
repnz
jae
add
iret
add
int
pop
jae
repnz
jae
xchg
jle
fwait
cld
nop
jmp
sub
add
jo
out
aaa
ds
clc
repnz
jae
mov
mov
out
push
push
fwait
cld
nop
jmp
test
outsb
add
mov
repz
repnz
jae
jmp
jo
add
push
mov
xchg
ret
lret
in
jecxz
pop
sub
jae
add
add
andb
add
fwait
cld
nop
jmp
add
and
insl
pop
subl
incl
add
roll
test
addb
add
fwait
cld
nop
jmp
add
add
jae
add
ror
clc
repnz
jae
addr16
add
in
and
push
mov
xchg
ret
mov
je
testb
add
add
clc
repnz
jae
repz
popa
add
mov
xchg
ret
add
lret
add
and
push
add
lcall
repnz
jae
mov
add
and
cmp
ret
mov
jb
or
movsl
push
lcall
jmp
mov
test
add
clc
repnz
jae
ljmp
repnz
jae
add
xor
test
cld
nop
jmp
add
xchg
test
repnz
jae
lret
sub
add
add
icebp
clc
repnz
jae
pop
fs
pop
clc
repnz
jae
add
scas
add
insl
xor
pusha
clc
repnz
jae
add
add
jb
dec
add
clc
repnz
jae
add
add
and
sub
clc
repnz
jae
xchg
data16
mov
sub
imul
add
add
data16
movsl
xor
mov
xchg
ret
fwait
jo
out
add
les
inc
jl
popa
add
mov
xchg
ret
inc
pop
add
add
test
xchg
aad
data16
xlat
add
mov
sbb
cld
nop
jmp
iret
add
xchg
stc
mov
push
mov
xchg
ret
and
ds
jp
and
clc
repnz
jae
mov
add
mov
or
clc
repnz
jae
add
orl
inc
push
add
add
push
add
mov
fwait
cld
nop
jmp
mov
add
cmp
mov
xchg
ret
repz
sub
ret
out
mov
push
mov
xchg
ret
add
add
js
sub
jae
sti
jnp
add
add
add
push
clc
repnz
jae
insl
addr16
add
testb
loop
fnstsw
clc
repnz
jae
subb
add
jmp
outsb
outsb
jae
js
xor
add
je
clc
repnz
jae
sti
jnp
sub
nop
hlt
clc
repnz
jae
mov
mov
popf
fwait
cld
nop
jmp
jb
add
jb
inc
add
clc
repnz
jae
sub
jecxz
fidivl
add
cmp
jmp
js
add
add
add
jb
adc
mov
mov
clc
repnz
jae
out
outsb
jo
sub
jae
xlat
jecxz
add
add
add
inc
clc
repnz
jae
jo
add
add
jb
add
popa
add
mov
xchg
ret
add
inc
add
and
clc
repnz
jae
out
and
cmpsb
iret
dec
mov
fwait
cld
nop
jmp
add
insl
in
or
add
push
mov
xchg
ret
xlat
jmp
add
mov
clc
push
mov
xchg
ret
lods
fwait
add
sub
and
add
mov
push
mov
xchg
ret
add
add
jae
sbb
pop
clc
repnz
jae
xorb
repz
add
lahf
lds
xchg
ret
jo
shl
add
pop
push
mov
xchg
ret
add
aam
add
sub
repnz
jae
add
add
int3
xor
push
mov
xchg
ret
insl
add
pop
add
enter
push
clc
repnz
jae
jo
inc
test
xor
add
fwait
cld
nop
jmp
add
std
add
clc
repnz
jae
add
jo
add
repnz
jae
xchg
jmp
in
cmpsb
in
in
add
fwait
cld
nop
jmp
add
add
lret
nop
jmp
add
add
imul
fdivrp
incl
add
xchg
push
xor
clc
repnz
jae
add
add
notl
add
fwait
cld
nop
jmp
xlat
lods
add
push
push
clc
repnz
jae
add
xchg
movsl
jmp
nop
jae
jb
add
pop
mov
add
sbbb
incl
add
add
addb
pop
clc
repnz
jae
repz
jnp
add
cmpsb
add
test
out
clc
repnz
jae
aam
sarl
clc
repnz
jae
add
inc
add
mov
and
repnz
jae
test
aam
sub
dec
pop
push
mov
xchg
ret
in
jmp
add
add
testl
fwait
cld
nop
jmp
xchg
shlb
clc
repnz
jae
sub
add
addr16
loop
cwtl
sub
fwait
cld
nop
jmp
add
add
insl
jecxz
jae
add
shl
fwait
cld
nop
jmp
sub
fiaddl
add
jae
push
mov
mov
xchg
ret
mov
faddl
enter
jae
xrelease
jb
mov
or
fwait
cld
nop
jmp
add
lods
or
clc
repnz
jae
or
cmpsb
xchg
add
popf
cmp
clc
repnz
jae
or
add
inc
push
dec
mov
push
mov
xchg
ret
add
or
cld
movzwl
clc
repnz
jae
js
rolb
repz
cmpw
fwait
cld
nop
jmp
add
sub
inc
add
sbb
repz
repnz
jae
jo
add
dec
push
fwait
cld
nop
jmp
lret
cmpsb
add
add
add
call
clc
repnz
jae
add
ljmp
add
jnp
add
pop
xor
clc
repnz
jae
add
add
aad
xorl
mov
adc
add
lods
add
subl
leave
ds
jo
xlat
in
pop
pop
ja
adc
adc
bound
mov
inc
add
es
iret
sub
ljmp
loopne
push
add
jbe
cmc
adc
add
cmp
gs
les
pusha
add
fidivrl
andl
bound
mov
stos
rolb
add
fs
in
aaa
outsb
cmp
xchg
popa
es
mov
add
mov
and
mov
test
imul
popf
jbe
data16
add
push
add
add
cmp
addb
add
in
add
add
sbb
add
xor
lcall
add
add
add
jl
add
add
add
lea
push
lea
add
daa
fidivs
add
lret
cwtl
icebp
stos
icebp
cs
fndisi(8087
push
pusha
add
fnstsw
imul
repz
scas
xchg
mov
sbb
imul
bound
mov
add
mov
add
add
mov
push
add
add
dec
mov
sbbl
leave
test
adc
xor
inc
add
add
inc
push
add
rcll
lret
rolb
mov
add
add
sti
dec
push
add
pop
xchg
mov
mov
add
bound
mov
fdivp
add
lret
add
xor
sub
cmc
sub
add
and
mov
cld
mov
aaa
jo
jo
dec
mov
sahf
popa
xchg
add
mov
in
repnz
sub
push
add
lds
cmp
int3
sub
push
lahf
aam
inc
add
add
or
iret
jno
bound
mov
bound
mov
add
mov
bound
mov
add
sbb
or
sbb
add
add
pop
pop
in
imul
xchg
add
lcall
imul
add
xlat
lods
xchg
add
add
add
add
add
test
cs
sbb
dec
fidivrl
cmp
add
add
cmp
or
add
pop
adc
stos
cmpsb
add
and
add
add
add
mov
fsub
mov
adc
out
lahf
ljmp
mov
lret
add
add
add
xor
mov
add
in
cmp
add
mov
out
dec
xor
pusha
add
loope
jns
add
mov
into
lret
push
add
mov
add
add
add
add
add
outsb
jle
mov
add
fisubrs
adc
xor
stc
stc
dec
sarl
xchg
jb
xchg
cmpsl
sub
lock
add
js
add
add
hlt
add
cmp
mov
fists
mov
mov
mov
lahf
hlt
add
pop
and
mov
push
add
enter
add
in
nop
add
iret
dec
jb
js
add
cmp
add
mov
pop
pushf
iret
in
lock
test
mov
sub
push
add
ret
aam
bound
mov
sbb
jo
add
push
add
xchg
fisubrs
mov
push
add
fmuls
inc
add
add
mov
inc
add
add
dec
and
and
add
pop
aad
in
fstpt
push
xchg
add
rolb
enter
add
cmc
lods
add
inc
add
dec
mov
add
sub
or
adc
data16
add
xchg
add
add
pop
pop
movsl
and
adc
mov
movsb
add
add
push
sbb
inc
in
mov
loop
push
lahf
dec
in
pop
out
xor
loop
xchg
fs
cmp
inc
add
in
mov
in
in
jb
mov
add
mov
add
mov
and
add
sub
mov
xchg
add
add
pop
rolb
sub
push
add
add
add
in
add
xchg
add
nop
add
lock
add
jmp
xor
dec
ds
repz
cmp
rolb
add
add
add
add
mov
add
mov
add
stos
push
add
cld
xchg
aas
inc
xor
scas
push
add
push
je
mov
jnp
sbb
add
cwtl
add
mov
inc
fldenv
repz
push
testb
lods
jp
mov
mov
cmpsl
ja
sub
mov
add
push
mov
int
fldl
add
xor
add
mov
push
xchg
cmp
push
and
mov
jecxz
int3
inc
into
cmp
add
movb
imul
rolb
cmpsl
push
dec
sbb
shll
sbb
add
dec
imull
movb
add
add
das
sbb
popf
pop
aam
cs
inc
add
add
add
fucomi
in
push
add
out
pop
mov
pop
loopne
inc
add
add
rcrl
mull
add
daa
xor
pusha
add
add
jb
sub
add
push
mov
lock
psubsb
pop
scas
ret
push
add
aam
mov
das
mov
or
mov
cmp
lds
test
add
fisubrl
mov
add
rolb
adc
inc
aad
add
das
nop
add
in
repz
sbb
add
jns
pusha
add
mov
push
sub
gs
cs
loopne
add
add
lods
inc
add
mov
movsl
clc
cmp
aad
add
dec
pushf
sub
inc
add
ret
add
mov
pop
pop
aas
ret
add
sti
scas
std
push
and
insb
sbb
rolb
in
popa
jno
in
add
jno
add
mov
xor
lods
add
out
stos
nop
add
add
test
lock
add
out
inc
add
ja
xor
les
lock
add
sub
pusha
add
jno
dec
aas
sbb
mov
add
fstps
add
add
add
sbb
mov
addb
imul
fs
add
add
cld
push
jmp
add
inc
add
cmp
loopne
stc
inc
add
cmp
inc
add
add
add
push
add
mov
adc
push
adc
sbb
add
test
mov
mov
add
enter
lea
jg
add
add
out
xor
in
int
sar
insb
xchg
add
dec
xchg
stos
ficompl
fnstcw
cwtl
pop
rolb
lret
mov
inc
pushf
andl
mov
sbb
sbb
inc
sub
add
add
push
add
daa
mov
int3
outsl
popf
pop
mov
lds
enter
sub
add
add
push
imul
int
je
sub
add
incb
icebp
decl
mov
xor
ljmp
pop
data16
enter
fisubrs
invd
cwtl
loop
or
sub
add
add
testb
int
sbb
mov
vsqrtss
cld
rol
ret
dec
pop
mov
cld
dec
pop
scas
popa
xor
stos
cmc
lahf
dec
repz
lret
pop
rolb
mov
add
mov
xor
dec
imul
loop
push
add
cmp
popl
add
and
mov
add
add
add
fwait
xchg
sbb
or
xchg
push
add
add
lock
in
test
ja
inc
add
into
test
add
and
into
and
mov
mov
pop
repz
add
lahf
and
out
adc
add
add
xchg
add
inc
add
movsl
ds
lds
inc
xor
fiaddl
ffreep
add
addb
ljmp
sbb
jb
push
add
and
mov
add
add
mov
js
add
add
push
add
addb
add
add
lcall
add
mov
add
push
add
ffreep
add
add
pop
and
sbb
add
or
push
add
les
in
sbb
jmp
add
add
adc
scas
and
mov
add
adc
push
add
cld
push
push
mov
into
insl
addb
sub
jae
sbb
sbb
add
or
add
jg
add
add
add
add
movsb
add
inc
add
mov
and
xchg
dec
inc
mov
iret
xchg
add
inc
out
leave
js
dec
jg
mov
fcomps
add
in
aad
add
hlt
add
ljmp
add
push
add
aas
jbe
jae
add
add
flds
add
xor
test
add
std
dec
xor
gs
mov
add
cltd
or
test
jg
call
ljmp
mov
jne
add
push
addb
outsb
and
pop
mov
sbb
into
xor
add
add
add
sub
test
adc
aam
sub
outsb
cmp
and
mov
mov
dec
gs
out
sub
push
and
cmpsl
xchg
mov
add
aaa
cmp
add
cmp
sbb
add
add
arpl
mov
jmp
dec
or
add
add
add
xorl
mov
xchg
imul
add
stos
jge
jo
pushf
push
in
xchg
data16
mov
pop
cmc
jae
add
mov
dec
cmpsl
push
add
mov
les
add
add
mov
add
or
lods
rolb
repz
add
dec
jp
in
dec
add
mov
add
add
xchg
cmc
out
add
fdivr
sbb
subl
dec
fsubl
pop
and
hlt
add
addb
movsb
add
fsts
add
xchg
rolb
pop
addb
int
add
adc
aaa
mov
xchg
test
addb
add
ficoml
add
add
add
int
adc
aas
adc
mov
jne
or
movsl
sub
in
adc
and
mov
adc
mov
mov
push
mov
rolb
mov
or
push
add
add
add
aam
outsl
cmp
jb
mov
das
movsb
add
loopne
leave
pop
xlat
or
and
mov
out
add
in
rol
lds
add
rolb
out
jmp
add
mov
lcall
outsb
cltd
movsb
add
add
inc
sbbl
add
add
mov
or
scas
mov
cmpsb
add
xchg
inc
lock
add
and
push
inc
add
fsts
pop
cmp
stc
sbb
sbb
push
push
add
ret
jecxz
mov
out
xor
addb
loopne
xchg
adc
push
jge
add
addr16
lahf
les
xchg
mov
jl
addb
pop
bound
mov
sbb
mov
lahf
movb
add
mov
mov
cmpsl
push
sahf
jmp
cmpsb
add
addb
fnstenv
sub
xchg
test
stos
inc
loope
add
push
add
out
mov
xchg
add
bound
mov
add
xchg
xchg
dec
cmp
sbb
add
add
add
or
xchg
add
mov
es
add
add
daa
mov
js
shrl
pop
imull
mov
inc
imul
cmp
add
add
add
daa
add
ret
jbe
xor
fstpt
sbb
out
jns
or
inc
add
add
add
add
push
add
sbb
add
add
pop
fidivl
xchg
add
and
add
add
mov
in
xchg
add
mov
xchg
ss
add
mov
xchg
add
mov
cmpsl
sbb
int
dec
rcll
pop
in
addb
push
int
shll
popf
jb
aam
push
add
add
fistl
lods
data16
sahf
sahf
pop
push
add
repnz
add
inc
movsl
fsubl
cmp
sbb
ss
push
dec
lahf
lret
mov
pop
lock
add
add
addb
add
add
add
testl
inc
mov
add
add
popa
repnz
add
add
sbb
scas
js
ret
dec
pop
mov
push
add
fstpt
push
push
add
mov
rolb
push
decb
or
std
cmpsl
xor
aaa
inc
addb
enter
out
cmp
cmp
mov
lret
testb
add
int3
cmp
xchg
sbb
add
mov
arpl
mov
xor
dec
xchg
jp
mov
add
add
mov
mov
fcoms
mov
loope
pop
cmp
add
iret
dec
pop
pop
aam
ljmp
xchg
fldcw
negl
dec
inc
add
sti
mov
out
nop
add
or
stc
pushf
inc
jecxz
mov
sahf
insl
ljmp
add
add
mov
in
and
mov
repz
loop
cmc
sub
bound
mov
call
test
lret
scas
out
mov
cmp
call
adc
repnz
add
movb
sti
lock
xor
rolb
cmc
inc
add
sbb
mov
push
inc
loop
xor
add
lahf
jg
add
sbb
push
add
mov
cmc
inc
add
sbb
push
add
add
aad
add
push
add
dec
ljmp
pop
test
jne
cmp
testb
testb
sbb
dec
clc
sarl
and
js
imul
xor
or
movsb
add
jp
add
mov
fisubrl
imul
xchg
mov
shl
xor
je
bound
mov
add
jmp
mov
add
mov
icebp
cwtl
mov
addb
cmp
push
mov
add
lret
xchg
cmp
int
in
std
lret
xchg
inc
add
pop
or
test
mov
add
insl
repnz
cmp
fmuls
and
or
lock
pop
popa
imul
lods
fnstsw
fucomi
data16
add
add
adcl
pop
and
mov
adc
add
mov
add
aad
push
add
add
add
insb
out
sbb
mov
rolb
icebp
xor
mov
cs
cmpsl
movb
shl
and
std
ljmp
je
fistpl
loope
adc
dec
pop
data16
fiaddl
push
add
add
jno
xlat
leave
and
jae
loop
repz
mov
cwtl
sti
add
gs
add
add
and
mov
push
popf
repnz
push
add
add
add
cmp
xchg
or
loop
jb
jg
inc
add
add
or
lock
arpl
add
add
arpl
add
xor
adc
sbb
jle
fwait
mov
add
lahf
int3
push
add
iret
push
nop
add
or
pop
aad
xchg
and
arpl
add
add
add
sbb
add
add
jbe
push
rolb
dec
insb
out
test
add
insl
pop
jle
pop
jbe
les
ret
pop
ss
inc
add
dec
pop
adc
sahf
jl
cli
loopne
imul
adc
mov
fucomip
insl
sub
add
add
add
imul
repz
mov
dec
insl
aam
jp
add
les
pop
ja
add
add
mov
mov
clc
loopne
jns
scas
fisubrs
add
add
add
sub
out
es
mov
add
add
cmp
push
add
test
fiaddl
adc
rolb
add
sahf
out
sbb
imul
adc
out
rol
add
loope
js
ja
mov
xor
aaa
xchg
mov
add
inc
cmc
fnstsw
jb
and
add
fsubrs
xor
sub
add
add
add
sbb
add
add
addb
in
and
mov
and
xchg
add
lcall
dec
push
pop
incb
rolb
xchg
movb
add
cltd
xchg
add
adc
add
inc
ds
ja
add
mov
or
add
add
pop
out
sub
push
insb
xlat
or
add
into
pop
mov
add
add
icebp
jl
add
test
add
xchg
add
mov
cmp
inc
testb
gs
dec
lcall
add
xchg
testb
add
lahf
repz
add
add
adc
cli
inc
add
xor
fstl
add
testb
addb
jle
pop
add
mov
add
add
add
jae
lods
hlt
add
mov
sbb
mov
rolb
pop
and
pop
fs
cmc
fnsave
add
mov
mov
add
mov
sahf
stos
bound
mov
add
shll
push
add
sti
inc
add
addr16
dec
adc
inc
add
lock
dec
iret
jns
out
cmp
add
pop
ds
xchg
add
push
add
add
lret
cltd
push
add
imul
sahf
call
and
mov
add
add
rcrl
into
pop
xchg
mov
add
gs
xchg
aad
jge
mov
add
add
jecxz
cmp
add
mov
xor
inc
stos
scas
lods
dec
jmp
and
mov
adc
out
iret
sti
mov
daa
lcall
sbb
adc
cmp
fstps
fwait
loopne
lret
js
lcall
mov
cmc
iret
add
mov
loope
lods
push
and
mov
dec
leave
dec
outsl
jae
repnz
add
insl
lods
cmp
or
arpl
add
dec
cmpsl
xor
add
push
sbb
mov
gs
pop
add
or
or
add
adc
push
add
dec
jg
enter
push
add
jne
add
mov
les
mov
movsb
add
xchg
inc
add
push
add
push
add
mov
add
pop
dec
xlat
adcl
dec
xchg
add
sub
gs
jno
loope
adc
push
cmp
sub
mov
add
sub
movsb
add
add
add
mov
add
test
xlat
insl
xchg
add
add
jp
enter
iret
lods
push
xchg
in
sub
sbb
ja
js
testb
add
add
mov
mov
cmp
dec
sub
xchg
add
shll
movsb
add
stc
add
aaa
inc
add
inc
add
repz
or
ljmp
imul
add
data16
lret
fdivrs
add
push
mov
inc
rcll
mov
xor
add
push
outsb
push
mov
in
cmpl
add
add
add
fistpll
jne
xchg
stos
jo
mov
pop
adc
add
add
popf
into
fidivs
add
add
idivl
fldcw
xor
pop
rolb
test
xchg
xor
add
mov
add
mov
fwait
lahf
repnz
xchg
sbb
rorl
xchg
add
sbb
mov
add
add
cld
xchg
lods
fimuls
imul
push
imul
cmpsb
add
add
ljmp
add
and
add
mov
ret
cmp
add
add
add
movb
js
add
add
je
mov
pop
jne
sahf
lock
mov
mov
push
add
push
je
lea
add
loope
add
or
add
aam
push
add
mov
jo
xlat
pop
pop
out
cmp
inc
dec
leave
jecxz
ja
add
add
mov
fistl
enter
das
out
rolb
push
add
add
pop
aam
pop
clc
jno
std
adc
iret
testb
add
add
jmp
es
loop
fbld
pop
adc
test
stc
add
mov
mov
jl
add
jmp
sub
loopne
pop
dec
push
lods
aaa
pop
pushf
cli
test
add
inc
add
mov
mov
mov
addr16
add
mov
ja
inc
pop
aaa
inc
test
xor
pop
dec
xor
add
add
pop
adc
mov
stc
test
push
add
xor
addb
add
lds
pop
jno
stos
pusha
add
add
or
pusha
add
popa
add
and
mov
pop
stos
mov
mov
lret
mov
xor
sarl
pop
add
mov
inc
add
sub
jg
lret
mov
movsb
add
mov
shl
into
mov
test
dec
mov
xchg
jbe
pushf
inc
clc
push
test
adc
gs
in
cmpsb
add
add
add
mov
add
mov
xchg
add
imul
fstl
push
add
adc
movb
sti
add
mov
push
sub
pop
movaps
jnp
add
add
aad
sbb
add
add
pop
inc
pop
jp
lock
add
add
testb
out
push
add
push
add
add
jb
loop
pop
mov
int3
fwait
iret
or
add
add
add
rolb
add
test
mov
sti
jg
jge
dec
or
bound
mov
add
mov
cmp
and
cmp
cs
add
les
mov
pop
sbb
mov
cmpsb
add
add
add
mov
pop
movl
xchg
inc
jmp
xor
add
inc
add
fdivs
nop
add
pop
daa
add
mov
add
mov
leave
aad
push
pop
shll
mov
mov
adc
dec
cwtl
ljmp
fistl
add
and
mov
movsl
jmp
rolb
mov
push
add
bound
mov
and
add
jae
add
add
add
out
nop
add
dec
mov
jb
data16
pop
sahf
push
add
pop
movb
mov
outsb
sahf
test
pop
in
push
movsl
imul
test
mov
xchg
push
add
cmc
in
cmpl
add
sbb
lcall
ret
add
shll
adc
and
push
out
sbb
fs
add
add
add
repz
lcall
add
push
mov
lods
sub
push
mov
addr16
rolb
sub
rolb
inc
add
xor
jno
cltd
out
lock
movsb
add
in
add
sysexit
in
dec
ja
push
add
add
ret
in
add
lea
lea
ffreep
imul
sarl
pop
jle
add
mov
xchg
pop
mov
add
push
add
mov
in
jecxz
clc
mov
add
js
or
aaa
or
or
mov
lahf
pop
inc
add
clc
scas
adcl
insb
fimull
rolb
add
cwtl
addr16
xor
rcrl
add
and
push
sbb
cld
test
das
add
add
add
ret
hlt
add
add
add
jecxz
inc
add
add
ds
inc
add
cs
push
add
pop
outsl
add
cmpsl
ficoml
addr16
jae
add
adc
push
cld
rorl
cwtl
hlt
add
add
jnp
negl
cmp
fiaddl
adcl
mov
arpl
and
dec
dec
sbb
adc
jns
add
add
les
or
xor
xor
dec
xchg
add
mov
cmpsb
add
inc
add
pop
or
mov
xor
pop
addb
sbb
pop
add
mov
inc
add
add
jl
add
stc
sub
cltd
dec
pop
xor
add
test
pop
cs
xchg
push
add
xor
mov
mov
addb
adc
inc
add
aad
outsl
pop
cmp
sub
inc
add
ds
aaa
leave
loopne
add
add
bound
mov
aad
add
cmpsl
mov
and
jnp
add
and
inc
xor
out
ja
pop
cmp
add
inc
adc
mov
lcall
popa
mov
sarl
add
add
mov
sbb
add
add
cmp
cld
push
cmc
in
cwtl
adc
and
mov
ljmp
add
pushf
mov
mov
adc
adc
dec
outsl
in
bound
mov
and
mov
cmpsb
add
push
add
push
add
add
xchg
add
add
ds
add
add
les
icebp
mov
add
outsb
lret
add
mov
mov
add
add
mov
adc
test
adc
jne
movb
cmp
xchg
add
enter
cmovnp
sub
push
add
dec
mov
mov
add
mov
add
add
push
add
add
lods
xchg
add
fistpll
aam
lea
out
stc
mov
lods
pop
adc
add
add
stos
movb
add
push
add
das
add
jno
rcl
mov
xchg
fidivl
sub
add
add
cmc
data16
mov
push
pop
xor
inc
add
add
add
push
dec
xchg
adc
mov
shrl
jno
clc
jns
loopne
cmp
sbb
jg
add
testb
fcoms
add
xor
movsb
add
call
testb
movb
pop
adc
and
mov
mov
mov
dec
dec
cmp
int
je
jg
add
add
arpl
add
inc
dec
mov
aas
xor
scas
push
les
pop
jbe
dec
addr16
dec
imul
sub
cmp
ret
popa
movsb
add
add
enter
xchg
add
or
add
leave
out
jp
add
out
mov
add
mov
mov
jns
mov
cltd
cld
xchg
int3
sbb
add
sar
xchg
movsb
add
jbe
imul
scas
insb
movsb
add
ret
push
loopne
xlat
sub
adc
add
in
xlat
pop
ficomps
lret
movsb
add
add
aam
fstpt
push
add
add
add
add
pop
and
out
loop
cmp
xor
jbe
or
cmp
inc
test
rolb
jp
cltd
push
add
sub
pop
adc
xor
add
mov
add
add
jo
ds
mov
push
enter
sub
and
mov
leave
or
add
dec
aam
mov
cmp
add
lods
xor
rolb
aam
mov
add
lods
add
in
mov
pop
push
jmp
lds
mov
add
sarl
data16
add
inc
add
int
and
shrl
jae
cs
popf
rolb
cs
add
sar
mov
sub
jecxz
pop
xor
xor
add
dec
cwtl
push
add
stos
xchg
adc
enter
add
pop
pop
adc
adc
lea
jno
add
xor
jle
clc
popf
inc
mov
js
push
add
add
jecxz
int3
insb
jo
sub
inc
add
add
pushf
fxtract
add
add
out
adc
out
rolb
pushf
pop
testb
je
jo
addb
mov
add
out
push
add
aaa
xor
fsub
scas
loop
mov
add
mov
add
add
add
xor
fcomi
add
jmp
xchg
add
sahf
fcoml
and
mov
add
stos
outsl
movsl
pop
popf
push
int3
sub
xor
ljmp
or
add
inc
add
int
jl
or
mov
mov
add
mov
cwtl
call
add
sub
sub
rcl
push
add
mov
add
ret
push
add
pop
lds
jle
add
add
pop
insl
add
hlt
add
cltd
mov
imul
cmp
in
jmp
and
mov
dec
insb
ljmp
je
push
pushf
sbb
xchg
pop
jmp
mov
loopne
mov
push
add
xchg
fsubs
add
jno
sbb
sub
sbb
mov
inc
add
jg
mov
rolb
xor
arpl
les
mov
int
ja
add
add
xlat
test
add
mov
push
in
cld
push
add
or
add
cmpl
add
mov
mov
pusha
add
cmp
pop
call
aas
cli
push
lcall
pop
cmpsl
scas
add
cmp
sbb
dec
call
popf
test
cli
cmp
add
jl
stc
mov
icebp
shll
outsl
fistps
or
add
jne
add
push
fmul
lret
add
xor
mov
add
and
fistpll
sub
or
add
pop
ret
add
ret
and
mov
xchg
and
mov
xchg
add
mov
sub
cmpsb
add
aad
add
arpl
add
popf
dec
jno
jmp
mov
lsl
push
add
xlat
movb
stc
test
add
cs
and
sub
adc
lahf
in
out
popa
lret
jns
pop
dec
mov
out
nop
add
jg
call
push
add
jb,pt
lea
add
or
add
enter
xchg
add
add
movnti
mov
mov
sub
or
add
or
xor
sahf
clc
mov
sbb
loopne
adc
out
mov
inc
add
xchg
cltd
aam
sbb
sti
jecxz
jns
stc
mov
movb
add
jae
add
add
inc
add
cmpsl
rorl
jnp
add
data16
jge
add
jns
add
add
inc
rolb
jl
add
stos
sbb
or
xchg
imul
xor
flds
add
insb
addb
mov
push
lods
rolb
movsb
add
and
mov
ficoms
xchg
add
add
and
xor
insl
loope
push
sbb
dec
push
inc
mov
lcall
into
aad
out
add
dec
pop
stc
aad
mov
inc
adc
imul
mov
out
fcomps
xor
jg
add
rolb
mov
adc
mov
add
jno
mov
push
add
addb
clc
mov
ret
or
fimuls
int
add
adc
adc
je
push
add
push
xor
add
lods
cmp
add
pusha
add
divl
hlt
add
pop
mov
push
add
cld
jne
lock
xchg
or
mov
dec
pop
mov
cltd
ret
lods
jmp
bound
mov
add
mov
int3
inc
jmp
out
pop
sub
mov
or
cmp
mov
in
xchg
add
inc
jne
fidivl
push
and
mov
push
add
sub
add
cmp
inc
add
lods
dec
test
add
add
dec
mov
pop
dec
bound
mov
add
sti
fistpl
setnp
and
pop
add
mov
mov
dec
sbb
call
xchg
push
push
add
fdivl
sub
push
add
add
test
mov
push
add
mov
mov
movb
notl
stos
xor
fldt
add
sbb
add
dec
sbbl
clc
jge
mov
out
pop
push
scas
add
adc
add
sbb
in
roll
repnz
outsl
and
inc
bound
mov
fs
ds
jb
nop
add
jmp
idiv
sbb
add
aaa
ja
sbb
add
je
dec
jno
xor
xor
fcompl
xchg
inc
cwtl
ljmp
xor
add
or
outsb
sub
or
add
rorl
clc
out
push
add
stos
mov
add
add
fdiv
add
push
aam
fcoml
addb
inc
cmpsl
cld
cmc
mov
cwtl
mov
sbb
add
insl
cmp
add
pusha
add
add
movsb
add
aam
test
mov
mov
push
add
add
fwait
popf
fsubl
add
repnz
inc
add
and
mov
popf
jo
xor
nop
add
add
mov
add
add
mov
add
test
outsl
data16
add
and
rolb
cmp
shrl
mov
jle
mov
mov
xchg
aas
and
mov
add
in
pushf
out
jnp
jbe
push
add
jne
add
add
or
pop
addr16
add
add
mov
add
jo
imul
cmp
pop
leave
mov
add
jl
xchg
add
add
add
add
add
xor
pushl
add
mov
mov
add
jae
add
int
add
or
add
add
xchg
add
fldz
xor
imul
push
cmp
push
ficoml
filds
mov
scas
push
mov
or
loope
aad
pop
xchg
bound
mov
adc
add
aam
pop
pop
xchg
add
add
bound
mov
inc
push
pop
and
mov
int
add
mov
add
pop
int3
fs
rolb
sub
add
cld
and
pop
testb
cmp
add
add
add
xlat
jnp
add
cmp
mov
daa
adc
mov
add
mov
mov
pop
lds
sbb
idivl
xchg
add
jle
xchg
add
add
clc
sbb
sarl
sub
nop
add
add
add
mov
addb
testl
mov
shll
sbb
mov
add
jge
mov
inc
rcll
add
fistpl
jno
ret
sbb
addr16
sub
add
cwtl
push
add
xor
enter
jg
aam
inc
add
add
jecxz
inc
popa
sti
stc
in
push
add
push
testb
jp
adc
sbb
popa
sbb
add
xchg
add
or
add
repnz
ret
jge
add
aaa
lds
xor
test
jl
add
les
pop
dec
test
popa
xor
jns
lret
mov
add
mov
xchg
add
push
push
jge
add
daa
addb
bound
mov
add
xor
out
sahf
dec
adc
inc
add
iret
mov
lds
xchg
inc
add
mov
dec
rcrl
lock
add
add
mov
repz
mov
pop
fidivrl
mov
mov
add
test
add
jns
sub
add
add
add
inc
push
add
mov
and
ror
out
outsb
stc
bound
mov
mov
pop
int
xor
and
mov
mov
dec
bound
mov
outsl
xchg
add
adc
add
popa
into
rolb
stos
cwtl
dec
xchg
add
jmp
add
mov
inc
rolb
sbb
test
stc
scas
pop
pop
mov
pop
cmp
add
repnz
xchg
mov
imul
bound
mov
lret
jg
mov
push
xchg
bound
mov
stos
mov
in
in
shl
adc
xchg
add
sbb
cmpsl
outsb
imul
cmp
cli
and
mov
imul
pusha
add
sbb
push
add
add
mov
mov
xchg
mov
xor
sarl
push
add
pop
lock
mov
test
cltd
jmp
add
adc
pop
dec
xchg
movb
aas
mov
push
loope
add
add
aaa
push
in
imul
add
or
loopne
psubusw
or
in
push
xlat
ret
add
xor
fildl
fisttpl
pop
addb
xor
add
add
cmp
jae
sbb
add
add
sub
sub
nop
add
push
mov
inc
add
mov
fsts
movsl
pop
adc
mov
mov
sub
imul
push
add
push
lret
push
add
sub
add
das
dec
mov
xchg
add
xor
xlat
inc
push
ret
add
mov
sub
jne
add
adc
adc
xor
xor
xchg
sahf
mov
cltd
into
incl
cmp
add
sub
inc
xchg
add
pop
js
add
sub
push
xor
daa
sub
gs
add
aaa
mov
inc
repz
xor
inc
add
outsl
add
mov
mov
out
add
or
mov
push
shll
filds
pop
add
and
ret
sbb
jne
loope
adc
aaa
aas
out
xor
rolb
sub
xchg
lahf
ficomps
sub
or
ret
or
mov
sub
adc
popf
push
add
adc
addb
jle
add
cmp
mov
add
pusha
add
hlt
add
or
call
or
add
mov
cmp
add
lock
mov
add
aaa
sti
arpl
pop
inc
add
add
mov
pop
ret
cmp
pushl
fadd
add
push
add
add
xchg
insb
sbb
jno
push
push
nop
add
add
ret
add
jnp
or
add
in
mov
add
add
call
mov
push
add
hlt
add
popf
ds
add
repz
movb
sbb
std
in
push
add
mov
mov
add
add
sub
xchg
imul
adc
mov
add
cli
sahf
xlat
cmp
jle
adc
add
popa
jmp
add
pop
pop
bswap
mov
and
in
mov
mov
add
and
in
in
rolb
mov
pop
test
sbb
xchg
add
inc
mov
add
add
mov
lds
lret
fsubs
into
insl
movsb
add
test
test
dec
mov
add
pop
lret
mov
iret
push
in
xchg
or
outsl
fcos
xchg
mov
insl
arpl
dec
setb
dec
test
subl
inc
jge
add
add
add
movsl
ret
mov
daa
loopne
ja
sub
add
jns
add
add
add
stc
mov
push
add
fildl
test
pop
aaa
ljmp
add
sub
xchg
add
flds
mov
add
adc
push
cmc
movsb
add
mov
scas
inc
add
sub
dec
dec
lea
daa
add
add
clc
push
test
or
sbb
jae
test
loope
add
mov
and
pop
and
rolb
push
add
add
or
rolb
push
fdivrl
aas
adc
scas
mov
add
gs
addb
add
add
pop
and
cmc
push
outsl
mov
dec
mov
js
mov
mov
add
add
add
add
jecxz
push
jge
out
repnz
or
mov
mov
add
mov
add
add
adc
ret
les
loope
add
add
call
fisttps
rcll
sub
add
cmp
dec
or
pushf
aaa
sbb
xchg
adc
cmp
push
add
test
cltd
cmp
add
addb
add
jae
lds
cmpsb
add
add
les
and
mov
mov
mov
incl
pop
adc
jo
xchg
add
test
call
mov
xchg
mov
push
add
mov
add
cmp
add
or
mov
fmulp
cmp
fadds
mov
setle
outsb
ljmp
mov
fbstp
add
sub
pop
pop
repz
add
cmpsl
cmp
ret
mov
rolb
repz
xchg
jl,pn
add
add
ja
add
fucom
add
aam
sbb
cld
lret
mov
aad
add
add
cld
push
pop
outsl
aas
xchg
mov
inc
add
add
dec
mov
mov
mov
add
add
cs
in
xor
xchg
mov
cltd
cmpsl
xor
pop
xlat
push
add
incl
add
lds
loopne
adc
push
add
fadds
cmp
cmpsb
add
add
out
rolb
add
adc
cmp
add
dec
add
loope
out
aaa
test
adc
and
or
dec
sub
mov
mov
add
in
cmp
addb
add
add
bound
mov
or
bound
mov
push
adc
inc
add
mov
insb
stc
in
dec
fcmove
jne
out
jns
pop
add
jno
and
add
or
push
lds
xor
xor
pop
ret
jb
aas
cwtl
push
add
dec
add
insb
gs
adc
add
addb
rcll
nop
add
stos
negl
mov
popa
and
inc
add
movb
mov
scas
fistps
fmul
xor
lds
movsb
add
pop
push
add
mov
imul
sub
lahf
in
lcall
and
and
add
data16
pop
adc
add
mov
rcll
jp
jge
and
add
add
out
sbb
xchg
aas
aad
cmp
inc
enter
add
addl
iret
lcall
sti
xchg
loop
cmp
rolb
enter
or
add
jle
sbb
push
add
cmp
testb
arpl
jns
mov
sub
add
add
loope
add
add
add
addb
add
addr16
arpl
add
mov
cli
int
add
std
out
add
add
repnz
std
or
add
xor
mov
movsb
add
das
das
popa
daa
mov
faddl
add
daa
cmpsb
add
enter
outsl
sbb
mov
popf
cmpsl
push
dec
xchg
add
jg
add
ds
jb
or
sub
push
arpl
lock
sahf
shll
lock
add
sbb
jle
sbb
add
imul
sbb
add
jb
push
add
add
add
int3
js
sub
add
paddsb
sub
sub
xchg
or
lret
add
addr16
ficomps
mov
jb
incb
outsb
outsl
ret
hlt
add
dec
and
dec
cmp
data16
mov
in
scas
jns
add
add
add
add
pushf
rolb
or
or
mov
out
sub
add
jo
ror
jl
sbb
stos
movb
bound
mov
mov
add
repz
add
add
add
or
enter
mov
mov
fisttpl
and
ss
push
add
repz
fmull
pop
pop
jne
mov
add
add
add
outsl
mov
lea
push
add
mov
add
mov
lcall
aad
mov
inc
add
clc
mov
xchg
jnp
frstor
mov
add
jmp
mov
xchg
push
and
mov
xchg
dec
loopne
mov
and
mov
xchg
add
add
pop
rolb
bound
mov
out
sub
jb
inc
add
sbb
aad
xchg
je
xchg
add
add
mov
cmp
mov
sbb
jno
loopne
enter
xor
mov
xchg
add
add
add
add
add
outsl
mov
mov
cwtl
sub
pop
sbb
add
pop
pop
out
xor
movsb
add
ja
add
add
and
sub
add
jnp
adc
add
xor
and
mov
add
cmp
in
sarl
add
add
mov
xchg
add
daa
sub
xor
inc
add
add
mov
xor
sub
mov
add
add
add
lcall
xchg
inc
add
xchg
sub
add
in
push
add
ficompl
lods
fucom
fidivl
leave
add
mov
mov
call
add
cmp
addb
inc
jle
add
fsqrt
or
roll
mov
push
jne
or
xchg
cmpsl
pop
testb
aad
add
mov
mov
add
mov
add
add
pop
sub
add
add
aam
mov
lcall
add
mov
pop
test
data16
mov
dec
rorl
mov
and
push
in
jle
add
add
jns
sub
pop
cs
insb
mov
jae
and
add
cmpsb
add
add
out
add
hlt
add
push
dec
enter
add
mov
lcall
dec
dec
xor
in
mov
dec
lret
mov
add
mov
add
jmp
or
add
add
into
cld
xchg
pop
push
xorl
loop
sbb
add
sbb
rolb
rcr
loopne
or
pop
aas
rolb
cmc
mov
repnz
sbb
jl
inc
push
add
in
pop
pushf
loop
pop
cmp
enter
or
call
rolb
std
ret
movsl
sbb
je
mov
loopne
mov
arpl
add
pop
or
add
in
sub
add
mov
xchg
xor
dec
sub
sbb
out
push
add
iret
jo
movsb
add
enter
add
cmc
push
add
scas
aas
pop
adc
push
add
add
lahf
push
add
out
ret
lcall
xchg
add
xor
jmp
cmp
out
loope
repnz
dec
jge
push
out
in
push
arpl
dec
mov
test
movsb
add
add
sbb
mov
xchg
mov
add
enter
or
imul
mov
test
mov
in
test
dec
inc
add
add
mov
adc
add
add
add
mov
mov
add
fistpll
outsb
cmp
add
mov
xor
xchg
movsl
imul
add
add
xor
lcall
repz
jne
xor
mov
add
mov
lsl
dec
fcmove
add
add
push
add
lcall
pop
or
cld
or
mov
dec
mov
addb
add
xor
cmpsb
add
sahf
pop
loope
dec
enter
jl
dec
pusha
add
add
jp
adc
bound
mov
cmp
add
or
or
add
cld
adc
arpl
inc
stos
daa
cmpsb
add
imull
mov
dec
sbb
add
add
sub
add
sbb
add
push
add
push
add
or
xchg
add
icebp
add
mov
lcall
shrl
fistl
jnp
mov
ljmp
mov
add
out
mov
adc
fnstenv
add
add
add
ds
xchg
aaa
push
add
pcmpeqd
ds
icebp
data16
cmpsb
add
div
sti
lds
pop
dec
sbb
inc
add
add
outsb
mov
int
aad
cli
xor
inc
add
addb
jmp
mov
jmp
lcall
les
lcall
add
or
jne
mov
clc
movsb
add
jns
jo
out
lret
int
inc
add
xchg
subl
lea
mov
sub
add
add
add
mov
dec
mov
andl
push
add
xor
mov
out
loope
nop
add
add
jnp
in
fstl
outsb
popf
testb
add
popf
lcall
and
mov
jle
push
add
out
out
add
add
outsb
sub
loopne
adc
rorl
cmpsb
add
add
adc
movsl
add
mov
add
sub
enter
pop
unpcklps
mull
addb
add
mov
ljmp
add
int
jae
add
xchg
adc
push
add
bound
mov
add
mov
push
addb
push
pop
sbb
in
fmul
dec
xor
clc
xchg
mov
repz
mov
add
test
mov
lret
les
jle
add
add
add
mov
leave
bound
mov
add
jge
push
or
mov
rolb
or
add
add
add
push
add
and
mov
mov
xchg
int3
test
test
mov
sbb
insb
mov
call
movsl
mov
xor
scas
rolb
sub
cwtl
inc
add
add
add
add
mov
mov
push
add
sbb
sti
popl
add
add
inc
dec
push
out
dec
pop
inc
add
ja
and
mov
jecxz
stc
rcrl
xchg
add
xchg
add
mov
or
addr16
jp
xor
in
mov
add
popa
xchg
add
and
mov
dec
cld
mov
xor
mov
cmpsb
add
jmp
cwtl
popf
pop
jbe
push
lods
push
xchg
nop
add
lret
and
bound
mov
movsb
add
imul
add
aaa
int3
shl
add
shll
outsb
push
add
push
dec
imul
jl
jae
jl
fs
ret
mov
out
int3
push
add
add
aam
inc
dec
aad
mov
adc
cmp
mov
std
das
mov
add
push
push
add
push
add
add
pushf
jnp
pushf
sub
adc
xchg
add
xchg
fwait
or
jns
insb
pop
scas
loopne
push
add
push
add
pop
dec
mov
jnp
aam
imul
mov
sahf
test
stos
push
je
pop
std
movl
rolb
add
mov
rolb
pop
out
stos
mov
add
add
mov
push
add
sub
add
out
mov
cmp
lods
addb
movsb
add
add
js
add
fists
je
push
add
xlat
inc
add
mov
cmp
imul
push
add
daa
rolb
add
insb
test
or
add
pop
xchg
leave
mov
xchg
add
add
push
jle
xor
xchg
add
or
sub
lret
push
xchg
add
add
add
add
out
movsb
add
or
jne
xchg
add
add
jecxz
arpl
add
xlat
jmp
add
sets
stos
mov
sbb
add
dec
xchg
add
add
add
mov
mov
pushf
mov
jl
inc
add
fnstsw
add
pop
adc
ljmp
xchg
aad
insb
mov
das
les
cmp
mov
pop
cwtl
xchg
add
arpl
add
call
into
leave
shrl
jno
mov
xchg
add
add
xor
mov
int
jnp
inc
hlt
add
mov
lods
jae
loope
sub
add
add
sti
cmp
push
add
cmp
stos
dec
inc
add
add
aaa
test
and
and
add
daa
pop
stc
adc
ret
pop
decb
imul
stos
pop
loop
outsb
das
jle
enter
inc
add
inc
add
cwtl
pop
xor
push
add
pop
cmc
stos
enter
ja
add
pop
fwait
inc
add
add
stc
fwait
jbe
mov
insl
div
add
mov
test
jp
add
cmp
add
push
and
mov
cmp
add
outsl
out
adc
cli
push
add
push
inc
add
fsubs
add
add
add
xchg
push
mov
arpl
bswap
inc
mov
inc
add
stos
hlt
add
sbb
cmpsl
icebp
cmp
sbb
add
dec
aas
mov
push
add
in
push
add
stos
mov
cmp
add
movsb
add
add
add
pop
and
adc
add
loopne
lret
add
pusha
add
add
xchg
scas
in
cmp
push
mov
add
xor
mov
push
add
add
sahf
mov
mov
adc
cs
and
xchg
lds
push
add
pop
mov
dec
std
movsl
or
out
add
mov
pop
and
shll
mov
testb
mov
fistl
add
add
adc
push
mov
out
divl
lahf
mov
idivl
stos
adc
cmpsl
cwtl
and
mov
movsl
xchg
add
int3
std
movb
mov
in
repz
sub
call
mov
add
jb
roll
or
sub
add
js
imul
rolb
and
jae
add
dec
lods
push
addr16
scas
and
mov
lea
sbb
inc
add
push
sbb
push
sbb
ret
add
fnstenv
cmc
pushf
push
jb
xor
mov
cmp
add
mov
bound
mov
dec
dec
out
mov
add
add
arpl
out
sub
mov
hlt
add
add
add
repnz
jge
xchg
add
data16
add
outsl
xchg
sbb
aaa
xchg
add
add
test
jns
inc
add
add
aas
outsb
sub
xchg
mov
jmp
jae
sbb
add
fiaddl
push
lcall
inc
add
mov
add
xor
lcall
xor
lods
insl
sbb
mov
jno
and
lea
jae
add
xchg
add
add
jg
xchg
add
push
add
outsb
bound
mov
int
jbe
outsb
pop
dec
push
cwtl
or
mov
adc
dec
mov
mov
cmp
mov
pop
jmp
add
and
mov
mov
out
repz
enter
lods
mov
jbe
ja
xchg
add
xor
inc
add
add
call
fs
mov
loopne
aam
dec
pop
pop
mov
adc
hlt
add
dec
dec
mov
repz
add
and
mov
lcall
ret
xor
insb
pop
xlat
hlt
add
fnstenv
add
add
mov
ds
mov
mov
negl
rolb
rcrl
es
add
loopne
adc
fcomps
rolb
add
add
dec
rolb
mov
addb
sub
or
add
add
movb
mul
add
add
push
add
sub
adc
incl
cli
jne
lret
fists
xchg
add
outsb
or
add
testb
add
add
insb
jl,pn
add
add
and
mov
add
les
lcall
adc
mov
push
add
lret
imul
cwtl
add
mov
add
add
loope
add
push
adc
movsb
add
sub
and
dec
fwait
mov
sbb
aas
nop
add
add
mov
push
sub
add
mov
add
lds
sub
jae
dec
sbb
lcall
cmp
add
vpmacssdqh
mov
aad
fcomp
movb
jge
stc
push
add
mov
movb
adc
loopne
js
lds
sti
inc
stos
sbb
and
mov
xchg
add
xchg
pop
call
add
add
mov
scas
popa
mov
xchg
add
add
mov
and
mov
daa
scas
mov
fmul
sbb
add
movsb
add
fimull
or
outsb
lret
mov
xchg
add
in
add
add
cmpsb
add
push
add
add
add
and
jno
pop
xor
jb
mov
ljmp
add
data16
dec
jae
and
add
mov
add
jg
rolb
xor
add
fldenv
jns
ljmp
cmp
jp
fstpt
xchg
cs
lock
cli
cs
xchg
add
push
add
push
or
pop
jecxz
jo
jecxz
add
add
ficompl
push
add
add
add
mov
jmp
jecxz
mov
xchg
add
pusha
add
jmp
add
add
daa
lahf
lret
or
add
add
lret
pop
adc
sub
lds
rcll
fdivl
addl
ja
add
leave
fimuls
add
leave
fisubrs
add
icebp
cld
fstps
cltd
mov
add
xlat
cmp
repz
adc
jbe
mov
xchg
add
lods
adc
sub
add
test
add
mov
add
loop
imul
mov
pop
push
clc
xchg
add
add
or
popf
pop
ja
fdivl
push
add
add
xchg
and
rolb
movsl
div
adc
add
add
add
pop
xchg
mov
incl
cltd
fsubrs
std
call
cli
mov
or
bound
mov
adc
or
mov
pop
arpl
or
cmp
add
xchg
sub
and
repnz
add
test
or
imul
bound
mov
pop
sub
aam
pop
cltd
or
fdivs
lea
dec
xchg
movb
add
add
insl
or
in
stos
sub
push
add
pop
jle
add
dec
xchg
insb
dec
ja
and
mov
aad
nop
add
punpckhbw
pop
bound
mov
icebp
dec
cmp
hlt
add
pop
bound
mov
add
les
xor
ljmp
call
pop
mov
pop
in
add
push
add
xor
outsb
sub
rolb
push
mov
and
mov
int3
mov
das
pop
in
jge
add
stos
les
push
push
add
sahf
popa
add
sbb
adc
addb
push
cmovle
and
aam
xchg
add
fdivrl
add
stc
insl
fstps
and
mov
cwtl
mov
jl
jge
push
cli
mov
push
adcl
add
icebp
mov
fcoms
add
mov
add
and
add
mov
mov
add
add
ret
add
jne
add
movb
out
sbb
in
or
popa
femms
cmc
fldpi
loope
push
add
add
jns
or
add
push
add
addb
or
sbb
push
jge
xchg
push
add
add
add
sub
movb
sbb
ret
dec
mov
lea
sbb
sbb
and
mov
push
add
aam
loop
scas
aas
pop
jmp
xchg
adc
inc
pop
test
js
cmp
pop
jne
fwait
lods
out
push
add
mov
add
sub
add
leave
data16
inc
jmp
sub
adc
pop
inc
add
mov
mov
testb
jbe
cwtl
inc
add
add
cmpsb
add
add
add
add
add
push
stc
mov
mov
mov
push
imul
xor
mov
sub
pop
lds
add
jns
add
lods
out
popa
add
add
xor
pop
mov
pop
js
mov
add
int3
bound
mov
loopne
pop
out
xchg
add
pop
adc
pop
jle
lret
dec
xchg
and
mov
add
rolb
add
mov
nop
add
dec
inc
add
mov
sarl
jb
and
mov
add
xchg
ret
cmpsl
mov
jmp
in
lcall
add
xchg
loope
fwait
outsl
sti
sbb
jmp
dec
sti
or
add
add
clc
setl
dec
sbb
add
mov
add
add
sbb
rcll
lds
or
add
lret
mov
and
mov
adc
add
bound
mov
mov
add
adc
sub
add
mov
add
dec
je
xor
mov
push
jne
fisttpl
lods
dec
cmpl
aam
mov
or
add
mov
push
add
imul
push
dec
lock
in
addl
add
add
mov
test
and
mov
add
add
add
pop
or
or
add
repnz
scas
insl
and
add
add
add
pop
and
mov
sbb
pop
jl
xor
inc
add
mov
clc
xchg
add
inc
xlat
or
inc
or
in
mov
data16
mov
lret
mov
aad
add
add
push
add
dec
addr16
jns
outsb
sbb
inc
add
mov
imul
xor
add
fwait
inc
jnp
add
ret
jmp
xchg
insl
ret
int
fsubs
jle
call
add
or
rolb
jmp
add
mov
fcmovnbe
rolb
mov
in
cmc
lods
xchg
ret
popf
or
xor
xor
add
mov
inc
outsl
add
cmp
aam
push
add
cmp
mov
in
xor
cmp
add
add
add
inc
iret
movb
xor
add
add
inc
mov
or
loopne
or
enter
pop
dec
scas
ret
addr16
movsl
dec
dec
add
outsb
fldl
mov
daa
mov
rolb
les
and
xchg
cwtl
sub
rolb
bound
mov
mov
aaa
pusha
add
jne
add
fistps
xchg
mov
test
mov
xor
add
repz
pop
lret
lods
mov
stos
jecxz
and
add
xor
call
add
lahf
push
rcrl
add
adc
popa
add
mov
js
add
add
push
add
and
mov
add
std
xchg
add
imul
inc
sbb
in
addb
jnp
dec
and
mov
mov
add
mov
lds
sub
fwait
cmp
rsm
adc
repz
mov
xchg
sbb
jnp
das
push
mov
add
add
push
add
cwtl
imul
add
add
sub
sbb
pop
leave
jmp
jae
into
std
jae
add
mov
add
mov
or
outsl
jo
push
xchg
mov
repz
mov
add
mov
and
sub
add
outsl
lahf
xor
add
adc
add
add
call
mov
mov
iret
jno
pop
in
sbb
add
inc
and
mov
add
sub
add
inc
jecxz
add
xor
jg
mov
mov
mov
inc
pushf
jge
add
lahf
mov
adc
mov
nop
add
das
fnstsw
aad
push
add
adc
mov
clc
push
add
movsl
fs
ret
add
add
popa
cmpl
add
add
sub
pop
add
add
popf
pop
dec
decb
lret
in
xor
ljmp
add
enter
add
pushf
insb
cmpsb
add
add
nop
add
imul
mov
jnp
sti
addl
fiadds
push
add
jbe
push
add
mov
xor
bound
mov
pushl
xchg
mov
add
mov
jmp
or
jo
loope
fsubr
push
add
add
bound
mov
inc
add
adc
ret
add
cs
std
push
add
out
inc
add
inc
add
fcomps
aas
lahf
push
add
add
mov
add
out
aas
mov
add
iret
cltd
xchg
sub
mov
add
mov
outsb
ret
inc
mov
add
imul
add
repnz
gs
xor
push
ffree
xchg
add
ffreep
cmp
movsl
add
mov
jg
outsb
jmp
mov
add
add
sbb
xchg
add
addr16
and
add
add
add
sbb
add
das
push
add
mov
cmp
lods
lcall
add
cli
icebp
sbb
dec
test
rolb
lret
inc
add
dec
sbb
movsl
mov
out
add
out
lods
cmp
cmpsb
add
add
and
push
sti
dec
or
fwait
hlt
add
add
mov
push
add
add
add
push
add
add
movsb
add
push
add
mov
add
sub
add
add
fidivl
add
add
cmp
xchg
add
enter
add
mov
jl
outsb
addl
ret
pop
add
addr16
pop
jns
outsb
inc
add
mov
fcomip
add
fsubr
cmp
add
sub
mov
cld
sub
mov
push
fisttpll
adc
sbb
fildl
aaa
into
adc
cltd
out
push
mov
adc
jae
sub
leave
cmp
cmp
ja
mov
inc
add
jno
dec
lds
mov
add
mov
data16
add
mov
add
subl
jl
ret
adc
inc
add
mov
aad
sbb
mov
mov
outsb
hlt
add
add
jns
mov
mov
push
add
lds
jno
sub
je
movb
xchg
fwait
xchg
add
je
jmp
add
add
add
pop
adc
in
add
sub
idivl
add
enter
cmp
aam
push
xchg
data16
add
repnz
in
test
add
clc
popl
xor
mov
push
add
sub
xor
push
add
add
arpl
addl
mov
pop
xor
js
add
add
push
test
bound
mov
js
add
insl
jae
popa
pop
lods
xor
mov
and
rcll
repz
add
push
test
inc
mov
add
outsl
adc
mov
add
add
mov
addl
add
scas
mov
xor
scas
rcrl
push
dec
cs
mov
sahf
xor
stc
test
lahf
les
iret
cmp
dec
sti
lea
or
add
add
pop
imul
repz
add
add
popa
dec
hlt
add
pop
rolb
or
cmpsl
add
mov
lods
inc
inc
out
lods
cmp
cmp
adcl
push
add
add
cmp
pop
daa
iret
jne
adc
mov
add
push
mov
cmpsb
add
mov
add
jmp
sub
adc
sbb
sbb
add
add
sbb
cmpsb
add
jnp
add
pop
sbb
push
add
mov
push
add
pop
push
add
out
clc
add
mov
int
xor
pop
adc
call
xchg
add
movsl
cmp
lds
inc
jmp
ret
call
add
icebp
sbb
scas
mov
addb
andl
cmp
xchg
scas
mov
push
fwait
jnp
jae
or
inc
inc
add
add
out
inc
outsl
insb
push
add
add
add
mov
add
mov
test
cmp
jg
iret
addr16
add
jle
push
lret
out
rolb
push
add
add
fcompl
insl
mov
add
cld
stos
ret
push
out
mov
pop
mov
add
cmp
jb
loop
loope
mov
add
lods
mov
arpl
pop
cs
mov
int
mov
fisttpl
cli
mov
xchg
scas
mov
hlt
add
or
mov
sbb
sub
sbb
fisttps
in
pushl
cmpsl
push
mov
add
push
add
xchg
cmp
jmp
add
mov
test
add
out
mov
out
addb
inc
add
add
xor
popf
imul
fwait
in
add
add
add
add
mov
dec
mov
mov
stos
int
jle
xor
mov
movb
add
mov
les
das
or
xor
aam
push
add
add
push
icebp
or
add
clc
cli
dec
lcall
dec
push
movsb
add
mov
add
sub
mov
add
in
or
add
adc
lea
in
add
mov
sub
or
loop
mov
addr16
add
lret
sarl
ffreep
add
add
mov
adc
adc
fld
gs
or
adc
xchg
add
arpl
shrl
testb
cltd
sub
pop
push
aaa
mov
add
mov
add
mov
cmp
push
fsubrl
cmp
xchg
push
add
dec
mov
pop
xchg
add
mov
mov
add
addb
addb
adc
addr16
cmp
jno
add
fstpl
pop
cli
nop
add
out
jne
inc
mov
inc
add
fimull
fsubrl
mov
cmpsl
sbb
adc
cmp
add
mov
ret
rcrl
add
xchg
add
shl
add
add
mov
xchg
push
cmpsb
add
ja
add
mov
ljmp
lock
mov
adcl
add
sub
add
addb
add
fstl
stos
mov
mov
inc
xchg
pop
cmpsl
cmpsb
add
iret
lds
add
xchg
add
mov
sahf
jp
mov
decl
out
sub
lods
inc
test
cmp
add
xor
rolb
add
push
add
add
dec
in
js
mov
out
mov
test
dec
jge
imul
out
push
mov
add
movsl
pop
mov
subl
mov
movsl
addr16
cwtl
leave
jbe
cmpsb
add
push
inc
add
add
add
mov
outsb
outsb
adc
add
jmp
addb
lea
dec
rolb
scas
data16
add
addb
inc
add
add
cmp
inc
in
hlt
add
mov
imul
add
scas
xor
ja
add
add
dec
fldenv
mov
clc
sub
mov
cltd
push
add
add
sub
shll
xchg
add
dec
sbbl
loop
mov
xlat
mov
add
jb
xchg
loope
or
ret
jne
out
mov
aaa
jbe
movsb
add
mov
fdivr
das
cld
aad
mov
arpl
jne
add
cwtl
cmc
iret
pop
xchg
or
lret
mov
cmp
adc
add
out
sub
add
lods
jae
test
popf
sbb
mov
js
pop
loop
or
adc
addr16
stc
mov
outsb
sub
add
mov
add
dec
shl
jmp
mov
ja
imul
pop
stos
xor
data16
adc
fdivl
push
lret
add
dec
and
lock
mov
add
scas
rolb
mov
adc
adc
jecxz
inc
add
daa
xor
xchg
add
add
addb
add
and
mov
popf
add
fsubrl
push
test
add
cwtl
mov
mov
add
add
add
adc
jno
jecxz
pop
fld
and
ljmp
and
lds
add
add
pop
xor
inc
add
or
stos
mov
int
mov
add
add
pop
xchg
cld
and
mov
push
outsl
loope
andl
push
add
jg
push
add
stc
cmp
add
dec
cmpl
add
add
fucom
sbb
jecxz
mov
add
jae
sbb
push
sbb
in
jmp
push
add
in
leave
mov
mov
xchg
and
ret
jp
rcll
out
out
cwtl
arpl
imul
jle
adc
xchg
add
dec
cmp
rcrl
cld
fsubrp
pop
rolb
add
dec
addr16
out
sbb
roll
iret
icebp
arpl
jne
mov
add
sahf
data16
adc
test
mov
add
lock
mov
dec
pop
and
mov
sbb
add
add
movsb
add
jo
pop
jmp
das
int3
jnp
add
add
add
loopne
dec
testb
adc
mov
and
mov
push
push
add
add
add
add
aam
pop
movsl
pop
movb
jg
dec
int
int3
cld
mov
add
fidivs
add
mov
mov
mov
andl
add
add
xchg
lock
mov
xchg
add
add
add
add
cmpsl
xor
inc
fsub
add
fbstp
dec
mov
mov
xor
add
add
jae
test
or
adc
cwtl
xchg
out
mov
mov
add
sub
mov
or
add
lcall
pop
ret
jno
mov
push
add
add
insb
jno
pop
add
ja
jl
clc
pop
or
add
les
cmpsb
add
or
lock
xchg
inc
mov
fldl
add
pusha
add
add
ja
lret
lds
les
sbb
mov
jg
add
add
add
jno
jns
mov
mov
cmp
add
add
mov
add
sarl
dec
ficoml
fisttpll
mov
xchg
add
outsl
stos
mov
cmp
mov
out
cmp
adc
fnstenv
popa
jo
cmp
cmp
add
adc
sbb
or
mov
aas
iret
push
add
pop
push
pop
xor
adc
xchg
or
in
dec
xchg
andl
int3
rdpmc
push
xchg
add
js
dec
dec
pop
pop
enter
mov
sub
adc
mov
rolb
arpl
icebp
out
inc
add
cmc
inc
add
add
cld
push
add
jae
jnp
dec
dec
mov
test
adc
jmp
add
ss
pop
push
add
in
outsb
pop
idivl
imul
inc
sub
push
and
rolb
loope
xor
mov
mov
notl
add
dec
push
add
inc
add
add
add
clc
mov
adc
xchg
daa
xor
jecxz
add
addb
adc
add
add
mov
adc
mov
cltd
mov
push
add
add
mov
ljmp
pop
mov
testl
inc
sti
or
dec
insb
cmc
xchg
inc
add
mov
add
xchg
cmp
push
lahf
int
loop
cmp
ljmp
push
ret
add
mov
add
int
int
adc
and
mov
sbb
add
fldenv
add
insb
mov
repz
add
or
mov
add
imul
aad
add
add
ja
add
and
mov
sarl
mov
psubusw
add
sub
adc
insl
insb
or
aas
inc
add
cltd
mov
je
adc
dec
xorl
jge
outsl
mov
mov
add
add
add
jbe
in
xchg
add
xchg
add
mov
sub
add
pushf
pop
fildl
fprem1
sbb
add
xlat
add
mov
or
xor
test
and
add
repz
mov
icebp
xlat
or
hlt
add
push
testb
add
adc
lods
mov
mov
add
pop
jns
pop
arpl
cmpsl
imul
lcall
mov
sub
movsl
mov
rolb
mov
add
das
mov
and
add
nop
add
or
cmp
and
popa
xchg
add
add
add
push
addb
add
lods
xchg
add
scas
je
leave
push
add
pop
cmpsb
add
push
add
dec
loopne
mov
scas
stos
dec
pop
and
adc
loop
mov
in
in
and
adc
jb
pusha
add
mov
xchg
add
lret
inc
cltd
xor
adc
fmulp
addb
sub
push
jg
and
rcrl
add
sbb
add
add
add
mov
mov
add
xchg
add
xor
jnp
add
sbb
pop
mov
add
push
xor
testb
xlat
or
cmp
add
loop
push
add
fldenv
ss
xor
and
xor
test
loop
loopne
in
stc
add
adc
mov
dec
push
jbe
cli
inc
fnstenv
cmp
and
mov
ljmp
add
add
or
add
rolb
add
add
add
dec
in
sub
bound
mov
je
enter
add
xor
pop
cmp
js
dec
loope
inc
add
dec
mov
pop
and
add
inc
add
mov
push
mov
call
out
jge
adc
icebp
fs
aas
ret
les
rolb
pop
or
mov
test
loopne
ret
mov
add
pushf
out
stos
mov
add
add
mov
outsl
les
dec
xor
icebp
cmp
add
cmpsl
adc
int3
jge
ja
aad
mov
sbb
and
mov
rolb
and
mov
add
mov
xlat
in
sbb
add
movsl
int3
mov
jl
mov
cmp
add
adc
in
add
addr16
mov
arpl
dec
mov
add
test
and
add
add
sub
js
ficoml
or
cs
movsl
repnz
or
mov
add
sarl
xor
add
std
cs
pop
out
push
ret
xor
cmp
push
add
push
add
add
add
pop
cld
lret
movb
dec
add
jmp
xchg
push
push
add
imul
xchg
mov
cmp
sahf
movb
add
dec
lcall
dec
sti
mov
mov
fwait
push
add
into
mov
mov
lahf
mov
dec
jno
sbb
pusha
add
lret
pop
loop
mov
mov
cmc
add
aaa
xor
xor
inc
add
xorl
add
push
cwtl
outsb
outsl
inc
add
mov
hlt
add
add
push
add
dec
lahf
inc
add
add
cmp
jns
pop
dec
aaa
jg
push
add
fimull
in
add
dec
cmc
jnp
cltd
jne
push
add
add
dec
xchg
add
add
add
mov
adc
rolb
arpl
sub
add
dec
mov
add
add
mov
add
xor
xlat
adc
icebp
lret
pop
rep
int3
cmc
adc
test
jnp
add
add
cmpl
dec
mov
aas
mov
pushf
add
xchg
fsubrl
add
sahf
lods
cltd
js
mov
pop
push
mov
sbb
jecxz
loop
jae
scas
movsl
shll
cmp
ret
outsl
aas
mov
xchg
sub
gs
imul
add
mov
shll
out
rolb
repnz
add
sahf
or
push
out
out
add
mov
add
sbb
dec
or
push
add
add
pop
jge
fstps
enter
cltd
data16
pop
jno
add
add
and
js
xor
cmp
add
mov
sbb
addr16
pop
cmp
cwtl
jge
sub
enter
lea
add
dec
scas
mov
out
adc
pop
pop
cmp
aad
cmpsb
add
ds
sbb
mov
mov
xchg
popf
push
add
dec
dec
frstor
mov
sbb
or
lea
mov
arpl
ret
mov
add
xor
mov
jb
xchg
lock
add
add
or
pop
mov
add
mov
repnz
mov
mov
imul
inc
insl
imul
push
add
ja
mov
testb
cmpsl
sub
imul
stos
cmp
movsl
add
mov
add
loop
cwtl
dec
mov
add
mov
sbb
push
cmp
adc
cmp
xor
and
add
dec
mov
and
add
mov
mov
nop
add
add
mov
jl
add
cmp
imul
add
leave
fdivs
add
faddl
jnp
jbe
dec
loop
icebp
mov
mov
aaa
inc
add
aas
fmuls
xchg
movsb
add
mov
cltd
inc
add
or
and
mov
out
rcrl
add
and
ds
sbb
add
mov
aaa
hlt
add
dec
or
add
scas
hlt
add
add
rolb
pop
mov
leave
rcr
adc
mov
testb
lds
lea
mov
xchg
dec
loopne
and
mov
adc
testl
sub
add
and
sbb
dec
dec
testb
test
cld
and
mov
test
das
mov
jns
pop
insb
add
roll
cmovo
mov
pop
rolb
popf
outsl
icebp
out
mov
imul
add
movsb
add
loop
aad
add
add
sbb
sub
add
in
insb
pushf
mov
adc
add
popf
pop
push
dec
mov
inc
dec
rolb
add
in
add
jmp
clc
popf
sub
add
cmp
adc
dec
lret
aaa
setp
mov
es
jne
sub
add
mov
adc
jge
push
cmp
cmpsb
add
add
addb
jns
add
lahf
inc
xorl
push
jo
adc
xchg
add
xchg
das
lods
xor
rolb
sub
pop
test
or
shl
push
cmp
dec
fs
outsl
addr16
inc
add
outsb
testb
add
cld
push
add
add
add
xchg
mov
stc
out
sbb
lea
iret
data16
add
xor
or
dec
adc
add
push
add
lcall
aas
in
outsb
inc
lahf
push
in
sub
stc
jae
imull
add
push
inc
repnz
add
addb
add
ljmp
jg
add
mov
add
add
xor
push
add
add
rolb
add
or
add
cli
mov
xor
rolb
fstps
dec
lods
push
add
add
scas
enter
jnp
clc
jg
mov
mov
push
add
adc
loope
data16
aaa
mov
add
popf
jbe
add
add
mov
in
popf
sbb
xlat
mov
cli
cltd
addr16
push
addb
testl
lret
sbb
add
cmpl
sahf
jmp
push
sub
adc
int3
push
add
cmp
or
mov
add
aaa
test
and
mov
mov
adc
ja
add
shll
add
add
mov
lcall
add
mov
mov
aad
aaa
out
int
add
sbb
mov
jno
xor
xor
add
cs
mov
add
bound
mov
mov
add
aas
sub
add
add
popf
lock
jl
fidivs
mov
jo
cwtl
call
gs
mov
aaa
add
mov
dec
pop
lock
add
jge
jbe
in
cli
and
rorl
test
inc
add
cmp
add
nop
add
dec
rol
push
add
sbb
add
mov
sbb
add
xchg
aam
mov
jp
adc
jmp
add
mov
add
les
imul
cld
cmp
add
mov
add
enter
cmovnp
xchg
cmp
adc
push
sbb
arpl
pop
dec
pop
scas
pusha
add
sbb
sbb
loopne
rolb
inc
gs
adc
cwtl
std
adc
add
into
dec
adc
imul
add
add
fsts
and
mov
dec
push
add
aam
ljmp
xor
jle
in
add
hlt
add
imul
mov
adc
insl
xchg
add
push
add
movsb
add
dec
fsubl
cltd
mov
roll
add
mov
outsl
cmp
fwait
lods
test
add
scas
push
mov
add
and
mov
xchg
add
lods
clc
in
ficomps
add
pop
outsl
fwait
addb
add
je
xchg
into
mov
and
ljmp
add
add
insl
or
cli
daa
cli
jge
sbb
lcall
push
addb
add
loope
les
jp
jb
push
gs
int
dec
outsl
mov
sub
add
scas
bound
mov
test
shll
das
sbb
cmp
inc
push
mov
bound
mov
call
out
sbb
xchg
rcll
xchg
gs
das
jb
or
cmp
add
in
fistps
push
add
add
fisubrl
add
mov
loop
mov
add
out
scas
mov
dec
push
addb
add
add
pop
ja
add
add
add
lret
insb
xchg
xor
testb
rcr
add
out
cmp
or
dec
jg
add
insl
lods
subl
adc
out
sbb
lock
cmp
add
add
add
add
add
pop
mov
mov
pushf
fdivs
add
out
add
cmp
pushf
jbe
jbe
sub
pusha
add
add
popf
xchg
inc
inc
lds
aad
xor
dec
adc
cmpsb
add
lea
mov
xorl
sbb
add
sub
adc
pop
fidivs
repz
sbb
add
fistpll
add
mov
imul
sbb
inc
add
out
fists
push
add
test
add
add
add
and
popa
in
popf
sub
rolb
popa
hlt
add
push
add
outsb
negl
mov
push
add
jg
aaa
enter
sar
and
cmpsb
add
rolb
add
aaa
pop
aaa
add
add
add
add
add
inc
add
ret
lcall
add
sbb
aam
dec
rolb
imul
das
pop
push
cld
sti
mov
xor
mov
sysret
push
loope
add
add
dec
inc
mov
insb
sub
or
xchg
add
add
add
add
and
mov
add
sbb
add
add
add
xor
lcall
lret
lods
inc
add
inc
jmp
mov
dec
inc
add
les
rorl
dec
adc
test
pop
in
sub
pop
test
adc
push
add
add
push
or
iret
cmp
jmp
pop
outsb
lret
and
mov
mov
add
add
push
add
jb
xor
xchg
add
mov
jae
add
add
jl
pusha
add
enter
add
ret
nop
add
push
or
add
incb
or
lods
add
aam
jge
test
in
add
sbb
add
pop
sti
or
inc
add
add
add
fwait
cltd
pop
cs
int3
test
mov
cmp
rolb
dec
scas
in
pop
push
test
inc
add
pop
stos
cs
add
add
test
add
mov
out
movsl
lret
jl
mov
out
mov
sbb
add
mov
dec
sbb
add
nop
add
std
rolb
sbb
add
add
add
aaa
ds
lock
adc
popa
dec
pop
movsb
add
add
add
push
add
adc
add
pop
push
add
mov
and
mov
sub
sahf
adc
mov
dec
adc
mov
out
pop
inc
push
add
add
rolb
daa
sub
into
pop
fadds
inc
std
xchg
add
mov
add
les
orl
stos
repnz
mov
xor
loopne
ret
xor
sbb
jne
add
sahf
push
cwtl
dec
data16
add
rolb
lret
mov
and
mov
stc
xchg
jg
xor
and
inc
add
add
add
or
add
loop
movsb
add
add
pushf
pop
inc
add
or
mov
add
lahf
adc
add
push
add
insl
fidivl
hlt
add
sbb
mov
cltd
jns
cld
jmp
push
sub
mov
pop
and
mov
mov
into
xlat
nop
add
jo
mov
add
outsb
stos
nop
add
rolb
add
push
add
scas
pop
xchg
pop
inc
jns
sbb
add
jno
add
mov
icebp
push
add
rolb
add
test
push
add
add
push
add
rcll
dec
cwtl
inc
sarl
jp
pop
hlt
add
add
add
imul
xchg
add
test
add
loop
lea
insb
jae
sub
pop
inc
add
add
jbe
mov
fidivrs
rolb
pop
test
test
cs
add
out
xor
lock
push
ljmp
mov
or
add
mov
sahf
mov
ret
push
add
add
mov
add
add
mov
imul
add
cmp
add
push
add
jl
cmp
or
inc
add
add
push
jmp
add
testb
add
loop
out
push
iret
xor
movsl
out
ret
add
add
pop
jmp
mov
imul
bound
mov
add
xor
mov
lods
cmpsb
add
add
pop
mov
cld
aas
push
add
loopne
sar
dec
mov
stos
add
jp
add
dec
adc
cmpsb
add
xor
ret
mov
jno
add
and
nop
add
add
test
inc
or
gs
push
add
sbb
add
mov
add
mov
dec
scas
push
insl
dec
push
add
popf
fwait
loope
movb
xor
mov
movsl
rolb
push
add
mov
add
es
pop
xor
adc
sbbl
loopne
fidivrl
push
add
add
je
decl
lcall
ja
adc
decb
lods
push
lahf
cwtl
xor
fcompl
cmc
nop
add
in
das
jmp
jmp
xlat
cli
fisubrs
scas
fstpt
mov
xchg
jmp
push
add
add
ja
xchg
lret
ret
add
mov
add
mov
add
xor
mov
int3
pop
dec
jnp
sub
add
xlat
call
aam
mov
int
pushl
icebp
ud0
add
dec
sbb
add
aam
cmp
ret
rolb
add
pushf
push
add
push
add
or
cmp
pop
xchg
int3
scas
insb
lock
cmp
add
int3
xchg
testb
add
cmp
jg
add
rolb
add
cld
add
add
lods
cld
aad
jle
cwtl
fcomip
add
mov
pop
mov
movsb
add
jge
inc
sahf
fstps
fdivr
ret
testb
das
sbb
insl
lds
je
dec
roll
add
pop
clc
test
cmp
cmp
je
or
add
add
testb
popa
mov
rolb
push
add
jmp
adc
pop
xchg
add
sbb
xor
je
das
xchg
add
outsl
pop
mov
insl
inc
inc
add
addb
add
inc
and
mov
add
adc
js
add
add
int
add
xor
lds
repz
pop
jne
jno
cmpsl
xchg
add
jae
addr16
ljmp
loope
lret
add
in
jno
loop
inc
add
mov
aas
mov
adc
rolb
movb
add
or
mov
add
sub
push
add
ret
adc
cld
mov
xchg
add
add
mov
cs
out
stos
jl
pop
pop
nop
add
push
add
lods
sub
add
add
enter
add
les
cwtl
sub
xchg
rcrl
sbb
std
jnp
add
in
mov
scas
sub
loope
mov
add
fwait
mov
out
cmp
add
addb
ja
cli
jne
fsubr
out
movsl
rolb
cli
adc
nop
add
add
add
mov
inc
loope
add
add
stos
ds
xchg
add
mov
lds
inc
add
add
inc
push
push
add
fbstp
jnp
add
jecxz
add
jmp
push
movsl
lcall
fists
add
xchg
add
add
sbb
mov
clc
pushf
int3
inc
add
movsl
insb
sub
sbb
add
loop
insl
lret
add
arpl
jecxz
add
int
movsl
outsl
sahf
call
inc
popa
scas
out
pop
cmc
fstp
popa
mov
dec
adc
or
add
hlt
add
add
add
mov
ds
add
and
or
int3
pop
mov
push
pop
jns
add
xor
mov
add
add
add
add
xchg
testb
add
add
rolb
enter
add
in
cmp
jnp
rolb
cli
test
aad
add
mov
iret
pop
mov
add
jge
aaa
scas
xlat
pop
jle
sub
movsl
cwtl
xchg
dec
mov
mov
add
fwait
adc
mov
imul
mov
dec
mov
pop
sbb
push
add
mov
xchg
dec
movsb
add
ret
movsb
add
dec
hlt
add
jge
mov
add
pop
pop
scas
fbstp
add
xchg
test
decb
xchg
add
add
lahf
xor
icebp
sbb
xchg
mov
fsubl
into
jae
push
add
ret
repz
push
add
fcoml
lods
jae
jno
lret
movsb
add
not
add
add
in
dec
jbe
enter
pushf
pmaxsw
jg
into
rolb
sbb
xchg
push
add
add
lret
invd
fists
mov
pop
fistpll
loope
sub
adc
push
dec
cltd
sbb
sub
jns
mov
xor
inc
add
sbb
and
inc
add
add
add
adc
loope
mov
add
xor
add
add
nop
add
dec
lock
cmc
js
add
int3
fadd
add
add
sub
adc
add
xchg
push
add
add
add
lahf
iret
addb
lret
addb
lock
jmp
dec
cmp
cli
nop
add
mov
rolb
and
add
fwait
aad
testb
out
cmpsl
pop
fidivs
inc
add
add
dec
movsl
pop
enter
repnz
outsl
mov
add
mov
mov
add
xchg
jne
add
lock
add
ret
jecxz
cmp
pop
sbb
add
loop
shll
mov
add
add
push
cmp
inc
add
add
cmpsl
pop
jmp
xor
addb
testb
inc
push
stos
or
leave
into
std
or
int
xchg
cld
je
mov
sub
xor
mov
sbb
mov
add
pushf
lahf
jb
mov
cmp
add
aaa
or
xchg
add
sbb
add
filds
add
add
add
stos
test
stos
xorl
popf
into
aas
fsubl
add
dec
fwait
movsl
stos
movb
icebp
outsl
loop
mov
daa
add
push
add
mov
add
test
and
mov
xchg
popf
xchg
sti
dec
fcomps
add
add
movsb
add
das
rcl
add
lds
mov
out
add
into
fisubrs
add
mov
cs
sti
or
add
mull
scas
or
mov
add
movnti
lods
stc
into
cmp
and
adcl
mov
jp
add
add
dec
add
pop
in
and
testb
add
jno
add
dec
ja
add
add
add
add
sti
push
das
popf
js
add
add
mov
add
add
add
or
add
add
loopne
inc
add
mov
js
cltd
add
into
out
lcall
sub
insb
movsb
add
iret
int3
mov
xchg
adc
jp
add
pop
insb
addb
ret
repnz
add
sbb
lret
push
add
or
add
ja
loopne
push
in
add
mov
decl
pusha
add
add
pop
fdiv
add
loop
dec
jae
add
jmp
add
repnz
lods
cld
mov
add
mov
jmp
inc
and
es
frstor
dec
fucomp
jne
add
cmpsl
pop
cmp
pushf
cmp
add
testl
push
repz
add
sub
or
shll
dec
xchg
lods
lods
je
stos
and
xor
push
add
add
add
bound
mov
std
xchg
add
popa
loope
add
hlt
add
adc
ds
aam
xor
jb
test
outsl
into
jbe
dec
fsubrl
push
add
mov
push
add
mov
pop
pop
mov
add
xor
mov
pop
push
add
lds
dec
fwait
mov
mov
xchg
adc
pop
push
add
jns
add
add
dec
aas
xchg
add
add
out
lcall
jns
add
fadd
add
addb
mov
leave
repnz
fsubs
fwait
scas
cmp
or
jno
xor
movsb
add
mov
jo
or
add
mov
add
add
das
mov
and
inc
add
pushf
dec
cld
andl
push
push
add
add
dec
add
add
inc
add
mov
inc
in
adc
imul
add
adc
out
out
pop
mov
xor
jmp
add
loop
imul
add
add
add
and
mov
cmp
fisttps
add
aam
and
mov
add
cmp
mov
sbb
dec
mov
testl
add
ret
adcl
stos
pop
adc
or
add
lcall
jb
or
add
aam
push
add
xor
pushf
sub
add
adc
mov
or
add
jmp
or
movsl
jne
ds
cmc
sub
add
insl
stos
das
mov
rolb
mov
add
rolb
sub
add
cmp
mov
pop
add
pop
ljmp
addb
cli
jl
pop
call
mov
adc
js
ljmp
add
sbb
xchg
add
xor
xchg
add
adc
cmpsb
add
jnp
add
fnstenv
mov
add
dec
xlat
testb
dec
inc
xchg
pop
in
xor
mov
push
mov
in
rolb
add
inc
add
enter
data16
add
cld
mov
mov
add
add
add
and
aam
sbb
nop
add
out
mov
add
test
dec
xor
inc
add
jns
add
rolb
jmp
repnz
add
outsb
push
add
xchg
add
add
mov
jbe
mov
add
call
cmc
xchg
add
add
repz
xor
movsb
add
add
test
jbe
cld
dec
sbb
adc
push
stos
enter
sub
aad
fldenv
inc
add
adc
pusha
add
divl
stc
sbb
add
add
rorl
mov
test
scas
repz
enter
mov
add
outsl
sub
mov
xchg
add
jg
pop
xor
loop
sti
or
cmp
popa
in
adc
push
in
add
or
mov
pop
test
push
pusha
add
fidivl
hlt
add
push
add
inc
movb
int
add
inc
pop
popl
dec
imul
mov
push
xor
cwtl
xor
jns
adc
dec
imul
pop
sti
fdivrs
cmpsb
add
stos
cmp
add
movsl
ja
pop
sub
or
je
mov
sbb
aaa
dec
fnstcw
sub
cs
les
adc
aaa
cld
lds
ficomps
mov
out
sahf
addb
pushf
int3
stc
fildl
mov
pop
nop
add
mov
rolb
enter
dec
or
popl
sub
shrl
addb
mov
add
add
cltd
mov
ret
add
push
add
mov
jbe
and
mov
xchg
mov
popa
cld
xchg
add
add
pop
adc
jmp
pop
aaa
sub
adc
add
and
add
incl
add
cmp
add
xor
inc
fistpl
jo
pop
lcall
int3
rolb
dec
lahf
movb
xchg
bsf
cmp
jae
xor
popf
imul
push
jmp
add
jnp
sub
jle
add
hlt
add
jne
add
mov
add
mov
jne
rolb
xchg
add
xchg
movb
or
xchg
xor
add
inc
add
les
out
arpl
popa
sub
add
jg
xor
fiaddl
add
add
scas
pop
mov
lea
or
mov
rolb
add
add
add
testb
add
add
add
add
leave
inc
push
loop
lret
aaa
jmp
add
add
xchg
and
inc
add
add
add
mov
jbe
xchg
add
cli
mov
sahf
test
xchg
sbb
add
mov
movsb
add
add
xchg
add
add
call
out
cmp
cmp
jbe
pusha
add
in
pop
test
dec
mov
mov
add
xchg
out
mov
ret
or
or
cli
dec
dec
xchg
add
in
fnsave
add
enter
add
cmp
fildll
cmp
add
loopne
mov
adc
mov
ret
pop
in
sbb
scas
push
push
add
add
add
mov
inc
add
add
mov
push
mov
pop
rolb
sub
xor
xor
add
and
add
enter
mov
frstor
test
les
add
mov
add
add
add
jns
pushf
inc
add
sbb
fs
jb
lods
dec
add
in
mov
mov
mov
ret
add
mov
add
mov
add
push
mov
add
cld
ja
or
jg
add
add
mov
cmp
xor
add
and
mov
sbb
push
add
mov
dec
dec
xchg
cmpsb
add
cmpsb
add
adc
in
aad
jbe
push
add
add
mov
inc
lock
incb
add
movsb
add
xor
dec
pop
jge
adc
add
addb
mov
lock
add
enter
iret
rolb
add
cmp
and
mov
sbb
dec
popa
in
std
cmp
arpl
push
andl
push
add
add
les
cmp
sbb
jmp
daa
rcr
mov
lret
and
push
stos
add
add
add
pop
test
mov
push
push
mov
jbe
dec
adc
lock
jge
cltd
jnp
lret
cmp
cmp
inc
mov
mov
inc
add
mov
and
cmpsb
add
movsb
add
jg
add
fwait
mov
cmp
pop
cmp
stc
mov
dec
add
dec
scas
xchg
and
add
mov
sti
sahf
add
insl
push
outsb
rcrl
xor
and
mov
ret
pop
pop
sub
iret
sub
mov
cld
stos
aaa
sub
dec
movsl
or
fisubl
xchg
lods
add
mov
mov
xor
adc
jecxz
add
mov
mov
outsl
or
add
ja
add
rcrl
add
sarl
out
mov
xchg
add
adc
jno,pn
pop
testl
incb
mov
and
insb
in
pushf
loop,pt
nop
add
push
les
add
data16
and
jae
and
add
add
sbb
mov
pop
dec
aas
cmp
add
add
nop
add
dec
cmp
int
add
add
jne
xor
cmpsl
adc
out
rolb
adc
mov
repz
add
cli
sub
cmp
cwtl
cmovl
mov
add
in
mov
shrl
add
lahf
testb
dec
divl
mov
sti
test
add
or
sub
add
sti
mov
outsl
inc
add
add
clc
aam
dec
js
add
pop
jmp
jo
pop
jmp
cmp
jmp
dec
ja
add
stos
or
pop
mov
sub
je
and
add
mov
jmp
pop
mov
xor
testb
popa
jle
or
loope
sbb
das
lahf
insl
add
mov
add
xchg
or
mov
mov
repz
mov
add
jp
push
lret
mov
jae
xchg
add
mov
inc
add
push
add
push
add
add
add
add
xlat
xlat
stos
pop
mov
add
add
push
sbb
cmp
call
fucomi
add
dec
adc
xchg
add
xlat
outsb
ret
inc
mov
add
jge
lret
add
inc
add
xchg
pop
leave
inc
add
shll
add
add
fdiv
add
sbb
outsl
xor
mov
add
add
adc
nop
add
testb
aas
in
lret
mov
add
test
testb
dec
mul
popa
out
aaa
jge
shll
aam
leave
mov
xchg
leave
jns
add
sbb
pusha
add
mov
add
incl
add
mov
add
mov
dec
push
and
mov
int3
loop
pop
pop
stos
add
add
fnstcw
add
pop
fucomp
je
pop
and
iret
aam
mov
lods
mov
add
add
add
loope
jmp
sti
add
dec
leave
xchg
into
in
mov
cmp
out
inc
sub
sbb
add
xor
outsb
out
xor
mov
add
inc
add
add
in
sbb
lret
sbb
add
dec
repz
das
mov
mov
mov
add
aad
jb
sahf
sbb
mov
lock
xchg
lcall
inc
in
pop
jbe
lods
xchg
add
add
add
aad
add
inc
repnz
lds
sti
enter
add
bound
mov
ret
xchg
cwtl
out
arpl
add
add
insl
std
adc
adc
cli
ror
xchg
xor
mov
mov
xchg
dec
push
loopne
jle
mov
imul
or
add
jbe
mov
out
dec
out
insl
mov
iret
mov
ret
jbe
dec
scas
test
add
add
add
xor
daa
outsb
add
clc
out
loope
ffreep
fists
add
js
ljmp
push
icebp
nop
add
sub
mov
add
fisubs
add
scas
ret
jnp
aad
add
mov
dec
jno
add
cld
adc
adc
pusha
add
cwtl
xor
mov
insl
sub
add
mov
je
out
addb
fadd
test
lret
jl
add
add
mov
cmc
mov
add
inc
ret
xchg
movb
add
clc
cmpsl
jg
movsl
loopne
outsl
cmc
mov
cmpsl
gs
add
add
addb
addb
movb
mov
add
lods
aas
mov
add
sub
ret
les
sbb
daa
sahf
sbb
out
jo
inc
add
loopne
inc
add
or
and
fldcw
ret
dec
ret
ds
lahf
out
sub
loop
xchg
add
les
mov
fisubl
and
into
jae
cmp
data16
cmc
les
andl
xchg
add
bound
mov
or
arpl
lret
inc
push
add
in
subl
repnz
mov
sub
mov
jg
in
xchg
add
sbb
xor
cmpsb
add
adc
xor
xor
out
dec
push
xchg
test
jle
ficompl
fisubs
jl
add
aaa
rolb
add
mov
mov
rolb
sarl
or
lea
jmp
push
les
xchg
fistl
add
add
in
push
stc
outsb
inc
testb
int
mov
add
add
in
incb
mov
daa
jo
test
loopne
call
lcall
popa
addr16
add
push
add
arpl
push
add
pop
fistps
jno
and
mov
icebp
aaa
sti
dec
sub
cmp
add
add
lret
push
sub
mov
add
add
fldcw
pop
push
add
jns
clc
lds
ret
sbb
clc
cmp
add
and
test
add
add
rolb
pop
stos
movsb
add
rolb
jg
add
popa
ja
mov
pushf
int3
cmp
jge
or
inc
insl
rolb
cmc
test
add
les
or
add
stc
cmp
addb
and
sub
add
add
cmp
lret
sti
add
mov
add
lea
js
enter
and
add
cli
and
fwait
push
add
insl
jecxz
add
cmc
pop
sahf
stos
adc
fsubr
stc
repnz
hlt
add
mov
add
mov
cmp
jne
xchg
test
aad
addb
sbb
cmp
xchg
add
adc
add
pop
in
std
inc
jbe
popf
or
or
rolb
fwait
call
or
mov
addb
add
xchg
sub
ljmp
sbb
repz
mov
jl
add
add
mov
ljmp
push
add
add
popa
jmp
pushf
sbb
out
add
add
mov
lahf
stos
ja
add
rol
add
adc
add
arpl
add
inc
daa
pop
inc
add
mov
add
add
add
sub
ret
add
clc
mov
push
mov
push
popf
leave
sarl
loope
add
mov
add
mov
add
mov
insb
inc
add
pop
or
hlt
add
sub
cld
je
mov
stc
cmp
add
add
lcall
add
pushf
scas
popa
fnsave
dec
add
add
in
addr16
adc
mov
cmpsb
add
jl
mov
pop
ret
push
add
pop
mov
out
divl
aaa
test
jmp
add
scas
inc
les
outsb
insb
push
add
jecxz
sbb
and
add
mov
add
mov
repz
push
jns
mov
std
pop
repnz
movsb
add
pop
sub
add
add
mov
xor
fistps
dec
bound
mov
mov
and
sub
mov
sub
pop
xor
rcrl
movsb
add
clc
bound
mov
fiaddl
iret
jo
fidivrl
mov
add
mov
add
add
fdivl
push
add
imul
mov
and
mov
into
clc
push
add
fwait
lods
jnp
cmp
jmp
stos
adc
sahf
adcl
add
or
add
pop
popa
lock
testb
add
jp
add
add
mov
mov
jne
sub
add
add
clc
js
mov
add
fidivl
add
add
into
mov
in
insb
cltd
addb
add
xor
insb
cmp
lods
dec
lods
push
sbb
pop
dec
mov
cltd
cs
add
add
hlt
add
cwtl
test
push
add
out
out
mov
dec
pop
int3
fs
call
add
xor
sahf
mov
dec
dec
rolb
mov
sbb
inc
add
out
std
mov
int3
xor
ljmp
mov
adc
inc
add
add
lret
cmpsl
mov
cwtl
add
fcmovu
inc
add
dec
cmp
pop
ljmp
scas
push
mov
add
clc
out
and
add
push
add
add
daa
rol
add
push
popf
addb
adc
add
and
mov
jb
ja
test
out
int3
out
dec
test
xchg
and
mov
add
pop
add
add
push
add
ljmp
aaa
das
pop
sub
add
addb
pusha
add
inc
dec
pusha
add
clc
rolb
add
jp
add
add
fdiv
jg
sahf
es
add
xchg
add
push
std
add
pop
hlt
add
add
test
loope
dec
loop
xchg
add
add
jl
insb
add
mov
add
cmp
add
xchg
add
add
inc
add
add
mov
and
mov
cmp
mov
add
jne
add
rolb
les
xchg
arpl
add
repz
add
mov
testl
addb
lret
inc
add
sub
cwtl
jle
jmp
ret
inc
adc
add
add
add
dec
xchg
add
mov
into
stos
push
add
mov
cmp
add
add
cmp
xchg
add
rolb
xchg
nop
add
inc
ret
cli
dec
ret
mov
enter
leave
xchg
adc
addb
add
mov
arpl
dec
xchg
add
sub
mov
and
fwait
insb
scas
adc
mov
push
add
add
add
add
adcl
add
fsubl
add
push
add
add
add
test
repnz
push
add
movsl
or
xor
repz
add
add
mov
fst
rolb
inc
mov
mov
jp
lock
xchg
std
mov
mov
rolb
cld
das
ljmp
fsubrs
fwait
mov
and
ret
jne
add
push
arpl
into
xchg
add
icebp
mov
adc
fsubrl
xchg
add
add
mov
les
adc
push
inc
add
dec
aam
out
ja
add
movsl
test
add
add
add
mov
adc
xor
adc
xchg
push
xchg
xor
mov
es
repnz
or
loopne
sub
or
jmp
sub
add
add
addl
es
out
push
mov
out
insb
mov
test
andl
add
push
clc
sub
add
add
pop
mov
scas
or
sub
add
sbb
add
fcom
add
add
mov
cs
xchg
jae
jmp
int
pop
sbb
add
rolb
je
push
pop
repz
pop
push
scas
xor
sub
in
add
dec
arpl
in
or
add
in
or
add
add
add
or
add
mov
sbbl
add
add
mov
xlat
cltd
arpl
add
sub
or
movsb
add
arpl
lret
push
mov
add
movsb
add
ficoms
add
sub
rolb
mov
inc
ss
and
add
mov
fisttpl
popa
inc
add
add
inc
sub
dec
sub
jne
daa
mov
loopne
sti
xchg
add
add
mov
or
hlt
add
add
js
add
hlt
add
add
ffreep
add
pop
and
mov
push
mov
add
add
outsb
imul
and
roll
add
cmp
mov
icebp
loope
mov
add
shrl
add
add
add
mov
jg
aad
push
add
pop
dec
dec
loopne
push
add
sub
inc
mov
das
fidivl
testb
gs
into
inc
rolb
or
addl
addr16
test
test
add
jp
out
js
enter
sub
test
cld
lahf
mov
add
add
lock
add
push
sub
push
add
xor
sub
mov
add
add
xchg
inc
pusha
add
xlat
stos
arpl
js
gs
mov
or
xchg
add
cmpsb
add
fidivs
mov
add
cmpsl
in
sbb
cmp
add
loopne
push
add
data16
push
add
movsb
add
inc
wrmsr
add
sub
push
add
lret
icebp
inc
add
das
iret
test
xlat
adc
push
add
jecxz
mov
push
adc
add
or
push
sbb
xor
adc
push
add
rolb
mov
jnp
xchg
jl
inc
mov
addb
add
movb
add
add
aas
mov
lret
insb
rolb
das
and
mov
fdivrl
popf
sub
insl
xchg
pop
iret
sub
add
xchg
pop
bound
mov
add
adc
sub
add
and
lret
cmp
add
add
add
rolb
push
jmp
xchg
inc
mov
daa
fistps
in
fstps
out
mov
jg
add
inc
add
sub
add
jb
dec
aas
dec
or
ja
add
add
add
lcall
mov
mov
add
add
add
add
and
add
and
xor
rolb
push
add
mov
mov
add
add
add
insb
jl
add
add
add
scas
xor
inc
add
incb
mov
sub
mov
inc
pop
adc
jo
jbe
push
add
sbb
add
add
dec
jnp
add
push
add
ja
and
mov
inc
add
and
mov
ja
add
add
add
mov
push
add
push
inc
loope
add
add
fidivl
out
ljmp
sub
add
cmp
mov
sbb
add
test
les
jns
pop
add
xchg
inc
add
cmp
cmp
and
sarl
sbb
jns
sbb
add
fldcw
repnz
call
bound
mov
arpl
mov
inc
add
cld
push
add
add
outsl
mov
xchg
jns
push
add
add
loopne
xor
add
add
mov
mov
shll
lcall
in
sahf
data16
out
and
xchg
ret
add
add
add
add
add
add
adc
xchg
data16
add
cmp
adc
scas
adc
add
pop
dec
je
jo
jl
clc
out
sub
add
inc
add
pop
adcl
jns
das
loopne
subl
add
add
mov
xchg
jp
out
iret
fmul
daa
jmp
scas
leave
xor
add
rolb
imul
into
mov
pop
push
mov
cmp
out
add
add
add
popa
xor
sub
enter
mov
sti
daa
adc
pop
push
add
loop
les
mov
cmc
lahf
xchg
jb
sub
add
pop
add
mov
mov
pop
dec
add
push
add
push
sbb
negl
dec
or
xchg
in
add
push
imul
mov
mov
mov
sub
out
into
or
daa
pop
dec
pop
jbe
ror
fidivrs
add
xchg
mov
inc
inc
fucom
add
ret
cmp
in
std
je
stos
std
or
aad
push
sub
iret
pop
jnp
xchg
pop
xor
outsb
stos
lcall
push
add
dec
pop
xchg
adc
or
push
inc
add
add
sub
mov
jnp
add
add
xchg
aaa
sub
add
rolb
aam
jg
xchg
add
ret
ss
and
add
sti
xor
add
push
add
leave
xlat
jmp
xchg
addb
lret
frstor
cmp
rolb
jns
addb
aaa
lods
repnz
add
add
rcll
sahf
mov
adc
or
mov
mov
repnz
add
add
rcrl
mov
add
sbb
and
push
jo
or
mov
add
std
or
pop
or
pop
xor
push
push
mov
movsb
add
std
push
add
mov
add
add
leave
mov
add
sbb
movsl
iret
fildll
mov
push
add
pop
pop
jecxz
pop
cltd
fmul
mov
add
xor
cmp
adc
ljmp
add
nop
add
mov
mov
adc
or
movsl
iret
push
xchg
into
add
mov
push
mov
dec
gs
cmc
mov
add
add
lea
fistpl
xchg
add
adc
push
add
pop
and
pop
sub
add
loop
mov
cld
out
sbb
mov
jle
nop
add
rolb
add
add
out
mov
aas
push
divl
outsb
mov
add
sub
add
mov
scas
or
add
cwtl
rolb
add
or
mov
sbb
imul
movsl
inc
add
sub
add
sbb
xchg
movsl
fwait
lahf
shll
add
add
xor
pushf
xchg
add
outsl
bound
mov
add
std
lods
nop
add
enter
jge
add
out
or
scas
xchg
out
inc
push
cmp
rcll
add
popf
inc
push
add
add
popf
icebp
sub
fistpl
lods
cmp
repz
or
push
add
pop
in
cmc
xor
fsubl
orl
mov
divl
stc
pop
arpl
cltd
xchg
add
add
mov
stos
mov
add
add
add
aaa
cmp
lods
mov
pop
mov
scas
hlt
add
lret
push
pop
push
adc
push
add
xor
add
xor
lock
jle
imul
mov
adc
inc
add
inc
add
sti
movsb
add
mov
jae
add
insb
mov
fucom
add
sbb
rolb
jge
adc
jae
push
add
and
add
add
xor
sbb
add
jge
xchg
out
std
pop
aas
out
add
xorl
add
inc
add
stos
adc
int3
sub
and
mov
add
add
mov
add
jl
jg
add
add
inc
js
add
add
dec
and
movsl
clc
cmp
push
into
adc
jl,pt
rolb
mov
aad
add
cli
xchg
push
add
xchg
test
add
outsl
outsb
out
movsb
add
add
add
add
xchg
xchg
sti
and
mov
lret
sbb
push
add
push
add
add
cli
xchg
add
arpl
xor
loope
mov
mov
movb
inc
add
add
push
cli
loop
push
xchg
in
ds
xor
add
xchg
div
rep
jne
add
aad
add
mov
xbegin
imul
inc
add
add
add
and
mov
stos
pop
sarl
mov
sbb
mov
add
adc
sti
sub
or
add
dec
cli
lret
icebp
inc
add
add
cmp
push
popf
out
arpl
sub
add
cli
test
ds
orl
scas
lea
push
add
rolb
imul
add
add
xlat
out
pop
int3
pop
xchg
cmp
add
mov
adc
dec
out
xor
rolb
fstps
add
scas
loope
add
xor
xchg
inc
bound
mov
lahf
pop
std
mov
arpl
ljmp
test
sbb
add
and
jb
repz
je
jnp
push
xor
add
inc
loope
add
xchg
add
add
add
jmp
push
jp
add
cwtl
jnp
add
testb
sub
add
dec
cs
push
add
fwait
pop
lcall
add
ds
add
lea
adc
lret
add
ja
add
or
mov
js
movsl
adcl
mov
cmp
sub
cli
les
aam
loope
and
add
inc
add
cmc
jmp
or
sub
aaa
cs
xor
xchg
add
cmp
xchg
add
cmp
movb
or
mov
xchg
mov
add
add
fincstp
addr16
popa
add
cmp
add
mov
fiaddl
movb
cmp
push
fbld
dec
add
mov
add
loopne
fistps
sbb
adc
sarl
inc
add
stos
or
sbb
lcall
mov
bound
mov
lock
cmpsb
add
jle
aad
sbb
jae
dec
sti
test
lcall
add
add
xchg
sbb
lods
ret
jb
cmp
add
orl
aas
int3
cs
xchg
mov
test
sbb
pop
in
add
cmp
and
mov
add
add
movsl
mov
add
xor
xlat
or
into
addr16
std
sbb
add
mov
icebp
lret
flds
mov
push
lods
insb
jmp
add
add
jbe
insl
dec
into
add
mov
movl
sub
insl
add
add
add
add
add
mov
pop
sbb
add
add
xor
test
faddl
or
test
mov
into
into
fbld
mov
mov
xor
add
add
add
and
mov
add
cmp
jg
sub
pop
inc
idivl
pop
cs
mov
inc
add
xchg
pop
adc
mov
pop
addb
or
xor
jno
add
test
mov
mov
xor
mov
sub
scas
rolb
daa
jns
sbb
push
data16
add
xchg
add
cmp
push
mov
add
and
mov
sarl
in
int
inc
and
outsb
cmp
mov
shll
dec
cmp
cmp
add
adc
mov
add
mov
add
or
sti
add
add
pop
and
add
sub
out
out
sahf
adc
push
add
repnz
jb
dec
pop
gs
lret
push
add
pop
lds
add
inc
add
out
mov
arpl
mov
lea
and
mov
dec
popf
inc
add
sbb
mov
sub
xchg
add
lcall
frstor
add
imull
stos
test
mov
push
add
or
mov
out
add
push
add
add
popf
or
cld
mov
add
and
in
test
jmp
xchg
add
push
sbbl
adc
stc
pop
fcompl
add
xchg
add
mov
jl
push
addb
aas
addb
adc
add
mov
sub
xchg
push
add
add
add
add
je
cmpsl
add
and
push
add
out
or
pop
sti
adc
mov
mov
lret
roll
mov
ds
adc
add
cmp
dec
loopne
adc
add
aaa
stos
mov
leave
clc
pop
inc
add
hlt
add
insb
pushf
std
loopne
push
dec
xor
lahf
je
inc
add
add
pop
mov
add
add
pop
and
stos
and
xchg
add
add
fdivl
add
mov
xor
add
movsb
add
filds
or
jns
shll
dec
icebp
enter
pop
jo
icebp
add
ret
dec
dec
cmp
xor
adc
test
add
mov
data16
and
mov
add
pop
les
xor
jae
into
inc
jbe
pop
inc
add
ljmp
add
add
add
cltd
inc
add
inc
add
cmpsb
add
add
and
mov
ja
cs
jnp
lods
sbb
dec
add
adc
jle
add
lods
ds
fimull
lret
aas
daa
push
adc
std
cli
js
xor
sahf
jg
cmpsl
pop
mov
add
mov
add
mov
in
mov
gs
in
inc
imul
addr16
add
mov
pop
mov
fcmovne
imul
adc
movsb
add
pop
ja
cmp
add
add
add
add
pop
or
lret
mov
iret
jb
adc
add
mov
pop
inc
jl
test
mov
add
add
in
jbe
imul
ret
sbb
mov
mov
lret
js
fwait
jns
xchg
add
or
mov
scas
ja
pop
shl
jmp
sbb
add
sbb
lds
sbb
push
xchg
add
in
les
lret
pop
jl
adc
sbb
mov
add
call
mov
aam
mov
filds
add
aas
mov
into
jmp
test
adc
adc
or
mov
sub
xchg
add
xchg
in
jmp
repz
add
std
push
xor
mov
mov
inc
add
xlat
fcoml
dec
stos
and
or
or
add
fisubrs
push
add
out
test
ja
mov
nop
add
stos
arpl
and
mov
jmp
jmp
sahf
add
push
mov
mov
xchg
and
mov
out
rolb
pop
cmpsl
inc
add
loopne
and
mov
aad
pop
jns
fmul
inc
add
or
push
add
mov
testb
add
insl
in
push
xchg
xchg
testl
add
add
adc
lret
movsl
dec
movb
fmul
mov
xchg
fldt
ret
add
mov
mov
jbe
add
add
sbb
mov
pop
sub
les
loop
jecxz
gs
add
inc
cmc
fstp
in
fldt
or
mov
add
push
add
ret
cmp
ret
ficomps
dec
xor
lret
sbb
add
add
mov
and
popf
cmp
je
das
in
adc
fisttpll
stos
shll
add
pushf
sub
mov
add
xor
sti
xor
jmp
add
cmp
mov
repnz
orl
add
add
add
sub
and
sub
add
ror
sets
mov
ror
jne
add
mov
sub
add
mov
push
add
add
jae
add
push
add
out
arpl
pop
sbb
addb
jg
jecxz
add
add
sub
and
mov
add
mov
mov
xchg
add
addb
push
adc
outsb
push
add
test
and
arpl
or
sub
add
pop
mov
sbb
add
out
clc
fcoml
cmc
lcall
add
inc
add
xor
jecxz
dec
mov
add
add
adc
shrl
add
adc
push
add
pop
xchg
test
int3
xor
push
add
insl
push
add
sub
daa
mov
sbb
add
add
add
into
sbb
pushl
jmp
add
add
test
add
add
mov
add
add
aas
push
pop
in
push
ret
aam
fwait
int
sub
or
push
add
push
xor
mov
xlat
cs
dec
push
mov
or
imul
shll
addr16
add
jecxz
xchg
add
sbb
add
sub
add
mov
push
lcall
add
stos
lret
or
popf
adc
sub
filds
idiv
sbb
add
xor
arpl
mov
dec
push
stc
xchg
add
sbb
pop
bound
mov
imul
add
add
repz
add
jecxz
dec
cmp
push
int3
push
add
dec
cvtdq2ps
stos
mov
add
mov
or
cmp
loope
push
add
pop
pop
jge
sbb
add
iret
and
mov
add
lods
adc
stos
lock
arpl
add
or
icebp
movsb
add
lcall
add
lret
mov
mov
in
push
add
daa
cmp
jne
je
mov
add
inc
lods
or
jp
mov
mov
push
int
mov
add
popa
push
pop
fnsave
ja
mov
lahf
mov
add
in
rolb
mov
sahf
push
add
add
add
sub
into
jl
testb
hlt
add
ja
xor
pop
add
xchg
mov
add
push
jl,pn
sub
mov
add
and
mov
addl
and
bound
mov
add
jns
add
incl
das
pop
xchg
testb
insb
cmpsb
add
add
mov
sub
mov
sub
add
lock
add
in
sbb
push
call
pop
mov
mov
jno
sub
xchg
cmp
jmp
test
sub
repz
test
shrl
test
jecxz
push
add
sbb
xor
movb
or
or
call
mov
ret
mov
add
add
stos
or
add
add
cmp
mov
add
add
add
mov
lret
mov
movb
stos
jmp
xorl
jo
scas
sti
loop
mov
jmp
add
add
out
aas
and
mov
movb
add
les
js
mov
add
add
dec
adc
sub
add
cmp
setae
das
xor
xor
testb
add
aam
iret
mov
pop
or
flds
pop
addb
dec
imul
add
add
push
add
movb
lods
scas
push
inc
add
add
mov
fidivs
ror
std
enter
sbb
pop
and
decb
add
push
pop
out
pop
inc
rolb
in
mov
cltd
jmp
add
mov
add
jl
movsl
loopne
pop
fldcw
insl
dec
testb
push
add
outsl
add
or
add
ljmp
jmp
xor
dec
push
add
pop
and
mov
aas
insb
pop
imul
sbb
add
loop
push
add
loopne
mov
enter
add
out
jo
imul
push
pushf
out
mov
add
sti
popa
and
add
dec
xor
fildl
add
dec
or
add
mov
ss
test
inc
repnz
sahf
cmpsl
and
dec
sub
mov
scas
jb
scas
push
add
jge
fisttps
imul
rolb
mov
or
or
xlat
out
push
add
bound
mov
int
fcompl
push
testb
mov
sbb
ficomps
dec
xor
xchg
add
clc
add
add
push
fimull
fldcw
push
add
inc
add
js
jle
jns
les
testb
add
mov
add
add
push
and
aam
sbb
mov
divps
movb
mov
mov
dec
mov
jge
add
mov
add
rolb
add
sti
add
daa
or
out
push
add
dec
sub
in
aaa
sub
jmp
sbb
mov
add
mov
pop
dec
pushl
mov
add
add
xor
add
cmp
add
adc
add
adc
add
inc
aaa
add
add
adc
cmpsb
add
cmp
inc
xor
mov
add
add
sub
lahf
ds
xor
hlt
add
add
add
add
aaa
xchg
rolb
mov
mov
pop
rolb
xlat
movb
shll
add
insb
dec
inc
add
add
inc
addr16
add
add
add
rolb
jl
cli
pusha
add
push
insl
push
add
ljmp
add
push
imul
insb
xor
push
add
lret
testb
jg
add
lea
je
adc
aam
dec
pop
addb
add
dec
pop
jae
cmpsb
add
enter
sahf
rolb
mov
adc
adc
movsl
mov
mov
mov
jle
loopne
int
rolb
add
add
jge
push
push
aas
fdivrs
add
or
dec
fadd
add
add
add
test
fsubr
insb
aaa
mov
fisttps
addb
add
int
adc
ror
xchg
loop
xchg
add
je
stos
jp
cmpl
add
cwtl
xchg
cli
test
sti
jg
mov
std
lret
inc
ljmp
scas
lds
sub
mov
cmp
push
addr16
enter
cltd
sbb
mov
cwtl
jp
popa
pop
test
mov
add
call
mov
insl
inc
jb
adc
add
mov
stos
or
mov
sub
add
mov
sbb
cmp
sub
in
sti
push
add
enter
mov
in
lret
pop
mov
xor
clc
les
cmp
add
mov
data16
add
js
push
add
mov
mov
imul
mov
add
mov
add
mov
push
add
add
sub
aas
hlt
add
mov
arpl
data16
mov
add
pop
insl
mov
inc
add
pusha
add
add
cmpsb
add
xchg
add
xchg
add
xchg
add
add
add
inc
add
add
es
add
add
add
add
inc
fsub
add
mov
and
jl
add
int
add
mov
int3
cli
loope
mov
add
add
mov
add
addl
add
int
add
add
add
xor
or
add
add
mov
enter
add
das
lea
in
jle
fwait
repz
lret
xlat
dec
scas
in
or
add
jecxz
addb
add
scas
and
mov
add
cmp
add
test
std
xchg
xchg
add
add
jmp
fldt
add
cli
aad
adc
add
rolb
push
adc
mov
bound
mov
sub
push
add
add
add
lahf
insb
push
add
add
jle
insl
push
int3
add
mov
add
jo
xchg
add
mov
pop
xor
ljmp
push
add
add
mov
adc
push
add
out
push
add
add
mov
das
and
mov
and
mov
mov
scas
mov
sub
or
sub
add
pop
pop
rolb
jne
imul
mov
xchg
add
push
add
out
lock
je
pop
movb
lret
push
add
cltd
sbb
daa
and
filds
add
adc
aam
fldl
int3
push
rorl
push
add
inc
add
add
gs
cmp
jnp
ljmp
pop
bound
mov
fidivs
push
movsl
xchg
add
add
jbe
cmp
push
clc
test
jb
lock
push
add
fucomip
jae
dec
xor
out
cmp
jp
push
add
add
addb
out
mov
pop
add
lcall
add
add
cmpl
mov
add
cmp
lret
cmpsl
cmpsl
loop
add
mov
push
clc
jo
call
iret
fisubrl
cmpsb
add
add
cmp
scas
rolb
sbb
adc
xchg
add
sub
add
mov
jl
and
mov
addb
add
mov
add
add
addb
add
rolb
mov
inc
add
add
lcall
test
jns
xor
add
add
add
nop
add
sets
mov
add
xchg
ret
jbe
nop
add
lret
xor
sbb
into
mov
mov
addb
or
jne
add
mov
xor
outsl
imul
jb
jnp
mov
xchg
add
test
xchg
push
out
out
xlat
sti
outsl
sbb
push
sub
mov
inc
add
or
rolb
or
add
dec
std
mov
push
add
mov
add
repz
jno
add
sbb
shll
add
adc
jmp
sbb
scas
add
lcall
stos
adc
aad
add
inc
add
scas
jnp
dec
adc
mov
std
sbb
je
inc
add
add
in
push
dec
cli
add
mov
fs
add
add
mov
and
leave
fucomi
and
mov
xchg
add
xchg
mov
cld
sbbl
jg
add
mov
sub
adc
add
add
sub
mov
ret
xorl
add
cmc
je
outsl
enter
in
mov
xlat
mov
insl
push
add
mov
int3
and
sub
ss
sbb
xor
rolb
push
lds
cwtl
and
lahf
outsb
add
mov
gs
sub
add
push
add
dec
xor
testb
add
and
jno
out
mov
ret
orl
push
add
jmp
and
mov
adc
fidivrs
adc
inc
add
push
add
aas
and
mov
add
jmp
bound
mov
add
add
movsl
call
testb
add
add
add
jbe
loop
data16
cld
push
add
add
add
cmpsb
add
leave
daa
loop
dec
les
add
mov
jae
jmp
sti
fwait
sbb
jb
xchg
lahf
ret
cld
jb
loopne
gs
and
add
add
in
pushf
insb
fistps
enter
add
add
add
add
stos
xchg
sub
enter
pop
scas
inc
add
repz
jnp
add
jge
add
add
insb
lahf
loopne
loop
jmp
add
daa
lock
xor
cmp
mov
pusha
add
push
add
and
add
std
out
or
xchg
mov
add
sub
scas
addb
arpl
add
add
cmpsl
scas
daa
call
cmp
mov
pop
std
cli
std
push
add
out
adc
sub
push
das
dec
xchg
add
add
mov
add
daa
push
add
add
push
mov
and
inc
add
jnp
jbe
rcl
add
add
out
repz
imull
clc
aaa
lcall
js
fidivrs
mov
add
mov
cmp
jecxz
add
jmp
add
mov
add
add
lock
mov
fimull
push
add
adcl
add
add
insl
mov
cli
mov
mov
mov
add
aas
roll
adcl
adc
lods
mov
add
rcll
fwait
xor
call
add
icebp
fimull
push
add
mov
xchg
add
dec
hlt
add
mov
nop
add
xchg
cltd
inc
add
pop
push
add
loope
addb
leave
ret
push
test
add
in
sub
add
lret
add
test
jb
imul
and
mov
outsb
mov
add
leave
dec
test
frstor
add
test
add
in
dec
ds
cmpsb
add
add
mov
xchg
add
mov
add
shll
mov
sbb
mov
mov
or
das
ficompl
add
insb
add
jmp
mov
pop
das
mov
xor
bound
mov
push
shll
add
mov
pop
xchg
xchg
adc
mov
mov
sti
je
sub
add
mov
jl
mov
xchg
add
add
adc
scas
clc
sub
shll
adc
or
outsb
add
rolb
add
pop
test
aaa
ljmp
scas
pop
repnz
add
add
mov
and
xchg
das
pusha
add
fidivrs
xchg
cli
pand
jmp
push
add
das
jg
outsb
out
push
add
mov
jo
cmp
inc
loope
xchg
add
jbe
out
cwtl
imul
jp
add
and
cmpsb
add
mov
add
mov
xor
add
add
sahf
mov
mov
add
clc
adc
push
aam
int3
xchg
add
mov
add
outsb
scas
aas
pop
inc
int
fsubr
roll
cmp
mov
sbb
mov
xor
and
mov
icebp
nop
add
and
push
add
jno
xchg
ss
add
fstsw
add
imul
add
add
int
xchg
add
fchs
add
gs
add
add
frstor
leave
cmp
add
add
fidivs
dec
call
fistpll
stc
sub
ljmp
sbbl
xchg
pop
leave
testb
or
insb
sahf
xchg
add
movb
add
add
pop
daa
dec
jbe
dec
out
cmp
add
inc
lock
dec
addb
call
xchg
add
ret
or
cmp
jp
inc
add
mov
add
or
add
add
add
xor
fsubl
add
sbb
add
mov
stos
in
push
pop
fildll
mov
stc
adc
ret
stc
sub
add
add
add
jo
add
mov
fwait
addb
pushf
jae
sub
xor
add
mov
mov
pusha
add
dec
cwtl
xchg
inc
add
add
ja
add
cmp
movsb
add
add
add
add
mov
loopne
insb
iret
stos
shll
add
and
adc
push
les
movsb
add
or
mov
adc
call
add
loope
add
insb
push
add
add
add
xlat
loope
lret
and
mov
sahf
cmpsl
aam
cmp
fwait
stos
stos
out
add
jle
or
fld
sbb
xlat
push
add
mov
inc
push
add
daa
popf
sub
cmp
sub
test
pop
sbb
mov
adc
sub
cmc
mov
dec
insb
addb
or
jno
fcmovnbe
cs
add
lock
jne
add
add
aad
add
addr16
mul
add
add
cmp
pop
mov
inc
add
testb
in
push
jo
fnstenv
xlat
jb
sbb
sub
daa
stos
pop
sbb
mov
add
push
xchg
add
lock
mov
add
add
inc
rolb
in
divl
add
add
test
movb
cmp
icebp
push
adc
xor
cmp
add
pusha
add
ja
add
in
jle
add
mov
in
je
push
jnp
stc
andl
cmp
add
xchg
mov
ret
mov
fistpl
testb
jl
mov
cmp
cmpsl
movb
mov
test
or
mov
jmp
add
pop
mov
add
push
add
addr16
pop
fwait
inc
call
outsl
xchg
push
add
loope
dec
xchg
push
add
cli
pop
and
pop
ret
into
leave
gs
in
mov
ret
mov
pushf
xchg
xor
mov
sub
hlt
add
pop
mov
add
jp
push
add
mov
add
add
sbb
add
add
jmp
icebp
xchg
xchg
pop
mov
jg
cld
sti
add
mov
mov
ror
add
mov
int
add
xchg
pusha
add
mov
mov
add
sbb
rorl
add
add
cmp
inc
add
addr16
add
jg
add
mov
xchg
sub
and
mov
mov
movb
cmp
int
imul
mov
addl
push
inc
add
add
xor
adc
nop
add
mov
add
push
aaa
add
idivl
scas
and
add
adc
add
add
movsl
addb
adc
add
mov
add
aaa
flds
cmc
adc
hlt
add
test
add
adc
push
addr16
add
pop
hlt
add
cmp
xor
lcall
pop
xor
addb
sbb
mov
jne
mov
jb
xor
xor
add
add
and
and
ficomps
in
and
out
inc
jae
mov
movb
loop
mov
data16
into
mov
push
add
and
mov
jmp
sub
bound
mov
cli
mov
mov
add
inc
xor
add
jle
mov
flds
mov
shrl
daa
jecxz
sub
mov
das
jecxz
add
add
add
jecxz
add
xor
enter
push
add
repz
and
mov
adc
jno
les
loope
loop
mov
pop
mov
inc
dec
gs
adc
andl
and
inc
lcall
or
jmp
add
ret
ret
out
test
out
sbb
decb
add
xor
mov
in
push
inc
add
mov
mov
sahf
mov
jne
test
jge
je
gs
das
aad
add
pop
fnclex
add
out
sub
int3
cmpsb
add
add
loop
pushf
repnz
les
add
mov
add
add
jmp
movsl
dec
adc
jge
add
inc
add
sbb
inc
mov
lods
sbb
add
cld
sbb
add
or
pop
jmp
jmp
add
jb
mov
add
cmp
add
daa
mov
sbb
out
xchg
jnp
pop
cmp
add
mov
add
leave
out
data16
pop
push
test
addr16
test
and
cli
enter
or
pop
test
push
iret
mov
add
mov
mov
mov
rolb
xor
js
add
aas
mov
add
ja
add
push
add
add
bound
mov
add
add
add
and
mov
jecxz
add
or
les
lcall
lock
xchg
inc
add
in
push
cltd
mov
add
mov
xlat
sbb
int
gs
sbb
add
inc
add
test
mov
push
mov
add
testb
xchg
les
adc
sbb
dec
pop
and
mov
add
lret
add
jmp
pusha
add
lods
inc
add
add
clc
inc
add
inc
inc
add
pop
sahf
lret
add
add
add
add
cld
das
lahf
sbb
in
js
add
pop
xchg
mov
jle
or
mov
sbb
add
add
add
pop
in
xor
sbb
jnp
add
add
mov
add
dec
mov
xchg
rolb
insb
cwtl
pop
inc
insb
mov
mov
jne
add
inc
add
xchg
jmp
test
and
sbb
add
lea
xchg
sbb
cwtl
jnp
ds
addb
fsubl
add
scas
dec
mov
sub
andl
mov
fdivrp
loope
add
jae
stos
adc
sub
ret
aam
dec
sbb
popa
or
dec
add
add
popa
xor
stos
xchg
lahf
adc
ss
or
inc
add
lea
add
test
xlat
pop
mov
xchg
add
js
or
call
xorl
inc
add
imul
or
add
push
add
add
add
add
add
sahf
cmp
dec
ja
leave
stc
xor
jge
add
jbe
test
aad
gs
push
add
int3
outsb
push
add
add
add
clc
inc
mov
in
xchg
add
ret
xor
add
add
enter
ss
add
lret
xchg
add
pop
ret
add
add
add
add
jl
add
daa
xlat
ljmp
push
fnstcw
add
cmc
sti
rolb
add
xor
lods
inc
mov
add
repnz
sbb
cmpsl
sbb
adc
adc
sti
out
mov
mov
popf
outsb
xor
mov
add
addb
add
push
test
data16
add
add
