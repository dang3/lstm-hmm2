fucomi
dec
jnp
icebp
rcrl
iret
je
xchg
in
fsincos
push
stos
rcrl
bound
mov
out
roll
scas
test
cmp
add
cwtl
xor
mov
mov
add
mov
mov
mov
mov
lods
mov
inc
add
add
mov
and
or
out
pop
int3
out
mov
icebp
ss
outsl
cmpsl
test
ljmp
xchg
mov
ss
xchg
mov
or
addb
adc
mov
sub
cmp
add
add
add
xchg
pop
sub
pushf
xchg
xor
sbb
into
es
mov
add
in
lock
add
jae
push
nop
add
mov
mov
pop
adc
mov
cmp
ja
add
add
xor
mov
or
or
data16
sbb
dec
xor
add
jg
dec
movsb
push
push
xor
in
sbb
das
adc
mov
jns
sbb
mov
bound
mov
push
mov
push
dec
or
into
push
sbb
cmp
add
add
fistps
sub
push
pop
pop
sub
lods
xor
or
ljmp
xchg
add
add
or
sti
xchg
add
dec
fiaddl
outsl
adc
movsl
pop
or
add
add
imul
add
mov
or
mov
loop
mov
leave
mov
idivl
fmull
pop
icebp
popa
push
outsl
cmp
pop
rorl
inc
and
mov
xchg
pop
mov
sub
and
mov
imul
ret
popa
push
ja
xchg
jae
lock
jmp
jmp
shrl
mov
insl
jge
js
jae
addb
sahf
hlt
mov
sub
sbb
xchg
cwtl
jecxz
push
add
jo
mov
add
rorl
mov
mov
mov
add
xchg
popf
arpl
sti
into
adc
mov
mov
or
mov
dec
push
mov
add
loopne
mov
xchg
add
test
push
add
add
mov
xlat
imul
cltd
jne
add
fldt
sti
xorl
push
add
cltd
movb
mov
les
cmp
xor
dec
fldcw
lds
sbb
add
pop
lods
push
out
enter
add
mov
mov
push
lea
or
add
dec
sbb
fstl
lds
adc
mov
add
mov
mov
xlat
jle
insl
mov
mov
in
rolb
mov
mov
in
stos
popf
aad
inc
loop
mov
pop
cmpsl
mov
add
mov
and
add
add
out
dec
cwtl
cmp
add
mov
cmpsb
js
cld
cmp
fmul
daa
shll
mov
mov
lea
ljmp
push
fisttpll
stos
inc
add
mov
mov
mov
add
out
pop
scas
cmp
lret
gs
incl
cltd
aam
push
lcall
arpl
mov
rcr
add
add
fistps
pop
jmp
rolb
and
pushf
and
or
mov
push
push
add
or
inc
add
mov
and
loopne
mov
mov
or
mov
pop
gs
hlt
jge
add
ss
int
add
mov
jp
pop
add
mov
loope
popa
inc
adc
pop
mov
mov
inc
sub
mov
popf
ret
cli
mov
jl
xchg
outsb
sbb
dec
fbld
daa
popf
cmp
add
xchg
fisubs
add
mov
xor
mov
dec
mov
mov
add
and
mov
pusha
add
jno
imul
xlat
xchg
add
or
mov
mov
lea
xor
mov
insl
add
sub
and
mov
ja
rcrl
sub
mov
and
add
and
mov
fidivrs
testl
aas
movsl
pop
loop
mov
add
hlt
cmp
dec
pop
addl
add
jne
das
mov
mov
add
adc
add
mov
lods
mov
xor
push
add
leave
out
add
jne
xor
stc
mov
add
mov
mov
je
lods
cmp
into
in
leave
gs
mov
inc
add
out
stos
jno
add
cmp
inc
inc
mov
mov
mov
inc
cmp
push
add
add
inc
push
addb
pxor
ljmp
testl
call
and
out
mov
pushl
fdivr
dec
or
add
add
jae
sar
fs
or
and
sti
inc
push
add
loope
stos
sbb
je
ret
fs
xchg
add
add
pop
jmp
pop
inc
add
mov
dec
incl
sub
cmpsl
jne
ret
inc
add
mov
insb
cmc
test
imul
cmp
mov
mov
pop
xor
fsubs
inc
add
xor
push
addl
push
mov
and
add
push
xorl
movsl
jmp
leave
lds
jle
xchg
adc
mov
jmp
xchg
and
add
xor
cmpsb
imul
sub
dec
lahf
jge
out
sub
insb
data16
insl
xchg
or
fadd
xorl
stc
iret
in
dec
mov
mov
pop
add
fldenv
in
shrl
shrl
lea
pop
xor
jg
and
cmp
mov
add
sbb
xor
add
rolb
mov
inc
add
mov
adc
test
cmpsl
mov
daa
ret
inc
cmp
cs
mov
add
add
leave
movsb
inc
or
aam
mov
rolb
mov
cmp
sbb
mov
repz
add
push
mov
into
inc
add
test
push
fsubs
mov
lods
dec
cld
insl
push
dec
je
cmp
and
mov
out
repnz
scas
shll
adc
mov
imul
mov
xchg
pop
mov
hlt
icebp
cltd
pop
push
inc
fdivrs
loop
mov
leave
push
push
roll
aad
scas
cltd
stc
or
aaa
test
add
nop
add
mov
add
mov
loope
mov
add
in
pop
mov
add
ror
jnp
or
mov
lods
stos
inc
add
lock
mov
addr16
in
cli
jns
in
popa
dec
jmp
pop
outsb
sahf
les
inc
add
or
add
cmc
sbb
mov
fdivp
add
mov
notl
out
rolb
mov
add
add
push
jle
lret
mov
mov
add
mov
clc
scas
addb
lcall
sub
fstl
mov
imul
test
mov
loop
mov
push
mov
and
add
xor
mov
out
xchg
das
pop
jp
data16
fisubrl
pop
ja
rolb
xchg
daa
jecxz
dec
or
add
jl
test
or
leave
insb
addb
jg
sbb
mov
push
adc
mov
fprem1
or
gs
mov
nop
add
mov
rcrl
dec
movsl
add
shll
push
call
jbe
pop
xchg
sub
arpl
add
add
not
outsb
fwait
mov
add
mov
xchg
outsb
adcl
add
mov
push
add
mov
jae
push
push
add
stos
inc
pop
lds
add
add
add
cmp
in
dec
ds
stos
xor
pop
pop
add
call
push
push
pop
dec
pop
mov
adc
mov
mov
inc
iret
cli
mov
repnz
movsl
insb
xchg
lds
dec
dec
cmp
aam
mov
jbe
movb
dec
push
pop
lret
popf
or
mov
mov
sub
inc
mov
sbb
jmp
jl
mov
jae
mov
add
xchg
les
mov
add
add
mov
test
add
add
mov
clc
mov
jnp
loope
loop
mov
ljmp
add
pop
add
mov
jbe
arpl
or
rolb
pushf
scas
popa
jecxz
hlt
in
and
bound
mov
std
mov
adc
cld
fcomps
cmpl
push
add
cmp
or
pop
loope
and
mov
xlat
popf
add
jge
fnstenv
xlat
std
jae
iret
es
pop
inc
add
scas
fcoms
add
out
and
push
xor
cmc
in
test
adc
adc
mov
mov
flds
jmp
in
sbbl
jle
vmovd
mov
cmp
sti
loope
inc
in
cmp
in
or
cwtl
cwtl
lret
mov
push
in
clc
das
movsb
cwtl
movsl
dec
data16
add
vmwrite
rcrl
lahf
outsb
mov
cwtl
fldcw
insb
cmp
mov
cmp
hlt
es
dec
dec
jg
add
mov
fadds
cmp
mov
add
sbb
mov
out
xor
mov
out
insl
mov
mov
lret
sub
adc
adc
div
mov
mov
add
mov
mov
xchg
add
outsl
inc
lods
lea
into
stos
and
sbb
aam
xor
mov
add
jno
xor
rol
cwtl
fcompl
mov
sub
push
push
push
push
push
push
cld
call
add
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
inc
cmp
push
sub
inc
pop
ljmp
vphaddubd
mov
ss
add
mov
fldl
add
and
mov
lret
dec
xchg
rolb
mov
pop
jecxz
pop
out
out
add
stos
pop
pop
inc
scas
add
jg
scas
push
jg
test
mov
adc
mov
add
dec
addl
and
mov
out
aaa
sbb
push
push
ljmp
ss
add
mov
outsb
fwait
pop
scas
sahf
mov
jbe
into
sub
and
mov
add
mov
add
add
mov
mov
mov
mov
addb
add
adc
iret
dec
mov
ljmp
add
mov
rolb
mov
popa
imul
xchg
fstpt
outsb
xchg
movsb
and
adc
mov
addb
push
outsb
nop
add
mov
loop
mov
pop
cltd
loop
mov
add
jle
jae
ljmp
aaa
aad
lahf
inc
add
scas
popa
icebp
jl
aad
lods
sub
mov
fwait
or
jnp
adc
mov
subl
add
popa
aad
mov
pop
inc
pop
push
add
test
add
dec
in
push
addb
fwait
sahf
inc
xchg
mov
loope
push
mov
cmp
addl
sbb
or
add
add
mov
test
jo
mov
sbb
popf
inc
add
sahf
push
icebp
mov
add
mov
add
rolb
mov
stc
or
add
mov
cltd
xor
mov
dec
push
add
in
aas
push
fwait
imul
jb
mov
mov
add
mov
add
add
mov
add
out
mov
mov
jp
mov
mov
add
sub
sub
stc
aaa
sub
lods
jnp
add
leave
or
mov
or
add
push
jne
test
mov
adc
mov
xchg
push
ss
or
mov
scas
nop
add
scas
push
inc
add
adc
mov
mov
gs
imul
popl
add
in
jno
sbb
test
cli
ret
frstor
lds
lret
mov
hlt
mov
add
mov
mov
outsb
pop
rcll
add
or
fnstenv
add
in
loopne
mov
scas
sti
jns
cmp
add
insl
test
add
xchg
adc
push
movsl
sub
dec
movsb
iret
mov
add
mov
repnz
add
incl
cld
pop
jbe
add
push
add
cmp
in
add
pop
xchg
add
dec
xchg
in
fidivs
dec
cmp
add
add
rolb
mov
fistpl
add
mov
loop
mov
push
add
dec
inc
add
mov
add
in
les
loopne
mov
outsl
daa
sbb
dec
and
scas
fld
add
mov
rolb
mov
add
add
cmp
inc
push
sub
mov
pop
insl
inc
pop
sbb
out
add
add
lcall
mov
xor
lods
jne
sarl
add
xchg
sbbl
int3
or
add
inc
stc
mov
out
mov
lock
mov
xor
mov
in
sbb
jge,pn
xchg
lahf
xchg
insl
in
in
xchg
loope
inc
add
mov
mov
mov
push
sbb
add
add
cli
in
sub
add
adc
add
enter
jb
mov
add
mov
mov
cmpsl
sbb
or
jmp
fcmovne
or
inc
jbe
sbb
insb
sahf
nop
add
sbb
pop
adc
les
pop
fcoml
repnz
cmp
and
mov
mov
mov
repnz
lahf
hlt
int3
add
cmove
xor
add
mov
mov
add
adc
sub
imul
cli
daa
cli
ret
push
hlt
cmpsl
out
lret
add
add
mov
loop
mov
ds
inc
add
mov
pushf
adc
sbb
xor
add
orl
add
rolb
mov
push
ffree
add
add
addr16
addb
into
mov
mov
pushl
xchg
add
mov
xor
mov
jge
mov
iret
outsl
mov
add
mov
add
je
jbe
movsl
xor
mov
leave
push
add
mov
insb
imulb
cmp
mov
dec
jle
ja
and
popf
and
dec
jb
mov
stc
insl
ja
add
daa
cmc
mov
jne
jae
push
add
jbe
pop
repz
sbb
ret
add
mov
mov
inc
insl
cwtl
or
arpl
adc
add
add
mov
outsb
test
sub
fimuls
in
or
xchg
pop
sbb
sahf
adc
sti
xor
cltd
ljmp
add
dec
dec
les
add
pop
ljmp
add
push
fcoml
lods
pop
movsb
and
add
mov
pop
xor
mov
add
aam
nop
add
out
and
stos
sti
inc
ret
mov
aaa
cwtl
jp
add
xor
mov
nop
add
cmpsb
je
mov
cli
mov
test
add
sub
test
dec
repz
leave
incb
addb
hlt
cwtl
and
mov
lret
inc
cmpl
cltd
das
fwait
mov
jge
out
hlt
mov
adc
push
popf
sbb
lods
test
enter
out
xchg
mov
add
jg
repz
add
lcall
mov
sahf
add
xor
cltd
sbb
in
push
dec
mov
outsl
and
in
je
add
mov
add
mov
sub
inc
xchg
rolb
test
nop
add
mov
loopne
mov
jb
mov
test
outsb
jecxz
pusha
add
std
fsubrs
add
xchg
add
shl
xchg
pop
ljmp
dec
mov
sbb
cwtl
pop
aas
aad
das
fwait
lahf
push
add
add
dec
fistps
dec
mov
sbb
push
adc
and
repnz
mov
je
push
mov
mov
aad
adc
mov
xor
add
xchg
add
aam
movsb
test
ljmp
in
add
jnp
mulb
add
out
fucomip
xor
mov
inc
loopne
mov
cwtl
clc
add
mov
lret
add
sbb
mov
dec
jecxz
add
lods
rorl
stc
js
cmp
and
mov
mov
lods
hlt
mov
mov
inc
mov
mov
mov
mov
scas
ljmp
mov
pop
ret
xor
mov
add
repz
add
test
mov
inc
add
jg
out
sbb
vcmpps
and
mov
adc
mov
ds
xor
push
pop
mov
mov
fs
dec
add
pop
repz
nop
add
inc
add
push
dec
inc
add
add
imul
add
jge
inc
scas
movsl
push
mov
testl
add
adc
mov
and
jp
fnstenv
push
add
mov
sbb
mov
mov
aad
bound
mov
sub
cmp
lret
pop
inc
andl
mov
lock
or
push
addb
scas
push
out
loope
xor
mov
leave
imul
nop
inc
fdivrs
loope
jg
dec
or
add
bound
mov
fsubl
fistl
mov
adc
add
mov
mov
sbb
popf
popa
dec
xor
mov
cli
push
add
push
mov
or
inc
add
adc
mov
into
dec
rolb
mov
jno
inc
add
xlat
rorl
outsb
daa
lret
aad
sti
cli
cs
pop
xchg
xchg
jne
xor
add
out
out
xchg
mov
xchg
test
mov
les
fimuls
or
push
sub
add
fwait
dec
lcall
or
add
mov
js
and
add
fildl
aam
out
ljmp
movsb
mov
stos
jl
jl
xchg
sub
jbe
add
mov
push
scas
loop
mov
mov
int
daa
mov
mov
add
gs
inc
mov
mov
lret
sbb
test
jg
rolb
jp
xor
mov
sarl
ret
jl
mov
cmp
add
out
mov
mov
mov
iret
pop
dec
push
movd
rorl
test
cmp
add
psubw
xor
pushf
bound
mov
mov
mov
ss
jb
mov
cmp
decb
movsb
dec
jne
sbb
scas
add
mov
lcall
ds
push
mulb
rolb
mov
mov
add
gs
arpl
xchg
add
pop
xchg
aad
inc
cli
push
mov
rolb
in
nop
add
je
jb
mov
adc
add
cmp
add
add
jae
movsb
push
iret
cmpsl
or
mov
mov
or
inc
outsb
xor
les
rcrl
push
or
mov
mov
sub
pop
sbb
inc
sbb
add
pop
std
xlat
mov
add
dec
push
bound
mov
add
push
ss
aad
addb
insl
jmp
mov
xchg
add
cmp
cmpsl
or
sub
enter
jl
pusha
add
movsb
ja
or
mov
jl
in
ret
and
mov
add
fnstenv
mov
add
mov
mov
adc
mov
les
add
sub
stos
icebp
mov
jbe
jo
mov
aas
xchg
xlat
jo
mov
add
loopne
mov
ljmp
push
std
outsl
jnp
inc
or
cld
dec
cmp
lahf
mov
add
xchg
or
lock
fs
ret
mov
mov
mov
adc
or
les
adc
add
roll
pusha
add
test
dec
mov
popf
aaa
movsl
mov
lock
add
out
nop
add
stc
xchg
das
jne
dec
adc
mov
or
add
loopne
mov
jb
mov
mov
inc
popa
lea
dec
in
dec
add
mov
or
repz
rolb
movsl
mov
movsl
xor
inc
fwait
aad
icebp
sbb
jnp
and
mov
mov
inc
out
mov
iret
jnp
add
nop
add
jg
add
jb
mov
int
leave
repz
stos
js
frstor
rolb
hlt
in
dec
data16
addb
movsb
dec
clc
and
sbb
lea
lret
stos
and
adc
mov
pop
mov
lea
add
push
add
addb
mov
push
add
mov
lods
je
jmp
mov
cmp
push
repnz
mov
add
or
jns
mov
jmp
push
jg
pushf
jge
pop
mov
add
imul
sub
xor
mov
sub
mov
pop
subl
lahf
fnstsw
mov
mov
and
mov
pop
adc
add
cmp
adc
call
sub
aad
jge
in
mov
das
sbb
iret
fbld
mov
dec
mov
mov
aam
inc
jge
jnp
mov
mov
add
stos
and
add
sub
sub
test
mov
add
mov
jge
add
mov
repnz
add
add
iret
inc
add
jnp
add
mov
xor
xchg
push
divl
pop
mov
shll
push
inc
jecxz
xchg
add
jne
adc
mov
push
add
add
adc
or
out
mov
add
adc
mov
dec
jo
mov
addb
addb
icebp
sub
sub
mov
sub
call
mov
cmc
aad
mov
sub
hlt
psadbw
pop
jnp
out
test
addr16
jae
push
imul
pop
pushf
lods
push
pop
pop
lcall
jo
mov
dec
cld
sbb
movhps
cmp
mov
inc
add
mov
add
pushf
rolb
mov
and
add
mov
nop
add
xor
pop
das
das
cmp
mov
add
lcall
pop
std
aam
cltd
mov
ja
addr16
sbb
add
add
mov
icebp
dec
fisttps
inc
imul
mov
jnp
add
ret
lcall
add
daa
jp
jecxz
mov
lods
mov
mov
push
pop
out
lret
pop
pop
pop
push
popa
sbb
xchg
rcrl
add
repz
mov
and
or
add
pop
imul
mov
pusha
add
add
or
add
adc
mov
mov
or
add
lods
mov
data16
mov
sub
mov
mov
movsb
lods
pop
sub
mov
or
insl
hlt
scas
dec
sub
jmp
rolb
out
dec
cmpsl
in
jecxz
jmp
popf
movsl
cltd
adc
mov
push
fwait
lret
daa
jl
or
int3
ret
les
mov
lahf
mov
pusha
add
ror
in
lods
dec
pusha
add
ret
jecxz
addb
cmp
and
mov
dec
add
mov
scas
dec
sub
neg
leave
addr16
xchg
das
int
pushf
andl
xor
imul
mov
mov
add
mov
scas
cmp
add
cmp
xor
mov
cmc
jae
int3
dec
mov
inc
pop
mov
dec
and
add
sub
add
out
or
mov
das
cvtdq2ps
mov
adc
xor
and
ds
int3
xor
mov
aam
dec
loopw
mov
sub
bound
mov
add
dec
dec
je
push
cltd
lret
enter
push
mov
mov
mov
cs
sbb
cli
mov
xor
add
mov
adc
mov
xor
in
dec
jnp
cs
mov
loopne
mov
mov
add
loope
xor
mov
mov
adc
pop
sub
add
xor
mov
or
loope
cmp
pushf
or
xchg
sti
pusha
add
jbe
pop
outsb
es
sbb
mov
cmpsb
mov
cwtl
out
dec
mov
addr16
imul
or
pop
sub
lods
cmpsl
pusha
add
mov
mov
sub
add
lret
dec
push
inc
and
mov
mov
addb
xchg
dec
xor
mov
and
out
popa
inc
push
jb
mov
and
add
cwtl
idivl
xor
push
sub
jecxz
pushf
mov
add
iret
mov
xchg
je
xchg
mov
sbb
xchg
out
mov
add
or
push
add
add
add
mov
ljmp
mov
popf
mov
mov
cld
in
cmp
cmp
pop
mov
pop
in
cmp
add
mov
mov
add
out
push
fsubrp
cli
jmp
or
mov
add
pop
data16
mov
adcl
sub
sbb
mov
adc
mov
in
mov
mov
dec
cmc
mov
add
xlat
mov
xchg
fcom
push
cmp
ds
prefetch
sahf
es
fiadds
mov
js
rcrl
jmp
sbb
cmp
and
mov
lahf
jl
mulb
xor
sbb
imull
daa
std
bound
mov
push
mov
xchg
add
mov
mov
add
in
cwtl
in
pop
ja
add
mov
mov
add
ljmp
jp
jne
daa
sbb
jg
ror
pushw
imul
bound
mov
add
jne
add
in
and
mov
add
mov
sbb
mov
jns
add
xor
push
add
mov
leave
cmp
mov
jp
sub
add
inc
jo
mov
fisubrl
mov
add
fs
xor
jecxz
cs
dec
push
add
adc
and
mov
add
push
pop
ret
xor
pop
mov
lock
mov
mov
sbb
dec
outsl
adc
mov
add
adc
xchg
xor
mov
mov
xchg
lods
inc
sbb
in
push
jno
scas
push
data16
jo
mov
jbe
add
insb
jns
add
cmp
mov
pop
clc
stc
out
int3
mov
mov
push
xor
mov
aaa
rolb
add
aam
insb
test
adc
mov
cmp
add
push
je
add
mov
adc
gs
cmp
mov
mov
pop
mov
push
push
cwtl
lds
jg
cld
cmc
sbbl
cmp
inc
add
loope
sub
add
add
add
cltd
pop
mov
mov
jmp
lret
xor
je
cmc
xchg
add
test
pop
mov
sub
mov
mov
insl
sub
xor
into
int
dec
sahf
mov
mov
xchg
push
insl
add
add
jae
mov
pop
bound
mov
lock
mov
lret
imulb
outsl
sbb
adcl
mov
xchg
orl
mov
mov
in
sbb
bound
mov
out
out
or
push
test
inc
add
or
inc
lock
pop
cwtl
push
add
sarl
inc
mov
add
push
fsubrs
add
jno
ror
icebp
push
cmp
loope
pop
xor
das
jl
lods
mov
scas
js
sbb
out
add
aaa
mov
pushf
call
stos
mov
roll
mov
xor
pop
xchg
add
mov
popa
aam
add
dec
mov
pop
xchg
push
cs
int3
jne
icebp
in
mul
add
fwait
mov
rolb
icebp
stc
idivl
lret
jbe
mov
inc
add
mov
inc
push
lods
dec
add
inc
push
mov
mov
mov
mov
add
aas
out
ds
pop
vcmpsd
push
push
cld
cmp
pop
insl
push
test
es
adc
xorl
sub
out
and
cmc
cmp
stc
hlt
mov
cmp
mov
and
xchg
push
mov
mov
bound
mov
iret
mov
movsl
pop
jb
mov
mov
fcmovnb
ds
xor
scas
imul
sbb
mov
cli
jne
mov
std
loopne
mov
repz
fldenv
sbb
loop
mov
cltd
or
sub
fisubrs
mov
sub
stos
add
scas
cmp
mov
call
mov
inc
add
inc
pushf
leave
ret
mov
mov
addb
lock
mov
lea
movsl
in
xchg
push
js
add
add
mov
add
cld
pop
mov
out
movsb
push
addb
inc
fs
sti
jecxz
add
adc
mov
jmp
mov
xchg
mov
cmp
lods
in
lods
xchg
sbb
dec
mov
jns
pop
pop
mov
lock
jnp
add
out
or
dec
negl
insl
sub
sbb
stos
xor
inc
push
and
or
insb
xor
mov
stc
add
mov
pop
shll
mov
sbb
shrl
mov
fldenv
inc
cmpl
jge
jge
lcall
mov
add
adc
mov
sbb
inc
add
xor
or
add
ljmp
jno
aaa
sbb
dec
xchg
sbb
sbb
cmp
add
pusha
add
popa
out
xor
data16
mov
pop
dec
jmp
add
mov
xlat
dec
mov
mov
mov
jecxz
cltd
cmp
mov
add
push
pop
lcall
in
mov
adc
mov
addb
enter
push
mov
test
xlat
mov
add
mov
add
mov
jns
test
fistpll
lea
mov
add
or
sahf
pop
lcall
aaa
inc
xchg
add
loop
mov
mov
mov
stos
das
test
adc
xchg
mov
mov
pop
out
xchg
add
mov
int3
push
add
jbe
sbb
add
add
mov
mov
insl
enter
in
mov
mov
add
jb
mov
jns
fmull
adc
mov
arpl
push
fdivr
cwtl
popf
mov
sub
fstpt
sub
push
add
dec
xlat
repnz
dec
and
mov
jbe
add
jg
mov
mov
mov
mov
stc
cltd
lods
addr16
pop
std
vmovaps
icebp
jbe
aas
cmp
xchg
cmpsb
fdivrs
adc
mov
dec
repnz
cld
sub
rolb
mov
in
mov
adc
mov
dec
mov
mov
jp
xchg
xlat
arpl
xchg
ret
js
jo
mov
int
cmp
jne
inc
add
xchg
dec
ficoms
add
int3
sub
push
add
rolb
sub
mov
add
dec
cmp
mov
xchg
add
mov
push
pop
mov
pop
lret
pop
arpl
shl
jmp
push
pushf
pop
aaa
in
movb
push
add
ret
insb
bound
mov
test
add
mov
inc
pop
xlat
mov
mov
add
sbb
jmp
hlt
xor
add
lret
mov
add
addr16
das
lret
mov
or
addb
aad
nop
add
outsl
sub
arpl
out
xlat
xchg
jno
jp
icebp
insl
repz
mov
add
mov
dec
into
mov
sbb
pop
out
add
addl
lods
push
sub
stc
adc
mov
loop
mov
mov
sub
in
mov
and
mov
add
std
xchg
xchg
add
fstl
pop
sub
push
in
iret
orl
mov
mov
mov
xchg
xor
mov
aad
mov
add
add
insb
addr16
xchg
js
add
test
mov
push
jne
pop
pop
push
arpl
cmpsb
or
add
insb
mov
cmp
fdivs
xor
int3
call
pop
outsl
jns
rorl
repz
add
stc
xor
mov
xor
lahf
and
sub
scas
test
add
jge
xchg
add
cld
rolb
mov
fdivrl
jecxz
or
xor
sbb
cltd
inc
add
cmp
scas
stos
fcompl
mov
mov
sbb
sbb
fwait
jb
mov
addr16
ljmp
pop
cmp
xchg
add
mov
andl
jns
jo
mov
into
jns
cmp
addb
add
mov
add
lea
jg
outsl
dec
cwtl
pop
or
pushf
inc
movsl
and
add
sub
xchg
adc
mov
add
cmp
jmp
xchg
pop
cmp
mov
pop
inc
and
or
mov
add
add
dec
in
out
popf
push
add
movb
add
jle
mov
push
imul
andl
xor
push
sub
dec
mov
mov
inc
sbb
fsubrl
dec
xor
frstor
fucomp
dec
add
pop
in
push
xchg
inc
mov
lret
std
ds
sbb
jo
mov
add
cli
or
insb
add
or
fiadds
pop
jg
xlat
fsubs
add
jle
sti
repz
add
and
mov
data16
popa
call
rcll
mov
push
cmp
lods
push
loopne
mov
add
mov
xchg
enter
and
pop
loop
mov
mov
sub
sbb
cwtl
mov
inc
add
add
jmp
pop
push
inc
push
sbb
fnsave
add
adc
lidtl
movsb
cwtl
push
xor
dec
sbb
mov
mov
xchg
leave
dec
and
push
sbb
scas
sbb
bound
mov
stos
push
adc
add
add
lock
cs
add
add
xorl
insb
neg
sub
inc
add
in
push
sub
inc
push
mov
aad
sahf
jle
stos
clc
lret
xchg
add
ljmp
mov
mov
push
imul
mov
fdivs
mov
mov
addb
mov
mov
add
xchg
mov
mov
adc
xchg
cld
sub
xchg
dec
sahf
js
add
add
pop
int3
ss
loop
mov
jne
testb
aam
pop
inc
add
data16
stos
xchg
fadd
outsl
jmp
mov
mov
outsb
mov
mov
jl
mov
cmpsb
fwait
xorl
ret
addb
popa
jge
jle
cmp
xlat
into
negl
and
mov
xchg
arpl
cmp
gs
loopne
mov
imul
add
outsb
add
and
mov
pop
push
add
sbb
jge
jecxz
add
aam
nop
add
loope
lock
int3
sub
mov
jle
gs
fwait
arpl
push
add
mov
repnz
mov
and
mov
std
into
pop
out
js
cmp
test
lea
add
jae
stc
hlt
and
add
call
cmc
pop
jae
add
cmp
mov
or
je
mov
jbe
movsb
xchg
mov
mov
add
mov
cmp
add
xchg
mov
nop
add
pushf
sbb
lahf
jne
arpl
pop
mov
ret
iret
mov
dec
pop
xchg
add
cmpsl
addb
xor
mov
mov
mov
rolb
mov
mov
mov
inc
xchg
mov
scas
jmp
add
mov
dec
xor
mov
pop
shl
pop
lcall
pop
ss
add
mov
mov
test
mov
stos
addb
dec
sub
add
out
sti
mov
cmp
inc
inc
add
inc
mov
xchg
jecxz
cwtl
or
mov
je
sbb
lret
push
test
xchg
addr16
bound
mov
adc
mov
iret
jo
mov
add
arpl
imul
enter
pop
add
or
add
fimull
addb
add
mov
cmp
add
inc
add
add
divl
mov
inc
xchg
mov
add
stc
jmp
mov
leave
in
into
mov
in
xor
xor
mov
nop
add
dec
addb
icebp
and
mov
clc
fldl
adc
movsb
leave
test
pop
aas
loope
rolb
mov
imul
aam
inc
sbb
aas
or
dec
sub
movsl
jne
sub
cs
add
ds
xlat
or
push
add
ds
outsl
or
mov
add
mov
jle
add
mov
push
xlat
push
ret
imul
mov
out
pop
lret
mov
and
and
mov
aam
clc
xchg
xor
mov
push
nop
add
aam
add
out
loop
mov
fcoms
add
sbb
or
pop
mov
popa
adc
mov
int3
pop
jb
mov
jo
mov
pushf
ja
idivb
push
push
jb
mov
addb
rcrl
loop
mov
dec
inc
cs
adc
add
ljmp
jns
pop
cmp
aaa
cvtps2pi
into
cmpsl
xor
cmc
mov
into
ror
popf
xor
mov
jle
xchg
stc
push
shll
sub
popa
mov
sbbl
push
out
daa
and
mov
jmp
or
mov
in
scas
repnz
mov
insb
mov
icebp
ss
mov
push
add
add
add
lahf
pop
mov
int3
daa
adc
jecxz
pop
and
xor
mov
sub
add
clc
jnp
sbb
es
mov
mov
test
loop
mov
mov
mov
add
lahf
in
add
lahf
leave
cmpsl
ret
sbb
imul
cmp
lahf
sub
mov
pop
xchg
fwait
in
add
add
cmpsb
sbb
add
mov
or
add
lods
mov
bound
mov
or
add
dec
adc
jmp
mov
mov
pop
inc
movsl
dec
loopne
mov
mulb
addl
mov
add
push
out
xor
mov
add
mov
push
addb
aam
jnp
add
enter
push
xor
bound
mov
adc
mov
fistl
dec
in
lret
sbb
aad
fsts
insb
dec
mov
lret
mov
mov
pcmpgtd
jle
add
inc
aas
hlt
or
loope
inc
add
into
addb
and
mov
adc
cli
fistpll
cltd
ja
jecxz
fstpl
add
inc
insl
fisubs
roll
mov
push
xchg
bound
mov
imul
mov
mov
test
sbb
dec
mov
add
in
sub
pop
xchg
add
xchg
frstor
push
mov
add
mov
pop
jecxz
jecxz
bound
mov
mov
cmc
push
mov
bswap
xor
xor
call
add
sti
mov
in
sbb
loope
jnp
add
loop
mov
addb
sub
rolb
pop
ret
aas
sub
rcl
lods
pop
fisttpl
add
mov
dec
mov
lods
jg
out
ja
mov
fadds
mov
fwait
and
add
pop
pminub
popa
cmp
lods
lds
push
add
mov
dec
scas
mov
mov
lods
lods
adc
sub
or
add
in
xchg
in
adc
mov
int
cmp
push
js
adc
mov
outsl
fmul
push
daa
clc
or
mov
lret
sti
addb
das
adc
mov
cltd
stos
stc
divb
mov
clc
mov
addr16
icebp
popf
push
add
add
add
fsubrs
popa
nop
add
mov
push
push
mov
mov
add
ljmp
das
std
jo
mov
lahf
mov
addb
add
pop
and
and
mov
fdivs
mov
jmp
add
sub
add
mov
ret
cmp
addb
je
stos
mov
mov
mov
xchg
fwait
inc
xor
cmp
cwtl
sbb
lock
mov
sbb
mov
sbb
mov
jecxz
popa
and
dec
out
mov
movsl
mov
push
dec
nop
add
dec
mov
nop
add
cwtl
pushf
imul
addb
dec
out
into
pushf
test
adc
mov
inc
ret
sbb
add
mov
mov
add
mov
inc
lds
data16
or
sbbl
sub
sbb
add
jo
mov
loopne
mov
xchg
add
mov
mov
inc
mov
repnz
dec
jg
rolb
jo
mov
xor
xchg
js
cmpsb
and
mov
lgs
imul
inc
dec
cmp
xchg
mov
mov
xlat
jno
add
mov
add
adc
add
daa
std
dec
shr
cld
scas
mov
add
mov
sub
mov
hlt
test
add
add
mov
push
pushf
jp
fnstsw
adc
aas
insl
fisubrs
cli
dec
cltd
adc
xor
inc
push
das
adc
adc
xchg
and
mov
pop
sub
clc
pushf
mov
add
adc
repnz
ficompl
subl
dec
iret
jl
xchg
in
pusha
add
pop
loope
andl
jl
test
mov
aaa
pop
js
sbb
pop
and
cwtl
ds
imul
pop
in
call
adc
fisubl
add
fsts
and
mov
jno
mov
add
mov
addr16
ja
nop
add
cmpsb
cld
pop
fimull
out
add
imul
pop
jb
mov
push
pop
addb
stos
mov
mov
imul
push
sub
and
adc
add
mov
gs
jnp
jns
ret
insb
sub
dec
dec
into
xor
mov
add
adc
mov
add
jle
xor
jne
push
lea
add
out
rolb
mov
mov
xlat
jbe
lahf
or
mov
mov
push
divb
mov
mov
arpl
ja
fsubl
jnp
adc
mov
mov
add
in
sub
add
loop
mov
lods
sub
add
rolb
mov
push
mov
xchg
stos
addr16
mov
lock
mov
std
js
add
or
add
andl
or
add
inc
jecxz
fiaddl
cmpsl
xchg
inc
lock
cmpsb
mov
mov
add
mov
les
add
ja
push
cltd
xor
mov
nop
add
popa
or
jo
mov
mov
xchg
jmp
mov
jno
push
dec
outsl
cwtl
jmp
popf
mov
and
mov
add
sub
add
mov
xlat
fs
stc
fwait
addb
xchg
add
sahf
inc
aaa
xor
jl
add
xchg
xor
mov
addl
rolb
mov
pop
aad
adc
adc
cmpl
addr16
aad
aad
cmp
int3
jo
mov
mov
mov
lea
adc
mov
cmc
cld
mov
mov
scas
cmp
mov
loope
add
sub
stc
lcall
jo
mov
mov
rcrl
xchg
ljmp
insl
cmp
push
add
mov
push
xchg
add
xlat
sbb
sub
or
or
aas
xlat
enter
ljmp
mov
push
add
int3
imul
lds
aas
dec
sbb
leave
push
jge
mov
das
out
hlt
and
mov
pop
xor
mov
int3
xorl
sbb
add
push
testb
inc
rolb
fsub
add
lcall
mov
inc
repz
add
outsb
sub
mov
add
inc
pushf
dec
jmp
add
js
add
add
imul
mov
call
pop
int3
mov
int
gs
int3
ja
dec
and
mov
add
push
outsb
sbb
xor
mov
xchg
jmp
outsb
xchg
sub
cmp
xchg
cwtl
aas
pushf
loope
test
out
push
mov
mov
jb
mov
rcl
shrl
call
lret
xchg
and
lret
das
imul
mov
lret
dec
mov
adc
sbb
sbb
fcmovnu
in
test
xchg
jp
ret
movsb
sbb
add
mov
dec
rolb
mov
mov
add
lods
pop
push
hlt
dec
gs
cmp
es
jl
fisttps
pop
mov
ljmp
mov
test
push
pop
push
mov
adc
lret
jbe
mov
add
mov
mov
mov
jge
push
cvtdq2ps
testl
mov
adc
mov
fists
or
add
add
mov
dec
jmp
cmp
mov
add
push
scas
in
push
test
data16
inc
mov
add
dec
bound
mov
add
jae
jmp
insb
clc
mov
into
lahf
loopne
mov
popa
jg
ljmp
das
imul
lcall
fldl
mov
add
add
gs
aad
mov
jns
loopne
mov
push
lods
aad
mov
pop
adc
sub
ja
and
or
std
sub
adc
loopne
mov
add
jae
data16
sbb
iret
movsl
lock
cs
push
cmp
nop
add
adc
mov
mov
test
jnp
addb
je
popa
mov
mov
stc
out
in
xor
lahf
outsl
pop
dec
pop
lcall
outsb
lea
test
lods
scas
pusha
add
notb
add
adc
add
in
mov
rolb
mov
xor
mov
push
cmp
xchg
inc
add
adc
mov
mov
fsubs
mov
inc
and
add
push
fidivrl
dec
rolb
std
dec
dec
and
mov
mov
stos
push
cmpsb
dec
push
or
or
or
and
add
fstpl
pop
pop
loop
mov
inc
xchg
inc
iret
fcoms
inc
dec
out
push
dec
fimull
clc
or
mov
mov
add
jecxz
cmp
popf
or
adc
mov
stc
add
cmp
pop
ja
aam
test
mov
mov
mov
pop
cwtl
or
sbb
mov
fdivs
mov
mov
or
xchg
jle
iretw
mov
push
movsl
out
add
mov
stos
call
inc
aaa
pushf
xor
mov
push
or
adc
mov
int
mov
rorl
and
incl
add
mov
dec
shll
or
sub
xlat
sti
stos
movsl
mov
add
testb
enter
add
mov
pop
add
sbb
dec
jl
ss
cmp
xchg
test
push
add
cmp
mov
add
xor
mov
add
sbb
add
stc
pop
push
dec
addb
xchg
jno
sbb
out
xor
mov
lea
cltd
cmc
dec
addb
test
lahf
jae
add
add
sub
jl
mov
sbb
push
jge
add
ss
sub
lret
adc
add
mov
dec
xor
mov
fisubs
mov
dec
pop
out
or
ljmp
mov
jl
in
decb
lods
ds
or
and
or
sbb
pop
stc
adcl
lods
inc
lds
stos
push
and
cli
lds
jp
cmp
xor
mov
sbb
sub
aas
mov
rcll
mov
pop
sub
fdivr
and
lret
data16
jnp
add
hlt
push
xchg
cmp
jle
jecxz
sbb
xchg
sbb
and
xchg
inc
pop
lcall
add
jmp
pop
loopne
mov
and
mov
push
insb
xor
push
add
add
mov
push
shll
mov
in
mov
add
inc
cmp
call
xlat
enter
jne
xor
mov
add
dec
adc
cltd
int3
dec
sbb
and
bound
mov
mov
insl
sbb
jbe
xchg
add
and
adc
mov
add
nop
add
lea
mov
jno
out
ja
add
add
xchg
je
lcall
add
xchg
add
pop
mov
pop
jns
add
xor
mov
add
fists
add
scas
rorl
dec
pop
adc
addb
icebp
add
addb
sbb
xchg
push
cmp
in
aam
cltd
rep
push
cs
xor
mov
xor
mov
icebp
pop
and
mov
jge
fwait
stc
mov
sti
in
mov
lcall
sbb
mov
dec
push
push
out
int
add
push
enter
pop
lods
jno
xlat
nop
add
inc
out
dec
xchg
fldenv
mov
add
outsb
mov
xchg
mov
mov
jnp
xchg
add
or
adc
cmp
push
fdivr
mov
xor
addr16
add
mov
add
add
mov
mov
loopne
mov
inc
jge
ljmp
pop
int3
or
fdivrl
in
int3
mov
stc
and
add
jg
movsl
fadds
jae
dec
loop
mov
scas
pusha
add
jno
loop
mov
push
cmp
adc
jns
out
scas
mov
mov
and
fdivs
push
dec
adc
addb
movsb
ret
into
aas
pop
js
add
cmp
cmpsw
jnp
icebp
cli
cmp
int
icebp
psubq
inc
and
jmp
insl
mov
les
fcomps
cltd
les
and
call
jbe
ss
rolb
cmp
aam
repnz
repnz
test
xor
out
adc
mov
fstpl
loop
mov
add
lods
cmp
mov
push
add
mov
mov
add
mov
add
imul
sbb
add
xchg
jbe
xchg
or
loopne
mov
jae
jmp
xor
mov
sti
rolb
or
sbb
cmpsb
mov
pop
lret
lods
pop
daa
scas
loopne
mov
enter
sub
sarl
mov
jl
pusha
add
add
sbb
add
inc
cmpsl
es
lret
daa
or
jae
add
fadd
repnz
movsb
mov
dec
dec
jp
push
fwait
fs
inc
add
xlat
mov
fisttpll
push
fisttpll
xchg
jae
scas
xchg
inc
add
icebp
iret
rorl
mov
stc
cwtl
add
push
movsl
les
test
pop
icebp
dec
adc
mov
mov
hlt
pop
push
add
out
test
xchg
jb
mov
insb
je
mov
pop
or
mov
jnp
jecxz
lds
sbb
mov
sti
xor
mov
addr16
fmuls
mov
lods
mov
mov
push
jae
popa
inc
int
jb
mov
add
test
stc
aas
lcall
mov
mov
ja
insb
addb
xchg
add
xchg
mov
add
out
add
in
xorl
ret
int3
sbb
inc
mov
add
jecxz
adc
mov
add
jns
inc
xchg
xchg
cmp
rorl
arpl
sahf
imul
insb
nop
add
mov
mov
mov
sbb
in
add
add
mov
add
mov
mov
out
or
add
add
inc
jb
mov
test
lcall
push
arpl
add
rolb
ret
mov
fmull
test
add
iret
mov
mov
adc
mov
clc
sub
adc
add
fwait
sbb
xchg
dec
movsb
rolb
mov
mov
add
enter
pop
ret
dec
sbb
mov
in
test
scas
out
arpl
xor
push
dec
mov
hlt
sbb
lea
xchg
add
mov
xchg
dec
mov
fwait
outsb
fisubrs
mov
test
xchg
jo
mov
add
popf
add
mov
add
xchg
xchg
push
in
test
add
add
mov
mov
add
hlt
in
mov
enter
inc
cld
cmpsl
arpl
or
stos
sub
mov
add
popa
aaa
ja
jns
shll
mov
sbb
mov
adcl
sub
push
dec
ret
icebp
test
xchg
mov
pop
xorl
cwtl
xor
mov
and
or
mov
fadds
add
inc
test
jg
add
stos
push
or
jne
mov
fndisi(8087
xchg
lea
adc
mov
xchg
jmp
add
add
rcrl
aad
jns
cmp
jne
mov
mov
sbb
aam
xchg
cmc
adc
stos
rolb
mov
add
outsb
xor
cld
mov
stos
dec
add
add
push
ljmp
add
add
lret
push
jecxz
repnz
lods
mov
and
mov
and
mov
add
addr16
xchg
or
add
sbb
sbb
rolb
or
add
mov
push
bound
mov
pusha
add
and
and
not
stos
mov
push
ss
add
sub
mov
mov
aam
inc
mov
lcall
imul
mov
jbe
xor
push
add
add
aaa
jnp
xchg
das
lahf
xchg
push
repnz
add
comiss
nop
add
leave
or
jns
cmp
fistl
or
jg
push
mov
arpl
in
mov
lods
cmpsb
call
enter
add
xor
mov
mov
lods
add
mov
sub
out
cmpsb
insl
jecxz
movsb
inc
pop
xchg
mov
sub
add
dec
xchg
ret
cwtl
rolb
mov
cmpsl
push
cmc
pop
xchg
add
adc
mov
add
int
add
mov
xor
and
add
mov
ljmp
in
fst
add
add
adc
mov
add
pop
loopne
mov
outsb
stos
mul
add
push
or
push
xor
pop
adc
mov
xchg
in
das
mov
pop
movsb
add
rolb
mov
imul
cltd
pusha
add
mov
fcmovb
inc
jne
add
add
and
ljmp
cmpsl
sub
cltd
pusha
add
inc
pop
xchg
or
dec
xchg
sbb
pop
aad
push
jecxz
add
mov
stos
jecxz
mov
push
inc
dec
popa
ds
add
or
mov
sar
fwait
das
cmp
add
pop
rcrl
shll
adc
and
mov
add
test
inc
pop
xchg
in
sbb
jae
lock
movsb
xor
mov
aam
testl
negl
push
js
add
rcll
inc
jne
adc
jl
or
sbb
adcl
scas
mov
inc
add
push
lods
idivb
jle
xchg
pop
aam
inc
test
imul
std
nop
add
mov
mov
idiv
in
push
addb
inc
xchg
sbb
push
repz
popa
test
mov
in
ds
scas
shr
std
mov
sbb
add
jg
addb
add
into
stos
jl
add
data16
cs
mov
sub
add
outsb
mov
add
push
fwait
cmp
ljmp
add
mov
mov
add
and
stc
stos
xor
mov
add
mov
push
les
mov
push
mov
mov
pop
in
ficoms
pusha
add
and
test
cmp
mov
js
or
mov
jl
into
leave
push
in
jo
mov
add
mov
inc
mov
test
mov
mov
pop
adc
mov
repnz
dec
push
sbb
mov
xlat
xor
mov
and
and
test
scas
loop
mov
imul
sbb
pop
xlat
xchg
and
mov
clc
pusha
add
ret
dec
sub
popf
pop
and
jge
inc
xchg
add
fcompl
int
xchg
add
pusha
add
mov
mov
nop
add
push
rolb
mov
push
or
and
icebp
rolb
mov
add
test
gs
sahf
mov
in
add
mov
out
cmp
add
mov
cwtl
stos
cs
cmc
sub
jmp
push
shl
or
pop
pop
out
add
pop
adc
jo
mov
daa
stos
adc
addb
adc
mov
add
xor
add
inc
mov
sbb
lea
mov
imul
mov
mov
jl
pushf
addb
jl
mov
pusha
add
jns
add
enter
dec
addb
iret
call
mov
mov
adc
jg
add
nop
add
push
inc
mov
mov
add
ja
pop
sbb
add
ljmp
rolb
mov
adc
cs
mov
add
xchg
lods
inc
ret
mov
imul
add
leave
adc
icebp
jmp
mov
mov
pop
jbe
je
mov
xchg
xchg
das
dec
es
test
mov
hlt
add
add
cltd
jl
pusha
add
cwtl
lods
dec
ljmp
bound
mov
mov
jmp
mov
mov
add
mov
cld
mov
mov
ss
dec
mov
enter
pop
sub
adc
mov
mov
ljmp
sbb
xorl
add
add
xchg
add
das
out
leave
push
inc
clc
add
mov
rolb
mov
add
inc
add
loopne
mov
fs
daa
leave
popf
or
push
add
mov
popa
lcall
int
lret
mov
idivb
leave
pop
add
leave
adc
mov
ja
decb
cmp
insb
adc
mov
adc
stos
int
aad
mov
in
fisubs
mov
iret
in
mov
pop
stos
pushf
mov
mov
xchg
sbb
push
and
push
mov
add
repz
repnz
jnp
sahf
push
outsl
and
mov
mov
ljmp
mov
movsb
dec
stos
mov
ja
fs
les
jae
inc
sbb
jecxz
mov
scas
mov
dec
stc
dec
or
fistpll
sbb
add
je
mov
xor
mov
fsub
cli
ja
push
mov
pop
iret
cltd
xchg
les
mov
cld
ror
fs
xor
mov
mov
add
mov
stos
sub
xor
ds
mov
sbb
adc
mov
pop
add
pop
add
lock
inc
add
and
mov
js
movsb
and
mov
push
int3
mov
jp
mov
into
cmp
pop
cmp
repz
stos
adc
or
cli
pop
clc
aaa
orl
stos
fsubrl
call
push
inc
lcall
add
or
int3
mov
cmpsl
cmp
std
jp
movsw
push
inc
sbb
add
repnz
stc
inc
js
cmp
jnp
ficomps
dec
and
mov
cmp
mov
and
mov
pushf
push
push
jo
mov
push
xlat
push
add
test
lcall
daa
movsb
jno
push
es
xor
mov
fstpt
cmp
lcall
mov
std
xchg
add
lds
push
push
lcall
stos
inc
sub
in
stc
xor
add
mov
mov
inc
int
sub
add
daa
mov
sub
xchg
mov
jbe
mov
add
add
out
jmp
add
jg
fdivr
push
loop
mov
popa
nop
add
and
rolb
mov
mov
mov
add
pop
xor
xlat
imul
cld
data16
jnp
das
data16
add
fwait
je
subl
aam
dec
lods
cmpsb
or
sub
insl
or
xor
insl
mov
mov
pop
xchg
add
jne
add
push
xchg
adc
mov
lret
jp
orl
movsl
xchg
add
js
xor
mov
fwait
xchg
je
das
sbb
ja
imul
add
mov
shrl
adc
xlat
inc
or
mov
mov
inc
xchg
iret
lods
addl
popf
xchg
popa
pop
mov
cmpsb
idiv
test
push
add
lahf
lcall
outsb
fsts
decl
sbb
je
add
add
hlt
mov
rorl
bound
mov
jno
push
sbb
push
mov
add
into
out
sub
add
mov
xlat
cmpsb
rolb
jnp
out
pop
pop
and
aas
bound
mov
add
mov
mov
data16
mov
movsb
dec
sbb
pop
mov
popa
dec
test
jmp
mov
cltd
inc
mov
mov
xchg
movsb
lods
daa
lods
fistps
jo
mov
mov
mov
add
push
add
paddsb
cs
stos
mov
add
jmp
movb
and
add
mov
mov
aad
pushf
cwtl
addb
or
dec
and
test
sbb
sbb
lea
mov
bound
mov
lods
add
mov
add
cmp
mov
pop
xchg
gs
out
mov
and
mov
stos
dec
sbb
add
push
fistpll
icebp
bound
mov
clc
sub
andl
std
cmpl
inc
dec
jns
loopne
mov
xor
or
xchg
pop
fnstsw
insl
inc
sub
xchg
hlt
movsl
ja
mov
iret
jne
dec
jcxz
adc
push
pop
cmc
fisubs
adc
push
stc
push
sbb
rol
mov
hlt
mov
imul
and
lods
mov
leave
sbb
leave
sbb
stos
rolb
mov
push
jle
lds
fidivs
and
mov
aaa
loopne
mov
cltd
inc
ja
mov
mov
out
xchg
lock
mov
inc
pop
and
add
mov
adc
call
pop
push
sub
rolb
mov
add
lock
pop
iret
call
lea
mov
mov
ss
lret
push
jns
in
adc
mov
add
mov
xor
mov
loope
ljmp
xor
mov
xchg
imul
test
sbb
pop
fwait
outsb
inc
mov
in
das
push
push
dec
daa
ret
in
test
pop
jl
or
lods
push
mov
xchg
das
outsb
lock
push
lret
std
loopne
mov
test
mov
inc
mov
add
mov
jbe
call
and
adc
pop
insb
xor
push
jg
js
int3
lea
mov
push
rolb
mov
adc
ret
mov
rolb
mov
add
jge
jmp
cmp
scas
push
loope
add
subl
dec
enter
imul
pop
aad
add
mov
mov
push
bound
mov
add
xor
mov
mov
and
add
fs
push
mov
add
pop
out
negb
pushl
pop
repz
add
add
ss
pop
push
or
iret
sub
int3
pop
loope
leave
pop
xchg
add
mov
mov
in
push
lock
cltd
sub
fs
mov
idivl
add
xchg
pop
shll
call
mov
stc
mov
add
jge
addb
mov
divb
add
add
push
out
shll
jl
into
call
stos
notl
pushf
fwait
mov
jb
mov
ret
bound
mov
loopne
mov
scas
pop
cmp
mov
mov
xchg
or
nop
add
xchg
sub
rolb
mov
ss
lds
test
das
inc
add
outsb
popa
cmp
imul
stc
jno
xor
cmpsb
dec
test
inc
outsb
out
mov
add
xchg
xchg
iret
xor
mov
sbb
push
push
add
mov
and
mov
lds
mov
sbb
mov
mov
mov
jge
dec
push
jecxz
add
pop
and
nop
add
or
add
mov
addr16
xor
add
add
loop
mov
inc
test
addb
sub
or
out
mov
add
mov
push
ljmp
inc
loope
push
xchg
pop
or
add
and
adc
mov
pop
hlt
or
dec
rolb
mov
cmp
pusha
add
or
aas
negb
add
mov
fcomi
pop
les
out
mov
jae
add
into
shll
mov
stc
inc
xchg
sbb
lock
hlt
or
push
push
jge
sbb
add
inc
out
add
loope
add
std
jne
fdivs
jo
mov
enter
xchg
sahf
outsb
jmp
mov
adc
mov
stc
push
fs
leave
out
mov
xchg
sub
inc
mov
mov
jnp
or
mov
and
add
test
add
push
add
ret
lahf
fistl
aas
lds
scas
xor
and
pop
xor
clc
mov
or
jge
rolb
and
cltd
xchg
pop
jb
mov
pop
jno
mov
and
insb
add
lock
mov
inc
pop
mov
rolb
mov
add
mov
in
sub
mov
push
dec
fcmovne
out
pop
mov
cltd
into
inc
cltd
xchg
adc
mov
sub
mov
pop
stc
ljmp
testl
add
jmp
sahf
xor
push
add
mov
rolb
mov
dec
fstl
adc
int3
loopne
mov
sti
inc
add
and
mov
jmp
ljmp
mov
lods
lret
xchg
xor
mov
xor
mov
loope
adc
mov
sub
push
popf
mov
pushf
addb
jecxz
push
add
sahf
add
mov
jns
rolb
mov
push
push
push
imul
dec
pop
out
adc
add
xchg
fisubs
add
add
inc
add
pop
jae
and
std
push
add
or
add
sbb
pop
jne
pop
mov
xor
mov
push
dec
pop
daa
fiadds
or
pop
cmp
push
test
add
add
xor
popf
fbstp
push
sub
aam
dec
adc
cwtl
loop
mov
add
mov
mov
mov
adc
lea
add
out
fsubl
and
mov
dec
leave
loopw
mov
loop
mov
mov
sbb
dec
jmp
addb
cs
outsl
cld
and
add
push
jg
arpl
sti
aaa
rolb
xor
imul
out
stc
adc
add
enter
add
mov
jb
mov
add
add
out
scas
jl
mov
loop
mov
dec
add
movsb
sub
vpperm
adc
mov
jae
add
cmp
jnp
sti
add
add
mov
ret
sbb
popa
int3
mov
jle
mov
mov
mov
push
inc
cld
inc
xor
aaa
dec
jno
lea
push
movsl
pop
cmp
jg
shll
jne
fistpll
movups
push
mov
cmpsb
hlt
cmp
xor
mov
sub
push
mov
sbb
or
lods
int3
inc
dec
xchg
dec
pushf
lret
subl
hlt
lahf
jbe
sub
inc
add
add
add
add
dec
test
jg
dec
loop
mov
fmuls
mov
add
mov
jns
or
fnsave
pop
cs
add
imul
jo
mov
adc
stc
cltd
leave
xchg
xor
mov
sub
rolb
mov
mov
xchg
pushf
inc
add
lret
in
pop
add
outsl
ret
cs
jp
and
mov
jns
xchg
std
cs
lret
sub
ljmp
sub
arpl
addl
or
fidivl
add
mov
add
add
xchg
lret
lods
cmpsb
lods
ret
mov
mov
mov
sbb
out
int3
into
dec
mov
mov
out
mov
add
insl
cmpsl
mov
scas
shll
push
and
sbb
addb
addl
xchg
mov
and
mov
lcall
dec
mov
mov
jg
push
jmp
adc
mov
add
rolb
das
jne
out
mov
xor
push
add
sub
dec
loopne
mov
repnz
bound
mov
hlt
push
or
in
pop
push
dec
lret
cmp
mov
add
rolb
mov
jmp
sbb
push
jb
mov
cmc
push
push
and
lahf
and
mov
mov
stc
pop
outsl
or
mov
mov
insl
fcmove
jbe
add
xchg
add
push
lock
mov
bound
mov
push
addb
faddl
lods
pop
or
clc
mov
cmp
push
mov
add
in
jo
mov
mov
lock
mov
add
adc
sbbl
cmpsb
ss
xchg
jnp
cld
scas
lahf
in
bound
mov
xor
mov
cli
mov
add
lds
add
push
test
mov
dec
push
add
and
mov
loope
add
mov
sub
into
outsb
lret
mov
jp
fbld
mov
mov
xlat
repnz
push
jne
scas
imul
jnp
xchg
xchg
mov
clc
lods
xor
push
repz
mov
add
push
int3
push
movsl
xchg
or
dec
adc
nop
add
stos
into
mov
pop
pop
xor
add
mov
bound
mov
stos
addl
mov
mov
out
cs
mov
stos
inc
lahf
loop
mov
test
jno
add
xchg
jl
inc
add
fists
cmp
jmp
lods
cmp
adc
mov
mov
add
add
es
ret
loopne
mov
push
pop
mov
dec
mov
lods
cmpsb
sub
in
out
insl
inc
lahf
dec
pop
add
lea
dec
and
xchg
mov
pop
push
and
mov
mov
adc
mov
add
xchg
dec
dec
out
pushf
repnz
push
ja
lods
outsl
inc
pop
xchg
notb
add
add
scas
dec
aad
cmp
arpl
add
mov
add
push
fs
decl
mov
inc
add
add
pop
test
add
add
lcall
mov
sub
add
mov
push
push
insb
or
mov
stos
pop
mov
lahf
scas
xchg
add
fwait
jp
mov
mov
add
push
fdivrl
adc
aaa
xchg
sbb
add
dec
in
bound
mov
push
daa
xchg
or
mov
mov
push
fcmove
jne
mov
aad
push
add
mov
push
add
adc
add
add
call
jns
in
pop
into
fstps
sbb
or
lahf
inc
shrl
lahf
stos
scas
and
fdivl
sub
add
movsb
inc
rolb
mov
add
xchg
mov
xchg
pop
cli
cmpsb
cmpsl
lods
movsb
inc
mov
add
add
mov
xchg
pop
test
jno,pn
add
sahf
and
out
jae
fstpl
lea
add
xorl
lods
ret
pop
add
jl
dec
mov
xchg
or
xor
mov
jmp
add
xchg
sbb
sbb
xor
sarl
movsb
mov
in
icebp
mov
sub
and
out
jne
fstp
sbb
int
sbb
add
pop
movsb
rolb
mov
pop
sub
add
shrl
add
xor
mov
scas
or
xor
add
mov
mov
rcrl
mov
hlt
call
add
mov
cmp
xchg
adc
push
add
mov
rolb
mov
cs
mov
popf
data16
or
mov
dec
add
dec
xor
stos
pushf
popa
adc
mov
add
add
mov
xchg
add
jbe
fucomi
insb
pop
dec
push
scas
call
mov
loop
mov
rolb
mov
dec
adc
mov
add
lds
dec
mov
fsts
add
clc
mov
add
or
add
sub
das
cltd
outsl
out
stos
ss
dec
rcr
inc
js
inc
add
push
cmp
sub
cmp
xor
fucomi
pop
sub
cli
and
add
outsb
nop
add
leave
push
mov
in
add
add
lahf
pop
mov
push
pusha
add
insb
in
inc
add
mov
add
pop
sub
int3
int
or
add
xchg
add
ds
inc
add
mov
enter
add
stos
fbstp
jnp
xchg
push
add
pop
adc
inc
mov
sub
fdivrl
ds
rolb
mov
rolb
cmp
sub
sahf
mov
adc
adc
mov
add
add
mov
or
int
mov
xchg
jnp
cld
push
jmp
jnp
pop
pop
js
sub
or
or
test
repnz
or
jnp
mov
sahf
jnp
outsb
mov
leave
sub
mov
add
push
mov
lods
scas
push
sub
add
pop
or
mov
jle
dec
xor
mov
arpl
add
cmp
dec
aam
jbe
sub
daa
repz
or
add
push
add
out
push
add
mov
cwtl
adc
lock
push
add
push
repnz
xchg
aam
cmp
incl
in
add
sub
mov
mov
loope
add
adc
mov
popa
enter
push
lock
sbb
pusha
add
hlt
jae
addb
pop
popf
jmp
push
fildl
cltd
lahf
xor
push
dec
stos
jmp
add
mov
mov
lahf
mov
sbb
mov
pop
jnp
add
in
lret
pop
pop
pop
iret
inc
jb
mov
lea
es
std
imul
mov
loopne
mov
cs
add
adc
mov
mov
ret
xchg
lcall
movsb
test
pop
push
add
inc
dec
jl
pop
sahf
xchg
movsb
pop
divl
push
inc
add
pop
pop
dec
mov
add
jbe
aam
ss
mov
fmul
cmp
jecxz
repz
adc
lahf
lret
sub
std
lock
mov
cmpsb
jnp
sahf
icebp
push
cmp
shrl
fildl
inc
int3
hlt
xchg
negl
sub
sahf
or
xor
mov
mov
add
popa
out
mov
sahf
lods
xchg
jne
aaa
movsl
and
pushl
xchg
add
push
add
imul
mov
pop
xchg
pusha
add
outsl
leave
and
add
test
cmp
push
xor
mov
mov
mov
jb
mov
mov
add
add
inc
add
mov
repz
cmp
out
into
pusha
add
mov
mov
jo
mov
add
cmp
es
enter
and
mov
icebp
and
sbb
add
out
mov
daa
xor
mov
lcall
hlt
test
aam
adc
nop
add
add
mov
cmp
mov
add
mov
xor
push
out
add
mov
enter
into
xor
mov
lods
pop
loopne
mov
add
adc
leave
dec
addb
int
sub
mov
ja
xlat
push
add
jmp
rolb
mov
shrl
iret
adc
mov
cmc
out
push
cmp
and
mov
aam
testb
add
mov
mov
add
cmp
mov
mov
fiadds
add
dec
cwtl
push
scas
mov
mov
xchg
movsl
insl
cli
lret
pushf
mov
dec
lret
mov
add
jb
mov
mov
add
loope
leave
xor
mov
lcall
rolb
mov
insb
mov
jnp
pop
xchg
jnp
mov
pop
dec
pop
sbb
inc
sti
mov
mov
add
leave
bound
mov
add
and
push
xchg
xor
mov
pop
fs
xchg
scas
mov
mov
inc
jb
mov
jle
aad
adc
roll
xor
sub
sbb
int3
test
pop
mov
movsl
addb
mov
add
fstp
pusha
add
lea
lds
cwtl
or
mov
add
insl
stc
xchg
jmp
sub
rolb
mov
add
mov
xchg
aaa
dec
inc
sub
or
sti
cwtl
pop
add
add
hlt
iret
stos
sahf
adc
mov
jb
mov
xchg
dec
pop
jns
enter
pop
jl
mov
test
add
dec
xchg
inc
rolb
pop
pop
sub
cld
fisttpll
xchg
cli
inc
scas
scas
jg
add
mov
and
mov
roll
lds
loop
mov
add
add
loope
sub
add
adc
dec
bound
mov
xor
push
add
add
mov
out
mov
mov
push
mov
mov
lods
loopne
mov
dec
mov
inc
add
fidivl
lahf
fwait
bound
mov
pop
js
ret
in
cmp
les
add
mov
add
add
add
cmp
je
xchg
xor
ret
repnz
sbb
rolb
inc
jp
xchg
sub
mov
test
subl
rcll
lea
add
in
fucomip
add
aad
mov
jg
cli
das
xlat
scas
and
mov
shrl
push
xlat
aam
mov
mov
push
add
mov
cli
pushf
stc
adc
cs
cmp
sub
insl
sub
xlat
add
xchg
das
cmp
stc
push
add
add
or
and
mov
movsl
mov
jmp
ja
test
arpl
cwtl
xchg
push
frstor
rcrl
mov
cld
sbb
add
mov
nop
add
mov
mov
add
dec
mov
add
addb
dec
mov
mov
lret
dec
inc
lds
inc
add
mov
inc
jno
daa
and
pop
push
call
add
mov
add
pusha
add
test
add
mov
fnsave
loop
mov
ret
jg
setns
jo
mov
lods
dec
jbe
aad
je
daa
out
add
shll
lcall
dec
push
mov
add
adc
pop
push
ficoml
add
mov
add
mov
daa
into
jmp
in
sbb
jecxz
and
mov
xchg
shll
stc
adc
cmpsl
ja
add
rolb
mov
mov
mov
add
cli
xchg
jo
mov
fs
mov
mov
xor
inc
mov
mov
xor
inc
filds
mov
jl
xchg
out
push
fs
cs
add
sub
rolb
push
add
jae
sbb
push
add
in
add
add
mov
movsb
outsb
pop
adcl
pushf
xor
int
inc
rolb
or
sub
push
imul
cmp
mov
mov
add
add
pop
mov
mov
mov
jne
cld
mov
dec
sbb
mov
dec
xor
mov
movsl
mov
mov
xor
pop
test
add
jbe
adc
js
jno
add
cli
ds
rcll
in
or
ljmp
into
das
cmp
cs
es
ret
inc
add
cmp
fs
sbb
jmp
add
xor
mov
mov
mov
pushf
cmp
and
mov
mov
testb
sub
mov
adc
repnz
sub
add
mov
hlt
loopne
mov
jne
es
movsl
push
ss
mov
add
pop
in
pop
mov
mov
add
mov
mov
jo
mov
add
or
sbb
add
push
mov
lea
dec
sub
negb
loope
rolb
mov
add
dec
pop
inc
add
test
sbb
mov
insb
mov
add
lret
or
jbe
mov
mov
call
cmp
and
mov
pop
ret
mov
add
mov
pop
int3
std
loope
and
jmp
mov
add
add
test
jl
pop
xor
mov
in
rolb
mov
jns
add
iret
adc
add
mov
jo
mov
test
sahf
add
mov
std
push
test
cli
sbb
das
out
test
das
or
mov
add
jns
movsb
ds
dec
in
and
mov
in
adc
xchg
mov
leave
mov
mov
mov
mov
es
or
add
les
add
addb
mov
push
dec
mov
pop
js
inc
add
inc
jmp
jge
iret
aad
leave
inc
bound
mov
pop
xchg
pop
xchg
add
push
xchg
mov
sbb
fsubr
dec
jnp
add
mov
pop
inc
data16
lahf
loop
mov
dec
jae
aas
pop
mov
mov
dec
lock
in
push
add
dec
or
xchg
add
pop
mov
add
out
aam
aad
lret
push
jmp
jge
hlt
push
add
mov
sti
pop
inc
add
and
scas
addb
cmpsl
jmp
jmp
stos
mov
fdivr
je
incl
dec
and
mov
sub
xchg
cmp
fcomp
and
sub
icebp
out
lcall
add
popl
mov
aaa
jecxz
mov
adc
sbb
fisttpl
jbe
mov
lret
test
inc
add
add
mov
cld
sbb
xchg
add
mov
add
popa
and
mov
jg
cmp
pop
mov
popa
loope
in
dec
arpl
add
sbb
dec
ret
call
add
add
push
repnz
mov
dec
popa
jne
dec
xor
mov
rolb
shrl
xchg
movsl
int3
sbb
mov
push
jecxz
add
out
adc
add
dec
out
add
je
mov
xchg
jne
pushf
scas
mov
lcall
inc
xchg
cmp
in
in
push
xchg
push
add
or
cli
inc
rcll
dec
out
ror
inc
add
add
fdiv
insl
sti
out
fsub
inc
rolb
call
mov
daa
jne
ret
mov
movsl
adc
cmpsl
cwtl
int3
add
xchg
adc
mov
add
addl
int3
aaa
cmp
call
loope
loopne
mov
repnz
jb
mov
inc
add
add
push
lret
pop
mov
mov
mov
sub
add
jnp
aas
and
push
addb
test
mov
adc
cltd
mov
add
dec
out
adc
jae
add
xchg
jmp
cmp
ret
mov
sub
push
xchg
or
cmp
xor
mov
aad
dec
sub
mov
pop
adc
jmp
stos
xchg
dec
inc
add
pop
mov
pop
xor
mov
shll
addr16
mov
jns
add
inc
add
mov
enter
pop
or
mov
cmc
adc
mov
add
fs
gs
in
add
and
test
xchg
pop
iret
jecxz
sub
rolb
mov
xchg
loope
add
sbb
add
cwtl
mov
add
mov
mov
push
or
dec
cmp
loope
push
sub
inc
lea
add
emms
inc
cmp
jnp
in
mov
rcll
ds
push
ret
xchg
add
addb
jmp
adc
aaa
jp
sbb
mov
mov
xor
popa
je
and
mov
out
fstl
scas
xchg
sbb
into
xor
filds
je
inc
pop
mov
clc
repnz
nop
cld
jae
add
fisttps
pop
push
push
mov
xchg
ret
add
dec
add
rolb
mov
cld
push
mov
xchg
ret
dec
add
add
jo
jnp
in
push
clc
repnz
nop
cld
jae
movb
bound
add
add
andl
mov
nop
leave
jmp
movb
add
sub
fldenv
xor
add
clc
repnz
nop
cld
jae
lds
inc
int3
mov
clc
repnz
nop
cld
jae
add
add
add
stos
xor
clc
repnz
nop
cld
jae
dec
imul
add
push
mov
xchg
ret
add
pop
jno
add
lods
mov
clc
repnz
nop
cld
jae
push
jbe
add
add
mov
xchg
ret
add
add
add
pop
push
pop
pop
clc
repnz
nop
cld
jae
add
repnz
add
arpl
add
testb
cmp
ret
add
push
add
add
jnp
call
clc
repnz
nop
cld
jae
push
add
bound
mov
push
mov
mov
push
mov
xchg
ret
mov
pop
add
add
add
add
push
mov
xchg
ret
inc
add
add
mov
clc
repnz
nop
cld
jae
add
jge
push
imul
clc
repnz
nop
cld
jae
add
sub
sub
icebp
sub
repnz
nop
cld
jae
add
add
add
sbb
test
jg
clc
repnz
nop
cld
jae
dec
jbe
add
test
adc
add
repnz
nop
cld
jae
jno
cmpsl
lret
mov
clc
repnz
nop
cld
jae
sti
add
add
add
add
add
repnz
nop
cld
jae
mov
add
repnz
nop
cld
jae
mov
testl
push
clc
repnz
nop
cld
jae
fs
sub
or
test
push
mov
xchg
ret
add
add
sub
and
clc
repnz
nop
cld
jae
add
dec
jge
add
add
test
push
mov
nop
leave
jmp
jge
mov
xchg
push
push
mov
nop
leave
jmp
dec
add
lods
add
mov
add
repnz
nop
cld
jae
inc
sti
movb
xlat
out
aas
mov
push
mov
xchg
ret
sub
add
add
add
clc
repnz
nop
cld
jae
add
out
add
mov
push
mov
xchg
ret
add
or
movb
jne
sub
nop
cld
jae
add
outsl
adc
push
clc
repnz
nop
cld
jae
add
xchg
jo
bound
add
clc
repnz
nop
cld
jae
mov
mov
add
clc
repnz
nop
cld
jae
jbe
cmp
mov
xchg
ret
jnp
add
cs
jne
dec
imul
clc
repnz
nop
cld
jae
add
dec
lods
das
add
enter
nop
cld
jae
jno
pop
jo
add
add
add
clc
repnz
nop
cld
jae
add
add
or
jae
repnz
nop
cld
jae
in
add
and
add
jae
push
mov
nop
leave
jmp
add
sub
repnz
into
es
clc
repnz
nop
cld
jae
add
roll
xchg
ret
jno
add
mov
and
mov
push
mov
xchg
ret
dec
push
pop
add
bound
dec
daa
out
mov
push
mov
xchg
ret
add
push
add
xor
clc
repnz
nop
cld
jae
das
add
add
push
mov
nop
leave
jmp
movb
mov
sbb
and
clc
repnz
nop
cld
jae
sti
add
add
xor
mov
mov
jmp
mov
repnz
add
jnp
add
cmp
inc
add
sti
dec
mov
rolb
mov
nop
nop
cld
jae
repnz
lret
push
push
mov
nop
leave
jmp
add
addl
add
sbb
or
add
clc
repnz
nop
cld
jae
bound
add
push
jb
mov
mov
or
nop
nop
cld
jae
push
add
push
push
mov
nop
leave
jmp
add
mov
fstpt
jmp
incl
add
add
dec
add
loope
mov
clc
repnz
nop
cld
jae
add
lock
jnp
pop
jmp
clc
repnz
nop
cld
jae
jbe
pop
addl
mov
pop
clc
repnz
nop
cld
jae
add
add
jp
movsb
clc
repnz
nop
cld
jae
outsl
pop
jg
movb
xlat
test
in
nop
leave
jmp
imul
mov
cld
and
clc
repnz
nop
cld
jae
popl
or
add
inc
clc
repnz
nop
cld
jae
add
dec
add
push
push
mov
xchg
ret
add
add
repnz
add
repnz
nop
cld
jae
dec
jo
fcoml
in
aaa
imul
inc
fiadds
and
nop
add
pop
push
mov
nop
leave
jmp
dec
in
add
add
add
push
test
mov
add
mov
xchg
ret
add
pop
add
push
add
lea
push
mov
nop
leave
jmp
jne
int3
testl
repnz
nop
cld
jae
add
add
add
add
add
and
add
in
nop
leave
jmp
mov
cmp
mov
repnz
nop
cld
jae
int3
add
mov
pushf
mov
clc
repnz
nop
cld
jae
add
add
jno
clc
add
clc
repnz
nop
cld
jae
jne
add
call
nop
nop
cld
jae
add
push
addl
add
clc
repnz
nop
cld
jae
add
mov
add
add
mov
rolb
xchg
ret
fildll
jne
jo
imul
into
cld
inc
add
jne
add
add
mov
jne
clc
repnz
nop
cld
jae
add
adc
mov
add
clc
repnz
nop
cld
jae
sub
add
sbb
mov
sbb
mov
xchg
ret
jg
add
testl
or
inc
add
add
push
pop
add
loopne
mov
movb
repnz
nop
cld
jae
add
bound
jg
imul
dec
push
clc
repnz
nop
cld
jae
jge
ss
mov
clc
repnz
nop
cld
jae
jbe
xlat
cmp
clc
repnz
nop
cld
jae
add
or
add
dec
add
add
repnz
nop
cld
jae
add
add
je
repnz
nop
cld
jae
jbe
add
xchg
adc
add
push
mov
nop
leave
jmp
add
bound
lods
add
repnz
clc
repnz
nop
cld
jae
add
out
add
clc
repnz
nop
cld
jae
add
fs
add
mov
clc
repnz
nop
cld
jae
add
loopne
mov
add
clc
repnz
nop
cld
jae
pop
add
lock
addr16
out
div
clc
repnz
nop
cld
jae
add
add
mov
jl
and
outsl
inc
add
jg
jno
outsb
push
clc
repnz
nop
cld
jae
mov
in
jo
jnp
filds
jo
push
mov
nop
leave
jmp
add
test
shl
inc
add
mov
in
lea
jne
push
mov
nop
leave
jmp
out
jbe
add
clc
repnz
nop
cld
jae
mov
mov
test
push
mov
nop
leave
jmp
mov
cmc
sti
jg
sub
mov
clc
repnz
nop
cld
jae
add
push
mov
add
add
add
mov
push
int3
mov
push
mov
nop
leave
jmp
add
add
rep
clc
repnz
nop
cld
jae
mov
pandn
faddl
xchg
ret
mov
add
popl
clc
repnz
nop
cld
jae
add
out
jne
add
add
clc
repnz
nop
cld
jae
add
mov
das
add
clc
repnz
nop
cld
jae
add
mov
rclb
or
cmp
ret
pop
add
dec
add
lods
and
imul
nop
nop
cld
jae
add
idivl
mov
clc
repnz
nop
cld
jae
add
jbe
push
clc
repnz
nop
cld
jae
inc
add
add
out
outsl
jg
add
clc
repnz
nop
cld
jae
add
movb
jmp
add
sub
add
add
add
jge
fwait
xor
push
mov
xchg
ret
mov
jbe
aas
add
push
mov
nop
leave
jmp
sbb
sti
add
dec
add
aas
adc
in
nop
leave
jmp
add
add
jno
add
clc
repnz
nop
cld
jae
filds
add
add
add
les
clc
repnz
nop
cld
jae
push
nop
add
in
add
add
arpl
add
add
addl
add
push
mov
nop
leave
jmp
add
imul
leave
push
mov
xchg
ret
lods
add
add
add
or
shrb
jge
inc
add
add
sti
add
jns
clc
repnz
nop
cld
jae
bound
add
movb
mov
clc
repnz
nop
cld
jae
add
jecxz
mov
clc
repnz
nop
cld
jae
inc
add
add
sub
add
clc
repnz
nop
cld
jae
add
add
cld
jae
or
jnp
jbe
add
xchg
js
jmp
nop
cld
jae
add
add
bound
aaa
mov
nop
cld
jae
out
add
jbe
add
mov
repnz
adc
mov
clc
repnz
nop
cld
jae
add
add
push
add
cs
clc
repnz
nop
cld
jae
and
add
or
add
inc
outsb
call
clc
repnz
nop
cld
jae
add
ss
js
clc
repnz
nop
cld
jae
add
add
add
add
out
or
add
push
mov
nop
leave
jmp
add
outsl
mov
push
mov
xchg
ret
sub
pop
add
jnp
dec
or
in
nop
leave
jmp
jno
add
pop
bound
mov
imul
add
add
bound
enter
nop
cld
jae
add
add
jno
lds
mov
clc
repnz
nop
cld
jae
sub
add
shl
push
mov
xchg
ret
or
mov
adc
cmpl
push
mov
nop
leave
jmp
add
add
repnz
mov
mov
push
mov
xchg
ret
add
add
loopne
mov
push
mov
nop
leave
jmp
add
add
add
movsl
pop
daa
lahf
mov
push
mov
xchg
ret
add
add
add
dec
pop
clc
repnz
nop
cld
jae
imul
rolb
sahf
xor
clc
repnz
nop
cld
jae
imul
sti
clc
repnz
nop
cld
jae
or
add
push
repnz
add
clc
repnz
nop
cld
jae
push
add
lds
dec
add
clc
repnz
nop
cld
jae
add
add
jno
add
ret
add
mov
mov
jne
pop
add
mov
mov
nop
leave
jmp
movb
sub
sub
add
stos
push
mov
xchg
ret
filds
jne
lods
mov
test
add
clc
repnz
nop
cld
jae
mov
clc
repnz
nop
cld
jae
addl
add
mov
out
add
clc
repnz
nop
cld
jae
jne
add
das
inc
bound
pop
adc
in
nop
leave
jmp
add
pop
or
clc
repnz
nop
cld
jae
add
das
jbe
pop
clc
repnz
nop
cld
jae
add
add
filds
andl
or
mov
xchg
ret
or
add
add
bound
add
repnz
nop
cld
jae
jg
sbb
add
addb
and
mov
push
mov
nop
leave
jmp
add
das
or
add
gs
negb
jne
push
mov
nop
leave
jmp
sldt
add
inc
imul
nop
nop
cld
jae
jg
pop
filds
imul
pushf
aad
add
add
jge
push
add
clc
repnz
nop
cld
jae
sub
add
lods
int3
pop
sub
push
mov
xchg
ret
jbe
mov
add
and
push
fs
repnz
nop
cld
jae
add
add
add
loopne
mov
nop
leave
jmp
testl
pop
mov
clc
repnz
nop
cld
jae
jnp,pn
div
bound
div
repnz
push
mov
xchg
ret
add
add
imul
repz
mov
nop
leave
jmp
add
ss
add
add
add
mov
xchg
ret
lock
add
out
push
mov
nop
leave
jmp
add
add
mov
push
in
add
xor
add
pop
in
out
add
jmp
clc
repnz
nop
cld
jae
sbb
movb
add
pop
movzwl
clc
repnz
nop
cld
jae
out
add
add
add
loop
mov
movzwl
push
mov
nop
leave
jmp
jbe
add
add
pop
call
add
add
in
nop
leave
jmp
add
push
push
mov
xchg
ret
add
add
push
jmp
fildll
mov
jbe
cs
popf
mov
push
mov
nop
leave
jmp
out
add
cs
sti
bound
dec
mov
push
mov
nop
leave
jmp
add
add
push
xor
mov
add
repnz
nop
cld
jae
bound
add
add
je
clc
repnz
nop
cld
jae
add
int3
adc
mov
mov
clc
repnz
nop
cld
jae
das
cmc
pop
jp
clc
repnz
nop
cld
jae
pop
xchg
add
add
mov
or
repnz
nop
cld
jae
add
cli
mov
clc
repnz
nop
cld
jae
cmpl
sub
mov
mov
add
les
clc
repnz
nop
cld
jae
add
cmp
push
mov
nop
leave
jmp
in
mov
add
ss
mov
adcb
nop
leave
jmp
add
add
add
nop
cld
jae
mov
sub
sub
push
mov
xchg
ret
add
int3
das
add
jbe
add
clc
repnz
nop
cld
jae
add
add
add
cltd
pop
push
mov
xchg
ret
add
push
add
add
add
decl
push
mov
nop
leave
jmp
inc
bound
add
sub
mov
nop
leave
jmp
sub
add
add
sbb
cmp
repnz
nop
cld
jae
add
add
add
add
adc
sub
add
repnz
nop
cld
jae
pop
add
imul
push
jno
sub
repnz
add
push
mov
nop
leave
jmp
add
add
add
jne
clc
repnz
nop
cld
jae
pop
mov
test
add
repnz
nop
cld
jae
bnd
add
add
push
mov
nop
leave
jmp
add
push
push
add
add
fldl
jb
clc
repnz
nop
cld
jae
add
xor
clc
repnz
nop
cld
jae
add
add
add
mov
push
mov
xchg
ret
add
add
outsb
push
clc
repnz
nop
cld
jae
add
add
add
add
jne
add
repnz
nop
cld
jae
sbb
add
jmp
cld
jae
mov
add
mov
jmp
add
dec
add
add
divl
jnp
jb
mov
mov
nop
nop
cld
jae
inc
add
add
add
inc
sbb
and
clc
repnz
nop
cld
jae
add
push
mov
nop
leave
jmp
add
jne
xorl
jno
pop
clc
repnz
nop
cld
jae
and
add
jo,pn
add
clc
repnz
nop
cld
jae
push
add
jne
clc
repnz
nop
cld
jae
mov
mov
mov
push
mov
nop
leave
jmp
add
dec
add
ret
clc
repnz
nop
cld
jae
filds
add
add
jge
dec
adc
pusha
cmc
inc
add
imul
nop
nop
cld
jae
add
add
bound
outsb
jne
clc
repnz
nop
cld
jae
repnz
gs
nop
leave
jmp
repnz
mov
mov
clc
repnz
nop
cld
jae
in
add
inc
or
push
mov
xchg
ret
add
jg
jo
mov
add
repnz
nop
cld
jae
out
add
add
add
add
xor
push
mov
xchg
ret
add
add
cltd
pop
clc
repnz
nop
cld
jae
mov
add
add
add
or
repnz
nop
cld
jae
jge
sbb
repnz
test
inc
add
add
das
pop
jge
mov
push
mov
ret
xor
sub
add
add
pop
push
add
push
mov
nop
leave
jmp
jno
add
dec
jo
cmp
or
inc
add
lods
repnz
sbb
push
clc
repnz
nop
cld
jae
add
and
inc
das
add
xor
mov
push
mov
nop
leave
jmp
movb
add
inc
push
sub
adc
repnz
nop
cld
jae
add
jne
mov
in
nop
leave
jmp
imul
add
add
add
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
out
mov
add
clc
repnz
nop
cld
jae
jnp
add
pop
add
push
ss
clc
repnz
nop
cld
jae
add
add
orl
mov
xchg
ret
push
add
outsl
cmp
nop
nop
cld
jae
int3
pop
push
add
push
and
mov
je
repnz
nop
cld
jae
add
add
data16
add
repz
push
push
mov
xchg
ret
add
pop
add
xchg
inc
mov
mov
nop
cld
jae
dec
imul
xchg
mov
clc
repnz
nop
cld
jae
cmpl
add
cmp
nop
nop
cld
jae
out
jno
add
mov
push
mov
xchg
ret
add
xchg
outsl
add
clc
repnz
nop
cld
jae
pop
add
repnz
cmc
rolb
mov
leave
push
mov
nop
leave
jmp
jnp
add
inc
add
cmp
shl
add
mov
add
add
pop
mov
clc
repnz
nop
cld
jae
sub
add
mov
push
mov
nop
leave
jmp
movb
add
ss
and
mov
shr
clc
repnz
nop
cld
jae
movb
out
add
push
or
add
add
repnz
nop
cld
jae
movb
call
clc
repnz
nop
cld
jae
lods
add
add
cmp
in
pop
add
adc
and
add
dec
add
daa
add
repnz
nop
cld
jae
sub
add
jg
add
nop
nop
cld
jae
add
mov
add
add
mov
clc
repnz
nop
cld
jae
sub
pop
mov
push
mov
xchg
ret
add
sub
cmp
inc
add
dec
mov
fdivs
sar
nop
nop
cld
jae
mov
cs
lods
mov
push
push
mov
xchg
ret
add
jnp
ss
add
add
dec
push
mov
nop
leave
jmp
push
add
mov
sub
sbb
pop
or
repnz
nop
cld
jae
popl
add
add
nop
cld
jae
add
jno
add
add
inc
and
push
mov
nop
leave
jmp
add
add
ucomiss
push
nop
nop
cld
jae
jnp
outsl
das
jbe
mov
adc
repnz
nop
cld
jae
add
jbe
inc
add
je
push
mov
nop
leave
jmp
jge
bound
test
lea
clc
repnz
nop
cld
jae
pmulhuw
add
add
push
clc
repnz
nop
cld
jae
lds
mov
cwtl
push
push
mov
xchg
ret
jbe
dec
or
pop
inc
add
test
add
clc
repnz
nop
cld
jae
jbe
add
xor
push
mov
nop
leave
jmp
push
jbe
add
add
clc
repnz
nop
cld
jae
add
add
movzwl
clc
repnz
nop
cld
jae
add
xchg
push
mov
nop
leave
jmp
add
push
bound
add
fistps
hlt
inc
add
push
add
pop
add
jno
pop
mov
clc
repnz
nop
cld
jae
movb
add
mov
clc
repnz
nop
cld
jae
add
add
sub
jmp
jmp
incl
bound
add
outsl
add
add
push
mov
nop
leave
jmp
add
or
lock
jge
lds
stos
notl
in
nop
leave
jmp
add
jne
jl
dec
add
mov
xchg
ret
lds
add
mov
add
repnz
nop
cld
jae
jbe
out
add
jno
mov
push
mov
nop
leave
jmp
sub
mov
push
mov
nop
leave
jmp
add
sub
sbb
in
nop
leave
jmp
cmc
addl
int3
add
mov
clc
repnz
nop
cld
jae
sub
mov
add
push
mov
nop
leave
jmp
lods
mov
in
filds
push
mov
out
inc
add
pop
xchg
jae
push
and
push
mov
xchg
ret
dec
add
add
add
popa
lcall
mov
nop
leave
jmp
ss
jg
pop
or
mov
xchg
ret
add
jbe
add
add
cmpsl
xchg
jne
pop
push
mov
xchg
ret
push
add
add
sbb
decl
mov
adc
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
add
bnd
add
clc
repnz
nop
cld
jae
add
das
or
jno
mov
clc
repnz
nop
cld
jae
push
pop
addb
in
mov
clc
repnz
nop
cld
jae
bound
add
xchg
push
xchg
clc
repnz
nop
cld
jae
lock
sub
in
nop
leave
jmp
add
add
add
add
add
push
mov
xchg
ret
add
jg
mov
mov
clc
repnz
nop
cld
jae
lock
ljmp
repnz
nop
cld
jae
lods
mov
mov
push
mov
add
test
add
in
cmp
mov
push
clc
repnz
nop
cld
jae
push
add
xchg
and
sub
mov
clc
repnz
nop
cld
jae
lods
add
pop
lahf
xor
clc
repnz
nop
cld
jae
add
add
jbe
jl
movsb
push
mov
xchg
ret
add
sub
add
mov
in
push
push
mov
xchg
ret
add
jo
jg
jo
add
icebp
pop
push
push
mov
xchg
ret
add
jno
add
add
outsb
and
mov
nop
leave
jmp
push
add
xor
mov
add
mov
add
in
mov
js
lret
clc
repnz
nop
cld
jae
add
add
jbe
add
add
loop
mov
clc
repnz
nop
cld
jae
push
jne
int3
bound
xchg
push
mov
xchg
ret
das
inc
add
dec
lock
mov
push
mov
nop
leave
jmp
jg
push
les
mov
push
mov
nop
leave
jmp
add
mov
incl
jno
or
add
dec
add
add
add
clc
repnz
nop
cld
jae
imul
xchg
std
push
clc
repnz
nop
cld
jae
bound
sub
push
arpl
out
push
clc
repnz
nop
cld
jae
add
add
add
mov
add
clc
repnz
nop
cld
jae
add
mov
imull
movzwl
clc
repnz
nop
cld
jae
outsl
add
lahf
add
push
mov
nop
leave
jmp
add
pop
int3
inc
add
add
add
repnz
nop
cld
jae
add
or
push
mov
xchg
ret
add
lods
add
push
bound
mov
repnz
nop
cld
jae
add
mov
and
mov
dec
or
add
add
add
add
idiv
mov
sbb
dec
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
push
add
mov
mov
push
mov
xchg
ret
add
movb
jno
mov
clc
repnz
nop
cld
jae
add
jo
mov
subl
push
mov
xchg
ret
sub
add
and
nop
add
andnps
sub
pop
add
add
inc
push
cs
ficoms
pop
mov
clc
repnz
nop
cld
jae
xchg
or
add
clc
repnz
nop
cld
jae
movb
pop
add
push
mov
nop
leave
jmp
add
add
jno
lods
repz
test
repnz
nop
cld
jae
add
jno
dec
clc
repnz
nop
cld
jae
add
dec
add
bound
mov
jmp
nop
cld
jae
lock
jno
add
mov
xchg
ret
lods
add
lods
mov
clc
repnz
nop
cld
jae
jbe
add
add
mov
clc
repnz
nop
cld
jae
dec
add
aad
add
push
mov
xchg
ret
mov
mov
imul
cld
jae
mov
add
add
imul
add
jbe
add
mov
repz
mov
nop
leave
jmp
imul
add
mov
clc
repnz
nop
cld
jae
add
add
add
nop
cld
jae
add
add
negb
inc
clc
repnz
nop
cld
jae
fs
mov
add
push
imul
clc
repnz
nop
cld
jae
add
lds
sub
repnz
repnz
nop
cld
jae
lods
add
jg
clc
repnz
nop
cld
jae
pop
das
jne
add
dec
cmp
push
mov
nop
leave
jmp
inc
add
pop
test
jg
push
mov
nop
leave
jmp
mov
add
add
and
add
clc
repnz
nop
cld
jae
addl
add
jmp
arpl
clc
repnz
nop
cld
jae
jge
orl
add
push
clc
repnz
nop
cld
jae
add
sub
add
sbb
inc
add
jo
add
add
mov
push
call
clc
repnz
nop
cld
jae
add
add
pop
subl
push
mov
xchg
ret
add
jg,pn
add
sub
mov
xchg
ret
sub
add
add
add
lods
pop
push
mov
xchg
ret
bound
push
add
xor
mov
mov
clc
repnz
nop
cld
jae
repnz
add
add
mov
xchg
ret
mov
fs
bound
sub
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
add
das
outsl
mov
mov
add
clc
repnz
nop
cld
jae
add
push
fimuls
call
add
imul
push
pop
add
in
jb
clc
repnz
nop
cld
jae
sub
add
repnz
nop
cld
jae
sldt
das
lods
lods
dec
mov
push
mov
xchg
ret
add
add
add
add
out
push
clc
repnz
nop
cld
jae
dec
pop
add
add
cmc
add
add
clc
repnz
nop
cld
jae
lock
mov
push
mov
add
add
add
cmpsb
and
add
nop
cld
jae
repnz
add
add
das
adc
mov
call
clc
repnz
nop
cld
jae
jnp
push
in
hlt
lret
push
mov
add
cmpsb
jl
add
xor
mov
mov
jl
sbb
mov
nop
leave
jmp
add
jno
cmc
or
nop
nop
cld
jae
jnp
add
pop
jno
push
push
mov
xchg
ret
push
jbe
jno
add
pop
pop
add
clc
repnz
nop
cld
jae
jnp
dec
add
iret
xor
push
mov
nop
leave
jmp
or
add
add
dec
cmp
repnz
nop
cld
jae
pop
add
add
add
mov
pop
clc
repnz
nop
cld
jae
add
sbb
add
stc
and
push
mov
nop
leave
jmp
lds
cs
add
inc
mov
popa
loop
clc
repnz
nop
cld
jae
lods
das
outsl
pop
mov
clc
repnz
nop
cld
jae
in
jmp
sbb
in
push
add
add
ds
push
mov
xchg
ret
jbe
add
sub
aad
push
add
clc
repnz
nop
cld
jae
add
roll
mov
insb
inc
jb
clc
repnz
nop
cld
jae
add
add
push
arpl
push
mov
nop
leave
jmp
push
imul
jecxz
and
push
mov
xchg
ret
pop
movb
add
add
rolb
mov
sbb
cmp
in
nop
leave
jmp
or
mov
dec
add
repnz
nop
cld
jae
add
bound
add
push
push
mov
nop
leave
jmp
add
add
jne
add
add
push
mov
nop
leave
jmp
lds
add
add
add
leave
push
mov
nop
leave
jmp
add
dec
sub
mull
add
ret
clc
repnz
nop
cld
jae
jge
in
add
jo
movswl
push
mov
nop
leave
jmp
add
add
add
rorl
add
sub
push
pop
add
add
mov
pop
push
mov
xchg
ret
push
xchg
add
xchg
pop
lea
push
mov
nop
leave
jmp
outsl
add
add
clc
repnz
nop
cld
jae
imul
push
clc
pushl
push
mov
xchg
ret
add
add
add
mov
push
mov
xchg
ret
out
dec
fs
sbb
mov
mov
xchg
ret
jbe
dec
add
add
add
clc
repnz
nop
cld
jae
add
testl
out
jne
push
mov
nop
leave
jmp
add
jno
inc
cmp
clc
repnz
nop
cld
jae
int3
add
mov
xor
add
clc
repnz
nop
cld
jae
add
sub
push
sub
in
nop
leave
jmp
add
fbld
popf
shl
clc
repnz
nop
cld
jae
add
add
cs
mov
repnz
nop
cld
jae
mov
test
add
nop
nop
cld
jae
int3
add
add
xbegin
jae
add
sub
push
fs
daa
ret
mov
repnz
nop
cld
jae
lods
jbe
xchg
sbb
jo
mov
push
mov
nop
leave
jmp
jno
push
dec
mov
mov
xchg
ret
addl
imul
std
mov
push
mov
nop
leave
jmp
lock
test
add
mov
xchg
ret
add
add
sbb
mov
cmc
in
mov
jne
add
mov
add
add
clc
repnz
nop
cld
jae
jno
add
add
push
push
mov
xchg
ret
das
out
add
inc
add
lods
out
je
clc
repnz
nop
cld
jae
add
jne
add
mov
sbb
test
clc
repnz
nop
cld
jae
mov
push
mov
shll
add
xchg
add
add
xchg
nop
nop
cld
jae
jge
add
jbe
inc
add
mov
clc
repnz
nop
cld
jae
mov
add
ss
nop
leave
jmp
dec
add
jno
jnp
push
rolb
xchg
mov
push
mov
xchg
ret
add
pop
add
push
add
nop
nop
cld
jae
add
pop
jbe
mov
xor
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
testl
jne
clc
repnz
nop
cld
jae
mov
pushl
push
mov
nop
leave
jmp
dec
sti
add
sub
mov
xchg
ret
add
add
add
lods
sub
test
clc
repnz
nop
cld
jae
dec
out
and
add
add
clc
repnz
nop
cld
jae
add
sbb
mov
nop
leave
jmp
sbb
int3
add
add
jge
add
add
mov
xchg
ret
add
add
cs
sub
jmp
decl
mov
mov
add
pop
cmc
add
out
popa
clc
repnz
nop
cld
jae
add
imul
xchg
rcrl
push
mov
xchg
ret
add
repnz
add
push
clc
repnz
nop
cld
jae
fs
sub
add
mov
rep
clc
repnz
nop
cld
jae
add
sldt
fbld
loopne
mov
adc
xor
push
mov
xchg
ret
pop
add
push
int3
jnp
add
add
clc
repnz
nop
cld
jae
add
das
sti
add
lcall
add
repnz
nop
cld
jae
add
call
clc
repnz
nop
cld
jae
sbb
add
movsb
mov
jle
push
mov
nop
leave
jmp
add
add
mov
rolb
mov
stc
push
push
mov
nop
leave
jmp
jno
add
mov
popa
add
repnz
nop
cld
jae
imull
lds
jp
leave
push
mov
xchg
ret
add
lock
add
cli
mov
push
mov
nop
leave
jmp
bound
add
repnz
nop
cld
jae
add
filds
jo
and
mov
hlt
hlt
mov
sub
clc
repnz
nop
cld
jae
mov
add
lret
push
mov
nop
leave
jmp
add
addl
mov
clc
repnz
nop
cld
jae
das
add
xchg
push
mov
xchg
ret
add
sbb
add
test
ret
add
adc
inc
add
add
mov
add
clc
repnz
nop
cld
jae
push
outsl
jb
mov
je
clc
repnz
nop
cld
jae
add
add
xor
add
clc
repnz
nop
cld
jae
jnp
add
mov
mov
or
repnz
nop
cld
jae
add
add
inc
add
add
clc
repnz
nop
cld
jae
add
pop
push
clc
repnz
nop
cld
jae
sub
pop
jne
add
add
nop
nop
cld
jae
add
add
mov
mov
push
mov
nop
leave
jmp
sti
jg
add
add
daa
test
inc
sub
repnz
nop
cld
jae
and
in
add
sarl
jmp
add
mov
add
cmpsb
mov
jae
add
add
bound
lock
add
clc
repnz
nop
cld
jae
add
mov
xchg
nop
nop
cld
jae
add
in
jno
add
lods
mov
clc
repnz
nop
cld
jae
cs
jmp
push
lock
mov
add
dec
inc
add
nop
nop
cld
jae
jo
add
add
mov
inc
lods
sub
add
add
add
mov
das
je
clc
repnz
nop
cld
jae
mov
dec
adc
enter
xchg
ret
pop
jg
jbe
jg
pop
pop
push
mov
xchg
ret
add
or
neg
sub
mov
clc
repnz
nop
cld
jae
jnp
lahf
pop
push
mov
xchg
ret
addl
jge
mov
ret
jmp
add
bound
cs
add
add
pop
filds
mov
mov
xchg
ret
add
outsl
ss
adc
push
push
mov
nop
leave
jmp
add
mov
add
repnz
nop
cld
jae
movb
js
sar
nop
nop
cld
jae
lds
add
add
loop
mov
stc
clc
repnz
nop
cld
jae
add
add
mov
das
mov
clc
repnz
nop
cld
jae
fs
add
mov
es
repnz
nop
cld
jae
add
sub
add
rclb
mov
inc
add
add
push
add
dec
push
clc
repnz
nop
cld
jae
lldt
add
sub
repz
mov
nop
leave
jmp
add
out
add
add
mov
mov
dec
and
push
mov
xchg
ret
xor
add
mov
add
sbb
inc
add
add
bound
out
jno
pop
push
clc
repnz
nop
cld
jae
add
add
das
add
xchg
addb
xor
pusha
clc
repnz
nop
cld
jae
add
add
add
jnp
push
clc
repnz
nop
cld
jae
and
jne
int3
das
add
nop
cld
jae
pop
jno
pop
push
jbe
mov
push
mov
nop
leave
jmp
add
add
jne
add
pushl
push
mov
nop
leave
jmp
pop
mov
add
clc
repnz
nop
cld
jae
add
jge
add
pop
add
xor
push
mov
xchg
ret
imul
mov
jle
push
mov
xchg
ret
sub
add
add
daa
and
fstl
repnz
nop
cld
jae
add
dec
add
jne
clc
repnz
nop
cld
jae
int3
add
add
add
repnz
nop
cld
jae
add
add
repnz
lds
cld
jae
add
lds
cmpw
push
mov
nop
leave
jmp
outsl
add
jo
stos
mov
clc
repnz
nop
cld
jae
mov
div
in
and
clc
repnz
nop
cld
jae
add
int3
add
dec
push
mov
enter
add
add
add
call
andl
nop
leave
jmp
add
mov
test
mov
nop
leave
jmp
pop
sti
add
jnp
push
mov
xchg
ret
add
repnz
add
mov
clc
repnz
nop
cld
jae
lock
lock
repnz
nop
cld
jae
imul
nop
add
dec
push
push
mov
xchg
ret
add
add
jnp
add
pop
popa
clc
repnz
nop
cld
jae
add
add
and
jno
add
cmp
clc
repnz
nop
cld
jae
outsl
sldt
imul
dec
lock
add
add
int3
add
xchg
clc
repnz
nop
cld
jae
add
imul
ret
repnz
nop
cld
jae
add
add
push
mov
adc
nop
nop
cld
jae
sub
outsl
sub
jl
clc
repnz
nop
cld
jae
mov
jno
mov
mov
push
mov
xchg
ret
subl
inc
add
jle
repz
mov
xchg
ret
add
add
add
add
enter
add
add
repnz
nop
cld
jae
push
add
push
mov
nop
leave
jmp
jnp
jne
add
add
sub
clc
repnz
nop
cld
jae
sub
divl
inc
int3
add
rcll
clc
repnz
nop
cld
jae
add
add
fldl
nop
nop
cld
jae
jo
add
outsl
cmp
mov
nop
leave
jmp
mov
add
xchg
inc
sbb
mov
repnz
nop
cld
jae
dec
mov
mov
mov
xchg
ret
sti
sub
sub
add
add
lret
mov
clc
repnz
nop
cld
jae
add
bound
add
lock
in
nop
leave
jmp
add
add
jno
push
push
call
add
push
test
add
addl
test
inc
sbb
mov
push
push
mov
xchg
ret
add
add
add
add
push
mov
xchg
ret
add
lds
clc
repnz
nop
cld
jae
mov
add
add
mov
clc
repnz
nop
cld
jae
jbe
mov
mov
in
nop
leave
jmp
add
sub
and
testl
push
mov
nop
leave
jmp
add
mov
aam
clc
repnz
nop
cld
jae
add
add
lret
mov
push
mov
nop
leave
jmp
mov
add
add
add
add
hlt
fiadds
jge
lret
push
mov
add
mov
lds
add
pusha
inc
add
add
add
add
mov
nop
leave
jmp
add
mov
sbb
inc
test
outsl
loopne
mov
xchg
ret
dec
bound
sub
add
push
mov
xchg
ret
inc
add
add
cs
add
add
push
mov
nop
leave
jmp
das
add
add
add
add
in
nop
leave
jmp
int3
add
dec
mov
js
repnz
nop
cld
jae
das
out
sti
add
lods
pusha
clc
repnz
nop
cld
jae
movb
sub
jl
rcll
cli
inc
add
sub
and
cld
xor
clc
repnz
nop
cld
jae
repnz
movb
cs
lods
push
mov
xchg
ret
add
add
add
add
mov
add
clc
repnz
nop
cld
jae
sti
jo
filds
add
mov
jae
mov
nop
leave
jmp
add
filds
dec
xor
nop
nop
cld
jae
or
add
jne
clc
repnz
nop
cld
jae
jne
add
nop
cld
jae
das
lods
sub
repnz
add
mov
add
push
mov
xchg
ret
sti
add
add
lods
jbe
mov
nop
nop
cld
jae
add
add
push
adc
clc
repnz
nop
cld
jae
push
inc
sub
mov
loop
clc
repnz
nop
cld
jae
push
add
add
xchg
repnz
nop
cld
jae
pop
sub
jns
int
pop
jae
repnz
nop
cld
jae
push
mov
nop
nop
cld
jae
jnp
add
dec
add
push
mov
inc
add
xchg
sbb
xor
xchg
sbb
push
push
mov
xchg
ret
push
add
mov
add
cmp
test
clc
repnz
nop
cld
jae
add
add
call
push
mov
nop
leave
jmp
add
add
add
mov
add
clc
repnz
nop
cld
jae
or
jae
mov
repnz
nop
cld
jae
add
mov
pop
clc
repnz
nop
cld
jae
imul
add
in
clc
repnz
nop
cld
jae
mov
decb
nop
cld
jae
jbe
int3
out
add
add
pusha
clc
repnz
nop
cld
jae
add
fs
add
dec
imul
cs
nop
nop
cld
jae
mov
lret
push
mov
nop
leave
jmp
repnz
pop
mov
push
push
mov
xchg
ret
pop
jo
add
mov
and
mov
xchg
ret
add
add
fbld
push
mov
xchg
ret
filds
lods
add
add
lcall
ret
in
das
add
sub
add
clc
repnz
nop
cld
jae
add
movb
out
mov
xlat
call
in
nop
leave
jmp
add
mov
idiv
sub
xor
xchg
add
mov
add
repz
cmpsb
out
test
mov
aas
cmp
add
sbb
shll
add
dec
mov
mov
add
add
shll
pop
jl
dec
stos
sbb
cmp
cs
in
fs
roll
sbb
out
iret
dec
jo
mov
mov
ret
mov
imul
loop
mov
mov
dec
adc
cs
mov
add
cmp
pop
sbb
adc
arpl
and
xchg
add
mov
mov
enter
sbb
es
mov
pop
repz
mov
and
mov
leave
pop
adc
mov
popa
inc
shl
sub
test
out
pop
in
or
fs
jmp
jle
sbb
adc
aas
popa
ret
insb
jno
cmpsl
or
fstps
push
xchg
ret
mov
add
adc
add
jg
add
cld
push
fmuls
add
test
add
loopne
mov
sti
cld
jle
mov
mov
dec
push
rolb
mov
xor
add
jge
add
mov
lds
adc
mov
add
jbe
add
cmp
imul
in
add
loopne
mov
mov
cmpsb
pop
xchg
add
mov
adc
cmp
nop
add
divb
add
je
add
mov
mov
mov
mov
cmpl
and
into
xor
lahf
mulps
test
mov
insb
cltd
add
cmc
sbb
daa
xor
pushf
cld
xchg
adc
mov
adc
jno
push
dec
inc
add
mov
cmpsl
push
pop
call
add
aaa
stc
jae
out
pcmpeqb
jnp
loope,pn
add
sub
inc
add
jle
add
mov
mov
jnp
add
nop
add
dec
pop
movsb
xor
mov
sbb
addb
cmp
popf
fistpll
add
mov
or
sub
dec
push
loop
mov
sti
insb
xchg
add
dec
das
in
into
and
sahf
sbb
add
mov
xor
mov
lahf
call
outsb
cs
mov
or
lock
cli
pushf
cmpsb
xor
movsl
pop
movsb
outsb
xor
add
add
rolb
mov
add
shll
es
jae
push
and
mov
mov
clc
je
faddl
xchg
xchg
mov
je
xchg
fs
mov
pop
negl
mov
cmc
xor
mov
mov
cs
stos
push
divl
mov
stc
xor
loopne
mov
jl
aad
add
and
aam
add
inc
mov
add
cmp
add
jge
imul
mov
cmp
addb
iret
imul
mov
and
mov
add
lret
mov
xchg
divb
js
std
xor
int3
rolb
dec
and
mov
and
add
mov
movsl
enter
repnz
push
sbb
scas
fsubs
cmp
insb
mov
popf
add
push
in
ss
inc
inc
addb
jo
mov
movsb
dec
testb
aas
push
mov
loop
mov
shl
sahf
inc
xchg
add
mov
dec
jns
add
call
ret
movl
jae
inc
iret
jmp
adc
cld
mov
cmp
sbb
xchg
jbe
xor
pop
xchg
and
mov
leave
mov
jp
imul
sbbl
jl
xchg
stos
imul
mov
mov
mov
jg
test
fdiv
xor
lahf
and
pop
inc
jns
test
and
mov
push
adc
movsl
sbb
pushf
fcomip
add
inc
add
sub
mov
add
adc
mov
add
xchg
loopne
mov
mov
dec
lcall
ret
movsb
add
mov
es
popf
out
adc
add
mov
mov
idivb
ret
inc
jg
inc
pop
pop
bound
mov
into
mov
add
test
repnz
xchg
imul
addb
mov
mov
mov
mov
mov
xadd
mov
xor
mov
mov
add
mov
mov
mov
std
inc
xchg
mov
enter
int3
xor
mov
inc
dec
sbb
add
inc
xor
mov
and
mov
fsts
pop
pop
jns
mov
or
add
cmpl
add
add
add
mov
es
sub
mov
shrl
push
push
add
int
xchg
dec
jmp
rolb
mov
mov
pop
arpl
out
pop
xchg
imul
out
xchg
data16
shl
mov
add
fsubp
sub
icebp
mov
mov
add
pop
das
imul
icebp
rolb
mov
outsl
pop
cmpsb
mov
into
test
mov
mov
enter
and
jbe
daa
out
xchg
lods
loopne
mov
cli
and
mov
shr
fs
ljmp
mov
xchg
ror
and
add
sbbl
mov
add
push
mov
mov
les
repnz
sbb
jmp
and
mov
adc
push
push
mov
stos
mov
mov
and
iret
mov
mov
add
pop
mov
lret
add
xor
mov
add
lock
imul
adc
std
lea
add
test
add
add
and
insl
and
hlt
push
mov
mov
push
test
adc
fstps
push
test
jne
insl
imul
mov
cld
add
add
jmp
mov
movsb
push
add
add
adc
scas
lret
mov
dec
or
add
sbb
jo
mov
mov
loope
mov
lock
add
fisttpl
into
in
fcompl
ror
cli
dec
dec
daa
pop
iret
cmp
addl
cli
add
xchg
xor
je
popa
int3
rolb
mov
pop
lea
xchg
add
push
call
gs
outsb
jle
lcall
mov
aas
mov
call
add
mov
add
add
dec
aad
fmull
pop
cld
out
mov
jmp
testb
mov
mov
dec
push
bound
mov
adc
mov
mov
add
add
pop
insl
insb
mov
xor
xor
mov
fmul
ret
xchg
add
pushf
add
ljmp
add
je
add
mov
add
mov
sub
into
push
add
or
mov
sbb
addb
mov
push
mov
cmp
sbb
imul
repz
das
jno
mov
mov
xchg
add
mov
push
call
mov
and
sub
mov
xchg
sarl
dec
pop
xchg
inc
add
add
testb
repz
cld
loope
xor
add
mov
push
jb
mov
arpl
mov
or
jp
gs
jl
cmp
test
jecxz
add
das
adc
inc
icebp
mov
sub
push
xchg
rolb
pop
mov
add
xlat
repz
mov
lock
add
xlat
inc
add
xchg
jbe
outsl
pop
addr16
loop
mov
idivl
xorl
xchg
lret
pop
adc
mov
pop
sti
out
pushf
sti
fsubrs
add
daa
or
jbe
mov
mov
mov
int
popf
imul
iret
pop
les
or
add
mov
loopne
mov
pop
push
fldenv
mov
add
mov
pop
mov
enter
out
addb
imul
add
cmpsl
jno
cmp
mov
fildll
cld
add
mov
xor
jno
add
cs
add
push
xor
mov
inc
jge
cltd
das
sbb
insb
pushf
loopne
mov
mov
pop
and
mov
mov
xchg
lock
inc
add
mov
sbb
add
imul
or
fldl2t
cmc
pusha
add
lods
addb
mov
jg
xor
sub
sbb
mov
pop
or
sbb
pushl
add
mov
inc
out
add
push
mov
add
hlt
jle
daa
inc
inc
ds
dec
adc
int3
rolb
scas
mov
lahf
pop
mov
sbb
loop
mov
mov
lods
push
es
add
repz
add
je
ds
bound
mov
add
dec
imulb
js
rolb
mov
add
je
mov
mov
repnz
lods
sbb
mov
dec
stos
pop
mov
mov
sti
clc
jmp
popf
lock
add
mov
and
mov
add
add
add
jno
cld
or
cmp
or
push
lock
jl
add
inc
add
adc
gs
add
mov
mov
imul
sbb
push
fmull
inc
test
mov
mov
and
into
xchg
iret
jg
mull
mov
call
add
cmp
clc
jmp
xor
push
jecxz
xor
xor
jmp
idivl
jae
xchg
popf
rolb
mov
add
mov
mov
or
add
mov
jmp
or
add
mov
and
mov
lds
mov
mov
push
xchg
andl
or
inc
pop
mov
rolb
fstpl
jl
stos
add
and
mov
add
pop
adc
mov
mov
jne
cmp
jae
imull
push
jno
cmp
jge
add
cmp
cmp
mov
call
adc
mov
mov
jle
out
pushf
rcl
or
add
mov
dec
enter
lods
jg
add
mov
pop
mov
mov
daa
push
fistpl
rolb
mov
mov
mov
cmpsb
mov
lock
insb
push
dec
mov
jmp
xor
mov
inc
add
or
add
inc
ret
xor
add
fmull
rolb
mov
cmc
cmp
inc
test
sub
test
add
sbb
jnp
add
mov
lcall
iret
pusha
add
insl
xor
cld
mov
dec
mov
cmp
jno
aas
mov
mov
and
dec
stos
cmp
xchg
pusha
add
popa
test
sub
aas
rolb
mov
test
add
add
aaa
ds
lcall
repz
enter
mov
mov
add
jb
mov
dec
pusha
add
adc
test
inc
test
lock
add
push
pusha
add
movsb
add
addb
dec
jae
adc
add
hlt
fiadds
test
add
add
pusha
add
xchg
gs
imul
sub
mov
fcmovb
add
mov
out
add
add
sbb
add
inc
call
xlat
cmp
mov
add
cltd
mov
inc
add
mov
inc
je
mov
xchg
push
add
pop
xchg
sub
add
add
js
sti
fs
push
repnz
mov
adc
loopne
mov
lock
mov
es
std
out
dec
addb
sti
push
push
lret
ljmp
lret
gs
movl
pushf
je
outsb
jae
pop
fstl
mov
icebp
popf
test
dec
mov
add
mov
add
fcomp
and
mov
ss
xor
mov
js
je
jg
test
cmp
stos
pop
fcmovb
add
dec
and
mov
mov
imul
fsub
into
pop
or
aam
mov
add
dec
nop
add
pop
jmp
loop
mov
xchg
add
sub
rolb
mov
lcall
dec
lahf
aad
dec
sub
rcrl
lods
test
add
or
ret
rolb
insl
addb
addb
mov
or
or
push
sub
mov
xchg
add
enter
shll
add
mov
push
add
mov
test
jnp
sub
fdiv
add
mov
inc
pop
and
mov
add
push
out
iret
fsubs
fistl
xor
push
mov
rcll
cmp
stos
adc
mov
add
dec
jmp
cmpsb
in
jno
sti
pop
cmp
mov
lea
and
mov
ljmp
out
lods
loope
mov
xor
sub
lcall
xor
mov
jg
cmp
add
push
fldl
mov
fisubl
add
add
sbb
xchg
mov
add
mov
inc
lret
insb
adcl
fwait
iret
out
sbb
or
arpl
push
enter
movsb
mov
test
xor
mov
jbe
or
xor
mov
data16
mov
lock
xor
mov
and
dec
stos
dec
adc
mov
cltd
mov
add
or
or
jle
mov
das
add
popa
cmc
and
mov
decb
out
push
add
js
in
iret
sti
loopne
mov
adc
jns
add
rcll
cld
nop
add
test
lret
mov
arpl
push
rcrl
xchg
or
les
mov
cmp
add
cwtl
xchg
sbb
fmul
sbb
xlat
movb
jnp
mov
mov
cmp
add
aaa
mov
addr16
js
lods
push
or
mov
lods
jg
sbb
fbstp
notb
mov
xchg
add
rolb
pop
push
cli
mov
pop
jmp
xchg
mulb
pop
xchg
insb
test
stc
orl
xor
mov
cmc
mov
xor
cld
add
add
pop
xor
add
mov
add
mov
jne
xchg
inc
lret
mov
ds
iret
into
pop
add
in
and
mov
dec
push
add
mov
bound
mov
aaa
les
mov
and
add
jae
add
shll
mov
iret
rolb
bound
mov
pop
fidivrs
jnp
push
add
outsl
cmp
sbb
out
push
add
and
mov
ljmp
in
pop
scas
outsl
and
adc
cmp
popa
dec
jle
add
mov
lcall
pop
and
jns
and
add
mov
test
mov
jle
out
fwait
add
mov
jnp
add
mov
mov
jmp
mov
cmp
add
int3
int3
xor
mov
mov
add
pop
xchg
pusha
add
sbb
add
sbb
jle
add
add
add
mov
push
push
sbb
fstpl
add
enter
add
adc
mov
lods
lea
aam
lahf
mov
push
stc
mov
loopne
mov
add
test
mov
sub
icebp
in
mov
xor
cmp
and
fsubrp
out
jnp
sub
popf
inc
add
mov
push
rolb
mov
add
jp
xchg
jl
scas
pushf
dec
xchg
mov
sar
aaa
mov
jp
and
mov
push
jle
loope
ret
daa
or
add
mov
fdivl
add
mov
xor
dec
jecxz
push
bound
mov
lock
stos
xor
mov
mov
push
inc
xchg
xchg
adcl
into
mov
mov
jmp
jl
add
arpl
mov
pop
or
mov
cld
xchg
add
mov
les
pop
mov
jle
sbb
mov
cwtl
ds
push
add
pop
or
in
inc
add
add
add
data16
loopne
mov
cmp
ficoml
rcrl
enter
sbb
lds
add
cmp
and
lret
add
popf
fimuls
outsb
ja
inc
add
and
pop
outsb
clc
mov
mov
mov
xchg
sti
jae
addr16
mov
lcall
push
testb
mov
pop
pop
jl
jns
loopne
mov
xor
scas
shrl
scas
in
jns
jp
lahf
ja
xchg
mov
sbb
mov
in
scas
inc
add
add
add
addb
sbb
sbb
stos
mov
mov
imul
fdivl
jno
loopne
mov
fs
add
jmp
push
and
mov
lods
inc
cld
cmpsl
popf
jae
dec
loopne
mov
adc
mov
je
push
pop
lcall
add
lret
add
sub
jl
dec
sub
ret
push
add
cs
push
decb
push
int
pop
inc
stc
in
add
mov
gs
addr16
mov
pusha
add
repnz
outsb
inc
mov
adc
cmp
and
mov
add
arpl
mov
pop
or
add
movsl
push
add
test
mov
jle
push
sub
pushl
dec
rolb
mov
mov
scas
sub
cmp
fmuls
mov
xchg
adc
add
xor
add
jb
mov
pusha
add
jnp
scas
sbb
fidivrl
test
push
jp
xchg
ret
and
mov
inc
mov
jp
and
mov
jnp
insb
adc
jo
mov
push
icebp
rdtsc
loopne
mov
sbb
or
mov
dec
cmp
mov
mov
add
mov
inc
addb
mov
mov
pop
insb
pop
inc
add
mov
jge
mov
loope
sub
scas
loopne
mov
pop
movsb
jg
cltd
clc
mov
fmuls
fs
sub
xchg
mov
pop
sbb
divb
mov
jns
add
mov
add
mov
mov
pop
pop
jbe
xor
mov
push
add
test
add
cmp
arpl
xchg
pusha
add
mov
add
repnz
push
out
inc
gs
mov
pushf
in
sub
sub
sbb
insl
ljmp
inc
enter
pushf
adc
or
insl
pusha
add
pop
mov
mov
jmp
mov
cmpsl
push
add
cmp
mov
dec
in
adc
dec
cmc
negl
add
mov
xor
mov
pop
lds
js
add
fcmovbe
aam
mov
into
aad
out
or
adc
add
adc
mov
stos
mov
inc
arpl
cmc
inc
in
lock
cltd
addb
sahf
and
xchg
pop
pushf
insl
enter
pusha
add
test
push
fcomi
dec
mov
cmp
cmp
das
or
and
shrl
mov
mov
inc
mov
pop
hlt
mov
push
mov
ret
mov
pop
shl
pop
fidivl
add
sbb
xor
mov
cmp
ljmp
fimull
aad
mov
mov
mov
and
mov
add
jo
mov
add
mov
mov
ljmp
cmpsb
ds
add
sbb
jne
negb
dec
leave
mov
sbb
mov
add
fcomip
add
mov
xchg
repnz
jg
add
enter
sahf
or
nop
add
xlat
addb
mov
add
stos
dec
or
push
push
cmp
add
and
mov
fmuls
sti
dec
add
jne
outsl
xchg
add
iret
shr
mov
mov
insl
pop
pop
adc
mov
lcall
sub
add
cmpsl
mov
mov
or
add
inc
popa
and
mov
roll
adc
add
je
popf
shl
mov
mov
cmp
pop
or
push
aaa
push
xchg
ds
imul
or
rorl
mov
out
dec
add
mov
sbb
sarl
dec
dec
aad
int3
sbb
insl
cmpsl
stc
push
dec
sbb
inc
fstl
mov
add
lahf
xor
testb
add
int3
sub
jp
cmpsb
pop
pop
jg
xchg
imul
push
dec
and
cmp
rolb
pop
sub
mov
repz
mov
and
addr16
fmull
push
loop
mov
mov
xor
add
sbb
push
scas
dec
cmp
mov
mov
mov
and
add
jp
into
iret
insl
scas
data16
jp
rcrl
inc
add
insb
repnz
jmp
mov
mov
pop
push
stos
rolb
pop
stc
rolb
imul
add
movsb
ljmp
mov
push
lods
in
aas
lods
and
mov
sub
lds
pop
insb
sbb
jns
push
add
mov
js
mov
mov
dec
mov
mov
mov
add
or
test
jb,pn
mov
mov
add
cmp
addr16
add
jne
pop
push
sub
xchg
push
mov
pop
mov
add
sbb
mov
mov
hlt
in
lock
scas
cmp
int
xchg
add
addb
insb
mov
mov
stc
xchg
add
mov
mov
dec
adc
mov
jmp
pop
into
cmp
cmp
sbb
mov
lock
add
add
popa
int3
in
cmp
scas
gs
add
adc
mov
mov
mov
out
jg
les
add
mov
addb
sahf
jl
cmpsl
xchg
add
adc
mov
xchg
out
adc
mov
mov
and
mov
repz
add
punpcklbw
mov
test
in
mov
int
popf
pop
xor
cli
iret
mov
mov
repnz
dec
add
out
fcmovne
add
setl
add
leave
stos
divl
add
mov
pop
insl
mov
add
and
xchg
pop
lods
xchg
add
xlat
inc
std
sbb
ficomps
lret
adc
mov
sahf
dec
imul
add
mov
xchg
fmul
fwait
jle
negb
push
gs
imul
out
sub
mov
and
mov
xorl
repnz
add
mov
xor
in
repz
mov
aaa
and
push
adc
inc
insl
lds
pusha
add
push
notb
xlat
call
add
add
mov
jecxz
add
lret
jl
xchg
jbe
inc
popa
and
add
rolb
mov
pop
leave
loopne,pn
mov
add
add
adc
mov
fsubrs
sub
add
nop
add
daa
repnz
add
cmpsl
je
and
mov
jge
jmp
pop
mov
scas
xchg
or
cmp
sahf
or
push
add
pop
pop
pushf
repz
xor
mov
dec
cmpsl
jmp
add
mov
lret
jb
mov
imul
add
ret
int
add
add
mov
lret
into
jl
inc
xor
mov
and
rcll
ss
mov
mov
xchg
sbb
test
dec
jmp
aas
dec
add
mov
in
lds
in
ret
push
push
fsubs
mov
mov
cmp
inc
cmc
and
mov
notb
mov
add
out
dec
addb
or
inc
add
dec
addl
in
es
mov
enter
xchg
add
jnp
add
lret
dec
stos
mov
mov
add
bound
mov
data16
ss
mov
mov
adc
mov
cmc
pop
jmp
dec
paddsw
jno
js
and
mov
xor
data16
mov
inc
mov
add
mul
add
mov
shrl
fdivs
mov
add
jmp
fs
mov
sbb
cwtl
pop
inc
jg
sub
sub
mov
inc
push
or
sbb
add
sbb
xchg
call
mov
xchg
ret
mov
lahf
inc
add
cmp
rolb
mov
add
mov
mov
dec
and
mov
decl
push
mov
mov
fwait
jbe
and
mov
add
into
mov
mov
jl
xor
mov
mov
mov
add
pop
adc
add
mov
fistpl
out
add
inc
adc
push
add
out
add
dec
cli
repnz
push
sbb
mov
ss
add
lcall
jae
or
mov
push
lcall
ss
jne
adc
mov
loop
mov
mov
lods
ss
leave
popf
push
xchg
add
addr16
add
add
jle
pop
mov
xchg
mov
add
xchg
lahf
inc
mov
test
in
out
add
imul
mov
mov
pop
mov
add
mov
add
fs
jmp
nop
add
add
adc
mov
ds
push
cmpsl
add
sbb
std
jae
das
mov
sub
add
inc
and
mov
xor
fistpll
add
mov
add
std
dec
cld
jge
add
mov
or
mov
mov
mov
cmpsb
fwait
pushf
sub
mov
add
add
dec
mov
repnz
lods
sbb
bound
mov
insl
cld
add
mov
in
add
jns
or
add
xchg
mov
jg
std
xadd
loope
cs
xchg
or
mov
inc
xlat
enter
mov
push
aam
mov
loopne
mov
inc
loopne
mov
mov
addb
inc
gs
inc
mov
mov
add
cmp
test
sub
cld
inc
push
add
cmp
aad
sub
pop
insl
jle
sub
adc
add
push
mov
movsb
pop
pop
pop
test
add
adc
push
sbb
lret
mov
pushf
sub
ret
mov
mov
sbb
stos
adc
mov
xor
mov
jecxz
bound
mov
mov
adc
mov
data16
mov
out
adc
mov
mov
mov
addr16
fldl
fbstp
dec
and
mov
mov
mov
and
mov
add
add
sub
jp
pop
scas
adc
call
lea
addb
mov
inc
inc
das
loop
mov
testl
int3
xchg
jae
jnp
add
mov
xor
mov
mov
pop
push
nop
add
push
ljmp
add
add
iret
cmp
add
call
addr16
ss
jmp
and
jb
mov
jle
jnp
push
mulb
add
imul
mov
add
outsb
stos
inc
xchg
sbb
mov
mov
dec
test
jg
sbb
add
mov
sub
xor
mov
cmp
add
dec
jecxz
add
and
and
push
sti
sbb
add
pop
adc
mov
push
rolb
mov
addb
and
mov
imul
mov
dec
testl
push
cmp
rolb
mov
add
and
mov
cltd
push
xchg
das
and
push
add
add
dec
mov
xchg
mov
into
dec
imul
add
mov
jae
or
icebp
addb
adc
iret
outsb
inc
sbb
cltd
dec
test
push
lods
cli
lret
mov
add
popa
call
fwait
mov
mov
movsb
cmp
movsb
jbe
mov
sub
push
add
cld
lods
in
rolb
mov
add
jecxz
pusha
add
lock
arpl
pop
sub
pop
adc
add
std
iret
jle
xchg
inc
and
mov
jne
outsl
fadds
mov
rolb
mov
aam
loope
adc
mov
imul
adc
out
lret
jmp
push
mov
loopne
mov
xchg
fadds
add
mov
add
mov
mov
adc
sti
cmp
adc
es
imul
cs
fsubs
xchg
inc
push
fs
sbb
and
enter
lock
add
loopne
mov
add
mov
mov
fidivrl
icebp
push
and
mov
jbe
das
fs
in
repz
add
sbb
add
mov
xchg
xchg
enter
negb
in
xchg
sbb
setns
in
mov
mov
pop
fisubrl
dec
scas
ljmp
es
dec
sub
mov
cmp
popa
inc
xor
insl
jne
pop
sbb
roll
ret
xchg
cmp
add
inc
add
push
jge
add
ret
xchg
punpckhwd
mov
add
lods
icebp
xorl
mov
jns
fadds
sbb
hlt
jns
out
mov
and
mov
push
repz
test
jno
add
rolb
stc
enter
mov
aaa
ds
iret
in
add
mov
popf
test
jg
jp
mov
jnp
and
mov
dec
out
mull
mov
inc
ja
pop
dec
int
jmp
or
rolb
mov
dec
pop
pop
mov
enter
jge
out
fdivrp
jge
call
test
jmp
mov
xchg
add
or
outsb
aaa
push
ss
add
fwait
sub
push
dec
mov
add
mov
add
test
ja
push
add
iret
addr16
lds
mov
pop
insl
add
add
mov
test
xchg
mov
pop
cmpsb
sbb
or
add
cltd
ficoml
inc
xchg
pop
in
or
mov
aas
loopne
mov
fnstenv
sahf
push
adc
sti
xor
mov
add
xor
cmp
xchg
xchg
xchg
mov
sub
add
mov
sub
cmp
add
dec
testl
xor
adc
mov
ds
jno
rolb
mov
mov
add
leave
scas
cmp
mov
mov
mov
std
cmpl
sub
test
enter
mov
jecxz
cwtl
or
xchg
sbb
xor
mov
add
nop
add
and
js
add
fdivrs
ja
jno
loope
ret
arpl
add
mov
sub
ss
stos
mov
mov
mov
jge
out
or
ret
mov
aaa
push
cmp
xlat
pop
push
push
cli
sub
add
loop
mov
add
clc
mov
daa
jnp
mov
pop
pop
xchg
sbb
xchg
push
add
adc
mov
jb
mov
jnp
and
mov
cwtl
pop
pop
icebp
cmp
add
xchg
insl
je
add
sbb
ljmp
insb
stc
arpl
add
cmp
or
add
inc
xchg
popa
inc
add
add
int3
ret
int
cmp
js
icebp
cmp
sub
fucomi
shll
add
cmp
fsubl
inc
arpl
mov
mov
dec
addb
cld
and
shrl
out
sbb
mov
or
cmp
imul
jne
adc
cmp
xor
daa
mov
pop
loopne
mov
in
jae
jmp
mov
ljmp
add
ss
add
mov
add
pop
push
mov
pushf
inc
fsubrs
jne
or
rcll
add
mov
inc
add
xor
mov
fdivs
pop
xlat
push
arpl
rolb
mov
mov
sbb
cld
cmpsb
mov
mov
fidivrs
nop
add
dec
dec
ss
sbb
scas
ret
inc
add
pop
imul
sbb
add
add
stos
jle
movsl
rcrl
and
mov
add
cmc
loopne
mov
nop
add
or
mov
loope
add
rolb
or
mov
and
loopne
mov
mov
inc
add
mov
pop
call
cmp
or
lcall
faddl
addb
scas
xchg
push
hlt
jb
mov
add
mov
arpl
sub
mov
add
adc
mov
out
dec
dec
or
push
jl
sbb
mov
add
mov
lods
mov
aas
mov
mov
aaa
iret
sti
lds
mov
je
or
push
aam
js
cld
and
test
fistps
test
rolb
mov
adc
push
fcomp
adc
mov
loope
idiv
out
cmp
inc
in
fdivs
rolb
dec
jnp
xchg
iret
imul
insl
sbb
pop
movsb
pop
dec
outsb
push
shll
fwait
leave
imul
cli
push
sbb
xor
mov
jae
jle
add
jge
add
mov
popf
push
cltd
mov
mov
insl
cli
les
dec
and
scas
sbb
jne
mov
cmpsb
lret
mov
jae
adcl
mov
jnp
imul
mov
in
repz
xor
mov
add
add
cld
push
pushf
repz
jnp
inc
xchg
fldcw
pop
repz
pop
xor
mov
inc
fprem
loop
mov
fs
cmc
push
movl
add
and
fsubs
jl
aad
cmpsl
sub
lcall
lods
sbb
nop
add
popa
and
test
push
lock
jp
cmp
int3
push
hlt
sbb
mov
adc
jne
ja
sar
clc
in
pop
fs
rolb
mov
bndldx
xchg
ret
mov
das
mov
adc
iret
push
adc
repz
push
adc
dec
sbb
mov
mov
and
mov
add
loope
cmp
jno
cmp
mov
inc
outsb
int
jp
jmp
je
add
and
mov
cwtl
cmp
cmc
dec
jbe
or
jl
mov
rolb
mov
add
add
sub
mov
out
imul
mov
add
add
mov
pop
add
mov
in
sti
cltd
cmp
add
shl
ja
mov
xchg
ss
rcll
mov
add
mov
mov
loop
mov
test
sbb
fstpl
ret
mov
push
fistpl
jae
andl
mov
jl
in
jg
dec
out
add
mov
push
in
cmp
and
mov
mov
mov
fisubs
mov
testl
and
mov
mov
addr16
fsts
fidivrs
mov
scas
loope
dec
out
mov
scas
sub
jne
add
int3
push
xchg
lcall
xchg
add
ud2
pop
rolb
push
push
repz
adc
dec
mov
cli
xchg
xor
push
dec
insl
mov
jmp
sub
add
dec
push
add
mov
mov
lds
in
xchg
push
inc
xor
mov
add
test
insb
jecxz
out
xchg
pop
dec
sbb
test
mov
idiv
in
call
sbb
bound
mov
inc
lcall
mov
dec
in
in
xor
push
jle
add
add
push
mov
add
stc
jmp
pop
int3
pusha
add
outsl
test
mov
out
jg
jae
sub
roll
add
scas
imul
sub
lods
mov
mov
arpl
add
adc
in
and
lret
mov
add
out
mov
pusha
add
dec
outsb
push
in
xlat
cmpsb
dec
scas
jnp
dec
incl
jns
rolb
mov
pop
pop
hlt
jne
add
mov
mov
push
rolb
mov
add
and
fimull
add
aam
inc
add
insl
sbb
lock
xchg
push
add
sahf
jl
sub
mov
mov
jecxz
push
sub
push
outsb
jno
pop
dec
sub
cmp
fs
lcall
dec
sti
pop
rolb
mov
pop
sub
jnp
pusha
add
mov
out
mov
push
add
xchg
int3
xchg
xchg
data16
int
add
mov
addb
sbb
mov
add
jge
jo
mov
mov
cmpsl
das
fstpt
mov
mov
ret
hlt
adc
xchg
fnstcw
fs
xor
mov
adc
mov
mov
xchg
ficoml
insl
pop
xorl
in
adc
mov
fbld
bound
mov
add
lcall
cli
scas
and
mov
pop
xchg
out
test
mov
mov
nop
add
jo
mov
sub
loope
fnstsw
inc
add
add
mov
gs
push
xor
and
fld
daa
pop
scas
mov
out
in
stos
icebp
mov
rorl
pop
xchg
add
jmp
add
push
sub
dec
push
inc
add
lds
add
mov
stc
cmp
test
cmc
fbld
sbb
roll
cmp
inc
add
dec
fadds
fnstcw
fsubs
xchg
scas
dec
adc
mov
push
jbe,pt
add
insl
mov
mov
pop
mov
jl
lahf
xorl
mov
add
add
mov
mov
inc
or
inc
fsubs
mov
pop
inc
cmp
add
mov
pusha
add
adc
out
xor
mov
mov
shrl
popa
je
add
sbb
int
rolb
mov
mov
fwait
rolb
mov
push
add
popa
lods
lock
add
adc
add
xor
or
insl
or
mov
push
add
in
add
fsts
mov
pop
mov
mov
pusha
add
push
add
mov
push
fwait
les
popa
sub
cmp
inc
out
aam
test
mov
sub
sub
cmpsb
nop
add
in
xchg
adc
popf
dec
adc
mov
rolb
sarl
mov
cvtdq2ps
mov
pushf
div
dec
neg
mov
pop
jl
mov
aas
stos
add
dec
push
lock
xchg
inc
scas
cmpsb
pop
pop
pop
rolb
mov
add
lods
dec
addb
das
dec
movsl
jae
repz
mov
and
mov
xchg
iret
rol
adc
leave
loope
add
mov
lahf
cmpsl
rolb
cld
cwtl
dec
repnz
mov
mov
into
dec
sti
mov
divl
mov
push
pusha
add
sbb
dec
add
iret
or
or
aam
cmp
pushf
xchg
pop
mov
add
mov
mov
add
mov
pop
xlat
fbld
sbb
in
jae
xchg
pop
mov
out
fisttps
and
inc
add
scas
xor
test
sub
or
call
adc
gs
jns
mov
fcoml
add
dec
scas
ret
ja
aaa
pop
cmp
cmp
enter
cltd
mov
fld
dec
hlt
mov
syscall
inc
add
rolb
mov
les
push
dec
fwait
push
popa
sub
jle
rcll
cwtl
aad
imul
out
or
fdivrs
jmp
pop
out
mov
fdivs
adc
mov
loop
mov
mov
aad
add
fmulp
mov
mov
add
cmp
mov
bound
mov
pop
push
mov
sub
rcrl
jae
out
stc
stos
test
addb
dec
push
add
mov
mov
inc
add
and
sbb
inc
dec
cmc
shl
dec
sbb
add
add
add
fiadds
add
leave
jno
mov
add
js
mov
add
jecxz
repz
mov
dec
or
mov
cmp
add
fistpl
mov
mov
sbb
mov
add
cltd
rolb
ja
xchg
popf
mov
cwtl
stc
xor
sbb
test
inc
and
mov
sub
and
ficompl
add
sbb
push
aad
jmp
add
dec
mov
mov
pusha
add
js
mov
pop
test
xchg
mov
mov
mov
mov
add
pop
and
mov
add
iret
les
scas
aad
sub
push
and
add
jle
add
xchg
loop
mov
mov
negl
inc
popf
int
pop
and
imul
in
les
inc
add
cmp
mov
mov
test
adc
mov
fcomp
jl
xor
adc
mov
lcall
pop
cltd
lret
cmpsl
test
mov
popf
and
lds
adc
mov
add
lock
xor
fcmovnu
cltd
adc
mov
xor
mov
cmp
pusha
add
movsl
add
movsb
adc
dec
aas
pop
xchg
add
dec
xchg
add
out
sub
dec
add
cmp
add
ss
adc
sub
add
lahf
mov
cmp
pop
adcl
fstcw
push
add
mov
xor
mov
inc
pop
sbb
jno
jmp
int3
popf
les
cmp
push
addl
nop
add
mov
lock
xor
mov
push
mov
imul
fwait
xor
into
js
add
mov
mov
mov
mov
add
add
mov
dec
xor
xlat
mov
in
or
or
dec
jne
nop
add
jg
xlat
jg
sub
inc
cmp
lea
ja
mov
add
bound
mov
mov
add
sub
pop
lea
outsb
mov
js
dec
mov
fs
pop
and
test
inc
scas
js
xorl
rorl
sahf
jle
jno
popf
cli
inc
jle
stos
jmp
pop
fisubl
xchg
add
mov
or
sbb
lret
aam
mov
pop
pop
jbe
xchg
pusha
add
mov
jno
fidivrs
sbb
mov
push
push
push
xchg
je
add
inc
in
add
mov
and
idivb
add
mov
mov
add
mov
or
add
out
popa
lods
push
rcl
dec
cmp
jne
sbb
mov
dec
mov
fistpll
pop
jne
add
fwait
data16
out
pop
loope
add
push
rolb
mov
xor
lcall
jle
add
aam
pop
es
add
mov
add
mov
lods
test
xchg
repz
adc
and
mov
push
add
mov
mov
mov
stc
inc
test
nop
add
mov
mov
add
popf
dec
cli
mov
adc
rorl
iret
dec
lcall
repz
cmp
cwtl
cmp
lcall
mov
add
dec
sahf
aaa
push
adc
mov
sahf
and
lret
mov
mov
mov
in
xchg
push
add
pop
mov
mov
xchg
popa
add
scas
jnp
jo
mov
insb
sub
add
mov
mov
clc
lea
mov
dec
mov
adcl
mov
add
aam
add
add
and
fcompl
in
test
add
out
sub
mov
add
cmp
jbe
pop
nop
add
mov
mov
add
cmpsb
sahf
mov
stc
aaa
pop
cmp
dec
ja
mov
dec
icebp
xchg
stc
pop
mov
loop
mov
add
add
push
or
sbb
lock
aaa
and
mov
sbbl
sbb
bound
mov
mov
mov
mov
idivb
lret
mov
add
out
insb
fnstenv
out
cmpsl
inc
add
mov
mov
add
push
test
data16
pop
idivb
test
add
jecxz
sbb
push
pop
popa
daa
sub
mov
cmpsb
push
mov
mov
ljmp
mov
pop
xor
ret
outsl
stos
xchg
mov
sub
sub
sub
in
js
add
xor
add
in
fistpll
sub
inc
xchg
sbb
ret
movd
and
mov
mov
add
sbb
pop
bound
mov
jo
mov
repnz
clc
fisubl
add
mov
push
aad
loopne
mov
add
push
loope
push
arpl
sub
and
movsl
push
pop
jle
push
pop
mov
sbb
enter
add
into
orl
push
shrl
mov
mov
mov
cltd
lcall
mov
and
out
add
mov
or
xor
mov
jmp
push
adc
leave
xlat
insl
dec
cmpsl
jbe
movsl
fisubs
add
and
mov
cwtl
or
bound
mov
mov
push
jecxz
pop
mov
pop
jb
mov
loop
mov
add
cmp
sahf
xor
sysenter
xlat
mov
sbb
int
add
add
addr16
xchg
adc
mov
mov
aaa
mov
xchg
add
and
mov
dec
pop
bound
mov
add
mov
add
mov
cmp
rolb
mov
cmp
loop
mov
ja
jg
fidivl
mov
sbb
repnz
mov
add
pop
inc
sub
enter
dec
loop
mov
pop
push
and
les
jno
ret
cmpsl
mov
or
lcall
jge
dec
andl
cmpl
push
xchg
mov
mov
jl
add
add
aam
jbe
lock
xchg
add
outsl
stc
lret
jmp
ds
add
push
enter
add
add
mov
or
xlat
dec
sbb
loop
mov
popf
leave
mov
mov
in
mov
sbb
mov
mov
add
dec
or
out
ljmp
test
jp
ss
mov
arpl
mov
add
js
add
mov
push
xor
out
movl
es
ljmp
xor
popf
call
add
push
sbb
push
pop
lret
or
movsb
or
popf
pop
fldt
out
jmpw
arpl
xchg
loope
cltd
fnsave
add
adc
xchg
test
ret
add
add
mov
mov
add
pop
mov
ficoms
jge
xchg
stos
cwtl
in
mov
add
and
mov
or
mov
insl
push
into
aad
push
insl
xchg
cwtl
pusha
add
add
add
hlt
ret
call
cmp
rolb
fwait
mov
pop
ret
push
scas
or
pop
aam
push
push
jae
add
imul
sub
jb
mov
mov
mov
mov
jbe
jae
add
lcall
nop
add
lea
int3
popf
mov
prefetch
or
int3
hlt
xchg
sub
gs
ret
xor
mov
rolb
mov
jmp
pop
mov
ljmp
sub
mov
add
mov
add
cltd
arpl
cwtl
mov
mov
add
add
mov
loope
mov
cmp
add
mov
xchg
add
add
add
jne
sbb
add
jne
mov
bound
mov
and
mov
add
lods
jle
push
mov
mov
and
mov
mov
or
mov
pop
push
les
add
insb
lock
xor
cmp
jl
loopne
mov
jo
mov
dec
mov
adc
cmp
jp
pop
loope
into
mov
and
mov
jp
mov
aaa
icebp
mov
add
xor
cmp
rolb
test
js
daa
insl
xchg
lds
add
sub
jmp
add
pop
dec
inc
outsl
pop
sbb
jbe
js
push
pushf
fs
leave
lods
jp
sub
mov
outsl
popf
jge
add
add
pop
dec
out
push
xor
popa
fisttpll
mov
mov
mov
sti
mov
mov
pusha
add
adc
dec
scas
sbb
mov
subl
mov
adc
mov
or
cs
aas
and
mov
ret
out
fsubl
mov
add
in
add
push
or
mov
mov
je
pop
jns
add
jle
stos
rolb
mov
mov
mov
and
test
or
mov
out
adc
mov
shrl
add
mov
enter
jecxz
fldl
add
pop
add
ds
sbb
fisttpll
pop
mov
jae
add
jle
jne
push
insb
fbld
xchg
pop
xchg
sbb
xchg
mov
in
push
mov
aad
pusha
add
test
pop
mov
pop
mov
jae
push
pushf
mov
aas
fcmovbe
negl
sbb
ljmp
adc
add
jge
inc
jecxz
dec
popf
xlat
ds
int3
ds
add
add
in
xor
push
scas
stos
out
popf
add
je
in
fdivp
push
ja
xlat
or
int3
mov
push
inc
and
mov
sbb
js
daa
mov
pusha
add
loope
add
mov
jle
pop
dec
scas
pusha
add
fildl
pop
pop
out
pop
es
loop
mov
push
or
cld
popa
mov
shll
out
adc
or
sbbl
ud0
dec
and
popa
scas
pusha
add
cwtl
cltd
mov
add
sub
add
push
arpl
or
add
das
aas
adc
dec
dec
pop
mov
cld
pop
lods
mov
movsl
es
rcrl
ficoms
data16
js
add
ficomps
out
xchg
popa
xchg
fnstcw
add
mov
mov
jns
push
lods
add
pop
cli
in
aad
mov
and
or
cmpsl
leave
pop
mov
mov
or
sub
add
xchg
push
add
bound
mov
xor
add
mov
add
rolb
mov
xor
add
out
push
inc
cmpsl
mov
outsl
out
dec
in
push
repnz
mov
mov
push
pushf
outsl
xchg
and
incb
ficoml
or
and
add
push
test
rolb
mov
pop
cmp
push
add
sbb
mov
daa
inc
push
andl
mov
and
jbe
mov
clc
mov
jmp
mov
mov
pop
push
jbe
adc
mov
add
mov
dec
mov
mov
fsubrs
push
or
dec
add
mov
dec
daa
push
mov
fidivs
aad
scas
inc
xchg
leave
sub
add
mov
sbb
adc
fadds
repz
push
push
lahf
mov
xchg
adc
mov
jl
add
jmp
add
mov
div
cs
mov
addb
fdivp
sbb
sbb
add
insl
in
pop
adc
xchg
dec
ljmp
add
pop
adc
cmp
mov
mov
popa
scas
push
stos
fstpl
add
xchg
mov
popf
das
inc
mov
or
pop
out
lds
mov
jg
add
push
add
ja
add
ljmp
and
xor
cmc
rol
sbb
dec
fcmove
ljmp
cmp
add
or
inc
ficoml
popf
icebp
pop
inc
fcmovnu
mov
ljmp
std
or
test
mov
mov
and
mov
mov
push
or
loope
scas
pop
aam
xchg
dec
pop
xor
jno
push
pop
outsl
cwtl
xchg
and
jnp
stos
mov
call
xchg
int
popa
cltd
sbb
add
mov
add
in
stc
movsb
mov
stc
movsl
push
popf
pushf
fldenv
icebp
das
jbe
xor
mov
pop
std
test
cmpsl
sbb
scas
mov
add
mov
mov
mov
mov
dec
test
add
sahf
dec
fucomi
dec
fcomi
pop
in
sti
lods
ret
add
inc
add
dec
shll
icebp
push
lret
jae
add
fsubs
in
std
jbe
fs
or
pop
mov
rcrl
ds
mov
mov
push
add
std
les
mov
mov
mov
mov
add
sbb
mov
test
pop
push
mov
addl
rolb
cmp
shll
jle
xor
mov
out
add
and
mov
mov
lret
mov
rorl
mov
addb
adc
mov
aaa
xchg
mov
lods
out
push
jnp
xchg
jl
add
jns
gs
xchg
push
pop
mov
mov
data16
push
mov
mov
jg
add
loope
mov
push
divw
add
jno
je
push
inc
and
js
adc
mov
insb
fcoml
jge
dec
pop
mov
loop
mov
add
mov
lods
fsubs
scas
addb
mov
pop
xor
scas
test
xor
iret
push
pop
movsb
cmpsl
cli
mov
lret
cmpsb
inc
add
ficomps
or
adc
loope
mov
jmp
mov
cmc
cld
cmp
bound
mov
addb
xchg
mov
lahf
pusha
add
xchg
inc
dec
pop
push
sbb
sbb
test
pop
sbb
les
mov
imul
lds
sbb
test
std
cmp
push
push
add
jno
add
stos
lock
inc
sbb
inc
add
jae
xchg
cwtl
push
lock
cmc
jo
mov
xor
pop
xor
addr16
and
mov
dec
xor
push
push
add
xor
add
cmp
sub
sub
dec
inc
or
pop
rolb
inc
insb
loope
ret
mov
add
sub
mov
push
subl
adc
push
add
mov
mov
mov
add
cli
xchg
fistps
popa
add
nop
add
xor
push
pop
pop
inc
int3
inc
addl
jae
xchg
inc
add
pop
sbb
fbstp
pop
and
sub
in
dec
sbb
push
add
push
mov
dec
outsl
mov
imul
mov
into
sahf
insb
ret
mov
jmp
loop
mov
shll
int3
xchg
dec
xchg
xor
lea
add
jns
add
cwtl
dec
mov
out
inc
mov
negb
mov
mov
std
jmp
cmpsl
push
add
push
mov
les
in
lret
sub
add
dec
scas
nop
add
mov
mov
sub
cld
xor
bound
mov
mov
mov
mov
or
aaa
test
sub
mov
add
mov
in
stc
int3
xor
add
lret
mov
push
add
cmp
jle
or
add
mov
jg
add
inc
add
mov
mov
mov
scas
xchg
mov
add
mov
add
mov
adc
mov
fcoml
scas
xor
sub
push
inc
pusha
add
pop
jne
inc
and
mov
mov
out
out
testl
add
adc
loope
out
loope
je
addb
lret
and
add
lods
fs
add
sti
mov
mov
sbb
scas
sub
mov
lea
add
adc
icebp
scas
sti
mov
dec
mov
dec
or
sahf
shll
pusha
add
sysexit
sub
sub
in
pushf
pop
xor
es
call
xchg
testb
mov
ss
add
movsl
mov
mov
push
out
pop
sub
jbe
adc
mov
js
mov
add
add
xor
xchg
clc
call
roll
push
push
add
clc
les
add
sbb
inc
pop
xor
out
mov
movsb
in
stc
jnp
push
mov
dec
and
lock
jmp
xchg
fwait
call
dec
fld
mov
mov
mov
add
add
sub
add
mov
mov
dec
pop
xor
cmp
in
into
or
and
push
jl
xchg
cmp
inc
push
push
sbb
mov
mov
js
inc
inc
add
bound
mov
pop
and
mov
mov
ja
in
sahf
pop
leave
mov
adc
mov
push
outsb
push
ret
mov
inc
xor
daa
cld
mov
ss
or
inc
insb
xlat
fwait
mov
mov
mov
fisubrl
stos
xchg
dec
incl
add
add
mov
xor
mov
add
rolb
in
sahf
add
add
sub
add
scas
mov
mov
inc
inc
cmp
push
mov
out
inc
mov
and
movsb
sahf
testl
pop
imul
in
in
call
gs
mov
mov
es
or
mov
add
dec
mov
jmp
aam
lods
push
pushf
mov
mov
dec
push
mov
push
fidivs
add
xor
mov
jae
ds
popf
pop
rolb
mov
mov
leave
pop
ret
sbb
add
mov
fsubrs
lock
jns
mov
jo
mov
push
add
lret
add
insb
cltd
test
add
loopne
mov
jmp
mov
xor
mov
ds
push
pop
jle
ret
dec
cmp
push
std
mov
ror
test
inc
int3
xchg
sbb
int
dec
sub
add
inc
pusha
add
xchg
adc
mov
mov
ret
cmp
fistl
add
test
xchg
sbb
sbb
jmp
xor
cmp
dec
xchg
daa
rolb
mov
mov
inc
rolb
mov
test
fildll
clc
xorl
cmp
mov
mov
jg
daa
jno
pop
pop
out
pop
jmp
push
add
ds
dec
push
add
push
add
int3
and
out
call
ja
add
add
mov
enter
cli
ret
addl
sub
jle
repz
outsl
adc
add
outsl
xchg
movsl
ret
jnp
repnz
jg
fisubrs
add
add
adc
adc
clc
aad
adc
mov
adc
mov
aaa
mov
add
push
and
mov
jmp
sub
adcl
mov
in
and
mov
loopne
mov
jp
add
xor
testb
cwtl
jb
mov
xchg
add
mov
add
or
stos
insl
pop
pop
ljmp
test
and
movsl
fldenv
pop
ljmp
sub
out
xchg
mov
add
jns
mov
adc
mov
sbb
sbb
icebp
fsub
add
sti
test
mov
imul
jg
outsl
out
stc
pop
out
cltd
inc
xchg
xorl
mov
jp
add
std
mov
xor
dec
lret
add
add
decl
and
mov
add
and
scas
add
add
add
mov
jp
outsb
and
mov
add
mov
addr16
add
into
mov
xor
mov
mov
ret
pop
ja
xor
mov
lock
mov
mov
pop
insb
lcall
mov
add
mov
subl
adc
xchg
pop
or
pop
lret
push
pop
in
fst
xor
repz
sahf
xor
add
hlt
push
add
faddl
sti
pusha
add
cmp
mov
pop
in
cmpsl
das
in
mov
adc
add
mov
arpl
stos
dec
cmp
push
bound
mov
rolb
xchg
pop
mov
es
enter
jmp
jns
and
mov
dec
lcall
cmp
dec
mov
imul
cmpsb
clc
test
insl
jecxz
push
test
add
add
pushf
mov
add
mov
jg
sbbl
arpl
add
loopne
mov
mov
push
int3
inc
jle
shll
add
ret
stc
or
xchg
cmp
mov
or
call
xchg
adc
push
fidivs
cmc
lods
mov
hlt
adc
mov
jae
in
inc
jecxz
add
add
cmc
in
insb
in
jg
add
and
mov
aaa
cs
jle
pop
jne
bound
mov
mov
rolb
addb
dec
or
ds
pop
pop
adc
fnstenv
cmp
arpl
fadds
jb
mov
inc
sbb
bound
mov
xor
mov
mov
xor
mov
add
fdivrs
and
xlat
sahf
adc
and
nop
add
xorl
add
adc
mov
ss
movsb
lock
and
cld
loop
mov
pop
lods
inc
add
cli
fldenv
mov
int3
outsb
loope
xchg
add
mov
sarl
lret
aas
dec
mov
add
pop
jle
lret
mov
movsb
add
add
aas
mov
mov
popf
cmpsb
dec
imul
in
cmc
aam
js
pusha
add
in
addr16
inc
mov
jle
enter
mov
mov
mov
int
and
fidivrl
or
pop
xor
je
inc
repz
lds
mov
xchg
xor
mov
popf
ficoms
in
fs
mov
sub
mov
sbb
rorl
add
and
rolb
mov
stc
stc
and
cmp
dec
cwtl
or
cltd
jns
loope
xor
push
inc
aas
in
sbb
out
movsb
ret
adc
fsubl
mov
and
repnz
loope
sbb
mov
jge
jo
mov
cmp
dec
data16
aaa
pushf
xchg
add
jmp
ficomps
es
push
sbb
jp
push
jmp
mov
xchg
lret
sarl
imul
out
sub
add
add
push
dec
mov
add
orl
cwtl
sub
mov
push
xchg
pop
call
ss
iret
pop
add
mov
push
loop
mov
add
jg
lds
jne
test
cwtl
mov
sbb
lds
je
dec
movsb
js
jl
mov
int
fcomps
xchg
rolb
mov
addr16
js
push
cmp
scas
adc
mov
mov
add
sub
mov
lret
sbb
add
sub
sub
mov
mov
lock
dec
and
mov
in
sub
add
xchg
cwtl
and
mov
add
or
add
push
leave
sahf
mov
add
add
in
dec
into
sub
aas
pusha
add
add
jno
xchg
xor
mov
add
pusha
add
mov
mov
int
xchg
mov
gs
push
enter
inc
add
pop
gs
movsb
lods
cmpsb
xchg
add
popf
sbb
mov
add
or
aam
outsl
push
add
jns
add
add
add
mov
outsl
icebp
call
add
cs
call
mov
lret
mov
mov
add
sbb
repz
xor
mov
lds
xchg
frstor
addl
pop
stos
stos
ret
and
mov
ljmp
push
bound
mov
negb
in
dec
ja
sub
outsl
xor
inc
jg
imul
inc
pop
sub
das
imul
mov
add
loope
insb
sarl
fdiv
sub
add
pop
and
das
dec
aas
add
mov
add
mov
mov
lcall
pusha
add
jb
mov
in
insl
push
sahf
roll
test
es
sub
sbb
rolb
cs
aaa
xchg
cs
nop
add
dec
jo
mov
jno
ss
push
push
dec
and
mov
movsb
rolb
mov
mov
imul
imul
inc
pop
inc
add
movsb
dec
subl
mov
repnz
add
add
add
push
imul
repz
ffree
mov
add
das
inc
fstl
jecxz
addb
pop
sbb
jmp
daa
ficoml
xor
mov
mov
addb
sbb
xor
icebp
in
jns
fdiv
push
push
inc
mov
mov
push
cmp
mov
mov
outsl
mov
add
mov
add
push
roll
inc
dec
mov
add
add
iret
cmpsl
neg
push
stc
adc
scas
mov
mov
cmp
xlat
fsub
mov
dec
jbe
arpl
rolb
mov
cmp
sub
add
add
add
dec
lds
dec
lret
sub
ret
sub
mov
lock
fistps
es
mov
push
int3
jp
aam
jmp
addb
aam
fisubl
lock
lods
cmc
and
mov
add
add
mov
fwait
push
adc
adc
stos
mov
xor
pop
jb
mov
push
ret
leave
lods
pslld
mov
jmp
or
mov
add
jecxz
and
mov
cmp
mov
jecxz
and
add
mov
xchg
mov
mov
add
fimuls
clc
and
mov
popf
cs
jp
mov
xor
mov
add
out
xchg
sti
mov
int3
in
mov
adc
scas
mov
mov
mov
ss
test
int3
sahf
dec
push
mov
movsl
aaa
xor
mov
mov
sbbl
outsb
sub
and
jb
mov
add
mov
shr
cmc
fs
fbstp
and
jnp
mov
outsl
or
add
xchg
adc
cmp
fcmovb
aas
popa
inc
add
and
mov
ljmp
out
pop
sub
and
mov
adc
xchg
inc
and
das
sbb
popf
repnz
lcall
xor
mov
lock
mov
jo
mov
and
mov
bound
mov
xchg
add
ja
repnz
inc
call
test
aam
jno
fbstp
repnz
push
jbe
cmc
movsb
lock
inc
add
daa
jne
mov
add
or
xor
add
add
enter
sub
add
outsl
dec
fidivrs
dec
sbb
loop
mov
jmp
mov
insl
inc
cwtl
inc
add
aam
stos
dec
out
adc
add
push
dec
bound
mov
jb
mov
add
mov
test
dec
nop
add
stos
push
sub
push
cwtl
ds
sub
pop
fisubs
xor
mov
add
clc
addr16
add
mov
xchg
pop
pop
mov
add
xor
pop
int3
outsl
mov
pop
add
test
jne
cmp
insb
test
push
loopne
mov
ja
inc
add
in
add
popa
fs
mov
mov
add
in
jge
add
aad
mov
adc
or
cld
sbb
mov
xor
mov
add
mov
insb
int
test
xchg
or
add
jbe
add
mov
lea
cwtl
idiv
push
cmp
xchg
push
mov
or
and
mov
add
mov
add
mov
jle
add
sub
inc
jb
mov
push
sbb
imul
addl
call
mov
pop
push
add
add
sub
add
ds
push
jge
repz
or
add
pop
bound
mov
add
mov
lcall
addb
xchg
aad
ja
arpl
xor
in
cmp
add
xor
mov
orl
add
js
out
decl
mov
call
fs
add
test
ja
or
scas
mov
das
orl
pop
xor
fiadds
mov
add
mov
jae
xlat
dec
das
adc
mov
mov
bt
mov
lock
les
add
mov
adc
bound
mov
lods
fstl
xor
out
add
mov
xor
xchg
scas
inc
mov
add
mov
cld
pop
and
enter
mov
mov
sahf
mov
push
or
add
mov
add
mov
lock
jecxz
jno
addb
rolb
mov
xchg
mov
add
pop
mov
dec
push
shrl
loop
mov
mov
das
sub
pop
stos
lahf
sar
inc
xchg
mov
sub
test
imul
lret
mov
sbb
add
inc
mov
aaa
addr16
loopne
mov
sub
jge
scas
xchg
cltd
push
std
ljmp
mov
add
lahf
adc
mov
add
mov
int3
scas
mov
add
mov
pop
lret
mov
xchg
add
pop
mov
mov
mov
pop
fisttps
and
ret
dec
sti
cmc
pushf
dec
cwtl
mov
jbe
mov
jecxz
jmp
xor
je
jl
cmp
add
mov
push
add
inc
rolb
mov
add
cmp
inc
add
lret
rcrl
mov
mov
push
addb
imul
fcoms
add
mov
imul
mov
push
add
sub
jae
cmp
inc
push
add
lret
mov
mov
add
cmp
add
and
movsb
xor
dec
js
out
cs
in
xor
pop
pop
push
inc
int3
xchg
add
mov
pop
insb
xchg
dec
test
std
outsl
jg
add
and
xchg
daa
push
fwait
in
mov
mov
cltd
mov
ss
int3
adc
cmp
pop
jp
add
lret
jge
in
and
add
mov
aas
xlat
cmpsb
out
jnp
in
xlat
ds
fcompl
popa
je
mov
movd
jnp
adc
cmp
les
add
div
push
ss
dec
xchg
orl
xchg
dec
inc
add
mov
das
cmp
mov
je
aad
jp
jno
add
vpmovmskb
dec
imul
inc
lahf
xor
or
call
mov
mov
add
mov
jb
mov
roll
mov
sub
call
les
add
mov
cmp
stos
outsl
or
fcoms
aam
add
mov
xchg
adc
push
jmp
sub
cmp
add
add
cmpsb
and
out
lcall
mov
call
mov
mov
ljmp
adc
add
outsb
popa
js
push
rolb
or
xchg
add
cmp
jno
popa
nop
add
and
mov
add
cli
je
sbb
add
sti
lds
fiaddl
add
jne
mov
out
jp
mov
enter
inc
je
pop
xchg
stos
std
mov
sbb
fldcw
jb
mov
mov
xchg
add
arpl
out
mov
xor
je
xor
mov
lcall
push
rolb
ret
loop
mov
pop
enter
mulb
xor
sbb
adc
cli
push
into
jb
mov
test
adc
add
je
sbb
add
jmp
mov
add
cmc
adc
jae
add
add
js
mov
add
fidivs
add
mov
mov
push
push
add
jne
ds
iret
adcl
jo
mov
into
pop
movsl
mov
aam
jle
add
jle
add
jp
add
xchg
mov
pop
iret
lods
fstl
and
xor
add
push
push
adc
mov
add
rcrl
jae
mov
icebp
inc
push
inc
lds
out
in
and
data16
gs
jne
adc
mov
outsb
dec
dec
pushf
popf
sub
mov
add
mov
mov
cmc
mov
sub
fnstsw
arpl
stos
lods
sub
add
jns
call
dec
xchg
add
inc
push
popl
jno
stc
mov
jecxz
add
test
cmp
in
sbb
push
add
add
mov
add
mov
mov
add
add
pop
adc
cmp
rol
jl
cmovp
lcall
mov
fistl
jp
cmp
and
mov
inc
sub
xchg
pop
repz
nop
add
adc
addb
cmc
inc
roll
addr16
xchg
ficoms
mov
push
mov
into
pop
out
enter
hlt
xchg
cmp
xor
mov
sarl
scas
mov
popf
outsb
rolb
mov
aas
sbb
les
add
xchg
cmp
in
in
lods
xchg
add
out
add
add
inc
int3
sbb
cltd
xor
mov
icebp
cwtl
sbb
mov
add
addb
mov
mov
mov
in
arpl
in
hlt
sbb
movsb
ds
lret
fdivs
xor
mov
call
add
mov
and
mov
iret
hlt
cmp
add
xor
push
push
stos
sbb
mov
sbb
mov
mov
ret
test
add
lahf
pop
les
icebp
cs
jno
scas
pop
xor
pusha
add
dec
cmp
inc
or
jae
pop
int3
repz
pop
fnstenv
add
lods
out
sub
and
jp
pop
xchg
xchg
ret
jo
mov
jmp
pop
mov
push
mov
mov
jl
xchg
add
mov
inc
push
cltd
or
scas
test
jmp
outsb
cwtl
popf
dec
fcmovnb
add
pushf
and
in
add
rolb
mov
inc
data16
stos
xchg
lcall
into
add
aas
aaa
gs
xchg
rolb
mov
push
les
add
add
mov
add
out
rolb
push
push
pop
mov
xchg
mov
leave
and
int
jmp
ret
iret
jle
ja
mov
mov
add
add
repnz
cltd
jb
mov
mov
add
imul
inc
xor
test
rol
fwait
leave
dec
nop
add
dec
push
add
hlt
addb
insl
cltd
inc
mov
or
push
popa
dec
mov
mov
mov
add
push
sbb
pop
leave
and
bound
mov
mov
add
inc
lret
mov
insb
flds
pop
dec
push
add
add
dec
jle
dec
or
out
add
out
add
dec
mov
add
movsl
cli
loop
mov
sbb
push
sarl
add
add
add
or
cli
mov
mov
imul
push
jl
add
cmp
cmpsb
push
jge
add
pop
push
fildl
and
mov
xor
mov
add
push
jae
inc
sbb
mov
gs
or
imul
add
mov
mov
dec
mov
inc
out
sti
xor
add
cmp
fnsave
pop
xor
cmc
xchg
mov
push
add
xor
mov
add
push
cmp
out
and
add
add
gs
les
add
leave
stos
or
mov
mov
and
jmp
popf
outsb
stos
aaa
pop
call
add
notb
mov
sbb
mov
xor
repnz
mov
clc
cmp
push
mov
int3
popf
lods
xchg
fwait
sbb
leave
insl
mov
repnz
add
sub
insl
sti
cmp
frstor
add
rcll
mov
mov
dec
xor
mov
outsb
lds
add
sub
pop
lret
mov
add
test
add
mov
mov
mov
flds
inc
cmp
xchg
sub
mov
sub
add
pop
and
mov
xchg
add
sub
movsb
nop
add
in
mov
mov
add
adc
mov
push
sub
add
and
mov
mov
add
fdivs
xchg
dec
jne
add
ljmp
pop
xchg
mov
mov
mov
gs
imul
in
popf
iret
xorps
mov
jne
xor
and
adcl
xor
ljmp
xchg
add
add
xor
mov
fmuls
mov
dec
popa
hlt
mov
add
add
pushl
xor
mov
insl
sbb
xor
pop
addb
jle
insb
inc
add
add
loop
mov
add
pop
test
aam
add
push
adc
repnz
add
pop
mov
dec
std
fcmovnb
cmpsl
cmc
xchg
inc
loope
xlat
add
mov
stos
int3
add
mov
mov
add
mov
or
pop
sbb
bound
mov
xchg
push
add
mov
mov
mov
insb
jno,pn
mov
add
fistl
icebp
lret
sub
cmpl
sub
add
pop
push
out
int3
les
pop
jns
jno
jle
xor
js
dec
mov
rolb
mov
stc
lods
dec
and
dec
loope
imul
inc
insb
add
sbb
cltd
cmp
outsl
imul
lret
scas
dec
icebp
mov
or
mov
gs
mov
in
or
roll
sub
pop
out
adc
inc
add
and
mov
cltd
and
jle
jecxz
lods
xchg
xor
mov
imul
cld
mov
into
aas
aad
add
xchg
add
jge
gs
lds
mov
push
add
adc
add
mov
inc
pop
lds
clc
add
pop
push
lods
addr16
mov
xchg
cmpsl
scas
dec
rolb
mov
add
and
mov
mov
mov
push
adc
push
and
add
icebp
loope
jecxz
sbbl
mov
out
stc
sbb
mov
sub
and
mov
lcall
push
fs
fsubrl
dec
sahf
out
js
adc
sub
sub
add
loopne
mov
fwait
push
jno
sbb
add
inc
dec
inc
das
addr16
or
mov
addr16
nop
add
add
mov
add
mov
sub
scas
mov
mov
mov
repz
lock
push
cmc
and
jb
mov
add
cmpsb
daa
adcl
add
add
test
add
or
xchg
mov
mov
fwait
pop
iret
test
jne
divb
lcall
push
int
add
add
addr16
ds
in
xor
mov
add
in
in
pop
scas
xchg
or
hlt
dec
mov
add
mov
dec
shll
xchg
pop
fsubs
add
mov
push
push
add
adc
icebp
shrl
mov
daa
shll
fidivrl
mov
lods
add
ljmp
mov
adc
add
jecxz
jb
mov
add
add
inc
add
add
cmp
push
mov
mov
mov
cmp
cld
addb
daa
inc
dec
mov
add
rolb
mov
loope
jmp
or
xchg
mov
ret
push
adc
mov
test
sub
popf
inc
jl
into
cld
outsl
test
cmp
add
or
add
adc
mov
insl
movsb
dec
adc
aad
pop
xchg
add
push
call
sub
dec
inc
pop
jecxz
jb
mov
pop
dec
jbe
sub
mov
aaa
hlt
rolb
mov
ss
les
dec
cmc
lahf
mov
inc
in
sub
aam
sub
pop
aad
or
insb
add
mov
hlt
pop
mov
adc
mov
lahf
repnz
lods
pop
xor
ljmp
daa
push
dec
and
mov
xor
fadds
dec
rolb
mov
sahf
cmp
mov
add
outsl
fcoms
jle
add
add
adc
jae
jp
icebp
mov
add
cmp
cmc
imul
mov
aam
push
add
std
fistl
icebp
movsb
mov
jg
out
adc
mov
addb
data16
xor
lea
in
imul
test
pop
mov
ficompl
mov
pop
mov
aas
xorl
movb
dec
lcall
add
mov
insb
pop
mov
rolb
mov
sub
dec
int3
adc
aad
pop
loopne
mov
fs
sub
nop
add
mov
xchg
add
add
or
push
add
pop
push
imul
movsb
mov
aad
addb
ficomps
mov
fmull
add
nop
add
xchg
lret
inc
int
mov
add
add
jle
pop
sbb
add
ret
sub
xchg
add
add
xchg
add
dec
add
mov
rolb
mov
xchg
cmc
add
inc
mov
push
add
add
mov
add
mov
add
or
ret
mov
jb
mov
add
out
lret
fistpll
fistpll
insl
push
add
add
dec
in
cwtl
aad
inc
arpl
jl
movsl
aaa
dec
cmpsb
lret
dec
rcll
les
mov
pop
jmp
sbb
les
jmp
push
test
adc
pop
push
cmp
add
mov
testl
mov
ds
xchg
add
sbb
jnp
mov
cmp
add
mov
pop
mov
hlt
cmpsb
mov
mov
push
add
cmp
cs
int3
mov
mov
inc
mov
out
addb
cli
mov
mov
outsl
inc
and
test
add
cs
xor
or
jmp
mov
bound
mov
add
ja
in
xor
popf
jne
add
imul
add
sub
test
sbb
hlt
pop
pop
and
mov
sub
push
lods
ja
sub
xchg
add
dec
cmc
dec
sbb
ja
xor
mov
sbb
add
add
add
fstps
sbb
mov
out
test
add
in
mov
mov
jne
adc
ljmp
adc
mov
mov
sbb
inc
push
jmp
fimull
sub
ficomps
and
push
pop
cmpsb
lret
cmpsb
jmp
add
mov
hlt
iret
mov
pop
dec
popf
pop
stos
ja
xlat
scas
mov
pop
stos
or
jns
addr16
jge
dec
dec
in
add
mov
cmp
add
sti
sar
rorl
mov
shrl
out
ja
dec
push
lods
loope
adc
mov
mov
ljmp
out
xor
push
add
inc
sahf
push
add
cmp
add
mov
mov
sti
stos
inc
mov
pop
incb
add
inc
push
add
or
push
jnp
and
or
or
sub
fsts
enter
cmp
xchg
aam
cli
loopne
mov
rolb
mov
in
adc
ret
leave
lods
adc
xchg
fistps
out
lcall
repnz
lcall
xor
into
jge
jge
movsb
dec
push
add
fisubrs
loope
add
addb
adc
mov
dec
jno
ret
cmpl
cmp
ja
test
jle
add
cmc
aas
rolb
mov
mov
and
xor
ja
movsl
adc
fisttpl
sbb
int3
incb
add
jg
rolb
gs
adc
add
cmc
jno
scas
pop
inc
cmc
movsl
es
jg
add
pop
in
add
jbe
add
lcall
out
cmc
or
stc
adc
mov
test
cli
push
loope
sub
pop
int
loopne
mov
add
push
cmc
imul
scas
inc
in
push
in
lret
icebp
xlat
mov
jo
mov
jae
or
add
jb
mov
js
rolb
mov
xchg
jns
add
push
push
add
out
loopne
mov
adc
mov
cmp
mov
mov
adc
mov
add
sub
test
cmp
clc
xchg
mov
incl
jp
push
inc
inc
jne
and
repnz
mov
loopne
mov
push
add
ret
rcr
ret
hlt
repnz
push
cmp
fs
out
xor
mov
fsubrl
loopne
mov
mov
push
and
mov
dec
movsb
test
inc
out
jmp
add
out
dec
sbb
les
mov
cmc
into
mov
mov
mov
xchg
lea
arpl
outsb
mov
mov
lret
cmpsb
cmpsl
sahf
or
enter
xor
add
cli
lahf
xchg
fisttpl
addb
or
loope
mov
in
adc
mov
add
ret
sub
add
add
movsl
add
pop
lret
push
cmp
add
mov
outsb
insb
dec
xor
mov
mov
mov
mulb
loop
mov
push
testl
mov
mov
sub
mov
cli
and
hlt
stc
cs
lcall
mov
xor
sbb
push
push
add
add
mov
test
add
pop
test
sbb
das
pusha
add
scas
cmp
add
mov
lret
sbb
aad
add
addb
pop
push
lcall
loop
mov
sbb
mov
add
adc
loopne
mov
pushf
mov
testb
sub
ss
imul
mov
ret
movsb
nop
add
or
add
push
xor
mov
addb
aad
xor
mov
aad
into
xchg
add
add
jg
sbb
xor
in
mov
test
add
mov
mov
add
fcmovnbe
mov
add
dec
gs
xchg
stos
aaa
jge
sub
mov
push
icebp
shll
xor
add
cmc
cmp
add
mov
mov
ss
aas
pop
insb
xchg
add
add
pop
in
cmpsl
lds
pop
cs
dec
ja
sbb
ljmp
cwtl
or
test
xorl
loopne
mov
mov
and
mov
rolb
mov
dec
add
mov
add
add
xor
mov
add
test
add
sbb
rcl
and
cmp
jl
jne
jne
bound
mov
xor
or
add
cli
test
into
add
cmp
cmp
add
jmp
pop
push
pushf
pop
data16
mov
lahf
int3
lret
mov
lock
inc
inc
iret
daa
ret
and
movsb
mov
push
push
add
mov
add
nop
add
cmpsl
and
jle
pop
pop
or
nop
add
push
insb
add
mov
xchg
and
add
pop
push
enter
out
out
add
ret
pushf
scas
orl
int
rolb
mov
pushf
and
mov
rolb
or
add
xor
ss
pushl
add
add
adc
add
mov
inc
dec
jno
add
mov
pop
mov
mov
push
sbb
add
add
out
sbb
jns
sub
mov
sub
pop
cmp
pusha
add
mov
pop
repnz
mov
pop
int
push
rolb
mov
les
pop
lret
out
cltd
stos
insl
push
cs
cltd
mov
xlat
add
and
mov
mov
icebp
or
add
mov
out
add
pop
aas
and
sub
aas
xchg
adc
mov
add
cwtl
in
loop
mov
fiadds
call
mov
mov
mov
mov
jl
rolb
mov
jmp
dec
call
adc
jle
add
add
ret
push
add
js
add
xchg
inc
mov
dec
mov
or
and
add
push
loope
cmpl
mov
mov
imul
push
into
jecxz
dec
mov
lret
dec
sbb
jmp
add
mov
inc
jnp
push
cmp
xorl
mov
mov
mov
dec
test
pop
jge
lea
lcall
mov
mov
aad
add
fstl
test
xor
mov
add
jecxz
int
stos
add
fidivrs
sti
sbb
add
test
and
or
data16
aam
add
mov
sbb
add
push
cltd
cmpsb
dec
push
xor
mov
mov
xchg
fstpl
imul
xchg
inc
notl
add
fildl
jle
clc
out
repz
xchg
add
arpl
add
mov
push
add
call
int3
int3
mov
xchg
add
mov
mov
mov
mov
adc
jecxz
push
leave
cmp
mov
ss
dec
jno
sbb
es
js,pn
sarl
cmp
adc
xchg
add
ror
rolb
mov
es
or
or
mov
div
cmp
adc
andl
js
sbb
pop
inc
test
jge
jge
mov
pop
pop
in
push
lret
inc
icebp
mov
jns
cltd
fcoml
insl
pop
insb
mov
fildll
dec
xor
jbe
fdivrs
or
lods
addb
pop
dec
movsb
rolb
mov
sbb
cmp
mov
shl
out
and
imul
jae
hlt
mov
mov
sub
xor
mov
js
pop
mov
sysenter
je
and
mov
dec
adc
mov
push
stos
rolb
mov
mov
jmp
add
jns
pop
adc
mov
mov
and
cmp
inc
add
add
addr16
jo
mov
add
mov
mov
add
sbb
jecxz
fwait
in
dec
push
pushf
pushf
int
cmpsl
add
mov
jo
mov
les
cmp
sbb
push
fidivl
and
jae
loop
mov
aam
stos
stc
lock
mov
mov
dec
mov
jge
and
aas
mov
jecxz
mov
aaa
xor
mov
das
xor
mov
mov
popf
add
add
add
aam
push
add
mov
mov
inc
loop
mov
loopne
mov
fsubrs
fs
cli
loopne
mov
jg
sub
xor
mov
sbb
xchg
xor
add
or
mov
add
sbb
add
cmp
mov
mov
loope
std
mov
mov
pop
out
sub
lret
pop
sahf
test
cltd
jl
ss
repnz
add
bound
mov
sub
xchg
inc
xchg
push
ret
int
popa
test
jg
add
mov
pop
into
cs
addb
mov
inc
add
rolb
mov
call
xor
ret
call
pushf
es
int
scas
addb
and
add
or
lods
leave
popf
inc
inc
pop
std
loope
jae
add
or
mov
les
add
inc
fbstp
ret
scas
xor
mov
mov
addr16
filds
mov
fldl
push
fxch
stc
sbb
sbb
or
mov
mov
movsb
ljmp
ss
add
inc
and
cmpsb
inc
add
push
nop
add
mov
add
sub
lds
out
xor
add
jae
add
jbe
add
sti
cmp
sahf
mov
sub
xchg
testl
mov
mov
mov
out
push
jbe
add
sub
call
arpl
jnp
addb
xor
loop
mov
lret
push
push
or
jno
adc
mov
and
xchg
mov
push
mov
adc
repnz
fistl
sub
xor
mov
sbb
mov
mull
arpl
lds
addb
mov
loope
jle
stos
dec
rcll
mov
add
imul
sbb
mov
nop
add
mov
pusha
add
push
jmp
stos
inc
inc
pusha
add
xchg
mov
mov
cwtl
lods
out
mov
adc
fnstenv
enter
or
loopne
mov
mov
inc
arpl
sbb
xlat
dec
stc
cmp
push
fwait
cld
aaa
popa
sbb
lods
cmp
rolb
mov
mov
fdivrs
xor
jno
fstl
jae
add
repz
sbb
add
add
in
movsb
mov
and
xlat
xchg
nop
add
xchg
repnz
sbb
cmpsl
fadds
mov
rolb
mov
sbb
add
add
xor
push
pop
mov
mov
inc
cmc
and
cmc
xchg
cld
repnz
inc
or
pop
mov
je
hlt
mov
jge
add
sbb
add
aam
dec
xor
aam
add
add
mov
mov
add
rolb
mov
push
pushf
hlt
in
fidivrl
mov
sbb
add
adc
mov
or
test
add
sbb
xor
add
mov
fmul
adc
cs
addb
dec
xlat
push
mov
adc
mov
lods
mov
ret
inc
mov
in
push
push
inc
sub
cld
dec
mov
add
add
mov
rolb
mov
dec
ret
cmp
mov
cwtl
push
mov
jl
jecxz
cmpl
push
imul
push
jg
std
mov
xchg
xor
stc
mov
add
add
out
sarl
dec
pop
mov
test
mov
rolb
mov
imul
add
and
mov
addr16
jbe
lds
add
mov
add
outsb
popf
lea
outsl
cmp
adc
adc
mov
mov
ret
fdivrs
addb
fisubrl
pop
jne
xchg
popa
xchg
add
adc
mov
cmp
int
jl,pn
pop
addb
pop
test
aas
push
popa
cmp
addr16
int3
jge
scas
pop
cwtl
xchg
hlt
ljmp
xchg
mov
add
scas
inc
push
pop
rolb
mov
rolb
mov
pop
mov
prefetch
or
in
pop
jp
jp
add
pop
rcrl
jge
loope
pop
pop
mov
xchg
mov
daa
dec
addr16
add
sub
add
mov
dec
into
adc
mov
add
add
mov
outsb
adc
dec
push
jge
add
add
sub
add
add
test
mov
pop
add
inc
push
cwtl
inc
cwtl
ret
pop
ss
push
adc
mov
push
inc
sub
sub
add
pop
movsb
nop
add
xor
mov
add
mov
sbb
addb
xor
mov
movsb
sbb
jle
lret
mov
call
dec
add
mov
jbe
add
in
nop
add
inc
add
cli
icebp
jg
std
hlt
imul
jne
and
mov
push
add
push
xchg
gs
jbe
mov
sarl
daa
mov
mov
mov
mov
or
cltd
add
mov
add
add
mov
xlat
sub
pushf
dec
loope
mov
xchg
cmp
aas
leave
negb
jns
add
push
mov
mov
add
loop
mov
scas
add
mov
xor
test
mov
push
mov
out
in
push
push
add
iret
int
cmp
dec
inc
add
and
mov
pop
test
sbb
pop
push
pop
mov
addr16
ljmp
cltd
popa
or
xchg
fnsave
out
pop
sar
pop
add
mov
cmp
lods
sub
jae
jmp
fidivl
ljmp
addb
lea
inc
add
and
jae
insb
les
orl
add
lock
mov
rolb
aad
jmp
add
loopne
mov
add
add
push
add
add
loopne
mov
add
fidivrl
adc
mov
or
ja
add
inc
add
add
push
add
movsl
push
or
cmpsl
insl
test
inc
nop
add
aas
sbb
cld
addl
shll
add
pop
xchg
push
add
inc
pop
hlt
shll
loope
dec
mov
in
cmp
dec
jns
mov
mov
je
push
int3
int3
jnp
pop
mov
in
xchg
sub
add
adc
test
add
jmp
fisubrs
add
dec
orl
in
inc
cmp
stc
adc
out
aas
insb
mov
int
pop
inc
pop
xchg
xchg
xor
imul
dec
es
roll
cmp
mov
dec
xlat
leave
or
out
aaa
je
xchg
aad
add
xlat
mov
or
xchg
in
or
ljmp
xchg
cld
inc
add
jns
fsubrs
inc
enter
outsb
inc
test
or
and
sbb
push
xor
mov
je
add
push
stos
or
xor
mov
add
mov
cvtps2pd
inc
aaa
pop
test
mov
insl
dec
dec
arpl
xchg
fadds
popa
shrl
mov
mov
push
xchg
mov
or
into
adc
pop
ljmp
add
ffree
add
and
add
rolb
mov
inc
jmp
ljmp
or
sbb
mov
cmp
mov
cmp
mov
int
pop
or
into
adc
mov
or
mov
gs
outsb
or
cmpsb
pop
xchg
pop
out
push
out
pop
fsubrs
lods
call
lret
mov
inc
out
push
pop
sub
dec
xlat
int3
mov
add
mov
add
bound
mov
mov
add
sub
mov
ja
cli
cmpsb
sub
fwait
scas
cmc
inc
add
inc
clc
pop
xor
mov
test
ja
lock
push
mov
add
mov
ja
rolb
mov
push
add
jle
add
int3
fsubs
daa
dec
vcvtsd2si
int3
jne
imul
cmp
or
xchg
je
push
dec
xchg
cmp
add
add
pop
push
sub
test
xchg
adc
orl
mov
mov
stos
mov
loopne
mov
test
iret
out
stos
sub
xchg
mov
mov
add
mov
and
loope
lcall
xor
fwait
icebp
lcall
lea
push
sub
and
lcall
rolb
mov
mov
add
test
and
xlat
xchg
lahf
sbb
rcrl
int3
rolb
mov
stos
and
out
xchg
add
mov
add
push
rolb
mov
xchg
mov
inc
clc
mov
mov
jp
lcall
sub
pop
mov
lods
fstl
mov
dec
xorl
ljmp
cmpsb
sub
add
dec
sub
inc
les
fmulp
in
scas
push
push
outsb
pop
fcomps
mov
ret
lcall
adc
mov
cmp
lds
add
cs
mov
outsb
mov
jp
loop
mov
sahf
out
and
sbb
or
rolb
mov
jbe
add
addb
push
mov
pusha
add
mov
sti
gs
dec
nop
add
out
push
add
sub
shll
mov
add
rolb
mov
insb
loop
mov
add
out
xor
mov
mov
cmp
xchg
in
push
cmp
sub
add
and
adc
sub
into
aam
call
sbb
push
add
ljmp
lock
sahf
test
hlt
mov
mov
jb
mov
cmc
push
dec
dec
insb
xchg
sar
mov
repz
push
mov
add
xlat
add
mov
lods
fs
cld
fsubr
add
ret
bound
mov
add
add
cmp
mov
jo
mov
ss
inc
mov
testl
mov
add
jae
dec
pop
cmp
das
cmc
pop
fstps
stos
test
pusha
add
rcrl
lock
mov
add
add
mov
mov
addr16
jg
rol
add
mov
xchg
inc
call
add
jo
mov
in
add
addb
pushf
mov
add
ret
xlat
addb
test
lret
or
cld
and
mov
mov
add
xlat
inc
add
mov
jbe
mov
inc
add
pop
das
or
and
mov
cmp
lods
jnp
mov
push
add
imul
cmc
inc
add
fs
movntq
out
add
adc
mov
xor
mov
mov
xchg
ljmp
movsl
inc
das
push
mov
mov
mov
idivb
pop
or
xchg
scas
sub
sub
mov
jae
push
add
loop
mov
std
jp
add
movsl
out
aam
cwtl
and
add
adc
mov
aaa
stos
ret
test
popa
lcall
mov
test
add
add
bound
mov
xchg
and
add
sbb
and
mov
xor
push
sahf
rolb
mov
add
jb
mov
mov
jns
adc
mov
daa
mov
loop
mov
inc
fwait
stos
in
push
je
add
add
fcomi
fwait
jo
mov
dec
sbb
xchg
test
pop
notl
mov
cmovo
mov
push
jecxz
call
fimuls
loop
mov
fstps
or
xchg
add
es
add
pop
mov
cmp
movsb
push
fcompl
es
mov
mov
push
cmp
mov
icebp
cltd
int
js
push
xchg
mov
add
gs
mov
mov
mov
jg
add
mov
jmp
add
mov
or
jp
add
mov
mov
adc
fildll
div
push
jecxz
out
outsl
outsb
and
pushf
sbb
icebp
out
add
mov
fnstsw
xchg
sbb
aam
add
cmp
add
movsb
push
je
jg
in
mov
or
mov
mov
pop
popf
int3
testl
mov
js
popa
inc
jg
mov
mov
add
add
mov
mov
std
dec
mov
mov
nop
add
add
pop
cmp
add
rolb
call
mov
add
add
adc
add
fcoml
pop
lods
inc
mov
clc
in
add
flds
outsb
push
std
mov
mov
jbe
xchg
sub
pusha
add
mov
mov
pop
and
dec
cs
jae
add
outsb
and
std
inc
or
les
xor
mov
inc
add
addb
outsb
out
xchg
jecxz
pop
and
jo
mov
sub
popf
pushf
jle
adc
stos
fistps
mov
in
xor
jns
rolb
or
in
div
add
push
roll
hlt
fdivs
fsubrp
inc
dec
xchg
add
inc
jp
add
adc
mov
jle
cmc
fwait
sbb
fisubrs
mov
sti
lods
xchg
add
sbb
rolb
mov
add
pop
cld
insl
xchg
cld
push
leave
ja
jae
xchg
dec
jo
mov
outsl
sbb
add
mov
cmc
push
inc
and
sbb
xchg
jae
xor
mov
add
inc
and
mov
andl
mov
adc
out
mov
add
xchg
dec
mov
int3
cmp
mov
adc
mov
xchg
ret
jmp
jae
xor
sbb
add
add
mov
push
ljmp
and
mov
rolb
mov
push
shrl
adc
mov
sbb
add
rol
sbb
jo
mov
psubusb
mov
mov
insl
iret
add
mov
add
fstpl
mov
mov
out
ss
in
movb
sarl
xchg
xlat
andl
xchg
jo
mov
lods
stc
stc
xchg
inc
pop
iret
and
aam
cs
mov
pop
mov
push
test
xchg
cmpsb
mov
ljmp
add
test
loop
mov
xor
loope
xlat
icebp
mov
mov
dec
neg
xor
ss
mov
mov
rolb
xchg
pop
or
add
mov
xchg
mov
daa
in
sahf
cld
dec
and
mov
addb
iret
jb
mov
rolb
push
push
add
jbe
out
add
int3
add
pushf
inc
and
mov
add
pop
xlat
rorl
mov
mov
add
inc
cmp
add
and
mov
inc
mov
bound
mov
ja
adc
inc
sbb
or
ret
cmc
ds
push
addr16
sub
dec
pop
push
outsl
xchg
roll
loop,pt
mov
fdivr
je
fdivrp
arpl
mov
mov
jge
add
cld
sbb
dec
adc
jg
lods
lock
ret
push
mov
mov
mull
in
add
lret
shl
std
mov
call
xchg
clc
push
arpl
jp
push
push
add
mov
fdiv
add
add
das
shr
roll
add
cmp
movhps
add
ljmp
loopne
mov
push
leave
aam
test
daa
mov
cs
cmp
mov
mov
out
mov
fwait
sbb
adc
loop
mov
popf
push
add
jmp
push
add
adc
mov
mull
push
sarl
push
and
mov
sti
or
or
add
add
jno
fisubs
xchg
repz
aaa
stc
dec
rolb
mov
lret
sub
add
ret
mov
jecxz
xchg
ds
pushf
popf
sub
mov
mov
dec
pop
adc
mov
add
in
add
in
iret
push
add
loop
mov
and
jae
add
dec
dec
xor
movsl
inc
stc
mov
cmp
cmp
add
fldenv
ficomps
push
add
push
pop
jecxz
xchg
addr16
add
add
test
xor
mov
popa
or
loop
mov
and
mov
mov
jmp
jg
push
std
aas
stc
dec
cwtl
dec
mov
sbb
testb
add
outsl
leave
jns
lea
cmp
fpatan
int3
mov
or
add
scas
aas
inc
mov
jae
fwait
leave
fsubl
add
aad
lods
test
xor
pop
dec
int3
cmc
inc
dec
imul
xchg
test
jne
push
clc
fstpl
lock
sti
push
xchg
add
sub
push
add
loope
sahf
xchg
out
pop
xchg
jb
mov
add
sub
aas
rolb
in
imul
push
push
pop
dec
das
into
mov
add
cltd
loope
and
xor
mov
inc
add
adc
jp
mov
lock
add
add
hlt
test
push
lret
or
imul
int
add
in
xchg
dec
arpl
cmp
mov
stc
mov
cmpsb
fbld
xor
add
aaa
out
or
dec
pop
push
imul
add
sub
sub
jmp
cmc
cmp
adc
inc
jne
add
nop
add
cli
aad
gs
rolb
mov
xchg
and
add
mov
mov
rcrl
mov
outsl
pop
xchg
pop
cmp
out
jmp
movsb
stos
fnstcw
cmc
xchg
jg
dec
xchg
cmp
nop
add
add
sbb
jp
add
push
add
push
sti
addr16
fadds
imul
jg
add
cld
add
and
mov
pop
mov
mov
add
pop
jb
mov
dec
lcall
xor
jne
xor
add
add
inc
in
jg
je
int3
ret
sbb
jns
inc
add
std
repz
adc
mov
test
add
movsb
pop
push
and
mov
add
mov
cwtl
sbb
mov
jecxz
int3
mov
cmp
add
mov
inc
add
pop
xor
mov
test
ret
lret
xor
add
aas
push
lret
cs
out
arpl
loop
mov
add
les
dec
mov
add
xchg
xor
or
push
filds
add
mov
jo
mov
ret
push
cmpsb
cld
fiaddl
mov
jg
iret
cs
repnz
sub
inc
nop
add
mov
add
add
sbb
fldcw
dec
in
add
add
mov
xchg
add
mov
xor
add
mov
ret
mov
mov
iret
jle
jns
dec
std
mov
sbb
inc
and
mov
ss
popf
dec
ds
rolb
mov
cmp
sub
out
jae
ss
loope
inc
sub
cs
fnsave
cmp
stos
sub
inc
sbb
jb
mov
lret
ljmp
lods
dec
xchg
add
add
mov
lods
push
int
and
fcmove
add
loop
mov
icebp
jb
mov
jns
xor
and
imul
int
add
add
add
jo
mov
mov
add
js
add
jmp
jne
xchg
lods
in
rcl
mov
dec
xchg
inc
add
dec
daa
es
jno
xchg
add
add
test
mov
adc
add
push
nop
add
movsb
inc
lret
out
xor
mov
lret
mov
leave
fisubrs
add
add
or
fadds
out
aam
mov
add
fwait
mov
aas
hlt
and
add
add
adc
aam
add
push
in
addr16
imul
mov
mov
mov
fadd
inc
ss
rolb
mov
xchg
or
add
inc
jmp
jns
xchg
add
mov
adc
mov
ficompl
push
xor
mov
mov
fisttpll
pushf
stos
jo
mov
out
xor
fidivl
add
ljmp
jbe
xor
push
ficoml
bound
mov
cmp
cmp
rolb
mov
dec
insl
icebp
stos
inc
pop
or
mov
cmp
mov
mov
push
add
addr16
add
sbb
hlt
cltd
jg
mov
hlt
cmp
cmp
cld
into
fcoml
pushf
roll
mov
arpl
add
jge
cmp
jge
or
push
in
pushf
iret
mov
cmp
add
bound
mov
movsl
sarl
sub
add
push
sub
outsl
xor
dec
jae
mov
mov
mov
mov
add
mov
adc
mov
repz
imul
cltd
add
cli
or
aaa
pop
fiaddl
std
loop
mov
xchg
dec
fcompl
ss
dec
jb
mov
xchg
mov
mov
inc
scas
mov
adc
adc
xor
mov
add
pop
push
jnp
adc
cli
push
jb
mov
add
ret
add
jg
add
add
icebp
inc
push
mov
adc
insl
and
les
mov
call
mov
stc
popa
or
gs
icebp
or
sbb
push
out
test
lods
repz
imul
sarl
add
add
in
fisubrl
cmp
ret
push
adc
loopne
mov
scas
insl
jl
int3
into
mov
adc
inc
pop
lods
enter
je
add
push
pop
clc
xchg
add
inc
add
xchg
mov
rolb
xor
mov
mov
addl
adc
xor
mov
popf
push
xchg
enter
mov
add
pushf
add
cmp
inc
push
dec
xor
mov
fdivrl
add
mov
insl
mov
jle
lock
add
lock
sub
push
xchg
insb
xor
mov
jno
dec
js
mov
rolb
mov
icebp
cmc
cld
pop
mov
out
pop
insl
xor
mov
jle
add
or
lods
xchg
sub
outsl
nop
add
out
add
pop
cld
mov
mov
mov
insb
and
mov
into
xchg
stc
lds
jl
mov
inc
dec
std
cld
xor
mov
test
sbb
add
inc
push
insb
inc
add
cmpsl
jp
lahf
xor
fidivrl
and
pop
arpl
pop
xor
mov
std
mov
push
xor
mov
es
mov
sub
sbb
mov
jo
mov
loopne
mov
rolb
mov
mov
in
pop
push
jns
sahf
fcoml
outsb
ret
loope
lods
test
inc
inc
jp
xor
mov
std
pop
fwait
inc
mov
loope
add
fnstsw
push
add
in
nop
add
jnp
jecxz
push
mov
or
imul
mov
mov
movsb
ljmp
clc
jecxz
ds
sbb
bound
mov
rcr
addb
push
cwtl
cmpsl
clc
sub
movsb
std
xor
mov
pop
push
test
and
mov
inc
addb
cld
sbb
dec
addr16
push
add
add
repnz
mov
xchg
add
das
jge
add
imul
inc
pushf
movl
push
add
add
fs
es
out
mov
mov
mov
pop
outsl
or
push
pop
adc
les
adc
and
mov
add
loop
mov
pop
popf
sub
xor
in
into
push
and
mov
aad
pop
adc
mov
push
jbe
pop
xchg
mov
mov
add
repnz
mov
rolb
aas
repnz
add
fwait
push
loope
stc
lds
jnp
or
sub
and
insb
test
loop
mov
add
or
bound
mov
push
add
pop
pop
pop
testl
cld
outsb
lods
xor
outsb
dec
rolb
mov
lods
mov
ret
addl
loop
mov
cwtl
pushf
daa
fucomip
sub
stos
sbb
adc
add
mov
sbb
das
out
lahf
push
add
rolb
mov
mov
fisubs
stos
js
sub
out
repz
mov
inc
and
cmp
clc
jl
fcmovnu
inc
or
shll
add
jns
inc
dec
or
sbb
sub
lret
cs
push
and
mov
nop
add
clc
dec
jno,pt
addr16
out
sbb
xor
jbe
test
in
pop
push
inc
inc
push
push
dec
xchg
pusha
add
mov
cltd
push
bound
mov
aad
add
sbb
sub
mov
mov
sti
push
ds
push
addr16
mov
stos
dec
shrl
lock
jle
add
inc
add
mov
xor
cmp
mov
mov
lea
scas
add
mov
sub
sbb
push
and
cmpsl
stc
repz
nop
add
add
pop
popa
addb
outsl
jl
add
dec
cmp
push
dec
repz
add
lock
add
addb
jnp
add
and
xchg
xlat
ret
dec
stos
adc
sti
out
fiaddl
dec
adc
in
dec
out
ss
lea
add
push
push
lods
adc
sbb
or
popf
fidivl
add
loope
dec
jo
mov
add
add
ret
xlat
ret
and
add
dec
sbb
add
fisttpll
mov
mov
mov
add
adc
or
add
lds
add
add
mov
inc
movsb
stos
js
pop
xchg
add
adc
mov
push
insb
mov
add
mov
dec
mov
divl
add
mov
add
rolb
mov
add
xchg
add
mov
cmp
push
add
lea
push
cmp
idivl
inc
mov
stos
mov
jns
add
mov
push
push
inc
push
outsl
sub
cmpsl
mov
dec
jno
push
add
add
mov
icebp
mov
sbb
xchg
add
or
dec
push
ljmp
jg
push
fmul
in
jno
jge
insb
inc
add
pusha
add
and
xor
mov
add
fisubs
rcrl
xchg
xchg
jnp
jo
mov
lods
mov
shr
pop
jle
adc
add
push
or
add
mov
lds
xchg
add
mov
xchg
inc
add
adc
imul
mov
movsb
inc
pop
int3
dec
std
pop
insb
sub
xchg
cmp
and
mov
add
lea
dec
test
jns
sub
sub
call
mov
loop
mov
loopne
mov
in
rolb
mov
add
mov
push
out
fcompl
lea
adc
mov
pop
mov
xor
mov
jg
pop
adc
setae
inc
push
pop
pop
mov
jecxz
pop
es
lahf
pop
scas
imul
mov
sbb
rolb
mov
jne
push
stc
mov
out
sbb
movsl
and
call
into
dec
clc
daa
and
pop
xchg
or
mov
lock
fs
loopne
mov
test
adc
add
cmpsb
sub
int
je
push
and
add
add
mov
cli
scas
jl
fxtract
je
clc
or
negb
cmp
mov
mov
push
sbb
mov
lods
testl
mov
add
inc
add
and
ret
add
xlat
xchg
pop
enter
adc
add
fldcw
inc
aaa
sub
