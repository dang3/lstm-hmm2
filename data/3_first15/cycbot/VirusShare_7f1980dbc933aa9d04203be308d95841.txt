cwtl
ror
dec
scas
jecxz
sbb
add
mov
add
add
dec
inc
add
sbb
add
iret
sbb
add
add
pop
add
leave
sbb
add
add
mov
sbb
add
addb
add
scas
mov
mov
add
mov
es
push
cli
data16
sahf
shl
jle
outsb
jp
push
lcall
outsb
mov
insb
push
popa
and
mov
push
add
subl
xchg
xor
or
cmp
pop
insl
cmc
addr16
subl
jo
xchg
xor
pop
xchg
icebp
popa
inc
jnp
sbb
fincstp
bound
inc
pop
dec
cmp
in
arpl
daa
xor
jmp
inc
pop
and
pop
ret
jge
push
push
mov
fsubr
jle
ja
push
pop
stos
call
push
pop
jl
add
push
or
sarb
xor
jp
mov
sbb
inc
loop
clc
push
pop
add
sub
shll
add
add
add
and
add
in
sbb
sbb
loopne
sub
inc
add
sbb
add
add
jle
sbb
add
out
mov
data16
push
ljmp
mov
sti
into
add
add
add
add
sbb
jg
add
push
sub
sub
mov
add
add
and
push
shlb
loope
mov
push
and
sbb
add
cmp
sbb
add
mov
sub
add
pop
xor
add
add
out
test
and
add
std
lods
lcall
add
jo
add
jo
xor
add
add
add
adc
fstps
add
mov
aaa
add
and
adc
movsl
hlt
sbb
add
fs
add
jl
xor
add
out
add
xchg
dec
cmp
add
insb
dec
xor
add
add
add
cltd
jp
xor
lea
add
pop
pop
add
call
add
add
add
clc
and
add
out
leave
add
cmp
adc
xchg
xor
loop
add
xchg
xor
add
mov
insb
scas
lret
add
add
cmp
add
adc
xor
add
addb
jecxz
out
movsb
jb
jl
add
int3
and
add
fdivs
add
add
ret
aas
add
or
cmp
add
jge
rolb
loop
add
clc
std
xor
add
cmp
add
or
add
pop
lret
add
call
ljmp
and
add
out
and
add
lock
add
mov
or
add
add
xchg
and
cmp
add
insb
shll
add
clc
jp
add
test
pop
cmp
add
jl
add
pushf
or
add
sub
jle
add
inc
add
cmp
add
mov
add
fadds
add
add
add
add
mov
add
add
jl
xor
add
sub
add
xchg
lods
cmp
add
insb
dec
cmp
add
jge
add
inc
add
add
pop
cmp
add
add
call
add
add
add
hlt
and
add
outsl
cmp
add
jl
add
mov
or
add
add
xchg
nop
cmp
add
add
enter
cmp
add
jl
add
pushf
add
add
sub
cmp
add
dec
add
inc
add
pop
sub
add
xchg
daa
add
adc
add
mov
xor
add
add
or
add
xchg
cmp
add
insb
mov
jge
add
inc
add
cmp
add
add
call
je
cmp
add
add
and
add
outsl
cmp
add
cld
aas
add
mov
add
addb
add
xchg
daa
cmp
add
add
add
clc
jp
add
test
cmp
add
jle
add
pushf
or
add
sub
daa
add
xor
adc
add
or
add
int3
jl
add
fadds
sbb
add
mov
xor
add
xor
outsb
add
jmp
incl
jmp
pop
pusha
add
add
rolb
in
into
add
ljmp
add
add
lea
mov
fcoms
sub
inc
add
xor
jne
arpl
push
sbb
incl
addb
add
pop
mov
mov
add
loopne
sbb
aaa
mov
nop
push
mov
jp
sbb
pusha
add
inc
cmpsb
xor
cmpl
test
jmp
adc
rolb
mulb
inc
stc
mov
repnz
mov
add
mov
imul
inc
add
gs
movsb
sbb
add
add
aas
ret
jle
inc
add
rorb
loopne
push
adc
xchg
push
mov
add
mov
jne
mov
dec
add
mov
ret
in
adc
inc
add
jb
ret
rorl
outsb
and
std
mov
stos
jmp
aas
stc
xchg
rorl
mov
mov
or
lds
fildll
loopne
js
mov
mov
add
jecxz
aad
cli
std
mov
jnp
sbb
addb
xchg
daa
jns
add
repz
pop
xor
xor
adc
mov
iret
pop
pop
mov
cmp
add
jne
push
mov
cmp
mov
jnp
js
adc
jae
pop
jg
pop
pop
js
fistl
fildll
mov
das
push
ljmp
add
lods
mov
cmp
imul
jne
decb
rorb
mov
stos
sti
add
int3
sub
insb
test
cwtl
outsl
push
mov
repz
addl
add
xchg
shll
and
inc
add
aas
add
insl
pop
jne
push
push
addb
sub
add
not
mov
add
scas
jge
jno
outsl
daa
push
mov
xchg
loopne
dec
inc
add
pop
inc
add
in
in
sarb
dec
pop
xor
insb
cmp
lea
cmp
xor
or
jmp
inc
mov
sbb
add
pop
lahf
or
std
jge
mov
lds
std
ss
into
ja
lds
or
mov
ds
add
out
insb
pop
cmp
test
push
mov
add
inc
add
int3
pop
xchg
test
pop
in
inc
pop
jns
insb
jnp
cmp
add
dec
lds
add
les
adc
mov
shr
pop
xor
mov
and
addb
add
jb
lcall
cmp
popa
xchg
mov
adc
add
push
adc
fwait
test
and
push
add
pop
cmp
dec
les
push
add
cmp
jo
ljmp
mov
dec
sub
addb
or
sub
fisubrl
or
mov
test
push
xor
movsb
lock
xchg
sbb
cmc
mov
mov
pop
outsb
js
pop
hlt
cmp
repz
fsubr
pop
outsb
leave
stc
xor
mov
je
mov
push
push
pop
aas
jmp
add
mov
in
mov
int
rolb
pop
in
xchg
adc
push
xchg
and
jno
xor
push
cli
push
add
imul
jns
sbb
hlt
les
cmp
loope
arpl
pop
out
adc
push
test
js
xchg
sub
incl
pop
ss
dec
cwtl
mov
mov
sub
dec
aas
xlat
scas
push
jmp
jns
inc
dec
mov
jno
push
loope
mov
ss
add
ss
jmp
cmp
adc
add
xchg
pusha
add
addb
repnz
shll
or
push
add
addb
inc
add
xchg
jecxz
dec
cmp
add
addb
jns
in
pop
cld
fisubl
js
inc
add
rep
sarb
pop
sbb
insb
lea
loop
sarl
enter
ret
xlat
cmc
pop
adc
add
hlt
pop
int
pop
mov
icebp
cmp
jns
jns
rclb
lcall
pop
fistpll
addr16
add
xchg
jbe
arpl
mov
push
je
pop
push
jae
or
sbb
add
add
pop
nopl
movb
inc
add
mov
shrl
push
cmpsl
loope
jbe
mov
xchg
mov
xchg
or
mov
sbb
fs
push
push
in
add
cmp
addb
test
mov
push
call
mov
pop
cmp
test
mov
incb
add
in
inc
add
sbb
idiv
lea
add
addl
adc
xor
xor
sbb
enter
addr16
fcomp
xchg
les
lcall
inc
pop
or
jl
imul
dec
xor
add
dec
mov
popf
mov
lea
add
jmp
clc
xchg
lods
and
pop
lcall
jb
add
add
mov
cmp
cmp
imul
jo
add
push
sub
inc
mov
pop
and
into
xor
adcl
je
or
push
mov
pop
pop
outsb
xor
add
je
fdivl
xor
mov
cmp
add
pop
pop
call
jl
add
imul
fsubrp
stos
and
roll
pop
dec
cmp
add
nop
int3
dec
cwtl
pop
movsl
test
imul
call
pop
sub
sbb
adc
stos
inc
add
ret
push
dec
imul
xor
mov
imul
leave
rcl
sbb
out
xor
imul
ja
loope
add
fcoml
les
jl
jnp
pop
jns
push
pop
scas
xor
lods
xchg
gs
lea
push
fcompl
movsl
push
jns
add
fsubrl
add
in
fsubs
add
or
add
mov
test
ret
push
mov
jb
add
aad
orl
push
out
cmc
jns
out
or
push
int3
cmpsl
in
imul
nop
sub
nop
push
repnz
add
mov
add
loop
mov
pushl
data16
fs
or
repz
js
xchg
xchg
lods
mov
les
js
test
mov
pop
or
sbb
call
test
cmp
aam
add
inc
add
outsl
sub
vmulps
mov
add
add
jg
or
add
in
jnp
push
popf
jmp
add
jne,pt
add
mov
shr
cmc
adc
dec
inc
and
insl
cld
fs
or
mov
lea
pop
inc
or
pop
cmp
lds
ja
or
lods
fisubs
in
sub
jne
loop
mov
adc
fdivrs
movsb
ljmp
daa
hlt
popf
addb
and
sub
cwtl
jns
jg
add
aaa
loop
sti
nop
lds
add
jp
pop
mov
aad
repnz
add
cmc
or
mov
inc
add
xor
outsb
rclb
jp
add
mov
pop
pop
lods
xor
sarl
mov
in
movsb
add
add
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
jecxz
sbb
movb
aam
ljmp
add
pop
jno
inc
stc
int
je
inc
add
xchg
dec
aas
ss
mov
sti
cli
push
jb
push
out
mov
push
or
xchg
int
movsb
mov
adc
sbb
dec
sub
outsl
mov
mov
add
sti
rorl
xor
int3
notb
mov
and
mov
and
lret
add
add
or
ss
add
and
arpl
mov
inc
add
cmc
jmp
mov
sbb
pop
test
les
movl
add
pushf
roll
xor
mov
addb
lods
adc
std
fnsave
scas
in
mov
stos
or
ret
icebp
push
jae
adc
add
loop
ss
pop
xor
dec
fidivrl
add
mov
fmuls
inc
add
push
adc
dec
cwtl
nop
dec
movsl
es
nop
daa
adc
add
inc
mov
pop
inc
add
add
push
clc
in
fcoms
fs
fstps
dec
popf
int3
lcall
add
dec
pop
push
pop
sysexit
ss
adc
subl
and
repz
fldt
jg
test
scas
sub
fbstp
xchg
outsb
mov
cmp
scas
push
mov
dec
int3
add
nopl
and
mov
push
daa
mov
lock
ljmp
inc
loopne
leave
movb
scas
xchg
cmpsb
pusha
add
jnp
nop
sbb
enter
cmp
xor
je
inc
ret
pusha
add
pop
inc
add
js
fsubp
popa
cld
xor
push
fcoml
cmp
add
mov
lret
sbb
and
adc
sbb
add
repnz
jl
into
mov
push
pop
movsb
lods
scas
and
push
loop
mov
cmp
stc
adc
stos
ss
add
adc
lret
addb
negl
sbb
int3
push
jmp
dec
xchg
inc
pop
call
inc
add
fcoml
xchg
mov
xor
pop
xlat
sbb
push
movsl
add
cmpsb
hlt
sub
jl
push
imul
dec
jl
add
test
pop
pop
or
mov
fisubs
jns
addr16
pop
and
arpl
jecxz
icebp
push
out
push
jb
hlt
ds
push
int
sbb
movb
add
cld
in
push
lahf
addb
jecxz
clc
or
or
lahf
rolb
cmp
stos
ds
push
rolb
xchg
test
push
xlat
ljmp
add
lods
sahf
or
add
hlt
mov
fistpl
pop
test
nop
mov
jae
push
cmpsb
mov
lret
xor
mov
loope
sbb
cmp
pusha
add
subl
out
push
sbb
pop
outsb
sub
lods
je
test
fldl
fimull
mov
mov
add
lods
fstp
push
mov
dec
add
incl
mov
into
sbb
add
jle
out
push
cmp
pop
mov
inc
mov
pushw
les
adc
addb
or
sbb
add
pop
mov
add
adc
rorl
xchg
pusha
add
push
mov
aaa
jecxz
add
cmpsl
jne
dec
mov
and
leave
add
mov
dec
xchg
aam
inc
addb
jo
addb
movsb
inc
add
push
loop
xor
jl
ret
ret
inc
add
imul
popf
inc
add
cmp
inc
add
add
sti
push
mov
scas
inc
add
jb
or
mov
xchg
add
or
or
std
and
xor
sbb
cwtl
adc
and
scas
shl
adc
pop
sbb
stos
dec
lret
pop
and
jbe
adc
jmp
or
hlt
jb
pop
cmp
add
cmp
sub
push
decb
outsb
pop
inc
add
jmp
in
push
test
daa
add
loopne
dec
jns
dec
out
inc
add
dec
rolb
in
sahf
dec
cmp
in
jne
loop
pop
popa
daa
sbb
adc
mov
int
push
stos
add
mov
cmp
fiaddl
filds
shrl
sbb
dec
jle
in
cmpsl
arpl
mov
cmp
jge
das
or
and
bound
and
cmovo
sub
incb
notl
or
mov
push
add
xchg
xchg
lret
sbb
add
mov
out
add
pop
inc
add
insb
pop
mov
cli
push
je
add
add
sbb
adc
sub
and
sbb
pop
lea
or
test
imul
addb
and
xor
inc
push
int
pop
je
or
push
push
stos
and
xor
lds
fwait
sub
popa
cmp
stos
lds
adc
flds
fwait
rcl
adc
push
and
lock
push
xor
fcomi
idivl
cmp
inc
xchg
bound
and
pop
xchg
ss
mov
push
dec
test
out
lcall
ja
jb
mov
or
mov
add
mov
rcrl
leave
sahf
cmp
loopne,pt
dec
fnstcw
jle
sbb
sbb
lds
std
aaa
add
pusha
add
xor
in
pop
cmc
mov
add
dec
and
sti
in
mov
push
fwait
add
shl
addb
rolb
stc
xlat
mov
outsb
insb
scas
adc
cli
mov
add
int3
jl
jb
daa
loope
iret
jb
ss
shll
add
int3
mov
inc
add
sub
jbe
mov
mov
push
orl
xchg
adc
add
dec
mov
fidivrl
adc
adc
adc
pop
stc
sbb
or
push
call
fcompl
and
pop
je
mov
add
rolb
loopne
add
inc
add
sbb
pop
push
adc
lret
or
pop
fimull
push
and
sarl
je
or
test
adc
xchg
jno
adc
push
cld
or
adc
xchg
xor
cwtl
lods
inc
cmp
add
cmp
pop
in
xor
out
sbb
rolb
add
push
call
jne
fnsave
jns
or
out
nop
daa
add
adc
imul
lea
addb
test
mov
fsubrl
fists
add
add
sub
ficoml
scas
fstp
pop
mov
push
and
sbb
aad
lahf
mov
and
pop
popf
enter
cmc
xchg
clc
mov
add
lahf
cld
rolb
mov
jo
add
aad
out
pop
pop
rol
movb
out
test
scas
stc
mov
pusha
add
dec
fisttpl
lahf
and
add
jmp
adc
cmpsl
add
lahf
jno
cmpsl
and
popf
push
mov
pop
testl
mov
inc
add
mov
into
fisubl
add
or
out
push
add
fwait
pop
leave
sbb
xchg
jg
cmpsb
pop
pop
sub
xchg
push
les
adc
rcrl
fs
scas
addr16
mov
jns
inc
add
sbb
outsb
ja
cmp
fsubrl
ljmp
push
popf
ret
scas
mov
pop
pop
ret
cmp
out
hlt
outsb
cmp
dec
mov
mov
mov
in
sbb
addb
repnz
mov
add
mov
enter
dec
lds
les
or
add
aas
lahf
and
rolb
stos
jp
dec
fs
and
push
jp
enter
aas
mov
xchg
xor
sbb
mov
idiv
test
add
lahf
mov
jl
xor
test
add
cli
mov
add
add
cmp
jge
jo
fistpl
adc
sub
nop
aam
jne
fbld
push
mov
mov
or
add
jmp
or
jp
jl
jae
icebp
lds
push
mov
dec
add
bound
dec
add
push
dec
pop
mov
sub
mov
lds
push
fadds
add
dec
push
add
sbb
out
iret
xchg
xor
dec
imulb
cmp
xchg
pop
push
push
cmp
addb
lods
adc
add
add
cmp
mov
lea
mov
cmc
inc
xchg
negl
jecxz
leave
mov
add
insl
jne
outsb
in
xor
std
rcl
adc
out
fcmovnu
push
sub
add
dec
add
lret
clc
xor
add
xor
inc
pop
sbbl
add
jae
ret
adc
add
push
lret
data16
js
jl
cmp
xor
jl
add
and
jne
adc
test
and
add
push
aas
test
fnstenv
jae
jae
add
mov
fmuls
add
mov
xchg
cmc
movsl
sbb
mov
or
dec
mov
add
fimuls
jecxz
sub
xchg
add
or
ja
idivb
jecxz
cld
int3
in
daa
jmp
add
imul
sub
push
addb
ror
lea
les
cmp
leave
or
add
dec
mov
fmuls
mov
cmp
inc
inc
xchg
jbe
cli
and
dec
mov
xor
clc
adc
sbb
es
mov
jle
and
xchg
imul
adc
jmp
rcll
dec
push
or
lahf
inc
lock
dec
mov
sub
jle
movb
or
add
mov
push
lds
out
notb
lcall
orl
adc
jne
sub
cmp
add
mov
js
adc
enter
push
add
jne
mov
add
movsb
mulb
out
rcr
icebp
add
rcll
test
rcrb
xor
push
mov
sub
les
dec
adc
and
xlat
adc
push
divb
sbb
add
add
outsb
addb
imulb
test
xor
frstor
cmp
push
dec
aas
cmpsl
push
xchg
add
add
fsubrs
out
repz
ret
adc
in
cld
or
stc
jg
movsb
jo
inc
pop
fs
orl
push
and
add
add
push
adc
std
push
xchg
pop
jnp
jo
imul
lea
sbb
push
fldcw
sbb
sub
pop
adc
fnstcw
cmp
adc
nop
and
push
fadds
add
xor
add
xchg
les
in
out
inc
stc
mov
jae
ret
fdivrl
sub
or
divl
add
insl
and
jmp
add
mov
add
subl
fstl
xor
mov
sarl
int3
jl
jp
xor
add
adc
outsb
mov
dec
ds
and
adc
aas
mov
pop
mov
mov
gs
xchg
add
jl
mov
js
andl
mov
push
pop
ja
jg
vmulpd
dec
in
sti
cwtl
clc
cmp
sub
or
fwait
or
jo
and
and
push
push
pop
sub
push
cmp
xor
in
dec
sbb
test
cmc
test
push
xlat
inc
add
mov
icebp
rol
cli
xchg
inc
or
int
jecxz
xchg
xchg
int
adc
cs
insl
outsb
cmp
ja
pop
mov
out
sbb
inc
add
sub
sub
lcall
push
sti
pop
test
mov
rolb
addb
gs
push
mov
aad
push
and
ficoms
and
mov
cmpsl
dec
mov
icebp
xchg
inc
add
movzbl
sub
cmp
inc
add
push
mov
leave
add
test
jne
pusha
add
add
add
jne
aad
xor
jns
push
cmp
out
into
mov
sbb
add
shll
stc
js
lods
test
pusha
add
cmp
add
mov
add
add
dec
xchg
mov
push
push
mov
push
pop
sbb
push
imul
adc
push
or
stos
and
mov
jno
add
movsl
sbb
ds
mov
adc
add
dec
data16
add
mov
mov
bndstx
add
add
xchg
int3
icebp
pusha
add
mov
dec
sub
fninit
mov
pop
jbe
add
adc
shlb
lahf
in
pop
pop
dec
push
pusha
add
loopne
div
mov
cmp
addr16
jno
xchg
inc
add
lcall
arpl
mov
leave
push
add
dec
or
xchg
mov
mov
je
jo
je
ss
sti
dec
or
out
fstps
jmp
stc
sub
rcll
or
cmpsl
xchg
cltd
mov
sarl
rdtsc
data16
in
fisubs
add
les
fidivl
cmc
js
pushf
test
xchg
filds
mov
outsl
shlb
add
ret
ret
add
push
mov
mulb
insl
mov
push
fcoms
add
popf
arpl
movb
xor
mov
add
mov
mov
js
xchg
lret
incl
push
mov
scas
out
jb
jb
push
call
popa
push
les
in
sarl
lahf
movups
xchg
cmpsl
dec
adc
in
jae
out
sbb
lds
jecxz
push
aaa
enter
testl
ljmp
out
xor
mov
inc
add
cmp
sub
jb
pusha
add
add
xor
inc
add
clc
lods
stos
in
pop
mov
ret
add
mov
fwait
out
movsb
imul
sbb
cmp
or
adc
add
add
clc
je
mov
pop
pop
sbb
cmp
add
enter
jb
std
cltd
lahf
rol
add
pop
nop
das
into
jl
movsb
push
lods
arpl
adc
les
cld
int3
ja
jmp
jecxz
add
xchg
xchg
sbb
insl
xor
xor
imul
gs
cmp
outsl
scas
cmp
pop
xchg
or
ljmp
addb
jb
call
add
rclb
lods
push
pop
scas
daa
add
mov
or
icebp
pop
and
ja
inc
mov
in
add
mov
pop
ljmp
adc
mov
sbb
or
flds
add
aam
cmp
jne
cld
stos
aam
sub
and
fnsave
loopne
mov
insb
mov
insl
add
mov
jle
imul
mov
sti
cwtl
icebp
shlb
or
sarl
scas
inc
add
cmp
addl
cs
outsb
xchg
add
and
jnp
test
push
add
divl
idivl
add
mov
bound
frstor
push
sbb
sbb
pop
or
fists
les
mov
sub
add
mov
clc
std
daa
add
pop
mov
fs
add
inc
add
inc
cmpsb
sub
or
ficomps
into
fisttps
mov
dec
inc
add
sbb
jbe
scas
xor
rclb
js
jno
rolb
or
push
stos
sbb
sti
add
aad
fsts
adcl
lods
xchg
mov
mov
test
stos
enter
lahf
cmpsl
fstl
mov
pop
mov
mov
jnp
enter
sub
or
movsl
ficoms
push
clc
int3
mov
xchg
movsb
pop
fistpll
push
arpl
daa
sbb
mov
cmc
fcmovu
push
sub
jge
push
cwtl
push
lds
dec
pop
shll
xlat
mov
enter
cmp
pop
add
mov
pop
push
cmp
inc
add
fiadds
nop
mov
xchg
and
lods
imul
inc
sbb
sbb
cs
cmpsl
das
leave
std
inc
outsb
cli
cmp
inc
add
xor
enter
cmp
cwtl
jo
addr16
pop
mov
andl
rolb
inc
subl
push
mov
fldl
add
xor
lcall
lods
dec
xor
inc
add
mov
pop
mov
sarl
insl
mov
add
push
sub
push
insb
mov
add
jo
repnz
popa
in
sbb
sahf
jle
sbb
add
push
cltd
push
add
sahf
enter
xchg
scas
xor
lcall
mov
data16
pop
repnz
and
dec
push
rolb
or
push
movl
push
enter
test
mov
clc
mov
push
jp
jl
xor
add
rcrb
add
inc
ss
pop
lcall
and
pushf
lcall
add
pop
or
mov
adc
inc
out
xlat
loopne
and
pushf
movsl
aaa
mov
repz
push
incl
or
inc
pop
and
adc
add
test
add
mov
push
inc
add
mov
hlt
ljmp
roll
mov
mov
xor
jns
add
xchg
jbe
js
shrl
jmp
pop
hlt
pop
cmp
out
lods
push
push
jbe
xchg
jmp
adc
outsb
xor
popf
mov
mov
push
je
jge
cmp
push
call
xor
add
xor
or
cmp
out
push
add
adc
add
mov
add
add
or
je
push
jnp
test
les
insb
loopne
rolb
xor
std
pop
mov
xchg
mov
cld
dec
repz
push
sub
push
addb
xchg
jo
cmp
mov
cltd
mov
sub
add
dec
push
lea
call
movl
push
scas
or
hlt
xchg
in
loope
push
mov
xor
pop
fsubrl
mov
out
loop
add
mov
add
sbb
mov
mov
sub
in
push
push
cli
shrb
mov
and
add
fwait
data16
cmp
cmp
insb
sbb
adc
push
push
cli
sub
xchg
cs
adc
fdivrl
imul
dec
cs
push
push
jl
sbb
mov
jl
xor
mov
or
sbbl
sahf
fildl
rdmsr
subl
inc
add
add
inc
aam
dec
mov
sub
add
inc
add
jg
sbb
adc
mov
ds
pop
mov
push
jmp
decl
and
add
adc
push
pop
rcpps
mov
add
clc
addb
push
push
out
ret
xor
jl
test
insb
dec
push
mov
sub
imul
movsb
imul
dec
ret
pop
jge
xor
cmpsb
add
sub
nop
clc
push
cmpsb
mov
movb
decl
xchg
or
clc
negb
lret
and
mov
push
imul
mov
sbb
and
jbe
mov
or
and
inc
stos
test
adc
dec
dec
push
repz
cmp
inc
inc
add
in
xchg
in
out
addb
out
addb
jmp
xor
add
mov
lods
fstpt
jp
aas
popa
movb
xor
or
pop
adc
push
sbb
add
push
or
xorl
testl
ret
fdivl
lods
fwait
push
push
popf
and
pop
pop
jl
imul
neg
in
sbb
movb
lods
gs
test
add
push
testb
dec
mov
in
shll
dec
push
sub
xor
xchg
nop
pop
inc
push
dec
push
fistl
inc
and
ss
xor
rclb
std
xchg
sub
lds
sub
add
jnp
fs
cmc
adcl
add
xor
popf
pop
mov
inc
add
add
jmp
jmp
jge
stos
insb
lods
daa
int3
cld
enter
test
dec
stc
lahf
sti
into
insl
adc
arpl
pop
and
xor
or
xor
xor
add
add
or
rcr
or
pop
inc
push
add
lea
std
inc
int3
xchg
sahf
add
mov
lds
xchg
test
xor
movsb
mov
mov
adc
xchg
insb
and
fistl
les
aam
mov
push
mov
xor
add
in
imul
sub
sub
push
sub
test
mov
in
xchg
cmpsb
xchg
call
movsb
jle
jnp
jmp
addb
roll
in
movb
cmp
xor
and
clc
sub
mov
mov
clc
outsl
insb
jnp
xchg
xchg
sub
sbb
lret
mov
add
dec
icebp
cmp
push
add
add
out
mov
test
pop
add
test
dec
and
fidivrs
aam
add
ret
das
dec
ds
or
cs
inc
add
ret
insb
aam
out
cltd
mov
push
pusha
add
push
xchg
dec
pop
xor
repz
add
add
push
jecxz
add
addb
adc
add
or
jae
add
push
rcl
ljmp
pop
in
xor
cld
add
loop
and
inc
pcmpeqb
test
les
arpl
mov
ljmp
sti
mov
sub
lock
sbb
pop
je
xchg
stos
cmp
mov
insb
test
out
js
sub
lret
mov
mov
jne
mov
es
out
jo
push
ss
xlat
mov
or
outsb
insl
ror
xor
xchg
pop
lea
push
push
inc
xchg
xor
sbb
rolb
mov
inc
add
push
movsb
fistl
jecxz
adc
stos
aaa
inc
add
scas
clc
sti
addb
lea
js
leave
shl
push
ret
ss
xor
fcmovnb
lahf
jp
icebp
or
stos
jg
add
xor
dec
les
mov
pop
cmp
xchg
cmp
in
push
push
out
mov
sbb
test
not
hlt
add
sti
xchg
pop
add
add
int
dec
repz
into
adc
add
adc
es
ss
stos
xor
add
daa
mov
cmp
aas
mov
add
lea
into
and
fidivrs
jae
and
dec
dec
inc
add
mov
mov
js
jl
add
test
int3
inc
push
mov
add
test
or
out
or
add
fs
jmp
jb
lods
imul
fsts
mov
mov
testl
test
cmp
cwtl
adc
aas
popf
je
pop
js
pop
lock
lahf
icebp
xor
or
xchg
inc
add
add
xchg
lock
enter
xlat
movzbl
sbb
pop
leave
xchg
movsl
cltd
fisttps
and
and
sub
xchg
inc
cmp
cmp
mov
add
sbb
mov
cmp
adc
sbb
test
jne
inc
add
int
push
movsl
fstl
pop
dec
and
pop
cltd
addb
or
xor
mov
sahf
idivl
in
add
pop
xor
dec
dec
test
movsl
arpl
pop
mov
aam
rolb
xchg
pusha
add
rolb
inc
add
ss
cmp
adc
comiss
pop
addb
push
scas
inc
add
flds
add
bound
in
and
or
add
test
mov
repz
loope
mov
lcall
xchg
adc
mov
jae
mov
jmp
xor
add
divb
inc
add
jne
adc
pop
and
test
ljmp
inc
add
mov
loop
sahf
add
nop
outsl
rclb
mov
add
jne
jle
cwtl
sub
imul
add
insb
loop
dec
and
push
pop
jae
dec
add
xchg
sub
in
add
data16
mov
mov
add
add
repnz
aaa
es
and
mov
dec
gs
add
push
xchg
push
test
inc
add
inc
add
lds
inc
add
inc
dec
inc
add
push
dec
subl
and
punpckhbw
out
add
test
js
push
in
sub
xor
fildl
movsl
push
out
cmc
mov
add
std
lret
cwtl
fs
add
push
mov
add
movb
test
lods
add
jmp
add
addb
dec
xor
mov
sti
add
int
fwait
ret
mov
mov
imulb
jne
dec
cmp
inc
push
mov
pop
mov
add
int
inc
add
lods
lret
inc
add
int3
xchg
outsb
mov
adc
addb
inc
adc
je
or
fimuls
roll
sbb
call
mul
mov
cmp
test
loop
daa
lahf
adc
ds
stos
in
data16
inc
add
rolb
jl
push
add
out
sub
pop
mov
xchg
jg
cmpl
outsb
addr16
add
jle
or
mov
pop
in
dec
cmp
mov
xchg
pop
cmp
add
rcl
mov
rolb
dec
push
or
aaa
das
push
dec
dec
and
xchg
or
clc
dec
pop
leave
xchg
mov
push
sbb
cmp
push
pop
rolb
stc
push
mov
enter
jg
testl
loopne
add
rcrl
cmp
xor
out
pshufw
jno
outsl
dec
mov
sub
test
cmp
push
iret
lds
push
pop
sbb
das
jecxz
jne
andl
sub
push
shlb
out
std
testb
sti
adc
ljmp
jg
fwait
cmp
stos
dec
xchg
pop
sbb
in
loope
lahf
mov
stos
stos
ds
xchg
cmp
lock
pcmpgtb
or
stc
scas
test
mov
stos
test
int
js
ret
mov
cmp
movsl
lret
pop
dec
xor
xrelease
ljmp
cmp
jns
or
test
jns
and
dec
shr
adc
in
nop
out
mov
mov
jmp
addl
add
insl
mov
jl
cli
insl
add
add
adc
xor
fs
add
ljmp
push
add
cli
jne
aaa
xchg
pop
pop
and
add
mov
add
int
add
xor
xchg
jg
ret
repnz
loope
add
add
call
add
and
xor
pop
jecxz
cmp
push
push
add
xchg
add
repnz
jmp
ja
sub
loopne
addb
prefetch
ljmp
xchg
push
jp
jle
pop
inc
popf
dec
inc
add
pop
pop
mov
add
out
loopne
jbe
add
pop
fs
std
lret
jae
sub
jo
into
push
in
push
and
je
inc
push
dec
inc
xor
mov
mov
add
pop
mov
dec
frstor
add
movsl
pop
lcall
add
sahf
pop
sarl
jne
cmp
int3
push
bound
pushf
fidivl
clc
and
mov
addb
cld
add
stc
pop
push
sub
sub
add
jmp
adc
add
insl
fcmovnbe
popf
jae
les
xor
push
bound
pushf
sbb
mov
fiaddl
add
jl
add
dec
cmp
add
add
sbb
lea
dec
cmp
out
pop
push
mov
xchg
pop
xlat
dec
or
mov
movb
cmp
es
add
xor
popf
mov
pop
jle
stc
xchg
and
jns
test
sub
xorl
mov
add
add
xor
adc
and
adc
dec
push
push
pop
aaa
jle
add
push
pop
loop
inc
add
cmpsb
rolb
add
add
push
fidivl
xor
lock
and
or
sub
bswap
inc
mov
and
ret
add
push
xchg
bndstx
aad
in
scas
jecxz
mov
jmp
add
cmp
add
cmpsb
mov
enter
daa
add
or
adc
push
add
xchg
add
or
jns
loopne
pop
mov
cli
outsl
hlt
in
clc
mov
test
mov
xor
mov
cmp
icebp
cmp
call
shl
push
dec
cmp
mov
insl
pop
or
aad
nop
insb
pop
out
and
test
cwtl
mov
push
inc
add
icebp
pushf
push
add
fs
cmp
sti
jo
loopne
sub
push
jp
pop
push
fcmovbe
test
sahf
adc
add
movb
cmp
inc
add
inc
add
inc
lea
incl
jne
inc
mov
rcrb
push
cmp
xchg
movaps
pop
xor
addl
adc
sbbl
pop
mov
add
dec
mov
test
mov
mov
inc
jg
lahf
nop
adc
push
ret
cmp
loop
cmpsb
jbe
sbb
icebp
jae
cmp
and
jge
add
sti
addr16
xchg
out
dec
sub
icebp
aas
inc
add
aad
xlat
xchg
add
movl
sbb
cmp
mov
jne
push
je
leave
stos
int3
in
loope
cmp
into
fwait
pushf
push
mov
mov
rcrb
and
cmp
add
add
mov
lea
add
daa
pop
nop
and
xlat
adc
scas
inc
mov
les
jecxz
mov
icebp
and
add
inc
outsb
xor
pusha
add
inc
cmp
setge
add
adc
jle
adc
mov
testb
repnz
add
scas
mov
mov
and
addb
jo
lea
inc
adc
mov
add
add
xchg
jmp
movsl
les
mov
bound
mov
rolb
and
aas
fs
inc
add
sub
pop
je
sub
dec
dec
fisubrs
je
jo
js
int
mov
icebp
rolb
cmpsl
inc
add
push
pop
cli
cmp
jns
stc
testl
cmp
or
movsb
adc
jmp
je
rcll
cli
push
notl
imul
push
fwait
imul
xor
movsl
inc
into
lcall
cmp
les
loopne
inc
sbb
fnstenv
add
add
out
mov
sbb
pop
xchg
and
add
jmp
adc
push
push
fs
xchg
pop
push
les
mov
cmp
add
or
ss
push
sbb
daa
jb
cmp
adc
sub
fdivr
fadd
add
outsl
dec
jg
jg
add
pop
mov
xlat
test
sub
std
pop
pusha
add
aaa
sahf
clc
stc
mov
pop
in
add
adc
push
xor
arpl
mov
dec
cwtl
mov
jle
sub
aas
das
je
and
call
push
cmp
sbb
idivl
jns
mov
ret
pushf
pop
sbb
fsubs
add
add
push
push
inc
add
mov
add
mov
loopne
cltd
shll
add
add
mov
push
ss
cmp
mov
add
add
int
inc
add
add
cs
fdivrs
mov
xor
add
jno
in
mov
adc
cmp
cmp
in
add
sub
xor
push
sarl
movb
loope
cltd
insb
mov
ljmp
in
bound
aaa
dec
aad
dec
cmp
loopne
push
mov
dec
insb
or
daa
roll
in
ljmp
cmc
cwtl
clc
push
push
int3
adc
jl
xor
mov
mov
ja
fcmovb
fiadds
iret
jle
or
popa
bound
fistl
cmp
ret
adc
aad
xor
add
rclb
jno
jg
sub
nop
lds
insb
lret
lret
mov
sbb
addr16
aam
pop
add
and
adc
inc
add
mov
jge,pt
mov
push
add
pop
dec
lret
and
push
fistl
addb
std
rcll
out
cmpsb
jmp
dec
dec
fcomip
mov
mov
sbb
adc
fcompl
push
mov
xor
js
jbe
cmp
fdivs
movl
movsb
xlat
jg
ss
jb
mov
imul
mov
sti
adc
mov
add
lds
das
push
push
add
out
add
repz
in
xchg
mov
fwait
or
or
cmp
add
add
sbb
pop
cli
add
xchg
pop
jae
out
nopl
and
push
fcomps
cltd
and
out
mov
loop
push
faddl
adc
push
stos
outsb
pop
test
mov
jbe
cmpl
imul
dec
add
add
push
jo
push
pop
fadd
addb
subl
or
pop
ljmp
xchg
dec
add
dec
mov
popa
cmp
add
add
cmpsl
jl
scas
hlt
bswap
lcall
add
sbb
int3
xchg
xlat
and
cs
push
dec
jle
lcall
cmc
ret
aad
inc
shlb
add
sbb
cwtl
inc
add
repnz
add
mov
mov
add
sub
and
and
or
iret
dec
push
cmp
mov
mov
lcall
push
add
movsb
xchg
sbb
push
dec
inc
inc
bnd
sub
sbb
mov
movsb
mov
adc
xlat
addb
add
jae
popa
jne,pt
push
xor
adc
lcall
or
sub
inc
mov
enter
pop
dec
jne
pop
in
add
into
gs
scas
jno
adc
adc
xor
imull
lds
add
sbb
mov
add
cmp
mov
movsb
fldlg2
ja
movsl
loope
out
cmpsl
xchg
call
insb
xchg
jmp
sar
add
rcrl
js
adc
mov
imul
adc
push
add
cmp
mov
es
cmpsl
movsl
pop
mov
and
xor
vmwrite
and
test
pop
aas
mov
fwait
mov
addr16
in
pop
aam
imul
add
or
dec
into
jb
mov
int
xchg
insl
add
mov
dec
pop
lods
loop
xor
add
repnz
xor
inc
es
jno
rol
in
jp
add
xchg
mov
in
addb
fwait
inc
add
icebp
push
lods
test
ljmp
dec
sti
daa
punpckhwd
jl
mov
sbbl
enter
add
lods
add
mov
adc
ds
mov
imul
call
add
test
ds
in
andl
pusha
add
imul
stos
inc
or
add
rcll
gs
aad
inc
add
push
xchg
ljmp
xchg
es
fisubs
push
jp
test
dec
add
mov
mov
pop
lds
add
push
in
nop
cs
or
and
lret
pop
jl
mov
lock
add
inc
lret
shll
testb
mov
dec
fnstsw
push
add
fwait
out
add
or
mov
ds
scas
or
jp
mov
stos
rorb
xor
xchg
stc
sbb
cli
cmp
add
lret
outsl
xlat
mov
push
push
adc
xchg
mov
enter
lods
dec
gs
movsl
adc
movb
fcmovnb
xor
mov
or
sbb
adc
cmp
add
call
add
cwtl
push
cmp
xor
xor
mov
push
rcll
stc
pusha
add
iret
les
std
lahf
mov
fimull
jnp
add
aas
and
sub
int
add
mov
dec
movsl
lea
push
mov
popf
aaa
aam
jae
sbb
daa
mov
jp
jl
in
xlat
adc
add
sarl
orl
imul
mov
inc
add
push
adc
add
enter
mov
pop
cmp
jae
ss
add
mov
push
in
mov
jae
mov
sub
jmp
pop
pop
xchg
addb
nop
jmp
data16
gs
jae
inc
mov
add
mov
jecxz
jg
out
add
and
je
pop
xor
mov
xor
inc
add
int3
or
int
mov
loope
jge
add
je
mov
ret
mov
cltd
pop
mov
aaa
add
iret
pop
cmp
test
mov
add
inc
sbb
add
mov
dec
pop
pop
add
sub
add
add
in
mov
movsb
out
add
mov
cmp
out
mov
add
adc
add
testl
adc
adc
imul
add
sarl
or
push
gs
das
pop
lea
movb
cmp
dec
xchg
xchg
cltd
hlt
mov
fidivs
pop
adc
test
iret
and
ss
mov
push
add
push
lods
mov
cltd
rolb
gs
jmp
mov
add
adc
xor
bound
mov
mov
push
iret
mov
lea
fwait
addb
xchg
fistl
or
adc
mov
add
mov
add
icebp
dec
arpl
add
sub
stos
pusha
add
inc
jno
imull
mov
pop
adc
outsl
ret
add
pushw
mov
je
bound
jecxz
int3
mov
aam
pop
mov
mov
add
pop
movb
aad
sub
or
cmp
dec
jns
outsb
sub
insl
test
imul
add
xor
mov
mov
roll
insb
lret
test
xchg
fcomps
int3
aas
jle
sub
testb
enter
nop
ja
push
sbb
scas
fs
push
and
jle
jb
push
fcompl
imul
and
mov
mov
add
mov
inc
add
cmp
call
addb
cli
insl
mov
addb
lods
fidivs
add
mov
das
cltd
ja
fsubr
xchg
out
push
test
inc
mov
mov
sbb
add
xchg
and
add
mov
sti
mov
pop
out
out
jnp
movsb
lods
repz
popf
add
rorl
test
in
mov
push
push
inc
add
mov
push
in
mov
mov
add
test
out
das
inc
add
pop
jae
sub
push
xchg
lock
mov
and
pusha
add
push
xchg
sub
movsl
add
xor
mov
adc
rolb
add
cmp
psubb
or
add
ss
and
fisubs
add
dec
sarl
insl
imul
mov
jmp
fdivs
add
jnp
out
in
lock
mov
clc
addb
cmp
sbb
mov
adc
imul
js
add
dec
addb
xor
or
mov
or
call
js
cwtl
xor
or
test
leave
adc
jp
mov
mov
es
mov
jl
ds
push
call
jp
adc
cmp
dec
out
add
outsl
sbb
push
push
popf
in
and
cmc
fwait
cmp
and
add
mov
add
cmp
ret
adc
inc
push
roll
mov
push
scas
scas
inc
add
xchg
xor
les
lods
mov
daa
idivl
cmp
inc
mov
inc
repnz
imul
movb
popf
mov
mov
scas
xchg
mov
pop
push
xchg
pop
jno
je
add
add
sarl
scas
arpl
movsl
fildl
add
add
adc
or
push
les
jno
and
ret
pop
in
dec
sti
loop
sub
sub
push
add
outsb
out
mov
fmuls
in
add
lods
add
cwtl
in
adc
add
pop
icebp
lahf
movsb
repnz
add
xor
jno
add
pushf
dec
daa
mov
xor
push
push
cmp
inc
add
lods
loopne
push
mov
adc
jne
or
mov
loopne
fcompl
push
or
add
rol
add
loope
adc
hlt
clc
repz
rol
xor
popf
lret
mov
mov
rolb
mov
imul
pop
and
aas
push
push
imul
adc
lret
push
mov
jbe
or
add
cwtl
loopne
dec
cmp
cmp
add
add
mov
mov
mov
ljmp
fimull
or
xchg
mov
or
cmp
add
sub
jae
jb
popa
mov
mov
push
pop
clc
lock
and
repz
clc
aas
cmp
lea
mov
cmc
sub
inc
or
fidivrl
enter
cltd
rorb
inc
add
addb
sbb
mov
add
add
fsubl
mov
mov
pop
push
adc
rolb
add
loopne
lea
xlat
inc
add
adc
pop
xchg
xchg
jno
and
add
sub
filds
add
pushf
stc
ret
add
leave
test
pop
adc
and
cmp
xor
insb
lcall
lods
push
scas
push
stos
jecxz
jne
add
in
pop
mov
test
add
popf
mov
sub
into
lds
scas
adc
sub
addb
subl
lahf
inc
cld
pop
or
addb
aam
ss
jp
popf
or
loope
mov
xlat
ds
mov
add
add
fs
push
xor
in
sub
add
cmp
lcall
sti
cmp
add
pop
pop
xchg
leave
movsb
lret
fcom
sbb
pop
mov
imulb
xchg
out
adc
mov
or
push
call
sahf
cmp
les
mov
add
addb
sbb
add
faddp
add
xlat
mov
cltd
cmp
mov
movsb
adc
call
lret
ret
mov
call
add
add
push
repz
test
jl
add
mov
rolb
and
in
mull
add
cmpsb
add
add
add
lcall
inc
add
jmp
ljmp
pop
lds
icebp
sub
add
or
and
loopne
pop
cs
add
lods
mov
adc
test
rcl
mov
xchg
push
in
push
test
cli
stos
daa
stc
lods
adc
lds
pop
inc
bound
jae
mul
ss
cmpsl
push
aad
fwait
pop
cmp
ljmp
imul
or
mov
adc
lods
sub
fmuls
mov
pop
pop
mov
punpckhwd
add
jl
mov
test
push
push
jae
and
and
in
mov
mov
mov
lahf
test
and
mov
add
xchg
xchg
mov
add
cmp
iret
cs
addb
xor
test
data16
pop
sti
inc
adc
jns
sbb
pop
das
rclb
cmp
adc
gs
imul
loope
aam
cmp
dec
or
mov
je
add
jno
addb
hlt
pop
movsb
sbb
iret
sub
loop
pop
lahf
xchg
ficoml
cmp
leave
ret
hlt
sbb
pop
and
lds
inc
js
push
dec
imulb
add
inc
add
mov
add
xor
cli
adc
adc
decl
xor
mov
mov
jo
jnp
jmp
sarl
lock
call
push
dec
mov
dec
in
mov
mov
imul
mov
mov
popa
aad
js
mov
xor
jo
inc
sub
pop
add
add
add
or
popa
sbb
lcall
or
ljmp
in
pop
out
nop
and
cs
loopne
je
rcl
adc
push
stos
mov
xchg
and
xchg
ds
jnp
hlt
lds
sbb
fisubs
addr16
popa
cmovg
jo
call
sub
cmp
pop
push
fdivl
mov
add
mov
push
push
pop
lods
cmp
cmp
cld
rolb
pop
and
or
mov
dec
xchg
stc
lahf
sbb
and
sub
dec
xor
dec
rclb
inc
add
daa
out
mov
add
addb
fstpt
add
outsl
das
add
fimull
out
dec
jle
adc
add
cmp
into
xchg
movsl
mov
xchg
xor
pop
fdiv
dec
add
add
add
xor
sbb
jnp
add
adc
les
mov
ja
add
ljmp
dec
mov
xchg
dec
movlps
push
addb
xchg
push
jecxz
or
sbb
ret
repnz
add
jne
pop
lret
xor
imul
xor
dec
push
add
inc
add
sub
add
rolb
or
test
cwtl
or
push
cmp
xor
push
ss
addb
pop
add
jmp
adc
sbb
idiv
lcall
add
dec
insb
outsl
lods
mov
or
jg
out
mov
add
xchg
xchg
out
adc
fwait
cmp
inc
arpl
add
xor
scas
adc
call
and
gs
popa
lock
cmpsl
enter
test
and
fmul
addr16
and
pop
pop
rolb
shl
shl
repnz
xchg
cmpsb
adc
and
lods
je
jae
cmp
ss
xchg
cmp
pcmpeqw
pop
mov
add
je
cld
bound
mov
aas
sahf
push
mov
dec
mov
jg
das
mov
add
ja
rclb
cmp
xor
xchg
pop
lcall
or
sahf
xor
mov
pop
and
stc
out
roll
or
imul
out
lods
sub
pop
gs
add
aam
dec
mov
xor
mov
add
or
icebp
enter
das
xchg
push
adc
mov
add
cmc
mov
cmp
or
xor
addb
fcoml
call
add
mov
lock
lods
xor
cmp
pop
enter
jo
shl
mov
inc
add
adc
inc
add
and
cld
mov
loope
cmp
add
add
add
dec
call
fmul
in
mov
xchg
jne
inc
add
mov
scas
call
fiadds
add
mov
dec
cs
inc
add
add
jo
mov
add
sub
lret
out
stos
adc
add
lret
lea
mov
add
add
call
or
mov
push
cli
xchg
add
adc
mov
jo
add
jns
and
outsl
addl
jle
push
ds
cmp
adc
xor
adc
xor
pop
scas
loop
jbe
xor
and
or
lods
mov
cwtl
js
mov
daa
bound
mov
insl
lret
fs
add
add
add
cmp
add
sbb
mov
lods
xchg
dec
and
fmul
add
dec
cld
inc
sub
push
or
adc
add
mov
cs
add
push
stc
pop
or
int3
mov
outsl
pop
xor
mov
aam
xchg
je
push
mov
sub
stc
xlat
out
sub
fs
or
jno
and
rorl
add
ljmp
dec
xchg
std
nop
mov
jge
add
fadds
add
dec
cltd
mov
je
cmp
stos
insb
mov
enter
fisubrs
and
cmc
addb
adc
lret
in
jl
ljmp
stc
mov
ja
push
je
outsb
mov
adc
mov
push
fimull
jnp
fcompl
adc
test
or
movsl
pusha
add
mov
xchg
add
push
leave
enter
addb
inc
add
jo
int3
cmp
add
or
and
or
and
inc
add
inc
lret
pop
jnp
addl
pop
int3
lds
jle
popaw
jl
add
xlat
outsb
mov
pop
add
jg
jo
xchg
jecxz
adc
xchg
cmp
lods
fwait
mov
and
inc
add
loopne
jne
add
mov
or
jmp
add
sbb
mov
sbb
scas
adc
mov
aad
rolb
jp
jg
std
test
iret
lcall
add
add
call
mov
xlat
jge
mov
jecxz
aaa
mov
mov
add
add
aam
mov
fcomps
add
fs
mov
lea
add
dec
sbb
pop
js
jmp
mov
or
leave
and
pop
push
js
add
dec
mov
fcmovnb
imul
push
inc
add
mov
in
jl
cmp
push
push
push
jno
fsubrl
lea
xchg
fwait
imul
mov
lahf
imul
mov
mov
mov
rolb
out
lods
adc
test
mov
sti
inc
fildll
xchg
rorb
xchg
mov
or
adc
lret
loopne
dec
ret
inc
add
mov
add
jp
mov
add
add
aad
or
int3
dec
aas
add
lock
sarb
inc
add
add
rcll
add
pop
mov
sub
inc
add
xchg
cmp
add
add
and
sub
adc
xchg
daa
lods
out
rorl
mov
xchg
in
loopne
sahf
rolb
mov
andl
ret
cmp
cli
in
xchg
push
lods
mov
mov
xchg
mov
add
xchg
imul
outsb
fcomps
dec
and
loope
add
ja
adc
add
addl
in
sub
in
jmp
xchg
jnp
daa
leave
inc
xor
add
cmpsl
or
cld
mov
jmp
push
jnp
cld
roll
jmp
add
mov
stos
enter
xchg
dec
xchg
jmp
add
stos
xchg
mov
mov
pop
push
test
aam
or
fwait
push
pop
lds
or
or
fldl
pop
xor
mov
lods
addb
lahf
jns
sbb
ror
lret
add
pop
xor
adc
addb
mov
jmp
cs
mov
lock
sub
add
lds
rolb
add
mov
ljmp
movsl
data16
mov
jmp
cmp
push
pushf
imul
into
dec
shrb
inc
or
not
mov
in
sbb
jmp
cld
push
rolb
int
insl
das
ret
stos
cmp
pop
push
popf
mov
std
cmp
aad
mov
fidivrs
adc
adcl
pop
add
stos
insl
mov
in
xchg
adc
sub
cmpsl
popf
call
dec
adc
sbb
gs
push
addb
jle
ja
add
lahf
pushf
xchg
test
data16
decb
push
mov
repnz
xchg
or
lcall
fdivrp
cmc
iret
fldenv
sbb
sbb
sarl
fs
add
add
mov
xchg
push
mov
lea
in
add
leave
push
push
repz
or
adc
lcall
out
add
jp
das
std
jecxz
pushf
insb
insb
fdivrs
push
cmp
sub
mov
jo
xchg
inc
adc
xchg
xchg
jge
je
xlat
dec
out
xor
gs
mov
mov
rclw
inc
cmp
cmpsl
dec
push
add
leave
cmp
cltd
insl
shlb
lret
dec
jecxz
add
cmp
add
ljmp
flds
jmp
addb
sbb
jmp
add
call
xchg
cs
jbe
push
sub
add
in
mov
test
add
cmp
sti
push
loopne
ficoml
lds
fst
cmc
mov
dec
push
xchg
mov
sbb
inc
add
push
pop
and
push
push
cld
xchg
mov
fwait
push
xchg
cwtl
push
add
fildll
stos
aas
xchg
ljmp
mov
in
xor
dec
fbstp
add
inc
int3
mov
rolb
add
popf
lds
inc
add
addb
pop
mov
lret
jo
cli
push
pushl
jo
add
lea
clc
cmp
test
inc
aas
add
in
push
adc
pushl
pop
loopne
rcll
xor
lods
pop
mov
adc
push
outsb
add
fcoml
inc
add
insl
shl
sub
shl
ljmp
imul
lcall
inc
add
push
js
jmp
push
cmp
add
add
outsb
addb
in
pop
xor
add
and
lret
push
adc
add
outsb
push
in
fidivrs
sbb
push
jmp
dec
mov
or
sbb
mov
and
testl
cmp
test
mov
xchg
mov
enter
jne
fistpll
pop
fwait
aam
pop
popf
jo
int3
ja
mov
ret
adc
mov
push
and
or
out
out
dec
sub
and
adc
rolb
pop
lods
pextrw
lret
cmpsb
jne
or
test
xchg
rolb
icebp
inc
add
mov
and
dec
xor
sbb
xchg
xor
sbb
add
or
and
cmpsl
pushf
push
add
jg
add
add
mov
push
sub
icebp
test
dec
push
push
jae
inc
add
inc
add
cmp
insb
jns
adc
xchg
or
add
add
ljmp
mov
pop
sti
sub
imul
inc
mov
faddl
add
int
mov
add
jo
sub
dec
cmc
xchg
fdivrs
imul
sub
and
sub
jl
push
rclb
add
in
and
test
push
clc
mov
cmp
jne
mov
jno
mov
push
add
arpl
push
add
clc
add
lods
lods
dec
push
sub
enter
sub
add
lock
or
add
fisubrs
addb
mov
cmp
test
aaa
cld
mov
sub
cwtl
push
stos
insb
out
repnz
mov
daa
pop
add
mov
cld
insl
mov
mov
movb
sub
sbb
popa
pop
mov
adc
in
inc
add
push
lret
cmp
adc
jg
add
add
lea
add
sub
inc
sbb
out
ljmp
and
add
dec
or
sbb
stc
sub
add
sub
out
mov
sbb
into
adc
ror
test
cmp
inc
add
jl
jae
or
sbb
imul
js
repz
lret
adc
sbb
mov
int3
or
mov
inc
add
fdivr
push
add
addb
sbb
mov
lods
mov
add
repz
cli
push
add
xor
push
ret
inc
add
addb
or
sbb
jmp
sub
fildl
mov
mov
cmp
inc
push
jmp
mov
fildll
fidivrl
cs
in
add
jb
je
cmove
mov
pushf
adc
popf
xor
movsl
fisubrs
fmull
jnp
add
divb
xor
test
rcll
xlat
rcrb
rolb
imul
add
cmp
push
mov
mov
jae
inc
push
mov
xchg
adc
sbb
push
push
add
and
add
mov
cmp
xor
and
in
and
pop
mov
sbb
arpl
jle
or
pop
ljmp
data16
and
out
jne
add
push
add
add
push
xor
lods
daa
dec
shrl
lahf
adc
callw
sbb
xchg
xor
sbb
imulb
cli
faddl
scas
lahf
enter
icebp
loope
mov
add
jecxz
jb
and
add
test
sub
sub
test
out
cmp
dec
mov
les
leave
std
out
aad
adc
or
es
fnsave
int3
lds
fs
dec
test
jbe
sbb
add
movsb
push
and
int3
out
inc
add
shl
push
pop
cwtl
pop
cmc
popa
cmpsl
pop
jmp
add
inc
jge
cs
daa
nop
ljmp
rolb
push
or
enter
aad
jmp
cwtl
pop
mov
push
pop
out
xchg
dec
les
jo
movsl
push
popa
adc
xchg
dec
insb
or
adc
push
push
or
jno
loop
data16
fisubrs
in
subl
add
int3
insl
test
testl
mov
test
clc
mov
rolb
cmp
pop
cmp
push
inc
cmpsb
adc
and
add
fidivl
cmp
out
daa
sbb
push
push
add
mov
inc
jg
add
add
dec
cld
pop
lods
xchg
dec
lods
mov
add
in
leave
std
movb
iret
mov
fsubrp
xchg
or
mov
sar
imul
outsb
std
adc
jl
mov
insb
imul
push
lea
mov
push
jbe
ret
rolb
clc
push
imul
add
or
mov
mov
scas
fs
dec
int3
divl
pop
addb
fucomi
push
add
and
fmull
pushf
lods
mov
jmp
sub
std
in
cmpsl
adc
clc
out
xchg
and
mov
pop
outsb
xchg
test
or
and
xchg
or
sub
jnp
jae
lods
testl
enter
loope
pop
in
xchg
xchg
fiadds
push
fwait
pop
jl
xchg
mov
add
push
mov
mov
push
add
sbb
jmp
cmp
cmp
fwait
in
cwtl
dec
es
mov
add
cld
lcall
gs
push
adc
dec
iret
push
adc
xchg
xor
aaa
pop
shlb
mov
mov
int3
clc
dec
out
mov
xor
jne
rcr
jns
add
fwait
je
dec
jl
inc
jo
or
lock
mov
out
pop
stos
xchg
jne
mov
or
iret
daa
jmp
add
add
dec
hlt
inc
data16
add
lds
mov
add
leave
inc
inc
add
dec
xchg
fs
ja
and
arpl
rcr
fcmovnu
mov
lcall
sbb
mov
rdtsc
cwtl
sti
mulb
insl
aas
mov
add
adc
and
ficomps
pop
jp
mov
aaa
jnp
mov
jb
loope
into
dec
dec
stos
pop
pop
lcall
arpl
ljmp
test
adc
lret
xchg
jmp
mov
jbe
cmp
cmp
add
and
or
lret
testb
jle
cltd
ss
xor
dec
mov
lret
cwtl
mov
or
sbb
das
psubsb
imul
lock
inc
mov
popa
adc
lret
sbbl
push
and
bound
fsub
lcall
clc
or
stc
cmp
dec
xchg
icebp
inc
add
lods
outsl
add
adc
dec
sahf
add
lret
add
scas
jmp
jl
add
push
jno
push
lcall
sub
xchg
js
dec
xlat
pusha
add
dec
xchg
inc
add
fidivl
push
pop
mov
icebp
fildl
sub
pop
jecxz
jbe
cmp
test
out
xchg
je
icebp
mov
dec
push
pusha
add
sbb
fildll
int
add
pusha
add
mov
add
dec
pop
or
adc
add
inc
add
and
mov
inc
add
push
out
push
add
fcomps
adc
pop
mov
cmp
arpl
rcrl
out
pop
inc
cwtl
or
aas
jecxz
fstpt
dec
icebp
fisttpll
sahf
push
lock
add
movsb
sub
jbe
add
stc
out
pusha
add
sub
loopne
add
ljmp
hlt
or
fcomps
add
push
scas
or
in
add
test
idivl
shll
pop
outsb
jmp
xor
mov
mov
and
mov
pop
ret
imul
add
xlat
movsb
push
lock
add
aam
pushf
mov
xchg
sub
push
cmp
jg
jo
or
jmp
jl
sub
add
dec
dec
lock
aas
mov
out
jno
inc
add
push
nop
push
ja
negl
popf
andl
gs
aam
mov
stos
pusha
add
cmp
mov
inc
inc
add
add
int3
cmpsl
imull
lods
test
add
adcl
cmc
mov
add
addb
jo
mov
xor
add
push
xor
or
cmp
in
xchg
pop
inc
add
rcrl
cmp
repnz
push
xchg
mov
cli
divl
je
sar
mov
fisubl
into
mov
push
dec
mov
add
cmpsb
mov
adc
xchg
mov
cmp
pop
es
jg
sub
add
call
roll
or
movb
imul
mov
add
add
sub
dec
dec
sub
add
xchg
dec
cmpsl
addb
outsb
lods
push
sbb
pop
cld
cmp
pop
sbb
pop
mov
inc
add
push
in
addb
push
dec
push
adc
pop
xchg
or
cmp
pop
fiaddl
leave
aam
fdivl
pop
lret
mov
fimull
push
add
jg
jnp
and
icebp
adc
jl
rol
mov
push
add
add
sahf
mov
fldt
sub
adc
enter
int3
pop
int3
fistl
pop
jnp
or
jo
cwtl
pop
ss
cmp
xor
cmpsl
adc
or
dec
cld
jo
ret
outsb
je
fnsave
mov
lcall
sbb
jl
or
pusha
add
xor
addb
adc
sbb
push
cmp
xor
stc
xor
lahf
loopne
popf
notl
pop
jp
mov
cmp
inc
add
sarb
dec
add
add
jg
mov
in
loope
add
adc
mov
out
xor
dec
xchg
imull
je
mov
les
adc
mov
mov
adc
mov
mov
xchg
mov
daa
mov
add
les
cmp
add
adc
mov
call
pop
push
test
sub
pop
dec
loope
addb
push
cmp
fsubrl
lock
add
dec
lret
lock
lds
inc
xchg
setp
add
xchg
mov
push
jecxz
mov
xor
push
sti
mov
add
sti
in
rorl
cmp
add
add
hlt
stos
gs
std
mov
lock
out
lods
lea
mov
cmp
mov
js
mov
sbb
clc
push
jo
fnstenv
pop
push
fmuls
imul
fxch
sbb
adc
mov
daa
je
jnp
sub
lret
xchg
adc
mov
add
adc
mov
addb
add
dec
mulb
pushf
ret
pop
aas
repnz
sahf
hlt
popl
enter
lret
addr16
mov
jnp
mov
loopne
and
lret
mov
add
mov
sahf
push
fs
cmp
dec
fdivrs
iret
data16
add
adc
jne
dec
push
sub
outsb
mov
pop
cltd
stos
sub
dec
bound
cli
mov
fs
push
add
mov
jbe
jns,pt
inc
add
sbb
xchg
aas
push
pusha
add
push
jmp
sbb
sbbl
mov
lea
push
je
in
movb
and
pushf
lock
pop
roll
push
mov
aas
pop
rorl
out
add
jns
hlt
sbbl
test
add
mov
popf
cmp
add
incb
enter
mov
jae
mov
xchg
xchg
mov
aaa
mov
jg
jne
scas
fwait
movsl
imul
xchg
xchg
mov
add
test
push
add
cwtl
scas
movsb
sbb
mov
mov
popf
add
sub
xor
mov
cld
stos
cmp
ret
add
xchg
mov
enter
lea
cmp
cli
inc
add
pop
lret
es
insl
xor
adc
mov
push
repnz
or
jns
lret
fadds
shll
pop
mov
fsubl
mov
pop
loopne
or
inc
pop
adc
xchg
mov
mov
fdivrl
lret
mov
imul
shrl
dec
clc
dec
pop
pushl
cmp
mov
sub
repnz
gs
ret
fdivs
int3
test
mov
jae
inc
add
imul
pushfw
pusha
add
rolb
inc
add
jb
lret
aad
cmp
pop
or
movsb
mov
jae
push
mov
fcmovne
add
jp
adc
aaa
sbb
daa
mov
inc
add
xor
outsb
cmp
push
int
movhlps
or
xlat
test
js
into
pop
push
push
in
push
adc
outsb
js
mov
add
add
shll
dec
andl
push
daa
lret
mov
dec
fldl
adc
inc
add
aas
in
ret
push
loop
or
sbb
aad
pop
movb
pop
jb
inc
add
inc
add
jecxz
mov
lock
cltd
fcomps
insb
jb
add
cmpsb
outsb
fsubrl
jmp
dec
mov
add
dec
out
mov
scas
cmc
lods
cmp
outsb
inc
cld
sub
add
add
jno
clc
dec
xchg
mov
lret
in
out
cld
mov
or
add
clc
outsb
outsb
fcoms
adc
fucomp
pop
sbb
push
in
outsb
iret
mov
cwtl
add
cmp
xchg
mov
and
sbb
out
repz
add
mov
push
ret
push
inc
add
cld
dec
mov
aam
loope
call
add
xchg
or
add
jecxz
int3
cwtl
or
add
mov
push
movb
std
dec
jge
pop
adc
div
fidivrl
add
add
gs
cmc
int3
jbe
mov
insl
pop
lret
dec
test
ja
loopne
in
loop
push
cmp
je
mov
mov
add
in
lods
dec
addb
dec
aam
imull
test
jmp
mov
or
sbb
inc
rolb
mov
decl
xchg
adc
stos
sbb
sub
repnz
test
dec
aam
in
adc
dec
pop
xchg
pusha
add
jo
add
fdivrl
add
mov
add
add
lahf
pop
dec
jmp
fdiv
jg
loopne
mov
mov
xor
jmp
sub
push
out
push
mov
mov
add
cs
add
incb
add
test
mov
dec
rcll
dec
loope
pop
mov
add
jl
inc
cmpsb
mov
arpl
stos
add
inc
add
lods
push
push
mov
add
leave
push
cld
jp
cmp
ja
ret
add
fsubs
scas
movb
cmpsb
pop
or
cmp
lds
add
pop
mov
and
imul
stos
int3
mov
or
sub
test
xchg
sbb
aaa
inc
add
xor
cmp
mov
pusha
add
mov
add
dec
mov
dec
jl
dec
bound
cmp
jno
add
add
jmp
mov
jnp
idiv
repz
outsl
pop
lock
jp
pop
mov
scas
loope
push
int
into
xchg
mov
jecxz
std
pop
test
cmp
jae
jne
push
xlat
push
movb
sti
stc
pop
hlt
scas
or
int3
aam
fwait
test
inc
add
add
dec
das
lods
mov
fstpt
mov
fdivr
xor
push
sahf
loope
pop
mov
add
dec
or
jg
mov
and
dec
rolb
sbb
add
mov
xor
lods
mov
mov
inc
fst
test
dec
and
push
repnz
mov
jl
and
xchg
sti
cmpsl
or
in
es
add
add
sahf
data16
fwait
sub
push
pop
sbb
arpl
jp
pop
cmpsb
add
lcall
pop
sbb
pop
add
jp
mov
cmp
xchg
jns
sub
icebp
loop
mov
mov
scas
jl
mov
push
aad
add
push
ljmp
pusha
add
mov
mov
add
mov
cmp
add
xchg
mov
iret
and
inc
stc
dec
mov
cli
lret
pop
movb
add
mov
fwait
cmp
jl
pop
inc
add
mov
jns
test
cmp
jae
sbb
les
sub
and
stos
fwait
add
div
add
imul
xor
add
add
pop
loop
cmp
outsb
cltd
jmp
mov
jp
pusha
add
pop
adc
add
pop
or
add
add
add
pop
jl
add
stos
pusha
add
dec
rorl
addb
out
sbb
inc
add
add
fldln2
sub
testl
pop
addb
sti
movb
fsub
push
push
nop
xchg
cmp
dec
xchg
or
push
test
inc
add
add
push
bound
test
pop
xlat
insl
dec
jbe
addb
fs
rorl
cmp
or
mov
sarb
xchg
out
shlb
mov
lret
mov
out
call
test
mov
inc
add
push
cli
ss
and
aas
out
mov
jb
inc
add
mov
loopne
add
adc
pop
adc
jp
xchg
lcall
cwtl
leave
jecxz
fmul
pushf
sbb
xchg
and
addr16
lret
cmpsl
add
popa
add
jne
iret
jne
pushf
jmp
loopne
out
jecxz
jnp
dec
sbbl
imul
add
or
xchg
add
jl
mov
adc
mov
add
sub
sbb
iret
movb
pushf
ljmp
adc
out
add
ret
xchg
gs
pop
mov
add
fistpll
negl
adc
xlat
push
mov
mull
sbb
mov
out
jecxz
jnp
mov
incb
add
cmp
lret
add
add
loopne
pop
orl
mov
sbb
add
and
mov
add
test
or
push
adc
cs
cwtl
in
add
aam
out
adc
add
movb
adc
pop
inc
aam
rolb
cmp
mov
fcoms
add
inc
lcall
call
add
add
add
and
pop
les
sbb
add
add
push
mov
xchg
cld
gs
and
and
sub
xchg
arpl
ljmp
das
mov
pop
jmpw
xor
add
xchg
push
aad
add
add
adc
addb
test
xchg
in
loopne
ret
loopne
mov
mov
stos
faddp
sbb
pop
enter
add
fnstcw
loopne
mov
add
inc
dec
and
dec
xchg
add
and
inc
add
dec
hlt
push
add
rolb
xor
dec
rolb
add
xchg
and
int3
mov
push
add
bound
test
loope
or
lods
loope
addb
add
push
add
fsubs
je
jl
out
out
inc
dec
hlt
adc
add
lret
lods
sub
add
out
out
adc
stos
lea
push
arpl
pop
adc
sbb
popa
push
jo
push
xlat
adc
stos
push
dec
arpl
ret
and
pop
pop
cmp
mov
push
push
movsb
cli
jnp
js
pop
sbb
imul
js
and
dec
mov
add
scas
fsubs
shlb
pop
rcr
jle
mov
sbb
bound
and
jo
mov
or
mov
adc
aas
dec
gs
xlat
jle
mov
push
push
xor
js
add
push
jl
fs
pop
dec
rcl
les
sbb
adc
cld
mov
out
fs
adcl
add
sbb
fidivrs
push
push
mov
loopne
inc
jns
and
xor
mov
sub
add
xchg
cli
repnz
cmp
add
and
in
and
mov
and
mov
xchg
dec
mov
or
rclb
push
add
addr16
mov
add
push
mov
add
or
mov
aas
stos
sub
xlat
fwait
test
rcl
mov
aam
or
cld
dec
adc
leave
xlat
jnp
add
add
popa
jp
mov
add
pushf
fdivl
and
addb
stos
mov
insb
fisttpl
add
fistps
or
cmp
add
sahf
cmp
add
inc
les
jmp
enter
jnp
add
pop
mov
adc
rcll
xchg
shll
sbb
inc
push
add
adc
inc
add
and
dec
shrb
add
adc
sbb
lods
sbb
and
dec
fwait
cmp
adc
mov
enter
add
psrld
or
add
ret
lcall
sub
jbe
cmpl
cmpsb
xchg
sbb
movsb
inc
cld
shll
add
mov
sub
add
pop
adc
repz
mov
add
pusha
add
jmp
in
add
into
shll
ret
movb
daa
push
lock
push
pop
imulb
test
add
or
movq
js
sahf
scas
push
add
or
imul
push
imul
lret
enter
ret
pop
sub
pop
incl
sbb
clc
in
rclb
sbb
xor
jb
int3
ds
xor
push
repnz
add
dec
cmpsb
in
imul
xor
into
pusha
add
and
into
das
xchg
jo
push
mov
add
call
cwtl
les
sbb
mov
add
xchg
adc
fistps
jb
adc
add
int3
stc
and
std
jbe
xchg
add
xchg
mov
pusha
add
rolb
subl
call
pop
bound
xor
dec
xchg
mov
lods
fmulp
push
test
and
rorb
cltd
lret
aad
pushf
pop
sbb
add
jnp
lock
inc
add
cmp
cmp
stos
int
movb
lea
sub
and
add
sub
add
int3
repnz
push
pop
push
dec
inc
sbb
fwait
shl
icebp
jecxz
adc
imul
add
jb
mov
loope
dec
pop
imul
pop
js
hlt
mov
out
xchg
pusha
add
test
jo
add
xor
int
xor
scas
mov
nop
cmp
push
inc
pusha
add
push
xchg
mov
mov
add
pminub
aas
xor
adc
mov
pop
fcmovu
add
mov
in
or
mov
sub
inc
or
and
and
cmp
cmpsl
cmp
mov
ljmp
cmp
mov
adc
sbb
aaa
mov
add
add
adc
xchg
pop
xchg
in
ss
sbb
leave
push
sarb
mov
test
inc
add
addb
add
bound
cmpsl
push
insl
sub
movsb
lock
insl
fistpl
xchg
xor
test
jne
imul
mov
cmovae
push
or
mov
fsub
push
repz
add
cmp
inc
add
xor
or
add
pop
repnz
ja
and
pop
enter
insb
stc
inc
dec
dec
sahf
in
sbb
pop
xchg
les
jle
aad
outsb
movsb
popf
clc
dec
scas
xor
xor
in
and
jg
call
dec
stc
sahf
add
ffreep
cltd
iret
xchg
test
mov
repz
cmp
add
xor
push
cmp
push
sbb
loop
lcall
add
add
in
add
frstor
xchg
pushl
call
sub
push
loope
xor
or
jl
mov
add
sahf
sahf
inc
add
int3
or
into
cld
sub
mov
idivl
dec
imul
inc
add
mov
in
jnp
repz
shl
je
jmp
outsb
sub
inc
leave
inc
cmpsl
dec
clc
jbe
pop
lcall
imul
cmp
jecxz
sub
inc
lea
lret
lea
mov
mov
or
mov
and
dec
ror
xchg
sub
ja
jbe
pop
imul
add
xchg
outsb
data16
inc
adc
sbb
add
add
hlt
push
add
jecxz
push
lods
sbb
xor
add
mov
loopne
mov
mov
jge
cs
lods
rolb
dec
or
or
xor
add
movb
adc
push
add
stos
mov
addb
mov
pop
addb
ljmp
lock
ljmp
jge
lcall
dec
fdivl
mov
xchg
pusha
add
mov
or
inc
ja
ret
add
add
mov
push
mov
add
addr16
push
push
ret
pop
push
je
movsl
sbb
sub
jmp
or
xlat
jge
add
add
inc
sub
mov
jmp
fbstp
mov
js
leave
mov
movsl
sbb
add
pop
movsb
lock
ret
inc
add
jne
add
xchg
dec
sbb
cmc
addb
xchg
add
push
cmpsl
test
loop
xchg
mov
xorl
add
add
mov
cwtl
nop
pop
pushf
xor
jl
mov
dec
dec
gs
adc
pop
pop
jne
add
lea
dec
lret
push
insl
std
dec
test
push
pushf
push
pusha
add
mov
arpl
add
or
stos
and
les
into
add
in
test
mov
int3
inc
add
outsl
pop
mov
add
pop
mov
add
xchg
pop
mov
lea
add
mov
inc
popf
inc
add
add
xchg
lea
inc
add
and
push
mov
cmp
icebp
addr16
adc
iret
jl
arpl
or
cmp
inc
add
lret
scas
call
mov
loope
cmp
repnz
leave
scas
sub
xor
add
mov
dec
dec
mov
icebp
mov
add
icebp
movb
mov
push
xor
push
in
add
pop
pushf
adcl
lret
test
add
popf
dec
sti
rep
lods
xchg
data16
sub
loopne
movb
jnp
cmpsb
sub
pop
push
lea
xchg
pop
or
push
or
sbb
mov
add
xlat
mov
fneni(8087
jle
imul
pop
fistps
inc
add
arpl
ds
jnp
cmp
aas
xchg
jae
cld
dec
mov
jp
dec
cltd
sub
popa
push
or
lcall
pop
pushf
jecxz
dec
push
jmp
test
cmc
iret
or
pop
ds
add
cmpsw
mov
jbe
add
les
jle
add
add
lea
out
mov
insl
movsl
icebp
fmuls
xor
stos
addb
and
inc
sbb
add
add
xor
pop
xchg
in
sbb
jmp
enter
lahf
fimull
add
aas
pop
and
adc
push
shr
into
pop
in
pop
mov
jecxz
loope
call
or
jae
mov
adcl
addb
jg
add
lods
lahf
clc
lock
sub
in
cmc
cmc
ss
sub
fsubrl
fmull
pop
mov
aam
call
adc
push
mov
clc
je
jo
loope
jnp
xor
sub
push
mov
addb
repnz
jnp
dec
push
add
test
cmpsl
or
rcrl
hlt
inc
add
sbb
dec
scas
sahf
lcall
mov
das
and
pop
inc
fdivl
adc
scas
and
push
fbstp
cmp
sub
xchg
mov
out
inc
jmp
mov
cli
cli
mov
and
xchg
test
call
and
pop
repnz
mov
push
sbb
insb
jns
add
addb
sti
dec
addb
or
push
sub
xchg
stc
push
pop
push
jo
add
mov
dec
movb
or
fs
arpl
jb
fdivr
popf
mov
fucomp
out
sub
pop
int
add
adc
mov
add
paddb
xor
mov
jmp
ja
push
icebp
xchg
inc
cmp
stos
mov
add
lahf
je
movsb
push
push
jmp
cmp
in
jge
adc
test
xor
add
mov
ja
and
stos
insb
dec
addb
icebp
adc
add
fwait
jmp
gs
dec
mov
mov
cs
scas
daa
out
push
ja
mov
push
jb
push
add
ret
lcall
add
dec
mov
or
pusha
add
fcoml
push
add
movb
scas
add
mov
and
ja
test
add
test
clc
push
test
popa
out
pop
arpl
sbb
jge
push
aas
mov
adc
xor
js
div
inc
add
addl
add
lds
inc
add
push
xchg
jge
xchg
sbb
addr16
add
adc
popf
sbb
push
fmuls
int3
jo
push
push
das
mov
in
aaa
mov
fyl2x
lea
add
and
rolb
pop
add
les
jmp
add
push
out
jecxz
jp
gs
push
jp
lods
out
jmp
stos
clc
test
dec
pop
daa
and
dec
bound
rcrb
data16
es
or
jnp
sub
sub
in
pop
mov
fmull
pop
mov
pushl
sahf
cltd
mov
addb
mov
pop
mov
test
push
mov
sub
mov
ja
jbe
xor
out
aad
jbe
mov
addl
add
cmc
sti
movb
pop
aam
sub
lods
sub
rcl
add
add
pop
add
add
inc
outsb
xor
mov
inc
add
mov
inc
add
sbb
sub
adc
shll
mov
mov
mov
jo
add
movb
adc
lret
add
test
or
addb
scas
in
xor
push
xor
std
push
or
sbb
push
jns
push
cmp
sbb
jp
cmp
jp
shrl
cli
mov
sbb
mov
add
mov
xor
cmp
mov
popf
cmc
jl
add
jl
pop
lret
adc
dec
jae
call
or
xor
loopne
sub
sub
sub
ja
movsl
add
add
fwait
add
loopne
cmp
pop
add
mov
add
jb
add
repnz
fcmovnu
mov
jmp
mov
jg
dec
lret
or
mov
jl
inc
add
sbb
enter
add
je
clc
aad
xchg
shrb
fcoms
mov
call
dec
hlt
sub
jo
stc
xchg
fs
pushf
pop
adc
es
rcrl
ret
adc
or
sub
add
add
cld
add
xchg
lret
addb
mov
movsb
mov
int
adc
cmp
in
leave
mov
out
leave
lods
mov
lods
adc
mov
nop
cld
jmp
popa
push
push
add
sar
nop
jb
push
push
add
push
add
pop
push
mov
pop
add
mov
loopne
add
nop
adc
popa
add
nop
jb
ret
add
popa
add
das
push
stc
nop
jb
adc
add
adcl
nop
jb
xchg
cltd
imul
push
push
mov
xchg
ret
xchg
add
mov
stc
nop
jb
add
ljmp
add
stc
nop
jb
add
nop
jb
add
or
add
add
inc
test
mov
or
stc
nop
jb
push
cwtl
add
lea
nop
cld
jmp
data16
add
pop
mov
stc
nop
jb
cltd
test
out
add
nop
cld
jmp
add
or
jae
xchg
and
jb
stos
imul
and
nop
cld
jmp
cmpsb
ficoml
add
popa
imul
ret
adc
add
das
push
add
nop
cld
jmp
xchg
add
cwtl
add
add
jb
push
push
mov
xchg
ret
add
mov
mov
cld
jmp
call
mov
push
nop
cld
jmp
call
jmp
pop
cmp
mov
xchg
ret
mov
mov
cld
jmp
add
add
popa
pushf
je
nop
cld
jmp
add
mov
stc
nop
jb
jg
ficoml
inc
add
add
add
cmp
lock
add
nop
jb
imulb
xor
mov
push
mov
xchg
ret
cwtl
imul
jb
cltd
xchg
lret
add
xor
xor
push
mov
xchg
ret
add
pop
imul
add
out
movsl
add
movzwl
stc
nop
jb
loop
pop
das
pushf
add
push
mov
xchg
ret
mov
les
nop
jb
add
add
add
jb
xchg
add
add
call
stc
nop
jb
movsl
xchg
add
sbb
mov
cmp
ret
add
mov
fistl
in
adc
pop
jmp
addr16
sbb
push
and
mov
add
nop
jb
faddl
add
adc
dec
and
push
mov
xchg
ret
faddl
out
mov
push
mov
xchg
ret
or
stos
add
nop
cld
jmp
gs
add
fidivl
add
add
add
mov
add
nop
jb
popa
add
ret
mov
stc
nop
jb
cmpsb
mov
add
xchg
push
das
mov
stc
nop
jb
xor
jl
jmp
xor
add
add
add
rep
push
mov
xchg
ret
add
xchg
sbb
mov
xchg
ret
mov
cltd
add
lds
nop
jb
add
pop
pop
add
add
jb
sahf
sti
add
add
repz
nop
cld
jmp
add
fisubrl
mov
stc
nop
jb
notb
add
push
loopne
nop
jb
gs
lret
out
cwtl
mov
push
push
mov
xchg
ret
or
add
add
add
stc
nop
jb
push
cwtl
loop
add
jg
push
mov
xchg
ret
add
adc
cwtl
enter
aas
repnz
add
pop
add
rolb
add
repnz
ret
stc
nop
jb
add
adc
nop
cld
jmp
cwtl
add
push
add
adc
jb
add
xchg
lret
push
add
test
mov
add
nop
jb
ljmp
in
add
add
stc
nop
jb
add
add
or
sbb
pop
add
add
xchg
stc
nop
jb
pop
addr16
push
stc
nop
jb
or
xor
fnstsw
xchg
push
push
sub
jb
push
cwtl
outsl
add
add
orb
add
add
add
sti
xchg
add
dec
mov
stc
nop
jb
cli
add
mov
mov
nop
cld
jmp
add
leave
jmp
nop
cld
jmp
fcompl
add
push
mov
xchg
ret
lahf
fnsave
sbb
xor
nop
jb
add
jb
add
cmpsb
add
add
add
nop
jb
add
add
js
sar
jb
ret
ret
add
leave
mov
stc
nop
jb
add
xchg
add
mov
stc
nop
jb
add
or
or
nop
jb
push
push
lahf
add
iret
je
stc
nop
jb
add
mov
or
cmp
ret
mov
stos
add
lahf
push
stc
nop
jb
ret
mov
add
add
mov
stc
nop
jb
xchg
outsl
add
sbbb
add
xor
jne
lods
mov
nop
cld
jmp
add
add
add
xor
push
fisttps
test
add
stc
nop
jb
add
mov
stc
nop
jb
add
lret
add
add
and
xchg
outsl
lods
push
mov
xchg
ret
fsubrl
xchg
add
dec
add
nop
cld
inc
add
fiaddl
shrl
push
push
mov
xchg
ret
fiaddl
add
cltd
out
add
stc
nop
jb
addr16
fisubs
stc
nop
jb
add
outsl
add
stc
nop
jb
jo
push
or
cltd
mov
stc
nop
jb
aam
add
mov
inc
add
imul
iret
or
dec
push
add
adc
add
std
add
stc
nop
jb
add
add
cmp
nop
cld
jmp
xchg
add
add
dec
not
push
mov
xchg
ret
or
add
loop
add
stc
nop
jb
add
mov
jb
cltd
add
add
int
ss
nop
jb
pop
add
add
push
in
add
push
mov
xchg
ret
xor
add
add
stc
nop
jb
mov
stc
nop
jb
or
add
shl
stc
nop
jb
add
fstpl
movb
jmp
stc
nop
jb
add
jo
mov
push
mov
xchg
ret
or
jnp
enter
push
add
xchg
ret
add
push
je
call
stc
nop
jb
add
sti
pop
jne
stc
nop
jb
push
pop
lods
mov
push
mov
xchg
ret
jg
jg
imul
stc
nop
jb
add
xor
popf
push
stc
nop
jb
mov
stos
mov
icebp
xor
or
dec
cmp
nop
jb
push
add
gs
cli
pop
stc
nop
jb
stos
cwtl
add
xor
add
mov
stc
nop
jb
add
mov
stc
nop
jb
add
add
sub
test
nop
jb
sti
pop
call
in
inc
add
add
add
mov
add
ret
add
stc
nop
jb
sahf
ljmp
mov
push
mov
xchg
ret
add
add
push
stc
nop
jb
pop
add
adc
add
stc
nop
jb
mov
rolb
push
push
mov
xchg
ret
cmpsb
add
add
mov
jne
stc
nop
jb
add
orb
add
add
sub
stc
nop
jb
cwtl
add
jb
add
popa
lock
cmpw
nop
cld
jmp
add
xor
stc
nop
jb
add
pop
add
add
jae
mov
stc
nop
jb
add
add
add
fs
add
stc
nop
jb
outsl
cltd
add
add
imul
incl
add
add
xor
mov
push
mov
xchg
ret
add
movsl
cmp
nop
jb
mov
push
add
xchg
int3
insl
call
stc
nop
jb
add
and
nop
jb
cwtl
add
and
push
push
mov
xchg
ret
fldl
add
push
stc
nop
jb
add
push
or
jmp
xchg
add
call
stc
nop
jb
push
fimull
dec
or
cld
jmp
add
add
add
jns
stc
nop
jb
add
or
add
pop
push
mov
xchg
ret
cwtl
sti
add
sar
nop
jb
imul
add
stc
nop
jb
push
stos
pop
add
jge
inc
adc
nop
jb
or
int3
add
pop
stc
nop
jb
pop
add
add
or
or
add
nop
jb
add
gs
add
dec
inc
stc
nop
jb
aaa
add
imul
stos
mov
stc
nop
jb
int3
add
imul
cld
jmp
mov
add
ret
adc
lea
push
mov
xchg
ret
movsl
add
xchg
inc
stc
nop
jb
pop
add
add
addb
imul
stc
nop
jb
add
xchg
loop
adc
jb
add
xchg
add
xchg
cmpl
je
add
popa
mul
jae
pop
stc
nop
jb
add
aaa
pop
aaa
add
mov
dec
stc
nop
jb
add
mov
pop
push
mov
xchg
ret
add
add
add
add
lahf
add
xchg
ret
add
dec
sub
push
xchg
aaa
popa
xor
stc
nop
jb
add
ljmp
adc
cmp
nop
jb
aaa
add
add
sbb
add
nop
jb
push
out
add
xor
stc
nop
jb
add
xchg
addb
xor
xorb
incl
cltd
ljmp
popa
add
nop
jb
add
add
add
adc
cmp
nop
jb
add
add
or
idivb
mov
stc
nop
jb
pop
add
movsl
push
inc
or
sub
nop
jb
mov
add
loop
pop
mov
stc
nop
jb
add
pop
add
and
negb
mov
xchg
ret
adc
xchg
jb
add
push
mov
xchg
ret
add
lret
pop
popa
ljmp
jb
incl
add
lret
lret
add
inc
add
add
stc
nop
jb
add
add
add
xor
pop
push
mov
xchg
ret
add
imul
nop
jb
add
add
mov
adc
mov
stc
nop
jb
add
cli
aaa
add
mov
stc
nop
jb
ds
pop
add
mov
nop
cld
jmp
add
or
add
cld
jmp
pop
add
adc
add
inc
testb
cmp
ret
add
inc
and
nop
jb
xchg
add
mov
xchg
push
xor
stc
nop
jb
add
addr16
add
add
nop
jb
aam
je
stc
nop
jb
movsl
movsl
jmp
orb
add
mov
add
add
mov
push
nop
cld
jmp
add
add
add
int3
add
arpl
and
imulb
push
mov
xchg
ret
add
ljmp
psubw
stc
nop
jb
push
add
cmp
nop
jb
mov
add
add
nop
cld
jmp
add
faddl
ficoml
add
xchg
stc
nop
jb
sahf
xchg
add
pop
repz
add
decl
push
mov
xchg
ret
add
pop
or
nop
jb
mov
sbb
mov
xchg
ret
add
add
sahf
inc
mov
add
stc
nop
jb
add
jg
add
adc
xchg
and
sbb
gs
nop
jb
xchg
add
nop
addb
je
stc
nop
jb
add
xor
stc
nop
jb
push
mov
stc
nop
jb
or
call
mov
xchg
ret
push
pop
ret
lock
jb
add
add
jo
add
add
add
nop
jb
add
xor
insl
cli
inc
add
sahf
push
add
jl
test
nop
jb
aaa
outsl
xor
sub
nop
cld
jmp
int3
add
push
mov
push
inc
cmp
daa
xchg
add
add
add
and
stc
nop
jb
add
add
push
inc
add
sub
orb
cwtl
fnsave
cmp
test
nop
jb
add
mov
and
add
add
add
shll
nop
cld
jmp
mov
imul
aad
and
stc
nop
jb
outsl
mov
add
jnp
push
mov
xchg
ret
add
cli
add
cmp
stc
nop
jb
lret
add
inc
add
out
ljmp
and
nop
jb
mov
push
or
stc
nop
jb
outsl
add
add
xor
pop
stc
nop
jb
add
add
call
add
cld
jmp
add
aam
outsl
add
mov
xchg
ret
jo
add
add
xorb
add
add
add
dec
add
nop
jb
add
push
cwtl
cltd
out
nop
push
mov
xchg
ret
aaa
add
or
jnp
dec
add
mov
xchg
ret
adc
jg
lret
nop
jb
add
movsl
imul
add
or
nop
cld
jmp
aam
add
lahf
lret
add
jo
jle
test
stc
nop
jb
add
xor
dec
sub
nop
jb
add
fildl
jmp
jo
faddl
add
sahf
sub
nop
cld
jmp
lret
xchg
add
outsl
ficompl
jb
push
lock
add
lock
add
mov
push
push
lea
fcmovnu
inc
add
add
jecxz
inc
add
xor
jg
xor
add
stc
nop
jb
add
adc
add
add
nop
jb
add
add
inc
add
add
stc
nop
jb
pop
mov
add
cld
jmp
add
idivl
mov
stc
nop
jb
add
insb
push
add
nop
cld
jmp
mov
push
add
add
stc
nop
jb
cwtl
add
add
push
mov
xchg
ret
jo
add
les
jae
popa
nop
cld
jmp
add
pop
add
mov
nop
cld
jmp
aam
dec
ret
xchg
add
testl
jg
add
add
xorb
add
add
mov
loope
stos
jne
stc
nop
jb
xor
mov
stc
nop
jb
add
fsubrl
mov
mov
adc
nop
jb
lret
sti
ljmp
jb
pop
add
add
adc
out
add
push
mov
xchg
ret
add
mov
cmc
rolb
rep
stc
nop
jb
add
mov
gs
lds
add
stc
nop
jb
add
xor
in
cmp
add
jns
add
mov
mov
nop
cld
jmp
add
add
les
mov
stc
nop
jb
add
addr16
add
cld
test
nop
cld
jmp
adc
or
add
jmp
adc
add
rep
push
mov
xchg
ret
add
nop
cld
jmp
stos
data16
add
cmpb
fdivl
add
insl
jae
nop
jb
jg
fstl
add
nop
cld
jmp
jg
add
imul
push
stc
nop
jb
cwtl
add
aaa
or
or
mov
stc
nop
jb
sahf
repnz
pusha
push
mov
xchg
ret
gs
cwtl
add
mov
xchg
ret
cwtl
add
push
stc
nop
jb
notw
lret
mov
nop
cld
jmp
add
nop
jb
call
add
add
aad
inc
add
jo
mov
cmpl
nop
cld
jmp
xchg
stos
mov
dec
sub
nop
jb
add
movsl
int3
jbe
rorb
stc
nop
jb
add
lods
and
imul
add
pop
cmpsb
mov
aas
add
add
cwtl
pop
popa
add
add
out
mov
stc
nop
jb
data16
cmp
popa
add
nop
jb
add
das
mov
nop
cld
jmp
add
cltd
xor
add
add
popa
add
cld
jmp
testl
fbld
popa
add
nop
jb
add
xor
xchg
jns
popa
add
mov
xchg
ret
add
shrl
add
add
mov
imul
nop
jb
outsl
out
or
gs
mov
nop
jb
outsl
loop
add
cmp
nop
cld
jmp
xchg
push
add
insb
xor
stc
nop
jb
mov
add
jg
add
call
nop
cld
jmp
add
add
cmpsb
inc
xor
nop
cld
jmp
call
add
jl
xor
adc
inc
add
frstor
mul
sbb
stc
nop
jb
mov
testl
nop
jb
add
add
iret
popa
stc
nop
jb
add
lahf
imul
popa
add
mov
xchg
ret
add
orl
add
incl
xchg
add
stos
sti
add
lret
xor
push
mov
xchg
ret
add
shrl
nop
jb
add
imul
nop
jb
add
add
add
pop
and
nop
cld
jmp
int3
cwtl
cwtl
add
fldl
sahf
shr
push
mov
xchg
ret
add
add
xor
stc
nop
jb
cwtl
imul
test
nop
jb
imul
nop
jb
add
add
cmpsb
outsl
push
jmp
add
push
call
mov
stc
nop
jb
lock
repz
add
scas
bound
mov
xchg
ret
jg
add
stc
nop
jb
add
call
jbe
jp
sti
stc
nop
jb
add
jno
testb
lds
mov
xchg
ret
push
add
pop
inc
jp
or
nop
jb
add
add
push
call
nop
cld
jmp
add
cwtl
add
jb
cmpsb
push
push
xor
cwtl
rolb
dec
nop
cld
jmp
mov
aaa
add
add
add
add
push
mov
xchg
ret
add
cmp
jb
sti
add
add
out
add
add
nop
jb
aaa
xchg
add
mov
jmp
popa
add
cmpsb
push
add
int3
add
stc
nop
jb
cltd
add
add
decl
push
mov
xchg
ret
add
jb
mov
stc
nop
jb
out
pop
add
add
je
nop
cld
jmp
add
adc
add
stc
nop
jb
fsubr
or
adc
mov
stc
nop
jb
add
add
or
add
loop
xchg
addb
mov
stc
nop
jb
loop
add
fists
cld
jmp
jg
data16
add
stc
nop
jb
aam
gs
push
pop
inc
add
imul
sar
nop
jb
add
cltd
cmpsb
call
stc
nop
jb
or
adc
mov
push
mov
xchg
ret
add
add
dec
mov
push
mov
xchg
ret
add
xor
add
stc
nop
jb
adc
push
mov
xchg
ret
out
add
sti
add
add
incl
ret
push
xor
cmpl
nop
cld
jmp
pop
add
mov
add
add
nop
jb
pop
call
in
jne
stc
nop
jb
pop
cwtl
adc
aas
test
push
mov
xchg
ret
popa
lock
cmp
sar
jb
xor
int3
pop
add
and
les
stc
nop
jb
ds
add
dec
push
mov
xchg
ret
imul
je
stc
nop
jb
add
or
movsl
stc
nop
jb
fisttpll
add
push
stc
nop
jb
jg
xchg
ds
add
push
dec
mov
push
mov
xchg
ret
xor
add
insl
mov
stc
nop
jb
add
mov
cmpl
cmpb
lret
add
lock
sub
push
sub
mov
inc
add
stos
imul
add
add
add
out
push
stc
nop
jb
add
add
movsl
adc
movswl
stc
nop
jb
add
xor
cs
push
mov
xchg
ret
add
fs
inc
nop
cld
jmp
or
add
movsl
push
jno
rol
add
loopne
add
nop
cld
jmp
or
clc
push
mov
xchg
ret
call
mov
nop
jb
add
add
ljmp
stc
nop
jb
jg
data16
movsl
negl
dec
cmp
nop
jb
mov
repz
sar
jne
stc
nop
jb
lret
fisttpll
stc
nop
jb
add
incb
and
call
lock
add
add
push
bound
add
jne
sbbl
stc
nop
jb
add
jo
aaa
loopne
or
sbb
nop
jb
mov
insb
mov
push
mov
xchg
ret
ret
add
rolb
mov
stc
nop
jb
add
or
addb
add
lret
mov
in
mov
stc
nop
jb
add
add
push
dec
mov
stc
nop
jb
lret
add
add
jnp
jmp
fiaddl
add
pushl
push
mov
xchg
ret
int3
add
out
push
stc
nop
jb
adc
imul
mov
stc
nop
jb
push
out
mov
adc
nop
jb
add
frstor
arpl
add
nop
jb
mov
add
out
add
addr16
push
andb
add
outsl
mov
cmp
cltd
out
stc
nop
jb
add
out
mov
mov
xchg
ret
add
jg
add
mov
ljmp
mov
add
or
call
stc
nop
jb
push
fldl
clc
jmp
stc
nop
jb
sti
add
dec
add
stc
nop
jb
or
mov
bound
loope
mov
ret
or
add
xor
xchg
stos
das
add
ret
mov
xchg
ret
add
popa
add
mov
xchg
ret
add
addr16
out
inc
add
add
add
mov
fisttps
add
popa
sahf
add
mulps
nop
jb
pop
add
mov
add
stc
nop
jb
add
add
outsl
mov
stc
nop
jb
add
ret
xchg
push
aas
push
push
mov
xchg
ret
das
adc
jmp
jmp
add
add
ds
incb
repz
nop
jb
add
add
in
mov
stc
nop
jb
mov
fstl
shrl
nop
jb
adc
jno
jle
stc
nop
jb
outsl
lahf
add
addr16
or
test
nop
cld
jmp
out
ljmp
sahf
pop
stc
nop
jb
sahf
add
mov
add
nop
cld
jmp
pop
pop
add
mov
push
stc
nop
jb
add
add
add
jns
icebp
nop
cld
jmp
add
add
jg
add
push
mov
add
js
es
add
add
test
stc
pop
nop
cld
jmp
mov
push
add
sbb
jl
inc
add
add
add
inc
add
add
nop
cld
jmp
add
jg
add
jle
stos
stc
nop
jb
add
pop
push
mov
jne
stc
nop
jb
add
pop
xchg
mov
repz
insb
add
inc
add
add
stc
nop
jb
jno
loop
xchg
xor
mov
push
mov
xchg
ret
ret
das
add
jmp
stc
nop
jb
add
or
mov
xchg
ret
lahf
add
dec
inc
push
mov
xchg
ret
adc
add
lret
mov
sar
nop
jb
das
add
add
stos
add
add
nop
jb
xor
add
movsl
outsl
mov
stc
nop
jb
fcompl
add
add
inc
and
stc
nop
jb
jno
mov
dec
idiv
stc
nop
jb
or
addb
mov
nop
cld
jmp
add
xchg
push
int3
add
adc
jno
mov
nop
cld
jmp
imul
stc
nop
jb
cwtl
cwtl
cwtl
xchg
jg
or
je
stc
nop
jb
add
dec
mov
push
mov
xchg
ret
add
add
push
mov
xchg
ret
sti
add
lock
mov
add
nop
cld
jmp
add
jmp
mov
adc
cld
jmp
add
add
push
nop
cld
jmp
add
fisubrl
popa
add
rep
stc
nop
jb
ds
stc
nop
jb
sahf
add
mov
sbb
jb
xor
add
pop
push
jne
stc
nop
jb
jg
ljmp
stc
nop
jb
add
lock
stc
nop
jb
mov
jno
das
ret
add
jb
mov
push
push
mov
xchg
ret
imulb
add
add
int
inc
inc
add
call
mov
push
mov
add
movl
out
jge
or
inc
xor
stc
nop
jb
xor
mov
stc
nop
jb
lret
add
add
sbb
loop
add
add
add
je
push
push
stc
nop
jb
das
add
add
add
mov
xchg
ret
add
add
lea
stc
nop
jb
int3
add
test
sub
nop
jb
add
xor
cli
jg
pop
ret
movsl
xchg
xchg
add
in
stc
nop
jb
add
jb
add
mov
adc
nop
jb
add
gs
push
mov
xchg
ret
add
adc
push
cld
jmp
add
add
xchg
enter
jb
sti
push
lahf
add
or
jbe
inc
add
push
cli
out
add
jmp
mov
xchg
ret
add
pop
push
push
mov
push
stc
nop
jb
add
sahf
mul
add
sub
nop
jb
sahf
loop
add
push
nop
jb
call
pop
pop
stc
nop
jb
push
ret
or
popa
lahf
add
dec
add
nop
jb
ljmp
stc
nop
jb
add
add
add
mov
nop
jb
jo
add
outsl
cmc
cmc
je
notl
jne
stc
nop
jb
call
sub
nop
jb
lahf
add
add
add
stc
nop
jb
imul
push
mov
xchg
ret
mov
idivl
nop
cld
jmp
adc
jno
add
inc
call
inc
add
add
call
pushl
out
incb
js
nop
cld
jmp
fcmovu
add
add
rdpmc
sar
jb
add
test
stc
nop
jb
int3
lahf
dec
mov
nop
cld
jmp
or
aam
add
jb
test
add
add
push
mov
xchg
ret
mov
pop
stc
nop
jb
addr16
push
aaa
cwtl
xor
loop
inc
add
push
stc
nop
jb
sti
add
add
dec
add
add
add
push
dec
push
stc
nop
jb
add
add
adc
add
mov
nop
cld
jmp
int3
add
aam
mov
cwtl
add
add
lret
add
add
add
popa
cmp
stc
nop
jb
data16
mov
sti
add
nop
cld
jmp
add
add
add
mov
fisttps
test
sti
call
call
add
jb
add
add
push
decb
jb
add
add
add
push
stc
nop
jb
jg
mov
aam
add
cmpb
call
sub
nop
jb
push
add
cmp
stc
nop
jb
cwtl
outsl
pop
imul
in
add
add
mov
inc
add
add
mov
add
stc
nop
jb
lock
mov
stc
nop
jb
xchg
xchg
stos
cmpw
stc
nop
jb
mov
or
add
mov
stc
nop
jb
add
add
add
add
les
jae
jae
movzwl
stc
nop
jb
pop
adc
fcompl
cs
stc
nop
jb
or
push
add
mov
incl
adc
jo
add
nop
cld
jmp
add
add
adc
nop
jb
jno
add
stc
add
add
incl
xor
nop
sub
nop
jb
int3
das
stos
add
mov
lret
add
add
add
jg
mov
cmc
pop
call
nop
cld
jmp
aaa
add
or
sub
stc
nop
jb
add
or
add
adc
inc
nop
cld
jmp
lret
xchg
ficompl
add
and
stc
nop
jb
testl
stc
nop
jb
out
add
push
pop
or
mov
test
mov
cltd
or
in
add
add
sarl
ds
stc
nop
jb
add
cld
jmp
sti
aaa
lret
add
lret
popl
stc
nop
jb
mov
leave
lea
nop
cld
jmp
lahf
add
xor
lock
jb
mov
jg
add
mov
nop
jb
add
jno
daa
inc
add
and
ret
push
stc
nop
jb
pop
lock
add
nop
jb
cltd
out
movsl
add
add
adc
dec
push
stc
nop
jb
aaa
add
add
mov
push
mov
xchg
ret
push
mov
rep
nop
cld
jmp
add
add
sahf
xchg
add
add
nop
cld
jmp
fisttpll
inc
scas
mov
stc
nop
jb
xchg
stos
out
data16
add
cmp
ret
pop
outsl
add
outsb
push
stc
nop
jb
add
add
mov
jb
mov
jo
jmp
cld
or
leave
ljmp
add
push
push
mov
xchg
ret
testb
add
call
incl
jg
add
mov
push
mov
xchg
ret
test
stc
nop
jb
xchg
ljmp
fcoms
in
in
add
add
pop
sbb
add
add
data16
jne
nop
cld
jmp
add
stos
add
push
aas
lea
nop
cld
jmp
add
les
pop
push
stc
nop
jb
add
cmpsb
add
xchg
stos
dec
and
stc
nop
jb
add
mov
stc
nop
jb
call
add
jno
add
nop
cld
jmp
add
add
ds
jb
adc
pop
add
xor
sub
stc
nop
jb
add
pop
add
nop
cld
jmp
add
add
add
std
add
stc
nop
jb
loop
add
add
add
add
add
out
mov
stc
nop
jb
add
pop
push
sahf
movl
in
add
popf
lcall
cli
pop
add
add
stc
nop
jb
jg
add
outsl
fwait
push
push
mov
xchg
ret
add
test
add
call
pushl
or
ds
stc
nop
jb
add
add
stc
nop
jb
push
outsl
imul
jmp
nop
cld
jmp
add
add
add
adc
cld
jmp
data16
repz
pop
stc
nop
jb
add
add
sti
add
mov
mov
xchg
ret
add
out
push
xchg
xchg
cmp
mov
xchg
ret
add
nop
jb
push
lret
add
mov
nop
cld
jmp
or
ds
movb
lea
cld
jmp
testb
add
gs
ds
std
pushl
stc
nop
jb
lock
divl
popl
dec
cmp
nop
jb
mov
inc
add
insl
or
stc
nop
jb
add
cwtl
add
jge
test
fdivr
call
incl
loop
mov
jmp
gs
aaa
xchg
add
add
jmp
cmp
ret
mov
add
stc
nop
jb
outsl
add
outsl
add
mov
xchg
ret
call
mov
nop
cld
jmp
add
add
cli
pusha
push
mov
xchg
ret
push
add
aaa
out
inc
add
mov
xchg
ret
add
add
push
nop
cld
jmp
xchg
ljmp
mov
nop
jb
jg
movsl
add
jmp
stc
nop
jb
add
mov
mov
cld
jmp
or
sti
add
xchg
add
mov
nop
cld
jmp
add
add
fs
insb
add
nop
jb
add
add
jae
call
stc
nop
jb
add
loop
cmpl
nop
cld
jmp
push
jg
movsl
pop
add
add
jmp
subb
incl
add
stos
add
push
mov
xchg
ret
add
sub
xor
add
stc
nop
jb
add
mov
stc
nop
jb
add
add
push
pop
push
mov
xchg
ret
add
fiaddl
fcmove
call
stc
nop
jb
outsl
cwtl
add
push
push
mov
xchg
ret
add
add
add
add
mov
stc
nop
jb
fiaddl
imul
fdivr
stc
nop
jb
add
iret
push
push
mov
xchg
ret
add
add
xor
stc
nop
jb
movsl
add
adc
mov
xchg
ret
add
adc
push
stc
nop
jb
imul
fcmovu
jmp
stc
nop
jb
add
add
lea
nop
cld
jmp
out
add
add
stos
stos
stc
nop
jb
imul
mov
stc
nop
jb
pop
add
jbe
movswl
stc
nop
jb
ficoml
jge
icebp
stc
nop
jb
add
push
add
push
insl
push
mov
mov
add
fwait
test
sbb
add
and
fnstcw
and
icebp
cs
add
test
stos
outsb
notb
fstl
mov
and
push
mov
lret
jae
movsb
push
in
popf
lods
movb
mov
rolb
jmp
les
andl
sbb
mov
push
lods
mov
pop
dec
push
cld
mov
notb
rolb
cmpl
and
add
add
add
add
add
push
push
mulb
add
in
add
add
push
leave
adc
jle
jle
mov
cmp
and
cmp
add
dec
fnsave
jb
out
loopne
or
add
push
jae
rclb
jbe
scas
sbb
xor
gs
push
and
daa
ljmp
xor
mov
add
mov
cmp
and
dec
push
add
mov
push
or
cmp
rep
movb
cmp
add
idivl
pop
pop
stc
add
addb
inc
add
add
xor
cli
ljmp
andl
pop
dec
lock
mov
inc
add
and
das
and
sahf
xor
rol
inc
adc
xor
leave
int3
arpl
jbe
scas
mov
inc
push
int
sub
ja
jge
movsb
pusha
add
pusha
add
fwait
push
push
push
add
add
ja
inc
add
bound
lea
lahf
loop
jmp
js
adc
xchg
jp
lds
pop
movb
mov
ja
out
add
sti
push
sub
movsl
xchg
popa
int3
push
mov
inc
add
test
push
repz
add
loope
dec
in
xchg
gs
fwait
cld
stos
jns
add
sub
pop
inc
add
leave
mov
sub
push
xor
mov
add
outsb
fisttps
add
or
movb
cld
js
ss
dec
pop
shrb
lret
pop
inc
add
sub
das
push
xchg
xchg
out
adc
jae
repz
add
push
into
inc
mov
sbb
cmp
mov
xchg
push
in
pop
lock
inc
add
add
cmp
ret
and
enter
test
cmp
mov
jne
ds
js
add
int
sbb
mov
add
cmp
adc
push
adc
add
aam
mov
dec
std
aas
aas
addb
inc
add
push
mov
sbb
movb
cltd
add
lea
nop
ds
add
mov
ds
fisubrs
addb
sti
xchg
inc
mov
add
add
shrl
rcll
add
xor
loop
hlt
int3
mov
aas
mov
bound
jb
pusha
add
push
cmp
dec
cltd
add
lret
addb
lret
out
add
pop
mov
push
mov
call
sbb
pop
push
aam
dec
pop
std
lahf
xchg
pop
cmp
mov
fdivp
fsubrs
int
mov
mov
hlt
mov
in
cld
int
jbe
mov
mov
popf
sub
pop
inc
add
xchg
push
sbb
xchg
fnstcw
add
add
or
add
add
dec
adc
ljmp
pop
push
je
mov
psrlw
fstl
xor
add
loop
clc
mov
repz
movsb
dec
out
cmp
add
inc
add
xchg
cmp
add
push
and
js
adc
push
sub
pop
lds
lret
inc
inc
add
imul
adc
stos
lock
faddl
fwait
sub
repnz
adc
add
sbb
or
add
testb
fs
pop
fcompl
lods
inc
add
pop
sbb
pop
or
pop
shll
into
xchg
adc
rclb
push
xor
scas
loopne
add
popa
add
test
mov
test
or
xchg
outsl
or
adc
push
movsb
in
icebp
xor
jmp
or
xor
in
mov
loopne
fistl
mov
in
sub
aas
cli
or
lock
lods
push
ds
dec
daa
jle
sbb
add
or
roll
pop
jbe
mov
hlt
add
in
cmc
jb
sbb
mov
out
imul
fcoml
arpl
mov
rcll
mov
push
add
cmp
hlt
push
mov
push
clc
inc
add
pushf
movsl
mov
jno
fdivrl
daa
in
push
dec
add
aad
push
testl
out
mov
pop
push
push
mov
add
test
insb
pop
xlat
out
loopnew
dec
addb
pushf
out
dec
mov
pop
inc
add
mov
inc
add
aas
xor
add
adc
pop
in
ja
xor
out
add
enter
mov
or
out
pavgb
inc
add
addb
daa
xor
outsl
testb
dec
int3
out
mov
outsb
aas
mov
add
cmp
filds
add
inc
add
lods
mov
or
inc
dec
xor
rorb
sub
mov
add
lods
loopne
add
test
mov
mov
xor
cld
outsb
sbb
mov
mov
loopne
xor
jae
jns
shl
bound
enter
push
inc
add
mov
inc
add
mov
mov
addr16
or
and
movsb
or
out
push
loopne
add
pusha
add
dec
push
lret
fmull
pop
push
push
lcall
mov
push
dec
push
lods
mov
cmpsl
mov
in
xchg
push
les
mov
jle
imul
mov
mov
xlat
sub
adc
add
into
fmuls
pop
mov
xor
add
pushf
ret
push
in
fs
cmp
aaa
leave
cwtl
cmpsl
fcmovne
push
or
ret
and
scas
xorl
add
xor
sbb
mov
and
push
and
mov
push
gs
mov
mov
cmpsl
sub
cmpsl
jecxz
lahf
and
cmp
push
leave
cmp
aaa
mov
mov
add
push
sahf
leave
enter
cltd
dec
cmpsb
cmp
xor
add
cmp
cltd
sbb
popf
rolb
mov
sbb
cwtl
xor
inc
push
push
adc
fisubs
pop
and
test
rorl
adc
iret
lcall
cmp
push
fs
adc
cmc
cmp
add
add
sub
add
add
add
add
lock
enter
jp
movsb
mov
mov
add
add
inc
fnstenv
dec
das
bound
cmp
es
pop
clc
push
test
call
add
imul
push
add
into
push
push
push
add
add
clc
scas
add
mov
mov
lret
leave
xchg
loopne
test
pusha
add
add
loop
cs
add
jne
les
gs
cltd
sub
add
push
and
out
arpl
pop
mov
mov
push
add
out
imul
mov
or
add
jns
push
das
insb
addr16
out
ljmp
cmp
xchg
mov
leave
cmp
scas
mov
jo
test
add
cmc
push
ret
in
into
rcll
lds
inc
jg
jo
add
inc
add
not
sub
xor
dec
loopne
jle
add
dec
dec
ss
pop
xchg
lret
add
jge
imul
insl
pop
mov
repnz
arpl
push
adc
add
pop
jecxz
mov
mov
mov
add
xchg
mov
add
loope
int3
or
js
adc
shl
xchg
mov
xchg
cmp
sti
das
loop
cmp
and
or
mov
fadds
mov
add
lahf
fsubrl
sub
dec
mov
lods
icebp
adc
mov
ja
pop
rorl
xchg
fsqrt
addl
dec
popa
into
ret
imull
mov
pop
mov
cmp
scas
inc
repnz
std
xchg
fidivrl
adc
lcall
jp
mov
mov
hlt
jg
or
imul
jle
roll
add
lea
outsl
nop
lea
sub
mov
mov
and
push
pop
ds
fstps
movsb
lea
shll
mov
add
sub
test
mov
jae
cli
and
push
aad
popf
test
xchg
repz
aam
je
jge
js
add
test
jg
add
adc
xor
add
mov
fcomp
push
add
cmp
sti
mov
inc
test
out
popf
loopne
out
mov
xchg
clc
jo
lret
lds
xlat
add
test
push
pop
push
add
push
add
add
ret
mov
adc
pop
int3
cs
push
cs
fildll
pop
mov
pop
xchg
cmpl
add
adc
or
xchg
pop
rorl
xor
ljmp
push
popa
rorb
cmp
ja
mov
je
xchg
aas
loop
lea
sbb
add
ja
pop
fstpt
sti
xor
fstps
test
push
ss
add
add
xchg
cmp
sahf
jecxz
or
xor
xor
mov
dec
xchg
in
arpl
shrb
fsubs
mov
lods
xchg
push
add
mov
xor
mov
and
dec
jne
pop
cld
lret
addb
mov
add
sti
ffree
add
xchg
mov
jg
sub
addb
xor
ja
jb
not
mov
and
imul
int3
jbe
inc
rclb
das
jmp
cli
pop
nop
leave
bound
mov
push
inc
add
sub
dec
aas
mov
mov
and
rolb
xchg
mov
mov
fdiv
mov
push
aas
add
add
mov
push
sahf
sub
mov
add
int3
in
pop
mov
in
mov
sub
and
add
xor
ret
or
pop
and
cmpsb
mov
jle
addb
dec
jp
sub
add
inc
js
in
xor
cwtl
inc
clc
dec
pop
les
fs
cmp
mov
ja
mov
add
adc
cltd
lock
cld
std
fsubl
mov
imul
in
push
sbb
xor
cmp
test
fs
inc
add
das
sub
mov
push
xchg
faddl
pushl
push
push
mov
or
inc
inc
add
addb
je
lea
push
add
push
jle
loop
adc
imul
add
inc
add
xor
jnp
add
aad
cmp
jl
inc
add
iret
adc
mov
bswap
mov
dec
stc
mov
add
bound
addr16
cmp
icebp
daa
xor
sbb
add
and
jl
fistl
xchg
push
je,pt
mov
xchg
mov
lcall
xor
push
pop
sbb
pop
popf
std
out
fisubrl
or
sbb
sti
cmp
and
cmp
add
fnstcw
mov
dec
jecxz
inc
jl
ss
push
in
enter
fidivs
outsl
mov
daa
addb
add
std
adc
rorb
movsb
es
xor
ror
sbb
out
dec
out
cmpsb
addb
pop
cmp
arpl
add
jp
add
push
xor
stos
push
mov
mov
inc
add
addb
add
fwait
add
test
xor
push
faddl
das
xor
or
sbb
push
cmp
movb
iret
loop
out
shrb
jmp
outsl
or
loope
dec
pop
xchg
sub
add
inc
sub
adc
in
test
mov
add
gs
sti
pop
dec
mov
out
xchg
pop
insb
idivl
out
rolb
sbb
movsl
les
xchg
cmpsb
and
lods
adc
aam
sarb
les
lret
sar
pop
sbb
jmp
mov
movb
jp
sarb
jo
push
and
lgs
push
sahf
pop
mov
xor
hlt
mov
cmp
stos
dec
data16
adc
mov
mull
add
xlat
cmp
sub
mov
push
sbb
mov
ret
imull
mov
or
adc
dec
xchg
jns
sub
add
rorl
xchg
push
add
int3
hlt
ljmp
ret
mov
xor
out
adc
mov
and
out
jp
sbb
faddl
xor
or
pop
sub
or
in
xchg
stos
lret
mov
lods
and
rorl
mov
int3
mov
aas
sbb
ja
mov
sub
cmpsl
rcrl
dec
cmp
sub
add
sbb
adc
fstl
inc
add
scas
fistpll
mov
dec
std
mov
comiss
sub
or
add
pop
add
xlat
aas
ficoms
in
loop
iret
push
repnz
sbb
imull
or
push
add
iret
inc
add
add
dec
orl
add
int
ds
pop
test
xchg
bound
repz
test
adc
lods
push
add
or
add
aad
add
test
or
nop
aaa
lahf
pop
add
sbb
mov
sub
test
leave
mov
mov
test
cmp
pushf
shrl
push
jbe
shlb
xchg
dec
es
sbb
dec
cmp
nop
test
jne
jp
push
lds
sti
pop
mov
mov
addb
cmpsl
xchg
push
add
mov
jbe
jmp
adc
or
nop
pop
lock
lods
mov
pop
push
xor
addb
fcompl
and
loop
icebp
addb
pop
push
pop
add
add
cmpsb
sbb
es
jae
dec
mov
mov
test
cmpsl
add
adc
out
pusha
add
sbb
inc
add
bound
call
call
popa
sbb
adc
sub
pop
cmp
push
pop
or
lcall
notl
inc
add
mov
add
cmp
mov
cmp
push
xchg
js
fsubr
add
mov
loopne
jae
lods
pop
mov
pop
adc
fs
add
adc
movsl
fs
add
and
fcmovnb
add
xchg
adc
aam
rolb
add
in
mov
jg
add
shll
popf
push
and
adc
mov
or
inc
cli
or
sbb
and
pop
daa
adc
sbb
add
sbb
ljmp
add
ficompl
add
pop
cmp
imul
push
and
nop
or
sub
mov
add
cmp
addb
nop
xor
fs
add
les
cmp
addb
add
mov
add
ja
dec
jo
pop
adc
adc
mov
and
sbb
pusha
add
scas
adc
adc
add
cmp
cmp
add
push
add
sahf
test
rorb
jl
add
push
sbb
std
pushf
cltd
mov
adc
aam
jbe
lods
mov
pop
push
jle
ss
adc
pop
sahf
imul
mov
repz
cmpsb
adc
cs
push
lahf
mov
aas
mov
add
fwait
dec
jecxz
dec
mov
adc
add
sahf
insb
or
fs
call
sbb
push
or
fisubs
xchg
or
loopne
dec
jle
fsubl
or
pop
mov
jg
pop
rol
sub
les
sbb
lock
jae
cmp
and
icebp
mov
ret
add
sub
jge
js
mov
and
movsl
jae
imul
fists
add
push
jo
aas
dec
or
mov
xor
jo
or
std
cltd
mov
movsb
sub
bound
and
leave
pop
int3
xor
lret
mov
jae
push
bound
add
add
addb
into
pusha
add
pop
iret
int3
mov
mov
push
jbe
cmp
fmul
js
cs
mov
sti
xchg
push
popf
push
clc
dec
or
cmp
dec
xchg
push
cs
into
pop
ljmp
dec
xchg
push
pop
cmp
pop
pop
xchg
mov
add
push
jae
add
xchg
adc
inc
je
xor
loopne
sub
xchg
xchg
mov
add
add
lret
or
push
enter
sbb
dec
sub
and
add
add
inc
add
xchg
and
aaa
fdivl
jbe
dec
xchg
and
sbb
add
int
sahf
cmp
and
jns
xacquire
cmp
movsl
addb
fimuls
mov
cmpsb
jno
jmp
mov
fs
mov
cli
aam
ret
xchg
mov
cmp
pusha
add
rcll
lea
cwtl
add
add
jge
and
push
jmp
pop
xchg
andl
cwtl
cwtl
add
adc
sub
addb
adc
arpl
out
add
daa
pop
push
mov
add
scas
inc
add
cmpsb
mov
mov
into
xchg
nop
add
aad
cmc
pop
inc
add
xor
ret
ja
pop
mov
movsb
mov
sub
outsl
les
test
lcall
and
adc
jge
mov
es
negl
mov
add
fnstcw
mov
dec
xchg
mov
sub
add
xchg
sub
mov
add
ss
add
adc
push
push
ja
cs
rolb
insb
inc
add
lret
mov
add
fdivp
jl
jb
movsl
adc
inc
add
andl
fs
pushf
loop
mov
push
les
es
jle
cld
xor
xor
cmc
loop
inc
add
push
push
add
push
mov
add
xchg
rolb
popa
or
xchg
push
cmp
dec
add
insb
push
add
inc
repnz
stc
jno
rcrl
add
repz
mov
push
mov
cmp
and
xchg
out
push
sub
rcrl
add
js
add
sbb
negb
jmp
repz
pop
jl
push
sub
xchg
push
jl
pop
das
pop
and
sub
aam
or
cmp
adc
mov
stos
cmp
and
lcall
scas
outsl
imul
rorb
sbb
sub
pop
repnz
lea
cmp
rorl
xchg
push
out
push
inc
add
les
es
mov
mov
adc
out
jno
adc
push
and
ds
pushl
xor
add
inc
inc
add
add
test
add
roll
cmp
cld
pop
sub
sbb
add
pop
outsl
pushf
inc
add
mov
inc
mov
adc
add
or
xchg
xor
inc
add
ljmp
jge
add
call
leave
lods
movb
loop
sub
push
mov
add
aaa
adc
insb
sub
jns
lods
xor
mov
add
enter
pop
sahf
in
sbb
lahf
jg
pop
mov
aaa
lea
stos
sbbl
shr
push
adcl
add
add
xor
bound
insl
test
adc
in
lock
or
rolb
scas
rcll
add
and
sub
mov
jo
sbb
rolb
fldt
push
xlat
call
and
inc
add
add
mov
push
rolb
fadds
bound
push
inc
inc
add
push
pop
mov
dec
and
jnp
movsl
add
jecxz
cmc
and
pushf
or
jo,pt
aas
add
xor
jmp
add
mov
mov
cwtl
mov
fwait
jmp
push
mov
cmp
cmp
jbe
sti
push
std
sub
push
and
add
mov
enter
mov
mov
or
out
push
dec
into
in
add
push
adc
xor
push
jecxz
or
jmp
add
mov
or
lahf
add
out
mov
popf
dec
and
dec
pop
enter
adc
fucomi
lret
arpl
push
push
jo
sbb
test
lret
xor
add
mov
lea
insb
lods
xchg
ss
cmpl
or
pushf
leave
movb
jne
jbe
dec
lods
mov
lods
dec
jl
sub
mov
pop
cmp
push
adc
inc
add
push
fs
jo
add
add
xchg
loopne
xchg
jge
sub
mov
cmp
sbb
in
cmp
inc
inc
jmp
and
add
sub
jnp
fbstp
std
je
jl
in
sub
imul
add
cld
jmp
add
mov
insb
ret
xor
add
mov
in
push
mov
pop
inc
add
add
inc
inc
add
arpl
add
inc
out
add
idivb
jae
pop
das
or
mov
lcall
adc
or
push
add
cmp
rorl
fcoml
jae
pop
divl
pop
imul
add
mov
and
outsl
bound
rolb
lahf
ds
lods
xchg
mov
push
addr16
repnz
dec
push
dec
shll
stc
and
clc
cmp
xchg
inc
shlb
ja
cmp
neg
pop
dec
mov
mov
add
and
adc
push
sub
mov
add
xor
ja
ret
dec
inc
add
xlat
out
add
imull
adc
lcall
mov
jge
mov
jle
xor
popf
outsl
ret
and
push
in
xchg
mov
aad
sbb
mov
add
add
inc
push
insl
jp
xchg
pop
outsb
dec
leave
mov
rcrl
nop
fs
dec
cmp
dec
int3
mov
mov
pusha
add
jge
je
aaa
pop
addb
stos
mov
fildll
mov
mov
ds
fistl
jne
mov
fdivl
scas
in
inc
add
xchg
ds
add
mov
add
test
xchg
mov
inc
add
pop
jb
icebp
stc
inc
add
cmp
push
out
aad
cs
aad
imul
aaa
dec
test
out
inc
add
xlat
sahf
xchg
pop
scas
ss
add
mov
mov
repz
xor
int
add
dec
movsl
add
add
xchg
scas
das
xor
pop
aas
xor
push
mov
insl
jnp
leave
fdivs
addr16
loope
dec
jmp
xor
enter
xchg
cmp
xor
jecxz
push
leave
cmp
jb
push
add
jle
aas
loopne
lret
lds
clc
negb
mov
cmp
mov
or
mov
ss
add
mov
cmp
or
and
hlt
pop
fld1
fdivr
popa
outsl
jmp
add
cmp
loopne
addb
enter
inc
dec
xchg
pcmpeqb
das
push
add
lea
fwait
negl
inc
add
das
xor
js
insb
sbb
sub
fcmovne
xchg
into
push
add
test
bound
xchg
add
in
outsl
jae
sbb
addl
jbe
shrl
cld
jg
fdivrs
xor
add
jle
or
lds
inc
add
lahf
and
out
repz
mov
into
mov
ljmp
add
inc
add
and
lcall
cwtl
test
sbb
jmp
adc
add
mov
repz
inc
pop
and
inc
cmp
pushf
fbld
mov
fsubr
xchg
pop
fldl
add
dec
jl
movsb
cli
ljmp
enter
sub
jnp
fs
add
lret
dec
mov
sub
int3
mov
add
add
scas
scas
clc
sub
push
mov
aam
add
mov
mov
add
push
add
adc
add
cmp
add
add
mov
add
or
test
mov
in
add
mov
mov
je
repnz
jae
sbb
hlt
or
test
jo
jns
mov
fsubrs
notb
dec
lock
cmp
or
nop
clc
loopne
jg
add
push
mov
add
jo
cmc
sti
roll
stos
or
sub
sbb
data16
xchg
adc
mov
cmp
adc
mov
dec
sbb
add
mov
dec
pop
out
mov
inc
jae
addr16
pop
and
dec
push
add
push
ret
lcall
lret
mov
lret
add
push
inc
adc
add
or
mov
add
in
mov
cld
aad
sbb
fdivp
mov
inc
jne
test
pop
stos
xchg
lea
cmp
sub
out
xchg
lock
dec
je
insb
aam
movsl
cmpsb
cmp
mov
enter
out
loope
fcmove
rolb
popf
enter
in
cmp
das
pop
push
mov
repz
fisubs
stos
push
addr16
in
int
add
and
mov
mov
jne
mov
js
push
cmp
xchg
mov
fwait
jle
add
pop
fstp
mov
sub
ss
add
out
mov
arpl
sub
cmp
jo
add
jg
out
add
push
ficomps
in
xor
addb
std
outsb
std
cmp
fcoml
loopne
add
or
ds
iret
jge
sbb
mov
inc
mov
adcl
jne
loope
push
add
mov
ss
or
xchg
xor
mov
call
mov
push
add
cmp
jge
mov
xor
or
push
xor
and
fdivl
movsb
inc
dec
fpatan
cmp
test
fucomp
mov
enter
lcall
push
test
pushf
pop
out
push
push
add
xchg
mov
adc
roll
add
mov
or
scas
out
add
adc
push
rorb
addr16
add
mov
sbb
add
jb
push
and
xchg
mov
imul
add
jo
fwait
push
lock
add
movb
xchg
fndisi(8087
mov
push
cmp
mov
movsb
rolb
add
mov
mov
xor
int
add
lret
jo
js
add
add
dec
mov
les
and
add
mov
or
mov
jg
mov
int3
repz
pop
inc
lea
ds
lods
or
or
or
aaa
pop
insl
into
les
mov
add
mov
rolb
jmp
dec
js
test
lods
or
or
ja
mov
jg
add
mov
or
pop
hlt
mov
sbb
xchg
ljmp
mov
push
fs
add
xchg
dec
in
dec
test
add
dec
cwtl
or
inc
and
and
das
scas
xchg
js
scas
mov
in
aam
mov
pop
clc
cwtl
pop
pslld
stos
imul
sub
call
xor
add
jbe
pop
stos
nop
pop
push
sub
arpl
repnz
add
pusha
add
mov
lret
or
movsl
cld
and
int
sbb
test
in
add
mov
add
push
sub
cli
mov
or
flds
add
adc
fdivrl
jbe
add
push
mov
add
pushf
pop
out
inc
sub
filds
in
dec
std
push
outsb
sbb
in
int
push
mov
xchg
insl
jmp
jbe
xchg
or
add
ret
js
popf
call
lods
inc
add
insl
adc
aaa
jge
mov
mov
mov
inc
add
addr16
add
lcall
faddp
add
lret
fst
data16
adc
lahf
inc
add
push
dec
cmp
cli
cmp
je
mov
leave
adc
jmp
dec
popf
or
mov
inc
add
cmc
addb
sti
push
enter
neg
adc
jmp
add
pusha
add
lcall
jl
inc
in
mov
xor
je
inc
add
mov
nop
xchg
mov
movsl
pop
and
mov
std
dec
bound
mov
movsb
rorl
test
push
adc
insl
lea
aas
add
jg
movb
xchg
xchg
rcll
or
or
pop
mov
adc
adc
pushf
cwtl
lock
pop
mov
iret
push
pop
or
or
add
in
inc
scas
inc
add
dec
mov
stc
jae
mov
and
push
enter
test
scas
adc
cmp
sub
leave
dec
fidivrl
ret
insb
pop
cmc
je
cmp
sub
push
mov
add
xchg
fstpt
mov
pop
jecxz
ret
xor
xchg
ss
dec
sbb
adc
jne
movb
or
sbb
popf
mov
hlt
mov
jp
xchg
sbb
test
and
mov
movsl
or
mov
add
mov
push
scas
stos
fcmovne
fsub
lods
es
push
cmp
add
dec
mov
mov
addr16
shl
jnp
leave
fucomp
lahf
xchg
loopne
enter
in
sti
jns
bound
and
or
dec
enter
cmp
add
dec
add
pop
and
aas
push
push
lea
insb
inc
test
loope
cmp
mov
out
xor
cld
jne
pop
jae
xchg
rcr
cmc
je
aaa
mov
jl
cmpsl
dec
dec
push
pop
repz
sbb
add
adc
xchg
lret
sbb
inc
leave
repnz
leave
in
aad
pop
jge
subl
cmp
xchg
or
fcmovnb
cld
dec
adc
fidivrl
fistl
xchg
sahf
test
inc
add
or
ret
push
lock
jmp
mov
push
add
mov
sti
pop
aam
pop
lock
xchg
add
test
add
cwtl
pop
mov
shl
sub
push
add
repz
ja
addb
cltd
pop
or
pop
push
add
push
cmp
or
jns
loopne
sahf
movsb
and
out
addb
add
add
pop
aaa
sub
and
mov
lea
add
push
cli
test
push
inc
pop
lret
xchg
jle
mov
loope
xchg
pop
mov
cmp
lahf
inc
add
add
sbb
nop
mov
and
sub
dec
mov
ss
cs
cmp
cmc
in
push
movb
xor
sub
push
mov
and
pushf
addb
js
jo
add
pop
inc
add
out
das
insl
push
int
push
dec
in
push
mov
add
push
mov
mov
cmp
add
jge,pt
xchg
mov
xchg
scas
mov
flds
lds
jg
xchg
xor
jl
loopne
mov
xchg
addb
out
je
add
add
fadd
add
lds
mov
and
arpl
nop
pop
pop
push
out
ds
add
jo
pusha
add
ljmp
out
incl
out
sub
add
ja
lea
add
xchg
pop
mov
add
add
push
jno
imul
adc
push
aad
dec
adc
stos
into
out
xchg
cld
adc
pop
cmpsb
in
add
or
test
add
mov
add
lods
push
add
icebp
cmpl
in
push
jne
dec
push
cmp
and
dec
pop
push
mov
cmc
mov
cmp
dec
mov
adc
cmp
cmp
insl
movsb
pop
xchg
mov
cld
jg
xchg
adc
add
cli
stos
sahf
fdivrl
mov
jns
int3
inc
ret
movsb
fwait
sti
cmp
push
leave
pusha
add
inc
jo
pop
xor
cld
add
arpl
xchg
les
mov
push
mov
fildl
or
add
fimuls
xlat
outsl
jp
jbe
aaa
adc
in
cmc
add
xchg
inc
push
ror
test
aaa
ja
add
add
add
add
repnz
roll
xchg
pop
in
push
add
repnz
sub
mov
in
in
xchg
xor
icebp
js
pop
outsb
and
pop
addb
inc
add
push
mov
cmc
dec
movsb
dec
fs
loopne
cs
sbb
ja
in
push
add
hlt
sti
outsl
cmp
mov
sub
mov
jb
push
inc
add
jmp
adc
xor
mov
fwait
imull
arpl
mov
push
cwtl
push
into
push
or
dec
loop
adc
push
sub
lret
imul
iret
repnz
add
movsl
sahf
xor
cvtps2pd
sbb
xchg
js
and
arpl
adc
adc
mov
pop
in
testb
add
bound
xor
pop
enter
push
shl
pop
sub
or
into
sbb
add
mov
clc
and
dec
pop
daa
daa
or
das
mov
jp
icebp
push
enter
xor
add
loopne
addr16
outsb
sub
inc
cmp
sbb
lret
mov
cmpsb
xor
popf
scas
adc
cltd
ja
cltd
bound
mov
push
sbb
sbbl
jns
xor
cli
js
cmp
loopne
ret
clc
push
lds
add
xchg
subl
mov
pop
jge
fs
adc
pop
cmp
mov
xchg
mov
jbe
mov
inc
add
add
dec
cmp
scas
jecxz
je
jge
jo
pop
jl
xor
sbbl
add
adc
popa
nop
mov
sbb
aad
xchg
pop
sub
pushf
push
add
sbb
jecxz
lods
ja
sub
shrl
mov
loop
imul
roll
test
arpl
faddl
add
mov
cmp
pop
mov
add
pusha
add
arpl
xchg
mov
test
movsb
adc
imul
cwtl
or
mov
das
and
mov
add
add
or
push
lret
popf
shll
push
push
dec
dec
or
pushf
icebp
fwait
sbb
out
xor
dec
xor
cmc
push
movb
cmc
loop,pt
popa
mov
cwtl
loope
dec
jnp
ret
cmp
loop
adc
dec
hlt
stc
inc
stc
int3
cmp
movl
inc
popa
xchg
lds
popf
rolb
push
xor
and
sbb
xchg
mov
and
mov
sbb
mov
jl
divps
add
cmp
cld
cmp
add
mov
test
pop
mov
jl
or
clc
mov
fwait
xchg
fstpl
mov
les
in
pop
push
cmc
pop
testl
popa
mov
sub
push
dec
xor
add
call
push
add
mov
mov
arpl
pop
aam
or
xor
inc
push
inc
int3
ficompl
lods
xchg
bound
adc
fldt
lea
or
ja
sbb
insl
sbb
inc
add
push
mov
orl
mov
add
push
xchg
xor
pushf
lahf
jge
mov
push
mov
push
mov
mov
xchg
ja
sbb
sbb
js
jp
ds
and
je
cmpsl
and
data16
pop
cmp
pop
mov
add
movb
push
aaa
mov
scas
mov
test
addb
mov
mov
icebp
popa
inc
js
nop
aad
inc
loopne
sub
and
jne
add
and
bound
mov
push
xchg
test
and
or
adc
stc
sbb
in
lcall
push
inc
xor
add
nop
outsl
or
jecxz
ja
call
mov
adc
movl
dec
pop
pop
ds
rolb
lret
movb
or
and
dec
hlt
js
cmp
cmp
xor
inc
add
repz
in
aaa
mov
adc
adc
pop
cmp
jb
sbb
cmp
andl
addb
mov
adc
cmp
mov
push
mov
cmp
mov
xchg
sub
and
cmpsl
or
fildl
or
jle
fistpll
mov
pop
mov
out
xchg
push
add
mov
ljmp
mov
ret
add
pushf
sbbl
stos
fildll
outsl
pop
jo
movsb
inc
add
add
xor
or
mov
jne
shl
fs
pushf
xchg
pop
addb
xor
loope
add
rolb
add
jmp
and
js
jp
cwtl
arpl
loopne
mov
lock
mov
add
out
std
out
mov
add
stc
add
ss
jge
jecxz
je
cmp
in
sub
inc
add
add
add
repz
dec
std
and
jb
push
add
pop
cmp
xchg
lods
daa
add
inc
add
hlt
data16
jg
dec
iret
lods
jp
mov
inc
add
or
clc
mov
int3
outsb
cmp
mov
dec
xor
int
push
inc
add
pop
dec
adc
add
xchg
lods
test
sbb
push
mov
xchg
add
icebp
jno
mov
add
jp
mov
lock
xchg
enter
lret
xchg
push
mov
or
add
add
je
decl
cmpxchg
inc
dec
xor
push
mov
cmp
idivl
mov
fcmovne
cwtl
je
and
add
add
cmp
cmp
mov
test
js
test
add
adc
pop
adc
popf
and
add
std
cmp
cltd
push
icebp
or
dec
movsb
or
push
cs
loope
add
cmp
fdivl
xchg
lds
jo
cmc
sbb
mov
push
add
movsb
xchg
lds
adc
mov
mov
add
push
das
pop
sub
add
mov
out
add
inc
add
inc
add
xor
mov
inc
add
addb
add
inc
add
movsb
movb
mov
in
sarb
and
ret
mov
and
and
in
add
pop
fimull
enter
rorl
jo
mov
add
mov
pop
adc
xchg
cmpsb
repz
out
je
add
inc
cmpsl
xchg
inc
mov
in
pop
mov
mov
or
push
dec
sarb
mov
in
push
add
pop
lret
or
test
and
lret
adc
lret
outsb
sub
and
test
hlt
mov
pop
adc
sahf
xchg
add
dec
xor
xor
mov
enter
mov
imul
inc
xorl
inc
lahf
and
sbb
adc
add
mov
pop
stos
cmp
sub
loope
and
sub
in
enter
jle
pop
sbb
add
je
dec
rcrb
sbb
sbb
cmpsb
leave
sbb
sub
gs
xchg
cli
repnz
mov
rorl
les
cs
in
je
mov
mov
adc
cmp
or
add
xlat
adc
js
imul
inc
add
in
cmp
dec
outsl
sbb
repnz
add
jno
xchg
arpl
test
jle
ret
jae
fs
adc
add
cmp
mov
add
in
xor
stos
mov
movb
push
pop
push
into
sub
imul
add
imul
sub
add
add
or
clc
ret
insb
xor
sahf
add
cmp
mov
mov
jb
sub
cmp
rolb
fstpl
xchg
and
sbb
movsb
cmc
in
add
pop
jae
adc
imul
add
push
and
popa
pop
sub
in
sub
enter
fldenv
xchg
ds
add
ja
cmp
adcl
push
push
out
dec
ds
mov
xchg
cmp
addb
cmp
push
cmp
iret
movsb
cmpsl
jecxz
movsl
mov
fisttps
enter
adc
push
jecxz
iret
xor
sub
repnz
test
test
mov
lods
jmp
out
mov
add
loopne
push
xor
pop
nop
add
jp
mov
xchg
into
fstps
xor
sbb
and
ja
adc
cmp
loop
imul
add
rclb
cwtl
lret
movsb
lea
cwtl
mov
test
sbb
push
mov
jb
push
addb
mov
sub
sub
jge
dec
sti
lds
dec
push
shll
add
or
mulb
xor
call
fiadds
xchg
pop
and
xchg
ja
add
push
cmp
add
dec
jmp
add
xchg
and
ret
pop
push
jle
adcl
cli
or
adc
add
add
add
cmp
outsb
xor
les
mov
fcoms
mov
bound
add
mulb
dec
les
jge
add
mov
and
mov
xchg
inc
add
push
rcrb
popa
mov
rclb
or
jbe
jns
arpl
add
push
mov
add
aad
test
dec
idivb
fsubrl
sbb
push
adc
jne
add
shl
mov
addr16
or
sub
nop
adc
fidivl
and
in
jg
and
jp
add
mov
fidivl
adc
pop
jne
mov
testl
or
arpl
je
mov
arpl
pop
xchg
and
in
or
fbld
jnp
mov
add
jg
mov
movsb
repz
into
jae
add
in
test
and
cli
aam
add
ja
stc
mov
leave
adc
or
jecxz
movb
js
add
and
and
lcall
jle
pop
xor
and
mov
xor
sbb
loope
test
add
insl
sbb
cmp
movsl
dec
fstpl
add
push
add
into
ficoms
sub
jns
pop
lods
shl
inc
jne
test
loope
popf
les
dec
jb
jns
push
push
sahf
xor
push
xor
enter
cmp
aam
fst
int3
int3
pop
jl
jmp
or
addb
add
in
mov
mov
cmc
push
xchg
aaa
test
in
setnp
or
dec
notb
mov
push
jne
insb
sub
jl
stc
mov
mov
idiv
outsb
cmp
jle
push
sbb
mov
sbb
in
les
mov
xor
mov
in
or
insl
movsl
jbe
mov
in
stos
jle
pop
mov
add
and
jg
mov
pop
cmp
ja
aam
add
into
push
or
inc
in
or
adc
jge
sbb
pop
mov
push
aad
xchg
pop
push
adc
aad
or
sti
lea
and
mov
shll
cmc
xor
fsub
or
in
lret
movsb
repz
clc
cmp
fdivr
add
xor
sahf
add
cmp
lock
insb
ret
or
add
bnd
pop
dec
mov
inc
mov
and
aaa
insl
jge
pop
inc
les
inc
add
dec
cld
inc
shlb
and
mov
cli
ja
mov
out
cmp
dec
icebp
mov
test
pop
jb
roll
push
push
jle
addb
add
fisttps
scas
in
fildll
mov
lds
icebp
pop
cltd
jl
in
fiadds
add
mov
mov
iret
inc
add
xchg
adc
iret
lret
lcall
cld
pop
xchg
mov
add
sbb
add
push
mov
sub
pusha
add
lcall
jo
add
adc
lahf
fisubl
sarl
push
xor
mov
cltd
pop
mov
mov
xor
flds
aaa
cmp
cmp
fucomp
gs
pop
cmpsl
or
sub
arpl
into
insb
cmp
and
in
adc
ret
push
push
ss
ret
ret
mov
xor
popl
add
stc
adc
add
adc
sbb
inc
add
insl
les
mov
addb
mov
xor
fistps
inc
xlat
mov
adc
add
into
and
mov
add
dec
lahf
nop
js
aaa
cmpsl
or
or
add
jp
mov
add
xor
mov
add
lahf
stc
xchg
sub
adc
inc
in
jo
pop
gs
sbb
mov
add
and
ja
push
cli
mov
repz
sbb
add
dec
mov
inc
imul
and
xchg
or
cmc
add
daa
scas
roll
hlt
stos
test
fcoms
push
pop
std
mov
jne
jp
xor
inc
outsb
imul
add
add
add
packssdw
mov
xchg
addb
add
in
ret
mov
dec
add
test
shll
add
jno
cwtl
rcll
mov
out
xlat
dec
iret
pop
sbbl
sarl
add
add
jecxz
pop
mov
jle
cltd
fwait
hlt
ljmp
addb
adc
es
add
mov
sbb
push
fisttpll
mov
xor
cltd
jle
pushf
dec
xor
and
push
sub
subl
push
add
ror
push
lahf
pop
pop
lods
outsb
mov
dec
jb
add
fcmovb
ret
mov
and
hlt
or
sub
xchg
les
jp
push
sub
cmpsb
cmp
pop
fs
jnp
imul
or
or
cmp
test
test
inc
jl
mov
xor
fwait
dec
addb
jb
and
inc
and
add
sbb
jae
psubusb
rcrb
push
addr16
add
fwait
cmp
add
mov
rolb
dec
das
mov
sbb
push
sahf
lcall
add
jg
arpl
jno
gs
sub
cltd
jmp
dec
mov
cmc
or
out
push
mov
test
lret
pushf
and
push
mov
push
call
sub
ds
add
mov
enter
out
push
add
dec
push
lds
cmp
dec
jecxz
andl
enter
dec
stos
jl,pn
mov
lahf
movsb
jo
pop
adc
add
jg
sub
hlt
lods
jmp
xchg
lahf
fcmovbe
ljmp
int3
add
cmp
movsb
imul
in
jb
jb
or
test
cmp
fsubl
add
and
stos
jge
sub
xor
repnz
mov
inc
add
pop
jnp
lds
mov
add
fistl
pop
cmp
je
add
jecxz
xchg
dec
push
xor
pop
mov
std
jbe
mov
out
cs
dec
lods
dec
sub
jno
inc
sets
mov
adc
mov
inc
lret
ror
jo
add
cltd
jae
cmpl
dec
xchg
jmp
inc
add
sub
popa
inc
add
movsl
out
js
das
out
add
mov
in
pop
inc
add
add
pop
adc
scas
aaa
or
or
mov
add
lods
adc
inc
xchg
push
or
lahf
daa
mov
mov
push
clc
std
ljmp
mov
push
push
inc
add
cmp
imul
aaa
mov
test
lock
adc
out
es
lret
les
mov
aaa
sub
pop
lods
push
ljmp
push
and
into
addr16
ja
xor
test
inc
add
xchg
test
pusha
add
and
cli
mov
cmpl
add
xor
movsl
xchg
xor
cmp
addb
add
iret
imul
sbb
adc
dec
aaa
rolb
jl
int3
rcrb
testb
insb
fcomps
inc
add
into
repnz
fsub
mov
test
neg
mov
xchg
lods
mov
mov
test
xor
jp
pop
jl
fwait
pop
pop
push
xor
mov
sbb
mov
mov
sysenter
and
gs
rcr
ds
jne
mov
jns
out
int3
pop
rolb
es
mov
pop
aas
and
push
cmp
adc
pop
ss
adc
fisttps
imul
cmp
xor
ja
add
ficoms
cmp
stos
pop
aas
pop
xlat
icebp
imul
or
out
enter
cltd
fmuls
scas
adc
and
imul
sub
aaa
push
push
lock
xchg
lcall
hlt
cmc
es
mov
dec
xchg
mov
jp
hlt
scas
sub
sbb
jp
or
addb
sti
pushaw
add
mov
xchg
mov
outsb
adc
ss
jmp
sti
mov
je
adc
dec
aas
xor
aam
lock
nop
lret
add
dec
cmp
in
fadd
add
sbb
shlb
jge
movsb
mov
leave
and
dec
mov
rolb
jo
nop
rcrb
sub
jae
add
adc
and
pop
in
add
sub
jmp
add
lea
notl
add
xchg
rcrl
mov
adc
test
bound
adc
cld
or
add
jo
push
lea
xchg
pusha
add
or
lret
mov
jl
sbb
les
sub
les
adc
mov
inc
add
pop
aas
je
ds
int
sahf
bound
rcr
mov
cld
rcrl
sbb
cmp
jp
rolb
sub
sub
in
cmp
nop
leave
cmp
push
jae
test
in
cmp
cmpsb
dec
movb
or
push
mov
aam
out
and
rolb
fnstcw
inc
add
mov
xor
push
mov
sub
mov
test
pop
sub
sub
push
scas
mov
rorl
test
ror
or
add
repz
add
xchg
stos
rcl
and
in
dec
sbb
mov
mov
clc
sub
add
sbb
jbe
mov
pop
shll
push
pop
cmpsb
pushf
imul
inc
es
inc
add
in
jns
shrb
jmp
add
mov
and
pop
fmull
in
scas
sbb
adc
ret
mov
lea
add
add
add
adc
or
pop
pop
jmp
clc
sbb
jecxz
movsb
sbb
outsl
or
add
add
adc
out
mov
add
push
cmp
rol
add
jmp
imul
dec
mov
xchg
stc
fldcw
ja
cwtl
sub
call
adc
and
add
or
xchg
mov
jp
mov
test
or
sbb
mov
mov
sbb
loope
sub
inc
mov
xchg
mov
add
sub
inc
pushf
add
cmp
push
xor
add
ss
lret
addr16
or
sub
sahf
bound
mov
add
add
ss
les
sub
fwait
pop
das
sarl
mov
add
test
hlt
cmpsl
rolb
mov
xchg
sbb
push
or
dec
sub
pusha
add
add
xor
cli
movsl
pop
inc
add
sub
dec
inc
add
jno
nop
fnstcw
stos
mov
mov
xor
push
adc
setno
add
or
pop
ss
dec
mov
or
js
rolb
inc
add
mov
ret
test
push
lea
outsl
or
mov
cmc
ficomps
fisttps
push
xlat
xchg
dec
popa
and
rolb
test
ficoml
mov
add
cmp
int
and
dec
imul
add
fcoml
dec
scas
test
or
pop
adc
pop
xchg
inc
mov
es
jge
or
iret
sbb
xchg
push
movsl
filds
add
ja
jp
je
add
xchg
adc
in
test
das
std
js
rolb
sub
sub
cmp
movhps
sub
add
xor
add
add
cmp
cmpsl
test
mov
pop
push
push
adc
mov
add
dec
imul
rorl
pop
adc
sbb
or
add
adc
leave
cmp
or
mov
and
sbb
adc
test
pop
cltd
pushf
cmp
xor
push
orl
add
adc
rorl
cmp
xorps
or
add
cmp
cmpsb
std
sbb
mov
movsl
daa
xor
fwait
popa
cld
pop
jge
and
add
jecxz
int
push
ret
repz
addb
add
test
xor
lcall
aad
mov
repz
jno
jnp
add
mov
jb
out
xlat
pop
mov
cmp
nop
sub
sub
fwait
stos
inc
xor
cmpsl
pop
ljmp
psllw
push
add
testb
mov
mov
popa
int
jp
mov
jle
mov
mov
or
jbe
clc
mov
and
shll
add
mov
sub
add
add
jecxz
cmp
adc
sbb
xchg
push
jne
aaa
cmp
icebp
iret
les
mov
lcall
mov
pop
int
add
out
sub
fmuls
sub
sub
jp
jg
fs
push
test
shll
popa
std
dec
lret
mov
sbb
xchg
repnz
xchg
hlt
imul
jmp
int
add
ds
lret
cmp
xlat
xor
out
dec
and
add
jmp
mov
push
push
push
xchg
jnp
pop
or
rolb
test
movb
push
jmp
or
das
or
xor
rep
mov
scas
in
xor
nop
fidivrl
mov
fdivrl
cmpsb
pop
mov
push
cmpsl
jbe
mov
fidivl
xor
mov
fcmovb
add
jmp
adc
imul
xor
stos
lret
btr
repnz
mov
rolb
dec
test
repnz
xchg
fisttpll
mov
xlat
mov
leave
lds
pop
sahf
cs
mov
aaa
shr
and
and
jle
push
mov
or
out
sbb
xorl
stc
adc
add
jo
add
std
or
movb
and
add
add
add
add
arpl
dec
shrl
nop
pop
nopl
push
add
lods
xchg
cmp
insl
mov
jb
xor
pushf
jecxz
mov
in
push
addb
mov
jb
lahf
xchg
pop
and
cmp
add
bound
mov
push
mov
loope
int3
inc
add
movb
aam
xchg
mov
add
xchg
fsubs
dec
loop
repnz
imul
pop
loopne
lret
cmpsb
jo
out
cmp
push
add
movsl
jge
rolb
in
test
ds
mov
bound
js
jnp
sub
xchg
sub
sbb
add
add
inc
add
mov
fdivrp
jnp
sub
nop
popf
out
push
push
add
scas
mov
inc
jno
xchg
fidivrl
sbb
jmp
stc
xor
jno
shrl
sbb
insl
data16
cli
into
cmp
adc
cmpsb
sbb
add
xor
insb
call
mov
sahf
mov
xchg
push
test
cmp
push
add
shll
or
mov
addb
mov
testb
movsl
xchg
mov
ret
mov
adc
aad
mov
int3
fcmovne
add
or
test
mov
mov
xor
add
lret
mov
outsl
pusha
add
test
addr16
add
gs
add
lods
push
dec
loope
add
inc
lods
loop
pop
xlat
add
add
int3
in
movb
test
rclb
add
into
mov
dec
jg
push
add
mov
leave
sbb
pusha
add
testb
mov
adc
add
out
mov
cmpl
jl
bound
push
or
add
int
xchg
mov
mov
hlt
jno
lods
pop
bound
xor
pop
mov
imul
lcall
adc
add
iret
mov
sub
sub
lods
xchg
mov
push
add
or
lea
jb
mov
iret
sbb
rol
add
test
add
push
push
mov
push
out
pop
jg
cmpsl
imul
dec
fadd
add
arpl
das
xor
faddl
outsb
add
pop
fisttps
jbe
or
aam
inc
add
into
in
aam
add
inc
add
xchg
xor
fcoms
xchg
add
cmpsl
cld
data16
or
jge
add
xor
in
cmpsl
adc
outsb
out
and
and
xor
xor
add
or
fildl
add
mov
add
js
xor
out
aaa
aaa
dec
or
mov
dec
addr16
and
repnz
add
in
cwtl
push
es
lods
pop
inc
add
mov
pop
inc
add
add
mov
ss
addb
rolb
add
mov
out
fwait
push
push
inc
add
lahf
out
add
mov
popf
xchg
inc
add
and
call
lea
adc
add
add
fs
das
ret
xchg
jp
ret
add
inc
ja
cmc
js
dec
outsl
in
and
scas
xchg
push
adc
scas
dec
cmpl
sub
cmp
rolb
push
jno
mov
push
sbb
push
mov
push
adc
add
push
es
nop
pop
mov
inc
add
sub
add
inc
pop
pusha
add
and
mov
pop
cmp
pushf
or
or
cmp
and
add
outsb
mov
and
mov
and
push
mov
xor
xchg
outsl
mov
push
add
xchg
and
or
shl
cmp
gs
sbb
es
mov
scas
add
mov
cmp
cmp
jecxz
xchg
mov
insl
add
pop
insb
xlat
ror
and
dec
jge
xor
les
push
jg,pt
test
mov
or
add
pop
loopne
inc
ja
pusha
add
rorl
and
cwtl
push
idivl
jae
add
incl
enter
cmp
shlb
shrb
stos
addr16
enter
add
dec
outsl
sbb
test
jns
pop
ret
out
lahf
addb
dec
and
sub
clc
add
sub
out
jnp
shlb
add
repnz
sub
xchg
mov
jne
frstor
ss
mov
sub
mov
mov
nop
rcrl
sahf
mov
icebp
sahf
adc
jns
pushf
je
add
sub
mov
sbb
mov
andl
or
push
add
mov
jbe
mov
gs
cmp
int
insb
enter
sub
sarl
lret
out
lds
cmp
adcl
dec
mov
addb
sub
push
movsb
ljmp
push
and
pop
cwtl
test
cld
aam
fcmovb
imul
add
mov
mov
jmp
mov
xchg
or
clc
push
inc
add
inc
add
lahf
or
fists
clc
xchg
or
fists
mov
mov
mov
xchg
sbb
push
jg
and
jmp
jb
dec
mov
or
add
push
lret
and
jmp
add
sahf
and
add
push
divb
xchg
leave
mov
add
test
push
jl
test
mov
adc
sbb
dec
dec
mov
adc
loopne
loopne
mov
insl
and
mov
cmpsb
les
ja,pt
out
push
addb
les
cmp
xor
data16
add
in
inc
add
cmpl
inc
and
rorb
cmp
cmpl
stc
jb
pop
pop
sbb
push
outsb
movsl
out
push
pop
adc
inc
add
rclb
mov
add
sbbl
jnp
push
cmp
mov
push
mov
fs
es
addb
xchg
cmp
or
sub
mov
testb
mov
rclb
imul
lods
pop
mov
push
pushf
cltd
clc
xchg
xchg
push
dec
cli
cmp
ds
push
in
lret
in
jae
sarb
sub
ja
or
mov
or
imul
jns
movb
pop
repnz
or
lret
dec
mov
mov
xor
pop
sub
outsl
jns
mov
xchg
sbb
clc
add
cmpsb
les
sub
es
sbb
daa
xchg
push
cmp
cltd
mov
sarl
imul
rorl
add
dec
shlb
aaa
sbb
imul
sub
shl
fmull
xchg
jbe
leave
int3
add
add
addb
dec
addb
dec
pusha
add
out
ret
add
ficomps
mov
push
cmp
push
add
sbb
mov
xchg
jne
xchg
pop
std
cli
jb
push
push
sbbl
pop
inc
adc
add
pop
xor
xorl
cmpsb
clc
rcrb
aam
insl
jmp
dec
mov
aaa
push
add
sbb
movsl
mov
rolb
adc
or
mov
pusha
add
inc
mov
aam
call
es
push
addb
aam
movsl
dec
inc
add
lea
mov
mov
jno
jne
mov
xchg
movsl
lea
pusha
add
inc
adc
jnp
add
cmpsl
cmp
dec
pop
insl
pop
out
and
mov
adc
data16
negl
xchg
out
mov
daa
outsb
out
inc
add
mov
pop
dec
lahf
imul
add
popf
sub
dec
xor
in
add
scas
dec
outsb
sbb
hlt
repnz
sub
loope
in
xor
lret
shll
sbb
jo
xlat
aaa
ret
scas
fsubl
or
cltd
mov
add
push
add
add
add
xchg
stos
add
pop
test
cltd
les
subl
cmp
outsb
aam
jae
out
and
jno
insb
pop
outsl
int3
xchg
pop
in
sahf
sub
mov
add
xor
pushl
pop
inc
pop
in
mov
add
lret
addr16
ds
add
movsb
jne
inc
add
lret
xor
add
stc
mov
adc
push
add
pop
pop
sti
les
mov
outsb
pop
jge
xlat
movsb
add
xchg
mov
es
cmp
je
inc
test
cmp
fldenv
push
mov
nop
cmpl
adc
add
push
dec
jno
dec
fisubrl
lods
scas
push
ret
mov
inc
add
add
leave
pop
adc
dec
mov
pusha
add
pop
cmp
je
mov
pop
adc
add
iret
mov
icebp
fistpll
add
push
sbb
dec
and
inc
cmp
movsl
adc
push
movb
mov
or
inc
add
sbb
lcall
or
sbb
jmp
add
xchg
jl
sbb
add
dec
pop
xor
add
sysenter
add
cmp
add
xchg
mov
psubsb
or
xchg
mov
js
add
in
shlb
sbb
scas
xor
adc
xor
mov
mov
mov
hlt
push
lods
mov
xor
mov
add
adc
mov
aam
test
xor
aas
cmp
xor
jge
rcll
mov
mov
lea
movsl
pusha
add
add
fsubrp
inc
add
pop
out
mov
push
xor
add
rcll
xchg
xchg
or
iret
pop
aad
xchg
inc
cmp
shll
xor
gs
mov
jmp
mov
je
or
movb
or
jo
xchg
insb
xchg
dec
pop
nop
imul
and
add
mov
jle
add
xchg
daa
jo
addb
outsb
cmpsl
xlat
addb
pop
inc
leave
rolb
mov
xchg
mov
mov
mov
mov
aam
aas
sbb
or
pusha
add
ds
fcoms
rcrl
in
cmp
sahf
mov
addb
pop
inc
inc
pushf
xlat
in
jbe
sahf
add
bnd
add
push
in
mov
add
xchg
sahf
and
jecxz
push
arpl
std
inc
sub
pop
mov
add
fistps
xlat
and
jnp
cmp
mov
test
outsb
cmpsb
pop
push
pop
fidivrs
inc
add
cmp
pop
adc
scas
into
xchg
and
test
subl
test
mov
scas
pop
mov
add
ljmp
push
or
adc
rolb
loope
pushf
sbb
testb
lret
mov
ds
stos
mov
mov
and
ret
aad
addr16
lods
insb
or
cmp
addb
sbb
mov
les
dec
jg
sbb
pushf
pop
sub
push
sub
mov
pushf
sbb
jecxz
mov
add
fisubrs
in
les
les
push
pop
pop
mov
out
push
loopne
jle
add
mov
or
dec
pop
mov
pop
xchg
pop
movb
add
add
scas
mov
push
pop
inc
xchg
fs
sbb
add
pop
movb
lcall
pop
add
inc
or
inc
add
xor
add
adc
xor
push
mov
pusha
add
daa
push
inc
fdivs
sub
xchg
movsb
flds
push
and
or
rorb
dec
aam
shll
jns
inc
sarb
xchg
mov
je
and
lods
int3
add
pop
mov
lods
cmpsb
jge
xchg
inc
gs
xchg
mov
push
adc
add
ret
sbb
jae
addb
cld
add
loope
and
rcr
rolb
std
or
and
adc
mov
int
lods
out
dec
add
sub
xchg
addb
cmp
repnz
mov
hlt
dec
test
enter
xlat
rcr
xchg
jo
mov
pop
aaa
xor
ss
lea
test
mov
push
lea
sub
xor
call
daa
in
push
rolb
add
sbbl
das
xor
xchg
mov
lods
sub
jle
add
sub
fsub
popl
shlb
pop
and
inc
sbb
add
test
push
scas
sysexit
cltd
cmp
push
sti
push
sbb
dec
inc
lea
scas
jno
enter
xor
add
cs
jo
clc
rorl
clc
mov
les
arpl
mov
shll
cmc
add
ret
shr
adc
adc
gs
or
sub
repz
jmp
sbb
cmpsl
add
xor
add
jns
cs
scas
mov
lods
xor
add
cmc
mov
call
in
add
and
jns
fs
inc
in
mov
ret
push
xchg
pop
mov
add
mov
xorl
pop
mov
push
cmp
dec
mov
icebp
inc
push
mov
cmp
add
idivb
fimull
mov
mov
add
xchg
popf
and
inc
add
mov
jge
lret
inc
mov
rolb
add
fimull
pop
xchg
mov
dec
addb
jl
addb
mov
bound
pop
add
mov
pop
dec
push
into
into
jns
pop
cmp
loop
sub
cmpsb
xor
pop
shll
test
add
mov
dec
outsl
je
mov
add
push
sahf
loope
xchg
aam
push
jecxz
mov
fcoms
aam
sub
or
test
cmp
push
mov
test
jne
jo
xor
jp
xor
xor
add
xor
push
ds
adc
fs
aas
adc
out
lods
dec
testl
add
mov
enter
scas
in
cmp
sub
mov
sbb
xor
into
jb
rolb
sarb
enter
mov
mov
popf
rcr
lret
jne
out
fwait
call
or
and
and
mov
cmp
inc
add
test
cli
dec
inc
stc
jo
or
dec
mov
arpl
aaa
aas
in
cli
les
mov
pop
mov
add
add
or
inc
add
or
cmpsb
ss
ret
push
mov
rolb
xlat
inc
add
push
sub
mov
jne
mov
int
xchg
test
cmp
adc
cld
aad
or
mov
mov
push
test
fwait
mov
xchg
cmc
cmpsb
dec
push
add
inc
add
mov
sub
cmpsl
nop
or
stos
mov
lock
mov
mov
add
and
dec
push
mov
xor
pop
rcrb
in
icebp
cmpsl
shl
int3
add
loopne
push
add
pusha
add
je
jno
and
inc
jmp
and
pop
sbb
add
add
in
sti
cmpsl
dec
xchg
xor
add
mov
add
shll
stc
and
nop
es
shl
jecxz
ljmp
daa
fdivl
or
addl
sub
cmp
cmp
imul
add
jbe
or
jge
js
icebp
out
push
or
add
or
mov
mov
mov
movb
ret
add
call
add
lock
mov
lret
fstl
jne
les
rcr
sub
mov
push
push
andl
push
dec
call
repnz
insb
mov
add
into
sub
mov
clc
pop
inc
test
shrl
ss
clc
adc
push
scas
call
je
push
lock
cmp
pushf
cltd
and
test
repz
mov
inc
add
or
adc
je
or
jo
add
mov
adc
add
test
adc
jge
jecxz
insl
fldenv
sub
mov
and
push
mov
adc
xor
stos
mov
inc
adc
push
lods
sbb
pop
repz
mov
add
inc
mov
aas
aad
push
rcl
add
adc
popa
addb
aad
adc
mov
ret
mov
pop
jmp
pop
mov
sub
sbb
push
dec
pop
jg
dec
movsb
mov
and
add
dec
mov
mov
dec
push
add
loopne
add
add
xorl
xchg
outsl
sub
insl
mov
mov
inc
add
lds
gs
pop
xor
mov
stos
addb
sbb
xchg
bound
pop
jge
cld
or
in
int3
std
andl
mov
movb
mov
pop
cmc
jo
dec
lfs
xchg
ds
in
jmp
mov
cmpsb
or
cwtl
dec
jle
and
push
jp
stos
or
xchg
out
inc
sbb
js
xorl
std
pushf
insl
daa
scas
aam
push
sbb
adc
inc
mov
les
call
in
bound
fmull
inc
add
les
stos
or
cmp
mov
sub
cmp
push
pop
and
inc
add
jg
rclb
push
insb
dec
adc
push
leave
enter
jle
add
lods
push
jge
sbb
addb
movsb
xchg
mov
pop
je
xchg
push
cs
jno
or
divb
jmp
jbe
add
out
stos
outsb
nop
std
out
fwait
jns
add
outsb
xchg
mov
add
add
push
sbb
lret
ja
mov
xlat
sub
jne
insl
cmp
dec
adc
inc
add
mov
sub
lcall
jns
add
cmp
jns
mov
es
jno
cld
add
mov
and
aaa
mov
cmp
mov
inc
xchg
movb
scas
mov
xor
rcrl
adc
dec
notb
push
and
jbe
sahf
push
dec
push
call
and
insb
inc
in
add
xchg
aad
adc
sub
ds
jno
xchg
jno
arpl
pop
lret
jmp
test
sub
cs
push
mov
add
lock
stos
ficomps
and
inc
cmp
pop
push
add
mov
mov
dec
addb
jno
mov
aam
add
xchg
mov
in
ss
dec
push
sbb
inc
add
mov
sub
push
movhps
sbb
push
std
jecxz
adc
push
fwait
jmp
pop
sbb
mov
sub
dec
cwtl
cmp
add
in
pop
xchg
mov
mov
inc
add
add
dec
jb
std
aam
stos
aaa
lea
cmp
add
sbb
mov
mov
mov
jno
mov
ljmp
jl
ret
or
xchg
dec
je
add
mov
or
cmp
lods
sbb
or
add
or
test
mov
mov
inc
inc
add
fwait
jae
inc
push
sbb
pop
cld
mov
pop
dec
jbe
pop
bnd
push
or
jae
punpcklbw
jge
xchg
outsb
mov
push
add
call
shlb
jp
das
outsb
mov
push
pop
push
push
and
jns
in
xor
aas
scas
sbb
aad
mov
inc
add
or
xchg
lds
jae
add
js
dec
sub
push
add
mov
lds
and
cmp
dec
test
ret
insl
push
fwait
inc
movsb
or
fdivrl
xlat
sbb
mov
pop
lea
jne
push
sbb
xchg
in
cwtl
adc
das
cmp
cmpsl
dec
test
or
ljmp
add
push
rolb
scas
cmp
add
test
adc
add
add
or
daa
data16
repz
push
imul
cmp
push
dec
sbb
ficomps
in
setb
int3
push
xchg
mov
ss
xchg
push
cmp
scas
xchg
mov
pop
jle
jecxz
add
xchg
pop
mov
sub
cld
addb
or
sbb
pop
sub
lahf
adc
xchg
push
xor
aam
shr
daa
pop
adc
scas
push
call
movsl
xor
add
jb
or
add
xor
pop
xchg
cltd
push
ds
push
jmp
or
add
sbb
jp
loope
loope
adc
mov
and
sub
mov
adc
faddl
add
scas
cmp
imul
sti
mov
test
mov
inc
add
dec
fstpt
push
xchg
addb
cmp
sub
mov
mov
scas
or
lock
sbb
push
add
stos
or
out
sbb
and
addb
leave
nop
lods
xchg
cs
adc
push
push
adc
outsb
aaa
jns
mov
popa
sbb
test
addb
arpl
shlb
daa
add
jae
add
mov
mov
jecxz
sub
mov
jmp
fcompl
mov
lds
add
rcll
addr16
shlb
xor
mov
jmp
xchg
jp
dec
std
or
or
inc
ret
repnz
xlat
bound
movl
int3
rcll
pop
and
test
sub
shr
gs
xor
outsl
mov
push
pop
lcall
jne
int
adc
mov
mov
insl
and
mov
jp,pt
repnz
sub
xor
add
mov
repz
loopne
lods
cmc
mov
dec
icebp
sbb
sbb
fists
loopne
or
popa
or
add
and
ret
cmpsl
in
add
adc
xor
inc
xor
lods
and
add
mov
in
clc
sbb
cwtl
mov
loop
add
sub
out
sbb
inc
jae
jne
pop
mov
stc
lahf
arpl
add
add
dec
xchg
jbe
sahf
inc
mov
cmc
and
in
inc
add
and
shr
xchg
sub
pop
mov
add
mov
mov
cmpsb
je
mov
stos
loope
add
pop
imul
jmp
nopl
rolb
jle
rolb
or
jae
test
jmp
mov
add
aad
addb
les
lods
into
add
in
lock
fs
add
ja
int3
dec
sbb
jo
inc
mov
xor
and
push
add
shll
sbb
xchg
repnz
or
loop
add
fistpl
sarl
and
into
jns
jg
mov
jle
mov
sbb
rolb
jae
pop
dec
gs
insl
xor
add
jp
insb
adc
lds
dec
mov
jl
pop
jno
sbb
stc
adc
enter
push
lahf
mov
fidivrl
mov
add
cmc
push
add
mov
push
mov
mull
inc
sbb
ret
js
lock
fildll
orl
mov
addb
outsl
add
xor
add
push
scas
mov
shll
mov
jg
lods
xchg
add
and
or
push
mov
sahf
sbb
add
sbb
pop
addr16
addb
js
idiv
bound
leave
sbb
nop
bound
jae
dec
jb
push
fadds
js
and
sbb
push
add
xorl
sub
ret
jp
add
pop
dec
mov
imul
pop
adc
icebp
push
xchg
testl
pop
addb
movsl
pusha
add
mov
add
add
ror
jae
add
or
outsb
outsl
xchg
pop
fsubrs
cmpsl
es
add
mov
test
in
rep
scas
pop
pop
fnstcw
iret
cwtl
mov
xchg
dec
jge
mov
sbb
scas
adc
fimuls
loop
jp
add
insb
mov
sahf
in
out
lods
xor
sub
add
add
mov
push
add
mov
sbb
lods
lcall
sti
outsb
test
ret
cmc
movb
add
adc
in
loop
scas
shll
xor
out
mov
faddl
and
or
mov
notb
loop
in
jp
xor
inc
add
sti
xor
mov
divl
pop
aas
fs
xchg
add
and
stos
out
push
cmp
sub
dec
ja
cmp
je
and
insl
inc
addb
cmpsb
in
jl
add
pop
mov
add
xor
and
shrl
xorl
cmp
mov
xlat
pop
adc
add
out
sub
xchg
loopne
add
nop
add
push
xchg
ljmp
movsb
adc
aaa
push
or
dec
jne
popf
xchg
addb
add
pop
jle
xchg
xcrypt-cfb
cmpsl
movsl
inc
add
mov
mov
leave
jp
mov
rolb
xchg
aaa
scas
in
add
mov
insb
xchg
ja
mov
in
jae
add
inc
push
mov
add
imul
lods
and
fdivs
mov
and
inc
pop
lret
jae
mov
les
call
jnp
push
cmp
inc
add
dec
outsb
xchg
lahf
inc
push
sub
cwtl
lods
sub
fwait
mov
lret
pushf
mov
dec
in
icebp
insb
in
xor
jae
xchg
push
add
xchg
push
add
add
cmp
fldcw
xor
add
out
sbb
es
sbb
fcomps
shr
mov
sbb
std
int3
dec
leave
adc
test
xor
int3
cmp
add
push
lock
add
mov
or
rcrl
jl
cmp
jb
pop
aas
mov
aad
add
jle
int
jmp
add
arpl
sub
test
mov
inc
add
jl
add
mov
pop
add
sbb
scas
outsb
xor
fiadds
adc
pusha
add
mov
cs
add
xor
popf
and
in
gs
add
ja
add
call
xchg
loopne
add
xlat
clc
lds
notb
and
loopne
sub
out
jmp
cmp
fiaddl
dec
insb
add
stos
push
adc
jb
mov
sub
add
mov
fsubrl
sub
xchg
enter
mov
cwtl
shll
sahf
inc
repnz
dec
push
int3
push
lahf
or
xor
mov
fcmovb
add
sub
sub
cmp
or
ret
xchg
or
or
ds
add
jge
or
jmp
aaa
nop
jnp
push
lock
adc
jno
mov
ljmp
icebp
je
nop
push
xor
mov
aaa
sub
outsb
mov
inc
jl
bound
das
mov
or
loop
pop
in
nop
imul
lret
pop
lea
pop
lea
test
sbb
sar
lcall
dec
jb
xor
mov
or
test
add
fcomp
xchg
in
lcall
push
loop
call
push
scas
dec
xor
push
adc
and
xchg
cwtl
scas
xchg
push
push
xor
pop
push
jle
sbb
sub
mov
inc
add
push
rorl
xor
jle
dec
mov
xor
or
aam
xor
negl
ss
and
pop
cmp
loopne
jns
rolb
add
call
jae
jg
mov
jnp
xor
aaa
mov
mov
or
popa
and
cmovne
dec
adc
and
sub
mov
add
inc
push
add
mov
add
inc
add
scas
lods
fcoms
rdmsr
xchg
pushf
jle
stos
inc
add
es
outsl
sub
test
rorb
xchg
xchg
jge
in
stc
add
loop
push
int3
mov
jnp
arpl
jo
mov
filds
jae
add
adc
out
je
push
loopne
and
in
inc
add
call
xchg
aad
inc
cmp
or
sbb
and
pop
pop
jb
mov
cmpsb
cmp
dec
sub
inc
inc
add
pop
rcl
mov
add
adc
cmpsb
xor
inc
add
pop
mov
mov
push
ja
jne
add
loop
inc
jbe
sbb
dec
fnsave
push
add
cmpsl
movsb
inc
pop
nop
clc
fnstenv
mov
adc
add
add
pop
mov
js
xchg
mov
or
mov
cmp
mov
sub
add
add
add
or
cmp
add
xchg
and
jl
lea
and
cmp
xor
add
jne
jg
mov
movsb
push
mov
dec
add
fldcw
adc
lods
sahf
sbb
ret
mov
sub
bound
or
mov
popa
out
stos
push
ret
sub
stos
sti
scas
xchg
cli
and
cld
fsubrp
xor
sub
push
mov
int
mov
daa
push
inc
add
decl
pop
pop
into
int
out
inc
add
cmp
mov
push
add
sar
dec
dec
lcall
mov
dec
adc
je
cmp
lods
mov
mov
add
add
jb
pop
mov
add
lock
push
dec
mov
pusha
add
cmp
add
mov
rorl
lock
adc
adc
adc
imul
xchg
cltd
add
scas
cli
xlat
mov
add
repnz
adc
in
leave
or
bound
add
and
pop
je
frstor
test
sub
pushf
push
call
push
pop
push
hlt
jno
aaa
mov
push
fisttpl
pop
nop
dec
xchg
push
mov
roll
jp
nop
pushf
addl
adc
ret
add
add
int
fnstsw
gs
push
push
insb
nop
fstps
clc
fdivl
mov
push
add
in
mov
push
add
inc
add
cmp
jns
xchg
dec
adc
sbb
and
stos
mov
add
daa
movb
push
add
iret
std
sub
inc
loope
mov
mov
lahf
movsl
cwtl
fdiv
fcoml
scas
jp
ss
sahf
cli
movsl
fs
movb
cwtl
push
add
add
add
idivb
jl
sub
or
dec
mov
mov
dec
mov
or
cli
sub
or
or
add
xor
enter
add
xchg
andl
outsl
and
in
ret
ljmp
push
in
stos
fnstsw
and
add
movb
mov
pushf
std
jae
call
jo
sub
das
and
inc
add
leave
ljmp
xor
jg
adc
nop
sbbl
cwtl
jmp
stc
cmp
pop
or
sbb
and
daa
and
sbb
add
clc
xchg
cmp
add
stos
mov
ficoms
jmp
rcr
dec
xor
hlt
mov
add
adc
or
in
and
xchg
and
adc
jmp
adc
xor
pop
in
inc
fisttps
jns
mov
sbb
mov
dec
arpl
add
cmpsb
rolb
add
add
sbb
add
xchg
insl
lea
fisttpll
test
rcrb
add
insb
movb
sbb
clc
addb
dec
test
loope
mov
ds
out
ret
or
idiv
iret
hlt
jmp
dec
and
adc
and
imul
or
jbe
xchg
testl
sbb
ret
sub
mov
mull
scas
mov
mov
inc
add
add
test
test
or
add
sbb
fs
add
mov
cmp
movb
add
xchg
movb
add
xor
push
cmc
stc
roll
ret
jb
pop
xor
lret
pop
fdiv
fcoms
push
dec
fwait
sub
sub
dec
lea
mov
testl
out
fwait
mov
ret
push
popa
addb
lahf
inc
movb
cmp
add
jbe
pop
rol
add
pusha
add
mov
pop
leave
and
cli
jb
add
cmp
add
add
xchg
inc
dec
es
mov
into
adc
icebp
aaa
aam
inc
add
pop
call
jne
aad
add
rol
or
add
in
aas
jo
movsb
cmc
sbb
sbb
adc
out
ficoml
inc
xchg
sub
int3
pop
jne
jo
add
inc
add
cmp
add
xor
mov
lret
mov
mov
add
ljmp
add
mov
add
pushf
out
push
xchg
jbe
sbb
dec
push
ret
out
mov
sub
jmp
push
fcmove
mov
rorb
sahf
mov
lods
push
dec
call
adc
jns
cmc
jge
fs
mov
rcrl
push
sub
add
int
add
je
je
add
add
les
in
add
cmp
push
lods
dec
push
sahf
push
xchg
rcrb
add
add
aad
stos
imul
rolb
int
and
sti
push
jne
cmp
add
push
fcomp
and
add
ret
mov
in
aam
pop
mov
in
xor
adc
push
jo
pushf
sbb
add
add
clc
pop
mov
dec
jl
leave
repnz
cmp
jp
lret
repz
loope
adc
xor
inc
mov
push
xor
add
cmp
shrb
mov
pop
pop
add
pop
inc
add
inc
loope
mov
stos
lret
inc
rolb
or
pop
pop
es
test
mov
outsl
xchg
jge
add
lret
xchg
dec
nop
push
in
lock
mov
loopne
or
jg
repz
jge
jg
idiv
cmp
mov
cmp
mov
std
orl
mov
add
push
and
pop
je
mov
or
ds
add
add
add
add
rolb
add
adc
add
xlat
mov
cmp
xor
ret
inc
push
rorb
je
adc
mov
fwait
inc
push
sbb
mov
fistl
sub
jnp
sub
sbb
in
loopne
addb
add
mov
adc
push
cltd
xchg
mov
jp
dec
push
xlat
inc
add
pop
push
or
js
sub
add
repnz
push
sub
scas
shlb
adc
add
fdivrs
and
aas
sbb
inc
mov
je
add
ds
imul
push
into
sub
add
add
push
dec
push
adc
add
pushf
cli
cmp
call
fs
add
popf
movsl
xchg
insb
rolb
aad
cli
cld
mov
add
in
movsl
inc
jnp
jmp
dec
xchg
mov
add
xchg
add
xchg
push
xrelease
jecxz
mov
fstpl
pop
outsb
sub
jmp
lds
data16
lea
or
sub
add
sbb
add
sub
les
adc
int
scas
mov
popf
cmp
sub
pop
nop
mov
dec
sub
data16
inc
cld
and
addr16
add
cmovg
adc
mov
adc
adc
iret
mov
mov
add
jne
or
addb
adc
iret
int3
add
pop
das
das
and
bound
enter
mov
jge
fs
mov
and
pop
and
add
scas
pushf
sub
js
xor
add
std
dec
mov
repnz
mov
dec
inc
mov
xchg
pcmpeqb
stos
sbb
into
push
mov
inc
add
dec
insb
dec
and
pop
sub
xchg
xor
imul
add
sahf
sub
clc
cli
sbb
mov
sti
xlat
adc
jb
xchg
push
dec
ret
add
add
cmp
pop
sbb
lcall
jne
mov
loopne
andl
rolb
add
mov
push
adc
ficoml
pop
sbbl
scas
adc
std
adc
mov
imul
rolb
add
pmuludq
add
mov
js
jmp
fstps
inc
js
sbb
es
clc
movsl
in
jle
push
ss
jnp
jl
push
add
and
xor
cmp
cmp
adc
cmp
rol
add
fldt
cmp
int3
push
pusha
add
call
mov
mov
push
cli
pop
dec
rol
jne
xor
lods
sub
xchg
pusha
add
xchg
jo
adc
ds
das
and
mov
mov
lret
sub
and
push
push
pop
sub
inc
xor
add
testb
cwtl
rorl
outsb
clc
cmp
std
sbb
mov
ret
mov
addb
jno
mov
push
cmp
fwait
clc
xadd
dec
int
sub
mov
push
addb
ss
xchg
add
add
mov
inc
add
mov
inc
add
mov
fsubrl
dec
sbb
add
push
jbe
cmp
js
aas
fstl
lahf
push
fistpl
rolb
lret
adc
mov
mov
out
add
add
sub
hlt
test
cmpsb
rolb
js
mov
pop
add
add
add
lret
test
sbb
mov
jns
sbb
xchg
sbb
sub
cmp
les
iret
pop
cmpsb
sbb
jle
and
dec
cmp
nop
mov
pusha
add
stos
xchg
push
rcll
addr16
mov
in
jb
outsb
xchg
cwtl
adc
sbb
cs
adc
and
pop
popf
mov
add
inc
and
inc
fndisi(8087
jnp
fsubr
push
mov
lret
pop
inc
add
rolb
and
mov
cmp
pop
pop
mov
pop
outsl
pop
push
pop
jl
inc
add
popa
sub
mov
std
or
adc
test
dec
pusha
add
sub
fidivs
mov
jo
pusha
add
je
xlat
jl
movsb
adc
ja
push
add
sbb
decb
data16
stc
pop
mov
jle
mov
mov
or
les
xchg
cli
mov
setp
push
shll
mov
jbe
les
mull
imul
sub
cmc
lods
pop
hlt
xchg
and
call
sbb
sub
rorl
mov
ret
cmp
adc
inc
add
xchg
cmp
push
add
xlat
jge
int3
divb
sbb
pop
pop
out
fld
jge
cmp
daa
push
sti
les
mov
arpl
mov
pop
aas
es
mov
aad
add
lods
mov
sub
add
push
add
outsl
and
jbe
mov
mull
je
sbb
push
clc
sub
mov
xchg
jge
or
rolb
pop
xchg
mov
mov
dec
fs
fs
push
mov
add
add
shrb
and
addb
popf
leave
push
outsl
pusha
add
pop
gs
sbbl
inc
add
rcl
push
sbb
sub
inc
mov
adc
popf
ljmp
and
inc
add
dec
push
cmp
add
add
cmp
outsb
push
sbb
testl
fs
js
push
imul
add
or
xchg
lods
add
jns
gs
and
shll
add
sbb
dec
bound
pop
cmp
add
cli
pop
inc
mov
lods
sbb
loop
push
push
add
inc
add
int
add
daa
xor
movsl
aaa
sub
cmp
adc
add
in
les
out
mov
xchg
aas
lock
lods
imul
divb
leave
mov
and
addb
addb
lods
sahf
nop
jp
mov
dec
push
insl
nop
lret
lret
mov
lods
in
mov
mov
xor
bound
stos
rcll
iret
in
lods
pop
or
pop
sub
je
xor
aas
insl
sbb
dec
clc
push
sub
jo
xchg
fnsave
call
add
int
in
xchg
leave
popf
or
cmp
mov
test
daa
push
in
add
jmp
pop
push
test
sbb
and
dec
les
inc
add
pop
cmp
and
xchg
mov
out
add
mov
xchg
cmpl
xchg
xor
ret
ss
or
insb
ffreep
orl
push
add
inc
sub
adc
es
mov
mov
pop
inc
int
lahf
or
scas
sub
jg
popf
shll
out
sub
jo
cmpsl
icebp
sbb
xor
pop
add
adc
ret
cmc
cmp
jl
int3
push
sahf
push
xlat
sbb
jo
arpl
cwtl
adc
cmp
mov
fistpll
arpl
insb
dec
rolb
daa
ds
dec
cmp
xchg
add
cmp
cmp
lcall
or
dec
adc
dec
pop
or
or
rclb
hlt
add
xor
cmp
jle
pop
scas
inc
add
imul
test
dec
aaa
sbb
fmull
sti
addb
sub
aas
pusha
add
mov
dec
fstpt
pusha
add
add
movsl
leave
inc
cmpsb
ds
jg
stos
cmpsb
mov
jne
inc
outsb
fnstenv
loopne
add
mov
xlat
scas
add
mov
mov
dec
pushw
adc
add
cmp
lea
sub
pushf
jge
add
and
mov
roll
mov
mov
add
dec
popf
insl
push
jmp
mov
or
orl
push
add
push
movsl
push
mov
pop
dec
mov
shl
or
adc
bound
in
fcmovne
bound
in
push
add
lods
jbe
and
add
or
repz
inc
dec
addr16
imul
lahf
lock
mov
adc
and
sbb
add
loope
pop
cmp
sahf
push
dec
aaa
cmp
in
and
dec
lret
pop
in
cmc
sahf
rcl
popf
mov
leave
setl
addb
add
sbb
add
adc
lea
add
or
push
sbb
add
or
jl
pop
cmp
add
cmpsl
pop
bound
mov
inc
mov
popf
push
push
ss
loope
enter
xchg
cltd
push
sbb
jp
sbb
sub
xlat
popa
mov
lock
ja
int3
xchg
mov
imul
jne
mov
add
int3
xchg
scas
aaa
jge
add
and
jg
mov
add
add
xor
add
jno
dec
mov
roll
rclb
sub
adc
mov
popf
je
pushf
jge
add
cmp
cmp
jae
icebp
fiadds
int3
jg
dec
sbb
xor
mov
daa
outsb
xor
ret
push
pop
ss
mov
inc
add
call
xchg
mov
inc
add
mov
out
cmp
mov
add
iret
fdivp
push
into
pop
xor
jne
test
test
add
outsb
es
hlt
es
xor
jno
std
fwait
sub
sti
dec
sbb
push
mov
mov
pop
jae
add
sub
in
inc
inc
add
aad
mov
cmpsb
shll
cmp
push
movsb
iret
cmp
bts
cmp
xchg
fisttps
movsl
leave
push
push
or
add
lret
mov
mov
inc
sar
pop
jns
insl
ss
cli
int3
add
arpl
mov
cmpsb
test
rol
inc
add
jge
xchg
cmp
cmp
lea
cmp
add
stos
cmpsl
dec
ss
scas
out
add
adc
add
add
mov
ror
addb
add
adc
and
pop
loopne
lds
sbb
sbbl
cmp
push
in
xchg
nop
cli
lret
jge
mov
xchg
enter
je
roll
or
add
push
lret
mov
xchg
ja
scas
cmpsb
scas
pop
cmp
mov
int
mov
data16
int
fildl
push
rorb
add
xor
sub
mov
mov
inc
xchg
negb
sub
add
xchg
idivl
jno
add
or
sbb
sub
jo
sub
xlat
addr16
inc
add
pusha
add
adc
popa
in
cld
stc
push
out
je
and
loopne
dec
fisubrs
push
add
mov
add
cmp
outsl
lcall
push
loop
jnp
lret
fiadds
sbb
cmc
push
cmp
scas
sbbl
aaa
popf
xor
cmp
ss
scas
xchg
xchg
imul
xor
add
cld
ret
add
add
lahf
or
push
xor
pop
jnp
std
andl
inc
add
sbb
sub
inc
add
jge
pop
cmpsb
cmpsb
jns
pop
jbe
add
push
repnz
cmp
add
and
sub
dec
fcmovnu
mov
mov
repz
push
push
inc
push
jg
in
clc
push
cmp
scas
ds
xchg
sbb
jge
addb
pinsrw
int3
pushf
jns
or
xchg
sbb
push
ja
test
mov
dec
fisttps
sarl
xchg
xor
stos
jne
and
out
add
test
addb
fnsave
addb
lock
xor
add
add
and
push
jbe
xchg
scas
lret
movb
ret
adc
icebp
divb
sbb
adc
inc
add
sub
dec
push
or
mov
fmul
lock
dec
or
xor
inc
add
loopne
sbb
aas
les
mov
push
sti
xchg
mov
mov
mov
sbb
mov
dec
sti
aad
out
cltd
insl
into
sub
cmpsl
and
adc
ficomps
add
jmp
push
push
jge
cld
sbb
jae
add
add
outsl
and
stos
ret
clc
adc
cltd
sbb
add
add
adcl
pop
mov
outsl
add
stc
push
repz
xchg
add
add
addb
push
add
addb
fdiv
ds
sbb
jmp
sbb
enter
sub
and
rolb
inc
add
inc
xchg
sahf
xor
fstpt
mov
cmp
lock
mov
push
jge
push
or
jle
scas
jb
mov
add
das
sub
mov
call
aam
add
mov
in
lods
adc
and
mov
xchg
adc
ret
movsb
imul
ret
inc
add
aam
jns
add
sub
xor
adc
jae
ds
nop
adc
add
mov
mov
outsb
cs
xor
ret
add
add
mov
xchg
inc
add
add
mov
flds
scas
and
in
add
rcrb
and
push
add
add
aam
push
xorl
jne
lcall
cmp
cs
and
lret
fwait
imul
out
rorl
dec
addb
mov
push
int3
fildl
inc
add
aas
ljmp
push
ret
out
test
sti
fildll
add
cltd
lock
roll
add
and
mov
or
outsb
cwtl
in
cld
inc
cmpsl
popa
xchg
lret
add
add
add
adc
movsb
mov
push
insl
bound
xlat
push
jne
jp
cmpsl
mov
inc
clc
dec
testb
imul
add
call
rolb
cli
sub
test
call
push
add
addb
jge
mov
aad
in
cld
sbb
mov
addb
mov
push
dec
stos
mov
add
jp
data16
pop
js
inc
add
adc
inc
rolb
imull
push
jle
popa
cmp
push
jecxz
movb
addb
idiv
bnd
inc
sub
dec
cwtl
and
mov
movsb
fstl
lea
ss
push
insb
into
add
inc
cmc
add
add
inc
add
lds
add
scas
pusha
add
xchg
gs
cmp
out
xor
mov
aas
and
push
add
cmpsb
frstor
in
in
out
out
mov
stos
ficomps
cmpsb
cmp
and
mov
mov
sub
xchg
test
loope
aam
das
leave
mov
adcl
push
xadd
pop
mov
cmp
imul
xor
inc
add
push
loopne
sbb
test
add
xchg
xlat
dec
add
rorb
pop
fstpl
dec
addb
add
das
inc
add
xchg
xchg
aad
cwtl
lcall
sbb
or
and
dec
stos
and
fisubrs
stc
lahf
pop
imull
mov
adc
ret
xchg
inc
add
add
push
fldenv
ss
jne
add
std
int3
nopl
add
andl
popf
les
mov
add
lcall
pop
cmc
jae
inc
stc
sbb
sbb
jbe
cmp
sub
cltd
pop
sub
xor
dec
out
in
mov
sbb
push
stos
push
mov
add
cmp
sub
sub
add
into
sbb
lds
es
fisttpll
add
dec
clc
mov
fwait
pop
inc
mov
dec
adc
pop
mov
push
adc
xchg
jecxz
add
push
pop
xor
test
lea
iret
add
repz
and
mov
pop
loopne
pop
js
cli
cmp
xchg
mov
sbb
or
fistps
xlat
jmp
sub
add
and
or
gs
ja
fwait
loopne
jbe
pop
in
int3
pop
and
out
in
bound
das
fcoml
dec
sbb
insb
les
cmc
dec
lahf
xchg
in
jge
mov
std
jo
mov
push
adc
pop
sbb
loop
pop
xchg
and
add
jbe
rolb
daa
aad
sti
dec
movsb
jbe
test
xchg
push
and
xchg
jg
fisubrs
mov
movsb
push
push
movl
xchg
fwait
movsb
push
lea
pop
mov
and
mov
addl
push
jg
iret
sbb
fstpl
jne
test
or
fs
clc
jno
adc
xchg
xchg
mov
mov
fmuls
insl
call
push
and
mov
iret
xchg
pop
add
mov
xchg
loope
cmp
cwtl
push
ret
add
clc
int3
or
add
rolb
pop
dec
push
mov
xor
es
xchg
mov
adc
out
cs
xor
into
sub
add
add
sbb
adc
mov
clc
push
cmpsl
in
add
push
stos
lea
sbb
xchg
mov
push
inc
lock
push
add
jne
stos
addl
ljmp
add
jg
add
xor
lret
mov
mov
adc
dec
xor
jge
jns
mov
and
jne
dec
sbb
in
jbe
push
in
add
in
and
daa
adc
and
jo
jle
dec
or
dec
fwait
repnz
in
and
pop
aad
jbe
popf
mov
adc
sbb
js
jle
pop
pop
sahf
ss
pop
das
pop
pop
pcmpgtw
fistpll
and
sbb
jp
jno
pushf
or
adc
leave
jne
jl
and
sbb
in
and
sbb
add
enter
mov
push
mov
sbb
mov
jge
push
cmp
ljmp
add
repnz
sbb
pop
mov
cli
sub
add
cld
mov
or
jo
jno
addl
push
xchg
push
inc
imull
addb
add
add
mov
out
sbb
das
pop
clc
mov
add
cmp
fcoms
mov
dec
pop
push
int
inc
add
divl
cmc
mov
mov
mov
in
add
mov
in
and
add
xor
rolb
fidivs
je
mov
sbb
jl
and
aad
fs
xchg
jge
insb
pop
inc
cmp
es
sbb
sbb
pop
adc
loope
fsubrl
push
inc
add
insl
sbb
cwtl
movsb
les
xor
out
xor
add
add
mov
pop
pusha
add
adc
icebp
push
subl
jo
add
cltd
hlt
bound
lret
and
je
pop
dec
roll
jnp
ja
push
addb
and
add
sbb
inc
jp
inc
sbb
jno
xchg
sub
int3
and
in
jns
sub
fs
imul
jb
ror
scas
inc
add
xchg
movsl
jno
fwait
subl
icebp
iret
jp
mov
popf
aam
scas
and
sbb
hlt
incl
add
xchg
adc
icebp
in
rcrl
push
popf
outsb
enter
cli
xchg
xchg
mov
call
cmp
int
inc
add
mov
jae
aaa
fiadds
add
sbb
xchg
andl
add
stc
jbe
pop
mov
add
inc
add
shr
outsb
xor
add
ljmp
cmp
and
pushf
mov
add
divl
dec
loopne
pop
scas
mov
push
cmp
and
mov
push
mov
cmpl
ret
jns
pop
pop
add
cmp
xchg
enter
mov
roll
int3
inc
sub
es
add
add
dec
or
add
sbb
arpl
mov
add
push
imul
push
mov
in
cmc
pop
insb
je
repz
jle
cli
scas
cmpsl
mov
mov
jbe
adc
push
sahf
mov
data16
int3
addb
dec
shrl
mov
sti
mov
into
xor
stc
pop
push
repnz
dec
fcom
mov
or
cmp
bound
outsb
pop
fs
add
xchg
data16
test
jbe
add
xor
ja
imul
or
pop
das
cmp
add
fsubrl
adc
ret
sub
pusha
add
pusha
add
xchg
sbb
cs
add
and
mov
add
mov
pop
lock
cmp
xchg
cmp
pop
adc
sar
jno
add
xlat
xor
and
filds
add
call
movsl
movsl
mov
push
hlt
es
jg
cli
dec
xor
lock
stc
pop
out
inc
sbb
and
mov
add
movb
es
fisttps
movb
push
mov
in
test
add
jae
xchg
stos
inc
outsl
aas
daa
je
add
sbb
dec
test
push
ret
ficoml
inc
add
sub
dec
lock
xchg
lret
in
pop
add
fdivrs
xchg
adc
mov
test
add
test
inc
aas
mov
mov
in
int3
lock
stc
in
sarl
mov
orl
adc
outsl
sti
mov
jo
mov
add
loop
adcl
sbb
jb
add
inc
mov
shrb
stos
ja
xlat
ljmp
push
xchg
cmp
mov
pushl
lcall
jge
mov
lods
push
dec
fidivl
test
sub
mov
daa
sahf
sbb
push
stc
add
push
mov
rcl
inc
add
shrl
imul
scas
mov
add
inc
sub
lcall
mov
sub
pop
popf
sti
addb
stc
repz
sbb
and
addb
icebp
in
add
add
rcr
push
push
add
das
in
sbb
popf
push
int3
xchg
imul
or
pop
jns
add
cmpsb
mov
fs
adc
push
xchg
mov
mov
cwtl
aam
adc
inc
hlt
mov
cs
push
xlat
mov
add
jae
pop
dec
inc
add
cmc
inc
add
rcll
fidivs
mov
pushf
mov
and
push
push
test
add
insb
and
sub
jl
add
addr16
clc
and
lea
cmpsb
cmc
sub
or
fs
cld
mov
add
or
cmp
cmpsb
test
mov
dec
pushf
aam
scas
out
inc
fprem1
mov
cmp
add
pop
cmpsb
frstor
dec
cmpsb
push
push
sbb
push
and
in
pop
lock
dec
or
or
inc
test
addr16
sbb
adc
or
xchg
xchg
scas
mov
nop
jge
add
push
mov
loopne
sahf
mov
xor
mov
dec
or
add
in
jo
cmp
cmpsl
imul
test
aaa
ret
loop
sbb
loope
bound
mov
xor
push
ljmp
adc
lods
stc
iret
cmp
push
inc
inc
out
insb
xor
sub
add
cs
adc
and
fcmovbe
sub
push
icebp
pop
add
hlt
mov
add
xor
push
xor
shll
mov
mov
mov
insl
int3
lods
rolb
mov
dec
and
cld
jp
cli
jne
jl
push
push
test
cmp
pop
add
push
mov
and
bndldx
in
sub
repz
data16
aam
jae
xchg
mov
iret
xor
push
xchg
xchg
pop
mov
add
xor
xchg
xlat
in
xchg
pop
push
iret
popf
or
pop
lret
lds
lcall
jo
inc
ss
sbb
xlat
inc
test
xchg
mov
enter
pusha
add
cmpsl
push
jge
add
dec
lock
jge
cmp
in
sbb
cli
clc
jne
fwait
sbb
outsb
movl
mov
int
xor
inc
add
add
add
dec
hlt
sbb
add
cmc
mov
add
jmp
and
in
aam
xchg
loope
jg
out
imul
clc
cs
or
jmp
cmc
rcr
pop
sbb
jae
add
repz
and
addb
dec
mov
jns
mov
stos
ja
rorb
scas
mov
scas
inc
add
cli
pop
mov
test
or
xlat
push
enter
addb
mov
imul
addr16
fsubr
jge
and
add
jo
ret
inc
add
ds
loope
pop
cmp
xor
mov
jne
sbb
add
test
gs
pop
xchg
push
roll
jmp
xor
cld
sbb
add
add
mov
pop
jmp
pop
in
and
je
test
xchg
xchg
xchg
cmp
mov
repnz
cmpsl
or
sti
fdivp
adc
pop
movb
test
daa
leave
jp
mov
dec
push
add
mov
add
daa
or
shll
mov
mov
enter
add
add
rcrb
jl
add
add
aad
mov
add
fldenv
jge
adc
add
das
push
aam
in
xor
dec
pop
pop
jmp
jle
xchg
outsl
xchg
dec
dec
rcrb
ja
add
decb
add
test
addb
push
sbb
ret
jb
add
inc
add
fcmovnb
add
push
add
or
dec
scas
push
or
pop
mov
mul
add
or
cld
add
pop
js
data16
test
inc
movb
add
dec
imul
mov
xlat
push
mov
data16
mov
or
aas
push
pop
push
or
lods
or
jb
or
add
add
cmpsl
lcall
ljmp
push
jne
xchg
adc
jae
lret
sub
dec
cmp
fdivrp
push
xor
fildl
xchg
jp
js
stos
lcall
jns
xchg
sbb
outsl
push
idivl
roll
rcrl
std
lahf
addb
add
and
cmp
xchg
addb
cld
jg
add
add
add
or
pop
stos
fstpt
jg
icebp
xchg
jge
jmp
cmp
mov
or
cmp
gs
mov
push
push
sub
jle
lock
push
mov
mov
inc
jecxz
dec
and
lods
mov
ficompl
inc
add
and
sbb
mov
add
dec
pop
dec
sbb
bound
mov
pop
mov
shll
or
lahf
popa
fdivrs
call
jno
sub
mov
xchg
dec
push
add
mov
pop
jns
push
addb
and
jecxz
repnz
add
mov
add
leave
call
notb
imul
jecxz
and
push
aad
push
and
or
cmp
add
daa
push
aam
xchg
addb
sub
addr16
enter
mov
std
jo
movzwl
cwtl
cmp
xchg
pop
sub
mov
mov
jae
dec
and
xor
cmp
repnz
pop
movsb
insb
cmp
xchg
inc
add
and
aas
sbb
xor
cmp
pop
mov
cwtl
shl
ffreep
out
add
push
pusha
add
adc
sub
daa
inc
fldcw
jne
mov
add
add
jge
add
lea
repz
popf
adc
add
pop
lods
push
daa
in
sbb
xor
add
ss
push
mov
sbb
sub
lar
out
int
add
cmp
dec
dec
lock
adc
dec
adc
cs
sub
and
fimuls
adc
jge
push
add
daa
enter
push
add
jbe
mov
sbb
cmpsb
mov
sarl
cmp
cmp
insb
inc
insb
rolb
add
lret
mov
xor
loop
stos
je
in
aas
add
pop
cs
mov
loop
sub
cmp
adc
sub
and
sub
fdivl
sbb
int
add
xor
lods
dec
js
stos
sub
add
add
icebp
sti
xor
sbb
lods
or
pop
je
ja
jae
mov
dec
leave
cmp
js
cmc
movb
mov
pop
adc
loop
into
addb
push
pop
fcmovnb
add
add
mov
inc
jbe
or
add
dec
xchg
pop
sub
sti
mov
cmc
insl
movsb
jmp
enter
adc
push
fs
das
jb
mov
push
fistl
jns
adc
sbb
dec
xor
inc
add
or
inc
pop
dec
mov
add
shrb
sub
pusha
add
std
jecxz
and
mov
lock
js
push
fdivl
mov
add
das
out
int
rolb
inc
les
adc
sub
push
xchg
repnz
add
add
data16
hlt
mov
push
test
hlt
imulb
jne
push
les
cmp
in
sbb
xchg
lods
jnp
mov
fisttps
and
flds
imul
add
adcl
clc
and
ficoms
mov
add
cmp
add
mov
or
add
leave
xchg
jnp
add
sub
pop
pushf
mov
aad
add
cmp
addr16
cld
mov
xchg
or
push
fucomp
or
scas
lea
add
add
in
push
pop
sbbl
iret
int
add
jae
cwtl
daa
scas
hlt
jns
hlt
lods
pop
addb
and
add
mov
xchg
mov
xchg
mov
cmp
add
xchg
push
or
xchg
adc
adc
sub
sbb
jns
fldenv
addb
inc
push
rcrl
adc
and
aam
dec
mov
add
add
movsl
shrl
xchg
enter
push
in
add
inc
add
push
test
xchg
or
leave
rcr
sbbl
dec
dec
and
loope
cmp
jp
das
dec
fistps
les
mov
or
mov
cmp
fldcw
jmp
mov
push
das
aam
mov
xor
out
decl
test
push
xchg
inc
xor
xor
adc
or
or
pop
sub
push
adc
jae
mov
and
fildl
mov
psllq
fisttpl
out
ret
add
xor
ljmp
or
adc
nop
sub
mov
aam
icebp
add
pop
ret
push
jo
loope,pn
pop
pop
xor
add
add
mov
aas
adc
jmp
mov
sub
ret
pop
leave
pop
movsb
push
or
mov
enter
popa
mov
add
add
fnstcw
std
add
faddl
addb
cmp
push
add
pop
ss
bound
mov
or
dec
adc
cmp
add
movb
add
dec
push
ret
adc
dec
es
sub
mov
and
add
std
pop
nop
les
adc
xchg
cs
adc
popa
je
add
lahf
dec
adc
and
inc
add
add
sti
add
imul
cmpsb
dec
pop
adc
xchg
or
inc
add
add
movb
cmp
mov
adc
add
add
cli
das
mov
in
dec
aaa
or
mov
mov
mov
stc
push
sub
inc
add
dec
mov
dec
inc
add
add
cmp
pop
ljmp
leave
xchg
popa
adc
or
movsb
es
fidivrl
inc
add
jl
stc
out
mov
mov
lret
add
mov
mov
arpl
cmp
sbb
push
ja,pn
jle
ret
or
pop
dec
aad
inc
add
cmc
std
jo
in
pusha
add
add
rolb
aaa
pop
jne
add
andl
sub
ret
lods
pop
add
lahf
mov
pusha
add
je
sub
sub
mov
dec
in
test
imul
add
xor
add
cld
fcoml
dec
pop
jo
imul
fs
dec
adc
ljmp
pop
xor
in
ret
adc
dec
add
shll
jl
add
imul
leave
dec
jae
push
and
inc
mov
add
pushf
and
data16
adc
cmp
xchg
push
fcoml
test
jno
shrl
arpl
idivl
js
test
ja
xchg
sti
add
int3
stos
push
and
gs
mov
push
pause
shll
cmpsb
adc
ljmp
dec
fstpl
mov
mov
push
dec
pop
pusha
add
fwait
push
add
outsb
dec
test
rolb
cmp
lock
pushf
mov
lods
cmp
add
sbb
loopne
or
arpl
push
jmp
add
bound
jno
aas
mov
sub
addr16
nop
push
add
inc
add
mov
sarb
je
and
add
lds
xchg
out
cld
mov
add
rsqrtps
in
sti
mov
clc
mov
push
das
pusha
add
push
inc
je
test
cwtl
xor
lock
aaa
lcall
rolb
and
adc
lahf
loopne
and
xor
dec
dec
int
les
rolb
mov
mov
mov
mov
lock
pop
mov
dec
scas
ret
add
fmul
adc
add
mov
adc
sbb
add
in
nop
cmc
and
sbb
fdivl
test
add
mov
pusha
add
fisttpll
insl
popa
ret
sub
rolb
pusha
add
pop
leave
pusha
add
pop
ret
into
je
jmp
inc
add
push
mov
sbb
sub
xor
add
adc
dec
test
or
aam
add
pop
mov
cmp
cli
leave
push
sbb
movsb
and
pop
pop
ds
mov
xchg
pop
sub
sbb
in
jne
es
mov
mov
loope
push
sbb
arpl
dec
push
xor
pop
xor
add
repnz
and
add
sbb
addl
sarb
cmc
cmpsl
jne
nop
sbb
dec
mov
add
cmpsb
add
jle
jmp
adc
aas
add
pop
jae
ja
push
xor
mov
and
mov
add
adc
add
out
into
jle
add
ja
movb
out
inc
inc
mov
add
cmp
adcl
addr16
cmpsb
add
mov
fbld
std
xchg
mov
fstpt
add
insb
or
inc
add
loope
les
cld
jmp
bound
movb
and
pop
inc
add
addr16
mov
sub
mov
fxch
jg
add
jae
sbb
dec
hlt
push
lahf
xor
or
imul
pop
adc
add
mov
leave
std
xchg
add
mov
mov
fistps
out
add
pop
xchg
jge
adc
adc
enter
mov
mov
add
ret
and
jo
cmc
bound
jne
arpl
outsb
xor
cld
sbb
adc
outsb
mov
testl
add
insb
push
mov
adc
dec
rcrl
mov
insb
bound
inc
push
ret
testb
add
sbb
or
ja
aam
or
push
pop
fisubrl
add
sub
sbb
fidivl
push
inc
add
dec
enter
add
or
stc
out
ds
adc
movsl
adc
rcl
add
daa
inc
add
outsl
inc
ret
mov
in
inc
add
lret
push
xchg
outsb
bound
jnp
push
and
sub
sub
add
mov
add
int3
pop
pop
pop
cmp
js
inc
add
add
xchg
add
sbb
sbb
in
repnz
ljmp
sub
add
mov
imul
mov
mov
xchg
out
pop
data16
pop
push
lcall
mov
add
in
or
add
mov
mov
xor
loope
aad
out
add
es
xor
sub
mov
and
jp
sub
add
or
add
or
xchg
inc
sarb
in
aad
or
clc
xchg
xchg
out
add
add
mov
loopne
incb
mov
adcl
sbb
push
loopne
out
pop
mov
adc
push
push
add
inc
add
add
das
jb
dec
popf
add
and
pop
cli
data16
push
stos
push
jmp
mov
test
cs
mov
add
pusha
add
sbb
add
cld
ds
mov
ss
and
add
shrb
aas
mov
inc
add
int3
rcrl
add
and
nop
jmp
in
ss
out
xchg
mov
pop
test
or
add
jbe
fs
leave
xchg
out
enter
mov
out
in
cwtl
jle
hlt
daa
cmp
hlt
mov
addb
cmpsl
movsl
sbb
add
addb
jmp
add
aam
pop
jno
loop
xchg
mov
ret
xor
pop
mov
pop
sbb
nop
dec
outsb
stos
imul
and
sub
or
insb
popf
divl
popf
fists
mov
adc
mov
add
and
inc
add
lock
fidivl
sahf
mov
push
repz
testb
roll
xchg
pusha
add
mov
sarb
add
ja
out
notb
or
or
add
movb
ss
add
jecxz
cmp
jno
add
jp
rdtsc
adc
out
sahf
inc
cli
sub
cs
add
mov
inc
pop
or
mov
adc
add
mov
pop
and
fsubrs
inc
add
adc
ds
jg
and
inc
lahf
in
mov
loope
std
cmp
add
repz
sbb
dec
xorl
add
sbb
clc
fnstenv
xchg
jle
stc
or
sbb
and
sub
sub
or
out
bound
je
jmp
cwtl
pop
mov
repz
inc
inc
add
cmp
addb
mov
sti
sub
cmp
jns
adc
or
add
push
or
inc
adc
mov
or
sbb
pop
or
xor
enter
pusha
add
and
pop
das
out
adc
and
lret
in
loopne
fs
pop
jg
jae
imul
fbld
jmp
add
sub
in
sub
pop
test
mov
jle
pop
fstps
xchg
hlt
lds
mov
cmp
jo
or
ret
inc
inc
mov
mov
cmp
es
andl
push
scas
adc
jmp
mov
sub
fwait
sub
mov
and
orl
add
js
daa
or
xor
add
ljmp
inc
add
mov
popa
sahf
sahf
add
subl
push
xchg
inc
add
mov
insb
iret
sahf
aad
lahf
and
fcom
mov
add
and
sub
test
push
add
mov
js
imul
std
leave
jae
pop
inc
and
push
mov
inc
fidivrl
add
sarb
jle,pn
into
push
cld
mov
push
push
push
scas
xor
push
and
push
insl
arpl
fidivrl
and
add
inc
add
mov
add
add
rolb
adc
pop
test
cmpsb
push
add
inc
add
mov
sub
add
add
ret
inc
add
xor
adc
xor
or
inc
add
xor
ja
add
lds
sbb
adc
or
add
inc
cmc
out
in
rorb
mov
fistl
and
xor
movl
dec
hlt
dec
adc
sbb
sbb
xchg
add
add
push
mov
xor
dec
pop
mov
mov
movsb
inc
sbb
xlat
xor
jno
dec
add
xor
add
repz
add
sbb
js
add
int
insl
fcomps
cltd
ja
mov
xor
push
dec
stc
or
test
cmp
mov
inc
add
pop
loopne
inc
add
lret
loope
cmpsl
inc
add
xchg
loopne
inc
out
gs
add
mov
xor
sbb
mov
lret
mov
lret
pushf
addr16
or
add
jecxz
add
add
xchg
addb
add
push
cwtl
or
xlat
repz
stc
jae
xor
lock
push
jecxz
mov
mov
pop
ja
add
cmc
repz
add
outsl
xchg
lock
addb
jmp
adc
mov
add
pop
clc
fndisi(8087
cmp
in
addb
dec
xor
add
in
repz
shl
jmp
sub
mov
cs
daa
pop
jge
cmp
sbbl
or
jne
fs
add
rorb
je
lods
mov
mov
movsl
add
sub
jmp
pop
add
stc
dec
fs
push
outsl
xchg
inc
add
jns
hlt
xchg
std
xor
ljmp
scas
repz
and
repz
and
mov
mov
das
pop
push
add
add
pop
mov
jle
popf
sub
pop
dec
stos
pop
dec
mov
dec
pop
mov
pop
push
pusha
add
or
mov
pop
or
lcall
ds
dec
int
sub
aas
leave
pop
loopne
insb
xor
jecxz
neg
add
pusha
add
arpl
add
movsl
in
stos
sub
lret
pop
popa
xor
fdivrs
cmp
sbb
add
add
add
insb
das
aad
sub
add
or
pop
fists
mov
jb
pop
add
fdivrs
dec
adc
call
xchg
mov
sub
pop
sub
cmp
and
fidivrs
mov
mov
add
xchg
rclb
loopne
push
pop
sub
fwait
shrb
push
push
add
xor
daa
jecxz
scas
es
fcoms
imul
mov
js
out
pop
aad
mov
add
push
sub
xor
dec
sbb
icebp
int
repnz
pop
movsl
mov
push
imul
pop
and
cltd
jmp
inc
sub
sbb
add
and
xor
ljmp
mov
fmul
imul
out
insl
or
push
mov
mov
xor
mov
jbe
sarb
jae
mov
fs
push
dec
cld
fcompl
push
cmp
jge
xor
and
push
jmp
add
mov
fidivrs
add
mov
inc
add
loop
scas
sbb
jae
rolb
cmp
push
jmp
adc
and
outsl
xor
mov
push
add
or
test
out
fs
pop
or
out
aaa
dec
inc
rcrb
ds
jb
push
frstor
mov
xchg
jge
pop
xor
mov
mov
cmp
sbb
push
test
cmp
mov
or
dec
pusha
add
fs
fiadds
or
fcom
sti
pop
or
fst
sbb
add
test
jecxz,pt
mov
or
add
mov
iret
sbb
sti
cmp
pop
xrelease
test
cltd
cmp
pop
add
add
sub
les
test
add
sbb
push
inc
add
mov
mov
incl
push
add
pop
mulb
push
fsubp
cmp
cmpsb
ds
addb
fstpl
jmp
test
out
jno
add
and
test
lahf
or
add
inc
mov
inc
jb
pop
and
cmp
add
push
cli
dec
cmp
lods
pop
mov
js
push
add
loopne
add
add
shlb
cmp
add
cmp
lahf
std
scas
dec
iret
pop
jbe
and
sub
add
lods
inc
sub
sub
jbe
or
add
imul
dec
push
sub
and
cli
mov
loop
add
aad
add
mov
inc
add
int
mov
sbb
scas
sbb
adcl
add
movsb
xchg
and
xchg
xor
int3
inc
add
lods
inc
fnstsw
jnp
sbb
push
data16
loopne
inc
sbb
or
popa
addb
insl
pop
pushf
or
js
aad
sbb
adc
subl
dec
adc
lock
add
and
leave
lods
jl
pop
sbb
xor
push
bound
movsb
jne
add
cmp
add
dec
jb
dec
sahf
das
push
lcall
add
rcrl
mov
loop
sub
movb
add
xchg
inc
xlat
sub
movb
incl
add
outsb
adc
frstor
cld
je
sbb
add
loopne
mov
sbb
add
sbb
mov
or
out
das
add
int3
das
jecxz
cmc
jb
aaa
mov
es
fidivl
es
fwait
add
movsl
inc
add
fdivp
push
or
fnstcw
xchg
jbe
insb
hlt
lahf
jno
ss
sbb
jle
or
cs
dec
test
aam
clc
sti
testl
jns
push
pop
clc
addb
pushf
cmpsl
aaa
mov
add
notb
push
mov
push
cwtl
adc
push
cmc
push
mov
into
inc
add
mov
add
clc
js
dec
push
mov
hlt
pop
ret
xchg
out
aad
ljmp
cmpsb
inc
add
sti
mov
push
test
daa
and
add
addb
inc
add
push
loopne
or
out
insl
scas
flds
