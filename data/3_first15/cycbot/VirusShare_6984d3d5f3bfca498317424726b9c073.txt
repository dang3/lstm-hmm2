pop
mov
loopne
arpl
loopne
imul
mov
mov
loopne
jnp
loopne
jg
loopne
andl
mov
mov
loopne
xchg
mov
loopne
fwait
mov
loopne
mov
mov
loopne
scas
mov
loopne
mov
loopne
mov
mov
loopne
mov
loopne
iret
mov
loopne
xlat
mov
loopne
fbld
loopne
out
loopne
jmp
loopne
out
mov
loopne
mull
loopne
jmp
loopne
pop
mov
loopne
cpuid
loopne
adc
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
mov
loopne
dec
mov
loopne
push
mov
loopne
pop
mov
loopne
arpl
loopne
imul
mov
mov
loopne
jnp
loopne
jg
loopne
andl
mov
mov
loopne
xchg
mov
loopne
fwait
mov
loopne
mov
mov
loopne
scas
mov
loopne
mov
loopne
mov
mov
loopne
mov
loopne
iret
mov
loopne
xlat
mov
loopne
fbld
loopne
out
loopne
jmp
loopne
out
mov
loopne
mull
loopne
jmp
loopne
pop
mov
loopne
bt
mov
mov
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
mov
loopne
dec
mov
loopne
push
mov
loopne
pop
mov
loopne
arpl
loopne
imul
mov
mov
loopne
jnp
loopne
jg
loopne
andl
mov
mov
loopne
xchg
mov
loopne
fwait
mov
loopne
mov
mov
loopne
scas
mov
loopne
mov
loopne
mov
mov
loopne
mov
loopne
iret
mov
loopne
xlat
mov
loopne
fbld
loopne
out
loopne
jmp
loopne
out
mov
loopne
mull
loopne
jmp
loopne
pop
movsb
loopne
or
mov
movsb
loopne
pop
movsb
loopne
sbb
mov
movsb
loopne
daa
movsb
loopne
sub
mov
movsb
loopne
aaa
movsb
loopne
cmp
mov
movsb
loopne
inc
movsb
loopne
dec
movsb
loopne
dec
movsb
loopne
push
movsb
loopne
push
movsb
loopne
pop
movsb
loopne
pop
movsb
loopne
arpl
mov
movsb
loopne
outsl
movsb
loopne
jae
loopne
ja
loopne
jnp
loopne
jg
loopne
andl
mov
mov
movsb
loopne
xchg
movsb
loopne
fwait
movsb
loopne
lahf
movsb
loopne
mov
movsb
loopne
stos
movsb
loopne
scas
movsb
loopne
mov
loopne
mov
loopne
mov
movsb
loopne
ret
movsb
loopne
movsb
loopne
lret
movsb
loopne
iret
movsb
loopne
shll
mov
movsb
loopne
fbld
mov
movsb
loopne
jmp
loopne
out
movsb
loopne
rep
loopne
mull
mov
movsb
loopne
add
loopne
or
loopne
adc
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
movsl
loopne
inc
movsl
loopne
dec
movsl
loopne
dec
movsl
loopne
push
movsl
loopne
push
movsl
loopne
pop
movsl
loopne
pop
movsl
loopne
arpl
loopne
imul
mov
movsl
loopne
ja
loopne
jnp
loopne
jg
loopne
andl
mov
movsl
loopne
movsl
loopne
xchg
movsl
loopne
xchg
movsl
loopne
fwait
movsl
loopne
lahf
movsl
loopne
mov
movsl
loopne
stos
movsl
loopne
scas
movsl
loopne
mov
loopne
mov
loopne
mov
movsl
loopne
ret
movsl
loopne
movsl
loopne
lret
movsl
loopne
iret
movsl
loopne
shll
loopne
loopne
jecxz
loopne
out
loopne
jmp
loopne
out
movsl
loopne
rep
loopne
mull
loopne
jmp
loopne
pop
cmpsb
loopne
or
loopne
adc
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
cmpsb
loopne
inc
cmpsb
loopne
dec
cmpsb
loopne
dec
cmpsb
loopne
push
cmpsb
loopne
push
cmpsb
loopne
pop
cmpsb
loopne
pop
cmpsb
loopne
arpl
loopne
imul
mov
cmpsb
loopne
ja
loopne
jnp
loopne
jg
loopne
andl
mov
cmpsb
loopne
cmpsb
loopne
xchg
cmpsb
loopne
xchg
cmpsb
loopne
fwait
cmpsb
loopne
lahf
cmpsb
loopne
mov
cmpsb
loopne
stos
cmpsb
loopne
scas
cmpsb
loopne
mov
loopne
mov
loopne
mov
cmpsb
loopne
ret
cmpsb
loopne
cmpsb
loopne
lret
cmpsb
loopne
iret
cmpsb
loopne
shll
loopne
loopne
jecxz
loopne
out
loopne
jmp
loopne
out
cmpsb
loopne
repz
loopne
mull
loopne
jmp
loopne
pop
cmpsl
loopne
or
loopne
adc
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
cmpsl
loopne
inc
cmpsl
loopne
dec
cmpsl
loopne
dec
cmpsl
loopne
push
cmpsl
loopne
push
cmpsl
loopne
pop
cmpsl
loopne
pop
cmpsl
loopne
arpl
loopne
imul
mov
cmpsl
loopne
ja
loopne
jnp
loopne
jg
loopne
andl
mov
cmpsl
loopne
cmpsl
loopne
xchg
cmpsl
loopne
xchg
cmpsl
loopne
fwait
cmpsl
loopne
lahf
cmpsl
loopne
mov
cmpsl
loopne
stos
cmpsl
loopne
scas
cmpsl
loopne
mov
loopne
mov
loopne
mov
cmpsl
loopne
ret
cmpsl
loopne
cmpsl
loopne
lret
cmpsl
loopne
iret
cmpsl
loopne
shll
loopne
loopne
jecxz
loopne
out
loopne
jmp
loopne
out
cmpsl
loopne
repz
loopne
mull
loopne
jmp
loopne
pop
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
loopne
or
loopne
adc
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
test
loopne
dec
test
loopne
push
test
loopne
pop
test
loopne
arpl
loopne
imul
mov
test
loopne
jnp
loopne
jg
loopne
subl
mov
test
loopne
xchg
test
loopne
fwait
test
loopne
mov
test
loopne
scas
test
loopne
mov
loopne
mov
test
loopne
test
loopne
iret
test
loopne
xlat
test
loopne
fildll
loopne
out
loopne
jmp
loopne
out
test
loopne
imull
loopne
ljmp
loopne
pop
stos
loopne
or
loopne
adc
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
stos
loopne
inc
stos
loopne
dec
stos
loopne
dec
stos
loopne
push
stos
loopne
push
stos
loopne
pop
stos
loopne
pop
stos
loopne
arpl
loopne
imul
mov
stos
loopne
ja
loopne
jnp
loopne
jg
loopne
subl
mov
stos
loopne
xchg
stos
loopne
xchg
stos
loopne
fwait
stos
loopne
lahf
stos
loopne
mov
stos
loopne
stos
stos
loopne
scas
stos
loopne
mov
loopne
mov
loopne
mov
stos
loopne
ret
stos
loopne
stos
loopne
lret
stos
loopne
iret
stos
loopne
shrl
loopne
fldt
loopne
jecxz
loopne
out
loopne
jmp
loopne
out
stos
loopne
rep
loopne
imull
loopne
ljmp
loopne
pop
stos
loopne
or
loopne
adc
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
stos
loopne
inc
stos
loopne
dec
stos
loopne
dec
stos
loopne
push
stos
loopne
push
stos
loopne
pop
stos
loopne
pop
stos
loopne
arpl
loopne
imul
mov
stos
loopne
ja
loopne
jnp
loopne
jg
loopne
subl
mov
stos
loopne
stos
loopne
xchg
stos
loopne
xchg
stos
loopne
fwait
stos
loopne
lahf
stos
loopne
mov
stos
loopne
stos
stos
loopne
scas
stos
loopne
mov
loopne
mov
loopne
mov
stos
loopne
ret
stos
loopne
stos
loopne
lret
stos
loopne
iret
stos
loopne
shrl
loopne
fldt
loopne
jecxz
loopne
out
loopne
jmp
loopne
out
stos
loopne
rep
loopne
imull
loopne
ljmp
loopne
pop
lods
loopne
or
mov
lods
loopne
pop
lods
loopne
sbb
mov
lods
loopne
daa
lods
loopne
sub
mov
lods
loopne
aaa
lods
loopne
cmp
mov
lods
loopne
inc
lods
loopne
dec
lods
loopne
dec
lods
loopne
push
lods
loopne
push
lods
loopne
pop
lods
loopne
pop
lods
loopne
arpl
mov
lods
loopne
outsl
lods
loopne
jae
loopne
ja
loopne
jnp
loopne
jg
loopne
subl
mov
mov
lods
loopne
xchg
lods
loopne
fwait
lods
loopne
lahf
lods
loopne
mov
lods
loopne
stos
lods
loopne
scas
lods
loopne
mov
loopne
mov
loopne
mov
lods
loopne
ret
lods
loopne
lods
loopne
lret
lods
loopne
iret
lods
loopne
shrl
mov
lods
loopne
fildll
mov
lods
loopne
jmp
loopne
out
lods
loopne
rep
loopne
imull
mov
lods
loopne
add
loopne
or
loopne
adc
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
lods
loopne
inc
lods
loopne
dec
lods
loopne
dec
lods
loopne
push
lods
loopne
push
lods
loopne
pop
lods
loopne
pop
lods
loopne
arpl
loopne
imul
mov
lods
loopne
ja
loopne
jnp
loopne
jg
loopne
subl
mov
lods
loopne
lods
loopne
xchg
lods
loopne
xchg
lods
loopne
fwait
lods
loopne
lahf
lods
loopne
mov
lods
loopne
stos
lods
loopne
scas
lods
loopne
mov
loopne
mov
loopne
mov
lods
loopne
ret
lods
loopne
lods
loopne
lret
lods
loopne
iret
lods
loopne
shrl
loopne
fldt
loopne
jecxz
loopne
out
loopne
jmp
loopne
out
lods
loopne
rep
loopne
imull
loopne
ljmp
loopne
pop
scas
loopne
or
loopne
adc
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
scas
loopne
inc
scas
loopne
dec
scas
loopne
dec
scas
loopne
push
scas
loopne
push
scas
loopne
pop
scas
loopne
pop
scas
loopne
arpl
loopne
imul
mov
scas
loopne
ja
loopne
jnp
loopne
jg
loopne
subl
mov
scas
loopne
scas
loopne
xchg
scas
loopne
xchg
scas
loopne
fwait
scas
loopne
lahf
scas
loopne
mov
scas
loopne
stos
scas
loopne
scas
scas
loopne
mov
loopne
mov
loopne
mov
scas
loopne
ret
scas
loopne
scas
loopne
lret
scas
loopne
iret
scas
loopne
shrl
loopne
fldt
loopne
jecxz
loopne
out
loopne
jmp
loopne
out
scas
loopne
repz
loopne
imull
loopne
ljmp
loopne
pop
scas
loopne
or
loopne
adc
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
scas
loopne
inc
scas
loopne
dec
scas
loopne
dec
scas
loopne
push
scas
loopne
push
scas
loopne
pop
scas
loopne
pop
scas
loopne
arpl
loopne
imul
mov
scas
loopne
ja
loopne
jnp
loopne
jg
loopne
subl
mov
scas
loopne
scas
loopne
xchg
scas
loopne
xchg
scas
loopne
fwait
scas
loopne
lahf
scas
loopne
mov
scas
loopne
stos
scas
loopne
scas
scas
loopne
mov
loopne
mov
loopne
mov
scas
loopne
ret
scas
loopne
scas
loopne
lret
scas
loopne
iret
scas
loopne
shrl
loopne
fldt
loopne
jecxz
loopne
out
loopne
jmp
loopne
out
scas
loopne
repz
loopne
imull
loopne
ljmp
loopne
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loopne
or
loopne
adc
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
mov
loopne
dec
mov
loopne
push
mov
loopne
pop
mov
loopne
arpl
loopne
imul
mov
mov
loopne
jnp
loopne
jg
loopne
cmpl
mov
mov
loopne
xchg
mov
loopne
fwait
mov
loopne
mov
mov
loopne
scas
mov
loopne
mov
loopne
mov
mov
loopne
mov
loopne
iret
mov
loopne
xlat
mov
loopne
fistpll
loopne
out
loopne
jmp
loopne
out
mov
loopne
idivl
loopne
mov
loopne
pop
mov
loopne
ud1
mov
mov
loopne
sbb
loopne
and
loopne
sub
loopne
xor
loopne
cmp
loopne
inc
mov
loopne
dec
mov
loopne
push
mov
loopne
and
add
cmp
sub
add
cmp
fs
inc
add
arpl
add
sbb
lods
inc
clc
mov
ja
clc
sahf
repnz
fcmovu
adc
add
add
clc
jno
add
movsb
clc
mov
adc
loope
jbe
ss
js
clc
sar
and
add
sti
ret
clc
mov
clc
testb
jnp
dec
popf
xchg
xchg
add
add
decl
inc
clc
add
add
ret
clc
or
ja
add
xor
add
xchg
jl
scas
imul
xor
add
pop
sbb
xor
add
jp
call
clc
fdiv
xlat
lods
jecxz
sub
clc
mov
clc
cmp
add
dec
das
repnz
add
clc
mov
clc
xabort
adc
add
push
add
xor
add
clc
xchg
mov
add
add
sbb
jecxz
sub
clc
int
insl
sbb
add
add
pop
jne
or
roll
scas
cmp
or
clc
or
add
jmp
add
repnz
ret
clc
mov
pop
dec
dec
cmp
sbb
lods
adc
add
movsl
clc
xchg
ss
nop
mov
mov
test
jae
add
adc
add
mov
clc
mov
cmpsl
clc
sar
xor
add
push
add
pcmpgtb
and
add
in
insl
pop
cmp
add
jb
add
add
lea
add
fidivrl
jo
add
cmp
clc
jg
sar
pop
mov
add
sbb
clc
loope
inc
clc
adc
add
mov
adc
add
add
int3
add
add
clc
fs
jl
das
dec
pusha
add
out
adc
add
and
int3
dec
add
add
xor
add
and
add
in
ret
clc
cltd
xchg
enter
clc
mov
leave
cmpsl
clc
add
add
cmp
lcall
add
add
or
clc
ja
sbb
insl
stos
xor
add
push
pop
jecxz
ja
dec
adc
add
sbb
clc
push
out
repnz
sbb
scas
or
push
nop
test
mov
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
push
mov
push
push
je
mov
adc
add
ret
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
cmp
add
lods
scas
repz
leave
dec
aad
sar
clc
sub
lea
cmp
clc
lea
add
dec
jno
add
cltd
nop
divl
push
clc
mov
scas
popf
push
add
push
add
out
inc
add
sub
cmp
clc
hlt
fwait
xchg
scas
pop
push
sbb
cld
jmp
dec
sbb
xchg
lods
inc
clc
mov
sub
clc
add
add
add
rorb
or
clc
fistps
add
add
in
dec
push
pop
jb
add
adc
add
clc
sub
repz
push
cmp
clc
mov
push
mov
gs
sub
add
or
data16
repz
mov
add
ds
sub
clc
popa
add
lret
loope
adc
daa
clc
or
pop
cltd
rcll
add
out
cmp
mov
cmp
fmul
idivb
xor
add
stc
mov
push
push
aam
pop
inc
clc
loope
aas
icebp
xchg
cmp
ljmp
jmp
jge
push
cwtl
add
imul
adc
sbb
lea
add
repz
add
add
sbb
lods
xabort
je
xchg
mov
clc
xchg
out
imul
mov
pop
cli
sbb
add
sar
rorl
clc
clc
cwtl
decb
das
je
clc
cmp
or
add
xchg
dec
sbb
add
filds
mov
add
call
clc
inc
clc
jbe
clc
and
add
cwtl
test
sub
cli
mov
pusha
add
or
fdivl
push
out
sbb
lret
mov
add
xchg
inc
clc
movq
clc
xabort
clc
rcl
shll
push
add
imul
movsb
clc
ss
dec
lods
sbb
outsl
jg
mov
scas
mov
scas
xbegin
aam
adc
add
push
add
sbb
jmp
lods
sub
clc
mov
pop
push
clc
ret
jp
clc
inc
add
jo
add
sti
insb
lods
loop
fisubs
add
sbb
clc
inc
add
dec
fwait
adc
add
clc
and
mov
inc
clc
xchg
xchg
insl
repz
fldl
clc
xchg
cltd
xor
add
xchg
mov
add
mov
add
ret
jae
add
cmp
cld
jmp
sub
arpl
add
jg
cld
jmp
sub
pop
xor
cmp
mov
cmp
add
jmp
fdiv
adc
lret
sub
arpl
add
clc
push
add
jmp
push
sub
clc
inc
clc
out
xchg
sbb
add
add
sub
push
clc
popa
add
mov
dec
or
clc
xor
test
add
cld
jmp
dec
insl
inc
clc
test
add
xchg
mov
out
cmp
add
clc
inc
clc
push
mov
sti
cld
jmp
pop
pop
fs
cmp
int
push
push
cld
jmp
inc
test
insb
fbstp
mov
test
cld
dec
test
ficomps
mov
jbe
pop
inc
clc
jge
clc
xchg
std
addr16
sbb
push
dec
jg
add
dec
insb
dec
aaa
pop
sub
lcall
dec
mov
clc
adc
clc
inc
add
ja
clc
adc
add
loope
mov
mov
icebp
xchg
cmp
imul
add
sti
mov
js
or
mov
xor
add
jb
add
add
jg
adc
add
sub
sub
add
clc
or
jmp
sub
aaa
aas
aaa
dec
xchg
mov
clc
push
pop
add
sub
add
lcall
xchg
cmp
xchg
push
add
test
test
sbb
push
push
xor
cld
jmp
and
clc
jne
cmp
in
push
add
mov
into
mov
cld
jmp
popa
imull
call
push
lahf
cmp
clc
cmp
call
cld
jmp
je
cs
js
clc
xchg
push
pop
mov
and
stc
jle
fiadds
clc
push
add
add
add
out
push
mov
clc
jp
push
add
int3
stos
sar
jp
fdivrp
or
pop
mov
pop
inc
add
add
sub
inc
add
push
sub
add
sbb
add
mov
insb
jge
enter
pop
sub
add
add
jmp
mov
cmp
shlb
sub
mov
mul
clc
cmpsl
clc
aam
jb
add
cvtps2pd
in
aad
pop
cld
jmp
test
or
pop
in
js
mov
add
xbegin
add
xabort
pop
sahf
pop
mov
in
mov
clc
jns
or
cld
jmp
inc
pop
xor
clc
pop
cmp
inc
clc
mov
clc
mov
clc
xchg
scas
dec
and
add
fwait
rcr
pop
addr16
inc
clc
mov
lret
jns
add
rcl
aas
mov
sahf
inc
add
leave
cmp
add
dec
lret
movsb
clc
clc
mov
add
clc
sbb
vorps
sbb
add
in
dec
inc
clc
lock
push
or
inc
add
movsb
cmpsb
sub
add
movsb
clc
pop
pop
jnp
clc
and
cmp
scas
fnstsw
clc
addr16
leave
scas
inc
clc
jae
add
push
add
repnz
add
add
jns
jmp
add
inc
clc
fstpl
xor
cld
jmp
dec
sub
sub
add
pop
mov
cmp
xchg
scas
jno
add
clc
mov
scas
imul
xchg
cltd
mov
cmpsb
clc
xchg
jp
cwtl
sar
mov
cmp
clc
flds
clc
repz
add
out
xchg
and
xor
add
add
add
add
jmp
push
cld
jmp
sub
nop
xchg
test
sub
fldl
clc
cmc
mov
mov
pop
int3
in
cmc
inc
add
mov
clc
xlat
js
sub
add
int3
in
push
inc
ss
ret
jno
sub
inc
add
add
add
mov
and
add
jmp
push
sbb
dec
scas
inc
clc
pop
mov
mov
arpl
add
push
insb
and
add
clc
add
sbb
mov
inc
clc
jl
fstl
sub
jae
add
clc
xlat
jb
add
add
pop
out
xchg
pop
fldt
sub
mov
inc
add
ja
decb
push
mov
add
jg
movsb
outsl
lret
cmp
add
or
sub
in
loop
adc
add
clc
cmp
outsb
pop
inc
add
nop
addr16
pop
pop
clc
es
lea
clc
add
cmp
inc
clc
dec
xrelease
inc
clc
scas
arpl
add
out
pop
scas
pusha
add
push
fnstsw
add
fdivrs
icebp
imul
mov
mov
add
jnp
loop
into
dec
mov
cmp
add
and
add
clc
and
add
ljmp
clc
push
add
loop
xor
add
call
add
clc
stc
add
add
stos
adc
add
cmp
fbstp
add
xor
add
pushf
out
daa
clc
pop
es
pop
leave
mov
clc
ja
ja
and
add
add
aad
sub
xchg
and
add
or
jg
cs
fadds
dec
mov
sub
add
push
add
ja
mov
cld
jmp
sbb
sub
add
dec
clc
cmpsb
clc
outsb
add
add
push
add
xor
add
ret
and
add
cld
jmp
push
cmpsb
sub
clc
push
mov
clc
sub
cmp
mov
pushf
in
jns
test
push
add
jbe
pop
clc
cmp
dec
fwait
dec
push
add
daa
clc
js
add
icebp
add
add
add
and
add
xchg
pop
and
add
mov
push
clc
sar
xchg
enter
clc
jmp
pop
out
sbb
xchg
in
or
jl
movsl
clc
mov
clc
std
pusha
add
out
fcmovbe
xor
add
inc
add
adc
cmp
add
loopne
loope
cwtl
fs
cmp
push
jbe
fdivr
xor
out
add
add
xor
add
add
clc
and
mov
mov
stc
jmp
add
add
leave
sub
pop
imul
jmp
xor
cmp
addr16
sar
dec
jae
add
add
movsb
clc
add
add
scas
in
test
sbb
clc
xabort
repz
mov
mov
add
pop
clc
rcll
add
push
add
out
sbb
dec
scas
aad
imul
icebp
jle
test
clc
gs
cltd
pop
out
popf
add
add
push
add
movsl
clc
sub
or
add
clc
ret
clc
ljmp
mov
clc
ret
clc
arpl
add
imul
outsl
lret
rcrl
add
repz
add
add
sbb
add
test
add
add
mov
cmp
inc
clc
out
inc
add
js
clc
sub
test
clc
jne
clc
and
clc
jge
cwtl
movsb
clc
cltd
sbb
add
cmpsl
clc
sbb
jmp
andb
clc
lcall
clc
pop
add
add
clc
jae
add
clc
dec
and
add
rclb
add
xor
add
sbb
clc
sbb
sar
outsb
movsl
clc
mov
add
pop
add
sbb
add
call
xchg
add
mov
cld
jmp
adc
test
in
fdivl
add
clc
jbe
inc
clc
jnp
clc
sub
clc
pop
sub
fldenv
clc
push
hlt
xchg
push
add
jmp
popa
sub
clc
jmp
push
mov
add
sbb
cmp
cld
jmp
jge
clc
inc
add
mov
add
sbb
sbb
add
push
fwait
or
sbb
add
push
add
or
add
arpl
add
add
sti
popf
je
sbb
clc
pop
pushf
popf
dec
mov
lods
cli
xchg
mov
mov
clc
ret
jne
xor
add
lret
or
ja
sbb
fucomi
imul
clc
dec
mov
clc
fdivr
sub
clc
jo
add
mov
add
scas
stc
ficoml
or
jmp
jg
sbb
cmp
clc
mov
push
inc
clc
cli
pushf
add
add
inc
add
loop
popf
test
lods
xbegin
das
jb
add
dec
or
xor
cld
jmp
data16
test
out
je
xchg
add
add
cmp
dec
and
add
add
lret
inc
add
in
push
inc
add
sub
out
or
pop
inc
add
jecxz
cmp
mov
clc
cltd
mov
rol
clc
mov
or
or
test
adc
add
clc
cmp
sub
clc
mov
insl
adc
cmp
lods
jns
clc
jl
ret
clc
sar
add
xor
add
mov
int
clc
xor
add
and
push
ret
and
clc
and
add
cmp
jecxz
lock
add
cmpsb
clc
stc
xchg
or
add
cmp
enter
push
and
add
clc
enter
clc
into
xbegin
clc
jb
add
jecxz
fwait
xchg
data16
cmp
sar
fbld
clc
loope
rcll
add
push
clc
loopne
or
jo
add
in
lret
add
xor
add
dec
cmp
add
aas
sar
pop
add
add
push
sub
fwait
imul
clc
repz
add
sub
bound
add
clc
rolb
jecxz
cmpsb
clc
jb
add
gs
ljmp
pop
dec
scas
insl
push
push
add
pop
jno
add
in
and
add
lock
clc
xabort
das
int3
inc
clc
fs
xchg
lods
inc
clc
out
xabort
add
sub
movsl
clc
cmp
pop
scas
call
add
add
je
add
adc
add
insl
dec
cmp
or
add
add
add
sbb
inc
clc
dec
lret
mov
add
pop
clc
xchg
sbb
mov
clc
fbld
pop
call
xchg
sbb
add
push
sar
add
test
dec
or
push
call
cld
jmp
cmp
clc
test
insb
mov
ss
xchg
lahf
mov
xchg
loop
xor
inc
clc
adc
add
call
pop
sarb
push
add
mov
fs
sti
ds
clc
and
add
add
jecxz
test
loop
add
add
clc
dec
test
mov
clc
pushf
loope
or
movsl
clc
xbegin
jmp
push
nop
test
pusha
add
mov
shl
clc
jnp
clc
cld
mov
ss
ret
or
adc
add
mov
cld
jmp
sahf
mov
adc
add
xor
add
add
jae
add
add
mov
scas
or
mov
or
rcll
add
loop
xchg
fwait
push
jl
add
push
add
or
outsl
fmull
test
sub
clc
jecxz
cmp
mov
in
clc
incb
add
add
sahf
pop
xor
add
cld
jmp
jno
sub
jecxz
es
dec
or
bound
add
movsb
clc
dec
cmp
mov
and
add
add
mov
incl
push
ret
sahf
imul
pusha
add
test
clc
int
clc
lret
popf
mov
and
add
stos
cmp
clc
dec
out
call
mov
mov
pop
mov
pop
lock
into
inc
add
int
add
xor
add
add
lock
clc
insb
arpl
add
out
dec
test
sub
cmp
clc
sub
add
jge
clc
rcll
push
jo
add
sbb
add
add
mov
or
mov
add
add
sahf
fidivl
add
push
jne
cld
jmp
sti
test
cmp
add
clc
dec
jg
cmp
pop
xabort
hlt
mov
clc
stos
adc
in
cwtl
lahf
and
add
push
clc
push
cld
jmp
sbb
add
test
xor
add
add
pop
cld
jmp
sub
sahf
nop
pop
ss
dec
jnp
clc
divl
add
dec
inc
clc
jae
add
add
sbb
clc
inc
add
mov
clc
daa
clc
sub
add
faddl
add
push
add
imul
pop
jle
clc
es
out
pop
cltd
and
add
outsb
leave
pop
call
clc
sar
pop
or
add
mov
cmpsb
add
pop
movsb
jg
xchg
sub
cmp
clc
outsb
fstl
lods
cmc
mov
mov
add
lret
loopne
cmp
inc
add
leave
shrb
push
or
add
adc
add
sbb
pop
pushl
cld
jmp
inc
push
es
add
add
jecxz
pop
clc
pop
and
add
cmp
dec
push
cld
jmp
sub
cs
add
scas
dec
lods
sbb
cld
jmp
jno
push
or
iret
fisttpl
stos
add
inc
clc
aaa
jne
inc
add
cmp
add
pop
xor
add
stos
repnz
mov
clc
cmp
mov
insb
aaa
fistps
clc
decl
xor
mov
jl
add
add
pop
mov
mov
xabort
add
and
add
inc
clc
adc
add
add
cmp
lea
or
clc
fisubs
mov
add
inc
clc
imul
jne
xchg
push
add
lods
mov
clc
xabort
inc
clc
int
in
cmp
add
dec
pop
dec
push
cltd
lret
xor
clc
lock
push
add
lods
scas
in
and
add
add
push
cld
jmp
and
lea
flds
clc
jno
add
sbb
outsl
dec
xor
add
add
sahf
mov
clc
mov
add
rcll
push
jp
je
cld
jmp
lahf
add
add
xchg
lahf
shll
mov
sub
inc
call
add
sub
das
xchg
pop
sahf
or
or
push
push
add
movsl
clc
repz
add
cli
inc
add
cmp
clc
xlat
and
add
mov
mov
xor
call
cli
push
add
add
add
imul
ss
add
push
push
cld
jmp
sub
xchg
xor
sub
xbegin
sub
jo
add
add
add
mov
clc
testb
add
cld
jmp
pop
sub
movsb
clc
scas
sbb
das
mov
pop
adc
leave
outsb
add
add
lods
jae
add
mov
std
add
clc
sub
cmp
mov
add
pop
clc
add
add
adc
add
lock
add
add
add
xor
add
xbegin
sub
mov
clc
xchg
sar
inc
clc
fwait
pushf
pop
inc
clc
xor
add
dec
mov
cmp
mov
roll
adc
or
add
ret
clc
xabort
add
add
arpl
add
xor
add
js
ror
in
dec
aas
pop
sar
lret
aam
int
jmp
testb
testl
mov
clc
pop
add
add
add
ret
mov
push
adc
add
clc
pop
push
mov
testb
sub
mov
add
flds
add
popf
imul
int
xchg
adc
add
es
push
repnz
mov
stos
xor
adc
add
clc
mov
mov
mov
add
fldenv
jmp
push
jno
sub
clc
push
out
imul
data16
mov
out
popf
sub
add
cmp
and
add
or
ss
jne
clc
cmpsl
clc
push
clc
add
sbb
clc
inc
clc
pop
stos
mov
adc
add
clc
jmp
cmc
mov
jl
clc
in
sub
clc
sbb
out
loopne
xchg
cmc
sar
out
jbe
mov
add
cmp
fcmovb
clc
repz
dec
cmp
clc
testl
inc
add
dec
decb
clc
sub
add
add
jnp
cmp
add
adc
adc
jmp
inc
dec
push
mov
add
test
xchg
xor
add
add
ret
std
xchg
pop
mov
clc
push
scas
push
cmp
xchg
icebp
and
add
clc
jns
clc
jne
sub
add
bound
add
add
jg
repz
clc
pop
pushf
sub
cs
clc
dec
pop
ret
clc
pushf
push
add
cmpsb
clc
mov
dec
xchg
sbb
add
push
popf
push
add
cld
jmp
xchg
adc
inc
clc
xchg
in
sub
adc
add
add
into
arpl
add
clc
sbb
inc
add
rcrb
fimuls
adc
add
clc
negl
inc
add
adc
cmp
jl
mov
add
fldenv
mov
test
imul
cld
jmp
and
sub
add
aas
arpl
add
add
fdiv
cmp
inc
clc
mov
clc
mov
sbb
push
dec
inc
add
movsb
cmp
add
out
sbb
clc
cmp
lcall
insl
push
add
jns
add
mov
clc
mov
jo
add
adc
add
negl
lret
or
mov
inc
add
aad
mov
add
mov
cli
xchg
adc
repz
into
icebp
movsb
clc
fstpl
xchg
dec
mov
add
jmp
sub
clc
lods
sub
mov
xor
xor
add
and
add
push
add
jg
xchg
fisubrs
cmpsl
clc
ffree
clc
xor
add
dec
xor
add
in
mov
pop
pop
lea
cmp
or
fwait
ja
add
es
movsl
clc
mov
clc
pop
push
add
mov
xor
add
adc
add
or
cmp
inc
add
ret
clc
cmp
cs
pop
pop
or
hlt
out
mov
clc
xchg
mov
add
ja
shl
clc
push
clc
cmp
cmp
clc
movsb
clc
sti
mov
cmp
jmp
lods
xor
mov
jns
sar
call
scas
pop
ljmp
add
add
fimull
lods
into
and
mov
add
and
add
add
add
add
ret
jbe
dec
arpl
add
cmc
ret
clc
push
repz
jmp
sub
xor
sar
push
mov
add
add
pop
add
add
add
push
xchg
ret
and
subb
adc
dec
lods
aam
ss
clc
hlt
mov
add
mov
stc
pop
xchg
cmpsb
clc
fs
ds
lret
mov
stos
mov
add
xor
add
add
test
pop
fwait
cmp
mov
cmp
add
cmp
adc
daa
clc
cld
fdivp
mov
stos
add
add
mov
sub
into
mov
mov
aas
pop
arpl
add
dec
imul
imul
repz
xchg
mov
loop
stos
clc
push
add
mov
add
cmp
clc
inc
clc
mov
clc
xchg
cmp
mov
enter
daa
clc
xor
iret
lods
movsl
clc
xabort
jne
cld
jmp
pusha
add
jle
xchg
sbb
jmp
inc
add
pop
add
add
push
cld
jmp
add
clc
add
add
add
sbb
sahf
lcall
jmp
sub
aas
push
cmp
jp
das
jle
add
pushf
push
iret
sar
ja,pt
or
clc
cmp
lea
jnp
inc
add
js
icebp
mov
sub
js
add
xabort
movsb
clc
sti
or
mov
clc
pop
ret
clc
mov
adc
add
clc
adc
add
int3
dec
aad
add
cmp
inc
add
scas
jnp
imulb
sar
mov
bound
add
clc
xor
add
clc
mov
cmp
mulb
clc
inc
add
cs
adc
insb
pop
call
cld
jmp
sub
jmp
add
xchg
aas
lods
add
jl
clc
xor
add
clc
out
sbb
movsb
cld
jmp
sub
add
hlt
add
add
mov
cld
jmp
pop
outsl
lods
and
dec
sub
clc
cmpsl
clc
inc
clc
mov
add
adc
and
rcrl
adc
add
add
add
add
xor
add
add
add
into
stos
in
xor
decb
clc
popa
add
add
add
enter
sub
cmp
clc
in
push
add
daa
clc
addr16
insl
or
add
or
push
add
movsl
clc
mov
sar
clc
repnz
orps
pop
pop
out
ljmp
clc
cmp
cwtl
dec
sbb
xor
add
mov
imulb
or
add
out
imul
aaa
out
test
jb
add
clc
dec
adc
add
add
in
sub
add
cmp
cmp
clc
pop
clc
push
add
push
push
ret
xor
clc
es
test
test
mov
xor
add
pop
clc
sbb
add
lret
mov
and
jns
and
add
fists
add
add
repz
faddl
add
data16
mov
popa
add
cmp
clc
mov
clc
es
idivl
loop
mov
clc
xchg
mov
clc
fidivrs
stos
pop
clc
add
add
cltd
pusha
add
and
add
adc
add
xchg
sar
push
add
inc
clc
jae
add
cmp
popa
add
gs
enter
adc
add
adc
add
clc
and
pushf
mov
adc
add
in
data16
sub
sub
cld
push
add
push
mov
aad
out
cmp
fs
in
sbb
push
ret
mov
pop
and
add
add
bound
add
add
inc
add
lock
dec
jg
stc
jmp
mov
leave
rep
clc
lret
sbb
push
cld
jmp
sub
xor
js
xchg
add
add
xchg
fldt
int3
cli
inc
add
add
nop
aad
sbb
add
mov
mov
add
add
push
fisubl
add
push
jno
fnstenv
add
mov
aas
pop
push
add
test
add
add
cwtl
mov
mov
pop
movsl
clc
jle
loopne
call
adc
mov
jge
add
pushf
sub
test
cmp
clc
xchg
fists
add
in
lahf
gs
xchg
pop
cmp
inc
clc
enter
outsb
jae
add
add
inc
add
pop
fldcw
cmp
sub
add
or
sti
and
add
clc
fsubr
mov
js
ljmp
sub
jnp
cmp
call
cld
jmp
xchg
out
xor
add
clc
mov
add
lahf
mov
push
or
push
xor
add
aad
inc
clc
sbb
clc
jmp
clc
and
add
add
cmc
or
jno
add
imul
pop
das
sub
fxch
xor
loopne
jns
mov
mov
clc
push
mov
pop
clc
test
pop
leave
xlat
decb
add
setge
enter
jae
sarl
sub
ds
jbe
clc
jae
add
add
push
adc
add
mov
insl
or
pushf
test
sub
add
cmp
clc
pop
jg
add
fwait
inc
clc
dec
cmc
pop
xchg
sbb
clc
test
sar
add
sub
mov
lret
jle
jo
add
clc
js
add
mul
clc
xor
add
add
mov
jmp
sub
cmp
clc
cmp
das
mov
add
cld
jmp
scas
mov
sar
clc
and
add
add
jmp
sar
cwtl
fcomps
insb
mov
enter
mov
push
ret
cmp
shrl
add
mov
and
add
add
add
sbb
add
add
add
add
bound
add
rep
cld
jmp
jg
sub
fldt
mov
movsb
clc
data16
sub
clc
out
mov
jmp
mov
add
add
add
lret
loop
pop
pop
sbb
sbb
jmp
xchg
scas
adc
aad
inc
clc
sub
mov
pop
stos
add
add
dec
or
enter
pop
add
adc
adc
add
jge
add
add
test
clc
mov
push
shrl
add
ret
clc
in
push
clc
cmp
add
clc
xchg
cmpsl
clc
xor
add
cmp
inc
add
or
adc
add
sahf
movsb
clc
sti
fnstcw
add
add
mov
out
mov
clc
xchg
mov
cld
jmp
outsl
aaa
pop
xor
add
test
lahf
das
pop
mov
je
cld
jmp
mov
xlat
sbb
stos
mov
ja
jmp
clc
sub
gs
cmp
jg
fwait
dec
pop
scas
inc
add
inc
clc
dec
nop
sar
adc
add
lret
lahf
sbb
add
add
push
and
cld
jmp
inc
cmp
ds
adc
add
shrl
clc
add
add
insb
test
push
add
inc
clc
js
add
icebp
lahf
xchg
inc
add
pop
test
imul
mov
stc
loope
call
mov
xor
push
jnp
clc
inc
add
dec
dec
mov
lret
add
adc
add
mov
jnp
clc
jno
add
stc
push
pop
jecxz
loope
push
clc
popf
xor
pusha
add
push
jmp
cld
jmp
xor
movsb
push
mov
in
mov
clc
lea
add
add
adc
jmp
sub
sbb
add
int3
jg
mov
clc
das
mov
and
add
ret
cld
jmp
push
add
add
sahf
push
rcrl
xlat
and
add
cmp
fldl
add
clc
jb
add
xor
xor
out
inc
clc
mov
cli
jmp
clc
sbb
in
hlt
add
add
xchg
inc
inc
dec
cli
xabort
add
cmpsl
clc
mov
fbstp
add
js
and
add
add
movsl
clc
sub
icebp
mov
sar
int
mov
cmp
add
xchg
mov
jle
clc
cmpsb
clc
jmp
sub
add
sahf
test
test
adc
clc
add
add
add
cmp
fstps
inc
add
and
add
sbb
clc
jno
add
xor
out
ud0
mov
add
sub
add
mov
outsb
cmpsl
clc
push
add
add
add
add
inc
clc
pop
pop
add
das
loope
pop
stos
in
xchg
jae
add
add
mov
test
outsb
push
mov
xchg
aas
cs
add
add
add
es
and
add
fldl
add
adc
add
js
clc
clc
hlt
lahf
sahf
ljmp
push
add
lret
xchg
pop
stos
scas
jmp
add
out
cmp
clc
imul
jge
clc
cmpsl
clc
popa
add
sub
cmp
dec
rcrl
add
adc
clc
cmp
or
pop
andnps
gs
jecxz
shrl
clc
sar
pop
cwtl
mov
jmp
sub
or
jnp
clc
cmp
clc
fbstp
add
pop
aaa
add
clc
repz
dec
xor
add
add
push
add
clc
pop
enter
jp
pop
fisubrl
push
or
roll
clc
xabort
inc
clc
fsubr
nop
inc
clc
insl
cmp
sbb
lea
ljmp
in
push
cltd
and
adc
jne
add
fs
pop
mov
add
and
add
mov
xchg
mov
inc
add
mov
test
lcall
mov
ret
cmp
jns
icebp
pop
enter
into
cmc
mov
add
lret
or
hlt
in
loopne
xor
cmp
clc
call
enter
pop
sub
pop
xor
add
fadds
leave
sar
clc
clc
cmp
mov
clc
adc
add
push
adc
add
cld
jmp
xchg
adc
iret
jg
clc
push
xbegin
ss
pop
pop
mov
mov
cltd
ss
jno
add
loope
push
pop
cld
jmp
mov
xbegin
adc
clc
stc
into
mov
push
inc
clc
bound
add
or
or
hlt
nop
sub
loop
fucomip
mov
aaa
mov
xchg
std
xchg
out
in
push
outsb
dec
cmp
jns
clc
sar
mov
sar
sub
or
add
inc
add
sub
jmp
xor
insb
sub
mov
adc
jne
add
add
clc
sub
clc
xor
add
stc
dec
fistpl
mov
add
mov
xchg
cmp
cld
jmp
pop
xchg
xor
cwtl
xchg
or
or
pop
pop
lret
sub
cmp
bound
add
add
xor
shrb
jle
fidivs
add
cwtl
pop
pop
cltd
mov
xor
add
rcr
push
movzwl
cld
jmp
sub
cmp
clc
leave
daa
clc
inc
clc
out
inc
add
add
loope
or
xchg
adc
add
decl
add
add
pop
sub
xchg
pop
inc
add
mov
cltd
xchg
inc
add
fdivrl
cmp
dec
push
sahf
xor
add
or
clc
adc
add
add
add
pop
clc
mov
jl,pn
clc
aas
fs
mov
insb
cld
jmp
cmpsb
pop
dec
add
add
add
xor
add
xchg
add
add
add
ss
ret
dec
pop
or
popf
jle
xlat
pusha
add
ret
clc
mov
add
sub
add
add
add
push
lods
das
mov
push
cld
jmp
add
add
pop
aam
xbegin
add
insl
jnp
push
adc
add
nop
fistpl
clc
sub
ret
clc
imul
add
shlb
add
xchg
clc
cmp
add
pop
sub
iret
push
add
lret
adc
jno
add
pop
add
add
pop
arpl
add
pop
incb
add
add
add
add
add
pop
clc
clc
flds
add
dec
pop
and
add
clc
aam
loope
and
mov
jp
decl
dec
xchg
mov
push
movsb
clc
sbb
icebp
mov
add
sar
clc
jl
clc
and
add
clc
jg
rcr
mov
inc
clc
add
add
incl
jmp
sub
adc
add
arpl
add
add
xchg
mov
pop
xchg
mov
xchg
out
jne
nop
movsl
cld
jmp
sahf
sub
add
pop
clc
into
in
xbegin
sbb
push
ret
or
add
das
and
add
adc
lock
fs
add
jmp
lcall
add
add
clc
push
or
mov
xchg
inc
clc
out
sub
add
lods
sahf
movsl
clc
repz
push
add
add
add
clc
cmp
xlat
popa
add
jae
add
xchg
jns
add
cmc
mov
add
or
mov
lods
pop
xchg
jp
cmp
jp
data16
add
out
xchg
out
mov
add
clc
insl
inc
add
jns
inc
clc
xbegin
movsl
clc
dec
rcrl
clc
xor
add
xabort
add
mov
imul
xor
sub
shrb
cmp
in
and
inc
add
pop
push
add
pop
pop
scas
loope
icebp
fstl
pusha
add
loop
jns
or
cwtl
imul
js
out
jmp
jnp
add
adc
add
ret
clc
jl
cs
call
add
mov
loope
loope
das
leave
xor
add
inc
add
dec
adc
add
add
fbld
push
jg
add
je
clc
insl
cld
adc
add
call
in
roll
push
add
pop
pop
sbb
stos
pop
arpl
add
xlat
add
add
add
pop
leave
mov
insl
stos
out
outsb
sbb
test
jmp
jge
add
pop
mov
xor
add
and
add
inc
add
mov
sub
mov
and
imul
add
out
loope
sbb
clc
mov
add
push
add
repnz
loopne
push
add
push
add
lcall
mov
out
jp
xchg
sar
push
add
out
shlb
add
std
inc
add
fsubrp
sbb
sub
cmp
sar
out
test
test
shrb
add
add
add
pop
loop
cmc
stos
mov
clc
ljmp
adc
add
mov
add
add
add
rcrl
add
cmpsb
clc
sbb
leave
adc
add
push
loop
mov
add
mov
scas
cmp
add
add
add
cmp
add
jle
push
push
lea
cld
jmp
or
movsb
ss
clc
pop
or
add
fdivrs
sbb
add
pop
aam
add
jae
add
xor
add
clc
push
add
and
xor
add
jnp
shrb
clc
enter
add
aas
xor
add
test
fcomps
add
or
clc
fwait
pop
jo
add
fcmovb
clc
mov
cmp
clc
xlat
xor
lret
scas
in
stos
push
add
aas
pop
push
add
xchg
test
mov
fcoml
add
ja
ret
add
add
add
test
add
add
add
cmp
add
clc
imul
repz
add
jecxz
loope
add
xabort
xor
invd
scas
jg
clc
xchg
mov
clc
cmp
add
cmpsl
clc
mov
ds
clc
lock
inc
clc
pop
sub
movsb
clc
add
add
jnp
cltd
pop
inc
add
xchg
clc
push
add
sti
xlat
test
push
test
cmp
daa
clc
adc
clc
cmp
mov
mul
clc
or
add
stc
sub
hlt
pop
js
and
add
ret
clc
mov
clc
popa
add
or
fistpl
imul
clc
jg
es
imul
xbegin
lock
mov
adc
add
add
movsl
clc
jbe
clc
adc
add
mov
aas
sti
xbegin
add
add
clc
jecxz
and
add
je
jg
clc
xchg
das
or
clc
push
and
aaa
addr16
xor
add
xchg
cmp
pop
clc
cmp
es
jmp
clc
mov
cld
shl
clc
hlt
sbb
mov
lea
push
ljmp
dec
or
clc
inc
add
sarl
clc
inc
clc
cmp
in
bound
add
add
ss
ret
sub
lret
jne
add
rcr
jnp
clc
sbb
cld
jmp
xchg
sub
scas
and
mov
dec
add
or
cmp
leave
mov
pop
das
adc
add
add
jae
add
flds
add
mov
icebp
addr16
jg
fs
push
clc
mov
pop
xchg
xchg
dec
popa
add
jecxz
outsb
pop
sub
xlat
arpl
add
and
add
push
inc
clc
in
out
fisttpl
clc
repnz
icebp
mov
ror
and
add
cmp
clc
or
cltd
fcoml
clc
lea
add
push
add
sbb
aas
or
mov
add
cld
faddl
int
pop
or
clc
lock
scas
gs
dec
stos
mov
cmp
push
aam
clc
iret
je
clc
push
add
inc
clc
jbe
xchg
movsl
clc
add
leave
lock
add
add
pop
push
roll
dec
mov
rep
ss
ret
fwait
sub
inc
clc
mov
clc
xchg
xchg
and
add
clc
add
add
insl
fidivrl
dec
js
xor
add
inc
clc
dec
arpl
add
outsl
rorl
xor
add
add
xbegin
add
ja
xchg
popf
into
pop
inc
clc
or
add
push
enter
movsb
clc
lret
add
jb
add
add
aad
add
scas
hlt
negl
jbe
and
lret
push
lods
push
add
rol
clc
mov
add
repz
out
loope
or
cmp
inc
clc
jmp
fwait
inc
clc
and
add
subps
dec
xor
xchg
jbe
in
xchg
xor
clc
add
add
clc
dec
xchg
loope
dec
iret
adc
add
push
jecxz
decl
xor
dec
add
add
popf
mov
clc
xlat
add
mov
clc
hlt
icebp
mov
add
data16
call
sbb
cld
jmp
sbb
xchg
inc
add
mov
clc
or
add
add
sbb
ror
mov
fcom
sbb
in
push
in
mov
lea
cld
jmp
sub
lea
std
in
pusha
add
enter
push
lock
pusha
add
mov
push
add
mov
xor
add
pusha
add
jg
mov
fldt
cmp
xchg
add
add
push
sub
and
out
sar
add
shll
clc
jb
add
mov
xchg
test
push
sbb
imul
add
cmc
mov
aaa
not
push
add
jmp
mov
add
mov
add
mov
pop
scas
jo
add
je
mov
idivl
cmp
dec
daa
clc
movsl
clc
ss
scas
mov
clc
dec
cmp
clc
jnp
and
arpl
add
clc
mov
shll
dec
push
mov
add
test
clc
ret
cmp
add
xchg
pop
add
add
cmp
arpl
jmp
movsb
or
in
mov
clc
mov
inc
add
xor
add
test
test
push
jo
add
add
xor
add
loope
cmp
add
fiadds
add
clc
adc
add
cmp
clc
lock
cmp
cli
enter
mov
aaa
jecxz
scas
jle
clc
sub
sbb
add
js
mov
rorl
inc
clc
mov
ds
clc
dec
inc
clc
sub
add
add
jmp
add
xor
add
jae
add
clc
scas
cli
jno
add
mov
cld
jmp
pop
subb
mov
xabort
and
push
add
loopne
sub
clc
dec
inc
add
inc
clc
jmp
adc
add
jo
add
hlt
push
add
loopne
outsl
dec
jnp
cmp
addr16
pop
lods
dec
in
cmp
clc
push
jge
clc
fwait
neg
pop
clc
xchg
lods
in
xor
add
bound
add
imul
xchg
pop
pop
sub
jg
fisubrl
jo
add
arpl
add
dec
adc
add
clc
test
pop
clc
jnp
test
add
mov
iret
test
xchg
adc
add
mov
pop
pop
jmp
add
push
add
sarb
decl
pusha
add
sahf
sub
mov
clc
cmp
inc
clc
in
mov
dec
sbb
clc
lret
dec
and
add
jmp
dec
adc
clc
pop
cmp
clc
fwait
xchg
add
add
add
mov
add
fwait
lahf
xchg
ret
hlt
dec
mov
add
dec
ret
shrb
leave
fwait
xchg
and
add
rorb
xchg
cld
jmp
test
xlat
push
cmp
add
and
popl
and
add
fcmovnb
clc
push
loope
add
pop
popa
add
add
lods
add
add
clc
outsb
add
scas
in
mov
outsl
dec
mov
pop
mov
add
add
jo
add
cmp
add
inc
add
test
or
add
mov
xor
cld
jmp
sub
xchg
cmp
mov
fcmovnb
clc
push
movzwl
cld
jmp
mov
pushf
shl
push
inc
clc
lret
mov
test
add
pop
popa
add
inc
add
in
js
push
add
ja
clc
cmpsb
clc
ljmp
fcmovu
or
add
in
lcall
add
imul
add
dec
rcrb
add
notb
sar
in
imul
lea
jnp
call
ss
ret
xchg
pop
outsb
sbb
push
add
jmp
aaa
push
xor
add
sub
out
test
out
insl
xbegin
adc
add
pop
jge
dec
aaa
neg
repnz
jmp
out
sub
stc
in
imul
add
add
pop
data16
xchg
ljmp
cld
jmp
xchg
es
cmp
and
add
lods
scas
js
test
add
add
test
inc
add
push
add
fiaddl
clc
adc
add
xor
add
test
mov
add
push
add
sbb
add
test
ja
test
add
push
rep
cld
jmp
add
loopne
in
call
mov
or
cmp
add
mov
movsb
clc
dec
mov
cmpl
cld
jmp
je
pop
ficoml
add
fs
clc
mov
pop
cmp
add
sbb
jmp
or
push
outsl
leavew
sub
push
add
add
rorl
pusha
add
shl
clc
into
cmp
add
cmp
sar
mov
add
sar
outsl
sub
popa
add
mov
cs
add
add
inc
add
cmpsb
clc
cmpsl
clc
xor
loope
out
cmp
xor
leave
xlat
push
jge
add
mov
add
pop
or
inc
jb
cld
jmp
inc
and
add
popa
add
faddl
add
cld
jmp
sub
dec
sub
add
clc
add
mov
fwait
lcall
add
mov
push
sar
dec
js
je
cmp
fwait
push
add
mov
rcr
cmp
add
gs
outsb
pop
sub
aam
add
add
ficompl
add
adc
add
aas
push
xor
add
add
sbb
clc
cltd
sub
lock
add
push
add
sbb
clc
adc
add
cmp
add
xabort
clc
jl
add
or
clc
movsb
clc
push
mov
sbb
jno
add
stc
inc
clc
sub
sbb
mulb
add
cmp
push
mov
add
popf
xor
add
jae
add
add
clc
movsl
clc
cmp
add
sub
xchg
fdiv
dec
jno
add
clc
mov
sti
mov
clc
xor
and
xchg
data16
lea
out
dec
jl
inc
clc
popa
add
cmpsl
clc
pop
xchg
test
sarl
gs
pop
in
mov
bound
add
frstor
jno
add
add
xchg
or
stc
int
ljmp
add
xor
add
stos
clc
lea
clc
shlb
xchg
xor
add
push
add
jb
add
insl
jl
jl
xchg
frstor
cmp
add
test
add
sub
leave
lcall
cmp
cmp
add
outsl
js
jbe
dec
sbb
fnstenv
add
inc
clc
pop
mov
clc
fidivs
inc
add
mov
xchg
mov
push
bound
add
push
imul
add
push
fs
push
clc
dec
pop
dec
sub
clc
mov
jb
add
add
ja
cmp
lods
sahf
scas
cmp
mov
clc
insl
loope
jbe
mov
cld
jmp
cmp
xor
add
cmp
sti
push
cmp
jge
sbb
add
sub
repz
add
addr16
or
idiv
or
add
pop
ja
add
xor
das
or
clc
hlt
dec
out
dec
mov
clc
mov
cld
jmp
test
cmp
lcall
jp
inc
clc
pop
clc
and
add
jg
clc
cmp
inc
add
pop
dec
in
or
cmp
icebp
xchg
jp
lea
cld
jmp
pop
sub
jle
adc
add
push
add
test
cmp
add
add
jge
fidivrs
jp
add
add
lods
mov
add
push
add
std
gs
xchg
inc
clc
mov
test
mov
fptan
test
adc
add
pop
imul
mov
outsl
out
sub
cld
jmp
je
mov
clc
lea
mov
and
add
lcall
mov
cmp
mov
inc
clc
pop
dec
xlat
cmp
add
out
sbb
add
test
lock
sar
fldt
bnd
xchg
xchg
and
add
add
pop
ss
add
mov
ret
shlb
add
and
add
add
jp
ret
dec
sbb
or
clc
ljmp
add
add
add
add
movsl
clc
mov
into
add
add
add
aam
stos
das
sbb
clc
popa
add
call
clc
cmpsb
clc
mov
lods
cld
jmp
sub
mov
insb
push
inc
add
jle
clc
jno
add
clc
mov
add
add
cmp
push
add
mov
jg
stos
sub
add
dec
jae
add
sbb
sbb
xchg
xchg
and
add
xchg
jmp
mov
enter
cs
shl
mov
add
nop
dec
sti
mov
push
add
jmp
daa
clc
dec
or
cmp
fistpll
or
xor
adc
add
mov
dec
lods
and
loop
lods
jecxz
jns
fsts
mov
sti
cmpsb
clc
out
aam
jns
clc
mov
lods
pop
mov
movsb
clc
adc
add
mov
xchg
ret
adc
add
es
pushf
jne
clc
adc
add
mov
add
add
mov
clc
into
data16
push
clc
add
add
sti
test
add
add
pusha
add
daa
clc
add
add
add
add
shl
cmp
push
adc
add
div
ret
add
push
and
add
sub
inc
add
insl
add
xchg
test
aas
rclb
add
jl
clc
addr16
daa
clc
gs
clc
pop
clc
push
add
mov
pop
xor
add
pop
sbb
insl
pushf
or
mov
clc
mov
jmp
dec
lea
sbb
out
ljmp
clc
lock
add
cld
xchg
mov
or
push
add
mov
or
add
lret
add
int
clc
pushf
test
pushf
jnp
sar
and
add
add
add
clc
sbb
repz
jmp
lea
jp
clc
cmc
add
add
add
inc
add
push
add
pop
sub
arpl
add
popf
loopne
test
clc
adc
add
dec
jecxz
jl
clc
adc
add
lock
je
fiaddl
sahf
outsl
mov
adc
add
add
add
hlt
push
add
push
clc
mov
jns
clc
sbb
or
add
xor
add
clc
iret
xlat
cmp
popf
pop
ss
in
add
add
add
cld
sti
dec
ret
mov
mov
mov
add
fwait
push
push
fwait
add
sbb
mov
sbb
pushl
add
clc
loope
mov
push
clc
dec
inc
add
mov
add
add
std
xchg
cltd
cld
mov
push
sub
cld
jmp
add
sti
pop
or
add
adc
add
lret
test
int3
jne
add
add
add
aad
clc
sar
mov
and
add
jb
add
sbb
clc
clc
mov
mov
data16
mov
cmp
and
jge
dec
cmp
xor
push
inc
clc
out
mov
add
clc
aam
adc
cld
jmp
cmpsb
or
int3
jmp
clc
lahf
mov
jno
add
add
lret
sar
add
sbb
add
lods
sar
jg
clc
iret
mov
aad
je
add
aas
lods
push
ja
push
data16
and
add
add
add
dec
inc
add
push
jle
je
jae
add
cmp
mov
jns
push
push
ss
ret
outsl
cmp
push
clc
testl
cmc
call
test
and
add
xchg
cld
test
cmp
iret
xor
add
dec
and
cmp
popa
add
or
mov
je
cld
jmp
imull
add
rolb
clc
emms
in
cmp
ret
mov
imul
add
add
rorb
dec
xchg
xor
jmp
mov
add
xor
add
ss
ret
popa
lods
movsb
cltd
hlt
into
push
adc
add
enter
add
mov
add
add
cmp
add
cltd
inc
add
add
add
cmp
mov
out
mov
in
mov
clc
pop
inc
clc
xchg
out
xbegin
add
pop
jge
arpl
add
clc
cmpsb
clc
jbe
add
xor
ret
cmp
clc
push
fiaddl
add
cltd
push
clc
inc
clc
cmp
jnp
loopne
add
add
test
mov
clc
or
cld
jmp
cmp
add
outsl
outsb
xchg
sub
lret
sub
clc
dec
shll
mov
out
mov
sbb
add
scas
sub
push
jle
clc
in
xor
int3
out
sbb
in
stc
add
add
mov
xor
clc
imul
add
jle
stc
out
push
add
dec
sub
add
mov
add
out
das
and
dec
jo
add
clc
sub
rorb
aas
push
add
push
mov
cld
jmp
inc
sub
adc
add
sub
fidivl
add
jge
mov
xchg
data16
jns
push
dec
incl
jmp
pop
dec
xor
imul
loop
outsb
cld
mov
clc
in
pop
clc
repnz
push
cmp
add
sub
and
add
clc
xchg
inc
clc
notl
cmc
out
sub
clc
xchg
das
pop
xchg
pop
sub
add
sar
call
out
add
add
das
data16
repnz
inc
clc
mov
add
add
add
add
shlb
sbb
add
cld
jmp
test
push
add
or
popa
add
cmp
cmp
add
std
or
inc
clc
aam
imul
stos
scas
pop
push
add
xchg
xor
mov
nop
and
add
sbb
push
adc
push
ret
sub
sarb
fstps
pop
mov
add
ljmp
enter
clc
pop
xor
add
movsb
clc
inc
add
jnp
fwait
jge
clc
pop
in
jle
clc
aam
addr16
pop
mov
jl,pn
clc
fdivrp
dec
lods
sahf
clc
cmp
xor
in
mov
out
ret
and
add
xor
add
ret
ja
repnz
jae
add
aas
jnp
cmp
mov
add
sbb
jmp
sbb
dec
push
sub
dec
out
stc
fdivp
enter
xbegin
lods
cmp
sahf
xlat
loopne
mov
sub
clc
sbb
add
dec
sub
clc
inc
clc
imul
mov
add
dec
inc
clc
sbb
cld
jmp
je
lods
sbb
add
divl
adc
add
clc
xbegin
clc
xor
add
clc
xabort
clc
jp
cs
cmp
stos
popa
add
mov
add
mov
jg
push
add
in
jne
clc
loop
push
mov
add
dec
dec
lods
or
es
pop
adc
add
clc
sbb
jbe
add
xchg
jp
cmpsb
pop
loop
xchg
stos
sbb
add
inc
clc
bndldx
add
add
out
jns
push
clc
out
cli
stc
cmp
add
xor
add
clc
mov
lcall
mov
in
jle
add
add
jmp
and
stc
sbb
add
add
repnz
jb
add
jno
add
loopne
jge
clc
jecxz
mov
add
sub
in
int3
stos
adc
add
add
cmpsl
clc
mov
insb
mov
clc
bound
add
repz
mov
add
cmp
clc
sub
mov
pop
dec
mov
add
cli
rorl
and
jmp
adc
fldenv
add
push
clc
jmp
faddl
add
add
lahf
sbb
call
cmp
cmpsb
clc
dec
dec
push
add
bound
add
mov
inc
add
cmp
pop
daa
clc
jb
add
rolb
add
and
add
mov
clc
pop
sub
clc
jmp
jecxz
sar
pop
inc
add
inc
clc
jg
scas
cli
mov
insl
jmp
jae
add
clc
pop
test
pop
stc
stos
rorl
stos
mov
clc
sbb
fsubs
add
push
fidivrl
int
shrl
add
add
daa
clc
arpl
add
into
xchg
xchg
sti
outsb
nop
push
jmp
lea
add
ss
adc
add
imul
or
shr
xor
cld
jmp
popa
pop
fwait
mov
push
fimull
scas
push
add
sar
bnd
add
pop
jb
add
pushf
out
gs
pop
loopne
stos
enter
jae
add
int3
push
add
fisttpll
mov
add
lock
add
aaa
sub
clc
mov
imul
ret
clc
in
cwtl
mov
stos
jl
add
push
add
mov
clc
adc
add
add
mov
lock
add
lock
inc
clc
movsb
clc
sahf
outsb
fiaddl
add
add
xchg
xlat
mov
clc
mov
fadds
jge
aad
in
lret
xchg
pop
adc
add
popa
add
out
rorl
out
je
mov
add
mov
sub
insb
inc
clc
sahf
jmp
outsb
cmpsb
clc
cli
sbb
add
sbb
js
inc
add
outsl
das
in
push
clc
dec
movsl
clc
cli
mov
clc
fidivrs
jmp
xchg
or
mov
push
add
jnp
sbb
push
ret
je
mov
add
mov
clc
aad
cmp
xor
add
ret
clc
mov
add
add
add
mov
add
push
cmp
cld
jmp
pop
sub
jns
inc
clc
dec
mov
nop
loopne
fisubl
clc
cli
jb
add
sbb
clc
xchg
cmp
add
clc
pop
xchg
aam
push
add
popl
clc
jne
adc
call
cld
jmp
add
leave
adc
add
clc
out
ljmp
fwait
dec
cmp
add
mov
lret
cmp
adc
add
add
fldcw
inc
clc
xchg
bound
add
mulb
sahf
clc
enter
mov
add
xchg
mov
add
clc
fildll
xor
add
add
mov
pop
dec
mov
lret
add
js
and
add
repz
clc
loopne
jp
clc
cmpsl
clc
sub
push
add
es
outsb
or
or
call
mov
scas
inc
clc
mov
push
add
dec
fwait
out
outsl
cmp
inc
clc
ljmp
fwait
add
mov
push
adc
add
sbb
aas
sub
cwtl
scas
and
add
dec
xor
add
jp
xbegin
dec
sbb
jbe
add
add
add
mov
xor
add
stos
jo
add
clc
subps
pop
data16
pop
cli
mov
push
int3
push
bnd
add
clc
cmc
sub
or
clc
and
add
push
mov
add
nop
push
push
nop
inc
clc
push
sar
mov
or
icebp
inc
clc
insb
mov
cmpsb
clc
and
cmp
jbe
clc
and
jbe
ds
xchg
je
add
or
mov
clc
jmp
test
bound
add
add
push
push
cld
jmp
add
add
xchg
out
filds
mov
jb
add
and
add
das
ss
test
clc
ljmp
jo
add
add
mov
adc
add
mov
cltd
cld
add
add
push
mov
cld
jmp
ja
imul
gs
incb
add
lea
mov
add
js
mov
add
xchg
popa
add
fnsave
ret
clc
movsb
clc
sub
add
pop
jg
shll
lods
xchg
cmc
stc
or
mov
pusha
add
xchg
mov
jl
cltd
jnp
or
clc
mov
clc
and
add
mov
daa
clc
jne
clc
ss
push
add
adc
sub
adc
clc
fwait
out
xchg
xlat
repnz
mov
bound
add
out
add
ja
mov
rol
clc
out
jne
jmp
aas
rcll
sbb
mov
adc
add
clc
pop
cmp
clc
lahf
xchg
jmp
add
pop
sub
sub
cld
jmp
inc
push
es
cmp
clc
push
add
cld
jmp
insb
and
add
mov
add
and
add
add
dec
sub
push
cld
jmp
pop
std
add
repz
pop
popf
mov
clc
stos
and
add
pop
push
pop
in
cld
jmp
leave
scas
leave
mov
clc
dec
inc
add
xor
in
dec
hlt
lahf
pop
lea
loope
mov
ljmp
add
pop
clc
ss
insl
push
add
xchg
outsb
cmp
outsb
push
xchg
ja
sbb
clc
adc
add
add
jne
pop
cld
jmp
sub
adc
add
and
add
mov
pop
call
ficoms
add
int3
mov
adc
add
mov
push
push
cwtl
xor
add
mov
leave
aas
icebp
icebp
cmp
sbb
test
xbegin
mov
rolb
mov
mov
flds
ret
and
test
clc
jmp
scas
mov
scas
out
addr16
adc
clc
mov
add
sbb
clc
cmp
add
jp
mov
cld
jmp
push
add
add
sar
mov
inc
add
enter
or
adc
add
cmp
clc
add
add
add
out
or
clc
cmp
sub
xor
loope
test
clc
rep
clc
es
mov
js
fs
pop
cld
movsb
clc
push
jge
clc
pop
fwait
mov
add
push
jno
add
dec
sub
insl
add
cmpsl
clc
adc
add
clc
mov
add
jmp
sub
das
es
mov
and
add
add
in
and
cmp
add
movsl
clc
push
mov
add
adc
clc
ja
add
jae
add
push
sbb
push
add
clc
xchg
fucomip
addr16
xchg
lods
shl
clc
incl
ret
push
inc
add
orb
clc
insb
mov
inc
add
dec
cmp
clc
int
clc
fdivrs
imul
add
clc
inc
clc
xchg
es
ljmp
popa
add
repnz
add
add
cltd
add
pop
lods
inc
add
xchg
lcall
add
in
xchg
fidivs
add
clc
lods
fisttpl
and
add
adc
add
or
cld
jmp
or
sbb
jmp
cmpsb
push
add
add
out
mov
rclb
add
jle
clc
mov
pop
jb
add
stos
iret
add
mov
data16
fidivl
sub
push
mov
jmp
adc
scas
xor
and
dec
cmp
add
xchg
nop
dec
and
add
add
add
jb
add
clc
cmp
sbb
add
dec
scas
aam
mov
add
adc
add
jp
adc
add
mov
ss
ret
sub
pop
pusha
add
mov
js
daa
clc
and
bound
add
sar
add
add
add
stos
inc
clc
dec
mov
add
daa
clc
popa
add
mov
jge
leave
aas
cmp
clc
push
sub
adc
add
clc
in
mov
insb
ss
sub
dec
lock
xchg
and
add
add
leave
mov
cmp
mov
clc
icebp
pop
inc
clc
dec
mov
clc
pop
add
add
cmc
xor
add
sbb
push
or
jmp
dec
das
push
int
call
ss
ret
xor
std
cmpsl
clc
dec
ljmp
add
clc
xbegin
clc
fs
lods
iret
sti
pushf
xor
add
mov
fst
ffree
clc
cmp
stos
mov
mov
fidivs
mov
push
add
cmp
stos
call
clc
test
push
add
cli
add
add
adc
add
clc
inc
add
jmp
xchg
mov
push
push
add
inc
sub
das
cmp
sub
jo
add
add
add
cld
jmp
and
add
add
pop
or
ds
pop
hlt
sbb
loop
jmp
adc
mov
rclb
add
in
fcmovu
push
insl
int
push
push
cld
jmp
ja
clc
sub
cwtl
jne
jne
push
xor
add
jmp
cld
jmp
push
outsl
push
add
jle
add
mov
add
cs
std
inc
clc
add
add
clc
and
add
or
add
add
outsl
repz
jmp
add
add
enter
fiaddl
and
add
add
clc
xor
add
lcall
arpl
add
add
and
add
push
cmp
clc
int3
pop
scas
loop
inc
add
cmpsl
clc
inc
add
js
pusha
add
xor
add
out
cmp
clc
test
add
add
add
rcrl
fisubrs
inc
add
push
add
int3
add
add
adc
add
add
clc
mov
clc
dec
push
jle
aam
push
mov
add
add
mov
mov
clc
es
add
add
mov
add
addr16
mov
les
push
ret
sub
in
add
add
clc
dec
sahf
dec
es
out
ljmp
mov
test
add
mov
mov
clc
test
imulb
pop
idivl
mov
outsl
loopne
sar
xor
add
pop
scas
cmp
scas
rcl
mov
dec
dec
data16
sti
cmpsb
clc
and
test
addr16
cltd
test
dec
int
clc
divb
add
cltd
enter
add
add
mov
add
mov
sub
inc
clc
sti
clc
dec
incl
fdivrp
ljmp
sub
or
jo
add
or
add
mov
cld
jmp
dec
lret
jecxz
jecxz
sbb
clc
movsl
clc
out
imul
icebp
cmp
sub
jmp
movsb
dec
sahf
adc
out
ret
test
cld
jmp
es
add
outsl
inc
clc
cmp
clc
sbb
enter
mov
shrb
int
sub
clc
loope
xlat
cmovl
sti
jl
clc
int
jmp
imul
jbe
pop
dec
loopne
or
int
outsb
mov
cmp
insl
cmp
cld
jmp
sahf
sbb
dec
cmp
add
ja
dec
pushf
out
dec
mov
add
add
ds
sar
aad
out
in
stc
rorl
mov
aam
clc
gs
adc
clc
or
clc
ds
loopne
inc
add
aas
std
mov
stos
mov
mov
add
cld
jmp
jno
mov
add
mov
lods
xchg
in
xor
clc
js
add
add
add
hlt
into
test
out
in
out
clc
ret
clc
cmp
sahf
mov
xlat
cmp
clc
enter
data16
mov
outsb
aad
mov
adc
add
movsl
clc
add
add
cmpsl
clc
sar
shufps
pop
pop
lahf
imul
add
icebp
jge
clc
mov
push
add
push
clc
mov
adc
lret
mov
adc
add
in
mov
cli
js
sbb
arpl
add
jmp
popa
clc
test
stc
lea
xabort
pop
clc
pop
push
add
cmpsb
clc
push
dec
sti
jno
add
clc
mov
in
mov
in
sbb
or
add
repz
mov
clc
enter
clc
lcall
add
mov
push
add
js
inc
add
pop
pop
clc
outsb
cwtl
lret
shll
fimuls
add
xor
add
add
addr16
xchg
sbb
clc
sbb
add
cmp
cwtl
insb
fidivs
inc
add
xor
add
ja
clc
mov
clc
sub
push
xor
add
mov
cld
jmp
inc
add
sub
mov
cmpsl
clc
mull
clc
pmaxub
add
mov
and
add
mov
inc
clc
cmp
clc
mov
adc
add
clc
jge
mov
add
mov
xchg
adc
add
mov
lods
mov
inc
add
sahf
jge
movsl
clc
fadd
clc
mov
call
cld
jmp
insb
je
dec
out
pop
inc
add
and
add
ja
jl
add
mov
in
mov
xor
sbb
fs
mov
push
lea
sub
add
xlat
adc
add
add
outsb
ss
clc
sar
clc
add
add
pop
sbb
add
mov
cs
add
cli
daa
clc
jne
adc
add
clc
shl
clc
cld
xor
add
sub
clc
lock
add
fwait
ja
add
or
clc
or
loopne
cld
mov
pop
inc
add
sub
cld
jmp
add
cmpsb
arpl
add
clc
push
add
lahf
cmp
jb
add
pushf
stos
fldenv
inc
add
fsubr
cmp
clc
sbb
add
pop
mov
clc
arpl
add
adc
add
dec
stos
add
and
out
lock
clc
or
mov
test
sub
mov
adc
xchg
in
sti
xchg
add
add
clc
sbb
mov
loopne
rcll
add
addr16
sub
inc
clc
add
add
jb
add
add
iret
cmp
aad
clc
jno
add
ljmp
clc
das
mov
repz
pop
sahf
add
add
out
imul
add
push
jmp
add
xlat
push
sarl
icebp
push
jmp
test
add
add
out
inc
clc
jbe
xor
add
clc
rorb
mov
ficompl
xchg
fs
adc
add
jmp
cld
jmp
ja
jp
clc
bound
add
push
xchg
jmp
add
adc
add
add
add
mov
mov
pop
or
pop
pop
clc
push
mov
cld
jmp
sahf
cmp
aas
ja
add
pop
nop
pop
daa
clc
adc
add
or
add
mov
hlt
inc
clc
popf
jbe
add
loopne
sbb
sar
or
clc
fwait
lret
add
cmp
push
clc
loop
in
mov
pop
clc
cs
popf
inc
add
fildll
mov
cmp
pop
jne
clc
push
mov
cld
jmp
mov
adcb
cld
jmp
in
add
add
push
add
clc
mov
add
xchg
sarb
xchg
cmp
xor
add
je
mov
add
dec
das
push
and
add
clc
std
pushf
push
add
push
lods
cld
cltd
fwait
enter
fiaddl
in
out
and
add
pop
add
pop
je
sub
loop
jbe
mov
ss
ret
push
add
addr16
out
or
add
int3
mov
pusha
add
push
add
mov
sbb
mov
pop
cltd
in
pop
jno
add
pop
out
sub
clc
cmp
push
add
cld
jmp
aad
clc
add
add
add
leave
cli
insb
cmp
clc
clc
cmp
adc
add
add
cmpsb
clc
pop
sar
clc
adc
add
add
mov
add
frstor
add
dec
jbe
clc
mov
es
xchg
push
cli
in
sbb
pop
sar
jne
mov
pop
adc
add
adc
ret
clc
jne
clc
jecxz
push
pop
aas
hlt
jge
jne
clc
inc
add
repnz
add
xor
add
add
dec
insl
lret
clc
jmp
jae
add
add
lods
inc
clc
ljmp
out
sar
inc
cld
jmp
xchg
or
pop
out
rorb
fsub
clc
xchg
dec
fisubrs
jmp
ret
clc
in
add
sbb
pop
xbegin
jb
add
clc
mov
cld
iret
sbb
add
fcompl
xlat
mov
clc
test
mov
clc
pusha
add
and
add
add
add
fwait
leave
ret
clc
sub
add
mov
adc
add
xchg
adc
test
clc
xchg
mov
inc
clc
push
add
cmp
xchg
dec
ja
inc
clc
mov
add
clc
mov
inc
add
aas
add
mov
adc
add
rcll
pop
stc
repz
clc
daa
clc
adc
add
add
xor
mov
hlt
cli
xor
add
arpl
add
dec
pop
push
cmp
add
shll
pop
and
add
clc
rorb
incb
clc
push
pushl
sub
and
add
fnstcw
clc
loop
ljmp
lahf
and
add
fs
xchg
or
mov
cmp
add
inc
add
lret
add
cmp
add
sti
test
inc
clc
fidivrl
add
mov
cld
clc
cmc
push
add
dec
std
test
xchg
or
cmpsb
clc
sub
push
je
cmp
clc
movsl
clc
cli
out
xchg
push
add
cmp
adc
or
sub
push
ret
sub
adc
add
pop
xabort
clc
add
or
arpl
add
add
and
add
add
add
clc
and
add
add
or
mov
add
repnz
in
arpl
add
jl
icebp
stos
mov
enter
cmp
add
rclb
sub
jmp
and
das
jmp
nop
push
cmpsb
clc
ja
add
pusha
add
sub
clc
jecxz
mov
add
dec
lret
sbb
loopne
mov
mov
call
idivl
popa
add
jb
add
add
or
out
mov
cmp
add
vxorps
fstp
cmp
mov
add
jmp
out
popl
add
or
add
inc
add
leave
jmp
gs
fsubl
mov
add
sbb
clc
movsb
clc
jle
clc
sub
xabort
clc
dec
sub
add
insl
mov
add
add
add
add
add
clc
popf
scas
mov
add
add
cld
jmp
add
jb
add
fsts
outsl
cmp
inc
cld
jmp
test
add
xchg
addr16
xchg
sub
data16
je
clc
mov
in
sahf
imul
push
nop
pushf
mov
xor
add
call
test
stos
inc
clc
enter
add
sbb
jbe
cld
jmp
pop
and
inc
clc
mov
das
gs
movhps
jmp
clc
adc
add
sub
fstps
fs
cmp
add
test
dec
movsl
clc
cmp
lahf
xlat
sbb
repz
aaa
pop
bnd
xchg
cli
popa
add
inc
clc
int3
mov
adc
repz
add
add
pop
jnp
mov
cld
jmp
imul
cmp
clc
dec
nop
arpl
add
movsb
clc
mov
add
xchg
xchg
sbb
icebp
cld
jmp
and
adc
clc
fucomp
iret
mov
or
add
add
jmp
out
shlb
clc
jbe
shll
stc
out
xor
add
add
bound
add
add
cmp
add
stc
pop
inc
clc
push
pop
out
sub
data16
enter
add
mov
cld
jmp
xor
dec
iret
jb
add
sub
pop
cld
jmp
pop
xchg
sub
mov
mov
cmp
add
push
add
ret
clc
cmp
or
imul
aam
arpl
add
push
jl
cmp
mov
clc
cmp
push
sarb
in
jbe
lea
clc
cmp
clc
add
add
hlt
aam
clc
push
add
push
xor
cld
jmp
add
add
clc
push
add
cltd
push
inc
clc
sbb
clc
int
xor
jo
add
push
add
sub
ja
and
add
add
push
add
cld
jmp
sub
cmpsl
clc
sub
lahf
add
fisubl
clc
shll
pop
jb
add
cmp
xchg
mov
sub
imul
cmp
and
add
jmp
clc
mov
clc
cmp
xchg
inc
add
inc
add
movsb
clc
adc
add
add
pop
aad
sbb
dec
pop
movsb
clc
imul
and
add
imul
xbegin
add
and
add
add
jo
add
push
scas
cmp
and
add
mov
add
jmp
es
test
fdivrs
clc
or
push
add
sub
clc
and
add
inc
clc
aad
cmp
clc
in
pop
shlb
call
cld
jmp
or
pushf
mov
adc
add
fs
outsl
data16
xabort
clc
push
xchg
add
add
cld
add
add
lock
clc
xchg
xor
add
pop
mov
lret
imul
clc
jl
clc
sub
aas
cmp
clc
xchg
test
outsb
enter
stc
push
popa
add
je
clc
ja
sub
inc
clc
movsl
clc
or
test
fidivs
add
add
repnz
add
inc
clc
xor
add
sbb
cmp
add
fs
pop
and
out
out
lods
loopne
inc
add
jno
add
adc
push
clc
mov
sub
add
add
movsb
clc
clc
jae
add
mov
xchg
sub
add
arpl
add
dec
sbb
mov
inc
clc
fmull
xbegin
cmp
clc
xchg
sbb
add
jge
push
add
ret
imulb
clc
pop
push
lahf
sub
dec
outsb
mov
mov
shll
mov
mov
add
outsb
mov
push
add
lret
sbb
test
jl
lock
or
add
xor
leave
es
adc
add
add
pop
icebp
jmp
add
xbegin
add
mov
mov
add
call
mov
and
push
add
xor
add
test
mov
jmp
subb
cmp
in
and
clc
mov
add
outsl
push
pop
clc
ficoml
es
out
mov
clc
adc
inc
add
mov
dec
and
cwtl
xchg
sub
mov
dec
cmp
clc
cli
sub
and
add
dec
insb
shlb
clc
dec
adc
je
cld
jmp
gs
cltd
or
mov
call
stc
push
clc
cld
ja
clc
fisubrl
clc
jmp
lahf
std
rdpmc
add
mov
inc
clc
aad
dec
insl
fidivs
push
loop
dec
fs
mov
sbb
notl
clc
test
jle
sub
mov
lods
ss
ret
push
lods
scas
push
pusha
add
cld
xchg
aaa
dec
mov
clc
out
gs
push
fnsave
inc
add
mov
arpl
add
sub
cmp
enter
es
fcoms
add
xchg
inc
add
data16
mov
clc
mov
inc
add
push
add
mov
add
add
jo
add
clc
fwait
and
add
mov
icebp
bound
add
lea
outsb
cwtl
sbb
push
add
sub
aas
movsb
fiadds
clc
test
sub
clc
fisttpl
add
adc
test
cmp
clc
mov
or
sub
add
clc
mov
or
clc
lcall
add
in
push
cmc
mov
xabort
jle
bound
add
add
popf
cmp
into
lods
push
iret
dec
cmp
add
bound
add
cmp
mov
add
clc
push
add
lea
push
add
inc
add
inc
clc
aad
dec
cld
adc
out
aad
clc
mov
lret
pusha
add
and
add
clc
cmp
cltd
dec
das
int3
scas
xchg
sub
sub
jp
insb
lahf
sbb
push
xor
out
jns
idivl
ret
clc
js
add
aaa
iret
aaa
adc
add
repz
add
sbb
cmpsl
clc
das
mov
testl
and
push
clc
in
pop
bnd
fidivs
xor
cld
jmp
leave
loop
adc
add
je
xchg
inc
add
add
rcr
popf
cmp
clc
sbb
jge
cld
jmp
adc
test
insl
test
aad
cmp
clc
cwtl
add
add
add
add
add
ja
movsl
clc
jb
add
imul
add
ror
mov
clc
bound
add
faddl
mov
rcrl
mov
cld
jmp
inc
xchg
add
cmp
mov
call
clc
test
inc
add
cmp
cmp
cmpsb
clc
push
inc
add
jnp
cmp
stos
es
cmp
add
cwtl
xchg
jl
inc
clc
fisttps
clc
call
sbb
mov
lret
add
cli
pandn
fstpl
push
adc
out
int
test
shlb
add
mov
insb
sbb
iret
rol
clc
decl
jmp
xor
xchg
nop
popa
add
in
and
stos
mov
push
mov
mov
clc
stos
or
add
add
and
stc
pop
ss
cli
sti
inc
clc
push
add
jbe
add
adc
add
adc
add
mov
div
xabort
clc
or
adc
add
loop
cmp
add
cmp
mov
dec
sub
add
mov
int3
push
psrlw
out
or
push
test
clc
insl
pop
int3
aas
xchg
pop
clc
push
cs
cld
jmp
imul
cmpsb
clc
or
dec
mov
pushf
movsb
clc
pop
lahf
decl
jb
ljmp
je
mov
clc
out
mov
pop
clc
out
mov
clc
add
add
clc
mov
pop
xor
add
xchg
mov
mov
sub
clc
inc
clc
movsl
clc
push
mov
test
cld
jmp
sub
sub
clc
pop
popa
add
jge
clc
imul
add
or
rcrl
sub
clc
daa
clc
add
add
stc
in
inc
add
popa
add
stos
cltd
xabort
clc
cmp
push
add
cld
jmp
test
mov
inc
add
ret
mov
add
in
popa
add
cs
clc
add
add
mov
mov
jmp
sub
ret
cld
jmp
push
mov
pop
jp
cmp
add
clc
out
ss
pop
adc
mov
clc
ret
clc
adc
add
clc
pop
test
pop
add
insl
cmp
clc
mov
add
push
inc
clc
cmpsl
clc
push
push
cld
jmp
sub
jno
lea
push
add
insb
fdivrl
jp
clc
outsl
sar
pop
sbb
pop
push
add
push
insb
sbb
leave
jo
add
pop
pop
lods
sar
cmpsl
clc
add
add
xor
add
dec
lahf
push
dec
sbb
cmp
clc
sub
out
add
push
add
stos
xbegin
add
jbe
push
hlt
in
lcall
movsb
clc
je
inc
clc
push
add
sar
jg
aam
pop
cmpsl
clc
dec
xchg
fs
mov
cmpsb
clc
into
dec
mov
je
cld
jmp
jns
clc
dec
outsb
add
add
incb
clc
out
push
clc
test
ret
clc
sub
scas
jb
add
mov
clc
xchg
cmpsl
clc
xor
dec
cld
xor
in
insb
fisttps
scas
outsl
cmp
mov
clc
jne
mov
add
outsb
outsl
test
in
fcmove
dec
adc
add
push
ss
ret
dec
pop
sub
clc
jae
add
pop
fnstcw
jmp
sahf
or
jp
fwait
cmp
add
jb
add
shl
cld
jmp
sub
dec
dec
popa
add
rcll
cld
jmp
cmp
jp
push
clc
pop
and
add
mov
add
cwtl
jns
cmp
clc
ja
clc
imul
out
push
add
popa
add
testl
xor
add
add
daa
clc
imul
cmp
shrl
add
je
clc
push
add
cld
jmp
push
clc
jbe
out
test
mov
clc
aaa
jle
push
sbb
imul
add
jns
mov
add
add
add
clc
pop
pop
into
add
aad
in
dec
pop
fisubl
add
add
add
add
clc
xchg
or
mov
add
movsb
clc
mov
data16
jns
add
gs
ss
clc
gs
pop
clc
dec
add
add
call
in
or
mov
fisubrs
pop
dec
add
cld
jmp
add
xor
clc
ss
clc
nop
stos
pop
clc
and
add
out
nop
cli
xchg
pop
jecxz
pop
adc
add
add
xor
add
pop
clc
mov
dec
movsl
inc
add
sub
sub
or
add
scas
dec
push
mov
cld
jmp
aaa
sub
add
add
mov
sahf
enter
add
push
add
push
cld
jmp
dec
xor
add
jnp
add
pop
data16
jbe
addr16
cmp
insb
out
arpl
add
add
cld
jmp
push
outsl
dec
outsl
leave
mov
in
repnz
dec
lret
out
cwtl
push
or
add
lret
push
cld
jmp
and
xor
repz
clc
adc
add
sbb
test
cmp
add
add
lods
dec
adc
add
add
scas
sar
sbb
pusha
add
push
clc
pop
pushl
cld
jmp
jge
adc
addr16
xchg
sub
add
cmp
clc
inc
clc
adc
add
sbb
clc
pop
pusha
add
jo
add
inc
clc
mov
clc
xor
jo
add
add
cmp
jns
and
add
add
push
push
mov
out
mov
clc
fs
xor
add
add
ds
mov
add
mov
clc
int
xchg
xchg
push
mov
jge
add
xabort
ja
clc
sub
add
dec
movsb
clc
ljmp
add
pop
ret
clc
sar
push
ss
ret
sub
sub
clc
aas
push
clc
sub
fidivrs
sbb
decb
or
push
addr16
dec
xlat
or
clc
std
jg
outsl
jo
add
lret
add
fwait
cmp
ds
sub
clc
or
clc
jo
add
fcoms
cld
jmp
mov
add
add
testl
add
push
add
push
cmp
loop
sar
rolb
cld
xor
push
xor
out
jg
add
loopne
clc
pusha
add
add
mov
clc
pop
popa
add
cli
mov
cmp
xchg
jle
add
inc
add
or
add
add
push
jne
clc
and
jecxz
imul
dec
mov
ret
clc
fxch
shrb
call
arpl
add
add
es
fucom
clc
call
fistps
mov
dec
push
cld
jmp
xchg
fs
lods
or
add
inc
clc
ficompl
icebp
add
add
and
pusha
add
cwtl
mov
rolb
fcompl
mov
push
ret
sub
mov
dec
cmpsb
clc
fmulp
pop
clc
in
push
add
mov
xor
add
in
or
lahf
fists
add
add
pusha
add
ja
clc
ret
lods
jns
add
add
inc
clc
sub
add
jmp
insb
cwtl
movsb
cltd
mov
clc
cmc
and
add
cmp
or
aam
daa
clc
adc
add
sahf
insl
push
add
ss
je
cld
jmp
pop
stc
mov
push
imul
adc
cs
sbb
cld
jmp
jg
lea
add
jae
add
clc
sar
clc
test
sbb
pop
inc
clc
add
add
xchg
xbegin
and
add
add
push
add
mov
add
mov
xor
add
in
pop
xor
jg
push
add
mov
loop
mov
xor
add
push
pop
addl
sbb
add
xchg
in
sbb
jo
add
add
clc
dec
shrb
mov
fstpl
jns
shlb
add
test
jb
add
adc
add
into
xchg
je
fs
cmp
xchg
lcall
aad
je
xchg
idivb
out
push
imul
add
sub
lcall
add
jge
xchg
dec
test
add
ds
push
push
call
sub
add
mov
sar
add
adc
add
into
in
mov
gs
outsl
xchg
jo
add
scas
jne
xor
cld
jmp
adc
ja
add
push
add
xchg
xchg
mov
sbb
pop
arpl
add
clc
push
add
push
call
pop
sub
mov
sub
in
xchg
inc
clc
lea
fmul
xchg
xbegin
lret
pop
out
mov
aas
aad
add
aad
mov
add
cld
jmp
mov
pop
mov
jecxz
ss
pop
arpl
add
xor
add
jmp
and
jno
add
add
or
add
lods
iret
mov
add
xchg
jns
ret
add
pushf
aas
adc
add
add
ror
stos
repz
jecxz
or
dec
inc
clc
lret
clc
daa
clc
mov
jnp
stos
cltd
arpl
add
clc
cmpsl
clc
inc
clc
sti
jecxz
mov
aam
pop
jae
add
lret
add
jmp
adc
add
pop
or
lret
dec
and
add
sub
jnp
xchg
mov
add
and
add
pop
push
push
jmp
sahf
mov
pop
mov
add
data16
sub
add
add
add
push
xchg
cld
jmp
mov
inc
cmpsb
jns
clc
adc
add
cltd
pushf
test
imul
xchg
adc
out
push
mov
mov
in
inc
add
lcall
add
jp
add
lcall
inc
clc
mov
stos
data16
data16
push
add
sub
lea
sahf
mov
clc
outsl
mov
and
add
add
xchg
neg
test
clc
aam
push
clc
pop
mov
fcmovbe
hlt
sar
clc
pop
pop
pop
fdivr
lahf
cmpsl
clc
test
sub
add
jno
add
add
jo
add
dec
pop
mov
jnp
lahf
stc
mov
int
decl
jo
call
enter
call
jno
add
sahf
inc
add
mov
add
aas
imul
shll
mov
clc
clc
imul
fldt
out
add
cmp
clc
xchg
mov
pop
jp
push
in
sbb
add
jmp
clc
lss
add
clc
lods
add
add
add
aam
add
movsb
clc
push
clc
mov
jns
add
add
mov
adc
add
fisttpll
add
imul
and
in
mov
pop
clc
filds
clc
dec
fsubrl
repz
clc
adc
add
clc
mov
and
add
add
add
add
add
cmp
scas
pop
or
clc
test
add
inc
clc
repnz
push
clc
out
lret
add
cld
jmp
xor
xchg
sbb
fildl
aaa
lret
sbb
mov
out
sbb
outsl
ficompl
mov
cld
jmp
pop
jno
lea
and
add
clc
add
add
clc
dec
sub
mov
inc
clc
xchg
push
sti
test
xchg
ret
push
clc
add
add
fistl
inc
clc
pop
sub
movsb
clc
add
add
jecxz
decl
and
and
add
test
call
clc
int3
in
push
add
or
adc
jmp
sub
xabort
test
clc
aam
aas
js
clc
dec
movsb
clc
add
add
xor
add
add
xabort
dec
xor
add
adc
push
pop
cld
cmpsl
clc
push
add
cli
mov
loop
stos
push
push
std
mov
lods
test
and
add
clc
xchg
adc
outsl
push
or
add
stos
sbb
add
adc
add
and
add
cmpsb
clc
movsb
clc
into
dec
das
push
clc
lea
jae
add
add
fnsave
add
dec
fidivrl
add
mov
and
add
add
iret
dec
test
int
clc
sbb
insl
add
add
add
jp
mov
jge
clc
imul
leave
pop
clc
clc
adc
add
clc
out
sbb
add
cld
jmp
push
cmpsb
sbb
inc
add
mov
clc
xor
add
clc
cmp
mov
inc
add
mov
mov
xchg
ret
clc
dec
sar
mov
dec
mov
mov
mov
clc
dec
jle
or
out
pusha
add
stos
add
mov
clc
and
add
loope
add
clc
cmc
in
pop
cmpsb
clc
popf
mov
arpl
add
jge
mulb
push
sub
clc
mov
add
sub
clc
add
add
adc
xbegin
mov
dec
inc
add
outsl
lods
stos
mov
loopne
cmp
adc
add
fdivrs
xchg
jle
fsubl
add
imul
sar
jmp
ja
fs
repz
mov
and
add
rcrl
and
add
add
pop
call
sbb
inc
clc
outsb
movsl
clc
dec
incb
clc
or
add
add
std
outsb
dec
xor
enter
xor
lea
add
or
clc
or
jb
add
je
scas
icebp
movntps
movsl
clc
cmp
mov
fcoms
lcall
push
add
or
jbe
pop
int3
inc
add
out
xchg
ficomps
bound
add
ja
pop
or
loope
inc
add
hlt
sbb
in
add
mov
push
cli
loop
xor
pop
cld
jmp
push
push
add
xchg
pop
lret
fldt
sub
xlat
mov
cmp
cmc
dec
int
clc
xabort
out
cld
xchg
mov
mov
inc
clc
add
push
in
sar
cmp
test
test
scas
and
add
add
add
data16
clc
daa
clc
out
sub
jne
jnp
outsb
mov
clc
push
clc
cmp
add
add
or
faddl
add
aad
dec
mov
mov
clc
fwait
popa
add
lea
add
cmp
add
clc
push
add
jl
add
jge
clc
ljmp
mov
xchg
notl
or
add
add
add
add
add
mov
adc
add
call
sbb
mov
inc
clc
and
add
xchg
push
xchg
push
add
add
add
pop
xchg
pop
mov
mov
clc
push
add
pop
nop
dec
clc
insb
jne
inc
clc
enter
out
std
es
cmpsb
clc
rcll
sbb
add
cld
jmp
dec
add
add
mov
add
mov
fidivs
pushf
adc
add
add
clc
pop
dec
inc
add
cwtl
and
add
mov
clc
iret
mov
adc
clc
into
jge
clc
pop
push
fmul
push
notb
add
clc
cmp
inc
clc
xchg
rorb
sar
push
out
dec
test
daa
clc
repz
add
aas
mov
clc
cmp
rol
clc
mov
and
add
clc
fiadds
add
adc
add
cwtl
nop
sbb
clc
cld
jmp
sub
sahf
xor
clc
add
ljmp
add
icebp
mov
inc
clc
sbb
jmp
cld
jmp
nop
fistpl
clc
cmp
lcall
cli
cmp
loopne
pop
clc
mov
clc
xchg
cwtl
inc
add
shll
add
bound
add
clc
dec
xchg
test
push
loope
sub
ret
clc
jg
push
cmp
pop
cmp
sbb
clc
int3
or
cwtl
jp
add
pop
daa
clc
mov
clc
icebp
cmp
clc
jbe
add
xchg
test
add
dec
xchg
cmp
ret
clc
pop
fstl
add
jns
imul
fcoml
add
add
movsl
clc
in
cmp
cmp
nop
daa
clc
sahf
push
add
pop
out
lods
adc
add
sti
adc
add
out
repz
cmp
lahf
and
add
clc
dec
jnp
cmp
popf
test
mov
inc
clc
pop
imul
add
add
mov
nop
or
ja
add
gs
arpl
add
add
jnp
add
sub
pop
add
jae
add
jnp
dec
aas
xchg
jae
add
shr
jl
clc
adc
add
cli
inc
clc
cmp
mov
js
mov
decl
sub
aas
fwait
aaa
fwait
mov
xabort
add
xchg
xchg
and
add
ja
pop
push
lea
cld
jmp
xor
sub
cmc
fists
add
pop
xor
notl
xor
add
repz
add
cmp
dec
pop
out
sub
add
inc
add
inc
clc
dec
fwait
jle
cmc
jp
xchg
test
pop
sahf
jo
add
iret
int3
sbb
add
addr16
fs
mov
add
ret
clc
fstps
fimuls
clc
adc
cwtl
jno
add
loop
lret
int
clc
mov
clc
es
sti
rep
adc
push
clc
fwait
and
add
push
dec
je
repz
add
add
in
nop
ja
and
pop
clc
sub
out
pop
loopne
ret
int
dec
roll
pop
xor
add
mov
mov
imul
add
lret
or
jecxz
push
mov
cld
jmp
subb
movsb
clc
popa
add
decl
test
inc
add
cld
jmp
lcall
fwait
or
cli
data16
fsubrl
inc
add
insb
mov
add
ficoms
add
insl
js
clc
mov
xchg
mov
lcall
jnp
mov
call
and
popf
ds
add
pushf
ror
adc
add
add
xabort
jl
sub
push
clc
sar
jmp
xor
clc
pop
out
fcomip
decl
sbb
add
mov
xchg
sti
aad
mov
stos
dec
imul
or
fwait
insl
and
add
cmp
cli
sarl
pop
je
add
mov
daa
clc
mov
add
daa
clc
mov
data16
pop
in
mov
das
or
dec
dec
test
and
fistpll
add
push
mov
ljmp
xor
push
imul
lret
cld
jmp
sub
add
add
adc
popf
xchg
loop
popa
add
out
ljmp
mov
pop
enter
push
add
in
dec
xor
add
nop
aaa
xchg
inc
add
data16
gs
out
ds
pop
jge
fmuls
xor
add
std
xor
add
add
mov
dec
mov
lods
aaa
push
cmp
add
in
cli
adc
inc
add
ljmp
xchg
push
imul
cmpsb
clc
paddb
clc
daa
clc
mov
jge
jecxz
mov
sahf
or
pop
sbb
gs
shl
jo
add
mov
clc
xchg
movsb
clc
mov
fmuls
inc
add
sar
push
cld
jmp
ja
mov
clc
fcompl
lock
mov
clc
data16
dec
movsb
clc
mov
cwtl
mov
add
jge
push
cld
jmp
sahf
xor
push
not
inc
add
xchg
pop
mov
mov
clc
js
clc
aad
cld
pop
lods
or
pop
sti
pop
test
lods
push
mov
add
add
add
sbb
mov
mov
cld
jmp
dec
sar
push
mov
outsb
sbb
in
dec
pushl
add
mov
add
ret
clc
cmp
repnz
add
cmp
mov
add
fcom
imul
add
pop
popa
add
xor
scas
js
ds
xchg
inc
add
addr16
outsb
std
jp
sti
pop
xchg
pop
clc
fsubr
add
add
add
clc
loope
scas
mov
clc
repnz
add
xchg
gs
xor
add
outsb
cmp
add
decl
add
sar
cmp
sbb
jmp
xor
mov
leave
pop
dec
xchg
clc
jns
clc
lahf
pop
test
adc
add
add
mov
xor
add
adc
add
lods
and
add
inc
add
and
add
enter
add
imul
bound
add
clc
sbb
cmp
fucomp
leave
fisubl
idivl
scas
xabort
scas
push
xor
add
clc
push
stos
push
jnp
ljmp
cltd
push
push
xor
add
inc
add
loope
outsb
xbegin
sbb
cmpsb
clc
xabort
xabort
cmp
add
repz
clc
cld
jmp
push
xchg
xchg
outsb
mov
lcall
lods
jbe
lea
clc
lods
repnz
ds
fdivs
add
hlt
inc
clc
push
or
clc
xor
add
ret
inc
add
mov
cwtl
inc
clc
in
mov
loope
add
add
add
mov
jae
add
je
add
inc
clc
push
add
add
cpuid
clc
js
sbb
mov
add
in
ret
adc
xor
add
movsl
clc
icebp
test
cmp
add
push
add
out
fcompl
add
adc
nop
imul
sub
icebp
mov
and
add
fmul
loop
into
lgs
clc
ljmp
ss
ret
sub
lods
push
xchg
jp
clc
repnz
add
or
add
jo
add
mov
bnd
add
xchg
xchg
add
add
clc
mov
sub
clc
lahf
adc
add
clc
out
mov
add
adc
add
aam
movswl
scas
inc
clc
cmp
clc
mov
clc
xchg
mov
or
jns
in
cmc
mov
out
inc
add
jl
fld
clc
ljmp
add
test
add
cmp
clc
mov
add
pop
adc
add
xor
add
ss
je
or
dec
and
test
cmp
add
imul
xchg
xor
add
push
jmp
jno
ja
mov
clc
inc
clc
out
mov
mov
rcrl
in
in
inc
add
xabort
xor
add
add
push
clc
xchg
push
js
clc
clc
mov
add
push
cmp
inc
clc
cmp
pop
clc
addr16
xor
add
mov
movsb
decl
nop
inc
outsl
or
add
add
popf
pop
xabort
decl
popl
add
mov
lcall
add
cmp
sbb
mov
cmp
add
cld
jmp
sub
xor
mov
inc
clc
dec
roll
xchg
in
int3
push
lock
clc
fdiv
xor
loopne
scas
scas
fcmovb
clc
sub
mov
add
add
inc
clc
incl
jne
cld
jmp
xor
aas
push
add
insb
bound
add
in
data16
pop
mov
adc
add
outsb
mov
jbe
and
add
pop
add
adc
push
jmp
add
clc
add
add
jmp
fs
jp
jle
adc
add
mov
and
add
jle
fstpl
mov
clc
push
add
or
mov
in
out
faddl
xabort
clc
mov
push
add
es
push
clc
add
add
clc
rolb
add
stc
jmp
clc
inc
add
out
icebp
jmp
jge
mov
xchg
pop
xchg
ds
sti
clc
movsl
clc
aas
mov
xor
add
cld
jmp
insb
fnsave
mov
clc
outsl
ret
clc
jne
test
filds
add
add
popa
add
lods
rorb
inc
add
cmp
adc
add
dec
hlt
jne
sarl
cmp
clc
je
jecxz
sub
add
xchg
cmp
pop
jmp
sbb
mov
clc
clc
jns
cmp
add
push
jmp
es
adc
clc
add
add
pusha
add
call
loope
sbb
push
ret
add
test
lahf
into
and
add
add
or
add
push
add
mov
sti
enter
out
cmp
cld
push
icebp
loope
cmp
xbegin
add
add
gs
push
clc
push
outsb
mull
clc
lods
cmp
xchg
rcl
cltd
cmp
arpl
add
out
lret
loop
lock
add
and
add
fwait
add
aam
cmp
push
pusha
cld
jmp
cmp
aaa
sar
cmp
xor
add
test
sahf
ja
ret
clc
mov
add
mov
sbb
xchg
jp
filds
add
cld
jmp
fs
jge
sub
add
push
add
mov
add
mov
add
test
leave
je
clc
repz
dec
loop
xchg
divb
aad
xor
add
dec
sbb
clc
mov
cmc
mov
clc
stos
repnz
add
or
xor
add
dec
ret
add
push
jne
cld
jmp
push
jl
jmp
pop
mov
arpl
add
clc
lret
out
repnz
xchg
jle
clc
mov
pop
in
fcoms
add
push
add
test
xabort
clc
cmpsl
clc
cmp
inc
add
daa
clc
or
sbb
add
movsl
clc
mov
jo
add
lods
adc
add
inc
add
inc
add
sar
mov
clc
mov
or
out
cmpsb
clc
das
pop
clc
mov
clc
ret
push
push
mov
outsl
out
add
mov
add
adc
add
popf
adc
add
add
add
jl
add
stc
ljmp
ds
add
mov
clc
pop
mov
out
xor
add
adc
add
add
xchg
jnp
ljmp
mov
clc
xor
clc
mov
dec
ret
pop
in
repz
add
pop
std
mov
clc
adc
add
clc
negl
cmp
clc
mov
add
jl
scas
cmp
mov
cld
jmp
push
sub
mov
fs
iret
neg
inc
clc
arpl
add
cmp
clc
enter
add
daa
clc
jmp
clc
pop
clc
test
push
mov
aad
add
xor
ja
clc
xchg
xor
add
aad
add
xchg
mov
clc
clc
xor
add
add
add
add
dec
and
addr16
lods
mov
repnz
add
jg
repnz
clc
add
cmpsl
clc
sbb
repz
jmp
xchg
insb
xor
stos
adc
add
clc
sar
mov
add
sbb
add
cmc
sbb
scas
idiv
incl
jge
sub
add
add
cmp
cmp
clc
nop
test
mov
add
stc
cmp
add
push
xor
add
jge
add
push
cmp
add
jb
add
cmp
add
inc
add
xchg
lods
dec
mov
stc
jle
loope
adc
pop
imul
add
clc
iret
lret
push
jns
cmp
cld
jmp
xor
clc
xabort
out
pop
clc
xlat
mov
add
push
add
push
test
add
pop
aaa
popa
add
inc
add
mov
clc
pushf
mov
add
ds
cwtl
lock
clc
push
mov
add
movsl
clc
xor
xchg
fmul
mov
jnp
mov
mov
add
add
clc
jle
xor
add
insb
int3
cmp
cmpsl
clc
jl
clc
inc
clc
stc
fimuls
dec
fsub
clc
fsubs
inc
add
add
add
or
sub
jmp
cs
push
jo
add
push
add
cld
jmp
push
xor
add
mov
clc
fsubrs
stos
stc
test
loopne
add
add
out
pop
daa
clc
leave
clc
and
add
clc
add
add
pop
clc
cmpsb
clc
pop
push
sub
sbb
ret
add
add
add
cld
add
add
add
add
sbb
clc
aaa
add
cmpsl
clc
bound
add
mov
sbb
jmp
mov
ljmp
xor
fwait
mov
mov
clc
stc
jno
add
pop
clc
mov
pop
mov
pushf
das
add
sub
sub
sub
add
clc
notl
add
bnd
clc
sub
sbb
fnstsw
inc
add
leave
mov
pop
cmp
clc
mov
clc
and
add
mov
pushf
cmp
js
add
imul
clc
lahf
mov
jmp
shlb
push
add
sti
inc
add
xchg
sub
add
loope
xor
clc
fldl
add
dec
clc
dec
mov
inc
add
push
clc
or
sahf
xor
add
add
add
add
sub
and
int3
push
aad
das
test
clc
mov
add
xchg
mov
imul
adc
cmp
clc
sub
xchg
and
dec
mov
add
movsl
clc
shlb
cld
jmp
push
test
add
dec
pusha
add
into
pop
cwtl
adc
add
arpl
add
pop
clc
cld
cld
sbb
add
clc
sub
mov
cmp
mov
iret
inc
add
push
imul
sub
xor
add
fwait
or
test
jmp
lods
test
mov
test
iret
ss
cmpsl
clc
xchg
into
inc
clc
add
add
dec
cld
jmp
lea
mov
xchg
mov
clc
out
lret
clc
aas
xor
add
or
add
scas
loopne
mov
iret
cmp
inc
add
push
sbb
inc
add
jns
add
or
or
clc
cmpsb
clc
sbb
icebp
cld
jmp
jge
outsl
fwait
cmp
call
jmp
insb
sub
scas
mov
add
add
fwait
mov
pushf
xor
add
add
add
add
lret
fcmovne
xchg
loop
lret
push
clc
or
enter
push
es
pop
clc
mov
ror
jb
add
add
loop
dec
arpl
add
pop
test
rolb
xor
inc
clc
mov
ret
clc
add
dec
push
add
leave
cmp
clc
sbb
add
mov
mov
test
lods
xchg
xchg
and
add
and
add
add
int
loopne
jae
add
mov
imul
push
add
lret
xchg
sub
add
add
lret
pop
test
jb
add
jb
add
clc
sbb
dec
movsl
clc
add
add
clc
push
jmp
xor
scas
sub
jne
pop
mov
fsubl
clc
popf
es
cmp
clc
lods
adc
inc
clc
test
push
add
fdivrs
in
push
loop
xchg
add
add
cld
jmp
cmpsb
movsb
sub
pop
adc
jmp
xor
add
ja
add
jecxz
and
sar
clc
inc
add
mov
imul
into
daa
clc
fnsave
clc
movsb
clc
jg
cmp
int3
fildl
clc
adc
add
vmovlps
add
clc
repnz
sar
jg
sbb
jne
aad
fs
outsb
out
in
jge
clc
adc
add
add
clc
dec
jg
push
jmp
cmpsb
cwtl
ja
movsl
clc
push
jmp
aas
mov
add
mov
lea
xor
add
sub
add
test
test
das
scas
mov
clc
push
out
cmp
clc
push
add
sahf
into
xchg
cmp
xor
add
out
sbb
jmp
fwait
pushl
sub
inc
add
cltd
pop
incl
js
cld
jmp
lods
sub
jo
add
pop
cmp
jmp
lea
push
out
lcall
std
aas
rorl
add
cmp
inc
add
push
clc
gs
sar
cwtl
mov
sbb
add
inc
add
stos
add
add
das
cmp
in
mov
lret
clc
fnstsw
xor
flds
mov
out
lea
add
and
add
clc
adc
add
cltd
dec
addr16
cs
clc
pop
int
insl
repnz
movsb
clc
dec
ret
clc
cmp
pop
testl
cmp
cmc
je
clc
je
outsl
insb
and
add
and
add
pusha
add
mov
adc
add
add
pop
sar
add
test
hlt
inc
clc
mov
aad
sub
clc
stc
jle
clc
dec
arpl
add
add
dec
push
lret
test
cli
sarl
lcall
add
stos
in
imul
clc
popf
sub
add
add
add
clc
cmp
clc
call
mov
ss
ret
imul
add
js
clc
es
sub
add
jmp
inc
sub
or
clc
data16
and
cmp
dec
lret
add
stos
jecxz
mov
mov
inc
clc
insl
out
jns
xchg
mov
xlat
fnstenv
add
sub
test
add
and
add
clc
adc
add
mov
add
loope
push
leave
stos
push
add
and
add
jl
clc
push
int3
scas
sub
ffree
clc
sahf
push
add
mov
dec
xbegin
add
push
add
outsl
and
add
add
push
xor
add
cltd
jns
add
mov
clc
scas
loope
fmuls
mov
dec
sets
clc
cmp
add
rcrl
dec
xchg
mov
ret
in
cmpsb
clc
aas
test
out
or
clc
in
xchg
dec
rclb
add
add
add
sar
push
add
cld
jmp
ret
mov
mov
jp
or
and
add
clc
dec
test
clc
roll
add
mov
sbb
call
aaa
stc
jg
xchg
scas
sahf
loope
in
add
add
mov
imul
adc
add
test
in
inc
clc
xchg
aaa
sar
xchg
divl
jne
cld
jmp
xchg
adc
mov
lods
in
psrld
data16
in
add
out
loop
mov
add
mov
xchg
dec
aaa
dec
pushf
pop
out
jp
clc
and
in
iret
add
add
sbb
out
daa
clc
add
vucomiss
lret
pop
sti
cmp
inc
clc
xchg
pop
cltd
ficoms
add
bound
add
push
push
mov
out
daa
clc
fbstp
xor
xlat
test
js
clc
aam
incl
movl
push
add
jmp
sub
xchg
and
mov
imul
out
ds
push
mov
add
add
cmp
out
adc
add
cld
jmp
insb
test
rol
clc
hlt
inc
clc
lret
add
lcall
add
and
cmp
mov
clc
ja
clc
cld
cmpsl
clc
mov
int3
aam
cmp
add
add
js
imul
ds
adc
add
adc
add
add
mov
add
sub
mov
pop
cmp
xchg
mov
pop
xor
in
jmp
jbe
stos
fildl
pop
sbb
mov
jno
pushl
sbb
add
test
clc
dec
xor
add
cli
ss
sbb
cli
sti
lock
pop
push
mov
add
cld
jmp
sub
add
add
es
adc
pop
fcmovne
mov
push
add
adc
je
sbb
clc
cmp
in
push
clc
std
ds
lock
movzwl
cld
jmp
add
add
pop
stc
stos
inc
add
hlt
adc
add
stos
and
add
mov
add
push
add
sub
inc
add
mov
clc
addr16
mov
loopne
sbb
clc
mov
aam
mov
push
ss
ret
mov
popa
add
sbb
add
pushf
nop
sbb
bound
add
add
sbb
cld
jmp
push
mov
clc
fmul
xchg
cmp
insl
and
add
mov
ljmp
das
sahf
push
add
xchg
shrl
repz
add
test
xor
add
clc
xbegin
mov
cld
jmp
mov
push
push
clc
cmp
add
repnz
in
push
jmp
sbb
clc
fidivs
add
fisttpll
clc
jge
fs
and
add
pop
fistps
gs
insb
cmp
fsub
clc
sti
push
jnp
jp
add
ret
repnz
sub
clc
lret
shll
add
cmpsb
clc
jl
clc
sbb
in
xchg
xor
add
xor
add
clc
lcall
and
cld
jmp
jge
push
add
add
xor
add
js
lock
sub
sub
adc
add
adc
test
clc
cld
or
clc
mov
loope
jno
add
add
clc
jmp
cs
sarb
clc
lea
pushl
cld
jmp
add
mov
pop
cmp
add
in
fbstp
add
xchg
xchg
imul
add
clc
stc
cmp
or
add
add
add
and
add
adc
lea
dec
sbb
pop
xor
add
jnp
ficomps
sub
daa
clc
leave
aam
push
rcrb
add
out
icebp
mov
add
push
add
jne
loopne
js
gs
aam
add
ret
clc
sub
pop
dec
push
jmp
push
push
cmp
adc
mov
clc
icebp
mov
add
xor
inc
add
dec
ljmp
add
add
add
sbb
add
cltd
pop
push
clc
cmp
fdivs
add
and
add
add
jg
mov
gs
gs
cmp
adc
add
dec
sbb
add
add
out
test
push
add
xor
add
clc
cmp
add
pop
clc
xor
and
mov
jge
dec
mov
pop
int
adc
pop
movsl
clc
jmp
push
push
add
clc
data16
mov
cld
jmp
popa
icebp
sarl
pusha
add
cmp
clc
test
decl
imul
add
lret
adc
add
clc
test
stc
or
add
add
clc
adc
add
fidivs
add
add
clc
push
pop
inc
add
pop
sbb
sub
ja
add
clc
inc
add
lret
push
clc
mov
stc
fildll
xchg
sbb
jmp
lods
push
jno
sub
clc
lea
sbb
pop
ret
clc
test
icebp
ret
js
jp
add
fwait
lcall
aas
leave
cmp
insb
pop
clc
clc
mov
xchg
aam
mov
shufps
incl
inc
and
jmp
cmpsb
dec
outsl
sar
clc
cli
es
inc
add
dec
dec
cmp
cmp
mov
cld
jmp
dec
movsb
lods
sbb
into
out
jle
clc
incl
movl
inc
add
imul
push
add
jbe
lcall
scas
lret
cld
adc
mov
adc
add
loop
adc
clc
sbb
add
rcll
add
adc
add
leave
out
test
xor
add
cmp
add
lods
and
add
clc
rcrl
xor
add
clc
mov
sub
add
repz
addr16
dec
jle
fisttpl
clc
jo
add
pushf
mov
clc
enter
lcall
push
add
push
dec
cld
jmp
ja
sub
insb
fldl
or
add
mov
int3
add
add
jmp
add
adc
add
clc
add
and
add
fs
movsb
clc
shrb
mov
adc
add
add
xor
adc
add
xbegin
pop
popl
ret
rolb
add
xchg
incl
mov
fmulp
popa
add
push
pop
mov
add
mov
clc
xabort
test
push
jmp
es
dec
scas
fisttpll
clc
or
add
cmp
add
fbld
cmp
push
xchg
in
and
add
add
bound
add
add
add
fimuls
sti
imul
cld
jmp
imul
inc
clc
test
ret
xchg
mov
pop
mov
push
jmp
or
xor
clc
xabort
clc
jno
add
add
jae
add
add
adc
ljmp
clc
hlt
adc
add
enter
lods
addr16
and
add
dec
dec
add
add
add
sub
in
xchg
pop
es
aas
mov
clc
dec
mov
in
mov
insb
add
push
add
jbe
mov
cld
jmp
mov
push
push
mov
add
xabort
inc
add
lods
dec
mov
add
sar
daa
clc
pop
pusha
add
jmp
jl
clc
mov
clc
mov
or
ret
insl
mov
add
lods
pop
daa
clc
sub
clc
clc
nop
pop
xor
add
mov
jmp
clc
jns
dec
cmp
clc
rorb
xabort
out
fucomp
sub
sbb
add
data16
or
inc
cmp
andb
clc
stos
cmp
add
add
mov
pop
xor
add
cltd
test
int3
and
add
clc
sbb
dec
and
mov
clc
rol
clc
sar
add
decl
test
jmp
in
cmpsl
clc
idivb
inc
add
cmp
clc
je
pop
cld
jmp
pop
push
aas
dec
pop
rol
clc
stc
ret
clc
mov
add
scas
inc
add
push
add
xchg
push
pop
test
cmp
add
arpl
add
fcmove
sarb
cld
fwait
push
clc
dec
jbe
add
std
jmp
shlb
pop
cmp
ret
insb
das
or
inc
add
xlat
aas
mov
incl
jbe
cld
jmp
dec
sub
clc
and
dec
sbb
dec
mov
add
in
lock
add
lahf
jg
and
add
and
add
test
aad
lret
mov
cld
jmp
push
jge
add
add
sbb
add
lods
jp
push
clc
sub
mov
add
inc
clc
xchg
dec
or
sbb
or
clc
adc
add
add
jo
add
add
inc
clc
jns
or
sbb
in
clc
sbb
add
mov
sub
adc
add
clc
fsubl
or
push
ljmp
clc
and
add
add
scas
sub
add
add
jp
add
pop
clc
sub
scas
cs
inc
clc
push
add
es
mov
add
sub
es
jns
jne
add
xchg
xchg
scas
pop
jno
add
jmp
je
add
jbe
add
das
cwtl
adc
add
cmpsb
clc
and
add
add
clc
pop
clc
sar
mov
ret
sbb
in
loop
jecxz
popa
add
iret
push
lea
add
xchg
push
xor
movsb
clc
scas
dec
xlat
rcll
xor
hlt
add
add
add
push
cmp
in
sub
add
imul
xchg
sub
xchg
or
cmp
jmp
pop
dec
or
hlt
daa
clc
pop
sti
loop
and
add
lds
add
cld
jmp
push
mov
sar
add
sbb
in
jecxz
or
pop
loop
xchg
jae
add
push
popa
add
add
cmp
repnz
mov
clc
std
cld
lret
cmp
cld
jmp
pop
mov
nop
mov
xchg
jno
add
mov
adc
mov
sub
jg
clc
dec
gs
clc
inc
add
push
add
xchg
int
stos
inc
add
std
cmp
clc
and
add
push
data16
jecxz
insb
and
or
mov
add
adc
add
ficoms
add
add
dec
das
or
push
mov
mov
add
xchg
aam
push
add
mov
scas
pop
and
mov
add
add
add
add
cli
fst
and
add
loopne
push
sub
cld
jmp
sahf
xor
clc
fsubrl
es
jo
add
xabort
out
adc
add
inc
clc
adc
add
jo
add
ficompl
push
enter
xabort
add
xor
fidivs
js
out
sub
adc
popa
cld
jmp
sub
cmp
xchg
je
inc
clc
jns
add
pop
push
add
out
and
sub
add
pop
lcall
adc
add
push
mov
imul
sbb
xor
push
clc
push
add
add
add
in
mov
adc
and
ja
clc
add
add
test
sub
pop
lret
add
add
and
add
add
jmp
xchg
inc
add
fcompl
or
mov
sahf
push
inc
add
mov
mov
sbb
cmp
add
cld
jmp
sub
push
lea
xabort
in
and
add
int
sti
rclb
jmp
sub
rorl
or
inc
clc
inc
add
stos
xchg
cmp
mov
adc
add
xabort
idiv
ss
clc
mov
lods
je
clc
and
add
add
add
bound
add
mov
add
ss
lea
cmpsl
clc
jno
add
xor
add
clc
daa
clc
jbe
or
insl
clc
add
add
cld
jmp
push
dec
outsl
jp
sbb
add
inc
add
sub
pop
insb
ret
clc
fwait
cmp
add
xchg
in
imul
dec
cwtl
data16
sub
aas
sub
jge
dec
insl
pop
sub
add
mov
mov
xbegin
clc
lods
sbb
clc
xchg
in
sbb
xchg
loopne
sub
cld
mov
pop
or
cmpsb
clc
cmpsl
clc
pop
rorl
clc
insb
fdivs
data16
sar
clc
mov
add
scas
sbb
jmp
jns
push
popl
add
adc
add
adc
add
mov
adc
xchg
pushf
xchg
dec
clc
cmp
les
push
ret
adc
jmp
cld
jmp
sub
rcr
mov
pop
xchg
negl
jmp
dec
xchg
or
mov
cmc
out
xchg
mov
xchg
sahf
mov
mov
int
cli
iret
das
stc
jnp
clc
cli
cmp
clc
pop
lea
dec
mov
sbb
jmp
sub
push
andb
lcall
in
ror
jae
add
dec
mov
xchg
insl
sbb
fldcw
add
add
repz
add
jne
mov
ss
ret
add
add
cmp
scas
out
pop
decl
jmp
data16
fwait
cltd
test
lods
cmp
add
xchg
out
xbegin
clc
mov
and
add
pop
cld
jmp
sub
mov
add
clc
jecxz
jae
add
add
int3
leave
fisttpll
je
add
xchg
jnp
mov
stc
jle
or
sub
rcr
lret
xor
add
cld
mov
adc
xchg
jns
inc
jmp
mov
je
mov
mov
aam
jg
cmpsb
clc
insl
push
inc
clc
fbld
add
push
clc
jmp
clc
stc
bndldx
add
rol
clc
je
clc
mov
cmc
movsb
clc
add
mov
clc
dec
dec
fsubrp
push
push
clc
xchg
xabort
adc
add
push
push
add
pop
and
add
dec
stos
dec
xlat
push
clc
sti
adc
add
pop
je
add
jns
and
add
ret
clc
cmp
clc
jno
add
sti
sarl
ret
add
sub
add
mov
sbb
mov
pushf
xlat
dec
enter
add
clc
fisttps
adc
clc
outsb
xor
mov
imul
dec
stc
fcomi
and
add
ret
clc
xabort
div
nop
stos
aaa
ret
lea
clc
jmp
clc
sbb
sarb
cltd
repz
fbstp
add
enter
clc
cmp
cmp
cs
fs
imul
test
xbegin
jno
add
clc
cmp
inc
add
in
fcoml
clc
push
bound
add
add
in
push
cli
pop
pop
popa
add
aas
cwtl
mov
sub
add
pop
mov
fidivs
pusha
add
xbegin
sub
jg
cld
jmp
and
push
insl
adc
add
cmp
add
sbb
jne
and
movsb
clc
ret
clc
insl
xchg
adc
jecxz
add
add
call
and
addr16
lods
mov
or
add
push
add
mov
arpl
add
bound
add
clc
pop
cmp
add
data16
icebp
add
add
ljmp
pop
fbld
nop
cmpsl
clc
push
jo
add
xor
or
std
mov
push
add
jne
add
pusha
add
sarb
lret
sahf
push
add
cld
int
add
cld
add
add
lcall
sbb
sub
ret
shll
add
push
cmp
add
mov
push
jmp
aaa
je
jb
add
add
rolb
add
mov
sar
mov
clc
or
jbe
cmp
adc
jl
mov
clc
outsl
jmp
and
add
inc
clc
push
add
roll
pushf
or
pop
mov
es
mov
cmp
sbb
add
push
mov
add
mov
clc
pop
clc
mov
push
sub
clc
push
add
pop
xchg
xchg
cmp
mov
clc
cmp
sbb
mov
scas
inc
add
shll
clc
pusha
add
cmpsb
clc
sub
iret
movsb
clc
mov
mov
xchg
into
xor
clc
mov
mov
icebp
lea
cmc
int
call
test
add
add
or
aad
sbb
cmpsl
clc
add
clc
jbe
ret
clc
into
fiaddl
or
push
clc
testl
add
clc
sub
adc
add
add
jg
mov
clc
jmp
clc
aad
sbb
add
clc
mov
jmp
ja
outsl
mov
fisttpll
mov
clc
jnp
imul
add
je
add
cld
jmp
idivl
push
add
xchg
nop
lock
shll
cld
jmp
test
push
adc
insl
fdivs
add
cmp
add
fcompl
jmp
clc
jnp
clc
lret
add
dec
add
add
add
arpl
add
xor
add
clc
stc
movsb
clc
xor
add
mov
add
mov
dec
test
data16
cs
mov
clc
sbb
add
push
add
jnp
stc
fcmovnbe
xchg
cmp
rol
clc
inc
clc
adc
clc
scas
adc
add
add
pop
jno
add
add
add
loope
xabort
jg
clc
fwait
push
add
mov
or
clc
lea
add
icebp
push
add
add
sbb
dec
std
shrb
loop
dec
sub
or
cmp
adc
add
clc
scas
ficomps
clc
iret
jbe
repz
jecxz
sbb
clc
cld
pop
imul
popf
sub
clc
lahf
or
mov
clc
push
clc
pop
nop
xchg
gs
adc
add
pop
clc
sub
push
clc
inc
add
mov
clc
incl
cmc
loop
ljmp
das
sub
clc
or
add
scas
mov
mov
cmp
cmp
sub
sar
sbb
add
add
mov
aam
add
mov
mov
add
pop
cltd
in
push
test
ret
push
adc
pop
daa
clc
xbegin
add
lock
mov
push
dec
cmp
lret
lea
add
popf
std
add
add
push
cld
jmp
scas
sub
xchg
dec
je
mov
cld
jmp
inc
lods
lea
mov
add
imul
mov
push
cld
jmp
sahf
sub
test
jno
add
jg
mov
stc
lret
ja
daa
clc
shrl
mov
xor
pop
ret
cmp
scas
mov
clc
outsl
loop
cmp
add
cltd
mov
add
mov
std
sbb
cld
jmp
outsl
jg
pop
push
adc
out
dec
dec
stc
clc
xbegin
sbb
push
adc
add
jmp
stc
lcall
add
addr16
jle
clc
add
fstpl
aad
cmp
jne
jb
add
add
add
cld
jmp
popa
sub
cltd
xbegin
add
clc
call
jmp
movsb
nop
nop
xorb
add
out
inc
add
movsb
clc
jp
dec
dec
rcrl
add
mov
clc
lods
dec
stos
scas
push
add
sub
add
xchg
lret
and
nop
cmpsb
clc
stc
sub
mov
clc
push
mov
mov
add
int3
jns
inc
add
sbb
sbb
cmp
jp
clc
sub
clc
xchg
mov
clc
jne
inc
clc
clc
fucom
clc
push
push
and
add
or
rcll
mov
clc
adc
lahf
in
int3
pop
call
insl
scas
lcall
clc
sar
mov
add
lcall
jmp
pop
mov
data16
push
add
in
ret
into
rorb
add
dec
hlt
or
xchg
push
dec
push
in
cmp
add
sub
jmp
add
xchg
mov
lret
cltd
xor
add
add
icebp
repz
clc
add
add
pop
mov
and
ss
ret
cmpsb
imul
add
sub
ss
clc
xchg
jecxz
fs
push
mov
cld
jmp
push
add
xor
add
push
lock
add
adc
add
outsb
popf
jae
add
xor
add
clc
cmp
clc
data16
mov
add
sbb
clc
cld
sub
clc
mov
lock
stos
cwtl
xabort
add
pop
clc
sbb
adc
sub
xor
cld
jmp
lods
frstor
add
mov
add
xchg
xchg
data16
lods
or
clc
aaa
sbb
jmp
dec
je
sub
add
add
jb
add
mov
clc
scas
xchg
iret
or
clc
pop
cmpsl
clc
or
adc
add
add
movsb
clc
decb
lcall
out
xor
add
add
aam
clc
movsl
clc
pop
adc
add
push
clc
xchg
xbegin
and
fimull
add
and
add
pop
clc
mov
loop
mov
nop
std
hlt
fnsave
cmp
add
mov
push
notb
not
inc
clc
pushf
test
cmc
inc
add
movsb
clc
lods
mov
clc
cmp
clc
mov
in
insl
imul
pusha
add
int
insl
leave
add
add
xor
clc
into
cmp
sub
add
mov
add
adc
push
sub
add
mov
add
xlat
mov
add
mov
add
icebp
pusha
add
xor
cmp
clc
adc
add
add
pop
dec
push
cmp
clc
and
or
clc
and
mov
inc
clc
popf
jge
scas
xchg
lahf
mov
clc
daa
clc
xlat
aad
add
das
pop
inc
clc
mov
cltd
xchg
daa
clc
lods
ss
add
clc
push
cmpsb
clc
mov
add
jae
add
add
add
xor
cld
jmp
sub
popa
fwait
arpl
add
jae
add
add
enter
cmp
push
bswap
fstpl
ret
sub
aas
inc
clc
lret
hlt
hlt
push
mov
add
jb
add
add
je
push
sub
xbegin
clc
or
jb
add
stc
xabort
add
xlat
mov
pop
xor
add
cmp
iret
mov
add
testb
inc
clc
jecxz
bound
add
movsb
clc
int3
cli
cmp
add
xor
add
mov
addr16
and
add
add
fs
iret
int3
or
add
repz
add
in
xabort
sbb
jmp
push
movsb
fwait
sbb
dec
fiaddl
lahf
dec
adc
add
add
out
fs
mov
and
add
mov
add
add
clc
aad
add
xor
sub
lret
push
add
jnp
clc
mov
icebp
cld
jmp
mov
jns
and
add
push
and
mov
mov
in
xchg
sbb
test
cld
jmp
mov
mov
add
add
lea
rclb
imul
sub
or
clc
xchg
adc
clc
mov
int
clc
inc
add
sbb
aaa
daa
clc
mov
cmpsl
clc
loope
sub
jnp
sub
data16
or
inc
add
movsb
clc
aas
pop
lcall
add
mov
add
clc
add
add
add
add
add
das
mov
clc
or
add
add
add
call
and
add
clc
mov
cmp
and
add
mov
add
add
clc
sub
clc
jo
add
add
cmp
clc
push
add
cmp
dec
xor
mov
clc
cmp
add
repz
add
sub
mov
lahf
hlt
sub
push
push
mov
add
xchg
sub
add
lret
clc
push
jb
add
in
cmpsb
clc
mov
sti
lret
lods
into
xor
push
cld
jmp
and
xor
dec
push
jmp
or
pop
xor
add
add
xlat
jo
add
inc
add
or
mov
int
mov
adc
add
jne
add
mov
sub
clc
mov
add
jns
and
add
clc
int3
pop
clc
lock
cmp
scas
inc
clc
pop
dec
cmp
clc
dec
adc
add
or
clc
xchg
cmp
and
inc
add
cmp
inc
clc
push
add
fisubs
sbb
add
sbb
adc
xlat
iret
pop
push
add
xchg
cmp
mov
clc
inc
add
test
addr16
ret
movsl
clc
mov
jle
lahf
mov
add
xchg
ret
add
rcll
add
clc
mov
clc
push
cmp
ss
ret
mov
mov
clc
cmp
adc
add
clc
cmp
inc
add
jg
cmp
push
clc
shll
jmp
cmp
sub
jns
ss
clc
stos
lods
js
clc
mov
add
lods
add
add
add
popa
add
inc
clc
bound
add
cmpsl
clc
xchg
rol
clc
push
pop
movsb
clc
push
bound
add
add
add
jbe
clc
sub
inc
clc
mov
mov
clc
jno
add
xlat
push
clc
arpl
add
inc
clc
loope
stc
xchg
xor
add
mov
push
clc
or
add
add
shlb
add
decl
cld
jmp
push
fs
xor
push
add
add
add
add
dec
xchg
and
add
add
es
push
jl
clc
inc
clc
mov
mov
daa
clc
movsl
clc
addr16
sbb
icebp
popl
jp
clc
fidivrs
adc
jmp
cld
jmp
inc
inc
add
inc
add
mov
add
mov
clc
shr
lret
and
add
pop
clc
loop
jg
push
add
and
dec
add
add
clc
pusha
add
xchg
shl
rorl
js
add
cld
jmp
and
push
pusha
add
cmp
cld
jmp
sub
aaa
push
and
cmp
xchg
pushf
js
outsb
push
cld
jmp
pop
lcall
decl
mov
jg
repnz
div
in
jl
movsb
clc
pushf
dec
cwtl
sbb
jns
add
cmp
jbe
add
add
add
imul
mov
std
iret
xchg
xor
sahf
pop
push
add
es
xor
add
daa
clc
cld
sub
push
pop
cld
jmp
dec
mov
push
mov
mov
jmp
subb
inc
add
loope
js
clc
inc
add
mov
lea
xchg
cmp
popa
add
sbb
jo
add
pop
clc
clc
or
and
add
test
push
faddl
ret
sub
and
or
out
cmp
in
add
add
add
clc
insl
mov
dec
mull
test
add
clc
push
add
xchg
mov
inc
clc
inc
add
add
add
repz
fcmovb
clc
fnstcw
add
repz
add
push
add
arpl
add
vpmacssdqh
add
ja
in
lock
add
clc
cmc
jns
clc
jbe
cmp
repz
ret
sub
cmpsb
clc
pop
xchg
cs
push
int
jmp
sbb
add
xchg
pop
adc
clc
jge
sbb
push
add
bound
add
clc
mov
or
jmp
sahf
mov
clc
pop
xor
add
clc
mov
add
add
add
shrl
pusha
add
adc
add
clc
mov
add
xor
add
add
add
or
add
jmp
je
cld
jmp
xlat
fldl
gs
ret
clc
bound
add
push
mov
cld
jmp
push
xor
notb
aad
out
lcall
jne
cld
jmp
xchg
adc
jne
adc
add
clc
ljmp
lcall
add
lahf
pusha
add
adc
sub
inc
clc
mov
add
repz
add
stos
sub
cmc
inc
clc
loopne
xlat
xchg
push
add
adc
add
mov
xchg
fsubp
clc
xabort
cmp
push
clc
pop
xlat
inc
add
and
add
add
cmp
clc
scas
lock
mov
xchg
inc
clc
or
in
and
lods
repz
xabort
add
mov
cmc
shrb
clc
lods
leave
cltd
pop
cmp
pop
jg
or
pop
fimuls
sbb
in
push
add
dec
scas
stos
sub
sub
clc
pushf
mov
push
add
xor
xchg
scas
addr16
sbb
add
jb
add
add
clc
pop
push
pop
cmpsl
clc
mov
cmp
add
ss
ret
sub
stos
adc
int
mov
mov
cmp
addr16
cmpsl
clc
push
scas
xchg
mov
add
cmp
mov
pushl
push
add
xabort
pop
sarl
jl
jb
add
xbegin
shlb
jae
add
mov
mov
int3
mov
add
sbb
mov
clc
cmc
fisttps
xchg
in
mov
movsb
clc
dec
je
clc
push
xor
add
pop
cltd
sub
enter
test
push
add
js
xor
add
jmp
mov
push
cmpsb
clc
cli
fstps
cmp
mov
leave
xchg
lret
push
clc
cmp
clc
xchg
and
add
mov
rorl
xor
add
clc
fistps
mov
mov
clc
clc
int
mov
ficoms
mov
stos
mov
dec
call
loop
insb
loop
push
add
pop
sub
inc
clc
and
add
xchg
clc
and
add
add
add
mov
mov
dec
repnz
xor
xchg
mov
adc
add
in
mov
jmp
lock
mov
xor
add
add
gs
adc
add
fldl
add
test
es
xor
add
ss
mov
jmp
and
jmp
jge
xorb
push
ss
add
hlt
push
add
popf
dec
adc
add
out
fs
mov
out
push
add
loop
pop
cmp
add
fsubl
and
xor
insl
jns
in
dec
push
add
sbb
rcrb
sub
nop
xchg
cld
jno
add
clc
aam
clc
cmpsb
clc
push
iret
loop
push
add
ljmp
sbb
add
push
and
add
clc
testb
xor
ss
ret
sbb
push
add
jo
add
pop
insl
sub
xchg
dec
aad
cmc
add
add
aad
clc
shll
arpl
add
fs
mov
clc
out
mov
clc
lcall
clc
adc
adc
add
aad
xchg
inc
add
call
add
iret
jns
pushf
add
add
cli
aad
pop
sub
fcmovu
inc
clc
pop
adc
add
bswap
pop
cmp
add
fwait
add
xbegin
mov
je,pt
cli
mov
add
std
xbegin
add
je
arpl
add
clc
dec
aam
decb
inc
add
mov
jl
jno
add
out
clc
cmp
lret
clc
mov
clc
push
sar
xor
add
clc
push
lret
dec
int3
jae
add
push
or
idiv
push
add
ret
clc
arpl
add
clc
int3
jg
outsb
fistl
in
and
sbb
jg
inc
add
sar
daa
clc
adc
add
out
cmp
fs
or
xchg
cmp
xchg
sbb
loopne
clc
icebp
pop
mov
add
inc
add
aam
add
pushf
xchg
xchg
loop
fiaddl
add
fnstsw
ret
clc
sar
fmul
sar
sbb
cmc
aas
cmp
repz
sbb
push
in
push
ret
jge
clc
mov
xor
add
pop
fsubrl
adc
add
add
sub
add
add
jp
clc
and
add
clc
mov
clc
hlt
mov
es
cltd
aad
jne
add
adc
add
add
or
sarb
clc
lcall
fwait
inc
add
add
add
add
and
add
cli
mov
push
repz
jmp
jp
dec
imul
test
stos
lea
add
add
xchg
test
faddl
add
add
push
lret
add
xlat
sub
sub
mov
jns
sub
inc
add
cmp
hlt
cmp
add
jl
add
pop
arpl
add
clc
scas
sub
clc
cmp
add
push
clc
cld
mov
add
clc
jg
push
add
lcall
dec
mov
add
add
lods
cmp
clc
and
faddl
clc
pop
jecxz
jp
add
mov
pop
loope
ss
clc
jb
add
add
test
mov
add
xor
add
clc
xor
add
add
cmc
testb
add
or
fisubl
movzwl
cld
jmp
push
es
add
add
cmp
or
and
je
sbb
add
clc
fidivs
push
clc
jae
add
clc
cmp
leave
aad
adc
jmp
cs
pop
int
clc
sar
clc
push
clc
jbe
add
push
daa
clc
in
test
fmuls
and
mov
pop
pop
sbb
clc
adc
add
add
jmp
arpl
add
dec
inc
add
sbb
dec
cmp
jmp
cmp
add
add
cmp
jmp
sub
push
jno
mov
mov
bnd
clc
cmpsl
clc
aaa
sub
add
sahf
sub
fstpt
clc
mov
movsl
clc
clc
jle
scas
xlat
sahf
dec
test
push
sahf
movsl
clc
mov
clc
dec
push
leave
out
mov
xlat
mov
into
notb
push
add
or
clc
negl
clc
push
add
xabort
and
gs
xor
add
add
dec
cmp
add
clc
pop
test
add
push
add
dec
mov
cmp
pop
sahf
in
test
scas
push
mov
cld
jmp
push
sbb
push
add
or
add
add
add
xchg
xor
add
imul
mov
or
std
lea
or
pop
clc
cmp
add
fucomi
mov
jmp
or
rcr
sub
cmp
dec
lret
repnz
notb
add
clc
cltd
push
push
add
out
jne
clc
xchg
push
test
add
add
inc
clc
sub
ja
mov
push
imul
clc
xchg
mov
repnz
clc
lock
mov
out
jecxz
flds
add
add
sbb
mov
clc
mov
add
roll
add
xor
add
and
add
push
loopne
lcall
scas
sub
xchg
sbb
dec
ret
clc
sub
or
or
clc
xchg
inc
clc
sti
pop
inc
clc
loopne
jbe
and
add
xor
add
adc
add
clc
ret
clc
push
clc
dec
decl
add
decl
aad
ficompl
arpl
add
nop
in
mov
movhps
xor
ret
sub
xor
pop
js
push
inc
add
add
add
add
cld
cmp
or
clc
scas
sar
clc
outsl
incb
clc
adc
add
clc
and
add
cli
mov
push
mov
cld
jmp
sbb
clc
push
add
pop
mov
mov
clc
push
add
cld
jmp
sub
jmp
scas
out
repnz
clc
pop
sub
ret
cld
jmp
ja
or
lods
inc
clc
cmp
std
cmp
push
scas
jle
clc
xor
add
ss
inc
add
cmp
shlb
cmc
sub
pop
dec
inc
add
mov
clc
jecxz
sahf
jle
dec
sub
cld
jmp
movsb
mov
js
push
jl
add
aaa
push
add
mov
add
insb
pop
or
jmp
adc
add
negl
ss
clc
inc
clc
stos
add
dec
inc
add
push
mov
test
ficomps
push
mov
or
xchg
pusha
add
xchg
xchg
das
xchg
mov
clc
sahf
push
add
xor
add
xchg
leave
dec
push
clc
leave
or
add
js
clc
cmpxchg
xchg
add
add
add
jle
gs
add
aad
sub
out
xchg
dec
clc
iret
and
add
clc
std
mov
fiadds
clc
lcall
jb
add
add
adc
add
fstps
sar
xor
and
add
mov
and
add
cli
pop
mov
clc
das
test
xabort
scas
xlat
std
cmp
clc
lcall
clc
add
add
jg
add
sbb
jbe
add
stos
cmp
mov
mov
xor
gs
stos
pushf
mov
push
xor
clc
xabort
dec
sti
cmp
movsl
clc
ja
inc
add
test
sbb
xor
add
dec
clc
cmp
pop
inc
clc
dec
xor
add
sbb
mov
sar
stc
movsl
clc
jb
add
xchg
sbb
js
mov
cld
es
shr
mov
loopne
cltd
push
add
jmp
pop
and
add
movsl
clc
cmp
addr16
lret
add
imul
xor
add
clc
xchg
push
call
jg
fs
pusha
add
cmp
test
clc
notl
push
cld
jmp
jp
add
fsubl
clc
xchg
add
fbstp
add
dec
mov
or
add
cltd
icebp
arpl
add
clc
insb
mov
add
jmp
jno
sbb
add
add
sub
clc
jne
sub
jo
add
clc
or
jbe
mov
add
jg
xor
cld
jmp
dec
inc
test
clc
or
xabort
xor
sub
push
imul
mov
add
inc
add
push
add
xchg
repz
add
inc
clc
and
add
lods
cmpsl
clc
adc
add
call
clc
jno
add
add
test
add
clc
imul
imul
movsb
clc
adc
add
mov
add
gs
push
lock
sub
imul
add
add
xchg
imul
adc
jno
scas
jp
mov
clc
aas
pop
or
dec
decl
dec
jecxz
incl
sub
clc
or
push
sub
nop
inc
clc
mov
imul
mulb
add
out
jo
add
add
stos
sub
add
cmp
add
jecxz
sub
clc
jg
and
jmp
jb,pt
cld
jmp
sub
mov
std
data16
or
add
xor
add
pop
cmp
fcomps
mov
jns
rol
clc
cmp
clc
xor
xor
add
mov
sar
clc
pop
push
add
and
jbe
popf
adc
add
mov
mov
cld
jmp
add
xor
es
pop
xchg
xbegin
clc
sub
cmp
or
pusha
add
mov
clc
notb
add
xchg
push
pop
clc
mov
cld
jmp
mov
iret
rorl
movsl
clc
cmp
add
mov
add
pop
push
add
xor
add
clc
popa
add
cmp
push
add
aad
adc
ljmp
and
cld
jmp
sub
clc
nop
pop
lahf
or
pop
ja
pop
sbb
lret
add
sub
scas
ss
clc
mov
add
clc
jns
sub
clc
cmp
fcomp
cmp
jnp
mov
sub
jge
icebp
loope
sbb
sub
sbb
inc
clc
sub
clc
outsb
jo
add
dec
clc
stos
xchg
cli
test
test
cmp
arpl
add
fs
push
jecxz
mov
out
ret
clc
jb
add
jns
add
xor
add
add
call
outsb
sub
add
pop
lret
add
add
add
loope
jp
pop
pop
mov
mov
in
test
add
jnp
sbb
cld
jmp
adc
je
cmp
mov
cld
jmp
je
cmp
clc
sub
or
add
mov
clc
xbegin
xor
imul
cld
jmp
aas
push
lea
mov
xor
add
add
add
add
pop
dec
or
add
lods
pop
xchg
je
push
pop
mov
clc
pop
sbb
jmp
and
add
lret
add
mov
add
test
pop
push
mov
push
arpl
add
dec
cld
jmp
xor
sub
jns
mov
clc
insl
repz
add
add
jnp
jle
add
out
xchg
mov
clc
jg
out
in
scas
out
or
cmp
xchg
push
call
outsb
pop
or
clc
std
jmp
push
add
mov
frstor
inc
add
sahf
std
loopne
ljmp
or
cld
jmp
orb
adc
add
in
push
cld
jo
add
sub
cmp
pop
mov
clc
xchg
fwait
stos
cmp
or
bound
add
push
ds
add
data16
icebp
adc
clc
imul
add
aad
clc
push
int
decl
clc
incl
jmp
sub
outsb
cs
add
sti
cld
daa
clc
aad
inc
add
sub
jae
add
clc
test
add
pushf
xchg
lods
shll
insl
dec
mov
cmp
inc
clc
mov
add
add
sbb
test
clc
mov
add
add
add
add
add
mov
clc
xchg
ret
addr16
mov
stos
roll
clc
push
lret
cmp
pop
clc
inc
add
rolb
add
test
imul
out
popa
add
mov
push
clc
pop
cmp
ljmp
or
push
jnp
enter
mov
mov
add
or
push
sti
jnp
add
pop
ds
add
sub
clc
dec
hlt
mov
xabort
clc
into
add
add
cmpsb
clc
ror
mov
pop
jmp
jmp
and
add
or
or
add
fmul
scas
dec
jbe
adc
add
clc
add
add
add
mov
cmp
rclb
add
inc
add
ret
clc
dec
lcall
jg
jbe
clc
push
decl
ss
ret
pop
cmp
jecxz
push
aaa
pop
lcall
fldenv
lcall
gs
jge
inc
clc
sub
outsl
nop
call
pop
xabort
add
mov
and
add
mov
dec
jb
add
add
ds
add
sbb
xchg
sahf
out
add
sbb
mov
xor
aas
in
es
xchg
cmp
clc
fnstcw
clc
mov
mov
add
pop
test
fwait
inc
clc
out
sub
and
imul
xor
add
push
add
das
test
cmp
lret
adc
ret
mov
scas
arpl
add
add
clc
mov
pusha
add
ss
in
xlat
sar
sar
add
cmp
pop
clc
sahf
jecxz
sar
lock
add
data16
ja
jb
add
and
add
cmp
add
fs
std
icebp
add
clc
clc
std
int3
sbb
cs
push
and
add
clc
push
loop
cmpsb
clc
and
add
clc
pushf
call
sbb
mov
clc
outsl
mov
add
dec
sub
jge
pushl
popa
fwait
jne
clc
mov
mov
add
outsl
xor
add
clc
out
push
sbb
clc
lret
int
add
stc
in
cmp
push
add
gs
pop
xchg
push
add
sbb
push
dec
rorl
clc
lods
jecxz
fsubrs
mov
xbegin
inc
clc
jp
mov
mov
test
insl
test
cld
ss
ret
fwait
pop
sub
clc
push
test
out
cmp
jns
add
add
add
into
outsb
pushf
mul
clc
loopne
sub
and
add
mov
cld
jmp
pop
push
jmp
mov
and
cmp
jmp
dec
pop
dec
int
adc
icebp
cmpsl
clc
clc
nop
ror
hlt
js
jp
and
add
test
lcall
loope
stos
inc
add
adc
pop
mov
add
add
imul
clc
sub
clc
sub
std
mov
clc
dec
sbb
jmp
sub
es
test
jb
add
bound
add
sub
add
mov
xor
add
add
test
aam
clc
dec
lret
mov
aas
adc
add
stos
scas
mov
pop
sbb
or
cmp
in
xor
add
lahf
and
add
and
add
dec
dec
pushf
pop
sbb
lods
mov
adc
add
imul
icebp
imul
add
hlt
mov
mov
iret
mov
adc
add
mov
xchg
sbb
xbegin
mov
pop
mov
add
adc
add
in
mov
sbb
fcmovb
clc
outsb
fwait
mov
pop
jmp
add
dec
fnstenv
pop
cltd
xor
add
out
data16
fcoms
add
cs
add
or
imul
movsl
clc
arpl
add
dec
jg
pop
mov
push
ret
sub
test
gs
push
add
fidivs
add
xchg
aam
decb
xchg
push
push
add
jb
add
add
add
dec
sbb
add
arpl
add
mov
stc
idiv
lcall
sub
subb
mov
add
push
add
sar
xchg
mov
dec
xchg
nop
xor
add
insl
jns
clc
mov
fs
pop
push
shlb
clc
test
mov
mov
jne
cld
jmp
loope
outsl
movsl
clc
xchg
inc
clc
sti
shll
dec
clc
in
nop
mov
popf
daa
clc
iret
mov
add
dec
clc
fists
add
ss
stc
mov
dec
bound
add
cld
jmp
je
sub
jb
add
clc
movsb
clc
es
mov
clc
sar
clc
mov
jbe
add
mov
add
fisubrs
ss
ret
insb
das
data16
push
add
xchg
pop
dec
xchg
and
add
cmp
std
jge
scas
fcmovne
in
shlb
add
add
sub
imul
push
add
xchg
cmp
push
pop
xor
pop
sub
clc
movaps
add
xchg
sub
clc
loope
mov
add
push
inc
clc
int3
mov
xor
add
clc
cmp
clc
cmp
add
jo
add
push
mov
sbb
ljmp
add
xor
mov
clc
adc
add
push
and
add
addr16
filds
add
stos
es
or
ret
clc
sahf
mov
add
or
lret
sub
jns
fstps
inc
add
jb
add
aas
cltd
xchg
push
add
xchg
push
adc
add
add
in
dec
call
sub
clc
pop
and
add
cld
jmp
fwait
sahf
sub
shl
sbb
pop
popa
add
dec
mov
add
mov
add
inc
add
jae
add
clc
cmp
and
add
add
jg
sar
mov
decl
mov
push
cld
jmp
and
sub
call
jmp
jno
dec
ja
pop
fldt
add
incb
add
jne
pop
clc
inc
add
fimull
push
add
dec
push
clc
fsub
clc
mov
pop
clc
push
xchg
popa
add
cmp
add
inc
clc
lock
add
clc
mov
push
mov
jge
clc
es
mov
push
or
add
add
xchg
nop
jae
add
xabort
clc
js
stos
inc
add
mov
add
adc
add
ja
clc
cld
ss
clc
cmp
enter
push
add
nop
loopne
int
mov
jo
add
pop
out
into
push
push
cld
jmp
cwtl
mov
add
inc
clc
out
sbb
jno
add
add
pop
ror
inc
add
and
add
push
add
and
loopne
ss
int3
jle
stos
mov
adc
add
xlat
ret
clc
lret
imul
sub
add
fisubs
add
and
add
lea
cld
jmp
add
and
mov
clc
cmp
add
cmp
dec
cld
jbe
std
int
add
ss
ret
or
aas
adc
add
sahf
lods
ret
clc
cli
lahf
cmp
pop
add
add
dec
add
jmp
and
inc
pop
and
add
pusha
cld
jmp
and
add
test
clc
jae
add
clc
out
and
add
clc
adc
add
add
add
clc
jb
add
cmp
push
add
fstpl
into
and
add
add
sahf
jb
add
dec
loope
in
cmp
adc
add
add
daa
clc
lahf
mov
in
xor
add
fildl
mov
sub
inc
add
cwtl
shl
mull
add
dec
imul
push
in
jmp
outsl
mov
xbegin
pop
cld
popf
mov
mov
mov
push
decb
lea
aam
in
inc
add
and
add
xor
add
mov
sub
and
xlat
mov
mov
in
outsl
push
mov
adc
add
clc
enter
leave
clc
sbb
xchg
push
pusha
add
ret
data16
sbb
les
cld
jmp
aas
adc
lods
jp
ret
movsl
clc
xchg
fstpl
ret
mov
es
mov
fstpt
mov
add
ret
clc
add
jmp
add
inc
clc
mov
add
add
jge
add
negb
sbb
clc
mov
das
mov
clc
jae
add
test
mov
add
jg
clc
mov
sub
add
icebp
outsl
push
clc
sahf
mov
lret
xchg
sub
add
imul
cmp
clc
xchg
add
add
add
jb
add
jnp
clc
in
fldt
pop
push
push
cld
jmp
or
pop
mov
clc
sbb
cmp
in
js
aaa
adc
mov
cld
jmp
sub
add
outsl
add
add
add
pop
inc
add
mov
add
add
adc
add
in
xor
add
push
add
cld
jmp
fwait
aas
jg
clc
jnp
xchg
xchg
push
add
fdivp
ljmp
add
out
fwait
stos
jmp
clc
cmpsl
clc
adc
add
push
cld
jmp
sbb
sub
xor
int
ljmp
mov
adc
pop
mov
push
lahf
imulb
push
mov
inc
add
pop
push
and
add
ss
add
mov
add
cld
jmp
and
inc
mov
int3
jno
add
mov
mov
adc
and
jo
add
xlat
or
mov
ss
ret
test
jns
push
sub
push
ljmp
clc
or
sub
clc
int
add
xlat
xor
add
fwait
movsb
clc
gs
xchg
std
mov
fstpl
xchg
jecxz
cwtl
fcoms
test
add
cld
jmp
out
pop
mov
jmp
outsl
lods
mov
add
clc
mov
and
add
add
and
add
add
adc
add
clc
out
sarb
clc
xchg
imul
add
pop
xchg
mov
clc
dec
test
scas
scas
rcrb
adc
jmp
inc
push
pop
ja
inc
clc
or
fcomi
pop
mov
clc
out
sarl
lret
dec
std
sar
cmp
add
icebp
pop
das
adc
add
mov
pop
sbb
mov
insb
shrl
xchg
pop
out
repnz
and
clc
psadbw
cmp
aas
mov
clc
pop
xchg
cmp
xchg
push
std
loop
add
fs
lods
sti
cmp
movntq
out
aas
mov
cmp
clc
xor
add
clc
rcl
xor
add
or
aam
in
rorb
data16
jne
jmp
add
lcall
jl
clc
popa
add
adc
jp
push
bound
ret
add
pop
xor
clc
add
cld
call
add
push
clc
pop
aas
cmp
insb
lods
lcall
test
mov
add
sar
mov
cld
jmp
or
movsb
clc
sar
jle
add
add
or
add
insl
cmc
cmp
loop
imul
add
clc
add
add
add
in
xchg
add
add
clc
es
jle
cmp
clc
jno
add
mov
fadd
clc
fidivrl
xchg
sahf
lea
clc
dec
inc
add
js
imul
xchg
pop
mov
call
jmp
test
adc
add
mov
jo
add
add
hlt
add
add
add
aaa
push
sbb
imul
cld
jmp
aaa
push
mov
clc
fdivr
or
cltd
or
lcall
push
add
inc
add
clc
loop
mov
add
or
out
lock
loopne
jp,pn
mov
xor
add
add
test
xor
add
cmp
xchg
data16
dec
inc
clc
int3
bound
add
add
imul
cmp
fwait
jg
adc
add
clc
mov
cmp
js
or
movsl
clc
sub
lods
mov
or
dec
fadd
clc
fldl
clc
cmp
add
in
mov
push
add
and
add
xlat
mov
add
sbb
or
xchg
aas
pop
dec
xchg
popa
add
xor
add
jle
add
adc
add
xchg
xchg
cmp
stos
add
jnp
inc
add
lret
ss
clc
sahf
lret
xchg
roll
clc
sarl
pop
inc
add
int
outsb
and
add
inc
clc
jno
add
and
add
sar
add
lahf
xor
jno
add
clc
mov
lea
inc
add
adc
add
xor
add
jae
add
popa
add
loop
mov
jle
insl
xbegin
add
xor
test
mov
mov
ja
and
add
add
mov
mov
inc
add
jecxz
lea
add
ret
xchg
outsb
pop
jl
pusha
add
fildl
clc
dec
xchg
or
and
adc
cmp
jg
decl
cld
jmp
xchg
popa
mov
push
add
or
xor
pushf
lods
clc
or
scas
test
cmp
clc
xor
add
shlb
cmpsl
pop
inc
add
add
outsl
shlb
add
aas
cmovl
pop
clc
ja
jmp
push
sar
sti
scas
ret
clc
loop
in
popa
add
scas
mov
xchg
int3
daa
clc
xchg
fadds
clc
test
ja
xchg
data16
xor
jb
add
add
dec
leave
movsb
clc
sbb
xor
add
add
addr16
je
add
addr16
dec
inc
add
sarl
mov
in
fldl
mov
in
lods
enter
cld
popa
add
in
inc
add
aam
sti
sub
and
inc
clc
add
add
pop
cld
jmp
xor
sub
mov
clc
add
add
clc
fcomps
xbegin
push
clc
mov
jmp
ja
nop
pop
js
mov
pop
cmpsb
clc
jae
add
sti
mov
aad
dec
ficoms
clc
gs
pusha
add
repnz
mov
add
das
mov
push
mov
lahf
mov
mov
scas
mov
inc
add
adc
add
pop
insb
inc
clc
cltd
loop
pop
gs
mov
cwtl
inc
add
je
sub
clc
js
pop
clc
out
sar
clc
cld
lret
fisubs
clc
mov
clc
sub
clc
pop
and
dec
sub
daa
clc
jne
clc
sbb
add
fwait
pop
in
push
fidivl
add
lret
xor
imul
shl
cld
jmp
cmp
add
and
notl
add
xchg
sti
data16
loope
push
clc
mov
jne
loopne
bound
add
or
add
sar
dec
adc
add
add
xor
add
xor
add
jnp
lret
jmp
add
lahf
jecxz
lods
cmp
je
mov
cmpl
cld
jmp
add
or
adc
add
clc
lahf
xor
cli
mov
fs
jmp
jg
add
mov
cli
pop
xchg
cli
dec
arpl
add
dec
cmp
lock
mov
scas
cmp
add
jmp
clc
pop
clc
imul
fmuls
mov
std
or
clc
int3
pop
fimull
push
js
add
out
cmp
repnz
add
sub
mov
ds
jns
jmp
sar
xor
movsl
add
add
add
dec
xchg
xchg
iret
sbb
push
loope
lods
cli
clc
sar
mov
and
cmp
xchg
mov
cmp
cmp
add
push
mov
aaa
lret
clc
inc
add
test
lahf
popf
rcr
cmp
add
mov
pop
mov
repz
cmp
clc
ljmp
std
xbegin
add
inc
clc
lahf
test
faddl
mov
nop
xor
cmp
xor
add
xbegin
add
or
mov
data16
lahf
mov
cmp
clc
push
clc
xchg
cs
clc
pop
jg
mov
dec
sbb
mov
xchg
add
add
sbb
clc
inc
clc
jns
clc
jo
add
clc
push
add
dec
sarl
add
pop
cmpsl
clc
pushf
into
push
adc
sub
pop
mov
jns
daa
clc
jg
inc
clc
push
insl
cmp
add
ficompl
and
fldt
add
add
add
add
add
jle
sbb
addr16
hlt
add
add
add
clc
xor
add
add
fldt
mov
add
das
ljmp
sbb
add
cmp
ret
clc
inc
add
or
mov
jb
add
add
push
add
xchg
mov
pop
out
sahf
xchg
dec
jo
add
movsb
clc
pop
clc
adc
add
add
clc
dec
ljmp
stc
mov
add
fistl
add
insb
push
add
pop
fnstcw
cmp
inc
add
sbb
testb
cld
push
or
clc
mov
add
add
add
clc
cmp
add
add
pop
xor
add
arpl
add
clc
jecxz
adc
sar
clc
pushf
xchg
xlat
fdivr
pusha
add
insb
pop
clc
clc
dec
cld
stos
push
add
mov
clc
pop
hlt
jle
add
out
xor
add
int
lahf
test
fwait
pop
clc
stos
aaa
mov
sahf
je
add
stos
mov
add
scas
dec
cwtl
xchg
js
add
or
bound
add
clc
or
aas
push
clc
push
add
mov
test
xchg
leave
sbb
shlb
clc
add
add
insl
sti
scas
xchg
cmp
push
xchg
jge
sub
add
shrl
popa
add
inc
add
movsb
clc
dec
insb
cs
cmp
sar
add
dec
fs
mov
mov
out
mov
dec
xor
clc
popa
add
sti
mov
add
repz
add
loope
pop
inc
clc
mov
add
cmpsb
clc
sub
aad
in
ljmp
clc
dec
pusha
add
mov
jbe
mov
lods
ret
clc
in
fsubrp
jle
add
add
enter
clc
leave
mov
and
add
add
add
cli
repz
add
clc
sub
arpl
add
clc
movsl
clc
mov
imul
loope
mov
clc
shrb
mov
cmpsl
clc
and
add
in
repnz
cmpsl
clc
xchg
aaa
out
lock
pop
sub
clc
test
clc
sar
loopne
scas
and
add
outsl
outsb
sar
gs
add
add
cmpsl
clc
mov
clc
cmp
add
jge
jne
cwtl
adc
add
shrl
mov
dec
hlt
push
scas
mov
cmpsl
clc
jecxz
inc
add
mov
clc
pushf
add
pop
cmpsb
clc
adc
add
mov
clc
aas
sbb
test
xlat
sar
add
add
add
scas
add
add
mov
js
clc
xchg
pop
clc
pop
decb
cmpsl
clc
ljmp
clc
stos
sbb
mov
jecxz
dec
pusha
add
push
add
in
xor
add
call
add
add
mov
add
jnp
clc
out
mov
arpl
add
push
add
pop
inc
add
inc
clc
mov
cmp
adc
add
clc
xchg
mov
clc
add
add
adc
add
jg
add
adc
add
out
dec
dec
aaa
and
clc
pop
mov
sub
lods
sbb
cmc
add
add
add
clc
xor
stc
sar
clc
ja
int
clc
adc
negl
jge
sbb
clc
sub
insl
into
frstor
imul
xor
pushf
int3
xabort
add
mov
or
in
xor
add
add
cmp
popf
fbstp
sar
pop
clc
xchg
sbb
clc
sti
inc
add
sar
mov
fnstenv
add
push
push
add
jle
push
imul
xor
loop
cmp
mov
add
fadds
xlat
mov
fs
jl
add
out
dec
xchg
stc
pop
add
add
dec
in
lods
into
lahf
cmp
jno
add
adc
cld
mov
clc
pop
test
push
add
mov
clc
add
or
add
mov
cmp
js
clc
xlat
pop
sub
clc
data16
push
dec
add
add
clc
sub
add
clc
push
push
js
cmpsl
clc
int3
or
cmp
mov
sub
shlb
jecxz
inc
clc
adc
add
mov
add
stos
popa
add
sbb
add
fs
es
das
push
add
ja
clc
inc
clc
or
clc
or
or
clc
mov
out
pop
pushf
xchg
or
clc
addr16
jnp
rol
clc
arpl
add
add
es
sbb
clc
fists
push
add
mov
xchg
pop
xchg
movsl
clc
cltd
stc
or
xor
add
pop
in
pop
mov
jne
add
rcl
out
insl
lock
sar
clc
rcl
push
dec
pop
push
add
push
mov
push
dec
stc
loope
or
add
mov
int
sub
dec
xchg
daa
clc
stc
sub
push
add
daa
clc
sub
inc
add
stos
dec
ss
push
inc
clc
xlat
popa
add
in
dec
call
pop
fisubl
xor
add
inc
add
mov
in
jmp
stos
fildll
mov
inc
add
inc
add
cmp
sbb
pop
adc
clc
mov
pop
push
clc
mov
pop
repz
dec
push
fsubr
push
scas
cltd
sub
mulb
jnp
insl
fsts
add
js
or
fcmovbe
das
mov
xchg
dec
adc
add
daa
clc
pop
lret
sub
imul
add
enter
popa
add
cmc
rorl
scas
jb
add
pop
mov
sbb
clc
ljmp
scas
ret
clc
mov
add
mov
in
push
add
add
mov
hlt
sub
clc
sub
xor
add
aad
mov
data16
aas
rclb
add
inc
add
mov
clc
or
loope
cmp
mov
cmc
scas
push
push
add
aam
in
jle
clc
add
fldlg2
or
pop
cmp
pop
dec
push
add
and
add
add
lcall
add
incb
add
add
lret
clc
pop
add
add
sti
cmpsb
clc
mov
clc
adc
add
add
add
add
mov
pushf
movsb
clc
dec
outsb
push
add
add
in
cmp
add
popa
add
adc
add
pop
push
sub
cmp
int
cmpsl
clc
loop
pop
xchg
aaa
jle
push
clc
pusha
add
push
add
clc
sarb
add
aad
shr
movsb
clc
xor
add
or
clc
imul
clc
jp
push
clc
bound
add
xlat
ja
clc
mov
clc
call
jmp
add
clc
mov
clc
mov
adc
cwtl
scas
pop
mov
jns
outsb
cmp
xor
ljmp
lret
leave
sub
clc
pop
sub
xor
add
clc
cmp
cmp
and
es
add
add
mov
cmp
in
jns
clc
pushf
es
mov
jmp
lea
pop
jns
add
jo
add
das
cli
cmp
add
fidivrs
add
lock
lods
jmp
clc
cmp
sbb
outsl
scas
std
call
or
rcl
sbb
clc
call
add
inc
clc
ljmp
jmp
lret
clc
jecxz
gs
ret
clc
popf
fiadds
add
add
imul
scas
data16
int3
cmp
add
cmc
clc
xor
add
clc
dec
fnstcw
add
add
add
mov
pop
cs
push
clc
cmpsb
clc
sbb
add
fwait
or
clc
add
in
mov
jae
add
add
mov
clc
arpl
add
clc
inc
add
in
xlat
add
add
mov
add
add
pop
shll
test
add
lret
cmpsb
clc
dec
push
push
aam
jge
scas
xor
add
clc
fwait
mov
add
enter
mov
cmovno
add
data16
pop
jge
clc
ja
pushf
cmpsl
clc
and
mov
insl
xlat
test
sar
clc
rcrb
clc
fs
test
lret
ds
or
ja
clc
pop
dec
push
notl
sbb
add
stos
outsb
adc
add
clc
sbb
add
imul
clc
inc
clc
and
jbe
clc
aas
dec
sbb
jb
add
dec
xor
add
in
lock
add
mov
ja
clc
stos
cmp
sbb
cmp
add
cmp
inc
clc
fistpll
xchg
insl
lods
xchg
enter
xchg
or
mov
clc
push
fnstcw
jp
inc
clc
sub
dec
and
add
clc
lea
pop
outsl
xchg
inc
clc
mov
test
pop
aaa
cmp
lret
sbb
clc
ss
cmp
jo
add
in
sub
xchg
jmp
cld
aam
mov
js
xchg
mov
arpl
add
push
add
xabort
fcoms
add
lret
es
jmp
rorl
and
add
add
add
push
clc
nop
cmpsl
clc
pop
jbe
clc
sub
add
clc
or
clc
addr16
xlat
fcomps
and
adc
clc
lret
sbb
add
cmp
xor
clc
pop
ss
add
stos
mov
pop
bnd
clc
jns
mov
cs
cmp
add
clc
fimull
arpl
add
add
out
and
add
data16
inc
add
xchg
add
add
add
push
mov
jmp
mov
add
cmp
movsb
clc
stos
pop
inc
clc
inc
add
jle
add
push
sub
movsb
clc
xchg
and
enter
out
js
insl
lret
scas
adc
add
add
sti
inc
clc
pop
clc
push
add
popf
ffree
clc
je
clc
and
add
pop
mov
pop
sbb
fnstenv
add
jno
add
clc
loope
pop
clc
mov
xchg
rcll
insl
mov
dec
rorl
pushf
and
add
add
add
sti
out
cld
loopne
sar
testl
inc
add
and
add
pop
fimuls
cmp
clc
or
clc
nop
fstps
nop
es
mov
fdivp
sub
xchg
lcall
add
xchg
sbb
jle
clc
xchg
movsb
clc
pop
in
xor
add
clc
mov
jns
sbb
sub
stos
add
add
test
ret
clc
aaa
lock
jg
add
add
xchg
shll
add
cmp
jmp
pop
test
stc
aam
mov
enter
mov
cmp
clc
aaa
sahf
inc
add
loop
push
js
clc
mov
sar
ja
clc
imull
aad
add
hlt
mov
sbb
mov
mov
clc
ljmp
mov
clc
ret
push
repz
fwait
clc
cmpsb
clc
sub
xor
add
clc
mov
lea
add
clc
outsb
cmp
mov
scas
cmc
loope
push
mov
shll
adc
add
add
loope
imul
mov
outsl
cwtl
pop
jno
add
xlat
cmp
jne
imul
add
add
das
jnp
call
add
mov
mov
jns
add
call
or
clc
enter
clc
xor
add
xchg
dec
test
mov
add
add
int
imul
clc
add
pop
in
call
cmp
leave
test
hlt
fisubrl
lods
xor
add
mov
clc
in
inc
clc
das
cmp
mov
clc
and
fldln2
xabort
jb
add
inc
clc
mov
cs
clc
pop
jecxz
xor
add
je
push
or
sbb
xchg
scas
test
clc
xor
add
cmp
clc
in
mov
clc
das
clc
xchg
mov
add
testl
cli
movsl
clc
xchg
sahf
xchg
int
add
jbe
add
out
sub
clc
lret
mov
jge
clc
push
idivl
loopne
fistps
cmp
clc
clc
dec
push
fwait
cmc
mov
sub
clc
shl
dec
cltd
iret
push
add
push
add
ja
clc
idiv
and
add
push
jae
add
adc
cmc
dec
imul
sar
es
cli
adc
add
cmp
sub
aas
push
rcl
clc
add
add
popa
add
hlt
fistl
add
fcompl
clc
negl
mov
movsl
clc
dec
dec
loope
leave
jne
and
pusha
add
ret
clc
push
add
iret
je,pn
test
inc
clc
scas
and
add
aad
sahf
aad
add
scas
pop
out
push
outsb
insb
xor
add
clc
mov
popf
mov
inc
add
adc
add
xbegin
add
push
add
and
add
lahf
pop
mov
push
ljmp
push
jns
add
cwtl
push
xchg
sub
clc
cld
cmp
add
pop
ret
clc
xor
add
add
pop
xor
add
cmp
sbb
add
out
mov
lea
jae
add
or
add
push
jns
sbb
mov
ljmp
add
out
sbb
add
insl
fisubs
add
and
add
stos
roll
add
add
pop
and
and
add
sahf
in
jae
add
hlt
repz
jne
hlt
inc
clc
sub
ret
pop
cmp
sbb
push
jno
add
jno
add
daa
clc
call
leave
push
pushf
push
lods
out
sahf
mov
in
popa
add
fiaddl
inc
clc
mov
pop
in
mov
add
aad
xchg
fs
mov
add
pop
clc
cmp
fstpt
enter
das
fistpll
push
insb
xchg
mov
movsb
clc
in
movsb
clc
ret
clc
cmpsl
clc
adc
add
add
add
add
add
rep
clc
jns
aad
jbe
add
test
repz
add
add
clc
iret
jbe
loop
call
clc
mov
inc
clc
clc
pop
pxor
clc
jle
and
add
adc
push
add
mov
clc
in
ljmp
add
icebp
mov
add
popa
add
mov
pop
clc
dec
adc
add
fbstp
pop
clc
dec
aaa
mov
hlt
leave
inc
add
in
dec
ljmp
clc
aad
sub
data16
int
push
add
lock
sub
sbb
fcoml
add
adc
clc
cltd
mov
cltd
xchg
xchg
pushf
movsb
clc
add
clc
mov
add
lods
sti
mov
clc
xor
add
add
clc
sarl
sbb
add
sub
add
mov
xchg
or
xor
push
add
clc
int3
pop
jl
hlt
mov
sbb
mov
shl
mov
sbb
js
add
xchg
aaa
in
adc
add
pop
sti
xor
add
stc
es
gs
arpl
add
jg
clc
aaa
scas
and
add
mov
clc
mov
sub
jmp
aas
xabort
clc
cmp
clc
lahf
jbe
jle
rcll
pop
jle
xbegin
clc
xchg
mov
lret
add
add
xchg
lods
jo
add
add
sub
cwtl
pop
mov
jne
cmp
xchg
shl
clc
insb
pop
mov
mov
cmp
add
incb
add
xor
add
in
loopne
imul
pop
clc
push
add
es
adc
add
clc
ret
jl
inc
add
std
clc
cmp
outsb
sub
mov
leave
imul
clc
aad
push
add
int
clc
xlat
roll
movsb
clc
pop
cmpsb
clc
and
add
add
decl
xor
add
add
xchg
das
xor
add
xor
clc
mov
add
leave
mov
mov
lock
jecxz
daa
clc
push
pop
leave
inc
clc
cwtl
push
dec
ljmp
js
in
dec
shlb
cmp
add
adc
add
pop
xbegin
clc
shrb
mov
clc
arpl
add
loopne
mov
jg
sar
add
aam
stos
add
add
lahf
add
rolb
add
popf
jne
mov
mov
adc
mov
nop
lea
clc
shrb
jl
clc
mov
xchg
jp
add
and
add
xor
add
jbe
mov
push
nop
lods
push
mov
int
cmpsb
clc
xchg
fwait
and
add
fldenv
add
cmp
loope
inc
add
push
add
dec
add
sub
xchg
cld
addr16
and
add
fidivrl
clc
push
add
inc
add
dec
out
and
add
cmp
bound
add
and
loop
int3
cli
testb
mov
xlat
pmaxsw
and
add
add
add
pop
xor
add
push
pop
push
add
popf
mov
cli
pop
pop
fisubrl
cmp
or
jp
clc
jns
fimuls
xor
add
add
jno
add
jmp
add
mov
xbegin
clc
cmp
fwait
sub
xor
add
nop
out
in
mov
in
push
outsb
xor
xchg
xbegin
adc
clc
add
dec
pop
add
cmp
add
clc
hlt
lock
and
add
pushl
add
or
adc
add
jnp
jge
popf
push
into
out
mov
add
mov
mov
clc
mov
dec
adc
add
pop
clc
cmp
insb
jbe
clc
adc
add
clc
push
clc
test
xor
add
ja
dec
aas
popf
or
clc
and
popf
lret
mov
clc
push
add
ss
fcoml
mov
neg
scas
jecxz
cmp
clc
cwtl
ja
add
mov
ret
add
xor
add
add
jnp
clc
loopne
movsb
clc
cmp
mov
inc
add
scas
mov
pop
adc
add
clc
mov
and
jmp
clc
rorb
aas
adc
add
clc
lea
add
cmp
mov
clc
imul
fmull
das
dec
sar
mov
clc
outsl
sahf
sbb
add
jl
in
lret
clc
ret
clc
cmp
add
and
add
daa
clc
leave
pop
inc
add
in
xor
add
sub
ds
call
insb
enter
movsl
clc
das
jae
add
clc
xlat
sub
clc
and
add
clc
sub
add
call
mov
add
lods
push
std
inc
clc
jb
add
add
inc
clc
and
add
cmp
add
mov
and
add
cmpsb
clc
mov
in
mov
clc
cmp
xchg
shll
add
bound
add
dec
cmp
sub
mov
pop
lea
fbld
clc
in
mov
rcrl
jns
xchg
mov
jge
dec
adc
add
add
add
inc
clc
testb
out
fmuls
test
inc
add
mov
clc
sub
sar
clc
mov
imul
jbe
insb
or
jnp
clc
sbb
add
push
leave
popf
xbegin
sub
insl
stos
test
clc
stos
popa
add
mov
testb
or
xchg
lock
jg
out
sti
lcall
clc
mov
clc
xchg
icebp
stc
fidivrs
clc
lcall
jl
clc
cmc
pop
ds
clc
iret
bound
add
clc
daa
clc
pusha
add
ret
clc
dec
adc
add
mov
cmp
add
test
clc
push
clc
ljmp
pop
lods
scas
adc
add
add
cmpsb
clc
jae
add
add
test
add
add
in
push
lret
js
imul
xabort
add
pushf
lcall
add
rolb
add
icebp
sar
inc
add
pop
clc
mov
negl
rclb
adc
add
sub
mov
adc
add
daa
clc
out
add
sub
add
clc
push
add
fistpl
push
fistl
add
mov
xor
add
imul
sbb
add
sub
in
ljmp
mov
fidivl
add
inc
add
call
jo
add
adc
clc
into
jle
pushf
inc
clc
and
add
dec
mov
add
add
clc
push
add
cwtl
push
mov
iret
cmp
clc
add
add
push
clc
divb
add
into
daa
clc
int
aam
xchg
mov
xchg
cli
fnsave
add
clc
cld
inc
clc
jle
cmp
clc
push
shll
add
adc
add
sub
clc
xchg
bound
add
sbb
push
xchg
add
ret
clc
fimull
popa
add
jl
ficoml
add
add
lock
add
test
jne
clc
std
aam
add
pop
xor
add
and
add
insl
mov
mov
clc
imulb
out
sti
inc
add
sub
add
test
sbb
sbb
add
add
clc
or
xchg
filds
add
lcall
fadds
hlt
dec
cmc
xchg
stos
inc
add
sub
adc
stc
pop
xchg
daa
clc
and
cmp
add
or
add
repz
inc
clc
fdivrs
jmp
adc
add
hlt
and
add
clc
cmp
daa
clc
dec
outsb
dec
mov
or
stc
sar
clc
cmp
imul
popf
outsl
jg
lods
test
inc
clc
xor
adc
add
add
cmp
add
jmp
or
add
movsl
clc
lock
dec
xchg
cli
xchg
push
jns
cmp
mov
clc
lods
ucomiss
add
add
gs
mov
dec
push
clc
mov
add
xor
add
test
pop
fwait
cli
in
dec
jg
xor
int3
std
push
add
jp
add
cmpsl
clc
in
inc
clc
in
mov
roll
add
pop
js
sarl
xchg
or
aad
fisubrs
add
add
lret
addr16
in
outsb
push
pop
add
add
add
gs
or
cld
xor
clc
cmp
clc
fstl
mov
add
call
add
add
lods
lods
dec
xchg
or
cmp
clc
js
lret
push
add
in
enter
add
mov
jns
clc
lcall
fnstsw
xor
add
int3
inc
clc
cmpsb
clc
out
xchg
mov
cmp
clc
aam
inc
clc
mov
clc
idivb
hlt
pop
incl
clc
mov
clc
mov
add
nop
adc
add
mov
lret
xor
mov
addr16
sahf
lahf
xchg
pusha
add
in
and
add
stos
mov
iret
outsl
clc
ret
clc
ljmp
insb
sbb
aaa
jmp
add
arpl
add
pop
mov
add
inc
add
xchg
dec
dec
inc
add
sbb
cmp
xchg
push
add
hlt
mov
mov
xchg
push
cmp
push
test
insb
add
add
add
loopne
es
pop
mov
clc
xchg
das
scas
cmp
dec
xabort
clc
pushf
adc
add
mov
push
mov
iret
shl
and
repz
aad
add
xchg
sbb
insb
pusha
add
fsts
imul
outsb
mulb
jnp
clc
cmp
add
test
jno
add
push
lcall
clc
cmp
sbb
repz
je
add
sbb
push
add
xchg
xchg
jle
addr16
call
stos
in
leave
imull
inc
add
or
mov
clc
int
clc
adc
add
add
clc
int
pop
clc
xchg
xor
jecxz
out
fwait
repz
clc
out
nop
mov
pop
lret
stc
or
xlat
dec
cmp
pop
cmp
push
es
stos
nop
outsb
cmp
clc
bnd
adc
add
add
dec
aam
lock
push
pop
push
filds
sbb
push
and
add
cmp
pop
dec
mov
sbb
movq
inc
clc
js
clc
add
add
mov
sub
push
clc
popa
add
inc
clc
clc
mov
leave
mov
pop
int
test
shl
clc
lahf
adc
add
and
add
clc
xabort
clc
adc
add
scas
mov
scas
adc
add
clc
js
gs
mov
fstl
add
inc
clc
dec
filds
sti
lret
popf
add
add
jl
test
loop
fcoms
pop
push
inc
clc
adc
clc
push
add
jg
aas
adc
add
add
add
add
jae
add
notb
jbe
clc
addr16
sub
cmp
clc
sub
fdivrs
mov
clc
xchg
pop
mov
clc
stos
imul
clc
inc
add
comiss
add
xchg
movsb
clc
cmp
add
ljmp
shl
push
add
or
add
cltd
ljmp
add
iret
dec
shr
dec
mov
jge
shll
add
push
jo
add
cmp
bound
add
add
mov
int
add
cmc
xor
add
add
outsb
xchg
ffree
clc
sarb
mov
sar
add
push
clc
jge
add
pop
cmpsl
clc
sbb
xor
add
in
mov
ret
aad
testb
hlt
je
inc
clc
hlt
mov
xchg
shlb
add
clc
out
in
and
add
clc
fsts
add
imul
clc
iret
mov
and
add
movsl
clc
test
cmp
clc
dec
loopne
repnz
mov
loop
int
mov
rolb
add
or
xor
daa
clc
loopne
push
cmp
sub
and
add
push
cmc
into
mulb
popa
add
inc
add
inc
clc
adc
add
call
mov
add
jae
add
clc
aas
cmp
pop
shlb
add
mov
or
clc
insl
stos
fimull
add
data16
mov
add
imul
leave
inc
clc
push
add
push
clc
sar
clc
cmp
xchg
mov
movsl
clc
adc
add
dec
sti
int3
jmp
mov
popf
test
or
add
leave
lret
mov
clc
push
add
mov
mov
lods
sar
loope
xor
mov
push
scas
ret
mov
jae
add
add
add
add
mov
push
add
cli
add
sbb
cmp
inc
add
sbb
mov
imul
xabort
clc
ds
insb
xor
add
add
cmc
add
add
push
add
repnz
pop
and
add
mov
add
mov
clc
cmp
cmc
sub
rcll
out
loope
and
add
adc
add
clc
ja
xchg
jbe
mov
clc
repnz
cmp
clc
mov
cltd
push
clc
push
add
mov
pop
mov
ficomps
add
adc
add
xor
add
push
cld
into
lock
out
inc
clc
arpl
add
push
jno
add
aad
clc
add
add
jbe
jb
add
jecxz
jge
mov
repnz
clc
lods
lcall
add
js
jmp
clc
jno
add
mov
xor
add
mov
sbb
mov
add
out
mov
sub
iret
sbb
es
push
or
sar
clc
adc
add
mov
clc
push
dec
lcall
in
mov
sub
out
fildl
imul
clc
lock
add
pop
imul
out
test
add
add
cmpsl
clc
push
add
xor
add
dec
push
je
sbb
sar
add
push
and
add
mov
clc
addr16
pop
fimuls
js
notb
add
dec
sar
enter
add
add
fistpl
popl
mov
sub
add
sub
aas
je
mov
sub
lret
sarb
mov
mov
adc
add
loopne
testb
in
push
pop
bound
add
add
add
clc
scas
jae
add
push
add
xor
add
clc
sub
jbe
clc
popf
sub
and
add
ficoml
add
cli
fs
jmp
xor
add
add
xchg
dec
sub
dec
ret
clc
cld
popa
add
mov
dec
sti
sarb
clc
pop
pop
faddl
add
pop
leave
jle
clc
jnp
push
dec
inc
add
loop
int3
stc
mov
add
push
add
add
cmp
mov
clc
repz
clc
adc
add
mov
cwtl
fisttpll
fisubrl
inc
add
xchg
popa
add
aaa
jo
add
cmpsl
clc
ret
add
mov
repz
add
jecxz
cmp
add
add
js
imulb
clc
js
or
add
clc
inc
clc
mov
clc
daa
clc
xor
add
add
lahf
test
or
loope
or
xchg
imul
jg
cmc
data16
mov
sub
clc
test
add
mov
lret
push
clc
scas
stc
arpl
add
out
xor
cmp
add
or
rol
clc
lods
xchg
clc
cli
inc
add
mov
loopne
lods
sti
lods
test
data16
jecxz
push
inc
add
sti
xchg
fcomps
nop
jg
inc
clc
bound
add
or
iret
repnz
in
xor
cmp
add
dec
or
dec
mov
inc
add
adc
add
nop
inc
clc
xchg
scas
cltd
test
out
xchg
jp
pop
jb
add
push
add
hlt
push
scas
cmp
xor
add
clc
fs
aas
out
jp
std
call
ffree
clc
negb
jno
add
inc
add
out
and
add
pop
enter
add
imul
xchg
jle
add
fcoml
add
movsl
clc
dec
popa
add
outsb
into
in
scas
fadds
clc
inc
add
lods
dec
cwtl
mov
add
mov
ret
clc
xor
add
insl
mov
clc
and
mov
daa
clc
adc
add
loopne
pop
and
add
jnp
insb
mulb
xor
add
xor
sbb
out
push
dec
sarb
cmp
clc
or
add
add
clc
rorb
inc
clc
mov
pusha
add
aas
xbegin
add
mov
and
dec
pop
in
enter
jae
add
add
add
add
clc
loop
cmpsb
clc
adc
add
push
dec
mov
clc
and
add
clc
aas
clc
jmp
clc
cmp
adc
add
clc
call
add
add
mov
clc
push
pop
test
jno
add
dec
mov
mov
clc
xchg
xabort
clc
rcll
add
add
clc
push
jb
add
xor
add
xbegin
iret
ret
nop
pop
pavgw
cli
push
add
dec
add
add
add
cmp
stos
mov
test
out
ret
clc
pop
insl
icebp
out
in
cltd
pop
inc
add
mov
xbegin
add
add
lret
inc
add
ret
clc
sti
outsl
test
add
add
add
jbe
clc
mov
clc
cmp
add
push
xor
add
jns
sbb
rorl
into
out
inc
add
loopne
dec
ljmp
rolb
clc
lea
or
push
pusha
add
cld
icebp
outsb
jbe
add
mov
add
into
mov
lea
xchg
in
movsl
clc
pop
insl
inc
add
ret
clc
pop
add
inc
add
leave
outsl
fwait
jmp
and
add
clc
push
sahf
dec
mov
xchg
pop
mov
add
icebp
pop
scas
mov
add
xchg
push
jae
add
into
cmp
pushf
out
xchg
sbb
mov
add
imul
clc
popa
add
bound
add
insb
aas
xchg
fs
insb
dec
xor
xchg
int
mov
stc
pop
dec
inc
clc
imul
add
xbegin
or
clc
xor
fsubrs
or
adc
clc
xabort
arpl
add
clc
xabort
push
pop
pushf
dec
mov
pop
fidivrs
in
and
aam
clc
xchg
cmpsb
clc
and
add
add
cmp
clc
cmp
add
aam
clc
xabort
in
into
jmp
or
and
xor
add
loope
leave
mov
mov
add
ljmp
xor
add
iret
dec
bound
add
dec
adc
dec
or
ret
clc
mov
mov
test
push
add
sbb
clc
mov
fwait
loopne
cmp
xchg
outsb
outsb
inc
add
into
jae
add
push
flds
clc
push
add
xbegin
clc
in
xchg
sub
add
xbegin
clc
jb
add
lods
dec
cmp
sar
nop
jbe
scas
fdivrs
clc
xchg
cmp
add
add
enter
repnz
mov
out
ja
leave
ja
xchg
xlat
lcall
dec
adc
xbegin
mov
clc
xor
add
and
pop
jnp
out
mov
add
test
repnz
insl
and
add
add
sbb
xabort
rep
clc
cld
icebp
mov
fstl
std
icebp
repnz
aad
out
dec
xbegin
stos
mov
clc
push
test
adc
add
clc
notb
add
pop
dec
add
add
sbb
clc
push
clc
push
xor
sar
pop
lods
cmp
add
add
adc
out
out
movsl
clc
jmp
and
add
das
mov
push
xchg
getsec
sbb
add
adc
clc
mov
add
cmp
clc
mov
or
lock
clc
out
or
add
js
jno
add
clc
lret
clc
mov
mov
clc
es
lret
add
pushf
aas
inc
add
ljmp
test
loop
jge
leave
stos
sarl
clc
add
add
add
fcoms
add
and
clc
mov
in
push
add
push
cli
mov
sub
ja
add
insb
jne
sbb
mov
in
dec
add
add
dec
imul
fsubs
ljmp
add
or
mov
add
mov
add
icebp
shlb
clc
into
jg
clc
gs
mov
out
cmp
pop
mov
fstps
add
xor
add
add
add
in
cmp
push
ret
clc
inc
add
es
inc
add
cs
int3
in
scas
inc
add
cltd
rol
clc
xor
add
add
lock
add
js
add
cmp
add
adc
add
sub
add
add
xchg
pop
jbe
lret
cwtl
scas
push
add
xor
add
sti
cmc
mov
clc
jae
add
xlat
loop
vcvtps2pd
clc
lods
xchg
and
add
movsl
clc
dec
cmp
and
outsb
loope
out
movsl
clc
sub
mov
add
sub
xbegin
cmp
lea
stos
shlb
outsl
mov
repnz
cmc
cmp
clc
push
fbld
dec
pusha
add
pop
std
sub
pop
jl
cmp
std
adc
add
add
hlt
addr16
cmp
lret
mov
or
push
hlt
push
mov
outsb
stos
mov
add
sub
add
push
clc
dec
xor
add
cmp
clc
dec
cltd
call
jb
add
ficompl
int3
test
mov
iret
xor
mov
clc
clc
loope
push
aad
mov
add
mov
add
add
pop
mov
add
clc
jl
notl
clc
loopne
sbb
add
repnz
dec
cmpsb
clc
sub
or
pop
and
add
and
add
clc
test
jp
add
addr16
rcrb
add
cmpsl
clc
fs
add
add
add
and
add
popf
test
mov
cmpsl
clc
xbegin
inc
clc
xor
add
into
aas
loopne
ud1
mov
xor
pop
pop
fbstp
lods
clc
cmovge
clc
sbb
inc
clc
cmp
call
inc
add
rcrb
stc
scas
jmp
shll
sbb
fs
mov
clc
cmp
clc
xchg
mov
test
lahf
xbegin
and
add
clc
out
xchg
cs
sbb
loope
inc
add
mov
mov
add
pop
adc
add
lods
stc
lahf
sar
clc
and
add
xchg
fsubs
add
jo
add
add
add
adc
add
dec
shll
add
dec
rcrb
clc
and
add
push
in
sbb
cs
push
push
cmp
lock
cmp
jns
mov
mov
mov
pop
clc
xchg
popl
add
int3
mov
test
push
fstps
add
mov
pop
or
xchg
or
clc
push
jb
add
fs
into
add
clc
inc
add
jb
add
ljmp
add
pop
inc
clc
pop
popl
clc
and
pop
jnp
sub
add
xchg
push
clc
mov
add
push
test
loope
popa
add
xchg
xor
clc
test
add
add
or
clc
adc
add
or
testl
rorl
inc
clc
in
jl,pt
bound
add
pushf
push
hlt
push
jnp
in
data16
sbb
push
mov
add
jge
or
cmp
xchg
or
add
add
pop
stos
enter
or
clc
push
add
pushf
imul
add
sbb
clc
fnstenv
add
add
es
cmp
pop
clc
pop
jmp
clc
popf
lock
jg
add
add
add
add
add
xor
clc
sti
in
xor
nop
std
lcall
add
clc
pop
ret
clc
adc
add
clc
int
add
and
add
mov
ljmp
xbegin
pop
dec
hlt
dec
and
jecxz
aam
clc
mov
fisubs
add
push
add
xabort
push
add
or
add
cmp
in
jmp
je
mov
fcmovnbe
mov
add
push
sub
in
in
rcr
imul
clc
mov
xabort
adc
add
xor
add
or
or
ret
sub
sbb
add
add
add
and
add
add
add
add
jnp
outsb
arpl
add
cmpsb
clc
popa
add
xchg
ja
clc
inc
add
fs
in
sbb
dec
xor
cmp
add
push
mov
icebp
ja
clc
dec
clc
outsb
jmp
sub
add
add
add
adc
sub
clc
outsb
pop
es
aam
shlb
add
adc
insl
cmp
dec
pop
xor
lock
add
clc
xchg
mov
clc
ss
mov
clc
sbb
add
dec
mov
add
decb
clc
dec
jmp
ret
in
fistl
add
add
cs
xor
add
add
adc
add
lahf
lcall
jo
add
jp
jl
jl
sbb
lea
and
add
clc
mov
clc
pop
dec
jmp
adc
add
popa
add
inc
add
add
add
push
clc
sub
test
clc
sub
clc
mov
add
adc
add
clc
and
add
add
add
in
dec
ret
clc
ljmp
push
add
xor
add
add
sbb
add
jmp
clc
ja
cmp
dec
inc
add
add
add
clc
cmpsl
clc
or
mov
inc
add
inc
clc
negb
stos
je
mov
adc
add
and
add
insl
in
ja
fistpl
cmpsb
clc
sbb
sub
add
imul
bound
add
add
pusha
add
inc
clc
cmp
mov
clc
jle
clc
arpl
add
push
loope
cltd
das
jns
imul
clc
mov
and
add
nop
dec
mov
int
xor
add
test
or
mov
clc
out
loop
xor
add
cmp
add
add
clc
clc
pop
clc
js
add
lret
add
sbb
cmp
inc
clc
xor
add
xabort
cmp
notl
add
adc
add
xchg
xchg
idivb
es
cmp
mov
push
mov
add
add
clc
cmp
rolb
clc
sbb
mov
add
sub
and
add
nop
sub
add
test
call
out
scas
push
push
clc
or
inc
clc
movsb
clc
push
jno
add
lahf
fcmovne
xabort
push
add
sbb
add
mov
and
add
add
clc
or
cmp
xchg
jne
add
inc
add
iret
push
mov
or
sub
clc
adc
mov
add
mov
push
jg
add
add
int3
js
mov
scas
xchg
mov
lahf
popf
cs
inc
clc
inc
add
int
clc
out
psrld
inc
add
push
add
loopne
jmp
dec
mov
imul
xchg
cmp
stos
pop
mov
sbb
mov
pop
xor
add
add
call
mov
add
mov
cmp
call
add
add
clc
test
add
imul
loopne
mov
xchg
sbb
jg
mov
add
sub
mov
jmp
clc
cmp
clc
jne
scas
fs
leave
mov
gs
je
popa
add
add
outsb
inc
clc
ja
loop
divl
cmp
xor
add
push
add
pushf
push
add
jg
xor
add
add
add
sahf
movsl
clc
lret
dec
jne
add
add
pop
jp
xbegin
add
xor
add
clc
mov
clc
cmp
sar
add
into
cmpsb
clc
xor
add
push
add
stos
sub
in
add
add
add
xabort
add
xor
add
ds
pop
sub
clc
jmp
clc
dec
cltd
adc
add
jb
add
js
clc
ret
clc
insl
jo
add
or
inc
clc
xchg
push
bound
add
cmp
clc
pop
ja
add
push
xor
add
data16
js
jg
adc
add
mov
jne
sbb
add
adc
add
sar
jg
test
fisubl
clc
mov
add
push
cld
aam
pop
repz
add
dec
lret
mov
aas
mov
pusha
add
dec
fldenv
xchg
sbb
clc
dec
xchg
test
repz
imul
aas
jg
add
test
lods
mov
clc
leave
js
into
cmp
dec
pop
lods
xbegin
test
add
pop
roll
sar
or
clc
loopne
sbb
add
xor
add
loopne
jne
pusha
add
fs
mov
clc
nop
pop
add
add
add
jbe
inc
clc
addr16
dec
xor
add
add
add
add
add
outsl
cwtl
cmp
dec
cmpsl
clc
cltd
repz
add
add
clc
inc
add
push
mov
push
add
jns
xor
add
popf
add
add
jle
cmp
add
int
add
outsl
popf
xchg
inc
clc
jge
or
clc
jp
or
xchg
cld
mov
add
adc
add
adc
add
jl
dec
lods
add
add
add
cmp
add
flds
add
test
mov
std
loope
sub
jb
add
add
cmp
clc
stos
push
xlat
stos
mov
clc
sar
in
in
xlat
daa
clc
loope
push
popa
add
xor
inc
add
dec
insb
mov
enter
push
add
sub
bound
add
add
add
push
fsubrl
inc
clc
sub
push
add
cwtl
mov
pop
pop
imul
clc
xchg
inc
add
fldl
add
call
scas
cmpsb
clc
arpl
add
push
das
xlat
fs
in
clc
dec
mov
clc
hlt
pop
clc
data16
add
inc
clc
jb
add
add
inc
add
adc
add
sbb
mov
clc
dec
xchg
inc
add
shrl
loop
imul
lret
jl
mov
add
cs
add
fiaddl
add
and
jbe
clc
fildll
clc
mov
clc
pop
daa
clc
call
rol
clc
mov
test
push
test
js
clc
call
pcmpeqw
clc
cmp
add
add
xor
add
add
fucomip
mov
add
js
add
mov
add
stc
mov
insl
popf
mov
es
sub
xchg
sar
pop
int3
mov
add
push
loop
fs
int3
out
loope
mov
lock
adc
mov
dec
sub
add
push
dec
loopne
xchg
test
clc
push
add
stos
dec
mov
lods
nop
jae
add
jns
enter
jno
add
clc
cwtl
popf
hlt
xor
add
mov
dec
jnp
clc
cld
pop
clc
fwait
adc
add
clc
ja
clc
inc
clc
pop
imul
add
mov
clc
add
add
scas
xchg
jl
add
cmp
sar
sar
jnp
cmc
mov
pop
xchg
adc
inc
clc
bound
add
call
imul
xchg
shll
mov
mov
popf
fisubs
xor
add
sub
cs
clc
or
fstpl
mov
add
sub
inc
add
jl
gs
addr16
inc
clc
and
add
clc
fwait
pop
xchg
jo
add
pop
clc
inc
add
jl
into
popa
add
adc
add
movsb
clc
add
cmpsb
clc
mov
mov
ss
pop
mov
add
sti
and
add
aaa
adc
push
lock
out
insb
inc
clc
inc
clc
sbb
pop
clc
or
add
out
adc
add
mov
negl
test
pop
out
push
add
dec
sub
cli
data16
mov
int3
add
add
dec
pop
clc
inc
clc
bnd
clc
sub
add
add
int
xchg
popf
sub
ljmp
stos
pop
cmc
std
add
add
dec
inc
clc
insb
mov
js
sar
mov
clc
insl
shr
stos
xchg
push
mov
add
cmp
repnz
add
push
add
mov
clc
fs
inc
add
aam
inc
add
outsb
test
adc
loop
lcall
clc
call
icebp
adc
add
clc
jg
arpl
add
int
clc
pop
add
xor
add
add
call
sub
add
cmpsl
clc
stos
ja
add
dec
faddl
pop
and
add
pusha
add
sar
clc
push
iret
popf
sbb
jl
add
or
pop
pop
daa
clc
xor
add
das
bnd
clc
ret
clc
or
pop
push
int
add
call
add
ljmp
mov
push
pop
adc
add
cs
shlb
fdivrs
add
xchg
xchg
xor
xbegin
add
clc
iret
insl
add
add
add
clc
mov
clc
cmp
xchg
dec
mov
sbb
pop
jns
je
jle
out
pusha
add
inc
add
mov
clc
sbb
fimuls
enter
test
mov
add
jp
clc
mov
cmp
clc
int3
mov
nop
sub
push
adc
add
add
clc
ret
clc
add
add
add
inc
clc
clc
push
clc
pop
clc
das
in
addr16
mov
je
clc
aam
or
or
dec
or
xchg
icebp
or
clc
fldenv
add
xor
add
js
clc
xchg
into
movsl
clc
and
add
adc
add
clc
inc
add
jb
add
ss
and
add
xchg
pusha
add
pop
sbb
mov
int
and
add
add
add
add
add
clc
int
and
lea
imul
inc
add
sbb
mov
pop
loope
inc
add
enter
jg
add
jns
dec
dec
sub
clc
mov
cmp
clc
imul
add
clc
xor
add
mov
mov
cli
and
add
mov
mov
ds
inc
clc
xor
add
clc
test
xchg
cmpsl
clc
mov
and
add
out
push
add
cmp
clc
pop
xchg
jns
stos
outsb
repz
clc
pop
jae
add
inc
add
xor
push
dec
mov
mov
add
arpl
add
and
add
ds
clc
push
clc
int3
pcmpeqw
clc
dec
xabort
clc
cs
dec
inc
clc
ret
push
add
xchg
stos
repz
clc
test
lahf
data16
and
je
scas
mull
add
sar
and
add
test
dec
push
fs
clc
lcall
clc
cmp
clc
jmp
push
es
lea
add
sub
clc
lret
dec
inc
add
int3
mov
add
ljmp
mov
add
clc
outsl
sbb
xor
add
ror
pop
addr16
stos
out
repz
clc
data16
xlat
loop
mov
clc
out
mov
xor
add
outsb
mov
and
mov
jecxz
push
add
mov
add
adc
add
dec
dec
adc
add
add
add
add
add
add
jge
mov
clc
push
clc
push
aas
xchg
sub
dec
xchg
inc
clc
sub
sbb
clc
xchg
into
push
add
in
jl
clc
out
fcomp
icebp
je
jne
add
loopne
lods
sti
lret
packuswb
inc
clc
jo
add
sti
push
clc
mov
add
scas
jg
clc
out
or
add
adc
sbb
es
or
add
jo
add
pop
fbld
add
sub
add
ss
mov
ljmp
sysexit
pop
add
and
add
clc
int3
mov
aaa
gs
mov
push
mov
je
clc
cmp
or
gs
pop
sub
imul
add
add
clc
ja
clc
loopne
push
add
out
das
pop
lock
mov
add
aaa
mov
je
push
jl
add
xchg
out
dec
inc
clc
inc
clc
dec
xlat
cmp
dec
test
arpl
add
clc
enter
loopne
inc
add
mov
mov
test
clc
sahf
test
dec
test
loopne
lahf
mov
rcrl
mov
jbe
cmc
icebp
add
lock
add
or
add
aam
push
hlt
fisttpll
clc
pop
jmp
clc
sub
clc
sahf
jns
bound
add
dec
std
add
cwtl
imul
jb
add
add
fimuls
imul
pop
adc
cs
mov
test
jo
add
in
mov
add
data16
add
add
xor
add
sbb
pop
data16
inc
clc
xbegin
jge
jno
add
push
add
xor
xchg
lahf
shll
insl
insb
clc
cli
fwait
cmp
aas
popf
and
add
out
mov
clc
xchg
shrl
imul
dec
sub
fisubl
lahf
add
add
gs
je
add
jbe
in
outsb
into
and
dec
repz
out
cmp
mov
mov
clc
xchg
or
push
push
and
xor
jbe
aam
stc
sar
mov
mov
out
mov
stc
pop
push
xchg
mov
fstpl
jecxz
push
add
push
add
sbb
add
frstor
movsl
clc
xchg
mov
add
jmp
clc
mov
add
inc
add
xchg
adc
imul
add
adc
add
enter
xchg
popa
add
cmc
leave
in
pop
jnp
cmp
add
clc
dec
push
jle
xchg
pop
pop
movsl
clc
lcall
add
add
out
xor
add
xchg
inc
clc
sbb
clc
or
jl
clc
cld
adc
add
js
add
gs
mov
clc
mov
jmp
xbegin
popf
mov
cmp
xor
add
jns
add
fstpl
add
scas
and
mov
hlt
data16
sbb
add
fnstcw
sbb
insl
sbb
xlat
sar
lcall
and
add
sahf
out
pop
cmpsl
clc
inc
add
mov
loopne
inc
add
pop
clc
push
aad
out
push
add
jecxz
mov
ss
clc
mov
clc
mov
sbb
popf
adc
mov
fistpll
push
add
pushf
cmp
testb
add
pop
clc
call
add
add
inc
clc
ficompl
in
mov
jnp
clc
cli
adc
clc
in
lret
xchg
inc
clc
jbe
add
add
clc
lea
add
add
test
add
sbb
and
add
pop
xchg
daa
clc
jbe
add
and
add
inc
add
mov
mov
aam
clc
out
add
add
cmp
loope
mov
clc
stos
rolb
add
bound
add
lock
sbb
clc
dec
mov
add
xor
add
add
add
mov
jns
out
leave
shl
clc
sar
cmp
xbegin
jb
add
add
out
push
mov
ret
clc
inc
add
repz
mov
icebp
js
push
add
sub
mov
jne
inc
add
popa
add
push
add
push
add
fmull
clc
lahf
hlt
mov
clc
dec
mov
push
lret
loop
dec
jl
clc
testl
jge
fs
decl
fmull
clc
arpl
add
lret
fs
sub
in
adc
add
or
add
add
in
or
mov
cmp
or
sub
clc
out
int3
push
loope
and
add
or
xabort
hlt
aaa
cmp
lret
out
imul
xchg
mov
sbb
lods
scas
call
jne
cmp
pop
clc
add
add
add
clc
mov
dec
lock
das
inc
add
sub
sar
sub
or
jecxz
std
out
dec
mov
add
clc
mov
add
inc
add
jnp
clc
pop
out
push
xabort
bound
add
ljmp
imul
mov
lret
dec
or
jmp
xabort
xchg
and
add
in
clc
push
lods
push
sub
xor
add
add
pop
clc
inc
clc
das
mov
cmp
add
push
xor
add
add
into
lods
fcoms
add
ss
add
add
loop
pop
adc
add
clc
cs
sbb
add
add
scas
jecxz
aas
xor
add
sub
sar
dec
cs
cltd
mov
out
or
cmp
add
aaa
mov
clc
sbb
scas
cmp
adc
add
add
mov
outsb
push
and
add
cmpsb
clc
cmp
add
pusha
add
mov
pop
sub
xchg
out
fisubrl
cmpsl
clc
add
add
jno
add
int
ret
clc
inc
add
inc
clc
sub
jmp
out
fstpt
push
imul
adc
add
clc
push
and
fwait
and
add
add
test
jg
sbb
add
clc
lcall
add
nop
inc
clc
add
add
add
push
popl
add
pop
jno
add
clc
mov
test
mov
add
lea
fldl
loope
loopne
jl
leave
aam
push
fwait
sbb
ljmp
cs
clc
ret
addr16
mov
add
lcall
push
movsb
clc
lcall
and
add
jae
add
clc
jmp
cmpsb
clc
mov
add
lods
or
xor
add
clc
jmp
jmp
in
lret
cmp
add
xchg
xchg
sahf
iret
frstor
mov
add
in
sarl
inc
clc
mov
add
xabort
sarb
scas
dec
filds
add
inc
clc
sbb
add
add
jo
add
scas
adc
add
pop
outsl
mov
cmp
cmp
clc
in
fbstp
add
sbb
add
clc
cmp
mov
scas
mov
push
enter
clc
jmp
dec
pusha
add
int3
lods
inc
clc
movsb
clc
inc
clc
das
je,pt
push
add
sub
clc
and
sbb
push
add
add
dec
xor
add
add
add
popf
dec
mov
aam
clc
mov
mov
in
inc
add
ret
clc
jb
add
jecxz
call
dec
sar
cmp
outsl
mov
clc
mov
cs
mov
clc
aas
shll
daa
clc
cmp
mov
jns
dec
test
mov
mov
jle
mov
jmp
divl
and
add
inc
add
and
mov
cmp
add
add
and
add
add
jns
loop
test
and
lods
push
clc
pop
fs
push
add
xchg
repnz
pop
mov
xchg
dec
push
jbe
add
push
add
pop
and
add
mov
inc
clc
loop
sbb
cmp
clc
ja
mov
jne
clc
jg
scas
and
add
clc
fdivr
decl
ret
clc
lods
or
aas
pop
clc
xchg
add
add
popf
je
clc
xor
add
jg
inc
add
out
inc
add
bound
add
out
jo
add
mov
clc
lcall
outsb
sub
add
adc
add
sbb
add
bound
add
sar
clc
mov
add
add
stos
inc
clc
cmp
and
add
std
jae
add
clc
sub
lret
mov
pop
lret
je
clc
rclb
es
dec
fsubrl
sub
sbb
pop
mov
jo
add
icebp
jg
clc
jecxz
jbe
add
add
clc
mov
clc
cmc
xchg
aam
inc
clc
aaa
outsb
or
stos
xor
add
push
in
sbb
add
js
enter
in
mov
adc
add
dec
lock
clc
shrb
test
insb
test
mov
push
push
add
mov
data16
enter
pop
mov
mov
dec
lods
cmc
ss
testl
clc
call
inc
clc
stos
cmp
push
cmpsb
clc
int3
push
sbb
add
add
dec
stc
ss
dec
jne
ret
cmp
or
clc
jo
add
pop
insl
pop
iret
insb
mov
mov
jo
add
mov
clc
sarl
aaa
ljmp
jbe
pop
fcomi
icebp
adc
add
clc
inc
clc
ljmp
mov
add
xchg
mov
clc
adc
dec
jo
add
insl
loop
sbb
mov
inc
clc
push
add
mov
pop
clc
xlat
cmp
clc
inc
add
mov
clc
scas
mov
or
add
ret
clc
mov
clc
lret
pusha
add
lea
add
mov
add
arpl
add
clc
dec
lods
and
add
cmp
push
inc
add
mov
add
add
cmp
bound
add
or
clc
xchg
movsl
clc
movsb
clc
fs
mov
add
add
arpl
add
clc
fisubl
add
mov
push
clc
cmp
clc
das
in
mul
clc
bound
add
clc
in
mov
dec
jle
pop
adc
add
add
rcrb
add
mov
inc
clc
cmc
mov
mov
sar
xchg
es
push
pop
push
add
add
add
test
push
cs
mov
clc
clc
dec
jo
add
divb
add
jge
adc
add
ja
xchg
pop
dec
out
cmp
sbb
test
clc
mov
es
mov
clc
jnp
pop
cmc
dec
sbb
clc
movsb
clc
jle
test
scas
mov
sub
xor
add
lock
jge
sti
mov
icebp
push
add
frstor
add
cmp
push
addr16
js
cmp
sbb
clc
gs
pop
clc
inc
clc
test
jmp
xor
arpl
add
push
aaa
inc
clc
xchg
cmp
sub
add
in
sub
inc
clc
fimull
rorl
add
enter
push
cmp
pop
xlat
ret
and
add
xor
add
jns
add
sar
clc
mov
add
sbb
loopne
and
add
jne
addr16
xchg
lock
pusha
add
dec
lret
lock
dec
dec
sbb
shlb
outsb
shrb
gs
or
sbb
clc
mov
cmp
ds
clc
in
sbb
dec
or
xabort
clc
fistpll
nop
cmc
hlt
xor
add
mov
pop
clc
fcmovnbe
test
pop
lcall
xchg
shrl
add
stc
push
cmc
inc
clc
iret
xchg
shrd
dec
fsubrl
in
xchg
loopne
ret
clc
inc
add
xor
add
cmp
clc
jbe
lahf
mov
xbegin
add
add
add
xchg
cmp
inc
clc
dec
add
lret
mov
inc
clc
fidivl
add
add
sbb
clc
cmp
add
lahf
xor
add
clc
fwait
stos
loopne
mov
inc
add
mov
jle
jae
add
fcomps
leave
mov
pop
xor
add
negb
clc
xchg
aad
jo
add
add
clc
lcall
add
mov
pop
mov
clc
jne
xchg
push
pushf
sar
outsl
bound
add
clc
loope
sbb
cs
clc
sar
fstps
xor
clc
shlb
clc
jb
add
lods
mov
clc
int
adc
add
hlt
mov
add
filds
add
clc
pop
int
mov
add
pop
xchg
aad
or
clc
sub
clc
shlb
push
leave
xchg
das
cmp
shll
add
es
repz
add
xor
xchg
das
cli
push
inc
clc
mov
sub
sbb
cmpsl
clc
es
cmp
js
add
repz
push
clc
cld
loopne
mov
dec
mov
add
or
add
aam
inc
clc
rcrl
fcoms
test
scas
mov
xchg
cmpsl
clc
out
aam
clc
jo
add
in
cwtl
adc
add
lcall
pop
cmc
popf
je
add
and
add
clc
mov
test
add
rclb
add
out
xor
add
movsl
clc
test
mov
add
xor
add
jb
add
clc
jbe
and
clc
repnz
mov
pop
mov
clc
and
add
clc
jo
add
pop
js
clc
hlt
fwait
clc
sub
jae
add
add
add
adc
add
cs
clc
inc
clc
int
lcall
std
mov
cmp
cmc
outsb
pusha
add
addr16
adc
add
add
inc
add
xor
add
clc
xor
hlt
sub
add
int
lret
add
test
add
imul
fcomps
adc
add
jo
add
add
rorl
or
jp
jmp
dec
xchg
into
std
jle
add
pop
movsl
clc
insb
ljmp
leave
movsb
clc
outsl
aas
js
clc
nop
repnz
nop
lret
mov
xchg
repnz
adc
add
pop
clc
sahf
xbegin
clc
or
xchg
jns
clc
mov
movsb
clc
idivl
xchg
jae
add
adc
add
insb
jne
clc
jae
add
pop
out
bound
add
cmp
clc
mov
clc
js
add
push
arpl
add
cmp
daa
clc
xabort
mov
mov
scas
mov
add
cltd
xor
add
pop
mov
inc
clc
adc
add
push
add
rcrl
clc
inc
add
jne
xchg
clc
sub
jbe
mov
ud0
push
add
inc
clc
add
add
push
pop
cld
lcall
mov
mov
popa
add
sbb
je
das
stos
pop
mov
xchg
iret
lods
aaa
sti
cmpsb
clc
gs
xchg
xchg
ljmp
loop
stc
or
clc
aad
clc
ja
add
mov
dec
jp
out
jb
add
clc
add
pop
movsb
clc
in
enter
ljmp
add
xor
add
add
dec
adc
add
add
mov
leave
ret
clc
ljmp
add
clc
pop
pop
sar
jle
add
clc
or
clc
xchg
xchg
pop
dec
decb
add
cltd
rcrl
dec
push
push
add
cwtl
in
xchg
or
clc
je
clc
roll
add
mov
and
add
jbe
inc
clc
cwtl
aaa
mov
dec
lods
lahf
mov
cli
pop
cli
sub
xor
add
sub
clc
sub
lods
sub
and
loopne
clc
mov
add
mov
push
repz
clc
outsb
pop
pop
bound
add
add
pop
movsl
clc
sbb
out
cmp
clc
popf
jp
clc
jne
dec
push
add
loop
arpl
add
in
push
add
add
out
cltd
ret
add
cmp
mov
inc
add
int3
push
add
or
add
add
mov
clc
stos
jno
add
clc
rol
clc
cmp
sbb
mov
gs
scas
jp
hlt
stc
dec
mov
mov
loopne
loope
es
aaa
loope
inc
clc
sbb
nop
shlb
add
sbb
sub
add
shl
mov
dec
pop
testl
inc
add
out
popf
test
inc
add
fadds
push
add
bound
add
popa
add
leave
popa
add
stc
mov
add
add
add
add
add
mov
mov
mov
clc
cmp
add
clc
xbegin
cmpsb
clc
jbe
sub
or
xor
add
js
ljmp
dec
movsl
clc
push
ja
pop
gs
test
xor
clc
xchg
pop
test
jge
clc
ds
mov
add
add
add
gs
scas
aaa
ret
clc
xor
add
xchg
fwait
xabort
clc
mov
jge
mov
add
add
sub
push
xlat
cmovg
mov
mov
pop
xlat
sub
add
lods
xchg
xabort
add
xchg
js
jne
scas
pushf
jae
add
in
push
clc
xchg
inc
clc
or
clc
dec
mov
jo
add
mulb
clc
outsl
mov
fucomip
adc
clc
jl
clc
and
add
clc
lock
add
xor
add
aam
sbb
ds
add
loope
fcomip
adc
add
lea
add
mov
push
jmp
dec
sti
pop
clc
pop
in
jge
and
mov
clc
sbb
add
xchg
jg
clc
and
push
clc
lcall
add
add
clc
lahf
push
add
mov
pop
jecxz
xor
add
clc
pop
test
clc
adc
clc
stc
push
add
push
out
dec
cmp
clc
pop
add
add
add
outsl
push
add
dec
cld
mov
xchg
imul
popa
add
or
and
add
add
cltd
xor
add
ljmp
sbb
xchg
repz
add
jle
lods
inc
clc
mov
clc
xchg
mov
jg
mov
repnz
movlps
add
addr16
movsl
clc
mov
iret
insb
jo
add
pop
stos
movsl
clc
mov
loop
xor
add
popa
add
xor
add
push
add
xchg
ror
sbb
pop
clc
dec
mov
lret
sar
xchg
mov
js
clc
inc
add
in
xchg
popf
sahf
out
mov
add
jmp
add
mov
add
adc
add
int
push
fistl
insl
jge
clc
jge
sti
ret
or
scas
lods
daa
clc
xchg
mov
jb
add
fadds
clc
cmp
mov
clc
dec
insl
hlt
cli
mov
cmp
pop
push
jns
add
and
mov
in
cmp
or
sahf
insb
xbegin
out
lcall
sub
clc
and
add
pop
pushf
cmp
clc
xchg
mov
or
fidivs
add
mov
int
clc
clc
std
enter
add
xchg
jne
and
add
clc
scas
xchg
push
add
movsb
clc
mov
xchg
js
and
inc
add
xlat
mov
add
add
dec
test
into
inc
clc
and
add
enter
int3
adc
add
or
clc
lcall
clc
push
mov
jp
sub
fstps
test
pop
scas
ljmp
pushl
clc
inc
add
push
adc
cmp
xor
clc
ret
clc
cmc
and
sbb
pusha
add
nop
data16
into
mov
sbb
xchg
fimull
add
jnp
popa
add
jge
add
adc
scas
inc
clc
out
cmp
add
test
clc
pop
mov
dec
aaa
cmp
xchg
push
repnz
add
hlt
sub
push
fwait
jns
and
add
test
outsb
mov
sub
mov
aas
lret
pop
mov
jae
add
clc
xchg
mov
lock
clc
ss
scas
sti
jne
mov
xor
mov
pop
shl
clc
ds
add
mov
clc
sar
add
clc
lahf
push
add
data16
int
sbb
mov
xbegin
inc
add
js
lahf
add
ljmp
xor
add
sbb
je
clc
pusha
add
ficoml
clc
ljmp
cli
ret
add
mov
add
addr16
scas
cmp
add
add
js
add
js
clc
pcmpgtb
adc
add
popa
add
cmp
add
pop
adc
add
movsl
clc
jbe
clc
jecxz
mov
fisubs
insb
or
cmp
or
add
outsb
cmp
mov
add
repz
mov
dec
fildl
add
fs
jnp
clc
ljmp
clc
data16
pop
clc
or
clc
cmp
mov
scas
mov
add
add
add
add
jle,pn
clc
in
repz
pusha
add
std
ss
xchg
or
pusha
add
jge
cmp
clc
xor
add
es
lock
add
add
jns
adc
adc
add
xchg
pop
push
add
and
add
mov
clc
push
push
clc
in
mov
icebp
cmp
adc
add
stc
call
pop
call
clc
sahf
cltd
enter
add
xor
add
xor
clc
sbb
add
repz
add
divb
clc
or
sub
adc
add
or
insb
mov
data16
dec
insl
cwtl
inc
clc
shrb
clc
lods
leave
in
aaa
sub
clc
xor
add
adc
add
cltd
dec
xbegin
inc
add
xor
repnz
sbb
cli
out
mov
iret
xchg
or
or
add
dec
lcall
test
clc
jp
clc
sbb
sub
add
int3
jae
add
lock
add
jp
add
cs
adc
add
add
xor
add
dec
mov
cmpsb
clc
lcall
test
aas
ret
clc
imul
add
lcall
aam
xchg
lods
sar
adc
add
add
aam
add
cmp
inc
add
es
sti
js
adc
add
cmp
adc
add
sbb
jle
pop
daa
clc
xchg
pop
scas
push
add
mov
and
clc
cmp
dec
sub
rorl
jmp
test
mov
inc
clc
sar
mov
clc
mov
xor
add
mov
or
add
push
add
jns
jae
add
ja
clc
xor
pop
cs
jne
sub
add
cmp
nop
cwtl
aad
loop
cmc
lret
jp
lock
enter
loop
loop
loope
sahf
xchg
inc
clc
cwtl
lea
lahf
fnstcw
adc
cli
nop
arpl
add
ja
mov
clc
xchg
repz
mov
add
mov
clc
sbb
clc
sbb
mov
dec
jmp
xbegin
jmp
lock
push
pop
clc
sti
inc
clc
aam
out
fst
dec
outsl
clc
in
inc
clc
lock
clc
lods
inc
add
std
mov
add
add
lock
add
pop
arpl
add
shrl
pop
clc
inc
add
inc
clc
shlb
clc
jge
adc
fimull
ljmp
jbe
fsubs
add
sahf
jns
clc
out
mov
cmp
pop
insl
in
clc
mov
add
cmp
jge
jne
xchg
sub
clc
xlat
and
clc
cmp
jg
mov
sbb
add
sub
push
popf
jp
add
add
mov
ds
pop
or
fwait
and
add
add
jne
ss
or
jecxz
xor
add
leave
aam
and
add
add
mov
add
add
test
sahf
clc
test
adc
add
add
clc
lods
push
mov
cmp
add
loopne
test
int
clc
cs
sub
cmp
jns
dec
call
lods
in
bound
add
add
jnp
clc
or
pop
adc
add
inc
add
movsl
clc
add
enter
push
mov
clc
mov
add
repz
push
and
adc
add
inc
add
pop
hlt
lret
sbb
in
push
add
push
add
cwtl
jmp
cmp
add
jge
cmp
mov
add
jnp
lret
movsb
clc
ds
adc
add
outsb
sar
clc
mov
clc
rolb
mov
gs
jecxz
hlt
push
lea
add
mov
out
push
add
ds
push
es
mov
add
repnz
push
mov
sbb
add
jg
add
loope
adc
add
clc
enter
lret
push
add
popa
add
adc
add
add
cmc
xbegin
jae
add
add
push
xbegin
call
inc
add
sbb
in
ret
clc
lahf
imul
mov
clc
adc
add
xlat
sar
clc
push
add
aaa
mov
cli
xor
add
cmp
add
enter
add
add
movsl
clc
test
movsl
clc
hlt
mov
clc
std
jmp
mov
cld
xchg
mov
stc
arpl
add
inc
add
sub
mov
in
jno
add
or
xchg
inc
add
lret
push
add
insb
pop
jbe
mov
clc
inc
add
and
add
test
popa
add
cmpsb
clc
mov
pop
imul
pop
clc
sar
add
cld
push
cmpsl
clc
fwait
mov
add
xchg
and
xor
pop
pusha
add
xabort
ret
add
pop
fstps
cmp
or
jge
clc
push
add
js
adc
add
roll
add
fcomip
push
add
inc
add
sti
lea
clc
fdivp
sbb
ret
clc
mov
outsb
add
adc
add
clc
pop
test
add
shlb
lcall
insl
lods
fldt
jmp
in
cli
outsl
imul
clc
mov
cmp
clc
pusha
add
into
js
inc
clc
cmp
xor
add
xor
add
ljmp
clc
sub
adc
add
jl
roll
add
sbb
out
pop
iret
and
add
je
cmp
xchg
or
mov
inc
add
mov
clc
cltd
mov
jb
add
imul
add
out
mov
fiaddl
add
add
in
adc
leave
or
clc
add
add
inc
add
mov
std
cmp
bound
add
bound
add
clc
mov
sub
xchg
add
add
add
clc
sub
add
arpl
add
add
and
add
adc
add
mov
call
add
popf
or
add
fistpll
in
mov
sti
ret
clc
scas
xor
add
sub
xchg
cmp
out
int3
jno
add
iret
fs
popf
ficoml
stos
data16
es
dec
mov
add
jl
inc
clc
xor
add
xlat
push
clc
adc
add
jno
add
clc
stos
jbe
outsb
adc
add
jnp
mov
data16
cmp
add
clc
pop
push
add
sar
add
cmp
clc
aaa
or
ret
fstpt
mov
adc
add
clc
int3
insl
shlb
add
add
in
xchg
push
xchg
in
mov
clc
mov
popa
add
xchg
pop
test
xor
add
xchg
int
repz
sub
clc
mov
add
scas
in
data16
jp
cmp
lcall
sub
add
mov
push
fildll
jp
xor
add
inc
clc
fadd
clc
and
add
nop
and
add
add
lods
ss
mov
clc
pop
pop
cltd
xor
clc
inc
add
mov
add
clc
addr16
dec
js
aad
clc
push
add
outsl
insl
mov
jno
add
add
add
fcmove
mov
rclb
clc
stos
ja
mov
cli
dec
data16
cmp
sbb
add
add
clc
inc
add
js
pop
mov
cmp
dec
xor
add
xor
add
dec
push
adc
add
ja
hlt
mov
push
sub
loop
in
jle
add
clc
mov
clc
cmp
clc
xlat
aaa
push
add
aas
mov
mov
loope
nop
sub
push
fildll
insl
dec
out
add
add
jo
add
clc
inc
add
sub
add
add
push
add
add
dec
jge
clc
repz
add
cmp
clc
clc
lcall
scas
mov
test
add
popf
mov
jbe
add
cmp
sub
push
add
adc
add
sub
sub
jp
ds
testl
icebp
inc
clc
cmp
mov
cmp
clc
ret
clc
mov
add
add
aad
clc
jnp
add
das
pop
dec
stc
dec
push
add
cli
clc
fmuls
clc
or
js
clc
clc
sub
jo
add
mov
fimuls
aad
mov
sub
stos
in
mov
jge
cmpsb
clc
mov
mov
idivl
mov
mov
mov
or
clc
pop
cmp
mov
add
test
add
outsl
mov
xchg
enter
out
imul
idivl
cmp
jge
clc
ljmp
int3
imull
or
clc
dec
add
add
pop
cld
cltd
cmp
clc
mov
aas
jge
dec
nop
clc
push
cmp
add
xchg
ret
out
clc
dec
mov
movsl
clc
cmp
lcall
add
aas
and
add
clc
dec
push
add
and
add
add
xor
pop
sbb
add
jp
mov
add
int
in
jecxz
call
jecxz
into
mov
add
sub
out
jno
add
add
jle
clc
lcall
mov
add
sbb
movsb
clc
mov
clc
pushf
add
add
pop
stos
outsl
inc
clc
lock
pushf
jge
inc
add
outsl
addr16
mov
gs
in
xbegin
inc
add
in
inc
clc
repz
js
clc
cmc
jg
aad
cld
push
pop
clc
push
fdiv
jbe
add
sarb
jbe
clc
add
add
daa
clc
out
negb
je
movsb
clc
in
xchg
lcall
mov
jecxz
add
add
jb
add
fsubl
cld
inc
add
ljmp
aad
clc
dec
or
push
cs
mov
fisubl
clc
stos
lahf
mov
clc
add
add
cmp
add
add
dec
je
add
add
cmp
push
add
fisubs
inc
clc
push
add
or
movsl
clc
lahf
hlt
inc
clc
outsb
mov
add
adc
stos
lea
mov
or
push
bound
add
clc
push
adc
add
cli
mov
cmp
imul
lock
inc
clc
shl
sbb
insl
dec
jg
dec
stc
cmpsl
clc
int3
xchg
loop
mov
sarb
cld
jg
mov
incl
add
adc
add
pop
mov
add
repnz
fs
cmp
xchg
pop
push
clc
jns
jno
add
add
leave
shl
clc
jp
enter
pop
and
clc
inc
add
call
out
sbb
inc
clc
sbb
clc
xchg
in
push
ds
in
test
daa
clc
movsl
clc
into
add
jle
lcall
addr16
or
add
clc
xbegin
xchg
mov
sub
cmpsl
clc
js
add
dec
ja
xchg
ret
clc
rclb
lods
push
jne
stos
cmp
fadd
clc
add
clc
jae
add
clc
xor
add
add
xchg
mov
clc
jns
imul
pop
xor
add
add
add
add
lret
in
mov
clc
push
clc
push
lea
inc
add
out
fcmove
sub
cmp
add
cmp
dec
test
fucomp
pusha
add
aaa
adc
add
and
jl
outsl
dec
jmp
mov
add
add
clc
dec
icebp
push
add
nop
mov
push
inc
add
cmc
mov
inc
clc
repnz
and
add
inc
add
cmp
xabort
stos
push
xor
clc
inc
clc
sar
push
or
ja
clc
popf
jmp
push
mov
fdivp
into
out
pop
aad
and
add
clc
adc
add
add
clc
push
loopne
mov
inc
clc
cmp
clc
lods
push
int
clc
mov
shr
outsb
xor
add
add
xor
clc
test
in
and
add
inc
add
mov
pop
cmpsl
clc
repnz
push
add
xchg
rorb
sbb
adc
add
cmp
add
data16
pop
into
fbstp
mov
insb
inc
clc
jmp
dec
es
mov
and
add
push
fsubr
cmpsb
clc
cwtl
cs
imul
clc
out
in
aad
mov
add
imul
add
sub
clc
inc
add
cwtl
jnp
clc
test
xchg
test
rcrb
xchg
repz
add
stos
scas
movsb
clc
push
lods
dec
sub
add
mov
add
clc
dec
aad
add
xor
add
push
add
popf
clc
ja
add
clc
cmp
clc
push
add
movsb
clc
dec
inc
clc
xlat
imul
add
cmp
clc
loopne
mov
aas
and
loope
cmp
stos
test
jmp
clc
in
mov
jnp
arpl
add
add
rcll
arpl
add
movsb
clc
fstps
inc
add
pusha
add
cmp
inc
clc
fsubrs
mov
clc
pop
clc
fcomi
lahf
jno
add
dec
sar
test
xor
add
add
sar
sbb
clc
lahf
icebp
cmpsb
clc
push
sar
fdivr
push
xor
add
js
lods
pop
clc
mov
add
scas
fcompl
loope
popf
insl
scas
pop
jle
pop
push
and
add
dec
int
clc
out
mov
add
inc
add
filds
and
add
clc
pop
pop
insb
je
clc
outsl
sbb
cwtl
jae
add
mov
out
push
clc
xchg
xbegin
cmp
xchg
mov
insb
orps
iret
lcall
ja
sub
add
add
rcrb
mov
clc
push
pop
sahf
dec
cmpsb
clc
sub
out
lea
in
int3
cmpsl
clc
sar
add
xchg
js
clc
cmc
out
in
es
test
sar
clc
mov
ret
clc
outsb
js
clc
sub
clc
insb
sbb
add
mov
imulb
scas
xchg
aam
push
clc
outsl
mov
add
and
add
clc
cmp
push
adc
add
clc
push
clc
cmp
inc
add
lock
add
push
add
add
add
add
daa
clc
pop
pop
fwait
push
add
push
clc
sub
clc
out
out
sar
add
ja
add
sar
cmpsl
clc
inc
add
jne
add
aad
sub
add
xor
add
xor
clc
test
es
movsb
clc
mov
cmpsb
clc
mov
mov
mov
push
jae
add
cmp
clc
out
jnp
imull
xor
clc
xor
add
push
inc
add
add
add
add
add
cld
aam
add
xbegin
and
insb
daa
clc
xabort
bound
add
lret
add
add
add
add
cmp
jmp
add
lret
inc
clc
into
shll
jmp
push
add
dec
push
clc
adc
add
add
sub
pcmpgtd
ficoms
add
mov
add
fcmovnbe
lret
xchg
inc
add
push
add
lahf
or
clc
add
clc
xchg
jns
inc
add
outsb
adc
add
push
clc
sbb
clc
inc
add
cmp
stos
jmp
jns
dec
jo
add
clc
je
xchg
inc
add
lahf
inc
add
shr
mov
ljmp
mov
and
add
inc
add
jp
add
and
stos
mov
dec
ja
cmp
mov
xor
add
sub
mov
mov
xchg
mov
sub
clc
inc
add
rorb
add
or
clc
insl
xchg
dec
aad
into
xor
clc
xor
add
dec
enter
cmp
int
sub
clc
lods
movsl
clc
xchg
jns
push
clc
jle
clc
add
mov
xor
add
repz
inc
add
test
loope
cltd
cmp
clc
or
icebp
in
mov
ljmp
adc
add
push
mov
lcall
add
mov
clc
xchg
mov
push
add
ljmp
add
ljmp
mov
push
xor
mov
pop
adc
add
in
into
mov
clc
movhps
ret
clc
test
sbb
push
add
mov
dec
bound
add
test
clc
xchg
fistps
imul
push
stos
jecxz
outsb
jne
clc
cmp
fsubp
clc
scas
mov
clc
sbb
add
xchg
stos
adc
add
clc
or
xchg
xchg
pop
adc
pop
and
clc
jecxz
cmpsb
clc
sarb
clc
mov
add
mov
movsl
clc
pop
jbe
clc
and
add
xbegin
mov
add
std
cmp
clc
inc
clc
adc
add
xor
add
aaa
cmp
add
push
lret
rcr
rclb
addr16
mov
or
add
xor
add
aam
clc
inc
add
test
ds
pop
mov
add
ret
clc
or
dec
cmpsb
clc
dec
sar
fisttps
inc
add
movsl
clc
add
add
adc
add
inc
clc
jl
mov
xchg
xchg
fidivrs
mul
clc
clc
add
mov
arpl
add
xchg
fsubs
clc
jnp
add
sbb
clc
imul
xchg
adc
outsb
test
dec
fmull
and
mov
mov
clc
js
add
jne
add
jo
add
add
mov
clc
loop
mov
xor
add
mov
clc
cmp
clc
mov
std
mov
sbb
clc
fsubrs
outsb
sub
add
push
add
es
or
jne
jne
add
stos
xor
clc
xor
add
xor
add
adc
add
testb
add
in
enter
mov
sbb
loope
movsb
clc
mov
add
add
inc
add
stos
sbb
or
jp
push
add
fwait
sub
add
gs
ljmp
mov
clc
jle
repz
clc
sub
es
and
pushl
sti
xchg
cmp
clc
sbb
pop
xchg
xchg
int3
repnz
jbe
jl
pusha
add
push
dec
xor
add
add
dec
in
cmp
jno
add
test
push
add
out
xchg
dec
pusha
add
inc
clc
fwait
scas
xor
add
and
fidivrs
add
daa
clc
mov
add
imul
inc
add
cmp
add
sub
or
add
jne
adc
add
lcall
add
clc
jp
add
into
cmp
cmp
mov
clc
mov
clc
rcll
push
push
mov
fwait
add
add
dec
ds
inc
clc
push
add
testl
and
add
add
movsb
clc
je
push
icebp
dec
sub
cmp
add
stc
outsb
loop
push
mov
out
inc
clc
jae
add
add
add
rolb
add
mov
cmp
and
add
or
add
outsl
shl
or
clc
mov
add
xchg
sbb
xchg
outsb
jecxz
pushf
test
push
or
add
xchg
inc
add
in
cmp
adc
add
clc
jle
clc
test
je
sti
pop
cmp
add
fs
and
add
je
into
sub
into
jno
add
and
pop
mov
clc
sub
cmp
push
add
add
aas
xchg
jb
add
clc
jnp
ss
add
lret
out
das
cmp
lret
push
add
addr16
push
add
call
clc
adc
add
clc
fs
add
jle
add
push
mov
jb,pt
add
mov
das
mov
pop
clc
repz
mov
clc
dec
jae
add
mov
lcall
and
testl
fdivrl
insb
sar
clc
add
add
insl
cmp
clc
xor
add
ficoml
push
xchg
cmp
add
daa
clc
nop
mov
cmpsb
clc
inc
clc
ds
pop
jnp
cltd
mov
cmp
add
pop
mov
add
clc
inc
clc
cwtl
movsb
clc
push
cmpsb
clc
push
pushf
stos
push
add
test
out
sbb
cwtl
cmp
sahf
push
add
cltd
dec
loopne
jg
add
sub
rorb
mov
es
outsb
popf
adc
xchg
mov
add
jl
clc
or
inc
add
sbb
in
movaps
clc
sahf
jl
bound
add
or
and
add
add
js
jecxz
rcr
stos
das
icebp
sub
jmp
movsl
clc
ficoml
add
clc
sub
fsubrs
mov
sbb
aas
fwait
xchg
or
xchg
jnp
data16
cmp
push
push
add
cs
cmp
add
enter
add
dec
xor
add
add
xabort
cmp
add
add
xor
add
incl
add
push
xor
xor
lret
xor
add
clc
inc
add
dec
and
add
or
add
jp
add
popf
or
add
outsl
sar
ret
clc
mov
pusha
add
cs
scas
test
in
and
fdivrp
movsb
clc
ffreep
clc
div
outsl
sub
ja
add
lret
add
or
add
clc
inc
clc
das
int3
xor
add
add
mov
xchg
sub
clc
and
add
jo
add
nop
outsl
lahf
into
cmp
clc
icebp
pop
fmull
mov
xchg
mov
outsb
and
add
and
add
jno,pt
add
mov
xchg
sar
sub
cs
das
push
mov
push
add
bound
add
add
add
add
sahf
mov
mov
clc
jmp
sub
clc
add
add
clc
pushf
and
add
add
jecxz
mov
sub
lea
add
sahf
and
push
add
jno
add
loopne
sub
sub
jge
clc
xor
add
xbegin
add
add
inc
add
mov
ljmp
jmp
sar
cmpsl
clc
inc
clc
sbb
clc
ljmp
clc
push
fisttps
add
popf
sub
add
mov
movsb
clc
sub
jg
clc
cmp
cwtl
mov
lret
cmpsb
clc
mov
int3
out
add
add
jmp
push
and
add
mov
or
push
add
sahf
mov
mul
clc
imul
clc
dec
adc
add
clc
imul
add
fwait
movsb
clc
mov
add
ss
add
jae
add
bound
add
add
std
out
lret
cmp
ret
clc
inc
add
in
sbb
clc
dec
cmp
xor
add
jns
jge
pop
adc
incl
lret
repz
sub
clc
mov
leave
cmp
push
lret
add
fwait
cld
in
lret
add
add
jecxz
js
add
or
sbb
clc
lock
xor
cs
fisttpl
out
fbstp
dec
mov
mov
jbe
iret
xchg
fnsave
add
lock
cmpsb
clc
cs
dec
push
cmp
clc
test
mov
xchg
add
xlat
push
int3
push
clc
sti
js
aaa
add
cmp
clc
cmpsl
clc
mov
push
add
stos
clc
sbb
add
repz
in
xlat
shll
clc
jnp
inc
add
fisttpl
rolb
adc
add
xor
add
lea
xchg
push
std
xchg
dec
dec
rclb
adc
add
sbb
aad
movsl
clc
push
add
jecxz
sub
loope
jnp
arpl
add
add
mov
call
jbe
add
and
add
add
add
jg
clc
mov
add
rorl
mov
push
add
cmp
clc
jmp
or
or
clc
push
inc
clc
and
cmp
inc
clc
mov
jmp
add
add
add
add
add
add
not
jg
clc
push
out
and
add
and
add
pop
xchg
out
jmp
cmp
test
add
mov
sti
sub
jl
scas
lret
sarl
clc
mov
mov
pop
xchg
test
ret
clc
jb
add
add
push
pop
int3
xchg
stc
jnp
imul
or
pop
cmp
clc
xor
add
mov
scas
popf
or
test
clc
xorps
clc
stos
loopne
movsb
clc
mov
clc
ds
cmpsl
clc
mov
add
xchg
xchg
add
shlb
fidivs
add
mov
add
flds
int3
or
test
add
cltd
xor
add
clc
loop
mov
loopne
fstp
fcmovne
jae
add
imul
add
dec
imul
mov
sar
in
push
popf
pop
xor
add
add
add
add
add
cmp
mov
rcll
push
add
push
jmp
jle
dec
ss
push
ja
cltd
inc
clc
pop
clc
pop
jle
add
ljmp
add
out
xlat
fcmove
popa
add
pop
or
fs
inc
clc
sahf
cmp
and
add
add
clc
enter
fs
dec
movsb
clc
sar
leave
cmpsb
clc
bound
add
xbegin
stc
popf
xabort
dec
jmp
popa
add
and
add
or
lods
lea
mov
and
add
and
add
push
add
mov
leave
mov
repnz
cld
cmp
add
sbb
bound
add
add
or
cld
loope
push
mov
fdivs
add
add
lods
fs
insl
loope
pusha
add
sar
and
add
push
add
jns
clc
lret
inc
add
jmp
push
add
add
add
and
add
add
cmc
cmp
arpl
add
add
pop
mov
add
xor
and
add
das
pop
add
clc
dec
push
mov
or
xor
sbb
clc
lock
add
clc
xor
add
clc
and
add
push
cmc
cmp
sbb
add
mov
xchg
shrl
xchg
pop
jecxz
scas
inc
clc
fmuls
ret
rorl
fadd
clc
push
icebp
xchg
lea
add
cmpsl
clc
adc
add
pop
sub
inc
add
xchg
imul
add
loope
scas
or
lods
clc
int3
push
add
or
cmp
xor
add
push
xor
add
outsb
xchg
imul
cmp
jo
add
adc
add
mov
add
xabort
lcall
bound
add
add
sbb
mov
jae
add
push
adc
add
insb
cltd
bound
add
adc
add
insb
int3
sub
add
outsl
sub
int
lea
imul
pop
mov
push
clc
mov
pop
sbb
xchg
pop
fistl
cmp
clc
mov
dec
cmp
int3
out
push
add
jno
add
and
add
add
dec
data16
adc
add
add
fcomps
inc
add
ss
and
add
add
outsb
xchg
mov
clc
aas
or
mov
pop
scas
sar
add
add
add
cmc
mov
and
jmp
sbb
add
cli
jns
adc
add
fmull
clc
addr16
ljmp
cmp
cltd
add
add
mov
cwtl
pop
sbb
jb
add
sti
repnz
lock
add
jmp
jge
add
ret
clc
movsl
clc
stc
aaa
jp
clc
pop
xor
add
add
mov
xor
add
push
add
nop
scas
jg
dec
pop
ja
clc
outsl
stc
mov
fwait
add
add
mov
add
mov
add
add
add
into
stc
fs
cmp
clc
into
in
int
mov
inc
clc
and
mov
clc
push
push
insb
clc
fisttps
push
jo
add
outsl
insl
out
repz
add
jg
xabort
xchg
mov
icebp
mov
xchg
push
add
clc
repz
jns
sahf
shll
add
clc
in
popa
add
das
cmp
inc
add
mov
add
aam
mov
adc
add
sbb
lcall
sbb
clc
insb
dec
push
repz
inc
add
push
test
lods
push
sbb
clc
add
popa
add
jo
add
sar
cmc
test
adc
add
negl
inc
add
dec
cmp
daa
clc
lcall
cli
push
add
jne
loopne
pop
jo
add
loope
fidivrs
and
add
test
sahf
mov
loopne
fistpl
outsl
jecxz
sbb
clc
data16
mov
or
lahf
add
add
stos
cmp
clc
jge
clc
fs
ja
add
inc
clc
sbb
sbb
clc
daa
clc
adc
add
loop
enter
in
xlat
test
lret
push
add
or
fwait
dec
jmp
dec
popf
xchg
xor
aas
jge
dec
xchg
je
ret
add
inc
clc
icebp
jo
add
and
add
add
add
seto
iret
dec
rorl
mov
addr16
jno
add
add
add
fs
mov
add
into
add
cmp
xchg
js
bound
add
add
xchg
negl
push
ja
out
loope
pop
or
push
clc
and
clc
mov
mov
pop
vsqrtps
add
jge
jne
cwtl
pusha
add
pop
out
jne
in
and
add
sti
or
das
dec
test
inc
add
push
movsb
clc
rorb
jne
clc
test
clc
add
add
xchg
pusha
add
ret
clc
jmp
push
mov
clc
in
pop
repnz
and
jle
pop
es
movsl
clc
stc
dec
mov
shrb
mov
sar
add
loopne
pop
arpl
add
dec
test
inc
clc
mov
clc
scas
sbb
xchg
aam
jge
dec
daa
clc
mov
sub
shrb
add
and
add
add
clc
xchg
ss
add
daa
clc
cmp
add
clc
cli
int
pop
dec
cmp
std
add
push
ss
pop
push
add
ret
clc
out
xchg
std
sahf
loope
xchg
adc
add
in
and
clc
or
jo
add
clc
popf
nop
push
scas
rcll
clc
fildll
pop
clc
pop
jae
add
clc
loopne
xchg
adc
add
pushf
mov
add
adc
add
jns
cli
sar
ret
add
aas
ljmp
add
mov
icebp
xchg
or
add
and
add
add
inc
clc
test
aad
mov
sbb
add
add
add
add
clc
cmc
dec
mov
add
inc
clc
popa
add
in
mov
add
sbb
mov
mov
and
out
mov
clc
jge
mov
jb
add
stc
mov
mov
out
xlat
dec
mov
clc
sbb
clc
aad
clc
mov
bnd
push
lea
add
cmp
push
inc
add
js
and
add
add
jg
inc
clc
adc
clc
ret
clc
mov
gs
hlt
or
sarl
or
add
add
jle
add
and
add
clc
fs
das
push
scas
sti
add
outsl
dec
sbb
sub
clc
movsb
clc
into
test
cltd
mov
clc
sbb
clc
icebp
dec
bound
add
add
ja
clc
cmp
and
add
mov
clc
in
sub
aam
clc
dec
mov
leave
add
add
xchg
push
add
je
or
clc
xchg
push
add
ds
xor
clc
pop
xchg
add
add
add
lcall
call
add
xchg
insl
cmp
je
inc
clc
xlat
adc
sub
mov
or
add
add
and
add
decl
lret
pop
outsl
pop
push
inc
clc
mov
clc
jno
add
int3
int3
push
add
cld
fwait
pop
in
pop
out
xchg
test
jae
add
mov
xor
add
clc
outsb
mov
xchg
or
sub
sti
out
mov
sub
clc
mov
clc
dec
loope
or
and
add
add
lcall
push
cmovne
push
int
add
mov
out
add
into
push
clc
jno
add
das
mov
clc
mov
ret
sub
add
xabort
leave
test
pop
sarl
cmpsb
clc
push
xchg
push
mov
jg
clc
call
xchg
xabort
cmc
sarl
push
add
ss
shl
clc
dec
repnz
clc
bound
add
add
clc
pop
dec
movsb
clc
push
add
add
add
add
dec
xchg
mov
adc
add
dec
lea
add
sti
jge
xbegin
sub
je
mov
add
clc
dec
adc
hlt
fistl
cmp
lods
inc
clc
addr16
sbb
add
lods
sub
bound
add
arpl
add
add
in
mov
in
ljmp
lock
adc
add
dec
sbb
xchg
jb
add
add
sub
push
daa
clc
repnz
clc
pop
pop
clc
int3
jno
add
iret
lock
add
in
sbb
clc
dec
cmp
mov
jbe
or
inc
add
pop
jns
dec
in
jecxz
test
sub
into
push
push
inc
clc
push
add
bound
add
repnz
pusha
add
shll
mov
test
test
jnp
push
jge
iret
add
add
xor
add
test
add
mov
add
xchg
sbb
clc
xchg
cmp
sbb
negb
js
std
cmp
dec
xchg
jle
test
jns
jge
add
adc
mov
clc
jb
add
add
js
mov
test
push
dec
aad
ret
dec
adc
inc
add
mov
add
dec
fistl
in
mov
push
add
clc
adc
clc
aas
sar
cmp
mov
jg
clc
mov
aaa
sbb
insb
mov
lret
mov
movsb
clc
mov
clc
out
adc
add
xchg
xchg
sbb
add
dec
outsl
imul
add
clc
fisubrl
add
sbb
insl
push
and
add
add
adc
add
sub
mov
std
jge
daa
clc
clc
insl
addr16
cmp
xlat
mov
pop
outsl
std
mov
dec
fs
inc
clc
dec
ja
add
push
add
mull
and
add
clc
rolb
add
lret
add
add
dec
stos
scas
sub
out
mov
add
pop
dec
mov
clc
data16
aas
repnz
ljmp
jp
repz
add
fucomip
xchg
shr
mov
mov
and
add
dec
jge
scas
jecxz
data16
mov
sub
add
into
dec
rorl
jg
ret
clc
gs
ret
clc
pop
xchg
gs
loopne
and
add
or
cmp
pop
pop
fmul
xor
inc
add
dec
outsl
inc
clc
jp
adc
add
aam
push
add
ds
clc
insb
test
inc
add
push
clc
inc
add
bnd
and
add
rclb
add
shrl
jb
add
add
add
cltd
imul
clc
cmp
cmp
sub
bound
add
mov
push
or
add
out
sub
out
jp
add
pop
add
add
stc
gs
push
loope
sub
add
lcall
mov
add
fs
mov
clc
adc
add
mov
lea
xchg
sub
pop
cmp
xchg
xor
add
or
add
js
jno
add
in
or
sar
add
cmp
clc
mov
clc
es
dec
icebp
inc
add
mov
cmp
leave
clc
ds
add
add
mov
outsl
jle
clc
cmp
sub
rcrb
push
clc
fadds
jle
add
adc
add
add
popa
add
mov
aaa
inc
add
fdivl
lahf
mov
push
add
sbb
aaa
call
add
mov
add
lock
add
add
add
clc
sbb
test
lahf
push
clc
popa
add
inc
add
add
add
fdivr
pop
test
clc
cld
fidivrs
clc
mov
add
clc
data16
add
add
js
add
out
cmp
or
add
mov
fucomp
push
add
sahf
xchg
mov
add
inc
clc
cwtl
push
clc
cld
push
xor
add
lret
sub
loopne
or
lcall
add
mov
clc
cltd
mov
pop
inc
add
cltd
ss
dec
mov
add
cmp
cld
cli
dec
add
add
je
add
lret
aaa
mov
add
add
xabort
add
and
add
clc
pop
loop
xchg
jb
add
clc
push
push
pop
cmp
clc
jnp
lea
mov
mov
xchg
gs
insl
aas
adc
add
lcall
clc
pop
sar
adc
add
inc
clc
mov
mul
clc
dec
hlt
insb
jnp
dec
insb
in
cmp
cltd
es
cld
push
push
test
es
pop
jo
add
mov
sbb
xor
add
clc
push
aad
add
mov
cmp
insb
push
add
sbb
dec
add
add
add
pop
fimuls
clc
dec
loop
push
cmp
add
lcall
xor
xchg
sbb
sbb
daa
clc
and
add
dec
mov
pop
rolb
clc
push
add
cmp
aam
clc
lods
mov
mov
sub
clc
fimull
mov
aad
hlt
outsl
gs
adc
add
cmp
dec
decb
dec
jg
xchg
lcall
add
scas
xchg
and
add
fdivl
notrack
jl
clc
push
popf
je
addr16
push
es
mov
push
add
xchg
add
clc
lods
xchg
stos
or
add
std
cmp
jo
add
clc
mov
jb
add
in
pop
call
add
clc
stos
ja
push
add
lret
add
pop
stos
cld
cmpsb
clc
adc
add
clc
clc
jp
push
xor
add
add
out
xchg
mov
sbb
std
pop
jns
add
xchg
cs
sub
add
sub
add
std
cld
test
clc
inc
add
mov
inc
clc
mov
pop
fimuls
add
mov
fwait
enter
js
dec
test
clc
mov
mov
daa
clc
xor
add
out
xchg
xor
add
dec
xor
add
add
push
sbb
clc
mov
add
idivb
clc
es
lea
add
cmp
clc
stc
inc
add
or
mov
clc
jg
add
xor
add
add
and
adc
add
jo
add
add
add
adc
pop
or
clc
jb
add
cmp
sarb
sar
or
out
in
cmp
jno
add
mov
or
repnz
clc
aaa
std
out
add
add
add
sahf
jbe
sbb
mov
push
repnz
add
bound
add
insb
jb
add
or
in
mov
cltd
hlt
pusha
add
ljmp
pushf
aaa
imul
pop
clc
push
sbb
out
loop
leave
enter
add
add
jne,pn
add
lret
sub
mov
add
and
clc
popa
add
mov
clc
mov
add
push
pusha
add
std
xor
add
push
clc
and
add
pop
inc
add
mov
rcrl
push
push
cs
outsb
push
add
int
clc
lods
xor
add
add
ret
daa
clc
mov
mov
arpl
add
std
pop
adc
add
mov
add
lods
sbb
add
clc
in
jmp
add
add
pop
lcall
sub
xor
add
cmp
clc
inc
add
xchg
aas
sahf
push
pop
inc
add
je
add
or
jl
pop
cmp
add
pop
jmp
es
pop
clc
mov
xchg
call
data16
push
dec
aas
pushf
cmpsb
clc
repz
add
xchg
jno
add
clc
lret
add
cmp
clc
in
cmp
clc
int
adc
add
pop
in
in
xchg
jl
gs
inc
add
jmp
clc
sub
fcoms
clc
out
loope
jl
sub
aaa
lods
adc
add
gs
add
add
sahf
sahf
pop
lret
inc
clc
ret
clc
mov
add
clc
aam
add
xor
add
add
addr16
mov
add
add
or
cmp
clc
cwtl
arpl
add
add
ja
add
cmpsl
clc
mov
pop
aam
xor
jns
clc
lods
fldl
cmc
and
add
add
add
add
mov
lret
xchg
adc
mov
cmp
adc
add
jno
add
clc
and
add
clc
jmp
sbb
sbb
clc
jle
jnp
xor
add
add
add
dec
lret
add
add
add
test
ds
clc
push
sbb
clc
add
add
push
clc
adc
clc
jmp
cld
mov
clc
int3
cwtl
cmp
clc
addr16
pop
aam
clc
loop
mov
add
popf
popf
imul
inc
clc
push
gs
sub
or
push
add
push
add
clc
test
in
jo
add
fidivl
ja
xabort
add
and
add
pop
fcmovne
mov
data16
adc
aas
pusha
add
cmc
imul
lods
sbb
sbb
into
js
sbb
mov
clc
stc
mov
clc
xchg
and
add
jecxz
lods
mov
testl
add
add
mov
xchg
aaa
xor
xchg
aad
sarb
ljmp
lret
cmp
call
sub
clc
out
xbegin
clc
adc
add
fdivp
xor
add
add
sbb
inc
add
cmp
add
add
add
jae
add
add
add
sub
das
inc
add
cld
push
stos
data16
mov
cs
or
add
clc
leave
das
mov
mov
sar
push
dec
mov
mov
add
clc
cmp
add
xchg
inc
clc
jnp
mov
add
jg
add
leave
inc
clc
mov
pop
addr16
jle
mov
clc
cmp
cmp
outsl
push
push
sub
add
out
fcmovnbe
push
add
fs
mov
clc
add
add
add
add
pop
clc
cmovp
popa
add
add
add
dec
mov
push
fucomp
cmpsl
clc
sbb
add
add
fldenv
add
cmovs
sbb
or
dec
xor
add
inc
add
fistpl
xor
cltd
pop
lea
clc
testl
add
aas
cmp
add
xlat
leave
lret
dec
ds
add
xor
add
add
loop
dec
cmc
sar
clc
and
add
add
popf
xbegin
movsl
clc
xchg
mov
sub
sub
clc
int
add
hlt
stos
cmpsb
clc
mov
push
hlt
dec
popf
push
clc
lods
cld
sbb
or
add
jl
sub
clc
cmc
lret
in
add
add
jne
push
lcall
mov
cld
pop
mov
cmp
inc
add
cmp
push
add
adc
add
leave
int3
mov
pop
adc
add
add
add
dec
imul
mov
clc
and
add
cmp
imull
clc
lret
push
addr16
jnp
cld
cli
inc
add
and
add
or
scas
adc
add
add
add
out
cltd
test
jo
add
lods
xchg
push
dec
sub
cmpsb
clc
cmp
clc
cwtl
mov
clc
insb
ss
clc
add
add
xor
add
add
outsl
push
xor
add
add
push
add
cmc
mov
lock
jo
add
cld
outsl
leave
mov
sub
leave
outsb
mov
aad
call
add
jl
clc
insb
jo
add
add
push
jbe
aas
cmpxchg
clc
xor
cmp
clc
ss
add
lods
movsb
clc
rol
clc
scas
iret
xor
push
inc
add
mov
add
mov
loopne
flds
clc
sbb
add
das
ljmp
ret
clc
lods
mov
add
iret
sbb
add
mov
pusha
add
sar
jae
add
ja
sub
mov
insb
dec
popa
add
push
add
push
loopne
cltd
std
lods
aaa
mov
sub
xchg
cld
pop
cmp
inc
clc
lods
fdivrl
inc
clc
aam
cmc
repz
mov
clc
jo
add
test
jp
dec
jbe
ret
add
in
or
mov
add
add
and
add
add
mov
filds
add
adc
add
or
add
lret
cs
jmp
jmp
aad
fidivs
dec
adc
add
push
add
add
xor
add
clc
lods
movsb
clc
xor
add
add
fsubr
cmpsl
clc
sbb
std
adc
add
add
push
push
loope
pop
adc
add
lods
int3
sar
clc
enter
xchg
hlt
in
sbb
clc
xchg
lcall
clc
adc
add
add
pusha
add
xor
add
aad
push
mov
clc
inc
clc
lret
jmp
inc
clc
jne
cmp
loop
stos
sub
or
imul
or
clc
scas
jno
add
int3
stos
jmp
movsl
clc
mov
add
loop
pop
cmp
inc
add
pop
aas
std
push
or
push
dec
jne
cli
mov
enter
add
jp
mov
add
scas
mov
or
xchg
mov
add
in
sbb
xchg
aad
enter
push
inc
add
and
add
fwait
nop
sub
clc
jnp
xor
cmpsl
clc
xor
add
rcrl
clc
xbegin
out
imul
mov
jl
stos
dec
ret
mov
cwtl
maskmovq
stos
sub
add
sbb
pop
cmp
xor
add
clc
mov
cmpsb
clc
sti
pushf
mov
mov
push
scas
jmp
enter
cmc
mov
pop
add
add
push
mov
add
incb
add
dec
push
mov
inc
clc
xchg
mov
clc
pushf
push
and
push
sub
pop
and
add
insl
adc
add
std
fcmovnbe
or
add
sti
ret
cli
xlat
push
dec
bound
add
adc
add
fs
in
imul
add
cmp
mov
clc
add
add
int
sub
jno
add
inc
clc
clc
xor
add
clc
in
cltd
and
add
clc
lret
add
fisttpll
icebp
popf
pop
clc
es
xchg
add
add
add
fisubs
add
add
test
push
imul
push
jp
lahf
scas
sar
lret
jge
xor
add
sbb
or
or
insb
lock
add
das
xor
add
sub
cltd
imul
clc
sub
je
jno
add
out
sub
add
or
clc
ljmp
imul
jb
add
clc
xor
add
mov
add
jne
sub
ret
cwtl
mov
jae
add
lea
insl
test
or
rcl
sti
stos
pop
adc
push
test
pop
loope
push
js
sub
clc
inc
clc
sar
insl
mov
inc
clc
dec
jno
add
add
mov
pushl
add
clc
lret
add
sub
fistl
add
mov
lret
jl
add
adc
add
pusha
add
or
ss
clc
inc
clc
dec
in
inc
clc
loopne
cmp
loope
fstp
dec
cmp
add
pop
test
pop
aam
mov
clc
pop
shl
inc
clc
pop
lret
push
and
or
mov
add
add
add
mov
push
clc
sub
jp
mov
push
push
clc
sub
add
inc
add
inc
clc
fdivp
xchg
imul
xchg
xchg
jae
add
clc
inc
clc
shll
clc
push
mov
mov
setae
add
mov
ret
clc
loope
mov
jnp
add
inc
add
ljmp
pop
nop
and
and
add
imul
add
leave
repnz
clc
es
jb
add
xchg
pop
fs
cmp
jnp
add
repnz
inc
add
cmp
sbb
clc
jns
add
jecxz
adc
mov
clc
lret
xchg
sbb
clc
pusha
add
adc
add
dec
jmp
popa
add
jae
add
icebp
cmp
nop
lret
mov
test
sar
adc
add
lock
xchg
es
sar
push
je
clc
nop
pop
xchg
or
imul
clc
add
add
add
sahf
out
inc
clc
jg
add
enter
clc
lret
inc
add
xchg
xchg
mov
clc
fdiv
xchg
inc
clc
dec
adc
add
pop
pop
gs
xchg
stc
mov
scas
mov
add
push
cmp
clc
inc
clc
call
cmpsl
clc
xlat
lods
sbb
mov
insl
dec
add
frstor
and
add
dec
shr
shrl
mov
fsubp
clc
fsubrl
clc
int3
dec
adc
add
add
lret
jge
lods
mov
mov
lock
mov
bound
add
ljmp
jmp
clc
cmp
cltd
sar
outsl
pushf
test
jae
add
ss
sbb
pop
and
add
jle
add
xchg
stc
cmpsl
clc
std
loop
adc
add
movsb
clc
push
mov
add
clc
adc
add
cmp
outsl
into
cltd
test
lret
mov
add
stos
lock
mov
clc
mov
sub
inc
add
cmp
sub
adc
add
lret
addr16
hlt
xchg
call
mov
and
push
mov
arpl
add
clc
leave
clc
pop
adc
add
dec
xor
add
clc
stos
inc
clc
inc
add
mov
inc
add
xor
add
add
clc
xchg
and
cmp
push
mov
clc
test
fwait
cli
pop
popl
add
xchg
pop
aad
sbb
jmp
dec
jae
add
add
clc
lods
dec
push
mov
jmp
adc
add
inc
clc
pop
pop
mov
lcall
test
popf
aas
xchg
mov
pop
dec
push
jo
add
add
mov
mov
clc
pop
lods
iret
or
add
jns
add
and
add
clc
and
add
add
nop
mov
das
and
add
cld
xchg
xor
test
sbb
add
xabort
sub
in
xor
bound
add
jae
add
clc
aam
inc
add
lahf
jmp
aas
lods
mov
ret
clc
sbb
clc
and
add
xchg
dec
jmp
arpl
add
mulb
add
sub
clc
ret
xchg
adc
add
sahf
stos
push
add
jbe
das
int3
std
rep
mov
xor
add
cld
js
push
adc
add
add
and
addr16
aaa
scas
bound
add
cmp
sahf
pop
and
add
pop
das
xchg
cmc
clc
fdivs
cwtl
in
xabort
shll
add
ds
out
xor
add
add
inc
add
or
clc
cmp
pop
pushf
inc
clc
jmp
jmp
add
jge
clc
mov
daa
clc
das
xor
add
aad
clc
test
call
data16
xor
add
clc
sar
clc
sbb
add
clc
push
mov
add
add
add
add
add
fidivs
add
clc
pop
inc
add
es
cld
sub
push
push
add
sub
mov
or
mov
stos
mov
out
xchg
lret
lods
mov
shrb
clc
out
pusha
add
fs
test
xchg
ljmp
xchg
outsl
daa
clc
inc
add
insb
mov
sar
clc
lock
mulb
clc
cmpsl
clc
out
or
add
mov
xor
add
clc
push
out
push
cmp
add
pop
mov
and
adc
add
add
add
int3
movsl
clc
jbe
add
adc
push
fimull
ficomps
or
and
pop
mov
cmp
add
push
fxch
cmc
cld
scas
and
add
aam
es
xor
push
add
push
and
add
add
add
add
add
ss
xchg
cmp
inc
add
shrl
inc
clc
xchg
inc
add
xlat
cmp
inc
clc
bswap
int
or
int3
sub
jle
jae
add
add
mov
cld
mov
add
add
inc
add
clc
inc
clc
dec
add
push
add
or
add
cli
insb
mov
clc
jmp
movsl
clc
pop
xchg
imul
mov
cmp
add
and
add
ret
ficoml
rorb
bound
add
and
add
repnz
repnz
loop
lahf
pushf
imul
pop
mov
push
sub
cs
push
add
inc
clc
ftst
clc
cmp
add
in
icebp
jbe
add
cmp
add
adc
add
clc
add
add
push
add
in
push
add
enter
movsb
clc
sbb
dec
sar
add
ds
mov
in
push
add
xchg
jge
scas
filds
clc
sar
adc
sbb
clc
push
add
repnz
insl
xbegin
add
scas
loopne
fwait
xor
add
rclb
add
add
test
sar
sahf
sti
insl
inc
clc
ds
divl
pop
clc
icebp
fstps
add
push
clc
or
movsb
clc
and
add
scas
pop
clc
std
jae
add
fisubrl
push
stc
jae,pn
add
add
jge
dec
push
clc
cmpsl
clc
jne
and
add
aam
sti
and
add
add
cmp
push
scas
xor
sub
add
aam
and
scas
sub
add
add
add
xor
add
daa
clc
mov
stos
push
add
cs
sahf
mov
add
es
or
clc
add
fs
lock
fidivrs
clc
addr16
loop
adc
jge
jl
lcall
push
add
dec
mov
notl
rcll
add
fs
aad
xor
fwait
popa
add
dec
stos
mov
push
mov
clc
outsb
movsl
clc
sar
loope
fs
sbb
sar
add
jp
add
pop
cmpsl
clc
jno
add
paddusw
add
and
add
add
out
stos
data16
in
cmp
lret
shlb
clc
xchg
mov
sbb
clc
adc
add
xor
add
mov
or
clc
mov
push
add
xor
add
add
add
add
test
clc
fcoml
add
data16
icebp
sbb
xbegin
imul
sub
cmc
inc
add
lods
add
add
jns
mov
add
add
in
lods
cmpsl
clc
add
add
mov
mov
add
dec
shll
xor
add
clc
mov
clc
cli
add
push
add
mov
xchg
mov
or
clc
xlat
das
fldenv
clc
lods
xor
add
mov
fdivrs
ss
dec
adc
add
add
pop
mov
ud0
movsl
clc
dec
and
in
iret
cmp
inc
add
loopne
jge
stos
xor
cmpsl
clc
jle
xchg
cmp
add
imul
clc
out
loope
or
clc
in
movsb
clc
push
add
cmc
clc
shlb
add
push
fnstsw
clc
sbb
hlt
outsl
lcall
pop
clc
fimull
stc
jecxz
outsb
add
jns
jl
xor
add
ljmp
push
add
out
jg
mov
and
add
js
dec
dec
in
imull
popf
je
clc
cmp
in
sbb
fcmovnbe
flds
add
arpl
add
clc
jne
xor
out
inc
add
cmp
xor
add
jne
xor
add
aaa
stos
xabort
clc
jbe
adc
add
inc
add
adc
add
clc
clc
rcl
xchg
mov
mov
xor
add
xor
add
pusha
add
mov
stos
mov
push
mov
add
xchg
daa
clc
or
add
mov
mov
mov
dec
jae
add
ret
stc
lret
clc
popa
add
mov
int
movsb
clc
push
mov
ja
in
xabort
add
movsl
clc
and
fidivs
jp
lock
sar
sbb
dec
or
testb
clc
xlat
daa
clc
lea
into
ss
cld
xchg
jle
lret
ljmp
test
in
fwait
and
mov
clc
mov
add
into
test
jae
add
add
fwait
jno
add
or
hlt
pop
clc
jns
clc
or
cmpsb
clc
das
mov
mov
clc
xor
add
bound
add
sarl
cli
mov
loope
gs
xabort
adc
add
cmp
sahf
test
rcl
jmp
data16
sub
sar
clc
xchg
fimull
mov
mov
sti
jp
out
push
stos
ja
cmp
clc
cmp
add
jecxz
cmp
or
mov
movsl
clc
call
add
lret
add
or
jnp
clc
dec
jns
shlb
cltd
adc
add
clc
inc
clc
out
movsb
clc
ja
add
addr16
cmp
popf
insb
jae
add
clc
push
add
jbe
adc
add
pop
ffree
clc
mov
clc
jge
loope
pop
clc
test
fsubs
es
add
add
add
mov
add
hlt
bound
add
and
add
add
add
ljmp
clc
test
inc
add
push
call
into
pop
xchg
xor
add
shll
clc
rcrb
add
and
add
sub
outsb
nop
sar
xchg
imul
mov
add
add
clc
or
clc
xchg
stos
pop
pop
pop
clc
shlb
add
clc
lods
xor
add
clc
ficomps
mov
mov
add
dec
and
gs
mov
xchg
inc
clc
push
clc
out
or
add
data16
test
repnz
jle
pop
clc
cmpsb
clc
out
hlt
sub
add
adc
add
clc
push
add
dec
mov
add
pusha
add
insb
mov
jae
add
add
xchg
sub
clc
shll
add
sub
add
adc
add
popa
add
dec
jecxz
or
clc
pusha
add
fs
loope
lock
add
add
mov
mov
add
sub
dec
pop
lcall
add
mov
jbe
adc
add
add
jae
add
dec
popf
arpl
add
add
pop
clc
jp
add
add
add
clc
aaa
jnp
mov
clc
cmp
mov
mov
clc
aam
xchg
cmp
xchg
jle
dec
call
cmp
add
leave
fwait
and
add
xchg
ljmp
sub
clc
out
loop
ret
clc
jle
scas
loopne
mov
mov
add
or
inc
add
xchg
jmp
add
add
add
rorl
clc
addr16
gs
add
add
pop
push
xchg
inc
add
cmpsl
clc
xor
add
jecxz
sti
add
add
add
pop
xor
add
vzeroupper
fbld
lcall
add
clc
aam
jns
clc
aas
mov
ljmp
aaa
fldl2t
sbb
insb
push
inc
clc
cmp
clc
pop
in
cmp
sub
or
clc
lahf
xchg
popf
daa
clc
jns
add
add
add
sar
add
mov
test
clc
push
add
dec
imul
mov
inc
add
and
add
clc
jb
add
add
xor
add
mov
bound
add
clc
inc
add
mov
clc
es
aaa
hlt
lahf
mov
add
add
arpl
add
jl
add
add
add
cmp
in
shr
jp
add
jmp
clc
clc
mov
mov
and
add
mov
loop
and
add
pop
dec
stos
ret
pop
fiadds
add
out
fcmovnu
clc
gs
mov
scas
cmp
clc
call
add
test
clc
sub
clc
jae
add
clc
sbb
dec
inc
clc
test
clc
push
xchg
xor
add
clc
cwtl
je
out
xchg
sti
pusha
add
enter
ljmp
mov
clc
gs
mov
mull
popf
jo
add
add
adc
add
xchg
xor
add
enter
stos
sti
addr16
sbb
mov
add
ljmp
adc
add
loope
mov
clc
js
mov
cwtl
mov
std
xor
add
sub
clc
push
or
cli
lcall
out
jb
add
clc
sahf
pop
pushf
inc
add
and
add
add
sbb
mov
and
add
xabort
mov
cmp
sarb
add
test
push
jae
add
push
push
add
add
sbb
iret
dec
cwtl
xchg
jp
mov
add
dec
mov
test
sub
mov
inc
clc
pop
scas
or
movsb
clc
adc
add
cmp
add
cmc
int
dec
sbb
hlt
ret
clc
aam
sub
inc
add
mov
test
clc
pop
or
clc
insb
xor
rcll
add
fisttpll
inc
clc
cltd
arpl
add
mov
pop
jne
aas
mov
add
push
mov
mov
in
pop
xor
add
mov
clc
addr16
or
in
jnp
clc
int
movsl
clc
insl
push
mov
mov
clc
lahf
cmp
add
push
clc
cmp
outsl
sbb
add
mov
push
cmp
cmp
clc
sbb
inc
add
cmp
cld
and
add
add
or
clc
sti
push
add
jmp
repnz
sub
daa
clc
adc
add
mov
cmp
inc
add
in
lea
into
movsl
clc
cmp
pop
lea
test
mov
mov
cmp
roll
cmpsl
clc
cltd
aaa
mov
rcrl
add
xchg
sub
xor
cmp
clc
aaa
outsb
jbe
xchg
inc
add
push
repz
or
and
add
clc
lret
and
add
clc
clc
scas
mov
mov
out
mov
add
ds
jle
gs
notb
clc
push
clc
dec
fldl
xbegin
adc
clc
xchg
xlat
ss
mov
add
in
fs
inc
clc
addr16
fisubrs
ret
stos
jge
add
xor
test
or
ret
clc
xchg
insl
in
int3
pop
insb
aaa
lcall
lret
je
dec
popa
add
dec
cmpsl
clc
fstpt
push
in
pop
push
arpl
add
add
cmpsb
clc
mov
rcl
into
popf
xchg
or
xbegin
mov
dec
cli
mov
mov
sar
clc
mov
std
int3
dec
and
add
add
add
adc
add
add
add
dec
mov
xchg
push
jno
add
aad
add
and
push
add
int3
adc
add
add
mov
sti
jecxz
lods
xor
add
xbegin
add
std
out
shll
clc
lcall
repz
insb
call
add
add
lods
out
sbb
cmp
clc
jle
cmp
add
add
add
daa
clc
jb
add
mov
or
ds
loop
test
push
add
aad
clc
jo
add
clc
mov
inc
clc
movsb
clc
jecxz
int
sar
add
xor
movsl
clc
iret
mov
add
add
ret
clc
sub
sbb
push
loope
cs
fstpt
clc
xchg
in
enter
add
movsb
clc
and
push
add
sar
sar
add
xchg
insb
dec
cmp
clc
adc
add
mov
xchg
adc
add
add
mov
in
negb
add
imul
xchg
shrb
clc
imul
sar
push
sar
sub
xchg
pop
xabort
es
sbb
clc
clc
inc
clc
cld
nop
popf
push
add
bound
add
clc
into
test
bound
add
add
enter
jecxz
pop
clc
inc
add
hlt
add
fbstp
add
loope
cmp
ret
clc
push
ljmp
mov
add
clc
push
add
scas
pop
jg
clc
das
or
clc
into
or
add
lods
sbb
jg
clc
mov
in
fs
jmp
add
pop
jp
clc
pusha
add
es
scas
aas
push
add
add
outsl
cltd
movsl
clc
xor
add
add
clc
push
sarb
rclb
in
push
add
mov
js
inc
add
fildll
xchg
cmpsb
clc
sbb
jno
add
add
xchg
cmp
mov
scas
inc
add
sub
dec
lret
cltd
xchg
insl
stc
xchg
movsb
clc
and
add
out
sub
sbb
jnp
push
xchg
ret
clc
movsb
clc
or
mov
add
push
xchg
xor
hlt
adc
add
add
add
clc
mov
sub
clc
fisttps
pusha
add
arpl
add
add
jge
add
inc
add
clc
test
and
cmp
clc
sub
cmpsl
clc
jl
add
shll
xbegin
sub
push
add
popa
add
pop
leave
inc
clc
adc
add
cltd
cltd
icebp
pop
cmp
iret
dec
or
clc
jg
loope
adc
add
add
clc
jl
sub
add
aam
add
pop
inc
clc
mov
add
add
mov
in
int
mov
clc
into
aad
inc
clc
lcall
push
enter
jnp
out
pop
add
add
sub
add
mov
add
inc
clc
jbe
lret
fbld
xchg
adc
push
add
clc
je
pop
ja
insl
aad
dec
lcall
clc
leave
mov
daa
clc
repz
add
add
incb
add
xchg
int3
mov
clc
sbb
pushf
dec
or
mov
mov
clc
insb
divl
add
mov
cmc
mov
sbb
ljmp
push
add
jb
add
add
and
add
out
ljmp
clc
loop
inc
clc
popa
add
pop
es
cmp
xor
clc
and
add
add
sub
inc
add
out
lcall
fcoml
push
sub
test
ficompl
dec
insb
lock
inc
add
int3
push
inc
add
push
jbe
clc
in
and
add
sbb
mov
add
sbb
popf
jns
clc
mov
jns
clc
or
sbb
clc
stos
adc
add
xchg
in
sbb
add
adc
push
fcmovnu
mov
add
mov
add
lods
cmp
or
call
cmp
add
or
mov
dec
in
aam
sbb
push
mov
push
clc
mov
mov
outsb
xabort
lea
add
cmc
jae
add
call
add
test
nop
jns
cld
sbb
add
xor
clc
pop
mov
jmp
loop
pop
int
mov
clc
cmp
loope
xlat
cmp
popf
bound
add
add
push
clc
mov
dec
adc
add
clc
push
data16
fs
aam
out
ja
jl
clc
call
repz
add
outsb
dec
jnp
clc
int
and
add
add
outsl
dec
lret
add
add
sbb
add
cmpsl
clc
clc
cld
sbb
add
jecxz
xchg
mov
test
push
test
data16
into
ja
clc
mov
add
inc
clc
dec
mov
sbb
clc
pop
hlt
cli
cli
popf
sub
pop
lahf
popf
cmp
clc
aaa
out
xlat
dec
jle
clc
dec
dec
imul
clc
push
dec
inc
add
cli
scas
adc
add
push
add
int3
cmp
sub
push
add
mov
in
bound
add
clc
sbb
clc
clc
mov
clc
sub
cmp
popa
add
mov
movsb
clc
cmc
or
mov
sar
dec
inc
add
sti
and
add
lea
outsl
add
add
add
lods
lret
dec
push
sar
pop
or
mov
clc
ss
clc
mov
add
cli
in
mov
lods
scas
xchg
push
or
add
sub
mov
or
loop
jae
add
adc
add
icebp
gs
jecxz
movsb
clc
mov
mov
jl
add
decb
loopne
add
add
clc
sub
sbb
icebp
add
add
add
clc
repnz
mov
mov
jnp
add
mov
fldt
add
loop
mov
je
ret
clc
shlb
ficoml
xchg
in
lock
clc
add
add
mov
add
and
mov
data16
fwait
sub
test
mov
add
test
push
popf
or
cmp
call
aas
add
add
add
clc
sti
xor
ljmp
add
and
lahf
lock
mov
clc
mov
add
add
clc
xchg
test
clc
pop
or
jmp
cli
aad
movsl
clc
decl
adc
push
add
adc
add
xor
add
clc
xor
add
leave
pop
or
clc
pop
addr16
add
pop
sbb
in
sbb
mov
and
add
cmp
test
movsl
clc
push
daa
clc
mov
or
clc
pop
push
mov
xchg
inc
add
icebp
xbegin
cmp
in
inc
add
sar
push
add
jmp
clc
sbb
cmpsl
clc
into
mov
lock
adc
or
call
cs
es
out
mov
pop
jg
loopne
adc
add
sbb
cmp
clc
fwait
movsl
clc
jl
mov
stos
jbe
clc
sbb
push
pop
fs
inc
clc
cli
push
fcompl
add
xor
add
and
add
add
xchg
fs
xor
add
jge
clc
enter
add
add
push
aaa
insb
or
add
cmp
clc
push
mov
pop
ds
jb
add
jecxz
mov
clc
dec
out
lret
sbb
clc
pop
sti
inc
clc
movsl
clc
ljmp
add
cltd
cwtl
cmp
add
push
add
add
mov
add
add
mov
aad
clc
adc
add
add
test
fdivr
pusha
add
jns
flds
clc
xor
clc
into
mov
clc
movsl
clc
jns
movsl
clc
jbe
mov
cli
lret
int
or
add
pop
test
add
jne
or
xor
add
aam
clc
adc
add
or
add
enter
clc
fbld
push
mov
clc
push
add
xor
add
clc
sar
xabort
test
nop
out
xor
add
add
cs
into
cmp
mov
clc
push
add
faddl
clc
daa
clc
sahf
add
add
clc
cs
adc
add
hlt
adc
add
in
loop
cmpsb
clc
cmp
clc
fwait
imul
pop
lret
mov
add
mov
xchg
and
mov
rcrl
ljmp
insl
gs
in
cwtl
mov
out
mov
add
pop
xor
popa
add
cmp
clc
inc
clc
negb
fists
clc
mov
clc
movsl
clc
addr16
push
clc
sbb
fwait
push
add
cli
mov
test
aam
sar
lahf
jg
mov
clc
mov
push
cmp
add
mov
hlt
int
clc
adc
add
clc
mov
or
push
jae
add
gs
cld
mov
sub
clc
or
jge
inc
clc
ret
clc
lcall
mov
addr16
lahf
add
add
add
mov
add
add
addr16
hlt
dec
jo,pn
add
fdivrl
dec
add
add
pop
add
add
add
xchg
es
fdivs
add
lret
push
add
cmp
add
and
sbb
add
in
or
sbb
ja
add
jle
push
dec
in
mov
mov
or
int
lret
add
mov
loopne
repz
add
lahf
inc
add
jne
dec
out
lods
and
add
add
clc
call
in
dec
nop
mov
negl
sub
inc
add
add
add
xchg
pop
jl
lea
ja
and
add
add
jle
add
test
jecxz
cmp
mov
cmp
dec
mov
mov
add
add
clc
cmc
or
pop
clc
xor
add
js
add
cmpsb
clc
leave
jge
repnz
out
mov
or
sbb
cmp
scas
data16
dec
pop
jecxz
pop
xchg
xchg
push
xchg
push
add
shrb
mov
add
cmp
mov
clc
ss
mov
or
add
add
mov
mov
add
add
cmp
add
xor
add
insb
jnp
cmpsl
clc
mov
clc
add
xchg
imul
inc
add
aad
clc
jp
xbegin
pusha
add
movsb
clc
inc
clc
push
add
mov
icebp
in
push
int3
mov
clc
dec
sbb
inc
add
dec
roll
add
push
add
pop
push
add
or
add
inc
clc
dec
lret
push
or
pop
lock
out
int
clc
mov
mov
stos
cmp
add
sahf
or
clc
and
add
add
fmuls
add
clc
or
ret
clc
imulb
sbb
dec
jno
add
or
out
int
add
scas
adc
jo
add
add
test
fstpl
and
add
imul
inc
clc
add
add
clc
dec
aad
add
mov
add
add
aad
ffree
clc
add
add
sarl
mov
pop
or
repz
mov
clc
scas
aaa
out
ds
clc
out
imul
or
pop
clc
dec
addr16
inc
add
aam
clc
cmp
xor
add
rcrl
sar
imul
clc
popa
add
xchg
nop
sbb
enter
int
add
popa
add
cli
and
add
das
mov
insl
repnz
loop
ds
xor
add
pushf
cmp
cmp
push
mull
add
xchg
icebp
mov
movsl
clc
jecxz
dec
or
mov
jmp
pop
jb
add
clc
int3
push
jnp
mov
push
xor
add
lea
jae
add
mov
add
fistpll
add
test
int
aas
mov
cld
decl
mov
clc
dec
jecxz
inc
add
sar
adc
adc
add
add
stos
movsl
clc
pop
sub
mov
addr16
cmp
clc
jl
clc
mov
jno
add
add
movsb
clc
cmp
jl
push
pop
movsl
clc
lock
add
loop
xlat
je
clc
paddsb
add
push
aad
cmp
add
lret
and
add
repnz
add
xbegin
ds
call
clc
inc
add
rcl
xor
cmp
clc
mov
mov
and
add
add
push
shll
add
or
add
mov
pop
inc
clc
ds
add
xor
add
fbld
xor
xlat
inc
add
cltd
push
add
or
clc
xor
clc
fucomip
je
xor
movsb
clc
jns
jae
add
add
aaa
leave
mov
pop
int
sbb
incl
add
cmp
pop
jns
imul
add
cmp
clc
cmp
insl
imul
loop
inc
add
sbb
add
hlt
push
jmp
add
xchg
pop
adc
add
clc
push
loopne
add
add
add
xchg
sahf
push
mov
inc
add
std
mov
rcrb
sbb
clc
push
add
add
add
mov
outsb
add
add
xor
add
stc
sub
pop
stos
mov
add
bnd
out
or
push
add
lcall
rcll
add
mov
lahf
pop
fsubl
add
pop
inc
add
in
push
add
push
add
ret
inc
add
gs
jbe
add
cli
lods
push
fnclex
clc
scas
movsb
clc
cmp
movsl
clc
mov
add
pavgw
mov
xor
push
clc
iret
push
add
roll
jbe
push
fucomip
div
cwtl
dec
adc
push
add
insb
sbb
clc
mov
mov
lods
shrd
adc
add
cmpsl
clc
push
cmp
add
add
dec
mov
pop
testb
lods
push
enter
in
mov
out
in
xchg
call
clc
pop
jne
nop
clc
jae
add
clc
xchg
lcall
cmpsb
clc
fbld
mov
clc
xchg
jns
clc
test
adc
or
pop
and
out
mov
add
outsb
pop
push
add
pop
clc
cmp
clc
into
and
add
add
jle
jp
sbb
jle
or
clc
popa
add
dec
fldenv
add
lods
cs
push
popa
add
xchg
and
add
cmpsb
clc
mov
data16
push
ja
bound
add
clc
add
aas
jmp
cltd
pushf
cmp
clc
stos
test
xor
add
and
add
add
lea
clc
scas
clc
sub
clc
adc
add
jmp
clc
aaa
mov
clc
popa
add
jg
cmc
xchg
out
xchg
xsave
add
jge
clc
dec
bound
add
add
pop
rorb
clc
mov
inc
clc
mov
mov
sbb
add
xchg
ljmp
in
movsb
clc
adc
add
clc
repz
mov
jp
xbegin
mov
stos
mov
add
mov
cmp
pop
scas
dec
adc
add
add
add
loop
fisubs
xor
add
clc
sahf
aas
iret
data16
filds
add
clc
adc
add
add
aas
stc
filds
add
add
xbegin
clc
ds
add
fildll
add
add
add
add
cld
xor
add
jle
clc
fmul
inc
add
xchg
or
enter
clc
int
fmul
mov
xchg
mov
add
clc
in
or
clc
stos
das
pop
mov
push
add
es
pop
xlat
ror
mov
clc
rcrb
loop
add
pop
and
add
hlt
adc
push
ds
cwtl
mov
mov
add
int3
mov
dec
push
ss
roll
aas
sbb
fists
add
ds
lods
movsl
clc
sahf
dec
mov
sub
clc
mov
sub
jo
add
add
pop
jg
cmc
cmp
mov
pop
xchg
mov
fsubr
repz
adc
add
pop
fwait
stc
or
ret
clc
lock
cmp
clc
inc
clc
push
add
int
clc
dec
dec
imul
clc
cmpsb
clc
fsubrl
mov
add
add
ss
clc
addr16
jno
add
dec
js
dec
je
clc
xchg
enter
add
movsl
clc
scas
daa
clc
mov
push
add
mov
clc
mov
sbb
scas
xor
mov
push
inc
add
push
js
cmp
and
mov
ret
clc
sar
or
clc
push
mov
fstpt
mov
or
pop
xchg
xor
add
in
mov
mov
add
push
push
in
sti
jo
add
leave
sar
pop
cmp
add
cmc
mov
xor
pop
mov
xor
add
add
mov
clc
sbb
leave
jle
add
xchg
jb
add
arpl
add
add
add
inc
add
in
xor
gs
notb
add
mov
pop
and
add
add
pop
gs
fmull
pop
fucom
clc
lret
cmpsl
clc
mov
add
cli
sub
add
add
fiaddl
push
popf
xchg
cmp
add
push
clc
dec
push
cmp
inc
clc
xchg
and
add
mov
ds
and
add
repnz
mov
push
sahf
cmp
clc
clc
push
or
clc
int
clc
scas
sbb
add
outsb
pop
clc
push
add
shlb
add
negb
bound
add
add
clc
and
add
addr16
jge
clc
mov
nop
jns
add
add
add
loopne
push
push
or
cmp
push
in
fmuls
pop
fidivrl
add
add
add
fwait
inc
add
divl
add
imul
add
clc
cmpsl
clc
pop
loope
cltd
cld
inc
add
repnz
push
add
or
inc
add
out
xor
cmpsl
clc
gs
cmpsl
clc
dec
xchg
adc
add
sub
xabort
or
pop
repnz
clc
inc
add
push
or
mov
dec
adc
add
scas
out
cmp
fnstsw
repz
pop
pop
mov
movsl
clc
pop
clc
aas
or
clc
xchg
adc
clc
or
sub
lods
push
add
ret
add
clc
out
mov
fisubrs
jne
cmpsb
clc
push
clc
mov
mov
out
jno
add
pcmpgtw
push
cmp
add
sarl
xor
add
add
clc
xor
add
add
push
add
adc
add
clc
adc
add
mov
sbb
mov
clc
mov
push
add
mov
jmp
insl
pop
cmc
ljmp
cltd
mov
add
add
testl
jnp
pusha
add
insl
mov
pusha
add
jns
clc
lahf
xchg
or
sbb
gs
jmp
add
push
test
lods
hlt
es
xchg
pop
clc
lahf
cmp
rclb
sub
clc
loop
xchg
jbe
fsubr
in
dec
lahf
das
iret
out
aad
cmp
cmp
loope
mov
pop
dec
mov
shll
add
add
add
xchg
into
push
clc
sahf
cmp
and
add
clc
shl
clc
mov
jmp
lea
jg
dec
clc
cmpsb
clc
jno
add
inc
add
das
mov
jae
add
add
sar
dec
insl
jp
call
or
add
repz
clc
xchg
leave
stos
enter
mov
add
add
push
clc
daa
clc
aad
inc
add
mov
fwait
xor
faddl
pop
sbb
adc
add
mov
sbb
add
xchg
mov
push
add
adc
add
jmp
lods
popf
push
jb
add
clc
fsubs
add
mov
add
xbegin
mov
push
test
add
and
jnp
clc
in
mov
mov
mov
clc
loopne
jmp
fnstcw
cwtl
push
mov
clc
xchg
and
fistps
shl
clc
dec
ljmp
pop
or
test
pop
pop
mov
clc
xchg
sub
adc
add
inc
clc
imul
push
xchg
loope
mov
xabort
icebp
out
pop
arpl
add
pop
pop
iret
outsb
adc
add
pop
lods
pop
pop
mov
add
shll
icebp
xchg
in
cld
out
std
inc
clc
in
jecxz
add
ret
clc
es
je
clc
fwait
inc
add
push
add
inc
clc
add
add
mov
add
es
mov
stos
test
imul
mov
add
clc
jge
clc
and
inc
add
mov
lret
ss
clc
or
add
mov
or
clc
xchg
movsl
clc
sbb
hlt
pop
clc
dec
or
je
add
push
sub
add
mov
popa
add
xchg
lret
sub
add
mov
in
hlt
fwait
xchg
sbb
int
xchg
loopne
ljmp
stos
loop
ret
clc
sub
push
movsb
clc
add
add
clc
push
xbegin
inc
clc
xbegin
or
add
movsl
clc
jo
add
dec
fsubl
in
inc
clc
js
xlat
js
xchg
jb
add
pop
ficomps
clc
sbb
pushf
jmp
pop
gs
in
imul
incb
add
ljmp
add
lods
movsb
clc
jg
jo
add
clc
daa
clc
xor
add
add
movsl
clc
aam
add
mov
sti
add
add
lahf
adc
fsub
clc
ret
clc
lea
mov
mov
add
sub
add
clc
sub
hlt
jae
add
incl
add
bound
add
xchg
das
inc
clc
push
push
ficoml
add
xchg
aas
and
add
cld
xchg
sbb
cmp
mov
clc
arpl
add
adc
add
add
push
add
fcoml
test
mov
clc
lock
lret
test
mov
clc
dec
push
add
cmp
add
cmp
pushf
dec
mov
std
sub
leave
icebp
mov
clc
dec
loop
das
pop
and
add
clc
das
js
sbb
loope
fistps
out
pop
cmpsb
clc
mov
and
add
cltd
mov
ss
lods
sarl
add
mov
clc
icebp
testb
pop
clc
gs
cmp
add
xor
clc
hlt
and
add
mov
mov
clc
lods
fistps
sbb
lret
push
jns
popa
add
jmp
clc
xchg
cmp
inc
add
push
fsubs
add
add
fldcw
das
push
addr16
push
inc
clc
daa
clc
add
add
popa
add
pushf
decl
es
pop
out
and
or
add
add
test
add
xchg
in
insl
mov
push
jl
clc
jmp
push
cmp
sub
dec
arpl
add
out
jne
clc
sbb
clc
pusha
add
or
mov
jp
add
dec
mov
push
add
xchg
shll
add
dec
dec
cwtl
popa
add
fldl
add
jge
cli
jmp
add
fucomp
es
add
add
mov
add
sub
in
dec
and
add
add
pusha
add
push
add
dec
leave
and
add
mov
imul
clc
mov
dec
aam
repz
xchg
out
cmp
clc
mov
clc
add
add
test
add
cmp
nop
or
clc
pop
shll
mov
clc
pop
xchg
jae
add
mov
inc
add
xor
clc
or
add
mov
jbe
push
pop
cmp
aas
pop
stos
test
add
mov
adc
add
clc
ret
clc
fcmovbe
sub
cmc
lret
xlat
vunpcklps
jp
jp
clc
or
ss
inc
add
enter
xchg
push
in
fsubrl
clc
lods
mov
clc
stc
push
jo
add
cmp
add
ljmp
mov
data16
xor
add
add
addr16
fwait
xchg
fdiv
push
xor
add
sub
clc
cwtl
jmp
mov
xchg
cmp
add
mov
ret
xchg
jnp
ret
clc
mov
clc
mov
add
bound
add
lcall
mov
push
jge
lahf
sbb
test
out
pop
rorl
add
pop
jmp
clc
movsl
clc
add
mov
mov
ja
sbb
mov
xchg
cmp
clc
xor
add
gs
movsb
clc
setbe
xchg
lea
jne
dec
push
mov
and
add
and
add
rcrb
pop
lock
pop
fstps
pop
inc
clc
or
cwtl
das
aad
add
xor
add
inc
add
js,pn
dec
pushf
ja
dec
cwtl
ret
clc
ret
clc
cmp
ds
clc
jecxz
and
add
sbb
dec
das
cltd
mov
dec
fcmove
lods
enter
fcmovu
fcom
sub
notb
inc
add
adc
add
clc
xor
add
clc
fcomps
clc
fiaddl
add
mov
cmc
cmc
mov
add
mov
ret
clc
jnp
clc
cmp
enter
sub
xchg
fidivrl
daa
clc
add
add
aaa
inc
add
inc
add
sbb
and
add
add
clc
cmp
sti
addr16
into
sbb
clc
jg
clc
jae
add
or
and
out
mov
dec
mov
bound
add
clc
test
jle
mov
clc
mov
jo
add
add
add
add
add
das
out
stc
mov
clc
iret
xor
push
and
add
sar
add
imul
xlat
and
add
cmp
sbb
mov
aaa
sub
scas
mov
add
add
je
add
push
add
adc
add
add
aas
mov
add
add
jo
add
aad
clc
stos
add
add
add
aaa
aad
hlt
pop
adc
int
pop
aaa
in
ret
clc
stos
add
add
jbe
cltd
jmp
clc
push
dec
xchg
mov
pop
std
lcall
test
mov
clc
in
mov
loope
push
add
cli
mov
jle
mov
clc
not
ljmp
add
clc
in
shl
imul
sbb
xor
and
fnsave
cmp
add
add
add
clc
lock
clc
cs
pusha
add
fisttpll
mov
lahf
and
add
add
jmp
mov
add
ret
jo
add
xor
add
mov
jmp
xchg
mov
clc
inc
add
aad
clc
aam
inc
clc
cld
cmp
push
mov
cmp
ret
clc
call
dec
ret
clc
gs
rorl
pop
stc
roll
add
loop
push
mov
fnstenv
mov
cmp
inc
clc
sar
dec
inc
clc
inc
clc
pop
adc
add
dec
sbb
xchg
insl
push
add
lahf
dec
xchg
push
insb
jns
dec
movsb
clc
std
mov
lcall
int3
inc
add
adc
or
lret
jno
add
clc
imul
test
xbegin
pop
push
clc
fidivl
add
cmc
mov
add
movsl
clc
imul
clc
xchg
xchg
mov
nop
scas
ficompl
aam
add
fsubrp
adc
add
inc
clc
iret
push
sbb
clc
pop
jne
sub
in
pop
sti
loop
xor
mov
xbegin
add
mov
shlb
out
xbegin
mov
clc
jnp
out
in
cmp
mov
push
add
ret
clc
fistl
cwtl
cmc
xor
add
pop
mov
clc
mov
clc
adc
add
add
ret
clc
push
xchg
xchg
clc
cmp
mov
clc
sti
iret
sar
clc
es
fucom
clc
sub
xchg
icebp
popf
dec
loop
sahf
cmp
fidivs
mov
jbe
scas
popa
add
mov
fwait
test
fs
pusha
add
dec
cmp
clc
scas
push
xor
add
add
xor
add
add
sti
jnp
in
adc
add
clc
or
add
cld
adc
adc
add
or
pop
fstpl
mov
xchg
stc
sub
and
add
xlat
cmp
cmp
clc
lret
mov
clc
push
sarl
push
add
sti
xor
pusha
add
cmp
xor
add
add
sub
sub
scas
push
cmp
insl
pop
cmp
fbstp
nop
test
clc
outsb
pusha
add
mov
cmpsb
clc
inc
clc
aam
mov
pusha
add
leave
mull
sub
mov
scas
mov
in
test
inc
add
shrb
repz
dec
out
clc
adc
add
clc
push
add
cmp
push
dec
je
clc
cltd
push
stc
pop
aaa
and
add
mov
mov
jo
add
fs
xor
add
icebp
test
clc
cwtl
or
xor
add
mov
fdiv
mov
out
sub
test
imul
and
add
shll
dec
mov
mov
cld
push
clc
xbegin
inc
clc
pop
sar
pop
clc
pop
mov
leave
push
and
or
shlb
add
xchg
dec
loope
sub
add
clc
cmp
add
or
popf
dec
inc
clc
cmp
data16
pop
clc
fcomip
dec
mov
rcr
jp
scas
leave
stos
fs
movsb
clc
add
sub
xchg
and
add
xchg
ret
pop
xor
add
add
clc
cmp
pop
pop
pop
int3
stos
test
clc
ss
int3
mov
push
xor
add
test
and
cmp
mov
add
and
add
in
nop
divb
add
rol
clc
icebp
mov
cmp
clc
rcrl
movsb
clc
pop
clc
pop
push
clc
and
add
into
es
sub
sar
cld
pusha
add
and
arpl
add
xlat
fnstcw
dec
lea
add
mov
add
or
add
adc
add
filds
cmp
test
jge
mov
clc
xor
add
add
leave
popa
add
mov
clc
cmpsb
clc
test
aaa
xbegin
inc
add
pop
int
clc
fmull
in
sbb
clc
pop
inc
clc
push
clc
xchg
push
mov
add
out
popf
test
push
movsb
clc
stos
mov
icebp
push
jo
add
cmp
add
pop
xchg
lret
sar
inc
add
inc
add
out
dec
insb
xbegin
clc
pop
addr16
add
add
mov
cmp
or
scas
xabort
jecxz
repz
add
add
jae
add
fbld
add
add
push
inc
clc
adc
add
inc
clc
movsb
clc
clc
push
add
cmp
movzbl
add
shl
clc
add
popa
add
add
int3
lods
lods
push
add
push
add
add
add
adc
add
clc
mov
insb
dec
shufps
clc
mov
add
add
cmp
or
add
clc
jge
pop
out
test
clc
loope
jnp
sub
clc
clc
xchg
xor
mov
mov
add
jae
add
xchg
insb
sti
jno
add
aaa
fwait
test
ljmp
adc
add
clc
push
cmp
clc
pop
mov
cmp
add
es
xchg
add
add
clc
jb
add
push
add
cmp
jno
add
clc
jo
add
repnz
enter
imul
add
add
add
loopne
xchg
push
add
mov
mov
lods
mov
in
push
pop
jo
add
jp
clc
xabort
push
add
or
ljmp
clc
sahf
loope
adc
add
jge
add
push
outsl
clc
aas
outsb
xlat
adc
cmp
clc
jns
xor
add
clc
testb
out
pusha
add
enter
outsl
lea
add
clc
std
pop
clc
aad
movsb
clc
cmpsl
clc
mov
push
clc
in
repz
add
mov
jge
add
jg
sub
clc
cmp
clc
pushf
mov
adc
nop
fidivrl
push
clc
enter
cmp
and
add
dec
cmp
fcmovu
pop
xchg
add
add
jmp
popa
add
pop
push
add
icebp
pcmpeqw
cmp
add
lcall
mov
and
add
push
xlat
imul
clc
push
test
jle
add
mov
dec
rclb
seta
adc
add
clc
clc
in
out
test
adc
add
ficoml
clc
iret
dec
xlat
cmp
mov
dec
cmp
fildll
jl
into
insl
cmp
pop
mov
out
movsl
clc
pop
scas
mov
add
popa
add
insb
push
stos
jg
push
add
fucomi
in
ljmp
jge
clc
addr16
icebp
adc
add
add
mov
mov
xor
add
fwait
cmp
cli
lret
jl
jnp
iret
fs
inc
clc
push
xbegin
add
imul
sar
dec
mov
lock
mov
add
ds
ljmp
cli
ret
add
add
adc
add
cmp
push
bound
add
add
mov
push
add
pushf
shrb
clc
cmp
cmp
add
add
mov
jmp
and
ds
out
push
cmpsb
clc
aad
add
add
daa
clc
xchg
or
clc
jecxz
int3
sub
testb
fistpl
clc
pop
aad
hlt
hlt
lret
push
add
xor
add
add
xlat
fwait
stos
loopne
imul
loop
sub
pop
data16
adc
jecxz
pop
dec
bound
add
or
fnstsw
in
and
sub
mov
jno
add
sbb
clc
jl
clc
mov
xor
fisubl
clc
xor
add
mov
sbb
xbegin
clc
int3
mov
lahf
inc
add
xchg
pop
data16
in
loopne
mov
clc
aas
add
mov
hlt
call
clc
jbe
add
add
xor
push
add
jb
add
mov
add
loop
mov
add
add
jne
inc
clc
lods
std
dec
inc
add
xchg
or
add
pop
fistl
or
add
pushf
stos
je
mov
clc
xchg
push
and
add
lahf
mov
aam
clc
pop
dec
inc
clc
jmp
add
mov
clc
cmp
clc
roll
out
mov
lcall
clc
mov
cli
dec
call
jge
cmp
or
add
xor
add
fstpt
clc
pushl
hlt
es
movsl
clc
and
add
or
dec
inc
clc
iret
insb
gs
mov
clc
xbegin
cmp
stos
flds
in
hlt
hlt
imul
mov
loop
sub
add
add
add
push
mov
jnp
clc
lock
or
clc
in
fistl
add
mov
ret
clc
mov
add
icebp
ljmp
clc
mov
push
sti
push
inc
clc
mov
in
adc
dec
inc
clc
mov
popf
adc
add
add
dec
cmc
lea
fcmovb
clc
mov
add
sbb
add
clc
test
loopne
mov
add
add
lret
xchg
cwtl
jge
enter
sub
sbb
clc
cmp
xabort
clc
iret
pop
add
out
cmpsl
clc
push
clc
push
iret
add
add
xor
add
dec
ljmp
and
add
lods
stos
cmp
ds
lea
add
or
clc
in
xor
sar
cmp
repnz
xlat
mul
clc
and
add
clc
pop
cmp
mov
add
push
add
std
in
xabort
mov
jne
add
test
adc
add
push
add
cmpsl
clc
repz
cmp
and
add
cwtl
sbb
clc
pop
daa
clc
ja
push
inc
clc
sbb
push
add
push
add
jmp
test
jno
add
sahf
xchg
push
add
jge
clc
notb
adc
add
scas
xchg
loopne
cmp
sbb
xchg
shlb
add
clc
clc
push
scas
sahf
enter
mov
mov
cmp
add
xor
fmul
and
add
add
pop
jle
mov
and
int3
popa
add
cltd
pop
or
sti
int
in
jle
add
mov
mov
arpl
add
add
add
clc
imul
or
add
add
adc
add
clc
movsl
clc
jmp
inc
add
cli
push
ret
clc
inc
clc
sbb
clc
inc
add
xor
add
and
add
clc
adc
add
cld
cwtl
or
movsl
clc
sub
sbb
stc
xbegin
push
jmp
clc
push
arpl
add
inc
clc
stc
test
pusha
add
das
mov
mov
repnz
pop
repnz
add
rcrb
dec
mov
rorb
xchg
pop
cmp
add
add
add
gs
or
add
jl
test
clc
xor
add
clc
push
in
jle
out
xor
add
clc
test
push
imul
push
clc
push
mov
imul
cmc
ret
xchg
xchg
sub
or
add
mov
jae
add
add
sub
jp
add
pop
shll
push
add
stos
xchg
adc
xchg
push
or
cwtl
xor
push
pushf
xchg
nop
test
cmc
dec
test
iret
mov
mov
sbb
pop
mov
int3
and
add
xchg
mov
clc
xchg
out
cmp
addr16
mov
and
add
add
sub
dec
xchg
sbb
add
add
scas
shll
add
fldl
clc
daa
clc
adc
add
mov
dec
icebp
addr16
xchg
cld
outsl
mov
push
add
add
hlt
mov
stos
jae
add
cmp
add
popf
jno
add
enter
imul
hlt
dec
icebp
cmp
ds
adc
add
clc
out
jmp
fwait
enter
ret
clc
test
add
push
add
push
clc
push
mov
add
push
scas
scas
movsb
clc
mov
clc
inc
add
sahf
xabort
adc
and
insb
dec
clc
xchg
inc
clc
sbb
and
add
add
push
sub
pop
pusha
add
jp
add
fidivl
add
in
call
scas
add
add
add
fwait
mov
es
popa
add
jno
add
cmp
clc
or
test
cmp
ret
sub
clc
xchg
or
clc
ffree
clc
push
cmp
xchg
sbb
lahf
jno
add
add
outsb
loopne
sub
add
add
mov
and
add
push
rclb
add
cmp
sbb
test
dec
push
sbb
popf
dec
mov
clc
lret
push
ficoms
add
repnz
sub
clc
in
pop
xchg
pop
push
and
add
clc
clc
xor
add
clc
cmp
in
inc
clc
xchg
or
mov
jle
cmp
hlt
and
add
outsl
scas
aam
clc
sti
rcll
clc
adc
add
scas
add
add
add
clc
xlat
pop
mov
clc
jo
add
push
clc
sbb
add
add
dec
mov
push
add
dec
aaa
pop
sub
out
sbb
clc
lods
imul
sar
clc
jb
add
fst
cli
jnp
and
add
xor
add
clc
jecxz
insb
loope
pop
push
pop
data16
mov
xchg
mov
shlb
add
clc
adc
add
pushf
mov
clc
js
add
pop
mov
loope
std
mov
jae
add
add
or
add
rcrl
clc
pop
mov
clc
mov
loopne
gs
mov
jecxz
lods
test
add
jne
clc
fcos
or
xor
add
sub
add
pop
jb
add
clc
nopl
ds
fcomp
push
jmp
int3
outsl
sbb
cmpsb
clc
inc
clc
add
add
add
fimull
clc
adc
add
clc
cwtl
in
mov
dec
and
add
lahf
xchg
and
add
add
add
popf
xor
in
dec
or
in
pop
test
loope
xchg
pusha
add
cltd
out
scas
add
inc
add
add
add
add
in
inc
add
pushf
int
add
cs
testb
add
and
add
mov
jecxz
pop
scas
pop
jo
add
or
in
mov
mov
int
clc
aam
stc
fisubrs
add
imul
add
add
sbb
add
cld
movups
add
add
jnp
clc
sbb
inc
clc
inc
add
cld
jnp
adc
add
mov
add
cmp
add
mul
clc
add
add
clc
jle
cmp
add
into
pop
js
push
arpl
add
add
xor
add
xor
mov
lret
mov
push
dec
mov
stos
lcall
loop
test
lock
clc
and
add
add
xchg
inc
clc
fadds
add
aaa
sub
jae
add
jb
add
clc
fdivrp
dec
xor
add
test
adc
add
ret
clc
test
mov
add
add
in
xor
add
leave
adc
add
mov
test
add
sbb
clc
or
clc
aaa
mov
add
mov
leave
clc
sahf
mov
add
sar
or
clc
nop
leave
jno
add
add
shll
ss
adc
movsl
clc
jno
add
xor
sub
popa
add
enter
add
mov
insb
jle
lock
cwtl
jg
shl
clc
pop
cmp
adc
add
mov
or
add
add
add
xor
add
clc
lret
sahf
pop
fldt
clc
sub
scas
aaa
jl
clc
scas
pushf
or
clc
jne
clc
sbb
add
pop
xchg
and
add
clc
ds
inc
clc
jo
add
mov
sbb
jb
add
mov
ss
lods
es
fidivs
rclb
pop
sbb
cs
add
pop
stos
push
scas
push
mov
gs
push
mov
enter
add
rcll
pop
das
fnstcw
aas
pop
inc
clc
lahf
and
mov
in
cmp
add
cmp
mov
cmp
add
call
fwait
inc
add
jbe
pop
mov
popa
add
shr
fisttpll
mov
clc
fmuls
cmc
xchg
mov
jp
clc
cmp
add
mov
add
cmp
loopne
xor
add
inc
clc
ds
xor
add
clc
inc
add
icebp
sbb
add
out
cli
xchg
in
cmp
cmp
dec
cmp
mov
add
pop
xchg
mov
mov
clc
fstpt
dec
outsl
int3
repnz
cmp
add
addr16
and
pop
data16
outsb
dec
pop
fs
push
cmp
shl
add
push
xchg
aas
sub
mov
mov
dec
push
push
clc
adc
mov
xabort
jnp
rcr
cmp
xor
add
test
adc
add
popa
add
mov
dec
jbe
cmp
add
push
mov
clc
xchg
xchg
push
adc
add
add
add
out
jne
sti
data16
cmp
movsb
clc
sub
add
add
sub
sar
out
int
clc
add
add
enter
add
add
adc
pop
clc
push
sarl
loope
jnp
clc
pushf
mov
add
adc
add
xchg
fsubl
inc
clc
and
add
add
xlat
mov
clc
ret
cmp
sbb
cmp
xor
add
loopne
jg
push
and
add
jne
add
mov
shll
mov
clc
lcall
inc
add
push
sub
adc
add
in
adc
add
cltd
outsl
mov
insb
jno
add
add
dec
push
mov
clc
outsb
lahf
jmp
cmp
fcompp
push
xabort
mov
add
dec
push
cltd
ds
sahf
ja
inc
add
push
add
and
add
clc
mov
push
into
push
pop
fidivs
add
clc
clc
adc
add
clc
ja
mov
add
xor
cld
loope
and
add
add
add
dec
jp
clc
jns
imul
jle
clc
movsb
clc
mov
lods
popf
sub
daa
clc
jnp
pop
test
cmp
clc
sbb
mov
aad
push
js
clc
cltd
ja
inc
add
and
add
mov
adc
add
inc
add
jmp
adc
add
xchg
jne
cwtl
loopne
adc
add
xchg
adc
add
add
in
clc
repz
add
cmpsb
clc
pop
shlb
inc
clc
inc
clc
inc
clc
pushf
xchg
paddsw
pop
divb
add
int3
push
mov
mov
idivb
cmp
push
adc
add
add
dec
pop
cmp
insl
test
add
mov
xchg
or
pop
lret
dec
clc
dec
pop
movsl
clc
push
push
add
add
mov
clc
xor
add
jne
clc
clc
xor
movsl
clc
mov
add
sbb
add
clc
clc
lret
push
data16
inc
add
jnp
clc
mov
arpl
add
aas
mov
add
clc
add
add
add
inc
add
cltd
mov
clc
xor
add
add
mov
clc
loopne
sub
and
add
cmp
and
inc
add
sbb
sbb
or
add
push
clc
jmp
pop
test
inc
clc
pop
pop
add
clc
sahf
xchg
fs
xchg
xor
add
clc
test
sarb
sub
scas
sbb
add
stc
sbb
jno
add
test
leave
cwtl
adc
add
clc
ret
dec
scas
or
clc
and
add
add
xchg
xor
add
add
cld
xor
fs
jae
add
jo
add
add
xchg
imull
clc
shll
add
dec
xchg
loope
outsl
mov
clc
mov
icebp
imul
jmp
data16
lcall
add
adc
add
clc
cmp
and
jnp
pop
bound
add
int
clc
add
add
sbb
cld
out
adc
add
fwait
loop
mov
clc
jno
add
pop
clc
pop
ss
stc
mov
add
add
inc
add
scas
sar
clc
fs
cmpsb
clc
fsubrs
clc
fidivl
add
add
in
xor
add
add
xor
xchg
mov
xabort
add
add
rcrl
cmp
add
test
add
aas
out
cmp
pop
mov
add
hlt
xchg
push
mov
clc
cmp
add
ror
dec
clc
cld
or
mov
in
cmp
inc
add
mov
in
sar
add
add
scas
inc
add
and
add
mov
pop
dec
out
xchg
inc
clc
in
not
push
insb
std
adc
clc
xchg
daa
clc
hlt
fisubs
es
gs
cmp
insl
jno
add
clc
stos
push
sub
clc
push
enter
mov
inc
add
add
add
adc
add
add
add
add
enter
aas
or
gs
adc
add
sar
into
cs
push
stos
popf
js
pushf
inc
add
jle
inc
clc
adc
add
ficompl
clc
in
mov
mov
cltd
pop
in
inc
add
mov
add
mov
xchg
daa
clc
aad
add
movsb
clc
jne
mov
xlat
add
add
mov
clc
jbe
data16
cmp
add
in
dec
and
sbb
clc
mov
test
loope
add
add
inc
add
mov
arpl
add
mov
enter
add
mov
in
xchg
mov
clc
ljmp
clc
sbb
imul
add
sbb
push
es
or
cmp
clc
cvtpi2ps
loop
xbegin
push
clc
ret
jmp
inc
add
test
test
nop
stos
xor
add
je
push
sub
cwtl
stos
insb
push
add
cli
dec
leave
lahf
mov
dec
pop
xor
add
inc
clc
test
xchg
sbb
std
decb
lar
add
lock
clc
std
jg
loopne
push
add
sar
and
add
sub
clc
mulb
jnp
pop
mov
add
outsl
jmp
ds
push
ret
xor
add
fisubl
xchg
das
leave
sub
add
adc
cmp
clc
jmp
add
mov
clc
mov
inc
add
mov
aas
xor
add
jns
clc
out
mov
pop
jb
add
adc
add
into
xbegin
mov
test
and
add
shl
stos
xchg
rorb
inc
clc
jle
jne
mov
jmp
mov
clc
sti
and
add
clc
lahf
sar
clc
sbb
and
add
dec
mov
or
in
popa
add
sbb
in
jne
gs
int3
push
add
cli
pop
mov
xchg
pop
clc
jmp
add
sub
inc
clc
into
add
ds
xchg
mov
sub
push
call
add
push
jecxz
das
mov
add
inc
add
pop
out
dec
aam
clc
and
add
cmp
fwait
ret
clc
cmp
clc
gs
dec
ret
clc
mov
insl
push
mov
xchg
jg
xor
clc
test
add
xchg
add
add
add
cmp
fsts
add
xchg
lret
mov
add
outsb
daa
clc
xabort
push
add
add
push
and
add
clc
movsl
clc
sub
clc
xor
add
add
clc
rcrl
or
cmp
add
dec
jmp
dec
sbb
push
testl
xor
add
arpl
add
enter
dec
cmp
cmp
add
add
add
clc
push
add
and
add
out
aam
clc
xchg
fisubl
add
pop
fwait
clc
dec
cltd
ss
add
mov
es
shll
add
in
mov
mov
add
cmp
clc
push
lret
popa
add
jecxz
cmp
clc
push
insb
bound
add
xchg
xor
add
movsl
clc
sbb
clc
add
add
mov
ds
clc
mov
clc
xlat
mov
aas
fmulp
pusha
add
js
clc
jle
cmp
clc
dec
inc
add
jno
add
cmp
shlb
pop
cmp
scas
dec
add
test
cmp
ljmp
add
dec
aas
fsubrl
jae
add
add
ffree
clc
dec
xbegin
scas
inc
add
jp
clc
leave
mov
clc
scas
mov
or
clc
mov
pop
insl
icebp
mov
mov
mov
fmuls
add
jbe
add
cmp
cmp
fs
inc
clc
mov
std
call
add
jl
lret
fistps
bound
add
add
xchg
fs
cli
movsb
clc
ficompl
xchg
sub
in
outsl
dec
fimuls
inc
clc
mov
jg
data16
mov
mov
repnz
add
hlt
xchg
aad
clc
jmp
mov
add
xchg
scas
cmp
dec
inc
add
lret
int
clc
lcall
add
rorl
sar
add
bound
add
test
popa
add
stc
or
jmp
clc
repnz
clc
push
add
pop
clc
xlat
into
jne
clc
pop
inc
clc
push
clc
xor
add
jge
xchg
mov
jne
lahf
and
xchg
gs
lcall
out
inc
clc
inc
clc
push
gs
mov
mov
nop
testl
clc
xchg
into
add
push
add
dec
movsb
clc
sbb
add
add
push
add
xabort
adc
add
in
icebp
ret
clc
fstpl
xor
add
sub
jg
cmp
or
pop
ftst
clc
mov
ret
clc
std
jnp
add
shl
pop
je
aad
outsl
mov
mov
and
add
rcrb
clc
sub
xchg
or
mov
lea
add
call
cmp
lcall
clc
mov
jp
or
clc
bound
add
add
addr16
pop
jnp
clc
out
fmull
sub
cmp
add
push
sbb
inc
clc
sarb
add
xor
add
arpl
add
xchg
pop
clc
imul
add
add
arpl
add
xbegin
insl
dec
xchg
and
add
inc
clc
mov
and
add
jecxz
iret
push
xor
add
add
gs
push
add
cmp
clc
xlat
push
call
push
add
jp
add
repz
lods
stos
mov
aas
jecxz
bound
add
add
test
ja
ljmp
add
add
mov
idivb
outsl
and
add
into
and
jne
xchg
sub
fidivrs
mov
imul
add
sbb
add
add
add
add
xor
add
add
shl
clc
je
add
dec
icebp
push
xor
add
add
and
add
pop
stos
faddl
clc
sbb
sar
push
clc
sbb
sar
mov
mov
stos
push
or
add
or
decb
add
clc
scas
jg
add
in
flds
add
or
fldcw
jle
clc
sahf
mov
scas
sbb
jae
add
cmc
cs
fmull
push
dec
mov
in
dec
mov
pusha
add
filds
inc
clc
push
in
into
fstps
mov
lods
je
in
stos
inc
clc
faddp
clc
stc
cmp
ja,pn
mov
add
add
add
clc
push
gs
jg
clc
pop
mov
dec
lock
clc
jecxz
push
daa
clc
cwtl
mov
dec
outsl
xchg
repz
push
sub
adc
add
add
xchg
gs
dec
int
in
or
add
xchg
xchg
push
jg
mov
lock
mov
or
das
jg
mov
insl
out
sbb
clc
es
cmp
add
dec
pushf
mov
push
xchg
adc
add
repnz
ret
clc
clc
or
add
xchg
jns
ret
clc
daa
clc
add
add
add
and
add
mov
add
add
xchg
aam
stos
xor
add
arpl
add
add
inc
clc
mov
sub
gs
push
clc
jge
or
add
add
int3
outsl
cli
cmp
add
jg
or
add
jae
add
add
jb
add
repz
rorl
add
push
add
pop
rcrl
xlat
insl
mov
cmp
or
clc
ljmp
add
add
mov
inc
clc
inc
add
or
clc
jmp
add
out
sbb
add
clc
movsb
clc
enter
inc
clc
jge
and
add
mov
clc
adc
add
add
push
movsl
clc
sarl
imul
hlt
add
cmp
mov
imul
pop
or
add
mov
ret
clc
popf
das
mov
sub
add
insb
mov
clc
sbb
fsubl
add
or
add
cmc
dec
movsl
clc
or
std
jbe
dec
push
clc
sub
add
cmp
into
jg
pusha
add
and
imul
cmpsl
clc
mov
clc
lock
add
and
add
xor
add
and
add
clc
sbb
pop
clc
xor
add
loope
test
int
clc
clc
xchg
dec
mov
add
cmp
jle
in
jmp
ja
sahf
mov
add
jmp
daa
clc
sub
roll
add
lods
roll
sub
add
xchg
dec
loope
fisttpll
fmuls
xor
add
dec
in
sbb
adc
rcl
fsub
clc
add
add
pop
xchg
outsl
adc
cmp
clc
neg
movsl
clc
mov
clc
rcrl
xor
add
push
add
add
clc
sahf
pop
xchg
sbb
push
insb
je
cmp
stos
add
add
pop
xor
add
jg
mov
mov
and
add
add
popa
add
inc
add
test
mov
outsl
cmp
clc
or
xor
test
mov
scas
push
pushf
lar
add
clc
int3
sbb
cld
push
add
fwait
mov
clc
inc
add
stos
aaa
push
add
push
add
or
sar
pop
pop
gs
test
mov
dec
gs
addr16
movsl
clc
dec
sbb
push
or
mov
add
clc
call
clc
int
push
sub
adc
add
fcmovb
clc
lret
push
add
push
add
fisttpll
sti
or
clc
daa
clc
cs
add
push
xabort
mov
fidivrl
mov
cmp
inc
clc
jmp
jge
mov
adc
add
clc
cmp
jle
clc
dec
push
mov
clc
arpl
add
push
add
sbb
mov
add
jnp
add
pop
add
test
mov
add
ds
inc
clc
stos
and
add
lret
sbb
mov
clc
cmp
jo
add
add
rclb
pop
clc
jp
aad
mov
shrl
add
push
inc
add
out
es
fistps
push
out
or
fwait
mov
add
clc
push
add
int
outsb
cli
jge
mov
add
sbb
or
add
das
scas
jecxz
mov
clc
inc
clc
jle
xchg
push
clc
jge
push
add
dec
xlat
imul
sahf
jmp
add
jb
add
add
add
cmpsb
clc
scas
dec
dec
pop
mov
clc
adc
add
sar
cmp
mov
add
ds
jo
add
cmc
dec
cmpsb
clc
lods
imul
clc
scas
data16
shlb
add
notb
add
sahf
mov
push
clc
insl
pusha
add
xchg
or
add
push
cmpsl
clc
xabort
add
or
sbb
out
cmp
outsb
cld
loop
addr16
in
shll
test
clc
loope,pt
push
clc
leave
lcall
clc
test
or
pop
test
push
add
push
clc
in
sahf
insl
cmp
mov
ss
clc
test
inc
add
icebp
or
add
addr16
std
add
add
cmp
clc
leave
pop
pop
pop
dec
add
add
or
add
lods
and
sbb
sbb
xor
add
add
clc
imull
clc
xchg
pop
xchg
testb
add
add
xchg
mov
inc
add
iret
leave
and
clc
pusha
add
push
data16
iret
cmp
add
movsb
clc
out
ja
push
cwtl
aam
add
test
pop
hlt
jle
cmp
popa
add
adc
clc
and
add
call
clc
push
or
testb
cmpsl
clc
jg
clc
mov
insb
jbe
cmp
clc
inc
add
jno
add
xor
add
outsb
push
add
xor
add
mov
jg
add
mov
clc
fidivl
add
mov
clc
popf
loope
add
add
add
stc
out
push
add
clc
arpl
add
and
add
leave
mov
clc
mov
add
stos
cmpsb
clc
flds
add
clc
test
inc
add
xchg
push
add
je
sbb
add
clc
xchg
imul
clc
jbe
pop
pop
jl
dec
loopne
in
and
dec
mov
add
dec
sar
fcmovb
clc
jae
add
icebp
js
cmp
xchg
das
sbb
loopne
nop
adc
add
add
mov
sbb
mov
adc
add
test
addr16
push
jnp
clc
ret
out
sub
add
adc
add
out
push
sar
clc
in
in
lea
add
add
cmp
sbb
add
jl
sar
add
cmp
mov
add
mov
push
sub
lahf
inc
add
push
add
add
and
push
add
iret
sar
and
add
clc
and
add
pop
clc
lret
cmp
add
inc
clc
loop
lods
xchg
and
sbb
or
scas
ret
clc
xchg
or
add
push
add
mov
add
add
clc
in
pop
es
std
dec
inc
add
pusha
add
lcall
scas
jecxz
fwait
push
test
xchg
or
jne
inc
add
xchg
mov
add
clc
in
mov
mov
pop
rcrb
mov
dec
push
add
cwtl
jns
into
das
inc
clc
outsb
ja
push
ljmp
add
xor
add
loop
push
mov
sar
add
jmp
add
clc
jnp
inc
clc
sub
mov
add
jg
clc
jl
aam
clc
dec
inc
add
xlat
mov
cmpsl
clc
in
cld
cmp
add
sbb
clc
adc
inc
add
aad
call
add
outsb
or
xchg
cmp
clc
push
inc
clc
repnz
dec
insb
repz
xchg
loopne
add
push
add
in
push
outsb
sarb
add
notl
pushf
cmp
xor
add
add
push
repz
add
gs
xchg
std
pushf
or
pop
push
xchg
xchg
bnd
push
adc
add
outsl
mov
jae
add
clc
or
shl
clc
leave
pop
cmpsl
clc
add
sub
mov
pusha
add
jae
add
add
add
and
add
and
dec
es
mov
loope
xor
hlt
lods
stc
and
add
or
sub
add
and
add
outsl
pop
xchg
ljmp
add
add
clc
jle
push
in
inc
add
aaa
inc
clc
pop
pop
call
clc
and
clc
mov
mov
loop
in
movsb
clc
jns
add
cmp
pop
push
arpl
add
ret
jbe
sub
add
add
add
clc
and
add
add
push
call
xchg
enter
mov
popf
sub
adc
add
mov
mov
cmpsb
clc
push
cmp
jns
add
pusha
add
mov
clc
cmp
clc
mov
arpl
add
add
cmp
out
dec
pop
clc
into
lods
cmp
add
ds
mov
fwait
test
pop
mov
or
into
xchg
jg
inc
add
or
clc
dec
in
adc
sub
and
add
add
pushf
je
inc
clc
xlat
int
sbb
leave
pop
sar
imul
pop
xor
add
jb
add
pop
and
add
add
clc
das
js
jns
scas
loopne
sar
outsb
and
add
cmp
add
clc
mov
add
clc
int3
adc
add
inc
add
push
clc
dec
and
add
cmp
icebp
aaa
push
add
repz
ficoml
leave
cmpsb
clc
es
out
pop
clc
jmp
in
jecxz
add
add
sar
xchg
mov
mov
clc
pop
dec
or
cmp
lea
gs
cmp
clc
imul
or
clc
andps
addr16
scas
std
pop
sub
fcoml
add
sahf
mov
clc
adc
add
add
add
flds
mov
mov
mov
mov
sbb
mov
je
add
push
mov
xchg
mov
leave
mov
xchg
pop
ss
clc
jg
je
js
xchg
cmp
fstpt
sbb
add
add
inc
clc
mov
add
xchg
ljmp
adc
add
add
dec
dec
icebp
test
imul
add
fs
add
add
clc
sbb
clc
mov
icebp
jae
add
add
clc
xchg
adc
add
adc
add
add
xor
clc
add
add
and
add
clc
mov
inc
clc
ss
jb
add
push
add
rcll
add
into
je
clc
xlat
in
cmp
or
sbb
add
add
pop
daa
clc
mov
clc
bsf
sahf
push
test
ret
fidivrs
imull
mov
jbe
add
or
add
mov
clc
imul
clc
lock
add
adc
fwait
dec
inc
clc
pusha
add
push
ja,pn
outsb
iret
in
insl
fstps
sbb
xchg
inc
clc
ret
clc
xchg
jb
add
call
xor
add
scas
stos
jne
cmpsb
clc
loopne
insb
inc
clc
xor
add
add
add
pop
xchg
or
clc
add
imul
cmpsb
clc
out
ficoml
cmc
mov
sti
sbb
sub
scas
dec
lods
mov
jge
adc
add
push
add
adc
popf
cmp
lret
fstl
mov
sbb
filds
loope
xor
shrl
mov
add
pop
enter
idiv
dec
mov
xchg
sbb
push
add
xor
add
add
clc
icebp
inc
clc
inc
clc
in
shll
test
jae
add
xchg
out
and
add
ret
clc
pop
push
lcall
fnstcw
inc
add
lcall
sbb
add
aaa
add
add
add
add
xabort
clc
fstl
add
imul
inc
add
sar
and
add
clc
fldz
and
add
add
add
lcall
xor
sub
clc
jnp
clc
arpl
add
push
add
cmc
dec
scas
jp
xchg
jnp
testl
xchg
push
add
xchg
lods
xlat
push
add
add
movsb
clc
xchg
into
pop
out
xchg
mov
or
add
lahf
rolb
clc
mov
stc
cmp
add
pop
iret
dec
dec
sub
xchg
cmp
incl
inc
add
add
add
clc
cwtl
mov
sbb
pop
clc
xor
sti
adc
clc
sti
fstps
clc
sbb
hlt
pop
mov
add
call
mov
mov
clc
aam
cmp
clc
inc
clc
jge
mov
add
add
mov
cmp
clc
mov
push
add
insl
inc
add
mov
repnz
add
std
mov
insl
js
test
and
add
mov
gs
mov
sar
out
cmp
clc
sti
ret
clc
cmp
pusha
add
adc
add
clc
push
cld
mov
add
mov
mov
add
jo
add
add
cmc
inc
clc
arpl
add
add
and
add
add
das
push
add
xor
add
clc
push
pop
scas
push
clc
bound
add
clc
bound
add
add
or
xlat
xor
add
loopne
cmp
push
pop
or
clc
mov
nop
dec
in
je
add
xor
and
add
aas
jo
add
clc
mov
push
add
cmpsl
clc
xchg
mov
mov
jno
add
add
add
xor
add
es
pop
insl
dec
or
out
jne
clc
mov
and
cmp
add
arpl
add
jp
cmp
sbb
mov
in
sbb
clc
inc
add
push
addr16
inc
add
inc
add
lods
iret
push
add
pusha
add
adc
pop
push
clc
aas
dec
loopne
xabort
clc
xlat
mov
add
sar
sub
imul
add
sahf
cltd
movsl
clc
push
pop
jnp
add
inc
add
jmp
adc
cmp
add
xchg
das
inc
add
dec
lea
add
pusha
add
sbb
cmp
lock
xchg
lock
in
add
icebp
flds
popf
mov
push
sbb
clc
in
cmc
xchg
mov
sar
mov
add
es
add
add
out
xchg
xor
add
cmp
clc
and
add
add
adc
add
pop
lahf
imul
xor
add
clc
aaa
sbb
clc
add
add
and
add
cmp
add
stos
xor
add
clc
adc
add
add
xchg
mov
add
add
clc
add
popf
ljmp
add
add
fiadds
add
clc
adc
add
pop
fldcw
xchg
cvtsi2sdl
jb
add
xor
mov
xchg
sbb
add
jo
add
sub
jle,pn
fisubs
add
mov
sbb
testl
jecxz
ja
sub
stc
xbegin
imul
clc
cmp
cmp
add
pop
stc
inc
clc
and
inc
clc
inc
clc
cmp
clc
sbb
scas
pusha
add
dec
lea
jnp
inc
add
outsl
imul
cmp
mov
cmp
add
sub
push
add
aas
sar
clc
sbb
clc
or
mov
xor
add
add
add
es
mov
mov
or
push
add
sbb
jo
add
add
add
jmp
cmp
add
pop
jae
add
clc
mov
insl
dec
jbe
mov
imul
xor
add
clc
and
push
inc
add
cs
sar
push
add
call
fidivs
addr16
lods
cmpsl
clc
js
inc
add
ljmp
add
imul
add
xor
and
add
add
loopne
fistpl
add
pop
imul
add
in
fldt
sub
clc
push
push
add
int
fstpl
jp
sete
add
test
xabort
das
cmp
mov
mov
arpl
add
sub
clc
inc
clc
adc
clc
mov
adc
add
and
add
add
out
jne
clc
cmp
xor
add
add
aam
add
pop
adc
inc
clc
mov
into
in
jle
clc
mov
push
add
mov
add
cmpsb
clc
mov
inc
add
out
xchg
mov
clc
jnp
std
mov
add
mov
add
jne
cmpsl
clc
add
push
add
or
push
sarl
clc
and
add
data16
and
xchg
stos
pusha
add
sar
pop
ja
cmp
jg
mov
clc
lock
add
add
scas
outsl
add
add
add
push
add
arpl
add
add
stos
test
hlt
das
sbb
mov
push
xchg
repz
clc
push
roll
add
add
clc
xabort
jns
insb
lcall
lret
xor
add
sbb
fnstenv
add
mov
sbb
cmpsl
clc
out
xchg
pop
jge
inc
add
cmp
clc
in
test
movsb
clc
sub
xabort
inc
clc
loope
hlt
mulb
int3
or
add
xchg
xor
add
lahf
std
into
add
add
add
imul
lret
in
out
fsubs
add
cltd
and
clc
aas
mov
clc
dec
fwait
inc
add
call
adc
add
adc
mov
mov
mov
in
cmp
xchg
cli
sahf
sbb
clc
mov
cmp
add
clc
ret
clc
cmp
add
or
inc
add
cld
jae
add
clc
inc
clc
daa
clc
or
hlt
mov
mul
clc
cmp
inc
clc
lahf
mov
and
add
push
add
enter
add
frstor
add
clc
xchg
outsl
xor
add
ds
or
clc
frstor
add
fmuls
jecxz
hlt
xor
add
add
and
add
add
cmp
jnp
jecxz
cmp
cli
insb
std
cltd
mov
test
pushf
shlb
add
test
add
sti
mov
and
add
add
daa
clc
xbegin
clc
xor
add
add
dec
jo
add
cli
mov
clc
mov
add
add
clc
out
or
cwtl
fidivl
clc
xor
adc
movntq
out
enter
pop
es
cmp
clc
add
aas
ss
mulb
add
mov
xor
add
pop
je
add
loopne
jns
xlat
fdivrs
ja
add
out
stos
mov
clc
xchg
int3
ret
sbb
clc
lret
xchg
fwait
sbb
jae
add
rcrb
fwait
push
mov
add
pop
mov
add
mov
mov
and
fadd
clc
cwtl
ljmp
clc
dec
mov
clc
xchg
gs
cmp
testb
pop
mov
add
add
mov
data16
icebp
pop
iret
mov
clc
adc
add
mov
xchg
jg
add
mov
repnz
add
lahf
bound
add
clc
sub
out
call
fdivr
out
outsl
push
clc
das
and
add
or
std
mov
clc
dec
or
rorl
repnz
idivl
pusha
add
mov
mov
add
pop
outsl
pop
mov
add
xchg
xchg
and
cmp
ljmp
je
add
mov
add
inc
add
fcompl
rcrb
jne
in
xchg
pop
mov
sahf
sub
or
stos
movsb
clc
cmp
clc
setb
add
add
lahf
daa
clc
ja
add
xlat
sub
add
imul
cmp
sub
pop
int
cli
mov
cli
mov
add
push
clc
xchg
inc
clc
xchg
roll
add
mov
xchg
lahf
data16
test
popf
sbb
xchg
sahf
out
mov
add
sarb
clc
add
add
add
mov
add
test
push
inc
add
push
add
push
clc
jmp
insb
mov
add
ficoml
outsl
mov
add
hlt
cmp
in
push
clc
mov
or
xchg
cmp
test
dec
push
aam
clc
insb
cli
sub
push
stos
pushl
add
jg
cli
and
add
fs
cmp
shrl
sbb
add
popa
add
cmc
mov
mov
pop
push
pop
clc
pop
pop
clc
bound
add
lea
jno
add
clc
jl
adc
add
test
popf
push
clc
sub
fucomip
cmp
clc
mov
clc
imul
cmp
sbb
repz
jno
add
clc
int
adc
add
clc
or
imul
clc
push
clc
je,pn
stos
out
clc
fcomip
dec
inc
add
xchg
jmp
clc
cltd
jmp
inc
clc
inc
add
push
add
dec
mov
add
xabort
daa
clc
mov
ss
add
jbe
std
test
add
mov
inc
clc
fucompp
inc
clc
cli
fisubrs
mov
cmp
and
mov
add
mov
push
clc
fbld
add
add
add
clc
cmp
add
sbb
add
dec
push
add
lods
mov
clc
cltd
or
xor
add
imul
inc
clc
pop
in
sbb
rcrb
jmp
add
test
xor
add
add
ror
clc
psadbw
add
cmp
outsl
iret
imul
add
jl
dec
cmp
repz
cmp
add
cmp
int3
movsb
clc
setbe
add
imul
daa
clc
stos
mov
add
sub
loopne
push
sub
jne
out
or
fnstsw
dec
dec
push
adc
add
cmpsl
clc
aaa
xor
add
add
add
add
mov
push
out
dec
pop
or
cmpxchg
add
lahf
sbb
or
jle
add
es
pop
bound
add
clc
popf
faddl
add
add
add
sar
test
cs
mov
add
sub
add
cmpsl
clc
lcall
clc
xlat
divl
repz
add
jb
add
cmp
adc
or
popf
repnz
into
xchg
and
add
clc
mov
dec
mov
xbegin
pop
clc
pop
std
jnp
clc
sbb
mov
pop
xabort
add
adc
add
add
in
in
clc
push
xbegin
add
insb
dec
cmp
add
cmp
cmp
sar
and
mov
xchg
xor
add
add
popf
int
push
add
pop
xor
test
cmp
clc
pop
iret
stos
jo
add
add
sbb
add
pop
push
clc
cs
dec
mov
inc
clc
lahf
aaa
pop
icebp
inc
clc
int3
push
and
add
clc
push
or
inc
add
out
stos
shll
jg
inc
clc
pop
push
add
hlt
ds
data16
je
cmp
add
test
add
lods
outsb
push
cmp
clc
pop
clc
pop
clc
xchg
imul
xchg
mov
clc
mov
add
mov
add
dec
leave
pushf
jb
add
push
ds
inc
clc
stos
popa
add
inc
add
dec
inc
clc
pusha
add
xor
add
outsl
or
clc
xor
add
cmp
add
dec
add
and
add
mov
lahf
and
add
sar
fisubrl
or
movsb
clc
pop
clc
lret
cmp
leave
jmp
addr16
mov
push
clc
stos
ficoml
add
ffreep
clc
bound
add
mov
cld
inc
clc
push
add
sub
ret
clc
add
add
mov
jbe
clc
jns
xor
add
pop
xchg
cmp
add
je
enter
mov
add
xor
add
add
xor
mov
push
add
stc
xor
add
mov
cwtl
cwtl
cwtl
outsl
sub
add
jge
movsb
clc
idiv
mov
clc
dec
add
jle
fisttps
sar
clc
cmpsb
clc
push
xor
add
and
test
jne
clc
gs
test
mov
add
xor
add
add
xchg
ret
ljmp
je
and
add
clc
test
pop
mov
clc
lret
clc
pop
or
imul
adc
add
test
sbb
repnz
xchg
lods
in
in
xor
add
inc
clc
xchg
stos
out
push
add
pop
cmp
leave
push
add
cwtl
out
in
shll
sbb
cmc
add
ret
dec
xchg
cmp
add
sub
clc
xlat
fisubrl
sub
add
pop
mov
leave
mov
fdivl
add
xabort
dec
cmp
lods
outsl
inc
add
sbb
add
add
bound
add
xchg
jg
icebp
in
push
mov
xchg
popa
add
or
jb
add
add
daa
clc
std
push
add
mov
add
inc
clc
mov
add
add
xchg
mov
clc
popf
enter
add
add
adc
add
data16
pop
sub
cmp
cmp
aas
sub
add
lods
mov
cmp
gs
mov
clc
in
shrl
jp
fs
in
mov
aad
ss
mov
clc
cmpsb
clc
xor
add
add
cld
idivb
clc
bts
clc
jbe
scas
bound
add
clc
cwtl
cmp
test
cmp
out
lods
out
movsb
clc
mov
clc
fs
jg
mov
add
out
testb
add
xor
lock
ret
jecxz
inc
clc
mov
mov
sbb
clc
loopne
mov
and
rcrl
cld
sbb
in
test
addr16
fmull
sbb
xchg
cwtl
push
dec
xchg
dec
imul
mov
clc
and
add
xor
add
das
pusha
add
in
mov
mov
test
push
add
lods
mov
fwait
in
mov
clc
test
cltd
stos
leave
and
add
bndstx
fs
pop
sar
in
sbb
add
push
rol
clc
or
int
clc
lods
stos
inc
clc
outsl
or
adc
add
fwait
adc
add
sub
jb
add
int
lret
sbb
cli
mov
icebp
stc
jp
clc
das
aam
clc
clc
dec
hlt
fidivrl
add
fs
jns
push
fiadds
imul
clc
rcrb
popf
lods
xchg
inc
add
rorb
icebp
mov
add
add
add
add
lock
add
sbb
pop
clc
dec
test
add
cmp
int3
int3
mov
add
clc
or
add
sbb
cmpsb
clc
mov
inc
add
sub
clc
mov
clc
jno
add
sub
pop
sub
jle
pop
inc
add
sbb
dec
cli
pop
clc
mov
push
add
pop
clc
mov
add
add
clc
sub
test
xchg
test
mov
clc
arpl
add
cmp
js
repnz
add
clc
mov
out
insl
push
inc
add
cmp
add
sti
outsl
jp
pop
imul
add
clc
mov
jg
clc
insl
in
jl
sbb
add
clc
adc
add
bound
add
sbb
push
outsl
mov
clc
clc
daa
clc
out
mov
add
out
clc
add
adc
add
xlat
clc
inc
add
jp
scas
xchg
dec
mov
test
mov
pop
clc
notb
add
or
mov
add
daa
clc
imul
add
in
xbegin
add
mov
call
loope
nop
xchg
call
add
cmp
dec
pop
test
imul
pop
mov
push
inc
add
inc
add
or
jb
add
add
push
add
jbe
add
mov
subps
mov
insl
lret
xbegin
mov
out
jecxz
mov
aam
add
daa
clc
cmc
lods
dec
and
add
sbb
add
jecxz
daa
clc
adc
add
xchg
or
clc
and
add
jno
add
add
clc
pop
stos
mov
jne
add
dec
mov
dec
lods
pushl
fs
lock
clc
mov
add
arpl
add
clc
ss
clc
and
add
adc
clc
sbb
add
adc
add
clc
sub
clc
adc
add
add
mov
jge
dec
sub
xbegin
sti
jecxz
mov
mov
add
cwtl
cld
out
clc
add
add
add
add
sub
push
ret
clc
jle
mov
jae
add
in
add
add
jmp
add
xchg
fcmovb
clc
dec
mov
clc
adc
clc
pop
clc
pop
xchg
pop
clc
fmul
out
inc
add
xchg
clc
push
in
adc
clc
mov
stc
mov
add
push
dec
sub
lea
mov
clc
cmp
or
push
add
ljmp
inc
add
data16
in
popf
push
add
cmp
xor
add
xchg
push
push
lret
mov
stos
imul
aam
add
inc
add
fwait
ds
clc
popl
add
fiadds
add
cmpsl
clc
sbb
clc
pop
loopne,pt
pushf
iret
mov
add
mov
mov
pushf
inc
clc
stos
lods
pop
or
add
mov
into
cmc
mov
sbb
add
add
inc
add
mov
add
imul
inc
clc
inc
clc
mov
cmp
add
fwait
cmp
add
xchg
clc
gs
ljmp
jnp
lock
pusha
add
in
xorps
js
inc
clc
jb
add
push
jno
add
nop
cmp
cli
xbegin
repz
jmp
add
fistpll
sbb
ja
add
and
add
add
xor
add
push
add
cmp
xchg
cs
mov
xabort
inc
add
add
add
clc
dec
ljmp
gs
outsl
mov
dec
sti
aam
cmp
cld
inc
add
test
clc
pop
add
add
ret
add
test
pushf
mov
clc
hlt
dec
stos
out
jecxz
clc
out
sbb
clc
or
sbb
icebp
xchg
adc
add
add
outsb
mov
xchg
aas
cltd
loop
push
clc
jnp
cmp
sar
clc
cmp
pop
ret
clc
add
add
clc
mov
clc
mov
jg
clc
es
jb
add
add
add
test
clc
pop
push
push
add
sbb
clc
jp
clc
addr16
mov
aad
pop
test
and
add
push
and
add
sub
pop
jmp
sbb
cmp
cmpsb
clc
cs
in
or
mov
outsb
xchg
jl
mov
jae
add
sub
mov
aas
out
push
add
or
clc
js
data16
xchg
jo
add
add
push
add
jg
or
add
rcll
data16
push
inc
clc
mov
clc
sbb
mov
add
fiaddl
add
cli
jne
jle
incl
clc
popa
add
xchg
xor
push
clc
je
jmp
xchg
mov
clc
js
add
inc
clc
inc
clc
lcall
clc
push
add
pop
in
mov
pop
cmp
pop
push
add
pop
fdivrl
dec
inc
add
mov
fwait
jp
clc
out
xchg
daa
clc
cmp
aaa
xor
lret
ret
cmp
das
sbb
clc
xbegin
add
cltd
popa
add
xchg
xchg
add
lret
push
add
hlt
cmpsl
clc
lods
pop
inc
add
aaa
xchg
in
test
and
add
inc
add
sub
testb
add
fidivrs
data16
lahf
jp
es
add
add
clc
push
repz
add
jb
add
clc
adc
add
in
outsl
scas
data16
dec
aam
add
mov
dec
mov
clc
cmpsb
clc
add
jge
clc
dec
jne
xchg
adc
add
jne
mov
add
add
jb
add
loopne
cmp
clc
or
jl
clc
mov
cmp
push
add
jecxz
mov
add
xabort
dec
cmp
jmp
fwait
dec
in
or
adc
add
and
aad
clc
das
xchg
xor
clc
fcmove
xor
add
add
stos
out
push
add
sbb
cmp
clc
cmpsb
clc
xchg
jge
add
and
mov
add
imul
clc
cmp
loope
xchg
out
ljmp
lcall
add
mov
cld
ds
and
add
clc
mov
add
repnz
mov
dec
scas
or
in
xor
add
clc
add
mov
jg
xor
add
clc
outsb
inc
clc
or
nop
out
cmp
int
jne
clc
clc
inc
clc
pop
cmp
add
ror
or
add
in
mov
mov
add
push
add
add
add
jecxz
data16
out
inc
add
xor
add
cs
add
or
sar
add
cli
and
add
shlb
clc
xchg
inc
clc
adc
add
add
pop
clc
into
je
mov
mov
aad
notb
clc
outsb
imulb
mov
stos
shll
add
sub
add
add
pop
in
std
je
clc
mov
push
clc
in
test
adc
add
add
lret
stos
mov
popa
add
loopne
push
add
scas
mov
cmp
clc
repnz
push
add
mov
aam
insl
inc
clc
inc
add
gs
mov
clc
add
lea
pop
clc
ss
fstp
sar
out
mov
lock
mov
stos
add
add
mov
push
add
jbe
clc
xchg
push
adc
add
sbb
sub
add
xchg
sub
sbb
inc
add
jmp
add
push
popf
and
add
adc
add
test
cltd
sbb
clc
fcmovbe
lcall
clc
add
add
insl
not
movsl
clc
mov
dec
cltd
jge
outsl
popa
add
jbe
push
add
inc
clc
pop
out
test
sub
fldt
ret
clc
sbb
xor
add
add
cmp
push
add
jnp
ja
mov
add
jnp
fneni(8087
clc
adc
add
je
add
mov
and
add
clc
jg
clc
xchg
xor
add
clc
in
jo
add
outsb
sub
je
add
cmp
in
call
inc
clc
mov
cmp
add
sub
add
xchg
stc
jmp
clc
lret
add
insl
inc
clc
test
test
add
out
cwtl
pop
inc
add
sub
and
shrl
add
add
xchg
jecxz
imul
push
add
insl
push
loop
int
mov
clc
iret
cmp
mov
in
or
add
clc
push
jecxz
and
add
clc
scas
dec
mov
add
clc
adc
add
and
mov
mov
and
add
xchg
ret
das
test
sub
add
mov
xchg
jo
add
add
movsb
clc
es
fdivr
or
ss
mov
xor
add
add
add
rorb
mov
fcompl
rolb
add
mov
dec
jp
clc
mov
clc
scas
xchg
ret
hlt
mov
cmp
dec
push
mov
add
sti
add
cmp
push
repnz
sti
mov
clc
mov
sbb
icebp
xor
add
clc
xchg
insb
sbb
mov
sub
add
add
clc
insl
jmp
clc
push
add
mov
cmp
clc
iret
jle
aad
pop
cmp
repnz
pop
mov
repnz
pop
cltd
mov
add
imul
lret
clc
cmp
clc
add
add
scas
push
imul
xchg
or
add
add
aas
mov
add
scas
adc
add
mov
add
mov
clc
pop
xor
add
shrl
clc
cltd
dec
jge
pop
push
add
mov
add
sbb
out
mov
clc
push
movsb
clc
mov
movsl
clc
push
add
in
cmp
sub
add
mov
jb
add
or
aam
clc
mov
hlt
inc
clc
mov
test
xchg
aad
xchg
cmp
push
add
out
pusha
add
and
add
jne
test
xchg
pop
ja
in
jecxz
inc
clc
xor
add
jne
xchg
clc
dec
mov
inc
add
nop
clc
imul
inc
clc
or
add
enter
or
jb
add
xchg
out
push
add
cld
sub
clc
cmp
mov
scas
aam
clc
sbb
push
add
pop
iret
push
stc
outsb
mov
xchg
xchg
lahf
mov
mov
or
adc
sub
add
nop
loopne
imul
push
aam
out
in
in
push
add
inc
add
cwtl
push
enter
cltd
xor
add
sbb
clc
xor
add
and
add
add
aas
out
pop
in
fidivrs
inc
clc
push
add
jb
add
add
add
pop
mov
add
cmc
pusha
add
sbb
dec
dec
ret
clc
cmp
add
push
add
sub
cmpsb
clc
ss
adc
add
clc
pop
push
add
ss
xchg
sahf
mov
clc
xor
clc
mov
push
bound
add
add
lea
clc
push
add
cld
xchg
xor
add
add
std
sar
stos
inc
clc
cltd
mov
cmc
out
xbegin
inc
clc
dec
and
insb
jg
clc
xor
outsb
jns
mov
push
cs
push
clc
add
out
enter
es
in
popa
add
cmp
add
add
mov
sbb
clc
or
clc
jbe
add
cmp
and
add
clc
out
cmp
clc
jmp
pop
sub
clc
test
xor
push
cwtl
cld
jl
add
int3
imul
scas
insl
or
cmpsb
clc
clc
testl
xchg
sbb
sub
leave
popf
push
clc
sbb
mov
add
loope
dec
bt
je
nop
pop
cmc
and
add
dec
add
es
popl
push
clc
imul
xor
clc
dec
jg
add
jne
clc
add
add
add
xor
add
push
add
aas
mov
js
cwtl
sub
push
into
je
sub
clc
enter
add
jp
mov
and
mov
vmovlps
add
add
outsb
mov
dec
pop
adc
add
mov
not
mov
add
jecxz
mov
clc
negb
clc
pop
mov
adc
add
dec
in
testl
dec
xchg
decb
add
frstor
int
jnp
jne
sub
add
in
mov
loopne
jae
add
push
add
out
loop
mov
or
loop
ret
cmp
push
and
add
add
arpl
add
stos
dec
cwtl
and
add
sbb
in
imul
mov
add
push
mov
add
adc
add
insb
imul
xbegin
add
xchg
dec
push
clc
sbb
divb
add
mov
add
add
popf
adc
add
popa
add
sbb
mov
sarb
popa
add
sar
inc
clc
test
or
int
jg
mov
shll
ljmp
cmpsb
clc
test
bound
add
int
iret
nop
dec
sub
xor
add
clc
int3
in
and
add
cli
scas
pop
sub
bound
add
rcll
clc
sub
add
sbb
lret
gs
mov
lods
int3
pusha
add
data16
lcall
xor
add
push
add
add
add
jmp
add
jge
into
mov
mov
fisttpll
xor
add
push
mov
dec
fwait
or
jae
add
test
ljmp
mov
clc
sbb
clc
fs
cmp
clc
jno
add
inc
add
or
or
mov
clc
inc
clc
and
and
add
int3
adc
sbb
cli
mov
or
mov
pop
pop
cmp
xchg
jge
clc
push
clc
jmp
clc
sub
clc
out
adc
add
loop
xor
add
push
add
jg
jo
add
imul
mov
add
iret
inc
clc
cmp
sar
or
iret
flds
cmp
leave
aas
inc
add
mov
sbb
clc
add
add
mov
and
add
inc
clc
jl
add
std
pop
stc
mov
mov
rorl
push
add
bound
add
imul
aaa
pusha
add
aad
jle
call
cmp
add
and
cmp
or
int
cmc
mov
sar
cmp
add
dec
dec
and
add
add
add
clc
in
cmp
mov
pop
movsb
clc
fsubr
clc
clc
clc
add
stc
pop
dec
mov
add
gs
aas
jge
add
jno
add
add
cmp
add
pusha
add
sar
popf
jp
imul
inc
clc
add
add
pushf
pushf
mov
clc
gs
push
clc
fstp
add
add
push
out
loope
divl
fstl
add
mov
clc
push
add
jmp
clc
jno
add
add
out
push
add
jg
clc
fidivrs
add
xor
add
add
add
xchg
mov
clc
test
stos
mov
clc
sub
int
xor
add
inc
add
out
push
add
int
add
dec
or
inc
clc
iret
fidivrl
and
add
mov
clc
mov
std
arpl
add
dec
nop
call
clc
outsb
xlat
jnp
stc
pop
movsb
clc
ret
mov
clc
outsb
mov
clc
gs
cmpsb
clc
repnz
pop
outsb
add
add
push
clc
dec
cld
inc
clc
xchg
adc
add
add
sub
add
sbb
clc
test
ljmp
loope
mov
or
clc
icebp
notb
add
sahf
add
out
dec
sti
fsubl
stos
xbegin
cmp
add
mov
clc
fistps
sahf
cmp
sbb
clc
jnp
push
clc
clc
stos
push
clc
xor
add
clc
divb
shll
aam
sahf
ss
pop
bswap
stos
lods
in
lods
mov
dec
jle
addr16
cmp
jae
add
dec
pop
mov
inc
clc
in
jo
add
xor
add
dec
dec
mov
out
xchg
jg
clc
sti
fld
clc
das
outsl
insl
pop
iret
outsl
das
lods
test
lock
mov
xlat
stc
xor
add
pop
gs
inc
clc
cmp
shll
add
mov
add
adc
add
clc
daa
clc
cltd
mov
clc
into
or
cmp
cmp
and
add
lock
push
xchg
fcmovne
popa
add
cmp
imul
clc
dec
jp
outsb
in
js
jp
add
aas
push
lret
xchg
jnp
add
sbb
cmc
xchg
push
add
mov
clc
rcr
adc
add
enter
insl
push
add
enter
add
push
add
ret
clc
pop
push
int3
adc
add
and
imul
bound
add
xchg
mov
mov
sbb
mov
iret
aam
pop
adc
add
add
and
imul
or
aas
pop
movsl
clc
and
add
push
xor
add
aas
std
lods
cwtl
fcmovnb
clc
data16
hlt
into
rclb
mov
mov
add
xchg
pop
sub
lock
aad
inc
add
fstpt
push
push
add
jno
add
fisubs
add
mov
add
das
pop
dec
js
xor
add
js
add
cmp
add
pop
dec
pop
cmp
add
add
clc
and
add
mov
add
jecxz
js
xchg
cmp
xor
add
clc
cmp
clc
js
fisubs
or
addr16
movsb
clc
es
inc
add
clc
xlat
inc
add
xchg
jb
add
in
cltd
mov
clc
mov
add
clc
test
jge
clc
flds
add
jnp
push
add
repz
add
push
pop
bnd
clc
push
outsb
nop
push
fidivrl
add
clc
sti
dec
inc
clc
enter
into
mov
push
dec
lods
cmp
add
fildl
add
fs
test
popa
add
or
cs
add
add
add
dec
adc
add
add
clc
xchg
cmp
add
push
rcrb
adc
add
add
jo
add
xchg
clc
out
popa
add
gs
push
add
xor
add
or
add
popf
popa
add
dec
pushf
pop
sbb
xor
add
clc
movsb
clc
adc
add
das
hlt
cmp
add
add
add
sub
add
add
add
clc
adc
add
mov
adc
add
ss
inc
clc
push
add
add
cmp
clc
inc
clc
lret
dec
mov
std
out
adc
jg
xchg
ret
clc
es
loop
dec
dec
cli
push
add
sti
push
add
xchg
mov
clc
out
xlat
cmpsb
clc
jp
scas
test
mov
xbegin
sahf
das
adc
add
add
stos
xbegin
cmpsl
clc
cltd
mov
cmp
pop
and
add
add
adc
and
cmp
sbb
xabort
clc
in
lahf
cmp
clc
add
add
das
push
add
cld
stos
lahf
xchg
stos
sbb
or
movsl
clc
cmp
sbb
mov
cmp
adc
add
mov
add
inc
clc
ss
xchg
xor
add
aam
out
mov
clc
xor
inc
add
testb
clc
jl
loopne
mov
xchg
cli
cmp
clc
je
clc
jle
das
rcl
push
stos
push
fwait
xchg
sarb
dec
lock
test
mov
clc
daa
clc
dec
out
ror
mov
pop
xchg
inc
add
mov
clc
enter
into
test
loopne
inc
add
sar
sub
add
xor
add
cmp
pop
inc
add
into
imul
pop
dec
nop
daa
clc
xchg
pushl
fstl
add
stc
add
add
clc
pop
imul
xbegin
lret
sub
clc
sub
mov
sahf
clc
std
lcall
ljmp
in
mov
lea
mov
fwait
dec
dec
jg
or
add
pop
aad
add
ds
add
cmc
mov
add
pop
call
stos
iret
enter
and
add
testb
clc
mov
add
add
xchg
fs
jmp
into
cmpsl
clc
fs
sahf
leave
repz
cmp
pop
mov
and
mov
in
fs
cmp
clc
inc
add
and
out
mov
iret
lahf
cmp
pop
clc
test
sbb
inc
clc
jg
sbb
add
clc
xor
cwtl
out
mov
sbb
add
jne
mov
add
sub
add
cmp
add
jl
jmp
clc
sub
repz
pop
adc
add
lret
mov
add
je
in
or
dec
fwait
sahf
testb
lods
aam
movsl
clc
push
jo
add
loop
pusha
add
icebp
repnz
pop
xchg
cmp
add
loope
and
add
add
outsb
cmp
add
push
lcall
xchg
pop
push
mov
xbegin
clc
pushf
clc
bound
add
add
data16
xabort
stos
xchg
pop
aad
push
add
jno
add
add
sub
or
add
add
add
add
clc
sbb
add
clc
adc
cli
xchg
dec
mov
add
clc
mov
push
add
cmp
sub
xchg
jb
add
push
icebp
mov
inc
clc
xbegin
mov
add
lret
jg
clc
pop
enter
sub
add
clc
test
xlat
insl
push
sti
cld
jge
adc
das
adc
add
in
sbb
add
add
xchg
leave
fneni(8087
clc
jns
clc
addr16
mov
std
jl
ljmp
adc
add
add
fdivl
xor
add
lret
rcll
add
into
xor
js
rep
or
and
add
add
add
add
and
add
lods
inc
clc
add
add
add
add
std
or
clc
hlt
cmp
outsl
add
add
fstps
mov
clc
push
fxch
inc
clc
add
or
lock
xor
inc
clc
mov
clc
jmp
mov
add
add
xabort
mov
add
stc
cmp
xor
add
jno
add
clc
mov
mov
add
push
jns
enter
jb
add
mov
add
inc
add
sbb
add
mov
and
add
lret
push
add
cmp
add
adc
clc
psrlw
inc
clc
cwtl
popa
add
data16
arpl
add
sbb
std
xchg
mov
add
mov
xchg
dec
or
clc
adc
add
sahf
and
clc
cltd
jle
add
jnp
clc
sahf
cmc
and
add
mulb
add
inc
add
inc
add
notl
add
push
add
xchg
cmp
clc
xchg
jl
and
fldenv
add
sbb
mov
dec
cmpsb
clc
inc
add
ret
clc
mov
and
add
lods
pop
pusha
add
mov
call
aaa
pop
push
jmp
add
jns
test
clc
testl
xor
imul
gs
and
add
ljmp
mov
into
mov
loope
pop
clc
stc
js
pop
fdivp
pop
mov
scas
jbe
xor
add
clc
cmp
dec
mov
mov
push
add
in
inc
add
sub
add
shl
clc
mov
ljmp
mulb
lcall
clc
out
and
add
add
clc
xor
add
add
fimuls
add
add
or
and
add
clc
jle
mov
clc
or
pop
in
cmpsb
clc
inc
clc
push
clc
in
jecxz
stos
bound
add
clc
cmp
add
mov
sub
clc
fcomps
clc
add
add
jbe
in
hlt
or
pop
push
mov
test
int3
std
cld
adc
add
push
add
pop
clc
lret
imul
stc
sub
daa
clc
sbb
add
add
jg
jno
add
xchg
and
add
clc
stos
sub
test
out
das
outsl
nop
mov
dec
push
and
add
js
add
es
mov
iret
and
add
pop
clc
jle
adc
add
lret
test
sbb
stos
dec
push
mov
clc
pop
xchg
adc
add
clc
in
pop
bound
add
mov
mov
data16
mov
mov
clc
insl
sbb
clc
mov
cmp
jmp
out
adc
add
add
nop
or
add
xabort
clc
jg
ret
clc
xor
add
pop
cmp
add
adc
add
add
sar
inc
add
xor
add
add
gs
outsl
out
mov
clc
mov
adc
add
lods
jp
clc
bound
add
clc
gs
jmp
add
or
pop
push
add
sub
xchg
js
clc
scas
nop
sub
stos
imul
inc
clc
rcll
add
fadds
icebp
inc
add
add
add
add
xchg
inc
add
adc
iret
shll
add
pop
aaa
cmp
add
icebp
push
dec
mov
jno
add
add
outsb
inc
clc
clc
enter
clc
clc
ja
mov
sbb
or
add
sbb
add
push
clc
out
mov
sbb
and
add
sbb
clc
push
add
sbb
add
imulb
xor
add
mov
jmp
cmp
clc
inc
clc
ds
clc
inc
clc
scas
cltd
jp
adc
pushf
dec
mov
clc
loop
add
add
clc
es
sub
mull
clc
inc
clc
bound
add
clc
xchg
sub
in
lret
add
push
popf
and
add
loop
push
xchg
loope
mov
add
js
add
clc
ret
clc
pop
test
clc
sub
mov
clc
test
popf
mov
loop
push
add
add
add
clc
testl
clc
xor
clc
and
mov
imul
icebp
loop
cmp
mov
xor
add
adc
add
stc
sbb
pop
mov
cmpsb
clc
jbe
mov
sub
pop
lcall
ljmp
push
jge
xchg
dec
mov
cmp
clc
movsb
clc
and
add
add
addr16
mov
add
adc
add
clc
fmuls
mov
mov
fsub
clc
data16
mov
jp
stc
out
sbb
clc
mov
fsubr
mov
add
xchg
pop
clc
inc
clc
inc
clc
mov
add
sbb
fstps
jno
add
clc
pushf
jg
add
mov
add
add
clc
sbb
clc
or
add
jmp
push
add
xor
or
lcall
insb
push
xchg
pushf
idivb
add
clc
lods
hlt
jle
mov
clc
cmc
in
push
dec
inc
add
or
or
imul
or
out
add
add
lcall
add
repnz
clc
popf
ret
clc
inc
clc
pop
mov
iret
repz
test
hlt
jmp
out
das
mov
add
lods
shrl
clc
jp
add
rcrl
cmpsl
clc
cwtl
mov
add
fsubr
popa
add
dec
push
add
adc
add
movsl
clc
int3
sbb
inc
clc
jo
add
and
add
insb
popf
pop
push
push
add
loop
cmp
into
jg
dec
es
inc
clc
fiadds
add
xor
out
data16
test
push
add
movsb
clc
xchg
and
push
fwait
pop
scas
xor
add
fs
stos
and
add
out
mov
clc
popa
add
lods
xor
push
add
js
xor
add
jnp
jbe
add
mov
sbb
inc
clc
add
add
frstor
add
jl
out
fisttps
fmul
add
add
add
data16
sub
outsl
mov
clc
outsb
dec
in
in
mov
ret
clc
jmp
sbb
out
jmp
push
add
cmpsl
clc
inc
clc
das
jg
add
lcall
add
add
add
sti
leave
push
add
jle
add
push
pop
xchg
adc
add
clc
inc
add
fstps
mov
add
pop
in
ret
clc
das
cmpsb
clc
jb
add
add
mov
add
lgs
hlt
cs
mov
add
add
add
clc
mov
inc
add
pop
lea
movhps
clc
jo
add
negl
mov
dec
mov
jg
jp
push
push
adc
mov
lea
add
stos
test
push
bound
add
add
cs
mov
imul
js
mov
clc
and
add
add
push
pop
clc
inc
clc
ret
clc
mov
dec
jle
clc
lock
test
add
xbegin
add
mov
fdivrp
push
insl
xlat
fsts
repz
sbb
cmp
push
mov
add
add
test
addr16
jecxz
sahf
out
push
add
or
stos
cmp
cli
jp
or
adc
add
add
add
xchg
fsubrl
inc
add
mov
dec
xchg
pop
notb
add
push
clc
sbb
xchg
repz
add
add
sbb
xchg
inc
add
mov
or
cld
das
test
jecxz
test
dec
mov
cmp
add
cld
or
mov
clc
and
and
add
add
cltd
sub
add
add
add
add
js
fwait
ds
add
add
add
clc
mov
jne
mulb
fadds
data16
rcrb
stos
rolb
fwait
xchg
pop
sar
fs
dec
gs
dec
xchg
xchg
cli
add
add
pop
popf
cmp
xlat
sbb
out
xchg
test
in
mov
push
push
aam
add
jle
pop
popa
add
nop
mov
clc
fsubrl
add
inc
clc
push
and
add
add
adc
add
outsl
mov
popa
add
add
bound
add
add
in
pop
in
xchg
int3
nop
call
cmp
mov
add
cmp
adc
add
mov
clc
shrb
add
mov
cmp
cmp
clc
mov
xabort
add
adc
add
add
jnp
xor
add
add
dec
addr16
clc
push
add
test
lahf
enter
add
mov
mov
inc
clc
xor
add
add
adc
add
add
sahf
jbe
fwait
adc
add
clc
jnp
mov
nopl
add
mov
bound
add
jnp
movsl
clc
jmp
cs
iret
lods
ljmp
xor
add
add
mov
adc
add
insl
xchg
jge
clc
dec
addr16
or
inc
add
mov
lods
rolb
mov
dec
addr16
adc
mov
clc
jge
add
dec
lea
clc
aaa
pop
ret
clc
outsl
loope
dec
push
shr
rolb
add
mov
inc
add
sbb
cmp
xchg
and
add
mov
jecxz
ss
repz
inc
add
mov
xchg
jle
sbb
add
outsl
mov
sub
clc
int
mov
jl
mov
test
mov
inc
add
xor
das
sub
add
mov
jbe
mov
sub
or
pusha
add
fisubl
out
nop
hlt
clc
or
pop
jne
or
clc
add
add
clc
cmp
pop
pop
pop
add
xchg
sub
add
sahf
faddl
mov
clc
sar
add
fwait
jnp
repz
adc
fwait
loopne
gs
outsb
or
inc
add
insb
push
in
sbb
icebp
adc
add
add
add
push
sti
inc
add
enter
clc
add
add
add
jg
or
call
add
iret
push
add
aad
jmp
stc
vandnps
je
clc
shlb
iret
adc
out
xchg
int3
int3
sar
popa
add
lret
jmp
cmp
inc
clc
ja
add
push
cmc
arpl
add
lahf
fcmovne
pop
pop
pushf
jno
add
mov
inc
clc
imul
add
add
add
add
aad
or
int3
cmpsl
clc
mov
add
push
add
mov
jo
add
jmp
clc
stos
pushf
inc
clc
aaa
and
add
clc
xchg
jnp
adc
add
add
xchg
cmpsb
clc
mov
xor
add
cmp
jge
add
cmc
cmp
clc
jge
clc
mov
adc
add
push
add
sub
aaa
adc
out
mov
xchg
pop
testl
popf
stos
clc
jp
jmp
ds
cld
push
in
mov
push
pop
mov
fimuls
xlat
adc
fucomip
shrb
clc
mov
addr16
hlt
xor
add
clc
aas
and
add
add
xabort
add
ret
jmp
mov
mov
dec
lahf
or
add
pop
loopne
pusha
add
scas
idiv
xbegin
fwait
sub
add
xabort
add
add
add
clc
push
ljmp
negb
clc
mov
push
enter
inc
add
pushf
mov
mov
clc
mov
ss
or
add
inc
clc
cmp
add
mov
lcall
add
sbb
shlb
ja
or
and
add
rcr
inc
add
es
nop
sbb
cli
cmpsl
clc
lods
lret
aaa
lret
filds
add
mov
rorl
add
and
add
sbb
dec
ret
add
jl
clc
cmp
push
clc
js
xchg
adc
add
clc
mov
in
inc
add
push
add
das
loopne
clc
lret
clc
arpl
add
shr
leave
xchg
aaa
lahf
cmp
in
add
add
sbb
pop
clc
pop
outsb
jbe
clc
outsb
mov
outsl
je
clc
sar
jb
add
std
insb
push
pushf
sbb
lods
fistl
add
bound
add
adc
jle
push
add
jo
add
adc
add
push
add
stos
and
add
add
add
cld
add
sub
test
mov
xchg
add
add
lret
inc
clc
scas
xor
add
out
jg
clc
and
add
inc
clc
sub
jge
out
lret
imul
sbb
xabort
adc
add
movsb
clc
cs
clc
push
pop
cmpsb
clc
nop
loopne
out
js
add
and
add
clc
scas
cmp
adc
add
call
mov
add
sti
xbegin
add
add
xchg
imul
addr16
inc
add
xchg
es
jp
lock
out
movsb
clc
mov
mov
gs
push
icebp
xbegin
clc
sub
sub
xor
add
clc
js
and
or
and
mov
mov
inc
clc
cmpsl
clc
outsb
notl
adc
add
testl
int3
cmp
add
idivb
loopne
lcall
pushf
hlt
aas
and
add
cmp
mov
ds
dec
mov
dec
xor
add
pop
push
add
cmp
add
test
clc
loope
push
pop
es
xchg
cmp
add
mov
add
outsl
xor
add
movsb
clc
and
add
add
fcoml
add
fisubl
clc
mov
clc
ja
popf
data16
aas
cwtl
jl
es
enter
clc
and
add
clc
hlt
aaa
hlt
js
clc
xchg
sar
xchg
aaa
inc
clc
cwtl
inc
add
pusha
add
div
aaa
jecxz
out
movsb
clc
out
data16
adc
add
push
add
cmp
clc
loope
imul
push
rorb
clc
xor
add
clc
xchg
and
add
jo
add
mov
sbb
pusha
add
add
mov
sti
jne
sbb
nop
add
cmc
mov
js
add
daa
clc
pop
daa
clc
cmp
mov
inc
add
xchg
cmp
nop
lcall
or
dec
cmp
adc
add
mov
cmc
dec
out
pop
pop
add
add
test
adc
add
insl
ret
clc
pushf
sub
fidivrs
adc
clc
add
or
clc
inc
add
sub
pusha
add
stos
pop
ret
clc
fcmovnbe
mov
cmp
xor
clc
ss
and
add
clc
mov
clc
push
mov
inc
clc
pusha
add
aam
mov
push
push
mov
mov
push
clc
imul
fst
call
loop
test
jnp
add
in
xchg
bound
add
jo
add
test
jae
add
push
fmul
ret
test
clc
push
add
xor
add
clc
adc
add
jae
add
sub
xchg
and
shll
add
int3
pop
mov
add
jmp
add
pop
push
add
data16
push
and
lcall
clc
cmpsb
clc
cmc
mov
enter
and
sar
jp
add
fcompl
in
sub
gs
push
lea
add
xabort
or
cmp
jno
add
cld
data16
sbb
clc
adc
pop
clc
dec
jnp
jne
sar
jmp
mov
stc
mov
pop
aas
push
add
add
add
aaa
pusha
add
rcr
daa
clc
sbb
fs
add
add
push
clc
push
clc
mov
sar
lret
add
iret
jns
mov
cltd
pop
jne
jae
add
add
loope
mov
xlat
xor
add
dec
inc
add
gs
test
ljmp
lods
xor
add
mov
adc
daa
clc
loope
xchg
arpl
add
clc
shrb
fsubrs
cmp
clc
push
xor
xchg
aaa
dec
ret
clc
xabort
lods
sbb
test
call
or
add
add
add
add
gs
mov
push
add
data16
and
cmp
xbegin
movsb
clc
mov
pop
clc
pop
sbb
push
add
sbb
lods
icebp
add
add
add
or
fcom
pop
jno
add
clc
nop
sub
sar
add
and
and
add
sar
mov
sar
push
pushf
data16
mov
mov
daa
clc
pushl
stos
and
add
cmp
dec
mov
add
stos
into
in
jl
add
sub
clc
fcomps
jg
outsb
ret
clc
dec
cmp
clc
dec
mov
ja
push
add
jle
jae
add
clc
xor
add
aam
sbb
add
add
ja
jae
add
insl
inc
clc
popf
imul
in
sub
jp
lods
xchg
cltd
daa
clc
cmpsb
clc
push
add
stc
pop
ds
imulb
jnp
fcompl
push
cmp
clc
xchg
jb
add
mov
clc
xor
add
lea
call
push
xor
clc
jp
fdivl
in
shll
add
add
add
pop
in
adc
ja
pop
push
add
pop
adc
clc
enter
pop
sar
js
lods
xor
clc
iret
dec
xchg
pop
inc
clc
mov
clc
pop
cmpsb
clc
add
add
inc
add
cmp
add
clc
or
call
cmp
add
mov
jle
cwtl
mov
icebp
pusha
add
push
push
add
mov
cmp
add
test
xchg
ljmp
mov
cmp
nop
movsb
clc
stos
out
mov
xchg
xor
cld
sti
aas
push
mov
jne
fsubrs
jp
clc
iret
loope
xlat
push
clc
mov
and
add
push
test
add
add
add
add
imul
nop
nop
rcll
mov
sub
xbegin
mov
cmp
clc
add
add
mov
clc
mov
add
jae
add
inc
add
pop
pop
test
cld
mov
xchg
dec
push
sbb
cltd
ss
je
lret
inc
clc
pop
jecxz
xchg
jns
loopne
mov
xchg
cmp
ljmp
mov
sti
sub
stos
ja
mov
clc
mov
clc
negb
sar
add
add
add
clc
and
add
clc
pop
push
inc
add
mov
add
lock
xor
add
sub
clc
cwtl
mov
clc
xchg
or
mov
push
test
data16
gs
in
mov
pop
cmp
clc
jo
add
mov
clc
and
add
add
add
mov
jo
add
mov
addr16
out
and
add
fcoms
add
jo
add
add
inc
add
dec
and
add
inc
clc
stos
add
sbb
cmp
add
cmp
aad
clc
jae
add
sub
add
mov
repnz
xlat
pushf
stos
idiv
xchg
inc
clc
xor
add
dec
xchg
jmp
cmpsb
clc
outsl
cli
icebp
sar
and
add
add
add
mov
bound
add
inc
clc
cmc
fistps
add
push
add
movsl
clc
xchg
xchg
outsl
xor
add
cmp
clc
push
es
fbstp
clc
stc
movsb
clc
push
clc
loope
push
ss
add
dec
jp
movsl
clc
clc
push
add
mov
mov
push
push
clc
out
int
add
out
loop
sub
cmp
in
pop
add
add
jmp
mov
clc
sub
add
mov
popf
data16
iret
jb
add
cmp
clc
scas
pop
fisttps
sub
add
or
clc
adc
clc
inc
clc
sar
or
clc
xor
add
add
push
add
mov
push
add
add
ss
cmp
add
add
dec
add
add
jbe
cmp
rolb
movsb
clc
adc
add
mov
movsl
clc
mov
clc
clc
dec
sub
or
add
int3
dec
inc
add
xchg
loop
inc
clc
jns
cmpsl
clc
and
add
out
add
add
leave
xbegin
cmp
clc
xor
add
clc
jbe
shrb
into
dec
scas
lret
jmp
fsubrs
clc
pop
cmp
aaa
aam
add
add
xchg
sar
cmpsb
clc
mov
idiv
push
clc
popa
add
inc
add
xadd
inc
add
out
inc
clc
xlat
cli
adc
add
cmp
jge
push
adc
add
lahf
mov
jnp
or
xchg
jne
call
in
pop
cmp
add
lea
clc
addr16
pop
aad
mov
cmp
xor
add
popf
adc
add
xchg
push
clc
jmp
push
add
xor
add
dec
inc
clc
inc
clc
fs
xchg
fsubrl
pop
xchg
lods
pop
and
add
cmp
pop
clc
fiaddl
add
into
mov
cmp
mov
sahf
jl
add
test
cwtl
lea
or
add
gs
loope
adc
jl
pop
cmpsb
clc
stos
test
mov
xchg
data16
nop
sbb
clc
mov
jl
xchg
call
nop
insl
jno
add
aaa
hlt
mov
jb
add
add
sar
or
add
ja
clc
das
inc
clc
and
add
sar
push
adc
add
popa
add
push
out
jp
xlat
pusha
add
cltd
popa
add
cltd
hlt
mov
pop
cmpsb
clc
xlat
in
cltd
inc
add
lods
mov
clc
clc
jmp
ret
js
clc
out
xor
add
add
sub
jb
add
add
cmp
clc
xchg
inc
clc
dec
movsl
clc
mov
add
xor
add
fninit
clc
inc
add
pop
dec
jbe
push
inc
add
lret
add
repz
xchg
or
add
icebp
xor
add
inc
add
push
and
add
add
cwtl
insb
std
sub
clc
mov
sbb
cmc
stos
mov
add
adc
add
sar
lret
pop
popf
cmpsl
clc
mov
clc
mov
dec
lcall
clc
je
add
mov
mov
clc
pop
pop
push
add
call
add
push
add
repnz
sbb
sbb
add
or
inc
clc
pusha
add
dec
dec
jg
adc
add
add
cwtl
arpl
add
cmp
dec
mov
add
add
add
xchg
out
add
add
xlat
mov
jo
add
add
sbb
sub
pushf
sbb
add
add
fwait
jo
add
clc
inc
clc
xlat
hlt
adc
add
sar
add
add
sar
js
mulb
add
clc
mov
add
mov
jns
jecxz
jl
mov
add
sbb
push
add
adc
add
sbb
insb
fadds
clc
jae
add
xlat
dec
mov
fs
dec
and
add
clc
sbb
daa
clc
mov
mov
jl
clc
leave
jecxz
sub
mov
std
stos
leave
loope
pop
bound
add
clc
push
clc
test
clc
int3
into
cmp
out
mov
ja
pop
clc
jb
add
cmp
jmp
or
jno
add
sarb
cwtl
push
clc
in
xor
add
cmp
in
fwait
push
xchg
lods
gs
loope
sbb
ss
jle
jge
gs
add
in
xchg
xchg
cmp
fcomps
clc
outsl
test
add
sbb
xchg
cmpsb
clc
stos
lcall
or
sub
js
xchg
testb
outsb
jecxz
adc
test
fstpt
sti
mov
inc
clc
fimuls
fdivrp
inc
clc
test
ds
or
jae
add
push
add
adc
and
add
loopne
mov
or
push
ss
add
rcrl
mov
inc
add
jecxz
das
sahf
xabort
add
xchg
and
add
and
add
add
daa
clc
aad
clc
int3
mov
enter
add
add
adc
pop
dec
jnp
cld
inc
add
lock
clc
xchg
popa
add
mov
decl
lret
cltd
cli
fs
rorb
clc
stc
cmp
imul
imul
bound
add
clc
fcompl
std
in
inc
add
movsb
clc
lods
xchg
pushf
cmp
inc
clc
jg,pn
rolb
clc
xor
add
push
xor
loop
repz
add
push
dec
jp
inc
add
sbb
cmpsb
clc
sbb
add
cmpsb
clc
sbb
jle,pt
add
jae
add
cmp
stc
mov
xchg
idivb
mov
clc
sub
sar
pushf
push
cwtl
cmp
mov
sti
out
cmp
add
add
pop
ret
clc
jns
add
aas
scas
fs
mov
jbe
fcmovb
clc
xlat
and
add
add
out
in
movsl
clc
inc
clc
cwtl
lods
adc
add
xchg
push
mov
add
add
pop
xchg
mov
add
mov
clc
push
add
mov
add
out
icebp
adc
add
xor
add
add
mov
inc
add
test
jmp
sbb
add
or
adc
add
clc
add
add
cmc
nop
call
cmp
add
clc
cmp
add
mov
clc
mov
add
loop
int
mov
add
clc
pushl
popa
add
cmp
clc
mov
imul
add
xchg
test
repz
in
dec
ffreep
clc
push
mov
sub
out
mov
cli
mov
lods
push
xor
add
mov
clc
aam
notb
add
repz
imul
push
pop
or
mov
pop
xor
add
js
scas
xor
add
clc
in
ret
add
rorb
js
clc
mov
es
mov
xabort
clc
lea
and
add
add
xabort
clc
test
mov
inc
add
and
inc
add
fistpl
lods
jmp
lahf
cmp
add
cli
jb
add
mov
clc
hlt
inc
clc
out
sbb
jmp
add
hlt
rcll
imul
add
add
clc
lock
push
xchg
xchg
mov
add
and
cmp
insl
cmpsl
clc
cli
push
inc
clc
or
test
dec
mov
add
clc
fldt
sar
add
cld
cwtl
fdivrp
lahf
ja
sahf
cmp
aad
movsb
clc
and
add
cmp
gs
adc
add
sar
or
clc
pop
clc
mov
add
xor
add
cmp
clc
pop
in
shll
clc
cmpsb
clc
jecxz
int3
gs
sti
sbb
cmp
aaa
dec
adc
add
hlt
insb
cmp
clc
lahf
sub
pop
cmp
clc
mov
clc
mov
add
pop
push
test
sbb
icebp
dec
jmp
add
xchg
data16
xor
add
add
data16
mov
or
sbb
add
clc
xor
add
mov
sarl
push
add
mov
ret
clc
mov
pop
pusha
add
inc
clc
lret
movsl
clc
fucomp
add
add
add
popa
add
and
add
xor
sub
add
ss
mov
add
clc
aad
xor
scas
push
mov
add
es
xchg
das
jbe
add
cmp
pop
arpl
add
sub
inc
add
in
popa
add
negl
clc
push
add
mov
xchg
ljmp
mov
cmp
add
add
add
and
rclb
add
cs
add
int3
cmp
cmp
lods
cmp
fs
test
mov
add
inc
add
mov
add
or
cwtl
add
xor
add
xchg
inc
clc
inc
clc
inc
clc
dec
mov
clc
call
lcall
sub
clc
add
add
icebp
mov
add
test
cmp
add
pop
inc
clc
aaa
or
jbe
add
sar
pop
jmp
lcall
sbb
clc
and
add
xor
fnstcw
add
and
add
add
popf
loop
bound
add
sub
insl
push
clc
or
add
mov
out
push
mov
mov
xor
add
out
test
jae
add
popa
add
ficompl
lret
add
push
add
rolb
add
push
insb
or
xchg
fcomip
or
outsb
xchg
adc
lock
add
add
push
and
add
add
popf
dec
xbegin
add
adc
add
cmp
add
xor
add
jbe
add
scas
mov
out
je
clc
xchg
xor
cmc
notb
iret
push
add
dec
cmp
clc
addr16
out
sbb
cmp
loopne
jno
add
clc
mov
clc
lea
add
sahf
cmp
clc
or
clc
leave
push
mov
xchg
in
jno
add
add
daa
clc
jecxz
dec
arpl
add
sub
pop
or
clc
dec
nop
stc
or
add
add
add
adc
stos
fldl
jne
clc
add
add
add
in
jb
add
add
sub
xchg
xor
mov
fildl
add
dec
fdivs
mov
clc
sarl
clc
cmc
dec
or
jne
cmp
add
add
ss
clc
in
push
mov
lods
mov
clc
loope
add
add
adc
cmp
clc
pop
fs
mov
insb
dec
adc
add
inc
add
xchg
xchg
mov
inc
add
hlt
lock
add
out
imul
maskmovq
divl
add
push
xlat
arpl
add
jmp
in
cmpsb
clc
arpl
add
test
inc
add
imul
pop
or
mov
stos
movsb
clc
stc
loope
xchg
mov
sub
es
adc
add
in
pop
shl
clc
sar
clc
and
clc
lock
iret
jae
add
xchg
xchg
cmp
add
lret
pop
loopne
push
dec
inc
add
int3
icebp
int
clc
cmp
xor
add
cmpsb
clc
jmp
jg
xchg
clc
jge
clc
mov
clc
mov
popa
add
mov
sub
mov
add
cli
add
add
mov
pop
jge
pop
xchg
sbb
xchg
cmp
add
test
scas
inc
add
jno
add
add
out
ljmp
and
add
iret
out
xabort
clc
inc
clc
dec
xlat
fidivrs
add
clc
clc
loop
pop
jmp
cmp
or
add
add
inc
clc
cmp
sbb
clc
sbb
clc
ja
pop
inc
clc
inc
clc
adc
add
gs
mov
ja
clc
cmp
ret
lahf
mov
add
lahf
mov
add
fidivs
add
clc
dec
lea
insl
xor
jns
lea
add
sarl
add
outsl
mov
clc
dec
jmp
pop
icebp
call
dec
arpl
add
add
clc
cmp
xchg
cmp
mov
push
add
jecxz
and
add
or
stc
mov
data16
stos
mov
pop
enter
pop
clc
std
fwait
out
push
lret
push
clc
cmp
pop
std
or
flds
fs
testb
fsubp
clc
dec
pop
test
jmp
xchg
cmp
adc
add
xchg
push
adc
add
fcmovnbe
mov
call
add
inc
clc
int
add
add
clc
mov
jb
add
add
je
add
add
fdivr
out
cmpsl
clc
ret
imul
sbb
push
cmp
out
jmp
xbegin
add
daa
clc
inc
clc
addr16
lods
push
add
xchg
adc
add
and
push
add
fldl2e
test
addr16
cltd
jnp
pop
movsl
clc
mov
sub
daa
clc
lret
push
sub
das
imul
clc
adc
inc
add
cmp
mov
add
adc
add
jae
add
add
clc
nop
in
pop
clc
dec
scas
popl
push
add
jle
outsl
cmp
clc
lret
cmpsb
clc
rorb
clc
pop
push
ret
inc
clc
push
cmpsb
clc
dec
sar
inc
clc
aad
clc
ret
clc
sub
add
mov
cmpsl
clc
mov
xabort
insb
sbb
pop
sub
leave
cmp
clc
popf
mov
movsb
clc
mov
mov
daa
clc
pop
add
mov
clc
or
movsl
clc
mov
add
adc
clc
and
insb
dec
xchg
lret
xchg
cmp
loope
inc
add
mov
clc
dec
dec
insl
cmpsb
clc
popf
es
add
add
fs
push
mov
clc
sub
add
sub
add
inc
clc
rorb
fwait
cmc
jo
add
loop
arpl
add
mov
in
and
xor
add
pop
ficomps
and
add
cld
jne
add
push
jbe
add
imul
aad
clc
out
negb
pop
mov
cltd
lahf
in
xchg
mov
es
xor
clc
pusha
add
or
clc
cmp
add
clc
in
xchg
loope
adc
xchg
sbb
mov
outsb
and
add
clc
fwait
adc
add
dec
mov
add
fisttpl
xchg
jnp
clc
ds
cld
mov
cmp
push
xor
adc
add
or
add
cmp
add
adc
add
mov
clc
insb
ret
clc
mov
lahf
fiaddl
push
add
mov
add
or
clc
outsb
imul
xchg
sar
push
hlt
and
add
add
dec
clc
pop
outsl
cmp
jmp
repnz
loope
sbb
clc
or
clc
int
add
add
clc
dec
mov
clc
push
jmp
add
inc
add
iret
cmpsb
clc
loop
pop
das
fimull
mov
xchg
cmpsb
clc
jmp
clc
mov
sub
clc
xchg
push
inc
add
in
call
xor
add
cmp
fsubs
fidivl
clc
leave
mov
popf
fiaddl
xchg
jmp
arpl
add
imul
jle
mov
cld
out
sub
cmp
clc
cmp
sub
clc
cmp
clc
lahf
pusha
add
xchg
add
arpl
add
clc
pop
push
add
push
sub
mov
add
movsl
clc
jl
cmp
xor
xchg
lock
mulb
add
dec
xchg
push
add
jne
pop
cmp
push
xor
add
inc
clc
cmp
out
xlat
cmp
loope
xor
add
add
aam
clc
int3
hlt
push
add
sbb
clc
mov
aad
stos
push
jge
add
add
add
gs
dec
imul
clc
decl
std
clc
ret
clc
mov
sub
stc
loope
stos
jmp
xchg
dec
sub
add
and
add
or
clc
outsl
jle
clc
mov
add
clc
dec
and
cmc
nop
lcall
dec
scas
cmp
add
fidivrs
fimull
sahf
jo
add
jmp
add
add
push
add
sahf
ret
popf
push
clc
sahf
iret
dec
inc
clc
sbb
sti
mov
mov
clc
xor
add
sub
sub
dec
mov
popf
test
mov
add
mov
data16
fchs
clc
fsts
lods
and
add
in
or
sub
add
insl
stc
jge
lods
sbb
add
scas
scas
jb
add
sar
enter
iret
xchg
outsl
ljmp
dec
sti
data16
scas
in
jl
mov
add
std
xchg
in
mov
mov
clc
push
fdivp
das
cmp
clc
repz
cmp
add
add
add
add
clc
pop
jmp
stos
inc
add
cwtl
cmp
add
add
and
add
pop
lods
jbe
out
pop
dec
or
add
sbb
push
pop
cs
xchg
das
mov
clc
mov
clc
scas
call
xchg
inc
clc
push
leave
dec
push
clc
scas
xabort
push
daa
clc
hlt
cmp
add
int
rol
clc
mov
sbb
clc
sti
dec
cmp
pop
add
inc
add
loopne
mov
clc
pop
outsb
scas
cmp
and
add
clc
sbb
clc
scas
mov
in
aaa
outsb
gs
clc
mov
sti
cli
popf
inc
add
fsub
clc
insb
ljmp
daa
clc
push
mov
adc
add
add
popa
add
stos
sub
add
cmp
mov
adc
add
lock
pop
clc
scas
popa
add
inc
add
cwtl
fs
bnd
and
add
stc
fs
xchg
pop
push
clc
push
add
sbb
mov
pushf
std
dec
outsb
fdivl
add
in
push
xchg
popl
adc
add
add
add
pop
push
clc
js
loope
add
add
incb
sbb
push
add
xabort
push
add
stos
pop
ljmp
bound
add
jecxz
lahf
cmp
add
aaa
in
popa
add
nop
mov
add
mov
or
inc
clc
iret
inc
clc
mov
pop
inc
clc
repnz
movsl
clc
jo
add
aam
fiaddl
clc
test
clc
xchg
mov
inc
clc
fwait
or
push
mov
clc
test
ret
clc
in
push
pop
jb
add
clc
pop
dec
pop
pop
cmp
rorl
or
or
aam
mov
cmp
cmp
mov
mov
add
adc
mov
add
add
lock
mov
push
jle
ret
clc
jno,pt
add
clc
sub
ret
clc
mov
push
add
ret
clc
ljmp
lods
fidivs
cmp
add
ljmp
cmpsl
clc
push
popl
daa
clc
repnz
pop
out
cltd
mov
add
sub
rcrl
sti
xchg
stos
lea
add
xor
add
or
clc
or
clc
inc
add
dec
jecxz
xor
add
add
enter
or
add
sub
fldl
clc
jns
sbb
pop
mov
clc
cmp
add
cmp
bnd
sbb
xchg
sub
cmp
clc
mov
sub
cmp
add
lea
add
add
inc
clc
pop
mov
scas
push
xchg
mov
data16
adc
xchg
mov
push
jmp
add
mov
addr16
mov
clc
insl
out
repnz
add
add
pushl
movsl
clc
es
jle
inc
add
and
add
adc
add
clc
in
mov
imul
jl
add
outsb
inc
add
movsb
clc
push
ret
clc
sbb
in
lcall
fld
clc
mov
lea
sub
add
add
add
add
cmp
jne
clc
adc
add
mov
xabort
in
cmp
add
add
add
or
fisubl
clc
faddp
clc
sar
cmp
add
pushf
jno
add
add
scas
insb
pop
popa
add
xor
add
cmp
jnp
lea
data16
enter
int3
or
xchg
mov
add
lahf
popa
add
push
add
add
cltd
in
push
xchg
data16
popl
clc
call
ret
clc
lret
scas
jo
add
data16
mov
outsb
mov
bound
add
inc
add
jmp
add
xabort
add
ficompl
xor
add
cwtl
cmpsb
clc
cmp
movsb
clc
out
shll
and
cmp
add
push
add
insb
xchg
or
jbe
jle
add
add
add
stc
push
stos
fiadds
add
sub
lea
add
neg
es
mov
pushf
mov
add
push
out
pop
inc
clc
cmp
clc
out
xor
add
add
fldenv
push
pusha
add
aaa
stos
cmp
mov
clc
dec
sbb
add
sbb
add
push
add
test
enter
clc
lea
dec
clc
cmp
shl
xchg
sar
add
jae
add
clc
fildl
add
test
cmp
add
jnp
jmp
push
add
rolb
add
add
dec
repz
add
cmp
es
je
clc
iret
enter
cmp
xbegin
cli
push
or
xor
add
fmull
cltd
pop
das
lcall
clc
sahf
xchg
cmp
pusha
add
adc
scas
mov
stc
aaa
insl
data16
mull
add
bound
add
mov
dec
push
clc
jns
sbb
pop
das
adc
add
pop
sahf
and
add
ss
lret
mov
jle
or
clc
xor
add
cmpsl
clc
adc
add
xchg
clc
mov
inc
add
xor
add
test
lcall
xor
add
mov
xor
add
clc
rolb
popa
add
sub
jl
cld
add
add
add
bound
add
sahf
aad
clc
data16
movsl
clc
movzwl
add
and
add
insb
fisttps
mov
clc
push
aaa
pop
jno
add
jmp
fcoml
aam
adc
add
jnp
or
pusha
add
xchg
clc
in
enter
pop
outsb
xor
clc
add
add
mov
xor
add
mov
mov
pop
or
loop
and
add
mov
clc
icebp
xbegin
clc
mov
add
add
in
xchg
movsl
clc
push
add
lods
fisttps
or
imul
sub
add
aam
mov
or
jno
add
je
clc
pop
rcrb
clc
stos
cmp
divl
clc
push
ja
inc
add
mov
scas
xor
mov
clc
adc
or
push
clc
out
adc
add
add
scas
test
push
sub
mov
add
add
dec
pusha
add
or
add
lods
jecxz
sbb
clc
and
add
lret
std
repz
clc
add
xor
add
add
mov
movntps
lcall
sub
rorb
test
or
cmp
ret
clc
dec
and
add
add
adc
add
into
call
dec
add
cmpsb
clc
mov
add
add
xchg
insb
gs
jae
add
aad
enter
clc
and
add
adc
add
and
add
cmp
mov
clc
clc
mov
lcall
mov
clc
inc
add
xchg
iret
bound
add
clc
jns
pop
scas
stos
cmp
xchg
sub
clc
inc
add
push
push
out
mov
inc
clc
icebp
xbegin
jnp
clc
popa
add
xor
cltd
ss
ss
clc
pop
bswap
and
add
clc
in
add
imul
add
mov
cmpsb
clc
pop
clc
mov
clc
out
out
and
jg
dec
or
add
add
clc
sub
clc
pushf
loope
mov
sar
clc
leave
jo
add
add
fistpl
sbb
data16
cld
scas
mov
lcall
and
repz
out
data16
daa
clc
mul
clc
push
add
popa
add
ja
insb
jg,pn
push
mov
cmp
imul
outsl
movsl
clc
and
add
cmp
stos
xchg
add
add
sbb
jnp
imul
jl
mov
adc
add
add
push
pop
in
sub
adc
add
clc
jle
clc
cmp
clc
inc
add
jne
add
sbb
clc
cmp
mov
push
mov
push
mov
cmp
jl
loop
xchg
xabort
adc
add
add
add
clc
cs
clc
aaa
push
add
pushf
stos
jmp
clc
aad
clc
push
stos
sti
bound
add
std
scas
mov
jmp
dec
mov
and
add
sbb
int3
push
fs
int
push
mov
rcrb
mov
outsl
and
add
add
add
pop
cmp
jl
pop
add
add
test
and
xchg
insl
mov
ja
sub
or
push
push
clc
or
in
mov
dec
mov
add
add
or
push
add
xabort
clc
cmp
xchg
inc
clc
rclb
add
xor
push
add
add
add
jecxz
cmpsb
clc
fnsave
add
cmp
ret
clc
aad
cmp
adc
push
adc
clc
and
add
add
xor
clc
test
cli
pop
insl
cld
mov
push
add
cli
mov
dec
gs
dec
stos
jbe
clc
add
add
out
out
movsl
clc
mov
pop
aam
adc
add
cmp
clc
hlt
popa
add
dec
xchg
stc
ret
jmp
clc
push
sub
leave
shr
dec
pop
fcmovnbe
mov
int3
hlt
pop
pop
cmp
clc
xchg
xchg
popf
sub
add
jl
scas
sbb
clc
push
push
xor
add
std
cli
loop
sar
clc
mov
add
clc
stc
mov
clc
stos
int
add
add
clc
ss
shlb
add
inc
clc
cmp
clc
add
sbb
mov
sbb
clc
daa
clc
movsl
clc
data16
jae
add
add
add
add
clc
mov
add
xlat
xor
add
mov
loope
inc
clc
ret
sub
clc
es
and
add
mov
add
lods
add
add
clc
add
push
push
loope
mov
nop
and
add
clc
mov
add
xchg
int3
loop
mov
mov
jnp
mov
sub
sub
sbb
inc
clc
aaa
pop
push
fdivr
ret
mov
xor
add
add
imul
add
inc
add
jnp
clc
jns
in
clc
cltd
cmp
add
and
add
jb
add
add
es
xlat
aaa
inc
clc
fwait
adc
add
add
aad
aas
inc
clc
add
test
xchg
repz
fcomps
add
outsl
jmp
mov
clc
outsb
inc
add
daa
clc
dec
jnp
cs
frstor
add
pmulhw
inc
add
cmp
call
imul
mov
xor
add
clc
push
clc
and
in
repz
cmp
pusha
add
mov
cmp
repnz
clc
jb
add
add
xchg
shl
clc
ds
mov
mov
shrb
movsb
clc
shrb
inc
clc
test
clc
push
jmp
clc
adc
add
add
add
aam
mov
clc
jbe
xabort
add
xchg
fistpl
add
arpl
add
add
add
add
cmc
cli
xchg
je
clc
sbb
fdivl
add
add
add
mov
jl
pop
roll
xchg
int3
std
mov
mov
clc
jae
add
clc
push
idivb
call
add
mov
jp
mov
clc
mov
mov
xchg
outsb
jae
add
adc
add
add
lahf
push
add
sar
pusha
add
mov
add
xbegin
testl
out
jb
add
scas
jb
add
shlb
add
loop
push
add
repz
test
int
clc
cmp
add
enter
jmp
mov
clc
fsubrl
add
ja
cmp
add
filds
xlat
sbb
sbb
mov
jecxz
fs
and
add
add
add
clc
shll
jmp
add
add
icebp
push
push
mov
add
xor
add
jecxz
mov
mov
icebp
or
ret
clc
mov
clc
sar
jbe
add
xor
add
adc
clc
mov
outsb
adc
lods
popa
add
fisttpl
jecxz
or
pushf
add
push
test
mov
cmpsl
clc
dec
cmp
jbe
or
ss
or
in
dec
push
xabort
push
add
mov
adc
loop
mov
add
in
mov
je
popa
add
scas
dec
leave
sbb
adc
add
fpatan
dec
scas
xabort
outsl
pusha
add
jg
out
arpl
add
enter
leave
jle
clc
xabort
mov
add
mov
add
aam
aaa
ds
xchg
fcmovb
clc
ret
clc
inc
clc
out
neg
hlt
dec
fs
bound
add
add
sar
xbegin
push
pop
fwait
cltd
and
add
sbb
add
push
add
in
into
add
add
inc
add
ret
clc
test
xor
add
add
add
js
cmp
cmp
mov
lret
push
add
xbegin
in
xor
sub
inc
add
cmp
add
clc
lcall
clc
jge
gs
lret
cmp
movsb
clc
jo
add
add
mov
inc
add
data16
fsubs
add
add
add
gs
pop
dec
clc
push
jl
push
jne
sbb
clc
rcrl
clc
das
and
add
add
inc
add
jno
add
add
enter
mov
jno
add
pushl
dec
in
mov
clc
mov
clc
xor
xor
add
lahf
ljmp
int3
mov
clc
enter
clc
js
dec
nop
fbld
add
mov
push
clc
push
fs
dec
lahf
lock
data16
mov
and
add
inc
clc
push
add
sub
mov
in
clc
clc
adc
pop
mov
clc
fisttpl
idivb
and
add
clc
mov
dec
inc
add
mov
shrl
or
clc
sub
dec
negb
push
jb
add
mov
jb
add
js
cmp
enter
push
lods
imul
clc
cmp
mov
clc
push
imul
clc
test
pop
xbegin
and
add
add
sbb
jne
fcompp
xabort
adc
add
add
insb
data16
xor
add
push
cmp
clc
shrb
dec
or
xchg
mov
scas
test
push
dec
xor
add
push
add
daa
clc
fiaddl
dec
sub
and
add
sub
clc
xchg
icebp
mov
add
add
clc
outsb
xor
add
dec
cmp
add
stos
out
scas
mov
clc
dec
inc
clc
pusha
add
out
mov
clc
lcall
add
sbb
clc
push
pop
leave
sbb
or
add
cmpsl
clc
adc
add
in
je
in
mov
mov
shlb
add
lahf
pop
mov
pushf
sti
lock
pop
pop
out
test
inc
clc
mov
pop
mov
push
add
xchg
or
mov
add
add
add
cltd
cltd
fistpl
xabort
clc
inc
clc
dec
lcall
add
pop
in
xchg
bound
add
jp
mov
into
jecxz
add
pop
xabort
mov
add
pushf
cmp
add
arpl
add
jno
add
xbegin
mov
movsb
clc
arpl
add
es
xor
add
jl
fsubrp
jg
clc
mov
clc
dec
enter
in
push
js
js
add
jno
add
jno
add
in
push
push
clc
and
popa
add
pop
pushf
push
push
clc
jb
add
clc
ds
mov
mov
cltd
adc
add
jg
add
fimuls
out
test
inc
clc
cmp
mov
add
loop
push
add
cmp
add
add
enter
mov
add
sbb
add
cmp
inc
clc
sbb
add
push
arpl
add
add
es
scas
int3
ret
xchg
lea
pop
or
push
clc
test
clc
cmp
std
add
add
es
xchg
icebp
push
fidivrl
stos
iret
mov
add
aam
loope
jle
pushf
lea
add
jns
lret
mov
inc
add
jnp
or
add
clc
adc
add
inc
clc
hlt
mov
inc
clc
mov
add
push
and
add
pop
clc
sbb
clc
not
ljmp
mov
insl
cwtl
add
add
test
clc
testb
bnd
cmp
sti
mov
fists
jg
xlat
or
push
clc
mov
dec
clc
xchg
adc
add
movsb
clc
xor
add
sub
jecxz
xor
add
clc
push
pop
cli
xor
add
add
dec
repnz
mov
add
and
arpl
add
fisttpl
fs
cmpsl
clc
sbb
ds
shr
outsl
pop
ss
cmp
xchg
aaa
test
adc
add
add
push
icebp
aad
push
add
adc
add
aas
cmp
clc
adc
inc
clc
pop
clc
add
add
insl
lcall
data16
inc
clc
pop
mov
dec
in
in
test
push
sbb
xchg
enter
add
inc
add
mov
lods
and
add
stos
aas
fistl
add
mov
push
clc
std
out
iret
ret
fisttps
add
inc
clc
fwait
outsb
pop
jae
add
add
push
fidivrl
lock
and
push
add
fldt
sbb
clc
lods
mov
ljmp
jnp
clc
push
add
add
add
add
jne
xchg
cmp
add
lods
pop
jle
dec
jno
add
xchg
dec
adc
add
xor
add
cmp
add
xchg
in
xor
add
add
cmp
in
adc
add
add
fwait
add
add
add
mov
mov
clc
jle
mov
xor
add
mov
add
inc
clc
jp
ret
add
outsl
popf
nop
ja
cmpsb
clc
mov
mov
clc
decb
clc
iret
lcall
inc
add
lods
repnz
jg
add
xchg
cmc
mov
dec
test
lret
jle
jge
add
xchg
or
arpl
add
cltd
dec
and
add
add
insl
xor
add
xor
add
xchg
into
pop
ss
inc
clc
iret
cmp
clc
cmp
and
add
addr16
jb
add
or
out
and
ret
and
xchg
fbstp
add
jnp
hlt
fidivrs
inc
clc
adc
out
aas
imul
fiadds
add
pop
imul
add
add
add
ss
add
cmp
pop
push
mov
dec
and
add
xor
add
clc
je
not
mov
jl
sbb
aas
xchg
push
lods
lock
out
shll
add
sti
dec
cmp
clc
jl
fsubr
addr16
jl
cmp
mov
popa
add
icebp
xchg
int
jo
add
sbb
dec
icebp
pop
lods
and
add
add
jno
add
jns
pop
ret
scas
lret
lret
add
add
add
stc
mov
pop
or
out
jecxz
mov
add
jecxz
pusha
add
lods
jl
pusha
add
stc
ljmp
jo
add
clc
es
daa
clc
lret
dec
sbb
add
add
je
jmp
mov
clc
test
insl
mov
sbb
negb
out
ja
push
add
jl
incb
clc
jns
add
add
clc
push
pop
clc
mov
add
test
clc
dec
sbb
add
push
add
and
add
and
add
in
pop
insl
mov
clc
mov
fidivl
mov
xlat
loop
imul
jns
pop
xor
cmp
arpl
add
mov
clc
idivl
mov
loop
sahf
xor
lahf
sahf
mov
cmp
std
jge
sbb
cli
lea
ret
clc
push
add
aas
dec
dec
inc
clc
into
xbegin
in
bound
add
add
xor
add
clc
clc
pop
arpl
add
add
aad
add
sti
stc
arpl
add
inc
clc
jbe
add
cmp
xchg
inc
add
jnp
push
clc
enter
clc
stos
push
clc
clc
jmp
xchg
fs
pop
mov
fimuls
add
inc
clc
jbe,pt
xor
add
popa
add
insl
cmp
adc
fildll
clc
pop
mov
cmp
inc
clc
jae
add
cwtl
adc
add
add
clc
pop
clc
xchg
cmp
scas
iret
push
push
add
sbb
add
xor
add
add
repnz
hlt
xchg
data16
arpl
add
push
add
mov
add
mov
dec
bound
add
mov
clc
out
adc
add
sbb
add
xor
add
add
add
clc
mov
aas
leave
cmpsl
clc
dec
lock
xchg
sar
enter
jbe
clc
loope
dec
inc
add
cmp
jae
add
pusha
add
cmp
mov
imul
xor
sbb
jmp
enter
lods
and
add
jo
add
xor
add
add
popl
cmc
leave
int
ret
clc
mov
shlb
clc
fiadds
add
sbb
repz
add
pop
insb
push
add
loope
pusha
add
mov
loopne
fadds
add
jne
add
daa
clc
pop
push
jecxz
mov
xchg
xor
add
movsl
clc
sbb
add
clc
add
clc
pop
xchg
das
mov
add
int
jle
inc
clc
push
add
inc
clc
dec
jl
aaa
xor
add
iret
cmp
je
add
push
xor
add
add
jmp
mov
pop
insb
add
lret
test
cmp
out
or
jge
sub
movsb
clc
jo
add
imul
lret
repnz
add
insb
mov
into
movsl
clc
aas
lcall
mov
clc
sbb
add
dec
aas
fadds
add
cmp
repnz
cs
sar
pusha
add
bound
add
clc
add
add
gs
das
fs
inc
add
inc
add
cli
out
js
inc
clc
nop
cmp
add
bound
add
add
add
sub
leave
out
fwait
jp
cmpsl
clc
pop
imul
das
loopne
daa
clc
addr16
mov
add
clc
push
sub
cmp
and
dec
xlat
hlt
jecxz
popa
add
jg
aaa
lods
push
clc
lcall
sub
pop
mov
clc
lods
sub
clc
into
test
scas
adc
add
add
mov
clc
mov
add
clc
inc
clc
clc
mov
add
add
test
xabort
sbb
add
imul
xor
add
pusha
add
dec
scas
mov
push
xchg
cltd
movsb
clc
lock
clc
jo
add
cmpsl
clc
leave
sbb
push
add
test
js
clc
sbb
push
adc
and
add
add
dec
cld
cltd
mov
add
xchg
mov
jae
add
sub
xchg
ljmp
clc
mov
clc
sbb
mov
addr16
aam
add
aam
imul
lret
out
push
add
enter
add
clc
sub
clc
popf
mov
clc
cmpsb
clc
cld
jnp
mov
clc
es
xor
push
jp
fstl
add
add
mov
clc
add
add
mov
mov
add
icebp
mov
inc
clc
cmp
pop
or
clc
in
cld
push
incb
inc
add
inc
add
xchg
stos
rclb
add
jmp
clc
int
pop
clc
cwtl
mov
add
rorb
pop
fwait
aas
mov
add
insl
sbb
sar
push
xchg
inc
add
xchg
and
add
clc
mov
mov
lods
xchg
xchg
mov
rcr
inc
clc
cmp
mov
xbegin
jl
add
jns
icebp
shrl
hlt
add
mov
insb
push
cltd
mov
adc
add
add
int
mov
ret
clc
or
add
roll
xor
add
xor
add
mov
sub
mov
shll
clc
jle
lret
data16
mov
add
add
jmp
xchg
push
inc
add
jnp
rcrb
daa
clc
or
imul
jmp
clc
xchg
mov
pop
pushf
sar
cld
or
pavgb
mov
fcompl
add
sbb
cmp
movsb
clc
jecxz
push
add
pusha
add
mov
sti
insl
movsl
clc
addr16
aaa
lcall
daa
clc
or
movsl
clc
mov
pop
xor
add
add
xor
add
fisubrl
jb
add
adc
add
and
add
ss
add
add
sbb
test
clc
adc
clc
fs
out
dec
cltd
loop
mov
add
xchg
adc
mov
xor
lahf
cmpsl
clc
call
dec
xor
aam
clc
mov
inc
clc
scas
jnp
or
clc
aad
push
push
add
test
in
pop
dec
sbb
clc
loope
jg
insb
aam
cmp
xchg
out
pop
pop
fsts
clc
cmp
mov
stos
or
clc
xor
add
jg
adc
add
add
mov
clc
cmp
mov
repz
data16
xchg
sub
clc
xchg
into
loop
pushf
mov
xor
add
add
test
mov
clc
dec
test
inc
add
into
ficoms
add
xchg
xchg
cmpsb
clc
sarl
jg
cmp
add
jg
adc
add
pop
xchg
xchg
and
add
clc
bound
add
add
cmpsb
clc
jne
push
movsl
clc
iret
stc
adc
add
cmp
popf
ljmp
add
inc
add
mov
in
pop
movsl
clc
cmp
xchg
jno
add
clc
int3
sbb
jg
cmp
push
add
daa
clc
int
dec
addr16
arpl
add
mov
inc
add
mov
out
dec
push
clc
xor
add
lods
mov
add
push
pop
fsubr
enter
insl
into
test
pop
call
mov
sbb
xchg
sbb
imul
clc
mov
xchg
push
aad
clc
mov
mov
add
sbb
in
or
xor
add
clc
sbb
add
clc
lock
add
push
pop
pop
xor
add
or
add
clc
js
das
mov
ret
clc
mov
idiv
enter
add
cmp
xor
lea
add
adc
add
jle
add
inc
clc
add
ss
sub
jne
lahf
pop
jecxz
and
add
clc
xchg
jns
clc
sub
mov
mov
clc
int
xabort
clc
sar
data16
notb
loop
push
add
or
dec
ds
push
add
lret
decl
clc
dec
aas
mov
mov
daa
clc
sbb
mov
clc
inc
clc
lret
aad
add
movsb
clc
jge
add
sub
clc
mov
clc
pop
cmc
mov
clc
push
ret
jnp
mov
add
ja
and
add
fnstenv
stos
pushl
sub
data16
jns
xor
add
cmp
inc
add
sti
aam
clc
mov
push
int
push
add
js
dec
pop
ljmp
add
fdivrp
test
mov
xchg
jmp
dec
icebp
cld
notb
cmp
push
imul
fwait
jl
ds
sbb
add
push
add
pop
and
add
mov
pop
sub
xor
add
clc
mov
add
cmpsb
clc
adc
add
out
and
or
add
arpl
add
dec
jno
add
xchg
cld
mov
mov
push
cli
insb
lods
fldt
gs
mov
add
add
add
jg
jle
jl
xchg
xbegin
insb
repz
das
jae
add
lcall
add
mov
jno
add
add
push
addr16
inc
add
movsb
clc
ss
fcmovnbe
cmp
cmp
addr16
mov
insl
addr16
xchg
mov
clc
add
add
jge
or
clc
push
add
jne
ljmp
in
test
sbb
add
xchg
mov
fsubrl
cmpsb
clc
cmp
add
in
mov
add
add
das
sub
mov
clc
inc
clc
inc
clc
adc
push
mov
mov
jmp
xchg
ds
cmp
int
outsb
push
add
idivb
jp
cmpsl
clc
cmp
sahf
mov
pop
pop
adc
clc
pop
mov
mov
clc
loopne
cli
inc
clc
cmp
pop
loopne
repz
clc
sub
ret
out
push
mov
ds
jmp
lods
push
add
jmp
clc
pushf
jne
pop
dec
dec
push
add
add
inc
add
iret
dec
cmp
add
ja
mov
xchg
pop
addr16
icebp
or
push
add
dec
jmp
push
add
movsl
clc
push
add
push
fcoml
cmp
clc
iret
jnp
jne
mov
sbb
clc
push
jns
hlt
in
cli
push
clc
pop
cwtl
ljmp
clc
movsb
clc
cmpsb
clc
and
mov
jbe
aad
clc
int
add
cmp
mov
in
cmp
push
sbb
jle
mov
in
pop
flds
add
jns
clc
stos
aad
mov
add
add
sub
clc
nop
movsl
clc
pop
clc
adc
add
clc
frstor
add
ret
ljmp
add
clc
xchg
and
add
adc
add
clc
xchg
dec
dec
or
add
add
imul
mov
adc
add
movzwl
jle
cmp
pop
int
fadds
popa
add
jno
add
add
xor
add
sarb
clc
outsb
jno
add
clc
in
push
add
popa
add
mov
scas
push
pusha
add
outsl
popf
bound
add
clc
add
adc
add
add
fcomps
add
xchg
out
xchg
sar
leave
inc
clc
das
test
and
add
sti
adc
clc
sbb
add
hlt
es
and
inc
add
ljmp
clc
mov
add
sbb
add
add
push
clc
pop
add
add
out
xchg
loopne
xchg
hlt
mov
mov
sar
add
jecxz
jmp
sub
adc
xor
add
mov
mov
pop
cmp
jbe
out
jns
clc
and
add
add
add
xor
jmp
int3
pop
clc
pop
gs
repz
push
add
mov
int
test
xor
add
movsl
clc
xor
add
cmp
gs
cmp
mov
daa
clc
xabort
clc
loope
inc
add
iret
pop
or
clc
rcll
mov
add
add
test
loop
jae
add
inc
add
mov
insl
sbb
mov
pop
xchg
adc
add
add
add
js
mov
clc
cmp
shlb
clc
lahf
xor
add
scas
inc
add
pop
xor
add
add
mov
add
pop
cmp
clc
sbb
lret
or
add
nop
dec
enter
shrb
clc
push
cmp
ja
loopne
push
mov
mov
clc
mov
sub
leave
mov
fsubrl
add
insb
dec
lret
xchg
or
fnstenv
jge
add
inc
clc
jle
lret
clc
cmc
iret
inc
clc
cmp
scas
mov
sub
clc
xor
call
add
inc
add
call
pop
mov
clc
insb
pop
leave
sti
mov
xbegin
and
add
add
popf
int
and
loopne
sbb
scas
imull
clc
movsl
clc
test
daa
clc
stos
add
mov
mov
dec
adc
add
clc
inc
clc
fldt
cmp
scas
ss
sbb
add
cwtl
xchg
cli
jns
clc
sub
clc
popf
add
add
int3
pop
or
mov
test
xor
add
out
sub
clc
adc
insl
xabort
jae
add
fmull
add
cld
adc
add
stos
js
movsb
clc
push
add
jmp
xabort
lcall
clc
testb
cltd
xor
repz
add
add
clc
xchg
mov
xor
add
inc
clc
out
ja
das
jne
cmpsb
clc
inc
add
sbb
inc
add
sub
clc
enter
cld
pop
imul
jle
or
imul
mov
add
rorb
dec
bound
add
clc
add
add
inc
clc
mov
add
push
pop
xchg
jno
add
jle
out
cli
mov
fldenv
and
add
mov
decl
lods
lahf
sar
xbegin
add
mov
jmp
clc
mov
mov
pop
pop
std
jle
pop
push
add
cmp
pop
mov
cmp
push
mov
add
or
push
cmpsl
clc
insl
cmp
add
mov
add
test
pop
add
add
ret
clc
in
call
push
jno
add
daa
clc
clc
jo
and
add
pop
imul
adc
push
repnz
xchg
xor
add
inc
clc
cmp
add
sbb
add
cmp
call
add
clc
xor
push
add
pop
clc
mov
add
pop
dec
xor
add
and
add
clc
and
add
imul
pop
clc
int
push
mov
aas
inc
add
dec
mov
clc
loope
cmp
add
xchg
mov
mov
enter
clc
cs
clc
lret
clc
cwtl
fstps
xchg
cmp
or
add
push
add
adc
add
stc
popf
xchg
roll
xor
adc
add
mov
call
and
add
add
pushf
enter
rcr
add
add
add
push
repnz
dec
fldcw
pop
imul
add
add
add
add
add
int
in
roll
clc
add
add
jno
add
clc
cs
clc
mov
cmp
mov
lods
dec
fdivrs
mov
add
jge
clc
pop
arpl
add
clc
cmpsb
clc
sub
add
pop
xchg
gs
sbb
mov
mov
in
or
adc
add
clc
and
add
add
std
jl
rolb
add
pusha
add
inc
add
or
clc
sbb
clc
ret
addr16
ss
cltd
mov
clc
sbb
pop
cmp
js
stc
fwait
data16
data16
lret
cli
push
pop
clc
mov
add
mov
sbb
xchg
mov
lret
mov
pusha
add
loope
gs
fisubrs
clc
cmpsb
clc
aam
daa
clc
mov
add
inc
add
dec
pop
enter
daa
clc
scas
fidivrl
adc
and
add
add
add
lahf
pop
inc
add
insb
xchg
fstps
rcrb
jg
xor
add
aas
popf
add
adc
add
cmp
cli
ret
clc
push
ret
cmp
clc
mov
mov
inc
clc
jb
add
jle
xor
add
clc
sbb
add
fs
or
stos
dec
xor
enter
arpl
add
xchg
fnop
and
add
test
add
and
add
push
scas
test
xor
add
clc
mov
add
push
add
push
pop
sbb
clc
xlat
adc
mov
clc
jecxz
inc
add
imul
or
sbb
lods
xchg
push
scas
inc
clc
inc
add
dec
add
add
clc
int3
fidivl
add
gs
imul
xchg
inc
clc
inc
clc
leave
icebp
dec
es
xbegin
data16
or
cmp
aas
pop
loop
data16
mov
add
ret
xchg
mov
ret
clc
cmp
test
sbb
add
pop
ret
clc
int
decl
clc
xchg
jle
clc
push
clc
pop
add
add
pusha
add
inc
add
mov
in
adc
cmp
sti
sarb
ret
clc
dec
push
data16
cmp
clc
cmp
push
clc
leave
and
clc
xor
add
add
sub
jecxz
add
add
repz
mov
mov
add
mov
cmc
and
add
push
sbb
inc
clc
pop
and
in
pusha
add
pop
push
mov
xor
add
add
inc
clc
sub
cmp
cmc
sub
add
ret
clc
mov
clc
and
cmp
jp
rclb
clc
out
stos
ds
clc
cmp
lods
mov
dec
hlt
in
xor
add
out
xor
pushf
xor
add
repnz
out
out
xchg
insl
add
add
clc
loopne
roll
leave
icebp
repz
add
lret
clc
pop
jl
jo
add
add
xchg
pop
outsb
sbb
cmp
pop
sub
mov
cmp
dec
pop
push
push
out
dec
pop
adc
add
popa
add
xchg
aam
sub
std
test
cmpsb
clc
shll
pop
and
add
fs
jge
clc
mov
cmp
add
daa
clc
sar
negb
daa
clc
sub
test
add
sar
xchg
cmp
add
add
out
cmp
fimull
cmc
cmc
inc
add
fcomi
sbb
dec
mov
xor
add
pop
fwait
aaa
cmp
mov
add
add
add
pop
testb
pop
xchg
jecxz
sti
lret
clc
cmpsb
clc
inc
clc
sub
add
mov
push
add
rcl
sti
jnp
or
testl
push
inc
add
cmp
clc
jg
adc
add
add
add
clc
mov
xor
add
ja
cltd
clc
inc
clc
push
inc
add
sarb
push
jo
add
mov
lea
lahf
mov
cmp
adc
add
inc
add
xlat
sub
clc
or
add
mov
sub
add
clc
mov
jge
test
add
jae
add
out
add
add
pop
bound
add
aas
cmp
clc
shl
clc
add
add
xchg
cmp
clc
dec
sbb
or
cs
adc
cmpsl
clc
xabort
add
scas
sub
in
int
clc
mov
cmpsb
clc
pop
setbe
add
sub
push
imul
add
cs
mov
clc
cmp
push
and
add
push
and
add
add
out
das
inc
clc
mov
clc
cmp
xchg
pop
cli
in
hlt
js
add
sub
jle
add
jbe
rolb
clc
push
add
pop
int
inc
add
dec
xor
add
clc
aam
pop
xor
add
ljmp
ss
sarl
add
sub
push
dec
pop
cwtl
jo
add
push
xchg
loop
add
add
sbb
xchg
adc
loop
mov
aad
inc
clc
or
sub
pop
jg
push
push
add
cmpsb
clc
popf
xbegin
clc
stos
cld
push
fbstp
add
mov
pop
jb
add
push
add
push
add
push
add
ja
clc
mov
sbb
add
test
sub
or
clc
adc
add
clc
sub
add
jno
add
clc
sahf
pop
fimull
add
out
sbb
xchg
xchg
insb
xbegin
clc
sbb
jae
add
add
jae
add
jnp
clc
inc
clc
mov
clc
mulb
ds
mov
daa
clc
cmp
add
fwait
lcall
lea
mov
cmpsb
clc
mov
cs
insb
push
das
xor
add
cmpsl
clc
fbstp
fisttpll
clc
scas
test
or
jno
add
or
add
cmp
stos
mov
enter
push
in
pop
clc
push
clc
and
add
fstl
add
lock
aam
int3
sar
push
add
push
cmp
clc
stos
jecxz
ds
clc
pop
movsl
clc
mov
loop
jmp
xchg
jno
add
pusha
add
fdivl
mov
mov
add
into
dec
xchg
stc
jb
add
clc
mov
sarb
sar
addr16
mov
adc
out
push
add
mov
leave
pop
out
jg
mov
xchg
loopne
addr16
xor
add
and
add
xchg
cmp
std
shl
cmp
jle
clc
cmp
xchg
pop
gs
shll
add
enter
test
cmp
add
sub
pop
mov
repz
clc
dec
push
add
add
add
push
ss
add
imul
clc
push
clc
pop
test
inc
clc
in
pushf
insb
arpl
add
pop
mov
mov
add
ret
clc
dec
push
jo
add
clc
jb
add
add
aaa
stos
in
dec
or
sub
mov
into
popa
add
pop
jnp
sbb
outsb
call
ret
push
add
mov
and
add
xchg
xchg
iret
xchg
daa
clc
and
add
add
pop
xchg
pop
add
add
or
pop
pop
loop
mov
ret
ffreep
clc
jg
lcall
cmpsl
clc
mov
add
fildl
clc
pop
pop
cmp
add
jnp
add
mov
das
jnp
aas
adc
rcrb
add
stos
mov
aas
xbegin
add
loopne
adc
add
insl
xor
add
int
add
add
clc
out
call
add
out
push
add
jne
push
dec
jecxz
pop
in
mov
or
ss
mov
int3
mov
xchg
jne
mov
ret
add
add
sahf
cld
xchg
push
mov
clc
jb
add
add
clc
out
xabort
xchg
mov
add
es
inc
clc
call
in
jns
xor
add
add
ret
clc
mov
sar
add
cmp
test
repz
dec
xchg
sbb
pop
ds
clc
cmp
loope
mov
clc
xor
add
add
clc
xor
add
mov
fsubrs
mov
mov
sar
clc
xchg
fwait
xor
add
add
add
add
push
add
shll
add
arpl
add
jne
clc
mov
into
cli
mov
fiaddl
clc
out
or
clc
jmp
sti
je
add
jl
xbegin
pushf
add
das
stos
cmpsl
clc
loopne
pop
add
add
clc
mov
add
aas
xchg
jae
add
fiadds
add
mov
stos
aaa
in
jecxz
in
xchg
cmpsl
clc
jmp
xor
add
scas
stc
push
add
inc
add
push
cmp
int
dec
aad
sub
addr16
xor
add
xchg
test
ljmp
lods
in
sarb
jecxz
pop
clc
mov
inc
clc
roll
pop
pop
mov
aaa
push
pop
add
add
int
xchg
inc
clc
jae
add
push
mov
cs
mov
xor
lret
icebp
xchg
loopne
cmp
push
pushf
sbb
pop
clc
mov
inc
add
gs
repnz
jl
cmp
sbb
inc
clc
add
add
add
add
jb
add
jb
add
ljmp
add
add
mov
fwait
jnp
lock
clc
add
ret
clc
fwait
pop
xchg
into
mov
out
scas
pop
mov
mov
lods
pop
imul
fildll
clc
xabort
add
sub
or
clc
jnp
push
add
cmp
clc
cltd
std
xchg
fs
jae
add
in
xchg
mov
in
stos
jle
add
push
lahf
sbb
clc
cmpsb
clc
mov
clc
adc
cmpsb
clc
jp
data16
test
cmpsl
clc
inc
add
fwait
jae
add
add
dec
enter
das
mov
js
xor
add
mov
add
popf
out
in
pop
inc
clc
pop
cmp
jp
out
xchg
and
add
jge
add
test
push
cmp
clc
jg
inc
add
cmp
add
in
add
add
and
bound
add
dec
push
inc
add
pop
and
add
add
dec
cmp
adc
add
sub
and
add
clc
mov
add
sub
lret
dec
xor
sar
cmp
clc
call
fisttpll
mov
clc
xor
add
insb
and
add
mov
add
cmc
stc
add
add
fbstp
xor
add
mov
add
xlat
push
cwtl
dec
xor
add
clc
jl
cld
rolb
add
fcmovnb
clc
jle
cmp
mov
mov
sahf
and
add
pop
inc
add
pop
repz
mov
sar
add
xchg
ficoml
mov
clc
xchg
ja
fisttps
movsl
clc
clc
push
add
xor
sar
clc
xlat
push
add
bound
add
mov
xor
add
clc
lods
in
xlat
push
add
filds
ss
pop
inc
add
pop
lods
sub
imul
xchg
sub
add
push
mov
jno
add
clc
jmp
insl
aad
out
xchg
imul
or
jge
pop
in
in
repnz
shl
clc
lret
pop
clc
xlat
faddp
clc
jp
std
fwait
pop
mov
pop
cmp
mov
clc
repz
jo
add
and
pop
sbb
sbb
add
add
add
or
jae
add
add
test
test
mov
sub
movsb
clc
adc
adc
add
mov
add
test
or
clc
jg
clc
shr
enter
sarb
fcompl
push
loopne
mov
add
adc
dec
mov
nop
in
push
push
add
mov
clc
inc
add
std
mov
dec
sbb
dec
in
sti
fs
mov
clc
push
add
adc
xchg
lods
repnz
into
xbegin
loop
adc
add
add
jecxz
adc
add
add
iret
jmp
inc
clc
test
mov
clc
test
jno
add
inc
add
xor
add
sbb
clc
add
add
dec
pop
push
clc
push
xchg
pop
clc
inc
clc
aas
mov
clc
mov
clc
sub
sub
add
or
xchg
sbb
xchg
jno
add
sbb
add
icebp
jne
jle
mov
jl,pt
clc
mov
outsb
test
dec
mov
add
xchg
push
jmp
leave
ds
or
outsb
xchg
arpl
add
out
xchg
mov
imull
adc
add
clc
ret
out
fs
and
add
add
jle
cmp
lret
rolb
dec
xchg
in
add
data16
xabort
add
lahf
cmp
xor
outsb
cwtl
and
jns
add
out
or
clc
cmp
clc
xor
xbegin
add
xor
add
clc
cs
clc
repz
mov
or
shlb
scas
and
add
add
int3
inc
clc
fcos
inc
clc
xor
add
ljmp
sbb
add
test
cmp
add
xchg
jae
add
clc
add
fsubl
add
and
add
cmp
daa
clc
imul
mov
clc
gs
cltd
and
xchg
and
add
movsb
clc
mov
add
sbb
clc
mov
cs
fimull
clc
scas
xchg
imul
pop
cmp
xor
add
inc
add
gs
testb
push
add
rclb
add
mov
inc
clc
in
leave
or
clc
pop
outsl
stc
scas
das
call
daa
clc
jne,pt
ud1
add
aad
clc
dec
clc
inc
add
cmp
dec
push
lcall
add
and
add
add
cmp
out
or
and
add
push
pop
clc
mov
loopne
jp
jle
cli
push
add
ja
xor
std
xchg
mov
jne
clc
add
add
clc
js
mov
inc
clc
popf
ret
clc
sub
cmp
cmpsb
clc
dec
fiaddl
sarb
cmpsb
clc
mov
clc
sbb
mov
clc
scas
push
push
mov
dec
imul
xchg
mov
pop
xchg
daa
clc
test
push
stc
jb
add
add
lahf
inc
clc
pop
call
leave
mov
clc
or
sarl
sti
mov
out
test
add
push
clc
jo
add
dec
iret
std
iret
mov
add
insb
enter
dec
add
add
dec
cmp
add
push
add
cmp
stos
sub
lret
aaa
pop
repnz
aas
mov
imul
dec
out
xor
add
xchg
and
xor
add
clc
cmp
clc
lock
clc
inc
clc
dec
dec
mov
cld
in
sbb
add
sar
fisttps
add
push
add
and
add
clc
mov
cltd
cmp
iret
mov
mov
sti
push
mov
fnstcw
mov
xchg
cmp
or
mov
clc
or
add
repz
dec
pop
sub
xor
mov
out
jmp
push
lret
clc
or
shlb
clc
inc
add
jle
roll
add
addr16
mov
clc
jbe
sahf
and
push
out
adc
clc
sbb
dec
xor
add
sahf
mov
leave
and
add
dec
scas
test
pop
xchg
mov
mov
clc
adc
add
clc
clc
sbb
lods
hlt
psubsw
add
cwtl
xor
add
push
insb
dec
sar
add
fnstenv
pop
clc
popa
add
sar
clc
aas
pop
mov
push
in
mov
arpl
add
clc
jmp
clc
or
popf
and
add
mov
adc
add
jl
daa
clc
aad
test
inc
clc
mov
adc
aam
das
ret
test
add
add
clc
popf
mov
movsb
clc
cltd
enter
std
push
add
xchg
push
add
sub
add
pop
test
pop
xor
add
loop
bound
add
push
test
jp
lahf
xchg
inc
add
xchg
jl
repz
jmp
push
pusha
add
je
push
add
loope
or
pop
dec
mov
pop
and
add
add
aam
aas
push
inc
add
and
add
add
add
sbb
clc
mov
xor
add
add
fistpll
sbb
ss
clc
sar
and
adc
add
out
jnp
sbb
popa
add
leave
cli
push
mov
pop
icebp
inc
clc
data16
pop
jp
mov
inc
add
daa
clc
mov
icebp
mov
mov
add
jg
add
out
insl
jo
add
add
sub
mov
jmp
clc
sbb
adc
xchg
out
repnz
fisubrs
mov
clc
fisttpll
clc
cmp
gs
sar
jg
sub
add
mov
sbb
sar
add
aas
imul
mov
xor
add
clc
neg
popa
add
fldenv
add
jle
clc
nop
inc
add
test
pusha
add
test
sub
clc
rol
clc
loopne
dec
in
loop
out
sti
fcomp
scas
mov
es
jmp
clc
jmp
test
jns
cmp
push
add
lods
js
out
xchg
inc
clc
dec
sub
clc
cld
cmpsl
clc
adc
add
add
sub
inc
add
cmp
mov
add
push
pop
clc
xchg
cs
clc
cmp
repz
clc
push
cmp
add
xlat
call
fidivrs
mov
xchg
ss
lods
jl
inc
add
fwait
and
jl
mov
push
add
lea
mov
clc
push
std
dec
sti
test
test
xor
clc
jnp
pop
stos
mov
add
push
cmp
inc
add
insl
pop
out
pusha
add
cltd
testb
xlat
mov
inc
add
addr16
lea
inc
clc
jne
add
add
leave
into
movsb
clc
mov
sbb
clc
inc
add
das
jne
insb
mov
clc
mov
cmpsl
clc
pop
fdivr
push
xchg
push
add
inc
add
loope
in
jo
add
clc
jl
clc
js
clc
jae
add
mov
add
dec
mov
shlb
inc
add
mov
sbb
hlt
or
clc
jmp
clc
xchg
arpl
add
jl
push
add
mov
xlat
test
clc
inc
clc
pop
sbb
xchg
jmp
push
add
mov
add
dec
xor
add
add
div
int3
xchg
daa
clc
lock
push
mov
add
sbb
cli
jle
add
add
mov
imul
and
add
sub
push
pop
clc
iret
mov
add
mov
xchg
mov
add
clc
mov
mov
clc
lahf
mov
testl
add
xchg
mov
leave
jecxz
fwait
xchg
xchg
ds
fisttpl
fiadds
add
xchg
mov
add
ja
ret
test
jmp
add
test
dec
dec
insb
push
add
add
ret
clc
inc
clc
out
je
out
negb
das
push
sbb
in
pushf
or
clc
clc
mov
stos
mov
not
sub
pushf
lods
shlb
add
add
clc
xchg
hlt
add
add
loop
and
add
and
add
add
lock
xchg
sar
add
inc
add
adc
add
loop
cmc
adc
add
clc
aam
divl
jbe
pop
sub
aaa
insb
mov
mov
clc
sar
fs
adc
add
add
mov
add
clc
or
sub
push
clc
cld
adc
xchg
mov
clc
xchg
shlb
add
call
add
add
jno
add
popf
or
dec
add
add
jnp
add
jnp,pt
clc
push
xor
add
clc
push
add
int3
sahf
xor
add
add
cmpsl
clc
addr16
jb
add
add
pop
cmp
push
aad
clc
lods
jb
add
add
inc
add
ficoms
add
cmp
xchg
loopne
xchg
dec
decl
mov
jl
dec
push
add
arpl
add
stos
adc
add
fsub
clc
int3
leave
cs
clc
and
add
jg
mov
clc
clc
test
mov
add
mov
add
leave
mov
add
add
mov
cmp
clc
clc
xchg
cmp
clc
je
scas
fcmovbe
sbb
push
clc
call
and
clc
xchg
cmp
dec
mov
sub
imulb
clc
test
xchg
xbegin
loop
and
add
add
xor
add
cmc
mulb
add
add
dec
jno
add
loop
adc
add
clc
xor
add
fs
outsl
pop
or
add
hlt
sub
xchg
sub
jns
adc
cmp
and
add
add
xchg
ds
inc
clc
and
add
dec
sub
outsl
es
ds
add
movsl
clc
inc
add
shll
clc
in
sub
sub
movsb
clc
cmc
aaa
lods
xor
add
add
je
in
push
add
sub
ret
clc
cld
outsl
cmp
mov
clc
inc
clc
add
add
dec
mov
clc
xor
add
add
pop
jne
cmp
lock
clc
aam
data16
pushf
outsb
inc
add
jmp
cmp
and
add
bound
add
clc
pop
clc
mov
push
clc
pop
push
add
xchg
clc
mov
sar
mov
or
mov
xor
add
clc
xchg
mov
add
mov
cltd
repnz
movsl
clc
std
cs
sbb
add
or
lods
cmpsb
clc
hlt
jbe
clc
or
loop
lahf
xchg
mov
clc
xabort
lret
movsl
clc
in
or
fwait
xor
clc
lods
clc
dec
push
fscale
rcll
add
lret
cmp
add
bound
add
clc
aam
into
into
mov
stos
pop
in
mov
add
in
mov
outsl
arpl
add
gs
fucomi
in
add
add
mov
add
xchg
and
add
add
sbb
add
xlat
sub
sbb
arpl
add
clc
xor
add
clc
push
add
test
pop
test
add
mov
clc
fidivs
add
adc
add
cs
pop
pushf
out
fs
popa
add
push
clc
cmpsl
clc
inc
clc
mov
clc
fdivrs
sbb
jl
ljmp
mov
add
add
push
add
mov
icebp
mov
clc
imul
clc
mov
add
int
aaa
mov
add
push
and
adc
add
scas
daa
clc
adc
add
add
jbe
jae
add
pop
xchg
xchg
int
das
cmp
or
mov
jno
add
dec
inc
clc
ljmp
clc
sbb
lret
add
add
add
push
add
ja
leave
xor
add
clc
add
add
fcoms
add
add
insl
or
movsl
clc
lret
inc
clc
xchg
pop
mov
xchg
jl
bound
add
clc
aam
iret
out
mov
add
xor
add
clc
sbb
clc
imul
jmp
add
add
and
clc
and
pop
sub
repnz
sbb
bound
add
inc
add
and
add
add
jl
clc
call
dec
leave
iret
pop
pop
pop
adc
add
int
mov
mov
mov
adc
add
clc
mov
arpl
add
add
fs
xchg
das
aaa
fstpt
mov
and
add
add
jb
add
in
mov
aaa
cmpsb
clc
xchg
mov
clc
mov
mov
insb
and
add
jnp
movsl
clc
or
mov
add
mov
add
into
push
clc
aad
clc
sub
add
add
shlb
add
adc
add
inc
add
xor
add
push
fs
xor
loopne
popa
add
jb
add
test
mov
xchg
decb
jge
add
loop
or
outsb
fs
outsb
sbb
mov
sub
clc
ja
imul
jg
mov
clc
ss
insl
fnstcw
or
inc
add
mov
add
enter
mov
add
lea
add
mov
lods
sub
add
test
add
out
stc
pop
clc
xabort
adc
clc
test
cli
arpl
add
add
ret
clc
sbb
add
add
fcomps
cltd
arpl
add
add
sarl
clc
inc
clc
int
mov
add
add
add
xchg
ds
xor
add
clc
push
add
stos
icebp
lock
push
xchg
mov
clc
or
lret
out
mov
clc
or
ljmp
clc
lret
add
mov
add
lret
cmp
add
bound
add
add
dec
inc
clc
and
add
add
add
cmp
add
test
shlb
add
xchg
cli
aaa
sub
pop
call
ss
add
clc
mov
clc
insl
hlt
data16
in
loopne
mov
clc
jne
adc
add
fs
xchg
pop
clc
dec
xchg
xchg
ja
clc
adc
add
aaa
push
jae
add
mov
iret
out
mov
popa
add
rclb
push
add
sub
testl
add
fwait
sbb
inc
clc
cmp
pusha
add
cli
daa
clc
test
movsb
clc
and
push
add
insl
ja
clc
mul
clc
xchg
test
xor
add
and
add
add
data16
dec
push
fsubrl
jmp
fistpl
mov
add
mov
jle
cmp
mov
mov
add
insb
mov
add
das
cmp
sarb
out
pop
cli
sbb
clc
in
fdivrl
clc
inc
add
pop
push
adc
add
clc
iret
das
imul
add
push
sub
clc
xor
add
stc
cmp
add
and
shl
xchg
dec
dec
mov
add
xchg
fs
sti
sbb
bound
add
add
aaa
and
add
leave
jo
add
add
dec
push
add
cmp
jp
add
add
xbegin
fisubs
clc
sbb
mov
test
mov
push
add
int
loop
and
add
and
das
std
jo
add
ret
clc
pushl
add
and
add
add
clc
bound
add
push
add
mov
mov
add
mov
mov
add
cltd
adc
add
mov
add
or
and
add
clc
and
add
clc
dec
imul
clc
outsl
jo
add
aaa
sbb
loop
xor
add
clc
loop
inc
clc
stos
xchg
inc
add
lea
add
inc
add
test
clc
addr16
lea
pushf
cwtl
rol
clc
sarl
mov
jbe
push
mov
add
add
pop
outsl
shl
clc
sar
add
jns
fwait
cmp
or
clc
ficoms
and
add
or
adc
add
inc
add
stos
pop
clc
mov
clc
popf
fistl
add
clc
and
add
add
icebp
jge
add
dec
repnz
xchg
add
add
add
stc
pop
cmp
mov
jecxz
jmp
dec
fnstenv
hlt
jecxz
int3
mov
fs
mov
cmp
clc
and
add
add
push
clc
popf
ret
clc
or
add
push
add
jbe
mov
fisubs
clc
ss
sub
clc
or
clc
ret
clc
fidivrs
daa
clc
push
add
sub
cmp
loop
and
add
mov
add
cmp
add
add
lock
add
inc
clc
pop
mov
add
cmp
clc
xor
add
sbb
clc
fdivr
push
clc
inc
add
test
pusha
add
add
add
pop
loopne
add
add
je
loop
out
push
add
leave
test
add
add
adc
add
xchg
repnz
push
add
xchg
js
clc
xchg
adc
add
insb
daa
clc
cmp
jl
dec
inc
add
push
mov
add
pop
sti
fwait
inc
add
ds
fstp
xchg
jbe
mov
clc
popf
mov
frstor
add
data16
sbb
add
gs
xor
add
xchg
cmp
add
jne
out
pop
cltd
adc
sar
add
outsb
push
clc
or
clc
ret
add
cwtl
sub
clc
add
add
clc
outsb
push
push
cli
xor
add
push
add
mov
clc
inc
clc
test
add
lcall
popf
js
in
jae
add
mov
add
add
add
pop
into
inc
add
xchg
jae
add
addr16
pusha
add
repz
negb
sbb
out
imul
clc
cmp
add
jp
clc
cwtl
mov
mov
sbb
mov
es
mov
add
add
adc
add
clc
fwait
push
int3
push
add
mov
mov
add
sar
clc
iret
arpl
add
mov
daa
clc
sahf
fldl
add
clc
mov
insb
push
pop
mov
scas
ljmp
add
es
loopne
stos
scas
pop
fs
stos
xchg
or
pop
push
add
cmp
sbb
scas
xchg
call
mov
cmp
lea
xchg
inc
clc
mov
mov
add
dec
dec
adc
add
add
pop
je
into
ss
and
add
mov
mov
add
fsubrs
mov
int3
fimuls
inc
clc
cmpsl
clc
xchg
inc
add
clc
sbb
lods
xor
add
inc
add
movsl
clc
stc
std
push
clc
jnp
pop
jo
add
clc
roll
xchg
pusha
add
popa
add
jnp
push
mov
sub
lods
pop
xchg
mov
leave
hlt
out
or
pop
xor
add
add
in
stc
jae
add
add
pop
cs
cltd
adc
add
add
out
nop
xchg
fwait
pop
push
clc
dec
iret
pop
lret
add
sub
mov
sbb
icebp
or
add
imulb
jg
out
sti
add
add
xchg
sbb
in
cmp
sbb
add
sub
inc
clc
in
xlat
push
add
into
push
add
es
dec
clc
lock
sbb
pop
push
clc
fistl
cmp
pop
dec
fisubl
add
lods
pop
push
add
rorl
clc
xchg
xchg
push
or
xchg
in
xchg
cs
mov
jb
add
int
stc
enter
fidivrs
add
icebp
mov
jmp
clc
gs
stos
pop
jge
sub
clc
sti
mov
out
cmp
jbe
add
add
add
mov
cs
pop
gs
jae
add
je
out
and
add
sub
clc
sar
iret
add
add
add
sub
add
add
testb
or
clc
inc
clc
lods
sub
clc
mov
imul
clc
push
or
dec
mov
adc
add
shll
mov
add
and
add
add
mov
loopne
stos
jne
dec
imul
mov
mov
clc
in
outsb
inc
clc
cmp
add
clc
xchg
inc
add
add
jbe
iret
int3
and
add
clc
cmp
js
sub
pop
mov
jns
jbe
xor
clc
mov
add
fwait
hlt
and
add
mov
sbb
clc
clc
pusha
add
mov
mov
inc
clc
inc
clc
dec
pusha
add
lock
clc
sbb
add
xchg
hlt
cmp
fs
sbb
add
inc
clc
push
add
mov
cltd
dec
dec
testb
push
push
scas
sub
xabort
mov
ret
clc
gs
adc
add
add
push
push
mov
jmp
clc
xchg
mov
xor
add
add
xor
add
pushf
mov
data16
js
clc
sbb
enter
loop
adc
add
rorl
lock
loope
dec
int3
or
add
sbb
clc
xor
mov
sar
pop
mov
in
push
add
fcmovnu
inc
add
or
lret
sbb
icebp
das
mov
or
clc
mov
clc
test
movsb
clc
add
add
or
cmp
push
out
data16
mov
addr16
ror
lock
add
add
xor
add
lahf
push
mov
clc
ret
clc
addr16
out
cmp
mov
add
push
clc
ljmp
add
popf
aas
inc
add
sbb
shl
das
jecxz
std
sub
jg
adc
add
sar
filds
add
fadd
clc
stc
pusha
add
pop
das
mov
add
lahf
hlt
jl
jb
add
add
out
std
loopne
in
sbb
add
testl
jo
add
mov
clc
addr16
inc
add
push
aad
add
add
ret
xor
add
mov
or
movsl
clc
mov
add
dec
fcomi
movsl
clc
or
out
insb
cltd
js
jne
arpl
add
add
dec
fsubrl
add
nop
jns
mov
add
adc
sti
cmp
cmc
decb
shll
add
pop
movsl
clc
scas
or
inc
clc
sar
inc
add
in
ljmp
mov
test
push
add
outsb
mov
add
push
clc
sbb
jg
add
xchg
in
xor
add
ljmp
cmp
inc
add
xor
add
ret
clc
dec
mov
add
ds
fdivl
sub
add
outsl
cmp
add
dec
aad
clc
bound
add
leave
movsl
clc
pop
sahf
out
fdivrs
clc
dec
sub
add
inc
add
sar
adc
add
clc
dec
pop
and
sbb
add
add
xchg
mov
xor
add
sub
sub
add
cmp
mov
dec
xor
add
jo
add
add
lods
aaa
xor
add
xchg
lods
dec
push
add
push
add
insb
dec
stos
cmp
clc
cmp
clc
dec
adc
or
add
add
aaa
pop
or
inc
add
mov
inc
add
pop
aam
add
mov
lods
dec
mov
clc
mov
clc
clc
clc
arpl
add
clc
push
add
add
clc
or
fs
sub
ficoms
clc
icebp
gs
js
mov
fstpt
pushf
jmp
pop
mov
out
insl
in
out
clc
jg
add
lods
lea
mov
das
cmpsl
clc
pop
sbb
jmp
inc
clc
sbb
mov
mov
cmp
clc
ljmp
add
add
and
add
clc
es
mov
jl
add
mov
xor
add
clc
adc
add
clc
dec
arpl
add
sahf
mov
add
cmp
pop
sub
add
cld
lcall
xchg
