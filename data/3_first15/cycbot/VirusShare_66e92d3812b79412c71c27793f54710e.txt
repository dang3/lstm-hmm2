mov
out
add
add
mov
cld
cmpsb
dec
outsb
jb
mov
or
jb
mov
add
fdivp
lds
xchg
stos
pusha
add
xchg
jo
mov
leave
mov
sub
stos
sbb
mov
add
add
add
mov
fsub
lret
add
mov
movsb
aad
add
outsb
pop
or
add
hlt
in
popa
mov
mov
lret
and
mov
lcall
mov
int3
mov
sub
adc
mov
cltd
aam
popf
xchg
faddl
aas
loope
stos
gs
addb
out
mov
xchg
push
add
mov
notl
mov
fxtract
imul
and
ds
push
test
mov
mov
adc
mov
and
mov
xlat
jo
jge
int
xchg
push
pop
sbb
adc
mov
mov
mov
cmc
lret
and
mov
mov
icebp
add
add
add
mov
push
movsl
mov
dec
and
fwait
sub
enter
mov
add
add
fstps
adc
popa
sbb
jbe
add
add
repnz
mov
mov
xor
mov
jge
pop
cld
cwtl
ljmp
mov
dec
pop
and
icebp
inc
push
add
test
fwait
aas
cmpsl
add
imul
or
and
add
inc
test
mov
movsl
enter
and
rolb
mov
scas
in
fisttpl
mov
jge
push
leave
in
jl
sbb
jmp
push
add
mov
inc
add
fisubrs
adc
mov
add
add
fists
xor
mov
mov
in
shl
in
and
sub
jns
sub
jp
int3
testl
mov
outsb
and
mov
adc
mov
cmp
mov
insl
rcr
sub
mov
mov
mov
jne
add
pop
into
rolb
enter
add
jne
sbb
mov
aaa
pop
cmp
push
add
es
outsb
ret
sti
or
xchg
mov
out
pop
sbb
pop
adc
push
xchg
mov
outsl
ret
addb
call
ja
loope
addb
out
jo
mov
add
and
rolb
inc
add
gs
test
mov
add
loopne
mov
sti
xchg
repnz
std
pop
dec
sti
sar
orl
cmpsb
sbb
mov
mov
mov
lahf
lcall
pusha
add
mulb
add
cli
push
add
rolb
mov
add
add
arpl
ja
xchg
sub
rolb
mov
lock
adc
lods
xchg
flds
add
mov
pop
fsub
inc
jbe
add
add
push
add
punpcklwd
add
dec
aaa
add
xchg
stos
adc
insl
int
mov
cli
add
mov
inc
jmp
mov
test
or
mov
mov
push
mov
add
imul
mov
mov
cmp
pop
out
push
or
mulb
pmaxsw
sbb
mov
sbb
sarl
insb
out
insb
jle
in
ja
fwait
add
mov
pushf
inc
xchg
in
mov
insb
pop
xlat
add
ja
add
dec
incb
loop
mov
testb
add
xchg
add
xor
lcall
add
add
add
add
adc
mov
lahf
fs
dec
mov
adc
mov
repz
mov
out
inc
add
mov
jmp
add
or
outsb
ffree
push
shll
add
in
jl
mov
imul
mov
out
push
icebp
xchg
lahf
push
das
mov
add
adc
lcall
testb
mov
add
add
jnp
xor
mov
jle
sbb
push
add
jo
mov
mov
ds
leave
js
sbb
add
xchg
inc
mov
xlat
mov
in
add
addr16
mul
cmpsl
repz
mov
addr16
test
fmuls
rolb
arpl
mov
add
dec
jp
add
mov
push
mov
aas
or
cltd
pushf
pop
dec
mov
push
sbb
adc
xor
mov
add
add
mov
adc
bound
mov
stc
xor
dec
fidivs
mov
mov
mov
sbb
dec
stos
pusha
add
dec
decb
gs
dec
jl
fimuls
jb
mov
aam
rolb
sbb
push
rcll
or
cmpsb
mov
xchg
jmp
add
loopne
mov
add
int3
adc
mov
mov
stos
out
popa
cmp
mov
inc
fiadds
add
clc
mov
mov
sbb
mov
lcall
mov
mov
gs
add
xor
pop
insb
xchg
sahf
pop
push
arpl
push
mov
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
push
or
and
add
mov
pop
push
add
adc
gs
aas
push
xchg
stos
ds
fidivs
flds
stc
push
jle
xchg
inc
dec
movsb
pusha
add
into
cmpsl
cmp
pusha
add
xchg
add
push
pop
test
pop
lahf
pop
cmp
and
mov
or
add
scas
fwait
mov
push
imul
fwait
cld
adc
mov
xor
mov
jmp
test
popw
addr16
xchg
push
add
popf
mov
xor
mov
stos
lea
addb
xchg
out
dec
aaa
daa
adc
add
push
jg
movsb
lea
gs
scas
xor
adc
mov
daa
sub
mov
add
cmp
and
int3
fwait
outsl
pop
sbb
sub
std
addl
movsl
dec
mov
add
mov
push
pop
adc
loopne
mov
pop
push
add
mov
stos
pop
outsb
or
int3
out
ficomps
and
in
test
movsl
fxch
stos
mov
insl
sbb
push
mov
mov
inc
fs
adc
cmp
add
addb
scas
sbb
ss
add
lods
jl
aam
leave
in
repnz
mov
in
dec
adc
sbb
xchg
dec
jno
cmp
mov
repz
and
add
mov
add
aaa
hlt
lret
pop
or
xor
mov
add
into
sub
mov
mov
mov
movsb
call
add
movsl
andl
jmp
test
repz
ret
stc
mov
push
push
mov
movsb
rolb
mov
add
push
push
or
dec
sub
cld
movsl
jbe
or
mov
xor
repnz
mov
les
arpl
mov
sbb
xchg
add
mov
adc
or
or
clc
jno
das
inc
add
cltd
cmp
bound
mov
push
addb
mov
and
mov
fwait
sbb
inc
add
pop
sti
notl
test
add
in
mov
mov
rorl
stos
testb
inc
add
push
xchg
add
mov
add
lahf
pop
cmp
addb
mov
sub
or
out
stc
adc
mov
add
stos
hlt
sbb
jne,pt
enter
mov
jb
mov
ret
divl
xchg
adc
lea
mov
push
rolb
jnp
push
sbb
mov
xor
ljmp
add
and
repz
mov
or
or
faddl
mov
outsl
jg
add
add
popf
xchg
mov
pusha
add
mov
xlat
pop
std
fwait
mov
add
add
mov
mov
sub
out
mov
push
movsl
inc
add
pop
inc
cs
insl
push
rolb
mov
imul
mov
out
jmp
mov
aas
jb
mov
mov
mov
cmp
cwtl
call
lcall
cmp
jecxz
xchg
aam
mov
jne
inc
or
insb
shll
lea
das
jecxz
add
mov
rolb
mov
adc
add
mov
mov
add
cmp
lds
mov
mov
roll
popa
lret
push
dec
scas
sbb
cmpsb
or
add
xlat
dec
mov
mov
mov
or
aad
push
pusha
add
mov
mov
push
pop
adc
push
rcr
pop
mov
mov
mov
std
inc
push
pop
jno
stos
fs
mov
mov
pop
leave
fs
and
pop
int3
cmp
add
out
xorl
pop
outsb
mov
or
jbe
loope
add
mov
mov
sub
lds
add
mov
mov
adc
enter
mov
rolb
mov
out
popf
mov
push
add
and
mov
ljmp
enter
scas
cli
push
lods
jge
int3
enter
into
aas
stos
shr
ljmp
ret
jne
jb
mov
outsl
add
add
pop
addb
inc
jl
arpl
jp
data16
test
and
and
mov
fists
xchg
in
mov
mov
add
mov
fs
sbb
lcall
mov
adc
imulb
add
mov
mov
dec
lea
aaa
sbb
scas
movsl
and
mov
aaa
addb
dec
mov
aam
pop
bound
mov
scas
scas
std
psllq
xchg
cmc
push
test
mov
add
mov
push
stc
adc
mov
data16
pop
jae
ljmp
and
adc
fs
inc
cmpl
mov
xor
xchg
outsb
xor
jmp
int3
lea
xchg
dec
imull
addb
dec
xchg
repz
ljmp
adc
mov
leave
dec
pushf
movsb
rcll
mov
addr16
add
add
mov
pushf
cmp
xchg
mov
loop
mov
add
pop
pop
arpl
pop
mov
add
addr16
mov
push
ds
dec
popf
rolb
dec
mov
push
add
pusha
add
mov
aad
insl
cltd
pusha
add
pop
xchg
mov
xor
fisubl
cmpsl
add
mov
gs
pop
sub
inc
add
mov
addr16
add
and
cmc
and
popa
ja
sbb
leave
stos
push
frstor
add
jp
sbb
mov
out
cltd
and
mov
bound
mov
add
stos
xchg
cwtl
in
jo
mov
dec
jle
jle
mov
adc
outsl
jg
jmp
mov
dec
negl
mov
inc
jle
rolb
in
in
scas
jecxz
call
jmp
xchg
add
push
cld
jae
mov
sub
xchg
dec
pop
dec
or
or
mov
xlat
lahf
xchg
sub
addb
xor
xchg
ret
aam
sub
pop
mov
scas
push
add
and
dec
js
in
cli
or
add
inc
shll
mov
bound
mov
add
add
outsl
es
mov
popf
dec
shr
sub
mov
push
cmp
stc
aas
rolb
mov
repnz
add
repnz
add
dec
repnz
add
xor
inc
add
lea
mov
xor
or
add
mov
cmp
adc
enter
dec
adc
call
add
cmp
ljmp
lds
push
stc
jno
add
mov
dec
cmpsb
stos
sbb
ret
mov
mov
and
mov
jp
jmp
add
outsl
xchg
fisubrs
dec
mov
or
fsubr
jle
pusha
add
cs
aam
add
jno
cld
daa
pop
adc
mov
out
pop
ja
sbb
lahf
mov
dec
push
fdivrl
pop
aam
mov
add
push
in
lock
add
shrl
fildll
mov
pop
push
mov
outsl
mov
sahf
out
mov
xor
mov
add
ds
jnp
cmp
add
scas
mov
add
pushl
push
xchg
add
jno
loope
inc
dec
sub
data16
mov
mov
jbe
add
and
mov
jnp
lret
pop
push
inc
je
fisttpll
loope
arpl
push
add
add
mov
cmp
hlt
jbe
add
sub
cmp
jp
mulb
sub
adc
mov
into
sbb
add
shll
add
add
push
rolb
mov
add
add
fdivrs
aaa
jmp
leave
push
fnstenv
mov
ret
bound
mov
mov
aam
icebp
cld
mov
sahf
or
out
pop
dec
add
mov
adc
mov
mov
mov
jae
adc
xchg
sbb
add
lea
stc
xor
cs
adc
outsl
xchg
cmc
call
mov
mov
mov
js
add
and
mov
mov
mov
mov
mov
mov
gs
add
test
xchg
sbb
dec
dec
rcrl
xchg
fmuls
add
add
mov
aad
add
mov
scas
cld
add
lods
dec
rolb
mov
aaa
les
jnp
arpl
rolb
cltd
faddp
jb
mov
sbb
mov
in
and
mov
mov
fistps
in
aad
insb
inc
je
pusha
add
cmp
cs
adc
xchg
sub
add
bound
mov
adc
mov
dec
xchg
call
add
add
jno
cmc
add
sub
add
add
dec
pop
lret
add
push
sub
stc
lea
and
xor
mov
mov
les
or
add
add
xlat
into
jns
fbstp
add
and
mov
test
sub
pop
fwait
and
mov
lretw
mov
add
fimuls
roll
add
out
lds
ljmp
or
add
mov
add
adc
mov
and
imul
add
clc
dec
movsb
ja
popa
mov
pop
cmpsb
scas
sub
xchg
pop
cmp
mov
repnz
add
inc
test
mov
inc
mov
add
xchg
add
mov
dec
call
mov
popa
adc
imul
insb
push
add
mov
mov
inc
out
add
inc
add
push
jg
sahf
mov
pop
bound
mov
sub
add
pop
ljmp
in
add
lock
es
sub
repnz
add
addb
es
add
xchg
add
dec
cmpsb
add
push
add
sbb
aaa
sbb
dec
jnp
fnstenv
loopne
mov
mov
mov
sbb
std
aas
cmp
rolb
inc
scas
daa
pop
xchg
popf
ret
adc
les
cmpsb
movsb
imul
sub
ljmp
mov
faddp
add
cmpsb
cmp
jg
lock
pusha
add
mov
test
mov
mov
mov
mov
lods
pop
pop
and
mov
add
mov
mov
add
mov
inc
xchg
ret
sub
mov
in
rorl
repnz
dec
dec
sub
add
mov
pop
rolb
dec
sub
ja
dec
out
aam
mov
mov
add
mov
movsl
fdiv
add
pop
pop
mov
mov
mov
add
sbb
mov
repnz
xchg
dec
fstl
mov
adc
adc
dec
lock
stc
add
enter
jmp
mov
ret
adc
add
xor
sub
mov
inc
mov
push
or
in
jno
cmp
rorl
sarl
mov
shll
cmpsl
cmc
jecxz
xchg
pop
jmp
ds
dec
inc
add
mov
add
iret
jecxz
add
add
mov
iret
mov
xchg
add
cltd
pop
mov
mov
and
jns
mov
sub
or
inc
inc
dec
cld
xlat
call
test
mov
rorl
mov
loop
mov
pop
or
pop
fwait
in
call
test
sub
add
sbb
mov
mov
nop
add
jns
push
add
fidivrs
mov
subl
test
mov
scas
xlat
jmp
jge
add
bound
mov
hlt
mov
popf
xor
xor
addb
jg
aam
add
xchg
stos
inc
sti
add
mov
mov
sub
pop
cmovns
mov
cmc
ja
add
inc
pop
nop
add
ds
add
mov
push
icebp
xchg
in
add
push
jo
mov
xchg
cmp
outsb
scas
or
mov
inc
push
inc
sbb
leave
rolb
mov
out
sub
cld
mov
pop
jo
mov
sub
std
ret
in
outsb
push
inc
push
imul
inc
ljmp
mov
add
add
incb
icebp
ss
push
arpl
mov
jne
leave
pushf
xor
mov
adc
mov
mov
lds
jbe
popa
into
and
mov
jo
mov
insl
cltd
push
add
ret
ljmp
sub
inc
pop
scas
cmp
mov
and
mov
add
dec
cmp
xchg
scas
aaa
jl
dec
sub
or
add
push
fisttpll
dec
jecxz
mov
cs
mov
fbstp
add
mov
sub
cmc
pop
push
push
addr16
cld
push
movsl
aas
in
and
mov
call
test
ret
enter
and
mov
xor
rolb
call
mov
add
mov
add
add
mov
fwait
inc
adc
rolb
mov
cmpsl
mov
sbb
push
out
sahf
sub
es
mul
insl
jb
mov
xchg
jne
jmp
inc
add
addb
decb
add
mov
addb
jl
add
mov
add
mov
push
mov
push
xor
add
adc
mov
dec
jnp
xchg
adc
cmp
push
adc
mov
mov
jp
movsb
rorl
aad
mov
mov
insb
sbb
into
movsb
pop
mov
add
out
fmuls
add
out
add
sahf
dec
pushf
jbe
call
add
and
mov
cmpsl
and
xchg
cwtl
loopne
mov
add
mov
add
push
fwait
ja
imul
mov
mov
pcmpgtd
mov
shrl
js
cmp
add
fxch
repnz
in
lods
inc
test
outsb
rorl
imulb
aam
cwtl
push
add
mov
mov
xchg
mov
add
mov
mov
into
inc
sub
mul
or
mov
lret
ret
lds
cltd
out
ss
out
cld
cmp
enter
jno
lds
add
enter
add
std
imul
inc
mov
add
adc
mov
or
xchg
cmc
cmp
xchg
add
mov
mov
imul
and
mov
mov
mov
jnp
cmpsl
mov
mov
leave
inc
cmp
test
das
xchg
mov
mov
out
sub
pop
popf
inc
mov
in
lods
or
add
xlat
loope
add
jle
add
jmp
lahf
and
mov
push
adc
adc
add
add
and
mov
sbb
mov
inc
mov
mov
inc
stos
push
daa
addr16
add
rep
jmp
addb
pop
xchg
ret
push
int
dec
cmp
inc
cmp
or
movsb
pop
push
add
push
outsl
inc
add
xchg
lods
push
pop
arpl
in
pop
push
jo
mov
mov
lret
lock
xor
dec
clc
pushf
mov
ljmp
in
stos
insb
fwait
mov
and
inc
add
inc
push
fstl
mov
imul
iret
or
mov
pusha
add
fidivrs
int3
movsb
iret
pop
jno
xlat
xor
mov
orl
push
push
bound
mov
cmpsl
in
dec
push
cmp
add
add
mov
sub
mov
mov
lock
testl
mov
test
add
mov
add
mov
mov
out
add
mov
push
lcall
sti
jge
insb
xchg
test
add
ret
fmull
outsb
mov
sbb
cmpsl
cld
rolb
mov
add
cmp
outsl
pop
clc
xor
add
xchg
dec
addr16
mov
and
xchg
ret
fsubrp
js
jmp
mov
or
add
add
add
add
mov
add
leave
pop
repz
fucom
adc
mov
pop
and
mov
add
insl
cwtl
or
and
xchg
add
mov
add
mov
add
addr16
push
and
add
out
in
imul
jmp
loopne
mov
movsb
rorl
lahf
push
cld
fcmovb
add
pop
aas
mov
add
cmp
dec
mov
pop
or
inc
add
mov
jne
xchg
mov
add
mov
and
mov
movsb
scas
xchg
repnz
pop
stos
xor
popf
and
sbb
lret
push
es
add
mov
mov
out
std
insb
fisubl
mov
and
mov
push
cs
fwait
adc
insb
xchg
add
mov
add
gs
mov
mov
jae
cmpsl
jge
add
pop
lret
inc
sub
cmp
add
add
add
int3
cmpsb
or
test
add
mov
xchg
add
add
inc
loop
mov
add
xchg
dec
xchg
mov
add
mov
sbb
inc
hlt
test
jl
cmpsl
call
mov
mov
test
icebp
sbb
and
dec
fldenv
add
add
cmp
dec
jbe
xchg
repz
and
add
sahf
adc
add
jp
dec
int
sub
add
jle
mov
mov
xor
js
mov
add
lahf
pop
imul
mov
rcll
sbb
imul
mov
add
nop
add
hlt
push
sbb
incl
push
xchg
add
add
ret
mov
icebp
jnp
stc
test
or
adc
add
loopne
mov
add
jb
mov
mov
add
jnp
addb
fucompp
test
jg
xchg
shll
das
adc
aas
jmp
jl
inc
in
push
or
sbb
cmp
inc
push
jns
loope
xchg
add
inc
outsl
mov
sub
jecxz
add
fwait
rcrl
add
or
add
fs
or
mov
xchg
out
jnp
add
in
xchg
add
adc
mov
pop
inc
add
mov
fcom
and
sub
lds
sub
jp
rcr
enter
jbe
lret
cmp
iret
mov
fistpll
outsb
mov
gs
int3
push
in
ficompl
cmp
bound
mov
imull
pop
repnz
mov
scas
adc
add
inc
add
jmp
xor
test
cwtl
cld
lahf
push
addb
mov
push
xchg
jmp
mov
sub
add
outsb
scas
negl
imull
dec
lods
mov
mov
aaa
pop
movsl
jg
add
mov
fistl
or
mov
sarl
mov
mov
xchg
stc
sbb
mov
stc
cmp
adc
mov
xchg
jno
add
push
add
mov
or
cmpsl
addr16
jb
mov
push
fdivr
into
lea
ljmp
push
addb
es
adc
mov
std
jnp
outsl
or
add
cmp
add
mov
add
lock
mov
addb
and
add
aam
xchg
push
add
test
xchg
add
xchg
xchg
jecxz
sub
repz
pop
out
decb
jge
movsb
sub
pop
cwtl
out
filds
mov
xor
mov
push
rcll
inc
adc
add
add
inc
aam
add
add
mov
xlat
cmpsl
and
mov
xor
mov
mov
sbb
pop
or
pop
mov
mov
or
cwtl
and
mov
in
arpl
addb
fdivr
fisttpl
pop
lods
sbbl
jg
adc
add
lcall
add
add
pop
mov
mov
test
inc
add
sti
mov
mov
cmpsl
sbb
enter
push
sahf
adc
adc
mov
mov
push
add
cmpsl
insb
jnp
push
add
fldz
rolb
mov
or
addb
or
jo
mov
or
in
jno
push
add
add
push
call
sub
aam
dec
test
pusha
add
dec
jbe
fstpt
cmp
jae
into
and
jge
add
mov
call
aad
add
push
inc
pop
aaa
sbb
xor
mov
jnp
push
jl
repz
pop
fnstsw
mov
add
mov
xchg
add
cmpsl
std
iret
mov
mov
lcall
lret
lods
pop
adc
mov
add
xor
int3
jg
out
jecxz
nop
add
add
push
push
dec
lea
ror
mov
mov
pop
push
jo
mov
jno
jno
add
clc
repz
mov
sti
push
inc
add
movsl
xchg
iret
in
inc
aas
aam
add
mov
aaa
in
testb
xchg
adc
mov
add
mov
cmp
repnz
lock
lock
add
outsb
mov
add
add
hlt
cmc
popf
dec
std
test
sub
add
pop
xor
mov
fcmovb
xchg
add
xor
add
movsb
test
inc
and
mov
leave
jae
fildl
jns
add
fsubrs
cld
fdivl
mov
mov
inc
or
mov
out
fwait
or
mov
xlat
aas
or
ds
mov
inc
shll
pop
and
mov
and
jns
sbb
inc
mov
lret
mov
lcall
mov
roll
mov
mulb
add
arpl
aas
push
rcll
rolb
mov
cmp
mov
add
aad
sahf
out
fcmovnu
jp
xchg
mov
xchg
xchg
mov
pop
sub
push
add
and
adc
mov
mov
loopne
mov
arpl
jnp
daa
and
nop
add
rorl
lods
lcall
pop
icebp
jp
add
xchg
mov
mov
inc
xor
mov
pop
clc
pop
dec
inc
addl
mov
inc
ss
lahf
dec
add
dec
xchg
sbb
je
inc
add
insb
jo
mov
mov
gs
scas
mov
addb
shll
sub
xchg
add
jecxz
in
sub
fwait
dec
mov
push
add
rolb
mov
add
sbb
in
pop
cld
sti
into
jno
add
je
es
add
mov
and
sub
mov
push
add
fcompl
test
sub
add
cmc
mov
fcomps
cmp
loope
add
mov
fcomip
or
rolb
sahf
inc
add
cli
sbb
add
sub
adc
mov
fcoml
add
jmp
xor
mov
adc
mov
dec
and
mov
mov
add
cmp
arpl
sub
add
add
cmp
jmp
mov
scas
popf
mov
out
imul
inc
addr16
mov
push
jb
mov
add
mov
add
lcall
filds
xor
mov
loop
mov
popa
test
mov
dec
scas
pop
sub
lock
or
sub
jbe
jle
or
insb
pop
pop
or
xchg
call
and
mov
loop
mov
ret
adc
mov
fwait
stos
or
cmp
mov
add
jns
add
cmp
addb
xor
shrl
adc
add
add
mov
add
pop
cmp
mov
xor
in
lods
and
mov
jg
xlat
or
push
addb
and
xor
popa
lahf
inc
jno
or
nop
add
loopne
mov
out
orl
movsl
gs
inc
clc
pop
jno
sbb
adc
mov
fwait
sbb
jecxz
jge
fisubrs
xchg
into
loopne
mov
add
mov
push
pop
movsb
dec
fisttps
xchg
scas
imul
imul
in
add
xchg
scas
inc
pop
lahf
pop
scas
xchg
xchg
stos
jne
addr16
dec
jle
mov
add
mov
mov
add
stos
mov
into
mov
testl
mov
popa
sub
push
roll
icebp
jbe
push
out
jp
fnsetpm(287
mov
popf
in
add
mov
mov
xchg
jl
mov
or
pop
movsb
pop
arpl
mov
mov
mov
add
inc
add
push
push
popf
xchg
push
add
fisubl
sub
add
inc
dec
sub
mov
dec
inc
lock
mov
add
sbb
mov
add
sbb
clc
mov
mov
mov
ljmp
addb
xchg
jb
mov
int
add
fldcw
or
test
mov
call
cmp
add
add
mov
sub
dec
cmp
rolb
mov
mov
pop
test
mov
mov
lret
mov
dec
fadds
jnp
mov
mov
mov
daa
aaa
test
pusha
add
add
mov
cld
es
pop
mov
add
hlt
iret
out
cld
pop
jecxz
xchg
add
add
ret
mov
add
add
ljmp
lahf
cld
aam
push
add
add
fstpt
jecxz
shll
sbb
testb
mov
add
xchg
inc
loope
add
into
aad
add
sub
in
adc
mov
or
jae
clc
push
push
mov
add
mov
pusha
add
push
mov
mov
fs
jne
jnp
xor
mov
iret
ds
jo
mov
ja
or
xchg
sbb
jae
cmp
inc
pop
imul
in
ret
in
jle
pop
mov
xchg
xchg
cmpsl
daa
fs
sahf
sub
add
mov
rolb
sbb
pusha
add
mov
bound
mov
data16
add
nop
add
mov
and
fucom
pop
in
imul
push
je
inc
cmp
adc
lods
out
lods
pop
push
xor
mov
add
sub
or
jno
add
mov
cmp
mov
loope
sub
enter
clc
popf
mov
leave
adc
mov
mov
add
cltd
pop
xchg
sub
mov
or
add
mov
mov
add
andl
adc
sub
fwait
inc
outsb
dec
fidivs
pop
pop
jns
jae
add
fsubrl
loope
or
in
cmpl
lods
mov
mov
stos
add
mov
ret
into
ljmp
xchg
add
out
int
pop
es
lods
js
add
mov
add
sub
movsl
cli
cwtl
in
sub
sub
or
cltd
inc
in
je
add
mov
add
je
popa
leave
jecxz
outsb
dec
ja
hlt
xor
add
aad
jmp
andl
mov
int
cltd
mov
mov
adc
mov
mov
aaa
push
lcall
cmp
mov
loope
insb
inc
add
push
add
int3
sub
mov
pushf
adcl
mov
jmp
ret
adc
dec
cli
pop
ss
xlat
cmc
rolb
sub
xor
inc
adc
mov
ja
and
adc
mov
cmp
add
out
je
xor
mov
test
cmc
jne
mov
add
mov
adc
push
cmc
lods
ss
cmp
add
repz
pop
rolb
mov
inc
mov
and
mov
test
int3
ret
adc
push
add
ficomps
les
enter
nop
add
jecxz
sbb
dec
cmp
mov
sub
aas
and
add
mov
mov
sbb
out
test
add
add
lahf
xlat
mov
pop
sub
cmp
inc
into
movsb
sbb
roll
xlat
ss
add
add
mov
in
cmpsl
call
mov
into
pop
add
dec
mov
jg
xor
sbb
out
daa
rcrl
inc
add
insl
xchg
cli
cld
int3
loop
mov
rolb
mov
inc
arpl
sub
fbld
shrl
add
jne
imul
repnz
mov
jbe
push
mov
or
test
and
std
lock
xchg
add
push
addb
xor
mov
test
cmp
test
pop
cmp
or
sub
daa
cli
mov
sbb
adc
rolb
js
aam
mov
imull
imul
jmp
rcl
mov
sbb
add
fildl
popa
pushf
testl
mov
mov
pop
sbb
pop
stos
mov
jbe
add
mov
addb
jae
xlat
das
xchg
addb
mov
imul
lret
aad
jno
add
mov
or
js
notl
sti
or
xchg
mov
dec
and
mov
loop
mov
add
mov
adc
inc
test
mov
inc
add
stos
int
mov
add
mov
add
jmp
mov
sub
bound
mov
add
push
repnz
mov
add
sub
xchg
mov
insl
in
xor
leave
out
adc
in
xchg
pop
test
pusha
add
fs
add
jle
dec
scas
cmp
sbb
push
mov
add
dec
inc
mov
xchg
pop
xchg
je
cld
fdivr
push
sub
adc
mov
pushf
cmpsl
out
push
add
xchg
mov
dec
inc
cwtl
sti
cmp
cs
dec
addb
sub
cmp
mov
sub
lahf
andl
clc
push
dec
mov
mov
mov
adc
jne
sbb
loopne
mov
push
add
pop
mov
dec
jno
aaa
push
push
or
enter
add
mov
callw
sbb
loopne
mov
add
inc
cmp
leave
or
mov
mov
rcpps
pushf
sbb
in
mov
imul
mov
cmc
jmp
aaa
jnp
daa
mov
enter
pop
jmp
and
mov
push
das
jae
fistpll
add
lods
xchg
xor
and
mov
add
mov
sub
int3
das
dec
ret
gs
lret
pop
sbb
jns
jle
lret
addb
in
cltd
sub
adc
dec
xor
mov
add
add
mov
in
movsl
lcall
mov
inc
add
xor
mov
push
push
cmpsb
sub
inc
out
fisttpl
fwait
mov
mov
jg
shll
dec
std
push
add
pop
dec
btc
xor
add
add
pushf
push
aaa
outsb
rolb
mov
stos
stos
push
call
mov
cmp
outsb
dec
push
clc
pmuludq
add
pusha
add
outsb
adc
xchg
adc
jp
out
or
inc
adc
add
mov
and
add
gs
jo
mov
sub
popa
inc
push
ds
xchg
nop
add
mov
hlt
movsl
aas
xchg
loopne
mov
stos
sahf
push
into
mov
jb
mov
inc
add
orl
into
mov
inc
sti
out
int
in
jnp
lret
xor
jo
mov
add
outsl
mov
cmc
pushf
adc
pop
mov
xor
add
nop
add
ss
pop
idivl
rolb
mov
popf
movsb
mov
in
cli
ret
pop
fstpl
lret
xchg
and
push
cli
push
lds
mov
lcall
add
repnz
xchg
add
and
mov
pop
jno
and
mov
sarl
lods
sbb
or
dec
pop
adc
mov
mov
xlat
pop
push
pop
rolb
mov
or
add
fstpl
add
dec
sub
add
mov
es
xlat
and
ds
mov
pop
fsubrs
cli
and
add
insb
xchg
add
xlat
loop
mov
and
in
add
add
xor
push
outsl
mov
test
sub
mov
stos
lods
aam
lods
pushf
cli
enter
clc
mov
push
sub
mov
add
lret
bound
mov
and
je
cmp
add
sub
sbb
add
add
xlat
mov
sbb
jae
add
cmc
mov
stos
movsb
int
movups
mov
notl
mov
mov
or
xchg
or
movsl
jp
mov
mov
xorl
lock
in
add
mov
inc
push
ljmp
push
lods
jp
add
das
pop
pusha
add
xor
mov
jo,pt
mov
jge
les
cmp
fimuls
xchg
es
jno
orl
adc
pop
es
aad
inc
cmp
adc
mov
insl
push
ret
pop
ret
stos
xchg
sbb
add
jp
mov
add
add
fldenv
cmp
xor
sbb
jnp
dec
into
jg
mov
mov
fdivrs
xor
mov
popf
loop
mov
dec
test
icebp
sbb
mov
pop
jp
xchg
js
std
mov
mov
push
add
ret
jno
push
lcall
push
jmp
push
in
dec
mov
mov
icebp
clc
call
lock
push
push
lret
movsl
fdivs
cwtl
adc
hlt
addr16
popa
test
in
jno
movsb
jg
je
dec
pop
lea
repz
leave
nop
add
rolb
mov
inc
rolb
in
nop
add
pop
sti
rcll
mov
xchg
iret
push
aas
sub
das
xchg
cld
mov
add
mov
loopne
mov
and
dec
addb
pop
pop
int3
cmp
add
hlt
mov
fucomi
test
and
imul
mov
mov
lcall
ret
aad
ljmp
mov
add
cld
filds
pushf
imul
pop
outsl
add
push
pop
stos
xchg
decb
jmp
cli
adc
jbe
and
aad
out
jnp
pusha
add
mov
jle
stos
jmp
xchg
movsl
fcompl
imul
outsl
mov
add
sbb
pushf
xor
nop
add
mov
add
outsl
scas
cld
xlat
ljmp
add
or
lock
enter
or
pop
mov
mov
adc
xchg
xchg
daa
hlt
push
sbb
loopne
mov
and
and
push
or
int3
insl
pop
adc
jo
mov
mov
sar
jle
jno
int3
mov
adc
mov
adc
sub
shrl
movsb
sbb
or
and
mov
addr16
push
jmp
add
mov
add
lcall
inc
xlat
cmpsl
push
hlt
jp
add
mov
adc
cli
in
sti
outsl
out
fcomip
fists
and
or
mov
addb
sub
outsb
bound
mov
or
mov
stos
cs
mov
inc
add
icebp
jl
addb
insb
hlt
push
push
insl
add
and
mov
sti
ret
xchg
add
lea
mov
mov
pop
stc
fdiv
add
sub
add
pushf
test
xchg
add
xlat
mov
add
xchg
mov
pop
cld
sub
add
xchg
mov
pop
mov
mov
icebp
popf
int3
and
mov
add
add
add
sub
add
rolb
mov
mov
add
add
rolb
mov
call
imul
push
sub
xor
adc
add
mov
xchg
push
repz
pop
bound
mov
inc
and
mov
sbb
repnz
add
mov
add
mov
pushf
lods
ljmp
out
mov
pushf
cmp
push
negb
inc
icebp
aam
push
sti
dec
and
mov
mov
mov
aas
inc
negb
push
mov
and
jge
fidivrl
mov
repz
aas
jge
cmp
mov
leave
lock
fwait
fs
pop
frstor
leave
sub
sarl
rolb
mov
jmp
stos
jns
movb
rolb
mov
pop
fistl
add
add
xchg
mov
std
cmp
sbb
xchg
add
rolb
rolb
gs
sub
rolb
mov
es
xlat
xchg
popf
mov
rorl
push
inc
or
lea
pop
adc
mov
push
pusha
add
std
inc
daa
mov
jmp
adc
mov
cwtl
mov
bound
mov
test
push
xlat
push
ret
cmc
push
fistpl
mov
fbld
xchg
mov
mov
push
xlat
adc
mov
into
addb
out
pop
insb
mov
mov
adc
mov
int
leave
xchg
xchg
cmp
sbb
shrl
repnz
cmp
add
cmp
call
add
mov
cmp
nop
add
jp
addr16
add
in
fs
add
jno
mov
insb
loopne
mov
mov
add
scas
loopne
mov
in
push
pushf
jp
add
dec
cltd
sti
int3
ja
in
repnz
push
add
add
incb
mov
icebp
lock
rcrl
and
mov
rolb
stos
cs
xchg
inc
stos
cs
test
sbb
push
mov
and
or
fisttps
add
add
add
cmp
pusha
add
add
mov
push
ljmp
add
rolb
mov
sahf
das
iret
pop
fwait
dec
mov
mov
leave
sub
in
push
nop
add
loope
jge
add
arpl
addb
xlat
add
jns
jg
cltd
dec
sbb
xchg
add
into
outsl
inc
int3
xchg
add
mov
add
cmp
sbb
pop
outsl
push
pop
lods
cmc
lret
dec
pop
jl
push
mov
sbb
out
fistps
ss
pop
pop
fadds
or
movsb
dec
addr16
hlt
std
jmp
mov
add
sti
lds
mov
push
add
mov
test
mov
ret
add
add
loopne
mov
loopne
mov
ret
jb
mov
xlat
and
mov
mov
lods
sbb
add
and
mov
add
pop
fmuls
out
sub
shrl
rolb
stos
cld
ljmp
mov
add
add
xchg
add
add
rolb
mov
add
add
es
cmpl
mov
jl
out
lea
mov
inc
push
add
ss
aaa
sti
ficompl
xor
add
and
push
gs
add
inc
cmc
imul
inc
enter
mov
stc
pop
sub
xor
add
cmpsl
mov
mov
and
mov
je
arpl
lds
adc
mov
test
dec
push
jp
inc
sbb
add
add
rolb
mov
add
mov
cmp
faddl
les
mov
loop
mov
pusha
add
add
push
add
xchg
int3
add
add
repz
ja
mov
add
dec
jge
addb
cmp
pusha
add
inc
dec
cmp
mov
nop
add
iret
and
mov
inc
add
mov
bound
mov
inc
out
add
push
push
add
pop
pop
movsl
in
clc
lods
call
pop
mov
call
pop
leave
lret
es
jno
movsb
jne
add
mov
add
addb
in
loop
mov
add
add
popa
movsl
xchg
add
mov
pop
out
add
lds
add
xor
int3
pushf
adc
fstps
xor
xchg
aaa
cld
or
mov
gs
js
jns
imulb
mov
mov
pusha
add
mov
rolb
mov
jle
clc
xchg
adc
ret
daa
xchg
add
mov
shrl
mov
scas
subl
sub
out
sbb
inc
push
fcomps
ds
jmp
add
mov
das
pop
test
negl
add
fwait
outsb
iret
fisttps
add
rolb
mov
iret
daa
imul
aad
mov
cmpsb
pop
ret
xor
mov
sbb
sbb
mov
imul
mov
or
subl
cmp
iret
icebp
and
mov
stc
insb
ljmp
add
pop
xchg
outsb
cmp
sti
xor
pop
clc
push
or
fnsave
clc
idivl
push
inc
add
std
daa
jae
pop
mov
add
add
push
mov
jns
inc
add
mov
gs
add
cmpsl
and
enter
mov
add
mov
add
fwait
mov
stos
xor
jle
jle
lret
inc
add
xchg
neg
pop
pop
mov
and
mov
outsb
dec
sub
mov
add
pop
cmp
mov
loopne
mov
mov
ffreep
add
mov
xadd
inc
add
mov
and
add
add
xchg
ja
movsb
data16
add
add
cmp
scas
into
cltd
jno
in
inc
cmp
mov
mov
jae
mov
icebp
cmp
pop
mov
inc
push
jge
or
jmp
gs
stos
xlat
jbe
inc
inc
mov
ss
int
sbb
pop
or
out
add
mov
rolb
mov
jmp
mov
add
js
imul
testl
mov
sub
rolb
mov
inc
adc
lcall
iret
ja
mov
add
mov
add
mov
daa
sbbl
das
xor
loopne
mov
std
mov
mov
add
mov
mov
in
lock
rolb
mov
push
in
add
loop
mov
cmpl
mov
add
mov
add
mov
dec
and
sub
arpl
andl
aad
push
cmc
popf
and
add
xchg
leave
or
test
scas
xor
mov
sub
sbb
add
jae
pop
icebp
je
pop
addr16
mov
mov
lea
lahf
xor
xchg
lahf
or
inc
fisubrl
jp
xor
adc
dec
push
xchg
or
cltd
xchg
int
bound
mov
add
clc
pop
sub
mov
popa
push
pop
jg
dec
hlt
enter
icebp
and
mov
cmp
push
add
mov
xchg
inc
add
pusha
add
adc
in
sub
mov
daa
test
sbb
addb
pop
mov
orl
mov
mov
add
mov
repnz
lret
nop
add
adc
cmp
add
popf
mov
lret
cmp
jns
test
and
mov
add
rcrl
mov
mov
scas
mov
jmp
hlt
sbb
xchg
lods
out
movsb
rolb
mov
adc
dec
pop
and
ret
cs
nop
outsl
aaa
aad
mov
push
into
fs
cld
sub
das
xchg
add
cmc
in
stos
inc
adc
fists
popa
pusha
add
cmc
cwtl
iret
test
ret
movsl
mov
add
dec
push
add
outsl
int
jae
loopne
mov
and
mov
add
lahf
scas
adc
mov
xor
mov
loope
adc
or
in
rcll
in
mov
repnz
test
rcrl
mov
out
jnp
dec
imul
push
lea
adc
ret
outsb
mov
sbb
arpl
mov
ss
push
xchg
cli
pop
test
add
dec
popa
pop
repnz
or
sbb
sub
and
mov
jle
jmp
adc
push
fdivrp
out
leave
jmp
add
mov
dec
ja
test
pushf
mov
notl
push
je
das
arpl
lahf
adc
mov
cmp
in
mov
xchg
dec
pop
mov
mov
lea
in
sbb
stos
xchg
add
and
mov
mov
out
fwait
dec
sub
mov
mov
fimuls
mov
mov
xor
mov
mov
add
mov
test
push
call
or
in
sbb
sub
or
ss
or
add
mov
add
jle
sub
mov
add
xor
add
dec
addb
testb
xor
add
mov
dec
xor
cmp
int3
and
jne
push
aaa
push
add
mov
mov
adc
mov
add
mov
add
test
adc
mov
ret
fstpt
nop
add
jle
mov
mov
mov
lds
cmpsl
xchg
push
nop
add
aam
nopl
push
insb
jge
cli
jnp
and
mov
mov
mov
sbb
xchg
mov
push
add
add
xor
add
repz
adc
mov
adc
pop
je
pop
stc
rolb
sbb
popl
xchg
sub
push
mov
fidivs
mov
add
ja
or
addb
mov
je
add
xor
push
stos
mov
add
mov
mov
std
xor
mov
lods
jae
addr16
js
mov
mov
outsb
out
sbb
es
add
pop
adc
add
out
ds
movsb
aam
aam
notb
pop
outsb
mov
push
add
aad
sbb
push
mov
clc
mov
add
sub
xor
mov
add
loope
sbb
data16
add
in
loopne
mov
push
sub
es
shll
shl
add
in
iret
je
push
in
dec
repz
lret
movsl
and
mov
mov
insl
adc
or
add
or
or
add
decl
mov
scas
mov
out
pop
xchg
daa
stc
sbb
add
add
lcall
insb
addl
inc
lods
xchg
xor
add
add
pop
sub
loopne
mov
jmp
ja
mov
adc
cli
ret
nop
add
mov
mov
inc
add
pop
mov
and
mov
in
daa
or
addps
cmp
cli
daa
mov
ss
mov
add
fisubrl
outsl
mov
insl
add
clc
push
add
push
popf
sub
in
imul
lahf
ljmp
leave
xchg
push
outsb
jne
pop
adc
add
nop
add
jnp
add
add
mov
test
jns
pop
adc
mov
add
mov
inc
add
out
ret
pop
sbb
xchg
add
outsl
mov
sbb
mov
es
pop
cmp
adc
insb
stos
adc
pop
xor
out
in
or
or
test
fadds
sahf
ljmp
add
pop
jecxz
add
cmp
repnz
add
push
xchg
xor
sub
mov
push
enter
in
mov
add
rcll
fcomps
sahf
cs
leave
jge
ljmp
cmc
fsubs
mov
int3
xor
or
cmpsl
icebp
pop
xchg
stos
jae
lret
addb
or
xchg
sub
mulb
mov
add
push
add
in
stc
bound
mov
data16
mov
cmpsb
push
leave
inc
incb
scas
pop
push
jb
mov
cld
retw
add
popf
push
addb
fnsave
dec
stc
xor
mov
push
pop
jb
mov
addr16
xchg
push
dec
and
idivl
pop
shr
xchg
cs
fdivl
add
xor
mov
pusha
add
aad
imul
mov
out
cmp
mov
fisubrs
jb
mov
loop
mov
mov
cmp
sahf
xlat
repnz
xchg
jns
add
add
aam
add
inc
mov
movsl
cmc
movsb
lea
pop
push
inc
add
stc
cmpl
std
xchg
add
mov
in
std
rolb
mov
sbb
inc
roll
add
mov
mov
push
mov
xor
mov
mov
sbb
adc
mov
pop
ja
push
mov
add
adc
out
xor
sub
cmp
inc
lock
mov
add
pop
adc
mov
out
movsb
enter
add
add
cmc
movsl
in
sbb
push
add
inc
lock
mov
arpl
sub
into
ficomps
and
mov
jae
and
mov
fistpll
push
mov
pop
cmpsl
or
scas
jbe
roll
out
and
mov
mov
mov
rcll
add
ss
mov
pop
fprem
ja
movsb
xchg
fimull
add
mov
js
sbb
in
mov
mov
leave
jno
mov
mov
mov
jmp
add
mov
jno
sbb
ret
inc
lds
pushf
adc
mov
mov
push
fmuls
add
notl
mov
jae
xchg
in
loopne
mov
popf
jg
cmp
dec
push
add
dec
mov
sbb
fisubl
add
sub
sbb
add
ljmp
fldln2
mov
bound
mov
add
add
inc
mov
cmc
cwtl
out
ss
sbb
add
mov
xor
mov
fidivl
mov
mov
hlt
dec
ja
hlt
xchg
inc
pusha
add
mov
pop
loope
push
insb
mov
bound
mov
ja
pusha
add
repnz
aad
mov
mov
jne
cmpl
xchg
pop
outsl
sub
cmp
lret
jbe
cvtps2pi
in
inc
add
cmpl
lock
sti
sbb
push
fwait
or
rcrl
aad
inc
add
loopne
mov
imul
imull
or
fstpl
mov
add
add
repnz
nop
add
add
push
stos
icebp
movsb
xor
out
add
repnz
add
push
mov
sub
push
pop
mov
add
cmp
mov
mov
sbb
loope
rolb
inc
jnp
add
testl
mov
add
scas
cli
in
mov
pop
jno
pushf
scas
xchg
jle
std
in
loope
inc
add
and
adc
add
out
les
or
add
mov
icebp
or
enter
cmp
inc
dec
scas
pop
iret
cli
lcall
cltd
fcoms
cwtl
pop
xchg
cmp
add
jecxz
shll
mov
xchg
add
pop
repz
aam
pop
cmc
mov
mov
add
pop
xor
inc
sub
lea
add
push
ret
std
push
icebp
push
cmp
mov
es
mov
fdivs
push
stos
lret
fidivrl
adc
inc
int3
movb
rcll
jne
jbe
rorl
push
addb
or
cli
clc
mov
fstl
data16
mov
lds
test
xchg
and
aad
xchg
mov
mov
jo
mov
imul
mov
lods
sub
mov
ds
jmp
cs
das
pusha
add
inc
testl
jl
push
arpl
add
movsl
mov
mov
fmul
dec
dec
es
arpl
xor
mov
das
pop
movsl
add
sub
mov
in
outsl
mov
movsb
or
pop
jb
mov
jno
mov
leave
mov
ljmp
jno
cmp
xchg
hlt
popf
ljmp
mov
or
fidivs
add
or
mov
rolb
mov
jb
mov
jno,pt
loop
mov
sub
add
add
mov
cmc
ret
daa
jb
mov
add
rolb
fimull
les
inc
leave
push
mov
inc
sub
fxtract
pusha
add
pusha
add
add
mov
mov
gs
jp
mov
push
gs
inc
sub
loope
xchg
bound
mov
pop
sub
jle
aas
and
lods
popa
sub
add
dec
arpl
add
push
loopne
mov
mov
inc
fwait
shrl
add
add
sahf
xchg
lods
sub
add
xor
mov
mov
xor
push
or
test
lret
adc
repz
mov
push
mov
dec
mull
sahf
mov
bound
mov
sbb
xchg
loope
mov
lret
ficoms
gs
add
loop
mov
sub
and
xchg
mov
out
cld
mov
loopne
mov
and
loop
mov
add
aad
call
mov
or
lahf
insb
push
add
shll
outsb
sbb
push
pop
lahf
call
add
and
mov
cmpsb
inc
add
std
in
out
fcompl
or
gs
sub
out
sti
aam
mov
into
dec
push
adc
mov
add
mov
cmpsl
pop
scas
push
push
add
add
adc
out
imulb
mov
xchg
or
inc
push
or
lret
outsl
ja
dec
mov
add
inc
add
je
push
mov
mov
cmpl
inc
xchg
cmp
and
mov
dec
or
movsl
arpl
dec
mov
add
ljmp
clc
or
mov
imul
fbld
add
push
test
popf
mov
adc
add
xor
mov
jne
add
lds
pusha
add
and
je
inc
fildl
outsb
fcomi
negl
mov
push
jl
ftst
enter
sub
sahf
push
jl
sub
movsl
sub
cmpsl
ror
sbb
test
pop
in
in
adc
mov
stos
add
mov
ljmp
jg
mov
movsb
cmp
leave
sub
mov
mov
push
mov
mov
cmp
out
in
in
test
loop
mov
and
icebp
in
out
jg
rolb
add
movsl
mov
or
mov
outsl
pop
cltd
stc
inc
mov
mov
ljmp
dec
xchg
sbb
or
xor
mov
push
outsb
mov
push
aam
data16
mov
stc
mov
add
mov
push
add
mov
mov
lock
xor
mov
xchg
push
stc
popf
xchg
add
inc
lods
outsb
xchg
mov
add
sub
sub
inc
in
sbb
and
mov
and
add
and
mov
jg
in
or
xor
fistps
aad
or
jle
push
dec
dec
add
rolb
mov
add
add
dec
cmp
loop
mov
xor
mov
cmc
jg
jo
mov
mov
add
push
dec
sbb
inc
dec
sbb
jmp
outsl
inc
add
add
add
mov
mov
and
hlt
dec
mov
loop
mov
add
jns
lea
int3
lock
ficoml
add
pusha
add
scas
in
and
xchg
ret
inc
int3
sub
adc
mov
add
insl
pop
es
adc
lcall
leave
gs
dec
sbb
in
aas
push
or
cmp
imul
push
and
mov
scas
test
push
cmp
xchg
aam
lret
aas
loop
mov
adc
mov
xchg
enter
pop
mov
mov
add
out
std
inc
cltd
pushf
xor
mov
pop
dec
imul
jo
mov
mov
loope
sahf
rolb
mov
sbb
mov
sbbl
add
pop
add
sub
lds
inc
ret
fstl
mov
outsl
mov
mov
dec
dec
cltd
call
int
push
imul
inc
inc
pop
mov
sbb
or
add
cld
loope
jle
add
mov
mov
lcall
add
push
and
loopne
mov
mov
add
add
lock
add
add
and
mov
add
ljmp
lcall
add
pushl
or
mov
push
call
mov
mov
int
cmp
add
mov
fsubs
push
clc
push
mov
add
mov
dec
xor
mov
add
mov
jbe
ja
add
fdiv
out
in
mov
ja
test
inc
add
es
cmp
sub
cwtl
ss
pop
ja
fdivrs
sbb
add
rolb
mov
ficoms
mov
fimull
add
add
mov
stos
and
mov
dec
mov
inc
add
add
push
mov
addl
mov
scas
lcall
and
mov
or
push
stos
inc
inc
mov
pop
bound
mov
cld
sub
movsb
fwait
jne
add
mov
push
xlat
pop
ret
daa
imul
jo
mov
addb
cmpl
test
cmp
fwait
pop
mov
mov
adc
js
icebp
int
or
push
xor
pop
les
mov
test
cmp
sub
pop
filds
mov
mov
ds
jno
cld
mov
add
dec
add
push
cmp
mov
je
fwait
adc
mov
mov
xchg
inc
lret
push
outsb
add
mov
add
add
mov
imul
out
cmp
dec
cmc
sub
add
insb
loope
iret
xlat
mov
fcoml
inc
outsl
lods
xchg
gs
rolb
xchg
test
sbb
stos
loope
cmc
xlat
jmp
add
lret
add
lea
loope
add
xchg
jmp
arpl
mov
cs
add
mov
loopne
mov
mov
add
add
fcomi
out
sbbl
movb
and
adc
lret
xrelease
mov
dec
sbb
mov
jg
jne
add
add
jbe
enter
jmp
cmp
mov
xchg
push
add
jp
sub
add
xchg
jg
mul
sub
mov
xor
lea
int
push
int3
mov
push
add
adc
mov
push
or
sub
add
add
push
and
stos
sarl
lods
sbb
jmp
mov
lock
add
fcom
and
repnz
xchg
mov
mov
jne
fstl
ljmp
add
pop
jmp
or
push
out
lret
pop
cmc
push
xor
lods
jmp
add
popf
sbb
stos
push
add
jg
adc
dec
pop
nop
add
add
xlat
lds
add
mov
add
or
sti
push
js
lods
loope
pop
fucomip
or
out
xchg
add
ja
adc
mov
add
mov
mov
and
clc
in
aaa
test
add
mov
and
fidivs
mov
jge
inc
add
sahf
addr16
push
inc
add
xor
leave
sub
adcl
mov
add
pop
in
adc
mov
add
add
and
xor
mov
cli
jno
xchg
pop
insb
mov
and
ret
or
add
mov
test
sub
add
aad
lahf
inc
pushf
addb
imul
xlat
imul
or
pop
pop
or
sbb
adc
popf
inc
add
add
mov
pop
jbe
cli
push
push
pop
sbb
adc
add
adc
add
lret
adc
hlt
in
divl
cmc
adc
push
jl
or
mov
inc
jecxz
repnz
xchg
mov
jmp
sahf
iret
int
pop
das
lcall
aam
inc
out
test
adc
addb
cmp
lahf
pop
stos
fs
ret
add
mov
cpuid
add
xor
aam
add
mov
xor
add
outsl
lock
add
sub
and
add
ss
in
mov
test
mov
xchg
in
jp
xchg
push
aaa
fists
inc
mov
out
push
hlt
int
cmpsb
jp
mov
das
push
or
into
iret
mov
add
dec
je
bound
mov
fcmovnbe
lea
ret
add
jae
xchg
add
sub
add
sbb
xor
mov
xlat
or
add
mov
mov
add
popa
or
xchg
cli
rcll
add
push
ljmp
cmova
mov
xor
lea
imul
lahf
repnz
add
mov
pop
dec
xor
push
mov
movsl
mov
and
mov
mov
dec
int3
aad
xor
jg
add
addb
dec
mov
mov
mov
mov
sub
jmp
clc
sbb
in
xchg
setne
mov
add
js
or
addb
js
add
les
js
jp
cmp
arpl
movsb
lods
add
or
mov
jle
test
xor
sbb
add
mov
add
xor
mov
add
inc
add
testl
arpl
pop
icebp
scas
jl
or
bts
cmpsl
movsl
cmp
push
lahf
and
bound
mov
mov
mov
cwtl
inc
xlat
and
call
sub
clc
mov
cmp
fisttps
xchg
fs
or
insb
push
test
out
lcall
pusha
add
dec
cli
jp
inc
mov
mov
mov
xchg
fst
add
clc
xor
push
add
mov
in
pop
pushf
out
adc
add
xchg
popf
hlt
repnz
mov
mov
pop
xor
mov
icebp
and
mov
or
int
std
loope
add
mov
es
lock
push
repnz
push
push
add
dec
js
movsb
sbb
adc
mov
mov
ds
cmpsb
mov
fildll
insb
addb
gs
adc
mov
aas
xchg
adc
mov
add
mov
xchg
insb
stos
mov
xor
mov
adc
mov
aam
loop
mov
adc
mov
pushf
icebp
jge
stos
rolb
mov
addb
aam
sti
xor
mov
push
rolb
mov
mov
dec
mov
adc
mov
mov
je
cld
movsl
xchg
lods
icebp
xchg
cld
pop
mov
sub
out
icebp
arpl
aaa
xor
mov
push
push
and
mov
sbb
gs
stos
pusha
add
mov
mov
mov
shl
push
push
xchg
add
adc
xor
mov
bound
mov
add
push
add
repz
mov
cmovs
push
xor
sbbl
add
out
add
mov
add
add
rcr
xlat
popf
pop
ljmp
push
lock
add
js
pop
push
mov
js,pn
pop
les
add
ja
cwtl
push
shl
addr16
inc
add
or
faddl
mov
dec
scas
jmp
add
mov
addb
gs
add
xchg
pushw
adc
fcmovnbe
add
cli
jnp
xor
jnp
jo
mov
lock
test
dec
sbb
add
xchg
pushf
insl
mov
aaa
adcl
add
mov
sub
lds
mov
dec
loop
mov
mov
jb
mov
add
bound
mov
add
sbb
mov
leave
out
push
add
imul
mov
cld
mov
add
add
int3
test
jbe
test
call
push
mov
dec
adc
mov
dec
enter
push
add
mov
pop
mov
add
sti
out
add
jl
cmpsb
sbb
mov
add
gs
mov
jp
dec
repnz
clc
and
and
add
fisubl
js
out
out
sub
stos
jge
jmp
popa
sti
jge
out
inc
cmc
lock
je
fsts
or
dec
out
mov
add
xor
fldl
mov
call
mov
add
push
aas
and
mov
test
sarl
test
add
mov
mov
mov
cltd
loop
mov
mov
jnp
adc
push
jmp
sub
push
add
inc
imul
pop
xchg
inc
inc
add
mov
xlat
sub
mov
mov
sub
js
dec
pop
xlat
inc
add
std
movups
mov
add
xlat
rolb
mov
add
add
stc
clc
leave
repz
mov
mov
in
cld
cli
ja
in
mov
mov
in
movsl
imul
test
add
inc
add
rolb
jmp
aad
sub
mov
movsb
in
sub
movsb
push
inc
lcall
push
adc
or
xor
sbb
add
or
mov
jmp
push
inc
outsb
cmp
or
and
mov
add
mov
out
int3
adc
mov
pop
jge
xlat
push
add
add
mov
add
rolb
mov
add
jp
ja
push
sbb
add
add
cltd
inc
outsb
pop
stos
push
sub
repz
push
jno
push
add
fistpl
test
mov
dec
jbe
add
add
add
pop
or
dec
neg
out
push
cs
mov
dec
inc
cld
out
or
sub
int
mov
mov
cmc
and
add
inc
sub
fcmovbe
mov
mov
sahf
out
add
mov
xor
sarl
or
mov
mov
mov
mov
mov
inc
cmc
std
ljmp
push
repnz
mov
jnp
cmp
jbe
push
mov
push
aas
sar
add
adc
jmp
add
mov
testl
pop
shll
cwtl
insb
dec
roll
inc
cmp
xor
sub
inc
mulb
mov
mov
pop
jmp
add
add
mov
faddl
mov
and
mov
push
in
mov
rolb
mov
leave
outsl
add
mov
pop
cld
pop
addr16
mov
das
adc
mov
add
decb
test
sub
clc
in
mov
stos
rolb
mov
lret
test
add
mov
fwait
popa
daa
cmp
icebp
mov
add
call
rolb
int3
push
push
stos
cmp
cmp
xor
mov
pop
sbb
ds
jns
jmp
vandps
imul
mov
adc
dec
sbb
push
add
mov
xor
mov
insl
pop
pop
insb
cmp
dec
aaa
push
add
mov
xor
aaa
imul
add
mov
rolb
pop
fwait
mov
inc
add
sbb
fs
mov
addr16
add
mov
add
jns
sub
mov
mov
faddl
ret
cmc
pop
or
add
sub
adc
mov
es
pop
add
add
mov
add
cmpsb
mov
add
stc
jp
xchg
scas
add
mov
into
push
add
clc
push
mov
cmpsb
in
sarl
sub
dec
in
jg
repnz
push
loope
data16
std
inc
shrl
mov
fsub
add
add
add
add
mov
adc
mov
jle
and
mov
pusha
add
add
repnz
int
addr16
jg
add
mov
fiaddl
popa
lods
dec
loopne
mov
movb
in
call
add
inc
push
scas
mov
mov
mov
mov
add
add
push
ret
stos
gs
add
lds
and
lods
mov
push
add
lret
cltd
jns
sub
add
push
add
add
sub
mov
add
stos
in
mov
pop
add
mov
lock
xchg
mov
add
call
add
add
mov
add
cmp
in
aad
scas
mov
mov
adc
mov
add
add
cvtdq2ps
xor
sti
cmp
rolb
lds
sub
add
push
dec
jae
insl
or
push
push
inc
cmp
arpl
ja
and
push
add
scas
sbb
das
insl
inc
add
mov
or
push
rcrl
push
and
mov
push
jae
mov
out
add
mov
or
stos
negb
add
cmpsb
sub
les
push
and
mov
pop
dec
or
mov
test
mov
or
lods
and
mov
je
std
sub
dec
xor
xor
and
add
mov
add
stc
enter
rcll
add
pop
sub
xor
insl
call
dec
sbb
jl
jecxz
adc
subl
dec
sbb
decb
jb
mov
flds
mov
into
movsb
cmp
stos
mov
adc
jae
mov
mov
add
add
add
out
and
lods
xlat
jnp
push
cmp
mov
sbb
filds
pop
cld
imul
add
test
mov
adc
mov
sbb
xchg
sar
mov
add
addb
testb
push
add
mov
add
xlat
imul
aad
cmp
daa
fwait
mov
mov
mov
movsl
test
mov
xchg
scas
leave
leave
aas
int
rolb
mov
out
sub
nop
add
jmp
dec
mov
cmp
jl
lds
add
mov
mov
add
leave
push
jg
or
xor
mov
mov
pop
repz
mov
in
imul
push
pop
stos
dec
int3
dec
xchg
add
add
mov
mov
sbb
mov
cmc
psubsw
mov
lcall
add
cli
mov
sub
adc
outsb
fstps
xor
data16
and
xchg
push
xlat
std
sbb
pop
out
hlt
push
outsl
and
mov
add
aaa
int
add
or
in
ficoml
mov
mov
mov
rol
scas
in
xchg
mov
xchg
mov
add
push
sbb
mov
jae
dec
out
es
xchg
push
int3
ret
test
push
mov
mov
int3
and
shll
mov
addb
mov
addb
sub
stos
test
xor
into
cmpsb
inc
inc
rolb
mov
mov
mov
enter
xchg
add
xchg
cmpsl
dec
cmpsb
popa
mov
mov
inc
add
xchg
mov
add
pop
xchg
inc
pop
inc
fldenv
add
jg
cmpsl
movsl
mov
in
xor
jecxz
add
mov
add
mov
add
cmc
lods
push
sbb
enter
dec
adc
outsb
out
les
and
rolb
fdivp
rolb
mov
pop
mov
cmp
add
add
lods
jl
jge
cmp
add
mov
add
sub
jns
add
fs
lds
out
jg
fistpll
aas
mov
add
mov
add
mov
ljmp
stos
pop
aad
push
adc
mov
add
test
sbb
enter
fs
add
adc
cmp
xor
mov
add
mov
cmp
loope
out
mov
test
scas
jecxz
add
mov
or
add
push
add
add
inc
es
jl
adc
mov
lret
add
cmpsb
lods
sti
mov
inc
add
pop
stc
mov
fsubrl
jae
mov
lods
and
lret
or
add
mov
add
mov
ret
inc
add
popa
data16
or
push
jne
in
mov
outsl
dec
dec
outsl
sub
sub
mov
sub
sub
jnp
imul
sahf
lds
out
in
lea
insl
push
add
jno
add
and
mov
shll
mov
push
add
lret
xchg
addb
leave
add
ret
xor
arpl
pop
jno
movsl
lock
movsl
push
push
inc
mov
in
adc
sbb
fdivrl
std
dec
daa
jg
add
add
repz
mov
adc
pop
xchg
pop
cli
sahf
dec
frstor
add
scas
mov
negb
dec
cwtl
inc
add
inc
add
xor
mov
add
rorl
mov
add
add
jno
popl
mov
mov
mov
jb
mov
shll
dec
xchg
and
cmp
cltd
inc
imul
add
aas
pop
imul
mov
adc
pop
push
sbb
sarl
in
xor
testb
mov
jb
mov
mov
jb
mov
inc
aas
cmp
data16
mov
imul
mov
aaa
and
mov
ljmp
das
pop
dec
dec
rol
add
jb
mov
mov
cmc
daa
cmc
jnp
mov
cmc
bswap
cmpl
mov
xchg
int
pop
jno
cmp
add
out
add
dec
jecxz
test
shrl
add
mov
nop
add
jb
mov
jns
pop
enter
out
or
mov
fcmovu
das
test
push
scas
pop
cmp
lahf
mov
mov
add
push
inc
stos
jl
fs
jmp
jmp
addb
testl
icebp
lret
mov
imul
inc
fadds
aas
cmp
add
je
cmovge
cmp
test
nop
add
fdivr
repnz
mov
stos
and
mov
mov
add
pop
pop
dec
mov
add
and
inc
pop
xchg
fisubl
dec
jns
arpl
aaa
fisttps
icebp
fwait
mov
add
add
cmp
bound
mov
mov
lea
mov
es
mov
push
add
mov
mov
add
mov
adc
jmp
insb
mov
xor
inc
test
xor
mov
incl
mov
out
add
cld
sahf
fcompl
dec
pop
mov
cmc
or
mov
add
ret
lea
popf
pusha
add
add
movsb
notl
mov
xchg
cmpsl
repnz
push
aad
push
addb
push
std
popa
hlt
je
inc
dec
pop
fdivl
jbe
rolb
mov
call
rcrl
add
mov
jns
sub
jns
adc
mov
dec
push
orl
or
mov
jnp
pop
mov
dec
sub
sub
add
inc
add
add
add
ja
jle
movsl
clc
repnz
jae
hlt
push
loope
mov
xchg
inc
add
push
clc
repnz
jae
add
sub
add
pop
clc
repnz
jae
mov
insb
lcall
add
fwait
cld
nop
jmp
xor
fldenv
clc
repnz
jae
mov
pop
mov
push
mov
xchg
ret
iret
add
add
decl
nop
jae
pop
iret
add
add
mov
add
je
add
test
xor
mov
clc
repnz
jae
add
add
push
clc
repnz
jae
add
add
add
add
add
xor
add
clc
repnz
jae
add
add
mov
mov
clc
repnz
jae
or
je
out
pop
push
mov
xchg
ret
mov
insb
add
xchg
clc
repnz
jae
add
add
push
mov
xchg
ret
mov
add
add
add
push
add
clc
repnz
jae
stos
stos
cmp
push
mov
xchg
ret
fimuls
pop
cmpl
jmp
add
mov
add
int3
mov
clc
repnz
jae
pop
fiaddl
add
add
add
push
mov
xchg
ret
add
add
add
test
repnz
jae
add
out
lea
clc
repnz
jae
fidivs
mov
imul
andl
ljmp
jb
fwait
cld
nop
jmp
add
loope
add
mov
clc
repnz
jae
lea
adc
andb
add
repnz
jae
add
add
nop
jmp
mulb
or
add
mov
in
add
clc
repnz
jae
repnz
mov
push
push
mov
xchg
ret
add
add
movsb
clc
repnz
jae
xor
hlt
add
bnd
mov
nop
jae
xchg
pusha
cwtl
sbb
push
lcall
mov
clc
repnz
jae
add
movb
mov
cmp
ret
stos
add
out
inc
mov
je
clc
repnz
jae
loope
insb
jne
imul
clc
repnz
jae
cmp
imul
add
add
add
clc
repnz
jae
add
daa
add
clc
repnz
jae
add
pop
push
mov
xchg
ret
mov
mov
push
xor
movsb
sub
mov
push
fwait
cld
nop
jmp
add
xor
add
clc
repnz
jae
xchg
leave
xor
xor
ficoml
in
cwtl
add
add
add
daa
in
fcomi
movsb
clc
repnz
jae
add
lcall
test
dec
push
mov
xchg
ret
stos
loope
bound
stos
add
mov
nop
jae
add
add
push
push
mov
xchg
ret
add
dec
cs
clc
repnz
jae
mov
add
lock
repnz
jae
add
iret
add
xor
mov
xchg
ret
cmp
add
mov
clc
repnz
jae
add
iret
je
add
and
push
mov
in
pop
push
fiaddl
add
fnstenv
push
jle
imul
repnz
jae
add
inc
add
sbb
add
add
clc
repnz
jae
sbb
mov
stos
add
clc
repnz
jae
add
mov
outsl
or
add
repnz
jae
add
xchg
add
mov
test
add
clc
repnz
jae
add
add
push
clc
repnz
jae
sbb
add
inc
add
mov
imulb
bound
mov
add
sldt
clc
repnz
jae
pop
sub
push
rcll
iret
add
clc
repnz
jae
insb
add
popa
add
xchg
scas
mov
clc
repnz
jae
cmp
or
nop
jae
add
mov
push
push
mov
xchg
ret
out
add
mov
clc
repnz
jae
mov
fcomps
mov
clc
repnz
jae
leave
testb
adc
repnz
jae
lcall
mov
clc
repnz
jae
add
testb
leave
add
sti
je
clc
repnz
jae
add
add
mov
xchg
ret
out
xchg
xchg
cs
mov
adc
and
cwtl
insb
add
out
roll
mov
add
repnz
jae
ss
add
cs
push
mov
xchg
ret
add
insb
add
push
sub
cmpsb
int3
inc
add
insb
dec
add
mov
repnz
jae
ljmp
clc
repnz
jae
mov
mov
leave
mov
fwait
cld
nop
jmp
xchg
add
xchg
hlt
mov
out
add
fwait
cld
nop
jmp
dec
add
add
and
in
stos
push
mov
xchg
ret
out
add
out
insb
add
or
nop
jae
add
pusha
and
mov
push
mov
xchg
ret
insb
hlt
out
push
inc
cmpsl
imul
adc
add
repnz
bound
hlt
out
xchg
stc
push
fwait
cld
nop
jmp
or
bound
add
popa
sbb
mov
xchg
ret
xchg
add
negb
mov
clc
repnz
jae
add
les
fdivp
loop
mov
shr
clc
repnz
jae
fimull
mov
sti
fwait
cld
nop
jmp
add
add
mov
adc
cld
nop
jmp
jle
add
pop
repnz
int
loop
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
je
mov
nop
jae
add
imul
xor
sbb
add
repnz
jae
flds
or
dec
push
push
mov
xchg
ret
add
add
add
mov
clc
repnz
jae
dec
inc
add
mov
push
clc
repnz
jae
push
xor
add
push
mov
aam
and
hlt
add
mov
aam
push
push
mov
xchg
ret
mov
add
pop
clc
repnz
jae
insb
testb
mov
xchg
fistps
cld
nop
jmp
add
add
hlt
cmp
jbe
clc
repnz
jae
push
xor
add
lea
lret
add
dec
into
inc
add
lcall
add
mov
mov
bound
mov
push
clc
repnz
jae
cmp
add
add
clc
repnz
jae
out
xchg
mov
clc
repnz
jae
mulb
cmp
clc
repnz
jae
sbb
pop
add
div
mov
jae
add
mov
add
mov
cmpl
fwait
cld
nop
jmp
push
mov
push
ja
ljmp
and
add
fidivs
hlt
insb
mov
clc
repnz
jae
add
push
add
adc
mov
add
shl
inc
add
xchg
add
stos
add
sbb
add
add
push
pusha
add
add
sbbl
add
fwait
cld
nop
jmp
insb
out
add
nop
jae
repnz
add
mov
push
mov
xchg
ret
add
cmp
adc
repnz
jae
pop
inc
xor
loope
ret
push
shl
clc
repnz
jae
insb
insb
mov
lods
push
mov
xchg
ret
add
add
dec
fwait
cld
nop
jmp
xor
je
add
repnz
jae
fiadds
sub
out
flds
pop
and
repnz
jae
push
je
add
add
aaa
cmpsl
mov
cld
nop
jmp
add
hlt
xor
xchg
insb
testb
jmp
popa
add
repnz
jae
add
jmp
das
and
add
pop
add
hlt
add
out
add
push
push
mov
xchg
ret
fsts
xchg
clc
push
mov
repz
add
add
add
mov
clc
repnz
jae
add
out
add
jge
jne
push
mov
xchg
ret
add
cmc
das
mov
push
mov
xchg
ret
add
add
add
xchg
cmpsl
inc
in
dec
adc
shrl
jmp
cmpsl
lahf
mov
clc
repnz
jae
lcall
or
xor
stos
add
hlt
add
jle
push
les
sub
repnz
jae
dec
mov
add
nop
jmp
add
add
inc
sbb
fstps
sub
clc
repnz
jae
add
out
add
decb
mov
push
fwait
cld
nop
jmp
hlt
add
add
pop
jl
jne
push
mov
xchg
ret
add
add
mov
mov
xchg
ret
hlt
xor
add
ret
sub
test
and
add
repnz
jae
inc
sub
xor
mov
clc
repnz
jae
sbb
add
iret
add
leave
ds
clc
repnz
jae
fiadds
add
mov
mov
clc
repnz
jae
out
add
mov
clc
repnz
jae
cmp
sbb
mov
xchg
ret
mulb
inc
les
repnz
jae
add
imul
sbb
adc
add
sbb
inc
add
incl
dec
cmp
cld
nop
jmp
pop
out
mov
repnz
or
jns
loop
mov
leave
add
clc
repnz
jae
push
xor
add
mov
movzwl
clc
repnz
jae
je
cmp
mov
fwait
cld
nop
jmp
mov
add
add
jbe
incl
add
add
mov
xor
movb
nop
jae
mov
add
int
pop
jae
repnz
jae
insb
lcall
add
clc
repnz
jae
add
lods
pop
push
mov
xchg
ret
add
inc
add
add
or
add
repnz
jae
add
add
cmp
stc
incl
add
add
enter
nop
jae
insb
mov
aad
call
clc
repnz
jae
add
push
clc
repnz
jae
mov
add
mov
clc
repnz
jae
add
mov
mov
clc
repnz
jae
add
xchg
add
xchg
jle
add
ret
clc
repnz
jae
pop
add
add
add
out
cmpw
fwait
cld
nop
jmp
add
jae
rep
fwait
cld
nop
jmp
xchg
add
add
add
add
clc
repnz
jae
add
xchg
imulb
shl
clc
repnz
jae
sub
add
add
xor
add
clc
repnz
jae
add
out
sub
clc
repnz
jae
leave
iret
add
add
imul
clc
repnz
jae
add
add
add
repnz
jae
fisubl
xchg
add
clc
repnz
jae
insb
or
push
nop
add
push
mov
xchg
ret
add
add
add
mov
add
fwait
cld
nop
jmp
loope
add
sub
add
repnz
jae
imul
add
push
mov
xchg
ret
jle
mov
xor
mov
xor
fwait
cld
nop
jmp
add
add
add
pop
pop
push
mov
xchg
ret
add
add
add
test
repnz
jae
xchg
add
mov
negb
sub
xor
inc
add
divb
outsl
loopne
mov
xchg
ret
cwtl
add
insb
add
pop
mov
clc
repnz
jae
inc
fadds
je
add
xorl
mov
cmp
ret
push
lcall
dec
imul
adcl
add
stos
call
clc
repnz
jae
add
xchg
mov
add
sbb
add
loope
mov
clc
repnz
jae
dec
add
mov
je
jno
lea
clc
repnz
jae
insb
cmp
push
hlt
mov
mov
xchg
ret
je
repnz
mov
and
mov
adc
push
lea
add
add
add
push
xchg
push
mov
aam
inc
add
pusha
add
mov
push
clc
repnz
jae
testb
xor
xchg
aad
testl
fwait
cld
nop
jmp
mov
push
mov
mov
sbb
nop
jae
lcall
cwtl
and
clc
repnz
jae
leave
or
je
add
pop
add
fwait
cld
nop
jmp
les
clc
mov
fwait
cld
nop
jmp
iret
inc
dec
mul
add
repnz
jae
add
push
fidivs
add
inc
sbb
jnp
inc
add
hlt
hlt
add
and
nop
jae
add
add
add
clc
repnz
jae
lea
cmc
std
rol
push
mov
xchg
ret
add
add
lea
repnz
jae
add
mov
add
clc
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
add
push
fwait
cld
nop
jmp
xor
xchg
xchg
xor
mov
clc
repnz
jae
add
fiadds
dec
mov
loopne
add
add
jle
popa
add
jge
mov
adc
repnz
jae
inc
ficoml
jge
push
mov
xchg
ret
inc
add
xchg
add
xor
mov
mov
push
mov
xchg
ret
add
add
ja
add
jmp
dec
mov
add
push
add
iret
add
add
add
clc
repnz
jae
testb
add
cwtl
mov
clc
repnz
jae
xor
fidivrs
jg
clc
repnz
jae
ficompl
add
iret
pop
push
mov
xchg
ret
add
add
stos
out
jg
inc
fwait
cld
nop
jmp
les
add
add
add
ret
sbbl
add
add
add
pusha
clc
repnz
jae
push
or
repnz
push
push
mov
xchg
ret
add
add
pusha
hlt
add
repnz
jae
push
stos
add
or
idiv
incl
add
add
and
aad
mov
clc
repnz
jae
add
add
add
and
clc
repnz
jae
add
add
clc
repnz
jae
add
push
add
add
push
mov
xchg
ret
iret
insb
add
jbe
push
inc
push
mov
xchg
ret
add
mov
mov
mov
xchg
ret
push
iret
out
insb
push
add
je
pop
jne
fwait
cld
nop
jmp
imul
mul
sub
jmp
jae
add
add
out
lods
mov
clc
repnz
jae
add
jle
add
mov
push
mov
xchg
ret
add
xor
test
cmp
cld
nop
jmp
add
add
loope
add
jae
lea
mov
add
jae
add
clc
repnz
jae
add
mov
iret
stos
clc
repnz
jae
add
mov
inc
adc
mov
xchg
ret
add
mov
fidivrs
shl
push
mov
xchg
ret
xor
add
add
movswl
clc
repnz
jae
fmul
xor
add
repnz
jae
flds
stos
add
call
clc
repnz
jae
add
fwait
cld
nop
jmp
loope
add
add
test
cld
nop
jmp
lcall
lock
jmp
je
add
testl
repnz
jae
push
add
add
add
mov
xchg
ret
add
add
fiaddl
nop
jmp
add
add
xor
clc
repnz
jae
sbb
movsl
mov
inc
clc
repnz
jae
add
bound
add
mov
out
idiv
clc
repnz
jae
xchg
add
leave
sub
clc
repnz
jae
out
pop
addb
add
and
push
push
mov
xchg
ret
mov
sub
repnz
repnz
jae
add
add
push
clc
repnz
jae
xchg
push
xchg
fiadds
dec
popa
imul
sar
nop
jae
add
insb
push
pop
push
mov
xchg
ret
mov
bound
add
xchg
sbb
popa
repnz
add
push
mov
xchg
ret
add
dec
adc
mov
mov
xchg
ret
add
add
add
mov
mov
xchg
ret
xchg
out
add
imul
aaa
lret
movzwl
clc
repnz
jae
mov
out
cmc
or
jae
add
fiadds
inc
add
mov
clc
repnz
jae
mov
jne
fwait
cld
nop
jmp
add
add
mov
add
add
jbe
clc
repnz
jae
leave
add
je
add
clc
repnz
jae
add
insb
add
add
incl
fwait
cld
nop
jmp
mov
sbb
cld
nop
jmp
mov
mov
xchg
ret
daa
mov
nop
jae
add
hlt
inc
fadds
repnz
pop
mov
clc
repnz
jae
xchg
lcall
std
je
clc
repnz
jae
add
dec
push
clc
repnz
jae
add
sbb
les
clc
repnz
jae
add
mov
data16
cld
clc
repnz
jae
out
popa
xchg
add
xor
les
lea
fwait
cld
nop
jmp
fmuls
imul
bound
out
add
repnz
jae
lea
add
hlt
bound
mov
push
mov
xchg
ret
xor
add
clc
repnz
jae
cwtl
bound
mov
clc
mov
clc
repnz
jae
add
dec
jle
mov
mov
clc
repnz
jae
out
add
add
cs
adc
sub
clc
repnz
jae
dec
add
pusha
fadds
pop
pop
clc
repnz
jae
insb
out
or
add
nop
jae
fiaddl
add
push
flds
lret
push
mov
xchg
ret
add
adc
mov
push
push
mov
xchg
ret
add
mov
rclb
fiadds
xchg
ret
add
xor
or
lods
add
clc
repnz
jae
add
add
clc
repnz
jae
out
add
dec
add
push
mov
xchg
ret
xor
lea
push
fs
ret
clc
repnz
jae
add
add
dec
mov
sbb
popa
add
repnz
jae
add
repz
adc
ret
sbb
nop
jae
iret
add
add
popa
rolb
mov
jmp
mov
add
add
add
mov
xchg
ret
add
mov
cld
nop
jmp
lcall
sbb
fwait
cld
nop
jmp
add
out
xor
popl
clc
repnz
jae
add
add
cmp
nop
jae
add
add
sqrtps
cs
add
sbb
pop
push
clc
repnz
jae
out
lea
out
je
clc
repnz
jae
mov
hlt
addb
mov
nop
jmp
add
inc
xor
xor
jp
cmpl
push
add
add
loope
jle
leave
adc
add
repnz
jae
add
les
mov
fistl
push
testb
cmp
ret
add
add
jle
dec
pop
clc
repnz
jae
add
insb
add
lcall
add
clc
repnz
jae
flds
add
scas
dec
fwait
cld
nop
jmp
insb
fcomp
hlt
leave
add
lea
mov
clc
repnz
jae
repnz
add
stc
int3
inc
add
lcall
clc
repnz
jae
inc
add
add
pusha
add
clc
cmpl
push
mov
xchg
ret
add
ficoms
clc
repnz
jae
add
add
add
add
enter
popa
fs
repnz
jae
out
add
incl
flds
hlt
add
ljmp
ret
mov
mov
out
add
push
inc
add
ljmp
fwait
cld
nop
jmp
add
mov
repnz
jge
clc
repnz
jae
add
mov
add
addb
mov
mov
loop
mov
add
fwait
cld
nop
jmp
imul
push
add
insb
add
add
fwait
cld
nop
jmp
leave
add
je
cmpsl
jle
clc
repnz
jae
repnz
add
add
add
mov
jmp
repnz
ljmp
mov
push
add
clc
repnz
jae
leave
add
add
int3
and
push
mov
xchg
ret
mov
imul
nop
jmp
leave
add
xchg
fisubs
inc
adc
cld
nop
jmp
add
or
mov
clc
repnz
jae
hlt
add
xor
testb
loopne
mov
add
push
mov
xchg
ret
testb
add
lcall
cld
nop
jmp
xor
add
add
imul
mov
stc
aad
add
add
add
jge
arpl
clc
repnz
jae
add
push
inc
and
cld
nop
jmp
push
lcall
jnp
movl
add
fiadds
mov
cmp
mov
xchg
ret
add
je
push
jp
lret
nop
jmp
cwtl
sbb
add
pop
clc
repnz
jae
add
add
iret
fidivrl
xor
jae
add
push
repnz
shr
jmp
add
loope
out
cwtl
add
insb
add
in
mov
clc
repnz
jae
add
push
add
add
cld
nop
jmp
iret
add
xchg
sub
add
xor
leave
add
stos
add
pop
cltd
ret
mov
mov
fwait
cld
nop
jmp
add
inc
hlt
push
mulb
mov
clc
repnz
jae
add
add
mov
cmpsl
mov
popf
clc
repnz
jae
xchg
push
imul
fs
insb
clc
repnz
jae
or
dec
push
push
mov
xchg
ret
mov
push
or
fwait
cld
nop
jmp
testb
cs
add
add
repnz
jae
add
add
mov
insb
mov
xbegin
add
fimuls
ds
clc
repnz
jae
add
mov
push
mov
call
add
jg
xchg
cmc
add
add
enter
repnz
jae
or
add
add
repnz
jae
add
fiadds
xchg
add
gs
cmp
fwait
cld
nop
jmp
mov
add
stos
dec
mov
clc
repnz
jae
add
sub
repnz
jae
add
add
and
push
mov
xchg
ret
add
movzwl
fwait
cld
nop
jmp
popa
xor
add
mov
mov
test
jae
add
add
mov
mov
mov
fwait
cld
nop
jmp
add
mov
gs
cld
nop
jmp
xchg
xor
dec
adc
repnz
jae
bound
hlt
add
add
add
fwait
cld
nop
jmp
add
add
add
pop
fwait
cld
nop
jmp
fnstenv
add
push
add
stos
xor
clc
repnz
jae
add
loope
hlt
test
pop
mov
push
mov
xchg
ret
inc
add
fwait
call
clc
repnz
jae
push
add
xchg
stos
mov
clc
repnz
jae
add
imulb
imulb
mov
clc
repnz
jae
lea
push
push
mov
xchg
ret
push
inc
mov
fnstsw
clc
repnz
jae
add
add
insl
xor
jmp
pushl
add
insb
xor
je
dec
pop
push
mov
xchg
ret
les
hlt
sub
mov
xchg
ret
xor
insb
mov
dec
cmp
repnz
jae
lcall
mov
clc
repnz
jae
add
push
mov
xchg
ret
add
add
scas
mov
clc
repnz
jae
add
lcall
cld
nop
jmp
add
jle
lcall
jecxz,pt
add
xor
xchg
rolb
mov
icebp
pop
not
push
mov
xchg
ret
inc
push
add
inc
adc
mov
pop
mov
clc
repnz
jae
add
xor
imul
clc
repnz
jae
add
add
mov
sar
mov
xchg
ret
mov
mov
mov
xchg
ret
add
out
add
push
pushl
push
mov
xchg
ret
mov
sahf
mov
push
mov
xchg
ret
add
mov
push
mov
or
add
repnz
jae
lcall
xor
inc
add
add
add
add
mov
clc
repnz
jae
fiaddl
add
ljmp
mov
fwait
cld
nop
jmp
flds
imul
mov
je
add
sti
faddl
xchg
ret
leave
xchg
bound
imul
mov
stc
clc
repnz
jae
add
add
add
fwait
cld
nop
jmp
xchg
xchg
out
add
loope
pop
clc
repnz
jae
add
sbb
mov
roll
mov
clc
repnz
jae
xor
mov
xchg
ret
ficoml
add
imul
popa
add
repnz
jae
xor
iret
add
push
scas
and
clc
repnz
jae
dec
cwtl
hlt
popa
loope
repz
or
popa
add
repnz
jae
imul
mov
push
mov
xchg
ret
add
add
inc
pop
stc
push
push
mov
xchg
ret
pusha
add
mov
pop
call
fwait
cld
nop
jmp
mov
add
pop
movsl
lock
mov
fsubrl
clc
repnz
jae
les
insb
mov
mov
xchg
ret
pusha
add
dec
pusha
clc
repnz
jae
cmp
mov
incb
jne
clc
repnz
jae
add
add
lcall
fwait
cld
nop
jmp
mov
ljmp
repz
mov
xchg
ret
add
add
hlt
rolb
mov
mov
fwait
cld
nop
jmp
test
add
insb
add
repnz
jae
pusha
add
hlt
ficompl
add
cld
nop
jmp
add
add
add
add
mov
xchg
ret
add
add
inc
add
inc
and
clc
repnz
jae
insb
add
push
mov
xchg
ret
insb
div
add
add
movsb
adc
mov
sub
push
mov
xchg
ret
cs
fiaddl
mov
mov
xchg
ret
mov
mov
push
cmp
mov
xchg
ret
je
add
add
mov
xchg
ret
hlt
repnz
add
hlt
iret
ds
fwait
cld
nop
jmp
ss
fdiv
ss
jmp
add
hlt
out
add
add
add
add
ljmp
mov
bound
call
nop
jae
add
add
movzwl
clc
repnz
jae
iret
je
add
clc
jmp
jle
mov
dec
add
inc
add
add
mov
clc
repnz
jae
cs
add
push
hlt
inc
cmp
add
add
rolb
jnp
mov
dec
mov
clc
repnz
jae
xor
add
mov
nop
jae
add
add
add
adc
je
add
clc
repnz
jae
out
add
mov
add
clc
repnz
jae
add
add
mov
sar
repnz
jae
divb
add
push
add
jp
push
mov
xchg
ret
mov
fsub
loope
add
clc
repnz
jae
fiaddl
add
ljmp
xor
test
push
mov
xchg
ret
ljmp
loop
push
mov
xchg
ret
add
add
inc
jecxz
pop
fwait
cld
nop
jmp
add
add
je
push
mov
jae
test
fsubrs
inc
push
imul
mov
mov
xchg
ret
inc
lcall
lods
push
mov
xchg
ret
add
mov
add
out
das
push
clc
repnz
jae
push
mov
add
cmpsl
push
push
push
mov
xchg
ret
popa
out
add
mov
aas
clc
repnz
jae
add
sbb
xchg
insb
push
clc
repnz
jae
add
add
xor
sbb
push
push
mov
xchg
ret
add
add
enter
jmp
add
add
xor
add
clc
repnz
jae
out
pusha
add
mov
nop
jae
add
fstps
hlt
add
adc
repnz
jae
jle
mov
mov
clc
repnz
jae
pusha
mov
hlt
or
xor
add
clc
repnz
jae
add
cmp
clc
repnz
jae
add
add
jnp
dec
add
cld
nop
jmp
pusha
jle
jle
ljmp
push
mov
xchg
ret
ss
add
mov
inc
adc
repnz
jae
add
add
inc
clc
repnz
jae
add
mov
add
add
xchg
repnz
clc
repnz
jae
add
sbb
add
add
dec
out
add
mov
pusha
les
push
mov
xchg
ret
add
xchg
mov
out
adc
add
clc
repnz
jae
leave
add
xor
hlt
sub
test
idiv
clc
repnz
jae
cmp
sbb
repnz
jae
cwtl
je
add
add
clc
repnz
jae
hlt
add
add
test
cmc
clc
repnz
jae
insb
xchg
xchg
mov
nop
jae
ljmp
push
clc
repnz
jae
add
cs
je
xor
pop
clc
repnz
jae
add
add
cs
add
addb
mov
in
inc
add
popf
and
sub
xor
add
fmul
dec
outsl
and
clc
repnz
jae
push
add
add
add
add
clc
repnz
jae
mov
xchg
add
nop
jae
add
pusha
fadds
insb
add
scas
xor
clc
repnz
jae
xchg
hlt
add
popa
mov
xchg
xchg
or
icebp
leave
inc
add
ljmp
in
add
fwait
cld
nop
jmp
pop
add
xchg
add
pushl
push
mov
xchg
ret
ljmp
clc
repnz
jae
add
cmp
cs
clc
repnz
jae
add
xor
cld
nop
jmp
add
add
add
les
fwait
cld
nop
jmp
add
je
add
xchg
jo
inc
add
add
mov
or
nop
jae
add
ljmp
jl
clc
repnz
jae
pop
add
adc
push
clc
repnz
jae
xchg
sbb
orl
add
scas
or
sarb
pop
iret
add
loop
mov
pushf
ror
push
mov
xchg
ret
iret
push
stos
add
pop
or
repnz
jae
push
mov
add
xor
icebp
fwait
cld
nop
jmp
pop
sub
out
out
add
clc
repnz
jae
jle
sbb
hlt
push
sbb
inc
in
repnz
jae
add
add
add
xor
mov
push
jae
repnz
jae
add
cmp
xor
push
mov
xchg
ret
sub
add
add
mov
clc
repnz
jae
xchg
add
nop
jae
add
add
add
roll
mov
bound
mov
inc
sub
add
inc
add
mov
xchg
test
dec
or
repnz
jae
add
push
aaa
mov
ret
add
les
add
insb
add
insb
add
add
add
adc
aaa
loop
add
add
mov
mov
push
mov
xchg
ret
add
lcall
clc
repnz
jae
add
iret
cs
decl
clc
repnz
jae
popa
add
loope
mov
div
fisttpll
nop
jae
insb
leave
test
flds
std
mov
clc
repnz
jae
test
add
add
popa
xchg
movzwl
clc
repnz
jae
add
fcoms
push
mov
xchg
ret
push
add
fadds
lods
mov
clc
repnz
jae
lea
lcall
inc
lock
repnz
jae
add
add
xor
push
clc
repnz
jae
push
add
add
stos
add
jmp
cld
nop
jmp
sbb
xor
sti
call
fwait
cld
nop
jmp
add
sbb
insb
or
sbb
cmp
repnz
jae
add
mov
or
clc
repnz
jae
xchg
add
js
leave
fwait
cld
nop
jmp
popa
mov
xor
repnz
push
fwait
cld
nop
jmp
add
add
jle
add
inc
hlt
inc
add
cmp
add
imul
and
push
mov
xchg
ret
add
sub
mov
push
imul
nop
jae
add
mov
clc
repnz
jae
add
mov
icebp
shl
add
or
jmp
incl
add
inc
cld
or
jmp
sub
mov
in
dec
lea
push
mov
xchg
ret
hlt
out
je
sub
add
clc
repnz
jae
popa
cwtl
notb
call
clc
repnz
jae
mov
fcomp
lock
sub
leave
clc
repnz
jae
xor
add
fiadds
xchg
push
pop
push
mov
xchg
ret
sbb
add
add
sub
test
nop
jae
cwtl
add
mov
movb
add
subl
jp
test
repnz
jae
mov
pop
imul
clc
repnz
jae
push
add
add
add
sub
leave
leave
inc
add
add
dec
leave
fimull
xlat
inc
add
xor
mov
repz
repnz
jae
add
dec
mov
clc
repnz
jae
hlt
out
sbbl
jb
clc
repnz
jae
add
push
loope
cmp
sbb
inc
add
or
std
sub
fwait
cld
nop
jmp
jle
hlt
cwtl
mov
lret
repnz
jae
inc
add
xchg
jne
subl
clc
repnz
jae
sbb
add
in
jmp
clc
repnz
jae
add
fcoms
or
popa
add
repnz
jae
add
add
add
add
mov
or
repnz
jae
mov
add
mov
clc
repnz
jae
mov
leave
lea
testb
lea
clc
repnz
jae
xor
add
lcall
jae
pusha
add
out
add
add
jae
add
jle
popa
add
add
test
clc
repnz
jae
inc
out
gs
clc
repnz
jae
add
xor
add
add
clc
repnz
jae
add
mov
inc
clc
repnz
jae
xchg
add
les
jns
clc
repnz
jae
add
add
xor
mov
inc
add
cmp
out
push
xlat
pusha
add
nop
jae
iret
mov
les
add
clc
repnz
jae
push
push
add
mov
rcrb
cld
nop
jmp
mov
push
out
mov
xchg
lock
pop
test
fwait
cld
nop
jmp
xor
imul
clc
repnz
jae
add
mov
fldenv
popa
add
cld
nop
jmp
add
loope
jle
xor
add
clc
repnz
jae
add
mov
add
sti
xor
push
mov
xchg
ret
ljmp
xor
clc
repnz
jae
mov
mov
fwait
cld
nop
jmp
je
add
add
clc
repnz
jae
xchg
add
add
test
loop
mov
leave
push
mov
xchg
ret
add
inc
add
add
gs
add
push
mov
xchg
ret
loope
add
push
clc
repnz
jae
add
mov
and
nop
jae
add
add
xchg
dec
add
mov
clc
repnz
jae
add
add
add
call
in
inc
sub
add
add
test
fdivr
lcall
loop
incl
push
cs
mov
fwait
cld
nop
jmp
iret
push
popa
mov
mov
add
lret
mov
xchg
ret
xchg
lea
add
dec
cmp
repnz
jae
out
add
mov
add
clc
repnz
jae
add
xchg
add
push
mov
dec
add
nop
lods
sbb
add
aaa
add
inc
je
and
fwait
cld
nop
jmp
testb
add
add
mov
or
clc
repnz
jae
sbb
push
jp
enter
jae
les
iret
cmp
sbb
or
jae
add
add
stos
sbb
xchg
shrl
enter
clc
repnz
jae
add
add
push
imulb
nop
jmp
out
repnz
add
in
jbe
sub
fwait
cld
nop
jmp
je
stos
add
mov
mov
add
or
stos
add
out
jo
jge
add
mov
cld
nop
jmp
xchg
add
add
lcall
repnz
jae
mov
insb
insb
xchg
mov
lcall
in
call
mov
pusha
add
fwait
cld
nop
jmp
je
add
int
rolb
repnz
jae
push
dec
fimuls
and
add
clc
repnz
jae
lea
xor
clc
repnz
jae
testb
or
clc
repnz
jae
add
add
ret
clc
repnz
jae
add
add
add
clc
repnz
jae
test
add
add
arpl
add
loop
push
mov
xchg
ret
insb
test
cmp
sbb
push
mov
xchg
ret
push
loope
add
je
fucomip
test
lcall
repz
ljmp
sbb
push
lds
push
mov
int
add
pop
testb
add
and
mov
mov
call
clc
repnz
jae
bound
popa
stc
jmp
stos
hlt
je
sbb
pusha
push
add
add
sub
repnz
jae
add
add
clc
repnz
jae
add
push
mov
inc
and
fwait
cld
nop
jmp
leave
repnz
mov
mov
popf
pop
add
cmp
add
xlat
sbb
add
mov
imul
std
mov
add
mov
and
lock
mov
rolb
mov
push
add
push
add
xchg
nop
add
mov
inc
add
loop
mov
stc
cmp
lods
shll
mov
dec
jb
mov
mov
cmp
add
add
mov
add
enter
sahf
addb
push
cmp
jnp
insb
es
push
add
add
dec
push
test
out
js
sahf
mov
repz
scas
movnti
sbb
popa
adc
mov
inc
mov
mov
lds
mov
mov
sub
insb
out
std
sub
push
inc
loop
mov
add
sub
mov
negb
and
int
ret
jb
mov
mov
scas
and
mov
test
and
mov
sbb
addb
in
pop
pop
mov
add
mov
jno
add
bound
mov
add
fcomi
add
adc
cltd
call
mov
mov
iret
popa
push
xchg
add
fwait
data16
mov
outsb
flds
sub
sbb
mov
mov
mov
sub
sub
add
add
aas
clc
xor
mov
push
pop
push
add
jae
mov
xlat
lods
push
jbe
cmp
stos
push
add
fnsave
push
add
dec
or
sahf
sbb
lret
add
ret
pop
orl
ret
lds
std
lock
rolb
mov
rolb
mov
nop
add
add
sbb
jo
mov
jno
sub
mov
ja
aam
int
or
or
xchg
add
test
test
or
add
xor
inc
add
dec
mov
leave
js
xchg
stc
and
dec
ja
pop
repnz
add
sbb
add
test
inc
xchg
jno
jae
loopne
mov
gs
mov
mov
pop
add
movsb
nop
add
fistl
jmp
add
add
mov
dec
in
push
dec
or
repz
xchg
pop
imul
sti
les
xchg
sbb
imul
ja,pt
xor
aas
jnp
lock
idivb
movsl
nop
add
add
mov
mov
mov
dec
jle
ljmp
nop
add
movsl
or
pushf
aas
fldenv
mov
mov
addr16
add
add
decl
pop
js
add
or
add
add
lret
pop
sarl
inc
add
mov
sub
fimuls
les
mov
xor
mov
fs
cmp
add
add
outsl
push
add
repnz
dec
mov
dec
fnstcw
ficoml
mov
mov
mov
fwait
jmp
cmp
out
pusha
add
mov
fistps
je
das
cmp
inc
add
mov
mov
imul
adc
mov
mov
rolb
mov
add
push
add
mov
jnp,pt
add
fdivs
mov
jmp
inc
mov
add
or
fbstp
mov
add
mov
push
cwtl
push
enter
jge
jae
lahf
aam
popf
dec
ja
out
inc
mov
cmp
add
das
dec
fistpll
pop
lahf
stos
pop
and
and
outsl
xchg
test
pop
mov
xchg
idivl
add
add
sbb
add
andl
sbb
mov
inc
jnp
and
lods
mov
or
mov
mov
rolb
fldcw
movsb
das
mov
add
mov
rcrl
add
into
pusha
add
fwait
pop
jecxz
add
mov
xlat
popf
cmp
stos
leave
jecxz
loopne
mov
jmp
add
bound
mov
cmc
jae
push
add
xchg
ficomps
push
add
mov
jb
mov
mov
mov
mov
nop
add
pop
fwait
movsb
mov
xor
aam
add
or
and
add
cld
repz
add
outsb
iret
mov
pop
push
jmp
mov
cs
sarl
in
push
add
jle
push
xlat
out
int
mov
mov
aam
adc
xor
mov
mov
sbb
and
ret
mov
out
imul
aaa
les
mov
pushf
push
loopne
mov
inc
rolb
mov
xor
adc
mov
dec
lods
test
lock
xchg
jmp
repnz
outsl
mov
pop
leave
cmp
cmp
mov
cmp
dec
push
xchg
fiadds
mov
add
aam
add
lahf
add
xchg
aam
push
push
add
fiadds
add
xor
push
in
mov
test
push
sub
mov
mov
pop
in
sub
das
mov
mov
add
leave
out
push
cltd
enter
int3
add
pop
je
push
cmp
add
cmpsl
add
mov
mov
call
daa
sbb
push
movsb
xlat
mov
xor
jo
mov
push
lock
cmpsl
xchg
out
in
cmp
sbb
pop
packsswb
dec
lds
insl
pop
mov
xor
mov
aaa
jmp
nop
add
mov
repnz
add
mov
add
cwtl
enter
xor
mov
jg
jo
mov
dec
loopne
mov
rcrl
and
mov
push
cwtl
movsb
notl
mov
mov
mov
mov
or
bound
mov
sub
add
mov
push
pop
push
movsb
arpl
xor
mov
jns
je
or
popf
dec
idivb
add
sub
add
mov
xchg
cs
test
sub
xchg
mov
popf
mov
popa
adc
mov
cwtl
loope
xor
mov
jbe
imul
add
mov
mov
sub
into
mov
cmpsb
pusha
add
daa
mov
loope
sbb
lods
test
xchg
add
push
jecxz
cmc
add
mov
loope
test
movsb
fsub
inc
xchg
cmpsl
push
sbb
pop
jns
jae
adc
data16
xchg
jp
sbb
jl
add
mov
mov
ss
add
and
mov
xor
mov
repnz
mov
sahf
fnstsw
popa
ds
lahf
push
add
mov
shll
notl
add
sbb
mov
lds
jb
mov
xor
mov
add
fs
jg
enter
add
jecxz
xor
mov
mov
daa
push
cmp
mov
test
not
aas
bound
mov
popf
adc
mov
iret
loope
inc
add
call
adc
pop
cs
xchg
cld
mov
add
mov
mov
add
mov
popf
aad
xlat
call
fimuls
imul
bound
mov
jmp
sbb
jb
mov
mov
sub
xor
test
mov
mov
mov
data16
or
iret
xchg
add
push
add
mov
int3
jae
push
inc
jno
pop
mov
push
mov
pop
pop
fwait
adcl
mov
mov
push
add
mov
inc
addr16
add
or
mov
push
add
cltd
cmpsl
xchg
add
push
jle
lods
jbe
outsb
into
rolb
mov
outsl
dec
inc
xchg
mov
push
mov
sbb
add
mov
out
iret
aaa
popf
loope
push
xor
mov
notl
mov
xor
mov
push
sub
mov
mov
enter
addr16
loope
jl
loop
mov
dec
mov
inc
mov
add
pop
mov
mov
and
mov
mov
ret
mov
imul
mov
inc
aad
repnz
ficoml
add
lods
mov
in
ds
sbb
add
clc
fstpt
add
mov
and
mov
and
inc
and
mov
inc
add
imul
mov
push
test
add
jmp
aas
loop
mov
dec
sub
dec
jb
mov
xor
add
jne
xchg
xor
adc
inc
je
in
jnp
enter
loope
add
loopne
mov
mov
add
sub
and
mov
dec
lods
jle
jb
mov
sub
pop
cmp
test
rcrl
xchg
xchg
inc
add
lea
add
fidivrl
push
nop
add
mov
xchg
mov
mov
scas
icebp
bound
mov
add
dec
scas
sbb
pop
inc
repz
arpl
mov
add
std
inc
mov
sub
xchg
inc
in
push
imul
mov
sbb
mov
out
gs
dec
jle
inc
or
cld
jne
or
decl
mov
add
jl
add
popf
arpl
xchg
pop
inc
add
mov
mov
inc
add
je
or
xor
xor
fidivrs
lock
mov
cmp
mov
jp
mov
push
mov
mov
cmpsb
jne
jb
mov
arpl
ds
mov
push
cmp
icebp
call
fs
sub
add
dec
repz
sbbl
lock
popa
push
xchg
mov
push
ss
test
or
adc
mov
notl
mov
adc
add
clc
rcll
cli
in
xor
and
mov
mov
add
mov
inc
call
add
or
sub
mov
add
adc
inc
in
mov
mov
shl
cld
scas
lret
pushf
dec
cmp
dec
push
or
or
daa
adc
push
or
jae
cld
adc
mov
add
sub
decl
addl
add
jg
das
rolb
mov
mov
mov
mov
xchg
rolb
mov
insl
loope
leave
fistl
add
add
mov
jge
add
mov
push
jae
sub
lock
mov
jg
add
hlt
xchg
add
fsubrl
add
sub
and
mov
dec
or
cld
ret
inc
sbb
imul
mov
cmp
add
cmpsb
scas
push
dec
outsb
stos
nop
add
xchg
out
stos
sub
movl
cld
pop
adc
out
push
add
inc
sbb
add
stc
mov
iret
fsubrl
jmp
jae
add
cmp
mov
push
repz
popf
fidivl
cmp
lds
jae
mov
dec
push
sub
add
dec
js
jge
add
fcompl
cmpsl
repz
add
cmc
sahf
xchg
push
add
cltd
mov
inc
div
add
call
in
in
sbb
sbb
adc
mov
add
jne
add
mov
add
or
add
fsubs
loopne
mov
out
aas
movsb
js
jmp
movsb
sbb
jle
add
inc
or
mov
add
test
mov
lret
push
dec
mov
push
adc
mov
inc
add
mov
lcall
loop
mov
test
nop
add
mov
loope
xchg
push
ret
stc
cmp
jmp
enter
fchs
add
pop
int3
sub
mov
cltd
push
lahf
jecxz
push
xor
mov
add
pop
movsl
jbe
add
sahf
imul
cltd
pop
push
ja
add
stos
mov
mov
push
mov
or
lock
scas
pop
add
add
add
jle
ds
add
mov
push
into
fnsave
mov
add
and
mov
aad
mov
movsb
mov
mov
mov
fs
sbb
mov
insb
adc
repz
int3
jl
sbb
add
stc
clc
daa
and
mov
test
mov
sub
sahf
stos
arpl
pop
cmp
inc
add
mov
xor
add
mov
aas
sahf
jo
mov
lcall
int3
scas
cmpsb
fiadds
jmp
mov
add
or
push
outsb
insb
loop
mov
sbb
jnp
ss
sub
loop
mov
std
fs
out
pop
clc
push
xchg
pop
sub
push
pop
lret
pop
jmp
push
inc
add
add
call
aad
adc
sbb
inc
shll
mov
sbb
dec
add
mov
sub
cwtl
push
jo
add
add
mov
lret
outsl
xorl
mov
lock
add
cmc
outsl
sub
sbb
mov
fucomp
dec
cmp
je
xchg
mov
add
jae
and
add
movsb
es
push
cmp
sub
insl
cmpsb
jp
add
push
int
mov
rolb
push
add
pop
ftst
fisttpll
mov
mov
stc
int3
adc
mov
popa
pop
or
mov
push
jae
pop
xchg
add
sub
and
add
mov
mov
dec
or
pop
sbb
push
mov
inc
gs
imul
cwtl
xchg
mov
stos
aam
push
mov
fdivrs
test
test
add
mov
jmp
fwait
dec
mov
ss
out
and
add
call
stos
popf
push
add
loop
mov
cmp
push
sbb
mov
mov
jne
add
jno
pusha
add
pop
js
out
in
movsl
pop
mov
pmulhw
add
mov
sbb
icebp
sahf
xrelease
cmp
andl
dec
adc
mov
adc
int
js
fdivp
imulb
mov
cli
lret
push
cli
mov
push
dec
jl
xchg
pop
std
in
ret
dec
add
mov
lret
out
adc
add
add
push
add
and
pop
xor
jo
mov
mov
mov
cmp
sub
in
add
sub
cmp
push
shll
in
dec
popl
cmc
mov
sbb
ss
and
dec
add
dec
insl
je
pop
stos
mov
pop
rcrl
push
mov
mov
mov
addb
mov
mov
add
add
cld
pusha
add
mov
xlat
fs
mov
mov
sub
cmp
sti
fwait
mov
leave
inc
ja
aaa
or
nop
add
js
or
mov
mov
add
or
imul
mov
mov
cmc
push
fimuls
add
add
sub
push
imul
cmc
lcall
jecxz
and
mov
inc
add
hlt
fcoms
je
push
mov
fadd
cmc
imul
jo
mov
push
mov
icebp
cmpsl
fmuls
or
add
mov
scas
sub
push
cwtl
ja
addr16
push
sbb
add
push
cmp
bound
mov
hlt
rolb
addr16
add
mov
mov
add
subl
imull
cwtl
push
jne
es
in
add
add
and
mov
mov
or
stc
lret
add
aaa
push
push
sbb
add
mov
cwtl
movsb
jle
add
seta
sub
rolb
mov
popa
test
jbe
add
mov
push
inc
stc
cli
xchg
pop
push
add
add
jnp
add
mov
dec
rolb
xor
sub
lods
mov
addl
pop
and
xchg
jmp
push
or
add
aas
mov
dec
out
pop
xchg
stc
xchg
push
mov
sub
nop
add
out
icebp
sub
lds
jl
insb
stc
neg
lods
pusha
add
mov
mov
mov
mov
or
pop
sbb
test
mov
mov
xlat
jecxz
mov
in
cmp
in
fsubs
add
mov
xchg
lret
mov
add
aaa
inc
add
seta
add
std
addr16
mov
push
movsl
scas
sub
test
push
sbb
add
mov
aad
filds
or
in
adc
mov
fdivrp
dec
arpl
mov
out
mov
add
add
inc
mov
pop
xor
loope
push
mov
mov
cltd
dec
sbb
testl
mov
cli
in
fildl
push
add
push
addb
es
loop
mov
or
pusha
add
xor
mov
call
das
stos
inc
sti
xchg
adc
mov
aas
pop
ficoms
mov
jle
add
cmp
jo
mov
add
jno
add
addb
mov
mov
mov
add
add
daa
xor
add
pop
cwtl
faddp
or
add
push
loop
mov
mov
gs
ljmp
icebp
xchg
cmp
out
mov
mov
xchg
enter
mov
push
mov
fs
pop
sub
sbb
in
lock
inc
inc
lods
lods
ficoms
adc
mov
add
loope
add
aam
cmp
test
xchg
push
leave
inc
push
addb
ret
xchg
push
jmp
shll
mov
add
xlat
add
mov
int3
outsl
inc
sbb
int
dec
ret
jg
pop
push
filds
les
ja
scas
or
mov
push
sub
adc
mov
jns
or
rcr
insl
mov
mov
xor
mov
sbb
add
mov
add
sarl
mov
push
jae
xlat
lcall
mov
mov
add
mov
add
mov
mov
or
les
sub
mov
add
jmp
loop
mov
test
mov
nop
add
cmp
add
mov
cli
fnstenv
outsb
out
cvttps2pi
pop
repz
mov
es
xchg
cmp
scas
cld
aam
in
ja
in
adc
mov
mov
sahf
addb
out
dec
mov
cmp
pushl
stos
dec
xor
inc
paddsw
add
or
adc
mov
xchg
xlat
aaa
nop
add
pop
push
dec
inc
cs
jnp
popa
push
nop
add
aad
add
leave
aas
push
jl
daa
adcl
xor
mov
xor
mov
push
mov
mov
mov
mov
xorl
push
cmp
adcl
add
daa
mov
xchg
dec
test
rolb
mov
addb
mov
mov
add
mov
push
push
add
mov
test
add
and
mov
fldt
xorl
add
inc
pop
inc
cmc
mov
add
loope
mov
mov
inc
ret
cmovb
mov
add
xchg
add
jne
or
subl
rolb
dec
jo
mov
movsl
daa
adc
fbstp
xor
mov
testb
fwait
out
sub
mov
mov
jne
jmp
jae
ret
js
add
fiaddl
insb
arpl
dec
rolb
mov
loope
add
adc
push
add
jecxz
pushf
mov
out
jbe
xor
mov
mov
mov
scas
clc
rcl
add
stc
push
add
add
inc
arpl
movb
mov
mov
lret
cmp
iret
add
add
loopne
mov
sbb
fsubl
bound
mov
mov
sub
hlt
addb
pop
and
mov
mov
push
add
inc
and
shll
add
jno
aad
decb
lds
icebp
neg
gs
movsb
ja
repnz
loopne
mov
sti
and
inc
sub
dec
aas
out
ss
sbb
and
mov
lahf
int3
clc
push
xchg
push
add
mov
xor
add
enter
mov
lods
and
add
mov
xchg
dec
add
push
add
pop
xorl
loopne
mov
outsl
jmp
popa
inc
add
in
sbb
and
jge
movsl
xor
cmp
hlt
jb
mov
xchg
sti
add
mov
lods
shrl
add
fnstcw
lock
lcall
inc
out
enter
xor
jp
add
das
sub
pop
dec
mov
push
mov
mov
hlt
je
jo
mov
in
frstor
xor
loop
mov
add
jecxz
pop
rolb
mov
add
push
shll
push
sahf
in
sub
fdivl
pop
js
outsb
hlt
mov
sbb
add
repnz
mov
mov
add
iret
addb
jecxz
mov
repz
add
add
add
test
insl
jo
mov
scas
mov
mov
sub
js
out
mov
mov
dec
jp
and
movsb
sub
inc
add
test
movb
add
lods
xchg
or
xor
test
dec
jecxz
add
add
dec
sbb
cmp
xchg
mov
jae
cmpsl
mov
xor
xlat
xor
mov
mov
rolb
sbb
jo
mov
js
addb
rolb
ret
jecxz
xor
rorl
fwait
insb
push
lods
xchg
mov
mov
jg
and
inc
push
jge
dec
es
addr16
jbe
int3
mov
xor
pop
mov
or
fstpl
rolb
mov
mov
add
lock
mov
ret
mov
adc
mov
rolb
mov
icebp
mov
jb
mov
jnp
int
imul
add
mov
xchg
jno
pushf
cmp
or
lcall
push
xor
movl
mov
add
loope
ret
xchg
mov
push
flds
sbb
xchg
sub
jge
xchg
or
sub
add
mov
mov
mov
stos
xchg
and
les
test
pop
leave
cmp
rolb
mov
mov
mov
add
cmc
push
lahf
ret
popa
push
movsl
mov
aaa
xor
mov
cmp
lahf
cld
inc
out
jp
dec
and
mov
mov
xchg
or
add
mov
add
loopne
mov
jg
pop
imul
jns
add
lock
lret
inc
pop
xchg
adc
mov
or
stos
lods
stos
imul
add
das
sub
add
imul
mov
iret
and
mov
movl
add
mov
push
nop
add
out
or
add
xchg
insb
insb
addb
push
push
jmp
add
or
clc
xchg
or
pop
test
std
push
data16
mov
push
cli
mov
jg
add
in
lods
jle
in
add
mov
repnz
pusha
add
leave
mov
mov
cld
and
add
mov
jp
push
pop
mov
inc
add
add
push
adc
fwait
dec
inc
movsl
dec
jmp
in
add
es
add
jp
inc
test
xor
mov
inc
and
das
lret
mov
jo
mov
jmp
add
sar
inc
sbb
add
rolb
mov
xchg
loope
xor
mov
enter
cmp
add
add
insl
ret
mov
push
dec
jae
cmp
jmp
mov
jns
imul
add
imul
testl
ja
or
into
fnstcw
add
mov
loope
jecxz
add
xor
mov
add
mov
cwtl
add
rolb
pop
leave
popf
addr16
lret
add
push
and
push
add
mov
cs
push
add
add
insb
add
add
nop
add
sbb
inc
add
jmp
pop
cld
popa
adc
dec
orl
sbb
mov
and
mov
sub
push
or
add
xor
mov
fxch
mov
or
or
jbe
decb
mov
add
cmp
cmpsl
insl
mov
cs
push
jns
push
mov
ret
fisttpll
cmp
je
add
add
mov
ficomps
cmpsb
or
push
inc
xchg
test
popa
jl
add
mov
mov
jle
add
mov
add
add
mov
sub
or
mov
rolb
mov
js
jno
inc
aad
inc
jno
xchg
push
pushf
cmp
add
mov
lods
inc
and
cmc
sub
or
cmp
ficoml
mov
pop
lods
bound
mov
aaa
mov
loope
int
xchg
add
mov
jecxz
xor
add
lret
jmp
push
xchg
test
int3
lea
js
lret
mov
xchg
jmp
add
loopne
mov
push
dec
xorl
popa
pop
sbb
mov
out
jl
hlt
inc
add
fwait
add
inc
scas
movsl
sbb
bound
mov
xor
mov
add
jle
aaa
jbe
add
mov
cmp
movsl
test
sub
pop
aas
mov
add
jbe
ss
inc
xor
mov
or
jne
cmpsl
shl
mov
subl
loope
test
jp
push
add
or
clc
or
movsl
mov
shl
lea
mov
xchg
leave
movsl
rolb
mov
mov
sahf
pop
mov
jnp
inc
add
aaa
mov
push
or
mov
add
loope
out
rolb
mov
pop
imul
loope
mov
aam
mov
cmp
xchg
sbb
xchg
dec
sbb
push
std
mov
xchg
jns
negl
mov
sbb
mov
mov
and
mov
and
mov
add
add
push
imul
aas
das
dec
add
mov
les
jb
mov
lret
push
stos
mov
fistpll
jmp
or
rolb
mov
loopne
mov
inc
jmp
ficoms
mov
add
test
and
mov
sbb
add
lea
add
sub
mov
cli
sahf
dec
out
leave
rcll
mov
mov
dec
in
push
dec
cmp
inc
add
mov
rolb
push
add
mov
dec
mov
je
xor
mov
add
mov
mov
add
rolb
popf
jns
cld
lcall
cmp
mov
add
mov
jae
lcall
loope
mov
mov
cmpsb
bound
mov
mov
mov
push
ja
movsb
mov
inc
scas
sbb
ss
inc
loope
fistps
add
sahf
or
mov
hlt
jle
sub
insb
adc
incl
mov
dec
mov
mov
add
mov
mov
dec
inc
fidivl
cmp
scas
jmp
dec
or
enter
inc
add
push
dec
insb
fistps
add
jnp
sub
cmpsb
outsl
dec
jp
mov
rcl
add
cmp
add
popf
stos
imul
or
rolb
mov
add
stc
mov
mov
nop
add
xchg
les
lods
mov
mov
adc
mov
dec
xor
mov
das
aam
add
movsl
push
rolb
pop
and
add
fs
cmc
je
ret
mov
add
mov
push
add
lock
sti
inc
jg
scas
cmc
cld
adc
ss
fcmove
ds
mov
add
out
add
xchg
inc
or
ja
popf
or
sahf
shr
test
int3
decl
jge
pop
stos
mov
mov
rolb
mov
cwtl
popa
idivb
arpl
std
dec
daa
repz
mov
bound
mov
push
popf
sbb
fbstp
push
fidivl
fdivr
add
mov
add
fdivl
or
adc
mov
mov
push
stc
cmp
add
stc
js
pop
pop
gs
sub
mov
xchg
dec
push
movsb
rolb
jns
pop
aas
mov
icebp
mov
aad
mov
sbb
jns
add
cmp
cmpsb
fcomip
mov
dec
pop
pop
inc
add
add
jg
fs
sub
sub
add
mov
add
lret
xor
or
rcrl
fcmovu
stos
movsb
xor
jl
ss
add
addb
mov
addl
lea
bound
mov
mov
fstl
add
cmp
push
add
pushf
push
fidivrs
jne
or
xchg
int
pop
dec
xor
mov
mov
jl
add
mov
scas
or
add
mov
mov
pop
mov
dec
mov
add
mov
jle
pop
imul
cmp
push
mov
add
mov
add
loopne
mov
pop
rolb
mov
add
mov
sub
lcall
data16
imul
xor
push
pop
push
sub
inc
add
movsb
pop
and
fistpl
mov
add
jae
jns
pushf
ljmp
add
xchg
lea
in
add
mov
add
leave
adc
fiadds
pop
insl
add
lock
and
mov
add
add
insl
dec
repnz
add
pop
jne
jecxz
loop
mov
lock
mov
add
imul
and
mov
mov
add
mov
daa
incb
in
jl
in
xchg
pop
dec
mov
add
and
inc
add
add
fmuls
imul
xchg
in
out
sbb
xchg
mov
call
adc
addb
push
ja
add
mov
outsb
sbb
mov
aas
jno
scas
in
aaa
push
sbb
sub
or
mov
outsb
ljmp
pusha
add
pop
popa
ret
repz
jge
add
mov
sti
add
mov
xchg
aaa
cld
dec
sub
add
mov
stc
test
fistl
inc
pop
aaa
outsl
fcmovbe
sbb
ss
inc
xchg
nop
add
mov
cmpsl
hlt
or
add
sbb
fsts
fcmovnbe
add
sub
add
mov
inc
or
add
inc
scas
outsb
ret
test
push
xchg
jbe
add
fs
movb
push
ss
mov
add
and
push
outsl
in
shll
and
fst
ljmp
pop
test
inc
mov
mov
or
adc
mov
cmc
xor
jnp
add
stos
mov
add
mov
mov
cmp
mov
mov
int3
dec
mov
jp
dec
pusha
add
mov
mov
sbb
add
call
inc
jmp
es
mov
and
add
addr16
inc
jge
cltd
mov
add
sahf
ja
rolb
cmp
sbb
add
imul
add
mov
mov
jns
sti
in
mov
mov
mov
mov
out
je
aaa
sub
add
sub
popf
cmp
add
or
add
jle
add
pusha
add
mov
mov
add
pop
mov
add
pop
mov
je
addb
pop
add
push
pop
cld
cmpsl
and
mov
lock
add
xorl
test
int
fbstp
sahf
sbb
stc
or
fdivr
or
adc
mov
xchg
sub
aas
inc
jne
xlat
test
test
cmp
fidivl
into
icebp
rolb
mov
add
mov
mov
and
stos
test
sbb
pop
nop
add
rol
add
out
dec
inc
add
ret
aad
add
add
inc
inc
add
aad
in
or
movb
mov
add
mov
enter
mov
add
xor
add
mov
nop
add
cltd
xor
mov
out
mov
std
cmp
aaa
pusha
add
bound
mov
push
loop
mov
and
fnstcw
add
xor
cwtl
rolb
mov
add
repz
or
adc
fwait
inc
imul
push
add
aam
addb
into
daa
pop
push
stos
iret
ret
addb
mov
imul
mov
mov
ret
sarl
sub
jle
idivl
lret
ret
dec
cmp
jl
cli
mov
push
or
dec
sahf
adc
mov
repnz
mov
js
out
stos
inc
add
insl
mov
and
jecxz
push
leave
addb
xchg
stos
ds
je
pop
fimull
add
mov
pop
movsb
insb
lods
pop
or
in
mov
fadds
jbe
jg
aam
push
add
jmp
add
and
rolb
dec
adc
add
xchg
inc
add
push
add
add
add
sub
mov
xor
lods
cmc
lods
rolb
mov
cmpl
sub
repz
mov
pop
sub
lcall
dec
in
sbb
scas
sbb
test
xchg
in
lcall
ljmp
push
adc
dec
mov
fcomps
add
add
dec
xor
mov
cld
test
xor
jbe
mov
jp
cmp
push
loope
rolb
mov
pop
jns
js
sbb
pop
or
out
add
mov
cmpsb
cld
fwait
jle
in
or
add
add
jbe
xor
mov
and
xchg
jb
mov
xchg
add
xor
pop
add
xchg
xor
repnz
test
pop
test
nop
add
daa
add
pop
ret
dec
sti
icebp
addl
insl
inc
dec
pop
cld
filds
enter
nop
add
jecxz
addr16
mov
fstpl
xor
mov
add
fstpt
dec
rolb
mov
pop
add
mov
divb
aad
pop
movsb
and
rolb
scas
push
adc
mov
cmp
test
cmp
popf
sub
adc
xchg
jmp
add
loop
mov
in
hlt
clc
insb
sub
add
gs
cmp
sbb
mov
mov
test
add
roll
dec
rolb
mov
push
jno
insb
popf
pop
arpl
pop
mov
jo
mov
fisttpl
xor
mov
jo
mov
jns
mov
fmull
mov
add
cmpsl
mov
mov
add
lds
pop
das
fisubrs
adc
les
addb
sti
jecxz
cmpsb
inc
mov
and
int3
stos
push
mov
loope
addb
cmp
add
cmp
mov
add
add
mov
addb
sub
pushf
and
mov
mov
mov
ja
into
mov
rcll
cli
fadds
add
outsl
inc
cmp
dec
xchg
sahf
sub
aam
and
in
cmp
push
inc
sub
mov
aad
mov
mov
dec
mov
inc
push
jo
mov
mov
add
call
sub
xchg
pop
test
xor
mov
pusha
add
clc
mov
dec
ljmp
stos
mov
add
aaa
lock
pop
push
xchg
pop
pop
pusha
add
repz
out
mov
add
leave
xchg
sbb
xchg
out
or
ljmp
add
cmp
movsl
sbb
test
fcomps
ret
pushf
out
xor
insl
cli
push
xchg
or
mov
mov
inc
add
mov
sub
add
inc
xor
add
int3
les
jnp
ja
mov
mov
sbb
mov
mov
add
mov
out
jg
inc
cmpsb
mov
mov
add
and
test
mov
sbb
mov
iret
stos
aad
int3
inc
push
push
xchg
add
pushfw
cmp
lea
lret
outsl
inc
es
xor
mov
add
pop
inc
add
push
mov
mov
outsl
mov
jo
mov
inc
lds
in
insb
and
mov
syscall
addb
pop
out
add
mov
mov
aad
dec
mov
xor
mov
xor
mov
test
je
push
push
or
push
and
mov
mov
mov
sub
dec
cmpsb
xchg
inc
add
loopne
mov
lds
add
aas
jge
iret
push
add
jno
xchg
add
xor
mov
mov
stos
std
fidivl
in
call
divb
mov
and
shll
add
arpl
xor
bound
mov
imul
mov
bound
mov
sbb
iret
inc
pop
or
add
sbb
rolb
les
mov
jp
mov
xchg
mov
jo
mov
pop
push
jge
aaa
xorl
arpl
cmp
das
and
push
mov
insb
lock
loope
add
enter
popf
push
in
orl
lock
mov
inc
add
mov
mov
addb
xlat
cld
adc
mov
mov
add
add
loop
mov
add
add
sbb
negl
cwtl
out
pop
scas
mov
inc
arpl
dec
sub
xchg
lahf
das
mov
or
add
lret
sub
pop
mov
sub
add
mov
or
dec
pop
xchg
rolb
mov
add
adc
mov
jo
mov
jecxz
mov
jl
jg
stos
imul
xchg
inc
pop
insb
stos
cmc
out
add
pop
jae
push
xchg
ficoms
xchg
roll
jg
popf
push
les
mov
pop
insb
and
rolb
mov
add
mov
xchg
add
lods
mov
ds
add
pop
push
sub
mov
in
addb
jp
jecxz
xchg
mov
lods
dec
ljmp
push
lea
add
add
inc
scas
cmpsl
sbb
mov
add
dec
lods
pop
hlt
cmp
add
mov
push
mov
mov
and
mov
das
sbb
dec
adc
add
cmc
jns
pop
es
rorl
dec
js
aas
pushf
enter
fistps
lods
xchg
pop
out
add
push
xchg
rolb
mov
sbb
pusha
add
test
outsb
sub
mov
ljmp
mov
or
mov
add
in
cmp
ficomps
mov
sbbl
mov
aad
or
add
mov
mov
mov
add
rorl
scas
cltd
cmp
sub
adc
mov
add
xor
sbb
xchg
mov
mov
arpl
add
rolb
mov
mov
push
sub
scas
dec
or
adc
mov
mov
cmp
enter
add
add
scas
imul
xor
jno
add
mov
arpl
test
ljmp
inc
add
test
popf
or
aas
shll
iret
sub
pop
sbb
xor
mov
icebp
call
sbb
add
dec
push
sbb
mov
shrl
and
loope
mov
mov
inc
pop
mov
add
mov
rolb
sbb
or
push
xor
mov
add
or
mov
adc
add
dec
sbb
mov
push
add
mov
cmp
imull
mov
add
mov
orl
mov
cmp
fdivrs
sahf
inc
dec
adc
add
ret
mov
test
inc
popl
popa
btcl
xchg
pop
sbb
lds
testl
dec
sahf
adc
mov
sarl
inc
sub
mov
adc
mov
add
add
add
add
xor
mov
and
mov
inc
sub
push
orl
jg
in
mov
add
mov
jmp
pop
inc
icebp
loopne
mov
add
mov
aam
idiv
imul
add
in
lods
sahf
mov
pop
xchg
addb
and
sub
jo
mov
mov
mov
sub
hlt
dec
adc
sub
push
pop
push
add
xchg
dec
mov
mov
mov
add
ja
jne
pop
cmp
mov
mov
push
sub
cmp
lahf
pop
xor
push
or
add
jno
add
and
add
repz
sub
test
ja
out
jl
add
xchg
xor
and
ljmp
push
mov
inc
insb
push
push
add
xor
mov
std
arpl
pop
and
into
repnz
mov
add
sahf
clc
cmp
mov
test
xchg
sub
in
xor
add
mov
pop
inc
inc
cmp
rcl
dec
pop
and
xchg
push
push
jmp
cli
lcall
sub
add
jno
add
cmpsb
push
sbb
lock
pop
test
pop
sbb
aaa
ja
xchg
scas
ja
stos
xchg
mov
add
lods
jmp
add
xchg
icebp
rolb
mov
pusha
add
and
mov
jl
movsb
out
fiaddl
add
add
or
test
mov
add
push
ret
ljmp
add
mov
js
mov
mull
pop
push
fwait
cmpsb
mov
add
adc
xchg
mov
dec
jmp
pop
and
fildl
lcall
fdivl
lret
fmuls
into
rolb
mov
mov
jbe
and
cmpl
icebp
fsubr
imul
fdivl
add
or
popf
push
add
pop
jl
add
inc
inc
push
cmovge
fsubrs
aaa
push
add
mov
jmp
call
jp
add
mov
mov
jmp
ds
loop
mov
mov
pop
rolb
mov
fcmovbe
addr16
jg
dec
ficoms
mov
push
in
out
clc
lods
push
lods
sub
rolb
mov
pushf
mov
fldt
add
jnp
add
out
in
sti
cmp
into
jmp
add
cmp
mov
push
movsl
mov
mov
and
add
inc
jp
scas
dec
jo
mov
das
jns
cs
inc
push
daa
pushf
enter
inc
mov
ds
scas
fdivrl
mov
repnz
mov
push
out
call
mov
movsb
mov
test
pop
and
sahf
mov
add
imulb
rolb
lods
cmpsl
inc
add
sbb
add
scas
mov
push
pop
or
inc
movsb
pop
call
mov
arpl
rolb
mov
leave
iret
ficoms
add
mov
mov
add
inc
mov
jb
mov
push
add
mov
mov
mov
cltd
or
add
add
mov
mov
ret
js
add
xchg
mov
mov
imulb
cltd
dec
xchg
inc
fs
add
fists
push
cli
sbb
ficoml
rolb
mov
in
jmp
add
sti
xchg
jl
addb
loope
mov
movsl
xor
add
pop
xchg
add
adc
mov
mov
push
dec
rcr
xchg
add
xchg
outsl
sbb
push
or
fildl
mov
rorl
sbb
ret
push
add
xor
mull
inc
mov
mov
mov
pop
fiadds
hlt
sub
stos
push
jmp
mov
push
orl
mov
cmpl
lods
adc
push
pushf
mov
sub
in
sub
pop
rcrl
out
mov
mov
mov
mov
xchg
inc
js
int3
stos
xchg
xlat
xchg
sbb
and
mov
leave
lock
repnz
add
xchg
mov
popf
ror
push
lods
jp
mov
insl
scas
jae,pn
inc
std
je
mov
lods
pop
mov
in
inc
in
in
mov
or
imul
xchg
sbb
cmp
sub
out
mov
lahf
cld
mov
mov
inc
add
sub
pusha
add
es
ffreep
adc
adc
cmp
nop
add
xchg
stos
push
pop
decl
push
xchg
push
lret
lods
cltd
add
notb
mov
adc
add
add
jne
lret
mov
mov
into
out
jl
cld
loope
lods
sub
mov
or
ds
pop
mov
rolb
mov
aaa
fdivrs
ds
aaa
mov
mov
add
sbb
mov
cmp
rolb
mov
add
aas
cld
push
orl
mov
mov
mov
jmp
jnp
jg
sysret
ficompl
mov
cmp
negb
add
mov
mov
adc
mov
scas
mov
mov
xchg
add
int3
push
push
add
call
call
or
sbb
inc
es
je
hlt
rolb
mov
inc
ret
push
inc
test
jle
mov
sub
dec
xchg
mov
mov
mov
mov
cmp
add
mov
add
mov
push
add
test
test
dec
push
out
inc
leave
sub
loope
pusha
add
inc
adc
dec
daa
sbb
cli
dec
imul
mov
test
fistpll
arpl
jecxz
movsl
mov
mov
pop
pop
sbb
iret
add
aaa
inc
inc
add
add
mov
out
mov
ret
cltd
mov
inc
in
shrl
add
daa
mov
sub
or
add
mov
jns
xor
mov
in
add
loope
add
xor
pop
or
inc
lods
cmpsl
xchg
lods
rolb
mov
int
push
cs
and
pop
popa
out
mov
mov
xor
scas
jmp
iret
nop
add
cmpsl
negb
pop
pop
push
cmpsl
jns
and
mov
jb
mov
dec
pop
div
inc
add
mov
not
cwtl
mov
mov
add
inc
add
cmpsl
cmpsb
sub
mov
mov
out
mov
shll
inc
enter
enter
icebp
lods
dec
push
imul
sbb
sub
mov
mov
es
fiadds
out
sbb
ja
sub
add
mov
mov
andl
add
lahf
push
lcall
mov
push
jbe
stos
sub
mov
or
out
sbb
mov
mulb
mov
push
mov
mov
add
add
jnp
in
pop
mov
fisttpll
mov
push
int
mov
push
push
rorl
push
add
cmp
add
out
lock
in
out
mov
sbb
mov
jl
push
mov
mov
add
dec
add
add
in
mov
mov
popf
enter
mov
stos
mov
aam
jo,pn
mov
clc
add
insb
ljmp
in
push
loope
and
cs
int3
mov
loop
mov
mov
inc
xlat
int3
cli
ret
mov
pop
or
add
mov
dec
jne
xor
lret
xor
std
bound
mov
add
cmpl
rolb
mov
add
movsl
adc
mov
das
test
scas
stos
fidivrl
add
rolb
pop
jecxz
cltd
sbb
dec
lods
gs
adc
sbb
xchg
into
pop
in
test
addb
mov
pop
addr16
add
cmc
xchg
fmull
aam
pusha
add
lret
mov
add
scas
dec
mov
jp
imul
nop
add
mov
and
and
mov
and
add
and
mov
cmpsl
movsb
dec
xchg
adc
out
cld
push
addr16
scas
and
hlt
mov
stc
test
in
lds
aaa
fisubs
jecxz
pop
dec
adcl
les
cmpsl
outsb
add
addb
dec
mov
mov
scas
cs
ljmp
mov
movsl
enter
mov
xchg
stc
mov
add
jne
stos
cwtl
aaa
cmp
add
insb
lcall
outsb
lods
jmp
add
mov
hlt
scas
xlat
enter
pop
jnp
pop
pop
cmp
into
and
jbe
mov
mov
mov
add
jbe
insl
rolb
ds
push
iret
cmp
add
mov
scas
adc
push
add
mov
rolb
mov
add
test
sbb
add
shl
add
sub
stc
push
cmp
mov
hlt
inc
xchg
cmp
add
js
lret
add
mov
ss
add
inc
push
pop
jle
add
add
mov
inc
popf
mov
cwtl
mov
jbe
ljmp
and
mov
add
mov
jne
ficoms
mov
add
mov
mov
push
jne
sub
or
push
add
lahf
shll
inc
add
cmc
js
es
jns
add
daa
inc
rol
adc
jno
push
jbe
sbb
sbb
stos
mov
xor
jmp
push
dec
inc
add
pop
mov
sub
in
leave
adc
mov
mov
add
mov
xorl
sub
test
mov
mov
inc
std
enter
test
add
mov
and
mov
movsl
mov
mov
sbb
aad
mov
mov
push
addb
mov
xchg
jecxz
sbb
add
cltd
repz
adc
mov
mov
sub
popa
fists
mov
mov
addb
add
add
inc
cmpsl
bound
mov
lods
mov
pop
jns
jo
mov
cli
outsl
push
dec
xchg
mov
add
push
add
daa
int3
add
xor
js
lahf
and
mov
ljmp
mov
dec
aad
push
add
jae
and
mov
add
mov
repz
add
adc
in
dec
test
pusha
add
stos
in
popa
xor
mov
divb
add
popf
in
add
mov
inc
popl
jbe
jae
test
add
das
movups
mov
imul
mov
mov
adc
mov
mov
push
xor
mov
adc
add
inc
inc
jnp
sub
adc
mov
add
hlt
push
fdivr
add
or
test
or
mov
mov
add
mov
pop
int
mov
stos
cmc
scas
insl
in
lcall
inc
add
mov
add
ret
pusha
add
add
add
fst
xchg
add
mov
out
add
jae
popa
inc
jbe
in
mov
add
add
idiv
stc
movsl
xchg
ljmp
movhps
mov
mov
pusha
add
xor
mov
mov
mov
js
inc
jne
pop
addb
cmp
faddl
andl
mov
rcll
cmp
gs
mov
mov
imul
xbegin
loope
in
pop
dec
pop
leave
dec
les
push
add
aam
cmp
jl
pop
jnp
push
mov
jg
mov
add
mov
sahf
pusha
add
add
adc
mov
xchg
add
addb
inc
add
ss
es
ret
outsl
xor
cld
sbb
insb
mov
add
adc
mov
mov
xor
mov
mov
mov
add
mov
add
insl
imul
nop
add
movsb
xor
jg
add
test
pop
and
mov
jb
mov
cltd
lahf
jno
sbb
faddp
add
mov
xor
cmp
jecxz
push
leave
das
pop
rolb
mov
add
adc
mov
ret
repz
lret
pop
jbe
aam
pop
add
js
inc
xor
mov
xchg
ret
push
pop
cmp
xor
add
add
iret
out
fiadds
nop
add
cltd
add
inc
dec
popf
movl
mov
mov
mov
push
add
scas
dec
arpl
add
adc
push
pop
out
das
shl
mov
and
pop
jmp
add
jae
cltd
or
and
mov
xlat
cltd
cmp
sub
ds
testb
and
dec
cld
aad
outsb
lret
mov
cld
dec
xchg
add
insb
pushf
ljmp
rcrl
xchg
rolb
mov
sub
add
cmp
dec
cli
mov
xor
add
inc
push
addb
fbstp
cmp
add
mov
jbe
mov
test
nop
add
xor
mov
sbb
sub
inc
cmp
add
cmp
cmpsb
cmp
xor
mov
enter
xchg
inc
add
push
in
movsl
dec
add
lret
dec
dec
in
stc
loop
mov
add
cmp
xchg
mov
mov
xorps
adc
mov
cmpsb
sti
cld
jmp
dec
outsb
lods
daa
xchg
ja
mov
sub
jg
bound
mov
repz
inc
shll
jmp
mov
imul
add
inc
fidivs
addb
xor
mov
add
std
xlat
mov
dec
nop
add
dec
rcr
mov
mov
fs
mov
sub
add
fnstcw
shl
mov
gs
inc
mov
xchg
rolb
mov
push
push
les
ret
dec
push
loopne
mov
cmp
test
mov
insb
push
xchg
push
outsb
jno
mov
andl
sub
icebp
and
stos
iret
shll
and
mov
cmp
add
add
mov
sub
mov
cmpsl
repz
fdivs
mov
out
push
sub
cld
xchg
jg
push
push
push
add
mov
add
loopne
mov
cmp
add
cmp
test
lahf
fstpt
xor
mov
add
out
ror
outsb
arpl
jge
add
adc
mov
in
stc
mov
mov
icebp
nop
add
fsubrl
les
nop
add
jo
mov
xor
mov
add
xor
mov
cmp
jno
rolb
mov
add
sub
aas
cmpsl
inc
pop
test
mov
push
cld
aas
pop
jnp
and
mov
xchg
and
mov
mov
add
jmp
push
adc
popf
dec
xchg
adc
add
adc
ret
xchg
add
loop
mov
loopne
mov
divps
pop
fnsave
decl
les
int3
loop
mov
cltd
mov
inc
jb
mov
cmp
fadd
pop
cmp
shl
and
mov
add
outsb
out
inc
addb
movsl
xchg
in
xor
mov
xchg
cmp
cld
cmp
inc
pop
mov
mov
mov
cmp
add
mov
add
add
loop
mov
push
paddusb
mov
jge
add
rolb
pusha
add
and
mov
mov
shll
and
xchg
add
inc
mov
add
mov
cmp
hlt
or
ret
out
jecxz
test
xchg
cmpsb
cmpsl
cs
cmp
ds
add
mov
dec
notb
mov
js
mov
hlt
mov
add
dec
std
lahf
mov
add
rolb
mov
xchg
iret
mov
jmp
add
cwtl
push
cmp
add
call
call
mov
mov
fs
lods
je
test
add
push
cmpl
inc
add
mov
add
clc
shll
mov
or
out
xchg
lds
pusha
add
out
ss
mov
sbb
push
push
mov
mov
movsb
cli
iret
in
mov
mov
mov
or
imul
fdivrs
call
gs
push
test
mov
les
scas
mov
add
mov
arpl
pop
mov
clc
fdivl
pop
lods
jl
sub
stc
xchg
add
pop
rolb
leave
jae
test
inc
xchg
sub
cmovle
xchg
jg
xor
loop
mov
add
adc
mov
add
lds
fnstcw
inc
push
shr
jae
xor
mov
and
daa
rcrl
or
mov
imul
std
stos
jnp
add
std
mov
sbb
mov
ja
adc
add
dec
nop
add
adc
mov
add
add
mov
sbb
outsb
in
inc
shrl
mov
add
test
sbb
cmp
mov
add
xor
xchg
fsubrl
cmp
mov
add
add
test
lret
adc
leave
stc
mov
add
cmp
addb
xchg
clc
cwtl
stos
cmp
mov
mov
add
push
mov
add
xchg
cli
movsb
pop
cmc
loop
mov
add
outsl
mov
jo
mov
out
inc
jmp
add
dec
pop
adc
mov
mov
cmc
lods
mov
mov
mov
sub
cli
pop
popa
shrl
stos
fldenv
leave
mov
mov
test
jbe
xchg
add
push
add
mov
sub
add
add
add
mov
pop
das
lods
pop
sar
add
or
add
mov
xor
add
or
dec
les
test
mov
push
xor
mov
mov
fisttpll
add
mov
mov
arpl
push
subl
fsubl
imul
mov
add
mov
mov
mov
pushf
idivl
icebp
fists
repz
outsb
push
mov
mov
xchg
and
mov
mov
mov
out
lret
mov
mov
add
mov
push
mov
cli
jmp
psubusb
add
push
test
jmp
icebp
ss
pushl
mov
add
test
lea
fcmovnb
sbb
mov
lds
ficoml
out
jg
fwait
add
test
push
pop
jg
add
mov
or
mov
ljmp
jle
pop
inc
sbb
push
insl
jmp
push
sub
mov
bound
mov
insl
stc
ret
es
xor
mov
iret
xor
mov
nop
add
add
add
mov
rolb
mov
in
jnp
je
add
pop
xor
daa
jo
mov
adc
es
add
mov
push
add
add
mov
in
mov
jl
jmp
mov
mov
jle
imul
mov
dec
in
add
jne
or
add
xor
fidivrs
and
mov
mov
mov
dec
add
pop
mov
mov
aam
xchg
repnz
mov
jae
add
sbb
jp
scas
and
jno
popf
sub
mov
loope
pop
loop
mov
xor
mov
sbb
lods
mov
adc
add
pop
xchg
xchg
or
add
mov
mov
jge
or
mov
sub
mov
out
lret
sub
aam
mov
cmpsb
sub
and
in
mov
mov
int3
mov
std
jecxz
pop
ds
int3
jl
jne
cmp
into
add
rolb
lods
enter
mov
sub
jnp
and
jns
xor
in
xor
add
cwtl
aas
das
push
dec
mov
out
into
push
add
add
or
adc
mov
mov
sbb
loopne
mov
mov
and
test
lret
mov
ja
ljmp
insl
add
mov
add
ret
fmul
addr16
aam
pushf
adc
xor
mov
jmp
rolb
mov
mov
jnp
lcall
mov
rcrl
sbb
int
add
mov
in
and
add
add
xchg
mov
fisubl
mov
sub
dec
stos
pop
repz
add
out
xchg
inc
jge
pop
or
inc
test
add
cmp
add
in
lret
mov
imul
add
mov
push
push
nop
add
scas
sub
add
test
stos
push
cmp
add
mov
push
cli
sub
cmp
lcall
mov
xchg
mov
mov
ret
mov
xchg
sarl
add
add
test
cmp
add
aas
pushf
pop
test
fbstp
add
jb
mov
popa
iret
addb
outsl
pop
jne
push
bound
mov
sahf
aam
pop
mov
cli
jae
xchg
ds
jno
sbb
push
shll
nop
add
popa
addb
pop
adc
add
lahf
inc
add
add
shrl
dec
mov
outsb
add
mov
scas
mov
and
add
fistl
mov
inc
loope
ds
inc
sub
mov
jbe
enter
loope
out
daa
add
mov
sub
add
movsb
pop
dec
outsb
cltd
mov
sub
add
sbb
xor
imul
lods
out
push
lea
lods
inc
adc
cmp
sti
jmp
or
lods
filds
and
dec
mov
fists
dec
add
imul
xchg
shl
cld
or
add
fdivrs
jmp
add
xor
mov
fstp
aaa
mov
add
xor
hlt
pop
mov
aad
rcll
mov
mov
in
add
add
push
add
mov
or
dec
push
lock
sbb
push
jnp
push
sbb
ficompl
adc
inc
lahf
mov
aad
jp
xchg
mov
sub
fwait
daa
lret
sub
mov
int
sub
mov
addb
das
sbb
out
inc
dec
fcomps
add
pop
and
add
jbe
pop
fadds
lret
jge
sbb
stos
lcall
xlat
addr16
and
jo
mov
sbb
push
aad
add
push
add
fnstcw
jl
cmp
xchg
xchg
mov
imul
data16
mov
in
ret
stc
push
add
mov
sbb
cmpsb
popf
or
pop
test
add
mov
add
mov
jmp
rolb
in
jae
jns
and
dec
lods
testl
mov
stos
cmp
add
testb
push
push
and
lea
mov
mov
push
add
pusha
add
jmp
int
mov
sub
sub
sbb
ret
jo
mov
pop
pop
popl
loope
adc
add
mov
push
add
iret
push
inc
loop
mov
add
xchg
stos
jne
add
mov
add
mov
sub
jg
in
imul
sahf
sub
pushl
hlt
mov
pop
and
mov
push
stos
rcr
jne
int
enter
inc
sbb
outsb
loope
mov
mov
aam
or
add
inc
add
std
sbb
out
in
add
dec
sahf
pop
cmp
nop
add
and
cmp
mov
add
int3
pop
insb
ja
push
in
jl
in
inc
mov
xchg
cmpsl
inc
jns
and
lods
loopne
mov
sbb
inc
add
xor
mov
lock
insb
ss
xchg
imul
mov
mulb
add
aam
out
add
mov
add
add
sahf
lock
mov
add
inc
dec
inc
jle
mov
jp
adc
mov
cltd
add
enter
int3
push
rolb
mov
repnz
mov
mov
and
xchg
add
or
fs
push
out
sub
sub
psubq
add
mov
fcoms
ja
aaa
mov
and
xchg
add
adc
push
call
add
xor
mov
add
mov
aad
add
add
inc
push
in
stos
fmul
mov
daa
adc
mov
loope
popf
inc
xor
mov
lret
enter
mov
dec
addb
sub
imul
sbb
lret
xchg
mov
imul
hlt
repz
mov
movsb
rolb
mov
mov
in
sbb
clc
adc
jmp
and
dec
jg
ljmp
mov
or
loopne
mov
xchg
sub
add
fadds
mov
add
adc
mov
xchg
sbb
cmp
mov
aam
pusha
add
sbb
mov
mov
mov
add
mov
push
add
mov
mov
xchg
add
push
imul
mov
add
cmp
jp
or
pop
lcall
loopne
mov
in
ret
push
ljmp
mov
inc
stos
fcmove
lcall
inc
add
xor
mov
add
scas
loope
in
jecxz
pusha
add
push
out
dec
mov
in
xor
mov
mov
mov
jns
orl
jmp
int
push
bound
mov
push
rolb
mov
add
out
add
xor
cmove
lods
jo
mov
in
pop
pop
push
imul
adc
mov
add
and
add
loope
adc
mov
add
add
es
add
jle
add
xchg
pop
fidivl
imul
mov
loopne
mov
add
add
roll
sub
mov
mov
test
sbb
add
add
out
ds
dec
imul
mov
sbb
pop
dec
sbb
mov
push
add
mov
mov
fs
or
sub
add
dec
out
fimull
cli
mov
in
cmp
in
lock
mov
test
mov
push
mov
dec
das
sbb
and
mov
mov
mov
fs
jle
pop
faddl
repnz
inc
mov
stos
fildll
fldt
fsubp
pop
out
push
jle
xorl
mov
mov
add
ret
sahf
in
imul
add
mov
in
or
mov
pop
idiv
jns
ds
mov
pop
jbe
add
add
jne
fnstcw
add
mov
ret
cmp
add
push
lock
inc
mov
add
rolb
mov
mov
pop
mov
sub
cs
scas
pusha
add
mov
repnz
add
sbb
sti
push
add
arpl
xchg
dec
or
gs
out
or
add
gs
add
lods
and
mov
mov
push
repnz
push
rolb
mov
pusha
add
sbb
outsl
push
lea
test
mov
repnz
xchg
add
mov
call
sub
cmp
mov
hlt
subl
or
add
jge
aas
add
push
or
xchg
push
cwtl
fidivl
xlat
pop
jp
adc
mov
add
mov
test
call
mov
xor
mov
iret
lods
repz
mov
lret
aaa
mov
rcll
xchg
pop
cmpsb
rdpmc
shll
add
mov
pop
out
ret
insb
repz
in
xchg
enter
insl
imul
mov
jbe
popf
je
adc
inc
cmp
mov
jl
jmp
icebp
or
pusha
add
sub
scas
pushf
add
int3
rcrl
out
add
jbe
int
sarl
add
fsub
popa
inc
add
fnstsw
jae
aas
dec
aam
aas
cmpl
mov
dec
dec
cmp
mov
fcomi
add
jnp
inc
and
mov
repnz
push
test
in
jl
and
mov
mov
clc
push
push
add
and
mov
fs
add
fisubl
add
pusha
add
mov
fnsave
pop
pop
hlt
push
std
and
mov
std
sbb
stos
movsb
jb
mov
ja
jecxz
outsl
addb
push
add
dec
sti
js
mov
jnp
and
mov
cmp
xchg
sti
ds
ret
sbb
sbb
jno
sbb
mov
xor
mov
mov
add
sbb
fstl
mov
sti
dec
fucomi
std
pop
cmp
or
xchg
or
ficompl
movsb
mull
mov
in
add
in
pop
scas
lret
cmp
inc
sub
aaa
xor
cmp
add
sbb
mov
adc
mov
jmp
push
xor
cmp
push
sbb
or
cmpsb
lock
das
out
negl
jmp
jmp
push
aad
addl
add
out
inc
jp
cwtl
fistps
sbb
jecxz
ljmp
add
and
sbb
stos
ds
mov
mov
pop
call
test
ret
mov
fwait
sti
and
shl
xlat
dec
sub
mov
outsl
ret
dec
add
fs
mov
stos
mov
jne
decl
fbld
loop
mov
push
lret
test
push
jl
sbb
daa
adcl
imul
add
add
mov
ret
call
repnz
add
sbb
mov
fcmovnbe
add
lret
scas
scas
enter
adc
mov
mov
in
add
jb
mov
inc
dec
scas
pop
jl
push
icebp
dec
sbb
addl
lahf
mov
flds
add
inc
add
rolb
mov
popa
adc
divl
add
cwtl
push
cwtl
or
ds
xchg
add
mov
out
pop
xchg
repnz
pop
cmp
pop
jns
in
adc
mov
out
cmpsl
push
imul
push
mov
add
push
cmp
fcmovb
dec
adc
add
add
fucomp
lods
push
jmp
mov
pop
mov
mov
mov
cmp
ficompl
mov
push
clc
pusha
add
dec
inc
imul
dec
mov
daa
test
cmp
ja
dec
mov
mov
add
enterw
xlat
ret
cli
mov
scas
jnp
outsb
or
sbb
cmp
je
cmp
mov
pop
add
mov
sbb
add
xchg
pusha
add
lahf
mov
xor
mov
mov
add
inc
add
mov
add
mov
add
divb
cmp
add
idiv
loop
mov
rolb
mov
inc
mov
add
sahf
cmpl
xchg
mov
add
pop
or
push
mov
negb
in
push
mov
scas
xor
lods
pop
cmpl
out
out
nop
add
dec
mov
adc
popf
jl,pt
fbstp
xchg
ret
stos
popf
sub
push
pop
xor
mov
mov
shll
jo
mov
mov
xchg
dec
sbb
mov
sti
jmp
ds
jo
mov
mov
push
mov
stos
rolb
mov
fnsave
decb
cmc
addb
aad
and
add
rolb
mov
mov
scas
insb
jmp
push
or
add
loopne
mov
dec
pop
sbb
jecxz
push
add
mov
or
dec
mov
lret
jmp
mov
add
add
push
icebp
xor
mov
inc
roll
mov
mov
mov
lret
mov
mov
mov
push
dec
outsb
push
add
fisubs
mov
mov
rolb
aam
outsb
mov
push
rolb
mov
add
add
sti
jae
inc
mov
mov
mov
ds
dec
and
mov
lock
rcr
add
and
in
aad
inc
add
dec
loop
mov
sub
mov
add
out
fs
xchg
xchg
inc
in
rolb
aas
test
or
pop
lret
add
mov
andnps
and
mov
bound
mov
sbb
add
add
fs
dec
add
mov
je
in
in
test
add
add
push
inc
mov
loopne
mov
imul
fnstsw
mov
stos
into
cmp
sub
mov
cld
xchg
cmp
xlat
cli
addl
popf
xchg
add
mov
dec
in
in
jl
mov
cs
mov
add
repz
js
sub
cwtl
sub
cmpsl
xor
bound
mov
adc
lock
mov
adc
mov
jmp
add
xchg
add
mov
cmp
xor
mov
add
mov
mov
lods
das
rolb
mov
add
mov
sti
pusha
add
add
mov
add
or
ret
adcl
es
add
fisubl
int
inc
add
inc
int
mov
ss
pop
sub
lret
sbb
dec
pop
call
mov
mov
adc
fidivl
pushf
mov
repnz
push
cwtl
dec
mov
and
out
jl
xor
mov
mov
mov
mov
iret
roll
mov
sahf
lock
lock
or
add
rolb
mov
push
push
aad
imulb
mov
add
pop
cmpl
jne
or
add
xor
pushf
inc
dec
jo
mov
push
mov
sbb
mov
or
sub
adc
mov
push
push
lret
or
push
inc
add
inc
lahf
cmpsl
leave
es
xor
sub
dec
leave
or
inc
sbb
cmp
cmp
mov
jmp
lods
int3
clc
inc
add
mov
adc
test
jl
add
popf
notl
aad
add
aaa
xchg
outsl
sub
add
ljmp
pop
or
mov
dec
inc
add
xor
mov
mov
lahf
inc
and
mov
jno
jg
fadds
cmp
je
fmuls
fisubrl
add
mov
xor
insb
je
mov
mov
mov
aas
rolb
incb
imul
sahf
mov
out
push
ss
test
imul
jp
mov
sti
pop
popf
and
xlat
jae
jmp
sub
movsb
jnp
xchg
jo
mov
xchg
insb
clc
jecxz
out
jge
add
mov
add
dec
arpl
imul
adc
mov
mov
int
add
les
adc
cs
pop
cwtl
cmc
lods
cmp
jp
scas
inc
cltd
sqrtps
imul
mov
adc
mov
hlt
and
cmpsl
rcl
mov
mov
dec
daa
push
call
add
out
jg
or
lods
add
inc
loopne
mov
lret
cmpsb
fs
jne
sbb
sbb
test
ljmp
mov
add
push
mov
sub
mov
dec
add
clc
imul
es
xchg
add
in
mov
xor
mov
sbb
fadds
int
jae
pop
fwait
xor
xchg
pop
mov
inc
add
xor
lret
jo
mov
icebp
pop
inc
rolb
pushf
push
mov
sub
jo
mov
mov
add
lock
add
cmp
inc
add
fisttps
sub
hlt
pop
repnz
xchg
push
lods
jb
mov
mov
adc
mov
mov
add
std
add
add
mov
mov
cmpsb
pop
sub
adc
mov
das
sbb
fists
bound
mov
nop
add
cwtl
sbb
scas
sub
sub
sahf
xor
add
mov
je
inc
daa
shrl
xlat
addl
mov
scas
sbb
stos
lret
xchg
loope
cmp
or
push
push
addr16
movsb
fsubr
aam
push
add
add
mov
ja
sbb
add
inc
jge
or
mov
mov
and
rolb
mov
add
inc
mov
and
and
push
mov
pop
xchg
fsub
and
mov
mov
mov
mov
sbb
or
push
lea
mov
outsb
add
mov
xchg
mov
add
inc
add
js
adc
ja
dec
pop
jl
sub
or
das
mov
sbb
clc
in
and
mov
scas
mov
ret
mov
mov
and
stos
or
mov
xor
mov
inc
sbb
mov
add
add
mov
enter
add
cmp
cwtl
mov
mov
or
hlt
lea
in
jg
lahf
das
inc
out
dec
iret
in
sub
adc
mov
add
inc
pop
and
mov
pop
sub
bound
mov
fsubrs
jg
fcom
adc
mov
adc
mov
push
add
cmp
dec
scas
cmp
jae
add
adc
mov
pop
adc
mov
mov
add
mov
int3
pop
lea
mov
rolb
mov
roll
push
sub
out
lret
jne
fisubrl
add
lock
out
xor
cmp
mov
or
add
cld
mov
xchg
dec
or
add
nop
add
popf
push
xchg
push
mov
and
mov
aam
mov
fcoml
add
sbb
inc
sub
cmp
pop
je
add
mov
mov
call
xor
stos
xor
mov
and
xchg
shrl
sub
es
sbb
aas
add
add
fdivrl
add
cltd
push
mov
ja
cmpsb
sub
rolb
lds
lods
and
mov
scas
jle
or
add
addb
xlat
jmp
dec
mov
mov
int
add
add
cmp
cwtl
xchg
add
xor
mov
xor
sbb
add
roll
add
cmp
test
in
test
mov
test
std
mov
pop
push
add
xchg
movsb
jmp
xor
push
push
les
mov
xchg
out
sbb
pop
sbb
add
xor
mov
add
imull
inc
add
mov
add
push
pop
inc
sub
mov
mov
sbb
in
add
xor
mov
and
mov
repz
mov
pop
pop
dec
mov
or
in
shll
xor
lds
movl
add
rcll
jle
mov
inc
sahf
mov
mov
mov
cmp
clc
jl
bound
mov
outsb
mov
mov
or
xchg
jo
mov
or
adc
mov
cmp
or
dec
xchg
xor
mov
xor
add
fdivrl
into
pushf
lods
dec
jns
test
xchg
fiadds
mov
add
sbb
or
rolb
out
dec
jecxz,pt
mov
cs
add
push
mov
movl
ljmp
add
add
mov
out
and
mov
pop
cmp
mov
push
add
lock
inc
add
lcall
in
dec
pop
rolb
mov
xchg
add
pop
mov
add
push
cmp
ss
sub
bound
mov
in
or
mov
add
lods
jo
mov
lods
repz
movl
mov
mov
xchg
daa
stos
mov
fldl
push
mov
mov
adc
mov
mov
hlt
dec
lahf
hlt
test
add
and
imul
mov
mov
insl
aas
push
inc
add
xchg
ss
hlt
adc
sub
adc
mov
and
cmp
xchg
sbb
out
add
bound
mov
pop
adc
cmpsb
adc
mov
jmp
add
mov
mov
dec
xor
aas
daa
push
jnp
and
movsl
pop
jnp
test
fnsave
xor
mov
add
cmp
pop
sbb
lcall
jmp
mov
fldt
incb
mov
in
jl
sub
das
fisubs
pop
imul
sbb
lods
mov
jns
push
ds
jb
mov
testb
mov
xor
mov
inc
add
xchg
loopne
mov
lods
je
bound
mov
pop
test
mov
cmp
hlt
fildll
adc
ret
push
add
mov
fmuls
rolb
mov
xor
xor
jae
testb
mov
mov
and
add
ss
int
xor
jno
and
add
mov
jmp
add
add
adc
mov
sbb
add
mov
or
jb
mov
mov
mov
xchg
div
fisubl
pop
mov
mov
add
xor
mov
stos
xor
mov
jp
push
or
sbb
add
mov
push
cmpsl
inc
test
cmp
fstps
cmpsb
movsl
and
mov
add
mov
mov
out
lahf
aaa
adcl
mov
inc
iret
imul
jb
mov
inc
out
aaa
adc
jno
aas
add
mov
addb
xchg
xor
add
mov
into
stos
xor
push
fsubrs
push
movsl
stc
sub
lods
and
jae
mov
mov
sub
and
push
mov
bound
mov
movsl
jne
mov
adc
mov
les
add
mov
pop
or
mov
push
push
in
lods
lods
cli
lgdtl
sub
dec
addb
idivl
lcall
mov
add
outsb
mov
xlat
cmpsl
lods
jecxz
push
add
out
xor
mov
jae
jp
add
mov
shll
mov
mov
fidivl
add
mov
fmuls
mov
mov
mov
imul
mov
mov
xor
mov
add
movsb
sub
mov
mov
lret
sti
fdivrl
in
imul
loop
mov
adc
dec
jmp
mov
enter
sub
pop
out
xor
mov
imul
jp
cs
outsl
dec
cli
pop
jg
out
ret
mov
pop
mov
push
adc
mov
add
mov
jo
mov
lahf
stc
mov
xchg
push
xor
mov
das
or
sbb
add
std
repz
or
xor
ds
in
pop
pop
xchg
cmpsb
sub
xor
mov
mov
add
xor
mov
ret
into
dec
outsb
adc
or
test
aad
mov
mov
add
sub
rolb
sbb
lock
fcmovu
mov
add
call
mov
mov
and
add
cld
xchg
adc
mov
ds
xor
fwait
pop
push
cmc
cmp
mov
inc
inc
mov
lods
in
repnz
fcmovnbe
jle
xchg
add
sub
mov
mov
sahf
dec
push
mov
and
sbb
dec
in
xbegin
lcall
mov
adc
xchg
cmp
push
add
cltd
sub
or
repnz
in
add
push
outsb
call
cs
pop
pop
nop
add
cmp
test
dec
push
outsl
cli
pop
pop
inc
rol
add
sbb
enter
dec
mov
scas
or
add
mov
mov
xchg
or
test
pushf
and
mov
fmuls
mov
outsb
dec
mov
mov
outsb
jecxz
insl
je
push
das
arpl
repnz
pushf
imul
insl
out
and
mov
rcll
lods
sahf
jnp
loope
and
mov
add
add
je
mov
xchg
cmovb
mov
popa
imul
mov
add
push
sbb
cmp
mov
cli
sbb
rcrl
add
in
sub
pusha
add
arpl
add
idivb
add
mov
mov
mov
ljmp
js
sbb
jae
in
and
cmp
jo
mov
ret
push
mov
mov
out
out
or
add
fsubs
add
mov
movsb
and
mov
or
sbb
lret
add
add
test
in
jp
cmpsl
ds
out
jmp
add
stos
movsl
mov
clc
clc
pop
testl
addr16
int
mov
push
add
jp
bound
mov
add
outsl
mov
mov
frstor
mov
mov
mov
sti
inc
cmpsb
cmc
xchg
add
fnstcw
and
sub
lahf
dec
cmpsb
xchg
not
adc
je
int
mov
pop
sbb
lret
add
mov
mov
cmpsb
sti
push
add
mov
pop
std
pop
icebp
xor
sbb
clc
dec
xchg
into
mov
sbbl
add
mov
or
mov
add
jmpw
mov
cli
add
xchg
add
sbb
add
test
cmpsl
push
mov
mov
imul
cmp
pop
scas
repz
adc
add
mov
xchg
or
lock
mov
ds
mov
cmp
xchg
das
movsb
mov
loope
push
add
mov
push
pop
lock
mov
sti
fsubrl
aad
push
popf
inc
mov
scas
mov
add
pusha
add
inc
add
cmp
and
mov
leave
xchg
cmpsl
mov
std
test
loopne
mov
cmp
pusha
add
jo
mov
inc
add
sub
add
addb
mov
mov
cmp
testb
jmp
int3
scas
and
mov
ljmp
stos
add
mov
icebp
mov
mov
and
mov
jns
mov
out
jg
cmp
and
mov
icebp
cs
clc
lret
jl
add
shrl
add
outsl
sub
rolb
mov
add
inc
mov
push
add
pop
xchg
mov
pop
jae
xchg
pop
out
stc
mov
dec
lahf
adc
mov
aas
ficomps
out
or
pop
movsb
fs
push
mov
sahf
sbb
mov
mov
add
mov
jl
rolb
mov
test
jmp
test
icebp
add
mov
aam
lock
test
add
sub
add
or
or
dec
mov
add
mov
cld
sub
addr16
or
mov
xlat
push
sbb
data16
dec
dec
push
xchg
sahf
enter
lcall
mov
xor
out
mov
stc
inc
test
ret
dec
cmc
ret
mov
mov
test
add
stc
dec
movsl
adc
cmp
enter
mov
into
and
add
mov
mov
gs
add
adc
repnz
mov
data16
iret
aas
ds
cmc
fistl
das
mov
pop
sbbl
addb
cmp
rolb
mov
add
xchg
rolb
mov
add
rolb
mov
gs
in
dec
mov
add
cmp
in
xchg
add
mov
mov
mov
inc
add
sub
xchg
add
pop
stos
sbb
sahf
mov
pop
xchg
cmp
cli
mov
sti
sahf
ficoms
dec
push
not
dec
pop
clc
sub
bound
mov
ret
lret
add
mov
mov
mov
and
mov
push
dec
xchg
mov
mov
enter
addr16
jp
stc
mov
stos
or
sbb
sbb
add
mov
inc
icebp
lea
mov
and
add
cmpsl
xor
outsl
clc
testb
xchg
push
pop
jbe
stos
and
mov
inc
std
movsl
mov
cmp
stos
push
inc
mov
inc
add
insl
imul
inc
xchg
in
dec
and
adc
mov
cmp
inc
jns
outsl
push
mov
mov
jne
out
sti
lcall
sbbl
mov
push
add
add
neg
hlt
inc
je
divl
adc
jb
mov
mov
xchg
cmpsl
es
es
cmpsb
cwtl
je
nop
add
sbb
lret
std
rolb
dec
inc
rolb
mov
call
mov
dec
pop
cli
call
in
add
add
jno
add
cwtl
jnp
xor
jmp
loope
lds
push
fwait
xor
mov
mov
add
sbbl
adc
mov
mov
pop
lds
icebp
sub
add
sbb
cmp
and
dec
movsl
fs
jecxz
scas
imul
jg
insb
iret
das
sub
dec
loopne
mov
mov
dec
lods
lret
imul
inc
cmp
add
cmpsl
pusha
add
jp
jb
mov
insl
xor
std
sub
add
push
xchg
sub
cmc
rolb
mov
mov
hlt
add
pop
xor
mov
add
mov
push
mov
rcll
cmp
in
addr16
pushl
imul
or
mov
add
push
add
daa
pop
iret
js
ja
xchg
fdivr
cmp
test
add
mov
dec
mov
mov
hlt
testl
lods
into
movsl
je
iret
test
lods
jnp
xor
lret
jl
call
adc
mov
push
bound
mov
mov
add
mov
add
and
pop
bound
mov
inc
fdivl
add
or
out
fsincos
popf
dec
lds
add
sbb
mov
xlat
mov
call
xchg
mov
lods
xor
add
pop
in
loopne
mov
xchg
sub
mov
mov
mov
jo
mov
sub
ljmp
jnp
xchg
testb
mov
add
or
add
add
mov
add
rolb
cs
movsl
icebp
decb
xchg
jno
add
ja
push
add
lcall
pop
dec
inc
lods
mov
sbb
mov
pop
sub
movsb
pop
pop
add
add
fistl
sbb
mov
xchg
ret
xchg
mov
bound
mov
jg
dec
sbb
mov
mov
jbe
enter
aam
push
mov
test
inc
add
gs
add
fiadds
sti
pop
lea
mov
add
adc
and
dec
frstor
iret
xor
das
push
mov
dec
rcrl
mov
rolb
mov
imul
push
addb
fnclex
add
mov
sahf
cs
add
add
ds
push
add
xchg
dec
iret
xor
dec
idivb
mov
jnp
mov
cs
jle
fisubrl
cmp
adc
mov
fstl
push
jbe
xchg
mov
dec
mov
jae
xchg
add
icebp
ja
dec
sarl
or
in
pop
mov
inc
add
mov
dec
pop
arpl
sbb
insb
push
xchg
fldcw
loop
mov
out
in
das
addb
stos
out
data16
mov
sub
add
and
mov
adc
repnz
mov
movsl
lock
ret
std
in
insl
fldt
or
movl
or
add
inc
add
mov
push
add
rolb
xchg
cli
jg
push
mov
mov
mov
mov
sub
xor
add
sti
int
stc
out
xor
mov
mov
fcompl
cltd
loop
mov
mov
add
and
ss
inc
push
mov
cmpsl
test
push
mov
push
dec
mov
mov
jo
mov
mov
clc
mov
addr16
xchg
add
add
push
add
jnp
pop
jnp
mov
push
inc
int
cmp
xchg
mov
and
mov
jne
loop
mov
cmp
popl
mov
mov
jno
aad
add
add
fsubrs
arpl
movsl
push
add
pusha
add
mov
add
inc
mov
mov
add
mov
mov
orl
mov
into
adc
mov
addr16
mov
pop
out
xchg
add
pop
cmpsb
inc
adc
adc
scas
jl
mov
mov
out
daa
aad
mov
add
loop
mov
push
add
mov
or
add
out
jb
mov
pop
mov
xchg
sub
push
add
mov
mov
or
dec
mov
xchg
sbb
test
jne
adc
add
add
ja
mov
lret
add
and
mov
aad
mul
add
out
push
ss
add
pop
ret
aam
or
dec
jl
add
jne
fisubrl
add
mov
add
mov
sti
shll
pusha
add
cwtl
dec
or
movsb
rolb
mov
or
pop
lret
inc
pop
enter
add
mov
imul
push
dec
fadds
icebp
into
xchg
mov
jae
pop
out
scas
cmp
icebp
or
xchg
push
add
and
mov
in
sub
fpatan
xchg
inc
add
mov
nop
add
mov
mov
push
js
add
adc
push
mov
adc
mov
add
loop
mov
dec
cmc
mov
pop
mov
enter
add
pushf
rorl
mov
subl
jno
aaa
push
cmpsb
lock
mov
add
ljmp
jle
lock
lea
iret
push
add
popa
push
mov
orl
add
add
mov
inc
add
xchg
mov
add
mov
mov
xor
fsubrl
insb
push
jmp
repnz
mov
test
xchg
xchg
insl
stc
fidivs
or
cmp
test
jb
mov
enter
add
cli
pop
outsl
jne
pop
cmp
jecxz
add
pop
insl
loop
mov
scas
aas
repz
add
add
jg
adcl
inc
out
call
pop
or
iret
mov
adc
mov
test
xchg
leave
xor
mov
mov
jne
add
mov
sbb
and
mov
and
cltd
pop
outsb
xor
mov
leave
jne
into
push
pop
nop
add
push
in
and
fbld
incb
pop
das
cli
cld
xor
int3
push
push
cltd
insl
js
add
movsl
sbb
test
add
adc
xlat
xor
push
add
fstpl
or
scas
cmp
push
outsl
add
sbb
add
cmp
js
icebp
fdivs
mov
hlt
sbb
jp
xchg
mov
adc
add
test
add
mov
add
mov
jle
mov
fcomps
repz
movsb
in
pushf
es
sub
inc
adc
dec
sbb
shl
push
es
mov
add
mov
mov
add
add
sahf
dec
daa
addr16
push
mov
mov
jg
xor
out
sti
addb
or
add
jmp
xchg
mov
mov
mov
mov
mov
mov
pop
xchg
xchg
push
push
add
mov
mov
add
mov
adc
aas
addb
lcall
xchg
mov
push
rolb
mov
add
xchg
sub
mov
sub
mov
icebp
arpl
mov
add
cmp
sub
add
sub
adc
xlat
cmp
stos
push
add
aam
pop
push
push
outsl
and
les
mov
ljmp
lea
add
add
aam
and
mov
jp
ljmp
fldl
push
push
ret
popf
ret
sbb
mov
idiv
jno
mov
mov
add
push
jnp
adc
ja
dec
or
add
dec
test
aam
sub
mov
ret
push
add
add
test
xor
add
mov
dec
sbb
add
into
negb
imul
xchg
sub
adc
mov
or
cltd
and
fidivrs
jae
cmpsl
addl
insb
push
add
push
inc
adc
dec
and
inc
aas
jnp
imul
add
adc
xor
add
mov
in
mov
inc
add
jge
repnz
or
rorl
aam
js
lcall
add
pop
push
and
add
mov
into
sub
jae
xor
mov
in
mov
out
es
scas
clc
sbb
mov
rolb
mov
push
out
mov
cmp
imul
add
cld
mov
mov
mov
pusha
add
push
jae
imul
pop
test
or
and
jge
add
mov
mov
mov
aam
mov
sti
sti
and
mov
add
xchg
lods
sbb
cmpl
and
mov
or
gs
pop
cmp
shrl
pop
das
movsl
mov
fxtract
or
add
mov
mov
aaa
aad
and
mov
int
es
push
add
push
or
call
addr16
clc
icebp
push
fldpi
and
das
mov
mov
pusha
add
loop
mov
push
cmp
out
adc
pushf
bound
mov
outsl
icebp
and
aas
out
aaa
dec
sub
out
xchg
addb
test
push
repz
das
popa
dec
sbb
shrl
dec
lods
mov
mov
sbb
test
add
mov
mov
jg
pop
ss
mov
add
ret
jnp
pusha
add
mov
cmp
daa
inc
add
cmp
mov
sti
jns
clc
mov
cs
pop
mov
fcoml
mov
sub
cmovae
std
test
cld
jl
lahf
adc
mov
xchg
leave
sub
xor
mov
mov
rorl
adc
lahf
dec
mov
icebp
arpl
out
pushf
mov
fadd
jg
add
jae
or
adc
loopne
mov
jae
ret
mov
cld
jae
add
testb
pop
push
out
mov
push
stos
in
or
add
xor
pushf
mov
lods
js
or
ljmp
mov
add
add
jl
cmp
mov
pop
dec
mov
xchg
mov
loope
test
cli
loop
mov
xchg
frndint
leave
xor
or
imul
mov
jle
xchg
fisubs
data16
data16
clc
mov
xor
mov
jge
xor
int
out
ds
or
mov
les
cld
repz
fwait
xchg
inc
test
jmp
lods
jl
mov
cmp
or
test
xchg
fbld
xchg
in
cwtl
push
mov
cmp
mov
inc
and
mov
mov
and
mov
cmpsb
push
clc
jmp
add
scas
jmp
out
rol
lahf
pop
out
lret
cmp
jmp
leave
jp
int3
or
add
fsubl
add
cmp
push
int
sub
popf
orl
inc
inc
sbb
rolb
mov
or
xchg
shll
jae
mov
mov
mov
sti
add
mov
add
adc
sbb
dec
gs
xor
mov
je
addr16
inc
xor
mov
mov
or
jp
cmp
icebp
das
addb
inc
add
outsb
movsl
jle
lahf
inc
xchg
mov
add
insl
decb
mov
loop
mov
add
sahf
test
and
addb
scas
xor
xor
divl
and
mov
add
inc
or
sub
sub
cli
push
jmp
imul
gs
cmpsb
inc
jle
mov
jns
add
dec
dec
jg
lahf
fwait
cs
jl
jae
jne
lock
data16
out
sbb
sbb
lds
add
add
xor
dec
add
add
sub
add
insl
rolb
lahf
push
add
mov
push
cmp
into
mov
or
lret
in
jbe
or
add
mov
mov
inc
in
mov
rcl
xchg
dec
sub
into
cmp
aad
iret
test
or
push
add
ret
push
roll
add
cmc
dec
mov
push
add
fucomip
cmc
mov
xchg
xchg
pop
jl
rolb
mov
mov
arpl
test
jne
inc
inc
add
mov
fs
sbb
pop
sub
add
mov
aaa
inc
ficomps
xor
aaa
out
dec
mov
inc
add
xchg
xchg
add
mov
inc
add
add
in
ljmp
bound
mov
add
rolb
mov
xor
inc
mov
and
pop
pop
repz
fcoms
mov
xchg
fildl
cs
add
mov
mov
inc
adc
mov
inc
pusha
add
fimull
dec
cmp
scas
push
add
mov
aam
dec
je
push
xchg
and
bound
mov
add
xchg
bound
mov
add
cmp
fistl
jmp
addb
ret
xor
mov
mov
pop
and
mov
mov
cmp
jl
and
mov
sub
xor
ficompl
fwait
sub
cs
cli
in
inc
repnz
mov
incl
xchg
inc
popa
add
jecxz
xchg
add
mov
dec
lea
push
mov
test
rolb
mov
and
add
sub
add
xor
jmp
push
pop
sahf
test
ret
fsubrl
int3
pop
mov
sbb
test
or
adc
mov
cmp
xor
mov
es
mov
fsubrs
xor
mov
fdivrl
movsb
gs
ds
pop
testl
insb
fcomps
mov
sbb
int
mov
add
mov
and
mov
pusha
add
add
dec
out
add
addr16
loopne
mov
mov
cltd
sti
pop
clc
pop
inc
xor
push
jl
bound
mov
mov
add
mov
cmpsl
dec
bound
mov
outsl
ret
jg
jecxz
xlat
test
mov
out
sub
add
mov
add
sub
add
add
sub
sub
xchg
mov
push
fldt
daa
ljmp
stos
jo
mov
mov
cwtl
aam
mov
or
addr16
add
mov
fsubrl
leave
in
rolb
mov
or
add
mov
cmp
fidivrs
jo
mov
mov
dec
out
cmp
popa
dec
loop
mov
mov
cmp
add
add
jp
addb
fisubl
int
int
lods
mov
mov
sub
insl
xchg
lea
pop
dec
pop
jmp
pushf
xor
xchg
add
adc
xchg
add
pop
in
lea
jnp
add
mov
aad
mov
xchg
inc
rolb
mov
pop
dec
or
inc
push
clc
pushf
out
mov
loopne
mov
out
inc
test
aas
mov
cmpl
add
mov
aad
cld
jle
add
pop
adc
mov
add
push
add
mov
fwait
mov
std
inc
xchg
in
mov
rolb
mov
arpl
jbe
jae
int3
mov
and
mov
cli
in
push
mov
outsl
test
out
add
push
outsl
xor
out
sarl
cmp
popf
inc
ja
inc
pop
aas
and
mov
mov
xor
mov
stc
push
stos
addl
in
and
mov
pusha
add
inc
add
dec
mov
add
mov
stos
add
mov
push
add
xchg
lea
addr16
add
sbb
add
popf
imul
negb
add
pop
adc
jge
add
dec
fsubl
and
in
mov
outsb
push
add
or
mov
mov
add
jle
and
push
push
je
addb
push
mov
mov
jb
mov
ret
cmpsl
mov
add
mov
loop
mov
nop
add
movsb
mov
pop
mov
cltd
sub
nop
add
jne
add
add
mov
add
arpl
lret
jg
push
imul
dec
icebp
jmp
sbb
mov
sbbl
lds
adcl
add
fdivrl
jp
repz
lea
out
daa
test
int
mov
lahf
das
lds
ljmp
hlt
and
add
mov
xchg
jb
mov
ret
cs
jnp
jne
add
clc
jecxz
test
inc
add
jbe
lods
mov
ret
mov
loope
aam
add
add
jbe
and
add
add
add
mov
leave
or
das
and
xor
jb
mov
cmp
leave
fs
aad
xchg
out
lods
and
mov
popf
int3
test
out
push
pop
int
in
lret
ret
loop
mov
mov
sbb
add
mov
rolb
fwait
push
jnp
adc
dec
rcr
mov
mov
add
add
mov
scas
movsl
test
mov
out
lea
cltd
insl
and
add
add
xchg
out
rorl
pop
push
imul
jp
in
bound
mov
gs
adc
mov
pushw
jmp
hlt
mov
lret
imulb
int
sbb
enter
pop
scas
pop
push
popf
push
pop
mov
add
pop
adc
fstpl
sub
shll
rolb
sbb
repz
pop
fwait
nop
add
mov
lahf
ss
fisttps
add
mov
push
imul
enter
add
add
sahf
or
cmc
daa
add
mov
mov
test
inc
pop
out
divl
mov
push
addr16
and
movsb
mov
xor
add
inc
lods
aad
xchg
xchg
fisubs
mov
out
push
add
mov
add
fwait
mov
sub
cmp
inc
sarl
mov
out
in
add
jge
jns
repz
cltd
jl
in
sahf
or
mov
cmp
mov
call
mov
push
and
mov
rolb
mov
inc
fists
inc
jne
addb
push
inc
add
cld
adc
icebp
push
add
xor
mov
mov
arpl
aaa
dec
lcall
add
mov
add
lock
mov
jl
sbb
ds
or
cmp
xor
mov
mov
aaa
call
pop
jmp
add
mulb
push
and
jae
push
rorl
je
and
mov
push
jns
sbb
add
adc
mov
add
dec
xlat
inc
add
imul
add
mov
adc
dec
rolb
mov
sbbl
ficoms
add
int
mov
mov
enter
adc
mov
rolb
mov
movsb
test
mov
bound
mov
jg
adc
add
icebp
or
adc
mov
or
xchg
push
xor
mov
adc
push
jmp
fmul
repnz
push
dec
pop
idivl
inc
cmp
lret
jmp
or
mov
out
jo
mov
ss
mov
inc
cwtl
lock
in
pop
imul
lea
jae
aaa
or
push
das
mov
mov
dec
aaa
into
dec
rolb
mov
scas
mov
mov
jl
add
clc
xlat
jp
add
add
inc
pop
jae
add
mov
mov
add
sarl
add
orl
addb
cmp
ja
jle
push
scas
int
and
or
mov
or
mov
insl
outsl
lods
push
nop
add
movsb
inc
sub
mov
push
enter
cmp
or
add
inc
sbb
xor
ljmp
je
add
mov
dec
ljmp
add
ret
jecxz
rolb
nop
add
mov
dec
emms
add
mov
add
daa
sub
into
xchg
fwait
mov
add
pushf
jb
mov
subl
inc
lds
pop
push
add
mov
faddl
insb
inc
add
sbb
mov
add
mov
pusha
add
push
out
ljmp
lock
mov
push
dec
add
pop
out
mov
xor
mov
ds
add
mov
mov
sbb
mov
xor
mov
aam
add
mov
pusha
add
pop
sbb
not
push
mov
arpl
pop
dec
and
and
sbb
and
ds
dec
jae
and
mov
addb
sarl
mov
mov
sti
repz
aad
add
mov
add
sti
push
ret
icebp
push
iret
mov
mov
dec
add
fcmove
mov
inc
push
push
adc
fcomip
popf
add
mov
into
jno
icebp
add
push
jge
mov
std
das
and
mov
inc
push
add
mov
mov
add
add
pop
aas
jmp
mov
test
xchg
adc
sbb
sbb
add
add
mov
or
add
mov
jnp
add
mov
inc
add
sub
inc
repnz
test
add
mov
mov
mov
je
add
dec
lret
pop
cli
add
jl
stc
jae
fsubs
shrl
mov
mov
jo
mov
rdpmc
lret
enter
cmpsb
ret
test
jl
fstl
mov
fwait
sbb
adc
and
add
repnz
popa
aas
mov
sub
sbb
mov
sbb
mov
push
fldln2
in
into
ret
scas
test
stc
leave
dec
pop
add
jle
rolb
mov
xor
clc
out
lods
test
mov
add
sti
mov
mov
inc
push
mov
mov
js
inc
ficomps
sahf
pop
rolb
cmovg
es
inc
mov
mov
add
jns
or
pusha
add
and
mov
lods
test
sub
pushf
xor
data16
mov
sarl
adc
jne
cld
into
sub
outsb
fisubs
incl
add
mov
fcmovbe
add
fstp
xor
pop
rolb
mov
movb
mov
add
or
add
call
out
addr16
lock
cmp
fistl
cmp
jo
mov
or
movsl
mov
adc
sbb
addb
sub
enter
jae
lds
cwtl
jl
add
add
hlt
cmp
pop
je
shll
push
add
mov
aaa
test
xorl
sub
loopne
mov
xor
sahf
iret
adc
pop
out
scas
or
int
int
add
test
jns
mov
mov
add
aaa
add
mov
cmpsl
inc
add
add
orl
rorl
mov
jae
cld
sbb
pushf
cmpsb
repnz
pop
ficoml
mov
adc
inc
fdivrl
jmp
push
jns
jecxz
test
pop
lds
mov
push
adc
mov
faddp
scas
aam
adcl
mov
sub
inc
inc
dec
adc
mov
addr16
xor
inc
fists
daa
xchg
out
sbb
and
jl
pop
sbb
dec
jl
add
add
test
cwtl
loop
mov
mov
mov
jmp
mov
iret
rolb
dec
adc
shl
add
into
mov
add
sub
sbb
mov
sti
pop
xchg
xchg
push
mov
mov
bound
mov
fistl
xchg
pusha
add
mov
outsl
inc
lahf
pop
ja
sti
sub
lock
cmp
loopne
mov
mov
mov
jo
mov
mov
add
cltd
rolb
rolb
mov
lcall
das
das
lock
stos
add
mov
std
jge
lock
mov
mov
mov
dec
test
orl
sbb
mov
add
add
popa
adcl
or
dec
fistpll
imul
les
xor
add
mov
imul
adc
leave
pop
mov
and
add
mov
or
out
pop
lock
leave
pop
mov
lock
insb
adc
mov
mov
add
add
negl
xchg
call
lahf
sbb
jle
arpl
dec
repnz
xchg
fmul
cmpsb
xchg
cltd
cmova
push
pop
mov
leave
pop
adc
mov
leave
mov
cmpsb
xor
rolb
fbld
test
adc
add
xlat
sti
loope
loope
xchg
mov
push
add
mov
pxor
loope
sub
add
mov
and
mov
pop
xor
loop
mov
sub
cmp
test
add
xor
jne
adc
cwtl
lods
loope
leave
cmp
adc
mov
push
shll
add
ds
negb
jbe
mov
mov
sbb
pop
mov
jg
imul
and
data16
orl
out
and
fsubl
mov
add
adc
add
add
nop
add
adc
stos
jnp,pt
sbb
cmp
in
push
xchg
add
mov
mov
pop
loopne
mov
add
mov
jmp
ds
add
and
mov
pusha
add
xor
aas
mov
and
mov
jmp
push
push
sbb
mov
mov
cmp
addb
lea
mov
sbb
mov
outsb
mov
mov
bound
mov
ret
xchg
add
inc
pop
dec
shl
push
cmp
sub
fcmovnbe
add
cmpsb
jne
inc
daa
mov
push
xor
mov
pop
mov
mov
add
ret
sub
mov
xor
test
shll
and
add
cmp
jae
add
push
sbb
add
push
xchg
addb
nop
add
into
fmuls
push
bsf
push
fidivrl
push
loope
mov
add
mov
pop
imul
out
jb
mov
js
imul
cwtl
or
enter
add
add
push
add
inc
jge
movsb
push
add
add
push
pop
jne
pop
inc
or
and
mov
cmp
add
dec
xchg
mov
mov
fistpl
fs
hlt
adc
lcall
test
pop
jl
add
and
cmp
ja
es
inc
jbe
add
mov
add
mov
popf
mov
daa
aaa
jl
jmp
or
xchg
xchg
lock
or
add
adc
mov
add
mov
subl
jnp
in
inc
test
leave
jo
mov
mov
push
iret
out
dec
dec
lahf
dec
rolb
mov
add
icebp
xchg
add
or
adc
xor
mov
aad
shr
adc
add
mov
jmp
jo
mov
jge
inc
or
add
mov
add
mov
sti
mov
mov
mov
push
add
add
mov
mov
aaa
xchg
push
add
mov
adc
ja
in
test
loope
jle
pushf
sub
iret
xor
dec
sbb
xor
mov
jbe
rdpmc
pop
mov
add
add
pushf
xchg
add
cmp
rcll
and
mov
ret
ja
xchg
dec
xchg
dec
jl
add
inc
push
add
mov
int3
jge
push
cli
add
jno
add
cs
sbbl
pop
cmpsb
pop
cmp
inc
mov
insb
dec
pop
add
rolb
jp
adc
inc
in
or
fs
mov
and
mov
xor
mov
jae
addb
xor
mov
imul
mov
rolb
and
push
in
scas
xchg
add
xchg
dec
imul
mov
push
jmp
into
popa
dec
jl
add
xchg
add
repz
push
repz
xchg
int
adc
fidivl
test
mov
lret
sbbl
sbb
push
lret
cmpsb
mov
pop
aad
add
jae
fisttps
mov
add
dec
movsb
fdivs
cli
cmp
and
jp
test
mov
mov
in
ret
push
add
testl
pop
pop
and
hlt
mov
mov
dec
dec
or
inc
daa
stos
mov
out
fs
mov
and
int3
adc
xlat
adc
js
leave
inc
jl
pop
data16
je
add
stc
test
roll
test
dec
push
fs
bound
mov
rolb
mov
inc
add
adc
mov
cli
sub
dec
int3
xor
mov
push
pop
sub
sub
iret
push
xor
cli
adc
add
mov
test
jge
lods
push
lods
lret
mov
add
mov
cmp
or
xor
mov
add
cmp
lea
push
sub
in
test
loop
mov
out
mov
xor
fwait
pop
push
cmpsl
xchg
arpl
add
push
xchg
add
or
and
mov
clc
movsb
inc
aam
jno
add
dec
jbe
add
adc
mov
pop
cltd
push
push
ss
mov
and
outsb
fsub
add
dec
sub
stos
and
mov
jne
mov
mov
xlat
sarl
sub
shrl
addb
je
aad
or
inc
sbb
push
inc
add
inc
add
popa
pop
xchg
mov
jno
cmp
pusha
add
add
mov
inc
add
or
inc
mov
mov
movsl
fistl
aaa
fldcw
jns
dec
rolb
mov
add
add
xor
mov
jno
mov
sbb
jle
jge
xchg
dec
enter
les
inc
push
js
add
pushf
adc
inc
mov
loop
mov
dec
mov
mov
loopne
mov
loope
icebp
in
out
add
idivb
xlat
rolb
mov
jge
stos
mov
mov
aas
mov
mov
jo
mov
push
dec
std
ds
add
fcom
push
jbe
cltd
in
ficoml
out
sbb
fildl
rolb
mov
repz
push
jl
xchg
inc
clc
mov
mov
mov
cs
inc
dec
loop
mov
mov
push
enter
mov
fwait
aad
nop
add
mov
add
add
cmp
add
add
jmp
add
sub
xor
mov
lahf
mov
nop
add
or
scas
push
rolb
mov
aam
pop
cmpsb
lahf
jl
add
and
loope
mov
mov
add
push
iret
dec
cmp
cmc
adc
mov
inc
inc
mov
dec
xchg
add
cmpsl
push
inc
add
xchg
add
cs
add
dec
xchg
jb
mov
fsts
push
nop
add
popf
loop
mov
xchg
mov
dec
cmpsl
out
jns
enter
jecxz
jae
jae
and
mov
mov
add
dec
int
cmc
or
sub
aaa
in
xchg
mov
sub
loope
ljmp
outsb
insl
repz
sbb
add
mov
add
add
insl
xchg
sub
into
std
int
ljmp
xor
mov
mov
mov
push
ljmp
mov
aas
sbb
scas
mov
and
jmp
outsb
leave
scas
fs
add
sub
pop
rolb
mov
xchg
cmp
sbb
push
inc
scas
pop
add
mov
aas
fwait
call
mov
fnstenvs
loop
mov
push
add
jmp
cmp
pop
or
mov
adc
mov
js
push
add
imul
popa
and
mov
sbb
add
adc
push
ret
and
std
bound
mov
add
mov
push
add
add
mov
cmp
addb
inc
pop
fucom
jp
dec
jecxz
das
xchg
lahf
roll
and
fidivl
mov
xor
mov
mov
and
cs
xor
das
ja
cmp
add
cs
xchg
or
add
dec
leave
lods
leave
aad
push
rolb
mov
add
scas
xchg
lods
enter
jp
push
add
add
dec
inc
repz
out
aas
scas
addb
dec
adc
mov
add
mov
addr16
mov
and
add
mov
aam
imul
movsl
push
xlat
push
arpl
add
mov
ss
sar
sbb
rolb
cwtl
lock
pop
xchg
adc
mov
cwtl
lahf
pop
dec
stos
in
add
lods
rolb
mov
mov
cld
xchg
mov
insb
cmp
test
mov
stos
stc
dec
scas
push
or
add
inc
or
xor
mov
xchg
data16
mov
add
shll
stos
addb
inc
test
out
into
mov
mov
adc
mov
mov
and
mov
pop
cmpsb
adc
add
repz
mov
repz
das
faddp
add
cmp
mov
mov
mov
xchg
aam
cmc
add
mov
jnp
jae
inc
add
or
in
mov
bound
mov
add
idivb
add
add
push
add
xchg
fimuls
jb
mov
pop
lock
add
mov
je
out
xchg
sbb
push
dec
xchg
add
fld
adc
test
add
stos
sub
clc
repnz
jg
addb
scas
out
mov
mov
or
jnp
or
inc
aas
pop
push
jns
or
jo
mov
ljmp
add
sbb
or
mov
aas
sti
movsl
popf
sbb
mov
add
xchg
jl
out
roll
pop
sub
cmpsb
xchg
lods
sub
add
fldenv
xchg
add
mov
pop
sub
jae
je
dec
fdiv
add
pop
jge
pop
mov
jno
daa
or
pusha
add
mov
aad
out
add
loopne
mov
xor
lcall
addl
add
js
add
lret
jb
mov
xchg
add
mov
jecxz
add
aam
loope
push
add
js
pop
xor
fidivrl
sbb
jle
sbb
cmpsl
mov
dec
loop
mov
pop
iret
es
mov
movsl
fcmovne
imul
push
sbb
jae
cmpsb
dec
jno
imul
loope
push
lea
sbb
lock
sbbl
stos
and
lcall
cwtd
movsb
push
rolb
mov
repz
mov
fisttps
ljmp
loop
mov
fs
clc
or
pop
hlt
bound
mov
out
adc
out
add
pushf
fisubs
dec
fcoml
add
inc
jge
dec
and
mov
jge
insl
ja
adc
mov
lods
mov
mov
add
jnp
xorl
mov
cmp
lcall
cmp
and
cltd
addb
mov
pop
aad
add
adc
mov
pop
push
mov
imul
and
mov
push
or
lcall
add
icebp
out
insl
cmp
shll
add
adc
addb
xor
and
ja
stc
scas
and
popf
pop
mov
daa
sbb
push
add
mov
add
mov
dec
mov
fcompl
ljmp
das
fs
push
repz
in
int3
lock
ljmp
pop
inc
lods
push
mov
cmp
jecxz
jecxz
dec
xchg
rcrl
xchg
push
add
sub
outsb
out
sub
das
dec
mulb
test
dec
mov
or
lret
mov
lcall
test
aad
add
outsl
dec
mov
mov
fwait
repz
xor
lea
mov
addb
cmp
mov
mov
stos
mov
mov
fs
fs
outsl
jp
xor
mov
mov
xchg
lahf
aam
xchg
int
cmpl
cwtl
es
jns
out
xchg
add
add
cwtl
lcall
adc
add
push
into
outsl
lret
mov
adc
mov
test
sbb
clc
rolb
xchg
inc
ja
inc
push
notl
jb
mov
mov
add
add
add
