dec
lods
cs
dec
inc
add
dec
dec
movsl
mov
sub
scas
popa
pusha
out
movsl
mov
popa
call
fs
dec
dec
inc
and
out
loopne
arpl
and
or
in
jmp
movsb
lods
scas
bound
movsl
add
inc
outsb
add
enter
int
push
mov
or
or
test
lret
sub
or
lea
test
data16
addb
add
addl
mov
pinsrw
addr16
mov
dec
out
test
add
stos
int
add
and
lds
into
int
cs
in
in
lods
sub
or
iret
subl
imul
das
andb
movsb
sub
or
xadd
imul
ret
daa
inc
inc
or
into
fs
insb
imul
inc
mov
sub
pusha
imul
push
in
movsb
imul
int3
imul
mov
les
sub
cs
stos
mov
mov
dec
scas
and
es
or
push
and
insl
add
loope
daa
out
sub
dec
es
out
cmpsb
jmp
add
sub
outsl
in
xchg
mov
push
inc
test
movsb
imul
test
stos
mov
movsb
loope
lods
push
movsl
mov
popa
add
imul
or
call
test
out
lods
imul
push
or
mov
inc
in
inc
daa
inc
and
add
scas
sub
push
or
mov
pop
mov
scas
mov
sub
in
test
lods
insb
and
lea
into
gs
add
dec
cmpsl
lret
mov
add
gs
lods
xchg
pusha
dec
test
pop
push
test
call
out
insb
addb
int3
lods
in
sub
imul
lret
xchg
insb
call
out
inc
dec
mov
dec
push
call
test
outsl
movsl
lods
or
inc
and
outsb
movsl
out
enter
cmpsl
mov
or
add
es
iret
or
arpl
imul
movsl
mov
push
daa
add
pusha
loope
test
push
lret
cmpsb
mov
in
add
insb
add
sub
into
and
push
sub
sub
int3
dec
dec
movsl
inc
into
dec
lret
call
andb
das
mov
inc
loop
out
dec
inc
les
lods
daa
loopne
dec
lret
jmp
shlb
int
pusha
out
xchg
scas
dec
mov
das
das
and
loope
add
fs
sub
mov
sub
dec
dec
in
lods
outsb
loop
out
stos
scas
test
cmpsl
xchg
test
insb
insb
add
dec
sub
and
insb
dec
int
and
dec
mov
and
stos
test
out
int
and
jmp
movsb
mov
sub
cmpsb
orb
out
push
test
mov
dec
or
addr16
inc
cmpsb
bswap
mov
andb
and
ljmp
push
in
or
fs
outsb
out
es
stos
mov
pusha
test
add
mov
add
insl
and
pop
in
cs
in
stos
add
inc
iret
test
xchg
test
roll
or
and
or
inc
inc
ljmp
ret
mov
insl
mov
enter
addb
dec
inc
mov
test
popa
addb
imul
and
in
inc
dec
add
add
dec
scas
mov
es
inc
add
push
add
dec
das
addl
rorl
lds
dec
dec
dec
test
add
inc
cmpsb
inc
ret
out
mov
lret
scas
add
insb
add
mov
imul
ret
push
dec
inc
dec
inc
scas
add
lds
mov
roll
mov
inc
dec
insl
push
and
add
mov
and
loop
cmpsb
mov
inc
sub
int3
push
gs
inc
subb
outsl
popl
mov
inc
out
int
sub
inc
movsl
or
and
es
enter
or
and
mov
lds
outsb
loop
out
dec
lods
mov
or
test
movsb
mov
iret
iret
andw
sub
addl
int
add
movsb
dec
popl
add
and
test
add
sub
pop
lret
mov
and
test
sub
xchg
or
scas
sub
andb
ret
iret
jmp
stos
iret
int3
pextrw
imul
das
mov
lods
inc
mov
movsl
ret
movsl
inc
imul
call
ret
add
leave
xchg
pop
movsl
movsb
add
inc
dec
out
and
lea
or
out
out
or
lods
test
in
in
in
dec
lret
in
das
int
loope
insb
dec
lods
inc
into
ljmp
push
inc
dec
add
movsl
out
or
int
or
inc
and
inc
jecxz
push
arpl
call
sub
outsb
inc
and
loopne
cs
mov
lret
push
and
call
mov
inc
out
dec
ret
in
xchg
sub
insl
outsl
or
out
out
out
mov
mov
mov
or
add
sub
insl
test
add
mov
les
dec
enter
or
loope
or
push
mov
mov
and
int3
mov
test
add
push
mov
add
out
scas
lret
in
out
paddsb
ret
fs
ret
or
test
outsb
inc
lret
jmp
es
enter
enter
sub
imul
add
enter
cmpsl
out
inc
dec
daa
das
push
inc
loope
add
out
inc
mov
lods
add
mov
lret
and
or
in
mov
mov
inc
mov
inc
pusha
movsb
and
dec
mov
in
add
jecxz
shll
or
and
inc
push
test
subl
enter
imul
scas
movsb
scas
ret
and
bound
shrl
and
lret
ljmp
sub
insl
inc
add
inc
mov
dec
mov
bound
push
movsl
stos
outsb
add
add
in
sub
leave
jecxz
inc
stos
mov
movsl
out
stos
iret
mov
add
ret
out
lea
inc
and
lods
and
and
rorl
mov
dec
mov
xchg
mov
sub
or
mov
lods
pusha
mov
push
sub
dec
dec
mov
add
scas
sub
addb
out
push
mov
into
ret
out
addb
and
pop
dec
dec
sub
add
xchg
and
daa
movsb
iret
lret
dec
mov
stos
inc
loopne
mov
cs
loope
push
loop
shrl
mov
mov
dec
pop
scas
mov
arpl
loope
bound
sub
lods
lods
fs
push
out
inc
enter
test
bound
sub
mov
insb
imul
das
lods
inc
out
lea
cmpsl
ret
call
xchg
mov
ret
ret
bound
enter
leave
and
sub
in
add
or
inc
mov
in
pusha
and
and
ret
loope
jecxz
daa
and
mov
and
inc
inc
daa
add
inc
orl
in
call
lret
in
sub
pop
sub
dec
mov
loop
inc
daa
xchg
add
orb
popa
inc
in
sub
dec
shlb
data16
add
dec
movaps
lret
daa
sub
insl
add
lds
jmp
inc
daa
cmpsl
inc
out
in
add
insl
or
mov
enter
pop
or
outsl
ret
popl
dec
push
outsl
int3
and
roll
outsl
dec
mov
sub
arpl
popl
int
loop
out
and
addb
and
dec
out
imul
stos
call
arpl
test
stos
sub
dec
test
gs
scas
daa
imul
into
or
xchg
test
dec
addr16
pop
int3
test
mov
and
inc
or
loope
dec
iret
add
les
imul
cmpsl
sub
pmulhw
out
out
out
or
es
loopne
sub
add
add
in
mov
out
pop
in
test
sub
outsb
push
pop
inc
loop
jmp
subl
int
mov
imul
scas
sub
xchg
inc
lret
out
arpl
stos
mov
into
es
lds
ret
and
out
dec
leave
stos
pop
popl
loopne
imul
jmp
leave
sub
ret
ljmp
insb
mov
xchg
dec
ret
arpl
lret
inc
cmpsl
push
inc
outsl
xchg
stos
sub
add
push
and
inc
and
add
lods
and
inc
loopne
or
add
loopne
sub
dec
stos
bound
outsl
inc
lds
movsl
mov
insb
movsl
mov
cmpsl
mov
add
mov
test
jmp
popa
dec
or
dec
daa
in
add
lods
lret
das
dec
addr16
scas
les
sub
dec
outsl
les
xchg
add
sub
imul
inc
out
and
sub
sub
inc
shrd
loope
lods
in
in
movsl
lret
ror
and
mov
push
dec
cmpsb
add
or
in
test
or
inc
inc
jmp
lret
orb
daa
ret
insb
add
lods
into
shrl
in
es
add
dec
dec
out
and
and
xchg
mov
dec
inc
jmp
dec
loope
movsl
and
add
insb
and
stos
in
and
mov
dec
or
sub
bound
insl
lret
mov
imul
inc
dec
jecxz
sub
mov
daa
test
out
inc
push
add
lods
and
ljmp
sub
stos
or
sub
push
sub
and
mov
daa
sub
int3
sub
sub
movnti
in
insb
lea
inc
ret
ljmp
shrb
in
lods
das
inc
add
loop
out
dec
or
sub
lea
andb
test
shrb
dec
out
sub
loope
int3
inc
dec
sub
addl
rolb
push
mov
sub
out
dec
dec
ret
or
into
lret
mov
jmp
jmp
comiss
mov
cs
pop
or
loop
dec
mov
dec
jmp
mov
arpl
add
mov
sub
loopne
mov
jecxz
inc
mov
call
outsb
int3
daa
and
ret
add
in
roll
outsl
cmpsb
inc
shufps
loop
mov
scas
les
stos
inc
mov
inc
stos
daa
bound
push
sub
out
dec
gs
sub
dec
lds
mov
xchg
call
xchg
mov
lods
sub
inc
push
in
sub
imul
pinsrw
lret
add
es
movsl
push
jae
int3
or
add
sub
xchg
int
into
sub
outsb
lds
sub
and
test
inc
jmp
out
sub
lds
sub
sub
mov
insl
mov
rolb
out
out
inc
loopne
and
lea
inc
lret
shrl
add
mov
add
in
outsl
mov
lret
addr16
in
and
add
arpl
and
cmpsb
sub
fs
cmpsb
outsl
push
fs
dec
shll
jmp
dec
pop
ljmp
dec
lret
mov
stos
sub
int3
mov
mov
bound
xchg
and
out
or
scas
sub
lods
inc
leave
add
cmpsb
insl
bound
push
in
inc
sub
out
ret
or
dec
cmp
xchg
or
pop
sub
inc
mov
and
scas
mov
adc
xchg
or
push
inc
pop
and
inc
leave
in
in
jae
das
xchg
pop
sub
out
idivb
push
in
cmp
lret
scas
fld
push
jo
addr16
mov
movsl
ds
loope
cwtl
in
inc
fldln2
adc
push
cmpsb
mov
cmpsb
jnp
cmpsl
pop
and
in
or
shl
je
lock
mov
int3
dec
push
mov
cwtl
sbb
lea
lahf
xor
dec
pusha
or
xlat
xchg
fsubrl
jno
push
imul
int
std
inc
inc
adc
and
cwtl
test
sti
mov
cwtl
inc
inc
nop/reserved
and
and
xchg
xchg
add
sub
ss
outsl
mov
cmp
or
dec
out
pushf
mov
jge
cwtl
addb
push
pop
mov
push
pop
adc
stc
xchg
clc
add
fimull
leave
imul
pusha
arpl
mov
ds
shl
push
mov
mov
or
or
testb
shl
shrl
xor
add
add
popa
push
jmp
xchg
push
or
mov
fmull
stos
sbb
adc
xchg
dec
xchg
xor
jg
andb
cs
or
shrl
fildl
subl
push
cwtl
in
mov
lcall
cwtl
pusha
fistl
mov
push
cmpb
sti
lea
test
sbb
inc
cs
or
insb
andb
int
loopne
pushf
add
movsl
mov
jg
xor
rcl
call
xor
mov
xchg
cli
xchg
mov
pusha
or
das
push
or
loopne
lret
mov
jl
leave
mov
dec
ljmp
std
out
cmpsl
jmp
add
out
add
rclb
add
arpl
lods
xor
ficoml
int
in
call
mov
jo
cwtl
loopne
aad
pushl
pop
stos
repnz
push
push
outsb
scas
imul
adc
movsb
and
fdivl
adc
sbb
and
and
push
lcall
rcrb
inc
jge
inc
lcall
fadds
xchg
xchg
lret
bound
cld
add
or
rclb
inc
dec
xchg
mov
mov
mov
pop
aas
jbe
mov
and
sub
add
lret
mov
adc
sbbl
sti
adc
inc
dec
add
mov
icebp
xchg
mov
fadds
xor
dec
mov
xor
stc
int
add
call
push
lcall
fimull
jl
mov
lods
mov
adc
cmc
mov
movzwl
add
loop
jo
and
lods
out
push
sub
stos
cmp
jne
hlt
bound
movsl
mov
aaa
fsubs
xor
xor
sbb
pop
cmp
and
scas
dec
cld
mov
mov
aam
enter
mov
out
pop
adc
lcall
je
pop
int
shlb
shl
fs
in
loop
xchg
pop
lret
and
aaa
xor
xchg
mov
and
adc
sub
out
dec
cmp
jecxz
subb
jae
jbe
xchg
shrb
mov
out
and
clc
test
jnp
pop
sarl
jg
cltd
push
pop
pushf
sub
imul
push
test
aam
jo
hlt
shlb
push
jo
sub
sahf
jno
jbe
je
loopne
and
repz
add
adc
lds
mov
outsl
push
xchg
sbb
pop
call
cmpsb
sbb
sbb
xchg
push
adc
xchg
and
mov
ss
jo
loopne
cmovle
pusha
call
jo
xor
push
sbb
int
xchg
push
andl
out
inc
popf
dec
inc
repz
imul
in
popf
fimuls
iret
popf
mov
xchg
popa
inc
and
in
nop
cwtl
mov
jo
and
mov
std
aas
psraw
imul
rcr
adc
mov
call
shrb
push
je
lock
dec
sbb
add
or
pusha
mov
orb
std
add
pushf
hlt
andb
dec
adc
dec
loope
gs
loopne
jo
mov
and
out
mov
into
dec
mov
xlat
jl
and
das
adc
sti
push
cmpsl
clc
jb
sbbl
hlt
jae
fs
fisttps
pop
imul
mov
mov
test
push
xchg
cmpsb
fucom
aaa
mov
sbb
mov
xor
enter
loopne
push
add
mov
pop
and
call
stc
sbb
add
add
inc
fnstcw
lock
push
adc
and
adc
stos
mov
pop
ret
sub
pop
cmp
inc
daa
pop
sbb
test
mov
out
xor
adc
lret
sbb
pusha
movsb
mov
subb
scas
les
loopne,pn
sqrtps
inc
orb
and
adc
mov
push
pop
jl
movsb
push
inc
fs
pusha
insl
fimull
insl
std
push
pop
jmp
push
cwtl
or
les
repnz
cli
xchg
ljmp
mov
aad
test
insl
mov
add
out
or
cmp
arpl
sbb
shlb
insb
shl
bound
adc
add
and
movsb
test
scas
jmp
cmpsl
xor
push
pop
aad
int
movsl
cmp
jae
sub
loopne
jg
mov
fsts
out
sub
cmpsl
stos
push
mov
adc
add
mov
add
sbbb
and
and
dec
movsb
sbb
and
jmp
inc
push
aam
out
xchg
lock
dec
adcl
inc
adc
mov
icebp
inc
cmp
add
add
js
and
push
repz
test
mov
dec
les
xchg
fs
aaa
jno,pt
imul
icebp
push
add
adc
idivb
and
pop
xchg
jae
xchg
cs
imul
cmpsl
loop
cmpsl
sub
in
jbe
aas
out
jg
inc
xor
push
mov
and
sahf
dec
and
popf
out
adc
inc
jl
mov
cmp
into
imul
mov
mov
insb
or
mov
rolb
scas
add
rcr
dec
aas
mov
pop
cmp
pop
data16
jecxz
jecxz
xchg
stc
cli
in
cmpsl
cmp
movsl
sub
dec
sti
stc
mov
pop
jnp
mov
adc
mov
mov
insb
into
xchg
xor
aad
lret
out
faddl
push
jae
mov
jecxz
cmp
loopne
andl
data16
inc
ret
sub
dec
push
push
xor
mov
pop
mov
arpl
jmp
add
xor
repnz
xor
xchg
out
cmp
test
inc
inc
fsubr
mov
xchg
aam
mov
push
sub
hlt
dec
xchg
cmp
scas
inc
xor
clc
sarl
push
int
repz
xor
lods
inc
cmp
and
jbe
adc
shlb
shlb
adc
fldt
dec
in
pop
lret
mov
adc
ss
push
fucom
mov
mov
arpl
lds
pusha
std
jns
adc
jno
sbb
xchg
fistl
jbe
mov
mov
enter
fdivl
pusha
inc
or
les
stos
pop
cld
cmpsb
xor
mov
rcl
aam
mov
inc
out
pop
faddp
add
fsubrl
inc
mov
add
bound
xlat
popa
xor
cmp
sbb
nop
sbb
call
cmp
pop
mov
and
push
mov
or
mov
adc
into
fstpl
inc
cmp
mov
bound
push
pop
inc
out
std
mov
lds
push
std
out
loope
push
mov
cmpb
pusha
int
cmp
pushf
jo
or
xchg
shl
orb
sbb
pusha
es
in
ljmp
lods
ficompl
jg
addb
xor
mov
push
test
pushf
sbb
shlb
mov
fistpl
loopne
fxch
jp
cmovg
xchg
test
pop
jg
mov
and
add
outsb
and
mov
pop
mov
cmp
and
jge
mov
pop
add
stos
leave
cltd
stc
pop
pop
fneni(8087
cmp
xchg
and
test
mov
or
jae
popf
movsb
xor
je
jmp
push
pop
jle
sbb
mov
mov
xchg
jmp
in
fcomps
inc
aaa
sub
or
pop
push
or
cwtl
push
sti
xchg
ds
mov
ret
mov
shll
fyl2x
into
inc
dec
jl
add
aas
xchg
ret
bound
js
addl
or
rcl
icebp
adc
sti
inc
bound
out
int
scas
lds
xor
cmpb
mov
sti
ret
adc
push
sbb
std
inc
sbb
fwait
inc
lock
mov
xor
stc
gs
pushf
orb
dec
movsl
stos
test
cmp
push
das
xor
out
jae
fisubrl
ds
adc
jno
sbb
imul
stc
fnsave
xchg
das
mov
push
lahf
movsb
cmp
xor
in
and
add
aam
cmp
or
hlt
repz
sbb
test
jg
enter
adc
sbb
mov
pop
outsb
lods
hlt
clc
mov
push
or
loopne
push
enter
bound
add
lods
dec
xor
add
pop
mov
les
xchg
mov
pop
int
xchg
inc
inc
cmc
popf
daa
fwait
or
sbbb
insb
pop
es
popa
inc
shlb
sahf
mov
icebp
sarl
pushf
test
cmp
sub
shl
push
fwait
cmp
inc
sub
mov
daa
xlat
or
mov
shr
sub
xor
or
and
and
mov
mov
adc
ror
add
xchg
add
sub
sbb
add
push
loop
add
fwait
cltd
push
test
add
dec
xchg
adc
pusha
aam
cmp
aaa
inc
loope
sahf
fisubs
xchg
addl
jmp
jno
imul
adc
imul
or
xchg
call
divl
cmp
mov
lock
lcall
push
bound
jbe
and
jge
stos
ds
adc
incb
sub
jne
pop
cmp
push
repz
shll
inc
test
add
sbb
jl
push
lods
cli
gs
cs
cld
mov
cmp
je
stos
test
jae
insl
sarl
or
insb
rclb
or
stos
add
cmc
ss
xor
lods
negl
int3
jg
xor
and
gs
ret
jnp
mov
je
cmp
pop
mov
mov
not
dec
outsb
mulb
mov
mov
lcall
inc
call
mov
adc
sahf
dec
jo
into
sub
loopne
jmp
imul
sub
rclb
popa
in
ja
ret
mov
mov
push
loopne
cli
fwait
jecxz
out
xlat
pop
mov
push
pop
jno
outsl
cmp
mov
sub
cli
das
scas
add
int3
pusha
fwait
adc
loop
push
pop
push
sub
jmp
ss
mov
les
dec
sti
fnstcw
add
mov
ljmp
add
mov
sub
push
push
mov
ljmp
mov
pop
leave
shlb
addr16
cmpsb
icebp
pop
inc
pushf
inc
inc
ss
addb
sbb
sub
repz
sbb
cwtl
and
xor
dec
xchg
filds
fiadds
mov
xchg
cld
inc
or
push
mov
lret
fisttps
sbb
repz
daa
sbb
push
jnp
mov
in
insl
cmp
pop
mov
iret
mov
enter
adc
mov
stc
mov
pop
insl
fsubrs
arpl
out
dec
pop
sbb
lret
xchg
pop
xchg
mov
pusha
pop
hlt
pop
idivb
cmp
int3
xchg
lock
adc
loopne
mov
or
inc
gs
js
sarl
out
xor
scas
lea
or
fsubrl
inc
fdivrl
inc
loopne
hlt
or
push
jbe
mov
movd
out
mov
mov
nop
add
lcall
mov
scas
scas
mov
mov
jl
pop
imul
fdivrl
xchg
dec
outsl
xchg
out
adc
cmpsb
mov
popl
or
loopne
mov
fnstsw
hlt
addr16
inc
inc
jp
loopne
adc
loopne
push
popf
jno
and
add
xchg
in
mov
sbb
mov
js
or
pusha
and
pop
xor
inc
push
pop
mov
xchg
popf
sub
js
aas
jge
and
push
push
lcall
stos
jo
mov
inc
adc
jecxz
nop
in
add
or
sub
sti
mov
pop
xor
add
cs
daa
cmp
shlb
mov
mov
nop
mov
and
mov
test
jne
sub
and
int
mov
and
sub
fwait
clc
shr
enter
and
rorb
adc
add
cmpsl
fildll
mov
rolb
loop
aad
xor
and
adc
aaa
pop
loopne
aaa
pop
repnz
and
insl
stos
xchg
cwtl
mov
cli
xchg
mov
dec
mov
sbb
sub
icebp
sub
pop
cmp
cltd
scas
mov
stc
out
out
adc
inc
sub
mov
add
inc
fidivs
loopne
jns
rcrb
jno
mov
or
loopne
add
loopne
lahf
cmp
test
sbb
mov
and
loopne
sti
test
icebp
stos
sub
jp
dec
rcll
out
scas
aam
pushf
dec
cmpb
sarl
fdivrs
shl
fbld
sub
insb
xchg
push
enter
add
shll
bound
fisttpll
loopne
in
das
push
popf
movsb
mov
arpl
mov
fcmovnu
shll
xorb
xor
inc
mov
cwtl
adc
addl
adc
jns
or
lds
fsqrt
fsubrl
jns
inc
addr16
mov
adc
hlt
daa
and
cwtl
enter
mov
inc
int3
jns
sti
aad
sahf
cli
shlb
popa
aad
fwait
sahf
push
or
pusha
ret
subb
stos
dec
hlt
hlt
leave
dec
pushf
faddl
push
popf
push
push
fisttpll
adcb
push
insl
inc
lcall
subl
inc
adc
movsl
sbb
fwait
aaa
xchg
dec
mov
sub
mov
push
inc
jp
test
fwait
pusha
mov
add
je
sbb
out
sbb
mov
add
or
lret
in
or
adc
andb
pop
jbe
fwait
inc
pop
jae
jno
ret
loop
sbbb
movsb
and
sbb
pop
test
add
mov
sbb
xlat
movsb
push
call
test
xchg
aaa
dec
dec
ja
sti
inc
or
leave
pusha
push
and
filds
and
das
mov
popf
enter
and
orb
pop
lcall
test
sbbb
dec
ljmp
lock
mov
shlb
xchg
popa
pop
push
into
ljmp
movsl
pop
dec
fisttpll
inc
leave
fildll
lods
push
out
cmp
xchg
push
or
ret
pop
mov
pop
or
mov
mov
inc
cmpb
sub
notl
push
and
mov
add
and
test
iret
inc
dec
xchg
movsl
sub
pop
js
adc
pop
sub
cmp
shl
jnp
xor
sbb
and
mov
dec
data16
clc
outsb
mov
pop
xor
xchg
mov
std
cmpsl
mov
sub
dec
xor
stos
rol
push
cmp
cltd
pop
cmp
add
cmpl
mov
adc
mov
cwtl
add
push
imul
push
outsb
pop
dec
or
in
sub
jno
out
and
stc
xchg
push
sub
lret
mov
shr
push
jne
lea
scas
nop
adc
or
dec
es
jnp
dec
cmpsb
lcall
insb
fld
mov
sbbb
inc
xchg
sbb
mov
pop
pusha
mov
mov
sub
push
aad
pop
loope
loopne
dec
cld
fisubl
loopne
int3
pusha
mov
sub
mov
mov
xor
pop
in
out
rcll
hlt
push
cs
inc
mov
add
outsb
pop
nop
add
subl
scas
out
sub
adc
sub
enter
int
leave
inc
push
sub
daa
nop
test
insb
sub
xchg
ret
in
lcall
push
out
dec
pop
mov
sub
sbb
mov
dec
cmpsl
pusha
lea
push
inc
aaa
cmpsb
in
inc
test
pop
sbb
pusha
adc
and
adc
jnp
or
mov
enter
sub
pop
xchg
addb
fsub
xchg
je
lds
mov
xor
aam
xchg
push
icebp
int
sbbb
enter
jg
inc
push
xchg
enter
or
or
in
and
fsubs
fsubrp
std
stos
mov
rcrl
dec
and
add
lret
jmp
fcmovne
dec
mov
rolb
scas
fldt
or
out
movsb
insl
push
xchg
aaa
mov
arpl
and
pop
push
xchg
xchg
pop
mov
movsb
lcall
scas
jae
push
pop
ljmp
iret
jl
call
dec
push
xor
adc
ljmp
add
stos
mov
pop
adc
adc
mov
add
jo
js
pop
cmp
cmp
xor
push
jge
test
nop
xor
int
jle
dec
sahf
test
pop
mov
push
pop
insl
repnz
retw
iret
pop
test
enter
mov
mov
or
inc
cltd
and
and
mov
outsb
sub
je
enter
pop
xor
pusha
cmp
mov
push
xchg
subl
dec
pop
mov
push
movsb
int3
mov
clc
inc
icebp
mov
push
in
add
fs
mov
inc
outsl
push
lds
xchg
add
mov
cmp
mov
push
pop
push
lahf
pop
jne
jbe
xchg
notl
sub
push
push
jge
adc
rol
inc
fisubrs
and
movsl
add
mov
dec
fs
test
fwait
data16
and
ljmp
in
adc
sbb
loopne
jge
add
and
pop
jne
cmpsl
mov
loopne
sub
fdivrs
fmulp
outsb
xchg
push
and
pushf
and
sti
cs
lcall
cmp
push
or
std
or
jns
fcoml
mov
mov
sub
cmp
and
test
inc
popa
call
sub
sub
movl
cmp
sub
lret
pop
sbb
ror
jle
test
sahf
fcomip
sub
cmpsl
add
xchg
jmp
pop
xor
or
xlat
ret
pop
imul
add
cltd
add
mov
test
popa
jbe
mov
cmpsl
mov
mov
iret
and
sbb
xchg
out
xchg
repnz
icebp
cmp
dec
rorl
xlat
rolb
sub
pop
je
or
cmp
addb
insl
in
push
cwtl
adc
out
stc
inc
int3
out
daa
loope
imul
mov
adc
lock
pop
int
or
mov
push
and
jo
cld
aaa
xchg
insb
dec
repz
xlat
mov
mov
loop
sqrtps
das
cmpsl
xor
loope
mov
inc
pop
clc
mov
data16
and
in
jmp
mov
cmp
sbb
loopne
push
inc
jecxz
add
cmc
lcall
test
outsb
push
mov
fs
cmp
test
cmp
dec
push
jecxz
add
adc
inc
mov
mov
rorb
inc
xchg
mov
lea
mov
js
into
loope
adcl
pusha
ficoms
mov
dec
mov
sbb
es
add
testl
shrl
ss
shlb
rol
mov
pop
shlb
push
stc
pop
xor
push
js
fisttpl
test
les
adc
xor
lock
js
js
cwtl
in
stos
mov
data16
add
rcrl
push
dec
out
or
or
clc
loopne
sbb
pusha
cmc
push
fdivs
adcl
mov
dec
pusha
repz
sub
imul
jmp
mov
icebp
test
mov
movsb
clc
popf
rcr
xor
dec
mov
shll
cmpsb
xchg
insl
sti
cli
popf
in
or
mov
shll
add
push
lahf
aaa
push
jnp
push
adc
lahf
xchg
xor
add
in
imul
jbe
std
adc
cmp
leave
mov
jo
lcall
je
dec
mov
shll
mov
ret
data16
hlt
fisubrs
sbb
push
mov
push
xchg
xchg
cli
insb
pusha
mov
inc
pop
push
push
pop
in
cmp
imul
into
enter
xchg
imul
lods
pop
mov
mov
in
sarb
add
mov
sbb
jnp
or
cld
lods
mov
jl
cmc
out
adc
inc
pop
cltd
ret
call
mov
lcall
xchg
mov
shll
mov
jmp
jmp
bound
cmpsb
lahf
pop
inc
dec
lods
int3
mov
pusha
notl
mov
inc
pushf
cmp
movsl
out
jmp
mov
and
sbb
lea
pop
loope
pop
fldl
adc
jg
out
cwtl
insb
inc
cmc
out
ret
movsb
inc
xchg
pop
icebp
mov
or
xchg
jae
ja
sub
push
xor
push
xchg
in
mov
push
in
ja
mov
jns
jecxz
xlat
arpl
fdivs
jmp
aas
out
dec
jne
adc
adc
inc
fs
xor
pusha
xchg
fs
and
rolb
push
jmp
push
insl
int3
jge
pushf
push
add
xchg
push
push
outsb
pushl
dec
pop
inc
leave
movb
jl
or
cmp
push
pop
faddp
test
loopne
addr16
push
mov
mov
outsb
jg
mov
imul
pop
cwtl
and
scas
aas
push
push
movsb
call
insl
pop
stc
mov
cmpsl
loopne
ss
mov
dec
clc
fs
fdivrs
pusha
xor
gs
shrb
int
jns
jnp
in
cmp
fsubp
push
out
jmp
aaa
jmp
pusha
out
pop
iret
sbb
sub
cmpsb
inc
scas
lock
ja
and
jle
jl
jne
pusha
shlb
fmulp
mov
add
pop
call
sub
push
mov
add
lea
push
push
push
and
push
push
push
mov
cld
lea
test
je
jmp
pusha
pusha
inc
add
or
add
xor
jmp
push
push
call
or
sub
leave
ret
ret
sub
xchg
xchg
mov
sub
or
add
add
lea
sub
shr
dec
not
sub
sub
jne
push
pop
add
lea
stc
jmp
jmp
push
mov
mov
push
loop
lea
orl
andl
push
push
push
push
push
push
cmp
jne
callw
and
jne
loope
lea
movl
push
push
push
bnd
lea
test
cld
je
adc
xchg
sub
xchg
idiv
xchg
add
add
inc
cli
pop
mov
push
push
pop
sub
mov
mov
mov
inc
push
mov
sbb
rcll
jge
lea
pop
mov
test
add
inc
push
cli
mov
testb
mov
scas
cmpsb
mov
or
push
jmp
mov
cwtl
fs
dec
push
add
js
jge
jae
loope
pushf
add
mov
fistpll
pop
inc
jg
cmp
loopne
test
mov
sbb
repz
test
imul
stos
jmp
ja
push
add
adc
adc
cmpsb
and
ljmp
shlb
xchg
pusha
in
mov
shrl
push
xchg
cmp
and
pop
add
jbe
fs
push
mov
xchg
add
popf
mov
scas
aam
add
cld
ja
push
dec
xchg
adc
rolb
cmp
in
fcmovu
mov
pop
sub
jne
inc
addl
pop
mov
pusha
jae
cmpsb
pop
pop
out
dec
ret
mov
fcompl
add
inc
nop
jo
mov
js
and
push
fistpll
pop
aaa
xchg
jns
push
pop
arpl
cmp
mov
loop
sub
or
dec
out
mov
push
mov
aas
movsb
bound
fimuls
popa
arpl
lcall
sbb
ja
or
inc
push
jnp
js
inc
xor
sub
enter
inc
aaa
in
clc
and
in
dec
pop
pop
xchg
and
sti
adcb
out
mov
mov
pop
lock
mov
cmpsb
cvtpi2ps
pop
and
inc
repnz
fsubl
call
jb
mov
mov
daa
cmp
movsl
mov
cmpxchg
or
shlb
mov
pop
mov
sub
fnstcw
cmp
mov
or
subb
pusha
arpl
jp
inc
call
xchg
push
mov
jno
out
jbe
add
lds
mov
in
loope
sub
aam
sahf
inc
lea
mov
stos
inc
and
insb
and
dec
das
xchg
or
pusha
push
mov
push
shll
lods
and
shlb
rcrl
sub
adc
mov
cmp
sub
aam
add
test
outsb
or
shl
and
pop
xorb
imul
lcall
push
test
and
mov
daa
mov
jno
or
adc
loopne
add
out
xchg
mov
adc
mov
sti
jno
pop
shl
or
stos
or
sub
shlb
call
ds
js
ficoms
mov
fiaddl
mov
test
inc
divb
jp
xchg
repz
cmp
xor
pop
pop
movups
add
xor
mov
dec
iret
in
mov
sbb
cs
sub
orb
push
xchg
or
arpl
addr16
mov
lock
sub
adc
sub
jb
pop
mov
sahf
adc
push
pop
int
adc
jp
sbb
xor
outsl
shrb
icebp
pop
mov
jg
xchg
sub
pushl
je
das
hlt
orb
push
pusha
xor
or
mov
insb
test
pusha
pushf
cmp
in
xlat
xchg
aas
inc
fwait
repz
mov
xor
outsl
add
lods
out
mov
lods
sarl
pop
push
jnp
jb
mov
test
push
inc
lods
adc
shl
dec
ljmp
aas
shrb
jo
clc
lea
sti
lea
andb
pusha
in
push
adc
push
sbb
inc
mov
pusha
test
push
fsubrs
imul
cmp
imul
div
in
cmpsl
jmp
cltd
test
jno
out
and
mov
sbb
xor
imul
in
js
pop
fadds
mov
mov
push
pushf
or
lods
mov
in
push
pop
clc
cld
inc
ret
mov
inc
inc
icebp
pop
mov
lods
mov
in
sub
addb
xchg
insb
add
rorl
cmp
aam
ret
insl
jbe
add
inc
aaa
std
in
sub
mov
in
loopne
and
fistpll
jg
push
jbe
dec
lods
lcall
adc
xor
int3
pop
add
add
mov
cwtl
push
loopne
adcb
repz
pop
push
shr
inc
or
xorb
cld
lret
jo
xchg
std
xchg
sbb
in
cs
fiaddl
inc
cmp
ss
adcb
jmp
sbb
sbb
mov
cld
js
xchg
xor
outsb
sbb
jno
jecxz
pop
cmp
subb
ljmp
add
mov
mov
lods
loopne
pusha
inc
popa
fsub
int
cmpsb
jo
shr
dec
pop
ja
add
cmpsl
mov
dec
mov
mov
dec
shl
pop
inc
mov
loopne
sarb
cmpsb
xchg
mov
popa
sbbl
pushf
inc
pusha
pop
pusha
and
dec
cmpsb
clc
push
repz
fsubs
in
inc
xor
xor
aam
cmp
lcall
loop
jmp
ss
inc
push
add
subb
lret
inc
inc
sub
cltd
sbb
xchg
loop,pt
sub
pop
xlat
insl
xor
xchg
in
xor
cmc
jmp
shl
adc
addb
or
xor
push
mov
leave
lret
insl
aas
pop
fs
pop
jge
cli
mov
push
jnp
xchg
xacquire
xchg
rolb
js
sbb
push
jae
daa
xchg
aas
push
mov
add
pop
aaa
fdivrl
insb
mov
cmp
jnp
adc
sbbb
push
fwait
add
sar
rcrl
mov
insl
xchg
push
mov
pop
lret
mov
lahf
mov
cmp
lahf
dec
mov
mov
mov
mov
xchg
push
dec
ja
fdivrs
inc
mov
shlb
fsub
stc
jge
and
jge
xor
and
and
jo
adc
add
mov
ret
jb
lcall
nop
clc
shrb
mov
int
sbb
andb
pop
jp
sbb
mov
sub
add
mov
push
insl
mov
mov
pop
ja
sub
inc
icebp
and
imul
push
pop
mov
ds
mov
fcmovu
mov
inc
sbb
pusha
outsl
add
decb
stos
cltd
ds
jbe
cmc
and
push
jbe
sbbl
pushf
call
in
dec
xor
cmp
std
push
xchg
adc
insl
xor
pusha
popf
mov
jae
push
fdivp
test
xor
mov
mov
push
mov
inc
adc
lea
mov
test
sbb
or
scas
inc
jmp
std
mov
iret
cmpsb
jne
jo
inc
mov
fcoml
adc
roll
cmp
in
xor
xor
in
test
sahf
jo
xchg
out
pop
pop
in
xor
jmp
or
loop
cmp
ret
jg
xor
cwtl
loopne
lods
fildll
dec
enter
les
dec
pop
lea
mulb
loopne
pop
inc
mov
lahf
faddl
xchg
mov
fistpll
push
in
jbe
xor
ljmp
xchg
sbb
outsl
mov
jb
cli
xor
js
fldl
cmp
inc
out
fldl
sbb
ror
mov
imul
adc
into
jmp
xor
movsb
xor
xchg
sub
repz
mov
andl
jl
dec
mov
sub
mov
loopne
insb
add
jg
cmp
mov
pop
inc
jbe
sub
out
sbb
xchg
mov
inc
aad
mov
mov
sub
cmp
pop
push
and
and
lret
xchg
iret
add
add
jb
out
stos
mov
dec
mov
add
lcall
push
stc
sahf
dec
inc
mov
scas
mov
sub
inc
and
xchg
add
jbe
mov
jecxz
leave
cmpsb
jno
mov
std
ret
sub
mov
repnz
leave
out
movsb
mov
fldcw
or
pusha
adc
leave
aad
ja
mov
mov
mov
pop
mov
sub
jge
imul
mov
xchg
mov
inc
lock
int3
fdivr
aas
fmul
mov
popa
loopne
or
adc
xchg
and
fnstcw
inc
and
push
inc
sub
cmp
in
mov
repz
mov
mov
sbb
leave
add
pop
xor
outsb
fistpll
push
test
inc
inc
cmp
movsb
movsl
xor
mov
loope
fwait
test
shr
inc
adc
cmpsl
xor
std
rcrl
call
push
xchg
mov
xchg
mov
rorl
fwait
outsl
icebp
in
cs
lds
lcall
xor
je
pop
pop
mov
add
loopne
pusha
outsb
lahf
cmp
in
pusha
push
lods
mov
or
mov
xchg
xlat
arpl
inc
dec
jae
and
and
lods
inc
xchg
add
add
cs
mov
jmp
repz
mov
sbb
pop
in
push
or
inc
int3
pop
ffreep
push
mov
pop
fstps
xor
orb
dec
rcl
shll
decb
jle
sub
inc
outsb
mov
mov
aam
fwait
dec
jecxz
movsb
icebp
adc
jecxz
ljmp
jne
pop
xor
adc
ficomps
inc
js
or
pusha
xchg
add
jbe
push
adc
rclb
fstl
mov
fcompl
sub
xchg
jb
test
rol
pop
adc
shr
jnp
pop
popf
xor
sbb
in
push
push
inc
mov
push
gs
xorb
sub
rorb
imul
rorl
in
loop
adc
sub
pop
pop
fiaddl
loopne
nop
pusha
mov
or
loopne
sbbb
pusha
and
mov
into
das
mov
add
cmp
shld
movsb
dec
xchg
cmp
sub
icebp
jmp
es
add
mov
add
test
cmp
sbb
mov
cltd
mov
cmp
mov
jbe
and
pop
add
pusha
mov
pop
sahf
dec
js
xorb
add
dec
fldcw
xchg
mov
mov
fs
push
lret
cs
jp
aas
in
aam
ja
mov
mov
mov
movsl
cmpsl
pop
cwtl
fsubs
mov
hlt
and
out
movsb
cmp
sub
insb
xor
cmc
jmp
es
pop
cmp
cmpsl
aaa
arpl
sub
push
or
imul
test
decl
pusha
sarl
imul
sub
jl
pop
je
insl
jmp
adc
xor
lret
add
fistl
jne
ljmp
xchg
mov
data16
push
cmp
adc
ljmp
mov
push
adc
dec
inc
sub
test
pusha
mov
xor
arpl
fcompl
inc
das
and
xchg
sub
pop
loopne
hlt
inc
lea
jae
and
jne
mov
and
lods
push
mov
pop
pop
rcll
sbb
inc
icebp
icebp
adc
loopne
jb
pop
arpl
pusha
and
mov
inc
cld
fdiv
test
lcall
cwtl
dec
orb
sbb
aas
movsl
jo
mov
mov
movsb
sti
dec
ret
xor
fists
push
ret
xchg
jmp
dec
imul
sbb
add
cwtl
fs
adc
jnp
es
repz
or
inc
out
inc
outsb
mov
call
xchg
push
cmpb
pusha
add
cmp
jne
cmp
and
scas
movsl
adc
aas
pop
pop
inc
sbb
rolb
push
mov
cli
pusha
sub
out
xlat
mov
out
loopne
jmp
and
dec
push
lods
loopne
inc
in
and
ret
dec
or
add
leave
adc
fcmovnbe
cli
xor
push
xchg
lods
mov
ss
sbb
mov
iret
mov
mov
push
dec
and
and
pop
jo
pop
push
jae
je
jae
mov
das
or
aaa
adc
push
xorb
xchg
and
jle
xchg
idivl
popf
cltd
xorl
dec
jne
add
pusha
in
jb
or
mov
xor
fstpt
lock
jae
lea
dec
mov
pop
inc
call
cmp
push
icebp
stc
sub
stc
jp
stos
xlat
adc
dec
ss
adc
stos
jl
push
roll
and
jge
fsincos
xor
inc
es
pop
push
xchg
mov
lods
dec
ja
pop
inc
int
sahf
aas
mov
loop
add
inc
adc
mov
stos
gs
scas
iret
es
pusha
inc
std
ljmp
push
cmp
icebp
movsl
movsl
movsl
sub
adcb
dec
push
out
popf
pop
mov
pop
in
loope
lea
inc
mov
subb
lahf
jne
fstp
lret
dec
cmp
mov
inc
hlt
inc
movsl
sbb
sbb
xchg
adc
push
pop
pusha
pop
frstor
xchg
sub
loopne
or
add
test
mov
fldt
repnz
inc
or
or
add
cmp
jns
sbb
fsubr
andnps
and
loop
xor
mov
lahf
aaa
xor
in
stc
mov
sbb
rorb
mov
call
mov
sub
nop
push
inc
fcoml
ss
push
mov
lahf
xor
ss
pop
jp
mov
xor
lret
and
lods
stos
push
xor
jmp
enter
lods
dec
pusha
adc
loopne
loopne
cltd
or
cmpsl
out
xlat
cmpsl
inc
sub
mov
mov
or
cltd
popf
push
das
in
scas
je
fwait
xchg
push
clc
nop
nop
nop
nop
jae
add
add
into
add
add
jl
sbb
nop
nop
nop
nop
jae
into
xlat
pop
je
dec
mov
jnp
push
nop
push
mov
leave
cs
add
inc
add
jnp
jl
add
and
nop
nop
nop
nop
jae
add
sub
cmp
mov
leave
cs
add
add
add
cmp
loopne
push
mov
leave
cs
fiadds
jle
roll
pop
add
push
push
mov
xchg
ret
jl
mov
in
into
add
add
add
push
mov
add
mov
add
xchg
push
add
loop
xor
fmull
notl
clc
nop
nop
nop
nop
jae
add
lods
dec
add
pop
jl
mov
clc
nop
nop
nop
nop
jae
into
or
push
add
jl
sbb
mov
leave
cs
js
and
scas
add
mov
add
push
clc
nop
nop
nop
nop
jae
sub
fiadds
add
add
xchg
clc
nop
nop
nop
nop
jae
add
add
roll
rolb
add
add
clc
nop
nop
nop
nop
jae
dec
mov
mov
add
add
push
cli
push
and
addl
or
add
rorb
xor
add
xchg
push
mov
xchg
ret
or
add
jle
sbb
push
clc
nop
nop
nop
nop
jae
js
add
xlat
into
into
cmp
add
nop
nop
jae
mov
outsb
rolb
add
add
in
pusha
test
nop
nop
nop
nop
jae
add
jbe
add
add
push
je
inc
add
in
add
add
ret
aam
fistps
push
mov
leave
cs
mov
push
or
jbe
adc
add
in
jo
mov
push
mov
xchg
ret
mov
add
add
andl
enter
in
leave
cs
lods
scas
or
jle
add
push
mov
mov
push
add
add
dec
ficoms
add
nop
push
mov
leave
cs
fs
cwtl
add
into
into
add
jl
js
int
mov
add
push
add
add
data16
add
cmpsl
pop
add
nop
inc
mov
nop
nop
nop
jae
add
add
sub
pop
nop
push
mov
leave
cs
lods
add
add
mov
xor
clc
nop
nop
nop
nop
jae
fimuls
rolb
add
or
and
pop
clc
nop
nop
nop
nop
jae
and
add
add
jbe,pn
add
clc
nop
nop
nop
nop
jae
add
add
rolb
add
cs
inc
add
into
add
add
add
adc
nop
nop
nop
nop
jae
cwtl
outsb
es
add
pushl
push
mov
xchg
ret
or
add
jl
jbe
add
pushf
mov
nop
nop
nop
nop
jae
jecxz
add
inc
roll
cld
lahf
fistpl
clc
nop
nop
nop
nop
jae
add
lods
fs
in
cmpl
mov
xchg
ret
add
add
test
or
mov
mov
outsl
push
clc
nop
nop
nop
nop
jae
cmp
dec
add
mov
insb
xor
pop
fcoml
add
clc
nop
nop
nop
nop
jae
adc
jle
jnp
into
add
add
mov
leave
cs
in
mov
mov
insb
imull
clc
nop
nop
nop
nop
jae
add
add
test
mov
aam
jb
push
mov
inc
outsb
add
add
add
addb
ds
jne
clc
nop
nop
nop
nop
jae
aad
add
into
je
mov
loopne
stos
es
fidivs
nop
nop
nop
nop
jae
fimuls
hlt
mov
std
pop
mov
lahf
sub
clc
nop
nop
nop
nop
jae
mov
dec
add
add
push
mov
xor
add
add
icebp
in
add
dec
jb
adc
loopne
add
clc
nop
nop
nop
nop
jae
adc
mov
push
mov
xor
nop
nop
jae
fistps
add
fiadds
dec
jns
scas
enter
nop
nop
jae
add
add
cmp
addl
cs
jnp
add
pop
pop
add
pop
nop
push
mov
leave
cs
pop
jecxz
jl
add
add
cli
clc
nop
nop
nop
nop
jae
aad
xor
addl
je
clc
nop
nop
nop
nop
jae
add
pop
enter
clc
nop
nop
nop
nop
jae
es
mov
lods
or
iret
test
push
mov
xchg
ret
fistpll
inc
lods
adc
add
pushf
loopne
addl
jmp
outsb
mov
or
fdivp
cs
ret
mov
push
mov
xchg
ret
lods
cwtl
roll
xlat
mov
into
jno
mov
add
in
add
add
add
mov
mov
push
fistpl
clc
nop
nop
nop
nop
jae
add
pop
add
sbb
test
call
cs
add
add
add
jl
mov
nop
push
mov
leave
cs
xor
add
add
mov
dec
push
jmp
add
ds
or
mov
fistpll
nop
nop
nop
nop
jae
jbe
into
aad
pop
cmp
add
mov
push
mov
xchg
ret
add
and
rolb
add
jno
add
nop
nop
nop
nop
jae
add
in
add
cmpsl
mov
nop
push
mov
leave
cs
add
dec
add
aad
inc
gs
clc
nop
nop
nop
nop
jae
add
cwtl
roll
add
add
pop
inc
add
jnp
add
add
add
add
shl
adc
pop
adc
add
mov
pop
add
std
sbb
ficomps
test
movsb
push
mov
xchg
ret
add
push
pop
scas
rorb
jle
mov
push
push
mov
xchg
ret
add
add
into
add
jbe
daa
shr
clc
nop
nop
nop
nop
jae
scas
test
cmp
cli
add
je
clc
nop
nop
nop
nop
jae
add
rclb
add
clc
nop
nop
nop
nop
jae
hlt
mov
jle
add
inc
shl
add
arpl
clc
nop
nop
nop
nop
jae
add
and
add
mov
push
mov
xchg
ret
pop
cli
es
pop
sub
add
push
push
push
mov
std
xorb
add
jns
add
add
sub
add
mov
and
sbb
push
mov
cmp
add
xchg
add
xchg
cld
push
add
add
or
pop
push
clc
nop
nop
nop
nop
jae
mov
add
and
into
hlt
cmp
nop
nop
nop
jae
addl
scas
jo,pt
add
pushf
and
outsb
push
xchg
add
clc
nop
nop
nop
nop
jae
addl
add
add
xchg
cmpl
nop
push
mov
leave
cs
add
pop
add
mov
nop
push
mov
leave
cs
inc
dec
add
hlt
jnp
sub
pop
clc
nop
nop
nop
nop
jae
mov
mov
cmp
push
out
push
mov
xchg
ret
add
outsb
add
scas
add
add
dec
jnp
pusha
clc
nop
nop
nop
nop
jae
pop
mov
mov
roll
inc
and
push
mov
leave
cs
add
std
add
jl
movsb
pusha
scas
mov
clc
nop
nop
nop
nop
jae
add
je
jmp
jae
add
test
add
add
jbe
and
es
cmpw
clc
nop
nop
nop
nop
jae
into
add
addl
add
clc
nop
nop
nop
nop
jae
test
mov
sub
add
stc
clc
nop
nop
nop
nop
jae
cwtl
into
adc
test
filds
mov
clc
nop
nop
nop
nop
jae
lods
add
add
or
nop
nop
nop
nop
jae
cmpl
or
add
into
add
lods
jo
mov
push
mov
xchg
ret
jl
dec
add
aad
xchg
clc
nop
nop
nop
nop
jae
xlat
dec
add
mov
lods
add
outsb
add
jmp
add
add
add
sub
jl
mov
add
cld
out
mov
clc
nop
nop
nop
nop
jae
orl
adc
pop
add
test
push
pop
je
clc
nop
nop
nop
nop
jae
add
cmpl
inc
clc
nop
nop
nop
nop
jae
pop
inc
jecxz
mov
lcall
bound
xchg
ret
roll
add
add
js
inc
push
test
ret
rorl
mov
xchg
ret
addl
cmp
cmp
push
fildll
je
push
clc
nop
nop
nop
nop
jae
add
add
add
add
jo
test
mov
incl
jbe
into
pop
add
je
lods
add
out
mov
clc
nop
nop
nop
nop
jae
add
mov
lods
add
lcall
add
cmp
add
addl
lret
pusha
push
mov
xchg
ret
add
roll
add
nop
nop
nop
nop
jae
pop
add
xlat
add
test
add
jp
jp
add
nop
push
mov
leave
cs
pop
adcl
add
into
add
and
mov
xchg
ret
or
and
shll
push
mov
xchg
ret
add
sub
rolb
pop
js
adc
push
lds
nop
nop
nop
nop
jae
or
sbbl
pop
add
add
clc
nop
nop
nop
nop
jae
add
add
addl
adc
pusha
test
jbe
add
add
cmp
add
add
out
clc
nop
nop
nop
nop
jae
add
dec
add
add
cli
push
loop
push
push
mov
xchg
ret
pop
push
add
pop
xlat
dec
mov
test
nop
push
mov
leave
cs
mov
add
add
adcl
xchg
nop
nop
nop
nop
jae
add
add
add
add
call
clc
nop
nop
nop
nop
jae
add
lods
into
add
into
rorl
mov
fwait
fwait
nop
push
mov
leave
cs
add
add
cs
jnp
shlb
or
test
add
clc
nop
nop
nop
nop
jae
add
cli
add
pop
add
cmpl
add
nop
push
mov
leave
cs
add
add
and
xchg
xchg
ret
add
add
scas
add
push
mov
leave
cs
je
lods
add
add
add
clc
nop
nop
nop
nop
jae
je
add
mov
dec
add
clc
nop
nop
nop
nop
jae
test
add
pop
in
add
jbe
orl
sbbl
add
mov
adc
adc
inc
lcall
clc
nop
nop
nop
nop
jae
roll
mov
in
add
dec
and
cmp
inc
xchg
flds
add
popa
popl
aam
add
in
add
ret
add
push
mov
xchg
ret
in
add
into
scas
mov
dec
rep
clc
nop
nop
nop
nop
jae
add
inc
add
add
into
add
fsubl
mov
clc
nop
nop
nop
nop
jae
add
hlt
add
fiadds
sbb
inc
mov
insb
add
clc
nop
nop
nop
nop
jae
hlt
or
add
push
and
into
add
add
sti
mov
clc
nop
nop
nop
nop
jae
add
shrl
into
xor
xchg
mov
push
mov
xchg
ret
add
mov
test
mov
clc
nop
nop
nop
nop
jae
adc
jbe
add
mov
jne
jge
insl
cltd
cwtl
inc
sbb
jmp
add
pop
cmp
test
jg
roll
mov
xchg
ret
add
test
xlat
add
popf
mov
clc
nop
nop
nop
nop
jae
into
or
mov
add
or
add
sar
push
sub
mov
or
ret
roll
add
mov
add
repz
nop
push
mov
leave
cs
add
cs
pop
add
fistpl
push
mov
xchg
ret
sub
jbe
mov
add
xor
clc
nop
nop
nop
nop
jae
filds
add
outsb
jecxz
test
loop
clc
nop
nop
nop
nop
jae
xor
jle
add
add
shll
and
int3
bound
xchg
ret
jbe
add
orl
add
ds
je
js
or
nop
nop
nop
jae
push
jecxz
andl
adc
subl
mov
add
add
out
negb
add
add
sub
ret
nop
push
mov
leave
cs
sub
dec
cs
add
add
add
shrb
push
push
mov
xchg
ret
add
outsb
jl
push
add
add
into
scas
sub
nop
nop
nop
jae
es
test
into
add
add
sti
add
push
mov
xchg
ret
jnp
add
fisttps
cwtl
add
mov
add
test
xchg
in
and
inc
in
add
lods
sti
imul
mov
add
clc
nop
nop
nop
nop
jae
add
xor
clc
nop
nop
nop
nop
jae
pop
addl
add
or
div
clc
nop
nop
nop
nop
jae
pop
jl
add
add
jnp
add
scas
xor
push
mov
xchg
ret
add
or
sub
pop
jbe
add
jp
jmp
add
add
add
add
add
lea
clc
nop
nop
nop
nop
jae
rorl
jo
add
popa
fld1
clc
nop
nop
nop
nop
jae
jecxz
mov
jo
mov
scas
dec
nop
push
mov
leave
cs
jnp
in
add
add
test
mov
arpl
add
nop
nop
nop
nop
jae
add
add
adc
cs
add
add
filds
add
stos
push
mov
xchg
ret
add
pop
outsb
add
mov
adc
add
cs
add
add
add
jnp
fwait
push
mov
xchg
ret
jo
add
add
mov
clc
nop
nop
nop
nop
jae
pop
je
add
test
add
xor
aaa
jne
clc
nop
nop
nop
nop
jae
add
popa
xor
clc
nop
nop
nop
nop
jae
std
add
add
add
sub
fsubl
push
push
mov
xchg
ret
into
pop
add
or
pop
add
push
clc
nop
nop
nop
nop
jae
subl
add
inc
add
add
orl
in
leave
cs
mov
into
add
lods
filds
add
cmp
call
nop
nop
jae
add
add
or
mov
test
lcall
ret
rolb
test
xlat
add
and
add
add
push
sbb
push
stc
insb
push
lahf
add
mov
push
mov
leave
cs
add
inc
add
push
mov
daa
ret
xchg
add
add
add
lahf
add
repnz
add
xor
push
mov
xchg
ret
mov
jbe
add
add
and
movsb
clc
nop
nop
nop
nop
jae
add
add
add
hlt
shl
ljmp
dec
dec
add
roll
add
pop
js
in
addl
add
and
nop
nop
nop
nop
jae
or
add
add
add
inc
pop
add
push
mov
xchg
ret
mov
add
ds
jl
add
es
shr
nop
push
mov
leave
cs
je
add
lods
mov
add
inc
xor
sbb
push
mov
xchg
ret
cwtl
cmp
shlb
jl
jg
clc
nop
nop
nop
nop
jae
add
into
add
add
test
add
jecxz
jbe
clc
nop
nop
nop
nop
jae
add
add
adc
mov
or
ret
add
add
add
hlt
mov
add
clc
nop
nop
nop
nop
jae
into
scas
add
add
cli
scas
add
inc
test
inc
popa
fistpl
nop
push
mov
leave
cs
or
jl
add
js
into
fildll
rclb
mov
xchg
ret
fimuls
je
add
add
sbbl
jae
xor
ds
cli
mov
add
clc
nop
nop
nop
nop
jae
add
add
hlt
fimuls
ficomps
repz
mov
xchg
ret
add
add
jecxz
dec
add
add
push
jb
sbb
adc
jg
clc
nop
nop
nop
nop
jae
add
xor
cwtl
inc
aaa
mov
push
mov
xchg
ret
add
add
and
scas
add
or
mov
clc
nop
nop
nop
nop
jae
rolb
cwtl
cwtl
jecxz
rolb
ret
movzwl
clc
nop
nop
nop
nop
jae
add
add
pop
add
inc
and
clc
nop
nop
nop
nop
jae
add
jecxz
mov
dec
add
lret
xor
add
jmp
pop
std
add
adc
idivb
jmp
test
scas
add
scas
add
add
add
sub
cmc
clc
nop
nop
nop
nop
jae
add
add
push
clc
nop
nop
nop
nop
jae
dec
cli
add
pop
jnp
and
push
mov
xchg
ret
xor
xlat
test
lods
scas
add
and
push
mov
xchg
ret
inc
fidivs
addl
int3
repnz
pop
nop
push
mov
leave
cs
jecxz
add
add
add
add
add
push
clc
nop
nop
nop
nop
jae
cli
or
lods
pop
or
jo
call
nop
push
mov
leave
cs
add
add
pusha
pop
sbb
shrb
jb
pop
add
and
in
leave
cs
roll
sbb
cli
add
mov
into
jle
subl
clc
nop
nop
nop
nop
jae
add
into
sub
add
mov
dec
add
nop
push
mov
leave
cs
add
hlt
dec
cli
add
push
or
nop
inc
ja
add
add
leave
cs
or
add
scas
pop
rcll
rcrb
nop
nop
nop
nop
jae
mov
scas
cwtl
add
loopne
xor
clc
nop
nop
nop
nop
jae
add
add
add
imulb
cmp
add
push
mov
xchg
ret
mov
lods
sub
sub
add
add
lcall
cmpsl
add
add
add
icebp
add
mov
push
nop
push
mov
leave
cs
add
into
add
cwtl
subl
nop
nop
jae
add
add
xor
pop
jnp
add
cmp
mov
xchg
ret
scas
pop
rcl
test
mov
mov
call
push
mov
xchg
ret
add
and
addl
lods
add
lret
clc
nop
nop
nop
nop
jae
mov
into
fdivrp
outsb
add
std
lock
pop
clc
nop
nop
nop
nop
jae
cmp
scas
or
add
xchg
clc
nop
nop
nop
nop
jae
or
cs
add
hlt
rcrl
mov
mov
leave
cs
dec
lods
add
add
add
fmulp
pop
clc
nop
nop
nop
nop
jae
filds
xlat
add
xlat
xor
je
add
mov
pusha
test
sbb
in
add
cmp
mov
leave
add
mov
xchg
je
clc
nop
nop
nop
nop
jae
add
sarb
sbb
mov
xchg
ret
js
test
xor
into
mov
sbb
add
add
mov
and
xor
std
mov
dec
into
add
clc
nop
nop
nop
nop
jae
adc
add
mov
hlt
orl
push
mov
add
adc
call
lahf
add
std
and
add
mov
clc
nop
nop
nop
nop
jae
add
dec
mov
mov
js
call
clc
nop
nop
nop
nop
jae
je
cli
add
cld
lods
pop
push
mov
xchg
ret
std
add
add
cmpl
or
xchg
add
and
fistpl
clc
nop
nop
nop
nop
jae
std
jecxz
add
add
add
sbb
incl
pop
add
add
add
add
or
cmp
mov
clc
nop
nop
nop
nop
jae
or
scas
add
ljmp
ss
inc
add
add
add
add
add
push
nop
push
mov
leave
cs
and
add
add
add
mov
push
mov
xchg
ret
mov
jnp
dec
mov
roll
add
add
and
cmp
dec
sub
add
nop
nop
nop
nop
jae
xlat
add
std
sub
jg
add
adc
xor
add
mov
les
nop
push
mov
leave
cs
or
pop
add
mov
xlat
fistpl
push
mov
xchg
ret
add
add
jbe
inc
add
jo
aaa
fistpl
clc
nop
nop
nop
nop
jae
add
add
test
push
add
clc
nop
nop
nop
nop
jae
add
add
add
mov
add
dec
add
test
push
and
add
std
add
lcall
rclb
cs
rolb
add
je
mov
nop
nop
nop
nop
jae
add
hlt
jecxz
add
cwtl
or
add
add
add
adc
std
add
aad
add
xlat
rolb
add
inc
fiaddl
fistl
frstor
add
pop
lods
add
add
adc
hlt
roll
mov
shlb
add
in
add
dec
nop
pop
loopne
mov
xchg
and
pushf
js
add
add
add
mov
add
xlat
add
add
fld1
push
mov
xchg
ret
add
add
add
add
add
adcb
addl
cmp
nop
nop
nop
nop
jae
add
add
sbb
cli
add
pushl
nop
push
mov
leave
cs
mov
add
add
clc
nop
nop
nop
nop
jae
add
add
roll
add
mov
mov
sar
nop
nop
nop
jae
and
addl
or
jle
jb
nop
push
mov
leave
cs
add
add
add
mov
clc
nop
nop
nop
nop
jae
cmp
jo
add
add
add
fwait
push
inc
add
pop
xor
hlt
and
or
pop
pusha
push
mov
xchg
ret
add
into
filds
jnp
addl
or
jl
sbb
mov
clc
nop
nop
nop
nop
jae
add
add
cmp
jbe
add
cmp
inc
add
scas
add
dec
pop
sbb
add
sbbl
push
nop
push
mov
leave
cs
dec
dec
xor
or
pop
rcll
nop
nop
nop
jae
jle
mov
mov
add
adc
nop
nop
jae
add
sbb
add
jbe
ds
cld
nop
push
mov
leave
cs
in
add
add
add
inc
push
mov
xchg
ret
add
xlat
jnp
jo
je
add
add
push
clc
nop
nop
nop
nop
jae
jl
outsb
or
add
cmp
nop
nop
nop
jae
add
subl
mov
add
nop
nop
jae
add
sarl
add
or
cs
lods
sub
inc
add
mov
dec
or
rcrl
outsb
add
add
push
mov
leave
cs
add
inc
jbe
add
add
add
into
bound
push
movsb
fadd
pop
push
mov
xchg
ret
fiadds
add
add
adc
js
scas
add
jb
dec
aam
push
nop
push
mov
leave
cs
jle
xor
scas
std
ds
in
in
shr
clc
nop
nop
nop
nop
jae
cli
add
into
add
neg
pop
clc
nop
nop
nop
nop
jae
add
jbe
add
cmp
into
lods
std
jo
add
clc
nop
nop
nop
nop
jae
add
pop
add
add
ds
push
mov
add
dec
add
cmc
add
in
add
jne
and
add
bound
xor
fld1
push
mov
xchg
ret
mov
cmp
or
mov
in
add
pop
jecxz
add
add
mov
scas
add
cmpsb
add
scas
cmp
pop
sti
jmp
add
jl
add
orl
pop
sarl
nop
nop
jae
add
test
add
pop
dec
add
ret
nop
push
mov
leave
cs
xor
add
in
jbe
and
add
clc
nop
nop
nop
nop
jae
or
cmp
or
in
add
and
pop
dec
lea
add
add
add
add
dec
nop
push
mov
leave
cs
push
sub
add
add
std
add
cwtl
data16
xchg
shl
clc
nop
nop
nop
nop
jae
jnp
xlat
addl
add
je
nop
push
mov
leave
cs
add
cwtl
jecxz
xchg
push
mov
and
push
mov
xchg
ret
cwtl
add
add
fdivp
adc
add
mov
cmpl
nop
push
mov
leave
cs
dec
add
sub
add
iret
repnz
clc
nop
nop
nop
nop
jae
add
jbe
mov
mov
xchg
ret
add
pop
jl
xorl
ds
movsl
pop
push
mov
xchg
ret
and
orl
add
add
lods
add
lea
je
sub
nop
nop
nop
nop
jae
add
addl
add
nop
nop
nop
nop
jae
pop
dec
add
roll
jle
fsubs
mov
xchg
lock
jmp
mov
push
pop
add
mov
push
and
add
nop
nop
nop
nop
jae
mov
xor
add
push
push
mov
xchg
ret
in
add
lods
add
test
pop
mov
pop
add
push
mov
xchg
ret
into
into
lods
add
ficomps
fistpl
clc
nop
nop
nop
nop
jae
xor
xlat
add
mov
into
mov
clc
nop
nop
nop
nop
jae
jecxz
add
add
jp
mov
mov
clc
nop
nop
nop
nop
jae
add
pop
pop
or
add
sub
add
mov
add
popl
cmpsl
mov
xor
nop
push
mov
leave
cs
into
orl
hlt
scas
cwtl
into
lods
mov
mov
nop
nop
nop
jae
mov
je
add
add
clc
nop
nop
nop
nop
jae
or
js
add
add
add
outsl
xchg
clc
nop
nop
nop
nop
jae
jbe
mov
filds
add
ficompl
mov
nop
nop
nop
nop
jae
add
je
add
add
cmp
gs
clc
nop
nop
nop
nop
jae
rolb
add
add
sbb
pusha
iret
mov
clc
nop
nop
nop
nop
jae
filds
add
mov
add
add
add
add
nop
nop
nop
nop
jae
jo
cmp
push
or
add
clc
nop
nop
nop
nop
jae
hlt
add
xlat
xlat
addl
add
into
es
xchg
enter
test
nop
push
mov
leave
cs
addl
rorb
into
add
nop
nop
nop
jae
dec
sub
pop
mov
add
add
mov
sbb
inc
add
add
addl
jbe
lods
pop
jne
leave
nop
push
mov
leave
cs
hlt
es
add
jl
add
add
mov
clc
nop
nop
nop
nop
jae
add
rolb
roll
add
add
and
call
clc
nop
nop
nop
nop
jae
mov
dec
add
cwtl
orl
nop
jae
add
add
add
mov
cmp
mov
nop
push
mov
leave
cs
aad
add
es
jmp
addl
or
ret
add
add
add
clc
nop
nop
nop
nop
jae
sbb
lods
mov
fiadds
in
push
in
add
nop
push
mov
leave
cs
add
add
add
scas
add
pop
cli
nop
mov
mov
clc
nop
nop
nop
nop
jae
lods
add
rolb
loopne
and
nop
push
mov
leave
cs
jle
add
and
addr16
add
add
add
add
add
add
fisttpll
out
outsb
inc
add
add
add
add
into
sbb
scas
gs
clc
nop
nop
nop
nop
jae
or
rorb
add
add
movsl
add
clc
nop
nop
nop
nop
jae
addl
jnp
jnp
cwtl
add
inc
add
add
out
add
add
mov
mov
mov
nop
nop
nop
nop
jae
add
addl
sbb
cmp
nop
nop
nop
nop
jae
add
mov
add
add
add
dec
mov
push
mov
leave
cs
mov
jo
pop
hlt
add
ljmp
nop
nop
jae
add
into
outsb
cwtl
xor
add
or
ficoms
jbe
clc
nop
nop
nop
nop
jae
add
add
add
sub
jo
add
clc
nop
nop
nop
nop
jae
mov
pop
add
aas
pop
clc
nop
nop
nop
nop
jae
add
add
add
add
clc
nop
push
mov
leave
cs
pop
add
add
cwtl
xlat
sub
js
add
clc
nop
nop
nop
nop
jae
mov
add
lock
jecxz,pn
inc
lock
mov
xchg
ret
add
add
cwtl
jbe
add
clc
nop
nop
nop
nop
jae
push
sub
add
add
add
call
clc
nop
nop
nop
nop
jae
lods
lods
addl
add
add
pop
clc
nop
nop
nop
nop
jae
in
jbe
lods
lods
hlt
mov
add
inc
mov
nop
nop
nop
jae
add
add
test
inc
test
add
pop
or
add
cs
add
or
add
lret
mov
clc
nop
nop
nop
nop
jae
dec
and
add
js
add
add
inc
pop
je
clc
nop
nop
nop
nop
jae
add
add
mov
sub
nop
nop
jae
fs
jl
or
dec
ds
scas
movzwl
push
mov
xchg
ret
pop
mov
add
mov
sub
add
nop
nop
jae
xor
add
pop
dec
add
and
xor
nop
push
mov
leave
cs
add
mov
mov
sbb
add
loop
xchg
incl
clc
add
rol
cmp
mov
shr
clc
nop
nop
nop
nop
jae
add
add
lods
add
add
nop
push
mov
leave
cs
add
jl
jle
outsb
add
rclb
mov
pop
inc
add
cmpl
add
add
fisttps
mov
leave
cs
add
add
pop
add
mov
and
push
push
mov
xchg
ret
hlt
roll
add
add
add
testb
clc
nop
nop
nop
nop
jae
add
add
add
adc
iret
push
inc
add
dec
sbb
addl
mov
or
inc
in
nop
push
mov
leave
cs
add
in
add
add
cmp
sbb
nop
nop
nop
jae
mov
add
fidivl
clc
nop
nop
nop
nop
jae
xor
add
jo
adc
add
push
mov
xchg
ret
add
add
std
lcall
nop
push
mov
leave
cs
test
sub
into
fdivp
addl
mov
xchg
ret
mov
pop
scas
test
xor
add
fisubrs
clc
nop
nop
nop
nop
jae
add
shl
adc
sbb
add
add
mov
xchg
ret
add
add
es
lods
xor
add
ja
add
add
add
adc
mov
lods
cmp
clc
nop
nop
nop
nop
jae
add
mov
xchg
push
clc
nop
nop
nop
nop
jae
add
push
add
or
mov
dec
cmp
push
mov
leave
cs
add
add
scas
add
mov
nop
push
mov
leave
cs
add
in
add
push
add
sub
inc
rep
clc
nop
nop
nop
nop
jae
mov
add
pop
stos
clc
nop
nop
nop
nop
jae
scas
add
add
mov
add
mov
jg
clc
nop
nop
nop
nop
jae
add
add
rolb
add
cwtl
insb
xlat
fld1
push
mov
xchg
ret
lods
add
add
pop
jbe
add
nop
push
mov
leave
cs
add
add
rolb
mov
or
push
pop
test
push
mov
xchg
ret
cwtl
je
add
add
mov
add
clc
nop
nop
nop
nop
jae
js
jecxz
add
pop
js
in
pop
clc
nop
nop
nop
nop
jae
add
add
add
aad
add
clc
nop
nop
nop
nop
jae
into
into
add
jo
add
add
out
inc
stc
incl
into
jecxz
add
roll
sub
add
sbb
add
xor
adc
nop
nop
nop
nop
jae
add
into
lods
mov
or
fs
pusha
mov
lods
push
mov
xchg
ret
jle
pop
add
and
add
cmc
add
clc
nop
nop
nop
nop
jae
add
xor
sub
cwtl
ds
xor
push
mov
xchg
ret
jo
jecxz
add
cs
mov
shll
nop
nop
nop
nop
jae
add
cwtl
add
hlt
jnp
add
add
je
push
mov
inc
into
jb
jg
add
in
add
add
add
add
cwtl
lcall
add
add
push
mov
xchg
ret
je
add
fs
mov
nop
nop
nop
nop
jae
add
add
mov
sti
nop
push
mov
leave
cs
add
mov
ds
into
int
popa
nop
push
mov
leave
cs
mov
jle
add
cli
add
sbbl
jae
add
add
xor
add
dec
stos
adc
sbb
nop
jae
add
and
add
push
inc
outsb
mov
fistpl
push
mov
xchg
ret
hlt
aad
add
jl
add
dec
jecxz
xchg
je
xchg
jmp
add
add
dec
test
add
add
fiadds
adc
cs
or
fld1
push
mov
xchg
ret
outsb
dec
add
filds
add
into
add
pusha
and
push
mov
leave
cs
add
add
roll
pusha
call
nop
nop
nop
nop
jae
into
test
add
addl
xor
scas
clc
nop
nop
nop
nop
jae
add
je
test
add
add
clc
nop
nop
nop
nop
jae
adcl
add
cs
fs
aaa
sub
clc
nop
nop
nop
nop
jae
fs
or
into
add
clc
nop
nop
nop
nop
jae
add
adc
cmp
pop
add
adc
dec
pop
inc
add
or
add
add
add
cmc
push
clc
nop
nop
nop
nop
jae
sbb
lods
pop
sbb
mov
add
pop
clc
nop
nop
nop
nop
jae
add
mov
add
dec
outsl
jne
clc
nop
nop
nop
nop
jae
into
outsb
add
add
mov
leave
cs
test
mov
and
sbbl
push
mov
xchg
ret
mov
test
add
add
add
or
jle
add
add
add
cwtl
hlt
pop
push
je
mov
clc
nop
nop
nop
nop
jae
test
rcrl
je
adc
sbb
pop
loopne
inc
clc
nop
nop
nop
nop
jae
cwtl
add
mov
jnp
std
add
mov
mov
leave
cs
add
add
addl
roll
into
cld
clc
nop
nop
nop
nop
jae
add
add
add
add
or
add
nop
nop
nop
jae
dec
into
add
add
add
add
outsb
sbb
add
mov
jl
add
add
jl
inc
add
add
pop
add
inc
loopne
nop
nop
nop
nop
jae
fs
pop
add
add
aad
lret
clc
nop
nop
nop
nop
jae
add
mov
ds
add
loopne
movsl
push
clc
nop
nop
nop
nop
jae
adc
cli
add
es
js
xor
sbb
nop
nop
nop
nop
jae
add
mov
jl
add
mov
mov
xchg
ret
mov
add
jo
add
cmpsl
mov
push
mov
xchg
ret
add
add
cwtl
add
add
xor
nop
push
mov
leave
cs
mov
std
cmp
xorb
xor
nop
nop
nop
jae
std
add
subl
clc
clc
nop
nop
nop
nop
jae
outsb
add
add
mov
add
mov
cmp
nop
nop
nop
nop
jae
test
pop
push
mov
fs
rolb
outsl
je
clc
nop
nop
nop
nop
jae
add
addl
pop
jle
mov
push
mov
xchg
ret
rcl
aad
add
add
add
pop
xor
mov
clc
nop
nop
nop
nop
jae
push
add
add
test
add
inc
jb
clc
nop
nop
nop
nop
jae
andl
add
jne
clc
nop
nop
nop
nop
jae
add
add
add
add
sahf
xor
mov
mov
das
xor
pop
movsb
lahf
add
add
add
push
or
nop
nop
nop
nop
jae
jo
jnp
lods
rcrb
stos
decl
push
mov
xchg
ret
add
std
add
hlt
je
push
xor
clc
nop
nop
nop
nop
jae
rcrl
add
jnp
push
clc
nop
nop
nop
nop
jae
dec
mov
add
addl
lods
aad
push
xor
push
mov
xchg
ret
add
add
and
add
nop
nop
nop
nop
jae
jbe
add
add
add
sub
nop
push
mov
leave
cs
jle
aad
fists
adcl
nop
jae
add
xlat
adc
adc
scas
push
push
mov
xchg
ret
add
jbe
roll
cwtl
xlat
js
into
aam
mov
clc
nop
nop
nop
nop
jae
add
rcl
jecxz
fs
mov
xchg
ret
add
add
fiadds
add
add
add
in
shlb
xor
push
fwait
add
stos
clc
nop
nop
nop
nop
jae
into
in
pop
or
into
add
push
sahf
xchg
int3
inc
aad
nop
push
mov
leave
cs
add
or
add
add
push
clc
nop
nop
nop
nop
jae
mov
pop
add
pop
add
add
push
mov
leave
cs
xor
add
adc
pop
pop
xor
mov
push
mov
xchg
ret
es
xor
add
mov
subl
clc
nop
nop
nop
nop
jae
add
inc
addl
lods
add
push
push
mov
xchg
ret
add
fidivrs
add
add
in
mov
add
add
add
outsl
xor
repnz
add
mov
xchg
ret
shrb
into
cwtl
jle
into
add
sahf
cmp
mov
nop
push
mov
leave
cs
mov
jbe
add
add
adc
mov
xchg
ret
and
scas
add
shll
add
imul
push
push
clc
nop
nop
nop
nop
jae
add
add
mov
push
mov
xchg
ret
add
add
sub
add
xchg
mov
mov
and
je
sub
clc
nop
nop
nop
nop
jae
adc
in
jbe
or
add
inc
imul
mov
leave
cs
add
pop
add
mov
add
call
add
nop
nop
nop
nop
jae
into
add
pop
jo
mov
clc
nop
nop
nop
nop
jae
add
ds
fdivp
pusha
clc
nop
nop
nop
nop
jae
add
cli
je
es
ret
mov
nop
push
mov
leave
cs
push
into
add
adc
jno
clc
nop
nop
nop
nop
jae
mov
xor
sbb
rcrb
nop
nop
nop
nop
jae
addl
add
add
nop
nop
nop
nop
jae
xlat
sub
add
push
mov
xchg
ret
inc
pop
add
add
add
xchg
nop
nop
nop
nop
jae
jecxz
or
jo
xorl
call
clc
nop
nop
nop
nop
jae
pop
sbb
mov
fiadds
hlt
bound
mov
inc
clc
nop
nop
nop
nop
jae
cwtl
adc
mov
je
add
add
push
mov
leave
cs
pop
je
pop
add
add
add
lods
add
nop
push
mov
leave
cs
in
fimuls
sub
std
add
and
and
push
mov
leave
cs
jnp,pt
adc
mov
add
inc
push
clc
nop
nop
nop
nop
jae
add
add
std
or
lods
cmp
imul
nop
nop
jae
mov
filds
jle
add
call
leave
cs
mov
mov
xor
pop
add
push
clc
nop
nop
nop
nop
jae
lods
mov
add
push
js
jmp
nop
nop
nop
nop
jae
cli
dec
into
test
add
add
pop
fld1
clc
nop
nop
nop
nop
jae
add
je
pop
std
or
fwait
clc
nop
nop
nop
nop
jae
mov
mov
aad
add
inc
jno
push
mov
xchg
ret
add
mov
inc
add
cwtl
pop
pop
mov
jge
nop
push
mov
leave
cs
rcr
and
jnp
add
dec
cmp
rclb
popa
inc
add
add
cmp
add
jmp
mov
nop
nop
jae
add
add
pop
add
add
clc
nop
nop
nop
nop
jae
filds
add
lods
xchg
lcall
cs
xor
push
sub
lods
adc
add
or
dec
add
add
insb
ret
in
mov
add
nop
push
mov
leave
cs
add
add
add
add
lahf
push
push
mov
xchg
ret
cs
into
add
test
mov
add
push
clc
nop
nop
nop
nop
jae
je
mov
pop
cmp
push
mov
xchg
ret
dec
add
pop
cli
sub
mov
or
ret
aad
add
add
add
cmp
push
mov
leave
cs
add
add
add
sbb
dec
fistpl
push
mov
xchg
ret
pop
add
add
add
add
or
test
add
nop
nop
nop
nop
jae
add
sti
pop
push
mov
xchg
ret
mov
js
add
xor
jnp
add
push
clc
nop
nop
nop
nop
jae
dec
add
add
add
and
js
into
add
add
clc
nop
nop
nop
nop
jae
add
dec
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
call
clc
nop
nop
nop
nop
jae
add
add
push
clc
nop
nop
nop
nop
jae
add
or
fs
sbb
fsubl
daa
jne
nop
push
mov
leave
cs
jecxz
dec
or
test
call
cs
pop
mov
xlat
sub
clc
nop
nop
nop
nop
jae
add
add
mov
add
xor
push
mov
xchg
ret
into
add
dec
jecxz
add
add
add
and
nop
nop
nop
nop
jae
in
jnp
add
pop
or
nop
nop
nop
nop
jae
add
hlt
add
lods
inc
rcr
jecxz
add
nop
nop
jae
or
add
add
mov
in
jne
clc
nop
nop
nop
nop
jae
add
xorl
sbb
fs
jge
add
clc
nop
nop
nop
nop
jae
pop
add
add
xor
clc
nop
nop
nop
nop
jae
add
add
xorl
add
nop
push
mov
leave
cs
subl
add
and
pop
enter
push
mov
xchg
ret
js
add
add
add
cmp
into
sub
add
add
std
add
jno
or
add
jae
sbb
or
test
div
nop
push
mov
leave
cs
add
into
addl
or
add
xor
nop
pop
sub
push
mov
leave
cs
add
add
dec
adcl
nop
nop
nop
nop
jae
xor
cs
add
add
xlat
mov
jne
clc
nop
nop
nop
nop
jae
add
inc
addl
into
sti
push
mov
jle
add
stc
pushl
mov
cs
dec
add
enter
aad
repz
nop
nop
nop
nop
jae
add
lods
mov
xlat
add
into
add
push
inc
test
scas
lea
push
mov
xchg
ret
add
pop
cmp
je
jl
and
nop
push
mov
leave
cs
add
add
pop
sbb
clc
nop
nop
nop
nop
jae
add
lods
dec
into
add
add
or
nop
nop
nop
nop
jae
add
cmpl
mov
std
push
mov
mov
je
add
movsb
idiv
pop
add
inc
dec
add
adc
lret
mov
leave
cs
add
add
orl
add
add
je
dec
xlat
call
clc
nop
nop
nop
nop
jae
dec
in
ds
imul
nop
nop
jae
pop
shll
fidivrs
push
cltd
dec
push
mov
xchg
ret
jnp
into
add
mov
mov
filds
dec
add
sub
add
mov
aad
add
add
shrb
addb
or
ret
add
add
or
add
dec
imul
nop
jae
jbe
into
add
pop
nop
push
mov
leave
cs
add
jbe
add
hlt
and
or
pop
add
clc
nop
nop
nop
nop
jae
add
add
push
mov
leave
cs
add
lods
mov
es
add
xchg
mov
push
mov
xchg
ret
sar
add
jo
add
and
ret
inc
mov
clc
nop
nop
nop
nop
jae
js
add
lods
add
jne
andl
nop
nop
jae
add
pop
inc
mov
mov
push
mov
leave
cs
push
lods
sub
jnp
add
inc
xchg
int3
orl
nop
jae
add
add
adcl
dec
nop
push
mov
leave
cs
add
fbld
add
add
nop
nop
nop
jae
scas
add
add
add
add
sbb
loopne
jecxz
adc
add
clc
nop
nop
nop
nop
jae
add
or
add
fsubp
mov
xchg
cmp
jg
push
mov
xchg
ret
add
outsb
push
jbe
mov
addl
pop
push
mov
xchg
ret
add
add
add
add
fld1
ret
add
nop
nop
nop
nop
jae
jl
add
scas
fcmovu
mov
nop
nop
jae
hlt
jecxz
or
add
jbe
int3
ret
push
clc
nop
nop
nop
nop
jae
jl
pop
add
add
sub
scas
iret
push
push
mov
xchg
ret
lods
add
add
add
add
nop
nop
nop
nop
jae
into
into
add
adc
cli
gs
nop
push
mov
leave
cs
test
or
add
add
and
jne
clc
nop
nop
nop
nop
jae
pop
add
add
add
add
lods
adc
nop
nop
nop
nop
jae
jo
in
add
add
into
js
popa
push
mov
xchg
ret
add
add
xorl
sbb
mov
pop
addb
arpl
lea
add
lods
je
add
add
fld1
push
mov
xchg
ret
addl
jle
sub
add
mov
clc
nop
nop
nop
nop
jae
sub
add
add
fiadds
cli
add
nop
nop
nop
nop
jae
add
lods
add
add
add
jae
and
and
rolb
add
add
add
add
sbb
clc
nop
nop
nop
nop
jae
add
add
cmp
repnz
add
push
mov
xchg
ret
xlat
adc
add
add
mov
leave
cs
jnp
js
shlb
add
pop
mov
push
mov
nop
push
mov
leave
cs
pop
jnp
mov
test
mov
xchg
ret
add
add
cmpsl
inc
clc
nop
nop
nop
nop
jae
and
shll
ds
add
adc
cmp
push
mov
xchg
ret
add
std
add
add
add
clc
nop
nop
nop
nop
jae
add
add
cwtl
mov
add
je
je
nop
push
mov
leave
cs
roll
addl
xchg
and
je
clc
nop
nop
nop
nop
jae
add
dec
jl
xlat
adc
nop
nop
nop
nop
jae
add
mov
aas
ret
clc
nop
nop
nop
nop
jae
add
add
add
add
testl
nop
push
mov
leave
cs
fbstp
add
mov
clc
add
cs
add
adc
dec
add
add
adc
cmpb
mov
xchg
ret
jo
add
add
rolb
add
or
nop
nop
jae
add
rorl
add
add
jle
add
mov
test
cmp
jne
nop
push
mov
leave
cs
scas
pop
jl
jle
add
mov
nop
push
mov
leave
cs
add
jle
add
add
add
aad
inc
fwait
push
mov
xchg
ret
add
sub
xlat
ds
cli
add
add
jo
mov
push
mov
dec
push
outsl
xchg
rcr
mov
inc
push
movb
add
add
cmp
test
jno
add
cs
ds
add
dec
fistpl
clc
nop
nop
nop
nop
jae
test
add
add
adc
lcall
add
fiadds
add
mov
add
add
lret
clc
nop
nop
nop
nop
jae
mov
add
push
nop
push
mov
leave
cs
test
add
hlt
or
add
js
sbb
nop
nop
jae
add
pop
add
push
rolb
dec
add
in
lret
or
daa
add
jbe
arpl
testl
pop
push
push
mov
xchg
ret
jbe
scas
xor
pop
add
add
sub
inc
push
adc
clc
nop
nop
nop
nop
jae
or
add
add
adc
rcr
lahf
mov
nop
push
mov
leave
cs
add
std
stos
push
clc
nop
nop
nop
nop
jae
cmp
into
or
js
add
add
push
pop
push
push
mov
xchg
ret
add
cli
ds
add
add
aaa
nop
push
mov
leave
cs
cmpl
fimuls
add
jne
clc
nop
nop
nop
nop
jae
jecxz
scas
add
add
xor
sar
nop
nop
nop
jae
add
fiadds
inc
sbb
add
add
and
add
nop
push
mov
leave
cs
xor
adc
add
fistpl
push
mov
xchg
ret
js
pop
mov
js
jo
add
mov
xchg
ret
add
add
mov
test
mov
mov
push
mov
leave
cs
add
add
add
add
push
mov
mov
add
add
pop
inc
push
add
add
jp
add
add
add
into
jle
push
clc
nop
nop
nop
nop
jae
jnp
or
add
add
nop
nop
nop
jae
inc
dec
mov
test
jecxz
movsb
inc
xchg
jne
clc
nop
nop
nop
nop
jae
add
dec
mov
mov
nop
nop
nop
nop
jae
add
cwtl
hlt
add
add
nop
nop
nop
nop
jae
xor
scas
add
cmp
add
add
add
nop
push
mov
leave
cs
shrl
add
add
mov
inc
push
movzwl
clc
nop
nop
nop
nop
jae
into
add
add
add
clc
nop
nop
nop
nop
jae
pop
pop
add
jl
cli
orl
add
ret
push
push
mov
xchg
ret
sub
es
add
add
outsb
mov
mov
xchg
ret
fbld
hlt
add
jbe
add
or
add
push
push
mov
xchg
ret
add
lods
add
lods
add
test
push
mov
leave
cs
into
fs
sti
push
push
mov
xchg
ret
add
scas
test
add
add
mov
nop
add
shlb
push
mov
xchg
ret
add
js
adc
xlat
push
add
adc
mov
leave
cs
dec
inc
add
mov
or
xor
dec
shlb
clc
nop
nop
nop
nop
jae
add
pop
into
mov
add
pop
or
nop
nop
nop
nop
jae
adc
and
je
mov
nop
nop
jae
std
jecxz
add
add
rorb
clc
nop
nop
nop
nop
jae
add
add
hlt
add
add
add
nop
nop
nop
nop
jae
add
xor
pop
add
aad
scas
and
add
push
mov
xchg
ret
mov
add
jle
inc
add
add
call
leave
cs
rcr
js
xor
add
and
adc
nop
nop
nop
nop
jae
add
pop
jnp
add
jl
pop
pop
pop
clc
nop
nop
nop
nop
jae
add
xor
xorl
clc
nop
nop
nop
nop
jae
add
jo
xor
pop
test
mov
leave
cs
jbe
addl
add
add
adc
nop
nop
nop
nop
jae
xlat
fimuls
add
add
fwait
push
mov
xchg
ret
or
lods
add
hlt
and
mov
add
push
mov
xchg
ret
aad
addl
add
jo
jl
mov
jne
clc
nop
nop
nop
nop
jae
or
call
jp
nop
push
mov
leave
cs
mov
add
cmpsl
push
clc
nop
nop
nop
nop
jae
xor
outsb
scas
jo
filds
cmp
nop
nop
nop
jae
rorl
pop
add
in
fidivrs
and
sar
nop
nop
nop
jae
dec
add
sarl
fidivl
clc
nop
nop
nop
nop
jae
adc
cmpl
lods
or
cwtl
add
mov
mov
clc
nop
nop
nop
nop
jae
add
add
or
fwait
clc
nop
nop
nop
nop
jae
mov
mov
pop
mov
add
js
push
inc
xor
clc
nop
nop
nop
nop
jae
cli
or
add
or
jo
dec
add
clc
nop
nop
nop
nop
jae
add
mov
add
add
push
clc
nop
nop
nop
nop
jae
xor
hlt
addl
add
add
fld1
clc
nop
nop
nop
nop
jae
je
jbe
mov
add
ds
push
clc
nop
nop
nop
nop
jae
addl
std
cli
mov
roll
mov
xchg
ret
lods
add
add
jl
add
std
add
add
clc
nop
nop
nop
nop
jae
jle
add
cmp
int
sbb
nop
nop
nop
nop
jae
push
shrl
test
dec
push
mov
push
add
pop
xorb
scas
inc
mov
add
ljmp
add
insl
stos
clc
nop
nop
nop
nop
jae
addl
xlat
std
add
or
rclb
add
clc
nop
nop
nop
nop
jae
test
addl
adc
xor
adc
clc
nop
nop
nop
nop
jae
pop
xor
add
cli
cs
scas
test
jmp
clc
nop
nop
nop
nop
jae
addl
add
sbb
mov
mov
mov
leave
cs
jl,pn
lods
scas
dec
mov
mov
fld1
clc
nop
nop
nop
nop
jae
dec
add
roll
std
pop
xlat
lods
lods
orl
lret
clc
nop
nop
nop
nop
jae
addl
add
add
int3
jnp
call
nop
jae
add
add
into
xlat
orl
add
mov
loop
push
mov
leave
cs
add
std
add
sub
ret
cld
push
mov
xchg
ret
or
in
add
or
add
lret
push
mov
add
add
pop
roll
cmp
sbb
add
roll
mov
call
nop
nop
jae
add
or
jbe
lods
pop
jle
jp
push
push
mov
xchg
ret
xor
xor
add
aas
clc
nop
nop
nop
nop
jae
add
mov
aad
inc
add
pushl
nop
push
mov
leave
cs
add
add
pop
js
std
add
sar
nop
nop
nop
nop
jae
ror
add
mov
je
sbb
push
mov
leave
cs
add
add
pop
ds
sub
add
clc
nop
nop
nop
nop
jae
add
addl
roll
test
lds
fs
inc
add
add
xorl
mov
xchg
ret
add
test
into
cwtl
add
add
movsb
rcrb
clc
nop
nop
nop
nop
jae
pop
or
add
add
mov
nop
push
mov
leave
cs
mov
add
mov
push
add
in
dec
mov
jl
add
add
add
add
jae
mov
push
adc
pop
xor
fimuls
movsb
test
cmp
mov
call
xchg
jb
sbb
std
ljmp
sbb
popf
rdmsr
jecxz
or
adc
mov
push
add
xlat
outsb
mov
mov
sbbb
push
jmp
movl
inc
loop
js
pusha
jne
stos
ljmp
inc
arpl
orl
outsl
fucomi
js
or
mov
repnz
subb
xchg
inc
inc
dec
aas
cmp
mov
jp
jbe
lock
outsl
jge
sbb
fidivrs
frstor
scas
pop
and
jecxz
mov
fildl
inc
in
scas
pop
xchg
sbbb
je
loopne
push
add
and
or
cmp
std
and
mov
ror
cwtl
sub
call
cwtl
cmp
pop
dec
mov
and
dec
dec
dec
and
push
js
shr
call
cli
cmp
je
jnp
sahf
jmp
enter
pop
and
int3
pusha
call
cmp
jp
cmp
jmp
lcall
and
mov
aas
push
mov
call
or
mov
add
pop
mov
enter
mov
pop
movsb
ror
and
shr
sbb
jge
loope
xor
sti
dec
in
sbb
cmp
pop
insl
sbb
and
mov
cmp
xchg
scas
pop
pop
and
mov
aas
scas
daa
lods
xchg
dec
cmp
roll
and
pusha
mov
cmp
sbb
shl
push
mov
inc
ficoml
dec
icebp
pop
test
fadds
das
xor
sub
test
lcall
sbb
arpl
cld
rorb
js
push
xor
jg
rorb
sbb
leave
cmpsb
mov
loop
jb
fsubs
xor
or
adc
add
arpl
jmp
sub
cld
xchg
mov
out
inc
add
ret
and
clc
and
jmp
pop
sarb
jae
jo
insl
and
in
subb
sahf
jne
add
cmp
pop
cmp
adc
aaa
jp
adc
adc
inc
cmp
xchg
sarl
xlat
mov
pop
add
rorb
mov
pop
push
push
cld
xchg
inc
orb
rcll
cs
mov
in
jb
pusha
xchg
lods
into
cmp
fists
mov
sub
movsl
push
fldl
dec
cltd
and
imul
inc
inc
fdiv
out
xchg
pop
and
outsb
aad
ljmp
xorl
lods
shl
into
data16
cmp
inc
paddusw
movsl
cmp
inc
shrb
iret
popa
add
sbb
hlt
xchg
in
xor
cmp
cmp
jecxz
sahf
adc
sbb
lock
mov
and
xchg
pop
arpl
mov
scas
arpl
fsubrl
cmp
jbe
inc
test
sbb
push
fidivrl
call
divl
sbb
nop
mov
add
add
jp
xor
and
bound
or
sub
aas
leave
dec
loope
insl
and
fsubrs
xchg
lahf
dec
push
sbb
cltd
sub
dec
sahf
pop
insl
push
and
jl
out
sahf
jmp
cmp
cmpb
sbb
xorb
and
push
cmp
das
insb
outsl
stos
pop
test
stc
pop
loop
xor
stos
mov
push
in
test
pop
mov
ds
test
pop
in
cmc
or
jns
iret
pop
mov
xchg
mov
out
out
sbb
mov
and
popf
pop
pop
arpl
stos
sub
or
sub
dec
fnsave
mov
inc
scas
test
mov
xchg
addb
sbb
cld
shlb
repz
cs
daa
add
and
xchg
cmp
ja
jg
sbb
add
in
cmp
jecxz
stos
jne
aad
lahf
xchg
add
outsb
mov
outsb
pop
sbb
mov
mov
subb
cmp
xor
fsubs
stos
cmpl
jl
mov
mov
shl
dec
dec
lcall
loopne
xor
lret
pop
xchg
pusha
pop
cmp
push
pop
mov
inc
add
mov
mov
shrl
mov
jo
cli
push
outsb
aam
shl
mov
jmp
sub
and
jge
mov
in
adc
xchg
and
stos
push
jg
xchg
les
fs
fs
xor
add
loopne
cltd
cmp
sub
mov
mov
xchg
mov
cmp
call
push
lret
out
popf
jbe
gs
inc
push
pop
mov
fwait
xchg
or
enter
leave
insl
aad
mov
xor
test
adc
add
mov
inc
or
adc
subl
sub
sbb
outsl
and
or
jb
inc
aad
ds
pusha
mov
xor
sbbb
or
mov
or
mov
subb
clc
mov
cld
add
jb
jns
testb
dec
xchg
mov
push
insl
cmp
sti
fisttps
xchg
inc
dec
in
fimull
loopne
push
rclb
inc
fnsave
fmul
fistpll
inc
sti
lcall
mov
add
cmp
push
arpl
and
loop
or
mov
andb
pop
dec
jle
dec
sbb
cmp
lock
fadd
and
or
pop
out
test
jnp
cmp
add
pusha
push
and
mov
insl
xchg
iret
and
lods
inc
out
xchg
lcall
loop
and
sbb
pop
cmc
sbb
add
lret
inc
es
in
push
loopne
xchg
call
outsb
push
iret
stc
push
stos
sti
popf
loop
rclb
fnstenv
repz
add
mov
push
cmp
add
pop
cld
sarl
mov
into
xchg
mov
test
sub
push
inc
sub
scas
pop
les
clc
bound
push
lret
orl
pusha
pop
sarl
roll
mov
ljmp
mov
aam
and
fsubs
mov
and
sbb
add
mov
sbb
call
ja
ja
cmp
mov
and
xor
add
les
fistl
sti
inc
lea
and
test
mov
mov
pop
push
inc
rcrb
lock
movsb
xor
mov
into
dec
fdivrp
xor
hlt
sub
iret
xor
sbb
aam
xor
jecxz
sub
pusha
jb
arpl
mov
jg
icebp
insl
adc
and
dec
inc
add
bound
mov
pop
add
jecxz
ja
lahf
push
xorb
fs
imul
idiv
ret
inc
push
bound
push
ret
das
out
iret
and
cwtl
jl
ds
bound
orb
mov
inc
pop
shrl
imul
xchg
push
loope
jnp
mov
loopne
adc
call
dec
int
cmp
cmc
jne
ss
lcall
jo
or
add
sub
jbe
adc
inc
and
inc
aas
cmp
jb,pt
addb
in
push
movsl
and
les
push
mov
inc
pop
xor
xchg
fmuls
pop
test
pusha
jo
mov
inc
push
mov
test
test
jae
jle
cmp
cmp
jp
and
cs
ja
jmp
jmp
std
add
les
xor
les
cmp
dec
add
pop
cmp
pop
hlt
lret
mov
add
sahf
adc
in
mov
pusha
addl
in
insb
xor
inc
scas
cs
loopne
sub
or
mov
lret
sub
mov
pop
add
push
cmp
push
mov
jmp
clc
inc
push
adc
out
cmp
fcompl
add
sahf
adc
pop
inc
lahf
xchg
aaa
in
nop
andb
sub
iret
xchg
rol
push
add
and
cltd
xchg
sub
cmc
rcll
and
bound
ljmp
insb
sbb
cmpsb
dec
pop
mov
in
cwtl
add
or
inc
jae
fsubr
inc
fildll
inc
ret
mov
sub
and
cmp
or
inc
faddp
dec
inc
jg
scas
popf
movsb
mov
mov
push
into
pop
insb
jnp
mov
fldenv
mov
insl
outsb
push
cmp
movsb
cs
dec
jne
adc
xchg
cwtl
js
addr16
fs
clc
push
mov
push
and
inc
mov
cmp
in
and
aad
imul
out
lods
fbstp
movb
rcrl
movsb
notb
xchg
aaa
mov
sbb
mov
sub
add
mov
mov
sub
jnp
xlat
push
ja
xchg
lods
and
pop
fstps
adc
pusha
jb
xor
xchg
int3
xor
mov
cmc
mov
xchg
xor
int3
rolb
mov
adc
cmpb
inc
adc
push
sti
movsl
fidivrs
out
test
or
xor
into
mov
repz
push
cmp
pop
arpl
mov
js
in
sar
sub
fsubl
or
iret
inc
test
push
cmp
scas
cmp
add
scas
and
adcb
adc
adc
shl
cli
sub
mov
pop
and
daa
add
add
aad
fldt
addr16
shll
cmp
jo
sub
mov
or
adc
insl
inc
sbb
add
out
dec
push
lock
sahf
mov
pop
adc
and
lock
sub
inc
repz
inc
test
adc
push
adcb
pusha
dec
jmp
jae
ret
cmpb
js
dec
imul
xchg
cld
cmp
add
inc
mov
mov
sub
test
fwait
test
cli
cld
imulb
adc
ljmp
in
cli
adc
xor
sti
adc
stos
add
shlb
inc
adc
stos
push
shl
jnp
out
shrl
js
lods
outsb
fsubs
dec
sub
stos
out
jmp
aad
lcall
jb
push
mov
enter
sub
push
fisubrl
inc
std
xchg
jle
sub
out
sbb
mov
lds
sub
sbb
shlb
rep
je
dec
pusha
mov
shlb
sub
fidivrs
loope
mov
movsl
mov
addb
cs
or
xor
push
push
rolb
mov
or
inc
jbe
xchg
add
fisttpl
test
loop
fsubs
stos
insl
hlt
mov
mov
ffreep
mov
lea
std
jp
and
pop
out
je
pavgb
insl
xchg
pop
xchg
sub
test
and
xor
add
andl
fsubrs
inc
aaa
mov
mov
lods
das
pop
xchg
insb
in
outsl
insb
add
test
and
pop
out
dec
outsl
or
and
mov
adc
cld
loopne
pop
shll
xlat
arpl
and
jge
stc
dec
insl
push
pop
cmp
out
test
pushf
inc
jae
stos
shr
dec
daa
stc
sbb
inc
lock
cli
pop
xchg
lods
cmc
aas
adc
xchg
mov
sbbl
xchg
sbb
xchg
dec
shlb
pop
sbb
rclb
std
popa
fmull
adc
test
fldl
mov
lahf
nop
sbb
ljmp
mov
push
and
enter
pop
sub
mov
jg
lret
stc
imul
mov
imul
clc
in
jmp
insl
mov
jmp
add
mov
inc
mov
dec
xchg
loop
jle
sbbb
neg
loopne
mov
pushf
pop
mov
pop
inc
adc
andb
enter
out
inc
inc
add
imul
jecxz
enter
popa
scas
push
and
xchg
imul
pop
xchg
inc
loopne
mov
gs
clc
loopne
mov
fwait
cmp
shl
xor
rcr
fmull
dec
add
loopne
mov
mov
popa
lock
sub
icebp
add
jne
mov
lea
inc
jmp
aam
push
movsb
out
cmp
jmp
shll
lea
jecxz,pt
repz
pop
cmpsb
push
sbb
and
jbe
sbb
jecxz
or
pusha
mov
scas
add
js
fsubrs
xor
nop
sub
cltd
leave
cmp
xor
testl
and
daa
mov
iret
inc
cmp
jge
dec
ffree
mov
shlb
and
cltd
push
in
sti
std
and
sub
fwait
sbb
cmpsb
and
xor
sbb
arpl
ljmp
loopne
sbb
pusha
mov
lret
add
pusha
and
nop
sub
inc
pop
sub
icebp
push
cmpsb
push
fucom
mov
cmpsl
cmp
adcb
aas
cmp
or
movb
mov
dec
pusha
sahf
pop
mov
andb
mov
xor
mov
mov
and
pusha
or
sub
les
and
clc
cmp
enter
fstpt
xor
cmp
cmpb
daa
test
mov
cmp
je
test
push
ret
sub
adc
inc
roll
ds
push
outsl
fs
pop
mov
xlat
dec
inc
cwtl
shl
bound
push
push
clc
iret
inc
fs
fcmovnbe
and
lret
rdtsc
out
inc
lret
and
inc
das
dec
xchg
es
pusha
inc
movsl
mov
mov
xor
cltd
mov
scas
xlat
scas
ret
sbb
outsb
sub
xchg
addb
enter
cmp
ja
mov
mov
mov
mov
ss
ret
xchg
rcl
dec
inc
dec
out
push
lret
and
lods
xchg
lcall
dec
ss
mov
dec
pop
mov
jb
aam
clc
sbb
cld
inc
add
and
cmp
xor
mov
mov
sbbl
xchg
stos
stos
jl
pop
inc
out
fldl
insb
fldenv
scas
dec
std
loope
lahf
xchg
fs
jae
inc
sub
mov
mov
xchg
clc
mov
mov
xchg
loopne
sub
pop
sbb
and
shrl
jb
jg
inc
data16
loop
fsubl
xorl
sub
xor
into
cmpsb
jecxz
mov
dec
sbb
xchg
pop
pop
imul
push
inc
mov
sbb
lahf
in
cmp
jne
ja
divb
sahf
xchg
and
out
les
adc
rclb
rcr
push
popa
repnz
call
inc
enter
xor
aas
pop
lock
cltd
fcompl
test
jb
test
or
orb
mov
sbb
inc
adc
sub
and
lods
daa
mov
outsl
pop
mov
pop
inc
adc
xchg
jge
push
or
icebp
popa
sbb
cmp
sub
fs
pop
aaa
xchg
cmpsl
clc
ljmp
mov
leave
fisubl
mov
mov
inc
xchg
sarl
fisubs
xchg
jbe
or
dec
push
mov
ljmp
add
sbb
ret
xlat
mov
lods
pop
pushf
pop
mov
dec
pusha
jae
mov
jne
mov
fildl
sbb
add
pop
fwait
mov
xchg
xor
inc
pop
xchg
insl
and
outsl
cmc
sti
jo
addr16
shl
push
fs
mov
cltd
shlb
mov
and
sbb
pusha
cld
jmp
push
push
push
and
mov
movsb
push
je
test
xorb
test
data16
push
sbb
push
jno
lret
push
jns
push
or
dec
sub
test
and
jg
dec
adc
adc
loope
popa
mov
loopne
sti
adc
sbb
mov
in
mov
or
and
test
test
push
aad
negl
aaa
mov
push
sub
sbb
push
mov
xor
pop
sbb
mov
mov
cmp
jo
popa
dec
es
inc
xor
dec
das
cmpsb
das
pusha
es
or
mov
loop
cltd
lock
cmp
stos
mov
mov
stc
les
push
call
and
ljmp
scas
or
addl
sub
and
lcall
or
or
cmp
pusha
addr16
mov
pusha
into
fnstenv
mov
push
nop
add
dec
xchg
js
mov
rol
sbb
and
pop
inc
popa
jle
pop
notl
mov
push
dec
dec
jmp
jl
mov
movl
out
add
ror
shlb
mov
sub
pop
in
in
nop
loopne
add
das
xchg
push
pusha
or
push
mov
xchg
xor
out
bound
cwtl
mov
and
push
mov
jne
adc
push
insb
or
cmp
adc
sbb
lea
push
or
sarb
push
push
jnp
sbb
les
sbb
das
push
fsts
outsl
mov
sbb
gs
cs
loopne
and
aam
dec
or
sub
aam
cmp
jg
sub
cmpl
push
xchg
jle
sbb
sub
push
push
sub
pusha
jl
pop
ljmp
popl
or
mov
lret
mov
in
and
push
fs
lret
or
ljmp
je
inc
cmp
movsl
rolb
jae
xlat
iret
aaa
out
call
jnp
or
push
stos
mov
pop
mov
inc
adc
test
adc
or
les
call
sub
test
dec
roll
shrl
fninit
test
or
sub
jmp
rcrb
call
sub
out
js
addl
rcrb
and
fs
ljmp
push
jb
xchg
ds
mov
add
inc
aas
cmp
adc
rorb
outsb
mov
push
or
mov
fwait
dec
or
adc
and
inc
add
sbbb
repnz
jmp
loope
cli
jnp
inc
loopne
cltd
movl
xchg
das
adc
orl
push
bswap
lods
add
cmp
push
in
inc
imul
mov
lret
fdivrl
imul
ds
cmp
push
std
inc
mov
rcrl
mov
push
xchg
or
add
lret
add
push
aad
mov
mov
cmp
pop
or
pop
lock
cmp
add
mov
pop
mov
mov
or
mov
sub
add
jb
dec
nop
xchg
pusha
push
adc
jne
repnz
mul
jo
cmpl
and
movsl
push
fiadds
out
adc
xchg
scas
push
inc
push
hlt
or
cwtl
pusha
arpl
sub
push
xchg
dec
fwait
loopne
aam
and
insb
push
out
lahf
jb
je
pop
mov
dec
mov
xor
ss
aaa
ja
mov
out
out
insl
movsb
pop
fs
ret
pop
mov
and
inc
cmp
sub
mov
subb
insb
jmp
sahf
lds
lret
std
dec
mov
or
pop
dec
mov
jnp
adc
mov
leave
outsb
ret
xchg
pop
mov
and
push
pop
adc
or
mov
adc
and
jbe
rolb
sub
mov
div
inc
sub
jmp
and
enter
mov
adc
dec
xor
or
mov
dec
sbb
call
xor
pop
jp
lock
imul
inc
mov
mov
sbb
dec
aad
mov
or
inc
push
aaa
into
mov
jl
loope
lret
jo
pop
jns
cmc
fs
stos
frstor
out
and
cmp
dec
imul
andb
andb
idivl
mov
and
push
pop
ss
push
inc
jnp
test
sub
xor
dec
xchg
fwait
imul
lock
cs
mov
or
inc
mov
and
adcl
push
mov
push
jmp
inc
lret
test
stos
cmp
push
add
and
or
into
stc
faddp
pushf
aam
orl
push
or
pop
sbb
and
fisttpll
mov
add
push
es
movsl
push
clc
mov
stc
popf
popa
or
and
cmp
or
sbb
pusha
gs
sti
test
and
jl
adc
push
push
fsubrs
mov
cmpsb
std
sbb
push
lcall
in
js
xchg
jg
push
mov
push
sbb
mov
adc
add
bswap
cmp
jle
dec
fistpll
roll
js
pop
fadd
aad
clc
mov
out
mov
jne
push
push
mov
inc
and
and
push
cltd
out
mov
adc
mov
jnp
orl
dec
inc
stc
icebp
inc
adc
cmc
and
xchg
cwtl
sub
lods
jo
cmp
pop
or
push
stc
iret
pop
push
and
fwait
les
mov
push
adc
add
sbb
or
pop
arpl
cs
in
jnp
fsubl
sbb
movsb
sub
cli
mov
adc
dec
push
or
mov
push
push
stos
jg
sahf
inc
push
jl
push
mov
jbe
shrb
rolb
fstl
xchg
xlat
xor
sub
jmp
or
inc
test
push
jnp
addb
sbb
and
jnp
fs
enter
sbb
loopne
sti
or
add
push
cld
js
dec
xor
in
mov
push
push
sub
jecxz
mov
mov
mov
sub
and
test
push
dec
dec
mov
aam
dec
mov
das
xor
call
fisubs
add
push
xchg
mov
insb
repz
sub
adc
lret
mov
ss
pushf
rclb
dec
insl
ja
xor
xor
pop
xchg
mov
arpl
call
insl
scas
lds
xor
and
int3
out
fmuls
dec
mov
out
jo
pop
ficoml
pop
pusha
lea
scas
inc
frstor
xlat
std
sub
rorl
adc
rclb
shlb
pushf
inc
adcb
or
and
cs
loop
imul
and
or
cli
sbb
pop
jecxz
test
mov
sub
xchg
gs
or
push
mov
popl
jge
jg
dec
lods
xor
mov
loop
sti
outsb
imul
lcall
cli
mov
rol
xor
adc
mov
lods
cmp
rorb
addr16
jp
in
cs
in
xchg
jae
and
xor
jns
out
into
add
mov
dec
inc
pop
in
mov
sbb
xchg
add
inc
jno
ret
aaa
rcrl
sbb
xor
fsubs
adc
cmp
out
iret
ljmp
sbb
repz
mov
mov
xchg
je
add
inc
ret
outsl
xchg
cmpsl
add
leave
sub
fs
lea
or
dec
and
aas
fstpl
jno
lods
xchg
test
cld
mov
imul
test
out
xchg
jno
mov
shrb
test
faddl
shrb
jne
adc
clc
mov
adc
pop
out
mov
mov
sub
or
adc
shll
ja
or
shlb
mov
push
cli
or
xor
fildll
and
call
loopne
adc
inc
push
add
pop
dec
inc
imulb
push
cmpb
sbb
dec
mov
imul
loopne
dec
repz
movsl
mov
jae
sbb
xchg
popa
pop
pop
outsl
xchg
mov
cltd
sub
test
out
leave
jmp
push
pushl
leave
stos
mov
movsb
fs
xchg
pop
test
and
mov
lret
push
bnd
push
push
pop
push
imul
jae
push
jo
out
xchg
sahf
push
mov
sbb
das
mov
xchg
xchg
mov
hlt
popf
jo
add
insl
leave
data16
add
ss
in
mov
int
and
mov
add
add
push
fists
jns
fs
push
inc
xchg
pusha
mov
push
sbb
cltd
sub
cwtl
shlb
scas
add
adc
mov
or
and
out
divb
in
jns
ficoms
test
fs
cmp
popa
fwait
adc
movl
jo
push
test
mov
lods
hlt
jge
ret
or
mov
sbbb
mov
mov
dec
jg
ret
dec
add
cmp
jae
jo
hlt
mov
jmp
jno
into
jg
mov
add
out
push
iret
or
lods
and
xlat
cmp
roll
ret
pusha
cld
inc
sub
repnz
jb
push
dec
ret
notb
movsb
idivb
jo
nop
mov
ret
mov
movsb
cmp
cmp
cwtl
sub
hlt
adc
sti
shrl
lods
dec
cmpsl
fadds
test
fistps
push
inc
push
jmp
pop
das
les
data16
or
push
mov
xor
mull
pop
ja
movsb
adc
mov
pop
int3
jae
scas
mov
rolb
adc
sahf
or
push
aad
cmp
js
mov
outsl
enter
decl
sbbb
test
jbe
xchg
or
stc
sbb
adc
inc
leave
lock
mov
leave
dec
or
subb
cmc
push
roll
jge
cmp
cmp
mov
mov
adc
and
mov
hlt
add
adc
fwait
movsb
rorl
cwtl
rol
leave
inc
inc
incb
pop
jecxz,pt
mov
hlt
cmpsb
test
jb
clc
inc
lods
repz
inc
fcoms
les
jl
jnp
sub
repz
mov
idivb
adc
jmp
insb
rorb
leavew
nop
clc
and
push
inc
in
shll
push
rorb
pushl
shrl
cld
mov
or
dec
xor
mov
and
in
jle
inc
mov
cmp
jmp
pushf
mov
inc
pop
popa
es
je
jmp
js
in
into
pusha
inc
jnp
mov
mov
inc
scas
add
and
lret
arpl
xlat
popa
mov
cmp
mull
mov
fildl
mov
xchg
inc
jle
dec
gs
cltd
dec
xor
cmp
ja
lock
dec
add
xor
sub
push
leave
xlat
in
ret
lret
fistps
push
roll
push
out
lcall
dec
cmp
out
push
xorb
pop
mov
scas
xchg
xchg
cmp
push
add
daa
aam
add
or
sbb
cltd
in
push
inc
fxch
cwtl
mov
xchg
pop
dec
inc
inc
lret
jge
enter
mov
scas
adc
pusha
sti
stos
lods
gs
sbb
xor
pop
mov
push
push
call
leave
jl
lret
adc
mov
pop
sbb
hlt
scas
push
into
dec
push
lahf
dec
dec
pop
inc
dec
xchg
jge
lret
push
jp
mov
movsb
sub
push
inc
leave
inc
jmp
cli
clc
cwtl
lock
js
idivb
ret
lret
inc
movsb
movsb
call
mov
mov
mov
fs
jge
mov
pop
push
clc
push
and
scas
adc
call
inc
inc
popf
insl
mov
add
jmp
lds
sbb
pushf
add
in
dec
mov
dec
lcall
sbb
sub
call
xor
push
push
dec
push
inc
sbbb
push
fsubp
inc
mov
xchg
push
cs
xlat
sahf
out
scas
mov
mov
movsl
mov
pushf
rolb
or
loop
clc
sbb
int
stc
test
xchg
cmc
sbb
or
dec
daa
popf
jecxz
rolb
pop
test
mov
leave
mov
pusha
cwtl
in
add
imul
inc
adc
loopne
add
push
push
mov
and
xchg
jmp
dec
pop
fwait
pop
outsl
ret
lret
js
xor
dec
jl
dec
push
mov
push
cli
inc
pop
xor
addl
and
orb
int3
or
cmp
mov
mov
aaa
adc
loop
call
lds
jns
test
stc
bound
jmp
leave
push
into
andl
pop
ss
add
mov
mov
imul
sbb
adc
mov
call
jbe
mov
fisubl
lods
push
mov
std
ds
popa
inc
sbb
add
addb
and
sbb
repnz
jge
ret
jl
lock
rclb
pushf
mov
lock
stc
mov
in
jecxz
pop
mov
shl
arpl
scas
pop
jb
add
inc
inc
fimull
xchg
sbb
mov
jle
mov
mov
loope
bound
lret
mov
jg
das
cli
rcr
adc
inc
adc
and
sbb
sub
or
adc
mov
jb
add
lcall
sarb
cltd
out
fwait
mov
test
sub
arpl
jne
cli
cmp
je
rcrb
loopne
mov
xchg
imul
jecxz
mov
cwtl
pusha
andb
dec
pusha
adc
pop
jg
or
shlb
lock
mov
xchg
or
bound
jge
je
fcmovnu
inc
pusha
xor
rolb
pop
jge
dec
popf
push
cld
insb
and
pusha
shlb
sub
fildl
sti
iret
push
sub
sahf
lods
xchg
and
adc
inc
push
nop
mov
xor
cmpsl
loop
cmpsb
sub
jmp
sbb
cmpsb
mov
decl
inc
movb
mov
aas
flds
mov
rolb
dec
rorb
lods
push
fcompl
xor
or
rorb
sub
xlat
lods
je
popf
mov
mov
cld
mov
jb
jb
outsl
outsl
repz
xchg
push
cltd
jne
jg
push
mov
cltd
adc
inc
and
std
aas
mov
push
sub
jne
aaa
inc
scas
mov
xlat
pop
insl
sti
lahf
cmp
add
shr
pop
pop
ret
rorb
push
lahf
scas
inc
push
hlt
fcmovb
and
test
stc
cmp
sbb
mov
dec
das
xor
sub
pushw
outsl
push
outsl
push
mov
adc
pop
int
sub
add
int3
ljmp
or
and
inc
pop
out
rcrb
jns
int
ja
sub
mov
push
inc
jge
lret
jle
mov
fstps
cmpb
push
mov
cli
clc
pop
fadds
push
push
ljmp
sarb
sub
shlb
sahf
dec
push
ret
iret
fistl
xor
push
stos
pop
sti
xor
dec
push
fnsave
jne
loop
mov
cmp
loopne
adc
mov
into
int3
pusha
in
cmc
clc
cmpsl
adc
push
pop
out
aas
or
loopne
jnp
mov
aaa
pop
data16
pop
mov
sarb
stc
jmp
xlat
inc
pop
ja
and
lcall
mov
mov
addr16
push
faddl
jbe
daa
adc
push
dec
mov
rolb
push
add
int
jp
mov
cwtl
and
js
push
pop
dec
aam
imul
loop
rcrb
jecxz
push
je
push
je
les
lcall
ja
test
mov
ds
xchg
jl
cmpsl
mov
pop
add
xchg
jne
or
test
es
test
mov
lods
loopne
stos
mov
mov
dec
std
in
xor
fldl
test
test
or
mov
add
mov
insl
mov
cld
and
call
fwait
jl
stc
inc
pop
and
push
pop
imul
loopne
mov
mov
jl
mov
inc
pop
jbe
lds
and
mov
pop
sub
jb
loop
push
cmp
xor
lea
shrl
jo
mov
push
mov
pushf
xor
outsb
sbb
data16
fs
sub
jmp
pop
subb
je
popf
cltd
mov
shr
or
imul
mulb
std
fiadds
pop
dec
mov
addr16
cli
outsb
ret
jne
test
pop
imulb
inc
flds
cmpsb
packsswb
rcl
repnz
popf
jecxz
jnp
inc
cld
adc
popa
dec
sub
dec
mov
xor
inc
aad
cwtl
loopne
lret
add
adc
fnstcw
iret
cmp
mov
fldenv
movsl
xor
arpl
mov
mov
mov
push
jb
xchg
dec
pusha
lret
lods
cmpb
or
xor
jle
jp
add
mov
push
or
int3
or
fdivs
add
xlat
hlt
stos
outsl
faddp
jge
out
cmp
pop
inc
inc
enter
and
das
bound
cmc
sbb
pop
cmc
mov
pop
adc
rcl
test
mov
cmp
pop
push
xchg
iret
and
jno
rorb
mov
repnz
dec
xchg
mov
mov
andb
out
mov
sub
int3
icebp
dec
pop
movswl
push
pop
pop
ficoml
xor
mov
mov
sbb
or
popl
shlb
scas
sahf
test
or
xor
gs
add
adc
jo
and
push
xor
fs
push
xor
xchg
pop
pusha
cmpsb
xor
das
lret
inc
mov
inc
push
dec
lret
pusha
push
mov
jge
in
popa
adc
cld
int
ja
and
dec
cltd
mov
fsubl
insl
pop
xor
xchg
dec
mov
scas
pop
js
inc
xchg
mov
les
popa
scas
mov
xor
sub
in
clc
out
scas
cmc
and
add
ret
add
and
xchg
out
lcall
pusha
mov
rclb
faddp
push
les
jns
push
push
lods
lock
xchg
in
notb
pop
mov
decl
pop
mov
mov
mov
imul
cmp
cmpsb
sbb
xchg
cmp
lods
inc
xor
mov
shld
insl
add
call
ss
loope
scas
xchg
adc
mov
push
mov
cmp
ret
xchg
mov
shlb
cwtl
nop
pusha
and
adc
rclb
jns
push
dec
cmp
in
repz
push
call
mov
jl
outsb
sbb
ds
xchg
cs
push
sbb
pusha
ret
sbb
imul
test
pusha
and
dec
shrb
dec
pop
jp
test
dec
inc
pop
fcompl
scas
pop
cli
mov
insl
cmp
sahf
out
jge
cltd
scas
ds
xchg
push
sub
stos
arpl
mov
and
xlat
pop
nop
clc
add
lds
mov
jne
pop
push
aam
jle
mov
rolb
lods
push
mov
jo
rcll
pop
into
add
loopne
lcall
out
ret
mov
push
jbe
mov
into
imul
push
stos
mov
sub
out
lahf
xchg
faddl
sbb
loopne
xchg
dec
fdivrs
and
mov
adc
sbb
pop
jo
sti
pop
lea
ret
lods
inc
sbbb
mov
mov
ljmp
mov
loopne
in
bound
cmp
add
leave
inc
arpl
sbb
inc
mov
push
and
testb
pop
test
push
jg
mov
data16
push
adc
loopne
loopne
leave
inc
cs
sbb
xor
lock
mov
inc
incl
sbb
adcl
in
or
jno
jp
loop
push
clc
pop
inc
arpl
imul
adc
jo
jo
sub
loopne
add
pusha
faddl
fldcw
test
add
pusha
pop
and
lock
xchg
xor
movsb
shrb
lock
jl
or
fs
lret
rorl
cmpsl
or
loopne
xor
cltd
adc
xchg
bound
sbb
flds
or
inc
inc
out
lds
jge
mov
pop
in
std
fmull
xchg
mov
sbb
and
fidivs
pop
lcall
out
jl
xchg
rclb
sarb
hlt
sbb
pusha
addr16
push
cmpsb
sub
adcl
pop
ret
movsl
arpl
or
and
andps
push
push
xchg
in
or
rclb
andb
sbb
test
and
pop
rcrb
shl
jbe
dec
movntq
shrb
sahf
negb
mov
push
xlat
push
mov
mov
and
gs
or
add
imul
mulb
sub
stc
pop
xor
or
ljmp
mov
fdivr
dec
shlb
sub
cmc
clc
jae
nop
fsubl
adc
jmp
jns
cmp
sbb
sbb
sbb
adc
scas
fwait
sbb
shrl
shlb
jne
mov
mov
test
sbb
jge
sbb
icebp
sub
add
mov
sbb
cmpsl
mov
push
inc
xchg
ljmp
adc
mov
outsl
push
pop
dec
add
nop
nop
rorb
and
push
jmp
xor
mov
inc
pop
sbb
fcompl
push
ds
out
aam
pop
ret
push
mov
sahf
push
cld
mov
jno
gs
push
sti
sub
adc
adcb
or
icebp
aaa
orl
mov
imul
mov
push
dec
adc
out
mov
out
inc
or
jno
lds
or
and
lock
daa
outsb
nop
rolb
cmpsl
xchg
stos
jnp
sahf
addl
inc
adc
and
mov
cli
cltd
sbb
rorb
rcrl
inc
int
xchg
mov
cmpb
sbb
cmpb
cltd
dec
push
mov
sti
sbb
loopne
ret
inc
mov
sub
out
push
loopne
je
mov
aam
nop
xchg
and
fmull
lock
popf
jbe
scas
aam
notl
sub
dec
test
xlat
imul
dec
jns
jbe
mov
lret
inc
les
cmp
pop
xchg
test
or
imul
and
sub
xorb
sbb
add
xchg
imul
adc
call
jg
arpl
repnz
daa
sbb
xor
jae
and
aad
jecxz
add
shrb
in
or
rcrb
fbstp
jb
and
test
fstpl
mov
jnp
dec
in
clc
or
pusha
cmp
jmp
mov
add
adc
out
or
movsb
add
fmull
jg
dec
inc
arpl
xor
je
inc
xor
jl
sub
sub
jg
dec
aam
or
rorb
mov
mov
mov
mov
add
push
fildll
out
fnstcw
loop
jo
dec
cmpsb
add
mov
insb
push
xchg
les
sbb
add
out
enter
pop
repz
pop
pop
fwait
scas
stos
pop
adc
stos
xchg
and
xor
sub
xor
push
add
in
xchg
mov
dec
and
ja
lret
cwtl
sbb
and
es
jmp
cmp
mov
outsl
data16
shl
sbb
shr
inc
fisubrs
outsl
lea
push
mov
iret
daa
daa
jb
fnstcw
fistpll
adc
je
xchg
test
sbb
fmull
js
data16
mov
icebp
xchg
aam
mov
dec
fst
dec
pop
and
lods
leave
or
out
mov
inc
mov
fsub
mov
sub
inc
outsl
xor
pushf
push
and
dec
mov
ss
sub
xchg
push
jg
ds
jnp
jl
jne
mov
push
hlt
add
dec
xor
push
adc
sub
lcall
ret
aaa
std
dec
mov
cmpsb
es
jnp
mov
xor
jbe
daa
aam
inc
bound
movsb
xorb
rcl
jg
je
jb
addr16
pop
inc
mov
ret
or
pop
cmp
sbb
insb
imul
mov
into
cmp
pop
in
cmp
mov
inc
fidivl
inc
jns
aaa
pop
and
mov
xchg
mov
dec
rcrb
nop
or
aad
jns
ja
add
add
add
sbb
dec
mov
or
loopne
dec
leave
cwtl
adc
mov
mov
loopne
jmp
xchg
iret
stos
mov
sbb
xor
test
push
cld
xchg
pop
and
push
dec
loopne
or
sub
inc
loop
mov
xor
xchg
push
xchg
aam
inc
xchg
arpl
or
sbb
xor
dec
push
ret
test
pop
sbb
loopne
rorb
sbbb
pushf
je
adc
jne
adc
fisubs
bound
inc
mov
push
push
imul
je
imul
aaa
loop
or
add
loopne
jle
pushf
cwtl
and
call
cwtl
add
mov
push
mov
rcl
lds
and
inc
or
test
mov
jb
imul
movsb
in
push
test
pusha
dec
mov
cld
push
mov
adc
pop
mov
inc
xor
enter
aam
scas
mul
mov
ljmp
dec
lea
pop
test
adc
jle
roll
inc
cmp
test
or
and
mov
rolb
in
xor
jne
sub
pop
fsts
shlb
pop
mov
sub
cwtl
fsubs
popf
ret
or
arpl
add
sar
and
mov
add
and
out
jl
movsb
les
mov
shll
and
sub
sbb
mov
jbe
adc
and
or
loopne
in
mov
sub
xchg
bound
pushf
orb
outsl
inc
pop
push
adc
or
sub
push
push
lahf
adc
mov
xor
in
scas
aaa
sbb
and
jp
adc
loopne
dec
mov
das
bound
shlb
mov
pusha
shlb
movsb
pusha
jecxz
aam
push
jg
arpl
adc
adc
out
mov
mov
add
stc
pop
mov
cwtl
sbb
outsl
dec
jo
movsl
in
cs
xor
leave
lods
aaa
or
rorb
jp
and
lahf
or
inc
mov
addb
mov
push
test
push
clc
adc
daa
das
daa
push
mov
inc
stos
loopne
adc
loopne
jle
or
sub
jbe
ss
fxch
loopne
movsl
cmp
cmp
adc
sbb
pusha
or
push
mov
add
das
push
arpl
es
push
and
in
loopne
add
push
into
add
shl
sub
pop
xor
mov
cmpsb
jmp
push
pop
push
xor
fsts
push
imul
lahf
jmp
mov
cmp
xlat
sar
mov
dec
popf
mov
jp
mov
mov
pushaw
xchg
fmul
negl
fisttpll
push
in
xchg
push
jnp
cmp
js
inc
ud0
sub
ja
mov
mov
pop
aad
les
cmp
cmpsl
lcall
lods
inc
dec
add
sti
dec
lods
js
rorb
ljmp
cmp
dec
inc
sub
sbb
mov
sub
push
loop
mov
pushf
and
jnp
pushf
pop
mov
or
dec
lret
pop
testb
inc
mov
fisubs
pop
subb
sbb
and
xchg
adc
jg
andb
loopne
pop
sbb
inc
ds
in
rorb
aad
dec
dec
sbb
sub
fsub
int3
scas
xchg
aad
or
fsub
icebp
mull
test
add
xor
mov
mov
add
jl
sub
add
add
mov
fs
pop
js
mov
mov
aaa
popa
ds
or
cs
jp
movsb
mov
push
icebp
out
arpl
in
and
add
dec
cmp
and
fistpll
inc
sub
add
daa
movsl
daa
pop
add
adc
cwtl
shlb
movsl
add
in
jo
lods
and
insl
and
sub
jns
movsl
cmpsb
int
das
add
push
dec
lcall
fcmovu
faddl
or
and
xor
out
xchg
aas
dec
scas
xchg
loopne
mov
sahf
xchg
fisubrl
inc
leave
notl
popa
popf
lds
adc
es
in
jg
leave
dec
imul
icebp
in
lcall
pop
loopne
sbb
push
cld
fisubl
sahf
add
imul
push
test
mov
adc
in
arpl
xor
mul
loope
jge
rorl
and
lahf
enter
add
inc
enter
adc
and
mov
mov
and
inc
add
mov
stc
ds
sub
pop
pop
test
adc
pusha
xor
jle
cltd
mov
or
mov
mov
hlt
add
sub
leave
test
pusha
push
xchg
push
and
push
add
mov
jmp
jge
sbbb
fwait
push
pop
xor
adcb
test
xor
fs
cmp
leave
test
mov
inc
cld
das
pop
imul
and
xor
outsb
jl
xchg
pop
and
stos
sbb
and
xchg
pop
loope
inc
sbb
inc
and
call
inc
out
stc
mov
pop
jmp
sub
data16
stos
mov
and
mov
dec
mov
daa
push
out
lea
int3
scas
cmc
jp
adc
andb
push
movsb
mov
pop
aas
negl
ljmp
pop
sub
lea
jg
jnp
add
xchg
aas
lea
stc
cld
pop
movsb
repnz
lea
or
jns
in
lcall
pop
mov
and
in
and
sti
jo
addr16
push
mov
fsubrl
sub
jg
xchg
insb
test
push
adc
mov
mov
mov
inc
ror
xor
fisubs
and
xchg
aaa
push
dec
inc
test
imul
lret
ss
addr16
and
lods
enter
inc
or
andb
mov
popa
subl
hlt
movsl
cmpl
cmp
jo
push
cmp
rclb
sbbl
mov
push
mov
lods
out
push
stos
lock
jbe
ret
ds
mov
jbe
mov
cmp
gs
int
push
mov
ds
inc
xor
arpl
shll
mov
frstpm(287
pop
adcl
xor
jo
sbb
add
pop
mov
add
mov
jp
push
dec
shll
lods
jns
jae
stos
lods
in
ret
dec
aaa
dec
xchg
push
inc
mov
rclb
loope
bnd
inc
daa
ja
xchg
lock
xchg
insb
mov
jbe
mov
int3
xor
sti
and
push
lods
adc
adc
cmpb
xor
sahf
or
cmp
addb
subl
outsl
inc
xor
cmp
inc
sub
adc
andb
cmc
std
cltd
leave
lret
push
adcb
es
loopne
mov
loopne
lret
loope
shlb
adc
pop
cmp
cmp
sbbb
and
sub
hlt
cmpb
cld
sahf
xor
lods
xorb
data16
insl
add
inc
cli
jbe
mov
clc
lods
movsl
nop
fsub
inc
inc
lods
adc
add
cmp
and
xlat
mov
lret
sbb
mov
pop
and
in
cmc
in
fstl
ljmp
insb
mov
mov
fisubrs
add
and
lods
mov
inc
sbb
and
icebp
jecxz
mov
add
or
cmp
hlt
mov
mov
call
push
xchg
ja
ljmp
pop
cmc
fwait
aas
xor
xor
add
add
add
repz
sub
jne
stc
cmp
dec
lret
daa
or
jp
push
inc
mov
xchg
mov
push
adc
add
cltd
loopne
cwtl
insb
loopne
mov
push
fbstp
dec
pandn
ror
xchg
add
inc
inc
mov
jb
push
jge
add
arpl
push
imul
ja
mov
loopne
push
mov
jle
mov
mov
pop
imulb
dec
clc
popf
es
insb
pop
xor
mov
jne
pushf
inc
pusha
xchg
sbb
mov
mov
mov
mov
add
les
lds
stos
push
jmp
jl
aam
cld
mov
push
mov
push
mov
rol
movsl
in
jne
dec
les
iret
lahf
imul
mov
cli
xor
call
jno
gs
or
les
cmp
lods
push
jge
mov
push
movl
movsb
jne
clc
je
pushf
pushf
and
cwtl
and
addr16
mov
jmp
divb
sahf
or
pop
sahf
mov
ds
and
jmp
ficompl
mov
divb
fistpl
fstl
repz
int
xlat
dec
ja
and
out
jae
fwait
jne
sub
and
nop
or
inc
add
ljmp
push
mov
push
in
sub
mov
lds
pop
sahf
pop
popf
pop
pop
sahf
mov
cld
sbbb
stos
mov
andb
jno
mov
out
xchg
mov
in
dec
push
movsl
ret
sbb
pusha
frstor
dec
fsubrs
hlt
cmpsl
iret
pop
fcoms
cld
add
inc
test
cs
push
xor
clc
xchg
cmp
xor
or
ja
out
push
inc
cmpsb
les
cmp
pop
js
cli
adc
inc
mov
out
or
rcrb
rorb
jo
pop
or
and
or
mov
fimull
inc
cmp
into
addr16
adc
shlb
sbb
and
or
mov
std
int
push
cmp
push
cmp
push
je
or
add
test
jmp
sub
int
jnp
fadds
and
adc
pusha
xchg
insb
xorb
inc
inc
adc
mov
imul
pushf
sub
gs
add
repnz
sbb
inc
fstpt
out
pushf
rolb
lret
shrb
ret
jmp
fisttpl
dec
and
adc
mov
daa
sahf
jmp
dec
cmp
and
inc
mov
dec
movb
mov
loopne
jno
icebp
mov
pop
loop
rolb
outsb
js
mov
hlt
dec
xlat
add
pusha
or
nop
cld
and
rclb
sbb
jg
iret
xor
and
mov
inc
loopne
pop
daa
pop
mov
sbb
and
push
andl
in
mov
mov
leave
cmp
xchg
shlb
xchg
call
or
jbe
dec
ds
sti
lret
add
cmc
ficomps
loopne
inc
jl
outsl
fldcw
rolb
inc
mov
fsts
iret
adc
mov
push
aaa
rcll
mov
int3
mov
pushf
mov
add
push
sub
lea
xor
sub
dec
dec
mov
shlb
push
daa
xor
dec
mov
jo
inc
xor
roll
arpl
je
cwtl
subb
into
push
xlat
jecxz
cmpsb
scas
xchg
enter
push
movsb
popf
xor
sub
dec
xor
and
mov
dec
bound
inc
test
add
xchg
int
mov
inc
and
inc
cmpb
cmp
stos
or
int
push
adc
dec
jo
and
repnz
adc
mov
jp
lods
push
push
mov
rcrb
in
shll
js
adc
adcb
inc
aas
dec
pop
mov
and
pop
mov
xchg
fsubr
cmp
jp
mov
or
aaa
cmpl
mov
repz
inc
add
in
lret
jle
push
ds
pop
ljmp
xchg
sbbl
adcl
leave
adc
push
sub
adc
cmp
cltd
sbbb
mov
or
inc
addl
xchg
dec
loopne
stos
jo
repz
xor
inc
aas
out
jecxz
ret
and
mov
pop
sbbl
in
and
xor
push
lret
xor
push
cld
jbe
out
mov
xchg
test
or
sti
push
jg
dec
ror
mov
xchg
sbb
js
add
dec
rcrb
push
cmp
fisubrs
add
pusha
and
pusha
test
jp
mov
mov
mov
fwait
add
cmpb
adc
lods
sub
fwait
xor
mov
sub
mov
clc
jl
bound
in
hlt
loopne
push
jp
add
pop
mov
push
addb
push
adc
xor
psrlw
cmp
cmp
mov
pop
in
mov
mov
and
ret
aam
jno
xor
pop
xor
out
pop
sbb
inc
jo
ret
pop
and
sub
cwtl
in
les
cmp
adc
scas
es
je
mov
dec
mov
xlat
mov
xchg
roll
cmp
aaa
sub
gs
mov
ljmp
add
and
in
popa
cs
inc
sub
loop,pn
dec
scas
orb
cmp
jl
inc
mov
xor
jbe
stc
loope
or
adc
pop
mov
xor
mov
test
addr16
or
push
push
sbb
mov
push
js
std
push
jo
fwait
fs
popa
test
loopne
test
mov
popa
push
pusha
daa
mov
pop
int3
pop
sbb
mov
cmpb
cmpsl
scas
or
jmp
dec
jbe
es
push
add
push
shrl
pop
mov
lock
lock
imul
mov
scas
or
loopne
jne
scas
and
jp
mov
int3
push
sarl
push
add
test
pusha
and
sti
jg
or
dec
lods
adc
mov
std
jge
push
adc
cmp
popa
xchg
adc
stos
pushf
mov
je
or
out
hlt
movsl
cli
or
and
add
sub
mov
loopne
jne
and
xchg
cmp
lods
imulb
sub
jle
and
mov
xor
cmp
popa
push
or
inc
loopne
and
inc
gs
jl
sti
arpl
sbb
mov
rolb
loopne
pushf
cmp
je
xor
dec
cmc
fstps
sarl
xlat
push
mov
inc
inc
jmp
mov
popf
sahf
and
cmpsb
call
lret
add
cmova
icebp
add
repz
cmpsl
ret
inc
cmp
shlb
sbb
sbb
out
sti
rol
xchg
sahf
xor
jmp
popf
inc
pop
lcall
cld
push
ss
xor
pop
dec
cmp
jo
cli
mov
add
dec
popf
fld
xchg
xchg
cmpl
lds
ret
push
xor
lret
fcoml
dec
dec
adcl
dec
or
lcall
cld
cmp
jle
cmp
jo
add
clc
sar
aas
pop
insl
mov
sub
mov
mov
xor
andb
inc
jno
loope
adc
insb
sbbb
and
outsl
cld
pop
nop
addb
mov
push
xchg
sbb
stos
enter
xchg
into
rorl
inc
ret
ja
xchg
fwait
inc
jecxz
cwtl
call
pop
aas
sub
mov
shrl
cltd
lcall
aaa
gs
inc
fildll
aam
leave
pop
sub
ja
data16
aas
imul
adc
rcll
adc
or
js
shlb
je
repz
pop
push
push
test
xchg
pop
mov
sbb
mov
in
sub
jmp
jl
mov
xlat
mov
loopne
cs
call
inc
idiv
jle
daa
shlb
sub
shl
sbb
in
sarb
repnz
push
jmp
push
sub
xchg
pop
push
mov
ljmp
roll
xchg
inc
mov
mov
and
xor
lock
cmp
jno
push
in
fadds
mov
push
loopne
shrl
and
lods
dec
xor
push
imul
sbb
push
xchg
ja
pop
sti
mov
push
bound
xchg
aam
mov
scas
push
cwtl
sar
xchg
loopne
mov
loopne
stos
dec
jmp
js
rorb
jmp
ss
or
jle
jl
inc
mov
lahf
icebp
outsb
lret
adc
push
push
push
pop
inc
out
sub
cmc
cltd
sbb
sub
std
jnp
mov
test
lret
jae
movsb
pop
hlt
mov
inc
jg
lock
lahf
xchg
adc
ljmp
in
xchg
cmp
outsb
xlat
cs
dec
push
jne
clc
pop
fsubp
scas
adc
out
mov
xchg
andb
inc
dec
jle
cmp
les
push
cwtl
in
sub
aad
fnstsw
scas
pusha
mov
sub
stos
mov
mov
sub
flds
jle
push
dec
jne
inc
test
and
pop
push
out
negb
lahf
scas
cmp
pusha
and
pop
sbb
pop
aaa
fnsave
sbb
xchg
adc
push
jae
add
xor
xchg
ret
mov
adc
add
or
repz
cwtl
rorb
shl
add
pop
fsubrp
arpl
std
stos
push
in
jno
dec
test
shl
xchg
mov
addl
xchg
jle
insl
into
mov
data16
xchg
rol
pop
push
jnp
mov
add
dec
add
and
pop
ds
jo
fcomp
fwait
mov
mov
aad
arpl
lock
xor
push
xchg
xor
xchg
xor
push
ja
fstl
dec
pop
je
repz
mov
dec
outsl
in
pop
insl
out
or
inc
in
cld
and
and
and
mov
push
daa
js
pop
and
adcl
cs
cwtl
pop
rorb
bnd
inc
xchg
dec
loopne
fistps
roll
xchg
je
ljmp
movsl
dec
ds
adc
inc
adc
testl
movsl
inc
cmpsl
movsb
cli
mov
pusha
and
loopne
fidivl
xor
out
pop
xchg
or
lods
push
sbb
mov
addr16
ja
or
lock
out
fdivrs
out
sub
sbb
sbb
mov
and
addl
loopne
inc
ja
and
and
sub
dec
mov
andb
and
cmp
rorb
insl
xchg
xor
ja
inc
outsl
pop
mov
test
cmp
rcll
push
pop
add
adc
rcll
mov
out
or
rcr
cmpb
test
loopne
sub
add
xchg
clc
repz
insb
out
mov
push
imul
add
test
and
xor
cmp
cwtl
andb
cmc
cli
and
movsl
sbb
sbb
dec
sti
dec
sbb
inc
xchg
or
pop
in
dec
inc
mov
dec
inc
xor
mov
mov
push
sub
in
out
inc
jo
adc
sub
cs
mov
xor
ret
das
add
loopne
movsb
gs
shll
std
push
icebp
or
fcomps
pop
inc
mov
adc
popa
dec
loop
inc
jp
inc
and
ja
lods
ss
adc
xor
int3
ret
mov
subb
add
pusha
insl
dec
and
lock
repz
insb
adc
nop
int3
inc
and
js
arpl
sti
cld
jmp
je
cld
rcl
pop
mov
cmp
pop
mov
je
insl
pop
andb
dec
sbb
pop
aam
fsubr
out
mov
cmc
mov
lock
pop
cli
and
xchg
std
pop
adc
call
movsb
ficomps
and
jmp
xor
repz
and
xchg
jne
or
push
adc
add
sbbb
and
pop
loopne
int3
loopne
fldenv
leave
js
mov
rcl
sub
pop
and
stc
mov
cmpl
addr16
mov
addr16
js
dec
sbb
and
mov
mov
stos
vshufps
std
xchg
dec
jbe
xor
lock
rorl
repz
add
add
mov
mov
in
add
jns
sahf
adcl
dec
jle
repz
stc
dec
loope
cltd
lea
inc
orb
lock
ss
das
in
pop
dec
mov
movsb
ror
and
clc
jns
fstpl
adcb
and
mov
mov
sub
dec
gs
xchg
cld
jnp
cmp
data16
mov
movsl
sub
dec
ffreep
cmp
xchg
in
add
dec
push
iret
out
mov
dec
stos
and
xor
mov
je
jge
or
mov
jo
inc
es
or
hlt
inc
dec
lods
lock
and
xchg
cmpsl
push
mov
and
aad
push
inc
add
xor
push
ja
int
stos
pop
dec
ret
outsl
subb
add
das
push
arpl
idivl
xlat
cmp
out
push
adc
inc
or
mov
and
dec
mov
test
and
arpl
push
daa
sbb
dec
add
xchg
imul
outsb
jns
movsl
cmpl
mov
xchg
cs
cmpsl
out
dec
pop
dec
cmp
mov
mov
shl
jb
scas
sarl
insb
mov
and
leave
jmp
andb
js
test
clc
pushf
enter
sbbb
sahf
or
xchg
repnz
aam
xor
add
arpl
in
or
pushf
mov
fsubl
ja
je
or
shll
mov
sub
add
fxam
sub
inc
shll
inc
test
pop
add
cmp
imul
rclb
lret
ja
inc
lahf
inc
iret
push
mov
sub
outsb
xorb
lea
jmp
movsl
mov
in
mov
sbb
mov
cmp
mov
fwait
jmp
mov
negl
imul
cmp
loopne
jb
nop
adcb
add
and
jo
mov
pusha
ljmp
adcb
cmp
addl
insl
data16
sub
or
jbe
xchg
xor
cmpsb
inc
test
sbbl
or
push
sbb
shll
adc
mov
push
stc
lock
fadds
pop
pop
jle
shll
out
cltd
add
imul
jmp
xchg
jns
adc
movsb
push
xor
and
ficoml
insb
lods
sarb
scas
addl
mov
inc
add
lret
push
mov
mov
dec
inc
stc
ss
loopne
fcoms
loope
jbe
in
add
int3
and
clc
add
and
out
mov
mov
push
andb
push
scas
push
pushf
cmp
daa
shll
nop
jl
rcl
mov
aaa
aas
jmp
sub
shr
imul
ljmp
mov
outsb
add
test
outsb
mov
in
mov
cld
inc
adc
add
jp
inc
xor
dec
mov
sbb
inc
sbb
out
pop
mov
fxch
sahf
fiadds
adcb
mov
lcall
and
add
loopne
jns
pop
out
inc
push
push
jne
lret
xor
popa
sbb
mov
push
clc
push
ds
in
fwait
sbb
stc
stc
mov
push
push
push
jo
les
scas
sub
out
pop
push
jo
xchg
adc
inc
mov
les
and
mov
jmp
std
mov
and
inc
jno
in
adcl
pusha
jle
jl
sub
and
fidivl
frstor
insb
add
lds
inc
xor
sub
pop
fcomi
les
cmp
mov
jns
pop
int3
cmpsl
rorb
stos
mov
cmpsb
out
mov
scas
ljmp
jb
and
fldcw
fisubrl
rcl
xchg
popf
or
add
mov
pop
jne
push
mov
jb
fcoml
xor
jns
shr
sbb
loopne
cmp
insb
call
xchg
pop
inc
lret
addr16
adc
mov
and
rcrb
and
cmp
sub
jne
iret
punpckhwd
std
test
pop
mov
jmp
fwait
sti
rcrl
xor
loopne
mov
ret
out
or
cmovo
decl
mov
arpl
test
sti
push
imul
and
call
mov
xor
dec
addl
pop
mov
cmp
sbb
xlat
js
jmp
sarl
cmp
mov
clc
not
jae
push
roll
pushf
insb
rolb
add
pusha
cltd
clc
xchg
xor
fldl
cltd
sar
sbb
jb
nop/reserved
jb
dec
sarb
test
subb
insb
sarl
popa
mov
adc
pop
add
shrb
xchg
test
pop
mov
jne
iret
pop
repz
xchg
negl
insb
call
mov
imul
int3
fmul
xchg
lds
clc
stc
cmp
dec
sarb
push
sbb
mov
mov
add
ss
jmp
push
or
xchg
pop
and
jae
mov
lahf
rol
pop
sahf
imul
inc
sahf
mov
into
lods
ret
rclb
fs
inc
outsl
gs
cmp
sub
popa
sqrtps
push
das
push
dec
adc
xchg
mov
ret
inc
gs
outsl
add
jnp
sbb
fbstp
sub
lds
sarl
jne
inc
dec
iret
in
iret
or
mov
ss
or
cltd
icebp
sbb
fadds
dec
lds
loopne
sub
aad
scas
xlat
dec
jmp
pop
jne
addr16
xchg
push
mov
and
lods
add
xor
mov
dec
mov
dec
cs
lcall
push
faddl
push
mov
test
rcr
jbe
pop
sub
sahf
sub
stos
cmp
bound
inc
pusha
fiadds
jno
jle
sub
mov
loopne
cltd
or
adc
xor
and
lret
push
cmp
test
andl
xor
push
sti
icebp
rorb
or
jne
pop
scas
push
jb
jmp
dec
ja
mov
clc
mov
vunpcklps
loopne
sarb
ss
into
arpl
rorl
outsb
xchg
inc
loopne
adc
adc
sub
sbb
xchg
test
xchg
les
lock
cld
cmp
pop
mov
inc
jb
or
out
roll
inc
cmp
int3
jmp
and
jg
shl
and
push
pop
dec
xchg
mov
xlat
inc
and
orb
mov
sub
sub
dec
add
add
or
and
mov
inc
push
mov
xchg
xor
mov
aam
ret
shr
push
mov
in
sarl
mov
push
sbb
inc
sbb
jo
push
notb
mov
mov
hlt
inc
mov
jl
lahf
mov
clc
loopne
imul
movsl
dec
sub
pushw
xchg
popa
test
in
xor
loope
add
les
mov
loopne
imul
out
iret
pop
push
std
sub
sub
and
int
add
cmc
mov
mov
leave
push
push
add
xor
sti
dec
in
rcll
xor
sbb
arpl
aad
loopne
test
push
int
test
mov
sbb
sbb
lahf
loop
xchg
xchg
lods
arpl
les
mov
std
insl
jb
or
repnz
and
rorb
inc
std
xor
sub
idivl
repnz
out
inc
cli
insb
in
dec
movsl
adc
xor
pop
bound
mov
mov
es
push
and
xor
inc
test
jmp
xor
mov
call
dec
popa
je
inc
adc
leave
and
sbb
loope,pt
mov
cmp
or
sti
test
rcll
sub
xchg
mov
ret
cwtl
mov
pop
adc
push
out
inc
mov
testl
loope
aas
add
push
cmpsl
shrb
clc
js
mov
lret
sbb
loop
cld
mov
inc
repz
xchg
push
cmpsl
test
push
add
push
je
rclb
jge
sarb
lods
push
mov
dec
nop
hlt
rcrb
and
mov
push
loopne
xorb
mov
insb
mov
jl
sub
into
inc
dec
je
fists
cmpb
mov
and
pop
xor
rolb
inc
ret
cld
mov
add
shl
adc
and
jge
lret
in
xchg
add
cmp
pusha
xlat
sti
jecxz
pop
xchg
sbb
inc
sbb
and
inc
into
lea
mov
mov
jg
pushf
or
mov
sbbl
cmpb
mov
push
test
mov
pushf
mov
les
arpl
inc
aad
outsl
push
mov
inc
ret
xor
bound
mov
es
adc
in
ljmp
and
add
fiaddl
sub
inc
arpl
add
sub
mov
adc
je
xor
fists
sub
or
mov
pusha
mov
sbb
repnz
movsb
cmp
pop
jle
sub
or
push
pusha
jl
js
sub
lock
jmp
cmp
add
mov
mov
sarb
mov
inc
jg
mov
sbb
or
das
push
loop
xchg
int
mov
es
ret
lea
mov
sub
cmp
add
pushf
sub
jnp
push
xchg
movsl
jge
cltd
xor
mov
imul
adc
loop
andl
addr16
inc
lods
loope
shrl
fsubr
std
ss
xchg
fwait
in
frstor
test
shlb
dec
jne
inc
pop
add
and
sbb
repz
rcrb
mov
pop
add
mov
jo
push
in
sub
insl
inc
les
outsb
jne
mov
jns
mov
dec
inc
lret
sbb
pusha
notl
pop
clc
xchg
fisttps
push
jo
push
xchg
inc
jmp
std
incb
xchg
lods
rclb
cmp
hlt
lods
movsl
adc
pusha
xor
lret
enter
xchg
pop
in
mov
sub
lods
sub
jecxz
dec
dec
and
push
jecxz
pop
mov
inc
sbb
lret
subb
dec
pushf
sbb
clc
pusha
sbb
orb
scas
cltd
inc
arpl
mov
push
push
push
sub
and
test
add
mov
test
fidivrl
mov
in
out
arpl
insl
adc
sbb
cmc
xchg
mov
jmp
in
mov
hlt
or
pusha
out
popa
push
pop
fdivrl
mov
jb
xlat
aaa
mov
push
ror
daa
gs
mov
pushf
mov
cmc
mov
mov
ss
mov
daa
out
mov
and
push
pushf
or
pop
cmp
out
sahf
aas
cltd
sbb
andl
add
lret
xor
jle
adc
mov
push
pop
dec
rcrl
cmp
nop
and
push
mov
loopne
jg
dec
in
jle
int3
incb
ljmp
mov
xchg
mov
dec
mov
and
test
rcrb
pop
icebp
sub
xlat
out
adc
adc
adc
out
arpl
pop
lahf
inc
ror
dec
xor
sub
lret
add
push
stos
xor
gs
in
les
das
test
insb
and
add
inc
jo
mov
int
xor
jmp
loopne
cld
add
mov
mov
jecxz
mov
mov
fists
lret
add
xor
mov
rol
sti
cmp
test
sbb
loop
mov
mov
shlb
dec
lahf
call
inc
fisubrs
cmp
cmpsl
bound
gs
sbb
gs
mov
dec
add
mov
in
mov
ss
inc
jb
imul
outsl
aas
mov
push
test
xchg
arpl
in
ret
in
les
mov
aas
jmp
mov
nop
inc
add
outsl
test
adc
and
xchg
jnp
bnd
setno
out
jp
rolb
mov
mov
xchg
daa
in
mov
scas
mov
cs
jno
int3
imul
insl
in
push
cmp
or
push
sbb
or
gs
and
jo
adc
sub
call
xchg
push
lods
cld
and
test
xchg
cltd
test
std
lret
mov
cmc
mov
orb
push
cs
jmp
pop
add
pusha
inc
sub
mov
cwtl
lods
loopne
sbb
sti
scas
std
ret
stos
mov
lds
aas
jmp
jb
fwait
insb
jg
pop
xor
cmpsl
arpl
adc
in
clc
pusha
or
lods
ss
bound
push
dec
sbb
loopne
push
jne
sub
pop
dec
sub
filds
imul
clc
mov
pusha
mov
inc
xchg
cmpsb
adc
aaa
or
pop
adc
mov
or
mov
pop
push
xor
mov
fidivs
rolb
mov
ret
pop
mov
jbe
stos
mov
idivl
popf
xor
pop
and
pop
xor
fadds
je
sbb
lds
orb
push
jmp
std
dec
mov
out
orb
out
jmp
js
add
dec
out
fdivs
test
lret
and
lock
je
xor
cmp
popf
mov
xchg
dec
sbb
pop
pop
ds
lods
and
dec
stc
js
xlat
imul
pusha
add
xor
xchg
adcb
jecxz
fisubrs
orb
xchg
les
int
cmp
cmpsl
mov
add
mov
mov
mov
xchg
fstp
push
movhps
xor
ffree
mov
repnz
pop
pop
pusha
xor
je
mov
arpl
push
outsb
inc
sub
test
nop
jo
pop
jns
or
sub
lods
lods
es
sbbb
loopne
cmp
out
pusha
int3
or
nop
cmp
cli
inc
or
xchg
cmc
push
fistl
ret
iret
add
loopne
jmp
cwtl
shlb
in
sahf
sbb
and
bound
or
dec
jge
inc
call
push
enter
lahf
and
daa
in
mov
mov
push
inc
jno
xor
fidivrl
std
jno
scas
add
inc
cmp
inc
testb
loopne
sub
pop
lret
inc
cwtl
in
mov
push
ja
sbb
rcrb
cmpsl
adcl
addr16
push
rcr
insl
mov
push
push
mov
pop
jmp
pop
inc
or
fcom
adc
call
scas
rcll
cmp
dec
shll
cmpsb
rcr
shrb
std
imul
pop
pop
or
dec
mov
push
cmp
inc
push
adc
and
cmp
push
sbb
cwtl
andb
cld
cmp
jecxz
out
rcrb
push
xor
mov
mov
push
into
mov
xor
cmp
pusha
popa
pop
jg
adc
icebp
mov
iret
adc
sbb
test
ds
jo
popf
dec
fs
js
xchg
inc
xchg
es
pop
inc
inc
std
mov
sahf
mov
ret
sub
sub
mov
xchg
xchg
fcoms
in
jecxz
loopne
je
push
dec
jp
adc
xchg
mov
sub
adc
pop
dec
cli
mov
out
loopne
mov
cmp
lock
jbe
fs
sub
sti
shl
orl
add
cli
je
cld
shlb
arpl
inc
pop
sbb
popa
inc
and
inc
push
add
js
pop
push
inc
mov
outsb
push
fnstcw
in
lods
pop
repnz
hlt
lret
adcb
pop
pop
into
out
push
loope
adc
bndstx
pushf
mov
push
shl
pop
cmovno
push
pop
jne
shr
and
inc
shr
insl
mov
loopne
in
movsl
fstpl
shlb
mov
mov
xor
imul
dec
shlb
jecxz
pop
sbb
jg
je
loopne
sarl
or
loopne
movsb
xor
or
xorl
jno
mov
mov
pop
sub
imul
jmp
jae
mov
xchg
fcoms
jae
fs
mov
scas
movsb
jle
push
mov
out
lahf
test
push
scas
cs
xor
inc
cli
xchg
sbb
arpl
insl
push
stos
ret
call
fsubs
cld
dec
lods
data16
xchg
outsb
cld
mov
adcb
jp
sub
imul
test
aas
lods
mov
sbb
pop
inc
push
mov
outsb
sub
pop
shlb
movsl
xchg
andb
outsb
or
xchg
int3
jb
sti
jnp
stos
cld
jne
sub
fwait
jecxz
xchg
push
pusha
pusha
push
xchg
ret
insl
push
and
pop
int
xchg
sahf
and
sbb
scas
outsl
dec
shl
repnz
xor
push
cmp
iret
popa
adc
into
lds
repnz
jnp
lahf
cmc
or
xchg
push
xchg
jns
test
or
mov
mov
hlt
nop
mov
enter
enter
lods
push
push
jbe
aaa
mov
mov
out
jl
stos
xor
shrl
mov
pextrw
mov
insl
mov
sbb
or
mov
fucomp
hlt
mov
xor
fdivrs
cld
pop
dec
mov
into
pop
adc
dec
pushf
pop
loopne
imul
test
std
adc
loop
mov
sahf
xor
pusha
xlat
movsl
aas
outsl
add
pop
cmp
mov
mov
dec
cli
mov
inc
add
inc
test
adc
mov
dec
sar
scas
hlt
test
scas
int
and
sub
in
pop
ds
fisubs
lods
arpl
and
dec
cvtps2pi
les
jle,pt
or
psubq
mov
sbb
and
pusha
push
cmpb
bound
add
dec
lds
ljmp
in
inc
and
rclb
loopne
or
pusha
ret
insl
div
inc
int
imul
test
adc
ret
push
mov
xchg
push
aaa
leave
daa
mov
in
sub
jge
cmc
pop
gs
gs
pop
push
in
in
sbb
daa
mov
call
insl
xchg
lds
and
test
adc
stos
mov
stos
jns
pushf
cwtl
shlb
mov
faddp
shl
jns
add
and
mov
pusha
xor
or
aas
xchg
push
jns
sub
cmp
ret
inc
cmp
xlat
repnz
imul
xor
adc
pop
mov
inc
testb
dec
pop
aam
cwtl
lods
loopne
rorl
jns
test
or
inc
push
out
jl
sub
mov
dec
mov
xchg
lcall
inc
and
fwait
cmp
push
xor
or
dec
sub
and
sub
inc
cld
pop
jno
mov
pop
bound
sbb
pushf
clc
pusha
dec
xchg
stos
push
aam
adc
xchg
lods
fsubs
iret
mov
jo
pushf
jo
push
repz
and
and
rol
fucomi
and
cmc
lcall
jne
ss
jns
push
jp
inc
cltd
pop
mov
cmp
xor
mov
xor
jle
cmp
adc
pop
cmpsl
xchg
arpl
mov
inc
hlt
jecxz
fs
mov
add
out
cmpsb
test
sbb
xor
inc
lcall
mov
je
dec
mov
inc
dec
insb
cmpsb
push
sarl
cmp
pop
jae
or
mov
fadd
push
outsl
insb
xlat
pop
pusha
adc
xor
xor
dec
xchg
nop
and
adc
rcr
stc
cmc
inc
iretw
pop
out
mov
inc
in
pmaddwd
popa
mov
adc
dec
adc
loopne
xlat
lea
cli
sarb
push
lods
jmp
in
mov
outsb
fcomps
mov
mov
mov
xchg
mov
insl
data16
je
mov
pusha
pusha
dec
bound
filds
jne
inc
aas
add
mov
scas
pop
mov
xor
les
insb
loopne
insl
loop
adc
stos
and
fcmovnu
mov
dec
das
repz
int3
inc
xchg
repz
stos
divl
push
std
xor
loope
lock
pushf
inc
sub
xor
fsts
pop
ss
jae
and
jb
xchg
out
or
and
jle
sbb
movsb
sbb
fidivrl
dec
and
lret
and
repnz
dec
movsl
push
aam
and
cmc
push
xchg
leave
mov
push
cli
lods
loope
ret
outsl
loopne
in
movsb
sbb
lret
hlt
mov
and
sub
lods
sbb
sub
jl
mov
adc
xor
rcll
cwtl
and
lahf
push
or
add
mov
lahf
pop
inc
fs
pusha
decl
and
sbb
cli
or
loopne
ja
mov
push
lretw
gs
and
mov
popa
fsubrl
in
nop
add
sbb
sbb
repnz
xchg
inc
out
and
jecxz
push
mov
dec
mov
cli
scas
sub
dec
mov
shll
mov
add
inc
cmp
add
fucomip
xor
jnp
lods
cmp
repz
subl
jae
rol
fcompl
sub
loopne
lds
push
mov
and
arpl
stc
es
and
dec
jmp
or
pop
sub
stc
mov
inc
pop
cltd
mov
imul
into
int
sbb
sub
dec
test
pop
lods
lcall
cld
loopne
bound
fcoms
test
mov
mov
dec
add
inc
xlat
scas
ja
fists
mov
fisubrl
push
mov
rcrb
push
pop
mulb
pslld
cmpsl
imul
outsb
int3
push
jecxz
sub
es
mov
iret
push
sub
sahf
mov
inc
insl
jns
mov
setnp
std
sub
push
mov
stc
gs
push
xchg
pop
cld
xlat
cld
std
decb
mov
enter
adc
cld
iret
xlat
and
lahf
aad
push
icebp
sub
push
int
pop
rorl
das
jle
inc
xor
addr16
bound
and
jmp
xchg
pop
sbb
sub
or
in
out
xor
repz
push
cmc
and
inc
mov
scas
mov
pusha
inc
adc
adc
dec
jbe
js,pt
les
xor
sub
mov
and
mull
and
fsub
sub
jns
lods
push
cmpsb
mov
inc
pop
push
cmp
pop
push
mov
push
xchg
dec
mov
mov
pop
jbe
inc
inc
push
cs
les
repz
sbb
add
insl
out
xor
push
outsb
xchg
adc
mov
and
stos
ret
cli
adc
inc
dec
les
adc
mov
jno
int
mov
or
add
fwait
sbb
stos
mov
sub
push
mov
xchg
sarb
pop
adc
jno
mov
cmp
mull
out
add
push
scas
scas
test
dec
push
fcomip
ret
test
jmp
js
rcr
add
push
mov
ljmp
movsl
push
xor
mov
lods
in
mov
push
add
loopne
dec
mov
into
pusha
popa
movsb
mov
cwtl
in
loopne
fidivrs
int3
push
mov
sbb
pusha
xor
mov
stos
pusha
repnz
or
adc
pusha
mov
test
pop
repz
in
pusha
dec
pop
fcmove
fisubrl
jnp
jecxz
inc
xchg
out
int3
stos
mov
cmc
add
in
loopne
mov
outsb
push
aam
or
inc
push
int
jne
loop
rclb
push
sub
mov
outsb
ret
idiv
jp
mov
or
xchg
mov
loopne
je
dec
loope
and
sub
neg
cmc
sti
in
test
mov
mov
rcr
jbe
ret
jmp
mov
pop
push
cli
int
or
loopne
mov
mov
and
testl
mov
ret
inc
cs
cmp
mov
call
lea
hlt
outsl
addb
sahf
ret
insb
aaa
popa
fdivrs
sub
jle
ret
lcall
aas
or
and
sbb
sub
repz
and
pusha
adc
aam
xor
std
xchg
insl
push
cltd
xchg
jne
ret
sub
mov
or
leave
mov
mov
xor
in
insl
xchg
fdivp
sahf
or
xchg
lcall
lcall
and
jbe
mov
cmp
inc
jg
fistpl
xor
jmp
js
push
cmpsl
nop
add
mov
pop
pop
mov
cli
repz
fnsave
adc
fld
into
bound
and
add
push
jae
imul
adc
rol
lock
pusha
cmp
and
ss
xlat
pusha
cmc
mov
nop
ljmp
and
pop
jl
xor
or
pop
jp
lcall
movb
out
pop
gs
mov
sub
loop
mov
sarb
jnp
xchg
sbb
test
ljmp
fsts
loopne
mov
sub
inc
or
cmp
hlt
loopne
testl
js
imul
les
fadds
dec
xor
adc
lods
sub
sbb
test
daa
mov
loopne
inc
fdiv
ret
mov
inc
cmpsl
adc
adc
and
adc
inc
test
clc
mov
cmp
mov
mov
pop
cltd
cmpsl
daa
cmp
push
sbb
insb
sub
mov
nop
sbb
jbe
cli
adc
in
les
jp
xor
dec
or
jp
sub
mov
push
pop
and
add
insl
jmp
adc
clc
inc
mov
lcall
inc
subl
and
push
sub
lea
daa
pop
lea
inc
and
or
fwait
push
pop
rcrl
lds
sub
mov
cmp
dec
inc
xor
fdivl
insb
pop
push
or
leave
mov
mov
pop
adcl
shlb
jmp
outsb
inc
loop
pop
mov
cmp
imul
add
jl,pt
mov
sub
adc
inc
push
lahf
scas
jns
out
in
sbb
add
ret
mov
lods
daa
mov
jmp
insl
xchg
cmp
mov
test
pusha
mov
movsb
stos
fcompl
lea
pop
jge
sti
adc
sbb
and
push
or
loopne
or
mov
neg
push
jp
sahf
repnz
xchg
inc
leave
out
cwtl
sub
lahf
cmp
dec
sbb
pop
es
xchg
jb
mov
rcrb
inc
pusha
adc
mov
orb
and
sbb
rcrl
dec
int
mov
jg
ljmp
ds
pop
xor
mov
and
repz
inc
lods
out
bound
test
adc
scas
mov
sub
add
xorb
sbbl
pusha
push
cmp
dec
push
js
push
mov
ret
pop
mov
lea
jo
mov
and
fsubrs
xchg
arpl
jbe
inc
push
or
pop
loop
data16
inc
test
loop
xor
sbb
nop
test
or
scas
or
test
pop
ror
mov
scas
mov
xor
push
popa
xchg
and
jae
xchg
orl
xchg
mov
loopne
xchg
inc
insb
fbstp
or
jae
daa
lods
pop
inc
cltd
testl
sub
fdivrl
sbb
add
mov
xchg
xchg
test
pop
hlt
les
xor
xor
test
jg
fnstsw
inc
xchg
mov
xchg
and
scas
jmp
mov
pop
lock
lods
or
cmp
dec
jle
ret
jg
sbb
imul
add
cltd
cmp
inc
sti
xor
decb
xorl
mov
pop
cmp
mov
push
or
mov
xlat
dec
add
out
jne
loopne
data16
fisubs
xchg
lahf
sub
and
mov
daa
ss
inc
mov
jne
xchg
pop
leave
sub
cmp
repz
dec
hlt
lds
xor
pop
add
pop
int3
fnsave
and
and
jns
mov
addr16
pop
scas
scas
iret
movsb
and
and
data16
mov
xchg
nop
pusha
daa
push
or
dec
inc
pop
pop
xor
mov
movsl
mov
mov
push
dec
adc
repz
jne
les
and
add
jns
cmp
push
fidivs
dec
and
inc
cmpsb
jp
pop
sbb
or
mov
stos
adc
xchg
into
stc
jle
out
jb
sbbb
jmp
and
jmp
pop
dec
sub
stc
xlat
jmp
xchg
repz
stos
xor
push
xchg
xor
inc
popf
mov
adc
cmp
test
mov
inc
jne
cmp
fcmovnu
test
fidivrl
out
pop
outsb
pop
sub
nop
clc
loopne
xorb
inc
cmpl
pop
les
in
adc
add
inc
ss
enter
into
pop
push
inc
aas
push
mov
mov
inc
mov
dec
cltd
cmp
outsl
push
sbb
repz
in
xchg
mov
dec
lret
sbb
les
xor
jbe
pop
push
repz
loope
sbb
sahf
fistl
sub
stos
aas
add
ds
aas
jg
scas
stos
fstpt
mov
add
jbe
stos
or
mull
fwait
cli
les
loopne
shlb
push
int
rcl
pop
adc
imul
jne
inc
lret
rorb
push
add
dec
add
sub
adc
inc
xchg
jmp
imul
popf
and
divl
mov
test
lock
lcall
lret
push
xchg
fstl
dec
movsl
fstl
cs
xor
lea
xor
sub
sub
arpl
xchg
inc
xchg
fisubrs
into
fnstenv
sbb
mov
pop
pop
sti
or
inc
shlb
rcrl
jno
and
mov
repz
and
test
dec
icebp
icebp
fildll
xchg
icebp
testb
popa
jmp
jno
mov
xchg
test
adc
push
cmp
dec
inc
jo
lds
fdivs
xchg
sbb
mov
xchg
mov
loop
mov
xchg
push
ret
scas
dec
mov
movsl
add
and
andb
jns
add
push
jecxz
sub
repnz
cwtl
int3
pusha
stos
cmc
mov
loop
mov
push
adc
cwtl
mov
mov
mov
push
cmp
inc
pop
mov
pop
add
loopne
aam
sbb
addr16
jecxz
mov
push
out
inc
lret
into
jg
push
rcrb
aam
push
jge
jne
jno
xor
test
mull
sahf
mov
push
testb
rorb
ljmp
arpl
cmc
jb
jp
mov
mov
jmp
sub
sahf
cmpsb
cltd
xchg
das
arpl
mov
pop
jo
adcb
push
push
out
inc
pop
or
and
xor
add
ja
test
xchg
sbb
loopne
scas
mov
sub
leave
push
loope
clc
shl
xchg
cmp
ret
mov
ds
inc
push
std
push
sbb
xor
sub
loop
inc
mov
jb
mov
scas
daa
jnp
jo
pop
clc
addb
push
cmpsb
rcl
sbb
rcll
sbb
xchg
mov
xlat
sahf
xlat
dec
push
cmp
jmp
test
inc
add
sahf
insl
jecxz
and
inc
ffreep
xor
xchg
enter
jl
insl
sbb
mov
int
push
mov
jo
jge
cld
ret
sbb
inc
xchg
push
mov
mov
idiv
dec
push
sahf
and
test
sti
lret
dec
xor
add
adc
mov
inc
add
lods
dec
mov
sub
push
js
sbbl
mov
lods
add
subb
xlat
mov
int
fnstsw
sbb
pop
add
int3
addr16
outsl
mov
dec
stos
add
imul
loop
out
push
sub
clc
in
test
mov
gs
mov
push
aam
stos
test
jle
push
mov
cmp
sbb
ds
frstor
push
xchg
mov
lea
mov
ret
xor
cmc
cmp
dec
mov
jne
xchg
pop
add
lods
add
pop
dec
clc
movsl
stc
xor
out
cmp
cwtl
addb
out
inc
push
psubw
lods
inc
incb
lcall
add
inc
imull
vmovapd
repnz
jo
xchg
pop
pop
inc
call
cmp
adc
pop
pushf
lods
add
mov
sbbb
inc
cmpb
xor
mov
and
jmp
inc
adcb
adc
loop
outsb
test
and
hlt
sub
test
test
out
insb
lock
and
icebp
insb
inc
mov
rcl
arpl
stc
jp
or
test
push
stos
add
cmpsl
mov
mov
andl
pop
sbb
fistps
icebp
ret
xor
or
adc
inc
dec
leave
dec
mov
mov
test
add
inc
mov
inc
insl
stos
insb
shl
pusha
jmp
add
push
cmc
out
movsl
decl
cs
jle
sbb
pusha
jle
out
jecxz
pop
xchg
or
mov
lock
mov
jbe
jl
mov
frstor
insb
mov
inc
nop
and
xchg
sbb
ja
cld
or
push
and
mov
rcll
jns
push
cmp
xchg
js
inc
add
in
add
push
iret
cmpsl
aaa
pop
in
into
push
sub
jo
stc
cmp
xor
lods
jbe
mov
pop
fisttpl
leave
lea
lock
aad
and
rcrb
outsb
jle
or
inc
xadd
call
cmc
fs
cmpl
mov
dec
mov
inc
pop
inc
mov
aas
mov
gs
mov
aas
and
movsl
adc
and
mov
aaa
push
inc
mov
push
addb
xor
pop
dec
jp
lods
push
out
into
push
lock
add
jbe
mov
pushf
loopne
repz
lea
enter
push
js
mov
ss
xchg
mov
mov
scas
xchg
insb
lret
xor
nop
cwtl
add
xchg
xchg
xchg
adc
fldt
rorb
xchg
pop
mov
mov
cwtl
fs
push
mov
fiaddl
into
mov
lock
push
inc
iret
das
xlat
inc
jecxz
or
es
dec
rorl
cmp
cmp
sarb
mov
add
mov
cmp
subb
and
xchg
aad
movsl
push
test
mov
sbb
incb
mov
sbb
orb
sub
push
inc
cltd
cmp
mov
nop
js
adc
cmpb
mov
andl
cmp
mov
sbbb
popf
fwait
lods
add
in
pusha
xor
insl
push
push
lds
sub
nop
pop
andb
or
adc
andb
imul
cmp
ret
xchg
das
xor
cmc
pop
mov
call
shl
dec
pop
mov
nop
sbb
repnz
imul
loopne
ds
repz
test
pop
ljmp
or
sbb
pusha
stos
cwtl
and
or
stos
les
out
xchg
mov
dec
cltd
out
or
filds
icebp
adc
push
lar
les
xchg
mov
mov
loopne
mov
jne
pop
inc
jo
stos
mov
lods
rorb
jne
addr16
fneni(8087
out
jge
adc
pop
pushf
aam
loop
xchg
lahf
stos
cltd
sub
addl
pop
loopne
xchg
jl
inc
add
add
loopne
push
test
aam
sub
sar
adc
inc
scas
lret
nop
mov
lods
mov
lcall
cmpb
into
push
idivb
pop
incl
push
xor
imul
adc
and
pop
jno
xor
inc
or
inc
jno
push
ljmp
dec
subb
loopne
adc
add
ds
shrb
fisubrl
lret
cmc
push
into
imul
add
xor
sub
or
cmp
lock
ret
test
fildll
test
mov
pusha
mov
clc
movb
push
mov
arpl
pop
pop
inc
out
cmp
mov
ljmp
lock
sub
inc
stos
nop
push
cmp
mov
lods
push
ds
cmp
inc
sbb
mov
mov
push
loopne
pop
pop
add
repz
xchg
sbb
cmp
flds
out
cld
movb
loopne
add
inc
sbb
xchg
clc
or
in
into
pop
adc
dec
push
fisttps
ss
in
adc
cmpsb
test
and
je
dec
ret
jb
xor
xchg
sbb
inc
inc
push
dec
push
shr
add
idivb
add
xor
sahf
imul
mov
out
xchg
mov
push
data16
in
push
sub
mov
shll
cwtl
jo
push
fmul
repz
sti
inc
dec
pop
add
enter
xchg
nop
add
scas
into
xor
push
pusha
out
xlat
xchg
shll
inc
es
pusha
std
sub
enter
inc
pushf
pop
adc
mov
mov
movsb
stos
mov
std
in
mov
inc
lock
inc
faddl
mov
sub
ftst
and
pusha
out
xchg
in
scas
add
es
mov
sbb
fwait
jecxz
loopne
es
lcall
jno
or
les
xchg
aas
test
add
in
xor
cmpsl
sahf
gs
inc
pop
push
jp
cld
cmpsb
lret
xor
paddsb
in
xchg
dec
out
jbe
call
cmp
mov
pop
pop
xor
and
js
mov
sub
out
xor
push
xor
aas
ss
add
jb
adc
insb
mov
push
out
mov
mov
rcrl
rcrb
pop
popa
mov
mov
xor
and
xchg
cltd
mov
xchg
sarl
mov
aad
ljmp
mov
sahf
rcll
aaa
jmp
int
popa
sub
cmp
shlb
jge
in
out
in
stc
in
push
ret
jnp
jge
mov
jge
inc
dec
pop
dec
in
push
xchg
add
out
outsb
mov
inc
dec
mov
shl
push
cli
mov
dec
inc
mov
sbb
mov
and
push
adc
bound
pushf
andb
add
loopne
dec
test
les
dec
or
arpl
sbb
add
dec
shrb
and
sti
sbb
roll
adc
jp
aam
int3
pushf
push
and
loop
ret
insl
into
out
or
addr16
mov
int
sbb
xchg
js
in
xor
dec
xchg
cld
inc
jno
jne
sub
nop
loopne
cwtl
mov
mov
add
mov
adcb
lock
ja
cmp
in
pop
popf
dec
aaa
nop
pop
sbbb
push
sbb
addb
mov
shl
fnsave
aam
fstpt
add
inc
jbe
ds
shrb
and
jp
push
sti
in
dec
stos
fwait
stos
aaa
movsb
and
fcomps
push
xor
int3
rol
notb
dec
push
test
add
arpl
test
f2xm1
jmp
inc
rol
imul
sahf
inc
jp
cmc
gs
mov
dec
xlat
mov
pusha
cmovb
sar
lret
adc
loopne
aas
push
fwait
mov
cmp
in
ljmp
and
js
aam
sbb
xor
sub
lret
leave
and
or
add
and
add
jecxz
mov
cli
mov
addb
mov
mov
stc
loope
and
jecxz
clc
cmpl
jecxz
orb
aad
push
jp
push
xor
shl
push
pop
iret
pop
sbb
loopne
ss
or
sub
xor
pop
mov
and
xchg
mov
push
addr16
jns
mov
adcb
ret
and
adc
mov
inc
scas
mov
mov
les
fstps
inc
xor
cltd
dec
loope
imul
cltd
mov
addr16
push
orb
inc
test
pop
mov
push
xchg
cmp
sbb
lret
mov
clc
hlt
clc
jp
imul
ss
fmull
lock
pop
add
rol
fcomip
jp
int3
dec
mov
hlt
push
dec
in
push
mov
stos
stos
lea
jg
cmp
ss
stos
enter
gs
add
mov
dec
rorb
sbb
add
pop
cltd
jecxz
mul
andb
mov
dec
adc
andl
sbb
sub
mov
mov
fs
and
fwait
add
ret
into
add
inc
cmp
lcall
push
jmp
mov
or
add
jp
cmpsb
pushf
sub
and
xchg
enter
push
sahf
pop
push
out
mov
dec
scas
dec
test
xorb
lcall
aam
push
mov
bound
scas
cld
or
addr16
adc
adc
out
adc
rolb
sub
jb
mov
adc
aad
push
xlat
lods
out
xchg
cltd
inc
out
cmp
xor
mov
push
clc
dec
lock
mov
jno
sbb
daa
inc
lods
aas
push
xor
dec
rorl
xchg
call
mov
xchg
into
mov
push
lea
dec
xor
ret
je
push
mov
inc
lds
adcl
out
iret
xchg
or
sub
pusha
push
lret
pusha
mov
adc
bound
test
aam
push
fiadds
cltd
jnp
js
cmp
jns
mov
adc
clc
xor
mov
pop
fistps
out
cmp
pusha
dec
call
pop
xchg
dec
addl
and
xchg
adc
cmp
mov
sub
mov
call
movb
movsb
loopne
jg
sbb
cmp
clc
xor
xor
push
outsb
inc
dec
xor
cmp
cmp
or
inc
cmp
add
and
xor
mov
jb
mov
mov
jo
pop
jg
jl
sbb
jmp
sbb
jmp
lods
pushf
rclb
lret
call
faddl
xchg
push
fs
xchg
clc
adc
add
out
lahf
lea
inc
stos
pusha
pop
iret
or
hlt
rcrb
dec
push
cltd
add
scas
gs
add
push
dec
sub
jns
lods
mov
and
mov
lods
mov
push
cmp
mov
or
cmp
out
mov
test
stc
dec
popf
cmp
add
loopne
add
mov
jne,pt
inc
hlt
fistpl
lock
xchg
cwtl
sbb
pop
and
sbb
and
inc
adc
mov
lret
add
jge
js
pop
xchg
xlat
dec
adc
dec
daa
mov
push
je
test
inc
inc
aas
add
dec
fiaddl
or
ljmp
notl
in
and
xor
dec
mov
pop
hlt
cmpsl
cmp
scas
ljmp
inc
aad
push
int3
das
pushl
mov
push
mov
mov
in
pop
mov
vmread
and
test
xor
or
movsb
inc
and
pushf
call
xchg
push
mov
dec
fmull
sahf
movb
add
cmp
imul
xlat
xor
mov
dec
loop
xor
pop
push
lret
in
push
sbb
loope
cmp
rolb
pop
pusha
inc
pop
lock
cmp
sub
adc
add
insb
jb
loop
decb
sysret
or
or
pusha
movsl
fldt
mull
stos
aam
xchg
pop
addl
push
pop
lret
repnz
aaa
sahf
sub
sub
push
in
pop
dec
lds
push
mov
or
in
hlt
in
data16
pop
cmc
push
mov
adcl
cmp
add
push
out
dec
xchg
lods
add
aad
clc
loope
stos
scas
ds
mov
inc
and
outsb
mov
flds
mov
imul
mov
rcrl
push
out
iret
rcrb
xor
in
mov
pop
inc
add
sar
sbb
add
add
xor
cmp
dec
negl
add
jle
xchg
sbb
add
pusha
cmpsb
sbb
sbb
sub
pop
fsubl
std
xor
xchg
dec
in
cli
xchg
hlt
add
clc
imul
dec
add
stos
xlat
mov
xchg
sbb
push
or
loopne
mov
xchg
iret
addr16
add
xorb
add
stos
addr16
lea
adc
inc
subb
ljmp
cmp
push
imul
jg
sbb
inc
fs
test
in
jecxz
mov
loopne
cli
push
aad
xor
pop
mov
fs
imul
and
cmp
xor
add
aad
sbb
mov
add
pop
push
cmc
xchg
dec
add
je
xchg
ret
and
or
mov
test
sahf
daa
vcvtps2pd
jg
xchg
sbb
cmpsb
cmp
dec
jae
jmp
dec
faddl
xchg
xchg
lret
or
loopne
pop
gs
mov
int
xlat
sub
outsl
mov
aam
clc
pop
test
hlt
dec
cmpsb
icebp
fnstenv
lea
fisubrs
lahf
sub
mov
push
mov
mov
sub
test
and
cltd
mov
mov
dec
cltd
pop
cld
push
jge
dec
dec
sbb
inc
sbb
inc
pop
mov
or
jge
xlat
sbb
jae
cmp
push
add
fildl
jno
mov
xorb
mov
cmc
cmp
mov
movsl
and
or
sub
cmp
loopne
dec
enter
xchg
pop
popa
mov
rclb
mov
sbb
ret
inc
jecxz
adc
movsl
adc
fs
inc
std
mov
xor
dec
sub
rol
add
push
mov
jge
negl
mov
xchg
pop
es
and
adc
sub
xor
les
xor
movsl
pop
or
jne
pop
sub
or
adc
cmc
repz
rep
mov
sub
pop
xlat
cmpsl
push
sub
dec
cmp
aam
jmp
jae
mov
sub
jbe
insl
xor
add
jo
nop
sbb
lret
xor
ficomps
fistl
mov
cld
dec
or
subb
lret
and
xor
out
mov
daa
arpl
mov
jbe
outsl
xor
cmpsl
cmpsl
sub
imul
mov
hlt
mov
je
sbb
imul
je
repz
jb
nop
cmp
stos
and
mov
sbbl
mov
lds
xchg
fcomip
inc
xchg
and
mov
xchg
movsl
pop
insb
inc
xchg
loopne
idiv
clc
out
cmp
push
sbb
mov
dec
add
orb
push
les
cmp
inc
insb
aas
push
xchg
push
xchg
fcoml
push
xor
inc
jl
xchg
pop
pop
adc
subb
andl
dec
jo
sub
bound
xchg
mov
lods
or
fsubp
jl
loopne
xor
push
in
and
xchg
out
lods
ret
fnstenv
daa
mov
and
stc
movsl
scas
jb
dec
sub
pop
hlt
pop
mov
inc
mov
aad
mov
mov
mov
push
sarl
stos
jae
iret
adc
jle
adc
push
mov
sbb
inc
sti
jae
movsl
popa
push
sub
push
dec
sub
jns
sub
inc
cli
sbb
add
mov
ret
xchg
daa
add
sub
nop
cmp
pop
add
sarb
jp
cmpsl
or
xor
jo
fbstp
push
loop
adc
movsl
fadd
ja
cmp
or
cmp
pusha
mov
icebp
inc
sbb
xchg
lahf
les
sahf
jl
inc
stos
push
rcl
push
inc
and
adc
es
fisubl
jle
je
clc
and
jg
js
jae
adc
jo
pushw
loop
mov
pand
ljmp
sub
jle
xor
out
jne
sub
xchg
push
stc
cmp
iret
lods
fisubl
cmp
sbb
mov
loopne
push
les
cmp
xor
lods
pusha
leave
mov
popa
push
push
lret
insl
sbb
pusha
test
xor
sub
and
repnz
cmpsb
js
or
or
inc
adc
and
mov
movd
popa
xchg
std
loopne
mov
push
shrl
aam
test
imulb
add
mov
sbb
mov
mov
and
dec
enter
and
rorb
xchg
add
fs
insl
stos
pop
xchg
mov
lds
movsb
call
movsb
rcl
testl
rcrl
pusha
mov
cld
arpl
sbb
int3
jae
fldt
mov
mov
cmpsl
daa
movsb
xchg
and
pop
push
xchg
add
mov
daa
fcmovnb
js
xchg
jae
dec
orb
mov
aam
dec
mov
mov
jo
xorl
cs
and
push
jae
enter
ds
xor
xor
jmp
inc
insl
xchg
pushf
loopne
adcb
push
push
dec
pusha
leave
mov
adc
pusha
adc
sbb
repnz
pop
jmp
xchg
add
outsl
lret
or
js
or
rcrb
mov
add
inc
xor
pop
jne
movsl
insl
mov
xchg
push
mov
and
add
pusha
cmc
cs
pusha
mov
mov
jp
mov
cmc
ret
push
addl
in
lock
pop
mov
outsb
mov
cmpsb
pop
xor
mov
std
fildll
pop
loopne
sub
or
loopne
les
pop
ljmp
mov
test
out
add
sbb
xlat
data16
sub
xor
push
dec
aad
push
push
and
adc
push
sub
inc
in
fidivl
push
test
lret
xor
push
and
xor
dec
dec
lret
mov
and
aaa
std
ja
ds
cmpsb
xchg
imul
add
scas
dec
jecxz
gs
pusha
ret
cmp
jne
data16
dec
pop
xor
lret
dec
insb
jne
push
jecxz
adc
inc
jno
adc
dec
pop
repnz
into
mov
pop
test
xor
cld
rorb
mov
out
lods
cmp
icebp
cmpsb
sbb
add
sarb
ljmp
ds
std
lcall
scas
pop
jmp
cmpsl
mov
inc
in
xchg
xor
push
mov
jbe
out
jecxz
push
je
movsb
int
test
sub
es
sbb
adc
inc
cmp
aad
pusha
test
aam
out
es
or
fcmove
popa
cli
cmc
inc
mulps
mov
push
iret
pop
test
repnz
mov
push
adc
enter
push
lcall
mov
inc
xchg
in
push
lret
cmp
lock
repnz
xchg
inc
jns
insb
pusha
xchg
lret
pop
sbb
add
loopne
subb
mov
jecxz
cwtl
and
push
cmp
repnz
and
add
adc
lods
sbb
or
in
push
stos
adc
inc
in
jae
or
add
mov
movaps
mov
add
and
aaa
mov
test
js
push
xlat
das
pushf
jo
xchg
dec
loopne
out
mov
loopne
sbb
mov
mov
xor
pop
fwait
imul
and
out
stos
mov
aam
sub
adc
and
adc
iret
pop
in
data16
jp
sbb
sbb
movsb
xchg
nop
rol
pop
aas
push
mov
or
mov
pop
lret
ds
sbb
and
mov
push
fildll
mov
xor
shlb
rcrl
sub
jp
mov
enter
orb
cmp
enter
mov
pop
mov
and
dec
pop
xchg
jl
dec
push
adc
andl
pop
adc
jl
jns
pop
or
pop
out
mov
nop
adc
sub
add
fs
push
jecxz
loope
or
add
mov
mov
stos
mov
jge
mov
dec
add
ss
xor
adc
pop
test
mov
cmpsl
dec
imul
ja
xlat
iret
cmp
je
popf
insb
inc
adc
ss
rcll
lea
pop
push
dec
pop
or
sbbb
jne
stos
push
dec
mov
add
mov
push
in
das
dec
jno
cmpl
mov
mov
aas
push
enter
loope
scas
jae
mov
int
aad
insl
rcr
ja
mov
mov
pop
pusha
lret
cmp
mov
mov
jge
sub
popa
mov
dec
dec
cld
cmp
shrb
xor
add
filds
inc
out
iret
fmuls
hlt
sbb
mov
and
and
dec
inc
fstps
jecxz
test
inc
mov
jecxz
or
iret
pushf
sbb
data16
call
pushf
shlb
inc
inc
in
call
jno
and
pusha
cmp
mov
and
imul
je,pt
inc
and
sub
scas
adc
cmp
jb
call
xchg
js
sub
call
sub
sti
cwtl
shlb
jle
sub
or
imul
lock
sbb
sti
lahf
out
lds
stos
sub
xchg
xchg
test
push
pop
mov
mov
ds
or
rcr
jbe
data16
push
mov
or
outsl
icebp
sahf
sbb
push
cmpsl
stos
imul
dec
xor
jmp
addr16
faddl
dec
sbb
repz
leave
into
andl
pop
clc
inc
xor
and
cmp
mov
out
push
mov
stc
mov
xchg
and
aaa
pop
loopne
xchg
xchg
add
mov
and
jmp
rolb
xchg
mov
jb
jb
lcall
cltd
jnp
lret
dec
push
inc
stc
and
rorb
mov
leave
adc
jg
into
addb
jne
stos
xchg
and
jb
push
and
cltd
jae
sbb
and
in
push
push
int
imul
fld
sbb
loopne
push
test
testl
pop
dec
dec
imul
aas
fimull
in
addr16
in
mov
lock
pop
daa
sub
xor
and
add
inc
mov
addr16
pop
and
cmp
incl
lock
imul
and
dec
mov
cmp
in
add
pop
mov
pop
or
pop
ljmp
push
sub
xor
xor
xorb
repnz
cltd
pusha
jb
inc
jnp
in
mov
popf
mov
xchg
pop
in
ret
cmp
mov
test
fldcw
fstl
or
sbb
or
popf
les
xchg
test
xchg
insb
push
jl
sidtl
adc
mov
rol
dec
scas
mov
or
movsl
pop
lds
int3
inc
xor
test
mov
mov
fs
out
sbb
out
add
jne
xor
xchg
xor
in
or
and
inc
xchg
lock
outsl
or
sbbl
jno
pop
pushf
mov
adc
mov
adc
fstps
and
flds
mov
or
add
addr16
push
je
mov
push
or
jl
push
adc
add
xor
sub
mov
and
push
inc
popf
addr16
and
push
jmp
stc
in
lea
js
fwait
ja
outsl
pop
sub
js
aas
hlt
push
and
and
cmpsl
push
aaa
scas
outsb
jb
mov
dec
ret
push
jecxz
leave
les
jmp
mov
fldcw
movsb
mov
push
test
daa
cs
pusha
jle
rorl
mov
push
cmp
jbe
mov
out
cmpsb
mov
rcrb
jnp
mov
jmp
pusha
dec
outsl
pop
sbb
inc
add
jecxz
jp
dec
adc
push
aad
ficoms
add
jg
adc
or
add
ss
popa
mov
loopne
imul
cld
sub
or
add
ja
adc
jmp
ficoms
jae
enter
fcomi
test
imul
push
jns
jne
imul
mov
pusha
dec
add
pop
decl
mov
push
xor
daa
pop
inc
sbb
cli
lods
push
dec
mov
lock
jae
adc
inc
dec
pop
cmp
mov
outsb
push
mov
sbb
into
pop
repnz
loopne
gs
add
loopne
movsb
test
cli
adc
loopne
cwtl
xchg
loopne
icebp
fnstsw
pop
mov
jnp
mov
mov
xchg
je
jnp
jp
cmpsl
pop
mov
xlat
jecxz
mov
xor
pop
adc
and
shlb
push
cmp
mov
icebp
inc
cwtl
test
lods
decl
xchg
mov
pop
mov
ljmp
pop
imul
mov
jecxz
movsb
shlb
stos
push
or
je
mov
cmp
repnz
adc
and
aaa
sbb
xrelease
shrb
lods
and
imul
das
cltd
movsb
or
das
cmpsl
outsl
pop
jmp
and
ss
nop
mov
adcl
or
sarb
sub
ffree
or
inc
adc
or
mov
lods
push
movsb
cmp
cli
rol
adc
jnp
jb
jecxz
jge
xchg
mov
std
sub
test
and
outsl
inc
mov
xor
mov
or
movsb
loopne
fdivrl
or
sub
cld
stc
nop
shlb
rol
sbb
mov
mov
push
mov
dec
sbbb
pop
jns
in
ss
jmp
dec
xor
mov
int
push
lods
push
jbe
cmpsl
fs
jne
scas
adc
adc
mov
lcall
in
and
push
and
daa
fwait
jb
add
xorb
je
sbb
pusha
push
and
stos
lods
ret
jbe
adc
sub
pop
and
push
cmp
add
dec
add
mov
aam
rorb
std
inc
mov
add
xchg
fwait
add
rcl
push
mov
mov
rcrl
xlat
outsl
mov
push
mov
push
out
pop
jecxz
push
js
sahf
mov
dec
mov
lret
or
pusha
in
cwtl
push
loope
jo
adc
cmp
sub
adc
pop
lods
mov
and
xor
movb
fisubs
movb
loopne
mov
fisttps
sub
dec
loop
push
jle
lock
sub
stos
mov
or
lcall
xchg
mov
and
pop
mov
in
icebp
or
adc
cs
jl
sub
add
dec
push
or
mov
inc
bound
adc
adcb
mov
and
fwait
lods
pushf
hlt
add
mov
inc
pusha
int
mov
sar
dec
mov
aaa
mov
mov
movsl
pop
push
hlt
out
cmc
repz
mov
lcall
loopne
push
cmp
mov
mov
pusha
fidivrl
jnp
lock
testl
fucom
mov
aas
or
rclb
loopne
lahf
roll
gs
arpl
cmp
jae
mov
fsub
sbb
adc
rolb
push
sbb
push
icebp
cmp
mov
dec
pop
addr16
mov
xchg
xchg
inc
add
or
hlt
and
shlb
jnp
data16
icebp
dec
jns
or
cld
inc
xchg
pop
cmp
aam
fs
clc
and
jnp
add
and
xchg
neg
pop
jbe
scas
or
pusha
int3
fbld
test
pop
or
pusha
xor
xchg
mov
push
clc
cs
push
enter
mov
xchg
inc
pop
bnd
loope
iret
sti
movsb
cmc
stos
xchg
xor
nop
mov
push
out
sbb
xorb
dec
mov
mov
or
adc
ds
fwait
ds
jo
mov
or
sbb
lds
subb
ret
sub
mov
push
icebp
jp
sti
xor
and
mov
or
jno
cmpsl
pop
xchg
lock
std
mov
sbb
xchg
inc
sbb
into
sub
cwtl
loopne
sub
mov
aaa
test
cmove
fidivl
pop
imulb
imul
inc
mov
test
sbb
lds
js
leave
dec
jle
sbb
clc
inc
test
jbe
fs
mov
and
lods
mov
adc
sub
mov
pusha
loop
inc
cmp
pop
movsb
dec
sbb
xchg
jge
pop
inc
mov
out
imul
sbb
mov
lds
aam
inc
push
ret
add
fldcw
loopne
jl
inc
aam
loop
lea
and
add
xor
push
jns
lcall
xchg
pop
lcall
iret
adc
adc
shlb
out
hlt
xor
dec
and
jecxz
mov
xorl
mov
das
cmp
lret
push
push
dec
call
jle
or
and
test
stc
jo
xchg
loop
xchg
inc
iret
rolb
push
divb
sub
xor
subb
push
cmpsb
cld
push
cmp
lret
inc
int
aam
js
dec
shrl
xchg
jge
loop
dec
iret
inc
dec
cmp
cmp
movsl
sahf
sub
jl
in
cli
subl
mov
int3
fisubs
leave
mov
mov
sbb
inc
inc
add
mov
rorb
inc
add
cmp
shrb
push
dec
aad
add
cli
cmpsl
outsb
shrl
out
in
pop
rol
mov
inc
gs
dec
mov
fisubrl
pusha
push
testl
pusha
test
pusha
dec
push
and
push
mov
insb
cmp
inc
scas
shrl
adc
pop
addb
scas
adc
cwtl
sub
aad
push
insb
mov
push
xchg
shll
je
sbb
call
sbbb
inc
lahf
jno
jge
xor
cmp
xlat
xchg
xchg
gs
enter
call
sti
outsb
dec
pop
pop
scas
dec
jp
add
adc
jne
negl
dec
inc
add
rcrb
lock
scas
call
jg
in
aaa
cli
mov
or
dec
jge
faddl
sbb
insb
bound
test
aaa
mov
subb
push
jb
jg
push
jo
aam
dec
xchg
cmc
call
mov
fisubl
inc
rorb
add
and
stc
loop
jae
das
rcrb
in
mov
int
add
dec
adc
cld
jnp
pop
pop
adc
add
test
out
bound
xchg
cmp
push
or
test
sarb
in
bound
and
sub
cmp
mov
and
in
inc
mov
push
test
or
inc
and
xchg
sub
pop
push
push
xor
sbb
add
loope
push
scas
pop
add
mov
insb
and
sub
loopne
pop
out
add
mov
push
sbb
test
inc
xlat
cmc
jnp
call
leave
addr16
mov
mov
cmp
and
xlat
adc
test
pop
jae
or
lahf
data16
fnstcw
out
icebp
adc
adc
loopne
loope
jae
cmc
sti
dec
cltd
test
je
fisttpl
sbb
mov
xchg
loopne
sub
inc
push
xor
dec
add
push
xchg
cmp
dec
shll
insb
imul
add
fstpt
mov
sbbl
and
iret
out
and
je
mov
aas
leave
and
mov
call
jns
idivb
into
xchg
jae
jecxz
into
aaa
inc
fildl
addl
sub
lret
pop
jno
dec
pop
xor
iret
test
int
in
arpl
sbb
inc
data16
in
mov
icebp
mov
inc
movsl
push
cmpsl
scas
push
bound
int
movsb
adc
inc
scas
daa
lret
mov
mov
dec
inc
xor
es
cmp
lahf
pop
xor
shr
in
push
sti
jnp
lret
mov
out
jle
ret
nop
mov
pop
fcompl
mov
imul
or
xor
mov
jl
movsb
mov
insb
movsl
arpl
and
jl
or
loopne
mov
sbb
push
std
mov
mov
jmp
js
adc
or
jae
aad
or
sub
subl
rorl
mov
xchg
je
shlb
pop
push
and
cld
aaa
outsl
imull
rclb
call
sbb
add
inc
stc
mov
enter
ds
push
and
cmp
cmpsb
push
dec
mov
xor
inc
daa
jmp
ficompl
sub
outsl
mov
push
mov
cmp
fdivs
pop
jecxz
call
bnd
les
dec
ja
aas
sub
pop
jns
pop
add
pusha
push
fnstcw
fmuls
mov
clc
xor
cmp
fnstenv
sbb
sbb
and
lea
pushf
in
xchg
cwtl
inc
inc
shlb
and
test
sub
jp
mov
push
mov
repz
inc
lahf
xchg
ret
out
inc
gs
jle
test
mov
push
test
inc
movsb
jg
test
push
sub
xor
popf
or
inc
lods
xor
lea
outsb
jnp
cmp
adc
imul
repnz
cs
lahf
pop
push
gs
test
jg
cmp
lds
or
fincstp
lods
sub
lods
lods
orb
mov
pop
and
mul
push
adcb
loopne
les
inc
clc
xor
pop
pop
scas
sbb
xchg
mov
test
cmp
and
dec
fiaddl
shrb
add
and
shl
xlat
xchg
adc
xlat
pop
outsl
aad
mov
loopne
inc
mov
ficoml
out
or
and
adc
fnstenv
xor
mov
hlt
mov
mov
lock
sub
ja
mov
pop
cmp
js
adcb
leave
mov
mov
ss
test
pusha
movsb
in
push
cmp
mov
rol
push
loope
inc
or
adcl
and
icebp
test
push
aas
out
lcall
cmp
inc
bound
rcrb
sbb
mov
adc
cs
or
push
pop
sbb
gs
add
loope
xor
push
mov
add
fsubs
xchg
aas
lods
jbe
mov
mov
repnz
jmp
adc
cmpsl
imul
xorb
loop
adc
and
lods
subl
xchg
xor
sbbb
test
push
ds
test
rcr
jnp
cmp
add
aas
icebp
arpl
and
je
int
push
lock
push
push
clc
mov
jne
jbe
fs
mov
fnsave
inc
jg
popa
faddl
lods
sar
cltd
mov
aad
test
dec
and
mov
aam
ljmp
cmp
aam
mov
xor
mov
cld
fs
aad
out
sbb
mov
pop
hlt
inc
fmull
push
cmp
xchg
xor
jecxz
data16
idivl
sarl
lret
dec
insb
addr16
xor
push
lret
les
and
filds
movsb
and
inc
clc
mov
ja
int3
xor
enter
jo
mov
cltd
out
dec
sbb
inc
subl
movsb
pop
mov
and
inc
dec
sub
xor
pop
sub
push
xchg
repz
test
lods
negb
pusha
lea
les
and
icebp
mov
in
sti
inc
enter
push
fisubrs
std
dec
addb
loopne
or
sub
dec
push
outsb
sub
insb
inc
mov
xor
loopne
cli
jno
call
mulb
icebp
mov
add
shlb
stc
dec
jl
push
aam
insb
shrb
dec
dec
ljmp
roll
push
lahf
jecxz
push
lds
sbb
mov
movsb
jp
imul
divb
push
loope
adc
rclb
bound
fs
mov
dec
push
xor
add
add
mov
test
dec
mov
imul
jp
push
cli
sub
icebp
stos
mov
mov
dec
fdivs
arpl
push
xlat
sbb
pop
push
pop
add
pop
push
pop
mov
imul
mov
sahf
pop
in
mov
mov
xorl
pop
mov
xor
rclb
push
jae
sbbb
adcl
insl
mulb
sbb
fstpl
stos
jl
addr16
xor
notl
add
push
mov
ljmp
int3
and
loope
push
push
add
loopne
das
inc
sbb
icebp
xor
xchg
incb
lods
and
mov
stos
xor
mov
cmp
adc
push
test
pop
dec
sub
xchg
pop
and
cmp
cs
bound
test
arpl
arpl
fs
cli
mov
mov
repz
inc
je
idivl
scas
cmp
ja
loop
mov
test
or
pop
fwait
jg
sbb
addb
pusha
ja
xchg
xor
fisttpl
fstpt
and
fisubs
sub
mov
adc
jmp
jl
mov
and
push
in
sbbl
dec
and
movsb
adc
xchg
js
sub
aam
mov
out
pop
push
jbe
mov
loope
lret
aaa
mov
aas
dec
mov
xchg
pop
push
adc
mov
fiaddl
and
sahf
inc
icebp
jno
test
loope
pusha
sbb
xchg
lds
repz
xchg
enter
arpl
inc
xchg
cmp
aaa
mov
lock
lock
add
sub
iret
mov
lods
fisubl
popf
inc
push
ds
daa
pushf
lods
loopne
icebp
out
dec
jmp
sub
cs
and
mov
dec
shl
push
int
xchg
jnp
cmp
dec
mov
hlt
rclb
sarb
add
inc
scas
jmp
sbb
popf
and
mov
lds
mov
sub
lret
repz
lods
xor
insl
cmpsb
inc
mov
in
mov
sub
mov
sbb
shll
clc
rclb
fwait
xlat
jns
mov
cmp
mov
jb
insb
out
fmulp
dec
or
outsl
fs
add
cmp
clc
mov
out
inc
in
lret
pop
push
jle
push
mov
pop
ficomps
test
or
push
lods
pop
xchg
cwtl
in
mov
hlt
or
loopne
jmp
movntq
out
int3
jle
mov
lock
shrl
jl
lahf
mov
jl
xor
aam
xchg
add
loopne
mov
and
fidivl
sub
fmuls
or
and
and
inc
in
movsb
inc
aas
movb
cmp
std
xor
addr16
outsl
scas
aad
mov
dec
xchg
mov
add
dec
pop
lcall
jmp
mov
lcall
adc
mov
jo
rolb
lret
movsb
push
mov
ds
mov
pusha
push
or
mov
or
add
lods
xchg
loopne
mov
adc
loopne
and
add
outsl
fnsave
lahf
dec
cmp
sarb
cwtl
cmp
xchg
aam
xchg
std
lahf
loope
mov
sbb
and
cs
je
and
sub
scas
dec
and
jg
xor
mov
orb
dec
adc
xor
mov
xchg
inc
mov
push
sbb
out
jbe
jo
enter
fsub
ljmp
shlb
leave
incl
inc
push
add
pusha
push
adc
mov
aam
inc
cs
cwtl
cmp
push
das
fs
push
xor
mov
sub
push
mov
xchg
hlt
imul
outsl
loop
or
sbbb
fidivrs
lds
cmc
sti
hlt
jne
add
or
pop
jmp
or
pusha
std
adc
inc
lea
hlt
sub
jl
mov
stos
movsb
imul
ljmp
mov
call
pop
push
lahf
push
mov
xor
add
divl
sbb
adc
fsts
pushf
faddl
orb
cltd
adc
xor
rorl
sbb
xor
aam
sbb
pop
add
dec
fdivs
hlt
pusha
cmp
mov
movsl
cmp
rcrb
cmp
mov
pop
inc
and
xchg
mov
sbb
pusha
mov
or
add
out
mov
add
add
mov
mov
mov
pusha
hlt
pop
mov
test
rol
mov
enter
in
add
enter
ret
aam
lahf
cmp
jg
sbb
and
pop
push
rorl
cmpb
daa
aad
xchg
add
in
mov
sbb
jnp
cwtl
or
shrl
arpl
js
fidivrs
stc
dec
sub
pop
int3
mov
imul
int3
and
mov
dec
inc
icebp
jns
mov
mov
cwtl
orb
jle
std
js
in
test
or
faddl
nop
cld
mov
aam
mov
adcl
sbb
push
lret
loopne
mov
or
sub
jo
push
inc
movsb
cmpl
xor
cmp
fwait
icebp
cwtl
fs
ljmp
inc
movsb
cld
adc
das
pop
movsl
jle
sbb
adc
dec
test
pushf
in
mov
rcl
pop
inc
int
fwait
insb
into
cmp
addr16
dec
repnz
out
je
cmp
xchg
mov
fildl
pusha
jae
mov
aam
cmp
cmp
push
fildll
in
adc
subb
and
inc
adc
jns
cli
nop
aam
pop
movsb
hlt
ret
mov
sub
and
xlat
sub
imul
stos
adc
repz
push
imulb
test
mov
push
xor
sub
es
aad
pop
dec
xlat
ret
mov
mov
popa
enter
inc
pop
jbe
cmc
and
scas
jp
loopne
mov
mov
lods
or
call
pop
call
ss
xchg
aaa
fs
xchg
stos
mov
dec
pop
dec
push
xor
das
sub
jp
shr
outsb
or
nop
mov
dec
jecxz
aas
jle
and
sbb
les
inc
loope
mov
pop
ret
ja
fistps
leave
and
test
inc
das
ret
or
pop
and
push
lsl
lcall
inc
mov
and
int
int
xchg
fcmovnu
mov
loop
sub
adc
movsb
scas
sub
xchg
sbb
xchg
mov
lret
jl
ds
movsb
xlat
pop
add
sub
jle
adc
mov
mov
or
stos
and
cmc
shl
cwtl
sbb
fisubl
inc
cmp
cmp
push
std
outsb
fimuls
daa
or
pushf
mov
ds
xchg
xchg
mulb
and
lret
outsb
std
push
mov
scas
out
sub
loope
or
pusha
cwtl
adc
inc
idivl
adc
loopne
and
xor
mov
in
and
pop
in
pop
pusha
inc
insb
push
pop
xchg
shlb
es
sub
xor
add
push
push
outsb
dec
inc
es
dec
adc
inc
movsl
fdivr
insl
jmp
loop
icebp
mov
lret
mov
fisubs
mov
sbb
and
ret
pushf
in
enter
enter
sbb
dec
mov
xchg
xor
sub
loopne
dec
in
sbb
in
adc
stos
aam
jne
push
xchg
xor
adc
pop
sbb
loopne
dec
notl
cwtl
rclb
ret
sbb
mov
outsl
aaa
faddl
inc
std
push
hlt
and
lcall
and
add
out
or
add
in
add
inc
pop
into
sahf
pop
pop
daa
orl
sbb
inc
xor
xor
stos
js
rcll
pop
dec
dec
xchg
mov
in
mov
adc
lret
repz
pusha
div
cmp
mov
insb
jnp
mov
cwtl
add
outsl
je
jle
pushf
add
sub
pop
das
and
inc
mov
imul
fildll
sahf
adc
sar
test
jb
and
outsb
jge
test
pushl
sub
and
adc
fwait
cs
mov
dec
pop
xchg
nop
mov
ret
sub
pusha
pop
inc
mov
push
or
or
cmp
mov
cmp
test
test
loopne
fisubl
jp
xor
pop
sbb
mov
sbb
push
ret
aas
jb
in
cmpl
dec
sti
jne
mov
sarl
aam
or
inc
aas
test
cmp
and
jae
pusha
std
mov
mov
adc
loop
lret
jle
stos
imul
in
repnz
jl
xchg
andl
icebp
das
idivl
jp
fnstcw
mov
fnstenv
aas
subb
jnp
push
jbe
fiadds
insl
add
mov
ret
nop
pushf
mov
xor
lock
negb
xor
adc
add
mov
jae
sbb
xlat
cmp
dec
pop
enter
jns
sbb
lds
xchg
loopne
loopne
mov
imul
or
mov
test
out
bound
rol
lcall
mov
cmp
jp
xchg
add
fwait
sti
inc
loopne
adc
xchg
jmp
mov
addr16
movsb
pop
in
adc
es
cmp
ss
adc
std
andl
cmp
int3
push
jmp
stos
jb
rorl
fcoml
icebp
inc
xor
je
les
nop
cmp
and
fildll
loop
cmp
add
insl
je
mov
mov
xchg
add
inc
fnsetpm(287
shl
sti
in
mov
negb
xchg
movsb
cmpsb
pop
push
adc
push
mov
or
cli
dec
iret
decb
lahf
xchg
frstor
enter
pop
or
call
inc
into
mov
jno
test
add
lcall
sub
pop
and
add
push
fisubrs
call
shrb
sti
lea
sbb
into
inc
xor
insb
loopne
cmpsb
shll
jnp
lahf
scas
jmp
inc
jno
fimuls
mov
jne
add
ljmp
push
sub
arpl
rol
shrb
aam
int3
inc
pusha
inc
insb
jg
sub
pop
leave
xor
sbb
and
mov
mov
mov
push
notb
stos
inc
xchg
les
xor
fs
cwtl
cmp
push
sbb
in
pop
adc
mov
loope
pop
fnstsw
stc
or
fbstp
test
icebp
fidivrl
cltd
out
stos
dec
adc
out
adc
add
stos
icebp
or
adc
sbb
pusha
fistl
xchg
jo
enter
insb
aad
out
or
stc
test
mov
pop
pop
cld
std
mov
lock
and
addr16
inc
fwait
aas
daa
pop
xlat
sbb
rcrl
add
cmp
ljmp
fidivs
add
lcall
fucomp
icebp
xor
hlt
push
lret
adc
out
test
mov
and
or
aas
push
xchg
xor
flds
in
jbe
jns
rorl
mov
pop
xorl
xchg
or
sbb
test
sub
out
adc
dec
or
rclb
jecxz
punpckhwd
push
jecxz
pop
dec
inc
filds
mov
pop
loopne
cmp
push
xchg
xchg
aaa
mov
mov
mov
pop
pop
ss
and
inc
adc
stos
scas
cld
add
inc
xor
call
test
or
lahf
lret
mulb
jne
leave
xchg
push
mov
inc
cmpsb
aad
xor
js
inc
lds
xor
enter
inc
fwait
xchg
insb
movsl
frstor
add
inc
or
jge
jnp,pt
mov
mov
sub
xor
rorb
add
xor
out
in
rolb
sub
or
shl
add
lcall
fs
cmp
xchg
test
mov
jg
lcall
rclb
les
mov
rorl
push
int
out
mov
or
and
lret
mov
dec
test
dec
outsb
dec
pushl
add
arpl
sahf
scas
lods
dec
insl
add
dec
repnz
imul
adc
shr
mov
mov
sbb
and
add
mov
mov
pop
mov
repz
inc
mov
xchg
arpl
jmp
int
push
ja
in
and
int3
add
call
jl
or
jns
outsb
negb
call
and
mov
enter
jnp
xchg
daa
fucomip
fadds
fbstp
insl
push
and
ljmp
or
mov
and
mov
sahf
xor
cmpsl
dec
jns
push
pop
sbb
loopne
push
and
scas
lods
xlat
cmp
std
leave
xor
loope
mov
cmp
mul
lahf
pushf
dec
pusha
outsl
cmp
mov
orl
test
aad
pop
icebp
push
pop
push
cmp
sarb
cmc
mov
mov
cmp
std
lcall
pop
subl
jnp
push
rdtsc
or
mov
fcompl
mov
sbb
and
mov
pmulhw
in
testb
or
out
lret
call
call
pop
add
dec
mov
jecxz
push
jp
cmp
scas
in
stc
sub
movsl
and
jbe
or
inc
jg
pop
xchg
add
orb
cmp
mov
stc
fldenv
stos
sbb
les
inc
insb
loop
insl
add
call
js
ss
xlat
pusha
xorb
loopne
mov
jns
jns
and
out
fdivr
push
mov
mov
popf
arpl
gs
xor
scas
loopne
push
jbe
dec
outsl
push
pusha
out
and
mov
add
out
pop
bound
les
fstl
xlat
xchg
aaa
hlt
cmp
pusha
loopne
hlt
jb
and
fs
notb
pop
scas
add
sbb
inc
cld
fdivs
mov
in
mov
int
jo
push
xor
test
orb
sub
jmp
cld
stos
adc
clc
add
jns
je
loopne
mov
test
xor
aam
shr
sti
cmp
push
and
or
cld
or
and
add
lcall
adc
cmc
popf
sti
lret
andb
push
adc
xor
les
lock
mov
pop
test
add
jb
mov
sahf
push
mov
mov
aas
fdivrs
cltd
fsubrs
js
mov
mov
mov
fimuls
into
or
arpl
ficoml
adc
pusha
test
pop
jmp
aam
sbbl
int3
insl
pop
xor
outsb
jo
in
loopne
ret
loopne
gs
and
repz
cld
insb
sbb
inc
fisubs
in
xchg
test
mov
into
jg
dec
mov
loopne
pushf
xor
inc
jge
jb
daa
repz
insl
xchg
cmp
push
arpl
int3
pop
lods
rcrb
pushf
addb
push
xor
movsb
pusha
jle
sbb
cmp
adc
or
add
shll
mov
mov
mov
adc
repnz
xchg
adc
and
pop
mov
and
icebp
mov
inc
call
lock
test
mov
xchg
hlt
and
std
dec
xor
push
hlt
xchg
lods
pop
in
cmc
loop
sti
lea
fdivrs
lret
sbb
and
stos
jns
pop
les
sub
pop
aaa
jne
mov
mov
loope
adc
mov
jbe
cltd
inc
xchg
cmp
imul
fwait
cmp
xchg
xchg
pop
and
lods
fs
aam
imul
testb
cltd
or
xor
add
dec
adc
aad
lea
mov
cmp
sub
loopne
push
insl
lods
adcl
fs
rol
testl
hlt
push
mov
push
mov
in
xchg
and
adc
add
and
pop
inc
les
leave
xor
out
and
aad
or
add
cmp
jl
dec
js
inc
adc
push
mov
dec
cmp
push
lds
stc
loopne
xchg
or
fistpl
inc
xchg
xchg
cmp
insb
testl
and
je
push
mov
cmpsb
bound
fwait
mov
jae
insl
mov
push
adc
subb
in
dec
rcl
pusha
add
test
bound
aam
sarl
les
and
int3
or
cmp
mov
jecxz
pop
iret
lea
divb
ret
mov
add
mov
xchg
mov
dec
and
and
or
mov
jl
imul
lds
sti
xchg
pop
cld
cmp
and
aad
rcrb
cmc
xchg
arpl
mov
ss
xchg
or
loop
or
xchg
hlt
jno
aad
mov
and
xchg
in
cvtpi2ps
mov
cmpl
adc
xorb
fcomps
stc
test
mov
idivb
jl
sbb
addb
pop
and
pushf
mov
add
add
fsub
out
sbb
lods
sbb
loopne
add
push
movsb
mov
ret
add
addr16
cmp
push
push
es
mov
mov
insl
roll
pusha
fwait
dec
cmp
adc
and
jge
inc
hlt
aaa
nop
loopne
inc
push
mov
arpl
pop
mov
cmp
pop
pop
push
jg
and
enter
xor
rolb
js
pop
sbb
and
movsb
loopne
pop
repnz
sub
dec
sbb
mov
out
int3
dec
cwtl
mov
lahf
aam
pop
shll
push
add
sub
arpl
data16
mov
stos
loope
lods
push
sbb
xchg
xchg
mov
js
cmp
mov
add
pop
arpl
loop
jbe
and
inc
sti
call
cwtl
xor
andl
insl
sti
xchg
into
or
add
xchg
dec
mov
mov
inc
movsl
lods
and
pop
and
rcrl
ja
adc
loopne
rorl
jmp
rorb
sti
aaa
push
push
ret
dec
and
je
sarb
cmpsb
les
and
cmp
cmc
out
mov
add
ret
adc
jo
shlb
neg
int3
cmp
xchg
stos
mov
jne
movsb
rorl
das
hlt
push
sahf
mov
and
add
jo
mov
pop
dec
xchg
stos
mov
aad
addr16
test
daa
and
nop
enter
cld
call
xor
xchg
stos
outsb
xor
xor
xor
das
pop
push
loopne
hlt
pusha
dec
xor
pusha
inc
in
push
mov
or
add
sarb
and
add
xchg
imull
aaa
jge,pn
adc
mov
mov
inc
out
jno
mov
add
inc
add
ret
lret
push
aad
push
or
insl
xchg
xchg
sbb
adc
aam
test
add
sahf
and
and
fldlg2
jl
sub
jmp
lock
cmp
xchg
outsb
fcmovb
test
sbbl
inc
dec
jno
mov
sti
lcall
or
ss
dec
inc
sub
sub
loopne
in
push
cmc
cmp
out
inc
inc
xchg
sbb
pop
mov
sub
or
pusha
adc
jmp
std
iret
loope
enter
lcall
dec
sbb
or
insl
or
or
sar
xor
ror
shlb
outsb
lret
mov
mov
xchg
xchg
pop
xor
aam
outsb
leave
jno
jle
fwait
mov
fistpll
insb
add
mov
fwait
jae
aas
and
adcb
or
loopne
push
sub
mov
dec
sub
repz
jb
pushf
shlb
aad
sub
test
in
xchg
adc
pop
icebp
or
xor
sbb
test
das
call
loop
jecxz
sub
fadds
mov
repnz
or
cmpsl
cld
aaa
icebp
ss
shrb
push
subb
rorb
push
jl
or
or
rolb
and
loopne
dec
mov
xchg
lock
lods
mov
jge
xor
lds
mov
daa
test
sbb
pop
mov
inc
mov
mov
mov
shlb
movsl
dec
movsb
jae
test
enter
les
out
sub
jo
testb
add
inc
push
and
andb
lret
add
pop
and
movsb
inc
imul
dec
popfw
or
inc
push
jbe
fidivl
and
add
bound
test
data16
mov
mov
inc
pushf
mov
cmp
mov
inc
mov
inc
clc
push
fimuls
dec
xor
ja
xchg
mov
adc
inc
daa
push
fsubrl
xchg
imul
or
sbb
mov
rorl
cld
inc
mov
test
jne
push
lds
mov
es
ret
es
or
arpl
js
mov
mov
ficompl
xor
xchg
xor
jl
stos
dec
cld
xchg
cmpsb
repz
or
repz
mov
pop
adc
mov
cmpsb
aas
lods
pop
jge
xor
adc
inc
repz
pop
cmc
or
cwtl
pushf
mov
jbe
xchg
gs
stos
je
cmp
subl
in
mov
dec
cmc
jae
xchg
out
lds
dec
mov
mov
ljmp
and
cld
cmp
push
push
pop
xchg
out
jle
mov
fisubl
cmp
rolb
mov
mov
fcmovne
jge
aas
xchg
std
jns
adc
pusha
test
mov
test
push
aad
shlb
inc
sbb
pusha
aam
int3
jb
mov
into
mov
incb
or
push
sarl
xor
movl
pop
inc
jp
stc
sub
sti
repz
sbb
jnp
mov
dec
push
and
shlb
lock
andl
into
jg
insb
push
mov
or
out
push
cmpsl
jg
test
sbb
xchg
test
adc
jb
jp
or
jle
mov
cmp
sub
xchg
jmp
fs
sbb
jecxz
in
imul
jecxz
inc
pusha
adc
mov
mov
ret
stc
add
in
fdivl
pushf
dec
mov
jl
cwtl
clc
orb
loopne
imul
mov
or
pop
mov
push
gs
mov
sbb
sub
mov
ret
jbe
test
mov
das
add
cwtl
adc
mov
ds
movsb
repz
mov
loopne
inc
pop
into
cmc
push
ds
lret
icebp
ret
sbb
popl
xchg
sahf
loopne
clc
shlb
je
mov
add
pusha
mov
inc
cmp
mov
leave
sbb
mov
jmp
imul
jp
in
orb
xor
dec
ljmp
out
xchg
sub
dec
adc
addb
jl
call
aad
shlb
push
fsubl
adc
adc
shl
out
fwait
push
dec
sbb
int3
inc
in
push
or
jbe
rcrb
test
and
pop
aas
jge
push
push
dec
test
cmp
cmp
mov
aas
notl
call
sub
in
dec
pop
insl
imul
andb
mov
test
test
push
add
pop
inc
aas
jne
jo
call
arpl
mov
pop
xchg
add
xor
mov
dec
add
cmp
test
inc
xor
mov
inc
sti
xchg
cmp
mov
sub
pop
cmp
shr
data16
mov
or
orb
inc
xchg
outsl
pop
jmp
in
lahf
scas
idivb
mov
movsb
mov
mov
push
aam
lcall
dec
int
je
mov
fsubl
call
jge
xor
xorb
cmp
loopne
leave
ss
pop
cltd
sbb
out
orl
aad
inc
and
das
or
add
cmp
les
push
pop
mov
pop
lock
in
mov
xor
sub
mov
orb
outsb
dec
pop
ja
adc
enter
adc
xchg
loop
call
rclb
dec
shrb
cwtl
pusha
pusha
push
xor
push
insb
insl
xchg
repnz
rclb
and
sub
pop
jge
js
mov
imul
lock
and
xchg
adc
cmc
xor
push
jno
ret
xor
loop
repz
add
add
subb
pop
and
in
pop
adc
es
pop
fstpt
fnsave
mov
push
enter
mov
jno
or
push
movsl
push
rorl
mov
jle
mov
mov
mov
repz
and
cmpsb
jmp
sub
mov
mov
adcb
jae
jns
ja
data16
out
inc
orl
sub
out
mov
inc
mov
push
sahf
test
and
inc
inc
cmp
jo
addl
xchg
jae
pop
int3
pusha
pop
and
aaa
insb
sub
outsl
pop
hlt
pop
insb
mov
sub
cmp
sti
lret
outsb
je
in
sbb
lods
pop
insb
mov
sub
push
outsl
lods
xor
xchg
xor
pop
addr16
pop
pop
jns
pop
aam
push
out
cld
test
rcll
out
xchg
push
and
mov
sarb
dec
inc
sbb
pusha
lods
bound
pop
inc
out
adc
inc
rclb
mov
push
lock
in
cld
vunpckhps
fidivrl
pop
mov
jno
push
dec
sbb
inc
jmp
adc
and
mov
jo
cmp
add
pop
neg
lea
jno
inc
movsb
cmp
in
call
cmp
jo
aad
dec
mov
lods
rorl
jnp
pop
cltd
mov
aas
rcl
mov
or
test
fmull
cmpsl
xchg
inc
push
jecxz
out
clc
cmpb
adc
lahf
sbb
popa
mov
mov
inc
ds
pusha
adc
xor
push
mov
movsb
pop
imul
insl
jo
in
lcall
loopne
imul
lea
add
mov
mov
pop
cli
lock
cmp
jge
and
lock
pop
rorl
cmp
imul
call
sub
ljmp
or
call
adc
pusha
mov
pusha
jl
out
sbb
sahf
enter
psllq
and
mov
fwait
mov
adc
bound
ja
mov
sub
pop
cmc
outsb
repnz
imul
repnz
fs
ret
push
in
push
das
stos
xlat
adc
loopne
sub
test
movsb
pusha
repz
adc
shrb
xchg
ret
and
hlt
add
js
ret
jle
repz
leave
popf
hlt
popf
sub
pop
push
adc
loopne
sti
jne
lock
xchg
imul
sti
iret
sbb
lods
push
xchg
mov
in
inc
dec
fists
addl
dec
js
pop
movsl
aas
lock
push
das
mov
out
shlb
cwtl
or
sbb
mov
pusha
mov
outsb
cmp
cmpsl
fildll
adc
dec
adc
push
fsubl
out
out
out
pushf
cmp
sbb
add
or
into
in
push
scas
dec
test
or
adc
mov
dec
pop
push
mov
sub
adc
jmp
mov
nop
fsubs
fisttps
xor
repnz
and
inc
rol
pop
dec
push
xchg
out
pusha
xchg
ret
pusha
fisubrs
cs
or
cs
jmp
xchg
inc
dec
dec
pop
repnz
mov
cmpsl
xor
in
mov
cmp
mov
addb
pop
gs
ret
dec
lcall
inc
cmpb
sti
ja
xchg
adc
dec
pop
or
pusha
sub
cmp
stos
andb
pop
xchg
inc
mov
out
xchg
mov
cmp
sbb
andb
ljmp
push
push
or
pusha
cmpsl
cld
std
inc
dec
or
loopne
jb
cmp
lret
rolb
pusha
stc
or
pop
out
xchg
cmc
push
add
std
and
pop
mov
test
mov
push
mov
sbb
sbb
pop
ds
pusha
out
cmp
jge
mov
inc
jle
insl
rcl
pop
adc
rcrb
aaa
inc
cmc
xor
pushf
inc
int3
ucomiss
cmp
das
jmp
mov
test
push
sub
add
mov
shrl
std
xchg
je
jg
lds
jns
jns
push
lods
cli
cli
dec
rclb
xor
xor
mov
repz
sbb
pop
jns
ljmp
js
xchg
cli
mov
popf
mov
dec
mov
subb
out
jb
repnz
sub
lahf
jae
sbb
and
xchg
lods
pop
test
cli
pop
push
cmp
push
movsl
pop
ja
push
xchg
mov
call
xor
sub
mov
sub
addr16
adc
sarb
fdivl
sbb
nop
hlt
inc
and
sti
hlt
mov
nop
je
lcall
sub
xchg
dec
cltd
movsb
nop
push
cmp
xchg
or
mov
pusha
loopne
or
lea
adc
notb
push
inc
jg
fsubl
dec
pop
pop
int
rcrl
ss
enter
mov
inc
sub
lock
lcall
sbb
in
mov
push
pop
ds
and
sbb
xor
loopne
push
sbb
push
dec
fbld
xchg
pop
dec
orb
jg
cmp
clc
rolb
xchg
aaa
jbe
rol
xchg
stos
mov
xor
loop
test
mov
ret
jmp
push
clc
cs
dec
and
mov
add
add
cmp
push
xchg
fdivrl
movsb
ljmp
daa
ficoml
push
dec
dec
inc
lods
popa
sbb
daa
pop
mov
lret
ret
add
cmp
add
push
mov
test
pop
call
into
sar
imul
enter
pop
into
jne
mov
push
jg
mov
fnstcw
and
or
adc
inc
movsb
sti
mov
add
push
cli
inc
sbb
add
jb
pop
stos
jle
idivl
sub
mov
data16
subb
into
sub
shlb
stos
pop
ja
push
and
sbbb
fwait
in
jb
mov
in
aaa
cltd
mov
shll
jl
dec
lahf
add
xchg
jnp
push
lret
xor
cmp
imul
test
push
and
pushf
add
pop
push
inc
jnp
fs
jle
enter
out
psubd
dec
pop
adc
mov
lret
sbb
orb
rol
mov
inc
inc
mov
pop
scas
das
lds
and
dec
xor
mov
pop
xchg
cs
add
add
int3
popa
pop
jg
shll
fnstcw
mov
sub
out
sub
fdivrs
push
xcrypt-ecb
cmpsl
or
inc
or
shl
xchg
and
movsb
lock
bound
inc
mov
sub
xlat
jecxz
xor
jb
cmp
jmp
mov
dec
mov
or
insl
jmp
rolb
shll
or
pusha
mov
pop
nop
test
in
pop
cmpsb
fmull
int
xor
add
pop
pop
arpl
and
lock
dec
mov
mov
mov
push
sbb
xorb
loopne
and
sbb
pusha
inc
addr16
data16
filds
fcmovnu
repz
in
cmp
cmp
mov
mov
cld
test
mov
fisubl
or
ret
rol
or
rolb
enter
cmp
loope
aam
mov
and
lock
add
jecxz
mov
lahf
push
out
sbb
shlb
loop
xor
inc
pop
arpl
mov
push
int3
shll
mov
in
andb
jb
and
data16
mov
shl
pop
mov
mov
adc
pushl
clc
inc
dec
in
or
loopne
xchg
insb
mov
and
inc
mov
cmpsl
pusha
movsl
aaa
test
xor
adc
loopne
adc
pop
cmp
sahf
jae
pop
sub
fmulp
inc
jg
call
imul
cmp
adc
outsb
orl
ret
jl
enter
mov
and
mov
arpl
inc
leave
int3
xchg
mov
and
xchg
lea
fbld
lods
scas
push
mov
add
mov
jecxz
lods
incl
cmp
push
inc
mov
push
and
push
insb
push
or
loopne
cmp
xor
shr
mov
movsl
in
sbbb
mov
dec
xchg
pop
movsl
mov
xchg
jg
push
aad
mov
xor
jno
and
sub
mov
cmp
stos
lock
push
xchg
mov
xchg
in
sbbb
jl
xchg
push
or
fisttps
xor
mov
mov
je
ret
in
or
lret
hlt
mov
jmp
xchg
lret
js
or
mov
sub
subb
sahf
imulb
sub
fucomp
ljmp
shrb
scas
mov
mov
mov
scas
mov
xor
cmpb
and
repz
pop
pusha
cld
sub
sbb
jl
and
in
mov
clc
loopne
scas
movsb
icebp
in
popa
cld
xor
jp
or
cltd
ss
cld
pop
mov
out
outsl
xor
pusha
int
cmp
push
loop
jne
ljmp
fmul
sub
jne
dec
mov
cmp
adc
lahf
in
test
pop
loope
xor
inc
aam
push
inc
inc
sub
pop
aas
xchg
jge
js
mov
imul
push
push
hlt
popa
sahf
stos
mov
sub
lds
in
mov
push
cmp
and
lods
adc
lret
pusha
pop
int3
jns
dec
das
push
inc
dec
jnp
sahf
arpl
pop
push
mov
xlat
inc
xchg
js
inc
fmull
iret
mov
mov
sub
add
xchg
ret
cmp
movsl
scas
clc
ds
mov
adc
mov
add
and
jbe
xor
push
mov
cmpb
fildll
jno
lcall
sub
push
call
fldl
sbb
cmp
jno
mov
pusha
cmc
push
push
mov
xchg
inc
mov
ja
int
jnp
and
or
push
popf
pop
or
pop
iret
dec
scas
psubw
sbb
mov
scas
sub
xchg
inc
pusha
fcmovnb
xor
add
inc
xchg
movswl
xor
repz
pop
xor
into
daa
cmp
les
mov
ja
or
in
xchg
outsl
pop
fistps
jg
jae
ljmp
sbb
jl
sbbl
mov
xchg
inc
inc
dec
sete
pusha
subb
sbb
xlat
inc
iret
mov
loop
mov
outsl
out
xor
das
pop
test
in
or
ljmp
push
icebp
mov
mov
je
xchg
jo
sbb
sub
inc
cli
adc
inc
or
loopne
jbe
mov
lods
mov
pop
cmp
jle
jmp
pop
push
orb
pop
and
add
jg
jp
rolb
shrb
xchg
or
sub
ss
fdivs
les
scas
or
sbb
inc
ret
jl
mov
and
inc
sbb
popf
out
insl
or
ret
dec
out
mov
stos
scas
das
cmp
push
adc
loop
movsl
inc
add
rcr
notb
pop
sbb
jmp
push
and
aad
icebp
add
sahf
dec
xlat
aaa
push
dec
into
cmp
sbb
shlb
xchg
fdivs
jge
idivb
lcall
lret
sub
xlat
sub
xor
and
je
mov
daa
mov
mov
sti
lahf
jns
cwtl
in
jecxz
cmp
add
scas
std
jg
inc
pop
shl
call
jnp
sub
lret
pop
jl
aad
cmpsl
inc
and
mov
mov
cmp
inc
stos
cmp
das
scas
mov
mov
pop
push
mov
int3
jecxz
xchg
xchg
arpl
lods
rcrb
mov
mov
adcl
inc
sub
push
sub
and
rcl
cld
cmovge
cmp
lock
sbb
pusha
xor
mov
mov
mov
mov
xchg
rorb
in
shrb
testb
xor
les
inc
call
inc
bound
cmpb
mov
push
cmpsl
fiaddl
sbb
test
je
mov
jae
dec
popf
and
jg
cmc
xorl
imul
fs
movsb
jecxz
bound
jecxz
add
sar
loopne
pop
ja
jns
mov
xchg
mov
mov
arpl
sbb
cmp
cld
dec
xchg
outsl
js
call
fs
cltd
push
cmc
push
gs
stc
xchg
jmp
pop
les
mov
ja
push
xor
add
sbb
mov
or
clc
ljmp
bound
test
add
repnz
sub
pop
scas
pushf
cmp
jbe
dec
cmp
cwtl
sub
call
push
push
or
and
sti
ljmp
xorb
cmpsb
dec
sahf
test
pusha
arpl
push
and
jp
iret
lret
inc
mov
cld
adc
movb
mov
push
adc
mov
jae
push
pop
sub
test
leave
push
outsl
jo
inc
mov
or
and
or
lcall
out
cmp
sbb
stos
addb
orb
sbb
jb
cmp
mov
mov
loopne
inc
subb
ja
aaa
ds
dec
add
sub
adc
xchg
nop
shlb
cs
cmp
cmpl
aam
xchg
mov
ret
and
and
imul
add
rcl
popf
sbb
shlb
arpl
push
addr16
in
inc
outsb
ret
pop
push
lret
mov
int3
push
jmp
loopne
push
scas
call
jns
jbe
lret
pop
or
jle
sbb
cmpsl
ret
dec
jecxz
sbb
jns
dec
aad
push
lock
or
movl
add
rorb
loopne
push
sti
jae
cld
jo
mov
add
sub
rorl
hlt
pushf
cwtl
rol
sbb
loopne
imul
pop
or
jp
loope
test
or
mov
jb
and
jne
test
ljmp
inc
divb
jecxz
sti
add
xorb
es
xor
jmp
les
js
lcall
lret
push
cwtl
lock
iret
and
pop
cmp
ds
test
aas
js
out
jb
nop
inc
mov
sub
mov
push
inc
dec
dec
mov
ret
je
subb
gs
sahf
inc
mov
pop
add
inc
loopne
pushf
hlt
and
nop
jo
push
call
lret
sub
sub
xor
hlt
andb
cmp
insb
lret
cmp
mov
lcall
and
addr16
push
popf
rcll
imul
inc
ret
dec
scas
xchg
xor
pop
lcall
dec
lret
ljmp
and
ror
push
add
and
mov
xchg
pop
fcomp
fadd
xor
xchg
inc
xorl
test
mov
dec
fs
sbb
nop
dec
inc
insb
xor
push
hlt
orl
imul
sarb
inc
lahf
jmp
sbb
inc
adc
lds
cmp
and
add
adc
sahf
xor
xchg
dec
cwtl
or
int3
dec
mov
pop
sbbl
nop
test
push
leave
sbb
jecxz
dec
cmpb
hlt
mov
ror
adc
cmp
push
inc
cs
jbe
xchg
das
push
cmp
nop
pusha
test
pusha
rorl
push
leave
xor
rorl
cwtl
enter
and
ficomps
mov
fucomp
sahf
push
outsb
and
loop
fsubr
xchg
inc
lahf
fnsave
mov
push
sarb
loopne
iret
loopne
pop
xor
lcall
or
mov
jp
sub
and
dec
jne
addr16
push
loope
outsb
ds
rolb
bound
mov
imull
loope
mov
mov
scas
and
outsb
ret
lods
and
cmp
fadds
mov
aaa
or
xor
stos
or
divl
gs
nop
fadds
xchg
sub
pusha
mov
mov
push
cmpb
push
push
or
mov
popa
je
mov
loope
cmp
and
xchg
iret
bound
adc
andb
fiaddl
and
cmc
aam
repnz
mov
or
add
cli
cmp
xchg
lahf
push
or
mov
cmp
daa
push
cltd
popf
add
add
adc
add
cmp
cmc
dec
and
insb
lret
adc
aaa
and
inc
inc
test
xor
xchg
add
inc
clgi
pop
mov
das
mov
or
leave
mov
cmc
test
push
mov
and
popf
lcall
lahf
xor
iret
sbb
sub
movsb
dec
nop
loopne
test
rcl
mov
lds
sub
dec
dec
mov
ljmp
xor
xchg
movsb
leave
mov
push
xlat
inc
jmp
jecxz
mov
mov
dec
scas
sbb
ss
nop
pop
loopne
or
loopne
ret
stos
sbb
out
repz
cmp
fs
inc
int
push
mov
cld
push
push
dec
bound
sbb
mov
lcall
pop
shll
and
in
leave
scas
fstl
hlt
call
add
pop
or
insb
adc
pop
fisubrl
pop
add
push
ljmp
mov
in
sub
ret
lds
call
jae
push
enter
shlb
pop
ja
adc
and
shrb
mov
lahf
test
test
out
jno
aad
and
vrsqrtss
hlt
inc
loopne
out
out
xchg
sarb
mov
nop
orb
leave
hlt
fdivrl
or
dec
cmp
jnp
xchg
loopne
leave
or
popa
data16
mov
or
and
jo
pop
fdivrl
jnp
lock
shlb
and
push
stos
mov
cmpsb
stos
dec
xor
fs
mov
jns
push
incb
sub
mov
test
xorb
mov
and
ljmp
cmpsl
icebp
fisubrl
jne
sti
cmp
aam
cmpsb
inc
cs
mov
outsl
add
jp
daa
sub
movl
xchg
mov
mov
xchg
xor
fxch
and
adc
cltd
adc
cld
inc
and
xor
lock
mov
pop
shrb
or
and
sbb
rcr
int
jge
pop
pop
imul
test
aas
sbb
mov
cmp
push
add
and
lret
add
rolb
cmp
inc
mov
xor
test
sbbb
test
aam
adc
int
cli
lea
fdivrl
xor
lret
addr16
mov
rol
push
test
insl
dec
and
cmp
roll
or
loopne
dec
mov
sti
sbb
jae
xchg
int3
rclb
and
cltd
test
xchg
iret
sub
int
xor
ret
mov
mov
push
loop
or
dec
dec
movsl
add
or
xor
testb
add
fdivrl
adc
dec
inc
mov
cmp
cld
iret
sub
data16
cltd
cmp
inc
sub
or
xor
mov
movsb
xchg
pop
sub
and
leave
popa
push
push
int
sarb
pop
stos
icebp
dec
fildll
or
inc
ficomps
jmp
jge
dec
filds
je
mov
jo
adc
pop
pop
aad
jo
xor
mov
stos
hlt
push
dec
call
clc
and
sub
xor
push
cs
sbb
jnp
jno
dec
or
test
mov
jle
push
movsl
test
mov
movl
ret
mov
lcall
cmp
xchg
pop
rclb
scas
xor
notb
push
imul
arpl
mov
mov
pop
sbb
sbb
call
aas
add
cltd
leave
sub
mov
mov
les
ds
popa
cmp
test
les
or
mov
pop
mov
arpl
sub
enter
adc
pop
loopne
lcall
cmp
jb
in
and
jle
adc
es
mov
xorb
xchg
rorb
mov
sbb
test
cld
inc
mov
cwtl
sar
icebp
pop
or
pusha
inc
cmp
test
jbe
cmc
cld
out
pop
add
xorb
mov
clc
and
mov
aas
jl
add
and
inc
repnz
pushf
nop
shlb
pop
and
jbe
and
jp
mov
mov
dec
jmp
cmc
lods
xor
shll
add
adc
pusha
sti
push
xchg
mov
lods
out
mov
mov
jecxz
in
adc
xchg
push
rclb
mov
jne
out
test
mov
jle
mov
and
shlb
push
add
aas
jbe
sti
and
sbb
stos
xchg
xchg
push
ja
lret
dec
pop
dec
je
lcall
mov
lds
out
adc
imull
or
mov
pop
in
mov
fs
cwtl
and
cmp
pop
fbld
pop
pop
pop
cmp
xchg
xchg
mov
fucomp
mov
mov
xor
movsb
es
outsl
jo
mov
dec
mov
divl
rorb
xchg
pushf
or
inc
sarl
add
.byte
.byte
