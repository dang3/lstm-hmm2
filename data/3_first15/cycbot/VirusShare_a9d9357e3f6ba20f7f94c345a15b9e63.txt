mov
add
sub
loopne
and
test
leave
inc
add
inc
in
sub
add
add
inc
gs
pusha
mov
inc
and
test
add
mov
shrb
in
add
orl
enter
pusha
inc
test
add
sub
add
and
int3
or
add
jmp
test
test
and
inc
mov
mov
les
in
add
lods
test
lds
lods
or
loope
rolb
add
orl
call
int3
test
mov
dec
pusha
inc
test
inc
lea
or
and
mov
mov
insl
lods
inc
in
enter
subb
lods
add
and
inc
and
shrb
and
mov
loope
add
add
add
inc
and
inc
sub
inc
gs
movsb
or
add
dec
add
pusha
add
inc
imul
insb
loopne
add
add
inc
shlb
jmp
and
int
lods
and
in
les
call
jmp
leave
and
call
enter
dec
test
sub
and
push
shr
dec
or
mov
dec
loope
jmp
lods
roll
insb
and
in
lods
call
movsb
sub
insb
add
and
movsb
in
add
test
add
popa
popa
inc
mov
in
dec
leave
add
sub
insl
and
and
and
or
add
inc
and
test
imul
orl
in
test
lods
insb
lods
in
add
or
inc
insl
add
add
mov
movsb
pusha
lea
int3
and
jmp
add
int
insl
popa
add
movsb
and
and
mov
movsl
add
call
in
mov
or
sub
loope
mov
in
dec
and
dec
or
movsl
or
inc
sub
or
subl
or
add
sub
add
or
call
add
dec
add
inc
or
pusha
loope
and
inc
sub
lods
add
and
sub
in
add
leave
or
addb
dec
and
call
mov
test
pusha
mov
or
test
inc
test
lea
les
in
insb
add
or
insb
add
add
sub
or
in
add
dec
dec
test
add
test
call
inc
and
sub
shll
int
rol
add
and
push
in
mov
add
test
sub
in
lods
call
lds
in
inc
and
add
in
sub
add
add
sub
rolb
sub
loope
test
leave
add
add
gs
in
and
add
loopne
add
insb
dec
in
shrl
add
add
add
sub
imul
add
dec
int
inc
or
add
insb
and
lods
and
lods
call
inc
add
mov
movsl
in
test
in
jmp
or
dec
dec
dec
roll
in
inc
movsb
mov
and
and
in
int
insl
imul
push
sub
or
inc
insl
and
and
pusha
lea
loopne
insb
and
add
dec
loopne
les
and
sub
test
dec
movsb
mov
int3
mov
or
loopne
add
and
sub
shr
add
push
imul
inc
add
movsl
inc
mov
push
int
dec
and
add
and
and
leave
test
int3
and
add
inc
inc
or
or
sub
loopne
int3
insl
or
and
call
test
lods
or
insl
dec
pusha
in
dec
dec
sub
test
or
enter
and
mov
int3
popa
and
inc
call
inc
add
loopne
dec
dec
in
movsl
and
lds
inc
loope
sub
call
loope
test
and
jmp
movsl
or
insl
or
in
enter
popa
lods
in
orb
inc
gs
dec
lods
or
and
and
inc
les
lods
loopne
sub
jmp
add
imul
in
leave
add
test
movsl
sub
insb
sub
add
in
lods
lods
call
insl
or
rorb
add
shrb
jmp
and
mov
popa
int3
int
add
inc
and
enter
enter
in
add
enter
add
enter
inc
inc
or
and
fs
call
and
add
add
inc
orb
loope
add
and
or
add
or
add
in
sub
jmp
mov
andb
loope
and
movsl
add
inc
inc
lods
and
lods
add
inc
add
add
dec
enter
and
roll
mov
add
lds
and
popa
add
add
rolb
imul
in
mov
inc
test
add
or
or
movsb
dec
test
movsb
inc
add
test
inc
in
lea
sub
lods
in
mov
call
in
inc
les
movsl
rorl
and
or
lds
or
add
add
int3
insl
and
in
mov
or
mov
in
sub
movsb
inc
shr
test
addb
mov
popa
push
sub
leave
and
and
int
add
add
add
and
and
leave
loope
test
add
imul
call
ror
rorb
rorb
add
add
add
sub
test
add
add
int
mov
add
sub
leave
sub
inc
add
inc
ror
add
in
or
test
add
int
or
sub
and
test
inc
in
or
imul
lea
popa
add
dec
dec
movsl
add
loopne
in
int
in
shl
in
add
add
sub
call
and
movsl
in
dec
inc
dec
movsl
dec
int3
leave
movsl
in
in
in
and
loope
and
lods
test
int3
gs
dec
dec
shl
dec
orl
addl
imul
test
int3
inc
add
loopne
movsb
inc
imul
insl
popa
test
test
add
gs
inc
in
sub
dec
and
loope
enter
lea
add
int3
dec
fs
insl
dec
dec
leave
test
loope
sub
fs
sub
add
int
mov
call
pusha
pusha
and
mov
and
sub
leave
add
test
mov
add
call
insl
rolb
dec
mov
inc
add
or
lods
dec
subb
add
mov
enter
dec
lea
int3
enter
leave
push
or
dec
les
or
sub
dec
test
mov
popa
or
and
movsl
dec
pusha
add
lods
in
lds
add
mov
add
lods
andl
sub
in
and
mov
popa
lds
jmp
enter
lods
dec
imul
add
add
push
and
add
jmp
sub
sub
loopne
jmp
or
int
inc
mov
orb
add
inc
sub
jmp
add
insl
sub
shrl
loope
int
inc
mov
pusha
popa
mov
test
or
add
test
and
lods
add
and
and
mov
inc
test
test
mov
and
add
jmp
in
mov
movsl
enter
sub
dec
add
loope
movsb
mov
or
mov
add
les
in
test
add
sub
int
and
and
lods
jmp
and
or
int
add
loopne
dec
mov
mov
add
insl
and
pusha
in
loopne
add
add
loopne
lods
shrl
inc
shrb
dec
movsl
pusha
int3
in
or
and
shl
mov
in
ror
popa
inc
and
inc
and
mov
shll
or
in
add
leave
or
mov
and
in
add
int3
call
or
add
add
add
add
in
test
imul
inc
enter
test
test
add
fs
or
test
mov
in
mov
or
mov
mov
sub
add
add
insl
dec
add
enter
insl
sub
and
sub
inc
mov
and
or
gs
inc
mov
mov
sub
inc
insb
and
lds
pusha
fs
imul
add
add
inc
add
or
in
mov
add
jmp
or
add
fs
in
sub
in
popa
dec
lods
leave
enter
imul
add
jmp
mov
sub
insb
movsl
mov
and
mov
mov
inc
or
int
add
lds
int
andb
add
mov
mov
inc
add
and
dec
and
inc
int
loopne
pusha
add
add
and
fs
add
insb
pusha
or
add
add
in
push
in
mov
sub
int3
in
loopne
popa
dec
rolb
lods
imul
int3
sub
add
shrl
add
add
add
enter
test
mov
dec
inc
mov
and
test
add
add
pusha
add
add
sub
sub
in
or
sub
and
imul
add
add
add
int
shrl
shrb
les
mov
add
int3
popa
mov
add
call
inc
add
call
sub
test
loopne
push
add
leave
add
jmp
in
rorb
mov
sub
sub
mov
int
vpaddsb
inc
mov
mov
in
add
add
or
mov
sub
imul
inc
les
add
inc
inc
lods
shll
call
insl
shlb
test
inc
insb
test
mov
test
or
mov
mov
push
orl
enter
sub
mov
test
shr
and
rorl
sub
movsl
shrb
or
lods
mov
rorl
pusha
mov
add
gs
test
shrb
sub
dec
call
or
inc
add
sub
insl
imul
add
add
or
or
dec
or
lea
mov
imul
imul
test
lds
mov
popa
mov
loope
inc
insl
inc
call
sub
and
dec
mov
lds
jmp
rorl
test
movsl
mov
test
in
movsb
and
add
and
movsb
int3
andb
lods
mov
lea
dec
sub
sub
sub
add
imul
mov
fs
mov
loopne
movsl
sub
add
add
leave
dec
add
push
mov
or
shr
mov
add
mov
in
int
add
popa
and
inc
inc
inc
jmp
add
movsb
mov
inc
addl
add
or
in
fs
loopne
imul
or
lods
or
and
and
fs
or
lea
loope
add
or
inc
dec
in
inc
dec
gs
in
movsl
add
in
mov
push
in
mov
leave
or
inc
dec
and
and
loopne
leave
add
test
imul
and
sub
inc
add
les
enter
lods
insl
gs
lods
inc
movsb
or
movsb
leave
dec
and
lods
add
inc
dec
rorl
movsb
dec
lods
dec
add
jmp
dec
add
roll
inc
add
mov
shlb
rolb
imul
sub
int
dec
popa
add
and
dec
int3
mov
dec
test
les
int3
inc
movsl
or
add
or
jmp
int3
movsl
or
or
pusha
add
pusha
movsl
mov
movsb
pusha
fs
test
and
test
add
or
and
test
mov
mov
inc
add
inc
lds
orl
addb
int3
add
test
popa
mov
pusha
sub
inc
int
lds
add
jmp
and
test
in
add
test
jmp
push
sub
mov
jmp
add
lods
sub
addb
dec
lods
int
int3
inc
dec
int3
loope
shrl
sub
and
push
and
or
and
in
popa
push
test
int
dec
test
and
add
add
add
and
loope
movsb
mov
addb
add
or
sub
in
or
dec
inc
insl
leave
add
inc
gs
enter
leave
and
add
rorb
mov
lods
push
mov
add
lods
insl
jmp
subb
mov
add
inc
mov
test
sub
pusha
mov
push
andb
add
in
in
and
mov
inc
add
or
movsb
popa
or
dec
sub
int
movsb
call
jmp
and
push
call
inc
enter
test
and
sub
dec
sub
in
and
sub
rorl
jmp
add
mov
add
test
leave
in
or
gs
movsl
insl
or
rolb
add
movsb
add
leave
dec
leave
add
add
popa
dec
lea
mov
inc
and
add
imul
in
jmp
lods
or
and
add
or
in
add
pusha
popa
lods
or
test
dec
mov
or
lods
loopne
inc
dec
and
and
push
test
pusha
inc
lea
lea
dec
subl
add
insl
dec
inc
sub
or
lods
sub
lods
les
mov
int3
or
test
mov
mov
sub
in
imul
lods
in
rorl
roll
lds
imul
inc
call
mov
dec
in
add
or
test
mov
and
addl
lods
addb
movsb
in
sub
dec
or
mov
add
loope
test
test
add
rorl
in
imul
add
dec
add
movsb
and
add
and
or
int
and
lods
enter
add
int
add
and
and
inc
int
inc
or
mov
add
add
mov
loopne
inc
call
movsb
dec
in
add
mov
subb
inc
in
sub
or
and
and
insb
movsb
sub
or
movsb
in
vpaddsb
leave
popa
in
add
sub
add
movsl
mov
add
inc
movsl
or
sub
dec
add
and
add
test
add
loope
pusha
lds
leave
inc
mov
mov
jmp
in
inc
call
and
add
in
add
dec
add
in
in
mov
or
push
mov
loopne
inc
sub
dec
and
andb
shrl
dec
pusha
sub
add
loopne
sub
in
movsl
or
add
int3
rolb
popa
dec
and
add
test
loopne
inc
add
leave
mov
loopne
in
int3
lds
dec
lds
insl
add
enter
inc
loopne
sub
lds
jmp
add
in
popa
sub
add
jmp
movsl
int
add
jmp
dec
dec
add
in
inc
or
insb
in
mov
sub
pusha
in
and
add
test
enter
add
and
in
lds
in
in
loope
in
dec
or
test
in
mov
and
lods
mov
jmp
insl
in
dec
add
imul
or
in
in
les
popa
subb
orl
and
or
add
in
or
sub
sub
inc
in
and
pusha
enter
inc
mov
add
movsl
add
int3
add
or
leave
in
lods
and
leave
mov
mov
in
lods
test
in
test
lea
enter
and
fs
mov
dec
fsub
mov
aad
xchg
mov
imul
incl
inc
into
insl
lods
decl
incl
incl
incl
jl
mov
iret
ret
xor
jb
sbb
es
mov
leave
and
lcall
decl
decl
add
incl
jmp
stos
cmp
incl
push
mov
pushl
sbb
jne
jle
adc
jb
inc
loope
int3
popa
je
insl
jb
call
stos
call
rcll
inc
es
jmp
stos
ljmp
ja
mov
push
clc
xlat
inc
int3
and
incl
decl
decl
decl
notl
cmp
pushl
mov
call
cmpsb
push
sub
cmp
sub
divl
dec
idivb
pushl
or
decl
lahf
adc
push
insb
rcrl
hlt
push
and
pushl
divl
add
es
jmp
call
movsb
pushl
decl
cmpsl
out
stos
push
cmpsb
incl
fwait
sbb
lcall
decl
and
jg
sbb
lds
jl
or
lcall
xor
xor
or
std
test
jmp
call
call
add
call
fs
mov
in
ljmp
fidivl
mov
call
aas
clc
cwtl
je
jmp
cmpsb
ds
cmp
jmp
jne
and
call
pop
mov
add
call
mov
call
and
ljmp
lock
data16
mov
fwait
in
decl
lcall
decl
iret
mov
sbb
or
call
jp
in
jecxz
mov
call
fcomps
sbb
cmpsb
lcall
mov
jl
inc
enter
incl
jmp
mov
decl
js
lcall
pushl
in
or
call
stos
jmp
mov
inc
push
out
lds
ds
lcall
jle
pop
sbb
ja
ljmp
mov
adc
shrl
scas
decl
sub
jl
sbb
jl
arpl
call
movsb
pushl
test
call
mov
jle
out
xchg
in
jae
iret
jmp
ret
jp
adc
call
adc
cmp
fimull
icebp
xrelease
fnsave
pop
repz
loopne
jmp
ret
add
fldt
pop
mov
push
mov
mov
sarl
sub
mov
mov
call
mov
cld
nop
sub
pushl
xchg
mov
shlb
mov
out
mov
add
call
dec
scas
sbb
lcall
cmpsl
sbb
clc
xchg
mov
ljmp
jb
push
test
cld
xchg
test
jmp
jbe
adc
add
ljmp
mov
jp
push
jmp
cwtl
in
lahf
sub
nop
dec
jle
or
lcall
or
jmp
fwait
sub
pushl
cltd
das
fwait
pop
mov
jmp
xchg
xor
decl
xchg
xor
cmc
xchg
xor
decl
push
sub
call
jnp
cmp
cmp
cmp
lcall
ja
mov
xorl
aas
imul
jae
xchg
cmpsb
pushl
xchg
lahf
xor
jmp
decl
addl
cs
lcall
incl
mov
pushf
push
lcall
jge
jg
cwtl
sub
incl
jnp
imul
call
jns
jnp
xchg
sub
incl
ja
gs
and
jmp
aaa
jne
ja
nop
xor
jae
popa
dec
push
stos
ljmp
jno
jae
dec
cvtdq2ps
sbb
xor
dec
data16
cmp
inc
pop
jns
push
mov
das
imul
cmp
sub
adc
inc
es
incl
das
sub
mov
inc
ss
imul
inc
imul
dec
daa
and
ret
inc
outsl
pop
ret
and
push
jno
adc
mov
push
inc
pop
aas
fxch
mov
incl
fistps
push
cli
inc
test
jmp
xchg
sub
push
call
in
mov
push
lock
fiaddl
push
pushl
sub
js
mov
incl
clc
xor
cmpps
and
pushl
leave
fldenv
scas
cli
arpl
out
push
inc
outsl
fsubl
add
mov
mov
xchg
sti
in
lahf
xchg
lcall
cs
lcall
jge
inc
xchg
sti
test
incl
lcall
xchg
js
dec
adc
incl
mov
jmp
sub
pop
mov
inc
enter
decl
mov
lahf
movsl
cmpsb
incl
pushl
sbb
lcall
test
filds
inc
dec
adc
pop
sbb
stos
jmp
mov
decl
jbe
loop
sbb
add
call
ljmp
decl
jmp
addr16
std
or
jecxz
jmp
int
subl
adc
fistpl
cltd
or
mov
roll
scas
cltd
sub
call
in
dec
notl
scas
scas
lcall
mov
filds
dec
jo
hlt
xchg
push
xor
cld
bound
stos
inc
mov
cld
dec
push
cmp
xor
stc
dec
adc
jmp
mov
cmp
jmp
dec
add
mov
sbb
lahf
stc
adcl
fisttpl
push
fcmovne
jp
outsl
nop
push
or
loop
pop
inc
adc
pop
mov
sub
inc
mov
mov
dec
and
mov
cmp
and
test
fistps
cmp
decl
jecxz
out
or
incl
jmp
decl
aam
call
lcall
mov
mov
fdivl
mov
cmp
test
call
arpl
sub
lcall
pop
push
or
lcall
lcall
push
dec
fiadds
stc
test
cmp
decl
into
sarl
loope
loope
aaa
out
push
scas
lret
mov
mov
decl
cmp
incl
cwtl
add
jge
rcrl
movsb
call
lahf
sbb
cltd
inc
xlat
sbb
aaa
ret
in
es
pushl
stos
jl
cltd
inc
mov
mov
jb
adc
lods
std
or
call
jb
mov
ljmp
mov
mov
out
flds
out
mov
dec
lret
aaa
jns
or
decl
bswap
imul
sub
mov
pushl
les
call
push
sub
decl
call
and
cli
int3
dec
call
decl
mov
or
in
xchg
sub
dec
or
jmp
pop
and
fucomip
imull
outsl
lcall
xchg
gs
jmp
jmp
mov
in
decl
dec
pop
pop
iret
mov
jmp
fwait
insb
int
cmc
mov
push
daa
xchg
je
ljmp
lcall
insb
mov
sub
push
push
mov
mov
ljmp
xchg
mov
dec
adc
ss
jmp
cmp
lcall
icebp
dec
test
test
lcall
mov
mov
xchg
aam
ret
lret
xchg
sub
ds
sbb
xchg
push
insl
mov
mov
decl
cmp
aam
rcll
fistl
gs
decl
lods
fs
dec
imul
xchg
ljmp
ljmp
movsl
jb
decl
repnz
into
sub
mov
mov
lcall
jne
jmp
sbb
aaa
test
decl
cwtl
cmp
jmp
or
int3
pop
sbb
lahf
adcl
ret
rclb
test
cli
pop
jp
xchg
sbb
les
loopne
fadds
frstpm(287
and
add
decl
into
pop
jno
xor
lahf
fs
call
add
fists
inc
int3
dec
into
cltd
sbb
cltd
mov
aas
pushf
or
decl
movsb
decl
stc
lock
or
ljmp
pop
pop
sub
jmp
mov
ret
or
jmp
cmp
jp
push
pop
sarl
cmp
mov
push
push
cmpsb
cmp
pop
mov
inc
cmpsl
dec
cs
jmp
fcmovne
mov
stos
ljmp
cmp
sbb
les
cmova
xor
xchg
pop
nop
in
mov
sbb
fdivrs
or
jmp
sub
or
int3
pop
jl
lcall
mov
pushl
ljmp
cmp
inc
sub
incl
push
pusha
ja
cmp
decl
lods
dec
dec
sbb
fistps
dec
hlt
sbb
mov
pusha
xchg
lahf
aas
stos
out
movb
call
jbe
push
xchg
call
jo
call
xchg
push
pushl
or
cmp
mov
pop
pop
mov
jns
test
lcall
out
add
inc
mov
cmc
stos
dec
sti
lock
nop
hlt
mov
scas
lcall
lds
call
outsl
adc
decl
jno
fildl
out
ljmp
dec
pop
adc
push
sbb
mov
arpl
xor
mov
push
jb
das
mov
fdivrs
mov
push
mov
adc
iret
cwtl
mov
addr16
outsb
adc
sbb
jne
ss
movsb
inc
push
push
push
call
adc
push
ja
pushl
cld
fcmove
ss
out
hlt
fsub
push
ret
jbe
stc
aam
lock
call
jge
jmp
sarb
js
and
mov
ljmp
pushf
inc
adc
ljmp
call
xchg
ljmp
jecxz
dec
clc
mov
adc
stc
imull
jp
mov
jmp
jb
daa
das
push
inc
cmp
or
fcmovb
mov
pop
ror
jns
decl
aad
push
popf
sub
addr16
cmpsb
call
mov
inc
add
mov
or
ljmp
jmp
incl
icebp
xor
fsub
imulb
xlat
xlat
and
fsubs
jmp
call
call
pop
jge
fldenv
incl
call
jecxz
xchg
in
ss
outsb
lret
inc
jecxz
cmp
push
mov
stc
mov
repnz
xchg
mov
test
out
dec
rolb
decl
out
rorb
ss
cltd
out
jmp
shlb
jmp
daa
pop
shr
rcrb
mov
and
call
je
inc
movsl
cmp
push
rclb
pop
mov
or
incl
in
cmp
add
decl
push
and
outsb
xchg
shll
je
cltd
cwtl
ds
out
ss
cmpsb
decl
jmp
mov
test
call
call
mov
adc
popf
pop
outsb
stc
jmp
mov
push
and
dec
popa
pop
adc
clc
mov
fwait
dec
jl
sti
mov
jae
popa
not
jae
pushl
jnp
call
and
cmp
xchg
scas
sti
shll
cmp
loope
incl
in
mov
jmp
lahf
cld
mov
repnz
xchg
pop
shl
sub
js
in
cmp
push
stos
or
ljmp
inc
and
clc
mov
cmp
incl
shrb
stos
decl
ljmp
dec
dec
cmp
jmp
ljmp
ljmp
lcall
xchg
ljmp
xchg
mov
and
in
stos
outsl
sbbl
mov
insl
pushf
repz
and
leave
ja
mov
mov
jmp
mov
mov
call
or
sti
aad
jae
decl
dec
popa
xchg
insl
jg
outsl
xchg
cs
pushl
sub
lret
pop
pop
jecxz
incl
lcall
incl
cs
jmp
pop
pop
dec
shll
push
and
and
call
sti
push
mov
push
mov
push
incl
bound
dec
cmp
ljmp
ficompl
jae
sub
pushl
mov
je
mov
cmp
call
lods
pushl
inc
pop
shlb
decl
call
xchg
xchg
ret
popa
and
and
ljmp
call
adc
fsqrt
dec
icebp
push
mov
in
push
scas
out
jns
inc
xchg
ds
cmp
cmp
xor
loopne
and
lcall
lcall
scas
fcompl
cltd
outsl
in
jns
data16
decl
pop
lret
lcall
scas
cmp
jmp
mov
call
popa
mov
ljmp
cmpsb
jmp
incl
in
adc
scas
ljmp
lcall
push
nop
dec
cmpsl
scas
ljmp
std
in
pop
dec
sti
jg
rclb
mov
movq
aaa
inc
mov
dec
sbb
jo
mov
decl
loopne
call
loop
lahf
insb
les
mov
jmp
pop
aad
cmc
mov
cld
dec
push
call
or
out
jle
pop
inc
frstor
lcall
dec
push
inc
jle
in
icebp
sub
add
call
lcall
jge
ret
dec
cwtl
shlb
decl
pushl
in
lret
sbb
mov
inc
ss
and
push
mov
add
lea
push
push
push
push
push
xchg
clc
cmp
je
ret
call
clc
lea
or
mov
shr
shr
add
push
push
push
push
call
leave
ret
ret
xchg
mov
or
xchg
shl
add
lea
sub
shr
dec
not
sub
mov
clc
je
push
pop
add
lea
clc
jmp
jmp
push
mov
sub
lea
orl
movl
push
push
push
push
clc
call
test
je
in
dec
and
push
push
push
call
mov
lea
test
jne,pn
stc
sub
decl
lcall
cmp
incl
jmp
pop
mov
sti
jle
dec
lods
inc
popa
or
pushl
shl
inc
movsl
jae
movsb
decl
pop
push
lcall
pop
call
inc
sub
xchg
add
lcall
mov
cmpsb
incl
ja
sarl
nop
mov
and
inc
cmc
sub
cmp
or
pushl
sbb
testl
ljmp
xor
add
push
xchg
sub
add
push
call
lods
out
fstpt
movsl
insl
sbb
stos
dec
cwtl
sub
pushl
pushl
call
incl
xor
sub
mov
call
test
cmp
dec
sar
mov
pop
xor
sub
ljmp
add
ja
pushl
add
sahf
xchg
lcall
daa
pusha
push
xor
mov
shlb
push
xor
incl
movsb
lcall
nop
test
pushl
lcall
push
pop
ja
pop
repnz
jae
call
fs
inc
mov
lcall
hlt
and
ret
pop
test
push
js
add
incl
cmp
or
clc
push
xchg
push
dec
sbb
mov
incl
js
mov
lcall
dec
pop
dec
int
push
sbb
ljmp
push
imul
jge
dec
mov
pushl
xlat
lods
jmp
loope
xchg
jae
fdivrl
mov
inc
xor
incl
jno
mov
test
call
jmp
decl
ret
int
scas
pushl
fldl
call
loop
out
inc
xchg
jg
mov
pop
sub
mov
cltd
sbb
imul
mov
call
aam
decl
incl
test
incl
jmp
mov
andl
stos
incl
push
insl
aam
or
sub
jmp
imul
out
xchg
jecxz
jmp
into
dec
insl
imul
xchg
fld
mov
adc
push
sub
lods
iret
push
push
jmp
adc
mov
in
dec
test
add
dec
fidivrs
lcall
jmp
mov
xchg
lcall
mov
les
incl
lcall
mov
jns
jae
jmp
ret
jg
mov
dec
sti
mov
add
mov
incl
movsl
push
ret
leave
out
mov
jp
jmp
clc
test
xchg
jbe
inc
fcomip
add
pop
cltd
mov
call
cmc
out
xchg
call
ficompl
push
cli
mov
push
call
aam
decl
lahf
scas
incl
ja
rclb
decl
sbb
or
call
add
incl
cmp
bound
cmp
xchg
add
rolb
fldl
ljmp
xor
cmp
jns
mov
lcall
xchg
adc
dec
das
test
sbb
pop
fnstsw
xchg
sbb
sub
decb
cmc
or
push
mov
fdivl
movsl
repnz
mov
cs
ljmp
test
mov
incl
cmp
ljmp
jmp
scas
mov
ret
cwtl
cmc
leave
pop
mov
cmpl
jmp
push
inc
mov
testb
aas
lahf
or
mov
mov
push
bound
call
mov
call
xor
xchg
ljmp
mov
add
mov
in
leave
fstpt
aas
sahf
mov
jge
aad
fldenv
xor
dec
call
add
cwtl
or
ds
push
sti
movsb
call
nop
jne
xchg
ljmp
pop
imul
mov
ror
lea
sbb
movsl
push
fucom
xchg
in
pop
cmp
enter
incl
data16
incl
call
call
lods
lds
jmp
in
insb
into
cltd
inc
decb
repz
jg
mov
jbe
cltd
xchg
sbbl
cmp
mov
add
lcall
pop
push
ljmp
adc
in
shlb
mov
in
lahf
dec
in
cli
daa
stos
aas
inc
xchg
shll
nop
mov
into
sub
jl
xor
jmp
sti
or
dec
sub
jecxz
add
jns
in
mov
sub
jmp
mov
test
sbb
jmp
add
mov
pushl
in
fcmovb
push
xchg
mov
cmpsb
jmp
mov
jmp
dec
xchg
fildll
push
pop
loopne
ljmp
pop
inc
jg
fbld
or
ljmp
push
pop
popa
inc
push
insl
jecxz
insb
insl
and
decl
lds
inc
nop
mov
jecxz
push
stos
cli
sbb
adc
jp
cmpl
mov
push
shl
xchg
push
scas
mov
sbb
pushl
pushl
jecxz
ja
xchg
insb
inc
sub
cmp
jg
push
sub
pushl
mov
sahf
cwtl
pop
popa
pop
loope
jecxz
jge
pop
test
cmp
xor
pop
push
adc
fcoms
lcall
out
lret
jo
pop
int
mov
stc
ja
into
aad
xlat
test
ret
aas
movb
push
push
rol
orl
iret
lcall
xchg
out
sbb
mov
stos
jecxz
and
adc
loope
jmp
bound
sub
add
aad
call
int
cmp
in
cli
cmpsl
clc
mov
pushl
xor
push
jle
push
movsl
shlb
shrb
and
rcll
adc
cmp
lcall
sbb
dec
lea
call
or
lcall
mov
and
pop
ret
cmp
jmp
movsl
movsl
xchg
enter
scas
incl
cltd
int
fcomp
scas
aad
adcl
lret
cld
test
xchg
mov
mov
movsb
incl
pop
push
sub
jmp
call
fs
or
and
stc
notl
jae
decl
jmp
mov
mov
je
ljmp
mov
jg
scas
cmp
dec
rclb
pop
xor
jmp
loopne
test
jmp
adc
mov
pushf
mov
mov
jmp
push
push
or
ljmp
ljmp
jmp
dec
outsl
xchg
or
jbe
adc
push
pushl
xchg
hlt
call
jmp
js
ret
imul
mov
xor
pushl
xchg
into
pop
int
mov
and
decl
jmp
sbb
mov
sub
pushl
xchg
leave
nop
push
cs
cmp
incl
ja
pop
divl
in
fildl
test
pop
jne
fwait
push
pusha
mov
call
jnp
dec
ljmp
ljmp
push
xchg
lcall
lahf
mov
dec
nop
fs
jmp
jp
lahf
je
lods
call
je
sub
add
lcall
incl
pop
cli
xor
jmp
push
cli
sbb
pusha
xchg
lock
pop
adc
push
jmp
ret
mov
xlat
mov
mov
lcall
ljmp
int
xor
lods
decl
push
xor
push
sub
cld
pop
dec
insb
in
ret
xchg
xor
dec
mov
mov
ljmp
ret
call
inc
jle
push
lock
cld
and
incl
jae
cmp
incl
jno
jge
pushl
inc
adc
ljmp
insb
fwait
test
cmp
std
loop
dec
icebp
dec
cmpsb
decl
enter
dec
sub
lcall
mov
mov
jne
fwait
sbb
push
jg
fwait
in
cmp
decl
jmp
andl
call
inc
or
push
inc
out
int3
xor
out
jmp
cmp
pop
adc
jp
ficoms
test
in
pop
pop
cs
dec
mov
cmp
fbld
sbb
sub
cmp
fsubs
cwtl
inc
pop
movsl
jae
mov
jge
outsl
out
sub
cmp
test
pushl
aam
ja
inc
insl
push
or
and
fistps
sahf
cmc
fs
rol
gs
push
in
inc
cmp
inc
clc
imul
cs
push
add
call
outsl
and
pushf
hlt
dec
dec
stos
jns
add
jge
mov
fildl
sbb
jmp
ja
pushl
mov
decl
call
cmp
lods
sti
mov
pop
sbb
push
clc
push
adc
or
loope
insl
mov
call
fsubrs
or
ljmp
adc
mov
arpl
bound
push
scas
mov
push
push
xchg
in
push
decb
jmp
ret
inc
daa
repnz
xor
lret
fwait
sahf
insl
jmp
jle
xor
hlt
mov
jns
or
pushl
lock
mov
mov
mov
inc
cmp
pop
out
jg
lea
jnp
xchg
mov
cmp
jmp
jbe
fidivs
dec
lods
or
push
orl
decl
cli
pop
jae
cmp
push
xor
lods
mov
lcall
lcall
arpl
xchg
jmp
xor
out
outsl
xor
mov
ljmp
add
jbe
inc
xchg
xor
mov
inc
xchg
bound
dec
cmp
push
jmp
xchg
insl
mov
iret
es
pushl
aas
jb
out
push
mov
jle
mov
push
orl
mov
ds
inc
jle
inc
lods
pusha
adc
lods
mov
jg
jge
dec
push
pushl
cmp
jle
add
push
xchg
cli
sub
xchg
sub
mov
lcall
xchg
lock
adc
add
decl
inc
lods
decl
repnz
adc
push
ret
outsl
bound
ret
mov
bound
xchg
aam
scas
lcall
mov
pop
adc
and
out
or
decb
incl
das
int
jnp
cmp
std
outsl
xchg
outsl
sbb
ds
xor
rcrl
mov
sarl
shlb
dec
psubw
jmp
pop
fbld
jmp
jns
jno
push
aaa
jno
push
es
jg
sahf
daa
cli
sahf
add
call
cli
jmp
sub
jmp
sbb
scas
incl
pushl
aaa
pop
dec
or
jmp
ljmp
mov
out
out
push
push
dec
mov
imul
popa
adc
stos
mov
lcall
xor
mov
iret
int
out
push
insb
fwait
divb
pop
andl
add
mov
incl
in
out
xchg
lret
in
cld
mov
ljmp
mov
incl
fmul
lahf
push
cmp
xchg
fidivs
call
push
or
pushl
decl
loope
xchg
push
mov
jmp
cli
push
in
mov
decl
call
es
incl
mov
inc
jns
dec
cwtl
or
fimull
lcall
call
mov
mov
sub
inc
xor
dec
or
push
out
cmp
js
xchg
cmpsl
dec
sbb
mov
and
jg
call
data16
nopl
dec
test
jl
out
xchg
adc
mov
test
call
xor
stc
fimuls
inc
xor
insb
and
fidivl
xor
xlat
mov
stos
pushl
push
adc
insl
fdivs
add
fldenv
addr16
arpl
and
jnp
fdivr
add
and
cld
xchg
mov
jle
subw
cli
cmp
call
inc
ss
decl
dec
gs
jne
repz
xor
test
lahf
lahf
dec
loop
fcmovnb
pop
or
call
sbb
ret
cmpsl
lods
push
jecxz
lods
call
jo
sbb
pop
ja
imull
jns
mov
inc
outsb
sub
push
jmp
inc
testb
incl
test
pushl
incl
lock
clc
sub
call
int3
out
lds
jns
ljmp
mov
call
ficoms
xchg
sbb
and
les
testb
call
aaa
leave
incb
sub
decl
lcall
jecxz
fisubl
pushl
cmp
daa
or
mov
fwait
push
scas
xchg
xor
mov
pushl
cmp
push
jns
pop
rorl
pop
sbb
ds
xchg
loope
stc
testb
and
pushl
xor
inc
sub
pushl
or
decl
cli
rcl
mov
popa
mov
movsb
lcall
fsubrs
pusha
repnz
call
cltd
xchg
mov
xchg
pushl
jmp
fcmovbe
xchg
adc
xchg
fwait
push
clc
nop
nop
nop
nop
jae
or
push
add
sbb
nop
push
mov
leave
nop
jmp
add
add
inc
xchg
loop
dec
pusha
clc
nop
nop
nop
nop
jae
mov
add
cmp
push
clc
nop
nop
nop
nop
jae
add
add
push
add
or
jg
add
add
cmpsb
xor
fwait
sub
stos
fistpl
push
mov
xchg
ret
add
lcall
pop
and
add
nop
push
mov
leave
nop
jmp
cwtl
loop
add
les
nop
nop
nop
nop
jae
add
jge
lcall
out
push
mov
add
push
shlb
pop
xlat
add
add
pop
jmp
add
add
clc
nop
nop
nop
nop
jae
add
cmp
add
std
xor
clc
nop
nop
nop
nop
jae
add
jge
cmp
jge
decl
clc
nop
nop
nop
nop
jae
pop
add
xchg
add
add
dec
add
stos
and
inc
and
nop
nop
nop
nop
jae
mov
dec
add
push
clc
nop
nop
nop
nop
jae
add
lods
inc
inc
add
sub
lss
test
add
test
xchg
add
add
pop
mov
jl
and
nop
nop
nop
nop
jae
add
add
or
mov
in
add
clc
nop
nop
nop
nop
jae
lcall
xchg
jns
movb
push
mov
leave
nop
jmp
lcall
add
test
imul
nop
jae
movsl
fildl
adc
cmp
add
add
clc
nop
nop
nop
nop
jae
add
add
and
add
call
nop
jae
inc
add
mov
cwtl
test
or
add
cwtl
add
add
add
fldt
mov
nop
nop
jae
add
orl
nop
nop
nop
jae
sub
pop
hlt
add
push
add
add
shl
push
mov
xchg
ret
add
cmpsl
push
add
lcall
decl
mov
clc
nop
nop
nop
nop
jae
add
add
add
jne
clc
nop
nop
nop
nop
jae
sub
pop
add
add
add
cmp
add
add
jno
add
rcr
addb
sub
mov
push
add
clc
nop
nop
nop
nop
jae
push
stos
sub
lea
mov
xchg
ret
add
add
roll
add
pop
fld1
push
mov
xchg
ret
add
test
add
push
push
call
clc
nop
nop
nop
nop
jae
lcall
add
jmp
add
clc
nop
nop
nop
nop
jae
cmp
mov
add
fistpl
clc
nop
nop
nop
nop
jae
lcall
add
add
xchg
jp
sbb
nop
nop
nop
jae
dec
cmp
cmp
mov
div
mov
clc
nop
nop
nop
nop
jae
add
add
pop
add
add
mov
sub
nop
nop
nop
nop
jae
add
add
add
add
nop
nop
nop
nop
jae
test
pop
add
push
add
cmpsl
int3
jge
push
mov
xchg
ret
hlt
add
add
dec
mov
add
out
dec
inc
add
xlat
add
add
rcll
nop
nop
nop
nop
jae
add
add
dec
add
add
or
add
push
clc
nop
nop
nop
nop
jae
add
and
add
xchg
cmp
nop
nop
nop
nop
jae
cmpsl
pop
add
mov
sub
hlt
and
add
lcall
push
mov
xchg
ret
roll
cmp
or
les
add
cmp
nop
nop
nop
nop
jae
add
xlat
dec
push
cmpsl
pop
xchg
sbb
nop
nop
nop
nop
jae
push
sub
dec
cmpsl
add
addl
mov
add
dec
ret
cwtl
jge
rcrb
nop
nop
nop
nop
jae
mov
add
add
push
out
ljmp
mov
leave
nop
jmp
push
rcl
or
mov
rep
clc
nop
nop
nop
nop
jae
test
lods
cmpsl
sbb
add
mov
clc
nop
nop
nop
nop
jae
mov
add
add
xchg
add
cmpsl
pop
xor
clc
nop
nop
nop
nop
jae
test
add
push
clc
pushf
xor
nop
nop
jae
stos
adcl
adc
mov
clc
nop
nop
nop
nop
jae
add
cmp
hlt
add
inc
push
ss
ret
clc
nop
nop
nop
nop
jae
inc
cwtl
add
inc
add
hlt
add
and
push
push
mov
xchg
ret
and
add
add
add
sbb
push
mov
xchg
ret
add
xchg
add
mov
leave
nop
jmp
and
add
xchg
cmpsl
dec
add
popa
clc
nop
nop
nop
nop
jae
add
add
push
mov
scas
call
clc
nop
nop
nop
nop
jae
xchg
movsl
add
mov
je
nop
push
mov
leave
nop
jmp
cmp
add
cwtl
cmp
aaa
add
clc
nop
nop
nop
nop
jae
add
add
add
add
sbb
imul
clc
nop
nop
nop
nop
jae
pop
add
add
adc
call
nop
jae
pop
mov
dec
add
add
pop
test
jmp
mov
add
add
sbb
cli
inc
push
and
clc
nop
nop
nop
nop
jae
stos
xchg
mov
hlt
xchg
or
add
pop
add
nop
push
mov
leave
nop
jmp
xchg
add
sub
lods
out
mov
clc
nop
nop
nop
nop
jae
add
cmp
add
add
and
push
add
adc
add
hlt
add
xchg
mov
clc
nop
nop
nop
nop
jae
add
sarl
adc
nop
nop
nop
jae
mov
dec
add
mov
andl
lcall
add
push
mov
xchg
ret
add
add
mov
push
mov
leave
nop
jmp
mov
ret
add
test
mov
nop
push
mov
leave
nop
jmp
mov
and
and
xchg
cmp
xchg
sbb
push
push
mov
xchg
ret
loop
add
add
hlt
mov
and
mov
sub
stc
jle
add
add
cmp
add
lcall
inc
clc
nop
nop
nop
nop
jae
fildl
cmp
add
sub
test
push
mov
xchg
ret
add
add
xchg
sbb
add
add
fisttps
test
clc
nop
nop
nop
nop
jae
cmpsl
lcall
inc
clc
nop
nop
nop
nop
jae
add
pop
add
sub
cwtl
lcall
into
ja
nop
nop
nop
nop
jae
add
add
or
les
mov
push
push
nop
push
mov
leave
nop
jmp
add
push
mov
mov
push
xlat
and
decl
push
clc
nop
nop
nop
nop
jae
add
add
cmpsl
sub
dec
cli
inc
mov
test
adc
add
call
cmp
icebp
movsl
add
shl
lea
nop
nop
nop
jae
add
xchg
add
add
push
push
clc
nop
nop
nop
nop
jae
add
mov
add
mov
pusha
icebp
jne
nop
push
mov
leave
nop
jmp
add
add
popa
push
mov
xchg
ret
add
add
orl
cs
call
or
add
add
add
mov
stos
add
or
nop
nop
nop
nop
jae
lcall
push
cmp
xor
add
nop
nop
nop
nop
jae
add
pop
add
add
xchg
mov
rep
push
mov
xchg
ret
fildl
xchg
add
add
xor
jmp
nop
nop
jae
dec
add
add
add
cld
clc
nop
nop
nop
nop
jae
jge
add
add
add
add
add
inc
sbb
push
mov
leave
nop
jmp
mov
add
add
xor
nop
nop
nop
nop
jae
add
add
lods
add
add
mov
clc
nop
nop
nop
nop
jae
cwtl
add
inc
test
pushl
nop
nop
jae
jge
add
xlat
xchg
xchg
add
inc
and
clc
nop
nop
nop
nop
jae
mov
sbb
add
and
add
pop
clc
nop
nop
nop
nop
jae
push
cmp
inc
add
sub
add
dec
hlt
rorl
nop
nop
nop
jae
lods
and
movsl
loop
pop
add
adc
xor
clc
nop
nop
nop
nop
jae
sbb
add
add
add
jmp
sar
nop
nop
nop
nop
jae
add
dec
mov
add
test
test
push
mov
xchg
ret
mov
add
hlt
add
in
mov
add
add
and
cmpsl
aad
add
inc
ljmp
sub
jg
mov
cmc
xchg
inc
dec
add
add
pop
add
roll
iret
add
call
nop
push
mov
leave
nop
jmp
cmpsl
add
cmp
lods
push
mov
xchg
ret
or
add
loop
cwtl
dec
ret
cwtl
add
cmp
nop
nop
jae
add
add
cmpl
fld1
clc
nop
nop
nop
nop
jae
and
cmp
les
fsub
clc
incb
add
nop
push
mov
leave
nop
jmp
mov
hlt
lcall
push
mov
leave
nop
jmp
dec
jge
mov
test
add
fadds
fwait
xor
nop
push
mov
leave
nop
jmp
add
add
add
inc
add
add
nop
nop
nop
nop
jae
add
sbb
les
and
test
nop
nop
jae
add
xchg
dec
cmp
stos
roll
and
dec
push
mov
addl
jle
lds
stc
add
mov
lods
out
call
inc
add
sbb
add
sub
dec
add
inc
sbb
add
add
add
dec
add
xchg
push
cmp
sbb
mov
mov
dec
sbb
ret
add
xlat
add
cmp
push
cwtl
add
lea
nop
nop
nop
jae
add
add
inc
add
mov
clc
nop
nop
nop
nop
jae
add
add
push
cmpsl
cmp
ret
clc
nop
nop
nop
nop
jae
mov
add
test
xchg
xlat
outsb
and
jmp
rep
clc
nop
nop
nop
nop
jae
xchg
cmp
roll
add
mov
mov
clc
nop
nop
nop
nop
jae
add
mov
add
lods
push
mov
xchg
ret
add
mov
and
add
add
mov
clc
nop
nop
nop
nop
jae
test
pop
loop
add
add
clc
nop
nop
nop
nop
jae
mov
add
add
push
mov
xchg
ret
add
add
pop
add
inc
add
clc
nop
nop
nop
nop
jae
add
cwtl
add
lcall
jmp
leave
push
mov
xchg
ret
dec
mov
dec
add
or
jae
mov
add
add
xor
jno
add
sbb
enter
and
nop
nop
jae
inc
dec
ret
cmpl
pop
pop
nop
push
mov
leave
nop
jmp
stos
add
mov
sub
fdivs
mov
nop
push
mov
leave
nop
jmp
dec
add
add
cmpsl
xchg
sbb
nop
nop
nop
nop
jae
add
add
pop
sub
nop
nop
nop
nop
jae
add
lcall
add
stc
incl
add
dec
xchg
and
and
and
cmp
cmpsl
cmp
ljmp
clc
nop
nop
nop
nop
jae
jge
add
add
mov
cmp
cwtl
aaa
call
clc
nop
nop
nop
nop
jae
sbb
cwtl
add
sub
push
sub
pushl
mov
xchg
ret
add
addl
lcall
test
clc
int
leave
nop
push
mov
leave
nop
jmp
add
add
add
add
add
adc
je
inc
pop
mov
push
mov
xchg
ret
lcall
add
dec
out
adc
call
nop
jae
add
dec
add
add
jge
jne
push
mov
xchg
ret
dec
stos
sbb
mov
ret
mov
clc
nop
nop
nop
nop
jae
loop
add
add
add
call
xor
add
nop
jmp
inc
push
sub
add
mov
icebp
push
push
mov
xchg
ret
add
add
pop
test
add
adcl
sti
pop
clc
nop
nop
nop
nop
jae
cmpsl
add
add
test
in
add
addl
outsb
test
push
insb
push
add
add
fnstenv
inc
clc
nop
nop
nop
nop
jae
add
xchg
xchg
add
nop
nop
nop
nop
jae
pop
test
add
add
les
aas
rol
nop
push
mov
leave
nop
jmp
sbb
add
mov
xchg
pop
pop
lahf
add
clc
nop
nop
nop
nop
jae
xchg
add
stos
xchg
add
add
add
out
push
push
mov
xchg
ret
add
add
add
movsl
push
clc
nop
nop
nop
nop
jae
add
sub
add
mov
call
clc
nop
nop
nop
nop
jae
add
add
mov
jo
fwait
clc
nop
nop
nop
nop
jae
jge
push
xchg
add
dec
or
jmp
std
fwait
push
mov
xchg
ret
and
add
add
add
add
in
mov
clc
nop
nop
nop
nop
jae
cmpsl
add
add
jge
add
add
decl
call
nop
nop
nop
nop
jae
xchg
add
add
add
nop
nop
nop
nop
jae
add
cmpsl
sub
jmp
push
clc
nop
nop
nop
nop
jae
add
add
cmp
mov
pop
pusha
clc
nop
nop
nop
nop
jae
test
add
add
cwtl
add
cmp
jo
add
add
pop
xlat
add
dec
sub
xlat
lcall
jae
nop
nop
nop
nop
jae
add
add
inc
mov
clc
nop
nop
nop
nop
jae
inc
pop
add
and
pop
push
test
nop
nop
nop
nop
jae
dec
add
xchg
movsl
add
test
ljmp
call
nop
sldt
mov
lods
mov
add
xchg
cmpsl
add
stos
push
stos
add
add
pop
mov
clc
nop
nop
nop
nop
jae
add
add
add
sbb
nop
push
mov
leave
nop
jmp
push
add
cmp
add
or
nop
nop
nop
nop
jae
pop
add
pop
add
loop
lcall
je
nop
push
mov
leave
nop
jmp
add
and
mov
repnz
nop
push
mov
leave
nop
jmp
add
hlt
stos
push
loop
add
add
nop
nop
jae
add
add
add
xchg
add
lods
pop
add
nop
nop
nop
nop
jae
addl
add
inc
test
nop
nop
nop
jae
push
add
add
add
add
pop
nop
push
mov
leave
nop
jmp
cmp
add
push
add
xor
clc
nop
nop
nop
nop
jae
add
add
cwtl
pop
add
nop
nop
nop
jae
xchg
add
add
cwtl
adc
jb
imul
inc
add
test
cmpsl
push
push
mov
xchg
ret
add
lcall
and
add
nop
nop
nop
jae
add
add
add
jge
add
clc
nop
nop
nop
nop
jae
dec
or
add
add
nop
nop
nop
jae
movsl
or
add
add
dec
cwtl
add
ja
sahf
add
add
nop
jmp
add
add
cwtl
lcall
add
leave
nop
jmp
add
pop
sub
inc
cmp
nop
push
mov
leave
nop
jmp
mov
add
add
xchg
inc
push
mov
fwait
add
add
or
xor
push
add
aas
mov
nop
push
mov
leave
nop
jmp
add
adc
nop
push
mov
leave
nop
jmp
and
cmpsl
pop
inc
dec
pop
add
xchg
pop
shr
clc
nop
nop
nop
nop
jae
add
xchg
and
mov
lods
add
nop
nop
nop
nop
jae
cmp
push
add
push
and
push
mov
xchg
ret
add
test
sub
jne
clc
nop
nop
nop
nop
jae
dec
add
mov
pop
add
push
nop
push
mov
leave
nop
jmp
pop
lcall
loop
and
decl
nop
nop
nop
jae
add
add
add
aad
sti
add
add
nop
push
mov
leave
nop
jmp
add
test
nop
nop
nop
nop
jae
cwtl
pop
sbb
pop
add
shll
jae
add
add
hlt
add
add
mov
cld
pushf
xchg
ret
mov
shr
push
mov
xchg
ret
add
push
add
add
pop
add
hlt
mov
sub
push
mov
xchg
ret
add
inc
inc
cmpsl
add
adc
add
clc
nop
nop
nop
nop
jae
add
add
sbb
clc
nop
nop
nop
nop
jae
add
and
add
add
adc
nop
nop
nop
nop
jae
movsl
add
add
movsl
inc
and
ljmp
pop
jbe
mov
clc
nop
nop
nop
nop
jae
cwtl
add
mov
dec
cmp
push
clc
nop
nop
nop
nop
jae
dec
cwtl
add
cmpsl
add
xlat
or
nop
nop
nop
jae
add
add
xchg
mov
xchg
cmp
add
lods
xchg
add
xchg
cmp
xchg
add
add
add
push
nop
push
mov
leave
nop
jmp
dec
mov
les
les
xlat
push
clc
nop
nop
nop
nop
jae
add
dec
add
lods
sub
and
push
mov
xchg
ret
dec
add
add
cmp
ret
add
xchg
push
clc
nop
nop
nop
nop
jae
cwtl
add
adc
add
add
nop
nop
nop
nop
jae
add
cmpsl
jge
add
nop
nop
jae
mov
lods
sbb
push
xchg
add
cmp
data16
clc
nop
nop
nop
nop
jae
and
cwtl
addl
xchg
push
clc
nop
nop
nop
nop
jae
add
cwtl
add
or
add
in
fistpl
clc
nop
nop
nop
nop
jae
lcall
add
nop
nop
nop
nop
jae
cmp
sub
daa
add
nop
push
mov
leave
nop
jmp
fldt
add
xchg
add
repnz
fcoms
nop
nop
nop
jae
loop
add
push
add
mov
xchg
ret
cmp
add
add
add
add
or
test
lock
clc
nop
nop
nop
nop
jae
add
add
dec
push
shll
clc
nop
nop
nop
nop
jae
cwtl
mov
mov
cmpsl
add
add
cmp
xchg
cmpl
nop
jae
add
add
add
push
nop
push
mov
leave
nop
jmp
add
cwtl
add
add
add
add
clc
nop
nop
nop
nop
jae
add
xchg
add
dec
fildl
add
mov
nop
push
mov
leave
nop
jmp
cmp
fildl
mov
or
in
add
add
popa
sbbb
and
nop
pusha
fildl
stc
clc
nop
nop
nop
nop
jae
addl
add
add
js
push
mov
dec
add
add
add
add
add
sarb
loop
call
mov
xchg
ret
add
add
add
pop
add
movb
push
mov
leave
nop
jmp
xchg
fildl
jge
mov
ret
push
nop
push
mov
leave
nop
jmp
add
stos
mov
add
add
fistpl
push
mov
xchg
ret
add
add
push
add
add
sub
lcall
fistpl
push
mov
xchg
ret
cmp
mov
lcall
ljmp
decl
push
mov
xchg
ret
ret
shrl
add
lock
sar
nop
nop
nop
jae
add
add
add
sub
clc
clc
nop
nop
nop
nop
jae
sbb
dec
orl
ficompl
add
clc
nop
nop
nop
nop
jae
sub
add
stos
xchg
add
add
mov
clc
nop
nop
nop
nop
jae
add
cmpsl
mov
add
mov
or
ljmp
add
push
mov
xchg
ret
add
roll
push
cwtl
add
push
clc
nop
nop
nop
nop
jae
dec
add
add
add
push
clc
nop
nop
nop
nop
jae
pop
cmp
sub
add
add
add
cs
cli
mov
nop
nop
jae
dec
add
add
mov
test
nop
push
mov
leave
nop
jmp
add
inc
add
add
hlt
add
mov
push
mov
xchg
ret
cmp
add
push
mov
cmp
add
clc
nop
nop
nop
nop
jae
sbb
inc
and
pusha
push
mov
xchg
ret
add
stos
push
sbb
mov
mov
fwait
nop
push
mov
leave
nop
jmp
push
adc
mov
add
push
push
clc
nop
nop
nop
nop
jae
inc
pop
mov
add
jge
jecxz
int
pop
jae
nop
nop
nop
nop
jae
add
add
sti
stos
clc
nop
nop
nop
nop
jae
add
add
xor
je
clc
nop
nop
nop
nop
jae
cmp
cmp
push
cwtl
jbe
lock
nop
nop
jae
test
ret
cmp
cmp
nop
nop
nop
nop
jae
add
add
add
rcl
cmpsl
add
clc
nop
nop
nop
nop
jae
mov
add
add
ret
xchg
sbb
xchg
test
xchg
ret
dec
add
pop
cmpsl
mov
add
xor
nop
push
mov
leave
nop
jmp
add
pop
push
push
add
cmpsl
rcll
in
push
div
pop
push
add
cmp
jbe
add
add
jb
jno
add
add
nop
nop
nop
nop
jae
add
mov
xchg
clc
nop
nop
nop
nop
jae
lods
inc
cmp
add
add
ljmp
or
fs
inc
add
add
movsl
and
in
xchg
add
in
add
add
sbb
add
fwait
add
add
nop
nop
nop
nop
jae
add
loop
add
inc
leave
mov
clc
nop
nop
nop
nop
jae
lcall
loop
add
ljmp
icebp
clc
nop
nop
nop
nop
jae
dec
stos
add
stos
xlat
inc
es
call
shr
push
mov
add
ljmp
adcl
add
mov
push
mov
xchg
ret
xchg
sbb
loop
add
mov
push
add
push
mov
leave
nop
jmp
add
add
add
add
insb
nop
push
mov
leave
nop
jmp
mov
imul
out
daa
add
pop
roll
add
xchg
fsubrl
add
push
mov
xchg
ret
cwtl
add
cmpsl
add
dec
nop
push
mov
leave
nop
jmp
sub
sbb
hlt
and
add
jg
mov
add
xor
mov
add
add
add
adc
add
push
mov
xchg
ret
add
inc
and
and
inc
add
nop
nop
jae
xlat
add
hlt
and
dec
inc
clc
nop
nop
nop
nop
jae
roll
add
add
add
add
clc
nop
nop
nop
nop
jae
add
and
and
sbb
nop
nop
nop
nop
jae
mov
add
add
addl
jmp
inc
cmp
mov
xchg
ret
pop
mov
xchg
push
pop
cmp
rolb
lcall
je
clc
nop
nop
nop
nop
jae
push
stos
add
add
cli
push
mov
mov
repnz
pusha
push
mov
xchg
ret
pop
add
add
dec
pop
andl
mov
inc
out
gs
jmp
add
mov
roll
test
clc
nop
nop
nop
nop
jae
add
cmpsl
add
loop
mov
push
clc
nop
nop
nop
nop
jae
and
add
test
add
cmp
add
add
mov
fistl
add
add
jecxz
clc
nop
nop
nop
nop
jae
add
add
mov
xorl
clc
nop
nop
nop
nop
jae
movsl
test
movsl
and
popl
nop
push
mov
leave
nop
jmp
mov
jge
loop
add
add
cmp
fld1
clc
nop
nop
nop
nop
jae
push
add
add
mov
call
je
clc
nop
nop
nop
nop
jae
dec
add
sbb
add
add
add
nop
nop
nop
nop
jae
add
pop
add
lods
push
push
mov
add
dec
rolb
add
add
call
cltd
sbb
insl
mov
test
clc
nop
nop
nop
nop
jae
xlat
add
add
add
dec
add
nop
nop
jae
sub
test
cmp
cmpsl
and
add
add
in
int
popa
clc
nop
nop
nop
nop
jae
pop
mov
add
add
mov
nop
push
mov
leave
nop
jmp
add
cmp
lods
cwtl
cwtl
mov
cmp
dec
ret
add
nop
nop
nop
nop
jae
pop
add
add
dec
cwtl
or
jbe
clc
nop
nop
nop
nop
jae
cmpsl
add
hlt
pop
jge
add
clc
nop
nop
nop
nop
jae
test
movsl
add
add
lcall
fcmovu
aas
add
clc
nop
nop
nop
nop
jae
push
add
xchg
sbb
mov
clc
nop
nop
nop
nop
jae
and
dec
stos
repnz
sbb
clc
nop
nop
nop
nop
jae
pop
push
mov
add
add
cmp
clc
nop
nop
nop
nop
jae
test
add
sub
sti
nop
push
mov
leave
nop
jmp
addl
movsl
add
or
add
nop
nop
nop
nop
jae
roll
add
lods
add
or
adc
hlt
out
decl
sti
mov
clc
nop
nop
nop
nop
jae
and
test
hlt
pop
mov
add
jle
ljmp
push
clc
nop
nop
nop
nop
jae
push
xchg
test
add
or
nop
nop
nop
jae
add
add
xchg
adc
imul
adc
add
mov
add
add
cmpsl
xchg
add
jge
add
mov
xlat
add
mov
nop
push
mov
leave
nop
jmp
add
add
test
incl
push
clc
nop
nop
nop
nop
jae
sbb
add
add
add
nop
nop
nop
nop
jae
add
and
sbb
cmp
add
dec
inc
add
test
add
sub
pushl
call
clc
nop
nop
nop
nop
jae
pop
add
pop
sub
pop
sbb
xor
rcll
popa
inc
add
lcall
add
sar
nop
nop
nop
nop
jae
push
add
mov
add
add
add
call
clc
nop
nop
nop
nop
jae
add
xlat
add
cmp
pop
sbb
nop
nop
nop
jae
add
hlt
and
add
and
clc
nop
nop
nop
nop
jae
add
push
movsl
sbb
add
decl
test
nop
nop
nop
jae
dec
and
add
xchg
mov
push
clc
nop
nop
nop
nop
jae
add
add
push
add
inc
jbe
pop
pop
dec
nop
push
mov
leave
nop
jmp
add
or
add
and
nop
nop
nop
nop
jae
lcall
add
and
ljmp
inc
pop
icebp
push
clc
nop
nop
nop
nop
jae
add
add
and
clc
nop
nop
nop
nop
jae
cmpsl
jge
dec
hlt
lcall
in
mov
clc
nop
nop
nop
nop
jae
dec
mov
add
roll
call
in
add
cltd
xchg
inc
add
add
mov
dec
cmp
testl
nop
push
mov
leave
nop
jmp
add
mov
sbb
nop
nop
nop
nop
jae
dec
push
add
sub
add
add
lcall
outsl
nop
push
mov
leave
nop
jmp
add
mov
add
out
lods
call
clc
nop
nop
nop
nop
jae
add
cwtl
add
jne
clc
nop
nop
nop
nop
jae
jge
add
add
mov
xchg
ret
add
dec
add
add
add
mov
clc
nop
nop
nop
nop
jae
add
and
adc
xor
push
nop
push
mov
leave
nop
jmp
les
lods
sbb
mov
clc
nop
nop
nop
nop
jae
add
add
add
lcall
add
les
sbb
adc
push
clc
nop
nop
nop
nop
jae
dec
mov
cmp
add
add
imul
nop
push
mov
leave
nop
jmp
add
mov
add
loop
mov
xchg
or
push
mov
leave
nop
jmp
dec
mov
sub
add
cmpsl
mov
and
filds
nop
nop
nop
jae
add
cwtl
inc
adc
mov
dec
push
nop
push
mov
leave
nop
jmp
add
add
xchg
cwtl
cmpsb
lcall
jmp
nop
nop
jae
jge
pop
add
pop
add
mov
xchg
jmp
nop
nop
nop
jae
add
add
and
shrb
add
add
add
and
mov
nop
nop
nop
nop
jae
add
test
add
repnz
mov
add
add
add
add
or
incl
and
add
clc
nop
nop
nop
nop
jae
roll
and
jge
xchg
mov
adc
nop
nop
nop
nop
jae
add
add
add
mov
push
mov
xchg
ret
add
add
add
popa
push
mov
xchg
ret
ret
add
loop
cwtl
push
mov
nop
push
mov
leave
nop
jmp
addl
sub
add
ret
nop
push
mov
leave
nop
jmp
add
cwtl
hlt
add
dec
push
xchg
pop
add
and
add
add
add
mov
add
push
mov
nop
mov
inc
cmovb
sub
lret
add
add
loopne
jns
push
mov
xchg
ret
add
ret
inc
cwtl
mov
imul
mov
dec
cwtl
add
add
mov
nop
nop
nop
jae
mov
add
dec
inc
add
add
ljmp
shrl
nop
nop
nop
nop
jae
add
add
add
cwtl
add
je
sub
nop
nop
nop
nop
jae
add
jge
add
add
push
push
mov
xchg
ret
add
add
cmp
xchg
adc
outsb
mov
add
clc
nop
nop
nop
nop
jae
addl
add
mov
nop
nop
nop
nop
jae
test
dec
lcall
add
mov
sbb
clc
nop
nop
nop
nop
jae
dec
cmp
fildl
cmp
rclb
push
inc
add
add
adc
repz
clc
nop
nop
nop
nop
jae
push
pop
lcall
add
nop
push
mov
leave
nop
jmp
hlt
add
xchg
dec
jbe
add
clc
nop
nop
nop
nop
jae
cwtl
add
add
add
gs
clc
nop
nop
nop
nop
jae
and
mov
add
roll
pop
lea
clc
nop
nop
nop
nop
jae
add
mov
es
jmp
inc
push
clc
nop
nop
nop
nop
jae
adc
inc
mov
add
fwait
nop
push
mov
leave
nop
jmp
addl
add
lods
add
fs
clc
nop
nop
nop
nop
jae
add
cmpsl
add
cwtl
add
push
popf
mov
clc
nop
nop
nop
nop
jae
add
add
clc
nop
nop
nop
nop
jae
add
add
hlt
add
hlt
or
lcall
jg
clc
nop
nop
nop
nop
jae
jge
sbb
jge
cmp
and
fucomp
mov
nop
nop
nop
nop
jae
sbb
add
push
inc
clc
nop
nop
nop
nop
jae
add
add
add
loop
cwtl
add
lcall
lods
push
clc
nop
nop
nop
nop
jae
add
sub
push
add
lcall
nop
nop
nop
jae
movsl
add
mov
add
nop
popa
push
clc
nop
nop
nop
nop
jae
cwtl
add
and
add
dec
sbb
mov
xchg
ret
or
add
jge
pop
add
add
add
add
clc
nop
nop
nop
nop
jae
cmpsl
cwtl
dec
add
pop
loop
add
mov
clc
nop
nop
nop
nop
jae
adc
inc
add
add
insl
pop
nop
push
mov
leave
nop
jmp
xlat
mov
and
sbb
cmpsl
push
mov
cwtl
jns
arpl
clc
nop
nop
nop
nop
jae
push
xchg
add
xchg
clc
nop
nop
nop
nop
jae
sbb
sbb
add
pop
cltd
xchg
clc
nop
nop
nop
nop
jae
dec
test
movsl
test
add
xor
add
clc
nop
nop
nop
nop
jae
add
xchg
add
add
jne
nop
push
mov
leave
nop
jmp
test
pop
dec
cwtl
add
mov
decl
addb
or
ret
dec
xchg
sbb
add
ss
push
mov
pop
lcall
mov
in
add
add
scas
lcall
inc
bound
xchg
ret
mov
ret
add
test
mov
sub
jl
add
add
add
add
in
add
sbb
mov
stos
clc
nop
nop
nop
nop
jae
lcall
add
add
cld
mov
incl
pushl
sbb
nop
push
mov
leave
nop
jmp
add
xchg
add
lcall
nop
push
mov
leave
nop
jmp
add
xchg
lcall
incl
add
nop
jmp
add
xchg
loop
jne
sbb
clc
nop
nop
nop
nop
jae
add
add
add
adc
xchg
clc
nop
nop
nop
nop
jae
hlt
add
inc
add
movsl
add
push
div
nop
push
mov
leave
nop
jmp
mov
mov
sub
lods
add
rorl
lcall
ljmp
sbb
push
mov
xchg
ret
add
dec
cmpsl
dec
cmp
outsl
inc
push
mov
xchg
ret
push
add
hlt
add
or
clc
nop
nop
nop
nop
jae
add
mov
mov
xchg
ret
add
add
dec
add
add
or
add
clc
nop
nop
nop
nop
jae
add
add
xchg
nop
push
mov
leave
nop
jmp
push
and
pop
add
fistpl
mov
clc
nop
nop
nop
nop
jae
add
inc
mov
add
lods
add
lcall
push
imul
or
ret
les
addl
add
adcl
nop
nop
nop
nop
jae
add
add
or
sbb
mov
jl
flds
sar
nop
nop
nop
nop
jae
add
dec
fistpl
dec
cmp
int3
stos
clc
nop
nop
nop
nop
jae
andl
les
cmp
ljmp
lea
nop
push
mov
leave
nop
jmp
lcall
pop
add
aas
stos
nop
push
mov
leave
nop
jmp
add
add
add
mov
push
mov
xchg
ret
roll
add
xlat
add
or
jne
clc
nop
nop
nop
nop
jae
dec
mov
xchg
add
stos
ret
push
mov
xchg
ret
cmp
add
xchg
cmp
jae
clc
nop
nop
nop
nop
jae
add
add
dec
or
add
nop
nop
nop
nop
jae
hlt
and
lcall
sub
xlat
ror
clc
nop
nop
nop
nop
jae
add
add
sub
ret
nop
push
mov
leave
nop
jmp
add
lods
ret
xchg
add
add
push
mov
add
fmuls
add
add
add
add
sub
lcall
nop
nop
jae
and
dec
push
pop
test
add
add
dec
sbb
push
mov
jae
scas
add
add
add
adc
out
add
pop
add
jnp
push
movzwl
clc
nop
nop
nop
nop
jae
sub
add
shrl
mov
push
add
add
jae
and
mov
dec
fwait
xor
add
clc
nop
nop
nop
nop
jae
add
add
jge
movsl
push
rclb
pushf
jl
add
pop
sub
add
pop
dec
add
pushl
push
cmp
add
clc
nop
nop
nop
nop
jae
and
inc
add
ret
inc
loopne
nop
nop
nop
nop
jae
jge
cmp
add
add
add
sub
clc
nop
nop
nop
nop
jae
and
add
push
mov
lcall
push
mov
xchg
ret
add
add
lcall
les
add
add
nop
nop
nop
nop
jae
mov
and
mov
inc
mov
clc
nop
nop
nop
nop
jae
dec
add
sbb
push
xchg
nop
nop
nop
nop
jae
add
add
cmpsl
mov
mov
jbe
xchg
inc
push
push
mov
xchg
ret
add
add
sbb
cmp
sub
add
lcall
incl
loope
push
mov
leave
nop
jmp
xchg
push
rcrl
push
clc
nop
nop
nop
nop
jae
add
sbb
xchg
add
push
mov
leave
nop
jmp
mov
add
cmp
mov
mov
insb
inc
add
hlt
xlat
and
sbb
cmp
loop
shll
add
clc
nop
nop
nop
nop
jae
mov
add
push
mov
ret
adc
mov
xchg
ret
add
mov
add
push
cmp
mov
xchg
ret
xchg
add
add
dec
add
add
push
xor
clc
nop
nop
nop
nop
jae
lcall
hlt
or
call
push
mov
leave
nop
jmp
dec
loop
add
mov
sbb
test
clc
nop
nop
nop
nop
jae
add
add
pop
cmp
add
clc
nop
nop
nop
nop
jae
xchg
add
add
jmp
fldl
mov
leave
nop
jmp
add
add
add
test
nop
push
mov
leave
nop
jmp
add
xchg
mov
cmpsl
jge
les
add
pop
outsl
add
filds
jne
daa
add
push
add
mov
add
add
add
add
cmp
pop
or
idivl
xor
add
add
pop
shll
les
dec
or
loop
jo
push
mov
cmp
in
add
add
adc
leave
add
flds
mov
add
clc
nop
nop
nop
nop
jae
add
cmpsl
add
add
add
les
popf
mov
clc
nop
nop
nop
nop
jae
add
hlt
add
add
xor
push
mov
leave
nop
jmp
add
add
xchg
dec
jl
add
clc
nop
nop
nop
nop
jae
add
sub
and
add
add
je
into
inc
not
clc
nop
nop
nop
nop
jae
add
xchg
add
nop
nop
jae
xlat
add
ret
add
jmp
lret
lea
push
mov
xchg
ret
add
add
jge
nop
push
mov
leave
nop
jmp
stos
xchg
add
push
xchg
inc
add
add
inc
mov
clc
nop
nop
nop
nop
jae
inc
add
add
add
loop
add
push
clc
nop
nop
nop
nop
jae
mov
add
add
add
cmp
nop
nop
nop
jae
add
cmp
movsl
add
mov
pop
nop
push
mov
leave
nop
jmp
pop
and
add
add
inc
stos
clc
nop
nop
nop
nop
jae
add
add
add
xchg
add
cmp
push
mov
xchg
ret
stos
add
jge
pop
sbb
add
clc
nop
nop
nop
nop
jae
add
add
cmp
hlt
adc
nop
nop
jae
sub
and
add
cmpsl
dec
or
cmp
std
mov
push
mov
xchg
ret
lods
xchg
cwtl
add
test
sbb
cmp
push
mov
leave
nop
jmp
or
add
add
nop
nop
nop
jae
ret
add
xlat
add
add
fmuls
rorl
nop
nop
nop
nop
jae
add
add
xlat
add
add
nop
push
mov
leave
nop
jmp
add
push
outsb
jle
mov
clc
nop
nop
nop
nop
jae
movsl
add
sbb
add
add
xor
nop
nop
jae
cwtl
add
cwtl
add
add
nop
push
mov
leave
nop
jmp
add
pop
pop
add
cmp
or
mov
xchg
ret
fisttpl
add
xchg
jle
jne
clc
nop
nop
nop
nop
jae
loop
add
add
nop
nop
nop
nop
jae
jge
jge
add
and
add
push
imul
clc
nop
nop
nop
nop
jae
sub
xlat
xlat
cmpsl
add
dec
add
push
mov
leave
nop
jmp
xchg
add
add
mov
push
mov
xchg
ret
add
xchg
lods
push
mov
xchg
ret
add
add
add
add
sub
jge
nop
nop
nop
nop
jae
xchg
inc
add
add
add
mov
iret
movswl
clc
nop
nop
nop
nop
jae
test
add
add
cmpsl
pop
xor
push
mov
xchg
ret
mov
dec
lods
and
fcomi
mov
clc
nop
nop
nop
nop
jae
test
add
and
add
hlt
pop
aas
mov
push
mov
xchg
ret
and
pop
inc
loop
pop
add
add
sbb
ret
push
mov
xchg
ret
roll
cmp
add
inc
add
add
xchg
adc
outsb
int
nop
push
mov
leave
nop
jmp
and
add
add
test
push
imul
jmp
hlt
cwtl
add
add
loop
clc
nop
nop
nop
nop
jae
sub
add
pop
add
nop
nop
nop
nop
jae
add
xchg
push
jns
test
repz
clc
nop
nop
nop
nop
jae
add
add
add
xchg
in
lret
scas
pop
nop
push
mov
leave
nop
jmp
add
loop
push
add
add
stos
dec
add
testb
mov
xchg
ret
jge
mov
add
dec
sub
pop
je
clc
nop
nop
nop
nop
jae
hlt
add
mov
fisttpl
test
test
jecxz
clc
nop
nop
nop
nop
jae
xlat
add
add
pushl
insb
fcompl
fbstp
sar
nop
nop
nop
nop
jae
cmpsl
add
add
push
add
cmp
add
jmp
cmp
nop
nop
nop
nop
jae
cwtl
mov
push
add
add
lea
clc
nop
nop
nop
nop
jae
add
add
cmp
decl
loopne
clc
nop
nop
nop
nop
jae
add
cmpsl
add
add
repz
nop
nop
nop
nop
jae
pop
add
push
add
std
push
clc
nop
nop
nop
nop
jae
mov
sub
hlt
adc
pop
ss
cmp
mov
xchg
ret
add
test
add
lcall
nop
jae
add
lcall
icebp
fwait
push
mov
xchg
ret
dec
and
orl
pop
push
mov
xchg
ret
add
add
add
decl
nop
nop
nop
nop
jae
lcall
mov
add
add
clc
nop
nop
nop
nop
jae
cmpsl
add
pop
mov
add
sbb
clc
nop
nop
nop
nop
jae
or
add
add
add
pop
lcall
adcb
jmp
and
add
add
jge
add
clc
nop
nop
nop
nop
jae
or
addl
std
push
mov
add
movsb
add
imul
incb
inc
add
add
or
call
mov
clc
nop
nop
nop
nop
jae
loop
xchg
add
cwtl
add
mov
jl
add
cmpsl
dec
cmp
mov
pop
shl
nop
push
mov
leave
nop
jmp
cmp
add
add
add
push
std
pop
clc
nop
nop
nop
nop
jae
jge
ret
ret
loop
dec
add
push
je
clc
nop
nop
nop
nop
jae
or
add
push
inc
sbb
sbb
xorl
clc
nop
nop
nop
nop
jae
add
add
inc
clc
nop
nop
nop
nop
jae
add
add
add
sbb
inc
loope
repnz
nop
nop
nop
nop
jae
add
movsl
and
add
add
incl
mov
clc
nop
nop
nop
nop
jae
ret
inc
movsl
add
cmp
data16
call
push
mov
xchg
ret
add
add
add
cmp
jge
clc
nop
nop
nop
nop
jae
loop
loop
push
test
add
push
push
mov
xchg
ret
roll
les
add
sub
add
nop
nop
nop
nop
jae
add
jge
add
add
dec
cmpsl
hlt
cmp
mov
xchg
ret
add
and
sub
add
data16
pop
push
mov
xchg
ret
and
add
dec
add
add
jmp
sar
nop
nop
nop
jae
jge
inc
push
hlt
add
add
add
add
clc
nop
nop
nop
nop
jae
add
add
mov
xchg
ret
add
pop
pop
addl
add
hlt
sub
sbb
add
popl
das
add
xchg
scas
add
add
and
add
incl
mov
push
mov
xchg
ret
add
add
inc
add
fistl
ljmp
stos
pushl
call
inc
add
pop
fistpl
cmpsl
add
mov
xchg
ret
add
push
add
loop
add
mov
clc
nop
nop
nop
nop
jae
loop
add
add
fwait
push
mov
xchg
ret
adc
sbb
add
cmp
movsl
and
ljmp
add
nop
push
mov
leave
nop
jmp
test
cmp
add
shr
clc
nop
nop
nop
nop
jae
add
pop
roll
add
stos
in
push
push
mov
xchg
ret
add
add
loop
test
dec
xchg
divb
add
push
mov
xchg
ret
movsl
add
les
add
cwtl
add
xor
clc
nop
nop
nop
nop
jae
add
add
add
push
addr16
nop
push
mov
leave
nop
jmp
lods
add
andl
in
leave
nop
jmp
push
add
inc
mov
ljmp
test
out
clc
nop
nop
nop
nop
jae
add
add
add
cmpsl
ja
clc
nop
nop
nop
nop
jae
add
shll
ret
add
and
sbb
clc
nop
nop
nop
nop
jae
rcll
mov
sbb
mov
nop
push
push
push
nop
push
mov
leave
nop
jmp
add
add
add
and
pop
push
inc
push
pop
shr
clc
nop
nop
nop
nop
jae
sub
xlat
add
add
test
dec
mov
push
mov
xchg
ret
cwtl
add
cmp
shl
movsb
push
mov
xchg
ret
inc
add
test
add
add
ret
cmp
nop
push
mov
leave
nop
jmp
roll
add
dec
sbb
sbb
nop
nop
nop
nop
jae
add
test
cmp
add
add
push
mov
xchg
ret
cmp
add
dec
pop
loop
add
jmp
add
add
add
add
call
call
push
mov
xchg
ret
xchg
mov
add
mov
add
clc
nop
nop
nop
nop
jae
add
dec
pop
mov
stos
pop
xchg
das
leave
clc
nop
nop
nop
nop
jae
add
or
add
mov
into
add
add
nop
jmp
add
push
mov
or
add
clc
nop
nop
nop
nop
jae
les
mov
add
and
nop
nop
nop
nop
jae
loop
cwtl
test
lods
add
jp
push
clc
nop
nop
nop
nop
jae
cwtl
add
xlat
mov
add
pop
mov
pop
clc
nop
nop
nop
nop
jae
add
add
pop
add
inc
into
add
lcall
fistl
bound
and
add
add
add
aaa
add
push
mov
xchg
ret
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
nop
nop
nop
jae
dec
add
add
dec
dec
add
decl
nop
nop
nop
jae
jge
add
fildl
cwtl
add
fwait
push
mov
xchg
ret
add
cwtl
add
fistpl
add
jecxz
nop
nop
nop
nop
jae
add
mov
add
mov
incl
mov
inc
add
add
test
test
push
js
mov
xchg
ret
pop
push
add
cmp
add
je
clc
nop
nop
nop
nop
jae
add
stos
xchg
add
cltd
fld1
clc
nop
nop
nop
nop
jae
push
push
pop
add
add
mov
sub
mov
leave
nop
jmp
add
mov
add
sbb
pop
mov
push
mov
xchg
ret
ret
add
add
movsl
add
addl
add
call
xlat
add
clc
nop
nop
nop
nop
jae
or
add
pop
add
add
nop
jmp
push
add
mov
push
fildl
fucomip
sbb
clc
nop
nop
nop
nop
jae
push
xchg
add
add
push
mov
xchg
ret
dec
add
xchg
and
fistpl
xchg
pushl
jg
nop
push
mov
leave
nop
jmp
sub
mov
add
pushl
jo
add
hlt
inc
mov
movsl
mov
lcall
clc
nop
nop
nop
nop
jae
add
add
nop
test
in
je
clc
nop
nop
nop
nop
jae
xchg
push
jb
push
nop
push
mov
leave
nop
jmp
xchg
add
test
add
add
nop
nop
nop
nop
jae
add
hlt
dec
add
add
xchg
clc
nop
nop
nop
nop
jae
cmp
add
test
xchg
shll
nop
nop
nop
jae
ret
add
mov
mov
testl
nop
nop
jae
add
mov
xor
add
and
pop
add
call
clc
nop
nop
nop
nop
jae
pop
cwtl
add
add
add
cmp
push
nop
push
mov
leave
nop
jmp
lods
test
jge
add
cmp
subl
push
mov
xchg
ret
add
test
sub
add
push
addr16
push
mov
xchg
ret
fildl
dec
add
add
add
clc
call
cld
lods
decl
les
nop
nop
nop
nop
jae
hlt
add
add
out
clc
nop
nop
nop
nop
jae
add
add
add
nop
nop
nop
nop
jae
mov
add
cwtl
pop
add
sub
add
jp
add
nop
push
mov
leave
nop
jmp
and
sub
movsl
add
fildl
clc
nop
nop
nop
nop
jae
mov
add
add
mov
leave
nop
jmp
cmpsl
test
add
add
add
mov
clc
nop
nop
nop
nop
jae
lcall
add
add
nop
push
mov
leave
nop
jmp
add
add
add
add
nop
push
mov
leave
nop
jmp
inc
add
add
mov
sbb
nop
nop
nop
nop
jae
mov
add
adc
aam
pushf
inc
and
clc
nop
nop
nop
nop
jae
push
add
add
add
pop
mov
lods
iret
incl
mov
and
add
les
outsb
and
mov
adc
nop
nop
nop
nop
jae
push
cmp
add
pop
fld1
clc
nop
nop
nop
nop
jae
add
add
cmpsl
add
jno,pt
push
mov
xchg
ret
push
add
add
cmp
inc
sbb
nop
jae
add
inc
dec
add
add
lea
clc
nop
nop
nop
nop
jae
add
pop
and
add
sbb
xor
nop
nop
nop
nop
jae
add
dec
sub
jge
add
pop
xchg
clc
nop
nop
nop
nop
jae
add
add
dec
ret
stos
pop
push
mov
xchg
ret
test
mov
add
add
fistpl
clc
nop
nop
nop
nop
jae
dec
lcall
loop
jge
push
loopne
mov
xchg
ret
hlt
add
and
xchg
add
cmpsl
lods
cwtl
lahf
jmp
add
dec
add
dec
xchg
dec
add
cmp
add
add
inc
mov
sbb
push
mov
xchg
ret
inc
inc
mov
add
movsl
inc
add
dec
push
nop
push
mov
leave
nop
jmp
xchg
pop
add
sbb
push
lds
push
mov
leave
nop
jmp
and
add
add
jge
insb
iret
pop
push
mov
xchg
ret
cmp
add
ret
dec
and
pushl
clc
nop
nop
nop
nop
jae
xlat
cmpsl
add
push
lcall
sbb
nop
nop
nop
nop
jae
mov
add
add
pop
nop
push
mov
leave
nop
jmp
push
ret
and
sub
xlat
add
add
mov
xchg
ret
sbb
add
xchg
cmp
xchg
lcall
arpl
xchg
ret
cmpsl
pop
cmp
add
add
mov
push
pushl
clc
nop
nop
nop
nop
jae
add
cmp
add
ljmp
nop
jae
add
add
add
and
mov
push
mov
xchg
ret
ret
cmpsl
add
add
push
push
ret
cld
push
mov
xchg
ret
add
cmp
cmp
mov
dec
ret
mov
jle
clc
nop
nop
nop
nop
jae
add
add
add
add
dec
loop
cmpw
clc
nop
nop
nop
nop
jae
add
add
scas
pushl
jne
clc
nop
nop
nop
nop
jae
fcmovnbe
sbb
add
ljmp
push
mov
aam
sub
lcall
add
add
add
daa
cmp
or
sbb
xchg
es
scas
test
decl
mov
ret
clc
nop
nop
nop
nop
jae
dec
add
dec
jae
or
nop
push
mov
leave
nop
jmp
mov
xchg
mov
fistpl
clc
nop
nop
nop
nop
jae
dec
push
add
add
add
test
mov
clc
nop
nop
nop
nop
jae
xchg
add
add
cmp
cmpsl
add
nop
nop
nop
nop
jae
test
pop
cmpsl
and
inc
push
xchg
mov
call
xchg
jmp
add
xchg
lcall
push
movsl
cmp
pop
pop
cwtl
dec
cmp
push
nop
push
mov
leave
nop
jmp
adc
add
add
pop
dec
add
push
push
mov
xchg
ret
cmp
add
stos
push
add
mov
fwait
nop
push
mov
leave
nop
jmp
add
mov
add
pop
and
and
sbb
adc
mov
clc
nop
nop
nop
nop
jae
xchg
inc
add
add
add
mov
clc
nop
nop
nop
nop
jae
sub
movsl
add
mov
push
mov
xchg
ret
sbb
mov
pop
add
xlat
inc
jmp
add
test
and
pop
add
and
lcall
nop
nop
nop
nop
jae
mov
lcall
add
mov
in
leave
nop
jmp
add
xchg
push
mov
add
pop
addl
or
nop
nop
nop
nop
jae
sbb
pop
add
add
shll
ficompl
orl
out
sar
clc
nop
nop
nop
nop
jae
add
add
fmuls
adc
clc
nop
nop
nop
nop
jae
add
cmp
sbb
fdivr
or
jge
clc
nop
nop
nop
nop
jae
cmpl
add
add
mov
scas
pushl
clc
nop
nop
nop
nop
jae
add
sbb
add
or
nop
nop
nop
nop
jae
mov
mov
dec
mov
jle
in
pop
clc
nop
nop
nop
nop
jae
add
push
mov
add
roll
and
sub
pushl
add
sbb
push
mov
xchg
ret
and
jge
add
add
stos
push
mov
xchg
ret
add
test
add
cwtl
inc
add
cmp
out
jno
adc
push
mov
xchg
ret
add
add
add
mov
nop
push
mov
leave
nop
jmp
test
sbb
rcl
add
mov
clc
nop
nop
nop
nop
jae
add
test
add
add
xchg
add
push
mov
xchg
ret
les
sub
mov
clc
nop
nop
nop
nop
jae
push
add
dec
mov
add
jmp
decl
and
dec
popl
add
outsb
add
xchg
add
in
add
lahf
push
mov
outsb
add
pop
add
cwtl
add
sahf
test
push
add
add
test
in
add
mov
arpl
add
in
mov
adc
or
call
mov
ljmp
ljmp
std
sub
lcall
insb
fildl
test
decl
dec
sbb
incl
int
cmc
add
call
shl
lret
mov
lds
xchg
xchg
mov
ljmp
popa
pop
cmp
dec
stos
xor
push
mov
icebp
lods
ljmp
pushl
mov
ljmp
ss
mov
iret
jg
cs
ljmp
dec
mov
call
fs
lcall
jle
sbb
or
pushl
cmp
decl
in
test
test
jmp
mov
jnp
xlat
push
jno
lcall
cmc
fwait
cmp
ret
cmpsl
insl
hlt
stc
pop
pusha
xor
scas
call
cmp
cmc
ljmp
pushl
in
jge
jb
sbb
sbb
je
addr16
jbe
inc
inc
xlat
lahf
pop
push
fimull
dec
bound
gs
data16
iret
jp
stos
sbb
shrb
in
pop
shlb
jl
fdivp
dec
enter
incl
pushl
cmp
call
and
jb
inc
mov
shl
sub
jg
mov
test
incl
ljmp
aas
fcoms
fs
das
fdivl
xor
aas
and
repz
out
int3
cmp
call
xchg
dec
adc
ljmp
jo
shlb
ss
cmp
jecxz
aas
mov
or
ljmp
lcall
icebp
jmp
inc
out
orl
fisttpll
push
mov
call
mov
aam
pushl
sub
push
shl
jb
neg
cld
imul
ljmp
mov
fidivrl
leave
push
pushl
add
mov
xchg
push
jno
pop
fwait
mov
mov
xchg
fwait
daa
push
cmc
push
stos
decl
addr16
sahf
pop
cwtl
rorl
sub
lock
pushl
cltd
aas
inc
stc
dec
add
sbb
xor
shl
test
call
jbe
dec
mov
incl
test
incl
pusha
jb
jno
mov
incl
aam
jne
out
mov
loopne
aas
and
incl
js
js
jge
cmc
xor
pop
pop
cmp
dec
cmp
jbe
lcall
mov
cwtl
sub
rclb
jl
insl
pop
sub
ljmp
ljmp
lahf
adc
cwtl
lods
incl
jmp
arpl
call
lcall
pop
clc
sahf
imul
jnp
call
sub
incl
pushl
shl
xchg
std
shrl
pushl
lcall
push
adc
xor
dec
int
decl
movsl
push
ja
pusha
mov
push
push
jne
leave
adc
imul
jmp
sar
fs
ljmp
imul
scas
stos
in
mov
lcall
test
scas
pushl
xor
pop
lds
cmp
lea
aaa
rcrl
test
pop
cmp
jmp
add
adc
fistps
jno
fs
cwtl
leave
aad
jp
movsb
incl
xchg
adc
lock
jle
cltd
sub
pop
and
clc
or
ljmp
ss
jmp
call
jg
imul
call
ljmp
repz
or
in
mov
lcall
cmpsb
decl
call
mov
jmp
adc
cmpsb
sti
xchg
cwtl
inc
xor
jmp
sbb
push
decl
into
inc
inc
ja
out
and
cmp
incl
push
dec
adc
scas
leave
dec
cmp
aaa
sub
pushl
push
ljmp
pop
mov
pushl
and
pop
outsb
iret
push
inc
push
call
idiv
and
call
repnz
shrb
aas
mov
adc
iret
or
call
imulb
dec
sbb
push
inc
or
popa
cltd
jo
push
movb
aaa
aaa
add
lods
pushf
bound
pop
sbb
in
or
jmp
test
in
inc
mov
sarb
adc
add
lcall
jmp
call
je
mov
push
popa
aas
xchg
cmp
add
push
add
inc
push
sub
loopne
pop
in
mov
cmp
or
or
movsb
cmp
mov
incl
cwtl
in
out
sahf
mov
stos
jmp
cmpl
data16
cmp
jmp
decl
inc
dec
outsb
leave
stos
cltd
xchg
pop
mov
adc
into
sarl
or
call
cmpsl
fildl
call
decl
shr
insl
jnp
es
jmp
ficompl
fdiv
enter
ljmp
aas
cmp
test
pushl
inc
adc
pop
pop
enter
jmp
aas
cmpl
mov
ljmp
inc
shlb
psraw
pushl
cmp
rcl
mov
ljmp
xchg
imul
decl
out
cmp
ret
cs
jns
outsb
mov
fadds
ret
ret
outsb
jbe
xchg
push
ss
mov
xchg
sub
dec
pushf
xor
or
call
dec
fwait
cmp
push
lahf
dec
lock
cmc
loop
inc
imul
imul
jne
std
iret
xor
xchg
repnz
sarl
pushl
jnp
xor
jmp
lcall
and
decl
incl
sub
ljmp
jle
cmpsb
ljmp
and
pop
ror
movsl
cmc
addr16
call
decl
call
rcl
inc
insl
sub
pushl
or
hlt
scas
lcall
int
shrb
ret
adc
js
ret
divsd
insl
pop
loopne
ljmp
jmp
adc
xor
sahf
adc
adc
pop
sub
dec
cltd
push
roll
es
lcall
addr16
leave
int
call
dec
mov
pop
cmp
call
xor
inc
cmp
mov
incl
dec
add
f2xm1
xchg
dec
fwait
je
dec
lods
decl
lcall
and
dec
inc
aad
jecxz
xor
ja
scas
dec
aas
pusha
scas
mov
mov
sbb
call
sbb
mov
pop
scas
jmp
incl
pushl
inc
scas
ja
loop
mov
dec
aaa
cmc
outsl
shll
inc
cmp
push
jle
add
pop
sbb
adc
cmp
pop
aam
sub
decl
xor
add
pushl
add
insl
mov
inc
or
mov
arpl
and
je
mov
pushl
jns
mov
jbe
jp
and
incl
sub
ljmp
call
mov
xor
add
mov
mov
pushl
test
lcall
sub
ljmp
pusha
xchg
loope
or
call
ss
jbe
and
outsl
cmp
push
pop
or
push
fucomi
int
ss
sub
incl
sbb
ss
mov
test
fs
inc
cmp
pusha
mov
cmp
fildl
add
call
loopne,pt
ds
incl
cmp
pushl
and
push
incl
jns
mov
inc
xchg
out
test
jg
and
lcall
mov
pop
mov
es
jle
repnz
lcall
mov
fsubrs
dec
rclb
out
cmp
jmp
pop
add
pushf
rolb
add
pushl
jmp
shlb
fidivs
jmp
lahf
lods
call
jmp
bound
and
sti
mov
mov
decl
incl
jb
xchg
lds
lret
out
in
clc
aaa
popf
loop
lcall
decl
and
jno
aas
into
decl
mov
cmp
sub
jmp
call
xor
jle
test
jmp
or
add
pushl
lcall
mov
push
int
ljmp
repz
sub
jmp
dec
call
cld
jo
xchg
lds
insl
mov
fsts
fstl
and
pop
cmp
cltd
add
jge
js
and
daa
sbb
cmc
cmp
pop
scas
push
das
scas
mov
cmp
or
ljmp
adc
push
or
pop
inc
negl
arpl
stc
mov
call
push
out
ja
cmpsl
push
add
mov
ficomps
cmpl
fbld
mov
faddl
fwait
test
jmp
jmp
dec
lock
aad
fnstcw
mov
jno
sub
xor
cmp
jp
adc
decl
daa
iret
jae
in
in
mov
call
scas
mov
call
lret
jp
inc
mov
call
push
mov
push
xor
les
inc
dec
sub
mov
ljmp
incl
repnz
fists
sahf
or
jmp
psubd
imul
inc
leave
inc
loope
sahf
incb
xor
lcall
data16
and
lcall
mov
mov
and
jne
sbb
sub
decl
cmp
or
ss
enter
pop
dec
sbb
pop
dec
cs
lcall
or
repnz
sub
cmp
aam
mov
mov
lods
pop
pop
push
mov
cmpsl
cs
decl
hlt
jae
dec
hlt
and
call
push
call
fisubs
push
xor
ret
jae
lret
and
push
enter
mov
decl
mov
lock
cmpsl
stc
sub
jmp
push
stos
lcall
cmp
test
ljmp
jmp
enter
fiadds
or
mov
push
es
jmp
jmp
lcall
pop
push
jmp
in
loop
gs
aaa
pop
mov
cmp
lcall
mov
jp
fnsave
ds
call
test
jmp
decl
lcall
shll
mov
repz
orl
hlt
push
mov
pushl
outsb
mov
aam
fdivrp
inc
or
lods
ljmp
cli
mov
push
imul
imul
or
stc
test
jnp
pop
dec
fidivrs
in
stc
fmuls
pusha
mov
fnsave
les
cmc
stos
incl
call
cmpsb
pushl
fdivr
jns
je
ljmp
xor
dec
add
iret
sbb
ljmp
jmp
inc
push
fsubs
stos
lcall
call
or
aas
fsts
aam
jnp
mov
xchg
in
cltd
cmpl
or
sub
movsl
adc
aam
inc
stos
pushl
lcall
and
xor
nop
adc
dec
xor
mov
cmpsl
movsb
cmp
fwait
dec
lret
pushf
mov
cmp
mov
push
jge
dec
daa
sub
fcompl
dec
test
popw
jnp
insl
cli
mov
push
mov
jae
repnz
mov
sub
mov
or
rol
es
call
insl
add
ljmp
lea
neg
loop
mov
add
push
dec
andl
lahf
cmp
decl
cltd
pop
sbb
push
add
lahf
sbb
mov
es
decl
jmp
decl
out
jp
jnp
test
jmp
mov
pushl
es
ljmp
cmp
leavew
cli
aam
and
push
sarb
decl
mov
push
inc
movsl
or
in
push
cli
inc
out
push
push
int3
cwtl
shrb
shll
enter
in
add
incl
sub
pushl
jmp
add
jmp
lcall
jmp
lcall
lods
incl
pushf
repnz
rcrl
push
adc
mov
dec
mov
dec
add
jmp
cld
repz
pushl
pop
jp
ljmp
or
dec
testb
adc
pop
adc
in
mov
call
aas
adc
sub
lcall
call
pushf
dec
or
xchg
add
call
in
pushl
mov
dec
dec
jl
stc
push
loopne
inc
popa
lock
je
inc
cmp
incl
cmp
call
sbb
sbb
test
lcall
in
pop
out
pop
and
call
incl
pop
aas
std
lcall
fwait
pop
les
repz
into
popa
test
cmp
pop
add
ljmp
mov
jmp
imul
mov
push
testb
lcall
jb
rolb
inc
les
jmp
mov
incl
push
outsl
stos
clc
jbe
cmpsl
push
out
jae
roll
outsl
or
incl
divb
test
cmp
jae
xchg
push
ficompl
cwtl
add
lcall
xchg
scas
call
push
pushl
call
mov
lods
jmp
call
mov
lcall
ja
xchg
ja
mov
std
pushf
cmp
lcall
push
insb
lahf
sarl
rolb
call
incl
ds
ss
add
and
call
sahf
sbb
int3
out
pushl
jmp
mov
mov
insb
add
jmp
decl
mov
lcall
sbb
scas
addr16
fcmovnu
hlt
pop
int
add
mov
fbld
add
ficoml
add
incl
in
out
es
ljmp
or
ljmp
jp
inc
sub
ljmp
lcall
bswap
xlat
lods
push
push
lock
inc
rol
push
jne
push
stos
gs
mov
pushl
add
push
cmp
jmp
xchg
mov
test
fs
mov
inc
adc
gs
xor
and
incl
push
clc
cmp
xor
mov
jmp
mov
call
dec
int
incl
jp
pop
fdivrp
rcr
ja
jbe
adc
daa
stc
inc
push
and
pushl
jmp
xchg
imul
cmove
push
cmp
xchg
add
incl
psubq
aad
dec
add
mov
rol
decl
jmp
cmp
jmp
cmpsb
incl
fiaddl
pushl
in
mov
cmp
insl
adc
scas
test
iret
dec
pop
inc
mov
inc
fdiv
dec
add
call
ds
stos
decl
call
repz
call
push
pop
inc
jp
shrl
imul
ljmp
call
cmpsl
add
push
push
outsl
divb
pop
loop
pop
mov
xor
mov
xor
jmp
adc
add
lcall
push
xchg
leave
cltd
leave
dec
pop
popf
scas
call
pushl
xor
lods
lcall
cmp
or
decl
ss
mov
pushl
xchg
loop
addr16
mov
or
and
lcall
stos
jmp
add
decl
ljmp
cmp
mov
cld
adc
out
daa
push
loop
and
mov
pop
lds
inc
cmpl
jmp
out
iret
mov
call
xor
incl
push
dec
scas
sbb
call
pushf
and
mov
ja
stos
ljmp
decl
jmp
clc
enter
ljmp
jmp
mov
mov
loop
test
cltd
xchg
js
test
decl
decl
ljmp
jmp
inc
push
in
loop
ljmp
xor
sub
lcall
jmp
xchg
cmp
cmpsb
jmp
sub
mov
jl
lods
incl
pop
xchg
ret
sub
dec
das
lea
scas
inc
xlat
xchg
jmp
inc
dec
dec
sbb
add
sti
stc
jae
rcl
test
push
xlat
jmp
incl
jmp
inc
test
pushl
dec
lcall
mov
sub
and
jg
xor
incl
sub
inc
mov
insb
xor
mov
cmp
adc
mov
fcmovne
xor
and
cld
dec
mov
sbb
sbb
rcrl
jmp
leave
pop
fcompl
sbb
mov
mov
lods
clc
cmp
scas
lcall
fsubrp
enter
clc
fldt
decl
jmp
push
int3
imul
mov
decl
mov
aas
cmpsb
decl
pop
jnp
pop
cmp
js
add
ljmp
mov
or
add
cmp
into
cmpsb
incl
xchg
xor
jp
insb
and
insb
jle
cli
aas
pop
dec
pop
push
ja
jae
mov
jne
pop
xchg
push
cmp
push
mov
call
and
jge
test
cmp
decl
out
addr16
adc
incl
cmpsl
pop
aas
daa
test
fnstsw
call
push
push
and
leave
ret
cmp
add
aas
int
lcall
rolb
mov
pop
xor
pushl
adc
pushl
cmp
in
and
loop
inc
repz
stos
call
call
and
lcall
rolb
notl
cmp
jmp
fs
sbb
pushl
jmp
dec
push
fwait
xchg
shll
push
sbb
or
pop
das
mov
call
sub
jmp
incl
negl
out
lea
jge
jmp
fsubrl
mov
pushl
incl
lret
cmpsb
push
test
mov
dec
test
pushl
push
sbb
inc
pmaxsw
pop
bound
shlb
push
inc
shll
call
xor
cld
fwait
jns
mov
xchg
bound
mov
push
xor
mov
call
ret
add
add
mov
rcrb
out
push
push
pop
out
test
dec
daa
sub
ljmp
pushl
adcl
jle
jmp
pop
jg
or
jp
cmpsl
iret
xor
xor
mov
jl
fcmovnbe
mov
ljmp
shl
test
data16
fisttps
ljmp
dec
mov
or
decl
shll
jns
xchg
int
and
dec
out
add
call
daa
push
bound
jo
cs
jmp
adc
pop
fldt
dec
xchg
sbb
gs
mov
pushl
outsl
push
ljmp
xor
inc
sub
stc
pop
or
lcall
data16
in
cmp
incl
decl
lcall
incl
mov
jmp
decl
call
ljmp
lds
cmp
dec
int
pop
sarb
lcall
xchg
outsb
mov
popf
mov
jo
cld
mov
add
jnp
daa
sbb
ljmp
or
je
fucomi
mov
sti
inc
inc
test
jmp
xor
pushl
aas
pop
dec
push
adcl
adc
adc
mov
loop
lea
leave
cmp
pushl
xchg
ss
jp
decl
cmp
mov
pop
ja
fyl2x
lret
data16
stc
movsb
dec
xchg
sarb
dec
mov
popf
xor
jg
out
jmp
das
lock
add
in
dec
dec
andl
lcall
mov
incl
pushl
mov
jns
mov
dec
sub
jmp
dec
adc
jg
adc
inc
mov
and
xor
fidivs
inc
and
incl
call
jne
out
mov
bound
pop
pop
negb
leave
and
inc
adc
sahf
cmp
pop
push
cmp
rol
add
call
in
mov
push
stos
call
jmp
xor
lcall
decl
call
popf
dec
mov
pushl
daa
push
dec
push
inc
std
fwait
and
push
mov
pop
pop
movsl
adc
std
adc
inc
inc
sbb
cs
mov
push
jb
gs
fimull
sub
push
movb
pushl
mov
cmp
pop
mov
add
call
int
out
and
pushl
arpl
lret
leave
sub
ljmp
dec
add
sbb
ljmp
jp
inc
movsb
jmp
xchg
or
pushl
ljmp
adc
pushf
ret
dec
cmp
pop
stc
loopne
out
and
ljmp
jae
pushl
jmp
mov
lock
incl
fstpt
call
pop
popf
sarl
inc
idivb
mov
push
aaa
in
pop
popa
lret
add
in
stos
loope
popf
mov
incl
decl
mov
sub
jmp
sbb
add
les
push
pop
repnz
pusha
mov
adc
out
pop
mov
in
int
insl
cmp
adc
fisubs
mov
mov
inc
mov
call
mov
incl
call
dec
mov
ret
call
push
loope
push
repnz
pushl
mov
in
out
rcll
adc
scas
mov
call
sti
jl
xchg
decl
out
jmp
pushl
out
bound
or
call
adc
in
icebp
hlt
adc
pop
js
mov
jne
push
ficoml
std
sub
push
and
cmp
lret
test
lcall
and
call
adc
xlat
lods
call
outsb
and
mov
cmc
lret
sbb
adc
incl
dec
int3
mov
jmp
fsub
adc
adc
xor
cmp
or
loop
adc
outsb
mov
mov
fimuls
addr16
cmp
out
fldenv
gs
decl
ljmp
es
jmp
in
push
push
movsl
lds
icebp
ja
lods
sbb
ljmp
pmullw
jmp
rcr
adc
mov
mov
ljmp
add
mov
imul
fidivl
xor
fld
jne
leave
mov
testl
push
push
mov
incl
or
incl
inc
xor
sub
call
mov
lret
insl
lods
call
mov
push
dec
fidivl
cltd
xchg
aas
add
dec
sbb
out
xchg
jnp
mov
insb
push
mov
jp
pop
cmc
popf
gs
ljmp
xor
ret
or
pop
adc
incl
pushl
int
jecxz
push
mov
rcrb
mov
mov
cmp
incl
inc
push
sahf
jb
movb
cmp
ficoms
repz
lcall
mov
mov
incl
call
jmp
fildl
lcall
fmuls
repnz
sub
incl
call
jb
lcall
jmp
out
dec
mov
pop
xchg
cltd
xor
popf
incb
lcall
pushl
mov
sbb
decl
inc
cld
in
mov
and
inc
sbb
aas
test
mov
inc
dec
in
jle
xor
and
decl
xor
loop
dec
stc
xchg
repz
push
or
ljmp
in
clc
dec
jae,pt
push
jbe
popf
movsl
jnp
xchg
fisttpll
iret
icebp
sahf
xor
fdivr
xchg
xchg
push
mov
jmp
mov
cld
hlt
in
in
add
xchg
imul
out
cmpsl
jp
adc
ljmp
mov
jmp
xor
decl
addr16
add
ljmp
cmp
popf
push
test
dec
mov
ljmp
jmp
jno
jb
sbb
pushl
add
lods
fstps
mov
bound
jmp
add
mov
add
jmp
sub
out
bound
add
imul
cmp
lcall
xchg
sbb
sub
sub
adc
or
lcall
sbb
inc
dec
sbb
decl
inc
mov
xchg
scas
push
dec
jb
sti
pminsw
jno
sub
call
icebp
xor
ljmp
jmp
jmp
xchg
idivb
inc
or
pushl
push
inc
push
movsl
divb
jae
lcall
es
jmp
jg
test
pushl
popa
stc
call
fcomps
aam
push
in
adc
sub
mov
inc
fisubl
sbb
or
jmp
fldenv
mov
movsl
and
sbb
push
decl
sbb
pop
enter
inc
cmp
jmp
out
shrb
bound
jle
dec
in
cmp
jbe
or
out
test
fsubrl
mov
ljmp
incl
cmp
in
and
decl
add
incl
pop
test
js
or
call
or
add
pushl
out
xchg
adc
icebp
mov
adc
insl
or
lcall
lcall
xchg
incl
xor
push
sti
xchg
xor
test
jmp
adc
sub
call
out
inc
out
cmp
ss
ja
outsb
stos
shlb
arpl
jle
incl
lcall
sbb
add
dec
mov
pop
pop
insl
mov
cli
add
incl
mov
pushl
les
push
fidivrs
out
pop
adc
popa
jecxz
outsb
out
mov
jmp
decl
lcall
imul
daa
jp
cmc
pop
sbb
cltd
jmp
dec
and
push
ret
fiadds
test
jmp
in
ljmp
push
into
push
xchg
test
jmp
push
loopne
mov
jmp
mov
cmc
in
test
call
aaa
add
incl
incl
dec
xor
hlt
rorl
dec
mov
xor
call
js
shll
incl
stc
sub
cmp
popf
nop
shlb
clc
jl
mov
ljmp
call
ljmp
or
xor
std
popl
imul
pop
rcll
push
cmp
jmp
and
pushl
xchg
jecxz
fs
pushl
incl
add
xchg
push
cmp
mov
in
cltd
and
data16
add
decl
push
mov
fwait
pop
pop
dec
lea
xor
mov
fstpl
js
jecxz
clc
arpl
jmp
sub
decl
aas
faddl
ficomps
pop
dec
inc
or
decl
pop
pusha
insl
inc
mov
std
adc
push
aas
dec
gs
jg
jbe
xchg
pushl
pop
rcr
and
push
pushf
mov
lahf
call
pushl
loopne
stos
ljmp
pop
xchg
incl
jo
dec
dec
mov
inc
je
mov
xor
fs
rcr
mov
pushl
hlt
sarl
jg
pop
pop
or
jmp
rcrl
jns
decl
stos
int3
sbb
pop
out
pop
arpl
cmp
enter
das
sbb
mov
ljmp
jmp
call
add
icebp
sahf
int
push
jmp
mov
repz
cmp
cmp
fidivl
lods
aas
xorl
loope
std
mov
pop
in
lea
fdivs
pushf
xchg
ficoml
bound
cmp
xchg
dec
cmp
gs
repnz
adc
mov
cli
iret
mov
call
dec
push
insl
pop
xchg
sbb
pop
fcomip
dec
mov
call
cmpsl
pop
push
mov
imul
shlb
insb
sbb
or
ljmp
inc
in
mov
js
cltd
jle
ljmp
jmp
lcall
pusha
pop
jno
sahf
sub
fisttps
jmp
shll
inc
jb
mov
inc
mov
inc
rorb
icebp
rolb
rclb
jnp
or
lods
mov
call
rcrl
xor
sub
call
sbb
scas
decl
movsb
ljmp
mov
push
mov
incl
call
inc
fiadds
scas
negb
dec
in
dec
xchg
out
repnz
inc
xchg
addr16
ljmp
pop
jg
call
mov
aas
cmp
lcall
test
ficoms
mov
incl
enter
xchg
out
or
mov
lcall
incl
inc
xor
leave
sbb
inc
loope
shll
call
adc
mov
push
or
fidivl
or
stc
pop
ja
pop
or
rcrl
sub
incl
add
sti
int
fwait
pop
in
aad
fadds
call
push
xchg
adc
filds
mov
out
repnz
incl
call
call
xchg
mov
adc
incl
cli
leave
inc
orl
jmp
mov
repz
sti
mov
enter
repnz
xchg
sub
inc
fbstp
adc
lock
imulb
xchg
sub
jmp
jmp
data16
dec
mov
push
js
pushf
dec
or
dec
mov
jle
lret
mov
call
fimull
mov
add
lcall
jmp
jmp
in
adc
lcall
lar
dec
bound
push
mov
popa
mov
mov
lcall
incl
movsb
lcall
adc
and
fcmovne
pop
mov
call
call
add
call
imul
jp
and
jmp
or
decl
decl
decl
lods
pop
jmp
jmp
daa
hlt
sub
jmp
add
mov
decl
rcll
test
lcall
push
sbb
sbb
decl
lods
inc
push
movsb
cmp
das
adc
mov
fcompl
ljmp
mov
mov
pushl
imul
jmp
frstor
es
call
imul
mov
je
jno
pushl
iret
push
jl
gs
jo
call
inc
adc
add
ja
pop
xor
rclb
popa
pop
mov
nop
loopne
popa
gs
or
mov
pushl
inc
leave
xchg
ljmp
sub
call
add
aas
add
cltd
fucom
or
dec
or
iret
inc
mov
push
aaa
movsb
decl
jecxz
nop
popl
roll
cmc
pop
icebp
movsb
call
imul
pop
int
fisttpl
js
enter
push
rcll
jecxz
jp
push
mov
ljmp
pushl
incl
lcall
lea
or
or
pushl
dec
aas
push
push
and
jmp
inc
ds
decl
cmp
cmp
jmp
push
aad
push
imul
jp
jmp
sbb
fnstsw
cltd
stos
lds
incl
jb
jnp
sub
decl
pushl
scas
lcall
inc
xchg
push
xchg
jg
and
sbb
pushl
cmpsl
popf
ss
push
mov
aam
jne
push
push
push
rorb
int
scas
call
xchg
xchg
scas
call
sub
lods
call
subl
lds
inc
call
xchg
push
decl
call
mov
adc
mov
ljmp
aad
incl
lcall
jmp
and
jge
ljmp
dec
cmc
xchg
inc
lret
cmp
pop
int
cmp
pop
inc
mov
decl
jle
dec
popf
insw
arpl
insb
mov
pop
fstp
cld
jne
push
call
push
mov
call
ret
incl
aad
call
pushl
stos
ljmp
fwait
xchg
fstpl
mov
xchg
imul
incl
incl
jmp
repnz
incl
adcl
pop
push
jmp
dec
xor
lcall
add
incl
pop
push
aam
jmp
jge
inc
test
cmp
fwait
sbb
sbb
rcrb
incl
dec
sbb
ss
call
incl
jmp
scas
mov
and
push
jecxz
inc
out
add
ljmp
or
ljmp
mov
outsb
and
lcall
add
push
adc
cmp
cmp
decl
fistpll
sbb
rorb
lcall
cmovnp
inc
and
gs
sub
mov
test
lcall
cmp
mov
dec
mov
push
jl
mov
incl
or
fstl
iret
mov
pusha
xor
fstl
xchg
xchg
lahf
cld
lock
icebp
adc
pushl
push
cmc
ss
push
mov
cli
push
insb
jb
nop
adc
xor
cmp
dec
repnz
data16
pushl
sub
out
lea
ret
call
xor
cltd
lock
inc
cs
incl
jmp
stos
jmp
pop
adc
arpl
and
call
lock
call
call
jge
push
or
decl
inc
xchg
lcall
push
sbb
fidivrl
decl
mov
mov
mov
dec
das
mov
call
call
decl
scas
cmpsb
in
cld
cmp
push
cmpsb
call
cmpsl
add
mov
lcall
jb
lcall
mov
lret
cltd
lret
mov
dec
and
pop
jo
and
jmp
in
pop
cmpsb
lcall
lret
scas
adc
stos
call
dec
xor
mov
dec
or
pushw
negl
sbb
pop
mov
in
scas
jb
sbb
xchg
and
in
sub
call
lods
dec
insl
inc
push
call
loop
sahf
lcall
pop
adc
loope
xchg
pushl
adc
inc
add
adc
call
jmp
ljmp
roll
call
push
cli
lahf
in
test
fimuls
xchg
loope
sub
dec
lea
cwtl
insb
xor
jns
cmp
mov
dec
ja
lcall
data16
xchg
sbb
mov
ljmp
pusha
cwtl
fsubs
pop
es
pushl
rcrl
add
add
dec
gs
add
incl
push
ljmp
inc
jecxz
lcall
jbe
mov
ljmp
cmp
movsb
pushl
xchg
jmp
sbb
clc
push
repnz
lock
pop
and
lcall
push
incl
call
jno
jp
les
or
incl
inc
insb
hlt
and
decl
jmp
pop
idivl
mov
dec
lret
pusha
daa
adcl
loope
adc
repnz
xchg
sub
add
cmp
cmp
jmp
ret
imulb
fimull
call
xchg
sahf
mov
mov
pushl
push
lret
fdivrl
dec
fstpt
mov
adc
in
xor
inc
mov
int
ljmp
cmpsb
lcall
insl
pop
test
push
sbb
insl
leave
and
aaa
scas
cld
fbld
stos
lcall
movsb
pushl
sbb
stc
jns
push
sahf
xchg
xor
mov
lea
jmp
pop
insb
jb
push
insl
xchg
pop
pusha
lock
pop
insl
mov
ljmp
xchg
pop
push
jge
xchg
out
pop
cmpl
pop
mov
incl
int
decl
dec
xchg
xlat
push
mov
pop
sbb
inc
pop
inc
xchg
shll
imul
out
decl
push
jecxz
lahf
xchg
popa
mov
call
pop
mov
add
lcall
add
iret
add
movsb
incl
test
incl
ret
ljmp
call
insb
movsl
and
call
rcll
call
inc
sarl
jno
mov
ljmp
sbb
mov
pop
ja
mov
cmc
movsb
call
add
ljmp
stos
call
lcall
xor
adc
xchg
cld
shlb
mov
jmp
lret
sahf
iret
xchg
scas
lcall
cli
pusha
sahf
inc
push
xchg
repz
jge
cmp
xor
pop
dec
xchg
gs
jg
jnp
mov
nop
jp
xchg
dec
repnz
incb
pop
hlt
dec
mov
jmp
jp
xor
dec
ljmp
movb
lcall
jecxz
push
xlat
inc
dec
jg
sbb
mull
movsl
iret
add
dec
sbb
call
call
insb
std
sub
xor
ljmp
jnp
repnz
push
incb
sub
inc
dec
xchg
out
lahf
and
call
mov
lcall
repz
jmp
loop
stos
test
xlat
jnp
and
ds
rcll
cmp
lea
pushl
push
mov
inc
jp
scas
jg
inc
test
or
ljmp
fsubl
xor
push
repz
test
call
decl
call
ljmp
stos
pop
push
das
mov
mov
adc
call
loope
fbld
popa
les
movl
xor
daa
faddl
divb
add
les
xor
sbb
cs
dec
dec
jg
lds
aaa
out
repz
or
int
jmp
cmp
mov
jp
dec
sub
ljmp
lret
sub
clc
jns
aad
fs
pop
cld
ja
mov
pushf
push
mov
gs
decl
pop
icebp
dec
xor
scas
jnp
cmp
jmp
scas
ja
rcr
mov
inc
hlt
push
mov
cmp
mov
pushl
jl
decl
dec
sub
and
jmp
sub
fisttpl
or
xchg
inc
xchg
ss
ds
push
out
imul
out
ljmp
stos
push
ljmp
mov
dec
jne
ljmp
add
adc
push
fisubrl
clc
and
pushl
fisttps
mov
ljmp
call
sbb
rorb
sub
and
ljmp
or
jmp
ljmp
push
mov
cmp
xlat
jne
mov
decl
sti
ljmp
mov
ljmp
and
incl
ljmp
mov
ljmp
cmp
sub
iret
lcall
lcall
decl
pushl
enter
lock
std
scas
push
scas
mov
incl
incl
xor
clc
test
push
jmp
push
icebp
icebp
mov
lahf
cli
mov
mov
push
into
aam
aam
xchg
mov
jp
decl
incl
cld
xchg
loopne
ljmp
call
imul
sbb
aaa
pop
mov
addr16
movsb
ljmp
or
fistps
and
push
mov
lcall
jae
in
jle
lea
dec
lahf
aaa
jle
inc
jnp
fists
mov
xchg
adc
ret
push
mov
cmp
pushl
cld
add
call
inc
xchg
call
sti
sti
push
jecxz
aas
pop
sbb
sbb
dec
add
je
mov
push
inc
in
push
cli
mov
push
lret
mov
incl
pop
fstps
jmp
xchg
sub
ljmp
pushl
in
push
aad
mov
push
cmp
call
pop
test
push
jmp
in
cmp
lcall
stc
push
mov
fxch
test
call
testb
xor
lret
inc
adc
ljmp
dec
add
jmp
jecxz
incl
add
xor
mov
test
dec
daa
mov
pop
rclb
call
cmp
call
jno
out
out
fcomps
andl
mov
imul
out
hlt
std
xchg
jge
shrl
add
loop
testb
ds
jmp
jae
dec
mov
cmp
mov
fcoml
loopne
cld
dec
mov
scas
roll
lret
push
sbb
push
xchg
in
stos
push
sub
daa
mov
les
add
dec
fidivl
lea
dec
dec
rcll
das
xchg
fwait
int3
mov
fmull
dec
sahf
jno
push
mov
xor
decl
mov
cmp
fisubrs
incl
mov
mov
ljmp
mov
mov
outsl
aad
dec
int3
mov
ret
inc
cmc
aad
cld
jl
pop
jmp
xchg
jmp
mov
dec
xchg
repnz
icebp
nop
or
call
dec
xchg
mov
fsubrl
push
js
mov
int3
sub
incl
jp
ja
divl
mov
loopne
decl
insb
jge
xchg
jns
pop
dec
mov
jle
pop
inc
mov
push
loop
mov
rorb
dec
stos
add
dec
and
ljmp
in
bound
jge
repz
filds
mov
jo
ljmp
decl
pushl
bound
jg
mov
std
into
out
fwait
cmp
inc
xchg
jbe
add
dec
mov
inc
lods
decl
jb
pop
cmpsb
call
push
incl
in
inc
add
lcall
test
ljmp
push
stos
dec
sub
sbb
cs
cld
pop
push
adc
jmp
cltd
dec
sahf
mov
jmp
orl
lret
add
popf
sub
loopne,pt
jle
cmp
pushf
push
incl
ja
inc
cli
and
mov
mov
or
call
cmp
decl
fdivrp
jnp
mov
call
es
jmp
incl
jo
xchg
lcall
daa
jo
add
incl
add
jmp
test
imul
pop
imul
loope
lcall
xchg
lret
cmp
jmp
aad
ljmp
call
dec
mov
sbb
sub
sahf
mov
mov
sar
pop
jge
dec
sub
pop
aaa
lods
out
xchg
ljmp
incb
push
mov
call
test
adc
out
das
out
jmp
sbb
loope
xchg
lods
pop
in
scas
ljmp
dec
mov
cmp
mov
push
cs
call
out
push
cwtl
xor
cmp
and
cmp
mov
fisubl
mov
mov
cli
cmp
decl
xchg
dec
adc
cmp
cmc
jp
hlt
inc
sarl
sahf
or
pushl
test
lcall
xor
add
xlat
out
fsqrt
outsb
test
jmp
ljmp
inc
out
into
out
test
jmp
push
and
jmp
incl
andl
xor
lea
jmp
dec
push
aas
sub
call
js
lea
call
pop
andl
aad
arpl
push
btrl
inc
std
mov
incl
movsl
pushw
dec
add
call
cld
pop
aaa
adc
rcrb
rclb
ljmp
and
rolb
xchg
inc
sub
lcall
or
lahf
or
push
cmp
stc
pop
addr16
mov
jmp
test
clc
daa
pop
xchg
pusha
es
lcall
mov
testl
dec
sahf
inc
cmp
fisttpll
push
jmp
hlt
add
mov
jmp
cmpsl
int3
or
dec
cli
xchg
outsb
inc
xor
pop
int
sub
jmp
call
lret
scas
lcall
inc
mov
inc
mov
xor
cwtl
clc
sahf
aaa
adc
fstpt
mov
cmp
jnp
sarb
ret
cmp
ljmp
jg
dec
xchg
push
call
mov
mul
mov
mov
push
jb
pop
cmpsb
pushl
stos
jmp
aam
ja,pt
jecxz
imul
xchg
pop
fsubl
mov
pushl
jnp
adc
femms
inc
movsb
lcall
decl
jmp
popf
pushf
ja
sbb
shrb
decl
xor
loope,pt
gs
cwtl
fwait
jl
decl
insb
cmpl
fdivrl
decl
mov
jmp
and
pop
cmp
jmp
clc
cld
popf
enter
fsubl
jmp
ljmp
mov
lock
xchg
inc
lock
scas
add
jmp
call
lods
in
dec
xabort
mov
call
enter
sbb
xor
daa
arpl
movl
xchg
xor
xchg
insl
add
ljmp
jecxz
std
mov
dec
add
jg
decl
push
jp
jle
nop
cmpsl
in
push
pop
pop
jp
daa
rcll
decl
incl
cmp
lcall
pushf
gs
testb
sub
decl
ljmp
cli
jmp
inc
lret
fldl2e
cli
pop
sbb
pop
repnz
push
pop
loop
push
call
push
daa
inc
cmpsb
incl
xor
mov
jo
ss
sahf
mov
ljmp
pop
aad
ret
call
insl
jecxz
fidivrs
mov
xlat
or
cmp
mov
clc
xor
ljmp
decl
lcall
outsl
out
ss
call
ljmp
es
ljmp
call
mov
mov
jl
dec
dec
shrb
push
push
mov
rcrb
gs
rolb
jmp
popa
call
imul
jmp
dec
les
mov
adc
mov
mov
push
xor
jb
and
cld
sub
xor
mov
jl
add
inc
bound
movsl
rcrl
push
mov
ljmp
ljmp
lock
push
outsl
sub
scas
sti
sub
incl
lcall
cmp
jmp
pushl
por
dec
sub
mov
cld
sub
ljmp
decl
or
notl
into
addr16
hlt
lds
sbb
ret
jns
cmp
fdivrl
cltd
js
push
aam
push
dec
enter
pop
or
call
cmp
xchg
inc
xchg
ljmp
jge
mov
incl
negb
aam
aas
sbb
shr
cmpsb
inc
jne
sbb
jp
out
aaa
cmp
xchg
push
jo
jnp
and
call
mov
incl
mov
cmc
cmp
call
and
pushl
mov
lcall
cld
or
sti
out
mov
ljmp
inc
clc
xchg
inc
shrl
jmp
outsb
rcrb
adc
dec
stc
sbb
std
aas
push
mov
notb
pushf
cs
cld
lss
pushl
xchg
xchg
sub
mov
shufps
push
mov
jecxz
lahf
aaa
push
jl
mov
leave
sub
incl
jl
decl
xchg
xchg
jmp
sub
out
enter
lcall
shll
mov
add
dec
mov
cld
jno
cmp
fisttpll
push
call
popa
insl
icebp
push
imul
out
cmpsb
call
mov
jnp
jge
xchg
fstl
jo
push
pop
pop
jg
jmp
dec
cld
adc
ljmp
xor
lods
insl
int
xchg
filds
ljmp
in
fwait
lods
pusha
mov
jecxz
pop
add
ljmp
incl
pushl
mov
pushl
bound
ljmp
into
jmp
outsl
test
mov
test
call
cmp
sbb
bound
fstps
cmc
aad
add
pushl
push
out
ljmp
leave
ror
arpl
jmp
enter
and
incl
call
call
ja
pop
insb
inc
dec
outsl
sahf
jo
or
incl
ret
jo
call
mov
ljmp
decl
out
xchg
jmp
mov
decl
and
call
xor
lds
call
sub
sahf
cmp
lret
ret
ljmp
xor
xor
cmp
cmc
dec
mov
lods
sti
out
scas
call
push
int
je
xlat
bound
cltd
cmp
push
mov
fs
mov
call
roll
fldz
scas
decl
mov
dec
xlat
das
sub
jmp
and
decl
and
jecxz
cmc
negl
flds
push
pop
cmp
les
stc
je
xor
inc
xchg
call
cmp
incl
xchg
out
xchg
jmp
in
clc
arpl
sbb
mov
pop
push
dec
mov
mov
mov
mov
int
push
imull
push
bound
xchg
add
jmp
loopne
jle
stos
pushl
dec
or
setae
lock
mov
scas
jo
cmp
push
jmp
ret
adc
add
rcrb
xchg
jmp
pushf
aam
push
repnz
sti
loope
stc
xorl
pop
push
fsubs
jmp
mov
pop
mov
push
lods
push
out
int
xchg
in
iret
cmp
call
mov
gs
cmp
and
jmp
pop
or
ret
stos
push
insb
daa
jecxz
jg
mov
fsts
lret
jo
std
roll
call
pushf
ror
cmp
xor
iret
jg
mov
loopne
cwtl
xor
out
adc
mov
pop
fbstp
mov
push
and
mov
mov
mov
jbe
push
loop
xchg
mov
outsl
push
mov
xor
inc
pop
addr16
xor
add
lcall
xor
leave
xor
jb
cld
and
ljmp
jno
fwait
or
lcall
stos
incl
mov
and
call
iret
adc
jp
arpl
mov
pushl
sub
rcrb
cmp
cmp
pushl
repz
dec
mov
ljmp
pushl
inc
inc
mov
push
ficoms
jp
mov
sub
jnp
push
decl
lcall
xchg
sbb
inc
mov
test
call
mov
ljmp
cmp
xchg
sbb
jmp
dec
pop
aas
mov
roll
das
sub
push
jnp
addl
adc
sub
dec
jne
cmp
xor
or
jmp
cmp
ljmp
decl
pushl
aas
iret
enter
pop
xchg
incl
add
xchg
pop
inc
push
roll
inc
dec
int3
jmp
fwait
push
adc
push
dec
cs
jmp
jle
push
mov
test
inc
insb
dec
stos
fdivrl
jae
xor
loopne
addr16
ljmp
xchg
test
popf
outsb
jl
jl
jp
add
cld
out
and
ljmp
mov
push
mov
aas
xchg
lock
addr16
rcl
mov
pop
loop
cmp
or
lcall
stc
jp
rclb
repnz
in
lcall
insl
push
cwtl
cmp
mov
fwait
push
ret
adc
nop
jo
cmp
adc
jge
or
jmp
movsb
lcall
jo
decl
mov
std
jmp
movsb
decl
pushf
inc
sub
lcall
pop
push
arpl
mov
cmp
out
and
incl
push
enter
les
cmp
dec
loop
push
inc
adc
div
mov
movsb
incl
mov
cmp
add
mov
add
pushl
xchg
shrb
push
xor
push
popf
ljmp
ljmp
xor
sbb
ds
stos
imul
adc
call
sub
cmp
sub
decl
loop
lods
pushl
rcll
ret
stos
or
mov
cmp
inc
fs
inc
js
les
pop
in
into
fsubl
and
add
inc
xchg
xchg
call
testl
pop
pop
mov
out
xchg
dec
hlt
mov
call
adc
call
or
jne
inc
mov
je
out
das
add
add
popa
jg
ljmp
ljmp
ds
cmp
jne
inc
ret
sahf
adc
out
in
jne
cmpsb
pushl
in
inc
mov
les
push
adc
xor
inc
pushf
ds
mov
movl
mov
lcall
std
or
jnp
leave
mov
movsl
xor
pushl
sub
lcall
dec
dec
sbb
push
dec
js
insl
dec
cmp
sbb
jecxz
scas
insl
js
cmp
xchg
xchg
ss
dec
xchg
or
lcall
mov
mov
mov
dec
sub
in
out
stos
decl
out
loop
jl
int3
mov
cmp
inc
roll
cmp
jmp
in
jb
and
push
decl
mov
incl
pushl
fs
push
iret
inc
cli
jb
push
push
mov
inc
out
cltd
test
lcall
pop
pop
lahf
cmp
pushl
pop
outsl
dec
ds
and
call
mov
ljmp
scas
jmp
fcoms
lcall
mov
mov
jmp
xor
lret
js
add
loop
ficompl
xsaves
clc
push
pop
ret
aad
dec
rorl
cld
or
jmp
xor
out
cmpsb
jmp
in
repnz
mov
lcall
jbe
jbe
cmpsb
push
cmp
jmp
aas
sub
jmp
call
push
adc
add
pushl
hlt
push
mov
incl
sub
call
ljmp
fwait
sbb
add
pushl
mov
jmp
insb
popa
and
xor
call
adc
cmp
ljmp
roll
ret
fldenv
in
xchg
ficoml
sbb
pushl
mov
test
inc
mov
cmp
dec
push
dec
outsl
ret
mov
call
xchg
jmp
les
jmp
dec
imul
std
sub
ljmp
mov
cmp
mov
incl
pushl
aaa
inc
sub
lcall
jne
incl
push
xchg
shlb
lcall
andl
cmp
mov
dec
imul
inc
stos
jmp
push
std
add
call
cmp
jmp
push
call
and
or
or
decl
pop
jbe
mov
movsb
cmp
in
frstor
lcall
testb
and
decl
call
pop
add
pop
mov
pushf
fdivrs
cmp
pop
sbbl
mov
mov
xor
sbb
inc
imul
sub
mov
add
call
jp
adc
push
pop
call
push
cs
call
inc
fisubrs
decl
mov
data16
int
add
lcall
or
out
stos
lcall
adc
push
fsubrs
cli
dec
aam
mov
imul
adc
decl
je
std
stos
aad
out
mov
cwtl
mov
imul
mov
sbb
pop
sbb
cltd
js
pop
dec
into
sahf
in
xchg
or
ljmp
mov
lcall
inc
es
lcall
repnz
jo
imul
jmp
cmp
add
incl
sahf
jbe
xchg
ljmp
jnp
out
xchg
sub
xchg
ss
or
pushl
pop
mov
xchg
fs
or
mov
scas
call
mov
pop
xor
clc
push
data16
cmp
pop
sub
ds
add
call
push
sub
sbb
cmp
movsl
mov
jae
xchg
push
dec
pop
rcl
popf
ret
shlb
aam
jns
lcall
mov
mov
decl
inc
clc
repz
pop
je
decl
and
call
or
enter
jmp
ljmp
and
dec
rol
pop
lds
popf
pop
int3
test
call
incl
push
mov
mov
and
int
pushl
pop
add
dec
jp
jmp
xor
std
inc
repnz
leave
sub
mov
pop
xor
pop
decl
mov
pop
push
push
sbb
repz
jb
call
push
adc
fildll
cmp
mov
push
pushl
inc
sub
pop
cmp
out
imul
pusha
add
decl
ljmp
call
stc
push
inc
out
xor
lea
lock
cmp
mov
xchg
xchg
imul
jmp
lods
decl
aam
mov
gs
dec
inc
movsl
adc
call
mov
jmp
pop
cmp
push
jbe
pop
repnz
ljmp
imul
or
cmp
decl
mov
leave
pop
sub
cmp
cmp
jp
sbb
mov
pop
adcl
pop
sti
adc
dec
movsl
xchg
xchg
rolb
inc
lcall
movsb
dec
test
jmp
in
cmc
stos
js
dec
and
pushl
jmp
fidivs
jnp
xchg
fcomps
xchg
call
xlat
push
stos
pushl
lret
mov
push
in
cmp
jb
clc
inc
mov
dec
cmpsl
push
movsl
pop
loope
xchg
decl
xchg
fisubrs
mov
jmp
es
jmp
jne
mov
lcall
push
stos
int
pop
cli
pop
mov
fisubs
xor
push
sbb
clc
sub
mov
notl
push
fdivrs
test
sti
in
ljmp
popf
pop
inc
iret
mov
scas
pushl
incl
jns
in
mov
adc
xlat
hlt
mov
sbb
lods
mov
push
mov
nop
mov
xchg
add
call
or
jmp
std
cmpl
dec
popf
sbb
cld
mov
pushl
stc
in
lret
adc
lcall
dec
cmp
push
sahf
mov
fdivl
adc
pushf
add
cmp
xchg
imul
lret
sbb
pop
inc
push
cmp
mov
inc
inc
sub
decl
jg
mov
outsb
test
incl
jge
scas
or
gs
cmpsb
cmp
sti
push
aam
cmp
incl
sub
lcall
push
iret
movsb
call
gs
or
call
leave
or
call
movsl
ljmp
out
mov
jb
jae
mov
adc
int
cli
test
jecxz
icebp
int
ljmp
call
ljmp
call
jp
or
pushl
xchg
jo
call
lcall
mov
fwait
dec
mov
shlb
and
pushl
imul
jmp
sub
lcall
mov
decl
jno
adc
insb
jbe
std
jl
pop
jp
icebp
outsl
jge
out
dec
adc
add
ljmp
push
rorb
call
mov
lcall
popa
cs
incl
mov
cmpsb
decl
rcll
jmp
pop
mov
jns
push
out
cmp
gs
arpl
pushf
and
roll
cmp
and
sarl
pop
cs
call
mov
fcomps
jmp
pushl
push
pushl
jge
ret
dec
enter
dec
dec
add
pushl
mov
jmp
lds
aam
decl
pop
loope
mov
out
std
or
pxor
in
mov
sbb
les
test
incl
push
add
cs
pushl
lcall
jmp
out
cmp
call
jns
cs
push
xchg
and
ljmp
decl
push
ds
pushl
cmc
mov
jmp
jmp
push
imul
adc
pop
xor
imul
or
inc
or
pushl
fldlg2
fs
bound
imul
mov
lret
add
shlb
rcr
mov
jl
inc
pop
ss
call
ljmp
adc
mov
sbb
cld
fs
pop
dec
add
push
fwait
dec
mov
mov
pop
push
cmp
lds
jmp
iret
cmp
push
pop
test
out
loopne
fcoms
add
addr16
cmp
inc
popf
aaa
mov
lcall
repz
inc
sahf
int
or
cld
into
lods
loope
lock
leave
xchg
lret
mov
incl
incl
cmp
not
pop
mov
push
adc
ljmp
jbe
dec
fnsave
cld
push
dec
inc
push
gs
push
test
jge
dec
add
pushl
data16
ljmp
mov
pop
xchg
es
jmp
iret
xchg
call
test
fneni(8087
pop
xor
inc
push
mov
lea
call
pusha
aam
in
sub
ljmp
jmp
ljmp
jo
mov
inc
lahf
cmp
mov
lcall
and
sbb
inc
lret
dec
lea
arpl
push
movsl
sbb
adc
mov
aad
mov
jnp
sarl
incl
dec
das
aaa
leave
adc
int
decl
jle
mov
lcall
out
imul
call
cmp
pop
cmp
int
addr16
mov
out
xor
mov
mov
xchg
mov
test
push
test
decl
fisubrl
loope
aam
test
xchg
pop
mov
dec
xor
dec
inc
stos
mov
pushl
lcall
cwtl
lds
cmp
inc
push
movsl
sti
ss
int
xchg
jae
std
pop
inc
sbb
shlb
add
and
out
fstpt
lcall
test
inc
imul
lea
outsb
enter
bound
scas
mov
testb
sub
jl
lea
push
lds
mov
enter
add
incl
jmp
cli
mov
call
incl
and
sti
pop
sub
incl
imul
lcall
cmp
pushl
fldl
mov
repz
mov
lcall
xchg
push
mov
jmp
jmp
jmp
mov
incl
jecxz
dec
push
je
inc
jo
fdivrl
cmpsl
bound
sbb
adc
mov
rorl
jg
btsl
incl
mov
insb
dec
lret
push
add
popf
xchg
cli
pop
mov
add
fld
push
iret
cmp
ljmp
call
dec
dec
sti
jnp
ljmp
pushl
ror
addr16
jb
sbb
sbb
jne
jle
sub
jp
jg
cld
pop
sub
decl
sbb
pop
repz
ss
lods
cmp
jo
pop
icebp
mov
inc
icebp
sub
push
sub
pushl
subl
xchg
fprem
sbb
ret
mov
into
cld
mov
pushl
cmp
lods
decl
incl
ficoms
cmp
ljmp
rolb
js
mov
outsl
and
ljmp
inc
test
jmp
incl
sarl
aas
repz
call
aad
xor
and
stc
cmpsb
decl
mov
movsl
jmp
out
mov
dec
xlat
imul
sub
inc
clc
xchg
jmp
roll
mov
sarb
or
mov
lock
pop
jmp
call
mov
call
in
xchg
out
out
pop
dec
and
sbb
cmp
cld
sub
jg
idivb
pushl
xchg
sub
dec
mov
popf
ss
xchg
cld
iret
cmpsb
aas
out
cs
ljmp
jl
pop
mov
pop
cmp
jge
std
mov
inc
fmull
xchg
lods
lcall
stc
adc
lcall
pop
push
lcall
xchg
dec
mov
movsl
jecxz
jmp
testl
subl
xor
loop
lcall
shrl
dec
mov
punpcklbw
fwait
push
dec
jns
inc
pop
cwtl
rcr
test
int
jne
fstpt
xchg
sbb
or
jl
mov
dec
add
cmpl
cmp
lods
adc
and
incl
lods
lcall
iret
inc
mov
inc
stos
decl
push
rolb
pushl
jle
call
sub
inc
cltd
data16
cwtl
leave
into
adc
jmp
sub
pushf
sub
lcall
sub
jmp
iret
adc
popa
js
inc
in
inc
sub
call
std
sbb
btr
incl
call
push
cmp
je
cmp
lock
jns
xor
mov
pop
outsb
nop
repnz
jle
add
pop
sub
mov
ds
pop
add
out
scas
jbe
or
decl
cmp
push
cmp
lcall
outsb
jno
es
jmp
mov
incl
test
lret
mov
std
enter
mov
lcall
mov
push
in
clc
lods
xchg
mov
imul
mov
xchg
pop
adc
mov
inc
imul
testb
jmp
outsl
mov
decl
lcall
dec
or
mov
mov
lahf
pop
push
addr16
rcl
into
pop
cmp
in
xchg
scas
xor
xor
scas
xor
and
inc
dec
mov
stos
in
insl
cwtl
ret
mov
lcall
push
push
jno
nop
mov
jmp
xchg
xor
cmp
mov
in
pop
pop
loope
mov
cs
in
leave
cld
xor
push
out
arpl
jnp
mov
pop
jo
mov
arpl
jb
leave
dec
cwtl
mov
ljmp
cmp
test
sbb
call
mov
cwtl
sub
inc
push
test
call
add
call
aam
imul
cli
sub
dec
in
out
xchg
decl
jnp
mov
sbb
out
test
jmp
add
jbe
in
cmp
cmp
vcvtdq2pd
lret
cmpsl
jb
sbb
pop
push
test
dec
loopne
pushl
xor
shlb
xor
jp
cmp
jnp
decl
add
push
pop
imul
mov
jl
loop
push
sbb
xor
jae
dec
jle
fwait
imul
ret
mov
or
lcall
in
mov
push
mov
xor
mov
dec
push
ljmp
fs
cmp
ljmp
mov
mov
inc
lds
push
jmp
incl
call
mov
cmp
add
ljmp
sub
inc
xlat
or
lcall
fs
and
ljmp
inc
mov
ds
sti
xchg
pop
cmp
pushl
sbb
add
call
push
call
mov
mov
std
stos
mov
incl
loop
inc
sub
call
sbb
ja
mov
cltd
mov
repnz
jmp
cmp
and
decl
push
mov
adc
imul
mov
fstps
incl
mov
loope
or
push
cmc
adc
call
xchg
cltd
outsb
mov
push
pusha
mov
or
decl
jl
jne
inc
and
push
incl
mov
ljmp
push
data16
jnp
dec
mov
lcall
xlat
lds
mov
adc
fbld
push
and
outsb
rorb
clc
mov
push
test
sub
movsl
test
adc
mov
mov
decl
jmp
call
pushl
pop
push
test
decl
jmp
push
xor
data16
mov
pushl
ljmp
incl
jge
out
out
mov
ljmp
call
icebp
dec
adc
insb
xchg
aaa
fisubs
push
int3
sbb
jb
mov
xor
xor
mov
decl
pushl
cli
jge
inc
lock
sahf
dec
or
pushl
jge
cmp
pushl
lods
xchg
jno
sti
leave
loop
cmpsl
push
or
decl
int3
xor
fstl
sub
push
out
pusha
push
out
mov
call
or
lcall
sbb
test
lcall
sub
jmp
inc
xchg
jb
push
push
sbb
sti
push
test
jns
xchg
das
add
incl
call
adc
hlt
sub
jge
pushl
scas
pop
fidivl
loop
leave
fistl
movntq
incl
mov
mov
sbb
pop
incl
aas
jecxz
adc
js
push
shrl
imul
mov
lcall
inc
xlat
into
insb
gs
jmp
sahf
mov
sub
fcmovu
outsb
lods
lcall
movsb
lcall
call
dec
cld
inc
test
and
ljmp
pop
mov
fcompl
push
out
mov
pushl
cmpsb
inc
xor
adc
decl
xchg
decl
cli
es
call
lea
ljmp
pop
push
mov
pushl
mov
decl
cmp
ljmp
and
call
cltd
fsubs
pushl
incl
lcall
push
cwtl
cmp
ljmp
or
out
mov
out
and
jmp
leave
and
pushl
mov
decb
push
dec
and
xchg
xchg
mov
loope
int3
test
loope
xor
dec
mov
jbe
clc
inc
cmp
incl
neg
inc
cwtl
mov
jno
xchg
jmp
push
jmp
call
aaa
or
jmp
inc
mov
pop
idivb
popl
dec
and
js
sub
lcall
jae
lret
negl
jnp
xchg
in
jae
fcmovb
jns
in
and
xor
xor
inc
cmpsb
lcall
incl
sub
cmp
out
bound
xchg
hlt
popf
fwait
push
pop
mov
mov
cmpsb
ljmp
lods
call
sbb
pushf
pop
into
or
decl
jmp
js
icebp
test
decl
incl
cltd
sub
orl
dec
iret
add
incl
stc
or
pop
jne
cli
mov
call
jp
lret
jmp
jo
pop
cmp
hlt
test
mov
incl
std
pushf
dec
int3
cmp
push
mov
call
out
adc
xchg
js
jmp
jne
pop
inc
xchg
lock
push
in
mov
scas
lmsw
cmc
xchg
shll
inc
cmp
pop
sub
lcall
sub
mov
push
lahf
xchg
mov
incl
jl
mov
ljmp
js
inc
and
stc
icebp
pop
sahf
mov
incl
cmpsb
call
imul
fiadds
push
ss
fwait
jo
xor
je
jl
or
lcall
jb
out
test
cli
sub
jl
mov
pushl
or
cmp
leave
mov
lods
adc
fs
push
jae
incl
lea
das
jle
xchg
or
xchg
popf
aad
xchg
shrb
and
fidivs
sub
call
in
fsts
xor
fisttps
inc
fbld
xor
pushl
jnp
adc
loopne
sbb
sti
adc
mov
incl
imul
jle
stos
fsubs
mull
xor
jp
xchg
loop
shrl
insb
xchg
lea
filds
pushf
jnp
sbb
jle
mov
push
fistl
add
decl
jl
aam
ss
ljmp
mov
rorl
arpl
jmp
and
call
out
push
mov
sbb
mov
sbb
inc
xor
cmp
jmp
mov
aam
roll
mov
mov
jg
xor
xor
je
sbb
es
ljmp
mov
bound
xchg
into
pop
and
clc
lods
pop
sbb
add
jg
push
fwait
or
add
incl
lcall
push
cmp
ds
xor
cmp
ljmp
jae
jmp
in
xchg
xor
fucomip
inc
fbld
mov
incl
gs
and
decl
push
pop
movl
cmp
ljmp
inc
hlt
cmp
decl
aas
lock
sti
in
inc
movsl
sbb
ljmp
adc
fildll
test
int
pop
fs
fnstsw
sub
jb
and
ljmp
jmp
insb
mov
mov
push
stc
xchg
push
inc
mov
loopne
and
pushl
hlt
es
ljmp
fdivl
jb
pushl
cmp
dec
xchg
xor
xor
pushf
dec
imul
fstps
mov
call
sub
push
ud2
dec
pop
iret
xor
and
jmp
add
incl
lods
decl
repz
lea
punpcklbw
mov
aas
gs
pusha
ljmp
pop
adc
daa
and
mov
jle
pop
cli
jmp
dec
xchg
stc
clc
ss
pop
movl
jmp
jmp
cltd
mov
sub
incl
xor
inc
adc
push
loopne
ss
jg
loop
jecxz
addr16
cmc
add
pushl
scas
ljmp
and
incl
push
pop
negb
mov
pop
or
jmp
adc
pop
pop
dec
sbb
sub
sub
inc
aaa
mov
xor
inc
mov
push
fs
incl
lret
dec
xor
fninit
mov
ljmp
sub
notb
mov
mov
call
pop
ljmp
pop
lods
dec
mov
jno
push
scas
mov
daa
fisubrs
in
fwait
jge
dec
aaa
pop
and
decl
inc
rcll
push
cs
pushl
and
dec
es
pushl
sub
lcall
push
movsl
pop
fwait
icebp
enter
mov
cli
cmp
sbb
addl
push
call
xor
inc
repz
push
pop
mov
out
addl
jge
incl
cmp
decl
decl
jge
decl
hlt
pop
mov
call
or
call
loop
jne
adc
adc
movl
sub
xorl
outsl
inc
inc
sbb
jge
push
cmp
xor
adc
or
out
mov
sub
or
adc
cltd
test
sahf
jp
lock
xlat
cmp
push
cmp
pushl
cli
and
jmp
jnp
cmpsl
rcrl
into
subl
ljmp
add
decl
xchg
pushl
fstl
clc
sub
ljmp
cli
icebp
lea
lahf
lcall
lahf
lahf
enter
jbe
test
mov
pop
or
roll
cwtl
add
mov
out
jge
sbb
in
testb
popa
add
mov
xchg
in
push
xor
ret
adc
ljmp
adc
cmp
jp
xor
mov
mov
loope
sbb
mov
nop
jae
pusha
sbb
cmp
sti
in
push
pushl
jnp
xor
jo
and
push
call
pop
pusha
fimuls
jmp
mov
dec
xchg
xor
mov
lcall
lds
popf
movsb
mov
mov
mov
pushl
in
arpl
sub
ljmp
dec
push
push
or
mov
add
incl
lcall
cld
or
adcl
mov
incl
pop
cmp
fs
jbe
cmpl
jmp
repnz
cmp
xor
lcall
int3
fs
inc
inc
adc
daa
mov
mov
lcall
adc
incl
addr16
cmp
sahf
mov
dec
adc
inc
inc
subl
call
mov
decl
jmp
mov
pushl
dec
call
into
sbb
shlb
incl
cmp
incl
jmp
or
jle
popa
sub
pushl
xor
scas
jmp
pushl
ss
or
jns
push
call
shll
das
pusha
dec
and
lcall
out
or
decl
std
daa
fcompl
call
incl
cmc
movb
cmp
or
cmp
mov
and
or
call
dec
jnp
aad
loope
rcrl
js
xchg
lcall
inc
dec
sbb
jp
fcompl
aas
scas
jmp
or
repnz
jns
loop
cmpsl
dec
cmp
ja
lock
and
sbb
imul
stos
incl
pushl
popa
push
fmuls
pop
mov
incl
or
ljmp
or
decl
psraw
icebp
ret
jmp
decl
pop
jecxz
mov
xchg
cwtl
popa
inc
mov
jmp
inc
pop
es
dec
pop
dec
cwtl
data16
incl
mov
jmp
call
adc
push
repz
js
in
pop
cwtl
mov
mov
incl
aaa
ret
mov
pushl
cld
cld
pop
jmp
cld
xchg
inc
mov
cmc
xor
mov
push
test
ljmp
jmp
dec
das
out
cmc
xor
daa
aas
sub
inc
popf
mov
sub
mov
call
cmp
sbb
mov
xchg
cmp
pop
test
pushl
lcall
or
pushl
jecxz
add
pop
cmp
push
and
ljmp
pushl
and
shrl
mov
cmpsb
pushl
dec
mov
lcall
les
fsts
cmovno
push
push
gs
popa
lods
enter
mov
xchg
xor
mov
cmp
js
loopne
incl
dec
push
incl
pop
add
incl
mov
call
dec
sbb
out
or
decl
xor
mov
daa
push
sbb
inc
out
leave
aam
lcall
push
sub
jno
push
add
adc
bound
and
mov
scas
jp
xor
scas
lcall
pushl
sbb
add
decl
jmp
test
push
daa
inc
out
pop
negb
ficoml
fbstp
ss
jb
aaa
stos
mov
jle
in
aam
pushl
ret
jl
cmp
cmp
shll
shl
decl
pushl
call
or
mov
daa
sbb
pop
aad
mov
stc
aaa
rol
cmp
dec
loop
pop
fdivr
sub
jmp
clc
scas
inc
inc
jp
cwtl
inc
cmp
lcall
pop
cmp
fs
cmc
insl
cmp
call
lcall
xchg
out
mov
out
adc
pop
test
dec
adc
call
sbb
inc
inc
mov
decl
gs
loopne
sbb
daa
cld
push
or
in
xor
mov
incl
jmp
mov
stos
decl
cwtl
adc
rorb
jmp
out
xor
mov
inc
int3
cmp
decl
outsb
lock
push
ret
or
ljmp
inc
mov
js
js
jmp
or
ljmp
pushl
sbb
mov
ljmp
mov
jmp
mov
das
mov
push
sub
ljmp
cmp
incl
mov
dec
in
in
mov
push
jg
xchg
es
push
das
add
jmp
mov
cli
xchg
shll
push
cmpsb
incl
adc
mov
decl
in
dec
imul
cmp
pushl
cwtl
repz
jmp
jmp
incl
cli
pop
jo
cmp
xlat
test
std
out
cwtl
aas
push
dec
and
jne
sbb
lods
std
xchg
or
ljmp
mov
dec
jl
jno
xchg
lahf
repz
xchg
repnz
es
call
mov
xor
inc
jmp
jmp
xor
jmp
aam
pop
jno
daa
out
pop
mov
inc
mov
aas
dec
out
ret
xchg
call
pop
lods
inc
pop
dec
and
test
lcall
mov
outsb
jb
push
ljmp
add
cli
and
int3
lahf
push
and
filds
testb
imul
push
pop
call
jmp
shrb
into
lahf
pop
push
cs
pushl
mov
std
dec
fistps
stos
aam
jns
push
cmp
jmp
inc
fadds
aam
aam
ficoms
les
outsb
ds
add
decl
push
jmp
std
sbb
sti
mov
call
inc
into
test
dec
add
pushl
adc
push
jmp
fwait
enter
dec
cltd
pop
fnsave
pop
pop
fs
and
popa
in
xor
aas
add
decl
js
outsb
jmp
jl
lcall
fidivs
add
call
inc
pop
in
cmpsl
test
es
call
jmp
incl
pushl
in
bound
and
jmp
lahf
repnz
test
pushl
out
in
push
sub
decl
test
sub
lcall
lcall
mov
movsb
call
out
mov
cmp
and
decl
and
jnp
xchg
mov
ds
sahf
pop
cs
incl
pushl
loope
add
cmp
cmp
lcall
add
or
stos
shr
mov
jnp
cmp
jns
test
jge
fldt
or
ret
add
incl
pop
loopne
dec
out
jge
mov
call
mov
push
icebp
inc
jmp
xchg
dec
pop
mov
fimull
xlat
jg
pop
mov
lods
push
push
ds
in
movb
lcall
xor
test
call
ljmp
adc
push
nop
cmc
mov
fwait
data16
lcall
incl
insl
mov
imul
test
pushl
cltd
xorl
shrl
mov
lods
xchg
xor
js
outsl
or
ss
call
jae
xchg
xchg
out
shr
sbb
in
test
jmp
mov
ljmp
movsb
ljmp
jnp
leave
cwtl
pop
std
cmp
adc
shll
jp
lock
cmp
mov
pushl
decl
ljmp
incl
loopne
stos
add
sub
int
mov
inc
in
scas
mov
or
ljmp
jmp
sbb
pop
sahf
or
jmp
jmp
aas
ret
movsb
jmp
imul
sahf
xchg
out
lret
nop
jo
cli
or
es
lcall
xchg
or
and
cmp
push
adc
cltd
cs
decl
dec
or
decl
decl
ret
add
call
lods
ljmp
divl
bound
call
xlat
jge
lock
jns
or
pushl
mov
mov
incl
movsb
incl
ljmp
xchg
pop
mov
inc
push
call
scas
inc
mov
call
mov
call
jbe
data16
xor
dec
pusha
push
decl
pop
movsl
xor
data16
lahf
push
cli
movsb
call
jns
push
das
mov
das
dec
sbb
adc
aam
sbb
jl
loop
mov
jmp
sub
call
mov
nop
pop
mov
rclb
dec
jp
cmp
setge
mov
decl
ja
push
cs
call
loopne
or
pushl
and
sahf
mov
clc
mov
incl
ss
jmp
in
adc
jnp
std
mov
lcall
mov
decl
push
call
dec
aas
push
decl
incl
pushf
pop
sbb
xchg
std
repnz
pop
mov
pop
push
imull
adc
insb
jmp
pop
lock
fnstcw
stos
pushl
call
fadds
sbb
hlt
or
dec
movsb
ljmp
pop
push
repz
icebp
xlat
testb
lcall
fmull
call
repz
pop
inc
inc
aad
lods
loope
mov
js
dec
or
call
popa
cmp
std
mov
mov
sbb
inc
pop
sub
je
into
es
jp
cmc
pop
shll
lock
decl
jp
les
jecxz
dec
push
stos
out
mov
call
test
mov
in
mov
push
decl
or
insb
jno
jp
incl
push
push
pushl
or
inc
rcll
scas
cld
leave
mov
add
incl
xchg
mov
andl
fisttpl
je
push
in
incl
adc
mov
fidivrl
lahf
fdivs
xchg
bound
scas
cwtl
jnp
xchg
dec
aam
mov
loop
mov
decl
pushf
adc
pop
enter
incl
lcall
addr16
push
xor
fwait
fcmovu
scas
push
std
dec
inc
xchg
pop
mov
decl
lcall
xchg
jl
decl
push
incl
mov
dec
je
stc
pop
dec
cmp
mov
fimuls
pop
inc
lea
inc
adc
inc
rorl
aas
lods
pushl
lcall
mov
ljmp
mov
or
mov
js
and
clc
push
inc
jne
movsb
lcall
popf
cmc
adc
dec
inc
pop
nop
mov
ljmp
cmc
xchg
lods
jns
mov
incl
movsl
shl
fldl
pushl
decl
pushl
scas
ljmp
dec
mov
clc
cli
push
loope
pop
iret
les
pusha
lcall
adc
decl
or
loope
inc
or
rclb
add
imul
inc
push
pushl
sti
mov
lea
outsl
pop
sub
ss
inc
jns
jmp
outsb
femms
out
xchg
scas
jmp
xor
daa
inc
jmp
dec
lret
fldt
dec
cmp
jne
loop
cmpsl
lock
test
push
cmp
add
jmp
decl
pushl
incl
popa
jno
cmpsl
pop
jle
push
pop
rcrb
mov
dec
test
call
lcall
jl
push
xlat
add
and
lods
ljmp
or
int
push
ljmp
and
jmp
or
loope
push
ljmp
xor
test
fimuls
jno
dec
loope
or
push
shll
int
popf
and
scas
ss
ds
pushl
dec
movsb
decl
fldl
sub
xchg
test
lcall
pop
repnz
aam
push
sbb
pushl
call
sub
incl
and
push
adc
mov
sub
cmp
cmc
sbb
popa
iret
stos
lcall
fcomps
and
push
jno
ljmp
cmp
lahf
clc
push
push
call
insl
sub
push
ja
mov
outsl
lds
jmp
add
lcall
sub
leave
and
jle
lret
xchg
push
mov
add
lcall
xor
gs
into
mov
repnz
sbb
xchg
and
stos
jmp
rcr
cmp
call
int
mov
lcall
imul
call
or
decl
ds
inc
or
mov
xor
push
fcoml
xor
xor
dec
sbb
mov
ljmp
push
jecxz
fnstenv
fidivrl
leave
dec
or
jns
jecxz
add
push
inc
or
fdivs
mov
xchg
jb
pop
inc
or
scas
jmp
cwtl
or
sbb
jmp
decl
cli
incl
call
stos
or
fbstp
in
dec
test
bound
cwtl
out
dec
adc
inc
xchg
ljmp
pop
mov
lcall
jmp
incl
and
lcall
lahf
pusha
mov
mov
cmp
in
call
sarl
dec
imul
xlat
mov
dec
not
dec
lods
sarl
call
cmp
adc
mov
push
jmp
mov
mov
mov
repz
test
push
mov
test
dec
or
call
cmp
dec
xchg
dec
sbb
mov
cmp
incl
fisttps
repz
cli
push
call
jo
jle
clc
xchg
jg
sub
mov
sub
pushl
call
lcall
lcall
inc
mov
incl
jecxz
push
fwait
pop
rorb
lcall
ret
mov
xor
xchg
gs
mov
mov
fsts
pop
out
push
call
lcall
jl
xchg
call
and
lcall
lret
mov
ss
fists
lea
dec
out
mov
mov
shll
cmp
rolb
pusha
pop
cmovae
mov
push
jecxz
cmp
cmp
loopne
fistps
xchg
push
into
ret
leave
or
call
xchg
xchg
sbb
popa
or
lahf
push
pushl
push
inc
rcrb
ljmp
push
lods
cs
jmp
ljmp
lcall
mov
mov
bound
call
nop
xchg
cld
add
ljmp
sbb
in
mov
and
lcall
decl
pop
mov
incl
insb
dec
xor
decl
cmp
call
call
push
pushf
sub
call
mov
out
call
push
mov
pop
out
cmp
inc
jns
xchg
and
lcall
or
inc
pop
stc
and
lcall
sub
scas
adc
xchg
mov
incl
ljmp
pop
jbe
bound
cmp
push
xor
hlt
add
pushl
cmpsl
jno
imul
inc
push
push
mov
pushl
pushl
jo
dec
aad
add
ljmp
into
stc
jl
push
jmp
les
mov
mov
mov
pushl
out
jmp
lret
decl
sbb
stos
inc
and
fsubl
das
jg
mov
jmp
jmp
je
jmp
lcall
gs
pop
push
into
ret
pop
jns
xchg
and
icebp
in
push
decl
pushl
or
movsb
decl
decl
jne
push
push
decl
pushl
xor
pop
cmp
insb
lahf
fiaddl
jmp
imulb
mov
jp
int3
lret
je
add
outsl
test
inc
or
ljmp
ljmp
mov
jmp
xor
aas
cmp
cmp
and
roll
test
mov
lds
repz
aas
dec
call
inc
mov
cmp
fisubrl
xchg
popf
mov
call
pusha
jle
and
ljmp
jge
cltd
jno
lcall
inc
xchg
decl
pushl
cmpsl
repnz
cmpsb
mov
cmp
sub
insb
ja
shl
pushf
push
ljmp
mov
loop
lea
jns
lds
push
insl
aaa
imul
fmulp
fidivrl
pop
lahf
loopne
inc
dec
sbb
pushl
dec
sub
lcall
xchg
out
inc
push
mov
xlat
jecxz
mov
shl
lahf
sti
sub
rcrl
test
jmp
fisubl
aam
hlt
sti
mov
jns
lods
pop
rorb
cmpsb
ljmp
and
jmp
sub
insl
mov
mov
mov
das
es
incl
lcall
add
call
lock
lcall
add
and
lcall
or
push
xor
add
lcall
int
cs
call
in
push
inc
enter
ljmp
insl
mov
pop
idivl
cld
in
push
call
mov
dec
jno
add
jmp
outsb
lods
push
movsl
push
lcall
hlt
pop
xor
in
popa
xlat
jmp
mov
shl
xor
jo
dec
cld
lods
dec
aad
jns
mov
cmc
std
mov
test
jmp
mov
pushl
and
mov
test
inc
add
incl
add
sbb
sbb
out
mov
sub
mov
out
repz
lret
sub
dec
call
lcall
call
notb
shll
dec
jno
cmp
mov
mov
decl
mov
xor
daa
push
xchg
lret
stos
incl
call
mov
test
into
fimull
mov
incl
shl
sub
movsb
pushl
add
call
mov
jmp
jnp
adc
mov
fsubr
ret
mov
call
sub
jae
gs
mov
jne
push
rol
jle
aas
dec
repnz
mov
lcall
emms
test
cwtl
imul
mov
incl
fsubl
sbb
and
outsl
lods
leave
jecxz
pop
dec
sbb
lret
cmp
jecxz
cmp
lcall
push
lahf
mov
aam
pushl
xchg
xchg
fcmovbe
mov
loop
mov
jmp
xchg
dec
pop
jnp
xchg
jns
out
add
je
out
inc
pop
mov
jmp
cmpsl
or
jno
xchg
pushl
pop
popl
mov
addr16
and
lcall
mov
call
mov
arpl
lds
call
jne
jb
cld
cmpsb
ljmp
mov
loope
iret
jl
pop
push
sub
and
inc
adc
mov
xor
cmp
adc
mov
jge
mov
pop
es
call
mov
leave
pop
cmp
pop
push
es
lcall
sub
or
pushl
jmp
sbb
outsl
mov
push
sbb
jmp
movsb
decl
movhps
aas
scas
cmp
imul
fdivrs
adc
ja
xchg
push
es
lcall
fsubrs
or
lcall
sub
inc
mov
jmp
std
mov
jb
inc
inc
stc
ja
ljmp
incl
incl
mov
sbb
test
stos
pushl
data16
lcall
ds
fildll
jmp
scas
lcall
loop
outsl
pop
inc
popa
ret
xor
incl
dec
mov
xor
pop
push
add
mov
fs
inc
xchg
adc
outsb
arpl
or
jmp
jmp
xor
jg
adc
jmp
clc
mov
push
or
mov
push
sub
call
lds
lcall
mov
jnp
cmpsb
call
cmpsl
jae
incl
dec
test
decl
call
lods
push
jmp
inc
dec
cmp
mov
cmp
push
imul
popa
sbb
std
dec
arpl
inc
mov
inc
sarl
leave
js
jne
call
adc
mov
push
jecxz
xor
pop
outsb
add
jmp
mov
lcall
and
pushl
pushf
in
shrl
je
cmp
inc
push
sbb
fsts
push
outsl
xchg
stos
push
repnz
jmp
stc
xchg
jmp
mov
in
rcrb
es
call
sub
test
jmp
pop
test
ffree
mov
fwait
mov
xor
cmp
mov
incl
fmull
cmp
into
sub
call
inc
mov
pop
bound
decl
pushl
inc
in
inc
sbb
stos
test
mov
jp
ljmp
dec
inc
test
pushl
or
lea
lcall
sbb
dec
repz
jmp
into
cmpsb
incl
ret
ss
adc
mov
jl
loopne
mov
sbb
call
imul
add
incl
incl
jp
jns
out
jmp
xor
fistl
out
xchg
xor
xchg
movsb
decl
ljmp
inc
cld
sub
fbld
or
scas
mov
jmp
decl
jmp
jmp
jb
push
cmp
fnstcw
jecxz
mov
dec
outsb
mov
rclb
or
inc
pop
mov
ljmp
push
out
stos
incl
pop
dec
lods
sahf
mov
sar
dec
lcall
cmp
inc
push
out
mov
loope
out
in
shlb
inc
jbe
fs
fstpt
push
and
add
jmp
ret
leave
xchg
js
cmp
cmpsl
jecxz
inc
pop
sahf
rcl
pop
or
inc
imul
cld
mov
dec
inc
imul
or
ljmp
cmp
decl
js
imul
mov
lcall
adc
aam
data16
or
mov
push
pusha
cmp
cmpsb
jmp
pushl
enter
and
xchg
fs
cli
and
call
mov
add
call
pushl
nop
data16
movsl
sub
decl
decl
xor
sub
stos
add
pop
int
incl
pop
lods
incl
lcall
cmp
rclb
lock
test
outsl
insb
in
mov
push
decl
ja
mov
ljmp
loopne
jmp
xor
pop
xchg
clc
insb
pop
mov
ficoml
fbstp
incl
or
into
pop
sub
pushl
dec
popf
pop
mov
out
dec
outsl
add
jmp
mov
fsubrl
icebp
mov
push
inc
inc
out
insb
fs
push
in
decl
lahf
sub
jmp
push
imul
dec
xlat
mov
incl
fistpl
call
pop
imul
mov
movsb
jns
cld
or
lcall
addr16
fidivrl
inc
mov
mov
int3
jae
ljmp
scas
push
les
inc
pop
icebp
rcl
inc
cmp
stc
sub
jmp
incl
sahf
inc
cwtl
je
inc
in
inc
add
repnz
inc
xor
movb
dec
cmp
lcall
mov
outsb
cmc
xor
push
movsb
lcall
cmpsb
lcall
icebp
pushf
imul
ret
popa
jl
mov
call
ja
std
loope
cmp
jmp
data16
cmp
testl
decl
inc
push
fdivl
pop
or
call
adc
dec
inc
or
call
pop
les
subl
jge
jle
test
ljmp
mov
and
lcall
cmpl
push
dec
int3
in
push
fucomip
mov
cli
ss
jnp
dec
add
call
popa
mov
in
stos
jns
js
jp
sar
xor
pop
xchg
xchg
lock
decl
incl
dec
enter
and
xchg
lock
jmp
ljmp
out
int3
xchg
adc
pushl
push
mov
push
mov
ljmp
in
dec
outsb
loop
ficomps
add
jmp
sub
push
and
jmp
push
clc
xchg
scas
call
in
jmp
fwait
cmpsl
loop
xor
or
call
adc
sub
call
push
fs
pusha
sbb
in
loopne
lock
mov
jb
loop
cmp
pop
xchg
mov
pushl
jmp
decl
push
adc
and
call
lea
imul
cmp
cwtl
sub
cmp
cwtl
sbb
incl
lods
ljmp
inc
sub
call
dec
inc
push
gs
sahf
leave
sbb
scas
pop
or
pushl
jg
xor
fildll
push
scas
leave
imul
dec
stos
call
shr
iret
xchg
mov
pop
mov
jmp
decl
fs
daa
mov
outsl
sub
push
frstor
pushl
rorl
incl
call
punpcklbw
lret
sbb
in
pop
lret
mov
pushl
dec
adc
stc
xor
adc
incl
mov
lcall
xchg
ja
fisubl
jge
push
xor
pop
cmp
dec
jecxz
jnp
into
cmp
call
imul
add
incl
test
out
data16
dec
or
cmp
sub
jb
ljmp
loope
decl
inc
enter
push
push
jnp
ret
jge
ljmp
mov
call
hlt
pop
cmc
and
popf
cmovb
pop
sahf
pop
xchg
insl
jge
mov
leave
mov
jl
pushl
xchg
call
ss
ljmp
outsl
and
imul
jl
and
cmp
sbb
adc
jle
outsb
test
repnz
stos
inc
adc
push
pop
cmp
dec
cltd
xor
jae
decl
add
call
adc
and
adc
pop
jmp
stc
pop
xchg
faddl
scas
lcall
fs
aad
lods
lcall
test
incl
jmp
jnp
loope
paddq
gs
call
stc
shrl
jb
mov
cld
mov
rorl
ljmp
lods
cmp
adc
jmp
jns
js
dec
popf
xor
mov
stos
call
out
pop
rclb
cli
cmp
pop
lret
movsb
call
aad
cmpsl
sbb
pop
leave
add
fidivrs
push
add
flds
adc
ja
aas
mov
mov
jl
roll
xor
lcall
add
jge
push
scas
call
mov
pop
iret
imul
ljmp
cmp
sub
loopne
mov
popa
repnz
lock
scas
jmp
push
jmp
pop
or
ljmp
dec
add
lcall
and
decl
jmp
pushl
in
fcomps
js
xor
fildl
mov
add
ljmp
push
mov
pop
push
or
xor
into
scas
jo
std
movsb
incl
in
fisubl
dec
xor
mov
mov
sti
push
cmp
ljmp
cld
xor
inc
sbb
adcl
jmp
cmc
enter
pop
mov
mov
decl
fistpll
call
adc
ficomps
jle
fnstenv
loopne
insb
movsl
cs
cmp
mov
jns
inc
pop
out
pop
stos
decl
add
leave
adc
decl
dec
xchg
mov
jno
mov
decl
popa
jnp
cmp
sahf
adc
push
adc
clc
mov
iret
and
lcall
fisubrl
pushl
fdiv
aaa
lcall
jbe
xchg
call
cmp
dec
cmp
jmp
dec
cmpl
mov
test
subl
call
cmp
pushl
mov
decl
fdivrl
int3
in
mov
ljmp
divl
push
ljmp
jne
mov
das
ret
lret
cmp
jbe
rol
enter
decl
jle
inc
in
movsb
jmp
inc
shrb
pcmpeqw
in
mov
push
xchg
mov
in
cmp
repnz
test
hlt
pusha
mov
decl
out
cmpsl
xchg
mov
pushl
ljmp
lds
cmp
incl
call
shr
pushl
lcall
jge
adc
pushl
in
jns
pop
test
in
inc
test
mov
call
mov
loope
es
ljmp
dec
xchg
sub
jmp
jb
arpl
jmp
mov
ljmp
adc
cmp
icebp
jge
inc
mov
sahf
pushf
jnp
dec
dec
push
add
decl
mov
in
mov
pop
in
mov
pushl
push
mov
jbe
enter
decl
movsl
pop
jae
mov
lcall
ljmp
push
lods
call
pop
mov
push
fwait
mov
mov
aam
or
decl
test
call
test
aas
lret
mov
out
rorb
lcall
push
frstpm(287
add
lcall
sbb
aas
dec
jbe
pushl
add
incl
cmp
jmp
mov
in
jl
adc
negb
loopne
sbb
in
out
lahf
push
leave
push
mov
inc
xorl
jmp
in
mov
mov
adc
push
fsubrs
addr16
outsl
repnz
add
pushl
adc
fisubs
dec
daa
and
cli
adcl
hlt
mov
incl
mov
in
xchg
es
push
pop
fistps
xchg
and
lcall
pop
mov
jno
sub
aas
mov
inc
scas
mov
call
sbb
fmul
push
push
jl
adc
mov
adc
sbb
sbb
lock
lods
sbb
dec
outsl
jo
outsl
inc
rcrb
pop
pop
cmc
xchg
shl
or
call
cmp
rcrl
cmp
and
xchg
call
mov
shrl
ds
enter
je
jl
jle
divl
push
leave
mov
cld
fsubrl
adc
mov
sti
testw
cld
push
cwtl
or
push
mov
test
lcall
ja
mov
rcrb
dec
dec
fucom
pop
cltd
lods
call
and
jo
adc
movsl
pop
scas
mov
addr16
inc
aas
mov
jmp
outsb
jge
cmp
mov
and
decl
adc
cmpsb
pushl
in
stos
hlt
mov
ror
cmp
ret
test
push
std
inc
call
dec
mov
ljmp
sub
lcall
minps
out
jg
call
dec
push
pop
je
pop
std
jo
push
inc
bound
dec
ss
pop
pop
fcmovb
jno
clc
int3
in
push
jg
mov
inc
cs
call
fdiv
shlb
push
jmp
xor
call
mov
mov
arpl
test
sub
call
les
ljmp
decl
adc
adc
outsb
add
lcall
jmp
call
push
call
and
ljmp
push
inc
pushf
lea
jle
jmp
dec
cmc
mov
mov
call
cmp
das
int
pop
adc
call
lcall
leave
cmpsl
mov
outsl
test
mov
jbe
jmp
fisubs
pushl
mov
inc
sbb
dec
cs
call
jl
call
mov
inc
lds
push
jmp
aas
cmpsb
call
lock
faddl
xchg
mov
mov
mov
pushl
pop
das
icebp
sbb
lcall
stos
call
test
scas
pushl
push
incl
iret
aaa
push
push
pop
movsb
sti
adc
push
fucom
mov
adc
push
mov
pop
mov
lcall
push
xchg
pushl
test
jmp
lcall
jmp
data16
mov
mov
movb
clc
push
jle
and
ljmp
leave
mov
dec
pusha
push
add
test
ljmp
push
mov
shll
ljmp
ljmp
sub
ljmp
icebp
dec
push
ljmp
idivl
push
adc
pop
test
dec
mov
push
or
clc
lock
incl
pop
in
push
test
jge
ud2
push
sub
jmp
mov
jmp
add
test
dec
xchg
add
jnp
lods
call
push
dec
lret
das
sbb
pop
inc
xor
sbb
lds
inc
jg
pop
jg
sbb
push
ror
ror
and
lcall
jbe
das
dec
js
mov
xchg
scas
and
call
jbe
inc
sub
mov
sbb
or
pushl
ljmp
ja
jmp
aam
popa
scas
call
hlt
and
call
mov
push
ljmp
adc
pop
mov
clc
cld
add
sub
push
inc
std
scas
shll
aas
jae
movsb
incl
add
jp
mov
adc
xor
std
fs
decl
mov
jmp
jmp
add
mov
ljmp
and
out
push
inc
jae
lods
lcall
arpl
jb
std
add
dec
rcl
sub
fstpl
enter
sub
enter
repz
js
out
mov
mov
inc
ss
push
pushl
enter
ljmp
lret
and
mov
mov
addr16
cmc
mov
jbe
ret
mov
in
push
mov
xchg
jns
or
insl
mov
mov
pushl
incl
cmp
repnz
call
enter
in
hlt
and
call
lcall
cmpsl
lods
cmp
or
in
push
pop
adc
mov
sub
sbb
lock
ljmp
cmp
in
mov
aas
fisubrs
fs
cmp
or
or
out
pushf
mov
mov
loope
call
mov
xchg
loopne
dec
push
rclb
fbstp
mov
fsubl
ficomps
movsb
mov
decl
cmpsb
decl
pushl
jmp
cmpsl
fildll
lods
rclb
jbe
aaa
jne
sub
push
out
mov
clc
sbb
out
adc
lods
mov
add
decl
lcall
mov
ljmp
test
dec
jno
lods
jmp
mov
divb
aaa
aad
dec
inc
dec
shrl
sub
pop
mov
decl
pushl
decl
movsb
ljmp
test
lcall
ja
inc
in
and
sbb
enter
inc
out
jbe
outsb
stos
push
mov
call
out
cs
ljmp
ljmp
hlt
gs
es
lcall
and
jmp
push
bound
sub
pushl
sbb
call
add
decl
xor
call
mov
inc
fdivrl
ljmp
popf
repz
jge
xchg
sub
call
pushl
xor
pop
and
stc
add
dec
jne
sub
cmp
dec
add
ljmp
das
mov
sub
out
adc
aam
fisubs
std
bound
push
call
je
fwait
ret
decl
nopl
adc
mov
jmp
popf
and
incl
pushl
cwtl
sarl
repnz
out
add
call
xchg
push
add
call
inc
xchg
fdivs
out
mov
addr16
nop
push
xchg
sub
kmovb
call
xor
stos
nop
mov
ds
test
mov
adcl
decl
incl
fadds
clc
push
aas
lea
push
jmp
incl
fidivs
jmp
incl
jmp
call
pop
in
jp
cmp
pop
dec
test
push
push
rorb
jno
jmp
lods
fldenv
lcall
decl
inc
mov
and
dec
lcall
jmp
decl
jnp
test
lcall
pushl
test
xor
lcall
mov
jge
clc
adc
mov
fs
cmpsl
ljmp
dec
aam
xchg
daa
test
or
incl
arpl
clc
and
call
cmp
jmp
jmp
scas
out
outsb
mov
sub
decl
inc
into
js
xchg
inc
bound
adc
cmp
dec
fidivrl
incl
add
mull
incl
rclb
sub
pushl
sub
ljmp
lcall
ljmp
incl
mov
std
aad
icebp
adc
idivb
push
packssdw
popa
or
decl
jb
inc
popf
xor
jl
cmpsb
incl
inc
clc
mov
call
shlb
adc
ja
adc
mov
ds
xchg
mov
xchg
jecxz
insb
pop
pop
mov
sub
push
cmp
push
pop
sti
jl
add
lret
mov
mov
leave
add
call
xor
ljmp
mov
pushl
bound
addr16
lods
incl
mov
lret
xor
sahf
jg
xchg
mov
arpl
imul
cwtl
fcomp
cltd
das
lods
pushl
mov
stos
mov
mov
jmp
xchg
jae
call
shl
pop
cmp
lret
call
adc
pushf
fistps
into
add
pushl
cmp
out
pop
loope
lea
call
pop
popf
sub
in
test
data16
ss
repz
push
call
xor
es
pushl
out
clc
xchg
push
fs
sbb
rolb
js
dec
sub
jmp
test
incl
jo
fbstp
popf
data16
add
ljmp
jmp
jmp
pop
cwtl
mov
call
nop
inc
pop
int3
bound
ljmp
fsubrl
in
out
shlb
add
cld
lea
sahf
lods
in
test
cmpl
ljmp
mov
pushl
jns
testl
fcompl
and
stos
inc
or
pushl
jp
jmp
xor
jmp
add
lcall
es
decl
inc
lock
aas
mov
inc
nop
hlt
incb
cld
ja
jmp
in
out
mov
xor
and
and
out
shll
mov
incl
jmp
jmp
incl
ljmp
adc
dec
mov
mov
call
stos
cmp
dec
mov
mov
lcall
pop
fucom
cmp
xchg
shrl
ljmp
add
je
xchg
fbstp
call
incl
incl
in
pop
sub
jo
push
push
dec
cmp
out
lret
mov
mov
pushl
push
std
int
or
jmp
lcall
dec
mov
les
nop
push
add
mov
ja
out
and
dec
rcrb
or
call
mov
sbb
fucomip
cmp
lcall
pop
and
aas
fstpl
js
sub
jl
and
jns
repnz
lcall
jmp
ljmp
xchg
xor
aas
xor
call
clc
pushf
xchg
nop
nop
sub
mov
bound
in
sbb
and
call
and
jmp
aam
mov
repz
pushl
fwait
icebp
inc
pop
jns
xor
push
mov
mov
rorb
xor
push
dec
sbb
mov
jg
inc
push
pushl
jne
xchg
fmulp
sub
mov
pop
aam
pop
push
jmp
ret
outsb
inc
push
lcall
mov
call
xchg
into
ljmp
call
loope
cmp
call
out
mov
inc
mov
js
inc
mov
fcmovnu
mov
mov
xchg
and
add
dec
popa
dec
inc
pop
shr
popf
cld
inc
or
call
mov
pop
mov
ljmp
into
ss
pop
jmp
lea
xchg
incl
and
aad
xchg
enter
mov
call
addl
ljmp
mov
jmp
call
cmpsb
cmp
outsl
stc
and
pop
or
call
stos
mov
jl
mov
stc
xchg
clc
sar
aam
push
addr16
or
cli
pop
xchg
xor
sbb
cld
test
lcall
push
and
and
lcall
add
pushl
mov
call
cmp
lcall
add
in
mov
jae
push
in
loop
ror
test
lcall
rcll
lcall
push
jl
ror
adc
scas
push
cld
jg
xchg
call
arpl
jl
inc
popa
sub
decl
gs
incl
outsb
in
popa
inc
pop
mov
mov
pushf
push
addr16
jp
fcomi
jne
dec
aam
js
addr16
add
sbb
or
jnp
adc
cli
lahf
testb
pushf
mov
cmp
and
or
push
push
das
icebp
sub
inc
out
push
jl
popl
jmp
jo
cmp
dec
xchg
pop
insl
hlt
push
ret
mov
fmull
call
stos
je
jmp
lcall
sub
jns
sub
jmp
mov
fnstenv
mov
js
push
insl
movsl
test
xor
jge
jno
scas
dec
jnp
int
arpl
and
stos
and
pushl
incl
lcall
loopne
xchg
shr
dec
push
addr16
loopne
cltd
cmp
pop
outsb
rep
push
push
imul
movsl
fwait
jns
repz
dec
mov
incl
call
sbb
sti
cld
sbb
nop
lds
ljmp
cmp
fildll
mov
dec
sub
cmp
mull
sbb
loop
mov
xchg
sub
jmp
push
mov
jmp
pushl
sbb
lcall
call
ljmp
mov
ds
call
add
and
sti
pop
mov
dec
xchg
mov
mov
stos
jmp
in
inc
add
call
jb
dec
imul
lahf
xor
repz
xchg
testb
fsubrl
lcall
mov
insl
pop
jp
and
jo
cmp
clc
and
jmp
adc
and
lcall
lcall
xlat
leave
push
xor
mov
pop
shrl
nop
stc
lods
decl
lods
call
call
imul
sarb
mov
lds
ficoml
adc
jo
loope
jge
push
and
fmull
js
fst
cwtl
pop
pop
adc
and
rolb
fisubs
adc
je
fldenv
call
adc
call
and
outsb
sbb
scas
pushl
sbb
adc
sahf
into
xor
adc
lret
and
cmp
insl
fcomps
ljmp
clc
or
divb
out
pushf
ljmp
addr16
js
pushl
fwait
rcrl
mov
mov
cmp
ljmp
das
dec
sub
popa
inc
int3
mov
mov
lcall
call
dec
ficompl
stos
call
mov
lret
and
jle
xor
fs
hlt
clc
faddp
inc
sub
ljmp
sti
ret
test
ljmp
pop
mov
call
mov
lret
dec
lea
in
add
mov
enter
lcall
fstpt
ljmp
lcall
jmp
mov
push
stos
call
fxch
lret
adc
sbb
mov
movd
mov
ds
cmc
push
pushl
pushf
inc
insl
and
lret
push
add
iret
xor
in
hlt
and
mov
decl
jo
shr
movsb
lcall
sub
call
enter
mov
call
inc
addr16
mov
lcall
fisubrl
sbb
mov
scas
std
cmp
pop
test
ljmp
xchg
mov
lcall
out
leave
insb
test
incl
fs
dec
testl
lret
jmp
inc
aaa
fistpl
les
push
cmc
les
lret
lock
repz
iret
add
ljmp
into
out
jne
dec
mov
push
aas
dec
movsb
frstor
xchg
xchg
daa
iret
mov
ror
out
fsubs
divb
pop
divb
adc
rorl
or
inc
fldenv
call
mov
mov
pushl
mov
lcall
xchg
cld
cs
call
xor
add
inc
jle
leave
es
call
mov
aad
mov
sub
lcall
jmp
jae
cmp
incl
mov
fcoml
outsb
xchg
mov
call
std
dec
ret
ficoml
sub
cmp
jg
push
xor
pop
pop
sub
shl
cwtl
xchg
lret
decl
in
sbb
pushl
dec
lcall
sbb
or
add
addr16
dec
rclb
jmp
mov
jbe
xchg
decl
loopne
dec
inc
ss
and
inc
push
lcall
loope
pop
xchg
pushl
scas
pushl
xor
cmp
inc
sahf
lcall
mov
lcall
loopne
fisubs
push
cmpsb
jmp
shr
cmpsb
jmp
ss
std
and
movsl
daa
mov
dec
jno
iret
dec
ja
incl
cmp
dec
outsb
mov
decl
hlt
ss
inc
mov
xchg
dec
push
adc
lds
pushl
cmp
decl
sahf
repnz
incl
push
pop
jbe
mov
xchg
repz
ljmp
clc
icebp
sti
sbb
xor
pop
jae
pushf
aas
jbe
jae
mov
cmpsl
sbb
shll
dec
in
decl
out
lret
scas
jmp
push
stc
adc
ss
cmp
call
pop
and
add
mov
jl
enter
pop
xor
int3
test
pop
mov
push
jae
lds
aad
dec
stos
jmp
decl
lods
aad
enter
jmp
rclb
cli
jno
mov
pop
outsl
inc
cmp
cmp
push
inc
jg
movsl
lretw
add
pop
cmp
push
mov
repnz
in
sbb
lods
inc
mov
daa
mov
lcall
enter
jmp
sub
fcomi
xor
ds
inc
mov
mov
ret
mov
decl
decl
lcall
jmp
das
fsubl
rol
neg
cmp
call
cwtl
cmpsl
rclb
incl
and
mov
cmp
movsb
decl
in
pushl
sub
lds
xchg
push
fwait
clc
shrb
add
lods
dec
or
fidivrs
xor
ret
pushl
ljmp
clc
cmp
and
mov
test
fisubrl
jmp
xor
lcall
sbb
jmp
in
das
push
ljmp
ljmp
xchg
push
or
jmp
or
lcall
aas
ja
dec
ss
out
jmp
and
sbb
rcrb
or
ss
xor
out
add
pushl
add
punpckldq
fdivr
push
adc
flds
ljmp
daa
xor
les
call
lds
jmp
gs
mov
repnz
pop
mov
and
test
pusha
cli
xor
or
in
neg
out
push
jge
fs
loope
mov
jle
rcll
dec
mov
jmp
push
bound
and
mov
pop
repnz
in
mov
call
adc
lcall
pop
js
and
decl
push
sub
push
push
dec
imul
and
sbb
mov
ret
in
out
std
push
cmp
jmp
push
mov
jl
xor
cwtl
mov
into
jo
shrb
fsubrl
add
xchg
jbe
icebp
jmp
xor
dec
adc
cmp
ljmp
xchg
jge
mov
gs
jl
dec
xchg
dec
rorl
adc
sti
fcomps
and
out
jno
mov
in
jg
ret
jmp
inc
repz
incl
mov
clc
icebp
in
fstps
loopne
xor
cmp
push
out
fisttpll
push
orl
jo
daa
jns
incl
pop
adc
mov
push
xchg
jmp
addr16
dec
sub
xchg
cmpsb
fidivrs
cmp
pushl
lods
push
call
cmp
inc
icebp
xor
jmp
mov
inc
mov
daa
xchg
fsubl
sti
lret
or
xchg
pusha
mov
decl
and
ljmp
out
decl
lcall
inc
arpl
insb
gs
stos
ljmp
shl
inc
insl
sub
and
jmp
js
jmp
push
ljmp
ljmp
mov
jmp
and
jmp
sbb
lret
pop
rol
cs
decl
lock
aas
jae
pop
adc
aaa
jbe
call
cmp
ljmp
jmp
in
xor
xchg
ret
fdivp
jle
ja
sarb
fwait
mov
cmp
sbb
inc
cmp
out
cmp
inc
repnz
lea
incl
ficomps
jmp
cmpsl
add
cld
mov
decl
test
lcall
sbb
jnp
xchg
cmc
scas
decl
call
add
lahf
lahf
or
cmp
pop
lahf
pop
pop
jne
stos
fimull
call
sbb
ljmp
sbb
shll
ret
mov
jle
mov
push
cs
aas
mov
jmp
lcall
inc
ret
sahf
xor
cmp
jg
push
inc
adc
mov
or
xor
inc
sarb
movsl
lret
movb
dec
push
jne
mov
call
das
push
decl
test
jmp
notb
jmp
mov
lret
loop
sbb
inc
push
ljmp
call
jae
xor
mov
xchg
inc
pop
in
arpl
sub
mov
cmpsl
and
jmp
incl
jmp
das
jae
or
pushl
dec
ret
xchg
xchg
dec
cmp
movsl
in
push
imul
test
cmp
fnstsw
js
xchg
adc
xchg
mov
mov
and
pushl
rcr
mov
aad
mov
jle
dec
test
call
push
sahf
cwtl
push
dec
stc
lods
cmp
decl
icebp
mov
sbb
into
jg
adc
sbb
cli
mov
incl
mov
ljmp
push
lcall
adc
mov
or
ljmp
popa
push
iret
idivl
sub
mov
call
xor
fimuls
mov
mov
aam
or
mov
out
js
pushf
in
or
call
cli
push
dec
xor
cmp
sarw
pop
rorb
adc
loop
or
cmp
xor
pop
shll
cmp
jns
int3
das
cmpsb
ljmp
test
je
xlat
mov
inc
int
sbb
jmp
mov
adc
and
and
jmp
inc
mov
enter
incl
lea
add
ljmp
jl
cltd
sub
or
call
mov
xor
data16
push
or
mov
clc
mov
dec
aas
mov
call
scas
jmp
ficompl
in
push
jmp
loope
cmp
jmp
jmp
popa
je
mov
bound
in
fildl
lcall
sbb
pushl
mov
imul
ds
test
decl
jo
rorl
decl
mov
call
or
incl
push
mov
jbe
mov
call
push
out
mov
sahf
cmp
js
mov
push
mov
mov
shrl
pop
sbb
pop
jb
lea
out
rorb
incl
inc
test
decl
jmp
fmuls
lock
call
jmp
dec
dec
out
stos
mov
call
and
xchg
loopne
ljmp
jle
call
and
pushl
push
push
add
icebp
gs
ret
mov
mov
decl
and
lret
imul
push
and
jmp
inc
add
jmp
or
push
add
call
loope
xor
jmp
push
inc
fisubrl
ljmp
jnp
mov
inc
xor
or
jmp
sub
imul
xchg
xchg
orl
fcomps
or
nopl
imul
imul
out
pusha
push
stos
push
data16
fimuls
incl
rorl
jo
jns
aas
lods
enter
decl
pushl
test
pushl
dec
bound
mov
mov
jg
sbb
push
test
pusha
sbbl
mov
lock
inc
pop
jmp
sbb
mov
push
enter
ljmp
out
xor
ja
fisttpll
in
aad
pop
stos
call
cmc
cmp
decl
stos
cmp
fists
outsb
std
mov
test
lahf
mov
and
pop
jo
xchg
sbb
dec
lea
xchg
das
icebp
jg
adc
sbb
mov
les
xchg
mov
lcall
shr
sbb
cmp
sub
push
cmp
outsl
call
xor
and
lcall
dec
outsl
push
test
adc
pop
push
das
mov
rcr
add
ljmp
inc
int3
mov
pop
lret
xor
in
jno
jmp
xor
call
fnstsw
jmp
movb
pop
mov
dec
call
lea
push
rcll
movsl
in
jg
test
call
add
decl
add
incl
call
pushl
sub
bound
mov
xorps
add
decl
ljmp
jl
dec
mov
hlt
sub
call
push
xchg
loop
enter
repz
adc
aam
lcall
pushl
jl
nop
lcall
sbb
es
ljmp
pushl
cld
jg
ljmp
rolb
dec
jnp
in
test
xchg
xchg
sbb
je
incl
and
lcall
xchg
cs
sti
loope
in
sub
sti
mov
pop
jbe
fwait
mov
test
decl
ljmp
call
icebp
aaa
inc
fldenv
je
adc
pushl
jno
xchg
add
pushl
outsb
pusha
jecxz
jmp
daa
je
dec
or
push
pushl
jp
iret
daa
cmc
mov
mov
call
xor
pushl
jp
mov
decl
outsl
leave
nop
xor
mov
sbb
gs
stos
jmp
pushf
ja
inc
inc
mov
addr16
fisubs
or
call
imul
call
scas
call
shl
in
push
movsb
call
cmp
fmull
xchg
lock
lcall
cmp
push
shlb
mov
pop
add
call
and
fsubrs
pushl
sub
arpl
daa
cmp
lcall
arpl
imul
ljmp
ljmp
jmp
or
int3
stc
pop
dec
pop
pop
pop
jle
outsb
jge
or
test
incl
ljmp
repz
std
xchg
dec
insl
mov
xor
arpl
incl
incl
push
out
or
ljmp
les
cwtl
xchg
stc
fwait
sub
decl
dec
xor
insb
mov
xchg
adcl
mov
call
inc
std
popa
cmpsl
aas
jbe
xchg
cli
shl
cmp
inc
pushf
cmp
mov
jmp
lcall
inc
fidivl
push
add
jmp
ljmp
push
rcll
dec
push
jmp
pushl
dec
mul
ret
and
jmp
call
push
cmp
incl
ljmp
ja
jle
mull
adc
jne
ljmp
push
adc
shll
call
arpl
js
decl
or
jmp
js
sarl
pushl
pushf
shlb
shll
decl
mov
ljmp
cltd
dec
aaa
imul
in
mov
cmp
call
incl
imul
in
push
test
jmp
add
repnz
call
cmpsb
mov
es
pushl
cmpsl
mov
fsubs
xor
add
inc
mov
arpl
ljmp
jno
into
jg
pop
test
mov
insb
daa
add
cmp
aaa
inc
add
lcall
dec
mov
xor
hlt
cmp
pushl
loop
pop
js
aam
ljmp
inc
fistpl
inc
push
mov
movsb
push
pop
in
jle
test
mov
cmp
decl
add
jmp
jb
add
decl
call
xchg
arpl
lahf
mov
inc
cmpsl
js
adc
xchg
adcl
adc
lret
lcall
call
lcall
push
mov
sbb
call
ss
call
mov
sarb
popf
ljmp
jge
gs
push
ljmp
out
leave
shll
mov
ljmp
gs
loope
inc
out
xchg
test
incl
add
ljmp
out
repz
out
xchg
sbb
mov
jmp
add
jmp
pushf
push
ljmp
cli
es
decl
cmp
fbstp
lock
sub
jns
stos
mov
inc
lods
cli
stos
ljmp
out
or
xor
xor
popa
test
call
ret
xchg
cmpsl
sub
test
decl
in
add
idivb
mov
out
imul
xchg
addr16
jge
iret
ds
cmp
lcall
dec
xrelease
pushl
insl
mov
xor
ss
sub
jp
not
xchg
pushf
mov
xchg
mov
mov
cmp
add
testb
fsubr
push
pop
in
mov
jns
cmp
push
decl
decl
test
push
inc
push
jle
lcall
jbe
or
ljmp
std
xchg
incl
fs
lcall
call
mov
xchg
data16
mov
adc
lcall
sub
call
popa
frstor
push
std
jbe
mov
decl
ja
push
leave
aas
fwait
fs
push
seto
imul
sbb
sub
pusha
add
call
fidivs
push
push
call
pop
fimull
mov
sbb
test
xchg
sub
sub
jmp
xchg
jmp
sub
decl
decl
incl
jge
sbb
or
xor
icebp
outsb
sti
push
in
inc
push
stos
call
dec
sbb
cmp
stc
hlt
cli
das
shlb
loope
mov
mov
cmp
inc
pop
jo
xchg
adc
pop
cmc
mov
decl
mov
decl
fsubr
dec
sub
sbb
pop
outsb
pop
sub
lcall
leave
push
loopne
mov
sub
movb
cld
add
out
mov
pop
imul
in
mov
decl
decl
jp
xor
repz
mov
pop
jo
pushf
mov
xchg
sti
repnz
ds
lock
std
fucomip
enter
cmc
fidivrs
and
jmp
sub
decl
pop
mov
decl
neg
pop
loope
push
lcall
push
lds
decl
cmp
out
lods
ljmp
cmpsl
out
movsb
decl
pushl
test
in
mov
incl
call
mov
adc
adc
mov
decl
push
pop
jne
pop
test
jmp
mov
fdivrl
sub
add
jmp
lds
bound
inc
cmpsl
lods
iret
imul
daa
out
aas
fcmovnu
xchg
pmaxub
inc
pop
roll
inc
call
rcl
inc
sub
decl
sahf
jbe
pushl
jmp
cmp
jmp
ljmp
movsb
call
cmp
inc
js
clc
shrl
dec
adc
aam
sbbl
jmp
xlat
adc
decl
jge
mov
adc
xchg
dec
cltd
int
jno
jnp
pop
mov
popa
lcall
dec
dec
jno
lcall
aas
sub
aas
pop
loopne
in
ror
lcall
inc
inc
add
mov
incl
cmp
jmp
in
cld
xchg
ret
shll
dec
idivl
ret
sbb
lcall
mov
pop
mov
call
xchg
scas
call
test
jmp
lahf
lret
xor
sub
add
cmpsb
incl
jle
pushl
jmp
push
jmp
add
mov
jmp
sbb
js
adc
xchg
aam
aas
jp
sti
addl
fcomi
ljmp
cmp
inc
cli
cmc
mov
mov
frstpm(287
fcmovnb
leave
or
jb
adc
lods
dec
sbb
test
mov
pop
insl
leave
mov
mov
push
sbbl
pop
movsb
jmp
xchg
dec
sahf
outsb
or
incl
mov
push
lcall
decl
decl
out
adc
mov
push
outsl
mov
jmp
sbb
incl
adc
cs
lcall
dec
push
jmp
mov
pop
addr16
repnz
inc
adc
lcall
fs
jnp
gs
mov
and
in
fdivrl
shlb
incl
test
arpl
cmp
stos
or
cmp
fstp
sbb
inc
jne
mov
dec
mov
scas
cmp
lcall
and
mov
add
movb
int
cmp
ljmp
xchg
cld
mov
push
test
jmp
adc
and
icebp
arpl
arpl
negl
add
cmp
push
pushl
divb
and
adc
pop
mov
cmp
pusha
inc
bound
adc
ret
sbb
es
jmp
fcoml
jmp
xchg
xor
mov
mov
jmp
mul
cmp
xor
pushf
dec
ss
test
call
cwtl
or
mov
lcall
cmp
xchg
aad
ljmp
gs
lret
pop
rcrb
hlt
mov
dec
cld
test
dec
int
pusha
jl
fbstp
xchg
outsb
xchg
cmp
push
jmp
cmp
pushl
int
sbb
leave
push
cmpsl
sbb
ljmp
nop
sub
pushl
jge
or
jle
icebp
xor
jmp
inc
sub
incl
shll
push
mov
sbb
inc
jg
ljmp
mov
ljmp
push
notb
leave
outsl
loopne
xchg
push
hlt
fisttpll
pushl
pop
mov
in
aaa
and
ljmp
into
aas
aas
and
ljmp
cli
pop
and
jmp
xchg
inc
fstpl
add
jne
int
mov
insl
mov
gs
pop
cmc
call
pusha
jae
push
in
popf
fwait
xorl
mov
push
ss
and
inc
insb
cmp
imul
sbb
aaa
cli
add
push
fwait
mov
ficoml
aaa
push
xor
jmp
aam
mov
adc
xor
sub
mov
jmp
lcall
pushl
pushl
sub
sub
jmp
outsl
push
mov
dec
xchg
jl
out
adc
movsb
incl
sub
mov
lock
je
cmpsb
dec
mov
ret
inc
or
inc
lret
mov
cmp
pop
add
jmp
lcall
out
or
fnstsw
adc
pop
sub
mov
pop
in
mov
add
or
call
decl
fistl
dec
sbb
pop
jno
js
mov
xorl
jne
mov
inc
fs
jecxz
lcall
pop
cmp
incl
adc
inc
iret
add
or
ljmp
jbe
jp
in
int3
push
jl
xchg
je
decl
ljmp
push
daa
xchg
aas
aam
jo
jae
push
call
aam
mov
mov
out
cmp
pushl
arpl
add
xchg
pop
into
fsubl
cmp
decl
dec
fcoml
repz
sub
call
mov
xchg
sbb
sahf
sti
fwait
pop
fldt
jno
lods
call
fwait
jb
lahf
out
xor
mov
mov
xlat
ret
xchg
lret
daa
jecxz
lods
cmp
mov
call
loop
mov
mov
es
mov
decl
data16
dec
cld
mov
dec
sub
inc
in
mov
dec
imul
popf
push
fdivs
lea
sub
decl
mov
incl
pushl
insb
cmp
aam
mov
cmpsl
stc
dec
loop
cwtl
lret
stc
popf
into
stos
adc
js
lahf
dec
popl
lcall
mov
ljmp
mov
or
and
fistpl
ljmp
cmp
xchg
setno
mov
push
jecxz
js
push
in
mov
sbbl
pop
lods
popa
stos
inc
inc
mov
call
call
sub
call
fstps
cmp
decl
jle
ljmp
jmp
xor
sub
lcall
dec
sub
popf
sbb
mov
or
ljmp
or
decl
cltd
lods
dec
jno
js
and
pushl
sub
out
arpl
mov
insb
in
jecxz
imul
lcall
add
dec
sbb
mov
call
pushl
jge
hlt
lods
push
push
or
lcall
jns
xchg
and
mov
jge
add
pop
rcrl
xchg
lods
decl
dec
pop
mov
push
xor
pushl
rclb
rcrl
loop
aaa
xchg
pop
mov
aad
cmp
push
fsts
jae
mov
push
addl
cld
daa
push
jmp
aam
cs
pushl
or
dec
scas
aad
mov
ffreep
movsb
jmp
mov
scas
jmp
incl
push
int3
cmp
sti
xorl
jns
pushl
test
decl
and
mov
push
mov
call
pop
fwait
add
cmp
shrl
pop
fs
arpl
nop
mov
pop
hlt
push
pop
pushf
aam
ljmp
jg
fcoms
add
pop
inc
dec
mov
pop
xchg
mov
jp
add
pushl
jg
mov
call
call
in
mov
push
ljmp
xchg
push
cmp
decl
ljmp
mov
popf
dec
mov
pop
shll
jecxz
mov
xchg
jmp
outsl
icebp
nop
mov
inc
jns
jne
and
dec
inc
inc
fs
fcomip
push
xchg
out
jmp
push
outsl
rol
mov
or
jmp
out
fisttps
movsb
ljmp
adc
cmp
lods
dec
in
xchg
dec
popl
mov
sub
jmp
test
cmp
decl
test
jmp
sub
lcall
pop
je
cmpl
std
mov
pusha
mov
mov
call
jmp
fdivrs
jb
or
lcall
push
mov
mov
pop
in
aad
nop
cs
cmp
aaa
iret
int
cs
decl
fsubs
jmp
cs
decl
call
jmp
call
mov
fiadds
lock
jmp
dec
or
push
pop
insl
mov
pop
cmpsb
call
or
call
inc
daa
pusha
pop
mov
ljmp
inc
cmpsl
imul
sub
pushl
cmp
dec
mov
xchg
scas
pushl
and
jmp
add
lcall
mov
out
inc
sub
mov
aas
cmp
adc
mov
mov
jmp
call
out
fcompl
incl
jb
pushf
sbb
nop
xchg
xchg
mov
std
stos
call
lcall
lahf
fimull
stc
dec
mov
xchg
ret
jmp
dec
imul
push
incl
mov
or
lcall
inc
jecxz
mov
inc
rcrb
sbb
and
call
pushl
mov
sub
xchg
pushl
sbb
rcl
insb
xor
aaa
push
mov
mov
call
movlps
sbb
ss
aaa
jge
dec
cmp
sub
pushl
xchg
arpl
notl
inc
dec
scas
mov
clc
dec
arpl
sahf
ljmp
pushl
inc
sbb
mov
cwtl
ja
stos
adc
jb
pushl
lcall
or
cmp
push
aad
stc
sbb
addl
test
jg
fmul
pop
xor
js
or
pushl
call
in
sbb
jmp
sub
mov
shl
inc
loop
jmp
popf
cmc
mov
call
inc
in
jmp
aaa
popa
scas
loope
pop
mov
call
cmp
pushl
fdivr
mov
stos
jmp
jmp
and
incl
call
decl
adc
ljmp
xchg
xchg
jno
and
ljmp
jmp
dec
mov
cmp
cs
ljmp
loopne
mov
decl
jp
cmp
jo
or
mov
lret
hlt
xor
inc
push
xchg
ljmp
rcrb
mov
ljmp
xchg
imul
call
ljmp
ljmp
xchg
popa
arpl
push
ret
jecxz
push
shlb
mov
jge
and
mov
flds
inc
sar
mov
in
pop
or
or
pushl
jmp
push
push
jmp
in
pop
out
jne
ret
incl
fs
cmp
shl
stos
inc
sub
inc
arpl
popf
daa
dec
addr16
repz
add
decl
jmp
mov
sub
call
imul
mov
lcall
out
adc
mov
lret
loop
push
test
lods
jmp
incl
ljmp
mov
mov
pop
mov
push
mov
call
fisubl
ljmp
jns
cmc
xchg
out
cwtl
outsl
push
jg
lock
or
movsl
daa
sbb
in
cmp
stos
je
lcall
ret
dec
mov
pushl
rclb
adc
cmp
pop
shr
jge
arpl
in
inc
sahf
ja
and
cltd
jno
lock
xchg
cld
into
cmp
call
in
scas
bound
pop
ret
jmp
jmp
lock
lcall
cld
inc
push
jmp
frstor
sahf
mov
cli
rcl
out
mov
je
jbe
pop
fstps
jp
inc
shl
inc
inc
sahf
xor
gs
movsb
call
aas
pushf
aas
add
mov
adc
rorl
cmp
pop
xor
test
incl
call
inc
xchg
data16
lea
mov
incl
push
mov
daa
xor
insb
cmp
loope
iret
mov
ljmp
call
mov
jmp
jmp
pushf
cmc
testb
icebp
mov
addr16
and
mov
xlat
xchg
jae
loope
stos
movsl
adc
loope
add
mov
add
incl
ljmp
jp
popf
inc
jbe
int
pop
pop
fsubrs
pushl
sub
pushl
jmp
inc
mov
imul
mov
or
jge
loope
mov
in
fiaddl
lcall
adc
lcall
loopne
incl
lock
lret
js
sbb
mov
pushl
lcall
nop
aaa
and
pushl
mov
push
inc
xchg
add
push
or
decl
cmp
fimuls
add
mov
inc
iret
stos
ds
call
call
mov
jmp
mov
push
cmp
pusha
dec
xchg
or
ss
decl
jmp
sub
out
cs
jmp
incl
test
ljmp
mov
push
jg
fwait
cltd
mov
jno
xchg
pushf
bnd
jmp
cmp
decl
cmpsl
jle
jno
push
mov
das
cmp
incl
cli
outsl
cmp
pushf
icebp
sub
push
mov
decl
sbb
pop
mov
dec
lret
ljmp
fwait
inc
imul
xlat
js
decl
push
ret
cwtl
or
incl
lcall
out
test
mov
stos
jmp
leave
jae
pushl
pushl
imul
inc
cmp
jnp
js
cmp
test
ret
inc
dec
je
ss
loope
leave
cmp
pop
fmulp
mov
mov
pushl
aas
dec
icebp
or
call
jmp
cmpl
jl
fs
cmp
jmp
xlat
dec
pop
imul
jns
sub
cmp
pushl
decl
lcall
rep
pushf
cmp
sysret
sub
lcall
xor
movsb
decl
call
inc
inc
leave
mov
add
call
std
and
lcall
jo
mov
aad
sbb
dec
mov
xor
outsb
ja
ljmp
popa
clc
pop
push
adc
dec
sub
xor
call
les
xchg
mov
incl
incl
rol
insl
dec
bound
or
and
mov
les
fnstenv
cmp
int3
int
out
pop
cmc
das
leave
mov
xor
jb
xor
mov
push
add
imul
insb
orl
push
mov
lcall
inc
inc
enter
pushl
mov
cmp
add
pop
push
mov
mov
lahf
sub
aas
and
lcall
xchg
ror
das
jg
loope
icebp
mov
decl
jo
pop
mov
push
push
or
aaa
mov
leave
adc
cmp
out
pushw
out
lret
out
dec
js
inc
stc
movb
ljmp
incl
incl
mov
push
push
mov
push
call
repz
lods
fdivs
pop
mov
mov
cwtl
popa
add
cmp
ljmp
lcall
aad
std
inc
inc
jne
inc
adc
mov
jmp
lcall
ljmp
ljmp
incl
punpckhbw
out
cmp
in
lahf
push
jmp
popa
jge
out
pop
xchg
jmp
add
call
outsl
or
sub
aas
pop
inc
rol
cwtl
sbb
out
xchg
mov
jmp
jne
cmp
cmp
ds
fcmovnbe
into
test
decl
jl
insl
jg
jmp
test
pop
icebp
sbb
inc
lahf
or
and
mov
inc
test
xchg
lock
sbb
xchg
mov
pushl
int3
inc
insl
nop
sbb
xor
xor
jb
push
jne
setbe
pushl
jl
xchg
incl
jmp
popf
fistpl
adcl
adc
call
inc
pop
push
mov
and
push
or
call
ret
scas
pushl
pushl
mov
mov
decl
outsb
dec
fbstp
arpl
dec
mov
call
jnp
cwtl
pop
xchg
pushl
enter
incl
jg
pushl
popa
sbb
mov
nop
shll
push
addr16
cmp
push
mov
pushl
pop
out
push
dec
cmp
in
and
out
dec
iret
stos
insl
scas
aad
stos
push
jae
xchg
arpl
inc
clc
cmp
sti
sbb
fwait
push
call
cmpsb
dec
and
jmp
fldt
sbb
xchg
inc
cmp
pushl
aas
fcmovne
and
push
cli
lret
inc
fnsave
ljmp
call
cmp
imul
jae
ljmp
int
and
call
ja
sbb
dec
and
jmp
and
ljmp
jecxz
jp
loopne
scas
jmp
dec
add
ljmp
jecxz
xor
and
lcall
push
and
incl
pushl
call
nop
cmp
inc
dec
sub
decl
xchg
push
or
mov
add
lcall
push
stos
cmp
lret
and
lcall
push
pop
inc
pop
ds
mov
dec
xor
push
jne
jns
cmp
cmp
xor
in
faddl
jmp
push
outsl
fcomps
stc
xlat
add
push
fdivs
gs
and
imul
ljmp
out
aad
cmp
stos
cmpsl
adc
shr
iret
out
outsb
std
xor
jg
mov
hlt
ljmp
jmp
adc
pop
outsb
outsb
stos
pushl
int3
loopne
int
stos
lcall
dec
pop
je
aas
in
aaa
rolb
mov
cwtl
add
and
jmp
dec
incb
aaa
and
cmp
sub
call
pop
pop
cmp
xor
mov
xchg
notb
sahf
or
decl
ljmp
in
push
pushl
xor
inc
enter
ljmp
pushl
sub
call
mov
and
cli
iret
pop
fsubl
mov
pop
xchg
jns
add
decl
stos
call
rclb
sbb
add
ljmp
pop
and
xchg
jbe
scas
aad
rcl
in
dec
jnp
jp
jl
jae
cmpsb
incl
jle
xor
push
dec
lahf
or
mov
xchg
xchg
or
out
ret
and
jmp
pushl
push
mov
mov
out
cs
ljmp
xchg
jno
dec
stc
rcll
inc
popa
test
cmp
repz
std
inc
sbb
mov
jp
aaa
popa
xchg
cs
pushl
adc
aas
movl
jmp
lcall
sbb
dec
jne
lret
jnp
gs
dec
ret
sbb
rorl
sbb
cmp
or
lcall
jae
fidivrs
outsb
dec
ror
in
incb
push
scas
call
decl
ljmp
incl
jmp
addr16
fs
jmp
call
pusha
mov
xchg
dec
popa
movsl
sub
repz
sbb
or
pop
push
ljmp
aaa
cmp
rcrl
cld
or
jns
mov
decl
dec
imul
and
lock
mov
cmp
or
in
lods
call
sbb
test
outsl
rclb
fstpl
lcall
dec
cmpsb
ljmp
decl
jmp
aas
cli
scas
je
cli
cmp
push
mov
push
jle
test
mov
lcall
out
mov
psllw
mov
enter
imulb
loop
hlt
inc
scas
pushl
adc
decl
out
outsb
jne
aas
adc
mov
incl
call
add
push
jb
jmp
xchg
cmp
mov
mov
inc
sub
and
push
mov
stos
jbe
dec
inc
pop
fmuls
jmp
incl
cmpsw
sub
cli
xchg
sub
and
call
sub
hlt
aam
jmp
pop
push
ficoml
cmp
jmp
negl
sub
lcall
fmuls
jle
out
ret
inc
popf
pushf
push
xlat
fisubrl
mov
jmp
ss
mov
xchg
xchg
ljmp
sbb
mov
in
int
loope
and
call
dec
fwait
xlat
dec
jne
jl
lock
inc
mov
dec
mov
stos
incl
sbb
pushf
dec
inc
das
mov
dec
adc
cmp
mov
aaa
stos
sahf
insb
cltd
jp
inc
push
repz
sbb
jge
jnp
cmp
cmp
pushl
push
xor
adc
les
dec
lahf
push
push
pusha
sbb
pop
lods
in
cli
int
decl
jmp
mov
sub
pushl
pop
jle
lcall
sub
repnz
sbb
lret
imul
jl
lahf
pop
lret
adc
mov
dec
xchg
jmp
shrb
int3
mov
adc
sahf
cmp
decl
stc
dec
stc
lahf
enter
lods
stc
or
dec
mov
sbb
sti
clc
sbb
push
jmp
bound
aaa
pop
xor
jmp
call
pushl
stc
cmp
mov
call
ss
pop
int
movsb
jmp
add
call
gs
movsb
dec
in
popa
lods
mov
lds
xchg
ja
fs
xchg
cld
orl
mov
xor
sarb
xor
pop
pop
adc
ror
pop
popf
outsl
push
in
push
jmp
test
call
scas
ljmp
sbb
incl
pushl
xchg
jge
pop
dec
mov
push
jl
xor
stc
jno
cld
inc
arpl
cmp
adc
ja
repnz
jmp
enter
pop
cmp
movsl
jl
mov
pushl
incb
call
shrb
ljmp
pushl
imul
sbb
jl
ljmp
call
popf
push
call
push
cmp
incl
and
push
pushl
xchg
lock
pop
inc
mov
mov
fs
sahf
push
lahf
cli
pusha
push
dec
nop
gs
movsb
incl
mov
fadds
inc
adc
stc
loop
or
call
out
xor
or
xchg
jecxz
jle
and
lcall
arpl
test
cmp
stos
ljmp
call
sbb
mov
xchg
fsubrl
pushl
leave
scas
incl
cmp
xor
dec
xchg
pushl
ret
mov
push
out
jmp
dec
xor
push
dec
jp
fists
mov
call
incl
aam
add
jmp
mov
sbb
jne
sub
call
sub
jmp
and
sub
call
jmp
add
incl
cs
call
add
call
incl
sti
dec
stc
jnp
fnstenv
ljmp
incl
inc
int
repz
in
loopne
or
and
outsb
rcrb
xchg
sub
lcall
jnp
cwtl
stc
push
inc
and
lcall
incl
dec
adc
shlw
pop
dec
pop
test
call
mov
lcall
fldcw
mov
ljmp
pop
rcrb
aad
inc
imul
push
xchg
into
fnstenv
in
xchg
push
sbb
lcall
int
repz
adc
push
pop
xor
adc
jns
or
jle
push
xchg
jmp
jnp
sbb
rclb
mov
call
pop
sub
lock
loop
outsl
int
fcmove
call
xchg
xchg
xor
and
lcall
imul
incl
mov
call
cmc
sarl
iret
test
sbb
insb
inc
adc
jne
push
daa
fwait
or
pushl
pushl
sub
incl
incl
stos
cmp
decl
cmc
jg
jae
lods
inc
xchg
fsub
and
lcall
mov
mov
push
rorb
fadds
inc
sbb
mov
decl
mov
jg
bound
lcall
jle
pop
rcll
inc
adc
fsubr
jecxz
iret
cmpsb
ljmp
jmp
iret
outsb
into
fdivp
pop
sub
lcall
mov
pop
movsb
call
in
push
scas
ret
in
imul
sahf
std
mov
jg
mov
js
inc
mull
jnp
mov
ljmp
jmp
lds
in
jne
outsl
push
mov
scas
lcall
jmp
outsl
cmp
fstp
xor
out
mov
mov
nop
jnp
cld
lds
nop
sbb
jb
mov
mov
inc
pop
mov
imul
decl
add
call
push
pop
sbb
mov
or
incl
add
clc
or
jmp
adc
mov
adc
int3
sub
call
stos
lcall
jns
imul
in
mov
inc
mov
push
fdivr
xor
mov
out
jle
addr16
mov
push
cmp
jbe
pop
into
sub
call
incl
jmp
call
incl
pusha
inc
xchg
ficomps
mov
lcall
xor
test
or
push
enter
xchg
movsl
cmp
dec
fdivrs
cmp
lcall
mov
lcall
adc
jb
js
jg
notb
push
push
adc
push
notl
fldt
dec
cmpsl
and
jmp
pushl
imul
call
mov
filds
decl
mov
rcl
out
fcomp
xlat
cli
push
adc
imul
out
push
xor
shl
cmp
jmp
push
lret
insl
jo
adc
mul
mov
push
push
imulb
in
call
jne
pop
mov
mov
lcall
mov
ljmp
pop
mov
inc
in
xor
jmp
push
push
or
decl
mov
pushl
adc
inc
inc
mov
ljmp
pop
aaa
push
cmp
push
lods
mov
jmp
xchg
inc
cltd
nop
push
insb
xor
rcl
inc
adc
les
jmp
xor
pusha
cmpsl
inc
or
daa
sub
call
insl
add
cmp
pop
xchg
sbb
decl
movsl
stos
jg
out
sub
incl
mov
pop
mov
out
inc
push
dec
inc
jecxz
je
and
and
ds
outsb
sbb
xor
pop
fiaddl
push
and
call
lcall
dec
add
lahf
pop
and
pushl
and
lcall
lods
mov
jge
push
jnp
sbb
repz
imul
mov
lret
gs
loop
mov
lret
push
jge
fdivs
pop
into
pop
pusha
or
jmp
addr16
mov
fwait
sbb
mov
inc
xchg
cltd
dec
insl
sbb
adc
ljmp
dec
fdivrl
decl
jmp
mov
jae
scas
jnp
les
adc
fisubrl
fwait
in
jne
inc
mov
jecxz
sbbl
push
ljmp
data16
dec
or
call
add
aam
xor
movsb
ds
jmp
cmp
lcall
xchg
int
mov
sub
mov
or
ljmp
push
inc
mov
ljmp
jge
or
lret
or
pushl
lahf
arpl
lret
ret
pushl
addr16
or
into
shll
call
inc
ret
jp
shl
imul
loope
xor
xchg
cmp
xchg
outsb
sti
dec
jg
loop
mov
lcall
int3
adc
pop
mov
adc
inc
je
outsb
lcall
fwait
add
push
out
sub
in
pop
xchg
pop
sbb
jae
mov
inc
lods
pusha
mov
ljmp
mulb
jmp
mov
pushl
movsb
incl
pushl
mov
mov
lcall
shlb
test
incl
jl
mov
fnstenv
ret
aaa
push
cmp
push
mov
jl
sbb
jne
jns
cmp
mov
dec
repnz
repz
cmp
cld
cmp
std
lcall
jle
xor
ljmp
decl
decl
xchg
out
xchg
mov
sti
aaa
es
pushl
inc
loope
add
ljmp
lcall
jmp
pushl
lret
mov
pushf
pop
sbbl
xchg
ret
adc
loopne
ds
jno
ja
sbb
xchg
pusha
es
push
push
push
cmp
jmp
call
pop
scas
incl
push
push
push
enter
lcall
lcall
add
xchg
imul
push
dec
cli
mov
gs
sti
sub
jmp
lret
adc
ljmp
sub
push
adc
xchg
jmp
cltd
add
je
sahf
sub
lcall
decl
mov
push
mov
dec
jne
decl
lea
ljmp
jbe
mov
daa
jns
fndisi(8087
iret
or
ljmp
jmp
push
sub
jge
inc
cmpsl
lock
imul
add
adcl
add
aas
sbb
xchg
imul
mov
fnstsw
shrb
jmp
xchg
cmp
incl
fwait
lock
jmp
cmp
test
mov
adc
stc
push
xlat
mov
gs
fcmovu
enter
imul
int3
data16
jmp
cli
ja
push
cmpl
dec
scas
xor
inc
mov
cld
add
push
push
out
and
decl
sub
pushl
dec
mov
fsubl
adc
aas
nop
pushf
rcll
arpl
sarb
popa
in
into
lret
jmp
decl
jmp
cli
and
inc
xchg
in
addl
stos
fstpl
inc
xor
ja
adc
mov
das
jp
jmp
in
sbb
insb
xchg
push
and
stc
outsb
push
pushf
insl
sub
call
push
nop
push
mov
in
mov
pushl
dec
mov
mov
daa
dec
insb
mov
stos
std
add
call
adc
decl
or
decl
call
sub
push
jp
call
addr16
sbbl
add
ljmp
decl
jle
xchg
fisubrl
cmp
dec
inc
data16
xchg
mov
hlt
push
test
stc
jo
cmp
jmp
ret
xor
scas
cmpsb
call
in
and
jmp
test
push
mov
or
ljmp
add
inc
movsl
push
nop
sti
cmp
inc
test
push
cltd
pop
cs
pushl
push
or
inc
pop
fstps
mov
jmp
fld
dec
lret
cltd
pop
jl
mov
sahf
and
incl
jmp
dec
mov
lcall
push
ljmp
jmp
mov
jmp
lods
lcall
pop
and
pushl
or
incl
xchg
in
stos
fisttps
sbb
inc
sbb
std
fmulp
sub
shrl
js
jle
out
pop
std
push
and
ljmp
mov
lcall
pushl
incl
cs
jmp
call
lock
push
push
incl
push
aad
shrb
push
ljmp
call
push
lock
ljmp
mov
pushf
mov
cwtl
out
into
fidivrl
scas
lods
test
ficoms
adc
mov
call
cmp
sub
fstl
jo
sahf
shrb
mov
fbld
mov
jbe
stc
inc
es
pushl
rcrb
decl
je
mov
pop
cmpsb
pushl
pop
xor
je
pop
sub
pushl
jge
mov
cld
stos
fnsave
in
incb
std
sub
mov
push
adc
inc
xchg
inc
out
mov
adc
std
or
jmp
or
icebp
add
cmp
inc
gs
inc
push
outsb
cmpsl
sbb
call
mov
sbb
aam
sbb
xor
xchg
jp
shr
fucomi
fdivs
sar
mov
addr16
pop
xchg
rorl
mov
incl
ret
mov
mov
call
cmpsl
jle
lods
cld
cli
dec
sahf
mov
push
add
pushl
sarl
call
cs
pushl
push
out
mov
sbb
fiaddl
pushl
test
call
cmp
stc
frstor
push
pushl
and
add
lds
adc
and
ljmp
pushl
in
add
jmp
dec
push
inc
pop
jno
mov
decl
addl
pushf
xchg
add
test
mov
decl
xor
mov
or
jns
sub
clc
call
sub
lods
pop
mov
dec
adc
push
lcall
xlat
add
pop
jno
ljmp
push
inc
imul
dec
ficoml
dec
mov
leave
sarb
in
in
addr16
fnclex
dec
out
mov
cld
ja
enter
leave
in
rcll
call
ljmp
nop
cmp
cmp
mov
pop
or
call
addr16
mov
mov
sbb
daa
gs
dec
stc
test
dec
lret
stos
incl
lcall
sub
decl
sbb
xchg
push
call
jmp
push
xor
mov
jmp
cmp
call
inc
or
dec
stc
mov
loope
jmp
jmp
sbb
out
loop
xchg
xchg
cmp
movsl
mov
sub
mov
adc
pushf
cmpsb
call
push
test
pushl
sub
adc
mul
cmpsl
inc
sub
rorb
pushl
add
pushl
aas
gs
and
popf
scas
stos
xchg
jmp
call
mov
rcr
stos
ljmp
incl
pusha
lds
stos
mov
dec
mov
shlb
add
into
int3
stc
mov
cmpsl
insb
adcl
push
out
cmp
call
cmp
pushl
negb
adc
and
lcall
incl
call
add
movsl
and
xlat
pop
pop
adc
das
mov
jl
popl
xor
cmp
nop
jne
and
mov
arpl
mov
or
cmp
jecxz
decl
sahf
pop
lea
xchg
lods
shll
int
cs
dec
inc
xlat
xor
sbb
mov
or
push
aam
mov
movsl
mov
inc
adc
in
pusha
jno
int3
cltd
js
dec
jbe
dec
mov
stc
pop
sub
lcall
incl
shll
repz
ds
jne
push
incl
jbe
add
ret
mov
or
incl
incl
call
add
mov
push
push
cld
xchg
adc
pushl
decl
pushl
jp
enter
mov
andps
jne
shl
dec
fwait
xchg
das
xchg
dec
fidivrs
addr16
inc
jp
gs
push
leave
cmpsb
ljmp
inc
jb
pop
dec
shll
xchg
insl
push
or
mov
lcall
fsubs
push
fiadds
xchg
push
cwtl
stc
sub
inc
cmpsl
fnstcw
shlb
das
pusha
mov
ljmp
mov
cmp
test
in
sarb
cld
mov
pushl
sub
call
arpl
xor
sub
jmp
decl
dec
imul
pop
mov
xchg
outsb
cmp
aad
std
mov
mov
jmp
decl
mov
ljmp
jnp
pushf
ja
jmp
pushl
add
push
adc
mov
call
dec
aas
mov
xor
es
decl
lcall
clc
cmp
decl
incl
flds
mov
out
fbld
icebp
ror
icebp
enter
clc
scas
sbb
sub
jno
lods
lcall
lods
jmp
sti
and
push
lcall
out
nop
mov
adc
add
inc
js
adc
cmpsb
jmp
mov
dec
loopne
xor
pop
repz
dec
les
jmp
add
jmp
cmp
lahf
cmp
mov
jno
fldenv
mov
lock
out
cmove
iret
pop
cmpl
cmpsb
mov
jmp
dec
inc
jae
jne
lcall
call
cwtl
sti
popf
fisubrs
mov
dec
enter
lcall
add
jecxz
sbb
push
pop
xor
mov
fsubr
mov
incl
jg
inc
pop
sub
incl
iret
inc
idivl
bound
lret
test
cmp
shrb
add
inc
mov
dec
lock
pushl
dec
enter
js
inc
xor
pop
popa
lock
sti
add
pushl
pushl
out
inc
and
push
in
call
fnstenv
dec
cmp
out
jmp
call
lock
dec
inc
xor
mov
sti
fcoms
or
call
jge
jecxz
fidivrl
xchg
sbb
in
xchg
ljmp
jl
test
jns
mov
push
ss
lock
arpl
lea
mov
ljmp
repz
and
lcall
mov
xchg
fstpt
test
jmp
jmp
sbb
xchg
test
jmp
dec
push
incl
pusha
std
sub
jmp
jp
cld
cmp
jbe
xchg
xor
xchg
xchg
std
insb
jno
mov
or
add
incl
and
lcall
das
push
insb
cwtl
and
call
popf
sbb
xor
pop
mov
mov
xchg
xchg
gs
adc
cmp
clc
push
test
call
dec
mov
add
lcall
int
push
mov
fwait
insl
adc
repz
mov
jge
jge
add
arpl
jl
frstor
call
mov
call
pop
aaa
cwtl
push
dec
icebp
cltd
pop
sbb
inc
dec
and
decb
fistpll
fmull
mov
inc
rorb
cmp
push
inc
xchg
scas
mov
inc
lods
inc
fstps
lcall
jns
jb
inc
test
frstor
outsl
mov
stos
decl
pop
mov
inc
loope
or
hlt
outsl
fdivl
dec
mov
cvtps2pi
sub
outsl
xchg
scas
sbb
pop
loop
jp
xchg
xlat
xchg
lock
jge
popa
push
cld
inc
mov
dec
pop
insl
insl
dec
movsl
sahf
popa
sbbl
mov
call
in
jne
adc
ret
xor
mov
call
push
cmpsb
jmp
ljmp
ret
into
xor
call
pop
rorb
jmp
mov
decl
decb
decl
ljmp
push
ss
mov
loopne
je
cwtl
repnz
adc
fisubl
xchg
ja
aaa
insl
mov
push
add
decl
js
mull
mov
mov
and
jne
push
decl
mov
fucom
inc
jecxz
loop
sub
in
mov
cmp
sbb
lods
jns
add
call
test
loopne
jle
ret
rcrl
or
inc
leave
inc
cmp
decl
in
vpsubq
cld
sarl
dec
sti
repnz
ljmp
imul
or
ljmp
jb
mov
incl
jmp
ljmp
add
jmp
add
xor
pop
adc
decl
fs
test
jns
xchg
in
xchg
cmp
push
xor
out
jp
sbb
adc
ljmp
jmp
push
out
stos
ljmp
pushl
inc
and
ljmp
es
cmp
and
ljmp
lcall
ljmp
sbb
or
adc
push
stos
ljmp
decl
in
shl
leave
jno
les
lcall
inc
and
lcall
add
testl
fildl
call
jmp
cltd
mov
shlb
ficoml
cmp
adc
decl
sbb
ret
xchg
pop
push
add
ljmp
mov
lahf
test
lcall
call
ds
jecxz
jmp
xor
jge
jnp
jl
xchg
repnz
pop
std
add
ljmp
mov
fidivrs
dec
xor
ljmp
testb
sub
dec
push
lcall
xor
or
or
sub
decl
xchg
and
cmp
push
and
popa
mov
outsl
and
pushl
mov
lahf
imul
cld
test
sbb
lcall
scas
call
mov
xchg
mov
lret
ret
movsb
cmp
test
dec
add
loope
cli
lea
fwait
mov
call
pushl
inc
push
loop
mov
mov
call
ret
out
push
and
ljmp
or
call
fnstsw
or
pop
fmul
cmpsl
ds
hlt
jbe
ljmp
or
mov
mov
dec
sub
in
in
sub
push
call
lcall
push
shlw
aad
lret
jb
inc
imul
in
aad
xor
mov
lods
jecxz
push
dec
popa
insl
nop
add
rcll
cmp
or
mov
jmp
enter
jmp
sub
ds
call
cmp
add
sarb
call
mov
lcall
cmc
and
decl
xor
pop
cwtl
lcall
fs
test
inc
mov
movsb
incl
shrb
mov
jmp
mov
and
ljmp
popf
jp
aas
popa
hlt
jecxz
pushl
leave
cmpxchg
std
cmp
call
adc
add
jmp
insl
pop
in
dec
mov
mov
cmp
cmovns
cmp
cmp
pushl
pop
movsl
lods
adc
sub
sub
jmp
decl
mov
pushl
movsb
faddp
cltd
mov
push
nop
lcall
decl
fcomps
movsb
jmp
mov
js
scas
ljmp
test
cmp
inc
aaa
or
sbb
aaa
sbb
ret
fidivrl
out
mov
adc
pop
push
fwait
lock
mov
xor
incl
sbb
test
decl
adc
lods
inc
cmp
jecxz
mov
xor
mov
dec
cmp
mov
jns
push
jae
cld
sti
sbb
cld
cli
sti
jg
test
je
paddusb
clc
or
stos
fidivrs
xchg
xchg
cmc
outsl
in
leave
sbb
inc
xchg
pop
push
or
lcall
dec
jmp
pextrw
push
outsb
fcomps
aad
fbld
sub
fs
mov
outsl
ljmp
cmp
lcall
or
fs
push
and
js
or
ljmp
in
je
mov
insl
fsubrs
ja
jl
das
xchg
test
jmp
mov
decl
fimull
mov
pushl
xor
pop
or
mov
ds
pusha
dec
and
mov
clc
out
inc
cmpsb
decl
incl
scas
shrb
call
mov
call
sbb
jl
pop
decb
mov
jne
ret
in
adc
mov
add
es
ljmp
adc
ret
fidivs
repnz
addr16
cmpsb
jl
mov
fld
fdivrs
dec
fwait
ds
call
push
aam
cmp
and
jecxz
jmp
push
xlat
xchg
fwait
rorb
mulb
out
push
call
sub
jmp
enter
decl
ljmp
nop
or
nop
faddl
jmp
add
jmp
and
decl
pushl
push
adc
stos
inc
jae
or
fiaddl
cld
pop
jmp
test
fsts
jle
mov
iret
aam
movsl
test
inc
mov
or
lcall
inc
and
lcall
mov
iret
and
lcall
das
repz
cmp
xor
notb
fmulp
stc
add
filds
decl
lods
call
call
add
incl
call
lcall
pop
inc
cmp
cmp
loop
pop
sbb
into
cli
mov
incl
ss
jmp
ds
pop
adc
mov
adc
xchg
fsubrl
insl
sbb
aam
xor
adc
call
int
aaa
mov
jmp
xchg
sarb
fmulp
js
jl
inc
xchg
pop
pop
cltd
je
incl
and
fstpl
ljmp
cld
test
lcall
sbb
jecxz
xchg
mov
pop
call
xchg
cmp
jp
lret
xor
incl
daa
lahf
loope
icebp
xchg
ret
mov
sbb
dec
dec
cmp
mov
sub
cmp
pop
popa
or
decl
jp
js
push
cwtl
mov
repnz
fsubrs
fwait
xor
mov
loopne
dec
int
aad
mov
jbe
incl
call
es
pushl
test
call
or
xchg
mov
ljmp
incl
das
mov
rolb
inc
dec
fwait
nop
imul
xchg
fimuls
rcrl
jmp
pop
and
test
jg
fldcw
inc
jp
pushl
xchg
cmpsb
jmp
jbe
bound
call
rclb
cld
test
inc
cmpsl
daa
popf
jmp
xchg
inc
xchg
hlt
push
jg
ficoms
inc
adcl
imul
loop
ret
aam
lret
sbb
mov
outsl
jg
xor
je
lcall
inc
lods
fimull
ljmp
cmpsb
decl
mov
out
push
push
xchg
ds
lods
fdiv
scas
xor
repnz
bound
mov
decl
test
pop
fwait
cmp
push
push
ret
pop
jae
push
adc
decl
incl
inc
cmp
dec
or
repz
jmp
call
ja
ficompl
cmp
decl
mov
lcall
ret
test
dec
inc
shlb
mov
jmp
and
pushl
pop
inc
sub
decl
popf
and
jmp
adc
adc
aad
test
mov
mov
int
pop
push
call
repz
call
jo
mov
fiadds
lret
mov
jmp
sbb
jge
mov
pop
adc
add
inc
js
cmp
call
aad
mov
call
jmp
lcall
cmp
push
mov
pushl
xchg
inc
or
jne
arpl
loop
cmp
pushl
pop
cmc
mov
call
aaa
inc
dec
or
std
cmp
jecxz
jnp
sub
incl
das
cwtl
mov
pushl
call
sub
push
mov
sbb
call
or
ljmp
and
js
mov
call
mov
in
cmp
movsl
pop
sbb
pop
sub
incl
mov
xor
xchg
data16
decl
add
incl
jle
loopne
pop
adc
xchg
sub
lcall
add
jmp
add
decl
in
pop
in
cmp
insb
mov
and
incl
mov
jmp
sbb
mov
jmp
xchg
ss
lcall
inc
inc
loopne
test
jl
lcall
incl
jb
outsb
mov
call
jae
pushl
xor
je
dec
push
aaa
sub
xor
fldenv
inc
pop
data16
jl
mov
mov
cmp
data16
decl
jecxz
lea
push
pushl
xchg
incl
pop
lcall
call
sbb
mov
dec
jne
sub
dec
cmp
push
pushl
adc
sahf
push
and
clc
mov
xchg
imul
rcrl
lcall
enter
jmp
decl
mov
inc
cmpsb
decl
sbb
cmp
push
imul
js
mov
jecxz
adc
lcall
and
dec
or
and
decl
jae
or
xchg
stos
push
adc
sub
mov
call
ljmp
jg
ljmp
jmp
outsl
fdivrs
in
out
pop
dec
loope
iret
mov
rcl
cmp
inc
mov
ljmp
decl
push
aad
aad
popf
dec
xor
loopne
dec
add
inc
and
push
push
leave
fists
jecxz
push
in
cwtl
shl
pop
ss
push
inc
cmp
sub
decl
pusha
cmp
incl
in
push
jae
mov
dec
iret
fdivs
fwait
cmp
dec
lret
out
xor
jmp
pushl
fwait
shlb
scas
jmp
add
mov
adc
dec
arpl
call
fwait
loopne
into
pop
jae
loope
adc
inc
stos
push
dec
testl
dec
add
and
jmp
cmp
xor
scas
pushl
cmp
mov
inc
hlt
add
cs
incl
and
in
jmp
repnz
aad
or
push
call
shrb
call
sti
mov
je
jp
sbb
pop
jb
mov
lods
ljmp
mov
lods
call
jmp
lcall
and
dec
sub
or
je
mov
sub
dec
mov
sbb
jmp
adc
call
adc
stos
inc
or
dec
push
jno
mov
or
cld
cltd
mov
incl
call
dec
paddsb
inc
add
lcall
push
pushl
jmp
adc
decl
std
inc
dec
test
call
ret
jg
xchg
into
push
add
scas
mov
cmp
cmpsl
repz
jmp
ret
das
add
xchg
lcall
pop
jbe
pop
ds
lahf
xor
and
decl
out
add
movsl
jp
ljmp
xchg
cs
inc
rorl
cs
call
incl
loop
push
std
cmp
ljmp
add
ret
push
cmc
test
adc
and
decl
loope
lcall
idivb
in
cmc
pop
xor
dec
jbe
lcall
jnp
std
dec
sub
jmp
cld
mov
pushl
lret
xchg
or
jmp
in
aam
mov
ljmp
jmp
xor
and
movsl
inc
mov
sub
incl
das
out
dec
leave
stos
lcall
jae
jg
push
mov
or
mov
iret
aam
pop
or
jmp
mov
push
adc
test
lcall
ret
sub
aam
add
fstpt
cmp
jmp
dec
cmp
fistpl
js
and
aad
stc
and
lahf
jns
xor
sub
lcall
push
leave
or
and
popa
out
cmpsb
ljmp
jmp
insl
xor
pop
push
inc
dec
in
fcompl
decl
jmp
mov
call
nop
nop
cs
pushl
ret
cmp
lcall
les
out
add
call
ds
ljmp
imul
pop
sub
xor
aaa
test
xor
push
jle
mov
and
mov
jmp
shrb
ljmp
mov
test
ljmp
call
push
imul
enter
mov
jp
or
inc
push
mov
imul
dec
and
lcall
pop
dec
or
in
push
jp
mov
test
ljmp
adc
je
pop
add
lcall
xchg
jae
call
push
scas
push
lcall
std
push
incl
pusha
mov
xchg
adc
stos
dec
ffree
pusha
clc
cmpsb
pushl
lcall
cltd
inc
nop
add
incl
ficompl
sar
lret
adc
fldenv
jmp
out
jns
and
fdivrs
jb
push
and
popa
add
dec
mov
fsubr
movlps
cmpsl
lcall
popf
out
sub
decl
jmp
adc
push
mov
aad
in
cs
fpatan
lret
and
lcall
fstpt
xor
pop
dec
cmpsl
mov
daa
jb
pushl
or
lcall
lock
enter
inc
mov
lcall
push
ss
inc
test
lcall
add
dec
pop
xor
xchg
mov
or
scas
fistpl
lahf
mov
or
jmp
cmpsl
mov
ljmp
nop
icebp
xchg
xor
addr16
shrb
cltd
xchg
stc
scas
call
mov
xchg
inc
leave
int3
adc
adc
fwait
in
or
lret
insl
lret
xchg
sub
jo
test
mov
and
mov
cwtl
sub
and
mov
xchg
inc
pop
cs
call
mov
cmp
push
call
ljmp
jo
data16
incl
hlt
push
pop
sub
aaa
frstor
ljmp
imul
daa
cltd
jne
in
mov
lcall
add
sbb
mov
div
movb
call
push
fldenv
or
inc
mov
jno
push
pop
aas
xlat
xor
aas
fdivrp
test
cmp
add
sbb
call
jmp
cs
decl
xor
rolb
ljmp
pop
pop
in
lods
jmp
out
or
mov
pushl
cwtl
rolb
push
inc
out
push
push
es
jmp
pop
mov
test
les
cmp
and
rol
cld
sbb
fmuls
incl
xlat
imulb
dec
clc
adc
js
popf
repnz
ja
int3
sbb
mov
call
dec
lret
fmull
push
mov
lcall
fwait
leave
into
stc
fistpl
pop
stc
mov
addr16
std
or
pushl
bound
push
cwtl
sahf
stc
or
call
mov
and
in
jb
lock
repz
leave
hlt
leave
scas
fsubrs
jecxz
test
incl
xchg
jmp
daa
mov
stc
fiaddl
sbb
ljmp
adc
fcomps
jnp
aam
call
int3
mov
cmp
sub
inc
inc
nop
je
add
jmp
jmp
jmp
inc
push
fwait
mov
cwtl
pop
adc
pop
mov
add
jae
jmp
sub
decl
jl
pushl
pop
inc
int3
and
adc
cmp
xor
push
insb
ss
fwait
ret
add
jmp
scas
dec
outsl
insl
das
mov
pushl
jbe
fstpt
fwait
popa
mov
mov
sbb
sarb
push
stos
icebp
test
incl
outsl
ret
cld
in
jle
incl
test
lds
lahf
cmp
adc
lcall
hlt
jp
jmp
lcall
xchg
jno
lcall
scas
out
or
fs
mov
incl
lcall
cs
incl
xchg
cli
aaa
cli
hlt
es
decl
or
pushl
decl
or
decl
jnp
shlb
call
ds
shll
inc
test
mov
add
jmp
decl
ret
lock
out
push
sub
inc
cmp
incl
push
jg
cmp
decl
mov
sbb
cmp
cwtl
push
adc
int3
mov
pop
mov
cmpsb
incl
clc
lret
dec
ret
push
pushf
xchg
lcall
pop
and
incl
jmp
das
test
pushl
push
call
xchg
aaa
pop
cmc
imul
adc
mov
cmp
mov
lcall
cmp
or
xchg
xor
fisttpl
subl
sub
decl
aas
mov
insb
push
cmp
jmp
pop
dec
and
adc
repz
lret
add
pop
mov
je
jecxz
jno
in
sti
fldt
cmp
into
into
loopne
imul
cmp
ds
rorb
add
call
out
adc
push
jns
mov
and
push
lcall
outsl
aas
sbbl
jmp
jge
shlb
jmp
hlt
dec
mov
push
sub
jge
dec
dec
or
incl
xchg
shl
add
decl
mov
pushl
sub
insb
mov
incl
fisttps
popf
jb
stos
jmp
mov
mov
ljmp
xchg
mov
inc
cmp
xor
xor
ljmp
and
xchg
xor
xlat
aam
scas
decl
dec
xor
lcall
dec
test
call
inc
lcall
xchg
adc
jmp
and
scas
inc
and
mov
add
mov
call
xchg
loop
xchg
mov
lcall
out
add
jmp
push
aad
adc
xlat
push
lcall
or
pushl
and
int3
xchg
pop
pop
sbb
pushl
push
cmp
jp
decl
pop
dec
push
call
icebp
lret
pop
out
ret
inc
xor
or
decl
sub
jmp
sub
jmp
and
notl
adc
pusha
popf
rcll
mov
test
dec
and
loop
and
and
incl
sbb
xor
pushl
mov
leave
dec
lock
inc
xor
fmull
pop
inc
cmp
inc
inc
fidivl
mov
sub
add
call
cwtl
add
insl
sbb
mov
dec
call
daa
movsb
pushl
fsubr
movsl
dec
icebp
inc
mov
push
stc
mov
cmp
test
cmp
ljmp
aas
mov
ljmp
pushl
cmp
xchg
test
jmp
adc
popl
in
dec
lahf
pop
pop
push
lock
pop
xchg
stos
xchg
xchg
xor
ds
nop
cmp
ljmp
aam
or
ljmp
negl
cmp
mov
and
call
dec
cli
jmp
dec
inc
pop
arpl
fdivp
rcl
hlt
and
dec
pop
mov
push
shl
je
call
push
jo
fwait
ljmp
inc
enter
lcall
inc
mov
or
incl
call
push
dec
add
call
xlat
insl
push
std
clc
and
lcall
sbb
pop
mov
xor
mov
incl
decl
decl
pop
cmp
sbbl
out
xchg
incl
test
jmp
sub
jmp
adc
fwait
dec
fs
cmp
movsb
lcall
in
jp
aas
inc
je
decl
hlt
adc
ljmp
adc
pushl
or
std
add
idivb
mov
mov
push
mov
ja
inc
rcrb
call
loope
fcmove
adc
xor
add
ljmp
pop
dec
bound
mov
cmp
ljmp
pop
stos
fcompl
jmp
pushf
mov
rcrl
or
mov
pushl
cmpsb
dec
fsts
pop
cmpsb
dec
fwait
aam
decl
movsl
cwtl
jo
jae
ljmp
sub
incl
call
add
lcall
cmpl
mov
decl
es
ljmp
iret
mov
mov
incl
test
incl
mov
cmp
insl
xchg
xor
mov
push
daa
cmpsl
in
cli
add
outsb
pop
xlat
hlt
mov
jmp
inc
inc
shl
add
incl
fwait
or
call
frstor
lcall
push
jnp
mov
xchg
xchg
ret
mov
sbb
ljmp
push
mov
incb
fiaddl
ljmp
sbb
call
sub
mov
into
fbld
mov
incl
or
pushl
inc
in
push
cmp
inc
insl
add
mov
rorl
in
nop
jp
daa
sahf
lret
enter
add
cmpsb
fdivr
and
pushl
insb
or
pop
xchg
cmp
jmp
decl
cmp
jmp
clc
jno
jmp
stos
lcall
lcall
push
hlt
add
dec
pusha
jmp
pop
aam
dec
jo
cmp
ljmp
das
add
incl
lret
out
pop
and
rorl
cmp
outsb
jl
call
pushl
out
sahf
nop
cmpsb
incl
std
pop
pop
clc
dec
ror
xchg
inc
pop
xor
ljmp
jecxz
ja
fbstp
gs
add
jmp
pushl
test
lret
call
pushl
shll
dec
adc
mov
jge,pt
inc
push
sub
push
jl
movsb
ljmp
or
shl
or
push
and
sub
aam
pop
mov
xchg
ljmp
push
mov
lods
pushl
jmp
cmp
lcall
psubusb
push
cmp
call
call
lret
pop
iret
insl
mov
dec
xchg
movsl
fistps
mov
lret
add
lahf
js
fists
pop
cmp
sarb
iret
mov
shll
call
sbb
hlt
popf
and
ljmp
fistpll
or
ljmp
sub
call
pop
mov
call
cmp
inc
and
jle
dec
bound
stc
cwtl
subl
pusha
and
lcall
sbb
pop
xor
sub
mov
sbb
pop
sbb
and
je
and
ljmp
pushl
xor
mov
testl
call
cmp
dec
jg
rolb
jae
pop
fcoms
add
call
lods
jmp
ds
cmp
jbe
mov
ds
jmp
xchg
pushf
shlb
lcall
mov
call
sar
cs
lcall
ret
push
cli
sub
decl
out
cs
fld
xchg
stos
incl
inc
addr16
sti
inc
add
cmp
pushl
jmp
push
push
xor
pop
inc
adc
cmp
lcall
call
cmc
xor
push
int
repnz
outsl
shl
popa
gs
daa
aad
popa
fdivs
jns
call
xchg
sub
out
mov
call
mov
adc
inc
cmp
fwait
inc
push
into
cmp
hlt
mov
call
cli
xchg
jo
in
icebp
pop
loop
ret
lret
fcmovnu
in
xchg
out
lret
ja
ja
lcall
popa
push
sbb
push
jmp
lcall
push
cmp
popf
cmp
incl
sub
lcall
mov
pushl
xchg
xchg
xor
aas
insl
jmp
mov
movsl
nop
or
stc
push
pop
mov
cmp
aaa
dec
mov
aam
xchg
or
lcall
add
call
inc
sti
inc
cmp
push
inc
lock
pushl
or
inc
lds
jnp
decl
jmp
sub
pushl
rolb
outsl
flds
pop
std
mov
call
jae
aas
iret
xchg
insb
mov
dec
test
lods
ljmp
mov
aam
mov
xor
mov
jmp
lret
mov
pop
dec
je
rdtsc
sub
jmp
movsl
xchg
popa
ret
sbb
enter
cmp
xor
popf
pushf
shll
hlt
jb
repnz
sub
jmp
fs
xchg
movsb
lcall
lcall
jnp
or
call
jle
cmp
in
cmpsl
bound
mov
sub
jmp
leave
dec
out
mov
or
mov
ljmp
call
mov
arpl
pop
xchg
shlb
jmp
inc
pop
and
cmp
and
loop
fldenv
adc
xor
or
popa
int3
lock
cmp
xchg
js
lcall
lret
mov
pop
stc
cs
ljmp
pop
popa
test
decl
sub
dec
lcall
sub
incl
es
lcall
out
push
addr16
ja
inc
jmp
ljmp
imul
outsl
push
call
xchg
xchg
push
jno
xchg
incl
test
pusha
fwait
push
mov
test
mov
std
inc
cli
cld
or
adc
or
fisttps
loopne
adc
sbb
dec
mov
xchg
out
je
mov
dec
mov
jbe
fs
movsb
push
mov
mov
out
cmc
inc
lds
cmp
and
ljmp
incl
jae
lret
mov
inc
mov
leave
js
sub
pop
mov
ljmp
push
repnz
pop
inc
movsl
inc
sarl
adc
xor
ds
incl
loopne
lea
xor
xor
incl
sub
pushl
inc
xchg
pop
lods
lcall
jg
fs
arpl
fldt
call
out
xchg
pop
cmp
jmp
cli
and
call
push
jmp
ret
adc
xor
sub
lcall
cltd
das
lods
inc
mov
add
popa
lret
pop
sub
jmp
int
push
adc
imul
lcall
loopne
repnz
call
jb
lock
lds
sub
jmp
push
out
ljmp
xor
cmp
data16
and
jmp
lcall
jmp
xchg
addr16
fcmovnb
or
jo
dec
adcl
push
outsb
mov
jmp
mov
pop
into
or
imul
inc
fs
call
jb
test
mov
cmp
lahf
nop
hlt
cmpsl
sbb
icebp
lret
lea
aam
add
pop
xor
loope
inc
xlat
aad
push
xor
xchg
in
lds
in
mov
incl
add
jnp
faddp
test
lock
or
jl
lcall
clc
sub
sbb
in
xor
cld
mov
incl
ljmp
push
mov
jmp
mov
push
jl
jne
or
lods
decl
rol
lock
divl
test
pop
fsubrl
cmp
call
incl
incl
movsl
aaa
push
imul
test
jmp
sbb
add
push
or
lcall
loopne
add
jnp
pop
jb
lret
xchg
pop
or
cmpxchg
repnz
dec
sti
subl
mov
mov
lods
mov
or
popa
xor
test
pop
dec
pop
inc
sub
sbb
ficoms
cmp
mov
lcall
or
jmp
decl
lcall
sbb
loop
xlat
mulb
mov
pop
int
cmpsb
inc
into
hlt
lea
test
xor
sub
mov
ljmp
sbb
decl
ljmp
mov
out
mov
jmp
test
mov
jbe
or
pushl
sub
lcall
xlat
into
incb
loopne
out
cs
push
loop
cmpsl
cmc
jmp
pop
test
or
push
ljmp
ljmp
decl
lcall
idiv
add
xchg
mov
jmp
out
push
pushl
xlat
popa
pushw
mov
mov
jg
push
test
incl
or
ljmp
ljmp
sahf
cmp
je
fisubs
std
push
ljmp
and
call
cmp
imul
movsl
push
push
cli
sbb
les
pushl
inc
cli
stos
pushl
push
roll
and
jmp
mov
mov
dec
cmpsb
ljmp
insb
outsb
iret
out
sbb
cli
hlt
xor
testl
mov
cmp
jne
push
stos
hlt
push
incl
hlt
arpl
push
sub
call
pop
sbb
jmp
aad
cwtl
out
clc
cmp
mov
inc
clc
loopne
pop
ret
add
nop
scas
jmp
mov
cmpsl
sub
xchg
inc
sahf
cli
add
movsb
decl
pop
in
dec
jle
ror
sub
inc
push
fildll
push
jl
push
insl
scas
mov
xchg
jno
daa
js
incl
ljmp
fisubrs
mov
call
pop
inc
add
decl
mov
cmc
xor
cld
pop
push
lea
push
neg
mov
insb
lods
push
mov
fistps
rcrb
adc
ljmp
ljmp
sub
sub
jmp
stc
cmp
incl
mov
mov
push
cwtl
cltd
adc
push
pushl
and
lcall
movsb
pushl
push
lcall
dec
call
stc
sub
je
int3
stc
mov
mov
fcmove
cmp
pushf
ss
sbb
or
int
xchg
in
mov
inc
je
pushl
push
push
nop
cmc
push
test
lcall
push
cmp
lcall
jo
test
call
adc
jns
jg
push
jno
mov
scas
mov
jo
jnp
cmp
call
test
stc
stc
cmp
clc
cmpsl
loop
insb
pop
cwtl
add
decl
test
lret
ret
adc
stc
int
pop
lds
lcall
lcall
mov
call
decl
mov
push
je
push
rclb
push
clc
imul
or
lcall
call
into
mov
out
push
je
out
icebp
mov
or
jo
lret
ljmp
jecxz
and
pushl
pop
mov
incl
jns
popa
push
lcall
mov
add
aas
push
test
call
fidivrs
jo
lcall
mov
ud0
filds
dec
jns
je
mov
je
mov
inc
fwait
mov
popa
imul
lcall
jmp
loope
jmp
aas
pop
fidivs
and
lcall
call
inc
sbb
bound
mov
lods
cmp
dec
daa
in
jno
fistl
or
mov
cmp
adc
in
jo
fnstenv
cmc
sbb
mov
mov
lcall
mov
enter
decl
or
call
sub
cli
fnsave
jmp
mov
incl
cmp
out
push
jae
xor
popa
movb
pushl
loopne
pop
arpl
mov
fdivp
data16
imul
sbb
cli
in
roll
sub
cmp
cmpsb
mov
loope
add
cmpsl
fwait
cmp
out
fnstsw
out
fcmovnbe
ret
jg
stos
ljmp
jmp
jp
pushfw
loopne
xchg
jmp
ljmp
lods
decl
imul
jmp
or
insb
ds
cs
pushl
fsubrs
jmp
incl
sbb
mov
jae
cmpsb
call
lcall
in
aad
faddp
stos
pushl
push
mov
jle
mov
pushl
call
sub
pop
push
jl
cmp
push
and
sbb
cmp
jno
mov
mov
cld
jae
pop
push
push
data16
mov
or
lcall
mov
or
ljmp
test
mov
and
mov
push
cmp
out
sbbl
push
mov
ds
add
decl
pushl
shrb
stos
sub
call
lahf
stc
scas
dec
movsl
in
nop
xchg
sarb
jmp
jle
sti
mov
cmp
sahf
xchg
js
xchg
sub
push
mov
push
push
inc
lret
jno
and
mov
repz
mov
decl
stos
scas
lcall
mov
jmp
clc
lret
sbb
popa
cmp
inc
ljmp
mov
cld
and
lret
cli
cmpsb
jmp
lret
and
in
adc
lock
and
jmp
arpl
sub
jmp
jo
lods
mov
lahf
cmp
lcall
mov
incl
add
xlat
and
decl
xchg
jae
int
push
cltd
dec
test
call
inc
test
jae
icebp
fstpt
jmp
push
xchg
lods
popa
adc
rcll
rcrb
push
ljmp
scas
jmp
xor
lds
decl
jmp
adc
ljmp
incl
ljmp
decl
decl
js
lock
xchg
scas
sub
out
and
daa
lods
incl
lods
decl
lcall
decl
sahf
mov
or
repnz
ljmp
push
lock
dec
rorl
ljmp
pop
nop
int3
icebp
mov
aam
mov
adcl
decl
jmp
lcall
shrb
push
call
ljmp
imul
cmp
jmp
inc
jle
adc
decl
jmp
pop
int3
leave
outsl
cmp
pop
push
ljmp
stos
sub
mov
popa
jle
imull
jmp
cmp
cmp
dec
xor
aad
imul
iret
popf
jecxz
dec
aaa
push
das
imul
mov
std
adc
push
mov
lcall
jmp
call
jmp
xor
mov
mov
and
incl
pushl
stc
mov
pushl
fnsave
loope
or
stos
decl
enter
push
pop
fsubrl
imull
pop
std
shll
and
sbb
pushl
pop
mov
cmpsl
int3
sub
jmp
jmp
cltd
loop
popf
mov
popf
mov
jmp
lcall
dec
push
scas
call
mov
decl
jge
jne
jmp
rcrb
mov
pushl
lret
int
stos
or
jns
cli
cmp
adc
jp
incl
mov
xchg
mov
decl
call
push
leave
repz
aam
fnsetpm(287
bnd
mov
ja
leave
test
or
lcall
mov
sub
push
mov
test
incl
stos
ljmp
jge
push
push
incl
jae
xor
xchg
popf
and
mov
leave
sahf
mov
ljmp
sub
push
js
sub
bound
cmp
int3
add
fstpl
loop
mov
lcall
pushf
xor
bnd
ljmp
push
push
cmp
pushl
fcoml
cmp
incl
call
lcall
pop
iret
out
rolb
push
lcall
push
inc
mov
mov
decl
scas
ljmp
adc
repnz
test
adcl
jne
repz
incl
xor
push
dec
push
in
inc
mov
cmp
test
ret
or
iret
sbb
push
rclb
sbb
sub
inc
jns
adc
out
adc
ret
imul
jmp
fidivl
aaa
dec
into
xor
mov
and
fcmovnu
cmpsb
pushl
jmp
popf
fwait
pushf
test
aaa
mov
xorl
xchg
frstor
dec
jp
adc
mov
dec
xor
sub
aas
add
mov
pop
js
mov
jmp
jmp
pop
mov
ljmp
ljmp
jmp
sub
xchg
jmp
jbe
sub
fbstp
int
clc
and
mov
push
and
jmp
out
ljmp
add
call
cmpsl
push
cld
frstor
movsb
incl
hlt
test
decl
es
cli
hlt
inc
mov
into
scas
sarb
ret
jmp
mov
movsb
incl
pop
pop
cmp
decl
jle
push
jmp
mov
jmp
ljmp
mov
sub
inc
pop
mov
sub
push
scas
mov
jmp
jmp
data16
stos
addr16
mov
mov
dec
and
inc
popf
ds
aad
mov
xchg
lods
incl
adc
push
mov
call
pop
cli
aaa
out
nop
and
dec
leave
inc
mov
call
push
mov
ja
and
ljmp
push
mov
jmp
cmp
ret
dec
push
inc
bound
push
mov
xchg
sbb
in
inc
ljmp
aam
pop
pop
ja
arpl
lods
cmp
pushl
ljmp
nop
mov
and
lcall
out
mov
xchg
cmc
xchg
arpl
pop
nop
adc
repnz
sub
popa
or
fcoml
inc
cmpsl
xor
push
in
js
mov
in
cmp
cmpsb
call
and
incl
int
cs
ljmp
jmp
xchg
mov
sti
pop
aas
mov
rcll
fcoml
push
mov
in
ljmp
mov
lcall
insb
cmp
add
lcall
ret
push
or
lcall
jno
xor
jmp
cmc
leave
sub
pop
mov
inc
test
jmp
jmp
dec
sar
adc
fdivl
sbb
aam
jae
arpl
xchg
mov
dec
adc
sub
dec
cmp
je
in
jge
mov
jns
ret
ljmp
aaa
dec
cli
lret
decl
bound
mov
mov
push
inc
movsl
xchg
bound
cmp
pushf
mov
jmp
cld
cmc
es
out
outsb
pop
imul
cmp
mov
inc
enter
sub
int3
push
imul
mov
add
incl
pop
jle
and
mov
pop
and
decl
lahf
loopne
push
in
ss
push
sti
in
rcll
inc
and
jmp
scas
call
in
mov
jmp
mov
ljmp
insb
out
dec
and
lcall
in
outsb
mov
jle
stc
mov
lcall
add
ficoms
lcall
sbb
sub
call
cld
stos
jo
in
call
icebp
cmp
adc
cmp
sub
decl
ljmp
mov
pushl
decl
lcall
xor
cmp
lods
pop
imul
lcall
mov
test
repnz
jmp
jmp
decl
jno
dec
xchg
mov
lods
jl
ljmp
pop
es
ljmp
jmp
insb
pop
fs
fnstenv
pop
lret
adc
adc
stos
cmp
sub
cmp
xchg
movsl
hlt
pop
xchg
lock
lods
incl
xlat
pop
mov
or
cmp
incl
mov
inc
stos
jmp
dec
hlt
mov
xor
add
mov
call
cs
jmp
incl
call
push
push
mov
out
int3
jno
decl
push
pushl
ljmp
dec
sti
outsl
dec
ja
or
das
dec
test
xor
call
add
iret
add
dec
mov
add
mov
pushl
fldenv
mov
mov
sarl
stc
rcrb
shll
int3
adc
cmp
decl
add
jl
sub
xchg
decl
movsb
push
fs
jmp
inc
inc
mov
incl
cmp
mov
add
and
jmp
pop
jmp
lahf
stos
pushl
and
scas
fisubl
mov
pop
daa
dec
mov
ljmp
jmp
inc
neg
dec
fwait
pop
bound
cwtl
xchg
jo
daa
mov
aaa
cltd
or
call
add
out
adc
cli
or
incl
enter
push
incl
jmp
lret
or
cli
and
int
cmp
xchg
adc
adc
jne
iret
jecxz
popa
add
sbb
jmp
jne
xchg
stc
dec
cld
int
mov
inc
lcall
mov
pop
inc
iret
movsb
lcall
mov
mov
add
mov
sub
incl
adc
xor
add
lret
lcall
jmp
decl
divl
jmp
lret
cmp
mov
pushl
test
jmp
add
shrl
call
in
cmpsl
inc
aaa
pop
inc
mov
stos
ljmp
jp
fadds
pop
pop
cs
jmp
push
push
stc
push
jmp
add
xor
call
push
movsb
push
stos
inc
pop
push
data16
ja
outsl
flds
cmp
dec
bound
incl
insb
jmp
fisubl
or
jae
decl
inc
std
jp
sahf
test
jmp
incl
push
fs
xor
lcall
movsl
stos
outsl
popf
rorb
push
adc
cmp
pushl
adc
pushl
or
jmp
pop
inc
or
pop
and
and
call
shll
cli
jg
sbb
push
mov
dec
repnz
push
push
xor
push
push
aad
scas
lcall
push
mov
in
add
dec
ds
push
dec
cmp
jmp
inc
or
dec
inc
or
jmp
incl
daa
ret
dec
mov
pop
iret
hlt
dec
or
fs
ss
decl
ljmp
rclb
mov
jmp
imul
loope
xor
repnz
sbb
jmp
xchg
fisttpl
adcl
out
and
call
rcl
push
fcmovb
or
inc
mov
push
adc
cmp
decl
xchg
add
clc
decb
cmc
imul
aad
jnp
cmpsl
fidivrl
hlt
push
lock
divl
popf
xor
adc
adc
mov
xchg
dec
mov
push
lret
push
cmp
pop
xchg
or
inc
pop
test
xor
mov
or
dec
mov
call
mov
jmp
jle
mov
ss
jle
decl
daa
push
dec
dec
mov
inc
lea
dec
pushf
out
xchg
lret
decl
dec
mov
icebp
pushf
test
pushl
xlat
add
test
std
test
fistps
jbe
cmp
fiadds
or
pushl
testb
or
sbb
cmp
call
inc
mov
or
lcall
dec
sub
xor
sbb
jbe
jae
jnp
jo
jb
dec
lock
cmp
call
push
mov
cmp
and
decl
mull
pop
ds
in
cmc
xchg
stc
mov
inc
mov
leave
gs
incl
stc
mov
push
into
pop
push
adc
incl
fistpll
sub
inc
adc
outsb
inc
sahf
movsl
ror
xchg
jmp
inc
leave
daa
add
and
jl
ja
mov
dec
mov
lcall
stc
jno
jle
negl
das
cmp
push
call
dec
and
ljmp
decl
xor
leave
xor
jl
push
mov
incl
clc
ljmp
iret
adc
jno
call
inc
cmp
int
adc
add
ret
fsubrl
aam
cvtps2pi
das
cmp
ljmp
enter
call
into
xor
lods
call
imull
std
enter
scas
daa
mov
jmp
mov
ljmp
incl
call
mov
stc
in
lret
ja
or
jmp
fsubrs
push
sbb
fsubrp
dec
sub
jg
mov
out
js
decl
mov
cmp
inc
jne
decl
cld
ret
test
mov
or
decl
ljmp
femms
lcall
inc
inc
mov
lret
loope
sub
jmp
lret
xlat
enter
xor
fldt
push
xor
flds
xor
cmp
insl
sti
jae
jmp
jae
pop
movsl
lea
inc
out
je,pt
ljmp
inc
sub
out
jmp
push
mov
push
xchg
mov
mov
jle
push
das
sub
fsubrs
popa
sbb
jp
test
cmp
jl
push
mov
pushl
mov
call
scas
jo
idivb
pushl
sbb
aam
lods
dec
and
pushl
push
sub
loope
and
incl
lahf
lcall
cmp
xchg
jp
mov
xchg
jns
xchg
popa
fwait
testl
ficompl
adc
movsb
ljmp
out
xor
inc
and
call
out
scas
lcall
dec
inc
or
cmc
leave
mov
ljmp
xchg
mov
ljmp
daa
mov
and
fmull
incl
inc
loopne
icebp
mov
pushl
mov
ljmp
mov
mov
std
pop
pusha
cmp
jge
cmp
xor
fdivl
push
adc
or
jae
mov
lods
mov
pushl
pushl
call
cli
es
jmp
add
incl
decl
pop
add
call
decl
jmp
xchg
xor
mov
push
inc
leave
xor
adc
pop
inc
into
and
jmp
call
cs
lcall
fs
cmp
pushf
sahf
mov
decl
dec
repnz
add
mov
xchg
jmp
lcall
incl
sub
pushl
mov
call
push
mov
call
cld
mov
pushl
fmull
shrb
mov
shlb
cmp
sarb
mov
jle
jmp
pusha
push
call
ss
fcomps
in
iret
mov
call
clc
jmp
mov
fadds
lcall
mov
daa
imul
mov
add
jmp
fimull
and
lcall
xor
pop
fsubr
cmp
incl
int3
mov
push
dec
cmp
fstpt
xor
icebp
push
ret
jb
loop
ja
in
lret
mov
mov
call
or
jge
xchg
stc
jmp
jmp
icebp
imul
faddl
inc
bound
ret
dec
call
xchg
mov
mov
incl
int
rcrb
test
mov
shll
xor
shlb
ss
ljmp
mov
cmp
call
call
cli
movsl
push
addl
incl
call
add
ljmp
aam
jo
clc
add
dec
pop
cmp
cli
test
in
loope
inc
add
push
inc
mov
cmp
xor
aam
ficomps
std
mov
mov
incl
psubsw
adcl
pop
out
mov
inc
stos
jmp
cmp
adc
js
lods
fsubl
call
jl
jmp
cmp
xor
and
aas
adc
ss
cmp
lret
fcmovnbe
ja
pop
cmp
xchg
aad
lret
loope
rcll
jmp
push
or
incl
fcmove
sub
mov
pop
dec
xchg
add
dec
mov
mov
scas
ljmp
ficompl
lahf
jmp
stos
incl
lcall
pop
xchg
daa
add
jns
mov
ljmp
push
decl
roll
enter
push
adc
inc
xor
lcall
add
lcall
stc
ja
pop
es
pushl
push
ss
cltd
inc
jb
daa
xchg
xlat
into
int3
aaa
jb
lds
aam
out
pop
cmp
ljmp
lcall
lods
decl
daa
je
stc
mov
xchg
inc
int3
inc
pop
pop
fstl
mov
jmp
cmp
jmp
daa
cld
vpsubd
sbb
cwtl
sub
decl
xchg
out
jnp
xchg
enter
push
decl
ficoml
or
cmp
lret
jo
xchg
jl
cwtl
mov
jge
pop
dec
or
lcall
dec
inc
mov
cmp
decl
jmp
add
pushl
mov
call
jmp
xor
sti
add
ljmp
call
lahf
jl
jae
call
cmp
testb
decl
es
call
out
adc
cmp
xlat
in
lcall
lods
sarb
es
jns
pop
inc
push
xlat
push
cmp
scas
mov
ljmp
mov
ja
xor
into
jmp
insl
dec
dec
push
ds
test
lcall
aad
test
jmp
outsb
mov
jp
or
inc
push
pop
xchg
lcall
or
pushl
jno
shrb
jmp
incl
call
dec
sbb
ljmp
mov
stos
call
cmovg
dec
test
jmp
lcall
stos
lcall
test
and
jmp
mov
jne
ljmp
incb
call
inc
ror
stos
mov
dec
cmpsl
sbb
cs
fsubrp
mov
jmp
mov
fucomip
mov
mov
sub
out
add
pushl
ljmp
out
ss
mov
adc
pop
fs
cmp
mulps
scas
call
mov
xchg
push
or
pushl
pop
and
jmp
decl
or
es
call
pushf
inc
dec
mov
xchg
lds
mov
sbb
pushl
xchg
jle
sahf
shrl
dec
cwtl
mov
or
jmp
movsb
jmp
pop
ficoml
ret
mov
dec
jle
test
roll
incl
inc
arpl
shrl
lods
inc
test
fdivrs
push
mov
add
lcall
adc
push
cmp
pushl
decl
push
lcall
xor
repnz
lcall
ljmp
bnd
sbb
jmp
fstp
xchg
and
decl
incl
decl
sti
mov
lcall
mov
add
and
movsb
decl
push
pop
cmp
jecxz
cmc
mov
ja
int3
mov
dec
pop
inc
mov
xchg
imul
cmp
jmp
and
incl
inc
cmp
icebp
xchg
ljmp
and
incl
inc
lret
ja
mov
jmp
jo
fsubp
into
pop
xchg
sub
cmp
in
pop
mov
jb
or
pushl
insl
pop
or
test
cli
fwait
mov
dec
mov
mov
call
pop
jbe
testl
ljmp
pushl
pop
xchg
dec
add
jmp
sahf
cwtl
popa
pop
jnp
incl
push
cli
lret
and
decl
mov
sbb
mov
adc
inc
dec
cmp
mov
aam
dec
sub
mov
inc
xchg
fisubrs
mov
sub
incl
mov
shrb
mov
in
fcompl
pushl
imul
out
fnstenv
jp
xor
sarl
repz
decl
cltd
mov
dec
pop
outsb
fdivrl
pusha
add
jmp
push
lock
pushl
or
cmp
in
decl
test
or
inc
mov
dec
pushl
jns
dec
testb
ljmp
test
or
imul
inc
fildll
pushl
imul
sbb
insb
lret
inc
cmpsb
dec
cmp
jle
ret
xchg
cmpsl
rolb
adc
lcall
jl
add
iret
dec
pusha
les
fsts
cli
pushf
das
pop
push
jge
in
push
incl
incl
loop
aad
dec
stc
mov
sbb
incl
ljmp
aaa
in
out
rorb
loopne
fisubs
add
cli
pop
pop
inc
aaa
stos
jmp
dec
xchg
pop
cli
enter
cmp
mov
rolb
fs
jmp
out
ljmp
sub
cld
adc
aaa
das
xchg
in
mov
lcall
push
jmp
popa
lcall
fimull
dec
inc
push
jmp
gs
movsl
repnz
scas
pushl
decl
pop
leave
mov
and
daa
lahf
jbe
or
pushl
js
test
scas
call
sub
jle
mov
pop
movl
daa
cltd
ret
inc
pop
pop
jle
jmp
out
push
std
lds
cmp
lcall
popf
cmp
scas
dec
jo
mov
scas
imull
cmp
movsb
lcall
pushl
pop
sub
fcoms
je
int
fldl
cld
push
aad
movl
in
lret
dec
jno
into
dec
fdivr
es
call
sbb
pushl
and
adc
mov
pushl
cmp
mov
and
jmp
inc
pushl
pushl
pop
in
in
fcoms
mov
stos
inc
mov
jmp
incl
inc
jle
mov
ret
cmp
sub
mov
cmp
pushl
jmp
loope
push
sub
call
add
call
push
incl
out
sub
pushl
es
ljmp
jecxz
imul
decl
ljmp
fadds
lcall
sbb
cmp
lcall
sbb
jecxz
rorb
in
jbe
and
fsubs
push
iret
aas
fmull
call
push
jae
lock
out
lcall
imul
add
lcall
fnstcw
push
push
ret
test
incl
jmp
rclb
push
mov
and
pushl
xchg
ljmp
pushl
call
pop
arpl
mov
clc
movsb
ljmp
decl
nop
xor
aam
jmp
daa
mov
add
aam
dec
dec
xor
mov
xchg
arpl
fisttpl
sub
pushl
out
xlat
inc
ret
jge
lahf
xor
nop
adc
sbb
fsubrl
call
fistpl
int
xchg
lock
sub
ljmp
xor
incl
hlt
mov
sub
call
inc
mov
aas
clc
mov
jmp
ljmp
inc
mov
jge
dec
mov
cltd
inc
cs
ljmp
cmp
pushl
popa
add
js
pop
push
or
push
jecxz
xlat
bnd
inc
xlat
sub
lahf
adc
mov
jl
jecxz
in
ljmp
xchg
push
pavgb
and
push
hlt
mov
push
pop
mov
daa
lods
movsl
sbb
je
dec
fmuls
sub
lcall
jmp
int
sbb
test
dec
mov
mov
mov
sbb
scas
pop
xchg
arpl
inc
loope
xor
in
push
pop
outsl
cmp
lcall
int3
test
lcall
mov
lret
or
sbb
sub
pushl
std
es
jmp
mov
ja
cmp
and
jmp
shll
xorl
inc
xchg
gs
enter
mov
in
xor
rorb
inc
popf
aaa
and
out
nop
cmpsb
mov
xor
lgs
or
incl
mov
cmp
dec
jg
xchg
loopne
or
aas
bound
lcall
lcall
jp
popf
shll
xchg
dec
insl
cmp
pushf
mov
dec
movl
jle
jle
xchg
rcr
xor
call
dec
mov
dec
stos
jb
jl
mov
push
decl
insb
mov
jg
fwait
lds
in
rorb
decl
clc
jg
mov
inc
or
and
sti
jl
loope
icebp
imul
incl
inc
cmc
mov
or
inc
shlb
loop
pushl
jl
adcl
call
fcompl
gs
jmp
dec
aaa
cmp
pop
je
inc
or
pop
and
call
cmp
ljmp
mov
mov
fdivrl
ljmp
jl
into
or
decl
enter
decl
ljmp
clc
xchg
and
mov
xchg
rcl
pop
insl
jno
mov
jmp
pushl
decl
xchg
movsb
decl
sub
mov
sti
movsl
icebp
cmp
xor
insb
or
fnsave
mov
imul
pop
and
lcall
add
ss
insl
shl
jae
aas
loope
into
jmp
call
xchg
in
insl
out
int3
arpl
inc
ljmp
sbb
cmp
push
mov
call
call
cs
jmp
pushl
incl
imul
or
in
jo
jg
add
call
imul
repnz
lcall
ljmp
call
push
mov
and
lods
jmp
dec
jmp
add
ljmp
xor
icebp
nop
arpl
jae
push
mov
out
incl
incl
jmp
decl
jp
jb
or
xchg
int
add
arpl
aaa
cmp
or
pushl
mov
lcall
xchg
test
cmp
adc
pop
pop
lret
inc
mov
mov
adc
lret
int3
popa
jns
aam
cmp
adc
inc
cmp
pop
jecxz
mov
cli
movsb
push
and
cli
lret
call
xor
cmpsl
fcomi
dec
outsb
add
cmp
test
dec
and
jmp
or
ljmp
jl
incl
jb
xchg
les
lock
call
jg
ret
push
cwtl
jnp
ljmp
out
dec
xchg
mov
jmp
call
or
pushl
inc
js
jecxz
aas
mov
dec
sti
cld
add
call
xchg
test
decl
xchg
fs
adc
push
or
cmp
ja
jne
jmp
or
decl
push
out
aaa
rolb
fdivr
inc
lea
decl
inc
or
jmp
push
test
lcall
jnp
cli
ror
decl
ljmp
in
lret
in
out
or
cmc
pop
cmc
cmp
jmp
je
je
outsb
jnp
nop
cld
and
dec
ds
lea
call
ret
jmp
cli
inc
and
fs
inc
mov
cmp
cwtl
ret
adc
adcl
mov
lds
je
daa
ret
ss
ret
push
or
in
xchg
je
inc
aaa
outsb
dec
cwtl
mov
ljmp
mov
or
cld
push
in
rcll
sub
mov
mov
ljmp
lea
call
xor
popf
pop
inc
mov
adc
call
pop
rcrb
ljmp
pushl
lahf
adc
jb
enter
adc
mov
ljmp
lcall
cli
and
ljmp
jo
outsb
js
fdivl
jmp
pushl
stos
cmp
enter
pushl
add
call
mov
mov
mov
adc
incl
call
inc
push
lods
popa
sub
dec
mov
sbb
notl
incl
imul
inc
pop
push
dec
lahf
push
and
jmp
es
decl
outsl
fs
ljmp
dec
mov
les
cmpsb
ljmp
arpl
cmpsb
dec
or
call
ljmp
push
incl
adc
jmp
cmp
incl
decl
ljmp
mov
add
pushl
call
jge
sti
stos
incl
sbb
ss
subl
out
ss
inc
cs
decl
xchg
fiadds
ljmp
inc
mov
call
shll
xchg
ljmp
push
outsl
dec
sub
inc
imulb
dec
jb
lret
rorl
call
scas
jmp
mov
mov
call
iret
lcall
cld
bound
js
lcall
mov
pushl
inc
ljmp
pushl
insb
cmpsl
repz
ds
cmc
dec
xchg
cmp
mov
fsubrl
stos
lcall
sub
jmp
xchg
jmp
or
incl
bound
cmp
jmp
mov
jmp
mov
mov
pushl
mov
jbe
out
cmp
dec
stos
push
outsb
mov
dec
mov
jge
stc
popa
sbb
decl
lcall
dec
xor
and
mov
out
lret
movsl
xchg
xlat
push
dec
ds
in
xchg
fidivrs
clc
outsl
cmp
lcall
call
aas
mov
sbb
call
enter
pop
rol
and
pop
std
aad
rcrb
lods
incl
push
cmp
in
adc
and
jmp
sti
imul
decl
sub
insb
inc
and
ljmp
or
loope
shlb
mov
pushl
cmp
iret
cmc
cmpsl
stos
fmull
and
decl
jmp
dec
clc
jmp
int
cs
lcall
lea
mov
adc
mov
lods
pushl
cmc
ret
decl
pop
fistpl
cmpsl
test
mov
mov
dec
ret
std
adc
cmp
pop
sbb
add
add
sbb
cmp
cli
jl
inc
dec
mov
push
inc
fwait
sahf
inc
int
mov
aam
sti
mov
ljmp
cltd
dec
stos
push
mov
dec
fs
insl
lahf
adc
incl
xor
les
xor
inc
jns
js
movsl
pop
xor
pushf
mov
out
cli
cmp
mov
mov
push
add
pushl
mov
call
jecxz
stos
push
fdivs
xor
lcall
sahf
in
jns
aad
in
incl
sbb
pushl
or
lcall
inc
mov
cli
cli
roll
loopne
mov
cmp
ljmp
sahf
aas
outsl
mov
jbe
push
ror
sub
pushl
mov
cld
into
lahf
lods
fwait
push
xor
cmp
aam
jge
icebp
mov
dec
sbb
es
ljmp
mov
jns
ds
dec
sar
xchg
sarb
push
and
dec
imul
pop
movsl
sbb
outsb
push
mov
mov
popf
push
jle
cli
mov
lcall
jmp
jmp
les
fwait
ds
push
fs
sub
push
cli
loope
lcall
and
ljmp
fnstenv
and
jmp
jecxz
jo
push
jmp
inc
clc
xchg
ja
incl
and
clc
mov
mov
fidivl
cs
pushl
add
lcall
call
and
shlb
add
ljmp
incl
cmp
dec
outsb
mov
pushl
sbb
jecxz
jg
insl
stos
jmp
pop
cmc
and
ret
repz
insl
xchg
test
decl
inc
loope
xor
out
lock
decl
inc
mov
bound
std
mov
pop
inc
sub
jmp
push
leave
das
fidivrs
ds
push
push
cmpsl
mov
incl
testb
inc
int
decl
mov
mov
in
pop
and
sti
sub
jmp
push
sti
cmp
clc
testb
jp
incl
call
leave
loopne
fists
xor
cmc
ss
cld
rclb
dec
iret
mov
mov
cmp
jae
jmp
gs
or
incl
cwtl
jg
and
ljmp
scas
decl
into
mov
xchg
push
add
dec
pop
mov
out
add
or
in
cmp
outsb
fwait
xor
add
lcall
es
call
sub
mov
pushl
sahf
fmull
arpl
or
xor
lcall
adc
js
lock
sub
dec
fists
in
jbe
ljmp
incl
fs
sahf
jns
pushl
dec
cld
shl
fmul
mov
jl
jge
cmp
xor
cmpsl
dec
jae
ret
push
dec
jmp
mov
pop
add
ljmp
incl
outsb
and
decl
cmc
icebp
inc
cmp
bound
call
cmp
adc
or
jmp
cltd
decb
jmp
pushl
fisubl
lcall
add
dec
inc
call
xor
decl
sub
push
sub
pushl
ja
ficoml
pop
pop
addl
mov
aas
mov
inc
xlat
lea
and
push
sbb
aas
ror
clc
sbb
insb
lock
dec
xor
push
push
movsb
jg
pusha
addl
dec
call
ljmp
ljmp
jb
cltd
in
jae
or
outsb
jmp
pop
mov
jmp
dec
add
call
cmp
iret
in
jecxz
cmpl
pushl
insl
negl
inc
scas
xchg
push
or
xchg
pop
inc
shlb
sub
pushl
nop
xchg
imul
xchg
cwtl
xor
xchg
push
xchg
cmp
btc
jge
mov
jmp
sbb
add
ss
jnp
inc
push
aam
mov
jbe
hlt
popa
mov
push
push
fcompl
xchg
jp
decl
incl
call
fnsave
xor
adc
add
jmp
and
shl
arpl
es
decl
cld
jge
dec
ljmp
into
jne
mov
ljmp
fsubrl
jle
negl
pushl
xchg
les
lcall
dec
push
in
lret
daa
cmp
incl
add
mov
dec
xchg
cmpsl
mov
mov
aas
jns
xchg
sub
jmp
and
ljmp
sbb
pushl
fs
cmp
sahf
cmp
or
pushl
call
icebp
inc
push
lret
and
pushl
pop
movsb
in
pop
or
jge
addps
lcall
push
cmp
scas
pushl
movsb
call
lods
out
lret
or
ljmp
stos
jb
repz
repnz
push
movsb
jle
dec
sbb
dec
sbb
jge
pop
xorl
test
out
das
inc
lret
rclb
xchg
push
sti
adc
imull
mov
decl
scas
adc
pop
sub
adc
repz
aaa
cmpsb
pushl
jecxz
out
jb
xchg
mov
mov
ljmp
xchg
push
cmp
cmp
call
pusha
addr16
adc
push
hlt
aad
out
add
push
lock
jmp
jae
pop
xchg
inc
add
or
jmp
pushl
cltd
iret
jnp
fmuls
mov
sub
ljmp
cli
subl
roll
lods
pushl
sbb
dec
jecxz
mov
fmul
repnz
fmull
repnz
mov
lret
xor
mov
fcmovbe
subl
mov
call
stos
aas
mov
out
push
fistps
insb
das
call
sarl
lods
inc
fiaddl
fcompl
adc
call
neg
out
iret
dec
lret
pop
int
sbb
jmp
cmp
lcall
dec
in
pop
es
cltd
mov
ljmp
add
or
mov
ja
call
ja
lcall
jecxz
sub
decl
out
and
cmc
insb
mov
pushl
jo
out
stos
incl
fnstenv
in
push
lock
sti
sbb
incl
cmp
ljmp
sarl
mov
mov
das
xchg
shl
xor
sbb
cmc
pop
dec
add
ljmp
ljmp
jg
dec
mov
lcall
adc
push
pop
sbb
mov
fldl
rorb
add
jl
dec
push
decl
sbb
pop
dec
fstl
pushl
loopne
lahf
jge
add
dec
pop
ffreep
loopne
sub
or
decl
xchg
jnp
mov
mov
adc
incl
jno
lret
mov
xchg
and
ljmp
xor
ljmp
call
jmp
jo
negl
into
jno
and
pushl
mov
stos
call
inc
adc
mov
jo
out
out
decl
test
decl
lods
ffree
ds
lcall
stos
lcall
shll
incl
ficoml
scas
call
jecxz
std
outsb
mov
jmp
out
cmpsb
fsubrl
ret
xor
pushl
rcrl
and
push
pop
add
addr16
gs
cwtl
xchg
and
incl
inc
adc
jmp
sub
ljmp
mov
dec
mov
pushl
mov
cmp
test
xchg
out
mov
push
ja
adc
lcall
test
decl
ljmp
cmp
lcall
and
scas
incl
inc
sub
or
jns
dec
cmp
jmp
jg
inc
lret
test
incl
add
incl
insb
ss
ljmp
cli
pop
cmp
cmp
pushl
pushl
jnp
das
pop
sbb
bound
cmc
mov
xchg
ds
aam
ljmp
sub
or
dec
inc
mov
incl
adc
xor
in
xor
adc
pop
icebp
xor
in
jmp
mov
jo
leave
sub
std
mov
ret
mov
push
lret
cmpsl
mov
out
les
dec
jbe
adc
loopne
pop
insb
sbb
ret
dec
mov
jae
dec
das
js
lods
data16
push
cmp
jp
sbb
inc
jmp
jnp
call
lcall
xchg
dec
mov
inc
fwait
sub
inc
mov
ds
icebp
sahf
sub
push
mov
mov
and
aas
cltd
dec
mov
jns
jnp
sub
cmp
pushl
jmp
push
incl
call
pushl
push
pushl
sbb
and
enter
lcall
push
and
call
mov
jmp
or
mov
fstpt
add
sbb
stos
cmp
sti
shll
mov
loop
notb
jno
ret
decl
cmp
cmc
iret
jo
and
call
sbb
and
lcall
in
mov
in
lds
sbb
dec
jns
int
inc
hlt
mov
test
in
fstps
pop
add
jmp
call
std
sbb
adc
gs
jmp
mov
cmp
jmp
nop
movsb
incl
mov
cmp
decl
mov
call
pop
or
ljmp
rcll
mov
jl
aam
fnstsw
jp
and
jno
aas
ds
inc
lret
xchg
cmp
loop
and
call
cmp
cld
les
movsb
ljmp
incl
lahf
aam
repnz
dec
mov
imul
fimull
decl
out
scas
sbb
inc
pop
lods
push
popa
mov
adc
mov
sbb
arpl
pop
sub
incl
pop
add
mov
ljmp
stc
imul
adc
ljmp
test
or
pop
dec
add
pop
outsl
repz
push
xchg
sub
push
jbe
mov
shll
inc
xchg
lret
mov
xor
inc
xor
dec
cmp
pushl
enter
decl
lret
call
cli
dec
dec
push
fsubs
addr16
mov
idiv
dec
outsb
jl
aas
mov
ss
push
ljmp
or
push
popf
cmpsb
jmp
xchg
cs
out
in
ljmp
imul
fldt
lods
lcall
mov
ljmp
xlat
fbld
adc
fwait
cmpl
popa
out
bound
jae
pop
lea
call
incl
jmp
mov
call
mov
inc
lods
js
push
decl
outsl
clc
sbb
mov
jmp
jl
jnp
pushf
and
cmp
mov
lock
push
outsb
dec
and
lcall
imul
xor
add
pop
dec
inc
dec
fs
mov
jecxz
test
xchg
mov
jmp
lcall
mov
decl
push
cwtl
mov
inc
fstpl
lcall
stc
cmp
xor
repz
xor
inc
jp
push
pop
addr16
std
cmp
decb
lods
xor
jmp
adc
jge
ja
out
dec
jmp
repnz
test
ljmp
jp
ret
fcomps
adc
lods
ljmp
mov
ljmp
stos
fcom
aad
icebp
lods
cmpsl
int
dec
aaa
sub
ljmp
jmp
insb
push
out
mov
jge
adc
mov
pop
fucomp
cmpsl
arpl
ljmp
pushl
inc
add
mov
push
aam
test
and
dec
xorl
xchg
add
xchg
cli
loop
dec
aas
pop
aaa
and
call
faddp
sub
xchg
ds
mov
pushl
adc
jmp
dec
pop
and
pop
pushf
scas
incl
ljmp
daa
data16
inc
inc
testb
cld
fbstp
cmp
dec
jbe
lcall
jecxz
int3
scas
mov
or
in
jle
jl
pop
push
je,pt
sub
ljmp
ljmp
or
jp
or
ds
popfw
push
cmpsb
pushl
lcall
inc
pop
ljmp
or
jmp
movsl
push
and
incl
inc
fisttps
cmp
incl
pop
pop
and
inc
push
ljmp
cmpsl
fisubrs
add
aaa
daa
out
fcmovnb
push
and
jmp
xlat
mov
cmp
dec
cli
add
mov
incl
cmpsb
pushl
in
sub
adc
jnp
inc
dec
adc
cmp
jmp
ljmp
pop
stos
add
lcall
inc
mov
loope
sbb
shrl
push
inc
mov
push
repnz
push
jl
dec
test
cltd
xchg
test
jmp
decl
add
or
or
mov
xchg
mov
push
xchg
mov
aaa
jmp
dec
sbb
ljmp
or
call
mov
dec
mov
mov
aam
jbe
adc
into
in
iret
shrb
fdivl
sahf
ss
incl
add
fistps
es
jmp
movsb
lcall
add
in
sbb
test
pop
ret
or
call
daa
out
ljmp
insb
sub
outsl
imul
sbb
xlat
cmpsl
inc
and
pushl
fucomi
xchg
loop
xor
push
inc
dec
lahf
test
fmuls
cs
pushl
repnz
lahf
push
mov
xor
and
cmp
decl
lcall
imul
jmp
cmp
test
dec
pop
cmp
or
lods
jg
sub
inc
jmp
sbb
jmp
jl
adc
mov
jl
xlat
les
dec
mov
decl
cmc
imul
pushl
ret
call
lcall
imul
scas
ljmp
jge
in
cmp
ret
and
ljmp
incl
xor
int
cmp
fisubrl
ljmp
incl
call
cli
cs
jmp
adc
out
cmpsb
decl
ljmp
dec
outsb
fdivl
adc
lds
sbb
into
call
mov
out
lods
add
out
lea
sti
sub
sar
mov
fistps
ret
jno
dec
cmp
decl
mov
add
cmovs
incl
incl
jl
mov
inc
repz
nop
cmp
call
imul
push
imul
lahf
inc
adc
call
lcall
lahf
xchg
rcl
mov
mov
fwait
push
sbb
jmp
stos
call
testb
call
jecxz
or
jmp
ret
mov
loope
sbb
out
jnp
test
pushl
mov
xor
push
incl
ljmp
sub
jp
fists
call
mov
ljmp
fimull
mov
call
jae
sbb
push
lcall
sub
lcall
fstpl
call
push
mov
imul
jmp
mov
cwtl
xchg
dec
shrb
jb
xchg
push
mov
xor
push
and
jmp
lea
les
call
dec
mov
cmp
ljmp
dec
cmp
mov
dec
pcmpgtb
jp
pop
movsb
mov
cli
inc
cwtl
inc
push
jno
daa
xchg
and
push
dec
lret
jecxz
ffreep
jb
out
mov
hlt
shl
mov
lcall
insl
dec
insl
jae
pushf
and
lcall
das
repz
into
jbe
push
push
adc
jge
push
cli
mov
pop
xor
inc
push
mov
decl
sub
les
dec
movsb
pushl
lock
dec
mov
incl
lds
movsl
mov
adc
decl
les
cltd
push
sbb
inc
jmp
mov
push
ss
loopne
xor
stc
or
decl
fsubrp
jo
lret
ds
outsb
out
sbb
cmp
std
jne
cmp
xchg
daa
sbb
imul
inc
push
pushl
dec
jp
mov
incl
incl
inc
sbb
push
jo
lcall
jmp
mov
inc
adc
sbb
pop
inc
stos
jb
xor
pushl
out
mov
push
add
cmpsb
inc
call
test
decl
push
cltd
jle
lcall
in
and
jmp
fwait
jecxz
adc
mov
push
out
cld
inc
cmc
adc
fistps
add
jnp
push
mov
decl
pushl
inc
lea
xchg
ljmp
das
dec
push
jb
inc
lods
lods
decl
call
jbe
dec
ja
ljmp
or
ficomps
in
pushf
aas
xchg
jl
dec
mov
inc
mov
push
mov
inc
rcrb
lret
sub
jmp
call
dec
dec
pop
jle
fdivs
not
or
call
cmp
sub
cmp
jmp
xchg
movsb
lcall
incl
jmp
das
inc
dec
mov
pushl
sub
jmp
pushl
sub
xor
arpl
incl
jnp
mov
adc
decl
lcall
je
aam
mov
mov
push
loope
aaa
scas
es
incl
jmp
pop
pop
cmp
jmp
jno
data16
inc
loopne
push
jmp
pop
lods
dec
inc
push
xor
sub
incl
fists
adc
inc
sbb
inc
icebp
push
jecxz
fisubs
jmp
inc
jge
lea
jmp
pushl
sbb
pop
pop
movsl
mov
jmp
push
jmp
ljmp
enter
inc
aam
mov
inc
xor
call
sar
push
fcoml
sarb
in
addr16
xchg
push
incl
fs
jmp
jecxz
ds
xchg
jecxz
xchg
loop
pushf
mov
cmp
call
or
pushl
call
xchg
and
in
lds
dec
jns
inc
rcrb
ss
lcall
push
ljmp
call
lret
cmp
xor
or
cmp
cmp
mov
js
mull
imul
add
jg
or
jb
push
add
es
lcall
out
dec
daa
inc
push
pop
dec
xor
incl
bound
fidivl
jecxz
inc
mov
dec
sbb
incl
pop
ret
xchg
mov
rolb
mov
fcoml
mov
fdivrl
inc
in
out
pop
rcll
int
decl
push
xchg
cmp
cld
mov
incl
call
ja
sti
movsl
lods
cmp
cmp
fs
idiv
pop
xlat
xchg
jae
outsl
sbb
jmp
cmp
or
inc
loopne
sbb
inc
xor
ss
xchg
xlat
mov
das
push
jge
les
mov
call
xor
rorl
cmc
jl
xor
cmc
mov
lcall
pop
add
push
xlat
repnz
adc
push
rcl
je
fistpl
sbb
mov
jo
dec
lret
dec
sbb
popa
popf
js
push
add
jge
pop
fdivs
mov
mov
in
xchg
cli
mov
lcall
arpl
clc
ds
sub
ljmp
lods
pushl
lcall
mov
jmp
mov
or
mov
jg
movsl
mov
and
cld
jne
jl
dec
pushl
jg
lcall
xchg
call
mov
out
outsb
into
add
jo
pop
test
lock
jno
fmull
adc
mov
pushl
ljmp
push
pushl
adc
movsl
pop
xchg
call
mov
call
aas
and
dec
es
ljmp
decl
enter
dec
sahf
xor
call
hlt
inc
js
xor
push
push
call
adc
xlat
cwtl
dec
pop
mov
incl
loop
jb
pop
sub
call
xlat
adc
sub
aaa
js
ret
inc
xchg
sub
sbb
es
call
or
pop
mov
scas
lret
fmull
sub
fstp
mov
rcrb
bound
pop
in
xchg
ret
mov
ss
inc
aam
out
sti
push
sub
ljmp
mov
cmp
add
jmp
sub
icebp
mov
pushl
sub
lods
add
pop
je
jns
ljmp
jmp
push
add
jne
push
mov
movsl
fstpl
or
decl
pushl
jbe
in
pop
xchg
push
movsb
call
cmc
jns
xchg
cs
dec
shll
int
test
dec
dec
addr16
cmp
cltd
movsb
mov
decl
cmp
push
mov
push
mov
and
cmp
int3
test
lcall
jbe
loopne
dec
or
incl
rclb
push
pop
jge
xor
les
pop
inc
int3
jp
rcl
les
sbb
cli
ret
popf
ss
inc
imul
push
lock
push
incl
fs
sbb
dec
cmp
sbb
xor
cli
lods
lcall
movsb
aas
icebp
pop
mov
lcall
or
ljmp
repnz
mov
xchg
test
incl
inc
aaa
clc
insl
movsl
movsl
pop
jmp
daa
leave
and
decl
cmp
mov
jmp
xor
ds
mov
mov
mov
jmp
push
adc
xor
incl
pushf
jae
gs
incl
into
imul
loop
psllq
std
outsl
and
dec
sbb
inc
mov
fcmovne
pop
xchg
decl
jmp
js
imul
imul
dec
icebp
lret
sub
in
out
lock
test
cmp
lcall
sbb
mov
xor
or
rcll
add
jl
out
sub
dec
hlt
cmp
inc
loope
inc
pop
fucomip
lds
jmp
pushl
pop
dec
fcomi
std
xchg
xchg
mov
aas
in
dec
pop
icebp
add
fisttpl
cmp
sub
fwait
inc
mov
inc
fcmovnu
jns
push
rcl
pusha
popf
jg
insb
movsb
push
aas
mov
incl
pop
fs
mov
test
mov
das
es
jmp
sahf
pop
sar
add
adc
lcall
insl
cltd
mov
add
push
xchg
lock
clc
pop
out
repz
pushl
imul
xlat
pop
xchg
cwtl
fcompl
stos
decl
and
push
decl
jmp
push
jecxz
cli
subl
fildll
adc
das
popf
and
ror
inc
dec
adc
lcall
call
and
pushl
dec
sub
call
lcall
in
iret
movsl
lock
addr16
incl
inc
arpl
fisubrl
loop
xor
mov
mov
add
xor
pushl
mov
call
outsl
insl
adc
push
or
incl
lds
call
sbb
inc
inc
imul
lea
sbb
cmpsb
incl
jmp
cmp
sti
push
or
hlt
add
dec
xor
clc
mov
lcall
sbbl
push
mov
xor
jae
test
call
decl
enter
ljmp
imul
dec
and
inc
cmpsl
jbe
mov
decl
decl
fstpt
jecxz
jae
cmp
inc
mov
jmp
cmp
push
ljmp
cmp
popa
hlt
jo
cmp
xchg
call
jecxz
call
mov
jmp
inc
lret
or
jmp
sub
jne
cmp
ljmp
jge
mov
decl
mov
cmp
dec
pop
sub
incl
xchg
clc
lds
pop
lea
and
incl
lcall
int3
push
cmp
pushl
mov
push
mov
dec
or
jmp
or
stos
xor
call
popa
dec
insl
movsl
sbb
jae
xlat
jne
mov
rcrl
clc
notl
jns
jp
rcr
aam
mov
sbb
add
fsubl
add
decl
ljmp
aaa
xor
addr16
lea
xorl
aaa
sbb
sub
ljmp
lea
pop
mov
inc
jge
arpl
push
loop
daa
mov
sbb
hlt
imul
decl
lcall
rcr
call
mov
loop
mov
pop
xchg
clc
pushf
pop
xor
jbe
push
cmp
mov
test
decl
cmp
jo
das
xchg
outsb
adc
rolb
out
adc
inc
mov
dec
inc
inc
jne
adc
decl
jae
idiv
pop
xchg
pushf
jmp
sbb
push
or
jmp
jle
adc
xchg
int
shr
test
push
inc
push
pushl
jmp
mov
sbb
in
roll
decl
ljmp
rcl
pop
bound
fcmovbe
popa
cmc
push
loopne
adc
ja
xchg
imul
fsub
xchg
push
int3
push
adc
lods
jns
xchg
std
cmp
sar
outsl
fwait
aad
or
jbe
test
pop
scas
jmp
pop
sbb
cmc
adc
xchg
loop
pop
mov
decl
lock
sbb
aaa
sbb
adc
decl
xchg
movsl
push
in
or
incl
cmp
mov
mov
in
call
outsb
sbb
add
decl
jae
xor
imul
jmp
es
call
testb
std
mov
scas
dec
sbb
mov
ljmp
in
outsb
adc
call
shl
mov
dec
cmpsl
mov
xchg
repz
decl
decl
pop
inc
out
jge
pop
or
push
cmc
jmp
dec
pop
pusha
icebp
flds
mov
cmp
ljmp
ss
loop
mov
lcall
and
lcall
xor
enter
jmp
pop
int
mov
dec
aas
rorl
fbld
cmp
lcall
push
ret
invd
jmp
lods
fldcw
sti
es
push
je
mov
incb
pop
lret
inc
call
decl
call
test
cmp
aaa
mov
jmp
and
jmp
outsb
pop
pop
and
jmp
gs
and
incl
adc
repnz
add
aad
mov
jmp
out
in
push
inc
sbb
pop
repnz
jmp
bound
aas
in
dec
jmp
mov
xor
jmp
out
adc
push
xor
jbe
xchg
in
dec
mov
and
scas
clc
repz
movsb
incl
incl
mov
push
in
sbb
push
jl
out
fs
mov
cld
jle
in
insb
mov
insl
nop
stos
inc
mov
popf
xchg
test
mov
rol
push
sbb
inc
adc
jmp
jno
pop
jae
adc
pop
out
cli
shl
scas
jmp
add
incl
pushl
or
lcall
jg
jb
decl
cmp
ds
adc
incl
call
xchg
pop
or
jo
cmp
push
mov
js
add
call
in
mov
mov
lret
lcall
jl
andl
cltd
adc
lds
rep
arpl
lahf
imul
pushl
xor
lea
add
inc
xchg
sub
in
sbb
enter
fists
fisttpl
sub
ljmp
lret
lahf
xorl
imul
and
jb
cmp
shr
jmp
inc
icebp
push
pop
leave
pop
pop
aaa
push
incl
lcall
mov
mov
jmp
push
mov
incl
ljmp
mov
jp
push
xchg
mov
lcall
jmp
adc
jne
int
das
mov
add
push
popf
inc
scas
and
mov
and
in
pop
adc
adc
sbb
adc
ljmp
jl
decl
lock
mov
pushl
lcall
fimull
mov
pop
add
pop
cltd
dec
sti
jmp
sahf
cmp
add
inc
xchg
mov
or
mov
jmp
pop
loopne
push
mov
aas
sbb
cltd
cmc
lret
sbb
mov
cld
jns
hlt
xchg
decl
decl
mov
push
cmc
aam
or
std
mov
xchg
inc
jmp
dec
shrl
gs
mov
ror
push
dec
jne
lock
add
inc
bound
decl
decl
sub
xchg
lds
push
sub
incl
lret
add
lcall
es
lcall
ds
incl
iret
cltd
stc
fs
jl
sti
adc
stc
push
mov
cmp
call
and
aas
test
dec
xor
sbb
mov
cmpsl
add
jmp
cmc
xchg
dec
xchg
mov
lret
pushl
nop
popf
daa
sbb
push
incl
push
jbe
inc
push
scas
fnstsw
cmp
imul
insl
ljmp
insb
xor
jle
ja
mov
push
jge
pop
ja
aaa
push
pushl
sub
cmp
cmpsb
cmp
or
movsl
mov
mov
in
pop
ds
cmp
adc
pushf
sbb
fdivs
mov
test
ja
mov
add
call
sub
ljmp
push
pop
fs
ljmp
decl
add
insb
int3
dec
jne
mov
or
aas
in
push
rolb
mov
ljmp
les
xor
mov
mov
push
ja
push
add
jmp
je
pop
je
sti
sbb
in
and
mov
cltd
mov
jg
ljmp
decl
out
dec
mov
sbb
call
push
sub
decl
fucomi
pop
sub
mov
and
incl
setbe
lcall
call
push
inc
bound
sub
lcall
mov
lds
mov
decl
or
decl
fcos
xor
cmp
pushl
mov
cmp
mov
jmp
inc
mov
incl
jg
mov
call
pop
lods
sahf
out
je
pop
sub
cmp
dec
pop
cmp
inc
es
decl
out
in
gs
cmp
das
mov
lcall
idivl
push
mov
cld
dec
push
sub
jmp
mov
bound
ljmp
ljmp
call
and
ljmp
pushl
add
jmp
add
or
into
enter
call
mov
inc
test
incl
incl
ljmp
mov
cmp
incl
push
push
decl
inc
cmp
mov
call
sub
dec
push
imul
in
pop
lds
jne
sub
dec
xor
orl
or
ljmp
call
vmovsd
push
sahf
adc
jmp
pop
cmp
and
incl
xchg
pusha
inc
xorl
into
mov
pushl
ja
mov
xchg
mov
mov
lcall
iret
mov
incl
cld
lea
fsubr
inc
sbb
lret
jecxz
pop
jmp
shll
dec
push
mov
inc
xor
insb
outsl
mov
lock
xor
adc
cmp
in
cli
repz
scas
imulb
lcall
jge
lock
cltd
jl
aas
xchg
xchg
movsl
pop
xor
mov
jno
jno
pop
push
fxam
adcl
mov
repz
ljmp
insl
push
jmp
test
inc
mov
jb
push
arpl
cmc
notb
dec
stos
fs
lcall
sbbl
sti
or
call
adc
mov
fsts
dec
loope
xchg
es
ljmp
fwait
cmpsl
icebp
into
jg
xor
mov
jo
mov
jns
jae
jge
das
or
call
and
push
inc
int3
pop
das
dec
push
decl
ljmp
jl
mov
cmc
iret
push
dec
sub
call
fdivs
ret
enter
jns
jnp
and
xchg
out
pop
iret
add
jmp
shll
ljmp
xchg
outsb
jmp
mov
pop
repnz
pushl
clc
je
aas
and
incl
call
sbb
outsl
sub
call
cmp
jmp
iret
repz
mov
dec
test
push
scas
jmp
cmp
or
jmp
dec
adc
decl
enter
loopne
decl
jbe
pop
xchg
pushl
scas
mov
incl
lcall
mov
and
rorb
cmp
loop
mov
enter
sub
jbe
push
push
gs
cltd
sbb
xchg
cmp
call
dec
test
lcall
test
pushl
test
decl
cs
jmp
test
lcall
mov
call
pushl
xchg
sti
adc
inc
mov
mov
test
decl
decl
out
sahf
dec
pop
adc
inc
and
frstor
shrl
call
cmp
repz
cmp
dec
pop
dec
sbb
dec
inc
int
cmp
ljmp
fmuls
jns
dec
mov
call
aad
in
call
mov
nop
test
filds
inc
cld
mov
data16
and
incl
iret
adc
cmp
pusha
cmp
add
cmp
fisttps
adc
sbb
imul
call
aas
loopne
fwait
jle
jnp
insb
cmp
call
push
aad
and
decl
mov
or
xchg
mov
decl
dec
fwait
or
pushl
jle
insl
fmul
sbb
cmp
decl
and
cwtl
xchg
scas
lcall
sbb
mov
pop
rcll
bound
call
in
cli
mov
jge
sub
cli
xchg
mov
std
addr16
call
jp
mov
adc
xchg
dec
xor
test
push
mov
lcall
xchg
inc
inc
mov
mov
rol
sub
jmp
xchg
mov
call
push
xor
cltd
data16
pushl
dec
rolb
jmp
push
jns
sub
incl
stc
cmpsb
jmp
andl
push
pop
lahf
jg
lret
lcall
mov
loopne
shll
mov
inc
aad
ljmp
call
adc
cmp
dec
aam
adc
cmc
js
or
add
ljmp
mov
push
pushl
inc
stc
mov
call
pusha
cmp
lea
in
lea
pop
sub
or
call
mov
pop
outsl
out
fidivl
decl
adc
xor
pushf
lock
mov
mov
and
and
call
cmpsb
lcall
shll
in
imul
cmp
call
out
incl
sahf
mov
ljmp
jnp
incl
gs
jecxz
mov
lds
sub
aad
push
xchg
fcompl
lcall
or
jmp
push
sbb
mov
in
fimull
fstps
jne
dec
popf
add
call
fs
loopne
jae
lcall
jo
scas
add
jl
and
imul
push
lock
lahf
jp
lahf
pop
out
jbe
imul
pop
inc
test
inc
les
in
pminub
jno
mov
fnstsw
and
incl
jbe
mov
movsb
call
out
ss
pushl
mov
aas
les
jmp
cmp
and
jmp
and
lcall
dec
lock
pushl
pushl
ljmp
addl
shll
jmp
jnp
rcr
cmp
decl
clc
mov
test
std
inc
repz
call
pop
cmp
pushl
xchg
rorl
pop
xor
enter
in
incl
pushl
cmp
incl
lcall
sti
jp
mov
dec
or
pushl
mov
shr
add
cmp
lret
imul
fisttpll
incl
call
popa
lock
or
lcall
mov
bound
mov
pushl
sbb
mov
mov
adc
in
sbb
dec
es
std
outsb
cmove
push
mov
incl
inc
jle
sub
dec
fdivrs
add
ljmp
sub
lods
jmp
leave
clc
adc
mov
mov
xor
jge
and
cmpsb
lcall
jae
pop
xchg
lcall
sub
mov
rcrb
pushl
mov
aam
dec
adc
or
decl
add
clc
xor
or
incl
mov
dec
pxor
xchg
lcall
mov
ljmp
jmp
or
decl
lods
lcall
repnz
aas
js
call
mov
mov
cmp
dec
rorb
ljmp
jge
call
cmp
push
incl
adc
lahf
cmp
decl
out
imul
lods
jp
push
loope
lcall
inc
jle
adc
jp
addr16
call
stos
jmp
movsb
incl
aam
jmp
xchg
das
cmp
xchg
divl
scas
push
xor
fcoml
xchg
adc
ffree
bnd
pop
mov
jmp
decl
pop
sub
fisubrl
xchg
mov
push
jecxz
mov
fcmovb
sub
xchg
loope
in
std
sub
incl
gs
mov
pushl
ljmp
sbb
rorl
call
mov
push
ljmp
push
aas
xor
call
fldcw
add
dec
inc
xchg
pop
xor
jg
incl
call
sub
dec
and
lcall
aam
mov
sti
lods
aas
and
ljmp
or
sub
inc
and
dec
lock
jmp
test
push
push
pop
push
sbb
lcall
mov
pushl
jne
aam
inc
enter
mov
add
clc
mov
pop
or
call
push
cmp
mov
pushl
jnp
test
aaa
and
call
xor
inc
dec
push
enter
cmp
lods
sub
incl
inc
add
ljmp
inc
ds
jne
cmp
stc
aam
es
call
test
call
inc
mov
decl
int3
nop
or
jmp
jo
call
jno
mov
inc
sti
pop
xchg
xchg
dec
jb
pop
mov
mov
aad
push
jnp
inc
std
adc
inc
cmpsb
pushl
or
cmp
cmp
inc
mov
dec
jmp
hlt
cwtl
push
repz
mov
inc
xchg
and
xchg
lods
jmp
in
and
lcall
pop
call
dec
je
xor
ljmp
aaa
xor
imul
int3
mov
add
repnz
jle
and
call
add
stos
fs
mov
ljmp
jmp
mov
ljmp
punpcklbw
call
ljmp
push
adc
inc
rcl
jmp
lcall
mov
jmp
in
fldenv
jmp
jns
sbb
cmp
call
aad
push
xadd
fsub
pop
mov
ljmp
cli
test
push
int3
cmp
insl
mov
sti
pop
fmuls
incl
call
and
decl
insb
shl
mov
inc
lret
push
popa
or
dec
mov
dec
icebp
outsl
repz
icebp
call
js
js
cltd
xor
jp
jmp
mov
jl
lods
inc
sub
incl
lcall
xchg
imul
pusha
cmpsb
lcall
push
mov
stos
sub
decl
pushl
stos
cmp
decl
mov
pop
cmp
aaa
ret
ret
sbb
sub
jmp
adc
inc
push
or
call
sub
decl
adc
push
jecxz
testb
aad
cmp
decl
sbb
call
cld
inc
insb
jp
out
pop
pop
mov
mov
dec
lock
lcall
es
jnp
push
sub
jmp
sbb
jmp
mov
incl
lcall
jne
or
lcall
sbb
jl
shl
outsb
or
pushl
pop
pop
or
cli
arpl
in
mov
lahf
bound
incl
das
jne
and
pop
shrb
xor
inc
and
lcall
dec
rol
loope
hlt
or
out
jno
adc
mov
mov
dec
test
mov
dec
cmp
xor
xlat
dec
mov
sbb
insl
jecxz
in
in
push
ret
jecxz
fisubrl
push
lcall
and
decl
and
decl
test
fldt
lcall
test
decl
mov
lcall
sbb
in
ds
fisttps
pop
ret
jmp
push
inc
mov
dec
xchg
cs
lcall
call
out
rorl
pushl
cmp
jmp
int
pop
les
leave
int
ficomps
or
stos
sbb
arpl
addr16
decl
pushl
and
dec
mov
lcall
fisubs
cmp
dec
cmpsb
jmp
and
pushl
dec
dec
movsl
xor
push
mov
dec
inc
push
in
sbb
rcrb
adc
push
call
lret
ds
jmp
out
push
push
pop
nop
push
orl
xchg
enter
pop
xchg
push
mov
jle
fs
decl
jae
xchg
ljmp
push
ljmp
ljmp
jmp
or
mov
imul
jmp
mov
js
movsl
fiadds
jo
lret
pop
fistpll
leave
xor
dec
jle
ss
leave
imul
inc
push
jb
dec
lcall
cwtl
mov
pop
je
incl
adc
in
outsl
xor
add
fisttpll
pushl
std
pop
mov
pushl
xchg
dec
jne
es
jmp
fsubrs
loopne
jns
jmp
decl
sbb
gs
and
sti
sbb
xlat
mov
ss
gs
repz
shl
hlt
inc
cmp
ljmp
arpl
cmp
ficoml
cs
jmp
push
xchg
mov
or
clc
jle
sar
mov
arpl
incl
and
ljmp
lret
jne
mov
xor
loope
les
mov
cli
out
push
test
pushl
adc
int
nop
pop
sti
aam
push
sub
in
push
sarl
in
jmp
incl
mov
push
out
fisttpll
cmp
pushl
mov
cld
popf
pop
cmp
inc
ret
and
std
jne
mov
int
fsubrl
xchg
bnd
adc
xchg
das
cmp
sub
xor
fsubp
mov
pushl
sahf
popl
inc
scas
std
sti
mov
jb
xchg
lcall
fsubrl
fisttps
rclb
fstpl
xor
mov
sbb
in
test
push
out
xchg
lcall
dec
sub
jl
jnp
idivl
in
dec
jle
cmpsb
incl
xchg
int3
cmp
sub
and
pushl
jne
mov
ljmp
inc
cmp
inc
pop
sub
in
ljmp
lahf
in
call
cmp
cmp
add
jmp
mov
ret
movsl
insl
xor
fs
push
mov
cmp
mov
aas
mov
jmp
cs
push
mov
mov
sbb
call
in
jl
jecxz
and
jmp
pushl
out
dec
push
insb
int
leave
aas
cmp
jmp
cmp
jo
stos
sbb
sbb
ljmp
ret
xchg
push
data16
frstor
xchg
adc
pushl
ljmp
shrb
or
fcoms
insb
icebp
or
call
and
sub
ljmp
mov
ljmp
jmp
sbb
add
ljmp
jmp
incl
aaa
mov
test
iret
add
decl
xor
adc
pushl
adc
loope
or
ffree
jp
int
mov
test
inc
mov
out
cld
dec
cmp
mov
adc
jle
loop
lea
ss
clc
mull
xlat
vunpckhps
out
lea
jns
inc
and
call
lock
pushf
sbb
inc
pop
imul
mov
lds
scas
icebp
cmp
lcall
push
mov
jb
mov
call
add
lcall
push
adc
lcall
rcl
sti
les
gs
ret
incl
add
incl
sub
scas
lcall
inc
sbb
call
dec
pop
sub
adc
loope
dec
cmp
pushl
jl
lods
sbb
call
cmpsl
sbb
dec
push
fstps
push
lcall
call
shlb
lcall
push
ds
lock
pushl
sahf
rclb
pop
movsl
add
decl
iret
stc
xchg
aam
push
test
incl
les
inc
xor
dec
mov
decl
outsl
xor
cmpsb
call
cmp
and
incl
cmp
cmp
aas
popf
aad
stc
in
xchg
xchg
sub
incl
mov
roll
jmp
aam
test
pushl
mov
into
loopne
in
jg
jbe
test
xchg
addr16
adc
xchg
cs
incl
mov
test
decl
mov
sub
mov
mov
call
jmp
call
and
lcall
call
call
or
mov
call
dec
pusha
outsl
jle
dec
xor
ret
mov
decl
insl
dec
xchg
outsb
sub
cmc
je
jmp
lcall
repz
repz
add
in
xchg
lds
lcall
or
sbb
xchg
jae
inc
ficoms
xor
xor
or
cmp
add
jbe
pop
mov
lcall
jmp
xor
mov
add
lahf
mov
ljmp
jmp
mov
aad
cld
jns
lods
cmp
jns
dec
cmp
xchg
gs
cltd
xchg
lahf
jle
push
push
inc
and
jg
inc
add
call
mov
aam
repz
repz
bt
inc
outsl
les
gs
inc
jae
leave
cmp
cmc
lods
call
mov
jge
xor
jge
bound
pushl
decl
sahf
imul
loop
mov
call
cwtl
arpl
incl
jmp
in
loope
sub
mov
incl
call
jns
or
ljmp
push
sbb
mov
movsl
cld
bound
add
pushl
fdivrs
scas
pop
imul
jmp
fimuls
call
adc
lea
jbe
cmp
insl
divl
pop
inc
lcall
fwait
mov
mov
decl
ljmp
pushl
push
push
imul
cmpsl
lods
mov
lcall
dec
addr16
jmp
call
dec
jle
mov
mov
xor
scas
call
adc
movsb
lcall
dec
testl
inc
sbb
lret
aaa
cmp
mov
xor
je
incl
call
addr16
int3
lcall
nop
mov
jp
pop
test
call
push
cmpsb
lcall
and
jmp
orl
mov
dec
pop
sbb
scas
mov
out
cmp
jns
faddp
jmp
jne
xor
add
jmp
adc
jns
stos
decl
mov
insb
and
les
mov
insl
push
cmp
dec
jno
inc
push
pushl
fwait
dec
test
call
lds
dec
adc
cld
mov
call
psubsw
fnstenv
aam
mov
or
inc
sub
call
jge
ljmp
adc
nop
and
ljmp
incl
sub
push
inc
not
mov
adc
sahf
cld
loopne
repnz
in
mov
sub
popf
inc
and
cld
mov
incl
test
cmpsl
incb
repnz
pushl
out
or
jmp
aas
sahf
dec
adc
jmp
ljmp
movsl
jl
mov
xchg
and
out
data16
das
sbb
repz
gs
lahf
sub
mov
pusha
sahf
movb
incl
cmp
adc
jnp
repz
das
mov
call
lods
subl
or
lcall
stc
fadd
addl
movsl
mul
mov
lcall
mov
call
bound
mov
cmp
push
jge
lds
jge
incl
cli
adc
cmp
cmp
ljmp
lds
mov
loopne
jns
imul
mov
ret
mov
mov
pop
sbb
pushl
in
add
incl
inc
push
mov
push
loopne
push
jge
loopne
xchg
arpl
mov
jmp
movsb
call
test
mov
arpl
fnstsw
add
fsub
cmp
jmp
jg
aad
mov
dec
addr16
pushl
movsl
lods
adc
decl
bound
mov
xchg
cmpsb
ljmp
ljmp
adc
test
xchg
decl
incl
incl
push
out
cld
mov
mov
fdivrs
push
nop
rcr
out
lods
ljmp
jne
mov
rorl
lods
sbb
test
jmp
imul
dec
cmpl
pop
jmp
pop
or
ljmp
pop
pushf
notl
pushl
xchg
inc
gs
ljmp
aam
scas
inc
sarb
push
mov
fstpt
icebp
pop
pop
mov
pushl
pushl
call
push
aaa
inc
or
jmp
fwait
pop
mov
jb
xchg
jmp
inc
push
mov
ljmp
pop
bound
adc
stos
xor
test
jmp
test
pushl
jle
pop
push
addr16
mov
jl
pop
lahf
push
outsl
stos
aaa
shrb
data16
lcall
call
fninit
fwait
popf
repnz
sub
cmc
movsb
jmp
imul
xchg
pop
lods
lahf
xchg
mov
pause
ret
sbb
icebp
hlt
es
lcall
lret
adc
xor
push
push
insl
and
lcall
lcall
test
cmp
dec
mov
mov
pop
mov
cs
fnstsw
jg
dec
add
inc
sbb
sbb
pop
mov
lcall
jmp
inc
lcall
cmp
jmp
inc
add
push
mov
lcall
cwtl
pop
xchg
pushl
jno
ljmp
inc
cmp
lcall
cmc
cmp
jb
dec
pop
dec
dec
and
dec
enter
dec
push
lock
stc
movl
decl
push
jbe
push
cltd
adc
call
out
push
mov
ljmp
adc
jmp
call
enter
jmp
testl
inc
mov
imul
xor
inc
sub
ljmp
pushl
es
incl
mov
pushl
mov
mov
jmp
dec
and
js
pop
inc
ffree
ret
lods
addr16
decl
rolb
out
loope
xor
cmp
mov
dec
scas
ljmp
lret
fcoml
mov
leave
mov
je
pop
es
pushl
incl
pushl
xchg
scas
incl
out
outsb
jno
fldcw
push
out
dec
inc
mov
call
adc
sti
popf
fxch
test
fnstenv
movl
jmp
js
loopne
cmp
push
mov
push
pushf
mov
sti
push
movsl
and
call
xchg
cmp
cmp
and
decl
sbb
push
aam
push
cmpsl
sbb
adc
test
std
cmp
mov
cmp
ljmp
es
push
pop
cmp
jmp
jne
and
incl
inc
add
pushl
push
sbb
cmpsl
adc
decl
decl
incl
sub
sbb
lcall
jne
pushf
gs
incl
mov
sbb
leave
in
cmpsl
call
ljmp
jge
cltd
pop
xor
test
jmp
leave
movsb
pushl
dec
outsb
push
push
out
ret
mov
ss
call
test
mov
lahf
cmp
pushl
lea
pop
bound
out
xor
ljmp
cs
call
int3
fs
call
out
mov
pushl
decl
data16
xchg
ret
pop
jge
test
je
jno
lcall
arpl
mov
aad
clc
cmp
add
mov
lcall
aam
lea
test
lock
popa
notb
fmull
cmp
hlt
addr16
jae
xchg
call
rcrb
jo
inc
inc
inc
nop
dec
cs
cmp
in
pop
test
push
xlat
cmp
pushl
cmp
js
inc
dec
pop
aas
hlt
ds
dec
jl
jmp
ljmp
jbe
inc
cmpsl
add
lcall
stos
enter
ljmp
ljmp
xor
ljmp
inc
mov
fstp
leave
mov
incl
cmp
mov
rcrl
lods
call
mov
decl
adc
scas
repz
in
cmp
inc
jno
jmp
push
ljmp
shl
xchg
rcr
dec
sbb
dec
ds
or
cmpsb
decl
idivb
mov
out
jmp
push
jmp
inc
push
insb
lahf
lret
outsb
xchg
pushl
or
call
mov
dec
std
adc
test
call
sbb
decl
pop
push
push
adc
cmp
fists
jp
and
jge
cmp
decl
mov
jae
push
fildll
mov
xor
mov
lcall
insb
inc
rorl
lcall
mov
ret
jecxz
imul
sti
add
lcall
push
xchg
insb
in
call
ljmp
clc
lods
decl
cmc
push
int3
insl
jmp
js
and
ljmp
ljmp
jnp
or
scas
ljmp
into
inc
loope
out
inc
adc
je
aad
fcmovnbe
jle
loop
and
incl
repz
xchg
clc
add
inc
das
imul
incl
add
jmp
les
out
incl
enter
insb
stos
jmp
insl
pop
pusha
and
notl
jmp
clc
push
inc
push
nop
stos
ljmp
insl
xchg
outsb
push
mov
aam
icebp
cmp
scas
popa
lahf
pushf
iret
push
mov
jmp
jp
movsl
in
movsl
cmp
icebp
test
inc
out
scas
lcall
insl
shl
cltd
mov
jmp
cmp
mov
dec
cmp
jmp
and
daa
ret
fiadds
adc
jnp
loope
dec
imul
adc
jmp
enter
dec
mov
jbe
in
adc
mov
call
dec
sub
in
mov
call
ljmp
xchg
lods
sbb
sub
add
es
ljmp
decl
decl
nop
pop
movsb
jmp
cmp
xchg
xor
cmp
ret
decl
mov
mov
cltd
push
insl
add
mov
decl
lret
xor
addr16
xor
pushl
lcall
lcall
lcall
dec
adc
cmp
dec
mov
cld
out
dec
lahf
popf
negb
lret
dec
lds
lahf
push
mov
jecxz
dec
mov
and
xor
fnstcw
jmp
jle
lret
aas
sbb
inc
pop
into
pop
sahf
cmp
cmp
sub
jmp
jbe
lcall
sbb
gs
rolb
decl
jmp
incl
jns
cmp
push
sahf
adc
or
jp
and
push
repnz
decl
aas
loope
inc
outsb
cmp
lcall
int
dec
or
cmpsb
ljmp
xor
xchg
jmp
movsb
lcall
jnp
loopne
lcall
clc
std
mov
inc
fwait
xchg
leave
xchg
shrb
jmp
in
sbb
or
mov
ds
and
and
or
incl
fcoml
push
loop
pushl
adc
lcall
incl
dec
popf
ret
jnp
pop
dec
push
sbb
jmp
mov
adc
call
sbb
mov
jge
lret
shr
into
and
decl
and
mulb
outsb
int3
cmp
call
enter
mov
sbb
shll
and
call
mov
iret
repz
push
loop
in
xchg
cmp
lcall
call
fsubs
cwtl
aam
cmp
pushl
lcall
mov
call
mov
addr16
aas
jbe
mov
jnp
sub
call
sub
decl
into
dec
jmp
loop
fldlg2
test
imul
jmp
mov
add
dec
dec
repnz
fs
pushl
cmp
ljmp
sbb
out
mov
loopne
xor
cmp
jle
inc
cmp
clc
iret
and
incl
outsl
pop
pop
dec
xchg
jg
sub
fidivrl
test
inc
daa
mov
call
or
out
jae
cmp
scas
cs
call
stos
ljmp
jle
outsb
add
ljmp
sbb
stos
decl
jno
mov
jns
repz
fidivs
cwtl
ret
out
fidivs
cmp
in
dec
pcmpgtb
lret
decl
push
test
dec
xchg
fwait
pop
in
test
fsubrl
inc
mov
dec
test
pushl
cmc
mov
sbb
or
inc
dec
leave
cli
clc
sbb
inc
and
jmp
add
movsb
dec
pop
sub
data16
push
cmp
cmp
cmp
call
mov
push
push
sbb
pop
iret
iret
outsl
jo
cmp
sub
ljmp
movsl
pop
ljmp
call
fdivrl
push
pop
mov
pushl
nop
ror
jle
pop
fwait
test
hlt
mov
mov
pop
xchg
push
mov
ficomps
sbb
fstps
mov
cmp
neg
and
incl
incl
xchg
push
mov
push
pop
cld
aaa
add
fisttpll
in
test
lcall
rorl
fiaddl
outsb
icebp
push
les
xchg
xor
dec
aaa
lret
jmp
call
rcrb
mov
jmp
fisttps
push
repz
fwait
lods
jl
incl
and
mov
dec
daa
lret
dec
inc
jg
ljmp
push
inc
xlat
mov
pushl
decl
outsl
adc
cmp
lods
jmp
repnz
jmp
push
cmp
incl
jmp
rclb
jl
mov
insl
mov
jle
cmpl
aad
sbb
call
lcall
push
decl
push
fstpl
pop
push
orl
in
das
mov
mov
dec
iret
es
lcall
jge
mov
sub
ljmp
data16
loope
repnz
mov
jge
pop
jbe
mov
call
fucom
jo
mov
lcall
cmp
push
adc
incl
push
sahf
inc
or
dec
jae
lahf
das
mov
push
decl
add
nop
divl
pushl
xchg
jae
rclb
push
test
mov
add
ljmp
inc
pop
or
sbb
nop
arpl
out
out
add
decl
adc
sub
into
push
scas
decl
jnp
ss
mov
jmp
mov
add
ljmp
mov
push
push
xor
sub
cmp
inc
push
xor
cmp
sub
mov
pusha
test
push
rcrb
push
outsb
scas
decl
sbb
cltd
cs
call
cmp
mov
adc
movsb
jmp
sbb
cltd
mov
lcall
iretw
mov
iret
lcall
frstor
stc
popa
sub
call
push
outsl
xchg
xor
and
ljmp
movsl
mov
pushl
dec
sub
call
cmpsb
jmp
decl
xchg
dec
arpl
jo
or
cltd
fwait
xchg
decl
ljmp
decl
pushl
jmp
call
call
cmp
mov
cmp
adc
mov
call
call
or
rorb
or
dec
xor
sub
incl
call
test
xor
pop
je
js
lcall
mov
dec
pop
mov
pop
outsb
daa
stc
sbb
sub
incl
scas
in
lahf
mov
sbb
sbb
int3
jl
add
cltd
pushf
popf
sbb
inc
cmc
xor
fisttpll
jmp
nop
movl
lcall
cmp
call
or
lcall
pop
pop
aam
inc
lcall
incl
dec
call
std
es
incl
sub
js
mov
jmp
jge
rorl
call
jecxz
repz
jnp
jg
fwait
hlt
sub
jecxz
cmc
dec
or
decl
mov
pushl
mov
into
sub
in
lods
decl
incl
ds
mov
jmp
ljmp
cmp
in
pusha
fldl
cmp
jmp
cmp
lods
add
pushl
jo
ljmp
fisttpl
and
sub
decl
push
inc
cmp
cmp
jge
lods
xor
add
ljmp
loope
dec
bnd
dec
cmp
and
incl
daa
inc
push
cmp
fninit
mov
repz
dec
add
jg
xchg
mov
pop
mov
decl
jmp
and
call
insb
std
xchg
aaa
push
es
ljmp
aas
ss
fdivrs
es
jmp
ss
fisubrl
test
xor
pop
dec
xor
and
ljmp
es
decl
decl
cmp
jmp
sub
push
sahf
lahf
mov
pop
jns
movsb
call
rcrl
incl
cmp
jmp
lods
ljmp
fwait
add
decl
in
pop
or
mov
in
jns
mov
int3
sbb
call
push
add
ljmp
call
test
call
xlat
jp
cwtl
movsl
xor
push
ljmp
or
lcall
jmp
pop
iret
mov
or
mov
call
fcomp
xor
pushl
int3
aas
das
pusha
adc
call
mov
scas
push
ds
sti
cmp
pandn
inc
es
dec
fs
mov
bound
dec
dec
dec
cltd
adc
push
mov
leave
movb
and
call
in
jle
mov
decl
xor
into
insb
mov
int3
add
pop
dec
stos
ljmp
ljmp
dec
push
or
decl
add
jmp
mov
mov
das
lods
sbb
pushl
jb
notb
ret
inc
fwait
jo
pop
popf
repz
or
decl
fwait
jno
mov
jae
pop
sub
ljmp
out
pop
outsb
mov
cmpsb
fdivp
pusha
test
mov
fwait
es
incl
pushl
sbb
push
jmp
lcall
and
decl
decl
imul
inc
scas
fcomp
pop
and
mov
in
or
jmp
aad
lea
in
or
push
mov
or
xchg
jg
add
stos
jmp
adc
test
xchg
ja
outsb
cmc
sti
test
testb
incl
ljmp
jl
push
cmp
jmp
ljmp
addr16
clc
cmp
inc
mov
ljmp
xchg
call
adc
clc
cwtl
add
lcall
popa
xchg
inc
fdiv
pop
xor
push
pop
shl
mov
push
call
mov
jmp
jmp
sbb
jno
lds
setge
sub
pushl
lcall
jge
inc
pop
lock
and
mov
mov
das
or
incl
pushl
imul
sub
jl
std
inc
shr
sarb
test
jmp
lock
rorl
sbb
jb
fldt
fistl
pop
je
pop
and
mov
inc
or
cli
in
mov
fnstcw
decl
lock
lcall
or
decl
std
int3
hlt
cmp
incl
sti
xchg
call
fcoml
xchg
call
in
mov
dec
cli
inc
mov
inc
fildl
filds
pop
shl
insl
pop
popf
dec
fstpl
push
pushl
pop
mov
decl
cltd
fsts
mov
xchg
pop
les
or
pushl
mov
add
add
xlat
sti
cld
notl
enter
pushl
test
decl
shrb
decl
dec
push
push
push
cmp
mov
jb
pop
ljmp
ficompl
and
mov
lcall
call
ljmp
cld
aad
ljmp
decl
insl
test
lcall
mov
call
jmp
es
decl
pop
shll
lock
call
mov
or
call
mov
adc
push
inc
sbb
decl
dec
mov
sti
enter
xchg
lods
ret
fcoms
cld
cltd
jne
xor
sub
imul
xchg
sbb
xchg
ret
ficomps
orl
or
sbb
shll
shll
out
pop
cmp
push
out
xchg
and
decl
or
jmp
sbb
xchg
inc
inc
shrl
out
ljmp
jl
jmp
mov
mov
adc
jnp
pop
or
decl
cmp
fidivs
sub
call
call
mov
or
pushf
or
popf
mov
dec
flds
ljmp
dec
leave
mov
sbb
pushf
sub
decl
lcall
out
adc
xorl
inc
push
sub
stc
lods
mov
stc
cli
and
xor
sarb
stc
dec
sbb
inc
inc
cs
mov
adc
decl
sub
cmc
lock
cmp
lds
int
mov
jno
dec
inc
push
adc
lods
addl
mul
test
ljmp
incl
repnz
idivl
incl
aaa
mov
mov
scas
sahf
pop
sbb
and
sbb
frstor
gs
out
cld
cmp
lods
xchg
inc
mov
popa
mov
mov
mov
ljmp
mov
decl
mov
das
mov
rcl
mov
mov
lea
dec
sub
ljmp
inc
scas
decl
lret
cmp
jbe
add
add
mov
pop
or
mov
adc
xchg
xor
adc
add
pushl
outsl
inc
xor
rolb
rclb
pushl
testb
or
mov
and
hlt
fisttpl
mov
decl
aaa
imul
adc
out
ljmp
sar
xor
mov
mov
pop
xor
decl
jmp
mov
lcall
jmp
sub
roll
lcall
cld
mov
call
ret
mov
ljmp
mov
test
cmp
push
ret
jmp
push
jmp
mov
incl
incl
lcall
xor
aaa
js
lods
ljmp
fcomps
outsl
cltd
pusha
mov
jle
out
cmp
jmp
mov
pushl
cwtl
xor
shr
xor
fdivr
fmulp
lea
mov
jnp
mov
leave
mov
sbb
call
jnp
imul
fsubrs
adc
jmp
add
call
adc
cmp
popf
jle
mov
cmp
lcall
inc
or
stc
or
lcall
adcl
imul
cmp
int
add
scas
lcall
lcall
incl
sbb
push
fsubrs
push
inc
ret
sbb
jmp
icebp
pushf
es
pushl
aad
lock
scas
sbb
jmp
aaa
fiadds
mov
incl
decl
call
call
pushl
pushf
xchg
icebp
add
jmp
or
inc
xor
and
ljmp
mov
lcall
mov
pop
ret
pop
cmc
sub
ljmp
incl
inc
insl
testb
aas
idivb
xor
inc
jb
xor
aad
xor
cmpsb
incl
aas
cmp
mov
pushl
stos
decl
ljmp
mov
pop
call
push
decl
and
jmp
sub
call
jmp
pop
aas
fcmovnu
dec
xlat
cmpsl
std
jg
pusha
inc
pop
je
xchg
pop
outsb
dec
mov
cmpsb
dec
xchg
inc
into
fwait
scas
dec
incb
push
xor
pop
or
incl
data16
call
test
push
cmp
inc
mov
mov
decl
int
mov
mov
popf
fisttps
out
call
insb
sub
pop
pushf
ret
mov
rcrb
push
test
scas
xchg
inc
mov
lcall
in
mov
call
add
and
jmp
movsl
stos
ret
mov
lcall
push
stos
sub
clc
or
xor
sub
xor
push
icebp
shl
xchg
lea
push
xchg
das
pusha
repz
call
incl
pop
test
shrb
jmp
cmp
loope
mov
pop
jo
xor
pushl
ss
jl
and
add
pushl
sbb
adc
aaa
mov
jae
mov
lcall
dec
sbb
jnp
outsl
jp
jecxz
das
cmpsl
lods
aad
jp
jge
icebp
sahf
cmp
incl
pop
add
std
aam
mov
call
xor
in
dec
cmp
mov
negl
push
and
call
movsl
jnp
std
sub
jnp
jl
in
sub
pushl
dec
fisttpll
jmp
mov
sbb
cld
jle
arpl
inc
dec
mov
call
and
incl
and
dec
dec
push
loopne
lcall
pushl
sbb
scas
pushl
inc
shll
mov
jmp
decl
decl
inc
sub
lcall
pushl
jmp
test
ljmp
mov
in
je
pushf
out
jg
mov
dec
inc
loopne
push
call
or
push
push
mov
mov
arpl
imul
pushl
repz
inc
add
movsl
data16
bound
sub
pop
inc
daa
dec
mov
mov
xchg
adc
lcall
push
inc
mov
je
xchg
es
jmp
inc
sti
mov
pushf
les
in
mov
loopne
outsl
xchg
jge
mov
repz
decl
push
nop
jno
ljmp
incl
fwait
js
pushf
insl
ss
dec
xchg
jge
mov
shll
sti
pop
push
xchg
mov
in
loop
cmp
in
dec
leave
jle
pop
xor
pop
mov
test
cmp
ljmp
pop
in
call
ret
or
xlat
clc
je
xchg
jge
sbb
and
inc
shlb
imul
mov
lcall
in
cmp
arpl
cltd
jb
aad
ret
and
pushl
cmp
push
cmp
jg
jns
adc
mov
jno
mov
out
fsubrs
stos
dec
mov
aaa
add
call
jmp
movsb
call
xchg
or
pushl
jmp
jmp
pop
mov
shl
and
decl
sub
test
bound
or
pushl
je
in
js
xchg
and
js
popa
dec
dec
xor
xchg
sub
or
call
icebp
dec
movsb
jmp
rolb
incl
adc
push
dec
xlat
test
jmp
mov
les
out
adc
test
jnp
mov
adcl
push
test
ljmp
jmp
fstps
jmp
push
jl
xchg
pop
fs
decl
jmp
xor
push
cmp
stos
sti
cmp
and
jmp
push
jmp
jmp
dec
adc
inc
shlb
lcall
ljmp
loopne
sahf
movsl
repnz
dec
std
pop
jae
aas
scas
jmp
imul
xchg
loopne
out
mov
dec
cmp
pop
aam
mov
incl
ljmp
imul
fstps
mov
ljmp
pop
pop
daa
loopne
pop
cmp
not
data16
ljmp
arpl
and
ljmp
mov
pushl
jmp
lcall
cmp
jmp
decl
cmc
jae
mov
ds
jge
and
movsb
decl
test
call
add
incl
call
idiv
es
jmp
pop
or
incl
incl
lods
cld
push
and
stc
enter
cwtl
jg
add
lcall
incl
call
in
inc
movsl
shrl
push
rcll
or
push
ja
push
aam
add
decl
inc
paddq
cmc
push
sub
call
cmpl
add
pushl
pushl
jmp
fldt
jnp
incl
ret
jae
mov
ret
decl
jmp
lods
call
test
jl
mov
mov
cmp
incl
add
pushl
cmp
call
test
incl
movsb
js
add
decl
pop
pushl
push
jmp
cmp
xchg
hlt
dec
aam
sub
lds
mov
psubw
test
incl
mov
jmp
fisttpll
out
clc
xor
and
call
or
mov
mov
idivl
incl
jmp
ja
dec
mov
fldl
call
lcall
lds
pushf
lret
cld
lret
mov
data16
ljmp
movsl
popl
cmp
xchg
sub
mov
cmp
imul
movsl
pop
sbb
incl
decl
mov
cltd
lcall
filds
ds
fdivr
adc
xor
jp
xor
loop
pop
xor
dec
or
sti
pushf
dec
sub
call
lea
pushl
aad
ljmp
out
sbb
fcmovb
rolb
addr16
clc
pop
movsb
jmp
decl
sub
decl
lcall
imul
lock
ret
scas
sbb
outsl
fstps
push
adc
pop
ljmp
cmp
popa
stc
adc
insl
test
mov
jmp
int3
sub
push
enter
inc
mov
or
leave
push
mov
decl
push
repz
inc
cmp
decl
mov
jg
or
decl
addr16
xchg
and
decl
pushl
jmp
decl
fidivrl
dec
pop
cmpsb
decl
cmpsb
push
lcall
pushl
sub
fs
adc
or
incl
xchg
mov
arpl
repz
jp
out
lahf
inc
xor
dec
pop
xchg
or
test
stc
idivb
dec
imul
sub
incl
lcall
pusha
repnz
dec
dec
fmuls
adc
sahf
push
call
sub
dec
adc
decl
jmp
mov
insl
adc
ficompl
cmpsb
cmp
roll
decl
mov
mov
push
or
test
mov
cmp
jmp
call
or
movsb
incl
lcall
icebp
sub
inc
mov
or
dec
popa
mov
decl
call
inc
xor
and
incl
jl
out
rclb
cmp
jbe
int3
ds
shrb
and
outsb
out
jb
lea
adc
sub
add
xchg
icebp
cmp
call
nop
add
call
mov
jno
outsl
nop
add
negb
pushl
sub
jmp
inc
les
jg
inc
orl
push
call
popa
pop
lahf
loop
push
inc
in
call
insl
lahf
mov
push
push
lock
pusha
stc
pop
lcall
lock
pop
pop
jle
mov
incl
incl
pop
sub
decl
inc
cmp
sub
pushl
inc
sahf
jnp
in
sub
fwait
inc
and
ljmp
addr16
or
incl
add
mov
cli
dec
in
lret
mov
out
ljmp
call
call
and
cmp
lret
bound
fs
lods
jmp
clc
imul
jecxz
mov
incl
pushl
mov
ret
sub
incl
push
dec
jl
out
mov
dec
push
scas
call
jns
jbe
repz
pop
push
fdiv
leave
pop
mov
jbe
cltd
push
sar
cli
sbb
cld
gs
pop
xchg
jmp
cld
cmp
incl
lcall
jae
pop
dec
outsb
loope
jge
cld
sub
decl
pop
xor
pushl
pushf
dec
out
jne
daa
sub
push
sub
popa
push
lcall
cmc
dec
jnp
inc
lds
jmp
or
decl
adc
push
lcall
aad
pusha
or
push
cmc
sbb
pop
daa
test
jmp
call
push
repnz
dec
adc
test
incl
push
cld
push
add
lcall
pop
and
pushl
decl
test
mov
and
ljmp
out
insl
add
jmp
inc
mov
pop
sbb
dec
popf
mov
push
inc
adc
stos
adc
push
lcall
cld
aas
inc
test
pushl
popf
xchg
mov
and
ljmp
ret
lret
and
in
mov
ljmp
cmpsl
adc
push
daa
mov
push
add
out
das
jmp
mov
adc
inc
sbb
pop
xor
int
mov
pushl
les
call
inc
adcl
adc
cmp
pushl
cs
call
xor
jl
cmp
pop
mov
inc
xchg
lea
lcall
pushl
hlt
movsl
fwait
and
pop
std
stos
call
bound
mov
iret
in
inc
outsl
add
inc
pusha
sbb
call
adc
in
mov
incl
shll
dec
dec
push
push
or
pushl
pushl
mov
ljmp
out
les
call
stc
decb
decl
decl
mov
cmp
pushl
jns
pusha
and
mov
mov
fldl
cli
sarl
pushl
movsl
aad
push
fs
sbb
dec
jmp
dec
jns
cmp
mov
jmp
ljmp
decl
mov
xchg
dec
ret
sahf
je
test
js
xchg
cld
inc
aas
sbbl
fs
xor
jmp
adc
xchg
out
dec
mov
incl
mov
fcmovnbe
mov
mov
fnstenv
flds
cmp
adc
cs
pushl
xor
push
mov
out
sbb
mov
sbb
filds
cmp
dec
ror
mov
stos
cli
jno
lods
and
decl
pushl
and
mov
movhps
push
jmp
ret
and
mov
pop
stos
dec
and
mov
roll
decl
cmp
jae
shl
mov
addr16
jno
jno
adcl
mov
cmpsl
arpl
xlat
mov
ljmp
mov
lock
cmpsb
call
or
jmp
cmp
xchg
inc
ret
cmpsb
call
xor
movsb
cld
aas
add
ljmp
ljmp
lcall
leave
mov
call
div
inc
negl
push
fwait
and
jmp
mov
mov
jmp
lods
call
fwait
int3
mov
daa
pmovmskb
or
lcall
sbb
sarl
jmp
push
jmp
sub
lcall
xchg
jp
inc
xor
mov
mov
movsb
pushl
lock
mov
lcall
inc
push
test
call
movsb
ljmp
mov
cmp
mov
jmp
or
std
cwtl
aaa
arpl
filds
add
mov
push
and
jmp
jmp
aas
add
push
jmp
lcall
xchg
sahf
mov
call
scas
enter
ljmp
cmp
fcmovnu
ficompl
ljmp
ljmp
mov
lcall
shl
out
cmp
push
add
jmp
dec
nop
das
idivl
push
lcall
jl
loopne
scas
fildll
mov
cmp
push
xchg
add
incl
jmp
cmp
shr
sub
dec
mov
pushl
ja
mov
jmp
pop
in
cmpsl
test
hlt
cli
push
loop
and
scas
mov
or
decl
fdivrl
sbb
lcall
adc
arpl
mov
push
jnp
call
sub
lcall
add
sti
arpl
and
sarb
xchg
dec
add
add
sub
incl
dec
jge
scas
fldlg2
std
aas
push
or
mov
decl
inc
in
mov
jnp
pop
loope
fwait
and
jmp
add
incl
ljmp
mov
call
push
loopne
sub
inc
out
dec
push
add
fwait
pop
fadds
call
pusha
dec
lea
xor
hlt
hlt
inc
leave
popa
push
call
call
cmp
call
xchg
xchg
lcall
adc
dec
mov
stos
jmp
pop
push
dec
repz
ret
pop
or
xor
lods
cmp
decl
out
mov
lcall
movb
cmc
mov
pavgw
iret
pusha
fbld
decl
jmp
ljmp
xlat
cmp
lcall
lcall
fists
ja
stc
cli
sub
decl
lods
decl
lods
inc
and
call
cmp
incl
insl
inc
pop
sub
incl
scas
push
or
ljmp
mov
dec
outsl
mov
dec
pop
xlat
cmovl
mov
mov
pushl
mov
sub
sti
gs
cmpsb
incl
popf
mov
imul
jmp
mov
jmp
jno
jne
mov
sti
xchg
in
push
inc
xor
cmp
in
incl
clc
out
pop
sub
jmp
decl
pushl
ljmp
jb
mov
in
xchg
outsb
mov
mov
shlb
lcall
pop
xor
pushl
jg
orl
scas
ret
test
cli
sbb
mov
mov
incl
cs
lcall
in
and
cmc
imul
aas
pop
mov
cmp
xor
lahf
add
es
decl
jb
mov
jbe
enter
push
popa
test
call
inc
inc
mov
jmp
sub
incl
incl
call
dec
mov
mov
pushl
ljmp
xchg
in
arpl
jbe
lcall
cmp
call
cmp
push
cli
sbbl
sbb
mov
cmpsl
push
lcall
dec
pop
scas
jmp
fwait
shlb
shrb
push
fdivrp
loop
push
std
and
push
ret
cmp
push
push
cmp
insl
movhps
xchg
mov
pushl
jbe
push
push
and
sbb
push
pop
cmp
add
call
adc
add
popa
movl
lods
dec
popa
stc
fisttpll
fwait
ljmp
pop
sbb
jne
push
xchg
popa
hlt
mov
into
idivl
scas
dec
jp
lcall
insb
call
incl
stos
sub
adc
cli
sahf
shll
inc
mov
outsb
lret
cmp
lcall
push
sbb
call
test
decl
and
dec
sbb
call
and
ljmp
mov
lcall
push
add
pushl
test
pushl
dec
or
bound
pop
sbb
sub
enter
hlt
je
cmp
fimull
adc
fadds
jo
jae
mov
mov
pushl
mov
insb
mov
out
int
shll
decl
jmp
pop
fstl
call
push
jl
and
aas
push
mov
push
in
std
ljmp
incl
inc
imul
decl
sub
lcall
fidivrl
cmp
test
incl
dec
aas
test
pushl
add
pop
jo
add
xor
ljmp
mov
add
dec
cli
scas
lcall
sub
mov
mov
push
aam
inc
add
jmp
xor
repnz
dec
out
adc
pop
loop
sbb
cli
cmp
xor
xchg
dec
adc
rolb
add
aaa
ja
ss
cli
setle
int3
faddp
cmp
jge
call
lcall
push
cmp
push
sub
pop
outsl
xor
sub
jmp
xchg
pushl
mov
decl
jmp
jp
mov
xchg
cmp
pushl
sub
call
pushl
dec
cmp
loopne
icebp
add
call
add
ljmp
cmp
call
sarb
in
mov
jns
mov
pusha
cwtl
jno
pop
mov
incl
push
mov
call
inc
or
jmp
pusha
aam
adc
rol
cltd
jle
dec
jl
test
decl
cmc
shrb
jns
cmp
call
call
adc
lcall
out
scas
fwait
cmp
incl
ss
add
incl
ljmp
decl
imul
and
jmp
je
ljmp
adc
jmp
in
inc
cs
lcall
pushl
adc
pop
aad
xor
mov
decl
ljmp
lcall
lretw
jae
gs
imul
mov
xchg
or
lcall
sbb
lcall
shl
jns
sub
call
xlat
rcll
mov
rorb
lcall
ret
lods
decl
popa
les
fucomip
mov
ljmp
call
fisubrs
call
cs
jmp
cli
and
ljmp
dec
out
jl
setns
call
loope
daa
jg
add
decl
xor
jmp
aad
inc
xchg
ljmp
lcall
cmp
jae
lret
popf
xchg
and
cmp
es
push
repz
inc
pop
push
push
call
mov
leave
pop
ds
jo
or
lret
jb
rep
insl
cli
mov
or
adc
xchg
lcall
arpl
and
add
fists
repnz
decl
lcall
in
xorl
jmp
popf
sub
test
ljmp
decl
call
ljmp
jmp
dec
mov
dec
xor
out
mov
fdivrs
fisttps
out
jae
xlat
inc
aaa
cmpsb
lcall
ljmp
push
mov
into
int
insl
sub
inc
movsl
aam
movsl
or
call
push
pop
mov
xor
repz
lcall
mov
out
or
push
inc
xor
push
data16
jmp
push
out
pinsrw
sbb
jp
fstps
jg
pop
mov
andl
and
mov
xchg
cmp
ljmp
addr16
mov
mov
mov
and
incl
sti
clc
out
push
ljmp
or
stos
call
dec
imul
inc
cs
pushl
in
xchg
mov
mov
decl
incl
ljmp
movl
sub
ljmp
mov
ljmp
scas
cli
push
jno
call
incl
cmpsb
ficoml
sbb
xchg
cmovb
lret
jb
imull
decl
lods
mov
dec
inc
cmp
jmp
clc
fisubrs
mov
xchg
sub
cmp
scas
pushl
aaa
mov
cmp
test
cld
and
jmp
decl
decl
lcall
jo
lods
sbb
or
jmp
in
es
call
push
inc
xchg
jmp
out
mov
decl
sbb
mov
scas
jmp
dec
outsl
mov
out
call
test
push
and
ljmp
lcall
cwtl
jns
mov
ljmp
pushl
enter
fstpt
mov
je
pushl
leave
loop
xchg
popa
or
pushl
jmp
out
fnstenv
call
scas
add
decl
fstl
mov
jns
ds
sub
js
sbb
cltd
cmpsb
cld
add
incl
push
sub
out
or
dec
rcl
mov
jmp
mov
pusha
les
cmp
push
negb
cltd
mov
jmp
loope
push
cmp
incl
mov
lahf
pusha
iret
sub
jmp
fsts
pushl
jle
call
stc
mov
jmp
or
inc
dec
scas
sbb
lret
inc
pop
fmulp
mov
mov
out
jp
aad
in
je
push
inc
cmp
insl
scas
xor
add
adc
push
stos
push
cmc
xchg
xor
sub
jle
or
les
call
sub
rclb
jmp
fmuls
movsl
js
bound
and
push
xchg
fadds
int3
push
inc
xor
js
sub
adcl
jno
pop
sbb
sbb
pushl
sbb
xor
add
ds
cmp
cwtl
gs
push
mov
decl
cmc
sub
cmp
cli
imul
decl
and
fdiv
stos
jge
outsl
daa
leave
fisttpl
xchg
jmp
jmp
xchg
decl
scas
mov
incl
out
call
iret
adc
xchg
incl
icebp
ds
or
cmp
call
nop
push
lahf
in
fld
lcall
inc
pop
sub
push
icebp
cmp
jne
sub
movsl
pop
xchg
sub
sub
jmp
int
jae
cwtl
inc
fbstp
fsubrl
pushl
ficompl
cmpsl
pop
js
shl
std
stc
imul
jne
add
call
pushl
cwtl
xchg
jmp
mov
cmp
push
mov
xor
cmc
int
add
clc
cmp
cs
aas
mov
adc
insl
out
in
iret
xor
mov
lcall
fstl
das
pop
or
fwait
lods
mull
call
cmp
call
mov
ror
loopne
lock
add
es
decl
push
sub
xor
inc
inc
scas
dec
lret
xlat
or
jmp
popa
roll
call
adc
sarl
sti
stc
pop
pmovmskb
adc
mov
add
decl
push
jbe
xchg
lods
outsb
shrl
adc
incl
inc
sbb
out
loop
decl
pop
sbb
xchg
sbb
pop
push
inc
sub
clc
cs
decl
add
ljmp
push
jmp
ret
push
xchg
scas
lcall
outsb
shr
js
movlhps
push
xchg
outsl
push
lcall
fwait
push
pushl
ja
scas
xor
movsb
dec
imull
call
in
div
mov
push
mov
ljmp
jmp
sbb
dec
shll
in
lods
rorb
jmp
cltd
mov
mov
mov
call
int
decl
pop
push
pushl
pop
out
sbb
aas
test
cwtd
push
lcall
into
cli
dec
inc
sbb
lahf
cmpsb
jmp
jle
fidivrl
lcall
movsb
incl
lea
sub
and
call
leave
xchg
andl
pushl
lahf
cmp
jmp
pop
das
jno
insl
insb
flds
gs
jmp
pushf
push
repz
ss
decl
push
xor
cld
push
mov
call
inc
or
decl
pushl
cltd
jmp
xlat
add
arpl
incl
lea
incl
dec
imul
lods
mov
mov
lcall
es
jmp
ret
push
jmp
enter
incl
cmp
loopne
jp
jo
loop
leave
bound
fnstenv
out
icebp
fdivrl
pop
loop
out
xor
jno
es
ljmp
dec
cld
shlb
jmp
cmp
cmp
incl
in
dec
xor
aas
push
ds
shrb
adc
call
call
lahf
test
test
lcall
cwtl
fcomi
pop
test
decl
pop
mov
pop
pop
nop
mov
int
test
std
fstl
mov
cmp
dec
push
lcall
lds
and
decl
sub
call
xchg
xchg
decl
adc
pop
enter
push
xor
outsl
push
shr
push
or
fstpt
js
test
xor
jno
mov
mov
and
ficoms
out
jo
jmp
subl
int3
mov
aas
or
jmp
imull
mov
call
popf
jnp
js
mov
loope
pop
in
mov
jbe
sub
test
ljmp
sub
pop
push
sarb
mov
int3
lea
cmp
cld
ljmp
xchg
pop
iret
inc
insb
icebp
mov
stc
aas
lods
test
and
pushl
jbe
push
call
sarb
ljmp
xor
lcall
sti
push
lods
ds
mov
and
dec
loop
cli
xor
push
jg
fwait
adc
test
sti
xchg
add
incl
movsl
cmp
outsl
adc
lods
mov
outsb
cmc
xchg
ds
pop
inc
dec
int
mov
test
test
call
mov
push
jg
mov
jmp
mov
pop
movsb
jmp
mov
outsb
lods
decl
lcall
ljmp
jmp
imul
decl
ljmp
pop
jg
pop
rorb
pop
popw
pop
sbb
call
jmp
jge
incl
inc
popf
xchg
add
mov
call
pop
pop
dec
push
jo
test
push
push
xor
or
lahf
fdivs
jmp
outsl
enter
hlt
stos
ja
sub
ljmp
dec
outsl
in
ljmp
cmp
dec
aad
cmp
iret
push
mov
ljmp
xchg
sti
add
je
sbb
jmp
jecxz
in
xchg
inc
scas
jmp
xchg
shll
scas
mov
test
incl
call
aaa
loop
data16
ljmp
jns
pushl
decl
xor
pop
cs
call
stc
xlat
pop
xor
dec
sub
js
pop
lahf
addl
ljmp
outsl
ja
add
jmp
insb
dec
fsts
lcall
incl
decl
dec
aas
pop
mov
call
clc
adc
sbb
ss
pushl
push
decl
repz
jno
and
call
les
xchg
dec
das
or
ljmp
xchg
cmovns
adc
shll
iret
addr16
mov
rclb
test
lcall
insb
and
lcall
decb
call
jmp
call
or
ds
outsb
mov
and
dec
pusha
cli
push
ret
popf
out
cmp
cmp
push
aas
ss
ljmp
pushl
pushf
xor
pop
adc
jp
mov
cmp
xor
add
flds
adc
mov
rcrl
sub
ljmp
sub
lcall
sub
jmp
addr16
call
xlat
and
jmp
call
and
pushl
scas
add
loopne
out
xchg
mov
pop
cmp
in
push
jbe
ret
xchg
sahf
xchg
jb
jmp
mov
rorb
stos
fnsave
and
ss
pusha
mov
incl
loope
fnstsw
call
shlb
dec
aad
mov
cltd
xchg
test
ljmp
lcall
pushf
mov
pop
and
mov
or
int3
int3
scas
jmp
shlb
lcall
mov
and
call
inc
mov
pushl
repnz
test
decl
mov
decl
dec
gs
fld
bt
sub
call
jge
jmp
sub
lcall
cmc
out
roll
cmp
call
loop
loopne
fmulp
jecxz
lock
cli
out
cmp
jmp
test
dec
mov
fsts
outsb
mov
xor
cmp
xor
cmp
popf
mov
incl
cmp
decl
cmpsl
bnd
xor
or
incl
decl
ret
insl
int
xor
pushl
xchg
nop
ljmp
enter
inc
cmpsb
jmp
dec
shl
in
cmp
loop
push
mov
push
mov
pushf
and
lcall
adcl
decl
lea
fwait
imul
pop
sbb
decl
jge
imul
pop
lock
sbb
popa
int3
sub
dec
out
jle
cltd
push
dec
iret
popf
int3
inc
adc
js
lods
decl
lcall
js
push
or
ljmp
lcall
cmp
decl
leave
fmull
lcall
jmp
push
dec
sub
push
mov
test
decl
nop
cmpsl
scas
call
lcall
decl
fstl
cmpsl
rclb
xchg
mov
mov
jmp
push
popa
cmp
out
into
adc
sub
mov
sbb
jmp
arpl
inc
sub
lcall
lret
adc
xor
fwait
inc
scas
mov
cltd
int
cltd
cmc
dec
adc
call
fmull
call
or
call
xchg
inc
popf
pop
and
jge
push
jae
and
lcall
mov
sti
lods
push
jp
mov
ljmp
movsl
pushf
fidivl
sub
incl
mov
lret
jge
repnz
call
fsubs
dec
pop
int3
cmp
loopne
xor
imull
ja
ficompl
mov
push
mov
fs
insb
mov
mov
fwait
pop
loop
loope
lcall
mov
fimuls
jl
inc
loopne
ljmp
or
int
cmp
mov
in
pusha
push
fimull
xchg
in
andl
rolb
fcomps
and
lods
lods
outsl
cmp
jno
pushl
mov
nop
cmp
fs
cmp
decl
fnstsw
rolb
jmp
outsl
dec
rcrl
call
test
incl
ljmp
out
imul
decl
pop
pop
jbe
push
xor
lcall
adc
adc
fists
test
decl
jmp
xlat
mov
incl
mov
inc
sahf
daa
popf
dec
sbb
pushl
pop
xor
cmpsb
ljmp
cmp
cmp
lcall
pop
cmpsl
int3
int3
popa
mov
int
push
push
sbb
lcall
inc
push
decl
rorl
ljmp
push
decl
shl
pop
sbb
adc
mov
pop
aam
pop
sti
aas
xchg
jae
clc
xor
and
inc
cmpsl
cmp
jmp
xchg
inc
ja
in
jne
call
push
rcl
mov
xlat
pop
repz
roll
lcall
and
sahf
xor
mov
lcall
cs
decl
sub
pushl
and
adcl
inc
div
sbb
jmp
cmpsb
incl
lcall
leave
rcrl
pushl
aaa
push
ljmp
xchg
cs
jmp
sahf
arpl
jmp
xchg
movsl
mov
lcall
jae
mov
push
sub
mov
ret
adc
in
les
shll
rcr
xlat
pop
sbb
sub
lcall
imul
lea
inc
data16
fcmovu
fst
cmp
decl
call
jnp
xchg
incl
rolb
call
fildl
movsl
xchg
pushl
dec
inc
jp
xor
jbe
stc
stc
insl
std
out
fwait
lods
in
movl
call
add
incl
xor
inc
ret
pushl
incl
bound
incl
dec
push
lcall
outsb
sbb
out
jmp
es
ljmp
xchg
dec
xchg
decl
cmpsb
mov
call
call
inc
inc
insl
sub
pushl
sbb
fistps
lret
inc
and
sti
cmc
pop
cmp
incl
adc
xchg
in
jns
adc
sbb
stc
or
decl
push
icebp
ret
jb
lea
push
jns
in
loop
add
incl
bound
cmp
dec
xor
psrld
jmp
xchg
movsl
cmp
inc
mov
ljmp
sub
pushl
jo
or
xchg
bound
push
cs
jle
jmp
shll
incl
test
call
lret
pop
jb
outsb
mov
call
test
jbe
sub
or
adc
push
cmp
jmp
adc
add
jmp
test
out
xor
jno
xor
cmp
jno
repz
dec
pop
sbb
fmull
mov
repz
sti
ljmp
jbe
inc
int
in
and
incl
cwtl
rcrl
pop
dec
loopne
movsl
cmp
addl
sarb
pushl
ljmp
xchg
jmp
decl
decl
push
ret
mov
lods
jmp
bound
mov
inc
mov
push
cwtl
mov
pushl
in
and
jmp
cmp
call
dec
pop
ja
mull
nop
int3
pop
out
in
pop
aam
call
cwtl
arpl
adc
dec
add
ljmp
incl
test
popf
iret
sahf
xlat
lret
decl
jmp
ljmp
fmul
fsubl
cmp
or
fsubrs
dec
and
jmp
popf
add
cmp
or
call
inc
xor
incl
call
inc
inc
xchg
daa
pop
clc
loope
inc
fnstsw
mov
inc
jecxz
cmp
stc
out
data16
pushl
inc
sub
pop
imul
in
jecxz
mov
shrb
cltd
fsubl
inc
lahf
cmp
push
hlt
pop
push
aas
dec
pop
mov
incl
dec
outsl
jns
in
cmp
fistps
jno
ljmp
pushl
xlat
fimuls
mov
decl
mov
adc
out
mov
add
lcall
popf
repz
adc
cld
ljmp
subl
bound
push
dec
mov
call
test
popf
sub
and
ljmp
sbb
incl
inc
test
jmp
xchg
int
and
lret
dec
rcl
xor
cwtl
dec
and
incl
call
or
ljmp
lcall
int3
lods
popa
fsts
pop
dec
aad
add
decl
sub
decl
mov
jmp
mov
xor
jge
add
xchg
mov
ljmp
ljmp
notb
or
call
mov
pushl
insl
sub
inc
jl
sbb
testb
sbb
dec
dec
and
xchg
jmp
adc
in
sbb
outsb
daa
inc
aad
lcall
or
fwait
xor
push
inc
mov
pushl
push
add
rorl
decl
incl
rcl
xchg
mov
lcall
jg
cld
es
lcall
pusha
mov
push
add
enter
push
pop
sub
decl
xor
insl
jmp
repnz
jmp
call
dec
sti
lret
xchg
clc
dec
fs
out
in
adc
sbb
cwtl
out
sarb
call
sub
incl
in
push
adc
aaa
pop
insl
out
adc
mov
cmp
adc
xchg
lds
loopne
add
incl
jmp
call
inc
cld
je
into
and
lret
inc
jnp
jmp
call
call
cmp
das
xchg
jmp
out
push
xlat
iret
inc
ljmp
pop
mov
rcrl
fmuls
pushl
leave
ret
fsts
ficoms
adc
adc
aas
sbb
mov
movsl
mov
cmc
cli
rcll
jp
inc
ljmp
jp
std
iret
shrl
lcall
jns
mov
pushf
lock
lcall
xchg
mov
sub
jmp
xor
call
pop
jecxz
fsubr
repnz
call
es
incl
sbb
test
call
in
and
out
pop
xor
adc
call
lret
mov
pop
jno
jge
push
iret
adc
fcompl
mov
insb
jmp
aam
mov
ss
in
pusha
mov
pop
mov
ljmp
push
push
push
inc
arpl
add
int3
jns
mov
aad
fmuls
sbb
fsubl
bound
push
xor
je
imul
adc
frstor
stos
sub
and
je
lock
lcall
pushf
mov
push
cmp
call
faddl
test
iret
push
shlb
imul
pushl
adcl
dec
inc
adc
and
incl
aas
push
je
mov
decl
incl
jb
sub
incl
pushl
xchg
jbe
add
call
test
lea
ljmp
sub
incl
push
ror
cmp
lods
std
clc
cmpsl
adc
dec
mov
icebp
add
sub
ret
ficoms
ljmp
iret
push
inc
mov
decl
jl
pop
xchg
or
decl
aam
xchg
fisubs
pushl
loope
or
push
imul
fmulp
and
pushl
arpl
inc
xchg
out
ret
fdivrs
jle
jp
cmp
aaa
addl
es
out
cmovge
loopne
pop
ljmp
fildll
push
decl
dec
cmp
mov
shlb
lcall
call
lcall
ljmp
jle
negb
push
push
jl
pop
int3
dec
test
xchg
mov
in
scas
jmp
ljmp
jmp
push
fs
call
add
repnz
pop
adc
nop
movsl
cmpsb
ljmp
ss
arpl
pop
movsl
out
movsl
ss
repz
repz
pop
dec
push
pop
adc
mov
ljmp
xor
incl
out
out
das
cmpsb
call
jmp
inc
cltd
stc
popa
fdivrl
adc
adc
mov
dec
mov
mov
repz
bound
loop
mov
add
pushl
ljmp
ja
push
pop
add
cmp
test
jmp
shlb
scas
jge
sub
decl
outsl
decl
sti
jmp
adc
popf
aaa
add
adc
scas
mov
pmulhuw
push
popf
cmp
or
push
mov
mov
ljmp
dec
jl
xor
jae
sbbl
push
mov
divb
and
jmp
mov
inc
pusha
clc
xchg
clc
fsubrs
push
push
incl
ljmp
sti
mov
outsb
js
jno
outsl
hlt
popf
or
cld
fs
mov
jo
out
adc
add
dec
sahf
pop
divb
call
and
mov
jg
mov
mov
std
iret
fstpt
rcll
cmp
incl
js
inc
shrl
cmpsl
ja
jle
ds
ljmp
jge
cmp
lcall
xchg
dec
loopne
test
ljmp
add
decl
lcall
jmp
and
lcall
cld
jmp
pop
xor
test
jmp
cmp
in
int3
jecxz
dec
pop
cmp
push
movsb
aas
rorl
aas
movsl
inc
pop
xor
jmp
outsl
inc
or
jmp
fwait
dec
inc
lret
pushl
mov
decl
dec
std
xor
dec
bound
mov
pushl
sub
call
imulb
mov
fs
cmpsl
dec
cwtl
shlb
add
jmp
push
adc
push
xor
lea
or
incl
push
or
jmp
sub
call
lock
add
decl
mov
mov
add
inc
test
imul
pusha
cmp
push
pop
mov
call
dec
xor
fistl
jecxz
scas
cltd
mov
std
or
pushl
dec
dec
out
outsb
mov
adc
mov
adc
shlb
ljmp
aas
mov
xor
call
mov
aam
ja
cmpsb
ljmp
adc
call
cmp
or
xor
bound
fildl
dec
std
insl
mov
inc
rclb
idivl
fildl
int3
leave
les
call
jmp
sar
push
mov
loop
cli
add
cld
inc
push
sbb
sbb
into
jmp
adc
inc
or
outsl
arpl
test
cltd
jnp
adc
cmpsl
push
mov
lcall
mov
mov
push
sar
mov
cltd
inc
pushf
dec
scas
incl
incl
inc
lret
rcll
xor
xchg
pop
xchg
cs
lcall
cmpsb
ljmp
incl
dec
mov
push
lret
fildll
int
fnstcw
clc
jno
or
jmp
jge
mov
adc
pop
inc
clc
stc
leave
lea
sub
or
push
insl
xor
jmp
decl
loopne
movsb
pushl
std
push
mov
xchg
mov
xor
rcrl
pushl
mov
stc
rcrb
jmp
call
mov
sbb
ds
lcall
decl
pop
icebp
sbb
fidivrl
gs
adc
lret
inc
aaa
loopne
push
fsubrs
call
adc
mov
ljmp
repnz
dec
int3
clc
fadds
incl
pushl
add
xchg
pop
mov
jmp
aas
test
mov
daa
repz
push
popa
fisubl
in
cmp
pushl
incl
incl
mov
ljmp
cmp
call
pushl
fimull
cmpsb
fistps
mov
subl
xor
sub
decl
push
ret
int
out
push
les
lret
enter
pop
icebp
sub
xchg
mov
mov
dec
in
xchg
mov
mov
cmp
jns
dec
or
push
shrb
cmp
in
pushf
in
pushl
jns
stos
call
jbe
aaa
ja
xor
loop
sub
popf
jnp
decl
cmp
jge
stos
jecxz
es
mov
call
inc
sar
push
enter
dec
fwait
push
call
cmp
dec
faddl
jmp
call
decl
pop
or
jge
push
inc
mov
or
jle
call
mov
jmp
mov
incl
out
jmp
pushl
push
or
sti
es
jns
lcall
push
pushl
mov
decl
ljmp
repnz
out
jge
mov
call
je
fdivrs
rcl
jmp
ja
xor
pop
jbe
inc
out
jmp
lea
and
loopne
inc
stos
decl
addr16
push
mov
icebp
inc
mov
pop
inc
adc
jbe
xchg
inc
pop
pop
add
mov
decl
jmp
mov
stos
ljmp
fisubrs
add
jnp
inc
popa
rcll
mov
xchg
ljmp
cmpsb
push
aam
stos
int
fistpl
jecxz
pop
es
pushl
sbb
and
ljmp
cmpsb
pushl
out
mov
lea
pushl
pushl
insl
adc
jo
decl
sbb
jnp
ds
popa
mov
call
mov
lcall
adc
mov
jnp
pop
cmp
incl
pushl
call
adc
mov
outsb
pop
mov
sti
movsb
in
shlb
aaa
aad
call
cmp
cmp
jl
clc
mov
movsb
lcall
ljmp
xor
in
cmp
call
pushfw
pushf
fisubrl
push
pop
sbb
mov
pop
mov
xchg
fsubl
pushf
push
adc
ret
or
pushl
xchg
xchg
repz
fsubs
loopne
xorl
ljmp
adc
mov
incl
cwtl
and
ljmp
pop
inc
pop
scas
jbe
xlat
dec
std
push
adc
or
clc
and
fdivl
ficoml
lcall
push
mov
call
loopne
fadds
jmp
popf
hlt
call
push
gs
jl
mov
xor
test
lcall
aam
jnp
call
les
stc
mov
mov
shlb
mov
or
test
incl
lret
push
add
test
stos
ljmp
lcall
fsubrl
lcall
out
das
fcoms
outsb
xor
xchg
push
enter
push
call
or
call
icebp
fmull
jnp
aas
js
cmp
adc
ror
xchg
mov
mov
adc
xchg
call
les
jecxz
decl
bound
ljmp
adc
stos
lcall
imul
call
xchg
lds
aaa
mov
xor
fstpt
xor
lret
ret
mov
lcall
cmp
push
bound
incl
sbb
movsb
incl
ljmp
cs
jp
sub
dec
movsb
incl
ljmp
aad
jb
pop
roll
aas
add
push
adc
mov
daa
aam
lcall
push
pop
mov
js
rorb
call
adc
mov
mov
inc
inc
aad
fsub
mov
dec
imul
xchg
not
ljmp
daa
push
push
jmp
mov
lcall
decl
jns
aad
xchg
sbb
xchg
mov
mov
jp
pop
leave
ret
mov
push
cmp
incl
popf
push
push
ljmp
xchg
mov
decl
mov
enter
lods
push
ficomps
jb
sub
call
mov
popf
cmp
sti
repnz
incl
xor
aaa
mov
rcrb
mov
lcall
aaa
iret
loope
mov
pushl
sbb
cmp
sub
lds
mov
scas
call
incl
stos
incl
sar
popf
clc
data16
lcall
inc
pop
and
jnp
jmp
xor
sbb
test
incl
cwtl
mov
inc
popf
cld
push
jecxz
inc
out
and
dec
mov
das
in
lcall
incl
lret
dec
cmp
dec
xchg
mov
enter
sub
lods
das
cltd
call
call
add
loope
aad
decb
pcmpgtd
insl
mov
push
sarb
shl
inc
and
jmp
decl
push
rcr
sbb
cmpsl
gs
bound
xor
ljmp
decl
into
sbb
sbb
into
add
xor
addr16
mov
sub
lcall
stc
lods
ljmp
mov
push
push
pop
pop
add
lcall
incl
xor
hlt
jo
icebp
lock
push
incl
fs
lea
pop
jb
push
mov
cs
ljmp
pushl
xchg
loop
in
adc
pop
mov
inc
into
imul
push
adc
popa
inc
add
pushl
cmp
mov
decl
incl
ja
dec
lahf
sub
decl
outsl
les
dec
cmp
or
clc
iret
out
push
incl
cmc
mov
rol
jle
pop
lret
decl
cmp
xchg
addr16
notl
sbb
ljmp
rolb
cmp
imul
dec
pop
test
lcall
sub
ljmp
stos
pushl
in
rcll
mov
mov
or
rolb
sbb
lcall
fcmovu
das
int3
push
mov
repnz
mov
fstpt
and
sub
ljmp
xor
lcall
sahf
jg
movsl
xchg
loope
pop
ja
dec
jno
lea
dec
fnstcw
push
pop
jnp
mov
call
sub
pop
xchg
or
call
xchg
or
ljmp
jo
mov
push
sub
call
ljmp
push
cwtl
mov
mov
jbe
push
mov
insb
clc
pushf
ret
lahf
push
cmp
jmp
iret
jo
dec
int3
pop
jmp
dec
scas
mov
ljmp
jmp
fnstenv
dec
inc
popa
mov
cmp
inc
pusha
movsl
sbb
lret
mov
decl
mov
ljmp
lcall
je
push
lret
jmp
mov
jns
pushl
cli
btsl
mov
aam
fistps
jge
adc
mov
mov
jnp
push
ljmp
sub
call
jmp
cmp
jmp
call
mov
jle
jmp
push
mov
adc
or
call
aam
mov
jns
outsb
daa
mov
fcomip
enter
jg
or
lcall
mov
call
decl
into
es
call
or
call
mov
data16
out
push
add
call
jb
jle
lds
int3
sub
mov
cmpsl
lock
pop
sbb
jmp
inc
xchg
out
mov
mov
out
mov
ljmp
test
incl
jmp
add
lcall
pop
popa
push
add
lcall
stc
mov
call
cmp
pushl
lcall
icebp
cld
repz
pusha
test
pop
and
stos
xchg
jmp
in
loop
out
sbb
repz
icebp
pushf
cmp
fdivl
icebp
adc
jge
lods
jmp
cmpsb
call
shrl
jl
mov
inc
inc
pop
pop
mull
lcall
push
pushl
aaa
rol
loop
push
push
das
and
incl
and
mov
sbb
