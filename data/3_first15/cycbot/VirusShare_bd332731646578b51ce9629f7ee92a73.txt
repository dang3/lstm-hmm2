adc
loopne
push
add
dec
push
add
repnz
mov
pusha
add
les
movsb
add
xchg
add
idiv
movsl
icebp
ret
mov
dec
xchg
repz
dec
xchg
add
dec
push
push
cmp
sbbl
inc
add
add
mov
out
int3
pop
jge
nop
add
push
add
dec
inc
enter
adc
ret
jg
rorl
ljmp
push
ret
rolb
mov
and
mov
cmpsl
mov
notl
add
movb
add
sub
out
insb
cmpsl
adc
rolb
xchg
or
hlt
add
movsl
aaa
adc
les
inc
add
and
mov
xor
xchg
add
add
add
aaa
std
fcmovnbe
add
bound
mov
pop
and
mov
movb
mov
mov
sub
push
int3
cmp
lahf
jb
fists
xchg
mov
add
add
mov
push
add
mov
add
add
pop
test
mov
les
insl
push
sbb
add
adc
add
add
movsb
add
add
adc
mov
push
loope
test
mov
das
fisttps
insb
sub
xchg
add
cltd
xor
xchg
lret
outsb
jmp
pop
mov
in
ficomps
loop
cli
cmp
stos
xor
fcomp
dec
cmc
and
or
imul
xchg
add
in
pop
icebp
and
mov
std
lods
jl
pop
mov
mov
xor
jg
xchg
add
push
jo
loopne
xor
adc
add
add
mov
sbb
lea
add
dec
mov
jne
dec
dec
data16
lea
mov
pop
jns
add
lret
pushf
mov
jmp
add
mov
dec
dec
push
sub
add
add
roll
jb
and
jae
sbb
xor
add
xchg
pop
fistl
jl
sbb
sub
outsb
mov
ds
test
push
xchg
ret
dec
dec
orl
insb
or
or
and
add
jo
or
bound
mov
dec
mov
fimull
gs
pop
pop
out
cmc
sub
mov
jle
in
lods
lret
xor
addb
arpl
mov
adc
cli
cld
leave
movsl
jno
pop
dec
in
jbe
dec
aaa
aaa
xchg
push
adc
iret
movsl
xor
pop
pop
sbb
addb
movsl
xlat
into
insb
insb
sbb
aas
adc
mov
jl
xchg
xor
push
sub
add
mov
add
push
adc
pop
fwait
mov
add
and
cwtl
dec
cld
testb
cli
andl
int3
mov
movsb
add
repnz
pop
jmp
add
add
mov
aam
or
shll
lock
ljmp
stc
fprem1
popa
out
rolb
icebp
mov
mov
add
add
add
lds
mov
int
test
add
jne
add
add
push
add
repz
add
mov
or
fstpl
add
inc
add
mov
jae
add
add
rcrl
pop
dec
mov
add
sub
fcoms
add
dec
insl
xlat
pusha
add
add
movsl
mov
add
jns
andl
lcall
nop
add
add
add
add
in
mov
fwait
or
jl
and
aam
sub
add
add
cli
hlt
add
add
jo
add
jae
out
xchg
add
add
movb
cmp
push
das
adc
scas
fistpll
int
mov
loope
gs
add
data16
mov
add
xchg
xchg
cmp
push
dec
in
xchg
aas
inc
push
popa
rolb
and
and
jns
in
les
xor
incb
and
and
add
add
add
and
out
mov
add
add
xor
movsb
add
ret
cltd
xchg
jg
mov
lcall
dec
push
nop
add
add
xor
int3
mov
push
add
add
jno
mov
aam
add
addb
outsb
in
add
mov
pop
xchg
add
fnstenv
aaa
movb
add
add
mov
push
add
mov
mov
sub
pop
ret
stos
add
ljmp
mov
add
fcomip
pop
data16
jl
add
push
add
out
add
scas
int
add
fcmovu
jbe
add
test
andl
test
test
add
add
jns
push
add
aad
les
push
add
pushf
addb
add
or
add
outsl
aas
add
jo
enter
xchg
push
add
cs
or
ds
add
std
fstl
add
sbb
add
dec
cmp
add
incl
push
push
add
ret
add
shrl
cmp
add
in
jnp
add
mulps
add
in
and
add
pop
lea
das
adc
ljmp
cmp
pop
add
push
mov
xor
in
add
add
add
outsl
jp
add
mov
xor
dec
iret
jo
xchg
sbb
cs
xlat
mov
or
lds
add
andl
xchg
add
mov
mov
mov
mov
add
add
adc
push
add
cwtl
xchg
add
mov
dec
cmp
lcall
add
and
jl
add
fildll
cld
cmp
call
mov
lret
or
add
sbb
add
sub
mov
fucomi
sub
lahf
dec
mov
jnp
add
fcmovbe
popf
and
mov
addb
adc
scas
fildll
mov
daa
push
lret
daa
ljmp
test
mov
mov
add
add
pop
xor
inc
mov
lock
testb
jle
xor
rolb
push
add
xor
and
mov
xor
cmp
mov
mov
sbb
jp
cld
mov
add
add
popa
pop
push
add
pop
leave
test
enter
add
sbb
dec
or
push
add
push
add
sbbl
jo
adc
filds
add
dec
mov
cltd
mov
into
cmp
cmp
lock
cwtl
mov
mov
in
jns
mov
and
pushf
add
add
and
cmp
lcall
aaa
rolb
push
out
loopne
mov
fisttps
add
in
adc
dec
cmp
out
add
bound
mov
mov
insb
push
add
add
sub
add
mov
add
loope
pop
and
les
rolb
mov
add
cmp
sub
add
jbe
xor
jmp
fisttps
loopne
cmp
add
cwtl
imul
adc
loope
add
or
add
shrl
std
and
or
cwtl
jp
mov
and
mov
add
add
add
roll
xchg
add
aaa
and
mov
loopne
or
sti
sti
jnp
aas
sub
add
mov
add
add
jmp
cmp
jnp
jecxz
mov
aad
aaa
adc
cli
mov
add
or
rorl
loop
jecxz
pop
sbb
sbb
popa
and
mov
add
dec
xchg
push
fstl
dec
xor
in
add
stos
push
add
fisttpll
repz
or
add
lret
add
add
add
add
push
add
ja
add
add
int3
in
sbb
gs
xchg
jg
sub
add
add
xor
add
sub
scas
mov
add
add
adc
stc
idivl
inc
jl
add
mov
cltd
ds
stos
out
xchg
nop
add
dec
cmpsb
add
out
fcomps
mov
mov
js
xchg
add
push
shll
insb
ret
mov
pop
push
add
add
add
sub
jae
xchg
mov
stc
mov
dec
or
add
add
or
out
add
add
sbb
addb
add
push
add
enter
imul
and
mov
sub
xchg
jne
add
add
test
int
repnz
nop
add
inc
mov
sbb
incl
push
jg
imul
scas
push
mov
and
mov
incb
add
enter
jge
xchg
add
out
push
add
popa
pop
arpl
add
add
cmc
dec
loopne
imul
lret
test
mov
test
adc
testb
cmp
cmp
add
and
mov
stos
loope
add
hlt
add
scas
sbb
ljmp
add
add
push
mov
xor
dec
notl
rolb
mov
cltd
mov
hlt
add
xor
jnp
mov
xor
add
dec
inc
add
add
sysenter
add
sbb
dec
and
mov
movsb
add
add
out
cmp
add
jb
and
jge
cmp
fnstsw
add
add
mov
insl
adc
jo
out
stos
neg
and
mov
hlt
cmp
sbb
xchg
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
cmp
dec
enter
dec
fcomip
xor
addb
add
sub
les
jb
stc
and
cmpsl
hlt
add
push
add
sub
in
clc
push
mov
dec
fimuls
addl
adc
pusha
add
add
pushf
mov
add
push
pop
xchg
les
outsb
aad
repnz
and
mov
sub
sub
add
add
and
pop
sub
scas
pop
push
add
dec
cmpsb
add
fucomi
or
testb
out
xorl
push
add
mov
add
add
loop
iret
dec
fwait
stos
aaa
fldcw
add
dec
fisubrs
cld
xchg
lret
mov
add
add
mov
cmp
mov
bound
mov
mov
cmpsb
add
out
sbb
cmpsl
nop
add
add
add
add
sbb
bound
mov
mov
add
fdivl
add
add
decb
ljmp
add
inc
pop
xchg
dec
add
pop
out
dec
cmp
mov
pop
arpl
data16
ljmp
sbb
add
add
mov
lods
add
add
loopne
hlt
add
aad
or
xchg
add
add
mov
mov
lods
and
add
js
add
add
lahf
push
add
cli
arpl
add
add
ret
fisttps
js
and
mov
xchg
add
xchg
cmp
cmp
add
leave
push
add
and
mov
add
add
fstpl
aam
loop
add
jl
add
add
aam
xchg
add
cwtl
test
popa
sbb
aas
test
int
inc
inc
add
iret
inc
test
das
adc
dec
test
add
lret
inc
insl
mov
add
sti
out
ljmp
loop
jg
add
rolb
pop
leave
fdivrs
jb
inc
add
pop
jno
cmc
inc
add
add
mov
stc
addb
inc
aad
add
mov
xor
mov
inc
mov
imul
imul
add
lcall
xor
add
ljmp
lock
test
jmp
add
insb
addb
jae
add
jp
adc
roll
and
mov
ja
jne
aam
scas
dec
push
add
gs
ficomps
mov
xor
lock
lret
add
add
cltd
call
add
add
add
push
iret
and
rolb
xchg
hlt
add
adc
cs
stc
xchg
jp
dec
ret
inc
add
aas
xchg
add
cwtl
or
jle
testl
pop
dec
decb
add
xor
xor
cmp
lods
jmp
jecxz
cwtl
mov
jo
mov
add
and
xchg
std
mov
add
push
add
adc
in
add
add
pop
inc
add
add
sub
add
lods
fistpl
cmp
add
add
add
mov
inc
push
add
add
inc
add
pop
mov
pop
or
rolb
movsl
rolb
mov
xor
pop
and
sbb
add
aaa
lret
into
add
cmp
xchg
out
dec
loope
add
jnp
or
mov
pop
cmp
adc
lods
xor
jae
cmp
insb
enter
pop
fisttpll
and
add
jno
jg
sbb
xchg
add
push
inc
add
cmp
les
dec
pop
cmc
lret
test
je
or
rolb
mov
push
mov
ss
ret
lods
popa
lods
jle
ja
test
mov
ljmp
add
repnz
fsubrl
inc
jg
push
out
add
jle
add
push
sti
mov
adc
les
push
add
and
insb
xchg
mov
inc
repnz
push
cs
movb
pop
push
cli
popf
adc
push
add
pusha
add
add
testb
add
cmp
add
lds
inc
add
cmp
ficoml
inc
pop
or
add
test
fisttps
jb
subl
pop
mov
inc
test
addb
outsl
add
push
add
lret
imul
rolb
add
inc
and
mov
push
add
add
cmp
xor
fcmovbe
add
pop
mov
cld
cmpsl
mov
add
stc
inc
daa
inc
mov
aam
mov
add
sbb
sub
ret
add
aas
mov
rcrl
add
mov
cmp
push
jae
out
das
testb
adc
inc
add
sub
add
push
add
fwait
jb
xchg
add
mov
cmp
sub
xor
imul
shrl
mov
jle
int
arpl
jmp
xchg
rolb
sbb
add
das
pushf
sbb
add
sbb
adc
rolb
lret
imul
jmp
add
sbb
fwait
pop
xor
je
dec
stos
mov
or
int3
pop
lret
add
mov
jns
add
add
mov
mov
adc
sub
cli
sub
scas
ficoms
add
mov
or
addr16
add
add
fistpll
je
cli
add
add
add
shl
add
add
mov
popf
lea
dec
inc
mov
repz
insl
dec
shll
sbb
stos
or
add
or
add
mov
stc
inc
add
add
add
add
pop
adc
out
cmp
add
scas
fstl
sbb
loope
add
js
add
add
scas
cmp
mov
pop
iret
xchg
push
mov
jns
add
das
or
lock
add
adc
mov
loope
add
repz
inc
dec
cmp
jno
jg
add
pop
insb
jo
ficoms
sbb
add
rolb
jg
cs
mov
mov
add
inc
push
mov
mov
add
out
pop
leave
xchg
add
add
sti
ret
dec
test
cwtl
mov
mov
adc
stc
push
dec
rcrl
imul
lahf
add
push
add
pop
jle
popa
insl
int3
or
sbb
sub
add
add
or
pop
rol
loopne
inc
mov
and
mov
mov
lret
jl
and
adc
add
mov
mov
xchg
add
push
add
cs
mull
mov
daa
cmp
jge
cwtl
pop
adcl
and
add
add
push
add
das
popa
inc
add
add
add
movsl
std
ret
add
or
out
add
fimull
ficomps
add
add
mov
add
sbb
dec
pusha
add
adc
add
rolb
lods
cli
xor
and
mov
sub
loope
add
add
sub
add
add
mov
jb
shl
inc
movsl
cli
push
xchg
inc
add
loopne
pop
pop
xchg
add
sbb
sbb
add
mov
outsb
cli
xor
lea
add
into
jecxz
add
mov
into
xchg
mov
enter
sub
and
add
xchg
ja
sub
mov
dec
pop
xchg
movsb
add
push
inc
add
cmc
leave
inc
add
add
lods
out
dec
push
add
add
and
mov
imul
lods
repz
mov
add
and
add
xchg
add
aaa
or
push
add
je
sbb
xor
sbb
add
add
insl
cwtl
jg
jns
add
add
in
or
add
jp
pop
daa
sub
add
sbb
adc
jb
xor
insb
cltd
data16
cmp
fsubrl
add
push
mov
jbe
mov
add
testl
cmp
dec
mov
mov
add
mov
je
fldenv
add
int
add
or
add
jnp
rolb
xor
add
mov
mov
movsb
add
cmp
dec
rolb
mov
in
mov
aas
pop
cs
cmc
push
cmp
add
add
add
sbb
xchg
add
push
lods
push
add
in
and
daa
push
add
add
push
jnp
cltd
mov
add
jne
add
sub
lock
lods
xchg
add
pusha
add
jo
jb
test
fsubrs
mov
push
add
rolb
out
mov
adc
ljmp
imul
mov
or
std
mov
add
hlt
add
mov
pusha
add
loope
mov
add
mov
sub
add
add
add
cld
js
add
push
add
add
add
or
add
pop
mov
ljmp
fcompl
insb
or
rcll
mov
mov
aam
jl
add
mov
leave
xchg
pop
push
cltd
outsl
xor
mov
lcall
sub
popa
push
inc
push
in
rolb
xor
add
loopne
out
mov
pop
pop
in
addb
mov
jno
pop
adc
xor
add
add
adc
adc
addb
repnz
add
jo
mov
js
bound
mov
dec
ja
adc
mov
nop
add
add
scas
jbe
fwait
imul
cmp
add
add
push
sbb
cmp
add
imul
icebp
mov
pop
call
add
add
mov
add
adc
xor
add
xor
out
mov
and
ljmp
arpl
add
add
pop
push
outsl
push
hlt
add
jne
xchg
add
aaa
mov
out
xchg
add
shll
add
mov
lcall
sahf
jle
add
add
lcall
imul
dec
icebp
movb
out
add
add
jmp
jp
add
add
andl
sti
sbb
jg
add
and
mov
add
lret
pop
out
add
pop
mov
push
jns
inc
add
mov
add
or
add
addl
jg
sti
outsb
cmp
dec
jle
sub
add
add
dec
cmpl
add
dec
mov
add
pop
adc
add
lcall
adc
xchg
add
aad
add
cmpsb
add
add
xchg
add
jmp
ret
inc
add
jmp
add
cmp
repz
popa
ds
nop
add
les
pop
sub
jno
add
add
add
inc
test
repz
add
add
add
add
pop
mov
xchg
jge
add
push
add
in
stc
adc
pop
xor
cmpsl
insl
je
jne
mov
mov
mov
add
test
data16
add
lock
jmp
shrl
pop
hlt
add
push
aas
arpl
add
jecxz
outsl
dec
inc
add
and
dec
push
add
and
dec
mov
out
jecxz
movsb
add
pop
fidivs
add
fcompl
cs
add
xor
or
bound
mov
cmp
sbb
sub
add
add
cwtl
add
mov
add
xchg
add
add
fwait
xchg
xchg
add
add
fsubrs
add
mov
je
fisttps
jnp
je
jecxz
aas
pop
shl
lods
and
in
cwtl
inc
add
push
arpl
insb
mov
fidivl
popf
sub
mov
add
repz
lock
add
add
mov
add
push
or
fs
dec
insl
in
test
loope
hlt
add
mov
or
dec
fimuls
or
sti
scas
insl
jmp
jmp
add
xchg
sti
mov
aam
push
lock
lods
push
add
fst
add
dec
lcall
jecxz
fsubr
pop
xor
iret
pop
in
jle
adc
mov
leave
out
orl
ret
xor
pop
mov
add
out
test
sub
pusha
add
mov
mov
inc
pop
lcall
add
lret
into
cli
xchg
nop
add
ja
mull
add
out
les
push
mov
cmp
sbb
adc
sub
fsub
add
push
add
rolb
adcl
mov
js
decl
add
add
add
xchg
add
add
mov
xchg
add
mov
hlt
add
les
daa
jo
imul
push
add
dec
testl
adc
push
mov
pop
mov
rcrl
mov
dec
shr
add
enter
sbb
add
add
mov
lcall
add
dec
insl
std
mov
int
xchg
and
mov
out
outsb
xchg
nop
add
fstpl
inc
scas
mov
add
notl
dec
cmpsb
add
add
xor
loop
popa
arpl
jae
add
cli
fbstp
mov
sub
xor
sbb
lds
add
add
in
pop
mov
add
add
lds
mov
add
testb
nop
add
add
push
add
je
loope
add
fists
add
fwait
sub
dec
xor
add
pushf
add
xor
add
mov
add
xchg
cmp
add
xor
pop
addb
add
add
lahf
pushf
setns
bound
mov
rolb
pop
out
scas
sub
les
into
sbb
add
add
or
add
out
add
jb
testb
add
jmp
das
lds
add
cmp
mov
add
mov
mov
sbb
add
cmp
fldt
inc
scas
mov
and
loop
jmp
mov
push
sti
imul
mov
test
loopne
pushf
loopne
ffreep
mov
xlat
fdiv
adc
mov
test
push
xor
lahf
adc
fisubl
loope
add
cmp
inc
add
or
insl
inc
push
add
push
jb
sub
pop
push
add
add
aas
movb
add
lods
xchg
nop
add
sbb
in
sub
testb
push
mov
add
mov
add
xor
jno
pop
stc
pop
imull
rolb
jecxz
loopw
xchg
loop
int3
jle
mov
inc
add
or
add
inc
add
lock
jbe
testb
mov
or
sub
xchg
pop
sbb
ds
xchg
add
add
xlat
xor
dec
mov
add
mov
add
add
xchg
add
movsl
xor
dec
das
push
add
icebp
rcll
mov
sub
pusha
add
cmpl
add
rolb
addb
std
pushf
sbb
add
pop
cmp
mov
and
arpl
mov
aad
add
test
push
add
add
cmp
ljmp
adc
jle
pop
les
iret
mov
add
add
mov
sub
cli
aas
add
add
mov
cmp
decl
sub
xchg
add
add
add
mov
cmp
jge
arpl
mov
cli
mov
add
add
inc
add
dec
mov
insb
dec
cli
jl
pop
push
add
add
add
cmp
add
jo
cmpsl
loope
fimull
add
jnp
add
lds
mov
or
add
mov
cltd
sub
mov
negl
clc
jne
add
pop
pusha
add
rolb
xchg
add
in
inc
popa
icebp
int3
fs
cld
mov
adc
add
call
xor
test
sub
add
inc
add
add
sbb
adc
adc
pop
and
fcoml
jb
stos
dec
in
test
movb
push
sbb
in
imul
jecxz
int
adc
mov
pop
push
add
add
jmp
aas
stos
out
add
add
pop
add
testb
gs
stos
jno
mov
add
add
aam
leave
aad
clc
in
dec
scas
sub
mov
add
add
mov
add
add
loope
jl
add
outsb
rolb
pusha
add
mov
jne
add
pop
daa
test
test
add
outsb
push
iret
ja
dec
add
xchg
clc
push
test
and
mov
xor
bound
mov
lcall
int3
fcompl
lods
mov
push
mov
add
js
rolb
push
add
testb
add
fmull
and
mov
aaa
pop
fisttpl
push
add
jae
xor
pop
test
data16
lds
inc
add
cwtl
mov
add
out
outsb
mov
lds
add
inc
add
out
pop
or
cmpsl
xchg
push
add
fadds
dec
inc
testb
add
jmp
xchg
add
push
add
mov
rcll
aad
nop
add
and
into
xchg
adc
add
add
mov
stc
push
push
movb
add
add
pop
roll
add
scas
and
jnp
mov
push
add
xor
sub
mov
mov
test
sbbl
push
add
lods
loopne
and
mov
sub
pop
or
mov
sbb
mov
xchg
add
fwait
adc
scas
mov
add
inc
adc
or
mov
into
ret
lea
add
jns
add
xchg
dec
mov
jno
jl
fucomip
pop
stos
push
dec
xchg
and
sbb
lds
testb
int3
fwait
inc
add
stos
adc
add
aad
fstpt
in
cmp
aad
imul
fs
pop
repz
das
mov
jmp
or
and
mov
mov
gs
dec
lret
jbe
add
mov
dec
lret
in
pop
pusha
add
gs
icebp
mov
mov
add
loopne
lret
scas
pop
add
scas
push
add
idivl
jge
test
add
mov
add
fdivl
add
mov
add
dec
aad
add
add
adc
add
lea
add
add
add
mov
add
xor
bound
mov
add
repz
mov
gs
cmpsl
inc
add
add
movsb
add
xchg
mov
std
mov
mov
or
mov
je
lods
add
jmp
shll
mov
ret
mov
lahf
cmc
xchg
int
push
add
aad
jne
and
mov
mov
adc
jno
mov
icebp
xor
add
sbb
xchg
push
mov
push
into
mov
arpl
stos
mov
and
das
or
inc
pop
jnp
add
sub
je
scas
scas
jp
xchg
or
sub
out
in
lcall
jg
or
mov
adc
add
sub
mov
sub
pop
jnp
movb
add
add
cmp
aam
xchg
add
test
inc
add
data16
mov
add
lds
add
ds
sbb
shll
adc
add
xor
adc
mov
sahf
or
add
push
mov
test
test
add
mov
add
add
push
insl
lahf
popf
add
data16
fdivr
daa
jmp
add
hlt
add
std
repz
cld
sarl
and
mov
les
dec
sbb
xchg
jo
addr16
jb
data16
push
add
lret
sbb
scas
xor
cmp
add
jns
cmc
in
fcoms
hlt
add
ljmp
jmp
push
add
iret
mov
cmp
repnz
mov
aam
and
imull
mov
xchg
add
mov
push
subl
inc
mov
jnp
add
loopne
adc
fisttps
xchg
add
lret
jne
movsl
jno
mov
scas
xchg
and
xchg
adc
lds
mov
add
add
mov
add
mov
stos
xchg
mov
inc
add
add
fidivrs
addr16
pop
movsl
jp
add
add
daa
dec
xor
call
js
push
add
add
cld
xor
sub
xchg
add
rolb
movsb
add
mov
mov
add
dec
sub
add
ret
add
xor
in
fs
or
sub
xor
xor
sub
add
sub
inc
sub
mov
push
cmp
add
lea
cmove
xor
inc
fsub
add
add
xchg
mov
and
mov
mov
in
jmp
push
inc
cmp
sbb
mov
les
addb
fists
mov
add
jmp
add
mov
shrl
add
add
cwtl
stc
sti
mov
mov
lock
mov
push
lock
leave
push
lock
xor
add
xor
push
add
mov
add
into
dec
push
mov
jnp
mov
add
xchg
add
fisttpll
pop
inc
lock
sbb
jmp
in
push
add
stc
add
mov
add
and
push
mov
jnp
and
mov
rolb
sbb
out
ljmp
add
push
adc
andl
or
js
idivl
sub
inc
add
lds
daa
fisttpl
mov
nop
add
add
fstps
add
add
iret
clc
ja
add
iret
movb
add
add
int3
xchg
movsl
int
push
add
add
add
ret
and
scas
inc
add
call
fistps
push
add
add
add
jecxz
cli
mov
clc
enter
add
xchg
add
popf
add
dec
xchg
in
xchg
popf
rolb
in
repnz
mov
dec
push
sub
add
mov
outsl
hlt
add
dec
add
mov
imul
add
mov
call
push
inc
add
int3
xchg
xchg
add
add
mov
jg
iret
mov
add
add
add
rolb
xlat
push
add
add
arpl
jnp
testb
inc
fadds
mov
lret
mov
sar
jmp
lea
or
int
add
ret
add
add
addr16
add
iret
imul
lahf
insl
sbb
mov
add
pop
scas
aaa
mov
sub
out
add
add
mov
leave
add
lods
jno
movsb
add
add
loop
jl
push
dec
cmp
mov
outsl
push
add
dec
in
sub
xor
add
add
aam
or
daa
or
push
and
mov
sbb
pop
and
xlat
or
add
add
add
add
mov
fildll
pop
sarl
mov
add
or
mov
sbb
jl
add
stos
mov
int
sbb
mov
iret
or
lahf
or
and
xor
in
dec
mov
inc
or
mov
mov
adc
xchg
pop
mov
movsl
inc
ds
mov
and
aaa
cmp
data16
aad
cmp
add
sbb
push
add
mov
roll
ret
add
mov
push
add
jnp
rolb
xchg
add
fwait
mov
faddl
add
pop
lds
pop
lods
mov
scas
pop
add
outsb
mov
dec
popa
fstpl
cmc
gs
jge
cmp
add
jo
dec
clc
mov
adc
mov
add
lods
stos
xchg
push
add
pusha
add
lock
add
cmpsb
add
mov
and
add
je
shrl
movsb
add
add
ja
sbb
rolb
pop
push
or
add
xor
dec
out
or
pop
rolb
pop
jmp
lods
out
jno
rolb
add
add
mov
addb
repz
addr16
jge
jne
dec
int
xchg
add
pop
mov
add
add
dec
jno
mov
push
push
add
add
mov
mov
cmc
nop
add
push
add
sahf
sti
lods
sti
loopne
jb
aaa
add
mov
xor
adc
push
cmp
das
arpl
out
jae
pop
sbb
pop
cmpsb
add
stos
jbe
leave
jb
or
arpl
cmp
testb
jae
flds
pusha
add
adc
push
imul
outsl
sub
or
jecxz
add
add
xlat
add
test
clc
cmp
inc
add
dec
xchg
add
je
nop
add
out
add
add
std
add
dec
js
add
xchg
jns
add
jae
push
add
stc
call
add
iret
aas
rolb
js
add
fisttpll
sbb
pusha
add
iret
xchg
inc
add
add
add
pop
dec
andps
movsb
add
in
push
add
mov
push
add
in
dec
inc
push
add
sbb
lcall
lahf
fldcw
shll
ja
das
in
pop
loope
add
add
mov
add
seta
xor
add
loope
add
sbb
add
mov
insb
inc
add
jnp
sub
add
add
test
cmpsb
add
add
mov
sub
sub
dec
lea
call
mov
sbb
pop
arpl
add
add
add
mov
int
rolb
mov
cmc
roll
sub
loop
mov
jbe
mov
je
testb
add
jecxz
add
add
xor
mov
fbld
add
data16
add
fwait
pop
inc
adc
aam
push
aaa
pop
testl
xor
add
cmc
sbb
pop
shrl
push
test
add
and
stos
jnp
mov
sbb
aam
push
add
pop
xor
into
cvtps2pi
inc
add
insl
sti
addb
inc
lods
in
push
add
ret
std
add
push
add
push
add
sbb
testb
add
add
mov
mov
add
add
add
mov
add
lods
sti
int
mov
inc
daa
mov
push
mov
pushl
add
add
and
mov
mov
cld
add
mov
data16
filds
inc
add
add
or
jp
nop
add
ds
call
aas
fucomip
adc
mov
outsl
sub
add
sbb
xchg
movsl
mov
push
push
add
add
add
mov
xchg
mul
std
adc
addr16
and
mov
sbb
add
add
add
and
sub
jb
push
add
nop
add
loop
cmp
add
cld
push
pop
jecxz
add
cli
data16
add
mov
sub
inc
add
ret
ja
add
add
sub
xchg
push
add
cld
mov
mov
cmp
add
out
clc
mov
add
addr16
add
jg
cmpl
mov
pop
push
add
mov
addb
pop
dec
pop
push
add
add
or
mov
add
mov
push
popf
shrl
shl
add
xor
cli
xchg
fmuls
add
mov
arpl
pop
mov
add
pop
lret
jb
xchg
add
mov
xor
xor
loope
test
cwtl
jno
xchg
add
add
jmp
fisttpl
adc
mov
addr16
push
add
add
mov
stc
and
jmp
add
pop
pop
sahf
std
dec
push
xor
fsubl
lds
push
add
mov
test
add
add
test
in
outsb
inc
repz
jbe
imul
rolb
jle
mov
stc
rolb
add
out
push
add
add
js,pt
das
dec
mov
mov
paddsb
add
add
add
js
add
cmp
sub
das
in
push
jp
mov
add
add
pop
add
mov
cmp
daa
in
sbb
add
ss
pop
in
test
loop
in
push
add
add
movb
into
dec
xor
stos
sti
nop
add
adc
cwtl
jle
sub
add
add
imul
arpl
pop
fwait
out
add
add
push
add
mov
push
add
add
sub
mov
cmp
add
sbb
cmp
rolb
bound
mov
push
fwait
xlat
jmp
stc
in
add
mov
mov
outsl
std
sbb
sar
addb
add
fwait
cmp
das
fsubrl
push
add
loop
test
stos
sub
and
call
int
cmp
add
lret
aaa
mov
and
mov
dec
in
insl
mov
sti
popa
je
ret
adc
ja
testl
add
data16
add
add
sbb
add
or
mov
stos
inc
add
sbb
jge
add
xor
in
cltd
dec
and
sub
sbb
jp
add
inc
mov
ficoml
sbb
add
add
mov
stos
sbb
ret
hlt
add
lahf
push
pushf
and
inc
pop
inc
add
cld
aaa
pop
push
sbb
inc
add
xchg
pusha
add
xchg
add
mov
cmp
add
mov
dec
pop
and
jmp
add
push
add
add
arpl
mov
mov
mov
add
pop
int
sbb
cld
out
add
mov
addb
out
mov
add
lods
fcmovnb
add
mov
jno
add
dec
repnz
mov
scas
icebp
sub
pop
inc
scas
push
add
xchg
mov
add
mov
in
loopne
jmp
out
fdivl
add
mov
cli
mov
add
fldenv
aad
ret
test
rolb
subl
add
inc
mov
push
cmp
pop
aam
fwait
mov
ljmp
and
dec
mov
ret
push
mov
push
add
push
add
mov
mov
xor
ja
psubsw
in
pusha
add
add
addb
add
mov
mov
test
or
cmp
add
inc
cs
mov
out
inc
jb
xchg
add
add
add
push
xchg
pop
test
out
push
add
add
out
and
fsubr
jl
pushf
inc
mov
fwait
loop
pop
loope
mov
add
add
add
xor
test
add
mov
cmp
jo
fdivl
cltd
jo
adc
xchg
rolb
repnz
push
xor
jb
dec
into
aaa
dec
decl
dec
imul
add
add
popa
in
arpl
push
add
add
lret
inc
cmpsb
add
add
out
loope
cmc
pop
aaa
aam
inc
cmp
jmp
jge
add
add
mov
cmp
in
push
add
cmp
add
mov
add
and
outsb
push
xor
in
lahf
sbb
out
out
add
inc
dec
popf
icebp
push
add
add
fstpt
mov
aam
cmc
dec
cmc
or
add
cmp
inc
add
loop
pop
sub
sbb
cmc
xchg
add
inc
mov
pop
sub
or
add
add
xchg
lcall
add
cmc
rolb
jmp
mov
push
add
mov
pusha
add
aas
call
out
push
or
or
push
in
int3
adc
push
add
mov
fwait
and
mov
movsl
adc
add
stos
cmp
mov
cmp
add
dec
and
push
out
mov
add
mov
or
pop
lds
test
sbb
add
mov
jecxz
sbb
jae
fptan
add
nop
add
inc
add
dec
jmp
add
lret
adc
pusha
add
cmpsl
mov
addb
jbe
xchg
mov
movntps
fisttpl
and
mov
in
fwait
or
add
inc
add
add
add
nop
add
push
push
mov
repnz
mov
xchg
jl
je
sbb
add
add
test
stc
and
lock
jecxz
add
cs
call
sti
dec
mov
stos
dec
adc
in
hlt
add
sbb
jb
xchg
and
rolb
into
push
push
add
add
cmp
loope
add
push
add
mov
add
mov
daa
mov
add
sub
add
adc
not
repnz
faddl
push
add
and
addr16
add
mov
lret
pop
aaa
cmp
and
jp
out
and
mov
out
arpl
add
mov
pop
imul
add
add
jne
or
je
dec
jl
mov
mov
add
xchg
xchg
aad
jmp
aaa
pop
push
fdivrs
mov
push
add
bound
mov
dec
std
cmpsb
add
add
add
sbb
and
push
add
jp
in
add
adc
dec
js
mov
mov
and
popf
xchg
bound
mov
mov
dec
shll
pop
int
add
xor
mov
add
add
sti
roll
mov
or
mov
div
push
add
mull
add
sub
sub
mov
lea
add
xor
out
dec
sub
add
or
lea
mov
mov
imul
data16
fsubrs
add
add
lea
addb
add
adc
push
sti
incb
hlt
add
xchg
dec
dec
movsb
add
add
mov
add
gs
call
add
xchg
add
mov
dec
arpl
ret
stos
jmp
jnp
pop
push
add
add
mov
jbe
sbb
jns
jp
jle
cltd
jecxz
lea
add
xor
xor
jo
sar
push
lcall
add
inc
lods
ror
add
mov
clc
xlat
xchg
sbb
cmp
add
add
fists
xor
jecxz
jnp
add
add
out
dec
push
mov
pop
cmpsl
mov
add
push
jae
imul
push
add
fnsave
dec
jle
add
add
xlat
inc
add
test
sbb
call
inc
add
mov
subl
push
add
cltd
and
ja
std
pop
mov
adc
jns
cmpsb
add
decl
xchg
add
rorl
lds
icebp
sub
scas
jne
pop
testb
repnz
mov
add
into
sbb
dec
inc
push
ds
add
xchg
add
add
push
lret
cmp
push
iret
rolb
out
lahf
add
mov
push
rolb
add
mov
fcompl
daa
addb
add
jp
fisttpl
mov
push
add
and
xchg
lods
jb
cmp
mov
add
cmpsl
cli
out
and
aas
adc
adc
add
add
aaa
mov
and
int3
ret
aaa
cmp
shl
xor
or
pop
inc
sbb
dec
in
push
loop
icebp
rcll
cmpsb
add
mov
and
out
xchg
out
sub
xor
add
add
or
fisubs
out
add
cwtl
add
inc
mov
xchg
add
lods
fnstenv
add
incb
pop
sti
and
mov
add
fcoms
cmc
cmp
popf
xor
add
addb
inc
add
add
out
push
clc
and
mov
mov
mov
pop
push
outsb
xchg
dec
sub
add
pop
jecxz
out
addr16
add
lock
data16
add
dec
push
addr16
add
mov
jns
mov
decb
dec
jmp
test
add
add
add
add
inc
add
sbb
dec
cmp
pop
sti
and
mov
push
push
mov
mov
sbb
add
add
hlt
add
or
mov
sbb
xchg
int
add
jl
add
add
add
test
push
sbb
xchg
arpl
add
xchg
add
add
push
add
dec
fstl
lods
data16
add
add
lret
push
add
mov
fildll
push
sbb
add
jbe
addr16
add
pop
add
call
add
mov
add
add
scas
jns
inc
mov
mov
stc
pop
data16
adc
jb
nop
add
pop
fstpl
jae
adc
jns
mov
jmp
xchg
aas
add
mov
jo
addb
add
jmp
call
pop
mov
sub
add
mov
ja
fsubrl
jne
jae
jno
repnz
or
adc
jge
iret
pop
movsl
and
sbb
add
inc
mov
xchg
xor
pop
jle
add
out
mov
or
add
mov
ret
sbb
jbe
push
andl
xor
mov
add
add
arpl
ret
lcall
in
inc
add
pop
stc
mov
cltd
enter
es
enter
shll
in
out
add
mov
add
add
xchg
xor
mov
mov
pop
lds
add
nop
add
and
add
shrl
jb
test
add
mov
add
popa
negl
pop
xchg
and
imul
jge
add
aad
add
hlt
add
mov
mov
cmc
ficompl
sbb
out
inc
add
pop
stos
add
mov
add
add
adc
lahf
arpl
cli
jl
bound
mov
add
or
mov
xchg
ja
push
cmc
aam
xchg
xchg
mov
stos
lret
mov
add
add
add
ret
add
add
cmp
and
lret
cli
inc
add
xchg
push
call
add
add
add
repnz
mov
test
sub
add
add
jge
adc
add
add
xlat
mov
inc
xchg
loopne
fst
ds
testb
ret
sub
jb
aad
cltd
cmc
dec
sbb
add
adc
jmp
sbb
add
add
je
inc
dec
xchg
mov
pop
xor
xchg
jge
add
mov
pop
push
add
add
add
aad
add
mov
mov
inc
cmpl
pop
push
lret
rolb
xor
int
adc
dec
cmp
add
sbb
test
add
pop
imul
dec
sub
loop
dec
lea
and
xchg
add
test
ljmp
add
xchg
je
in
xor
fsubs
pop
aas
xchg
add
or
sub
xor
icebp
add
push
bound
mov
dec
mov
add
add
sub
add
add
add
add
add
add
jno
mov
mov
cmp
jnp
xor
mov
int
pop
or
inc
jmp
mov
movsl
mov
xchg
mov
jge
rorl
out
mov
add
imul
pop
push
rorl
xor
jae
add
lret
mov
add
or
and
mov
or
cs
inc
add
mov
mov
jnp
add
mov
or
mov
jo
lock
dec
cmp
add
stos
mov
add
mov
aam
pop
cltd
dec
pop
jl
xor
push
int
cli
add
mov
nop
add
xor
add
mov
add
lea
add
addb
mov
stc
daa
je
pop
loop
pop
pop
lret
sub
add
sti
lds
push
add
pushf
xchg
mov
fistpll
xchg
add
add
add
lds
mov
in
pop
sbb
mov
fldcw
mov
clc
loope
or
add
divl
daa
lret
out
je
mov
jb
xlat
jo
sub
aam
les
dec
inc
add
add
add
mov
add
xchg
int3
mov
xchg
pop
jge
push
add
add
stos
inc
sub
in
data16
mov
push
add
out
fsubs
lahf
push
add
imul
loope
out
inc
add
or
add
add
lea
cltd
mov
xor
push
mov
sbb
add
lret
add
dec
int
pop
or
lcall
add
jge
faddl
add
pop
add
add
cmp
adc
mov
cltd
jo
jb
cli
pop
pop
test
or
nop
add
jbe
inc
insl
pushl
add
mov
add
mov
jecxz
pop
inc
add
push
pcmpgtb
add
add
xorl
mov
adc
jmp
push
fnstsw
jp
add
fistpl
data16
add
imul
lods
mov
mov
jb
mov
mov
add
add
xor
cs
xchg
mov
loope
push
push
add
cmp
push
ret
add
pop
pop
std
mov
add
movsb
add
push
add
cmpsl
xchg
ret
je
adc
rolb
cwtl
add
add
add
dec
pusha
add
loopne
pop
ret
mov
mov
sub
cmp
loop
push
add
push
sub
int3
movsl
xchg
add
add
add
bound
mov
add
les
aad
add
stos
addb
add
mov
test
ret
sub
adc
inc
cmp
and
repz
mov
adc
xchg
jb
imul
movsl
xchg
bound
mov
sub
lods
add
shl
mov
popa
pop
and
mov
push
add
sbb
jp
or
stos
add
pop
adc
movsb
add
add
sbb
inc
add
and
add
adc
icebp
push
sbb
test
pushf
pop
and
insb
or
outsl
and
mov
add
repz
pop
aas
std
out
jle
add
data16
movl
sbb
sub
mov
add
in
add
or
loop
icebp
pop
pop
mov
in
add
lea
sbb
lock
jbe
sti
xlat
sbb
add
testl
in
and
add
add
cs
dec
push
add
insb
add
mov
loopne
stos
cmc
mov
pop
xor
jbe
sub
add
adc
movsb
add
jecxz
out
lock
add
in
sub
daa
pushf
imul
add
iret
and
add
mov
movb
mov
out
inc
add
inc
jnp
add
loop
or
mov
cs
sub
inc
lock
out
in
and
mov
inc
add
add
add
add
mov
rolb
mov
fsin
add
arpl
cmp
dec
xor
mov
pusha
add
repnz
sbb
add
mov
out
mov
pop
call
pop
pop
add
add
bndldx
cli
jae
mov
lods
mov
mov
inc
add
mov
add
sbb
add
hlt
add
jmp
fidivrl
add
lds
add
add
push
add
mov
dec
push
push
add
mov
dec
scas
mov
push
pusha
add
addb
adc
cwtl
imul
sbb
cmp
add
sbb
dec
repz
xchg
add
les
or
xchg
jp
mov
out
and
mov
jns
iret
add
mov
inc
add
fmull
cmp
jno
dec
rolb
loope
fsub
add
add
mov
add
out
add
cmpsb
add
rolb
or
pop
jge
add
aad
aaa
pop
add
insl
pop
add
xor
sub
out
add
ljmp
bound
mov
idivl
add
add
out
or
or
jp
push
add
or
push
push
addr16
out
mov
add
fidivrs
fsubrl
mov
add
sub
out
mov
inc
add
inc
add
add
pop
repz
jns
adc
sbb
push
add
add
cwtl
push
add
sti
xor
xor
mov
add
xor
add
add
mov
mov
add
pop
jg
xor
bound
mov
cmpsb
add
sub
sub
add
push
rolb
loope
add
jl
addb
add
ja
xchg
fimull
jle
add
outsb
data16
push
loop
cmpsb
add
add
aaa
movb
cmp
aad
lret
std
push
mov
adc
push
add
outsb
sub
bound
mov
add
scas
cmp
movb
xor
add
icebp
pop
xchg
add
fisttps
jbe
pop
mov
pushf
jl
mov
sbb
into
daa
add
mov
add
dec
sub
add
rolb
test
adc
fs
imul
in
push
add
inc
add
cmp
add
sub
test
lea
add
add
add
cltd
movsb
add
mov
sbb
inc
add
dec
iret
add
mov
lea
dec
lds
aam
lds
mov
fwait
or
enter
test
add
and
les
fwait
add
add
mov
out
add
lock
cmc
addb
mov
repz
mov
pop
gs
mov
add
test
add
add
mov
mov
add
inc
xor
cwtl
rolb
repnz
mov
imul
add
mov
mov
mov
add
or
add
into
lods
test
sbb
int3
mov
add
push
rolb
leave
push
add
bound
mov
movsb
add
lods
rolb
jne
test
data16
inc
inc
xchg
jecxz
mull
add
out
dec
loope
add
or
or
add
or
add
bound
mov
dec
mov
dec
push
lods
js
insb
cmp
jne
stc
push
out
sub
dec
out
lds
mov
mov
mov
jp
add
test
add
add
enter
testb
dec
mov
test
sub
add
out
adc
std
testb
test
xchg
imul
xor
add
and
in
xor
outsl
mov
add
loope
push
add
scas
outsb
std
int3
xorl
add
cs
jp
add
dec
pop
dec
mov
add
in
push
lcall
int3
popf
cs
or
or
add
jge
lds
lock
sbb
pushf
or
clc
adcl
clc
push
add
jmp
insb
push
shll
inc
add
dec
xchg
mov
test
add
add
fcomps
xlat
push
add
or
add
add
dec
sub
mov
push
jle
xor
inc
add
dec
movsb
add
push
jle
add
dec
add
add
add
dec
cmp
adc
mov
push
sub
roll
mov
int
sti
push
fdivr
pop
mov
movb
jge
add
nop
add
or
add
loop
cmpsb
add
repnz
cli
push
push
add
ficomps
xchg
fdivl
push
aas
dec
loope
add
mov
imul
mov
imul
push
add
add
inc
fsubr
adc
mov
fcompl
add
add
jnp
fcoml
dec
lea
mov
cmp
add
leave
mov
outsb
popf
sbb
add
mov
test
add
jg
or
cmp
shll
mov
das
sbb
jno
add
aas
stos
and
mov
mov
sub
push
add
std
inc
add
test
sbbl
mov
add
add
pop
out
pop
jle
add
add
add
fistpll
jns
cli
das
scas
and
jecxz
cwtl
and
pop
pushf
xchg
cmpsl
test
add
mov
shll
mov
inc
add
sub
fbstp
sbb
add
pop
sub
adc
shll
jmp
add
add
data16
pop
loopne
loope
mov
test
fisubrs
add
ljmp
out
movsb
add
mov
add
add
add
push
add
mov
jo
lret
add
jmp
add
out
mov
subl
repnz
dec
mov
push
xor
into
popf
aad
es
int3
push
mov
add
xor
std
out
out
aaa
push
mov
add
and
mov
lods
daa
out
mov
jmp
add
add
fwait
mov
add
xlat
ret
sbb
push
add
pop
pop
cmc
and
mov
add
add
jg
jecxz
add
pop
and
add
dec
cmp
add
jb
dec
cli
jp
leave
jae
nop
add
arpl
add
inc
add
in
lahf
xor
mov
push
add
in
mov
cmpl
xchg
sysret
jb
movb
xchg
stos
scas
in
add
add
int3
sub
mov
flds
and
mov
add
add
adc
adc
out
xchg
dec
cmp
and
add
sub
shl
hlt
add
add
mov
aaa
mov
cmp
in
pop
inc
add
add
cmp
sbb
push
add
mov
pop
out
clc
push
frstor
add
mov
fcoml
and
adc
fcmove
mov
or
mov
add
xchg
add
outsb
shll
mov
add
add
jno
add
add
add
jne
jns
nop
add
sbb
icebp
out
testb
jmp
add
les
fs
imull
xchg
pop
inc
add
rolb
mov
and
mov
daa
sub
nop
add
in
aas
jb
inc
dec
in
xchg
add
scas
fldcw
pop
testb
shrl
add
pop
cmp
scas
movsb
add
test
add
sahf
nop
add
and
jae
and
mov
sbb
add
add
fnsave
adc
mov
bound
mov
add
mov
loop
pop
cld
std
lahf
push
add
ja
add
aaa
sub
mov
test
sub
xor
dec
data16
aad
inc
xor
out
push
add
aas
test
lahf
mov
dec
adc
stos
dec
push
pop
repz
xchg
add
add
add
sub
lea
cwtl
rolb
push
add
imul
lock
stc
fnsave
jg
add
and
iret
lret
pop
push
add
add
popa
sbb
jmp
add
xor
push
fdiv
add
aaa
and
mov
push
add
mov
add
push
jns
mov
sub
pop
ret
movl
into
in
mov
inc
add
xor
add
add
lret
add
fwait
sbb
movsl
rorl
inc
add
xlat
fnstenv
sub
jnp
xchg
pop
dec
adc
mov
icebp
mov
repnz
inc
sbb
add
add
add
jbe
out
fcoml
mov
dec
push
sub
jmp
jbe
mov
jbe
dec
inc
aam
adc
pop
sbb
sti
clc
xchg
stos
and
xor
xor
mov
cmpsb
add
add
push
add
mov
sbb
mov
cmp
test
mov
add
mov
enter
add
mov
arpl
sbb
and
mov
mov
call
add
pop
push
lods
adc
sbb
dec
push
test
push
cmp
lea
repz
xor
std
sub
mov
inc
mov
popa
xor
xchg
or
push
add
test
mov
rolb
rolb
xchg
into
pop
mov
addb
add
add
loop,pn
out
mov
jmp
push
add
add
pop
cmpsl
mov
push
movsb
add
xor
mov
in
xchg
rcll
cmp
xchg
add
dec
mov
hlt
add
mov
pop
pop
inc
add
das
dec
cli
aaa
iret
out
add
insb
push
mov
repnz
mov
popf
sub
pop
imul
pop
lock
add
test
add
push
add
test
sbb
mov
mov
add
mov
mov
xchg
mov
add
lods
mov
test
loop
test
or
add
pop
inc
lcall
addl
sub
jo
outsl
push
add
aad
xor
dec
in
lds
ficoml
add
sahf
cmp
ljmp
add
pop
xor
mov
test
and
mov
add
ds
jp
dec
lea
fcmovnbe
addb
in
int
in
mov
jg
add
push
js
mov
add
cmpsb
add
inc
add
ror
lea
cmp
call
or
and
mov
and
and
mov
movsl
dec
divl
mov
sbb
data16
loopne,pn
mov
add
imul
add
mov
mov
gs
mov
sub
mov
add
dec
fcomps
imul
cltd
pop
sbb
cmp
outsb
adc
add
dec
dec
push
add
add
add
aas
inc
add
mov
movsl
xor
dec
jno
fwait
in
sub
lret
mov
in
add
mov
add
pop
arpl
sbb
scas
mov
pop
testb
adc
loop
jge
xor
pushf
pusha
add
cmpsb
add
add
addl
add
mov
add
sbb
es
add
add
rolb
sub
lahf
inc
add
sub
mov
xor
add
sub
pop
testb
push
adc
rcll
mov
cmp
add
loopne
pop
sub
in
fwait
mov
mov
jmp
loopne
jp
fsub
push
add
dec
sub
xchg
jl
mov
add
add
rolb
cwtl
rcrl
cmp
mov
iret
loopne
pop
push
add
add
push
add
lods
cli
int
mov
add
push
add
add
sti
sub
add
test
mov
insl
jge
dec
stos
push
add
mov
fcomip
push
cli
push
add
dec
sahf
testl
lods
add
mov
add
pusha
add
xor
sub
inc
pop
testl
add
adc
into
mov
add
ficoml
add
ljmp
imul
sbb
push
add
add
jbe
jo
adc
add
fcoms
xchg
add
add
js
push
add
xchg
add
push
add
aaa
add
dec
jbe
out
repz
add
ds
pop
popf
xchg
add
outsl
or
cmp
das
dec
stos
xchg
rolb
ror
adc
ljmp
repnz
add
mov
xchg
push
imul
add
push
fiadds
pop
add
mov
xchg
add
in
mov
jl
add
out
or
jg
push
xchg
add
add
imul
mov
add
add
mov
mov
popa
xchg
add
mov
sti
sbb
imul
fnstsw
add
jg
movsl
cltd
sahf
ret
xchg
add
fwait
push
imul
mov
fucomi
mov
and
inc
inc
add
mov
cmpsb
add
sbb
mov
mov
sarl
cmpsb
add
add
jge
movb
jle
sbb
dec
cmpsl
pop
cmpl
outsl
or
addb
add
aam
ljmp
add
and
add
jne
jecxz
es
lahf
pop
xor
add
sub
popf
lea
push
add
xchg
fmull
push
and
fcompl
cmp
pop
dec
outsl
pop
add
mov
mov
ret
das
sbb
psllq
xor
testb
pop
leave
add
test
std
dec
adc
stos
ret
testb
add
test
adc
insb
mov
mov
push
cld
mov
add
add
add
int
fidivs
add
adc
imul
dec
xchg
aas
jmp
scas
fstpl
pushf
addr16
add
lods
mov
movb
lods
in
repz
fwait
lret
outsl
mov
insl
cmp
cli
mov
add
sbb
add
jg
add
xor
aaa
sarl
or
add
ja
add
add
cmpsb
add
add
mov
iret
sbb
pushf
jbe
clc
jecxz
dec
mov
lahf
daa
dec
popf
movsb
add
mov
mov
jne
movb
jecxz
mov
mov
movsl
dec
add
rolb
add
ret
ss
sbb
sbb
push
pop
repz
pop
insl
cs
mov
std
nop
add
xor
addr16
sbb
or
add
mov
repz
iret
in
call
into
mov
mov
cmp
nop
add
add
in
int3
repz
xchg
cwtl
push
std
aam
int3
mov
dec
sbb
sti
mov
xor
and
add
adc
loop
mov
mov
xor
clc
or
xchg
add
lret
jbe
ds
inc
add
test
jle
add
scas
jo
lret
cmp
push
add
adc
inc
add
add
add
add
sbb
mov
ljmp
sub
mov
cmc
mov
xor
add
mov
xor
test
fsubr
repnz
add
add
push
jmp
iret
mov
fdivrs
mov
addb
add
cmp
mov
mov
jnp
pop
xlat
xchg
add
lods
pop
addb
add
pop
sti
xchg
push
add
add
xlat
je
ret
add
mov
cmp
add
mov
movl
add
mov
addb
add
mov
jge
xchg
xor
rolb
sbb
leave
adc
add
add
add
stc
movsl
pusha
add
rolb
movsl
mov
push
add
sbb
stc
pop
inc
add
filds
in
add
fimuls
pop
imul
mov
add
add
add
add
je
adc
movsb
add
add
add
cmp
xlat
ljmp
mov
loope
add
push
dec
fscale
outsb
int3
xchg
xchg
add
add
in
ds
cmpsb
add
add
mov
daa
xchg
stc
cltd
add
in
push
add
mov
mov
mov
cmp
lret
sbb
jne
add
add
add
pop
decb
add
add
or
loope
int
push
jle
outsl
pop
loope
scas
xchg
add
add
mov
sub
fsubrs
in
filds
mov
inc
movl
mov
sub
aas
and
add
xor
mov
dec
add
add
add
add
adc
cmp
xchg
icebp
sub
pop
repz
scas
int
or
jmp
mov
out
lcall
push
add
stos
fistl
add
add
daa
push
outsl
data16
xor
cmp
add
sub
add
stos
and
mov
pusha
add
add
movsl
arpl
add
add
cmp
add
pop
jg
add
popf
cli
fwait
inc
add
jbe
in
jo
or
mov
outsl
cmc
jle
add
aaa
imul
aad
mov
mov
shll
fwait
xor
add
add
or
dec
push
out
add
fimuls
rolb
inc
add
or
imul
add
ficoms
rolb
outsl
pop
out
xor
addb
cmc
std
mov
add
movsl
pusha
add
push
add
add
nop
add
fs
pop
cmp
cmp
mov
in
int3
or
imul
inc
aas
mov
lods
jnp
xchg
add
add
mov
frstor
jecxz
insl
rolb
repz
add
repz
xchg
mov
in
sbb
jle
outsl
pusha
add
add
add
mov
mov
and
ficoml
iret
mov
add
xor
inc
mov
xchg
insl
out
mov
xlat
clc
jbe
jnp
mov
add
add
add
cmp
rolb
push
add
std
push
mov
add
pushl
nop
add
sbb
mov
inc
add
outsl
inc
add
mov
int3
or
fists
push
xor
in
fneni(8087
add
add
add
mov
add
mov
repnz
add
jnp
add
inc
add
daa
arpl
cmp
inc
leave
push
scas
scas
adc
loop
jg
add
or
ret
les
jmp
repnz
add
in
sbb
add
sti
xor
and
mov
add
add
sbb
add
mov
add
mov
add
sbb
mov
fdivp
add
push
add
imul
inc
adc
mov
sbb
cmp
add
add
mov
add
pop
adc
call
mov
add
ret
mov
aaa
add
mov
dec
mov
rolb
lea
add
popf
sbb
movsl
addb
pop
mov
in
ja
pop
add
dec
adc
add
mov
mov
sti
xlat
sbb
mov
outsl
inc
pop
inc
repnz
shrl
icebp
push
add
add
xor
mov
and
arpl
sub
add
test
ljmp
cmp
in
daa
mov
rcrl
lcall
mov
pop
iret
xor
mov
push
add
lret
jns
sub
mov
into
mov
add
add
pop
push
daa
outsl
pop
cmp
add
add
ljmp
add
xchg
jns
add
out
iret
pop
dec
ds
add
imul
add
fldcw
cmp
add
add
repnz
mov
xor
dec
pushf
add
mov
sub
pushf
mov
or
ficoml
add
addb
xchg
mov
push
ljmp
mov
sbb
jp
test
push
add
add
in
mov
add
test
push
add
add
popf
mov
mov
adc
cmp
lret
push
mov
add
add
add
pop
push
add
cwtl
sub
push
add
add
add
add
add
sbb
dec
push
testb
pop
dec
jmp
adc
pop
pop
aam
push
add
fstpt
arpl
imul
mov
jb
out
popf
cmpsb
add
adc
repnz
icebp
addb
add
mov
dec
bound
mov
add
add
imul
test
cs
xchg
add
popa
imul
xor
or
add
cmp
jge,pt
aaa
mov
fsubrs
add
fdivrl
inc
add
addb
repz
push
add
sbb
add
mov
insb
leave
or
add
mov
push
add
push
adc
cmp
push
add
scas
das
sub
cmp
fisubs
xchg
adc
aas
mov
rolb
in
int
les
jbe
fwait
sub
dec
jecxz
add
lret
cltd
cs
pop
int3
dec
fld
in
arpl
add
addb
js
add
xchg
enter
mov
mov
add
out
in
enter
iret
int
data16
mov
add
or
add
add
ja
pop
dec
imul
add
add
mov
leave
or
cmpsl
and
mov
sub
add
pushf
das
cmp
add
mov
inc
scas
es
jne
cmp
pop
cmpl
cli
cld
adc
sbb
adc
das
push
pop
mov
ffreep
push
add
ljmp
pop
sbb
ret
add
add
jmp
imul
mov
add
rolb
pushf
and
mov
add
add
push
add
gs
sub
mov
cmp
add
nop
add
add
imul
dec
mov
ja
add
test
push
add
nop
add
pop
cmpsb
add
add
xor
adc
mov
movb
jbe
iret
push
add
das
or
add
shll
jl
sbbl
lods
ret
jecxz
push
lcall
loopne
fsubl
enter
add
jle
jbe
or
jno
add
add
add
aam
dec
loopne
lock
rolb
add
mov
int3
dec
add
and
cmp
add
dec
and
xor
test
xchg
add
nop
add
mov
dec
cmpsb
add
mov
bound
mov
rolb
add
orl
lea
add
mov
std
xchg
not
jne
xor
push
add
add
xchg
add
add
jecxz
imul
add
ljmp
addb
scas
gs
add
frstor
mov
mov
ret
xchg
add
ret
mov
xchg
test
add
sub
scas
or
mov
mov
xchg
add
xor
mov
mov
call
flds
add
sbb
mov
aaa
mov
stos
lcall
add
test
sub
out
lock
push
mov
fdivrp
xor
xchg
lods
ds
ja
xchg
icebp
adc
add
jecxz
in
mov
add
popf
out
rolb
pop
fchs
add
push
add
add
pop
mov
inc
in
fwait
cmp
movb
sub
dec
xlat
bound
mov
sub
mov
fwait
cmpsb
add
in
cmp
add
push
add
add
xor
lcall
data16
js
push
add
int3
inc
add
dec
sarl
scas
xchg
pop
jb
lcall
data16
out
stc
sbb
push
adc
out
and
pop
mov
std
jno
in
and
jne
sbb
loop
insl
fdivrs
sub
scas
cmp
inc
pop
decl
bound
mov
add
mov
in
add
pushf
jmp
testb
int
add
xchg
push
mov
rcll
adc
lcall
sbb
push
add
sbb
rolb
test
and
inc
add
add
lcall
or
cmp
or
add
rolb
mov
rolb
dec
loop
popf
sbb
stos
push
inc
add
repz
jno
jmp
add
ficoms
cmp
xchg
add
add
mov
out
push
add
xor
lcall
xchg
add
daa
xchg
xor
test
std
test
pop
ret
xlat
jg
push
sbb
mov
cmp
adc
leave
inc
add
xchg
mov
lock
or
iret
push
add
and
mov
mov
lcall
add
add
scas
push
add
mov
pop
and
mov
mov
out
add
popa
fbstp
adc
pop
in
mov
or
add
scas
in
lods
insl
dec
out
add
fstl
add
add
and
xor
pusha
add
or
sub
add
ja
add
add
sbb
push
add
decb
sub
add
cmpl
add
or
sbb
push
mov
mov
xchg
add
rolb
add
mov
dec
xchg
add
fisttpl
iret
adc
stos
add
add
out
mov
add
mov
mov
adc
pushf
test
aaa
mov
xorl
xchg
push
cs
xor
push
add
inc
add
out
add
sti
fcmovb
gs
dec
xor
mov
test
data16
add
mov
out
inc
add
int3
lea
pop
fnsave
or
rolb
add
xor
bound
mov
add
add
dec
shll
add
lods
jp
add
mov
mov
add
aad
add
dec
jl
inc
add
add
xchg
add
add
add
xchg
bound
mov
xchg
js
add
popf
xchg
test
add
cltd
js
xchg
add
add
xchg
mov
mov
movl
and
add
mov
cld
xchg
add
shll
sub
add
mov
adc
mov
dec
fisttpll
xchg
add
add
mov
add
xor
xchg
dec
psrlw
add
jl
jbe
mov
jp
add
pop
sbb
inc
add
in
aas
or
fcmove
out
in
loop
repz
add
jno
test
daa
mov
addb
rolb
push
add
mov
sbbl
cwtl
movb
add
lods
imul
mov
xor
mov
pushl
jl
mov
out
add
lret
pop
les
inc
add
cmpsl
adc
das
xchg
add
xchg
add
arpl
sub
xchg
data16
dec
repz
add
mov
add
cmp
popf
inc
adc
or
xchg
pop
and
mov
add
rolb
xor
inc
add
mov
mov
push
add
add
fwait
js
add
xchg
out
pop
into
or
add
add
loopne
addb
sub
mov
mov
sub
hlt
add
bound
mov
mov
lret
out
mov
das
fwait
xchg
movsl
xchg
push
xchg
push
xchg
add
push
outsl
out
add
mov
add
add
movb
ds
popl
mov
insb
sbb
mov
add
addb
add
add
mov
push
or
mov
add
dec
cmp
add
inc
add
in
adc
pop
rolb
xchg
jnp
mov
add
add
shll
jl
out
mov
add
push
add
push
mov
rolb
repnz
jecxz
push
cs
and
add
add
add
sbb
add
add
pop
jge
or
and
push
aam
and
lahf
dec
xchg
add
add
add
int3
shll
add
pop
imul
add
jp
sub
fisttps
inc
add
daa
xorl
add
mov
inc
add
popf
addr16
mov
sub
sbb
push
add
add
add
fucom
add
add
adc
stos
add
add
mov
push
movb
cmp
pop
or
mov
add
mov
insb
and
mov
add
filds
add
mov
rolb
lret
jmp
jne
sub
pushf
les
lds
add
add
add
add
shll
and
mov
add
sub
pop
push
jge
add
out
addb
mov
add
mov
push
add
add
mov
fstp
or
xchg
add
pop
into
dec
add
mov
dec
addr16
add
test
add
xor
mov
inc
mov
and
mov
mov
sub
dec
bound
mov
scas
jecxz
pop
std
pop
and
testl
dec
repz
mov
add
add
cmp
add
testb
mov
mov
add
fidivrl
jbe
jg
jp
addb
outsl
outsl
test
icebp
loop
pop
sbb
add
std
imul
enter
imul
mov
push
add
mov
js
push
add
mov
mov
xchg
inc
add
mov
push
pop
mov
dec
adc
in
pop
lods
mov
daa
add
add
or
adc
ficomps
sbb
lock
adc
inc
jmp
add
jmp
add
and
mov
adc
and
sub
in
xor
add
sahf
xchg
xchg
and
mov
fdivrs
mov
cmp
push
or
jl
add
popa
and
add
aam
and
mov
push
fstpl
fdivs
push
add
sub
xchg
add
in
mov
dec
out
fchs
add
pop
add
mov
mov
add
ja
add
addb
push
add
sbb
mov
lret
sbb
and
mov
dec
mov
add
add
mov
test
and
leave
rolb
add
sub
push
add
add
dec
gs
add
insl
lret
lea
add
mov
test
ja
ficoml
roll
gs
and
mov
add
repnz
jge
icebp
and
mov
cmp
add
and
mov
push
pushf
xor
cmp
rolb
loopne
jge
fsts
mov
hlt
add
add
lock
add
lods
push
add
stos
sbb
cld
mov
adc
std
xlat
inc
add
jmp
jmp
mov
cmp
sub
add
mov
std
or
add
add
add
ret
mov
mov
bound
mov
or
add
outsl
cwtl
dec
in
add
mov
cli
cmp
mov
add
outsb
addr16
add
mov
xchg
add
or
cwtl
pop
pushf
ret
loop
inc
jecxz
add
scas
stc
xchg
in
jb
out
lods
xchg
sbb
fs
add
xchg
add
jge
add
fsubp
leave
jecxz
in
mov
clc
pop
bound
mov
lret
cmp
ret
mov
and
mov
mov
lahf
pop
and
add
mov
test
add
add
jl
cld
or
mov
add
add
add
cmc
cltd
adc
add
insb
push
add
sbb
mov
mov
add
add
add
insb
add
flds
mov
push
cli
in
fbstp
repz
push
pop
xor
es
add
mov
jg
or
movsb
add
lahf
inc
add
das
sub
mov
and
mov
push
test
add
add
ret
mull
sarl
mov
mov
pushf
scas
outsl
and
xor
out
sahf
mov
das
pop
inc
bound
mov
fidivrl
add
in
lret
inc
add
push
add
add
xor
ljmp
xchg
add
or
cmp
add
add
ret
fcoml
xchg
add
xchg
xor
inc
jp
add
add
add
add
rolb
loope
rolb
jae
lea
pop
or
add
pushf
popa
mov
xchg
add
mov
shr
mov
add
fists
add
mov
add
cmp
mov
aas
rolb
cld
fwait
outsl
addb
add
pushf
dec
ficompl
add
test
or
xchg
iret
jp
and
mov
add
sbb
inc
leave
inc
aaa
add
add
fisubrs
aas
xlat
repz
cltd
lods
jl
mov
mov
push
pop
psubw
adc
cmp
add
add
mov
push
add
add
stos
ror
pop
or
mov
mov
sub
add
stos
push
add
jecxz
xor
xchg
imul
mov
loop
add
rolb
rolb
dec
rolb
loop
test
leave
gs
sub
mov
inc
nop
add
ret
push
inc
inc
adc
dec
push
pop
mov
mov
dec
jae
adc
add
or
hlt
add
scas
loop
jo
std
add
aam
push
enter
imul
std
pop
je
mov
jp
add
add
shll
xchg
pusha
add
add
jle
and
add
adc
sbb
sub
xor
imul
add
add
mov
push
iret
xchg
bound
mov
push
add
add
sbb
add
add
xchg
add
call
out
fisttps
add
add
mov
cmp
and
mov
scas
stc
xchg
add
add
add
lods
adc
sub
rolb
or
and
mov
std
adc
insl
ret
add
fcoml
iret
xor
lock
or
sbb
call
jo
xor
sbb
call
xchg
add
pop
pop
adc
add
push
add
lods
dec
mov
call
mov
mov
xor
adc
cmpsl
or
xchg
add
fdivrl
rolb
pop
xchg
ja
add
mul
mov
insl
mov
xor
add
movsb
add
inc
add
adc
push
add
js
add
mov
cmpsb
add
push
and
mov
rolb
aam
jbe
mov
add
xor
arpl
outsb
addl
rolb
dec
pop
adc
cs
add
into
sub
xchg
adc
addb
jecxz
add
add
lea
add
test
add
int3
mov
jmp
add
jecxz
rolb
cmp
push
inc
add
iret
mov
rcrl
or
dec
add
add
loop
pop
mov
ljmp
add
xchg
push
jns
stos
je
fstpt
add
test
into
jbe
in
daa
fsincos
iret
adc
mov
add
lea
add
adc
pop
mov
add
fbld
add
and
dec
push
popf
jl
cwtl
inc
push
das
fadds
repz
push
add
add
out
dec
sbb
aas
jb
mov
add
xchg
insb
ja
shll
sub
add
lock
mov
gs
add
add
add
add
mov
aaa
je
aaa
mov
push
divl
mov
mov
add
mov
add
fstl
pusha
add
xchg
add
add
dec
mov
inc
add
sub
push
cmp
add
scas
push
add
daa
out
rolb
add
or
inc
addl
adc
pop
adc
arpl
and
add
stc
mov
lret
xor
hlt
add
add
add
cmpl
jne
sti
sbb
cltd
popa
aaa
push
fiadds
repnz
push
add
repz
leave
pushf
jmp
sub
test
add
xchg
popf
cmc
mov
add
fwait
cld
nop
jmp
add
or
pop
pop
fwait
cld
nop
jmp
scas
fadds
scas
inc
add
cmp
push
mov
xchg
ret
mov
addl
cmp
add
fwait
cld
nop
jmp
add
clc
repnz
jae
dec
movl
fcomps
cli
inc
add
add
add
and
push
fs
repnz
jae
xor
add
fwait
cld
nop
jmp
add
add
add
add
nop
jmp
add
iret
add
xor
in
add
clc
repnz
jae
add
add
push
push
mov
xchg
ret
add
add
roll
push
mov
xchg
ret
xchg
add
add
add
xor
fwait
cld
nop
jmp
add
movl
fwait
imul
clc
repnz
jae
add
add
sub
add
jge
clc
repnz
jae
xchg
pop
fnsave
fadds
js
or
repnz
jae
or
repz
jno
mov
clc
repnz
jae
add
nop
fnstsw
xlat
mov
test
add
jmp
incl
add
movl
int3
jne
fwait
cld
nop
jmp
pop
xor
fstl
add
stos
negl
adc
add
testl
add
repnz
jae
mov
outsl
push
push
mov
xchg
ret
xor
dec
or
or
add
add
jge
or
add
jmp
fildl
xchg
ret
pop
add
xchg
add
mov
clc
repnz
jae
add
repnz
jae
add
add
xchg
fldenv
xor
add
clc
repnz
jae
cmp
sarl
jae
fstl
add
clc
repnz
jae
add
add
add
sbb
mov
xchg
ret
push
iret
insb
add
xchg
push
nop
jmp
add
add
add
testl
sbb
repnz
jae
pop
add
add
inc
inc
icebp
rolb
rolb
std
xor
clc
repnz
jae
add
xchg
mov
jbe
les
sbb
in
clc
repnz
jae
addl
test
sub
repnz
jae
xchg
push
nop
add
mov
add
clc
repnz
jae
add
add
mov
add
mov
push
mov
xchg
ret
add
and
adc
clc
clc
repnz
jae
xchg
dec
mov
xchg
xchg
add
fwait
cld
nop
jmp
add
pop
xchg
jge
inc
iret
and
clc
repnz
jae
add
push
clc
repnz
jae
cmp
push
add
xor
mov
cld
nop
jmp
add
add
add
add
repnz
jae
add
movl
test
fwait
cld
nop
jmp
add
repz
add
xor
add
clc
repnz
jae
add
outsl
je
fwait
cld
nop
jmp
xchg
add
add
flds
xchg
ret
test
add
ja
mov
clc
repnz
jae
imul
insb
xor
std
mov
clc
repnz
jae
inc
jbe
sti
pop
push
mov
xchg
ret
cmp
add
add
clc
repnz
jae
add
dec
ljmp
jmp
dec
dec
lods
add
popa
add
test
inc
add
scas
add
xor
je
dec
add
fwait
cld
nop
jmp
lods
add
imul
fnstenv
lea
clc
repnz
jae
dec
xchg
xor
sub
repz
mov
fwait
cld
nop
jmp
add
pop
xor
jne
push
clc
repnz
jae
add
inc
notl
xor
jo
jmp
add
add
or
push
xchg
jbe
into
movzwl
clc
repnz
jae
xchg
iret
add
fsubrs
mov
xchg
ret
mov
mov
add
add
mov
repnz
jae
repnz
xchg
add
sbbl
incl
add
add
repnz
subl
mov
xchg
ret
add
xchg
aam
sahf
mov
push
mov
xchg
ret
insb
add
add
add
add
clc
repnz
jae
into
mov
mov
xchg
ret
add
testl
push
clc
repnz
jae
add
add
sbb
jae
dec
insb
add
add
movb
stos
clc
repnz
jae
test
or
add
sbb
add
xchg
fcomps
add
inc
add
dec
push
clc
repnz
jae
xor
jl
cmpl
je
add
add
repnz
jae
add
and
adc
sbb
jno
clc
repnz
jae
add
add
sbb
sub
inc
add
add
jge
dec
mov
clc
repnz
jae
add
add
add
sbb
dec
cmp
cld
nop
jmp
xor
add
dec
jmp
and
pop
fcomps
out
mov
clc
repnz
jae
add
add
or
sub
fwait
cld
nop
jmp
add
add
movsb
add
jae
add
notl
add
aam
xchg
push
mov
xchg
ret
add
add
cmp
jae
mov
add
dec
xchg
dec
mov
clc
repnz
jae
xchg
xchg
jbe
xchg
or
dec
outsl
popa
fs
repnz
jae
scas
add
add
pop
in
rep
push
mov
xchg
ret
add
push
clc
repnz
jae
add
shl
sbb
cld
nop
jmp
test
or
add
add
add
mov
xchg
ret
dec
lods
pause
testl
fwait
cld
nop
jmp
iret
sub
fnstsw
rep
fwait
cld
nop
jmp
add
jbe
push
add
add
pusha
add
clc
repnz
jae
add
popf
push
mov
xchg
ret
add
add
mov
nop
jae
xor
insb
fldl
aam
add
idiv
repnz
jae
add
dec
push
add
add
clc
repnz
jae
testl
sub
add
repnz
jae
mov
xor
ljmp
jmp
incb
insb
add
add
pop
clc
repnz
jae
add
add
sar
nop
jae
popf
add
add
fldl
push
mov
cmp
ret
movsl
add
cmp
add
jae
add
and
clc
repnz
jae
mov
cmp
add
or
push
clc
repnz
jae
add
mov
add
mov
clc
repnz
jae
cmp
test
add
enter
mov
xchg
ret
mov
cmp
add
fwait
cld
nop
jmp
xchg
repnz
sub
lea
clc
repnz
jae
test
add
add
add
push
add
add
or
add
fwait
cld
nop
jmp
add
dec
add
add
scas
push
push
mov
xchg
ret
xor
add
xchg
dec
push
aad
add
jmp
add
add
xor
add
sub
add
push
mov
xchg
ret
pop
add
mov
inc
clc
repnz
jae
add
jge
inc
add
bound
mov
add
mov
fwait
cld
nop
jmp
add
lods
add
add
push
mov
xchg
ret
imul
push
mov
xchg
ret
add
lods
mov
cmp
mov
xchg
ret
or
inc
fwait
test
fwait
cld
nop
jmp
lods
add
add
add
push
fwait
cld
nop
jmp
add
add
add
mov
pusha
push
mov
xchg
ret
add
gs
aam
push
add
nop
jae
mov
fwait
dec
dec
fwait
cld
nop
jmp
add
add
nop
iret
nop
ffree
stc
xor
fwait
cld
nop
jmp
add
add
add
pop
mov
fwait
cld
nop
jmp
add
xchg
mov
xchg
ret
add
rorl
add
pop
sub
clc
repnz
jae
add
lods
movb
add
inc
cmp
cld
nop
jmp
add
imul
rcll
cmc
inc
add
add
add
mov
leave
fwait
cld
nop
jmp
add
add
test
and
mov
push
mov
xchg
ret
pop
add
add
mov
adc
clc
repnz
jae
add
into
insb
add
call
clc
repnz
jae
xor
mov
push
mov
xchg
ret
xor
add
mov
clc
repnz
jae
xchg
mov
cmp
fwait
cld
nop
jmp
sub
pusha
add
std
clc
repnz
jae
add
adc
repnz
jae
sub
mov
in
mov
push
mov
xchg
ret
add
add
lods
stos
mov
fwait
cld
nop
jmp
xchg
fstl
add
xchg
leave
add
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
pop
add
add
add
pop
push
push
mov
xchg
ret
adcl
add
add
push
mov
xchg
ret
insb
add
jge
sub
repnz
jae
add
push
repz
sub
test
add
add
sub
iret
add
les
repnz
jae
mov
add
sub
or
cld
nop
jmp
jge
nop
cmp
inc
add
mov
fwait
cld
nop
jmp
add
xchg
ret
push
nop
jae
add
xchg
lods
push
add
lahf
jmp
add
pop
add
mov
sub
add
add
clc
repnz
jae
lods
add
mov
xchg
ret
add
add
and
push
mov
xchg
ret
add
mov
mov
push
mov
xchg
ret
add
dec
into
xor
push
mov
xchg
ret
cmc
fwait
add
insb
mov
jg
loope
cld
nop
jmp
mov
add
xor
dec
inc
out
icebp
mov
add
fwait
cld
nop
jmp
pop
sub
dec
leave
push
fwait
cld
nop
jmp
pop
fadds
add
andl
test
jmp
add
add
add
nop
jae
imul
dec
add
mov
lea
clc
repnz
jae
fldl
xchg
movl
inc
push
mov
xchg
ret
test
scas
pop
insb
xchg
xor
adc
mov
add
hlt
incl
nop
add
xchg
add
jp
clc
repnz
jae
xchg
add
lret
add
repnz
jae
add
jbe
xchg
add
dec
add
sbb
add
add
sub
dec
mov
mov
nop
jmp
or
popf
add
push
lret
pop
clc
repnz
jae
xchg
into
pop
add
repz
add
push
mov
xchg
ret
imul
add
sbb
cmp
sub
add
dec
pop
add
fwait
add
add
arpl
test
push
mov
xchg
ret
or
add
push
clc
repnz
jae
add
repz
add
add
repnz
jae
add
pop
dec
sbb
xchg
nop
jae
insb
nop
add
push
push
mov
xchg
ret
add
sbb
call
clc
repnz
jae
add
add
add
clc
repnz
jae
dec
add
add
cmp
clc
repnz
jae
sub
add
fwait
cld
nop
jmp
pop
add
popf
add
add
repnz
jae
fadds
add
test
add
subl
repnz
jae
add
insb
dec
pop
push
mov
xchg
ret
inc
add
test
mov
push
mov
xchg
ret
fisttpll
mov
clc
repnz
jae
aam
sub
call
loope
inc
add
popf
xchg
mov
add
cld
nop
jmp
mov
pop
add
xchg
push
mov
push
mov
xchg
ret
push
add
add
ret
push
mov
xchg
ret
or
add
fldl
pop
and
repnz
jae
insb
add
add
add
add
fwait
cld
nop
jmp
lods
add
dec
popf
add
add
clc
repnz
jae
fadds
add
pop
push
clc
repnz
jae
test
add
je
push
push
mov
xor
bound
int
fldl
cmp
cmp
idiv
clc
repnz
jae
add
add
push
mov
clc
repnz
jae
flds
notl
add
fwait
cld
nop
jmp
negl
popf
add
cmp
push
sub
repz
incl
scas
add
add
pop
clc
repnz
jae
nop
neg
mov
popf
cmp
add
mov
sub
test
cmc
lcall
pushl
mov
push
mov
xchg
ret
add
repz
mov
mov
faddl
xchg
ret
add
add
lea
clc
repnz
jae
add
cmpsl
fmull
mov
xchg
ret
or
or
arpl
clc
repnz
jae
add
push
add
jmp
add
dec
movsl
add
add
add
add
dec
xchg
dec
xorl
clc
repnz
jae
xchg
add
inc
add
add
mov
clc
repnz
jae
dec
sub
enter
clc
repnz
jae
add
add
dec
je
fwait
cld
nop
jmp
movsl
testl
sti
clc
repnz
jae
add
xor
inc
clc
repnz
jae
lods
dec
xchg
add
add
add
inc
add
add
add
repnz
jae
xor
rolb
ds
push
mov
xchg
ret
dec
add
scas
add
pop
push
clc
repnz
jae
dec
movsl
xor
dec
stos
xor
clc
repnz
jae
add
and
clc
repnz
jae
push
test
cmpsl
lods
mov
push
mov
xchg
ret
iret
add
xor
fmull
scas
enter
jae
or
add
data16
xchg
ret
repz
add
repnz
jae
add
add
xchg
fwait
imul
nop
jae
add
mov
clc
repnz
jae
xchg
imul
push
jmp
add
add
add
add
add
aaa
icebp
call
jae
repz
add
cmc
dec
dec
clc
repnz
jae
add
xchg
adcl
add
mov
jecxz
aam
and
mov
push
fwait
cld
nop
jmp
pop
add
int
pop
jae
repnz
jae
scas
dec
add
cld
clc
repnz
jae
insb
add
add
add
outsl
pusha
clc
repnz
jae
repnz
add
add
incl
add
dec
add
or
repnz
jae
dec
popa
add
xchg
mov
jae
add
add
ret
mov
clc
repnz
jae
xor
xor
clc
repnz
jae
xor
xchg
mov
jmp
jbe
frstor
sub
add
push
clc
repnz
jae
push
add
fldl
add
pop
movzwl
clc
repnz
jae
imul
add
clc
repnz
jae
add
jge
inc
das
mov
clc
repnz
jae
add
add
daa
mov
jmp
incb
add
and
add
add
fwait
cld
nop
jmp
add
fwait
cld
nop
jmp
or
cmp
xchg
mov
fwait
cld
nop
jmp
jbe
add
add
shl
add
pusha
add
nop
jmp
iret
xchg
gs
or
mov
xchg
ret
xor
xchg
div
add
cmp
fwait
cld
nop
jmp
repnz
cmc
lods
push
push
mov
xchg
ret
xor
decb
mov
clc
repnz
jae
add
shl
clc
repnz
jae
cmc
add
add
inc
mul
add
or
inc
add
xchg
xor
aad
add
or
repz
add
clc
repnz
jae
add
add
and
fwait
cld
nop
jmp
add
add
add
and
mov
xchg
ret
add
add
lea
fwait
cld
nop
jmp
xor
add
xchg
arpl
cld
nop
jmp
lods
add
insb
add
je
add
clc
repnz
jae
add
xchg
add
add
mov
mov
outsb
add
clc
repnz
jae
add
add
pop
fwait
cld
nop
jmp
add
scas
dec
test
adc
repnz
jae
dec
add
jbe
repz
pop
or
repnz
jae
add
add
add
fwait
cld
nop
jmp
add
add
movsl
movl
fmuls
add
clc
repnz
jae
add
cmc
daa
xor
dec
clc
repnz
jae
dec
sub
inc
xchg
enter
mov
xchg
ret
mov
add
or
test
repnz
jae
add
clc
repnz
jae
fwait
add
cmp
add
inc
add
inc
in
push
mov
xchg
ret
repz
add
adc
jp
fwait
cld
nop
jmp
repz
add
clc
repnz
jae
movsl
push
imul
dec
pop
mov
fwait
cld
nop
jmp
add
add
iret
add
add
repnz
jae
cmp
jge
add
rep
clc
repnz
jae
incb
movsl
into
add
add
add
add
fwait
cld
nop
jmp
add
pop
add
add
repnz
jae
add
repnz
add
clc
repnz
jae
add
xor
add
repnz
jae
xchg
aam
add
add
mov
xchg
ret
dec
push
dec
add
popf
adc
add
sub
subl
push
add
movsl
dec
push
clc
repnz
jae
imul
add
add
stc
clc
repnz
jae
test
cmp
jae
movl
or
or
add
cld
incb
add
outsb
mov
clc
repnz
jae
add
repz
nop
jmp
add
mov
add
test
jne
clc
repnz
jae
test
stos
clc
repnz
jae
add
xchg
add
add
push
push
mov
xchg
ret
negl
add
clc
repnz
jae
imul
add
add
add
sbb
mov
adc
repnz
jae
add
add
adc
repnz
jae
dec
xor
mov
fdiv
inc
add
add
add
fiaddl
cld
nop
jmp
add
add
popf
add
add
clc
repnz
jae
sub
add
push
cld
pusha
clc
repnz
jae
add
incb
add
pop
adc
in
loopne
add
cmp
incb
das
push
clc
repnz
jae
xor
add
add
mov
push
mov
xchg
ret
iret
add
xchg
sub
clc
repnz
jae
add
xor
add
ret
add
jae
sub
add
add
mov
adc
repnz
jae
movsl
sub
add
add
fdivrp
repnz
jae
add
repz
add
add
add
or
add
add
stc
add
clc
repnz
jae
mov
movsl
add
rcll
add
mov
clc
repnz
jae
add
or
repnz
jae
nop
aam
lods
lods
fdiv
add
rolb
dec
mov
clc
repnz
jae
add
add
add
je
clc
repnz
jae
add
pop
add
clc
repnz
jae
sub
add
xor
mov
add
add
repnz
jae
sub
add
add
je
clc
repnz
jae
pop
lea
sti
fwait
cld
nop
jmp
fldl
add
dec
add
push
mov
xchg
ret
lods
lods
add
mov
xchg
ret
add
nop
add
jge
clc
repnz
jae
movl
fiaddl
fwait
cld
nop
jmp
add
add
push
idivl
and
fwait
cld
nop
jmp
fcoms
add
push
add
add
clc
repnz
jae
fld
add
out
pop
push
mov
xchg
ret
add
fldl
add
cmp
nop
jae
add
add
add
add
outsb
movzwl
clc
repnz
jae
add
add
cmp
repnz
jae
testl
xlat
int
leave
sub
repnz
jae
pop
fdivr
fcoms
fwait
cld
nop
jmp
add
mov
push
pop
fwait
cld
nop
jmp
add
xchg
add
add
add
inc
adc
repnz
jae
add
fcoms
add
repnz
jae
pop
inc
add
add
shrb
mov
xchg
ret
roll
add
add
clc
repnz
jae
add
or
repz
cmp
cli
aam
add
add
jbe
jg
enter
jae
add
add
repz
mov
inc
add
add
mov
pop
push
mov
xchg
ret
dec
mov
add
icebp
clc
repnz
jae
sub
lods
add
or
sar
repnz
jae
sub
test
jne
std
add
clc
repnz
jae
iret
add
add
nop
add
mov
daa
cmp
lods
in
add
mov
dec
add
mov
xchg
ret
add
add
clc
repnz
jae
add
fistl
repnz
jae
add
dec
add
add
adc
or
mov
xchg
ret
add
aam
pop
xchg
add
mov
mov
adc
repnz
jae
fldl
add
add
add
fwait
cld
nop
jmp
add
sbb
jae
mov
add
inc
jp
jg
fwait
cld
nop
jmp
add
or
add
pop
push
clc
repnz
jae
add
mov
clc
repnz
jae
into
negl
clc
repnz
jae
add
sub
add
nop
add
mov
xchg
ret
add
popf
xchg
push
xchg
ret
inc
push
mov
xchg
ret
add
xor
movsl
pusha
add
nop
jae
iret
add
into
and
push
mov
xchg
ret
add
add
add
mov
add
and
add
clc
repnz
jae
add
nop
add
call
push
mov
xchg
ret
add
sub
add
jne
lods
fwait
cld
nop
jmp
test
add
add
xor
loope
mov
push
mov
xchg
ret
xchg
add
add
add
clc
repnz
jae
add
iret
add
and
mov
sub
repnz
jae
push
cmp
pop
add
add
push
mov
xchg
ret
popa
add
xchg
add
pop
mov
clc
repnz
jae
or
push
clc
repnz
jae
xchg
add
gs
js
and
repnz
jae
repnz
les
fimull
mov
nop
jmp
iret
add
pop
imul
mov
xchg
ret
add
popa
repz
test
repnz
jae
add
mov
jp
clc
clc
repnz
jae
xchg
add
roll
add
pop
pop
clc
repnz
jae
add
or
add
pushl
clc
repnz
jae
xchg
add
add
mov
mov
repnz
jae
popf
xchg
add
clc
repnz
jae
shrl
add
add
add
repnz
jae
mov
add
test
and
cld
nop
jmp
add
dec
nop
add
add
nop
jae
add
add
div
clc
repnz
jae
add
iret
xchg
add
lods
out
lcall
gs
add
test
inc
clc
repnz
jae
add
xchg
xchg
push
test
std
clc
repnz
jae
add
add
add
je
repnz
jae
dec
nop
popf
jbe
add
repnz
jae
dec
add
xchg
push
mov
add
add
and
add
xchg
add
insb
jne
clc
repnz
jae
add
add
add
call
cmp
ret
add
add
test
add
clc
repnz
jae
movl
adc
mov
xchg
ret
fsubrs
add
add
imul
clc
repnz
jae
fadds
add
adc
repnz
jae
movsl
add
iret
add
mov
jmp
add
fsts
mov
clc
repnz
jae
pop
and
repnz
jae
add
pop
or
cli
call
clc
repnz
jae
xchg
pop
dec
popa
adc
nop
jmp
cmc
repz
outsb
cmp
push
mov
xchg
ret
mov
push
xchg
jbe
jae
imul
add
add
repnz
jae
xor
nop
jmp
add
repz
add
add
mov
nop
jae
add
dec
add
mov
clc
repnz
jae
add
cmc
add
push
mov
xchg
ret
add
popf
add
fldl
push
mov
clc
repnz
jae
add
push
clc
repnz
jae
add
push
dec
iret
add
cmp
cld
nop
jmp
jge
fwait
jge
dec
frstor
cmp
repnz
jae
addl
outsl
call
clc
repnz
jae
add
add
mov
xchg
ret
fnstcw
add
add
cmpl
fwait
cld
nop
jmp
xor
add
cmpw
fwait
cld
nop
jmp
add
nop
add
add
add
test
fwait
cld
nop
jmp
sub
dec
repnz
lea
clc
repnz
jae
add
repz
movb
mov
fwait
cld
nop
jmp
add
add
add
and
push
mov
xchg
ret
add
add
in
mov
push
mov
xchg
ret
add
inc
add
in
add
xchg
add
add
mov
mov
xchg
ret
add
add
into
add
lea
push
mov
xchg
ret
dec
xor
add
popf
je
clc
repnz
jae
dec
add
mov
clc
repnz
jae
add
add
rolb
add
add
nop
jae
add
add
test
inc
add
lret
clc
repnz
jae
add
add
cmpb
jae
add
add
add
push
xor
push
add
add
clc
repnz
jae
add
cmp
jae
jge
lods
popa
add
mov
clc
repnz
jae
cmp
add
incb
xor
mov
add
pushl
push
mov
xchg
ret
add
push
clc
repnz
jae
add
dec
fsubs
mov
clc
repnz
jae
xor
add
add
repnz
jae
add
pop
add
jmp
mov
add
fldl
add
add
push
mov
xchg
ret
or
jl
jge
clc
repnz
jae
add
fucomip
cmp
add
clc
repnz
jae
or
add
cld
nop
jmp
repz
fwait
sub
add
repnz
in
cmp
cld
nop
jmp
cmc
xor
movl
shrl
cld
nop
jmp
add
add
clc
repnz
jae
add
xchg
mov
push
push
mov
xchg
ret
add
cmc
imul
cmp
clc
repnz
jae
add
test
add
add
add
je
js
repnz
jae
bnd
add
fwait
cld
nop
jmp
popf
repz
add
aad
add
push
clc
repnz
jae
xor
add
xrelease
sbb
fcomps
repnz
incl
add
add
xchg
cmp
mov
repz
cld
nop
jmp
xor
add
or
mov
xchg
ret
add
add
pop
pop
outsb
je
fwait
cld
nop
jmp
mov
add
cmp
sub
cmp
ret
movsl
add
aam
pop
pop
push
mov
xchg
ret
movl
add
add
test
repnz
jae
iret
xchg
add
inc
repz
pushl
add
add
xchg
pop
push
add
push
test
clc
repnz
jae
repnz
push
jo
lahf
je
clc
repnz
jae
nop
movl
adc
les
push
mov
xchg
ret
add
add
repnz
jae
nop
popa
push
add
mov
clc
repnz
jae
xchg
add
add
clc
repnz
jae
add
fld
add
out
inc
mov
push
clc
repnz
jae
add
sub
cmp
in
ret
add
mov
mov
push
add
repnz
jae
jge
add
xor
loopne
outsl
pusha
clc
repnz
jae
xchg
add
mov
or
nop
jmp
or
insb
add
jns
add
clc
repnz
jae
mov
loope
movzwl
clc
repnz
jae
xor
add
jge
clc
repnz
jae
add
fsubrs
call
jmp
add
dec
dec
sub
add
cld
incl
popf
dec
or
xor
add
clc
repnz
jae
cmp
jbe
add
mov
clc
repnz
jae
dec
or
nop
add
repnz
jae
mov
add
call
clc
repnz
jae
imul
add
xchg
insb
push
push
mov
xchg
ret
add
mov
clc
repnz
jae
add
add
push
clc
repnz
jae
add
add
add
and
repnz
jae
add
dec
add
add
xchg
add
lsl
clc
repnz
jae
add
add
sbb
inc
add
dec
xor
add
les
fwait
cld
nop
jmp
nop
into
decb
ret
js
clc
repnz
jae
xor
add
add
add
outsl
xor
clc
repnz
jae
add
orl
cld
nop
jmp
dec
add
add
popa
scas
test
addb
mov
add
repnz
jae
add
popa
xor
in
ret
jmp
incl
inc
add
xor
add
ds
fwait
cld
nop
jmp
insb
pop
fldl
dec
incb
add
jne
clc
repnz
jae
add
repnz
mov
clc
repnz
jae
dec
into
test
mov
pushl
push
mov
xchg
ret
add
iret
fisttpll
jmp
jae
mov
lods
rolb
outsl
add
clc
repnz
jae
add
or
add
mov
clc
repnz
jae
cmpl
repz
add
pop
jmp
add
add
add
dec
popf
cltd
call
clc
repnz
jae
add
repz
pushl
fwait
cld
nop
jmp
xchg
cmc
xchg
push
add
test
clc
repnz
jae
xor
mov
add
add
filds
or
add
jge
or
clc
repnz
jae
nop
add
add
dec
in
mov
clc
repnz
jae
add
add
add
call
fwait
cld
nop
jmp
movl
add
pop
push
mov
xchg
ret
ror
addl
cmpsb
add
mov
clc
repnz
jae
pop
add
push
add
and
mov
faddl
pop
add
ret
add
inc
and
test
add
repnz
jae
add
pop
fisubl
xor
add
clc
repnz
jae
add
js
dec
add
repnz
jae
imul
dec
add
clc
repnz
jae
aam
add
add
push
clc
repnz
jae
xor
add
cmc
push
add
mov
movsl
fwait
cld
nop
jmp
pop
xchg
or
add
mov
clc
repnz
jae
add
add
add
clc
repnz
jae
lods
iret
add
add
clc
repnz
jae
add
add
into
and
nop
jae
test
fwait
xchg
add
push
push
mov
xchg
ret
add
cmc
test
mov
clc
repnz
jae
add
xor
add
outsl
xor
clc
repnz
jae
xchg
or
add
mov
fwait
cld
nop
jmp
add
pop
mov
fwait
mov
fwait
cld
nop
jmp
add
add
xor
clc
repnz
jae
incb
inc
sahf
call
clc
repnz
jae
add
xchg
lods
or
repnz
jae
repz
add
add
xchg
inc
add
stos
push
mov
xchg
ret
add
add
lods
repnz
cmp
jmp
loopne
add
xor
movzwl
clc
repnz
jae
dec
xchg
mov
add
clc
repnz
jae
add
add
add
adc
repnz
jae
cmc
add
enter
nop
jmp
jbe
add
pop
add
add
sbb
clc
repnz
jae
add
scas
movzwl
fwait
cld
nop
jmp
sub
incb
mov
rcll
add
sbb
data16
clc
repnz
jae
testl
adc
mov
xchg
ret
xchg
add
add
mov
push
mov
xchg
ret
add
shrl
popl
clc
repnz
jae
add
and
fwait
cld
nop
jmp
add
pop
pop
clc
repnz
jae
add
pop
add
push
add
add
popa
add
repnz
jae
rep
dec
cmc
fsubrs
xor
repnz
jae
add
repz
add
pop
clc
repnz
jae
dec
add
popf
xchg
or
push
mov
xchg
ret
fldl
inc
pop
add
mov
clc
repnz
jae
xchg
add
clc
fwait
cld
nop
jmp
add
or
add
jne
add
test
push
mov
xchg
ret
add
cmp
nop
add
inc
gs
incl
nop
jmp
insb
add
add
into
aam
mov
clc
repnz
jae
push
add
mov
clc
repnz
jae
add
xchg
pop
add
add
jmp
mov
fs
jo
sbb
add
aad
test
daa
insb
pushl
clc
repnz
jae
add
add
clc
repnz
jae
add
mov
adc
clc
repnz
jae
add
popf
mov
enter
nop
jae
add
push
add
add
add
add
idiv
incl
add
pop
clc
repnz
jae
add
add
push
clc
repnz
jae
add
add
add
cld
nop
jmp
gs
add
inc
add
or
clc
repnz
jae
add
or
movb
dec
icebp
inc
add
add
add
movl
fcos
push
repz
add
fwait
add
rol
clc
repnz
jae
add
add
xor
fwait
cld
nop
jmp
add
add
out
add
add
idiv
incl
test
sub
or
inc
add
add
add
and
repnz
jae
add
pushf
xor
push
mov
xchg
ret
test
jge
add
add
nop
jmp
add
or
add
xor
clc
repnz
jae
nop
add
insb
add
popf
jg
mov
ret
lahf
pop
add
dec
jecxz
add
push
scas
push
clc
repnz
jae
lods
add
add
add
mov
add
add
push
sub
jb,pt
fwait
cld
nop
jmp
add
jg
out
clc
repnz
jae
incb
not
dec
pop
pop
lcall
icebp
incl
cmp
jnp
inc
sub
repnz
jae
add
add
xchg
add
rep
clc
repnz
jae
add
push
add
mov
xor
or
fnstsw
incl
add
add
lods
lods
pop
xchg
popa
dec
pusha
push
mov
xchg
ret
repz
orl
repnz
jae
add
xor
movl
add
repnz
jno
add
add
add
push
inc
mov
fnsave
add
push
mov
xchg
ret
add
pusha
clc
repnz
jae
xchg
jbe
test
push
add
test
clc
repnz
jae
xor
sbb
cld
nop
jmp
repz
imul
add
test
call
inc
add
popa
test
push
clc
repnz
jae
movsl
xchg
imul
fimull
repnz
jae
push
aam
test
or
mov
ljmp
add
into
add
or
or
repnz
jae
add
add
push
cmp
stos
call
clc
repnz
jae
pop
add
xchg
add
add
clc
clc
repnz
jae
add
xchg
inc
pop
mov
clc
repnz
jae
add
test
les
repnz
jae
mov
add
or
clc
repnz
jae
add
dec
lods
add
push
push
mov
xchg
ret
add
or
ret
mov
mov
xchg
ret
add
add
xchg
add
pop
fwait
cld
nop
jmp
add
push
cmp
pop
add
fwait
cld
nop
jmp
xor
add
push
push
mov
xchg
ret
add
add
popa
clc
repnz
jae
add
add
add
add
repnz
jae
add
add
mov
clc
repnz
jae
test
add
fwait
cld
nop
jmp
add
add
add
popf
jge
add
add
xor
add
clc
repnz
jae
gs
add
mov
fwait
cld
nop
jmp
fnsave
popa
dec
jbe
push
push
mov
xchg
ret
mov
orl
add
and
jmp
roll
add
dec
sarb
add
adc
in
and
add
or
mov
sbb
addb
mov
add
pop
push
push
sbb
and
mov
vmovapd
add
insl
jp
fstpt
add
das
pop
pusha
add
jb
out
aad
add
pop
mov
into
je
les
add
xchg
add
adc
add
aas
ljmp
test
addb
add
xor
add
sub
ret
cmp
js,pt
xchg
add
add
mov
lea
add
add
mov
inc
add
or
push
add
addr16
push
add
add
filds
add
xchg
add
add
stc
pusha
add
cmp
adc
xchg
pop
inc
add
or
add
mov
pop
xor
fidivs
and
mov
inc
xlat
fadds
jne
lea
inc
add
add
sub
jo
push
add
add
cs
stos
sub
adc
inc
dec
ret
inc
adc
filds
add
sbb
add
call
add
cwtl
aam
push
add
and
dec
cmp
fidivrl
sub
mov
add
or
stc
aas
cmp
fisttpl
sbb
cmp
mov
ljmp
dec
dec
movsb
add
mov
add
pop
adc
push
lret
push
add
or
or
add
add
enter
ja
xor
add
add
in
mov
or
popf
jbe
das
jb
arpl
add
add
add
xchg
add
add
mov
mov
ret
cmp
dec
inc
add
ds
sub
add
popf
scas
imul
outsb
ja
iret
mov
add
testb
mov
push
add
in
out
mov
xchg
push
xchg
add
add
lods
xchg
xor
xchg
add
xorl
add
in
sbb
aaa
rolb
loopne
cwtl
inc
mov
push
les
jno
mov
cmpsl
push
add
add
push
add
add
call
cmp
and
or
push
add
add
mov
outsb
mov
and
add
scas
xchg
mov
add
insl
movsl
cld
addb
add
jae
add
xor
inc
push
int3
mov
dec
mov
mov
movb
dec
push
ret
jne
sub
sahf
sbb
adcl
ret
stos
mov
add
enter
add
notl
add
daa
add
mov
add
lea
xchg
add
cmc
mov
sub
loopne
testb
mov
enter
add
add
pop
sub
gs
add
mov
jg
jb
xchg
add
and
mov
mov
add
or
add
std
in
sbb
cmp
pop
adc
xor
xchg
add
add
add
mov
xchg
add
or
loopne
cs
mov
iret
fstpt
add
adc
xor
repz
push
jge
dec
sbb
add
dec
fsts
repnz
cmp
aad
sub
add
add
xor
sub
add
movsb
add
cli
imul
mov
mov
pusha
add
mov
lock
lahf
add
mov
ss
add
add
mov
mov
mov
add
scas
aam
iret
rcl
add
dec
xor
outsl
mov
js
add
sub
mov
add
je
popa
sub
add
out
ja
add
jmp
add
data16
in
add
cs
rolb
fwait
inc
add
add
stos
push
mov
push
mov
jnp
add
mov
cmc
xor
stos
rcrl
imul
mov
test
xlat
pop
and
mov
loop
sbb
cmp
imul
adc
push
add
add
mov
adc
mov
push
add
adc
sti
xchg
das
imul
sub
lods
mov
mov
mov
movsl
repz
inc
xchg
adc
xor
fnstenv
xor
push
add
adc
add
mov
mov
inc
add
xchg
add
add
add
add
xchg
adc
pop
sub
add
xlat
mov
mov
xor
notl
add
mov
mov
cmp
pop
xchg
add
leave
cmpsb
add
test
lea
fbstp
movsb
add
add
mov
ret
notl
adc
cmp
in
pop
pop
pusha
add
adc
mov
stos
pop
adcl
add
movsb
add
adc
pop
add
loopnew
data16
js
sbb
movsl
mov
mov
sub
add
add
aas
bound
mov
add
sub
mov
add
pop
repnz
or
int3
xchg
add
add
add
sub
mov
add
mov
add
push
add
fadds
add
cltd
inc
xchg
rcrl
divl
jge
add
or
repnz
pushf
sub
dec
je
outsb
mov
lock
shll
xchg
sub
negl
jmp
hlt
add
in
test
insl
lahf
les
xlat
and
push
lock
cld
bound
mov
add
xchg
add
add
xchg
movb
mov
outsl
stos
int3
add
das
ja,pt
push
add
xor
inc
and
mov
add
lcall
adc
sub
add
and
push
data16
sub
add
int3
jbe
sub
int3
in
addb
or
jnp
std
test
mov
add
add
xchg
repz
jmp
add
stos
bswap
imul
sub
imul
gs
add
arpl
loopne
dec
imul
adc
lret
mov
jle
mov
cmp
xor
outsl
data16
mov
push
jle
add
rolb
add
jae
add
loopne
addl
mov
in
add
mov
add
add
jge
pop
movsb
add
loope
rolb
jbe
movb
add
add
int3
mov
add
add
pushl
pop
lods
adcl
add
aas
inc
std
cmp
mov
pop
lahf
rolb
and
mov
mov
add
add
lock
add
loope
data16
test
call
or
mov
sub
add
xchg
add
xchg
outsb
ret
push
add
xchg
add
sub
mov
jmp
jge
push
add
mov
lea
add
nop
add
mov
sub
add
insb
ds
add
shll
ror
xchg
nop
add
rorl
xchg
add
out
fsin
sub
negl
cmp
add
mov
add
leave
add
push
add
add
mov
stc
mov
popf
imul
test
cmc
in
add
add
push
mov
add
add
or
add
stc
push
sti
js
add
arpl
outsb
pop
or
or
into
mov
pop
mov
enter
add
stos
push
stc
or
cmp
jp
jno
add
add
loop
adc
addb
add
cli
fnstsw
jmp
mov
pxor
add
pop
pop
jg,pn
mov
add
mov
add
cltd
inc
mov
mov
testb
add
repnz
imul
mov
sub
add
add
mov
mov
add
repnz
ja
testb
mov
iret
and
mov
mov
movsl
imul
popf
das
add
mov
stos
dec
mov
sbb
fstps
or
scas
and
xchg
xchg
add
add
add
clc
mov
add
sbb
pop
mov
mov
push
add
xchg
mov
addr16
add
lret
add
mov
add
pop
popa
addb
inc
add
add
stc
mov
add
into
mov
push
add
daa
inc
add
cmp
add
mov
push
inc
xor
loopne
es
jmp
in
jne
and
loope
add
add
add
popf
in
fimull
add
jnp
add
add
pop
pop
mov
push
add
clc
jno
mov
pop
stos
nop
add
data16
pop
bound
mov
pop
aas
push
add
cmp
jmp
pop
mov
xchg
insl
and
adc
add
fadd
mov
subl
xor
popf
sbb
push
add
mov
adc
add
sub
add
ret
addb
add
add
xchg
cs
add
mov
ficomps
jecxz
mov
test
ret
or
add
aaa
and
jl
add
add
addb
lcall
dec
popa
scas
push
add
cmp
lock
add
dec
or
sub
mov
inc
add
add
faddl
jne
loopne
roll
jmp
mov
jns
scas
dec
push
add
aam
inc
cmp
add
sbb
jo
or
jmp
cltd
push
nop
add
mov
gs
cmp
std
and
inc
add
das
dec
je
imul
add
add
push
and
cmp
sbb
insb
out
jl
clc
or
mov
mov
push
add
stos
adc
inc
add
cmp
add
add
add
xchg
mov
les
repnz
inc
and
inc
add
add
mov
mov
ja
add
xchg
add
stc
popa
cwtl
bound
mov
test
add
push
mov
jmp
jbe
and
xchg
push
add
mov
pop
and
mov
adc
sub
pop
jecxz
pop
push
cmp
xor
fnstenv
mov
add
pop
mov
pop
sub
ss
jl
out
and
in
or
mov
cmpsb
add
int
xchg
pop
jbe
outsl
mov
xchg
add
or
add
dec
mov
pop
and
add
inc
add
ljmp
decb
add
sbb
repz
add
mov
aam
mov
add
add
xchg
adc
and
mov
push
add
or
add
add
add
add
in
add
mov
jmp
mov
pop
sbb
add
add
add
add
jmp
pop
cmpl
add
xlat
mov
and
mov
adc
test
aam
aas
mov
stos
outsl
lret
mov
xchg
add
test
dec
inc
add
xchg
iret
fwait
aas
mov
ljmp
add
add
testb
jns
arpl
add
inc
add
roll
fcoml
cmp
cli
push
leave
mov
add
dec
mov
test
and
dec
clc
mov
jl
add
add
ljmp
xor
jge
add
xor
pop
call
ja
pusha
add
movb
or
add
dec
or
insl
dec
mov
or
outsb
mov
cmp
pusha
add
or
out
or
aas
scas
popa
out
aam
js
inc
add
mov
mov
add
cmpsb
add
insl
fsubl
leave
pop
add
pop
lcall
add
mov
or
push
ret
sbb
ss
mov
cmc
loop
movb
add
add
pop
ret
loope
mov
sub
testb
cmpsl
mov
ds
push
insb
rorl
ds
add
xor
xchg
subl
add
imul
cmc
les
popa
push
add
add
add
das
dec
data16
inc
add
add
mov
add
sti
adc
fcomps
mov
pushf
lock
xor
rolb
xor
pop
jo
mov
pop
in
dec
dec
jp
mov
add
add
pushf
jle
cmpsb
add
pusha
add
push
add
add
in
mov
lods
js
or
cwtl
sbb
mov
add
sbb
cmp
insb
xchg
add
add
mov
std
xor
mov
cmp
test
mov
lret
add
inc
xor
push
add
lret
mov
bound
mov
dec
nop
add
dec
popf
xlat
ds
dec
inc
add
mov
jge
aam
inc
add
loop
jle,pt
push
add
add
lods
mov
leave
data16
add
sub
xor
rolb
push
add
mov
add
inc
add
pop
xor
test
dec
push
add
mov
add
inc
add
add
add
addr16
cmp
lods
dec
pop
jae
add
push
mov
cmpsl
lods
testb
mov
addb
stos
icebp
jb
xchg
int
jecxz
addb
xchg
pop
or
add
push
mov
loopne
cmc
fadd
push
add
add
add
jle
xor
sub
aad
lods
aas
mov
sbb
mov
sbb
cs
arpl
scas
inc
add
add
ljmp
testb
inc
movsl
lahf
test
inc
add
mov
add
dec
and
mov
cmp
or
push
push
out
adc
mov
add
mov
add
mov
add
add
cmp
rolb
add
push
dec
mov
cld
ret
daa
movsl
shll
add
mov
aas
in
mov
add
pop
inc
add
scas
or
and
in
sbbl
loop
push
daa
sub
add
and
mov
xlat
mov
or
add
addr16
or
dec
lds
add
sub
addb
lock
ljmp
jecxz
add
cs
add
or
mov
and
mov
add
push
add
cmp
cltd
movsl
fmull
sbb
jl
addb
pop
cltd
lret
and
mov
cmpsb
add
add
cmp
enter
add
add
sbb
inc
add
add
push
sbbl
mov
movb
jg
adc
mov
cltd
jg
in
add
mov
sub
or
inc
jmp
mov
aas
pop
dec
fnstcw
jb
adc
add
fsubl
out
ret
lcall
and
out
fsub
cwtl
pop
lea
call
add
incb
lahf
out
fstps
fstpl
add
push
movb
add
add
dec
mov
sub
mov
push
fisubrl
add
hlt
add
xchg
mov
cltd
inc
sub
addl
imul
sti
push
add
aam
pusha
add
and
and
mov
adc
add
fwait
xor
cmp
xchg
xor
sbb
add
movzbl
add
add
add
lahf
jo
int
push
sub
xor
mov
enter
jle
fmuls
imul
adc
jne
test
add
add
mov
inc
add
hlt
add
add
imul
xor
mov
enter
rorl
add
pop
in
and
add
xchg
jne
add
mov
mov
add
add
mov
jo
mov
mov
mov
pop
jns
add
add
leave
in
mov
ret
mov
add
mull
add
cwtl
cmp
lret
test
cmpsb
add
cmp
es
popf
popf
aaa
leave
and
add
add
xchg
add
add
sub
pop
rolb
inc
add
lds
cmc
cld
fwait
inc
inc
mov
loopne
addl
out
add
aad
add
jp
fistl
xor
shll
sarl
mov
test
mov
jns
dec
in
je
mov
jg
popf
mov
inc
add
push
add
add
add
push
add
arpl
dec
pop
mov
cmp
mov
sbb
add
and
lods
dec
pop
testl
add
dec
sub
add
jg
cmpsb
add
add
test
and
or
rorl
xchg
outsl
notl
xchg
add
adc
nop
aam
imul
cmp
add
mov
push
lret
push
iret
jmp
loopne
lret
push
add
inc
xchg
les
mov
push
mov
into
jne
add
jmp
ljmp
cmp
mov
add
add
add
outsl
pop
push
and
mov
out
out
andl
shll
or
mov
cmp
mov
or
sbb
mov
inc
add
cmp
add
mov
dec
lcall
jecxz
add
add
out
lds
add
inc
jp
data16
add
out
das
jbe
add
inc
add
mov
push
add
loop
addb
add
test
mov
add
lahf
nop
add
mov
pop
movb
push
add
add
decl
ret
jae
scas
repnz
out
int
add
stos
scas
pmaxub
lcall
push
add
add
add
fcomps
rolb
add
outsl
bound
mov
sbb
cmpsb
add
pop
mov
pop
cs
add
clc
int
and
mov
jmp
add
dec
sbb
mov
pop
and
mov
add
mov
adc
aaa
mov
out
dec
imul
add
add
cmp
cmpsb
add
out
mov
add
dec
ds
xor
leave
push
add
jg
add
mov
insl
mov
aad
mov
mov
push
shrl
out
in
cmp
pop
icebp
jne
jp
add
add
mov
add
dec
test
pop
test
push
add
xor
adc
lcall
mov
sub
mov
jns
stos
lock
or
imul
adc
xor
jnp
mov
cmp
xchg
jnp
push
inc
add
add
mov
dec
pop
push
add
mov
xor
mov
add
xor
ja
add
aaa
les
jle
adc
mov
mov
cmp
mov
stos
push
test
cmp
loop
and
sahf
fdivrp
ret
pop
sub
lods
sub
xor
addb
daa
cwtl
jae
daa
stos
pop
sbb
shl
add
mov
imul
lret
pop
sbb
add
xor
xchg
or
add
inc
add
rolb
mov
out
mov
mov
or
jb
lds
push
add
sub
cmp
clc
in
push
add
pop
leave
in
fistpll
cmp
add
add
add
in
xchg
jb
cmp
mov
xchg
add
add
or
cmpl
add
fisubs
add
pushf
insl
jne
add
inc
add
mov
or
add
insb
xchg
xchg
add
add
iret
fnstsw
add
stos
dec
decb
add
adc
rolb
xlat
js
xchg
in
add
add
pusha
add
mov
je
sbb
enter
ror
inc
mov
add
add
add
aas
xchg
add
pop
ret
jns
rolb
mov
add
add
testb
out
repz
add
ficoml
inc
add
add
or
add
bound
mov
add
add
add
pop
ficomps
add
sub
xchg
insb
dec
mov
arpl
add
mov
add
jo
aam
cs
cld
and
mov
data16
add
add
mov
xchg
icebp
push
ds
push
mov
add
mov
mov
sbb
add
repnz
stos
push
lds
mov
lds
inc
add
xor
mov
cli
pushf
insb
aas
testb
pop
mov
add
cs
mov
jns
jmp
and
mov
shll
fdivl
mov
add
inc
add
cmpsl
movsb
add
arpl
add
add
aas
or
add
sahf
jb
jge
sbb
int3
fstpt
icebp
sbb
xchg
add
cmp
lds
incl
xchg
std
pop
push
add
adc
add
lock
and
mov
sti
cmp
cmp
mov
and
mov
add
push
popa
cmp
push
pop
cmp
add
mov
lret
jb
cwtl
scas
clc
enter
add
cmp
cli
pop
in
pop
hlt
add
mov
adc
pop
mov
add
add
mov
cmp
add
and
push
movsb
add
inc
add
add
mov
hlt
add
adc
fldcw
add
add
lret
add
jno
icebp
in
sbb
into
sub
add
add
lret
imul
add
add
mov
jns
xchg
in
arpl
add
cwtl
loop
rolb
xchg
sub
add
xor
cli
call
loop
movsl
mov
stos
ret
mov
mov
mov
add
imull
add
lea
inc
lret
xchg
add
xor
pop
popa
fninit
movb
inc
add
mov
add
fisubs
cld
lahf
dec
scas
sbb
out
add
mov
addr16
add
mov
hlt
add
mov
das
loopne
nop
add
add
sub
aas
cmp
add
xchg
js
push
nop
add
loop
pop
shr
xlat
popa
lods
rcll
add
mov
leave
jne
clc
mov
push
add
out
cmp
add
jns,pn
xchg
or
add
add
mov
rolb
push
add
add
int3
lahf
aam
sub
pop
and
add
add
add
and
add
mov
stc
mov
dec
movb
cwtl
shll
add
js
ds
jae
xor
jmp
mov
sbb
push
xchg
mov
xor
pop
mov
bound
mov
cmc
push
call
mov
jb
ljmp
lods
push
push
xchg
add
add
out
mov
add
out
movsb
add
add
add
jecxz
pop
push
add
adc
xchg
inc
outsb
lcall
popa
jne
inc
add
sbb
sbb
mov
mov
stc
adc
jae
les
xor
or
dec
jae
push
adc
pop
lret
dec
and
add
jns
inc
pop
push
stos
mov
xor
push
or
mov
inc
sbb
push
add
gs
add
cli
addb
xor
adc
push
add
add
cld
push
jne
add
mov
dec
insb
and
mov
and
aad
inc
or
add
mov
add
add
add
pop
rcl
add
fwait
shll
and
pop
xchg
mov
and
sbb
mov
add
pushf
push
aas
cli
cld
sahf
xchg
sub
add
add
pop
in
push
loop
fisubs
mov
add
add
xchg
jmp
enter
add
aas
cwtl
xor
xor
aas
flds
add
inc
or
add
jo
in
and
mov
add
add
inc
add
cmpsb
add
add
mov
add
add
fildl
pop
sti
iret
pop
sbb
or
push
add
mov
mov
cmp
sub
add
inc
jl
push
jns
test
out
fucomip
mov
test
dec
jmp
inc
add
jl
add
inc
add
mov
jge
dec
sarl
push
outsb
push
add
mov
inc
add
or
add
sub
sub
sar
int
scas
pop
loop
dec
adc
cmp
add
incb
mov
add
inc
insb
outsl
scas
inc
add
jl
fdivrp
or
repz
mov
in
scas
xchg
jo
xchg
add
mov
add
add
or
gs
cltd
push
add
out
dec
repz
adc
je
cmpl
push
add
daa
add
add
mov
pop
add
add
add
mov
testb
add
jae
in
mov
daa
pop
sbb
dec
imul
fldenv
add
test
push
add
int
rolb
adc
test
leave
xchg
add
xchg
mov
add
lret
push
add
jg
cmpsl
jmp
add
add
scas
mov
insb
push
cmp
addr16
cmp
push
adc
add
add
shll
jle
hlt
add
push
and
sbb
add
and
mov
mov
and
mov
jge
jl
jp
xchg
sbb
aad
in
jp
add
mov
add
dec
cmc
and
inc
jns
in
das
add
out
pop
dec
mov
push
repnz
add
add
add
add
sub
add
out
std
xchg
rolb
adc
test
in
stos
int
call
xor
inc
sub
popa
xor
aam
sbb
add
ljmp
and
mov
ljmp
lock
add
fsubp
add
add
xor
ljmp
pop
in
dec
rolb
loope
test
xchg
inc
outsb
mov
push
cmp
aaa
or
dec
lea
add
lock
out
lods
pop
lcall
add
ds
sub
add
xchg
jnp
add
push
push
mov
notl
xor
add
add
and
movsb
add
add
jp
out
mov
pop
add
inc
add
repz
dec
addr16
jno
dec
push
push
add
mov
fwait
sub
jnp
add
add
fists
add
jmp
hlt
add
add
rolb
pop
rolb
xor
and
out
movsl
andl
mov
inc
mov
movsb
add
lahf
xor
subl
add
je
adcl
xor
inc
add
dec
cmp
inc
add
cli
dec
or
xchg
jmp
les
fwait
xchg
add
add
add
scas
pop
mull
push
add
rcr
pop
addb
add
aaa
and
push
sub
leave
xorl
or
sbbl
cmp
mov
add
data16
xchg
add
add
add
not
dec
les
hlt
add
in
jns
xchg
add
repnz
add
add
leave
in
ljmp
add
js
test
push
add
arpl
mov
add
lods
les
fs
ljmp
into
imul
ds
push
add
scas
adc
pop
std
mov
cmpsb
add
add
stos
cli
cmp
mov
pop
stos
sub
add
imul
inc
mov
xor
mov
rorl
add
mov
add
testb
std
mov
add
repnz
add
stc
cwtl
addb
test
mull
add
out
or
movb
cmc
addb
add
add
mov
add
add
shrl
movsl
xchg
add
inc
jl
arpl
xchg
add
adc
rolb
adc
inc
out
xchg
add
add
bound
mov
add
add
mov
add
xchg
nop
add
add
sub
add
add
mov
icebp
dec
mov
test
add
flds
loop
and
mov
xlat
xchg
add
adc
add
and
mov
addb
xchg
out
add
mov
mov
or
rol
loop
dec
jge
add
je
pop
mov
rolb
mov
loope
add
pop
out
pop
and
mov
daa
xchg
ds
in
mov
bound
mov
mov
or
adc
negl
sub
lret
xor
int
add
data16
out
mov
mov
add
sub
add
adc
cmp
push
adc
mov
or
insb
aas
inc
inc
cmc
xor
int3
xor
mov
movsl
mov
mov
xchg
daa
xor
outsb
push
push
fstpt
sbb
movsl
push
sub
add
add
mov
lahf
loope
cmp
mov
imul
js
add
add
add
and
jle
add
add
popf
roll
add
pop
push
add
xor
pop
xor
test
add
add
mov
jbe
adc
fwait
insb
xor
rolb
push
add
inc
add
enter
add
insb
pop
fidivrl
mov
fwait
cmpsl
mov
and
add
add
add
aas
and
mov
shll
mov
neg
les
cmp
push
in
sbb
cmpsl
add
fnstenv
rolb
into
addr16
push
add
jmp
test
add
cmpl
lods
out
pop
insl
mov
mov
add
sbb
out
loope
js
ficompl
lret
testb
xchg
add
add
lea
sub
add
cmpsl
xchg
das
add
mov
out
jecxz
push
cwtl
out
sbb
repnz
add
xchg
ja
aas
inc
xor
test
mov
lret
repnz
add
adcl
scas
mov
add
aaa
daa
sahf
jp
in
std
jne
out
mov
xlat
call
test
out
inc
add
imull
cmc
adc
add
repnz
add
scas
mov
push
jne
sbb
and
add
dec
xchg
jmp
shll
add
adc
mov
ror
push
and
mov
sbb
or
xchg
add
icebp
cs
add
push
or
xor
add
adc
cmp
je
xlat
and
mov
gs
jle
add
add
sbb
sbb
add
lea
sub
cmc
push
add
ss
add
cmp
xchg
add
mov
add
in
sub
xlat
mov
inc
add
in
mov
test
and
mov
mov
jl
pop
test
in
mov
add
mov
add
and
mov
xchg
sbb
push
add
xchg
add
sbb
pop
pop
loopne
jb
out
and
mov
mov
push
xor
jb,pn
out
lods
sbb
add
or
jp
add
xchg
dec
rolb
jnp
add
add
cmp
sub
nop
add
mov
add
add
test
xor
xor
sub
dec
out
mov
or
sahf
mov
push
mov
ret
daa
add
mov
jp
add
add
gs
add
adc
mov
push
add
push
push
add
ja
popa
jbe
xor
pop
jb
addb
xor
leave
add
testb
add
mov
js
add
icebp
sub
add
or
add
dec
mov
or
push
add
add
add
xor
mov
cmc
loopne,pt
add
mov
mov
movsb
add
add
sbb
push
sbb
ljmp
popa
stos
in
jns
add
icebp
dec
xor
int
mov
add
adc
jle
push
fwait
jle
xor
add
dec
lods
mov
jle
add
lock
dec
fst
add
dec
fisttpl
xchg
out
imul
faddl
add
mov
or
add
clc
fcoms
add
lods
stos
mov
xor
fsubrl
test
add
stos
loopne
insl
movb
mov
or
lock
fistpl
add
add
cltd
fcmovb
add
lret
sub
or
and
aam
daa
inc
sbb
lcall
add
cmpsl
sub
testl
out
pop
cmp
movsl
pop
sbb
loop
push
xchg
xchg
dec
xchg
mov
xlat
push
sti
lods
adc
inc
cld
movb
push
add
cltd
bound
mov
cs
push
subl
sbb
add
adc
add
sbbl
push
add
mov
and
arpl
add
mov
rcll
test
push
add
xor
mov
aad
cmp
lret
test
shl
add
testb
cmp
add
mov
test
scas
je
bound
mov
push
add
jl
xor
add
xchg
add
jnp
add
insb
jae
add
add
inc
add
add
loop
dec
lcall
add
add
adcl
dec
jb
addb
add
add
pusha
add
add
push
inc
cltd
imul
aaa
fildl
ret
xchg
fldcw
xchg
add
fisttpl
jne
add
mov
stos
adc
ljmp
stc
aad
in
imul
mov
xchg
movsb
add
xchg
add
inc
add
cmpsb
add
push
outsb
and
add
add
mov
add
insb
les
pop
out
les
jne
and
popf
insl
xor
mov
lret
loopne
push
add
pop
fcmovne
mov
jp
stos
sti
stos
sub
popa
aad
cld
mov
mov
addb
rolb
and
mov
sbb
add
mov
mov
bsr
mov
std
fdivs
add
jecxz
lret
dec
and
add
add
add
cmc
inc
add
or
add
jbe
mov
add
add
movsl
sub
push
repnz
inc
add
aam
cmp
adc
add
test
dec
ret
inc
add
add
mov
mov
pop
mov
add
adc
jb
or
fcmovb
add
add
add
mov
std
sbb
and
sbb
popa
dec
std
rolb
jmp
in
add
cmp
aam
and
leave
loopne
cmp
push
fmuls
xchg
ja
mov
add
lret
add
pop
popa
clc
sbb
aad
cmp
add
mov
cltd
dec
int
mov
test
data16
xchg
icebp
pop
movsb
add
add
jbe
movb
lock
das
in
dec
or
push
add
mov
inc
add
int
stos
push
add
mov
clc
push
add
addb
jne
fbld
pop
xor
std
pop
inc
mov
loopne
jl
pop
jno
mov
aaa
mov
call
outsb
rolb
popf
xor
out
enter
add
aam
lcall
add
add
daa
add
mov
lcall
movsl
addb
leave
scas
in
insb
xchg
out
sub
and
push
cmpsb
add
ficoms
sti
push
add
pop
pop
iret
in
outsb
jmp
pop
cmp
stos
outsb
leave
fsubl
stos
cmp
data16
add
jns
xchg
add
inc
add
mov
testb
test
repz
add
add
rolb
xchg
sbb
jne,pn
out
fstpt
mov
lds
cmp
push
shl
in
inc
add
add
adc
jp
clc
sub
pop
stos
jnp
add
xchg
add
add
leave
call
and
jecxz
mov
je
adc
add
add
jg
scas
xchg
cmp
mov
cmp
jae
sti
xchg
jmp
push
add
add
jle
add
add
aam
sub
in
popf
sub
aad
std
in
rolb
inc
jmp
std
icebp
fidivs
mov
dec
jg
adc
mov
and
add
and
mov
xor
fimuls
cltd
jne
sbb
add
out
adc
jg
int
cmc
or
jp
add
movb
add
sub
add
mov
pop
in
testb
sbb
ret
test
popf
mov
inc
add
int
add
add
jp
int3
or
add
adc
test
aas
sub
or
out
or
cmp
add
rolb
sarl
aam
enter
push
cmp
and
mov
jmp
sub
fisttpl
jecxz
add
sub
sahf
pop
and
mov
add
dec
test
inc
add
add
movsl
push
add
jb
pop
insb
in
lret
and
mov
jno
cmp
dec
xor
sbb
add
add
mov
sarl
sbbl
dec
addb
jecxz
xor
mov
pop
or
add
lahf
inc
add
and
mov
xchg
add
mov
add
add
add
jmp
ds
sub
sar
mov
or
lret
pop
jg
pop
daa
lods
imull
add
dec
icebp
movsl
xchg
testl
add
je
mov
pop
dec
or
xor
add
sbb
mov
pop
xor
xchg
add
add
mov
scas
sub
add
mov
mov
adc
insb
hlt
add
jnp
addr16
add
enter
cmp
adc
add
cwtl
push
and
add
push
test
shrl
outsl
movb
inc
add
in
add
sbb
adc
lret
add
inc
je
sub
add
mov
push
add
movb
js
push
add
jne
sub
add
aaa
in
test
iret
cwtl
pop
pop
jl,pt
outsb
mov
add
dec
sbb
addb
mov
cmp
pop
std
insb
out
lret
xor
call
pop
inc
mov
sbb
cmpsl
cmpsl
sub
cmp
shll
rcrl
adc
test
movsl
pop
pop
fst
add
add
and
mov
inc
push
add
xor
sub
stos
imul
jno
add
xor
ret
pop
and
popf
inc
mov
lods
and
mov
insb
mov
add
pop
repz
cmp
add
jno
add
add
insl
dec
add
mov
add
add
int3
ljmp
lods
cmp
xchg
andl
stos
push
push
jg
add
mov
iret
jb
enter
add
push
add
add
add
add
jmp
rolb
jge
add
and
ss
movb
lds
pop
aad
fcomp
push
add
dec
or
add
push
add
add
add
add
add
add
jp
xor
inc
add
add
jg
add
test
in
aad
bound
mov
daa
shrd
sub
test
arpl
cmp
nop
add
mov
xchg
gs
add
int
add
mov
add
dec
outsl
sbb
das
in
dec
cmpsl
mov
add
add
mov
inc
add
pop
dec
xor
pop
and
sbb
stc
les
hlt
add
clc
movb
jmp
add
mov
pushf
je
adc
or
cltd
dec
mov
pop
int
xlat
mov
fcmovnb
add
add
in
hlt
add
jno
idiv
push
bound
mov
data16
add
lret
addr16
dec
jmp
add
and
mov
pop
cld
dec
int3
xor
jae
adc
push
add
add
add
adc
inc
add
jne
lret
popf
in
loope
fisttps
or
inc
add
add
les
mov
adc
jno
sub
cwtl
xor
add
push
pop
push
icebp
sub
out
push
add
add
or
mov
add
add
mov
test
in
fwait
and
pop
cltd
pop
lds
insl
dec
in
add
cmpsl
mov
push
add
or
call
cmp
ret
rcrl
jnp
add
add
cmpl
xchg
fwait
push
inc
add
into
hlt
add
add
cmp
imul
xlat
dec
cs
add
arpl
cltd
test
xchg
lahf
adc
dec
dec
pushf
dec
inc
pop
pop
jno
jnp
add
mov
mov
cs
ljmp
loope
add
dec
leave
or
add
inc
add
mov
xchg
xor
pop
cmp
pushf
repz
add
add
out
dec
mov
pushf
jo
jle
ds
add
adc
lcall
pop
adc
fimull
adc
jns
xlat
or
je
data16
ret
cmc
fisubs
adc
add
sub
push
ret
adc
les
mov
in
aam
jo
les
lret
fst
xor
jnp
add
out
movb
in
lods
scas
add
mov
mov
pop
mov
add
arpl
rolb
mov
adc
and
mov
and
mov
add
add
call
add
add
dec
adc
rolb
movsl
aas
fldcw
push
mov
imul
call
add
add
add
add
pushf
inc
mov
xchg
add
mov
lret
sub
aas
jp
pop
and
mov
pop
outsb
sbb
iret
test
add
add
mov
mov
shrl
das
add
mov
mov
lahf
dec
or
mov
push
add
add
lea
sub
lods
xor
cmp
mov
daa
pop
mov
xchg
add
xlat
out
sub
int3
sbbl
sbb
insb
popa
push
cmp
or
in
xchg
fcomp
xchg
push
mov
add
add
add
add
fbld
sub
mov
dec
test
lock
test
cmpsl
fistl
testl
testl
inc
out
shll
add
test
add
dec
jl
add
inc
add
test
add
frstpm(287
roll
cmc
add
hlt
add
add
lds
add
mov
pop
rolb
cmp
mov
mov
lcall
sub
insb
adc
sbb
and
xchg
add
sbb
jecxz
dec
rolb
add
mov
jbe
scas
repnz
daa
xor
mov
cmp
mov
cltd
icebp
xor
push
add
clc
jo
lahf
xchg
into
ret
lods
lcall
ret
dec
cli
nop
add
push
add
add
aas
cmp
cmc
mov
inc
add
jns
xchg
add
aas
iret
push
mov
in
add
cmpsb
add
add
xor
sbb
lock
pop
imul
mov
adc
cmp
sub
adc
add
imul
cmovne
gs
xchg
add
mov
sbb
cmp
add
out
jns
mov
mov
jnp
ret
mov
xor
pop
movsb
add
data16
clc
es
mov
lods
adc
inc
add
add
jne,pn
fbstp
add
jmp
xchg
add
fildl
add
rolb
gs
pop
mov
sti
in
in
push
inc
inc
add
in
in
out
add
add
iret
adc
mov
inc
add
popf
sbb
jne
add
add
cs
add
add
imul
jae
fst
jns
add
lods
adc
decl
movsl
xor
sbb
fsubrl
mov
rolb
sti
dec
inc
stos
and
mov
xchg
add
mov
das
fcmovne
scas
jo
xchg
add
pop
inc
add
test
push
add
add
movaps
cwtl
aad
mov
sbb
insb
xchg
push
sbb
mov
xor
out
sbb
jns
add
add
popa
xor
mov
enter
inc
sbb
add
add
cli
js
add
fwait
jmp
add
add
push
add
add
in
aas
clc
inc
add
ja
add
test
xchg
push
jne
out
add
jecxz
bound
mov
in
popa
adc
push
jne
mov
lods
and
mov
mov
push
add
add
jne
cli
cmp
add
add
mov
leave
addb
add
push
add
mov
mov
add
jno
sbb
repnz
add
add
push
pop
inc
cld
sub
sti
loope
pop
jns
add
add
lock
sub
or
fisubrl
test
cld
testb
add
adc
dec
leave
mov
add
in
mov
add
add
mov
mov
aad
add
mov
lcall
adc
mov
jecxz
xchg
add
add
xchg
into
or
or
add
add
add
add
xchg
jbe
iret
and
out
daa
xchg
add
mov
out
cmp
mov
adc
testb
jbe
repz
cmpsb
add
pop
mov
xor
adc
out
and
and
xchg
clc
scas
dec
iret
call
push
and
add
adc
dec
stc
outsl
xchg
clc
sbb
or
add
add
add
mov
add
imul
add
add
fiadds
add
push
push
into
hlt
add
and
popa
jge
xchg
add
rolb
xchg
rolb
daa
ljmp
mov
mov
rcll
in
imul
lea
or
mov
add
repnz
jmp
add
mov
or
mov
pop
sbb
xchg
jecxz
and
shll
lea
test
add
jmp
addb
pushf
adc
fdivrl
pushf
pusha
add
sbbl
enter
pop
jecxz
ficoms
testb
ss
jg
add
pop
push
dec
cli
mov
mov
add
mov
int3
jp
add
fiaddl
push
add
add
mov
jmp
add
movb
mov
jns
cmp
cmpsl
sarl
jno
movsl
fwait
out
cmpsl
push
add
add
add
add
add
add
inc
aaa
dec
xchg
imul
inc
add
mov
add
mov
rcrl
hlt
add
add
xor
lcall
push
clc
jle
popa
cld
fsubs
sahf
mov
out
popf
popa
mov
aad
mov
add
test
in
iret
mov
add
add
or
insb
mov
mov
add
mov
add
repz
mov
mov
cwtl
jno
add
add
pusha
add
loope
add
add
add
add
cmp
pusha
add
mov
in
repz
cltd
ljmp
pop
arpl
enter
add
sahf
add
jecxz
and
mov
add
mov
dec
mov
out
sbb
add
stos
mov
add
or
test
sbb
imul
jle
ffreep
add
add
mov
mov
lock
add
add
add
add
mov
jg
add
push
pop
lcall
leave
jno
or
jge
lock
adc
sub
add
mov
pop
mov
xchg
faddl
int3
add
testb
push
add
pop
cmpsb
add
data16
adcl
mov
or
add
dec
cwtl
push
in
jbe
dec
addb
add
add
add
je
adc
enter
xor
or
xor
fimuls
push
shll
cmp
out
inc
add
clc
in
push
pop
sbb
fldcw
pop
shll
push
add
dec
movb
add
scas
and
aam
sbb
pushf
mov
lds
adc
xor
push
add
add
jmp
jecxz
ret
xchg
loop
add
cli
jbe
xchg
lea
sbb
arpl
add
add
lahf
sub
jb
add
add
movsl
or
testb
std
or
shl
add
mov
scas
push
add
arpl
add
or
pop
mov
int3
icebp
jnp
push
add
rolb
and
outsb
jne
add
mov
das
pop
jbe
mov
addb
dec
sub
or
cli
dec
test
lds
das
aam
mov
add
dec
push
cld
jne
push
addb
call
stos
jmp
mov
icebp
out
repnz
add
mov
sub
add
mov
mov
xor
push
pushf
addb
sub
add
pop
in
out
inc
mov
inc
add
xchg
ljmp
ja
add
inc
add
lahf
inc
add
ljmp
inc
les
mov
aas
js
add
jo
pop
mov
sbb
in
jo
cmp
add
mov
add
je
fistl
mov
fisubrl
add
add
bound
mov
lock
add
cltd
sub
add
nop
add
adc
je
push
sub
jne
add
add
mov
inc
push
nop
add
adc
aam
fucomp
clc
lcall
shll
add
mov
add
inc
add
push
add
add
and
mov
sti
mov
mov
sub
add
add
xchg
in
xor
mov
pop
cmp
xchg
inc
add
pop
test
push
sub
outsl
and
pop
movb
pop
cwtl
mov
push
add
add
shll
add
fcoms
or
bound
mov
das
jg
fsub
clc
mov
add
or
cmp
pop
fwait
das
in
add
add
icebp
sub
mov
stos
sbb
addr16
dec
jl
addb
aad
popa
jnp
push
pop
fistpl
fldl2t
aaa
sar
lock
mov
movsb
add
mov
jge
sub
nop
add
and
test
test
add
pop
add
jecxz
add
cld
add
mov
add
filds
add
add
add
rolb
mov
rolb
mov
add
xchg
adc
add
int
add
add
call
enter
xchg
add
xor
push
add
mov
add
pop
jb
loopne
sub
add
add
loope
mov
jns
ret
or
or
jo
repnz
imul
cmc
in
add
dec
and
jo
test
js
add
or
mov
mov
cwtl
inc
or
push
add
mov
mov
xchg
lcall
add
pop
dec
outsb
dec
mov
int3
sub
mov
out
sahf
pop
lock
cmp
add
je
mov
add
add
cltd
mov
mov
sub
add
add
add
test
sub
inc
add
add
add
add
call
dec
or
push
add
icebp
xor
int3
pop
xor
popf
mov
mov
mov
sti
test
aam
repnz
addb
std
push
dec
lret
adc
shrl
add
add
xchg
insb
imul
push
add
jge
jecxz
add
out
cmp
addl
movsb
add
add
push
jnp
iret
lahf
popa
add
mov
mov
mov
xchg
add
inc
add
cmpsb
add
gs
cmp
add
push
and
mov
dec
test
loope
sub
ds
vmwrite
add
cwtl
xor
sti
dec
jnp
cwtl
ret
imul
add
pop
xchg
dec
add
mov
cs
inc
add
add
aad
add
daa
arpl
gs
lret
lock
icebp
inc
lods
xor
mov
mov
sub
bound
mov
mov
mov
loop
test
add
add
jg
add
fstpt
icebp
pop
add
dec
loopne
pop
fisttpl
jmp
add
mov
add
inc
add
mov
call
add
add
ret
pop
jmp
xchg
add
add
add
mov
insb
ret
push
dec
sub
add
dec
adc
mov
out
lds
addb
dec
adc
add
sub
add
add
adc
and
add
xchg
add
stos
les
push
add
pop
and
pusha
add
out
cmp
jg
int
les
sub
jne
push
sub
in
mov
imul
xchg
add
and
add
mov
pop
push
add
add
pop
int
jle
pushf
sbb
insl
popa
push
add
add
inc
add
add
cmp
add
inc
add
xlat
scas
lcall
jbe
sub
mov
ret
lea
add
add
jnp
mov
ficomps
add
cmp
jecxz
add
cs
and
mov
mov
add
mov
add
xlat
nop
add
in
aad
pop
in
rolb
add
dec
std
sub
add
and
popa
push
pop
push
call
add
add
sub
adc
fistps
cmp
les
xor
lock
and
dec
stc
addb
rolb
mov
add
lods
jmp
pop
or
lods
call
mov
nop
add
add
and
stos
pop
sahf
and
out
in
iret
xor
mov
add
mov
mov
ljmp
shll
inc
add
std
popa
test
mov
stos
push
inc
add
scas
into
lods
and
dec
addb
add
pop
mov
add
aam
data16
mov
push
lock
add
push
outsb
push
add
inc
add
xchg
in
add
cmc
add
cmp
js
add
mov
fdivrp
repz
lea
xor
cmpsb
add
mov
jle
add
mov
adc
popf
and
icebp
xor
stc
sub
pop
lds
and
cmc
sahf
pop
jbe
sub
cli
jne
add
mov
push
add
jae
jl
xchg
data16
jne
cmc
inc
cmp
in
push
add
add
add
add
imull
jecxz
sti
addb
pop
jg
ret
add
add
pop
mov
push
add
adc
std
dec
lock
daa
push
arpl
stc
ret
xchg
sti
cmp
push
xchg
sub
rolb
add
add
lock
push
jae
add
fadds
mov
sub
hlt
add
adc
dec
dec
and
imul
add
add
loopne
add
add
add
jne
add
cld
aaa
imul
add
loope
push
sbb
add
addb
dec
sub
xchg
std
and
mov
scas
aam
mov
stos
adc
lret
imul
lret
pop
addb
mov
xor
arpl
push
add
and
sub
stc
dec
mov
sub
les
add
mov
jge
pop
sbb
sub
add
add
add
sub
dec
fcmovu
inc
add
ret
adc
lahf
cmc
inc
add
jo
loopne
cmp
add
add
xor
insb
testb
add
mov
add
pop
fnstcw
fcomps
mov
sub
rorl
sbb
addb
push
add
pushl
add
mov
fidivs
imul
xchg
add
add
push
inc
add
incl
icebp
rolb
paddd
pop
insb
push
add
add
add
mov
cmp
add
dec
cli
or
popa
mov
mov
movsl
pop
adc
add
sub
push
add
adc
xor
xor
and
pushf
sbb
loope
inc
sbb
add
adc
addb
add
repz
fucomi
jbe
add
adc
add
rcll
adc
pop
loopne
sbb
pop
cmp
addb
add
mov
lods
rcrl
stc
leave
sbb
add
cmp
in
add
popf
dec
xchg
add
add
add
add
xlat
ret
imul
or
test
sub
add
mov
mov
scas
push
add
add
insl
iret
popf
call
pop
mov
fstl
add
sub
add
add
add
js
dec
adc
mov
cmp
rcll
add
add
leave
sbb
mov
mov
jmp
rcll
add
lock
int
fisubl
xlat
loope
push
repnz
mov
dec
xchg
ret
testb
add
sbb
add
jle
jbe
xorl
addl
notl
sub
je
push
add
jae
jnp
add
mov
add
mov
pop
push
pop
sub
pop
lods
imul
dec
or
add
in
mov
add
insb
cltd
outsb
repz
rolb
mov
mov
sbb
add
add
jle
add
sbb
pop
xor
lret
xor
loopne
push
push
add
std
movsb
add
xor
cmpsb
add
pop
pushf
pop
fldl
leave
inc
addb
addb
add
scas
roll
movb
add
xchg
xchg
add
add
inc
adc
add
or
add
iret
js
pop
adc
cli
lret
dec
mov
add
pop
jmp
adc
add
add
jb
xor
push
add
add
lea
mov
jo
fdiv
add
ja
out
arpl
inc
add
nop
add
movsl
fdivrl
addb
testb
sub
add
mov
add
sub
and
pop
aaa
fucomp
jmp
mov
cmp
and
mov
cmpsb
add
jne
into
in
jl
add
sub
add
add
clc
iret
popa
aam
in
outsl
ret
pop
aam
push
add
dec
arpl
add
sub
xor
sbb
xchg
add
rolb
fdivl
add
fists
adc
out
pop
mov
mov
mov
and
mov
add
inc
add
add
mov
enter
movsb
add
push
jae
add
leave
lret
fcmovnu
mov
int3
add
mov
mov
add
add
popa
mov
add
sub
adc
jb
out
push
add
jmp
sub
add
and
mov
out
jb
sub
add
add
add
clc
ja
add
add
push
in
addb
sbb
rolb
mov
je
jno
pushf
push
add
jb
cmc
lods
ficomps
add
dec
mov
fucompp
mov
push
add
adc
repz
sbb
mov
add
xchg
add
ja
add
add
std
lret
dec
fstps
and
ja
out
adc
int
add
add
mov
sbb
aad
add
add
and
mov
add
add
xchg
add
add
add
rolb
mov
xor
add
arpl
mov
aaa
rcll
jbe
in
or
loope
mov
or
cmp
cwtl
fsts
pop
aas
dec
cmc
pusha
add
add
scas
xlat
push
sbb
mov
or
add
mov
das
pop
idivl
add
jbe
sub
sub
out
mov
add
xor
lds
in
push
pop
insl
push
add
add
add
aas
or
push
or
ds
or
add
out
push
add
mov
pop
jo
xchg
add
add
in
and
inc
add
enter
insb
or
push
add
test
data16
subl
pushf
dec
pop
cmpl
mov
add
popf
xchg
lock
icebp
sub
and
out
add
or
shll
not
decl
int3
push
add
movsb
add
add
les
jp
add
add
imul
mov
push
add
cld
pusha
add
push
add
or
xchg
movsl
sbb
sbb
adc
cmp
add
mov
push
inc
in
jmp
jmp
pop
add
add
add
sbb
push
add
call
add
cmp
adc
xor
mov
aas
scas
add
inc
add
mov
pop
pop
dec
je
add
mov
sahf
int
pusha
add
pop
inc
daa
or
add
inc
pop
lret
pop
jmp
add
mov
rolb
sub
sub
lea
add
lods
xlat
jno
add
jecxz
jl
lock
mov
cli
aad
xchg
pop
push
js
add
ret
add
test
add
ja
add
add
inc
xlat
sub
sbb
add
out
in
les
push
lahf
and
mov
aaa
pop
mov
fnsave
sub
add
add
add
rolb
aas
aas
mov
add
mov
into
mov
add
add
or
mov
mov
mov
mov
mov
add
add
add
test
add
add
add
add
mov
cmp
icebp
jno
adc
nop
add
addb
xor
jae
or
sti
mov
imul
jne
add
inc
inc
popf
or
jns
and
mov
int
xor
aaa
mov
aaa
xchg
add
mov
or
es
movsl
sub
repz
bound
mov
add
fdivrl
daa
add
add
fisttps
pop
mov
rcll
in
add
ret
pop
mov
pop
fisubs
add
add
mov
push
add
add
dec
icebp
fdivl
into
mov
jl
sub
sub
add
dec
push
lods
js
cltd
pop
adc
push
add
xchg
andl
mov
testb
add
je
out
jae
mov
push
add
in
or
add
pop
mov
add
adcl
add
jae
mov
mov
add
push
or
out
sub
add
inc
and
jb
inc
arpl
fistl
in
je
ret
mov
xor
mov
ja
adc
jns
add
add
mov
insb
jle
jmp
add
cs
add
test
push
push
add
add
daa
in
pusha
add
xor
cld
clc
jecxz
pop
es
and
dec
xor
iret
test
add
addb
sahf
cmp
cmp
push
dec
adc
data16
mov
outsl
test
aas
clc
sub
jmp
adc
call
push
add
lahf
mov
add
mov
add
add
xchg
add
add
mov
sub
ss
add
add
add
mov
inc
loop
iret
cltd
adc
popa
movsl
loope
add
or
add
in
inc
mov
in
add
dec
push
test
jp
add
add
add
add
cmp
arpl
xchg
inc
add
sub
add
aaa
jne
xchg
lods
cli
sbb
or
add
inc
add
clc
push
add
shll
push
xchg
lds
dec
rcr
push
int
out
ret
jmp
ret
mov
outsl
add
adc
cmp
sbb
pop
push
add
out
aas
jo
sub
in
pop
jns
jnp
mov
add
add
push
add
add
add
fmull
test
xchg
adc
add
mov
call
add
mov
pop
jbe
addb
jb
and
testl
add
sbb
add
mov
dec
inc
add
mov
fdiv
cmc
data16
xchg
cs
mov
xchg
add
cmp
push
bound
mov
or
push
add
and
cmp
add
add
add
add
mov
sbb
add
add
add
add
or
mov
cmp
ret
inc
stos
mov
add
pop
cmp
push
enter
add
stos
mov
and
add
add
fnstcw
xor
or
ret
test
xor
popf
loop
jb
mov
ret
xchg
test
hlt
add
add
add
xor
aaa
push
add
cld
cmpsl
sbb
add
dec
mov
jl
add
add
add
scas
leave
rolb
popf
mov
add
add
out
add
cli
jnp
jecxz
mov
jb
loopne
arpl
add
add
in
out
aad
jmp
sub
aam
inc
aam
inc
inc
add
fs
movsl
jne
sub
add
cmp
aam
mov
cmp
mov
testb
rcl
push
pushf
int3
inc
add
jmp
out
cwtl
dec
addb
fsubr
int3
xchg
add
jg
add
add
xchg
pushf
or
sahf
pop
test
jmp
lret
push
rolb
sti
das
dec
rcr
add
and
add
leave
and
add
or
add
test
add
das
outsb
adc
mov
add
data16
cmp
addr16
sbb
jp
cmp
pop
xor
icebp
adc
outsb
in
pop
sub
std
popf
mov
inc
dec
in
mov
mov
jecxz
popa
jle
inc
add
pop
adc
int
cmp
mov
add
inc
cs
leave
mov
sub
test
addb
add
pop
sub
inc
jge
mov
add
and
mov
add
cmp
add
and
dec
icebp
adc
and
mov
mov
bound
mov
and
mov
movsb
add
cmp
jno
addb
add
add
pop
lahf
mov
inc
add
add
stos
inc
jno
pop
enter
jb
shll
fnstenv
gs
add
mov
inc
add
lock
bound
mov
out
add
xlat
rcll
add
add
pop
pop
mov
inc
add
push
add
fnsave
mov
cltd
mov
rolb
jmp
fcompl
test
pop
imul
testb
leave
xchg
add
rolb
mov
out
mov
add
add
xchg
push
cmpl
inc
xor
sub
fidivrl
icebp
inc
movsl
pop
movsl
jp
out
shrl
add
shl
add
push
enter
popa
dec
out
jg
add
add
or
jns
push
fs
jp
xor
add
add
mov
lcall
pop
inc
insl
dec
ljmp
or
push
fcomip
add
push
add
cmp
pop
addr16
add
add
jno
add
add
add
add
add
cmp
imul
vpunpckhwd
mov
add
lahf
pushf
ljmp
mov
add
add
mov
and
mov
add
fsubr
lods
add
cmpsl
mov
loope
in
add
or
add
add
out
test
stc
and
lea
scas
or
jnp
adc
sahf
adc
xor
cmp
jmp
inc
mov
js
add
mov
add
add
out
lods
lods
sbb
jae
lcall
addb
add
jge
ror
push
pop
add
mov
add
movsl
xor
xor
pop
or
pop
sti
sub
cmpl
mov
xchg
xchg
int
ja
add
add
stos
sahf
mov
add
mov
insb
dec
daa
or
data16
outsb
jo
push
add
fsubs
fsubl
outsb
test
rolb
xchg
pop
cmp
add
loop
arpl
add
sbb
sbb
add
sbb
test
dec
movl
add
add
or
loope
add
add
push
add
add
int
pop
ds
mov
xor
addb
scas
or
xor
repz
add
sub
icebp
movsl
inc
loop
xor
cmp
lret
mov
add
cmpsb
add
loopne
mov
outsb
pop
cltd
stos
in
dec
out
sub
add
test
add
cld
bound
mov
xor
add
push
add
loop
xor
fists
add
inc
add
dec
xchg
add
add
outsb
xor
jp
add
lret
xchg
pop
dec
fwait
push
mov
add
repz
dec
xchg
or
test
add
mov
add
inc
cmpsl
jmp
sbb
add
cmp
push
or
add
jmp
add
lret
fwait
insb
rolb
fcmovnb
add
add
jl
mov
add
lret
pop
push
add
add
aad
add
add
lods
fwait
lds
add
push
add
mov
cli
inc
add
push
je
sbb
add
rolb
testb
fldt
ljmp
jb
repz
push
add
mov
mov
add
addb
add
scas
lcall
lea
mov
loopne
je
mov
inc
or
scas
and
mov
xor
orl
add
mov
in
or
add
jl
fisttps
mov
add
jle
add
add
ja
jo
cs
add
add
jl
add
mov
xchg
add
dec
addb
pop
inc
add
add
or
push
add
stc
cmp
mov
into
mov
arpl
add
popf
addb
popa
jecxz
add
clc
fistps
int3
mov
adc
fnsave
pop
mov
dec
and
mov
adc
and
js
inc
xor
pop
jmp
xchg
add
jne
hlt
add
mov
arpl
add
mov
xchg
mov
out
in
aaa
mov
iret
sub
sub
iret
xor
in
fisttpl
add
add
mov
ja
in
mov
pop
push
pop
dec
mov
jae
cmp
xchg
add
add
stos
cmp
add
cs
cmpsl
pop
insb
push
mov
mov
mov
test
add
add
fisttpl
je
add
mov
testb
and
mov
scas
lcall
addr16
dec
add
jg
and
mov
add
and
cli
pop
and
mov
and
add
dec
fcomi
push
mov
add
inc
add
jmp
jae
add
pop
out
std
adc
lahf
inc
inc
add
add
or
add
jmp
rolb
add
push
jbe
aad
pop
stos
insl
bound
mov
pop
push
les
sub
add
mov
mov
add
mov
or
movsl
inc
movsb
add
add
add
add
pop
mov
sub
fadds
mov
hlt
add
bound
mov
add
push
jnp
cmp
add
sbb
add
add
add
push
add
add
outsl
mov
and
mov
call
add
pop
jb
stos
push
daa
xchg
cwtl
rolb
or
add
mov
rolb
cli
push
add
pop
jae
inc
mov
or
mov
sbb
scas
fimull
cmp
into
stc
scas
jne
int
aam
lahf
adc
add
jae
arpl
add
pop
rep
add
add
add
mov
cltd
inc
nop
add
insb
sti
das
loop
dec
or
dec
fstl
add
lret
out
dec
mov
xchg
sti
push
mov
xchg
add
jns
out
xchg
fldcw
stos
adc
je
lea
fwait
leave
insl
xorl
in
sahf
sbb
pop
mov
mov
adc
and
add
cmpsl
mov
mov
test
data16
add
or
add
inc
add
icebp
sub
xor
addb
cmc
mov
push
push
add
stos
push
add
xchg
mov
cmp
add
in
mov
add
sub
add
add
test
mov
add
add
add
mov
jno
je
ret
inc
add
packuswb
add
xchg
add
jo
ja
adc
push
add
call
add
mov
add
jno
add
mov
sub
and
or
das
xor
repz
loope
pop
pop
mov
mov
mov
add
mov
sub
scas
xchg
lret
mov
in
cwtl
mov
dec
outsb
jbe
imul
inc
add
out
xor
adc
cmp
add
mov
mov
ret
adc
xor
jns
sbb
add
mov
shll
outsb
out
add
add
adc
popa
or
clc
sub
add
mov
add
add
add
adc
add
pop
cmp
add
fisttps
add
loope
mov
popf
jecxz
testb
push
add
add
popa
sbb
pop
adc
sub
inc
je
sbb
pop
imul
inc
mov
lcall
add
xchg
cmc
add
mov
cwtl
inc
add
mov
fiaddl
push
add
daa
pop
jecxz
mov
push
stc
mov
add
mov
addr16
push
jb
jne
add
add
mov
mov
cmp
cmp
data16
add
add
mov
adc
add
add
add
roll
mov
pop
sbb
xchg
add
pop
addb
icebp
sub
pop
ss
pop
jp
or
movb
loopne
pop
in
shll
jecxz
and
cmp
imul
mov
aad
inc
add
loopne
push
pop
and
mov
imull
add
mov
jae
subl
push
add
add
sub
in
pop
dec
dec
xor
cmc
popf
test
je
and
mov
pop
pop
and
add
add
aam
sbb
xor
enter
addb
push
add
fstps
and
lods
movsb
add
sbb
in
add
add
add
mov
add
decb
mov
add
sarl
and
cmp
loope
pop
mov
sbb
xor
imul
in
out
add
out
icebp
leave
pop
popa
jne
add
add
add
fadds
jno
jmp
movb
add
inc
ljmp
push
add
addb
rolb
loop
rcrl
in
insl
pop
xchg
lret
jae
add
add
add
test
mov
mov
mov
and
add
mov
add
add
nop
add
xchg
aaa
dec
pop
loop
repnz
xchg
add
rolb
push
add
les
les
mov
out
mov
add
popa
add
test
add
test
sbb
rolb
mov
popa
rolb
lods
adc
mov
add
add
mov
push
aam
repnz
pusha
add
lret
cwtl
push
add
int
xchg
adc
push
add
sti
cld
dec
repz
push
push
add
pusha
add
mov
leave
pop
mov
jae
fsts
add
addb
add
xor
cld
fmul
sbb
dec
inc
add
fwait
bound
mov
mov
rolb
add
rolb
mov
push
add
jecxz
add
add
dec
int
sub
lahf
jecxz
add
divl
add
pop
cltd
add
pop
pop
dec
mov
or
aad
popa
ret
pop
jae
adc
push
add
add
fists
add
sbb
mov
jb
mov
mov
sub
add
mov
mov
xchg
push
add
aam
jmp
in
mov
scas
cmp
rolb
fcoms
cld
movsl
cwtl
cmpsb
add
jle
add
add
mov
in
arpl
cld
mov
add
add
in
popf
popa
das
ja
rcll
call
push
mov
int
jb
popf
lret
mov
lock
jle
adc
pop
jae
subl
or
add
add
out
cmpsb
add
ret
xorl
mov
movb
mov
jo
push
add
sub
and
cltd
sbb
inc
cwtl
adc
add
and
add
mov
ret
inc
mov
scas
fwait
test
test
leave
insl
ljmp
add
add
add
add
adc
mov
xor
jno
add
add
add
xchg
mov
into
inc
add
mov
pop
pop
lds
xor
add
mov
fstps
push
add
loope
add
xor
mov
add
shll
rolb
adc
lock
add
cmpsb
add
add
add
xchg
mov
addb
add
push
add
inc
add
loopne
repz
gs
add
gs
xchg
rolb
mov
cld
sub
add
mov
arpl
mov
scas
cltd
mov
dec
nop
add
or
and
add
adc
xor
bound
mov
mov
cli
mov
in
arpl
add
xchg
add
rolb
lret
xchg
add
adc
push
and
ljmp
jmp
add
add
add
mov
add
iret
loop
xchg
adc
jle
add
jae
and
mov
out
aam
addl
insl
addb
mov
dec
lds
loop
push
jae
mov
aas
pop
scas
jnp
jle
jl
cmpl
test
mov
addb
jp
lock
sub
add
add
mov
mov
add
add
add
add
cld
int
rolb
fsubrl
xchg
ljmp
add
add
add
push
add
sub
jno
add
cmp
jle
push
add
xchg
add
lret
aas
cmpsl
aas
xchg
add
sub
rolb
cmp
add
bound
mov
add
les
sarl
dec
test
or
add
add
add
add
add
cmp
int
js
test
push
mov
popa
out
add
outsl
and
rolb
lret
movb
push
das
lods
mov
sarl
pop
push
mov
push
add
cwtl
imull
push
add
add
jns
scas
mov
add
mov
mov
mov
add
push
add
mov
add
inc
add
jbe
loop
jb
sbb
pop
sub
orl
xchg
add
add
das
mov
dec
xor
add
add
xlat
add
add
add
adc
addr16
push
add
add
dec
or
cli
cmpsb
add
pop
dec
jns
mov
testb
icebp
stos
std
pop
add
add
inc
add
rorl
xor
add
mov
inc
add
sti
pop
fsubs
pushf
or
mov
insl
int3
mov
jo
xchg
inc
add
jno
xchg
insl
pop
pop
pop
mov
int
and
mov
imull
add
push
xlat
cmpsb
add
add
mov
or
leave
je
lds
inc
add
stos
les
insb
push
add
imul
mov
jbe
movsb
add
add
add
add
add
pusha
add
and
mov
jnp
add
push
add
xchg
add
add
nop
add
imul
pop
roll
fdivrs
cmp
ret
xchg
fisubs
mov
add
sbb
add
add
add
out
sbb
imul
mov
movb
push
add
lock
out
xor
aaa
push
add
imul
add
add
mov
sub
add
pop
mov
daa
mov
jle
movsl
fwait
scas
push
jp
rolb
sbb
dec
sbb
add
lods
sbb
xchg
add
add
push
sbb
inc
add
add
jne
mov
lret
and
mov
add
add
add
add
pop
add
pop
mov
out
mov
lret
push
dec
jg
lret
fildll
pop
test
or
mov
out
ret
jno
add
add
add
outsl
lahf
mov
mov
fdivs
add
add
add
add
mov
lret
add
mov
test
xchg
add
rcll
add
add
arpl
push
add
out
insb
push
movsl
out
insb
pop
pop
ja
add
add
ja
add
dec
and
punpcklwd
mov
sub
outsb
loopne
cmc
pop
jbe
mov
fwait
stos
push
inc
or
add
test
add
rolb
lret
inc
xchg
enter
out
lcall
addb
out
add
xor
mov
std
add
aas
add
loop
fists
pop
rcrl
mov
lods
outsl
jecxz
add
or
xor
xor
add
jle
mov
add
sbb
add
add
imull
mov
adc
pop
lods
stos
jno
pop
mov
popa
stos
test
or
cmp
add
add
add
cmp
rolb
and
add
add
mov
pusha
add
dec
xchg
loopne
jp
add
or
add
add
mov
fucom
outsl
xlat
jge
je
std
outsl
jle
add
dec
ljmp
insb
cmp
push
sub
push
mov
sbb
or
push
jb
push
lds
add
das
addb
add
shll
jno
mov
fimull
pop
xor
dec
ficoml
outsb
movsb
add
add
call
add
add
add
pop
imul
repz
js
add
mov
call
add
add
movb
sbb
mov
int
xchg
add
sbb
push
cmp
outsb
test
jo
cltd
mov
dec
mov
insl
add
test
add
add
mov
std
mov
add
add
cmp
push
das
inc
fisttpl
cmpsl
cmp
jg
nop
add
add
add
int
bound
mov
add
add
xchg
out
andl
add
pop
mov
sbb
dec
mov
movsl
daa
xchg
mov
pop
mov
mov
imul
stc
cmp
add
leave
inc
jnp
add
mov
jle
push
mov
add
pop
xchg
add
popa
fidivl
add
sub
add
mov
addb
push
cmpsl
in
stos
lea
and
mov
or
imul
or
xchg
cmpsb
add
push
inc
add
outsl
mov
add
add
int3
add
in
ljmp
add
add
xor
jae
push
add
mov
push
add
mov
lret
in
addb
add
add
mov
es
push
add
or
mov
data16
addb
imul
add
mov
pop
add
inc
add
lahf
mov
jne
add
pop
xchg
add
into
imull
add
add
mov
leave
mov
pushl
add
lret
push
inc
add
add
add
repnz
mov
mov
mov
mov
add
inc
data16
add
add
loope
rolb
mov
dec
xor
es
adc
ret
add
cmpsl
cwtl
push
ret
movaps
jnp
cltd
push
dec
jg
sbb
loopne
arpl
int3
stc
sub
add
mov
sbb
cld
in
and
adc
mov
mov
add
add
cmp
add
pop
in
fidivs
add
inc
or
ret
xor
movsb
add
fisubrs
fldl
jnp
add
cld
jne
leave
dec
sbb
mov
outsb
stos
ss
ja
scas
std
lahf
push
pop
das
fbld
out
add
add
cmpsb
add
add
dec
mov
popa
jnp
stos
xchg
add
xchg
add
mov
mov
add
stos
stos
movsb
add
repz
add
add
mov
fistpl
movsb
add
mov
cmp
neg
imul
cmp
stos
sahf
jle
push
add
or
add
jmp
add
push
add
push
add
insb
xchg
jnp
mov
xchg
add
jg
out
mov
jbe
adc
sub
clc
scas
pop
push
add
push
xchg
jo
and
add
add
mov
call
or
mov
addb
clc
mov
stc
sbb
add
pop
out
add
in
fstpt
in
jecxz
add
add
add
popf
popf
jge
and
jo
or
xchg
add
dec
xor
mov
mov
add
cmp
pusha
add
mov
jb
int
add
add
lahf
sbb
add
add
shr
mov
adc
add
dec
mov
mov
push
cli
das
clc
pop
add
sub
add
push
add
aam
cwtl
popa
mov
lret
xor
add
add
mov
jp
cmp
push
add
pop
in
cmpsl
push
add
jecxz
inc
add
mov
lret
adcl
xchg
add
add
test
addb
cmp
xchg
add
aaa
repnz
jno
push
inc
add
into
fwait
lea
rolb
cs
add
and
xlat
sub
int
jno
xor
sbb
xchg
add
xchg
andl
xchg
add
incl
loopne
push
lock
inc
xchg
add
pop
lds
lret
dec
into
out
or
add
mov
pop
scas
stc
inc
add
push
add
mov
sbb
add
out
cltd
lcall
fdivl
dec
in
add
pop
gs
mov
add
mov
add
lret
xor
mov
add
in
stos
int3
dec
int3
in
xchg
push
add
mov
cmpl
cmp
call
sbb
add
testb
arpl
rcrl
mov
push
add
add
ret
push
mov
dec
mov
lea
pop
cltd
ffree
add
mov
sub
add
sbb
mov
outsl
jns
add
add
add
pop
jmp
push
insl
inc
add
cmp
lret
add
add
addb
add
jg
aaa
sub
mov
out
addr16
push
mov
lahf
and
add
push
dec
sub
push
add
enter
cld
adc
mov
add
stos
cmp
test
add
push
add
jne
jb
mov
xor
mov
stos
mov
pusha
add
push
popl
mov
clc
in
leave
push
add
add
push
add
sti
or
sti
mov
xchg
add
push
add
popa
and
icebp
add
add
jp
mov
lahf
sub
jo
or
add
xchg
add
outsl
add
adc
fstps
cmc
xor
aas
sbb
sbb
dec
or
test
ret
pop
aas
inc
add
add
push
enter
add
insl
jge
push
cltd
inc
fstpt
xchg
stos
fcomp
fsubrl
aaa
xchg
xchg
repnz
add
movsl
mov
test
js
dec
or
lods
ret
or
mov
xchg
mov
inc
add
mov
mov
cmp
lods
in
iret
popa
adc
stc
dec
ror
rolb
add
push
repz
and
mov
mov
add
mov
ret
rorl
add
clc
mov
push
add
ljmp
testl
mov
test
enter
add
add
cs
push
cld
in
lds
xchg
cmp
add
sahf
test
cmpsl
frstor
mov
add
inc
add
in
movb
add
xor
enter
mov
add
pushf
mov
in
jmp
inc
sbb
add
push
cmp
in
push
add
in
shll
insl
sbb
sbb
jns
in
or
inc
add
jl
add
add
lahf
lds
cmp
jle
add
inc
add
jnp
ljmp
add
add
add
out
push
add
add
jp
pop
sbb
and
add
cmp
add
lds
sbb
mov
rolb
in
int3
js
arpl
or
call
rolb
and
or
ljmp
add
push
jge
dec
jne
loop
mov
ret
mov
add
mov
cmp
mov
and
mov
push
fsts
add
sub
cmp
dec
lcall
cmpsb
add
add
insb
dec
pop
mov
mov
and
mov
add
je
mov
dec
sub
leave
or
daa
mov
add
add
mov
outsb
push
mov
jo
pop
stc
loop
sbb
rep
out
jg
xchg
fisttpll
jl
fidivrl
mov
and
mov
and
jmp
dec
outsl
pop
test
sub
sahf
cmp
pushf
outsl
mov
add
cltd
adc
inc
jae
add
jbe
add
mov
and
mov
add
mov
pop
pop
or
add
rolb
adc
popa
add
mov
add
pop
in
je
pop
mov
rorl
sahf
hlt
add
add
or
bound
mov
xchg
or
add
xchg
xlat
cs
popa
fdivrs
stos
shll
lock
mov
lcall
xor
lods
lods
mov
pop
cltd
jae
add
add
mov
ret
cltd
cmp
into
sub
add
mov
cmp
mov
adc
aam
cmp
xchg
mov
add
mov
add
mov
add
mov
enter
pcmpeqd
lea
lcall
andl
and
mov
add
pop
pop
adc
hlt
add
mov
imul
ds
jo
movsl
pusha
add
jno
outsb
ja
add
pop
lds
add
push
add
mov
stos
aam
adc
int
mov
add
mov
xchg
pop
loopne
mov
lcall
mov
mov
inc
add
loope
cmp
and
test
cld
call
imul
xor
in
out
pop
add
add
mov
outsb
jge
mov
repnz
inc
lcall
and
test
adc
mov
pop
xchg
mov
mov
lock
and
loopne
jbe,pn
pushf
xchg
pop
adc
fs
cmp
add
aad
cltd
mov
stc
and
mov
or
loopne
mov
add
in
cltd
adc
imul
cli
push
lret
dec
lea
add
jl
add
bound
mov
mov
add
pop
testb
jnp
add
dec
jno
add
add
in
out
lods
addr16
mov
jp
and
push
icebp
and
inc
fildll
jmp
add
adc
mov
jl
xchg
add
jno
das
pusha
add
int
adc
sbb
aam
sub
imul
add
add
pop
pusha
add
xor
movsl
pop
pop
or
pop
pop
mov
xchg
into
rolb
pop
dec
push
and
mov
cmp
test
adc
aaa
shll
lock
test
xchg
pop
imul
add
add
push
sbb
mov
add
push
add
mov
mov
movsl
fmuls
subl
jge
adc
lods
test
mov
dec
add
sbb
rolb
scas
cmovb
mov
mov
sub
mov
add
imul
xchg
add
add
lock
in
jae
lcall
xor
add
dec
xlat
outsl
jo
lahf
addb
push
add
jne
mov
add
push
cwtl
mov
les
shl
add
in
add
add
mov
fnstcw
dec
sbb
add
jns
cmpsb
add
negl
sahf
inc
std
cmp
add
fwait
or
jbe
addb
popa
jl
add
sti
out
add
add
add
arpl
add
mov
pop
lret
daa
loope
dec
mov
nop
add
pop
fs
add
cmpsb
add
jno
enter
add
and
add
jae
add
imul
clc
push
lods
negl
test
loope
popa
and
test
mov
add
add
fmull
add
mov
jmp
add
nop
add
std
xor
mov
dec
xor
movsl
je
mov
mov
jo
repz
add
add
test
add
call
add
sbb
add
add
mov
cmp
cmpl
arpl
movsb
add
xchg
add
testb
add
addb
es
add
jl
add
mov
pop
adc
or
add
add
add
mov
add
cmp
cmpl
jg
mov
lock
add
outsb
repz
outsb
lret
outsb
or
lock
testb
pop
adc
mov
movsl
cmp
pop
mov
lahf
jo
out
popl
add
add
mov
jbe
push
fadds
mov
inc
add
jbe
or
insl
mov
addb
inc
ljmp
xchg
and
pop
aam
push
add
add
clc
inc
add
cmp
add
inc
pop
push
add
add
and
add
add
mov
add
sub
cmp
jns
add
mov
daa
arpl
push
add
inc
add
mov
filds
add
add
aas
lahf
jg
jle
outsb
push
add
add
mov
sub
add
iret
pop
mov
add
in
push
add
jb
and
loopne
or
add
addb
lret
sbb
add
flds
xor
push
add
outsl
stc
mov
dec
in
loop
inc
test
gs
jl
add
xor
add
gs
add
lret
add
and
mov
aaa
pusha
add
xchg
push
add
mov
add
addb
ds
repz
mov
and
enter
fistpll
sub
in
jbe
push
dec
ljmp
add
sub
jp
add
add
adc
in
inc
add
mov
inc
add
mov
add
adc
js
jmp
mov
inc
add
add
add
mov
cmp
call
pushf
jle
mov
add
lahf
add
sbb
add
leave
xchg
push
add
add
popf
data16
lods
int
inc
add
inc
add
mov
in
push
add
inc
adc
out
aaa
push
dec
xchg
cmpsl
add
add
test
cmp
dec
and
mov
sbb
push
add
mov
xchg
lret
adc
data16
nop
add
cmpsl
lock
add
sbb
add
jg
lcall
add
jl
rolb
hlt
add
add
popf
or
mov
insl
sub
add
hlt
add
sbb
add
add
add
add
add
mov
ja
add
add
les
sbb
add
mov
loopne
jl
movsb
add
mov
cs
negl
add
movb
sub
mov
xchg
aaa
adc
inc
sbb
in
addr16
movsl
in
push
add
mov
sub
add
test
mov
add
repz
data16
lea
inc
push
pop
sbb
insl
jmp
add
add
jge
fidivrs
cmp
ret
xchg
lods
outsl
adc
pusha
add
add
test
test
test
sbb
aas
scas
shl
add
jno
add
pop
mov
inc
add
add
sbb
je
pop
push
add
xchg
add
sbb
add
imul
rolb
outsb
cli
xchg
add
or
add
fxch
lcall
jecxz
push
lcall
mov
cs
test
xor
imul
cmp
dec
mov
loopne
aad
and
mov
shr
xchg
push
jp
add
xchg
jmp
lods
mov
mov
pop
ss
nop
add
sub
add
add
push
cmp
xor
lods
add
mov
add
add
pushf
cld
mov
mov
push
add
push
add
add
test
add
xlat
cmpsl
iret
test
push
add
cmp
shld
pop
inc
add
fwait
push
mov
popa
sti
je
mov
add
out
add
add
data16
add
fisubs
mov
arpl
cmp
add
add
jecxz
ljmp
popa
lcall
int3
popf
adc
and
out
lods
sub
add
mov
add
add
jbe
sub
add
jnp
rolb
or
add
subl
add
add
js
mov
loopne
cmp
add
add
lds
pop
push
add
or
mov
jp
jno
sbb
cwtl
in
push
inc
ret
mov
add
mov
add
scas
fstpl
faddl
fwait
pop
add
cli
fdivl
lret
lea
xchg
cmpsl
cmc
mov
mov
dec
je
dec
jmp
add
push
and
add
mov
xor
addb
add
sti
jns
add
push
add
dec
aaa
xchg
add
dec
ret
inc
mov
in
add
out
aam
xorl
inc
jnp
add
mov
sbb
add
arpl
adc
xor
xchg
push
add
scas
or
jnp
xchg
or
dec
repnz
add
push
in
sbb
add
jbe
xlat
addb
mov
add
mov
fs
mov
addb
add
movb
add
fistps
add
or
adc
xchg
or
sbb
pop
movsb
add
inc
add
das
jo
mov
rolb
adc
add
aaa
mov
test
xchg
or
rolb
in
mov
xor
dec
out
push
add
add
add
inc
add
add
mov
js
mov
xchg
add
fcmovb
les
mov
enter
cmp
ljmp
mov
testb
sahf
mov
push
xor
mov
lea
mov
mov
mov
test
xor
push
pop
lahf
sahf
cmp
pop
xor
or
xlat
ds
movb
add
nop
add
and
mov
add
add
xor
insb
mov
adc
ret
hlt
add
mov
loopne
cld
shll
add
js
fsubl
add
scas
pusha
add
adc
push
jne
sarl
scas
ds
sti
mov
mov
popf
fiadds
add
add
xchg
mov
ret
sbb
add
clc
pop
aad
mov
cld
push
add
and
inc
add
push
fstp
insl
xor
add
stos
mov
arpl
cwtl
cmp
and
mov
dec
test
icebp
outsl
inc
bound
mov
roll
adc
or
ds
loop
in
mov
je
ret
loope
push
add
ja
and
mov
add
inc
test
push
sub
rdtsc
call
and
mov
lcall
imul
fstpt
xchg
add
das
ja
or
mov
xor
jbe
rcll
dec
scas
xor
xlat
sbb
mov
sub
add
add
shll
out
jnp
add
add
add
out
test
mov
cwtl
test
outsb
or
mov
add
std
xchg
add
add
test
lods
cmc
or
sub
add
leave
pushf
push
scas
add
add
cmp
je
xchg
add
add
cmp
lds
add
add
icebp
cmp
out
push
add
add
mov
shll
ret
jmp
cmp
scas
fldl
xchg
add
add
negl
inc
pushf
arpl
add
add
add
add
add
xor
les
int
xor
repz
mov
add
inc
pop
cmpl
and
data16
mov
fisttpl
test
push
mov
lahf
rorl
loope
xor
xor
jo
push
testb
add
outsl
push
jle
add
add
lcall
cs
sbb
mov
add
add
add
add
or
and
add
add
lahf
cld
adc
test
pop
mov
cltd
adc
sbb
add
clc
xchg
idivl
mull
mov
ss
aad
cmp
or
inc
add
mov
scas
push
add
or
and
out
jle
add
add
jo
fldcw
pop
pop
cmp
add
fists
jecxz
shll
sbb
dec
cmp
add
ljmp
add
int3
lahf
mov
ljmp
stc
jg
pop
cli
xchg
sbb
or
and
add
sbb
imul
or
out
je
incb
add
jns
mov
add
add
add
lahf
mov
add
dec
adc
adc
mov
add
lret
mov
ret
fiadds
aas
pop
push
fdiv
inc
add
loopne
xchg
in
xor
in
add
inc
roll
stos
repnz
add
iret
in
insb
and
fcomip
add
add
pop
ret
mov
gs
add
add
push
pop
call
sahf
pop
clc
movsb
add
jecxz
xlat
inc
scas
movb
cmc
mov
mov
je
fidivrs
add
in
push
add
add
out
dec
mov
aad
bound
mov
add
pop
mov
ror
int
add
xchg
cli
push
outsb
mov
push
dec
jo
xchg
add
add
mov
dec
sti
cld
clc
push
pusha
add
add
xor
push
jge
push
add
add
leave
jecxz
add
jae
sbb
or
jge
std
push
add
adc
xor
add
mov
fisubrl
lods
cld
mov
pop
dec
fstpl
imul
addr16
add
pushf
xlat
cltd
cmpsb
add
dec
cmc
addb
add
jo
cli
cli
test
imul
in
add
xchg
add
sub
mov
add
xor
mov
push
addr16
add
add
adc
add
testb
xor
clc
out
mov
pop
mov
add
pop
icebp
in
mov
sbb
jno
test
hlt
add
scas
rolb
clc
ja
add
out
fsubs
and
sub
add
dec
inc
sub
and
cltd
and
cmp
outsb
test
jb
or
sar
jne
mov
in
lods
pop
adc
add
sbb
xchg
jo
xchg
sub
pop
push
aam
push
test
xchg
add
adc
into
jns
add
imul
dec
xchg
xchg
push
lret
dec
xor
jno,pt
aam
popa
clc
mov
add
out
out
sbb
add
psraw
add
ds
add
sbb
inc
add
loop
add
cmp
add
int
xchg
add
jmp
push
or
jg
add
add
fcomps
xchg
or
mov
xor
xor
xchg
add
fists
pop
adc
mov
inc
add
dec
xchg
pop
mov
jge
xor
cmp
mov
xchg
add
pop
stos
imul
pop
std
fndisi(8087
js
mov
cmp
add
add
dec
icebp
insb
jno
push
add
push
pop
fisubrl
inc
add
add
fildll
add
push
add
push
adc
hlt
add
aaa
pushf
and
add
add
mov
pop
and
xchg
add
dec
out
add
add
add
loopne
mov
pop
shll
xor
add
mov
or
cltd
mov
add
sub
add
jb
inc
cmp
add
in
dec
daa
jl
add
mull
adc
xchg
add
dec
test
sbb
testb
mov
movsb
add
dec
pop
adc
add
add
dec
das
add
imul
add
xchg
les
aam
push
jge
test
add
add
add
fwait
mov
add
add
das
icebp
rolb
fisttpll
icebp
icebp
sti
or
fmuls
mov
aas
or
jo
mov
mov
mov
fidivl
out
xchg
add
sbb
or
add
add
sbb
pusha
add
push
mov
add
popf
push
add
xorl
add
add
das
lea
dec
mov
adc
leave
pop
insl
daa
scas
push
lret
jb
int
add
dec
and
pop
xchg
add
clc
aas
rolb
js
add
add
mov
clc
xchg
enter
push
add
ret
dec
dec
pop
pop
cmp
cmpl
data16
or
sbb
push
add
mov
dec
adc
add
pop
gs
pop
add
and
add
mov
int3
ret
mov
sub
int3
stos
lods
aas
jbe
cwtl
xchg
notl
popf
dec
std
cmpsl
sbb
add
add
lcall
push
in
add
repnz
mov
gs
add
faddl
and
testl
mov
add
negl
fsubs
mov
push
enter
rolb
fildll
sub
adcl
push
jge
jns
in
movsb
add
mov
xchg
add
outsb
mov
dec
imul
add
sti
loope
mov
in
pop
clc
rolb
adc
or
fbld
fdivrs
lea
addb
loopne
inc
mov
mov
lods
xchg
jne
into
aaa
loop
push
xor
mov
popa
sub
jns
pop
repnz
jle
inc
add
mov
gs
mov
in
lock
sub
cmpsb
add
rolb
dec
data16
iret
int3
sub
add
add
add
stos
pop
sbb
mov
ds
add
sbb
lods
in
in
in
test
and
xchg
test
add
mov
add
hlt
add
sub
mov
inc
add
pop
stc
push
add
pop
fwait
xchg
notl
add
add
add
dec
push
add
mov
sbb
add
cmp
arpl
add
sar
add
add
add
addb
icebp
or
add
add
or
fwait
push
je
movb
add
out
fiadds
scas
mov
xchg
fstpl
fbstp
xor
hlt
add
aas
and
mov
and
push
add
cmp
cmc
xchg
pop
cltd
sbb
add
mov
ss
add
add
mov
jge
add
xchg
add
imul
add
mov
mov
add
adc
cltd
or
add
pop
push
push
add
add
in
adc
clc
outsl
or
in
pushf
das
pop
rolb
int
lods
dec
out
daa
mov
outsl
add
dec
jmp
inc
add
inc
rolb
popa
fwait
jne
add
mov
add
add
in
sti
sbb
loop
sbbl
add
add
mov
add
add
add
ds
push
xchg
mov
cmp
add
xchg
sbb
mov
gs
popf
or
das
jae
cmp
or
add
adc
std
mov
add
repz
or
popf
add
add
cs
fdivrs
test
aad
jp
fimuls
adc
jo
sbb
xchg
add
iret
push
add
inc
outsb
rolb
xchg
add
add
nop
add
lea
sbb
push
add
mov
adc
add
sti
jne
ja
cmp
add
mov
add
add
sbb
push
add
adc
xlat
loop
je
adc
or
lahf
jae
mov
inc
add
add
test
and
mov
int3
sub
add
sub
pop
and
das
mov
lcall
mov
lock
fcmovnu
or
mov
sbb
lods
mov
add
push
add
add
mov
shrl
mov
inc
movsl
mov
jmp
push
lahf
jg
pop
mov
lods
ja
add
int
sahf
insl
or
add
jg
add
arpl
add
add
les
lock
xor
add
jns
inc
in
or
sub
add
ljmp
insl
loope
add
add
aas
loopne
or
addb
cmp
fwait
pop
xchg
mov
cmpsl
loopne
push
mov
lcall
int3
push
clc
mov
xchg
add
push
add
push
add
add
jae
add
aas
test
call
aad
add
or
inc
add
dec
jecxz
add
outsb
cli
in
in
inc
add
add
add
insb
pop
popa
rolb
add
mov
add
mov
sbb
in
mov
lret
mov
daa
cmp
aaa
mov
push
add
rorl
fnstcw
insb
pop
in
pop
iret
test
add
add
sahf
addb
and
test
add
repnz
add
add
cmc
lock
or
lods
mov
add
add
mov
xor
or
in
xchg
push
inc
add
mov
sbb
loop
sub
add
addb
and
mov
mov
dec
adc
push
fxch
pop
xor
ffree
fidivrs
pop
sbb
jle
add
jns
sbb
popa
stos
add
add
push
dec
lea
aas
push
add
jmp
add
sti
add
lods
push
add
in
mov
lods
scas
outsl
pop
movsb
add
or
dec
pop
add
push
add
add
cli
cwtl
push
hlt
add
inc
add
sbb
pushf
testb
std
enter
add
add
or
aas
push
add
add
dec
cmp
add
push
nop
add
lcall
je
push
add
add
xchg
loop
in
jecxz
mov
push
add
rorl
stos
pop
pop
cmp
add
ficoms
push
add
or
add
or
rcll
mov
push
add
in
jb
outsl
push
add
stos
daa
dec
or
mov
ja
add
out
jno
add
jp
add
loope
adc
jae
enter
xor
popf
loopne
and
mov
outsl
mov
outsl
in
cmp
sbb
add
sub
mov
add
add
inc
xchg
jmp
mov
cmp
add
loopne
pushf
mov
dec
test
add
jl
or
add
ss
cs
add
add
add
ja
jg
or
pop
stc
mov
or
add
xchg
cwtl
pop
fstps
add
inc
add
add
pop
xchg
add
add
mov
lds
add
and
mov
je
test
int3
or
add
aad
add
sub
add
lret
add
mov
add
add
dec
inc
lret
cltd
jbe
repnz
add
fstps
push
inc
add
add
add
mov
xchg
sbb
add
rolb
jp
cmp
shl
nop
add
pop
aam
inc
add
or
jne
sbb
sub
leave
fstpl
test
and
sbb
icebp
inc
pushf
mov
scas
out
add
sbb
fsub
test
nop
add
sub
mov
add
testb
pop
sub
add
add
mov
xor
fdivl
xor
pop
inc
add
jmp
add
push
add
std
outsl
pop
xor
mov
fstps
inc
add
push
add
add
icebp
adc
dec
cwtl
rolb
xchg
add
mov
cltd
in
rol
add
mov
lret
sbb
xor
sarl
jmp
add
aas
mov
add
inc
add
daa
stc
sbb
jge
add
andl
addb
mov
add
in
addr16
dec
cmp
mov
add
dec
sub
or
stc
mov
int3
xor
inc
add
aas
add
add
in
lcall
popa
cmp
or
fnstenv
das
mov
xchg
data16
add
add
dec
stos
dec
cmp
add
add
addb
fwait
sti
iret
inc
add
add
test
add
lods
movb
add
repnz
lds
add
cltd
mov
stc
jnp
faddl
xchg
test
add
add
mov
xchg
add
add
ret
inc
add
popf
sub
add
add
push
in
jno
mov
add
movsb
add
pop
bound
mov
mov
add
xchg
xor
add
mov
add
or
out
fcompl
ljmp
add
inc
add
testb
mov
and
mov
ljmp
add
sbb
and
mov
xchg
adc
or
add
jp
dec
push
cmp
add
add
out
add
cmp
cld
insl
push
add
mov
movnti
mov
xchg
add
add
inc
push
add
push
add
push
add
mov
mov
out
mov
pushf
add
in
xchg
call
fnsave
enter
add
call
jnp
add
xchg
add
or
pop
fidivrl
scas
push
mov
jb
xchg
sub
add
inc
add
xor
sbb
push
aam
in
jns
jbe
adc
inc
add
add
push
xor
xchg
stos
jg
push
add
cmpsb
add
pop
out
fsubrs
repnz
add
out
pop
sbb
add
add
mov
mov
out
pushf
and
add
push
add
xchg
sub
jnp
push
add
mov
push
add
stc
pop
addr16
addb
add
add
pop
mov
push
add
add
and
in
mov
add
dec
add
mov
add
or
add
mov
mov
lret
addb
dec
add
sbb
add
rolb
and
add
sbb
add
mov
jo
add
adc
xchg
xchg
outsl
sbb
sahf
pop
cmp
pop
or
mov
add
inc
outsb
sub
mov
fbstp
adc
and
sbb
add
add
daa
cwtl
scas
push
add
ss
rolb
mov
pop
call
add
cmp
pop
lods
pushf
orl
add
and
pop
pushf
nop
add
add
cmp
into
jo
shll
xor
lret
idivl
and
push
add
out
and
add
and
mov
out
repz
aad
testb
add
jg
add
mov
repz
push
add
out
push
add
jl
repz
inc
lcall
add
add
add
std
addb
cltd
sub
movsb
add
sbb
cs
lret
call
clc
lock
stos
dec
mov
cmp
and
mov
add
dec
rolb
out
inc
cmp
jge
out
pop
jmp
test
jb
pushf
pop
ds
add
push
add
cmp
jg
jns
imul
add
mov
outsl
jb
mov
arpl
les
and
mov
jne
add
add
fcoms
add
xchg
add
add
add
loope
add
add
add
mov
add
lea
mov
xor
je
add
mov
test
dec
xchg
xrelease
add
add
scas
daa
in
pushf
lea
fmull
xchg
push
add
jae
test
xor
mov
pop
les
sub
cmpsb
add
repnz
add
pop
les
je
add
jbe
nop
add
xor
rolb
adc
test
mov
outsb
aas
icebp
mov
and
mov
mov
xchg
data16
mov
lret
dec
jo
dec
xor
test
add
xor
ljmp
adc
mov
call
test
bound
mov
push
dec
fucom
add
fcompl
add
and
sti
shll
add
cmpsb
add
stos
insl
insl
add
lcall
add
add
mov
add
add
pop
loop
lods
or
add
xlat
addb
add
add
lahf
rolb
adc
add
add
lock
insb
mov
fstps
testb
mov
sub
fstpt
add
add
inc
add
imul
add
or
jns
outsb
xchg
add
add
movsl
adc
gs
add
add
add
cmp
add
pop
das
cmpsb
add
sti
js
xchg
add
and
push
add
cmp
add
mov
jle
loopne
mov
sbb
pop
jmp
pop
fldt
mov
dec
jae
mov
aam
pop
fcmovbe
add
bound
mov
lea
mov
dec
jns
and
in
mov
cmpsl
add
mov
inc
mov
pop
xchg
add
add
sbb
pop
pop
adc
push
mov
inc
add
add
jne
adc
sub
inc
sahf
popa
jmp
add
add
mov
xchg
popf
or
les
pusha
add
add
jae
add
mov
movb
arpl
add
in
pop
popa
enter
popa
addb
aam
jge
movsl
push
add
mov
lock
push
aaa
aam
sub
in
bound
mov
sbb
xchg
or
add
push
rolb
add
or
jle
fbstp
add
add
add
mov
pop
adcl
add
push
cmp
enter
ds
mov
add
add
movb
inc
stc
sub
add
inc
add
mov
int
xlat
adc
mov
mov
add
popa
test
fsubrl
add
fstpt
adc
mov
mov
cmp
mov
scas
or
lcall
scas
add
iret
ret
lcall
cltd
lret
test
nop
add
mov
xchg
add
add
jecxz
add
and
add
sub
or
push
mov
repnz
mov
add
add
mov
add
dec
testb
call
popf
ficomps
hlt
add
add
ds
rolb
or
adc
rolb
jno
imul
add
pushf
inc
std
dec
int3
out
in
sbb
push
mov
add
addb
les
push
add
int
add
pop
cld
aas
push
ret
js
add
cmp
xor
add
mov
lret
dec
fidivrs
or
add
pop
add
inc
add
ja
mov
add
add
add
push
inc
push
add
int
push
pop
adc
and
popf
repz
addb
nop
add
rcll
inc
add
out
adc
push
add
leave
adc
xor
pop
xlat
pop
ficompl
and
mov
icebp
addb
fldenv
add
jno
pop
jne
into
vunpcklps
xchg
mov
pop
bound
mov
leave
in
pop
ds
adc
inc
add
mov
add
imul
add
cmp
and
mov
testl
add
int
mov
bound
mov
jge
or
repnz
sub
cmp
sub
cmp
leave
jge
add
test
xor
mov
inc
jg
mov
push
addb
add
and
mov
lods
arpl
popf
push
add
mov
add
adc
insl
mov
je
jle
imul
push
jae
add
and
pop
mov
push
add
add
add
in
rolb
dec
add
push
xor
pushf
xor
lahf
and
mov
add
push
add
add
add
add
add
iret
stos
fs
push
or
add
add
add
jge
add
mov
sbb
insl
inc
add
xchg
push
int3
pop
mov
ficoms
es
nop
add
add
add
mov
addl
add
mov
xor
add
cmp
jle
mov
pop
jbe
mov
add
cmp
mov
lods
frstor
jns
popa
cmp
sbb
push
rolb
add
add
dec
xor
add
dec
sahf
test
add
pop
pop
insl
sub
dec
in
mov
mov
add
pusha
add
jmp
arpl
or
push
sahf
mov
or
mov
lahf
popf
fdiv
add
fcomps
lock
push
add
mov
ja
add
int3
movsl
enter
push
add
scas
and
add
add
sbb
cmp
jg
add
and
mov
add
add
xor
movsb
add
test
mov
enter
imul
pop
jmp
mov
and
mov
mov
cmp
jg
jge
testb
scas
push
add
add
mov
rolb
aaa
dec
xchg
add
add
push
jne
cmp
in
jns
cwtl
loop
and
add
pop
outsb
aad
add
mov
sahf
neg
out
je
arpl
fidivrs
fstpt
cli
inc
add
je
add
cltd
int
inc
je
and
add
add
cmp
add
mov
sub
lahf
or
mov
mov
inc
add
test
jecxz
push
add
add
add
add
jge
add
cmp
cmp
add
ficomps
mov
add
or
add
data16
add
add
iret
and
add
nop
add
push
jge
add
push
add
call
mov
sbb
data16
jns
add
xchg
jle
lret
sbb
mov
out
inc
addb
jge
ss
cmpsb
add
scas
mov
in
testb
out
addb
add
push
push
add
sub
push
add
mov
xchg
movb
add
jmp
rolb
dec
xchg
popf
jnp
inc
sbb
push
bts
popa
repz
addb
add
pop
cmp
or
add
add
mov
add
lret
movsl
rolb
jl
add
sub
fistpll
xor
sub
cld
dec
cmp
xchg
push
mov
add
add
inc
add
mulps
add
sahf
dec
jmp
add
add
add
cwtl
aad
fcmovu
xchg
add
xor
xor
xor
mov
add
les
data16
mov
add
pop
sbb
adc
jmp
jp
add
jae
out
mov
das
pop
and
lock
icebp
adc
pop
lcall
mov
pop
in
add
sub
push
pop
arpl
test
sahf
sbb
lods
rol
add
add
shll
in
add
addl
add
or
add
add
loope
and
jmp
or
add
iret
test
cwtl
mov
mov
add
xchg
add
cmc
js
cmp
mov
add
add
add
push
mov
mov
adc
xchg
into
das
pop
xchg
mov
xchg
add
xchg
add
lea
push
test
mov
push
add
mov
adc
add
push
jbe
mov
mov
rolb
testb
push
mov
add
mov
or
ds
test
insb
cwtl
mov
mov
in
or
fld
add
fisubs
jge
test
push
add
inc
push
hlt
add
ds
roll
repnz
inc
add
mov
push
add
xadd
adc
in
pop
dec
and
add
xchg
mov
add
sub
movsl
sub
int3
lahf
hlt
add
rolb
sbb
leave
adc
repz
addb
add
testl
add
add
ffreep
jne
add
mov
fnstenv
xchg
add
and
testb
mov
andl
push
add
adc
cmc
adc
adc
bound
mov
jg
daa
jb
ja
stos
sbb
add
movsb
add
xlat
lods
mov
sub
jno
out
jne
addb
add
jle
mov
ret
xor
sbb
cwtl
lret
je
cmp
mov
adc
sbb
inc
enter
mov
mov
add
fld
add
add
add
inc
add
sub
jmp
add
add
lcall
push
pop
adc
add
add
add
dec
push
add
add
les
mov
add
cltd
scas
cmp
pushf
hlt
add
les
lds
xchg
add
lahf
test
push
xor
mov
jne
sahf
mov
pop
iret
cmp
stc
dec
repnz
rcll
mov
in
push
scas
aas
push
add
add
xchg
orl
add
mov
mov
movsl
lahf
repnz
push
mov
pushf
push
cmp
add
lea
push
pop
fsubp
jmp
lret
cli
mov
outsb
pushf
jae
dec
bound
mov
mov
or
addl
add
cltd
dec
es
inc
add
pop
push
jmp
in
out
stos
fstpt
rolb
dec
je
push
daa
xor
mov
lret
add
xlat
mov
jb
xor
cli
dec
movaps
xchg
in
inc
mov
pop
and
mov
add
repnz
pop
push
add
in
xchg
add
mov
or
add
mov
lock
add
add
jns
popa
loope
add
add
popa
cmp
add
sbb
aas
out
and
cmpsb
add
mov
inc
add
jge,pn
nop
add
imul
add
fidivrl
inc
add
add
and
imul
fldt
and
mov
or
add
add
icebp
sbb
add
dec
testb
and
mov
cmc
in
pop
lods
movsl
mov
mov
add
add
add
imul
mov
pop
and
pushf
inc
add
movsl
mov
push
add
jecxz
popf
xchg
jbe
arpl
xor
xor
cs
add
mov
add
dec
testb
push
add
cmp
xchg
add
add
add
add
adc
add
dec
dec
mov
mov
hlt
add
add
add
add
in
add
add
aaa
sub
push
mov
add
add
sub
add
fcmove
fyl2xp1
add
in
or
or
mov
addb
ret
jae
xchg
mov
or
outsl
inc
add
and
sbb
out
add
add
jge
cmp
cmp
lea
adc
add
or
adc
sbb
push
add
ljmp
add
add
mov
xchg
add
jmp
mov
or
xor
add
add
add
add
sub
cmp
cmp
mov
add
enter
repz
ret
fisubrl
aaa
aas
fmulp
or
inc
xor
in
push
add
pop
mov
lahf
mov
out
xor
jle
out
and
hlt
add
enter
addb
lret
add
add
mov
rolb
add
mov
lock
fs
mov
add
adc
or
stos
nop
add
xchg
add
mov
mov
jne
add
cmpl
jb
adc
iret
adc
add
pop
rolb
mov
rolb
imul
add
test
repz
mov
push
sbb
sbb
add
dec
xchg
add
xor
inc
push
push
push
xor
add
pop
loopne
dec
mov
xor
cs
add
add
in
add
jae
rolb
dec
inc
add
add
xchg
movsb
add
mov
add
sbb
add
sub
add
xchg
add
xchg
add
mov
jge
add
push
add
sbb
add
inc
add
fs
cli
or
jb
std
inc
lock
adc
je
sbb
inc
insb
adc
xor
xor
lea
xor
mov
add
mov
cmp
mov
nop
add
sarl
xor
add
sbb
jnp
add
push
mov
addr16
lock
inc
les
xor
and
insl
cmp
sub
add
or
xor
cltd
sub
cmp
add
into
in
out
cmc
jne
add
sbb
aad
add
cmpsb
add
mov
je
pop
mov
add
mov
add
clc
loop
in
push
subl
xchg
mov
add
add
cli
or
add
add
mov
test
les
push
add
aaa
lahf
mov
dec
daa
loope
xchg
adc
insb
cs
pop
in
shl
rolb
add
add
push
loope
add
fwait
lock
add
add
add
mov
cltd
inc
mov
add
pusha
add
lret
into
jmp
adc
fimuls
or
cmp
rolb
std
and
test
adc
clc
test
xor
cmp
add
das
lock
add
jmp
cmpsb
add
mov
in
fcoml
add
mov
add
mov
jmp
out
jnp
add
fucompp
call
sbb
popa
adc
add
push
add
jge
fcoml
add
or
cld
dec
cmp
test
jl
iret
inc
mov
mov
add
cld
cmp
cltd
out
dec
inc
add
cmp
stos
xchg
cmp
dec
jno
add
add
ret
add
and
inc
add
mov
mov
or
add
fdivrs
lahf
data16
mov
mov
mov
repnz
add
sub
clc
dec
cmp
cmp
mov
add
mov
fists
data16
and
push
lds
add
mov
add
andl
outsb
push
add
or
add
xchg
mov
dec
nop
add
add
jnp
out
mov
movb
loopne
jp
lods
pop
icebp
rcll
or
add
bound
mov
arpl
sbb
add
adc
add
lock
pop
jmp
mov
add
add
pushf
in
mov
add
pop
ljmp
add
loop
cli
mov
mov
cltd
test
jb
fistpll
std
adc
fwait
mov
dec
pusha
add
push
dec
push
add
sahf
dec
add
enter
rolb
adc
and
mov
add
add
popf
mov
sbbl
add
jmp
inc
add
jecxz
adc
add
mov
leave
mov
or
mov
add
mov
pop
gs
add
add
insb
pop
mov
mov
mov
add
movb
mov
add
add
mov
jecxz
adc
adcl
das
or
add
stc
out
jmp
mov
gs
mov
test
in
fwait
mov
cmp
add
dec
mov
lret
addb
push
pop
or
in
mov
sahf
inc
adc
testl
aam
xlat
loopne
xchg
movsb
add
add
add
mov
sub
cmpsl
ljmp
lret
test
cmp
popl
loope
xchg
xchg
adc
sbb
jle
and
arpl
dec
pop
lcall
pop
int3
cli
mov
add
xchg
pop
cld
add
int
add
mov
add
jmp
add
sbb
mov
add
xchg
add
add
add
into
mov
add
rcrl
rolb
mov
imul
arpl
data16
inc
add
lret
enter
push
lcall
mov
out
jne
test
cmp
rorl
add
stc
jno
inc
add
testb
inc
subl
xchg
add
ffree
add
add
mov
add
add
add
add
imul
pop
jbe
push
in
inc
add
add
add
add
add
popa
ret
mov
push
sub
push
add
dec
pop
pop
and
mov
add
loop
lcall
add
add
mov
mov
push
add
mov
aam
icebp
push
add
dec
scas
jnp
fcmovbe
add
repz
mov
push
add
in
mov
cli
push
lock
add
ljmp
dec
dec
mov
push
sbb
in
das
add
fwait
add
testb
add
push
jo
test
mov
add
mov
or
add
scas
jl
add
icebp
js
pop
pop
pop
push
sub
ja
testb
outsb
xlat
mov
add
data16
add
mov
frstor
bound
mov
add
enter
xchg
add
add
pop
ds
fdivl
int
add
add
mov
dec
mov
call
adc
dec
mov
mov
jecxz
lret
ficoml
cmp
subl
rolb
mov
lea
imul
fsts
add
add
mov
scas
cmove
lods
negl
enter
stos
xchg
add
add
add
mov
xor
nop
add
mov
sbb
push
aaa
rolb
lret
add
xlat
aas
pop
imull
fidivs
add
add
mov
rolb
sub
mov
add
pop
cmp
lahf
xchg
into
stos
sbb
add
push
add
add
test
mov
add
bound
mov
cli
js
sbb
rcl
add
jmp
add
add
cs
cmp
and
mov
pop
and
add
mov
popa
dec
mov
mov
add
call
pop
add
jae
or
hlt
add
push
push
mov
add
add
add
jae
or
fmuls
pop
lret
or
stc
xchg
in
xor
imul
movsb
add
addb
pop
les
mov
mov
sub
add
jae
call
int
jb
mov
inc
add
add
push
int3
dec
xchg
xchg
dec
pop
fldpi
daa
mov
jl
mov
clc
add
lahf
cwtl
and
mov
test
xor
leave
fst
add
mov
jne
or
aam
fidivrs
add
popf
inc
push
inc
add
dec
inc
add
out
adc
pop
mov
add
pushf
movb
xchg
add
add
cli
enter
cmc
popl
add
add
int
add
icebp
fidivs
jno
fs
fcoml
add
xor
pushf
xchg
add
test
cmp
adc
movsl
mov
dec
xor
dec
neg
mov
push
pop
testb
mov
xchg
add
lret
aam
popf
sbb
add
add
ja
clc
add
jo
jmp
movb
adc
pop
inc
cli
and
lods
xchg
add
loopne
add
leave
pop
fwait
mov
xor
loopne
in
rolb
into
addr16
add
xor
sub
cwtl
outsl
push
pop
icebp
and
mov
dec
cli
add
jge
lock
aam
test
in
mov
add
xchg
js
cmp
add
test
or
pusha
add
add
sbb
dec
and
and
popf
xor
pusha
add
mov
addr16
mov
mov
push
int3
sbb
mov
frstor
jg
fimuls
out
push
add
jno
in
inc
add
add
js
add
aad
pop
repz
mov
add
in
addb
sub
cmp
sub
insb
call
test
mov
add
add
addb
cli
sbb
in
sahf
push
add
sti
mov
bound
mov
add
arpl
add
pushf
xchg
in
iret
data16
mov
add
jae
loopne
in
int3
or
and
rolb
stc
fiaddl
arpl
add
ds
negl
pop
out
or
add
loop
add
lret
lret
rolb
push
add
xchg
add
add
mov
add
aaa
inc
add
add
sub
jle
addr16
adc
pusha
add
cmp
scas
jbe
lock
add
divl
repz
push
iret
or
add
add
inc
inc
clc
add
mov
add
mov
ret
mov
je
jecxz
add
mov
add
add
add
sbb
pop
out
pop
lods
sub
test
inc
add
popa
je
pop
call
test
mov
mov
pop
repz
call
cmp
jnp
dec
sbb
adc
in
fincstp
testb
xchg
add
rcrl
pop
push
add
cli
addb
push
xchg
dec
mov
or
jmp
inc
xor
push
add
cmp
add
pop
xor
add
mov
sub
outsl
xchg
add
push
add
js
inc
add
jmp
add
xchg
add
jmp
add
clc
mov
dec
cmp
add
mov
pop
cltd
lret
pop
sbb
jnp
add
adc
cmpsb
add
pop
and
mov
inc
add
inc
add
pop
sbb
fildll
mov
cmp
inc
add
jp
clc
xor
or
add
xor
movsl
mov
sub
dec
and
add
in
inc
add
add
mov
add
pop
int3
dec
sti
and
push
inc
add
add
add
daa
dec
lods
jle
rolb
cli
mov
add
inc
aad
jg
inc
addb
sub
xchg
pop
or
addb
push
mov
inc
mov
add
jo
add
add
push
sbb
inc
add
test
mov
gs
pusha
add
sub
add
mov
mov
jp
add
lock
inc
add
les
dec
nop
add
lret
fwait
mov
adc
sub
mov
add
popf
mov
pop
loop
repnz
dec
das
or
add
add
mov
loop
push
add
ja
sbb
aaa
and
pop
addb
rolb
xchg
add
sbb
xor
in
and
sar
xchg
cmc
xchg
add
dec
pushf
jmp
add
jmp
leave
or
add
xor
inc
add
je
mov
adc
dec
dec
iret
imul
xchg
add
aad
sti
push
lods
xlat
lds
jg
das
pop
xchg
cld
push
inc
add
add
out
pushl
xchg
add
cmp
push
push
add
add
jno
jecxz
mov
push
out
push
imull
stc
test
add
mov
push
icebp
pusha
add
add
add
mov
sub
popf
pop
inc
lock
add
jo
test
mov
cmp
pop
push
add
mov
add
mov
je
and
cmp
shrl
adc
pop
mov
push
add
add
pop
sbb
and
mov
sti
clc
pusha
add
ljmp
ljmp
out
in
jp
push
mov
add
dec
int
jmp
add
mov
xchg
add
repz
add
mov
lea
pop
push
add
xor
cwtl
or
daa
add
mov
add
nop
add
lret
lea
add
ljmp
rolb
and
lret
xchg
ficoml
mov
xchg
add
mov
lret
add
ja
push
add
je
push
movsl
ret
inc
push
xchg
add
xchg
add
data16
mov
mov
add
movb
add
cld
pop
ja
mov
mov
add
xchg
pop
cltd
fidivs
mov
add
inc
add
add
mov
add
in
mov
mov
lods
jecxz
imul
mov
mov
add
aas
pop
insl
pusha
add
lret
fidivs
add
add
add
cmpsb
add
ljmp
mov
jle
xchg
fchs
add
loop
pop
jno
mov
lods
sbb
mov
test
shr
stos
adc
mov
cmpsl
lahf
scas
inc
add
add
insb
sub
push
lods
enter
add
add
es
stos
push
add
add
addb
mov
mov
xchg
lret
mov
pop
call
add
movb
mov
int3
jne
scas
addb
sub
sbb
push
js
cltd
test
xchg
gs
cmp
or
add
mov
inc
cli
add
add
mov
xchg
pop
stc
sti
cs
add
or
and
xchg
aam
sbb
and
mov
sub
add
cmp
dec
adc
in
out
cmp
and
mov
xchg
movb
dec
mov
sbb
push
add
add
int
push
add
add
add
xor
sahf
rolb
and
mov
mov
adc
add
dec
xchg
add
pop
add
cld
push
add
add
stos
add
mov
add
out
cmp
add
movb
xchg
add
add
