cld
rcrl
das
lcall
les
add
inc
movb
xchg
mov
xchg
cld
xchg
addb
test
inc
and
clc
popa
ret
sub
inc
inc
add
loop
scas
inc
push
cmpsl
push
scas
sbb
mov
sub
push
in
inc
add
xchg
sbb
mov
ds
stos
cld
test
ljmp
shrl
fists
fwait
push
jo
mov
test
add
xlat
nop
insl
lock
mov
jo
ja
fadd
add
mov
addb
push
int
orl
pop
xor
mov
jb
add
sarl
or
or
dec
in
mov
mov
addb
adc
in
xchg
jne
sub
add
js
inc
add
scas
mov
cmp
pushf
jbe
pop
test
add
dec
call
aam
ss
mov
cs
gs
hlt
cmp
add
inc
add
adc
fs
rcl
mov
leave
inc
add
hlt
rcl
mov
mov
ror
jo
les
pop
jl,pt
aad
movq
add
lock
xchg
std
mov
pop
jmp
hlt
add
jnp
fcomip
pushf
and
repz
fiaddl
push
rorb
int3
xchg
sub
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
lret
add
add
dec
xchg
jb
push
pop
jbe
enter
lret
call
stos
ss
jae
cld
lahf
sti
push
fsts
inc
add
repz
adc
fcmovnb
add
ds
data16
js
outsb
jmp
enter
mov
andl
push
add
jnp
ret
bsr
mov
jl
add
es
inc
and
das
popf
pop
mov
or
push
addb
out
jmp
leave
insb
mov
jae
notb
dec
cli
sub
lock
or
jo
mov
pop
iret
mov
cwtl
pop
xchg
rcll
and
xchg
or
notb
lret
rcrb
rcll
xchg
pop
popf
mov
cld
jmp
fnstenv
add
jnp
testb
cs
sarb
add
inc
add
imul
add
mov
movsl
xlat
in
imul
add
cli
mov
push
jge
add
add
rolb
std
jne
pushf
out
add
and
cmp
xchg
push
lds
ss
jmp
popa
push
aam
movsl
add
adc
in
add
loopne
mov
repnz
push
jecxz
lret
jo
movsl
pop
test
leave
in
shll
fcoms
mov
loope
mov
leave
sahf
gs
add
add
mov
pop
dec
push
loope
enter
popf
mov
and
jg
push
mov
jb
push
fdiv
cli
mov
mov
imul
dec
inc
shll
mov
loopne
jle
add
dec
dec
cmpsb
jb
fs
xor
add
lds
mov
aam
sahf
into
adc
push
outsb
jae
mov
pop
inc
add
nop
aas
sub
xchg
sarl
mov
adc
cltd
jns
mov
push
add
mov
inc
in
aas
mov
in
add
fwait
cmp
jl
add
mov
inc
add
cmpl
mov
adc
add
sub
cld
cmpsl
sarb
or
out
mov
out
lahf
xor
outsl
xor
push
js
nop
and
and
mov
in
insb
lret
jg
icebp
cmp
mov
add
movb
and
aas
incl
add
std
xlat
mov
dec
aaa
fs
in
imul
fmuls
mov
push
iret
mov
int3
pop
test
mov
sub
sub
sub
imul
iret
push
cmp
sub
push
mov
add
lock
pop
addb
sbb
mov
jecxz
add
add
cmp
popf
mov
shrl
das
insl
fisubrl
pop
add
add
daa
fwait
lock
sar
enter
add
rolb
pop
sti
cwtl
and
pop
inc
add
daa
aaa
decb
and
fs
mov
sbb
pop
adcl
add
js
ja
outsl
outsb
lret
jno
mov
push
cmp
or
jns
rorl
dec
mov
in
test
stos
dec
insl
loopne
aas
popa
push
add
scas
stos
ret
mov
mov
insb
int
sub
xor
mov
stos
addb
addr16
gs
mov
push
inc
push
adc
out
sbb
inc
add
inc
adc
jge
sbb
ljmp
jne
ja
das
xor
shl
add
sub
fdivrs
sub
jecxz
sbb
aad
add
push
dec
hlt
icebp
jg
cmp
pusha
add
add
js
les
rolb
or
or
lods
add
test
loopne
lods
ret
loop
mov
adc
ret
add
outsb
add
mov
loop
aas
jge
xor
dec
out
xchg
test
call
adc
pusha
add
shll
add
nop
stos
test
push
add
jl
push
shrl
ds
xchg
std
loopne
aad
mov
ds
push
lds
mov
lea
sbb
aaa
rcrl
adc
ljmp
rolb
xchg
mov
insb
ja
pop
pop
or
mov
clc
int3
push
xchg
dec
std
movsl
mov
loope
mov
repz
movsb
lret
mov
sub
fdivr
push
xchg
sub
lret
lea
add
cvtps2pi
xor
cmp
mov
pusha
add
repnz
pusha
add
xchg
jmp
jo
sub
xchg
inc
add
jne
les
pop
test
jp
add
push
fistpll
ret
mov
add
popf
and
enter
out
lds
xor
add
addb
sahf
xlat
cmp
fstpt
fiaddl
sbb
add
add
ret
and
aam
je
fmul
xor
out
dec
mov
fistps
add
cltd
lea
or
aaa
dec
sbb
jb
jno,pt
insb
xor
jge
add
sbb
adc
add
fdivp
hlt
outsl
xor
jno
shr
mov
adc
add
dec
outsl
inc
add
mov
cld
lds
xor
adc
mov
sub
add
or
std
rolb
sbb
mov
cs
or
mov
jno
xchg
fwait
adc
into
sbb
or
add
js
cli
and
push
les
push
sub
sub
scas
add
xchg
cmp
add
adc
jge
mov
mov
insb
cs
pop
clc
clc
push
pop
les
nop
jge
and
add
lahf
in
cmpsb
xchg
test
inc
add
cmc
sbb
push
mov
add
imul
pop
js
test
sbb
or
sbb
cli
jl
add
mov
les
popa
mov
xorl
pop
adc
add
push
mov
jle
cmp
dec
jns
jb
adc
lods
xchg
sbb
fcmovnbe
add
icebp
xor
mov
pushf
dec
scas
lcall
add
pop
sbb
mov
cmp
lret
test
mov
and
sub
mov
add
rsm
sbb
loope
into
dec
pushf
cmc
adc
out
dec
fxch
pop
lds
out
cmp
fcmovnbe
je
push
popa
inc
add
inc
test
jp
mov
pop
fnstsw
or
xor
je
pop
je
repz
in
mov
mov
stc
xchg
cld
or
ret
shll
xor
ljmp
add
mov
add
out
popa
pushf
cmc
bound
push
add
dec
pop
andl
into
es
addb
loop
lods
lcall
add
add
and
xchg
pop
mov
cmp
enter
shl
push
sbb
jb
push
and
in
lahf
into
adc
jle
xor
cli
add
adc
mov
or
inc
movsb
lret
push
sbb
push
add
push
lds
pop
out
add
lods
cltd
addr16
lret
lret
xor
mov
rolb
sub
sbb
pop
rol
add
add
and
fs
sbb
test
cmp
mov
cwtl
xor
fdivs
xchg
jmp
fcmovbe
popa
imulb
mov
add
push
arpl
push
fsts
lods
addr16
cmp
xchg
cltd
inc
add
xor
add
bound
push
cmp
sahf
leave
add
pop
jecxz
adc
mov
xchg
mov
add
pusha
add
aas
lsl
in
sbb
add
test
aad
imul
xor
xor
xor
sub
add
add
cmp
mov
fcom
cli
add
add
not
adc
jp
in
pop
out
pop
push
push
add
dec
dec
daa
les
std
xor
lcall
aas
cmp
lret
hlt
repnz
sub
sti
pop
dec
out
int
add
or
imul
in
mov
adc
mov
mov
or
xchg
jmp
sahf
rol
aas
orl
stc
jge
or
addb
mov
add
add
cmc
xchg
cmp
mov
repnz
mov
mov
sti
push
xor
repz
cmp
fstl
inc
xchg
pop
sarb
mov
std
jle
jns
add
lahf
xlat
insl
lds
into
add
inc
add
pop
and
xchg
leave
jp
addr16
outsl
inc
xchg
sub
cmp
add
mov
mov
xor
inc
sahf
ret
movsb
mov
ja
data16
mov
add
js
inc
add
xchg
push
xchg
cwtl
dec
sti
cli
xor
add
lods
lea
jno
out
or
jne
add
jle
addb
pusha
add
xor
sbb
fnstcw
gs
movsl
fstpt
push
jle
lods
adc
sbb
adc
sub
dec
xchg
inc
out
gs
add
ja
inc
add
loop
jmp
add
add
mov
push
sbb
jo
xor
test
insb
jns
popf
push
scas
aad
stos
fs
ret
mov
outsb
and
test
addb
sub
or
imul
add
add
shl
out
inc
lret
sti
sub
mov
js
xchg
mov
add
fucomip
push
je
pop
xchg
ud1
lret
pop
fucomip
addb
xor
and
pop
xor
adc
mov
fnsave
push
mov
fildl
clc
ljmp
cli
hlt
mov
sub
xor
jg
sbb
cmp
cmp
xlat
mov
jno
scas
mov
popa
movb
lahf
or
push
les
and
cwtl
aam
pop
cld
xchg
add
fwait
inc
add
repz
or
mov
das
pop
jns
push
call
pop
addr16
mov
loop
add
ljmp
sbb
sarl
adc
pop
cmpsl
pushf
dec
mov
pop
and
test
outsl
xor
mov
ss
shll
add
cmpsb
hlt
stos
movsl
mov
sub
adc
sub
data16
icebp
xor
je
dec
jmp
xlat
das
push
sbb
iret
push
add
jg
rolb
add
and
jb
add
ds
cltd
dec
stos
and
movsl
add
mov
jp
jmp
dec
icebp
sbb
movsl
rolb
and
push
icebp
scas
ret
mov
xor
std
aas
imul
dec
jbe
sbb
int
cmp
xor
mov
sub
push
jl
dec
add
add
adc
icebp
push
nop
popf
mov
data16
rcrb
pop
pop
pop
ja,pn
outsl
mov
add
in
movsb
or
addb
add
cmp
gs
in
fnstcw
pop
addb
inc
jge
xchg
adc
out
movb
jp
push
fcmovb
nop
aad
jle
test
ss
sub
imul
push
mov
mov
outsb
add
popf
ficomps
dec
subl
mov
mov
icebp
and
add
or
add
xchg
pop
shlb
xchg
pop
fisubl
insl
adc
push
xchg
call
pop
iret
cli
idiv
hlt
ss
inc
les
dec
es
add
in
mov
addb
popa
outsl
popf
mov
jp
mov
sub
add
test
psubsw
cmp
addb
mov
cltd
mov
and
inc
adc
mov
lcall
jle
int
sbb
dec
into
test
aas
jmp
xchg
call
iret
test
jl
cltd
or
aas
dec
mov
fistpll
fwait
lcall
inc
add
add
add
xchg
pop
sbb
inc
add
cmp
leave
mov
xor
xor
push
insl
mov
imul
xchg
je
icebp
cmpsb
stos
mov
nop
push
add
xchg
or
or
adcl
mov
xor
les
loopne
xchg
std
lock
fstpl
push
idivb
add
jl
and
lods
add
sub
dec
scas
js
and
inc
add
sbb
cmp
jmp
lret
aam
mov
pushf
aas
xchg
sbb
jl
push
xchg
xlat
inc
add
fisubl
and
xor
loopne
leave
jb
popf
sbb
lods
cmp
mov
or
add
mov
adc
pop
sbb
repz
xlat
push
adc
mov
in
mov
popa
xor
fldl
add
dec
sahf
dec
lret
scas
insb
ds
xor
dec
mov
int3
insl
cltd
sbb
pusha
add
fstpl
sbb
xor
xchg
pinsrw
adc
subl
pop
and
sub
mov
ret
out
sub
add
add
insb
push
idivl
mov
xchg
leave
dec
add
sbb
mov
and
mov
pusha
add
mov
or
mov
test
mov
out
pop
roll
movb
ds
adc
jmp
jle
or
dec
adc
cs
aaa
cs
scas
adc
mov
mov
insl
jmp
mov
adc
jmp
icebp
aam
aaa
outsl
inc
push
xor
mov
lods
mov
in
xor
addb
bound
push
sub
mov
in
mov
push
jp
push
shl
dec
shl
push
lcall
addb
icebp
outsl
jle
inc
inc
add
add
stos
or
mov
mov
mov
aaa
inc
add
mov
mov
stos
fbstp
stc
addl
lock
mov
repnz
enter
movsl
adc
jae
pop
xchg
leave
nop
adc
popa
push
dec
es
adc
xchg
hlt
adc
push
xor
mov
scas
mov
dec
sbb
add
lock
fiadds
aam
aam
push
pop
cli
xchg
xor
and
xor
sub
lea
test
mov
xchg
lcall
mov
invd
and
mov
or
xchg
pop
jno
sub
or
push
mov
add
inc
add
sbb
idivb
xor
cmp
imul
adc
xor
add
sbb
pop
or
push
adc
test
or
mov
popa
push
mov
xchg
add
adc
movb
rcr
or
arpl
mov
mov
xchg
xchg
enter
inc
add
adc
clc
clc
scas
repz
mov
aam
inc
add
decb
jge
stos
or
negb
loop
popf
bound
flds
jne
jmp
lcall
clc
xchg
push
add
add
gs
xchg
pop
adc
sahf
add
cmp
pushf
cmp
in
loopne
out
addr16
insl
mov
es
ret
add
jae
rolb
inc
mov
push
add
push
push
adc
add
mov
mov
ljmp
nop
jle
mov
sub
add
pop
addb
add
sub
and
lods
adc
addb
cmpsl
movsb
cmp
push
lds
call
pop
xchg
popa
xlat
adc
sbb
pop
out
dec
out
dec
jnp
dec
sbb
push
cmp
sub
mov
sahf
out
and
add
adc
push
mov
popf
mov
mov
faddl
add
nop
mov
xchg
rclb
ret
mov
jne
add
sti
scas
and
mov
sbb
mov
pop
bound
iret
rolb
add
adc
icebp
inc
add
adc
and
push
out
xchg
jmp
outsb
mov
or
and
rolb
stos
fcompl
push
imul
add
gs
std
xchg
fimull
mov
sub
lds
fs
push
add
pusha
add
lods
ret
sahf
pop
popl
dec
and
xor
jmp
cmp
aam
cs
push
xor
adc
dec
sbb
lahf
mov
mov
add
addb
int3
cmpsb
push
pop
out
cmp
fisttpll
inc
negl
adc
fcos
cli
xor
mov
stos
aaa
dec
fistpll
mov
cmp
add
add
pop
xchg
in
imul
inc
add
ljmp
push
mov
xor
pop
cmpsb
mov
add
mov
bound
inc
add
sub
or
jle
mov
idivl
dec
lret
inc
add
xchg
jle
je
add
test
jns
lahf
scas
ljmp
repz
insl
addb
cmp
jmp
in
sti
std
out
cmp
insw
sahf
cwtl
mov
add
pop
add
and
movb
dec
lcall
xchg
fwait
shll
xor
ds
mov
cld
dec
pop
jno
or
inc
movb
mov
pop
lds
loopne
dec
lahf
mov
jp
enter
sbbl
movb
xlat
mov
pop
pop
and
or
cmc
jg
xor
push
arpl
aas
jge
xchg
sbb
mov
push
stos
insb
cli
cmpsb
fs
ss
cmp
in
jae
cs
adc
xchg
cltd
loop
dec
aas
shl
bound
cmp
movsb
mov
xor
pushf
jnp
add
nop
das
dec
fcmovne
or
sbb
add
push
fcoms
in
and
adc
aad
in
push
aad
mov
cmp
sub
push
clc
xchg
or
add
xor
jl
lods
pop
push
std
jns
xchg
lret
lcall
mov
dec
adc
xlat
in
test
insl
insb
mov
jbe
cmp
cmp
jae
mov
addb
sbb
mov
fnstsw
or
test
jp
push
cmpsl
jg
movsb
ror
mov
sub
dec
lret
movsl
or
mov
andl
jbe
outsl
add
mov
pop
xchg
imull
scas
imul
ljmp
fs
mov
mov
nop/reserved
or
dec
pop
inc
add
mov
sti
dec
imul
jge
add
jns
cmp
xor
cmpsl
adc
test
pop
dec
and
adc
ret
mov
pop
lods
rclb
add
shrb
pop
rolb
jecxz
jne
mov
addb
mov
xchg
bound
in
or
in
sbbl
add
mov
mov
mov
dec
jno
add
xchg
das
jae
ds
or
or
push
test
or
cmpsb
adc
loopne
mov
iret
xor
dec
dec
std
jle
dec
sbb
jb
sub
movsl
and
cmpsb
clc
push
sti
sub
xchg
and
inc
sbb
and
aad
add
mov
ret
lcall
repz
repnz
lahf
jno
add
loope
imul
bound
xchg
in
cmpsl
les
mov
push
nop
in
mov
push
jle
sbb
fistpll
add
add
jne
ret
and
mov
jo
fidivrl
fsubp
jp
scas
test
movsl
bound
int3
sti
test
gs
movsb
or
aam
test
stos
addb
fwait
xchg
in
adc
js
movl
mov
icebp
gs
iret
in
add
lods
pushf
in
mov
add
pushf
outsl
dec
jge
scas
ret
and
fimuls
add
or
mov
movsb
mov
stc
push
int3
cwtl
pop
jae
aam
mov
push
ja
sbb
rclb
in
scas
add
in
and
lods
push
jae
add
lock
ljmp
iret
sarb
lahf
and
pop
sub
dec
pushf
out
test
rolb
aad
sbb
dec
sahf
rolb
xor
sub
or
inc
add
movb
js
jo,pn
outsb
jno
xor
xor
xchg
or
fcmovbe
xlat
into
shr
inc
insl
imul
adc
and
add
push
arpl
mov
jne
leave
sar
dec
push
stos
out
xchg
pusha
add
sub
aam
mov
fistpll
test
sub
pop
mov
inc
add
add
dec
add
adc
pop
stos
aaa
ja
int3
into
adc
scas
outsl
adc
les
movsb
lcall
sub
adc
lds
and
pop
add
xor
sbb
inc
add
push
jo
rolb
std
cmc
mov
add
pop
fistpl
inc
add
mov
jmp
and
test
xchg
lahf
into
and
dec
xor
or
jno
test
add
cli
xlat
and
dec
or
mov
lea
lret
shll
pop
xchg
pop
js
jg
add
and
leave
jge
hlt
data16
call
mov
inc
rcrb
mov
rolb
sub
pusha
add
out
repz
pop
push
add
push
or
bound
je
push
mov
incb
add
add
xchg
aad
add
cltd
int
inc
sbb
jbe
loopne
sbb
sbb
mov
pop
setns
movb
movb
mov
dec
jbe
mov
and
pop
xlat
add
es
jne
xchg
into
push
aaa
or
xchg
pop
popa
and
negb
push
aam
rolb
add
shlb
mov
dec
mov
call
xchg
push
icebp
imul
ret
lcall
and
add
and
jb
push
cmp
mov
or
xchg
fiadds
add
add
push
aad
add
cld
test
or
inc
mov
js
addb
xchg
jb
jb
insb
pop
ficoms
mov
insb
sarb
mov
dec
hlt
ss
test
pop
lock
call
rolb
mov
add
call
stos
inc
je
outsb
lock
add
mov
pop
shll
add
fwait
lods
sub
dec
pop
lahf
out
xchg
movsl
cmp
int
stc
cmpl
sub
test
divl
popa
and
fiaddl
jb
out
mov
inc
add
cmc
mov
mov
and
pop
cs
shrl
mov
mov
add
push
aaa
shll
std
pop
mov
std
jnp
xor
ret
sbb
mov
in
push
aas
addb
test
adc
add
cltd
cs
jb
dec
stos
popa
and
test
xorl
lret
pusha
add
lret
xor
inc
add
xor
xchg
sbb
bound
mov
ljmp
js
aad
lahf
pop
jecxz
add
xchg
test
mov
inc
lods
lds
lcall
out
push
add
jno
add
mov
dec
add
push
lods
movl
add
or
lcall
pop
lretw
adc
in
mov
adc
add
je
mov
pop
xchg
sub
fstps
stc
into
inc
ja
lock
jmp
push
ljmp
inc
negb
push
mov
push
out
int3
repnz
adc
jne
std
xchg
cmc
xlat
idiv
les
ja
jmp
mov
sahf
cmp
pop
int
pop
xchg
push
cld
xchg
movsb
mov
jle
add
bound
repnz
or
loopne
inc
nop
inc
inc
movsl
les
in
pop
xor
sub
dec
push
add
jecxz
or
insb
inc
pop
add
jb
test
and
sbbl
movb
ret
movsb
cmp
jge
in
rclb
fsubrl
into
dec
in
or
adc
add
das
inc
add
shlb
xchg
test
inc
adc
movsl
xor
jnp
int
mov
add
movsl
shll
mov
or
jge
mov
inc
add
inc
add
push
repnz
into
outsl
cli
orl
shl
fsubl
add
xor
aas
adc
ja
loopne
xchg
cmc
stc
sbb
push
test
mov
test
push
add
ret
dec
fwait
hlt
adc
pop
mov
add
jno
clc
lods
lods
call
int3
movsb
jns
add
cld
aad
sbb
push
xor
mov
xlat
add
cli
ljmp
jl
mov
test
pop
lret
daa
imull
iret
dec
xchg
arpl
pop
add
popf
aaa
fiaddl
test
pop
push
pop
pop
loop
outsl
adc
testb
repz
cmpsl
adc
cmp
and
fwait
or
aas
adc
lods
arpl
xchg
sub
lea
mov
ljmp
aas
dec
jns
icebp
mov
jle
push
and
cli
xchg
ret
xor
jae,pn
xor
rcll
mov
add
xchg
pusha
add
stc
jne
les
aam
fsts
jl
or
outsb
dec
fiadds
add
push
fldl
push
add
fldenv
add
js
out
cmpsl
cs
cmp
mov
add
add
mov
and
add
fmul
and
jno
mov
add
dec
inc
add
mov
fistl
testb
pop
mov
pmaxub
stos
sbb
pop
pop
std
adc
bound
inc
xor
add
addb
inc
xchg
sahf
mov
xor
push
fnstcw
icebp
xchg
add
dec
jp
out
dec
movsb
jl
in
in
in
push
negb
jp
dec
rolb
jnp
mov
xlat
sub
xlat
mov
jno
mov
arpl
adc
out
stc
and
dec
inc
add
mov
add
jae
pop
repnz
rdpmc
pop
rcrl
dec
imul
add
call
or
cltd
lock
cmpl
or
lock
lds
daa
jae
repnz
and
ficoms
das
inc
add
out
mov
cmp
addb
cs
add
cmc
pop
and
sub
push
mov
fildll
dec
xor
int3
out
mov
adc
popa
and
loopne
incb
sbbl
xchg
xchg
mov
pop
fistps
scas
insb
cmp
loop
xrelease
sbb
pop
imul
cmp
jo
leave
inc
add
jno
xor
fnstenv
hlt
jle
add
add
fwait
subl
leave
shl
push
fwait
les
call
loopne
cmp
push
add
movsb
and
iret
and
add
xor
add
inc
add
or
and
lock
xchg
rcll
push
imul
pop
or
mov
mov
ret
icebp
xor
sbb
push
out
lahf
cwtl
mov
out
stos
inc
add
fcomps
dec
sbb
std
mov
in
hlt
cltd
jp
into
pop
out
xchg
lahf
jo
stc
stc
dec
add
mov
xchg
cltd
int
jmp
scas
enter
mov
loope
loop
mov
mov
add
sbb
adc
stos
gs
mov
in
pop
mov
fld
pop
jg
jmp
pop
pop
mov
push
xor
loope
add
in
icebp
inc
sbb
or
mov
subl
add
pop
cmpsl
inc
add
rolb
out
test
dec
or
cmpsl
cmp
in
gs
loopne
in
cmp
xor
lods
sub
insl
sbb
cmp
sahf
fldl
stos
push
add
aas
mov
xor
push
add
add
push
add
movb
xchg
sub
xchg
push
clc
adc
xchg
repnz
xor
repz
in
sub
fisubl
xchg
lods
jo
out
stc
into
jl
mov
jo
aaa
jne
gs
and
movsb
and
gs
add
je
out
dec
stc
xchg
xlat
mov
jge
add
add
mov
aaa
push
sbb
in
lds
mov
add
lahf
or
ret
mov
mov
repz
aas
testb
xor
mov
pop
ficomps
and
mov
push
das
push
icebp
adc
outsl
jp
movsb
pop
dec
testl
mov
add
cmp
iret
scas
cmpsb
jb
jg
xchg
aas
mov
ficompl
xchg
sub
negl
pushf
lret
test
fistps
out
mov
ljmp
mov
jmp
inc
push
xchg
pop
cmp
popf
rep
mov
int3
mov
mov
or
inc
cmp
outsb
bound
mov
mov
cmp
int3
push
in
pop
shrb
push
popa
xchg
mov
jge
dec
inc
sbb
add
cmp
int3
sbb
imul
pusha
add
lods
and
fiadds
mov
pop
mov
ret
xchg
sbb
adc
scas
pop
mov
les
cmpsl
cmp
fisttpll
xlat
adc
jne
sti
inc
add
call
and
mov
mov
sub
fwait
shll
aas
sub
xchg
push
cld
repnz
inc
lret
pop
cmp
lahf
sub
jle
aaa
in
shrb
cmpsb
pop
cmp
es
mov
xchg
rolb
add
mov
fld
add
clc
movb
add
pop
xor
adc
out
mov
sbb
mov
mul
xchg
cs
add
movb
out
adc
mov
xchg
fwait
js
cmc
leave
or
imul
aaa
mov
cmp
pusha
add
pushf
xor
fldenv
push
leave
es
adc
aad
jle
add
imul
cmp
mov
push
push
aas
fistpl
push
rorl
pop
cld
push
push
andl
in
leave
fsubr
dec
aam
jne
aaa
inc
add
hlt
aaa
sbb
mov
xor
shlb
add
notl
std
loope
jp
cmp
fs
pop
jle
movsb
inc
add
and
divb
add
loope
add
fnstsw
sbb
ret
nop
ljmp
fldenv
xor
ds
add
mov
mov
imul
add
lret
pop
divl
lahf
in
out
mov
mov
inc
add
aad
dec
push
cwtl
xchg
inc
add
aas
push
popa
xchg
inc
add
pop
xchg
cmp
lret
leave
cmp
pop
cmpsl
sbb
push
add
lea
pushf
mov
xchg
fmul
jmp
cli
bound
dec
push
rorb
rcrl
test
pop
jge
les
data16
mov
lods
push
sbb
ds
add
jo
adc
fldt
lret
dec
aas
mov
push
dec
data16
jle
cmpsb
jmp
outsl
mov
cld
xchg
in
jmp
sub
scas
sub
cli
fiaddl
mov
into
mov
out
rolb
push
adc
out
add
je
xchg
inc
add
ja
shll
ficompl
fstpt
outsl
negb
jno
sbb
rcl
jne
add
aas
cltd
or
adc
add
mov
mov
mov
adc
lret
sbb
movsb
inc
add
pop
ljmp
lods
xor
imul
movb
cmc
mov
pop
outsb
scas
sub
into
adc
mov
and
addr16
sbb
lea
in
push
jns
aaa
cmpsl
js
add
rcrb
push
add
mov
repz
pop
push
sbb
addb
lahf
fadd
mov
mov
mov
in
jnp
fildll
test
popf
pushf
sbb
mov
pop
lds
pop
ja
lret
and
mov
sbb
popa
imul
inc
pop
mov
push
adc
sub
cmpsb
fwait
adc
fldt
subl
dec
or
mov
in
jb
daa
test
mov
push
pop
mov
dec
cld
aaa
and
call
mov
sub
xchg
stos
movsb
arpl
and
lock
xlat
pop
xchg
stos
mov
mov
aam
fisubrl
pop
insl
xchg
lcall
cmovle
daa
outsb
pop
mov
aaa
mov
in
cmp
cmc
xor
pusha
add
ljmp
add
inc
fdivrp
int3
push
jne
xchg
outsl
mov
cmc
addb
or
mov
insl
xchg
loopne
pop
add
jecxz
in
mov
xchg
stos
xchg
outsb
fildl
add
mov
lea
mov
sub
push
inc
in
jge
stos
lret
test
push
sub
push
lock
pop
dec
addb
lods
loope
xchg
dec
shlb
or
repz
out
addb
mov
mov
and
movsl
xlat
fsub
xchg
mov
cs
or
into
in
arpl
push
les
mov
mov
dec
fcmovnb
add
lods
les
addr16
or
aas
xchg
mov
add
add
into
xor
jns
xchg
sub
outsb
imul
add
out
mov
add
adc
mov
pop
or
push
push
add
add
cmp
icebp
add
addb
add
dec
jbe
pop
stos
or
inc
add
xchg
sub
cwtl
pushl
sub
sbb
adc
lds
gs
push
or
loop
repnz
fs
rolb
jle
frstor
data16
insb
stos
sbb
push
push
push
jp
into
cs
dec
sub
into
stos
lods
push
cmp
comiss
xor
jbe
mov
fdivrs
sbb
sbb
push
add
jp
add
push
outsl
fdivl
insb
outsb
dec
dec
cmp
add
pusha
add
fs
out
dec
jae
cwtl
inc
add
push
add
or
icebp
sarl
sub
addb
pop
cmpsl
movsb
pop
andl
les
mov
outsb
into
add
adc
outsb
cmpsl
aaa
cmc
test
ds
fdiv
jp
fwait
jge
sub
divb
add
pop
rorb
lea
add
cwtl
mov
out
cmp
jmp
cltd
mov
mov
sub
mov
dec
cmp
std
push
xchg
cmp
sbb
data16
loope
mov
or
in
xor
or
insb
movsb
or
add
movsl
cs
add
mov
dec
or
ss
insb
popw
out
mov
inc
add
pop
mov
sub
in
jnp
scas
sbb
jle
aas
arpl
out
jae
into
inc
add
inc
daa
ss
ficoms
xor
pop
in
inc
add
mov
pop
test
ret
rorl
aas
add
popa
fdivs
sub
cltd
sti
in
cmpsb
inc
insb
in
popf
inc
add
sub
push
inc
add
loopne
sub
and
add
or
pushf
lods
imul
xchg
push
pop
add
or
sbb
lret
adc
lcall
sub
imul
mov
mov
mov
xchg
pop
fs
cmp
lock
add
lcall
push
ficoms
add
jg
clc
sbb
or
sbb
and
sti
inc
fs
pop
mov
xor
lods
mov
pop
inc
add
sti
mov
push
xor
aam
adc
jg
push
xor
sub
test
lret
js
pop
push
push
add
jno
and
adc
addb
std
lret
rolb
std
imul
xchg
adc
movb
xchg
arpl
lcall
fildll
push
adc
mov
or
mov
test
sbb
shlb
add
dec
xchg
lahf
dec
ret
sti
dec
stos
mov
or
mov
xchg
icebp
xchg
fdivl
icebp
testl
addb
jbe
mov
add
das
jg
fcompl
in
xchg
ds
testl
pop
pop
mov
shrl
pop
push
rorl
inc
js
addb
lcall
pop
add
sbb
andl
rolb
push
push
pop
jmp
pop
sbb
inc
add
or
in
fsubp
mov
add
enter
fwait
shrb
jecxz
loop
movb
mov
push
rcrl
sub
jne
daa
dec
lret
popf
cmp
lret
sbb
mov
or
dec
shrb
sbb
ljmp
sub
sbb
insb
adc
lods
addb
out
notl
sbb
adc
cmp
add
fdivl
sub
mov
add
pop
push
je
int
rorb
sarb
pop
icebp
out
add
test
loopne
pop
mov
jge
outsb
xchg
stos
call
xchg
inc
add
add
fcom
out
rcrb
inc
popf
ljmp
pop
jmp
mov
inc
xchg
adc
in
or
add
cmp
sti
sub
and
pop
cmp
jge
add
jecxz
mov
sbb
fildll
repnz
sub
pop
xor
fwait
cwtl
inc
test
lret
cwtl
repnz
ds
cmp
aad
fs
test
add
addb
jb
adc
jl
inc
xchg
enter
jp
adc
mov
pop
mov
adc
add
test
or
add
pop
pop
shll
add
addb
daa
nop
and
xor
adc
cmc
popa
arpl
outsl
gs
ja
and
cmpsl
mulb
jbe
mov
jg
rolb
pop
mov
and
jb
jns
addl
add
mov
sbb
enter
sbb
cmp
cmp
ja
dec
lds
frstor
xchg
scas
pop
subl
xchg
sti
loopne
inc
add
push
add
xchg
push
rcl
xchg
mov
daa
xchg
addr16
insl
movsb
fildll
data16
push
push
mov
push
add
pop
cmp
jp
out
lods
and
in
add
mov
dec
push
mov
sbb
add
das
fs
mov
lret
mov
out
or
std
or
add
rolb
movsl
test
push
lods
movsb
pop
xchg
ret
ja
loop
mov
push
inc
push
inc
sub
mov
sahf
and
pushl
push
repnz
cmc
sub
dec
movsb
aad
dec
shll
sub
xchg
mov
addb
pop
fcompl
add
ss
cmpsl
cmpsb
add
push
cmpsb
sub
cmc
popl
lret
adc
int
data16
xor
lock
add
stos
mov
fs
xchg
ret
rolb
add
ss
and
sbb
cmp
xchg
sub
clc
or
jne
fistps
outsl
jp
repz
sub
push
addb
ljmp
imul
int3
jecxz
inc
movsb
call
cmpsb
and
mov
inc
aas
pop
cmp
push
sub
push
pop
sub
pushf
mov
sub
addb
xor
pushf
jge
lds
sarb
bound
xor
cmc
inc
inc
add
cmp
pop
rolb
bound
ja
ds
ret
jge
sbb
mov
out
scas
outsb
cli
add
sub
adc
add
fdivrl
cli
pop
jmp
dec
imul
push
aas
mov
int3
shl
ds
xchg
cmp
popa
or
daa
movb
mov
jle
out
add
sub
sub
sbb
jbe
adc
shll
js
pop
push
mov
pop
insl
push
faddl
cmp
mov
aam
and
hlt
push
test
lea
dec
cmp
adc
add
inc
add
arpl
fistpl
cmpsb
and
xlat
cmp
add
rcl
test
cmc
pop
push
add
dec
and
or
cltd
in
mov
adc
je
add
pop
ffree
add
in
das
jns
sub
dec
cmp
xchg
xchg
xchg
test
xor
addb
loopne
mov
mov
adc
mov
fcoms
ljmp
mov
mov
add
xchg
data16
jbe
repnz
sbb
add
fsubs
jbe
push
jno
outsb
push
lods
mov
lcall
inc
add
jmp
hlt
insl
dec
adc
test
add
add
pop
test
add
cmpsb
pusha
add
jns
jbe
jb
add
icebp
sbb
add
mov
je
mov
aas
int
lret
addb
jp
add
addb
rcll
push
pop
aas
mov
scas
mov
pop
xchg
jg
add
sbb
jge
push
push
jb,pt
ficoms
jo
out
push
lret
popf
mov
push
mov
add
sub
add
loopne
jecxz
add
out
int
mov
push
cwtl
fbld
sub
bound
shlb
xor
sub
add
ror
inc
pop
rcll
cli
mov
divl
push
addb
xor
rcl
xchg
jge
enter
jecxz
sub
xor
int
ret
jp
add
out
xchg
fiadds
mov
test
iret
add
inc
add
fnstcw
add
bound
jmp
dec
pushf
push
lods
xchg
fldenv
and
adc
push
movsl
cmpsb
inc
icebp
adc
cmp
lds
push
enter
adc
jnp
add
adc
mov
pop
fimuls
adcl
rolb
out
xor
add
add
xchg
jg
int
mov
mov
lret
pop
xchg
sub
mov
lds
imul
add
or
ds
cmpsb
hlt
and
add
jp
cli
fbld
add
push
mov
lds
sub
or
aam
imul
add
lcall
fcmovnbe
imull
jecxz
jle
fcmovbe
mov
or
popf
mov
add
add
add
add
mov
and
sarl
xchg
repnz
std
sbb
xor
ljmp
movsl
pushf
push
push
add
add
xchg
xor
jmp
add
cld
xchg
jns
test
out
rcrl
mov
mov
mov
adcl
add
clc
inc
add
xor
ja
xchg
cmpsb
ret
sub
sahf
gs
xor
pop
mov
push
test
inc
xchg
iret
mov
or
out
out
dec
nop
fbld
inc
add
add
repnz
testb
add
repnz
sub
xchg
or
scas
addb
add
jo
push
cmpsb
bnd
cmpsl
into
cmp
add
add
pop
mov
xchg
mov
sub
cmpsb
test
loope
pop
add
add
push
xchg
test
loope
jl
add
adc
dec
adc
adc
cmpl
repz
sti
call
out
stc
jmp
pop
dec
mov
sahf
fcompl
into
jle
ljmp
mov
push
dec
popa
std
icebp
inc
add
nop
push
in
sub
push
mov
cltd
data16
inc
add
push
sbb
mov
inc
daa
pop
xor
icebp
repz
mov
or
sbb
movsl
dec
adc
add
repz
hlt
sbb
add
jg
ror
stc
addb
rorb
ja
pop
repz
addr16
xor
leave
mov
mov
xchg
push
mov
mov
daa
scas
pop
popf
xor
mov
lret
sbb
frstor
leave
ret
push
sbb
into
fisubrs
sbb
mov
and
ret
add
or
pop
bound
loop
push
pusha
add
dec
in
ficompl
bound
dec
or
pop
and
pop
shll
jge
push
stos
dec
push
in
mov
into
inc
int
rcr
push
fldenv
pop
les
push
jle
add
dec
add
leave
ficompl
push
mov
sti
pop
fcmovbe
movsb
inc
add
xchg
fldt
jb
push
insb
mov
pop
pop
test
enter
mov
or
dec
fsubl
lea
adc
je
aaa
fdivrl
js
xchg
je
movq
xchg
jp
pop
sbb
add
add
roll
add
jl
sarl
xchg
dec
pop
xor
mov
sub
push
push
rolb
int3
dec
push
cld
sub
and
scas
mov
lret
popf
mov
mov
add
sar
dec
mov
sub
repnz
sbb
adc
and
out
cmc
add
lret
hlt
test
jp
and
sub
adc
push
mov
stc
add
add
add
push
add
cltd
and
out
and
jp
in
or
aas
les
or
repz
jecxz
lcall
fstps
and
mov
add
pop
in
lcall
push
jb
insl
aas
pop
cmp
xchg
jne
data16
fmuls
cmp
notb
addl
clc
clc
imul
cmp
add
inc
sub
filds
jle
imul
movsl
loop
btc
cmpsb
shlb
push
hlt
mov
push
pop
mov
repz
fisttps
frstor
dec
lret
mov
scas
int
test
add
iret
push
insb
mov
add
clc
adc
addl
in
xor
ja
pop
enterw
aad
adc
int
pop
mov
mov
xchg
scas
jns
test
imul
mov
fldcw
sbb
sbb
test
or
mov
xchg
mov
add
cmp
test
dec
sub
cmpsl
lcall
add
out
test
xchg
psrlq
and
push
dec
fcoms
sub
push
add
add
mov
mov
lock
cltd
cli
mov
adc
scas
lcall
push
mov
dec
je
mov
notl
and
jge
add
pop
lods
aad
ja
hlt
fs
sbb
cmp
add
aam
rolb
imul
data16
icebp
out
add
data16
and
int
inc
dec
fs
inc
add
jo
inc
add
and
pop
push
ftst
shll
add
aas
xchg
mov
mov
arpl
pop
mov
mov
lahf
or
push
or
dec
push
xchg
jle
subl
sub
push
data16
sbb
jns
gs
xchg
bound
add
das
fdecstp
add
add
adc
jnp
int
inc
test
xor
stc
int
push
imul
movsl
cmovo
stc
push
mov
sub
or
es
ret
fdivp
mov
sbb
xorl
cmpsb
xchg
test
push
push
jp
cmpsl
outsl
xchg
fiaddl
test
add
and
add
arpl
scas
jb
cmp
sahf
jae
test
leave
test
pop
shrb
sbb
xor
frstor
adc
push
loope
sahf
fldl
and
cli
adc
and
stos
inc
add
adc
ret
jg
push
cmp
or
jp
fdivr
mov
add
push
adc
xchg
mov
xor
out
add
mov
lret
jno
add
bnd
mov
xchg
mov
xchg
sub
jo
addb
add
mov
xor
pop
pushf
addb
add
pushf
mulb
xor
je
dec
cli
stos
mov
add
jge
push
cmpsb
adc
mov
xchg
popa
dec
mov
mov
sub
movsl
push
add
add
inc
add
xchg
test
xor
cmp
mov
sub
stc
push
mov
dec
imul
fstpl
inc
add
scas
push
out
cmpsl
pop
jecxz
enter
ret
rol
jg
addb
jmp
imul
js
adc
sub
mov
xor
sbb
in
add
xor
lret
test
inc
mov
inc
add
mov
lcall
sub
jns
lahf
mov
and
stos
pusha
add
xor
clc
das
fisttps
ficompl
addr16
or
daa
lock
nop
mov
loop
mov
dec
jo
xchg
jle
sti
cs
ret
sarl
out
sahf
xor
mov
mov
pop
pop
jp
cmp
repz
jl
sub
lret
icebp
mov
mov
push
sbb
sbb
xor
ret
pop
add
and
mov
add
mov
imul
jbe
ljmp
out
sti
fdivr
movb
dec
xor
add
into
mov
xchg
sbb
fldenv
enter
sbb
inc
lock
adc
leave
sarb
jno
cmp
addb
jb
push
movsb
inc
add
push
xor
cmp
xchg
dec
push
and
mov
adc
add
xor
add
mov
addb
ret
adc
bound
movsb
out
fimull
or
jl
sahf
rclb
cmpsb
nop
push
mov
mov
insb
dec
mov
mov
mov
ds
lret
sub
popa
sub
movsl
dec
mov
cmp
sbbl
jge
pop
pop
idivl
loope
into
lods
xchg
shlb
xchg
jno
and
rcr
imul
add
std
movsl
and
add
addr16
lret
call
pop
ds
or
shl
mov
xchg
or
test
jae
mov
cmpsb
les
mov
rclb
add
push
jbe
sbb
and
push
addb
pop
pusha
add
ja
or
loope
pop
xchg
mov
jne
rcl
cmp
enter
and
rolb
rcrb
inc
and
add
lahf
add
cmp
stc
jecxz
add
xor
pop
adc
loopne
les
inc
add
out
mov
imul
cwtl
sti
push
pusha
add
pop
or
jle
stc
mov
out
sbb
rorb
pop
jmp
outsb
dec
fs
xor
in
sahf
movsl
rolb
adc
mov
inc
add
pop
out
andps
add
out
mov
mov
sub
std
adc
call
push
push
inc
add
popa
jp
jecxz
test
pop
fs
fwait
xchg
push
xchg
iret
or
jns
cmp
flds
xor
pop
insb
stos
inc
and
sub
sbb
or
cmp
push
mov
icebp
and
arpl
movsl
push
pop
pop
sub
pop
fcomip
push
cmp
scas
pop
push
xor
xor
xor
or
leave
out
arpl
add
movb
add
enter
and
mov
mov
cltd
int3
xchg
call
out
jns
cs
xor
mov
sahf
adc
add
rcl
push
inc
jne
aam
movb
inc
add
mov
pop
sub
cmc
push
jp
jl
sub
mov
xlat
dec
pop
jne
mov
cld
inc
cmp
jne
inc
cmp
ljmp
pop
push
add
es
or
sti
in
jp
pop
push
cmp
jge
nop
in
mov
or
pop
addb
push
pushf
jmp
xor
xchg
xchg
jae
dec
push
decl
shrb
jno
jb
inc
add
popa
cmp
bnd
addb
xlat
int3
pop
cmp
pop
test
movsl
xor
icebp
fwait
or
inc
inc
add
pop
pusha
add
lret
fisubs
sbb
dec
push
mov
xor
xchg
into
dec
xor
or
adc
jnp,pn
add
adc
adc
pop
xchg
in
xchg
fists
std
fildll
push
mov
add
mov
add
ret
cmp
add
imul
inc
pop
addr16
pop
xlat
clc
add
pop
lahf
add
pop
imul
push
fimull
or
mov
add
xchg
xchg
push
les
xchg
out
aam
and
stos
dec
movsb
sub
fsubrs
inc
pop
mull
fwait
aaa
stos
insb
cmp
xor
jo
pop
mov
xlat
add
mov
mov
nop
cltd
and
aas
testb
sti
popa
add
cmp
push
cld
inc
add
int3
jae
mov
lods
mov
xchg
repz
les
cmpsl
out
mov
ret
dec
add
cmp
cs
push
pop
dec
lea
daa
and
pop
xor
xchg
sub
dec
xchg
adc
xor
daa
xchg
and
andl
fistpll
ss
add
pop
lahf
mov
mov
ja
mov
add
xor
es
cmpl
xor
add
mov
dec
les
fisttpl
cmova
jp
call
push
lahf
std
dec
mov
dec
pop
outsb
mov
cli
pop
lret
or
cmpsl
or
into
pop
push
std
jg
add
mov
movl
inc
add
add
scas
sarb
cmp
pop
hlt
pop
jns
dec
push
lea
jp
add
scas
add
out
ja
addr16
jno
clc
movsl
nop
jp
mov
repz
add
add
fbstp
fldenv
imul
pop
mov
fs
and
adc
fnstenv
call
or
push
out
add
and
stos
loopne
jae
aad
daa
or
mov
loopne
repz
and
fistps
jne
ljmp
addb
std
and
mov
test
xor
pushf
mov
push
addb
pop
sbb
fcmovu
fbstp
sbb
sbb
ret
add
jbe
lret
mov
lods
mov
je
add
add
hlt
pop
leave
or
nop
xchg
xor
jae
into
pop
push
xchg
sbb
add
pop
sbb
movsl
ss
ret
xchg
mov
jb
fistl
lret
or
movsb
or
xchg
mov
and
add
mov
out
xlat
repz
mov
add
add
sbb
push
cmp
test
in
xor
and
push
mov
sbb
jecxz
mov
into
fistpl
std
dec
jb
jb
adc
xchg
jl
inc
add
pop
jne
nop
adc
outsl
or
rorl
in
shll
and
or
mov
jno
cmpsl
jbe
add
add
add
mov
mov
sbb
lahf
push
test
iret
pop
sbb
ja
clc
xchg
aad
xchg
leave
fs
jbe
scas
pop
aas
int
xor
mov
sub
sbb
add
mov
sub
js
add
or
rolb
jae
add
movsl
push
lods
pop
mov
xor
fcoml
out
loop
mov
mov
lret
movsb
xchg
test
sbb
cmp
ret
ss
sbb
or
xor
or
or
jmp
jne
add
add
jecxz
divl
cmp
sub
cld
pop
mov
mov
and
aas
call
add
cmp
lret
sbb
fisttpl
push
push
outsb
out
stc
inc
jno
call
add
pop
mov
add
xchg
pop
or
pusha
add
fistl
and
adc
loop
rorb
add
jmp
add
add
das
sti
sahf
mov
xor
or
fnstsw
pop
inc
xchg
lock
out
rolw
or
ret
frstor
add
sub
mov
mov
inc
fwait
ds
mov
push
test
jno
test
ja
jne
lods
fscale
sub
pop
addb
push
scas
xchg
call
mov
cmc
sub
push
add
add
mov
aas
lcall
jae
inc
add
xlat
adc
xor
enter
sub
fs
idivb
add
stos
jns
je
add
inc
add
add
fstps
dec
fadd
add
or
pop
cmp
xchg
sub
add
in
add
push
xchg
push
sub
addb
xchg
mov
xchg
mov
rcrb
add
and
pop
sub
addb
addr16
push
sub
and
inc
movsl
ja
xchg
ret
mov
dec
pop
ficompl
ds
jno
movsl
and
lahf
adc
icebp
push
inc
rcrb
inc
xchg
push
int3
cli
addr16
fsubrs
and
pop
hlt
jno
mov
sbb
fstpt
mov
mov
es
ficoml
in
xchg
mov
push
lret
cmp
add
mov
leave
dec
mov
add
inc
add
scas
dec
imul
add
or
jbe
pop
sub
dec
sbb
xchg
inc
add
xor
int3
push
dec
and
push
mov
call
lea
outsb
xor
je
sub
fisttps
push
test
inc
fidivs
nopl
xor
mov
frndint
lret
fildll
rolb
sbb
ss
add
and
add
ret
dec
into
push
repnz
popa
stos
push
cwtl
or
arpl
daa
imulb
jecxz
out
sahf
sbbl
pop
add
pop
ljmp
adc
rolb
fsub
shll
push
lcall
add
das
sub
sbb
jo
insb
out
data16
shll
sbb
mov
sub
xchg
push
xchg
mov
add
push
test
mov
stc
icebp
fistps
or
adc
xchg
jmp
add
add
sbb
outsl
sbb
push
movsb
pop
mov
sbb
xchg
sbb
cmp
gs
icebp
stos
popf
fisubl
lock
fldt
cmp
and
mov
in
test
mov
push
adc
mov
mov
mov
rolb
cmp
add
add
frstor
mov
mov
add
sbb
inc
add
dec
xchg
or
scas
xchg
or
jg
add
cmp
pop
fs
jno
push
mov
or
in
int
add
pop
cmc
pop
dec
add
es
and
mov
orl
mov
sbb
xor
outsb
aaa
xchg
sub
addr16
cmp
lcall
jge
hlt
jmp
arpl
bswap
pop
ljmp
mov
sbb
xor
xchg
sub
test
nop
in
push
in
loopne
ds
pop
ficompl
int3
mov
aad
or
and
or
and
pop
xchg
pop
mov
je
arpl
lea
xchg
nop
ds
add
xor
repz
notb
pusha
add
pop
or
sbb
lods
shlb
mul
test
pop
iret
pop
mov
mov
push
lods
mov
lret
mov
mov
pop
int
and
push
inc
add
sbb
inc
add
mov
and
add
add
mov
add
and
aas
adc
movl
push
jne
fnstcw
movsb
lods
mov
dec
imul
in
fisubs
cmp
jne
push
push
add
add
mov
push
std
dec
outsl
fbstp
scas
pop
ljmp
dec
ljmp
aam
das
neg
sti
cld
xor
xor
sahf
jle
pop
imul
scas
mov
imul
pushf
lret
cwtl
fstps
pop
jne
dec
inc
sub
rolb
movsl
add
pop
pop
add
fisttpll
sti
sbb
sbb
add
and
add
call
cltd
out
dec
fnstcw
js
ss
enter
pop
jb
lcall
sti
push
sti
adc
bound
or
outsb
fisubs
add
fisttpll
ja
dec
movb
xor
movb
add
mov
add
sbb
add
stc
or
sbb
enter
sub
jecxz
jle
sub
pop
push
sub
lock
jbe
cld
adc
adc
cmp
jno
cmp
call
jle
fucomp
mov
nop
mov
addb
dec
mov
push
add
hlt
sbb
pop
outsb
testl
scas
jmp
xor
daa
pop
scas
lea
test
popf
mov
adc
jne
cmpl
jne
dec
je
mov
inc
push
fidivrl
js
imul
add
sub
cmp
popf
xchg
test
adc
pop
mov
shrb
outsb
test
and
add
inc
lock
jl
add
add
mov
lahf
repnz
push
add
daa
js
mov
cmp
add
fistpl
mov
mov
pop
adc
sub
add
push
jle
mov
push
cmp
add
aam
hlt
ljmp
dec
push
das
addb
dec
fisttpl
xchg
add
push
add
and
rolb
cli
out
mov
aam
movsl
ja
mov
add
add
add
push
cmp
jl
add
movsb
adc
add
clc
idiv
cli
jns
and
out
fisttpl
rclb
fidivl
cli
std
add
loope
jecxz
add
imul
fldcw
enter
mov
stc
inc
add
ret
adc
mov
xor
add
icebp
rclb
xchg
sbb
sub
add
aaa
inc
mov
add
jp
les
out
cmc
sbb
push
and
and
mov
insb
mov
inc
add
jo
std
dec
rcll
sbb
cltd
adc
sbb
insl
outsb
push
xchg
test
inc
add
push
jge,pn
add
add
xchg
jnp
add
aad
aaa
lahf
mov
rolb
push
xor
hlt
xchg
sbb
add
rorb
xchg
mov
dec
mov
clc
dec
sub
pop
push
outsb
fcompl
or
xchg
loopne
or
icebp
sub
add
hlt
ljmp
sahf
adc
sbb
mov
mov
sahf
aad
mov
adc
movsl
push
jb
mov
mov
sub
adc
xor
mov
dec
inc
add
pusha
add
cmp
and
sbbl
arpl
or
sbb
ljmp
or
sub
xchg
sub
or
mov
inc
add
sar
enter
sub
and
dec
fsub
sub
sub
push
add
sub
mov
add
bound
inc
or
out
popf
iret
jb
mov
add
xor
add
add
punpckldq
or
lret
out
lcall
xor
push
pop
push
pop
adc
leavew
aas
mov
lds
jle
repnz
inc
imul
jae
loopne
jmp
pop
push
test
divl
mov
insb
loope
jbe
push
fisttpll
hlt
cld
pop
test
push
xor
ss
push
or
push
outsb
ficompl
add
repnz
mov
push
gs
insl
stos
xor
adc
ja
and
into
sub
cmp
fiaddl
add
dec
insl
mov
lret
jbe
frstor
sub
pusha
add
add
pushf
cmp
xchg
fninit
shl
cld
push
inc
add
lods
adc
std
mov
jbe
inc
and
inc
add
and
pop
out
xchg
add
push
cli
lfs
ja
xchg
insb
jnp
rcll
sti
sub
movsb
mov
add
mov
lret
fcompl
xor
in
add
test
cmp
add
int
divl
xor
xor
outsl
push
inc
add
mov
and
cmp
jp
mov
aad
shrb
fisubs
scas
mov
inc
xchg
mov
cld
testb
sub
cmpsb
and
pop
cmp
popa
test
add
pop
scas
data16
movsb
lret
sar
pushl
test
shll
mov
xor
mov
inc
add
das
jecxz
sbb
mov
add
jno
pop
repz
pop
and
dec
pop
xchg
jle
xor
popa
mov
add
push
sbb
lods
xchg
rcrl
addr16
pop
pop
clc
add
push
dec
jns
mov
dec
dec
inc
daa
movb
push
or
mov
rolb
xchg
cmp
inc
add
cltd
insl
lods
sbbl
jb
movsl
push
cmp
dec
push
add
adc
pop
xor
loopne
inc
add
ds
sbb
insl
repnz
sbb
dec
out
icebp
int
inc
add
sbb
lret
sbb
movsl
out
dec
xorl
xchg
jb
add
cmpsl
sub
rolb
sub
das
xor
pop
addb
out
mov
jo
push
sub
imul
add
test
xchg
aam
jnp
fcmovb
sub
inc
add
or
ljmp
loope
lcall
test
and
fdivp
mov
iret
movb
add
loope
mov
cmp
cmovp
push
fdivrp
cld
push
push
push
sub
mov
stc
xor
inc
add
inc
or
pop
pop
ljmp
negl
dec
inc
add
pop
push
lods
push
cltd
inc
add
pop
cmp
icebp
sti
cmp
cmpsb
in
ja
add
xchg
mov
mov
dec
popa
adc
rolb
inc
mov
roll
add
rorl
cmpsb
pop
mov
outsl
inc
je
push
cltd
imul
stos
mov
dec
dec
add
add
nop
pop
lock
out
std
std
pop
fnstcw
xchg
jb
pop
xchg
pop
out
dec
mov
mull
push
inc
add
lret
add
pushf
in
push
push
nop
js
lock
cmpsb
outsb
addb
jno
add
sahf
pop
add
sahf
add
fsubs
mov
inc
mov
das
fs
add
inc
stos
lcall
sahf
mov
adc
add
xchg
in
push
xchg
arpl
or
add
dec
mov
xor
cmp
mov
cld
jnp
mov
xchg
push
test
loop
jno
js
icebp
jl
inc
pop
mov
into
incl
jg
add
jge
push
mov
cmp
mov
jbe
sub
jge
repz
bound
rolb
xor
int
ds
pop
mov
mov
in
les
hlt
out
pusha
add
cmp
mov
inc
add
rcr
stos
test
clc
jnp
mov
or
movsl
jecxz
cltd
fs
iret
mov
test
dec
cmp
add
clc
pop
add
cmp
add
or
insb
cmp
inc
add
push
insl
shlb
decb
add
add
idivb
cmp
adc
xchg
jge
cmp
mov
es
or
mov
out
sbb
xchg
pushf
daa
out
loop
mov
add
jle
hlt
adc
dec
mov
pop
xchg
mov
add
and
add
arpl
mov
fxch
fprem1
sbb
push
addr16
cmp
sbb
sub
mov
pusha
add
loope
bound
in
jmp
and
icebp
sbb
lds
lret
lret
es
mov
jmp
inc
stc
es
jae
push
loop
add
popa
out
outsb
sbb
dec
insb
scas
cmp
dec
sub
bound
pop
sbb
add
repz
test
push
add
fwait
pop
jae
push
ret
xchg
fnstcw
add
lahf
test
jno
jge
enter
fbld
add
aas
cwtl
lret
dec
add
and
sbb
int3
je
cmp
fiaddl
in
add
jmp
xor
popf
mov
scas
cmpsb
repz
xchg
dec
rolb
into
jge
lret
ss
xorl
dec
mov
insl
mov
mov
adc
call
xlat
ror
lret
adc
jge
call
mov
jp
dec
pop
xor
popa
push
adc
and
testl
or
into
xchg
dec
lea
int
rol
dec
mov
into
lds
test
or
sbb
and
test
pop
cli
clc
mov
cmc
dec
mov
cmpsb
push
cmp
aas
mov
sub
jge
and
pop
imul
add
add
lods
push
cli
loop
in
add
push
xchg
add
loop
pop
popa
xor
add
dec
int
pop
stc
pop
mov
cmp
insb
mov
cli
push
jns
or
lcall
jmp
dec
mov
cli
fildl
mov
and
shr
lock
loope
es
inc
jle
add
test
jb
jge
mov
mov
hlt
mov
adc
into
jbe
nop
rcrl
sub
inc
in
mov
cmc
sub
cli
sbb
rolb
push
adc
or
push
repz
inc
adc
adc
sub
rcl
bound
test
adc
inc
sbb
lods
cltd
test
js
loopw
sarl
push
lret
adc
loop
xchg
pop
icebp
test
add
shrb
sub
add
push
inc
add
add
popa
sahf
addb
fimull
in
push
inc
add
inc
add
adc
inc
add
jmp
popa
xor
test
xchg
cs
stc
mov
push
mov
dec
push
ret
pusha
add
mov
data16
fadd
add
fadd
mov
cwtl
push
pop
icebp
loopne
addb
mov
push
imul
leave
push
leave
cld
divb
scas
pop
sbb
xchg
shrb
pop
and
pop
sbb
or
push
inc
sbb
sarl
sbb
mov
aaa
add
in
icebp
lds
fmul
gs
mov
add
int
int3
clc
insl
cmc
mov
mov
xchg
adc
pop
clc
sbb
pushf
sbb
test
jne
popa
sub
fidivl
push
and
ja
adc
cmp
jle
addl
inc
add
push
or
add
and
mov
lcall
insb
lret
mov
mov
inc
pop
sub
jne
repz
xor
fsubp
mov
jnp
mov
add
les
add
xchg
inc
add
in
inc
add
pmaxsw
add
jg
or
mov
xchg
addb
cs
cld
xchg
out
add
aaa
xchg
dec
mov
sbb
test
cmpsl
lods
push
lods
jne
fdivrl
xchg
jp
push
test
ret
in
add
cmpsb
mov
ljmp
add
outsb
scas
push
orl
mov
add
shrb
lods
dec
in
dec
mov
dec
pop
sbb
add
mov
int3
into
sbb
cs
mov
outsb
sub
out
push
loopne
and
mov
lcall
imul
rcrl
lcall
and
test
xchg
stc
mov
inc
add
fbld
add
add
pushf
ljmp
add
cmp
add
into
xor
mov
dec
add
or
jns
aam
jg
push
popa
xchg
cmp
dec
int
dec
fbld
les
leave
mov
lods
fiaddl
pop
jecxz
aas
loope
not
cmp
or
sbb
cmp
adc
mov
xchg
sti
lock
xchg
aaa
pop
inc
ret
mov
aam
cli
add
lods
ficoml
and
xchg
add
daa
bound
addb
add
pop
outsb
sub
int
repnz
push
repz
cmpsb
orl
jl
push
jnp
shll
ficoms
ror
outsl
adc
xchg
ret
sub
mov
xor
fs
dec
sub
ficoms
mov
and
in
les
sarb
jae
std
outsl
enter
outsl
movsl
call
rcll
push
cmp
shl
and
sub
adc
popf
in
iret
sbb
lods
mov
insb
xchg
inc
mul
cmp
or
inc
add
jecxz
add
mov
ret
fiaddl
dec
aad
add
mov
push
data16
sbb
mov
push
jbe
xchg
mov
jb
push
rolb
cmp
int3
inc
add
inc
add
add
pop
cmp
cmp
mov
or
adc
fcoms
addb
add
and
mov
fwait
js
inc
add
sahf
mov
jno
aas
rep
adc
inc
add
into
sbbl
xchg
mov
fiadds
dec
insb
mov
inc
add
mov
aas
in
dec
or
mov
out
rolb
add
in
xor
daa
sbb
ret
xchg
xchg
push
jae
mov
sub
fldt
xor
in
xorl
rorl
loop
loope
inc
inc
add
push
and
fsubl
xchg
sub
ficomps
mov
fs
rolb
pop
mov
enter
aas
jmp
inc
fldl
mov
out
pushf
mov
push
or
shlb
or
xchg
iret
mov
fldenv
repz
inc
data16
xchg
clc
inc
add
outsb
out
je
xor
mov
getsec
mov
pop
bound
pop
dec
mov
sub
clc
dec
lods
addr16
push
in
call
out
pop
dec
xor
mov
cmp
test
fdivrl
jp
dec
in
fists
mov
pop
xchg
adc
imul
stos
loopne
pop
xchg
bound
mov
add
cwtl
nop
cmp
sti
in
mov
ss
addb
shlb
xchg
rolb
add
shr
pop
add
add
inc
jo
sub
jge
inc
add
jg
js
int
add
icebp
jg
arpl
mov
imul
add
sbb
dec
pushl
mov
int
std
mov
jae
inc
push
je
fcoms
add
fwait
jg
int
adc
inc
mov
sub
fdivr
cmp
mov
mov
ds
nop
pop
dec
inc
add
adc
lods
or
rorb
int
xor
rcrl
mov
mov
pushf
sub
js
xchg
adc
add
jb
nop
mov
add
rcr
int3
xor
mov
rol
add
lret
aad
inc
add
add
in
add
sbb
repz
push
data16
xor
add
imul
push
jge
pop
test
outsb
std
or
add
cmc
xor
pushf
movb
test
add
test
insb
jbe
bound
out
ds
add
insl
test
mov
lea
add
loope
sub
ja
or
bound
jge
ss
repnz
mov
add
adc
dec
mov
cmpl
mov
enter
iret
adc
inc
add
stc
stos
pop
add
std
addb
cmp
scas
cmp
xor
jp
or
xchg
sub
dec
insb
dec
xchg
iret
mov
add
adc
sbb
adc
rolb
addb
out
pop
or
push
xlat
out
stc
insl
pop
mov
and
cmp
dec
into
adc
out
mov
jo
xlat
xchg
mov
adc
movsl
adc
cmp
and
or
mov
fnstenv
xchg
xor
fidivl
adc
inc
out
add
iret
dec
dec
scas
out
fs
cmp
cmp
or
cwtl
aaa
dec
iret
mov
test
mov
fldenv
adc
out
cmpsl
pushf
leave
jl
rcll
add
inc
inc
push
sahf
addb
les
stc
sub
xchg
lcall
cmp
movsb
pop
cmpsb
lds
add
sub
add
xchg
inc
add
leave
ss
and
in
jb
sbb
scas
addb
xchg
xchg
xor
andl
inc
add
arpl
sti
pop
movb
jle
xchg
dec
mov
aad
add
jbe
xchg
icebp
and
mov
add
pop
jae
mov
push
daa
push
dec
inc
add
jnp
ret
cli
ja
adcl
lods
scas
out
xor
jg
add
adc
add
jnp
add
mov
fmul
sub
ds
jp
add
cmp
aas
mov
ds
add
jbe
mov
add
imul
cltd
push
popa
insb
inc
add
jmp
dec
arpl
test
jl
in
outsl
aas
aam
xor
mov
lea
iret
jo
mov
aam
scas
sub
cmp
clc
insb
pop
and
add
lea
push
mov
enter
and
ret
push
push
or
add
xchg
add
and
lcall
add
and
or
jp
and
jbe
xchg
into
mov
xlat
sbb
inc
mov
xor
add
out
icebp
inc
add
fwait
pop
sub
out
cli
sub
add
in
inc
pop
js
arpl
scas
sbb
jns
gs
mov
mulb
imul
and
push
cmc
in
and
std
cmp
cli
shll
pop
cld
jnp
or
cwtl
and
cs
xchg
jmp
pop
das
enter
pop
xor
cmp
push
in
outsl
bound
sub
lock
mov
add
test
mov
inc
addb
nop
std
jecxz
dec
jo
jge
dec
jl
fnstsw
inc
out
jg
pushf
xor
std
mov
mov
mov
xchg
dec
mov
mov
mov
add
mov
arpl
jb
fimuls
xchg
and
add
mov
outsb
jb
inc
and
ret
mov
sti
aam
mov
adc
add
lea
mov
dec
sub
push
in
pop
sbb
mov
pop
imul
jo
inc
pop
xor
lret
add
jmp
pop
add
cmc
out
inc
add
push
mov
mov
adc
mov
add
addb
shl
sbb
pop
lea
ja
pslld
push
jge
fiadds
mov
adc
dec
imul
addb
push
fwait
add
jg
sub
imul
mov
pop
sti
or
cli
mov
and
mov
mov
push
add
test
bswap
movb
sub
cmpsb
outsb
fldl
mov
mov
enter
popl
insl
sub
push
sbb
pop
imul
xor
and
loopne
insb
bound
fisttps
add
stos
mull
sub
jl
negb
ret
push
aam
add
mov
dec
xor
add
andl
adc
jmp
mov
add
add
mov
add
sub
mov
adc
mov
aam
aad
imul
or
leave
imul
loope
sbb
sub
mov
add
enter
pminsw
sub
fcmovnb
add
sub
add
jl
incb
add
and
stos
packsswb
imul
mov
inc
add
mov
xchg
das
ret
cld
lret
les
push
icebp
mov
addr16
fimull
sti
dec
aas
mov
or
bound
xchg
iret
addl
add
xor
push
pop
xchg
shll
add
std
xor
fcomps
pop
into
jne
pop
ljmp
fists
inc
add
mov
or
movb
add
jge
outsl
adc
sti
ss
addb
push
mov
sbbl
add
scas
jle
add
aas
lret
mov
mov
add
add
add
je
push
dec
ja
add
add
sub
pusha
add
add
fiadds
fs
sub
add
scas
push
mov
inc
addb
js,pt
jle
or
pop
mov
jge
inc
adc
sti
sbb
insl
ja
xor
push
and
push
pop
sarb
add
fdivs
addl
lea
hlt
adc
add
ja
inc
add
adc
mov
sbbl
and
inc
add
lock
jmp
and
inc
add
rcrb
or
mov
sbb
test
adc
or
jmp
pop
or
add
cs
and
mov
movb
mov
pop
lret
aad
inc
add
inc
stos
sub
mov
lods
dec
bound
addps
addb
in
sbb
std
pop
jb
add
ds
scas
iret
imul
add
add
das
adc
add
mov
int3
cmp
lds
pop
cmp
add
and
add
insl
jne
clc
cltd
orl
add
lock
cmp
sar
jns
imul
xchg
bound
or
shr
movb
push
mov
insl
sbb
int3
cmp
and
int3
xor
int
push
sbb
rcll
into
mov
cmp
aaa
mov
hlt
icebp
mov
test
dec
push
push
out
cs
enter
pop
ret
in
movb
adc
jb
iret
cmp
repnz
int
in
cmp
movsl
xor
sbb
outsb
adc
les
sbb
aas
mov
sbb
sub
jg
ucomiss
add
aas
cmp
ja
cmp
mov
dec
pop
mov
and
cltd
xchg
or
repz
lcall
xchg
das
push
xchg
jno
mov
xchg
int
repnz
dec
mov
lret
inc
add
lahf
imull
push
push
rcrl
xor
loopw
sbb
scas
test
push
std
dec
fwait
cld
jl
adc
mov
dec
lea
add
loop
mov
call
ss
mov
or
into
cli
cmp
xlat
lret
add
add
mov
add
shll
adcl
scas
pop
iret
fsubs
add
aas
adc
in
xorl
call
dec
sbb
aas
addr16
sub
xchg
out
mov
xchg
sbb
cmc
cmp
cmp
xchg
jnp
add
outsl
pop
ljmp
pop
std
jp
sti
xor
jge
push
stos
fdivl
cmp
lret
mov
lcall
aam
dec
lcall
gs
dec
mov
fsubrl
arpl
imul
push
aam
fcmovnu
jecxz
dec
ljmp
pop
inc
insl
popf
mov
addb
xor
adc
sub
enter
dec
xor
cwtl
out
addb
or
cmp
jno
add
fstpt
fwait
adc
pop
insl
push
shlb
in
daa
aaa
push
cmp
add
dec
xor
test
mov
in
jns
out
mov
inc
add
out
xor
xchg
ds
data16
mov
sub
adc
adc
add
push
add
test
vstmxcsr
mov
add
mov
dec
int3
jl
add
testb
adc
cmp
sbb
in
lods
push
add
aam
jns
jnp
lea
fildl
jnp
icebp
jl
push
jl
jle
cwtl
clc
loop
xchg
cmpsl
fsubrs
icebp
push
fisttpl
clc
sub
mov
xchg
dec
pop
addr16
xchg
cmp
mov
pusha
add
fnstenv
movsb
cld
scas
jbe
or
or
add
xchg
push
arpl
mov
cmpsl
cmpsb
xor
ficoms
neg
adc
xchg
jge
dec
stos
push
xchg
push
les
shrl
xor
loope
cwtl
jb
add
enter
xchg
xchg
rcll
fiaddl
mov
jle
das
pop
pop
inc
iret
adc
out
insb
add
bound
mov
or
xlat
loop
lods
mov
roll
add
out
pop
sub
pop
xchg
jae
add
or
dec
addl
fwait
dec
mov
add
fwait
xchg
mov
filds
add
and
pop
lea
add
lock
add
pop
clc
push
nop
add
fwait
outsb
pop
jmp
adc
push
add
testl
add
inc
add
push
out
movsb
jns
add
lret
aas
jmp
mov
jnp
jle
hlt
xchg
adc
or
ret
mov
pop
mov
jne
faddl
xchg
and
pop
push
push
icebp
clc
bound
movb
cmpsb
maxps
cmp
add
inc
add
mov
sbb
add
push
mov
nop
jp
jns
rclb
ljmp
add
sub
call
rol
add
int3
inc
add
cmpsb
or
sub
sbb
nop
jmp
xchg
add
test
push
add
stc
jb
add
add
add
stc
jb
adc
inc
sub
jb
dec
add
mov
add
xchg
jmp
mov
stc
jb
in
repnz
add
jne
push
push
mov
xchg
ret
jge
bound
mov
stc
jb
add
jb
sti
and
dec
adc
jmp
pop
add
lods
jb
add
nop
jmp
pop
add
pop
and
push
mov
xchg
ret
add
ss
mov
nop
jmp
cwtl
add
add
std
call
xorb
push
add
incb
sub
jb
out
add
dec
out
out
in
out
mov
stc
jb
add
addl
add
movb
add
stc
jb
add
add
mov
je
mov
mov
stc
jb
pop
add
add
sahf
xchg
stc
jb
roll
or
add
cli
pop
sbb
je
inc
add
add
paddusb
addb
addb
dec
fs
jmp
pop
sbb
dec
jecxz
js
rclb
loope
inc
add
pop
dec
add
mov
xchg
ret
add
jmp
add
stc
jb
add
js
insl
pop
nop
jmp
add
std
lldt
add
mov
xchg
ret
add
cli
mov
add
mov
xchg
ret
push
add
xor
sub
jb
dec
in
push
add
push
stc
jb
call
out
add
add
stc
jb
mov
add
add
fistl
add
add
out
addl
stc
jb
add
addl
fcomps
jb
ljmp
add
add
or
add
sahf
pop
push
mov
xchg
ret
jge
sub
add
sbb
add
jb
add
add
ficoms
jmp
add
cwtl
add
or
add
mov
push
mov
xchg
ret
add
add
and
stc
jb
add
add
in
push
pop
inc
stc
jb
add
js
sbb
nop
jmp
xorl
add
add
cwtl
add
mov
push
mov
xchg
ret
add
sbbl
out
sldt
add
roll
scas
mov
stc
jb
out
std
das
cli
push
int3
push
push
mov
xchg
ret
mov
fisttpll
test
add
add
jb
jmp
decl
mov
add
jmp
jge
in
add
aad
mov
stc
jb
sti
add
mov
sbb
jb
sti
roll
cwtl
rol
add
and
push
mov
xchg
ret
add
jge
repz
call
jb
mov
pop
xchg
add
mov
add
jge
in
add
push
sbbl
jae
jb
data16
jb,pt
nop
jmp
add
add
data16
call
stc
jb
roll
push
push
lods
add
stc
jb
jbe
addl
cwtl
pusha
add
mov
add
xchg
icebp
adc
out
add
test
gs
add
jmp
in
add
add
add
adc
xchg
stc
jb
add
dec
add
add
xor
call
stc
jb
mov
add
mov
stc
jb
cmpxchg
mov
add
push
add
icebp
nop
jmp
cmpl
andb
mov
sub
popa
add
mov
xchg
ret
sbb
add
add
stc
jb
pop
sbbl
mov
stc
jb
add
add
add
add
mov
stc
jb
add
mov
nop
jmp
add
in
pop
mov
add
stc
jb
add
sub
xor
mov
nop
jmp
shll
str
mov
stc
jb
xchg
add
lds
jb
push
add
add
mov
add
add
jb
pop
lods
in
mov
lea
push
mov
xchg
ret
pop
add
jmp
and
add
add
rdmsr
add
add
mov
push
mov
xchg
ret
js
push
add
enter
addb
add
add
add
testl
or
jb
roll
jb
mov
push
mov
xchg
ret
add
add
xchg
stos
lea
nop
jmp
mov
dec
jb
mov
stc
jb
add
add
cs
stc
jb
jge
add
add
add
add
nop
jmp
mov
testl
mov
xchg
ret
add
xchg
leave
add
stc
jb
pop
add
add
jns
dec
add
jb
add
add
stc
jb
add
mov
fidivrl
lret
nop
jmp
add
in
add
in
call
mov
xchg
ret
jmp
int
adc
add
add
add
dec
dec
push
mov
xchg
ret
add
add
add
je
add
add
fiaddl
add
add
xor
cmpb
add
add
addb
pop
jne
stc
jb
dec
in
lods
test
nop
jmp
add
push
sbb
call
nop
jmp
add
decl
pop
in
jnp
fists
add
pushl
sub
in
mov
nop
jmp
add
cmp
lret
stc
jb
add
cli
add
jge
add
mov
test
roll
lret
add
mov
mov
xchg
ret
out
xor
jl
sbb
jb
addb
add
shr
mov
push
mov
xchg
ret
add
data16
lahf
add
stc
jb
add
sar
add
xchg
sub
sti
push
mov
xchg
ret
add
rolb
add
ret
stc
jb
pop
mov
add
jbe
xor
push
stc
jb
cwtl
pop
add
shrb
bound
call
stc
jb
add
dec
js
rcrl
jb
dec
add
std
add
in
rep
push
mov
xchg
ret
addl
push
mov
add
add
add
pop
add
push
icebp
sbb
add
mov
stc
jb
add
pop
jmp
nop
jmp
cmovge
add
xor
add
stc
jb
paddd
pop
stc
jb
mov
add
mov
add
xchg
inc
daa
aaa
inc
add
mov
stc
jb
add
incb
add
xchg
js
popa
add
jb
push
add
add
icebp
mov
add
stc
jb
dec
add
in
xchg
jnp
push
mov
xchg
ret
jb
add
xchg
and
xchg
les
xor
scas
mov
stc
jb
push
lods
in
out
add
sbb
jne
stc
jb
mov
sub
add
rol
adc
outsb
mov
stc
jb
dec
std
jge
add
add
stc
jb
add
or
dec
add
pop
sbb
push
mov
xchg
ret
add
add
shlb
add
stc
push
push
mov
xchg
ret
add
pop
in
ja
mov
nop
jmp
mov
sub
sub
jo
pusha
stc
jb
add
add
sbb
cli
pop
lcall
pop
sbb
add
lldt
sub
mov
push
mov
xchg
ret
mov
or
mov
xchg
ret
cli
rclb
jmp
add
stc
jb
dec
std
add
lods
or
jb
js
xor
mov
sar
jb
dec
dec
add
add
in
ljmp
sbb
add
sbb
add
add
adc
call
stc
jb
add
add
xchg
lahf
pop
stc
jb
jb
add
add
iret
xchg
xor
inc
aam
add
add
dec
loopne
xor
stc
jb
add
add
stc
jb
add
std
cwtl
out
das
std
mov
stc
jb
add
add
dec
mov
push
mov
xchg
ret
add
add
scas
mov
stc
jb
ficompl
mov
sub
sbb
jb
out
dec
sub
add
dec
mov
stc
jb
add
lods
incl
mov
add
mov
stc
jb
sbb
ljmp
jb
in
rorl
stos
mov
nop
jmp
xor
add
mov
nop
jmp
or
add
nop
jmp
add
add
incl
add
pop
jne
add
stc
jb
add
or
loop
jmp
add
roll
mov
test
push
mov
xchg
ret
push
in
and
stc
jb
add
shll
pop
stc
jb
add
add
xchg
mov
add
nop
jmp
add
add
sar
jne
stc
jb
sti
add
jb
mov
pop
mov
xor
nop
jmp
add
addl
loopne
cltd
add
stc
jb
jbe
add
add
insl
ret
jb
pop
cwtl
dec
add
sub
add
sub
jns
test
add
nop
jmp
dec
add
add
in
sbb
add
testl
aaa
mov
lods
hlt
inc
add
push
pop
push
xchg
dec
add
stc
jb
out
add
xor
add
jb
bound
in
sarl
inc
add
jb
add
sub
add
stc
lcall
dec
js
mov
pop
dec
mov
stc
jb
add
add
pop
mov
stc
jb
pop
mov
add
push
mov
xchg
ret
cli
add
sbb
jb
mov
xor
cli
push
and
stc
jb
add
add
out
pushl
stc
jb
add
add
pop
mov
lea
push
mov
xchg
ret
add
pop
popa
stc
jb
add
add
add
addb
stos
stc
jb
sarl
add
std
jne
nop
jmp
add
add
stc
jb
add
add
sbbb
stc
jb
pop
add
add
nop
jmp
add
callw
dec
add
push
mov
xchg
ret
mov
test
or
xorb
pop
jnp
movb
mov
xchg
ret
add
mov
push
mov
xchg
ret
roll
xchg
mov
or
pop
fildl
xchg
ret
add
rcll
nop
jmp
jge
pop
add
sbb
or
xor
add
stc
jb
add
jg
mov
add
jb
roll
bswap
push
push
push
mov
xchg
ret
pop
jge
add
adc
and
stc
jb
add
data16
dec
mov
stc
jb
add
lea
mov
xchg
ret
mov
pop
push
nop
jmp
add
incl
out
out
xchg
call
lock
add
or
lldt
dec
mov
nop
jmp
add
add
jge
jne
mov
stc
jb
add
jl
test
stc
jb
in
out
decl
push
mov
xchg
ret
add
push
mov
xchg
ret
cmp
cli
out
sub
jbe
nop
jmp
add
dec
add
call
arpl
inc
add
pop
mov
nop
jmp
addb
std
or
jb
sub
stc
jb
sbb
std
icebp
fiadds
pop
and
jmp
pop
jge
cwtl
pop
in
push
stc
jb
push
sub
cld
movzwl
nop
jmp
push
in
add
jecxz
and
add
push
mov
xchg
ret
out
dec
add
lret
jb
data16
add
incl
in
xchg
or
mov
xchg
ret
add
mov
add
jle
ret
add
inc
sti
inc
add
add
bound
dec
pushl
stc
jb
dec
mov
jbe
add
addb
sahf
mov
nop
jmp
rcll
add
or
jg
fdivr
jb
cli
add
jmp
add
ret
push
or
rclb
cmc
inc
add
out
add
lods
pop
push
mov
xchg
ret
xchg
sldt
das
push
jmp
nop
jmp
dec
adc
push
mov
xchg
ret
in
add
add
mov
stc
jb
mov
jmp
stc
jb
add
dec
add
jb
add
or
mov
inc
and
jb
add
push
jbe
sub
sub
incl
lods
out
verw
add
push
mov
xchg
ret
add
add
ret
stc
jb
add
std
sti
add
xchg
add
daa
push
xchg
push
add
push
nop
jmp
add
jge
add
enter
jb
add
add
in
jmp
add
pop
mov
stc
jb
js
add
lods
loop
ret
stc
jb
cwtl
add
jbe
add
add
stc
jb
add
xchg
add
add
inc
lock
mov
xchg
ret
add
xchg
fmuls
add
add
add
adcb
mov
nop
jmp
in
pop
xor
fisttpll
in
inc
add
jge
pop
ficoml
dec
hlt
inc
add
add
sbb
push
add
add
stc
jb
add
dec
pop
add
pop
rep
stc
jb
addl
add
mov
fcoml
jb
add
lods
add
add
pusha
add
jbe
add
push
mov
xchg
ret
ss
stos
nop
jmp
add
add
in
add
cmp
aam
inc
add
cli
add
into
add
nop
jmp
xchg
rcrb
add
test
hlt
call
add
add
xchg
add
add
jb
add
add
mov
stc
jb
add
in
sar
xchg
call
jb
add
roll
add
add
stc
jb
add
add
add
sub
or
add
dec
dec
mov
add
jbe
push
mov
xchg
ret
pushl
sbb
add
stc
jb
add
mov
add
add
aaa
add
add
rcrb
and
add
stc
jb
mov
add
cld
dec
nop
jmp
js
add
xor
std
jb
clc
push
nop
jmp
sbbl
rcl
js
push
add
pop
push
mov
xchg
ret
xchg
add
out
out
aas
mov
stc
jb
add
pop
add
push
and
add
push
nop
jmp
add
xchg
add
data16
pop
adc
jmp
inc
or
incl
push
lea
orb
incl
jmp
lahf
popa
stc
jb
sub
add
add
xchg
sub
stos
stc
jb
push
add
add
xor
stc
jb
cmovl
fiaddl
add
lods
lea
nop
jmp
js
sbb
push
stc
jb
jmp
in
out
add
pop
push
mov
stos
ret
push
mov
xchg
ret
dec
dec
add
add
add
cmpsl
fisubl
jb
add
rorb
add
in
mov
out
add
pop
push
add
xorb
xchg
add
add
and
push
mov
xchg
ret
add
push
enter
sub
add
or
out
add
rcrl
or
incl
data16
push
add
stos
push
push
mov
xchg
ret
bound
sti
add
mov
add
nop
jmp
bound
push
pop
add
cmp
popa
add
mov
xchg
ret
add
pop
imul
incl
pop
data16
mov
verw
pop
push
mov
xchg
ret
dec
add
push
js
mov
inc
stc
jb
push
xor
mov
fadds
xchg
ret
add
add
sbb
jb
add
add
and
incl
bound
add
mov
test
in
stc
jb
add
jb
add
push
stc
jb
out
add
add
add
dec
imul
stc
jb
add
sub
jne
nop
jmp
add
add
add
push
je
stc
jb
dec
pop
xchg
shll
adc
jb
jmp
jbe
pop
sahf
jne
nop
jmp
add
out
add
jb
pop
add
push
cwtl
push
mov
cmp
push
mov
xchg
ret
xchg
add
add
stc
jb
add
sbb
pop
add
add
call
iret
dec
iret
and
push
mov
xchg
ret
das
jb
outsl
xor
stc
jb
add
add
xchg
iret
sub
int
stc
jb
mov
add
out
pop
pop
pushl
push
stc
jb
add
or
dec
popf
pop
stc
jb
dec
add
jmp
xchg
testl
add
add
add
pop
add
pop
insb
call
stc
jb
add
xchg
push
mov
stc
jb
jb
iret
add
pop
jne
stc
jb
add
out
push
push
mov
xchg
ret
add
add
out
les
sub
inc
adc
jb
dec
add
pxor
shrb
popa
add
jb
sub
add
ret
stc
jb
jbe
add
dec
pop
or
mov
stc
jb
lods
add
mov
and
inc
aas
stos
push
mov
xchg
ret
dec
punpckhdq
jb
add
ss
in
mov
or
jnp
add
dec
xchg
add
dec
mov
mov
xchg
ret
add
dec
add
sbb
rolb
jb
roll
roll
add
push
lahf
add
nop
jmp
roll
push
add
das
ret
mov
jp
les
jb
add
andnps
in
pop
nop
jmp
add
sub
add
add
dec
stos
add
stc
jb
add
add
mov
xchg
ret
addl
pusha
stc
jb
dec
in
add
xor
incl
adc
stc
jb
lods
rorl
add
pop
add
push
and
add
push
push
mov
xchg
ret
add
or
test
jb
subl
cs
stc
jb
add
pop
add
add
push
nop
jmp
in
in
add
mov
push
push
mov
xchg
ret
or
roll
add
cld
push
mov
xchg
ret
add
add
pop
sub
add
add
ficoml
test
nop
jmp
jb
add
decl
add
mov
add
add
lcall
push
cmp
test
stc
jb
pop
push
pop
mov
lret
testl
sbbb
cwtl
mov
stc
jb
fidivl
ss
xlat
mov
and
add
add
add
jbe
add
and
mov
stc
jb
add
mov
addb
mov
xchg
ret
add
add
sub
ljmp
addl
mov
sbb
xchg
stc
jb
add
add
add
jge
sti
pusha
push
mov
xchg
ret
in
adc
test
push
or
jb
jbe
sub
add
push
stc
jb
jbe
add
add
jge
add
ljmp
icebp
incl
add
xchg
add
mov
mov
xchg
ret
add
in
mov
xchg
ret
add
push
mov
dec
push
stc
jb
in
out
bound
imul
and
stc
jb
mov
add
pop
in
mov
inc
push
mov
xchg
ret
add
add
popa
stc
jb
bound
add
add
mov
sub
ret
testl
add
stc
jb
add
add
push
add
jb
add
add
xchg
add
adc
jb
dec
iret
mov
sub
out
add
mov
stc
jb
jb
add
out
imul
add
jb
add
notl
test
jmp
add
cmp
fildl
xchg
ret
add
add
lds
nop
jp
enter
xchg
add
push
add
pop
call
jb
add
add
wbinvd
out
mov
nop
jmp
in
dec
add
pusha
add
jb
add
js
mov
sti
aas
and
push
mov
xchg
ret
add
cmp
dec
cmp
jmp
add
add
mov
stc
jb
add
add
in
mov
stc
jb
add
add
add
jb
add
dec
add
xor
add
nop
jmp
add
cwtl
dec
push
nop
jmp
out
dec
out
lldt
jbe
outsb
push
stc
jb
pop
xchg
das
add
mov
lods
add
nop
jmp
push
dec
add
pop
ltr
call
add
add
jg
add
call
sub
ret
in
add
jb
lods
shr
stc
jb
sub
add
add
jnp
stc
jb
add
mov
pop
add
nop
jmp
add
fiaddl
lods
add
add
dec
push
stc
jb
sbb
jbe
fs
cli
incl
adc
add
add
mov
sub
nop
jmp
out
js
add
lods
inc
add
or
add
out
std
add
jb
ljmp
dec
in
mov
ds
stc
jb
add
pop
add
add
stc
jb
xor
add
mov
stc
jb
add
in
testl
subb
lcall
add
add
add
jge
je
js
mov
xchg
ret
add
mov
jb
mov
shll
test
add
stc
jb
pop
xchg
mov
xchg
mov
stc
jb
add
roll
fs
adc
push
mov
xchg
ret
rcrl
nop
lods
push
push
mov
xchg
ret
iret
add
sbb
xor
mov
andb
out
add
add
test
jb
dec
push
add
add
add
jo
pop
call
nop
jmp
cli
add
add
mov
adc
jb
pop
incb
add
add
stc
jb
roll
jbe
add
add
testl
orb
incl
add
sub
mov
stc
jb
add
push
cli
out
loope
je
stc
jb
add
ljmp
jb
sub
add
mov
stc
jb
add
xchg
sub
push
mov
xchg
ret
lods
add
pop
in
cmp
stc
add
add
jb
add
add
arpl
popa
add
jmp
cwtl
add
mov
pop
call
lcall
add
outsb
dec
nop
jmp
add
jbe
lods
add
dec
add
lea
stc
jb
sbb
mov
jb
mov
add
push
nop
jmp
rorl
mov
adc
jb
add
add
push
sbb
jmp
jmp
shrl
add
add
shl
stc
jb
sti
std
add
add
aad
add
imull
psrlw
out
inc
add
add
xchg
pop
lret
jne
nop
jmp
add
add
dec
stc
jb
add
mov
add
push
add
stc
jb
add
in
add
inc
add
mov
xchg
ret
cli
jge
cli
push
rcll
orl
data16
incl
push
pop
sti
loopne
add
xor
int
pop
jae
jmp
dec
std
lods
dec
pop
sbb
add
jb
add
add
stc
jb
jb
add
rclb
repnz
add
add
cld
or
or
add
add
in
mov
nop
jmp
dec
dec
lods
jbe
bound
popa
cld
jb
stc
jb
add
cltd
add
stc
jb
ficoml
iret
pusha
nop
jmp
add
add
sbb
stos
nop
jmp
add
js
fidivl
add
inc
push
mov
xchg
ret
add
mov
loope
jb
out
add
shr
test
stc
jb
addb
mov
lods
add
xchg
lret
ret
nop
jmp
add
add
jbe
int3
test
nop
jmp
out
roll
add
adc
js
nop
jmp
add
mov
call
lea
stc
jb
add
add
add
dec
add
stc
jb
pop
sbb
data16
sbb
inc
add
add
mov
es
stc
jb
jbe
xchg
nop
jmp
sti
push
cli
add
mov
addb
call
bound
add
nop
sbb
call
add
dec
movsl
in
dec
nop
jmp
ljmp
sub
jmp
testl
jb
push
mov
xchg
ret
pop
add
out
les
stc
jb
add
mov
xor
inc
xor
jae
add
jb
add
add
add
in
add
add
jb
in
jmp
incb
push
sub
add
arpl
mov
stc
jb
pop
add
add
dec
adc
jb
add
mov
add
js
loop
stc
jb
add
std
pop
in
xor
stc
jb
jb
js
mov
push
stc
jb
add
jge
add
lods
add
mov
out
sti
decl
push
rcrb
add
add
push
in
incl
pop
add
add
push
cmpsb
mov
stc
jb
lods
add
dec
add
jmp
add
add
add
add
mov
dec
mov
stc
jb
roll
incb
outsb
mov
push
mov
xchg
ret
push
push
out
out
addb
push
mov
incl
add
add
jb
dec
xchg
mov
call
ljmp
push
add
stc
jb
sub
incb
test
insb
xor
stc
jb
add
dec
arpl
mov
stc
jb
add
add
addb
mov
stc
jb
add
dec
fisubl
cmp
nop
jmp
decl
ud0
out
shl
jge
jge
nop
jmp
push
add
add
in
mov
stc
jb
incl
pop
sti
add
add
stc
jb
add
push
xchg
add
or
jmp
mov
add
sub
and
push
mov
xchg
ret
jge
add
add
nop
jmp
out
in
in
add
dec
pop
fmull
test
loope
stc
jb
ljmp
cltd
jmp
stc
jb
add
push
mov
xchg
ret
jmp
iret
rolb
or
cld
inc
add
adc
fidivrl
stc
jb
sub
jge
jbe
xor
add
mov
push
mov
xchg
ret
out
add
mov
mov
dec
add
out
push
stc
jb
add
out
add
add
mov
mov
stc
jb
add
mov
hlt
test
aam
add
dec
mov
push
mov
xchg
ret
add
add
ret
stc
jb
rclb
add
cmc
add
jmp
sub
call
pop
jb
dec
add
out
push
push
nop
jmp
or
in
mov
add
xchg
pushf
popl
stc
jb
xchg
mov
add
sub
nop
out
mov
stc
jb
xchg
jge
add
add
xor
add
xchg
or
xor
add
stc
jb
add
mov
in
lcall
xchg
rorb
dec
push
das
lods
stc
jb
push
adcb
push
pop
add
push
stc
jb
add
add
cli
ss
inc
add
add
stc
jb
rolb
out
sti
add
mov
jb
pop
add
add
add
push
mov
cmc
jmp
add
mov
pop
add
ficoml
mov
xchg
ret
add
add
xor
push
mov
xor
add
in
and
add
enter
stos
mov
stc
jb
or
push
std
add
add
add
xor
stc
jb
bound
sub
push
jl
nop
jmp
add
add
add
push
lods
shll
mov
jb
pop
divl
sub
inc
loope
pushl
add
inc
roll
sub
stc
jb
addl
add
push
add
iret
popa
stc
jb
andl
add
sti
pop
stc
jb
dec
in
in
cwtl
pop
sti
nop
ret
sbb
shrb
jb
or
add
test
inc
repnz
sti
add
add
out
out
xor
imul
jb
dec
add
scas
add
push
mov
xchg
ret
add
pop
rep
stc
jb
dec
dec
ss
mov
push
mov
xchg
ret
cli
add
mov
or
pushl
add
add
add
add
lods
push
mov
xchg
ret
iret
rolb
subl
jl
sar
andb
fiaddl
orl
call
add
add
add
sub
stc
jb
pop
iret
add
add
push
mov
xchg
ret
xchg
decl
cmpsb
mov
cli
stc
jb
iret
add
jbe
sbb
aas
pusha
stc
jb
std
incl
or
out
dec
push
push
mov
xchg
ret
add
sbb
fs
scas
mov
stc
jb
add
add
test
pusha
add
add
stc
jb
dec
jmp
add
pop
xchg
jnp
sti
nop
jmp
dec
add
jmp
add
pop
stos
mov
stc
jb
add
sbb
and
nop
jmp
add
add
add
add
jb
mov
add
jb
add
xor
es
rep
nop
jmp
add
bound
add
add
adc
call
out
dec
add
call
nop
jmp
lods
add
mov
mov
add
stc
jb
add
testl
add
stc
jb
add
add
lea
jae
jb
jb
std
or
add
stc
jb
lcall
sub
sbb
andb
pop
dec
orb
test
stc
jb
add
add
add
mov
stc
jb
bound
mov
stc
jb
out
out
add
add
addb
xor
nop
jmp
iret
mov
addb
and
stc
jb
add
add
add
jle
sar
cmp
jmp
dec
sti
add
mov
jmp
add
add
add
add
mov
push
mov
xchg
ret
or
out
mov
mov
xchg
ret
pop
add
call
stc
jb
sbb
mov
mov
xchg
ret
sbb
std
in
stos
je
stc
jb
add
out
rcll
testb
add
add
add
aas
and
nop
jmp
xchg
addb
add
orb
rcrl
add
sarl
pusha
stc
jb
add
xor
mov
sub
incl
add
sbb
xchg
add
ss
stc
jb
std
pop
jmp
pop
xor
stc
jb
pop
mov
ss
add
incl
add
add
imulb
jmp
jp
nop
jmp
addl
neg
movsl
popf
add
stc
jb
out
xchg
rcrl
add
add
stc
mov
jb
push
add
add
add
pop
cmp
jb
out
incl
add
dec
and
xor
mov
stc
jb
add
jb
sub
jb
add
add
sar
orb
jmp
add
push
push
add
lds
add
jb
add
or
xchg
mov
sub
stc
jb
pop
pop
add
jo
push
stc
jb
out
add
add
in
mov
mov
stc
jb
xor
add
dec
xor
stc
jb
push
add
add
ss
add
stc
jb
sbb
add
incb
out
hlt
xor
add
jb
std
add
xor
add
jb
sub
in
add
jne
stc
jb
add
add
and
mov
push
mov
xchg
ret
out
push
sbb
mov
stc
jb
jge
push
add
add
mov
push
mov
xchg
ret
subl
ljmp
add
add
bswap
pop
xor
in
mov
stc
jb
jb
pop
xor
outsl
mov
stc
jb
roll
add
in
add
call
incl
add
jmp
or
stc
jb
pop
and
add
add
inc
push
mov
xchg
ret
dec
sub
mov
push
lret
shr
stc
jb
add
mov
call
stc
jb
add
mov
call
stc
jb
push
add
inc
pop
cli
add
push
mov
xchg
ret
jbe
mov
shr
ficoms
decl
mov
add
add
mov
adc
jb
mov
out
mov
jne
push
mov
xchg
ret
xchg
shlw
and
js
jb
add
bound
push
cmp
rclb
add
add
add
add
pop
leave
nop
jmp
jmp
mov
dec
sar
decl
push
mov
xchg
ret
pop
lods
std
dec
subl
push
mov
xchg
ret
add
cld
push
stc
jb
out
push
pop
mov
icebp
in
imul
stc
jb
add
cmp
dec
push
loope
sbb
mov
xchg
ret
add
add
stc
jb
add
add
jbe
jo
add
add
test
push
mov
xchg
ret
rolb
add
pop
push
mov
xchg
ret
iret
add
add
mov
stc
jb
add
pop
in
push
in
ror
stc
jb
add
sub
mov
stc
jb
add
add
push
lds
cmp
push
mov
xchg
ret
pop
ss
sbb
pavgb
xchg
ret
add
add
or
inc
and
jb
ss
dec
jbe
add
mov
sbb
jmp
stc
inc
add
add
in
mov
stc
jb
add
add
add
fiaddl
repz
mov
xchg
ret
sub
add
add
xor
nop
jmp
add
add
add
jb
add
cwtl
add
dec
mov
push
mov
xchg
ret
mov
sbb
in
add
adc
cltd
add
add
adc
add
arpl
mov
outsl
adc
lcall
add
push
lock
xlat
xor
mov
arpl
subl
push
jg
addr16
or
shll
je
inc
pop
addl
daa
pop
sbb
mov
lahf
adc
movsl
cmp
push
push
fxch
fwait
xor
sub
or
dec
mov
sub
gs
jge
jbe
in
popf
xor
pop
std
sbb
scas
cld
and
or
mov
shrl
stc
into
mov
out
fwait
mov
cmp
ja
xor
jns
jb
sub
imul
add
lock
insb
inc
jne
test
sub
mov
aaa
push
push
pop
addb
add
xchg
sub
jae
sbb
mov
jmp
cmp
xchg
pop
outsb
in
or
jae
pop
jo
fistpl
aam
cs
lods
xor
xchg
jns
testl
test
cwtl
pop
test
dec
push
mov
ljmp
outsb
ds
or
lds
mov
jl
or
mov
mov
push
out
add
jp
test
cli
out
fbld
or
push
add
pop
or
xchg
inc
xchg
push
add
ret
xchg
lods
lcall
push
lods
inc
add
cmpl
lock
cmc
loop
xchg
mov
sub
push
pop
or
loope
add
sub
jg
stos
mov
push
ja
mov
add
in
jbe
decl
xchg
shrl
sbb
fstl
pop
xor
push
in
std
and
xor
push
out
ret
outsb
test
mov
add
stos
movsl
hlt
lea
aam
leave
push
loopne
mov
jb
add
daa
fwait
adc
lret
mov
push
scas
ljmp
in
inc
add
pop
inc
add
add
dec
jmp
add
add
lcall
mov
pop
inc
add
push
sahf
add
insb
mov
sub
outsb
arpl
and
inc
add
and
push
xchg
cwtl
adc
leave
jle
cmp
inc
add
xchg
cmp
outsl
or
popf
call
sbb
mov
je
sbb
outsl
or
outsl
sub
add
sub
inc
add
daa
lcall
adc
fbstp
pop
push
mov
jno
test
sbb
cmp
pop
shrl
sbb
adc
cltd
add
and
xchg
inc
add
movsl
inc
add
jp
rcrl
repz
adc
inc
add
push
pop
ja
pop
rolb
lds
outsb
push
sahf
push
dec
jne
outsb
dec
jl
cmc
test
cmpsl
addb
test
int3
push
fwait
dec
inc
add
xor
sub
or
cli
jg
lret
inc
add
jb
sbb
popa
mov
cmp
mov
sbb
scas
in
outsb
clc
imul
mov
xchg
filds
mov
nop
jbe
sbb
test
cmp
fcoml
jae
fildl
movsb
push
imul
push
mov
jmp
pop
push
add
dec
es
add
pop
jg
sbb
gs
xor
xchg
mov
jb
sub
add
mov
adc
dec
cmp
shrb
movb
lods
push
xchg
lret
dec
or
scas
xor
fldcw
pop
gs
aam
xchg
dec
and
mov
pop
out
push
inc
aaa
jns
cmp
ljmp
cld
bound
mov
popa
sbb
sub
call
and
mov
push
inc
add
push
mov
cmp
mov
lods
pop
sti
push
sar
sub
add
inc
sahf
push
iret
pop
test
add
xor
inc
pop
sbb
loopne
arpl
add
lods
scas
push
jbe
xchg
push
cli
js
cld
pop
pushf
or
shl
add
fsqrt
mov
mov
xchg
jno
in
enter
insb
inc
mov
push
pop
lret
xor
cltd
mov
cs
leave
mov
inc
scas
les
clc
imul
xlat
jmp
lock
xor
xchg
rclb
mov
outsb
adc
sub
jge
dec
pushf
out
inc
add
ss
out
data16
iret
mov
cmpsb
push
or
xchg
jbe
mov
stc
test
xor
inc
dec
jmp
out
loop
mov
outsb
add
out
xchg
adc
mov
inc
in
fwait
or
xor
fs
icebp
push
dec
sbb
bound
imul
add
outsb
adc
or
roll
add
bound
and
std
push
lahf
fwait
adc
nop
rol
xorl
adc
dec
repz
xorl
mov
add
data16
mov
cmp
mov
scas
int3
cli
push
aas
mov
add
xchg
mov
cmpsl
sbb
xchg
add
and
cmp
add
aad
add
xor
xchg
push
sbb
or
in
scas
xor
lods
lods
push
outsl
and
or
mov
xlat
out
mov
xchg
mov
mov
cmp
sbb
xor
sti
test
stos
fistpl
cmp
adc
ds
xchg
sarl
sti
test
aas
lds
and
pop
mov
mov
add
and
add
dec
ja,pn
xchg
pop
mov
in
cmp
clc
fistpl
test
xchg
fmuls
dec
adc
repz
and
movsb
lret
push
aas
sbb
stos
fcoml
pop
insl
aas
push
or
or
rolb
add
xchg
cmp
sahf
push
outsb
lahf
fimull
and
imul
pop
cwtl
pop
adc
js
test
sahf
ja
add
push
adc
pop
push
cltd
dec
jmp
dec
addr16
add
gs
ficoms
jl
mov
out
or
push
shr
test
inc
add
push
jns
call
add
add
fmull
pop
pop
je
xchg
test
pusha
add
dec
pushf
shrl
in
je
out
mov
stos
roll
jmp
cmp
popa
xchg
and
rolb
add
sbb
xchg
pop
mov
sbb
rcr
jno
push
add
sub
push
cld
cmp
push
call
mov
sbb
and
mov
repz
sbb
jb
or
xchg
in
add
jbe
mov
lsl
add
fldcw
mov
add
int
jae
xchg
mov
stc
int3
inc
and
int
jno
decl
ds
mov
sub
push
push
add
fistpl
jns
mov
and
andl
push
test
mov
adc
jmp
cmc
js
pminub
sub
divb
in
lods
add
test
mov
dec
lret
mull
adc
repnz
add
aad
int3
in
xor
add
test
xchg
rcrb
lock
ret
add
add
add
cli
mov
add
push
pop
cwtl
scas
xchg
push
mov
mov
xchg
sti
test
pmovmskb
ffreep
dec
in
int
insl
push
push
add
sahf
add
cmc
jge
sbb
pop
lock
loope
add
add
lods
outsb
mov
pop
jns
pop
ja
daa
mov
add
insl
mov
adc
fwait
jbe
mov
add
aad
or
inc
cmp
adc
mov
addb
dec
jge
dec
addb
adc
pop
mov
add
inc
pop
movsb
popf
mov
mov
mov
jb
adc
add
cmp
dec
aas
negl
nop
push
stos
mov
dec
test
pop
outsb
movsl
sbb
mov
nop
xor
push
dec
push
scas
add
adc
sub
mov
pushf
sbb
jnp
fstpl
repz
sbb
addb
addl
jno
xor
not
out
shrl
pop
and
jae
mov
adc
pop
push
or
mov
sbb
sub
push
in
and
or
stos
lret
fbstp
add
push
jge
inc
add
int3
insl
nop
addb
pop
in
fucomi
dec
sbb
pop
ljmp
jl
movsl
ds
mov
pop
push
movsl
jp
sub
push
push
outsb
dec
stos
dec
xor
mov
das
dec
add
bound
in
cltd
add
daa
fnstcw
inc
lds
add
mov
mov
mov
add
mov
xchg
and
and
inc
add
adc
test
sub
out
pop
inc
or
insl
xchg
adc
dec
push
sbb
xlat
mov
xor
in
and
movsl
xor
jge
inc
add
xor
push
call
sarl
incl
xchg
outsb
dec
mov
fwait
mov
add
sbb
jae
add
aam
rorl
incl
push
outsb
lret
rcrl
add
test
mov
or
sbb
mov
cmpsl
insl
mov
mul
in
adc
inc
add
jno
mov
add
add
cmc
scas
dec
in
stos
fcoms
or
xchg
out
cmc
es
add
cmp
addr16
mov
sti
xor
inc
in
cli
push
add
push
in
icebp
jle
mov
xchg
add
inc
add
mov
mov
sarb
sub
and
pusha
add
fcoml
add
pop
stos
xchg
inc
int3
out
lea
notl
repnz
lods
jg
stos
mov
sar
mov
pop
jns
insb
push
xchg
jne
in
scas
lods
out
add
out
jl
and
mov
dec
out
cmpsb
les
inc
add
cmp
add
cltd
mov
test
int3
sub
sub
call
leave
mov
mov
sbb
add
push
sahf
inc
add
fbstp
icebp
in
mov
xchg
ficoms
icebp
sahf
mov
fdivrs
add
cmp
cli
mov
xor
scas
push
test
ja
movsl
outsl
jmp
sub
jo
orps
add
cmp
add
inc
add
pop
pop
nop
mov
sbbl
dec
jmp
fldcw
leave
push
sub
sarl
out
push
add
and
pop
mov
mov
push
dec
dec
or
jne
mov
testl
ja
mov
add
test
or
cltd
cmpsl
xchg
push
jecxz
mov
ss
outsb
scas
mov
jmp
or
xlat
js
push
cli
lea
lret
divl
daa
fisttps
push
mov
mov
jb
pushf
dec
cmp
lahf
hlt
sahf
cltd
stos
fnstenv
orl
add
pushf
dec
sahf
aam
loope
dec
xchg
inc
cli
lcall
pop
ja
dec
lret
lret
jl
push
push
sub
scas
push
lods
pusha
add
jns
insb
inc
add
cmp
nop
ja
std
addl
xchg
inc
jmp
movb
mov
sti
and
sub
out
movsl
cli
inc
add
push
scas
mov
out
lahf
xchg
pop
insb
jecxz
rorb
addb
pop
cmpsl
lods
and
out
addb
cmp
push
sub
hlt
sub
sarl
add
fs
pop
mov
jno
xchg
stos
xor
add
addb
push
js
rolb
outsl
addr16
push
out
adc
insl
addb
dec
std
sub
sbb
adc
fidivs
add
push
add
cmp
lock
je
cmp
dec
xchg
xor
imul
pop
icebp
loope
mov
jmp
pusha
add
add
mov
fdivr
in
cmp
dec
jns
mov
dec
test
les
sub
aaa
ja
ret
sub
test
stos
in
movsl
cmp
or
fldcw
rolb
mov
filds
dec
push
pop
and
or
pop
loop
sbb
int
jecxz
dec
and
cmpsl
scas
iret
add
fcomps
imul
js
inc
add
vpsraw
xchg
lods
rolb
dec
inc
push
or
scas
pop
ds
jae
addb
and
mov
daa
jne
sbb
dec
jo
add
or
mov
add
data16
test
frstor
int3
sub
cwtl
fdivs
inc
add
add
xor
add
imul
jge
fsubl
push
add
or
in
rcr
andl
pop
xlat
sbb
xor
clc
jne,pn
jg
add
dec
sbb
nop
loop
mov
and
jb
push
call
dec
rorl
add
lods
in
and
add
in
jo
or
sahf
fwait
lcall
add
movsb
sub
leave
sbb
mov
add
add
je
lods
pop
fisubrl
jecxz
clc
arpl
xor
add
add
push
sbb
adc
or
inc
add
enter
fs
rcl
pop
ffree
add
in
push
fs
push
pop
dec
dec
lcall
inc
pop
jecxz
sub
mov
in
and
xlat
inc
add
mov
sub
jo
xor
xchg
cs
loopne
addb
xor
flds
fs
sti
insb
daa
ljmp
enter
pop
rolb
inc
add
addb
aaa
loope
stos
cmp
out
jp
aas
jecxz
arpl
push
mov
push
add
stos
add
jbe
popf
dec
jns
pop
xchg
cwtl
push
xor
sub
push
pop
cmp
cmp
add
das
imul
test
mov
add
pop
test
sub
lahf
inc
jbe
mov
rolb
jl
push
das
sub
out
inc
add
in
cmpsl
iret
push
movsl
sbb
movsl
xchg
pop
and
add
cmp
adc
cmp
arpl
clc
sbb
sahf
sbb
mov
or
mov
inc
cmc
jl
add
add
mov
mov
sbb
addb
movb
test
xor
mov
in
out
pop
aas
sub
add
imul
add
jne
adc
out
xor
push
icebp
add
add
mov
mov
mov
inc
or
xchg
pop
jno
mov
jecxz
dec
lds
pop
push
or
cli
push
xor
add
pop
inc
in
js
mov
add
nop
movb
add
add
sbb
adc
lds
fidivl
mov
fwait
hlt
movsl
sarb
jmp
mov
push
xchg
jbe
lods
push
stos
pop
jg
and
mov
ja
mov
mov
push
or
mov
fwait
cwtl
rolb
cmp
push
call
push
jbe
and
loope
imul
xor
or
adc
dec
xchg
int
add
jnp
loope
inc
add
add
aaa
nop
xchg
inc
mov
sub
xchg
fcmovne
push
cltd
push
add
mov
loopne
xlat
std
jbe
cwtl
cli
add
aam
mov
jmp
ds
add
sbb
and
addb
int
sub
mov
xchg
cmp
add
lcall
push
dec
and
cwtl
cmp
dec
pop
jbe
add
sub
cmp
inc
add
jnp
loopne
test
clc
pop
lods
mov
add
sbb
add
add
pop
mov
les
out
jo
sub
stc
faddl
mov
sbb
js
sbb
test
fstpl
in
mov
add
sbb
ja
aam
jae
data16
jle
pop
adc
imul
sahf
push
or
push
cmpsb
sahf
gs
insl
mov
in
mov
mov
jmp
insb
push
pop
dec
pop
xchg
bound
mov
mov
xor
out
mov
out
sahf
xchg
sub
mov
or
mov
sub
lcall
jno
adc
sub
subl
jno
add
and
add
xor
mov
jo
mov
add
push
mov
inc
push
jecxz
lea
ret
addr16
lds
add
cltd
pop
xor
mov
add
cmpsl
mov
or
fsubs
fmull
xor
push
in
in
jmp
mov
push
mov
sbb
adc
ljmp
out
mov
xchg
mov
test
fistps
pop
dec
mov
andl
in
mull
add
or
add
ljmp
es
dec
adc
add
adc
in
cmp
mov
push
push
mov
mov
inc
add
lods
pop
in
icebp
imul
mov
lock
aam
jb
hlt
outsb
pop
shll
mov
add
pop
adc
cld
ja
or
jecxz
shll
cmp
shll
add
pop
inc
lock
add
in
push
adc
sbb
cmp
rorl
stos
lock
jecxz
inc
mov
mov
and
cmpsb
dec
inc
add
sub
icebp
jne
add
pusha
add
add
pop
loope
loope
jbe
add
jmp
test
fdivrs
cmp
add
jae
in
daa
arpl
aas
mov
mov
cltd
je
bound
out
popa
mov
jb
pop
dec
fnstenv
dec
test
ss
out
mov
add
bound
loope
mov
dec
add
test
sub
add
sub
dec
push
add
cmc
cmc
xchg
les
sbb
cwtl
int3
clc
in
mov
add
data16
xchg
loop
inc
mov
popa
insl
pushf
adc
addb
lret
or
push
pop
push
and
sti
sub
add
negb
in
mov
mov
add
loopne
out
xchg
dec
int3
scas
dec
rcr
in
std
ss
xor
inc
jb
xor
test
jl
add
jmp
pop
adc
rcl
pusha
add
cmc
lea
xchg
cmp
mov
sbb
std
xchg
mov
inc
add
jno
sbb
lods
add
pop
mov
hlt
dec
xchg
mov
mov
bnd
repz
push
stos
lock
adc
add
cmc
mov
fnstenv
push
es
cmp
shlb
add
repnz
or
add
ja
movb
xchg
xchg
push
add
jg
mov
add
in
movsl
sbb
test
repnz
ss
push
fwait
push
repnz
jge
push
or
xor
js
mov
pusha
add
mov
and
jle
dec
cmp
adc
inc
mov
out
aad
popa
outsb
xor
sbb
pop
rolb
das
push
sub
add
jns
notb
cmp
jno
add
lcall
push
pop
or
ja
add
dec
insb
push
ret
aad
add
pop
mov
xor
add
adc
add
or
lds
add
icebp
jae
add
in
cmp
pop
mov
ret
dec
movsb
pop
int
test
movb
test
fs
push
jl
sub
xchg
jbe
pop
aas
add
sti
data16
aam
fisttpl
xchg
xchg
and
nop
cmp
popa
add
loope
add
lock
fldcw
jo
push
jne
icebp
dec
int3
or
xor
out
and
pop
cli
dec
pop
and
push
movsb
cli
es
test
mov
or
sarl
stos
push
jecxz
gs
mov
lods
cmp
inc
add
and
sub
and
jl
repz
sti
jle,pt
dec
xor
dec
out
cmc
sti
push
sub
sub
inc
mov
sahf
insb
and
sahf
push
push
adc
push
jbe
or
xchg
adc
int
jmp
jl
add
push
jne
pushf
push
imul
rol
add
and
lret
mov
ret
fidivs
add
jge
fdivrp
xchg
in
xchg
arpl
or
push
addb
add
push
sub
lods
pop
subl
cmpsl
adc
add
jmp
pop
jp
cmp
add
lcall
cmp
movsl
divb
sub
dec
loopne
sub
jno
and
pop
mov
iret
js
xchg
out
cli
sub
dec
gs
jb
push
or
mov
cmp
outsb
int
ja
jg
add
in
xchg
fcomps
adc
mov
pop
fnsave
pop
jb
stos
and
pop
xor
sbb
fmuls
mov
xchg
popf
cs
outsl
jae
xor
cmp
inc
add
std
adc
adc
in
out
nop
adc
cmp
sub
cmp
test
inc
push
jne
cmp
popa
call
sbb
rolb
jl
add
xchg
dec
jl
push
cli
rol
jge
cwtl
cld
sbb
xor
test
testl
cmp
cli
dec
inc
add
pop
sub
push
rcrl
shl
fsubs
dec
jbe
or
rolb
add
or
movsl
push
lods
fs
pushf
dec
into
xchg
ror
add
add
popa
popa
ret
bound
cmp
and
imul
popf
movsb
sarl
rolb
jnp
sbb
push
mov
int
ficoms
push
add
jg
in
push
sbb
add
push
rol
je
push
cltd
mov
test
rcl
adc
lods
sub
lods
nop
mov
jp
mov
clc
push
stos
jnp
xchg
add
sbb
sarl
popa
sub
cli
loopne
add
shrl
mov
push
cmp
mov
ret
hlt
sub
movb
and
jl
mov
loopne
xchg
dec
lret
jno
dec
lret
ss
js
pop
scas
ret
push
dec
xor
and
pop
out
lods
mov
push
in
mov
adc
push
icebp
xchg
cmp
mov
dec
sti
insb
dec
adc
and
push
jbe
mov
xor
das
and
sbb
testl
jnp
push
add
in
push
mov
rolb
add
rorl
outsl
rolb
push
out
addb
cs
test
repnz
push
and
inc
add
and
xor
jno
add
adc
sbb
inc
add
dec
mov
push
fnstsw
imul
jne
add
sbb
push
pop
psrlq
test
ret
ret
repnz
out
mov
mov
cmp
cmp
dec
inc
add
ljmp
adc
std
mov
add
addb
leave
sbb
dec
cmp
gs
repnz
and
jmp
add
ret
mulb
imul
jmp
mov
rcr
vmulss
push
mov
je
scas
jbe
ret
inc
add
stc
dec
fwait
cmc
out
push
sub
cltd
stos
aaa
mov
add
out
pop
or
add
inc
add
pop
mov
cmpsl
int
outsb
or
cltd
in
movsb
popf
xor
add
leave
gs
repz
add
rcll
cs
push
cwtl
std
das
mov
imul
push
push
xor
adc
add
xchg
cmp
mov
adc
xchg
rep
test
jecxz
xor
mov
and
mov
ficompl
mov
pop
or
in
pop
xchg
pop
das
popa
fucomip
int
loope
lret
adc
repnz
mov
arpl
lock
fisubs
sahf
push
scas
inc
dec
subl
pop
in
adc
push
cmp
jo
cmp
shr
rclb
loopne
add
fdivrs
data16
push
into
pop
sub
add
add
push
fildll
add
nop
mov
pop
adc
lods
add
cmpsl
mov
addr16
sahf
mov
mov
add
fs
aas
mov
mov
aam
mov
dec
or
iret
pop
stos
sub
lds
or
in
lahf
or
outsl
pusha
add
test
add
push
js
mov
mov
add
or
outsb
repz
int
add
xor
cld
fistpl
mov
xlat
imul
test
nop
inc
add
adc
leave
dec
push
sbb
aad
insb
stos
mov
jg
sbb
inc
mov
mov
repz
add
pusha
add
lahf
pop
dec
andl
dec
enter
lahf
and
clc
pop
inc
in
sbb
add
pop
test
jmp
jecxz
ret
sbb
add
scas
sub
or
add
das
fwait
pop
std
cmp
in
push
pop
pop
lahf
jne
add
jmp
or
push
stos
imul
stos
push
and
jno
jnp
lods
mov
movsl
inc
add
sbb
add
in
fwait
into
fmul
mov
icebp
mov
leave
fbstp
sbb
add
sub
jecxz
mov
aam
xlat
add
mul
inc
add
fs
jbe
inc
imul
lcall
test
add
iret
mov
mov
stos
jge
jecxz
inc
add
adc
mov
ljmp
popf
repnz
fistpl
bound
lcall
fstl
push
repnz
mov
jb
loopne
into
ja
add
mov
dec
add
mov
add
add
enter
add
ret
call
add
sahf
clc
pop
lods
lock
dec
mov
and
pop
negb
iret
jle
xchg
rorl
sbb
test
pop
daa
cmp
stc
mov
mov
je
add
or
add
das
test
daa
sbb
jae
push
push
aam
sbb
aaa
adc
cmc
jge
add
pop
fiadds
add
cmp
xor
aas
lcall
sbb
repnz
add
fdivr
rcrl
inc
add
fcmovnu
ret
mov
arpl
jp
popf
sub
lea
mov
je
cmp
dec
pop
push
xchg
stos
pop
xor
and
push
xor
xor
mov
les
loop
xchg
cltd
jecxz
test
adc
cmpps
ljmp
std
filds
add
mov
mov
int
ja
outsl
lcall
sub
mov
xor
nop
cmp
sbb
add
cmp
add
add
inc
cmp
jmp
push
loopne
int3
dec
xchg
dec
cld
push
adc
add
xor
add
jo
ss
jns
pop
mov
and
mov
sbb
fsubrl
lods
xlat
sub
mov
xchg
cmp
fcoml
dec
mov
sbbl
sbb
stc
add
fisttpl
cmp
add
jle
add
filds
lret
test
mov
cmp
jl
sbb
dec
and
aad
subl
add
add
mov
mov
sub
ret
adc
roll
xchg
out
inc
add
cmp
sbb
push
mov
pop
fnstcw
inc
lea
shl
jo
pop
insb
mov
es
and
add
cli
and
jmp
push
or
repz
leave
cmp
sbb
jmp
or
fsts
dec
rolb
loopne
ret
inc
push
add
adc
loopne
lds
add
lret
add
mov
jbe
sarl
insb
and
push
out
jmp
xchg
mov
jns
pop
sub
iret
mov
or
sub
add
mov
int3
int3
sahf
les
mov
add
cmc
addb
push
popf
push
fs
xchg
and
fnsave
lock
or
pop
and
cmp
adc
xchg
or
xor
cmc
lods
daa
call
inc
add
arpl
mov
jle
cwtl
fcoms
cmp
test
je
iret
bound
or
xchg
out
dec
cmp
mov
iret
roll
popa
dec
out
les
inc
add
aad
mov
pop
lock
rolb
pop
iret
cs
bound
loope
movb
notl
push
push
cmp
les
pop
scas
jp
or
js
cmpsl
jns
add
push
sti
popf
xchg
bound
add
insl
mov
cld
xchg
fdivs
imul
xor
cmc
mov
std
out
lret
push
std
shll
mov
not
inc
stc
addb
push
xchg
arpl
mov
add
mov
push
add
loop
lods
dec
movsb
pop
cmp
sub
imul
add
jbe
out
cs
das
in
loopne
movsl
in
xchg
pop
add
mov
push
bound
imul
loopne
push
out
aaa
icebp
lods
out
mov
mov
mov
add
cmp
and
push
cmp
mov
xor
adc
jbe
pop
pusha
add
xchg
inc
add
neg
push
fucom
xchg
push
mov
sub
cmpl
xor
enter
push
dec
and
push
mov
test
pop
repnz
push
jno
pop
or
jge
in
stos
cmp
into
dec
and
addb
cwtl
xchg
notb
add
imul
leave
stc
and
sbb
ljmp
cli
pop
arpl
aas
pop
push
movl
fs
sub
aaa
jmp
pop
sbb
movb
cltd
cwtl
jnp
jnp
loope
sti
jmp
fsubl
and
movb
mov
sub
sub
xor
loop
add
add
add
sub
scas
mov
jne
cli
cmp
add
jnp
xchg
and
dec
mov
xchg
push
into
les
fistpll
sub
icebp
ret
cmp
xor
or
daa
leave
js
mov
add
fdivl
sahf
inc
stos
push
enter
bound
mull
and
fmull
sbb
fldcw
mov
push
test
cmpsl
mov
add
test
repz
mov
and
xor
xor
nop
movb
mov
adc
int
stos
andl
lods
outsl
mov
add
ret
xor
add
mov
clc
into
imul
inc
negb
out
aam
addb
test
jp
pushf
inc
mov
test
sbb
sbb
cmp
lods
cmp
mov
data16
mov
add
ret
add
mov
mov
iret
dec
fwait
inc
add
sub
out
aad
in
jp
int3
xor
cmp
inc
add
mov
imul
sbb
out
xchg
fisttpl
shl
jne
movsb
addb
into
out
fnstcw
icebp
push
aad
cltd
pop
icebp
xlat
push
mov
add
inc
add
add
add
pop
pusha
add
fdivr
fcomi
inc
add
push
push
data16
mov
or
shlb
adc
xchg
dec
lcall
add
adc
mov
add
jbe
lock
jecxz
dec
jnp
inc
cmp
mov
int
sahf
rolb
inc
add
out
cld
dec
and
adc
push
icebp
mov
popa
lock
ljmp
add
in
add
movsb
cltd
sub
mov
test
ror
cld
inc
add
inc
add
fs
imul
test
and
dec
arpl
xor
outsl
xor
leave
lret
dec
test
jo
push
add
or
inc
rolb
lock
add
cli
lret
loop
ficoml
and
or
and
add
nop
loopne
sub
push
dec
movsb
sbb
and
repz
int3
dec
sub
or
add
es
add
cmp
pop
ss
xor
inc
mov
std
pop
ret
lret
js
xor
sub
rolb
add
xor
roll
sbb
sub
push
imul
sahf
jmp
popf
loopne
sbb
pop
add
add
mov
sub
mov
jo,pn
and
std
sub
xor
or
cmpsl
xor
jmp
push
leave
sti
jl
mov
add
mov
add
mov
xchg
rcrl
sbb
mov
outsb
lret
xchg
int3
xchg
fwait
sahf
nop
loop
add
cmp
add
push
dec
inc
add
pop
cmp
dec
push
dec
in
add
add
dec
adc
out
mov
test
add
dec
and
pop
mov
adc
lcall
pop
fldenv
sbb
jecxz
gs
pop
divb
loopne
add
cmpsb
lret
cmp
or
imul
lds
dec
and
sti
push
rclb
icebp
jo
bound
xchg
jbe
mov
incb
sarl
mov
out
sub
cmp
repnz
gs
bound
pop
mov
jge
pop
addr16
dec
xchg
out
shrb
sbb
and
lret
xchg
jmp
fisubrl
out
popa
out
jp
imul
mov
outsl
xchg
mov
sub
mov
mov
dec
pusha
add
fdivrs
add
in
ljmp
test
mov
test
cmpl
xchg
loopne
jmp
push
sub
js
stos
adc
xchg
xchg
mov
adcl
in
jo
cmp
inc
add
lock
dec
mov
pop
in
push
cmpl
mov
cmp
dec
push
jbe
mov
je
xchg
dec
jne
rol
add
mov
les
popa
pushf
cmp
incb
mov
lea
lods
rclb
incl
jo
fcomip
scas
mov
cmp
xor
jo
or
sbb
into
mov
add
das
inc
add
inc
in
outsb
cli
add
add
enter
leave
lret
movb
es
outsb
cltd
mov
xor
push
inc
sbb
idivl
jns
inc
je
mov
fnsave
punpcklbw
sbb
iret
fiaddl
add
icebp
test
xor
ljmp
loopne
lcall
push
cmp
mov
xor
mov
push
sbb
icebp
and
jle
dec
jecxz
jae
push
lahf
cmp
add
shrd
jnp
xor
cmp
mov
loope
add
push
inc
add
test
mov
or
mov
sbb
imul
sar
sbb
jnp
jge
add
xlat
shlb
aad
and
jle
daa
outsl
xor
push
or
rcll
fildl
xor
pop
mov
into
pop
scas
scas
push
xchg
addr16
loop
lock
divb
aam
add
mov
aaa
iret
inc
add
in
mov
or
jmp
cmpsl
sahf
js
sbb
dec
setp
mul
pop
cli
lcall
lods
or
pop
sub
shll
adc
cmc
rolb
pop
xchg
pop
mov
ljmp
call
adc
mov
xchg
fs
mov
test
pop
push
mov
mov
add
adc
mov
int
inc
popf
movb
fistps
es
hlt
divb
hlt
cmpsb
push
pop
cmpsb
dec
lods
mov
push
mov
js
sbb
movsb
stos
lock
dec
inc
sub
or
jge
xor
movsl
js
add
imul
movsb
jno
pop
idivl
sbb
xor
es
jmp
iret
sub
iret
mull
xchg
cltd
jmp
push
adc
jmp
addb
aaa
ljmp
clc
mov
add
test
movsl
add
sub
jmp
nop
pop
mov
adc
dec
cwtl
cmp
adc
ret
sbb
movsl
mov
add
mov
add
push
inc
add
jbe
fisubs
xchg
imul
jae
mov
mov
int3
add
repz
add
stc
hlt
in
andl
mov
jmp
popa
jo
movsl
lods
sbb
sbb
mov
add
add
jge
cli
pop
dec
scas
cld
cmp
push
add
out
addb
or
pushf
xchg
jne
stos
das
sbb
jle
jnp
stos
frndint
cltd
dec
cli
pop
mov
es
repnz
iret
lods
les
test
sbb
cltd
pop
cmpsl
jae
rorb
je
movb
xor
push
mov
push
in
jbe
fiaddl
sub
add
sti
call
sub
imul
and
daa
fbld
xchg
pop
pop
aas
shlb
lret
mov
and
pop
lcall
inc
add
mov
add
pop
push
mov
loop
popl
and
push
add
cmp
push
enter
movb
dec
xchg
shl
mov
dec
mov
vpsubb
popf
fcmove
cwtl
sahf
in
cmc
mov
inc
pop
push
jl
dec
jmp
mov
add
jle
push
loopne
xor
mov
or
and
dec
out
ficoms
pushf
jb
repz
outsb
lea
out
xor
add
es
bound
add
repnz
in
cmp
xchg
pop
and
fcom
jno
jmp
mov
cmp
add
mov
lret
loope
jb
into
shll
add
add
stos
jno
sbb
push
jp
mov
sub
dec
mov
pop
mov
inc
imul
and
mov
pusha
add
dec
sbb
imul
fwait
cltd
adc
dec
cltd
cld
addb
add
mov
jnp
mov
push
xchg
mov
jmp
jb
add
sub
push
mov
aaa
dec
stos
clc
ret
add
adc
and
fldcw
push
add
or
add
ret
dec
or
addb
push
and
add
mov
sbb
pop
mov
test
xor
add
clc
or
add
add
jl
push
or
ljmp
and
shr
insl
add
adc
adc
add
xchg
cmp
xor
pusha
add
scas
dec
addb
add
pop
inc
xchg
push
sti
outsb
fstpt
pop
imul
addr16
add
aaa
push
add
mov
inc
cmp
call
out
and
lock
fstpl
in
repz
or
sbb
mov
iret
mov
jmp
add
and
bound
mov
iret
jmp
lock
pop
lret
popa
shlb
mov
movl
rclb
mov
add
repnz
fbstp
mov
add
push
xchg
pop
cltd
jmp
xchg
mov
adc
enter
xchg
fcoms
les
xchg
fcmovnbe
movl
leave
adc
psubd
add
xor
bound
pop
int
dec
movsb
xchg
sbb
add
ret
jns
mov
aad
fwait
jae
pop
sbb
loop
add
pop
adc
or
std
or
repnz
jns
jge
and
jmp
mov
pop
mov
fsubrs
dec
and
jo
es
add
shlb
xor
mov
shll
cld
shll
add
xchg
lds
inc
add
add
xchg
pop
push
xchg
xchg
inc
es
addr16
pop
pop
mov
fbstp
pop
bound
test
push
fnstcw
ss
sub
add
insb
sub
pop
test
adc
movb
mov
pop
insl
fwait
neg
out
ds
add
pop
push
cmpsl
fdivs
sub
add
add
lret
or
push
pop
push
add
jecxz
loop
scas
int3
roll
adc
out
lcall
ss
push
sbb
push
mov
std
mov
add
xchg
mov
imul
ljmp
or
lea
loopne
loop
inc
push
insb
cli
fwait
scas
out
lods
sub
adc
ret
popf
cmpsb
sub
xor
stos
jo
add
adc
scas
in
sbb
mov
mov
adc
inc
pop
cmp
cwtl
repz
lock
aad
pushf
pop
cltd
test
rcr
addb
stos
test
dec
push
js
adc
push
into
and
adc
dec
sbb
int
cmc
jp
sub
leave
push
xchg
iret
lock
sbb
or
les
fpatan
ficoml
jle
jg
pop
call
das
mov
adc
test
rolb
iret
jae
jae
gs
add
sub
iret
inc
popa
hlt
jo
adc
mov
jns
aad
cmp
add
inc
in
enter
out
lcall
mov
int
jae
movsb
xchg
aaa
xchg
rolb
in
idivl
sahf
rcrl
sbb
mov
pop
mov
cltd
add
xor
push
mov
mov
and
cld
lods
rorl
mov
sahf
mov
sbb
adc
pushf
mov
movsb
lock
das
jbe
rolb
movb
mov
and
mov
cmp
push
mov
imul
aaa
fnstenv
adc
push
sub
stos
dec
mov
bound
sbb
pop
pop
pop
and
dec
jle
inc
push
mov
shll
sbb
dec
cmp
push
add
jbe
mov
inc
js
cld
cltd
movsb
jno
jmp
mov
push
and
adc
jnp
fsts
popa
insl
or
pop
mulps
ror
leave
mov
repz
add
mov
lcall
mov
daa
xchg
cmpsb
pop
mov
push
dec
insb
cld
test
outsl
cmc
dec
adc
sub
dec
cmp
ret
add
test
addb
sbb
notb
push
das
in
adc
push
sbb
outsl
imul
roll
inc
sbb
add
hlt
push
xor
sbb
sub
xor
sbb
add
fwait
jp
add
add
pop
cmc
scas
sti
push
cmc
inc
add
jb
adc
mov
jge
imull
add
inc
adc
cmp
xor
adc
stos
pop
jmp
inc
add
pop
push
add
and
ja
mov
pop
add
mov
mov
loopne
lahf
push
ss
mov
push
add
jns
push
sub
adc
push
fmull
add
xor
and
nop
and
cwtl
sub
xchg
insb
cmp
xlat
dec
adc
dec
sbb
inc
pop
mov
add
clc
jo
add
cmp
paddw
pusha
add
push
inc
call
icebp
cltd
stos
enter
mov
fiaddl
push
jns
adc
das
add
mov
jmp
add
push
fildll
aas
insl
dec
and
pop
cmc
ljmp
or
test
js
push
fsubrp
sub
arpl
lock
imull
add
mov
scas
mov
das
fwait
dec
cmp
imul
pop
clc
cwtl
mov
orl
out
cmpsb
insb
add
cmp
dec
cmp
add
dec
adc
pop
jl
div
jecxz
cs
add
fistpl
sub
or
add
aam
or
clc
fidivs
pop
cmpsl
movsl
pop
js
or
jns
movb
aad
sub
aaa
pushf
cmpsb
sbb
pop
or
cmc
mov
pop
mov
push
and
lds
xor
ljmp
inc
add
lcall
paddb
lcall
cmp
mov
add
imul
fs
cmp
jnp
add
fwait
adc
stc
out
xor
out
ret
add
insb
rcrl
push
popa
mov
sbb
rolb
cmp
push
lret
cmpsl
inc
add
lret
ret
mov
push
dec
dec
mov
cmp
scas
xor
cmpsl
test
push
and
movb
lods
mov
mov
je
adc
bound
mov
std
fdivp
pop
arpl
dec
mov
push
and
adc
pusha
add
cmpsb
mov
fistl
imul
add
and
addb
or
jl
sub
mov
ret
cmp
xchg
test
dec
movb
aaa
loopne
add
mov
lea
or
aas
js
addr16
pop
mov
and
jbe
movsb
dec
ret
sbb
or
push
insb
pushf
sub
xlat
dec
popf
fnsave
ficompl
mov
out
ljmp
push
add
push
fistl
clc
and
sar
ljmp
pop
rcrl
cmp
leave
rcrb
push
xchg
lock
lcall
sub
xor
sti
adc
ljmp
mov
ret
add
mov
lret
or
sub
fisubrl
jno
inc
add
test
and
mov
cmc
and
mov
xorl
xchg
arpl
es
dec
mov
xchg
cltd
mov
lods
clc
push
fisubrl
test
adc
bound
mov
jmp
or
lahf
cs
add
xchg
aam
pop
dec
icebp
movsb
xor
sbb
and
sbb
jl
adcl
sarl
xor
xchg
adc
mov
add
outsb
jl
mov
jmp
push
sub
push
andl
shll
iret
push
push
add
inc
add
push
xor
rclb
loope,pt
dec
xchg
shrb
fistpll
lret
dec
pop
jmp
mov
pushf
sub
in
jno
cmpl
shl
lahf
sub
xchg
lods
or
add
jl
mov
mov
jg
add
xchg
nop
and
add
cmc
scas
pop
adc
xor
dec
jae
adc
xor
stc
pop
and
mov
ds
loopne
movsl
mov
xchg
inc
mov
cmp
xor
mov
scas
sahf
xor
adc
lret
jp
adc
pop
loop
addb
add
adc
add
add
or
leave
popl
add
sub
inc
add
scas
addb
repz
dec
adc
mov
sub
add
inc
rolb
or
rclb
sahf
pop
outsl
sub
mov
add
pushf
xchg
mull
popf
and
sub
push
jo
dec
ja
lods
sub
mov
xchg
sbb
inc
or
push
mov
and
lods
repnz
sub
sti
pop
and
test
xor
jne,pn
add
push
jecxz
add
xchg
push
call
mov
in
mov
jno
int
loop
out
sub
jp
sbb
in
xor
repz
jno
xor
int
pop
jg
shl
jno
loopne
ja
pop
jns
xor
lock
cmp
add
xchg
into
mov
mov
push
mov
mov
add
vmwrite
cmp
mov
pusha
add
insb
cmc
xor
lock
mov
lret
sbb
push
jo
add
movsb
sbb
or
icebp
and
and
jb
iret
adcl
sbb
shll
add
repz
fidivl
add
add
into
test
lahf
or
cmp
add
jnp
gs
andl
cmc
scas
popf
mov
arpl
je
mov
add
pop
mov
sti
xor
sub
add
icebp
mov
lret
test
rolb
pusha
add
push
add
pop
shrl
and
sub
sub
mov
push
add
add
aas
or
repz
add
gs
mov
add
xchg
xchg
push
pop
push
and
adc
mov
inc
add
outsb
addr16
out
or
add
xchg
pop
or
fstpl
mov
ret
push
inc
cli
mov
mov
mov
cmpsb
inc
add
out
push
mov
and
mov
into
mov
scas
push
out
xchg
xchg
shll
addr16
cmpsb
xor
dec
mov
pop
lods
jae
inc
inc
jge
add
pop
lock
int
jo
and
cltd
pusha
add
xchg
jb
loope
jno
push
nop
lcall
popl
popf
mov
gs
and
mov
clc
push
and
inc
in
inc
add
aas
push
push
cmp
add
and
pop
ja
lea
cmc
mov
ljmp
pop
adc
loop
iret
pop
nop
test
xchg
sbb
xor
push
pop
icebp
js
out
mov
adc
insb
sahf
jae
fxch
addb
add
ljmp
xor
aad
xor
cmp
add
pop
cmp
pop
push
pop
dec
pushw
mov
sub
dec
les
out
fs
mov
loopne
mov
pop
fstl
add
mov
mov
jecxz
xor
sub
out
sub
cwtl
cld
mov
loop
inc
add
jbe
pop
cmp
mov
pop
push
and
mov
nop
aas
dec
sub
mov
arpl
sbb
jge
jnp
add
mov
pop
jg
lret
loop
xchg
adc
stc
mov
jge
mov
into
xor
fstl
and
push
inc
or
sub
mov
mov
pop
mov
mov
inc
cmp
enter
pop
fidivs
push
enter
add
mov
add
mov
push
add
fstps
and
jge
add
insl
test
les
mov
jecxz
or
push
insl
pop
jl
mov
into
push
add
inc
and
out
popa
and
fwait
jns
jae
lret
movsl
push
add
adc
stos
mov
jnp
add
xchg
pop
cmp
repnz
sub
push
xor
loope
sar
pop
inc
add
add
aaa
pop
sub
popa
fcompl
fimuls
mov
pusha
add
test
jl
and
push
mov
popf
dec
push
inc
add
aas
jo
lods
jg
imul
mov
mov
and
lock
insl
mov
add
ja
mov
add
add
inc
imul
jbe
test
pop
sbb
jmp
shll
or
cmp
ljmp
rcll
shrb
mov
fwait
imul
ret
dec
push
and
sbb
cmp
sahf
sub
das
loop
push
inc
add
fisttps
xchg
lods
ret
add
cmpsb
popf
jl
mov
mov
push
dec
mov
mov
jne
xor
stos
ret
xchg
fistpl
mov
jmp
mov
add
js
inc
sbbl
xor
fidivrs
hlt
xchg
in
jb
pop
mov
mov
add
cli
mov
outsl
ret
mov
clc
ss
nop
fcmovnbe
sub
add
add
pusha
add
dec
push
out
jge
mov
stc
dec
out
daa
dec
inc
adc
pusha
add
add
sbb
cs
add
mov
jle
push
negl
jb
cld
inc
add
add
push
mov
add
cmp
lret
int3
sub
mov
pop
movb
jb
add
arpl
xchg
test
int
into
pushf
lea
cmp
mov
jle
xor
inc
xchg
hlt
cs
push
sarl
dec
sub
inc
enter
push
add
je
popa
xor
test
pop
sub
or
cld
cmp
inc
add
stos
std
out
scas
sti
or
loopne
mov
adc
push
out
cmpsl
cwtl
jae
sbb
bound
jmp
inc
add
mov
xchg
push
and
loope
scas
in
inc
cmp
mov
loope
subl
ljmp
xor
dec
dec
jmp
xchg
loopne
cli
xor
xchg
add
nopl
sti
or
xlat
rolb
add
xor
jecxz
xchg
mov
sub
add
jbe
lods
addr16
out
cmpsl
scas
mov
adc
stos
decb
mov
push
test
filds
add
clc
xor
les
sahf
sbb
cmp
push
mov
mov
mov
scas
sbb
stos
adc
xchg
cmp
sbb
mov
incl
mov
out
mov
add
mov
xchg
es
addb
add
roll
xor
cmc
hlt
push
adc
imul
lcallw
add
xchg
nop
aaa
mov
aas
fisttps
lret
cmpsb
cmp
imul
add
xchg
or
mov
in
push
popf
orl
xchg
adc
adc
aaa
movsl
push
push
jl
aaa
cmpsw
mov
mov
mov
pop
jp
cmpsb
xchg
jmp
mov
in
cs
addb
in
roll
mov
scas
pop
aaa
clc
icebp
ret
jge
add
or
fwait
test
pusha
add
cmpsb
sbb
push
fwait
add
rolb
mov
stos
movsl
bound
lcall
xchg
mov
mov
repz
jbe
in
mov
adc
mov
in
sub
fs
push
movsl
push
aas
dec
push
mov
fmuls
arpl
in
push
push
jnp
xchg
loopne
stc
addb
lods
clc
addb
adc
xchg
stos
in
mov
pop
test
add
dec
aaa
cs
xor
outsb
pushf
rorb
push
nop
cld
nop
pop
push
insl
jns
xor
std
jne
mov
add
xchg
shll
data16
xchg
inc
add
push
rolb
jno
mov
repz
and
sarb
mov
pop
ret
insb
cmp
add
or
mov
mov
inc
nop
movsl
xchg
imul
add
sub
dec
and
mov
add
push
nop
lods
rcr
or
sti
inc
add
add
dec
addb
pop
lret
into
loopne
lahf
or
aas
or
into
dec
push
stos
fldt
cld
dec
sbb
cld
arpl
aad
and
jecxz
inc
push
sbb
stos
push
jb
lahf
stos
enter
cld
imul
or
pop
mov
push
cli
test
rcrb
mov
data16
mov
mov
movsb
mov
add
repz
test
pop
test
test
mov
adc
push
add
test
enter
push
in
push
cmc
fsubrs
vunpcklps
cmp
push
xlat
cs
imul
xor
cmp
int
cmc
or
cmp
xor
add
sub
test
cmp
jne
adc
ficoml
xlat
xor
push
lods
push
repz
rolb
int
pop
sub
scas
dec
adc
cmp
add
cmp
imul
ret
adc
add
adc
sbb
movsl
into
adc
xchg
shll
icebp
popa
dec
lods
add
dec
sbb
or
lods
add
mov
fnsave
ret
and
clc
lahf
mov
addb
pop
sub
mov
lds
add
fbstp
or
sti
sub
cmp
arpl
les
insl
leave
pop
or
ret
dec
mov
pusha
add
mov
adc
bound
rcl
dec
push
jbe
sbb
lods
clc
jbe
inc
push
out
insb
inc
mov
pop
jne
rcrl
sbb
xor
push
add
inc
add
insl
xor
add
jno
push
sub
jecxz
jle
incb
pop
loop
mov
add
movsl
mov
dec
inc
and
sub
add
pop
lret
lds
mov
sahf
rolb
inc
fldcw
cmp
out
mull
xchg
popa
in
xor
inc
add
push
lds
addb
push
movsb
pop
add
adc
adc
mov
add
out
mov
int3
lahf
arpl
out
bound
and
add
xchg
aad
add
popa
push
lods
mov
mov
jle
mov
cmp
push
in
push
rclb
fsubrs
sbb
mov
call
xchg
leave
push
cld
xchg
xchg
dec
xchg
jno
test
les
cli
sub
sbb
add
jle
mov
xchg
repz
ss
daa
sbb
aam
add
xchg
movsb
and
sbb
test
and
mov
lret
add
inc
add
rolb
sbb
imul
add
or
mov
mov
sbb
cmp
cmp
xchg
ljmp
imul
sub
sub
pop
dec
mov
out
sbb
inc
add
xor
movb
loopne
cvtps2pi
inc
add
ret
mov
add
stos
mov
popa
or
cmc
mov
add
mov
xor
and
and
push
pusha
add
popf
daa
pop
nop
fs
add
add
add
ret
and
adc
bound
test
add
rcrb
sar
jno
addb
push
out
icebp
pop
test
fsubr
dec
loopne
sbb
mov
adc
add
movsl
jo
add
fldcw
stos
cmp
insl
ljmp
mov
fists
cmp
test
pushl
mov
loop
push
es
into
mov
jns
daa
cmc
sbb
das
push
lds
add
mov
test
shl
or
add
pusha
add
adc
add
scas
mov
jb
push
enter
xor
adcl
call
add
les
mov
and
dec
pop
mov
push
ret
xchg
aas
addr16
mov
or
add
and
cmp
mov
repnz
cmpsl
test
add
ljmp
mov
dec
mov
sub
out
imul
pop
jp
xor
jg
xchg
xor
add
test
enter
add
movsl
lret
clc
rorb
mov
cmpsb
adc
aad
add
pop
shrl
out
iret
sbb
inc
add
in
cmp
scas
jl
hlt
inc
cmp
int
ja
pop
call
push
dec
sar
jecxz
cmp
mov
stc
cmp
ret
mov
dec
sub
add
lock
xlat
adc
ficoml
xor
aad
int
ret
push
filds
mov
imull
je
pop
lahf
into
cs
add
xchg
and
mov
aad
and
std
lods
roll
and
push
cltd
iret
sbb
xor
sub
or
sub
roll
add
mov
inc
add
fldpi
xchg
cltd
xorl
rep
cli
jae
add
sti
jo
addb
repz
add
xchg
lret
out
cwtl
or
mov
add
popa
adc
jge
xor
and
arpl
aam
mov
fwait
pop
cmp
data16
and
int
adc
dec
loop
icebp
push
rol
cwtl
sti
pop
push
fildll
jp
iret
xchg
jae
mov
insb
xor
cwtl
sahf
mov
jo
adc
test
sbb
mov
sbb
xor
outsl
clc
dec
movb
aam
outsl
fs
jmp
mov
add
mov
dec
jl
adc
pop
ds
inc
add
lds
cmp
loop
jl
out
sarl
mov
or
mov
mov
fdivrl
mov
jns
xor
add
mov
jo
add
outsb
aad
imul
jnp
addb
add
or
xchg
imul
add
int3
jae
faddl
movsl
vmread
push
data16
aas
xlat
or
insb
icebp
cltd
and
mov
daa
add
mov
pop
fadds
ja
fisttps
in
leave
frstor
movsl
jecxz
xchg
xor
push
adc
and
arpl
aad
jge
adc
add
fadds
pusha
add
leave
aad
add
int3
jge
adc
je
stos
fs
fisubrl
pop
cld
push
sti
notl
jmp
stos
push
mov
xlat
add
ljmp
xor
mov
inc
add
add
adc
sbb
cmp
sahf
or
mov
sub
or
and
inc
pop
push
push
in
sahf
or
pop
outsl
lret
push
push
ja
stc
push
and
les
xchg
jg
xor
add
sbb
fldcw
push
xchg
call
xchg
lods
mov
xor
xrelease
dec
aaa
push
call
mov
xor
push
add
cltd
movsl
fdiv
out
sub
daa
inc
add
jne
mov
or
push
or
popa
in
nop
je
out
cmp
push
decl
dec
mov
xor
inc
add
test
jb
aas
in
sbb
pop
cs
fdivs
clc
xchg
enter
and
andl
push
xchg
out
int3
or
pop
pusha
add
insl
mov
mov
jne
pop
and
out
lcall
jno
add
inc
add
stos
stc
or
xor
addb
pushf
test
mov
xchg
mov
add
adc
sbb
jge
fs
lret
and
nop
sti
dec
ja
inc
add
in
jp
push
lea
test
cmp
jb
push
add
add
nop
mov
dec
pop
divb
xchg
and
sub
adc
mov
sbb
aad
or
jns
add
inc
add
inc
add
outsb
fbstp
rcrb
loope
call
clc
xor
ds
add
das
outsb
gs
add
sub
in
add
add
add
ret
mov
push
add
pushf
in
adc
bound
inc
add
xor
inc
add
cltd
push
or
add
add
in
mov
outsb
xchg
add
mov
inc
add
push
roll
movb
mov
loope
fsubrs
clc
arpl
bound
call
fs
in
jge
jno
jge
push
mov
loope
ljmp
add
add
pop
sub
lcall
clc
pop
lcall
ljmp
hlt
xor
sahf
movsb
test
loop
jmp
scas
mov
lret
inc
xor
mov
std
mov
inc
inc
jecxz
enter
ja
add
call
ja
jb
jb
mov
mov
jecxz
pop
jo
inc
mov
jmp
in
dec
jo
sbb
dec
movb
push
push
call
pop
loopne
leave
or
xlat
push
test
dec
dec
cs
dec
pop
shrl
movsl
inc
cmp
add
ret
pusha
add
add
add
cli
inc
add
sub
movsb
inc
jg
sub
mov
mov
shrl
cltd
mov
push
test
xchg
ret
loopne
xchg
add
add
lock
add
jmp
push
out
pusha
add
xchg
mov
leave
jb
add
jle
out
add
int3
fdivrs
lds
add
mov
pop
push
fcoml
nop
loopne
pop
stos
int3
xor
lcall
lods
movb
cwtl
jb
mov
mov
insb
int3
lahf
sbb
out
movsb
aas
pusha
add
mov
test
loop
or
rolb
packssdw
jge
movsb
xchg
mov
mov
mov
xchg
js
fs
sbb
dec
arpl
jno
sub
xchg
lods
insb
out
or
add
pusha
add
and
call
xor
add
mov
add
fcoms
pop
loop
les
test
inc
lods
jmp
add
fs
push
fmull
and
dec
repnz
jae
call
add
std
add
push
movsb
xor
add
lock
aaa
mov
pusha
add
sti
pop
cmpl
xor
ljmp
and
test
and
in
dec
adc
xchg
xor
stc
in
xchg
fnstcw
sbb
adc
cmp
repz
and
mov
nop
mov
daa
push
adc
xchg
lods
jns
movb
dec
sbb
mov
jp
fdivl
dec
mov
add
add
int3
int3
jg
xor
or
add
add
inc
add
repz
into
mov
les
jmp
mov
dec
nop
movb
cltd
addb
mov
sti
sbb
dec
mov
sahf
fcom
mov
mov
lock
cltd
test
add
and
stc
and
mov
add
jbe
mov
xchg
pushf
cld
sbb
sub
add
jge
divb
mov
std
lret
jmp
xor
icebp
imul
scas
jae
mov
in
sub
mov
cmp
mov
mov
sahf
jl
pop
xchg
cmp
sti
jne
and
sbb
lds
lods
fdivrl
stos
add
orl
gs
icebp
loop
ror
adc
imull
in
jge
adc
sub
scas
jnp
add
cmpsb
daa
test
mov
push
rolb
add
lds
pop
pop
add
jae
cmp
std
fsubl
pusha
add
xlat
sub
js
push
lea
add
pop
hlt
imul
mov
inc
add
dec
dec
fs
movb
notl
das
lcall
dec
outsb
or
sub
fistps
pop
add
mov
push
xor
inc
add
ret
add
mov
or
mov
push
loop
push
pop
cwtl
dec
incl
xchg
ja
push
test
push
repz
pusha
add
xchg
jge
data16
dec
jo
cmp
dec
or
in
loop
scas
lods
xchg
cltd
jmp
add
mov
and
sbb
test
xchg
mov
sub
in
xchg
mov
sub
sbb
and
or
adc
jmp
aas
pushf
hlt
sub
lret
out
out
add
daa
sar
sbb
lcall
cs
inc
mov
test
popa
pop
sub
add
add
adc
pop
lods
push
sbb
mov
fcomip
inc
add
pop
rorl
shl
fnstenv
scas
or
xchg
mov
push
fsubs
jle
add
add
add
hlt
xor
imul
push
cmp
outsb
in
lret
imul
movsb
pop
jb
addb
sub
jno
lock
test
sahf
pop
pop
data16
cltd
or
adc
fists
movb
call
add
jo
add
jne
inc
add
sbb
int3
jge
add
fisubrs
add
jo
pop
sbb
mov
ss
repz
add
xchg
dec
inc
test
clc
lea
movb
jbe
int3
icebp
js
add
bound
ficoms
mov
add
mov
ja
dec
sahf
in
das
into
mov
mov
divb
pushl
pop
sub
inc
add
add
icebp
mov
lods
sub
dec
sub
add
add
imul
add
or
add
outsb
jecxz
cmpsb
xchg
addb
push
sub
adc
into
fs
hlt
jg
loope
jp
bound
mov
mov
add
adcl
pop
addb
adc
flds
imul
push
jbe
mov
push
aam
cmp
mov
loop
mov
mov
add
mov
cmc
ror
xor
inc
add
add
enter
daa
fsubrl
add
loop
int
outsb
mov
dec
out
std
add
rolb
jbe
ljmp
sbb
add
cmp
push
push
sub
ret
enter
fistps
add
lcall
in
push
mov
dec
jns
add
mov
aam
jmp
das
mov
cwtl
test
adc
mov
jno
add
scas
int
scas
mov
push
popf
fstpl
adc
xchg
cs
push
div
cmp
subl
xor
xor
lods
shrl
xchg
add
or
or
comiss
cmp
adc
insl
mov
add
push
xchg
std
outsl
arpl
test
push
jno
fisubrs
lods
rolb
mov
mov
loop
mov
insb
rcr
test
out
in
ljmp
je
inc
add
hlt
mov
add
mov
mov
dec
mov
or
add
sbb
add
or
rolb
jnp
fldcw
sbbl
jp
pop
arpl
subl
pop
cmp
add
lret
pop
mov
lods
mov
or
push
ret
sbb
pushl
ds
arpl
add
adc
pop
xchg
sub
xchg
cmp
mov
and
push
xchg
and
push
mov
add
out
xlat
push
fildl
outsl
mov
mov
movsb
pop
jnp
cwtl
fldt
dec
dec
leave
sub
imul
mov
jne
add
xchg
ljmp
jae
add
ret
mov
movsb
movsb
dec
fsubl
add
cltd
ljmp
loopne
sbb
jp
lret
xchg
dec
add
lahf
inc
add
lock
push
push
mov
addb
std
push
xchg
rcr
cmp
scas
loop
hlt
leave
pop
sahf
daa
pushf
jge
and
pop
out
sarb
xchg
fmull
and
xchg
scas
inc
add
cmp
loope
movsl
js
inc
ljmp
adc
jp
adc
push
add
mov
or
add
push
js
add
jmp
outsl
out
je
add
sub
icebp
out
shr
jl
jmp
sbb
dec
jbe
hlt
pushf
pop
insl
xchg
mov
movsl
inc
push
and
test
test
push
loope
in
mov
fcomip
dec
call
xchg
adc
ljmp
dec
cmc
in
jmp
sub
pushf
inc
xchg
in
inc
cmp
cli
sub
gs
sub
add
sbb
mov
or
in
pushl
jbe
push
lret
sbb
mov
bound
out
ret
adc
daa
or
pop
inc
add
insb
shll
call
loope
lds
aad
daa
cmpsb
mov
les
fisubrs
je
push
pop
dec
mov
cs
jno
pusha
add
lods
flds
xor
pushf
aad
add
dec
adc
push
mov
test
popf
repz
mov
adc
loope
inc
dec
inc
add
int3
gs
pop
mov
mov
sub
dec
ret
jnp
jl
mov
and
push
aam
dec
sahf
sub
add
add
mov
mov
imul
idivb
stc
fldl
sarl
clc
jmp
push
testl
aam
scas
mov
xor
jmp
sahf
cmc
dec
push
jb
push
fistps
inc
add
fsubrl
add
lods
push
xor
add
into
jb
push
test
inc
mov
or
adc
stos
sarl
test
mov
add
jbe
aad
pop
jnp
ficoms
les
or
cmpl
sub
shll
cmpsl
pusha
add
add
movb
ja
ret
sahf
xchg
sub
pop
insb
aaa
out
and
cmp
ret
scas
out
inc
shrb
daa
mov
push
pop
jns
idivl
and
gs
movsb
loop
adc
stos
std
adc
sub
cmp
test
lcall
stos
jle
jno
les
adc
sarl
and
add
mov
xchg
xor
js
loopne
fdivrl
rcrl
ret
lds
cmc
repnz
lds
xlat
xchg
pop
add
add
mov
icebp
inc
dec
mov
ss
push
cmp
jmp
addr16
xchg
dec
test
test
jo
cmp
out
and
nop
enter
in
inc
mov
fisttps
adcl
mov
js
repz
inc
add
inc
add
lret
mov
push
xor
dec
lods
and
sti
data16
and
jl
hlt
mov
push
movb
inc
add
in
ss
sbb
add
iret
inc
add
inc
int
ss
pop
mov
sub
mov
mov
adc
sub
sbb
xchg
sbb
ljmp
scas
pushf
movsb
push
loope
lock
sbb
mov
xor
add
lods
dec
aad
xor
add
add
push
xor
push
inc
and
and
shrl
cmc
data16
mov
and
pop
aaa
stos
mov
cmp
pop
sub
mov
xchg
clc
mov
arpl
test
dec
xchg
sub
test
cmpsb
inc
movsl
add
mov
pop
dec
dec
inc
inc
add
sbb
pop
and
movb
fwait
stos
fwait
mov
add
pop
test
or
fcompl
inc
add
sub
rcrb
add
aaa
lock
hlt
lahf
int
xor
decb
cltd
xor
sub
out
iret
mov
cmp
inc
add
inc
jns
and
aam
pop
clc
push
rcrl
aad
mov
jp
bound
mov
jmpw
dec
jge
leave
inc
addb
lret
add
mov
movb
out
xor
iret
mov
aas
adc
mov
sbb
mov
add
add
mov
jne
cs
mov
test
cwtl
and
sbb
mov
mov
mov
cld
scas
pushf
inc
add
cmpsl
jecxz
rolb
pop
notl
jl
xor
mov
scas
xor
stos
xor
in
imul
sbb
cltd
fisubl
jge
scas
xchg
inc
add
xchg
test
cwtl
inc
inc
cmp
xchg
lods
cmp
push
clc
jmp
pop
push
push
rorl
sahf
outsb
loope
push
xchg
mov
out
inc
add
lds
movsl
jo
daa
push
in
mov
inc
ss
xchg
into
inc
sbb
mov
pop
inc
int
dec
push
fistps
rolb
sti
int3
mov
movb
add
add
pop
fisubrs
jmp
sbb
jb
std
add
dec
jl
add
sub
add
lock
shrl
fmulp
in
test
and
sti
sub
xor
or
sub
pushf
push
push
adc
fnstcw
mov
sbb
or
sbb
mov
add
ja
int
dec
push
push
stc
push
jnp
jmp
mov
jle
mov
pop
int
pop
ds
repz
in
test
ss
xchg
push
lret
jnp
in
rcll
sub
cmp
push
addb
xchg
out
rolb
add
jmp
cwtl
iret
add
in
es
sbb
lods
mov
and
aam
adc
add
dec
mov
aas
add
jb
inc
add
jecxz
cmc
fnsave
push
dec
cs
fistps
add
mov
add
xor
ja
loopne
aam
xorl
test
sub
add
icebp
jae
and
popa
cmc
xchg
sub
pop
mov
pop
imul
test
fsubl
gs
mov
es
adc
add
bound
dec
dec
push
mov
movsb
lcall
xchg
sub
mov
mov
imul
xor
mov
add
push
inc
add
pushl
jo
mov
sti
jecxz
jb
sbb
orl
add
and
xor
pop
enter
or
mov
push
dec
ja
fimuls
add
jecxz
jnp
adc
rolb
gs
inc
add
and
mov
mov
lods
mov
mov
adc
ljmp
jecxz
ss
jmp
dec
js
shl
and
pop
xor
jne
sbb
xchg
push
pop
push
orl
imul
mov
adc
loop
ss
into
and
cli
xchg
aam
jmp
push
and
fbstp
es
jp
jbe
clc
enter
mov
xchg
mov
fstpt
xchg
jbe
fildl
add
add
lods
xor
pop
inc
add
xor
or
pop
sbb
mov
movb
push
push
add
and
addb
add
mov
cld
je
or
arpl
mov
sub
andl
dec
sub
mov
mov
pusha
add
dec
push
mov
add
jmp
jmp
outsl
pop
push
lods
inc
add
addb
lahf
mov
add
jecxz
sbb
mov
add
xchg
stc
pop
xor
outsb
int3
jae
mov
add
enter
push
ss
call
int3
pop
or
add
fdivrp
sub
out
rcll
cld
mov
imul
add
and
xchg
prefetch
and
jecxz,pt
xchg
xor
pop
jecxz
in
stos
iret
lods
xor
test
inc
icebp
cmc
call
or
jae
mov
xchg
xchg
mov
dec
inc
ret
flds
dec
add
mov
bound
cmpsl
adc
adcl
icebp
push
jno
enter
xchg
mov
xor
pop
ljmp
rolb
sub
jmp
push
mov
fildl
sbb
movb
inc
das
mov
pop
mov
jo
xchg
outsl
push
fistpll
iret
pop
incb
add
addb
fldcw
cmp
subl
xchg
in
mov
pop
xor
mov
adc
enter
pop
push
sub
add
dec
sub
nop
fwait
sti
mov
xlat
jl
adc
je
add
pop
scas
inc
stos
push
pushf
cmp
out
daa
test
dec
test
daa
and
pop
pop
fcomp
jecxz
stc
repz
jmp
xchg
push
popa
adc
dec
das
nopl
xchg
sahf
sbb
jg
add
ss
push
add
add
pop
mov
jns
inc
add
addb
lahf
pop
pop
out
ret
lret
jbe
push
mov
stos
outsb
pop
call
andl
js
cmc
into
push
xor
or
add
jmp
enter
add
cmp
cmp
cli
cld
movb
push
pop
cltd
mov
xchg
cmp
fcmovnb
repz
jle
ret
inc
add
add
fisubrs
rolb
lahf
popl
xlat
repnz
into
mov
subl
shlb
xlat
addr16
sub
popa
addb
add
add
lcall
jae
comiss
jne
and
sbb
insl
jge
and
jne
or
jno
lods
xchg
lea
or
rcrl
mov
add
pushf
xchg
out
mov
gs
xchg
lcall
rcrl
dec
mov
cmp
sub
ror
rorl
lcall
insb
in
int
lock
std
jl
test
mov
adc
test
movsl
jge
dec
push
cs
push
dec
repnz
jg
sahf
movsb
leave
dec
enter
cmp
add
pop
lcall
dec
jl
add
sub
daa
xor
xor
sub
cld
fsubrl
insb
jne
das
jmp
pop
xlat
mov
and
dec
addr16
push
mov
je
add
movsb
mov
gs
bswap
add
sbb
addr16
je
aam
cmpsl
hlt
dec
std
pop
dec
out
push
cmpsl
lods
fsubrl
loop
mov
dec
js
aad
dec
push
outsb
pop
test
lret
pusha
add
mov
fiadds
jge
xor
add
movsb
add
fcompl
jl
xchg
jp
in
stc
dec
lret
jns
xchg
xchg
iret
ret
movsb
ret
mov
sahf
add
es
xchg
push
xor
sarl
jno
lods
push
xor
add
dec
stc
pop
pop
sub
cmp
call
lret
jno
daa
enter
cmp
movsb
js
xchg
hlt
enter
test
push
gs
fsubp
mov
sbb
mov
xchg
pop
lods
add
dec
push
int
add
cs
mov
leave
cmp
xchg
xchg
and
add
lret
pop
pop
pop
test
add
cwtl
inc
mov
mov
stc
xchg
loop
daa
dec
lods
shll
outsl
cmpsl
lods
push
or
lret
rcrb
add
inc
add
xchg
lods
les
jl
cld
mov
and
aam
outsl
out
out
jne
cwtl
mov
inc
add
xor
pop
sub
add
mov
push
cmp
xor
mov
pushf
pop
pop
xor
aam
push
ret
sbb
xchg
xor
mov
lahf
add
push
add
bound
inc
add
xchg
js
pop
sbbl
icebp
mov
and
pop
movsb
and
outsl
psllq
push
mov
adc
loope
sbb
lret
repz
std
xchg
adc
jb
aam
in
push
inc
and
mov
add
cld
sub
and
movsb
mov
jg
data16
add
loopne
shrl
adc
fmull
xchg
cmc
xor
dec
xor
adc
mov
mov
ljmp
xor
adc
js
ljmp
movhps
mov
data16
jmp
jge
aad
nop
aam
lea
out
or
add
insl
idivl
sahf
xchg
dec
jns
out
jns
in
fisttpl
xchg
dec
in
lods
pop
cmp
cwtl
mov
out
mov
adc
sub
push
in
test
pop
jl
outsl
or
mov
dec
xchg
pop
sub
stc
call
add
inc
xchg
fcmovnu
sub
xor
out
clc
dec
pop
std
sbb
addl
xor
movsl
clc
lock
mov
push
add
addb
dec
rcll
icebp
push
fidivs
mov
ja
add
pop
sbb
pop
inc
pop
pop
out
inc
xchg
loope
mov
pusha
add
push
xor
lods
mov
push
jmp
inc
add
test
adc
shl
jmp
stc
cltd
jno
stos
test
jg
and
dec
jp
mov
ss
stc
mov
outsb
lock
in
dec
push
mov
cmp
cltd
mov
pop
incb
dec
lock
xor
or
push
movsb
dec
dec
jb
push
mov
adc
jl
xchg
andl
add
fs
xor
fidivl
add
imul
rclb
adc
sub
adcl
lret
jg
mov
mov
xlat
xchg
push
add
mov
jecxz
ja
add
push
add
enter
stc
movsb
jecxz
hlt
jns
or
in
jp
cli
jle
and
scas
flds
lret
inc
add
add
mov
mov
xor
stos
arpl
dec
dec
jp
add
cmp
and
mov
push
jmp
stos
enter
loop
dec
out
movb
scas
lods
repnz
mov
test
iret
cmp
xchg
push
add
jg
movsl
divl
inc
add
dec
pop
pop
lods
add
clc
sbb
out
pushf
pop
daa
scas
adc
adc
inc
add
adc
push
pop
pop
clc
addb
in
mov
lret
fildll
jnp
not
decl
adc
jl
pushf
adc
xor
adc
aaa
cltd
xlat
or
sbb
add
insl
call
mov
in
mov
inc
icebp
fisttpll
or
ret
adc
dec
pop
mov
jg
inc
mov
lahf
lds
add
aad
movsl
fidivrl
xchg
adc
outsl
les
add
ljmp
mov
aad
sbb
xlat
cmp
sub
movsb
mov
aam
stc
std
inc
lea
pusha
add
lahf
aam
xor
add
fsts
push
cmp
sub
xor
into
add
fdivrp
cmpsb
jo
mov
lods
cmp
cmp
sbb
jnp
add
push
sub
shll
xchg
inc
mov
pop
shl
xchg
scas
lods
mov
push
jp
add
push
jmp
stos
in
adc
sbb
jmp
pop
out
mov
add
arpl
sbb
lret
mov
add
add
mov
iret
ret
call
add
sbb
mov
mov
push
cltd
leave
dec
pusha
add
mov
mov
push
out
mov
xchg
sbb
or
fidivrl
cmp
mov
movsl
test
cmp
xchg
sbb
mov
enter
mov
and
lea
stos
test
movl
add
xchg
push
add
xor
test
add
add
out
and
divb
add
push
cld
test
jmp
rolb
pop
out
int3
aam
addb
cmpsl
shll
data16
ret
aam
mov
fprem
or
sub
sbb
ret
aas
into
dec
cld
enter
inc
add
mov
es
mov
and
jns
push
cmp
adcl
add
stc
mov
and
xor
xor
cmp
in
adcl
rolb
movsb
or
popa
int
xchg
stos
nop
loope
xlat
pop
loopne
in
jle
jo
jno
outsb
movb
cmp
out
jecxz
addb
push
or
addb
data16
sub
out
cmpsb
inc
add
out
adc
fmuls
loopne
fwait
stc
fs
inc
add
sbb
cs
adc
and
dec
jge
outsb
jns
jmp
lock
loope
or
and
push
and
xchg
mov
cmp
add
dec
inc
jecxz
sub
cmp
ret
faddl
gs
pop
repnz
sti
cmp
pop
jp
icebp
rol
dec
mov
pop
adc
adc
aad
out
ljmp
or
jnp
outsl
xchg
sarb
fisubl
data16
out
je
insb
imul
dec
inc
add
xor
xor
cwtl
mov
icebp
mov
add
pop
and
push
mov
add
xchg
out
push
dec
out
dec
xor
dec
adc
add
inc
xor
mov
js
jns
cmc
push
into
fmuls
or
out
data16
nop
jae
fucomi
jbe
add
mov
addb
in
push
inc
ljmp
cmpsb
xor
push
push
jmp
sub
xchg
or
or
fidivrl
rorl
std
pop
fnstsw
cs
add
cmp
movsb
inc
add
push
cmp
pop
and
loop
adc
ljmp
jno
ja
jp
mov
movsl
mov
jae
lock
daa
inc
add
insl
cmpsb
or
pop
jp
adc
cmp
add
pushf
in
iret
inc
movsb
xlat
xor
addr16
push
test
mov
dec
icebp
cmp
in
or
cmp
inc
add
adcl
jbe
pusha
add
xlat
inc
shrb
cmc
mov
dec
cs
add
mov
add
imul
jecxz
ret
js
fstpt
sub
aaa
add
add
orl
push
js
mov
add
mov
xchg
pop
aam
add
inc
jo
repz
je
adc
loopne
xchg
and
pusha
add
sub
add
pop
jl
xor
add
movb
add
mov
jge
fsubrs
xlat
xchg
push
ret
jl
add
add
xchg
mov
add
inc
xlat
xor
sub
aas
pop
pop
add
mov
test
sub
pusha
add
rcrl
and
add
push
shrl
les
subps
cs
cmp
flds
sub
loopne
lea
adc
add
mov
gs
aad
adc
movl
lret
lret
retw
push
mov
jae
lret
clc
out
mov
push
jne
js
push
stos
es
andl
das
fldt
adcl
jmp
xchg
mov
jg
add
cltd
aam
pop
cltd
fsubs
mov
dec
mov
ret
xchg
xor
xor
sahf
sbb
pop
aad
fwait
dec
mov
adc
xor
mov
cmc
push
or
add
add
jae
add
xchg
jl
ja
mov
lods
jmp
popa
xor
mov
dec
adc
pop
push
cmp
xor
jnp
adc
xor
je
xor
fmuls
stc
cmp
mov
fisubl
rolb
push
jns
rcll
xor
wrmsr
ret
mov
and
push
cmp
pop
movb
add
adc
push
mov
scas
shlb
scas
les
sbb
add
aaa
mov
mov
mov
add
lahf
dec
lock
mov
jecxz
sbb
jb
lret
add
add
add
sub
fs
out
cmp
fisubs
add
jecxz
xchg
xchg
xor
xchg
sbb
or
sbb
out
add
push
sbb
mov
or
add
rcrb
lret
mov
stc
mov
mov
add
orl
icebp
and
sbb
addb
clc
mov
xchg
fld1
or
cli
cmp
push
and
fsubr
jl
jecxz
jge
sbb
fidivs
mov
pop
jmp
addr16
lea
dec
add
jb
mov
jg
adc
aam
jl
push
imul
mov
mov
sbb
mov
fdivrp
jmp
popf
xor
mov
daa
inc
imul
movsb
in
fisubrs
ret
lock
mov
adc
or
outsb
mov
imul
je
mov
cmp
dec
cmp
push
cmp
test
cmp
enter
fildll
mov
and
mov
lods
pop
imul
das
xchg
pusha
add
sahf
inc
add
xchg
pop
out
mov
add
addb
aas
dec
mov
add
cwtl
or
sbb
js
adc
repz
addb
add
fsubr
scas
push
cmp
push
add
cmp
lahf
mov
nop
gs
jl
mov
leave
nop
or
push
scas
loopne
jne
lret
adc
loopne
out
imul
in
push
mov
xor
out
jge
lret
mov
jae
addb
dec
call
mov
adc
xor
or
push
bound
iret
jecxz
dec
addb
nop
xchg
bound
shrb
mov
dec
insb
mov
push
xchg
cmp
call
fbld
jecxz
sub
mov
mov
ja
cwtl
cmp
in
pop
notl
mov
xor
hlt
add
ret
imul
cmc
bound
jg
movb
jo
jp
fistps
xchg
push
cmp
add
push
cmpsl
xchg
sti
fisubrs
jae
mov
fsubs
cmp
out
in
mul
daa
adc
dec
push
jbe
add
jmp
sub
ficoms
xor
stos
mov
das
mov
mov
xchg
cmp
add
pop
addb
insb
sub
out
popf
mov
jg
sub
int3
push
test
orps
fldl
add
incb
push
or
std
inc
out
popf
xchg
adc
jl
jge
sti
lods
or
daa
jne
or
aad
ficompl
dec
insl
add
cs
filds
mov
jle
and
mov
lahf
pop
dec
push
jecxz
push
outsl
mov
scas
cld
out
ror
cmpsl
mov
mov
subps
add
and
clc
mov
cmp
jecxz,pt
pop
dec
sbb
cmpsl
setno
xlat
cmp
cmpsl
push
lods
mov
stos
cltd
pushf
rorl
fucomp
mov
sti
dec
sub
int3
sahf
pop
aas
and
sbb
xchg
roll
xchg
sub
loope
jp
xlat
and
jne
loope
mov
add
cli
in
or
in
inc
mov
je
pop
pusha
add
push
xchg
xchg
cmp
jnp
add
push
popa
add
or
insl
in
fnstenv
cmp
add
pop
mov
mov
add
jmp
out
les
pop
cld
test
add
maxps
movsl
xor
popf
xor
or
mov
aad
fsubr
dec
push
stos
jae
test
mov
das
dec
adc
sub
cmp
shlb
sub
nop
dec
push
inc
add
xchg
push
leave
les
outsb
mov
mov
nop
loop
rcr
mov
xor
test
mov
ffree
add
inc
add
mov
test
and
mov
mov
push
mov
xchg
pop
adc
loopne
hlt
cmp
xchg
sub
clc
shlb
lret
mov
push
mov
je
pop
aad
jno
mov
rolb
sub
shlb
movsb
pushf
cwtl
jl
add
push
pop
cld
add
cmpsl
mov
jmp
shr
test
and
in
or
xor
test
ret
dec
jp
cmp
negl
orl
xchg
popa
sahf
mov
inc
pop
mov
cmp
shlb
mov
shrl
push
movsl
insl
pop
lret
into
mov
mov
sbb
push
dec
cmpsb
iret
out
not
cmc
ja
inc
fdivrs
cmp
add
clc
pusha
add
or
pop
adc
adc
cmp
adc
inc
add
lret
sbb
and
sub
in
sbb
shr
mov
rolb
push
daa
jns
shlb
hlt
cmpsl
mov
stos
cmpsl
xchg
int
lock
movb
data16
mov
mov
ret
xchg
pop
scas
sbb
ss
stos
sbb
inc
add
xchg
mov
add
test
fwait
cmc
sub
imul
pop
dec
or
ljmp
shl
stos
test
mov
mov
addb
xchg
mov
mov
dec
lret
nop
pop
aam
lcall
lods
icebp
sbb
add
ss
and
mov
rcr
fsubp
add
cld
add
jg
push
lahf
fisttpl
mov
mov
das
jge
roll
les
lret
xchg
pop
lret
sbb
pop
pop
lods
xchg
ja
enter
add
test
aaa
adc
or
add
leave
and
aaa
mov
inc
inc
and
mov
lret
lcall
imul
ss
add
out
mov
pop
sbb
ljmp
mov
add
cld
jbe
mov
push
out
aas
arpl
or
f2xm1
mov
arpl
and
mov
stc
jle
aas
cmc
cmp
jns
sbb
mov
dec
mov
cmp
stos
sbb
cmpsl
cmp
sbb
sub
add
mov
mov
jbe
ficompl
int3
dec
xchg
sbb
and
lret
enter
adc
mov
jae
fwait
lahf
adc
sbb
fdivrl
pop
jge
inc
add
out
sub
adc
jmp
outsl
mov
leave
xor
xor
out
int3
jp
test
or
jo
xor
sahf
cmpsl
pusha
add
inc
fwait
rcll
fidivrs
aad
jbe
loopne
loopne
leave
fstpt
xchg
adc
add
mov
fdivl
fdivrp
gs
mov
add
dec
pushf
roll
dec
xchg
rorl
add
xor
arpl
dec
jp
fstpl
and
inc
add
sub
adc
and
dec
aas
add
pop
or
inc
add
and
and
xchg
lock
mov
jno
cwtl
xchg
push
subl
fnstcw
pop
xor
cmp
aad
xchg
mov
inc
sub
scas
adc
icebp
hlt
jecxz
add
fidivs
mov
ret
mov
xchg
iret
pop
out
fidivrl
push
pop
mov
mov
out
out
adc
xor
cmpsl
out
lock
inc
add
fiaddl
test
push
jg
jne
bound
push
test
push
addb
xchg
mov
xor
int3
xchg
xchg
sbb
addl
test
mov
jns
lock
mov
add
or
pop
and
lods
mov
xchg
and
xorl
pop
push
into
aas
or
push
inc
incl
mov
cli
loopne
imul
cmpsl
inc
mov
insl
in
fistl
mov
xchg
movsb
cli
popf
pop
xchg
aad
mov
pop
push
ss
xor
add
lret
jne
rcr
scas
popf
cmp
out
push
fistps
push
stc
addb
jp
or
fildll
push
dec
pop
rolb
cmp
stc
imul
inc
add
sbb
pop
push
jno
sub
dec
jae
lock
add
jg
sti
mov
add
add
inc
add
and
in
scas
sahf
and
or
inc
sub
add
in
pop
int
addb
pop
pop
jecxz
fnstcw
mov
jo
int3
shr
or
cld
in
punpckhdq
cmp
es
inc
pop
mov
adc
add
push
shl
rolb
fs
movb
add
cmovns
negl
pop
sbb
and
sub
mov
lret
in
fstpl
imul
mov
rcll
inc
xorl
cmp
dec
scas
xor
cmp
out
ficoms
arpl
cmp
adc
add
pop
adc
repnz
lahf
xchg
inc
xor
mov
icebp
sbb
push
add
cmp
xor
icebp
mov
cmp
mov
insl
inc
add
addl
repnz
inc
add
cld
in
xor
jb
xor
movsl
cmpsb
icebp
rolb
sub
scas
cli
popa
add
inc
fs
in
fcmovbe
push
cmpsb
loopne
fidivs
and
ficomps
data16
cmp
daa
aaa
xor
data16
dec
pop
xor
add
mov
outsb
pop
push
mov
pop
mov
data16
mov
and
shrl
pop
je
lds
push
jmp
nop
pop
mov
push
or
xchg
into
mov
inc
bound
add
inc
icebp
loope
add
ffreep
add
xor
push
sarb
add
jl
jp
cmp
test
add
std
rol
push
addb
mov
cmp
add
stos
inc
adc
notb
insb
movl
rcll
add
ret
xor
addb
roll
inc
mov
xchg
lahf
xor
dec
push
mov
fdivl
loope
add
out
add
icebp
add
into
cmc
xor
pop
daa
push
add
adc
subl
xchg
xchg
cmp
fistl
cld
fisttps
add
pop
add
inc
add
pop
enter
pusha
add
xor
push
fsubrp
push
lahf
xor
clc
sub
inc
add
and
sub
das
xchg
dec
fstpt
lods
insl
test
add
test
mov
sub
sub
sbb
into
mov
shl
ljmp
mov
dec
or
xor
jnp
cmpsl
inc
add
add
push
sub
scas
lcall
jb
into
cltd
addb
cmp
iret
sub
cltd
test
lret
cmp
inc
dec
and
negb
lret
inc
stos
mov
push
cmp
sub
loopne
popf
mov
add
jle
insl
int3
dec
pop
inc
add
cmp
int
loop
int3
dec
sub
jg
aam
ficoms
cmp
test
fsubs
lret
add
push
mov
sbb
and
out
addb
push
fnstcw
adc
pop
xor
into
mull
out
sub
loop
pop
pop
xchg
mov
dec
loop
and
and
pop
jge
xchg
jne
test
test
mov
ss
add
fstpl
int
add
mov
xchg
mov
xchg
ret
lods
cmp
iret
sbb
out
lahf
mov
mov
dec
pop
mov
add
cmp
mov
mov
scas
jp
add
ud2
aam
or
xchg
pop
jnp
xlat
sbb
aaa
pusha
add
test
into
jmp
and
test
xchg
add
das
push
xchg
push
pop
cmp
or
cwtl
add
pop
pop
xor
and
pushf
mov
jbe
mov
jne
jbe
add
mov
test
data16
xor
add
sbb
mov
movsb
mov
call
fldt
out
cmp
add
push
adc
js
add
mov
gs
loopne
fstpt
or
push
push
sahf
scas
cmpsl
and
sbb
and
insb
sub
pop
out
jo
arpl
pop
xlat
inc
add
cwtl
jbe
add
test
pop
jb
add
or
add
ds
add
mov
not
rclb
sahf
and
int3
cli
data16
xlat
fldt
pusha
add
and
cmpl
jge
mov
mov
addr16
lcall
cmp
iretw
inc
mov
test
and
push
add
bound
sbb
add
mov
add
sbb
add
scas
dec
xlat
fadds
loopne
mov
hlt
sub
lret
in
es
push
mov
ret
lock
add
sub
mov
dec
sbb
lds
insl
and
aam
movsl
push
sub
pusha
add
add
adc
mov
lret
push
cmpsb
or
mov
mov
cmp
mov
or
and
hlt
mov
add
fldt
cld
jmp
add
adc
cltd
xchg
nop
pop
inc
add
stc
sub
and
repnz
add
adc
push
jae
addb
dec
repnz
xchg
loopne
fdiv
or
or
add
jae
dec
je
insb
jne
add
mov
aaa
xor
mov
jae
in
push
cmp
xor
dec
jle
xor
inc
lods
or
fmull
add
and
roll
and
cmp
scas
into
test
scas
aas
add
cmc
jle
pop
pusha
add
lea
and
jb
fs
xchg
xchg
add
shr
mov
outsb
shlb
xchg
xlat
fildll
add
out
pop
jmp
lock
loopne
mov
xchg
into
in
adc
dec
xchg
mov
add
pushf
ret
mov
stos
and
adc
sub
mov
inc
add
xchg
pop
addb
push
loop
fbstp
cwtl
jg
xor
add
mov
aas
cmp
jnp
cmp
sahf
inc
add
jae
jge
jno
lahf
add
ja
lods
outsl
pop
push
enter
jo
adcl
cli
sbb
push
sub
fucomi
push
bnd
add
xor
inc
add
cli
enter
adc
out
mov
ja
jmp
xchg
push
dec
repz
add
cld
into
bnd
out
test
out
add
jb
or
mov
out
and
das
or
jo
add
lret
lret
cmp
add
arpl
mov
lock
cmc
mov
xchg
stc
adc
clc
or
dec
inc
leave
stc
dec
and
dec
dec
imul
cmpsb
data16
psubusb
xchg
aaa
xor
sbb
add
add
sahf
clc
xchg
dec
sub
in
lcall
jmp
sub
add
lret
mov
jecxz
and
sub
add
clc
cmc
outsb
test
mov
sbb
and
xchg
dec
and
popa
fsubrp
push
fwait
loop
outsl
cwtl
in
fsubp
cmpsl
jae
dec
inc
fimull
add
aas
mov
jno
dec
cmpsl
sarl
sbb
ret
push
lret
sbb
cli
outsl
mov
add
sbb
jns
lds
cld
jae
inc
add
sbb
push
add
mov
mov
push
sbb
mov
and
loope
xchg
outsl
jecxz
sbb
sub
jecxz
push
mov
add
ret
aam
icebp
jl
cld
mov
jecxz
xor
icebp
mov
jle
addr16
cmp
popf
lea
push
dec
mov
loopne
popf
and
outsb
movw
pop
jl
inc
add
imul
xlat
negb
and
repnz
lret
in
add
icebp
sbb
stos
dec
stos
pop
nop
in
xchg
cmp
sub
add
add
xchg
mov
testb
in
sahf
enter
jae
out
lret
add
cmpsb
iret
jecxz
fildll
repz
outsb
mov
call
sub
cmpsb
or
insb
mov
inc
sub
pop
and
pusha
add
and
mov
xor
mov
cmc
jno
jno
std
jb
push
jp
inc
add
add
inc
pushf
add
into
fcoms
jge
pop
cwtl
jbe
aam
jbe
rcrb
test
mov
push
xchg
pop
sbb
push
xchg
jmp
add
sbb
loope
xchg
jge
out
ja
and
mov
adc
xchg
mov
add
xchg
dec
movl
and
add
inc
add
adcl
and
inc
add
sbb
icebp
push
leave
cmpsb
mov
pop
lock
das
shlb
push
sub
mov
insl
push
or
mov
popf
je
mov
fiaddl
rcr
mov
inc
int
sbb
loope
lcall
mov
jne
ficompl
in
in
bound
bound
int3
push
pop
aas
or
cmp
loopne
jmp
push
cmp
mov
inc
add
adc
mov
imul
adc
mov
pop
jl
sti
jns
push
sbb
lds
movsl
cmp
ret
clc
fisubrs
sub
aas
cmp
sti
xchg
pushl
dec
nop
and
sub
enter
push
and
sbb
in
data16
add
or
pop
icebp
loop
or
sub
fildll
dec
leave
push
cltd
cmp
mov
popa
and
in
pop
sarb
mov
cwtl
fcomip
test
sar
add
mov
inc
push
lods
lret
je
mov
mov
scas
inc
mov
cmp
and
pop
mov
xor
mov
aam
push
add
add
leave
xchg
jno
dec
mov
adc
lahf
push
sbb
cmp
aam
test
test
xor
in
xchg
fsts
out
enter
add
addb
fs
lret
cmpsl
lods
xor
or
test
jmp
push
shll
sahf
inc
popa
test
sub
push
mov
push
mov
inc
in
lock
out
or
clc
inc
add
fisttpl
sub
mov
gs
imulb
enter
jae
add
shl
add
xchg
int3
push
pop
cmp
and
lods
mov
cmp
xchg
adc
jmp
adc
xchg
jg
and
add
hlt
imul
and
mov
out
mov
inc
add
sub
mov
jnp
jo
or
inc
xor
cs
mov
add
adc
lret
dec
repnz
add
pusha
add
lods
addb
popf
inc
add
add
lods
jp
mov
cmp
pusha
add
stos
dec
jp
add
dec
jae
pop
mov
loope
xchg
push
fistps
cmp
mov
in
or
xor
xor
dec
daa
ljmp
push
add
mov
mov
push
in
cmp
cltd
fldt
mov
xchg
push
rolb
push
jg
pushf
cmc
mov
sub
mov
sarl
lock
lods
and
adc
lock
mov
addr16
das
xlat
cmp
add
push
push
add
add
inc
sub
mov
mov
pushf
jecxz
xchg
daa
sbb
cwtl
mov
movsb
insb
mov
jp
call
dec
into
and
jae
push
lds
es
lahf
mov
jmp
add
into
add
data16
loopne
jmp
cmp
add
dec
jbe
imul
xor
cmp
push
sub
cmp
adc
ret
inc
add
bound
dec
xor
and
xchg
push
sub
shrb
repz
xchg
cmp
lods
test
jo
fs
pushf
inc
and
add
add
add
inc
add
sub
sub
or
xlat
push
add
es
or
inc
add
js
int
inc
test
repz
xchg
int
pop
addr16
add
jae
js
jno
jo
mov
pop
aaa
push
push
add
add
outsl
push
iret
dec
push
in
dec
and
add
ret
adc
add
mov
aad
push
add
push
fidivrl
icebp
ret
xchg
xchg
cmp
ljmp
jbe
jp
jge
mov
add
pop
mov
pushf
cltd
stos
frstor
or
test
ljmp
aad
dec
daa
add
mov
pushf
jge
push
adc
ljmp
add
sbb
xchg
jo
adc
dec
adc
xlat
daa
mov
mov
ss
gs
inc
add
add
movb
fidivs
push
aam
addb
shlb
inc
adc
inc
add
out
nop
pop
or
and
xchg
lock
fwait
loop
cld
push
clc
xlat
sbb
enter
xchg
push
aaa
add
xchg
cmp
inc
or
icebp
insb
mov
mov
clc
sahf
cmp
xchg
out
xlat
mov
cwtl
sub
in
cs
jae
add
insl
xchg
mov
lds
popf
xor
pop
jno
decl
loop
jae
stos
push
insl
lahf
loop
icebp
sbb
cmpsb
mov
popf
mov
and
sub
push
cmc
mov
add
pop
inc
add
fcomps
push
rcrl
lea
repz
lret
sub
addr16
sbb
add
dec
push
jnp
fwait
mov
aad
push
scas
inc
mov
test
js
sbb
lock
mulb
mov
xor
iret
loop
int
xlat
fdivrs
inc
add
jecxz
inc
add
cmp
ret
jecxz
add
add
ja
xchg
std
or
insb
jbe
stc
scas
mov
mov
in
ja
mov
dec
not
sub
pop
mov
jle
xor
and
into
enter
add
add
mov
inc
add
jbe
xor
ljmp
arpl
sub
les
mov
mov
jbe
mov
imul
mov
rolb
dec
loopne
cmp
lret
in
lret
lods
aam
inc
add
sbb
aas
and
fnstsw
imul
adc
faddp
add
je
adc
lcall
dec
test
sub
inc
add
sub
add
fisubl
psubsw
movsl
adc
xor
xor
aas
xor
pop
addb
cld
sqrtps
sbb
sub
pop
mov
pop
insl
push
add
dec
fisttpl
inc
add
repz
lret
dec
xorl
flds
cmpsl
mov
lahf
and
mov
dec
insl
rolb
lret
fdivl
popa
dec
sbb
cmp
mov
push
scas
hlt
jecxz
pushl
das
and
pop
loope
xor
xor
and
popf
inc
in
nop
push
out
adc
add
sub
xor
xchg
push
jmp
ja
loop
xor
fadd
add
add
and
add
inc
add
test
jl
jae
dec
subl
cld
xchg
mov
lock
mov
mov
add
cltd
xchg
xchg
mov
inc
jne
loope
dec
add
mov
stc
clc
or
pop
les
sahf
push
dec
xor
cmp
add
jle
push
test
add
jmp
or
ficomps
dec
jle
mov
rolb
sub
lret
and
movb
xchg
lahf
cmp
sub
das
pop
mov
mov
gs
adc
testl
sahf
jecxz,pt
imull
repz
add
push
mov
mov
call
icebp
addl
mov
sbb
inc
shll
popa
pop
test
and
mov
cli
loop
lret
mov
stos
and
iret
hlt
lret
add
cmpsl
enter
aas
stc
pop
jo
aas
lods
mov
pop
dec
ss
mov
jge
mov
xchg
cmp
mov
mov
jno
adc
test
rolb
in
das
xchg
rolb
jge
and
xor
lcall
inc
push
add
dec
out
cld
out
or
sti
adc
nop
mov
inc
push
arpl
in
mov
inc
add
inc
scas
insl
jg
sahf
pop
jo
add
sahf
xchg
mov
aad
std
adc
aad
add
ret
bound
push
xchg
mov
jb
bound
cwtl
popf
and
in
push
stos
jp
pop
shr
loopne
sti
cmp
mov
dec
imul
add
push
repnz
mov
add
mov
jne
mov
imul
xlat
mov
inc
add
inc
and
dec
jmp
adc
mov
sti
pushf
sahf
dec
jns
fstp
mov
mov
popl
out
cwtl
scas
lods
sahf
sub
inc
outsb
pop
fs
dec
cmp
daa
dec
adc
pop
mov
add
push
addb
jnp
cmpsb
mov
pusha
add
mov
xlat
or
push
fmuls
xchg
es
xchg
adc
mov
jmp
pop
pop
repz
mov
insb
mov
pusha
add
pop
lods
lea
jl
std
xchg
inc
int3
add
xlat
out
adc
mov
inc
add
sbb
and
lcall
xchg
repnz
andl
jns
popa
push
test
cs
lahf
jnp
push
mov
ffreep
mov
incl
xor
movsb
sbb
rolb
pop
push
fcoms
or
add
cltd
pop
shlb
mov
xlat
xor
stos
ss
test
lret
pop
jbe
subl
sahf
and
fucomi
pop
push
repz
sahf
in
xchg
sahf
adc
mov
das
int3
dec
push
addb
sub
test
jns
arpl
mov
xchg
xchg
out
shrb
pusha
add
loope
out
scas
dec
negb
dec
jns
insl
in
add
push
in
fisubrl
xchg
lds
cmpsb
or
popf
mov
in
cmp
add
repnz
inc
add
les
lcall
pop
popf
pop
add
and
decl
jmp
inc
add
ret
in
xchg
sub
test
pop
fnsave
frstor
incb
pushf
inc
filds
ss
mov
add
aas
sbb
stos
or
add
inc
add
pushf
inc
add
in
es
dec
xchg
sbb
inc
xor
and
inc
add
fcompl
pop
cmp
incb
stos
scas
test
lods
dec
movl
in
add
ret
and
and
testl
add
adc
jl
lods
negb
jg
mov
xchg
or
repnz
mov
lcall
dec
int3
xchg
add
int
imul
and
fsts
ds
xchg
push
aam
xchg
arpl
sub
sbb
jle
scas
cmp
cmp
in
jo
lea
mov
fcoml
adc
mov
jge
inc
out
jecxz
js
adc
lret
add
aas
ret
loope
or
and
ljmp
add
mov
dec
ja
add
or
enter
je
pop
mov
test
nop
scas
fmull
aaa
loope
add
pop
lret
adc
xchg
jmp
fs
stc
mov
je
and
fldenv
cmp
rorl
dec
mov
cmpxchg8b
sub
loopne
adc
xchg
or
or
enter
xor
dec
test
pop
js
test
cmp
xchg
or
cwtl
test
pop
movq
mov
nop
enter
in
in
pushf
and
and
xchg
xchg
aad
xor
insb
sbb
mov
test
add
add
pop
hlt
gs
xor
outsb
gs
mov
clc
add
dec
adc
mov
pop
sub
mov
hlt
mov
out
fidivrs
les
out
xchg
mov
inc
mov
fstpl
adc
add
push
push
mov
add
jno
cmp
or
push
jmp
shlb
gs
fs
add
ds
lcall
add
push
add
addb
push
add
dec
scas
in
test
fsubl
add
jle
enter
add
cmp
cmp
test
jbe
inc
cmp
add
add
add
add
mov
add
jns
inc
aaa
sti
insl
or
sub
adc
push
add
jo
bound
bound
lock
xchg
sbb
push
out
and
or
mov
dec
pop
mov
and
mov
stc
adc
out
je
inc
add
shll
scas
leave
xlat
rolb
mov
xchg
outsl
pop
clc
out
mov
inc
add
hlt
mov
pop
into
push
and
mov
push
insb
movsl
sbb
add
pop
int3
inc
add
aas
push
add
aas
adc
aaa
gs
lea
cmpsb
push
mov
mov
xchg
rolb
sbb
mov
xchg
cwtl
mov
dec
aam
lret
jl
add
mov
dec
jg
imul
inc
mov
gs
pushf
sub
xor
sti
mov
push
pusha
add
add
insb
xor
jecxz
inc
add
fsub
pop
movb
push
push
xor
pop
add
cmp
mov
daa
nop
cmp
dec
sub
or
mov
inc
add
add
cmp
aad
add
xor
loope
add
push
repnz
lahf
stos
rolb
xchg
sub
xor
dec
push
jae
mov
fwait
movb
stos
fdivs
scas
pop
cmp
sbb
mov
sub
sub
add
jns
je
andl
sti
ret
add
call
sub
sbb
dec
jmp
rclb
dec
mov
fisttpl
cmp
xchg
loope
add
mull
add
movb
or
addb
sbb
jae
sbb
jle
adc
clc
or
lock
cs
mov
adc
add
mov
scas
out
roll
sti
aad
rolb
dec
mov
in
push
cmpsl
xchg
or
lahf
adc
mov
add
popf
mov
out
aam
fimull
xor
pop
fbld
pop
rolb
xor
test
es
xchg
ss
test
loop
fcmove
dec
fbstp
in
mov
movsl
mov
sbb
mov
add
scas
bound
test
out
call
adc
imul
or
dec
pushf
xchg
sbb
mov
bound
jnp
cmp
pop
cmpsb
xor
data16
outsl
daa
push
push
mov
stc
sbb
cmp
add
add
xchg
fldl
ja
sbb
stc
or
add
out
outsl
and
repz
jns
push
sub
sub
xor
rol
call
cli
das
jl
rcr
inc
lret
sbb
in
outsl
or
add
outsl
cmp
pushf
pop
fwait
lret
outsl
mov
add
and
mov
in
add
call
aad
cli
cmp
inc
add
cltd
idivl
add
add
mov
pop
mov
jp
stos
testb
int
cmp
stos
add
mov
add
cmp
add
xor
dec
mov
add
pop
scas
or
mov
push
add
push
and
iret
js
in
xchg
add
decb
jnp
clc
mov
cld
push
sbb
les
sub
xchg
xchg
xchg
lock
stos
enter
add
push
cmc
in
adc
xchg
mov
iret
inc
add
fyl2x
clc
xchg
cli
dec
sub
lods
jb
sbb
inc
or
jbe
addb
adc
sti
and
loop
jecxz
xchg
sub
ret
pop
daa
daa
out
mov
enter
dec
lods
push
or
add
mov
cmpsb
loopne
stos
and
push
add
push
outsl
jb
mov
xchg
test
clc
outsl
cwtl
dec
sti
jno
in
sbb
mov
jne
out
repnz
xchg
hlt
pop
lods
ret
xchg
xchg
cwtl
sbb
mov
and
xchg
xlat
inc
push
mov
mov
pop
xchg
ficoml
push
xchg
popl
dec
inc
movsb
dec
jbe
lods
push
xor
mov
cwtl
icebp
fcmovbe
inc
mov
in
add
inc
pop
jo
dec
and
stc
les
adc
pop
pop
push
in
add
add
jnp
pop
cwtl
mov
cmp
lea
dec
repz
prefetch
in
xchg
in
push
sbb
add
push
imul
pop
mov
mov
inc
add
mull
sbb
dec
pop
xchg
or
imul
aaa
das
movb
mov
aas
stos
and
gs
mov
movsl
push
push
imulb
rorl
mov
out
sahf
xchg
pop
out
and
repnz
xchg
add
js
sahf
fwait
xor
ljmp
push
xchg
pop
rolb
inc
add
sub
adc
faddp
pop
andl
mov
or
xor
mov
repz
iret
pushf
fsubrp
pop
ss
xchg
push
lods
pop
std
mov
inc
add
rol
push
push
push
sbb
xor
rcl
mov
lds
xchg
loope
mov
add
mov
stc
mov
mov
iret
andl
data16
out
fbstp
pop
lret
pause
test
punpcklwd
sbb
cmp
in
sbb
mov
ds
stos
pop
add
xor
inc
std
mov
ret
or
xchg
cli
gs
xchg
pop
push
jnp
addb
and
xchg
insb
test
add
lret
notb
shrb
mov
add
and
add
ja
or
loopne
jne
and
jecxz
movsl
fidivrl
cmp
and
loopne
jnp
or
mov
cmp
stos
and
aas
data16
pop
aas
add
movsb
fnstcw
push
push
inc
fdivr
ss
add
add
test
add
mov
das
pop
inc
add
jae
add
cmp
sbb
in
arpl
gs
arpl
repz
cmp
enter
movsl
stos
jp
pop
sti
repnz
push
cmp
jno
pop
cli
movsb
mov
mov
imul
add
out
xchg
out
ret
stos
and
lcall
sub
into
adc
movb
lcall
mov
out
fwait
jecxz
out
jge
cwtl
xor
outsb
call
xchg
add
inc
sbb
data16
inc
add
pop
out
movb
add
sub
add
das
mov
cmp
stos
test
sbb
xchg
dec
pop
fmull
imul
movsb
cmp
arpl
pop
xchg
in
scas
call
jns
adc
or
cwtl
add
out
xchg
push
mov
gs
mov
das
jno
xor
or
pop
mov
add
add
pop
cwtl
sahf
push
ds
add
adc
call
ss
push
sub
movsl
loop
lea
pop
fidivl
fisubs
les
sub
incl
sahf
scas
stc
mov
push
add
aaa
movb
and
cmp
xchg
or
push
jmp
rcrb
mov
scas
fwait
jp
ljmp
mov
test
add
push
push
push
jg
xlat
mov
and
pop
mov
pop
iret
sub
jg
int3
cmp
mov
loop
aas
push
xchg
popa
cmp
adc
arpl
cmc
test
insb
cmp
jp
sbb
repnz
push
mov
lds
fisubs
dec
insl
daa
lods
cli
inc
add
popa
out
mov
add
xor
mov
test
ljmp
xor
dec
mov
mov
scas
clc
sbb
dec
lcall
js
test
xlat
popa
jb
push
mov
test
add
xchg
addb
std
jb
cmpsb
fisubrl
in
xchg
mov
psubq
add
add
dec
pop
mov
inc
pop
adc
add
cwtl
sbb
in
shll
divb
jae
das
adc
add
cmpsl
popf
push
insl
pusha
add
mov
push
pop
iret
stos
mov
add
cli
dec
fisttps
jmp
pop
das
pop
fbld
fucom
test
and
inc
mov
cmp
dec
mov
lret
leave
or
scas
adc
add
mov
clc
sub
dec
shll
repz
sti
insb
icebp
or
cs
xchg
mov
shrl
das
inc
insb
or
add
pop
dec
mov
pop
out
addb
and
pushf
mov
pop
faddl
push
mull
outsl
inc
add
popf
sbb
sbb
dec
cli
or
sbb
cmp
sbb
pop
lea
pop
fstps
into
popa
push
pop
dec
sub
add
fs
inc
add
movb
rcl
xor
push
jnp
mov
std
push
or
push
in
cltd
sub
dec
test
add
inc
add
and
movsb
js,pt
add
push
sti
jle
enter
sbb
pushf
push
out
rcr
lret
pop
nop
je
sbb
into
fsubr
into
jb
nop
pop
cmc
fsubs
push
add
push
xchg
les
sbb
pop
or
mov
dec
jl
fdivl
and
dec
int3
or
pop
movsl
push
mov
imul
dec
fwait
push
pop
add
mov
std
xor
mov
scas
mov
mov
pop
sarb
add
mov
ja
mov
and
add
les
call
cmp
jbe
cs
movsl
cmp
xchg
lods
sti
js
sub
mov
sub
test
or
sbb
jmp
jge
outsl
cmp
inc
xchg
mov
insb
sti
jge
inc
add
je
cmp
out
loope
and
add
ss
jne
in
push
int3
mov
add
test
push
pop
cmp
sub
dec
sub
add
or
add
xchg
pop
out
add
inc
ret
jae
pop
filds
and
mov
fsubrp
pushf
xchg
push
cmp
dec
push
or
add
arpl
add
imul
push
shl
daa
leave
daa
dec
jg
dec
push
movsb
cltd
insl
xor
xor
in
mov
jb
mov
addl
hlt
and
mov
add
add
jle
or
push
adc
lahf
scas
sub
add
aas
sbb
inc
and
sub
in
lahf
adc
add
test
sbb
fcmovnbe
mov
add
or
mov
mov
icebp
dec
jmp
add
scas
inc
mov
cmpsl
xlat
lea
aaa
addb
jg
clc
in
