sub
dec
testb
add
js
fisttps
sub
add
add
arpl
les
dec
fsubr
movsb
add
add
outsl
hlt
add
mov
in
call
rolb
lods
insl
push
add
mov
addb
inc
add
in
pop
lcall
enter
icebp
dec
push
add
int3
cli
jg
jns
add
mov
psubsb
sbb
xchg
add
mov
cmpsl
out
add
inc
dec
jg
imul
add
mov
inc
daa
add
mov
inc
add
add
andl
add
mov
adc
sub
add
and
mov
add
sbbl
ds
addr16
cmp
jne
add
rcrl
test
add
and
add
mov
daa
cmpsl
add
int
test
and
mov
cmp
in
inc
add
add
add
add
mov
mov
add
sub
mov
add
sbb
cmpsb
add
pop
push
xchg
outsb
sbb
add
mov
xor
jb
or
rolb
push
add
add
push
xor
insb
testb
sbb
add
iret
nop
add
les
or
sub
dec
dec
icebp
sahf
sub
cmpsl
mov
add
mov
push
add
aas
cltd
test
add
mov
push
jb
mov
dec
push
add
jl
push
add
ss
inc
add
mov
mov
fldcw
add
xor
mov
mov
lret
filds
fdivl
test
xchg
orl
adc
mov
add
cmp
in
jmp
push
imul
aam
add
mov
nop
add
mov
push
jmp
test
mov
add
xchg
aaa
mov
xor
mov
and
mov
jecxz
lahf
cmp
fidivrl
stos
push
inc
xchg
add
cmpsl
lret
ljmp
addr16
sub
add
pop
test
add
or
add
inc
add
add
adc
add
add
gs
imul
mov
pop
daa
dec
popa
jae,pn
insb
out
push
sbb
and
lcall
jns
addr16
xchg
add
add
fnstcw
mov
inc
add
push
add
les
inc
inc
pop
out
inc
add
add
pop
shrl
loope
cmp
popa
mov
mov
add
push
add
test
add
mov
add
add
mov
mov
add
push
addb
add
add
and
mov
xchg
pushf
add
dec
and
subl
aam
pushf
add
add
mov
dec
and
jb
push
je
cmp
add
jmp
and
mov
data16
add
out
sbb
jo
push
xchg
cmpsb
add
lds
add
add
inc
int3
sub
add
mov
add
lods
test
insb
mov
pop
push
dec
jno
insb
mov
je
fimull
add
jmp
and
xchg
sbb
inc
add
push
add
mov
add
push
sub
arpl
xor
mov
adc
and
cmpsb
add
flds
add
cmp
mov
add
inc
gs
in
push
jmp
rolb
xor
adc
jp
add
jp
lea
add
fiaddl
add
scas
lock
add
pop
adc
rolb
rolb
or
mov
clc
lock
pop
rolb
jns
fiaddl
add
add
add
mov
rolb
rolb
repz
cmp
jmp
mov
cmp
sbb
mov
inc
add
in
mov
lret
test
xor
sub
add
mov
add
enter
inc
scas
pop
ret
sti
ljmp
add
mov
xchg
mov
rcll
add
mov
add
jne
sti
addb
add
add
add
arpl
add
lods
jp
add
add
js
add
mov
push
mov
pop
add
add
pop
rolb
lock
add
add
add
or
lret
mov
and
add
push
add
inc
movsb
add
ds
aam
add
add
sar
lea
xor
lods
ds
add
sbb
insb
mov
imul
mov
aaa
rolb
or
nop
add
xchg
add
add
add
add
xor
xchg
add
mov
add
add
fwait
add
mov
scas
xor
add
pop
push
add
xor
mov
add
sbb
mov
jmp
jl
fcomp
xchg
lcall
add
add
in
xor
mov
and
cmp
add
add
out
mov
add
pop
push
lods
testb
add
pop
and
je
popf
pop
mov
push
loope
pop
xchg
rcrl
rolb
pop
push
sub
in
outsl
mov
adc
int
cmpsl
dec
call
add
lret
push
sbb
sbb
movhps
cwtl
push
add
sbb
cld
pushf
fwait
iret
mov
dec
jnp
dec
aam
les
cmp
mov
jne
add
sbb
add
add
mov
push
add
adc
enter
test
push
add
pop
dec
lcall
add
test
add
add
rolb
fcomi
jge
divl
add
lds
sbb
add
add
and
sti
push
add
add
mov
icebp
add
add
mov
push
cltd
out
repnz
push
add
test
jmp
jle
rcll
dec
xchg
add
cld
fsubrl
add
sahf
add
add
out
or
sub
adc
and
mov
ror
data16
cwtl
or
add
addr16
inc
cmp
add
cmpsl
pop
pop
into
or
add
insb
adc
add
adc
lcall
cmpsb
add
add
in
repnz
sbb
add
add
and
dec
xor
cli
cltd
inc
sbb
sahf
jne
mov
std
mov
add
xchg
dec
jge
add
stos
sahf
xchg
sti
pop
add
fiaddl
add
lahf
int3
sbb
mov
testl
jmp
ret
pop
add
mov
icebp
jno
lds
call
jp
sbb
out
adc
cmp
cld
jecxz
movsb
add
mov
nop
add
jne
push
add
add
or
add
mov
test
or
popf
push
hlt
add
jne
jne
in
inc
stos
cli
cmpsl
push
add
and
add
add
repz
ret
into
out
add
test
iret
gs
icebp
mov
add
jg
dec
pop
xchg
xor
cvtps2pd
add
pop
mov
cmp
add
add
int
inc
add
je
push
out
add
mov
addb
lahf
mov
add
add
dec
dec
or
inc
add
inc
inc
add
add
or
add
add
insl
fdivl
add
jnp
dec
xchg
add
inc
enter
sbb
cmp
push
sahf
sbb
add
add
popa
std
lock
pusha
add
jmp
lahf
and
mov
or
add
add
add
scas
fildll
adc
sub
adc
negl
cmpsl
inc
test
add
aad
int
sti
pop
adc
add
gs
cmpsb
add
mov
testb
pop
repnz
add
adc
and
mov
ret
test
cmpsl
add
out
pop
out
imul
and
add
insl
dec
add
mov
rolb
fwait
mov
das
imul
pop
sbb
mov
mov
and
mov
imul
hlt
add
mov
add
les
pop
xlat
sub
add
lds
hlt
add
pushf
pop
mov
push
xchg
or
add
add
fwait
mov
hlt
add
add
pop
je
fyl2x
push
enter
add
sahf
sub
cmp
or
xor
sbb
adc
dec
inc
add
inc
add
in
call
add
dec
insb
addb
or
add
sahf
data16
add
cmp
add
cmp
add
add
mov
mov
shrl
mov
aas
loop
outsb
loope
add
sbb
ljmp
mov
jl
add
mov
in
pop
jnp
add
xchg
in
lds
add
mov
jl
cltd
inc
add
insb
test
xlat
fsts
mov
add
cmpsb
add
dec
push
push
fucom
add
add
add
add
add
aam
movsb
add
lds
adc
jne
testb
in
popa
inc
add
testb
add
cmp
mov
data16
in
outsb
mov
xorl
xchg
sarl
shll
add
and
inc
data16
or
mov
add
jge
stc
into
sbb
push
bound
mov
dec
sub
add
push
add
add
add
in
jns
inc
pop
mov
mov
add
add
add
fistpl
add
inc
add
sbb
mov
add
mov
mov
add
mov
mov
sbb
in
add
inc
add
add
xor
fildll
mov
add
cltd
adc
add
arpl
call
xchg
add
rolb
inc
mov
pop
or
leave
fwait
mov
pop
inc
add
add
push
push
wbinvd
add
mov
sar
fisubs
in
add
nop
add
mov
cmp
inc
add
mov
mov
das
jae
xchg
add
add
out
sub
xchg
negl
aam
cltd
je
gs
js
add
sub
add
mov
test
mov
sub
jl
mov
fdivs
sbb
jp
call
aaa
out
adc
les
andl
xchg
addr16
add
xor
sub
add
add
inc
add
add
xor
test
adc
xchg
mov
xor
add
sub
and
cmpsl
jb
mov
pop
dec
and
mov
sbb
add
xchg
cltd
jno
in
rorl
imul
adc
cmp
mov
xchg
add
pop
sti
in
pop
xchg
add
rolb
flds
jns
sbb
and
mov
add
mov
rolb
aad
rolb
aam
push
add
into
mov
xor
leave
jmp
xchg
add
stos
cmp
test
mov
ficompl
add
add
add
mov
sub
lods
dec
fadds
add
aaa
mov
ffree
add
in
ljmp
add
cmc
stc
jge,pt
add
jnp
add
add
mov
push
add
and
and
add
inc
xchg
in
jb
in
movsb
add
aas
mov
ja
dec
sub
add
aas
xlat
jle
std
inc
add
push
sbb
outsl
add
sub
dec
mov
add
fmuls
pusha
add
add
add
add
notl
les
rolb
mov
add
push
add
add
mov
in
fidivs
inc
add
clc
fwait
popa
int
add
out
add
add
subl
or
add
dec
or
inc
in
add
loopne
jno
pop
lahf
movsl
jp
add
jg
add
scas
test
inc
stc
and
mov
push
push
add
mov
push
add
adc
aas
rolb
add
mov
mov
add
cmpsb
add
lcall
inc
add
outsl
xchg
add
cmc
push
add
or
outsb
add
mov
outsb
mov
ret
loopne
ret
sti
lods
add
mov
jle
add
inc
add
xor
mov
lcall
cmp
adcl
sub
push
push
push
cld
call
sub
mov
cs
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
jmp
jmp
add
add
or
mov
outsl
mov
add
cmp
cmp
jge
nop
add
in
fiaddl
add
sub
jno
ror
mov
pop
or
hlt
add
clc
mov
jb
xor
add
mov
das
rolb
push
add
daa
insb
in
out
lret
add
mov
mov
jl,pt
cmpsl
push
rolb
rcll
imull
push
add
pop
leave
push
add
test
in
push
and
cmp
add
lea
xchg
dec
inc
in
mov
dec
aad
out
shrl
test
mov
lret
sbb
outsl
leave
out
sti
arpl
fdivs
cmc
xor
das
inc
add
int3
xor
test
add
sub
add
mov
movsb
add
add
sahf
fsubl
jg
add
movsb
add
test
insl
push
mov
add
add
insl
push
jmp
add
loop
mov
cs
add
jg
add
pop
jbe
inc
add
add
leave
xchg
insl
mov
mov
add
add
sbb
xor
imul
ja
stos
lahf
push
sbb
inc
add
stos
clc
jae
push
jg
aam
adc
xor
mov
pusha
add
pop
lret
add
mov
fdivr
rolb
lods
pop
mov
js
add
mov
pop
shll
call
rcrl
jns
rolb
push
ret
popf
jb
adc
pop
mov
das
fwait
and
sub
or
fdivrs
out
or
push
mov
adc
mov
xchg
add
xchg
outsl
gs
adc
stos
mov
jg
mov
cld
bound
mov
xchg
add
sub
movsl
and
mov
int
add
add
add
jmp
out
sbb
int
add
pushf
and
mov
add
add
les
ret
add
fisttps
repz
dec
push
add
add
fiadds
xlat
inc
dec
xchg
xor
loope
into
ds
sbb
mov
cli
aaa
cmpl
addr16
mov
addb
add
rolb
pop
bound
mov
pop
mov
add
test
mov
mov
addl
mov
mov
and
xor
outsl
cmp
dec
or
add
adc
cmp
les
mov
cmp
and
add
jno
add
add
test
stc
loope,pt
add
push
popf
mov
repnz
add
movb
xor
gs
std
rolb
cmc
test
jnp
daa
push
add
decb
add
push
add
popa
loopne
push
add
pop
cmpsl
aas
jne
lret
cmc
imul
jno
push
add
test
sahf
call
push
add
add
add
jp
push
jl
loop
jae
hlt
add
jl
and
add
and
mov
add
aas
sub
dec
xor
jge
je
add
mov
push
add
jmp
outsl
inc
movb
add
lods
sub
sub
sub
add
sub
push
add
add
fwait
and
pusha
add
and
mov
enter
imul
add
sbb
leave
sbb
sbb
add
cmp
sarl
adc
add
mov
add
sbb
add
sub
daa
push
xor
lods
pop
mov
sbb
and
adc
mov
mov
stc
fucomip
addb
daa
inc
push
mov
adc
dec
into
arpl
mov
add
hlt
add
pop
repz
add
mov
add
insl
mov
pop
aaa
cmp
push
rcr
add
mov
bound
mov
push
add
and
mov
mov
lret
pop
in
xor
cmpsl
outsl
and
mov
adc
arpl
mov
bound
mov
inc
stc
sub
data16
lods
out
lds
mov
and
mov
js
add
add
add
add
in
sub
test
sub
cwtl
push
add
push
mov
mov
cmpsl
out
add
movsb
add
pop
cmp
enter
mov
lcall
addb
testb
add
lock
adc
loop
lods
in
rcll
addb
sub
push
gs
aas
daa
mov
pop
add
mov
pop
jns
addr16
mov
xchg
mov
jmp
fistpl
test
repnz
cmp
rolb
or
mov
loop
add
lds
adc
adc
sub
add
movsl
push
scas
cmpsb
add
std
fsub
add
add
lret
mov
mov
into
rolb
out
testb
repnz
sub
inc
mov
cltd
les
scas
push
lock
add
sub
jo
mov
jge
std
sub
jns
mov
sbb
cmp
aad
inc
cli
cs
mov
xchg
add
add
mov
daa
jl
cmp
push
fildll
fnstenv
add
add
add
sub
jns
push
lcall
inc
add
push
add
imul
sarl
frstor
mov
add
add
inc
add
add
xchg
sbb
pop
push
add
mov
sahf
ds
mov
add
add
mov
sbb
add
and
cs
jbe
cmp
mov
push
add
mov
pop
aam
pushf
pop
mov
das
xor
add
add
add
lret
xchg
xor
add
pop
dec
xchg
push
add
add
std
sbb
mov
mov
jbe
orl
and
add
add
mov
add
jmp
xor
and
inc
add
add
cs
jne
add
add
dec
inc
add
enter
mov
inc
inc
add
add
xlat
sti
test
rolb
ret
sbb
add
add
xor
and
bound
mov
pushf
pop
ljmp
addb
add
test
push
add
add
push
add
mov
mov
aad
mov
adcl
cld
inc
add
add
loope
and
mov
leave
movl
leave
sbb
add
inc
add
movsb
add
adc
into
cld
sub
std
sbb
shl
je
jnp
scas
addr16
add
add
or
add
push
loopne
das
jmp
jg
imul
or
mov
add
xchg
mov
adc
fmull
jp
mov
rolb
inc
add
push
add
or
adc
addb
out
ds
push
add
arpl
cli
ljmp
push
add
add
add
sbb
add
imul
pop
rolb
xchg
add
add
add
pushf
iret
shl
mov
add
and
push
add
ficoml
push
add
add
sbb
pop
adc
dec
sub
lds
test
rcll
push
or
call
lahf
and
jl
add
inc
jb
test
xor
push
add
enter
cwtl
movl
fildll
sub
aaa
mov
loope
add
out
and
dec
daa
decb
mov
sbb
repz
add
rolb
pop
sbb
outsb
std
stos
fistpl
or
test
fdivp
push
add
push
cmpsb
add
jnp
int
mov
out
dec
scas
pop
pop
aad
mov
sub
daa
add
mov
leave
add
mov
jle
and
add
push
add
lods
push
add
add
mov
stc
push
add
test
cmp
add
mov
sbb
add
mov
add
jne
mov
iret
inc
pop
dec
addb
sahf
aam
das
mov
leave
outsl
fs
mov
add
out
or
je
adc
test
add
adc
add
pop
scas
adc
xchg
add
addb
mov
and
lods
loopne
mov
xchg
jno
frstor
mov
ljmp
cli
scas
pop
aas
popf
or
aaa
test
popf
add
cmp
xlat
dec
rolb
shrl
das
pop
pop
sub
and
pop
dec
testb
aad
jg
jmp
add
mov
bound
mov
das
mov
test
add
or
test
add
add
xor
iret
mov
add
add
and
and
add
dec
jg
add
add
dec
int3
mov
jle
add
add
xchg
jo
or
jl
and
mov
mov
sti
ret
rolb
fldenv
out
sbb
xor
test
add
testb
push
add
jnp
int3
sbb
test
pop
or
ja
imul
add
rcll
cmpsl
add
add
jp
add
decb
xchg
mov
popa
or
add
add
gs
push
aas
pop
add
fwait
sbb
inc
add
pop
push
into
enter
sbb
and
or
or
enter
push
add
roll
jmp
mov
add
in
mov
pop
mov
dec
ret
fcomps
dec
les
pop
lahf
jmp
xor
and
mov
icebp
inc
add
add
add
test
xchg
lret
arpl
ljmp
add
add
add
popa
push
add
testb
shll
sbb
mov
mov
pop
out
adc
add
jbe
dec
add
mov
je
mov
inc
add
mov
add
lea
add
xorl
or
add
mov
dec
insb
subl
add
test
lds
xor
xor
and
lock
or
add
add
stos
jne
jg
roll
shll
add
in
push
add
jae
xor
lcall
lahf
bound
mov
mov
add
dec
add
adcl
mov
mov
scas
xchg
add
and
icebp
mov
aad
mov
mov
add
shrl
rolb
mov
pop
cmpsl
xorl
rolb
repnz
and
mov
and
mov
das
push
add
in
inc
add
sbb
clc
add
lock
nop
add
xchg
sub
mov
les
ret
stos
dec
and
push
add
or
ds
xor
mov
pop
jg
dec
arpl
imul
xchg
dec
jecxz
add
xor
add
add
mov
sub
test
inc
mov
fnstenv
xchg
dec
popf
lret
xchg
add
add
add
mov
add
push
add
pop
push
adc
loop
jmp
jb
jbe
aad
add
add
mov
dec
nop
add
add
movb
call
sbb
test
xchg
xchg
add
pop
scas
jo
mov
jb
add
repnz
jmp
imul
data16
pop
push
in
fsubl
mov
je
ljmp
or
add
lret
inc
pop
and
lea
push
inc
sbb
add
push
add
cmp
xor
add
add
jne
mov
pushf
or
aam
push
add
push
add
fwait
ja
addr16
jnp
xchg
cmp
and
mov
add
add
add
push
add
add
pop
dec
ds
xorl
outsb
scas
test
mov
aad
test
mov
add
lock
cmp
and
mov
xchg
add
add
adc
cmpsb
add
xchg
lcall
add
lret
test
ffreep
add
pop
iret
icebp
pop
mov
int
fstl
add
or
mov
xchg
add
or
enter
pop
nop
add
add
jge,pn
mov
add
hlt
add
add
push
mov
mov
add
cmc
or
xor
fstl
and
add
cwtl
decl
or
fdivl
adc
and
mov
add
sub
movsl
lds
inc
add
jne
mov
inc
insl
in
aaa
cli
les
mov
lret
stc
add
add
and
mov
add
fidivl
enter
mov
jecxz
mov
add
mov
cmp
push
lcall
ds
jl
push
loopne
fisubrs
popa
xchg
add
ja
jmp
add
mov
addb
xlat
sbb
add
lcall
push
add
add
iret
and
mov
out
sbb
mov
aad
add
pop
mov
mov
mov
pusha
add
out
cs
or
das
dec
push
add
out
or
mov
fucompp
push
int3
pusha
add
pushf
pop
icebp
lret
add
add
flds
add
mov
xchg
lods
popf
jne
pop
add
inc
add
leave
insb
fbld
push
xchg
jns
icebp
mov
add
and
mov
pop
dec
jmp
pop
out
fwait
insl
and
int
sub
xor
cmp
popf
sbb
dec
rorl
add
incl
ja
insl
mov
mov
jg
dec
insl
mov
mov
jge
jg
movsl
jne
test
dec
fsubrp
gs
add
dec
pop
rolb
sbb
fidivrs
inc
and
mov
mov
sub
add
repnz
push
add
add
add
stc
push
add
mov
mov
pop
mov
iret
jg
out
add
adc
iret
pop
adc
dec
or
mov
mov
mov
mov
je
incb
xor
xchg
bound
mov
sub
add
push
inc
add
add
test
les
loope
testb
add
movb
ffreep
mov
faddl
mov
xchg
in
mov
add
add
add
arpl
mov
ret
aad
add
jae
add
aam
insl
add
mov
setae
in
and
mov
dec
shrl
add
push
add
mov
or
bound
mov
mov
out
int3
scas
scas
or
repz
rolb
scas
jl
les
pop
cmpsl
loopne
inc
add
js
jae
jmp
add
add
add
add
rolb
and
add
push
enter
sbb
inc
arpl
pop
lea
shll
cmp
add
mov
or
bound
mov
push
add
add
mov
add
mov
rolb
add
mov
xor
sbb
pop
loopne
push
movl
lahf
test
add
ja
scas
xor
inc
add
jbe
loopne
sub
cmpsl
sub
add
add
add
push
add
dec
lahf
filds
fsts
fmull
clc
dec
hlt
add
add
ds
add
dec
loop
and
mov
add
add
add
sbb
inc
add
pop
mov
xchg
add
cmp
add
sub
aam
push
rcr
jns
cmpsl
xchg
inc
mov
add
ja
push
add
add
pop
repz
dec
ret
pop
cli
or
testb
and
mov
lods
rolb
testb
ds
js
js
adc
jo
xor
xchg
add
add
rolb
imul
mov
imul
add
loopne
adc
mov
fildll
ret
cwtl
out
dec
mov
out
dec
int
add
add
adc
add
or
rolb
add
mov
pop
stos
add
mov
sub
mov
add
add
jle
mov
add
add
add
dec
pop
mov
and
ljmp
mov
mov
xchg
push
add
outsb
xor
mov
inc
pop
xchg
add
bound
mov
cmp
fisttps
xor
mov
xor
xlat
insb
fildl
add
int3
jl
dec
popa
pop
jbe
push
add
jmp
jg
mov
jecxz
add
mov
or
add
dec
lock
mov
push
add
jmp
or
adc
add
lcall
sti
out
xor
pop
ja
jle
into
lods
sbb
sbb
xchg
scas
cmp
es
aad
add
pop
sub
aas
lea
jbe
pop
adc
jecxz
add
inc
adc
add
sub
add
add
insb
mov
adc
arpl
mov
mov
ret
out
jbe
lods
add
sbb
movsl
in
add
mov
add
cltd
jmp
arpl
push
mov
add
movsl
jns
cli
xchg
add
xchg
addb
pusha
add
sbb
lret
add
pop
xchg
popa
inc
and
mov
add
mov
add
jmp
cmpsb
add
xlat
loopne
out
xor
stc
jmp
int3
je
rolb
adc
inc
jle
sbb
rolb
add
std
cmpsl
mov
sub
pop
push
mov
add
loop
mov
add
mov
movsl
movsl
or
add
push
add
ret
les
aas
insl
mov
add
stos
xor
xchg
loopne
cltd
mov
add
add
dec
rolb
or
inc
add
int3
inc
cmp
sub
xchg
ljmp
mov
mov
imul
int3
push
xlat
mov
leave
idivl
xlat
adc
pop
lahf
jp
add
pusha
add
in
ffreep
add
add
or
imul
std
and
mov
jge
add
add
ret
inc
add
add
jo
loopne
imul
fimull
outsb
test
punpckhwd
ficoml
pop
push
add
add
add
cmc
pop
mov
iret
outsb
lea
bound
mov
sbb
out
push
add
add
cmp
add
add
or
push
add
loopne
xchg
stos
fistpll
mov
jmp
nop
add
decb
lcall
add
cmp
repz
cmp
add
push
add
imul
pusha
add
pop
fldl
add
insb
int
popa
mov
add
push
add
mov
push
or
xchg
push
xchg
jno
iret
jmp
add
pop
ja
sub
addb
fs
and
pop
js
adc
mov
add
jmp
sub
jle
pop
inc
sahf
cmc
or
sbb
inc
and
outsl
popf
jp
das
rol
add
push
dec
or
add
lcall
add
jo
addb
lea
outsl
inc
test
push
add
cmp
add
inc
test
int
adc
cwtl
aad
gs
aaa
cmp
test
xchg
cmpsl
xchg
dec
cmp
cmc
in
push
add
jp
and
xor
movl
mov
pop
aas
aaa
fistpll
das
rolb
testb
mov
and
add
push
add
hlt
add
stos
and
add
iret
daa
add
add
scas
add
cld
into
inc
add
add
lret
sbb
adc
lds
sub
jne
add
inc
add
add
scas
sbb
inc
fidivrl
lods
push
add
imul
mov
push
add
cmpsl
repnz
lock
sub
lret
movsb
add
jecxz
lds
std
pop
jmp
jo
adc
mov
or
sahf
or
add
add
mov
les
mov
movsb
add
out
ja
rolb
aas
pop
addb
rolb
mov
add
add
rolb
je
das
arpl
jb
ss
pop
jno
add
mov
pop
add
mov
js
add
add
add
add
mov
pop
ja
bound
mov
mov
adc
outsb
outsb
mov
ss
arpl
add
add
mov
add
add
les
jb
push
add
add
add
xor
mov
icebp
lret
push
add
add
jg
add
add
add
sahf
inc
repnz
mov
repnz
pop
or
and
add
push
push
popa
popa
xor
sbb
movb
dec
cs
movsl
pop
dec
hlt
add
dec
pop
orl
pop
idivl
nop
add
dec
fiadds
add
add
xor
pop
in
maxps
inc
add
fs
xchg
loopne
loopne
testb
cmp
sub
fdivp
add
mov
push
add
movsl
fucomi
lahf
test
scas
pop
mov
dec
push
sahf
pushf
or
fs
add
add
mov
add
push
push
add
mov
stc
in
fistl
xor
pushf
insl
sub
jmp
outsb
and
add
repnz
repnz
jl
add
adc
data16
mov
leave
arpl
fisubs
add
orl
movsl
sub
add
mov
add
add
mov
dec
bound
mov
faddp
mov
mov
add
pop
and
add
mov
test
lahf
cli
ret
aad
add
add
out
popa
lcall
adc
xor
mov
addb
js
pop
and
pushf
cmpsb
add
lock
and
mov
mov
fmul
arpl
xchg
adc
push
add
sbb
add
mov
enter
add
jno
adc
sbb
fidivrs
les
fisttpl
add
push
xorl
pop
push
add
add
loop
int
fistps
inc
add
test
adc
and
mov
add
add
sbb
comiss
xor
add
inc
pop
mov
pop
das
xor
repnz
and
fdivrl
mov
add
add
add
icebp
mov
sbb
dec
data16
popa
mov
xchg
inc
add
pop
arpl
add
dec
mov
add
pop
sbb
stc
add
sub
xor
xlat
lahf
sbb
mov
mov
and
inc
add
rcrl
cmp
add
mov
pop
inc
dec
imul
loopne
repnz
mov
add
add
sub
mov
mov
rorl
or
fimull
add
sti
int
rolb
jmp
add
test
shll
rolb
rolb
cmp
and
mov
jle
add
add
add
dec
mov
add
jo
push
repz
outsl
sbb
add
inc
add
inc
addr16
stc
dec
xor
mov
daa
adc
add
add
iret
mov
push
dec
cld
jmp
and
xchg
adc
ret
inc
add
fmull
sub
add
sub
in
into
out
jp
adc
hlt
add
jl
jecxz
add
int3
xchg
mov
inc
ljmp
mov
adc
mov
insb
mov
add
mov
push
cwtl
inc
fsubs
add
stos
test
fadd
add
je
popf
fwait
mov
lods
rcrl
filds
add
or
stos
xchg
outsl
sub
fstps
jp
add
jle
aaa
inc
pop
lea
mov
loope
cmpsl
or
push
dec
sub
add
stc
test
xor
cmp
add
pop
iret
inc
add
test
add
jnp
repnz
add
mov
mov
call
sub
mov
add
sbb
pop
mov
arpl
js
pop
stos
sbb
xchg
add
mov
push
add
out
cwtl
pop
add
jnp
pop
dec
inc
add
dec
sub
pop
sbb
call
inc
mov
add
add
addb
jmp
add
mov
push
imul
jp
add
mov
fcompl
lret
xor
push
test
add
cmp
fsubrs
inc
daa
loope
sbb
std
jmp
xchg
inc
loop
mov
lods
add
xchg
add
imul
and
mov
mov
daa
xchg
inc
and
add
add
jecxz
daa
xor
xchg
add
andl
inc
add
add
add
add
mov
add
dec
fisubrl
cltd
out
test
lds
das
add
mov
dec
shr
add
jae
cmp
add
cld
xlat
nop
add
mov
sub
cmp
xchg
add
icebp
or
inc
push
add
dec
in
adc
mov
clc
aad
add
cmp
add
and
jmp
add
add
mov
call
mov
xchg
add
mov
insl
call
sub
adc
iret
adc
adc
add
add
mov
andl
add
mov
adc
cmp
add
sbb
add
add
movb
add
pusha
add
pop
in
add
lcall
jl
sub
shl
in
cwtl
jg
ja
add
scas
int3
pushf
adc
jnp
pop
adc
rolb
adc
add
mov
inc
add
add
inc
jge
add
loop
outsl
push
nop
add
pop
sbb
popf
mov
arpl
add
aad
add
adc
pop
xor
add
jmp
add
add
jge
scas
push
add
bound
mov
add
pop
repnz
xor
sub
in
add
jne
push
push
add
in
xchg
dec
stos
data16
add
in
mov
adc
jle
add
dec
lods
jae
cld
sub
cmp
xchg
add
add
frstor
loope
fadds
cmp
add
add
adc
add
jns
push
ret
cmp
sbb
add
aas
ss
mov
add
pop
sub
or
pusha
add
call
aas
rolb
add
xchg
dec
pop
push
add
cmp
mov
mov
nop
add
xor
addb
add
add
jns
repz
add
mov
or
std
daa
xchg
mov
mov
lret
push
add
adc
sbb
xchg
add
movb
sub
sahf
rolb
mov
rcll
jae
add
add
push
add
add
mov
push
add
add
mov
pushf
fisubs
add
add
loope
push
inc
push
or
add
add
add
cmp
add
and
push
add
in
fcoms
lods
loopne
sub
xor
mov
add
loopne
lret
fisubs
mov
rcrl
cmpsl
popf
mov
add
aaa
add
mov
add
mov
sbb
fisttps
sahf
hlt
add
adc
test
sub
pop
inc
add
push
data16
addr16
xchg
rcll
pushf
addb
add
pop
in
and
mov
in
xor
rolb
sahf
mov
or
and
push
jecxz
pop
push
fiaddl
add
scas
loop
sbb
repnz
mov
mov
add
add
cltd
xchg
xchg
add
out
push
add
add
push
nop
add
add
mov
add
add
mov
sub
cmp
cmp
push
add
mov
pop
add
add
jp
add
add
xor
mov
add
add
in
fstpl
adc
add
or
mov
mov
loop
fistl
pop
push
add
add
int
aam
jb
cli
mull
ss
rolb
mov
clc
lds
add
rolb
lret
dec
scas
push
add
fmuls
adc
jle
push
stos
push
add
mov
add
jnp
add
add
testb
add
xchg
add
aaa
mov
jmp
add
jns
out
fisubs
decl
add
lcall
dec
test
js
xchg
lods
or
add
cmc
das
addb
add
insl
aam
test
xchg
adc
dec
xor
imul
lret
and
mov
jo
pusha
add
lods
pop
pop
jns
pop
mov
js
xor
pop
mov
add
or
dec
loopne
xor
mov
xchg
add
cmp
add
add
mov
pop
cmc
stc
addb
sbb
add
orl
repnz
add
rcll
mov
and
in
adc
add
inc
add
adc
out
pop
sahf
or
or
add
add
pushf
inc
test
mov
xchg
add
cltd
xchg
loopne
push
add
add
daa
iret
mov
add
mov
mov
add
add
push
add
inc
add
les
ds
dec
test
inc
add
jne
mov
add
and
js
mov
fisubl
mov
fsubl
lcall
dec
inc
pop
push
add
add
add
mov
or
jns
sbb
pop
cltd
stos
cs
xchg
mov
loop
pop
cmp
scas
aam
push
jp
pop
daa
lahf
mov
adc
and
shrl
mov
scas
int
shl
loop
sbb
add
les
fidivrs
dec
adc
movsb
add
cs
fsubl
add
add
test
into
dec
mov
dec
ja
add
adc
cmc
xor
push
jae
leave
out
mov
add
lds
rolb
insb
shr
ljmp
fwait
inc
add
add
mov
add
popa
cmpsb
add
mov
and
out
mov
mov
ss
add
cld
xchg
add
lcall
movb
outsb
and
mov
add
jp,pt
add
fcmovb
add
lcall
add
inc
xor
inc
add
push
in
and
into
in
add
mov
frstor
add
add
xchg
hlt
add
adc
jae
ret
mov
cmp
lcall
xchg
add
xchg
add
mov
add
addb
pop
jne
repz
mov
stc
sub
mov
movb
outsb
add
mov
mov
test
push
pop
lfs
fcoms
movsb
add
dec
xor
addb
cpuid
add
or
and
add
cs
xchg
pop
push
ss
addl
stos
jae
in
lret
imul
add
pop
xor
adc
fisubrl
xor
sbb
data16
insl
das
jns
rcll
icebp
add
je
sti
and
mov
leave
push
add
add
adc
mov
pop
addb
stos
jae
inc
cmp
imul
icebp
frstor
lahf
mov
out
xlat
pop
mov
mov
test
sub
sbbl
add
aaa
or
add
inc
add
add
add
es
lcall
push
lds
cs
test
lds
mov
mov
mov
mov
insl
cmp
add
stc
js
sbb
cwtl
push
add
pop
addb
fisttps
ret
jmp
push
add
add
add
mov
add
mov
xchg
add
add
cmp
sub
mov
jg
out
fmuls
cs
add
and
mov
mov
and
add
jae
mov
add
pop
inc
push
add
add
mov
mov
jbe
dec
rolb
jecxz
cmpl
aas
mov
add
jo
test
pop
imull
jmp
call
jl
dec
cwtl
jns
call
add
add
sub
add
pop
addb
xor
mov
rcrl
ret
dec
push
mov
xchg
push
repz
pop
add
mov
fdivrl
and
mov
add
adc
add
add
pop
fstpl
push
add
jns
add
xor
popl
mov
dec
sbb
add
pop
sub
clc
pop
dec
push
or
push
jp
loope
outsb
dec
xchg
jb
inc
jb
mov
inc
add
add
add
je
mov
add
imul
add
call
mov
clc
fimull
add
pushl
mov
test
inc
add
xor
insl
enter
cltd
or
out
xlat
rcrl
add
push
add
idiv
adc
add
and
mov
mov
loop
mov
mov
icebp
sbb
xchg
mov
and
sbb
mov
insb
push
add
mov
jae
push
push
add
out
and
arpl
jmp
addb
test
add
add
mov
add
aam
hlt
add
pop
mov
add
pop
jae
lods
cmp
lds
dec
addb
add
jns
add
add
add
nop
add
add
test
add
pop
repz
mov
inc
fsubl
add
jle
inc
rolb
adc
int3
cmp
out
mov
pop
movsb
add
jl
adc
add
incb
rcr
pop
xor
add
mov
add
push
add
adc
addb
aas
push
xchg
cmc
je
cmp
add
adc
in
jl
cmpsl
and
xchg
jge
add
cmp
jp
dec
mov
push
add
fildl
out
cmp
cltd
dec
mov
mov
testb
add
add
add
shll
adc
push
repnz
sub
sbb
jb
adc
xchg
pop
ds
xor
add
inc
add
rorl
mov
mov
cmp
lcall
ljmp
cmpsl
ljmp
jae
add
add
add
add
jl
icebp
jo
and
add
lcall
cwtl
adc
ss
push
add
lret
testl
jb
incb
add
pop
je
loopne
js
add
jg
add
lret
lret
inc
add
sahf
addb
cmpsb
add
add
cmpsb
add
in
mov
mov
add
add
mov
push
jae
repz
mov
add
push
add
pop
and
mov
int3
bound
mov
add
add
xor
add
std
and
mov
mov
insb
sbb
iret
out
jecxz
add
add
add
mov
and
roll
dec
test
icebp
xchg
add
cli
inc
mov
mov
add
sub
add
add
add
jmp
and
mov
mov
lods
sub
cmp
lret
repnz
add
adc
sbb
add
add
mov
sub
pop
add
inc
mov
ljmp
xor
jmp
nop
add
ret
test
sbb
dec
and
mov
or
fistps
arpl
add
mov
add
add
add
das
lcall
sbb
jae
mov
mov
jae
jne
int
xchg
add
push
sahf
xchg
test
repnz
or
xchg
out
rolb
imul
das
sbb
add
add
pop
sbb
add
add
repz
jmp
add
call
push
inc
mov
test
insb
adc
in
mov
adc
jl
addb
xchg
data16
loop
jl
add
jge
add
jmp
out
scas
hlt
add
lret
pop
push
data16
mov
cli
dec
xchg
add
std
mov
cmpl
add
aam
xchg
test
sbb
add
xor
mov
mov
mov
xor
das
icebp
inc
add
and
mov
cmp
test
inc
add
lds
add
outsb
pop
fsubl
mov
adc
xor
add
mov
adc
add
add
xor
push
add
pop
test
inc
jnp
add
mov
xor
push
add
icebp
add
mov
xor
add
sub
fsubr
xchg
add
add
add
mov
stos
push
add
pushf
dec
fwait
xchg
arpl
add
ret
int3
hlt
add
outsb
add
add
inc
addb
mov
loopne
xor
pop
pushf
pop
out
test
movsb
add
add
mov
pop
out
cmp
aad
sbb
testb
inc
add
pop
and
lods
mov
lret
jns
add
add
mov
xchg
dec
push
add
add
stos
jmp
notl
addb
lret
je
addl
ljmp
or
jecxz
movb
and
popf
outsl
inc
add
add
data16
jecxz
add
push
add
cmpsl
cmc
mov
mov
mov
imul
dec
test
dec
ret
and
mov
fwait
pushf
xchg
inc
movl
cmp
jb
lea
jnp
xor
add
sub
fistpll
pop
sbb
data16
fnstcw
add
jmp
fldt
jle
inc
add
pop
pop
cli
xor
bound
mov
xchg
cld
test
inc
add
dec
push
add
repnz
inc
add
sbb
insl
mov
add
add
test
push
addb
or
add
das
fdivrs
jns
mov
mov
loope
ret
xchg
das
inc
int3
push
add
adc
push
add
jae
lret
inc
xchg
add
cltd
xor
mov
add
add
outsl
add
xor
mov
sub
add
ljmp
fwait
test
add
std
scas
sub
mov
test
xchg
push
xor
addb
leave
lret
fnsave
test
test
push
push
add
mov
jb
cmpsb
add
rolb
int
add
in
leave
mov
pop
and
xchg
mov
add
adc
aam
mov
mov
pop
pusha
add
add
xchg
fistpl
lcall
movsb
add
sbb
dec
test
scas
jno
aad
push
add
or
call
add
sub
aam
fscale
les
aam
inc
pop
mov
clc
sub
imul
repnz
in
lods
adc
icebp
popa
pop
loopne
or
mov
fdivrs
adc
mov
mov
das
lea
in
daa
loope
add
lcall
add
jnp
push
push
sub
insb
in
repz
cmp
add
cmp
dec
pop
ja
cmp
xor
pop
jo
add
mov
push
add
add
cmp
add
iret
rolb
dec
ret
lret
push
mov
dec
fmull
mov
dec
movsb
add
fsubl
mov
ficompl
add
push
hlt
add
add
add
add
add
lahf
in
add
popa
mov
sbb
add
mov
pop
push
add
dec
cmp
mov
mov
mov
lret
add
ficoml
dec
inc
add
out
repz
nop
add
out
call
enter
add
xlat
hlt
add
add
into
popf
or
and
mov
gs
xor
xor
xlat
pop
out
repz
mov
clc
xor
dec
ds
lds
xor
jae
pop
dec
rcll
cmp
leave
adc
sub
mov
and
add
add
add
add
rolb
pop
shll
mov
xchg
push
dec
mov
outsb
clc
add
mov
popa
cmp
test
fdivs
stos
xchg
pushf
and
in
add
ret
outsb
in
clc
jb
arpl
or
push
add
js
add
mov
jno
sbb
mov
or
repz
or
pop
push
add
mov
mov
mov
jns
in
not
fildl
hlt
add
in
cld
fldcw
cmp
push
test
jo
mov
insb
insb
cmpsb
add
enter
sbb
lea
fimuls
add
out
mov
mov
pop
jnp
add
lret
jle
jmp
add
add
rolb
adc
mov
add
mov
sahf
inc
sbb
filds
add
add
ljmp
add
add
outsl
push
movb
fildll
adc
mov
mov
sbb
push
add
add
push
popa
lret
loop
jmp
add
add
jno
add
out
outsl
pushf
pop
xchg
add
xchg
into
jg
add
sbb
sub
jo
shll
jo
jo
xchg
add
add
mov
dec
arpl
add
push
add
test
in
add
add
dec
call
fwait
aas
loope
xchg
data16
add
shll
add
jns
push
add
cmp
add
iret
fisubrs
add
out
mov
add
add
add
adc
add
add
add
add
add
add
add
mov
xchg
add
jle
ss
mov
add
ss
cmp
ds
add
dec
dec
into
out
lods
mov
dec
lods
pop
jb
xchg
mov
add
mov
pusha
add
add
addb
add
adc
test
pop
lods
mov
add
sbb
jnp
jmp
mov
xor
shl
imul
jnp
add
mov
ret
imul
push
mov
add
psraw
add
clc
pop
das
or
testb
test
ret
jmp
add
cmp
add
add
mov
filds
hlt
add
aas
mov
movb
call
jl
add
out
mov
add
xchg
fildll
add
imul
mov
add
push
test
xchg
rcrl
sub
mov
push
cmc
and
pop
add
mov
push
mov
sbb
cmp
sub
push
lods
rcrl
add
data16
mov
jg
dec
push
add
loopne
ja
push
and
cld
outsb
pop
test
comiss
mov
add
add
cmp
or
add
cld
sbb
mov
sub
out
rorl
dec
xchg
adc
addr16
or
and
mov
dec
sbb
inc
mov
mov
add
adc
push
xor
je
fcoml
add
push
les
imul
cwtl
push
add
ja
jmp
pop
mov
lret
cmp
cli
out
scas
xor
add
mov
inc
mov
or
push
add
jmp
pushf
and
lock
mov
jae
sub
push
add
mov
add
mov
fdivrs
cmp
testl
pop
rolb
fcmovnu
push
push
jl
add
add
mov
add
in
icebp
out
insl
or
xchg
ja
sbb
sub
cmp
insb
sbb
jp
popf
pushf
imul
popf
cvtdq2ps
add
add
jge
testb
sti
inc
add
add
inc
fsubrs
enter
mov
fwait
cmc
add
mov
and
add
add
add
mov
and
data16
inc
add
sbb
sbb
inc
mov
mov
inc
push
add
push
iret
fdivl
sbbl
mov
add
dec
dec
je
xchg
and
add
mov
pusha
add
stos
lret
out
clc
out
pop
dec
rolb
in
xor
lahf
call
pop
jl
iret
pop
test
jl
add
or
into
testb
lods
in
fdivl
aam
pop
mov
add
add
add
add
mov
sbb
pop
inc
jge
add
add
xchg
mov
jmp
xor
cmpsl
testb
inc
push
add
jle
out
cs
outsl
in
inc
add
int
add
int
out
cmp
cmp
in
cltd
int3
mov
add
add
sti
rolb
enter
add
dec
cmpsl
jl
add
mov
rolb
xchg
inc
add
pop
adc
lahf
int3
jo
inc
add
hlt
add
jl
cmp
pop
data16
dec
inc
add
mov
test
pop
lret
test
add
test
add
cmpsl
mov
add
jns
add
add
mov
cmp
add
rolb
add
mov
adc
pop
dec
add
insb
pop
jae
ss
add
aaa
into
cmp
add
pop
gs
add
add
mov
pop
sbb
dec
call
adc
ja
out
add
lcall
shll
in
cld
xchg
jg
xchg
mov
ds
lahf
push
add
mov
dec
addb
lea
sbb
rolb
push
add
add
testl
add
data16
mov
int
add
xor
fbld
test
xor
push
add
sub
mov
sbb
add
mov
add
push
adc
jp
push
mov
adc
mov
mov
pop
xchg
pop
jmp
cmp
lret
adc
test
pop
sbb
addb
add
jo
inc
push
fdiv
add
pop
cmp
addb
addb
imul
add
inc
add
pop
adc
outsl
lods
lahf
testb
add
movsb
add
add
inc
add
add
lret
pushf
cmpl
add
xor
loop
repz
sub
add
cmp
adc
mov
add
add
mov
xchg
mov
mov
ret
ffreep
mov
push
out
add
cld
stos
out
mov
pop
les
add
mov
push
add
mov
add
leave
jae
lcall
sub
out
xchg
add
inc
xchg
mov
lods
push
xlat
imul
jle
imul
shll
cmp
clc
inc
add
sahf
jmp
xor
out
fisttpl
cld
push
add
jns
gs
cmc
insb
xor
add
lret
cmp
loope
outsb
inc
push
mov
add
add
jno
cmp
xchg
sbb
add
add
add
add
mov
addb
sub
je
add
jmp
fisubrl
cld
or
mov
push
add
popf
mov
mov
jo
test
sbb
sarl
cmpsl
rolb
sbb
add
cmp
add
add
das
sub
lock
jp
add
mov
fidivrs
cmp
add
add
ljmp
mov
add
push
jl
adc
mov
stos
fstl
scas
cmp
mov
dec
cltd
mov
cmp
addr16
add
add
movsl
mov
pop
sti
jmp
jp
xchg
push
lahf
cmp
add
mov
add
movsl
icebp
add
aam
addb
add
test
ficoms
fucompp
stos
fucomi
inc
add
mov
add
add
push
add
mov
jl
aaa
pop
xchg
cli
sbb
cmc
mov
mov
mov
aaa
sub
mov
ljmp
push
add
jno
mov
inc
prefetcht2
pushf
popf
mov
outsl
loop
test
repz
lock
iret
inc
add
add
xchg
add
sbb
cwtl
xchg
and
dec
addr16
lock
fwait
xor
sti
mov
mov
icebp
pop
dec
push
add
mov
add
pop
imul
addb
icebp
mov
insl
addb
pop
popf
scas
inc
add
sbb
outsl
adc
dec
rolb
ja
arpl
nop
add
mov
add
rolb
adc
sbbl
inc
add
sub
mov
addb
add
add
xchg
lock
add
add
je
out
pop
inc
add
add
loope
aas
pop
mov
adc
pop
mov
shll
xchg
jge
or
pop
shrl
dec
jg
mov
add
scas
mov
mov
add
jnp
add
inc
pop
or
add
xchg
mov
or
cmp
cmp
inc
mov
mov
push
add
add
xchg
call
mov
and
xchg
movsl
jne
and
add
loopne
jp
mov
daa
addb
xchg
add
add
sub
add
bound
mov
lods
data16
repz
inc
add
add
add
push
add
add
add
pusha
add
push
jle
jbe
sbb
mov
mov
mov
out
cmp
push
rolb
adc
movsb
add
add
jmp
push
add
out
pop
mov
leave
insl
pop
jns
or
test
xchg
lea
ljmp
add
sub
ds
test
jg
add
fstps
sbbl
pusha
add
fisttpll
mov
add
sbb
mov
sbb
add
xchg
cmpsl
adc
add
adc
sbb
sbb
addl
xchg
xchg
add
jecxz
add
jb
jle
adc
jno
out
and
xchg
sub
mov
mov
aam
mov
mov
add
sbb
fldenv
adc
add
pop
sub
jge
cs
jne
adc
repz
cmc
addb
push
add
add
jno
pusha
add
add
addb
pushf
jmp
cmp
push
add
inc
add
das
dec
adc
add
ret
dec
xor
xchg
add
add
jg
xchg
add
fisttpll
add
mov
or
pop
daa
cli
mov
loope
cmpsb
add
das
xor
adc
mov
lret
addb
lods
jle
sub
add
arpl
fld
add
dec
scas
rolb
cli
mov
arpl
add
lret
push
and
aaa
bound
mov
inc
popf
in
and
mov
add
pusha
add
mov
push
adc
outsb
mov
mov
xor
xor
iret
ds
inc
imul
mov
cltd
inc
or
add
add
leave
sub
xor
sbb
and
loop
pop
sarl
pop
in
pushf
arpl
pop
cmp
add
out
mov
add
add
scas
loope
jo
add
add
or
mov
fnstcw
fwait
insl
adc
push
add
lock
neg
mov
dec
inc
push
add
dec
test
rolb
cmp
mov
js
add
xor
addb
add
add
push
add
add
add
sahf
enter
cmp
addb
cmpsb
add
add
adc
mov
popf
outsl
fistpll
dec
out
mov
test
mov
pop
pop
mov
arpl
add
mov
cmpl
jnp
add
sbb
mov
and
mov
add
movl
rcr
popa
xchg
mov
lret
jns
rolb
add
add
lods
stos
mov
cmp
sbb
add
movsb
add
add
push
add
js
fwait
cmp
mov
pop
push
push
or
add
and
jmp
push
data16
arpl
add
mov
repnz
and
mov
add
aad
add
sarl
add
add
fisubrl
addb
sbb
xchg
leave
addr16
fdivrs
call
dec
les
pusha
add
add
add
add
imul
sahf
movl
rcll
xchg
push
cmp
mov
inc
ljmp
movb
pop
ja
add
xchg
movsl
or
add
aad
inc
add
sub
mov
stc
mov
jmp
jb
mov
add
leave
lds
add
push
outsb
aam
icebp
pop
xor
xchg
test
push
sub
jmp
dec
inc
cmp
das
mov
ja
add
adc
cltd
mov
xor
aaa
lea
sbb
jno
add
ret
scas
out
add
mov
add
testb
loop
fnstsw
fsts
add
cs
cwtl
add
sti
mov
std
insb
popf
xchg
lahf
daa
movsl
pushf
addb
push
mov
add
pop
out
push
add
add
stos
xchg
add
mov
and
add
sub
add
sahf
push
add
pop
sub
add
push
mov
pop
inc
addr16
daa
jo
stc
inc
add
xchg
rolb
or
jle
rolb
sub
outsb
addb
add
add
add
add
jns
jecxz
add
jcxz
add
add
pusha
add
rol
stc
sub
add
mov
cmp
add
dec
in
add
add
in
mov
ret
add
add
add
or
add
cli
adc
or
add
sbb
or
pop
and
mov
call
push
add
mov
mov
add
and
mov
add
add
add
es
add
xchg
int3
xchg
push
add
sub
stc
imul
or
cli
push
xor
adc
add
sbb
or
add
shll
loope
add
outsl
test
xor
push
fimuls
mov
mov
icebp
mov
jp
dec
js
lds
fwait
pop
data16
mov
rcrl
dec
add
add
and
and
cltd
insb
lcall
mov
lret
repz
lods
int
inc
add
sub
xor
add
add
sub
pop
ljmp
pop
xchg
add
aaa
pusha
add
xor
dec
aas
in
leave
ret
add
lods
mov
add
lds
test
mov
ja
add
inc
add
sub
add
test
cmp
add
add
mov
mov
sub
fstl
add
add
add
sbbl
lods
aaa
mov
add
add
push
popa
test
adc
mov
scas
popf
in
hlt
add
add
push
repz
clc
add
add
cmp
iret
cmp
and
add
test
clc
sbb
push
xor
jb
xchg
add
add
mov
mov
mov
cmp
add
cld
or
add
add
push
add
add
push
add
add
push
popa
testb
and
pop
sbb
pop
and
add
add
mov
cmp
arpl
jle
icebp
jo
insl
aas
fcmovnbe
add
dec
fnstcw
push
add
inc
lret
mov
mov
add
add
in
dec
mov
add
and
xor
adc
daa
mov
loop
dec
loop
mov
in
push
add
mov
mov
cmp
add
cmp
fwait
jb
mov
pushf
insb
and
dec
stos
add
mov
cmp
add
and
cmp
mov
mov
adc
add
cltd
jg
stos
insb
aad
cmp
bound
mov
test
mov
add
add
mov
add
add
adc
adc
fsubs
pop
aam
addb
and
mov
lock
dec
cwtl
jmp
add
or
add
add
add
mov
pop
or
add
scas
add
mov
lret
mov
adc
test
cmp
mov
xchg
addb
add
mov
add
add
inc
add
adc
lcall
je
adc
in
sub
push
cwtl
mov
hlt
add
xor
repz
loop
pop
mov
test
cltd
popf
aad
rolb
mov
pop
xchg
push
loopne
nop
add
add
mov
sub
add
inc
add
je
lahf
push
add
repnz
jns
push
add
add
out
xor
inc
add
dec
scas
sti
jns
dec
int3
or
aad
xor
cmp
test
das
dec
add
mov
jno
add
mov
int3
lods
repnz
jmp
imul
add
add
lods
lods
mov
mov
adc
aam
mov
inc
add
sahf
cmp
icebp
inc
mov
lcall
add
imul
imul
or
lcall
aad
xchg
add
add
cmp
ja
add
mov
jl
cmpsb
add
add
stc
xor
std
fcmovnbe
dec
test
testb
xchg
add
pop
pop
sbb
adc
jecxz
icebp
sub
mov
add
or
sahf
xor
xchg
test
lods
pop
cmp
addr16
fsts
bound
mov
xchg
add
push
enter
rolb
cmpsl
push
rdmsr
add
mov
adc
mov
sbb
add
jo
repnz
cmp
add
scas
testb
jmp
xchg
mov
pop
addb
rcrl
add
mov
clc
sub
jo
or
test
repz
add
rolb
mov
rolb
pop
enter
pop
fnstcw
dec
add
adc
push
add
mov
cmp
add
aam
sbb
scas
sub
push
add
push
add
pop
sbb
addb
mov
add
jb
les
mov
add
add
adc
or
add
add
add
cmp
lds
sub
add
lahf
stc
mov
cli
ret
mov
xchg
pop
fidivs
testb
movsb
add
sub
mov
xor
std
sbb
rcl
add
lret
sahf
adc
aad
mov
es
inc
sti
fwait
push
adc
push
sub
pop
fiaddl
dec
test
add
mov
add
jmp
add
xchg
sbb
pop
rep
in
pop
jg
loope
sub
mov
xor
add
add
mov
stos
test
add
sub
imul
inc
add
pushl
add
scas
mov
add
xor
and
mov
imul
mov
je
jae
mov
jl
add
add
ja
cli
adc
add
ret
add
add
add
jo
sbb
add
shrl
testb
popa
sub
dec
test
cld
pop
sti
jmp
xchg
add
popl
add
add
fs
add
add
sbb
adc
movb
fwait
cmp
add
ss
ja
jp
add
push
add
loope
add
jnp
jecxz
add
out
mov
add
add
add
add
cmp
sbb
pusha
add
mov
add
test
mov
fbld
push
add
fcoms
add
enter
pop
icebp
mov
pusha
add
xchg
add
or
and
mov
xchg
add
mov
movb
or
les
sub
inc
mov
ds
stc
inc
pop
in
cmp
add
ljmp
add
and
mov
shll
aad
daa
ror
add
aam
xchg
add
jbe
je
lock
inc
push
add
add
add
das
jmp
rolb
jge
addr16
mov
mov
lret
mov
xchg
shrl
add
out
nop
add
jns
add
rolb
xchg
lds
mov
add
push
or
xor
inc
mov
add
mov
and
arpl
lret
jbe
repz
mov
push
add
mov
mov
mov
js
mov
add
add
inc
add
xlat
cmp
add
mov
out
xor
dec
push
mov
mov
rolb
push
add
test
add
aaa
out
add
xchg
inc
add
sbb
adcl
mov
add
int3
mov
add
xor
push
add
mov
inc
add
pop
outsb
push
push
add
movsb
add
insb
inc
add
add
mov
and
mov
adc
add
mov
in
jnp
loop,pt
addr16
jg
icebp
outsl
lods
and
addps
add
ret
push
insl
fbld
ret
add
dec
sub
testl
hlt
add
push
jecxz
add
add
add
add
jne
add
add
in
add
xlat
sbb
jp
dec
test
hlt
add
mov
add
mov
cmp
cmpsl
jle
add
add
lret
jbe
movups
ds
scas
vorps
and
mov
cwtl
and
mov
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
subl
add
mov
pop
mov
mov
add
div
add
add
push
inc
dec
inc
sbb
dec
sbb
inc
fsubp
add
add
add
add
mov
pop
dec
fwait
test
add
add
stc
and
mov
rolb
add
mov
ret
lods
data16
add
push
add
imul
sbb
add
scas
mov
add
xchg
add
add
or
mov
add
push
jmp
add
add
add
decl
sbb
add
dec
fwait
pop
addb
push
add
into
xor
push
loopne
pop
imull
add
add
mov
sub
cwtl
cmp
fnstsw
jl
loop
lcall
dec
cmp
add
add
leave
rcll
iret
add
lret
sub
dec
addb
ret
aaa
addb
xor
repnz
add
mov
std
jp
repz
pop
bsr
add
sahf
dec
aad
imul
cmpl
push
jne
loope
inc
xchg
add
mov
pop
push
add
push
add
add
add
loope
scas
icebp
mov
adc
push
test
add
add
data16
arpl
adc
popf
cmp
ds
mov
js
nop
add
bound
mov
cmpsl
adc
ret
test
add
add
sub
xchg
dec
cli
data16
in
add
jnp
or
add
add
gs
add
xchg
pop
popf
cmp
mov
pop
popf
in
cmc
aaa
mov
sub
pushf
aad
xchg
outsl
fidivrs
aaa
das
push
ja
add
aad
scas
mov
outsl
inc
pusha
add
je
in
add
add
add
xchg
xchg
call
add
inc
in
rolb
mov
inc
add
in
fldcw
mov
icebp
addr16
ret
fbld
repz
lds
dec
mov
add
pop
push
add
data16
add
in
xchg
add
fldt
out
repnz
mov
fbstp
push
add
add
mov
inc
mov
test
sub
daa
addl
add
mov
push
std
lcall
lock
fldt
mov
xor
sti
fsubs
sarl
add
adc
push
add
inc
arpl
add
jno
inc
ficomps
dec
fistl
xchg
cmp
jbe
add
dec
test
aad
add
jp
add
jbe
std
leave
inc
add
add
imul
inc
and
mov
add
jg
loope
inc
add
shll
cmpsb
add
adc
ss
add
jp
push
ret
or
xchg
xor
adc
cmp
mov
test
add
add
jne
and
mov
add
testb
cmp
enter
sub
outsb
adc
stos
shll
push
adc
sub
add
add
jge
stos
dec
daa
pop
js
add
mov
rolb
xchg
add
dec
mov
clc
add
mov
fdivrl
mov
pop
leave
add
pop
lods
and
insl
stos
in
sub
add
cmpsl
cmc
popf
movsl
js
mov
xchg
clc
bound
mov
add
add
lret
sbb
cmpsb
add
fdivl
jne
testb
leave
mov
add
pushf
scas
fldenv
rolb
imul
jmp
out
mov
jp
rolb
add
add
mov
push
inc
add
add
sub
add
add
stos
xchg
pop
and
movsb
add
out
bound
mov
add
mov
jecxz
and
fbld
add
dec
mov
adc
xor
jge
or
add
out
or
jbe
mov
mov
xchg
add
add
and
mov
or
jmp
cmp
xor
add
pushf
insl
sub
pusha
add
mov
add
add
push
mov
aad
pop
jb
cltd
rolb
scas
push
add
int
push
cltd
or
aad
dec
jae
add
out
pop
jnp
inc
add
cmp
stos
jmp
movsb
add
test
cld
jae
add
jmp
cmpsb
add
jnp
sub
pushf
adc
test
mov
adc
dec
cmc
and
mov
add
cmp
jmp
push
add
add
add
bound
mov
test
add
add
test
in
idiv
add
push
add
in
in
dec
mov
add
add
adc
mov
xor
mov
mov
mov
lret
jge
aas
push
les
fsubs
pop
sub
sarl
mov
mov
lods
xor
add
mov
xchg
rcr
fisttpl
into
dec
mov
test
add
jmp
add
int
ds
add
add
dec
push
out
pop
lret
ret
dec
xchg
add
cmpl
in
add
jne
fnstsw
sub
add
les
xchg
mov
movsl
addb
stos
rcll
cwtl
push
add
mov
fcoml
add
add
add
adcl
mov
fwait
mov
add
pop
inc
push
add
mov
add
add
add
add
je
add
add
adc
es
pop
xor
or
push
add
xchg
lods
in
mov
movaps
add
mov
dec
loope
add
sub
xchg
cmp
xor
sub
mov
and
add
rolb
cltd
adc
add
lock
ficompl
icebp
push
add
aas
test
loop
lcall
add
ret
xchg
out
sub
add
jp
insl
sahf
or
add
add
pop
sub
je
pop
push
fisubl
dec
adcl
in
and
les
ficoml
add
mov
jnp
push
add
add
add
sbb
xor
add
lahf
sbb
cmp
mov
addb
cld
out
push
add
enter
test
ds
call
push
ret
push
add
xchg
add
mov
add
push
add
mov
fstpl
cmc
fstl
add
add
test
mov
push
add
add
jmp
inc
add
sub
add
mov
jb
push
clc
or
or
in
iret
inc
add
mov
mov
add
pop
mov
add
data16
shll
add
ljmp
or
or
add
ja,pn
inc
add
je
popf
lret
xchg
aaa
cld
inc
add
inc
incb
and
mov
pop
in
adc
jmp
mov
add
mov
add
out
into
rolb
sub
jge
add
pop
jecxz
jne
add
mov
imul
add
cmp
add
jg
pop
sbb
jns
aad
cmp
add
jg
in
inc
jl
add
add
add
add
jge
xchg
add
add
test
xor
push
add
add
add
add
add
add
imul
add
xchg
sub
aam
psrlw
push
jae
add
xor
sbb
icebp
mov
pop
mov
inc
add
xor
mov
test
rolb
ljmp
push
out
add
jge
pop
out
add
cmp
cld
rorl
enter
push
jno
jg
add
rcll
cmp
into
rolb
rolb
sub
repnz
fs
fwait
push
loopne
push
sbb
inc
ret
add
inc
add
lock
cmp
pop
shll
mov
cmc
mov
imul
or
add
add
mov
addb
add
xchg
in
test
into
lods
mov
test
pop
scas
sbb
mov
in
add
mov
and
enter
bound
mov
add
in
notl
jmp
dec
xchg
push
sub
sahf
out
cmp
push
add
push
cmp
lahf
in
add
pusha
add
add
add
cld
xchg
cld
ds
adc
cmc
adc
cmp
and
lret
push
mov
fcoms
add
and
test
mov
and
add
add
add
lods
push
push
or
add
add
add
add
stc
stos
cli
int
add
mov
add
add
add
test
add
cmp
add
pop
insl
add
add
xchg
mov
rolb
fldcw
scas
rcrl
out
and
mov
lret
bound
mov
add
in
push
push
add
or
mov
lods
out
cmp
mov
cmpsl
dec
addb
repz
sub
out
fstpt
pop
mov
add
add
mov
ficoms
iret
outsb
rorl
ljmp
stc
jge
dec
mov
es
pop
add
add
shll
mov
sub
add
xchg
add
jg
insb
pop
addb
add
sti
outsl
insl
fnstcw
cmp
pop
cmc
add
add
arpl
fisttps
jmp
add
scas
add
and
mov
xor
aad
add
adc
sbb
aad
mov
mov
cmp
adc
add
mov
add
add
or
mov
xor
jns
jg
fimuls
mov
add
cmp
or
mov
in
jo
sub
cs
xchg
add
add
add
xchg
lret
lds
mov
mov
add
push
ljmp
scas
addb
add
pop
mov
es
repz
add
add
add
daa
dec
cmpsb
add
les
dec
mov
mov
mov
inc
or
or
and
mov
sub
insb
xor
cmp
daa
rolb
dec
testb
enter
sub
adc
out
cwtl
daa
call
push
add
add
fnstsw
fcoms
add
pop
stc
in
test
xor
je
fsub
add
add
push
lret
decl
add
in
fistps
aam
or
fbstp
xchg
add
popf
mov
add
push
imul
stos
popa
add
sub
in
arpl
add
nop
add
pop
scas
fiaddl
je
inc
test
addb
add
add
add
inc
add
sub
add
add
add
int3
decl
sub
xor
mov
ds
loop,pn
push
icebp
jnp
add
dec
or
add
add
xlat
das
lahf
inc
mov
inc
mov
insb
fwait
jae
leave
bound
mov
add
add
lahf
decl
mov
pop
push
add
add
add
imul
add
jne
jae
add
js
hlt
add
jecxz
add
mov
jno
mov
pop
or
cli
or
outsl
nop
add
add
xchg
add
add
in
addps
and
int
movsl
incb
mov
dec
pop
jno
add
xchg
add
out
pop
push
add
push
add
add
push
inc
cmc
testb
add
add
inc
push
add
pop
mov
cwtl
mov
pop
xor
daa
fbstp
fistpl
mov
add
xchg
and
mov
dec
xchg
sub
add
add
add
add
movsb
add
mov
xor
movsl
test
xor
push
lods
jb
sbb
add
aad
add
mov
rorl
cmpsl
jbe
enter
add
adc
pop
movb
dec
js
test
sbb
add
call
dec
lds
sahf
or
and
mov
lods
mov
hlt
add
and
stc
cmp
cmp
icebp
pop
mov
add
mov
add
or
jg
std
sub
enter
call
add
add
add
dec
and
inc
add
mov
add
jns
add
inc
add
out
imul
mov
add
and
push
add
pop
sti
xor
adc
mov
mov
xor
pop
push
and
cmp
lods
push
mov
push
add
add
push
add
mov
pop
sub
add
scas
jmp
enter
popf
mov
dec
or
jns
fimuls
add
into
sti
cmc
pop
mov
arpl
add
cmc
cmpsb
add
pop
or
cs
mov
add
mov
cld
test
cwtl
mov
pop
jp
ja
lea
push
add
or
lcall
sub
add
inc
cmp
stos
jmp
add
cmpsb
add
lods
daa
cltd
insl
fcmovne
jl
and
and
mov
in
out
pop
or
test
cmp
add
add
add
leave
testb
inc
add
shr
outsb
adc
dec
subl
inc
add
cmp
adc
cmp
cmpsl
add
mov
add
push
push
add
inc
outsb
inc
lock
test
push
mov
sub
mov
and
mov
test
jmp
add
jb
and
jp
add
xchg
sub
add
add
mov
test
and
mov
add
add
addb
std
loop
mov
push
sub
add
pop
stos
call
add
add
add
mov
mov
jnp
pusha
add
push
add
add
adc
dec
mov
insl
popf
or
jno
add
add
leave
push
jge
popf
shll
add
or
mov
mov
inc
or
test
xor
pop
mov
jb
pushf
fcomip
add
add
inc
add
data16
sub
out
in
mov
push
push
add
xlat
std
or
addb
add
loop
jmp
add
in
xor
or
orl
mov
mov
mov
fwait
sub
push
mov
pop
pushf
movsl
push
push
add
repz
mov
js
xchg
add
fwait
or
sub
xor
push
add
and
cli
rolb
add
cmp
add
add
jb
jecxz
inc
push
add
jb
scas
mov
fwait
adc
sbbl
push
add
xor
sbb
mov
movb
add
add
mov
jbe
into
rolb
mov
xor
dec
mov
add
repnz
add
add
or
add
add
xchg
fwait
fwait
inc
add
ret
lcall
mov
adc
mov
rolb
sbb
xchg
rolb
xchg
and
add
hlt
add
insl
dec
adc
dec
pop
and
add
mov
out
stc
and
mov
mov
add
push
add
int3
test
mov
inc
add
jle
sbb
mov
add
das
adc
fistps
js
add
icebp
fwait
cwtl
or
mov
in
fsubrs
mov
add
fimull
adcl
arpl
xor
scas
push
add
mov
xchg
arpl
add
mov
data16
inc
in
add
mov
rcll
mov
add
popa
mull
bound
mov
add
add
mov
rolb
pop
repnz
pop
cwtl
inc
add
iret
jle
adc
lods
aam
mov
scas
xchg
jo
cld
in
add
sbb
adc
add
jno
mov
push
add
dec
sti
sbb
add
dec
lds
mov
add
add
add
add
sbb
or
rolb
lds
sbb
jbe
lds
add
stos
dec
inc
add
sar
jne
add
push
add
xlat
cmpl
shl
enter
ret
add
repz
add
xchg
sbb
add
mov
imul
sub
add
add
out
sbb
leave
sub
push
add
fstps
xchg
jecxz
add
cltd
rolb
test
out
sub
sub
add
xor
pop
sbb
dec
sar
mov
or
add
add
mov
mov
add
test
nop
add
jae
jns
add
xchg
stos
popf
loopne
rcrl
call
sbb
sub
rolb
add
dec
leave
mov
mov
jmp
adc
lock
add
je
aad
in
stos
cli
inc
mov
or
mov
rolb
jne
add
sbb
mov
jb
xchg
ljmp
popa
sti
pushf
mov
addb
add
jae
rcll
ljmp
mov
jecxz
add
add
pop
push
dec
sbb
pop
fwait
add
out
inc
add
mov
pop
out
inc
arpl
add
add
jae
add
inc
add
and
dec
imul
dec
aaa
aas
ja
or
inc
add
add
xchg
push
add
add
xlat
push
loope
cmp
adc
sub
add
add
and
add
out
fyl2x
cmp
adc
fimull
add
jb
addb
mov
add
mov
add
fisttps
add
bound
mov
inc
movb
das
xor
mov
add
add
cmp
pushf
jle
cmp
add
mov
jmp
fmull
pop
jl
cwtl
push
ds
add
pop
rolb
pusha
add
add
pop
mov
lret
add
lcall
cmpsb
add
in
lods
pop
rolb
fisttpl
add
add
xchg
ret
sbbl
sub
add
mov
add
mov
cli
cwtl
mov
mov
insb
xlat
es
in
mov
add
out
sahf
sub
stos
cmp
adc
xlat
jbe
movb
mov
insl
sahf
fists
loope
dec
mov
nop
add
das
pop
cmp
lret
outsl
or
stc
mov
ret
out
add
cmpsb
add
mov
add
pusha
add
jmp
dec
inc
add
ds
or
nop
add
scas
lcall
cmpsl
setl
or
xchg
add
add
and
add
add
add
mov
add
lahf
mov
testl
sbb
add
mov
stc
nop
es
add
add
or
stc
nop
es
add
xorb
cmp
ret
nop
cld
nop
jmp
add
test
pop
bound
mov
push
push
mov
xchg
ret
pop
add
inc
jle
mov
stc
nop
es
xchg
dec
roll
add
cmpl
nop
cld
nop
jmp
jmp
mov
cld
nop
jmp
add
movsl
add
divl
pop
add
nop
cld
nop
jmp
push
add
inc
roll
xor
popa
add
mov
xchg
ret
add
jmp
jno
add
mov
stc
nop
es
pusha
add
add
xchg
add
jmp
add
add
add
add
insl
ret
stc
nop
es
xchg
add
in
add
pusha
pop
sbb
cld
nop
jmp
adc
arpl
adc
add
shll
mov
nop
es
add
insl
add
nop
es
add
add
dec
add
stc
nop
es
push
inc
adc
add
repnz
mov
stc
nop
es
insb
adc
mov
xor
add
stc
nop
es
mov
inc
stc
nop
es
add
movsl
add
adc
xchg
add
add
push
add
pusha
inc
add
add
test
add
nop
cld
nop
jmp
add
pop
hlt
add
testb
cmp
ret
jmp
push
jp
lea
stc
nop
es
xor
xor
jne
mov
and
add
nop
es
jne
jp
cmpl
orb
add
fiaddl
mov
dec
lea
stc
nop
es
add
add
xchg
movsl
sub
stc
nop
es
add
or
adc
incl
add
arpl
push
push
mov
xchg
ret
mov
add
push
add
cld
nop
jmp
add
add
idivl
in
add
inc
aaa
fimuls
test
adc
add
or
add
xchg
push
add
mov
stc
nop
es
add
add
add
add
mov
push
mov
xchg
ret
add
add
add
stc
nop
es
add
add
jle
push
add
stc
nop
es
in
mov
aaa
lea
add
push
mov
xchg
ret
jecxz
add
add
add
push
stc
nop
es
addb
add
add
nop
es
add
add
mov
nop
es
add
add
adc
aas
push
stc
nop
es
fisubl
add
add
pop
stc
nop
es
add
push
cmpb
rclb
cmp
inc
add
add
ret
lods
mov
stc
nop
es
mov
add
stc
nop
es
lret
add
add
stc
nop
es
add
pop
xor
rorl
cmp
stc
nop
es
add
jle
in
test
imul
cltd
add
add
nop
es
pop
add
outsl
pop
push
mov
xchg
ret
mov
add
js
xor
jae
inc
add
mov
push
cmc
add
add
nop
es
inc
roll
jp
je
stc
nop
es
jmp
lods
stc
nop
es
add
add
sbb
out
stc
nop
es
add
pusha
push
imul
nop
es
jbe
ret
insb
lahf
jmp
nop
cld
nop
jmp
aad
add
mov
test
es
pop
jbe
insb
cmp
push
dec
add
nop
es
add
add
add
stc
nop
es
add
gs
adc
jne
mov
stc
nop
es
add
add
stc
nop
es
jp
cmc
rorl
test
add
stc
nop
es
jecxz
in
sub
jb
mov
add
sbb
es
add
add
dec
fiaddl
add
add
jb
mov
mov
adc
jmp
inc
adc
mov
mov
sub
nop
es
add
gs
mov
nop
cld
nop
jmp
dec
add
xchg
mov
add
stc
nop
es
add
cwtl
mov
nop
cld
nop
jmp
jle
add
test
call
nop
cld
nop
jmp
add
insb
mov
jle
add
stc
nop
es
add
xor
mov
add
nop
cld
nop
jmp
insb
add
std
pop
push
mov
xchg
ret
add
add
add
nop
es
cmp
add
add
into
ret
stc
nop
es
pop
pusha
div
cmp
je
js
cld
nop
jmp
adc
push
add
inc
arpl
mov
add
add
repz
mov
add
stc
nop
es
add
add
mov
add
add
add
stc
nop
es
jne
ret
xor
pop
testb
lea
stc
nop
es
movsl
add
push
stc
nop
es
jmp
lret
or
add
jb
les
add
pop
aad
add
add
add
add
nop
cld
nop
jmp
les
arpl
push
addr16
sub
stc
nop
es
jp
add
add
jno
inc
add
sarl
stos
mov
stc
nop
es
jp
jmp
or
stc
nop
es
jecxz
add
add
add
add
shl
push
mov
xchg
ret
adc
add
inc
add
add
stc
nop
es
add
add
cmpsl
add
push
stc
nop
es
adc
add
adc
add
jae
nop
es
cmc
add
add
mov
stc
nop
es
rcll
mov
pop
dec
stc
nop
es
push
add
add
stc
nop
es
add
dec
mov
stc
nop
es
jbe
jne
rolb
mov
stc
nop
es
add
add
stc
nop
es
add
jmp
add
xor
stc
nop
es
add
add
pop
cmp
sahf
push
stc
nop
es
add
add
add
lea
nop
cld
nop
jmp
pop
adc
mov
es
add
cmpb
jne
stc
nop
es
dec
arpl
pop
mov
stc
nop
es
jmp
add
movb
nop
jmp
adc
jbe
lock
and
push
mov
xchg
ret
add
test
push
es
xchg
add
mov
jne
stc
nop
es
add
inc
jecxz
and
stc
nop
es
add
cmp
mov
xchg
ret
mov
dec
add
add
in
stc
nop
es
add
adc
gs
sub
nop
es
add
add
xor
add
mov
ss
stc
nop
es
add
xchg
aas
add
stc
nop
es
jmp
dec
test
nop
cld
nop
jmp
push
add
add
arpl
movsl
xchg
or
clc
stc
nop
es
xor
add
pusha
add
jmp
fcoms
jmp
add
pop
mov
rep
stc
nop
es
add
jbe
add
add
pop
call
mov
xchg
ret
pop
aad
add
adc
cld
jne
stc
nop
es
add
add
icebp
cmp
es
insl
ret
add
stos
out
lods
stc
nop
es
in
insb
pop
dec
xor
ret
push
stc
nop
es
jp
pop
imul
add
mov
stc
nop
es
add
add
xchg
testl
mov
xchg
ret
add
adc
sahf
mov
stc
nop
es
add
inc
add
mov
leave
push
mov
jnp
jo
out
push
pop
test
and
add
pop
pop
push
push
mov
xchg
ret
jp
pop
adc
add
mov
add
add
add
add
in
mov
add
push
mov
xchg
ret
adc
cmpsl
add
jl
inc
or
nop
es
arpl
add
mov
add
push
mov
xchg
ret
xor
add
add
add
jne
stc
nop
es
xchg
add
jmp
stc
nop
es
add
mov
decl
es
jbe
add
add
dec
imul
push
add
xor
or
nop
es
add
inc
adc
jbe
notl
mov
xchg
ret
add
dec
add
lret
cmp
rep
nop
cld
nop
jmp
add
add
pop
add
int
outsl
arpl
add
nop
es
add
add
stc
nop
es
add
adc
jbe
add
add
nop
es
cmp
ret
inc
push
mov
xchg
ret
mov
mov
test
nop
es
add
ret
xchg
stc
nop
es
add
jbe
addb
add
aam
cmp
cld
nop
jmp
dec
jle
add
add
arpl
stc
nop
es
mov
add
nop
cld
nop
jmp
roll
add
dec
stc
nop
es
add
xchg
lret
mov
pop
stc
nop
es
add
jmp
adc
or
stc
nop
es
add
add
dec
mov
stc
nop
es
add
les
add
add
es
jne
add
aad
push
stc
nop
es
gs
add
push
add
insb
loope
push
stc
nop
es
jne
add
add
in
adc
call
nop
cld
nop
jmp
adc
add
nop
es
insb
jmp
xor
push
xor
jns
leave
push
mov
xchg
ret
add
pop
xor
add
push
add
cld
nop
jmp
adc
adc
xchg
add
cli
and
push
mov
xchg
ret
add
add
pop
movzwl
stc
nop
es
push
jle
add
xor
in
add
jb
add
movsl
mov
add
add
stc
nop
es
mov
add
jne
stc
nop
es
or
xchg
xchg
adc
cmpb
incl
add
pop
add
mov
pop
stc
nop
es
incl
add
add
stc
nop
es
cmp
push
mov
push
mov
xchg
ret
jbe
add
lret
add
and
nop
cld
nop
jmp
insb
lret
push
jmp
add
push
mov
xchg
ret
dec
jbe
add
push
and
stc
nop
es
rcl
testl
loopne
add
stc
nop
es
dec
add
and
add
stc
nop
es
fiaddl
add
shll
stc
nop
es
add
add
pusha
jno
push
decl
jb
test
push
pop
add
sbb
nop
es
add
pusha
jp
sbb
nop
es
sarl
mov
xchg
mov
stc
nop
es
add
sub
add
or
add
add
cld
or
jmp
add
arpl
inc
repz
shl
stc
nop
es
jbe
inc
adc
sbb
sbb
add
mov
xor
rolb
push
push
mov
xchg
ret
addb
pop
arpl
xchg
pop
push
mov
xchg
ret
adc
or
add
dec
mov
push
mov
xchg
ret
les
add
add
mov
push
mov
xchg
ret
add
mov
stc
nop
es
add
add
or
es
add
les
mov
jbe
call
stc
nop
es
add
in
push
stc
nop
es
insl
add
add
testl
or
test
sbb
es
fiaddl
lret
xchg
add
inc
lret
mov
nop
cld
nop
jmp
add
jno
adc
add
je
nop
cld
nop
jmp
add
add
fwait
mov
stc
nop
es
add
add
pusha
add
popl
stc
nop
es
add
ret
add
cld
nop
jmp
add
cld
mov
nop
cld
nop
jmp
add
aad
add
imul
stc
nop
es
add
adc
add
mov
cld
nop
jmp
add
roll
testl
and
nop
es
add
add
push
push
jmp
jb
subb
add
imul
es
add
shll
adc
and
nop
cld
nop
jmp
add
cmpsl
add
movsl
outsb
mov
stc
nop
es
adc
lret
sbb
fiaddl
xchg
ret
ret
add
jl
nop
cld
nop
jmp
jle
movsl
test
mov
ret
sbb
nop
es
add
insl
testl
add
stc
nop
es
pusha
cmp
add
lods
fadds
xchg
ret
arpl
add
ret
add
pusha
out
inc
add
add
add
les
popl
je
sub
nop
es
les
dec
stos
repz
popa
stc
nop
es
xchg
mov
cmc
add
out
mov
push
mov
xchg
ret
add
cmc
sarl
add
jbe
stc
nop
es
fisubrl
mov
les
aaa
lret
add
cmp
inc
add
xchg
add
stos
jmp
stc
nop
es
mov
add
popa
fs
nop
es
add
arpl
push
stc
nop
es
jmp
ret
add
xchg
nop
cld
nop
jmp
adc
jno
xchg
add
je
stc
nop
es
add
cmp
mov
add
add
or
add
mov
stc
nop
es
add
add
pusha
xchg
mov
mov
adc
cld
nop
jmp
adc
push
mov
icebp
add
nop
es
jmp
add
add
add
nop
es
adc
aad
mov
push
mov
xchg
ret
add
scas
and
nop
cld
nop
jmp
add
in
jp
add
add
mov
add
mov
add
add
and
cld
nop
jmp
pusha
jno
add
mov
add
pushl
adc
lds
push
mov
xchg
ret
mov
fiaddl
push
add
stc
nop
es
push
add
jmp
les
mov
es
xchg
shr
jmp
rolb
stc
nop
es
add
add
std
mov
stc
nop
es
fidivrl
pop
mov
stc
nop
es
mov
add
addl
stc
nop
es
cmp
les
add
popa
stc
nop
es
add
add
add
and
mov
push
nop
cld
nop
jmp
add
adc
add
xchg
mov
je
add
stc
nop
es
add
add
nop
add
es
insl
add
mov
test
stc
nop
es
add
add
mov
stc
nop
es
push
sbb
jmp
cmc
add
test
jno
add
jmp
nop
cld
nop
jmp
mov
icebp
inc
add
cmp
inc
add
les
imul
movb
aaa
aam
rolb
adc
mov
es
add
dec
add
movsl
add
mov
stc
nop
es
add
add
mov
add
push
mov
xchg
ret
add
inc
add
add
mov
add
lods
stc
nop
es
add
stos
rol
jl
daa
decl
jb
add
pop
add
add
pop
push
push
mov
xchg
ret
pusha
adc
add
add
xchg
cmpl
and
add
add
or
hlt
add
mov
push
mov
xchg
ret
jne
add
add
fimuls
jb
cmp
push
add
add
std
pushl
push
mov
xchg
ret
add
dec
xor
push
nop
cld
nop
jmp
ret
mov
xor
adc
fsubl
xor
add
nop
cld
nop
jmp
jmp
leave
nop
cld
nop
jmp
add
xchg
add
add
add
stc
nop
es
add
cmc
add
iret
or
inc
add
cmpsl
add
add
call
stc
nop
es
jle
add
cltd
mov
stc
nop
es
add
sarl
insb
out
stc
nop
es
or
jmp
and
nop
es
add
add
add
adc
adc
out
xor
stc
nop
es
pop
cmp
xor
sti
dec
push
mov
xchg
ret
add
pusha
xchg
inc
add
es
add
add
xchg
ret
add
inc
jmp
add
cmp
andb
add
cmp
pop
and
nop
es
add
add
xor
clc
push
stc
nop
es
jp
add
mov
es
movsl
add
add
rolb
or
adc
nop
es
inc
add
xchg
or
xchg
sbb
add
nop
es
xchg
xlat
cmpsl
fimuls
jb
add
jecxz
add
adc
add
popa
add
nop
es
add
push
add
add
add
dec
cmp
nop
es
cmp
add
divl
mov
jb
cmpsl
lret
ret
dec
jle
sbb
nop
jmp
cmc
add
push
add
jecxz
add
push
stc
nop
es
inc
add
add
add
add
es
add
adc
push
jp
pop
stc
nop
es
mov
xor
add
mov
stc
nop
es
gs
push
push
mov
xchg
ret
push
dec
add
jbe
add
xchg
stc
nop
es
inc
jne
leave
decl
push
mov
xchg
ret
jle
add
add
add
push
mov
xchg
ret
add
roll
in
dec
cmp
loope
add
add
add
add
mov
add
add
add
nop
es
add
insb
add
stc
nop
es
imul
add
pop
stc
nop
es
pop
jmp
cmc
mov
add
nop
jmp
add
push
add
xchg
aad
add
mov
stc
nop
es
add
xchg
adc
je
stc
nop
es
xchg
push
or
jb
mov
mov
cmp
outsl
loopne
mov
xchg
ret
push
in
pop
add
int3
mov
stc
nop
es
add
jle
adc
mov
nop
es
cmpsl
or
add
lret
push
push
mov
xchg
ret
add
jmp
inc
out
sti
mov
stc
nop
es
pop
add
mov
pop
stc
nop
es
add
adc
mov
cmp
inc
add
add
loopne
stc
push
mov
lret
add
add
add
out
arpl
xor
xor
add
add
int3
add
add
pushf
add
cmp
nop
cld
nop
jmp
add
add
incl
pusha
mov
and
stc
nop
es
add
add
jg
mov
stc
nop
es
in
dec
data16
push
mov
mov
xchg
add
sub
mov
lods
mov
stc
nop
es
add
xchg
add
nop
es
test
add
add
inc
mov
add
add
nop
es
mov
nop
es
insl
add
test
add
jbe
add
add
stc
nop
es
jne
xchg
cld
nop
jmp
add
pop
dec
mov
add
push
mov
xchg
ret
add
lret
xchg
movb
add
stc
nop
es
idivl
movb
pop
stc
nop
es
add
pop
add
jp
add
es
adc
add
cmp
jb
jmp
insl
add
add
push
stc
nop
es
add
mov
add
nop
cld
nop
jmp
add
inc
add
add
mov
es
xor
add
add
fidivrs
nop
cld
nop
jmp
cmpsl
add
jle
inc
jmp
xor
nop
cld
nop
jmp
cmp
add
cmp
sarl
es
mov
aad
add
jb
mov
or
call
jg
dec
cmp
nop
es
add
inc
xchg
ret
leave
nop
cld
nop
jmp
add
add
pusha
push
pop
xor
stc
nop
es
gs
in
data16
or
nop
es
rcr
insl
adc
add
add
add
stc
nop
es
cmpsl
testl
push
stc
nop
es
stos
add
add
jno
addb
add
dec
or
nop
es
add
add
add
jns
test
es
add
dec
xor
stc
nop
es
add
lret
jmp
nop
es
dec
jl
insb
add
addl
ja
nop
cld
nop
jmp
lret
add
mov
mov
es
add
add
cld
nop
jmp
add
add
push
or
les
add
add
nop
es
add
mov
and
mov
mov
push
mov
xchg
ret
jp
lret
add
jbe
repnz
mov
push
mov
xchg
ret
add
in
or
jb
add
add
add
add
pusha
push
mov
xchg
ret
mov
mov
or
nop
es
jbe
incl
roll
sbb
sti
inc
add
add
fiaddl
mov
cmp
stc
nop
es
cmp
add
xor
and
add
cmp
add
jecxz
jnp
add
ret
sbb
movb
cld
nop
jmp
insb
or
adc
cmp
call
push
add
arpl
add
mov
push
mov
xchg
ret
add
insb
jl
in
jl
push
sub
stc
decl
add
add
cld
nop
jmp
adc
add
add
nop
es
add
add
add
add
add
jge
stc
nop
es
movsl
dec
imul
add
sahf
mov
stc
nop
es
adc
sub
faddl
xchg
ret
add
jb
cwtl
mov
stc
nop
es
add
adc
test
fadds
sti
stc
nop
es
add
jle
rorl
jmp
leave
cli
inc
add
add
add
add
mov
js
nop
cld
nop
jmp
add
add
add
nop
es
cmp
adc
push
stc
nop
es
mov
add
adc
xchg
add
mov
mov
stc
nop
es
add
out
stc
nop
es
mov
dec
push
stc
nop
es
aad
add
xchg
add
ss
int3
lea
stc
nop
es
add
add
jno
decl
push
mov
xchg
ret
xchg
add
nop
cld
nop
jmp
shl
pop
add
jbe
jbe
add
dec
push
mov
xchg
ret
addb
add
mov
stc
nop
es
add
jb
les
add
adc
pop
xlat
inc
icebp
pop
nop
cld
nop
jmp
add
add
ret
add
testb
jae
mov
push
mov
xchg
ret
inc
xchg
jne
idivl
push
push
mov
xchg
ret
add
jle
sub
push
mov
xchg
ret
dec
dec
add
adc
das
mov
nop
cld
nop
jmp
xchg
add
push
add
jg
stc
nop
es
xchg
arpl
add
mov
stc
nop
es
insb
lret
add
adc
mov
cld
nop
jmp
les
add
shll
add
mov
push
mov
xchg
ret
test
push
add
shr
mov
stc
nop
es
add
add
adc
push
add
stc
nop
es
xor
test
nop
es
add
lods
sub
nop
cld
nop
jmp
imul
add
mov
fimull
jb
insb
add
push
adc
dec
inc
std
add
stc
nop
es
mov
leave
add
stc
nop
es
adc
mov
nop
cld
nop
jmp
add
add
add
add
mov
popa
imul
fucomp
inc
add
add
imul
add
push
mov
xchg
ret
jno
add
jp
dec
shr
push
mov
xchg
ret
add
fiaddl
add
add
jg
stc
nop
es
add
xchg
add
fucomi
loope
add
stc
nop
es
cmpsl
add
mov
inc
add
mov
add
jle
push
stc
nop
es
jno
cmpsl
add
and
nop
es
add
les
lcall
inc
add
stos
add
add
loope
add
stc
nop
es
insl
imul
andb
push
stc
nop
es
insb
cmc
imul
add
imul
add
idiv
ljmp
add
push
stc
nop
es
add
incl
jnp
nop
es
mov
adc
fiaddl
nop
jmp
add
jmp
jae
mov
stc
nop
es
add
test
mov
data16
add
push
mov
xchg
ret
cmc
add
cmp
push
mov
xchg
ret
push
outsl
movzwl
stc
nop
es
adc
pop
pop
stc
nop
es
inc
ret
inc
add
adc
add
nop
es
xor
cmp
adc
add
ret
add
cmpsl
dec
add
add
add
mov
nop
es
add
add
add
adc
popa
push
mov
xchg
ret
push
add
adc
and
mov
xchg
ret
jle
add
imul
or
mov
cmp
ret
movsl
movsl
add
cmpw
stc
nop
es
adc
fimull
cmp
mov
inc
add
add
add
add
push
mov
xchg
ret
add
add
add
mov
nop
jmp
add
insl
adc
add
mov
and
mov
xchg
ret
mov
mov
push
mov
xchg
ret
add
add
add
nop
es
or
add
fcompl
cld
nop
jmp
add
push
xchg
xor
inc
add
add
stc
nop
es
xchg
add
les
mov
jmp
add
add
add
push
add
cmp
icebp
nop
cld
nop
jmp
dec
add
add
add
loopne
add
add
add
add
sub
stc
nop
es
mov
stos
push
stc
nop
es
jp
add
xor
sbb
add
stc
nop
es
push
ja
add
add
jmp
stc
nop
es
add
test
stc
nop
es
jle
mov
add
push
push
mov
xchg
ret
add
test
add
jne
stc
nop
es
addb
nop
cld
nop
jmp
adc
push
stc
nop
es
inc
add
add
add
testb
mov
jmp
pusha
add
add
jl
add
stc
nop
es
cmp
add
mov
stc
nop
es
adc
add
pop
and
push
mov
xchg
ret
mov
in
add
ret
daa
lock
jb
sahf
add
stc
nop
es
add
cmp
add
insl
xchg
faddl
sti
nop
cld
nop
jmp
fisubrl
add
push
add
inc
data16
pop
adc
nop
es
add
incl
add
cmc
stc
nop
es
add
jmp
add
inc
stc
nop
es
jl
add
cmpsl
adc
sti
stc
nop
es
aad
adc
xor
add
or
nop
jmp
add
add
adc
adc
rclb
pop
add
adc
adc
add
add
pause
cld
nop
jmp
jbe
xor
insb
add
stc
nop
es
mov
dec
add
popa
stc
nop
es
pop
pop
add
rorl
mov
daa
test
test
add
stc
nop
es
dec
xchg
or
add
stc
nop
es
dec
add
jp
xchg
xchg
add
movzwl
stc
nop
es
jmp
mov
add
nop
es
jle
movsl
adc
aad
sbb
nop
es
jno
add
mov
jb
add
cmpsl
pop
add
add
mov
inc
stc
nop
es
mov
jmp
lods
xor
stc
nop
es
movsl
add
mov
add
ja
inc
add
add
add
push
stc
nop
es
add
mov
push
add
es
xchg
pop
cmpsl
add
push
push
cld
nop
jmp
adc
add
add
stc
nop
es
add
stos
jbe
add
es
add
add
add
dec
add
pop
cmpw
nop
cld
nop
jmp
les
add
add
sbbb
insl
add
pusha
stc
nop
es
adc
add
add
add
addb
cmp
stc
nop
es
add
add
test
aad
xor
stc
nop
es
jp
jbe
mov
stc
nop
es
push
xor
mov
mov
nop
cld
nop
jmp
stos
add
mov
add
add
or
add
pop
cltd
add
nop
cld
nop
jmp
add
mov
add
std
stc
nop
es
add
in
rolb
mov
nop
es
mov
jne
push
add
mov
stc
nop
es
fimull
lods
push
mov
xchg
ret
mov
add
mov
nop
es
add
add
add
pop
mov
stc
nop
es
test
add
test
nop
es
add
es
add
cli
add
stc
nop
es
add
insb
add
loope
add
push
mov
xchg
ret
pusha
in
add
xchg
add
push
mov
push
in
add
add
mov
mov
fwait
dec
nop
cld
nop
jmp
cmp
xchg
mov
xchg
ret
add
jp
roll
arpl
add
add
push
add
mov
jne
add
jne
push
mov
xchg
ret
inc
mov
call
stc
nop
es
pop
xor
add
add
add
push
mov
xchg
ret
jmp
add
mov
inc
dec
jmp
stc
nop
es
imul
aad
xor
stc
nop
es
dec
cmp
add
outsb
call
stc
nop
es
adc
and
js
nop
es
add
cmp
test
push
nop
es
lret
cmp
add
call
call
add
mov
mov
xchg
ret
add
rcll
stos
stc
nop
es
add
add
add
cmp
bound
mov
sar
nop
es
pusha
add
pop
push
mov
xchg
ret
mov
rorl
jmp
scas
jmp
call
cld
call
test
mov
push
mov
xchg
ret
add
jb
jmp
nop
jmp
aad
add
xor
add
add
mov
dec
add
nop
es
movsl
cmc
jmp
pop
add
stc
nop
es
roll
test
mov
add
icebp
stc
nop
es
add
insb
insb
push
add
dec
adc
nop
es
add
add
dec
lds
movsl
stc
nop
es
add
jmp
adc
xor
add
stc
nop
es
add
dec
test
push
mov
xchg
ret
pop
cmp
add
dec
nop
cld
nop
jmp
add
mov
add
add
stc
nop
es
ljmp
jmp
add
adcl
dec
jne
stc
nop
es
add
jnp
push
mov
xchg
ret
add
xchg
cmp
sti
stc
nop
es
adc
add
xchg
add
push
stc
nop
es
add
dec
add
cmp
push
mov
in
or
in
addl
cmp
sbb
es
adc
arpl
jmp
popf
aad
add
pop
add
imul
test
nop
cld
nop
jmp
add
add
mov
mov
stc
nop
es
adc
punpcklbw
cmp
cmp
ret
add
add
lret
add
or
jmp
jb
push
hlt
add
leave
sub
nop
es
mov
add
pop
push
push
mov
xchg
ret
add
adc
xor
stc
nop
es
cmp
ror
dec
nop
cld
nop
jmp
add
push
xchg
add
lret
rep
add
stc
nop
es
pop
add
add
movzwl
stc
nop
es
jne
push
stos
inc
add
mov
push
stc
nop
es
les
push
jecxz
call
nop
cld
nop
jmp
testl
stos
stc
nop
es
add
pusha
jne
xor
push
ficoms
in
mov
popa
icebp
add
movsb
adc
xor
stc
nop
es
arpl
in
add
dec
lds
stc
push
push
mov
xchg
ret
add
arpl
add
je
stc
nop
es
push
inc
add
nop
jmp
jmp
add
dec
call
stc
nop
es
xor
xor
push
stc
nop
es
adc
pop
imul
add
nop
es
jbe
jne
add
and
push
stc
nop
es
xor
push
jmp
orb
add
idivl
add
mov
push
dec
sub
nop
es
test
xchg
add
call
es
push
xchg
fidivl
pop
nop
cld
nop
jmp
pop
jl
add
add
xchg
sub
mov
xchg
ret
jl
sarl
add
stc
nop
es
add
fisubrl
jmp
dec
rolb
xchg
ret
add
jecxz
dec
adc
sbb
mov
es
add
add
pop
div
stc
nop
es
jle
add
jne
bound
mov
stc
nop
es
add
pushl
stc
nop
es
adc
push
adc
andl
jb
add
jle
cmpsl
sbb
inc
fdivr
stc
nop
es
adc
movsl
adc
mov
push
mov
xchg
ret
jno
add
jmp
mov
xchg
ret
add
xor
stc
nop
es
add
jle
les
push
mov
xchg
ret
mov
jle
not
push
mov
xchg
ret
add
sqrtps
nop
es
jmp
mov
add
add
cs
nop
es
add
test
hlt
add
jmp
stc
nop
es
add
add
pop
xor
stc
nop
es
jecxz
push
stc
nop
es
jbe
add
add
jb
stc
nop
es
mov
push
mov
add
add
nop
es
idivl
lock
push
mov
xchg
ret
adc
pop
les
insb
add
add
add
mov
xchg
ret
add
add
jmp
popa
adc
cmpsl
lret
stc
nop
es
add
add
add
xchg
add
nop
push
mov
xchg
ret
add
pusha
add
jg
inc
add
fiaddl
add
add
call
in
incl
cmc
add
or
in
je
cltd
add
subl
mov
xor
jecxz
cld
push
push
mov
xchg
ret
in
mov
add
pushl
mov
stc
nop
es
add
decl
nop
es
add
dec
pop
push
mov
xchg
ret
add
lret
rol
add
add
stc
nop
es
jl
mov
je
mov
in
dec
add
add
add
add
add
movzwl
stc
nop
es
push
add
jno
xor
add
add
stc
nop
es
xchg
incl
jle
test
dec
push
mov
xchg
ret
dec
inc
add
add
in
out
call
stc
nop
es
add
add
in
stc
nop
es
add
jno
push
push
mov
xchg
ret
add
jmp
call
sar
incl
imul
push
subl
stc
nop
es
in
test
add
sub
nop
es
les
push
imul
jbe
loope
mov
nop
cld
nop
jmp
adc
lret
add
xor
and
aam
add
add
add
test
dec
pop
stc
nop
es
inc
xchg
xchg
jmp
in
add
add
incl
add
add
add
push
mov
xchg
ret
mov
add
xrelease
cmpl
jb
jne
mov
add
mov
stc
nop
es
jle
add
mov
stc
nop
es
cmc
cmp
inc
adc
dec
cmp
cld
nop
jmp
add
jbe
adc
pop
mov
stc
nop
es
add
fucomip
stos
aam
stc
nop
es
add
mov
adc
nop
es
add
decl
int
mov
enter
testb
add
rclb
add
popf
pushf
fisttps
mov
movsb
add
xchg
and
int
add
or
add
mov
add
jmp
movb
lea
cmp
add
or
pop
fsubr
mov
mov
and
and
arpl
add
das
pushf
add
das
adc
dec
pop
dec
insl
test
add
rolb
add
add
repnz
and
mov
adc
add
arpl
sbb
jge
je
imul
add
dec
inc
add
xchg
aam
popf
inc
add
das
xchg
cmp
add
enter
int3
push
jae,pn
adc
pushl
repnz
add
nop
add
jle
add
pop
xchg
or
add
adc
xor
add
add
lds
cmc
xchg
inc
add
add
lret
iret
add
lret
xor
add
mov
add
mov
add
mov
add
or
lcall
jno
repnz
movb
adc
push
add
add
jmp
add
add
add
add
inc
add
inc
add
mov
daa
xchg
les
sarl
leave
dec
lcall
xchg
add
in
ret
loop
cmp
cli
and
sbb
push
lds
dec
mov
aaa
mov
ret
sbbl
lahf
xchg
add
add
adc
mov
mov
sbb
shrl
adc
in
jnp
add
test
xor
push
add
add
push
mov
mov
stos
ficompl
out
pop
add
mov
bound
mov
jl
daa
fists
add
lret
inc
jnp
add
inc
dec
mov
add
stc
cmp
add
add
add
mov
clc
roll
outsb
and
mov
add
add
rolb
mov
lds
addb
dec
cmc
insb
xchg
lock
add
ret
movl
in
insl
outsl
rolb
loopne
gs
rolb
adc
add
mov
decl
add
pop
sti
mov
cmp
mov
add
sbb
mov
loopne
xor
inc
cmp
xchg
add
out
xor
sbb
add
xor
sbb
add
add
adc
and
cmp
pop
cmp
cmp
xchg
sbb
add
mov
inc
dec
dec
sbb
add
scas
aam
xor
lods
and
add
add
mov
fcmovnbe
add
xchg
add
pop
jmp
test
add
mov
push
add
add
sub
cmpsl
mov
test
push
add
frstor
fiaddl
add
mov
add
mov
sbb
push
push
and
add
loope
push
fnstcw
dec
lock
mov
mov
imul
add
cli
xchg
imul
ret
ds
push
add
push
add
sbb
cmpl
inc
add
adc
cmp
add
mov
add
xchg
jae
add
add
mov
add
add
add
pop
aaa
mov
imul
outsl
mov
daa
xor
pop
jmp
adc
jg,pn
dec
mov
add
adc
dec
and
cli
outsl
cmp
les
nop
add
into
xorl
add
in
test
sar
out
adc
into
fldt
sub
xchg
add
clc
mov
mov
data16
andl
xchg
rcl
add
popf
hlt
add
push
add
mov
outsl
jge
lea
movb
add
add
repnz
jbe
rolb
add
mov
outsb
in
call
add
add
dec
jg
add
add
dec
ja
into
addb
jb
imul
mov
clc
or
pop
pop
fdivrl
rcll
shll
add
add
push
cmp
pop
push
add
add
xchg
add
add
xor
add
pop
mov
mov
jmp
add
rolb
lea
jne
mov
pop
inc
add
add
hlt
add
xchg
push
dec
outsl
add
stos
sbb
out
or
add
jb
jg
out
add
testl
inc
adcl
sub
xor
pushf
stc
fisttpll
arpl
add
mov
lcall
in
in
lea
xchg
inc
add
int3
insl
mov
iret
rolb
xor
out
dec
mov
add
xchg
cmc
inc
add
xor
add
fwait
dec
xor
cmp
and
bound
mov
ja
sbb
enter
adc
dec
xchg
add
pop
lods
out
push
add
scas
jl
add
add
cmpl
add
ret
ja
add
add
add
sbb
add
jnp
xor
cmp
inc
pop
icebp
icebp
movsb
add
add
pop
mov
inc
add
add
loop
fwait
lock
add
xor
add
jo
adc
cmp
jno
cmp
cmp
jp
push
add
sahf
sbb
mov
enter
pop
sbb
imul
lret
and
ret
movb
add
mov
rolb
xchg
add
add
sbb
mov
cmp
add
cmp
mov
add
hlt
add
mov
imul
mov
add
jecxz
dec
xchg
jns
add
pusha
add
ret
testl
adc
cmpsb
add
or
push
mov
add
ss
stc
push
rolb
scas
lahf
push
enter
add
pop
xchg
mov
xchg
ret
fidivl
add
add
add
add
push
mov
aas
add
add
aam
lahf
out
add
add
rolb
pusha
add
add
add
add
mov
mov
add
cwtl
arpl
call
cmp
or
clc
cmpsb
add
adc
add
add
xchg
add
cld
adc
add
add
add
fildl
add
mov
addb
das
loopne
data16
lods
xchg
mov
cmp
imul
pushl
cmp
repnz
stc
add
jp
mov
mov
mov
xchg
pop
xchg
mov
sar
mov
or
add
add
in
pop
or
out
rolb
xchg
add
or
pop
addb
add
fcoml
adc
mov
rolb
cmp
ret
fmull
push
jns
add
adc
xchg
lcall
adc
add
testb
add
add
mov
add
mov
push
cmpsl
mov
add
mov
mov
movb
mov
add
mov
rolb
xor
cmp
jae
fiaddl
hlt
add
dec
rolb
sahf
mov
jle
pop
sub
loope
add
xor
inc
add
or
add
push
je
inc
sbb
mov
add
mov
test
xor
jns
popf
cs
movsl
loop
jp
cld
leave
cli
inc
add
je
fdivs
cmovnp
add
pop
movups
add
mov
jecxz
cld
imul
inc
add
adc
les
cmpsl
sub
add
jns
cwtl
mov
dec
add
imul
jg
sti
or
jbe
inc
mov
add
add
loopne
cmp
mov
push
add
push
and
mov
jnp
cli
sub
mov
testl
mov
mov
add
push
cli
jmp
sarl
and
jbe
loop
or
in
xlat
popl
adc
rolb
push
lock
iret
repnz
adc
iret
push
cmp
push
fbld
add
add
add
sbb
das
jge
xchg
add
iret
mov
movsb
add
sti
push
add
fsubrs
or
cmp
and
adc
mov
popa
jnp
add
add
cld
sub
add
add
add
hlt
add
cmp
jbe
fs
add
or
and
flds
add
add
lret
sbb
or
test
enter
jg
add
cmp
add
imul
adc
push
and
mov
mov
mov
pop
jns
popa
mov
push
in
and
mov
add
push
sbb
or
psubd
inc
add
mov
sbb
mov
mov
add
push
add
sbb
sahf
and
add
add
add
xor
leave
sub
push
dec
push
add
roll
cmpsl
jmp
sub
add
lahf
xchg
test
pop
push
push
add
lea
pop
dec
xor
add
jo
and
dec
jecxz
adc
adc
outsb
insb
mov
mov
cmp
push
cmpsb
add
inc
mov
fisttps
mov
lock
push
add
mov
dec
sub
lahf
dec
scas
andl
movb
xor
mov
jp
add
add
add
int3
jae
add
mov
out
sub
add
add
nop
add
mov
add
stos
push
outsb
aas
sbb
lods
movnti
inc
lock
dec
aas
cmp
add
cwtl
mov
add
lock
cmp
or
sub
add
jge
inc
add
lcall
add
lods
aad
inc
sub
add
lcall
sbb
dec
dec
cli
push
test
add
add
add
add
add
add
cli
cli
jl
nop
add
fwait
out
xchg
add
sbb
mov
fldcw
xchg
add
jp
mov
pop
mov
enter
aad
add
add
clc
xor
movsb
add
add
loope
push
add
data16
lods
out
or
and
nop
add
add
rolb
and
cmp
add
add
mov
dec
mov
sub
lea
outsl
add
adcl
test
add
nop
add
and
mov
add
std
test
and
aam
xchg
add
ljmp
add
cld
in
lsl
adc
stos
nop
add
add
xchg
add
sbb
add
cli
add
add
cmp
loopne
insl
adc
sub
add
arpl
adc
pop
repnz
add
stc
jle
add
add
mov
push
test
pop
ficomps
xor
mov
fidivl
in
jle
and
jne
in
cmp
jg
add
adc
testb
sets
sbb
add
insl
add
mov
add
push
add
jns
add
add
xor
mov
add
add
dec
adc
cld
arpl
xchg
das
lds
fcmovnu
aad
sbb
scas
push
adc
mov
jmp
gs
popa
repnz
mov
add
add
mov
xor
jmp
mov
aam
jns
jge
mov
mov
adc
add
add
add
out
bound
mov
dec
and
movb
cwtl
push
or
mov
cmp
xor
and
cmp
dec
imul
pop
outsb
add
xchg
out
rolb
add
stos
leave
sub
cmp
std
lahf
cmp
pop
stc
gs
pop
movsl
pop
mov
int3
sbb
add
and
add
cmp
add
jno
push
xchg
sti
popf
mov
repz
out
mov
mov
enter
mov
add
mov
add
add
add
pushf
mov
sbb
in
cvtps2pd
pop
mov
add
xor
adc
mov
outsl
ret
push
add
add
add
mov
add
out
pop
push
and
mov
iret
sub
cltd
aas
pop
cmp
or
imul
pusha
add
cmp
mov
or
pop
jmp
testb
daa
xchg
push
xor
enter
inc
add
add
push
les
pop
cltd
lods
xor
inc
imul
add
mov
incb
pushf
sti
xchg
xor
dec
add
mov
aaa
das
dec
cld
xchg
add
popa
ret
in
leave
adcl
push
dec
repnz
add
daa
and
mov
sahf
loop
or
aam
ds
xchg
andl
mov
pushf
add
add
add
in
test
or
mov
sahf
adc
dec
xchg
aas
stc
cmp
mov
or
push
cmp
mov
fmul
lods
loop
scas
popa
pop
and
mov
xchg
testb
adc
sub
add
cmc
xor
outsl
add
in
lcall
ss
or
pop
les
mov
add
data16
add
add
sub
and
mov
ljmp
cwtl
jae
add
adc
lcall
stos
sbb
add
or
add
mov
sbb
inc
add
ret
and
jle
pop
cmp
fmuls
addb
add
mov
adc
cltd
jp
cwtl
movl
xor
aad
add
test
dec
jo,pn
sti
jl
pop
and
mov
mov
movsb
add
mov
and
push
arpl
addb
int3
mov
xchg
add
add
add
add
cmp
sbb
xchg
push
add
push
add
cmpsl
gs
imul
mov
jbe
add
popf
dec
mull
add
add
mov
sub
fdivs
add
add
mov
add
mov
add
addb
mov
fwait
mov
add
inc
add
pop
sbb
add
jb
jnp
std
data16
add
fsubrs
mov
rolb
sub
adc
add
fsubs
add
fnstcw
mov
add
jl
imul
sub
faddl
movsl
repz
movsl
mov
aaa
sbb
mov
adc
in
push
add
rolb
add
mov
mov
das
ds
mov
in
out
dec
sbb
add
rorl
adc
popa
xchg
add
push
pop
iret
mov
clc
mov
out
pop
adc
movsl
ret
test
and
sub
xor
imul
mov
add
mov
add
sarl
add
add
fwait
xor
lock
addb
add
xor
mov
push
add
mov
insb
pop
dec
add
in
add
stos
testb
xchg
cmpsb
add
push
add
int
add
xchg
add
add
add
sub
rolb
cli
fs
dec
movb
add
ja
fidivs
lock
add
sbb
bound
mov
out
push
add
rorl
or
xchg
add
call
out
inc
add
shll
add
dec
sbb
mov
mov
and
push
add
stos
imull
outsl
stos
fsubrs
push
add
add
nop
add
and
mov
data16
add
push
add
mov
mov
add
movzwl
xor
fld
add
test
std
mov
push
add
add
insb
movsl
sub
add
xor
pop
outsl
mov
and
add
mov
add
add
adc
cmp
aad
test
mov
xor
movsb
add
popf
sbb
adc
push
leave
adc
jecxz
lret
cmp
add
call
fcmovnbe
cs
jl
arpl
add
stos
xchg
push
femms
jno
outsl
jnp
add
add
xchg
push
pushl
jns
dec
and
push
dec
and
xchg
jns
pop
imul
les
mov
loope
mov
sub
mov
sub
je
inc
xchg
dec
jnp
jno
sub
mov
call
lods
sub
and
mov
mov
push
add
and
mov
push
aaa
sbb
push
mov
push
cmp
xchg
add
xchg
enter
add
ja
fsubs
rolb
dec
add
add
dec
mov
scas
or
sbb
pop
add
mov
mov
add
xlat
sarl
add
cld
adc
cmp
aam
sub
repnz
hlt
add
add
aad
rolb
andl
js
sub
add
scas
pop
int
pop
pop
fcomi
or
sbb
movb
xchg
add
out
hlt
add
out
add
add
add
aaa
and
mov
negl
lret
scas
js
dec
jbe
add
adc
add
loope
xor
stos
sub
inc
mov
adc
cltd
push
adc
add
addr16
push
outsb
test
insl
jb
stos
lods
lret
add
add
shll
add
bound
mov
add
jmp
fidivrl
jbe
iret
test
fmul
mov
add
add
mov
xchg
add
cmp
stos
aam
dec
xchg
push
sub
imul
push
add
push
add
xlat
and
arpl
rcrl
xchg
fisubl
cmpsb
add
cmp
add
mov
add
pop
or
add
imul
pop
sub
push
adc
sbb
xchg
xchg
push
add
jp
sub
cmp
add
add
cmp
popf
pop
shll
add
adc
inc
add
add
cmp
loop
pop
pop
pop
rolb
aad
add
xor
movb
sub
add
popa
lret
xchg
mov
add
jg
in
data16
lahf
loope
or
mov
add
out
add
xor
insb
add
mov
inc
add
add
mov
add
mov
add
bound
mov
je
mov
jne
jno
ljmp
cmp
push
imul
pop
mov
add
jnp
jge
fldcw
dec
mov
add
addb
push
test
and
insb
int3
int3
cmp
sbb
add
pop
mov
mov
and
mov
push
add
mov
add
add
pop
jo
in
stos
in
sbb
add
add
nop
add
or
insb
fiaddl
shrl
stc
lahf
mov
in
jno
and
xchg
bound
mov
jno
jno
add
aaa
rcr
cs
jle
addr16
data16
sbb
cli
movsb
add
inc
add
and
ffreep
sti
clc
in
aam
jnp
pop
nop
add
add
add
int
add
clc
adc
mov
sbb
cmc
call
cmp
pop
inc
add
or
add
ret
sbb
xor
addb
push
test
add
inc
or
add
icebp
fisubl
sbb
add
movb
std
fists
sahf
rcrl
add
jae
jno
add
or
add
sar
add
into
push
in
inc
gs
fwait
icebp
jnp
add
mov
jp
shl
inc
sbb
movsl
or
enter
add
lock
loop
add
mov
push
cmpsl
jmp
adc
jle
in
mov
in
rolb
xchg
xor
clc
mov
das
fs
jg
sbb
mov
add
aad
repnz
add
mov
stc
add
mov
add
add
arpl
inc
add
add
mov
mov
call
insl
jg
cmpsb
add
add
mov
out
mov
ror
mov
fistpll
clc
cvtps2pi
add
in
in
cltd
add
mov
fistpl
pop
add
mov
add
add
aas
aas
mov
inc
push
add
sub
add
add
fwait
cmpsl
inc
add
add
lds
add
add
add
xor
cmp
out
pop
xor
mov
rolb
mov
nop
add
add
shll
outsb
inc
addb
mov
pop
jnp
add
mov
inc
add
and
movsl
gs
add
rolb
mov
dec
js
decl
inc
add
pushf
push
add
andl
inc
adc
add
cmp
dec
push
add
in
aam
sbb
rolb
jl
add
pop
push
add
mov
add
leave
cmp
jae
mov
jp
add
inc
addr16
inc
int
push
add
adc
push
addb
add
dec
popf
or
imul
icebp
xchg
inc
adc
test
add
push
imul
sbb
add
fstpl
imul
nop
add
rolb
int
push
test
xor
push
add
int3
fcoms
pop
incb
mov
push
add
aam
in
xor
add
add
and
and
mov
popa
into
dec
dec
xor
insl
mov
cmp
add
inc
cmp
mov
xor
ffree
add
notl
lahf
add
pslld
push
xor
add
movsb
add
dec
jmp
out
enter
add
xchg
add
sub
xchg
xchg
pop
xchg
add
push
testb
cmpsb
add
add
aad
scas
pop
addb
adc
jo
test
test
sub
mov
xchg
or
add
cmp
pop
lea
push
addb
xchg
loope
push
test
xor
movsl
int
add
add
add
fwait
cmp
push
xlat
out
daa
jge
pop
fcmovnbe
add
add
scas
mov
push
dec
add
movsl
iret
das
sbb
xchg
inc
ret
scas
xchg
add
mov
push
add
sub
mov
jmp
call
sti
jg
xchg
add
push
add
ljmp
add
add
jno
std
test
imul
add
add
rolb
daa
sub
pusha
add
test
xchg
out
sbb
mov
add
clc
cmc
push
add
movsl
sub
add
add
add
add
mov
pop
out
movsl
mov
sbb
xor
js
and
xchg
add
sub
cmc
in
sub
add
add
add
cmp
add
push
or
in
jle
lds
add
es
add
mov
add
add
leave
clc
inc
pop
add
imul
add
and
mov
inc
add
add
add
mov
scas
push
testb
mov
xchg
test
test
leave
cs
add
sub
add
push
sub
inc
add
xchg
fcoml
mov
cs
addb
add
les
adc
and
pop
mov
add
add
add
add
add
xchg
inc
scas
loope
add
pop
dec
or
add
xchg
enter
ficoms
sub
xchg
add
jno
jge
iret
add
add
aas
je
sub
add
or
add
add
mov
add
mov
add
icebp
sub
les
or
add
sbb
decl
in
dec
mov
add
sub
jae
xor
cwtl
lods
aam
faddp
test
addb
add
and
sbb
mov
mov
add
je
fcoms
mov
sbb
fdivp
add
pop
cli
adc
push
add
outsb
or
data16
shll
add
fldl
add
repnz
add
sbb
lcall
pop
dec
pusha
add
aas
std
iret
xor
std
aam
aaa
jg
sti
sub
mov
add
stc
pusha
add
and
mov
fstps
xor
add
or
add
pop
mov
mov
rolb
mov
scas
jno
cltd
repnz
addb
xor
sbb
imul
add
fstpl
loop
sub
add
jecxz
xchg
mov
add
add
fsub
or
or
aad
add
sahf
pop
ljmp
pop
push
add
add
shl
add
testb
shrl
dec
stos
les
pop
fstps
cld
push
add
add
insb
jbe
sub
data16
outsl
sbb
add
jb
or
aas
jle
add
mov
add
enter
mov
dec
pusha
add
mov
add
into
mov
pop
mov
xor
and
add
adc
mov
insl
sub
movsl
pop
fnop
add
add
add
push
xor
iret
and
dec
cltd
pop
pop
adc
outsl
xchg
add
push
lea
dec
lcall
fildll
mov
in
add
xorl
inc
cld
je
push
add
xor
mov
ds
add
add
lea
lahf
lret
fcompl
test
push
push
repz
fisttps
sti
std
jl
add
add
add
mov
jbe
mov
pop
loop
mov
les
inc
add
jbe
sti
movsl
arpl
add
add
imul
xchg
add
mov
movsl
pop
mov
stos
or
js
fidivrs
cmpl
fisttps
push
fs
in
dec
mov
popf
mov
mov
adc
jmp
js
hlt
add
pop
mov
inc
add
stos
cmpsb
add
mov
rorl
add
testb
push
add
leave
add
fadds
ret
cli
mov
jmp
add
mov
pop
pushf
fs
add
pavgw
aas
sti
sbb
push
aaa
cmpsb
add
mov
xchg
add
sti
mov
hlt
add
movb
addr16
add
sbb
jecxz
add
dec
add
mov
adc
addr16
xor
push
repz
movsl
pop
or
dec
mov
in
std
pop
leave
mov
add
sub
and
pop
add
add
push
insb
xor
cmc
mov
adc
sbb
push
add
loopnew
dec
incb
mov
out
inc
add
js
ficoms
cmpsl
push
pop
add
mov
push
lods
push
sub
test
stc
sub
add
add
add
imul
add
jbe
sbb
add
inc
insl
movb
adc
cmp
add
and
add
sbb
dec
inc
add
decb
xchg
sbb
add
add
mov
mov
test
je
push
add
add
in
outsb
out
lcall
rolb
repnz
das
dec
add
add
loop
or
adc
sub
or
gs
repnz
mov
add
add
aaa
ret
pushf
and
mov
adc
jb
out
add
mov
hlt
add
fwait
movsl
rolb
pmulhuw
dec
mov
add
xchg
into
cmpsb
add
add
aad
jmp
out
xor
add
stos
or
add
outsl
xor
jmp
add
add
add
outsb
adc
fwait
jle
add
mov
xchg
mov
pop
in
lods
pushf
sarl
jge
add
call
inc
sbb
add
pusha
add
int
mov
add
add
add
add
push
add
pop
in
pushf
shrl
add
add
push
add
push
add
enter
pop
jmp
add
ljmp
out
mov
jae
add
test
cmp
and
mov
test
add
ret
jns
cmp
mov
ret
out
pop
lret
and
mov
pusha
add
cld
pop
ret
pop
fcmovnu
stos
push
cmp
add
add
test
iret
mov
mov
mov
add
sub
test
jmp
add
insl
or
and
lret
rolb
mov
shr
lea
mov
xor
fsubr
rolb
leave
dec
iret
ficoms
inc
enter
enter
sbb
xchg
outsb
je
pop
pop
mov
add
add
add
add
add
add
mov
add
jnp
add
std
pop
mov
mov
shrl
inc
add
stos
in
aam
pop
sbb
adc
testb
gs
outsb
inc
add
push
and
mov
push
add
push
test
xchg
pop
adc
sub
mov
and
mov
add
add
xor
add
lods
dec
xchg
out
pusha
add
pushf
nop
add
push
add
pop
mov
arpl
out
mov
popf
fwait
jecxz
push
pop
fucomp
push
add
fsubrl
pop
bswap
inc
add
add
scas
pop
cwtl
cmp
add
clc
xor
add
add
leave
testb
rolb
mov
jmp
das
das
mov
or
dec
std
sahf
inc
dec
mov
add
add
and
outsl
in
jmp
add
in
rolb
rcll
push
add
mov
in
arpl
add
dec
addb
or
dec
push
add
out
dec
icebp
dec
dec
add
mov
jnp
add
add
add
add
mov
inc
add
and
in
aad
dec
cmp
cli
outsl
addr16
bswap
add
push
xchg
push
lcall
lock
movsl
pop
cs
pop
fiadds
add
call
rolb
and
jnp
xlat
aaa
inc
add
add
mov
lret
jg
and
je
call
xor
mov
mov
add
pop
mov
cmp
mov
add
xchg
add
push
stos
jmp
add
bound
mov
mov
add
add
gs
add
add
add
aas
lods
inc
cmp
push
add
js
enter
cmp
js
inc
add
in
sarl
add
adc
jb
add
cli
sub
mov
add
add
testl
mov
cmp
call
add
xchg
imul
xchg
into
mov
add
popf
loopne
mov
add
pop
xor
lea
ja
add
add
mov
or
test
test
sub
and
pop
rolb
fs
repz
mov
jle
xor
xchg
add
je
dec
neg
mov
xchg
jbe
sbb
add
push
mov
xchg
add
add
inc
xchg
add
pop
fldt
jge
add
sub
ret
ljmp
out
mov
cmp
gs
out
jle
mov
add
xchg
loop
pushf
out
mov
add
add
add
das
pop
mov
testl
mov
or
cmpsl
cmp
loop
das
cwtl
scas
mov
cmp
ret
or
fwait
cwtl
mov
add
imul
add
adc
jnp
test
or
jg
sbb
mov
stos
movb
add
xchg
add
add
add
pop
fwait
jo
add
cmp
movsb
add
add
add
sahf
hlt
add
mov
add
mov
or
ret
mov
inc
pop
dec
xchg
add
add
push
sbb
add
daa
xchg
mov
nop
add
and
mov
add
add
and
adc
testb
adc
add
imul
add
sub
js
add
lods
xchg
sub
add
add
mov
outsb
and
mov
lahf
or
lret
pop
mov
cmp
dec
xor
xor
sbb
xchg
movsb
add
cmp
inc
add
out
pop
ret
fdivl
add
pushl
dec
add
cmp
push
add
cmc
sbb
dec
stos
cli
std
rolb
pusha
add
testb
aad
sbb
jb
nop
add
inc
mov
jno
add
sub
cmc
push
test
fdiv
cmpsb
add
add
add
cld
imul
add
jp
or
add
jge
add
into
mov
cmpsb
add
cmc
sub
add
aam
lock
into
rolb
add
insb
push
add
stos
pop
es
les
repz
inc
aas
jmp
dec
rorl
xchg
add
ja
in
stos
movl
inc
jg
fdivrs
int
mov
mov
std
inc
enter
add
or
pop
dec
or
add
add
test
mov
mov
add
adc
aas
jge
add
add
add
add
add
mov
addb
ds
add
cmp
je
scas
movsb
add
movb
lret
sbb
outsl
addr16
jns
lret
mov
add
add
ret
sbb
add
add
adc
xchg
mov
add
test
mov
les
jmp
hlt
add
add
pusha
add
fbstp
add
xchg
lahf
cld
or
add
test
add
into
and
mov
rolb
adcl
add
add
add
aaa
or
add
add
fisubl
mov
add
mov
inc
js
sbb
push
rolb
add
cvttps2pi
xchg
sub
jmp
fnstcw
or
add
mov
xchg
mov
mov
movsb
add
jae
add
bound
mov
add
adc
repnz
mov
xor
add
mov
add
mov
add
mov
je
std
stos
ret
je
cltd
jae
add
lods
movb
add
add
jp
push
out
movsb
add
leave
xchg
out
xchg
orl
mov
lcall
repnz
into
jbe
cmpsl
mov
xor
je
ds
fsubr
test
cmp
das
addr16
ja
add
dec
cli
or
pop
or
add
jp
cltd
pop
lahf
rcr
add
add
sahf
in
in
inc
pop
data16
test
scas
ja
add
mov
add
arpl
ffreep
insl
xchg
add
add
or
scas
mov
jno
add
mov
pop
dec
ds
or
adc
fldl
pop
cld
xchg
daa
cs
dec
lods
arpl
add
daa
js
insb
enter
jg
cli
dec
cmovb
mov
inc
rcll
daa
out
xchg
add
jns
repz
mov
add
sub
jae
add
mov
xlat
mov
jecxz
add
mov
xor
cli
mov
vpunpckldq
mov
add
and
mov
xchg
add
add
icebp
dec
stos
test
addb
jns
add
dec
or
shll
jnp
add
add
sub
cmp
xor
int3
push
add
adc
pop
sbbl
add
out
xchg
add
mov
mov
add
add
mov
mov
pop
fcoml
pop
lret
std
mov
gs
in
dec
jmp
xor
outsb
cmc
roll
add
jl
add
inc
add
cmc
movsl
mov
xchg
add
add
add
jp
add
push
sti
imul
test
pop
or
add
pop
insb
add
or
andl
stos
scas
dec
xchg
jmp
add
add
fcmovne
inc
add
testb
cwtl
dec
mov
and
out
xchg
mov
push
add
pop
mov
add
inc
mov
adc
cld
and
mov
add
add
adc
mov
sbb
add
dec
cmp
pushf
xor
xchg
add
add
adc
rsqrtps
imul
icebp
pop
bound
mov
add
fbld
enter
in
shrl
add
add
dec
ds
or
add
add
add
add
adc
xchg
add
push
xor
data16
imul
stos
xchg
jmp
and
add
mov
sti
das
inc
mov
dec
xchg
add
adc
sub
and
add
movd
mov
add
add
mov
roll
xor
jecxz
divl
add
stc
and
mov
sbb
dec
out
in
iret
notl
add
cmp
add
jo
test
add
mov
pop
movsl
ffree
or
add
mov
mov
add
mov
fndisi(8087
icebp
das
xchg
adc
pop
adc
fisubrl
js
sbb
scas
into
pushf
int3
sub
add
lret
rolb
mov
xor
mov
add
jb
sbb
jg
add
push
adc
add
cmpsb
add
or
insl
xchg
adc
cmp
pop
xchg
mov
aad
mov
add
data16
les
jb
dec
lock
mov
push
add
inc
cld
dec
lods
or
pop
cmp
dec
call
add
test
test
bound
mov
jg
add
pop
testb
pushf
inc
add
jmp
addb
addl
cmpsl
hlt
add
and
jmp
xchg
add
add
sub
push
add
add
xor
addr16
add
add
dec
pop
cltd
frstor
lock
aad
mov
mov
add
add
add
add
add
loop
fucomi
adc
sti
cmp
rolb
loopne
jo
jge
adc
xor
ljmp
pushf
cmpsl
add
mov
mov
cmpsl
fmuls
sub
out
mov
rolb
pop
in
adc
addr16
pushf
mov
testb
addr16
mov
mov
popf
ret
sbb
jp
push
add
pop
adc
mov
add
cld
enter
add
adc
adc
jo
faddl
add
andl
lods
add
mov
add
repnz
pop
ret
and
add
add
in
data16
add
nop
add
pop
outsb
test
inc
add
adc
popf
fwait
outsb
xchg
int3
cwtl
jecxz
add
add
ret
add
xchg
add
and
jno
add
mov
add
add
add
frstor
out
mov
add
sbb
jecxz
xor
adc
pop
loop
addb
add
imul
nop
add
jnp
and
xchg
add
jecxz
add
jns
add
mov
cmp
out
hlt
add
inc
add
xor
add
addr16
add
jns
shll
loop
sbb
lods
dec
loop
pop
fstpt
mov
mov
cli
xor
faddp
repz
stos
xchg
mov
push
lcall
cmc
pop
mov
mov
jmp
add
xchg
addb
rolb
xor
cmc
mov
mov
add
sahf
imul
aas
popa
mov
add
add
inc
jnp
cli
mov
add
insl
mov
add
xchg
add
add
add
add
xor
pop
fnstcw
cmp
jmp
and
mov
xchg
imul
mov
daa
or
xchg
add
add
loope
testb
adc
pusha
add
add
mov
mov
xor
adc
arpl
mov
jnp
and
inc
jno
xchg
add
add
in
hlt
add
sbb
popf
xchg
add
testb
add
sub
ret
cli
mov
mov
ficompl
add
xchg
pop
cli
stos
xor
add
daa
sti
rolb
pop
repz
cmc
addb
and
mov
ja
stc
arpl
add
push
add
mov
aaa
fcomp
sbb
ret
add
lds
fs
adc
leave
or
cmp
rolb
les
mov
rolb
pop
add
mov
cmpsl
in
push
lock
add
add
mov
dec
int
xchg
add
iret
pop
std
dec
xor
scas
pop
mov
add
cld
test
rolb
adc
and
pop
int
add
add
add
mov
or
add
jb
add
lahf
test
movsb
add
lods
inc
mov
mov
sbb
add
add
mov
add
add
lret
scas
inc
scas
aad
add
cltd
xlat
cmp
and
mov
or
add
add
xor
fidivrl
push
add
xchg
adc
sub
add
repnz
add
rcl
add
pop
sbb
outsl
stos
ss
jno
out
add
mov
cmp
add
imul
loop
sti
les
dec
pop
mov
add
add
mov
scas
mov
in
and
mov
add
fiaddl
xchg
out
aad
outsb
fisubrl
jo
mov
jecxz
xor
add
movb
add
add
mov
add
enter
pop
jl
jle
js
adc
icebp
mov
add
add
cmp
add
mov
outsl
pusha
add
add
pop
mov
xchg
mov
or
add
data16
mov
jo
mov
add
cli
sbb
jno
add
add
addr16
sbb
add
sub
add
add
pop
or
add
mov
add
scas
pusha
add
add
mov
jns
sbb
adc
movsl
sub
jecxz
pop
sti
xor
push
inc
add
cs
movsl
push
mov
stos
rolb
pusha
add
insb
dec
testb
test
add
xor
add
call
stc
xor
dec
das
dec
push
je
sub
add
sub
outsl
adc
mov
jnp
pop
sub
add
jb
stos
xchg
add
repz
add
add
test
inc
add
add
push
aad
and
mov
icebp
testb
add
pushf
fdivl
leave
sub
les
sbb
sbb
out
inc
add
add
addb
inc
add
push
add
testb
aas
dec
mov
fisubs
mov
or
sbb
loopne,pt
xchg
lret
fidivrs
add
add
add
add
data16
add
jne
arpl
movb
movsb
add
add
pop
push
add
out
or
add
mov
add
add
sub
add
mov
dec
cmpsb
add
aad
add
pop
add
mov
jle
arpl
add
mov
sub
aaa
imul
mov
dec
jns
sbb
roll
add
mov
sbb
outsb
jg
arpl
fldt
add
dec
dec
or
aaa
outsb
mov
in
add
xchg
add
fsubrs
test
addr16
inc
add
pushf
mov
add
sbbl
dec
mov
add
add
and
mov
lds
test
ljmp
cmp
or
pusha
add
push
add
std
ds
push
add
repnz
xlat
mov
add
add
and
mov
xchg
add
sbb
inc
je
mov
movb
cs
add
push
add
loope
adc
pusha
add
add
addr16
add
sbb
add
mov
in
and
mov
clc
rorl
out
pop
cmp
add
adc
add
cld
add
mov
add
add
and
jmp
add
add
in
add
add
adc
aaa
sub
aas
mov
push
add
mov
push
add
xchg
int
add
divl
test
jne
add
add
jae
add
and
add
add
mov
add
adc
clc
add
aaa
mov
or
cmpsl
bound
mov
js
jmp
dec
lock
push
repz
cmp
mov
lods
call
movb
bswap
js
pop
outsb
pushf
mov
roll
aam
sbb
jae
add
test
add
clc
dec
ja
xor
lds
mov
ficoms
add
push
add
add
rolb
outsl
add
ret
rolb
push
das
pushf
mov
jno
ja
add
rcl
ret
imull
adc
sub
shrl
dec
xor
add
fucomp
adc
sbb
in
dec
ror
mov
mov
fisttpl
js
add
adc
sub
cmp
jnp
lcall
add
xchg
add
jbe
push
add
lcall
add
fcomip
add
dec
pop
xor
fistpl
pop
stc
inc
add
sbb
ret
dec
jnp
dec
sub
push
add
adc
sub
mov
adc
mov
stc
lock
push
xchg
sub
jb
leave
add
fucomip
lea
in
mov
and
and
add
cmpsl
in
fnstcw
test
mov
cwtl
mov
push
xchg
add
test
pop
and
mov
add
and
mov
push
icebp
scas
pop
mov
fwait
cs
pop
xor
cmc
cmp
cmp
insb
test
std
mov
cmp
cmp
enter
sbb
and
mov
dec
pop
insb
fwait
push
stos
dec
int3
aad
nop
add
in
std
pop
inc
add
inc
adc
add
push
add
add
pop
xor
push
add
push
dec
std
in
cmc
les
mov
add
decl
or
add
fisttps
les
inc
push
add
or
out
inc
clc
insb
add
adc
inc
add
push
add
test
and
mov
imul
and
mov
int3
es
add
jb
cs
in
mov
sub
add
add
add
add
add
sbb
add
sub
inc
add
push
add
cmp
int3
rolb
push
and
mov
jmp
add
das
popf
add
add
add
push
pusha
add
mov
add
out
sbb
scas
xor
or
add
cmp
dec
and
mov
popf
add
in
std
add
add
adc
add
dec
les
xor
inc
add
imul
xor
int3
leave
adc
add
rolb
rolb
fdivs
mov
sahf
sbb
test
push
pop
popf
in
mov
add
insl
pushl
mov
jbe
jmp
aad
cmpsl
outsb
xlat
arpl
enter
add
pop
negl
xor
cmp
je
out
jb
inc
push
add
rcll
mov
popa
clc
dec
xor
add
mov
ljmp
jg
add
jmp
add
xchg
add
mov
add
add
xchg
movsl
lahf
add
mov
jns
arpl
cmpsl
mov
cmpsb
add
add
add
in
and
repnz
stos
pop
push
loopne
je
movb
cmp
ret
jnp
add
out
mov
add
fisubrl
in
daa
mov
mov
add
add
adc
scas
xchg
add
add
mov
add
add
lds
sahf
fsts
add
js
mov
and
aas
stos
sub
movhps
add
push
add
ljmp
mov
add
pavgw
add
out
add
insl
mov
pop
rep
dec
pop
test
dec
and
sub
add
js
mov
mov
lahf
mov
pop
mov
test
ja
sbb
jg
inc
inc
add
xchg
in
add
aam
sbb
scas
xchg
mov
xor
ja
test
add
xor
add
ret
ja
add
xchg
add
pop
nop
add
test
filds
rolb
rolb
fnsave
add
jbe
dec
fiaddl
mov
ds
out
mov
sub
imul
jp
add
sub
mov
add
repnz
cmp
adc
jno
push
sub
add
add
data16
cmp
inc
add
popf
jns
mov
or
les
movb
inc
add
pop
cmp
fisubs
add
add
mov
decb
add
ss
test
rolb
xlat
mov
sub
lods
arpl
stos
or
mov
add
add
cmpsl
fstpl
push
add
pop
xchg
add
add
in
pop
push
push
add
and
mov
mov
cmc
inc
add
dec
pop
popf
sar
pop
scas
rolb
cmpl
mov
add
ljmp
das
jne
add
and
add
ja
pop
mov
add
or
dec
jp
add
fisubrs
sahf
mov
add
add
xor
xchg
call
stos
aad
mov
mov
xor
lahf
and
mov
mov
jbe
pop
pop
add
std
mov
xchg
jle
sbb
add
aad
add
add
daa
jns
dec
out
shll
lahf
jnp
popf
xor
add
dec
cmpsl
pushf
xchg
mov
stos
add
or
add
add
gs
dec
hlt
add
cmp
lahf
sub
add
mov
add
add
out
push
jb
rolb
test
inc
loop
jle
mov
and
sub
mov
add
mov
jb
mov
add
xor
add
add
add
push
add
mov
fwait
repnz
sub
mov
cmc
pop
aaa
stos
mov
adc
sbb
add
or
data16
loope
push
add
lcall
loope
add
mov
fucom
add
leave
jle
add
adc
cmp
sub
jmp
sahf
iret
xchg
add
inc
add
stc
dec
repnz
push
add
dec
jno
add
inc
add
add
rolb
mov
sbb
add
lea
add
mov
inc
add
and
enter
insl
push
cmpsl
pop
mov
pop
sbb
add
fstps
or
add
and
mov
add
frndint
cmpsb
add
pop
in
std
test
add
lods
outsb
xchg
inc
xchg
add
add
js
add
add
add
lret
jbe
jle
and
mov
push
imul
mov
pop
adc
sub
sub
add
xor
jmp
bswap
sub
test
mov
popf
and
dec
stos
das
sub
jb
xor
add
xorl
add
jo
gs
cli
push
jb
xor
add
add
pop
or
sub
add
pushf
xor
ds
dec
jle
sahf
jno
add
mov
mov
out
test
and
cld
fcmovb
add
and
test
xchg
outsb
rolb
fldl
int
testb
ret
inc
add
daa
fsubl
add
push
popf
xlat
fnsave
add
push
lret
dec
movb
add
mov
add
and
mov
cmc
aam
out
jmp
add
das
pop
bound
mov
mov
sub
mov
pop
movb
add
sub
add
fimuls
ret
cmp
call
sahf
pop
push
add
or
sbb
adc
add
dec
enter
dec
test
out
mov
add
add
add
mov
and
or
add
mov
dec
pop
cmp
dec
iret
sbb
dec
fcompl
popf
enter
add
add
insl
mov
xor
dec
fists
cltd
andl
add
xor
pushf
adc
rolb
jl
stos
lahf
clc
in
je
out
cltd
jge
scas
pop
jle
in
add
insb
enter
cmp
pop
push
add
add
mov
test
das
popa
dec
mov
insl
adc
push
add
add
mov
push
add
divl
test
add
ja
mov
jmp
dec
pop
shll
dec
mov
dec
je
rolb
test
sbb
shl
dec
cmc
adc
out
arpl
add
mov
in
std
fwait
aaa
fnstsw
jle
inc
add
add
daa
jb
push
add
xchg
add
add
adc
pushf
scas
stos
add
pushf
movsb
add
mov
je
xchg
or
cmp
rolb
ret
add
mov
pop
addb
add
mov
fiadds
add
add
pop
adc
add
dec
fs
out
into
and
mov
pop
flds
cmp
test
inc
add
inc
cwtl
addb
add
add
xlat
cli
gs
adc
dec
inc
add
add
fildll
jl
push
add
repnz
push
add
add
add
mov
add
add
pushf
cmpsl
in
rolb
jl
arpl
or
mov
xchg
sub
ja
push
into
pop
jl
rolb
pop
jo
sbb
add
fldl
in
lods
addb
add
add
add
cmp
xor
add
add
les
into
push
iret
scas
clc
sub
cli
jns
add
cs
mov
mov
stos
or
push
rolb
inc
add
mov
ja,pt
sub
sub
add
cli
int
cs
std
in
ljmp
xor
jo
int
xor
scas
hlt
add
add
push
add
add
bound
mov
sbb
add
leave
mov
arpl
aam
fsubrs
lea
add
repz
mov
inc
rolb
mov
in
ljmp
add
jle
add
add
ret
iret
sub
add
aaa
mov
add
add
add
xorl
mov
mov
lea
mov
add
add
mov
xchg
dec
mov
movb
pop
xchg
add
adc
add
mov
out
out
in
xor
add
add
cmp
add
mov
xchg
add
daa
adc
add
hlt
add
jl
push
in
dec
push
add
insb
movsb
add
add
add
sub
sub
add
add
mov
add
aas
push
std
lret
push
ljmp
insb
inc
cmc
push
mov
loope
add
or
add
pop
mov
shll
pop
addb
add
es
loope
add
push
add
popa
or
aad
add
add
xchg
add
jg
jae
mov
mov
add
add
lods
add
cmp
fdivrs
out
sbb
inc
add
add
add
imul
sub
add
aaa
repz
add
mov
fdivrl
pop
jg
add
push
add
pop
xlat
test
ljmp
mov
push
add
cmp
add
hlt
add
sbb
cld
push
in
imul
pop
arpl
push
outsl
sub
test
push
add
mov
icebp
pop
repz
add
and
xor
xchg
insl
arpl
jle
sub
fstpt
jae
lock
repz
sub
mov
adc
push
add
cmp
mov
fsubl
test
add
mov
mov
sbb
add
popf
mov
stc
bound
mov
add
dec
hlt
add
nop
add
jge
nop
add
add
mov
pop
bound
mov
jo
inc
orl
mov
incb
add
and
mov
imul
imul
sahf
inc
add
add
add
je
testb
test
loope
add
sbb
out
movsl
mov
ja
add
adc
mov
divl
add
mov
add
hlt
add
add
ja
and
add
mov
add
je
add
mov
mov
leave
and
mov
push
add
inc
add
in
mov
std
aam
pop
inc
add
outsb
mov
jb
fnstenv
xchg
add
fisttps
add
add
mov
repz
adc
aam
hlt
add
addb
data16
add
xchg
add
xchg
lcall
scas
aas
repnz
and
sbb
int3
pop
pop
shl
push
add
mov
jge
pop
stc
lock
add
cmp
icebp
sbb
decb
test
cmpsb
add
mov
sbb
xchg
inc
adc
popa
add
mov
jge
add
xchg
xor
ret
jno
add
xor
mov
mov
int3
dec
mov
add
mov
adcl
clc
mov
mov
pop
push
add
mov
test
inc
add
add
add
mov
fldenv
add
mov
or
in
cmpsl
test
ret
and
ja
in
aad
jnp
data16
in
add
lahf
sbb
int
add
xor
and
add
ret
xchg
adc
data16
inc
or
cmpsl
mov
mov
sbb
add
lea
sti
jecxz
pop
addb
or
hlt
add
push
add
push
loopne
adc
add
rolb
mov
and
add
add
inc
add
add
or
push
adc
addl
xor
pop
push
push
add
mov
jg
add
push
add
mov
cmp
mov
push
mov
add
add
add
hlt
add
lret
pop
xchg
lahf
fstpt
pop
ret
bound
mov
in
idivl
mov
testb
add
inc
mov
mov
add
adc
in
push
add
and
mov
add
add
add
and
inc
mov
popf
jmp
repnz
push
mov
xchg
push
add
mov
repnz
add
fwait
add
sub
push
add
and
mov
sar
loopne
es
test
outsb
add
or
xor
add
mov
add
std
int3
push
jmp
add
add
fs
and
repz
in
das
int
add
xor
js
adc
sub
xlat
and
xchg
mov
enter
mov
mov
xchg
add
and
dec
mov
mov
add
movb
movsb
add
out
pop
out
imul
push
and
cmpsl
jecxz
and
js
aad
pop
fidivrl
jbe
mov
test
ret
shll
jge
movb
add
inc
gs
add
iret
shll
jle
add
sti
sub
add
rolb
jnp
add
pop
and
add
mov
out
and
mov
mov
andl
repz
add
cmc
outsl
aam
or
stc
jo
popa
mov
fbld
pop
pop
and
mov
mov
xchg
add
add
jmp
add
add
push
out
add
push
mov
out
mov
mov
mov
jno
leave
aam
mov
cmp
inc
add
pusha
add
dec
xchg
add
or
fcmovne
mov
lds
test
inc
pop
jg
nop
add
inc
xchg
add
push
mov
mov
adc
cmp
or
mov
add
inc
add
add
or
inc
inc
arpl
mov
add
push
add
add
pop
int
add
or
xor
mov
test
xor
stos
jecxz
pop
dec
xchg
add
add
lret
xchg
sarl
adc
sub
jl
add
jno
add
in
jecxz
jnp
sahf
pop
rcrl
add
add
test
cld
shr
inc
mov
cmc
mov
mov
push
add
les
inc
add
adc
and
enter
lret
add
add
adc
mov
and
mov
scas
mov
inc
add
jnp
xchg
int3
outsl
sub
push
pusha
add
int3
testb
add
xchg
xchg
xor
pop
pop
arpl
faddl
lret
fsubs
lcall
cmp
mov
cmovp
add
mov
add
xlat
lret
int
and
cmpsl
cmpl
add
push
fisubrs
pop
push
add
rcrl
xlat
jmp
add
insl
mov
jmp
add
push
and
sahf
or
inc
add
fdivl
repz
cmp
into
xlat
jg
add
fldl
sub
adc
mov
dec
or
movsl
roll
jmp
mov
jbe
les
jle
add
mov
push
dec
cwtl
pop
cs
shrl
add
mov
add
add
add
cmp
adc
xor
std
add
movsb
add
pop
pop
mov
mov
jg
ficompl
fdivr
push
repnz
or
stc
push
add
adc
lods
mov
mov
xchg
aas
and
mov
cmp
inc
add
add
mov
mov
iret
sub
movb
pop
fdivrl
sahf
repz
jno
xchg
jno
cmp
add
pcmpgtd
mov
and
lahf
xchg
add
xchg
pop
or
pop
pop
xor
movb
iret
icebp
movd
add
repnz
add
addb
pop
decb
jmp
imul
cmpl
sub
sbb
das
push
int3
inc
add
pop
movsl
inc
add
mov
add
add
imul
xor
cwtl
push
test
cmp
add
add
cmpsb
add
fcompl
and
add
sbb
add
push
pop
push
hlt
add
in
stos
dec
xchg
mov
out
in
cltd
mov
lea
jbe
in
movsb
add
sub
outsl
cmpl
push
cli
jns
push
add
dec
xor
xchg
mov
fldt
out
in
sub
test
dec
dec
pop
inc
add
add
inc
add
or
add
xor
mov
add
shl
push
inc
fsubrl
or
mov
add
add
add
inc
add
add
fistps
clc
stos
lods
call
sbb
pop
mov
cmp
sub
ret
add
or
add
mov
add
sub
popa
in
push
addb
data16
int
add
mov
sbb
sub
xor
fwait
mull
adc
add
aas
xchg
in
add
add
sub
addb
add
adc
arpl
divl
add
mov
sub
cli
push
mov
sub
add
dec
and
xor
shll
ja
repnz
adc
leave
inc
add
jae
mov
add
jns
xor
sbb
add
xchg
add
mov
add
mov
repz
in
repnz
add
jmp
add
sub
mov
je
sbb
mov
add
pop
in
cmp
lods
cmp
mov
add
daa
addb
aas
sbb
clc
std
cmp
insb
movsl
mov
rcrl
push
add
insl
rcrl
jbe
ficompl
mov
add
clc
xchg
add
shrl
or
pop
aas
sbb
dec
inc
add
cs
jmp
add
add
xor
clc
aas
test
popa
scas
gs
add
add
dec
addb
add
mov
add
cmc
rolb
subl
add
push
cmpsb
add
loopne
jb
outsl
imul
add
push
sarl
or
stc
push
add
push
add
rolb
push
add
add
push
adc
js
add
add
loop
xor
sbb
popf
dec
mov
fsubr
fadd
add
mov
lds
stos
pusha
add
add
into
ds
ret
mov
add
add
mov
ret
adc
stc
mov
cld
repnz
xchg
cld
mov
cmpsb
add
mov
std
rolb
push
add
aad
push
cmp
mov
inc
add
add
sbb
add
fistpll
scas
lcall
cmp
sbb
push
and
mov
pop
lcall
add
mov
cli
rolb
insl
mov
add
lea
addb
jnp
nop
add
pop
xor
add
mov
sbb
inc
add
add
movsb
add
ret
repz
add
add
cmc
mov
cwtl
pop
incl
testb
ljmp
adc
rorl
add
imul
push
add
fisubs
lods
lret
test
mov
sarl
sbb
push
push
and
pop
push
add
add
outsb
ss
pushf
mov
inc
add
mov
xor
add
rolb
mov
outsb
stos
lea
cmp
add
add
icebp
cmp
mov
dec
gs
sub
and
mov
out
pop
inc
dec
dec
push
mov
add
or
add
sbb
add
aaa
adc
and
mov
push
in
xchg
lods
and
sti
mov
add
ret
test
jle
aas
mov
imull
jg
cwtl
les
test
push
push
add
data16
inc
add
add
jg
cmc
bound
mov
add
add
add
push
add
add
and
mov
jae
add
gs
adc
lcall
insl
inc
out
mov
sbb
mov
pop
andps
sahf
inc
xchg
jnp
mov
xor
xor
inc
add
pop
lods
adc
cmp
add
mov
insl
dec
push
add
add
push
add
pop
into
sbbl
pop
inc
out
mov
mov
or
add
xchg
jnp
sbb
add
push
push
add
add
imul
fcoml
insb
movb
sub
xor
in
icebp
ljmp
imul
add
sub
cmpsl
adc
sub
mov
mov
add
js
add
dec
outsl
fmull
imul
cltd
das
lret
mov
add
negl
mov
add
je
adc
imul
mov
adc
xchg
cmp
add
add
je
dec
mov
pop
jmp
ret
fcmove
fdiv
outsl
jnp
mov
repnz
xor
add
add
mul
xchg
scas
repz
sbb
mov
add
add
sbb
jbe
cmp
shr
cmpsb
add
add
out
push
add
pop
cs
testb
ret
mov
adc
or
test
add
mov
lret
movq
add
cld
clc
lea
ds
std
scas
ss
add
sub
xchg
add
arpl
add
jecxz
icebp
adc
push
sahf
fsubs
mov
addb
rolb
push
pop
inc
add
nop
add
add
data16
add
add
scas
cmp
inc
add
add
scas
cmp
jno
fnstsw
jg
add
jl
xchg
add
sbb
imul
dec
jecxz
sahf
insb
dec
addb
mov
and
mov
jns
mov
ja
mov
mov
mov
xchg
add
push
push
add
add
sarl
jle
add
outsb
xchg
ja
add
add
cmp
or
inc
test
add
insl
out
xchg
add
fwait
add
push
push
mov
add
hlt
add
push
xor
out
sub
mov
pop
sbb
sti
addb
out
fnsave
add
fimull
add
repnz
pop
mov
pop
mov
js
add
icebp
mov
stc
push
jl
test
jge
xchg
out
add
repz
mov
add
mov
cmp
test
sbb
add
add
test
mov
imul
std
lret
or
add
inc
or
popa
xchg
add
or
or
cmp
loop
test
add
sub
cmpsl
add
iret
mov
add
add
aam
jecxz
mov
add
test
gs
add
and
adc
into
out
inc
add
fwait
push
rcl
add
and
cmp
lret
pop
mov
add
mov
xlat
pushf
orl
testl
and
cmp
jecxz
cmp
add
push
add
aas
mov
mov
mov
into
into
scas
cli
dec
jge
push
out
stos
in
pusha
add
add
rcrl
push
movb
div
add
sar
adc
rcll
jae
add
xchg
dec
cmp
add
jl
mov
mov
addl
add
movsl
pop
sub
stos
in
adc
push
add
mov
loopne
and
and
mov
into
mov
jne
add
add
out
inc
jg
jo
xlat
sub
add
push
add
sub
inc
add
int3
xchg
mov
sbb
push
add
add
inc
nop
add
aaa
mov
mov
add
mov
ja
in
inc
sub
add
add
rolb
ljmp
or
cld
push
add
cmp
add
daa
xchg
add
add
pop
dec
mov
mov
mov
add
xchg
add
add
dec
rolb
mov
xchg
add
pushf
mov
push
jle
mov
sahf
out
stos
add
add
inc
add
inc
add
sahf
testl
mov
into
sbb
inc
mov
add
add
adc
in
lahf
ja
shll
add
xchg
add
mov
add
lock
xchg
mov
mov
add
movsl
jbe
xchg
add
cmp
add
rorl
mov
add
ror
stos
push
add
mov
mov
adc
in
add
mov
pop
outsl
dec
int
fisubs
test
cli
sub
add
xor
push
add
xchg
add
mov
add
add
jg
add
cmp
sbb
add
mov
push
add
test
add
sti
test
add
xchg
push
push
sub
inc
add
dec
dec
inc
push
dec
xchg
add
ja
rolb
pop
push
add
and
sti
test
mov
sti
mov
add
jae
add
fisttpll
cmp
add
in
popf
ljmp
testb
cli
or
ds
add
push
stc
mov
and
ret
inc
into
mov
push
mov
mov
add
push
jl
filds
cmpl
xchg
icebp
aas
ret
push
jb
aam
or
data16
ret
cmpsl
in
pop
cmpsl
adc
ficomps
mov
mov
pop
movsb
add
dec
loopne
mov
xlat
mov
cwtl
clc
fsubrs
and
outsb
sub
add
dec
ljmp
mov
mov
adc
add
enter
mov
cltd
mov
jmp
add
add
add
push
shl
pop
repz
je
or
sub
ret
addr16
aam
xchg
decl
add
add
jae
add
add
in
add
jb
rolb
movb
add
add
add
jns
pop
push
add
add
jl
add
sub
add
add
add
add
fadd
add
add
add
push
add
jge
push
xchg
add
int3
mov
aam
add
mov
add
pop
push
jb
sbb
pushf
adc
sbb
popa
clc
data16
out
addb
cmpsb
add
add
scas
xlat
adc
pop
test
mov
pop
push
add
add
cmp
push
add
add
lods
out
push
enter
daa
sub
add
dec
mov
push
add
rolb
sbb
jns
sbb
add
insb
sub
cltd
fdivs
loopne
lahf
xchg
push
mov
in
add
pandn
add
jne
adc
add
and
cmp
mov
cmp
add
add
add
push
add
sbb
arpl
push
add
aam
outsl
pop
std
mov
sbb
in
out
test
sub
add
add
sub
add
xchg
in
testb
cmp
add
mov
int
dec
push
add
aam
dec
or
js
into
or
add
int
push
add
jle
pop
addb
scas
in
add
jg
add
int3
les
bound
mov
inc
add
add
dec
lcall
inc
add
js
add
mov
and
dec
mov
push
mov
jne
cld
pop
add
and
lret
loopne
fildll
movsb
add
mov
aam
rolb
adc
inc
add
mov
orl
data16
add
xchg
add
add
dec
loop
sbbl
add
lds
mov
mov
cs
ss
mov
mov
push
add
pop
xchg
hlt
add
int3
xor
shrl
push
add
mov
pop
rolb
inc
add
fidivl
xchg
add
loopne
mov
aas
testb
icebp
clc
inc
add
mov
std
mov
pusha
add
add
out
daa
push
add
mov
test
lret
pop
jno
cwtl
xor
xchg
add
xlat
rcrl
add
aam
movsl
lret
mov
dec
sbb
add
pop
mov
add
push
add
jle
add
add
repz
ret
lods
mov
jge
add
cmp
pop
repnz
sub
mov
lsl
data16
cmp
gs
in
int3
call
push
cmp
dec
fistl
xor
inc
push
into
insl
jo
aaa
cmp
jp
add
xchg
add
xorl
mov
add
mov
xchg
add
add
mov
adc
add
add
pop
pop
adc
add
jge
add
loop
shrl
bound
mov
jecxz
ret
add
add
rolb
and
aam
fidivl
push
rolb
cmp
leave
and
mov
push
add
mov
or
add
in
push
add
mov
xchg
xchg
pop
cmp
sbb
mov
add
hlt
add
lcall
xchg
xchg
mov
add
sub
mov
pop
in
bound
mov
sbb
sub
pushf
sub
popf
mov
cmpsl
push
les
imul
xchg
mov
xchg
lcall
addr16
or
add
add
and
rolb
fidivrl
mov
pop
add
dec
jg
fiaddl
push
add
mov
cmp
pusha
add
adc
sbb
mov
repz
mov
imull
arpl
sahf
mov
gs
xchg
add
lods
outsl
pop
bound
mov
add
cli
stos
xchg
add
stos
mov
adc
rolb
popa
aas
push
add
sub
push
mov
add
test
jb
std
repnz
push
add
sub
add
add
jns
add
arpl
add
cmp
add
inc
ret
mov
mov
mov
sbb
add
pop
test
inc
adc
jb
mov
arpl
add
add
repnz
add
imul
cmp
dec
stos
inc
add
add
out
push
cltd
adc
scas
outsl
not
add
das
push
pop
push
lcall
repz
xchg
add
add
arpl
cmc
push
add
mov
jb
mov
push
add
fidivl
flds
add
insl
adc
sahf
popa
sub
push
push
add
add
xorl
dec
decb
inc
add
rolb
cmc
scas
sbb
imul
bound
mov
shrl
xor
sub
shl
add
add
add
sub
push
xchg
stos
push
add
pop
fadd
add
add
sbb
jge
and
call
std
dec
jl
or
pop
sahf
lcall
push
add
pop
push
xor
xchg
add
iret
inc
je
ja
pushf
test
add
cmp
lret
stc
out
negl
in
clc
push
testb
add
add
push
add
jb
int3
adc
stos
jmp
add
jecxz
cld
and
lret
std
ljmp
add
fmuls
aaa
shrl
dec
inc
add
sbb
imul
add
inc
mov
fwait
xchg
add
jmp
pop
add
add
jb,pt
xor
lods
jecxz
pop
jb
rolb
inc
jge
or
imul
adc
mov
add
dec
clc
mov
inc
add
pop
inc
add
add
add
push
ja
add
mov
ds
jg
movb
add
jne
sbb
or
xchg
push
add
add
inc
in
mov
add
add
mov
pushf
mov
add
movsl
dec
dec
stc
ffree
add
mov
add
popf
sahf
movsl
mov
add
leave
sbb
mov
repz
mov
pop
pop
es
push
jge
testb
add
push
or
int3
sub
and
lahf
pop
or
jp
add
add
sbb
inc
movsl
addb
inc
addb
add
add
add
add
jnp
inc
add
dec
aaa
test
nop
add
leave
mov
dec
sbb
push
add
add
addr16
mov
int
mov
add
mov
xlat
xor
push
sahf
sahf
fldt
sahf
cmp
jb
mov
add
add
add
xorl
sub
mov
add
lods
call
sti
sbb
cmp
add
and
mov
gs
lret
adc
ljmp
rolb
mov
cmp
testb
add
test
sbb
add
jo
in
push
add
sub
insl
cmc
ficoms
sbb
add
mov
nop
add
push
or
cmp
add
dec
cmp
add
add
add
lcall
ret
xor
insb
sub
cltd
xchg
popa
out
add
add
or
add
mov
insb
adc
movb
add
call
rolb
or
add
rolb
std
mov
adc
add
aam
addl
fsubs
das
mov
mov
add
add
cmp
out
add
stos
pop
int3
nop
add
add
add
mov
jecxz
shl
dec
testb
push
mov
pop
cmp
sub
cmp
loop
pushf
popa
sbb
out
xchg
add
pop
push
and
ds
cmc
scas
inc
add
sub
mov
add
mov
cli
add
rolb
mov
and
add
fsubrl
sub
add
adc
add
sub
push
jns
lods
idivl
cmp
pop
shl
cmpsb
add
add
jge
xor
fcomps
fnstcw
movsl
mov
xchg
inc
add
jb
inc
xor
dec
fcomip
jle
pop
stc
ret
int
js
mov
ja
sbb
jg
cltd
out
dec
add
add
add
add
xchg
add
mov
test
cmpsb
add
add
and
add
adc
pushf
addb
add
aad
ret
popf
rolb
imull
add
mov
cwtl
pop
lock
mov
add
xchg
xchg
sbb
and
movsb
add
cli
cwtl
xlat
push
add
or
fisubrl
push
add
bound
mov
cmp
mov
movb
add
in
rolb
xor
repnz
and
mov
in
clc
aaa
ljmp
cmp
repnz
add
push
sbb
loopne
cmpsb
add
jg
add
dec
push
dec
xchg
dec
ret
add
mov
xbegin
das
data16
add
push
ja
sahf
dec
bound
mov
add
and
mov
hlt
add
bswap
in
add
add
leave
rcrl
or
add
dec
ljmp
stc
test
maxps
add
mov
negl
imul
ja
add
movsl
mov
cmp
lods
in
xor
rolb
add
add
dec
jle
mov
add
cmpsl
push
jo
ljmp
add
mov
add
mov
shrl
scas
loop
rolb
movsb
add
push
add
lds
pop
sbb
in
addb
xchg
add
add
jnp
movsl
mov
test
insb
aam
adc
jns
jecxz
cld
test
ss
jp
iret
push
and
rcll
add
inc
add
add
xchg
sub
hlt
add
add
jne
movl
mov
or
xor
enter
inc
add
or
add
add
xor
sahf
fists
das
test
xor
popa
fsubs
add
xchg
add
pop
mov
rolb
std
dec
loopne
jno
push
popf
sub
or
adc
icebp
movsl
ljmp
xchg
addr16
daa
and
aas
push
add
add
mov
jp
fldl
add
test
andl
add
dec
and
add
cltd
ljmp
movsl
sub
xchg
add
xor
ja
cmp
popf
mov
lods
xchg
add
add
xchg
or
cmpsl
ficompl
mov
add
add
int
ss
adc
mov
push
add
scas
bound
mov
add
sub
add
mov
mov
adc
xchg
add
add
inc
add
mov
repnz
lret
add
mov
call
add
clc
ds
sub
mov
add
mov
cmpsl
jne
cmp
add
add
shll
adc
lret
repnz
add
mov
add
add
add
sub
add
addb
sub
pop
imul
mov
add
mov
sub
in
pop
scas
outsl
xchg
add
add
cmp
add
popf
pop
mov
mov
add
add
add
add
int3
mov
add
ljmp
xchg
add
jae
jg
aad
pushf
enter
add
ret
cs
add
insl
xor
pop
mov
outsb
sub
pop
fldenv
sti
pop
stos
jp
jp
add
add
jmp
dec
inc
add
add
push
add
dec
lret
sbb
add
add
mov
mov
leave
cmp
push
and
xor
sub
jae
imull
repz
add
shll
add
xchg
int3
icebp
lods
xor
nop
add
ljmp
push
add
add
pop
cmp
pop
cmp
ficompl
mov
test
imul
add
lahf
imul
dec
aas
fsubs
repnz
add
int3
sbb
mov
add
jl
add
lret
push
add
mov
add
add
ret
add
add
out
mov
add
addb
xchg
add
cwtl
test
dec
xchg
add
add
pop
fs
push
add
mov
imul
add
icebp
jae
pop
add
push
push
or
pop
mov
fisubs
cmp
mov
mov
in
mov
add
cmpsb
add
add
iret
int
test
sti
push
add
std
sbb
mov
add
int
dec
jb
les
inc
fdivrp
jns
push
add
add
scas
mov
sbb
add
repnz
addb
mov
mov
fcompl
call
or
xor
int3
mov
out
adc
testb
ja
add
add
cmp
loopne
ret
out
and
add
pop
jge
addr16
das
loopne
clc
sbb
or
orl
add
add
xchg
pushf
lds
add
outsl
xor
inc
pop
and
add
lret
fidivrl
les
inc
sbb
add
add
push
jb
xorl
pusha
add
push
add
leave
adc
lahf
add
jns
push
push
mov
rolb
add
dec
sub
iret
jo
mov
add
int
mov
inc
pop
mov
add
add
rolb
add
jp
or
jno
adc
scas
addl
hlt
add
adc
cli
imul
pop
dec
xchg
add
add
mov
mov
mov
test
leave
nop
add
add
iret
adc
xchg
and
sbb
nop
add
pop
jns
lods
aas
enter
push
add
sub
sub
ret
movb
add
adc
push
add
sub
add
pop
pop
aad
add
cmp
or
and
scas
fxtract
add
outsl
clc
pusha
add
add
outsl
push
xchg
add
out
xor
push
add
dec
xor
rolb
ljmp
je
sbb
repnz
and
pop
in
movzwl
xchg
xor
sub
dec
jecxz
add
sub
add
mov
add
xchg
sbb
mov
jmp
xchg
and
add
mov
and
mov
add
add
mov
add
xor
in
divl
xor
add
stos
pop
pop
xlat
jns
mov
add
pop
loop
mov
movb
mov
repnz
fistps
jno
inc
add
pusha
add
andl
jmp
imul
insl
add
mov
add
inc
add
inc
add
fldt
js
add
cmp
add
subl
and
outsl
mov
add
mov
sti
icebp
das
aas
aaa
repz
mov
adc
xchg
add
scas
cmp
inc
add
adc
pop
fsubrl
mov
xlat
cmp
add
sbb
or
movsb
add
or
leave
enter
add
add
and
aas
sbb
add
pop
mov
into
cwtl
jg
lods
mov
fcmovnbe
and
mov
add
lcall
jmp
sbb
push
add
push
jecxz
adc
scas
cld
and
mov
repnz
aas
rolb
cld
xlat
xor
dec
fimull
xchg
add
outsb
push
add
add
or
add
add
xchg
cmp
pop
dec
sbb
add
add
sti
mov
push
push
add
sub
xchg
add
nop/reserved
enter
add
and
addb
mov
inc
jb
out
lock
add
inc
xor
xchg
dec
add
mov
fwait
jge
add
mov
xor
xchg
add
adc
push
testb
jnp
lahf
fwait
inc
add
lods
addl
lea
mov
dec
sub
in
cmc
sub
ljmp
push
pop
bound
mov
daa
mov
jne
add
sbb
cmpsl
sub
mov
rolb
add
fwait
xor
mov
test
not
add
push
dec
rolb
stos
test
xchg
sbb
shl
or
jle
enter
mov
push
ds
mov
outsl
adc
sbb
push
add
jns
push
cltd
xor
xor
mov
popf
push
sub
add
repnz
add
add
lahf
stos
dec
add
mov
les
and
add
pop
lahf
sub
push
push
pop
and
mov
jbe
fwait
test
xor
add
mov
pop
push
add
inc
add
xchg
push
out
add
add
pop
cmp
or
jl
add
aaa
testb
cld
imul
xchg
push
add
orl
xchg
xchg
inc
xchg
push
add
xchg
add
pop
pop
imul
mov
jo
repz
or
nop
add
mov
push
rorl
sbb
negl
scas
jecxz
or
push
add
inc
add
jb
sub
cmpsb
add
mov
leave
dec
mov
and
push
add
dec
fwait
lahf
and
mov
xor
xor
inc
add
jbe
icebp
or
orl
sbb
add
cmp
fistpl
add
mov
imul
shrl
outsb
jmp
inc
test
mov
adc
add
xchg
fdivs
add
push
add
in
ret
jp
push
add
add
dec
lahf
lea
mov
add
fildl
mov
mov
stc
mov
mov
icebp
fdivrl
add
push
add
add
mov
add
jg
add
inc
jne
stc
jle
js
xlat
jbe
pop
scas
rolb
mov
dec
adc
pop
jb
in
ret
adc
xchg
add
das
mov
cmp
sbb
jecxz
add
cmp
in
jle
add
sbb
dec
mov
cmpsl
xchg
add
cld
arpl
mov
add
call
out
adc
push
jne
sti
js
jns
add
cmp
or
add
jo
lcall
add
cmp
pop
shll
push
add
pusha
add
les
arpl
sbb
add
add
add
sub
aam
stc
mov
jmp
cmp
add
arpl
add
add
push
xor
fildl
icebp
sub
add
add
lods
mov
cltd
push
add
rcrl
cmp
sbb
xor
cwtl
out
sbb
inc
cmpsb
add
inc
pusha
add
out
and
mov
add
mov
add
popa
inc
add
add
push
cmpsl
dec
inc
add
add
inc
aam
mov
mov
add
les
clc
sub
fsubr
push
pop
jp
das
ret
xchg
adc
xchg
sti
out
add
enter
jle
add
push
cwtl
pop
movsb
add
movsl
std
jnp
xor
loop
add
daa
gs
pop
adc
outsb
lds
jb
mov
ljmp
sub
mov
add
add
add
dec
and
test
add
add
or
stos
sahf
cmp
add
xor
adc
das
pop
xchg
ljmp
popa
add
cmp
scas
rolb
and
mov
jno
fldenv
add
xchg
sbb
mov
add
aas
aaa
push
add
pushf
arpl
jnp
mov
xor
lds
xor
addb
add
add
mov
out
sub
xchg
dec
push
add
divl
push
movb
add
outsb
push
add
dec
nop
add
add
jmp
add
pop
out
xchg
lcall
add
add
add
and
addr16
sahf
inc
nop
add
outsb
les
pop
imul
movb
add
add
je
inc
lock
call
add
out
cs
stc
mov
mov
add
lods
inc
pop
adc
add
ret
jmp
mov
add
add
mov
dec
jle
fdivrl
lret
movsb
add
gs
add
dec
jmp
pop
leave
fnsave
jecxz
pushf
cmpsl
push
movsl
or
mov
add
add
sbb
scas
int3
inc
add
sahf
mov
cmp
add
add
movb
add
sti
xchg
and
mov
sahf
lods
inc
add
sub
imul
mov
mov
les
ret
fstl
repz
add
int3
jle
sub
mov
jno
scas
test
roll
pop
mov
add
bound
mov
mov
add
push
add
stc
pop
cltd
lcall
outsb
loope
xchg
push
add
inc
add
decb
fdivrl
push
add
add
insl
mov
add
mov
add
ds
iret
in
decl
add
cld
push
dec
je
addb
pop
fs
sub
push
add
data16
repnz
add
lcall
pop
xor
inc
add
xchg
repz
je
xor
sub
in
in
pop
hlt
add
or
add
add
jae
movb
add
jae
imul
xchg
mov
mov
add
add
test
pop
cmp
lahf
or
mov
mov
imul
lcall
adc
add
icebp
dec
mov
fildll
pop
mov
pop
mov
or
jl
stos
int3
and
add
cli
arpl
outsb
or
bound
mov
mov
sbb
cmpsb
add
cwtl
ret
lret
insb
or
add
scas
mov
pop
stos
dec
or
sbb
push
mov
negl
add
fdivl
adc
dec
mov
xchg
add
add
fisubrs
add
add
push
cmp
push
add
sbb
add
xchg
pop
add
add
sub
pop
pop
push
add
addr16
inc
add
ljmp
cmc
pusha
add
add
lret
xchg
add
xchg
in
or
cmpsl
imul
hlt
add
add
add
pop
fldcw
mov
cmc
das
jo
pop
das
mov
mov
sub
bound
mov
negl
push
sub
jecxz
add
mov
mov
rolb
ljmp
pop
les
lea
ret
cwtl
inc
add
add
insl
mov
cmp
dec
dec
clc
imul
pop
popf
and
mov
add
sub
out
xor
jns
add
mov
add
mov
lds
mov
add
into
jmp
add
xor
add
mov
jecxz
ds
xor
sub
fimuls
pop
sub
push
imul
sahf
rolb
dec
inc
add
add
movsl
or
cmp
rolb
mov
aas
lds
ljmp
add
sbb
in
and
mov
pop
icebp
xchg
add
movsb
add
push
add
outsb
sbb
mov
mov
add
mov
movsl
xor
arpl
add
repz
add
inc
add
loopne
scas
sahf
jne
push
xchg
add
mov
add
jmp
xor
lret
pop
dec
ds
scas
xlat
imul
sbb
fdivp
add
loopne
repz
cwtl
and
mov
divl
xchg
aad
ljmp
add
loope
add
addr16
dec
jge
mov
add
add
pop
jp
in
popf
sbb
mov
add
mov
add
sbb
jl
add
jo
mov
add
je
xor
xchg
jl
add
add
fadds
add
add
nop
fcompl
push
add
addb
mov
addb
xchg
sub
add
inc
cli
sub
add
dec
iret
mov
pop
out
gs
loopne
inc
add
fldl
add
add
add
cld
scas
mov
cli
add
mov
xor
call
add
std
pop
jnp
mov
inc
rolb
inc
add
push
aaa
iret
add
pushf
bound
mov
xchg
add
cmp
dec
jp
add
and
in
out
sbb
mov
add
dec
jmp
or
mov
add
out
xor
sbb
and
add
test
add
mov
push
add
mov
stc
cmp
inc
sbb
adc
add
add
add
dec
sub
xchg
add
mov
popf
lods
inc
add
test
add
inc
je
repnz
pop
push
add
or
add
fcmovnb
stos
lahf
cld
push
add
push
outsl
icebp
imul
lea
push
cmp
add
add
add
xor
cmp
add
sbb
add
outsl
pop
pop
ficoml
add
add
mov
addb
add
stos
ret
jnp
xchg
add
sbb
pop
xor
xchg
add
lret
pop
incl
dec
push
aaa
adcl
push
xor
jp
mov
add
dec
pusha
add
aaa
dec
in
or
dec
iret
testb
dec
in
mov
inc
cld
mov
and
xchg
dec
mov
add
mov
xchg
add
add
jmp
add
arpl
pop
xor
or
inc
push
loope
rolb
icebp
sub
and
mov
mov
scas
mov
aas
and
bound
mov
push
add
mov
jns
insl
insb
stc
adc
xchg
add
inc
add
mov
add
mov
add
add
add
add
bound
mov
push
mov
add
mov
add
lods
jb
idiv
fcomps
add
or
movsl
push
les
dec
mov
pushf
daa
pop
stc
mov
add
add
push
add
imul
negl
mov
add
mov
les
dec
xchg
jbe
push
add
insl
pop
xchg
add
add
add
test
jno
xor
mov
cmp
add
imul
repz
add
add
dec
cmp
lret
into
call
lods
jge
cmp
fwait
add
mov
pop
dec
incl
clc
shll
add
pop
sti
movsb
add
add
lods
adc
and
movsl
add
add
mov
add
push
mov
add
push
add
and
mov
pushf
dec
adc
mov
insb
mov
aad
int
push
dec
and
dec
push
add
add
sub
movsl
sub
push
add
jbe
je
repnz
or
jne
lret
ja
add
fadds
enter
add
xchg
add
dec
flds
xchg
sahf
outsl
xor
cltd
sbb
add
in
lds
jbe
pop
cmpsl
xchg
test
mov
dec
loopne
imul
scas
cltd
rolb
or
data16
push
mov
dec
pop
lock
push
ret
add
or
mov
mov
adc
cmp
incb
add
rolb
fwait
addb
inc
add
add
mov
lods
push
add
push
dec
ret
movsb
add
add
cs
sub
add
cltd
ja
push
add
sbb
add
ja
mov
cli
sbb
sub
call
and
mov
cmc
inc
pop
stos
push
add
shr
jg
push
sbb
jge
xor
add
add
push
add
add
push
add
jno
sub
add
cmp
sbb
add
add
jns
sub
aam
dec
mov
add
xchg
int3
in
push
out
addr16
rolb
aam
and
mov
cmp
xor
add
add
mov
xor
add
dec
push
add
insl
outsl
jl
sbb
pusha
add
xor
mov
add
add
add
fmul
addr16
std
data16
testb
pop
jo
sub
add
mov
sbb
arpl
xchg
test
mov
pop
fdivp
add
outsb
mov
enter
jp
sub
bound
mov
add
mov
cmp
add
cmp
dec
sub
add
mov
stos
scas
dec
pop
add
add
add
add
addr16
sahf
push
and
add
add
nop
add
fmul
sub
add
int3
imul
mov
mov
add
fwait
int3
inc
mov
aam
mov
test
pop
call
add
jns
add
into
inc
inc
add
testb
loopne
dec
cmp
nop
add
inc
add
add
jo
sbb
add
clc
sub
and
add
leave
add
pop
popa
loope
fstpl
xor
data16
std
fidivl
add
cwtl
xchg
xor
arpl
add
add
xchg
add
call
or
pop
fs
pop
out
add
push
add
cmp
stos
addb
test
add
add
add
mov
adc
add
movsb
add
add
mov
cli
pop
popa
sub
adc
mov
add
mov
cmp
add
xor
inc
add
add
mov
sub
out
sbb
mov
rolb
sbb
mov
cmp
add
jns
rolb
dec
testb
add
xor
in
or
sbb
mov
loope
cmp
jge
negl
dec
jo
sti
mov
xchg
hlt
add
xchg
pop
jg
adc
out
xor
xchg
in
out
iret
ret
and
mov
add
pop
dec
sub
int3
add
xchg
nop
add
and
add
mov
add
mov
push
les
xor
scas
add
and
add
dec
push
dec
or
out
and
mov
add
cmpsl
mov
je
adc
hlt
add
add
sub
push
jge
sub
in
std
fwait
scas
inc
add
mov
sbb
ret
imull
fcmovb
add
mov
mov
addb
ds
xor
xchg
add
mov
aas
imul
shll
rolb
mov
jp
outsl
sub
scas
bsr
add
int
and
mov
cmp
mov
iret
and
cmc
inc
xchg
add
add
add
push
dec
push
add
adc
add
sbb
add
imul
mov
add
test
mov
add
dec
je
lret
out
sbb
add
lcall
mov
int3
mov
add
push
add
inc
add
out
imul
xchg
test
std
or
add
add
test
mov
stos
insl
add
mov
add
xor
or
add
scas
and
stos
mov
pop
lret
sbb
add
aaa
addb
arpl
aas
enter
and
mov
mov
jmp
dec
xchg
add
aad
add
lea
aad
lock
add
xor
fadds
mov
fldcw
incb
xlat
test
sbb
add
add
pusha
add
add
pop
fisubl
add
push
out
movsb
add
add
std
imul
add
addr16
mov
mull
add
adc
push
push
bound
mov
add
cs
inc
add
pop
js
add
xor
int
add
mov
xor
cli
nop
add
sbb
mov
imul
mov
mov
add
add
lods
call
test
push
dec
popf
inc
sbb
add
add
xchg
add
jg
add
and
imul
inc
out
insb
dec
imul
pop
sub
mov
add
int3
mov
cld
sub
jno
cld
xor
jge,pn
inc
dec
addb
loopne
push
add
add
add
mov
adc
dec
pop
sub
push
add
je
nop
add
pop
repnz
add
leave
test
adc
cmp
mov
mov
cwtl
inc
jge
fcomip
add
add
add
dec
add
mov
add
add
pusha
add
sbb
push
and
mov
mov
add
leave
sbb
outsb
lods
rolb
fcmovne
push
dec
out
adc
testb
add
mov
cmp
adc
or
ss
add
sahf
or
add
mov
lcall
sub
jle
add
cld
je
mov
mov
push
add
add
inc
add
rcll
leave
add
add
or
or
add
add
mov
push
add
add
inc
daa
test
fidivrl
add
sub
push
add
mov
dec
xchg
add
add
jae
testb
add
pop
push
add
es
add
lds
fstps
lock
xorl
pop
outsl
in
std
jecxz
addb
add
add
add
add
mov
inc
add
add
repnz
xor
popa
out
add
sbb
add
nop
add
std
cli
or
mov
push
jns
add
fistpll
sahf
icebp
les
mov
add
mov
test
xor
inc
dec
pop
push
sbb
scas
add
dec
outsl
sti
cmc
pushf
ret
addr16
std
push
mov
lret
push
addb
cmp
add
jns
pop
insb
icebp
inc
push
lcall
mov
cmpsl
loope
outsb
pop
in
sti
cmp
daa
xchg
mov
sub
mov
add
jp
push
add
sub
add
add
add
lcall
add
mov
add
rolb
aam
ljmp
test
mov
lds
pop
inc
add
mov
add
jnp
add
xchg
add
sub
add
xchg
sbb
push
push
ret
xchg
add
addl
push
jne
pop
sbb
add
mov
push
mov
js
add
sbb
sub
add
sbb
into
adc
add
rcl
add
add
insb
into
mov
pop
jg
add
push
int3
mov
inc
add
add
mov
mov
add
mov
jns
into
data16
jge
pop
in
adc
inc
stc
test
add
cmp
adc
je
rcll
pop
or
clc
jmp
mov
jle
add
gs
pop
cmp
imul
in
js
add
mov
xchg
dec
jg
dec
leave
sub
push
add
pop
fsts
xor
or
pushf
lea
xor
rolb
movsl
mov
sub
dec
mov
int3
orl
rolb
pop
mov
outsb
push
add
add
dec
fst
int
push
add
mov
add
cwtl
add
mov
lret
fmul
out
push
add
movsl
clc
fdiv
xchg
mov
jecxz
mov
inc
ja
jl
add
jo
lea
lahf
inc
rolb
aad
mov
pop
jns
mov
ds
sub
add
addr16
mov
add
add
xchg
add
add
pop
dec
dec
stc
popa
test
das
into
fcomps
push
inc
add
decb
jp
and
mov
ljmp
inc
test
xor
mov
add
and
add
add
mov
std
rolb
icebp
xor
xchg
stos
sbb
add
xor
adc
cmp
add
lret
cld
stos
xor
push
add
xlat
daa
cmp
add
jle
or
push
sbb
pop
shll
rolb
hlt
add
pusha
add
mov
cmp
scas
add
inc
je
push
mov
mov
add
push
add
lock
repnz
add
push
add
mov
mov
xor
jecxz
xlat
test
dec
out
xlat
imul
aaa
adc
mov
sub
or
sbb
jo
xchg
add
inc
add
out
xchg
xchg
add
add
add
push
sti
movsb
add
add
popf
loopne
mov
push
add
add
add
mov
mov
lahf
pusha
add
xchg
add
cmpl
or
add
or
push
stc
cltd
stc
dec
and
into
inc
add
icebp
adc
nop
add
and
mov
mov
lds
outsl
arpl
add
xchg
add
nop
add
sbb
sub
hlt
add
add
enter
sbb
das
sub
mov
test
add
fsubl
dec
popf
mov
sub
test
push
add
sub
rolb
xor
inc
pop
fisttps
add
mov
add
xor
jecxz
add
dec
imul
xchg
add
add
cltd
cmp
add
xchg
add
add
add
inc
add
test
loopne
pop
or
mov
inc
pusha
add
push
add
add
and
int
jno
das
mov
insb
jle
jmp
push
inc
add
inc
add
fwait
nop
add
pusha
add
mov
lret
jecxz
scas
mov
add
add
add
int
lods
pop
xor
addr16
add
sub
add
mov
add
cmc
or
ror
ret
fcoms
inc
add
add
cmpsb
add
pusha
add
adc
les
std
cmpsl
mov
add
movsb
add
cmpsl
call
xchg
add
data16
test
pop
enter
shll
popf
sub
mov
dec
sub
pop
test
add
inc
add
mov
push
and
mov
add
add
push
add
pop
mov
or
xor
sahf
sub
add
repnz
add
sahf
sub
xchg
fisubs
add
mov
hlt
add
mov
mov
pop
and
add
mov
clc
xchg
pop
ret
sub
add
mov
sbb
adc
arpl
and
mov
cmp
sti
and
sub
add
add
pop
xor
inc
add
add
lock
push
call
sub
mov
pop
push
pusha
add
loope
imul
pop
adc
int3
scas
add
mov
jp
add
repz
popa
mov
and
lds
add
stos
pusha
add
mov
inc
add
dec
cmp
add
mov
lcall
push
add
cwtl
in
aad
add
pop
xor
pop
les
sub
js
add
add
add
stos
lahf
aaa
lcall
out
pop
pause
add
add
lret
movb
sbb
add
dec
testb
add
xchg
pop
xor
shll
insl
inc
add
dec
adc
rolb
jecxz
cmp
add
or
add
add
xchg
xchg
sbb
inc
add
inc
adc
in
add
sbb
xchg
or
add
pop
mov
push
sub
loope
nop
add
and
mov
jmp
push
js
fnstenv
add
aam
and
add
mov
lcall
mov
lcall
lock
stos
mov
cmpsb
add
add
add
dec
xchg
add
cwtl
adc
lret
add
outsl
dec
dec
mov
xor
pop
out
hlt
add
stc
pop
test
sub
push
xchg
push
test
add
inc
mov
mov
mov
add
test
add
aas
fldcw
xchg
daa
inc
add
add
das
inc
add
add
movb
aaa
pop
icebp
inc
add
nop
add
add
aad
pop
enter
dec
mov
add
add
cmc
inc
add
mov
add
xchg
sti
rolb
pop
inc
add
scas
jl
dec
cltd
lods
popa
mov
lods
out
xlat
mov
add
aaa
cltd
ret
frstor
movsl
cli
jl
dec
les
xor
shll
insl
lret
dec
jmp
xchg
jge
iret
xchg
add
mov
add
xchg
add
lods
sub
fisubrs
jo
mov
or
add
mov
negl
addb
add
call
popl
jle
lcall
iret
das
add
add
push
add
add
popa
jae
subl
pop
mov
sub
add
and
add
sbb
add
dec
add
mov
mov
int3
inc
add
sbb
addb
add
call
in
push
jecxz
add
mov
add
add
fs
add
lea
push
add
sbb
add
adc
gs
add
hlt
add
popa
jbe
xor
std
mov
data16
mov
push
add
xor
push
mov
sub
filds
add
add
addb
cmc
cmp
cmc
fwait
add
mov
daa
jne
add
mov
idivl
sub
push
push
lds
out
mov
add
and
fcomip
push
add
mov
into
into
add
mov
testl
enter
add
add
add
add
pop
xchg
cmc
or
sahf
sub
add
jns
adc
iret
ljmp
into
xor
cmp
mov
rolb
dec
push
add
add
pop
das
pop
clc
fwait
push
mov
add
jne
andl
add
in
cmp
cmp
aad
add
fdiv
add
inc
add
jne
repnz
xor
insl
jb
or
pop
add
jle
aam
mov
mov
mov
ljmp
out
or
push
mov
mov
jbe
lods
lret
andl
dec
cltd
js
add
add
dec
lods
cmpsl
enter
add
arpl
mov
adc
out
pop
adc
add
add
imul
mov
mov
pop
add
add
dec
ljmp
add
jecxz
inc
jmp
add
sub
sub
aaa
test
pop
incl
test
lcall
pop
jge
mov
das
or
fprem
pop
push
xchg
add
aaa
pop
xchg
add
mov
sahf
aam
lods
stos
or
jg
dec
inc
add
out
xlat
and
fisttps
fiaddl
icebp
push
fisttps
add
add
push
add
repz
and
mov
add
jle
mov
jle
outsb
push
add
dec
sbb
gs
sub
add
fwait
add
add
enter
jecxz
add
add
mov
add
lahf
add
add
mov
push
add
add
add
add
cmp
add
cmc
xor
in
popa
mov
add
cmpsb
add
add
xor
push
pop
addr16
pop
fistpl
jns
add
add
add
ret
inc
pop
jp
jmp
rolb
mov
or
shll
mov
pop
mulps
out
push
roll
pop
cmp
mov
pop
mov
mov
mov
xor
cmp
add
add
mov
and
add
or
sbb
das
arpl
and
mov
add
sub
lods
popf
inc
inc
cmp
add
pop
cmc
ret
pop
jno
dec
scas
test
xor
ja
lods
mov
add
loope
cmp
add
push
mov
insl
out
popa
jmp
push
mov
flds
mov
add
dec
add
mov
xor
add
lea
xor
shll
add
add
mov
add
add
adc
in
adc
aaa
or
loope
std
lret
shll
add
imul
in
daa
mov
add
add
imul
push
sub
test
adc
dec
cmp
nop
test
mov
jg
andl
dec
jno
push
add
fldenv
adc
cltd
std
pop
pop
enter
add
lock
outsl
stos
xchg
test
outsl
sub
or
jnp
dec
aad
aas
jo
xchg
pop
aas
and
mov
mov
ljmp
cmp
mov
add
lds
xchg
add
add
adc
daa
adc
leave
inc
mov
xchg
mov
and
mov
add
jb
xchg
add
jecxz
add
add
mov
inc
add
jle
ljmp
stos
rolb
xchg
add
mov
call
shl
fwait
push
add
testb
movsb
add
aad
pop
ret
leave
jne
add
addb
add
fnsave
icebp
cwtl
mov
add
cmc
ret
sbbl
iret
add
mov
dec
jb
icebp
loop
testb
add
dec
cwtl
popa
push
inc
add
mov
outsb
push
add
jle
insb
sti
cmp
lea
mov
insl
sbb
je
cmp
add
faddl
xor
out
add
jo
push
add
mov
rolb
out
fwait
xorl
sub
movsb
add
jl
adc
cmp
insl
xlat
jl
add
loopne
push
add
add
add
mov
add
ret
jns
mov
sub
jl
xchg
cmp
sub
rcl
jns
xchg
add
inc
jmp
sub
ljmp
adc
iret
icebp
jo
dec
xchg
xchg
inc
add
push
mov
add
jecxz
lds
jp
jp
clc
bound
mov
add
xor
jo
xor
data16
mov
stos
dec
stos
nop
add
dec
sbb
push
add
add
pop
add
inc
dec
pop
bound
mov
add
clc
jl
repz
inc
imul
fsubrs
scas
les
cmp
add
inc
cli
pop
add
add
push
add
jle
add
mov
cmpsl
test
pop
or
cmp
inc
add
adc
shll
xlat
into
repnz
add
xor
mov
or
popa
pop
sub
rolb
pop
xor
pop
pop
dec
sbb
or
js
add
and
mov
jmp
aam
pop
xchg
frstor
push
add
rolb
repnz
xchg
xor
xlat
push
add
popf
addb
aad
out
loope
movl
rorl
add
push
add
xor
and
dec
xlat
in
out
pop
mov
enter
rolb
int
push
add
int
xor
pop
data16
xor
inc
add
add
add
add
add
dec
testb
dec
movsl
sbb
xchg
add
lock
add
mov
fidivrl
and
xor
cwtl
pop
dec
or
shrl
pusha
add
add
mov
add
jae
add
and
xchg
jo
hlt
add
xchg
outsb
pusha
add
mov
dec
push
add
add
jae
in
out
add
pop
mov
data16
push
jae
mov
fwait
push
les
aaa
lret
jbe
push
add
movb
lret
mov
or
cmpsb
add
xchg
pop
fs
push
mov
rolb
push
sub
add
jmp
inc
push
add
rolb
frstor
push
cli
mov
les
mov
mov
sbb
push
add
mov
push
mov
lcall
js
in
test
mov
add
jnp
add
mov
repz
test
jle
lret
push
add
repnz
add
add
cmc
leave
push
add
sbb
jle
xlat
mov
add
add
cmpsb
add
lea
add
add
push
jno
add
or
mov
add
add
or
mov
sbb
addr16
jae
add
mov
push
inc
jmp
enter
rolb
jnp
stos
filds
mov
mov
je
sbb
add
sub
and
mov
icebp
push
les
mov
lods
loop
adc
outsb
cwtl
enter
mov
mov
mov
test
fisttpll
ffreep
add
add
jmp
and
das
mov
cltd
out
mov
mov
lds
dec
sub
pop
fcompl
jnp
repz
xchg
addb
mov
fistpl
testb
js
pop
jge
add
in
sub
and
add
push
add
test
push
mov
xchg
add
rolb
add
fsubrs
add
add
add
jg
add
sub
and
cmp
enter
xchg
add
add
or
rolb
add
sub
pop
cmp
cld
lods
ljmp
cwtl
add
dec
xor
and
mov
stos
js
imull
adc
outsb
add
mov
movl
out
mov
xor
mov
pop
cli
stos
js
testb
add
out
in
mov
add
repz
test
and
mov
add
pop
mov
add
pop
sub
mov
sub
pushf
aad
add
pop
pop
mov
out
dec
push
add
xor
add
pop
int
jge,pn
add
add
mov
xchg
jb
ret
mov
inc
add
dec
iret
hlt
add
sub
lahf
call
ffree
pop
jl
cwtl
lock
add
mov
das
inc
add
adc
xor
or
xchg
add
and
mov
sbb
hlt
add
pop
stos
data16
mov
mov
add
call
lods
mov
sbb
mov
mov
jp
add
inc
add
add
pusha
add
mov
mov
add
add
dec
rcl
gs
add
add
add
mov
add
dec
insl
das
hlt
add
cmp
mov
mov
popa
jge
pop
addb
pop
cltd
mov
or
ficoms
data16
add
inc
xor
sti
push
loope
mov
xor
test
and
mov
imul
mov
cmp
data16
add
aam
dec
rolb
mov
test
add
fisubs
mov
mov
inc
add
ss
mov
add
dec
cmp
jae
mov
add
xchg
sub
mov
push
add
stos
sbb
dec
jbe
dec
scas
mov
inc
add
jl
add
jecxz
add
xchg
add
mov
xor
cwtl
push
test
pop
or
test
in
xor
popf
dec
test
add
add
sub
xor
int
cli
xchg
add
and
mov
add
add
add
mov
mov
addb
inc
cmc
out
sbbl
adc
and
and
mov
repnz
add
fildll
add
mov
pusha
add
inc
add
or
inc
add
aaa
inc
add
icebp
into
leave
pushl
and
push
add
mov
aad
jno
add
in
iret
test
cmpsb
add
loop
sub
pop
mov
add
add
sub
and
imul
pop
xor
add
mov
add
mov
lock
insl
push
add
jno
sti
lods
mov
inc
add
add
cmp
add
mov
add
and
adc
and
mov
mov
iret
push
add
das
mov
and
jb
test
addb
andl
cltd
aad
add
add
lds
xchg
dec
mov
test
imull
dec
adc
popa
test
loope
imul
mov
dec
lret
call
adc
mov
add
add
add
mov
add
mov
sahf
insl
movsl
adc
adc
jbe
mov
mov
add
add
ret
add
push
add
dec
inc
mov
add
add
pushf
imull
out
enter
add
mov
insl
cmp
xchg
ret
lods
out
mull
mov
imul
lahf
lcall
push
add
mov
add
xchg
dec
fisubl
jl
jge
mov
adc
push
add
add
cmp
jbe
or
dec
inc
add
std
in
mov
or
jmp
nop
add
add
add
sub
mov
sub
sbb
cmp
jp
aad
stos
and
out
iret
jp
xchg
xchg
lahf
mov
add
mov
out
cmpsl
pop
jno
add
decl
dec
cmp
call
add
mov
add
mov
xchg
add
add
pop
or
dec
lock
add
add
lods
movsl
mov
cmp
add
dec
sbb
cmp
stos
cmc
testb
add
sbb
add
ja
add
and
sahf
fimull
add
loopne
sahf
sub
loopne
adc
pop
rolb
das
mov
mov
int3
fdivs
xchg
sbbl
xchg
test
fisubl
mov
fldt
add
mov
add
pop
fmull
xlat
sub
int
add
mov
movsb
add
sbb
xchg
add
scas
mov
mov
into
jmp
imul
std
inc
lcall
mov
js
add
push
add
movsl
jno
xchg
rolb
in
leave
add
icebp
or
push
add
mov
push
add
scas
mov
or
stc
mov
sbb
dec
jnp
mov
out
xchg
rolb
rcll
add
add
jge
cli
aas
xor
stc
rolb
sub
add
mov
cmpsl
insb
sbb
add
push
add
mov
idivl
test
testb
xchg
scas
enter
sub
add
mov
fsubs
add
ficomps
lea
cwtl
pop
lcall
outsl
push
imul
cli
dec
loopne
jae
add
mov
push
add
and
int
add
lret
lods
mov
mov
add
cwtl
movl
mov
inc
add
scas
inc
xchg
insb
hlt
add
pushf
sahf
and
icebp
mov
mov
mov
jae
add
out
mov
or
add
add
xchg
add
ljmp
mov
and
mov
mov
rcrl
pusha
add
mov
add
pop
cmp
icebp
mov
nop
add
iret
jns
sbb
add
add
leave
add
add
jg
mov
addb
mov
clc
dec
push
add
xor
dec
cld
test
lods
pop
cmpsl
or
sbb
pushf
jno
push
mov
cmp
add
mov
call
int
add
jg
push
rolb
add
sub
xchg
imul
mov
lret
sahf
jns
fldl
add
mov
call
add
add
jmp
and
inc
add
add
xor
add
cwtl
sbb
add
rolb
push
movb
xor
repnz
add
gs
dec
add
lcall
ja
and
out
cwtl
push
add
mov
add
subl
add
popa
clc
ret
push
add
add
add
lock
add
and
inc
add
rolb
and
insl
call
inc
test
testb
add
sub
pop
xchg
and
mov
icebp
pop
hlt
add
or
xchg
add
add
add
add
xchg
in
and
mov
imull
push
addb
sub
aaa
fbld
add
add
in
gs
add
mov
xor
test
add
add
out
aaa
sbb
push
add
test
push
add
mov
add
push
add
adc
sbb
ret
mov
out
movsl
mov
inc
add
movsb
add
cs
add
add
push
into
call
out
pop
mov
nop
add
xor
add
add
or
bound
mov
cld
movb
add
inc
add
imul
insl
scas
imul
aam
lahf
lea
jb
dec
movsb
add
mov
cltd
mov
add
mov
lods
or
sbb
sbb
mov
stos
sub
add
add
mov
sbb
mov
sub
adc
test
xchg
sbb
cli
insl
cltd
adc
dec
add
out
push
mov
addr16
fsubrl
and
lods
cmp
add
add
or
adc
fisubl
mov
mov
xor
dec
and
mov
in
dec
pop
pop
dec
shll
jg
add
push
add
and
cmp
lods
outsl
push
stc
popa
cli
ljmp
push
movsl
mov
add
push
add
add
lret
jnp
push
pop
cwtl
sub
das
test
xchg
pop
add
mov
add
das
and
mov
add
mull
push
sbb
add
ret
add
add
sub
mov
jns
push
add
cmpl
cltd
ror
ret
dec
addr16
add
add
push
test
popf
cmc
pop
out
in
gs
fmul
mov
add
sarl
inc
add
scas
pop
push
add
lcall
int3
dec
mov
add
push
stos
mov
add
add
jle
movsb
add
aas
pop
rolb
out
sub
cmpl
push
add
add
add
add
push
push
dec
cli
outsl
scas
push
add
stc
mov
movsb
add
add
or
add
addb
sbb
sbb
mov
iret
jne
out
ja
add
add
add
add
adc
add
jge
lret
int3
out
test
lcall
mov
lahf
add
mov
push
add
push
adc
iret
jo
jbe
aaa
push
add
je
mov
add
in
sub
movsl
or
jp
xchg
add
adc
add
adc
mov
add
repz
xchg
cmpsb
add
jnp
shl
add
xchg
add
push
add
ret
add
jp
add
jecxz
lcall
popa
pop
ja
or
push
dec
shll
ljmp
jnp
ljmp
testb
push
testl
and
imul
fdivl
add
adc
sbb
add
add
out
or
rolb
sahf
decb
jmp
xchg
dec
call
add
push
loop
mov
adc
mov
or
jg
inc
sbbl
mov
and
popf
pop
fwait
test
add
sub
subl
ljmp
cld
add
jno
pop
pusha
add
jp
add
add
add
jo
add
mov
clc
dec
or
pushf
cmp
mov
xor
fcompl
add
icebp
sbb
add
add
test
push
add
fisubrs
std
cld
cmpsb
add
or
add
sbb
xchg
add
add
mov
mov
add
inc
add
sub
xor
jne
inc
add
push
sub
shll
add
daa
ret
jno
fcmovnb
aam
push
mov
add
mov
testb
add
push
add
cwtl
jp
xchg
jg
add
jmp
pop
bound
mov
lods
add
mov
xor
data16
pop
icebp
cmp
in
pop
test
add
jecxz
dec
jle
add
mov
add
lahf
dec
clc
push
add
add
or
add
push
add
pop
ret
pushf
add
mov
mov
adc
mov
call
xchg
mov
add
sbb
add
and
mov
add
xor
sub
cmpsb
add
jmp
add
adc
mov
mov
aad
pop
sbb
push
out
add
jp
loope
in
jle
loope
fwait
jmp
add
pop
out
int3
leave
test
data16
mov
shll
add
mov
sarl
clc
add
add
cmp
mov
movsl
cmp
push
add
aad
add
adc
sub
out
clc
repz
pop
lods
jno
sub
popa
cmp
mov
icebp
adcl
pop
in
push
add
subl
call
ja
xchg
dec
cmp
mov
in
std
xlat
lods
fisubrl
cmpsl
add
adc
sbb
push
ljmp
out
mov
pop
cltd
mov
add
sarl
daa
pop
or
nop
add
mov
jmp
fwait
xor
ret
js
add
mov
dec
xor
xchg
add
add
jb
and
cwtl
mov
sbb
jge
add
lock
xor
out
int3
dec
adc
adc
or
sbb
add
mov
add
add
cmp
dec
enter
add
int
cwtl
jbe
rolb
fwait
mov
and
add
xor
add
fisubrs
enter
fcmovne
sbb
xchg
lahf
stos
pop
cltd
add
movsb
add
add
sub
ja
xor
push
fcomi
add
add
add
das
stos
mov
jo
dec
push
mov
xor
call
pop
fwait
not
add
scas
inc
add
sbb
pushf
sbb
mov
mov
xchg
mov
lahf
sbb
add
add
add
mov
adc
push
add
data16
and
mov
cmp
add
cwtl
sbb
lock
jo
popf
rolb
jb
mov
pop
lock
add
inc
das
cmc
inc
test
sti
jecxz
ret
xor
add
push
mov
push
sbb
in
clc
inc
add
cmp
add
add
cmpl
sahf
push
and
add
pop
push
add
cmp
adcl
mov
jecxz
add
fldl
ja
xor
jg
addb
cwtl
dec
jg
jnp
stos
or
sbb
add
add
xchg
int3
cli
lock
dec
mov
movsb
add
adc
lret
cmpsb
add
addb
sub
push
add
and
jno
shl
adc
mov
add
mov
loop
push
add
gs
leave
add
add
add
