adc
xchg
add
out
mov
negl
mov
ss
mov
add
or
lcall
add
jge
sbb
push
add
sub
add
stc
loope
add
jb
add
mov
add
add
popf
stos
xor
push
add
add
and
or
loope
push
add
dec
scas
inc
add
rolb
imul
and
jge
rolb
std
mov
add
add
mov
push
add
cs
addb
imul
test
xchg
add
add
xchg
xor
lock
ds
lds
pop
fidivl
pop
ret
add
push
add
cmp
dec
pop
mov
cwtl
cmovge
inc
add
insb
rcrl
add
arpl
add
mov
add
add
jne
sub
into
rolb
test
arpl
test
aam
testl
xchg
mov
mov
add
fld
addr16
push
adc
sub
pop
andl
adc
int
pop
loopne
push
add
cmp
add
pop
cmp
add
mov
add
mov
mov
or
jmp
jnp
add
stos
dec
mov
add
bound
mov
loope
fwait
and
mov
adc
outsb
mov
push
add
lock
mov
push
add
in
add
cmc
cmp
add
push
push
add
ret
rolb
lahf
xor
push
out
mov
add
lahf
out
stos
cmpsl
mov
dec
adc
add
je
fcmove
mov
fisttpl
add
mov
pop
pop
add
add
add
add
hlt
add
ljmp
add
xor
push
add
negl
mov
pop
cmc
push
add
fbld
add
dec
ret
cvtps2pd
lret
or
adc
lea
add
and
mov
outsb
mov
nop
add
add
cmp
scas
das
xchg
add
int3
lods
lods
pop
inc
mov
add
adc
add
stc
out
sbb
test
lahf
in
and
mov
add
cmc
div
push
add
add
shrl
icebp
scas
fcomi
data16
jne
add
and
mov
rolb
pop
stos
inc
push
add
or
fsubr
add
movsb
add
add
dec
and
mov
xor
push
ret
mov
add
mov
ds
lret
lods
jecxz
add
add
add
ja
add
add
push
add
sbb
sbb
push
leave
mov
cli
ret
and
add
xchg
xor
add
add
cmp
adc
sub
add
bound
mov
in
orl
push
add
mov
push
xchg
test
repz
add
add
jbe
sbb
jp
mov
add
add
jb
movsb
add
aam
mov
inc
add
xchg
add
pop
and
cmp
insb
dec
jno
inc
add
aas
fmull
add
icebp
cld
xchg
xchg
add
add
add
repz
out
add
outsl
rolb
add
mov
testb
fisubl
mov
addb
addr16
pop
pop
inc
mov
add
jae
or
jle
and
add
mov
add
cmp
inc
add
lds
addb
jo
add
inc
add
js
dec
add
push
add
add
mov
into
test
xor
int
adc
divl
mov
addb
jl
jle
popf
and
mov
jbe
jo
sbb
nop
add
add
cltd
int
rolb
mov
cmp
jp
add
add
add
repnz
jecxz
xor
ja
out
mov
jp
or
add
pop
out
add
enter
loopne
xor
pop
inc
add
cli
stos
mov
xchg
jmp
fcmovb
pop
adc
inc
add
add
mov
sbb
fistpll
cmp
xchg
add
cmp
add
stos
out
std
mov
add
mov
xor
and
mov
das
fwait
mov
out
out
movb
push
add
cli
xor
movb
filds
xor
mov
aas
dec
out
mov
leave
test
dec
pop
rolb
std
mov
jmp
lods
pusha
add
add
add
and
add
mov
addb
add
xor
jnp
add
mov
dec
add
add
aam
imul
ret
add
lods
int3
mov
addb
jle
dec
cmp
push
test
dec
inc
add
add
popf
data16
add
out
cmp
out
mov
xchg
add
add
add
add
fwait
in
mov
addb
test
mov
pop
das
dec
fcmovne
stos
mov
add
add
or
add
add
sbb
in
cmpsl
dec
loop
add
or
add
lcall
add
mov
imul
rolb
mov
cmp
lds
jne
cwtl
clc
test
mov
add
add
enter
add
add
add
mov
mov
dec
ret
dec
sub
jg
into
jle
enter
add
stos
dec
mov
xlat
dec
dec
jp
push
add
dec
and
add
adc
repz
aas
or
aad
dec
jmp
out
cmpl
add
imul
mov
mov
xor
das
fcoms
mov
mov
add
sahf
or
addb
add
mov
jl
and
data16
add
movsb
add
pop
inc
add
add
jnp
jmp
adc
dec
icebp
les
fistps
popa
xorl
insl
daa
popf
inc
cmpsl
addb
popf
adc
mov
cmpsb
add
jo
xor
add
add
pop
pop
out
ficompl
add
cli
cmp
xor
pusha
add
shll
and
add
add
add
mov
mov
into
lea
int3
xlat
addb
sbb
mov
jl
add
add
dec
es
add
rolb
and
inc
cmp
sarl
push
sbb
push
cli
mov
lea
enter
or
inc
add
cmp
mov
add
add
and
jecxz
add
add
ljmp
test
add
out
jle
add
or
fnstenv
mov
mov
add
movsb
add
add
add
push
insb
xchg
add
je
jecxz
bound
mov
cltd
jae
jo
ljmp
dec
mov
inc
add
inc
nop
add
and
repz
imul
sbb
icebp
les
pop
inc
add
outsb
inc
scas
mov
xchg
add
xchg
cmc
ljmp
lods
inc
add
push
add
push
add
push
add
cmp
decb
ds
mov
les
or
out
scas
add
mov
gs
jo
add
jge
add
fdivrl
cli
ffree
das
enter
mov
dec
xor
sbb
mov
cmp
mov
xor
push
ret
dec
and
pop
fistps
into
shl
mov
dec
imul
add
add
mov
adcl
add
mov
push
add
add
push
add
test
test
add
add
add
add
addb
add
add
add
add
add
insl
fstpl
add
inc
add
inc
mov
cwtl
jnp
lcall
jmp
out
int3
mov
ja
in
js
add
mov
add
lds
dec
mov
inc
dec
xor
inc
add
pop
cmpsb
add
stos
fisttps
or
jmp
jnp
popa
inc
add
xchg
inc
test
adc
push
cmp
aaa
sub
ljmp
popa
push
add
add
addb
sbb
jp
add
mov
int3
push
add
lods
xor
mov
add
xlat
mov
inc
add
cmpl
add
lcall
add
mov
add
dec
insl
cmc
into
loope
or
lret
add
mov
add
pop
bound
mov
xchg
dec
or
adc
movb
adc
jecxz
inc
mov
add
mov
add
add
sbb
popa
in
fcompl
jmp
mov
adc
pop
mov
jg
rolb
add
pop
movsb
add
stc
xchg
dec
inc
movb
stos
dec
adc
jmp
pop
cmp
testb
mov
rolb
std
pop
aas
xchg
xchg
add
std
mov
fildl
cld
dec
mov
or
pop
xor
and
mov
add
add
sbb
repnz
test
and
push
add
add
mov
mov
addl
mov
pop
jmp
loope
inc
or
xor
mov
or
mull
jge
xchg
add
and
lret
pop
jg
mov
mov
add
mov
cli
int3
hlt
add
and
mov
lret
inc
add
add
fwait
sbb
add
add
add
aam
fcomi
inc
filds
js
loopne
cmp
sub
add
add
inc
fldenv
mov
cmp
add
add
daa
push
add
jp
sahf
pop
fsubp
add
insb
cs
xlat
popf
mov
fcom
add
cmp
add
out
movsl
push
add
add
jl
pop
mov
add
clc
dec
xor
iret
icebp
or
xchg
out
mov
fst
adc
dec
mov
cltd
shl
inc
add
add
add
add
add
loopne
cmpsb
add
sahf
mov
xor
shll
add
jbe
adc
and
je
jb
pusha
add
push
fidivrs
add
xor
outsb
jp
stos
testl
loop
addl
out
sti
in
add
mov
add
les
jae
push
mov
mov
jp
push
aam
repnz
sbb
pop
stos
push
jbe,pn
inc
pusha
add
add
repz
test
jbe
stos
ss
sahf
testb
jnp
arpl
stos
pop
sub
add
leave
out
psubsb
push
sbb
adc
dec
dec
mov
dec
addb
or
and
mov
add
outsl
adc
add
mov
add
add
sbb
mov
mov
stc
cld
in
add
movsb
add
add
jmp
popf
inc
daa
std
jg
fnstsw
add
add
out
lcall
dec
mov
push
add
into
icebp
add
mov
push
add
sub
pop
xchg
add
add
addl
int
add
lcall
inc
add
aas
lcall
push
jl
and
div
cli
push
test
jle
fimull
xor
nop
add
sub
cmp
jmp
add
push
add
arpl
pushf
xchg
cmc
jns
xchg
add
push
rorl
int
jno
add
fwait
js
jne
add
add
fucomip
stos
lahf
sub
and
loopne
or
les
jbe
push
add
push
add
add
lea
fcomip
dec
fcmovne
icebp
jns,pt
add
in
test
addb
push
test
inc
add
mov
js
add
incb
outsb
ds
andl
jbe
mov
fldt
jbe
pop
pop
push
add
add
inc
add
add
std
dec
test
mov
push
out
mov
pop
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
sub
cmp
push
test
add
push
add
sub
add
add
vmovupd
add
add
mov
mov
dec
mov
mov
or
mov
mov
adc
test
add
hlt
add
je
repz
mov
add
mov
sbb
scas
incb
push
add
add
mov
stc
inc
xchg
stos
js
dec
mov
pop
sbb
adc
xchg
add
lcall
mov
ja
add
outsl
pop
fwait
test
data16
and
add
aad
jbe
je
lahf
ret
add
pop
out
clc
push
mov
xlat
cwtl
gs
or
add
mov
rolb
add
add
out
std
inc
add
add
inc
add
mov
dec
jns
fimull
loope
stos
add
mov
jmp
in
adc
add
add
mov
sub
add
out
fiaddl
enter
push
mov
add
inc
ljmp
adc
pop
inc
xchg
add
std
xchg
inc
add
imul
aad
add
add
mov
sahf
cmp
mov
mov
push
add
add
dec
stos
fdivs
subl
cli
enter
mov
xchg
test
cmpl
or
in
ret
add
mov
xchg
mov
and
push
add
inc
add
cmp
dec
repnz
dec
rolb
aad
jne
scas
add
test
dec
fmuls
inc
add
mov
push
add
insb
loop
mov
add
mov
cmp
add
inc
jp
adc
in
add
lods
sub
jae
jo
add
add
mov
fistpl
mov
arpl
add
add
rcll
cmpsl
inc
sbb
add
cmp
add
pop
inc
inc
add
dec
push
add
mov
out
jge
add
add
loopne
xchg
rolb
int3
xor
add
mov
mov
add
jge
add
ja
mov
lret
rcl
addb
sub
add
arpl
xchg
lock
scas
call
outsl
pop
sub
popa
xchg
add
push
mov
int3
lcall
out
out
sti
add
mov
stos
sbb
andl
adc
xlat
pop
xchg
jnp
add
mov
mov
lcall
add
or
pop
mov
add
jmp
and
fcmovnbe
add
add
fidivrs
or
inc
add
adc
stos
test
pop
push
addb
jns
add
outsb
loopne
ret
stc
jmp
test
bound
mov
add
cmpsl
out
mov
add
fcomp
push
rolb
jns,pn
jo
mov
loope
imul
in
cmp
scas
and
add
aam
xchg
add
je
add
aad
add
mov
jns
jb
jle
add
mov
or
jp
or
add
pop
mov
out
rcrl
and
repnz
add
add
popf
ljmp
imul
add
pop
adc
add
sub
aam
cmpsl
lea
add
add
add
add
mov
jl
jbe
sbb
repnz
add
mov
add
jecxz
add
add
add
add
sbb
jae
add
push
push
mov
loopne
or
stc
mov
mov
add
dec
sub
idiv
nop
add
int3
data16
add
pushf
cli
sbb
add
aas
adc
push
fstl
adc
add
lods
inc
xor
pop
in
mov
jg
cmp
push
add
sub
xorl
adc
fidivrl
add
add
addb
add
std
ret
in
add
add
add
pop
sti
shrl
in
add
and
mov
mov
adcl
daa
xchg
add
add
repnz
pop
ret
stos
sbb
pop
mov
mov
add
or
add
pop
daa
jne
adc
push
add
lea
add
mov
inc
add
add
sub
sbb
adcl
loope
xchg
add
add
mov
fistpll
movb
add
bound
mov
add
pop
push
add
xchg
add
add
psllw
in
cs
adc
add
xchg
add
rolb
in
mov
add
or
mov
and
jae
push
scas
sub
add
je
call
in
lret
fimuls
add
pop
dec
lret
lret
inc
add
dec
arpl
lahf
sbb
add
jge
cmp
sub
add
add
pop
or
mov
jnp
add
imul
fstpt
cmp
aad
and
cmpsb
add
lea
dec
mov
xor
push
sbbl
add
add
sub
add
and
imul
push
add
mov
or
add
mov
lcall
mov
insb
cmc
repnz
outsl
mov
add
add
mov
cli
jp
sub
push
gs
or
loopne
dec
out
sbb
inc
ljmp
adc
cmpsl
loopne
pop
adc
fmull
mov
add
outsb
and
sbb
dec
movsb
add
out
popf
add
add
outsb
jecxz
cmpsb
add
adc
cs
pop
aam
pop
pop
rolb
cmc
loope
xchg
mov
add
loop
clc
and
add
dec
int3
pop
mov
add
jno
mov
xchg
xor
mov
pop
daa
inc
add
movb
movups
mov
adc
add
repz
pop
rolb
bound
mov
fiadds
popf
and
mov
arpl
dec
sub
leave
mov
cmp
movsl
pop
jae
and
dec
in
mov
xor
dec
mov
add
mov
adc
dec
mov
pop
int3
lods
sub
cmp
mov
jb
cmp
pextrw
test
addb
add
sub
cmp
add
stos
mov
stos
movsb
add
daa
mov
mov
in
clc
and
ret
add
add
and
stos
inc
dec
stc
ret
cmc
or
add
push
adc
inc
add
movb
rolb
in
xchg
fisubrs
add
test
and
add
dec
notl
lret
je
pop
leave
and
pop
push
add
repnz
popa
sbb
mov
push
add
enter
aam
adc
enter
add
adc
inc
sbb
daa
jecxz
xor
mov
sub
sbb
add
gs
push
add
mov
cmc
mov
enter
sbb
xor
adc
cmpsb
add
sub
adc
mov
addb
lock
jae
call
push
inc
jno
push
add
rolb
mov
shll
push
add
xchg
add
clc
pop
xchg
mov
movb
and
add
add
sub
cmp
lods
mov
out
lret
mov
hlt
add
mov
add
add
scas
or
push
add
jmp
mov
add
scas
mov
add
add
and
mov
add
int
lcall
mov
jge
mov
add
add
iret
or
add
lods
mov
ja
add
inc
sbb
mov
add
add
push
adc
jb
fsubs
bound
mov
inc
or
xchg
add
hlt
add
lret
rolb
addr16
jne
jb
lea
mov
aad
add
pop
ud0
cmpsl
pop
add
lret
fstp
ret
jecxz
add
test
xlat
sub
xchg
add
xor
adc
sbb
add
loopne
pusha
add
movb
out
sbb
mov
movsl
repz
add
aas
mov
divl
jne
mov
nop
add
lahf
call
dec
cld
out
jmp
insl
push
add
push
add
add
lds
outsb
sbb
add
pop
lods
mov
add
mov
jnp
aaa
inc
icebp
aas
push
xchg
or
pop
cmp
iret
call
cmp
add
add
adc
pop
sub
insl
jl
add
mov
add
xor
jbe
push
add
sbb
push
mov
xor
bound
mov
bound
mov
add
cmp
js
ja
add
add
jecxz
fcoml
mov
lahf
xor
add
add
test
rolb
cs
sbb
cmp
test
add
cmp
mov
add
and
pushf
mov
cmpsl
jno
add
sbb
push
mov
jg
add
add
les
stos
movb
jmp
mov
mov
add
mov
add
xchg
mov
or
nop
add
cmp
popf
sub
xor
mov
add
popf
xchg
stc
jl
nop
add
mov
inc
xor
test
pop
repnz
lock
add
add
pop
sbb
add
add
lret
or
out
data16
nop
add
add
add
cmc
popf
test
stos
insl
and
sahf
xchg
xlat
xor
cli
inc
sub
add
lea
xlat
dec
jns
int3
outsb
pop
pop
bound
mov
xchg
add
add
add
inc
adc
xchg
fdivp
add
add
push
mov
gs
pop
inc
add
movsb
add
add
pop
xlat
jecxz
add
std
dec
ror
sub
ret
sbb
mov
cmp
mov
add
fwait
jp
int3
push
add
add
add
rolb
dec
jbe
pop
bound
mov
dec
xchg
sahf
cmpsl
and
mov
add
xchg
xchg
aaa
adc
add
outsb
push
add
adc
add
test
add
add
add
adc
outsl
dec
pushf
lcall
mov
add
push
add
add
add
pusha
add
lods
rolb
push
jge
mov
add
mov
add
mov
mov
add
cmp
iret
dec
int3
dec
pop
js
loop
daa
pop
scas
mov
add
add
repz
xlat
dec
or
cmpsb
add
inc
inc
add
dec
inc
rcll
fistps
inc
add
jmp
add
mov
enter
pop
into
mov
jb
cmp
dec
outsl
pop
push
add
push
inc
and
mov
add
cmp
imul
pop
outsl
xchg
push
inc
dec
cmp
add
mov
cmpsl
pop
lea
cmp
add
fdivrs
es
add
pop
xor
lret
push
movb
push
or
test
rolb
add
push
add
dec
and
cmpsl
sub
add
addb
addr16
add
sub
mov
data16
add
test
add
add
fwait
inc
add
cmpl
add
add
jnp
inc
pop
leave
jae
popa
push
add
add
or
sbb
add
add
add
cli
into
push
add
cmpsb
add
nop
add
ja
xchg
hlt
add
pop
call
lods
jg
std
out
pop
fimuls
add
mov
add
add
std
mov
mov
add
mov
cltd
inc
add
xor
adc
cs
inc
add
shrl
xor
scas
cld
lar
mov
inc
add
jmp
add
mov
test
sbb
repnz
outsb
and
adc
scas
sbb
add
cmp
add
xor
pop
inc
mov
cmc
mov
sti
out
les
and
mov
jns
lahf
in
xchg
mov
cli
dec
mov
push
add
decb
sbb
add
mov
out
sbb
add
mov
xor
jae
sbb
movsl
roll
add
fisttps
or
out
sbb
scas
mov
mov
add
stos
movsl
sub
cltd
in
inc
jge
fistps
aad
arpl
and
cli
xchg
add
sbb
add
adc
inc
adc
bound
mov
pop
icebp
scas
pop
les
popf
jle
mov
mov
ljmp
test
and
ret
add
adc
pop
xlat
lcall
add
add
push
push
and
mov
movb
add
mov
add
mov
add
addl
add
scas
pop
fs
add
inc
add
pop
sbb
add
dec
movsl
cli
cmc
sub
add
mov
testb
mov
mov
iret
fdiv
add
add
adc
jae
ljmp
mov
data16
add
jg
add
add
mov
roll
out
popf
mov
add
mov
ret
test
aas
push
add
mov
add
add
orl
add
in
add
mov
add
aas
mov
add
mov
lods
jp
jg
mov
out
xchg
pop
sbb
xor
xor
add
testb
hlt
add
mov
ja
dec
sbb
int3
pop
xchg
pop
jmp
sub
ret
and
mov
cmc
in
add
test
sbb
add
and
pop
stc
adc
add
add
push
cmp
add
in
and
loopne
loopne
test
test
add
mov
ja
andl
outsl
mov
movsl
addb
jo
add
add
sub
and
mov
lret
xor
xor
adc
push
inc
mov
add
add
sub
and
sbb
xor
add
cmp
jne
add
mov
mov
mov
and
mov
add
add
add
mov
and
add
jecxz
dec
loop
data16
add
adc
test
jbe
imul
and
pop
scas
loopne
test
loopne
out
mov
loope
xchg
rolb
inc
add
add
add
push
add
cld
jno
add
mov
cli
flds
lods
mov
insb
fldcw
in
mov
cmove
pop
jns
fnstenv
add
add
mov
test
add
test
mov
mov
lock
or
mov
push
loop
inc
add
rorl
repnz
sbb
dec
add
icebp
cmp
xchg
cmpl
loopne
add
cmp
push
jae
hlt
add
mov
or
and
mov
push
addr16
or
add
addb
jmp
jnp
add
inc
add
push
int3
fbstp
push
loopne
movsb
add
add
xor
je
xor
and
mov
pusha
add
add
stc
inc
data16
mov
mov
icebp
lea
add
mov
push
add
popa
setge
in
cmp
mov
mov
pop
iret
jg
mov
xchg
add
testl
add
cs
imul
in
xchg
mov
addb
cmp
adc
outsl
mov
xor
xor
adc
js
add
add
and
push
dec
mov
scas
xchg
add
rcl
outsl
adc
popa
test
test
xchg
add
or
pop
std
sar
add
pop
fcmovne
adc
jno
rolb
testb
add
adc
stc
insb
test
xlat
and
add
pop
stos
xchg
mov
add
fdivs
dec
or
add
add
sbb
mov
add
add
rolb
scas
sbb
imul
mov
je
cli
imul
add
sub
sub
cmp
in
lods
cmp
movb
adc
adc
loop
test
ja
add
test
add
add
pop
mov
add
mov
cmp
add
shrl
add
ret
xor
pop
pop
sub
mov
mov
add
mov
sbb
xchg
add
push
add
hlt
add
xchg
add
add
add
add
add
add
inc
add
cwtl
or
inc
out
push
add
shll
jp
push
push
fisttpl
mov
add
add
mov
add
add
add
cmp
add
out
bound
mov
add
test
add
cmp
add
ret
das
adc
hlt
add
repnz
add
rolb
sbb
add
mov
add
bound
mov
sbb
add
repz
push
add
add
mov
and
xchg
add
js
inc
add
add
dec
add
aas
ret
aad
xchg
add
or
mov
jo
fcoms
dec
xor
scas
adc
addb
add
test
mov
push
add
mov
push
add
add
push
add
scas
mov
addb
add
pop
popf
addb
in
cs
cli
imul
add
gs
mov
add
xchg
jns
dec
cld
stos
jl
daa
xchg
add
push
add
add
lea
or
add
testb
xchg
hlt
add
ljmp
cmp
adc
loop
mov
add
call
mov
mov
add
in
inc
add
or
fdiv
add
add
push
add
push
and
add
sbb
or
adc
mov
test
cmpsl
in
jmp
pop
adc
fsubl
mov
add
push
xchg
add
nop
add
dec
adc
int3
ljmp
lds
jle
int
cmc
sub
lcall
or
mov
scas
or
add
add
in
daa
add
add
testb
xchg
push
std
jnp
cmp
add
add
mov
mov
in
mov
pop
or
and
dec
aas
outsl
mov
inc
mov
sti
das
gs
mov
in
sbb
test
and
jae
add
pop
mov
add
lock
add
jle
stc
adc
add
fists
stc
jae
add
out
pop
scas
cmp
mov
repz
pop
js
mov
jo
lea
jmp
add
arpl
or
repz
add
in
jo
loopne
in
add
cs
movb
dec
sub
mov
and
mov
mov
out
push
add
mov
sub
add
add
or
out
push
add
inc
sub
push
rolb
lea
mov
inc
push
add
mov
add
ret
xlat
xchg
add
or
add
lret
std
push
pop
adc
sub
and
add
mov
push
add
add
notl
add
jecxz
add
inc
add
lock
add
add
popa
xchg
push
add
in
sub
cwtl
test
dec
fdivr
test
mov
xor
mov
add
jae
insb
push
add
push
mov
arpl
aam
lret
mov
mov
add
rorl
sbb
add
std
pushl
out
in
popf
mov
push
add
nop
adc
das
in
add
cld
inc
rcll
insl
mov
fwait
iret
push
add
bound
mov
test
sub
add
inc
add
setnp
add
mov
lret
xchg
mov
loop
cmp
cmc
and
add
lock
ljmp
mov
mov
icebp
test
scas
add
rolb
out
ljmp
pop
cmp
rolb
imul
lcall
inc
shll
add
push
add
add
xor
or
add
mov
and
and
cmpsb
add
loop
cmpsl
icebp
adc
mov
out
dec
mov
data16
inc
mov
cwtl
int
pusha
add
add
xchg
das
fsts
add
fadd
mov
addr16
sub
add
sub
add
sub
dec
inc
add
add
add
mov
mov
add
add
mov
jo
xchg
dec
jno
cmp
add
test
gs
bound
mov
pop
rolb
dec
jmp
std
inc
mov
push
add
add
jno
jmp
add
out
add
add
das
fstps
xchg
es
repz
stos
pop
lret
fmull
add
ja
adc
xlat
sbb
pop
aam
ror
ja
add
rolb
fsubs
pop
cld
pop
inc
jb
divl
push
inc
add
jp
bound
mov
inc
sbb
aad
out
out
sub
adc
dec
push
pop
aaa
inc
xchg
mov
dec
cmp
in
xchg
mov
mov
in
jbe
stos
add
mov
stos
scas
lcall
push
jnp
xor
das
add
cli
mov
incl
add
mov
add
add
rolb
push
repz
cmp
add
add
std
push
add
xor
cli
ljmp
stc
mov
add
xor
push
cmp
jnp
add
int
cmp
mov
fcomp
jo
cmp
sub
jmp
add
push
in
cmc
push
add
addl
mov
pop
addb
cmp
jp
xor
cmpsb
add
call
or
int
push
add
add
add
add
inc
bound
mov
sahf
cmp
mov
addb
mov
add
jp
mov
sub
push
add
add
jg
pushf
mov
rolb
dec
inc
add
inc
add
popf
xchg
stos
sbb
add
add
jge
jbe
insb
ja
add
leave
sbb
popf
inc
add
sub
add
call
pushf
scas
rolb
inc
cmp
mov
out
add
pop
push
add
ret
fcomi
push
lea
jo
adc
xor
sbb
cmp
add
scas
jb
xchg
popa
add
xchg
loope
add
add
add
mov
fstps
or
pop
mov
push
dec
cmpsb
add
add
enter
shr
mov
inc
add
xchg
mov
add
movsb
add
sbb
pop
mov
mov
push
xchg
inc
add
sub
add
test
add
add
jnp
cli
fistpll
jns
add
add
cmpsb
add
add
sbb
mov
hlt
add
add
mov
sbb
add
fiadds
mov
add
adc
add
add
adc
push
adc
daa
adc
movsb
add
add
subl
nop
add
mov
dec
jge
add
add
fwait
ds
addb
add
pop
and
mov
cltd
mov
sub
nop
add
push
les
aam
in
push
add
outsb
mov
data16
in
ljmp
fisttps
push
inc
add
insb
lret
and
mov
xor
pop
sbb
dec
mov
cmp
xor
fistps
clc
cmpps
out
cltd
and
pop
in
fnstenv
add
sub
add
add
pop
adc
push
es
xor
xchg
dec
addb
je
scas
cmpsb
add
push
add
mov
addb
into
testb
add
and
inc
jl
insb
ficompl
mov
imul
push
add
insl
dec
xchg
cmpsl
imul
popf
or
add
clc
jnp
sub
add
jle
add
xor
mov
lret
fwait
jg
bts
add
push
add
mov
add
les
lcall
pop
push
dec
push
add
and
push
movsl
cli
add
add
add
add
inc
pop
mov
pop
mov
popf
neg
lret
ljmp
sbb
add
adc
push
add
sbb
add
fildll
ljmp
mov
push
popf
ret
cmpsb
add
lea
rolb
pop
cmpsb
add
stos
mov
outsl
je
cmp
push
add
dec
out
movsb
add
lds
and
add
mov
xor
xchg
add
call
or
dec
test
jle
add
xchg
add
adc
xchg
mov
add
mov
dec
xchg
movsb
add
jge
adc
or
aam
adc
sub
scas
xchg
push
sti
dec
sbb
pusha
add
mov
bound
mov
add
fcmovnbe
sub
add
add
out
imul
add
cmc
mov
add
add
in
popl
mov
push
add
push
add
push
insb
lret
mov
add
push
add
mov
adc
add
dec
arpl
sub
cmc
fcmove
and
cmp
scas
dec
adc
cmpsb
add
pop
adc
outsl
jne
lahf
cli
push
add
add
pushl
movb
add
aaa
repnz
fcomip
add
aad
inc
add
cmp
fisubl
add
cmp
add
adc
int3
cmp
add
xchg
inc
xchg
mov
add
add
add
mov
int3
dec
in
stc
add
test
outsb
in
cmp
daa
push
add
in
ficomps
repz
push
inc
ljmp
mov
mov
add
add
xchg
pop
pop
stos
cmpsb
add
push
add
mov
dec
xor
cmp
add
out
sbb
push
add
mov
add
rolb
pop
andl
sbb
rolb
add
ffreep
add
add
add
mov
lret
lods
movb
jb
pop
int3
xchg
jl
jl
rol
dec
push
adc
iret
jbe
add
ret
adc
es
add
add
sti
mov
dec
fistps
add
lea
outsl
xchg
add
add
nop
add
stos
and
inc
add
add
mov
and
xor
jne
testb
xchg
sbb
xchg
add
addb
je
mov
add
add
movb
shr
dec
dec
outsb
in
test
mov
shll
add
mov
jns
imul
int3
mov
jae
add
enter
in
xor
sbb
add
pushf
lods
jle
add
fbld
pop
inc
add
outsb
xchg
add
mov
add
test
add
outsb
sub
sti
inc
sbb
lock
std
fnstcw
jno
or
add
and
mov
mov
leave
test
add
cmp
outsb
mov
rolb
ds
add
in
xchg
insb
cmpsb
add
jle
popa
add
into
cmp
add
repz
mov
push
add
add
adc
jne
add
sub
cmp
mov
dec
xor
add
add
jb
sbb
mov
addb
add
add
rcll
inc
cmp
mov
adc
xchg
jo
cs
add
add
addb
inc
ficoms
test
add
stos
adc
fisttpll
sbb
add
scas
xor
and
inc
outsl
pop
lods
fmuls
mov
addr16
add
or
fbld
xchg
push
add
jmp
xor
scas
pop
je
xlat
scas
rcrl
std
rolb
jp
add
xor
and
mov
mov
inc
add
cmp
dec
pusha
add
add
cwtl
std
daa
and
movb
and
mov
pop
fstpl
add
push
add
jbe
pop
sarl
inc
add
push
add
add
cmp
cld
iret
mov
mov
add
gs
push
add
add
add
bound
mov
sbb
ja
or
mov
jo
in
testb
jns
add
mov
sub
pop
cmp
add
add
mov
out
mov
jecxz
mov
ret
lods
mov
sub
cmp
add
mov
add
sahf
addb
dec
add
add
add
add
add
insb
mov
xchg
jl
add
mov
imul
pop
cli
mov
add
movb
pop
jno
pop
mov
add
mov
mov
add
and
mov
ds
clc
inc
add
push
pop
xorl
out
mov
addb
jle
or
sbbl
shll
jae
das
pop
pusha
add
testb
inc
dec
mov
sbb
and
ss
add
push
add
out
pushf
sub
jl
ret
arpl
cmpsb
add
mov
add
add
cld
in
out
mov
add
mov
ds
shrl
imul
add
add
stc
adcl
add
pop
mov
xor
fisttpll
adc
xchg
out
xlat
shl
add
out
add
or
scas
or
mov
stc
mov
add
aam
add
xlat
xor
arpl
adc
pop
sbb
ljmp
lods
push
add
add
mov
outsl
in
cmp
testb
sub
add
enter
cmp
sahf
addb
add
sbb
add
add
mov
pusha
add
add
add
cmpsl
fcmove
fcom
daa
nop
add
imull
add
sbb
adcl
scas
inc
cld
xor
xchg
add
mov
outsb
loop
lea
push
add
pop
mov
mov
add
bound
mov
push
add
add
adc
testb
mov
mov
in
push
pop
mov
add
ficoml
outsl
sub
pop
les
popf
xor
pop
xor
cli
ret
inc
add
xor
xchg
add
mov
add
fnstcw
mov
scas
cld
pushf
jo
sbb
lcall
add
das
pop
pop
lret
cmp
loopne
rorl
imul
dec
cld
mov
addb
xor
and
mov
jle
add
mov
and
add
cli
aam
lahf
aas
iret
xchg
add
xor
inc
jle
lods
or
push
jb
jl,pt
mov
mov
add
ds
pusha
add
pop
fcomps
in
js
cmp
add
mov
int
sub
add
lea
fildl
mov
jp
or
adc
sub
jno
cmp
add
add
fldcw
sar
in
sbb
add
or
mov
int
push
es
test
mov
aam
ret
mov
into
xlat
int
add
aam
out
push
push
or
add
insl
cmp
or
add
add
aaa
je
cmc
pop
mov
sbbl
pop
test
add
test
sub
add
lods
cs
add
jmp
add
mov
lock
cmp
iret
stc
movl
jns
or
mov
outsb
lcall
adc
pop
dec
mov
rolb
push
add
inc
add
sub
pop
pop
into
mov
jl
dec
mov
and
aad
scas
loopne
fmull
sarl
xlat
sub
push
add
add
out
mov
enter
sbb
mov
add
lret
jmp
icebp
or
add
jno
mov
push
add
sahf
or
lds
clc
add
ds
cwtl
fmuls
rolb
leave
loopne
dec
sbb
int
add
gs
enter
add
pushf
mov
mov
mov
les
test
or
add
les
bound
mov
daa
hlt
add
pop
xchg
add
mov
adc
mov
xlat
inc
in
out
dec
pusha
add
xchg
cwtl
insl
jo
and
mov
add
lea
jmp
gs
inc
add
mov
pop
cmp
inc
add
mov
xor
or
jmp
in
mov
mov
add
lret
repnz
out
bound
mov
pusha
add
lret
mov
out
jmp
pushf
inc
add
insb
sbb
jno
dec
sbb
std
mov
mov
add
add
daa
mov
push
addl
mov
xlat
aaa
mov
inc
add
add
mov
dec
xchg
add
or
mov
add
iret
dec
out
mov
inc
add
movsb
add
push
add
out
aas
mov
push
lcall
add
mov
add
mov
ljmp
daa
add
pop
mov
jge
add
cmp
add
add
xchg
add
add
add
lcall
sub
xlat
dec
fisubrs
popl
mov
add
push
dec
sub
add
scas
mov
pop
insl
cwtl
cmp
in
dec
repz
adc
mov
jne
sub
sub
mov
add
add
add
dec
movsb
add
push
add
scas
adc
and
dec
sbb
add
add
sub
mov
ljmp
std
jae
mov
sub
add
and
test
pop
mov
add
add
sub
cmp
sub
mov
int
sbb
xchg
cmp
sti
adc
add
jl
add
mov
jle
add
add
rolb
arpl
add
add
push
add
add
jecxz
xchg
scas
les
add
mov
mov
jmp
in
lret
aaa
xchg
push
mov
add
ret
pop
ss
cmp
aas
mov
push
add
addb
add
cmp
rorl
mov
es
jbe
and
daa
sub
aas
cmp
push
add
inc
add
cld
cmp
jge
rolb
ret
sbb
adc
adc
push
add
insl
sub
in
xor
sub
add
add
cltd
test
test
add
add
add
lcall
adc
jle
add
or
or
dec
mov
add
add
mov
mov
add
xchg
mov
add
pop
adc
mov
popl
adc
hlt
add
sub
ret
testb
pop
ljmp
and
sub
repz
xlat
call
add
add
and
fwait
in
es
ficoms
or
add
inc
and
mov
xchg
add
jne
and
jl
dec
and
mov
add
add
add
mov
clc
lcall
add
cmp
dec
pop
mov
xor
xchg
testb
addb
and
mov
jecxz
add
cmp
add
add
push
cs
add
inc
insb
daa
les
dec
mov
cs
mov
add
add
add
cwtl
jae
jns
aas
sti
pop
call
mov
xchg
mov
fld
adc
xchg
add
leave
dec
add
add
add
add
clc
out
and
lret
mov
mov
add
add
test
add
addr16
mov
divl
addl
add
add
add
add
aad
cmpsb
add
add
sub
add
add
push
mov
inc
sub
add
sbbl
int
add
and
mov
rolb
cmpsb
add
and
pop
push
add
sub
loop
sbb
add
movb
adc
and
les
jecxz
mov
in
fcoms
add
mov
inc
jo
xor
add
cmp
xor
adc
dec
adc
movsl
add
mov
lcall
jns
mov
xor
add
sbb
push
add
mov
sub
es
add
mov
mov
mov
push
popf
mov
dec
loop
fsubrs
aas
outsb
jno
add
sub
add
add
loopne
mov
shll
add
sbb
push
sbb
push
dec
jle
insb
and
mov
add
bound
mov
sti
adc
pop
lret
lea
mov
inc
loop
cmp
add
and
add
add
xchg
icebp
or
bound
mov
loopne
out
and
addb
jp
cmpsb
add
mov
add
jp
adcl
and
mov
es
cld
dec
lods
imul
out
pop
int
and
mov
add
add
cmpsl
into
inc
add
sbb
add
mov
xlat
push
add
in
add
mov
push
sbb
and
repnz
and
movb
pop
xor
push
xchg
add
mov
push
daa
out
and
add
rolb
daa
jnp
adc
pushf
lret
mov
fildll
xchg
and
add
add
les
or
add
jl
add
mov
mov
push
add
add
iret
add
xor
push
jae
test
fnstcw
sbb
test
add
adc
jo
ljmp
rcll
pop
pop
testb
mov
cmp
dec
nop
add
sub
add
fldl
add
mov
rolb
call
cmp
sti
xchg
add
pop
stos
mov
xor
jecxz
xchg
add
pop
ss
add
mov
add
repnz
sbb
iret
repnz
push
xchg
add
ret
add
insl
clc
inc
push
add
fcoms
add
insb
bound
mov
mov
inc
xor
add
lret
ret
rcrl
add
add
lock
add
bound
mov
add
clc
sbb
sub
or
test
xchg
add
mov
js
add
add
mov
pop
aas
cs
push
add
dec
mov
hlt
add
add
inc
add
inc
add
inc
add
add
cmpsb
add
pop
fwait
jns
into
fwait
hlt
add
dec
int3
loope
or
gs
pushf
cmc
fdivp
add
je
cli
mov
add
cmp
in
push
std
or
into
fmuls
test
mov
add
add
mov
push
add
mov
je
push
mov
xlat
cmpsl
out
push
push
add
jp
ret
dec
sub
insl
mov
add
lea
add
sbb
outsl
cltd
fistl
out
push
add
add
mov
out
pop
addr16
add
push
add
adc
xchg
add
cmp
imul
pushf
and
mov
add
test
iret
decb
jmp
xor
out
scas
fsubr
aad
push
add
cmp
nop
add
sbb
adc
cmpsl
outsb
ffree
add
mov
fidivs
jbe
or
add
aaa
push
cmp
mov
mov
add
add
or
insb
xchg
stos
sbb
pop
add
mov
sub
and
repz
pop
sahf
in
rorl
add
cmpl
insb
inc
add
push
inc
stos
or
fwait
push
inc
xor
lcall
jns
aas
scas
and
adc
adc
add
add
push
and
mov
cli
iret
fwait
int
insl
dec
add
fsubs
dec
pop
lock
sbb
rolb
mov
add
xchg
cmpsl
lcall
jle
add
cld
ljmp
add
add
push
dec
roll
mov
cmp
aad
add
enter
xorl
mov
push
add
data16
add
mov
mov
lods
and
arpl
adc
mov
mov
or
add
frstor
add
adc
mov
and
or
sbb
lds
add
jns
xchg
add
mov
dec
bound
mov
pop
xchg
cmpsb
add
add
add
add
loopne
pusha
add
addl
cmpsl
inc
add
mov
enter
fldt
hlt
add
xchg
add
mov
stos
sahf
fimuls
add
pop
add
lea
pop
das
aaa
inc
dec
fidivrs
movsb
add
add
inc
add
push
add
iret
cmp
std
test
out
addb
leave
dec
cli
push
xor
loop
insb
ds
or
inc
pop
inc
dec
and
push
add
pop
pop
pop
testb
ja
jae
fldcw
add
pop
hlt
add
addb
add
xor
or
mov
xchg
add
sub
enter
mov
mull
add
ficomps
mov
lods
loopne
cmp
add
xchg
mov
mov
dec
mov
push
rolb
adc
adc
dec
outsb
cmp
add
cmp
add
add
mov
add
icebp
movsl
fsub
add
ret
xchg
adc
and
imul
int3
dec
mov
add
add
push
leave
dec
scas
pusha
add
adc
cld
fistpll
fldenv
push
add
add
insl
ja
imul
mov
cmp
xor
je
or
add
mov
add
add
mov
add
jge
push
call
into
les
les
test
mov
mov
add
outsl
push
add
xchg
mov
adc
mov
add
outsl
xor
fisttps
sub
aad
loop
lds
cmp
bound
mov
jnp
add
pop
rolb
add
push
sbb
mov
enter
add
add
cwtl
movb
mov
movsl
inc
add
add
pop
inc
add
cmp
adc
mov
stc
pop
loop
pushf
out
popa
seto
fcomi
dec
dec
mov
lret
mov
loopne
hlt
add
test
mov
adc
or
inc
add
cmpsb
add
movsb
add
lods
pop
pop
xchg
add
add
nop
add
pusha
add
or
add
aam
push
mov
push
add
testb
add
aam
mov
je
bound
mov
out
stc
les
icebp
dec
ret
roll
lret
outsl
ficomps
add
ljmp
add
das
sahf
pop
inc
gs
add
add
mov
mov
dec
repz
insl
push
pusha
add
jecxz
push
add
test
jmp
mov
in
dec
jns
cmp
mov
add
cs
adc
dec
inc
cmpl
lret
mov
in
inc
add
cmp
mov
inc
add
add
lahf
movb
add
push
add
sbb
add
add
lds
add
dec
xchg
add
out
add
adc
jp
add
in
rolb
cmp
dec
xor
pop
imul
add
add
fisubl
xchg
test
cs
mov
out
leave
pop
arpl
sbb
or
jo
ret
pusha
add
adc
into
sbb
aaa
fists
aas
jb
lret
dec
dec
xchg
mov
mov
xor
out
ret
std
pop
test
mov
cmp
cmp
loop
div
adc
lret
jne
aaa
adc
lahf
and
mov
add
data16
add
add
mov
leave
sub
fimuls
stos
and
mov
add
outsl
xchg
xor
cmp
add
js
rolb
and
lods
into
jbe
fwait
or
dec
mov
add
cmpsl
push
jge
inc
add
add
add
add
mov
mov
add
add
cltd
dec
mov
les
stc
les
and
mov
stc
or
add
repnz
mov
add
or
add
add
mov
mov
mov
in
ret
sbb
out
ret
cmp
pop
lret
mov
add
jp
scas
imul
add
jne
add
rolb
nop
add
mov
or
cmc
mov
std
int3
rolb
mov
add
add
add
add
and
add
pop
test
fwait
cmc
outsb
call
das
dec
jns
imul
xchg
add
aad
cmc
dec
dec
inc
add
dec
int3
adc
xor
mov
add
pop
cmp
inc
fcomps
inc
add
mov
add
ja
xchg
cmp
movsl
mov
and
mov
dec
jge
add
ret
ficoms
bound
mov
jne
inc
data16
in
inc
add
movb
add
scas
rolb
pop
mov
add
fimull
pop
in
inc
rolb
push
pop
pop
xor
xchg
add
add
test
mov
cmp
addb
clc
sbb
add
inc
add
add
jns
pop
movsb
add
add
roll
aad
mov
cmpsl
jb
lods
inc
dec
or
add
mov
daa
movb
add
add
inc
add
add
jmp
add
inc
add
jae
add
add
aaa
sub
rolb
ds
or
fisttpll
rolb
test
push
outsb
cmp
add
or
into
lahf
loop
adcl
xchg
test
add
or
dec
xchg
jge
pop
popa
add
xor
cld
push
add
xor
jl
scas
push
add
cld
aaa
pop
aad
add
hlt
add
cwtl
push
add
cltd
sarl
pop
mov
mov
add
scas
jnp
jo
add
add
add
arpl
xchg
lret
xchg
add
add
add
dec
xchg
mov
mov
xchg
mov
mov
mov
add
stc
ret
fwait
dec
xchg
sub
mov
add
add
cmc
and
lcall
mov
mov
add
add
ret
xor
insb
pop
imul
sbb
ficomps
or
add
mov
clc
jbe
xchg
out
push
cmp
hlt
add
sbb
add
sbb
sbb
imul
add
push
rcll
add
add
add
mov
cmc
pop
or
push
add
cmp
mov
add
jnp
pop
jecxz
add
add
push
js
stos
rolb
int
nop
add
jns
xor
xor
push
add
mov
clc
and
mov
aad
xor
stos
fimull
in
cld
cwtl
lcall
lea
inc
add
add
sbb
fmulp
lds
scas
mull
jl
add
lock
add
add
push
add
add
mov
outsl
movb
sbb
mov
add
test
lock
inc
add
mov
xor
mov
push
add
add
add
xchg
inc
pop
testb
out
aaa
inc
add
add
pop
jg
insl
adc
pop
in
dec
scas
or
shrl
adc
adc
aaa
adc
mov
pop
cmp
add
out
fisubs
and
ret
dec
fcmovnu
mov
adc
nop
add
mov
lret
pushf
lret
clc
and
mov
mov
mov
dec
pop
mov
add
mov
add
pushf
int
data16
sbb
cwtl
loope
push
add
pop
mov
xchg
movb
imul
add
adcl
sub
in
add
add
mov
stos
inc
add
adc
mov
add
add
xor
mov
mov
cmp
add
cmp
mov
fnstenv
add
inc
mov
or
pop
repz
fldenv
add
add
mov
mov
leave
test
add
add
into
add
sbb
sbb
and
test
add
icebp
pop
insl
fimuls
mov
cld
dec
xlat
stos
xchg
add
jb
push
add
movsl
cmp
sbb
jne
push
add
add
outsl
outsb
push
add
testb
das
sar
jle
add
cwtl
pop
outsb
jmp
add
outsb
outsb
fwait
test
addl
mov
rolb
scas
lds
loopne
or
cmpsb
add
add
cmp
add
mov
out
fs
add
mov
mov
push
add
mov
jmp
mov
add
add
sub
or
or
cs
mov
mov
add
add
add
add
cwtl
cmp
je
stc
dec
xchg
jle
add
add
sub
mov
xor
pop
sub
xchg
add
and
add
in
add
mov
btr
push
pop
dec
aas
sub
lods
arpl
add
push
add
add
add
jmp
mov
pop
xchg
push
and
fstpl
add
aaa
lods
push
add
push
add
dec
decb
jae
movsb
add
testb
xor
add
adc
rolb
sub
add
mov
push
add
dec
gs
pop
mov
xor
cltd
push
add
add
movsb
add
add
insl
outsl
lret
push
aam
repnz
addb
lret
xor
popf
cs
loop
in
icebp
mov
adc
cmpsl
testb
xchg
jne
sub
mov
push
pop
ret
add
mov
mov
sub
int
jnp
js
sbb
push
insl
mov
mov
add
cltd
jbe
inc
add
jae
lcall
sbb
add
jne
mov
lods
jmp
add
or
std
lret
xor
mov
add
add
or
add
push
cmc
cmp
sbb
lock
add
mov
inc
add
inc
add
add
add
ret
jle
push
add
mov
xchg
add
add
xchg
mov
push
add
add
add
rolb
sbb
fnstcw
fwait
and
add
add
mov
int3
rolb
add
adc
xor
mov
push
mov
test
cmpsl
xor
mov
add
fdivs
add
rolb
sahf
outsl
inc
sbb
fwait
adc
data16
mov
push
add
add
xchg
add
movsb
add
mov
xor
mov
add
mov
mov
lcall
mov
or
jmp
or
pusha
add
mov
lcall
dec
add
cmpsb
add
jecxz
pop
mov
incl
insb
out
shrl
jmp
mov
add
push
add
sub
add
adc
out
pop
xchg
mov
mov
add
add
or
add
add
inc
sub
mov
jmp
testb
scas
leave
ds
xor
xchg
mov
add
or
inc
add
sbb
cwtl
sub
push
add
sub
add
jnp
jmp
add
mov
push
jle
mov
xorl
je
push
mov
mov
xor
mov
loop
jmp
inc
add
dec
sub
add
add
mov
cmpsb
add
sbb
popa
test
add
and
push
into
ja
add
stos
dec
jge
fadds
mov
add
fdivs
add
mov
jae
arpl
outsb
in
inc
add
jnp
jg
scas
jecxz
sahf
mov
add
in
int3
roll
jnp
mov
dec
int3
addb
push
loope
add
sahf
mov
add
jmp
test
jne
jecxz
fiadds
add
push
adc
or
stc
pusha
add
xchg
in
das
leave
mov
jmp
andl
pop
and
push
jg
jg
pusha
add
outsl
sahf
sub
aam
test
sbb
ja
ljmp
add
cmp
push
add
mov
add
sbb
inc
cmpsb
add
popf
arpl
movsb
add
wrmsr
add
negl
push
add
mov
add
add
inc
add
push
add
lock
add
mov
dec
cli
loop
les
icebp
testl
out
dec
iret
cmpl
add
mov
das
je
into
mov
inc
mov
lcall
cli
rorl
add
add
cmpsb
add
add
cmpl
jns
add
add
loope
add
mov
cli
mov
sub
add
add
daa
mov
add
or
das
jle
addb
or
and
mov
fldcw
movb
fadds
add
mov
rcrl
add
mov
add
js
dec
jg
xlat
popf
mov
ret
xchg
cmp
int
test
mov
fimuls
insb
jno
jge
xchg
push
add
loopne
mov
add
je
out
imul
cmpsl
repnz
aaa
data16
fcmovnu
fiadds
pop
les
xor
fiadds
add
repnz
arpl
add
add
loope
add
cmpsl
loop
push
js
push
add
test
and
sbb
and
add
inc
xor
xchg
repnz
popf
pop
mov
data16
jo
inc
add
les
enter
dec
rolb
mov
add
leave
adc
push
add
hlt
add
jb
fsubp
add
outsl
loop
pop
testb
jb
test
test
push
add
mov
mov
xor
xchg
add
add
add
ror
mov
negl
add
xchg
jg
sbb
adc
std
in
jg
xchg
dec
movsl
decb
movsb
add
filds
jmp
add
add
add
mov
iret
fnstsw
or
inc
add
add
sub
bound
mov
add
sbb
add
jb
cld
add
outsb
js
ljmp
ds
mov
or
js
push
add
repz
test
stos
movsl
mov
add
mov
pop
cwtl
mov
inc
add
xor
loope
out
sbb
mov
add
add
xchg
popf
mov
cmp
push
add
mov
cli
scas
jne
inc
nop
add
dec
adc
mov
add
add
pop
sbb
enter
push
xor
js
cmp
add
mov
popf
outsl
xorl
add
mov
clc
adc
sub
add
sub
rcrl
mov
sbb
push
add
or
or
in
nop
add
mov
insl
sub
addr16
add
inc
add
imul
adc
dec
test
add
jge
movsb
add
fbld
mov
in
jge
add
xlat
push
add
inc
add
movb
jp
data16
aam
adc
and
mov
add
enter
push
aad
add
add
mov
add
inc
stos
inc
add
movsl
push
add
out
iret
rolb
dec
and
movb
mov
leave
jmp
add
jo
rcll
inc
add
in
mov
fsts
xchg
add
add
add
mov
add
leave
out
dec
sub
testb
pop
mov
jns
add
xchg
js
mov
cmp
nop
add
mov
add
in
lods
nop
add
mov
add
or
ss
loop
or
pop
outsl
loope
leave
stos
data16
test
rolb
adcl
mov
mov
int3
insb
insb
pop
push
jle
add
mov
jno
std
xor
pusha
add
pop
or
cli
push
add
add
roll
mov
add
sti
cmp
xchg
add
out
mov
test
mov
hlt
add
mov
dec
inc
add
jae
push
inc
add
inc
cmp
add
xor
ljmp
ret
movb
test
dec
inc
add
mov
scas
imul
mov
scas
cmp
mov
mov
add
test
jne
add
and
jg
cmp
adc
add
cmp
add
movsb
add
dec
push
mov
pop
inc
push
mov
push
add
add
push
add
data16
pop
push
add
sub
cmp
add
add
mov
jbe
test
ljmp
std
jae
cli
movsl
inc
std
dec
ret
pop
jp
and
mov
ror
cld
fisttpll
cmp
imul
cmp
xchg
add
xor
sbb
add
das
daa
ss
mov
xchg
add
pop
pop
data16
shrl
cmpsb
add
add
add
jbe
and
add
add
add
add
mov
jae
aaa
clc
push
add
test
add
mov
inc
add
xor
jle
sbb
or
add
mov
lds
add
cmp
mov
add
mov
add
add
pop
mov
add
add
cmpsb
add
test
mov
sarl
add
dec
aaa
in
scas
pop
out
int
shll
adc
jp
add
cltd
jmp
add
add
add
add
mov
adc
cltd
push
or
pop
xchg
push
stc
cmp
push
add
stos
aaa
jge
fstp
or
mov
out
imul
xor
clc
lret
inc
out
ret
and
fsubrs
cmp
add
add
adc
xor
or
add
into
ja
add
in
imul
add
cmp
pop
scas
test
jno
mov
push
push
inc
add
addb
out
aad
stos
adc
lods
pop
cmpl
cmp
lcall
fldt
mov
lret
inc
add
jb
fsubs
int3
xor
imul
es
outsb
and
mov
add
mov
ljmp
jmp
dec
and
les
jg
add
adc
filds
mov
mov
add
push
add
jle
std
inc
add
add
mov
mov
jge
jnp
in
fsubrs
add
pop
pop
adc
add
mov
mov
js
lock
add
add
mov
mov
jnp
mov
imul
in
in
pop
cmp
add
rcrl
add
xor
jb
scas
mov
mov
add
inc
fcoms
add
jge
add
add
add
fiaddl
lret
insb
fcompl
mov
add
add
xor
cmp
nop
add
push
add
js
or
mov
stos
xorl
cmp
mov
add
add
mov
shll
push
add
inc
sbb
insb
out
rolb
loopne
xlat
mov
xchg
add
test
add
rolb
or
mov
and
int3
jne
add
mov
or
add
testb
inc
add
std
cmp
add
stos
or
and
fsts
add
add
leave
adc
xlat
fdivr
mov
rol
pop
sub
xor
dec
stos
and
add
add
cmpsb
add
add
or
bound
mov
jge
movsb
add
add
push
mov
push
add
add
add
add
add
in
fldt
sbb
inc
add
repnz
mov
add
out
cld
punpcklwd
add
movsl
and
mov
add
add
mov
jae
dec
sub
mov
add
addb
cmpsb
add
pop
mov
push
sbb
jno
cs
or
add
ja
jmp
xchg
mov
testb
push
add
int
add
or
insl
mov
pop
fmul
jmp
mov
mov
loopne
mov
xchg
add
mov
fimuls
push
add
add
pop
cmp
xchg
or
sbb
jb
jbe
sti
cmp
add
nop
add
add
lock
dec
xchg
add
pusha
add
add
das
mov
xlat
scas
and
xchg
pusha
add
pop
add
push
sbb
rolb
add
add
mov
mov
and
push
add
add
add
jb
mull
test
mov
dec
lret
add
mov
xor
bound
mov
xor
mov
int
push
aam
dec
addr16
add
mov
cmpl
inc
add
inc
add
sbb
jle
mov
nop
add
add
mov
lcall
cld
movsl
dec
inc
add
and
mov
add
std
pop
cmp
add
add
add
jbe
inc
add
sub
add
add
icebp
ret
out
add
sub
rorl
cli
and
mov
std
jge
add
testl
xchg
sub
ds
ret
add
cmc
lcall
test
mov
xchg
pop
inc
add
add
and
lods
lods
mov
lea
dec
or
add
les
sub
std
pop
aam
mov
add
add
addb
sbb
add
add
mov
movsb
add
fwait
xor
movsl
and
test
aam
lea
lock
mov
mov
mov
pop
mov
in
inc
add
lods
and
mov
xchg
loop
fcoms
dec
lods
add
je
pop
add
mov
insl
ficoml
dec
sbb
add
mov
rolb
xor
mov
add
fcmovnb
adcl
repnz
movsb
add
add
jmp
sub
push
sub
inc
add
add
xlat
mov
stc
or
dec
call
movb
mov
cld
jmp
add
mov
rcrl
and
pop
and
jl
mov
add
xchg
fldcw
inc
pop
mov
lahf
push
add
cmpsl
cmpsl
lods
mov
add
sbb
xchg
and
mov
push
add
jmp
add
add
inc
add
add
add
and
into
imull
call
movsl
das
jno
add
aad
add
hlt
add
add
add
imul
fiaddl
add
sbb
cltd
sub
iret
sub
pop
push
out
or
mov
push
bound
mov
or
and
mov
add
push
add
dec
push
fnstcw
icebp
xchg
add
data16
testb
rolb
push
add
add
imul
dec
orl
loopne
dec
dec
or
repz
stc
inc
fistps
leave
sub
add
add
fwait
mov
es
add
in
stos
or
lret
add
pop
dec
cwtl
fnstcw
xchg
lock
add
sahf
test
add
add
jns
add
mov
add
jle
add
push
mov
xchg
add
cwtl
add
out
movsb
add
and
mov
pop
cmpsb
add
add
jg
movsb
add
push
add
or
adc
rorl
test
pop
xchg
aaa
sarl
add
aaa
rolb
fsubrl
sbb
ljmp
add
stc
inc
add
testb
scas
lods
sub
and
and
dec
leave
pop
pop
decb
int3
jg
lods
popa
movsb
add
rolb
jb
xchg
xchg
aam
push
push
leave
addb
pop
xchg
mov
add
add
push
cld
adc
popf
jns
add
mov
mov
add
adc
ret
add
mov
add
lcall
add
sbb
mov
inc
lcall
scas
jne
add
out
push
ja
enter
add
mov
arpl
mov
mov
mov
adc
jle,pt
add
cmpl
mov
sahf
push
add
add
daa
cmp
mov
jb
pushf
idivl
mov
mov
add
add
or
add
idivl
push
add
inc
sbb
push
add
dec
data16
lret
test
aas
xchg
cmpsb
add
bound
mov
jno
movb
jnp
sub
or
pushf
pop
sbb
add
jo
scas
cmpsl
push
add
add
add
ja
add
mov
inc
movb
xchg
add
movsl
pop
cli
adc
sub
push
inc
inc
add
lret
xor
xchg
pop
jle
jp
jmp
add
jo
mov
outsb
sub
dec
mov
cld
andl
shll
imul
dec
ret
inc
push
pop
rorl
mov
add
add
and
popf
dec
mov
add
pop
cmc
xchg
pop
call
mov
shl
add
stos
stos
rolb
fsub
movb
add
enter
add
aam
popf
push
add
lret
sub
add
add
jno
mov
out
out
add
pop
mov
mov
pop
sahf
and
mov
fisubs
call
dec
sub
addb
bound
mov
add
add
lock
add
movsb
add
ficoms
aad
add
add
je
insl
pop
nop
add
add
mov
mov
dec
xchg
pop
leave
scas
or
out
or
add
jno
inc
add
lahf
lcall
test
add
gs
add
jmp
cld
add
add
cmp
cli
iret
out
push
add
hlt
add
pop
jge
xor
sbb
popl
add
cmp
add
cli
ret
add
jbe
and
addl
or
rolb
cmp
sbb
lcall
push
inc
rorl
xchg
mov
out
jb,pn
call
mov
xor
sbb
sbb
sub
addb
xchg
iret
out
mov
aas
lds
sbb
das
sti
lret
xchg
pushf
rolb
sub
fcmovnb
and
add
add
aaa
data16
xchg
add
add
add
add
rcl
and
sbb
add
mov
pusha
add
rcrl
adc
hlt
add
or
inc
sbb
push
add
add
in
adc
xchg
sti
cli
jg
cmp
cmp
icebp
push
iret
inc
mov
out
out
push
pushf
or
adcl
mov
cmpsb
add
je
xchg
add
pop
mov
ret
lcall
cld
jno
add
add
push
add
pop
push
add
add
push
daa
jb
mov
jg
cmpsb
add
push
add
add
push
sbb
add
add
fdivr
sub
mov
lcall
rolb
popa
add
testb
jno
mov
add
mov
sub
lcall
adc
add
dec
fcomps
push
add
cmpsl
ficoms
add
add
dec
sub
xchg
add
add
aaa
cs
mov
std
stos
push
loopne
xchg
sbb
cld
pop
fiaddl
paddq
clc
loope
xor
jnp
test
jmp
add
or
ret
aad
or
jmp
test
mov
add
fsubrs
pop
xchg
push
inc
add
mov
aam
js
out
mov
adc
fsubrl
add
push
add
jno
rolb
jmp
loopne
pop
dec
pusha
add
rolb
add
sub
roll
lcall
add
imul
adc
sbb
add
add
test
out
add
mov
pushf
fldz
outsb
rcll
adc
addb
or
add
cmpl
outsl
cmp
mov
outsl
mov
adc
mov
xor
or
shld
add
add
xchg
inc
push
xor
repz
add
jmp
fistpl
rolb
pop
mov
jge
mov
add
mov
sahf
add
mov
addb
push
add
add
adc
rcrl
add
lock
popf
mov
jns
stos
xor
add
and
mov
add
add
fwait
mov
mov
add
sbb
fcoms
ret
movb
fstpl
fcmovnb
add
aad
push
add
mov
mov
xchg
add
mov
add
stos
mov
add
mov
add
add
add
adc
jae
mov
int3
xchg
add
add
inc
add
or
rolb
inc
ds
mov
cmp
loopne
loopne
lcall
or
ffree
add
pop
sub
add
imul
add
xchg
out
or
add
xor
lcall
xchg
lods
nop
add
and
imul
adc
popa
in
int3
std
sahf
out
mov
push
hlt
add
mov
inc
pop
add
add
std
jecxz
rolb
test
add
rolb
mov
mov
sbb
add
jle
cltd
movsl
fs
in
gs
frstor
in
nop
add
imul
mov
jae
inc
pop
xor
pop
sub
add
add
lcall
scas
stc
inc
add
add
add
xchg
add
popa
sub
call
mov
xor
cmp
xchg
add
add
mov
mov
push
add
adc
cmpsl
inc
push
inc
add
comiss
test
add
pop
xor
out
adc
in
lods
arpl
jmp
and
add
stos
outsl
gs
jae
hlt
add
add
add
add
mov
add
sub
cmpsb
add
aam
xchg
fisubrs
insb
std
mov
add
ret
out
add
mov
shl
add
jo
cmp
mov
jne
iret
incl
mov
mov
mov
hlt
add
add
add
adc
sub
stc
push
add
xchg
xchg
add
jae
add
cmpsb
add
add
add
add
push
inc
add
cmp
mov
add
add
sbb
imul
loopne
cli
sbb
loop
icebp
xor
fldenv
repnz
std
mov
jbe
jmp
movsl
mov
inc
add
add
jmp
in
xchg
rolb
movb
cmpsb
add
add
fmuls
lods
sbb
dec
sub
add
popa
pop
int3
data16
fdivl
repnz
mov
pop
sub
mov
dec
jns
add
jle
jl
add
add
gs
add
pop
inc
sbb
in
mov
and
xor
in
pop
pop
add
cli
daa
loope,pt
xchg
fwait
sbb
cmp
sbb
mov
loope
je
test
mov
jmp
and
lahf
jns
sti
adc
add
push
add
sti
rorl
add
leave
xchg
jb
mov
add
int
adc
test
add
out
mov
add
mov
add
dec
dec
outsl
cmp
clc
jns
fisubrl
pushf
jnp
xchg
popa
in
sub
cld
std
jl
inc
sbb
sbb
add
shll
add
add
imul
add
mov
add
cmp
cmpsb
add
add
mov
fwait
mov
mov
inc
add
scas
xchg
mov
subl
addr16
cmp
cld
jmp
add
add
lret
jg
pop
jne
add
adc
scas
sbb
add
and
mov
push
add
add
add
cltd
mov
lahf
cmc
xchg
cmp
add
lea
scas
xor
mov
add
add
add
loop
push
add
cmp
rolb
mov
addb
pop
insl
jmp
pop
mov
mov
xor
mov
pop
mov
icebp
jbe
adc
mov
jl
inc
add
add
add
adc
or
dec
mov
add
push
pusha
add
pop
mov
mov
incb
xchg
add
pop
imul
jge
hlt
add
movsb
add
mov
in
mov
lds
testb
loope
mov
lcall
pop
sbb
scas
push
add
jecxz
popa
lds
lods
add
mov
cmpsb
add
std
sbb
push
mov
cli
or
add
scas
inc
les
or
lods
jmp
add
add
outsb
insl
cmpsb
add
inc
stc
ljmp
add
add
add
mov
icebp
test
dec
cs
add
add
and
je
sub
test
add
nop
add
inc
pop
push
pop
popa
mov
or
dec
xor
in
pop
mov
daa
out
sub
mov
fs
iret
xor
lret
je
xor
sub
cltd
outsb
and
mov
pop
and
add
and
insb
imul
jns
insl
fisttpll
xor
inc
add
repnz
push
sbb
sbb
or
add
add
inc
jns
add
add
add
leave
sti
into
cmp
jnp
movsl
add
mov
add
addr16
insl
or
cmp
mov
push
fisttpl
ljmp
add
pop
in
mov
add
xchg
test
lock
in
ds
out
pop
jb
xor
dec
xchg
pop
std
mov
and
add
dec
in
and
leave
jmp
addb
add
call
lock
fsub
jl
sub
adc
push
add
add
mov
outsl
pop
xor
add
adc
pop
aaa
mov
add
cmc
xchg
jae
repnz
add
arpl
gs
add
xchg
xchg
add
stos
ret
and
sub
lods
gs
jo
xchg
stos
in
inc
add
je
lods
jbe
iret
cld
mov
add
stc
mov
jle
les
insl
push
add
add
rcr
mov
sub
add
ljmp
dec
pushf
lret
xor
add
dec
psubd
add
add
jle
mov
add
add
mov
add
imul
jl
add
pextrw
int3
mov
and
add
mov
mov
in
data16
add
test
cli
sbb
mov
pop
add
mov
add
ret
mov
frndint
int
cmp
cli
bound
mov
add
cld
push
add
int
leave
push
data16
out
cmpsb
add
das
out
mov
popf
mov
jo
iret
mov
add
add
aad
nop
add
out
xchg
pusha
add
and
mov
add
add
add
add
addb
add
xor
mov
and
pop
sbb
call
adc
aad
fistpl
and
mov
mov
add
ret
cmp
lds
add
push
add
cmp
mov
jbe
rolb
add
mov
add
aad
dec
sbb
add
add
cmp
js
jge
xor
mov
add
jp
popa
xchg
add
add
add
push
add
add
add
out
push
add
push
push
add
imul
jno
xchg
add
push
scas
sbb
int
add
push
add
ss
in
loopne
mov
add
pop
add
add
in
add
mov
jbe
cli
test
in
mov
sete
test
or
dec
fsts
lods
rolb
mov
adc
cmp
add
mov
cmp
call
insb
dec
pop
mov
sub
ret
add
inc
adc
add
add
pop
cmp
mov
push
adc
fstps
popa
mov
add
scas
mov
lds
test
add
push
add
xor
sahf
out
jmp
add
fcmovbe
lea
lods
cmp
pushl
inc
add
dec
inc
add
adc
sbb
cmc
add
pop
sbb
add
mov
pop
push
add
inc
add
arpl
cmc
testb
std
add
mov
dec
xor
add
rolb
add
add
flds
add
mov
stos
or
stc
insb
imul
outsb
int
add
repz
sbb
add
loop
lcall
mov
jns
fldt
fistpll
jle
add
xchg
add
add
add
xchg
ret
sub
movsb
add
add
mov
test
mov
shr
add
and
and
lret
or
cmp
das
xchg
jp
rolb
add
add
lahf
std
mov
add
je
mov
cli
pop
mov
rcr
arpl
adc
and
mov
insb
add
sbb
or
jmp
cmp
add
dec
mov
pop
jbe
pop
icebp
jae
cli
xor
jg
inc
add
add
add
scas
test
mov
mov
dec
add
jbe
jns
mov
xor
shll
popf
dec
ljmp
jnp
add
and
push
cmp
dec
cld
push
sub
scas
and
xor
xchg
add
sub
stos
mov
add
add
pop
jmp
add
sti
lock
add
lcall
add
pop
xor
addr16
jno
shll
test
imul
inc
xlat
call
add
mov
add
add
fimuls
arpl
add
rorl
fnsave
inc
add
add
xchg
aas
jle
ror
in
xchg
pusha
add
mov
sbb
dec
dec
sti
inc
stc
bound
mov
mov
jmp
adc
push
add
sbb
jns
jl
das
cmp
fs
mov
add
or
add
popa
mov
cmp
xor
add
add
mov
ret
push
ja
xlat
and
mov
xchg
inc
and
lock
add
rolb
cmpsb
add
or
add
sti
xchg
testb
add
mov
adc
lahf
sbb
push
add
add
xor
ret
adc
data16
fwait
movb
fsubrl
mov
inc
add
fmull
inc
add
add
add
push
add
add
rorl
mov
pop
dec
outsb
ret
ds
sbb
sbb
in
cmp
push
add
mov
cld
rolb
mov
xchg
xchg
add
pop
jbe
ljmp
push
dec
imul
add
movsl
mov
push
add
lock
mov
in
add
add
add
push
add
add
cmp
mov
ret
imul
lds
in
sub
and
mov
add
in
in
adc
add
or
add
jno
or
adc
iret
xchg
inc
sti
push
add
add
mov
mov
add
int3
roll
mov
jns
pop
push
add
lcall
lret
sbb
je
std
add
add
add
add
inc
lahf
or
dec
enter
rolb
ret
out
add
addb
jmp
add
sbb
movsl
hlt
add
add
add
add
add
add
fisttpl
jae
xlat
ds
add
add
adc
fcmovnu
lahf
ds
add
mov
dec
mov
clc
repnz
jae
push
add
jo
push
clc
repnz
jae
repnz
xor
push
lds
jnp
mov
sub
cmp
cmp
ret
add
and
push
add
rclb
dec
repnz
add
bound
add
add
add
repnz
jae
insl
add
add
add
pop
leave
push
clc
repnz
jae
js
add
sbb
add
xlat
mov
jne,pn
clc
repnz
jae
add
sub
push
push
mov
xchg
ret
add
add
add
movsl
pop
push
add
insl
rep
clc
repnz
jae
movsb
add
mov
mov
clc
repnz
jae
lock
inc
xchg
clc
repnz
jae
pop
add
imul
icebp
or
add
add
add
add
mov
push
mov
xchg
ret
js
pop
movsb
sub
xchg
fwait
cld
nop
jmp
ss
and
movsbl
rolb
fwait
cld
nop
jmp
loop
push
add
sub
loopne
add
push
add
and
push
mov
xchg
ret
add
or
in
mov
add
clc
repnz
jae
stos
add
mov
jmp
sbb
mov
insl
int
dec
push
clc
repnz
jae
mov
add
push
add
cli
je
clc
repnz
jae
cmpsb
mov
and
repnz
jae
add
dec
add
daa
pop
add
push
mov
xchg
ret
repnz
add
add
movswl
clc
repnz
jae
pop
add
mov
clc
repnz
jae
lcall
in
mov
scas
movzwl
fwait
cld
nop
jmp
add
pop
add
cli
je
clc
repnz
jae
push
sub
and
fwait
cld
nop
jmp
add
movsl
cmpsb
sbb
jae
mov
add
push
sbb
mov
clc
inc
add
add
add
mov
nop
jae
add
sbb
movl
sub
and
add
add
clc
add
add
xabort
nop
jae
add
add
add
out
mov
push
mov
xchg
ret
movl
mov
clc
repnz
jae
movsl
add
add
mov
mov
push
mov
xchg
ret
clc
movsb
pop
add
cli
push
clc
repnz
jae
cmpsb
add
add
daa
cld
and
clc
repnz
jae
add
sbb
add
sbb
repnz
jae
add
add
stos
mov
dec
clc
repnz
jae
loop
and
outsl
push
fwait
cld
nop
jmp
add
stos
clc
push
cmpsb
cmc
sbb
add
add
sub
clc
repnz
jae
add
add
lds
mov
xchg
ret
repnz
pusha
add
repnz
jae
dec
push
pusha
cmc
mov
jp
rcl
sti
jb
clc
repnz
jae
sbb
add
mov
fwait
cld
nop
jmp
push
in
add
stos
repnz
dec
add
clc
repnz
jae
add
add
add
enter
nop
jmp
bound
add
and
add
or
xchg
sbb
add
repnz
jae
add
adc
addb
xchg
and
add
clc
repnz
jae
add
add
and
mov
jne
clc
repnz
jae
popf
sub
adc
test
fdivrs
fwait
cld
nop
jmp
lock
std
mov
cld
nop
jmp
add
mov
cmpl
or
loope
inc
add
add
stos
add
push
je
popf
mov
clc
repnz
jae
insl
es
jb
rep
clc
repnz
jae
push
add
add
add
cmp
repnz
jae
mov
cld
loop
add
mov
outsb
stos
push
lods
add
lods
or
add
and
push
mov
xchg
ret
add
add
in
add
nop
jae
mov
add
aam
dec
add
clc
repnz
jae
add
pop
jae
add
push
mov
xchg
ret
pusha
popf
add
imul
xchg
ret
cmpsb
daa
add
jne
clc
repnz
jae
and
add
mov
xchg
ret
and
add
push
stos
sbb
mov
pop
xchg
add
jle
xchg
adc
jae
add
push
clc
repnz
jae
pop
add
add
add
nop
jae
pusha
mov
add
inc
add
inc
add
cli
movzwl
fwait
cld
nop
jmp
repnz
roll
add
jmp
jae
mov
push
mov
xchg
ret
add
add
lds
add
mov
clc
repnz
jae
mov
mov
clc
repnz
jae
add
roll
push
shl
stos
inc
push
mov
xchg
ret
add
rcrl
inc
add
insl
add
and
insl
mov
repnz
jae
or
adc
cmp
sar
nop
jae
push
xor
add
mov
adc
add
repnz
jae
lcall
clc
repnz
jae
add
add
mov
cmp
cld
or
jmp
add
add
enter
cld
nop
jmp
push
push
pop
stos
add
add
add
dec
adc
dec
add
push
mov
xchg
ret
add
mov
mov
fwait
cld
nop
jmp
cld
xor
add
cli
rep
push
mov
xchg
ret
add
mov
cmpsl
dec
inc
fwait
cld
nop
jmp
add
add
insl
fnsave
sar
nop
jae
and
clc
add
mov
or
test
add
add
or
add
insl
sub
add
push
mov
xchg
ret
add
add
inc
lahf
add
clc
repnz
jae
add
mov
add
repnz
jae
sbb
add
xlat
test
cld
nop
jmp
push
pop
add
add
add
push
adc
clc
repnz
jae
add
sbb
rolb
push
and
clc
repnz
jae
add
daa
add
add
mov
xchg
ret
mov
add
mov
repnz
jae
push
add
add
push
push
leave
mov
clc
repnz
jae
push
add
jo
pop
mov
push
mov
xchg
ret
and
add
cmpsb
lds
add
repnz
jae
push
add
ljmp
inc
add
insl
add
test
nop
jae
clc
and
add
push
add
js
fwait
cld
nop
jmp
std
js
add
rolb
mov
fwait
cld
nop
jmp
lock
add
add
sti
add
clc
repnz
jae
call
add
cld
sbb
sti
fwait
cld
nop
jmp
add
dec
add
mov
add
add
clc
repnz
jae
sbb
mov
mov
fwait
cld
nop
jmp
add
dec
jo
add
dec
lea
clc
repnz
jae
roll
ss
dec
pop
clc
repnz
jae
add
add
in
add
out
push
push
mov
xchg
ret
mov
add
add
nop
jmp
add
add
or
or
repnz
jae
jo
popf
add
pusha
push
mov
xchg
ret
add
push
sub
add
cs
clc
repnz
jae
add
sub
add
test
add
add
popf
add
mov
jnp
fwait
cld
nop
jmp
add
add
add
add
mov
clc
repnz
jae
mov
xor
mov
mov
mov
fwait
cld
nop
jmp
popf
add
dec
push
clc
repnz
jae
js
add
cmp
add
clc
repnz
jae
push
add
add
mov
fwait
cld
nop
jmp
sub
sub
push
dec
in
add
add
repnz
jae
pop
add
es
push
push
mov
xchg
ret
add
mov
daa
add
imul
fwait
cld
nop
jmp
add
add
sbb
mov
xchg
ret
movsb
add
add
sub
clc
repnz
jae
add
add
add
jo
cmp
push
mov
xchg
ret
pop
add
std
and
fwait
cld
nop
jmp
std
bound
sbb
adc
push
lsl
fwait
cld
nop
jmp
add
add
add
inc
add
sar
nop
jae
add
mov
movsb
cld
add
push
mov
xchg
ret
add
push
add
and
pop
push
push
mov
xchg
ret
add
add
bound
mov
add
push
clc
repnz
jae
push
sbb
ss
mov
popl
fwait
cld
nop
jmp
add
ss
repnz
jae
add
add
les
add
add
push
add
sub
add
pusha
clc
repnz
jae
add
sbb
mov
popa
push
mov
xchg
ret
mov
add
or
add
inc
add
daa
shr
idivl
cld
nop
jmp
add
add
add
rolb
insl
push
fwait
cld
nop
jmp
jo
jp
add
pop
mov
mov
fwait
cld
nop
jmp
add
or
add
mov
imul
clc
repnz
jae
add
repnz
add
nop
jae
add
stos
and
add
add
mov
clc
repnz
jae
clc
add
add
add
stc
rep
clc
repnz
jae
mov
and
add
clc
repnz
jae
daa
add
bound
ss
cmpl
jmp
add
add
movsb
mov
sub
clc
repnz
jae
mov
add
xor
jle
repz
repnz
jae
in
daa
mov
add
mov
je
clc
repnz
jae
mov
mov
jmp
add
jb
in
push
add
dec
incl
nop
jmp
add
add
mov
clc
repnz
jae
cmpsb
js
movsb
test
add
repnz
jae
mov
je
fwait
cld
nop
jmp
push
xor
arpl
add
repnz
jae
sbbl
add
add
cld
nop
jmp
add
clc
mov
dec
adc
repnz
jae
daa
add
in
add
adc
cld
nop
jmp
mov
push
add
sbb
repnz
jae
pusha
popf
add
add
sbb
je
add
mov
clc
repnz
jae
add
cmc
add
add
add
push
mov
xchg
ret
push
insl
add
daa
cld
push
push
mov
xchg
ret
add
add
pop
push
mov
xchg
ret
and
mov
add
add
addb
and
push
mov
xchg
ret
add
call
clc
repnz
jae
add
jb
add
mov
clc
repnz
jae
clc
add
jp
stos
push
rcll
lahf
pop
clc
repnz
jae
in
add
testl
push
hlt
incl
add
lock
jp
add
sar
repnz
jae
add
add
shlb
pop
xor
clc
repnz
jae
jb
jo
add
add
mov
xchg
ret
add
daa
daa
sarl
and
clc
repnz
jae
add
popf
add
jno
inc
add
add
and
add
push
clc
repnz
jae
add
sub
addl
je
mov
fs
repnz
jae
add
fwait
cld
nop
jmp
add
lock
sbb
push
bound
mov
clc
repnz
jae
add
cld
sub
add
add
mov
iret
mov
clc
repnz
jae
add
mov
add
add
lcall
jae
lock
and
add
clc
repnz
jae
add
add
add
push
add
repz
mov
xchg
ret
mov
push
push
clc
mov
popa
fs
repnz
jae
add
add
add
jae
cld
std
jo
lcall
rcll
add
adc
add
add
fwait
cld
nop
jmp
and
insl
add
lds
out
cmp
dec
in
inc
add
add
stos
push
clc
repnz
jae
add
std
sbb
loope
adc
add
push
mov
xchg
ret
mov
rolb
aaa
pop
jmp
incl
js
stos
insl
add
xchg
scas
mov
fwait
cld
nop
jmp
push
add
les
clc
repnz
jae
mov
addr16
pusha
push
mov
xchg
ret
sbb
push
add
loop
mov
xchg
ret
add
lock
jns
jno
clc
repnz
jae
add
clc
add
mov
clc
repnz
jae
pop
add
jb
add
push
push
mov
xchg
ret
insl
add
add
push
add
add
sti
lcall
adc
add
mov
sbb
repnz
jae
pop
cmc
add
movsl
mov
fwait
cld
nop
jmp
repnz
pop
add
add
and
add
add
add
lcall
push
mov
xchg
ret
add
push
mov
pusha
clc
repnz
jae
xor
pop
lds
mov
add
add
add
add
sub
mov
clc
repnz
jae
insl
add
fwait
cld
nop
jmp
add
sbb
add
adc
cmp
push
mov
xchg
ret
loop
clc
add
dec
push
push
mov
xchg
ret
stos
add
and
add
xchg
sbb
add
repnz
jae
pop
add
stc
mov
clc
repnz
jae
cmc
push
mov
xchg
add
fwait
cld
nop
jmp
in
add
mov
add
mov
popa
clc
repnz
jae
pusha
popf
mov
add
js
add
push
repnz
jae
mov
popa
add
repnz
jae
add
jle
int
pop
jae
repnz
jae
add
sti
clc
repnz
jae
pop
add
dec
add
sub
mov
clc
repnz
jae
add
jb
daa
add
movsl
mov
stos
mov
clc
repnz
jae
add
daa
sbb
cld
nop
jmp
add
add
add
nop
jae
add
add
pop
add
incl
fwait
cld
nop
jmp
add
in
movsl
mov
mov
mov
xchg
ret
push
add
add
add
xor
call
jmp
lock
sarb
add
lock
inc
sbb
repnz
jae
lock
jo
add
subl
or
incl
clc
add
mov
clc
repnz
jae
push
mov
sub
nop
jae
insl
sbb
push
mov
int
add
push
mov
mov
add
hlt
push
pop
push
push
mov
xchg
ret
add
mov
sub
add
clc
repnz
jae
rorb
add
jb
add
stos
cmc
lock
jp
add
mov
clc
repnz
jae
js
pop
mov
clc
repnz
jae
stos
add
roll
ret
add
add
add
repnz
jae
add
cmpsb
add
add
clc
repnz
jae
jb
add
inc
iret
mov
clc
repnz
jae
movsb
pop
add
push
push
add
test
fwait
cld
nop
jmp
add
add
cmpsl
call
cld
nop
jmp
add
add
add
roll
out
leave
rep
push
mov
xchg
ret
add
add
into
mov
clc
repnz
jae
mov
add
add
add
dec
inc
clc
repnz
jae
add
movsl
daa
add
cld
push
sub
fldl
xchg
ret
jp
roll
stos
push
fwait
cld
nop
jmp
movsl
push
jb
stos
fld1
mov
cld
nop
jmp
or
add
add
nop
jae
cld
add
mov
std
add
mov
clc
repnz
jae
add
and
add
clc
repnz
jae
jp
mov
sbb
nop
jae
xor
add
sti
add
add
out
jp
xor
pushf
ret
std
add
add
add
bound
shll
or
sub
jae
add
clc
push
bound
add
add
test
clc
repnz
jae
push
mov
lods
fwait
cld
nop
jmp
roll
std
push
push
add
add
push
mov
xchg
ret
sub
add
add
push
push
mov
xchg
ret
mov
mov
push
sbb
add
add
push
movsb
cmpsb
add
mov
mov
mov
addb
add
add
jg
clc
repnz
jae
jo
add
add
in
les
call
nop
jae
add
dec
add
sub
out
add
jmp
add
add
addr16
scas
movzwl
clc
repnz
jae
add
add
jb
push
fwait
cld
nop
jmp
movsl
mov
add
mov
mov
xchg
ret
mov
jp
lock
in
mov
jmp
add
add
clc
cmpsb
add
pop
sbb
add
jmp
add
add
pop
add
jmp
aas
add
popf
shll
mov
add
add
xchg
add
jne
clc
repnz
jae
clc
add
mov
clc
repnz
jae
add
add
add
push
push
mov
xchg
ret
and
mov
add
mov
and
inc
add
add
add
pop
add
jmp
cld
add
add
add
push
add
pop
push
mov
xchg
ret
add
sub
xor
clc
repnz
jae
popf
cmc
in
lock
or
jae
add
pop
add
push
and
add
add
push
fwait
cld
nop
jmp
push
add
add
mov
sub
sbb
test
add
clc
repnz
jae
add
add
jmp
add
popf
add
add
dec
mov
clc
repnz
jae
add
add
mov
add
mov
mov
add
fldl
nop
jae
cld
add
add
fistl
mov
xchg
ret
add
add
add
clc
aaa
mov
rolb
push
cmp
add
add
mov
sbb
mov
push
repnz
jae
add
mov
mov
mov
inc
mov
add
sti
ljmp
add
pusha
adc
mov
lret
repnz
jae
insl
add
mov
push
push
mov
xchg
ret
add
movsb
and
mov
push
mov
xchg
ret
sub
bound
stos
clc
repnz
jae
push
add
std
pop
push
add
mov
clc
repnz
jae
jp
jp
add
add
jge
rorb
add
add
std
mov
sbb
inc
add
add
ret
xchg
xor
clc
repnz
jae
lds
sub
test
nop
jae
lcall
lods
mov
clc
repnz
jae
add
add
add
cmpsb
inc
test
add
repnz
jae
in
add
add
add
push
mov
xchg
ret
add
add
test
push
add
clc
repnz
jae
add
push
push
mov
xchg
ret
add
push
popf
mov
add
dec
clc
repnz
jae
mov
movsb
popf
cmc
adc
mov
xchg
ret
add
cmc
add
jb
sahf
movzwl
clc
repnz
jae
add
add
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
clc
push
mov
add
xorl
add
std
add
popa
clc
repnz
jae
jb
add
adc
mov
mov
xchg
ret
sub
add
lea
fwait
cld
nop
jmp
pop
shrb
mov
cmc
xchg
loopne
incl
nop
jmp
push
movsb
jo
add
clc
clc
sub
clc
repnz
jae
add
mov
movsl
add
push
mov
xchg
ret
insl
add
roll
cmc
inc
add
push
mov
xchg
ret
dec
es
add
popf
pop
push
mov
xchg
ret
and
add
xor
add
cmc
and
push
mov
xchg
ret
add
add
out
in
add
clc
repnz
jae
add
pop
daa
sti
add
clc
repnz
jae
jp
add
add
add
clc
repnz
jae
push
xor
add
lods
push
fwait
cld
nop
jmp
std
daa
incl
add
mov
clc
repnz
jae
add
addl
repnz
jae
pop
in
add
mov
lds
mov
ret
push
add
mov
xchg
ret
push
add
jb
add
rorl
add
clc
repnz
jae
add
data16
jmp
add
add
sbbl
jb
mov
jae
add
mov
cmc
rcll
push
mov
add
mov
pusha
aam
js
fs
and
cmp
push
clc
repnz
jae
add
jmp
mov
jae
in
movl
xchg
clc
repnz
jae
mov
add
rolb
outsb
pop
push
mov
xchg
ret
add
push
add
loop
jae
jp
jne
push
mov
xchg
ret
sbb
repnz
shll
jmp
test
or
add
repnz
jae
mov
bound
repnz
jae
add
add
js
jnp
mov
adc
cld
nop
jmp
sbb
bound
add
nop
jmp
addl
add
add
add
push
jmp
add
mov
and
add
pop
add
clc
repnz
jae
add
sarb
mov
fwait
cld
nop
jmp
add
mov
push
add
push
clc
repnz
jae
pop
add
add
lcall
add
add
cli
jmp
mov
add
sub
nop
jmp
sbb
add
add
mov
cmpl
fwait
cld
nop
jmp
add
add
add
xor
clc
repnz
jae
push
add
push
push
mov
xchg
ret
and
add
add
mov
push
mov
xchg
ret
mov
popf
jno
decl
clc
repnz
jae
add
movsl
push
add
pop
lcall
pop
add
add
rcrl
mov
add
push
mov
adc
stc
lods
push
mov
xchg
ret
xor
or
or
add
mov
clc
repnz
jae
dec
push
xor
clc
push
fwait
cld
nop
jmp
insl
mov
add
mov
jae
add
popf
popf
add
add
add
add
add
repnz
jae
add
add
popf
jb
mov
clc
repnz
jae
add
add
fsub
inc
add
jb
and
bound
inc
add
and
clc
repnz
jae
movl
inc
add
add
add
add
add
inc
push
mov
xchg
ret
clc
pop
sbb
add
sub
jae
repnz
jae
mov
add
xchg
in
clc
repnz
jae
add
lds
jbe
clc
repnz
jae
popf
cmc
mov
xchg
popa
xchg
decl
repnz
jae
add
add
orl
inc
add
add
add
add
jne
shr
push
mov
xchg
ret
pop
add
mov
push
hlt
add
add
add
dec
sub
repnz
jae
push
sub
push
loop
fadds
sti
push
mov
xchg
ret
addl
xor
pop
mov
clc
repnz
jae
add
add
push
mov
fwait
cld
nop
jmp
mov
add
push
add
pop
push
mov
xchg
ret
daa
loop
lds
add
movsb
add
stos
mov
clc
repnz
jae
add
push
inc
sbb
lret
push
mov
xchg
ret
push
dec
add
add
mov
in
mov
push
mov
xchg
ret
add
mov
add
nop
jmp
add
add
bound
mov
jae
add
lock
add
test
push
mov
xchg
ret
add
std
mov
fwait
cld
nop
jmp
add
loop
sub
push
push
mov
mov
push
mov
xchg
ret
add
dec
add
add
add
add
clc
repnz
jae
mov
xchg
clc
repnz
jae
and
push
mov
nop
jae
mov
in
jb
add
dec
call
clc
repnz
jae
mov
pop
ss
repnz
jae
shl
and
add
push
mov
xchg
ret
add
pop
mov
dec
fwait
cld
nop
jmp
mov
add
add
fucompp
ss
pushl
add
mov
add
cmp
inc
and
fwait
cld
nop
jmp
add
and
add
sub
push
mov
xchg
ret
dec
movsb
mov
mov
clc
repnz
jae
jp
mov
push
push
mov
xchg
ret
incl
add
add
push
mov
lcall
jae
addl
add
add
mov
clc
repnz
jae
add
sub
rcrl
loope
add
std
add
lcall
clc
repnz
jae
push
lds
add
jp
jmp
clc
repnz
jae
mov
jb
mov
cmp
push
mov
xchg
ret
add
add
pusha
add
icebp
fldl
xchg
ret
sub
ss
lock
outsl
cld
clc
repnz
jae
jb
add
xchg
dec
add
push
mov
xchg
ret
add
add
jmp
add
popf
and
lds
sub
add
roll
clc
inc
add
cmpl
fwait
cld
nop
jmp
add
add
mov
xchg
ret
sbb
xorl
add
fwait
cld
nop
jmp
std
add
adcl
sbb
jo
add
lcall
shl
incl
or
add
or
add
jae
push
add
in
add
xchg
in
add
and
push
mov
xchg
ret
add
stos
mov
clc
repnz
jae
movsb
add
add
fwait
cld
nop
jmp
add
add
popf
add
xor
ss
clc
repnz
jae
movsb
sbb
add
mov
xchg
ret
add
cld
movsl
add
mov
clc
repnz
jae
dec
add
add
repnz
jae
add
push
std
movsb
add
jmp
nop
jmp
and
movsl
movsb
mov
mov
clc
repnz
jae
add
add
add
jne
clc
repnz
jae
pusha
push
out
mov
clc
repnz
jae
push
or
cmpsb
add
jae
add
pop
clc
repnz
jae
add
and
sbb
pop
jns
out
clc
repnz
jae
add
and
add
add
mov
push
mov
xchg
ret
add
jb
pop
add
add
clc
repnz
jae
add
or
out
inc
add
repnz
add
int
repz
repnz
jae
add
pop
add
xor
mov
xchg
ret
push
add
repnz
pop
push
mov
xchg
ret
ss
add
and
repnz
jae
add
pop
add
add
or
lock
xchg
ret
add
sbb
jbe
clc
repnz
jae
add
add
test
fs
add
jmp
in
add
add
add
pop
clc
repnz
jae
in
add
add
add
sar
nop
jae
add
mov
push
push
mov
xchg
ret
add
mov
movsb
clc
repnz
jae
lcall
push
fwait
cld
nop
jmp
add
stos
add
jo
movsb
push
jae
add
cmc
push
add
mov
push
clc
repnz
jae
ss
add
out
add
push
mov
xchg
ret
add
add
and
imul
nop
jae
add
dec
add
mov
fwait
cld
nop
jmp
mov
cmpsb
inc
push
add
add
clc
repnz
jae
pop
movl
add
pop
push
mov
xchg
ret
mov
push
bound
popf
jb
cmpsb
add
mov
popf
clc
repnz
jae
and
push
out
xchg
push
mov
xchg
ret
push
push
ss
add
mov
push
mov
xchg
ret
add
clc
daa
sbb
ret
and
mov
or
dec
imul
xorl
dec
cmc
xor
cmpw
fwait
cld
nop
jmp
add
movsl
sbb
jle
test
add
clc
repnz
jae
pop
add
pop
call
clc
repnz
jae
add
loop
fwait
cld
nop
jmp
add
add
subl
dec
cmp
cld
nop
jmp
pop
xor
add
in
mov
push
mov
xchg
ret
lock
mov
mov
clc
repnz
jae
add
fdivrs
clc
repnz
jae
jo
lcall
das
pop
clc
repnz
jae
clc
add
add
cmc
in
mov
jae
pop
add
add
add
ret
shl
clc
repnz
jae
popf
add
add
adc
aaa
addr16
mov
clc
repnz
jae
mov
es
repnz
jae
cmc
in
repnz
add
nop
jae
add
add
mov
xchg
ret
add
or
repnz
jae
add
add
clc
jmp
push
mov
xchg
ret
add
repnz
call
clc
repnz
jae
add
add
cli
mov
clc
repnz
jae
mov
add
add
clc
repnz
jae
add
add
enter
adc
cld
nop
jmp
add
push
add
add
aam
repz
nop
call
nop
jae
add
add
ret
pop
clc
repnz
jae
add
push
add
repz
cld
nop
jmp
cmpsb
add
add
pusha
add
mov
in
inc
add
mov
add
out
add
clc
repnz
jae
and
add
mov
fwait
cld
nop
jmp
sbb
add
cld
nop
jmp
and
add
add
jb
addb
push
clc
repnz
jae
add
jge
clc
repnz
jae
mov
add
subl
jb,pt
fwait
cld
nop
jmp
add
add
xor
repnz
jae
bound
mov
cmc
add
push
mov
add
add
fld
nop
add
add
xor
add
clc
repnz
jae
or
push
add
cmp
cmp
ret
pop
movsb
xor
add
movb
mov
clc
repnz
jae
loop
and
dec
add
clc
repnz
jae
add
sub
mov
add
mov
adc
repnz
jae
loop
dec
jb
push
add
clc
repnz
jae
bound
add
add
add
in
add
ja
xchg
add
add
add
push
mov
xchg
ret
sbb
add
add
push
mov
xchg
ret
add
add
sahf
dec
fwait
cld
nop
jmp
roll
sbb
loop
push
add
call
clc
repnz
jae
add
add
das
rep
clc
repnz
jae
add
jb
lcall
mov
fwait
cld
nop
jmp
add
add
push
or
jae
bound
add
push
stos
add
add
clc
repnz
jae
movl
xchg
clc
repnz
jae
in
mov
add
into
mov
clc
repnz
jae
popf
repnz
xor
push
mov
xchg
ret
add
mov
fwait
cld
nop
jmp
add
movsb
mov
add
add
add
mov
decl
push
mov
xchg
ret
add
add
repnz
jae
add
add
add
testb
xchg
add
xor
jmp
incl
lock
add
bound
cmpsb
add
repnz
mov
mov
xchg
ret
add
repnz
flds
dec
cmp
repnz
jae
xor
add
inc
push
mov
xchg
ret
add
std
add
add
add
fwait
cld
nop
jmp
and
lock
popf
add
mov
clc
repnz
jae
add
mov
add
movb
push
clc
repnz
jae
add
add
add
add
pop
add
pusha
clc
repnz
jae
and
mov
cld
stc
jmp
loop
pusha
add
add
add
stos
rclb
add
add
repnz
jae
add
pop
add
repz
clc
repnz
jae
add
add
clc
repnz
jae
movl
popf
push
jl
sbb
repnz
jae
add
push
clc
repnz
jae
mov
push
add
mov
clc
repnz
jae
add
add
lds
call
clc
repnz
jae
sbb
sub
push
add
mov
xchg
ret
sbb
add
movsb
push
add
jmp
add
add
and
xor
add
repnz
jae
add
cld
daa
sbb
and
clc
repnz
jae
add
loop
push
cmpsb
test
clc
repnz
jae
pop
add
fstpt
clc
repnz
jae
add
cld
add
mov
clc
repnz
jae
clc
ss
jp
add
mov
scas
mov
clc
repnz
jae
bound
jb
gs
mov
clc
repnz
jae
mov
push
and
je
rolb
inc
mov
je
cld
nop
jmp
add
add
clc
repnz
jae
add
mov
jae
insl
mov
xor
add
clc
repnz
jae
push
add
add
stos
add
out
push
add
inc
add
and
mov
xchg
ret
lds
add
add
jmp
add
add
popf
add
test
lcall
fcos
inc
add
add
add
fwait
cld
nop
jmp
cmp
sbb
add
addb
rep
clc
repnz
jae
dec
add
add
add
inc
xor
clc
repnz
jae
add
addl
sahf
mov
jmp
add
mov
pop
std
rolb
jle
add
add
clc
repnz
jae
add
mov
fwait
cld
nop
jmp
push
add
xchg
sbb
mov
xchg
ret
add
push
popf
cmpsb
add
add
add
add
mov
clc
repnz
jae
addl
push
mov
add
add
aad
add
lret
fwait
cld
nop
jmp
add
add
dec
cmc
push
ss
add
add
add
in
test
fwait
cld
nop
jmp
add
push
add
testb
mov
clc
repnz
jae
std
add
lea
clc
repnz
jae
in
popf
pop
add
xor
clc
repnz
jae
cmpsb
jb
mov
add
nop
jae
roll
add
in
xchg
mov
nop
jae
add
add
mov
shr
clc
repnz
jae
sbb
ja
xor
mov
mov
xchg
ret
sub
add
pop
scas
mov
fwait
cld
nop
jmp
add
add
add
sub
repnz
jae
pop
add
shl
push
jae
add
add
repnz
jae
add
mov
call
clc
repnz
jae
add
bound
dec
fwait
cld
nop
jmp
jp
popf
add
mov
call
clc
repnz
jae
mov
mov
push
mov
xchg
ret
roll
add
out
mov
fwait
cld
nop
jmp
sbb
jp
std
mov
or
clc
repnz
jae
add
pop
xor
and
addb
aam
fldcw
popa
clc
repnz
jae
mov
mov
xchg
add
add
mov
push
mov
xchg
ret
mov
mov
movsl
adcl
add
add
repnz
jae
sub
pop
dec
mov
clc
repnz
jae
push
std
add
pusha
fidivrs
clc
repnz
jae
add
add
in
mov
clc
repnz
jae
insl
push
mov
sti
pop
clc
repnz
jae
add
push
shl
inc
jmp
add
add
add
insl
mov
add
push
and
je
clc
repnz
jae
add
pushl
add
mov
xchg
ret
cld
cmpsb
add
bound
push
mov
repnz
jae
add
push
add
add
clc
repnz
jae
pusha
add
mov
lea
clc
repnz
jae
add
jne
clc
repnz
jae
and
pop
add
andl
jae
add
add
clc
repnz
jae
add
add
push
mov
xchg
ret
push
sub
insl
add
add
add
sbb
repnz
jae
sub
sarb
push
clc
repnz
jae
sbb
add
addb
cmp
repnz
jae
lds
sbb
movsb
add
add
clc
repnz
jae
pop
lock
ja
add
jmp
add
sub
add
xchg
jg
push
mov
xchg
ret
mov
push
add
clc
repnz
jae
bound
add
stos
bound
rolb
aaa
rolb
cmp
test
add
clc
repnz
jae
lock
insb
mov
clc
repnz
jae
movsl
mov
clc
repnz
jae
mov
jecxz
add
push
fwait
cld
nop
jmp
std
add
add
add
jbe
pushl
pop
add
lcall
clc
repnz
jae
add
lcall
pop
inc
add
clc
repnz
jae
rclb
test
mov
data16
add
clc
repnz
jae
in
add
popf
mov
nop
jae
movsl
add
add
push
lcall
orl
add
stos
add
inc
add
push
mov
xchg
ret
add
add
insl
jns
mov
add
cld
nop
jmp
insl
push
add
repnz
jae
push
add
add
add
je
clc
repnz
jae
dec
add
mov
movb
mov
push
mov
xchg
ret
cmpsb
sbb
inc
fimuls
test
lcall
out
incl
lock
pusha
clc
repnz
jae
push
sbb
pusha
add
add
push
clc
repnz
jae
push
mov
add
popf
add
call
jae
add
sbb
in
call
clc
repnz
jae
add
add
clc
repnz
jae
in
ss
std
add
filds
clc
clc
repnz
jae
mov
roll
add
sbb
jno
fsubrl
add
rolb
mov
add
fnsave
loope
das
dec
push
add
mov
in
call
add
push
bound
mov
aad
adc
and
mov
sarl
dec
xor
movsl
rolb
fwait
push
ljmp
add
rolb
add
pop
fildll
add
add
cmc
xor
mov
add
pop
movb
movsl
ret
int
int
out
mov
or
js
fcompl
mov
rolb
sbb
bound
mov
mov
jno
mov
stos
push
add
ljmp
mov
add
ret
add
das
jo
cmp
xchg
lahf
insl
out
das
cld
loop
push
add
and
mov
call
cmc
test
fadds
cmpsl
leave
pop
xchg
add
mov
add
push
add
or
cwtl
loop
mov
pop
addr16
cli
out
stos
mov
pop
mov
addb
dec
push
mov
xchg
add
lock
add
adc
test
call
cltd
in
shr
push
in
xchg
jg
add
les
data16
inc
cmp
outsb
jb
addr16
push
push
mov
push
add
ficoml
pop
ret
inc
mov
fiadds
or
add
aad
aaa
mov
outsb
jno
add
lds
add
sub
loope
add
push
or
inc
add
add
add
or
fldt
stos
add
pusha
add
ret
cmp
or
nop
add
xor
insb
out
mov
ljmp
add
dec
ljmp
add
add
pop
popf
push
add
stos
add
test
add
pop
xchg
add
mov
jge
mov
cmp
add
mov
xchg
push
xor
xchg
mov
jne
mov
add
mov
add
scas
add
fnstsw
mov
fwait
add
jb
mull
cltd
mov
inc
jge
scas
sub
int
jb
shrl
add
add
andl
leave
push
cmp
add
jg
pusha
add
add
xchg
add
add
mov
fmull
sbbl
sub
out
pusha
add
add
mov
add
add
push
add
add
mov
fildll
repz
mov
add
lret
rorl
add
sbb
push
add
hlt
add
push
xchg
xchg
in
fs
imul
mov
cmpl
out
or
mov
xor
mov
add
cmp
add
pusha
add
pop
inc
movb
cmp
add
sbb
test
add
mov
add
mov
imul
or
pop
mov
add
mov
mov
daa
sbb
jge
push
add
add
rolb
rcrl
add
adc
subl
sti
stos
and
stos
jb
popa
mov
ja
xor
jae
add
je
xor
sbb
js
add
add
add
xchg
repz
jnp
pop
xchg
add
leave
mov
jb
nop
add
testb
stos
fistpll
test
mov
cs
add
add
push
rcll
jle
jne
je
lods
call
adc
mov
xor
cmpsb
add
push
das
ljmp
and
add
add
push
adc
dec
add
sbb
xchg
lods
in
xor
xchg
add
add
pop
pop
inc
mov
pop
in
aas
stos
pop
data16
add
add
insl
push
add
leave
mov
sbb
add
add
js
add
add
loop
js
add
mov
mov
repnz
sbb
sbb
adc
shll
mov
sbb
sahf
loope
fldl
aam
mov
je
in
mov
dec
pop
push
add
jno
mov
and
push
add
add
add
imul
pop
sti
outsl
jmp
fnstcw
or
xchg
push
add
add
add
inc
add
add
xor
jb
add
mov
icebp
aad
add
out
cmp
add
scas
mov
test
pop
pop
stos
movl
subl
aad
add
or
ficoms
add
lcall
mov
mov
pop
testb
es
sahf
xor
add
add
les
add
dec
add
mov
push
add
rolb
call
add
lods
inc
lcall
addr16
or
scas
sbb
dec
push
and
mov
cmp
jae
dec
xchg
lret
cmp
pop
lahf
js
mov
xchg
jp
xchg
add
jl
int
jg
xchg
add
mov
mov
add
add
clc
mov
push
sbb
add
subl
popa
test
push
fbstp
add
push
add
pop
ja
insb
lcall
add
je
test
add
mov
pop
xchg
add
loope
add
idivl
rolb
fidivl
sti
dec
inc
add
add
add
pop
imull
mov
addb
lahf
and
int3
mov
sub
add
hlt
add
add
add
add
into
addb
pushf
stc
mov
jbe
add
lock
mov
stos
cmp
add
add
add
ds
add
inc
add
jg
add
jb
cmp
mov
sub
ds
add
das
or
int
push
add
sub
cmp
add
mov
jl
add
add
add
outsl
scas
add
mov
cld
dec
xor
loopne
insb
aas
aad
lcall
add
lret
jne
add
jne
cmp
sbb
add
mov
cwtl
adc
add
xchg
jns
dec
dec
jns
bound
mov
loop
jb
push
int3
repnz
outsb
in
push
dec
sbb
mov
add
dec
rolb
iret
add
frstor
iret
pop
sti
mov
cmp
addb
das
add
mov
sahf
pushf
adc
hlt
add
pop
jne
inc
mov
and
adc
ja
fcomps
lahf
sti
clc
pusha
add
add
pop
bswap
adc
mov
mov
and
cli
pop
les
mov
add
imul
add
mov
mov
push
lods
add
fidivrl
pop
stos
mov
add
sahf
push
in
lahf
andl
xchg
inc
ficompl
sbbl
mov
jl
adc
js
call
fcoms
or
and
mov
rolb
fidivl
xchg
jg
mov
insl
fs
fldl
add
mov
add
add
aad
scas
add
xchg
add
add
pop
out
fcom
add
in
ja
mov
add
add
aam
add
mov
lea
mov
pop
imul
add
xchg
add
adc
out
ljmp
clc
push
ja
or
mov
jae
sub
sahf
mov
bound
mov
loope
add
jo
pop
subl
popf
jmp
mov
inc
add
push
mov
add
imul
or
jno
movb
add
add
or
fidivrs
inc
addb
dec
idivl
fdivrs
out
fcmovne
sub
mov
lods
loop
in
fisubl
lret
in
sahf
and
mov
loopne
pushf
repnz
mov
cmp
popf
pop
into
mov
push
and
mov
leave
lods
jge
add
add
mov
int
mov
add
or
jecxz
fnsave
sub
stos
dec
gs
add
aaa
fnstcw
inc
sub
pshufw
pop
mov
inc
add
add
add
ret
add
add
add
jg
ret
inc
add
bound
mov
mov
pop
inc
in
pop
sbb
pop
sbb
add
sbb
call
add
sbb
cmp
xchg
les
iret
or
int3
fiaddl
add
push
int
pop
push
adcl
int
pop
sahf
mov
pop
xor
fidivrs
lods
lahf
jle
add
in
xchg
add
add
out
adc
add
lcall
mov
cmp
xchg
add
ja
lret
mov
push
or
dec
clc
lret
insl
cmp
cwtl
ret
xor
mov
xchg
add
add
xchg
int3
fcomps
jl
jp
dec
dec
adc
sub
clc
das
push
outsl
inc
add
add
cmp
fists
cmp
lret
popf
flds
inc
dec
jecxz
mov
add
add
add
into
icebp
inc
add
cmpsl
cltd
cmpsb
add
and
mov
add
add
jmp
xor
sub
mov
fcoml
mov
pop
sbb
add
pop
imul
pop
addr16
pop
in
adc
push
add
test
add
ret
sub
push
jecxz
or
lret
dec
stos
loopne
adc
sub
add
add
adc
dec
xor
pop
jb
or
aas
or
add
jle
fistpll
rorl
aam
cli
mov
add
add
add
je
and
dec
into
aas
leave
test
loopne
adc
cmp
mov
jg
jno
loop
pop
inc
add
add
add
and
mov
adc
add
add
loope
xchg
sbb
add
sbb
add
add
and
push
add
pop
lret
add
rolb
adc
jl
ljmp
and
add
sar
cmp
testb
inc
add
inc
into
lds
add
pop
add
push
push
icebp
ret
gs
testb
add
int3
out
adc
xor
lcall
test
add
jg
fwait
jae
add
push
pop
mov
add
xchg
add
sub
add
icebp
into
inc
add
fadds
sbb
xor
and
pusha
add
add
jp
xchg
popf
jb
nop
add
hlt
add
cmpsb
add
lds
push
add
mov
sahf
mov
repz
jns
hlt
add
mov
lds
mov
add
int
adc
cmp
fadds
add
add
add
add
add
push
jno
stos
fiaddl
fwait
mov
daa
je
and
push
clc
xor
ret
push
addl
pop
jno
int
vmovhpd
icebp
add
mov
aam
cmp
cmp
mov
push
add
push
mov
test
push
aaa
push
add
mov
js
add
add
add
jnp
aaa
push
add
and
lock
add
push
add
add
push
add
add
loop
inc
push
add
and
inc
in
cmp
cmp
adc
insb
push
push
cltd
xchg
inc
pop
out
dec
cmc
dec
in
add
add
inc
test
add
mov
jge
js
add
push
add
lea
add
icebp
sub
aam
lret
xchg
sbb
data16
lods
movsb
add
orl
add
add
add
and
les
in
lods
cmp
add
lds
inc
pop
aad
add
pop
push
add
movb
adc
ja
testb
lock
pop
stos
cld
stos
mov
outsl
xor
aad
jbe
inc
dec
xchg
inc
add
add
add
insl
fwait
btr
movb
pop
xchg
add
mov
add
xchg
add
add
sub
or
dec
xchg
and
mov
add
push
sbb
push
add
les
imul
and
adc
mov
enter
add
add
add
and
mov
enter
pop
mov
mov
mov
mov
addb
cli
dec
rolb
jae
mov
cmc
cmp
lret
add
mov
pusha
add
dec
adc
fbstp
xchg
add
arpl
inc
add
add
dec
cmp
les
fwait
add
mov
inc
inc
lcall
lahf
ret
add
add
xchg
add
pshufw
sbb
xor
inc
add
mov
jnp
xchg
pop
sbb
bound
mov
add
mov
adc
add
mov
gs
inc
in
add
mov
add
cmpsl
cmp
lcall
push
xorl
add
ja
add
gs
addb
add
add
inc
jg
arpl
cmpsb
add
pop
add
or
xchg
add
es
data16
add
mov
push
cli
jecxz
push
dec
stos
repnz
cmp
cmp
jb
cmp
xor
add
sub
add
pop
movb
add
add
ret
repz
les
pop
mov
push
push
add
jno
xchg
add
add
mov
xchg
lcall
mov
mov
nop
add
inc
cltd
iret
sbb
add
xor
outsb
out
bound
mov
xchg
in
shrl
add
mov
inc
add
jnp
dec
or
int
imul
in
imul
xchg
add
sub
jne
add
iret
or
lea
test
mov
cltd
xchg
add
add
add
add
add
add
gs
pop
dec
icebp
mov
xor
je
push
call
addr16
outsb
xchg
add
cmp
add
add
cmc
fistl
add
hlt
add
fdivl
cmp
cmp
lret
stc
inc
fbstp
add
hlt
add
out
mov
add
dec
movsl
dec
cmp
add
lods
xor
mov
inc
add
dec
mov
inc
out
sbb
add
scas
mov
sub
pop
sub
and
mov
inc
add
dec
int3
sub
enter
push
insb
testb
xchg
add
add
push
fwait
jne
clc
or
out
push
mov
sarl
mov
repz
ss
lret
mov
ret
or
dec
iret
dec
mov
rolb
addb
add
cmpsl
sti
fmul
xor
inc
add
in
dec
mov
mov
xchg
pop
add
pop
outsb
fwait
mov
mov
mov
jmp
dec
mov
add
sbb
stos
orl
add
lods
lret
testb
dec
dec
or
stc
jnp
ret
jg
dec
add
mov
xchg
add
mov
es
adc
cmpsl
rolb
addl
add
in
pop
je
scas
outsl
xor
add
xchg
jbe
filds
inc
add
out
mov
jns
inc
add
loop
aas
lods
movb
jae
add
call
add
add
add
add
mov
inc
add
dec
push
add
add
shll
mov
scas
daa
scas
daa
sbb
pop
xchg
mov
mov
cmc
mov
jo
sbb
ficoml
add
add
movsl
or
stc
gs
xchg
add
add
lcall
dec
adc
mov
add
arpl
add
add
popa
test
push
dec
sbb
cmp
test
push
ljmp
and
xchg
fcoml
test
add
cld
push
add
add
movsb
add
in
cld
mov
adc
rolb
pop
ljmp
fists
data16
out
addb
in
xchg
faddp
push
movsb
add
sbb
and
mov
jle
adc
jae
imul
and
int
add
out
xor
add
add
cmp
mov
inc
add
notl
add
mov
and
mov
cmc
xor
iret
cld
out
xchg
xchg
jg
add
push
sarl
cmp
mov
add
scas
js
or
add
add
add
pop
inc
cmc
sub
mov
nop
add
jp
add
fiaddl
push
add
lahf
movl
mov
add
pop
xchg
insl
out
js
cmpsb
add
jmp
rcl
xchg
or
addl
imul
jl,pt
cmp
add
dec
in
jp
in
jle
add
mov
dec
mov
add
mov
aas
bound
mov
mov
mov
xor
mov
cmp
add
jge
test
sbb
add
cmp
mov
and
mov
push
add
push
sbb
add
cmp
cmp
ljmp
loop
jo
mov
mov
std
aaa
lea
sti
mov
add
xlat
xor
popa
out
jg
jg
repz
jp
negl
add
add
ficoms
ljmp
add
cmpsb
add
xor
rolb
arpl
mov
or
add
insl
add
push
add
ljmp
and
mov
add
xor
add
adc
cmp
add
mov
cmc
loope
fwait
ret
or
lcall
or
add
mov
add
add
cmc
push
jle
add
add
mov
inc
cld
cltd
add
add
xchg
add
add
add
data16
dec
cmp
add
out
pop
addb
jecxz
add
loop
cmp
mov
stos
xchg
add
add
add
add
mov
movb
add
or
xor
add
xchg
repnz
testb
lahf
std
inc
sub
cmp
in
add
push
add
mov
mov
hlt
add
jnp
add
add
mov
sub
or
push
cmp
push
mov
stos
pop
stos
xchg
fcomip
add
add
lret
mov
adc
mov
popa
dec
mov
add
add
test
mov
out
aas
adc
pop
add
mov
mov
andl
int
dec
fisttpl
mov
int
add
outsl
sbb
cmpsl
sbb
out
push
inc
sbb
rolb
prefetchwt1
or
rcrl
add
addb
push
inc
add
std
stos
mov
add
add
repnz
add
les
popf
and
jne
mov
adc
jno
push
cmp
in
pop
fidivrl
add
push
sub
add
hlt
add
add
pop
outsb
mov
add
repz
jmp
and
mov
add
mov
or
fisubrl
shll
in
das
jg
adc
int
jno
aam
lret
pop
mov
add
mov
sahf
mov
repnz
xchg
mov
push
lock
sub
andl
add
add
add
mov
jge
lock
mov
add
into
stc
ss
xor
add
mov
mov
pop
pop
rcrl
nop
add
xchg
add
sub
into
cmp
leave
pop
pop
lret
aad
imul
addb
fnsave
dec
in
mov
pop
data16
jbe
sbb
add
add
add
cs
and
arpl
dec
fidivrl
add
mov
mov
add
mov
pop
and
mov
push
add
add
xchg
add
mov
ret
movsb
add
dec
xchg
add
cld
cmp
add
mov
jp
add
jle
fidivrs
stos
leave
and
mov
add
je
add
dec
or
add
ret
not
add
insb
pop
jno
add
and
ds
out
call
push
addb
mov
jo
cmc
sar
cs
add
jge
fistpl
or
add
incb
gs
mov
cmp
gs
pop
aad
or
lock
add
add
and
lea
push
mov
add
add
test
add
pop
aas
ficoml
add
ds
add
add
fst
add
in
loope
adc
movsl
xor
insb
pop
shrl
das
mov
inc
add
loopne
addb
mov
mov
outsl
xchg
add
ja
movb
adc
mov
push
add
add
add
mov
xor
add
mov
add
mov
ret
inc
add
popa
dec
jp
cmp
arpl
adc
jg
xchg
add
add
and
daa
cmp
add
add
dec
aaa
cmp
and
mov
dec
sbb
add
rcrl
bound
mov
xchg
mov
dec
add
add
mov
add
repnz
pusha
add
jmp
add
add
outsb
dec
cmpsb
add
jb
jge
add
addb
int3
add
mov
jp
add
cmpsb
add
add
call
in
sbb
fsubl
enter
mov
add
add
mov
add
pop
adc
add
fwait
cmp
xchg
add
stos
shl
add
sbb
add
rolb
fcmove
and
add
out
push
add
jecxz
clc
testb
lret
add
add
pushf
xchg
mov
fcmovnu
pop
xchg
das
mov
add
movsl
shll
add
int3
shll
jno
clc
xlat
xlat
adc
clc
xchg
add
lcall
sbb
add
add
imull
add
imul
mov
jbe
cltd
pushf
dec
cmp
sbb
dec
testb
add
push
imul
test
ljmp
mov
mov
add
outsb
dec
setl
ret
mov
add
fnstsw
mov
add
add
cmp
add
inc
les
sbb
je
push
mov
mov
add
sbb
add
add
lods
fst
xchg
add
add
mov
pop
in
mov
pop
lret
xchg
add
int
addb
add
pop
inc
mov
stos
mov
test
add
add
mov
add
out
lcall
add
mov
xor
sbb
addb
add
add
daa
add
sbb
mov
lods
mov
add
in
popf
movsl
call
sbb
adc
jnp
add
std
pop
pop
lea
inc
push
xor
icebp
push
jg
add
dec
mov
adc
sahf
xor
push
add
push
add
mov
shrl
jmp
add
jp
add
cld
fcomp
xchg
sbb
pop
xchg
add
pop
xchg
inc
add
lock
add
aad
repz
add
add
mov
jno
add
stos
fildll
push
add
add
jle
pop
gs
add
cmp
scas
stc
add
add
sahf
mov
or
idivl
xadd
aad
adc
add
repz
les
mov
repz
add
add
lea
popf
call
scas
dec
int3
movsl
add
and
mov
sub
add
mov
notl
add
add
add
push
into
data16
add
mov
push
add
add
into
popf
sbb
mov
ljmp
add
sbb
mov
movb
mov
add
adc
fucomi
in
lods
aam
cmpsl
mov
jnp
add
mov
sub
fisttpl
ds
add
inc
add
add
xor
in
mov
sbb
lahf
movb
push
add
add
test
outsl
pop
pop
test
fdivrs
mov
xchg
add
xlat
pop
nop
add
sbb
adc
sub
xchg
mov
and
adc
add
push
add
pop
sub
add
sub
adc
xchg
into
xchg
sbb
xor
mov
mov
sbb
add
adc
nop
add
lea
pop
lcall
inc
mov
incl
pop
xor
fsubr
add
xor
test
repz
push
add
sub
ret
mov
pusha
add
stos
add
inc
add
pop
xchg
xor
std
lcall
rolb
adc
inc
add
imul
or
pop
enter
add
add
pop
fsubrl
mov
inc
les
sbb
mov
js
dec
add
mov
sub
ljmp
outsb
arpl
mov
pop
aad
mov
push
xchg
add
lods
icebp
or
add
add
add
fcompl
push
and
cmpsb
add
mov
xchg
das
push
add
add
inc
leave
lods
inc
sub
add
add
jbe
jo
push
in
pop
dec
cli
cmpsb
add
push
ret
xchg
add
add
dec
mov
dec
fnsave
dec
sub
pop
into
xchg
imul
add
arpl
mov
imul
xchg
jmp
xchg
push
icebp
add
mov
iret
sub
jnp
add
xchg
add
xchg
add
inc
add
cmc
jb
jge
add
cs
add
test
in
pop
out
in
xchg
add
pop
lods
fiaddl
movsl
popa
arpl
and
std
das
add
mov
addr16
call
cmp
inc
add
xor
add
add
xor
out
sbb
mov
sub
xchg
add
sub
add
jle
xchg
fdivrl
fs
in
fnstsw
mov
sbb
je
push
rolb
jle
mov
inc
mov
add
addb
cmc
add
lret
xlat
mov
push
add
testl
add
add
out
or
mov
mov
add
xchg
arpl
add
sti
imul
cmp
mov
fisubs
add
add
jnp
add
push
add
fldenv
mov
sub
out
pop
into
or
jo
add
mov
pushf
rolb
add
add
test
add
add
add
mov
xchg
call
add
add
mov
out
loope
lret
lret
test
repnz
test
add
add
sbb
add
add
out
les
lret
mov
mov
add
mov
in
in
cmp
pop
cmp
dec
mov
enter
dec
fbld
fisubl
push
add
movb
add
push
mov
cmpsb
add
mov
mov
xchg
add
add
int3
pop
jae
add
mov
add
arpl
inc
add
jo
fisttps
cld
or
add
jg
xor
cmp
push
hlt
add
add
cwtl
cmp
xchg
sbb
movsl
cmp
sbb
and
add
aas
out
mov
leave
push
mov
int
add
cmpsl
adc
std
dec
fwait
mov
adc
sub
push
push
add
add
outsl
push
add
or
ljmp
mov
pop
add
xor
mov
add
add
inc
test
fsubrs
cltd
cmp
sbb
push
push
mov
aas
pop
mov
aas
xor
add
add
ds
cli
push
das
lret
add
fsubl
dec
fwait
add
mov
jp
mov
or
push
add
mov
lds
addb
add
cmp
movb
popa
lret
shll
push
add
int3
mov
sbb
xor
add
add
stos
clc
xchg
lahf
push
mov
fbld
ljmp
pop
jns
add
pop
sbb
add
sbb
arpl
ret
test
sub
stos
das
mov
pop
inc
add
add
add
mov
lods
inc
bound
mov
inc
add
push
add
lods
fwait
ds
lock
dec
loope
mov
or
add
add
addb
mov
in
cmpsl
leave
dec
adc
dec
jnp
imul
addb
cmp
daa
das
movsb
add
add
aad
xchg
add
call
add
mov
cs
movsl
iret
cmp
out
mov
add
fisttps
xchg
mov
andl
add
mov
pop
adc
lea
add
imul
rolb
add
insl
scas
dec
push
add
inc
out
add
dec
dec
pusha
add
add
jmp
add
or
data16
add
add
xchg
jmp
scas
lods
and
dec
sti
call
add
or
ret
add
cmp
mov
add
pop
mov
xchg
daa
movb
mov
dec
iret
mov
mov
scas
xor
aaa
out
hlt
add
inc
add
add
mov
xor
add
sbb
rolb
fxch
xor
add
mov
pushf
rolb
rolb
imul
daa
or
cmp
cltd
xor
std
dec
arpl
add
add
mov
imul
mov
add
cwtl
sti
std
mov
cli
lea
add
add
call
jmp
inc
xchg
add
imul
sbb
repz
mov
push
add
add
add
mov
add
xor
mov
sub
add
pop
in
daa
imul
movsb
add
scas
dec
movsl
daa
jmp
mov
and
pop
cmc
ja
add
xchg
add
out
lds
add
jg
add
add
repz
cmc
loopne
pop
pop
mov
add
pop
xor
lret
scas
adcl
add
mov
rolb
push
add
xor
mov
cltd
xor
test
sub
xchg
dec
mov
jae
cmp
roll
das
pop
addl
add
sahf
lods
jmp
and
mov
xchg
movb
inc
add
in
out
add
stos
sub
add
mov
jno
cld
lock
add
dec
mov
sub
jmp
add
or
int3
add
mov
pop
mov
push
leave
les
cmp
jns
pop
nop
add
clc
mov
jmp
mov
cmp
add
and
das
inc
les
sub
add
inc
add
add
mov
push
jg
or
add
add
and
ror
insb
movl
movb
add
pop
sub
mov
adc
daa
add
mov
lahf
mov
dec
pop
cmp
cwtl
int3
ljmp
dec
push
add
add
leave
dec
add
mov
add
pop
push
push
add
and
sbb
imul
add
testb
add
add
add
or
add
cmp
xor
daa
or
add
arpl
sbb
cwtl
sub
cmp
push
shll
add
int3
sbb
outsl
push
add
pop
cli
mov
fstps
mov
stos
in
cltd
dec
mov
gs
add
and
add
add
aaa
fildl
mov
adc
fldenv
add
rolb
or
movsb
add
test
arpl
mov
lds
push
testb
add
sub
add
mov
xchg
loop
push
pusha
add
jecxz
xchg
push
push
add
insb
imul
add
mov
add
pop
aam
loopne
inc
sub
stos
repnz
add
aad
sbb
xor
add
sub
push
add
adc
cmp
pop
adc
lods
sbb
cmp
jbe
pop
jle
add
add
add
xor
pop
cli
mov
shll
mov
rolb
repz
add
arpl
add
add
add
add
dec
sub
add
sub
je
sbb
rolb
daa
test
call
push
add
mov
add
add
adc
add
std
dec
fistps
add
or
and
in
ds
add
add
out
pusha
add
add
add
pop
jmp
push
add
add
add
add
add
mov
mov
or
add
adc
add
add
lea
lods
cwtl
push
add
mov
add
xchg
add
pandn
pop
mov
ds
add
into
out
or
jnp
add
lock
pop
dec
outsb
addr16
add
mov
cmpsb
add
xor
in
ljmp
add
add
fcmovb
mov
scas
ss
test
js
cmp
mov
add
cmp
add
push
rolb
push
mov
loop
popf
fisttps
xchg
aas
inc
add
nop
add
test
mov
and
add
cmp
dec
repnz
sbb
add
arpl
add
mov
add
mov
stos
testb
addb
add
dec
arpl
and
add
xchg
addb
jns
repz
xlat
cli
test
xorl
fnsave
mov
outsb
in
push
add
mov
cld
into
and
fdivs
mov
imul
cmc
rolb
out
mov
add
mov
push
xor
testb
movb
outsl
adcl
dec
cmpsb
add
scas
xchg
add
push
add
out
sub
sub
in
lods
sub
jb
mov
add
jecxz
add
pop
les
and
movb
cld
cmpsb
add
cwtl
test
jno
out
aas
mov
add
xchg
add
add
cs
add
pop
das
shrl
jp
add
imul
xor
jmp
cwtl
xor
popf
sbb
mov
add
xor
shrl
add
leave
cmp
add
xor
imul
rcll
out
inc
add
cmp
add
cs
frndint
movd
xchg
add
lods
aad
add
mov
mov
or
add
cld
das
arpl
inc
add
stos
jg
icebp
push
jp
ret
inc
add
add
cmp
shll
xchg
add
cld
jae
add
add
testb
add
popf
and
mov
iret
push
add
sub
rolb
adc
xor
pop
incb
add
in
xchg
add
or
add
add
movzbl
lret
adc
add
pop
jns
fimuls
xor
or
add
sub
lret
add
adc
sahf
sub
rolb
mov
mov
int3
pop
mov
sub
add
or
mov
mov
sbbl
dec
and
in
push
mov
push
add
mov
popa
add
mov
add
jle
popf
jecxz
add
add
mov
sbb
add
cmp
loopne
jno
xchg
add
or
data16
fcomps
sahf
addb
add
repz
mov
sbb
add
iret
add
or
js
cmc
icebp
out
mov
add
mov
and
cltd
je
xor
mov
add
add
faddl
mov
add
mov
jge
pusha
add
pop
inc
add
in
stos
sub
inc
bound
mov
cmp
add
mov
mov
aaa
pop
add
mov
cli
cltd
sbb
pop
movsb
add
insl
popa
jb
icebp
adc
jg
adc
fmulp
leave
repz
add
notl
iret
and
push
dec
sub
movb
mov
js
add
add
cs
jl
cmp
test
and
ret
into
adc
sbb
pop
and
mov
dec
xor
and
enter
scas
inc
add
mov
pop
sarl
push
add
sar
andl
shl
mov
add
mov
into
fsubrl
inc
xchg
add
cmp
out
fdivrl
add
call
or
repnz
jge
call
and
mov
add
add
and
mov
cmp
data16
jnp
inc
scas
cmpsl
xchg
ljmp
add
mov
cmp
mov
pop
in
bound
mov
stos
xor
sbb
add
pop
adc
data16
insl
nop
add
dec
dec
mov
inc
add
mov
add
aam
and
mov
mov
dec
sub
jb
ficoms
mov
cmp
mov
mov
leave
fmull
add
add
in
stc
jge
add
cld
lods
ds
add
or
rorl
pop
aas
je
mov
stos
icebp
fidivs
aam
movsl
mov
add
sbb
xor
aad
add
mov
push
xor
adc
mov
add
mov
test
pop
testb
pop
jno
add
mov
add
xor
ficomps
mov
add
lret
push
add
cmp
dec
inc
add
inc
mov
mov
xchg
add
add
sub
sbb
aaa
nop
add
out
je
push
pop
add
mov
mov
add
mov
cli
shll
xchg
in
cld
pushf
rolb
pop
adc
test
add
adc
popa
mov
addb
pop
xor
pushf
outsb
cwtl
jo
xor
nop
add
dec
push
jbe
cltd
in
inc
mov
add
fsubs
call
sti
mov
and
mov
stos
cmp
push
add
clc
dec
inc
add
jge
lret
insb
aad
add
jle
add
dec
rolb
in
cli
push
add
add
lods
lret
loopne
in
jno
add
enter
add
aaa
mov
testb
add
stos
aad
cmp
add
add
js
xchg
test
leave
sbb
add
cmpsl
push
ja
inc
add
out
cli
jg
add
in
scas
ficomps
add
fwait
jns
rolb
cltd
fdivr
fsubrl
pop
push
lahf
mov
add
lcall
add
aad
add
add
in
outsb
jge
aam
add
into
nop
add
jmp
aad
cmp
ret
add
xor
imul
mov
push
add
in
das
and
mov
pop
xchg
arpl
dec
xchg
add
das
mov
add
add
sub
add
jae
lret
leave
leave
rolb
outsb
xchg
insl
mov
xlat
and
mov
out
std
and
mov
add
add
add
adc
mov
xchg
mov
inc
add
das
roll
push
add
jbe
cld
push
rolb
adc
pop
or
imul
push
add
push
ficomps
inc
lods
loop
roll
xlat
jne
adc
das
pop
dec
data16
fcoml
add
add
add
std
sub
lea
add
inc
add
out
mov
and
cmp
add
add
xor
or
add
js
pop
fcomps
pop
das
outsl
cs
lret
sub
cld
das
push
add
out
dec
mov
push
fwait
shl
pop
sbb
sub
nop
add
add
aas
in
decb
add
jle
add
sbb
push
push
scas
jns
xchg
xchg
mov
call
cmp
mov
dec
cmp
pop
lods
push
call
fnstenv
adc
add
insl
mov
repz
out
inc
pop
jae
jbe
and
pop
adc
fucomi
rolb
pop
adc
ficompl
mov
xchg
add
inc
outsb
sub
jmp
pop
push
add
ja
dec
sub
sbb
fidivs
in
ljmp
push
add
jae
add
add
add
push
add
sbb
add
add
mov
call
add
in
inc
add
mov
xor
notl
in
add
push
add
rcll
add
mov
adc
lock
add
out
rorl
mov
inc
test
add
test
movsb
add
add
icebp
mov
xor
cmp
dec
cli
add
add
add
add
ret
mov
pop
test
add
fcoml
pop
ljmp
scas
mov
test
or
aas
popf
cld
xor
inc
jle
mov
mov
clc
stos
out
fsub
add
pushf
movsb
add
mov
inc
mov
push
arpl
movsb
add
add
add
cmc
test
adc
or
xlat
inc
add
jo
sbb
add
add
xchg
add
jmp
lahf
cmp
movsb
add
add
pop
mov
aaa
mov
add
mov
test
lea
es
dec
add
mov
aaa
cmp
add
add
ja
fldenv
add
rcll
push
add
cmp
add
std
cmp
repz
add
push
mov
and
fwait
xchg
push
ret
cmp
mov
mov
add
sbb
add
addb
aad
or
lock
js
jmp
add
mov
test
push
add
add
into
popa
push
add
and
mov
int
ret
pop
pop
add
mov
out
inc
ret
mov
sbb
adc
cmp
mov
add
push
xchg
add
pop
ss
rcll
dec
push
pusha
add
and
mov
add
sub
insl
cmp
scas
sbb
add
fbld
pop
rolb
xchg
lods
aad
push
add
cltd
inc
add
add
add
cli
jne
add
add
add
and
cmp
mov
inc
push
sub
adc
add
pop
sahf
adc
movsb
add
dec
xchg
rolb
xchg
add
mov
outsl
push
int
push
add
push
add
and
sahf
inc
add
addb
stc
je
mov
ljmp
add
add
mov
imul
mov
mov
in
enter
cmc
fs
mov
add
mov
jge
add
ljmp
popa
rolb
mov
add
mov
add
into
stos
int3
sub
int
scas
mov
push
add
push
loopne
sub
cli
ds
add
mov
sbb
inc
daa
inc
add
jbe
movb
pop
dec
jo
mov
add
jo
sub
aam
and
push
and
or
add
stos
jmp
inc
push
loop
adc
js
add
or
add
sbb
shll
or
loope
add
cwtl
lahf
mov
testb
out
mov
dec
lahf
js
add
cmp
aas
testb
addb
add
and
jno
cmp
dec
and
ret
pop
mov
or
aam
rorl
aas
xor
add
add
and
add
xchg
add
and
test
in
shll
add
or
cld
pop
dec
pop
adc
lret
sbb
sbb
imul
add
dec
cld
mov
push
xchg
jb
mov
icebp
mov
aad
psubusb
aam
and
decl
add
mov
stos
mov
ret
adc
push
sub
add
push
stos
mov
mov
or
add
cli
fsubl
push
aaa
jbe
push
add
xor
jmp
cltd
pop
add
cmp
add
loope
test
jo
sbb
clc
xchg
add
mov
add
add
add
add
jmp
add
mov
les
dec
mov
hlt
add
add
mov
add
add
and
pop
pop
filds
lods
jp
sbb
addr16
push
in
xchg
jmp
les
aad
add
add
mov
add
add
mov
test
jns
xor
imul
add
xor
add
pop
push
add
sti
xor
aaa
js
fbstp
aaa
adc
arpl
dec
dec
mov
add
add
lahf
loopne
enter
mov
loope
sti
add
add
mov
sub
fistpl
out
rolb
xchg
fisubs
jl
in
xchg
ds
jle
in
call
mov
and
sub
mov
add
add
outsl
cld
mov
stos
push
add
testl
xor
add
daa
and
mov
push
add
mov
inc
add
mov
or
fldl
push
test
clc
mov
fldcw
add
add
inc
sub
push
out
scas
nop
add
add
mov
add
dec
dec
gs
pop
cmpsb
add
add
ds
aam
cmc
in
lcall
add
data16
add
jle
add
mov
cli
mov
mov
cltd
test
lret
mov
jg
xor
lds
add
xchg
push
add
add
add
push
add
rcll
imul
pop
mov
add
add
cmc
outsl
sbbl
adc
outsl
out
lods
add
jae
test
dec
adc
adc
test
add
add
lret
mov
insl
sbb
aas
and
xor
mov
sub
jmp
call
add
fisubl
test
mov
or
mov
aaa
cmc
jle
add
inc
xor
leave
in
push
adc
add
add
add
cmpsb
add
mov
add
xor
sbb
mov
add
add
mov
fldl
repz
mov
cmp
add
inc
push
add
sbb
and
inc
add
add
add
or
add
add
outsl
xorl
adc
add
mov
add
push
add
add
add
add
mov
adc
and
daa
aaa
sbb
rolb
loop
add
dec
movb
sub
add
in
jne
or
add
mov
sub
add
movl
jb
cld
add
cs
mov
add
add
sbb
jp
add
pop
movsl
inc
add
test
add
in
rolb
mov
add
add
pop
mov
push
in
pop
enter
pop
jae
xchg
and
add
js
add
loopne
inc
add
add
add
xlat
packuswb
add
add
fdiv
add
add
or
lcall
stc
pushf
push
add
mov
lods
jno
pop
icebp
out
sub
adc
sub
rolb
lret
sbb
dec
sub
outsb
adc
and
mov
cwtl
add
cld
mov
add
add
cli
outsb
ja
ret
add
jl
mov
cmp
mov
dec
pop
or
add
add
add
add
mov
out
lret
ja
hlt
add
mov
iret
aam
lods
addb
movb
add
cmpsb
add
add
mov
roll
fcmovb
lods
icebp
dec
mov
sbb
and
or
jbe
orl
dec
cld
insb
outsl
adc
out
or
aad
add
jbe
add
fsubr
cmp
add
popf
sbb
add
push
add
mov
test
xor
mov
lds
dec
mov
add
mov
adc
flds
add
mov
or
dec
add
mov
leave
sbb
mov
add
lock
fcomps
or
addb
jmp
add
add
fcompl
xchg
rolb
pop
out
imul
add
ljmp
xchg
add
push
add
lods
sub
testb
add
mov
aas
std
push
sbb
or
push
insb
das
jl
add
inc
add
push
add
and
sub
push
loope
mov
iret
adc
aam
testb
jp
addb
add
adc
add
lret
sub
fsubrs
std
add
aas
test
outsb
imul
popa
popa
sub
cmp
add
sub
xlat
jno
jmp
add
add
add
push
adc
push
popf
push
pushf
jp
mov
rcrl
sbb
jnp
add
mov
cs
fsubr
mov
jne
add
mov
mov
nop
add
clc
mov
sub
sbb
add
popf
int3
jbe
js
xchg
adc
lods
push
push
das
mov
iret
andl
rolb
addr16
mov
movsb
add
add
add
or
add
xchg
add
push
outsb
fisttps
ljmp
inc
add
add
add
add
add
mov
rolb
add
jnp
add
xor
jle
xchg
mov
lock
push
push
add
add
jae
in
mov
push
add
lea
icebp
out
xchg
add
add
sub
bound
mov
mov
inc
pop
and
mov
add
add
mov
sbb
incb
xchg
add
add
or
aad
cld
fwait
add
mov
rcl
sub
mov
mov
mov
xchg
ds
fistpl
add
das
imul
ljmp
add
add
rcrl
adc
jge
sbb
mov
sbb
leave
jb
jns
js
cmpsb
add
pop
mov
call
icebp
mov
mov
pop
sub
jb
jns
add
lods
out
insb
sub
add
js
psubq
dec
mov
sbb
loop
add
cltd
jg
gs
or
cmp
dec
adc
lahf
sub
testb
loope
add
fiadds
icebp
ja
add
jmp
add
clc
adc
xchg
add
outsl
addb
push
ret
xor
sub
stos
mov
jmp
dec
test
or
ja
adc
and
out
mov
mov
adc
pushf
rolb
mov
lds
add
mov
add
mov
inc
out
test
add
jl
add
insb
cltd
xchg
rolb
pop
cmpsb
add
add
fdivrs
les
out
sub
pop
cs
dec
mov
adc
xchg
mov
leave
enter
mov
add
push
add
and
mov
test
cld
jmp
add
sbb
sub
xchg
pop
jmp
dec
pop
fildl
push
push
add
xchg
vlddqu
dec
push
mov
rolb
sbb
cli
loope
call
xor
push
add
divl
ret
dec
cmp
or
inc
push
add
add
andl
loope
test
mov
mov
and
mov
add
cmpsl
push
add
add
cmpsl
pop
loope
push
add
sti
inc
add
mov
clc
adc
pop
pop
movsb
add
mov
add
mov
sar
add
ja
dec
rcll
loopne
jl
add
test
cmp
iret
aad
inc
add
xor
clc
mov
add
and
ljmp
inc
add
ret
stos
mov
push
cwtl
jne
add
out
outsl
popf
cmp
fsubrs
jl
out
add
mov
dec
aaa
jns
mov
lods
or
or
mov
out
lret
movsl
xchg
pop
dec
adc
cmp
andl
mov
lock
add
mov
mov
add
gs
fstpt
add
mov
add
hlt
add
cmp
mov
fisubl
mov
push
add
add
add
stos
stos
sbb
xchg
pusha
add
hlt
add
or
xchg
add
mov
add
jg
add
sub
pushf
mov
jae
add
cmp
add
cltd
push
add
push
movb
sub
add
xchg
add
movsl
sub
inc
push
add
push
lods
popf
ds
cmpsl
or
add
sbbl
mov
std
lcall
jae
push
and
mov
push
mov
rolb
mov
lods
xchg
xor
add
add
imul
sub
iret
mov
dec
jns
lahf
sahf
popa
movsl
rcll
dec
sbb
add
sbb
inc
push
add
and
daa
cmp
mov
fcmovbe
add
sbb
mov
adc
add
or
xchg
inc
add
inc
add
add
add
pusha
add
mov
cmp
add
ja
add
cmp
addb
sub
stos
aaa
dec
mov
out
add
aad
sub
outsl
cmpsb
add
gs
add
add
add
add
dec
aam
je
lcall
push
add
add
sbb
jnp
add
adc
add
cmpl
fcomp
sbb
vaddsd
cmpsl
mov
idivl
add
pushf
and
mov
ss
or
pop
dec
test
aam
stos
cmpsb
add
lock
in
xchg
bound
mov
jle
mov
aas
fbstp
dec
pop
dec
dec
rolb
add
jl
push
jge
add
rorl
mov
mov
test
rolb
ja
scas
cs
add
sar
jg
inc
sub
mov
int3
pop
icebp
sti
inc
test
push
add
pop
ret
fs
add
add
mov
mov
add
fnstcw
addr16
add
add
lods
xchg
out
pusha
add
inc
shll
xchg
jo
lea
add
dec
sub
adc
push
add
add
add
jne
movb
add
rorl
xor
inc
ret
arpl
xor
addb
add
inc
mov
add
add
loope
xchg
add
data16
lcall
sub
add
scas
xor
into
inc
movsb
add
inc
push
add
aam
inc
sbb
add
ja
lahf
cld
cmp
and
add
add
xchg
int3
fucom
add
outsb
add
mov
add
add
in
pop
lcall
or
push
add
loopne
push
add
sub
test
add
outsb
sbb
add
icebp
mov
jb,pt
fisubrl
pop
arpl
mov
inc
add
insl
mov
lahf
and
mov
jmp
loopne
nop
add
add
xchg
push
add
mov
cvtps2pi
movsb
add
add
add
sbb
add
and
mov
add
inc
add
add
add
mov
cwtl
mov
jge
add
dec
cmp
iret
inc
sub
mov
prefetch
fsubs
lods
lcall
in
sbb
test
test
gs
add
dec
jne
into
mov
or
mov
pushf
and
mov
inc
lock
aaa
fwait
and
mov
adc
add
add
lret
or
add
mov
add
mov
test
fldpi
mov
jns
rcll
and
mov
jmp
push
mov
pop
pop
ficomps
xlat
mov
mov
add
add
inc
add
add
or
mov
arpl
push
xchg
xchg
add
mov
mov
outsb
jmp
push
jno
lods
outsb
adc
mov
loopne
lret
mov
add
add
cmpsb
add
rolb
out
mov
add
mov
jmp
jecxz
push
adc
mov
pop
inc
add
add
les
add
mov
fdivrp
addr16
jae
add
in
adc
std
adc
pop
cwtl
add
jb
cltd
dec
aas
sti
adc
xlat
insl
cmc
lret
add
add
jbe
jne
pop
out
add
addr16
inc
add
stos
test
add
or
pop
sti
adc
nop
add
adc
cmpsl
loope
add
cwtl
mov
addb
pop
add
int
add
jle
add
inc
add
add
add
add
add
ret
add
pop
add
mov
pop
dec
repnz
sub
add
jg
lahf
clc
adc
rolb
xchg
rolb
ret
cs
xchg
add
jae
pop
sbb
add
popf
sahf
dec
cwtl
lret
add
stos
and
adc
sbb
jmp
adc
adc
push
add
add
lret
lahf
lret
xchg
add
aaa
addb
rolb
into
into
adc
and
aas
std
mov
sub
add
push
push
aaa
stos
mov
test
aaa
hlt
add
xchg
icebp
test
add
add
sti
pop
outsb
sub
add
movb
lret
sub
test
add
mov
lahf
fsubrl
rolb
testb
cwtl
jns
add
pop
insl
push
fcomps
add
xchg
and
push
dec
movsb
add
xchg
xor
push
add
add
jmp
inc
movb
dec
fistpll
shl
add
jg
out
std
sub
add
add
and
mov
mov
imul
lock
loopne
movsl
push
xchg
imul
mov
add
sbb
mov
add
cltd
push
ljmp
add
scas
rcll
jmp
add
add
sbb
add
sbb
add
cld
sub
pop
pop
adc
loop
add
xor
sbb
add
aas
js
fistl
testb
and
mov
xor
mov
dec
mov
add
mov
add
push
add
and
mov
add
rolb
push
add
in
push
add
popf
testb
add
push
add
cli
inc
sub
lret
orl
mov
add
jg
mov
iret
dec
jp
in
add
mov
iret
mov
mov
pop
daa
mov
fstps
add
add
add
inc
repz
test
sub
decb
fistl
adc
and
mov
inc
adcl
sti
add
push
add
popa
ret
jecxz
pusha
add
xchg
mov
push
add
add
cwtl
sub
arpl
add
in
cwtl
push
mov
in
aaa
test
jo
jmp
add
ljmp
add
xor
insb
push
add
push
add
imul
fcmovu
mov
inc
xor
cwtl
jns
adc
mov
add
xchg
jle
add
aaa
jge
std
rolb
nop
add
push
adc
scas
daa
mov
add
pusha
add
addb
push
add
add
pop
cmp
mov
sbb
loopne
loope
sbb
jmp
add
cmp
and
mov
dec
jns
lahf
scas
jp
add
add
add
lcall
mov
add
addb
hlt
add
rolb
pop
sub
addr16
inc
rolb
hlt
add
sub
add
lods
or
test
jnp
fwait
lret
icebp
or
inc
add
jae
aad
cmp
inc
add
add
xchg
lcall
add
add
add
sub
mov
icebp
pop
mov
rolb
call
incl
adc
and
mov
je
adc
add
lret
add
mov
repz
add
add
dec
push
add
mov
mov
inc
add
xchg
fcoms
add
test
rolb
xchg
je
icebp
pop
in
rolb
sti
loop
mov
fadds
out
fistps
lahf
push
ds
insl
cmp
outsb
dec
sub
sub
add
cli
cmp
add
push
cmp
add
negl
pop
jo
adc
add
pop
data16
pop
sub
sbb
inc
daa
cmpsb
add
sbb
xchg
add
or
add
adc
xor
xchg
cmpsb
add
add
mov
pop
aas
mov
sbb
pop
call
addb
fisubs
mov
dec
and
mov
mov
movsb
add
sbb
scas
clc
mov
lret
pop
aad
xlat
hlt
add
testb
cltd
xlat
sbb
leave
inc
push
add
add
jecxz
aam
in
push
add
pushl
jle
outsb
xchg
add
add
add
pop
cmp
add
add
lea
es
lods
pop
sub
shll
jmp
ficoml
hlt
add
repz
add
add
lret
add
adc
icebp
push
dec
sahf
inc
out
push
jno
insb
fisubrl
mov
es
push
iret
pop
push
add
lock
add
sub
scas
sbb
adc
add
xchg
aam
push
add
add
mov
testl
in
jl
xchg
or
cwtl
cltd
jle
aam
sub
testl
movb
xlat
ret
sbb
xchg
repz
add
stc
xor
int3
lods
gs
mov
add
mov
add
jno
jb
mov
jle
aaa
gs
pop
xchg
addb
pop
lret
mov
add
add
lret
jecxz
dec
mov
testb
push
add
cmp
fsts
push
or
and
fwait
sub
and
js
add
add
mov
or
les
addb
or
add
adc
cmp
inc
add
fnstenv
push
das
mov
add
add
add
ret
or
add
mov
add
jge
push
push
add
and
or
mov
jge
clc
outsl
mov
pusha
add
int3
and
mov
add
add
add
add
loop
mov
pop
push
add
push
add
add
xchg
jo
sub
add
add
push
fcmove
xchg
sub
leave
and
popf
push
add
out
mov
mov
cmpsb
add
jmp
out
add
add
sbb
loop
cmpsb
add
iret
sbb
push
add
jb
notl
dec
and
cmc
mov
dec
iret
sub
add
cmp
push
xlat
jg
or
push
add
mov
mov
mov
add
xchg
add
push
add
add
add
add
add
push
add
add
sub
mov
mov
xchg
add
lahf
jne
mov
pop
fnsave
add
and
mov
and
loope,pn
add
add
loop
popa
adc
mov
add
add
add
add
xor
cwtl
das
data16
add
lcall
stc
dec
pop
pop
lea
sbb
inc
add
pop
cwtl
pop
test
add
test
jns
add
xchg
add
add
push
add
push
push
add
add
int
das
xor
leave
popa
mov
pop
outsl
inc
out
sub
je
push
and
mov
push
mov
add
fincstp
pushf
sbb
push
add
xor
add
fisttpl
add
dec
rorl
add
dec
xlat
cmp
add
add
cmp
in
iret
insb
cmpsb
add
jns
add
ja
and
in
sub
add
pop
int3
outsl
aaa
add
sub
fwait
lret
clc
add
dec
cmc
out
out
ffreep
mov
add
dec
adc
or
inc
add
arpl
jb
in
or
sub
push
add
xchg
daa
or
cwtl
inc
cmp
add
sbb
aad
insb
mov
add
dec
mov
fisttpl
loope
jbe
jmp
cld
or
dec
cmpl
add
add
add
add
xchg
add
push
sbb
mov
add
add
cmpsb
add
aas
movb
add
lret
jecxz
dec
inc
add
or
das
pop
cmp
jae
add
add
mov
xor
pop
inc
or
xchg
add
mov
sbbl
pop
movb
data16
add
inc
add
fmuls
stos
dec
or
add
std
fidivl
ljmp
fidivl
js
cwtl
fwait
push
add
push
in
jo
and
mov
add
add
aam
movsb
add
sub
add
pushf
rcr
add
sub
mov
xchg
add
insl
clc
pusha
add
add
sub
mov
mov
add
sbb
dec
fld
inc
push
add
pushf
jns
add
fchs
add
add
adc
in
sub
mov
pop
push
push
dec
push
add
jecxz
addr16
call
xchg
add
mov
adc
add
mov
in
push
adc
ret
movntq
add
in
js
repnz
add
push
add
fxch
xchg
jb
mov
add
fimuls
jb
popa
dec
dec
fnstsw
add
add
cwtl
outsb
cmpsb
add
aaa
adc
xchg
inc
add
mov
add
clc
xchg
mov
add
add
cld
ss
enter
add
test
in
jecxz
cli
mov
add
push
pop
int3
jmp
test
bound
mov
jle
leave
in
aam
js
rorl
or
sub
mov
xor
movb
nop
add
xchg
mov
add
lea
or
std
adc
add
add
mov
pop
inc
jbe
xor
cs
lcall
repnz
add
mov
or
xor
push
cld
scas
mov
add
add
sbb
in
or
pop
cmp
xor
add
add
jnp
test
mov
inc
add
pop
xchg
dec
jecxz
xor
add
pop
cmp
fwait
mov
int
rolb
cltd
lahf
leave
ss
enter
test
mov
ljmp
inc
add
add
movsb
add
mov
roll
add
add
add
mov
outsb
mov
inc
aam
sbb
in
xchg
add
sbb
clc
sub
add
sbb
sbb
addb
add
add
bound
mov
add
add
add
and
and
addr16
lods
out
leave
pop
add
test
ja
nop
add
sbb
rolb
xchg
mov
movb
add
scas
sbb
outsl
and
jl
mov
js
inc
add
jecxz
loop
inc
add
mov
add
std
punpckldq
mov
lock
push
add
pop
pop
pop
pop
jg
aaa
jbe
scas
fwait
aaa
outsl
arpl
or
mov
sub
add
inc
mov
and
add
xor
int
cmp
cmc
addb
mov
jg
xor
push
into
fcomps
add
push
add
xor
add
popa
addb
dec
and
mov
add
add
cmc
push
jecxz
test
mov
mov
iret
inc
sbb
push
add
data16
test
mov
or
add
cmp
test
adc
iret
in
mov
roll
dec
jb
push
xor
repz
aaa
sbb
sub
adc
xor
sbb
bound
mov
or
add
or
and
xchg
int3
cli
jae
mov
mov
aas
cs
add
outsl
mov
test
out
outsb
test
push
add
add
mov
insl
pop
adc
mov
add
pop
add
das
jmp
cli
fs
lods
pop
sbb
stos
bound
mov
out
jae
andl
sbb
add
add
add
pop
stos
add
mov
mov
fsubr
xchg
add
push
add
sub
lods
xor
mov
out
push
sub
add
add
sbb
icebp
leave
push
pop
cli
cwtl
or
mov
test
ds
pop
sub
and
add
and
add
xchg
in
sbb
add
sahf
add
call
push
data16
popf
xchg
jnp
sti
cmpsb
add
jmp
sub
jmp
add
ljmp
jns
mov
add
mov
add
jmp
cltd
cmp
enter
push
add
xchg
shl
add
popf
xchg
andl
sub
adc
adc
adc
imul
ja
daa
bound
mov
repz
push
adc
inc
xchg
arpl
add
addb
int3
addb
cld
cmpsl
mov
push
fldcw
in
lret
xor
cmp
fstl
addr16
sbb
and
add
inc
add
mov
pop
insb
cmp
add
cmp
jbe
or
sbb
pop
or
lods
lcall
add
mov
and
mov
je
loopne
mov
add
sti
sub
add
testb
add
mov
add
add
add
mov
xchg
xchg
mov
add
dec
or
pop
enter
pop
mov
mov
mov
mov
add
or
cmp
js
add
loopne
cmpsl
call
adc
bound
mov
mov
les
dec
enter
mov
add
xlat
push
add
dec
mov
fisubrl
call
sbb
add
add
jmp
mov
sbb
add
out
ret
inc
add
push
cmp
add
outsb
add
dec
mov
fnstenv
pop
cmp
add
addb
add
ds
popf
addb
jmp
sbb
add
into
cwtl
add
and
mov
add
push
add
mov
testb
add
mov
cli
add
jmp
push
add
dec
push
inc
add
push
imull
adc
xchg
inc
push
jl
xchg
cmp
add
int
and
mov
jnp
and
cwtl
ja
mov
add
xor
xchg
loope
add
test
jmp
dec
test
mov
and
inc
aam
push
sub
aaa
pop
mov
add
adc
add
xchg
add
or
mov
fcmovne
mov
lods
out
cmpsl
pop
mov
addps
sub
ss
xor
adc
add
pop
inc
add
add
mov
iret
outsb
xchg
lods
mov
add
or
test
mov
iret
mov
std
in
int
gs
imul
dec
push
lods
mov
add
add
imul
ret
stos
mov
add
mov
add
int
add
pop
mov
adc
rolb
rolb
mov
cmpsb
add
repnz
add
nop
add
lahf
out
in
sbbl
loope
or
mov
add
in
inc
add
inc
add
xchg
add
call
add
cmpsl
xchg
cmp
lea
dec
xchg
cs
add
hlt
add
popa
mov
add
and
add
movsb
add
ret
add
fidivl
mov
lret
mov
add
adc
mov
cmp
add
xchg
add
mov
push
add
add
aas
sbb
inc
add
mov
mov
dec
cmp
mov
je
sti
cmpsb
add
xchg
add
imul
js
adc
cs
jne
mov
bound
mov
add
cwtl
xchg
pop
cmp
push
pop
imul
pcmpeqb
mov
bound
mov
pop
ljmp
outsl
inc
push
adc
insl
das
xchg
lahf
push
add
insl
test
sub
add
add
jp
add
add
repnz
add
out
add
mov
mov
sbb
push
clc
mov
cmp
ss
and
mov
push
add
push
add
add
add
mov
add
add
stos
testb
mov
aas
and
mov
mov
add
add
add
int3
jecxz
add
mov
bound
mov
mov
adc
mov
add
ja
cltd
fiaddl
pop
sub
dec
test
popa
xchg
add
push
in
xor
jmp
cltd
inc
mov
rolb
lcall
sti
stc
push
push
add
aas
ret
add
mov
filds
push
ret
and
fdivr
inc
add
adc
testb
or
adc
mov
push
fstl
arpl
out
cltd
jl
iret
nop
add
ds
add
sbb
ret
out
dec
das
xlat
fldln2
addb
lds
mov
nop
add
and
jb
jns
das
bound
mov
inc
nop
add
mov
aam
xchg
add
popf
mov
sbb
gs
faddp
rolb
add
rolb
add
jnp
cmpsb
add
les
cmp
add
add
push
jbe
jmp
add
fldt
adc
add
mov
loopne
xchg
pop
imul
mov
pop
in
inc
add
inc
outsb
and
add
jmp
addb
push
lods
ret
loopne
notl
adc
add
add
add
push
add
add
sub
add
add
adc
iret
data16
call
add
mov
shrl
add
stc
cmp
filds
add
add
jno
jecxz
sub
add
lcall
jb
fsts
mov
pop
xchg
sbb
add
push
add
imul
add
sub
nop
add
add
mov
std
xor
add
push
add
les
xchg
add
mov
cmc
add
xor
sub
mov
add
xor
inc
in
inc
add
add
mov
or
shr
or
adc
cmp
shll
cmc
loopne
jns
addb
jecxz
add
add
test
cwtl
cmp
pop
addb
rolb
push
int3
addb
or
stc
xchg
or
add
add
add
add
mov
add
push
cwtl
mov
jp
add
add
adc
mov
or
push
les
inc
add
in
lea
add
or
and
dec
sub
add
movb
add
add
add
add
xchg
fs
fistps
cwtl
pop
mov
outsl
sbb
in
fsubs
or
imul
mov
add
add
mov
add
mov
mov
icebp
pop
mov
add
out
pusha
add
or
pop
jle
aad
pop
fimull
clc
xchg
add
add
repnz
add
xor
add
add
add
in
out
cmp
xchg
add
dec
out
or
add
je
and
mov
xchg
add
add
add
rolb
add
sbb
popl
add
movb
add
and
mov
add
fisttpll
cmp
add
loop
orl
ljmp
xor
mov
or
iret
ljmp
addb
outsb
add
mov
rolb
fabs
stc
fadds
aaa
jle
insb
or
add
push
add
and
pop
push
add
bound
mov
adc
mov
imul
insb
lea
or
inc
add
add
fcmove
add
add
add
sub
stos
out
js
add
add
popa
jno
pop
in
rolb
fwait
push
call
add
rolb
xchg
add
add
add
aaa
dec
cmp
jle
call
adc
lahf
arpl
xor
std
stc
insl
addr16
rolb
add
mov
lods
mov
pushf
psrlw
les
fbstp
add
jnp
enter
jmp
add
dec
mov
sbb
add
add
nop
add
add
add
call
add
add
mov
aaa
jecxz
testb
jae
fucomi
aam
adc
les
test
mov
add
push
or
repz
inc
push
add
add
movsb
add
sbb
add
test
push
add
xor
add
xlat
dec
adc
mov
out
add
add
inc
add
les
sar
insl
shrl
mov
xchg
mov
mov
mov
add
add
arpl
xchg
push
add
add
test
push
add
adc
mov
and
add
push
sets
sahf
mov
add
xchg
ficompl
jns
add
add
add
lar
mov
dec
test
add
addr16
add
or
add
add
rcl
add
mov
movb
sub
push
fstpt
pop
adc
cmpsl
sbb
add
adc
scas
push
add
and
sbb
add
jne
cmp
or
add
adc
cs
sti
jl
movb
add
scas
aam
pop
sub
adc
jecxz
add
add
add
sbb
inc
cltd
cmp
outsb
add
jecxz
jmp
mov
cltd
out
test
imul
add
out
mov
ja
add
mov
pop
shll
lods
inc
jae
movsb
add
sti
scas
mov
jae
jg
movsb
add
lods
aaa
or
inc
adc
fmuls
mov
pop
mov
add
push
xor
rolb
mov
xchg
out
insb
int3
inc
add
pop
dec
ljmp
add
add
add
mov
inc
add
and
mov
into
mov
mov
push
add
sbb
dec
xchg
fsubp
fs
xchg
add
ret
cli
insb
cli
pop
add
adc
or
scas
leave
pop
xchg
add
or
push
sbb
add
stos
cwtl
daa
icebp
mov
jmp
addb
call
cltd
jnp
mov
fstpl
rolb
and
mov
mov
faddl
cli
pushf
push
push
add
stc
cmp
sahf
xor
inc
add
movb
aad
cmp
jg
add
mov
pop
pop
addb
push
add
incb
sub
add
add
add
mov
std
mov
add
add
hlt
add
mov
jns
mov
xchg
roll
rcl
add
add
xor
adc
gs
fisubs
clc
mov
lds
add
imul
sub
add
sub
adc
add
mov
loope
push
add
pop
mov
mov
loopne
adc
push
cmc
mov
add
adc
dec
fst
lds
add
add
dec
sti
mov
fcoms
jg
subl
add
lds
mull
mov
and
add
lret
sti
or
dec
shrl
pop
popf
rolb
add
rcrl
out
out
push
pop
dec
or
dec
jle
ret
add
add
add
sbb
hlt
add
pushf
inc
add
add
out
sti
xor
cwtl
or
int3
arpl
add
mov
add
test
mov
xchg
xlat
add
cmp
icebp
mov
stc
fists
push
push
add
hlt
add
push
add
test
xor
icebp
pop
out
cmc
lock
mov
cmp
add
fimull
in
add
lock
jno
mov
pushf
fdivrs
push
add
ljmp
adcl
add
push
int3
fdivl
add
addb
ljmp
cmp
add
add
lds
add
add
add
sahf
and
enter
pop
xlat
sbb
add
mov
inc
imul
add
add
aad
inc
add
pop
jno
cmp
push
add
jnp
dec
adc
add
cvtps2pd
xor
adc
js
add
das
add
jbe,pn
add
cmpsl
cmp
add
push
add
mov
imul
add
add
fildl
add
fcom
add
add
add
add
or
and
mov
ds
mov
stos
pop
rcrl
sub
inc
add
lea
fsubl
jg
add
sar
xlat
fs
add
arpl
mov
pusha
add
add
inc
add
imul
lcall
lock
movsb
add
mov
and
mov
add
rolb
rolb
mov
sbb
lods
shr
mov
xchg
aas
mov
subl
clc
and
or
addb
stc
lea
pop
enter
into
fildl
mov
jns
cli
stos
fiaddl
jg
and
cmpsl
add
mov
add
mov
add
add
mov
xchg
clc
cmp
add
sub
and
jge
mov
inc
adc
push
cmp
pop
add
mov
sub
add
add
add
mov
sub
push
call
mov
add
add
mov
enter
stc
sbb
push
jl
add
dec
fdivrl
add
xor
fidivrl
xor
mov
xor
jp
sti
int
mov
add
adc
add
in
jno
xor
add
push
in
add
inc
inc
add
mov
mov
pshufw
int3
push
xchg
cmp
popa
mov
lret
testb
add
dec
push
add
jge
cmp
lds
add
push
push
inc
add
dec
pop
jmp
inc
add
add
xor
lock
inc
fs
das
aas
pop
adc
cmpl
cmp
je
into
adc
add
imull
outsb
xchg
daa
outsb
out
mov
add
daa
mov
push
add
ret
rolb
movsl
movsb
add
add
pop
pop
popf
insl
mov
pop
xchg
mov
add
add
add
pop
loope
mov
test
inc
cmpsl
xor
popf
in
add
mov
aas
jp,pt
sub
sub
add
lods
jl
add
xchg
xor
push
add
lcall
add
xchg
add
popa
movb
add
add
add
add
out
in
adc
add
in
sbb
mov
fimuls
jecxz
jne
add
mov
pop
sti
xor
or
xor
std
lret
sti
adc
jae
xchg
in
inc
andl
dec
mov
and
mov
or
adc
hlt
add
push
or
mov
mov
out
inc
add
add
testb
dec
dec
repz
pusha
add
push
add
cmp
int3
push
lret
push
add
std
sti
lcall
lahf
out
clflush
fs
mov
pop
pop
ljmp
jge
add
push
xchg
mov
or
add
mov
add
orl
movsl
fidivrl
add
mov
add
jb
xchg
loope
add
out
testb
add
add
ljmp
test
jnp
or
xchg
loop
xor
mov
or
add
cmp
add
add
insb
rolb
mov
cmp
lahf
jle
add
add
jge
pop
pop
int
out
ja
push
add
pop
push
add
pop
xchg
add
add
sbbl
sub
mov
loop
iret
add
add
in
jecxz
sub
fwait
out
movsb
add
movsb
add
add
add
jo
fildl
add
cmp
xor
les
sub
lock
add
test
xchg
add
in
fisubl
pusha
add
movsb
add
mov
add
xchg
add
add
iret
lea
fldcw
add
xchg
nop
add
jo
mov
xchg
loop
stc
sbb
fdivrl
mov
fwait
lcall
add
xor
adc
add
and
mov
fdivs
inc
add
bound
mov
mov
mov
and
mov
cmpsb
add
xchg
add
jle,pn
add
lret
lea
movsb
add
mov
ja
cmp
das
test
add
mov
add
test
lea
push
into
enter
add
push
cmpsl
mov
jae
mov
mov
add
and
mov
sub
clc
mov
pop
add
add
add
aam
dec
jp
enter
mov
fsub
cmp
loope
add
out
movb
pop
loop
jo
rolb
push
nop
add
int3
mov
add
add
add
fisttpl
and
mov
fdivrs
fimuls
loop
lods
mov
jg
add
add
push
add
adcl
les
pop
imull
movb
mov
add
add
mov
pop
lock
pop
cld
ret
sahf
jmp
add
inc
add
imul
mov
add
cmp
lahf
mov
mov
jae
pop
add
mov
test
rcrl
add
add
push
add
pop
movsb
add
add
add
testb
mov
notl
add
cmp
cmp
inc
add
mov
addb
dec
pop
aam
sbb
add
pushf
jmp
bound
mov
cmp
repz
out
add
icebp
cmp
push
insl
addb
add
add
add
mov
lods
mov
add
cmp
xor
pop
cmp
add
add
add
add
jg
mov
jle
add
sbb
rolb
push
add
and
mov
mov
add
add
fbld
rolb
cltd
mov
test
jae
rolb
sbb
add
add
sub
add
mov
pop
rolb
std
cmp
add
js
xor
sbb
jmp
add
add
and
roll
cmp
mov
lret
lcall
adc
mov
or
mov
add
add
add
movb
repz
add
aaa
mov
or
sbb
jmp
jle
hlt
add
add
xchg
outsb
daa
push
fwait
add
push
cmp
in
dec
jge
ljmp
into
xchg
push
add
add
add
adc
xor
aad
push
add
pop
xchg
add
in
mov
in
jg
jge
loopne
lods
adc
ret
repnz
push
aaa
inc
jg
fwait
pop
mov
fs
or
jl
mov
jg
test
add
icebp
mov
mov
add
repnz
pop
mov
adc
fwait
mov
bound
mov
gs
daa
test
inc
add
lahf
inc
add
icebp
mov
push
add
fisubl
and
insb
shll
sbb
xchg
add
add
call
in
add
mov
decb
pop
lcall
cmp
add
lea
dec
inc
add
mov
add
mov
imul
push
add
add
jmp
cmpsb
add
add
add
and
mov
shrl
lods
add
mov
sahf
adc
orl
or
add
and
dec
pop
mov
shl
add
mov
push
out
mov
add
adc
int3
mov
in
and
test
mov
sub
aam
jb
mov
in
mov
push
add
js
into
rcl
add
test
js
std
push
add
cmp
add
dec
jmp
pushf
sbbl
pop
mov
je
enter
dec
fninit
pop
test
push
add
add
sbb
inc
xor
mov
add
cli
ror
in
sub
mov
movl
repz
mov
sbb
loopne
adc
mov
xchg
add
xchg
add
add
nop
add
adc
test
test
mov
enter
in
add
add
mov
decb
adcl
sub
add
test
je
jne
add
add
push
add
call
pop
popl
add
xor
rolb
flds
and
das
jb
jl
add
add
pusha
add
add
add
add
add
fwait
mov
popa
icebp
clc
cltd
mov
bound
mov
add
mov
les
rolb
iret
xchg
add
loopne
add
cmp
jl
shrl
add
hlt
add
pop
cwtl
mov
add
add
add
imul
add
adc
add
sbb
mov
inc
add
or
mov
add
add
add
out
jle
mov
dec
jbe
mov
add
add
loope
and
roll
jle
add
aas
inc
scas
and
cmp
add
mov
popl
add
sub
add
add
mov
add
add
add
add
push
add
add
sbb
add
mov
dec
lahf
and
dec
xchg
add
add
roll
add
cmp
ret
les
adc
dec
mov
add
insl
setnp
add
add
pop
xor
pop
dec
xchg
stos
add
rcrl
add
je
adc
sbb
inc
add
add
add
mov
les
mov
push
add
rolb
test
add
jl
add
add
add
insb
repnz
jno
rcll
add
push
lret
cmp
push
add
bound
mov
add
add
inc
xchg
add
add
add
xor
mov
jbe
xchg
add
popa
cmpsb
add
xor
hlt
add
fwait
mov
cmp
xlat
xor
pop
leave
cltd
sahf
add
rorl
clc
inc
add
aas
xchg
les
gs
xor
in
inc
add
add
add
call
add
outsb
add
mov
adc
and
mov
lret
call
pminsw
xor
stos
sub
popf
addb
or
add
imul
clc
inc
add
mov
add
fadd
add
outsl
cld
mov
cmpl
std
dec
sub
out
je
mov
mov
cmp
fxch
adc
dec
and
decb
jmp
add
add
add
or
add
fsubrs
xor
jae
dec
rolb
inc
add
push
lret
jno
add
ljmp
sub
lret
pop
ljmp
fdivr
add
testb
popf
stos
sbb
add
jge
and
mov
xor
jo
leave
nop
add
xor
xchg
clc
sub
add
add
add
lea
arpl
test
add
cmp
in
stc
repz
push
xor
sbb
add
add
pop
xor
mov
add
xor
arpl
mov
movsbl
dec
jo
jae
add
xorl
mov
outsb
or
pop
sbb
add
in
enter
xor
pop
xor
inc
std
das
aam
testb
add
add
cmpsl
shrl
add
add
inc
aaa
pop
dec
pop
rolb
and
jae
add
test
fwait
test
mov
mov
dec
test
or
mov
lcall
dec
jmp
aaa
repnz
add
addb
loopne
fistpll
fwait
pop
mov
call
mov
movl
add
jge
lcall
adc
sub
into
and
rolb
addr16
dec
fucompp
test
mov
stc
sbb
lock
popa
movb
add
rolb
push
add
pop
jns
imul
and
xchg
ret
gs
ret
sbb
inc
add
add
pop
jb
push
sarl
jecxz
mov
add
stos
stos
pop
and
mov
add
and
mov
stc
fwait
ret
add
xor
mov
add
js
add
mov
sarl
test
nop
add
push
add
push
pusha
add
add
add
add
test
ret
dec
add
add
aaa
loope
add
xor
lods
lds
aam
adc
add
je
aad
add
roll
mov
clc
and
sbb
cld
lahf
dec
test
lret
lods
mov
sub
add
add
xchg
lret
mov
daa
mov
testl
scas
pop
rolb
into
sbb
xchg
add
ffree
flds
add
adc
xor
arpl
add
sbb
add
mov
mov
sub
add
movsb
add
pusha
add
mov
inc
mov
out
ret
pop
aam
xchg
rolb
cmc
rolb
test
push
mov
sbb
push
outsb
inc
add
inc
add
out
jns
lods
add
mov
fdivs
stc
int3
insb
adc
add
add
push
sbb
popa
adc
fcoms
sbb
mov
ret
shll
pusha
add
mov
jae
sbb
hlt
add
and
mov
fildll
in
push
in
fstp
xor
mov
mov
bound
mov
xlat
cs
or
or
sahf
cmc
dec
add
mov
add
and
add
sub
mov
dec
sti
push
add
add
pop
sub
add
add
mov
mov
add
add
or
jp
push
shll
pop
test
inc
or
add
push
and
popa
and
mov
jb
nop
add
add
adc
push
add
or
sbb
lahf
lahf
xchg
mov
rolb
rolb
test
cltd
in
adc
jb
loope
jge
gs
iret
inc
movsl
icebp
daa
mov
mov
add
insb
test
add
jle
add
movsl
enter
fsub
add
aam
aaa
sub
add
add
mov
xor
dec
push
inc
add
cmp
cmp
mov
add
add
add
sbb
inc
add
insb
and
mov
jns
add
add
jecxz
jns,pt
cwtl
test
sbb
dec
fisubrl
test
push
add
jne
rolb
imul
dec
push
add
jge
xchg
add
add
fstpl
leave
mov
sub
pushf
inc
xor
and
test
jmp
push
add
add
add
mov
add
mov
pop
rcll
pop
out
mov
add
add
cwtl
cli
pop
pop
repz
cmpsl
lahf
int
add
dec
sahf
adc
adc
add
rolb
xor
push
and
mov
add
in
cmp
adc
mov
mov
push
lcall
and
xlat
inc
xor
stos
pop
rolb
push
add
cmpsb
add
jne
inc
add
cmp
cmp
add
add
movsb
add
add
pop
popf
aad
into
jbe
in
xchg
xor
testb
push
out
inc
arpl
add
add
mov
cmpl
jb
ja
cmc
loop,pt
rolb
in
jecxz
xchg
adc
mov
add
add
jge
and
rolb
add
cmp
add
movsl
mov
arpl
add
clc
xchg
add
add
add
push
sbb
add
add
or
enter
and
ljmp
xchg
in
adc
insl
inc
add
mov
mov
mov
stos
loope
pop
jge
les
or
push
add
add
orl
cs
ret
das
xchg
add
push
add
adc
mov
add
inc
imul
add
cmp
mov
add
add
pop
inc
add
imul
mov
add
add
mov
add
add
hlt
add
inc
add
rolb
add
in
lock
and
mov
or
add
insl
mov
xor
mov
in
mov
add
jmp
pop
cwtl
call
outsl
sbb
data16
pop
sbb
inc
add
add
add
push
xchg
sub
add
clc
pop
mov
bound
mov
stos
idiv
mov
bound
mov
adc
movb
nop
add
bound
mov
add
mov
cli
lcall
or
push
add
out
cmp
add
loopne
ret
push
add
jecxz
fstpt
mov
xchg
pop
jg
and
xchg
mov
dec
mov
fwait
shll
jecxz
movzbl
je
aam
aam
jmp
add
fisubrl
mov
fisubrl
xchg
sbb
pop
jecxz
cld
xor
jg
mov
sbb
add
add
mov
dec
fbld
mov
mov
movsl
repz
add
repz
mov
addb
add
lds
jmp
fistpll
jns
add
add
in
mov
mov
mov
push
lret
add
add
add
mov
rolb
jmp
add
jmp
inc
push
rcrl
mov
rolb
push
add
dec
inc
or
or
mov
mov
mov
dec
jo
aam
lret
stos
lods
or
xorl
xor
xchg
pop
mov
je
and
ja
pushf
fildl
add
and
mov
sbb
add
lret
call
push
add
add
mov
lods
stc
scas
jmp
add
push
add
mov
rolb
daa
adc
enter
cli
and
lods
ret
sub
cltd
cmp
add
pop
pop
loop
pushf
mov
dec
mov
xchg
add
fldln2
mov
test
jl
loopne
cld
dec
dec
loop
movsl
dec
sbb
or
or
in
inc
dec
or
mov
aad
add
popa
js
loopne
rolb
pushf
out
les
cli
addb
push
add
add
add
imul
mov
add
add
ja
sbbl
add
movsl
xchg
add
lret
mov
add
cmp
add
add
add
mov
ljmp
add
add
add
push
add
shll
testb
add
push
add
js
sub
add
add
fdivr
sbb
in
int
add
mov
add
mov
push
add
add
add
out
mov
add
sahf
pop
adc
dec
aad
add
sub
mov
jge
add
pop
loope
jns
add
push
add
cmpsl
bound
mov
add
adc
pop
pop
int
push
fidivrl
add
jg
inc
add
movsl
cmp
and
inc
add
pop
leave
in
add
imul
jmp
push
and
mov
repz
mov
addb
add
add
inc
cmpl
dec
les
pop
int
inc
add
fnsave
bound
mov
repz
adc
cmpl
pop
add
mov
xor
push
mov
and
mov
adcl
mov
xor
inc
add
and
int
mov
es
sets
add
addr16
pop
sbb
scas
mov
scas
push
add
add
mov
nop
add
sbb
stc
or
rolb
or
dec
dec
mov
add
rolb
repz
push
ret
cmp
int
jbe
xchg
ret
nop
add
inc
lret
arpl
cmp
add
and
jmp
inc
add
dec
jecxz
mov
dec
mov
dec
jle
adc
pop
or
add
out
jg
pusha
add
clc
inc
add
add
push
sub
int
mov
push
add
add
add
mov
and
mov
cmp
jmp
outsl
mov
add
pop
popf
int
test
add
add
iret
or
dec
jb
xor
pushf
jnp
jae
or
inc
xor
std
lcall
ljmp
lock
add
and
adc
jle
add
xchg
mov
add
add
pop
pop
xlat
popf
xor
decl
and
jns
lcall
pop
mov
repz
sti
push
add
push
xor
out
das
movsl
data16
add
lret
lret
loope
clc
loope
ret
mov
aam
addb
stc
pop
sahf
bound
mov
fisubs
dec
repnz
add
mov
xchg
test
cmpsl
xor
cli
stos
push
js
add
mov
cmp
roll
add
rolb
mov
add
or
out
das
das
xchg
pusha
add
shll
add
int
push
add
cli
mov
cmc
ja
mov
sub
mov
cltd
add
jno
add
mov
pop
lods
add
add
or
into
gs
outsb
sbb
mov
dec
mov
fidivrs
sbb
add
fstpl
test
pusha
add
lcall
repnz
popf
jg
rcr
bound
mov
add
ja
clc
mov
xor
cmp
add
add
add
pop
push
add
inc
sub
repz
pop
cmp
mov
add
dec
jp
add
fimuls
out
mov
sbb
lock
mov
xchg
pop
aad
ficomps
xlat
jp
ret
sbb
add
add
add
fwait
sti
data16
fidivrl
cli
xor
xchg
stc
or
cli
sbb
add
mov
push
add
aam
cs
add
add
add
inc
add
repz
jl
out
imul
icebp
popf
or
inc
aad
cmp
add
adc
cmp
inc
add
add
push
add
mov
dec
xchg
bound
mov
push
jmp
addr16
rcr
sub
add
mov
jno
aaa
test
outsb
adc
imul
jmp
inc
add
mov
cmp
pushf
inc
outsb
aas
ja
add
mov
test
out
arpl
xchg
add
add
add
jne
add
adc
mov
adc
stos
xchg
jmp
int
popa
add
fst
jp
or
pop
and
mov
sbb
and
add
jmp
je
lret
add
sub
int
xchg
add
stos
aas
push
add
addb
add
jae
cltd
jbe
push
add
add
lahf
mov
jb
mov
sbb
push
add
sbb
or
std
push
dec
nop
add
add
scas
dec
pop
movb
cmpl
pop
dec
jle
icebp
jb
cmc
fistpl
cmp
add
add
add
add
mov
add
xor
mov
add
add
add
mov
push
add
add
sahf
mov
xor
rolb
imul
sbbl
add
fsubl
push
add
addb
leave
scas
pop
sbb
loop
push
add
mov
ret
test
jns
addb
mov
fbld
push
add
rolb
inc
add
add
xor
daa
pop
jns
mov
jb
jecxz
mov
std
jl
add
stc
stc
adc
int3
insb
and
stos
or
add
cli
int
add
int
std
sub
sti
movb
jbe
addr16
sub
stos
xchg
add
xor
cmp
jp
cmp
add
push
sahf
int3
sahf
adc
add
mov
add
adc
in
testb
add
ret
add
or
cmp
cmp
movsb
add
add
into
pop
cmp
stc
nop
add
dec
decb
pop
aas
pop
sbb
mov
roll
jae
add
add
imul
push
add
out
pop
enter
pop
and
push
add
pusha
add
cmpsl
pop
mov
add
add
loop
inc
add
add
sub
lock
xor
mov
add
sub
jl
and
in
scas
pop
scas
mov
ret
repnz
inc
in
sub
xchg
add
cmp
mov
pop
out
repz
add
add
sahf
aam
das
fstpl
xchg
add
dec
mov
dec
pop
stos
call
mov
mov
xchg
add
xchg
pop
jnp
add
mov
ret
pop
push
imul
cltd
in
mov
iret
add
nop
add
add
daa
sbb
out
add
push
add
sub
add
add
add
push
add
add
jno,pt
cwtl
jb
loopne
pop
mov
cmpsl
in
ficoms
aas
xchg
scas
xchg
push
add
mov
call
add
imul
add
add
pop
out
test
pop
loopne
sbb
aas
xor
inc
mov
add
fsubrs
call
bound
mov
sarl
add
jne
mov
sub
in
xor
mov
cwtl
and
scas
repnz
pop
add
and
outsb
push
add
fwait
xor
adc
lods
call
add
add
add
add
out
and
add
pop
movsb
add
xchg
sub
fwait
sbbl
test
enter
std
cmp
and
mov
or
pushf
sub
bound
mov
push
arpl
insl
or
int
lods
aad
add
cmp
sub
mov
add
and
mov
jno
adc
ds
dec
mov
out
pushf
je
xor
and
mov
xchg
xchg
ds
add
adc
fs
add
mov
inc
add
add
hlt
add
add
adc
push
gs
add
in
adc
mov
add
cmp
sbb
cltd
cmp
add
sbbl
add
sub
adc
add
add
fcompl
dec
aam
push
push
add
lods
sbb
sbb
lret
add
and
add
push
js
add
or
add
add
data16
add
pop
jp
xchg
adc
stos
cld
add
jl
add
add
add
add
mov
test
hlt
add
or
aas
lret
mov
pushf
outsb
outsl
or
nop
add
dec
jle
das
rolb
push
mov
je
jl
mov
push
mov
push
add
inc
clc
les
pop
push
and
fsubr
cmpsl
out
cmp
movb
stc
jg
imul
and
cld
out
sub
add
inc
mov
pop
pusha
add
add
outsl
adc
mov
add
and
mov
je
jnp
clc
inc
add
add
ja
cmp
je
jl
lds
add
mov
rolb
pop
and
dec
pop
jmp
mov
mov
fisubl
and
lods
addr16
js
jecxz
das
call
add
add
lds
clc
stos
sbb
xor
xchg
add
mov
push
adc
cmpsl
lea
push
add
test
add
add
and
sub
add
lods
cmp
outsl
cltd
mov
leave
push
add
add
push
call
add
add
add
or
mov
pop
dec
es
add
inc
add
mov
inc
add
and
mov
mov
add
add
dec
int3
jo
scas
jl
test
in
mov
jecxz
stc
push
js
dec
lods
cmp
jg
pop
ffreep
sub
outsl
and
push
adc
add
loopne
sub
aad
cmp
cmp
add
push
add
add
stc
out
mov
jb
loopne
inc
cmp
push
add
sub
lahf
xchg
and
sub
xchg
add
fisttps
cli
and
pusha
add
out
mov
push
stos
addl
pushf
and
jbe
enter
add
add
pop
jns
imul
fldenv
cmpsl
lods
shll
add
add
add
stos
push
addb
add
lock
add
cmp
mov
sbb
loop
testb
xchg
add
out
jecxz
out
or
testl
or
add
or
fwait
pop
daa
mov
hlt
add
icebp
and
mov
popl
pop
push
xor
mov
add
cmp
push
add
scas
mov
pop
stc
std
xor
add
adc
cld
jg
mov
cmpsl
mov
or
adc
cmp
arpl
cltd
or
add
add
fcomps
incb
mov
add
add
clc
scas
bound
mov
add
inc
add
cmp
sub
cwtl
push
ljmp
xlat
stos
aam
sub
mov
cli
imul
lock
pop
jmp
insl
sub
fnstcw
lods
dec
test
add
add
jne
test
roll
sbb
xchg
add
add
pop
push
xor
push
aad
fwait
test
push
addb
cld
fiadds
mov
push
scas
ret
stos
dec
int3
mov
push
and
jge
aad
add
pop
std
out
mov
jne
jae
jl
add
add
js
jmp
add
push
add
sub
imul
rolb
add
add
push
or
jno
js
lret
jns
add
stos
push
in
rep
enter
add
nop
add
lahf
cmp
mov
cltd
scas
pusha
add
sahf
mov
sbbl
xchg
add
add
cmpsb
add
icebp
push
add
xor
cmpsb
add
inc
scas
jo
cmp
add
in
mov
adc
addr16
add
mov
add
add
xchg
jae
add
add
jg
sub
in
xchg
add
sar
pop
xchg
add
mov
add
mov
lods
stos
arpl
add
mov
je
mov
lahf
lods
popa
fistpl
add
adc
mov
fdivrl
dec
loop,pn
dec
test
add
add
add
mov
add
mov
push
jns
stos
mov
mov
stc
out
mov
mov
fbld
mov
pop
cmp
fldt
add
loopne
lods
mov
out
inc
push
add
add
add
movsb
add
push
gs
xchg
add
sub
add
pop
gs
or
sahf
ljmp
pop
cmpsl
xchg
sub
xchg
inc
xor
cmp
xor
add
xchg
addb
gs
js
add
mov
add
pop
add
add
add
mov
inc
add
mov
add
inc
add
push
add
mov
leave
mov
adc
testb
aam
das
mov
add
pop
and
bound
mov
sub
les
scas
xchg
mov
add
adc
arpl
mov
add
and
push
mov
and
out
out
and
adc
test
fstl
adc
stc
out
add
add
hlt
add
jae
add
mov
push
add
add
out
add
pop
push
add
add
add
push
push
add
mov
mov
cmp
adc
xor
testb
xchg
push
push
add
test
add
jnp
mov
cmovnp
add
add
arpl
movb
sbb
loope
test
adc
mov
jmp
inc
add
mov
add
aad
aaa
or
jnp
push
rolb
add
out
push
add
add
mov
lds
shrl
push
add
rolb
sti
mov
lret
addb
pop
pushf
imul
icebp
movb
jae
add
cltd
fadds
jb
into
adc
add
inc
test
daa
outsl
pcmpeqd
mov
adc
lcall
loopne
dec
add
mov
add
push
push
dec
repnz
sub
inc
das
int3
std
rorl
and
mov
call
fsubr
sub
inc
add
jge
mov
repz
insl
push
in
mov
pop
mov
in
add
xor
rolb
bound
mov
fdecstp
add
jmp
cltd
pop
add
decl
pop
in
mov
push
fnstsw
xchg
pop
call
xchg
je
push
sub
inc
add
xor
mov
xlat
dec
sub
aas
xchg
add
hlt
add
add
pop
and
xor
aam
lret
mov
in
jmp
mov
into
loopne
and
mov
mov
and
add
xlat
fcmovnb
add
pop
shll
xchg
add
cmpsl
or
add
fwait
jbe
and
mov
scas
inc
jmp
pop
and
mov
add
add
add
fnsave
add
sub
repnz
mov
rcll
sub
push
add
dec
mov
loopne
jo
dec
push
adc
scas
cmp
mov
icebp
lods
fnstsw
add
add
dec
leave
and
mov
js
add
lret
xor
sub
ds
add
inc
movb
pop
push
push
add
outsb
hlt
add
add
mov
arpl
jo
jno
sbb
movzwl
mov
pop
mov
add
cltd
or
lock
add
sub
add
mov
jae
jle
add
enter
sub
sahf
and
jne
cmp
add
iret
cltd
push
xchg
xchg
and
mov
pushf
sbb
xor
jno
push
add
movsl
ret
or
mov
ret
mov
repnz
add
repz
mov
jle
and
lcall
call
popf
push
data16
mov
pushf
sbb
jns
add
lahf
ret
pop
iret
or
mov
add
and
cs
xchg
rolb
or
cmpsl
mov
adc
add
add
add
add
in
insb
push
mov
hlt
add
mov
dec
or
add
mov
mov
add
lods
dec
das
push
sub
mov
add
jno
cwtl
jo
pop
bound
mov
add
sbb
mov
inc
add
add
xor
call
jnp
stc
fwait
push
out
mov
add
and
mov
add
add
mov
add
add
add
add
add
xor
mov
xchg
addr16
add
inc
add
fld
add
in
scas
and
call
scas
leave
xchg
add
outsl
xor
testb
add
pushf
mov
ljmp
imul
lahf
cmpsl
xor
addb
add
inc
lea
mov
fwait
xchg
add
jecxz
xor
repz
outsl
adc
add
push
lea
scas
adc
addr16
add
dec
mov
imul
mov
add
dec
movsl
push
add
mov
das
xchg
add
fisubrs
add
push
into
mov
jae
sub
ret
push
out
add
push
add
dec
rolb
adc
add
add
sub
mov
jp
jg
sub
sub
add
inc
pop
mov
push
add
mov
xor
mov
push
dec
mov
add
insb
or
call
xor
movb
scas
lret
inc
add
mov
and
mov
add
repnz
fcompl
add
add
add
das
jno
popf
data16
mov
xlat
daa
push
add
int3
out
mov
mov
add
add
add
mov
push
add
xor
dec
scas
loop
jle
mov
dec
addr16
jno
jmp
add
add
mov
in
adc
and
mov
cmp
lods
xchg
pop
iret
sahf
lock
add
das
adc
dec
jbe
xor
push
add
mov
add
add
cmpsb
add
add
push
add
add
icebp
iret
arpl
movb
fisubrs
in
fwait
dec
ficoml
insb
inc
add
adc
push
add
add
add
jp
xchg
add
xchg
aam
je
mov
adc
jb
arpl
das
xor
sti
data16
hlt
add
clc
sub
aaa
sub
xor
or
fmull
daa
movsl
cmp
mov
jg
jb
sti
cmpsb
add
in
outsb
sbb
movsl
ds
out
ds
add
add
mov
add
add
cmp
sub
cmp
jecxz
sahf
in
add
sub
je
and
mov
dec
push
add
lcall
add
dec
xchg
add
add
add
xchg
fsts
add
mov
les
scas
sti
aam
dec
imul
jge
jl
sub
iret
cmp
std
pop
or
fisubrs
notl
add
mov
call
pop
xor
out
stos
xchg
out
dec
mov
jno
bound
mov
add
mov
in
inc
add
decb
pop
inc
or
imul
std
out
push
outsl
xchg
add
push
add
shl
xchg
loop
ds
add
push
add
add
jmp
add
mov
popf
add
scas
xor
cld
lds
push
in
fcompl
mov
adc
xchg
ret
add
call
xor
xor
push
add
mov
ja
sti
testb
pop
test
je
push
push
add
addb
cmp
outsl
js
add
pop
jae
gs
repz
add
add
insl
push
add
adc
sbb
mov
add
int
addb
pop
adcl
nop
add
add
add
jns
xchg
sub
add
jl
repz
sar
std
and
mov
stos
scas
jp
add
add
loope
jo
movb
xor
lods
xchg
add
icebp
cld
xor
push
js
add
hlt
add
add
addb
jmp
or
add
cmpsb
add
add
cltd
outsl
mov
pushf
ret
mov
cli
fcomps
daa
addr16
shl
cltd
push
jge
mov
add
sbb
add
add
daa
data16
movb
add
add
pop
loope
add
incl
add
mov
jae
cs
add
mov
pop
push
test
push
add
jl
mov
push
outsb
movb
lcall
inc
add
jae
mov
add
lahf
pop
pop
ret
mov
into
inc
add
mov
jg
add
loopne
in
and
mov
mov
lcall
add
inc
jae
outsb
xchg
jne
mov
sbb
in
mov
xchg
add
cmp
add
dec
pop
mov
xorl
mov
push
add
lods
sti
pop
pop
arpl
call
cmp
ja
and
add
je
loopne
rolb
adc
adc
test
mov
aaa
mov
push
add
add
add
mov
mov
fsubs
adc
push
add
insb
int3
aas
add
scas
mov
add
add
insb
cmc
fisttpl
add
add
clc
jmp
cs
add
lock
jo
mov
movsl
add
adc
testb
lcall
aam
clc
dec
lahf
xchg
testb
sub
jg
xchg
add
mov
mov
gs
cli
mov
add
mov
cmp
mov
pop
add
add
sti
pop
pop
filds
les
sbb
mov
test
movsl
adc
ss
add
mov
cmpsl
xchg
add
mov
faddl
mov
lahf
pushf
push
add
add
push
inc
fidivrs
shll
mov
add
lret
ret
jge
je
mov
pop
negl
loop
mov
mov
movsb
add
push
rcll
mov
fdivs
add
add
std
inc
add
add
out
sbb
inc
in
cwtl
xchg
mov
and
pusha
add
vmovd
and
jns
incl
add
insb
stos
loop
movb
ret
add
add
add
add
andl
jo
sub
push
add
inc
add
add
mov
xchg
jo
inc
fidivrl
add
add
mov
out
bound
mov
rolb
loop
gs
add
pop
mov
add
cmpsl
int3
outsb
jmp
add
add
jae
add
mov
add
mov
add
xor
fwait
pop
jnp
mov
xchg
xchg
inc
add
fdivl
xchg
add
xor
add
push
arpl
mov
jnp
inc
add
add
push
add
add
cmp
loope
push
mov
push
into
add
mov
loope
add
add
push
add
and
jno
add
fisubl
adc
data16
add
mov
mov
sbb
add
cmp
movsb
add
movb
add
addr16
addr16
cs
dec
lret
repnz
jae
out
jle
mov
rolb
cmp
idivl
mov
sti
add
mov
sahf
lahf
cmp
xchg
cltd
rolb
add
sbb
ljmp
out
jae
add
outsb
out
jle
add
in
pop
mov
addb
mov
adc
movsb
add
add
mov
mov
out
ret
pop
push
add
aas
setp
add
add
sub
out
inc
xchg
repz
fdivr
stc
data16
cmpsl
xchg
jp
dec
movb
into
pop
adc
inc
add
mov
jl
add
pushf
fstps
scas
leave
cs
hlt
add
test
movsb
add
add
xchg
rolb
test
fldt
add
mov
add
add
loope
add
add
es
push
add
cld
add
outsb
xor
mov
fsubs
movnti
cli
jbe
lods
mov
add
das
jecxz
add
pop
test
std
xor
lret
cmpsl
les
mov
add
cmp
hlt
add
or
add
add
popa
adc
lods
addb
add
add
add
roll
push
add
xchg
jbe
sbb
mov
add
push
cli
insl
push
mov
push
xchg
pop
into
int3
addb
movsb
add
xchg
int3
addl
mov
add
std
cmc
rcl
outsl
aad
dec
xor
add
add
add
testl
cmp
xor
and
pop
or
stos
gs
orl
cltd
mov
mov
mov
mov
pop
mov
pop
push
sbb
lret
add
mov
enter
cmc
fidivrl
add
data16
sbb
add
aad
jo
xchg
loope
push
push
add
sub
mov
sub
mov
or
shll
mov
into
ds
lret
inc
add
add
mov
icebp
unpckhps
mov
add
add
sub
lock
jp
aad
call
add
add
push
sarl
sub
testb
add
icebp
les
test
add
lds
je
mov
cmc
pop
jg
add
mov
sahf
incl
movb
add
pop
fdivrp
in
pushf
xor
inc
shl
test
sbb
push
cs
adc
add
in
jle
add
sahf
lret
lods
icebp
xchg
add
insb
lret
xor
fldt
add
and
mov
add
fisubs
add
cmp
add
jo
pop
xor
sarl
add
mov
negl
or
add
and
dec
pusha
add
inc
jne
mov
int3
adc
jle
sarl
add
sbb
mov
sbb
inc
lods
dec
and
jg
add
add
out
stc
aam
add
mov
add
stc
mov
and
in
mov
mov
add
mov
mov
and
ljmp
pop
add
add
push
xor
je
in
adc
mov
cmpsl
pop
sahf
pop
lcall
inc
inc
mov
xchg
add
popf
arpl
mov
add
add
mov
jecxz,pt
cltd
fisubrl
mov
addb
add
cmp
add
cld
jns
push
add
cmp
pop
mov
mov
mov
xchg
add
jns
push
add
xchg
sub
inc
mov
add
xchg
add
inc
add
sub
sbb
repnz
pushl
mov
daa
push
add
lret
dec
int3
stos
pop
repnz
adc
rolb
sbb
jle
add
dec
scas
cmp
dec
xchg
jnp
dec
loope
arpl
add
push
ret
sar
mov
inc
negl
and
mov
stos
out
sbb
or
add
hlt
add
pop
pop
mov
xchg
add
fcomp
xchg
push
data16
std
lahf
cld
jmp
adc
push
int3
and
mov
fisttpl
pop
into
out
xchg
inc
negl
jp
push
add
addb
dec
loope
icebp
and
add
add
mov
inc
add
add
lods
pushf
addr16
punpckhwd
negl
pop
and
mov
rolb
jno
and
stos
repnz
jmp
pop
mov
jae
add
rolb
xchg
jge
add
add
add
xor
push
mov
adc
inc
xor
mov
add
xor
mov
rcrl
fadds
dec
sub
lods
stc
xlat
enter
push
add
add
test
std
mov
pop
mov
into
data16
movb
and
aam
loope
jns
mov
jecxz
repnz
call
pop
jl
add
pop
testl
add
add
sbb
out
ljmp
cs
add
stos
cmp
add
add
outsb
dec
scas
ljmp
mov
adcl
xlat
jbe
inc
std
mov
imul
add
mov
sub
mov
jp
pop
lods
inc
icebp
add
dec
push
add
fdivs
add
sbb
add
pop
gs
push
dec
mov
test
xchg
add
data16
and
mov
les
lret
nop
add
or
into
add
cmp
add
add
cmp
add
mov
lods
pop
add
mov
stc
repnz
add
add
dec
test
loop
pop
notl
mov
inc
xchg
push
xchg
add
mov
jbe
adc
xor
loop
call
cmp
add
sub
pop
jne
ret
ljmp
xchg
add
mov
add
nop
add
push
jge
sbb
add
gs
mov
mov
js
add
add
mov
sub
mov
xchg
in
inc
add
scas
jle
add
mov
push
cmp
add
stc
mov
pop
mov
xchg
xchg
add
arpl
mov
jno
adc
inc
add
mov
cmp
sbb
pop
test
jae
add
cmpsb
add
daa
mov
sbb
testb
or
add
add
add
mov
and
mov
inc
add
push
add
movb
push
add
movsl
mov
mov
scas
das
xor
iret
pop
stc
dec
cmc
push
mov
add
jo
sub
loop
xor
add
out
cmpsb
add
mov
add
call
loop
and
hlt
add
jno
imul
or
mov
fwait
push
add
testb
int3
lea
adc
add
xchg
pop
cmp
fisttpll
loop
aad
in
jb
sbb
push
cmp
add
test
add
dec
sub
stc
mov
dec
sub
pop
outsb
les
enter
ja
enter
jo
hlt
add
add
or
test
daa
cmp
int3
out
sub
push
cmp
shll
add
out
xor
jge
add
lret
mov
mov
das
pop
loopne
add
mov
inc
push
stos
mov
jl
mov
movb
cmc
jnp
jnp
sbb
out
loopne
sbb
movsl
pop
mov
add
xchg
jecxz
jmp
and
iret
adc
jp
sti
cmp
mov
les
mov
addr16
add
jae
push
add
add
add
mov
cmpsl
add
mov
mov
lahf
pusha
add
add
shl
pop
mov
jo
in
and
stc
scas
inc
stos
dec
pushf
xchg
add
add
add
jp
add
mov
lods
ret
add
ja
add
fisubl
mov
icebp
scas
pop
sbb
cmp
scas
jae
push
lds
mov
xor
adc
addb
mov
dec
ss
sub
int
jle
sbb
mov
add
adc
add
add
add
dec
insb
movb
add
xchg
xlat
inc
add
mov
out
add
fmuls
inc
add
pop
xchg
data16
cli
add
add
add
and
mov
je
pop
mov
add
outsl
lret
xchg
insb
test
insl
les
dec
push
add
je
cld
push
push
lret
jmp
arpl
add
add
rolb
sub
xor
aam
in
rolb
xor
orl
or
movb
cmp
dec
insl
lret
in
adc
pop
xchg
dec
negl
popa
cli
jg
add
mov
or
and
xchg
add
adc
test
mov
sbb
dec
call
dec
rcl
mov
xchg
add
mov
add
sbb
add
push
dec
outsb
enter
add
mov
test
add
and
rorl
add
stos
icebp
or
orl
mov
and
xor
cmp
add
pusha
add
out
add
into
or
add
adc
cmp
push
add
xor
xor
movb
lods
push
add
dec
mov
rolb
sub
mov
add
add
pop
pusha
add
lcall
popf
sar
stc
jecxz
aam
or
push
add
stos
pop
cmp
rcl
add
add
or
cli
jl
sub
add
add
add
xchg
add
jg
stos
sub
and
pop
pushf
cmp
mov
imul
add
dec
testl
add
push
or
add
aad
nop
add
add
stos
xchg
test
add
mov
addb
mov
add
dec
std
cmp
adc
add
mov
cmc
xor
mov
xchg
add
mov
fidivl
add
cmpsl
lock
addb
add
add
lods
xchg
in
aaa
inc
dec
loopne
mov
xchg
pop
sub
out
jns
xchg
add
mov
mov
add
ljmp
add
add
push
add
int
or
mov
add
movb
imul
clc
add
imul
rolb
cmpsl
push
add
cld
das
jno
stos
imul
mov
and
mov
mov
ret
enter
xor
mov
rolb
ss
addb
int3
cvtpi2ps
testl
enter
add
repz
rolb
test
add
xchg
loopne
dec
in
mov
xor
pop
jle
mov
add
scas
mov
sbb
add
push
je
adc
mov
popa
fdivp
sub
or
fistl
inc
stc
or
add
aas
cltd
inc
add
pop
and
mov
add
rcr
cmc
jl
mov
mov
in
lods
arpl
leave
cmp
add
call
mov
mov
aaa
pop
testb
add
and
rolb
push
cmpsb
add
xchg
add
rorl
cli
pop
mov
ds
js
test
xor
movsb
add
daa
mov
push
aad
and
mov
xor
add
imul
pushf
push
outsb
aas
xchg
add
sbb
and
jle
mov
outsl
repnz
mov
add
add
add
add
in
lock
sbb
pop
rolb
aas
pop
inc
mov
adc
add
and
mov
add
scas
sti
push
add
test
xor
add
add
jmp
dec
data16
add
repz
pushf
hlt
add
push
add
add
fdivs
add
push
cltd
clc
jmp
addb
inc
dec
mov
daa
out
add
add
add
dec
xchg
xchg
inc
add
scas
mov
addb
adc
add
adc
addb
jmp
add
xchg
add
dec
pop
arpl
add
cltd
xchg
lock
lods
fadds
add
add
xchg
add
dec
xor
add
cmpsl
ret
and
inc
sbb
mov
adc
iret
dec
mov
testb
add
mov
xlat
insb
mov
sub
add
sti
test
scas
out
outsb
fldcw
pop
mov
push
add
loop
mov
mov
push
xor
add
lea
rolb
in
lret
add
cmpsb
add
ret
and
mov
mov
ja
or
dec
jo
mov
adc
add
cli
jecxz
mov
scas
jo
add
mov
add
out
jl
repnz
fldl2e
sub
repnz
add
inc
add
repnz
imul
jo
les
mov
xor
mov
out
lea
sbb
add
into
jle
adc
jmp
mov
mov
data16
add
or
xchg
cli
mov
sub
stos
leave
jb
inc
add
push
jp
add
jae
inc
add
rolb
add
icebp
data16
push
jecxz
add
add
push
add
jno
sub
add
aas
js
add
sbb
pushf
inc
rolb
cmovae
add
jl
cmp
popf
cmpsl
shll
add
std
jl
xchg
add
xor
cmp
mov
mov
xlat
push
add
add
cmp
add
add
insl
aas
mov
daa
pop
add
add
mov
test
add
pop
addb
add
add
or
stc
dec
mov
add
add
scas
fimull
pop
jnp
mov
dec
in
inc
add
mov
mov
jns
fldenv
add
add
and
add
pop
dec
xlat
movsl
aad
add
xor
lods
aad
xor
sbb
mov
mov
sub
mov
addb
imul
out
fsubp
int
add
add
filds
mov
add
fistpl
xchg
add
ret
fwait
add
add
mov
mov
mov
fucomip
add
dec
mov
sbb
mov
test
jmp
cmpsb
add
mov
inc
add
enter
add
xor
ja
rolb
lods
push
jle
push
dec
jno
xor
loope
imul
add
add
push
add
imull
je
push
cmp
fildll
cmpsb
add
movb
mov
cmp
add
add
call
fwait
adc
sbb
scas
add
mov
mov
add
add
xchg
pop
dec
decb
add
pop
cld
movb
int
punpcklbw
mov
sub
fmuls
add
inc
add
lock
push
addl
mov
or
movb
adc
mov
in
or
fcompl
mov
loop
or
ljmp
or
sub
jg
xchg
sti
xchg
dec
inc
mov
lret
scas
jmp
pusha
add
js
fmul
out
add
add
lss
shr
lds
fdivr
out
add
stos
inc
add
testb
mov
inc
icebp
pop
mov
and
mov
clc
aas
rolb
jno
lea
stos
xor
xchg
sti
cmc
mov
and
mov
dec
sti
push
test
xchg
xchg
add
in
leave
bound
mov
idiv
push
add
add
lahf
xor
push
add
in
xor
cwtl
sub
shrl
cmp
add
add
fsubl
testb
add
add
and
add
jne
mov
bound
mov
and
hlt
add
leave
test
sub
add
stos
pop
xchg
mov
aaa
lock
xor
pop
jg
insb
loope
add
mov
add
inc
cltd
cmp
add
ret
cmpsb
add
xor
nop
add
aad
das
movb
cmp
jno
mov
pop
in
xchg
loope
int3
or
loope
sub
xor
push
add
add
pop
add
pop
mov
fisubrs
add
mov
xor
and
or
add
mov
dec
aam
dec
mov
add
enter
push
lods
das
ljmp
add
mov
scas
adc
cmpsl
fistpl
jo
testb
add
dec
jne
add
insb
add
add
add
adc
popf
in
sub
dec
leave
sbb
add
addr16
add
pop
popf
mov
add
adc
add
gs
std
jecxz
fidivs
add
add
add
add
loope
xorl
add
cmc
out
jge
ret
dec
push
add
jecxz
add
add
sarl
cmc
das
loope
or
mov
add
add
add
popf
sahf
cmp
ret
inc
add
pop
cmpsl
mov
add
add
add
mov
add
mov
notl
xor
adc
jl
add
jns
aaa
add
aam
push
dec
addb
add
add
daa
stc
pop
mov
jno
addb
aaa
divl
mov
jne
inc
add
ja
jp
add
push
add
add
add
sub
add
popa
sub
scas
mov
stc
xor
ljmp
insb
call
sbb
shl
mov
out
cmp
in
mov
add
aad
push
jno
push
add
movsb
add
push
addb
popa
jmp
jo
xchg
ljmp
add
add
cmpsl
dec
scas
or
mov
mov
lret
in
pop
jno
insl
pusha
add
jl
out
mov
add
pop
cmp
dec
push
xor
cmp
lret
jo
sub
xchg
add
in
adc
sahf
pop
sub
lea
imul
pop
cmp
add
xchg
or
add
repz
add
aas
xchg
sti
ja
jae
cmpsl
inc
add
add
add
add
xchg
getsec
inc
add
push
add
push
stos
and
repz
push
add
push
in
stos
test
xlat
adc
gs
add
add
insb
and
clc
mov
xchg
xchg
jns
pop
jb
inc
test
mov
daa
xor
test
or
or
pop
fwait
sub
add
xor
mov
add
in
sub
pusha
add
mov
out
cltd
xchg
push
add
lcall
add
xchg
dec
in
int3
cli
lock
jns
mov
and
mov
xor
add
sbb
lcall
mov
rolb
jp
aaa
dec
shl
add
sub
sbb
daa
insl
fwait
cmovno
fcomps
mov
jnp
add
popf
lds
add
sbb
js
add
mov
mov
pop
and
mov
add
add
movb
add
mov
sub
add
std
dec
push
add
cmp
and
add
add
add
stos
mov
sub
lret
std
jmp
push
gs
scas
leave
push
add
mov
add
add
mov
scas
addb
add
scas
inc
jnp
mov
add
add
and
lea
std
xor
ja
mov
aam
icebp
mov
xor
cmp
or
add
mov
add
mov
pop
add
add
cmp
ja
mov
inc
cmp
xor
insl
insl
xor
andl
rolb
xchg
add
adc
inc
add
push
add
mov
mov
add
add
xchg
add
in
je
inc
add
mov
pop
sbb
out
add
add
xor
dec
mov
add
pop
push
pop
push
add
xor
jo
jp
sub
or
add
sbb
sahf
add
loop
fsubr
in
ljmp
addl
inc
add
add
add
xchg
lods
inc
test
dec
push
shrl
add
mov
stos
mov
lods
addb
sbb
loop
cmpsb
add
xchg
add
jg
add
mov
addb
dec
int
in
scas
xchg
xchg
add
add
or
add
inc
add
mov
addr16
lahf
int3
andl
jp
mov
add
and
imul
mov
add
add
jns
pop
push
lret
dec
sbb
add
add
mov
add
loop
stc
sub
call
ret
add
aas
mov
add
nop
add
mov
inc
add
mov
xor
ds
int
add
lret
das
xchg
popf
call
sbbl
pop
add
jmp
add
xor
sbb
sub
aad
lea
xchg
add
sub
leave
add
add
add
cs
add
lret
call
movsl
iret
or
add
mov
movb
add
add
mov
xchg
dec
cmp
add
mov
data16
add
les
sbb
cmp
add
xlat
cmp
movl
sbbl
pop
and
mov
and
mov
adc
dec
xor
dec
adc
addb
xchg
icebp
jb
scas
cld
mov
mov
es
xchg
push
mov
xor
add
add
lods
rolb
repnz
mov
xor
mov
push
add
sub
add
bound
mov
mov
into
push
xor
out
in
xchg
add
add
sbb
inc
je
cmp
mov
js
add
add
lret
or
aad
subl
inc
push
add
lock
mov
xchg
cmpsb
add
add
ja
jle
add
pop
xor
sbb
adc
lahf
cmpsb
add
aaa
and
adc
cmp
adc
dec
stos
xlat
aaa
imul
ljmp
ljmp
int3
movsb
add
rcrl
sbb
add
je
fwait
mov
add
lcall
ret
add
add
add
add
xchg
add
mov
vcmpps
int
add
pop
inc
add
sub
mov
mov
add
fdivl
push
add
cmp
pop
and
mov
jmp
sub
ljmp
add
mov
add
pushl
dec
nop
add
cmc
sbb
fnsave
pop
std
in
mov
add
add
cmp
pop
dec
adcl
inc
add
fmul
scas
stos
loopne
xchg
add
push
add
add
xor
cmp
aam
jno
add
mov
pop
scas
pop
dec
xchg
add
add
sbb
add
or
pop
inc
add
lods
out
jmp
add
push
mov
in
xor
pop
fnstenv
inc
movsb
add
jo
sbb
mov
lea
int3
outsb
pop
js
add
or
je
fidivs
add
and
stos
inc
popf
dec
fldenv
mov
jmp
xchg
add
add
icebp
out
int3
cmp
mov
js
test
mov
loop
insb
fdivs
add
sarl
adc
lahf
push
add
testb
add
add
jno
jp
add
xchg
jo
push
rolb
push
add
in
adc
dec
fistpll
nop
add
mov
mov
xor
add
lods
repz
xchg
ret
add
add
jns
movsb
add
bound
mov
push
add
mov
push
dec
or
test
add
add
add
stos
lcall
outsl
xchg
pop
xorl
mov
mov
mov
mov
and
mov
cmp
sbb
les
fmull
mov
add
mov
cmp
add
jp
add
lea
ss
stos
movsl
jae
loopne
imul
lock
xchg
add
aam
rolb
arpl
rol
add
add
lock
and
test
imul
and
adc
add
jo
inc
and
mov
mov
xchg
insl
push
mov
jbe
mov
mov
movb
pop
pop
les
fidivl
push
lcall
add
sub
bound
mov
outsb
testb
add
pop
pop
mov
sbb
add
fidivl
jecxz
pop
rolb
movl
mov
ret
ja
jmp
or
outsl
in
lock
fsubrs
lea
mov
loopne
push
add
add
add
xor
pmulhuw
or
add
sbb
mov
punpckldq
mov
bound
mov
inc
mov
out
xchg
std
pop
outsl
lods
cld
xchg
add
sub
xor
add
sub
in
and
ds
add
loope
push
cmpsb
add
or
pop
pop
sub
repz
add
ja
mov
fcomip
pop
sbb
adc
das
imul
mov
std
sbb
mov
xchg
sahf
loopne
add
mov
mov
mov
xchg
add
add
psadbw
bound
mov
xchg
add
push
add
add
test
add
rcrl
sub
push
add
push
add
rolb
sub
add
push
or
add
loop
mov
cld
pop
in
test
psllw
dec
sub
add
add
movb
push
test
add
lahf
rol
add
and
out
mov
jno
add
or
mov
add
das
dec
nop
add
add
jmp
dec
les
aas
sbbl
push
add
dec
mov
xchg
fsubr
out
cwtl
or
add
fbstp
shrl
add
xor
add
out
push
call
incb
addb
dec
lcall
lods
jg
add
std
jae
add
xchg
add
add
jo
cli
xor
dec
comiss
fadds
push
mov
repnz
jnp
test
add
jno
mov
aam
jbe
jno
add
add
xor
inc
lret
mov
dec
xor
add
in
mov
iret
flds
add
add
xor
adc
lahf
mov
or
andl
or
cmp
sub
add
add
push
cmp
mov
lret
iret
ret
jns
les
les
pop
mov
sbb
push
add
sub
add
cld
cwtl
mov
jmp
jb
pop
pushf
cmp
popf
xchg
mov
add
in
add
ds
add
xchg
movsb
add
and
ljmp
add
hlt
add
sbb
cmp
into
ffreep
add
cmp
