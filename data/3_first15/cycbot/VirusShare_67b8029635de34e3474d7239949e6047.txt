add
data16
mov
mov
mov
mov
mov
mov
cmp
cmp
rcl
rcl
rcl
rcl
rcll
adc
adc
outsb
outsb
outsb
outsb
mov
add
rcl
rcl
dec
dec
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fnstcw
jge
jge
jge
jge
jge
test
scas
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
ret
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
pop
pop
pop
pop
pop
into
into
jmp
jmp
jmp
div
div
div
div
div
div
testb
jne
jne
jne
out
out
out
out
add
add
add
add
ja
ja
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fcmovnu
jo
jo
jo
jo
cs
fwait
fwait
fwait
fwait
fwait
sbb
loop
loop
loop
loop
pop
pop
pop
es
sub
addr16
addr16
add
add
add
ds
push
push
push
push
addb
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
lods
lods
cs
pop
pop
pop
lcall
inc
inc
inc
inc
mov
add
push
push
push
add
add
add
aaa
aam
es
add
pop
pop
pop
pop
pop
clc
clc
clc
clc
clc
clc
clc
clc
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
mov
into
into
into
into
into
into
into
dec
dec
dec
dec
dec
dec
push
push
mov
aad
aad
aad
add
add
lret
lret
dec
dec
dec
dec
dec
inc
inc
fcomp
dec
dec
jge
jge
jge
rcl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
bound
bound
bound
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
scas
scas
scas
scas
scas
scas
scas
scas
loop
add
lods
jp
sbb
sbb
sbb
sbb
xor
jge
cld
cld
pushf
pushf
pushf
pushf
stos
stos
mov
addr16
sbb
sbb
sbb
aam
icebp
icebp
jo
bound
lock
movsl
movsl
movsl
movsl
movsl
movsl
scas
scas
scas
scas
filds
aaa
aaa
xchg
xchg
xchg
xchg
adc
adc
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
xor
xor
test
or
rcl
add
add
push
mov
mov
mov
mov
add
add
and
and
and
lret
pushf
test
test
test
test
das
das
jb
lahf
lahf
lahf
lahf
xor
jne
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
fs
cmp
cmp
cmp
imul
imul
imul
jmp
jmp
cmp
cmp
cmp
sbb
loopne,pn
loopne
cmp
cmp
std
std
std
std
std
std
std
std
std
hlt
hlt
push
push
push
push
push
push
push
mov
add
add
add
mov
mov
mov
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
pusha
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
stos
stos
stos
stos
stos
stos
stos
cmp
lock
push
push
push
push
push
push
add
add
add
les
or
in
in
in
div
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
pop
pop
pop
out
out
out
out
out
out
mov
sbb
lcall
addl
add
cmp
cmp
cmp
cmp
cmp
xlat
pop
pop
add
lock
push
push
push
push
push
push
cs
sub
lahf
lahf
lahf
lahf
lahf
lahf
lahf
and
es
adc
adc
adc
mov
mov
mov
add
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
rcl
rcl
rcl
sar
sti
clc
clc
clc
push
push
das
das
das
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
push
push
push
push
push
push
push
push
push
cmp
repnz
push
loope
loope
loope
jmp
sub
sub
sub
sub
jns
jns
jns
jns
jns
jb
add
loopne
call
call
call
ds
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
lret
xor
sbb
sbb
and
and
jge
jge
call
push
push
insb
insb
insb
insb
insb
or
or
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
sahf
sahf
sahf
sahf
sahf
inc
inc
pushf
adc
adc
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
mov
mov
rcl
rcl
roll
add
add
add
mov
mov
mov
mov
scas
inc
inc
inc
inc
add
add
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jecxz
jecxz
es
mov
mov
rdtsc
xor
jp
jp
jp
imul
imul
mov
push
push
push
push
push
xchg
cwtl
test
and
and
and
and
mov
mov
pop
pop
xor
xor
testb
inc
inc
inc
inc
add
add
add
in
in
in
in
in
in
in
in
aas
aas
shlb
xor
pop
pop
add
add
add
xor
xor
addb
jecxz
add
add
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cld
out
out
out
out
out
out
out
add
add
add
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
stc
stc
cmp
lods
lods
lods
lods
lods
lods
lods
lods
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
push
push
push
jl
jl
jl
fcmovu
fcmovu
fcmovu
add
add
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
loopne
loopne
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
jmp
cmp
in
in
in
in
in
in
jle
jle
jle
scas
scas
scas
scas
push
push
push
push
push
push
push
cmp
cmp
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
dec
cs
add
add
add
add
add
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
xlat
xlat
xlat
xlat
xlat
jb
jb
jb
jb
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
fcmovu
fcmovu
ficompl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
and
and
and
add
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
sbb
sbb
data16
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
add
add
repnz
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
daa
sbb
sbb
jo
jo
adc
mov
cmp
inc
inc
pop
pop
pop
pop
pop
pop
add
add
aaa
aaa
aaa
aaa
sub
sub
sub
lea
in
in
in
loop
loop
jecxz
jecxz
outsb
jb
add
add
jl
jl
jl
add
add
add
add
add
add
add
push
jo
jo
jo
jo
jo
pop
add
add
pushf
pushf
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
sbb
sbb
push
push
push
push
push
fcmovnu
fcmovnu
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
mov
jnp
jnp
mov
mov
out
jl
jl
jl
lods
lods
lods
lods
lods
lods
lods
jge
jge
cmp
out
jecxz
ret
ret
sbb
jno
jno
jno
jno
xchg
fs
push
push
push
push
push
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
mov
stos
stos
stos
stos
stos
stos
sub
sub
mov
icebp
icebp
icebp
lods
lods
lods
lods
lods
test
or
or
jb
jb
jb
jb
cmp
test
cmp
cmp
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
and
and
and
and
add
add
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
sub
sub
in
in
outsl
add
fcmovu
fidivl
mov
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
inc
inc
inc
inc
std
std
std
into
into
pop
pop
pop
pop
pop
pop
ds
div
div
div
idivb
mov
mov
rcl
rcl
roll
add
insl
xor
out
out
out
out
out
out
out
out
out
out
out
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
sahf
outsl
outsl
add
add
add
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
arpl
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
and
movsl
movsl
movsl
movsl
movsl
jnp
jnp
jnp
jnp
add
mov
add
add
pop
pop
pop
pop
add
add
add
stos
stos
stos
stos
stos
stos
stos
add
add
add
add
int
int
add
rcl
rcl
dec
dec
sbb
sbb
dec
dec
dec
dec
dec
dec
dec
nop
add
add
rcl
rcl
pop
pop
pop
pop
pop
pop
roll
add
sub
xor
out
pop
cltd
cltd
cltd
cltd
cltd
mov
fstp
out
out
out
out
out
out
out
out
out
add
adc
adc
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
cmp
add
add
mov
fdivr
xor
add
clc
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jnp
jnp
add
add
add
scas
scas
scas
scas
scas
scas
add
add
pop
xor
jle
jle
jle
jle
jle
jle
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
movsl
add
add
add
jp
jp
pop
lret
lret
lret
lret
lret
lret
imul
jmp
jmp
jmp
jmp
inc
inc
inc
jmp
jmp
jmp
cmp
cmp
cmp
jg
jg
jg
jg
jg
jg
jg
mov
add
add
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fwait
add
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
mov
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
mov
jge
jge
jge
xchg
push
pop
addb
ficomps
and
and
and
and
and
and
and
cmp
cmp
cmp
cmp
jl
cmpsl
jge
stc
stc
stc
stc
addr16
in
in
in
in
in
in
in
in
in
in
in
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcl
rclb
jge
jge
daa
daa
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
add
add
xor
xor
xor
addb
push
cmp
cmp
cmp
cmp
cs
cs
lods
lods
pop
add
add
jl
jl
jl
jl
jl
jl
jl
jl
xchg
xchg
fcmovnu
fldt
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
and
hlt
hlt
add
dec
dec
ds
lret
lret
lret
lret
lret
lret
lret
add
jnp
jnp
jnp
jnp
xor
xor
imul
push
and
and
ret
adc
lods
lods
lods
add
add
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
and
adc
adc
adc
adc
adc
adc
fwait
fwait
fwait
rcl
rcl
rcl
movsb
movsb
int3
pop
pop
pop
pop
pop
pop
pop
pop
pop
aad
cmp
push
push
push
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
adc
adc
adc
cwtl
cwtl
cwtl
add
add
add
xor
xor
xor
xor
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
adc
adc
adc
jg
jo
push
push
lds
gs
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
add
scas
sbb
sbb
sbb
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aaa
aaa
aaa
aaa
aaa
aaa
add
add
add
ljmp
adc
in
in
in
in
push
push
push
push
push
push
push
fcmovu
addr16
ljmp
or
inc
sub
add
daa
daa
daa
daa
loopne
div
div
divl
xor
xor
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
xchg
xchg
xchg
xchg
xchg
xchg
add
ret
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
mov
jmp
jmp
jmp
jmp
jl
jl
jl
xor
add
xor
xor
add
add
int
js
js
js
js
js
js
js
js
js
addb
addb
in
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
push
dec
add
adc
adc
pop
pop
pop
pop
pop
pop
push
push
push
push
mov
mov
mov
add
push
push
push
push
push
mov
div
div
div
div
jns
jns
or
leave
leave
fwait
xor
rcl
rcl
add
addb
addb
addb
addb
sbb
add
add
pop
cmpsb
mov
mov
div
div
div
imulb
inc
loope
loope
loope
add
add
add
add
mov
mov
addb
add
add
add
mov
mov
mov
mov
mov
sbb
sbb
sbb
sbb
sbb
add
add
pop
pop
pop
pop
ret
ret
ret
xchg
xchg
xchg
xchg
xchg
xchg
xchg
popl
inc
inc
inc
inc
inc
mov
mov
leave
leave
leave
leave
leave
leave
leave
leave
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
dec
dec
dec
xor
xor
xor
xor
repnz
popa
popa
popa
lahf
lahf
lahf
lahf
lahf
push
push
push
push
push
push
push
es
push
push
push
push
hlt
jp
jp
rol
sub
adc
adc
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
xchg
xchg
xchg
or
jno
jno
jno
jno
jno
jno
jno
jno
jno
roll
push
push
push
push
push
push
push
popa
popa
mov
sbb
sbb
sbb
test
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
in
in
in
in
in
cwtl
cwtl
outsb
outsb
outsb
outsb
ja
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
sub
sub
sub
add
and
add
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
jb
jb
mov
mov
mov
mov
jno
mov
mov
je
rcl
rcl
rcl
inc
inc
inc
inc
sbb
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
les
push
mov
data16
outsl
outsl
outsl
outsl
outsl
outsl
xor
xor
xor
rol
rol
mov
mov
mov
xor
xor
xor
xor
xor
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmc
cmc
cmc
jp
test
test
test
div
add
mov
cmp
cmp
ret
jne
mov
fcomp
fcomp
fadds
push
push
push
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
adc
adc
add
add
add
jns
jns
jns
mov
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
xor
add
add
add
inc
inc
inc
inc
inc
inc
inc
ret
lods
lods
lods
lods
lods
xor
xor
or
mov
mov
rcll
addl
pop
pop
mov
jne
jne
jne
jne
add
and
and
and
and
and
and
and
and
and
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lods
push
imul
add
add
add
add
test
test
inc
inc
inc
inc
lds
sub
sub
sub
push
push
push
push
push
push
imul
popa
popa
popa
aaa
aaa
aaa
aaa
aaa
aaa
sub
sub
sub
sub
loope
loope
mov
mov
mov
ja
ja
ja
mov
dec
dec
dec
dec
sbb
add
add
add
add
or
jb
jb
jb
fwait
fwait
fwait
das
das
das
das
das
das
das
das
das
das
das
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fmuls
movsb
movsb
movsb
movsb
movsb
movsb
add
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
inc
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
mov
mov
mov
mov
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
add
addb
addb
inc
inc
inc
adc
adc
add
add
add
ja
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
push
push
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
std
std
std
std
std
std
adc
or
or
or
or
or
dec
dec
dec
dec
dec
adc
sub
sub
sub
sub
jbe
inc
inc
inc
cmpsl
cmpsl
cmpsl
cmpsl
fcmovnu
lret
mov
mov
mov
jge
jge
jge
jbe
or
or
add
loopne
mov
outsb
outsb
outsb
outsb
outsb
outsb
outsb
pop
pop
scas
scas
sub
sub
sub
sub
sub
sub
mov
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
dec
dec
dec
jmp
cmc
cmc
cmc
cmc
add
add
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
add
test
ljmp
adc
adc
in
in
mov
jmp
jmp
jmp
jmp
jmp
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
add
add
decl
dec
dec
dec
or
xchg
stc
repz
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
push
push
push
push
mov
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
and
lahf
pop
rcl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
add
add
jnp
jnp
jmp
jmp
add
add
addb
addb
addb
mov
push
adc
adc
adc
adc
add
add
add
insl
insl
sub
sub
sub
sub
sub
mov
mov
add
push
push
push
push
push
push
push
add
popl
add
xor
xor
mov
mov
xor
xor
data16
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
lret
lret
lret
lret
lret
repnz
div
div
div
div
div
div
div
idivb
xchg
pop
add
add
dec
dec
dec
dec
dec
dec
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
aas
aas
aas
aas
jmp
pop
pop
pop
pop
pop
pop
js
js
je
je
je
je
je
je
addb
addb
call
aad
aad
aad
aad
aad
aad
adc
jmp
or
or
or
or
or
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jno
jno
jno
jno
jno
jno
mov
mov
in
in
pop
add
add
fcomp
inc
inc
inc
sub
sub
sub
sub
add
add
and
and
and
and
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
adc
adc
adc
adc
adc
adc
lea
add
lret
lret
icebp
icebp
icebp
popf
popf
popf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
arpl
arpl
int3
int3
int3
int3
int3
jb
jb
jb
leave
leave
add
add
sbb
sbb
sbb
mov
mov
mov
aam
mov
arpl
daa
daa
fcmovu
fcmovu
aas
aas
aas
aas
aas
aas
aas
jns
jns
xor
cld
cld
cld
cld
cld
cld
cld
add
add
or
or
aad
xor
xor
data16
inc
fscale
std
std
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
data16
aam
aam
aam
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
add
xor
dec
addr16
add
outsb
pop
popf
popf
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
out
out
out
fcomp
fcomp
fcomp
fcomps
pop
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
iret
iret
iret
iret
iret
iret
int
int
int
ficoms
push
push
push
push
mov
mov
mov
jns
jns
adc
adc
adc
and
and
test
or
or
dec
dec
dec
dec
inc
inc
inc
test
or
adc
adc
adc
adc
adc
adc
fstp
fstp
mov
out
out
out
out
out
out
out
out
out
out
out
out
lcall
sbb
sbb
sbb
and
and
and
and
dec
dec
dec
dec
dec
dec
test
shlb
jle
jle
fs
in
in
in
in
in
in
in
aad
aad
aad
test
test
jg
jg
jg
jnp
jnp
lret
rcl
rol
les
adc
je
je
je
je
je
je
je
je
fs
jne
sbb
sbb
sbb
test
test
rorl
dec
cli
cli
xchg
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
push
push
push
push
push
push
push
push
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
jp
jp
jp
add
add
add
add
jg
jg
jg
jg
jg
jg
add
add
sbb
sbb
push
fidivrs
hlt
hlt
hlt
hlt
hlt
hlt
hlt
pcmpgtd
data16
popa
xchg
xchg
xchg
inc
inc
inc
inc
inc
loopne
loopne
loopne
loopne
loopne
jne
jne
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
test
cld
cld
cld
cld
cld
add
rcl
rcl
xchg
add
enter
add
jecxz
jecxz
jecxz
jecxz
data16
movsl
movsl
push
push
push
jne
jne
add
add
add
sti
sti
sti
adc
adc
adc
mov
test
test
test
test
test
test
test
test
test
jmp
jmp
jmp
jmp
cmp
cmp
cmp
sub
sub
sub
sub
sub
cld
cld
cld
cld
cld
cld
cld
cld
cld
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jnp
jnp
jnp
jnp
jnp
sub
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
pop
pop
pop
pop
pop
pop
mov
iret
iret
iret
sbb
add
add
daa
daa
add
jle
jle
add
add
add
push
push
push
push
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
addr16
add
dec
or
or
or
or
or
addr16
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
xor
xor
iret
iret
iret
iret
iret
iret
iret
iret
iret
dec
add
cwtl
cwtl
cwtl
cwtl
mov
mov
lcall
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cs
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
dec
dec
dec
repnz
stos
stos
stos
stos
stos
stos
pop
pop
pop
pop
pop
je
je
je
je
je
je
add
add
in
in
addl
addl
test
test
cwtl
add
add
or
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
mov
gs
gs
je
push
push
adc
adc
adc
mov
mov
mov
repnz
add
ret
nop
jge
jge
jge
jge
jge
jge
jge
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
mov
mov
loopne
loopne
loopne
or
or
or
or
or
push
push
sbb
ret
ret
ret
ret
ret
ret
ret
ret
ret
cmpsb
add
in
in
in
pop
pop
add
roll
mov
add
pop
pop
pop
mov
mov
add
add
int
int
int
int
mov
add
add
add
jne
jne
and
adc
fcompl
sbb
ret
ret
ret
ret
ret
popa
popa
mov
mov
fimuls
bound
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
movsb
movsb
das
mov
mov
mov
add
add
std
std
std
std
std
std
std
std
rol
rol
rol
rol
rol
rol
push
push
push
push
push
push
push
push
push
push
push
push
and
and
and
ss
cli
cli
cli
cli
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
cmp
cmp
lods
lods
lods
cmp
cmp
cmp
cmp
dec
dec
jecxz
jecxz
fcmovu
fisubrl
cs
cs
add
add
xchg
je
je
cwtl
cwtl
cwtl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
int
int
int
ss
imul
adc
adc
jmp
push
xor
mov
mov
push
push
push
lock
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
and
and
and
add
xor
xor
mov
addr16
test
ret
ret
ret
rcl
mov
fisubrs
fcmovu
fcmovu
fcmovu
add
mov
cmp
lret
lret
lret
lret
lret
lret
add
add
add
add
aad
aad
aad
aad
aad
aad
aad
aad
mov
add
add
or
or
or
cmp
cmp
cmp
jb
jb
cmp
cmp
cmp
cmp
cmp
cmp
fwait
fwait
fwait
fwait
fwait
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
and
and
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
rcl
sarb
jnp
jnp
das
das
and
and
repnz
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
lcall
lcall
in
in
in
in
aas
add
stos
inc
inc
inc
inc
inc
inc
inc
inc
add
and
add
scas
lock
pop
flds
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
mov
mov
mov
test
test
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
out
out
out
out
out
out
inc
inc
inc
inc
inc
inc
inc
gs
adc
adc
adc
push
push
push
push
push
push
push
push
mov
sub
sub
sub
adc
adc
adc
adc
adc
add
loop
loop
mov
mov
mov
mov
mov
mov
cltd
cltd
cltd
cltd
cltd
cltd
icebp
rcl
rcl
scas
pop
pop
pop
pop
xchg
xchg
xchg
xchg
add
jns
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
push
enter
xor
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnbe
jl
jl
jl
rcl
rcl
rcl
rcl
rcl
decl
mov
repnz
jg
stos
stos
stos
stos
stos
stos
and
and
and
and
and
and
and
and
sahf
sahf
sahf
sahf
sahf
sahf
sahf
addb
addb
mov
mov
mov
mov
mov
movsb
movsb
movsb
movsb
movsb
movsb
movsb
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
in
in
in
in
in
in
in
in
in
pop
pop
pop
pop
pop
add
enter
sub
sub
sub
sub
sub
sub
sub
sub
rol
rol
rol
rol
inc
inc
inc
inc
inc
inc
sub
sub
sub
or
add
add
nop
nop
nop
jg
add
test
test
leave
leave
sub
sub
sub
sub
sub
sub
sub
jmp
flds
add
xor
xor
xor
xor
xor
xor
add
add
add
add
sbb
sbb
mov
mov
mov
push
push
push
push
push
push
test
test
test
test
test
popf
popf
popf
popf
popf
popf
popf
sub
sub
sub
sub
sub
pop
test
scas
scas
scas
scas
scas
scas
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
push
inc
inc
inc
inc
inc
add
dec
sub
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
add
outsb
outsb
outsb
outsb
outsb
add
inc
cli
pop
push
fcomp
fcomp
fcomp
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
cs
ret
ret
ret
ret
ret
ret
rcl
add
add
add
add
add
add
add
int3
int3
mov
dec
add
jae
lock
xchg
out
out
out
out
add
add
add
in
in
in
in
in
in
in
in
in
add
arpl
arpl
js
xchg
xchg
xchg
xchg
xor
xor
xor
add
add
pop
pop
aas
aas
aas
aas
aas
aas
aas
aas
pop
pop
pop
pop
pop
pop
into
into
into
into
into
into
into
into
into
pop
pop
pop
imul
imul
scas
jmp
out
or
dec
xchg
ficompl
mov
mov
nop
inc
mov
inc
jmp
sbb
and
inc
add
addb
rolb
rorb
lret
xor
push
sbb
inc
cwtl
pushf
sub
xor
inc
test
and
cmp
mov
loope,pt
daa
jecxz
cwtl
stc
pop
test
enter
aad
xchg
int
out
jns
pusha
pusha
jl
inc
loopne
mov
mov
js
pusha
add
fbstp
addr16
andl
ret
cld
daa
aas
cmpsl
xchg
jno
dec
fs
dec
jnp
loopne
mov
aad
and
mov
mov
loopne
lds
jno
ljmp
xchg
pusha
enter
inc
pusha
out
cld
and
jo
xchg
and
aad
mov
sbb
or
and
loopne
mov
loopne
inc
xor
cwtl
shrl
test
inc
inc
jle
fisttpl
dec
pop
fadds
jb
push
mov
mov
mov
ret
push
loopne
push
mov
pusha
sbb
pop
shrb
and
push
mov
inc
jns
add
movhps
daa
mov
inc
cltd
clc
and
mov
out
sbb
and
sub
sub
andb
push
enter
loopne
mov
push
pushf
mov
fldenv
jg
fbld
aas
movsb
loopne
mov
aad
jo
fisttps
mov
imul
in
and
pusha
jge
movsb
add
pop
xchg
lahf
push
adc
fwait
ds
xlat
movb
lret
stos
sti
pop
pop
mov
xlat
movsb
rolb
ja
ffreep
lcall
enter
or
push
cld
enter
inc
push
adc
andb
movsb
loopne
xchg
xchg
mov
pusha
imul
mov
sub
ud2
std
into
push
aam
dec
mov
loopne
stos
mov
inc
andb
test
and
xor
xor
repnz
out
cmp
mov
inc
push
icebp
and
and
dec
loope
stos
pusha
pusha
mov
int3
out
into
pop
inc
mov
ret
scas
mov
popa
xchg
mov
inc
nop
aam
fsub
in
jnp
test
fwait
add
cmp
xchg
sub
imul
and
dec
or
mov
in
scas
push
movsb
loopne
xor
add
addb
inc
loopne
das
or
add
jno
cmp
add
adc
lcall
lods
fnsave
sbb
add
lods
add
gs
xchg
loopne
xlat
inc
inc
sti
sub
icebp
movsl
fstpt
inc
mov
sbb
add
jle
ret
lock
mov
add
adc
cmc
test
addb
push
out
sub
jns
jl
ficomps
mov
aam
test
sbb
sbb
out
js
sbb
jbe
int
out
jb
cmpsb
pusha
and
addb
clc
data16
sub
test
add
and
jns
xlat
jnp
ja
and
cmpsl
xor
ret
adc
mov
jge
xor
out
cmp
ds
popf
push
jb
loopne
add
mov
aad
jbe
xor
in
popa
imul
inc
add
ret
cmpb
mov
addr16
loopne
mov
adc
pop
pop
add
shlb
lcall
lods
add
repz
outsb
aad
cmc
mov
mov
sub
mov
push
jne
insl
aad
pop
jle
mov
jno
adc
imul
test
cmp
dec
or
fcompl
lcall
cltd
aam
mov
adc
rorl
stc
inc
je
and
add
sub
add
mov
es
add
in
repnz
pusha
cmp
jecxz
andb
fcomp
or
inc
cmp
fidivl
lods
jl
inc
and
outsl
pop
xchg
test
add
rclb
inc
cmpsl
in
pop
jp
pop
sbb
insl
repnz
loope
ret
addb
push
arpl
pushf
sub
dec
call
in
test
add
je
sti
add
pusha
adc
or
dec
cmpsb
shlb
ror
cmpsb
mov
loope
in
in
pop
jmp
mov
ja
or
push
decl
lods
jnp
xor
adc
cwtl
das
dec
pop
test
lahf
in
xor
push
shlb
mov
pushf
daa
addr16
test
jmp
pusha
add
pusha
loopne
popf
aad
inc
jl
mov
jg
ret
xchg
add
andb
pop
cmp
cmp
loope
dec
inc
xor
sahf
fsubr
jl
sub
rcrb
pop
and
roll
sbb
addb
in
sbb
fsubrs
jecxz
xor
sbb
xor
in
push
rcll
enter
inc
repz
cmp
in
data16
jns
cmp
pop
imul
jle
mov
insl
scas
dec
pusha
pop
jbe
inc
pusha
and
shrb
cmc
loope
adc
cmp
pop
mov
xchg
loopne
and
std
test
rolb
and
shlb
or
fnstenv
loopne
fcomps
addr16
loopne
jo
inc
pusha
jnp
cmp
pusha
pusha
addb
ja
dec
or
jg
shlb
andb
cld
dec
sbb
xlat
add
inc
mov
xchg
daa
mov
sub
and
cltd
addb
push
add
xchg
lods
dec
loope
andl
mov
add
xor
cmpsl
addr16
insb
or
shlb
and
into
cmp
pop
cwtl
mov
push
pop
lahf
lock
inc
xlat
mov
pop
leave
test
xchg
ljmp
mov
add
mov
pusha
loopne
test
daa
mov
jg
out
scas
dec
jmp
mov
inc
jmp
imul
addb
adc
aas
lods
andb
shll
add
loopne
mov
add
or
div
repz
lret
jns
clc
test
loopne
cltd
dec
cmp
add
std
arpl
repnz
jecxz
pusha
add
mov
iret
push
mov
mov
leave
mov
mov
shlb
mov
subl
pop
test
cmp
int3
repz
mov
mov
inc
xor
pop
mov
xlat
out
ljmp
in
dec
adc
xchg
mov
mov
movsl
imul
pusha
pusha
icebp
lret
and
sti
int3
mov
push
loopne
xchg
mov
dec
cs
and
add
jecxz
xor
addr16
mov
pusha
and
xchg
dec
pop
xchg
imul
mov
frstor
std
arpl
inc
add
cmp
pusha
pusha
ss
lret
test
loopne
mov
and
cmpsb
and
inc
add
inc
and
insl
shlb
cmp
test
pusha
mov
bound
sarb
cmp
xchg
jns
and
loopne
popa
les
fildll
inc
add
xchg
xor
pop
xor
push
cmp
inc
pop
xchg
mov
mov
scas
lahf
nop
mov
sarl
push
test
dec
or
mov
orb
popf
pop
pop
push
gs
sub
pop
int3
bound
fldcw
sub
ret
sbb
and
pop
mov
xchg
in
setle
adc
push
clc
sub
jnp
mov
fmull
outsl
lahf
mov
or
fwait
add
fsubp
adc
jg
clc
xor
test
addr16
cmc
pop
lock
rolb
mov
inc
dec
xchg
addl
mov
sbb
stos
pusha
rol
xchg
sbb
adc
ljmp
pusha
shll
sete
mov
mov
dec
es
add
push
aaa
xor
add
xor
sbb
pusha
in
stos
aad
mov
data16
fs
shlb
lds
mov
cmc
jno
inc
loopne
cmp
rcl
fcoms
movsb
andb
xlat
adc
addb
add
inc
mov
rol
bound
add
jmp
popa
rorl
and
push
cmpsl
push
adc
adc
sahf
pop
out
popa
sub
jecxz
aad
or
in
mov
andl
xchg
popa
das
movsl
mov
dec
jmp
jo
shlb
ret
cmp
lods
loopne
cmc
or
pop
mov
stc
or
lds
add
into
jg
or
cmpsb
add
or
and
add
mov
mov
add
pop
data16
sbb
sub
mov
stc
stos
icebp
movsl
fists
mov
jnp
cmp
mov
jmp
mov
lods
inc
mov
pop
iret
int
mov
inc
mov
pop
add
sbb
pop
das
mov
addb
inc
mov
popf
repnz
pusha
mov
or
pusha
popa
or
addb
cmp
mov
xor
jge
mov
sbb
out
lock
inc
rcr
aaa
out
dec
rolb
adc
int3
scas
pushf
sbb
pop
mov
or
loopne
dec
lret
and
pusha
push
inc
jecxz
insb
or
inc
cld
jo
pushf
stc
sti
imul
dec
and
outsl
cmp
inc
inc
fimuls
fsubrl
xchg
sub
dec
cmp
dec
cmpsb
pusha
inc
in
andb
cmp
jb
subl
imul
jp
jnp
adc
pusha
test
nop
divl
addb
jnp
mov
loopne
jmp
mov
add
cli
xor
jecxz
xchg
subb
dec
pop
int
add
inc
daa
dec
stos
out
cli
jle
jecxz
cmpsb
and
repz
shlb
cmp
jl
scas
repnz
pop
sbb
push
sub
sti
fidivs
in
cmp
into
push
movsl
aas
stc
aas
pop
aaa
leave
dec
push
inc
sbb
adc
jp
mov
pop
lahf
test
adc
test
dec
jae
nop
test
sbb
rcrl
rorb
addb
mov
cld
inc
lahf
push
inc
mov
lods
mov
out
pop
loop
int3
pop
movsl
mov
leave
adc
popa
inc
sub
outsl
xchg
inc
rcr
bound
sbb
into
cld
inc
stos
andb
rolb
fwait
ret
stc
pop
pop
rcl
push
mov
and
pop
jb
shlb
and
mov
inc
add
and
sub
dec
shl
arpl
lret
mov
lea
push
and
cmp
mov
mov
and
push
push
pop
push
addb
ss
inc
aad
dec
gs
mov
cmpsl
push
addb
shlb
add
fwait
pop
xchg
inc
ja
pop
xor
sarl
or
std
sub
rolb
sbb
push
scas
rolb
ljmp
jo
inc
or
shll
loopne
xchg
sub
mov
out
iret
mov
lret
pushf
xchg
cmp
adc
into
stos
xchg
loopne
push
jg
mov
and
rcrl
aaa
cmpsb
inc
loopne
dec
hlt
cmp
sbb
sbb
loopne
add
andb
xchg
daa
mov
js
cmp
loope
cld
jno
repnz
add
pop
pop
xlat
sarb
cmp
or
mov
leave
test
loopne
clc
movsb
rol
adc
mov
add
int
dec
push
in
mov
fmull
mov
mov
cmp
shlb
cmpsb
and
fmull
adc
xchg
test
stc
outsb
sub
adc
andb
mov
push
push
popa
adc
cmp
dec
daa
lcall
mov
jecxz
mov
iret
sub
jge
mov
or
xchg
les
xor
into
stc
outsl
jecxz
mov
popa
xchg
mov
sahf
and
mov
add
pusha
add
adc
and
insb
lahf
add
and
cmp
push
pusha
loopne
dec
mov
or
cmpb
addr16
xchg
mov
jecxz
inc
shl
aad
xchg
sbb
add
lods
loopne
lods
mov
lret
std
jge
andb
or
and
adc
inc
sub
in
adc
pusha
inc
or
ror
scas
andb
jae
cmpsl
mov
push
movsl
mov
out
push
fiaddl
loopne
flds
rolb
mov
xor
mov
lock
fnstcw
or
xor
xlat
js
shl
dec
push
shlb
push
fcomps
mov
mov
out
gs
and
add
pusha
aad
testl
in
int3
das
rcll
les
mov
sti
push
dec
stos
clc
les
jbe
test
and
pusha
loopne
jne
loopne
aam
push
inc
inc
dec
arpl
inc
in
jno
stc
push
push
xor
test
fcomip
mov
sbb
mov
mov
pop
mov
bswap
pop
dec
or
inc
mov
push
add
dec
cmp
xchg
inc
dec
mov
scas
and
push
add
adcb
pushf
push
pusha
pusha
sub
rolb
add
cmpsb
pusha
add
xor
loop
xchg
mov
inc
xchg
add
cmp
loopne
pop
cmp
add
pusha
mov
loopne
add
mov
andb
daa
and
and
adc
movsl
sbb
icebp
push
pop
subl
pop
inc
filds
outsb
mov
aam
mov
push
lock
loopne
mov
sbb
addb
dec
pop
mov
stos
shlb
fstl
add
inc
push
outsl
fistl
shll
xor
cmp
cmovp
mov
shlb
dec
sub
inc
daa
ja
add
lds
or
stos
pusha
push
inc
call
mov
jmp
loopne
adc
rol
imul
mov
jp
inc
lods
lcall
cmpb
pop
in
and
jae
rolb
bswap
sub
subb
mov
push
shl
dec
mov
xor
xchg
out
cmc
jnp
inc
repnz
inc
stos
ret
mov
pusha
fwait
jne
xlat
scas
mov
rorb
pusha
xor
ljmp
leave
in
pop
sub
and
and
jp
adc
jb
jnp
out
mov
cwtl
fstl
push
jp
or
and
add
ljmp
sub
rclb
rclb
cld
xlat
jb
sub
xchg
xchg
rolb
pusha
add
mov
jb
std
xor
testb
cltd
mov
mov
mov
cmpsb
inc
rclb
in
mov
lods
scas
add
jnp
sub
inc
inc
faddl
jae
pop
lcall
and
bound
mov
xor
addr16
stos
stos
imulb
add
pusha
mov
loopne
and
sbbb
sar
fwait
pop
cmp
lret
dec
daa
sbb
or
push
inc
inc
sbb
and
jg
add
nop
hlt
or
pop
pop
and
jl
pop
jae
push
test
insl
jl
inc
add
loopne
loopne
xchg
lock
ret
jae
loopne
pop
mov
push
mov
idivb
mov
scas
add
rol
mov
xor
pusha
subb
inc
loopne
inc
cwtl
mov
mov
inc
outsb
dec
mov
add
rolb
mov
testl
mov
pop
daa
sbb
fists
fsub
mov
inc
iret
mov
dec
gs
inc
clc
jbe
inc
pusha
cwtl
fdivp
test
sarb
sub
subb
fcmovnu
ja
lea
imul
mov
xor
aaa
xchg
inc
mov
dec
movsb
add
lcall
pusha
sar
xor
or
mov
mov
push
pusha
rclb
pop
das
jnp
fsubrl
in
fwait
cmp
jg
jne
mov
fbstp
sub
pusha
pop
jne
fcoml
in
mov
jns
outsl
or
add
xor
xor
inc
out
sub
xor
jbe
loopne
dec
test
add
xchg
or
loopne
mov
in
mov
or
aaa
mov
inc
mov
add
mov
xor
or
loopne
cld
push
add
xlat
cs
pusha
mov
adc
movsb
inc
inc
rorl
into
mov
mov
shlb
mov
pushf
mov
xor
mov
push
inc
mov
cmp
inc
pusha
pop
cmpsb
mov
pop
push
jg
jmp
fimuls
and
or
pusha
andb
adc
or
hlt
push
xor
mov
mov
pop
popf
sbb
and
test
inc
lret
andb
cmp
pusha
pusha
out
mov
sbb
cld
ret
and
jnp
imul
adc
divl
and
xchg
cmp
rolb
add
lahf
cmpsb
loopne
inc
pop
mov
and
push
sbb
xor
add
ss
sti
push
xchg
jno
andb
and
sahf
int
lret
jl
test
add
scas
dec
sbb
icebp
inc
xchg
add
add
sbb
or
adc
sbbb
std
sub
inc
shlb
mov
xchg
nop
in
sub
adcb
sbb
rol
jbe
pop
pop
stos
pushf
cmp
dec
sub
loopne
mov
fisubrs
and
and
mov
push
dec
pusha
and
jp
or
and
xchg
cld
push
andb
insb
in
rorb
fistl
or
in
in
pop
and
mov
int
cmp
addb
flds
jecxz
mov
mov
mov
xor
aad
jno
sbb
mov
orb
mov
pop
leave
dec
mov
ret
and
xchg
cmp
mov
aam
add
push
loopne
in
lods
pusha
and
jg
mov
and
mov
pusha
cmp
inc
mov
and
pop
xchg
int
push
adc
sbb
xor
mov
popfw
sub
pusha
int3
std
cltd
mov
fs
fwait
lds
mov
arpl
aas
mov
hlt
pop
daa
out
jne
push
or
subb
mov
das
inc
add
dec
jecxz
mov
push
xchg
inc
push
mov
mov
jg
xchg
jns
and
inc
xor
inc
and
xor
arpl
sub
cmpl
and
sub
inc
das
mov
push
xor
inc
add
xor
jmp
call
pop
lret
test
ficomps
insb
divl
test
xor
add
rcrb
fscale
dec
adc
call
mov
sbb
or
mov
push
mov
popf
jle
je
sbb
jg
or
and
inc
dec
pusha
sbbl
cmp
call
and
out
xor
leave
xbegin
fdecstp
iret
cs
dec
in
xchg
jmp
jns
pop
mov
xchg
or
xchg
rol
andb
repnz
jp
fwait
inc
outsb
inc
dec
inc
scas
shlb
cwtl
cli
lcall
jns
cli
enter
sahf
imul
rolb
sub
rolb
loopne
popf
sbb
pop
fildll
test
add
mov
inc
insl
push
movsl
ret
fimuls
xor
mov
iret
mov
mov
rolb
mov
pop
cmp
outsl
pop
fwait
mov
lock
ja
push
sbb
cmp
sbb
jae
jno
cmc
mov
add
xchg
adc
ds
rolb
mov
inc
inc
sti
lahf
bound
xchg
movsl
addb
sbb
jmp
xchg
jne
mov
add
lock
push
jae
andb
mov
add
stos
and
enter
lea
sbb
and
push
mov
stc
add
loop
xor
inc
push
in
and
add
and
loopne
push
test
pop
in
out
inc
add
cltd
mov
out
int3
mov
cmp
inc
dec
xchg
sub
mov
or
inc
mov
inc
sahf
jo
pop
mov
sub
add
mov
mov
lods
lds
add
inc
and
mov
inc
ret
sbb
lds
xor
repz
push
mov
sub
push
push
lea
push
lea
push
pushl
call
test
jl
mov
mov
and
cmpl
jne
and
or
test
jne
mov
cmp
jb
cmp
jbe
cmp
je
cmp
je
leave
ret
cmpl
jne
xor
inc
jmp
nop
nop
nop
add
popa
add
imul
jae
je
add
push
add
add
add
outsl
add
data16
add
add
mov
push
mov
push
push
push
push
xor
mov
mov
cmp
jne
lea
push
call
mov
xor
cmp
jl
cmp
jne
cmp
je
mov
mov
or
pushl
je
pushl
pushl
pushl
pushl
pushl
push
pushl
call
mov
test
jl
mov
orl
cmpl
jne
test
je
cmpl
jne
xor
pop
mov
pop
pop
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
test
jl
xor
pop
ret
nop
nop
nop
adc
adc
je
jbe
nop
nop
nop
nop
mov
push
mov
sub
mov
push
mov
push
xor
movl
mov
mov
mov
mov
cmp
jne
push
push
mov
lea
push
lea
push
push
push
lea
push
pushl
call
cmp
jl
mov
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
movb
movb
mov
mov
mov
mov
mov
movb
xor
pop
pop
leave
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
push
push
push
push
xor
pop
mov
mov
push
pop
orl
lea
movl
rep
mov
lea
rep
stos
xor
mov
mov
lea
rep
stos
xor
xor
mov
mov
lea
rep
mov
mov
mov
mov
mov
stos
mov
mov
cmp
je
mov
lea
lea
cmp
ja
mov
mov
mov
test
jne
and
mov
jne
testb
jne
mov
and
mov
jne
mov
and
mov
je
lea
cmp
ja
testb
jne
mov
and
je
lea
cmp
ja
testb
jne
testb
jne
mov
mov
cmp
je
cmp
jne
orl
push
pop
testb
mov
jne
mov
and
je
mov
mov
mov
and
mov
jne
mov
mov
test
je
mov
and
jne
mov
testb
jne
push
push
push
call
mov
add
inc
clc
push
push
push
pushl
call
cmp
ja
jb
cmp
jae
mov
lea
mov
mov
mull
cmp
ja
jb
cmp
jae
mov
mov
lea
mov
mov
cmp
jne
push
pop
xor
lea
push
rep
lea
push
push
call
add
push
mov
push
lea
push
push
push
call
push
push
lea
push
push
push
call
mov
mov
mov
cmp
jae
mull
test
ja
jb
cmp
jae
mov
mov
cmp
jb
mov
mov
xor
div
cmp
jb
sub
mov
sub
cmp
jae
mul
test
ja
jb
cmp
jae
mov
mov
mov
sub
pop
inc
mov
sub
pop
mov
pop
leave
ret
mov
jmp
or
mov
jmp
or
mov
jmp
or
andl
jmp
or
andl
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
test
jne
mov
test
jne
mov
or
jne
pop
pop
ret
nop
nop
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
mov
xor
lea
call
add
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
mov
mov
mov
cmp
jne
mov
push
lea
push
call
xor
mov
mov
mov
lea
push
push
lea
lea
push
movl
movl
mov
call
mov
test
jge
cmp
jne
xor
cmpl
jne
mov
pop
pop
mov
xor
pop
call
leave
ret
je
jmp
mov
jmp
nop
pop
add
add
imul
jb
jns
pop
add
inc
add
dec
add
dec
add
pop
add
outsl
add
je
ja
popa
add
add
add
arpl
jb
outsl
add
outsl
add
je
pop
add
and
mov
add
inc
clc
push
push
push
pushl
call
cmp
ja
jb
cmp
jae
mov
lea
mov
mov
mull
cmp
ja
jb
cmp
jae
mov
mov
lea
mov
mov
cmp
jne
push
pop
xor
lea
push
rep
lea
push
push
call
add
push
mov
push
lea
push
push
push
call
push
push
lea
push
push
push
call
mov
mov
mov
cmp
jae
mull
test
ja
jb
cmp
jae
mov
mov
cmp
jb
mov
mov
xor
div
cmp
jb
sub
mov
sub
cmp
jae
mul
test
ja
jb
cmp
jae
mov
mov
mov
sub
pop
inc
mov
sub
pop
mov
pop
leave
ret
mov
jmp
or
mov
jmp
or
mov
jmp
or
andl
jmp
or
andl
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
test
jne
mov
test
jne
mov
or
jne
pop
pop
ret
nop
nop
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
mov
xor
lea
call
add
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
mov
mov
mov
cmp
jne
mov
push
lea
push
call
xor
mov
mov
mov
lea
push
push
lea
lea
push
movl
movl
mov
call
mov
test
jge
cmp
jne
xor
cmpl
jne
mov
pop
pop
mov
xor
pop
call
leave
ret
je
jmp
mov
jmp
nop
pop
add
add
imul
jb
jns
pop
add
inc
add
dec
add
dec
add
pop
add
outsl
add
je
ja
popa
add
add
add
arpl
jb
outsl
add
outsl
add
je
pop
add
fs
movsl
add
and
mov
add
sbb
rcrl
imul
mov
adc
rorb
insl
mov
subb
sti
test
aaa
jp
adc
add
popf
test
rorb
jnp
fildll
pop
sti
xchg
out
sbb
imul
mov
inc
push
jno
mov
pop
sbb
nop
push
nop
lea
pusha
and
sub
and
inc
push
lock
pop
cmp
pop
or
inc
jbe
inc
mov
mov
pop
test
lahf
notl
loopne
sbb
and
jae
sub
mov
and
lret
out
es
pusha
or
mov
pushf
dec
mov
add
leave
xor
idivb
lret
mov
mov
mov
loopne
pop
inc
stc
movsb
addb
mov
mov
inc
pushf
sbb
cmpsb
loopne
fldl
call
aas
cmpsl
xchg
jns
and
cli
packsswb
cmc
movsb
loopne
fldenv
and
and
mov
mov
mov
rolb
pusha
das
cmp
mov
hlt
inc
xchg
into
dec
xlat
outsl
ljmp
pusha
add
mov
lods
inc
rolb
orb
test
loopne
cmp
mov
xor
and
lods
add
sti
stos
mov
rolb
mov
adc
or
pop
int
xchg
lret
iret
div
jb
jp
mov
mov
push
add
pusha
mov
shrb
pop
mov
pusha
sarb
shlb
push
fnstcw
in
dec
push
cmpsl
pop
push
xor
add
push
or
sar
sbb
lods
loope
in
adc
test
lds
stc
shl
push
es
loopne
mov
fistps
xchg
fdiv
lret
mov
call
push
pusha
jecxz
insb
mov
sbb
pusha
xorb
andb
pusha
call
les
mov
mov
int
data16
cs
fidivs
mov
mov
andb
push
ds
loopne
dec
std
sbb
shl
pop
arpl
inc
lock
pusha
stc
or
pop
lea
ret
xchg
fldl2t
fcmovu
mov
add
sbb
stos
xchg
mov
lahf
addr16
loopne
xor
fldcw
pusha
pusha
inc
ret
jle
int3
lea
into
push
add
loopne
inc
add
in
pop
lcall
xchg
stc
push
in
test
loopne
movsl
movb
pop
sub
loopne
pop
sbb
push
xor
cltd
mov
dec
cmp
loopne
cli
leave
jns
push
pop
aaa
inc
mov
jmp
dec
ja
jl
ret
stos
aad
sub
pusha
add
and
into
bound
mov
push
stos
and
jns
xor
sub
and
and
lock
jns
mov
loopne
mov
jo
sahf
idivl
test
mov
imul
add
xchg
jnp
adc
mov
movntq
xchg
rolb
pusha
cld
sbb
inc
bound
jl
rorl
inc
sbb
insl
pop
push
inc
shrb
xor
and
subl
mov
mov
adc
fwait
popa
sub
shl
enter
sbb
pusha
mov
mov
insb
push
and
add
aad
sub
mov
call
shll
popa
loop
cmc
and
cmpsl
inc
push
cwtl
in
dec
mov
dec
sbb
pusha
pusha
in
mov
fwait
and
add
dec
fisttps
dec
mov
scas
add
mov
mov
pusha
and
jle
sub
addb
dec
add
ja
iret
cmc
into
fs
enter
pusha
aaa
and
popa
or
shl
push
lret
imul
inc
insb
mov
scas
loopne
sub
push
aaa
enter
and
adc
rcrb
paddd
pushf
cmp
loopne
inc
iret
pop
data16
and
sbb
push
pop
repz
push
mov
mov
and
and
xchg
jnp
mov
sbb
addb
rcrl
add
popa
pusha
xor
loopne
push
pop
test
sti
push
rorl
fmuls
or
push
ret
add
stc
mov
stos
shlb
lea
mov
mov
fwait
add
loopne
push
shll
pop
or
maskmovq
cmpsb
pusha
rolb
in
sub
pusha
mov
dec
shr
add
clc
leave
pop
push
out
dec
xchg
js
iret
addb
std
jne
ljmp
scas
mov
mov
pop
aas
pop
enter
ss
or
loopne
jmp
and
into
xor
add
insl
fwait
sbb
and
les
mov
mov
adc
push
push
rcr
xchg
mov
inc
fdivr
sub
shrl
sub
rorl
jns
xchg
xor
inc
lock
cld
dec
push
loop
js
xchg
sbb
adc
mov
pop
aad
xor
mov
stos
andb
mov
imul
ss
into
popa
btr
jbe
nop
push
mov
adc
in
fcmovu
div
jne
js
inc
out
ror
mov
jb
push
mov
pop
pushf
call
cwtl
icebp
push
in
in
push
sahf
jbe
aas
jle
sbb
popa
mov
movsb
pusha
inc
fnstsw
int
out
and
cmp
inc
daa
js
test
fisttpl
mov
mov
leave
shll
cmp
rorl
cmp
cld
fsubrp
faddl
test
add
dec
shl
pop
punpckhwd
and
mov
sub
hlt
in
pop
inc
movswl
lock
and
pusha
push
add
xor
jnp
ret
push
pop
xor
and
pusha
cmpsl
xchg
jb
insl
es
mov
fwait
stos
xlat
aaa
fcomps
jo
add
push
and
jb
push
cld
pop
icebp
mov
push
jmp
push
pop
push
lahf
pop
xchg
add
cmp
mov
pop
rorb
lods
inc
pusha
pop
lcall
inc
cli
adc
shlb
mov
xchg
mov
jg
nop
out
out
xchg
stos
in
xlat
mov
mov
pop
imul
aad
js
out
addr16
rolb
jge
cld
fsts
dec
in
pushf
and
shlb
test
loopne
andl
lret
cmp
pop
icebp
add
scas
mov
inc
and
add
xchg
das
push
mov
into
int3
in
jbe
test
subb
xlat
std
shrb
dec
xor
and
sarb
inc
cmc
pop
leave
addb
fldcw
sahf
pop
jns
and
andb
rclb
pop
mov
and
and
pusha
daa
mov
fldt
pusha
add
stos
mov
sub
mov
add
pop
push
and
movsl
fistl
dec
inc
jg
inc
inc
sbb
push
mov
dec
aad
das
imulb
shlb
insl
repz
sarb
pusha
loopne
andb
mov
mov
add
push
std
push
fdivl
daa
add
loopne
outsb
inc
sbb
and
mov
mov
inc
cmp
andb
outsl
jns
addb
mov
xchg
xor
jecxz
dec
pop
pop
inc
xor
dec
clc
pop
dec
data16
and
subb
dec
cmc
outsb
cs
mov
and
mov
inc
push
mov
ds
pusha
loopne
movsb
addb
loopne
push
mov
inc
rolb
loopne
sbb
fucomip
push
loopne
push
xchg
and
loopne
cmc
lcall
pusha
negb
mov
and
add
pusha
sbb
xlat
fildl
pusha
push
mov
out
addb
sahf
daa
ret
addb
rolb
into
loope
jmp
push
sub
push
inc
sub
pop
mov
push
pusha
mov
bound
and
inc
lock
mov
daa
and
rcrb
xor
xchg
mov
mov
bound
push
jp
je
insl
xor
and
loopne
dec
in
int
stos
andb
ljmp
rcr
mov
xor
mov
mov
in
adc
loopne
fisubrs
loopne
dec
jae
pushf
movl
cwtl
xor
cwtl
adc
loopne
adc
fcompl
outsb
mov
arpl
in
popa
lds
les
nop
mulb
jecxz
jno
iret
mov
add
loopne
jge
jmp
mov
repz
jb
fidivrl
fcoml
lea
mov
push
mov
testl
adc
inc
cmpsl
movsl
insl
jne
push
clc
mov
bnd
add
inc
sbb
adc
loop
xor
push
out
add
loopne
push
inc
shl
mov
shl
iret
jae
stos
mov
test
rcr
lret
jo
cltd
push
and
add
xchg
jp
loopne
xor
inc
and
inc
hlt
lret
mov
cmp
loopne
jmp
orl
jb
mov
sbb
push
pop
enter
aaa
clc
sbb
add
es
call
stc
pushf
pop
add
mov
xor
add
xor
scas
and
adc
sarb
and
shll
add
add
ljmp
daa
ret
mov
adc
into
aas
ret
data16
inc
jo
add
into
cmp
repnz
loopne
nop
jmp
addb
test
and
mov
lcall
mov
add
shr
shll
inc
adcl
push
scas
loopne
ret
and
or
add
rcrb
pusha
jmp
dec
popa
jle
sub
and
shlb
fwait
hlt
and
xor
lahf
push
loopne
imul
ret
add
orb
sbb
xor
ret
push
loopne
test
out
mov
or
andb
clc
sub
enter
cmp
mov
jmp
shlb
fildl
jne
pusha
inc
jb
xchg
mov
and
mov
push
sbb
push
insb
dec
cwtl
ja
pusha
mov
loopne
add
shr
nop
movsl
sub
and
and
or
ror
out
into
mov
stos
inc
inc
push
cld
jmp
pop
std
outsl
jg
mov
out
sbb
lods
add
outsl
push
imul
aas
test
and
pusha
sar
sbb
xlat
je
add
mov
cld
sub
scas
rolb
pusha
pusha
int
and
cmp
fcoms
xor
mov
les
std
mov
pop
jbe
xchg
call
pusha
orb
inc
fidivs
push
add
inc
sub
mov
mov
inc
out
dec
sbb
dec
add
adc
push
clc
mov
ja
pop
xor
gs
mov
inc
sub
and
enter
and
fsubp
out
lods
and
sub
inc
andb
jge
repnz
sbb
xor
cmp
movsb
inc
inc
xchg
pushf
or
subb
pop
mov
sub
push
sbb
aas
cltd
lock
sbb
jno
and
and
and
lea
add
jnp
and
loopne
fiaddl
push
and
outsb
xchg
sbb
pop
pushf
jecxz
mov
mov
and
shl
ret
cmc
and
loope
ret
pusha
mov
test
pop
shl
cmp
int
add
stos
and
xor
orb
mov
sbb
fimull
mov
out
pushf
push
pusha
inc
cmpsb
rolb
leave
sbb
lods
pusha
addb
pushf
mov
xchg
cmc
imul
and
inc
and
je
and
loopne
aad
mov
mov
sbb
mov
popa
rcll
inc
xor
js
xchg
jecxz
pop
mov
int
and
repz
inc
mov
mov
and
add
jmp
and
xchg
stos
inc
adc
pop
stos
pop
push
and
in
mov
cmpsb
loopne
pop
xchg
add
mov
shl
in
shll
pop
xor
pop
adc
inc
pusha
test
push
mov
xchg
mov
pop
aaa
pop
clc
pop
lock
lcall
or
scas
mov
mov
js
pushf
xor
inc
loopne
popf
pop
or
outsl
or
push
cmpsb
and
cltd
cmp
add
and
pusha
data16
and
inc
enter
inc
pop
mov
shlb
ret
sti
cmp
add
dec
xor
sub
stos
pusha
inc
mov
and
loop
push
inc
add
add
into
loopne
cmp
test
loopne
movsb
pusha
rcrb
cmpsb
pusha
addb
test
shlb
roll
loop
sti
xor
pop
cmp
pop
sub
sub
push
inc
inc
ss
int
mov
lcall
out
push
jge
jbe
out
add
mov
inc
jg
pop
popf
mov
pusha
int3
mov
push
add
fstpt
sbb
dec
xor
subl
mov
add
or
cmpb
sub
orb
add
and
inc
addb
clc
imul
fisubrl
imul
int
adc
fldln2
popa
sbb
ret
jle
filds
mov
pop
addb
cli
addr16
mov
inc
cmc
and
imul
bound
call
arpl
repnz
sbb
or
subb
sub
mov
addl
rcr
rclb
pop
xchg
jne
icebp
scas
mov
test
xchg
in
xor
sub
lret
loopne
js
fimull
hlt
mov
xlat
aam
xlat
cmp
movsb
pusha
and
addb
mov
in
leave
nop
jmp
out
push
cld
out
lea
nop
clc
repnz
cld
jae
xchg
add
cmp
stc
add
nop
clc
repnz
cld
jae
add
mov
mov
clc
repnz
cld
jae
jno
js
gs
add
imul
in
leave
nop
jmp
add
insl
add
js
rolb
stos
nop
clc
repnz
cld
jae
hlt
insl
add
add
rorb
mov
nop
clc
repnz
cld
jae
mov
add
cmp
pop
nop
push
mov
leave
nop
jmp
testb
adc
sbb
test
add
nop
clc
repnz
cld
jae
add
add
mov
push
mov
xchg
ret
add
add
add
pop
push
jno
loop
mov
xchg
ret
push
add
adc
js
mov
nop
clc
repnz
cld
jae
add
add
jmp
andl
nop
cld
jae
add
add
nop
clc
repnz
cld
jae
imul
je
mov
fistpl
push
mov
xchg
ret
add
add
and
pop
nop
clc
repnz
cld
jae
mov
add
add
xchg
loopne
mov
push
mov
xchg
ret
push
add
add
int
xchg
mov
nop
push
mov
leave
nop
jmp
push
add
and
add
push
mov
xchg
ret
xchg
sub
arpl
in
leave
nop
jmp
add
add
pop
out
xchg
nop
clc
repnz
cld
jae
icebp
add
jno
add
add
loop
jno
and
push
fs
clc
repnz
cld
jae
add
add
pop
add
nop
clc
repnz
cld
jae
add
add
adc
ficomps
and
add
add
imul
add
add
dec
add
cmp
add
and
inc
dec
mov
addb
dec
sub
jne
inc
add
les
push
rolb
mov
push
mov
xchg
ret
add
pop
push
aad
rclb
addl
sub
les
jbe
pop
nop
clc
repnz
cld
jae
add
add
add
loope
leave
nop
clc
repnz
cld
jae
add
mov
jle
push
nop
push
mov
leave
nop
jmp
rolb
xchg
xchg
add
out
lea
sti
nop
clc
repnz
cld
jae
mov
cld
testb
hlt
data16
lahf
call
nop
clc
repnz
cld
jae
sti
add
jno
cld
nop
clc
repnz
cld
jae
jne
add
dec
je
nop
sub
nop
push
mov
leave
nop
jmp
jno
test
add
push
nop
clc
repnz
cld
jae
gs
cmp
xchg
add
push
mov
xchg
ret
add
add
push
add
xchg
cmp
xchg
inc
add
add
add
add
cld
out
enter
nop
cld
jae
add
add
in
leave
nop
jmp
add
pop
add
ret
add
jae
int
dec
insl
add
lahf
stos
nop
clc
repnz
cld
jae
ds
les
in
je
nop
clc
repnz
cld
jae
add
add
in
leave
nop
jmp
sbb
sub
add
test
push
nop
clc
repnz
cld
jae
add
push
add
pop
nop
clc
repnz
cld
jae
test
cmp
xchg
add
jne
rep
nop
clc
repnz
cld
jae
add
add
js
lods
add
xor
clc
repnz
cld
jae
mov
je
int
jno
jle
mov
nop
clc
repnz
cld
jae
add
mov
add
inc
gs
nop
clc
repnz
cld
jae
out
sti
cld
lds
add
mov
nop
clc
repnz
cld
jae
js
add
nop
push
mov
leave
nop
jmp
sbb
int
add
test
clc
repnz
cld
jae
add
clc
repnz
cld
jae
sub
stos
add
lds
sbb
add
nop
push
mov
leave
nop
jmp
sbb
add
cmp
nop
push
mov
leave
nop
jmp
mov
add
mov
dec
decb
mov
pop
add
nop
clc
repnz
cld
jae
add
add
lock
fidivs
add
nop
jmp
dec
mov
mov
icebp
nop
push
mov
leave
nop
jmp
hlt
cld
push
add
addr16
nop
clc
repnz
cld
jae
les
add
add
push
cmc
pop
nop
push
mov
leave
nop
jmp
add
add
lret
fnstcw
nop
clc
repnz
cld
jae
hlt
add
mov
cmp
mov
xchg
ret
add
push
push
shlb
and
sbb
nop
clc
repnz
cld
jae
add
mov
rclb
mov
nop
push
mov
leave
nop
jmp
add
mov
push
mov
xchg
ret
les
add
in
bound
adc
pause
push
mov
leave
nop
jmp
add
int
add
add
stos
nop
clc
repnz
cld
jae
test
push
fnstenv
add
nop
clc
repnz
cld
jae
add
mov
nop
cld
jae
mov
push
notl
mov
xchg
ret
testb
push
and
adc
fld1
nop
clc
repnz
cld
jae
add
add
jne
pusha
cmp
call
cld
jae
test
sbb
les
pop
nop
push
mov
leave
nop
jmp
pop
adc
stos
testb
add
nop
clc
repnz
cld
jae
ret
mov
push
nop
clc
repnz
cld
jae
add
sub
cld
add
jne
nop
clc
repnz
cld
jae
add
pop
push
cwtl
js
fistpl
push
mov
xchg
ret
add
sub
imul
mov
sub
push
mov
leave
nop
jmp
add
push
sub
nop
clc
repnz
cld
jae
mov
sqrtps
jae
add
jno
add
sbb
cmp
jae
mov
add
xchg
pusha
mov
xchg
nop
clc
repnz
cld
jae
push
mov
add
add
push
nop
clc
repnz
cld
jae
cmp
add
imul
iret
pop
push
mov
xchg
ret
push
and
pop
add
loop
pusha
loopne
mov
pusha
rcpps
jae
add
hlt
add
mov
clc
repnz
cld
jae
add
adc
mov
nop
clc
repnz
cld
jae
add
sbb
mov
dec
xchg
cmpl
nop
push
mov
leave
nop
jmp
data16
add
nop
clc
repnz
cld
jae
add
add
add
push
inc
add
repnz
cld
jae
cmp
pop
push
nop
clc
repnz
cld
jae
cmp
mov
movsb
loopne
int3
fistps
clc
repnz
cld
jae
sub
push
add
xlat
lds
jle
ja
test
adc
add
nop
jmp
je
push
repz
nop
clc
repnz
cld
jae
add
xchg
mov
cmp
nop
clc
repnz
cld
jae
add
add
and
and
mov
xchg
ret
add
add
pop
sub
nop
clc
repnz
cld
jae
mov
lods
addb
fidivs
in
leave
nop
jmp
mov
hlt
sub
add
jne
movsb
nop
clc
repnz
cld
jae
add
add
jge
rcr
clc
repnz
cld
jae
add
lds
add
add
add
add
hlt
add
insl
pop
mov
clc
dec
jno
adc
jae
out
push
mov
add
push
push
mov
xchg
ret
cmp
add
lret
inc
nop
clc
repnz
cld
jae
jmp
add
dec
mov
sub
subl
push
mov
xchg
ret
add
cmp
test
dec
sbb
repnz
cld
jae
add
add
jne
inc
and
clc
repnz
cld
jae
jne
sbb
insl
pop
ucomiss
clc
repnz
cld
jae
out
push
test
add
add
mov
adc
push
mov
leave
nop
jmp
cld
js
rolb
jns
loop
push
mov
xchg
ret
hlt
add
ds
push
lahf
mov
nop
push
mov
leave
nop
jmp
xor
add
sarb
inc
loopne
mov
nop
clc
repnz
cld
jae
add
jno
add
adc
jae
add
push
add
dec
popf
jmp
insl
sub
xchg
xchg
add
mov
les
dec
std
movzwl
push
mov
xchg
ret
adc
add
add
push
nop
clc
repnz
cld
jae
add
xchg
add
add
jae
nop
clc
repnz
cld
jae
sti
add
add
push
push
mov
xchg
ret
mov
push
insl
mov
inc
mov
nop
clc
repnz
cld
jae
les
je
lock
push
mov
leave
nop
jmp
add
inc
push
add
into
pop
jne
nop
clc
repnz
cld
jae
test
xchg
mov
add
clc
repnz
cld
jae
add
add
and
mov
push
mov
xchg
ret
cmp
add
clc
add
mov
adcb
nop
clc
repnz
cld
jae
out
add
mov
inc
mov
jmp
pop
add
xor
add
push
sub
add
stos
mov
add
add
nop
clc
repnz
cld
jae
mov
fistpl
nop
clc
repnz
cld
jae
sub
sbb
add
outsb
mov
clc
repnz
cld
jae
out
add
int
add
add
nop
clc
repnz
cld
jae
inc
hlt
add
nop
clc
repnz
cld
jae
mov
icebp
dec
pop
pop
nop
clc
repnz
cld
jae
data16
je
ret
add
xor
nop
cld
jae
sti
add
push
je
mov
aas
mov
nop
clc
repnz
cld
jae
add
inc
add
add
clc
repnz
cld
jae
hlt
xor
add
pop
movswl
nop
clc
repnz
cld
jae
je
lds
scas
mov
nop
clc
repnz
cld
jae
add
jns
hlt
add
nop
clc
repnz
cld
jae
js
jno
add
add
add
repnz
cld
jae
pop
js
mov
cmpl
jae
add
cmp
addb
cmp
ret
add
add
add
add
mov
nop
clc
repnz
cld
jae
sub
mulb
push
push
push
nop
clc
repnz
cld
jae
add
out
add
mov
clc
repnz
cld
jae
sti
mov
adc
push
nop
push
mov
leave
nop
jmp
hlt
push
les
sti
add
add
nop
push
mov
leave
nop
jmp
jns
ret
iret
push
nop
clc
repnz
cld
jae
dec
mov
push
mov
xchg
ret
adc
add
add
pusha
int3
filds
clc
nop
clc
repnz
cld
jae
out
sbb
cmp
add
cli
ficoms
imulb
xchg
jae
sbb
mov
call
nop
clc
repnz
cld
jae
mov
add
dec
sbb
xlat
test
xchg
ret
xchg
add
add
add
add
push
push
mov
xchg
ret
add
add
push
sti
add
add
push
nop
clc
repnz
cld
jae
imul
jns
ret
add
clc
repnz
cld
jae
mov
mov
push
nop
push
mov
leave
nop
jmp
adc
mov
adc
and
or
clc
repnz
cld
jae
out
jne
sti
add
push
mov
push
mov
xchg
ret
add
add
add
mov
nop
clc
repnz
cld
jae
pop
insl
les
shl
jmp
out
pop
pop
add
add
ret
add
ret
add
push
add
nop
clc
repnz
cld
jae
add
add
add
nop
push
mov
leave
nop
jmp
push
clc
dec
out
add
aas
popa
nop
clc
repnz
cld
jae
push
add
add
add
xor
nop
clc
repnz
cld
jae
add
add
neg
call
cld
jae
xchg
int
add
clc
lahf
add
push
mov
xchg
ret
add
and
add
ljmp
enter
in
leave
nop
jmp
add
jno
popa
nop
push
mov
leave
nop
jmp
add
pop
add
add
sbb
mov
nop
clc
repnz
cld
jae
mov
sbb
add
scas
pop
push
mov
xchg
ret
add
add
sti
adc
sub
mov
nop
clc
repnz
cld
jae
mov
add
out
add
add
leave
mov
nop
clc
repnz
cld
jae
push
les
add
shlb
add
roll
sti
nop
clc
repnz
cld
jae
mov
add
add
nop
clc
repnz
cld
jae
clc
add
je
rolb
sahf
jecxz
dec
sub
jae
mov
sbb
add
addr16
nop
push
mov
leave
nop
jmp
rclb
mov
nop
push
mov
leave
nop
jmp
add
xor
popa
nop
push
mov
leave
nop
jmp
add
sbb
jmp
cmp
loopne
push
push
mov
xchg
ret
add
gs
add
test
push
mov
xchg
ret
push
mov
add
xchg
popa
nop
push
mov
leave
nop
jmp
add
add
jae
nop
push
mov
leave
nop
jmp
add
sub
out
leave
mov
nop
clc
repnz
cld
jae
out
sbb
push
push
add
loopne
rep
nop
clc
repnz
cld
jae
hlt
lds
les
add
clc
repnz
cld
jae
push
sarb
add
and
nop
clc
repnz
cld
jae
jns
add
add
dec
add
nop
clc
repnz
cld
jae
les
pop
add
fcoms
nop
clc
repnz
cld
jae
add
lds
jmp
dec
rol
nop
push
mov
leave
nop
jmp
add
imul
pop
and
nop
clc
repnz
cld
jae
add
add
sbb
test
nop
push
mov
leave
nop
jmp
add
rolb
add
add
jo
je
nop
push
mov
leave
nop
jmp
add
dec
dec
jmp
call
add
add
icebp
add
out
adc
mov
inc
in
nop
clc
repnz
cld
jae
add
add
fsubrp
mov
nop
clc
repnz
cld
jae
imul
idivb
int
cmp
call
nop
clc
repnz
cld
jae
add
pop
stos
data16
fwait
push
mov
xchg
ret
add
add
jne
push
les
push
mov
xchg
ret
add
dec
mov
push
mov
xchg
ret
hlt
stos
add
cmc
add
nop
clc
repnz
cld
jae
add
stos
hlt
gs
inc
xor
nop
clc
repnz
cld
jae
dec
add
data16
mov
xor
cmp
ret
imul
add
xchg
xchg
call
push
push
popl
nop
clc
repnz
cld
jae
sti
push
rolb
add
mov
xchg
ret
add
int
add
mov
clc
repnz
cld
jae
sub
add
loopne
and
push
mov
leave
nop
jmp
mov
xor
add
nop
clc
repnz
cld
jae
pop
jns
sub
clc
repnz
cld
jae
add
les
mov
movsb
andb
pop
or
push
mov
leave
nop
jmp
rcrb
int
add
aas
je
nop
clc
repnz
cld
jae
add
js
jl
nop
clc
repnz
cld
jae
insl
hlt
hlt
dec
fsubrs
call
nop
clc
repnz
cld
jae
and
out
popa
mov
nop
clc
repnz
cld
jae
add
jns
add
nop
clc
repnz
cld
jae
add
cld
add
mov
push
mov
xchg
ret
cmp
out
jmp
add
ror
mov
nop
clc
repnz
cld
jae
and
repz
push
mov
xchg
ret
pop
mov
mov
std
jne
nop
clc
repnz
cld
jae
add
pop
xchg
sub
push
mov
xchg
ret
jno
add
jne
nop
clc
repnz
cld
jae
stos
add
xlat
add
nop
clc
repnz
cld
jae
add
ds
and
push
mov
leave
nop
jmp
stos
add
and
nop
push
mov
leave
nop
jmp
add
adc
xchg
or
clc
repnz
cld
jae
add
add
adc
fld1
nop
push
mov
leave
nop
jmp
add
add
add
nop
clc
repnz
cld
jae
add
stos
mulb
dec
pusha
nop
clc
repnz
cld
jae
cld
add
jno
gs
scas
loopne
xlat
fld1
nop
clc
repnz
cld
jae
out
add
add
add
pushf
jno
jbe
nop
clc
repnz
cld
jae
push
add
hlt
pop
lea
push
mov
xchg
ret
mov
xchg
push
adc
and
mov
adc
clc
repnz
cld
jae
add
gs
mov
add
nop
cld
jae
add
add
jp
xor
nop
clc
repnz
cld
jae
sbb
push
add
push
test
add
nop
clc
repnz
cld
jae
add
shl
mov
nop
clc
repnz
cld
jae
gs
add
gs
nop
clc
repnz
cld
jae
add
add
lds
inc
sub
jne
push
mov
xchg
ret
insl
add
insl
add
daa
add
nop
clc
repnz
cld
jae
ret
xchg
add
je
jmp
pop
and
clc
repnz
cld
jae
add
mov
pop
push
push
push
mov
xchg
ret
add
add
jno
testb
mov
nop
clc
repnz
cld
jae
pop
lds
add
nop
clc
repnz
cld
jae
div
insl
out
imul
mov
leave
nop
jmp
add
testb
cld
push
popf
push
nop
clc
repnz
cld
jae
mov
int
add
add
nop
clc
repnz
cld
jae
clc
add
add
add
and
push
mov
xchg
ret
add
pop
data16
jb
andb
test
xchg
ret
js
push
mov
inc
mov
push
nop
clc
repnz
cld
jae
add
icebp
jno
and
gs
nop
push
mov
leave
nop
jmp
adc
add
add
push
mov
repnz
cld
jae
mov
jmp
xchg
pop
rep
push
mov
xchg
ret
add
add
shlb
js
sbb
clc
repnz
cld
jae
push
js
add
jns
push
push
mov
xchg
ret
add
out
add
push
add
sub
clc
repnz
cld
jae
add
sti
add
add
clc
repnz
cld
jae
je
add
lds
jmp
mov
ret
ficomps
cmp
push
mov
leave
nop
jmp
xor
add
add
pop
push
mov
xchg
ret
sub
sub
add
sub
add
dec
nop
clc
repnz
cld
jae
add
add
add
add
push
mov
xchg
ret
gs
sub
mov
dec
call
leave
cmp
push
mov
xchg
ret
add
js
add
nop
clc
repnz
cld
jae
mov
jmp
ss
lahf
cld
nop
clc
repnz
cld
jae
add
mov
push
jns
nop
clc
repnz
cld
jae
lds
sbb
int
lods
nop
clc
repnz
cld
jae
add
add
add
jmp
xchg
repnz
cld
jae
add
les
xchg
pop
lahf
mov
nop
clc
repnz
cld
jae
add
xchg
add
fistpl
push
mov
xchg
ret
push
mov
sub
pop
call
nop
push
mov
leave
nop
jmp
add
add
and
cmpw
nop
push
mov
leave
nop
jmp
dec
add
test
loopne
push
nop
clc
repnz
cld
jae
add
data16
addb
sub
sbb
jecxz
push
mov
xchg
ret
int
adc
add
clc
repnz
cld
jae
add
cld
add
in
jne
nop
clc
repnz
cld
jae
mov
add
push
push
mov
xchg
ret
pop
sub
add
add
pop
or
push
and
aam
lea
nop
push
mov
leave
nop
jmp
ret
add
add
add
mov
xchg
ret
add
les
mov
lret
nop
clc
repnz
cld
jae
add
push
add
idiv
dec
inc
mov
nop
clc
repnz
cld
jae
add
sbb
ret
push
scas
mov
clc
repnz
cld
jae
hlt
hlt
popw
hlt
add
insl
ds
clc
push
mov
xchg
ret
jno
add
out
add
int
cmp
nop
cld
jae
les
add
add
push
push
nop
clc
repnz
cld
jae
add
les
jbe
mov
nop
clc
repnz
cld
jae
cld
sbb
arpl
clc
repnz
cld
jae
imul
mov
add
pop
push
push
mov
xchg
ret
add
add
pop
add
inc
nop
push
mov
leave
nop
jmp
add
pop
or
add
nop
jmp
xchg
add
les
push
mov
xchg
ret
xor
clc
sub
add
insl
push
and
push
mov
xchg
ret
add
insl
int
mov
add
clc
repnz
cld
jae
mov
add
add
mov
push
mov
xchg
ret
push
add
push
add
testb
je
js
mov
xchg
ret
jne
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
push
mov
add
nop
clc
repnz
cld
jae
add
cld
push
fwait
add
nop
push
mov
leave
nop
jmp
add
push
mov
push
push
mov
xchg
ret
sbb
xor
out
hlt
add
sub
ljmp
ja
add
add
jne
and
add
shr
cs
ljmp
add
add
add
mov
add
cmpsb
loopne
int
add
incl
nop
push
mov
leave
nop
jmp
testb
add
push
nop
clc
repnz
cld
jae
jmp
rcrb
pop
les
aaa
call
nop
clc
repnz
cld
jae
add
mov
or
add
jae
les
xlat
xlat
jne
nop
clc
repnz
cld
jae
mov
sbb
jae
lds
add
mov
mov
nop
clc
repnz
cld
jae
add
push
insl
out
xchg
xchg
inc
ror
push
mov
xchg
ret
data16
add
push
cmp
add
jae
jns
cld
les
iret
call
nop
clc
repnz
cld
jae
mov
les
push
nop
push
mov
leave
nop
jmp
add
add
dec
mov
nop
clc
repnz
cld
jae
lds
mov
mov
clc
repnz
cld
jae
add
and
loop
push
push
mov
xchg
ret
push
stos
add
add
sub
loope
test
in
call
nop
jmp
out
add
out
aaa
mov
nop
clc
repnz
cld
jae
add
add
clc
cmp
mov
push
mov
xchg
ret
sub
jno
add
out
sti
adc
mov
nop
push
mov
leave
nop
jmp
jne
jne
add
add
xor
cwtl
out
lahf
mov
nop
clc
repnz
cld
jae
je
sub
je
pop
mov
nop
clc
repnz
cld
jae
sti
xchg
add
add
xor
and
outsl
push
push
mov
xchg
ret
add
jns
clc
jmp
xlat
test
adcb
nop
cld
jae
icebp
sbb
add
add
xor
add
nop
clc
repnz
cld
jae
add
and
mov
nop
clc
repnz
cld
jae
and
pop
lds
imul
stos
pop
insl
int
add
lds
cmp
lret
shl
nop
push
mov
leave
nop
jmp
add
xor
push
sti
push
add
and
add
pop
and
add
sbb
ret
nop
push
mov
leave
nop
jmp
xlat
add
ret
add
cltd
push
nop
clc
repnz
cld
jae
add
cmp
add
adc
jae
icebp
test
add
add
inc
loopne
stos
loopne
inc
add
xorl
nop
clc
repnz
cld
jae
add
sub
xchg
mov
xchg
ret
testb
push
jg
rorl
mov
xchg
ret
pop
hlt
xchg
add
pop
add
mov
xchg
ret
add
add
add
push
mov
xchg
ret
jno
add
imul
mov
inc
jmp
push
mov
xchg
ret
hlt
hlt
mov
and
and
clc
repnz
cld
jae
add
test
cmp
fsubr
js
and
push
mov
xchg
ret
add
sub
sti
add
jne
leave
nop
push
mov
leave
nop
jmp
xlat
add
push
add
sub
arpl
add
xor
dec
mov
mov
xchg
ret
hlt
push
inc
add
lods
push
mov
xchg
ret
push
add
imul
lds
sbb
or
mov
xor
clc
repnz
cld
jae
xchg
les
insl
stos
and
rorb
rclb
jae
out
add
mov
nop
cld
jae
je
add
mov
not
nop
push
mov
leave
nop
jmp
mov
push
les
jnp
add
add
hlt
add
gs
sub
jne
nop
clc
repnz
cld
jae
cld
mov
and
ret
add
push
mov
xchg
ret
imul
mov
mov
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
mov
add
adc
clc
repnz
cld
jae
add
sti
push
test
push
out
dec
mov
nop
clc
repnz
cld
jae
push
and
sbb
add
jae
pop
mov
sub
or
dec
data16
inc
lret
orb
push
mov
xchg
ret
add
add
add
add
jae
movb
mov
cmp
ret
sub
add
mov
nop
clc
repnz
cld
jae
add
js
sub
addl
mov
add
add
inc
mov
push
mov
xchg
ret
les
sbb
add
mov
repnz
cld
jae
add
add
add
dec
dec
fld1
nop
push
mov
leave
nop
jmp
add
add
push
xchg
add
and
mov
xchg
ret
sti
add
add
add
add
pop
push
mov
mov
dec
sbb
push
imul
add
pop
adc
ljmp
ret
add
les
pop
nop
push
mov
leave
nop
jmp
je
add
insl
les
ljmp
inc
add
stos
add
add
push
mov
clc
repnz
cld
jae
add
add
add
add
push
mov
xchg
ret
add
mov
add
sbb
gs
nop
clc
repnz
cld
jae
add
add
mov
pop
push
mov
xchg
ret
add
add
push
sti
pop
inc
adc
push
mov
leave
nop
jmp
ds
stos
adc
je
cmp
cmp
nop
jmp
add
js
xchg
int
rorl
push
mov
leave
nop
jmp
xlat
add
push
ret
add
mov
xor
push
mov
xchg
ret
cmp
mov
add
inc
sbb
and
inc
add
add
add
push
add
sbb
nop
cld
jae
imul
stos
add
add
xchg
mov
nop
clc
repnz
cld
jae
jmp
add
clc
mov
sarb
add
clc
repnz
cld
jae
add
add
mov
dec
test
nop
clc
repnz
cld
jae
sbb
add
mov
xchg
ret
stos
add
add
out
add
jne
add
inc
daa
pusha
nop
clc
repnz
cld
jae
add
pop
add
call
nop
clc
repnz
cld
jae
add
add
add
and
inc
xor
nop
clc
repnz
cld
jae
int
add
add
cmp
xor
push
mov
xchg
ret
pop
add
add
add
cmp
mov
nop
clc
repnz
cld
jae
and
pop
nop
clc
repnz
cld
jae
pop
sti
sub
lods
mov
nop
push
mov
leave
nop
jmp
add
imul
loopne
add
nop
clc
repnz
cld
jae
sbb
add
add
fwait
push
mov
xchg
ret
add
pop
add
stos
jne
das
sub
nop
clc
repnz
cld
jae
add
data16
add
flds
lret
add
ret
add
jns
testb
pusha
xchg
fld1
push
mov
xchg
ret
sbb
add
add
push
push
mov
xchg
ret
add
insl
add
mov
nop
clc
repnz
cld
jae
dec
cld
push
nop
push
mov
leave
nop
jmp
add
add
jne
jae
mov
test
call
jae
add
inc
cmp
test
test
clc
repnz
cld
jae
dec
add
cmpl
cld
jae
add
pop
add
jle
xor
push
mov
xchg
ret
pop
add
sub
clc
repnz
cld
jae
add
mov
imul
nop
clc
repnz
cld
jae
add
add
add
sub
in
leave
nop
jmp
testb
add
add
pop
fdivr
js
imul
nop
clc
repnz
cld
jae
add
xchg
notb
adc
dec
push
mov
xchg
ret
je
jno
lds
add
shlb
pusha
lods
and
mov
push
mov
leave
nop
jmp
sti
dec
add
push
mov
push
push
mov
xchg
ret
stos
push
js
add
push
mov
xchg
ret
xchg
ret
add
sti
test
adc
lods
pop
nop
push
mov
leave
nop
jmp
cld
gs
add
cld
adc
cmpl
nop
push
mov
leave
nop
jmp
add
sbb
nop
clc
repnz
cld
jae
add
add
mov
xor
clc
repnz
cld
jae
add
add
rolb
cltd
mov
nop
push
mov
leave
nop
jmp
dec
add
add
add
sti
push
mov
xchg
ret
jns
add
add
les
clc
repnz
cld
jae
add
add
add
mov
clc
repnz
cld
jae
push
add
js
jne
mov
nop
push
mov
leave
nop
jmp
push
push
add
add
dec
stos
nop
clc
repnz
cld
jae
add
add
xchg
jne
and
nop
push
mov
leave
nop
jmp
sub
hlt
inc
push
fwait
push
mov
xchg
ret
add
add
add
test
call
nop
jmp
add
jmp
xlat
add
nop
push
mov
leave
nop
jmp
stos
clc
dec
add
notb
and
mov
xchg
ret
cld
imul
add
jb
cmpsb
loopne
lcall
cld
jae
add
add
add
push
inc
rcrl
clc
repnz
cld
jae
rolb
out
push
add
add
dec
nop
push
mov
leave
nop
jmp
clc
add
pop
icebp
add
sub
push
add
fwait
nop
clc
repnz
cld
jae
xchg
add
mov
testl
andl
add
insl
data16
movsl
pop
nop
clc
repnz
cld
jae
push
sbb
add
cmp
mov
nop
push
mov
leave
nop
jmp
add
mov
not
nop
clc
repnz
cld
jae
add
adc
mov
decb
lea
nop
push
mov
leave
nop
jmp
data16
push
add
jg
shl
incl
add
add
add
test
lds
dec
stos
repnz
jbe
nop
clc
repnz
cld
jae
add
jns
out
incl
dec
cmp
clc
repnz
cld
jae
add
mov
mov
nop
cld
jae
add
icebp
add
fistpl
push
mov
xchg
ret
jns
mov
cmc
jmp
insl
add
add
add
hlt
add
add
jns
xlat
cmpw
nop
push
mov
leave
nop
jmp
clc
xchg
add
adc
mov
sub
call
jae
out
add
lret
pusha
nop
clc
repnz
cld
jae
pop
add
pop
jmp
ret
cld
pop
xor
nop
clc
repnz
cld
jae
add
pop
add
add
iret
push
push
mov
xchg
ret
sbb
add
icebp
mov
loopne
mov
nop
clc
repnz
cld
jae
mov
add
repnz
cld
jae
lds
add
add
or
mov
adc
clc
repnz
cld
jae
out
add
imulb
push
push
mov
xchg
ret
add
add
add
je
mov
nop
clc
repnz
cld
jae
sbb
push
cmp
dec
add
fwait
popf
inc
add
mulb
add
jns
std
add
push
mov
xchg
ret
add
add
add
mov
loopne
nop
clc
repnz
cld
jae
out
add
mov
mov
clc
repnz
cld
jae
pop
stos
mov
repnz
cld
jae
add
add
add
cld
stos
jno
nop
clc
repnz
cld
jae
add
mov
pop
xlat
ret
jmp
push
push
mov
xchg
ret
inc
pop
add
add
add
add
call
jae
add
insl
add
subl
push
mov
xchg
ret
stos
and
push
clc
repnz
cld
jae
push
add
add
mov
push
mov
xchg
ret
add
stos
add
add
out
xor
add
nop
clc
repnz
cld
jae
divb
out
add
push
nop
clc
repnz
cld
jae
add
add
pushw
andb
nop
clc
repnz
cld
jae
add
inc
je
cld
sbb
fbld
nop
clc
repnz
cld
jae
mov
test
movzwl
nop
push
mov
leave
nop
jmp
test
gs
add
mov
nop
clc
repnz
cld
jae
jmp
add
sub
leave
nop
jmp
add
add
aam
dec
nop
push
mov
leave
nop
jmp
add
push
add
add
mov
push
mov
xchg
ret
mov
add
xlat
sub
add
nop
clc
repnz
cld
jae
out
add
imul
add
pop
nop
clc
repnz
cld
jae
jmp
pop
rolb
cmp
and
clc
repnz
cld
jae
hlt
test
add
hlt
bound
in
leave
nop
jmp
jmp
les
imul
les
test
clc
repnz
cld
jae
add
add
out
add
nop
clc
repnz
cld
jae
cmp
add
sbb
mov
sbb
nop
clc
repnz
cld
jae
push
pop
xlat
push
push
jmp
fwait
nop
push
mov
leave
nop
jmp
add
inc
add
push
nop
clc
repnz
cld
jae
sti
add
sub
insl
adc
mov
xchg
inc
add
add
les
add
incl
add
push
add
add
imul
roll
clc
repnz
cld
jae
inc
push
jno
and
repnz
cld
jae
add
push
add
mov
inc
dec
mov
nop
clc
repnz
cld
jae
add
data16
jg
nop
clc
repnz
cld
jae
and
les
mov
sub
jae
shlb
add
mov
mov
pusha
add
loopne
ficoms
add
push
test
push
mov
leave
nop
jmp
and
mov
or
in
leave
nop
jmp
imul
pop
push
nop
clc
repnz
cld
jae
add
add
jns
out
je
xchg
icebp
cwtl
inc
add
cmp
inc
push
push
mov
xchg
ret
add
add
ds
add
nop
divl
call
jae
lds
ret
add
add
addr16
nop
clc
repnz
cld
jae
add
add
add
add
add
nop
clc
repnz
cld
jae
pop
add
push
push
adc
sbb
nop
clc
repnz
cld
jae
add
add
mov
xchg
rorb
cld
jae
add
rclb
jae
add
add
add
pop
jns
dec
in
je
nop
clc
repnz
cld
jae
pop
hlt
cld
je
imul
nop
clc
repnz
cld
jae
dec
mov
push
jmp
mov
add
add
and
gs
push
mov
nop
clc
repnz
cld
jae
push
add
dec
xor
nop
push
mov
leave
nop
jmp
add
cmp
fistpll
nop
clc
repnz
cld
jae
dec
add
stos
popf
push
nop
clc
repnz
cld
jae
adc
sbb
and
dec
push
mov
nop
clc
repnz
cld
jae
push
idiv
imul
pusha
loopne
pusha
jo
sub
nop
clc
repnz
cld
jae
add
add
dec
add
push
push
mov
xchg
ret
add
mov
add
and
dec
insl
inc
add
je
push
push
sbb
enter
in
leave
nop
jmp
mov
div
stos
popa
nop
clc
repnz
cld
jae
add
stos
sub
add
js
rcll
clc
repnz
cld
jae
add
test
mov
push
mov
xchg
ret
add
imul
and
adc
jne
nop
push
mov
leave
nop
jmp
dec
add
pop
mov
push
mov
xchg
ret
pop
gs
add
push
imul
add
pop
push
mov
xchg
ret
add
add
add
mov
nop
clc
repnz
cld
jae
add
jmp
add
jae
clc
repnz
cld
jae
je
add
jb
xor
nop
clc
repnz
cld
jae
hlt
add
stos
mov
mov
nop
clc
repnz
cld
jae
add
dec
jne
push
mov
nop
clc
repnz
cld
jae
sub
inc
xlat
les
and
mov
ficoml
and
add
add
xor
insl
add
pop
call
nop
jmp
mov
sbbb
nop
cld
jae
rolb
pop
add
add
add
dec
inc
or
jb
lock
repnz
cld
jae
add
clc
insl
push
mov
stos
add
les
add
add
add
add
dec
nop
clc
repnz
cld
jae
sub
add
inc
pop
mov
push
mov
nop
push
mov
leave
nop
jmp
add
add
sbb
stos
pusha
nop
clc
repnz
cld
jae
sbb
add
jp
mov
nop
clc
repnz
cld
jae
add
int
add
scas
pop
push
mov
xchg
ret
jne
push
add
data16
js
push
push
mov
xchg
ret
add
insl
sti
out
add
adc
nop
cld
jae
add
mov
add
add
int3
push
mov
nop
clc
repnz
cld
jae
js
add
and
inc
test
call
jae
add
add
add
nop
clc
repnz
cld
jae
pop
pop
add
jmp
add
nop
clc
repnz
cld
jae
push
sbb
fld1
push
mov
xchg
ret
sti
add
dec
les
dec
xchg
mov
notl
jae
adc
sbb
pop
insl
push
repnz
icebp
add
nop
clc
repnz
cld
jae
stos
inc
xchg
pop
hlt
add
mov
xchg
ret
stos
and
mov
nop
clc
repnz
cld
jae
add
jmp
mov
out
xchg
inc
add
add
add
int
add
jb
pusha
nop
clc
repnz
cld
jae
mov
add
add
jne
nop
clc
repnz
cld
jae
push
add
mov
push
nop
clc
repnz
cld
jae
sti
add
sbb
add
mov
push
mov
xchg
ret
push
adc
add
icebp
add
add
jae
xlat
stos
add
call
nop
clc
repnz
cld
jae
stos
les
add
into
testl
and
incl
add
in
sub
clc
repnz
cld
jae
cmp
push
aam
cmpsb
inc
subb
pushl
push
mov
xchg
ret
sti
add
xlat
add
lods
fistpl
push
mov
xchg
ret
ret
add
push
jno
mulb
into
out
push
sbb
nop
cld
jae
cmp
imul
and
mov
xchg
ret
cld
add
sbb
and
sbb
nop
cld
jae
add
hlt
jne
add
push
aam
call
jae
cmp
add
call
jae
hlt
push
and
clc
call
nop
jmp
sub
outsb
adc
fld1
nop
clc
repnz
cld
jae
pop
test
add
add
loop
mov
nop
clc
repnz
cld
jae
hlt
add
jno
add
push
push
mov
xchg
ret
add
adc
adc
movzwl
nop
push
mov
leave
nop
jmp
add
sbb
lret
push
mov
xchg
ret
adc
push
jno
mov
add
nop
push
mov
leave
nop
jmp
add
add
pop
jne
nop
clc
repnz
cld
jae
imul
cli
add
and
inc
adc
push
mov
leave
nop
jmp
testb
push
pop
push
nop
clc
repnz
cld
jae
hlt
les
push
jmp
nop
cld
jae
add
je
sbb
jne
fists
jae
hlt
imul
push
nop
push
mov
leave
nop
jmp
sbb
add
mov
nop
push
mov
leave
nop
jmp
hlt
insl
and
add
add
nop
clc
repnz
cld
jae
add
les
adc
cli
nop
clc
repnz
cld
jae
add
add
clc
add
call
repnz
call
jae
add
jp
call
jae
add
add
lea
mov
xchg
ret
push
add
adc
push
add
test
add
mov
xchg
ret
sbb
add
add
loopne
test
nop
clc
repnz
cld
jae
imul
cld
test
inc
mov
add
nop
clc
repnz
cld
jae
add
js
pop
aas
xchg
nop
push
mov
leave
nop
jmp
add
les
add
pop
nop
push
mov
leave
nop
jmp
add
add
add
add
inc
push
nop
clc
repnz
cld
jae
mov
add
cmpsl
fld1
push
mov
xchg
ret
add
mov
test
stos
mov
push
mov
xchg
ret
sti
insl
add
add
nop
push
mov
leave
nop
jmp
xchg
add
add
cmp
mov
nop
cld
jae
stos
ds
insl
add
fistl
xchg
addl
cmp
ret
push
pop
add
out
add
movsl
xor
nop
clc
repnz
cld
jae
hlt
add
add
mov
and
test
push
mov
xchg
ret
add
inc
icebp
insl
push
push
insl
mov
nop
push
mov
leave
nop
jmp
add
icebp
add
inc
xchg
and
repnz
jp
filds
repz
mov
xchg
ret
add
add
add
iret
ret
nop
clc
repnz
cld
jae
int
icebp
dec
mov
fldpi
push
mov
xchg
ret
je
add
push
les
negb
nop
clc
repnz
cld
jae
xchg
add
add
ds
push
pusha
pusha
popf
fistpl
nop
clc
repnz
cld
jae
mov
add
and
add
cmp
js
hlt
xchg
add
push
nop
clc
repnz
cld
jae
js
cmp
jns
nop
clc
repnz
cld
jae
add
int
jmp
jne
test
cmpb
clc
repnz
cld
jae
inc
add
add
add
mov
push
nop
clc
repnz
cld
jae
add
add
add
jg
nop
clc
repnz
cld
jae
mov
add
add
pushl
push
mov
xchg
ret
add
add
push
add
mov
nop
cld
jae
je
insl
add
fld1
nop
clc
repnz
cld
jae
add
add
jns
add
in
push
mov
xchg
ret
push
add
insl
cmc
mov
nop
push
mov
leave
nop
jmp
ret
add
mov
out
nop
clc
repnz
cld
jae
gs
cmc
je
nop
clc
repnz
cld
jae
out
cmp
add
nop
clc
repnz
cld
jae
lds
lds
add
xorl
nop
clc
repnz
cld
jae
data16
in
pusha
and
movsb
nop
clc
repnz
cld
jae
mov
add
adc
test
xchg
fistpl
nop
clc
repnz
cld
jae
adc
cmc
xor
nop
clc
repnz
cld
jae
add
hlt
add
add
nop
push
mov
leave
nop
jmp
imul
add
add
fs
pop
push
mov
xchg
ret
dec
pop
js
add
pop
push
mov
xchg
ret
sbb
add
je
add
inc
and
mov
xchg
ret
notb
add
add
xchg
cltd
je
nop
clc
repnz
cld
jae
mov
mov
popa
pop
nop
push
mov
leave
nop
jmp
icebp
add
add
sti
and
fisttpl
xchg
addb
cmp
ret
insl
add
inc
jle
add
nop
clc
repnz
cld
jae
add
add
rolb
lods
addb
inc
rolb
add
dec
jnp
add
xlat
add
add
add
lcall
push
jl
add
add
cld
mov
push
lcall
roll
and
int
add
add
sub
lock
icebp
add
push
mov
xchg
ret
les
les
add
gs
rolb
mov
clc
repnz
cld
jae
sti
add
add
push
rorl
test
clc
repnz
cld
jae
hlt
int
outsl
xchg
nop
clc
repnz
cld
jae
clc
pop
add
jns
mov
push
mov
xchg
ret
jne
insl
add
add
outsb
aad
add
add
cld
jae
add
jno
push
or
nop
clc
repnz
cld
jae
xchg
xchg
out
and
push
mov
xchg
ret
and
add
daa
mov
push
mov
xchg
ret
mov
jmp
push
inc
mov
jge
nop
push
mov
leave
nop
jmp
int
sbb
ds
and
nop
clc
repnz
cld
jae
add
imul
dec
cmp
clc
repnz
cld
jae
add
add
add
xchg
ret
nop
clc
repnz
cld
jae
cmp
add
inc
test
nop
push
mov
leave
nop
jmp
add
sbb
je
add
add
nop
clc
repnz
cld
jae
out
pop
push
add
scas
mov
mov
leave
nop
jmp
les
add
bound
repnz
cld
jae
xchg
sbb
jne
add
sbb
loop
cmp
sbb
sub
add
add
hlt
jne
ret
cmp
sbb
nop
clc
repnz
cld
jae
shr
icebp
mulb
clc
repnz
cld
jae
add
sub
push
push
mov
add
clc
stos
push
xchg
add
add
push
cli
notb
fidivrs
add
sub
fwait
sub
pusha
adc
pusha
and
or
mov
movsl
sbb
inc
pusha
pop
xor
pusha
subb
mov
and
inc
and
cld
testb
daa
in
mov
cmp
xchg
add
and
add
fstps
jnp
mov
sbb
inc
xor
push
mov
nop
adc
addb
nop
push
pop
fdivrs
pminub
xchg
jns
add
loopne
push
outsl
test
test
pusha
cmp
rol
xor
aam
pusha
push
inc
testb
add
lods
xor
iret
xchg
into
mov
inc
repz
nop
jp
loopne
into
dec
pop
xchg
andb
dec
cmp
cli
mov
and
dec
mov
scas
in
loope
rolb
fwait
xchg
adc
sub
inc
adc
mov
sub
jb
push
push
add
pusha
shll
insl
icebp
and
dec
xor
and
loopne
mov
mov
inc
xchg
or
xor
aas
inc
lcall
pop
ds
cmpl
dec
cld
je
pop
js
pusha
loopne
imul
popa
pop
arpl
in
jnp
ret
lock
in
jg
arpl
adc
mov
shlb
lahf
lret
cmp
testb
cmp
mov
cmpsb
rolb
mov
out
es
arpl
shlb
mov
int3
movsb
rolb
mov
sahf
adc
cmpl
xchg
mov
dec
outsl
lods
add
add
xchg
add
and
aam
sub
pop
pop
pop
movsb
mov
xor
cmc
jae
adc
addb
iret
mov
in
adc
cmpsl
pop
movb
bound
fdivl
jecxz
and
lahf
test
sahf
push
int3
dec
cmp
and
test
sbb
decl
push
outsl
mov
sbb
pusha
and
shlb
and
sti
sbb
ja
pop
push
fistps
mov
jb
subl
mov
xorl
loopne
xchg
fsubr
sub
pusha
or
sbb
scas
loopne
jp
or
cli
mov
loopne
bound
rolb
loopne
sub
sbb
out
push
xor
test
sar
aas
push
push
pusha
inc
push
loopne
out
test
inc
lea
mov
and
call
enter
cmp
jge
jno
inc
pop
cmpsl
or
mov
rorb
and
inc
fldenv
addr16
ja
inc
nop
sarl
push
xlat
pop
out
xchg
or
ja
mov
xchg
and
add
ds
and
aad
arpl
inc
repnz
inc
dec
adc
push
xor
loopne
into
pop
andb
in
gs
sarl
mov
jo
mov
lods
shlb
or
and
insl
pop
loopne
and
rol
movsl
gs
mov
and
dec
xchg
dec
repnz
loopne
imul
decb
xor
and
pop
adc
push
shl
sahf
xchg
jae
cmp
xorl
mov
insb
jmp
sub
pop
mov
xchg
lds
push
addb
jno
mov
movsl
xor
mov
jno
add
andb
inc
pusha
xor
pop
xchg
mov
inc
rcrb
aam
loopne
push
and
jno
push
xchg
adc
xor
or
imul
mov
sub
pop
roll
add
cli
idivl
cmpsb
and
mov
push
dec
fcomps
jnp
rol
lods
shlb
inc
mov
mov
inc
imul
add
sbb
mov
jno
mov
mov
cli
test
rcrb
cwtl
loop
int3
mov
daa
mov
outsl
mov
pusha
rclb
loopne
xchg
push
rclb
mov
loop
imul
mov
pusha
mov
lods
pusha
pusha
cmp
add
leave
dec
sarb
incl
leave
pop
mov
add
mov
int
sbb
sub
cmpsb
pusha
add
pusha
sub
push
lods
mov
pusha
shlb
andb
clc
movsb
inc
shrb
pusha
adc
xchg
fdivs
daa
mov
pop
sub
call
ljmp
scas
and
lock
mov
lods
sbb
xchg
dec
std
push
mov
mov
andb
stc
adc
cwtl
sbb
ret
push
push
test
rolb
dec
sub
mov
or
loopne
aam
andb
clc
cmp
jnp
mov
xor
movsl
enter
jg
mov
pushf
and
call
sbbb
inc
out
cmpsl
imul
mov
adc
or
add
fsub
mov
addb
and
xchg
sarl
mov
andb
or
pusha
xorb
pusha
mov
add
cltd
shlb
pop
cmc
cltd
or
nop
call
subb
rcrb
cmp
leave
ficomps
je
push
sbb
mov
pop
daa
les
icebp
test
mov
and
sbb
push
sub
pusha
fisubrs
stos
pop
psubb
mov
fcmovb
dec
xor
mov
inc
inc
dec
inc
out
mov
lods
add
fwait
movsl
and
mov
lret
inc
cld
fsubl
mov
sbb
iret
or
pop
pop
insl
ret
rorl
add
add
rolb
andb
xlat
fiadds
andb
mov
pusha
lods
xchg
add
inc
pushf
add
xchg
cltd
xchg
pusha
lret
test
sub
and
lea
lret
inc
addb
mov
cmp
mov
sub
ljmp
xchg
idivb
out
cmc
xchg
gs
rolb
loope
push
loopne
cmp
jecxz
dec
stos
addr16
loopne
pushf
sbb
ret
es
mov
pushf
xor
pop
imul
addb
movsb
pusha
shrb
jecxz
int3
gs
aad
lods
mov
es
pusha
or
in
leave
push
add
inc
adc
loopne
or
mov
fcoms
jge
adc
movsl
sbb
out
call
inc
jns
shlb
pop
hlt
dec
lods
push
inc
pop
popa
sub
roll
mov
pusha
inc
sub
cli
pop
sub
add
orb
add
gs
inc
cmp
inc
fsubrs
jcxz
lock
and
outsl
mov
outsb
fdivr
sbb
cs
lret
lret
cwtl
mov
pop
insb
call
cmp
lahf
push
pusha
rolb
popa
or
out
mov
inc
rolb
sbb
int3
popa
ret
lods
lret
mov
stos
inc
and
pop
pop
cmp
int3
jl
add
lret
fdivrp
out
fsubs
fcmovbe
push
ss
sbb
add
jl
mov
lahf
mov
cmpsl
pop
push
andb
cmc
xor
pop
sbb
mov
and
int
ljmp
popl
loopne
shl
outsl
pushf
push
sbb
sub
xchg
mov
loop
pushf
sbb
jl
out
test
jo
into
jecxz
cmp
dec
sbb
pop
test
inc
aad
push
outsl
dec
adc
add
pusha
push
aas
cmp
fcmovbe
xor
addb
cmc
ljmp
fiadds
pusha
out
xor
outsb
mov
fidivrl
ljmp
jle
jp
je
sub
pusha
or
lret
sub
inc
pop
mov
mov
hlt
cmpsb
add
pop
xor
adc
iret
mov
adc
and
xor
mov
and
inc
push
inc
pushf
dec
mov
and
pop
xchg
cmpxchg
loope
cli
sbb
cwtl
lea
enter
jo
add
stos
loopne
cmp
xchg
scas
pusha
sbbb
scas
lret
cmp
add
and
jae
jle
loopne
pusha
inc
jle
rol
fcoms
in
mov
inc
cs
rorb
mov
inc
loopne
jo
sarb
test
sarb
cltd
scas
and
mov
bound
and
mov
adc
outsl
or
sub
mov
in
cmp
out
dec
je
ficoms
add
add
xchg
adc
andb
add
out
pop
push
pusha
loopne
inc
sar
out
pusha
jno
bswap
into
fldt
adc
in
inc
xchg
mov
mull
loopne
and
popa
push
leave
ja
add
imul
push
loop
add
les
decl
shlb
andb
pusha
loopne
inc
fs
adc
call
loopne
adc
push
shlb
and
mov
fstp
jecxz
loopne
xchg
mov
jge
dec
dec
aam
jp
mov
andb
test
inc
sub
sub
loopne
jb
and
loopne
pop
push
mov
xor
add
mov
or
repz
sub
add
rolb
inc
and
add
push
and
ret
add
subb
sbb
mov
mov
mov
repnz
arpl
cmp
add
inc
push
sub
xchg
jecxz
std
mov
push
jge
std
push
addb
inc
or
pusha
or
outsl
addr16
cmp
push
add
and
in
and
sbb
jle
add
add
add
addb
rolb
mov
shlb
pop
test
mov
sbb
cmp
jle
testb
js
or
iret
xchg
and
fmuls
mov
es
inc
and
enter
aam
mov
test
mov
daa
adcl
loopne
ss
mov
lock
movsl
push
shl
mov
aaa
leave
mov
je
lds
xor
jo
adc
lods
add
mov
adc
ja
loopne
or
mov
insb
inc
jecxz
jnp
add
jge
pusha
and
leave
les
sbb
addb
pop
ds
xor
loopne
shlb
push
adc
mov
mov
pusha
fildll
or
addb
push
aad
mov
add
add
pusha
lahf
jno
je
loopne
add
pusha
push
xor
shll
add
or
push
gs
sarb
movsl
shll
cltd
sub
lds
sbb
and
jle
mov
adc
inc
gs
mov
test
rcr
insl
push
mov
jmp
lea
cwtl
dec
inc
mov
pushl
les
or
sbbb
out
lahf
popa
and
inc
pop
mov
xchg
add
inc
scas
inc
rol
cmpsl
push
cli
shrb
iret
mov
lds
test
and
andb
mov
jnp
stc
ret
or
rcr
push
sbb
ds
les
shll
jecxz
rcrl
mov
mov
inc
lret
mov
sbbb
repz
inc
ljmp
aam
add
inc
dec
fnsave
and
mov
mov
shlb
xor
ss
mov
popa
dec
imul
clc
and
pop
movsl
andb
stc
stc
out
lock
dec
andb
and
mov
dec
loop
adc
dec
pop
stos
iret
fisubs
mov
js
pop
push
loopne
gs
cwtl
int3
jmp
and
movb
add
push
into
mov
cltd
movsb
pusha
pusha
pop
pop
aam
cmp
lret
inc
mov
mov
enter
and
jne
sbb
rol
jle
inc
or
push
popa
and
loopne
addb
xchg
mov
or
or
adc
lods
loopne
addl
add
int3
add
and
daa
fistps
adc
inc
call
add
inc
push
push
xchg
stos
addb
icebp
or
jmp
lahf
sbb
fwait
aam
xchg
inc
inc
out
push
inc
mov
add
add
idiv
imul
in
xchg
sub
jmp
mov
shl
jle
das
sub
loopne
int
pop
out
into
testb
shrb
mov
and
outsl
inc
sub
push
int3
inc
cmp
add
and
loopne
inc
add
stos
mov
test
mov
cmp
shrl
out
xchg
adc
xchg
mov
add
push
inc
pusha
add
in
daa
mov
adc
push
xor
loopne
sub
addb
test
insb
stc
mov
loopne
mov
push
loopne
mov
mov
sbb
or
add
pop
into
les
pop
gs
lods
inc
pusha
repnz
mov
add
loopne
adc
shlb
ja
dec
mov
mov
dec
loop
xor
add
into
mov
pusha
jno
xor
sbb
daa
ljmp
sbb
pusha
and
mov
push
notb
jns
ret
push
addb
mov
inc
scas
mov
xchg
bound
xchg
or
pusha
mov
fidivs
jae
negb
xchg
push
loopne
cli
cmpsl
dec
in
stos
add
and
push
jne
fwait
lock
shl
sub
imul
add
nop
push
fisttpll
inc
loopne
mov
pop
pop
mov
andb
push
out
jne
pop
fcoms
cwtl
movsl
add
rcrl
inc
testl
arpl
cmp
dec
jbe
mov
xchg
pop
add
add
bound
jecxz
mov
enter
cld
aad
ljmp
and
lahf
dec
es
and
les
push
add
xlat
jno
lods
rolb
add
out
inc
mov
insb
ja
push
movsb
pusha
rcrb
inc
mov
and
sub
sar
and
loopne
dec
rclb
sahf
mov
inc
pusha
cmp
dec
lock
not
dec
add
push
add
js
add
add
dec
push
imul
fwait
js
dec
mov
movsb
andb
stc
out
ret
ja
sub
subb
cmp
sbb
adc
dec
mov
bound
movsb
loopne
flds
jmp
push
and
inc
mov
in
lret
and
addr16
cltd
andb
call
adc
jmp
inc
cmpb
fnsave
push
xchg
stos
pusha
inc
sahf
mov
mov
test
pusha
out
jno
cmpl
or
aad
pusha
rol
pusha
pusha
loopne
adc
mov
mov
xchg
pop
adc
subl
xchg
cmp
idivb
mov
mov
jg
and
inc
jb
lcall
ret
mov
addb
inc
divl
icebp
add
lret
mov
loopne
iret
movsb
pusha
sub
loope
pushf
les
mov
rolb
andb
cmpsb
inc
pusha
dec
addb
test
fcmovbe
inc
fldenv
ds
and
and
and
mov
mov
or
mov
fcmovbe
aam
es
jns
pop
out
sub
cmp
xor
rcr
sbb
add
and
pop
cltd
loopne
loopne
fiadds
and
add
and
jle
sbb
lods
rolb
dec
fwait
scas
and
sbb
pusha
inc
repnz
out
pop
insb
or
lcall
adc
mov
adc
pop
aas
popa
pushf
xor
pop
jle
mov
mov
sahf
stc
push
lock
repz
dec
sbb
xor
dec
dec
and
clc
or
pusha
xchg
lret
shl
arpl
pusha
mov
mov
in
adc
ljmp
data16
pusha
and
or
push
inc
add
or
mov
or
dec
pop
jl
lret
jnp
xor
mov
scas
and
pushf
cmp
andb
push
pop
ret
scas
loopne
sbb
add
push
cmp
loopne
rolb
loopne
or
push
add
int
pusha
loopne
int
pusha
add
dec
mov
add
mov
stos
test
out
dec
aad
pop
sbb
movsl
dec
xchg
mov
mov
sub
pop
and
and
and
mov
jno
jecxz
int3
in
jmp
push
ljmp
inc
jnp
inc
mov
iret
lret
cmp
xorb
dec
fistps
mov
sub
jne
movl
push
mov
out
data16
rolb
addb
push
les
adc
arpl
inc
adc
push
inc
inc
cmpsb
loopne
dec
jle
rcrb
pop
out
stos
mov
inc
mov
pop
pop
push
inc
mov
loopne
mov
mov
add
daa
fisttpll
add
inc
sub
rcrb
loopne
and
cmp
inc
ja
sahf
js
mov
mov
xor
jp
jb
inc
pop
std
addb
inc
add
dec
cmp
test
push
addl
jno
add
loopne
mov
stos
jl
ror
jp
stos
arpl
cmp
mov
sbb
ret
inc
in
bnd
call
mov
jbe
lret
repz
mov
dec
mov
mov
mov
push
jo
pop
and
mov
add
push
out
les
or
cmpsl
sbb
lock
divl
pop
add
mov
pusha
and
in
fldt
inc
std
stc
stc
push
jno
inc
and
mov
je
pusha
pusha
out
mov
inc
xor
loopne
mulb
es
pop
lret
push
mov
pusha
mov
jbe
adc
repnz
lds
shr
lret
test
out
negb
and
sub
in
repnz
shrb
repnz
pusha
repnz
hlt
xor
dec
shl
not
sub
rcrb
aaa
jo
push
push
out
idivl
mov
loopne
sbb
lcall
leave
add
mov
and
adc
push
call
in
pop
std
adc
add
mov
xchg
cmpl
dec
push
icebp
xorl
or
inc
shlb
mov
dec
pop
shlb
add
inc
outsl
outsb
enter
lds
movsb
add
and
test
pusha
lods
inc
mov
addl
cltd
lahf
cmp
sbb
xchg
addb
and
out
divl
mov
loopne
lret
js
sub
mov
jge
xchg
or
add
sub
addb
lods
pusha
and
popf
push
pusha
and
jns
pusha
and
pop
loopne
mov
cmc
jns
loopne
push
push
sti
lods
and
inc
add
jp
mov
testb
cmp
daa
jecxz
cmp
imull
rol
cmpsb
addb
cmp
or
iret
rcrb
add
lret
lods
sbb
rolb
jecxz
insb
mov
rclb
dec
and
mov
mov
rolb
add
push
mov
sbb
cmp
sub
jge
movsl
mov
ret
pusha
cmp
mov
bnd
fxch
enter
lods
dec
aaa
inc
sbb
out
inc
pop
test
xor
test
inc
pusha
inc
push
pop
orl
int3
jnp
jne
push
cmp
and
pop
out
ds
shrb
and
jl
in
lcall
pop
out
cmp
add
out
jno
sub
jnp
sahf
imulb
popf
jecxz
in
sbb
leave
pushf
mov
jmp
fstl
in
sub
adc
repnz
std
and
shlb
cwtl
xchg
cmc
mov
clc
add
mov
int3
cwtl
dec
jg
std
out
daa
lods
mov
rolb
add
mov
add
xor
and
and
jne
pop
xchg
mov
jecxz
aaa
xlat
shll
xor
jge
xchg
in
repnz
scas
loopne
hlt
fildl
inc
fldl2t
scas
mov
add
mov
add
and
sbb
cmp
dec
stos
and
aam
fisubs
inc
es
xor
mov
and
inc
pop
sbb
jl
lods
into
es
loopne
inc
aas
or
or
stos
xchg
cmp
and
sub
mov
in
loopne
stos
stos
mov
outsl
add
adc
add
int
sub
loopne
jg
aad
jle
pop
insl
dec
rolb
jne
ss
fidivl
inc
push
pop
xor
adc
decl
andb
iret
das
ss
shlw
loope
rolb
xchg
arpl
sbb
dec
cmp
inc
mov
and
mov
mov
adc
sbb
loopne
loopne
out
add
and
cmp
popa
mov
inc
cmp
inc
jo
js
add
dec
jmp
loopne
mov
gs
shl
xchg
scas
mov
inc
sbb
sbb
add
rclb
cmp
push
xchg
ja
imul
fidivrl
mov
add
and
pop
cmc
inc
arpl
add
add
add
cmp
pusha
pusha
cmc
add
mov
ja
cmc
xchg
mov
out
sbb
mov
sub
loopne
or
mov
jae,pt
adc
mov
cmc
sbb
pop
aaa
lcall
add
pop
push
loopne
lods
sub
pusha
sti
xlat
test
and
and
sub
sti
push
icebp
cli
mov
adc
loope
push
mov
xor
rol
jge
xchg
ret
add
pop
inc
imul
icebp
test
cmp
mov
mov
inc
lret
and
rcll
insb
movsl
jl
and
add
or
test
sub
dec
push
jo
mov
insb
or
inc
mov
and
out
pusha
and
sbb
xor
push
dec
push
into
repz
and
loopne
popf
jb
daa
cmp
fnstsw
test
lods
pusha
inc
out
pop
xchg
jnp
mov
mov
loopne
pusha
and
imul
addb
ret
fcmovnb
cmpsl
or
pusha
add
cmp
fwait
lahf
stc
mov
rcrb
mov
or
in
xorl
and
and
fstpt
push
xor
out
jecxz
cli
sub
stos
inc
add
jb
sbb
lret
ret
loopne
decl
sub
and
sub
fs
xlat
xor
and
repnz
adc
ret
mov
sub
jg
mov
popa
add
orb
loopne
out
sahf
or
pusha
js
loopne
cmp
or
pusha
pop
out
and
daa
push
push
repz
scas
jnp
ljmp
mov
fs
dec
mov
cmpb
aad
mov
add
adc
fucomip
dec
and
xchg
pusha
dec
js
and
mov
pop
jecxz
scas
and
repz
imul
fs
and
xchg
push
xorl
cli
dec
xor
gs
push
adc
xorl
insb
sti
inc
test
lock
xchg
add
xchg
cld
shlb
imul
repnz
int3
cmc
jns
mov
xchg
push
dec
sbb
push
lods
pop
add
mov
inc
dec
pop
dec
repnz
in
or
pusha
add
pop
or
push
sub
andb
adc
mov
sbb
imull
push
mov
aad
push
fnstsw
jmp
jp
and
out
pop
adc
pusha
pusha
jnp
andb
sub
inc
or
imul
inc
xorb
arpl
test
shrb
xor
ja
adc
test
pusha
orl
sub
cmp
xchg
mov
mov
into
jbe
imul
push
rorl
loopne
inc
pop
inc
adc
pop
mov
and
mov
stos
je
mov
andb
or
adc
push
popf
in
push
loopne
fwait
mov
push
sub
push
pusha
jnp
inc
sub
and
cmp
shlb
sbb
shlb
xor
mov
sub
add
fcomi
dec
jmp
arpl
jge
loop
test
lret
mov
jecxz
inc
lret
add
and
das
sbb
mov
push
fildll
push
pop
cmc
jae
out
adc
imul
xor
push
ret
jae
push
and
jmp
ljmp
shrb
into
stos
addb
shlb
inc
sbb
aam
and
pusha
stc
jmp
mov
inc
enter
insb
andb
fdivl
push
ret
test
jae
sahf
loop
and
xchg
mov
shll
mov
and
inc
mov
testl
in
mov
xchg
cmp
aas
in
js
mov
pusha
cmpsl
jne
iret
inc
jbe
dec
popf
add
addb
add
inc
add
cmp
fists
xor
pop
imul
in
dec
mov
cli
cmp
loopnew
xor
mov
sub
sbb
and
pusha
add
testb
int
sub
and
lahf
cwtl
mov
out
jg
andb
mov
and
shlb
ficompl
xor
sbb
inc
mov
andl
shlb
and
aaa
fucomip
mov
xchg
or
jle
mov
or
inc
push
push
and
popa
loop
das
xlat
add
and
rolb
test
rclb
loopne
and
add
sar
pusha
mov
mov
rolb
outsl
jle
mov
or
lret
dec
lods
mov
inc
add
inc
adc
insb
xchg
ficoml
sub
out
fnstenv
orb
pusha
adc
loopne
jmp
push
ds
loopne
sbb
mov
lahf
lods
addb
sbb
imul
loopne
and
movsl
ja
fisubl
subb
loopne
aam
push
repz
mov
pop
xor
int
inc
pusha
sbb
mov
data16
ds
insb
popa
mov
enter
xchg
mov
mov
shll
cwtl
aaa
sub
loopne
push
scas
mov
lods
mov
scas
out
data16
add
add
push
adc
mov
pop
xchg
sbb
daa
das
push
inc
outsl
push
bound
inc
and
fsubl
inc
shlb
les
loopne
and
and
filds
inc
mov
mov
dec
and
mov
dec
into
or
mov
push
pop
dec
sub
rcr
push
movsb
inc
mov
ds
inc
loope
mov
sbb
adc
jae
mov
push
scas
pusha
add
popf
andb
mov
ss
shrb
fs
leave
sbb
shl
cmp
xlat
xchg
in
clc
or
mov
xchg
add
jecxz
sub
mov
bound
or
loopne
shll
jno
test
out
dec
push
jae
jbe
jno
lcall
mov
and
outsl
jb
pop
dec
popa
stc
iret
pop
jg
sbb
fidivrl
dec
inc
pusha
mov
pop
sbb
push
pusha
add
ss
loopne
dec
dec
or
sub
sbb
inc
mov
inc
jns
ret
repnz
dec
add
xor
lahf
dec
popa
gs
mov
push
push
mov
xor
and
inc
mov
mov
mov
cmp
pusha
xchg
sbb
fstl
addr16
cmpsl
mov
pop
iret
scas
pusha
inc
lods
les
pusha
and
movsl
js
call
rclb
push
inc
daa
mov
push
inc
daa
and
add
lods
jbe
lods
and
enter
inc
loopne
jl
addb
xor
aad
shl
mov
add
ss
add
call
jle
mov
daa
push
rol
add
pusha
and
push
rcl
xor
addb
ret
lock
jp
mov
sub
jns
xchg
xchg
dec
jmp
mov
int
mov
nop
adc
and
in
je
icebp
out
and
enter
out
and
sbb
sub
loopne
push
mov
sbb
bound
scas
pusha
inc
jnp
cltd
xchg
std
das
nop
icebp
and
add
andb
addb
lahf
lea
es
rol
fisubl
rolb
mov
sbb
pusha
add
mov
mov
rolb
nop
or
addb
js
loopne
adc
stos
or
xor
daa
mov
cmp
insb
inc
mov
inc
pop
fcoms
push
loopne
sub
ror
mov
add
lea
loopne
rorl
xchg
sub
add
mov
inc
cmp
and
addb
xchg
notl
imul
sub
dec
inc
jle
push
stos
aaa
jae
insb
add
pusha
push
addb
lret
ret
inc
out
cld
dec
xchg
aam
mov
and
mov
imul
inc
sub
inc
and
or
add
das
call
shl
cmp
roll
push
and
xor
pop
adc
jae
scas
shlb
mov
rcll
shrb
inc
xor
push
loopne
dec
movsb
rolb
and
push
icebp
hlt
xchg
dec
out
sub
cmp
add
pusha
fs
xchg
pop
cmp
pusha
addb
div
push
aas
lods
shlb
loopne
pop
sti
aam
mov
sahf
js
pusha
inc
xchg
jnp
or
mov
frndint
movsl
sub
xor
cli
addr16
fs
or
shrb
negb
push
or
rcll
push
ret
icebp
js
stos
in
rcl
out
or
adc
inc
cmp
pop
push
xchg
out
jg
cmp
fdivl
addb
push
loope
xor
adcb
aaa
out
gs
addr16
dec
insb
xchg
fdiv
icebp
sti
mov
add
dec
dec
mov
inc
mov
mov
xor
daa
dec
sbbl
inc
inc
push
into
xor
and
and
ret
pusha
add
dec
movsl
mov
and
inc
xchg
mov
adc
and
and
scas
inc
loopne
scas
add
push
cltd
cld
inc
int3
leave
pushf
imul
and
mov
repz
arpl
leave
mov
loopne,pn
hlt
ret
inc
leave
ss
xor
mov
xor
pusha
jne
movl
cmp
addl
fnstcw
les
cmpsb
add
ljmp
pop
fstl
sub
inc
dec
jns
pusha
pusha
xchg
pop
iret
out
pop
cmpsl
dec
xor
fisttps
test
pusha
push
arpl
stc
lock
adc
lret
test
loopne
push
mov
add
out
fmul
bound
fst
sarb
dec
jg
jae
jno
adc
inc
sbb
adc
pusha
and
push
add
jmp
mov
jb
stos
mov
imul
ljmp
and
add
out
push
test
pop
int3
mov
or
and
jo
cli
pushf
xor
popa
stc
cmp
in
in
sbb
mov
xchg
cs
mov
and
mov
bound
jbe
inc
pusha
push
shlb
push
jg
inc
cmp
pop
jns
ss
outsb
mov
add
dec
inc
loop
jne
addb
and
ret
adc
pop
mov
or
lcall
add
std
lret
pusha
jecxz
sahf
push
jp
push
jb
jnp
sbb
clc
jbe
stos
loopne
or
ret
cli
movsb
rolb
xchg
xchg
ret
xchg
dec
sahf
scas
in
xor
js
mov
add
js
ret
aaa
xchg
jnp
mulb
loopne
imul
rolb
push
addr16
push
push
xor
sub
mov
add
dec
sbb
scas
aam
ljmp
jns
pusha
and
adc
loopne
xor
cmp
cld
addr16
fwait
xchg
test
and
rolb
adc
loopne
or
sbb
filds
mov
sbb
call
pop
lods
and
cmp
mov
pop
xchg
movsb
pusha
mov
hlt
fdivl
dec
jno
insl
in
pop
push
hlt
std
jno
lock
xchg
or
lods
rolb
xchg
inc
hlt
loope
lcall
and
or
and
aad
insb
loop
arpl
sub
pusha
inc
mov
and
int
dec
in
cmp
orb
addb
push
popa
push
aam
addb
adc
cmp
lock
add
test
cs
loopne
ja
add
mov
movsl
fsub
jle
aaa
dec
jecxz
cmp
dec
ret
jbe
shl
outsb
addb
or
jnp
sub
xchg
dec
mov
ljmp
arpl
addb
and
ret
sti
sbb
jle
mov
call
cltd
cmp
and
test
sub
jns
jno
cmp
dec
fbstp
xlat
test
or
pusha
andb
stc
in
jb
adc
movsl
and
mov
inc
insl
and
mov
jns
ds
inc
and
in
add
pusha
mov
loopne
icebp
push
and
pop
int3
xor
popa
movsl
aaa
es
rolb
sub
test
andb
cmpsb
loopne
xchg
out
push
pop
outsb
mov
in
cmpsl
pushf
xor
addr16
adc
mov
inc
add
and
mov
loopne
fs
fnstsw
pop
fs
into
es
loope
push
out
adc
and
inc
bound
dec
push
push
mov
mov
and
mov
gs
mov
cmp
xor
sbb
fiaddl
and
adc
popf
ss
cli
clc
test
out
lods
popaw
movsl
pop
in
repnz
jns
les
pusha
rcr
pusha
loopne
insl
and
and
jb
sbb
aaa
fadd
cli
adc
inc
pusha
fs
inc
movsl
and
add
xchg
pop
in
scas
aas
mov
rclb
pop
aad
cld
sub
mov
adc
popf
xchg
xlat
push
pusha
orb
jo
adc
xor
pop
add
mov
mov
xchg
pop
inc
jl
cmp
mov
stos
inc
adc
inc
rcr
cmp
loopne
imul
fwait
mov
cld
mov
inc
shrb
cwtl
sub
sbbb
fsubl
or
and
out
sub
hlt
mov
lods
sbb
gs
andb
xchg
push
pusha
loopne
dec
xlat
mov
pop
adc
push
in
add
inc
rcll
cwtl
add
inc
mov
mov
pusha
or
push
aaa
gs
lea
cmp
jnp
adc
movsb
inc
add
add
xor
mov
dec
xor
in
push
pop
out
pusha
shlb
adc
add
add
jns
mov
stc
call
adc
mov
sub
xchg
lods
add
jns
andb
xor
inc
mov
int3
mov
mov
xorps
rcr
popw
or
data16
ret
aam
cltd
mov
and
outsl
mov
xor
loopne
pop
push
inc
adc
jle
jne
shlb
push
push
test
imul
shl
rol
add
add
addb
in
andb
fldcw
mov
xlat
push
push
pop
inc
mov
pop
cmpsb
shlb
pop
add
pusha
push
pusha
rcrb
into
xchg
inc
imul
add
inc
in
add
push
rcrl
fidivs
and
add
gs
and
and
repz
dec
out
cmp
push
pop
into
pop
out
rclb
sub
shrb
into
jge
loopne,pn
jnp
add
and
int3
and
inc
inc
syscall
cld
repz
or
inc
popf
and
lret
jno
fistl
rol
testb
mov
loope
outsb
std
mov
cmpsb
and
icebp
mov
jne
xchg
fsubl
pusha
add
mov
aam
xchg
popa
pop
sbb
gs
loopne
loopne
inc
mov
testl
andb
inc
adc
jp
inc
and
loopne
mov
mov
push
movsb
pusha
inc
add
orb
fisttps
mov
lods
inc
pusha
lock
arpl
inc
into
xchg
ret
loopne
in
fsubl
inc
jecxz
addb
mov
addb
sub
shrb
push
das
rcrl
lock
pop
out
mov
fsubrp
jl
and
rolb
bound
add
mov
mov
negl
cmp
xchg
lds
push
add
daa
or
pusha
mov
pusha
dec
mov
add
shrl
or
mov
push
jl
jnp
mov
mov
ljmp
xor
test
cmpb
cmp
repz
shl
xor
sub
pusha
add
lock
pusha
shlb
dec
pusha
pop
int3
inc
neg
sub
mov
sti
ja
mov
add
stos
and
add
dec
jecxz
fcomps
dec
jae
mov
scas
pop
jmp
push
iret
dec
xchg
ds
repnz
jbe
or
and
notl
cmp
mov
mov
stc
call
add
andb
mov
mov
push
sbb
outsb
sub
lret
and
out
testl
jne
inc
xor
push
push
mov
push
scas
sub
pop
jae
inc
inc
jo
sub
repnz
cwtl
inc
xor
cmp
add
jecxz
std
mov
cmp
jmp
fiaddl
iret
icebp
scas
pusha
cmpb
les
paddusw
inc
imul
pop
ja
out
and
cmpl
cmc
js
nop
push
loopne
xchg
loop
int
mov
adc
je
push
and
pusha
push
dec
lods
rol
sbb
imul
sar
stos
lahf
imul
or
pusha
cld
push
stc
pushf
push
and
les
inc
out
fnstenv
lods
add
dec
xchg
adc
mov
inc
mov
mov
inc
pop
jmp
es
fmull
add
sti
testb
mov
cmp
xchg
sub
stos
adc
loop
xchg
mov
dec
push
and
in
mov
hlt
xchg
or
pop
cmc
aam
cmp
or
lds
ds
scas
inc
mov
inc
notb
or
and
cmp
addb
xchg
cs
cli
cmp
jge
mov
mov
inc
mov
pop
pop
inc
insl
pop
scas
iret
xor
sarb
arpl
and
imul
fiaddl
pusha
orb
inc
and
in
jno
pop
lea
addl
sub
and
jecxz
mov
ret
pop
and
out
lods
push
and
push
adc
mov
or
xchg
jl
jbe
push
jne
xchg
roll
aam
xchg
sub
in
xchg
lods
popl
movsl
les
sub
adcb
int3
push
lret
add
pusha
mov
cmp
ja
loop
loopne,pn
mov
std
pop
mov
add
aad
loope
sub
cli
adc
pusha
rorb
mov
sub
and
jmp
push
andb
sbb
loop
inc
add
push
out
into
or
loopne
mov
add
jge
push
movsb
pusha
add
and
sub
bound
pusha
fldt
mov
adcb
add
sbb
mov
dec
mov
lret
pusha
mov
pop
andl
inc
mov
dec
dec
jb
scas
jns
enter
sbb
jmp
jle
adc
out
cmc
cmpsb
shlb
shrb
aam
adc
cmp
add
mov
mov
sub
loopne
rolb
stc
and
adcb
cs
and
dec
out
popa
int
dec
mov
mov
enter
daa
cmp
repz
in
push
into
cltd
es
ror
decb
push
dec
adc
mov
jnp
mov
aad
nop
loop
add
sbb
cli
adc
sbb
fsubr
xor
inc
dec
mov
adc
inc
push
imul
pop
sbb
sub
mov
add
js
in
inc
xor
nop
dec
xchg
test
or
add
mov
adc
inc
test
nop
jb
into
gs
mov
lahf
jl
cmp
adc
dec
aas
loope
push
rolb
sub
or
add
lret
arpl
add
cltd
test
jns
add
clc
sub
andb
fnstcw
js
inc
dec
fldt
and
mov
xchg
jb
pop
stc
xor
ret
movsb
add
enter
js
testl
and
cld
loope
addb
stos
pusha
add
cmp
lods
push
add
and
mov
jle
cmpsb
rolb
lock
and
lods
mov
popa
cwtl
mov
mov
push
xchg
je
pop
or
add
add
mov
shrb
orl
fiaddl
inc
andb
inc
aam
ret
cmpsb
add
xchg
std
loope
mov
jno
push
loopne
mov
add
add
jnp
fistpll
hlt
icebp
inc
add
sarb
addb
mov
lcall
addb
loopne
adc
add
inc
mov
addb
dec
sbb
pusha
loopne
inc
dec
daa
mov
dec
loope
cs
inc
lds
jle
out
jns
mov
andb
loopne
mov
sub
loopne
add
mov
jb
and
inc
inc
sbb
and
push
sar
xor
cmp
mov
loopne
aaa
pop
xor
lock
inc
sbb
out
sahf
mov
xor
xchg
xchg
ret
xchg
jnp
dec
adc
loopne
fcoms
or
pusha
sub
call
adc
insl
test
inc
loopne
popf
and
pusha
lea
mov
rcr
test
pusha
popf
cmp
add
aad
rcrb
les
into
sub
mov
aas
andl
andb
sahf
out
cmp
or
push
or
loopne
aad
xchg
dec
mov
imul
into
mov
aas
in
push
fsubrl
inc
and
push
inc
rcrb
shlb
mov
add
imul
sbb
or
and
out
jbe
popl
sub
rcr
fidivrs
pop
push
sub
ret
lea
jb
rcrb
dec
dec
push
and
sbb
cmp
out
mov
ficompl
add
push
push
dec
push
push
pop
insb
leave
imul
rolb
mov
ja
gs
add
pusha
add
or
mov
jge
mov
and
enter
cmp
jp
dec
jp
sub
jge
adc
fistps
jmp
push
mov
and
gs
cmpsl
enter
add
shlb
cmp
adc
arpl
dec
insb
aam
xchg
dec
cmp
jne
xchg
out
fiadds
inc
enter
cmp
scas
rol
dec
mov
inc
sbb
inc
loopne
test
adc
add
je
fdivr
je
imul
clc
fisubrl
adc
stos
xchg
stos
add
ss
adc
xchg
fiaddl
dec
cmc
push
mov
lds
fld
test
icebp
lods
dec
pop
mov
ret
in
xchg
rep
lods
movsb
and
fs
jl
mov
xor
fimuls
repnz
pusha
jle
jecxz
pop
xor
sub
add
loopne
fisubrs
out
loopne
add
inc
lds
ljmp
lcall
mov
mov
jno
pop
sahf
or
mov
jmp
movsl
int3
fs
cwtl
daa
pushf
dec
out
and
mov
and
dec
xchg
jno
xchg
scas
pusha
mov
lcall
add
mov
add
inc
loopne
push
pusha
loopne
push
or
fs
dec
sub
scas
and
outsb
dec
orl
loopne
mov
loopne
mov
push
je
addb
in
push
stc
xchg
pusha
pusha
shl
mov
and
gs
pushf
xchg
sbb
and
shrb
add
and
shrb
movsb
pusha
and
test
loopne
arpl
dec
lds
gs
mov
sub
sar
pop
adc
shrb
lret
xchg
mov
data16
icebp
adc
stos
arpl
mov
pushf
mov
insl
ja
pusha
mov
mov
addb
pusha
shrb
add
into
icebp
stos
add
pusha
mov
pusha
xchg
mov
popa
loopne,pn
mov
sub
inc
mov
and
cmp
outsl
and
stc
lock
adc
or
mov
aas
cmp
pusha
add
popa
insl
inc
xchg
pusha
sbb
testb
mov
jp
inc
dec
mov
daa
insb
xchg
mov
mov
icebp
adc
cmp
test
clc
jo
js
push
lahf
ret
sarb
mov
inc
pusha
in
sub
rorl
test
and
sub
std
lret
dec
test
xor
pop
test
push
icebp
outsb
scas
jmp
int
sar
shlb
cmc
cmp
fistps
inc
cmp
mov
dec
jle
mov
push
or
arpl
mov
imul
mov
idivl
jns
cld
and
inc
xchg
outsb
sbb
inc
inc
out
dec
into
xchg
cmp
xor
fwait
icebp
pop
xor
inc
xchg
or
push
test
loopne
rolb
shlb
adc
mov
jo
xor
mov
outsb
js
and
jl
add
loopne
push
rol
pop
mov
call
jb
lcall
push
lret
gs
mov
outsl
inc
xor
inc
xor
stos
addb
addb
pop
mov
dec
pop
dec
cli
cli
mov
in
int
and
fwait
add
and
xchg
fs
loopne
pop
test
push
or
loopne
fisubs
inc
and
addb
stos
andb
loopne
xchg
mov
leave
mov
xorb
adc
popf
cmc
hlt
add
adc
fbstp
ficoml
arpl
sbb
fmul
aam
pop
jnp
inc
inc
cmp
and
push
testb
or
lea
fsubr
xchg
test
subb
popa
inc
dec
insb
shlb
mov
loopne
inc
xor
sub
xchg
xchg
cld
sbb
cmp
outsb
cmp
stos
lret
clc
rcr
jmp
add
shrb
and
inc
movups
push
repz
fadds
and
lods
xor
add
outsb
insl
pushf
and
pusha
adc
push
lcall
loopne
xlat
add
into
les
dec
sti
and
mov
in
push
rorl
mov
inc
adcb
inc
push
popa
cmpsb
inc
pusha
shll
pop
fwait
mov
push
and
lret
cltd
ret
add
daa
dec
lea
idiv
push
xchg
mov
shrb
aaa
and
inc
push
mov
and
push
and
out
adc
outsb
mov
jns
loopne
jmp
ja
jecxz
cmp
lods
sub
pop
xchg
pop
adc
adc
call
inc
pusha
mov
mov
mov
loopne
xchg
or
stc
mov
loop
or
shl
jns
dec
leave
stos
push
fcmovnb
pusha
cwtl
call
pop
dec
mov
ret
daa
pop
lret
loope
xchg
mov
lcall
loopne
push
mov
dec
fwait
dec
pushf
and
add
aaa
sub
inc
mov
push
pusha
addb
sbb
repnz
shl
daa
sarl
imull
loopne
pop
cld
outsb
sahf
jnp
pop
rorb
std
push
lods
pusha
inc
int3
push
sub
add
mov
imul
push
inc
mov
sub
out
mov
pop
ret
jp
sub
dec
iret
mov
fwait
sub
fildl
sbb
sub
addr16
fcomip
mov
insl
pop
scas
inc
loopne
addr16
xchg
mov
nop
push
sbb
clc
xor
or
shlb
pop
mov
cmp
insb
xchg
adc
std
daa
push
pusha
shl
and
push
scas
add
movsl
xchg
push
enter
orb
mov
inc
push
xacquire
mov
and
mov
lret
and
flds
jl
and
rolb
lcall
outsl
or
andl
adc
push
xlat
xor
cmc
jg
nop
fwait
mov
es
mov
mov
inc
dec
es
les
cmpsb
add
inc
cmc
and
loop
and
addb
inc
pop
xchg
adc
mov
mov
shlb
sub
dec
movsl
into
clc
call
mov
xlat
add
or
in
nop
shlb
cmp
adc
mov
popf
les
loopne
movsb
pusha
and
sarb
shrb
sbb
jne
stc
shlb
mov
and
add
cltd
push
inc
shlb
loopne
scas
jo
and
sbb
jnp
push
mov
iret
js
and
je
fcmovb
jnp
pushf
fwait
aad
shlb
loopne
jecxz
arpl
push
int3
xor
enter
inc
in
pushf
out
dec
mov
add
push
inc
adc
cwtl
xchg
faddp
jl
mov
sti
lcall
pop
out
jecxz
mov
shrb
aaa
dec
xor
or
ja
enter
hlt
jae
sub
mov
enter
inc
in
stos
and
mov
mov
fcmovbe
mov
stc
in
sbb
xchg
loopne
fimuls
andb
and
xor
rolb
or
rcrb
arpl
repnz
sub
add
dec
fisttpll
adc
daa
mov
or
addb
add
scas
movsb
pusha
inc
das
xor
out
jmp
in
std
popa
pop
stc
cld
sub
inc
std
or
mov
int
mov
jg
jl
dec
subl
scas
shl
and
out
fidivrs
shrb
cmpsb
pusha
mov
mov
mov
mov
jg
movsb
inc
and
pop
pinsrw
xchg
rorb
jmp
mov
sub
and
add
shl
shlb
and
push
add
pusha
imull
addb
loopne
mov
inc
sahf
fidivs
sub
and
icebp
jle
nop
enter
push
call
pop
dec
push
das
jl
push
cmp
scas
pusha
inc
and
push
daa
jge
jmp
in
mov
push
fmuls
fbstp
cmp
pusha
mov
leave
inc
loope
mov
jbe
push
ficoml
jns
jmp
negl
out
lcall
and
aaa
pop
cs
loopne
loop
inc
loopne
jnp
je
fcmovbe
dec
and
adc
push
mov
xchg
xor
or
loope
xchg
sti
decb
addb
add
or
jb
test
cmp
inc
fs
shr
pusha
andb
mov
movsb
andb
cmp
xchg
repnz
lods
outsb
ss
or
lea
mov
add
pusha
stos
inc
pusha
icebp
out
and
ret
dec
aad
mov
loopne
xchg
pusha
lret
jmp
scas
andb
loopne
sbb
and
loope
mov
inc
and
and
and
inc
xchg
mov
mov
rolb
push
loopne
jns
out
cmp
jecxz
adc
pusha
mov
rcrb
addr16
ds
fs
orl
cmpsl
cmp
rolb
push
loop
rolb
inc
add
loopne
mov
and
sbbb
int3
mov
stos
sub
orb
mov
addl
add
call
pusha
outsb
dec
jl
dec
aaa
faddp
pop
into
sbb
dec
xor
ret
mov
push
push
sbb
popa
and
inc
rclb
mov
push
jo
jnp
xchg
sub
mov
cmp
adc
mov
push
cmpsb
add
hlt
xchg
and
add
jae
pop
cmp
push
ret
adc
mov
pusha
mov
and
shrb
sbb
out
pop
mov
cmp
sbb
pop
xchg
leave
push
test
xor
pop
int
pusha
loopne
inc
push
and
mov
jecxz
addr16
mov
mov
and
and
shlb
push
mov
fidivrs
rol
jmp
and
shlb
pusha
and
mov
add
out
cmp
inc
add
rclb
cli
call
psllq
push
imul
push
stos
mov
mov
shr
mov
rcr
mov
inc
and
shr
sti
shlb
call
test
or
loopne
out
in
and
fbld
fwait
mov
or
add
inc
ja
sbb
stos
jl
pop
scas
push
pop
pop
xchg
jae
sbb
inc
loopne
xor
cwtl
int3
cli
pop
mov
or
add
or
sub
sbb
std
outsl
loopne
mov
mov
add
or
test
pusha
shl
jns
aam
ficomps
jmp
in
mov
imul
dec
inc
mov
mov
pop
cmp
out
dec
push
dec
cmpsb
rolb
and
fst
mov
pusha
inc
daa
push
cli
lahf
insb
andb
fisubrl
sbb
in
adc
cmp
mov
popf
movsl
addps
inc
scas
ds
mov
push
push
lahf
xor
and
jnp
fsubs
add
fistpl
pop
mov
pop
xchg
std
add
add
adc
loopne
ret
fnstsw
sub
inc
inc
cmp
jo
addr16
fstl
and
mov
addb
je
cmp
jmp
nop
add
mov
add
test
pop
or
mov
mov
and
xor
adc
imul
nop
sbb
or
and
dec
sub
inc
subb
lods
pusha
mov
rolb
mov
pop
popf
mull
loopne
push
loopne
nop
dec
int3
mov
xchg
sbb
subl
jg
hlt
sbb
cmp
cmc
out
cmp
adc
and
scas
add
test
mov
loopne
sub
lahf
xchg
dec
and
or
addb
dec
fiaddl
enter
out
xor
xlat
sbbl
add
lahf
ds
jne
and
cwtl
push
cmp
pop
test
cmp
sub
inc
add
loopne
sub
xchg
push
aaa
xor
insb
dec
push
loop
stos
add
and
sti
in
adc
and
out
adc
mov
jnp
cmp
je
scas
out
add
in
or
pusha
cmp
cmpb
jbe
push
aam
add
enter
shrb
inc
insl
lods
add
inc
jp
sbb
cmp
mov
cmp
or
sub
add
inc
aad
pop
test
insl
mov
pusha
lods
adc
lret
jno
jl
ljmp
and
mov
das
xor
pop
xor
daa
fs
shll
add
cmp
xlat
int3
mov
or
loopne
divl
mov
ret
and
mov
jb
cs
inc
dec
ss
movsl
xor
movups
popa
insb
lahf
imul
loopne
repnz
jnp
arpl
hlt
mov
mov
mov
fsub
sar
dec
and
stos
pusha
insb
jbe
out
jl
mov
psadbw
mov
jns
inc
addb
addr16
mov
jmp
je
dec
cmovns
icebp
lock
fnstcw
inc
loopne
sub
dec
xchg
jnp
sbb
repnz
dec
sbbl
push
loop
mov
xchg
push
int3
xlat
or
call
and
xchg
mov
add
xchg
cltd
push
mov
jne
pop
or
and
dec
movsl
jo
jb
pop
incb
pusha
pop
movsb
pusha
pusha
mov
mov
lahf
aam
icebp
mov
pop
rcrb
lods
add
repnz
jno
fiadds
sbb
and
cs
inc
xchg
jecxz
mov
ds
in
jmp
lods
clc
mov
inc
loopne
sbb
adc
rolb
mov
lret
jae
cld
push
dec
jmp
jo
cld
jne
dec
mov
add
sbb
and
nop
adc
aam
in
gs
fsts
and
xor
cmp
lods
push
loop
pushf
int
cli
inc
fsubrl
negb
mov
test
pusha
sbb
aad
and
daa
xor
mov
sub
loopne
xchg
mov
stos
cmp
das
adc
loop
or
mov
push
call
cmp
xchg
add
xchg
lods
mov
jne
loopne
cmp
cmpb
outsb
ss
sbb
sti
pop
mov
mov
shlb
push
xchg
cli
cwtl
inc
cmpsl
movlps
push
repnz
inc
and
ficomps
negb
rorb
hlt
or
fwait
add
rol
mov
mov
mov
jl
lret
and
push
andb
add
add
pop
enter
mov
cmp
and
dec
xor
int3
or
xchg
inc
sub
sub
dec
inc
or
shrb
jae
inc
repz
jmp
inc
cmpsb
and
add
stos
pusha
and
jmp
pushf
sbb
mov
add
cmp
loop
xchg
mov
jno
loope
lea
fmull
inc
add
in
xlat
cli
cltd
cwtl
js
sub
and
jp
lods
andb
mov
inc
pusha
mov
call
cmp
sub
pusha
and
mov
in
cltd
mov
add
xchg
mov
mov
int3
add
or
pop
lods
add
push
add
je
pusha
loopne
pusha
xorb
aam
adc
xor
mov
push
scas
ljmp
addb
es
shrb
xchg
aaa
add
orb
pusha
mov
pushf
aas
cmp
inc
ja
cmc
andb
lret
mov
add
mov
mov
scas
sbb
pusha
and
cld
and
movl
clc
mov
push
xchg
hlt
push
add
push
and
mov
lods
add
push
sbb
pusha
pusha
and
and
inc
add
push
push
daa
mov
loopne
and
in
mov
dec
dec
cmp
inc
and
inc
or
dec
push
add
setb
das
mov
mov
push
loopne
call
rorb
inc
mov
xchg
clc
sarl
loopne
lahf
movsl
pop
inc
add
shlb
inc
std
test
cmpsl
mov
pusha
jge
pop
dec
push
mov
inc
aad
adc
lcall
fisubrl
mov
ljmp
inc
lret
or
rol
xchg
sbb
stos
andb
add
sti
clc
inc
mov
test
data16
pop
outsb
rcrb
mov
sub
inc
push
add
mov
idivl
sub
push
pusha
and
mov
xchg
rolb
ret
inc
popa
xchg
jp
xchg
mov
out
sub
clc
cmp
aad
imul
add
and
push
int
add
orl
sbbl
xlat
xchg
gs
xchg
test
andb
mov
psrlw
andb
inc
cmp
test
adc
mov
and
daa
pop
aad
add
dec
out
add
cmpb
jns
jnp,pt
inc
subb
out
les
xchg
rolb
mov
mov
mov
int
sub
andb
add
pusha
rol
out
outsl
jbe
or
mov
xchg
scas
add
and
pop
and
rol
cli
cwtl
dec
ret
inc
and
xchg
sti
hlt
push
imul
mov
mov
mov
incb
les
ljmp
jb
fstpl
pusha
mov
shlb
sub
test
inc
mov
aam
sbb
pusha
shl
imul
call
mov
jnp
or
add
shlb
cmpl
lea
inc
and
pop
cmp
inc
dec
push
dec
pop
sbb
add
mov
ja
cmp
addb
movsb
shlb
orb
add
and
test
xlat
mov
addr16
jne
fdivrs
jbe
sub
shlb
push
add
pop
stc
cmpsl
and
sub
add
pop
fidivrl
inc
pusha
inc
adcl
inc
cmp
rcrb
cwtl
cld
sbbl
clc
out
add
and
aaa
and
cmp
sahf
cmp
addb
out
or
push
mov
adc
loop
in
jge
into
mov
addr16
xor
call
outsb
pop
cli
es
adc
rolb
pop
cmp
mov
pusha
and
xor
loopne
sbb
xchg
shrl
mov
int
cmc
add
insl
loopew
cltd
imul
in
jb
shlb
loopne
loopne
inc
mov
loop
mov
lea
mov
shll
adc
dec
pusha
lds
addb
sub
movsl
xchg
popf
xchg
iret
lea
aam
mov
sbb
repnz
push
jecxz
aaa
int3
mov
or
push
xchg
repz
stos
mov
mov
fldenv
mov
loopne
and
pusha
subl
jmp
add
loopne
sbb
mov
inc
dec
addb
sub
loopne
cmp
popa
mov
and
pusha
cmp
mov
sbb
sbb
and
outsl
inc
cmp
mov
shlb
sub
addr16
rcrb
in
sub
test
push
leave
sahf
sti
les
aaa
int
push
insl
inc
ret
sarl
mov
ror
cmp
repz
mov
ret
mov
pop
sub
les
test
xchg
and
sbb
pop
pop
daa
cmpsl
push
fidivl
and
rolb
addr16
pusha
rcrb
in
cld
pop
sub
call
aad
jne
mov
pusha
or
repz
test
cmpsb
andb
stos
addb
pop
adc
shlb
pause
or
add
shlb
inc
mov
add
sub
lock
inc
inc
mov
xor
aam
subl
and
jns
shll
pusha
xchg
les
mov
stc
leave
fnsave
push
sarb
pusha
subb
sti
push
inc
cmpb
mov
inc
mov
jb
dec
aam
dec
xchg
mov
nop
add
lods
sbb
fstps
inc
lret
movsb
add
in
pusha
mov
test
add
push
mov
movsl
arpl
add
les
mov
adc
jne
mov
dec
cmc
adc
pop
xchg
test
mov
test
mov
pusha
mov
fwait
jbe
mov
inc
aam
jne
pop
inc
stos
test
mov
jg
cmp
jnp
mov
adc
mov
inc
push
inc
inc
cs
pusha
popf
loop
and
das
lods
loopne
sub
adcb
inc
pop
int3
jb
rcl
and
add
in
xchg
imul
jl
mov
inc
mov
pusha
dec
push
jg
pop
pop
fsubl
or
jnp
out
push
mov
add
testb
jmp
rolb
sbbb
in
dec
pop
adc
rcrb
lcall
adc
mov
mov
jp
pop
in
test
pusha
sbb
and
andb
fnsave
jbe
xor
jae
pusha
and
or
ss
jl
roll
rorb
fdivs
inc
loopne
dec
add
loopne
pop
and
add
sbbb
xchg
xor
shlb
add
pop
xchg
mov
inc
pop
inc
sahf
inc
jmp
sub
pop
int3
mov
pusha
and
adc
or
and
loop
jge
mov
add
and
jp
aaa
jne
sbb
andb
lods
inc
add
or
mov
repz
int3
and
mov
and
cmp
inc
mov
and
rolb
push
faddl
xor
inc
sbb
mov
loopne
mov
ljmp
mov
addb
das
inc
loope
ror
into
cmp
sub
and
mov
inc
fdivp
ss
add
jl
mov
cwtl
add
fs
out
aaa
cmp
push
loopne
loopne
push
add
jnp
fs
push
and
shll
pusha
andb
push
add
mov
lret
push
sub
jo
mov
lods
xchg
or
add
and
and
mov
cmc
test
xorb
je
sub
mov
mov
pusha
mov
stos
nop
cwtl
shlb
sbb
fisttps
mov
inc
lahf
iret
stos
push
xchg
daa
sbb
scas
adc
mov
mov
pusha
and
xorl
inc
rolb
loop,pt
pushf
inc
inc
aaa
mov
pop
pop
push
idivl
or
sbbb
lahf
sbb
fbstp
and
clc
xlat
lahf
xchg
mov
and
add
pusha
pop
mov
daa
frstor
mov
mov
scas
lds
inc
scas
xchg
sub
outsl
jb,pt
aas
push
andb
popf
lds
shlb
clc
mov
inc
dec
xor
mov
mov
popa
aad
jmp
or
mov
fnstsw
cmp
shlb
push
mov
shlb
inc
jnp
and
sar
arpl
pop
pop
aaa
dec
mov
jle
mov
ret
inc
fs
rorl
hlt
andb
test
imul
add
into
cmp
sbb
fisubl
and
mov
mov
stos
andb
test
loopne
mov
loopne
ficomps
and
dec
xor
inc
repz
clc
push
cli
mov
add
inc
scas
jmp
push
nop
sti
sub
loopne
sbb
test
outsb
mov
push
dec
pop
mov
jle
dec
int3
mov
lods
loopne
popa
xchg
mov
and
test
add
rcrb
cmp
mov
pusha
shr
into
xor
cmp
cmp
fdivrs
and
push
sub
ficoms
mov
addb
adc
mov
cwtl
dec
xor
xor
enter
jns
shrb
jae
je
sahf
cmpsb
andb
loopne
les
sbb
adc
andb
insb
repnz
mov
mov
pusha
jo
mov
mov
and
bound
repz
lods
mov
mov
add
and
into
pop
out
push
imul
and
pusha
test
fstpt
out
cmpsl
cmpsb
and
scas
and
cmp
gs
adc
add
andb
sbb
and
loopne
push
add
mov
add
ljmp
and
in
cmp
test
pop
shl
jp
leave
movsl
inc
xor
jns
mov
data16
cwtl
adc
sub
inc
mov
cmp
pop
popl
add
or
loopne,pn
dec
push
cld
inc
push
sub
sub
inc
lret
rolb
and
and
mov
test
roll
add
dec
adc
rolb
xor
pop
nop
sbb
js
addb
pop
and
mov
movsb
and
xchg
inc
xlat
jge
insl
repnz
andb
loop
mov
cmp
cmp
rcpps
aam
inc
and
rcrb
ret
out
outsl
pop
push
pop
mov
movsl
mov
sbb
cmp
dec
lds
pop
sbb
scas
shlb
xchg
std
mov
rclb
fs
cltd
int
pusha
mov
inc
xor
push
dec
add
shl
lock
xlat
add
inc
pop
out
mov
xor
js
inc
adcb
and
jge
pusha
loopne
xor
ss
rcr
jp
andb
adc
jns
pusha
rorb
cmp
lods
addr16
mov
lds
and
and
ret
pop
iret
sbb
pusha
inc
jge
push
adc
loopne
loop
adc
cmp
shlb
and
add
inc
inc
sahf
test
outsb
or
and
sbb
lods
rcrl
mov
shlb
aas
arpl
rolb
pusha
jb
mov
mov
mov
and
mov
je
js
lods
inc
add
inc
jge
pusha
rolb
lock
mov
add
push
mov
shl
adc
ret
or
in
or
rclb
add
adc
loopne
add
imul
loop
lret
aas
lahf
jmp
pusha
popf
loop
add
loop
andb
jge
lods
cmpl
inc
sub
dec
enter
push
ss
scas
cmpsb
add
repnz
push
jae
fwait
pop
out
jno
add
jp
fildl
and
fnstenv
push
inc
stos
sbb
arpl
pusha
inc
aaa
divb
test
adc
nop
xor
add
inc
movb
ds
sub
mov
sahf
insb
jo
push
adc
lahf
enter
bound
imul
adcb
or
inc
les
insl
fcomip
add
loopne
inc
and
sub
sarl
outsl
lods
add
decb
and
push
cmpsb
pusha
mov
out
pop
xchg
loop
xlat
ds
or
addb
aaa
and
arpl
xchg
xchg
inc
adc
int3
adc
xor
loopne
ljmp
mov
dec
pushf
cmp
pusha
lds
dec
cmp
je
outsb
add
add
jg
loope
loopne
notl
loope
add
adc
add
rclb
addb
rcrb
jmp
imul
mov
mov
xchg
int
dec
lock
ret
jmp
mov
aaa
mov
and
int3
enter
inc
faddl
in
icebp
addb
dec
adc
stos
shlb
jle
jno
add
ret
repnz
rolb
ss
scas
lock
addl
loopne
and
mov
jl
pusha
inc
ret
int3
adc
push
or
add
inc
push
ja
mov
ss
adc
push
mov
fldt
cmp
sti
jne
lret
xchg
and
add
jl
call
add
add
jge
lock
movsl
loopne,pn
xor
jo
daa
pop
dec
hlt
js
ret
add
adc
jle
xchg
add
mov
rorl
shl
into
daa
shrb
mov
inc
cmp
add
inc
jne
js
push
in
and
add
fidivrs
sub
pusha
cltd
movsb
mov
ja
out
shl
add
lcall
loop
outsl
mov
push
pop
clc
fnstcw
in
xchg
mov
sahf
arpl
andb
xchg
cmp
xor
fwait
dec
cmp
movl
add
xor
jo
ret
lds
loopne
xchg
or
outsl
mov
xchg
or
je
cmpsb
rolb
pushf
daa
addr16
dec
test
shlb
shrb
lret
repnz
aam
arpl
xchg
js
sub
jge
jmp
cmc
xchg
and
popf
rcrl
out
adc
testl
inc
mov
pmullw
push
scas
mov
add
filds
push
dec
or
inc
add
mov
popa
pusha
mov
sub
test
inc
loopne
adc
aaa
test
sbbl
push
and
cltd
test
add
pop
jmp
int
cltd
nop
pusha
dec
imul
lds
pusha
inc
pop
jle
adc
xor
adc
cmpsb
shlb
and
jne
xor
add
mov
pusha
add
not
push
push
and
pusha
pop
fdivr
pop
mov
jg
or
xchg
adc
pop
mov
pop
and
lea
adc
jnp
out
int
lret
pop
lods
rolb
xchg
repnz
push
shll
mov
fsub
orl
stos
and
roll
fisttpll
lods
std
mov
add
jp
sbb
loope
das
pop
mov
addr16
int
add
adc
inc
and
push
mov
shlb
fstpt
cmp
sbb
lods
test
inc
pop
jge
test
add
and
into
sbb
cmp
add
add
push
inc
test
or
pusha
aad
inc
pop
jl
andb
adc
cwtl
shl
mov
xchg
inc
mov
pusha
or
loopne
dec
push
push
push
mov
mov
add
rolb
std
cmp
sbb
jno
pusha
inc
fsubs
dec
cmp
jb
je
cwtl
push
ficoms
andb
in
mov
popa
mov
andps
dec
mov
loope
mov
pusha
popf
popf
aaa
es
pop
sbb
fsts
ss
pop
and
sub
inc
fs
popa
sub
data16
shl
in
push
mov
cmp
loopne
sahf
dec
inc
inc
mov
xorl
mov
pusha
mov
xor
out
pusha
and
dec
enter
or
adc
add
jl
adc
mov
stc
mov
imul
in
aas
push
mov
pop
xlat
jno
inc
and
or
shlb
inc
fadd
mov
arpl
lods
add
push
cmpsb
loopne
jg
pusha
lret
loope
jecxz
dec
xor
aaa
mov
sbb
cmpsb
add
shll
lea
jmp
shlb
psrlq
push
in
sub
and
or
jbe
fcomps
add
xchg
fisubrs
cmc
or
adc
pop
dec
jnp
pusha
mov
adc
xlat
jae
mov
shlb
les
jmp
lcall
push
dec
sub
loopne
loopne
mov
mov
pusha
inc
addb
repz
add
aad
sub
std
pop
imul
dec
negl
loopne
sti
insb
outsl
xor
dec
cmpsb
add
lds
and
add
push
insl
sub
popf
in
xchg
rorb
mov
jmp
add
mov
jns
imul
pop
xchg
jno
andb
xor
sub
sub
add
arpl
pusha
lea
ljmp
and
rcrb
cmp
mov
sub
add
pop
mov
adc
shr
adc
dec
xor
pusha
inc
out
xchg
xor
cmp
jbe
shrl
and
rolb
pusha
sub
shrb
adc
or
adc
jne
lret
or
pusha
lods
pusha
sarb
jl
pop
push
lea
loopne
cmpsb
shlb
sti
les
cmp
in
or
push
inc
test
stc
push
push
mov
cwtl
lret
add
push
cmp
jge
xor
inc
rclb
leave
lds
add
mov
mov
push
mov
cmpsb
mov
push
ds
rol
xchg
lods
repz
outsl
scas
loopne
fdivrl
ret
xor
test
repnz
aam
cli
pop
arpl
lock
mov
push
shrl
inc
push
mov
and
rolb
mov
sub
xorb
stos
aam
xor
add
repz
pusha
repz
andb
mov
mov
pop
mov
mov
addl
mov
mov
in
fstl
sbb
pop
xor
stc
fistl
in
test
xchg
in
cmp
and
loopne
lret
dec
andl
pop
loope,pt
aad
push
and
jae
loopne
xchg
aad
fstp
nop
iret
push
addr16
div
mov
add
or
scas
and
sbb
jp
push
loop
adc
dec
pushf
pop
je
cmp
enter
jp
and
ret
xchg
lods
adc
lret
jae
sti
outsb
push
jp
xchg
or
jle
popf
mov
jb
lds
push
stc
in
cmpsb
inc
mov
andb
test
cmp
aad
mov
mov
dec
jle
xor
add
jp
and
shrb
push
sub
inc
test
inc
cmc
sbb
in
loope
inc
test
inc
lods
insb
ret
mov
cli
repnz
sbbb
sub
ss
jmp
insb
rcl
iret
and
mov
xchg
mov
lds
divl
pusha
jp
xchg
xor
fistps
int3
cld
dec
jae
sbb
and
jo
repnz
push
adc
aam
mov
hlt
jmp
cmc
jmp
sub
jns
test
inc
shlb
clc
movsb
rolb
push
xchg
adc
push
cs
and
pusha
xchg
add
loopne
cmpsb
inc
pusha
imul
sbb
imul
inc
xor
stc
xor
cwtl
or
inc
inc
repz
mov
loopne
bound
mov
add
jecxz
andb
or
icebp
je
in
and
jno
test
rorb
inc
out
mov
and
rolb
loopne
pop
xlat
xchg
leave
mov
add
mov
js
scas
mov
js
jno
jno
and
scas
pop
add
loopne
mov
loopne
loop
jl
cmp
xchg
push
imul
or
pusha
and
xchg
aas
ret
jmp
push
add
mov
testl
dec
mov
loopne
inc
pusha
inc
and
jns
xchg
shlb
in
aas
adc
and
dec
cmpsb
loopne
mov
inc
pop
mov
loopne
out
les
iret
gs
jo
das
shl
jb
and
inc
mov
movups
push
enter
mov
inc
out
pushf
and
mov
repnz
out
sbb
inc
stc
adc
aaa
rcll
fucom
decb
xor
mov
jns
xchg
dec
and
add
dec
xor
cmpb
add
rclb
dec
loopne
repnz
xor
sbb
pop
xchg
xlat
int3
mov
rolb
pusha
cld
pusha
shlb
cmp
out
fstps
push
mov
and
add
mov
mov
mov
add
pusha
mov
pop
ret
outsb
aad
jae
push
mov
rcll
push
outsl
push
rcr
jmp
and
sahf
pop
std
ds
imul
add
pop
dec
mov
xlat
and
and
out
xchg
add
and
inc
push
out
in
xchg
inc
xchg
inc
add
sahf
ss
jge
in
notl
loopne
and
cmovs
push
push
cwtl
jecxz
sub
lea
pop
je
push
lahf
mov
outsb
inc
sahf
dec
xchg
push
mov
pusha
add
rolb
into
adc
das
loop
stos
ret
jg
inc
out
out
adc
pusha
pop
aas
jp
mov
inc
dec
pop
in
pop
adc
clc
loopne
rorl
add
loopne
pusha
add
fildl
or
inc
mov
fistps
xchg
push
in
scas
rolb
jo
das
jno
dec
xor
out
pop
mov
outsl
and
mov
mov
or
shrb
xchg
push
gs
popf
push
imul
ss
enter
cmp
xor
cmp
popw
das
add
lret
xchg
and
sbb
add
shlb
mov
inc
lds
pop
or
cmpsb
shl
xchg
pusha
mov
addr16
pop
and
fisubrs
and
pop
fwait
pop
or
orb
sub
pusha
jle
ss
lcall
lahf
das
jmp
mov
and
xchg
jmp
stos
rolb
mov
push
sti
loop
xchg
xchg
sbb
pusha
push
aam
sbb
mov
push
fildll
addb
rolb
add
es
sbb
mov
addl
pusha
pusha
je
testb
inc
bound
sar
mov
bnd
push
mov
stos
mov
out
je
std
outsb
notl
mov
and
gs
mov
inc
cli
andl
add
jl
xlat
mov
inc
mov
inc
out
lret
push
dec
xchg
aas
outsb
scas
pusha
mov
and
mov
cwtl
dec
inc
or
inc
loopne
jge
xchg
loopne
testl
les
inc
pusha
sbb
std
movsb
inc
shr
and
jb
fdivs
add
mov
mov
jo
aaa
nop
ficompl
subb
addb
sub
rolb
pusha
rcll
xchg
pop
pushf
or
mov
and
mov
test
cmpb
mov
leave
dec
in
add
add
mov
mov
sbb
mov
inc
pop
push
sbb
mov
push
mov
mov
bound
inc
fwait
add
sbb
mov
push
mov
or
popf
icebp
insl
and
test
rolb
addb
loopne
bound
flds
scas
add
mov
mov
cmp
pusha
add
hlt
sti
mov
add
jne
add
lcall
xchg
stos
mov
pusha
and
lahf
jl
jae
hlt
cli
call
mov
sbb
add
out
push
in
sbb
gs
addb
out
mov
loopne
je
xchg
or
subb
pop
dec
sbb
add
add
jo
cs
and
lret
xor
roll
pusha
rcrl
and
iret
sarb
out
jl
xor
mov
andb
enter
lret
ja
movsb
and
push
push
sbb
mov
add
sub
sti
lock
pushf
mov
rol
xor
cltd
push
mov
addb
xchg
mov
loopne
adc
push
pop
pop
repnz
movsb
shlb
jb
cld
and
push
dec
insl
cli
xor
mov
adc
in
cmpsl
jne
cmpsb
pusha
mov
dec
pusha
adc
dec
xchg
pusha
pusha
je
sbb
loope
ss
notb
mov
dec
shll
mov
pusha
pusha
jns,pt
fsubrl
jae
out
dec
je
ret
stos
mov
or
add
pop
loope
add
sahf
test
daa
subl
pop
and
adc
xlat
dec
movsb
inc
mov
mov
and
mov
inc
orb
mov
mov
sub
test
pusha
and
xchg
rol
jl
add
nop
jae
btc
mov
mov
and
sub
and
aaa
jg
andb
mov
add
ljmp
adc
and
and
leave
push
inc
lock
out
and
outsl
mov
mov
jns
pop
xor
fsubrl
jae
iret
adc
dec
lahf
add
cwtl
mov
inc
aaa
out
test
pusha
test
popf
in
mov
pusha
mov
loopne
xor
sbb
mov
aaa
pop
imul
in
mov
lret
movsb
add
xlat
xchg
push
mov
dec
jo
mov
mov
mov
inc
and
and
enter
dec
cmp
mov
ja
push
fwait
cmp
xchg
mov
and
inc
pusha
mov
clc
popf
mov
mov
nop
shll
jmp
xor
loop
inc
call
inc
int3
jnp
mov
cmp
sub
sti
rorb
sbbb
adc
mov
inc
out
rcll
and
xorb
scas
cmp
cltd
aad
add
js
fcompl
jge
imulb
add
out
jb
xchg
add
pusha
fwait
movsb
loopne
leave
jl
inc
mov
xchg
jnp
and
add
sbb
sbb
fildll
loopne
in
add
std
jmp
test
and
cld
push
cmp
in
sub
shlb
cltd
add
pusha
and
lea
mov
add
loopne
push
rol
insb
mov
inc
pop
push
addb
stc
ljmp
lods
mov
sahf
push
add
popa
sub
mov
orb
mov
ja
or
cmp
mov
and
cmp
repz
dec
clc
and
ficompl
xor
shlb
pop
movsb
and
mov
push
out
inc
inc
cli
int
clc
gs
insl
stos
and
push
rorb
pusha
and
int3
sub
inc
mov
jns
dec
jb
pushf
pusha
in
cmp
paddsw
fs
insb
les
pusha
rclb
mov
push
stos
shlb
shlb
cmp
pop
fcom
push
sbb
gs
popa
xorl
dec
and
mov
test
or
test
inc
pop
cmp
mov
and
int3
aas
stc
push
popf
xor
inc
and
les
andb
jbe
pop
or
stos
shlb
in
xchg
mov
mov
sbb
and
push
dec
sbb
and
push
inc
add
dec
test
addb
into
xchg
shrb
and
pop
push
cld
fnstenv
shl
inc
inc
mov
lds
add
sbb
mov
inc
test
cmc
jle
sti
or
loopne
xor
jl
mov
nop
pop
sbb
adc
push
stc
fadd
push
and
imul
sbb
add
pop
lahf
pushf
popf
stos
stos
cmp
inc
sub
loopne
out
fsubrp
add
sti
mov
lret
sub
cmp
imul
scas
in
sub
loopne
icebp
inc
enter
mov
inc
mov
loope
negb
cld
jp
insb
mov
sbb
lods
mov
movswl
xchg
and
jnp
xchg
xor
dec
inc
adc
mov
jge
pop
sbb
or
inc
inc
jnp
sub
lea
pusha
pop
inc
jns
popf
stos
loopne
cmp
es
sahf
fstpt
cmp
rclb
cmpl
shrb
out
rcrl
cmp
sti
ret
fmull
addb
xchg
outsl
xchg
xlat
mov
cld
push
and
pusha
mov
mov
adcl
inc
xchg
pusha
rcll
pop
andb
mov
into
std
into
loop
jl
cmp
fwait
mov
scas
push
shlb
and
or
add
mov
mov
sbb
mov
roll
inc
pusha
inc
dec
fwait
push
mov
loopne
icebp
xor
add
je
push
mov
sahf
push
mov
or
or
jbe
jnp
addb
lock
scas
inc
add
mov
loopne
lret
add
rcrb
add
shl
lock
adc
les
and
pop
inc
sbb
shlb
ss
cmpsl
out
add
push
loopne
sti
mov
and
adc
and
or
xchg
pop
inc
push
lcall
jbe
dec
icebp
add
dec
rcll
pusha
mov
rcll
mov
xchg
sti
sub
and
aam
test
mov
and
loopne
ficomps
lods
pusha
add
inc
loopne
test
bound
and
adcb
andb
int3
pop
mov
pop
lret
sti
dec
cmp
test
xor
popf
xchg
imul
mov
sub
testb
add
push
mov
mov
divl
jne
inc
rcll
mov
mov
in
loope
and
add
insb
mov
fsubrl
pusha
and
test
mov
and
or
call
add
aas
sub
pusha
subb
loopne
int3
push
sbb
mov
pop
pop
popf
imul
xor
jae
int3
sbb
sub
mov
mov
loopne
sarl
mov
pusha
adc
inc
lahf
repz
ljmp
adc
pop
sti
out
or
pusha
pop
jl
mov
push
iret
int
and
out
mov
mov
pusha
fwait
outsb
mov
sub
dec
sub
aam
sahf
test
loope
and
dec
inc
enter
pop
daa
dec
push
or
push
pusha
cmpsb
loopne
xchg
adc
mov
adc
inc
inc
ljmp
pop
push
sti
add
sub
addb
pusha
mov
add
sti
or
mov
mov
lods
add
pusha
mov
aad
and
and
loopne
into
add
pusha
lret
pop
mov
mov
xchg
jae
add
pop
int3
cmp
std
jb
sbb
sbb
mov
mov
add
add
scas
popf
cmp
mov
cmp
je
je
pop
jb
and
mov
das
ljmp
mov
subb
adc
adc
ss
mov
jecxz
pop
cmp
add
sti
cwtl
flds
push
cmp
mov
pusha
loopne
in
jns
jmp
das
inc
out
sub
loopne
mov
shlb
push
jl
in
aas
movsl
mov
loopne
add
in
loop
jl
out
dec
pop
sti
mov
loopne
mov
adc
iret
jge
int
xor
mov
nop
push
jge
loopne
inc
ss
into
xchg
mov
jns
pusha
shr
add
addr16
mov
test
aaa
ret
mov
sarb
cmp
or
outsb
ljmp
ret
rcll
fs
dec
leave
test
rolb
xor
push
dec
cmpsl
das
ret
andb
mov
mov
and
data16
pusha
pop
jp
hlt
loope
sbb
test
xchg
pop
adc
popl
rolb
mov
les
cmp
int
arpl
outsb
push
mov
ret
bound
daa
dec
jns
rolb
bnd
orl
sub
inc
mov
mov
aad
mov
push
xor
lahf
adcl
lahf
jno
int
xlat
sbb
push
ret
rcr
pop
loop
ljmp
lret
mov
out
mov
loopne
fwait
addb
adc
das
pop
mov
lea
jl
mov
push
fidivl
lods
adc
mov
imul
lods
addb
ficoms
lahf
lock
adc
mull
and
cmpb
popf
in
pusha
add
in
adc
iret
jbe
aam
js
pop
test
out
leave
cli
out
sub
inc
mov
imul
sbb
lock
cmp
fs
out
xlat
in
and
mov
mov
mov
fsubs
cmp
pop
sar
dec
movsl
scas
mov
mov
pushf
mov
rdtsc
cmp
jne
mov
stc
dec
movsb
mov
out
aaa
addr16
iret
or
shrb
mov
rorb
pusha
jmp
loopne
ljmp
inc
fs
outsb
cld
shl
jne
push
jecxz
test
mov
jb
xchg
loopne
dec
inc
xor
fimull
inc
testb
cmp
inc
push
and
loope
push
mov
push
and
sub
je
xchg
mov
add
rolb
inc
das
pop
add
jge
out
gs
mov
loopne
daa
xchg
popa
dec
jmp
adc
loopne
adc
insb
scas
testl
pusha
xorb
and
inc
dec
pop
adc
loopne
out
mov
pop
in
hlt
jo
sbb
add
or
mov
dec
push
xchg
imul
andb
xchg
test
and
inc
dec
sbb
std
mov
dec
insl
inc
cmp
sbb
cltd
jno
cmp
xor
pusha
pop
xchg
addb
inc
jns
loope
mov
insl
shlb
addb
mov
sbb
mov
loopne
lods
inc
and
inc
inc
inc
sahf
or
add
fdivl
and
add
pusha
lahf
push
sbb
mov
pop
xchg
xchg
mov
dec
loope,pt
shlb
loopne
xor
dec
loopne
jmp
fisubrl
int
mov
into
bound
mov
stos
rolb
push
icebp
cmc
add
test
rorb
xchg
insl
test
inc
gs
or
add
cld
sub
jbe
shrl
and
xchg
test
pusha
cwtl
pop
mov
out
sbb
jge
push
xchg
ror
arpl
sub
mov
and
sub
mov
inc
sti
fstpt
shl
mov
out
fildl
fnstcw
cmp
mov
jae
dec
push
dec
xchg
mov
addb
add
ds
call
inc
mov
cwtl
mov
addb
sar
dec
cwtl
je
dec
rol
add
or
fistpl
int3
fsubrs
push
out
jle
pop
dec
ret
pop
inc
xchg
pop
cmpl
sbbl
daa
add
fildll
idivb
movsb
rolb
andb
sub
add
and
cwtl
pop
add
xor
adc
inc
push
rolb
outsw
andl
add
mov
mov
aaa
jb
sub
inc
fwait
dec
xchg
add
mov
pusha
xlat
or
inc
xor
dec
and
and
inc
fistl
pusha
cmp
xor
and
pop
push
cmpsb
and
movsb
add
xlat
xor
jmp
aam
pop
xor
negb
dec
loop
loopne
pop
lods
mov
leave
push
push
jmp
push
dec
jae
pop
push
test
subl
addl
inc
cmp
popf
add
pusha
andb
pop
jnp
fwait
cmp
and
add
pop
int3
xor
dec
dec
adc
add
in
cld
mov
and
adc
mov
sub
push
push
adc
imul
jno
clc
mov
add
inc
add
cltd
aaa
mov
mov
ret
leave
or
bound
in
inc
sbb
add
inc
push
mov
sbb
and
jns
dec
pop
inc
mov
mov
jno
add
add
shlb
out
iret
filds
imul
das
das
sbb
mov
outsl
lods
push
xor
imul
add
mov
mov
rorb
stos
inc
addb
fldpi
dec
sbb
sub
and
mov
loope
cli
imul
pusha
mov
sub
in
jno
inc
mov
pusha
adc
inc
lret
sub
mov
movsl
fcomip
hlt
push
cwtl
sahf
or
inc
xchg
pop
mov
scas
inc
inc
ds
rorb
ljmp
andb
cltd
and
sub
out
stos
rolb
pusha
pusha
out
dec
cmp
pop
fdivrl
shlb
sbb
nop
lret
fmul
pop
pushf
mov
shrl
mov
pusha
jl
cmp
clc
push
nop
leave
ljmp
and
xchg
cmp
pop
loop
mov
shl
sub
orb
and
adc
imul
fstpl
pusha
ret
imul
pusha
xor
mov
rol
sbb
and
xor
loopne
cmpsb
pusha
add
loopne
or
push
jmp
shlb
and
imul
imull
test
and
push
arpl
mov
out
pop
mov
ljmp
rclb
add
aas
xor
sbb
in
mov
pop
out
pop
sbb
xor
push
push
cltd
cmp
pop
push
addb
fdivl
lret
pop
xchg
out
pop
lods
mov
shll
sbb
stc
das
cld
or
add
icebp
sub
decl
addl
add
and
sbb
cwtl
nop
adc
and
lret
fsubl
mov
fs
dec
pop
xchg
je
push
shlb
pusha
sbb
xor
movsl
jg
stc
inc
and
andb
push
inc
pop
cmp
test
mov
ds
loopne
loopne
insl
bound
mov
cmpsl
jl
into
mov
loopne
or
lock
inc
add
add
cmpsb
add
aas
sarl
ret
push
adc
fcomi
rorl
call
mov
and
pop
iret
rolb
sti
mov
rol
loop
cmp
pusha
shrb
inc
mov
adc
out
and
and
inc
ud2
sbb
loopne
and
iret
add
inc
addb
push
div
or
rolb
insl
adc
adc
cmp
inc
or
movsl
out
xor
repz
xchg
mov
jge
jb
mov
inc
test
sarb
inc
dec
add
add
repz
jp
inc
test
mov
sub
jp
dec
arpl
sub
push
mov
sbb
in
mov
dec
push
add
in
lcall
andb
sub
das
or
rol
lods
addb
mov
pusha
out
aaa
je
add
call
or
and
lds
xor
aad
cmpl
jmp
inc
int3
xor
sub
mov
pop
or
lods
adc
pop
popa
imul
xor
and
inc
pusha
xor
sbb
pusha
ror
loopne
jb
sbb
cmpsb
shlb
ds
mov
addr16
dec
in
rorl
dec
dec
push
int
ret
jns
push
idivl
push
adc
insb
inc
and
mov
test
loopne
les
bound
xchg
cmp
pop
inc
and
movsb
and
lea
sahf
aam
pop
xchg
xchg
jb
mov
inc
mov
dec
sahf
mov
mov
out
out
daa
xor
sbb
push
fwait
sti
pop
test
add
mov
jb
dec
sub
mov
ss
add
dec
sub
enter
lea
dec
jle
filds
push
outsb
mov
cmp
addl
inc
inc
outsl
sub
mov
pop
sub
xor
mov
lea
and
add
jo
pop
out
push
mov
and
lret
cmpsl
push
aad
mov
xor
pusha
test
xchg
insl
mov
xchg
xchg
fucomp
push
mov
cld
loopne
rorb
movsb
pusha
mov
in
sbb
and
inc
cld
mov
dec
ret
pusha
add
popa
fs
pusha
xor
outsb
popa
movb
xchg
inc
rorb
lahf
push
dec
sub
cmpb
lods
lods
inc
mov
andb
out
add
jp
shlb
pop
pop
scas
and
roll
loopne
or
mov
or
std
fmull
and
inc
xor
or
xchg
sbb
imul
and
push
loopne
push
mov
mov
mov
mov
and
add
xchg
sub
inc
pop
pusha
and
arpl
ss
daa
imul
fisubs
add
icebp
andb
call
mov
hlt
mov
cmp
cmpsb
add
add
adc
test
add
or
and
rol
sahf
arpl
sbb
inc
xorb
sbb
mov
shlb
ja
loopne
out
xchg
xchg
or
in
scas
push
mov
inc
push
cmpsb
mov
inc
icebp
in
cmp
inc
aas
mov
or
mov
loopne
mov
add
inc
testl
sub
andb
aas
xchg
sbb
mov
fldenv
test
sti
lcall
shrd
or
inc
or
mov
xlat
lret
mov
and
stos
inc
sarb
push
fmul
dec
and
loopne
add
clc
dec
int
sete
push
fwait
test
and
pop
mov
ja
outsl
pop
xchg
daa
fs
test
and
push
add
stos
jge
scas
fcoml
stc
push
sub
pusha
pcmpgtw
lahf
fcoms
aad
shrb
out
pushf
andb
addb
add
mov
inc
fcmovnb
adc
loop
mov
sub
int
xchg
nop
int3
std
gs
in
or
scas
mov
into
dec
gs
mov
pusha
pushf
loopne,pn
mov
xor
stos
shl
jmp
pusha
and
repz
or
inc
data16
shl
mov
inc
imul
in
push
cmpsl
les
inc
loopne
add
idivb
jg
mov
pusha
inc
inc
ret
cmp
aam
leave
andb
xchg
loopne
sub
inc
pusha
mov
or
insl
pop
out
fnstenv
inc
pop
adc
pop
aaa
inc
mov
inc
mov
add
gs
inc
stos
xor
fwait
add
pop
dec
mov
inc
jno
mov
xchg
je
mov
jnp
and
sub
mov
dec
ss
pushf
popa
push
faddp
iret
xlat
outsl
pop
jp
je
and
lcall
inc
jl
addb
push
adc
cmp
jns
js
iret
addb
or
inc
rcr
cli
lods
and
mov
aam
mov
jb
add
push
mov
and
push
sub
mov
and
cmc
jbe
testl
pusha
repnz
xor
lret
movsb
inc
loopne
aam
xor
dec
inc
mov
rol
daa
cmp
inc
test
mov
mov
inc
mov
pusha
pusha
icebp
jg
push
mov
addb
daa
out
push
dec
lods
pusha
add
das
or
pop
pop
in
sbb
mov
test
loopne
inc
imul
xchg
popf
cmpsb
mov
mov
cmp
int
pop
push
jmp
or
fucomp
cmp
push
movsl
xor
cmp
fsubl
inc
xchg
cwtl
cmp
push
push
mov
dec
add
pusha
mov
ss
jno
mov
or
loopne
jmp
dec
cmc
mull
or
add
loopne
jecxz
xor
test
pop
cmpsl
jge
pusha
inc
in
push
arpl
loop
sahf
sahf
jl
push
adc
loopne
scas
jae
cmp
out
xor
aad
hlt
ljmp
loop
add
pusha
dec
arpl
divl
loopne
cli
add
loopne
sbb
xor
sub
fs
xchg
js
xchg
data16
loopne
andb
ja
mov
inc
rol
fwait
pusha
fwait
loope
pop
js
sub
pusha
addb
jne
icebp
and
ror
mov
subl
jo
xor
insb
ret
gs
imul
lcall
decb
loopne
fsubs
in
lahf
pop
push
pusha
inc
and
add
push
lahf
mov
fisubrl
inc
jnp
int
xor
out
aas
scas
pusha
inc
rcrl
sbb
shlb
in
xlat
cmc
fdivs
xor
loopne
aaa
inc
jae
cs
pusha
mov
and
ffreep
adc
jo
xor
mov
inc
and
shlb
jo
sub
cltd
cmp
mov
imul
xchg
cmc
outsl
xchg
inc
xchg
sbb
dec
adc
out
xor
add
mov
gs
psllq
idivb
mov
mov
mov
shl
push
out
mov
mov
mov
in
ret
and
test
and
rolb
add
mov
insb
xchg
into
add
loopne
mov
test
add
test
mov
cltd
lcall
pop
adc
adc
inc
add
inc
inc
push
xor
add
push
mov
outsl
in
loopne
mov
inc
jb
inc
pusha
mov
and
fists
and
addb
stos
add
add
pusha
mov
stc
insl
xlat
xor
ljmp
add
or
shll
push
out
xchg
pop
jmp
sub
rcrb
rol
jbe
notl
stos
pusha
and
xchg
daa
jnp
xchg
and
pop
imul
shrl
inc
inc
aaa
push
jp
enter
hlt
arpl
push
add
gs
sbb
push
inc
loopne
roll
mov
mov
fisttpll
mov
jecxz
rorl
dec
test
loopne
inc
dec
pop
cmp
mov
push
or
mov
fsubrl
mov
pop
mov
mov
inc
mov
shlb
cmp
mov
cmp
shl
cltd
test
adc
add
push
add
inc
pusha
sti
dec
into
bound
inc
inc
mov
ret
dec
jb
dec
fs
in
mov
add
scas
pusha
pusha
adc
rolb
xchg
int
jbe
and
pusha
mov
mov
push
lock
and
mov
mov
mov
push
cmp
and
jmp
addb
lods
add
jae
jne
push
pop
or
int
test
loop
and
add
pusha
push
scas
lods
jbe
test
das
jge
cli
stos
andb
and
dec
inc
cmpsb
and
pop
stos
push
adc
jmp
push
sub
or
mov
das
or
push
bsr
bound
orl
pusha
pushf
inc
sub
xchg
pop
and
cmp
shlb
fsubp
add
mov
xchg
jg
jmp
mov
imul
int3
mov
rclb
or
jge
mov
fisttpl
mov
andb
mov
movsl
sbb
mov
add
jmp
in
xchg
add
mov
xchg
lea
push
idivb
add
adc
xlat
in
sub
pusha
ja
icebp
xchg
dec
mov
sbb
or
sbb
pop
jge
into
adc
cmp
mov
cld
and
fld
xor
add
mov
mov
test
shrl
add
rcrl
mov
andb
jge
add
pusha
loope
test
loopne
mov
daa
hlt
popl
and
imul
lea
ja
fldt
mov
lods
sbb
cmc
fistpll
xor
addl
sbb
mov
mov
subb
inc
dec
and
loopne
loop
mov
bound
fstl
jmp
mov
push
jnp
pushf
jnp
push
lock
and
and
sbb
or
jmp
sub
dec
jnp
mov
and
insl
mov
clc
fdivs
or
mov
and
add
pusha
xlat
xchg
insl
or
or
jns
addb
cltd
or
pusha
mov
repz
test
add
rcrb
int
xchg
mov
mov
add
rcrb
mov
repz
addb
in
sbb
cmp
jae
jnp
adc
xchg
orl
ds
mov
ret
movsl
bound
push
repnz
inc
loope
arpl
mov
loopne
notb
mov
sbb
pusha
aas
push
rclb
pusha
lret
pop
adc
pushf
mov
mov
mov
out
pop
int3
hlt
leave
dec
and
pop
andb
or
loopne
adc
mov
data16
lret
mov
rcrb
and
leave
xchg
add
mov
scas
inc
add
push
xor
mov
je
js
out
xchg
xchg
inc
inc
pop
int
int3
cmp
fstps
or
loopne
sarb
jnp
imul
dec
loopne
faddl
adc
test
mov
ds
in
mov
inc
and
xchg
mov
xorl
test
mov
fmull
rol
cmovb
int3
addr16
aam
rcl
inc
aam
jp
popa
add
and
push
xchg
popf
das
sub
mov
and
inc
sub
xor
inc
mov
xchg
jb
shlb
adc
pusha
or
cld
mov
fbld
rolb
aas
std
aad
pusha
mov
xchg
aam
shl
inc
xchg
pop
das
push
adc
insl
lahf
push
scas
mov
add
mov
add
popf
js
mov
lret
xor
sbb
pop
jge
inc
pop
sbb
pop
xor
adc
jnp
aaa
cs
pusha
cmp
in
les
jae
icebp
call
shl
cmp
int3
loopne
int3
repz
addb
in
pop
mov
loopne
xor
aas
inc
inc
fistpll
in
xor
xchg
imul
repz
jbe
loopne
popa
xchg
inc
adc
scas
fdivrs
push
jns
cld
ret
jbe
adc
mov
mov
shrb
adc
dec
sbb
sub
inc
pop
dec
aas
sub
pushf
fsubr
dec
jle
jl
lret
jbe
sarb
push
insb
mov
mov
cmp
loopne
jns
jb
cmp
xor
and
add
xor
into
stos
loopne
jle
jne
bound
inc
or
mov
clc
pop
test
jno
mov
jmp
popa
outsb
ret
subl
lea
dec
inc
nop
addb
repnz
test
repz
inc
fchs
mov
mov
xchg
cmp
add
stc
cmp
pop
push
inc
rorb
pop
lods
mov
inc
call
hlt
mov
in
clc
dec
xchg
inc
add
pusha
dec
stos
add
sub
shlb
mov
sub
and
fstp
icebp
mov
mov
lret
rorb
sub
jle
jecxz
mov
stc
inc
or
pusha
jp
fistpll
es
mulb
cmc
loop
dec
rcr
nop
add
inc
inc
cs
pusha
stos
mov
test
pop
in
rcrl
xchg
negl
scas
and
mov
xchg
pop
test
ja
sbb
sbb
je
int3
inc
pushf
dec
push
repnz
js
mov
dec
cmp
cli
sub
jb
in
movsl
es
fisubs
push
mov
push
cwtl
fisttpl
pop
dec
push
sub
incb
loopne
dec
aam
stos
pushf
iret
adc
cld
jge
mov
mov
andb
add
cmc
xchg
pusha
faddl
xchg
cmovle
and
inc
inc
push
jne
jns
pop
stos
or
inc
outsb
or
enter
jo
inc
orb
fdivs
cmp
fnstsw
movsl
data16
imul
mov
daa
mov
adc
and
xor
sbb
sbbl
add
xchg
push
or
xorb
mov
mov
pusha
mov
dec
fs
and
mov
ljmp
aaa
xor
sbb
gs
mov
mov
cmp
mov
inc
lret
pop
out
or
mov
addb
pop
cwtl
sti
sbb
in
mov
in
pop
pop
cli
mov
and
or
sub
add
adc
push
sbb
xor
insb
aaa
inc
dec
cli
mov
rolb
mov
inc
dec
in
je
inc
push
dec
add
cmp
sbbl
dec
mov
cmc
xchg
call
sub
loopne
addb
int3
pop
mov
jns
mov
loopne
inc
inc
jge
mov
dec
inc
mov
fldcw
shlb
mov
add
mov
addb
shrb
and
xchg
and
fsubrs
pusha
mov
addr16
adc
fsubr
and
cmp
out
xor
inc
xchg
inc
addb
and
rcrb
sub
add
jl
cmp
push
push
movsb
pusha
mov
pop
inc
sbb
into
adc
mov
push
xchg
xchg
sbb
sub
shlb
in
loopew
rol
jo
iret
jo
shlb
out
mov
and
out
push
shlb
sahf
cmp
inc
add
pop
fadds
and
rolb
popa
int3
lds
mov
mov
aam
jo
inc
loopne
addb
rolb
loope
shl
je
and
pusha
movl
jecxz
and
popa
icebp
int3
xlat
or
mov
inc
jg
popl
shrl
fstl
dec
scas
rolb
mov
shl
mov
adc
imul
push
cmpsl
lock
sbb
inc
mov
repz
mov
into
es
rclb
fstl
out
arpl
imul
inc
push
clc
dec
test
or
mov
mov
arpl
cmpsl
inc
addb
repz
jns
mov
leave
iret
test
inc
rcr
loopne
sti
and
and
inc
sahf
jmp
sbb
cmp
pushf
jae
adc
rorb
inc
pusha
clc
adc
addb
push
jg
in
rcll
lea
divl
push
or
pusha
andb
shl
jne
sbb
pop
cwtl
lret
jmp
insb
fidivl
lods
pusha
loopne
cmp
in
push
cmpsl
stos
push
sbb
pop
clc
inc
mov
rorl
inc
sbb
sub
ja
mov
and
shrl
sub
inc
adc
xchg
mov
pusha
mov
adc
jnp
adc
shll
scas
shlb
aam
nop
loopne
push
jo
inc
dec
out
mov
rclb
movsb
pusha
loopne
pop
xor
inc
icebp
leave
push
mov
lret
cmc
xchg
out
sub
mov
rorb
jns
xchg
mov
les
pushf
test
inc
or
xchg
jge
sbb
dec
xor
subb
pusha
or
leave
lock
mov
mov
pop
cld
insb
jnp
out
mov
push
ljmp
and
stos
loopne
push
imul
or
inc
sbb
xlat
in
mov
cmp
inc
and
popa
pop
cmp
xchg
xchg
mov
jnp
cltd
adc
pusha
mov
add
int3
sti
and
loopne
loope
jne
shl
adcl
icebp
sub
jae
in
loopne
and
mov
stos
add
pushf
push
add
test
sbbb
mov
mov
cmp
push
rolb
test
mov
mov
mov
jmp
lret
and
sahf
sub
fldenv
pusha
mov
addb
ficoms
mov
into
push
mov
cmp
add
out
jbe
push
popfw
mov
shr
pop
cmp
jae
sub
and
mov
pusha
inc
leave
test
andb
inc
aam
pusha
inc
mov
xchg
cmpsl
mov
pop
mov
rolb
sbb
outsl
shr
mov
mov
cmpsl
mov
inc
push
inc
addr16
jne
inc
lret
das
mov
xchg
cmp
add
cmp
out
add
mov
scas
push
ret
mov
nop
test
rol
ja
outsl
jnp
mov
icebp
push
cmp
xorb
mov
mov
insb
int
enter
into
push
popf
ret
arpl
repnz
cwtl
inc
xor
jp,pt
pop
mov
clc
push
addr16
xor
inc
pusha
push
fcmove
pushf
mov
pop
sbb
ret
and
and
inc
shlb
loopne
mulb
inc
xor
fisubs
jge
repnz
inc
loopne
cmp
ja
repnz
pop
popa
xsave
xorb
fxch
push
add
ljmp
shlb
fcoml
jmp
rcrb
cmp
pusha
ror
jb
aad
out
clc
outsl
lds
push
fildl
dec
jg
aam
add
mov
add
mov
ret
and
jnp
lahf
add
and
scas
mov
cmp
xchg
push
loopne
rolb
lea
sub
pusha
mull
jl
xor
or
add
xlat
inc
push
arpl
js
mov
add
pop
add
inc
sti
sub
mov
inc
xorl
or
adcb
inc
xchg
mov
movntq
out
push
clc
shrl
cmp
out
ljmp
aad
mov
sbb
dec
jnp
xor
loopne
jg
ret
cmp
jno
push
test
loop
dec
dec
xchg
dec
out
rcll
xor
sbb
mov
and
add
push
and
insl
rclb
pop
mov
or
and
loopne
mov
hlt
adc
js
fnstsw
mov
pop
xor
loopne
xchg
and
movsb
and
das
xchg
loopne
xor
mov
sbb
cmp
stc
xchg
jnp
pusha
pusha
test
addb
mov
pop
ja
andb
or
inc
push
ds
rorb
xchg
insb
imul
jb
add
lods
and
repz
insl
leavew
mov
adc
scas
add
out
push
sbb
inc
rorl
xchg
jns
cld
nop
or
pusha
fwait
arpl
mov
addb
and
movsl
addr16
push
stos
inc
pusha
in
fmull
mov
and
mov
rorb
push
push
loopne
fsubs
shlb
sub
fcompl
rolb
pop
jmp
cs
inc
sub
and
sub
fwait
xchg
in
dec
and
add
ja
hlt
push
adc
xchg
cmp
imul
dec
mov
push
or
pop
pop
jae
mov
divb
leave
test
shrb
mov
push
mov
mov
das
fstps
sbb
xchg
jl
outsl
dec
xor
dec
out
in
insl
push
or
or
add
jne
or
mov
inc
mov
shr
jbe
xlat
fstpl
ja
nop
push
inc
test
mov
mov
xchg
addb
cmpl
loopne
push
pop
mov
ds
xor
sbb
sbb
xchg
adc
push
jmp
mov
and
mov
xchg
jbe
int3
lea
xlat
cltd
repnz
dec
mov
jne
or
scas
add
add
xchg
pop
test
inc
push
dec
pop
or
or
inc
sbb
pop
ficoms
dec
jg
add
push
mov
mov
pop
in
mov
add
jnp
jecxz
mov
sub
inc
add
loopne
insb
pushf
xor
stos
es
loopne
xlat
js
cmp
adc
sbb
popa
leave
mov
icebp
sub
testb
rolb
loope
jne
mov
cmp
mov
cmc
mov
ss
loopne
out
mov
dec
das
push
cmp
push
loopne
or
bound
out
mov
ljmp
mov
fs
mov
imul
xlat
shll
mov
int
out
loopne
nop
pop
push
xor
xchg
pusha
stc
test
cwtl
push
shl
sahf
and
gs
iret
sub
xor
and
in
fs
jg
loopne
inc
xchg
cmp
pop
adc
pop
mov
nop
icebp
adc
and
or
and
pop
je
loop
in
push
push
daa
push
mov
xor
push
jl
stos
lods
add
sbb
dec
cmp
cmpsl
loope
inc
lods
mov
mov
jae
lock
addb
and
push
les
xchg
cmp
sbb
subl
push
add
xor
lahf
jo
cltd
pop
jne
shlb
sbb
pusha
and
mov
in
xor
add
addb
mov
ficompl
int
lock
loopne
mov
dec
dec
mov
icebp
enter
iretw
sbb
jae
push
dec
cli
lock
js
xchg
mov
dec
sti
push
mov
add
in
rcl
pushf
stos
sub
mov
sub
jnp
fs
sub
and
in
call
mov
jmp
insb
cs
shlb
push
and
out
testl
mov
jno
mov
and
repnz
pusha
xor
in
sbb
test
fwait
or
sbbb
loopne
roll
ss
dec
jno
aam
inc
xorb
sub
in
add
shlb
cmp
pusha
pusha
mov
push
fs
push
push
popf
fwait
cmc
ret
out
or
inc
ljmp
and
insb
lea
sub
pop
mov
rcr
add
pop
loopne
add
or
pusha
loop
loopne
movsb
loopne
fdiv
lds
cld
push
inc
and
pop
ret
jle
js
shlb
fsubl
mov
inc
mov
add
lods
pop
fcoml
rolb
rcll
stos
or
mov
and
mov
pop
push
mov
and
inc
and
xor
jne
add
and
pop
popf
sbb
fsubl
andb
cltd
roll
addb
lret
popa
push
jb
loope
mov
sub
mov
and
pushf
jle
sbb
lods
loopne
inc
mov
loopne
jae
pusha
inc
into
outsb
insb
rol
push
or
inc
xor
push
sub
dec
fwait
mov
jns
mov
shlb
push
je
mov
and
dec
insl
pop
mull
jns
add
rclb
pushf
xchg
xchg
add
or
push
aam
and
and
loopne
sbb
das
jbe
sbb
push
sub
inc
sub
loopne
and
pusha
mov
fs
inc
adc
xchg
cwtl
mov
jns
and
daa
ds
ja
adc
dec
test
add
fldl2t
pop
cs
pusha
jmp
xor
ss
data16
sub
add
mov
mov
loopne
stos
sub
arpl
ds
nop
add
pop
dec
xchg
stc
cmpsb
and
or
inc
and
outsl
inc
popf
ret
aad
and
cmc
adc
push
inc
xchg
inc
pusha
xor
xchg
jmp
cmp
and
pop
and
mov
dec
movsb
inc
inc
mov
lret
sbb
fstl
mov
and
nop
mov
pusha
bound
cmp
inc
mov
pop
decl
hlt
dec
xor
inc
push
push
loopne
faddl
pusha
adc
je
andb
movb
add
pusha
lock
cmp
iret
and
mov
fsts
mov
cmpsb
add
fists
inc
sti
ret
add
rcrb
sti
sbb
mov
inc
cmpsl
fnstsw
add
filds
loopne
mov
rolb
popa
or
jg
shll
add
fidivl
sub
pusha
add
sbbb
sbb
inc
jno
jl
daa
inc
aad
test
sbbb
rolb
pusha
inc
sub
inc
callw
pusha
roll
loopne
mov
jne
int3
int3
cltd
and
mov
inc
add
les
pop
mov
sub
sbb
adc
loopne
insb
and
shl
sub
add
add
xlat
push
out
add
mov
and
addb
shl
add
shlb
mov
loopne
cmpsl
aas
call
or
pop
notl
mov
push
call
mov
leave
test
orl
jo
dec
insl
inc
add
rcrb
cli
sub
inc
mov
loope
syscall
jmp
mov
xchg
rorb
mov
and
dec
fstpl
and
sbb
outsl
dec
lcall
dec
testb
shlb
mov
add
mov
inc
ja
gs
cwtl
outsb
cld
jecxz
sub
loopne
add
xchg
mov
push
sub
hlt
or
andb
adcb
loopne
test
cli
push
jbe
and
and
pusha
pop
cli
ret
sub
xchg
clc
int3
adc
mov
add
and
lds
dec
xchg
loopne
sar
mov
mov
loopne
stc
xchg
insl
rorl
and
jmp
mov
mov
test
or
pusha
icebp
jnp
jmp
insb
ficomps
andl
pop
inc
gs
pop
xor
in
fbld
rcrb
fwait
sub
arpl
ud0
jbe
mov
out
mov
movsb
mov
push
loopne
adc
test
iret
iret
fimull
mov
and
and
cmp
add
into
sahf
cli
mov
xor
inc
sarb
loopne
lcall
dec
ljmp
jae
out
jmp
leave
mov
dec
pop
or
pusha
popa
mov
mov
or
cld
inc
cwtl
test
xor
push
xchg
pop
inc
ret
shll
mov
lea
lods
mov
push
xchg
cmp
push
jl
push
ja
stos
and
outsb
jle
shlb
jmp
xor
shrb
bound
jg
xor
ljmp
loopne
dec
loope
mov
clc
sbb
pusha
jmp
adc
pop
outsb
sub
cwtl
inc
dec
xchg
mov
loopne
and
mov
out
inc
mov
and
ret
aad
iret
addb
xchg
movsl
add
inc
sub
mov
xchg
cs
shl
jecxz
inc
sbb
rol
outsl
and
repnz
inc
adcb
mov
bts
inc
or
mov
mov
pop
lcall
add
dec
aad
stos
mov
cld
add
rcrb
dec
sub
inc
inc
call
shrl
inc
pop
jno
pop
jno
pusha
and
inc
inc
mov
xchg
scas
mov
scas
sub
add
pop
or
loope
add
ljmp
adcb
adc
in
nop
xor
je
dec
dec
mov
add
shlb
sbb
mov
pusha
inc
out
and
inc
outsl
lds
sbb
and
mov
mov
inc
jecxz
lea
xchg
sbb
inc
pusha
iret
fldenv
in
cmp
jle
push
outsb
inc
orl
adc
add
mov
inc
jnp
xchg
jnp
adc
inc
insb
pushf
mov
in
xlat
scas
inc
mov
pop
sbb
push
ret
test
shl
mov
nop
out
push
add
cwtl
add
roll
mov
add
sar
imul
lret
jo
cltd
out
addb
inc
ror
jne
rol
movsb
rolb
and
orw
ret
push
xchg
jae
pop
adc
outsl
loopne
mov
out
lret
jp
mov
int
mov
and
xchg
loopne
pusha
mov
mov
mov
mov
xchg
daa
jl
fisttpll
push
jl
addb
adc
mov
insl
rcrl
loopne
mov
rcl
cli
shrl
inc
or
mov
ds
dec
and
in
cli
add
sub
andb
mov
mov
dec
out
jg
jo
xchg
mov
mov
jmp
das
mov
add
ja
loope
shrb
inc
int
ret
sbb
and
mov
cmp
rolb
and
mov
sub
mov
call
xor
rorb
mov
into
cltd
notb
andb
or
mov
jge
cmp
lock
movsb
pusha
and
dec
in
sub
cmpb
jns
int3
jnp
repz
loopne
push
enter
movsl
rorl
addb
dec
bound
cmp
pusha
pusha
les
push
add
inc
mov
and
rcrb
inc
subb
xor
aaa
add
vmwrite
pop
ds
pop
fadd
sbb
aas
divl
add
andb
xchg
sahf
mov
lcall
mov
addb
lods
add
lds
sar
mov
ficoml
pop
cltd
sub
mov
into
pop
inc
sub
inc
cmpsl
cmp
loope
mov
pusha
pusha
andb
movsl
xchg
mov
mov
pusha
jmp
mov
push
mov
ja
push
andb
and
inc
loop
inc
mov
shlb
mov
dec
mov
xor
jbe
movsl
dec
jae
adc
mov
arpl
stos
rol
les
adc
inc
rclb
inc
cltd
je
jns
rcll
sub
fsubl
rcll
pusha
inc
lods
mov
in
out
scas
inc
push
lcall
daa
dec
adc
mov
sub
je
xor
inc
lods
pop
int3
sahf
popl
out
cmp
andl
das
iret
lods
loopne
out
fstpt
stos
inc
rcl
fstl
mov
lcall
dec
mov
lock
add
hlt
loopne,pn
into
mov
xchg
xor
data16
lret
cmp
dec
test
and
loopne
mov
ja
negl
rol
pop
mov
fs
lret
aaa
push
ja
xchg
cmp
out
mov
mov
jnp
loopne
test
rolb
adc
pusha
or
inc
pop
mov
push
jne
aam
fdivr
filds
rolb
pop
test
mov
lcall
loopne
andb
push
pop
ja
icebp
adc
pop
cmp
pushf
and
je
inc
add
xchg
movsl
sub
inc
inc
rcrl
push
imul
es
lret
out
and
add
lock
mov
pusha
sub
iret
dec
add
inc
mov
add
pop
insl
push
pop
pop
and
rcrb
sar
mov
repnz
and
ds
lods
mov
subb
shl
addb
sbb
in
scas
pusha
add
fdivl
shll
dec
shrb
lret
loopne
imull
pop
movb
and
loopne
push
and
aad
lret
andb
mov
push
movb
push
mov
cmpsl
add
add
ret
leave
jo
sub
jne
push
and
ror
push
add
mov
mov
xchg
cmp
inc
pusha
pushf
jno
sahf
inc
or
add
rol
jecxz
outsb
scas
lods
jmp
in
fiaddl
movsl
push
jns
loop
inc
mov
inc
pusha
xchg
mov
inc
inc
push
inc
and
shlb
and
and
xlat
mov
mov
loop
aas
loope
mov
shlb
adc
inc
xchg
data16
mov
xchg
cmp
int3
iret
popa
fisubrs
dec
inc
sbb
push
and
loopne
xchg
daa
pop
test
out
inc
and
jo
inc
out
and
insb
lret
pop
pusha
add
andb
andb
add
fdivp
rcl
into
or
add
std
daa
decl
adc
sub
jg
sbb
mov
add
aam
cmp
lret
cld
xchg
pusha
inc
pusha
and
jns
pop
incl
andb
jmp
mov
or
lret
inc
xor
setb
loopne
and
into
in
lods
std
mov
cli
mov
inc
add
insb
lret
jecxz
add
mov
add
pusha
sti
mov
movb
subb
mov
mov
and
out
push
cltd
flds
outsb
mov
mov
jmp
mov
push
mov
push
xchg
pusha
add
jl
repz
imul
mov
aad
scas
sbb
cs
xorb
inc
push
jbe
mov
loopne
in
pop
sub
mov
xchg
leave
ljmp
aad
mov
jl
addb
mov
mov
andb
cltd
jp
stos
imul
scas
inc
mov
sbb
xor
adc
dec
mov
jmp
xchg
mov
and
je
icebp
cmpl
sbb
push
xor
jns
push
je
popa
dec
pop
add
fcoms
loopne
xchg
dec
test
inc
sbb
loope
imul
sbb
xchg
rolb
mov
mov
add
in
xor
filds
mov
push
andb
mov
andb
xchg
lret
jecxz
or
cmpsl
xchg
sbb
cmp
mov
mov
fdivrs
sub
pusha
clc
xor
in
xchg
mov
adc
mov
bound
mov
pop
repz
out
adc
loope
pusha
cmpb
xor
out
sub
pusha
je
cmp
pop
test
jge
rol
jle
iret
call
outsb
xor
andb
add
mov
loopne
repnz
mov
lods
jge
std
cmpsb
and
mov
popa
inc
pop
cli
pop
push
aaa
ret
or
inc
sub
ja
aam
fimuls
mov
in
cmp
loopne
add
pusha
sbbl
inc
das
bt
test
push
jl
jmp
out
adc
or
loopne
cwtl
pop
and
mov
and
mov
inc
ficompl
fwait
push
mov
push
aaa
cmc
mov
push
bnd
gs
and
and
fwait
sbb
and
rolb
or
sarb
dec
out
inc
gs
pop
dec
and
push
iret
pop
jo
out
jmp
sub
inc
sbb
addb
mov
inc
popf
xor
add
add
adc
dec
xchg
gs
icebp
mov
cs
mov
add
jp
mov
or
inc
js
leave
rcll
inc
cmpsb
and
cmp
inc
mov
adc
adc
push
lds
mov
pop
arpl
mov
mov
loopne
fiadds
mov
ljmp
inc
xchg
dec
and
jmp
leave
xor
dec
cmp
cmp
jmp
ja
shll
ja
sub
add
or
jle
fidivl
fs
cltd
mov
cmp
cmp
sub
shlb
xchg
movsl
jp
mov
out
mov
push
into
idivb
inc
mov
cmc
jne
addr16
jbe
divl
incb
jmp
mov
shll
inc
cmovs
loopne
sbb
loopne
sahf
movsl
dec
popf
lds
pop
add
shlb
push
dec
jb
jae
jno
insl
inc
scas
inc
shl
and
int
add
loopne
mov
xor
cltd
sub
inc
data16
and
arpl
dec
andb
xchg
lods
sbb
xor
rolb
pusha
and
xor
dec
mov
addb
mov
adc
mov
loopne
imul
dec
call
pushf
cmpsb
inc
mov
and
lock
xchg
addb
insb
and
adcl
ror
add
inc
mov
out
fldl
jns
mov
push
mov
lahf
dec
loope
mov
xor
andl
adc
mov
shrb
pusha
add
subb
mov
shlb
or
lcall
xlat
gs
push
test
addb
imul
popf
jne
repnz
or
andb
rcrb
cmp
cmpsb
rolb
inc
loopne
ja
push
lret
or
addb
and
lret
shlb
add
popa
repnz
pop
popa
pop
inc
xchg
push
xchg
dec
cltd
mov
loopne
mov
call
leave
xchg
jae
and
bound
decb
sbb
out
out
rcl
int3
ljmp
ljmp
mov
sbb
pushf
adc
pusha
shrb
mov
aas
in
insl
sti
dec
push
and
mov
data16
lret
icebp
call
ljmp
aad
jmp
daa
in
and
jae
adc
mov
inc
pushf
js
push
addb
and
push
andb
push
add
lahf
gs
jle
sbb
mov
or
and
roll
add
mov
add
test
and
mov
push
rolb
and
add
lds
and
mov
jae
and
and
mov
xor
and
inc
xor
and
jge
icebp
lahf
add
pop
cmp
push
nop
pop
xchg
outsl
icebp
fcompl
or
adcb
jnp
jbe
imul
std
popf
and
and
sub
loopne
pop
xor
ds
ds
jo
out
push
das
stos
and
add
andl
mov
into
pop
clc
sbb
mov
mov
jmp
sub
jae
testb
addr16
mov
clc
mov
pop
test
orb
lret
sub
sbb
jbe
enter
clc
movsl
sbb
pop
xchg
sahf
fidivs
call
mov
iret
aas
add
rolb
cli
pop
xchg
jg
inc
inc
sti
sbb
add
mov
addb
jae
xchg
aas
scas
adc
jb
icebp
sub
sbbb
pusha
int3
in
ret
mov
mov
sbb
movswl
rcrl
cmp
stos
push
cmp
outsl
pop
xchg
cmp
pusha
xorb
jg
pop
lahf
and
adcb
test
js
adc
xor
cmpsl
add
aad
pushf
cmovbe
ss
mov
and
cmp
xor
das
clc
push
std
into
push
aas
inc
or
pusha
jns
fsubr
and
inc
pop
cmp
mov
mov
ror
inc
shlb
mov
test
loopne
xchg
fidivrs
aad
xchg
stc
ja
cmpsl
or
xor
jo
roll
out
addb
stos
pop
cmc
pushf
mov
addb
sub
popf
stos
inc
sub
xor
xchg
mulb
dec
jb
loopne
sub
bnd
push
cli
insb
pop
out
cmp
add
inc
xor
jnp
jg
mov
addb
mov
and
call
pop
pop
sbb
pop
test
and
in
pop
sub
andb
je
push
push
pusha
rorb
or
add
inc
inc
test
adcb
cmpsl
aam
cmp
andb
jge
jns
stc
into
lea
out
dec
and
and
into
dec
test
jge
shlb
mov
mov
dec
cmp
rorb
mov
sti
pop
xor
aas
push
jns
and
push
loope
and
loopne
xchg
xchg
ror
pop
test
shl
add
add
jo
outsb
sbb
xchg
in
cmc
adc
fsincos
mov
dec
dec
das
adc
pop
jae
lds
addb
cmp
aaa
sbbl
addb
hlt
fcmovnbe
sbb
cmpsl
jns
pusha
adc
adcl
mov
pop
pop
lock
and
mov
fs
stos
pusha
inc
rolb
addb
add
sbb
jns
inc
rolb
inc
fcomps
andb
in
scas
pushf
stc
jne
cmp
cmpsl
mov
dec
push
nop
inc
mov
scas
and
test
loopne
ds
mov
pusha
sbb
dec
sbb
pushf
lahf
xor
mov
addb
and
or
pop
icebp
movups
sarl
mov
orb
add
lcall
mov
mov
pusha
stos
inc
inc
cs
lahf
dec
filds
mov
mov
pusha
aas
lods
inc
and
mov
cmp
jl
mov
outsl
andb
iret
leave
jno
mov
loopne
jmp
push
inc
and
test
pop
sub
cmc
les
add
fmull
loopne
loopne
or
in
aad
sahf
mov
jbe
sub
mov
xchg
inc
out
aaa
mov
inc
mov
aam
dec
mov
stos
cmp
popf
das
xor
cmp
fistl
lock
in
push
push
push
xor
add
shrb
aad
pop
pop
insl
jnp
out
xlat
push
pop
sbb
rclb
sub
and
imul
and
fs
push
dec
rol
fcoml
paddsw
add
inc
loopne
inc
pusha
neg
mov
and
aaa
outsl
lea
push
cmpxchg
push
inc
pusha
aad
cld
xor
jae
fcomp
xor
xor
or
or
and
dec
push
stc
mov
fisttps
mov
cmp
test
in
movsb
and
add
loopne
sbb
and
and
mov
sbb
cmc
dec
xor
xor
jo
rorl
or
pushf
lock
test
dec
pop
test
sub
pusha
dec
popa
pop
mov
dec
fcompl
popa
fdivs
dec
dec
popa
adc
cmp
add
mov
enter
mov
adc
ljmp
sahf
out
dec
je
data16
and
das
outsb
adc
add
mov
cmc
mov
and
add
push
add
pusha
in
and
andb
mov
pusha
dec
or
pop
push
aas
pusha
and
hlt
adc
sub
pusha
lahf
sbbl
addr16
inc
dec
sahf
mov
cwtl
push
in
xchg
mov
out
push
in
cmpl
es
xchg
iret
sahf
sbb
shrl
adc
inc
loopne
fadds
adc
loopne
outsb
inc
es
addb
inc
gs
imul
mov
inc
andl
cmp
sar
into
dec
xchg
lahf
inc
lods
movsl
push
sti
mov
rcrb
pusha
scas
and
sbb
add
inc
sbb
xchg
push
jb
lock
inc
pop
xchg
mov
push
xorl
out
ret
xchg
dec
mov
add
mov
inc
dec
inc
sbb
rcrl
and
sub
and
mov
xlat
mov
xorb
add
push
inc
cmpsl
dec
mov
and
arpl
shll
outsb
pop
add
jo
jns
test
out
mov
mov
add
mov
pop
mov
pop
inc
ja
stc
xchg
push
addr16
outsb
push
push
jl
mov
and
and
test
mov
xchg
shlb
rolb
in
shlb
adc
gs
push
xchg
cli
into
mov
pusha
fcompl
fs
push
sub
push
test
add
test
pusha
loop
cmpsb
loopne
daa
cmp
andb
pusha
loopne
add
mov
cmp
xchg
add
rcll
mov
push
sar
cmp
mov
jmp
fadds
shlb
sahf
jns
in
aas
arpl
cwtl
push
sub
mov
pusha
pusha
cmpsb
pusha
and
xorl
out
or
loopne
jle
sub
inc
andl
loope
cmp
imul
jmp
mov
fnstsw
out
push
jb
in
loopne
sub
add
ficoms
pop
xchg
cmp
sbb
xor
arpl
popa
mov
lcall
add
test
imul
push
int
dec
xchg
mov
pusha
cmpb
sub
rclb
es
pusha
fisttpl
mov
lret
add
cld
xchg
sbb
add
addb
lret
inc
xchg
jle
and
pusha
cwtl
js
ret
rcrb
in
dec
fildll
data16
or
arpl
enter
fdivs
inc
aaa
enter
sub
mov
xlat
mov
rclb
shlb
in
xchg
into
adc
sti
cmp
push
push
decb
mov
shlb
rcrb
jge
int
rol
loopne
or
push
xor
and
in
xlat
fiaddl
call
pop
or
mov
jl
aam
xchg
mov
and
fimull
lahf
orl
imulb
loopne
fdivl
xchg
adc
mov
dec
pop
pop
pusha
inc
fldl
mov
arpl
jg
push
cmp
add
add
and
lods
or
mov
mov
push
fistps
inc
imul
test
clc
mov
insb
lea
mov
and
add
test
loopne
and
rclb
arpl
shlb
inc
inc
insl
in
fnstsw
idivb
pop
xor
rolb
je
and
pop
rol
xor
les
loope
push
jecxz
mov
aad
inc
outsb
repz
and
mov
scas
add
daa
out
inc
inc
add
xchg
mov
mov
and
jmp
ljmp
push
dec
je
add
add
pusha
aas
fcmovnb
sbb
pusha
inc
and
inc
and
stos
add
movsl
rolb
push
and
addb
cs
and
dec
jo
pop
test
inc
test
push
ljmp
push
jle
addb
leave
xor
loopne
mov
rorb
inc
mov
sahf
mov
fistpll
xchg
leave
jp
ficoms
out
pop
movsl
push
and
cmp
xchg
ret
bound
inc
in
xor
loopne
lods
and
rolb
push
por
cmp
into
loope
pop
lods
add
xor
xchg
andb
es
sub
or
pusha
je
mov
ret
jge
mov
mov
nop
mov
pushf
mov
cmp
inc
sub
shrb
pusha
mov
inc
or
xor
add
and
adc
das
scas
jle
mov
sahf
xor
fmulp
mov
add
inc
sti
mov
push
mov
shlb
rorl
mov
jae
fimuls
addb
sub
xchg
jns
aas
adc
inc
movsl
jg
stos
pusha
and
shlb
dec
ds
jg
fisttpl
jmp
pop
adc
in
cltd
sub
cmpsl
push
imul
and
aas
imul
hlt
cmpsb
inc
xorb
pop
jge
push
mov
sub
insl
stos
add
movd
mov
or
loopne
sti
pushf
fucomi
lahf
mov
push
scas
shlb
mov
mov
pop
inc
outsl
add
mov
loopne
cwtl
ret
clc
mov
jbe
sub
or
lcall
scas
loopne
push
out
mov
add
loopne
bound
cmp
andb
sarl
mov
subl
rcr
jb
dec
add
adc
cmpsb
mov
push
inc
add
sti
divb
mov
cltd
scas
fiadds
andb
mov
push
dec
ss
pusha
mov
in
loopne
adcl
fprem1
push
pop
sub
mov
sbb
push
iret
jecxz
pop
cmp
andb
cmp
cmpsb
pusha
shr
jg
xchg
insb
ja
icebp
daa
xor
inc
push
insl
pop
pop
lea
jae
jmp
arpl
and
loopne
sarb
adc
jbe
jmp
pop
pmaxub
add
rorb
push
sub
pusha
fsubrl
lahf
push
dec
mov
add
pop
add
mov
sarb
mov
jbe
inc
loopne
cmpsb
shlb
addb
inc
mov
addb
dec
sbb
cmp
repz
inc
jl
scas
inc
addb
sar
and
vphaddbd
loopne
mov
dec
pop
into
jl
in
xor
xor
adc
shlb
cmpsl
out
cwtl
pop
arpl
pop
outsl
cmpsl
in
mov
pop
addr16
cs
pusha
inc
mov
pusha
mov
and
lcall
mov
inc
sbb
andb
adc
aad
shlb
cmp
sbb
add
cmp
cmp
jne
inc
jmp
mov
add
leave
lret
or
xchg
leave
sub
andb
mov
pusha
mov
add
lret
addb
or
loopne
popa
lahf
out
mov
fucomip
nop
pushf
dec
jge
or
mov
sub
push
pusha
inc
pop
cwtl
adc
adc
push
loopne
mov
into
neg
adc
out
sub
xadd
adc
fs
jecxz
pop
in
shrb
loopne
mov
add
cmp
js
cmp
imul
sub
or
cmpb
mov
or
adc
cmp
ja
addb
inc
cmpb
pusha
mov
decl
in
inc
shl
cmp
hlt
mov
and
addb
add
adc
mov
in
pop
sub
sub
repz
add
inc
shl
lea
mov
add
dec
popf
pop
hlt
jb
shl
pop
fildll
mov
fwait
mov
fs
jg
imull
dec
pop
sbb
add
add
scas
andb
fildl
pop
mov
sbb
into
push
xchg
inc
sarb
add
mov
js
sbb
push
ret
add
push
sub
sarb
xor
mov
sbb
addb
jne
xchg
jp
mov
add
push
xchg
out
push
and
pusha
and
test
loopne
loopne
and
xor
lods
andb
fists
out
cld
stc
int
andb
rolb
lock
or
pusha
into
lcall
inc
les
mov
aad
inc
ds
cmp
loope
fdivrs
push
sbb
dec
xchg
leave
cmp
dec
test
inc
push
xor
scas
les
loopne
mov
inc
leave
out
call
movsb
loopne
jmp
pop
xchg
add
sarb
mov
loopne
jmp
mov
push
clc
xor
jbe
addl
outsb
mov
cmp
pop
in
ja
mov
and
gs
outsl
mov
sarb
int3
cld
ficoms
in
popl
or
and
aas
mov
mov
adc
or
loopne
push
pop
stos
pop
scas
inc
sbbb
aam
xchg
test
adcl
mov
arpl
jbe
inc
and
les
push
xor
or
inc
push
rol
mov
push
mov
lahf
pop
loop
xor
adc
inc
leave
cli
jo
mov
pusha
xchg
or
int3
popa
mov
lret
dec
fisubrl
add
loop
and
and
pusha
mov
mov
and
push
loopne
jmp
push
int3
xor
fs
sbb
jbe
repz
xchg
mov
jne
in
aam
mov
sbb
js
test
loopne
xchg
leave
push
outsb
dec
and
xchg
aas
addb
gs
push
add
inc
hlt
cmpsb
mov
sahf
mov
xor
shlb
ljmp
push
loopne
or
mov
enter
outsb
mov
jmp
xchg
dec
cltd
sub
sub
rcr
push
inc
mov
ds
pop
outsl
sub
pusha
cwtl
je
rolb
cmp
testl
psadbw
flds
push
push
into
aas
inc
pop
jle
das
rorl
shlb
mov
and
repz
add
dec
push
mov
mov
push
into
pop
push
outsl
jne
neg
mov
cld
int3
fmulp
ds
mov
rolb
add
jns
push
xchg
loopne
out
cwtl
lcall
andb
fwait
jmp
pusha
sar
add
cmp
shl
addb
cmp
fstpl
rcl
insl
mov
jb
shlb
mov
sbb
andb
push
sahf
jo
sbbl
inc
xchg
in
mull
je
roll
andb
dec
insl
xor
mov
andb
loope
mov
das
cmp
pusha
xor
lahf
push
sti
ds
xor
pop
adc
lahf
cmp
jl
add
mov
ret
out
movhps
add
popf
pop
int
jle
dec
push
inc
inc
jno,pt
jp
inc
mov
lea
xor
pop
lret
fnstsw
mov
xchg
mov
fdivs
xchg
adc
mov
and
pusha
xchg
mov
andb
imull
movsb
rolb
aad
inc
jmp
add
call
inc
repz
ljmp
iret
bound
mov
push
lahf
push
pusha
inc
sub
or
frstor
add
test
pusha
frstor
sub
mov
dec
insl
add
inc
adc
xor
jno
cmp
or
mov
mov
inc
jecxz
pusha
dec
dec
jmp
and
inc
push
gs
xchg
dec
mov
loopne
push
inc
sahf
imul
loopne
sub
imul
les
fcmovb
popf
push
scas
int
xor
or
mov
sub
stc
das
rcl
pushf
mov
jbe
ds
cmpb
mov
mov
mov
rolb
add
loopne
pop
stos
nop
pop
lret
xlat
aad
mov
test
push
mov
ljmp
pusha
loopne
and
pusha
pusha
fsubs
pusha
pop
repz
dec
jno
sub
and
add
mov
or
adc
pop
adc
mov
out
sbb
ret
adc
pusha
adcb
dec
xchg
ljmp
stc
leave
ret
jno
test
dec
fistps
xor
mov
lock
mov
loope
aaa
and
cwtl
mov
ja
or
push
aaa
dec
sbb
and
pusha
cmpsl
pop
add
jl
jb
mov
push
out
mulb
out
mov
loopne
insb
mov
xor
mov
fwait
insb
idivl
cld
test
rolb
inc
movsl
mov
out
int3
xchg
clc
push
adc
loopne
dec
bound
hlt
pop
mov
loop
pusha
sbbb
fcompl
cld
xchg
mov
pop
arpl
cmpsl
add
pusha
movsb
add
xchg
cmp
pop
jmp
scas
fs
add
add
hlt
pmaxub
ret
push
push
test
pusha
xor
pop
pop
lret
das
and
loop
fidivs
popa
or
and
mov
pusha
loopne
pop
xor
fwait
jns
mov
ja
int
movsb
mov
add
pop
pushl
inc
shl
xor
mov
stos
outsb
mov
mov
sbb
out
cmc
mov
push
mov
xchg
push
dec
nop
test
ja
xchg
fisubs
xor
addb
push
mov
bound
xchg
cwtl
dec
mov
inc
rolb
sar
lock
pop
inc
lcall
popa
adc
lock
mov
add
cmp
sub
add
and
stc
addr16
sbb
pusha
and
jnp
lret
sahf
pop
or
jecxz
pop
sub
xchg
scas
inc
pusha
xchg
adc
pop
cmp
shll
loope
push
add
add
or
call
rcll
loop
addb
jmp
scas
outsl
dec
lahf
dec
int
mov
dec
in
nop
hlt
sbb
mov
sub
adc
sbb
pusha
cmp
rolb
cmp
jl
scas
add
pop
or
inc
rcrl
cmp
mov
ror
scas
fsubs
rolb
cmc
inc
hlt
in
das
sbb
cmp
in
addr16
and
aad
xlat
and
loopne
pusha
and
mov
pop
jmp
add
loopne
xor
xchg
inc
sbb
inc
scas
push
or
outsb
xor
lock
mul
addb
mov
inc
xor
repz
push
mov
sbb
clc
cmp
lods
inc
loopne
pop
cwtl
into
xlat
aas
incb
std
jl
xchg
fdivl
jno
repz
fisubrs
rolb
loopne,pn
or
js
inc
loopne
and
adc
pop
adc
adc
out
xlat
aam
in
jp
sub
inc
mov
adc
push
test
xor
cmp
test
push
loopne
dec
fsubrp
or
add
pusha
xchg
xchg
jecxz
pusha
inc
cltd
sbb
das
lea
cmp
cltd
scas
sbb
xchg
xchg
call
mov
sbbb
unpckhps
add
xchg
mov
cltd
test
mov
imul
and
add
xchg
dec
das
pushf
push
ret
and
leave
push
in
leave
add
push
inc
sbb
sbb
mov
and
jno
aaa
cmp
ljmp
add
pop
add
pop
jmp
nop
aas
lds
pop
jecxz
test
and
lahf
aas
mov
out
andb
adc
or
jge
out
sub
add
pop
aam
jne
jecxz
sub
cmpsl
std
adc
sbb
loope
mov
sbb
adc
sahf
xchg
cmp
roll
sub
out
dec
lds
loopne
inc
pusha
test
inc
jne
mov
sbb
ret
out
popa
fcomps
inc
mov
push
and
xor
lods
add
add
inc
std
push
sbb
dec
inc
lods
fs
imul
repnz
in
add
inc
clc
cmp
sbb
inc
enter
mov
pusha
rolb
orb
gs
jo
jbe
test
ret
inc
push
pop
rorl
mov
cmp
mov
ds
or
pusha
dec
cld
mov
rol
mov
jl
sub
add
xchg
fmul
inc
in
pop
cmc
jge
outsb
fwait
jo
cltd
movsb
pusha
mov
call
scas
xchg
mov
jnp
dec
in
jo
cltd
repnz
fidivrs
mov
cwtl
gs
jno
aaa
mov
rol
ret
push
push
loopne
ror
push
lcall
inc
imul
adc
and
shll
add
mov
pusha
add
sbb
pop
sub
xchg
inc
repnz
loop
shlb
addb
mov
mov
mov
hlt
andb
cmp
xor
pusha
sbb
add
inc
dec
aas
xchg
push
xlat
push
sub
add
notl
lock
add
dec
sub
loopne
mov
mov
loopne
inc
sub
andb
pusha
add
jecxz
subl
mov
adc
arpl
mov
outsl
popa
pushf
imul
inc
test
pop
lcall
sar
insl
js
insl
int
loop
push
stos
xlat
inc
and
xchg
loop
xchg
pop
dec
bound
shl
inc
jno
mov
call
mov
rol
imul
add
add
hlt
insb
repnz
repz
or
mov
imul
mov
repz
lahf
repnz
cli
mov
loopne
cmp
cmc
aad
push
pop
push
adc
loopne
push
add
hlt
test
jp
and
pop
pop
cmpsl
enterw
leave
popa
aad
add
xchg
stos
add
rol
add
sbb
jg
dec
xchg
out
dec
lahf
pop
jb
xchg
add
lock
fisttpl
andb
xor
jle
rolb
daa
dec
or
iret
js
add
outsb
sbb
repz
nop
pop
bound
jle
cwtl
addb
cmp
test
repz
std
cld
test
orb
into
jae
or
cmc
cmp
push
aad
stos
pop
stos
dec
das
adcl
adc
andb
cld
jmp
and
or
add
dec
sub
push
push
andb
shlb
icebp
xchg
pushf
shrb
push
andb
adc
jae
shl
outsb
mov
das
fildl
rolb
mov
push
repnz
gs
and
cwtl
movsl
cmp
and
add
fsubrl
fcmovb
mov
loopne
adc
andb
lods
pusha
inc
dec
jecxz
rolb
fbstp
fadds
pusha
or
mov
or
mov
and
cli
ret
andb
sub
stos
inc
xorb
xor
andb
shrl
and
and
pop
cmp
and
mov
cs
rcrb
mov
into
jg
xchg
push
dec
jecxz
or
loopne
add
mov
ret
cmp
sub
pusha
mov
test
xor
testl
mov
leave
out
and
dec
cli
shrb
push
addb
test
push
mov
pop
or
rorb
aam
lods
loopne
sbb
xchg
cld
adc
aaa
push
fwait
nop
mov
inc
cmp
icebp
lahf
cmp
call
pusha
pusha
jnp
lods
dec
xchg
cmpsl
and
add
add
subb
inc
pusha
mov
or
rclb
in
add
add
es
loopne
imul
and
inc
dec
ds
mov
mov
jno
mov
les
mov
addr16
mov
push
jne
mov
adc
and
or
cmpsb
andb
cmp
jg
rclb
inc
mov
cld
out
ljmp
xor
xchg
fadds
sub
rolb
add
dec
xchg
push
ret
xor
fldenv
sub
jl
push
mov
push
outsl
push
out
lret
xor
sub
imul
xorl
or
inc
mov
dec
mov
xchg
addr16
or
add
mov
inc
and
pop
mov
jmp
push
mov
dec
inc
test
repz
shlb
fidivrl
add
ja
ret
pop
mov
and
mov
sbb
lret
pop
out
lahf
loopne,pn
fucom
adc
and
cmp
cmp
mov
rcr
das
add
add
or
inc
leave
inc
lret
pusha
mov
mov
xor
sti
mov
cs
add
lret
xchg
shrl
in
xor
imul
cltd
addb
xor
ret
bound
loopne
sbb
mov
inc
jns
cs
adcb
ss
arpl
add
and
and
push
xchg
add
and
and
lock
fwait
fcoml
jnp
inc
bound
xor
sbb
addb
or
inc
in
hlt
lds
sbb
imul
xor
push
inc
ljmp
jne
flds
mov
inc
dec
push
andl
insl
lret
xor
lods
dec
push
adc
mov
mov
push
lods
test
mov
push
sbb
adc
mov
push
sub
inc
ljmp
mov
out
add
add
cmpsb
inc
pusha
cmp
push
smsw
sub
loopne
cli
xor
shlb
addb
jle
in
sarb
lahf
dec
jmp
fistpl
lds
inc
cmpsb
pusha
add
fmul
aad
sbb
mov
out
push
mov
or
ss
movsl
pop
add
add
mov
and
sbb
lods
andb
xchg
cmpsl
rcrb
addb
adc
and
inc
push
mov
sub
clc
mov
pusha
jge
shlb
inc
and
sahf
and
sbb
xchg
in
scas
pusha
pusha
insb
and
outsb
pop
hlt
mov
loopne
and
mov
mov
add
mov
xlat
dec
mov
push
sub
mov
addr16
ucomiss
and
push
test
and
pusha
sbbb
mov
test
pusha
mov
xor
adc
arpl
jg
loop
xchg
lret
in
sub
adc
insb
dec
movsb
mov
mov
add
and
dec
adc
mov
inc
pushf
sbb
pop
imul
add
repnz
imul
mov
divb
pop
add
and
ljmp
addb
cmp
lea
inc
pop
sahf
add
cld
mov
fnstcw
inc
mov
insl
pusha
and
and
inc
int3
aad
movsl
pop
dec
inc
and
push
xchg
dec
push
cmpsb
add
mov
jge
enter
or
add
inc
sub
mov
outsb
imul
enter
dec
inc
add
pusha
rcrb
inc
add
shr
repz
pop
sub
pusha
aad
mov
dec
or
loopne
jle
call
in
mov
lcall
andb
dec
nop
sbb
stos
mov
pop
mov
push
adc
repz
filds
add
repnz
aaa
lret
cmc
je
mov
iret
mov
ror
jecxz
test
scas
xor
out
sub
cmc
aam
cmpsl
lds
xchg
scas
andb
add
imul
jecxz
aas
cmp
jl
inc
sbb
push
sub
pusha
or
and
sbb
sub
mov
fdivrs
aaa
bound
std
test
andb
add
repnz
xchg
movsl
and
mov
inc
data16
lcall
inc
into
insl
aam
xchg
rcrl
mov
lods
mov
movsb
shlb
test
add
test
loopne
pusha
orb
inc
pusha
divb
jo
vmread
xor
mov
pop
adc
mov
and
and
and
jle
andb
or
rolb
and
je
add
add
fldt
in
xchg
test
inc
loop
loopne
pop
iret
jb
jnp
pop
int
test
movsl
in
icebp
das
dec
int
loopne
cmpl
gs
shll
loopne
sub
mov
test
loopne
inc
and
mov
xchg
mov
movsb
mov
add
add
mov
mov
cmp
and
test
mov
rcl
shlb
add
into
mov
mov
jmp
sbb
or
jge
mov
push
rclb
xor
sbbb
loope
add
and
cld
pop
xlat
cmp
dec
jno
nopl
cli
dec
mov
pusha
sub
inc
imul
loop
ss
filds
xlat
imull
hlt
loopne
jmp
adc
pop
push
test
lcall
daa
aas
xor
inc
inc
fadd
sbb
add
inc
mov
shlb
push
call
std
mov
pushf
add
popf
and
xchg
cli
mov
movsb
add
sub
push
andb
loopne
movsb
addb
jne
dec
out
inc
jne
inc
loopne
icebp
mov
mov
into
mov
and
stos
mov
shlb
inc
iret
je
rolb
jmp
xchg
adc
scas
pusha
andb
adc
adc
mov
mov
pusha
push
loop
leave
jne
shll
inc
mov
sub
pusha
add
add
xchg
lods
andb
loopne
dec
aas
arpl
ret
lret
add
mov
loop
push
fcoml
push
mov
sar
jg
andb
adc
js
pusha
loopne
pop
jg
or
andb
add
pusha
pusha
decl
es
int3
inc
daa
xchg
imul
mov
add
iret
cs
sub
negb
mov
xor
fwait
dec
imul
push
mov
pushf
mov
and
sbb
movhps
jmp
mov
push
gs
inc
mov
add
add
and
dec
cmp
sarb
pop
lret
lcall
jge
andb
les
push
aaa
adc
repz
inc
sbb
mulb
and
pop
pop
pop
bound
inc
lret
sbb
nop
movsl
mov
popl
inc
loopne
pop
loope
lods
ljmp
addr16
loopne
test
aaa
jmp
sarb
repz
xor
dec
adc
mov
push
rolb
outsb
and
subb
out
ret
mov
inc
shrb
jbe
adc
lahf
adc
mov
fsts
dec
xor
adc
hlt
popa
lods
and
sbb
movsl
movsl
or
xor
je
mov
inc
in
imul
shll
inc
xor
les
cltd
xchg
dec
cld
stos
lcall
and
mov
cmp
testl
push
lods
loopne
xor
add
enter
jmp
mov
add
xor
sub
rorl
test
lea
jae
cld
test
jle
xlat
xchg
fldl
dec
ss
mov
sub
mov
leave
test
and
out
mul
jl
jno
mov
out
and
sbb
sub
out
xchg
into
pushf
pop
mov
pop
bound
stos
or
inc
fisubrl
jbe,pt
add
cltd
dec
mov
sahf
dec
xchg
arpl
inc
mov
and
popa
scas
jbe
call
push
mov
cmpb
aas
xchg
push
pusha
and
nop
push
mov
fcompl
outsl
xchg
xchg
fdiv
cmc
mov
test
loopne
inc
add
imul
shll
sti
dec
pop
mov
rolb
popf
arpl
int3
lods
pusha
loopne
or
dec
test
stc
in
pop
cli
xchg
xor
inc
loopne
into
adc
sbb
mov
push
mov
clc
xchg
cmc
ficomps
add
stos
or
pusha
inc
mov
jmp
xor
fsubrs
dec
jmp
adcl
adc
loop
cmpsl
xlat
mov
dec
sahf
into
sub
rclb
push
mov
andb
lods
add
sti
test
rorb
rcr
rcrl
cmp
add
jae
loopne
adc
add
pusha
pop
imul
orb
add
addr16
sub
and
mov
inc
int
push
mov
xchg
gs
data16
sbb
add
in
sbb
loopne
cmp
out
aam
fisubl
adc
es
mov
in
adc
push
inc
sbb
addb
pop
add
arpl
dec
inc
mov
loopne
jle
mov
pop
xor
repnz
popf
and
sub
pop
mov
leave
addb
lret
lds
xchg
and
lds
add
pop
cmp
adc
out
stos
xor
xor
dec
jnp
pusha
addb
add
pop
scas
pusha
shrb
add
sbb
sti
inc
rorl
pusha
add
inc
in
sbb
push
dec
xor
add
jb
int
push
loopne
ret
dec
ja
movzbl
out
add
sbbb
mov
add
into
xor
lods
sbb
sarl
fsubrs
loopne
and
mov
mov
push
hlt
js
nop
cmpsl
sub
add
push
dec
and
fists
add
fdivs
shlb
fsub
fwait
jmp
mov
fucom
insl
gs
shr
mov
xchg
rorl
dec
fisttpl
pusha
inc
push
pop
fdiv
fdivrs
mov
pusha
pusha
pop
and
adc
dec
mov
jge
add
popf
and
fs
jg
aam
and
incl
add
aas
or
sarb
sub
sub
dec
js
jmp
andb
mov
cmp
xlat
in
mov
shrb
pusha
xor
push
jle
dec
fisubl
jns
cmp
pop
stos
mov
or
pusha
xor
mov
in
stc
jnp
movl
cmp
out
push
dec
xchg
in
clc
loop
enter
pusha
addr16
add
bound
movsl
xor
inc
sbb
test
and
cmp
xchg
jb
add
mull
pop
insl
dec
cs
push
sub
pop
cmp
and
fimull
addb
push
pop
call
pop
mov
enter
addb
xchg
les
push
jmp
enter
cli
cwtl
popf
or
inc
sarl
pushf
push
cltd
fildl
add
and
add
add
mov
fucomi
cltd
sub
push
subl
or
roll
cmpsb
add
aam
xlat
pop
int
mov
data16
pusha
xor
sub
jae
or
and
mov
cmp
jbe,pt
cwtl
push
lahf
icebp
mov
mov
add
jno
loope
xor
mov
in
or
sarb
mov
shlb
sti
jle
fsubrs
and
adc
rolb
xchg
push
jg
insl
adc
cmp
arpl
push
push
add
in
jo
push
and
and
std
mov
mov
pusha
and
and
movl
test
loopne
test
cmp
jnp
inc
push
xor
pushf
jne
cmpl
outsb
lds
jge
cmp
jg
inc
mov
push
cmpsb
mov
xchg
mov
hlt
xchg
mov
fsubrs
mov
pusha
mov
sbb
xor
cmp
mov
aas
fsub
pushf
pop
sbb
push
loope
loopne
andb
pop
call
and
ja
push
mov
mov
mov
pusha
shr
dec
cbtw
xchg
push
adc
movsb
pusha
mov
pushf
xor
adc
imul
lods
or
and
cmpsb
shlb
and
in
clc
mov
enter
loopne
mull
in
push
dec
outsl
jmp
std
add
mov
loopne
pop
mov
lea
sub
loopne
sub
xor
or
pop
sbb
add
shrb
sub
add
jbe
mov
scas
arpl
fldenv
pop
sbb
xor
test
xor
popa
push
xchg
popa
rcrl
addb
push
bound
dec
pop
cmpsl
sbb
push
loopne
std
std
cmc
pop
dec
xor
ret
hlt
into
lods
hlt
scas
out
add
cmp
movsb
andb
and
cmp
push
mov
adc
ds
push
in
push
inc
inc
jp
popf
lods
pusha
pusha
pop
jb
cltd
les
and
add
mov
xlat
push
push
or
loopne
outsb
or
mov
cmpsb
inc
loopne
jecxz
pusha
addb
inc
loopne
aam
sub
mov
and
lret
aas
jl
fcomps
sbb
test
addb
sbb
out
ficoml
jp
pusha
mov
sbbb
inc
out
xchg
insl
movnti
sahf
daa
sbb
pop
add
jns
push
dec
lahf
push
pop
addb
add
rorb
cwtl
les
add
and
cmpsl
outsb
cmpsl
jbe
xor
dec
and
loopne
xchg
loopne
fnsave
pop
and
inc
out
push
cld
stos
int
lods
pop
andl
and
outsb
add
jle
push
pop
push
cmp
cmpsl
and
rolb
adc
jb
fisttpl
adc
loopne
shrl
adc
and
aam
shlb
cltd
mov
sbb
sub
mov
dec
push
xor
xchg
das
idivl
mov
push
pop
in
idivb
in
mov
shlb
add
int
xor
inc
sar
andb
mov
loopne
sbb
pop
movsl
test
push
fcoml
scas
and
in
xchg
push
add
add
fstpl
add
inc
imul
addr16
add
pop
push
mov
push
mov
shlb
xor
nop
repz
push
lret
sub
addb
or
pusha
imul
into
and
cmpsb
addb
xchg
or
cmp
push
es
add
add
push
loopne
or
movsb
pusha
sarb
mov
push
test
inc
mov
push
clc
imul
and
ret
mov
cmp
ja
push
inc
pusha
jge
inc
add
pusha
loopne
sti
mov
inc
icebp
adc
add
rolb
out
sahf
jmp
cmp
mov
jle
lcall
xchg
loope
mov
icebp
mov
mov
dec
mull
or
arpl
shlb
scas
pusha
add
mov
sub
pusha
and
aaa
andb
cld
adc
inc
add
pop
das
sub
mov
mov
loopne
push
jle
ret
mov
paddq
inc
in
push
stos
mov
call
inc
repz
shll
rol
nop
dec
cmc
repz
fsubr
fwait
cmpsl
lret
adc
sti
aas
pusha
push
in
das
repnz
cmpb
mov
xor
add
and
xchg
pop
pop
cmp
add
and
and
pop
mov
andb
ljmp
shll
sbbb
xlat
mov
sbb
cs
push
push
jo
xlat
arpl
loopne
sbb
or
mov
or
hlt
lods
outsl
shll
andb
lcall
rolb
or
and
pop
js
mov
rolb
leave
or
xorb
pop
pop
xchg
sub
loopne
cmpsb
mov
and
loop
aas
testb
push
sbb
mov
cltd
lods
bound
shlb
in
out
dec
and
addb
hlt
lcall
xor
mov
pop
cltd
test
and
and
cmp
mov
jnp
loop
sbb
push
in
adc
push
xchg
aam
cli
daa
add
addb
mov
addr16
in
add
add
out
push
mov
or
rolb
push
outsb
sbb
push
and
mov
sub
add
enter
repz
sbb
out
pop
or
jnp
and
xor
jnp
loopne
nop
setb
adc
lds
xor
xchg
xor
movsl
es
pop
push
jns
mov
inc
cli
xor
in
pop
das
or
cmc
push
mov
call
and
add
jmp
adc
int
aaa
sub
push
or
rorb
les
sbb
rclb
and
es
jmp
push
popf
xchg
mov
and
mov
test
sub
mov
and
and
inc
add
pusha
and
pop
adc
aad
addb
sub
sbb
ja
sarb
push
loopne
mov
shrb
add
cwtl
jle
sbb
add
in
pusha
inc
por
mov
push
xor
movsb
loopne
test
loopne
pop
bound
popf
sbb
int3
in
cli
daa
outsl
xchg
repz
call
ficompl
cltd
int
jnp
scas
inc
loopne
fdivl
test
aas
ja
cmp
push
test
pusha
ficoml
sub
add
fwait
adc
hlt
test
test
orb
jge
rolb
cld
sar
cmp
sub
shlb
dec
inc
or
xchg
xchg
pop
inc
popf
fstps
mov
and
imul
pusha
rcl
push
loopne
xchg
pop
jnp
cmp
and
jb
mov
mov
inc
stc
sbb
aaa
inc
push
inc
jae
add
mov
mov
mov
int3
sti
or
and
jae
push
mov
pop
scas
mov
in
dec
negb
mov
pop
xor
testb
mov
xchg
bound
push
push
push
mov
lods
add
andb
pop
mov
mov
mov
stos
insb
lcall
sbb
test
and
gs
adc
mov
add
stos
and
dec
jb
mov
addb
leave
fadds
add
mov
sbb
mov
add
in
jb
pop
xor
cld
test
cld
xlat
enter
test
mov
and
gs
scas
insb
pop
stc
repz
insb
dec
mov
and
xchg
in
clc
lock
ret
push
inc
add
pop
xchg
or
jnp
fwait
mov
in
shll
shlb
mov
or
scas
loopne
aam
and
mov
divl
out
inc
pusha
sub
mov
jb
cmc
or
pusha
jnp
cli
adc
sbb
inc
cltd
mov
loope
enter
or
adc
xchg
pop
mov
sub
or
mov
pusha
insb
negb
push
std
cwtl
inc
imul
test
mov
popl
popa
lods
jno
fstl
test
jecxz
sub
cmp
mov
add
xchg
movsl
aaa
dec
xchg
and
xor
or
add
xchg
add
loopne
jb
daa
fnsave
lods
xchg
cmp
mov
add
mov
rol
mov
inc
add
jnp
outsl
outsb
mov
dec
and
js
jae
mov
test
nop
inc
push
std
push
addb
and
push
imulb
out
std
push
clc
movsb
and
cld
adcl
add
inc
out
addb
and
mov
mov
add
loope
repnz
xchg
mov
stc
in
stos
dec
jb
mov
js
xlat
int
andb
mov
daa
lea
add
out
push
mov
out
cld
xchg
leave
into
cmp
push
sub
mov
xchg
lods
stc
fistpll
mov
shl
or
add
cmp
adc
and
fildl
mov
faddl
inc
loopne
mov
mov
add
mov
pusha
mov
dec
pop
inc
packuswb
pop
pop
mov
sub
mov
dec
and
jb
xor
loope
push
ds
cld
add
std
into
ss
cs
loopne
loopne
jbe
imul
andb
mov
cld
cli
mov
pushf
addb
fcomps
inc
add
add
rol
dec
std
popl
mov
aam
push
repz
pop
shrl
mov
pusha
sub
rol
out
pusha
add
inc
shl
jae
bound
adcl
sbb
mov
pusha
adcb
loop
mov
rolb
xchg
repz
and
mov
test
or
and
sbb
cmc
stos
rolb
mov
and
mov
movsb
inc
and
pop
add
sub
push
faddl
mov
inc
inc
inc
popa
popa
in
popf
fsubl
aaa
shlb
dec
mov
imul
aas
in
hlt
mov
xchg
cmp
jbe
hlt
mov
and
adc
add
xchg
dec
xor
sub
and
mov
jb
in
arpl
rol
push
addb
jb
sbb
inc
jae
xchg
into
adc
sub
xor
sub
add
sub
inc
inc
push
cmp
loopne
in
mov
push
sahf
jmp
divl
push
sbb
addb
add
dec
addb
hlt
pop
dec
mov
loopne
aas
or
xchg
in
push
pop
mov
and
jno
aas
sbb
loope
adc
loopne,pn
icebp
inc
mov
cld
inc
fisubl
sarl
mov
arpl
push
imul
repz
mov
test
xor
and
stos
xchg
sbbb
xchg
pop
pop
sub
add
pusha
push
das
cmc
pop
inc
fisttpll
pushf
sub
pusha
imul
in
rolb
mov
inc
cld
aaa
add
adcw
lock
xchg
push
addb
adc
pop
mov
mov
loop
repz
and
lcall
lods
inc
aas
hlt
dec
or
cwtl
mov
sbb
pop
bound
rorb
inc
inc
mov
outsl
cld
sbb
lahf
fcomip
fisubrl
or
arpl
test
aad
in
jecxz
pusha
inc
sahf
push
xchg
and
arpl
rorb
arpl
jp
push
xchg
insb
dec
loope
popa
or
sbb
rorl
rolb
lds
inc
subb
mov
inc
and
inc
push
in
popf
xor
daa
mov
popf
jle
and
loope
mov
mov
add
inc
mov
bound
and
add
pusha
inc
mov
enter
adc
ret
or
cmp
fisubs
cwtl
cmp
dec
adc
shrl
fs
mov
push
aas
lcall
dec
add
popf
lock
and
mov
int3
addb
and
clc
dec
mov
pusha
imul
mov
in
and
and
loopne
les
mov
add
sahf
add
and
and
sbb
andb
addb
stos
adc
popa
push
ja
stos
mov
push
inc
inc
imul
mov
pusha
mov
jo
add
and
lock
or
adc
loopne
scas
and
jb
mov
jae
aad
lods
pusha
and
push
fnsave
lahf
scas
rol
jae
sbb
mov
inc
dec
jp
mov
rcrb
mov
mov
adc
and
shl
shll
mov
rcl
test
in
shll
inc
push
add
mov
and
dec
mov
movsb
and
andb
mov
push
mov
pusha
add
xor
lret
xchg
loope
jb
scas
ss
lret
push
and
rorb
pop
mov
inc
xchg
aas
in
inc
inc
test
sub
rorb
sub
add
inc
xchg
clc
xchg
addb
test
loopne
inc
in
repnz
and
shrl
insl
jecxz
add
loopne
ret
in
xchg
dec
popa
std
mov
out
in
scas
and
lock
scas
pusha
loopne
rcrb
pusha
shrb
xor
mov
mov
mov
icebp
and
shlb
xorb
push
or
add
sarl
sahf
jmp
lret
push
stos
dec
out
sbb
movswl
aas
and
shlb
mov
add
and
adc
gs
lods
rolb
sub
jecxz
sbb
inc
mov
and
loopne
push
mov
mov
adc
outsl
lret
adc
shlb
je
movsb
and
ret
pcmpeqd
ret
lea
pusha
add
and
push
cltd
push
int3
dec
mov
ja
fisubrl
pusha
loopne
ret
xchg
shll
lods
and
sbb
add
mov
addr16
aad
mov
cltd
dec
bound
pusha
subb
push
mov
cmp
push
iret
adc
andb
cltd
clc
mov
in
addb
xor
sbb
mov
testl
cmp
loope
jle
sbb
repnz
repz
pop
shrb
in
rcr
fidivrl
dec
sbb
push
cmp
add
loopne
push
cmpsb
and
in
jb
loopne,pn
mov
lock
lahf
pop
fstpt
pusha
pusha
jl
ficomps
mov
jg
negl
inc
sbbb
dec
push
mov
test
add
in
mov
push
mov
inc
xor
out
nop
mov
pop
mov
mov
pop
jge
les
adc
inc
xchg
es
in
jne
jnp
xor
xchg
push
enter
mov
cltd
popa
sub
cmc
rcl
sbb
lea
xor
ror
stos
lods
push
mov
mov
mov
pop
ja
cmp
ljmp
sarl
lds
mov
adc
xor
icebp
pushf
mov
and
add
test
cmp
sbb
das
data16
adc
sarl
and
cld
jbe
inc
inc
es
xor
jmp
pop
rorb
loopne
xor
out
lds
out
incl
mov
and
movsb
add
dec
dec
lock
iret
scas
xor
std
jne
push
loopne
lods
and
push
cmpsb
add
jmp
pop
cmc
cmp
dec
nop
adc
fdivs
sarl
cmp
jle
icebp
jns
cs
inc
popf
out
adc
enter
mov
mov
call
test
or
mov
dec
outsl
mov
and
shl
push
xchg
sahf
mov
xor
mov
mov
gs
xchg
sub
bound
push
mov
lods
in
ljmp
cld
setle
rolb
sub
ret
sti
cli
iret
int
loope
mov
andb
out
rcr
sub
cmp
push
scas
std
outsb
andb
adc
inc
add
sub
inc
mov
cmpl
in
jp
test
cmp
xor
cwtl
fidivs
cmp
ss
cmpsb
inc
inc
mov
mov
loopne
out
xacquire
add
mov
nop
lahf
mov
jo
pop
cwtl
mov
and
rolb
mov
pop
jle
fsubrp
fcomps
lcall
jne
cmovl
loopne
loopne
inc
aam
sbb
rorl
add
rcll
push
into
add
stos
loopne
inc
cmp
rorl
xchg
nop
xor
mov
popf
push
mov
xchg
mov
outsl
ss
fstps
rolb
scas
mov
out
loop
add
xlat
addr16
icebp
push
mov
mov
addr16
lahf
cmp
fldenv
and
mov
int
cli
stc
bound
jb
aas
movsb
inc
and
push
xor
fdivl
dec
jp
add
sbb
mov
pop
negb
sahf
test
loopne
rorb
pusha
mov
mov
mov
pop
call
mov
ds
clc
jns
aas
push
push
pusha
es
pusha
mov
lret
fldl
add
jmp
mov
push
add
andl
je
jmp
int3
cmp
jo
mov
xchg
inc
ds
and
negb
jne
enter
std
les
pop
sbb
mov
sbb
mov
sbb
inc
jge
mov
lock
js
mov
jno
add
inc
das
adc
sbb
test
add
sub
cmp
ja
fwait
push
lcall
ljmp
xor
pusha
lcall
adc
lock
sti
repnz
jb
mov
addb
add
loopne
inc
push
push
xchg
ret
cmp
ljmp
mov
sahf
lret
jnp
lcall
or
rolb
and
inc
ret
xor
mov
jb
mov
shll
test
push
and
arpl
roll
pusha
pusha
ds
out
adc
sbb
lahf
ss
sbb
lfs
inc
adc
lea
pop
inc
sub
pusha
loopne
sbb
aaa
sub
cmpb
mov
push
inc
ror
std
ljmp
das
jmp
add
inc
and
mov
dec
mov
incb
mov
cmp
loopne
ja,pt
popf
inc
lock
xor
pusha
loopne
push
decl
sbb
out
lret
les
pusha
rol
lods
add
jmp
and
ret
add
mov
or
cli
aaa
incl
fisttpll
popf
insb
jle
cmp
adc
out
jae
cmp
lret
fwait
aad
ret
imul
add
or
mov
inc
call
adc
mov
pusha
in
mov
repnz
mov
rorl
lret
jecxz
dec
or
int3
fsubs
inc
roll
mov
xchg
sub
mov
pop
filds
pop
sbb
dec
adc
sub
and
dec
gs
mov
add
sub
outsl
dec
jge
decb
xchg
rorl
pusha
pusha
pop
in
stos
pusha
pusha
jo
bound
mov
xchg
jp
mov
or
xchg
jne
sub
and
add
fstpt
adcl
add
fidivrl
fdiv
and
add
enter
sub
frstor
andb
jne
mov
add
xchg
rolb
mov
xchg
hlt
jno
loopne
je
adc
push
sub
loopne
add
fsubl
jg
cmp
xor
mov
lock
out
or
cmp
and
dec
outsl
jg
mov
cmpsl
push
movsl
inc
imul
andb
sarb
aaa
pushf
push
inc
sub
add
addr16
arpl
addb
loopne
xchg
imul
dec
mov
addr16
shr
cmp
aam
push
dec
fs
repz
jae
cmp
inc
mov
lds
pop
pop
lret
add
jmp
arpl
jle
clc
mov
addb
in
dec
fs
xchg
inc
hlt
cmp
test
and
adc
xchg
pop
rcr
loopne
fnstsw
ds
inc
sti
les
scas
inc
je
rolb
shr
xchg
repnz
mov
rcr
subl
rclb
into
cmp
lock
and
push
add
loopne
enter
and
shlb
jb
push
and
xor
mov
int
js
and
mov
fistps
mov
das
or
mov
jle
ljmp
xchg
pop
xchg
xor
rorb
inc
jae
push
and
mov
inc
xchg
mov
pusha
add
sub
mov
movsb
inc
pusha
dec
arpl
popf
inc
stc
shl
or
sbbb
mov
add
mov
test
imul
pusha
pusha
mov
addb
pusha
add
movsb
pusha
mov
pusha
inc
inc
test
push
adc
push
addb
loop
fwait
aas
inc
mov
js
and
in
push
jp
into
loop
jmp
jmp
lods
and
test
mov
jle
test
outsl
or
pop
pop
add
in
adc
or
sbbb
outsl
mov
push
push
out
dec
mov
and
mov
add
lds
adc
push
out
inc
testb
mov
mov
mov
je
cmp
pop
dec
jmp
jb
pop
jns
mov
sub
imul
clc
notl
lods
xor
loopne
or
loopne
into
jmp
xchg
mov
mov
cli
in
mov
and
lods
inc
pusha
pop
pop
mov
mov
or
pusha
pop
xchg
iret
push
nop
leave
jg
dec
dec
mov
mov
sbb
mov
shlb
pusha
rorb
push
cld
cmp
or
xchg
mov
cwtl
dec
xor
jl
sarl
data16
xor
cmpl
jns
add
out
out
fldl
mov
inc
sub
stos
loopne
pop
insb
out
dec
repz
jecxz
add
rorb
mov
mov
push
stc
movsb
add
lock
adc
xchg
in
and
lock
rorb
stos
cmpsb
pusha
and
std
int3
fildll
xlat
xchg
test
mov
push
les
mov
and
or
add
mov
sbb
and
rclb
mov
lock
mov
lock
and
jle
sahf
or
add
jae
lcall
and
pushf
icebp
cmp
mov
loopne
imul
inc
stos
shlb
add
add
loopne
sub
push
cwtl
or
inc
adc
lret
movsb
mov
add
add
and
loope
add
xor
rclb
rolb
insl
push
daa
xchg
and
pusha
xchg
jp
rol
and
loopne
cmp
leave
add
add
jne
ret
mov
sub
sub
and
ss
mov
test
mov
pusha
inc
dec
enter
stc
jg
sti
stc
push
adc
sub
or
negl
sti
cmp
fstl
and
pusha
inc
je
adc
mov
inc
mov
dec
pop
sub
outsl
inc
dec
fs
jg
sbb
test
mov
xor
scas
push
pop
dec
fisubrl
loop
mov
dec
shlb
pusha
add
test
mov
fs
push
loopne
dec
cmpsb
add
rolb
and
andl
jmp
dec
lods
loopne
mov
push
cmpsb
loopne
mov
inc
xchg
mov
stc
lds
out
xchg
mov
pop
add
mov
lret
in
xchg
mov
mov
mov
mov
jl
mov
call
push
mov
lret
cmpsb
inc
xorb
addb
cwtl
call
sti
fistpl
gs
pop
mov
ret
push
imul
stos
clc
loopne
and
iret
cmp
adc
sahf
xor
leave
aas
xchg
mov
cmc
xor
call
jne
movsl
mov
sub
add
cmp
pop
cltd
push
shl
and
add
pushf
call
dec
fcomps
pusha
mov
mov
sarb
dec
add
hlt
lret
mov
es
mov
pusha
rclb
imul
inc
shlb
loopne
xchg
shrl
rolb
loopne
sbb
mov
movsb
shlb
lret
lea
and
scas
pusha
sub
addb
and
inc
orb
sub
shlb
cltd
jecxz
aam
loopne
push
and
and
push
mov
cmpsb
rolb
shlb
add
sub
dec
lret
xlat
xor
fdivr
push
or
orb
pop
sub
mov
dec
adc
mov
icebp
das
sub
push
cmp
jnp
inc
rcrb
xlat
mov
mov
rolb
mulb
in
lock
repz
cltd
jno
add
ds
orb
insb
jns
in
and
pusha
shlb
dec
adc
addr16
xorb
mov
sti
ucomiss
shrb
add
mov
out
lea
stc
mov
pop
dec
aaa
stos
addb
shlb
pop
aaa
jnp
pop
lea
and
andb
cmpsl
cmp
mov
adc
inc
rorb
and
inc
iret
in
pop
jge
lret
pop
and
adc
fnsetpm(287
add
add
xchg
mov
pusha
into
mov
ljmp
scas
mov
fwait
jle
ja
sbb
mov
stos
sarb
bound
mov
jb
fnsave
leave
cmp
cvtps2pi
lcall
loopne
mov
add
inc
mov
cmp
addb
fs
and
je
add
loopne
loopne
negl
hlt
scas
sbb
push
shlb
adc
add
insb
andb
add
mov
lahf
push
andb
shrb
aad
ss
and
add
js
mov
fwait
xchg
jmp
inc
and
loopne
pop
insb
fidivl
mov
add
adc
fistpl
jnp
push
rol
stos
ljmp
andb
add
sahf
mov
jns
jns
cmc
testb
mov
aas
push
out
mov
pop
cmp
lea
jmp
cmp
hlt
mov
add
pop
sbb
fmull
shlb
pusha
rcr
fidivl
add
pushf
insl
dec
lods
dec
push
lret
xor
xchg
add
jno
xchg
imull
in
stos
sub
cli
pusha
cli
push
xor
in
or
and
popa
stc
lret
sbb
daa
push
andb
pop
xchg
xchg
pop
imul
loopne
addr16
sub
hlt
scas
in
xor
movsb
loopne
xchg
repnz
cld
inc
sbbl
pusha
mov
inc
and
shlb
push
loopne
pop
mov
mov
aaa
sub
mov
subb
cmpsl
sahf
aad
mov
lret
push
sti
or
add
dec
test
mov
sahf
xor
adc
and
loope
jb
mov
inc
cmp
adc
lods
loopne
pop
or
outsl
dec
std
loope
aad
add
lds
scas
mov
inc
std
jbe
push
addb
icebp
jbe
ret
adc
shl
or
shlb
incb
mov
add
add
mov
lahf
stc
mov
hlt
std
pop
std
add
orb
mov
push
andb
adcl
sub
fisubs
sbb
inc
dec
xlat
rorl
daa
push
or
rorb
stc
mov
mov
xor
fildll
loope
scas
mov
test
xor
jno
outsb
add
xchg
in
stos
add
andb
mov
insl
push
das
loop
sub
lods
mov
mov
pop
jmp
mov
and
add
lods
add
dec
into
mov
dec
mov
push
xchg
or
mov
lcall
push
add
mov
pusha
inc
inc
jle
test
dec
pop
fisubrl
dec
outsl
pushf
push
in
andb
andb
int3
push
rol
jae
push
repz
push
jo
and
jl
shll
loopne
outsl
add
pusha
or
pusha
fst
scas
scas
and
in
imul
jp
enter
push
insb
hlt
jecxz
mov
pop
gs
push
mov
addb
mov
mov
mov
mov
inc
rclb
in
push
sbbl
rolb
icebp
minps
jg
mov
ret
push
inc
add
cmp
inc
dec
outsb
adc
lret
sub
outsl
sub
push
pushf
pop
out
cmp
and
addr16
or
scas
addb
xor
andb
cltd
push
ret
and
sbb
push
ss
int
mov
sbb
arpl
mov
mov
movsl
cmpsb
add
loope
add
mov
cmp
push
inc
andb
out
bound
jl
push
pusha
ror
xchg
mov
cwtl
or
add
cwtl
mov
add
rorb
js
pop
pushf
fistpl
push
jmp
lret
pushf
cmp
mov
pusha
scas
add
fisubrl
pause
or
mov
adc
inc
outsb
std
popa
push
sub
pusha
add
pop
gs
shlb
xchg
mov
out
inc
inc
scas
test
or
filds
add
and
rclb
mov
cmp
and
sbb
fwait
inc
enter
pop
sarl
loop
addb
sub
pop
aad
xor
fisttps
mov
cltd
jnp
in
leave
imul
pop
cltd
shrb
sahf
mov
cmp
loope
rolb
fimull
aad
popf
daa
lret
addr16
cli
mov
pop
mov
jne
loopne
or
adc
xchg
stos
xlat
cmp
add
push
dec
ficoms
mov
xor
stc
fsubl
mov
xor
leave
outsl
addr16
dec
sbb
pop
in
test
jl
mov
sub
pusha
pusha
xchg
insl
cmp
mov
add
cli
sbb
loope
mov
mov
xchg
push
xor
inc
pop
jecxz
and
jp
add
loopne
fdivr
fstps
in
xchg
popf
xchg
or
push
sbb
rolb
nop
xlat
out
cwtl
add
mov
and
jg
movsl
push
push
push
inc
sbbb
pop
lock
pop
pushf
xlat
dec
test
pusha
icebp
shlb
xchg
inc
mov
and
mov
roll
pop
ret
cmp
gs
das
movsl
loope
pop
push
or
inc
xor
add
pop
loopne
pop
mov
pusha
xor
or
addb
xchg
push
loopne
out
jle
les
and
and
and
jl
fadds
sti
dec
loop
pop
mov
xchg
fisttpll
loop
cmpsl
jae
mov
outsb
xor
xchg
and
jp
clc
xchg
mov
mov
adc
orl
xchg
not
push
and
in
gs
insl
sahf
xor
mov
mov
add
and
pusha
mov
inc
nop
pop
push
fs
shlb
jmp
cltd
fs
mov
mov
add
xchg
test
or
add
das
mov
cmp
adc
test
int3
pop
dec
dec
loop
idiv
mov
inc
fdivp
mov
xor
add
add
and
in
pop
sti
inc
and
and
mov
mov
icebp
adc
loop
sub
shlb
pop
bound
inc
fcmovnbe
adc
and
stc
mov
xor
mov
cmpsl
es
pusha
fsubr
or
cld
inc
out
cmp
repnz
insb
cmp
in
cmp
add
ja
je
xchg
andl
cmpsl
add
or
iret
push
and
insl
das
mov
cmpsb
loopne
out
add
inc
jae
pushf
out
fldt
cmp
xchg
js
rclb
pmovmskb
and
shl
mov
push
in
xchg
loop,pt
ja
fs
mov
push
fistpl
out
inc
mov
pop
clc
movl
fidivs
and
add
or
andb
call
mov
mov
loop
mov
in
push
jne
fimull
dec
cltd
and
add
inc
dec
nop
adc
fistps
jmp
adc
sbb
mov
andb
mov
xchg
popa
push
cmpsl
push
jle
shlb
cli
hlt
mov
mov
rolb
xor
iret
sarl
inc
mov
das
jnp
jne
xchg
aad
jae
push
inc
cmpb
push
pop
fisubrl
nop
cwtl
sub
cltd
sbb
pop
addb
add
jne
or
orb
outsl
add
cmpsl
push
rolb
test
shlb
icebp
cmp
sub
add
inc
inc
sbb
js
jle
dec
jg
inc
mov
xor
iret
xchg
int3
and
rcrb
inc
pop
jnp
pop
cmovns
fisubs
and
mov
cmp
xlat
fucomp
stos
out
pop
xchg
pop
push
divl
shlb
pop
repnz
sahf
cmp
push
stos
shl
aad
dec
xor
mov
mov
loopne
cmp
jne
ret
mov
rcrb
test
sbb
mov
nop
aad
dec
divb
sti
mov
dec
rclb
or
pusha
movsl
pop
fmulp
add
loopne
loope
setnp
pusha
and
jbe
push
fdivp
shrl
rolb
and
enter
test
pusha
pop
jne
shr
int3
loopne
pop
lret
cmp
and
mov
pop
testb
loop
popa
jl
inc
sub
inc
and
dec
sub
cmpl
ljmp
and
pop
les
dec
cli
hlt
cmpsl
repnz
xchg
pop
aaa
adc
fldl
loopne
jl
lock
int
arpl
mov
sbb
xor
jp
adc
inc
mov
dec
cmp
inc
stos
pusha
shlb
mov
and
les
mov
adcb
pusha
mov
jb
push
movsb
addb
andb
or
loopne
vpsravw
dec
xor
dec
sub
and
shlb
and
add
popf
xchg
inc
and
scas
mov
ss
and
cmp
fs
into
or
lcall
fs
leave
lea
jae
scas
test
sub
outsb
daa
push
mov
sub
mov
nop
cmp
pop
clc
cmp
insl
movsb
addb
jg
sbb
push
adc
out
rolb
fstps
clc
push
push
mov
push
and
jno
push
pop
sbb
xlat
fisttpl
in
push
sub
mov
int
cs
pusha
jge
pop
jmp
subl
enter
mov
addb
cmpsl
nop
jecxz
mov
sbb
andb
add
andb
lahf
arpl
add
inc
xlat
xor
rolb
sets
xor
je
and
cli
inc
pop
inc
push
cmp
push
ror
cmpsl
das
sbb
pusha
pop
or
outsw
push
sbb
add
lahf
mov
mov
inc
adc
mov
popf
cli
icebp
sbbl
addb
pusha
add
rorl
das
rcrb
sbb
inc
sarl
jae
sti
mov
sbb
or
in
popf
cmpsl
mov
arpl
cmc
es
add
add
insb
and
sbb
lea
add
pop
imul
jge
dec
mov
das
jmp
and
mov
jg
mov
inc
adc
pusha
and
call
ja
clc
sti
sbb
fiadds
adc
ret
xchg
ret
and
enter
add
sti
adc
pusha
jb
add
sbb
loopne
call
cmp
leave
mov
pop
mov
mov
mov
push
push
rolb
add
and
ds
das
xchg
sarb
mov
lret
lea
mov
inc
mov
loop
adc
fs
mov
rcr
jmp
popf
js
rol
dec
push
pop
cmp
daa
add
jno
fcoml
cmp
pusha
sbb
shrl
cmpsb
shlb
sub
mov
dec
lret
repz
lods
and
and
push
loopne
mov
andb
outsb
je
imulb
dec
rorl
or
mov
and
imul
popf
fcoml
jnp
sbb
mov
fildll
adc
mov
rorb
and
fcomps
iret
mov
addr16
int3
jge
cli
stc
mov
inc
fsubs
rclb
pop
lods
inc
shrb
das
into
cmc
push
jge
dec
cmp
add
daa
rclb
adc
addb
xchg
xchg
cld
inc
loopne
lods
and
in
fdivrs
insb
mov
andb
xor
pcmpgtb
lret
fidivs
push
arpl
sbb
sahf
pop
mov
rep
or
fsubrp
xor
fadd
sbbl
sti
jg
int
bound
jno
jp
cli
push
aad
std
jmp
imul
test
cmc
fsubrs
sub
lods
jae
add
aas
fbld
rol
jnp
fstps
pop
inc
repz
jbe
idivb
push
pop
mov
je
push
xor
xchg
int
mov
inc
mov
inc
loopne
mov
sbb
daa
dec
les
repz
mov
ja
push
inc
pusha
aad
push
pusha
rolb
sub
sbb
fld
mov
movsb
and
xchg
fwait
shll
add
sub
loopne
in
jo
les
inc
shr
push
insb
aad
mov
idivb
mov
add
add
in
rcrb
push
js
jns
stos
shl
movsl
std
sbb
cmp
bound
dec
push
ja
cmpsb
loopne
inc
mov
call
loop
shrl
dec
addb
and
and
scas
and
push
and
xchg
loopne
cmp
xchg
xor
rorb
frstor
addb
xchg
loop
xchg
out
in
cmpsb
mov
pusha
sahf
sbb
idivb
mov
push
xchg
test
enter
fsubrs
ret
mov
lock
cli
out
mov
sahf
inc
mov
mov
mov
gs
and
mov
outsl
loopne,pn
jb
shlb
andb
iret
lods
and
jp
in
sbb
shlb
inc
and
mov
and
fsubrp
je
jnp
mov
gs
add
loopne
jne
xlat
fdivrs
mov
cmpsl
sub
add
outsb
aaa
cmp
or
lock
inc
add
or
cld
jge
jb
in
mov
add
out
jnp
inc
mov
dec
jecxz
push
sbb
inc
add
mov
js
loope
or
sbbb
adc
iret
sbb
pop
pshufw
xchg
mov
mov
push
fs
mov
mov
mov
push
cmpsl
push
and
jp
repnz
sahf
push
xchg
lock
loopne
add
mov
inc
out
pop
sbb
shll
push
loopw
int3
inc
sbb
xor
jns
fwait
mov
xlat
repz
addr16
lods
add
and
push
and
movsl
jmp
xchg
mov
pushf
pop
push
rolb
inc
inc
jge
jb
aaa
sub
and
sbb
and
mov
addb
or
xor
sub
pushl
jmp
adc
fwait
or
add
sub
sbbl
mov
xchg
aam
pop
lods
loopne
aaa
adc
push
fistps
sbb
pusha
addb
cmp
rcl
push
cmpsb
mov
rolb
inc
xchg
into
sbb
test
and
push
xor
sbb
std
popa
dec
ficoml
sub
inc
rcrb
subl
loopne
outsb
test
and
mov
pusha
add
sarb
sub
push
mov
lret
arpl
xor
xchg
xchg
pusha
cltd
es
mov
out
popl
xchg
bound
popf
xor
clc
jnp
mov
rclb
cmpsb
pusha
and
dec
or
dec
out
mov
cli
rorb
dec
push
test
add
in
cmc
nop
popf
cmp
mov
data16
lahf
jnp
loopne
int
mov
inc
movsb
pusha
mov
xor
mov
xor
mov
lcall
push
push
stos
pusha
pusha
mov
sti
xchg
inc
and
and
mov
jb
loopne
stc
cmp
lret
mov
ljmp
sarb
dec
stos
popf
jl
scas
rolb
inc
xchg
jb
addb
imul
mov
inc
mov
pushf
jg
arpl
pusha
add
loopne
shrb
test
cmp
mov
cmpb
xlat
clc
lret
push
cmc
clc
xlat
and
in
xor
and
loopne
cmp
jecxz
add
and
xchg
adc
jge
mov
mov
call
inc
inc
add
push
or
add
push
dec
rcl
aas
into
cld
add
add
stc
adc
cltd
xchg
addl
push
mov
pusha
test
loopne
cs
pusha
push
out
outsl
imul
xchg
rorl
pusha
rcl
and
loopne
and
inc
pop
inc
pop
out
icebp
pop
aas
lds
inc
mov
inc
rcrl
sbb
lock
pusha
in
and
andb
sarb
mov
fsubr
xor
and
xchg
shrb
in
andb
popf
sbb
mov
pop
cmp
popa
fdivs
or
mov
out
add
mov
fnstenv
sbb
std
add
mov
mov
shlb
ss
xchg
xor
inc
add
and
inc
push
xchg
dec
imull
sbb
mov
add
or
movsb
shlb
mov
aaa
mov
add
and
mov
cmovb
loope
xchg
xchg
popf
and
mov
andb
jg
ljmp
popa
inc
leave
mov
and
out
dec
stos
popa
insb
xor
cli
lcall
in
scas
lods
pusha
and
loopne
stos
fisubrs
mov
ret
gs
pop
mov
push
ss
imul
mov
out
lea
xor
jns
adc
inc
loopne
jbe
pop
inc
rcrb
ds
add
xorb
out
or
sbb
mov
sbb
add
loopne
repz
enter
dec
cld
aaa
aaa
fsubp
and
or
mov
and
aam
fsts
ljmp
scas
pusha
loopne
loopne
jbe
pop
adc
inc
mov
aad
sti
cld
or
pusha
lods
push
addr16
inc
shlb
push
pop
fmuls
dec
pop
and
and
shll
mov
ss
jle
sti
mov
shld
inc
sbb
or
cwtl
or
or
inc
or
lcall
and
sbb
mov
loopne
jl
shlb
aad
pusha
fimull
dec
in
rolb
mov
adc
sahf
adc
cs
xor
xor
loopne
daa
pusha
and
scas
pushf
test
inc
lods
adc
sub
add
jl
pop
leave
inc
pop
iret
into
xor
pushf
and
dec
cwtl
sub
xchg
icebp
push
nop
mov
xchg
aaa
xor
jne
ret
mov
adc
or
push
add
rolb
pusha
inc
lods
fsubr
addr16
sahf
push
mov
sarb
mov
mov
sbbb
mov
pop
js
fnsave
dec
lahf
mov
pop
test
loopne
mov
inc
pop
es
imul
and
pop
shll
andb
mov
push
leave
int
inc
fstps
mov
ljmp
dec
mov
pusha
shrb
into
movsl
insb
int
push
and
mov
pop
ljmp
dec
shll
pusha
outsb
movsl
shll
push
xchg
mov
flds
mov
insl
xchg
or
pusha
popl
sahf
or
scas
cltd
lock
addb
cld
inc
rcrl
imul
stos
xchg
mov
inc
lret
dec
mov
hlt
push
out
xor
sub
inc
sbb
and
subb
xchg
adc
fs
aas
jmp
test
and
out
jl
pop
fimull
xchg
add
mov
andb
loopne
mov
adc
icebp
das
lcall
sub
pop
mov
pusha
mov
inc
test
icebp
pop
cltd
sti
out
or
xor
insl
push
or
ror
inc
out
andb
dec
sbb
xchg
or
jecxz
inc
add
sub
mov
push
and
and
jp
cmp
fisubs
stos
and
rcr
adc
shrb
jno
repz
add
jge
rcl
cmpl
pusha
sbb
fcomps
ret
lds
xchg
mov
lcall
sub
adc
mov
pop
inc
inc
pop
icebp
sarl
shrb
pusha
andb
xor
sbb
test
mov
jecxz
jge
mov
bnd
rolb
rcl
dec
ljmp
dec
inc
sub
sar
cmpsl
mov
shl
mov
ljmp
mov
loopne
mov
adc
cltd
dec
xlat
out
sbb
dec
popf
pop
imul
inc
and
mov
and
cmpb
sbb
outsb
popf
lcall
call
popa
sarl
inc
push
cmp
cs
fsubrp
cmp
mov
add
push
add
or
inc
ret
repnz
mov
ret
and
sarb
pop
sub
add
dec
sub
xor
fidivs
ret
add
adcl
inc
or
xor
and
mov
dec
enter
jne
es
add
das
cld
pop
jmp
or
es
mov
les
scas
rolb
gs
stos
lret
sub
push
pop
cltd
xchg
pusha
and
jae
test
and
aam
imul
inc
pusha
and
cmp
add
test
aad
loopne
clc
inc
inc
andl
xorb
mov
and
loopne,pn
dec
cmp
mov
outsb
mov
push
std
ss
mov
loopne
cmp
addl
and
es
add
adc
push
xchg
xchg
popf
xchg
scas
rolb
pop
add
sub
add
add
mov
cwtl
cld
or
sti
pop
fsubl
pop
movsl
repz
and
fldl
loopne
add
loopne
cmp
andb
and
xlat
int
sub
fmuls
pop
addb
nop
lret
cmpl
inc
fcompl
repnz
js
sub
ljmp
pop
add
add
adcb
mov
and
fs
pop
sar
xchg
and
push
add
and
insl
mov
xor
add
sbbb
xchg
mov
mov
jmp
cwtl
scas
and
clc
dec
loope
stos
pop
daa
xchg
mov
fisttps
sub
add
push
fnstsw
and
xor
push
mov
jecxz
rolb
jno
dec
mull
enter
pushf
repz
test
and
ss
cmp
and
xchg
push
and
iret
movl
adcb
push
jb
test
mov
push
sub
std
fcompl
mov
jl
push
andb
mov
and
mov
andb
aas
sub
lods
pusha
inc
xchg
push
mov
test
pushf
add
mov
adc
shlb
xor
out
jbe
cmp
inc
sahf
mov
adc
dec
inc
sub
sub
jmp
jmp
lods
in
xchg
push
inc
hlt
sbb
xchg
in
sub
ror
les
shlb
mov
sbb
imul
icebp
mov
insb
mov
and
loopne
mov
popf
jge
fldcw
pop
out
pusha
inc
das
cmp
jmp
dec
push
add
loopne
cmpsl
add
and
pop
inc
call
push
dec
mov
xor
mov
imul
cmpsl
shll
insl
rorb
dec
mov
mov
inc
mov
aad
jge
mov
mov
add
pusha
adc
or
and
cmp
pusha
and
pop
ja
mov
andb
test
and
push
inc
and
push
add
xchg
negb
lods
mov
and
xor
jno
xor
cltd
ret
hlt
adc
shlb
aad
add
ss
adc
fcmove
sub
inc
aas
je
add
ljmp
js
cltd
jne
mov
lods
movsl
dec
push
out
push
out
sbb
aad
aaa
into
adc
rorl
addb
add
dec
add
mov
in
pop
mov
cmp
add
cmpsb
mov
inc
shlb
push
stc
aaa
cmpsb
pusha
pusha
enter
in
adc
and
jl
jl
mov
mov
push
inc
fs
mov
clc
pop
jb
cmp
and
mov
add
mov
dec
xor
sub
rolb
xlat
fwait
adc
push
pop
cli
dec
lds
mov
dec
mov
inc
mov
nop
pop
sbb
cmp
fimuls
mov
cmp
lock
divl
iret
or
sub
in
adc
xlat
int
jne
jno
or
and
lock
add
pop
and
loopne
pop
inc
mov
sbb
stos
lock
xor
sbb
jecxz
bound
push
dec
jge
dec
daa
movsb
shlb
rcrb
add
andb
mov
mov
inc
xlat
rcr
xchg
dec
push
sahf
adc
xchg
ret
addr16
mov
pop
push
rorb
repnz
xchg
in
adc
xlat
popf
adc
lret
xchg
lahf
dec
pushf
je
in
mov
out
pop
push
int
enter
out
cmpsl
xor
xor
xor
adc
ja
mov
xorb
cmp
add
lods
xchg
call
add
and
and
mov
jns
xor
mov
inc
mov
shrb
sbb
and
test
and
pusha
pusha
inc
testl
jg
mov
inc
inc
movsl
jns
addb
xchg
xchg
adc
sub
mov
lock
pop
xadd
and
inc
mov
xchg
into
jns
adc
add
inc
jg
fnstsw
and
addr16
cmpsl
push
addb
xchg
xchg
push
or
sbb
sbb
jp
addb
jns
add
dec
jae
or
addb
idivb
stos
add
sbb
push
mov
mov
frstor
inc
sti
sbb
lcall
in
pusha
pusha
pop
push
je
mov
push
ficoml
mov
gs
dec
loopne
sbb
xor
enter
adc
movsb
loopne
jp
sarl
cwtl
sub
loopne
sub
shlb
sbb
pop
cmp
push
add
test
loopne
adc
cmp
push
shl
jl
inc
add
out
dec
jae
loope
sahf
sbb
stos
mov
shl
rolb
sahf
sub
inc
mov
xor
call
mov
dec
jmp
loopne
jecxz
adc
jns
xchg
mov
pusha
mov
lock
ljmp
aas
mov
imulb
andb
loopne
pushl
rorb
popl
pop
sbb
test
pop
push
adc
pusha
std
repnz
sub
dec
xchg
adcl
nop
pop
sub
testl
pusha
repz
push
mov
jp
out
data16
push
dec
dec
push
jo
pop
insl
andb
repnz
int
insb
addr16
ffreep
xchg
enter
mov
adc
je
out
in
call
shlb
dec
repz
addb
stc
mov
iret
ffreep
jbe
pusha
movsb
mov
out
mov
mov
inc
xchg
inc
push
adc
addb
and
lock
jmp
daa
mov
jo
ljmp
movsb
inc
rcrb
sti
or
add
and
and
loopne
dec
sub
les
mov
cltd
xchg
ret
pusha
loopne
out
pusha
xor
or
scas
cmpsb
loopne
out
pushf
mov
sbb
and
popf
inc
ret
stc
sbb
pusha
pusha
pop
int
jo
iret
outsl
dec
not
cmp
fcom
xchg
repnz
mov
and
jle
and
add
loopne
loopne
mov
adc
bound
mov
mov
and
pop
and
push
addb
cmpsb
add
dec
push
push
inc
rol
in
xor
shl
addb
sub
ror
mov
mov
loopne
add
dec
sahf
fldenv
repnz
xchg
pop
sbb
inc
fsubrs
js
jl
jo
jmp
testl
mul
in
sub
out
mov
dec
and
lahf
dec
dec
cmp
sub
loopne
lahf
iret
scas
pusha
addb
lods
addb
sbb
cmp
int
ja
xor
rolb
mov
pop
shlb
les
stos
repz
push
adc
add
sar
push
jbe
cld
push
mov
shr
adc
and
sahf
stc
test
add
cmp
cmc
ss
add
dec
int
inc
xchg
sub
push
jo
mov
push
gs
mov
jle
pop
mov
sub
rolb
pop
jb
mov
mov
andb
jne
stos
shlb
repnz
shlb
pusha
pop
lret
insl
ret
rolb
adc
sti
jg
jl
add
imul
test
add
jo
mov
rcll
rolb
loopne
xchg
xor
insb
mov
movsb
mov
inc
and
pop
pop
outsl
outsl
in
xchg
shrl
std
and
mov
call
pusha
rclb
and
subb
cmp
ljmp
cltd
lods
andb
loop
movsl
ss
jno
cmp
loopne
in
in
rorb
mov
add
pop
scas
fnsave
jmp
mov
jp
and
out
in
push
mov
push
add
loopne
sub
iret
cmc
inc
xlat
das
out
fcoms
mov
movsl
dec
sub
dec
fstl
outsb
mov
loopne,pn
das
loopne
out
dec
mov
mov
mov
rcrb
or
leave
pop
popf
fs
inc
movsb
pusha
and
iret
dec
xchg
mov
into
cmp
repnz
dec
mov
addr16
jecxz
sti
in
ljmp
rol
andb
pop
mov
mov
pusha
sbb
sub
jge
inc
mov
mov
and
mov
popa
insl
jp
inc
mov
loopne
add
dec
push
inc
push
imulb
faddl
xchg
add
jg
inc
or
insl
ret
pusha
pusha
out
push
xor
mov
fwait
outsb
clc
fadds
and
inc
js
ds
inc
mov
pusha
pop
ss
xchg
sti
pop
loopne
or
sub
adc
movsl
test
mov
inc
pusha
pop
mov
add
xchg
fiaddl
scas
push
adc
js
out
push
push
popf
sub
adc
cmc
stos
inc
and
xchg
jb
stos
addb
and
add
aaa
xchg
shll
cmp
mov
push
das
fwait
dec
shrl
sbbb
sbb
jg
dec
cmp
loopne
out
mov
and
rcrl
jl
mov
pusha
ss
ljmp
jb
mov
rolb
fwait
pop
outsl
xlat
ds
add
xor
lret
out
inc
and
add
pusha
das
mov
sbb
outsl
shl
movsl
lret
lock
xchg
sub
rcll
out
and
les
jns
add
ja
dec
mov
sbb
or
scas
mov
sbb
add
xorb
and
loopne
fdivrs
add
xchg
mov
mov
out
bound
scas
andb
sbbl
hlt
pop
xchg
xor
push
sbb
addb
je
repz
cs
add
pop
sbb
mov
mov
js
in
cmpsb
add
stc
mov
or
insl
mov
fcmovu
fmuls
adc
pop
push
scas
xchg
and
cmpl
jbe
pop
loope
leave
insl
std
out
pop
jecxz
outsl
movsl
mov
inc
mov
lcall
sbb
and
in
cld
mov
push
arpl
nop
nop
xor
pop
test
xor
sub
arpl
sub
jge
rolb
jnp
mov
push
cmp
rolb
scas
push
inc
and
pusha
mov
rolb
pusha
loopne
mov
les
out
outsb
out
aad
bound
adc
loopne
mov
popf
lock
hlt
jge
jnp
xlat
cwtl
mov
adc
xchg
mov
mov
xchg
in
pop
xchg
mov
pop
addb
in
mov
into
or
loopne
stos
repnz
test
pusha
and
rclb
movsl
sbb
out
imul
mov
sub
dec
xchg
pop
cltd
push
std
xor
fisubrs
ja
addb
outsl
test
rclb
pop
outsb
or
fcom
jae
test
mov
and
inc
xor
mov
xor
push
and
sub
inc
cmp
mov
cwtl
call
dec
dec
add
and
out
adc
sub
imul
das
inc
mov
scas
rolb
dec
pop
in
sbb
outsl
inc
shlb
adc
xor
andl
inc
addb
cmc
test
pop
pop
sti
clc
mov
ljmp
pusha
mov
call
in
and
loopne
inc
cmp
mov
insl
lret
ret
lds
andb
mov
add
andb
sub
mov
jno
mov
xchg
mov
pop
mov
rorl
into
push
cmp
jbe
lahf
rclb
push
push
or
jb
and
in
mov
pusha
fdivl
out
rol
cs
push
mov
rolb
cld
mov
xor
loopne
adc
int
sbb
arpl
imul
pusha
cmpb
cld
insb
pop
dec
fimull
loope
imul
xchg
cwtl
mov
fisttpl
mov
stc
mov
xchg
mov
and
pusha
jae
pop
adc
xor
imul
loopne
lahf
nop
mov
or
les
jl
loopne
lds
andb
mov
xchg
pusha
addr16
fdivrs
push
psllq
and
ss
xor
cmpsl
inc
cmc
jbe
sti
hlt
jbe
pop
mov
mov
xor
loopne
sub
mov
xor
pusha
loopne
and
rclb
loope
sub
out
inc
pusha
fstpl
adc
mov
loopne
mov
pop
mov
inc
outsb
adc
aaa
dec
mov
aad
add
and
and
push
ds
sub
cmc
ret
mov
mov
andb
and
cli
enter
data16
jne
jg
js
popf
xchg
mov
sti
loopne
mov
loopne
mov
and
into
inc
xor
dec
inc
jno
outsb
sbb
xorl
mov
shr
mov
stos
mov
pop
add
and
pop
add
inc
std
mov
inc
and
out
addr16
loopne
jp
sbb
and
mov
pushf
out
cwtl
sub
push
out
lock
test
loopne
and
hlt
inc
in
fldenv
movsl
insb
ja
pop
cmc
insb
jg
not
add
cmp
mov
addb
sbb
inc
inc
cmpsb
mov
xorb
loopne
lds
fcmovbe
xor
mov
loopne
dec
xchg
mov
mov
mov
lods
loopne
dec
in
aad
push
ja
add
mov
sbb
dec
jge
inc
sbb
inc
out
and
sbb
inc
sub
add
mov
and
inc
xlat
and
cmpb
test
fists
jae
and
hlt
dec
rolb
imul
mov
rorb
loopne
pop
mov
pusha
aam
das
jno
fwait
pop
push
adc
jle
and
sahf
xchg
rolb
stc
push
rorl
add
xchg
lods
and
mov
lret
inc
jnp
jbe
dec
in
int3
lahf
cld
movsl
or
outsl
or
mov
mov
ftst
xor
int3
mov
mov
pop
adc
sub
pusha
push
mov
xchg
mov
mov
jnp
and
fisttpl
sub
test
loopne
push
in
lock
push
scas
insl
push
rcr
xchg
pop
fnstsw
dec
dec
mov
clc
jp
lea
ror
imul
pop
sbb
int
rolb
sahf
xor
shlb
cltd
and
shlb
xchg
push
test
inc
pop
pushf
aad
rclb
loopne
gs
push
out
dec
daa
stc
imul
adc
nop
loopne
and
add
dec
insb
cltd
cli
movsl
and
jge
inc
inc
cs
rclb
cmp
aad
fs
mov
jp
leave
fimull
mov
fistpll
pusha
inc
push
pop
imul
and
inc
add
orl
xor
pusha
and
jns
ficomps
or
inc
jb
addb
xchg
xchg
imull
pusha
pusha
xchg
mov
xchg
mov
ljmp
ja
mov
mov
pusha
mov
or
addb
jne
lea
dec
xchg
mov
mov
or
xchg
hlt
fiadds
cmp
popa
xor
cmp
pusha
pusha
cmc
or
and
mov
mov
push
sub
or
inc
and
imul
and
or
and
subb
andb
fdivl
or
mov
mov
cltd
roll
dec
ja
or
mov
push
push
fcmovnu
jnp
jmp
add
lock
daa
cmp
pop
popa
aad
xchg
test
and
subb
xor
rolb
stos
mov
jns
test
loopne
loopne
lahf
daa
jns
shr
shrb
inc
notl
or
fstl
mov
adc
mov
rcrb
imul
xchg
push
mov
sbb
inc
xchg
inc
xchg
lods
andb
xchg
jl
inc
dec
ljmp
out
rep
add
jns
rolb
mov
cmp
cmp
jnp
xchg
xchg
ret
out
push
aad
cmpsb
shl
mov
addb
int
js
push
aam
test
inc
push
pop
fimuls
jle
jns
mov
andb
mov
mov
sbb
pusha
addb
pop
aam
and
sbb
cltd
dec
xlat
jno
inc
stos
mov
pop
push
push
xor
andb
xor
push
push
cld
ds
mov
ds
xor
mov
das
ret
push
jle
xchg
outsl
mov
sub
pusha
dec
push
shlb
shrb
add
loopne
push
add
pop
dec
out
push
mov
pop
repnz
mov
andb
ss
movsl
insl
js
push
add
jo
push
adc
pop
push
dec
jmp
adc
aad
andb
mov
fistpll
mov
adc
cmp
and
dec
and
cmp
andl
cmp
add
or
fidivs
or
adc
das
jecxz
sti
lods
movsb
and
ss
rol
dec
mov
out
repnz
ds
pusha
addb
xchg
fisttpl
and
loopne
cli
adc
arpl
rcrb
rorl
lds
iret
push
or
inc
sahf
cmpsb
and
push
lcall
in
pop
sub
inc
and
adc
filds
es
add
loopne
pop
xchg
or
mov
ja
fsubrl
jmp
pushf
mov
mov
add
loopne
adc
mov
das
jge
add
mov
dec
int3
popf
bound
and
pusha
xchg
xor
andb
push
pop
in
ss
adc
mov
jo
out
pop
inc
mov
xchg
stos
pusha
loopne
push
pop
lds
mov
ficoms
int3
ss
mov
rclb
mov
ret
sbb
add
sbb
out
out
push
rcrb
xchg
pop
rorl
pop
push
pusha
inc
mov
jmp
add
ljmp
sub
pusha
xchg
addr16
shlb
cmpsb
rolb
pop
inc
adc
aam
lock
rolb
jle
jge
insb
pusha
mov
push
xor
pop
arpl
dec
and
pusha
mov
fldt
and
add
mov
addl
adcb
pop
dec
mov
add
and
je
fucom
into
call
data16
and
dec
jmp
xor
stc
je
pop
fcmovb
inc
repz
loop
cmp
lods
rcl
icebp
bound
repz
popa
add
inc
dec
fwait
cmpsl
lds
mov
inc
inc
mov
mov
rolb
stos
shlb
popl
sbb
pop
adc
add
xchg
xchg
mov
sti
xchg
or
loopne
lret
pop
cmp
pop
pop
lods
push
sahf
pop
lods
test
dec
pusha
mov
pop
mov
sahf
addl
rcl
xor
ret
ret
inc
jg
dec
mov
inc
faddl
fdivrl
test
and
addb
and
inc
repnz
cmp
jbe
add
cwtl
stos
inc
and
mov
out
jno
repz
outsl
ret
aas
dec
faddp
leave
lock
sub
pshufw
push
stos
loopne
inc
test
rolb
pushf
mov
shlb
out
out
add
and
mov
mov
loopne
mov
cmp
andb
pop
jns
cmp
or
aas
xchg
add
subb
push
push
adc
mov
insb
ja
add
and
jb
pop
mov
jmp
jae
inc
push
mov
lds
negl
daa
fwait
pop
repnz
mov
and
adc
clc
test
add
add
cmp
mov
pop
aam
mov
loop
add
mov
pop
xlat
ret
and
enter
in
sub
mov
std
dec
or
add
mov
jne
add
imulb
hlt
fimuls
test
inc
adc
popf
sarb
adc
hlt
fwait
int3
add
cmc
daa
lahf
lds
inc
arpl
into
and
inc
dec
fwait
inc
mov
push
cmp
jmp
cmp
cmp
dec
jae
pusha
loopne
das
mov
add
loopne
sub
pusha
mov
in
sahf
add
dec
in
addb
dec
lock
or
test
stos
and
sub
and
loopne
jg
mov
inc
sbb
push
std
sub
addr16
pop
in
aam
daa
add
and
push
lret
pop
adc
add
pushf
cmc
shrl
stos
push
cltd
sbb
loop
mov
out
mov
shlb
loopne
call
sbb
loope
lods
addb
dec
in
clc
or
je
or
clc
leave
add
test
inc
jp
outsb
mov
pusha
cmc
mov
xchg
mov
sub
movsb
pusha
add
ja
ljmp
pusha
call
ss
cmp
xchg
dec
mov
xchg
mov
xor
xorb
sbb
ret
movsl
adc
sub
add
and
mov
push
mov
mov
jne
pusha
mov
or
mov
or
shlb
mov
and
loopne
add
test
loopne
cld
jge
insl
and
pusha
pusha
cmp
xchg
je
jle
aam
ficoml
and
inc
xor
int3
dec
mov
test
loopne
fidivrl
inc
jb
arpl
test
inc
mov
xor
xor
pusha
and
loop
leave
dec
pop
out
lock
inc
push
aaa
and
int
adc
inc
pop
jmp
test
loopne
xor
addb
mov
pop
jo
inc
add
xor
loopne
xchg
mov
inc
loopne
in
hlt
mov
js
arpl
inc
jb
add
loopne
fdivl
or
mov
int3
imul
call
fisttpll
popa
imul
and
cld
inc
gs
and
inc
push
and
mov
stos
or
and
rorb
inc
adcb
sbb
mov
xchg
jno
shlb
pop
mov
and
add
inc
fisttpll
mov
loopne
mov
inc
mov
xchg
inc
ja
mov
dec
lahf
ss
fldenv
shlb
inc
iret
cmc
push
fcom
and
add
insl
arpl
jle
outsl
movsb
add
loope
loopne
jo
insl
pop
push
sub
add
or
and
inc
and
aas
sbb
mov
push
mov
int
mov
add
xor
and
mov
pusha
adcb
cmp
test
pop
aas
jne
xchg
cmp
inc
lods
xchg
repnz
loopne
icebp
gs
and
cmp
pop
dec
xor
jns
in
mov
sbb
mov
dec
addr16
jb
inc
and
and
in
test
repz
inc
or
std
das
rorb
pop
clc
std
mov
loopne
add
popf
inc
push
bound
loop
pop
js
pusha
orb
cmp
jle
and
mov
mov
andb
pop
lods
rolb
or
pusha
insb
xchg
pop
loop
xchg
sub
add
or
lret
pop
mov
call
and
pusha
repnz
jge
addb
or
and
dec
push
jecxz
dec
push
fdivrs
inc
jb
loopne
out
andb
push
andb
es
pusha
jg
inc
into
xorl
clc
sar
add
pop
or
and
cmp
lcall
add
rolb
mov
mov
les
mov
inc
xlat
or
jmp
sbb
loopne
fwait
xchg
repz
pop
xor
pop
flds
pop
sbb
flds
inc
adc
ds
push
fxam
cmpsb
inc
rolb
adcb
and
push
loopne
shlb
test
or
in
mov
outsl
xor
push
xchg
add
pop
pop
test
and
xor
xor
out
mov
and
push
push
push
lcall
ret
cmp
ss
inc
shrb
mov
scas
add
sarl
out
mov
in
clc
test
addb
mov
mov
outsb
jecxz
inc
lea
push
test
fs
out
adc
stos
stc
loopne
lret
mov
bts
inc
fcmovbe
mov
add
add
ja
popf
out
push
ljmp
fwait
mov
and
adc
and
mov
jge
mov
pop
push
lcall
andb
les
inc
mov
ljmp
in
adc
dec
dec
push
mov
jne
jg
pusha
sarb
sub
stos
sub
push
mov
adc
int3
sbb
dec
int
jae
lds
xchg
xchg
int
xor
pop
fcomp
push
lahf
sahf
xchg
sbb
shlb
call
and
add
jns
inc
and
lods
pusha
shr
xor
addb
push
mov
ficomps
lock
cld
push
shl
mov
mov
cmp
pop
push
inc
sbbb
sahf
icebp
cmp
andb
dec
fiaddl
xor
outsb
add
mov
adc
shl
dec
std
enter
push
cmp
sahf
mull
rolb
xchg
aas
ror
pop
mull
loopne
dec
jbe
push
out
mov
movsl
xor
dec
pop
fwait
and
and
mov
push
mov
mov
and
mov
xchg
cmpsb
and
ss
mov
popa
sub
and
rol
jns
inc
fdivl
pop
dec
gs
inc
mov
loopne
inc
dec
mov
xor
outsb
cli
movsb
add
mov
pop
add
pop
mov
sarb
inc
or
inc
enter
dec
sti
and
pusha
mov
mov
dec
int3
pop
addb
lock
mov
pop
jns
cld
add
rol
jno
frstor
les
add
aad
and
and
xlat
pusha
xor
sub
lahf
nop
pop
fs
sub
sub
add
fwait
push
pushf
xor
add
cmp
pop
pushf
cs
loopne
xor
push
push
inc
and
fidivrs
fdivr
adc
xchg
mov
mov
pusha
inc
in
sbb
sub
jecxz
or
sbbb
jle
inc
loopne
aad
push
xchg
repz
hlt
shll
xchg
dec
jge
adc
notl
or
fisubl
gs
mov
adc
leave
mov
push
mov
pop
shll
andb
xor
mov
in
push
mov
ficoml
stos
and
fs
jg
in
movb
and
test
jecxz
sub
sbb
loopne
xchg
in
faddl
mov
call
mov
add
and
out
and
xchg
dec
xlat
cmp
mov
or
jge
jge
lock
cmp
pop
icebp
out
int
scas
sti
idiv
xor
mov
mov
jb
cmp
lret
outsl
scas
add
xchg
sbb
cwtl
add
pop
mov
das
mov
cmpb
dec
imul
xchg
aas
pop
lret
cmp
sbb
test
add
add
dec
inc
cmp
int
shlb
rolb
or
jmp
out
jne
sbb
loopne
bound
adc
pop
jmp
pusha
mov
ss
jmp
test
and
mov
cwtl
pop
jmp
pusha
loopne
jle
cwtl
adc
test
pop
loop
ret
cli
mov
add
inc
mov
add
mov
mov
rolb
xchg
loopne
movsl
push
or
adc
test
sti
jb
cltd
repz
push
sbb
rol
sbb
jle
xchg
stos
sbb
fadds
js
stc
lret
and
pop
das
cli
clc
and
imul
or
icebp
sti
inc
mov
addb
lret
pusha
inc
cmp
push
add
int
cmp
pop
mov
mov
shlb
and
adc
int
mov
pusha
push
adc
pusha
rcrb
sti
lahf
cwtl
pop
inc
push
add
into
or
mov
test
inc
or
shl
xor
rcrl
mov
negl
inc
or
xor
mov
xchg
cmc
scas
loopne
addb
add
xor
jns
dec
insb
stos
add
xor
dec
xlat
jbe
adc
jns
push
in
sub
loopne
jecxz
pop
add
adcb
cmp
loopne
cmp
ja
ret
lods
jl
pop
push
cmp
add
fdivp
inc
cmp
and
adc
mov
jo
hlt
les
imul
or
pop
mov
loopne
add
or
addr16
mov
divb
jbe
addl
mov
cltd
decl
sbb
pop
sbb
pusha
shlb
jae,pt
adc
pop
ss
sti
cmp
aad
ss
leave
inc
imul
fscale
push
dec
pop
adc
xchg
inc
fcomps
mov
dec
test
inc
shlb
loope
add
out
push
sub
add
add
fmul
test
cwtl
push
out
add
xor
sbb
xor
adc
rol
cmpsb
rolb
shlb
jge
mov
nop
xor
out
in
cs
mov
repnz
inc
adcb
aaa
fsub
push
xor
adc
lods
andb
aam
imul
mov
addl
push
add
fldt
lods
lss
addb
and
clc
jae
ljmp
inc
push
in
in
cmp
loopne
cs
loopne
repnz
faddl
idiv
sub
add
daa
ror
call
icebp
pop
and
loopne
gs
addr16
test
inc
mov
jno
ja
dec
xor
push
push
lcall
push
outsb
xrelease
stos
addb
ss
mov
push
rclb
push
add
out
or
jbe
sbb
mov
repnz
loopne
stos
add
adc
loopne
jne
mov
jo
andb
repz
mov
aas
jb
loopne
push
push
cmp
mov
int
push
fimull
insl
jae
dec
jp
andb
roll
and
stc
test
push
in
dec
xor
mov
rolb
add
daa
lret
in
jp
mov
rorl
inc
stc
jno
pop
jae
cmp
neg
cmp
push
loopne
rol
cmp
sub
loopne
ret
mov
dec
clc
aam
icebp
fwait
push
int
rclb
push
std
xor
fmuls
lock
sub
std
jbe
mov
repnz
jae
sbb
lods
addb
push
outsl
ljmp
ficompl
rolb
pusha
loopne
push
xchg
mov
repnz
inc
fistps
sti
pusha
insl
aad
cmp
cmp
icebp
outsl
loope
xor
xor
cmp
test
push
fstpt
inc
jbe
jae
pop
into
jmp
in
pop
xchg
jno
lea
jae
divb
clc
ret
cmp
aaa
out
inc
add
repnz
mov
mov
sub
adc
pop
in
imul
xchg
pusha
fmuls
shl
add
pop
or
test
loopne
andb
stc
pusha
repnz
mov
pusha
and
scas
sbb
fsubl
and
xchg
inc
in
dec
icebp
xor
mov
outsb
jae
adc
and
je
mov
dec
cli
into
pop
popa
adc
and
mov
les
adc
shlb
inc
sub
rolb
xor
mov
jo
dec
jecxz
pusha
xorb
sbb
repnz
push
inc
add
mov
pop
dec
push
mov
mov
cld
push
shl
pop
adc
mov
sbb
inc
add
and
sub
or
orb
aaa
or
loopne
loop
mov
idivb
leave
out
insb
inc
jae
imul
test
ljmp
xor
loope
pop
pop
cltd
movl
gs
rclb
insb
sub
dec
rcll
inc
pusha
lret
js
inc
mov
mov
shlb
jbe
fwait
int3
pusha
jmp
dec
imull
pusha
xor
mov
add
add
mov
inc
movsb
add
fiaddl
les
mov
pusha
jns
andb
jnp
aad
mov
inc
xor
dec
lret
sub
inc
pop
jle
xchg
xchg
icebp
cmpsl
push
dec
sar
or
pusha
dec
pop
getsec
push
mov
pop
inc
imul
pusha
orb
std
cmp
stc
sub
or
cmp
loopne
test
mov
lret
das
add
xchg
cmp
sub
mov
xlat
and
mov
add
inc
or
mov
pusha
loopne
xor
and
add
insb
js
repz
dec
mov
mov
pusha
inc
es
andb
inc
loopne
and
ss
fildll
pop
stos
and
aaa
aad
mov
xchg
xchg
cmpsb
andb
lret
mov
mov
pusha
popl
loopne
mov
xchg
insb
push
dec
out
xchg
mov
add
xor
add
popl
and
inc
je
add
jno
stos
arpl
rclb
orb
sarb
ret
cmc
dec
dec
xchg
rorl
dec
add
or
mov
outsb
jno
fs
imul
mov
mov
add
loopne
in
out
into
cmpsb
inc
xorb
adc
pop
sub
pusha
fldl
mov
jge
fisttpll
leave
or
cmp
cmpsl
test
inc
les
mov
loopne
test
repnz
mov
rolb
loopne
mov
roll
pusha
adc
out
iret
xchg
cmp
mov
addr16
sub
rclb
add
es
and
and
ja
or
mov
ljmp
lods
mov
jns
dec
mov
mov
xchg
stc
xchg
cmp
roll
pop
and
dec
xchg
jb
and
addb
fnstenv
pusha
cmpb
dec
sub
mov
xchg
xchg
dec
jl
loopne
data16
add
test
lock
or
inc
rcrb
out
fstpt
test
inc
jno
sbb
and
loopne
cmp
and
test
add
and
arpl
mov
mov
xchg
mov
lods
jl
mov
div
lock
push
sahf
cmp
addb
ret
sbb
add
fsubrs
insb
lods
jp
fiadds
test
xor
pushf
mov
inc
shlb
or
pop
jae
pusha
inc
repnz
in
repz
add
and
and
fildl
push
and
shlb
adc
sbb
pusha
mov
add
and
and
mov
push
inc
rorb
inc
sub
add
ror
test
xor
or
add
fstpt
nop
jp
add
sub
and
cmp
push
hlt
testb
add
sub
and
or
and
in
pop
ljmp
pop
xchg
push
stc
call
pop
mov
pusha
pusha
leave
or
pusha
js
mov
stos
inc
fisttpl
inc
arpl
adc
add
jae
push
inc
inc
bound
cmp
cltd
xor
mov
cld
sub
rcrb
nop
ljmp
cmpsl
int3
fcmovbe
dec
xor
adc
adc
pusha
jns
loopne
jae
icebp
sti
mov
sub
repnz
pop
in
push
sub
mov
mov
sbb
movsb
add
subl
aad
loope
and
xchg
loop
lock
pusha
jle
cs
loopne
test
std
nop
ljmp
push
lock
rep
pusha
pusha
inc
cwtl
icebp
inc
dec
push
pop
pop
imul
rorb
jle
loop
cli
out
sti
scas
push
adc
dec
adc
cmc
mov
sbb
inc
fs
cli
repnz
add
rolb
in
adc
out
jns
sub
mov
lahf
xchg
xchg
mov
ss
shrb
cmp
notl
icebp
imul
shlb
mov
add
push
push
or
dec
and
div
rolb
fcomps
inc
jg
and
adc
scas
inc
add
pop
mov
pop
mov
xchg
icebp
push
lods
or
rorb
pusha
and
lea
test
xor
mov
lcall
adc
sbb
sub
push
insl
dec
leave
mov
jmp
out
imul
addb
cmp
stos
mov
loopne
inc
pusha
mov
loopne
dec
and
outsl
pusha
add
orb
inc
jno
jg
fs
dec
in
push
jl
lods
add
lods
rolb
fiaddl
or
push
mov
and
jns
iret
and
cli
fisttpl
mov
and
out
and
jo
into
mov
lds
cmp
outsb
cmp
mov
mov
ds
add
or
add
rolb
sub
inc
mov
in
and
lods
shl
add
iret
mov
loopne
mov
dec
clc
clc
andb
loopne,pn
sbb
and
add
test
mov
mov
movb
int
sbb
sbb
enter
repnz
stos
pop
mov
push
add
inc
cmp
dec
jo
lea
loopne
rcrb
push
shlb
xor
les
pop
pushf
fwait
ret
and
pusha
add
mov
xorb
cmc
sub
xlat
les
leave
mov
jne
stos
loopne
sbb
dec
pop
add
es
mov
sub
mov
in
loopne
andb
and
dec
sbbl
jno
sbb
push
xor
push
sbb
inc
nop
or
inc
stos
sbb
les
lret
and
scas
in
sbb
adc
orps
ja
xor
dec
ficoms
and
rol
xor
dec
cmpsl
and
sbb
pop
lea
andb
and
movsb
shlb
mov
sbb
pop
push
pop
pmaxub
push
call
add
out
cmpsb
pusha
pusha
fsubrl
push
stc
sub
addb
rolb
hlt
push
mov
loopne
mov
out
pop
bound
stos
and
pusha
mov
pusha
inc
sub
mov
push
mov
xchg
jae
adc
loope
rolb
lea
lahf
rcll
insb
or
mov
fisubs
mov
movsl
or
jle
pushf
jns
mov
es
cmpsb
loopne
iret
push
sbb
add
adc
pusha
and
out
sbb
sub
loopne
pushf
add
xchg
jno
jg
push
test
inc
adc
mov
test
je
add
scas
movsb
add
popl
mov
test
sbbb
xchg
scas
add
pop
stos
pop
daa
movsl
in
mov
pusha
inc
jne
daa
jae
pop
pop
pop
dec
or
lock
sub
inc
and
mov
cld
fnstcw
and
mov
inc
mul
cmp
jg
xchg
and
test
loopne
sbb
xor
cmc
sahf
mov
rcl
cwtl
cmp
addb
loopne
imul
int3
cmc
cmp
rcl
mov
cmp
push
pusha
mov
xor
rcll
rorl
xor
rcl
shlb
test
mov
rcrb
addb
xor
push
std
cmp
mov
in
imul
loopne
popf
xlat
mov
mov
inc
push
add
pop
dec
mov
jl
mov
movsb
loopne
arpl
and
jg
ljmp
andb
popa
cmp
fdivr
dec
sbb
enter
pop
dec
insb
xchg
out
jne
orl
loopne
inc
add
add
and
inc
dec
jo
cmp
jnp
repnz
cmp
push
in
clc
out
addb
and
adc
mov
jecxz
movl
out
adc
mov
pop
or
sub
mov
std
ret
and
sbb
imul
aas
loope
faddp
add
arpl
jns
shrb
inc
hlt
lods
ficompl
add
lahf
cwtl
xchg
cltd
sub
loopne
add
loopne
jb
je
int3
inc
in
jne
jne
add
rol
mov
pop
sbb
lret
mov
sub
mov
int
inc
cmpb
mov
add
loopne
das
popa
add
push
mov
loopne
rcr
and
and
xor
sub
loopne
lahf
mov
add
push
mov
cmpsb
mov
xchg
xchg
pop
mov
sub
sahf
push
mov
daa
xchg
shr
dec
and
adc
lret
loop
mov
andb
and
icebp
xor
dec
data16
fsubrs
sub
and
fnstenv
jg
pushf
push
mov
or
dec
inc
adcl
pop
mov
or
fs
lahf
lcall
js
sub
pusha
in
call
ss
and
jns
or
push
in
push
mov
andb
lret
and
inc
push
adc
shll
adc
cmp
loopne
fmull
jo
jae
dec
andb
pushf
and
xor
shlb
sbbl
pop
stc
std
cli
decb
add
bound
jnp
imul
in
aam
pop
aas
inc
clc
jb
andb
loope
test
sahf
push
dec
lods
add
insl
pop
arpl
pop
mov
sbb
lahf
or
jp
shr
inc
out
popf
cmpsb
addb
movb
movsb
add
hlt
mov
inc
pop
sbb
rclb
and
jg
xor
aad
popf
jbe
gs
ljmp
add
inc
iret
scas
rol
sbb
jne
ss
xchg
xchg
pop
inc
add
fwait
push
cmpsl
push
add
repnz
mov
and
mov
loopne
cmpsb
mov
mov
mov
fdivs
add
andb
sbb
push
loopne
enter
adc
pop
inc
or
dec
out
mov
mov
push
inc
loopne
dec
inc
popf
shl
adc
out
dec
lret
or
fiaddl
out
adc
aad
or
lret
jo
fistps
notl
fisttps
pusha
add
push
adc
notl
and
loopne
lods
add
fdivp
jg
push
cld
mov
fldt
fisubs
jb
xchg
or
loopne
aad
inc
loopne
addr16
nop
loope
test
shlb
rolb
mov
pop
jno
xor
mov
and
sub
jmp
inc
inc
jg
hlt
cmc
sub
add
sub
pusha
movsb
pusha
pusha
andb
sbb
cltd
lea
mov
andl
addb
push
push
outsl
mov
mov
mov
fidivl
jp
mov
mov
mov
and
add
cwtl
sbb
mov
aas
jb
addb
fcmovu
sarl
fstl
jo
fstpl
mov
ror
cmpsl
orl
and
xchg
inc
jnp
inc
popa
or
sbb
ss
sbb
sub
and
cmp
cmp
scas
xchg
or
mov
and
outsl
jo
dec
jmp
cmp
les
loopne
cmp
leave
sub
inc
inc
out
inc
pop
ja
pop
dec
outsb
out
jae
sbbl
cmc
mov
jnp
call
mov
gs
or
shl
jnp
movsb
addb
loopne
push
and
mov
insb
mov
loopne
jg
mov
and
jecxz
sti
loopne
pusha
sub
rcl
out
pop
dec
inc
inc
nop
adc
mov
jbe
cld
mov
inc
mov
cmp
lea
ror
or
subb
mov
mov
inc
add
mov
ret
cmp
xchg
fdivs
sahf
xchg
movsb
inc
xorb
add
lret
pop
divb
mov
test
add
adc
pop
mov
jcxz
mov
mul
sbb
sbb
mov
jnp
ret
lahf
dec
xor
lea
and
leave
dec
fldt
fs
mov
sahf
or
inc
pop
fbstp
pusha
cmpsb
shlb
insb
out
in
repz
lea
xchg
and
iret
mov
cmc
jb
in
ficomps
fstl
shlb
jmp
push
inc
stos
jb
lahf
mov
inc
rcr
cmc
leave
xchg
xor
fldcw
pop
in
divl
ja
adc
pop
popa
scas
and
push
int3
loope
popa
sub
and
popf
movsb
add
setno
inc
pusha
jae
xchg
dec
test
andb
dec
cmp
jge
addb
popf
pop
sub
cli
and
loopne
jmp
adc
cmpsb
addb
movsb
inc
shr
bnd
repz
stos
dec
jb
add
bound
insl
xchg
jmp
ror
sub
test
push
sbb
mov
push
mov
and
test
push
fwait
xchg
lcall
or
or
cltd
pop
pop
xchg
in
xor
xchg
sbb
clc
push
icebp
gs
and
add
into
add
movsl
lds
add
movsl
add
jnp
fisubrl
and
pusha
outsl
int
cmp
bound
fimuls
movsl
pop
sarl
adc
aas
fsubs
mov
pop
xor
inc
loope
repz
inc
xchg
lret
mov
cmp
mov
push
mov
scas
inc
sarb
stos
mov
mov
jmp
pusha
inc
std
or
aaa
and
push
addb
fldt
cmc
xchg
lcall
andb
ret
xchg
aam
aam
hlt
mov
push
xchg
mov
mov
sub
int3
aam
adc
loopne
cmp
push
inc
imul
ljmp
push
in
gs
ja
jno
cwtl
scas
loope
out
fsts
xchg
fwait
ljmp
outsl
mov
or
and
add
mov
or
xchg
andb
repnz
push
mov
pusha
dec
std
xor
mov
xchg
add
mov
jmp
cmovs
add
mov
sarb
adc
and
mov
mov
fs
add
mov
int
pop
out
nop
imul
xchg
cmp
sbb
mov
mov
inc
pop
rcrb
pop
and
inc
jl
dec
sub
lods
mov
inc
add
lcall
into
jg
xor
push
add
add
inc
sub
mov
xor
loopne
testl
mov
and
popw
add
imul
pop
push
pop
insl
add
or
sbb
insb
mov
and
xchg
cmpsl
mov
lahf
in
jge
inc
ret
icebp
cwtl
aad
mov
shlb
pop
js
fcomps
pusha
aad
scas
rolb
popf
xchg
pusha
aaa
mov
mov
pop
sub
les
loopne
dec
mov
mov
pusha
pusha
rclb
xchg
jmp
xor
test
inc
add
jecxz
or
mov
pop
dec
mov
pop
push
out
jo
sbb
cli
jge
enter
or
scas
pusha
loopne
mov
std
pop
sbb
mov
stc
jle
inc
addr16
adc
daa
ret
mov
loopne
orl
mov
inc
rorb
loopne
aam
inc
inc
imul
mov
push
sbb
dec
jns
xchg
enter
inc
faddl
add
cmc
cmc
movhps
inc
shlb
mov
jns
imul
into
movsb
add
jg
out
inc
dec
lods
popf
mov
shr
xchg
push
lret
out
sti
and
and
loopne
ss
arpl
fdivs
jae
adc
xchg
mov
add
and
scas
pusha
add
xlat
bound
fistpll
push
xchg
loope
out
jge
scas
mov
pop
scas
inc
orb
pushf
inc
inc
cmc
aas
push
loop
scas
addb
and
scas
mov
pushf
push
xor
add
pusha
pusha
inc
pmulhw
add
mov
adc
and
mov
rorb
das
test
jbe
std
out
jmp
add
shll
rolb
mov
ffree
dec
cmc
dec
pop
lcall
or
dec
cwtl
imull
ja
ret
out
pusha
loopne
xor
dec
pop
cmpsl
inc
add
andb
dec
shr
lcall
data16
pop
imul
mov
adc
bound
shlb
test
and
xorl
and
lds
and
push
push
pusha
adc
cmp
mov
and
push
addb
pop
mov
loopne
arpl
push
shlb
sbb
repnz
sub
and
add
pop
add
sub
subb
xchg
mov
adc
cmc
mov
repz
fmuls
addr16
mov
scas
mov
popa
shlb
sbb
push
add
sar
mov
pop
xor
in
dec
ds
movsl
stos
xor
mov
push
and
cmp
aam
jbe
push
pop
mov
shlb
cmpsb
addb
and
fcomps
hlt
loopne
jne
inc
add
andb
inc
and
and
and
sarb
lods
rolb
push
add
mov
xor
test
push
in
jp
push
jns
adcl
sub
test
fdivrl
adc
sar
mov
pop
lret
not
lods
pusha
and
inc
and
or
inc
pop
rorb
cld
push
jecxz
aad
and
test
pusha
popa
shlb
pusha
pusha
lods
add
test
mov
xchg
dec
mov
mov
jns
shlb
stos
addb
and
inc
inc
dec
out
je
outsb
mov
loopne
inc
stc
aaa
or
cld
mov
jp
inc
xor
lock
mov
mov
in
cmp
aas
dec
test
ret
dec
scas
ds
icebp
mov
pop
cli
or
xlat
push
call
pop
jmp
test
inc
push
fsubrl
loop
mov
rcrb
mov
adc
mov
inc
bound
jns
xor
int
mov
and
addb
add
stos
sub
pop
lahf
inc
mov
dec
test
and
xchg
xor
inc
push
add
and
mov
in
add
inc
inc
sbb
push
call
mov
jae
dec
xchg
xchg
pop
in
je
mov
jge
push
mov
bnd
ds
xor
gs
sub
pusha
sbb
jbe
cmpsl
pop
into
push
inc
xchg
adc
shrb
mov
pusha
out
mov
dec
jp
test
pusha
jne
pushf
cmc
andl
loopne
and
insb
xchg
fimull
and
mov
add
cwtl
xor
jae
repz
inc
rcll
mov
mov
and
mov
addb
xor
mov
rcrb
add
mov
pusha
shlb
shlb
add
pusha
ss
lcall
loop
fbld
or
inc
decl
in
std
daa
fninit
and
inc
shlb
sbb
inc
pusha
fisttpll
stos
mov
mov
mov
jb
mov
sbb
push
sbb
scas
pusha
subb
int
cmp
test
add
or
pusha
aad
mov
sbb
pusha
loopne
fsubrl
shl
stos
inc
and
inc
cmp
or
dec
stos
addb
sahf
aam
lods
inc
les
popa
das
pop
fwait
push
fs
cmp
jne
fldt
sbb
movsb
addb
push
inc
pusha
cmc
add
popf
test
and
sbb
mov
and
jno
leave
and
push
cmp
adc
dec
in
fs
shlb
jmp
in
popa
divb
scas
loopne
lea
xchg
notb
and
andb
mov
data16
jo
pop
arpl
jo
xchg
in
sbb
addr16
test
stos
cmp
pop
mov
mov
test
popf
cwtl
std
nop
fisttpl
addb
dec
das
xchg
in
lods
inc
dec
lods
nop
xchg
andb
xchg
add
add
notb
in
jo
stos
pusha
loopne
and
cmp
dec
mov
cmpb
xor
movsb
and
sbb
sbbl
lahf
in
out
sub
add
out
popl
mov
mov
cmp
inc
loopne
push
enter
jge
jle
std
out
mov
into
mulb
aad
jle
test
mov
pusha
lret
jp
and
daa
stc
lahf
stos
or
cltd
std
lcall
cwtl
repnz
loopne
dec
shrl
data16
add
inc
mov
inc
mov
pop
push
addb
nop
mov
pusha
loopne
xchg
lret
mov
mov
loopne
stos
sbb
xor
loopne
xor
dec
imul
add
and
sub
aad
or
sarb
jmp
into
push
test
and
pop
jge
push
gs
ret
inc
or
mov
pusha
out
fcomp
pop
popf
popa
mov
xchg
int
push
sub
add
push
in
mov
loopne
and
decb
mov
mov
add
mov
dec
sub
or
add
insl
pusha
and
jnp
test
in
add
sub
movsl
sbb
or
lods
dec
out
pop
decl
orl
stos
adc
pusha
and
lds
xchg
fistl
jb
add
in
pushf
xchg
xorb
xor
pop
xor
mov
test
inc
in
cli
pop
inc
mov
pop
cmp
inc
pusha
adc
add
aas
sbb
rclb
push
into
imul
loopne
negb
push
shlb
sub
cld
cwtl
repnz
stos
pusha
rolb
fists
push
insb
mov
inc
mov
add
