outsl
push
or
pop
push
daa
popa
push
popf
jne
or
xchg
push
fwait
xchg
push
pop
lds
jge
push
cmpsl
push
push
incb
push
adc
push
test
pop
push
add
push
xor
verw
popf
push
jae
push
or
subb
subb
lods
push
xchg
or
push
pusha
clc
add
push
jmp
push
push
pop
mov
or
push
push
xchg
push
out
push
cmp
add
subl
into
push
pop
into
push
jo
and
or
or
push
cmc
lods
push
iret
leave
push
sub
add
push
sti
mov
or
push
mov
or
lahf
add
and
jne
push
hlt
stos
push
cmp
pusha
add
push
shlb
add
enter
imul
jns
push
pop
lods
push
shlb
push
jb
push
xchg
xchg
push
das
mov
push
inc
push
push
fistl
or
mov
push
xchg
lds
push
imul
or
into
push
push
out
add
subl
mov
je
add
leave
push
test
push
in
push
test
insb
jns
or
push
lret
or
cld
popa
add
push
mov
stos
add
sub
add
push
stos
xchg
push
mov
mov
xor
sahf
xchg
push
loopne
mov
or
popf
push
sub
scas
add
lea
arpl
or
scas
push
inc
mov
rolb
push
sar
add
jnp
or
push
push
pop
push
test
addl
dec
lahf
push
add
push
adc
ja
or
push
or
sbb
ret
insb
push
push
scas
push
cmp
push
xchg
imul
cmp
push
jg
push
push
jbe
or
mov
mov
jns
or
or
mov
rdpkru
stos
push
pusha
out
add
push
push
push
int3
push
mov
je
or
jns
or
test
push
push
jle
or
jns
or
mov
testb
xchg
sub
push
or
sgdtl
push
push
pop
mov
lods
stos
push
pop
mov
push
push
test
lock
scas
mov
push
call
push
push
rolb
mov
push
jns
push
notl
push
push
push
push
cwtl
test
push
and
nop
push
jl
push
push
sahf
push
mov
adc
lcall
or
push
das
movsl
push
mov
loope
mov
push
out
mov
or
shrb
jnp
push
fistps
mov
add
pop
push
cmpsb
push
fdivrs
or
mov
pop
jne
or
cmp
add
nop
push
dec
lock
popa
push
jne
push
add
push
addr16
or
mov
or
push
bound
or
into
push
rolb
movsl
add
pop
push
cmpsl
mov
push
mov
or
push
fmul
push
cmp
or
scas
add
push
add
push
add
push
loopne
push
lahf
int3
push
mov
push
pop
subl
mov
push
bound
push
xor
jns
add
add
mov
or
add
enter
xchg
push
idivl
or
push
fs
xor
mov
movsl
add
xchg
push
adc
mov
add
mov
add
push
test
mov
push
xchg
jp
or
xchg
push
shlb
push
cmpsl
pop
push
and
push
xchg
pusha
push
je
push
add
or
jp,pt
and
push
lock
add
or
lds
cwtl
lea
jnp
push
data16
sbbl
push
adcb
loopne
push
sbb
push
dec
pushf
push
jnp
push
mov
mov
dec
jge
or
xlat
movb
jg
or
sub
or
jno
or
mov
push
add
add
xchg
and
mov
or
pop
push
add
or
push
call
xchg
push
add
dec
add
scas
push
sbb
push
add
push
cmp
jns
inc
mov
push
in
push
in
shrl
nop
les
xor
add
into
push
jge
push
or
or
ja
or
arpl
movsb
mov
or
stos
push
cs
mov
call
xchg
push
dec
popa
push
xor
push
imul
or
xchg
push
pop
xchg
inc
ret
push
mov
add
jo
or
mov
push
pusha
xchg
push
and
scas
add
mov
stc
xchg
push
rorb
add
pusha
push
sarl
push
jne
push
andb
inc
mov
xchg
add
push
sbb
push
dec
mov
and
or
push
shrb
or
add
or
mov
push
add
add
xchg
sbb
data16
pop
jle
or
push
out
imul
mov
push
mov
push
out
push
add
call
add
or
jns
or
xchg
inc
add
push
test
jae
pusha
test
push
dec
movsl
push
aaa
mov
push
cs
push
clc
aas
inc
add
push
jno
push
ljmp
or
or
shrb
fs
add
push
mov
push
les
add
or
or
push
and
sbb
sub
push
inc
jg
or
add
cmp
push
shrb
add
clc
and
rclb
insb
push
faddl
add
je
or
mov
add
lea
stc
arpl
out
mov
or
pop
push
push
pusha
push
ss
or
into
push
insb
pushf
push
flds
push
in
xchg
push
ret
mov
push
out
mov
or
js
or
jo
or
mov
repz
push
in
lods
add
mov
push
hlt
mov
dec
jle
or
xor
add
dec
jmp
add
pop
push
cwtl
inc
out
add
push
mov
xchg
push
and
cwtl
push
nop
test
mov
or
shlb
ret
or
pusha
push
fcmovnb
push
lock
or
lds
and
push
jl
push
sub
push
into
stos
push
adc
dec
jb
scas
mov
or
jg
mov
push
cmp
or
add
push
loope
push
add
mov
add
push
push
jb
add
test
push
pop
iret
lock
imul
pop
push
lock
push
je
flds
lret
jns
or
jae
or
push
or
xchg
push
push
mov
or
xchg
mov
push
ja
push
lret
or
mov
mov
insl
insb
push
jmp
push
push
sahf
push
loop
push
lods
jg
or
push
push
push
mov
or
jg
add
scas
push
push
scas
push
dec
subb
pop
lret
add
push
inc
jne
or
lahf
push
xchg
or
mov
inc
pusha
push
rcrb
insb
shll
add
push
fiadds
push
add
cmpsl
push
cmp
or
cmpsb
push
or
push
rcrb
test
or
outsb
push
in
mov
or
mov
push
add
or
or
push
stos
outsb
push
stos
into
push
sub
push
push
add
push
nop
mov
add
rolb
shrl
lret
mov
push
add
push
sbb
or
xchg
push
add
sbb
lock
add
add
push
dec
mov
or
push
dec
push
ljmp
ss
push
mov
loopne
lock
mov
or
imul
iret
stos
push
xchg
or
subb
mov
or
int3
push
insb
js
or
ret
push
call
push
std
xchg
push
rcrb
dec
leave
push
inc
jb
add
or
mov
leave
jb
or
test
push
sbb
or
push
xchg
nop
push
into
imul
mov
push
shrl
xor
or
push
iret
lea
shrl
or
test
adc
push
cld
cmpsb
push
add
push
mov
sahf
push
fcmovbe
push
enter
jne
push
movsl
movsl
push
add
push
and
lcall
lock
add
push
xchg
pop
push
fsubs
or
shrl
mov
push
jbe
push
lret
xchg
push
stc
movsl
push
mov
push
mov
sub
add
iret
push
and
int
or
push
push
jl
or
push
in
jne
or
push
add
push
loope
push
les
or
dec
add
stos
push
dec
pushw
movsb
jbe
or
mov
push
lcall
add
or
lret
push
xor
or
cmpsl
push
pusha
in
es
xchg
dec
pusha
push
lock
or
subb
xchg
push
stos
mov
push
add
nop
push
fdivrs
or
push
push
cmp
add
push
jl
push
push
xchg
push
cli
xchg
push
jmp
push
loope
push
xor
popa
add
xchg
add
movb
mov
cmp
jb
push
rcrl
jno
push
inc
inc
mov
add
jb
or
outsb
push
inc
int
or
stos
push
jo
jecxz
roll
or
enter
mov
push
rorl
push
je
mov
mov
add
lds
loope
push
ret
or
fs
mov
push
push
xor
mov
push
pop
imul
gs
pop
test
or
push
push
or
or
mov
rclb
or
mov
add
mov
add
les
imul
xchg
push
pop
xchg
push
clc
cmp
sbb
add
push
inc
jo
or
push
loopne
mov
mov
scas
push
ss
push
adc
sub
push
aas
scas
push
insl
into
push
pushf
test
mov
lahf
push
stos
mov
testl
lea
or
push
cmp
or
and
push
lahf
push
add
push
rolb
clc
add
scas
add
jp
push
ret
mov
push
addl
push
enter
aas
shrb
pop
movl
gs
movsb
push
cmpsb
push
or
or
aaa
addl
add
push
sub
push
fwait
mov
or
push
fdivl
or
push
add
shrl
insl
push
pop
push
or
shrl
hlt
shrl
xchg
in
fwait
push
or
dec
push
pop
push
ja
push
and
push
inc
mov
or
push
and
lret
push
pushw
mov
push
xor
push
or
cmpsb
push
xchg
mov
sbb
or
dec
add
cmp
push
cmp
or
push
pushf
pop
push
xor
push
sbb
push
imul
ds
or
mov
push
loopne
addb
movsl
push
xor
addl
jno
or
pop
popf
add
int3
push
xor
iret
add
and
or
mov
or
shrb
out
mov
push
subb
push
or
push
push
subb
mov
push
dec
push
mov
push
push
insl
push
cld
ja
add
mov
jo
jne
push
test
gs
shlb
or
xchg
push
lods
mov
push
stos
mov
fwait
lea
cmp
push
inc
movb
std
cmp
or
push
filds
push
pop
pusha
push
and
add
subb
mov
push
inc
dec
nop
add
mov
les
push
pop
gs
or
out
add
outsl
push
or
push
pusha
ja
add
movsl
push
pusha
scas
push
and
icebp
push
out
xchg
push
push
push
sub
or
outsl
push
std
jb
or
push
xor
push
cli
imul
lret
or
push
imul
roll
hlt
mov
or
test
fsubrs
mov
or
or
jne
push
mov
push
jns
push
push
mov
or
jne
or
push
cld
push
push
push
stos
push
shrl
arpl
and
or
mov
or
add
pop
push
das
subl
test
push
dec
test
nop
enter
xlat
add
ret
mov
into
xchg
inc
imul
push
mov
or
pop
push
sbb
xchg
mov
push
das
bound
in
pushf
push
mov
sub
cmp
push
mov
mov
out
movsb
push
pop
lods
push
jge
push
sub
push
sbb
lock
out
flds
xor
push
sbb
push
ljmp
or
push
inc
call
push
sub
or
arpl
jne
push
test
pop
add
enter
push
or
or
or
lods
push
pop
push
pop
jb
or
push
push
pop
push
add
push
stc
mov
push
loope
push
dec
data16
add
cltd
push
mov
and
pop
insb
mov
pushf
mov
or
xchg
push
push
push
nop
gs
jne
push
adc
pop
mov
lret
popl
insl
shrl
sub
push
sub
xchg
push
insb
push
jbe
push
out
push
ret
or
les
in
xchg
pusha
mov
or
les
clc
xchg
jmp
or
lods
push
es
push
js
in
push
andl
push
cwtl
push
faddl
lret
mov
or
pop
push
cmp
or
push
fadds
push
mov
add
push
loop
push
or
push
cli
jae
or
mov
push
push
push
push
clc
cmp
push
pop
gs
pop
mov
or
nop
push
add
insb
push
push
add
push
hlt
mov
or
push
lahf
arpl
hlt
jae
or
js
or
or
pusha
push
fmul
push
repz
insb
into
push
mov
mov
or
pop
mov
or
push
mov
pop
push
xchg
xchg
push
adc
push
jb
push
mov
mov
pusha
testl
stc
push
push
and
push
sti
insb
push
in
push
inc
push
sub
testl
jns
push
shl
or
or
fs
stos
jo
or
push
push
jnp
push
jo
push
add
mov
or
mov
push
mov
cwtl
push
shlb
xor
or
sahf
fildl
mov
push
scas
mov
notb
or
pushw
sub
mov
or
push
xchg
shrb
test
push
fidivrl
or
push
lcall
or
push
ret
mov
xchg
push
ret
mov
push
sbb
push
adc
push
mov
or
jmp
push
cmp
push
inc
lea
loop
push
test
xchg
push
bound
or
or
mov
xchg
add
push
or
push
add
push
adc
or
outsl
push
push
test
or
push
outsl
insb
push
xchg
xchg
xlat
jg
or
push
stos
push
push
lea
push
push
lret
ds
push
nop
les
or
push
cmp
jmp
pop
push
scas
test
and
push
push
int3
outsl
push
loopne
cmp
push
aad
push
and
push
movsb
enter
mov
mov
push
push
xchg
mov
push
mov
push
fs
or
shrb
mov
push
mov
mov
push
xchg
inc
push
push
subb
ret
push
insb
pushf
push
lods
iret
push
mov
bound
pushf
lea
pusha
pop
push
sub
push
stos
xchg
push
aad
push
xchg
lods
push
pop
mov
push
mov
jle
or
outsb
push
jmp
push
insb
shrb
mov
push
sbb
shrl
inc
mov
or
mov
xor
fistps
push
andb
nop
ja
or
enter
push
push
enter
lock
sub
lret
mov
mov
pushf
jb
or
push
xchg
pop
add
push
cmp
push
sub
or
push
nop
loop
add
xchg
daa
pop
xlat
imul
mov
push
inc
jns
add
inc
mov
and
push
sbb
add
fisubrl
add
jle
or
push
rclb
or
push
jbe
push
or
or
subl
dec
subb
addr16
mov
push
xchg
addr16
lahf
pop
push
inc
iret
mov
pop
pop
push
enter
jno
or
lds
or
or
push
add
or
push
fisttpl
push
repz
push
adc
push
inc
test
or
cltd
push
imul
nop
cs
xor
push
test
or
mov
or
add
int
or
jl
or
insl
push
and
push
sbb
push
movsl
stos
push
sbb
push
in
ret
dec
iret
pop
dec
jge
or
mov
push
pop
push
jbe
push
add
or
or
push
call
or
pop
push
dec
lods
push
mov
shrb
mov
or
xor
fisubrs
push
xor
push
ja
push
enter
push
jge
or
xchg
push
loop
push
out
push
test
push
mov
subl
inc
mov
push
or
ja
push
cwtl
subl
push
push
js
fadds
lcall
pop
imul
xchg
je
or
pusha
push
mov
int
or
popa
pop
or
mov
or
imul
repz
add
mov
insl
add
add
or
push
jno
push
shll
or
mov
push
out
push
in
jp
or
or
lcall
push
iret
push
adc
or
pop
push
sub
or
mov
push
lcall
or
add
push
lret
or
push
dec
ret
sbb
mov
or
mov
add
and
pop
movsl
cwtl
push
cmp
push
mov
push
out
push
pop
pop
push
add
jbe
or
into
push
cwtl
enter
imul
push
push
enter
mov
test
or
push
leave
subl
jl
or
push
mov
push
push
idiv
push
mov
cmp
or
mov
or
jae
or
cmp
add
xchg
and
xor
push
push
sub
imul
orl
pushw
test
push
aaa
int3
push
addb
test
push
push
pop
push
push
mov
or
jbe
or
push
pop
mov
or
push
mov
jnp
mov
push
add
or
mov
jne
push
mov
push
int
push
loope
push
mov
xchg
push
sbb
push
pop
ret
push
mov
jp
or
shrb
and
ja
mov
or
xchg
push
leave
push
and
rolb
in
push
inc
outsb
push
pop
push
call
jno
add
mov
clc
push
sub
or
xchg
push
lea
push
dec
cmpsl
push
mov
js
or
xchg
push
mov
push
jle
push
testl
or
imul
js
add
lea
ffreep
push
adc
push
add
push
push
inc
shrb
fistps
or
xchg
movl
mov
push
pushf
or
or
pop
push
add
insl
push
pop
mov
push
cld
in
lods
mov
and
xor
and
push
add
inc
sbb
gs
out
add
add
lods
cld
flds
pop
mov
inc
fwait
jmp
adc
xchg
cmpl
pop
push
repz
lahf
pop
pop
int
mov
addl
sti
push
leave
divl
mov
js
add
push
add
sub
gs
adc
mov
mov
add
dec
jge
mov
test
out
xor
mov
adc
ja
enter
mov
jne
mov
fisubl
mov
jmp
dec
stos
stos
and
jge
or
and
add
addr16
sbb
or
rcl
xor
inc
int3
rcr
mov
lock
in
jae
pushf
mov
push
data16
bound
cmp
mov
push
add
push
pop
cmc
cmc
cmp
add
mov
nop
fsubrl
lods
addb
add
mull
mov
add
idiv
jg
gs
dec
test
push
pop
jnp
add
in
sub
popf
outsl
dec
inc
sub
cltd
stc
mov
out
int
push
add
adc
add
add
adc
add
inc
and
les
add
cmp
mov
lret
leave
fldl
or
add
ret
adc
addl
pop
pop
inc
mov
cmp
dec
push
and
xchg
out
fistpll
xchg
dec
push
push
stc
dec
push
lea
adc
xor
in
adc
mov
mull
add
scas
jge
xchg
outsb
arpl
fnstsw
fildl
or
xor
aad
xor
mov
mov
xlat
jbe
sub
das
scas
xchg
inc
jecxz
xchg
in
jl
scas
cli
repz
add
imul
out
insl
or
fwait
adc
sbb
imul
cmp
mov
pop
jp
add
jnp
cmp
xchg
jo
rcl
adc
xchg
aas
test
imul
test
jo
ficomps
jo
fldt
and
sub
aam
popa
lds
add
pop
pop
xor
aas
sbb
mov
inc
shl
pop
roll
add
lret
xlat
and
jbe
or
push
dec
scas
inc
hlt
lret
add
roll
cmc
nop
ret
lock
testb
push
jle
push
jecxz
jns
les
mov
sub
push
mov
push
push
push
push
push
push
push
push
push
push
push
notrack
mov
pop
inc
imul
cmp
jne
push
push
call
cmp
je
mov
lea
push
push
push
call
push
call
mov
cld
cs
lea
xchg
or
xchg
lea
lock
je,pn
pop
add
es
cs
add
add
push
xor
add
cmp
or
add
mov
jns
lds
jae
iret
jmp
aaa
mov
call
adc
inc
add
nop
xchg
add
add
push
cs
cmp
cmc
xor
mov
lea
int
dec
addb
adc
loopne
jecxz
add
sub
xor
dec
movsb
nopl
sbb
clc
std
sbb
add
push
fincstp
push
sub
sahf
dec
out
outsl
jne
test
push
mov
dec
sbb
hlt
mov
add
out
jmp
and
fdivr
and
in
inc
inc
xchg
icebp
ror
push
fs
jb
mov
inc
in
cmp
int3
cmp
add
inc
pop
dec
sub
bound
stos
mov
and
fistps
fisttpll
sbb
imul
fdivs
add
mov
mov
ds
dec
pop
adc
push
aam
testl
test
add
pop
pop
lea
add
lahf
inc
add
pop
addl
or
add
xchg
shll
lret
je
mov
xchg
jp
push
sub
out
sub
fdivl
fwait
or
jmp
lods
push
cmpsl
push
add
add
mov
or
push
aad
scas
jg
add
add
jnp
mov
mov
pop
scas
xchg
mov
jp
add
filds
pop
push
inc
bound
sbb
clc
loope
pop
nop
adc
notb
add
sbb
and
addb
scas
pop
and
push
xchg
dec
adc
enter
in
mov
js
ret
aaa
addr16
js
xtest
f2xm1
mov
cs
xchg
es
push
add
push
mov
mov
or
jno
pop
sar
sbb
mov
divl
test
sti
cmp
fcoml
std
dec
push
ss
cmp
jge
xchg
stos
ljmp
mov
stos
xchg
fbstp
push
add
sbb
sub
dec
pop
imulb
cwtl
cwtl
jp
icebp
loopne
setb
push
cmp
imul
int
movsb
pop
dec
mov
mov
shr
outsb
adc
push
xor
adc
bound
xchg
xchg
push
mov
jge
cmovp
jg
stos
outsb
mul
add
std
das
roll
cmc
dec
lret
mov
mov
add
inc
aaa
jmp
add
test
push
scas
outsl
mov
pop
repz
push
inc
add
cmp
add
idivl
adc
or
mov
jmp
xchg
mov
mov
pop
jmp
adc
adc
push
fwait
pop
mov
add
mov
std
lcall
cld
xor
loopne
sub
or
add
sub
mov
xor
add
fwait
sub
movsl
les
xorl
loopne
or
mov
inc
int3
sti
ret
jno
sub
push
fs
xchg
mov
inc
ljmp
sbb
push
xor
in
adc
jno
jnp
insb
fiadds
mov
mov
cmpsb
cmp
jne
hlt
cmp
pop
pop
jge
cmp
rorl
or
xor
add
and
mov
imul
out
test
xor
add
xor
push
add
stc
mov
dec
xchg
xchg
sbb
cmc
addl
mov
call
xor
cmc
imul
cmp
push
sbb
push
add
add
pushf
xor
cmp
adcl
mov
cmp
mov
cli
test
or
mov
idivb
loope
mov
imul
xchg
jno
mov
xchg
add
sbb
frstor
cltd
addl
xchg
lods
dec
sub
xchg
gs
incb
lods
pushf
bound
or
or
into
xor
cmp
call
mov
shl
push
or
xchg
mov
mov
dec
out
push
sahf
sahf
mov
jns
add
insb
mov
inc
cli
mov
xlat
out
sub
outsl
movl
out
je
hlt
pop
cmp
iret
mov
mov
gs
addl
add
stos
and
mov
insb
insl
jo
pop
pop
out
jo
lcall
bound
ret
cmpsl
add
int3
dec
fistpl
ret
xchg
pusha
add
aad
aam
jo
sub
add
jl
test
lcall
aam
mov
push
ret
ljmp
aam
popa
lea
sbb
dec
neg
cmpsb
sub
mov
mov
or
jo
push
add
xchg
fstpl
push
and
push
stos
shlb
xchg
xor
push
add
pop
push
ss
push
mov
mov
cmp
pop
popf
mov
in
add
call
cmp
jnp
sbb
popa
orl
jg
and
es
mov
add
jb
std
icebp
add
push
add
movsl
xor
add
sbb
aam
test
pop
leave
xchg
es
dec
dec
push
push
pop
mov
cli
dec
mov
lahf
ret
push
add
lods
xchg
rorl
les
sbb
fcoms
add
add
inc
movsl
mov
adc
cmpsl
fdivrl
sbb
lea
sbb
add
insl
neg
lcall
test
insb
shlb
lds
mov
cmpsl
xchg
add
ja
cmp
jbe
xlat
sbb
icebp
and
in
sbb
mov
add
out
pop
es
lods
mov
adc
bound
add
jns
fdivrl
insb
mov
addb
sbb
jae
xchg
inc
movsl
imull
mov
mov
xchg
ljmp
sub
push
jno
mov
cmp
scas
push
jecxz
cltd
outsl
cmp
daa
addr16
sarb
mulps
mov
add
lahf
mov
clc
mov
push
jo
add
mov
pop
aam
mov
add
or
or
int3
cwtl
mov
clc
add
sub
loop
xchg
data16
lods
sti
xchg
sbb
addb
mov
push
xchg
xchg
mov
add
add
out
jno
aas
movsb
add
pop
mov
jbe
ss
mov
push
jle
jecxz
pop
xchg
xchg
jb
jbe
pushf
mov
pop
cli
cmpsb
jbe
mov
outsb
in
leave
pop
jecxz
arpl
outsb
mov
ds
and
push
push
icebp
addl
inc
out
in
aad
gs
data16
add
add
adc
daa
mov
add
aas
loope
xor
test
xlat
icebp
lcall
xchg
cld
pop
dec
insb
pop
cmpsb
mov
das
jp,pt
xchg
or
cmp
imul
pop
sbb
frstor
dec
xchg
dec
jge
cltd
ucomiss
mov
add
stc
inc
negb
mov
std
in
jne
xchg
sbb
cwtl
lods
xor
sub
es
xchg
xchg
sub
dec
pop
and
sub
mov
lds
jno
cmp
adcl
in
shlb
mov
mov
jmp
lock
sbb
pop
jo
sub
repz
mov
insl
push
push
push
sub
ja
and
xor
lahf
or
jecxz
adc
int3
pop
jno
pop
dec
cmp
sbb
adc
sti
mov
cmpsl
or
mov
add
pop
hlt
in
mov
hlt
jecxz
divb
popa
insb
in
jp
pop
xchg
or
in
test
arpl
js
jl
add
add
sub
cs
shl
repz
sbb
inc
mov
mov
sbb
addb
pop
sub
cmp
sub
jp
and
lahf
xor
pop
mov
add
repnz
pusha
add
ljmp
shrl
cmp
out
addl
pushf
or
adc
ss
xchg
xchg
dec
xchg
or
or
test
mov
ss
inc
mov
dec
ljmp
scas
dec
sbb
add
adc
xor
icebp
xlat
nop
lods
push
dec
and
je
add
xor
aad
pop
xchg
fisubs
xor
mov
nop
testl
imul
cmp
xchg
lret
mov
add
dec
jmp
xor
hlt
mov
mov
add
cmp
fcomp
push
jno
clc
push
push
mov
cmpb
xor
popf
stos
loope
jg
add
ja
xlat
cmp
cmp
xor
xchg
push
xchg
imul
xor
or
sub
jp
fdivrl
decb
adc
add
ljmp
add
cmc
jno
popa
pusha
add
roll
add
push
adc
jl
add
fwait
mov
mov
call
pop
xchg
in
push
iret
out
pop
pop
mov
lods
mov
mov
xchg
in
leave
cmpb
lods
add
lods
pop
lret
add
jecxz
add
ja
imul
mov
xchg
add
xchg
ss
dec
pop
and
cmp
add
xchg
jp
add
stos
push
add
or
and
pop
dec
adc
mov
add
fcomp
mov
dec
incb
mov
adc
inc
add
jg
lcall
adc
adc
pop
loopne
jle
jnp
js
dec
mov
test
in
push
inc
adc
repnz
in
out
inc
out
adc
popf
mov
cmpsl
adc
int
add
dec
lret
add
xchg
jne
imul
leave
pop
sub
push
add
mov
cmp
add
lock
sbb
sub
mov
jne
add
jno
adc
jge
jno
leave
in
fmull
cmpsb
fidivs
push
xor
cmp
daa
mov
inc
push
dec
push
test
mov
xorl
mov
int
add
sub
lock
push
mov
ret
xchg
xchg
ds
mov
xchg
or
testl
test
inc
sub
jl
pop
stc
inc
repnz
lcall
mov
aaa
stc
stos
jns
test
xor
or
push
push
jns
sub
mov
jmp
into
jbe
movl
imul
xor
push
scas
mov
sub
add
jns
push
add
insl
add
scas
loope
nop
out
mov
fsubs
add
xor
cmp
lock
adc
push
mov
out
jmp
aas
pop
fisubs
mov
pop
fdivp
fmul
adc
out
repz
xchg
add
add
loop
cmp
loopne
addl
dec
adc
adc
ja
imul
add
cltd
mov
gs
dec
fcoms
inc
cmp
negl
addl
sbb
pop
xor
movsl
aaa
inc
inc
add
imul
sahf
pop
popf
xor
negl
cmp
inc
mov
data16
cmp
out
lock
adc
push
lods
repnz
dec
pusha
add
add
mov
out
enter
sbb
cmp
jbe
mov
pop
or
pushw
pushf
iret
sub
ret
loop
jo
daa
fxch
pop
ss
jl
xchg
in
inc
add
orl
inc
mov
push
push
push
push
pusha
add
push
rolb
mov
mov
in
cmpl
pop
sbb
leave
or
add
sbb
in
add
dec
mov
fdivrs
mov
jle
aaa
cwtl
sub
xchg
sub
lods
jae
xor
and
imul
lock
xchg
adc
lsl
cmp
xchg
bound
dec
mov
ljmp
lods
push
add
subb
add
icebp
std
adc
fstpl
sarl
push
addr16
mov
stos
xor
bound
mov
add
cmpsb
xchg
roll
scas
inc
add
push
cmp
dec
int
mov
sub
cmp
push
add
push
cmpsl
xor
lahf
cmpsl
test
test
xchg
pop
push
adc
dec
cmp
mov
out
dec
lret
push
mov
rcrb
sbb
fs
add
lret
jns
repz
add
insb
dec
movups
adc
addb
pcmpeqb
rorl
enter
add
mov
push
je
sbb
cmp
test
xchg
imul
cltd
negb
mov
add
jns
add
fcmovnb
fistl
push
xchg
mov
aad
sub
cld
or
pop
sti
adc
lods
test
sbb
add
fcoml
or
mov
xchg
jns
jmp
scas
or
addl
jb
dec
cmpsb
in
roll
add
adc
jge
pop
mov
cmpsl
es
test
mov
xchg
loopne
es
or
in
xchg
hlt
out
cltd
dec
rep
mov
and
imul
out
mov
add
pop
cmp
push
add
push
add
jnp
lret
mov
lods
jne
shrl
rep
adc
inc
pop
mov
mov
sub
sub
rcrb
insl
insl
sub
loop
mov
movsb
dec
and
fld
dec
mov
notl
addl
adc
pop
xchg
xchg
into
hlt
sub
stos
imul
sbb
fcomps
sbb
add
mov
les
add
adc
push
add
int3
enter
ds
mov
stc
addb
add
daa
pushw
lret
add
jb
or
aaa
push
call
je
inc
add
insb
mov
mov
sbb
mov
jo
rcl
faddl
test
inc
pop
adc
in
cmp
sahf
dec
xchg
rorb
inc
push
fs
sub
or
add
fistpl
das
add
and
and
test
add
ljmp
push
fbstp
add
cmc
sbb
cmpsl
jp
repz
out
xchg
js
iret
lahf
mov
add
add
pop
pusha
add
sub
mov
dec
insb
out
cwtl
inc
mov
push
fdivrs
cltd
dec
aaa
ja
pop
lea
jmp
ja
xchg
call
jmp
es
dec
mov
xor
ja
xchg
adc
fistpll
or
jae
data16
ret
fs
pop
push
fcom
fnstenv
mov
fucomip
sbb
lcall
xchg
dec
cli
cmp
mov
xor
adc
mov
aam
jmp
outsb
dec
mov
loope
xchg
inc
add
mov
mov
and
addb
cmp
mov
lcall
lods
dec
std
fdivr
mov
lea
cld
popf
jbe
mov
mov
out
add
mov
push
fiaddl
fidivl
add
aaa
ds
lret
xlat
and
cld
pop
cmp
xchg
pop
mov
cmp
lds
cld
lret
shr
or
add
outsb
rcrl
cld
cwtl
idivb
test
add
in
adc
in
add
pop
pop
rclb
and
and
jne
lret
popf
pop
xchg
call
sub
adc
inc
aaa
int
add
sub
scas
pop
xchg
jg
xor
mov
fidivrl
imul
out
fadds
and
jl
push
add
enter
inc
jge
leave
test
adc
and
pop
xor
fcmove
aam
out
divl
or
out
into
adc
adc
adc
mov
xor
push
negl
jbe
add
sub
jecxz
inc
mov
mov
mov
mov
in
cltd
dec
adc
mov
pop
fidivs
mov
rolb
inc
shrl
shlb
cmp
les
add
out
sub
mov
aaa
test
cmp
cltd
jl
mov
sub
imul
aam
in
outsl
ja
push
lret
inc
ficoml
inc
cwtl
cmp
add
dec
xor
mov
repz
push
mov
in
fiaddl
rcr
cmp
pop
fwait
hlt
adcb
fdivs
pop
rorl
xchg
or
mov
xchg
mov
xor
insb
fs
sbb
add
and
addl
mov
cmp
dec
xchg
xor
mov
and
mov
fnsave
add
mov
adc
pop
mov
movsl
out
pop
adc
shlb
lds
je
sub
in
pushf
jle
pop
sub
xchg
jne
or
add
push
ja
dec
push
add
xlat
push
call
addb
mov
movsl
mov
add
sahf
mov
fs
loope
push
test
jbe
pop
inc
add
fsts
add
pop
and
int3
sahf
js
imul
arpl
daa
push
push
sub
push
xchg
sbb
movsl
movsl
sbb
add
roll
and
in
add
jns
jnp
lock
out
mov
jbe
dec
enter
mov
add
push
rol
sbbl
mov
jecxz
mov
sub
lods
pop
jmp
dec
cmc
or
imul
jnp
pop
jb
out
inc
add
rorl
jl
push
add
jge
repz
xchg
push
and
sbb
add
cmp
insl
addl
and
cmp
mov
push
add
sti
mov
sub
ljmp
inc
add
cld
mov
add
fwait
add
mov
xchg
pop
scas
nop
pusha
add
vandps
cmp
fisubl
popf
rcll
sub
push
stc
ret
sub
aad
fsts
dec
psrlw
add
push
mov
aad
mov
jp
xchg
mov
dec
in
sbb
sahf
jnp
add
inc
fs
ja
dec
incb
cli
insb
cld
mov
mov
push
arpl
push
add
lahf
fsubl
add
jmp
and
cs
xchg
push
xor
xor
jmp
mov
leave
loopne
data16
lods
mov
push
insl
aam
sbb
push
mov
inc
js
loope
pushf
xor
loopne
cmpsl
lea
aad
jae
sbb
cmp
ficoml
pop
cmp
xlat
mov
add
pushf
fcompl
sub
cmpb
add
xor
cmc
xor
mov
dec
test
inc
and
shrl
lcall
outsb
fnstcw
cmp
sub
inc
add
lods
jmp
sahf
test
cmp
xorl
iret
add
ficompl
add
cmp
rorb
shl
sub
arpl
jmp
in
popa
fcompl
jno
addr16
and
pop
push
push
sbb
sti
call
add
in
pusha
add
mov
jb
inc
in
loope
xchg
negb
stos
xor
in
jns
cmp
jbe
sub
jns
fildl
pop
jecxz
ds
adc
lea
add
mov
in
or
add
loope
adc
in
push
mov
mov
int3
rorl
into
mov
mov
lahf
xor
sbb
dec
sbb
mov
popf
xchg
add
mov
add
sub
add
xchg
xchg
test
bswap
call
mov
mov
add
je
sbb
sub
aas
xchg
sti
or
or
stc
mov
test
loope
mov
xor
xor
add
xor
push
inc
lcall
jmp
fs
rcl
sti
sub
sub
dec
pop
xor
movsl
add
and
int
das
pushf
popa
or
ret
sub
loopne
jnp
mov
and
xchg
mov
adc
or
nop
pop
cmc
or
inc
mov
stos
divl
pop
addr16
scas
lret
and
mov
mov
insl
pop
dec
mov
and
filds
push
add
dec
add
ja
adc
leave
stos
addb
mov
notb
cmp
or
js
popa
sbb
icebp
mov
add
xor
pop
scas
aas
dec
sbb
lret
dec
jae
in
outsl
xchg
mov
leave
push
mov
das
mov
dec
add
jnp
int
push
push
lods
imul
rcpps
mov
cs
sbb
loopne
sub
xchg
push
arpl
inc
add
and
push
add
negl
cld
addl
shl
or
jl
cmp
outsb
sub
jecxz
mov
xchg
dec
loop
and
sub
stc
imul
xchg
fwait
call
ds
mov
movsl
jno
mov
and
sub
and
rclb
cs
add
scas
roll
rclb
jmp
stc
or
inc
lret
cmp
add
sha1msg1
mov
mov
cli
xor
popf
mov
adc
faddl
xchg
jnp
cltd
pop
inc
loope
cli
mov
test
dec
inc
add
adc
add
std
cmp
loop
rcrb
add
xchg
dec
push
fwait
movsb
arpl
and
dec
pop
mov
add
fwait
mov
jb
and
or
loop
add
add
pusha
add
addr16
mov
mov
addb
loope
aas
or
stos
cmp
repz
xor
push
test
lahf
mov
xor
mov
in
icebp
outsb
inc
add
mov
mov
sbb
jb
scas
sub
fadds
mov
out
repz
adc
jno
xor
loop
pop
ficomps
enter
fcompl
cmc
or
mov
mov
into
add
scas
mov
adc
sbb
xor
gs
aad
pushf
pushf
in
sub
jnp
add
mov
popa
inc
add
mov
xchg
xor
mov
and
aam
aas
cmpsb
dec
into
loop
pop
ds
lret
fidivs
add
push
add
pop
push
add
add
sbb
cmpb
enter
lea
loope
fisubl
push
add
adc
push
add
pcmpgtw
cli
xchg
lahf
ficoml
dec
xor
inc
push
push
iret
jmp
rclb
and
cli
ret
out
out
push
insb
add
dec
cmpsb
stc
popa
out
gs
sbb
and
dec
enter
in
sub
insb
clc
popf
cmpsl
dec
and
mov
jp
in
mov
icebp
sub
ret
addb
add
sub
push
push
dec
bound
popl
loop
test
incl
adc
and
test
in
sbb
testl
sbb
js
hlt
fstpt
dec
les
stos
adc
push
aam
cmp
xor
cmp
bound
lcall
sub
add
hlt
mov
idivb
inc
add
sub
test
inc
xor
imul
clc
push
lcall
mov
cs
js
mov
push
add
roll
out
in
fwait
push
insl
call
fs
and
mov
std
add
aam
adc
xchg
hlt
lods
lcall
add
imul
xchg
cmpsb
push
jg
lcall
xchg
xchg
enter
hlt
hlt
push
xchg
sahf
imulb
cmp
in
enter
lret
movsb
pop
xor
lahf
push
lods
leave
enter
dec
pop
loope
movsl
push
dec
push
sbb
pop
cltd
inc
sbb
fidivl
out
pop
std
shll
rclb
lea
dec
add
sahf
daa
cmc
fistpll
add
adc
dec
testl
mov
sub
add
dec
cmp
mov
stc
pop
mov
cwtl
popl
out
idivl
adc
push
ljmp
je
cmp
repnz
sti
imul
cmpl
cs
jecxz
flds
call
sub
cs
dec
mov
gs
in
into
mov
loop
pop
xchg
inc
incl
push
out
mov
lret
mov
iret
out
movsb
bound
lock
add
add
add
adc
push
adc
lods
test
cmp
mov
jp
push
imul
bound
sub
mov
xor
push
add
add
pop
jle
insb
cmpsl
dec
jnp
cmp
enter
xor
xchg
adc
jle
push
ljmp
loop
mov
sbb
imul
popa
jl
add
iret
jl
mov
add
data16
test
aad
test
cwtl
inc
ja
ja
and
mov
andb
and
cmp
sar
mov
leave
sbb
test
adc
sub
movsb
sti
or
insl
add
mov
cmpsb
xor
fs
fwait
stos
in
int
add
add
xchg
inc
add
shll
test
sub
push
or
push
push
add
mov
insb
shlb
scas
mov
xchg
add
jl
shrb
std
cltd
jo
push
fcmovu
and
xor
adc
add
stc
push
xchg
mov
cmp
xor
fisubs
add
repz
push
push
das
xor
fs
je
sbb
rorl
aam
add
cmp
mov
mov
pop
cmp
loopne
add
add
mov
cli
jle
jl
stos
xchg
fwait
jle
test
xor
repnz
js
test
rcrl
aam
mov
test
inc
dec
out
adc
push
xchg
xchg
loop
pop
push
push
pop
xchg
mov
adc
xchg
ffreep
repz
adc
imul
jecxz
mov
dec
pop
mov
je
xor
dec
fs
jb
inc
add
out
or
ljmp
adcb
and
pop
fwait
mov
mov
inc
add
cmpsl
out
sbb
mov
out
mov
push
adc
cmp
addb
xchg
aad
jno
sub
fisttpl
push
pop
dec
mov
mov
add
or
daa
inc
and
daa
cmp
mov
dec
loopne
out
sub
add
xchg
loop
addb
add
orb
enter
jb
cmp
sub
stc
stc
sti
and
cmpsb
cmp
sti
stos
data16
aad
xchg
mov
pop
dec
js
lods
loopne
into
cmpsl
pavgb
mov
inc
jo
xlat
fidivl
xchg
fsubl
mov
sub
and
insb
xor
cmp
call
push
test
jg
push
cltd
jmp
jle
xor
push
push
or
pop
sti
cmpsb
out
test
and
mov
idivl
add
jmp
or
cs
into
aaa
and
add
mov
negb
pop
mov
add
lods
dec
aaa
inc
rcl
push
dec
xchg
fnstsw
out
test
mov
sti
adc
fbstp
lret
repnz
imul
jg
lods
stos
fidivl
pushf
jmp
test
mov
insb
xchg
js
sub
cmp
jp
cltd
lods
stc
int
xchg
xchg
jmp
test
adc
bound
outsl
idiv
xor
fsubs
mov
cltd
pop
aad
repz
inc
adc
or
push
push
sub
out
aam
add
adc
divb
sub
jbe
dec
je
cmpl
call
push
and
jno
icebp
jns
stc
lcall
pushf
lds
lods
jle
mov
cld
dec
shl
dec
iret
cld
xchg
hlt
int3
inc
cld
adc
mov
imul
ss
mov
push
loopne
in
xchg
pop
add
aad
mov
iret
in
jne
mov
fwait
push
shrb
push
inc
add
sbbl
add
inc
enter
fs
movsb
test
cli
jo,pn
faddl
popa
jge
lods
call
mov
or
int
ret
fmull
cld
sub
loop
push
jg
push
jnp
sub
jno
out
push
out
iret
aad
sbb
and
nop
hlt
movsl
cwtl
daa
out
out
jg
loop
and
push
clc
daa
adc
js
jmp
outsb
or
add
xchg
or
aam
lods
aas
das
add
iret
mov
insl
mov
inc
add
inc
add
cld
ret
push
shrl
xchg
add
xor
add
fnstsw
pusha
add
or
sub
lcall
aas
mov
xchg
addb
and
mov
rcrb
xchg
fmull
jle
test
jne
jae
sbb
adc
jle
enter
jge
sub
fsub
and
push
hlt
idivb
mov
sub
push
add
lds
push
add
xor
mov
pop
stos
ljmp
mov
push
push
test
lea
cli
push
aam
cli
and
add
xor
and
push
cltd
fbstp
popa
and
mov
mov
xor
out
adc
cmp
push
mov
std
test
pop
pop
sbb
es
and
stc
sbb
and
sub
inc
jbe
idivl
lahf
aas
add
shl
add
cmp
xor
cmp
es
lret
cs
adc
imul
inc
sub
test
mov
ret
cmpsl
lret
addb
stos
in
mov
sub
push
or
enter
fwait
pusha
add
je
leave
test
xchg
daa
jno
addl
iret
inc
scas
imulb
jo
ret
push
pop
repnz
fucom
xchg
fdivs
xchg
ss
add
pop
loop
or
add
push
mov
and
loopne
push
dec
lret
cmc
sti
or
adc
jnp
into
adc
inc
dec
inc
hlt
hlt
pop
sub
mov
xor
pop
fimuls
nop
push
ss
fwait
jl
cld
sub
fdiv
cmpsb
rcrl
sub
jp
inc
outsl
sub
xor
mov
xchg
cmpsl
leave
pop
pusha
add
dec
dec
xor
xor
sbb
cltd
sar
sti
mov
sbb
cli
mov
lea
mov
mov
fnop
or
mov
jbe
bound
int
sub
add
push
pop
pop
and
or
outsb
sub
push
or
out
mov
shlb
sbb
sbb
cmp
out
sbbl
and
jbe
push
pop
push
test
and
xor
jge
add
test
xor
cmp
push
mov
pop
dec
push
adc
pop
out
jno
xchg
adc
insb
out
addl
aas
mov
add
xlat
push
inc
out
lock
sbb
sub
lea
xlat
xlat
xor
xor
sub
mov
mov
jmp
test
or
xchg
xor
inc
push
scas
repnz
push
xor
rol
and
cmp
add
mul
dec
push
push
push
dec
shr
nop
adc
xchg
in
negb
add
cwtl
lcall
mov
or
mov
test
mov
mov
sub
mov
imull
repnz
push
ds
xchg
mov
aaa
js
mov
push
stos
mov
mov
pop
insb
aaa
iret
loope
fstpt
gs
sbb
leavew
loop
dec
mov
and
or
fildll
orb
add
je
fsts
xchg
cli
xchg
loope
pop
cmp
cmp
gs
dec
cld
movsl
inc
add
cld
test
push
addl
xchg
pop
cmp
mov
pop
push
sbb
sti
cld
or
or
sbbb
fdivs
and
mov
mov
icebp
loopne
add
ja
xor
in
rcl
dec
in
rcll
aaa
mov
sti
icebp
cmp
nop
mov
cmpsl
xchg
pusha
add
mov
add
dec
addl
add
outsl
sub
adc
stc
push
hlt
and
cli
mov
push
and
cmp
add
scas
shl
jp
xlat
fisubs
aam
xchg
push
insl
mov
insb
in
push
mov
aad
cmp
daa
in
or
xor
cs
sbb
nop
push
jns
divb
add
stos
jne
pop
fcoml
add
sbb
fstpt
rcll
mov
jg
ret
lock
in
add
cli
leave
shlb
aas
aas
jmp
and
pop
mov
test
pop
stc
stc
outsl
inc
daa
bound
mov
fcmovu
lret
xchg
andb
repz
pop
neg
movsb
std
dec
or
adc
sbb
aam
int
push
add
addr16
test
add
test
daa
sbb
dec
rdmsr
add
xchg
mov
sti
sti
jg
cmp
test
pop
pusha
add
or
pop
shr
ljmp
jle
inc
mov
sti
imul
adc
es
ret
mov
aaa
cmp
clc
faddl
pop
xchg
testl
cmp
loope
fisttps
mov
sub
insb
mov
iret
lea
fwait
mov
cmc
xchg
or
add
mov
aam
cmp
fisubrl
push
xor
ret
call
adcb
add
pusha
add
jbe
sub
pop
mov
pop
aad
inc
add
cmpb
mov
in
mov
push
jle
pop
cltd
mov
pusha
add
xchg
lods
cmp
pop
adc
das
pushf
testl
add
sysexit
pop
cltd
mov
sub
xor
clc
xor
push
push
fimull
mov
and
xlat
mov
xor
sbb
ja
adc
pop
std
addb
add
dec
push
mov
cmpsl
pushf
fistpl
stos
mov
out
sbbb
idivb
pop
ret
dec
jbe
xchg
inc
pop
add
jge
pop
mov
xchg
jl
sahf
addb
ss
stos
idivb
into
inc
add
rcll
or
jno
push
lea
and
xchg
call
jmp
mov
push
xchg
pop
in
int
test
out
sbb
out
jg
xor
xor
repnz
mov
int3
xchg
mov
dec
xor
pop
xlat
inc
pop
repnz
mov
shll
in
test
push
mov
add
rolb
aad
sbb
dec
loopne
aas
mov
mov
enter
cmpsl
jle
adc
leave
lret
enter
and
add
adcl
cltd
and
gs
cwtl
mov
dec
dec
xor
lahf
or
dec
pusha
add
lea
ficompl
mov
xor
xor
push
lods
outsl
insb
and
outsb
les
out
pop
popa
sub
loopne
cmp
stos
xchg
ficomps
mov
nop
lock
and
enter
das
aam
notl
inc
add
sub
or
push
push
sbb
out
jne
stos
xorl
leave
aas
dec
jl
adc
fiaddl
mov
mov
fisttpll
cwtl
js
cwtl
stc
sti
dec
insl
mov
sub
adc
rcr
adc
fsubr
mov
sub
jne
push
jns
inc
or
loope
adc
lock
ljmp
push
xchg
ja
repz
cli
push
imul
mov
lods
lods
in
outsb
jae
mov
add
push
adc
bound
and
js
popa
int3
fstpt
outsb
sarb
mov
loop,pn
hlt
pop
xor
jge
pop
les
iret
in
cmp
test
jecxz
stc
enter
push
adc
inc
ja
mov
add
arpl
mov
push
xor
jo
mov
mov
add
andl
les
pop
std
and
or
xchg
pop
mov
adc
jp
clc
xchg
in
adc
popa
pop
shlb
stos
fcomps
adc
jno
ss
or
mov
sub
xchg
sti
outsl
ss
push
jbe
mov
mov
sub
daa
pusha
add
cmpsb
clc
and
rcrl
out
outsb
sub
shrb
inc
pop
movups
fisubl
lea
sbb
lret
add
cmpsl
je
mov
sub
cmc
xlat
mov
pop
shrl
leave
fst
sbb
hlt
push
xchg
js
loopne
sub
mov
push
jb
pop
mov
mov
add
sub
push
add
or
lahf
add
das
outsb
ret
dec
pusha
add
mov
dec
xlat
push
push
jb
push
insl
cmc
not
movsb
dec
push
push
mov
enter
stos
arpl
push
lods
mov
ret
add
cli
jecxz
shrl
add
sbb
add
dec
out
cmp
out
lock
mov
add
mov
xor
pop
mov
test
outsb
insl
lds
out
sub
add
cwtl
or
fcomip
ljmp
or
test
jmp
insb
and
es
pop
push
add
dec
out
mov
mov
test
addl
shlb
movsb
movsl
scas
add
pop
xor
leave
shl
mov
rcl
sub
cld
sbb
add
mov
sarl
fs
push
add
xchg
mov
hlt
mov
inc
gs
xorl
std
incb
add
add
jg
adc
mul
cld
and
int
cmp
popl
dec
dec
test
in
jmp
add
cwtl
pop
xor
add
inc
add
add
arpl
xchg
int
test
xlat
mov
dec
mov
push
inc
add
or
cmpsb
mov
lret
cld
sbb
fbld
stos
ds
and
dec
shlb
outsb
arpl
jg
sbb
nop
cmpsl
mov
out
push
xchg
daa
push
push
dec
imul
push
mov
inc
add
add
pop
je
lahf
pop
scas
fsubrp
popf
lds
roll
push
aad
cmc
jae
jbe
test
insl
aad
mov
iret
sti
mov
push
xchg
out
mov
insb
adc
adc
loope
mov
or
mov
add
arpl
push
cmpsb
cmp
push
push
inc
add
jmp
jo
add
pop
iret
sub
add
movsl
push
push
dec
inc
xlat
sbb
add
xlat
movsb
cwtl
xchg
ss
hlt
popa
hlt
cld
sbb
mov
or
je
ljmp
outsb
jae
loop
adc
push
add
inc
pop
mov
call
arpl
pop
pop
or
lods
xor
push
pop
push
pop
sub
mov
mov
and
push
xchg
mov
aam
lret
ds
mov
mov
loop
add
adc
dec
rol
ja
inc
mov
subb
jo
aam
adc
add
sbb
bound
stos
call
lcall
jnp
push
mov
sahf
loope
pop
mov
adcb
add
sar
add
and
lret
insl
mov
mov
mov
jge
ret
cli
sbb
mov
cmpsb
xchg
int
cli
cmpsb
xchg
inc
and
fdivp
xor
ret
fnstenv
aas
not
mov
sub
and
xor
addl
cwtl
decl
out
push
notb
daa
xor
adc
cwtl
inc
mov
inc
orl
addl
xchg
cmp
movsb
outsb
lcall
bound
and
mov
xchg
adc
stc
or
fmul
movsl
data16
add
adc
sub
lock
movsl
test
sub
cmp
fs
stos
jecxz
add
mov
dec
testb
add
lods
add
dec
fstl
or
sub
mul
push
lods
fimull
cwtl
or
xchg
imul
xchg
jg
loopne
loop
push
xchg
xor
push
push
mov
sbb
jcxz
adc
mov
push
xor
adc
or
xchg
sbb
xor
inc
push
ds
xlat
mov
mov
mov
add
std
jmp
ss
leave
pop
lock
inc
cmp
imul
fwait
out
pop
outsb
mov
xchg
aam
mov
imul
lock
xchg
pop
xchg
and
push
fisubrl
mov
push
push
data16
ja
xchg
enter
sub
loope
es
test
cld
lret
jp
dec
into
std
mov
cmp
pop
pop
push
mov
add
js
imul
cmp
fstp
imul
add
inc
mov
xorl
xchg
stc
sbb
mov
mov
insb
idivb
jle
addb
add
jmp
shll
xchg
mov
push
push
jp
pop
lret
aaa
test
es
xchg
popl
sub
xchg
lds
inc
add
sar
cmp
pop
mov
push
add
mov
ret
lahf
lds
fildl
inc
add
xchg
pop
mov
push
mov
mov
outsl
aam
idivb
add
clc
mov
mov
mov
ja
add
inc
xor
aam
push
movsb
movsb
popa
clc
adc
cld
push
cltd
push
shlb
les
xlat
cmp
xchg
sbb
dec
hlt
test
addb
mov
shll
mov
add
add
test
add
lods
lret
loop
cs
inc
pop
icebp
cmc
std
pop
repz
leave
cld
clc
iret
int
add
dec
aas
pop
xor
std
aas
mov
jo
dec
je
cmp
mov
in
lds
insb
hlt
pop
mov
outsb
bound
dec
lahf
out
cmp
aaa
lcall
js
dec
dec
push
add
je
mov
and
mov
iret
sub
mov
inc
inc
or
and
addl
mov
mov
add
xor
enter
pop
loopne
mov
xor
je
dec
in
or
das
jbe
cmp
fstl
cmp
pop
int3
out
cmpsl
xchg
andb
add
adc
sti
ret
cmpl
imul
loop
mov
cmpsl
fs
add
aaa
xchg
dec
test
daa
outsb
cmp
adc
in
imul
cmpb
mov
push
rorl
sahf
imul
xchg
or
out
in
inc
add
call
and
xchg
push
sbb
add
lock
ss
mov
stos
outsl
fmull
mov
dec
enter
ja
pop
or
cmp
loope
lret
add
add
mov
mov
roll
and
ja
cli
ret
mov
inc
addr16
imul
jecxz
divl
mov
test
jae
es
arpl
ds
outsl
inc
adc
aas
jo
cmp
stos
pop
inc
add
pop
adc
stos
and
xchg
pusha
add
push
fcomps
jmp
lea
repnz
or
mov
clc
jmp
sbb
mov
ljmp
outsl
int3
cs
push
loop
dec
push
mov
out
mov
addl
jg
fwait
pop
pop
movsb
lret
push
mov
dec
ljmp
mov
push
sbb
push
rcll
xor
data16
and
test
and
sbb
adc
xor
push
add
sub
add
cli
lcall
shlb
inc
das
inc
ja
add
call
fs
lea
cmp
fnstsw
shll
sub
add
adc
cmc
and
cmp
das
adc
arpl
into
cwtl
push
fldcw
sahf
icebp
jp
pushf
adc
dec
jmp
pop
mov
inc
add
add
sbb
stc
add
dec
sub
lcall
push
adc
mov
inc
inc
rcl
and
ret
mov
mov
cmp
cmp
inc
in
inc
lds
jns
mov
and
xor
mov
out
mov
add
jmp
sbb
add
push
in
jnp
imul
xchg
xchg
jmp
loopne
out
mov
add
out
hlt
scas
xchg
or
mov
ret
xor
pop
orb
mov
test
fisttpl
cmp
xchg
ds
sbb
cwtl
push
mov
mov
inc
xlat
mov
dec
imul
inc
int3
fdivp
cmpl
pop
push
cmpsb
or
jg
xchg
pop
addr16
mov
ss
outsl
or
clc
pop
pop
inc
add
fidivl
scas
lret
mov
add
scas
sbb
orl
addb
mov
add
cld
std
inc
add
out
test
add
jecxz
dec
ret
stc
insl
outsl
aaa
xchg
or
mov
dec
xchg
cmpsl
daa
movsl
mov
lods
push
mov
aaa
mov
decb
out
repz
push
adc
enter
out
movl
rcl
mov
dec
shll
add
push
mov
mov
dec
mov
xchg
cmpsl
xor
mov
or
add
into
stc
ja
rorl
mov
dec
sahf
push
add
push
pop
pop
mov
sahf
call
les
xchg
or
mov
ret
push
add
xchg
sbb
sub
add
hlt
addb
pusha
add
lret
mov
and
pop
pop
out
addb
add
ja
aas
pop
gs
or
aam
es
out
ret
popf
cmp
add
cmpsl
es
xchg
mov
add
mov
popa
pop
andb
add
inc
add
pop
xchg
mov
add
inc
pop
cmp
xchg
out
adc
and
movsb
mov
add
cwtl
lret
and
rcrb
mov
nop
xchg
jae
push
out
mov
pop
sub
dec
adc
fmull
add
inc
fsin
add
cmp
mov
outsb
int
add
sub
loope
mov
icebp
push
out
insl
sub
push
insl
push
mov
outsl
test
pop
mov
rcl
not
int
test
mov
add
js
push
add
cli
mov
adc
rolb
test
cli
cli
push
pop
insl
pop
pop
lds
or
mov
inc
js
cs
xchg
mov
scas
ja
into
sbb
sub
push
mov
jg
jecxz
or
test
jno
das
nop
fstpt
js
popa
xor
adc
dec
inc
notl
cmpsl
inc
mov
sub
ja
sarb
je
pusha
add
pushf
lahf
xchg
in
inc
pop
stos
lret
mov
sbb
cld
ljmp
sbb
adc
ja
and
ja
sub
add
out
jnp
ret
jmp
lods
aas
pop
sub
push
sbb
sub
cld
addb
xchg
sub
sahf
push
or
push
add
inc
xor
inc
add
adc
nop
es
out
cli
mov
push
push
inc
sahf
push
ja
mov
xchg
or
add
add
push
xor
fs
pop
mov
add
aam
cltd
dec
andb
inc
loope
inc
inc
add
in
jo
int
ljmp
add
mov
cmovnp
add
addr16
insl
jl
cli
sbb
pushf
inc
pop
mov
ret
xor
jmp
in
and
ds
push
jns
pusha
add
clc
scas
xor
popa
push
push
mov
arpl
xchg
sub
arpl
scas
dec
mov
popf
in
call
lret
sub
push
data16
fs
sbb
dec
jl
sub
pushf
sbb
and
ret
xchg
sbb
add
mov
test
data16
xor
add
popf
jne
lret
mov
adc
frstor
xor
cltd
mov
and
out
push
add
sahf
jg
in
and
push
test
in
int3
ds
mov
and
fnstcw
jno
xchg
jl
pop
mov
mov
bound
pop
push
push
enter
das
or
jmp
or
jo
movsl
sbb
out
jp
mov
in
mov
addr16
xor
out
inc
push
and
or
jecxz
jns
sbb
mov
shlb
add
fcoms
stos
jg
add
add
lds
add
push
adc
aas
adc
in
sub
das
or
mov
xchg
aam
add
movsb
gs
mov
mov
pop
jle
sub
addl
mov
aaa
xchg
leave
int
push
or
pop
fnstsw
jecxz
dec
jo
cmp
addl
call
push
in
sub
or
test
ja
xor
sbb
pop
into
and
xor
lret
add
pop
cmp
andb
cmc
mov
out
lahf
les
movsb
bound
shrb
mov
and
enter
push
xchg
sbb
outsl
mov
shl
mov
or
add
or
add
lods
and
xor
lret
xor
push
sub
jnp
add
add
out
add
data16
dec
stos
pop
adc
inc
andb
xor
push
stc
add
sbb
mov
sti
push
add
lcall
mov
xchg
jle
jae
sub
pop
negb
and
movsl
inc
add
cltd
hlt
addl
jb
push
mov
xor
add
ret
add
mov
inc
xor
mov
jno
cmp
in
xchg
sub
sbb
and
pop
cmc
addr16
std
fisttpll
add
sub
add
in
jnp
mov
push
in
xchg
sub
inc
add
add
add
sub
add
inc
aad
lods
mov
jbe
cld
movsl
cli
loope
test
into
fsubrs
nop
cwtl
mov
loope
add
xchg
xchg
xor
fldcw
jp
insb
cmpsl
jnp
add
out
cltd
xor
mov
dec
xor
add
jmp
enter
stos
adc
pop
lret
fmull
sahf
adc
adc
fcmovb
pop
addr16
fiaddl
das
mov
cs
mov
sub
add
jg
lea
push
dec
bound
mov
jecxz
insl
aas
mov
or
xchg
mov
pop
jbe
add
push
lods
mov
addb
out
push
imul
xchg
sarl
out
test
mov
push
test
mov
dec
aad
push
loope
inc
mov
lret
sar
adc
mov
lret
out
add
sub
arpl
lods
mov
cli
pop
pop
mov
loop
jb
add
inc
add
in
pop
pop
mov
mov
adc
addr16
scas
scas
sub
or
cli
and
mov
ret
test
and
andb
xchg
push
movsb
mov
jecxz
xchg
stos
mov
std
jg
mov
shrb
std
mov
mov
not
cld
dec
inc
add
lahf
mov
or
push
scas
pushf
popa
adc
sub
aas
mov
mov
fidivrl
dec
sbb
cmpsb
or
ret
mov
cmp
dec
pushf
lahf
sub
leave
cltd
add
xchg
icebp
jo
push
add
pushf
pusha
add
push
mov
lods
push
and
adc
in
out
nop
jl
gs
fstp
dec
mov
or
push
add
cmp
jge
test
sub
add
jbe
test
pop
sub
sti
pop
ret
dec
punpckhwd
aaa
cltd
xor
inc
add
sub
inc
dec
fiaddl
sub
lahf
cmp
mov
sbb
mov
mov
xchg
push
add
xchg
loope
add
adc
dec
xor
xchg
outsb
insb
sub
pop
mov
add
ss
mov
xlat
pop
mov
movsb
fcmovne
gs
data16
inc
cmpsl
ret
addb
add
out
mov
out
pop
js
xor
sub
add
loop
movsl
mov
dec
dec
add
int3
in
jbe
or
xchg
mull
pop
pop
fcmovnu
push
pop
pop
insl
mov
xor
ss
icebp
add
xchg
test
xor
in
jb
and
adc
cs
cmpsb
loopne
fistps
mov
or
test
test
stos
sub
in
pop
sbb
or
jecxz
xchg
jl
int3
mov
add
and
insl
std
fwait
dec
mov
aas
je
jle
sub
push
add
stc
mov
jge
mov
stos
push
push
ret
jbe
js
insl
add
insb
inc
sbb
cwtl
jg
jp
fstl
add
cmp
mov
add
gs
mov
pusha
add
sub
jg
out
les
mov
jge
xchg
lcall
jae
inc
mov
fcoms
lds
jne
push
add
dec
mov
push
test
xlat
sub
decl
cmpb
xor
jae
imul
inc
add
add
or
idivb
push
test
and
sbb
pop
mov
ss
lods
ljmp
and
xor
stos
movb
scas
jno
in
int3
inc
push
inc
add
or
hlt
sbb
in
push
push
push
dec
cwtl
out
addl
out
in
adc
mov
and
sbb
jns
jne
xchg
jno
push
mov
in
mov
sub
sbb
insb
cld
sbb
pop
pop
pop
push
add
dec
mov
jno
push
jl
leave
out
sarl
test
and
xchg
into
mov
pop
movsl
mov
dec
jns
stc
mov
stos
xchg
idiv
push
xchg
xor
lcall
xor
mov
imul
addl
adc
sbb
sub
dec
mov
sub
aaa
mov
mov
fimuls
aad
fcmove
das
xchg
add
shlb
mov
jp
and
mov
stos
pop
in
xchg
stos
inc
add
scas
loope
mov
aad
jae
jb
jo
mov
xchg
arpl
xchg
cmpsb
in
scas
jge
xchg
and
push
aam
outsb
xchg
cli
jle
aam
pop
pop
fwait
in
fdivrs
xor
dec
mov
dec
add
enter
push
pop
cld
stos
xchg
xlat
mov
subl
shlb
add
in
mov
xor
les
int3
dec
je
pop
push
jns
or
jle
xchg
test
sbb
dec
outsl
sub
add
dec
xchg
inc
lcall
pop
inc
xor
insb
sti
addb
inc
push
inc
jne
sub
and
loopne
lcall
push
fstp
enter
out
ret
mov
gs
push
xor
mov
popa
xor
jl
das
pushf
cmp
cmp
pop
stos
ds
test
enter
ds
in
dec
or
sub
pop
pop
mov
sbb
push
add
into
mov
int3
ljmp
dec
mov
add
add
mov
insl
or
sbb
hlt
lods
add
outsb
fmuls
call
cmpsl
xlat
scas
mov
ja
inc
nop
dec
andb
les
xchg
call
ss
jge
leave
sarb
dec
je
js,pt
dec
das
ss
stos
int3
outsl
aam
sub
mov
mov
sub
cltd
inc
add
mov
movsb
cwtl
mov
inc
add
adcb
inc
sbb
add
psubb
add
imul
enter
xchg
daa
push
daa
in
mov
push
fsubrs
jle
loopne
sbb
push
add
dec
inc
add
ja
xor
cmp
xchg
notb
mov
fiadds
call
data16
mov
cmp
pop
cmp
or
mov
and
adc
mov
test
add
lods
pushf
or
pop
sub
ret
xor
ret
xchg
std
lods
test
and
xchg
dec
jge
bound
lahf
cmp
lcall
sub
shlb
jno
sbb
cld
jb
sbb
pushf
mov
in
out
lock
clc
clc
pop
out
stos
inc
push
push
pop
or
mov
addl
sub
ficoms
push
add
shrl
cmp
add
cwtl
xchg
aad
push
add
decl
scas
lock
into
testb
test
faddl
sbbb
scas
mov
pop
mov
daa
and
mov
jbe
jb
loope
or
cli
push
fmuls
mov
add
xchg
mov
cmpsl
out
dec
cmp
aaa
xchg
mov
outsl
fsubl
cmp
je
sbb
add
std
jp
bound
sub
pop
rol
add
cmp
shll
mov
movsb
pop
stc
das
xchg
cmpsl
push
test
gs
lea
adc
incl
xor
dec
xlat
mov
adc
push
dec
xor
and
out
dec
int
popa
mov
scas
jb
cmp
or
rolb
push
push
push
dec
cmp
dec
and
dec
ret
addl
les
mov
fwait
movsl
jbe
xlat
xor
ja
add
sub
lret
push
flds
cmp
aad
mov
add
rcll
xchg
cmp
insb
xor
test
iret
out
xorb
cmc
inc
loopne
add
jne
ret
sti
and
xchg
xor
cmp
pop
dec
mov
sahf
cmp
sub
adc
mov
inc
mov
xor
or
jge
shufps
iret
cmp
test
or
cmp
sub
push
add
in
cmpsb
add
add
fsub
adc
mov
sarb
cli
mov
mov
dec
jnp
mov
mov
pop
jge
idivl
gs
pop
repz
imul
sub
push
cltd
xchg
cmpsb
and
jge
add
mov
daa
cmpsb
pop
xchg
mov
mov
sub
xchg
mov
dec
dec
xor
fwait
sti
movsl
insb
cmpsl
jnp
xchg
cmp
xchg
push
popa
insl
cmpsb
fiaddl
sbb
nop
lods
mov
call
mov
test
and
inc
call
mov
dec
dec
sbb
rolb
rolb
sahf
aam
inc
scas
sarb
bound
insl
xchg
leave
dec
adc
stos
cmp
aad
ljmp
adc
sub
add
sub
cwtl
sub
loope
jno
imul
jl
fidivrs
lret
testl
mov
test
add
jb
jo
out
test
imul
arpl
mov
fimuls
xchg
xchg
fcomps
aam
push
mov
ret
and
mov
push
push
xchg
cmp
repz
mov
pusha
add
add
add
add
jp
add
add
lds
repnz
add
jns
pop
icebp
adc
std
or
add
cmp
clc
jecxz
xor
lcall
js
sub
mov
bound
addb
xchg
lret
pop
pop
inc
push
jge
popf
mov
jp
psrld
repz
sbb
push
sub
jne
lret
and
orb
hlt
fs
imul
ret
jp
add
loopne
in
add
cmpl
rol
jns
arpl
aam
out
insl
enter
mov
in
ja
scas
and
in
add
jnp
xchg
mov
fidivrs
and
mov
xor
lahf
sahf
sub
or
stc
inc
add
add
insb
repz
aaa
push
and
pop
pop
mov
pop
outsl
mov
adc
lock
xchg
push
pop
daa
mov
out
outsl
or
and
add
xor
dec
in
arpl
pushf
stos
movsl
dec
sub
js
or
addl
jne
in
loopne
out
push
add
outsb
outsl
out
fwait
idivb
popa
stc
sahf
shrb
subl
add
pusha
add
xchg
inc
cmp
call
mov
cmpsl
jnp
in
and
add
jno
sbb
pushf
aaa
mov
and
and
xchg
cmp
inc
mov
xor
sahf
icebp
ret
stos
pushf
movsb
leave
sub
adc
scas
js
mov
lret
dec
mull
mulb
add
mov
fdivrs
sbb
and
mov
dec
mov
scas
cmpl
sbb
cli
stc
daa
cmp
jmp
aas
in
mov
ds
addb
jp
pop
fs
add
adc
jecxz
and
mov
ds
add
mov
cltd
test
addb
mov
outsb
ja
into
movsl
addb
pop
sbb
addl
sbb
sub
inc
pop
jecxz
lods
jo
lret
or
sbb
push
cs
daa
adc
popf
mov
outsb
mov
add
add
push
mov
movsl
movsl
sub
xchg
cmp
jl
arpl
cmpsb
and
sub
ljmp
pop
pop
sti
pop
dec
es
adc
addb
fsub
push
ret
sbb
add
cmp
sub
pop
insb
jnp
sub
test
imul
mov
fs
insb
sbb
jecxz
icebp
out
push
add
incb
add
xchg
mov
mov
jle
dec
mov
insb
imul
leave
sub
adc
shlb
out
cmp
repnz
loope
scas
gs
dec
into
in
inc
icebp
loope
add
mov
jp
mov
mov
mov
pop
adc
cmp
xlat
pop
pop
pop
add
add
stos
sub
dec
dec
pop
pop
dec
mov
sbbl
mov
out
add
add
and
ss
addb
xchg
lahf
mov
lcall
test
mov
add
mov
pop
pop
push
sbb
sub
inc
into
es
iret
mov
cwtl
xchg
mov
inc
inc
cmc
addr16
cmpsb
es
xchg
insb
push
std
sbb
out
stc
sbb
pop
lock
push
cmpsl
cmpsl
cmp
cmp
aam
jle
insl
fld
mov
lock
jmp
fdivrs
mov
xchg
out
xor
sub
mov
sub
jl
enter
add
and
jmp
movsl
addb
lds
sub
pop
je
dec
into
aaa
cmpl
adc
fwait
shll
mov
lock
push
sahf
pushf
inc
lret
sbb
fwait
lods
or
mov
mov
push
rcl
mov
add
dec
adc
popa
movsb
test
int
dec
xor
lcall
cwtl
pop
lcall
and
jmp
lcall
sbb
fcmovb
mov
adc
mov
outsb
pcmpgtb
je
add
pushf
push
xchg
mov
cli
orb
cmpsb
inc
add
hlt
inc
adc
xchg
mov
outsb
adc
adc
loopne
dec
and
add
jae
pop
out
pop
stos
adc
push
mov
dec
pop
add
pop
test
cmp
push
out
mov
outsb
pop
inc
xchg
test
push
fdivrs
add
loopne
mov
inc
mov
mov
subl
cmp
mov
mov
addl
nop
ss
add
inc
add
push
add
mul
push
sbb
adc
mov
aad
mov
aaa
cmpsb
inc
in
out
mov
cmpsl
sbb
push
cmp
cmp
pushf
xchg
xor
arpl
add
cmp
mov
bound
xor
arpl
jp
cwtl
and
imul
or
addl
sbb
js
xlat
push
push
dec
popf
insl
into
out
cli
out
out
lret
stos
test
pop
pop
fs
mov
repz
andb
loopne
sar
or
in
into
cld
icebp
jp
xchg
xchg
imul
lahf
dec
jmp
fisubs
cmp
add
push
fwait
sub
add
int
sbb
movsl
jl
add
mov
bound
inc
xor
rorb
ds
inc
add
and
adc
add
jg
or
outsl
mov
and
sub
xor
xchg
add
jle
push
push
ja
sub
out
cmp
add
push
add
inc
push
inc
cmc
xchg
popf
jmp
cmp
into
ds
pusha
add
insl
mov
add
or
push
sub
mov
mov
ss
sbbb
pop
inc
add
in
imul
adc
sub
shll
addb
xor
mov
mov
fcom
lahf
sub
scas
cld
jno
popf
dec
sbb
push
and
pop
pusha
add
push
push
cmp
mov
jne
sub
popf
xchg
test
push
inc
add
rcr
je
xchg
lods
es
nop
push
push
xlat
mov
mov
jnp
insl
nop
dec
inc
jle
jl
int3
mov
lret
fidivrl
test
cmp
jne
jne
sub
sahf
mov
mov
pop
add
pop
js
push
jae
xor
xchg
cmc
sub
add
pop
pop
push
sub
add
inc
mov
jle
outsb
inc
aas
mov
out
add
das
les
sub
cmpsb
mov
dec
ret
jge
push
mov
movsl
cmp
cs
dec
cmp
jns
test
add
xchg
into
ret
push
add
inc
movsl
sbb
stc
pop
inc
add
jle
push
add
iret
es
cmp
xchg
das
and
xor
stos
ja
xor
not
and
pop
and
xchg
cli
xor
dec
mov
arpl
icebp
jmp
ss
xor
jecxz
xchg
ss
adc
mov
mov
sar
in
add
lods
mov
jne
inc
cmpsl
add
sbb
cmpsb
pop
push
push
pushf
stos
sbb
call
dec
jp
les
xchg
mov
push
cmp
lds
add
cmp
pop
mov
dec
cmp
das
cmpsb
jnp
add
add
je
push
test
out
lds
pop
ret
shl
stos
dec
add
js
btc
xor
and
movsb
mov
or
sarl
rcll
ss
xchg
out
fidivrl
fdivs
mov
cmp
xlat
xchg
cli
out
jge
sub
or
aas
out
or
or
aas
adc
and
dec
fsubl
pop
cmpsl
nop
addl
jmp
lahf
lock
mov
xor
loop
push
frstor
shlb
sbb
push
or
mov
xchg
insb
aad
inc
add
mov
out
ret
aaa
sti
inc
sbb
adc
add
xlat
ss
leave
test
rcl
ret
stos
js
mov
xor
js
icebp
dec
imul
in
adc
dec
mov
arpl
dec
add
sbb
push
inc
pusha
add
jge
adc
pop
out
shlb
dec
sbb
fisttpll
or
jecxz
clc
aam
cmpsl
pusha
add
movsb
pop
or
add
and
shll
test
lock
je
mov
aaa
add
jg
ljmp
xchg
std
outsl
nop
stos
int
iret
jo
xor
jecxz
pop
scas
sub
ss
add
mov
push
enter
fbld
mov
js
lea
pop
into
push
ljmp
repz
inc
rol
movl
add
outsl
mov
daa
xchg
mov
idiv
sub
iret
test
and
fidivrs
jmp
xchg
push
cltd
cmp
add
insl
out
data16
pop
fdivl
test
mov
cmpsb
jns
clc
xlat
aam
insb
mov
stos
mov
mov
popa
outsb
xchg
mov
jle
pop
int
mov
aam
aam
cmp
int
nop
cli
mov
enter
xor
add
xchg
fs
dec
outsb
mov
stc
les
movsb
cmpsl
jecxz
addl
push
mov
add
xchg
mov
filds
fwait
push
add
scas
and
xchg
push
xchg
lds
das
or
cmpsl
jns
push
cmp
test
add
pop
scas
mov
pop
movsb
mov
pop
rcrl
push
sub
sub
push
add
mov
repz
sub
push
fstl
aas
jge
loope
fidivs
cmp
das
pop
mov
xchg
mov
test
and
xchg
dec
sub
inc
add
and
fsubp
orb
aam
cmp
add
aas
in
out
imul
int
shll
jbe
outsb
or
aaa
fdiv
mov
mov
fs
iret
into
mov
xor
push
add
jnp
ja
add
mov
jg
or
test
lret
dec
out
test
pushf
cld
cmc
cmp
add
add
test
lods
movsb
and
ret
mov
add
dec
mov
add
push
add
pop
popf
mov
inc
add
js
dec
add
and
fbstp
add
and
gs
mov
sbb
inc
jg
push
cmp
imul
jmp
xchg
movsb
add
jbe
insb
cmp
cmp
repz
aam
arpl
xor
outsb
into
mov
xor
imul
stos
roll
out
mov
add
rcll
sti
sti
xor
or
mov
push
ret
jb
repnz
jo
ret
mov
adc
loope
jl
push
or
jne
pop
inc
add
cltd
pop
cmpsl
test
sbb
das
rolb
fimull
js
mov
lret
clc
test
cmc
in
lahf
adc
outsb
jecxz
scas
adc
inc
jp
je
sbb
lds
aaa
in
add
add
push
push
add
add
xchg
inc
mov
fisttpll
jno
mov
push
or
insl
mov
outsl
js
add
movsb
and
popf
mov
sbb
and
dec
stos
dec
in
ficoms
jp
add
call
jno
cmp
leave
mov
lods
jno
adc
and
ljmp
xor
mov
jnp
arpl
sbb
sbb
and
pushf
xor
imul
stos
sbb
cmpsb
sarb
jbe
mov
mov
mov
jo
lcall
inc
add
fdivl
and
push
mov
sub
jns
int
rcrb
xor
stos
nop
cmp
clc
mov
cld
lods
xchg
sbb
cmp
iret
sahf
ret
add
insl
into
loopne
ljmp
enter
add
sub
call
push
addr16
lods
pushf
pusha
add
pop
sbb
shrl
and
xor
cltd
lahf
stos
cmp
enter
in
and
call
loope
add
and
mov
add
mov
jle
add
mov
popa
push
pop
ret
inc
xchg
testb
add
xchg
push
stc
mov
fldt
fisttps
in
jge
push
adc
and
lds
sahf
push
js
pusha
add
aas
adc
sbb
xorb
pushl
cmp
xchg
inc
inc
scas
dec
xor
mov
fucomip
addb
adc
sub
nop
loope
test
or
add
add
insb
test
stos
fdivrl
jbe
jg
aas
imul
pusha
add
fwait
outsl
mov
add
je
roll
mov
sub
test
mov
add
fldenv
mov
add
add
xor
add
out
xchg
xor
pop
insb
mov
int3
shlb
test
jo
xor
jne
test
jae
je
in
jo
pop
fcmovb
add
addb
pop
or
lahf
push
std
push
xchg
xchg
lret
jo
pusha
add
and
addr16
push
xchg
mov
pop
ss
clc
pop
pop
mov
xchg
inc
mov
add
inc
test
add
ror
xchg
ds
stos
sbb
lret
cmp
data16
lret
cld
pop
shr
jns
out
setl
mov
scas
int3
outsb
cli
aam
das
inc
mov
pop
es
cwtl
lcall
sarb
sub
jmp
addl
sub
push
or
cmp
pop
or
mov
add
mov
xchg
pmullw
mov
lods
ds
adc
push
push
inc
pop
stos
pop
sub
or
cmp
pop
addb
out
insl
fisubrl
and
inc
mov
mov
js
lret
daa
add
rcl
adc
ret
and
aam
addl
mov
call
pop
inc
test
inc
add
add
sarl
adc
jmp
pop
sbb
cltd
ficompl
pop
cmp
iret
sbb
loopne,pn
adc
in
mov
push
stc
stc
dec
sti
and
popf
xor
sub
pop
cmp
aaa
pop
cmpsb
inc
inc
icebp
pop
sbb
enter
es
cmp
call
add
add
cmp
ljmp
icebp
mov
jnp
dec
in
test
fsubrp
dec
repz
xchg
test
cltd
call
lods
je
mov
std
inc
mov
shl
ja
dec
sbb
sbbl
ficomps
adc
jb
loop
movsb
sub
fwait
not
movsb
mov
push
add
jecxz
or
push
add
ja
add
fwait
pop
lods
sub
push
mov
dec
test
fldenv
aaa
icebp
push
add
and
ret
sub
push
dec
int
and
sub
and
cltd
pop
adc
mov
or
mov
add
mov
mov
jp
sbb
pop
mov
int
xor
sbb
xchg
pop
inc
aad
push
imul
lea
dec
jg
fidivrl
lds
insl
rorl
mov
inc
add
addr16
fistpll
test
xchg
dec
mov
adc
cmc
jg
and
xchg
or
adc
sub
dec
xchg
aaa
ds
cmc
sahf
mov
das
push
push
repz
ds
imul
mov
push
sti
scas
pop
stos
xchg
mov
mov
clc
addb
add
into
sti
imul
or
lock
fildll
pop
icebp
in
dec
cs
out
xchg
mov
je
ljmp
push
test
cld
mov
xor
out
fnstenv
daa
daa
out
es
jb
mov
jo
pop
push
fidivs
aaa
jp
and
cmp
xorb
lods
sbb
mov
jb
test
jns
sbb
pop
jo
pop
outsl
fiaddl
addb
cmp
adc
cld
lods
pop
sub
add
push
movsl
movsl
lock
mov
mov
pop
fwait
xchg
jne
mov
add
repz
cli
mov
mov
or
fildll
push
lods
mov
and
jns
lcall
scas
testb
push
addl
add
mov
cmp
push
inc
sub
sahf
stos
lret
pushf
lret
xor
fucomip
jmp
cli
mov
add
mov
xorb
mov
push
add
bound
test
xchg
sub
scas
lret
mov
add
mov
inc
add
out
adc
inc
addl
xor
fidivs
aas
jnp
popa
mov
in
xchg
in
fs
cmp
pop
jle
lods
mov
sub
ja
or
mov
mov
push
jne
or
push
mov
pushf
movsl
dec
filds
sti
popa
dec
mov
mov
push
and
pusha
add
mov
cmp
push
hlt
dec
js
mov
ret
loop
fistps
add
jns
add
adc
scas
insb
insb
lcall
cltd
out
popf
out
dec
and
add
jnp
or
movsb
xlat
imul
cmp
test
cld
mov
and
aaa
mov
mov
std
test
sub
mov
sbb
js
add
jae
inc
add
add
inc
xchg
js
lret
push
test
loop
add
ret
add
lret
cmp
jecxz
inc
ret
lods
imul
lock
push
fadds
pop
lret
inc
cs
mov
test
xor
lret
scas
sub
test
pop
xchg
aad
clc
dec
cmp
dec
xchg
enter
imul
ret
add
xor
insl
sahf
push
add
lods
fs
icebp
cmp
ss
lock
lock
mov
fucom
scas
add
inc
cmp
inc
addl
adc
pusha
add
bound
adc
sbb
push
fwait
dec
out
pop
and
cmp
test
jbe
popf
cmp
mov
aad
add
insb
jb
mov
push
cltd
jo
lahf
iret
out
xor
clc
sbb
scas
outsl
imull
mov
rcl
pop
inc
cmp
jo
xor
arpl
jecxz
mov
fs
add
jge
push
jl
fisubrl
in
imul
fisubl
js
or
push
push
push
sbb
dec
addl
add
mov
repnz
arpl
and
jnp
das
insl
fidivrs
adc
push
cmp
xor
mov
cwtl
pop
or
ret
or
nop/reserved
mov
add
sbb
xchg
imul
add
jg
hlt
sahf
inc
add
enter
shll
cltd
cmp
das
in
mov
daa
das
jmp
enter
out
jne
xor
ja
popa
mov
pop
or
addl
pop
xchg
xchg
xlat
pop
mov
out
shl
std
arpl
push
push
sbb
add
ss
add
gs
fdivl
lock
sbb
add
movsb
sarl
mov
jp
push
push
mov
mov
sub
pusha
add
xor
rclb
xor
lahf
shr
shl
sub
bound
outsl
cwtl
sbb
pop
scas
daa
inc
test
mov
add
addl
mov
push
add
add
or
mov
std
jge
adc
mov
aas
movsb
mov
sbbl
int3
out
insl
xchg
lods
mov
jnp
or
or
faddl
ja
inc
add
cmpxchg
cld
pop
push
push
fimull
ror
scas
test
push
jne
add
cmp
nop
sub
xchg
ud0
jle
lahf
mov
pop
daa
push
push
or
pop
jl
adc
pop
mov
xor
add
dec
sub
lahf
test
lods
cli
insl
pop
or
inc
out
lock
pop
loop
imul
xchg
fdivs
lahf
daa
out
mov
sub
push
inc
pop
pop
mov
icebp
push
xchg
xor
and
aas
sub
mov
pop
adc
xchg
icebp
scas
cltd
sahf
cmpsb
leave
or
pusha
add
aam
test
test
lcall
push
cltd
scas
or
ret
pop
mov
shl
hlt
in
dec
add
push
and
outsb
adc
inc
cltd
add
add
add
mov
pushf
mov
lret
sarb
lcall
icebp
fstpt
sahf
shr
ja
adc
mov
repz
inc
lcall
add
jnp
aad
mov
into
stos
inc
add
sub
enter
daa
dec
pop
dec
mov
rorb
orl
fs
movsl
loopne
dec
cmp
stc
cmp
les
out
test
andl
xchg
mov
js
negb
and
jp
filds
cmp
inc
addb
mov
mov
cwtl
ret
je
mov
fwait
cmp
out
push
jge
push
lret
in
pop
dec
jp
andl
mov
ss
xchg
fbld
dec
mov
mov
push
add
mov
mov
mov
push
push
mov
rolb
and
inc
sbb
out
push
sti
sub
inc
mov
stos
xchg
pop
dec
cmp
and
xchg
jle
inc
pop
add
fiadds
add
add
jle
repz
add
lods
xchg
inc
add
pop
add
or
in
in
imul
lret
mov
adc
xor
gs
push
je
subb
or
and
add
jb
xchg
fiadds
mov
cmpsb
dec
cmp
pop
push
add
jbe
mov
add
loopne
add
rorb
lret
nop
push
or
sub
and
mov
xor
push
push
rol
jge
mov
scas
loope
cmp
push
push
jns
les
add
inc
pop
pop
pop
jne
inc
jb
clc
add
add
gs
clc
out
mov
popf
aad
pop
or
xchg
ss
imul
add
add
test
pop
std
sub
xchg
int3
sub
fstps
cli
or
lahf
out
iret
mov
jg
loope
dec
sbb
xlat
fwait
mov
pushf
mov
sbb
bound
loopne
mov
xrelease
xor
and
cld
sub
in
lea
pop
popa
shrl
popa
aam
stc
sub
jp
sub
negl
push
lcall
jo
pop
xor
cs
xor
cmp
dec
inc
add
add
add
rep
mov
lret
repz
and
push
aas
ret
adc
push
scas
xorl
stos
push
or
icebp
icebp
scas
add
arpl
lods
fstpt
movsb
lret
cmp
sub
add
sbb
pusha
add
sub
xchg
bnd
dec
out
jmp
mov
mov
scas
addb
in
cs
dec
xor
insb
fstp
movsb
into
cmpsb
stc
stc
xor
mov
insl
ret
mov
stc
sub
xorb
fldenv
lods
mov
jnp
sarb
ss
and
xchg
popa
sub
mov
mov
lret
mov
xchg
clc
pop
mov
jp
addr16
pop
mov
sbb
adc
sub
add
fwait
add
sahf
jg
dec
cmc
icebp
pop
fcmovnu
addl
test
cmp
pop
sub
enter
popa
adc
ja
add
ljmp
leave
mov
pushf
adc
std
adc
xchg
inc
adc
and
jno
call
fld
xchg
mov
add
repnz
nop
clc
jno
insb
ret
rep
out
mov
cld
lret
add
xchg
in
mov
stos
xor
push
mov
shl
hlt
push
ja
cmpsb
xchg
shlb
push
rorl
sbb
or
xchg
xchg
sub
nop
out
push
fisubrs
add
xor
movl
jmp
in
add
and
sahf
pushf
test
sti
mov
das
cmpsb
pop
sub
add
pop
sub
xchg
mov
and
lcall
test
in
ret
xchg
or
mov
push
add
mov
mov
stc
icebp
inc
xchg
add
pop
lea
or
dec
movsb
mov
je
add
or
dec
xchg
fcomp
movsb
test
xchg
jb
iret
jge
fwait
push
shll
rolb
bound
cmp
xor
adc
fdivrl
stc
jb
add
or
xor
popa
stc
jb
add
in
cmp
incl
test
add
jb
cmp
push
add
gs
push
push
mov
xchg
ret
xchg
xor
add
jmp
add
rol
sar
xor
stc
jb
aad
in
es
popa
stc
jb
push
add
dec
pop
cmpsl
xchg
add
notl
addb
add
add
add
sbb
mov
xchg
ret
mov
cmp
stc
jb
add
dec
out
jmp
add
add
jb
add
fimull
cwtl
inc
add
out
pop
jo
jmp
lods
inc
add
incl
movsb
mov
fwait
jl
stc
jb
jno
add
lea
push
mov
xchg
ret
add
addb
adcb
add
lret
roll
cmp
add
mov
push
sbb
add
jns
xchg
xchg
dec
movsb
add
pop
add
stc
jb
cmpsl
pop
call
mov
push
mov
xchg
ret
movb
pusha
add
cltd
cmpl
nop
jmp
roll
mov
mov
mov
stc
jb
mov
push
add
stc
jb
aad
add
dec
inc
out
fildl
mov
xchg
ret
dec
out
add
or
jb
pop
int
add
cmp
lods
cmpw
stc
jb
add
pop
call
or
add
add
mov
inc
add
add
fildl
sti
nop
jmp
cmpsl
add
dec
add
add
movsl
pusha
add
or
push
mov
xchg
ret
test
add
jb
add
add
jno
les
push
nop
jmp
in
call
add
xchg
jbe
stc
jb
add
add
call
xor
fisttpl
mov
add
sbb
cmp
sub
inc
or
jb
in
dec
add
or
pop
mov
stc
jb
sbb
add
dec
add
dec
pop
stc
jb
add
sbb
add
push
jno
loopne
jne
stc
jb
xchg
int
shrl
jne
stc
jb
add
push
xchg
and
fidivl
add
stc
jb
add
add
add
mov
jb
jno
add
or
in
xchg
fistps
jb
rolb
and
inc
add
aas
aas
mov
nop
jmp
aad
xchg
cmpsl
add
pop
into
add
nop
jmp
add
jno
add
popa
add
mov
xchg
ret
add
add
jb
add
add
cmp
lods
je
stc
jb
pop
dec
inc
push
push
movsl
arpl
pusha
add
call
stc
jb
push
add
and
out
int3
int3
push
mov
add
jge
pop
mov
pop
imul
add
lret
xchg
mov
adc
add
mov
add
add
rcll
jb
rolb
int
add
mov
stc
jb
xchg
lret
xchg
add
aad
push
stc
jb
xchg
cmpsl
add
jecxz
add
stc
jb
jno
push
add
ljmp
jmp
aad
add
dec
arpl
ljmp
add
xchg
decl
or
adc
decb
mov
xchg
ret
cmp
add
dec
mov
mov
add
add
add
push
mov
mov
add
add
sbb
or
and
nop
jmp
add
or
add
outsb
div
stc
jb
and
shll
add
pop
xor
push
mov
xchg
ret
add
in
mov
sub
add
add
push
or
add
add
stc
jb
inc
outsl
add
mov
push
mov
xchg
ret
add
push
push
insb
mov
stc
jb
roll
subl
outsl
mov
add
stc
jb
cmp
and
xor
push
mov
xchg
ret
int
dec
xchg
cmp
add
add
rcl
pop
push
sti
nop
jmp
add
jns
add
add
or
nop
jmp
add
inc
pop
add
dec
sub
outsb
mov
and
xor
jmp
push
nop
jmp
pop
add
dec
jns
add
enter
mov
xchg
ret
dec
xchg
xchg
mov
add
add
ffreep
loop
stc
jb
add
call
lcall
adcb
add
xchg
addps
iret
movsl
inc
add
add
add
das
push
stc
jb
cmpsl
add
add
add
push
sahf
push
stc
jb
add
or
frstor
xor
add
stc
jb
add
add
stc
jb
add
add
cmp
nop
jmp
addb
add
add
nop
jmp
add
mov
fs
push
or
jb
dec
dec
add
nop
jmp
add
inc
dec
jns
add
enter
mov
xchg
ret
jns
mov
nop
and
stc
jb
add
add
add
lret
stc
jb
add
out
mov
mov
dec
push
push
mov
xchg
ret
inc
mov
test
push
mov
xchg
ret
dec
add
pop
pop
add
into
xor
nop
jmp
add
push
add
xchg
add
add
add
out
add
mov
jb
pop
mov
add
aad
add
es
sbb
mov
add
xchg
add
shlb
sahf
rep
nop
jmp
push
add
add
les
stc
jb
add
pop
pop
add
mov
stc
jb
add
mov
subl
decl
add
mov
stc
jb
add
push
add
pop
add
stc
jb
in
add
xlat
lds
ret
or
add
dec
add
push
xchg
add
push
stc
jb
add
add
pop
mov
push
mov
xchg
ret
mov
stc
jb
inc
add
movsb
cltd
push
push
mov
xchg
ret
xchg
add
jno
adc
subl
add
jb
xor
movsb
stc
jb
xchg
add
add
add
jne
movsl
jl
nop
jmp
dec
add
dec
add
add
push
stc
jb
mov
add
xor
inc
xchg
xchg
inc
add
lea
nop
jmp
cmp
int
xchg
add
adc
call
add
jb
inc
add
mov
inc
nop
sub
add
std
sub
add
xor
add
add
jb
mov
bound
cmp
jb
add
in
push
jno
add
mov
stc
jb
add
mov
mov
xchg
ret
sbb
addl
add
xchg
add
jno
in
mov
or
movsb
stc
jb
add
add
mov
in
aaa
add
or
jae
add
lret
inc
sbb
jb
shll
inc
mov
leave
sub
jb
push
dec
mov
push
mov
add
lea
cmpsb
mov
mov
hlt
or
jge
stc
jb
add
dec
add
add
call
stc
jb
add
add
pop
push
mov
xchg
ret
dec
call
add
add
and
push
mov
xchg
ret
xor
lret
push
mov
xchg
ret
add
add
jb
sarl
cmpb
add
jns
dec
add
xchg
mull
pop
call
stc
jb
add
mov
int3
sub
stc
jb
push
mov
add
in
sbb
adcb
lret
add
iret
and
push
mov
xchg
ret
incl
dec
or
mov
stc
jb
add
and
jmp
push
add
xchg
aad
add
adcb
add
pop
add
jns
nop
jmp
xchg
add
cmpsl
add
add
push
mov
xchg
ret
add
jne
stc
jb
add
addl
movzwl
nop
jmp
dec
add
lret
xchg
sub
jb
inc
add
add
add
test
jb
int
xchg
xchg
xchg
jmp
add
add
add
jnp
dec
adc
jb
push
addb
in
push
test
add
stc
jb
lret
repnz
mov
xchg
ret
push
add
add
pushl
nop
jmp
add
movsb
add
stc
jb
add
inc
add
push
mov
jmp
add
imul
cmp
add
jns
add
test
adc
add
add
push
push
add
add
nop
jmp
push
lret
add
mov
add
stc
jb
inc
dec
xchg
add
nop
jmp
adcb
sbb
stc
jb
add
push
push
jmp
sbbl
sub
jb
add
push
add
lcall
sahf
add
add
add
add
test
push
mov
xchg
ret
dec
add
fadds
add
jb
out
and
add
mov
dec
inc
stc
jb
add
add
push
addb
add
jb
out
orl
clc
add
stc
jb
lret
add
add
stc
jb
rcrl
add
rclb
mov
in
sbb
icebp
add
add
or
mov
clc
pushl
xchg
push
aad
add
mov
popa
add
jb
push
push
add
push
mov
xchg
ret
addb
adc
jb
add
or
int
jne
add
stc
jb
addb
add
dec
push
ja
and
jl
xor
add
stc
jb
add
add
out
mov
stc
jb
add
add
add
jb
inc
sub
sbb
push
mov
xchg
ret
add
add
test
add
add
orl
or
mov
add
add
add
aad
cmp
test
jb
add
add
cmpsl
cmp
xor
aad
dec
mov
push
mov
xchg
ret
call
outsl
mov
stc
jb
mov
pop
in
xor
loope
add
sar
jb
es
add
add
sub
xchg
inc
add
in
inc
sbb
dec
or
jb
inc
sbb
lret
ret
add
add
movsb
and
incl
aas
jmp
stc
jb
out
add
mov
stc
jb
add
add
push
sti
mov
stc
jb
mov
or
incl
repnz
push
push
mov
xchg
ret
add
xchg
push
adcb
sub
jb
add
add
int
xchg
add
pop
js
imul
stc
jb
add
dec
add
mov
stc
jb
add
cmpb
add
add
mov
inc
mov
subb
add
sub
xchg
push
push
mov
xchg
ret
add
mov
stc
jb
jns
add
mov
stc
jb
jno
push
rcrb
and
add
add
out
push
add
add
mov
stc
jb
add
xchg
fs
mov
pop
and
xor
data16
push
test
sub
jmp
movsb
add
mov
fdivr
jb
push
add
dec
dec
addb
mov
xchg
ret
dec
add
mov
jb
dec
cmp
popa
mov
mov
stc
jb
add
jmp
add
jb
add
fidivrl
jmp
add
shrb
nop
incl
repnz
add
out
movsb
cmp
mov
add
rcl
add
fwait
cmp
nop
jmp
add
incl
add
push
mov
xchg
ret
fcmovbe
add
mov
add
add
mov
pusha
push
push
add
stc
jb
push
pop
sub
inc
adc
cmp
adcb
add
pop
xchg
sbb
add
dec
pop
nop
jmp
push
add
push
add
testl
add
add
jno
dec
in
add
mov
jmp
mov
decl
xorl
dec
in
ficoml
in
mov
mul
add
sbb
add
mov
out
mov
stc
jb
add
jb
add
cwtl
add
stc
jb
add
add
stos
push
stc
jb
mov
fiaddl
and
add
jb
xchg
inc
add
xor
stc
jb
add
dec
ljmp
je
pushl
dec
xchg
pop
add
es
out
push
nop
jmp
add
add
add
add
les
push
mov
xchg
ret
adcb
cmpb
xor
dec
sbb
add
sub
stc
jb
push
inc
movb
lret
mov
add
movsl
add
add
add
out
add
mov
push
mov
aad
adc
xchg
or
cmpsb
pop
mov
stc
jb
push
add
push
xor
sbb
jne
stc
jb
add
cmp
fs
jb
cmp
add
jg
test
adc
add
jb
and
dec
mov
xorb
incl
inc
fiaddl
add
add
mov
xchg
ret
add
cmpsl
and
add
nop
jmp
xchg
add
add
add
nop
jmp
xchg
roll
pop
testl
leave
sub
jb
add
outsl
add
movsl
stos
mov
push
mov
xchg
ret
in
inc
push
add
gs
and
nop
jmp
mov
add
jb
add
add
xor
jb
add
xchg
add
int
repnz
je
nop
jmp
add
add
leave
nop
jmp
mov
add
aas
mov
stc
jb
inc
testl
mov
push
stc
jb
or
add
add
jb
xor
add
mov
nop
jmp
add
add
pop
fimull
test
stc
jb
pop
lret
xlat
addb
mov
xchg
ret
add
add
stc
jb
add
add
sub
push
pop
pop
pop
mov
stc
jb
cmpsl
xchg
xchg
add
xchg
stc
jb
dec
add
add
add
mov
popa
add
mov
xchg
ret
add
add
and
shll
sbb
jb
add
add
add
dec
add
nop
jmp
aad
add
fiaddl
int3
pop
push
mov
xchg
ret
xor
add
adc
ja
lods
lea
nop
jmp
add
mov
je
stc
jb
add
cmpsb
sbb
mov
xchg
ret
add
add
add
cmp
mov
add
jb
rorb
mov
or
mov
xchg
ret
mov
and
movsb
or
jg
stc
jb
in
add
add
cmpb
add
stc
jb
add
xlat
xchg
add
les
mov
jb
add
add
stc
jb
inc
mov
add
mov
add
stc
jb
add
fidivl
xorb
add
andb
mov
xchg
ret
movb
add
out
movswl
stc
jb
add
jno
enter
jb
add
int
ficompl
cmp
jb
xchg
add
out
out
out
add
nop
mov
stc
jb
out
xchg
inc
inc
mov
pop
nop
jmp
add
push
outsl
add
stc
jb
add
incl
aad
add
push
mov
add
stc
jb
add
cmp
dec
mov
push
mov
xchg
ret
movsb
call
cmpb
add
push
add
add
fiaddl
outsl
and
stc
jb
jno
movb
mov
test
sbb
imul
add
addr16
mov
stc
jb
cmp
xchg
fidivl
mov
xchg
ret
cmpsl
xchg
jno
add
mull
pop
stc
jb
add
or
int
cmpsl
push
mov
xchg
inc
add
xchg
xchg
add
shrl
and
add
add
dec
add
sub
out
incl
pop
dec
xchg
outsl
add
mov
xchg
jae
sbb
mov
sub
ret
add
inc
testb
nop
jmp
add
add
pop
sub
mov
or
push
add
xchg
shlb
fnsave
call
mull
and
add
dec
inc
sub
inc
add
add
add
or
add
jb
add
add
pop
mov
stc
jb
add
add
addb
test
push
add
stc
jb
sbb
add
sbb
mov
add
add
adc
mov
int3
addl
push
mov
push
cmp
repnz
test
dec
add
jbe
pop
pop
push
mov
push
mov
xchg
ret
movb
adc
das
pusha
stc
jb
xchg
add
add
add
push
mov
xchg
ret
cmp
add
push
mov
push
mov
xchg
ret
call
stc
jb
out
xor
add
add
add
decl
push
mov
xchg
ret
pop
push
dec
jge
test
idiv
stc
jb
xchg
pop
call
adc
fiaddl
add
loop
add
push
mov
xchg
ret
add
aad
add
push
cmpw
nop
jmp
push
add
lret
inc
push
pop
push
mov
xchg
ret
add
jno
add
pause
jmp
inc
dec
testl
sbb
jb
inc
inc
add
adc
sbb
xor
add
stc
jb
incl
cmp
repz
mov
xchg
ret
xchg
add
lret
pop
or
jb
inc
dec
add
xchg
int
movzwl
stc
jb
xchg
movsb
add
push
mov
add
add
add
add
add
pop
jne
mov
push
mov
xchg
ret
cmp
call
lcall
dec
add
push
lret
jge
rclb
lods
inc
add
add
add
rcrb
jmp
add
add
xor
in
imul
add
push
sbb
outsl
add
add
stc
jb
add
add
mov
nop
jmp
add
xor
add
stc
jb
dec
add
mov
test
add
add
jb
add
jno
push
push
mov
xchg
ret
movb
call
stc
jb
add
addb
es
push
push
mov
xchg
ret
movb
add
movsl
movsl
jge
stc
jb
fiaddl
add
add
add
inc
mov
xchg
ret
add
add
pop
idiv
call
rorl
mov
mov
and
add
add
add
sbbb
jmp
xchg
addb
adcb
mov
add
xchg
jno
add
add
add
stc
push
mov
adc
cwtl
pop
add
add
add
or
add
sub
jb
add
xchg
fidivs
add
push
mov
xchg
ret
add
add
movswl
stc
jb
add
cld
push
mov
xchg
ret
add
dec
rcrl
jne
stc
jb
inc
add
and
stc
jb
push
out
roll
add
ds
stc
jb
add
xchg
add
add
in
aam
clc
mov
push
mov
xchg
ret
jns
add
not
push
mov
xchg
ret
inc
add
or
mov
xchg
ret
lret
dec
mov
push
mov
xchg
ret
movsb
int
inc
stos
add
stc
jb
push
add
sbb
out
adc
push
iret
push
stc
jb
aad
lret
addl
mov
nop
jmp
add
add
and
mov
cmpsb
mov
mov
stc
jb
in
dec
add
add
pop
jmp
stc
jb
add
add
dec
add
stc
jb
add
aad
mov
sar
incl
push
pop
push
jno
add
mov
orb
add
add
decl
add
add
stc
jb
shrl
jns
cmp
cmp
js
nop
jmp
add
push
add
test
add
stc
jb
add
inc
mov
push
push
mov
xchg
ret
xchg
mov
fcmove
addl
rorl
xchg
add
add
test
push
mov
xchg
ret
add
inc
push
hlt
cmp
popf
stc
jb
lret
xor
push
mov
mov
add
cwtl
ret
lock
push
push
mov
xchg
ret
dec
sbb
mov
nop
jmp
add
add
addb
add
mov
push
mov
xchg
ret
mov
inc
stc
jb
add
sbb
fiaddl
dec
or
jb
add
push
mov
sub
dec
add
jb
pop
add
push
xchg
sbb
jb
sub
add
xchg
mov
nop
jmp
add
jns
cltd
add
push
mov
xchg
ret
add
imul
sbb
jmp
dec
add
add
dec
sub
jb
add
pushl
dec
mov
push
mov
xchg
ret
out
add
lds
inc
lock
mov
xchg
ret
aad
add
aam
add
stc
jb
out
dec
movsb
add
dec
cltd
mov
push
mov
xchg
ret
rorl
add
xlat
cli
mov
stc
jb
xchg
add
pop
shlb
add
add
add
outsb
and
mov
xchg
ret
add
and
add
adc
and
das
dec
push
mov
xchg
ret
add
xchg
in
jle
jo
nop
jmp
dec
push
adcl
in
add
add
stc
jb
add
sbb
add
add
jb
add
sub
push
stc
jb
outsl
add
out
dec
popa
add
ret
repnz
jb
add
add
add
adc
incl
cmp
xchg
mov
out
jne
nop
jmp
mov
mov
stc
jb
call
push
and
iret
lea
stc
jb
xchg
pop
xchg
add
call
idiv
call
test
call
incl
jno
lret
xor
stc
jb
push
add
add
js
outsl
loopne
jb
xchg
movb
or
jmp
add
inc
add
out
ss
pushf
ror
stc
jb
add
lret
inc
xor
orl
pop
xchg
inc
add
mov
add
jb
lret
inc
sub
add
adc
jb
dec
inc
int
inc
xor
pop
mov
stc
jb
pop
inc
add
roll
in
add
stc
jb
xchg
movb
mov
jb
cmpsl
add
and
push
mov
xchg
ret
push
add
add
add
test
stc
jb
sarb
pause
jmp
add
add
test
std
stc
jb
add
jns
cmpl
nop
jmp
push
mov
xchg
lret
arpl
stc
jb
out
mov
mov
push
mov
xchg
ret
xchg
xchg
xor
out
mov
stc
jb
lret
push
add
movsl
fildl
repz
jb
add
movsb
add
pop
dec
add
nop
jmp
dec
jno
inc
pop
sbb
add
stc
jb
mov
fiaddl
xor
leave
mov
nop
jmp
add
mov
stc
jb
jno
add
out
jecxz
mov
stc
jb
addl
or
cmpsl
rcrb
dec
add
jb
add
sub
jb
xchg
sbb
shlb
add
imul
or
add
pop
sbb
incl
enter
jb
cmpsl
rolb
or
jno
jns
popa
add
mov
xchg
ret
outsl
xchg
lret
fs
add
addb
dec
and
lret
iret
push
push
mov
xchg
ret
fiaddl
add
xor
add
stc
jb
add
into
pop
stc
jb
xchg
sub
movb
movsb
pop
mov
jmp
arpl
call
xchg
dec
add
mov
jb
dec
dec
cmp
dec
push
add
cmpsl
mov
jmp
dec
add
add
and
or
cli
nop
jmp
es
add
pop
push
mov
xchg
ret
add
add
and
aam
add
stos
jne
nop
jmp
xchg
add
mov
std
call
nop
jmp
add
add
or
add
lret
or
add
mov
xchg
ret
add
pop
dec
outsb
testl
nop
jmp
add
add
in
add
stc
jb
add
cmp
sarl
jmp
add
add
add
add
jle
stc
jb
xchg
sbb
add
call
add
stc
jb
xchg
add
add
push
mov
xchg
ret
add
mov
jge
jbe
stc
jb
add
add
add
mov
jne
nop
jmp
int
add
xchg
mov
jmp
xchg
push
in
mov
pop
push
mov
xchg
ret
add
pop
fiaddl
mov
xchg
ret
sbb
movb
mov
stc
jb
push
out
dec
add
cli
mov
stc
jb
add
add
add
call
lahf
push
push
mov
xchg
ret
dec
add
add
push
outsb
add
stc
jb
dec
jno
mov
mov
stc
jb
add
jl
test
add
stc
jb
add
inc
cmpsl
push
xor
out
rep
nop
jmp
add
add
xchg
push
iret
pop
stc
jb
add
dec
push
xchg
inc
add
jmp
add
push
add
mov
push
push
mov
xchg
ret
movsb
out
inc
pop
xchg
les
pop
nop
jmp
add
dec
movb
add
adc
mov
xchg
ret
add
dec
pop
and
stc
jb
add
mov
add
call
sbb
sbb
mov
push
mov
xchg
ret
add
push
add
call
stc
jb
lret
add
cli
jne
stc
jb
xchg
pop
popa
mov
es
stc
jb
add
mov
xchg
ret
out
inc
incl
cli
cmpl
nop
jmp
popa
add
popa
add
sbb
sub
inc
add
inc
add
aaa
scas
mov
nop
jmp
decl
add
lret
mov
stc
jb
add
add
test
nop
jmp
testl
add
fldenv
popa
add
jb
out
add
inc
cmpsl
popa
out
mov
stc
jb
sbb
sbb
testl
add
mov
xchg
ret
add
ror
and
push
mov
xchg
ret
add
movsb
inc
pop
je
stc
jb
pop
cmpsl
or
dec
push
mov
xchg
ret
testl
add
push
mov
xchg
ret
dec
add
xorb
dec
mov
stc
jb
mov
mov
stc
jb
jns
popa
mov
sbb
movb
orb
pushl
add
xchg
add
lret
mov
xchg
ret
add
add
pop
sahf
sahf
cmp
nop
jmp
mov
dec
xchg
int
push
push
mov
xchg
ret
add
add
inc
sub
ret
pushf
inc
add
sub
sti
pusha
push
mov
xchg
ret
sbb
cmpsl
push
cmp
push
jg
pop
adc
test
sub
ret
dec
or
push
add
loopne
pushl
stc
jb
in
add
mov
nop
jmp
mov
add
test
cmp
add
ljmp
add
imul
stc
jb
mov
add
aaa
add
lret
call
stc
jb
push
in
sub
imul
push
mov
xchg
ret
xchg
inc
add
adc
mov
add
test
dec
add
jb
dec
inc
add
push
pop
push
daa
repnz
incl
add
add
jb
add
popa
pop
add
dec
push
stc
jb
mov
add
add
stos
mov
stc
jb
add
xchg
add
inc
sbb
mov
adc
jmp
lret
in
add
fists
ret
rolb
xchg
add
inc
sbb
test
cmc
stc
jb
or
int
inc
stc
jb
add
add
add
out
lods
call
stc
jb
incl
shlb
addb
add
pop
dec
push
xchg
xor
jno
shr
stc
jb
aad
dec
add
xchg
ss
mov
nop
jmp
add
sbb
add
sub
ljmp
dec
pop
pop
add
popa
in
push
push
mov
xchg
ret
xchg
add
ror
push
mov
xchg
ret
sbb
sti
add
push
mov
xchg
ret
add
add
mov
add
imul
add
repnz
les
add
add
jb
add
add
mov
stc
jb
add
aaa
clc
movzwl
stc
jb
and
add
push
push
mov
xchg
ret
out
pop
cmpsl
movb
mov
stc
jb
add
jns
xchg
push
ficompl
jb
dec
lret
add
nop
jmp
in
inc
add
mov
xchg
test
hlt
inc
add
add
mov
in
add
add
push
add
add
add
add
add
jno
inc
dec
mov
stc
jb
add
aad
int3
rep
push
mov
xchg
ret
add
xchg
mov
pop
push
mov
xor
je
test
add
sub
add
call
jb
add
inc
fiaddl
cmp
mov
stc
jb
xor
mov
jmp
stc
jb
mov
pop
add
sbb
incl
dec
out
add
add
stc
jb
add
push
shll
add
and
push
mov
xchg
ret
out
add
aad
inc
cmp
jb
cmpsl
jno
rolb
out
int
stc
jb
and
pop
add
dec
shr
cmc
xchg
nop
add
stc
jb
add
mov
stc
jb
xchg
add
add
int
stc
jb
lret
add
jns
add
or
call
incl
add
add
add
stc
jb
xchg
xchg
in
add
mov
add
and
out
cmpsl
inc
add
add
push
add
stc
jb
dec
xchg
or
push
stc
jb
sbb
add
mov
mov
insb
add
add
add
sbb
mov
add
jmp
cmpsb
inc
add
add
adc
stc
jb
movb
inc
add
add
mov
stc
jb
add
add
out
pushl
add
sub
jns
adc
jne
stc
jb
add
push
stc
jb
add
lret
mov
xor
add
aam
lea
nop
jmp
add
roll
add
push
mov
inc
add
sub
add
xchg
mov
add
stc
jb
add
push
or
inc
sub
jb
add
addb
mov
xchg
ret
push
add
out
decl
nop
jmp
xchg
lret
cmpsl
lret
fimull
test
stc
jb
add
int
or
stc
jb
notl
push
add
stc
jb
inc
add
and
stc
jb
push
inc
add
add
inc
push
mov
xchg
ret
add
add
push
stc
jb
add
add
in
dec
xchg
mov
stc
jb
dec
add
add
std
xchg
stc
jb
out
call
pop
pop
stc
dec
push
mov
xchg
ret
add
fiaddl
mov
daa
aam
push
mov
add
sarb
bound
add
or
out
incl
add
add
call
inc
in
jb
add
sub
and
cmp
movsl
stc
jb
add
add
add
inc
pop
pop
cs
nop
jmp
mov
mov
fmull
jb
add
add
stc
jb
add
add
rolb
sahf
popl
stc
jb
xchg
popa
movsb
or
cs
nop
jmp
add
add
dec
xchg
in
xchg
or
sarl
push
out
push
mov
sbb
jb
add
push
notl
ret
xchg
stc
jb
add
add
sub
dec
sub
jb
mov
cmp
ret
stc
jb
jno
add
add
lods
pusha
stc
jb
add
add
pop
add
add
stc
jb
add
cmp
loop
mov
xchg
ret
cmpsl
add
add
adc
stc
jb
add
out
xchg
scas
mov
nop
jmp
dec
add
inc
push
mov
xchg
ret
popa
xchg
out
stc
jb
add
add
jno
test
jb
add
push
add
insb
inc
jb
stc
jb
add
add
cmpsl
dec
pop
stc
jb
add
lret
add
insb
subl
stc
jb
push
add
add
mov
nop
jmp
pop
add
mov
mov
stos
inc
add
add
add
mov
adc
jmp
add
add
add
out
jecxz
sub
jne
push
mov
xchg
ret
popa
fiaddl
xchg
mov
stc
jb
mov
aad
jnp
add
call
sub
stc
jb
cmp
add
push
jae
test
mov
xchg
ret
fiaddl
xor
and
push
mov
xchg
ret
inc
dec
cmp
lods
stc
jb
push
in
dec
and
add
push
push
stc
jb
popa
add
or
cmp
add
arpl
loopne
movsb
inc
ret
add
dec
lods
inc
add
add
sbb
jmp
out
jno
lcall
add
out
call
call
and
mov
jmp
incl
sbb
add
xchg
and
xor
in
add
stc
jb
mov
sub
stc
jb
add
add
add
add
jb
add
add
lods
push
mov
xchg
ret
in
xchg
in
add
sti
pop
stc
jb
dec
cmpsl
push
add
dec
xor
fwait
push
mov
popl
add
sub
xor
add
gs
les
test
add
adc
lea
add
mov
push
dec
add
fnsave
loop
fdivr
pop
ss
pop
fmul
adc
adc
sbb
sahf
push
sbb
inc
add
jmp
gs
xor
js
pop
pop
movl
ja
hlt
or
cmc
daa
jge
push
add
push
pop
sub
iret
rorl
cmpsl
in
insl
pop
xchg
sti
mov
xor
shl
ja
nop
push
add
out
ljmp
add
rolw
imul
jae
inc
xchg
je
insl
adc
push
test
mov
sbb
stos
mov
cmp
mov
dec
adc
add
roll
add
cld
cmpsl
mov
shlb
pop
aaa
add
popf
mov
mov
add
mov
push
addl
or
cld
mov
jmp
andl
push
mov
add
xchg
fdivp
sub
test
jne
lahf
sub
fcoml
ss
xor
pop
xor
mov
mov
bound
insl
aad
jg,pt
dec
in
cltd
jno,pt
les
loope
add
push
add
std
dec
aad
xchg
and
insb
jge
pop
scas
mov
pop
adcl
out
inc
inc
mov
das
push
xchg
pop
cmp
not
cmp
aaa
pushf
or
addb
bound
lea
gs
pop
pop
leave
shrb
out
lahf
std
xchg
je
fwait
push
div
xchg
add
sbb
out
lods
loopne
in
loope
arpl
or
les
cmp
or
sti
int
add
add
test
jns
cs
pop
sbb
add
mulb
cwtl
mov
decl
sbb
add
cmp
test
push
xor
inc
add
jle
push
pop
pop
sub
mov
add
repz
leave
push
xor
xor
aad
pop
push
inc
add
imul
roll
loop
or
add
addl
fistpll
push
movsb
sahf
lock
cmpsb
xor
xchg
shlb
popf
arpl
mov
fsubrl
xchg
xchg
outsl
jbe
mov
mov
fstps
add
sbb
ds
mov
xlat
int3
mov
push
xchg
pop
pop
test
push
mov
sub
addb
addl
add
inc
or
dec
mov
fistl
jb
out
dec
push
stos
popa
aas
aad
pop
add
mul
mov
mov
pop
das
mov
lock
inc
into
in
mov
out
hlt
insl
divl
aas
add
cmp
addb
pop
aam
jne
ret
dec
xor
and
addb
ljmp
add
add
mov
pop
stos
mov
jbe
and
dec
sub
inc
mov
cli
add
imul
push
push
and
je
inc
push
push
and
mov
fistpl
sub
call
add
cmp
xchg
dec
jo
jecxz
add
add
and
iret
fnsave
shll
sbb
ds
jns
scas
and
add
stos
xchg
jmp
mov
adc
and
addb
insl
cmp
fsubl
call
in
enter
out
data16
shll
xchg
jno
or
inc
insb
add
adc
mov
inc
dec
jbe
push
cli
inc
add
shrl
or
cmp
movsl
in
or
sarl
xor
daa
repnz
xor
adc
notl
ss
ja
in
inc
xor
gs
push
cmp
fdivs
cmpsl
ja
xor
or
xor
stos
pop
lea
loopne
pop
inc
jbe
rolb
mov
add
xchg
xchg
in
xor
cli
xchg
mov
add
sbb
loope
addb
sbb
pop
repz
add
popf
sahf
bound
cmp
xor
dec
pop
or
dec
shrb
inc
in
aam
repz
jae
pusha
add
inc
add
int3
rolb
cmp
push
movsl
inc
add
mov
sahf
pop
and
and
lcall
insl
shlb
xchg
pop
dec
dec
xchg
push
into
mov
arpl
nop
sub
int
xchg
scas
rolb
sbb
scas
repz
jmp
cmp
mov
add
test
fisttps
cmp
cmpsb
jmp
idivb
mov
aad
jbe
sarb
fbld
mov
jle
jg
ja
test
cmp
inc
int
add
jno
cmp
xor
movsb
filds
aam
xor
push
inc
loopne
lahf
cs
dec
in
icebp
sub
mov
rol
adc
and
add
lret
test
ret
stos
movsl
dec
xchg
sahf
inc
aaa
cmp
xlat
jbe
cli
cld
imul
cmpsl
icebp
fsubr
in
sub
es
jnp
sbb
xor
xlat
cmc
xlat
push
bound
mov
repz
push
add
hlt
jecxz
enter
dec
ds
addps
je
dec
mov
adcb
mov
add
loope
fidivl
bound
mov
je
in
jmp
add
enter
mov
sbb
sub
xor
xchg
add
cmp
sti
jb
in
cmp
add
loope
cmp
cmp
sub
jno
xchg
outsb
sti
insb
xchg
cmp
push
lahf
ds
outsl
imul
in
sahf
inc
add
sti
test
repnz
add
shll
nop
push
arpl
mov
mov
push
vorpd
cld
xor
enter
adc
jno
adc
sahf
mov
or
add
cld
rcrb
pop
push
add
push
loop
adc
sbb
push
lret
push
jecxz
sahf
cmp
sahf
ret
fldt
add
daa
in
notb
pop
push
int
ret
fwait
hlt
sub
or
jecxz
fimull
shrb
cmp
jb
rcll
ss
je
in
daa
insl
xchg
xchg
cmpsb
xorl
movsl
xchg
movsb
adc
orb
leave
mov
std
mov
addl
cmpsl
adc
mov
int
mov
arpl
dec
mov
test
pop
dec
or
inc
add
xor
pmulhuw
cmp
pop
add
dec
fnsave
clc
das
roll
or
jne
shl
test
pop
pop
mov
cmp
push
push
mov
jno
sbb
inc
xor
out
sbb
xchg
daa
fld
push
push
mov
mov
mov
jp
outsl
inc
mov
mov
jg
add
cmp
aam
insb
xchg
lahf
les
lret
cwtl
pop
pusha
add
icebp
fnstsw
and
cld
jno
fwait
mov
add
stc
push
and
test
inc
fs
mov
sub
ficoms
mov
cmp
rorb
fidivrs
push
loop
push
xlat
jg
or
sbb
adc
addl
out
and
and
xchg
inc
add
call
add
insl
outsb
mov
mov
and
mov
dec
xchg
in
call
mov
jno
in
xchg
out
popa
lahf
jbe
fmull
add
loop
add
cwtl
push
and
cmp
inc
cwtl
pop
xchg
jne
push
jmp
xor
cmp
xchg
cmc
or
addl
add
mov
mov
xor
add
fstps
add
lahf
or
jns
mov
fwait
ret
push
add
pushf
movsb
jg
leave
jge
rol
ss
test
cli
or
fadds
repz
addr16
ret
testl
dec
cmpsb
cmp
call
xor
jae
jae
in
lret
mov
mov
popa
into
rclb
aad
out
mov
dec
xor
lock
shr
rcrl
idivl
xchg
stos
dec
and
mov
xchg
jmp
or
or
not
mov
sbbl
jge
mov
mov
je
add
mov
jle
mov
add
adc
js
pop
adc
popa
fbld
aas
loope
xchg
out
call
mov
stc
stc
xor
mov
fnstcw
popa
add
fstps
inc
sub
int3
aaa
lahf
divl
das
mov
xchg
das
sbb
dec
scas
push
fisubl
add
sub
sub
aam
pop
cmc
and
out
lods
add
cmp
hlt
in
cmpps
aaa
mov
add
aaa
pop
push
xchg
sub
pop
add
add
jo
push
pop
add
mov
sahf
and
sub
repz
add
lahf
notl
mov
xlat
notl
dec
aam
xchg
add
mov
add
mov
pop
imul
xchg
addl
out
inc
jp
jnp
mov
loop
sbb
cmpsb
dec
fcoml
add
dec
ficoml
filds
add
scas
movsl
mov
fists
add
mov
lock
xor
clc
jae
cmp
adc
addr16
fdivp
es
add
adc
fs
xor
xchg
sub
shrb
xchg
sub
sahf
pushf
xlat
shrb
bnd
mov
xorb
movsb
cmp
add
xchg
sub
addb
jae
mov
xchg
xchg
cwtl
fsubs
lods
mov
lret
sub
add
outsl
out
testb
and
mov
jmp
mov
add
loopne
imul
stos
ficoms
out
enter
in
ret
or
jmp
pusha
add
cmpsb
xchg
movsl
add
and
sbb
decl
orl
sbb
xor
xchg
fcmovnb
push
pop
jmp
pop
xor
stc
and
fldcw
jo
cmp
add
lahf
cwtl
add
sbb
inc
mov
pop
sahf
sub
mov
imul
lods
lods
xor
push
add
jb
push
and
add
pop
in
mov
ret
cmp
fldt
rorl
lock
push
add
cltd
cltd
icebp
pop
lods
insl
jp
in
sub
xchg
repnz
adc
jmp
adc
sti
pop
inc
add
or
pop
pop
sbb
sub
xchg
inc
adc
push
pop
mov
ret
mov
imul
sbb
add
sbb
add
sbb
mov
imul
jno
and
dec
jmp
xor
xchg
sbb
test
out
mov
idivl
mov
add
in
add
dec
aad
add
inc
inc
add
clc
lcall
xor
in
stc
and
xor
and
rcr
dec
filds
popa
fmuls
xor
repz
sbb
lods
cmp
inc
add
pop
sbb
sub
addl
into
inc
and
jb
loope
movsb
inc
add
rcr
ret
cli
pop
ds
xchg
or
movsl
out
mov
test
or
jbe
xchg
mov
and
icebp
sub
add
push
mov
cld
mov
pop
add
movsb
jge
fsubl
mov
dec
add
pusha
add
jmp
xchg
cmpsl
lret
push
xchg
mov
adc
inc
adc
mov
add
dec
das
jg
shll
push
push
mov
and
or
in
pop
pop
adcb
fxch
inc
add
cmpsl
loope
or
mov
ss
bound
mov
fnstcw
push
insl
es
stc
in
lock
mov
push
xchg
mov
sahf
imulb
sub
test
lds
call
push
add
mov
repnz
mov
shlb
cld
sub
fnstenv
rcll
add
sbb
mov
movsl
mov
sub
dec
and
or
add
sbbb
mov
xor
sub
push
jp
pop
xor
jo
adc
icebp
loopne
inc
inc
inc
pop
sbb
repnz
xor
adc
inc
add
mov
ljmp
icebp
call
mov
push
add
jo
mov
jns
jae
repnz
jbe
icebp
ret
inc
clc
add
add
add
lcall
les
imul
ja
sbb
arpl
mov
cli
jle
pop
push
sub
xor
sub
pusha
add
jmp
inc
mov
cmp
xchg
push
push
mov
std
lahf
and
xchg
xchg
mov
ds
inc
jno
sahf
fcmove
mov
lahf
sub
rorl
dec
test
push
add
das
in
pop
dec
push
sahf
ds
dec
pop
mov
and
mov
es
adc
sbb
xchg
cmp
jle
push
pop
adc
jb
pop
pop
negb
shll
mov
sbb
mov
mov
or
lds
int
rol
adc
jnp
jno
lret
push
add
jnp
enter
in
addr16
mov
inc
loopne
es
mov
cwtl
test
aaa
push
test
mov
push
aad
inc
jmp
ljmp
add
into
scas
das
sbb
sti
out
movsl
out
out
in
push
inc
add
push
aas
cld
inc
pop
ss
mov
test
pop
sarb
out
sahf
mov
or
xor
cmp
dec
cmp
ds
fdivrs
add
adc
fldt
mov
xchg
daa
lods
mov
ja
cmp
mov
add
iret
fdivrs
mov
orb
jp
mov
push
leave
fwait
adc
bound
ds
add
mov
adc
loop
xchg
add
or
pop
adc
imul
mov
sahf
cmp
xchg
stos
mov
gs
add
cmpsb
mov
pop
xchg
sub
testb
add
addl
aad
jb
sbb
push
int3
outsl
mov
shll
xchg
adc
mull
int
push
pusha
add
xchg
dec
mov
jno
rolb
add
daa
add
xor
in
fninit
mov
outsl
pop
je
jge
pusha
add
jmp
call
mov
adc
dec
sahf
imul
add
clc
inc
mov
mov
cmc
lods
xor
sbb
jl
jecxz
mov
lods
fistpl
add
and
xor
mov
in
push
add
lods
mov
or
adc
mov
push
lahf
lods
add
dec
add
loope
cwtl
cwtl
mov
aam
leave
loopne
and
pusha
add
mov
or
mov
and
sub
inc
je
pop
pop
scas
mov
mov
stos
fadd
enter
movsl
mov
mov
stos
pusha
add
push
add
dec
imul
or
add
mov
fidivrs
stc
pop
repz
inc
fwait
outsl
push
mov
nop
out
lcall
add
mov
xchg
aas
mov
sub
cltd
ret
ds
xchg
adc
dec
push
add
xor
push
jne
mov
pop
mov
js
add
test
punpcklwd
imul
fmuls
movb
fdivrs
xchg
dec
sub
add
inc
add
lahf
inc
add
mov
aad
pop
jmp
push
sbb
hlt
test
loope
xlat
icebp
mov
add
cmc
fdivr
in
hlt
sbb
popf
push
push
jecxz
and
in
mov
iret
add
add
adc
xor
sbb
add
ret
mov
adc
add
add
ficoml
lods
sub
xlat
icebp
fildll
fwait
xchg
cmpsb
inc
xchg
fists
mov
xlat
sbb
sti
call
aas
and
push
test
add
dec
jmp
adc
jb
std
popf
xchg
loope,pn
aam
mov
fdivr
push
push
and
out
add
jp
ds
roll
or
jmp
fs
out
call
popa
xchg
jmp
sbb
aam
xchg
inc
add
push
cmc
clc
in
movsl
fimull
notl
cli
repz
nop
imulb
sub
sub
cmc
push
test
xor
call
repz
adc
push
movsb
jno
sub
popa
leave
cmpsb
pop
shlb
or
jnp
insb
gs
in
add
xor
movsb
repz
add
adc
mov
int
mov
rep
mov
sub
leave
repz
stc
xor
aas
test
add
mov
adc
fs
aaa
out
in
mov
fs
test
addr16
mov
fisubrs
mov
hlt
pop
rcl
add
xor
mov
scas
inc
dec
call
out
mov
add
pusha
add
test
add
int3
cmp
cltd
imul
add
and
test
push
dec
in
in
jl
add
lcall
adc
addl
in
jo
push
addb
add
testl
push
out
in
dec
adc
jge
xor
aad
mov
pop
sub
add
int3
cmpsb
das
add
stc
movsl
ret
or
pop
and
cli
jno
and
scas
sbbb
out
sub
fs
adc
cs
test
cld
int
insl
jmp
test
fs
mov
das
add
cli
mov
mov
adc
sbb
repnz
hlt
and
subl
test
sbb
sar
cmp
cmp
rcrl
mov
pop
les
leave
lret
adc
add
pop
ret
sub
add
cmp
xchg
lock
mov
lcall
xor
ror
addb
stos
push
jo
and
enter
addl
add
lret
dec
je
outsl
xchg
bound
lret
stos
aam
xchg
lods
sbb
outsb
push
movsb
mov
repz
popa
adc
and
add
das
jno
lcall
fisubs
dec
cmp
inc
xor
loop
std
push
mov
gs
ret
jbe
add
aaa
xchg
pusha
add
pop
sahf
fs
mov
movsb
stos
add
fwait
pop
push
lcall
divb
les
adc
roll
js
fs
movsl
fstps
shr
jno
imul
enter
or
mov
adc
lea
gs
jbe
xchg
flds
and
or
mov
decb
cmpsb
mov
dec
xchg
cmp
fidivl
icebp
add
lods
mov
add
sub
mov
data16
cmp
mov
xor
enter
enter
loope
cli
push
mov
adc
and
or
jbe
test
xorb
rep
imul
add
aad
push
sti
addr16
aaa
adc
fs
aad
shl
les
movsb
inc
add
add
adc
imull
bound
xchg
daa
scas
adc
push
add
xor
mov
sbb
xchg
je
add
sarl
dec
enter
scas
or
mov
arpl
add
aas
test
mov
and
fldl
aas
mov
int3
pop
ret
jle
fwait
cld
jl
dec
into
sarb
add
jl
insl
inc
lods
out
in
mov
popf
imul
jecxz
jne
jge
aam
sub
xchg
hlt
mov
cmp
jg
out
insb
xchg
or
icebp
test
insl
xchg
into
cmp
add
mov
or
pop
out
mov
adc
stc
in
mov
dec
dec
pushf
cmc
adc
in
pop
movsl
stc
les
inc
clc
mov
sub
mov
and
jl
xor
pop
mov
into
into
pandn
add
lcall
out
xchg
xlat
sbb
test
xchg
fwait
sbb
add
sbb
jmp
roll
mov
mov
inc
inc
notb
mov
and
in
adc
insl
mov
int3
imul
add
push
add
add
daa
stc
xor
in
mov
jns
add
and
xor
or
xor
pop
shlb
xchg
insl
jp
lret
push
test
imul
add
loope
sbb
sahf
fidivrs
push
ss
int
stos
out
mov
imul
jnp
int3
std
int3
adc
aam
jl
cmc
out
and
pop
pop
test
int
pop
mov
divl
xor
adc
add
inc
ljmp
bound
mov
ret
addl
outsb
xchg
mov
mov
xchg
add
lods
xchg
sub
sbb
je
push
nop/reserved
mov
mov
xchg
jmp
bound
data16
fwait
ret
insl
fs
push
sbb
xchg
and
mov
adc
jmp
and
test
mov
add
push
xchg
out
stc
int
mov
dec
insl
mov
xor
inc
lock
iret
push
mov
add
adc
rorb
lea
popl
xchg
fiadds
push
add
mov
gs
add
pop
jle
aas
cmp
cmpsl
adc
cli
push
dec
sub
or
xchg
lret
sub
out
push
pop
hlt
push
and
fwait
insb
jb
lock
mov
ds
cmp
push
adc
mov
or
fmul
xor
mov
dec
in
jb
pop
in
add
push
bnd
movl
jo
inc
add
mov
movsl
sbb
sbb
ss
inc
cltd
mov
add
les
lds
clc
ret
push
add
stos
cmp
in
mov
mov
mov
xor
pop
dec
mov
mov
push
push
js
mov
and
adc
sbb
ret
mov
pop
stc
int
imul
xchg
pop
pusha
add
sub
mov
add
pusha
add
cltd
out
inc
jo
mov
fldt
add
add
add
mov
mov
or
lea
into
shl
mov
fstp
les
js
lea
push
popf
mov
lea
jl
mov
inc
mov
pop
mov
add
add
pop
xchg
push
xor
ss
push
xor
cmpsb
dec
mov
enter
stos
iret
je
jb
sub
lcall
pop
pushl
out
shlb
aad
pop
and
inc
xchg
adc
cld
int
and
add
jge
mov
jmp
rcr
xchg
push
lret
and
adc
insb
pop
lods
cmpb
add
push
add
sbb
add
test
repnz
or
scas
mov
cltd
push
jg
lock
add
pop
sbb
jns
popa
jge
add
push
add
xor
shlb
pushf
cmp
es
jg
inc
incl
xchg
sbb
and
popa
jae
fidivrs
push
les
test
ss
or
add
push
lret
cs
push
lock
sti
loopne
loop
das
or
pop
and
imul
or
sbb
test
xchg
dec
icebp
cltd
aam
push
pop
xchg
mov
add
sarb
test
jl
addb
dec
cmp
std
push
add
negb
nop
jnp
mov
pop
pop
aas
inc
out
pusha
add
push
pusha
add
cmp
add
mov
outsb
xor
xchg
push
jle
sub
cmp
jmp
out
dec
pop
mov
add
inc
out
jne
loop
leave
jle
in
je
mov
pop
mov
xlat
xchg
inc
and
flds
mov
push
sbb
out
adc
rorl
add
int3
fwait
pop
pop
lahf
bound
ljmp
mov
and
shrl
xchg
fistpll
pop
lahf
jle
cmp
jp
ret
sub
push
xlat
jbe
xchg
imul
mov
mov
dec
test
ficomps
xchg
sbb
or
mov
mov
test
stos
and
addl
inc
push
push
hlt
pop
dec
sbb
sub
push
cmc
sbb
pop
in
ds
lods
jne
add
or
or
and
jnp
and
or
push
mov
adc
push
add
push
outsb
mov
add
lds
jge
stc
push
push
mov
ja
and
out
sbb
test
dec
push
add
je
sub
into
adc
add
leave
insl
and
and
out
stc
or
mov
jge
notb
std
mov
cmp
jmp
rcl
test
jo
lods
pop
inc
push
lahf
lods
inc
push
mov
jbe
mov
loope
pop
fcmovnb
xlat
mov
pop
push
sbbb
sbb
pop
inc
inc
jge
jp
adc
push
lret
sbb
out
adc
cmpsl
add
les
and
fs
add
test
cli
stos
loope
xor
adc
aam
sahf
movntq
insl
in
fs
xchg
xchg
add
add
fs
pop
std
mov
push
mov
mov
inc
int3
cmp
test
daa
ret
sub
lock
jbe
push
sub
xchg
push
cmp
ljmp
add
loop
lret
mov
and
xchg
mov
add
out
mov
loope
aam
shrl
aad
pop
xor
fcmovb
outsl
sub
out
mov
sahf
or
cld
cwtl
fstps
push
add
pop
lcall
jmp
js
add
or
or
push
in
inc
add
cmp
insl
mov
dec
inc
jge
cmp
roll
enter
aad
push
xchg
insb
and
jno
pop
xchg
or
xor
loop
fwait
rorl
shll
mov
mov
lock
inc
lds
xchg
fisttpl
out
xchg
xchg
and
add
adc
addb
andb
xchg
pop
push
xchg
xchg
test
xchg
push
les
jmp
shrb
into
loop
jb
cli
sbb
jno
jne
aam
sbb
sbb
xorl
mov
xor
outsl
xor
cltd
cmc
movsl
in
loope
mov
dec
add
inc
jnp
adc
xor
clc
cmp
mov
and
insl
inc
add
pop
sbb
loopne
or
jnp
lock
add
mov
add
inc
xor
mov
repz
add
xor
mov
andl
mov
xor
push
push
fmulp
fwait
in
mov
adc
xor
nop
pop
inc
add
adc
repz
push
mov
cmp
and
adc
mov
jno
sbb
adc
add
xchg
sti
cvtps2pi
add
and
mov
dec
cmpsl
incb
addb
fs
in
mov
cmp
and
cltd
mov
add
fisttps
adc
dec
or
inc
addr16
sbb
add
dec
int3
add
std
cmpsl
adc
stc
mov
add
and
jno
sub
inc
add
sti
leave
in
mov
mov
aad
add
pop
gs
and
add
les
add
xchg
stc
into
push
add
pcmpeqd
add
or
add
lret
mov
cld
xchg
sbb
adc
jnp
cld
shr
dec
push
add
mov
sahf
cmc
push
add
cmpb
jb
sahf
cwtl
mov
call
outsl
dec
pop
xchg
cmc
addl
mov
or
add
imul
shlb
xor
xchg
aas
outsb
and
jb
mov
jo
es
test
pop
pop
inc
xor
leave
stc
and
call
push
addb
mov
repnz
enter
pop
mov
imul
aaa
test
ds
mov
mov
fisubrl
ja
sti
pop
pop
lds
pop
sti
mov
cmp
pop
xchg
add
pop
mov
dec
sbb
mov
fadd
clc
push
add
xchg
mov
pop
push
lea
jecxz
outsl
mov
pop
jg
in
popa
inc
or
cmp
add
mov
mov
push
lea
add
pop
mov
sbb
aam
cmp
addl
cmpl
mov
insl
push
scas
mov
push
mov
mov
pop
mov
rcrb
xchg
movsb
sub
mov
add
xchg
int
cmpsl
inc
in
fsubs
cmp
dec
sti
int
xor
cmpsl
insb
xchg
cmp
inc
outsl
cmp
adc
mull
test
sbb
jl
repz
fldl
add
add
jns
test
ret
je
adc
push
add
push
push
leave
mov
movsb
xchg
repz
add
add
xchg
mov
or
or
xchg
add
lock
mov
imul
mov
imul
aas
mov
mull
add
nop
push
or
and
lahf
jo
and
xchg
data16
sti
xchg
adc
fmul
push
add
mov
add
scas
pop
cmpsl
or
xchg
call
and
sbb
repnz
add
popa
jmp
mov
push
imul
in
frstor
sti
jg
xchg
sti
push
jp
mov
sbb
mov
xor
iret
inc
and
test
shlb
push
push
movsb
push
add
push
mov
push
bound
es
and
jecxz
pop
dec
adc
ficoms
fscale
stc
icebp
cwtl
mov
pop
fisttpl
cmp
test
fstp
jmp
sbb
mov
xchg
das
sbb
dec
dec
or
add
imulb
aam
fcmovu
mov
mov
insl
roll
or
pop
nop
addb
lahf
xor
bound
inc
mov
push
imul
rcrl
int
shrb
or
push
imull
imul
movl
icebp
mov
push
push
mov
add
pushf
pop
mov
adc
mov
add
mov
add
push
add
mov
cmp
pop
mov
in
mov
add
push
pop
cmpsl
test
repz
in
mov
fcoms
mov
loop
cmpsl
stc
xchg
fadds
mov
jle
mov
test
cmpsl
lcall
sbb
add
push
inc
add
sub
mov
xor
add
rcl
push
dec
jp
das
mov
xchg
fstpl
cmpsl
stos
inc
jo
pop
pop
iret
pop
pop
push
pop
cs
fimuls
lret
movsb
addb
jge
sbb
push
push
pop
pop
subb
add
jo
push
loope
lods
inc
cltd
and
imul
and
push
add
pop
lcall
imul
add
jle
shrb
imulb
jo
adc
test
xchg
leave
add
aas
cs
dec
addb
add
std
leave
clc
test
icebp
pop
call
mov
xor
xor
sub
push
add
std
lahf
test
push
pushf
add
pushf
pushf
test
out
mov
mov
mov
ret
hlt
pop
roll
push
xor
out
out
jbe
out
ljmp
push
dec
dec
arpl
push
push
cld
and
lock
mov
mov
lds
jle
add
adc
mov
mov
daa
lods
mov
mov
insb
enter
cmp
cmc
add
mov
sbb
add
mov
std
xchg
or
out
js
and
add
mov
psrld
add
cmpsb
xor
or
sub
xchg
sbb
push
jns
adc
jmp
in
cltd
mov
sahf
mov
sub
cmpsb
mov
add
add
pop
inc
add
subl
sub
push
out
mov
lds
lods
ss
cmp
push
or
add
add
jae
dec
addl
shrb
data16
cs
pop
insb
push
push
add
sub
enter
push
mov
xlat
push
add
xchg
inc
addr16
mov
mov
mov
loop
mov
mov
add
push
pop
mov
pop
mov
in
add
test
fs
jns
stc
pusha
add
sub
sub
mov
arpl
push
add
inc
add
mov
mull
dec
xchg
fstps
sbb
out
cli
movsb
jl
add
jmp
xor
addl
add
xchg
jnp
cs
loope
rorb
inc
jmp
add
call
inc
xlat
test
cmpsl
in
aad
add
or
mov
jb
cltd
lea
sbb
sbb
add
nop
dec
jo
aaa
add
pushf
pop
dec
push
pop
xchg
dec
jo
repnz
inc
add
mov
push
add
je
inc
add
push
push
pop
sti
jb
into
pop
jmp
add
inc
mov
int
pop
xchg
mov
mov
pushf
adc
out
shl
call
aad
xchg
movsl
pop
xchg
lds
dec
lock
rcl
pop
gs
sbb
xor
pop
outsb
pop
cmp
sbb
adc
mov
lods
adc
sarl
mov
add
add
mov
adc
xchg
mul
dec
incb
mov
outsb
mov
mov
sahf
dec
dec
jns
push
je
add
and
add
jne
xchg
sub
or
add
jle
pop
or
mov
mov
cmp
and
and
fchs
cmp
mov
jb
lea
leave
iret
mov
cmp
lods
xchg
pop
adc
xchg
pop
fwait
mov
mov
insl
pop
add
or
adc
mov
push
clc
data16
sub
daa
in
iret
fcompl
adc
sar
and
pop
stos
dec
inc
stos
es
push
cmpsl
cvtps2pd
pop
gs
iretw
add
sub
imull
mov
or
dec
dec
out
pop
addb
imul
sbb
add
and
inc
dec
dec
pop
inc
adc
jbe
and
mov
pop
jne
mov
xor
cmp
xchg
stos
pop
lret
sbbb
mov
mov
xlat
xchg
addb
adc
jecxz
in
scas
pop
loop
add
mov
repz
lahf
xchg
dec
jbe
or
dec
jbe
push
and
inc
arpl
dec
dec
push
int3
fsubl
and
pop
xchg
dec
aas
xor
mov
mov
mov
mov
and
mov
mov
xor
call
xchg
movsl
addr16
lods
iret
pop
lds
xor
inc
add
add
pop
out
add
addr16
gs
mov
loope
sbb
shlb
stos
pop
fdivp
nop
aaa
into
lahf
sub
addb
xor
xor
add
cmp
xorl
pop
jge
and
pushf
insl
mov
cltd
mov
pop
andb
sahf
lret
xchg
jo
adc
fs
fstl
mov
lods
inc
leave
mov
lret
add
mov
and
pusha
add
std
addl
daa
in
mov
out
xlat
push
push
add
insl
insl
and
cltd
lods
lock
xchg
lcall
push
sbb
cs
push
or
call
jae
lahf
ret
scas
out
pop
rcl
mov
imul
fimull
pop
dec
jge
insb
into
or
cmpsb
sarb
push
sub
jo
fwait
hlt
and
mov
xchg
jmp
xlat
addr16
movsl
cmp
dec
fstp
mov
xchg
pop
popl
add
outsb
fs
daa
jnp
ljmp
fimull
js
jecxz
sbb
and
push
xor
hlt
sbb
fistpl
mov
mov
pusha
add
mov
fstpl
out
jno
rorb
lahf
cmp
xchg
pop
jae
pop
pop
cli
inc
mov
dec
mov
addr16
stos
adc
out
push
jnp
push
add
insb
push
xchg
scas
testb
and
call
jmp
daa
jno
adc
adc
adc
out
or
or
inc
cmp
xchg
mov
mov
jb
aas
fsub
js
push
sub
and
sub
cmp
in
idivb
addr16
and
pop
aas
xor
dec
pop
aad
out
mov
adc
dec
mov
mov
add
add
movsb
sahf
jae
inc
movsb
fnsave
adcl
xchg
xchg
mov
sbb
cmp
outsb
fistpll
add
icebp
jae
lock
test
jecxz
repnz
pop
mov
fdivp
inc
rclb
add
inc
pop
add
lahf
stos
leave
dec
popf
mov
xor
bound
cmp
cmp
xchg
popf
icebp
sub
xor
lret
xchg
aaa
dec
push
addr16
xchg
jo
add
fidivrs
sub
add
arpl
daa
sbb
aaa
cs
sbb
add
lods
jne
cmpb
mov
push
add
xchg
sbb
or
push
inc
push
cmpsl
push
dec
lea
jp
mov
stos
aaa
xor
cmpsl
xchg
mov
add
pusha
add
xor
xchg
out
lret
icebp
mov
aas
lock
int3
repz
fstp
cli
lods
fidivl
call
leavew
mov
rep
std
outsl
inc
lahf
xchg
es
into
dec
jl
ljmp
je
adc
sbb
and
scas
addb
mov
add
add
push
stos
fisttps
pop
cmp
xlat
jg
cmp
or
in
add
push
gs
adc
ud2
int
out
roll
out
std
popf
xchg
sbb
pop
sbb
push
add
mov
add
add
pushf
mov
pop
mov
mov
lods
cmp
jb
dec
fwait
jae
insl
xchg
aam
add
mov
and
pushf
jecxz
ss
jp
pusha
add
pop
bound
inc
adc
mov
xchg
mov
add
pop
aam
loopne
add
movsl
rorl
aaa
cli
pop
push
pop
push
push
loope
and
xchg
sbb
xchg
jle
lods
ret
push
stos
adc
adc
and
out
jae
movsl
dec
sbb
lcall
and
adc
dec
jno
jno
or
cs
int
add
xchg
outsb
aas
inc
jmp
inc
add
inc
add
xor
loopne
lds
insb
pop
es
push
and
in
sub
mov
daa
push
push
insl
stos
bound
nop
loopne
xchg
jecxz
mov
and
jns
push
mov
inc
imul
pop
bound
adc
xchg
test
subl
mov
jns
popf
cmp
jae
mov
jno
xchg
and
test
or
and
stos
loope
add
sbb
or
cmp
cltd
stos
int3
jmp
add
movsb
cld
cmp
pop
xor
and
inc
xchg
inc
scas
cwtl
mov
adc
scas
mov
sbb
movsb
jl
loopne
aam
aad
pop
push
push
out
ja
cmp
mov
movsl
sub
inc
add
aas
inc
mov
push
enter
mov
mov
ret
push
inc
in
wrmsr
add
add
push
ss
xor
lods
icebp
xchg
lcall
adc
insl
lret
cmpsb
scas
pushf
sbb
out
inc
lods
jo
ljmp
xlat
jp
test
mov
add
add
jg
and
add
mov
shrb
xchg
xor
or
cmp
xchg
rcl
xchg
in
inc
aas
fcmovnb
dec
lods
mov
shl
pusha
add
outsl
incl
jge
pop
outsb
lods
xor
jb
cmpb
fstps
mov
aam
add
and
shl
xor
jb
or
out
adc
push
push
mov
in
adc
scas
cwtl
xchg
ss
dec
xchg
fadd
aad
xor
and
std
fmull
push
jns
sbb
push
add
adc
add
jmp
xor
dec
cmp
pop
enter
loop
jnp
and
xchg
xchg
in
and
ja
push
cld
adc
dec
aad
add
fnstcw
cld
jne
ret
test
in
mov
inc
mov
loopne
pop
pop
cmp
mov
js
jns
xchg
fwait
daa
in
clc
pop
jns
jbe
movsb
jnp
add
mov
insb
and
movsl
insl
js
pop
mov
sbb
xchg
xchg
addl
push
mov
pop
pop
inc
cwtl
sbb
lods
mov
xor
jb
scas
or
in
fidivrs
int
lcall
je
cmpsb
xchg
in
in
mov
sbb
scas
push
sub
icebp
sub
in
fistpll
shrl
or
rorl
rclb
jp
aam
enter
jl
pop
jl
cmp
and
ljmp
add
fisubrs
bound
sbb
mov
inc
add
fadds
push
loop
push
add
lcall
in
ret
mov
inc
test
or
addr16
sbb
or
call
pushf
lods
test
test
mov
push
add
fdivl
sub
and
sbb
and
ret
inc
jno
adc
imul
cmp
scas
mov
inc
cltd
xchg
aad
sub
dec
jne
xadd
std
std
or
sbb
ja
lods
mov
add
push
cmp
and
adc
notb
xchg
hlt
mov
sarl
add
inc
scas
dec
pop
or
mov
pop
mov
cwtl
cwtl
inc
push
ret
cmpsb
xor
jmp
movsb
clc
popa
inc
xor
mov
pop
lret
mov
call
in
sbb
addb
in
rcll
jp
add
jge
inc
mov
in
xchg
mov
cltd
sbb
pushl
jle
test
and
adc
mov
clc
xchg
push
cmp
aad
andb
aam
addb
out
mov
add
clc
mov
ret
bound
loopne
in
fwait
cld
scas
jp
scas
shrl
loop
sub
and
imul
inc
adc
cmpsl
das
in
xchg
lret
adc
test
aaa
fs
repz
inc
mov
cmpl
cld
dec
adc
movsl
arpl
mov
xchg
ljmp
dec
fldenv
clc
adc
xor
push
or
cmc
pop
enter
imul
js
mov
pop
mov
scas
adc
cmpsl
ljmp
stos
push
inc
stos
dec
movsl
cmp
xchg
lahf
shll
lea
jmp
test
fdiv
insb
inc
aam
sbb
mov
fsubs
cmc
jmp
lods
xchg
je
scas
repnz
add
sar
or
lcall
mov
filds
add
jecxz
pop
testl
xor
mov
insb
inc
mov
sub
loop
sbb
and
outsl
arpl
inc
dec
fbstp
or
jmp
mov
pusha
add
mov
inc
add
mov
and
sbb
xor
mov
pop
stc
jbe
cltd
dec
jno
or
scas
jge
jbe
loope
je
add
mov
pop
sub
push
push
fcoms
pop
mov
ss
sarb
mov
adc
shrl
xchg
sub
aad
cmpsl
cmp
dec
jno
mov
mov
inc
add
jb
lds
xchg
pop
int
in
icebp
push
mov
add
mov
sar
popa
shr
jae
dec
push
add
mov
sbb
pop
pop
or
shlb
stc
fadds
dec
cmc
mov
mov
add
xchg
xor
push
add
addb
inc
es
xchg
int
out
pop
cmpsl
ret
rorb
add
sub
shlb
jne
push
pop
mov
je
xlat
push
mov
sbb
cmp
inc
dec
popa
adc
dec
or
in
jp
adc
xor
repnz
mov
jnp
sbb
enter
jb
ret
and
imul
cs
mov
add
and
adc
hlt
dec
addb
shlb
or
cmpsl
xor
mov
sbb
add
cmpsl
sarl
push
movsb
push
pop
or
cmp
add
stc
sahf
paddq
xor
lods
stos
mov
add
les
es
mov
sbb
sbb
add
fnsetpm(287
test
adc
cmpb
add
popa
jle
push
mul
arpl
xchg
js
jecxz
and
push
inc
add
dec
xlat
out
mov
cmpsl
in
cmpb
mov
jecxz
jne
add
push
pop
inc
jno
push
or
jb
mov
or
lret
aas
pusha
add
stos
or
dec
mov
movsb
xchg
repnz
dec
paddw
add
movsl
and
xchg
cmp
popf
lcall
mov
mov
cltd
jp
cli
fdiv
dec
mov
jo
sub
addb
or
rol
cmp
nop
scas
jp
cmpsb
cltd
mov
sahf
mulb
ljmp
out
test
add
int3
jp
dec
fcompl
push
popf
cmp
fwait
movsb
fwait
test
leave
das
mov
adc
ret
cmpb
pop
fwait
xchg
jmp
jmp
push
mov
arpl
jmp
cmpsb
push
push
pop
in
loop
in
or
push
nop
out
xchg
lahf
jecxz
pop
xchg
or
loope
xchg
sbb
jbe
nop
dec
mov
mov
push
mov
pop
addl
int3
push
mov
pop
loope
test
imul
jecxz
pop
pop
xor
sar
ds
jg
fsubl
jge
push
addb
mov
hlt
sbb
nop
je
adc
jae
scas
ja
imul
stos
mov
dec
mov
in
idivb
fnstenv
lea
cmp
or
fisubs
and
adc
sub
pop
andb
adc
lods
pop
lea
xchg
adc
adc
or
jo
imul
push
jo
mov
addb
mov
into
insb
cs
sub
adc
loope
sbb
or
add
stc
add
or
addr16
imul
jnp
adc
je
outsl
add
inc
insb
push
nop
mov
push
mov
add
aaa
repz
lcall
inc
add
icebp
sub
mov
xchg
push
add
inc
out
les
cli
jg
ss
xchg
and
mov
fisubrl
imul
rep
roll
dec
mov
sub
or
lods
mov
or
push
lods
cmpsl
sub
stc
jnp
xchg
insl
push
push
stos
lea
and
push
outsl
daa
mov
cwtl
cmc
push
shlb
mov
popa
add
inc
mov
dec
pop
roll
add
cli
cli
pop
push
in
mov
xchg
fstl
xor
mov
jmp
cmpsb
inc
dec
push
add
imul
mov
popf
mov
inc
sbb
insb
negb
push
add
sbb
rcll
movsl
or
xor
inc
jecxz
movsl
repz
adc
adc
addb
mov
mov
xchg
adc
xor
mov
inc
mov
dec
adc
lahf
ljmp
mov
shll
add
xchg
popa
pop
jnp
fstl
jo
ss
fnsave
addl
test
in
cmp
dec
dec
sbb
rcll
adc
dec
adc
lret
or
or
sub
pop
out
leave
dec
xor
imul
lds
ja
sub
lcall
sbb
sbb
cmpsl
jb
imull
adc
jl
sbb
add
cwtl
dec
or
enter
pop
lods
dec
fs
pop
iret
test
inc
std
jmp
shl
imul
stos
dec
jmp
dec
stos
dec
ror
xchg
or
out
addr16
aaa
cmpsb
pop
mov
pop
fwait
add
mov
ja
add
dec
xor
stos
ss
cmc
push
ss
ljmp
or
lahf
mov
mov
mov
fidivs
push
add
daa
lods
in
jmp
into
xchg
loope
in
test
lahf
xor
mov
add
cmp
cmc
dec
pop
pushf
sarl
push
pop
repnz
ds
faddp
movsb
push
add
hlt
push
sub
sbb
addl
push
sub
mov
mov
test
sbb
or
nop
not
xchg
jmp
add
fwait
jg
fadds
jecxz
sub
pusha
add
out
mov
pop
jl
jecxz
in
jno
jns
rcr
stc
imul
inc
jg
add
loope
test
mov
push
dec
or
int3
scas
icebp
lea
movsl
aaa
fwait
dec
ror
adc
jo
lret
mov
loope
aam
jge
cmpsb
in
loopne
pop
mov
mov
sub
jp
and
xor
das
add
in
mov
fsubrp
fcoms
inc
add
cmp
sbb
fcompl
add
lret
nop
jae
addl
jmp
mov
repz
sbb
push
add
cmp
das
aad
add
fwait
sbb
lahf
bound
mov
and
mov
popf
inc
pop
fs
pop
shlb
loop
mov
sbb
cld
inc
or
pusha
add
mov
push
add
mov
mov
lods
mov
cmp
mov
dec
std
xor
out
push
iret
aad
xchg
test
add
cmp
lahf
aam
sub
pusha
add
inc
add
scas
adc
pop
jnp
pushf
xchg
mov
add
fidivrs
lods
cld
fcoms
pop
loop
mov
add
pop
aaa
xchg
sub
lock
rcrl
push
in
dec
outsb
inc
out
je
outsl
mov
fcomp
pop
pop
pop
jnp
sbb
or
push
add
mov
add
call
pop
xchg
out
jl
out
add
popa
lods
out
into
pusha
add
add
ljmp
test
xor
cltd
ja
iret
nop
sub
stos
rcrl
and
or
fidivrs
pop
sti
sbb
add
stc
or
pop
cs
or
fldl
mov
stc
and
and
js
fstp
xchg
add
cmpsb
cli
cmpb
test
cmc
and
scas
punpcklwd
jbe
popa
push
addl
jp
xlat
sahf
andl
jp
sahf
pop
loope
and
mov
or
out
mov
push
xchg
or
mov
into
xchg
cmp
add
dec
imul
add
and
xor
clc
xchg
shrb
cmp
and
xor
add
mov
mov
push
push
test
lret
aaa
test
or
sarb
stos
mov
sub
out
lods
int3
push
add
shl
or
dec
push
icebp
sbb
popf
cmpsl
or
into
scas
push
imul
jmp
jbe
jae
iret
bound
sub
fs
mov
int
cmp
lods
mov
imul
out
popf
stc
ds
fcmovnb
and
lahf
gs
push
dec
dec
pusha
add
push
jp
sbb
data16
mov
data16
add
inc
add
push
testl
fwait
pop
lock
test
jno
push
cltd
outsl
ja
cmpsb
add
dec
clc
add
enter
push
push
xchg
pop
xor
stos
mov
jge
adc
std
mov
cmp
jne
iret
push
add
add
mov
xor
fwait
or
sbb
push
add
mov
jmp
mov
jle
mov
sub
mov
xchg
pop
pop
push
xchg
lea
cmp
and
fidivs
hlt
mov
stos
jae
jnp
shll
rolb
mov
inc
addb
xchg
shr
imul
arpl
test
int
jge
sub
pop
lret
mov
sbb
addb
dec
mov
add
lds
xor
mov
outsl
sbb
mov
andb
outsb
scas
mov
jbe
stc
cmpxchg
add
aad
jle
and
or
inc
lret
inc
pop
add
insb
hlt
sub
sbb
mov
inc
inc
mov
dec
push
add
insl
movsb
popa
dec
jp
mov
pushf
pop
xor
fs
dec
sbb
xlat
outsl
test
cmpsl
mov
add
bound
ja
adc
stos
xchg
add
cmp
add
adc
mov
xchg
sub
sbb
push
add
mov
pop
sahf
pop
not
dec
mov
xchg
cmpxchg
andb
mov
push
cld
cltd
lcall
sub
lds
cmpsb
push
add
loope
lea
or
sbb
je
lret
mov
clc
jg
jp
push
mov
rcrb
and
loopne
add
and
inc
mov
xor
pop
stc
sti
mov
push
add
add
aas
xchg
leave
aas
or
ja
lods
xor
and
sbb
dec
outsl
aaa
addr16
sub
lock
and
sarl
icebp
mov
repnz
xchg
xchg
or
add
inc
inc
add
cmp
pop
lret
cmpsl
cwtl
mov
std
movsl
xor
sub
cmp
sub
cltd
add
addr16
stos
out
cmc
cli
mov
push
loop
daa
std
aad
mov
add
lret
test
adc
jo
icebp
adc
dec
cmp
and
push
add
dec
xlat
test
sbb
sub
jp
push
cli
mov
push
aad
dec
call
lea
and
imul
dec
scas
rol
ret
sub
cmpsl
shrl
ret
stos
sti
fcmovb
punpckhbw
jo
shrl
and
fcoms
pushf
clc
fstpl
xchg
cmp
addr16
inc
dec
movsb
xchg
sub
inc
cmpsl
addr16
pushf
fsubs
movsl
fcoms
icebp
mov
mov
fmuls
push
sub
insl
add
test
outsb
push
xchg
add
in
addl
mov
xorb
or
sar
mov
add
imul
xchg
sbb
or
fisubl
jb
iret
push
push
repz
rcll
cld
lcall
mov
add
loopne
rcrb
nop
pop
xor
jnp
push
add
xchg
mov
dec
jo
lahf
mov
sub
jmp
je
iret
mov
out
dec
jecxz
test
add
jnp
rorb
add
in
mov
lock
and
frstor
jp
pop
pop
fcmovnu
cwtl
mov
out
pop
out
ret
sarb
jge
out
das
jcxz
add
inc
add
ret
dec
jno
dec
leave
or
orl
push
add
sub
jno
test
stc
das
mov
xchg
mov
sub
inc
xor
dec
cmpsw
addl
lret
lcall
mov
addr16
mov
cmpl
xchg
fld1
xor
lret
and
pop
test
sub
jbe
outsb
pop
adc
xchg
sub
pop
push
add
addb
sbb
xchg
test
lea
gs
fwait
xchg
das
clc
aaa
push
cmp
es
mov
inc
shl
xor
and
push
shll
add
pop
clc
fwait
rcr
popa
fisttpll
and
aam
movsl
push
and
adc
dec
jae
ljmp
adc
pop
imul
sahf
loopne
sub
cli
enter
mov
int3
sub
adc
add
movsb
rcll
outsb
jbe
cmpsl
jae
sub
testl
push
cmpsb
cmpsb
sub
xor
mov
test
xchg
jmp
test
mov
in
adc
push
dec
nop
adc
mov
jns
mov
or
add
std
adc
popf
xor
push
add
mov
inc
push
inc
inc
adc
dec
cmc
cmp
push
add
mov
aam
imul
les
sbb
movsl
stos
pop
cmp
sub
insb
icebp
dec
inc
subb
sbb
mov
mov
movsl
push
push
mov
add
subl
les
mov
repnz
mov
nop
mov
pop
xchg
lcall
push
hlt
loope
and
pop
pop
pop
aaa
hlt
inc
add
or
fs
icebp
lock
jb
jg
dec
scas
adc
xor
mov
lcall
ss
addl
jecxz
loope
and
mov
pop
cs
ret
lret
cmp
ja
inc
loop
add
mov
mov
push
mov
xor
lock
pop
mov
add
lcall
cs
test
or
mov
cmpsb
addr16
fists
std
mov
xor
aam
xchg
pusha
add
add
mov
pop
loop
jns
ja
mov
or
mov
cmp
add
decl
add
jno
je
pop
or
or
out
aas
in
das
push
frstor
dec
adc
movsb
inc
in
aam
mov
bts
int3
aaa
std
pushl
add
bound
xlat
or
or
in
addb
jecxz
cmpsl
xlat
jp
repz
push
and
mov
out
daa
mov
push
xchg
aaa
lock
ja
xchg
xlat
xchg
sbb
push
jbe
jbe
ret
sbb
lock
mov
add
jne
nop
sti
in
not
adc
fistpl
fwait
cmp
jp
sbb
stos
add
jno
sbb
aas
push
dec
cmc
and
jno
push
push
mov
cli
mov
enter
daa
rcll
fwait
outsl
adc
cs
out
and
js
je
imul
ljmp
xor
jle
andl
mov
jl
pop
lods
mov
push
add
int3
inc
mov
add
mov
loopne
mov
lods
cmpsb
jp
jnp
jl
sarl
adc
push
fs
pop
adc
cmp
mov
dec
data16
cwtl
push
outsb
addl
movsb
dec
stos
testb
mov
movsl
fcmovbe
out
cwtl
roll
add
dec
pop
sub
or
push
xor
lea
dec
mov
mov
cmpsb
sub
jle
cmpb
jbe
mov
pop
mov
inc
rcrb
icebp
aaa
outsl
mov
lods
mov
sbb
pusha
add
mov
sub
sbb
xor
int
popf
push
ret
pushaw
add
test
or
add
mov
jp
icebp
es
dec
sahf
mov
ss
push
mov
push
sbb
jp
or
imul
mov
ficoms
pop
pop
orl
rcll
add
cmp
xor
int
push
stos
stos
fsts
push
pop
addr16
adc
adc
fistl
push
dec
push
mov
pop
popf
pop
shll
into
test
push
js
mov
jmp
daa
or
push
add
xchg
push
push
mov
stos
add
inc
add
mov
push
adc
mov
cmp
pop
sbb
jg
pop
push
add
mov
mov
xor
or
mov
cmpsb
icebp
loop
inc
push
stc
push
add
dec
insb
adcb
int3
and
or
ja
ljmp
testl
lret
das
sbb
jecxz
mov
push
clc
dec
mov
cli
xor
jne
xchg
or
lods
andb
xchg
mov
hlt
ds
negb
ds
pop
sbb
xchg
adc
fwait
mov
sbb
mov
xor
iret
lods
cld
popa
mov
push
jle
mov
mov
jp
mov
pop
pop
cmpsb
lret
stc
or
pop
test
jne
ret
add
js
mov
and
and
adc
sub
inc
add
es
or
and
enter
aaa
and
fsubl
icebp
pop
test
std
pop
pop
movb
out
cmp
shl
ja
push
aam
sub
and
jbe,pn
cmp
jnp
mov
and
jl
sahf
dec
adc
jns
aas
and
pop
mov
popa
add
movsb
fcoml
push
or
out
movsl
mov
sti
push
add
scas
adc
loope
shrl
push
notl
rcrb
pcmpgtb
icebp
jmp
mov
and
filds
or
mov
xchg
sub
test
mov
mov
lret
sbb
and
push
push
add
sbbl
mov
scas
cli
loopne
orl
or
cmp
dec
jl
call
add
adc
mov
scas
pop
push
popf
test
add
dec
outsl
push
dec
daa
arpl
sbb
int
ja
jmp
add
enter
xchg
add
xor
add
mov
aaa
mov
in
adc
mov
aad
loop
push
mov
lock
fcoml
mov
mov
push
jge
add
xchg
xchg
add
xchg
into
cmp
bnd
fnstenv
and
mov
fmull
bound
xchg
inc
inc
add
gs
xchg
test
sub
xlat
sbb
mov
jnp
jge
push
shr
and
add
popf
out
scas
mov
pop
shl
pushf
mov
fwait
jp
rclb
mov
push
pop
aaa
xchg
hlt
mov
cltd
xchg
push
out
mov
add
shlb
fbld
sbb
rclb
popa
ret
in
stc
stc
push
pop
into
xchg
push
add
add
imulb
int
add
add
insb
jmp
rorb
iret
xor
loope
aam
jp
xchg
pop
sub
or
mov
test
add
loope
cmc
addb
shlb
add
adc
sar
std
fildl
fdivrl
sti
out
sbb
test
add
call
jbe
jo
pop
out
inc
fstl
lods
lods
dec
cmc
pop
dec
dec
adc
lea
add
call
andb
or
inc
cwtl
test
xchg
push
cmpsl
cmpsb
mov
cwtl
inc
sbb
fsubrs
ds
jmp
mov
inc
pusha
add
adc
xchg
mov
add
xchg
decb
sbb
sarl
push
mov
push
dec
sbb
push
xchg
in
xchg
inc
movsb
mov
add
jno
dec
outsl
testb
addb
push
cmpsb
movsb
push
js
and
fs
in
pop
mov
out
pusha
add
and
jo,pt
mov
fdivrs
mov
sub
in
shll
adc
mov
add
jge
jbe
ret
add
lods
or
add
fmuls
rol
je
push
test
test
cmc
push
add
in
outsl
mov
xor
mov
jg
add
jnp
incb
add
ss
pop
dec
or
ficompl
sahf
pop
sub
call
addl
out
out
cmpsl
pop
imul
xor
aas
mov
cwtl
cwtl
xor
add
loope
pop
xor
push
add
test
outsl
and
xor
cs
pop
ljmp
test
add
leave
xor
sub
push
rcr
jno
or
je
and
adc
xor
shrl
das
les
rcl
push
add
nop
lea
scas
add
mov
sub
push
scas
addl
push
sti
and
or
xor
push
stos
xor
xchg
ret
xor
pop
int
sub
cmp
dec
cmpb
into
add
xor
xchg
pop
popf
popf
mov
add
add
add
mov
jl
sub
pop
mov
push
jmp
or
add
mov
enter
outsb
push
jo
rol
cmpsb
push
inc
cltd
mov
sub
dec
nop
push
xor
xor
dec
pop
pop
test
mov
aam
mov
aaa
adc
daa
sbb
mov
je
push
sub
ret
int3
fisubrl
xorl
adc
clc
pusha
add
cwtl
pop
push
outsb
clc
or
add
add
dec
add
setnp
call
addr16
jo
add
mov
lcall
loop
add
sub
data16
les
addr16
repnz
add
add
pop
pop
in
cmp
hlt
inc
adc
xchg
dec
pop
call
dec
or
scas
and
fcomi
xchg
or
mov
sti
jns
sarb
jg
xchg
cs
pop
inc
lds
or
push
scas
into
fs
stos
stos
mov
jmp
add
lahf
cmp
mov
add
decl
fs
loopne
adc
push
stc
or
mov
nop
mov
mov
cwtl
jge
add
add
into
xchg
lds
ficoml
or
push
add
add
mov
add
mov
mov
adc
es
mov
dec
inc
insb
adc
imul
test
and
mov
ss
jecxz
or
add
push
ds
push
bound
adc
lea
cltd
je
jmp
or
adc
add
push
add
add
xor
jl
stos
cwtl
or
adc
and
out
fwait
and
mov
xchg
adc
mov
pop
mull
pop
stc
insb
mov
dec
fstps
daa
jbe
addl
stos
out
sti
dec
sbb
sub
push
into
repz
aad
in
pusha
add
add
mov
jnp
mov
sahf
mov
add
add
and
int
push
add
test
mov
movsl
dec
jb
dec
mov
inc
movsl
mov
lret
cmp
add
sbb
adc
test
call
mov
inc
or
xchg
loope
xor
dec
and
xchg
in
and
jl
jp
add
xchg
adc
cli
sub
pushf
dec
or
sbb
pusha
add
rcl
fldenv
arpl
jne
clc
dec
sti
sti
stc
loope
adc
pop
ret
ret
mov
pop
imul
jecxz
xchg
add
push
mov
add
mov
in
ret
mov
scas
sbb
pop
dec
sub
dec
pop
popf
push
enter
cmpsl
loop
push
add
scas
mov
mov
mov
add
pop
stc
sahf
mov
cld
pop
inc
sahf
das
pop
inc
dec
fnstsw
mov
cmp
addb
adc
stc
add
mov
xor
aaa
xlat
test
dec
popf
test
sahf
scas
push
sbb
mov
cmp
add
add
not
add
dec
push
push
inc
xor
mov
daa
loope
pop
and
insb
inc
movsl
and
push
pop
xchg
stos
rcrl
cmp
pop
inc
add
cmp
xor
adc
adc
loopne
mov
idivl
call
test
add
jbe
push
push
movsb
in
push
or
imul
and
cli
dec
inc
pusha
add
repz
and
add
pop
add
aaa
sbb
push
jb
jmp
jmp
jl
adc
push
mov
adc
jns
insl
sub
push
popf
ljmp
shll
ret
idiv
fcmovb
neg
shlb
push
xlat
sub
mov
jl
lock
add
dec
xchg
test
adc
inc
add
cmpsb
and
and
push
add
sbb
in
mov
scas
add
mov
push
imul
cmpb
mov
cmpsl
ficoms
les
xchg
incl
mov
or
mov
cmp
mov
sub
add
js
and
xchg
aas
or
add
inc
lods
inc
call
and
ucomiss
iretw
lea
rcrl
add
xchg
mov
js
and
aad
addb
dec
addb
movl
pop
hlt
jmp
cmp
push
sub
add
xchg
repnz
add
inc
sbb
jb
pop
and
addb
leave
repz
xor
jo
outsl
mov
and
mov
fsts
pop
idiv
xchg
out
add
aam
js
xor
or
test
mov
xor
lahf
mov
icebp
cmp
sbb
ss
out
gs
or
cmp
data16
xchg
xor
fcom
xor
scas
outsl
cmp
in
outsb
push
push
mov
add
insw
push
frstor
clc
ret
xor
cmp
scas
inc
add
out
adc
sbb
cmc
add
xchg
or
leave
ret
cmpsb
mov
and
push
stc
into
dec
pop
jb
xor
mulb
mov
dec
inc
cmp
xchg
icebp
sbb
add
sahf
enter
xor
popl
add
and
mov
mov
jns
xor
jo
cmp
int3
mov
add
loope
leave
sahf
cmpsb
loopne
add
add
fnsave
cltd
call
mov
jb
fistpl
gs
aam
pop
clc
and
add
cmp
xor
inc
adc
insl
sub
or
dec
addl
push
jg
sbb
mov
addb
in
cmpl
fnstenv
out
xchg
mov
adc
andb
int
add
loop
lds
jecxz
or
lods
mov
movsb
mov
xchg
push
mov
daa
jmp
jl
push
add
loop
sbb
adc
fcmovne
popa
cmp
fucomi
lahf
jns
icebp
stos
adc
add
imul
add
jp
mov
xor
rol
mov
add
push
lahf
xchg
and
gs
push
add
jae
adc
mov
sbb
ljmp
push
sbb
mov
test
icebp
mov
xchg
int
lods
loope
add
mov
das
add
inc
add
std
lahf
les
jae
lahf
es
dec
fistpll
ds
add
arpl
insb
pop
add
in
test
fisttps
xchg
aad
jbe
test
insb
push
std
sbb
outsb
in
add
mov
adc
pop
int3
movsb
andl
and
ljmp
pop
add
fistpl
mov
push
add
sahf
shrb
push
inc
add
outsl
mov
lods
aad
shrl
stc
push
mov
pusha
add
xor
mov
mov
out
inc
int
sub
inc
sbb
adc
bound
std
adc
dec
scas
mov
jne
cmp
jno
add
mov
jge
in
jge
mov
adc
fiaddl
sbbb
mov
push
and
cli
ret
fs
sub
addb
jg
or
push
je
add
addb
xchg
cwtl
push
xchg
cmp
and
lret
mov
adc
add
roll
add
sahf
pop
loope
pop
pop
test
xchg
sbb
add
mov
xchg
jns
iret
in
sbb
and
pop
loope
je
mov
data16
sar
mov
cmp
inc
pop
call
xchg
push
jecxz
je
addb
mov
and
xlat
jae
or
sbb
push
add
pop
jne
cmpsl
and
sub
mov
insl
mov
fdivrs
sub
mov
pop
pop
into
shrb
dec
loopne
add
xor
cmp
add
scas
les
rcrb
jae
int3
shrb
adc
and
mov
adc
jmp
arpl
mov
pop
addl
mov
cmp
js
add
out
sahf
ss
roll
xchg
test
pop
and
test
mov
pop
gs
enter
xor
and
les
sbb
insl
mov
jp
cmp
gs
mov
test
ljmp
push
xor
mov
and
pop
xor
xor
repnz
iret
lret
lods
sbb
insb
xor
imul
andb
add
adc
repnz
dec
and
ss
add
inc
sub
rcll
mov
mov
stos
ss
js
sbb
call
in
add
call
pop
adc
push
adc
in
lcall
push
mov
lret
mov
adc
popf
out
das
pop
lock
imul
push
fld
cmp
mov
pop
xlat
xchg
xor
outsb
std
mov
jecxz
push
rol
mov
enter
cmpsb
inc
inc
aam
out
int
add
cmp
cmp
shlb
loop
push
pop
pop
jbe
cmp
sub
xor
jo
imul
sbb
shrl
dec
cmp
dec
test
loopne
sti
scas
mov
inc
push
add
ret
and
in
ret
ret
mov
adc
sub
rcr
sbb
aaa
fadds
sub
add
fcmovbe
push
fsubl
add
pop
adc
add
stc
jmp
rorl
add
xor
test
xchg
imul
ljmp
mov
and
adc
adc
pop
leave
lods
jmp
xor
test
push
cmp
loop
lods
sbb
addl
sub
push
push
sbb
cmpsw
ss
xchg
mov
and
add
xor
insb
roll
cld
jp
add
or
sbb
insl
popa
or
mov
inc
add
add
ds
add
mov
imul
mov
mov
mov
ret
cmpsl
inc
stc
aas
push
pop
pop
mov
pop
fisubrs
bnd
dec
pop
xchg
test
subl
mov
mov
into
xchg
sbb
data16
mov
and
ret
jns
pop
mov
sub
add
in
cmc
cwtl
mov
ss
mov
loop
mov
ljmp
mov
addb
dec
scas
adc
aad
cmp
outsl
call
jp
or
movsl
and
rcll
adc
ss
sbb
mov
mov
fwait
fwait
push
lcall
adc
add
mov
jp
ss
xchg
shrl
add
dec
push
jns
inc
mov
adc
nop
int3
jnp
push
adc
push
es
jbe
lret
lret
sub
cmp
ficoml
aaa
pop
fists
mov
mov
cs
fwait
gs
shl
inc
loope
mov
outsb
pop
ret
mov
add
ss
push
push
rclb
in
sub
add
fcmovu
decl
dec
jbe
pop
jb
inc
xchg
sub
lods
cmp
out
pop
and
mov
ss
cltd
arpl
sbb
xchg
lcall
rcrl
inc
inc
dec
jb
dec
aaa
int3
data16
inc
jle
pop
lahf
lds
iret
mov
inc
cmp
lods
push
mov
add
lock
and
pop
push
xor
jl
dec
enter
pop
mov
and
in
add
fdivr
bound
sub
sub
rcrl
push
add
mov
push
call
add
jns
imul
out
pushf
push
faddl
push
lahf
loope
sti
adc
jno
repz
scas
add
pusha
add
add
lret
inc
add
add
dec
call
pop
pop
icebp
or
insb
or
clc
adc
cmc
mov
xchg
inc
add
mov
sub
aad
sbb
or
jo
sub
adc
add
addb
mov
adc
mov
test
jae
fistpll
jb
cmp
sub
jbe
insb
dec
fnsave
pop
test
xchg
dec
xor
mov
daa
pop
adc
cltd
mov
jno
xlat
or
xor
add
fstpt
add
cli
lods
lods
jb
pop
xor
test
add
mov
mov
jns
pop
cltd
cltd
dec
roll
add
or
ret
out
xchg
inc
add
add
mov
insl
jle
icebp
icebp
das
sbb
rcll
dec
jb
mov
loop
add
ret
sti
insb
std
jne
xchg
mov
xor
hlt
inc
in
jecxz
push
daa
loopne
fildll
mov
je
adc
es
test
and
xlat
xchg
mov
in
clc
dec
arpl
shrb
aam
cmp
xchg
shr
loop
cmp
daa
inc
fcoml
divl
adc
cmp
cmp
xchg
mov
sub
mov
cmp
idivb
jne
xchg
bound
xor
jb
ficoml
adc
fcmovnb
sar
test
cmpsl
stos
and
push
mov
push
mov
flds
jle
data16
dec
or
dec
fwait
pop
cmp
push
add
addr16
mov
xchg
aaa
jo
pop
jo
add
add
cs
sub
pop
fiaddl
mov
mov
and
sarl
stos
or
in
mov
and
mov
addr16
push
xchg
enter
in
or
ja
jecxz
and
fwait
or
test
mov
addl
fsubl
lret
in
cmpsl
cmp
lods
stc
jnp
cld
xor
jo
and
out
fs
loop
adc
lcall
ljmp
xor
test
std
sub
add
add
pop
cld
cmp
push
stc
out
ljmp
leave
pop
fcomps
dec
push
idivl
sub
ss
sub
rolb
push
ss
je
cmp
mov
add
xchg
scas
arpl
pop
mov
push
fiadds
add
popa
adc
jmp
lret
jns
mov
mov
mov
add
fimull
sub
xor
sbb
rcrl
mov
dec
repnz
rcrl
dec
jle
add
mov
push
push
add
pop
mov
mov
sbb
fwait
imul
cld
cli
test
add
add
jmp
les
xchg
pop
iret
iret
addl
push
loopne
test
imul
sbb
mov
dec
xchg
inc
add
inc
bnd
jae
sub
stos
daa
addb
pop
push
cmp
mov
addr16
sahf
out
mov
fsubrs
lret
cmp
mov
xor
shlb
sub
loop
pusha
add
cmp
rcll
sub
ds
push
and
into
pop
jnp
jl
dec
call
fcoms
mov
insl
addb
lret
pop
inc
add
xor
add
sbb
fisttpll
subl
stos
into
addr16
mov
mov
lcall
mov
pop
ss
aas
adc
test
sbb
pop
or
or
mov
mov
mov
shlb
out
mov
fsts
jmp
out
jnp
xor
jmp
xor
mov
daa
daa
sbb
push
add
shlb
add
fwait
into
ror
ljmp
outsb
adc
sub
pop
dec
and
push
dec
push
test
mov
push
mov
add
shr
lret
cli
inc
add
out
dec
xor
fsubrp
mov
popa
sahf
mov
add
xchg
jg
jecxz
andl
aaa
in
pop
lahf
shlb
add
xchg
ror
cmp
add
jge
sub
pop
jns
add
dec
inc
add
or
sbbl
fwait
stos
rep
jg
mov
fisttpl
lcall
incl
pop
jge
jp
and
jle
jmp
xchg
inc
add
inc
pop
add
or
lret
or
inc
je
mov
inc
outsl
mov
or
sti
push
add
inc
mov
sahf
scas
and
and
movsl
mov
sub
jnp
mov
inc
adc
dec
aaa
mov
push
inc
jmp
add
jno
imull
popf
sbb
pop
test
cmpsl
or
adc
mov
add
pop
imul
cmp
js
dec
xchg
rorl
mov
lods
dec
adc
add
lret
and
sbb
or
stos
lahf
xchg
mov
int3
cmp
xchg
sub
add
fs
iret
sti
sub
add
aam
xchg
addb
dec
es
lret
cmp
mov
sub
sbb
xor
daa
in
or
jle
sub
and
iret
loop
dec
pop
push
xor
ds
adc
repz
pop
jp
jb
stos
push
idivl
push
sbb
push
fs
add
add
popa
mov
jnp
inc
inc
lcall
cltd
jns
adc
dec
mov
cld
xlat
lret
outsb
fisubs
and
pop
xor
xor
adc
clc
movsb
jecxz
jb
repnz
lret
adc
jle
jp
cmp
in
pusha
add
sbb
cmp
mov
add
or
bound
int3
out
pop
inc
push
addl
cmp
loop
pop
add
cmp
lods
mov
pop
addl
jmp
jnp
cltd
mov
notl
and
loopne
jne
add
jl
push
mov
adc
pop
mov
push
sbb
sbb
or
or
imul
mov
pop
mov
pop
lods
jle
hlt
les
clc
clc
sub
test
push
jle
pop
loop
push
push
scas
cli
stos
xor
mov
mov
cld
iret
gs
push
jp
roll
rolb
insl
mov
lcall
xchg
daa
jne
jl
or
xlat
xchg
mov
aas
sbb
sub
addl
insl
jecxz
and
xor
stc
sar
ret
cmp
sub
sub
xor
add
test
jmp
pushf
inc
fistpll
push
add
ret
cmpsb
rcrb
and
pushf
pop
push
notb
ja
scas
push
fisttpl
movsb
pushf
rclb
push
push
mov
or
inc
dec
adc
es
ja
dec
fs
xchg
sbb
sub
mov
cmp
or
sbb
rorb
daa
rcll
dec
jmp
fcomp
mov
pop
sbb
mov
pop
pop
mov
adc
aam
cmp
sbb
xchg
addb
xchg
xor
mov
or
int
fwait
divb
sahf
pop
mov
xor
mov
xchg
xor
out
cmp
je
ret
cmc
mov
lret
fcomi
mov
jb
xchg
pop
or
inc
loope
clc
xchg
addl
mov
and
cmp
pop
cli
fadds
jns
push
adc
ret
cmc
addl
fld
jecxz
cmc
inc
mov
scas
outsb
sbb
dec
cmp
jb
std
iret
loop
es
adc
pop
adc
bound
mov
sub
inc
add
and
add
mov
pop
cmp
xchg
xor
xchg
gs
push
inc
add
repnz
pop
xor
out
inc
repnz
imul
jl
loop
lods
aam
xlat
add
cmpsb
inc
add
sub
sbb
push
add
mov
arpl
cmpsl
xlat
scas
idivl
in
sub
mov
xor
and
add
aad
stos
data16
in
loop
icebp
cwtl
or
add
cltd
inc
repz
getsec
cmpsl
push
push
and
mov
cmpsb
mov
and
xchg
lock
lahf
jne
sar
add
push
inc
add
mov
xchg
mov
stc
mov
dec
popf
call
inc
mov
icebp
push
sbb
enter
mov
adc
mov
mov
movl
xchg
js
mov
aam
mov
xor
shrb
in
vphsubdq
adc
or
add
or
and
add
cmpsl
stos
loope
push
jge
add
into
pop
sti
scas
in
into
call
jecxz
out
imul
addb
mov
xlat
dec
xchg
dec
jno
addb
dec
adc
or
jp
sbb
cli
fcmovne
xchg
or
pop
fadd
add
test
popa
sub
pop
filds
sbb
hlt
push
mov
jne
lds
or
enter
mov
jmp
fs
jnp
test
lahf
pop
xor
mov
in
or
pop
cs
in
fiadds
adc
in
mov
and
mov
dec
cmpl
push
mov
xlat
push
bound
ds
inc
inc
or
add
lret
imul
adc
jb
aad
lcall
lahf
xchg
dec
inc
push
push
cmpsl
lods
jns
xor
mov
jp
add
cmp
addl
movsb
pop
mov
push
sti
cmp
sbb
pop
jle
inc
fdivs
les
dec
addb
mov
jecxz
add
mov
scas
fsubrl
mulb
test
and
dec
leave
pop
test
adc
pop
jp
add
add
mov
es
inc
add
inc
les
jmp
xor
cmp
jae
ds
insl
jl
add
sub
std
jae
rcrl
test
add
bswap
mov
push
lcall
pop
adc
data16
sub
pop
in
cltd
xchg
mov
aad
inc
add
push
add
nop
adc
mov
or
mov
addb
lods
loop
pop
pusha
add
cs
and
dec
test
or
xor
sbb
pop
into
mov
pop
rcl
jp
cli
inc
cwtl
loope,pn
fs
imul
in
xchg
mov
and
bound
dec
mov
add
add
mov
mov
jp
int3
int3
lods
pop
aam
pop
cld
add
adc
cmpsl
mov
loope
cli
dec
clc
in
mov
cmp
arpl
cmpsl
out
adc
mov
das
in
push
lea
mov
push
or
je
lods
aam
add
addr16
ds
mov
aam
dec
adc
fsts
cmp
xor
mov
adc
addb
dec
lcall
pop
jo
mov
mov
dec
add
test
xor
jns
and
addl
arpl
sbb
pop
sbb
sti
movsb
cmp
dec
popf
mov
hlt
xor
cmp
jge
in
sub
fs
aam
iret
mov
mov
push
add
fisubl
sub
js
inc
push
popf
mov
fcoms
aas
mov
add
out
rcrl
fistps
fstps
push
fisubs
sar
dec
ret
push
pop
jg
sbb
inc
cwtl
test
mull
add
movsb
rcrb
jne
add
mov
fsts
add
add
jns
pop
imul
add
xchg
xchg
scas
jge
clc
addl
xchg
pop
leave
jmp
mov
inc
loope
mul
fdivrl
ds
out
or
xchg
repz
loop
lods
popf
mov
sbb
shlb
pop
aas
shrb
pop
xchg
pop
pop
mov
xor
sub
adc
push
sbb
push
sub
or
fistpl
enter
or
shlb
add
loopne
add
test
lfs
sbb
imul
jle,pt
jle
adc
scas
lret
lahf
pop
pop
sub
pop
xchg
jg
sahf
jg
test
into
addl
add
xor
push
add
mov
add
or
push
pop
xchg
add
dec
loopne
fdivl
and
in
jb
fsts
sub
push
les
jl
cltd
insb
sub
dec
sahf
popf
int3
andl
mov
add
pop
xchg
push
add
push
add
jle
decb
push
stc
pop
lock
push
cld
lods
fcompl
fistpll
cltd
add
pop
sti
dec
cmp
cmp
dec
outsb
outsb
mov
insl
xor
es
push
cltd
push
push
push
and
pop
add
push
add
cmp
data16
mov
iret
push
xchg
lret
ret
push
in
jo
lahf
addr16
and
fnstcw
fstl
add
movsl
leave
sti
shrb
bound
call
xchg
mov
inc
add
xlat
and
add
dec
mov
js
mov
fcompl
out
add
out
mov
add
lock
cmp
cmp
stc
cltd
popf
mov
aas
xchg
add
xor
add
mov
jge
add
dec
adc
lods
in
lea
popl
mov
inc
or
push
xchg
cmc
fisubrl
ljmp
adc
enter
lcall
int3
pop
jge
lret
jbe
negb
sbb
inc
add
and
inc
popf
xchg
les
dec
push
sub
mov
lret
lret
sub
scas
loope
add
cmp
sbb
pop
pop
pop
jns
bound
push
xor
inc
inc
stos
sub
aad
cmp
loopne
or
subl
add
in
or
movsl
cmpsl
imul
jle
mov
pop
aam
lods
and
add
add
xchg
add
add
add
add
mov
jns
dec
fdivs
loop
cmc
shlb
sub
adc
xor
fsubr
scas
cmpsl
push
mov
test
mov
negb
mov
or
scas
scas
gs
add
lea
sub
add
and
sub
imul
inc
jbe
sarl
fldcw
int3
push
das
sub
scas
sub
cmp
cmp
push
add
xor
test
addl
inc
fstp
or
inc
stc
pop
fcmovnb
push
add
jmp
scas
js
add
popf
jnp
fwait
aam
fimuls
gs
jmp
dec
test
jb
xlat
push
jo
sbb
pop
inc
mov
arpl
inc
jne
lret
into
pop
cmp
push
clc
movsb
fistl
nop
mul
cs
enter
lret
clc
cwtl
jmp
pop
dec
dec
push
mov
mov
pop
add
imul
add
out
jns
fadds
mov
xchg
mov
ret
and
sarl
add
pop
jae
pop
outsb
idiv
scas
push
imul
aam
mov
add
mov
mov
in
xchg
imul
test
or
lret
aaa
xchg
outsb
icebp
inc
add
mov
sub
fsubl
js
sbb
adc
jp
out
gs
add
vsqrtsd
das
inc
jmp
sbb
or
and
jb
xchg
xchg
and
adc
iret
add
loop
in
push
daa
cwtl
arpl
mov
dec
mov
xchg
in
test
xchg
inc
daa
daa
es
push
mov
add
mov
clc
pop
mov
mov
push
add
insb
test
mov
das
addl
and
add
mov
arpl
inc
aam
cmpsl
data16
arpl
in
xor
insb
sub
cmp
lock
add
cltd
push
mov
jl
fnstcw
fistps
sbb
jno
xchg
xor
or
add
test
out
test
mov
dec
push
data16
es
lods
lods
or
out
add
fadd
add
testb
das
out
mov
negl
and
fcmovbe
mov
jl
addb
push
shlb
cmpsl
adc
gs
mov
inc
ljmp
test
idivb
pop
fisubl
add
daa
mov
and
pop
dec
loop
js
je
dec
out
adc
push
xor
dec
test
mov
mov
rcl
pop
sbb
sbb
clc
es
mov
cmp
mov
or
xchg
and
imul
ljmp
sub
xor
test
in
std
sbb
dec
mov
sub
adcl
mov
iret
xchg
and
inc
ss
inc
jmp
add
xchg
int3
jmp
in
pop
loope
inc
add
add
fiadds
mov
daa
fs
pop
or
pop
ds
mov
xchg
jl
add
je
ds
iret
sbb
mov
push
sbb
xchg
xchg
mov
lret
cmp
mov
and
lock
jg
push
insb
push
cvtps2pi
divps
jge
add
lcall
cwtl
ja
sbb
mov
mov
f2xm1
add
mov
push
js
lahf
sub
add
pop
mov
cmpb
jb
push
roll
add
loope
jns
add
mov
jno
popf
sbb
jecxz
jmp
scas
or
jne
pop
data16
mov
fs
add
xor
push
or
out
sahf
jp
loope
sbb
test
mov
xchg
jns
add
divl
addr16
iret
jmp
dec
lret
add
out
and
push
xor
in
test
jae
xchg
sbb
pusha
add
adc
push
add
rcll
shrl
mov
popf
into
cmp
mov
test
lods
sub
push
push
pop
in
mov
pop
sbb
sbb
and
add
mov
lods
dec
or
mov
stos
je
cmc
repnz
cmp
adc
enter
mov
pop
cmp
mov
mov
add
imul
xor
mov
clc
out
outsl
jle
xor
push
dec
inc
push
add
cmpsl
push
push
mov
push
in
inc
mov
arpl
stc
insl
dec
inc
aad
xor
scas
addb
arpl
rorb
ret
dec
xchg
sub
add
push
ljmp
xadd
add
repz
mov
call
cmc
push
add
add
add
ds
add
add
and
stos
mov
xor
xor
lcall
add
dec
inc
sbb
xor
xchg
jmp
cltd
pop
iret
rcll
push
mov
loopne
or
push
pop
dec
icebp
pop
cltd
dec
and
inc
add
popf
sbb
dec
imul
jb
jg
or
xchg
sub
pop
insb
lcall
mov
and
test
les
pusha
add
jne
cli
shl
adc
mov
js
aad
add
adc
push
inc
das
mov
push
pop
xchg
push
lock
add
aam
push
and
ss
adc
add
ss
push
push
test
mov
pop
sti
and
aam
mov
nop
aaa
adc
jb
test
test
mov
push
inc
add
and
push
frstor
mov
inc
add
xchg
and
mov
hlt
bound
loope
imul
mov
add
add
ret
add
push
pop
dec
cmp
out
inc
add
adc
and
push
add
mov
testl
aam
aas
mov
add
push
sbb
xchg
jge
xchg
mov
ret
out
xor
fmul
loope
dec
xchg
clc
das
jg
dec
and
jp
xchg
jne
push
jl
je
dec
in
mov
inc
shlb
xchg
cmc
add
jns
pop
jae
jnp
sbb
jg
or
fucom
mov
and
xchg
pop
mov
adc
cmp
out
mov
fs
fcmovb
data16
sub
lds
mov
add
clc
jecxz
aad
pusha
add
pusha
add
add
mov
add
xorl
jno
enter
xchg
dec
sub
repz
daa
icebp
push
out
cld
inc
xor
xchg
cmp
or
sub
aad
leave
mov
push
xor
jp
dec
xor
sbb
mov
jl
dec
movsl
mov
push
push
out
cmp
and
or
xchg
insb
cmpsl
das
sub
push
sub
dec
dec
push
push
add
add
call
dec
roll
mov
pop
das
mov
dec
imul
add
lahf
es
pusha
add
pop
pop
in
pop
jmp
stos
xchg
mov
add
adc
pushf
iret
test
mov
popf
fimull
push
scas
test
xchg
addb
and
push
add
bound
lret
jnp
cmp
fxch
jb
inc
add
inc
add
add
push
add
gs
mov
xchg
or
pop
dec
dec
inc
cs
and
mov
xchg
outsb
jnp
mov
pop
or
ja
scas
cmp
scas
cld
xlat
into
pop
xor
les
rorb
jns
dec
push
mov
inc
add
mov
lahf
fdivl
mov
adc
and
cwtl
jbe
push
lret
push
xor
sub
mov
in
mov
cltd
ret
sarl
xor
and
jle
cmp
mov
adc
ret
add
dec
jle
sbb
sbbb
pop
push
xchg
div
dec
xchg
sub
gs
mov
dec
sbb
lcall
jp
dec
xor
addl
push
test
dec
push
add
icebp
ja
ret
sarl
sarl
pop
pop
jbe
pop
lcall
add
push
cmp
sbb
mov
xor
test
test
add
out
int
gs
into
pop
clc
push
fstp
fcoms
dec
mov
ss
cmpsb
dec
xor
arpl
int3
lret
pop
pop
les
jecxz
sti
dec
xor
bound
je
test
add
std
add
mov
into
mov
pop
mov
aaa
insb
push
and
repnz
repnz
cmp
fsubrs
je
scas
jb
mov
imul
les
arpl
lcall
icebp
cmp
push
push
mov
data16
in
out
add
pop
and
add
aaa
lods
push
cmp
add
mov
rol
jle
fs
push
nop
sub
sub
add
out
arpl
sub
jl
cmp
add
ret
fwait
jo
leave
enter
inc
jbe
pop
lods
imul
repz
push
enter
and
popf
movsb
cmpsb
mov
ss
insb
mov
push
out
ljmp
push
and
mov
xchg
lret
or
cwtl
or
jg
dec
inc
in
dec
sub
add
das
fdivrs
push
jne
repnz
arpl
mov
out
adc
mov
mov
pminsw
leave
jge
mov
add
lahf
mov
movsb
mov
aad
jne
add
bound
mov
int3
jg
repz
popf
xchg
ret
mov
fdivs
add
popf
sti
xchg
inc
movsb
adc
out
push
ret
jne
ret
xor
movsl
dec
aaa
fldcw
add
jle
add
fcoms
loop
sahf
cld
arpl
addr16
movsb
add
xchg
adc
pop
mov
cld
loope
inc
add
adc
jno
pop
xchg
ficomps
jo
sbb
int3
in
enter
mov
mov
mov
fldenv
daa
cltd
cmpsl
cmp
lods
gs
arpl
mov
faddp
mov
add
int3
and
loopne
dec
jb
dec
mov
test
pop
mov
js
lcall
in
sbb
jle
add
pushf
cmp
add
cmc
sbb
cmp
sbb
jge
inc
add
cmc
inc
das
rcr
sub
imul
push
and
sub
jg
mov
lods
mov
push
jno
sub
sbb
pop
push
int
mov
push
iret
stc
sar
loopne
or
dec
and
mov
das
mov
push
out
lods
jns
jo
xchg
push
test
mov
pop
loop
and
shr
mov
jb
mul
sbb
jno
fcmovnb
pop
push
push
pop
outsb
insb
dec
mov
mov
arpl
or
mov
push
aaa
jl
and
sbb
add
rcrb
stos
gs
adc
sub
and
add
daa
sub
sub
test
cmc
cs
xor
imul
sbb
jg
imul
cmp
xor
cmc
sti
mov
dec
rorb
jge
mov
mov
xchg
lods
or
cmp
mov
fisttpll
sarb
aas
inc
xchg
gs
fwait
lock
push
push
jmp
add
insb
sub
add
push
or
js
stos
repnz
add
aaa
pop
mov
repnz
and
arpl
push
jo
adc
das
out
and
aam
int3
inc
stos
cmp
cltd
jb
mov
int
add
jge
push
mov
out
add
xchg
push
sbb
lret
push
gs
cmpsb
mov
enter
lds
sub
or
fidivs
mov
shrl
mov
fs
mov
cmp
into
out
adc
mov
lock
shrb
push
and
lcall
mov
roll
add
aaa
dec
cwtl
add
push
jbe
adc
xchg
in
in
shrb
xchg
add
into
cmp
in
fwait
dec
loop
add
ss
lods
insl
xor
clc
aad
pop
scas
adc
sub
pop
cmpsb
jg
aas
mov
xchg
jl
fcmovnu
mov
iret
jo,pt
addl
out
mov
lret
cmp
lock
ljmp
jno
daa
mov
pusha
add
jne
mov
inc
add
xor
pop
fsubr
push
xchg
push
sub
ds
mov
xchg
mov
fisttpl
add
pop
into
rcrl
push
add
inc
add
aam
pop
pushf
aad
aas
jne
cld
in
inc
aas
inc
add
xchg
sarl
push
push
push
in
add
leave
push
nop
call
pop
jnp
dec
pop
jg
mov
imul
cmp
adc
dec
dec
cmp
or
sahf
jge
pop
pushf
xchg
std
fmull
add
cmp
ja
pop
push
mov
scas
scas
pop
sub
mov
sarl
add
rcr
adc
fnstsw
iret
and
fst
loope
push
mov
mov
popf
jbe
scas
aaa
xchg
rclb
wbinvd
lcall
adc
je
add
mov
push
imul
lret
mov
sub
pop
arpl
add
into
jo
hlt
sbb
push
adc
fimuls
movsl
mov
out
add
xor
adc
and
mov
test
int
push
jnp
jae
mov
scas
add
add
or
add
xchg
test
ss
je
sub
js
push
push
mov
int
push
add
xchg
sbb
sbb
enter
xchg
negl
ret
sbb
xchg
rcll
mov
mov
sbb
pusha
add
daa
pop
pop
jae
faddl
bound
ljmp
add
dec
testb
mov
pop
push
fidivs
add
rcl
pop
int
fs
mov
pop
cwtl
cmpsl
mov
and
or
enter
fbld
pushf
dec
mov
cs
out
lds
sub
ss
pop
int3
pop
rorb
cmp
fsub
icebp
pop
adc
rol
and
addr16
add
int3
inc
add
lret
scas
test
jbe
movsl
mov
add
jl
es
daa
add
loopne
add
pop
leave
leave
sbbl
and
push
les
inc
sub
xor
sub
jmp
sub
jo
lcall
mov
cmpsl
ret
addl
pusha
add
cld
sbb
std
and
mov
lret
jmp
je
popa
sarl
cld
cltd
out
mov
add
cld
adc
push
xchg
pop
push
inc
inc
add
lds
cwtl
mov
stc
mov
xorb
ja
cltd
xor
mov
pop
sub
std
mov
push
add
mov
lahf
inc
movsb
addr16
cli
cwtl
sub
lea
or
sbb
out
push
mov
push
add
aam
hlt
push
xchg
mov
ret
pop
pusha
add
xchg
and
ljmp
xlat
jg
sti
inc
push
rorb
clc
and
inc
movsl
lods
loope
xor
and
imul
sahf
xchg
rorl
mov
mov
fidivrl
jle
adc
add
add
jp
add
pop
mov
int3
adc
cmp
js
lret
test
mov
mov
outsl
in
paddb
movsl
addr16
push
sbb
sbb
sahf
lret
imulb
push
cld
sub
adc
add
or
sbb
std
cmp
aas
dec
sbb
out
add
adc
stos
stos
xor
inc
mov
add
in
int3
add
and
add
adc
mov
insb
mov
sahf
inc
fwait
mov
aaa
mov
xchg
dec
xor
bound
bound
rcl
icebp
into
dec
clc
roll
flds
int
insb
loop
mov
jb
addl
xchg
movsb
enter
lcall
cli
sbb
lcall
mov
aas
mov
jb
xlat
jae
mov
mov
and
mov
pop
shll
push
push
cli
xchg
mov
addr16
ds
pop
cmc
jbe
inc
sbb
add
sbb
jo
add
lret
dec
out
fsubr
movsl
mov
inc
dec
lret
jmp
aas
pop
pop
push
lret
lods
lods
roll
pop
fwait
cmp
add
inc
sbb
inc
sbb
jge
mov
fiaddl
inc
add
add
add
loope
mov
xor
xchg
repnz
mov
jnp
lahf
mov
add
out
xor
mov
or
les
mov
mov
pushf
pop
addb
stos
out
pop
push
jle
mov
mov
add
fwait
cli
andb
fyl2x
jne
sbb
das
das
pushf
xor
sbb
js
add
sub
mov
leave
stc
adc
or
sub
enter
cmp
test
in
loop
add
das
outsl
cmp
push
add
and
push
pop
mov
pop
out
fdivrs
mov
sub
adc
lods
fstps
mov
push
mov
enter
dec
shl
clc
push
je
push
mov
add
or
add
cmpsb
and
sbb
fwait
mov
jbe
jns
out
ret
mov
xchg
or
movsl
lret
or
add
inc
inc
add
add
push
add
mov
xor
adc
mov
pop
dec
jl
addb
test
imul
mov
andb
fstl
sbb
mov
fdivl
push
repz
lea
push
add
adc
add
inc
jns
push
mov
idiv
test
icebp
outsb
lret
pop
xchg
add
leave
mov
fwait
cmp
outsl
sbb
sub
notl
add
bnd
rcr
ror
enter
lahf
jl
js
adc
jae
frstor
jns
mov
and
sub
testl
mov
mov
push
stos
mov
or
add
xchg
and
adc
pop
es
call
daa
sub
addl
stos
mov
int
cltd
cmp
pop
ds
ljmp
js
lea
add
data16
std
mov
fs
add
enter
fildl
bound
addr16
jmp
xor
test
mov
das
scas
ss
fstps
sbb
mov
mov
xor
data16
add
popa
inc
add
wbinvd
push
divb
add
inc
add
sahf
movsl
stos
out
imull
push
push
jge
jmp
not
jl
addb
mov
add
sub
pusha
add
cwtl
push
adc
outsb
je
fidivrs
and
push
push
mov
xchg
into
cmp
add
add
mov
loop
add
int
addl
mov
dec
shll
dec
es
cmp
jl
cmc
loop
fsubrl
add
jb
popa
push
scas
jecxz
mov
dec
xlat
xor
mov
dec
xchg
fdivs
aas
cmp
push
cltd
add
adc
inc
add
fdivrs
mov
loope
and
xor
popa
nop
sahf
add
mov
ds
in
xlat
lods
jmp
scas
aad
cmp
das
mov
push
mov
in
mov
cmpsl
jp
add
or
js
sub
into
cmp
aad
lcall
addl
mov
push
in
fimuls
aaa
pop
pop
and
sbb
add
icebp
out
add
clc
pop
mov
adc
pop
dec
jb
push
adc
xor
add
aaa
mov
movsb
hlt
jge
mov
and
insb
loop
xchg
jno
push
add
lret
push
test
inc
xlat
or
call
icebp
mov
push
add
xor
sbb
sbb
test
popa
mov
xchg
lahf
movb
rcl
push
and
adc
inc
pusha
add
js
clc
imul
adc
imul
cs
ja
test
aam
dec
testl
rolb
repnz
popa
stos
not
xor
push
jp
adc
and
lcall
add
and
fadds
add
jge
cmp
leave
or
out
inc
add
push
test
into
pusha
add
testl
loopne
mov
cmp
push
add
mov
insb
iret
dec
push
adc
push
shrl
mov
add
fdiv
call
jmp
push
add
adc
lds
add
push
add
add
sub
rorl
jg
push
push
test
sbb
sub
mov
add
in
and
add
mov
loopne
je
stos
mov
mov
xchg
into
das
out
out
fadds
arpl
push
test
jle
mov
out
cmp
fadds
add
adc
jbe
add
dec
or
add
or
roll
fs
out
xchg
aad
out
sbb
aaa
add
je
sub
cs
test
scas
sbb
jo
sub
or
decb
cltd
mov
movsb
movsl
nop
in
sub
loope
test
hlt
loop
fisttps
and
jne
mov
lcall
lea
mov
and
in
add
pop
jecxz
mov
addb
out
inc
ss
shlb
mov
mov
add
adc
in
out
rorl
jg
les
sarb
ljmp
scas
addb
inc
fidivrl
add
jb
sub
cld
in
add
jl
add
cmp
cli
lea
xlat
or
or
inc
std
push
add
push
addb
add
add
out
jmp
add
cmpsb
daa
out
or
dec
sar
lock
xor
cltd
adc
jnp
inc
sbb
lods
and
int
sub
mov
dec
inc
cld
shl
jae
sub
mov
fnstsw
pop
adc
fcomps
cmpsb
nop
push
add
pop
pop
mov
push
arpl
push
orl
bound
push
pop
stc
push
add
xlat
xlat
lcall
lods
cld
lods
sbb
pop
and
push
ljmp
iret
in
scas
mov
aam
jnp
sti
or
test
add
pop
mov
inc
out
push
adc
clc
jb
mov
popf
sub
pop
push
push
mov
mov
mov
mov
push
add
outsb
xor
hlt
pop
nop
nop
fildl
out
xor
dec
sub
xchg
cmp
out
jne
jp
lds
pop
mov
inc
out
mov
in
adc
xor
xor
cmp
popa
xchg
jae
pop
mov
mov
xor
xor
jb
ss
add
dec
jge
push
mov
xchg
daa
fnstcw
jae
jnp
cwtl
int
lods
hlt
lret
fstpt
sbb
fadd
fwait
push
pop
stos
adc
xlat
pop
sub
mov
xor
adc
ljmp
call
cmpsl
fsubs
xchg
sub
or
es
pop
pop
repz
rcrb
loope
mov
rolb
ffreep
rcll
enter
adc
cmp
xchg
out
xchg
sbb
clc
or
add
inc
push
cmpl
roll
jge
xor
enter
adc
adc
sub
mov
bound
sahf
rol
aaa
cmpsb
shl
setns
lcall
inc
in
jne
sbb
dec
inc
add
mov
clc
mov
xchg
jmp
lods
pop
pop
sub
inc
add
mov
fdivrl
cld
pop
lock
pop
sbb
mov
ficomps
jae
dec
dec
push
push
fsub
out
cmp
xchg
outsl
pop
pop
mov
or
fistpl
inc
add
test
nop
adc
insb
pop
mov
dec
out
add
dec
sub
dec
hlt
ss
popa
or
ret
fsubr
xor
mov
stos
cld
pop
stc
pop
ret
rcrb
test
sub
add
mov
out
daa
mov
stc
js
rol
mov
add
aad
stos
insl
das
ds
addl
test
sub
ficompl
not
mov
call
fcmovnu
add
lcall
and
and
std
push
jecxz
ja
fidivrl
sbb
in
mov
xor
add
stos
clc
mov
adc
pop
add
sahf
cwtl
orl
inc
inc
add
pop
push
fs
push
add
inc
fsubs
fcomps
sbb
inc
cmc
jnp
cmp
push
adc
lock
pop
push
cld
icebp
test
fmull
mov
add
add
push
jl
add
add
mov
add
gs
test
fprem1
cmpsl
pop
pop
or
jno,pt
aaa
fistpl
add
mov
cmpb
add
jl
test
lods
das
jp
and
loop
dec
push
aam
add
push
inc
add
add
sub
outsb
jb
jne
add
fwait
sub
rclb
ljmp
add
and
sahf
fmuls
hlt
in
inc
sbb
push
xchg
int3
pop
xor
test
pop
push
add
out
push
add
add
dec
ja
ret
dec
adc
push
jl
inc
add
xchg
insb
dec
cmc
repnz
hlt
dec
xor
lret
or
mov
mov
popa
xchg
mov
cli
fsubs
vmread
jecxz
aam
inc
pop
addb
out
mov
clc
pop
or
lahf
mov
pop
int3
fcompl
sbb
sub
sbb
xor
adc
jnp
movsl
xor
arpl
mov
xor
xchg
xchg
and
andb
xbegin
jl
push
jne
mov
loopne
pop
xchg
xor
in
xor
mov
lock
mov
out
jae
rcl
movsl
aam
into
ror
arpl
decb
aaa
mov
sub
sbb
adc
cmp
hlt
pop
into
sahf
arpl
fneni(8087
lahf
pop
or
inc
sbb
movsl
jmp
add
pop
repz
xchg
xchg
shll
clc
pop
or
sub
fcoml
sti
push
addl
imul
and
inc
xchg
fcomps
xor
xchg
out
sbb
jb
shll
push
enter
add
xlat
dec
jno
out
mov
mov
push
out
fsubrs
mov
mov
mov
mov
jno
test
jle
pusha
add
ret
ljmp
sub
out
pop
bound
cld
cli
mov
inc
mov
and
cmpsl
push
add
into
sub
stos
push
lret
add
aam
xchg
lea
sarl
dec
iret
adc
mov
push
add
inc
testl
das
fists
sti
lret
cmp
cmp
xchg
lret
inc
xchg
mov
gs
jle
je
mov
outsl
xor
stos
fsts
mov
add
movsl
mov
xor
jmp
imulb
add
inc
xchg
inc
movsb
inc
pop
lods
in
add
push
out
loope
shlb
mov
pop
outsl
dec
jo
mov
mov
test
xor
dec
or
jb
bound
in
lods
lods
rcrb
push
xchg
push
add
cmp
dec
pushf
mov
add
aas
lock
cmp
dec
pop
popa
rol
and
add
clc
mov
in
test
cmc
mov
shll
int
jge
add
cmp
inc
repz
ljmp
lea
sub
mov
insl
adc
xchg
shrl
pop
pop
stc
dec
mov
add
outsl
iret
xor
jg
inc
xchg
in
add
cmp
lret
ds
sbb
enter
jmp
sti
movsl
inc
add
push
jns
cmp
out
aaa
jl
jle
cmpsb
addr16
fcomp
mov
or
xchg
push
push
push
ja
inc
out
aad
nop
popa
xorl
inc
push
jge
cs
adc
scas
push
add
mov
mov
sti
dec
jle
add
inc
add
dec
xor
shl
lcall
inc
test
add
ret
addr16
call
xlat
repnz
pushf
push
adc
dec
pusha
add
addb
add
lret
ficompl
scas
test
mov
xorb
inc
xlat
movsb
and
addb
cmp
cs
xchg
jbe
xor
push
push
lahf
pop
mov
inc
push
addl
xor
or
add
add
int
les
pop
aam
pop
mov
pop
dec
mov
aaa
stos
or
out
jg
int
aad
jecxz
push
push
add
aam
adc
add
repz
fs
sti
adc
xchg
push
movsl
xor
into
jp
sbb
inc
shll
add
or
mov
iret
stc
mov
mov
or
in
add
cmp
xor
or
inc
inc
adc
add
jne
gs
in
shlb
add
jbe
insl
into
pop
sbb
pushf
adc
pop
mov
jae
gs
nop
incb
inc
repz
lret
xor
fisubrl
or
add
jl
dec
mov
das
jp
mov
mulb
add
sbb
insb
test
add
push
mov
leave
adc
inc
dec
jp
test
stc
loop
jnp
or
add
inc
add
sub
clc
cltd
shrb
inc
add
aad
outsb
push
cmp
add
addb
sub
addr16
sub
xchg
add
fs
fildl
fsub
ljmp
xor
roll
out
push
xor
lods
sbb
mov
cmp
sub
xor
pop
loopne
lea
clc
daa
in
or
cmp
addl
scas
pop
aaa
iret
fsubl
add
push
stos
adc
mov
repz
cld
push
ja
das
push
xor
or
mov
mov
stos
daa
xchg
lods
leave
inc
mov
or
pusha
add
dec
cs
cmpsl
mov
mov
add
pop
negb
xchg
xor
mov
fldt
cmp
add
or
test
add
loop
ror
jle
jp
mov
push
pushf
jo
iret
sahf
loopne
call
inc
int
lret
cmp
hlt
jbe
lds
sbb
enter
dec
fsubrs
sbb
imul
fcom
mov
out
lahf
xchg
inc
sub
movsb
in
sub
cmp
pop
or
mov
xorb
addb
cmc
pop
and
je
sbb
fwait
fwait
daa
movsb
enter
dec
cmp
or
mov
adc
cmp
out
repnz
add
add
sub
inc
fdivl
add
jae
xchg
dec
ffreep
jns
bound
mov
addb
insl
insl
and
add
jecxz
iret
push
xchg
or
mov
xlat
pop
inc
pop
push
stc
or
xchg
test
rol
aaa
push
scas
sahf
xor
aas
xor
mov
test
imul
outsb
or
insl
push
add
and
sbb
cs
les
sbb
mov
pop
lods
xchg
fnsave
test
adc
add
rolb
mov
insl
fiaddl
cli
adc
sahf
xchg
fisubl
sbb
imul
mulb
fdivl
loopne
fisubrs
loopne
adc
test
loope
mov
adcl
jle
add
lret
push
xor
loop
mov
dec
push
add
jmp
add
out
sub
jle
test
dec
pop
lcall
rcrb
xchg
sbb
inc
stc
jo
xor
push
mov
xchg
add
push
stos
add
xchg
or
sub
xchg
scas
ljmp
add
loop
or
push
ret
std
imul
cmp
cmp
call
stos
rcrb
push
out
pop
jmp
loope
mov
mov
jno
pop
imul
dec
nop
lods
test
pop
mov
ja
add
imul
repnz
jno
dec
sar
and
imul
adc
in
or
jmp
fwait
xchg
testl
add
arpl
mov
push
pop
and
scas
push
mov
addb
add
cltd
cmp
lods
jno
std
hlt
cli
scas
pop
pop
pop
pop
inc
in
adc
jo
fstps
xor
xor
inc
subl
fwait
or
pop
int3
mov
ljmp
ja
lcall
adcl
dec
xor
dec
in
lret
out
add
add
enter
pop
outsb
outsb
add
xchg
add
ficoms
scas
pushf
xchg
and
sahf
pushf
mov
xchg
outsb
mov
xchg
scas
xchg
pop
stos
aaa
mov
pop
fists
jmp
mov
cld
stc
push
sub
aam
lods
add
jecxz
xlat
xor
add
stos
rcll
xchg
and
jae
mov
add
pop
mov
test
std
enter
mov
add
add
inc
test
rep
cli
mov
add
jno
cmpsl
jp
imul
das
int
add
jecxz
sbb
cmp
adc
inc
inc
add
xchg
xchg
movsl
arpl
mov
dec
push
testb
rcl
mov
jne
dec
into
xchg
jo
stc
clc
pop
repnz
dec
and
test
adc
mov
jecxz
test
dec
cli
cltd
and
aam
std
out
pop
push
fcompl
scas
and
or
sbb
aaa
xchg
repz
icebp
inc
add
add
fstpl
outsb
mov
jl
into
or
lods
fstpt
and
jmp
push
or
addl
out
pop
or
fwait
stos
shlb
mov
inc
add
ja
ss
add
add
cmc
fs
push
rorl
and
inc
in
lds
dec
or
xchg
cmp
add
pop
lret
xchg
add
lahf
jge
test
xchg
and
lds
lret
xchg
jnp
into
or
dec
jbe
sub
xchg
adc
lahf
sahf
insb
sub
out
adc
into
cmp
test
add
repz
pusha
add
mov
sub
enter
test
out
add
push
adc
or
je
pop
inc
inc
dec
cltd
arpl
jns
shll
addr16
add
bound
ret
xchg
dec
test
sarb
arpl
inc
add
add
jg
out
ja
cld
dec
aad
inc
lret
add
jecxz
jl
cmp
cmp
pop
dec
stos
enter
jg
adc
fiadds
out
es
sbb
sub
fisttpll
add
jbe
mov
outsl
pushf
sub
dec
pushf
and
push
lock
push
add
frstor
rolb
pop
insb
int3
rcll
add
inc
ss
dec
out
dec
scas
inc
add
out
sbbb
ret
daa
jmp
dec
ja
xor
imul
insb
push
push
lods
sbb
pop
add
int
cs
in
push
and
test
das
mov
xor
out
sbbl
xchg
leave
ficoml
sbb
add
push
lea
xchg
clc
std
insl
jnp
dec
or
movsb
scas
mov
add
leave
dec
into
mov
add
fstp
cmp
das
aad
dec
outsl
testb
outsl
daa
lcall
push
xchg
mov
test
mov
inc
fisubrl
lahf
inc
jo
adc
xor
add
andl
mov
insb
repz
mov
mov
lea
das
cmp
mov
add
xor
add
jno
fsubs
das
dec
push
into
sub
mov
stos
mov
fsubrp
add
mov
and
mov
jl
mov
addb
xor
xor
jb
iret
ds
push
lods
jp
insl
push
hlt
mov
xor
insl
out
aam
in
in
in
sub
push
in
movsb
mov
andl
test
and
xor
mov
faddp
stos
js
mov
push
pop
cmp
mov
mov
mov
in
jae
xchg
push
push
mov
add
fbstp
shlb
and
inc
cld
nop
orl
lods
cmp
outsb
popl
sub
jl
sti
cmp
pop
addl
notl
mov
add
data16
sbb
pop
outsl
pop
sub
leave
xchg
std
aas
lea
jbe
popa
aas
cmp
mov
jno
mov
fsubp
dec
adc
sti
mov
mov
push
push
rcll
mov
loope
pop
inc
add
lahf
lahf
cmp
xchg
sbb
daa
mov
or
mov
mov
test
add
orl
rcl
sub
push
add
icebp
or
jmp
out
loopne
lea
scas
add
inc
add
jo
decb
leave
scas
push
in
xchg
aas
and
es
bound
divb
inc
pushf
add
out
push
add
enter
das
ja
iret
mov
push
inc
inc
out
add
mov
cmc
les
cli
cli
lahf
addb
adc
rcrl
mov
into
xchg
push
int3
sub
inc
add
jmp
inc
mov
push
add
inc
sbb
mull
pushf
push
fildll
mov
iret
xchg
scas
pop
fmull
mov
dec
inc
bound
cwtl
and
cmc
in
cmp
call
lods
dec
clc
lret
jecxz
cld
mov
cmp
loopne
out
dec
mov
sbb
test
fidivs
outsl
mov
add
dec
cmp
roll
mov
daa
call
sub
xor
jmp
sub
bound
pop
pop
push
push
sarl
imul
in
js
mov
or
sub
mov
in
pop
fcom
dec
xor
loopne
mov
sbb
add
mov
jmp
push
push
add
lcall
fsubr
mov
imul
lahf
daa
jmp
add
push
dec
pop
pushf
sbb
in
fnsave
add
into
mov
hlt
sarl
pop
jo
dec
pop
jmp
add
loop
add
inc
add
sti
sti
addl
xor
stc
scas
and
inc
add
add
adc
ljmp
outsl
push
add
add
sub
cmp
mov
adc
push
push
les
lret
mov
adc
neg
fiaddl
cmp
mov
jne
xchg
pop
xor
les
mov
mov
add
cltd
mov
fcoml
mov
int
add
and
lret
outsl
ss
jp
outsb
daa
std
mov
add
pop
fstpl
ds
rorl
aad
or
in
pop
fwait
xchg
jg
xor
ss
jns
xchg
mov
xchg
xor
mov
lods
cld
jg
adc
add
sub
sbb
sbb
test
mov
jge
scas
es
scas
push
push
rcrb
dec
addb
nop
int3
add
pushf
es
sbb
arpl
clc
mov
addb
add
xor
mov
hlt
jl
add
sub
add
adc
xor
cltd
test
cltd
add
into
adc
scas
dec
sbb
pop
jl
pushf
out
xchg
out
aam
mov
push
dec
xor
bound
stos
mov
gs
int
dec
xor
std
mov
popf
callw
popa
pop
lret
push
and
xor
push
outsb
icebp
aad
js
mov
out
add
out
sbb
sbb
fisttpll
sbbb
inc
add
or
dec
inc
mov
inc
dec
push
add
inc
mov
lcall
insb
ret
cmp
je
cmc
adc
sub
add
push
lock
addb
jnp
fildll
loopne
push
pop
and
jle
inc
fs
std
xor
push
mov
lock
rcll
adc
hlt
lret
mov
roll
add
adc
mov
cli
xchg
jg
ljmp
add
call
inc
aam
repnz
push
add
pop
xchg
bound
arpl
xor
push
notl
inc
add
and
test
cmp
add
xchg
jae
mov
xchg
int3
int
aas
add
push
das
daa
addb
adc
push
mov
aad
adc
cmc
mov
jb
les
push
sahf
shrb
push
jle
mov
push
cld
hlt
lahf
mov
inc
add
dec
push
scas
sub
adc
test
jnp
xchg
stos
insl
push
add
sarl
dec
add
ja
movsl
js
nop
out
push
jmp
jge
out
mov
add
xchg
sub
xor
pop
fs
pop
aaa
pop
daa
js
lret
int
mov
mov
addr16
jmp
lock
mov
jp
push
pop
pop
sbb
repz
jne
cltd
xchg
mov
cs
add
pop
xchg
nop
push
dec
aas
pop
mov
mov
mov
jnp
add
cmpsl
std
adc
repnz
push
stc
pop
xchg
repz
fmulp
test
add
out
lds
mov
sbb
or
pushf
mov
daa
xlat
add
dec
movsb
ficompl
mov
xor
cwtl
or
xchg
sar
pmulhw
add
mov
inc
or
mov
inc
adc
sub
cmpsb
pop
add
and
push
fst
jnp
mov
or
add
shlb
adc
repnz
mov
cld
ja
add
out
pslld
out
out
mov
push
push
je
pop
pop
sbb
jno
test
dec
je
popa
insl
and
sbb
push
fstps
int
pop
mov
xor
mov
shrl
jle
cwtl
mov
adc
adc
jo
and
jle
cmp
add
rorl
js
test
jl
mov
mov
sub
inc
xchg
mov
addr16
mov
sub
xor
rcll
xor
loop
rorl
cmp
mov
scas
mov
scas
ret
pop
mov
cmp
mov
mov
test
test
xchg
movsb
pop
test
test
cmpsl
dec
push
lds
in
fsubs
add
adc
jle
jae
incl
ss
sbb
icebp
sbbb
in
and
jb
adc
rclb
sbb
out
xor
mulb
nop
jno,pn
loop
test
push
mov
cmpsb
bound
push
or
add
test
insl
fstpt
mov
jecxz
push
jnp
popl
pop
add
lea
fbld
gs
repnz
lock
cmp
movsl
mov
flds
rol
mov
add
xor
cltd
jbe
idivb
sbb
cmp
xchg
xor
lods
lods
adc
pop
jo
inc
add
and
sahf
jne
jo
stc
lahf
int3
test
fwait
inc
xlat
mov
ljmp
sbb
and
fidivs
mov
add
adc
push
push
and
lods
faddl
or
dec
repnz
xchg
jns
mov
in
push
fstp
sub
dec
lock
cmpsb
lahf
push
inc
add
mov
xchg
jbe
int
mov
push
xchg
xor
add
loopne
add
add
lods
jb
sar
loopne
sub
aas
cwtl
dec
lret
test
addr16
add
push
iret
pop
sub
cmc
cmp
xchg
sahf
fisubrs
add
add
lds
add
push
popf
imul
xor
pop
mov
add
xchg
and
jns
daa
ljmp
xchg
ljmp
or
call
int
fdivrl
cmp
std
or
mov
fisttpl
mov
cmc
in
push
add
call
xchg
push
push
adc
aas
xchg
mov
es
mov
xor
fwait
test
icebp
aaa
nop
loopne
mov
and
adc
cmp
and
nop
xchg
xlat
pushf
js
pop
cltd
jmp
mov
cmp
jecxz
insb
push
add
jmp
nop
xor
dec
jmp
pop
fcmovb
cmp
jecxz
add
addb
std
shrb
sbb
fistpll
ljmp
scas
cmc
cmp
push
add
dec
data16
test
mov
popf
or
push
cmp
cmc
rolb
repnz
inc
mov
popa
popa
dec
adc
aaa
xchg
fcoml
cltd
cmp
inc
aad
rol
pop
pop
dec
push
ja
je
xor
repnz
addb
sub
mov
dec
dec
xchg
mov
cmp
pop
loopne
adc
cmp
jmp
cwtl
pusha
add
hlt
and
loope
leave
push
repnz
and
addb
loope
or
mov
jecxz
je
inc
xchg
bound
push
mov
or
je
outsl
ds
fcoml
jo
fstpt
les
add
fstpl
sbb
add
test
out
dec
dec
mov
in
in
fildll
dec
sub
inc
add
movsl
xchg
mov
clc
mov
push
add
pop
adc
and
aam
call
mov
xchg
fnstenv
mov
or
std
test
loope
orb
sub
mov
and
std
popa
mov
mov
repnz
in
pushf
push
adc
mov
cmp
push
push
xchg
push
fists
shrl
out
push
add
mov
stos
movl
addb
or
addr16
sbbb
mov
push
add
dec
adc
sub
or
push
add
test
stos
fsubrl
cli
nop
xchg
lods
mov
push
mov
mov
xlat
jno
jg
cld
lods
mov
mov
lret
sub
lock
pop
fsubl
into
push
push
in
in
ss
jne
shrl
notl
cli
mov
mov
adc
push
leave
mov
addb
stos
aad
add
or
fsubrs
and
jecxz
pop
pop
out
adc
jae
jmp
rclb
sub
cmpsl
lds
add
insb
jae
es
add
or
out
push
adc
mov
rcrb
mov
cmpsl
push
pop
mov
ficompl
xorl
add
mov
pop
loope
cltd
push
add
mov
aad
sarl
xor
cmp
jecxz
push
add
out
scas
push
push
cmc
dec
xor
and
fld
scas
sub
cmpsl
sub
movsl
dec
les
sbb
cmp
je
inc
or
xlat
enter
push
mov
xchg
pusha
add
je
imul
es
out
out
out
sbb
dec
dec
jge
sahf
jne
pop
jp
mov
fsubrs
jnp
mov
lods
cld
sub
lock
data16
leave
dec
dec
and
xchg
pop
repz
pop
enter
mov
jo
jns
and
insb
and
jae
fsub
cwtl
das
cmp
or
in
xchg
vpsrad
sbb
stos
mov
fstpl
fsub
shlb
out
not
sti
push
push
jle
xor
data16
stos
loope
xchg
add
shll
rorl
jno
push
push
dec
cmp
xor
push
dec
addr16
xor
jbe
stc
sub
inc
or
mov
fiaddl
mov
fstps
pop
cmc
hlt
mov
sti
adc
outsb
mov
shrb
xchg
or
bound
jnp
stos
lds
in
add
iret
adc
rcrb
loop
or
adc
inc
fld
rep
es
adc
add
decl
mov
dec
cltd
out
icebp
xor
cmpsb
jne
sub
push
xchg
aas
ljmp
test
dec
cmc
notl
movsb
es
pop
pop
xor
xchg
mov
sbb
popa
dec
lret
ret
dec
xor
lods
scas
adc
jl
loopne
ret
xor
lea
push
decl
mov
test
xor
dec
jmp
int
cs
cltd
cmpsl
lock
xor
mov
pop
and
push
mov
jns
mov
scas
cmp
aaa
movsl
notl
add
xchg
xor
pop
ret
mov
stos
or
loop
or
push
add
sbb
nop
jl
xchg
xchg
xor
pop
pop
pop
pop
in
shll
adc
cmp
movsb
mov
pop
or
add
jbe
pop
cmp
pop
adc
add
icebp
cmp
stc
mov
push
sbb
add
add
xchg
lds
movsl
push
lahf
add
xchg
lret
test
add
cmpl
add
add
adcl
inc
addr16
xchg
daa
mov
fadd
sub
fucomp
cld
ja
sub
in
pop
imul
lahf
scas
in
jle
mov
jl
xchg
xchg
add
hlt
and
jmp
cmpsb
mov
adc
add
jb
push
movsb
popl
fbld
add
sti
push
push
xchg
fdivp
lods
cld
pop
xchg
les
add
add
stos
loop
cs
sbb
xchg
xorl
adc
ja
xlat
out
mov
data16
lahf
call
push
pop
lcall
xor
imul
dec
lret
push
jne
mov
inc
adc
outsb
xchg
xchg
mov
push
mov
or
pop
mov
fidivs
out
ret
xor
rcrl
mov
jmp
add
add
pusha
add
cmp
fistpll
push
mov
or
data16
pop
lcall
mov
jb
or
push
je
cmc
xchg
pop
out
dec
push
sbb
and
fdivr
mov
add
stos
ret
and
stos
lods
insl
inc
add
or
add
fidivs
add
xchg
dec
addl
testb
dec
ljmp
call
loopne
sti
mov
mov
test
mov
push
pop
int
bswap
inc
mov
push
test
add
rol
cltd
xchg
jmp
mov
adc
sbb
adc
cmc
arpl
xor
sarb
aas
xchg
ret
mov
je
or
orb
adc
mov
outsl
out
test
dec
inc
or
inc
jb
pusha
add
mov
sub
test
imul
and
or
mov
mov
pusha
add
dec
adc
mov
out
addl
adc
jb
mov
data16
push
jne
sub
lahf
aas
push
addb
nop
pop
cmp
push
add
addb
je
mov
and
fs
mov
xchg
jg
xor
jmp
cmp
test
lea
sbb
add
dec
xlat
inc
mov
push
cmp
iret
testl
push
push
in
fcompl
fwait
sbb
mov
push
add
add
add
dec
add
cld
popa
dec
lret
gs
cmp
xchg
ret
addl
sub
dec
mov
leave
sub
fisttpll
bound
stos
or
dec
rcrl
nop
jno
jp
popa
setae
or
sub
add
sub
jbe
add
or
add
int
lahf
divb
jle
mov
rcll
push
jmp
outsl
inc
xor
enter
outsl
cmc
add
jo
lods
out
lret
inc
add
cmp
dec
mov
negl
pop
or
xchg
sub
push
sti
rol
out
in
fildl
fbstp
sbb
cmp
ret
lret
pop
pop
js
hlt
jae
dec
lods
ss
out
icebp
inc
add
add
mov
ret
pop
mov
ss
inc
bound
push
xchg
jnp
popf
push
jbe
inc
push
repnz
int3
sar
jns
pushf
inc
add
push
add
push
inc
xchg
pusha
add
cli
lds
push
addb
addl
sub
cwtl
repz
outsl
mov
lods
repz
cmp
sbb
ds
and
cmp
fucomip
mov
jp
sub
or
imul
and
ffreep
xchg
sbb
jecxz
in
pop
dec
push
shlb
sbb
addl
sub
int3
xchg
xchg
scas
mov
pusha
add
or
imul
add
add
add
int
repnz
mov
in
jge
aaa
paddw
int
and
or
push
push
addb
inc
dec
out
imul
cmpsl
inc
add
jnp
push
roll
outsb
adc
fsts
add
int
jecxz
cmp
lock
jo
push
mov
fs
sbb
gs
inc
mov
jle
jae
leave
cld
dec
je
push
fiaddl
addr16
nop
fsubrp
jle
shll
fldenv
fnstcw
add
cmp
movsb
mov
fisttpll
outsb
jp
add
add
adc
mov
mov
subl
or
mov
mov
xor
inc
adc
adc
lret
ret
aas
rorb
mov
repz
addb
mov
jecxz
add
mov
fcmovnbe
xor
daa
xor
jmp
ja
lods
test
loope
add
xor
push
xchg
inc
add
lods
dec
data16
add
lods
sbb
add
and
mov
sub
iret
xchg
scas
fdiv
fisttpl
cmp
lret
mov
enter
pop
addl
add
jno
sub
and
mov
jecxz
add
bound
jae
pop
cmpsb
push
push
jae
aaa
xor
pop
push
mov
and
out
sbb
movsl
xor
test
push
jnp
test
stos
mov
pop
mov
ss
addb
pop
test
pop
mov
bound
scas
repnz
addl
mov
push
stos
aas
or
push
pop
mov
ret
incl
add
add
inc
add
daa
cmpsb
cmp
pop
push
ds
add
inc
jecxz
jge
cltd
mov
add
mov
pop
mov
mov
std
mov
sub
pushf
push
add
jge
addl
sbb
jbe
repnz
cltd
js
mov
stos
loop
inc
rcll
movsl
jns
add
push
cltd
and
add
fs
jb
mov
ret
and
sub
pusha
add
hlt
xor
clc
lods
and
mov
cmpsl
push
fdivrp
test
jmp
pop
lods
leave
insb
cmp
inc
add
lods
out
mov
jmp
in
leave
mov
fsub
push
stos
sub
inc
data16
pop
jl
xchg
xor
add
inc
das
or
addl
cmp
dec
mov
int
push
add
into
jge
add
or
adc
js
cmp
adc
inc
and
cmp
sti
xchg
mov
bound
jo
inc
addl
jno
cmp
mov
push
sbb
out
sbb
push
fwait
les
add
add
xor
xchg
or
sbb
add
mov
xchg
bound
and
sub
cmp
mov
test
add
pop
sbb
cltd
cltd
mov
and
xor
or
repz
test
test
push
imul
mov
andl
mov
add
push
sub
xor
mov
add
je
add
dec
dec
sahf
fnstsw
pop
add
faddl
stc
aaa
xchg
fldl
jae
inc
hlt
xchg
mov
in
jle
call
sbb
adc
in
adc
in
xchg
mov
sub
in
adc
add
mov
sahf
addb
mov
sbb
stos
and
cltd
lret
push
push
insb
fstpt
or
and
adc
addb
stc
lea
aas
push
add
mov
pop
inc
add
test
out
push
mov
repnz
ja
enter
cmp
sub
int3
pop
iret
pop
sbb
scas
out
jo
pop
stos
add
cmc
adc
sub
jge
out
repz
out
add
and
dec
ja
pop
inc
xchg
push
daa
cmp
addr16
xlat
rcll
inc
add
sbb
loopne
sahf
loope
add
xor
pushf
sub
rcr
xchg
xchg
add
mov
stos
fs
faddp
or
inc
es
sbb
shll
or
lods
nop
dec
popa
and
mov
jb
xorl
inc
pop
cmc
int3
sbb
pop
pop
jmp
out
shl
imul
add
mov
cltd
sub
and
scas
das
dec
sub
lods
cmova
ja
mov
xchg
sbb
jge
sbb
mov
insl
cmp
sti
add
inc
sahf
sbb
inc
add
pop
jne
mov
das
sbb
cs
std
int3
in
sti
jb
test
pop
pop
pop
andb
jecxz
int3
aam
mov
lahf
lahf
mov
add
add
repnz
int3
testb
jbe
push
ret
fwait
jge
enter
cltd
xchg
hlt
mov
xchg
mov
insb
out
inc
pop
stos
mov
pop
inc
add
in
js
loopne
add
jl
pop
xchg
cli
inc
loope
jns
lret
add
int
add
insb
ret
shrl
dec
dec
clc
push
mov
add
sub
jle
jnp
pop
js
aaa
fsubl
in
push
and
nop
lcall
jge
aam
cmp
in
insl
inc
pop
stos
mov
fists
je
lret
adc
dec
mov
sub
mov
xor
xchg
dec
pop
mov
push
inc
ret
gs
test
rclb
ss
mov
outsb
pop
fs
ss
pop
push
add
inc
add
decb
mov
std
sbb
in
sub
leave
test
arpl
jl
push
and
cwtl
xor
mov
lret
mov
pop
xor
mov
cmp
add
sti
stc
mov
jo
add
mov
xchg
mov
mov
dec
bound
lods
jge
fwait
cmp
out
lea
fldl2e
stc
cwtl
adc
test
popf
test
xchg
inc
add
sub
mov
add
add
mov
cmp
jle
fsub
ss
clc
mov
bound
loopne
mov
inc
mov
test
xor
mov
fldcw
lret
adc
bound
js
sbb
pusha
add
movb
int
xorl
sub
push
mov
and
and
mov
stc
mov
sbb
sti
mov
sub
or
fistps
add
in
stos
inc
add
lods
leave
fwait
or
add
sbb
js
lret
fistps
add
inc
mov
xchg
stc
loope
loop
xchg
test
mov
call
outsl
and
scas
std
fcoms
add
addr16
add
and
gs
sbb
dec
div
ret
ss
aaa
loope
push
cmp
add
pop
testb
nop
les
enter
mov
add
pop
outsb
addb
loopne
fwait
adc
iret
pop
idivl
es
inc
add
addb
std
jl
sub
std
jmp
ficoml
popf
movsb
lock
push
js
xchg
jo
fnsave
xor
adc
jecxz
cmpl
pop
pop
sub
iret
loop
pop
iret
mov
xor
ljmp
inc
ret
add
push
add
aad
dec
jae
sub
pop
pusha
add
in
mov
mov
loopne
sub
int3
cmp
negb
stos
xchg
lods
xchg
jno
cmp
xchg
or
addb
ss
xor
cmp
lds
popa
arpl
pop
out
add
sbb
aaa
and
addl
loope
in
mov
dec
xorb
imul
js
sbbb
adc
mov
mov
in
jno
fcom
cmp
xchg
inc
outsb
ss
push
sbb
ret
jne
negl
idiv
out
add
aaa
insl
pop
fwait
add
mov
cmp
add
cmp
xchg
and
sbb
lret
stc
dec
jbe
xor
lahf
nop
out
or
lcall
sbb
ret
hlt
repnz
fisubrl
add
inc
and
out
sbb
push
add
cmc
ret
les
stos
fisubl
dec
cmp
movsb
sub
insl
fists
mov
jle
jg
pop
in
fs
jnp
cmp
shll
aad
imul
mov
or
jno
jne
sub
add
cmp
adc
or
jmp
add
cmpl
jle
jge
loopne
add
test
sbb
pop
ja
imul
lock
insl
dec
lcall
lock
test
add
fadds
cmp
iret
push
push
or
loopne
fisttps
add
jbe
cmp
push
add
aam
mov
xor
mov
cmpsb
mov
adc
cmp
dec
adc
pushw
sahf
inc
push
add
fwait
scas
pop
add
mov
fiadds
mov
lods
aad
test
imul
pop
cltd
in
cs
jo
leave
jmp
xor
lea
adc
mov
addl
and
lret
or
andl
imul
cmp
push
addl
ss
daa
mov
push
mov
shrb
sbb
aad
jo
mov
pop
shl
mov
bound
jmp
loopne
ret
in
call
add
testb
push
mov
addl
out
push
popf
adc
sbb
shll
and
push
xchg
xchg
dec
mov
mov
cmp
filds
cmpsb
daa
xor
fs
add
out
push
addl
pop
xchg
pop
lahf
xor
push
ret
sub
add
cli
ss
in
xor
push
loope
cmp
add
pop
outsb
mov
ret
adc
ficompl
sbbb
and
cmp
add
pusha
pusha
add
push
add
iret
jns
dec
pop
ret
je
ljmp
push
out
push
inc
pop
sub
lcall
rolb
sub
add
and
jecxz
or
jne
sti
or
repz
sub
ss
add
mov
test
aam
lds
call
scas
cmp
pop
lds
iret
and
or
cmp
idivb
int
mov
pusha
add
add
sahf
inc
icebp
push
add
and
xor
mov
lods
into
cmp
mov
push
popf
xchg
stos
jmp
inc
rcrl
mov
and
push
push
push
das
inc
add
popf
jl
or
push
mov
jmp
push
cmp
pushf
jl
mov
mov
dec
xchg
mov
mov
das
push
add
loop
lock
shrl
add
sti
cmp
jno
dec
jnp
test
add
cwtl
insb
aad
outsb
push
add
jl
stos
ss
pop
out
lcall
jae
movsl
dec
jmp
push
adc
scas
test
adc
sti
dec
xchg
adc
ds
xchg
xor
jo
add
fisttps
imul
jp
xor
sbb
dec
out
in
jns
lret
sub
or
rorl
sbb
push
cmp
add
insb
imul
std
ljmp
enter
xchg
adc
clc
roll
and
loope
pop
dec
and
div
cmpsl
mov
dec
mov
out
lcall
cmc
sbb
jb
mov
add
insb
cmpsl
dec
xor
or
cld
insl
sbb
in
std
add
call
and
lret
dec
pop
and
push
aad
stos
popa
les
jmp
cmpsl
flds
mov
addb
scas
push
sub
xor
nop
sahf
mov
add
inc
xor
jmp
ss
aaa
loop
xor
test
mov
iret
popa
filds
cwtl
jmp
sti
lret
out
sbb
mov
xchg
pslld
addl
dec
iret
jge
repz
inc
mov
pop
inc
xor
aad
xchg
mov
push
pop
leave
mov
push
xchg
insb
push
adc
and
and
or
inc
mov
sbb
pop
mov
dec
clc
pop
mov
ret
rclb
dec
jnp
in
rorb
push
or
cmpps
inc
test
fs
dec
mov
jns
add
xchg
mov
push
ss
xchg
add
loope
add
or
add
dec
mov
add
mov
push
jbe
js
in
xchg
jge
sub
add
jno
jmp
ret
leave
push
aaa
jg
add
stc
loope
cmc
cwtl
lret
jg
add
mov
rcr
cmp
xchg
das
push
clc
fsubl
sti
inc
cs
cmp
fldenv
fadds
or
popf
fcmovnu
enter
jecxz
addb
addl
daa
add
addl
and
addl
add
cltd
jb
std
jge
sub
stc
lret
pop
outsb
jno
mov
jg
popa
sub
out
ljmp
cwtl
xchg
inc
pop
lea
std
push
repnz
scas
dec
jle
fs
jne
jb
fsts
lods
mov
fildll
xor
lcall
push
bound
mov
test
gs
lock
cmp
xor
pop
addb
add
out
ljmp
add
mov
jmp
or
les
in
sbb
jns
enter
fldcw
pop
cmp
insb
or
lock
push
xchg
add
ds
pop
lock
fnstsw
out
lahf
stc
dec
mov
les
mov
nop
dec
or
add
push
pop
mov
xchg
ja
push
ja
sub
inc
das
in
mov
sbb
cltd
in
mov
pop
arpl
imul
xchg
imul
xchg
push
add
idivb
sub
or
mov
pop
inc
adc
add
jge
mov
dec
sbb
clc
ret
and
inc
pop
push
add
xor
sbb
and
lods
aas
pop
mov
dec
xchg
iret
pop
sbb
push
shrb
mov
rclb
dec
adc
test
test
add
pop
pop
lods
aas
mov
push
ret
cltd
sub
orl
ja
adc
call
and
add
cmp
add
push
es
je
push
add
enter
in
adc
imul
mov
subb
add
shrl
adc
jg
xchg
jge
jl
jmp
add
add
punpcklwd
jns
subl
mov
clc
out
pushf
mov
jl
out
mov
lods
enter
loope
cmp
jns
mov
xor
and
addl
sti
icebp
dec
ds
dec
and
aad
jg
rolb
pop
fnstsw
incb
fwait
mov
std
and
addb
fnstenv
cmp
shlb
jb
xor
gs
insb
cmpsb
into
movsb
lock
lret
call
in
or
addb
jecxz
lods
into
add
repz
jnp
addl
add
lds
fimull
call
fistpll
sub
xchg
xchg
jg
test
aas
insb
jae
out
adc
jp
add
std
out
rorl
into
fisubrs
dec
jae
mov
lcall
mov
push
arpl
jae
fbld
adc
add
dec
aad
cltd
cltd
lret
aaa
xchg
mov
leave
stc
into
fisubl
adc
add
ret
mov
popf
ret
ds
cmpsl
dec
push
cli
xchg
mov
andl
cmp
pop
mov
pop
xchg
mov
lds
or
cmp
adc
repnz
loop
sub
lods
paddusb
notl
ds
xchg
scas
lcall
outsb
popa
cld
xor
ja
cwtl
fidivrs
ret
adc
out
loop
mov
sub
or
sub
mov
mov
clc
fldcw
mov
lods
fsubp
popa
pop
insl
stc
daa
nop
dec
in
fiaddl
add
sbb
lock
fidivrs
out
mov
mov
jno
sub
stos
push
cwtl
mov
movsl
movsl
lahf
pop
sarb
dec
fwait
inc
imul
mov
pop
jbe
out
icebp
jle
fstpt
scas
xor
es
adc
loop,pt
jl
loope
xor
push
sbb
inc
add
dec
cmp
xor
add
dec
jo
pop
pop
cld
sub
and
jge
into
adc
lods
ja
xor
mov
cli
mov
mov
xchg
decl
testb
add
fimuls
lods
mov
iret
and
fdivl
test
sbb
sbb
pop
jp
add
sbb
imul
je
fs
sub
push
and
or
call
sub
lcall
xlat
lret
daa
cmp
add
out
and
add
dec
xor
int
test
popa
pop
push
loope
in
push
addl
mov
repz
aam
imul
or
outsl
or
cld
nop
in
loopne
xor
cmp
div
dec
pop
pop
or
cmp
out
imul
xor
insl
addl
jl
jg
insl
into
jne
test
stc
and
adc
jg
xchg
pop
pop
mov
sbb
sti
jnp
outsl
pavgb
mov
jecxz
dec
lods
icebp
cmp
jne
testl
insl
insl
pop
dec
in
inc
add
mulb
test
std
push
aam
or
imul
test
lods
jae
cmpsl
cmpsb
insl
xchg
push
jbe
add
mov
pop
leave
adc
rcpps
pop
pop
repz
pmullw
xor
in
or
add
loop
xor
pop
jns
add
pushf
clc
divb
sbb
jge
add
sbb
lods
icebp
or
push
in
adc
sbb
ficoms
aam
xor
pop
mov
jbe
sub
mov
cmp
or
je
adc
test
int3
insb
es
sub
cmp
imul
inc
or
xchg
jb
adc
popf
sub
push
add
jne
loop
sbb
sub
and
jp
dec
je
inc
dec
mov
add
xchg
sub
decl
pop
push
fnstsw
cmpsl
sub
outsb
repnz
adc
pop
sub
cmpsb
shlb
or
and
insl
es
pop
mov
scas
rcll
cmpsb
mov
sti
push
mov
jl
pop
pop
xchg
mov
dec
nop
add
inc
xchg
in
or
add
pop
scas
sub
fs
push
push
inc
xor
inc
jnp
test
bound
aaa
sahf
mov
into
sbb
cltd
sbb
sbb
add
incb
xchg
push
addr16
push
test
adc
lock
pop
push
add
add
pop
jl
sub
cmp
mov
clc
nop
and
mov
cmpsl
mov
sub
push
mov
punpcklbw
test
out
lcall
movl
cmc
sub
arpl
dec
aaa
sahf
lds
sahf
fisttpll
mull
movsb
std
lock
cmp
icebp
into
or
jae
daa
scas
jmp
add
jg
loope
or
jnp
pop
push
fwait
mov
add
sbb
enter
add
push
lock
pop
enter
pusha
add
adc
mov
aas
mov
or
cmp
cmpsb
ret
push
enter
xor
add
jo
jno
imul
ja
lock
movsb
cmc
mov
adc
bound
adc
sub
lock
push
or
cwtl
mov
lahf
and
rclb
pop
xchg
scas
scas
or
lcall
inc
cmc
sti
add
add
out
int3
mov
or
dec
insb
and
cmp
xor
push
push
mov
mov
xor
out
scas
and
sti
sbb
mov
rcl
test
cltd
rcl
jb
mov
push
mov
sbb
jae
fisttpl
into
jo,pt
jecxz
mov
xchg
push
loopne
inc
decb
cmpsl
in
fucomip
add
xchg
inc
jnp
jg
inc
add
aad
mov
mov
push
add
aaa
adc
imul
xchg
mov
xor
cmp
lods
movsbl
icebp
jge
cmpsl
or
inc
fldt
jno
mov
lock
or
clc
cltd
jno
push
popf
and
lock
mov
shlb
add
add
fwait
cmc
lea
adc
mov
xchg
xor
pop
mov
push
push
add
jae
push
loopne
mov
pop
cmpsl
out
push
add
or
dec
mov
dec
or
jno
or
add
sbb
lock
pop
jmp
mov
rclb
mov
pop
dec
lods
inc
jg
sub
stc
lds
fdivr
cltd
xchg
inc
push
dec
adc
xchg
call
xchg
adc
push
imul
push
data16
mov
mov
pop
xor
mov
cmpsl
fnstcw
ret
bound
dec
add
jecxz
dec
ss
mov
lods
lret
jb
xchg
xchg
cmp
add
inc
mov
lret
dec
mov
push
fmull
cmp
gs
pop
gs
std
push
rcrb
mov
shr
add
dec
arpl
add
pop
rorl
sbb
inc
add
lods
shll
outsl
gs
xor
add
ret
add
adc
xlat
daa
ret
lds
std
test
test
push
sbb
insl
add
mov
jmp
incl
hlt
cmp
loop
cmpsl
dec
xor
mov
addl
xchg
test
xor
bound
dec
mov
mov
pop
pop
inc
and
jl
pop
sub
sbb
inc
xor
jo
ret
sub
aas
push
into
jo
mov
sbb
in
cmp
mov
dec
push
xlat
jl
inc
jnp
and
push
mov
mov
stos
or
push
pop
pop
push
add
aaa
push
jns
cmp
repnz
enter
add
add
jns
xor
pop
fs
jecxz
test
out
sbb
ficoms
add
xchg
ds
or
outsl
outsl
pop
icebp
roll
lahf
test
inc
adc
xor
jle
sub
inc
out
and
insl
mov
es
pop
lods
xchg
pop
xchg
sbb
or
jb
jne
sub
js
mov
and
leave
adc
std
fidivs
data16
dec
movsb
jno
iret
cs
les
sub
pushw
mov
or
sbb
in
ret
popf
dec
inc
shll
imul
jle
jo
movsl
gs
push
stc
dec
das
cmc
xor
cmp
jmp
add
mov
test
in
outsl
cltd
and
xchg
add
out
je
in
cmp
inc
xchg
stos
add
xor
aaa
test
nop
mov
stc
dec
addr16
movsb
push
scas
jno
outsl
cmp
das
je
xchg
mov
xor
inc
jmp
and
fnstsw
cmpsl
mov
adc
addb
pop
mov
mov
dec
ret
out
scas
out
test
sti
lret
mov
ss
add
sarb
push
mov
cmc
les
add
sbb
ljmp
add
mov
add
es
xor
xor
mov
sti
inc
add
mov
sbb
adcl
pop
and
adc
mov
dec
sub
mov
or
cmp
data16
das
aam
add
movsb
xorl
xchg
fwait
jmp
dec
push
cmpl
mov
sbb
fsts
rorb
pusha
add
mov
data16
fcomps
adc
loop
dec
xor
shlb
test
dec
addr16
xor
adc
adc
ret
test
fnsave
ficomps
push
sub
xor
pop
xor
xchg
iret
stos
std
mov
cmp
add
ret
xchg
push
push
jp
push
cmp
mov
add
rcrb
movsb
cmc
cmp
stc
imul
mov
js
mov
pop
pop
pop
push
sbb
push
mov
jns
int
mov
push
pop
stc
cmp
adc
add
addb
loopne
fimull
loope
add
sbb
add
add
xchg
pop
jg
cmp
fwait
out
out
push
push
icebp
shlb
mov
mov
add
ficomps
aad
mov
lock
lcall
add
dec
bound
lret
sbb
xchg
pop
out
xor
int3
mov
xor
adc
or
int
or
lret
cmp
fldt
pop
adc
jl
daa
dec
call
inc
mov
dec
jnp
lret
mov
cmc
cli
push
jmp
bound
push
xor
xchg
and
adc
push
ljmp
adc
mov
imulb
push
insl
push
push
cwtl
jb
mov
ror
int
in
lods
in
dec
xchg
fwait
stos
sub
popa
shlb
jbe
adc
xor
dec
imul
sarb
imul
sbb
lods
sbb
cltd
cmpsl
cmp
jno
add
imul
dec
mov
mov
repz
jbe
xor
pop
shrb
add
shl
outsb
push
movsl
jnp
out
loopne
and
add
mov
lock
and
mov
outsl
fs
movsl
sbb
pushf
pop
push
xchg
pop
jge
inc
mov
loope
lock
lea
xor
push
push
jne
scas
das
lock
pop
lret
cld
cmc
test
into
aaa
ret
lea
mov
add
mov
add
mov
jns
fsubl
xchg
mov
push
decb
shrl
call
add
mov
lods
or
pop
addr16
aaa
xor
mov
push
rcll
int3
mov
popf
mov
iret
jnp
mov
mov
cmp
add
cld
jge
sbb
mov
test
inc
mov
dec
and
cmp
fadds
or
out
jp
add
cmp
sbb
mov
loopne
ret
push
add
pusha
add
add
dec
enter
leave
mov
dec
popa
sbb
mov
cld
mov
lret
jb
call
and
pop
xchg
mov
mov
stos
mov
pop
jg
outsl
daa
movsl
fnstsw
loop
jmp
daa
sbb
sub
in
in
inc
xchg
fmuls
jo
or
sarb
xlat
cmpsl
xor
into
mov
ret
mov
int
adc
cmpl
adc
sti
ret
dec
hlt
dec
mov
push
add
test
lods
loop
dec
mov
lods
xlat
pop
mov
popl
add
imul
shlb
add
ficompl
test
ret
bound
push
shlb
out
push
fisubl
push
es
add
insl
loop
test
add
popf
fsub
adc
div
jne
adc
sub
xchg
leave
fidivs
out
lods
nop
sbb
popa
cmp
sub
sbb
in
and
andl
mov
adc
sbb
testb
bound
rol
jae
sbb
jae
arpl
add
mov
mov
add
cmpsl
fs
in
adc
lods
jl
mov
xor
sub
repnz
push
loop
or
fmuls
ss
pop
push
mov
inc
pop
sub
outsl
xor
in
mov
fcomps
jns
inc
pop
dec
enter
add
push
dec
inc
movsl
sub
ud2
xchg
jle
and
mov
push
call
js
push
dec
add
ficoml
xor
addr16
sbb
jmp
sbb
or
xor
mov
add
mov
and
push
es
add
xor
mov
in
pop
arpl
mov
jae
iret
inc
push
adc
jge
dec
lods
aas
mov
push
setns
aad
imul
mov
in
xor
cmp
push
idiv
fisttpll
repnz
xchg
sbb
add
or
cmpl
adc
or
pop
xor
lods
sub
stos
lret
adc
je
std
dec
addb
cmp
add
sarb
inc
in
and
stc
dec
pop
leave
nop
daa
inc
mov
bound
out
inc
add
sahf
lds
inc
add
push
mov
ret
add
mulb
lret
push
idiv
cmpl
aad
mulb
adc
jp
inc
aaa
je
repz
sbb
sbb
jne
fdivrs
out
sub
sbb
jmp
int
jno
popf
add
jp
fidivs
ljmp
les
ss
sub
pop
mov
sahf
repnz
loopne
xor
test
std
std
add
addb
rcrb
lret
in
pop
out
fwait
shlb
push
xlat
xlat
xchg
aad
int3
adc
test
rorb
test
mov
pushf
xchg
sbb
test
xlat
jno
mov
mov
inc
add
or
mov
cld
push
cmp
sbb
and
out
jle
outsl
mov
fwait
shl
mov
sbb
addb
xor
arpl
jno
sbb
push
mov
lret
xchg
cmp
in
or
adc
subl
sbb
cmp
pop
cltd
stc
scas
jecxz
push
leave
jge
xlat
add
int3
sub
jb
addl
jbe
sbb
test
add
fs
cli
xchg
test
ficompl
xor
jmp
inc
jnp
sub
push
push
sarl
fidivrs
adc
adc
jle
inc
sub
clc
xchg
inc
lahf
push
repnz
xchg
rcll
lods
and
out
fistpl
cmpsl
bound
jo
fnstsw
repnz
push
lods
sti
pop
mov
adc
lods
xchg
inc
cmpsb
mov
jns
out
add
pop
pop
pop
dec
sub
shrl
cmp
dec
mov
pop
addl
into
pop
ret
cmp
sub
stos
and
aaa
or
mov
xchg
xor
dec
push
cld
add
jne
jge
add
jle
mov
fdivr
mov
jnp
sar
into
je
jp
js
ja
repnz
add
into
xchg
mov
add
iret
jge
jle
outsl
xlat
mov
cmp
xchg
scas
stos
fdivrl
out
andl
mov
sti
add
or
cmp
aaa
cmp
push
mov
push
pop
pop
mov
and
outsb
add
inc
mov
stos
jbe
pop
ds
inc
sub
dec
dec
pusha
add
jno
sbb
mov
lret
jecxz
fdivl
pop
cltd
loop
jl
cli
add
add
and
mov
enter
rolb
or
cld
idivl
aad
add
and
out
mulb
movl
in
cld
shll
aas
mov
rolb
shlb
arpl
adc
dec
add
xor
pop
mov
dec
test
ds
xor
icebp
lret
sub
mov
jnp
das
cmp
es
nop
pop
pop
jo
or
clc
hlt
xchg
push
pop
pop
inc
insl
push
cmp
pop
jb
in
pop
sub
mov
fwait
push
and
andb
test
int3
push
add
push
in
mov
pop
ss
test
loope
fucomip
fdivs
mov
ficoms
add
xor
ds
add
xor
lea
push
sti
mov
ds
insb
in
mov
mov
jge
pop
lea
or
jae
xchg
movsb
inc
fs
psrlw
sub
jne
add
or
imul
add
fildl
hlt
scas
push
jg
inc
hlt
mov
out
arpl
xor
push
or
push
rep
pop
cmpsb
or
jp
insb
addl
cmp
lret
adc
loope
test
and
add
iret
jne
in
inc
in
cmp
xchg
ds
lea
or
fsubr
mov
push
and
repz
mov
ret
add
outsb
mov
in
mov
cmp
mov
mov
mov
mov
fadd
sahf
lahf
jle
mov
jge
and
addl
shlb
and
sarl
sub
push
sbb
adc
mov
and
mov
add
scas
mov
filds
mov
sub
in
xchg
cmp
jecxz
sub
imul
or
add
push
in
mov
jo
add
jno
enter
stos
ret
xchg
push
add
dec
mov
add
orl
sub
xchg
cltd
stc
mov
mov
add
sub
aaa
hlt
loope
mov
out
js
push
add
inc
add
cltd
sbb
adc
xor
push
push
das
loope
inc
pop
cmp
add
sbb
insl
lahf
aaa
gs
cmp
dec
and
ss
mov
testl
sbb
clc
gs
add
and
test
pop
mov
nop
push
sbbb
adc
inc
xchg
enter
inc
jae
cmc
in
push
mov
fbstp
add
lea
dec
dec
fnstenv
cmp
fistps
pushf
cmp
or
mov
jmp
cld
adc
mov
jbe
mov
jae
loope
outsl
pop
jo
xor
or
pushl
add
add
fistpl
stc
les
lds
xor
add
pop
stos
into
push
mov
test
das
stc
add
mov
dec
lahf
jmp
push
add
add
ficoml
push
jbe
filds
pop
test
inc
add
jg
ret
jmp
aam
mov
les
push
cs
cld
das
and
xor
arpl
dec
xchg
int
and
aas
mov
xor
test
aas
jbe
mov
add
jp
push
loopne
or
pop
rcll
push
xchg
aam
push
jns
sar
les
aas
inc
mov
in
push
jbe
add
jge
inc
add
enter
je
push
add
mov
mov
xor
jge
nop
cmp
cli
fcomps
imul
dec
test
fnstenv
add
pop
mov
addb
fidivrs
dec
xchg
sbb
test
adc
fdivs
dec
cmc
cmp
lgs
push
out
repnz
jmp
push
stc
pop
fdivl
mov
add
sub
mov
in
push
sub
adc
inc
gs
jne
loope
icebp
sldt
out
add
push
push
imul
cli
adc
bound
imul
mov
push
add
push
out
into
mov
cmpl
scas
cmp
das
inc
mov
fidivrl
adc
sub
test
shrl
add
push
add
outsb
fstps
xchg
xor
divl
out
daa
addb
fsub
rcll
jmp
add
insl
fildl
mov
jae
cmc
fwait
mov
inc
inc
sub
in
enter
ret
stc
movsl
mov
mov
sti
addb
cmp
mov
sbb
sbb
push
loope
rclb
add
ss
repnz
push
std
aas
jnp
shlb
decl
lea
mov
cmp
cld
xchg
in
mov
std
ret
test
pop
jmp
sarb
pop
bnd
sar
bound
mov
mov
addr16
lret
push
mov
les
push
mov
idivb
dec
cs
and
scas
repz
sti
pop
mov
jo
sbb
add
inc
inc
sub
pop
cld
pushf
or
mulb
jns
mov
jmp
test
sub
ljmp
and
sbb
andb
out
out
push
push
divl
sbb
stc
pop
sbb
inc
cmp
add
add
out
dec
jg
lock
call
add
mov
fcmovnu
inc
adc
movsb
lea
inc
add
and
jle
fimuls
in
adc
mov
cli
decl
es
ficoml
mov
sub
ds
gs
pop
push
inc
add
push
cwtl
lock
jno
or
cmpsl
inc
pop
xchg
xchg
addr16
sub
dec
mov
push
movl
pop
jo
gs
xchg
sub
mov
xchg
addb
inc
popf
stc
push
push
mov
sahf
mov
cmc
test
add
push
push
xlat
bound
faddl
fs
push
jb
and
dec
jle
add
xchg
aad
mov
pop
sahf
xor
sub
dec
rclb
lcall
movsl
fucomi
data16
inc
sbb
addb
out
call
test
add
mov
stc
std
jno
cmpsb
adc
mov
mull
imul
lods
and
clc
sbb
adc
pop
sub
out
mov
std
sti
fdivrs
scas
test
mov
dec
jb
fs
lea
repnz
mov
mov
clc
push
add
fcomp
inc
lahf
xor
sub
lcall
roll
mov
sbb
dec
mov
add
cld
cld
aaa
test
mov
sbb
lret
mov
shlb
add
sub
fcoml
rcrb
dec
sti
aad
leave
cmc
popf
dec
sti
fisubrs
lods
mov
cmp
sahf
sbb
sub
repz
mov
aaa
into
xchg
add
ret
cmpsl
fs
cmp
jecxz
lock
mov
add
test
aam
ja
fmull
or
cmp
mull
cwtl
jg
add
adc
jg
stc
jmp
push
shlb
sub
mov
add
rolb
push
shll
data16
adc
lods
xor
outsb
bound
hlt
sbb
cltd
pop
jno
outsl
and
insl
xor
into
shll
xchg
ret
ds
das
dec
push
add
sub
loopne
mov
andl
adc
lock
leave
insl
xlat
cwtl
fdivl
add
mov
xor
int
or
stos
mov
stc
cmp
add
push
mov
sbb
fs
or
lea
das
adc
int3
imul
mov
xchg
aam
jp
loope
addb
pop
clc
mov
inc
lds
add
fidivs
add
lcall
dec
out
pop
dec
movb
pop
add
push
das
xor
shll
dec
popf
sub
ds
je
dec
pushf
cmp
pop
fs
fmul
cmp
rorb
push
jnp
bound
mov
jns
push
aaa
pop
sti
inc
xchg
pop
mov
mov
xorl
and
nop
push
mov
fwait
fs
jl
xor
arpl
and
fcoms
dec
out
dec
test
enter
test
into
dec
ret
or
mov
mov
lods
repnz
mov
es
fisubl
loope
insl
sbb
in
and
loopne
add
sarb
add
mov
outsb
outsb
pusha
add
testl
cli
xor
outsl
sbb
repnz
inc
cmc
jb
es
test
cmp
addb
xor
movsl
jmp
xor
mov
fucomip
cmpsl
cmp
mov
test
pop
ret
fsubs
mov
into
addb
mov
push
push
cltd
insb
enter
clc
enter
xchg
and
fmul
sbb
jne
setae
cmp
and
cmp
adc
std
sbb
and
out
mov
xlat
vhaddpd
pop
test
cmp
aad
ret
xor
roll
lcall
decb
mov
test
addl
int
pusha
add
out
dec
cmp
cwtl
jle
fimuls
arpl
js
xlat
mov
or
add
and
inc
mov
jns
mov
add
pop
mov
out
xlat
mov
out
push
add
sti
mov
repnz
xor
test
in
pop
sub
ror
mov
cmp
mov
and
ljmp
or
cmc
sbb
ss
add
es
cmp
out
sbb
and
data16
push
leave
call
xor
arpl
mov
xor
lods
arpl
push
add
pop
data16
fsubl
jbe
cld
popf
mov
aam
inc
mov
inc
inc
inc
or
xchg
inc
test
out
dec
inc
lock
leave
lahf
add
push
icebp
aas
push
add
lea
scas
sti
ss
cmc
xchg
cmp
data16
in
ds
xchg
leave
or
add
and
push
add
jp
das
sbb
out
fbld
testl
mov
mov
shrb
arpl
cmp
cltd
mov
cmp
test
sahf
xchg
mov
xlat
xor
sbb
xchg
arpl
daa
cmpsl
and
push
scas
jnp
mov
fisubrl
xchg
addl
fsubr
jno
jg
scas
addb
add
cwtd
movsb
push
jg
sub
xor
jo
push
add
xchg
push
inc
hlt
or
push
hlt
mov
push
push
popa
mull
add
loopne
movsb
dec
lods
jmp
lock
loopne
sub
call
xor
jecxz
and
movsl
rcl
xlat
xchg
les
mov
sarl
pop
shrb
sbb
jp
and
fldl
pop
mov
add
mov
loopne
sub
sub
and
ja
cmp
shl
push
add
or
mov
add
inc
inc
add
xchg
popa
jg
push
out
bound
dec
out
out
mov
push
sub
and
dec
ja
and
mov
mov
arpl
test
testb
loop
inc
in
push
sahf
jmp
enter
std
aam
sbb
add
sbb
andl
jecxz
jmp
ret
mov
push
xchg
xchg
jne
dec
push
and
mulb
fs
in
test
add
daa
sbb
movsl
pop
cmp
leave
jbe
aas
xchg
sub
xor
imul
rclb
imul
shrl
add
leave
adc
aaa
jl
dec
mov
sbb
adc
sbb
pop
cmp
sub
or
pop
pop
shlb
add
sti
sbbb
outsl
add
push
cs
add
int
add
repnz
mov
out
add
jp
dec
xchg
jne
aad
jns
inc
dec
add
jmp
sub
loope
jl
out
sbb
add
lock
sbb
in
cmpsl
or
or
sbbl
add
sbb
dec
repz
int
and
mov
jle
pushf
dec
add
inc
add
addb
push
add
pop
lods
pop
lea
mov
pop
dec
sbb
call
imul
lods
adc
stos
jmp
fs
push
movsl
subl
add
mov
filds
outsb
xchg
repz
daa
push
cmp
pop
sub
lret
fucom
and
shlb
dec
xchg
movsl
int
and
aad
dec
inc
dec
dec
std
mov
pop
cwtl
cwtl
cli
push
fcoml
pop
cmp
adc
xchg
lret
in
push
mov
xchg
ljmp
jno
loop
xor
fs
push
mov
je
xchg
fs
dec
std
lds
int3
pushf
addr16
mov
xchg
jmp
arpl
fldt
rcrl
mov
dec
mov
jge
in
mov
cltd
sbb
stos
sbb
add
xchg
jmp
loopne
rcrb
mov
or
add
push
push
mov
push
add
mov
cmp
in
dec
jnp
add
outsl
ret
pop
cwtl
lcall
sub
dec
pop
fnstsw
test
loop
subl
addl
cwtl
out
leave
les
aam
mov
sbb
ja
fisttps
sbbl
fdivl
mov
inc
and
pop
int3
test
ret
mov
mov
push
imul
pop
push
jb
int3
mov
add
shl
mov
fsts
mov
or
shlb
or
popf
cwtl
push
add
mov
cmp
loope
add
push
dec
dec
aam
repz
pop
jbe
out
dec
loopne
psllw
adc
loop
sub
sti
shrl
dec
cmp
in
mov
cmp
into
out
mov
aad
lods
mov
sub
and
outsl
addl
add
imull
pop
jne
add
mov
cmp
insb
mov
jae
dec
addl
pushf
mov
xchg
out
mov
cmc
sti
in
push
xlat
dec
mov
adc
out
andb
addl
push
lods
fldt
addb
xchg
jb
add
je
int3
addb
mov
call
add
xor
out
mov
cs
loopne
add
and
dec
cmp
dec
push
sub
cmc
cmc
sarl
xor
and
sub
dec
stos
jno
dec
inc
fists
fistl
add
daa
insl
ret
sub
sarb
jbe
cmp
inc
rorb
addl
sub
pop
jb
xor
sub
sbb
cmpsb
xor
cmp
mov
leave
adc
clc
rcl
iret
dec
into
mov
sub
push
daa
popf
xchg
test
movsb
jne
shlb
sbb
jo
xchg
cltd
rcr
mov
cmp
inc
je
ret
imul
mov
test
out
decb
fbstp
out
adc
ja
jle
push
icebp
aam
pop
or
lock
sub
push
mov
idiv
jb
xlat
add
add
ret
jne,pn
pop
aad
mov
shlb
push
mov
add
mov
lcall
test
mov
ret
repz
ljmp
shll
push
xor
jb
jle
jae
popf
jne
mov
in
loopne
xchg
pushf
pop
xchg
ds
iret
movsl
inc
clc
outsb
inc
add
dec
xchg
mov
or
jg
adc
sbb
add
xchg
cmp
push
dec
ja
push
adc
push
or
cwtl
cltd
adc
push
pop
inc
mov
sbb
add
xchg
cmpsl
mov
insb
xchg
insb
ljmp
mov
loopne
flds
shll
lahf
scas
mov
gs
cmpsl
sti
xchg
inc
add
sbbb
movsl
cld
and
pushf
add
push
add
jo
push
shl
sti
cmpsb
mov
lcall
sbb
stos
lret
sbb
jecxz
mov
fs
jnp
call
popa
dec
shll
in
arpl
outsb
sbb
dec
in
sbb
int
mov
push
add
pop
lods
daa
in
push
jg
scas
scas
lods
outsl
mov
mov
xchg
ljmp
test
and
popa
push
mov
pop
inc
adc
xchg
sub
hlt
hlt
mov
int
cltd
call
inc
push
add
mov
ds
testb
mov
out
dec
xchg
jne
loope
aaa
sarb
in
jne
mov
xchg
cmp
rcll
cmpsl
test
fcomp
test
or
add
xor
xor
stos
push
sbb
test
lret
add
xchg
and
add
std
xor
int
pop
in
xchg
gs
mov
imul
mov
add
test
aad
push
add
idivl
inc
ljmp
sbb
dec
int
dec
sbb
int3
mov
rclb
test
xorb
sbb
incb
pop
fsubrl
lods
jg
jo
data16
and
adc
jae
dec
and
sub
shl
jge
nop
repnz
popa
addb
addb
icebp
and
xor
and
repnz
popf
push
jns
add
sldt
hlt
add
fwait
das
jmp
push
pop
je
lea
jns
imul
pop
repz
dec
test
jb
cli
mov
add
imul
jb
pop
mov
inc
add
mov
fstps
ficompl
lods
and
push
js
ficoms
jo
shll
out
and
dec
popa
cli
lcall
dec
or
cmpsb
sbb
and
sbb
mov
dec
sbb
xchg
jmp
aam
pop
lds
add
pushf
dec
mov
dec
pop
mov
sub
aam
std
xor
mov
sbb
sub
push
mov
sub
cltd
mov
fisttpll
aad
jbe
mov
add
add
xor
jle
inc
and
cmp
aad
out
icebp
insb
in
cld
and
push
scas
fisttpll
jecxz
adc
dec
adc
sub
leave
cld
sarl
test
add
pop
in
cmp
dec
xchg
xor
mov
mov
fnstenv
add
int3
sbb
push
push
aad
inc
dec
sbb
ss
dec
ret
add
nop
add
inc
popa
jle
xchg
push
sub
adc
sub
pop
or
scas
pause
mov
mov
shlb
sbb
inc
cmc
sahf
adc
lods
mov
add
ljmp
dec
sbb
sahf
jmp
add
jno
xchg
fisubl
sub
xchg
pusha
add
sbb
add
hlt
pop
psubq
decb
sub
adc
dec
clc
pushf
inc
test
test
or
push
lods
add
pushl
mov
iret
mov
xor
pop
ss
add
dec
fs
add
add
mov
loope
mov
clc
popf
enter
out
test
lahf
sti
ss
cli
les
mov
stc
sahf
xchg
clc
mov
and
dec
jmp
push
push
pop
leave
in
xchg
dec
in
or
je
adc
bound
jmp
mov
imull
mov
addr16
mov
jns
push
pop
pop
sarb
lret
mov
pop
hlt
fmuls
push
add
pop
popf
mov
mov
cmp
add
arpl
cmpb
push
jno
push
adc
xchg
hlt
call
dec
mov
lds
inc
ja
mov
loopne
xor
cmp
pop
lcall
hlt
pop
repnz
mov
ret
hlt
cld
stc
cmp
and
jno
xor
inc
mov
sub
and
fs
popf
sbb
cvtpi2ps
ljmp
add
mov
add
mov
inc
idiv
sub
or
sbb
mov
ds
mov
cmp
inc
test
adc
icebp
and
lods
outsb
loopne
xor
pusha
add
xchg
loopne
xchg
add
jl
nop
fnstsw
add
insb
pop
jle
stc
mov
mov
mov
stos
mov
push
cmp
mov
lret
mov
mov
data16
rcll
jo
sub
xchg
bound
xchg
push
pop
lahf
add
rolb
jmp
enter
fisubrl
rol
dec
pop
in
mov
ret
rcl
xchg
add
fisttpll
insb
out
jnp
jge
cmp
sti
mov
pushf
inc
add
add
adc
addl
cwtl
aam
cmp
or
mov
int3
mov
add
dec
push
add
add
mov
fisttpl
inc
add
pop
inc
add
adc
addl
mov
hlt
inc
fnstenv
and
or
xor
xchg
inc
add
xchg
pop
nop
notb
lods
lods
add
push
add
xor
xor
push
scas
fs
add
jp
in
add
ret
bound
out
inc
cmp
push
and
jecxz
ljmp
mov
test
xor
lods
jg
mov
stc
push
add
ljmp
adc
clc
xchg
out
jge
add
add
repz
mov
pop
xchg
jg
inc
addl
aad
fwait
jb
push
js
fcoms
insb
mov
and
xor
jmp
popf
push
pusha
add
lcall
pop
cmp
add
fisubs
cwtl
inc
adc
add
inc
pop
cmc
stos
bound
mov
jbe
sbb
mov
jo
xchg
add
js
into
fmull
sahf
movl
adc
data16
push
js
cld
adc
xchg
and
outsb
into
mov
xchg
addl
std
in
out
cmp
jnp
rorl
cmp
mov
repz
addl
test
or
add
and
ret
mov
pop
xor
jg
mov
xchg
sub
out
mov
or
leave
pop
ret
or
enter
shr
into
pop
adc
sub
jns
fwait
and
aad
data16
hlt
xor
inc
xor
movsb
and
leave
mov
clc
pop
push
lret
push
add
sub
xchg
vmwrite
xor
mov
add
fnstenv
pop
aad
cmp
loope
inc
add
fnstcw
xchg
dec
or
sub
fnstcw
leave
out
movsb
xor
fisubs
push
xchg
inc
mov
addr16
dec
dec
inc
int
sarl
dec
sub
xchg
or
shlb
in
lahf
pop
sbb
out
push
and
push
push
push
mov
mov
mov
movsb
ljmp
mov
leave
popa
imul
popf
sbb
stos
mov
add
addl
xchg
add
xchg
enter
cmpsl
jb
push
push
inc
mov
lret
cmp
jne
add
mov
dec
leave
dec
add
addb
pop
insl
adc
cmc
mov
and
jbe
test
lock
or
imul
ret
add
lret
fildl
add
sub
mov
add
pop
lds
in
xchg
and
rorl
scas
jne
push
fs
sbb
mov
pop
addl
test
sti
nop
jp
andb
decl
addb
sti
jbe
js
push
add
or
jp
sub
.byte
push
