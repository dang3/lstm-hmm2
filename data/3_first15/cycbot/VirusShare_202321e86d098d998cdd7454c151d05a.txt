add
add
push
xor
add
adc
xor
add
and
pusha
ss
and
add
xor
xor
xor
xor
add
pusha
push
and
add
push
adc
inc
jbe
jbe
inc
add
je
adc
je
add
xor
xor
xor
bound
and
and
push
jo
add
add
xor
push
pusha
inc
add
add
and
push
add
je
jbe
fs
xor
inc
jo
pusha
pusha
add
add
fs
add
jb
xor
add
xor
add
inc
adc
and
inc
add
add
inc
data16
es
and
and
push
xor
xor
xor
add
inc
push
xor
add
adc
and
inc
adc
jb
xor
add
inc
jo
inc
jbe
xor
push
add
and
add
inc
data16
push
push
add
je
es
xor
and
es
je
inc
adc
adc
and
xor
adc
push
xor
inc
bound
fs
jo
jo
jo
ss
xor
add
push
xor
pusha
xor
add
je
pusha
adc
add
je
jo
inc
add
and
xor
xor
xor
inc
add
fs
add
inc
xor
adc
push
push
fs
add
inc
add
inc
inc
adc
adc
inc
inc
and
push
inc
xor
adc
and
jbe
push
xor
push
adc
xor
adc
add
push
inc
push
inc
pusha
pusha
inc
xor
pusha
inc
je
add
adc
xor
add
pusha
xor
add
fs
adc
jbe
jo
add
add
push
xor
je
inc
fs
adc
fs
add
jo
adc
je
inc
add
and
adc
add
push
inc
adc
inc
xor
xor
jo
add
push
adc
inc
add
adc
add
data16
xor
add
pusha
inc
inc
add
add
inc
push
xor
inc
add
inc
inc
inc
push
add
and
inc
and
jo
inc
and
push
add
xor
push
push
je
jbe
adc
inc
fs
pusha
add
adc
fs
push
inc
xor
adc
add
and
push
pusha
push
add
add
jo
add
push
push
es
jb
and
xor
add
add
and
xor
and
and
inc
xor
add
je
and
add
inc
adc
pusha
add
ss
and
and
add
xor
push
je
adc
and
adc
add
and
xor
add
push
push
push
pusha
inc
add
push
adc
adc
add
push
push
xor
push
inc
jo
je
inc
and
add
xor
push
xor
add
jo
push
xor
inc
add
push
xor
je
add
and
inc
push
add
and
jo
je
inc
jb
xor
pusha
inc
add
and
inc
inc
inc
inc
push
xor
push
add
add
push
inc
inc
push
adc
add
and
add
jb
add
inc
add
adc
add
and
add
add
inc
xor
inc
and
add
and
adc
inc
push
pusha
inc
add
jo
xor
jb
adc
inc
jo
pusha
jo
inc
inc
add
add
data16
adc
inc
adc
xor
inc
push
inc
add
inc
and
add
push
pusha
push
push
inc
add
xor
inc
push
inc
push
add
bound
inc
push
add
and
inc
and
push
add
push
adc
pushaw
ss
pusha
push
add
push
xor
add
add
inc
xor
add
add
and
inc
inc
add
push
pusha
xor
bound
adc
inc
inc
je
and
pusha
inc
je
add
adc
jb
adc
bound
add
jo
add
fs
add
push
add
add
and
adc
push
adc
pusha
push
add
fs
inc
adc
fs
xor
push
add
pushaw
and
push
add
je
push
add
xor
add
and
je
push
pusha
jbe
add
push
xor
adc
add
xor
jo
data16
inc
inc
adc
add
pushaw
xor
inc
adc
add
inc
and
add
push
push
je
push
add
jo
jo
pusha
inc
add
push
add
add
and
es
inc
adc
inc
add
push
inc
adc
inc
push
xor
add
push
add
fs
pusha
push
inc
adc
bound
pusha
and
add
inc
and
and
je
add
xor
and
push
add
je
push
xor
inc
je
inc
inc
push
push
add
inc
add
xor
adc
add
inc
add
adc
pusha
and
add
and
add
inc
je
xor
push
add
adc
and
add
inc
push
adc
inc
push
pusha
pusha
xor
push
add
fs
adc
push
inc
pusha
xor
push
add
inc
add
and
adc
xor
push
push
jb
inc
inc
push
add
je
and
xor
inc
adc
add
add
xor
pusha
pusha
adc
push
add
pusha
push
push
adc
adc
xor
je
add
and
add
xor
inc
add
inc
and
push
adc
add
je
add
inc
add
adc
and
jb
es
inc
xor
inc
push
push
inc
inc
jb
push
adc
adc
and
adc
add
and
and
add
xor
push
inc
inc
add
adc
adc
add
push
and
inc
add
inc
push
xor
inc
xor
es
bound
add
jb
bound
add
pusha
add
xor
add
push
and
add
adc
xor
xor
push
add
and
add
inc
add
xor
add
and
push
adc
adc
push
adc
xor
adc
inc
fs
and
push
push
push
pusha
and
adc
push
xor
push
jb
add
push
xor
fs
add
adc
and
pusha
pusha
inc
and
add
add
jbe
push
add
add
data16
and
add
jo
push
xor
push
push
add
add
push
push
push
xor
pusha
bound
and
adc
push
jbe
es
push
inc
xor
jb
pusha
fs
adc
push
add
adc
data16
pusha
xor
je
inc
add
inc
push
push
jo
add
adc
push
adc
inc
and
inc
add
xor
es
ss
adc
push
inc
push
and
inc
xor
adc
and
inc
xor
bound
adc
xor
add
adc
jo
adc
adc
and
xor
add
and
pusha
jbe
xor
push
adc
add
add
adc
push
pusha
inc
inc
ss
jo
xor
push
push
push
and
xor
push
push
inc
inc
adc
push
je
jo
xor
add
pusha
adc
add
adc
jbe
add
add
and
add
jo
jo
push
inc
add
adc
add
jo
adc
and
inc
add
add
xor
and
push
push
and
xor
adc
es
adc
jb
pusha
push
push
pusha
xor
add
pusha
je
jo
adc
add
fs
je
inc
xor
and
and
add
inc
push
jo
xor
add
xor
adc
push
inc
adc
adc
add
inc
pusha
push
and
add
jb
adc
add
adc
pusha
push
xor
je
jbe
push
adc
add
jo
je
add
and
adc
jb
push
push
data16
add
add
inc
inc
inc
inc
pusha
inc
and
add
add
and
inc
push
fs
xor
and
jb
xor
push
xor
inc
data16
and
push
fs
push
push
adc
je
push
fs
add
push
add
inc
add
fs
xor
adc
xor
jbe
add
adc
and
pusha
add
and
pusha
ss
adc
push
add
inc
and
and
jo
add
adc
push
and
adc
push
push
add
adc
add
bound
jo
and
add
and
data16
add
inc
push
data16
add
pusha
and
add
bound
bound
add
push
inc
and
adc
xor
and
adc
xor
inc
adc
inc
push
pusha
jb
push
je
adc
push
add
add
jo
inc
push
add
add
push
add
add
inc
inc
push
inc
add
and
push
and
je
push
jo
pusha
and
inc
xor
add
add
push
push
je
inc
adc
push
es
add
add
push
add
pusha
inc
xor
data16
add
inc
and
inc
inc
push
adc
es
jo
push
push
add
xor
jo
add
push
add
inc
inc
push
xor
and
ss
push
xor
add
xor
inc
fs
adc
push
and
pusha
add
inc
jo
and
adc
adc
xor
add
jo
je
jb
jb
push
inc
jo
adc
inc
and
bound
push
xor
xor
push
add
pusha
and
inc
xor
push
inc
je
and
jo
push
push
inc
add
inc
xor
and
adc
and
adc
push
jo
inc
and
add
inc
inc
and
bound
es
and
inc
jo
add
pusha
push
adc
add
add
jo
pusha
inc
add
add
xor
add
inc
xor
push
ss
jbe
data16
pusha
pusha
fs
add
adc
pusha
jbe
data16
push
and
add
inc
adc
add
push
ss
pusha
and
pusha
adc
and
push
inc
inc
push
es
add
xor
push
adc
xor
adc
inc
pusha
and
inc
inc
push
pusha
add
je
inc
ss
je
adc
push
adc
inc
add
and
adc
inc
push
and
adc
add
add
push
inc
bound
adc
adc
add
push
inc
jo
pusha
inc
jb
push
add
push
add
add
xor
add
inc
data16
inc
add
pusha
add
add
add
xor
add
push
push
and
inc
inc
push
pusha
xor
inc
and
adc
and
jb
data16
je
and
push
push
jo
bound
jo
pusha
push
and
and
adc
fs
inc
data16
add
add
push
and
inc
xor
je
push
and
push
add
inc
xor
je
add
adc
and
add
xor
pusha
xor
add
jo
adc
and
je
pusha
inc
inc
add
jb
and
inc
add
and
inc
add
bound
push
je
push
inc
je
add
inc
pusha
adc
ss
jo
jb
je
ss
and
add
pusha
bound
and
je
ss
inc
adc
and
adc
and
adc
add
adc
inc
pusha
and
and
inc
adc
jbe
push
adc
je
inc
pusha
je
xor
inc
add
jo
push
add
jbe
inc
add
xor
add
push
inc
add
je
and
pusha
inc
add
je
pusha
adc
je
and
and
add
and
add
push
push
add
pusha
jo
je
add
inc
pusha
inc
adc
add
pusha
adc
and
xor
inc
jo
pusha
push
add
adc
adc
jo
inc
inc
and
pusha
and
push
adc
adc
bound
add
and
push
jo
inc
push
jo
data16
add
and
pusha
fs
add
and
jo
add
adc
ss
add
fs
fs
jb
push
and
inc
xor
add
push
adc
add
adc
add
inc
push
and
add
add
inc
adc
inc
push
inc
adc
xor
add
ss
adc
add
and
jo
push
add
push
add
push
inc
add
data16
pusha
add
xor
add
push
jo
push
push
and
add
pusha
adc
bound
add
add
push
inc
and
jb
add
es
push
add
inc
push
push
add
push
add
inc
add
inc
push
inc
and
xor
xor
inc
add
inc
adc
jbe
je
xor
push
jb
push
add
jb
adc
adc
and
inc
jb
add
jbe
push
and
add
push
adc
adc
add
inc
pusha
jo
je
es
jo
adc
add
inc
and
je
adc
xor
add
ss
jo
push
xor
inc
inc
inc
add
pusha
add
pusha
push
jo
jb
and
add
adc
jb
push
add
je
inc
adc
add
push
adc
data16
add
fs
adc
adc
push
xor
xor
pusha
jo
push
es
inc
add
and
push
data16
adc
push
ss
xor
and
add
je
es
xor
inc
xor
je
inc
fs
jbe
pusha
add
push
add
inc
and
ss
xor
ss
inc
inc
inc
and
and
inc
and
add
add
adc
inc
inc
push
add
push
jbe
pusha
add
and
xor
push
add
add
je
push
add
es
inc
fs
xor
es
add
and
inc
and
push
xor
pusha
push
fs
add
ss
inc
xor
pusha
inc
adc
adc
xor
adc
inc
adc
inc
and
inc
fs
add
jo
adc
add
pusha
adc
add
adc
xor
push
add
and
and
push
add
xor
push
adc
inc
and
adc
push
add
adc
xor
add
add
xor
pusha
add
add
and
bound
add
inc
adc
inc
add
data16
xor
xor
inc
xor
pusha
inc
inc
jo
add
je
xor
es
pusha
inc
and
xor
add
push
add
inc
add
and
adc
add
add
add
push
inc
push
pusha
data16
inc
adc
ss
add
xor
push
push
jb
data16
push
jo
pusha
inc
and
add
push
push
push
push
and
fs
jbe
adc
add
inc
add
push
xor
xor
jo
je
push
add
xor
xor
add
inc
push
pusha
push
add
adc
xor
add
adc
push
inc
pusha
and
inc
inc
fs
jo
inc
push
and
xor
push
add
inc
adc
inc
inc
add
je
and
and
inc
inc
and
data16
push
jb
es
jb
jbe
inc
inc
xor
push
je
xor
inc
je
pusha
add
jo
add
and
pusha
xor
je
add
push
jb
push
add
and
inc
add
xor
add
add
inc
pusha
inc
jbe
add
data16
data16
push
push
adc
je
fs
and
inc
je
push
add
add
inc
fs
and
adc
add
xor
inc
xor
add
add
add
inc
add
xor
inc
and
and
adc
adc
jo
xor
add
adc
jo
je
add
xor
fs
inc
and
inc
add
je
push
jo
and
jb
xor
xor
push
and
push
inc
xor
inc
push
add
adc
and
fs
add
add
adc
inc
push
inc
je
inc
pusha
inc
add
add
adc
push
add
xor
adc
add
xor
add
and
inc
inc
push
add
pusha
xor
pusha
adc
je
adc
add
add
fs
fs
inc
adc
adc
inc
adc
add
inc
adc
fs
inc
je
and
inc
add
and
xor
and
inc
add
xor
push
jb
data16
and
and
add
add
adc
je
jb
add
pusha
and
inc
data16
adc
push
add
push
jo
push
push
fs
inc
adc
xor
push
add
add
inc
pusha
xor
adc
xor
push
and
add
push
add
and
inc
push
inc
and
and
push
inc
push
push
push
adc
xor
xor
and
add
adc
xor
jb
data16
pusha
inc
and
add
push
xor
xor
inc
xor
add
add
adc
inc
add
push
and
jo
and
xor
adc
and
inc
and
je
add
and
push
add
jb
bound
add
inc
inc
je
add
pusha
push
je
and
push
jo
jo
push
add
adc
push
add
push
add
xor
push
inc
xor
push
jb
push
add
pusha
and
push
adc
inc
data16
xor
inc
add
and
adc
adc
inc
and
adc
bound
adc
add
and
adc
add
adc
add
push
adc
add
add
inc
add
add
jo
add
add
and
add
add
es
adc
inc
inc
and
jo
add
add
xor
es
push
add
xor
adc
add
adc
push
adc
jo
jbe
and
add
push
and
fs
push
je
inc
pusha
push
adc
adc
adc
inc
add
xor
inc
je
xor
xor
inc
pusha
add
inc
and
xor
add
es
bound
add
and
jo
add
xor
add
add
push
add
inc
add
add
inc
add
je
jo
xor
xor
push
pusha
inc
xor
ss
add
and
inc
xor
inc
push
je
add
inc
add
inc
adc
push
xor
add
and
push
xor
add
adc
add
and
xor
inc
add
adc
adc
fs
adc
push
adc
and
add
inc
pusha
xor
push
add
and
add
and
jo
push
bound
add
push
jo
add
je
and
push
inc
and
add
push
add
inc
jo
adc
add
je
inc
add
inc
add
je
xor
adc
jb
jb
xor
adc
xor
adc
and
data16
adc
inc
add
push
jo
inc
push
inc
adc
jo
xor
push
push
xor
and
je
pusha
and
and
add
inc
inc
push
inc
and
push
fs
jo
inc
push
inc
inc
xor
xor
push
push
inc
inc
jbe
inc
add
add
add
add
jbe
jbe
push
add
data16
xor
add
push
push
xor
xor
adc
adc
and
inc
push
push
je
xor
push
add
inc
pusha
inc
adc
inc
xor
and
fs
add
inc
inc
and
and
adc
pusha
jbe
add
push
push
pusha
pusha
inc
add
push
xor
and
push
push
add
xor
adc
adc
inc
push
pusha
push
pusha
xor
inc
add
pusha
inc
adc
add
push
xor
inc
add
inc
adc
add
xor
push
push
add
jo
adc
add
inc
inc
inc
adc
add
xor
xor
xor
je
push
inc
je
add
inc
inc
adc
add
jo
fs
add
je
push
adc
xor
push
pusha
fs
and
add
jbe
ss
and
push
inc
adc
and
adc
push
push
and
add
xor
adc
add
adc
add
push
inc
add
and
add
pusha
jbe
adc
pushaw
and
bound
adc
inc
adc
and
adc
add
push
pusha
push
adc
jo
inc
and
adc
xor
pusha
inc
fs
xor
and
adc
add
inc
pusha
xor
jo
data16
xor
and
je
jbe
jbe
jo
xor
xor
add
add
pusha
push
and
add
pusha
inc
push
adc
push
add
push
push
je
add
xor
xor
add
adc
add
and
push
add
push
add
add
inc
pusha
jo
push
adc
push
inc
add
add
push
add
jbe
push
inc
adc
add
add
add
adc
data16
push
push
and
add
push
xor
add
add
bound
add
add
xor
jbe
add
jbe
adc
adc
inc
add
bound
add
inc
bound
push
and
add
adc
pusha
pusha
pusha
push
add
pusha
jb
inc
jo
add
push
add
and
add
and
add
push
push
xor
add
adc
je
pusha
add
and
pusha
add
inc
and
and
jo
add
and
xor
jo
data16
push
add
je
adc
push
add
inc
xor
add
jo
je
inc
and
data16
add
je
pusha
push
inc
add
and
push
push
push
add
inc
pusha
fs
pusha
and
add
adc
inc
and
fs
inc
pusha
xor
add
and
xor
xor
add
push
pusha
add
data16
add
fs
and
inc
push
pusha
pusha
adc
add
push
push
adc
add
push
pusha
jb
and
xor
and
add
fs
push
adc
jb
data16
jo
add
add
jb
and
xor
add
add
jo
and
push
ss
add
inc
add
add
adc
xor
and
add
xor
and
add
add
add
xor
xor
and
pusha
jbe
xor
and
and
xor
push
add
inc
adc
add
and
add
adc
bound
jo
inc
push
and
xor
and
add
push
push
add
jb
jb
push
and
jo
add
jb
pusha
adc
inc
jbe
push
xor
push
adc
jbe
jbe
add
inc
ss
xor
add
push
je
push
jb
jb
add
xor
add
bound
and
jo
pusha
push
jo
push
and
add
add
xor
fs
and
xor
xor
add
pusha
adc
add
and
push
inc
xor
add
add
xor
inc
add
je
ss
add
adc
push
inc
inc
adc
pusha
pusha
xor
add
add
es
add
pusha
and
inc
je
add
es
adc
and
inc
adc
push
add
and
add
inc
jbe
xor
adc
jb
and
pusha
jo
add
inc
add
and
je
jb
and
push
xor
push
je
adc
adc
add
fs
jb
inc
inc
xor
adc
xor
xor
jbe
push
push
ss
bound
jo
pusha
xor
adc
add
push
xor
adc
push
pusha
data16
and
pusha
inc
push
add
pusha
push
pusha
jbe
push
add
add
adc
adc
xor
add
push
xor
adc
inc
and
add
xor
push
add
push
adc
add
push
inc
push
xor
jb
push
add
push
inc
pusha
jo
push
add
je
ss
add
fs
xor
adc
add
add
adc
add
jo
inc
and
inc
add
pusha
xor
push
add
add
adc
add
add
inc
fs
push
push
push
add
and
jo
add
and
adc
add
xor
inc
adc
and
add
and
inc
xor
push
push
add
inc
push
and
adc
add
push
inc
and
add
adc
inc
je
push
push
inc
push
inc
add
xor
pusha
xor
add
add
jb
add
xor
inc
bound
push
and
and
push
jb
jbe
inc
push
and
add
pusha
xor
add
inc
push
xor
adc
inc
push
push
adc
inc
and
fs
jo
add
jb
add
add
and
xor
and
add
jbe
inc
push
jo
and
add
add
and
xor
add
xor
push
xor
inc
push
push
inc
xor
inc
jb
es
and
inc
add
add
adc
push
add
push
dec
dec
adc
xchg
leave
mov
add
add
fcoms
xorb
lds
icebp
popa
pushf
xor
jne
scas
xor
jo
push
lret
add
add
rorb
inc
add
add
in
sbb
mov
push
not
and
inc
aaa
push
sub
inc
dec
xor
out
out
fwait
inc
jp
add
adc
fisttpl
enter
mov
icebp
inc
mov
aas
cmc
xchg
cmp
jbe
add
add
jecxz
stc
ljmp
sub
add
add
mov
add
mov
mov
and
jbe
dec
insb
mov
sbb
popa
push
mov
lods
jb
pop
inc
lods
inc
inc
pusha
add
add
insb
mov
aaa
and
sbb
adc
cmp
and
cs
jle
adc
bound
test
sub
mov
jg
pxor
cmpsb
sub
mov
data16
jae
test
daa
loop
add
add
dec
iret
out
stc
insl
xchg
scas
and
lock
adc
aad
fnstenv
insl
mov
hlt
pushf
cltd
inc
mov
out
push
pop
fisubl
add
add
cs
xchg
inc
jl
sbbl
push
mov
add
add
shrb
add
in
cmp
fadd
or
add
add
jb
jg
mov
mov
sbb
lret
or
add
cmpsl
call
pushf
mov
push
cli
std
cmp
jecxz
mov
add
add
lahf
stc
out
dec
jg
xlat
in
out
pop
cmp
cmc
sub
mov
sub
pop
insb
add
add
jp
out
pop
enter
mov
rorl
jg
xchg
adc
in
aam
add
inc
mov
push
and
mov
inc
jns
in
popa
popa
rcl
jmp
notl
sarb
mov
sbb
lock
mov
fnsave
mov
sub
add
add
sub
fcompl
xlat
sbb
and
xorl
loop
mov
decl
enter
dec
xchg
or
mov
dec
cmp
aaa
jmp
ret
push
jo
pop
out
rcr
sub
add
add
int
xor
and
add
add
outsl
call
add
xor
push
xchg
dec
jo
push
jmp
inc
mov
fcompl
cmp
inc
mov
pop
cmp
add
mov
rclb
stos
xchg
pop
xchg
xlat
sbb
inc
mov
mov
add
out
in
mov
outsl
in
add
and
mov
mov
push
lret
cli
shlb
add
orl
add
fnstcw
aad
dec
or
jnp
push
dec
lret
adc
inc
mov
in
xchg
ficoml
pushf
cmp
addr16
sti
rcr
insb
mov
das
dec
add
add
add
add
add
add
dec
xor
icebp
ss
mov
mov
js
jne
pop
add
add
add
add
test
and
sub
pop
mov
jb
aaa
xchg
dec
inc
add
add
sub
in
xlat
sarl
add
out
sub
add
sbb
sub
lahf
pop
or
lcall
test
das
cmp
movsl
xchg
mov
sti
push
test
xorl
sub
add
add
dec
pop
or
sbb
cmpsb
mov
mov
testb
jns
cld
jno
dec
add
add
addr16
cld
sub
xor
add
add
cmp
sub
push
fs
cmp
mov
popa
test
js
cmp
lock
leave
jmp
xchg
loopne
add
add
pinsrw
outsb
sub
test
test
cltd
pop
adc
add
mov
je
jno
mov
sahf
cwtl
into
lret
mov
enter
pop
test
into
enter
adc
adc
xor
in
rcll
xchg
sub
aaa
sbb
cmp
out
stos
push
cltd
lret
jo
mov
leave
or
sub
add
popf
add
jl
arpl
int3
jecxz
mov
shr
insl
add
pop
push
sbb
mov
inc
mov
push
pop
repz
in
add
add
add
cmp
or
or
add
add
add
sbb
in
rcl
scas
pop
jae
sbb
mov
add
add
sbb
add
cmp
les
adc
mov
movsl
iret
add
add
and
or
stos
mov
add
pushf
push
add
add
add
and
add
add
imul
mov
jae
mov
inc
and
push
mov
add
add
ret
nop
clc
adc
xchg
lock
push
leave
out
inc
mov
pop
jae
jo
xchg
ljmp
inc
mov
inc
cmp
cltd
fistpll
test
push
dec
and
in
roll
add
add
dec
pop
imul
xor
sbb
dec
add
add
and
add
add
mov
outsl
cmpsb
jo
repz
add
hlt
stos
lock
repnz
pop
jecxz
jnp
repz
dec
aam
sbb
cmp
int3
mov
mov
fwait
jmp
cs
mov
popf
and
add
add
popf
pop
mov
sub
mov
mov
outsb
cwtl
push
bound
or
cmc
xor
push
pop
jbe
shlb
outsl
loope
or
insl
dec
add
add
idivl
inc
rcr
int3
ljmp
sub
add
add
push
mov
mov
ret
jmp
sbb
mov
cmovp
lret
or
add
add
jecxz,pn
bound
add
add
sub
add
add
gs
pop
add
add
add
mov
add
xchg
cmp
orl
arpl
lds
sbb
repz
push
leave
and
add
add
and
shlb
pusha
mov
dec
add
add
add
into
or
cmp
fcomps
add
sbb
push
in
or
and
add
add
jle
lcall
add
sub
test
add
push
out
pop
stc
push
adcb
inc
xorl
mov
imul
test
pop
xchg
add
add
out
mov
rcr
ds
push
fcmovnbe
fcoml
mov
movsl
fisttpll
mulw
mov
sbbb
add
add
jmp
add
add
add
call
xor
pop
push
pop
cmp
icebp
push
hlt
ljmp
js
adc
ss
xchg
das
clc
test
add
add
movsl
push
lret
popa
sub
mov
mov
pop
mov
pop
lds
aaa
add
add
add
dec
inc
andl
dec
push
ret
icebp
mov
ret
mov
cmp
mov
dec
test
mov
lods
or
rorb
mov
cwtl
inc
jmp
fxch
dec
dec
int3
js
cmp
jp
add
add
clc
rclb
aam
adc
mov
cmp
in
or
add
add
mov
iret
mov
lcall
mov
pop
ja
xor
insb
mov
shrl
add
add
pop
or
add
out
pop
dec
xor
add
add
add
mov
inc
add
add
xchg
clc
rorb
pop
fnstsw
cmp
mov
push
mov
add
mov
xchg
cltd
cld
sbb
repz
mov
stc
jl
fisubs
stos
inc
clc
imul
popa
fcoml
sbb
adc
lret
mov
ss
in
sub
push
dec
fldenv
out
mov
sbb
jnp
xchg
push
fisttpll
add
add
adc
sar
xlat
push
pushf
push
cmpsb
out
cmp
add
pop
inc
mov
push
or
add
add
add
imul
insl
pusha
add
add
jl
mov
add
clc
lods
mov
pop
and
add
add
sbb
add
add
xacquire
pop
xchg
jns
mov
loope
push
xchg
xor
add
aad
push
outsb
bound
pop
push
js
mov
inc
shrb
add
lods
fstpl
cmp
ret
dec
add
add
fidivrs
jno
add
add
dec
mov
orl
daa
dec
mov
jae
mov
scas
sarl
and
add
add
add
push
stos
pop
push
out
lret
es
out
inc
add
add
pop
cmpb
repz
not
adc
stc
push
lret
rcrl
cmpsl
clc
xchg
sub
add
add
add
insl
enter
loop
mov
add
dec
mov
add
outsl
cmp
cmpsb
pop
xchg
inc
fwait
and
add
add
sahf
rorl
ljmp
add
mov
inc
dec
push
aaa
testb
cmc
adc
or
or
sahf
jecxz
or
lds
movsb
jo
dec
int
jecxz
jae
jl
dec
mov
notb
cmp
popf
push
ja
repnz
fisttpll
inc
in
shrb
pop
mov
mov
roll
rcll
ret
into
mov
mov
mov
outsl
jno
ret
mov
mov
mov
aad
dec
mov
aaa
movsl
or
mov
comiss
movsl
inc
cld
scas
cli
sbb
in
div
jge
stos
aaa
loope
and
cwtl
mov
inc
mov
xchg
negb
dec
add
add
rol
dec
or
adc
add
add
cmp
leave
sti
repz
adc
add
add
add
mov
orb
inc
ret
push
out
leave
stc
sub
add
call
pop
xchg
lret
xchg
pop
in
shrb
out
mov
and
xchg
cmpsb
mov
ret
and
xor
and
pop
push
ja
jbe
jne
aaa
jl
out
push
xchg
nop
cmpsl
out
or
leave
mov
add
add
inc
add
add
ficompl
or
add
add
push
shlb
jne
mov
sub
and
leave
inc
jae
mov
mov
stos
adc
ds
add
add
wrmsr
sub
or
add
mov
incl
clc
dec
mov
shll
xor
leave
popa
int
es
mov
jne
cmp
aas
mov
jmp
fcom
in
stc
dec
add
add
addr16
mov
add
add
sbbb
add
jne
aam
push
out
xchg
lret
push
bound
adcl
adc
cmp
daa
jb
cwtl
xlat
clc
das
pop
jge
cmp
aaa
call
or
mov
je
push
ficompl
lret
jecxz
mov
dec
add
add
jo
mov
pop
ja
add
add
mov
pop
aam
cmp
data16
mov
mov
into
add
add
add
mov
inc
out
fadds
frndint
out
out
dec
divb
adc
cli
mov
jae
xchg
cmp
cmp
cmp
test
push
in
test
xor
cmpsl
lods
imul
fs
jge
mov
cwtl
mov
cmp
mov
add
add
adc
inc
lods
inc
mov
data16
shll
dec
inc
jle
scas
dec
subl
add
add
xchg
mov
mov
mov
mov
jmp
pop
push
ds
add
add
sub
add
mov
add
add
push
dec
mov
add
add
mov
bound
jmp
aas
jbe
call
add
fnstenv
add
pop
js
ror
xchg
dec
cmp
mov
inc
add
add
sbb
daa
fnstsw
aad
ja
cmp
fwait
jmp
add
es
dec
mov
and
pop
into
add
xor
sbb
xor
mov
movsl
test
ret
dec
or
sbb
test
dec
mov
pop
leave
enter
shll
std
pop
xorb
subb
shll
add
add
push
xchg
decb
pop
xor
fcmovnbe
testb
cmp
clc
loopne
scas
push
stos
inc
mov
pop
adc
int
add
add
or
mov
inc
gs
add
push
lret
fbld
sub
mov
rolb
mov
sub
inc
adcl
out
dec
sbb
ror
jg
cmp
xchg
jmp
sbb
sahf
push
xchg
dec
sbb
shlb
push
or
add
add
hlt
jg
xchg
jle
add
pop
ret
out
add
add
movsb
mov
aam
lods
inc
lfs
sub
add
add
insb
add
add
scas
mov
pop
mov
push
cmp
xchg
add
xorl
xchg
push
out
pop
sub
out
mov
xchg
xor
adc
add
add
jle
mov
mov
stc
xchg
roll
mov
or
movl
cmp
cmpsl
pop
cld
xor
in
add
sti
popa
dec
add
add
xchg
sbb
xchg
stc
loope
pop
adc
test
sbb
sub
add
add
mov
in
dec
je
add
add
push
push
lea
cld
sub
add
add
xor
push
jmp
mov
lret
ja
cmp
lahf
lods
clc
call
add
xlat
or
sub
mov
inc
sbbb
add
add
push
xchg
rcr
sub
add
add
in
push
loop
jb
ss
insl
jmp
fidivl
movsl
mov
jnp
ja
sub
add
add
adcl
adc
add
add
add
add
add
add
add
jg
add
add
add
loope
and
test
push
xor
and
or
xchg
xor
ja
out
cltd
inc
shll
mov
cmp
xor
ret
bound
aam
shrb
push
bound
outsb
stos
and
jb
hlt
sti
into
imul
mov
inc
add
add
je
sbb
aad
sbb
mov
repnz
fmul
push
jp
sti
xor
push
pop
out
xor
lcall
push
and
jnp
cmc
fcmovb
lahf
fwait
mov
pop
inc
ret
add
add
mov
loope
icebp
and
add
cli
cld
data16
jno
shlb
popf
fidivrs
add
add
sti
stos
outsb
inc
nop
pop
and
add
add
xchg
push
push
enter
shrl
push
mov
lods
int
int
in
jns
fs
or
add
add
test
das
xor
lods
outsl
scas
mov
push
fistpl
push
mov
fnstsw
mov
imul
pop
push
lcall
mov
jecxz
pop
mov
imul
push
or
pusha
mov
mov
sub
add
add
aas
xlat
sub
mov
mov
add
add
dec
add
add
ds
in
aam
push
andb
out
mov
mov
add
add
jl
add
inc
ror
and
loope
idivl
add
xchg
add
inc
xchg
xchg
jae
adc
mov
jmp
mov
inc
mov
cmpsb
cmp
mov
enter
inc
in
push
jbe
jno
fcmovne
pop
add
add
lock
idivl
mov
cmpsb
imul
adc
ret
cmpb
outsl
lret
mov
pop
push
lahf
pusha
add
add
fildl
xchg
and
add
xor
ret
jbe
addr16
out
cmpsb
mov
fistpll
fstpt
jg
xorb
je
push
push
scas
addr16
loopne
inc
test
ret
popa
jl
jp
hlt
nop
dec
mov
or
add
add
or
and
pop
roll
mov
add
jb
sbb
pusha
add
add
xchg
mov
fidivl
aad
leave
inc
out
mov
mov
xor
jp
push
repz
sar
mov
xchg
xchg
cmpb
mov
icebp
xchg
jmp
pop
pop
movsl
lds
push
pop
cli
inc
add
add
add
or
jge
shrl
add
add
adc
xchg
fwait
dec
loopne
fs
mov
jp
dec
mov
dec
mov
mov
cmp
es
rolb
pop
mov
lcall
xchg
loopne
leave
sub
add
cmpsb
test
aam
loope
fimull
flds
in
xchg
fisubrs
sub
sbb
int
inc
int
ret
xchg
push
pusha
add
add
stc
and
jecxz
das
or
sub
add
add
inc
fisubs
add
add
out
add
push
add
add
add
je
and
and
add
add
imul
stc
pop
jle
cld
in
and
add
add
pop
aas
mov
aas
sub
add
add
mov
xchg
aas
xor
inc
repnz
sub
add
add
fsubl
add
add
cwtl
fs
xchg
in
pop
lahf
out
fsubrs
mov
dec
neg
lretw
sub
add
push
dec
xor
add
add
imul
les
add
rol
jnp
test
mov
add
add
fists
mov
or
dec
loope
adc
addl
lahf
sub
xchg
mov
sub
push
push
xchg
xlat
jg
cs
aas
movb
add
add
pop
scas
sub
add
add
inc
jno
xchg
mov
iret
test
add
add
inc
out
repz
sbb
and
test
sub
add
add
jne
xor
popa
jne
xor
xor
jnp
add
add
cs
dec
mov
dec
repz
icebp
cmpsb
fs
in
gs
dec
ljmp
cltd
push
sbb
in
add
add
psubq
jmp
je
xchg
repz
or
dec
add
add
insb
mov
push
dec
std
xchg
add
add
paddsb
out
sbb
mov
sbb
mov
push
in
notb
pop
adc
push
pop
push
or
add
add
add
add
adc
sub
dec
iret
popf
test
dec
jbe
divb
add
add
mov
aam
adc
arpl
push
pop
xchg
mov
add
add
arpl
or
icebp
fs
add
add
and
add
add
xlat
ret
test
test
lret
sub
xchg
mov
adc
and
add
add
push
and
dec
and
jl
mov
fs
dec
add
add
shrl
sub
pop
or
data16
dec
orb
arpl
dec
mov
and
add
add
jae
xor
add
add
mov
inc
mov
js
xchg
arpl
pop
cmp
jo
pop
test
call
jp
clc
jl
loopne
mov
jb
add
int3
adc
inc
lret
dec
jg
aas
dec
add
add
xchg
dec
xchg
pop
out
push
aam
cli
mov
or
dec
mov
cmp
mov
push
insb
mov
sahf
cmp
add
sub
in
mull
add
add
xchg
sbb
aaa
test
add
push
orl
mov
add
add
lret
inc
les
xor
dec
push
dec
cmp
sahf
out
pop
pop
repnz
int
lods
mov
add
add
adc
fnstcw
jmp
ds
add
add
add
fnsave
popf
rclb
add
dec
test
icebp
pop
push
pop
test
popa
or
pop
mov
lret
stc
jbe
sub
add
add
movsb
movntq
into
out
cmpsl
xchg
xchg
cli
lods
add
add
add
add
inc
add
add
jnp
rorb
add
mov
mov
lahf
jl
in
sub
repz
mov
mov
push
aam
leave
pop
scas
lret
dec
mov
loope
or
mov
add
mov
test
push
and
jne
cwtl
mov
jbe
adc
jno
pop
test
inc
add
add
jg
mov
mov
mov
adc
add
add
leave
jg
adc
jecxz
std
shlb
ret
lahf
ret
and
sub
add
add
cmp
add
cmp
mulb
loop
orb
std
bound
or
jo
roll
sub
lds
mov
movsl
lret
stc
sarb
movsl
jl
rcrl
flds
add
testb
ret
fidivs
std
push
jnp
adcb
ss
int3
je
das
inc
test
je
or
dec
js
testl
daa
popa
or
dec
jg
movsb
adc
mov
sub
aaa
lret
pop
and
add
add
pushf
sti
ret
cmpb
test
add
cmpsl
shlb
adc
pop
lods
push
inc
inc
in
add
add
cld
sub
sbb
push
and
stc
decl
add
mov
jne
pop
push
dec
push
add
jbe
jbe
shrl
jl
notl
add
push
pusha
add
add
cwtl
xchg
mov
int3
xchg
pusha
mov
gs
add
jne
pop
push
stos
pop
fsubl
add
xor
cmp
insb
add
add
sub
add
add
js
int
dec
insb
mov
insl
dec
jg
mov
adc
xor
cwtl
leave
and
addl
sub
add
add
push
std
sbbl
add
pusha
mov
and
enter
inc
cmp
xchg
inc
outsl
jbe
inc
sub
add
add
ret
cmp
es
pop
push
and
add
add
push
in
jl
jbe
pop
push
mov
jp
mov
cmp
and
add
add
int
sub
test
data16
fsubrs
add
add
jne
cmc
mov
es
call
in
sub
call
cmp
jne
lea
push
push
push
mov
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
je
push
pop
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
jne
push
bnd
cs
inc
xchg
add
add
jle
into
cmp
fdivrp
mov
and
add
add
add
add
pop
pop
dec
mov
out
stos
jnp
jns
add
add
dec
add
add
movsb
out
shlb
dec
ss
outsl
adc
aad
shlb
and
shll
lahf
cltd
sbb
ss
adc
in
shl
cli
jmp
aas
insl
roll
mov
add
add
mov
jne
xlat
imul
sbb
into
mov
cmpsl
push
xchg
insl
movsb
jp
jmp
cli
dec
push
es
mov
adc
loope
mov
mov
xchg
mov
xchg
jb
pop
scas
in
and
add
xchg
es
das
cmpsl
ds
mov
movsl
rorl
push
or
add
add
add
add
sbb
push
test
test
push
outsl
popf
sub
lcall
jns
dec
testl
popa
mov
pushf
xchg
jne
mov
add
push
cmp
mov
cmp
xchg
inc
mov
aad
cld
fsqrt
cmc
jg
or
add
add
ja
movsb
cmp
cmp
mov
dec
lock
shrl
aaa
stos
add
popf
in
js
and
add
add
add
add
outsl
cmc
mov
lods
adc
mov
add
ret
jae
imul
add
add
nop
inc
clc
fnstenv
pop
sbb
add
add
and
add
add
test
jecxz
sbb
lods
xchg
xor
push
push
add
add
adcl
sbb
add
into
ss
cmpl
jbe
push
xchg
js
and
mov
out
sarb
add
add
add
iret
pop
fisubs
add
rorl
add
add
movsl
les
add
add
jne
cwtl
mov
pop
repz
or
add
add
mov
hlt
stos
sbb
ret
dec
xor
push
add
add
add
mov
xor
movsl
jns
fcoml
and
add
add
mov
out
mov
add
add
cmp
jbe,pn
add
fildl
inc
mov
mov
mov
jns
xchg
cmpsl
pusha
mov
mov
xchg
jl
sub
add
pop
ds
dec
movsb
repz
add
mov
out
pop
and
cmp
xchg
fdivrs
iret
aaa
sub
jp,pt
add
add
gs
add
add
std
outsl
push
push
push
jle
push
sar
and
repnz
adc
and
add
add
jmp
add
dec
xorb
inc
jnp
rcrb
add
fucomip
inc
aas
or
inc
adc
inc
add
add
inc
mov
mov
xor
inc
insl
insl
gs
mov
mov
jl
adc
jmp
repnz
mov
add
add
inc
pop
pop
outsb
insl
dec
cmp
mov
iret
add
xor
daa
push
into
fldcw
adc
rcll
pop
stos
aam
jecxz
ffreep
sbb
ljmp
jmp
dec
xor
sbb
jp
arpl
test
mov
or
mov
jnp
inc
icebp
popa
mov
repnz
popf
inc
loope
cmp
add
add
cld
add
add
add
sbb
lock
add
add
lds
loop
lcall
es
out
lahf
add
add
push
mov
cmpsb
jbe
sbb
lods
xchg
push
adc
push
ficomps
sbb
push
fstps
add
push
int
in
pop
pushf
cli
push
mov
pushf
cmp
mov
fisttpll
add
add
ds
loope
xchg
lods
push
dec
xchg
fwait
sub
add
add
aad
mov
xor
lds
cld
mov
xor
clc
or
add
add
pushw
pusha
mov
cld
test
outsl
sbbl
out
scas
loope
test
mov
and
dec
subb
pop
lea
add
pop
push
xor
add
add
addr16
cmp
lds
push
loope
inc
add
add
mov
add
sbb
lock
and
add
add
adc
push
jle
jnp
lcall
adc
loopne
leave
inc
out
test
push
shrb
add
push
test
cmc
xchg
daa
out
inc
push
nop
mov
test
and
sub
lods
jge
lret
outsl
sub
fisubrs
add
add
loop
jmp
mov
fsubrs
xlat
lret
inc
jo
add
fidivl
shrl
cmpsb
jle
push
ret
shr
test
mov
push
lods
inc
mov
sub
mov
mov
pop
mov
call
lods
mov
cltd
and
aam
pop
add
aas
push
cli
hlt
aam
lcall
call
jmp
xor
lea
mov
sahf
les
leave
loop
sahf
cmpsl
dec
fists
hlt
sbb
aam
fistps
xor
mov
push
out
ret
out
mov
das
mov
mov
lock
or
add
add
das
xor
sbb
in
lahf
pop
jl
adc
add
add
fimull
lret
mov
data16
fs
insl
pop
test
das
cmp
fs
jb
pop
sub
cmpb
dec
and
add
push
cmc
jmp
aas
js
mov
or
add
add
sub
out
icebp
fdivl
ja
mov
mov
xchg
incl
inc
hlt
rorl
add
addr16
stc
adc
add
imul
xor
add
add
arpl
sbb
aad
out
scas
mov
sbb
add
pop
mov
dec
clc
lea
in
or
mov
add
add
jo
xchg
dec
push
dec
addl
xchg
fdivl
add
add
mov
rclb
sti
adc
popa
mov
fidivs
outsb
incb
roll
add
out
rcl
movsl
or
add
add
out
or
mov
inc
push
pop
insb
add
add
sbb
jns
test
insb
mov
mov
inc
pop
ficompl
insb
add
add
popa
sbb
add
xchg
pop
xchg
cmp
xlat
rcrb
jp
mov
and
inc
xchg
xchg
in
push
push
outsb
mov
test
scas
in
mov
sub
lea
aad
pop
loope
sub
push
add
sub
add
add
testl
adc
cmpsl
lods
dec
add
add
hlt
lahf
pop
jno
jp
enter
arpl
adc
sbb
ja
jae
fnstenv
stc
inc
outsb
pop
inc
orb
mov
or
sub
xor
jnp
jae
iret
dec
mov
cmp
push
xlat
cmp
add
add
insb
mov
mov
rcrb
es
ret
or
mov
shll
fldt
out
sahf
enter
mov
ljmp
add
insl
jl
cmp
and
aaa
push
xchg
xor
movsb
mov
mov
cmp
adc
mov
mov
stc
jge
fisubs
jbe
mov
stos
or
sub
add
add
enter
adc
int3
data16
rcr
add
push
or
cli
sbbl
test
outsb
or
add
add
dec
mov
gs
sti
cmp
stc
mov
mov
xlat
dec
jmp
call
repz
dec
add
or
cmp
popa
xchg
pop
xor
xor
cmpsb
mov
cmp
sbb
mov
icebp
and
xchg
out
mov
sub
add
add
sbb
cld
imul
jo
lret
push
xor
add
pop
push
or
add
add
test
xchg
inc
cmp
push
mov
sahf
pop
sbb
in
pop
mov
cmpsb
add
add
add
mov
jbe
lcall
jb
push
in
adc
adc
out
and
add
add
pop
sahf
inc
add
add
insl
cmp
mov
mov
pop
js
inc
mov
es
cmp
add
add
loopne
add
add
add
add
mov
add
jae
add
sub
xchg
add
lock
or
mov
jmp
add
bound
mov
cmc
jb
mov
repz
cmc
mov
push
test
dec
das
bound
add
add
add
add
add
add
dec
and
add
add
add
add
insl
push
cmp
cmp
movsl
mov
mov
popa
clc
sahf
in
sbb
imul
test
add
add
and
add
add
jnp
test
mov
orb
mov
add
into
jne
mov
xor
add
add
icebp
sahf
adc
mov
in
popf
push
xchg
cmpl
mov
rcrl
add
add
sahf
push
add
pop
inc
add
add
push
stos
in
pop
add
add
add
push
adc
xor
jp
loopne
aam
push
fidivrs
push
cmp
add
imul
jge
mov
sbb
mov
stos
and
mov
and
lahf
fwait
stc
cmpsl
xchg
cs
sub
add
add
sahf
adc
mov
add
add
loop
sub
pop
sbb
dec
dec
xchg
and
arpl
addb
add
out
loop
aas
adc
ret
addl
add
add
jbe
shlb
add
add
add
sub
mov
jbe
jae
movsl
push
mov
stos
out
mov
push
sbb
out
xchg
mov
rorl
sub
add
gs
mov
inc
mov
adc
push
ret
rcl
sub
mov
ret
cmpsl
mov
data16
add
add
jno
fbld
xor
xchg
xchg
outsl
push
in
cwtl
jp
mov
je
mov
and
add
add
popf
clc
mov
cmpsb
push
icebp
mov
es
and
add
mov
jns
pop
inc
push
mov
cmp
cmp
scas
mov
nop
inc
out
daa
cmp
jno
jl
pop
loopne
and
add
add
mov
pop
repz
stc
fimull
stc
xor
mov
loop
jl
shll
mov
sbb
lods
push
cltd
iret
and
call
fistpll
gs
test
jp
jns
add
add
add
jns
dec
mov
jle
aam
mov
cmpsl
stos
pop
add
add
add
xchg
push
or
cli
jge
pop
mov
add
sbb
aad
xor
ficoml
shl
lret
call
push
loope
cmp
imul
lret
add
add
sbb
and
mov
add
cmp
dec
pop
hlt
jmp
or
add
add
pop
mov
xchg
dec
popf
xchg
jg
push
mov
dec
add
push
and
and
add
add
addr16
pop
addr16
xor
std
in
xor
insl
ret
push
decl
inc
mov
add
add
into
cli
imul
jno
pop
mov
add
add
dec
add
add
not
scas
es
add
add
imul
mov
mov
mov
xor
int3
stos
std
or
pop
es
shll
add
cltd
adc
stc
dec
push
jecxz
xchg
add
mov
arpl
and
pushf
mov
insb
mov
lods
mov
mov
into
jmp
mov
lds
std
sbb
ljmp
add
add
cwtl
inc
cmp
xor
clc
ss
cmc
pop
xor
sub
sti
push
dec
add
add
inc
pop
lods
dec
ffree
fwait
adc
dec
stos
fxch
mov
fnstcw
inc
mov
mov
push
and
dec
fidivs
mov
sbb
stos
faddl
add
add
mov
int
adc
pop
pop
pop
sbb
xchg
jmp
cli
outsl
movsb
mov
jl
js
scas
subb
loop
lds
stos
xor
add
add
ss
aas
mov
and
insb
mov
mov
insl
sub
outsb
lret
aaa
mov
mov
add
push
inc
insb
add
add
stc
cmpsl
mov
add
fnstenv
je
mov
stos
mov
stc
rcrl
and
out
xchg
dec
lock
xchg
sub
pop
xor
imul
loopne
fnstenv
stos
hlt
push
push
and
das
sbbb
imul
scas
fnstenv
iret
mov
sbb
outsl
outsl
loopne
push
or
add
add
adc
mov
mov
mov
cmp
dec
pop
xor
nop
mov
add
mov
add
add
ja
ja
shrl
add
loop
add
add
push
push
sub
stos
add
js
mov
mov
pop
lahf
push
cli
fs
sarl
dec
add
add
adc
pop
cli
ret
rolb
test
cmp
add
cwtl
negb
jne
xchg
push
pop
cltd
sbb
inc
adc
test
mov
xor
xlat
pop
fsubs
jmp
insl
lock
rclb
insl
pop
or
cmpl
xchg
movsb
inc
push
adc
add
add
add
add
and
add
jmp
xchg
xchg
push
js
outsb
test
cmp
inc
add
mov
cld
jge
inc
test
repnz
pop
jge
adc
xchg
pop
shll
daa
adc
aad
sbb
add
add
pop
bound
pusha
mov
repnz
cmp
or
add
add
sub
cmpsb
notl
test
add
in
mov
inc
movsl
mov
in
inc
inc
jno
inc
or
inc
stos
mov
push
test
pop
mov
fucomp
mov
mov
outsb
sbb
ljmp
add
add
popa
icebp
pop
jb
mov
ds
push
clc
repnz
nop
nop
jae
and
add
adc
add
repnz
nop
nop
jae
add
in
cwtl
std
or
jnp,pt
aas
clc
repnz
nop
nop
jae
cmp
add
mov
adc
clc
repnz
nop
nop
jae
add
add
pop
clc
repnz
nop
nop
jae
add
add
mov
cwtl
enter
add
add
stc
add
clc
repnz
nop
nop
jae
add
add
add
lcall
test
add
add
repnz
nop
nop
jae
add
mov
fld1
clc
repnz
nop
nop
jae
add
icebp
add
enter
inc
add
hlt
inc
add
add
and
add
sbb
mov
leave
nop
jmp
add
and
sahf
cmp
add
inc
add
add
js
mov
clc
repnz
nop
nop
jae
enter
dec
roll
add
and
pop
push
mov
xchg
ret
add
mov
mov
pusha
or
add
clc
repnz
nop
nop
jae
add
fsubs
add
push
imull
push
mov
xchg
ret
inc
add
xchg
and
add
repnz
nop
nop
jae
add
jo
loope
push
shl
nop
push
mov
leave
nop
jmp
add
pusha
add
xchg
std
add
add
and
cmp
ret
inc
mov
jno
mov
or
inc
clc
repnz
nop
nop
jae
mov
add
add
incl
and
add
add
add
sbb
add
inc
imul
mov
imul
sbbl
add
add
add
add
jo
sahf
inc
add
add
addl
xchg
ret
add
push
adc
fadd
add
add
and
repnz
nop
nop
jae
cwtl
add
mov
mov
mov
jno
mov
push
mov
xchg
ret
add
enter
add
push
mov
leave
nop
jmp
xchg
sahf
xchg
rcll
add
cwtl
add
jmp
jl
and
repnz
nop
nop
jae
jge
add
add
mov
clc
repnz
nop
nop
jae
aam
jl
incl
cwtl
add
add
add
jmp
pop
adc
push
jo
add
add
loope
add
aas
inc
push
mov
xchg
ret
add
jl
add
outsl
fcomp
add
push
mov
xchg
ret
mov
add
mov
push
mov
xchg
ret
add
cwtl
mov
adc
add
lcall
add
mov
xchg
ret
roll
cli
inc
add
sahf
mov
xchg
insb
add
add
sahf
sub
mov
xchg
ret
in
cwtl
add
add
add
pop
pusha
nop
push
mov
leave
nop
jmp
icebp
adc
pushl
ror
std
add
add
mov
xchg
ret
adc
mov
add
add
movsl
add
clc
repnz
nop
nop
jae
jno
add
add
mov
gs
jo
clc
repnz
nop
nop
jae
add
add
inc
mov
push
push
mov
xchg
ret
rcll
add
add
pop
ljmp
stos
add
jb
add
add
push
or
inc
loope
add
aad
inc
in
repnz
nop
nop
jae
mov
ds
add
push
mov
xchg
ret
mov
aam
cmp
xchg
inc
je
clc
repnz
nop
nop
jae
push
cltd
add
add
add
jl
clc
repnz
nop
nop
jae
in
add
roll
adc
push
sbb
repnz
nop
nop
jae
mov
inc
add
add
dec
mov
clc
repnz
nop
nop
jae
jl
add
xchg
sahf
ds
add
jns
push
mov
xchg
ret
les
add
pop
add
fldt
nop
push
mov
leave
nop
jmp
adc
add
add
add
inc
or
repnz
nop
nop
jae
inc
cwtl
add
add
add
add
pop
push
xchg
rep
nop
push
mov
leave
nop
jmp
add
inc
jo
add
xor
pop
pusha
clc
repnz
nop
nop
jae
jl
add
ds
add
aaa
call
nop
push
mov
leave
nop
jmp
and
or
add
sahf
xchg
add
nop
push
mov
leave
nop
jmp
jo
add
add
xor
das
xchg
cwtl
outsb
sbb
mov
clc
repnz
nop
nop
jae
cwtl
add
sahf
add
mov
leave
nop
jmp
add
xor
or
add
nop
push
mov
leave
nop
jmp
mov
aam
add
and
xchg
cld
nop
nop
jae
aam
add
add
add
loope
adc
add
add
enter
nop
push
mov
leave
nop
jmp
add
add
roll
loope
test
add
add
repnz
nop
nop
jae
add
roll
rorl
dec
jne
nop
push
mov
leave
nop
jmp
add
adc
jno
add
add
clc
repnz
nop
nop
jae
roll
jno
add
add
add
add
clc
repnz
nop
nop
jae
add
ljmp
add
cli
push
cmp
js
mov
clc
repnz
nop
nop
jae
add
cmp
pusha
icebp
jl
mov
aas
mov
clc
repnz
nop
nop
jae
inc
roll
add
jle
push
test
fistl
adcl
ret
or
add
mov
adc
hlt
sbb
add
nop
nop
jae
add
adc
add
push
in
or
add
cmpsb
pop
cld
push
mov
xchg
ret
add
rcr
add
cwtl
add
in
cwtl
add
add
add
add
sbb
clc
repnz
nop
nop
jae
pusha
cmpsb
add
cmp
and
mov
xchg
ret
add
insb
adc
rorl
shl
icebp
add
clc
repnz
nop
nop
jae
pop
icebp
jo
add
pusha
pop
insb
adc
repnz
nop
nop
jae
mov
outsl
push
add
cli
add
add
jecxz
repz
mov
xchg
ret
test
mov
add
call
clc
repnz
nop
nop
jae
add
icebp
add
cld
nop
nop
jae
insb
mov
pop
xchg
add
ss
jl
pop
clc
repnz
nop
nop
jae
std
add
dec
jl
add
icebp
add
sbb
mov
clc
repnz
nop
nop
jae
add
enter
add
add
jl
add
fs
add
add
add
adc
add
clc
repnz
nop
nop
jae
add
add
in
lods
or
add
cli
cltd
add
cwtl
xchg
cwtl
add
add
mov
lea
nop
push
mov
leave
nop
jmp
add
xchg
add
add
fdivr
repnz
nop
nop
jae
faddl
add
adc
add
adc
mov
mov
clc
repnz
nop
nop
jae
mov
xchg
cwtl
fsubs
mov
jno
sar
push
mov
leave
nop
jmp
enter
jo
cwtl
loope
add
inc
mov
cmp
nop
push
mov
leave
nop
jmp
add
add
adc
dec
dec
xor
clc
repnz
nop
nop
jae
jmp
mov
add
add
repnz
nop
nop
jae
rcr
add
add
add
jno
add
nop
jmp
xchg
adc
xchg
aaa
std
add
add
add
repnz
nop
nop
jae
cmpsb
icebp
rcrl
es
pop
push
mov
xchg
ret
add
fadds
add
push
add
enter
jp
sub
push
mov
xchg
ret
add
lcall
xor
push
mov
xchg
ret
das
adc
add
icebp
xchg
add
clc
repnz
nop
nop
jae
mov
add
mov
mov
push
mov
xchg
ret
aaa
les
outsl
enter
add
push
mov
xchg
ret
in
std
add
add
adc
rcll
jmp
nop
nop
jae
add
add
add
add
rclb
and
inc
add
add
cwtl
add
rcll
repnz
nop
nop
jae
add
jno
add
add
mov
push
clc
repnz
nop
nop
jae
add
mov
pop
and
add
clc
repnz
nop
nop
jae
add
mov
xchg
enter
std
add
inc
add
add
fistl
push
mov
leave
nop
jmp
add
or
cmpsb
add
das
add
clc
repnz
nop
nop
jae
xchg
and
mov
add
faddl
add
clc
repnz
nop
nop
jae
icebp
mov
icebp
incl
add
add
add
call
add
clc
repnz
nop
nop
jae
aam
add
xchg
push
or
pop
je
clc
repnz
nop
nop
jae
add
mov
pop
push
push
mov
xchg
ret
add
fcoml
add
adc
les
add
cld
nop
nop
jae
cwtl
add
outsl
xor
enter
add
mov
pop
push
mov
xchg
ret
mov
shll
push
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
inc
add
add
add
pop
add
add
arpl
repnz
nop
nop
jae
add
jo
add
add
add
dec
call
clc
repnz
nop
nop
jae
add
cwtl
aaa
add
cltd
mov
nop
push
mov
leave
nop
jmp
add
add
dec
add
adc
repnz
nop
nop
jae
mov
cwtl
add
xchg
mov
lods
adc
insb
pop
icebp
adc
add
sbb
rcll
add
mov
push
mov
xchg
ret
add
and
mov
add
adc
cld
nop
nop
jae
add
add
das
sahf
add
cmp
in
leave
nop
jmp
xchg
and
add
add
dec
clc
repnz
nop
nop
jae
mov
add
lcall
sar
lods
clc
repnz
nop
nop
jae
add
add
add
add
or
repnz
nop
nop
jae
mov
add
add
adc
sbb
adc
stos
imul
add
xchg
add
add
add
mov
clc
repnz
nop
nop
jae
mov
mov
add
mov
xchg
ret
std
push
mov
mov
sub
add
add
fimull
inc
mov
dec
mov
or
inc
clc
repnz
nop
nop
jae
cli
aam
mov
add
jge
or
add
add
add
add
cld
push
mov
xchg
ret
add
mov
shr
add
clc
repnz
nop
nop
jae
add
mov
add
lahf
fwait
clc
repnz
nop
nop
jae
incl
add
add
fmul
aaa
jmp
add
add
mov
push
mov
xchg
ret
roll
and
faddl
or
jmp
mov
xchg
ret
rcrl
inc
jmp
add
nop
nop
jae
jo
jo
les
add
aaa
mov
clc
repnz
nop
nop
jae
shll
icebp
and
add
and
cld
nop
nop
jae
cmp
enter
add
call
cld
nop
nop
jae
add
aaa
rcl
add
push
mov
leave
nop
jmp
loope
add
xchg
fadds
add
add
add
call
clc
repnz
nop
nop
jae
sahf
add
jge
fcoms
pop
clc
repnz
nop
nop
jae
lcall
add
and
add
mov
jne
clc
repnz
nop
nop
jae
add
cwtl
test
clc
repnz
nop
nop
jae
add
inc
jge
add
aaa
add
add
jo
mov
pop
add
clc
repnz
nop
nop
jae
push
add
mov
outsl
cmp
rorb
add
xchg
shr
clc
repnz
nop
nop
jae
add
jo
add
add
add
clc
repnz
nop
nop
jae
add
add
add
inc
subl
clc
repnz
nop
nop
jae
add
add
add
les
das
add
push
mov
xchg
ret
add
add
add
pop
pusha
add
adc
roll
xlat
idiv
call
nop
jmp
mov
add
jmp
nop
nop
jae
add
cwtl
jno
jmp
add
add
clc
repnz
nop
nop
jae
add
add
and
lcall
ljmp
cld
nop
nop
jae
pop
test
add
aam
xchg
shrl
repnz
nop
nop
jae
sahf
das
add
add
insb
aam
mov
test
sub
cld
nop
nop
jae
jno
fcoml
add
pop
int3
cmp
inc
mov
clc
repnz
nop
nop
jae
sbb
pusha
add
xchg
add
ljmp
xchg
in
cmp
add
add
add
push
add
add
addl
clc
repnz
nop
nop
jae
add
cmp
add
jl
cltd
xchg
cmp
push
mov
leave
nop
jmp
xchg
jo
mov
std
add
sahf
iret
mov
clc
repnz
nop
nop
jae
adc
jmp
les
sbb
add
clc
repnz
nop
nop
jae
insb
jl
jge
sahf
jmp
mov
xchg
ret
mov
add
mov
loopne
mov
clc
repnz
nop
nop
jae
add
add
lret
idiv
repnz
nop
nop
jae
pusha
add
add
add
add
cmp
repnz
nop
nop
jae
add
roll
add
push
add
nop
nop
jae
add
add
fadds
xchg
add
add
loopne
subl
nop
push
mov
leave
nop
jmp
pop
loope
cwtl
std
sahf
and
and
add
add
push
stos
clc
repnz
nop
nop
jae
add
add
sbb
add
rep
push
mov
xchg
ret
add
fmul
add
mov
xchg
mov
clc
repnz
nop
nop
jae
add
add
test
pop
and
add
repnz
nop
nop
jae
mov
add
les
add
clc
nop
push
mov
leave
nop
jmp
xchg
shr
aaa
loope
test
add
pusha
lds
xchg
xchg
clc
repnz
nop
nop
jae
add
add
movsb
adc
cmp
nop
push
mov
leave
nop
jmp
ds
add
add
add
add
clc
repnz
nop
nop
jae
add
add
fadds
or
mov
xchg
ret
add
add
add
das
in
add
add
nop
push
mov
leave
nop
jmp
push
add
add
add
cmp
repnz
nop
nop
jae
add
add
add
xchg
das
add
add
call
add
add
add
add
add
clc
repnz
nop
nop
jae
pop
std
add
add
add
mov
mov
xchg
ret
adc
enter
inc
add
add
pop
clc
repnz
nop
nop
jae
add
add
mov
add
push
mov
xchg
ret
mov
add
cmp
rorl
repnz
nop
nop
jae
add
add
add
xchg
add
rcr
lea
clc
repnz
nop
nop
jae
add
mov
add
repnz
jno
xor
repnz
nop
nop
jae
cltd
add
mov
bnd
push
push
mov
xchg
ret
add
enter
add
mov
add
add
push
push
inc
push
push
mov
xchg
ret
add
xchg
sbb
cmp
add
inc
add
clc
repnz
nop
nop
jae
add
lcall
mov
mov
add
clc
repnz
nop
nop
jae
mov
add
sub
add
add
arpl
repnz
nop
nop
jae
add
pusha
jo
add
sbb
lcall
push
pop
inc
add
jge
std
pusha
cmp
add
add
cld
nop
nop
jae
add
mov
cli
pushl
ret
cmpsb
jmp
add
repnz
nop
nop
jae
add
add
add
and
fistps
repnz
nop
nop
jae
faddl
adc
xor
adc
add
add
dec
xchg
push
mov
xchg
ret
add
add
std
fadds
mov
jb
push
mov
xchg
ret
roll
add
and
jmp
clc
repnz
nop
nop
jae
mov
xor
or
xchg
sbb
outsb
rorl
inc
add
add
add
mov
add
loop
clc
repnz
nop
nop
jae
add
add
outsl
add
loope
push
push
mov
xchg
ret
add
dec
add
add
call
in
leave
nop
jmp
rcr
outsl
aam
das
add
dec
cwtl
sahf
popf
pop
nop
push
mov
leave
nop
jmp
add
pushl
add
loope
and
pop
cmpsl
jbe
flds
add
xchg
mov
mov
adc
add
add
add
xor
push
clc
repnz
nop
nop
jae
mov
add
add
pusha
clc
repnz
nop
nop
jae
mov
xor
les
xchg
add
mov
mov
leave
nop
jmp
enter
les
outsl
roll
mov
repnz
nop
nop
jae
jo
add
fadds
cmpsb
add
and
add
repnz
nop
nop
jae
xor
add
cwtl
add
sahf
add
repnz
nop
nop
jae
and
jo
add
jp
pop
push
mov
xchg
ret
add
add
xchg
aaa
xchg
add
add
roll
mov
jb
nop
push
mov
leave
nop
jmp
add
test
incl
add
repnz
nop
nop
jae
add
add
add
add
add
push
fld1
clc
repnz
nop
nop
jae
xchg
inc
add
add
add
add
clc
repnz
nop
nop
jae
add
add
sahf
in
add
push
lret
jmp
mov
leave
nop
jmp
adc
add
xor
push
clc
repnz
nop
nop
jae
xchg
sahf
add
add
mov
add
add
jl
add
mov
add
jge
enter
rcll
mov
xchg
ret
xor
pop
cltd
add
cltd
add
add
add
rclb
jge
add
lcall
and
add
cmp
xor
push
mov
leave
nop
jmp
add
das
aaa
add
mov
xchg
pop
nop
push
mov
leave
nop
jmp
cltd
jmp
inc
mov
aam
add
push
mov
xchg
ret
add
lcall
or
add
cmp
sbb
push
mov
xchg
ret
add
faddl
std
aam
pusha
add
idivb
je
clc
repnz
nop
nop
jae
les
incl
add
rol
or
repnz
nop
nop
jae
jno
add
in
add
cmpsb
add
jne
clc
repnz
nop
nop
jae
fadds
inc
add
enter
inc
mov
clc
repnz
nop
nop
jae
add
inc
add
inc
pop
add
pop
hlt
lret
fwait
nop
push
mov
leave
nop
jmp
pop
incl
cli
aaa
add
incl
adc
add
mov
clc
repnz
nop
nop
jae
add
cli
xchg
add
mov
adc
pop
ja
add
enter
xchg
jno
add
add
ret
add
sar
add
shl
pusha
in
jo
add
add
jge
pop
add
clc
mov
in
leave
nop
jmp
mov
cmp
add
mov
fsubrl
mov
clc
repnz
nop
nop
jae
add
jno
add
in
clc
repnz
nop
nop
jae
xchg
add
add
std
ja
inc
in
clc
repnz
nop
nop
jae
pop
fadds
add
add
scas
mov
push
mov
xchg
ret
add
std
and
add
add
clc
repnz
nop
nop
jae
add
adc
mov
les
test
clc
repnz
nop
nop
jae
add
and
add
fcomp
pop
push
mov
xchg
ret
add
add
loope
add
sbb
add
push
mov
xchg
ret
add
sarl
add
adc
xchg
add
cmp
nop
nop
jae
add
cmp
ret
fwait
push
mov
xchg
ret
add
add
add
insb
or
cli
jge
das
fistpl
clc
repnz
nop
nop
jae
add
add
jmp
iret
push
push
mov
xchg
ret
add
add
outsl
add
add
add
imul
jae
cli
enter
add
cwtl
adc
adc
jmp
in
leave
nop
jmp
mov
pusha
add
jp
imul
clc
repnz
nop
nop
jae
add
add
cmp
sbb
clc
repnz
nop
nop
jae
add
add
xchg
add
add
add
call
clc
repnz
nop
nop
jae
adc
mov
add
push
loopne
repnz
nop
nop
jae
pop
adc
rcl
cli
add
add
inc
sbb
call
inc
add
std
add
cmpsb
jl
test
add
push
push
mov
xchg
ret
icebp
pusha
test
cwtl
add
lcall
inc
push
mov
xchg
ret
mov
add
add
cwtl
cmp
addb
add
repnz
nop
nop
jae
mov
add
cmp
jne
clc
repnz
nop
nop
jae
add
add
roll
add
pusha
add
add
push
inc
pop
pop
clc
repnz
nop
nop
jae
add
add
add
rep
clc
repnz
nop
nop
jae
and
add
roll
add
jo
add
call
nop
jae
add
jge
jo
jno
add
dec
fld1
clc
repnz
nop
nop
jae
add
cmpsb
add
add
test
mov
clc
repnz
nop
nop
jae
add
add
cwtl
inc
add
cld
nop
nop
jae
cltd
add
std
cli
jno
add
in
dec
cmc
movswl
clc
repnz
nop
nop
jae
sbb
add
add
jne
clc
repnz
nop
nop
jae
add
add
andl
in
leave
nop
jmp
xor
in
adc
in
add
add
add
pop
and
add
push
mov
xchg
ret
loope
cmp
add
add
in
stos
clc
repnz
nop
nop
jae
mov
adc
add
loope
lret
movsl
nop
push
mov
leave
nop
jmp
adc
faddl
jl
mov
daa
add
push
mov
xchg
ret
add
jno
add
add
cltd
add
pushf
stc
add
clc
repnz
nop
nop
jae
cmpsb
add
insb
mov
repnz
nop
nop
jae
faddl
in
pop
mov
aam
add
shlb
push
add
clc
repnz
nop
nop
jae
add
les
lcall
and
mov
xchg
ret
inc
add
push
add
roll
inc
popa
mov
clc
repnz
nop
nop
jae
rcrl
les
pop
dec
into
or
inc
or
add
roll
rcll
xor
add
fists
push
mov
leave
nop
jmp
jno
aaa
add
jge
add
add
dec
mov
clc
repnz
nop
nop
jae
outsl
add
add
pop
push
mov
xchg
ret
add
add
enter
add
add
pop
xchg
popa
clc
repnz
nop
nop
jae
add
in
add
das
add
inc
clc
repnz
nop
nop
jae
add
mov
add
test
jmp
and
xor
clc
repnz
nop
nop
jae
add
add
add
pop
faddl
imul
cmp
pop
xor
add
clc
cs
add
ret
clc
repnz
nop
nop
jae
sahf
pop
add
add
xchg
pop
add
cwtl
xchg
sub
cld
nop
nop
jae
add
jl
add
jl
bound
test
nop
push
mov
leave
nop
jmp
faddl
add
popf
add
clc
repnz
nop
nop
jae
add
and
xchg
in
enter
scas
lea
inc
add
add
icebp
add
add
in
mov
repz
repnz
nop
nop
jae
add
mov
add
add
outsl
add
push
mov
add
stc
bound
out
add
dec
clc
add
push
dec
add
js
mov
stos
jns
sub
push
mov
leave
nop
jmp
xchg
add
add
add
push
add
push
mov
xchg
ret
mov
push
add
add
adc
insl
ja
add
add
sbb
add
mov
roll
sahf
mov
xchg
ret
jl
roll
jmp
lcall
jmp
nop
nop
jae
xchg
aaa
push
adc
xor
es
add
push
mov
xchg
ret
sbb
add
loope
add
rcrl
push
mov
xchg
ret
std
add
add
outsl
pusha
mov
mov
push
out
lods
push
mov
xchg
ret
ror
add
cmp
mov
clc
repnz
nop
nop
jae
add
add
cwtl
mov
nop
nop
jae
in
pop
add
and
pusha
add
jge
je
clc
repnz
nop
nop
jae
in
add
add
pop
mov
repnz
nop
nop
jae
cmp
mov
adc
icebp
push
nop
push
mov
leave
nop
jmp
add
cltd
add
outsl
add
mov
and
nop
push
mov
leave
nop
jmp
add
outsl
add
add
xchg
in
xlat
xor
clc
repnz
nop
nop
jae
add
add
add
lcall
add
test
mov
fadds
loope
cwtl
or
add
outsl
roll
nop
nop
jae
add
add
sbb
insb
mov
xchg
hlt
inc
movzwl
push
mov
xchg
ret
enter
adc
das
mov
mov
mov
xchg
ret
add
inc
les
jno
or
test
cmpsb
pop
aaa
cmpl
nop
push
mov
leave
nop
jmp
add
add
pop
mov
mov
leave
nop
jmp
enter
outsl
pusha
add
dec
notl
clc
repnz
nop
nop
jae
adc
mov
sarl
sub
and
add
add
or
add
add
mov
add
das
adc
cmpsb
add
add
or
add
mov
clc
repnz
nop
nop
jae
add
in
add
jge
clc
repnz
nop
nop
jae
add
add
roll
rorl
and
cld
nop
nop
jae
jno
push
mov
enter
add
xor
xchg
inc
add
add
sbb
icebp
fdivrl
roll
mov
sbb
push
mov
xchg
ret
cmp
add
test
add
pop
push
stos
push
mov
xchg
ret
add
adc
adc
sarl
xor
add
inc
in
push
push
mov
xchg
ret
cwtl
or
adc
aam
inc
add
shl
clc
repnz
nop
nop
jae
jmp
enter
add
xor
clc
repnz
nop
nop
jae
add
mov
or
add
mov
mov
push
mov
xchg
ret
add
cli
dec
outsl
push
or
mov
xchg
ret
add
mov
psubusw
clc
repnz
nop
nop
jae
cwtl
add
les
adc
incl
or
mov
testl
cmpsb
cmp
add
add
repnz
nop
nop
jae
add
add
enter
jne
push
mov
xchg
ret
in
cwtl
adc
xchg
add
sahf
push
fadds
add
lods
mov
clc
repnz
nop
nop
jae
xor
add
lds
cld
nop
nop
jae
sahf
pop
add
aaa
add
cmpl
nop
push
mov
leave
nop
jmp
and
mov
faddl
pop
clc
repnz
nop
nop
jae
cwtl
add
add
pusha
add
call
nop
push
mov
leave
nop
jmp
add
add
std
add
add
cld
nop
nop
jae
cwtl
shll
add
add
xchg
add
sti
lss
nop
push
mov
leave
nop
jmp
cwtl
add
mov
and
nop
push
mov
leave
nop
jmp
sbb
add
push
add
add
cld
nop
nop
jae
push
roll
add
add
cmp
xchg
addb
cmp
ret
sarl
add
add
jp
jbe
clc
repnz
nop
nop
jae
inc
add
cltd
mov
and
nop
push
mov
leave
nop
jmp
add
in
std
cmp
mov
xchg
ret
adc
jmp
and
jge
aam
push
clc
repnz
nop
nop
jae
adc
adc
dec
aam
cwtl
xchg
inc
add
mov
nop
nop
jae
jno
enter
add
adc
inc
push
push
mov
xchg
ret
add
jmp
jmp
dec
mov
clc
repnz
nop
nop
jae
add
mov
add
jl
add
roll
not
cmpsl
add
cmp
xlat
add
add
ret
xor
clc
repnz
nop
nop
jae
sahf
mov
aaa
aam
test
nop
push
mov
leave
nop
jmp
cltd
roll
xchg
cwtl
add
mov
xor
loope
add
clc
repnz
nop
nop
jae
add
inc
push
cli
add
add
std
dec
push
push
mov
xchg
ret
pop
add
and
or
add
add
cltd
add
add
repnz
nop
nop
jae
add
dec
add
js
clc
repnz
nop
nop
jae
add
add
add
fdivr
int3
adc
mov
leave
nop
jmp
add
add
add
sahf
add
inc
inc
add
nop
jmp
xchg
add
mov
call
add
repnz
nop
nop
jae
test
cmp
repnz
nop
nop
jae
xor
rcl
add
add
add
repz
nop
push
mov
leave
nop
jmp
jno
xchg
add
add
mov
cli
orl
nop
nop
jae
pop
add
xchg
jge
xchg
add
add
nop
push
mov
leave
nop
jmp
pop
add
inc
push
jmp
leave
push
mov
xchg
ret
cmpsb
add
add
and
pop
jecxz
je
sub
repnz
nop
nop
jae
add
add
add
jnp
sar
cld
nop
nop
jae
pop
xchg
cwtl
sbb
cwtl
push
add
add
add
clc
repnz
nop
nop
jae
add
add
outsl
test
mov
cld
nop
nop
jae
aaa
cwtl
add
inc
cmpsb
add
cmpsb
cwtl
dec
shr
clc
repnz
nop
nop
jae
insb
push
and
das
add
cwtl
add
and
sub
add
mov
leave
nop
jmp
adc
add
nop
push
mov
leave
nop
jmp
add
and
dec
add
std
add
nop
nop
jae
push
add
add
or
add
sbb
add
repnz
nop
nop
jae
add
mov
jo
mov
cld
nop
nop
jae
aam
icebp
xchg
add
enter
adc
pop
movzwl
nop
push
mov
leave
nop
jmp
add
cmp
in
add
pop
in
cmp
nop
push
mov
leave
nop
jmp
rorl
jge
add
xchg
pop
pop
clc
repnz
nop
nop
jae
das
outsl
inc
and
add
std
pop
rcrl
push
clc
repnz
nop
nop
jae
add
add
jl
add
add
add
incl
adc
icebp
jno
outsl
xchg
das
adc
add
push
mov
xchg
ret
mov
and
add
jl
mov
fld1
clc
repnz
nop
nop
jae
cwtl
dec
add
xchg
jge
cwtl
add
and
fistpl
clc
repnz
nop
nop
jae
ds
roll
add
add
dec
mov
in
leave
nop
jmp
add
adc
add
dec
add
mov
push
test
dec
sub
cmp
inc
add
add
jno
adc
mov
or
clc
repnz
nop
nop
jae
add
add
add
rolb
iret
or
inc
add
cwtl
jge
add
pusha
in
add
cmp
lea
push
mov
xchg
ret
lcall
xchg
sbb
pop
clc
repnz
nop
nop
jae
and
in
add
xchg
add
jl
jl
add
add
cmp
nop
nop
jae
add
test
rcll
add
aad
nop
push
mov
leave
nop
jmp
icebp
add
add
add
push
fadd
add
xor
add
clc
repnz
nop
nop
jae
add
add
adc
inc
sbb
repnz
nop
nop
jae
icebp
add
sbb
jl
std
and
movsl
push
push
mov
xchg
ret
xor
mov
aaa
sahf
adc
outsl
push
push
mov
xchg
ret
xchg
add
lcall
outsl
xchg
push
ja
add
mov
add
aam
add
add
add
clc
repnz
nop
nop
jae
add
add
pusha
add
shlb
push
mov
xchg
ret
adc
aam
enter
adc
add
loope
test
nop
push
mov
leave
nop
jmp
add
add
rcll
add
add
mov
cltd
stc
call
push
add
add
add
add
mov
clc
repnz
nop
nop
jae
enter
add
inc
das
and
adc
mov
push
mov
leave
nop
jmp
add
sahf
sarl
add
in
xchg
cld
nop
nop
jae
aaa
ds
add
add
test
nop
push
mov
leave
nop
jmp
add
adc
add
add
add
adc
repnz
nop
nop
jae
mov
add
mov
clc
repnz
nop
nop
jae
add
add
sbb
adc
add
add
add
repnz
nop
nop
jae
add
or
loope
pop
mov
jne
push
mov
xchg
ret
mov
enter
cwtl
add
dec
add
add
sbb
inc
xor
clc
repnz
nop
nop
jae
add
das
adc
inc
mov
lahf
add
clc
repnz
nop
nop
jae
mov
or
inc
roll
push
push
mov
xchg
ret
inc
insb
fdivl
fdivl
les
add
icebp
inc
mov
inc
sub
and
add
add
icebp
add
add
cld
nop
nop
jae
pusha
add
add
aam
faddl
insb
cmpsb
mov
nop
push
mov
leave
nop
jmp
add
add
fsubrl
add
dec
add
ret
je
clc
repnz
nop
nop
jae
dec
mov
add
add
enterw
add
add
inc
push
push
mov
xchg
ret
add
add
add
aaa
inc
add
xchg
add
sbb
add
add
lcall
nop
nop
jae
les
sbb
add
das
adc
add
cltd
mov
fwait
nop
push
mov
leave
nop
jmp
add
add
outsl
xchg
add
lcall
add
imul
add
add
cld
lds
add
sub
cld
nop
nop
jae
loope
pop
and
add
mov
pop
popa
clc
repnz
nop
nop
jae
fcompl
add
add
add
clc
repnz
nop
nop
jae
add
add
in
add
enter
sub
add
add
les
add
add
repnz
nop
nop
jae
add
dec
das
add
xchg
sar
repnz
nop
nop
jae
add
mov
sbb
add
add
add
add
adc
cld
nop
nop
jae
cltd
add
add
add
or
add
nop
push
mov
leave
nop
jmp
add
add
add
push
lods
clc
repnz
nop
nop
jae
fmuls
and
enter
add
add
jl
add
adc
add
add
sub
push
mov
clc
repnz
nop
nop
jae
add
add
add
add
add
xor
clc
repnz
nop
nop
jae
add
insb
add
icebp
fadds
insb
add
in
sbb
repnz
nop
nop
jae
add
add
xchg
mov
loope
mov
xchg
xor
jno
rcrl
dec
aam
or
add
add
xor
push
mov
xchg
ret
add
add
fdivrs
ljmp
push
xchg
add
nop
push
mov
leave
nop
jmp
cltd
add
mov
clc
repnz
nop
nop
jae
rol
inc
adc
xchg
stc
add
nop
push
mov
leave
nop
jmp
roll
add
dec
add
add
add
nop
nop
jae
add
and
add
add
and
aam
divps
repnz
nop
nop
jae
adc
add
add
pop
add
add
add
push
clc
repnz
nop
nop
jae
add
add
cmp
pop
add
sti
mov
clc
repnz
nop
nop
jae
mov
mov
cltd
add
cmp
push
push
clc
repnz
nop
nop
jae
add
add
fdivl
add
das
or
cld
nop
nop
jae
lcall
pusha
xchg
sub
hlt
cmp
repnz
nop
nop
jae
xchg
push
add
add
add
dec
cmp
cld
nop
nop
jae
add
mov
and
outsl
add
add
add
mov
clc
repnz
nop
nop
jae
mov
outsl
xor
popa
push
clc
repnz
nop
nop
jae
add
roll
inc
fmul
add
add
inc
push
push
mov
xchg
ret
lcall
add
xchg
sbb
ja
push
mov
xchg
ret
mov
mov
add
inc
add
clc
repnz
nop
nop
jae
cwtl
add
add
add
push
mov
leave
nop
jmp
xchg
add
sahf
add
dec
add
add
mov
mov
add
clc
repnz
nop
nop
jae
add
adc
loope
and
mov
leave
nop
jmp
add
cmp
xchg
mov
add
add
lahf
push
push
mov
xchg
ret
mov
jmp
add
das
pop
jne
clc
repnz
nop
nop
jae
add
mov
loop
clc
repnz
nop
nop
jae
add
lcall
push
nop
push
mov
leave
nop
jmp
push
mov
add
add
add
sub
popl
xchg
ret
push
mov
mov
xchg
add
mov
push
push
mov
xchg
ret
add
outsl
cwtl
cltd
dec
xchg
insb
icebp
add
aam
loopne
fwait
clc
repnz
nop
nop
jae
jl
add
adc
mov
mov
clc
add
addb
ret
add
add
add
sahf
rcll
mov
jg
clc
repnz
nop
nop
jae
add
inc
adc
das
add
adc
add
repnz
nop
nop
jae
add
push
mov
jg
dec
sub
repnz
nop
nop
jae
adc
and
add
inc
enter
push
mov
rolb
add
call
add
loope
add
int3
add
mov
clc
repnz
nop
nop
jae
add
pop
add
xor
decl
nop
nop
jae
enter
add
test
add
adc
repnz
nop
nop
jae
add
adc
add
mov
add
add
leave
cmp
push
mov
xchg
ret
std
add
add
add
sub
jecxz
inc
add
enter
cwtl
add
add
add
pop
push
mov
xchg
ret
add
add
add
add
test
add
hlt
fiadds
clc
repnz
nop
nop
jae
add
sbb
aaa
loope
cli
das
add
push
mov
xchg
ret
add
add
adc
or
fs
add
xor
add
jge
jmp
sahf
push
ss
add
add
cli
cmp
push
xchg
fldt
cli
clc
repnz
nop
nop
jae
pusha
push
add
enter
add
out
xor
clc
repnz
nop
nop
jae
add
add
icebp
add
enter
push
push
mov
xchg
ret
add
sahf
add
ds
mov
inc
mov
push
clc
repnz
nop
nop
jae
push
insb
cmpsb
add
add
pusha
sub
nop
nop
jae
add
add
add
add
ja
push
mov
xchg
ret
add
add
pop
sahf
cwtl
fdivrl
mov
push
mov
leave
nop
jmp
add
pop
and
adc
lcall
mov
cmp
ret
xchg
add
adc
add
inc
mov
mov
push
push
mov
xchg
ret
add
enter
fadds
mov
cltd
adc
and
cld
nop
nop
jae
add
in
in
add
inc
nop
push
mov
leave
nop
jmp
add
add
mov
rcl
xor
add
cld
clc
repnz
nop
nop
jae
and
mov
rcl
add
add
inc
loope
nop
push
mov
leave
nop
jmp
add
xchg
inc
rcrl
mov
clc
repnz
nop
nop
jae
add
mov
cli
mov
je
sbb
rclb
pop
fs
add
roll
add
push
enter
mov
and
repnz
nop
nop
jae
add
add
cli
inc
add
pop
add
fld1
clc
repnz
nop
nop
jae
jge
in
add
adc
add
shrl
adc
add
clc
repnz
nop
nop
jae
add
add
add
insb
add
push
mov
mov
dec
add
add
jp
cmp
sbb
dec
push
clc
repnz
nop
nop
jae
in
jno
adc
roll
add
cmp
clc
repnz
nop
nop
jae
les
cwtl
lcall
add
add
mov
xchg
ret
inc
jl
enter
cmp
xor
push
mov
xchg
ret
add
lcall
cwtl
add
and
add
add
repnz
nop
nop
jae
add
icebp
add
add
shll
mov
nop
push
mov
leave
nop
jmp
fcompl
add
add
mov
push
mov
xchg
ret
add
add
jl
and
add
add
push
mov
gs
jecxz
add
adcl
sbb
add
cmp
and
add
add
in
pusha
add
ljmp
rol
push
mov
xchg
ret
cmpsb
add
add
cwtl
add
add
add
mov
xchg
ret
add
mov
or
add
mov
push
mov
xchg
ret
add
test
rcl
mov
sbb
add
add
add
cmp
add
add
clc
repnz
nop
nop
jae
rorl
cmpsb
inc
icebp
inc
add
push
mov
out
pusha
mov
add
bound
sbb
pop
add
dec
add
add
in
push
mov
xchg
ret
in
pop
add
add
adc
fistpl
push
mov
xchg
ret
outsl
icebp
sahf
cltd
add
and
add
rclb
dec
xchg
inc
add
adc
mov
cltd
cwtl
xor
cmpsb
inc
xor
clc
repnz
nop
nop
jae
roll
add
and
add
jno
jmp
clc
repnz
nop
nop
jae
add
push
add
lcall
mov
clc
repnz
nop
nop
jae
add
add
add
mov
push
mov
xchg
ret
xor
in
rcl
enter
xchg
lcall
mov
sahf
mov
dec
xchg
and
xchg
add
cli
add
push
mov
leave
nop
jmp
mov
outsl
add
add
add
push
clc
repnz
nop
nop
jae
jl
add
loope
add
add
cwtl
adc
push
clc
repnz
nop
nop
jae
cwtl
push
aam
add
cwtl
add
mov
jmp
pushl
enter
add
jmp
pop
add
pop
cli
xorb
nop
jae
and
or
shll
push
add
enter
out
add
clc
repnz
nop
nop
jae
add
in
mov
pop
push
mov
xchg
ret
inc
xchg
xchg
add
sbb
loope
add
icebp
xchg
shr
clc
repnz
nop
nop
jae
mov
cmp
add
and
cld
nop
nop
jae
add
jmp
add
add
lods
pop
pop
jb
clc
repnz
nop
nop
jae
xchg
cmp
add
repnz
nop
nop
jae
cltd
aam
add
pusha
icebp
adc
add
xchg
inc
add
adc
add
add
adc
lcall
push
push
mov
xchg
ret
add
add
add
cli
inc
push
sbb
fcoms
nop
nop
jae
inc
add
xchg
incl
and
cmpsb
js
push
jp
shl
clc
repnz
nop
nop
jae
xchg
add
inc
icebp
add
add
adc
inc
roll
cld
nop
nop
jae
and
push
add
add
mov
loopne
clc
repnz
nop
nop
jae
add
adc
add
cwtl
add
add
clc
repnz
nop
nop
jae
test
and
pop
roll
add
inc
mov
or
add
add
test
sar
clc
repnz
nop
nop
jae
add
adc
test
add
jb
add
push
mov
xchg
ret
add
mov
lcall
dec
mov
rcll
mov
leave
nop
jmp
add
xchg
sbb
add
in
jp
pushl
clc
repnz
nop
nop
jae
mov
xchg
enter
add
xchg
and
push
mov
xchg
ret
jge
jo
add
enter
add
stos
nop
push
mov
leave
nop
jmp
dec
mov
std
rcrl
ds
add
adc
mov
xchg
ret
add
jo
add
add
add
add
jmp
push
mov
leave
nop
jmp
add
add
add
add
cmp
add
add
inc
mov
leave
clc
repnz
nop
nop
jae
add
add
add
in
xchg
push
mov
xchg
ret
adc
cmp
jge
push
adc
out
push
push
mov
xchg
ret
pusha
add
mov
add
aam
mov
clc
repnz
nop
nop
jae
add
inc
add
sbb
add
add
push
shrl
nop
jae
add
add
adc
jo
add
add
sbb
add
add
clc
repnz
nop
nop
jae
add
add
inc
cltd
xorl
clc
repnz
nop
nop
jae
roll
xchg
and
fsub
push
int3
adc
add
data16
mov
nop
push
mov
leave
nop
jmp
pop
add
add
add
pusha
jmp
repnz
nop
nop
jae
cltd
mov
jge
add
pusha
jge
add
movzwl
nop
push
mov
leave
nop
jmp
add
aaa
add
lcall
nop
push
mov
leave
nop
jmp
xor
aaa
add
and
test
call
clc
repnz
nop
nop
jae
xchg
mov
cwtl
add
adc
incl
repnz
nop
nop
jae
pop
fadds
xchg
add
dec
add
add
add
xchg
mov
clc
repnz
nop
nop
jae
fcoml
add
pop
add
xchg
mov
cld
clc
repnz
nop
nop
jae
add
add
testl
std
jecxz
incl
add
add
mov
push
clc
repnz
nop
nop
jae
adc
icebp
loope
rcll
add
sub
clc
repnz
nop
nop
jae
adc
add
cmp
add
add
repnz
nop
nop
jae
add
icebp
rcrl
mov
dec
nop
push
mov
leave
nop
jmp
add
add
roll
dec
add
insl
inc
add
add
test
add
add
or
xchg
jl
faddl
xchg
jmp
add
popa
mov
nop
push
mov
leave
nop
jmp
add
sbb
add
icebp
add
cli
ljmp
nop
push
mov
leave
nop
jmp
jno
add
add
incl
add
clc
repnz
nop
nop
jae
test
in
sbb
nop
nop
jae
add
add
add
mov
and
push
push
mov
xchg
ret
add
xchg
add
inc
fsubs
add
add
div
nop
push
mov
leave
nop
jmp
add
les
roll
add
push
mov
leave
nop
jmp
outsl
add
xchg
jge
pop
add
mov
clc
repnz
nop
nop
jae
add
add
add
pusha
add
mov
clc
repnz
nop
nop
jae
dec
add
xchg
add
in
jge
nop
push
mov
leave
nop
jmp
das
add
add
add
shll
pop
mov
clc
repnz
nop
nop
jae
jo
add
add
cli
subl
xchg
ret
in
fcompl
cwtl
jno
add
test
and
clc
repnz
nop
nop
jae
add
add
pop
jo
sbb
add
fwait
clc
repnz
nop
nop
jae
call
adc
mov
adc
repz
clc
repnz
nop
nop
jae
sahf
add
cwtl
add
add
add
cld
nop
nop
jae
enter
add
std
inc
pop
rcll
out
cmpl
mov
leave
nop
jmp
add
pusha
add
nop
nop
jae
pop
pusha
mov
add
fsub
addr16
clc
repnz
nop
nop
jae
add
dec
add
and
cwtl
jno
roll
out
adc
addl
pop
add
loope
loope
add
adc
push
inc
add
add
add
mov
push
xchg
jae
lret
push
mov
xchg
ret
add
roll
pop
add
add
jge
xchg
cltd
fistpl
push
mov
xchg
ret
add
cmp
add
movb
push
inc
add
add
enter
add
add
stos
pop
push
mov
xchg
ret
add
add
mov
jno
pusha
test
in
leave
nop
jmp
xor
roll
add
icebp
add
adc
adc
mov
push
mov
xchg
ret
add
push
jge
in
add
mov
clc
repnz
nop
nop
jae
xchg
cltd
add
add
push
jne
nop
push
mov
leave
nop
jmp
jge
add
add
push
push
mov
xchg
ret
pusha
in
cltd
add
add
cli
pop
ret
clc
repnz
nop
nop
jae
mov
sahf
inc
push
test
add
push
loopne
mov
xchg
ret
or
cli
add
roll
scas
jne
clc
repnz
nop
nop
jae
cltd
shll
cltd
add
jle
xchg
clc
repnz
nop
nop
jae
jmp
jmp
add
cmp
cld
nop
nop
jae
add
or
add
jl
xor
repnz
nop
nop
jae
add
xchg
add
add
mov
leave
nop
jmp
pusha
add
add
add
cwtl
cmpsb
cwtl
pusha
cmp
rcll
repnz
nop
nop
jae
test
add
add
push
mov
into
clc
repnz
nop
nop
jae
add
in
std
cltd
add
jbe
mov
pop
clc
repnz
nop
nop
jae
add
add
adc
add
add
and
mov
xchg
ret
add
incl
add
insb
cmc
pushl
clc
repnz
nop
nop
jae
add
cltd
add
add
roll
and
test
mov
clc
repnz
nop
nop
jae
pop
inc
add
fadds
cltd
fwait
clc
repnz
nop
nop
jae
add
add
add
lret
mov
clc
repnz
nop
nop
jae
jmp
add
aas
ret
clc
repnz
nop
nop
jae
add
jmp
les
add
jecxz
out
adc
clc
repnz
nop
nop
jae
aaa
jo
in
jo
cmpsb
xchg
lahf
push
push
mov
xchg
ret
mov
enter
add
xchg
fld1
push
mov
xchg
ret
add
inc
xor
sub
add
add
mov
clc
repnz
nop
nop
jae
mov
cmp
daa
add
clc
repnz
nop
nop
jae
cli
jl
lcall
pop
mov
clc
repnz
nop
nop
jae
add
fdivrl
adc
out
ret
clc
repnz
nop
nop
jae
std
enter
xchg
and
push
add
add
mov
clc
repnz
nop
nop
jae
test
enter
add
cltd
add
rolb
repnz
nop
nop
jae
add
xchg
add
add
push
das
add
nop
nop
jae
add
add
add
cwtl
add
add
add
mov
mov
not
clc
repnz
nop
nop
jae
enter
rorl
jmp
cmpl
nop
push
mov
leave
nop
jmp
std
cli
add
add
add
incl
mov
repnz
nop
nop
jae
add
xchg
add
mov
adc
dec
cmp
repnz
nop
nop
jae
add
add
cltd
fdivrs
xchg
adc
mov
xchg
ret
add
mov
cmp
add
add
inc
clc
repnz
nop
nop
jae
add
jge
add
add
inc
fistpl
push
mov
xchg
ret
and
in
add
cmp
push
mov
push
sub
add
adc
sbb
dec
add
mov
add
add
repnz
nop
nop
jae
add
les
sti
nop
push
mov
leave
nop
jmp
add
pop
add
push
jne
clc
repnz
nop
nop
jae
insb
add
sahf
xchg
cwtl
inc
xor
clc
repnz
nop
nop
jae
add
add
adc
mov
clc
repnz
nop
nop
jae
add
adc
outsl
add
add
mov
addb
cmp
ret
fcomp
sbb
cmpsb
add
das
add
jno
mov
pop
inc
add
push
ds
add
in
in
fdivrl
clc
repnz
nop
nop
jae
jge
das
pusha
loope
add
add
mov
xchg
ret
add
add
lcall
inc
add
das
add
xchg
faddl
fadds
adc
add
repnz
nop
nop
jae
cmp
add
nop
push
mov
leave
nop
jmp
mov
add
add
add
aad
clc
repnz
nop
nop
jae
add
add
rcl
mov
add
cld
nop
nop
jae
std
add
add
mov
add
add
fcom
aas
add
push
mov
xchg
ret
icebp
add
inc
das
xchg
and
clc
repnz
nop
nop
jae
jno
add
mov
mov
rcll
repnz
nop
nop
jae
and
pop
cmp
pop
add
out
mov
push
mov
leave
nop
jmp
add
xchg
xchg
xor
add
add
pop
jae
repnz
nop
nop
jae
add
add
test
pusha
sub
add
repnz
nop
nop
jae
mov
add
add
clc
repnz
nop
nop
jae
cmp
add
xorl
in
leave
nop
jmp
add
cltd
add
xchg
jge
add
push
and
repnz
nop
nop
jae
add
enter
add
add
mov
ret
clc
repnz
nop
nop
jae
add
les
add
clc
repnz
nop
nop
jae
jmp
loope
add
mov
add
repnz
nop
nop
jae
pushl
add
push
add
mov
xchg
ret
add
add
in
cltd
xchg
add
lret
jne
clc
repnz
nop
nop
jae
pusha
mov
add
mov
nop
jae
faddl
inc
add
add
add
add
mov
leave
nop
jmp
xor
icebp
jmp
mov
dec
cmp
repnz
nop
nop
jae
adc
add
add
add
icebp
cmp
clc
repnz
nop
nop
jae
cli
add
add
add
add
cmp
cld
nop
nop
jae
jmp
enter
inc
out
push
nop
push
mov
leave
nop
jmp
sahf
inc
mov
sahf
mov
aam
inc
jmp
add
jb
test
push
mov
xchg
ret
lcall
inc
add
call
inc
add
aam
mov
and
lcall
test
add
clc
repnz
nop
nop
jae
sbb
add
mov
push
clc
repnz
nop
nop
jae
add
add
adc
pop
cli
lea
mov
xchg
ret
fadds
mov
aam
das
jno
inc
add
add
outsb
mov
xchg
ret
aaa
add
cli
and
and
add
xor
les
outsb
inc
add
add
rcll
add
add
cwtl
push
popa
jmp
shrl
add
jo
jno
cli
add
jl
addr16
clc
repnz
nop
nop
jae
add
add
add
and
loope
les
mov
xchg
ret
add
loope
mov
test
adc
inc
clc
lock
sub
xor
clc
repnz
nop
nop
jae
add
cmpsb
xchg
in
push
clc
repnz
nop
nop
jae
add
add
mov
xor
jge
lret
lea
repnz
nop
nop
jae
xor
enter
push
add
add
xor
clc
repnz
nop
nop
jae
push
xchg
add
add
add
mov
push
clc
repnz
nop
nop
jae
sahf
adc
das
add
add
mov
ss
fistpl
push
mov
xchg
ret
std
std
adc
in
test
jl
xchg
jmp
in
leave
nop
jmp
lcall
add
les
add
pop
call
nop
jmp
mov
add
scas
add
add
add
add
add
cs
inc
clc
repnz
nop
nop
jae
add
pop
add
adc
icebp
imul
add
std
enter
mov
test
add
push
add
mov
clc
repnz
nop
nop
jae
enter
mov
xchg
fiadds
mov
leave
nop
jmp
add
pop
add
mov
cmp
sbb
push
lahf
popa
ss
mov
cmp
mov
ljmp
jecxz
iret
mov
repz
or
pop
outsb
les
pop
mov
add
inc
xor
add
add
add
call
add
push
jmp
ss
imul
outsb
pop
loopne
cmpl
mov
lret
js
aad
dec
inc
mov
dec
icebp
test
push
aad
mov
push
fsubrp
icebp
dec
add
adc
orl
mov
add
xchg
pop
xchg
cld
int
jae
repnz
loop
jmp
test
add
add
in
xor
pop
adc
push
mov
shlb
int3
xorl
call
insl
test
das
dec
or
les
add
xchg
arpl
mov
xchg
shlb
movsb
push
into
pop
xlat
and
mov
xor
sub
cmp
pop
dec
mov
scas
push
or
add
add
lods
inc
xlat
arpl
add
add
mov
add
faddp
mov
xchg
out
add
add
add
fcoms
jmp
cwtl
notl
cwtl
xchg
out
sub
add
and
add
add
popa
push
sub
mov
xor
and
push
les
nop
ret
mov
mov
add
add
push
xor
mov
jle
xor
in
ss
outsl
mov
test
xchg
xor
aas
ljmp
popf
enter
add
add
jmp
jmp
lods
popa
jge
std
les
add
add
test
cwtl
adc
push
xor
add
add
sub
add
add
test
mov
add
add
add
fnstenv
popf
add
dec
mov
and
int
hlt
mov
xchg
mov
add
add
fsubl
jmp
mov
or
add
add
xor
add
add
sbb
add
add
cmp
insb
mov
or
mov
inc
sti
and
stc
andl
fdivr
orb
add
add
add
add
cmpsb
mov
andl
add
add
pop
mov
jle
pavgw
pop
sbb
iret
mov
xor
sbb
mov
push
xor
inc
xchg
mov
loope
sbb
mov
add
add
add
pop
shrl
mov
insl
dec
add
add
inc
adc
mov
adc
add
add
add
gs
in
lods
pushf
sub
add
sbb
mov
sbb
lahf
push
scas
scas
push
in
push
push
int3
js
mov
add
add
mov
cmp
push
add
add
ficompl
fisubrl
add
add
out
das
std
ss
je
mov
add
es
imul
mov
and
mov
mov
mov
push
xorl
xchg
cli
sub
mov
add
add
and
add
add
incb
add
add
sub
pop
dec
fs
call
loopne
arpl
mov
jl
xchg
icebp
aam
push
lods
iret
lcall
iret
shll
out
lods
outsl
shlb
in
shlb
stos
and
mov
ret
mov
add
iret
mov
add
dec
fnstcw
sub
mov
arpl
or
mov
rolb
xchg
jb
or
add
add
inc
push
sbb
push
pushf
mov
adc
add
add
add
add
add
add
add
adc
xlat
or
xchg
and
add
add
ret
cmp
out
pop
xlat
mov
dec
scas
loopne
and
mov
mov
mov
aad
mov
ljmp
mov
sbb
jecxz
shl
push
and
adc
jae
inc
push
test
test
fidivrl
sar
outsb
mov
add
adc
jecxz
xor
push
fsts
sub
pushf
js
and
in
xlat
ss
clc
popa
mov
popa
or
jp
popa
lods
sti
xchg
into
cmp
push
popf
sbb
call
into
cmp
dec
mov
add
or
testb
add
adc
mov
outsl
shrb
add
add
cmpsl
inc
mov
mov
inc
scas
test
mov
mov
js
stos
xor
insb
mov
fcmovbe
xor
pop
sub
add
inc
mov
push
aas
sub
xchg
xorb
jp
xchg
out
int
mov
iret
cmp
xor
shl
inc
add
add
mov
lahf
movsl
add
add
add
and
or
mov
pop
xorl
std
test
add
and
out
dec
hlt
jle
mov
gs
mov
and
add
add
add
add
std
loope
in
xor
pop
xchg
push
mov
add
ds
sub
mov
rcll
icebp
push
cmp
sbb
fs
gs
push
jmp
add
add
push
iret
arpl
lret
fisubs
fiadds
add
add
xchg
std
fs
add
add
add
add
add
pop
scas
cmpsl
lds
repz
adc
xor
adc
fildll
shl
and
add
add
movsb
pop
imul
clc
xor
inc
lods
mov
add
add
sbb
jle
xor
jae
mov
movsb
adc
add
mov
pushf
mov
jg
xor
adc
lret
jmp
jae
std
push
sub
push
loop
or
setno
add
add
pop
test
mov
add
mov
mov
incb
test
jecxz
mov
pop
push
stc
mov
add
mov
add
pop
stos
data16
add
add
or
add
add
rcrb
add
add
push
enter
push
inc
fimuls
dec
sub
pop
push
pop
int3
rcll
test
xchg
xchg
test
out
aam
jns
mov
inc
mov
add
and
dec
push
mov
adc
dec
mov
ret
pop
mov
add
add
stos
shl
xorb
mov
cmp
icebp
and
add
add
js
xchg
mov
add
insl
mov
fsts
xchg
lods
sbb
cmp
cmpsb
xchg
lret
ss
xor
and
xchg
mov
mov
add
pop
xchg
cld
adc
add
add
mov
ljmp
or
xchg
xchg
js
mov
outsl
jo
arpl
mov
inc
or
jmp
in
push
xchg
adcb
mov
test
add
mov
lea
add
cmp
movsl
insl
xchg
cmc
cmp
repz
inc
add
add
push
into
lahf
js
scas
jae
insb
mov
and
add
add
add
add
data16
std
cwtl
jae
imul
mov
fimull
add
rsqrtps
mov
dec
test
sbb
loope
push
fbstp
dec
sub
add
add
inc
fs
xor
outsb
into
lret
movsb
repz
dec
xchg
rol
mov
jp
icebp
movsb
push
dec
jecxz
fcoms
jmp
jp
jmp
aam
ja
sbb
xchg
ds
mov
mov
mov
inc
pop
push
xor
roll
jp
sub
leave
jnp
cwtl
and
add
add
mov
repnz
fs
enter
inc
bound
sbb
mov
lcall
adc
fdivrl
xor
mov
push
mov
add
add
sub
mov
mov
fwait
dec
fnsave
mov
mov
add
add
push
xchg
mov
shll
add
dec
cmp
or
add
add
ds
frstor
cs
clc
andl
xlat
insl
add
add
add
movsl
scas
dec
xor
adc
mov
add
pop
fxch
test
and
mov
add
add
add
icebp
shll
lea
lcall
idivl
add
add
mov
inc
or
add
add
es
and
lret
xchg
test
xchg
inc
rolb
add
add
jl
fstp
lret
int3
fcmovnb
clc
add
add
imul
mov
test
mov
repz
rolb
add
add
add
or
stos
movsl
hlt
or
add
mov
sbb
stc
inc
mov
mov
pop
inc
mov
adc
ljmp
mov
loope
add
sbb
cmp
mov
dec
mov
adc
divl
pop
and
and
addb
cmp
inc
mov
add
mov
mov
pop
mov
mov
add
das
push
arpl
rol
dec
fs
add
add
loop
sbb
dec
mov
std
mov
lds
add
add
push
xor
sub
add
add
and
xchg
test
add
nop
in
jbe
jns
and
rclb
mov
mov
pop
ret
sub
add
add
add
xchg
push
mov
xor
cwtl
push
leave
bound
pusha
add
add
mov
jnp
dec
int3
adc
or
add
add
enter
ret
jns
cmc
jmp
adc
push
pop
sti
adc
sbb
pop
push
imul
add
and
lds
movsb
mull
testl
das
enter
or
pusha
mov
ds
notl
jecxz
cmp
icebp
mov
insb
mov
ret
cmp
imul
sub
ret
adc
fs
in
inc
push
xchg
divb
imul
stc
sub
add
dec
xchg
pop
fnsave
fisttpl
add
add
jp
pop
shrl
add
add
stc
test
fs
push
popf
rcll
popf
inc
inc
add
add
out
jo
bound
ror
mov
test
mov
int3
xlat
jle
jmp
add
add
fcompl
hlt
xchg
inc
pop
lods
xchg
inc
popa
jl
mov
ljmp
insb
mov
mov
add
mov
add
pop
ficompl
or
stc
repnz
orl
je
aad
int
test
push
cltd
in
bound
add
cmp
std
fwait
and
rol
jp
and
add
add
mov
add
add
out
xchg
addr16
imul
fstpl
sarl
dec
push
lret
ss
mov
ds
out
mov
cwtl
jge
imul
dec
adc
adc
cli
adc
out
lods
test
hlt
lods
push
and
add
add
mov
cwtl
dec
mov
nop
push
ret
mov
pop
cmpsl
sbb
adc
gs
mov
mov
in
cmp
insb
add
add
push
aaa
jmp
add
sbb
mov
add
add
imul
sub
add
adc
add
add
xchg
dec
mov
add
int
add
js
lods
and
jb
jge
add
add
pop
nop
cmp
xchg
fwait
cmp
out
mov
add
iret
loop
aad
test
mov
in
test
add
add
inc
add
add
inc
add
add
inc
mov
mov
mov
jp
fists
aad
andb
mov
data16
sub
mov
dec
rclb
jmp
add
add
aad
add
add
add
mov
int
je
mov
mov
push
add
add
add
leave
loopne
mov
mov
fsubrs
push
xor
int
fisttpl
add
add
sub
lea
add
add
sbb
push
xor
mov
mov
adc
add
add
push
mov
push
fucomp
push
sub
popf
pop
scas
lea
mov
fisubl
cmp
and
add
add
mov
loopne
or
add
add
mov
add
cwtl
std
in
jb
sbb
cmp
and
ljmp
cmp
add
add
add
add
roll
add
xor
sub
add
add
lcall
cmp
sti
pop
jb
mov
aas
push
add
mov
inc
xchg
pop
dec
adc
lret
insl
jecxz
aaa
cli
jp
test
inc
add
add
pop
fwait
adc
jle
adc
sub
out
push
insb
mov
cwtl
fimull
push
incb
mul
test
jae
mov
push
dec
dec
add
add
push
inc
dec
mov
push
pushf
or
insb
add
add
daa
cmpsl
push
std
imul
push
arpl
jb
cmpsb
mov
dec
js
insl
and
push
rorb
push
clc
lahf
or
add
add
das
jecxz
leave
in
and
notl
add
add
repz
mov
xchg
xchg
shrb
add
add
sbb
int
jbe
insl
mov
leave
repz
add
inc
ret
out
jp
and
xor
add
add
xchg
ret
imul
and
pop
jae
xchg
fstpt
sub
lret
cmp
ret
repz
les
mov
adc
jle
xchg
cmp
add
add
add
add
test
popa
arpl
jae
mov
push
rcrb
insl
jg
out
lods
fdivl
cwtl
das
gs
es
xchg
mov
adc
pop
ds
in
jg
mov
mov
push
adc
mov
add
add
insb
mov
jmp
xchg
xchg
pop
lcall
out
xor
in
mov
mov
cwtl
cmpsl
xchg
or
add
add
sbb
out
in
mov
add
add
push
mov
add
add
sub
pop
pop
dec
pop
sbb
lret
pop
add
add
add
sti
js
push
sbb
jle
xchg
leave
fidivs
inc
add
add
jbe
stos
push
orl
stos
and
mov
mov
and
fcomps
jp
rsqrtps
adc
mov
push
xlat
cltd
sub
mov
mov
push
sbb
dec
in
sub
add
add
mov
int3
lock
mov
inc
mov
stos
rcrb
mov
add
add
add
data16
loopne
rorl
jle
ss
pushf
aaa
inc
and
in
jnp
mov
mov
add
add
mov
mov
repnz
ja
or
dec
insl
push
mov
jmp
jg
push
nop
xchg
inc
sub
ljmp
add
cli
jmp
sarl
jbe
cld
xchg
sbb
fsubr
and
dec
adc
pushf
xchg
push
out
cltd
xchg
icebp
roll
sub
mov
cmp
add
add
inc
int3
pusha
mov
jle
or
imull
cmp
mov
add
add
dec
mov
adc
movsl
and
ret
test
mov
and
mov
fnsave
push
pop
fnstcw
mov
cmc
lock
fcoms
rcll
add
es
jge
test
xor
add
insb
add
add
ja
mov
mov
gs
add
add
add
add
loope
int3
mov
mov
dec
gs
sbb
es
pop
xchg
repnz
in
sub
add
int
push
xlat
add
cmp
xchg
add
add
push
add
add
add
outsl
daa
mov
and
sbb
push
daa
and
add
add
inc
mov
aad
je
inc
add
add
out
add
mov
push
adc
and
rcll
cwtl
cld
pop
imul
xorb
lods
mov
sub
cmc
imul
add
add
sbb
mov
adcl
das
ret
pop
mull
add
add
mov
add
add
sub
add
add
mov
in
mov
inc
pop
inc
sbb
sti
js
loope
shr
lds
mov
ret
fldl
test
xor
mov
lahf
aaa
xchg
cmp
jecxz
xor
in
mov
or
test
add
addr16
xchg
xor
mov
loopne,pn
push
mov
add
add
add
mov
sub
add
add
adc
mov
sbb
add
fmul
push
push
sbb
jge
aaa
into
mov
add
popf
mov
add
push
insl
jnp
cmp
add
fcoms
int3
dec
adc
cmp
flds
fsubl
pop
mov
aam
ss
mov
adc
xchg
mov
xor
jae
pop
push
out
insb
mov
rcrl
pusha
mov
inc
lret
push
mov
mov
adc
test
mov
mov
mov
es
jge
xor
add
dec
mov
mov
push
dec
mov
out
pop
je
ja
test
lret
outsw
sub
fcmovu
cmp
ss
add
add
dec
movsl
gs
ss
enter
sti
test
int
lock
mov
mov
leave
add
jne
pop
repz
subl
add
hlt
enter
scas
push
pminub
push
insb
add
add
daa
pusha
mov
sub
push
in
int
add
loopne
jns
cltd
xchg
test
mov
dec
pop
fisubs
arpl
jmp
add
add
fstpt
sbb
add
dec
add
repnz
pushf
mov
rcr
mov
and
add
add
inc
jp
xor
iret
enter
add
adc
daa
movl
cmp
add
add
adcl
push
add
add
mov
daa
jbe
in
adc
pop
dec
push
pushf
xchg
jg
stc
xchg
adc
xchg
and
loopne
push
je
insb
add
add
xchg
fnstcw
mov
mov
add
add
add
cld
out
fdivrs
movsb
outsl
sbb
xchg
add
add
xor
sahf
test
ja
imul
adc
jno
add
in
jle
mov
jbe
scas
fldenv
inc
cmp
add
nop
push
xor
out
pop
push
inc
add
add
lret
cmp
sub
add
add
nop
sti
push
movsb
pand
mov
mov
dec
push
inc
mov
mov
add
push
test
mov
jmp
add
mov
stos
add
sbb
lock
add
add
test
imul
pusha
mov
inc
ret
out
lret
sub
push
cmpsb
es
jne
hlt
lock
add
add
hlt
stos
ljmp
add
loope
cmpsb
add
add
add
or
ds
xchg
ljmp
push
ja
inc
das
pushf
jecxz
and
add
add
mov
cmp
hlt
in
xor
cwtl
loopne
pop
xlat
pop
push
ss
add
add
add
jg
push
fwait
cs
repz
jo
add
add
imul
pop
mov
xchg
mov
mov
clc
cmpsl
xor
push
pop
mov
jge
lret
sub
add
add
ret
push
mov
and
cwtl
clc
js
mov
mov
jns
iret
mov
arpl
mov
add
mov
mov
jle
lret
sbb
outsl
xchg
jl
mov
rorb
xchg
xor
gs
pop
add
popf
aam
popf
jge
sub
add
add
cmp
mov
add
adc
in
pushf
mov
add
push
jmp
mov
cmp
add
inc
add
add
pop
push
add
or
dec
dec
fcoms
popa
lods
pop
stos
add
xchg
push
cmp
or
add
add
add
pop
mov
imul
mov
inc
sub
fisubrl
push
sub
add
add
jne
add
add
add
mov
imul
xor
mov
adc
scas
stc
fwait
pop
jmp
sbb
add
add
mov
stc
jp
cmpsb
mov
sub
call
inc
add
add
dec
add
add
icebp
pop
mov
push
adc
in
stc
add
add
add
or
fbstp
or
out
add
add
mov
enter
push
mov
inc
mov
in
ss
aas
out
das
repz
mov
sbb
push
fldt
add
ja
loop
mov
add
add
loopne
scas
stc
or
fisttpll
add
xchg
xchg
xchg
jecxz
loopne
test
and
add
add
mov
add
add
mov
dec
mov
aam
add
add
jmp
push
pmovmskb
mov
popa
mov
and
add
add
test
inc
call
orl
in
mov
mov
and
mov
xchg
xor
mov
adc
add
add
add
xchg
sbb
push
out
pop
pop
xor
stos
pop
push
or
cld
push
push
mov
fimuls
stos
push
cmp
add
add
das
scas
jo
ja
jge
das
test
push
sbb
lods
add
and
add
add
or
mov
sbb
or
push
dec
or
mov
test
or
shrl
sbb
mov
mov
push
ss
sahf
cld
stos
lods
push
dec
xor
mov
add
add
sub
dec
cmp
jno
mov
fsubp
push
push
xchg
add
add
sbb
jecxz
fmuls
dec
or
pop
inc
div
or
add
add
add
lahf
cmpsl
outsb
cli
cmp
add
add
add
add
out
sbb
repnz
or
xchg
pop
xchg
mov
mov
sub
mov
sti
mov
popa
push
push
arpl
pop
in
loopne
movsl
push
xchg
push
adcl
cmc
std
push
ret
clc
lods
cmpsb
mov
std
movsb
pushf
sbb
jl
jl
mov
inc
add
add
sbb
loope
cmc
int3
add
in
sub
or
add
add
mov
mov
dec
lret
and
add
add
sahf
ss
and
jmp
daa
pop
mov
add
mov
xor
fwait
inc
mov
js
outsb
xorb
jg,pt
inc
or
ret
mov
sbb
add
add
sub
and
dec
add
add
in
and
add
add
mov
pop
jecxz
outsl
cli
jb
or
add
add
push
test
add
add
add
lret
sub
push
ds
icebp
xchg
dec
add
add
xorl
mov
cltd
aaa
in
pop
jno
add
add
es
xchg
out
int
orl
loopne
inc
pop
std
test
add
mov
and
add
add
les
mov
mov
add
rcrb
xchg
pop
int
iret
jg
or
leave
lahf
stos
jbe
hlt
cmp
call
mov
notb
xchg
popl
popf
sbb
and
out
daa
testl
mov
repnz
shrl
mov
cmp
add
add
and
xor
es
jp
jmp
mov
mov
lock
jl
mov
add
add
loope
push
pop
test
mov
pop
dec
add
add
lret
sub
mov
sub
test
mov
cld
out
scas
mov
push
adc
add
cltd
cmp
xchg
cli
mov
shlb
mov
adc
mov
sub
xor
cmp
ja
aam
add
add
adc
in
push
xchg
push
test
xchg
mov
mov
push
cmp
add
ljmp
std
fildll
add
jmp
xchg
out
or
add
add
ljmp
imul
out
aad
mov
jmp
sbb
arpl
add
add
pop
arpl
adc
xchg
scas
fst
push
adc
clc
rol
mov
pop
shrl
lock
lea
sub
add
add
add
add
mov
ss
mov
xor
mov
add
add
add
add
mov
lret
adc
arpl
and
lcall
jle
mov
shll
mov
sbb
add
add
les
dec
mov
xchg
cmp
add
add
jno
mov
hlt
aad
inc
mov
push
cmp
mov
adc
push
mov
dec
lret
jle
mov
push
adc
addb
and
mov
jne
mov
lret
enter
add
popa
fistpll
mov
pop
stc
dec
mov
dec
mov
shrb
out
push
mov
fisttps
add
mov
sbb
mov
add
movsl
adc
adc
mov
cmp
cmp
pop
cmp
arpl
movsb
in
mov
and
add
add
pop
push
jb
mov
add
ret
dec
add
add
inc
test
sub
mov
fsubp
pop
xchg
add
test
ret
loop
adc
add
add
push
scas
pop
sbb
dec
add
add
push
xor
pop
rorl
add
cli
shl
insl
jl
mov
nop
push
rcrl
repz
gs
add
add
add
int3
or
cmpsl
imul
js
aas
int3
sub
cli
inc
arpl
xor
add
add
mov
inc
ss
decb
jl
lods
cmpsb
xor
add
dec
push
cmc
xor
aam
daa
mov
or
xchg
xchg
jae
pop
cmc
enter
push
idivl
dec
add
add
bound
jnp
xor
fcomps
cmp
xor
add
add
adc
add
add
push
jmp
popa
push
int
sbb
cmp
or
jno
xor
push
push
inc
jmp
pop
cmp
stc
sbb
sbb
mov
mov
jo
and
sbb
mov
mov
inc
pushf
stc
mov
test
sbb
cmp
sub
add
add
pop
pusha
add
add
clc
add
add
add
fs
mov
cli
mov
out
stos
sub
jae
add
add
xchg
pop
push
push
jb
ror
push
dec
add
or
lret
repz
scas
shll
mov
mov
jo
push
dec
daa
mov
mov
ss
filds
add
add
sbbb
arpl
push
xchg
pop
sub
xchg
cs
or
add
adc
test
add
mov
jo
daa
loopne
sub
scas
arpl
push
sbb
add
add
sbb
mov
and
add
add
ljmp
xor
jmp
mov
inc
dec
mov
repnz
mov
xchg
les
ljmp
push
cmp
xchg
pop
aas
rclb
xchg
xlat
xlat
icebp
pop
cld
mov
xchg
shl
repnz
nop
imul
jmp
dec
add
add
push
and
test
add
add
rcrb
jb
popf
mov
add
add
mov
je
pop
iret
push
jecxz
inc
std
rorl
cmp
xchg
add
mov
cmp
sbb
fdivs
mov
add
mov
shrb
jecxz
hlt
inc
cmc
ja
fdivrs
pop
dec
mov
in
mov
iret
pop
pop
cmp
int
pop
push
icebp
in
lret
mov
add
das
int
cmp
add
add
into
and
lcall
loopne
jmp
sbb
imul
mov
ss
add
mov
jl
xchg
sub
add
add
jae
mov
in
sub
add
add
push
pop
imul
int3
sbbb
lcall
xor
push
mov
lea
xchg
ds
push
rolb
stc
addr16
in
xchg
mov
or
add
add
dec
xchg
add
fs
xor
pusha
add
add
lret
xor
jecxz
add
add
notl
mov
das
mov
and
mov
mov
fldt
stc
mov
or
stos
sub
pop
aaa
mov
repz
int3
cmc
lock
fwait
stos
mov
pushf
jo
jmp
dec
aaa
add
add
es
es
xor
and
ficoml
add
mov
lret
gs
dec
pop
in
lcall
xor
cwtl
inc
mov
je
or
and
ja
push
jbe
mov
add
add
add
add
sub
stos
mov
xor
mov
test
add
lahf
mov
or
lcall
sub
cmc
movsl
iret
sbb
xor
and
add
add
push
push
mov
dec
xor
cmp
sub
add
add
jl
adc
add
gs
push
xchg
out
inc
add
add
int3
push
imul
mov
add
add
add
push
lret
subl
movsb
push
call
int
hlt
add
or
push
pop
ret
mov
push
sti
into
add
test
push
mov
mov
add
add
cmp
scas
push
int3
adc
ret
cmp
add
fsubs
lds
cmp
add
push
push
dec
add
add
xor
hlt
popf
mov
dec
mov
dec
add
add
imul
and
icebp
imul
jno
stos
mov
cwtl
scas
or
dec
jle
dec
inc
mov
add
add
add
mov
movsl
xor
mov
es
push
mov
push
or
pop
sahf
fnstenv
add
add
dec
add
outsb
les
mov
mov
xchg
dec
mov
mov
cmc
in
sub
lock
mov
insl
scas
pop
pop
lods
pop
aam
sarl
xor
add
jp
mov
add
dec
inc
lds
add
add
popf
jg
mov
mov
add
push
fists
add
inc
mov
ficoms
scas
cmpsl
xlat
push
mov
in
dec
pop
fs
call
add
add
mov
add
out
sub
add
dec
xor
nop
inc
sbb
push
mov
cmp
sbb
imul
add
cmpsl
orb
mov
insl
add
out
ljmp
mov
outsl
adcb
les
pop
xor
add
aas
fwait
popf
dec
adc
repz
mov
mov
mov
add
add
and
inc
out
js
dec
jg
test
in
sti
push
shrb
pop
mov
cmp
push
push
ds
in
cmp
add
adc
mov
ret
movsb
gs
cli
push
and
and
xor
jo
add
add
add
lods
inc
and
add
add
add
cwtl
xor
jl
lcall
cmpsb
sti
ret
shll
or
push
stos
xchg
add
push
clc
push
and
add
add
pop
test
add
daa
pop
in
xorb
or
outsl
pop
enter
add
add
push
push
mov
scas
mov
insl
mov
xchg
enter
add
lret
jmp
pop
pop
data16
aad
sub
orb
add
jae
test
or
add
ljmp
add
add
add
add
pop
xor
daa
jl
inc
hlt
stos
lret
dec
mov
daa
or
or
xor
sub
add
add
push
push
test
xor
int3
call
add
insb
add
add
inc
dec
leave
cmp
mov
lret
movl
fucomip
dec
add
sbb
mov
outsb
push
dec
addr16
xchg
mov
mov
sub
push
fsubs
mov
and
daa
dec
push
xor
and
add
add
sahf
push
jnp
fidivrs
daa
push
int
mov
add
add
pushf
pop
cli
xchg
fisubs
movsb
je
push
out
test
cli
test
xchg
stos
xchg
cmpl
xchg
sub
add
add
dec
add
add
add
xchg
fmul
hlt
mov
inc
jns
bound
add
add
add
xchg
hlt
jmp
mov
add
add
sahf
dec
mov
pop
fidivrs
add
add
sub
lret
pusha
add
add
aam
push
dec
pusha
add
add
shr
add
add
lods
sahf
mov
dec
pushf
scas
sub
add
add
mov
mov
scas
addr16
into
cli
xchg
inc
add
add
mov
or
les
loop
xor
cmp
int3
mov
loop
pop
or
add
add
int3
lret
les
cmpsl
bound
add
add
fldl
and
push
mov
out
add
mov
lods
inc
adc
loop
jle
pusha
add
add
sbb
lock
and
mov
lcall
outsl
outsb
dec
add
add
arpl
add
add
ja
mov
jns
icebp
sqrtps
cmpsb
sub
add
add
sbb
jns
xchg
sbb
mov
mov
insb
mov
mov
xchg
mov
xchg
dec
inc
cmp
mov
setno
test
call
inc
aam
mov
test
pop
cmp
jecxz
lahf
xor
rdtsc
scas
or
and
add
add
add
add
add
arpl
popf
cmp
fsub
ficomps
add
add
adc
sub
dec
popa
xchg
lcall
add
add
mov
xchg
xor
cwtl
ss
ljmp
imul
scas
or
add
add
xchg
daa
push
hlt
jmp
es
inc
add
add
and
xor
push
ds
adc
mov
sbb
xor
lea
sarb
dec
adc
lock
xor
repnz
add
add
jne
or
add
mov
add
add
fimuls
sub
xor
cmp
add
add
mov
pop
ss
add
add
mov
add
cld
and
add
add
mov
push
gs
mov
jae
lcall
add
lcall
add
pop
xchg
adc
mov
imul
outsl
mov
test
fstpt
xchg
popa
cs
mov
mov
divl
outsb
jge
jge
mov
repnz
mov
ja,pn
mov
push
xor
pop
adc
loop
ja,pt
insl
lcall
ds
out
push
mov
arpl
movl
insl
and
mov
addr16
add
add
into
inc
dec
out
ret
test
fcompl
icebp
or
popa
roll
xor
add
dec
mov
in
adc
sbb
jns
ss
rorl
sbb
sub
lock
add
add
add
pop
iret
enter
outsl
push
loop
jb
mov
lret
pushf
movsb
push
jecxz
gs
or
add
add
dec
xorb
lock
sub
nop
subl
mov
cli
jmp
cld
xor
fcomps
push
mov
add
lods
loop
xor
cs
in
loop
push
imul
imul
mov
push
adc
test
add
add
jmp
in
cmp
mov
test
rolb
mov
movsb
ljmp
ja
pop
leave
jno
icebp
lea
jg
sbb
mov
mov
into
adc
mov
movsl
iret
inc
jle
mov
add
or
scas
stos
mov
movsl
jb
in
mov
mov
jl
inc
add
add
add
add
add
jl
pop
jl
mov
push
jp
aas
dec
xchg
sbb
jmp
incb
mov
mov
and
xor
add
repnz
shrl
sub
add
add
cmp
adc
insb
mov
sbb
push
push
cli
pushfw
mov
add
add
add
add
fldenv
push
sbb
mov
add
add
icebp
ljmp
pusha
mov
and
sbb
jp
test
push
sbb
bound
and
mov
addr16
mov
push
sti
loopne
stos
iret
movsb
mov
add
mov
jno
jmp
addr16
and
add
add
xchg
xor
in
xlat
ss
mov
clc
or
add
add
cld
loopne
clc
mov
add
iret
push
lcall
pop
xchg
xchg
mov
mov
xchg
sub
je
add
add
xor
insl
jnp
gs
mov
pop
es
dec
popf
mov
jmp
test
clc
xchg
xchg
sbb
enter
and
add
nop
inc
cld
stos
and
repz
add
add
mov
lods
cld
dec
orl
aaa
in
sbb
add
add
pop
or
add
add
mov
mov
xchg
mov
sub
lds
adc
pop
pop
push
hlt
stos
xlat
std
aas
mov
repnz
add
add
mov
mov
push
mov
add
add
add
scas
popf
jmp
mov
cs
jg
fstpl
push
pop
add
mov
mov
enter
add
mov
icebp
pop
sbb
aam
cmc
negb
daa
xchg
fst
lods
rol
out
jae
sub
push
adc
out
fnstenv
insb
add
add
xor
push
mov
cli
and
scas
push
insl
sub
add
add
repnz
add
add
jo
leave
mov
cltd
push
ror
repnz
scas
sbb
sub
xchg
cmc
mov
mov
in
arpl
mov
add
jle
add
add
popa
fisttps
add
add
xchg
jbe
fistl
cmp
inc
hlt
mov
inc
mov
in
mov
add
add
add
add
in
xor
inc
les
sub
sbb
and
mov
push
icebp
xor
fs
cmp
aam
std
mov
in
repnz
adc
xor
inc
rcrl
je
in
fdivrp
pop
adc
mov
les
call
xchg
or
dec
xchg
sub
gs
add
add
push
and
xchg
xor
add
aad
mov
add
add
mov
mov
add
add
add
je
call
sbb
pop
sbb
lods
pop
and
add
add
add
add
out
mov
push
and
in
lods
lods
dec
add
jge
xchg
bnd
jo
dec
lcall
jo
outsl
mov
mov
and
add
add
cmp
pop
or
add
add
fistl
add
add
ljmp
jbe
lahf
sbb
mull
add
lahf
test
adc
xchg
cmp
or
mov
cmp
jl
sub
lock
mov
inc
jmp
test
xor
pop
mov
cmp
add
mov
jg
aaa
dec
mov
or
popf
adc
test
dec
les
popf
mov
in
or
pop
div
or
shrl
out
jae
jg
ja
mov
mov
lods
cmp
add
fmuls
add
scas
iret
cmp
cmpsb
mov
imul
mov
test
add
add
hlt
or
add
add
pop
insl
aaa
sub
add
add
adc
pushf
cmpsl
push
xchg
mov
enter
adc
add
add
inc
mov
adc
add
add
add
dec
les
ja
jne
pop
push
inc
mov
xor
test
adc
mov
lahf
ret
mov
and
mov
jns
mov
xor
xlat
ja
xchg
jp
sbb
add
add
cmp
in
mov
roll
cmp
enter
add
add
inc
ret
or
add
add
mov
fldt
cmp
call
sub
add
add
mov
out
popf
ds
jnp
ret
cmpsl
add
aam
pushw
add
mov
jecxz
xor
mov
cltd
sbb
mov
add
add
push
movsl
cli
into
pop
movsb
cld
divl
in
imul
imul
clc
jb
push
or
mov
sub
add
add
mov
xor
add
add
push
inc
add
add
adc
add
bound
jp
enter
add
add
add
add
mov
sahf
and
add
lods
push
mov
fwait
push
pop
cmc
call
out
xchg
dec
sub
xlat
xor
fcoms
mov
mov
adc
loopne
mov
jmp
dec
add
add
nop
or
jg
data16
aad
push
mov
mov
andb
pop
xchg
add
add
loop
xchg
mov
push
pop
in
out
sub
mov
mov
hlt
mov
inc
std
lahf
xchg
mov
mov
fmull
out
mov
mov
jecxz
sbb
add
mov
push
mov
and
cwtl
lds
or
jns
adc
and
out
jp
lods
rorl
add
add
sbb
cmp
bound
add
add
push
xchg
int
mov
imull
mull
add
add
lea
jnp
dec
cmp
sbbl
jnp
fcmovb
push
pop
jo
jbe
and
add
add
xor
jb
in
loop
shrb
add
add
or
lcall
lods
cmp
xor
mov
and
mov
enter
in
cmp
fbstp
xor
sub
mov
add
add
and
jmp
lods
xchg
add
add
mov
cli
bound
and
add
add
stos
add
loop
aaa
das
mov
add
add
push
in
fistpll
and
add
pop
ljmp
rcll
call
add
xchg
loopne
pop
outsl
adc
sbb
add
add
ror
rcrb
aam
mov
add
and
xlat
jnp
dec
sbb
mov
rclb
ss
rcll
xchg
dec
jns
mov
push
cmp
push
stos
outsb
iret
lret
icebp
or
add
add
and
outsl
int
test
xorl
inc
mov
pop
inc
xchg
jle
mov
stos
test
add
jnp
xchg
xorl
push
test
sub
push
add
add
mov
mov
add
add
scas
pop
xorb
ljmp
xchg
inc
mov
xchg
push
sbb
pop
jb
jns
push
call
loop
mov
je
in
jge
or
lahf
sarb
push
lret
jne
cs
add
call
jl
xchg
xor
sub
add
and
pop
jns
aam
mov
cmc
xor
hlt
dec
adc
loop
std
enter
xchg
pop
xor
sub
add
add
add
add
add
lret
adc
xchg
test
aad
sub
add
pop
mov
add
adc
xchg
add
add
add
add
test
pop
idiv
fmull
add
add
mov
pusha
add
add
int3
fisttpl
mov
repz
jo
aas
jbe
movsb
sub
pop
or
insl
out
mov
dec
loopne
or
add
add
jle
pop
aaa
mov
movsb
sub
and
add
add
fisubrl
lds
test
mov
mov
popf
fistl
mov
outsb
lcall
cmp
mov
cld
in
and
jge
addr16
push
dec
inc
cltd
mov
inc
xor
sub
in
ret
fnstenv
jg
push
sub
lds
add
or
pop
addb
inc
push
mov
add
add
lea
mov
lret
or
add
add
pop
jne
xchg
in
push
mov
jmp
lret
lcall
cmpsb
pusha
add
add
adc
xor
push
xchg
lods
pop
pop
fadds
add
sub
jle
adc
add
add
roll
das
or
and
nop
mov
add
add
lret
aad
xor
cmp
add
add
xor
add
add
and
add
add
add
add
jmp
aad
mov
jns
lea
hlt
and
enter
lock
cli
mov
adc
pop
rclb
add
add
xchg
decb
mov
mov
les
push
cmp
fstpl
fsubrp
pushf
or
clc
insb
add
add
jno
or
add
add
pushf
push
pop
cltd
movsb
cmc
rcrl
test
pop
aaa
paddq
inc
xlat
and
add
add
lret
ljmp
or
jnp
add
add
jnp
add
add
add
jl
push
int
pop
shlb
rcll
call
stos
je
insl
and
inc
cmc
and
cmp
add
test
xlat
cmp
aad
aad
and
add
add
adc
mov
pop
mov
lret
xchg
add
lea
mov
or
mov
loopne
test
jnp
popa
das
fildll
and
loop
lcall
daa
popf
lods
out
int
pop
ficompl
aam
idivl
lcall
dec
mov
call
xor
aaa
inc
dec
clc
xchg
cmpb
pop
movsb
fs
fs
cwtl
sahf
cmp
or
or
aam
dec
movsb
push
pop
sub
add
add
inc
mov
and
adc
push
lahf
fidivl
adc
faddp
push
gs
xchg
enter
filds
hlt
inc
es
add
add
xchg
mov
jle
jmp
push
ds
out
fmull
adc
or
mov
mov
xorl
mov
lret
mov
sbb
fldt
add
add
cwtl
sub
outsl
sti
scas
pop
or
sub
xchg
xchg
or
add
add
jmp
add
add
fdivl
adc
dec
jno
inc
dec
cmpsl
jae
mov
and
cmpsb
jo
icebp
loopne
adcb
inc
rorb
add
gs
int
mov
or
add
add
push
add
add
add
sahf
xchg
fsub
lea
jns
cli
sahf
push
mov
sbb
mov
arpl
mov
leave
lds
out
mov
lds
mov
dec
add
add
sub
imul
out
pop
jge
push
mov
dec
add
add
mov
add
add
add
add
add
xchg
in
cwtl
jnp
xor
sub
mov
sbb
testl
bswap
jmp
scas
add
add
add
popa
ljmp
jb
fistps
add
add
add
add
xchg
push
and
inc
mov
mov
popf
lock
push
cmp
mov
and
cmc
adc
ret
shrl
mov
and
add
add
push
imul
push
aam
outsb
lods
or
push
sbb
js
push
pop
popf
sbb
jecxz
mov
push
adc
adc
aad
sti
cld
test
pop
mov
divb
cmp
inc
mov
jmp
xor
xor
mov
out
jmp
mov
lcall
dec
add
dec
lret
lods
mov
adc
leave
push
aam
add
add
jg
incb
add
add
adc
js
mov
sahf
lret
add
add
xchg
ds
repz
dec
mov
add
push
xchg
add
test
mov
daa
lock
xor
pop
pop
bound
xchg
or
add
push
mov
lret
loopne
jg
add
daa
stos
clc
rorb
adc
xor
mov
and
add
add
add
outsb
hlt
cmpsb
inc
int3
inc
repnz
xor
dec
add
add
add
mov
mov
add
add
dec
shr
mov
daa
mov
mov
jne
push
pop
push
dec
ss
add
testb
add
mov
push
inc
mov
cmc
fwait
inc
aas
mov
xor
clc
xlat
shl
divl
jmp
xchg
dec
stc
cmc
loopne
push
stos
rcrl
xchg
jmp
mov
stos
sbb
or
jge
aam
iret
cmpb
mov
movsb
fsubs
add
adc
inc
cmp
jbe
pop
jg
in
or
mov
add
add
popa
mov
and
add
add
bound
xchg
jge
dec
mov
mov
cmpsb
and
loopne
les
test
pusha
add
add
add
add
add
and
add
add
adc
aas
sub
push
add
add
add
xor
sub
add
add
imul
mov
int3
inc
mov
mov
mov
and
push
shll
add
add
fwait
mov
mov
mov
adc
imul
mov
xchg
pop
out
dec
xchg
sub
add
pop
ljmp
stos
jo
mov
clc
lock
std
imul
lods
add
add
add
pop
aad
ficoml
pushf
jae
fistl
cli
mov
dec
and
sub
mov
mov
pop
cmp
popa
adc
mov
xlat
test
loopne
popf
shlb
cwtl
xor
imul
xor
inc
jle
outsb
leave
and
add
add
add
inc
inc
ja
push
out
inc
adc
push
cmpsb
lds
sbb
mov
mov
push
and
dec
mov
mov
add
enter
or
pop
cld
pop
mov
pop
scas
sbb
ret
pop
sub
add
add
mov
xor
adc
xor
jne
gs
mov
add
lea
inc
sbb
stc
icebp
lods
sahf
in
jb
dec
add
add
rorb
dec
fcomi
xchg
lahf
js
push
push
adc
inc
or
cmc
fsubrp
repnz
xor
lcall
adc
pushf
mov
orl
arpl
add
lahf
dec
pop
dec
in
sbb
cltd
and
hlt
pop
xchg
mov
clc
imulb
add
movsb
sbb
jbe
dec
rol
mov
adc
jp
dec
mov
insb
mov
dec
mov
test
repnz
ss
and
add
add
aas
add
pop
int
fdivrs
lods
arpl
push
or
pop
sahf
cmc
ss
fldcw
and
mov
in
and
or
imul
mov
pop
pop
mov
add
lret
inc
add
add
sarb
fwait
repnz
ret
mov
push
lods
sbb
jl
sub
pop
stc
fstp
shll
or
shll
push
xchg
pop
repz
lds
lcall
add
rcll
add
sbb
pop
out
lret
sbb
aas
sti
sbb
pusha
add
add
in
push
ffreep
mov
loopne
ja
pop
out
js
mov
mov
add
add
dec
mov
adc
popf
xchg
pop
sub
add
add
insb
add
add
lods
cltd
jmp
sbb
add
add
add
add
inc
cwtl
aaa
adc
xor
iret
fs
ret
cmovg
jb
adc
add
add
xchg
fisttps
mov
add
add
sub
jecxz
xchg
repz
and
jo
dec
adc
mov
jo
insb
add
add
sbb
mov
fcoml
lcall
insl
insb
add
add
gs
iret
and
add
add
add
add
add
add
fwait
inc
add
add
push
push
ljmp
cmp
out
out
cld
repnz
add
add
lods
jge
movsb
xchg
add
add
cwtl
pop
sbb
out
jno
mov
sub
jg
hlt
sbb
mov
sub
cmpsl
ret
pop
xor
or
add
add
add
sbb
jmp
xchg
xchg
fisubs
add
add
clc
mov
push
lods
pop
sub
inc
push
add
add
mov
mov
enter
mov
mov
cwtl
shr
sahf
dec
push
mov
add
add
add
adc
fs
dec
jns
pop
sbb
add
add
add
add
cmp
inc
into
fiadds
add
add
adc
fisubrs
mov
adc
push
cmp
mov
fldt
int3
sub
pop
test
popa
dec
cmp
pop
jmp
sbb
dec
xor
insb
add
add
shll
pop
insl
inc
jns
xor
add
inc
cmpl
add
in
cld
inc
jl
aad
cmpsl
mov
sub
and
cli
cmc
adc
sbb
add
add
add
lds
inc
iret
lock
pop
cmp
dec
mov
and
add
add
repz
add
pop
rcll
add
add
add
or
sub
add
add
inc
aam
pop
add
add
es
push
das
pop
fstpt
push
xlat
and
fidivrs
rcll
sub
add
add
mov
mov
mul
ljmp
lock
dec
jge
push
push
adc
repz
mov
fistpll
pop
jnp
cmp
adc
add
or
add
add
add
add
lahf
leave
sub
imull
mov
lret
fiadds
sahf
cmp
outsl
mov
test
push
fcoml
fmul
jg
inc
add
add
xchg
imul
mov
outsb
pop
daa
dec
mov
add
aad
cltd
icebp
out
mov
and
lods
cmpl
movsl
mov
std
add
add
add
add
add
mov
pop
mov
sbb
out
adc
add
fsubl
mov
pop
hlt
dec
lods
popa
add
xchg
rorb
add
mov
xchg
add
add
and
mov
loopne
adc
arpl
fneni(8087
in
add
add
jmp
movsb
pop
int3
inc
add
add
mov
insb
add
add
daa
repz
imul
add
add
insb
add
add
sbb
in
int3
mov
sub
dec
cmp
add
mov
pop
lock
dec
mov
or
add
add
scas
mov
dec
scas
sbb
add
add
pop
loopne
nop
test
daa
cmp
fcomp
rcrl
lea
mov
xlat
fsubr
xor
add
inc
inc
xor
mov
add
or
add
add
nop
push
call
stos
clc
jge
les
or
sbbl
daa
cmp
mov
mov
imul
ret
mov
xor
js
dec
pushf
aam
or
add
add
cli
orl
mov
es
add
add
pop
inc
arpl
push
int3
leave
imul
add
jno
mov
xor
stos
push
pop
jne
in
adc
sbb
pop
rorl
mov
clc
cmp
mov
sub
push
je
cmp
int3
add
add
call
std
call
jno
mov
mov
js
dec
add
add
out
mov
add
lock
lcall
adc
ja
add
lock
or
cmpsl
or
add
add
add
add
add
add
fsubrl
imul
cmc
or
add
add
mov
add
into
add
mov
gs
jl
pop
test
mov
cmpsl
and
ljmp
add
add
incb
mov
jle
inc
mov
notl
sub
stos
xor
outsl
cmp
mov
test
add
add
push
into
adc
lcall
and
stos
mov
mov
outsb
sti
xchg
adc
ljmp
dec
mov
xor
daa
int
and
xchg
xor
out
aam
sahf
sbb
add
add
fistps
jno
aam
add
mov
out
mov
mov
add
add
out
stc
pop
dec
xchg
out
cmpl
mov
add
adcl
xchg
addr16
dec
cli
adcb
push
pop
subb
add
add
sub
mov
scas
dec
hlt
pop
fsubrs
jecxz
dec
notl
mov
jp
lods
mov
cmpsb
push
in
xchg
sub
add
add
push
arpl
test
sub
add
add
cmp
loop
xchg
fsubrl
jb
outsb
xor
outsb
mov
sub
cmpb
imul
or
add
add
mov
sbb
popf
xor
movb
add
add
mov
daa
mov
adc
add
or
add
pop
cmp
int
mov
push
mov
test
cmp
cmp
dec
add
add
outsl
jb
xlat
mov
leave
stc
dec
cld
imul
add
int3
xor
add
nop
js
add
ss
mov
jg
xchg
push
je
add
aam
xchg
imul
mov
add
dec
add
add
xchg
repz
cmp
and
mov
jns
into
loope
jnp
push
or
or
out
ret
cmpl
add
add
add
add
aam
or
jnp
loop
mov
mov
mov
cltd
push
jb
jmp
mov
and
aas
dec
js
jnp
adc
mov
in
fstl
rcrl
xor
mov
adc
lods
cmpsl
mov
add
add
outsl
dec
push
scas
add
addb
sub
popa
dec
add
add
fwait
sbb
push
test
jns
sbb
out
xchg
cld
mov
pop
ss
sbb
adc
ret
sahf
mul
adc
int
cmp
xchg
leave
aam
cmpsb
test
shrl
mov
xlat
jg
insl
sub
testb
and
add
mov
jg
mov
sub
add
add
and
stos
lock
add
add
pop
sub
add
add
enter
lahf
int3
outsb
jmp
negl
ss
je
lods
cld
add
add
push
pop
or
sbb
test
xchg
pop
fisubrs
add
add
or
iret
idivl
sbb
push
cltd
fsubrs
add
add
inc
add
add
in
xlat
add
stc
and
adc
mov
xchg
or
add
add
inc
fstp
dec
and
repz
inc
jno
adc
mov
outsl
adc
push
jp
dec
mov
sub
add
add
adc
outsb
ja
scas
jne
sbbl
push
mov
sub
call
add
add
add
jae
add
mov
mov
cmp
push
addr16
jae
rorl
iret
int3
js
xlat
mov
adc
xorl
loop
mov
and
add
mov
shr
popf
data16
or
sti
push
lcall
ret
cmp
ret
adc
loopne
lahf
sbb
dec
mov
xor
bound
adc
jge
iret
push
lea
lea
mov
add
add
mov
pop
xchg
inc
in
movsl
shrl
xor
mov
in
sbb
sub
add
aas
out
mov
fldt
test
ret
adc
sbb
push
leave
adc
lods
test
xchg
or
add
add
pop
in
mov
out
add
push
rcl
sahf
lret
jns
sar
test
enter
shll
mov
aas
inc
mov
add
add
fsubrl
push
iret
out
dec
pusha
add
add
ret
ret
scas
lods
lods
popa
int
mov
dec
xor
and
outsl
jmp
jnp
xor
jg
fs
sub
add
add
add
add
push
cmp
add
add
or
add
inc
jle
mov
jmp
dec
mov
popf
xor
pop
loopne
jle
clc
jle
cmc
movsb
loop
xor
in
mov
adc
mov
lahf
jp
rcl
jge
sub
add
add
roll
add
aam
scas
mov
add
bound
outsb
mov
mov
add
add
pop
jne
add
add
fs
stc
push
sbb
rorl
scas
test
lret
outsl
pop
jecxz
out
leave
pop
inc
iret
push
aaa
jp
mov
adc
jecxz
cmp
mov
xor
fidivrl
add
add
jae
jno
mov
cmp
xchg
pusha
mov
cmp
shl
push
cli
add
insl
jns
out
or
mov
cmpsl
push
sti
loope
add
add
aaa
aad
jb
sub
pop
sub
pop
aaa
fsubs
add
add
outsl
subl
add
add
push
jecxz
xchg
into
rcll
add
push
cmp
mov
and
xchg
pop
test
shlb
add
shlb
jnp
dec
andl
jne
aas
testl
aas
push
xor
pop
xchg
and
sti
xchg
test
mov
testb
sub
add
add
test
and
add
push
xor
movsb
mov
in
cltd
test
stos
out
add
popa
leave
jl
leave
es
arpl
add
add
xchg
adc
mov
push
inc
xor
add
arpl
popf
enter
push
movsb
lods
icebp
insb
mov
xchg
mov
push
pop
pop
icebp
in
mov
jmp
into
sti
add
add
add
sbb
cmp
add
ja
dec
cwtl
mov
add
add
adc
cmpsl
mov
cmp
ja
lds
outsb
or
jmp
in
jmp
inc
addr16
lcall
not
mov
loopne
out
dec
jge
sarl
jg
pop
and
ffree
sbb
push
xchg
push
and
mov
into
ret
nop
sub
add
add
jp
push
rcrl
inc
dec
stos
xor
or
es
and
pop
lahf
mov
add
push
aad
xchg
outsb
stos
flds
add
add
mov
jle
sti
mov
add
add
ljmpw
mov
add
into
lret
sbb
and
mov
dec
or
add
add
jge
hlt
sub
pop
cs
jbe
mov
adc
add
add
mov
loopne
pop
sub
loop
je
data16
add
add
add
add
mov
and
add
add
cld
pop
pusha
mov
fdivl
push
daa
sub
pop
adcb
out
inc
add
add
inc
fbld
push
dec
mov
scas
add
add
add
add
mov
mov
popa
adc
mov
add
add
push
or
imul
pop
push
insb
mov
cli
or
push
xchg
mov
adc
cmp
xor
mov
jle
inc
add
add
pusha
mov
jle
hlt
jne
inc
mov
mov
adc
lahf
jb
stos
xchg
xor
mov
sti
xchg
fdivrl
idiv
js
fwait
dec
sbb
mov
rclb
loopne
inc
jg
jp
je
xor
loopne
cmp
pop
xchg
xor
enter
sub
add
add
jne
mov
adc
xor
mov
sahf
add
fistl
push
movsb
ds
stc
adc
mov
lret
add
push
xchg
mov
lods
sbb
mov
add
xchg
movsb
pop
addr16
rorb
inc
add
add
out
sub
xchg
or
add
add
dec
push
inc
pop
and
add
add
adc
jo
loopne
mov
xchg
popa
out
scas
mov
ja
negb
adc
inc
mov
push
push
into
shll
int3
mov
lea
add
add
int
fs
mov
movsl
dec
jg
movsl
inc
mov
xchg
xchg
add
add
ss
pop
xor
aaa
pop
mov
pop
jns
dec
and
andb
or
pop
and
add
add
insb
add
add
sbb
mov
sub
bound
dec
neg
pushf
mov
jg
add
imul
jb
jle
sbb
pusha
add
add
aam
es
xor
mov
les
cltd
jo
add
add
push
pop
pushf
mov
pop
cwtl
out
push
mov
or
stos
loopne
fistpll
jne
dec
mov
dec
mov
cld
mov
or
add
add
bound
mov
lods
movsl
and
add
add
jg
mov
es
icebp
jno
push
loope
or
sbb
sbb
std
push
bound
add
xor
aad
testb
add
push
push
dec
add
add
add
add
movsb
jmp
add
add
push
and
pop
mov
out
xchg
in
enter
jns
sti
loopne
test
xlat
std
mov
and
cmp
jne
loopne
xchg
push
and
into
pop
xchg
inc
mov
dec
pop
or
gs
add
shr
or
pop
xor
mov
add
cmp
and
mov
out
jmp
out
jp
in
pop
call
pop
pop
pop
xor
test
js
cmp
arpl
add
add
orl
or
lahf
xchg
loopne
jbe
mov
es
ret
sbb
sbb
mov
cmc
cmp
add
add
jmp
lret
mov
rcrb
adc
add
add
mov
stc
pushf
ret
lods
jmp
ss
imul
stos
mov
mov
in
adc
ja
mov
xchg
or
mov
aad
pop
loop
sub
add
add
popf
mov
pop
inc
add
add
adc
jo
stc
xchg
cltd
outsl
jp
les
ja
xchg
dec
stos
in
into
or
add
add
test
out
dec
dec
jge
xchg
out
and
add
add
mov
lea
mov
mov
xchg
fiadds
jo
movsb
dec
mov
mov
leave
out
pop
add
outsl
mov
dec
mov
push
adc
mov
jnp
in
insl
addr16
add
add
add
add
add
mov
out
adc
int
lcall
loopne
jp
neg
fmul
xchg
nop
mov
fsubrs
xchg
sbb
sbb
xchg
outsb
daa
aam
cmp
add
add
imul
mov
xchg
push
mov
add
add
in
add
rcll
add
shl
mov
fnsave
adc
mov
dec
js
inc
mov
in
popa
or
add
arpl
mov
xor
mov
mov
jg
cs
movsb
scas
ja
mov
push
test
add
add
add
aad
add
add
dec
add
add
add
sarl
xlat
fldcw
int3
ss
pop
pop
dec
loop
jge
adc
call
jne
repnz
pop
scas
mov
add
add
or
out
pop
test
pop
cld
jnp
shrl
cmp
arpl
dec
add
add
or
add
add
pop
mov
inc
fnstenv
jl
adc
sbb
pushl
sbb
lret
repz
add
add
add
mov
mov
mov
repnz
pop
sub
inc
fimuls
sub
bnd
test
jnp
jge
movsb
mov
lahf
jp
mov
jge
and
add
add
mov
pop
push
sbb
gs
add
add
add
lcall
push
sti
sti
add
iret
test
mov
xchg
add
push
or
add
cmpsl
jo
scas
mov
dec
xchg
jne
push
jb
inc
mov
cld
inc
stos
out
push
jmp
gs
jg,pn
xor
add
add
push
clc
mov
test
add
sti
movsb
xor
les
cld
or
add
add
jae
in
gs
sbb
xchg
pop
push
dec
movsl
cwtl
mov
add
dec
add
add
add
xchg
test
rcl
jg
jg
popa
adc
pop
std
out
cwtl
movsl
je
cmp
sub
jb
cltd
add
ljmp
pusha
add
add
add
add
add
or
cmc
sbb
sti
test
mov
xchg
inc
cwtl
shrl
add
in
lret
out
addr16
xor
jnp
pusha
add
add
dec
pusha
add
add
mov
out
pushf
adc
out
pusha
add
add
add
add
call
add
ss
mov
repnz
push
xorb
add
add
test
out
mov
jle
mov
add
inc
add
add
mov
lods
ja
xchg
shlb
sbb
fwait
inc
xor
bsf
sub
add
add
cli
sahf
sub
push
ffree
popw
mov
setp
add
or
cmpsl
mov
gs
ljmp
xor
insb
mov
sahf
sub
add
push
or
js
pop
add
ret
outsl
xor
pusha
add
add
dec
inc
push
das
jp
sub
enter
leave
or
add
add
add
xchg
leave
lea
sub
movsb
cld
dec
mov
addr16
or
add
add
jae
sub
add
add
ljmp
add
add
push
fadd
mov
add
mov
cltd
or
add
add
add
add
mov
sub
add
add
cmpsb
jg
and
add
add
insb
mov
pop
pop
mov
cs
cli
jle
loop
cltd
rcll
mov
cwtl
out
add
add
lods
js
shrb
lds
add
js
mov
push
sbb
add
add
add
add
inc
or
jnp
ja
push
jmp
popf
out
sub
add
jmp
mov
out
lret
add
add
pop
xchg
jne
je
test
mov
cmp
add
push
pop
pop
mov
out
clc
inc
xor
add
mov
es
add
add
add
inc
lahf
mov
add
add
lret
loope
and
push
bound
add
cmp
pop
cmp
add
add
xchg
xchg
cmp
add
add
add
or
adc
fs
add
cmc
movsb
mov
jmp
jmp
add
rcrl
mov
pop
xchg
ljmp
xor
ret
insl
jecxz
cmp
aas
sbb
mov
add
sbb
cmp
xor
add
add
and
add
fsubs
jo
pop
insb
mov
testl
lods
push
fmul
xchg
add
pop
imul
loop
lock
cmp
cmp
outsb
pusha
add
add
xchg
push
lcall
std
mov
mov
cmc
push
cmp
repnz
aaa
push
mov
idivb
mov
rclb
jnp
dec
mov
add
add
daa
cmp
add
rol
pop
inc
inc
add
add
push
jae
xorl
repnz
add
add
sbb
or
add
imul
fisttpl
mov
out
sti
jge
popa
pop
xchg
or
lods
add
adc
imul
pop
pop
notl
adc
jmp
mov
jp
fisubl
mov
push
leave
movsb
fcmovnb
leave
movsl
xchg
pop
repnz
add
xchg
cmpsl
inc
add
add
cmpsl
sbb
add
add
inc
fucom
or
adc
sarl
adc
sbb
mov
sub
mov
cmpsb
or
lret
add
add
vsqrtpd
add
sub
sbb
sub
lods
and
test
mov
inc
pop
lds
mov
fnstsw
xchg
mov
add
add
or
add
aad
cmp
loop
jg
stc
mov
jg
stc
sub
add
add
add
add
addb
rcrb
dec
xor
shr
jo
sbb
fists
cwtl
aaa
stos
out
test
pop
cwtl
push
inc
mov
iret
sar
mov
xlat
int3
mov
getsec
mov
push
das
das
aad
mov
jp
mov
xchg
popf
sahf
cld
repnz
scas
jo
stos
lock
mov
xchg
fldenv
mov
fcmovnu
cmp
add
add
add
xchg
aaa
rolb
push
out
pop
push
insl
pop
xchg
add
ljmp
mov
sub
dec
mov
aas
cmp
insb
add
add
add
into
repnz
push
pusha
add
add
xchg
out
out
push
or
js
add
add
sub
repnz
mov
add
add
add
push
jmp
dec
insl
in
xchg
adc
jbe
iret
cmp
xchg
pop
adc
iret
shrb
cmp
cmp
and
xorb
add
add
add
test
daa
inc
mov
in
mov
push
out
clc
arpl
add
add
add
mov
xor
pushl
iret
sub
leave
and
add
add
mov
mov
mov
dec
xlat
jno
cld
std
dec
in
imul
add
add
pop
jnp
sbb
mov
add
or
pushf
cmp
mov
nop
clc
fsts
add
add
or
add
add
jecxz
insb
mov
pop
and
add
add
push
mov
add
aaa
scas
lock
jo
ds
int
repz
add
add
sub
add
add
ficomps
mov
es
cltd
adc
shll
inc
mov
ja
ret
jns
mov
push
js
xor
add
add
xchg
mov
arpl
cmp
sahf
jmp
jno
jp
pushf
mov
mov
mov
cs
push
fwait
xor
dec
mov
jno
adc
add
add
sub
mov
sbb
xchg
or
sbb
stc
and
js
cmp
sbb
push
sub
add
adc
mov
sbb
add
add
mov
xchg
sub
add
dec
mov
repnz
add
add
mov
imul
aad
lods
fs
mov
fwait
xor
add
mov
paddusw
cmp
insb
add
add
xor
out
inc
adc
sub
add
add
cmp
dec
jmp
jns
cmp
sarb
mov
push
push
and
push
lods
rcr
enter
pop
sub
add
add
shrb
add
push
cwtl
jne
add
cli
or
sub
repz
add
add
xor
xor
int
xor
inc
outsl
outsb
popa
xor
or
and
dec
mov
jle
xchg
fcoms
and
mov
mov
in
daa
xor
push
push
push
shrl
fwait
adc
push
sahf
cmp
jg
movsb
or
pop
jp
mov
sbb
push
jp
je
mov
in
xchg
in
xor
nop
std
cmp
cld
jne
push
cmpsb
push
jp
mov
jle
fstl
outsb
fldenv
inc
xchg
fisttpl
sarl
sbb
mov
xor
js
ret
pop
sub
ljmp
iret
fisttps
movsb
push
int
sahf
pop
push
mov
mov
rolb
les
idiv
mov
cmp
add
add
mov
xor
jne
imul
add
add
add
add
add
scas
ja
in
inc
icebp
sub
jl
mov
add
mov
insl
lds
int3
outsl
cwtl
rcr
int3
sbb
xchg
sarl
dec
mov
mov
mov
add
add
cmp
and
cmp
pop
add
jmp
mov
mov
mov
or
adc
add
add
add
add
fs
or
push
pop
jb
inc
inc
xchg
xchg
loop
ljmp
out
mov
jge
mov
pop
rorw
test
imul
add
das
mov
inc
insl
push
mov
xor
rorb
and
add
add
popa
or
xlat
jle
les
adc
jmp
pusha
add
add
inc
add
add
stc
fsubp
adc
rcrl
push
cmpb
inc
add
mov
cs
lea
add
mov
sbb
and
add
add
aaa
xor
mov
add
cwtl
dec
add
add
je
mov
mov
xchg
das
pop
pop
mov
push
insb
add
add
push
cmc
ss
idivb
out
xor
push
shl
fistps
gs
inc
add
add
aam
inc
lods
add
add
add
jmp
inc
dec
jb
call
mov
mov
inc
fidivrl
es
and
add
add
pop
scas
xlat
test
les
push
popa
cli
popa
sbb
and
dec
cmc
mov
and
jne
mov
pop
cmpsb
outsb
cld
in
push
sub
add
add
dec
add
add
out
push
jb
aam
xchg
fisttpll
leave
inc
pop
xchg
insl
mov
pop
repz
mov
jne
test
jno
out
or
or
add
add
cmp
xchg
ret
stos
mov
jp
pushf
sub
and
jbe
inc
push
out
mov
add
add
rcr
push
pop
loope
and
addb
adc
push
dec
mov
pop
push
outsb
add
add
add
jecxz,pt
pop
mov
dec
hlt
cltd
loopne
daa
call
mov
ds
iret
sbb
scas
int
clc
mov
adc
adc
mov
add
add
pusha
mov
ret
out
inc
add
add
cmp
add
add
add
xor
sub
add
sub
mov
add
add
add
add
mov
mov
add
add
add
xor
insb
add
add
es
rclb
fcomp
adc
lcall
jno
mov
mov
xchg
dec
test
nop
sbbb
pop
sub
or
pop
or
sbb
pop
pop
repnz
shl
mov
insl
mov
jno
cmp
add
add
out
add
dec
les
add
add
add
add
add
or
add
add
ret
nop
hlt
mov
jae
push
pop
and
add
add
and
add
add
mov
add
add
rcrb
jnp
in
mov
sti
mov
xor
cwtl
stos
outsb
sbb
cmp
mov
mov
mov
aaa
adc
add
add
add
add
and
movsb
mov
sti
xchg
shr
aam
push
or
sub
mov
jg
imull
fs
mov
mov
dec
mov
and
dec
jns
push
jl
lcall
sti
cmp
enter
push
out
std
bnd
cwtl
js
fistpl
fbld
sbb
jle
pop
sub
mov
pusha
add
add
inc
xor
pop
das
mov
adc
add
inc
cmp
inc
jl
pop
andl
stos
and
inc
jl
rol
push
mov
add
add
jns
sub
scas
leave
test
add
add
or
add
add
add
pop
shlb
repnz
fidivrs
jae
add
add
add
inc
mov
pop
xchg
cmc
add
bound
jbe
and
jg
addr16
repnz
mov
cmp
in
mov
fsubrp
xchg
and
sub
adc
add
add
mov
pop
movsb
xchg
das
mov
add
add
in
add
outsb
xchg
dec
sarb
xchg
mov
add
mov
mov
clc
daa
push
cmpl
rcrb
fwait
jne
adc
pop
std
loopne
xlat
lret
arpl
cwtl
mov
dec
mov
sbb
or
add
add
stos
mov
loop
cmp
mov
lods
add
add
add
and
add
add
outsl
sbb
aas
iret
jge
sub
add
add
adc
pop
pusha
add
add
pop
inc
or
mov
les
repnz
out
jb
xlat
and
scas
into
jg
adc
lcall
add
add
cwtl
sub
add
add
add
add
fistps
jns
add
add
lret
pop
bswap
icebp
in
mov
add
fmul
stos
inc
add
add
pop
push
test
movsl
cli
clc
daa
loop
sbb
shrl
orl
mov
sub
add
add
add
pop
adc
hlt
into
inc
and
push
and
add
add
in
mov
and
andl
inc
mov
ja
xor
mov
mov
loope
jno
sub
add
add
xchg
daa
and
add
add
and
inc
add
add
jle
inc
add
add
repnz
stc
nop
add
inc
add
std
mov
add
loopne
mov
dec
add
add
add
nop
add
test
mov
jl
repnz
int3
aad
cmp
add
mov
jb
into
je
jge
test
fwait
out
mov
sarb
xor
orb
std
imulb
int
pop
aas
and
hlt
cs
xor
rorb
lcall
fwait
push
pop
cmp
jg
shr
out
outsl
mov
xchg
or
mov
adc
push
stos
dec
aaa
and
es
mov
push
push
and
jae
repnz
dec
mov
scas
sbb
add
add
mov
rolb
adc
dec
cmp
andb
add
mov
cmpsl
push
int
push
out
lock
sbb
ret
ret
movsb
pop
jle
mov
push
push
xchg
test
jg
or
add
add
mov
add
add
mov
dec
add
add
fucomip
dec
mov
xor
shrl
or
add
add
adc
sbb
loope
xchg
mov
adc
mov
ja
loope
nop
int3
icebp
movsl
jne
jmp
pop
in
jns
lds
add
add
sub
add
add
setle
mov
mov
movsl
sub
add
add
add
sbb
add
cmpsb
or
and
add
add
add
add
jno
inc
call
xchg
add
les
sub
xchg
push
sub
push
sbbl
inc
push
fdivrp
mov
mov
xchg
mov
pop
cmp
add
add
jle
add
add
push
loopne
mov
fdivs
mov
add
add
mov
push
jmp
or
sbb
lcall
add
test
xlat
mov
add
mov
add
dec
add
add
scas
inc
mov
add
add
jl
xchg
mov
add
add
loopne
icebp
test
add
add
add
data16
mov
adc
sahf
push
push
fldl
jp
pop
lods
test
imul
ja
mov
es
add
ds
mov
cmp
xchg
add
add
add
mov
xor
add
orb
mov
add
add
mov
push
loop
push
xor
sbb
dec
js
dec
adc
xchg
rclb
outsb
out
push
sub
lock
cwtl
sub
sbb
cmc
sub
add
add
add
add
cmp
lock
add
ja
add
add
insb
add
add
xchg
stc
inc
ja
fcmovnbe
lea
jns
xchg
leave
bound
inc
jns
inc
mov
add
fisubs
ror
popa
inc
add
add
and
add
add
or
add
add
das
lahf
lock
xchg
sub
add
inc
add
add
fstps
add
add
push
pop
movsb
add
and
cld
or
inc
aad
jp
ficomps
sbbl
sbb
add
add
das
jns
mov
sbb
mov
test
push
adc
add
cld
cmp
pop
sahf
sbb
pop
cld
xor
push
mov
inc
stos
in
push
dec
dec
js
add
add
int
enter
cmc
stos
sar
ja
jg
jle
mov
jp
pop
into
sub
add
add
mov
jl
std
rcll
add
add
add
sti
cmp
push
out
mov
xchg
and
add
add
jl
jmp
pop
cmpsl
pop
adc
mov
arpl
addb
add
xchg
jp
sbb
mov
adc
lods
test
mov
pusha
add
add
cmc
cmp
add
or
add
add
sub
subl
add
add
add
es
into
dec
mov
jmp
dec
inc
mov
cmc
dec
negl
pop
bound
push
mov
mov
and
add
add
add
adc
add
add
add
add
mov
xchg
enter
jb
mov
add
add
push
pop
xor
add
add
push
jb
dec
add
add
xor
adc
add
add
xchg
lods
aad
pusha
add
add
les
add
add
std
rcll
adc
mov
insl
xchg
daa
enter
xor
dec
xor
fwait
ror
xor
sahf
sbb
leave
orl
add
add
loope
xor
jb
in
outsl
mov
das
and
jb
add
add
add
add
and
ja
imull
add
add
cmp
dec
pusha
add
add
iret
data16
in
dec
xchg
cltd
popa
mov
sub
scas
clc
sbb
les
pop
imul
mov
cmpsl
outsb
test
scas
sbb
add
add
test
pushf
sbb
mov
inc
xchg
daa
cli
xchg
dec
inc
cmp
addr16
inc
pop
jbe
mov
mov
xchg
sbb
mov
inc
out
sub
mov
scas
in
into
inc
clc
jmp
test
and
shlb
ret
sti
sbb
jae
fcoml
stos
repz
pushf
popf
lock
in
and
pop
cmc
sbb
and
fwait
sbb
aam
sbb
add
add
jo
scas
xorps
sbb
ljmp
jae
and
fistps
fcomip
aas
xorb
or
sub
inc
dec
mov
add
lret
jne
out
ds
push
cmp
mov
mov
scas
stos
push
mov
add
jb
mov
add
add
sub
dec
push
imul
mov
xchg
icebp
hlt
mov
add
cmp
enter
push
rcl
in
sbb
adc
sub
and
sbbl
adc
jno
loope
or
add
add
add
add
clc
fistpll
mov
sub
cmp
add
add
add
out
ficomps
adc
xchg
mov
mov
pushf
inc
mov
mov
add
add
add
add
cli
test
add
add
pop
mov
cwtl
jle
movsl
hlt
out
cmpsb
dec
shlb
into
fcompl
mov
add
add
xor
test
push
scas
test
cmpl
fidivrl
jmp
mov
cmp
pop
pop
rorb
jo
inc
aas
mov
adc
sbb
pushf
sbb
add
add
xor
add
test
push
xchg
das
clc
sti
fsubrp
aam
test
mov
add
add
add
add
and
add
add
add
add
repz
ret
inc
mov
std
adc
in
xchg
xor
rol
mov
jno
mov
lret
xor
pop
je
fistpll
pop
push
fnsave
cmp
xor
add
add
sub
add
add
jecxz
aaa
shrl
movsl
in
pop
int3
fmulp
mov
sub
adc
add
add
loop
jo
cs
adc
add
add
add
dec
outsl
xchg
add
add
mov
fisubl
fnstsw
xchg
mov
mov
ss
stc
gs
xchg
rcrl
subl
xor
add
xchg
out
dec
mov
xor
add
mov
rorl
add
pop
dec
fistps
in
jp
ror
or
add
add
movsl
popa
push
dec
leave
cld
and
outsb
fsubrp
lret
mov
sub
cmpsl
jnp
sbb
cmpsb
int
adc
and
movsb
addr16
add
add
add
mov
mov
jno
pop
or
out
fdivrs
push
inc
add
add
add
pop
loop
pushf
jo
loope
push
adc
mov
hlt
mov
add
add
dec
sbb
add
xchg
inc
repz
sub
add
add
add
add
add
add
pop
std
adc
add
add
ret
cltd
push
cmpsl
add
add
cmp
add
add
lret
push
lods
xor
das
in
gs
daa
loopne
lods
push
sbb
xchg
or
mov
add
int
adc
dec
bound
push
xor
scas
jne
mov
sbb
enter
std
lods
mov
adc
xchg
out
add
add
pop
lcall
enter
adc
enter
add
add
dec
data16
pop
mov
subl
hlt
jp
ret
ja
push
fwait
mov
loope
int3
dec
inc
mov
dec
dec
adc
add
add
or
xor
imul
int
scas
jo
test
icebp
jae
enter
add
popa
sti
and
dec
add
add
int
dec
add
add
xchg
icebp
loop
and
add
rolb
add
add
lret
outsl
cli
mov
and
jbe
fbld
add
add
mov
mov
ret
jge
out
xchg
mov
ss
rcll
add
add
stos
jmp
repnz
or
repnz
inc
cmp
aam
push
int3
or
dec
lock
lea
dec
mov
adc
mov
add
in
and
ds
lock
and
adc
mov
js
sbb
pop
mov
test
add
dec
mov
es
pusha
add
add
imul
and
stc
ror
sbb
add
add
and
add
add
add
add
push
push
xor
xor
out
ljmp
mov
add
add
ret
xor
icebp
test
lahf
dec
jo
fildl
jg
or
adcl
mov
push
arpl
push
hlt
inc
dec
xchg
jb
mov
jns
shrl
jno
inc
mov
cmpsb
inc
fsts
add
add
sbb
jecxz
dec
xor
xchg
popf
les
imul
pop
jo
mov
push
lock
lods
cwtl
loopne
bound
or
add
add
mov
js
rcrb
pop
cmp
add
inc
stos
roll
and
ljmp
pop
pop
push
jl
aam
sub
add
add
rcrl
or
add
stc
imul
into
dec
push
cmpsb
push
add
icebp
push
adc
fldcw
add
lahf
sbb
leave
cmp
push
adc
jnp
ret
pop
mov
and
add
add
add
lcall
and
pop
jg
inc
xor
cmpb
dec
add
add
xor
ficomps
cmp
bound
mov
filds
add
add
mov
add
add
add
add
fnstcw
sub
pop
cltd
shrb
and
sbb
in
std
addl
cmpsb
sbb
out
add
add
push
adc
cmp
mov
incb
cltd
test
insl
pushf
add
add
add
aad
xchg
daa
mov
pusha
mov
fstpl
rorb
add
cmpsb
movsb
enter
test
push
jge
or
fcompl
push
int3
inc
mov
fcoms
int
sbb
sub
stos
push
mov
mov
mov
push
ds
inc
sahf
xchg
mov
add
add
outsl
les
cmp
outsb
xchg
jae
cs
add
add
add
addl
xchg
hlt
popa
xor
or
cltd
ficoml
or
dec
cmpsb
cmpsl
jae
inc
add
add
xor
cmp
faddl
pop
arpl
ja
pushf
aaa
jb
aas
int3
iret
fs
cmpsb
stos
add
frstor
cmpsb
es
int3
outsb
cmp
mov
mov
cmp
in
jle
cmc
dec
loopne
jnp
mov
icebp
push
ja
push
xchg
int
and
frstor
add
add
add
fdivrs
cs
dec
shlb
add
mov
or
aad
and
xchg
loop
out
mov
jl
stc
dec
outsb
fstl
mov
dec
mov
xlat
call
add
add
nop
loope
js
push
loopne
add
add
addr16
xchg
jb
bound
add
int
jecxz
or
add
add
je
xor
ret
fisttpll
add
add
stos
in
call
insl
mov
jmp
add
sub
add
clc
and
xchg
dec
fst
and
add
add
and
add
add
out
cmpsb
dec
lret
pop
into
mov
pop
int
jb
jmp
loope
sbb
adc
addb
xor
ret
and
add
add
orb
insb
add
add
out
push
push
xchg
out
xor
or
popa
ja
xchg
cmp
push
push
mov
push
les
pop
fadds
mov
out
out
jno
jp
outsb
push
sub
add
add
mov
loopne
mov
sbb
aam
mov
xor
inc
mov
addr16
mov
in
and
add
add
aaa
push
jg
mov
mov
shll
mov
dec
pop
imul
rolb
pop
popf
rcl
dec
mov
or
add
mov
into
adc
or
xchg
clc
cmp
jns
or
push
mov
sbb
mov
xor
shl
mov
push
fs
cli
cmp
pop
mov
dec
cmp
adc
xchg
je
arpl
mov
cmp
insb
add
add
push
sub
add
add
syscall
push
sbb
enter
ds
add
add
fucomp
pop
adc
gs
imul
jae
inc
loope
int
shl
xchg
push
mov
and
add
add
add
add
and
mov
jmp
mov
add
add
add
add
outsl
adc
xchg
mov
mov
pop
ds
jl
mov
add
add
movsl
lock
pop
adc
dec
rolb
dec
xlat
ja
shlb
add
imul
cmpsl
jl
sbb
mov
aad
mov
in
stc
in
bound
out
or
add
add
jns
jns
loop
pusha
add
add
adc
hlt
cmpxchg8b
add
cwtl
xor
push
aam
es
andb
add
imul
xor
or
sub
push
jnp
and
js
mov
fcmovne
xchg
popl
lds
into
addr16
sbb
cmp
mov
pop
jle
jmp
mov
add
push
or
add
add
mov
fcoms
cltd
loopne
pop
rclb
jle
jmp
or
add
add
daa
jbe
test
xchg
mov
sbb
call
mov
mov
xor
sub
pop
and
leave
adc
ljmp
add
add
push
mov
decb
jl
test
ja
jae
push
cmpsb
bound
adc
jl
movsb
sti
push
repz
push
xchg
hlt
adc
add
lds
mov
mov
stos
iret
int3
mov
in
stos
mov
jo
add
add
jge
sbb
or
add
add
pop
and
add
add
ror
fwait
ss
jno
sbb
data16
pusha
mov
adc
add
add
mov
pusha
mov
pop
mov
jl
mov
cmp
stos
lods
jbe
or
add
add
mov
popa
jo
in
aaa
test
popf
adc
mov
ss
cmp
sub
add
add
lcall
cmp
imul
fisubs
add
add
xor
xchg
shll
add
add
repnz
adc
movsb
test
pop
cmp
ja
repz
add
mov
add
js
dec
mov
push
xor
and
sub
jg
lds
sub
sahf
jmp
jmp
xchg
rcll
add
inc
jmp
add
imull
push
mov
nop
testl
inc
mov
loope
mov
sbb
or
outsl
jo
ljmp
add
into
add
pushf
ficoms
int
or
xchg
push
or
cmc
mov
sbb
add
addr16
les
dec
sub
leave
jecxz
xorb
push
movsb
add
add
add
arpl
movsl
cld
xor
lods
stos
add
add
cmc
jb
lock
mov
andb
aas
xchg
and
add
add
adc
cs
test
or
sbb
push
mov
adc
icebp
xchg
lcall
cli
mov
stc
fisttps
fwait
inc
test
jecxz
outsl
nop
jp
cmpsl
leave
rcr
inc
jbe
aam
std
scas
dec
sub
mov
add
pushl
iret
push
push
arpl
test
mov
jmp
mov
add
push
xor
add
xor
cld
mov
into
xor
out
in
lds
pop
nop
outsb
sbb
jl
mov
das
or
push
mov
mov
rolb
cmc
adc
pop
xchg
dec
aas
pop
or
add
add
add
ljmp
int3
sbb
jne
or
popa
subl
mov
lahf
arpl
daa
xchg
and
add
add
adc
testl
push
fisttpl
andb
imul
scas
cmc
movsb
xchg
cmpsb
inc
std
cmp
or
pop
jl
dec
adc
mov
pop
adc
add
add
add
pushl
outsl
in
shl
lret
adc
int3
or
add
add
repz
xlat
mov
cmc
fbstp
mov
push
popf
dec
ss
or
cmp
or
cmp
add
add
add
dec
sub
add
add
add
and
add
add
test
add
add
jb
pop
je
push
dec
push
sbb
push
mov
add
add
adc
mov
add
add
cli
clc
mov
ds
out
or
frstor
add
adc
flds
add
hlt
add
das
xor
jae
push
imul
add
add
aas
pop
push
mov
or
mov
push
orb
mov
mov
insl
leave
dec
cmp
sbb
mov
outsb
push
xchg
mov
out
jl
fistl
xchg
in
lock
sti
sbb
aam
sbb
sahf
les
dec
add
add
sbb
push
cmp
add
add
add
jns
mov
adc
stos
data16
adc
adc
pop
inc
push
ja
into
ss
mov
sbb
les
mov
add
sbb
xor
inc
add
add
les
lea
mov
and
add
test
inc
fdivs
add
loopne
mov
and
lcall
test
enter
sahf
icebp
sub
sar
ret
inc
ljmp
mov
add
push
imulb
mov
push
dec
xor
jl
cmc
sub
add
add
add
add
xchg
pop
cli
add
lcall
imul
lret
mov
insb
add
add
sahf
and
inc
out
repz
iret
pop
jae
test
mov
and
pop
inc
pop
jmp
das
loope
fdivrs
dec
mov
sub
add
add
imul
dec
mov
mov
gs
mov
inc
mov
push
ret
pop
pop
pop
lds
sbb
ljmp
dec
add
add
inc
movsl
stos
pop
test
cmp
add
add
enter
push
mov
dec
loope
add
add
fisttpll
mov
inc
gs
jnp
mov
mov
mov
imul
add
push
push
push
mov
push
cmp
ljmp
sbb
adc
add
add
add
dec
mov
cmpsb
shl
pop
icebp
pop
fmuls
add
add
ret
adc
add
add
adc
ss
mov
push
mov
mov
jnp
xchg
ret
std
rorl
xor
add
add
gs
or
add
add
add
add
add
add
mov
jmp
add
add
xor
mov
mov
mov
mov
daa
cwtl
in
add
mov
loope
dec
lret
mov
pop
xchg
out
mov
test
jge
mov
pop
inc
xchg
sbb
add
inc
icebp
pop
push
pop
cmp
outsl
fstps
adc
push
dec
jnp
adc
in
insl
lock
mov
aam
add
add
add
rcll
jp
sub
aaa
sbb
cld
add
in
xchg
call
push
ds
rcr
jo
jae
sbb
mov
pusha
add
add
jne
cs
sbb
inc
ds
xchg
in
lret
pushf
pusha
mov
fidivs
inc
push
cmpl
dec
mov
xchg
adc
out
mov
sub
pop
lods
fadds
add
jae
add
add
add
stc
mov
add
add
sbb
movsb
lcall
sbb
pop
jnp
js
mov
fadds
ret
sub
add
add
loop
mov
stc
fsubp
inc
push
inc
cmpsl
sarl
push
jle
mov
dec
sub
add
adc
mov
sar
sti
out
mov
xchg
xchg
jl
pop
mov
sbb
mov
cmp
add
add
mov
jne
jb
sub
jno
fdivl
fidivl
add
add
add
add
and
mov
adc
sub
add
fbstp
ret
sbb
add
insb
add
add
pop
ljmp
out
in
lcall
arpl
je
mov
and
add
add
int3
call
push
mov
push
xchg
push
sub
add
add
add
add
lret
outsl
push
mov
or
outsl
lret
xor
out
aam
je
bound
add
add
mov
cmp
add
lea
add
mov
jmp
repz
pop
adc
add
add
adc
daa
jle
pop
test
bound
sbb
mull
add
add
testb
add
add
bound
xor
cs
push
mov
inc
clc
jl
push
lret
xchg
mov
push
popf
sub
add
add
test
mov
add
add
xor
lds
fistpl
mov
sbb
cltd
inc
mov
add
add
adc
add
add
mov
inc
sub
add
add
in
fstpt
jmp
pop
pop
cmc
jmp
add
add
aas
pop
mov
fldt
mov
push
cmp
sub
add
add
add
fidivrl
js
lcall
mov
mov
mov
lret
and
stc
dec
mov
es
and
add
add
add
add
xor
jge
imul
add
inc
jp
mov
add
add
add
add
xchg
out
jnp
jno
insb
mov
push
jno
mov
jno
jns,pt
imull
lock
into
cmp
add
add
add
add
ds
xchg
cmp
jae
push
push
popf
mov
or
int3
es
pop
mov
cmp
mov
dec
mov
mov
add
jge
push
mov
jp
mov
jl
test
daa
js
jmp
ficompl
in
pop
adc
pop
xor
sbb
fsts
fisubs
shlb
push
cwtl
or
pop
scas
push
pushf
dec
dec
push
pop
mov
out
popf
fnstsw
subb
add
and
add
add
mov
repnz
pop
outsl
inc
add
add
std
xchg
orl
pushf
xchg
fsubrs
int
xchg
xchg
je
rcll
push
fsubp
add
lods
cmp
out
pop
inc
jp
cmp
lea
xchg
push
in
aad
fiaddl
mov
jns
mov
fwait
mov
std
and
push
mov
mov
lret
cs
pop
and
jle
imul
inc
mov
loopne
mov
arpl
adc
fldl
addr16
lea
add
add
add
mov
call
add
outsl
imul
add
rorl
imul
add
add
fmull
aas
mov
or
add
add
std
xchg
lret
lds
add
add
std
leave
or
sbb
rorl
add
add
add
add
cmpsl
int3
lahf
xchg
add
add
add
add
add
jle
push
sarb
sti
or
jo
negl
and
add
inc
cwtl
or
add
add
jle
bound
faddl
mov
mulb
or
pop
xor
add
add
inc
test
scas
ficomps
pop
dec
jge
fldt
mov
mov
movsl
xchg
in
dec
ror
lods
popf
or
push
jg
inc
and
add
add
adc
xchg
mov
push
out
repnz
sbb
mov
and
add
add
add
add
or
inc
sub
mov
add
add
lock
push
jae
xor
sbb
inc
fidivrl
add
mov
pop
adc
adc
add
add
movsb
pop
movsl
mov
mov
sub
add
add
add
mov
cmp
xchg
cltd
mov
mov
cmp
mov
fidivrs
aaa
sub
add
add
cmovnp
je
mov
ja
stc
arpl
mov
cs
xor
out
int3
test
add
dec
mov
and
scas
sar
outsb
mov
js
jb
insb
mov
les
and
xchg
test
ret
add
add
add
add
icebp
dec
jbe
and
xchg
xor
cmp
mov
add
add
push
jge
mov
mov
dec
adc
hlt
mov
push
repnz
ljmp
fidivs
add
add
add
fildl
mov
js
push
cmp
add
in
sbb
mov
adc
add
outsl
adc
loopne
jg
xor
add
add
xchg
push
sub
add
add
stc
cmp
mov
in
mov
mov
mov
add
sti
jl
fists
xchg
push
xchg
test
aam
repz
stos
push
sbb
xorb
mov
pop
push
mov
add
push
cld
inc
dec
add
dec
mov
mov
add
add
pushf
jns
jb
mov
ss
mov
pusha
mov
rcrl
xchg
add
add
les
and
jns
sarb
mov
pop
xchg
mov
out
push
cmpps
fsub
andl
aam
push
gs
ficoms
lods
test
push
or
sub
cld
jno
mov
add
xchg
insb
mov
pop
orb
mov
dec
mov
call
fwait
es
cmp
xor
sbb
add
fimuls
mov
xchg
sbb
mov
add
jb
add
add
cmp
shll
test
loope
pop
in
mov
call
mov
lcall
sbb
outsl
or
add
add
sbb
pop
mov
lods
adc
dec
lds
and
mov
add
or
add
add
sbb
cmp
xor
add
pushf
mov
push
rcll
rorb
add
insb
add
add
add
add
add
shrb
xor
std
mov
iret
mov
insb
mov
lods
in
je
je
dec
add
add
cmp
push
cmp
cwtl
sbb
add
add
jp
cwtl
outsb
jp
clc
inc
lock
lods
push
pushf
das
inc
sbb
and
add
add
cmc
jl
or
push
fadds
mov
mov
sbb
mov
sub
add
add
je
pop
xor
jge
push
adc
add
fucomip
jg
push
iret
mov
shlb
jae
pop
mov
push
in
mov
aaa
add
push
fwait
pop
push
push
mov
sarb
fs
push
and
add
add
adc
scas
add
add
add
cltd
push
in
sub
add
rolb
dec
ja
push
mov
or
add
add
test
rol
xchg
add
add
mov
mov
xor
ds
les
push
notl
add
add
clc
and
add
add
sbb
sbb
test
sub
dec
add
add
lcall
mov
std
mov
nop
jns
push
push
mov
outsl
les
imul
jno
mov
sahf
add
add
add
js
sar
push
and
or
hlt
inc
push
fstpl
mov
and
jbe
dec
add
add
jo
iret
mov
push
mov
out
jle
movsw
movsb
adc
xchg
push
jecxz
out
ret
lods
pop
and
fsubs
mov
cld
push
les
adc
adc
dec
das
pop
sub
pushf
inc
adc
mov
addl
sub
add
add
or
jo
or
add
add
aaa
mov
stos
test
rcrl
add
add
in
fsubs
inc
add
add
xchg
xchg
dec
sub
sub
add
add
add
add
hlt
cmp
repnz
mov
jo
and
dec
jne
xor
xor
ret
or
add
add
xor
mov
out
pop
adcl
jecxz
jle
adc
cld
push
scas
jae
mov
push
inc
rcrb
or
jno
mov
xlat
mov
and
add
add
add
push
jge
xor
hlt
faddl
add
add
mov
xchg
insl
jmp
aam
or
mov
cs
mov
mov
mov
repnz
add
add
pop
out
jmp
pop
jbe
mov
leave
loope
sbb
out
xlat
sti
rcrb
arpl
xchg
adc
inc
mov
mov
mov
arpl
or
add
add
scas
iret
cmp
fistpll
mov
pop
shlb
test
sub
add
or
outsl
lock
xchg
sbb
add
add
add
scas
lret
rolb
mov
sub
add
add
out
fs
pop
mov
dec
repnz
mov
add
add
add
push
fmuls
popa
jne
xchg
ror
int
pop
or
add
add
mov
adc
ret
arpl
add
add
xchg
pop
and
add
mov
fistl
out
adc
xchg
mov
mov
test
mov
add
add
sarl
mov
sahf
out
insb
add
add
ret
outsl
and
aaa
sub
xor
pop
xchg
pop
dec
sbb
add
add
mov
pop
adc
loopne
test
pop
es
ffree
imul
int3
sub
popa
sbb
add
add
out
xor
mov
jo
aad
fstpl
push
rclb
mov
cmpsl
dec
adc
test
lods
aam
ret
scas
test
xchg
xlat
cmp
jecxz
mov
stc
inc
mov
add
in
ss
lahf
fildl
add
add
cmp
push
nop
xchg
inc
mov
pushf
lret
repnz
pop
rcrl
mov
mov
aad
pop
outsl
aaa
push
xchg
popf
je
adcl
xchg
test
mov
pop
sbb
aam
adc
lods
push
lcall
mov
fwait
pop
popf
pusha
add
add
mov
add
add
jae
sub
into
mov
add
mov
push
rcrb
add
or
add
add
sbb
ljmp
jb
jnp
cmp
add
add
jne
into
inc
inc
lods
scas
pusha
add
add
stos
sub
add
push
enter
pushf
aam
push
pop
push
js
test
add
rcl
outsb
out
lret
push
cmp
int
ss
mov
pop
adc
mov
sub
jns
das
and
out
filds
add
add
aas
cwtl
mov
add
push
cli
mov
enter
addr16
or
fisttpl
repnz
mov
aad
cltd
icebp
nop
mov
add
pop
fistps
imul
lods
and
rolb
push
push
cmp
addl
add
sahf
or
stc
cmc
mov
adc
fmull
add
mov
sub
add
out
ret
sbb
int3
loope
and
add
add
popa
xchg
lods
fdivrl
add
add
add
jb
into
cmp
push
and
aad
xchg
insl
or
add
fadd
rep
inc
mov
lahf
outsb
test
add
mov
add
fsubrl
addl
add
ret
pop
lock
daa
xor
add
jmp
jae
gs
stos
mov
adc
add
add
mov
lds
sbb
pop
bound
push
sbb
mov
cmp
insb
add
add
out
cmc
fdiv
xor
add
pop
sbbb
pop
jns
jb
add
add
or
mov
add
push
scas
sahf
jo
ret
rol
in
stos
lock
add
sarl
or
sbb
add
add
je
add
add
add
pop
mov
imul
sbb
pushf
pop
mov
insb
add
add
dec
add
add
inc
sub
iret
in
stos
aas
mov
jge
lea
lea
xlat
jecxz
jmp
mov
lret
mov
sub
add
add
add
add
ret
add
add
das
mov
cli
push
mov
mov
xchg
push
int
in
adc
mov
fiaddl
push
dec
data16
pop
xchg
jns
mov
stos
xchg
testl
sub
data16
aaa
mov
sbb
inc
xchg
xchg
push
mov
add
inc
add
add
lods
dec
mov
ljmp
mov
icebp
jl
sub
negl
sub
cmpl
mov
pop
pop
xor
add
add
mov
mov
mov
mov
mov
out
jo
add
add
out
stos
adc
and
add
add
jle
mov
adc
repnz
stc
inc
mov
xchg
xor
push
mov
fsubl
pop
jns
or
sub
mov
stc
sub
add
add
iret
dec
dec
add
add
dec
mov
xor
imul
lret
incb
push
dec
ja
pop
sbb
mov
add
add
adc
cmpb
cld
imul
add
cli
lea
pushf
insb
mov
lods
ret
add
add
mov
repz
mov
xchg
sub
add
add
or
add
add
xchg
mov
gs
adc
mov
cmp
xor
mov
in
jg
dec
mov
or
pop
xchg
add
add
repnz
push
jg
inc
push
iret
movzwl
cld
xchg
mov
lods
gs
add
add
test
adc
add
xor
into
stos
xor
pop
cmc
jae
outsb
cld
pop
dec
mov
dec
jae
pop
push
es
mov
sti
push
jp
test
pop
xchg
jo
add
jl
mov
add
add
lds
and
add
add
mov
mov
mov
add
into
pop
xor
xchg
fisttps
or
mov
lock
push
pop
ljmp
mull
add
add
lods
cmp
jnp
mov
sbb
and
add
add
or
add
add
sub
mov
and
sbb
pop
or
testl
in
fisubs
add
add
inc
mov
add
add
dec
mov
fisttps
mov
jecxz
outsl
add
call
sub
mov
out
loopne
clc
dec
add
add
jp
xchg
fwait
lret
cs
mov
nop
xchg
ss
jnp
pop
and
cwtl
jle
jp
jp
dec
shlb
cmc
push
mov
dec
mov
mov
enter
mov
fcmovnb
sub
add
add
sbb
clc
push
mov
add
add
lcall
dec
popa
push
pop
cld
mov
ss
and
add
add
add
mov
cmp
out
and
mov
adc
jle
or
sbb
movsb
pop
movsl
xchg
lcall
adc
push
nop
in
test
jg
sub
repnz
cmpsl
pusha
mov
out
test
add
add
inc
in
xchg
daa
and
add
add
xor
adc
mov
pop
push
mov
cmp
lea
add
add
out
cli
icebp
jl
sahf
dec
mov
in
sub
add
add
mov
lea
xchg
adc
dec
inc
mov
enter
sbb
loope
out
lods
outsl
mov
loopne
ljmp
leave
xor
pop
add
jmp
leave
jno
inc
jb
in
jg
add
add
add
fldenv
rcr
inc
xchg
repz
ret
outsl
push
cmpsb
lcall
add
es
cmp
and
fldt
add
add
mov
mov
sbb
scas
lods
pop
pop
ljmp
fldt
in
pop
into
fwait
test
out
lods
jp
adc
add
pop
push
cmc
flds
cmpsl
push
sarb
aad
cmp
add
add
push
sub
sbb
adc
popa
xchg
lods
xchg
pusha
mov
jne
mov
mov
sub
add
add
imul
jle
xor
cltd
jp
xacquire
add
and
les
sbb
add
push
dec
add
add
jmp
push
or
cmp
in
cli
mov
add
roll
sbb
xor
fcmovnb
int
xchg
popa
inc
mov
push
mov
cs
cltd
mov
inc
mov
push
popa
cmp
inc
lcall
loope
inc
bnd
lret
pop
jae
add
add
int3
sbb
lds
jle
add
add
add
or
sbb
push
adc
add
add
scas
add
aaa
push
shll
es
stos
and
jo
and
outsb
hlt
pusha
add
add
aaa
lods
cmp
add
lret
xor
std
icebp
add
in
or
lret
mov
inc
cmp
scas
xchg
out
je
js
popf
sbb
add
push
mov
or
mov
xchg
sbb
add
add
sub
add
addr16
fstl
repz
inc
add
add
jl
fs
xor
test
dec
test
jae
mov
fsubrs
cli
or
pusha
add
add
pop
sub
rcrl
cmc
push
in
call
add
add
test
push
loop
pushf
sbb
stos
add
add
lds
test
pusha
add
add
mov
add
jae
mov
and
inc
decl
dec
cmp
imul
imul
mov
jge
lock
je
imul
in
inc
dec
mov
mov
mov
inc
stc
test
popf
adc
mov
cmp
aad
sbb
add
add
pop
sti
stos
add
mov
mov
or
das
cmpsw
sub
mov
lea
sub
jmp
sub
add
add
loopne
mov
push
sbb
or
add
add
repz
mov
or
push
lock
aaa
pop
cli
sbb
scas
push
mov
add
add
sarl
sbb
movsb
test
mov
add
sub
add
add
add
add
push
mov
dec
call
dec
mov
mov
add
sbb
es
or
mov
adc
add
enter
adc
movsl
popa
jns
je
lods
in
popl
cwtl
shr
or
cmp
rcll
ja
cmp
push
sahf
nop
sbbb
add
stos
inc
scas
jb
add
add
sbb
inc
mov
add
add
notb
popa
in
mov
stos
fsubrs
int3
pop
pop
jae
mov
mov
rorl
and
add
mov
sbb
add
pop
mov
add
add
orl
adc
sbb
imul
xchg
pop
mov
mov
jno
sbb
mov
out
lds
cmp
mov
add
add
jl
mov
outsb
out
int3
cmp
dec
mov
adc
aam
cmp
insb
mov
push
xchg
sbb
mov
mov
add
add
dec
sub
jb
xchg
scas
jno
leave
xchg
arpl
lcall
fildl
push
cmp
inc
mov
adc
loope
ret
cli
insl
in
pusha
add
add
xchg
ss
nop
push
add
outsl
int
rcrl
bound
add
add
xchg
insl
pushl
mov
mov
out
sti
fistpll
add
add
mov
mov
int3
dec
out
sbb
xchg
mov
mov
mov
or
push
pop
inc
mov
sbb
mov
push
mov
xchg
cmp
mov
add
add
in
sub
mov
inc
mov
add
inc
sbbl
pop
add
out
fsubrs
rorl
cmpsl
push
pop
rorl
test
addr16
in
dec
jnp
inc
dec
jg
js
shrl
mov
push
imul
add
add
add
add
add
add
iret
stc
fisubrl
out
sub
out
mov
jo
dec
mov
shl
push
pop
pop
test
clc
in
or
add
add
adc
ficompl
add
lret
scas
out
cmp
mov
int
aas
jne
popa
sbb
dec
add
add
or
mov
ljmp
repnz
lret
ror
xchg
stos
fs
std
sti
loopnew
mov
add
add
mov
push
bound
lret
ret
sahf
mov
and
pop
xchg
aad
sbb
mov
add
and
cmc
pop
sarb
adc
inc
out
inc
test
dec
and
add
add
jp
jmp
or
addr16
jge
scas
in
hlt
mov
mov
lock
fs
adc
pop
repnz
and
pop
sbb
jl
sbb
mul
mov
sbb
add
add
add
xchg
add
lock
mov
stc
push
sbb
fldenv
imul
jmp
add
add
loop
mov
push
mov
adc
xchg
lea
add
arpl
pop
or
add
add
cmp
jns
aad
test
daa
dec
or
add
adc
or
out
std
jno
lock
scas
sahf
inc
mov
sbb
add
test
das
mov
or
add
add
in
jno
pop
pop
movsb
sub
jns
lock
cmp
mov
mov
data16
popf
shl
jle
leave
or
jno
dec
mov
imul
or
pop
sub
jnp
lret
inc
int3
not
scas
jle
fistpll
inc
mov
add
popf
xor
lods
icebp
pop
cmp
xchg
jnp
mov
mov
ret
fcmovne
mov
inc
mov
addr16
and
test
scas
add
add
add
mov
add
add
cmp
xor
push
and
mov
mov
clc
mov
dec
jnp
ss
xchg
dec
fisubl
cmp
pop
mov
ss
cltd
enter
xor
cmpb
ds
ljmp
xchg
xor
not
rclb
iret
in
stos
push
adc
rol
sub
jp
flds
mov
ret
out
push
loopne
out
push
loope
inc
inc
xlat
dec
mov
lret
pop
xchg
shll
push
aas
mov
and
or
rcrb
ficoms
mov
out
and
jmp
rcrb
jmp
add
add
es
cmp
add
add
movsl
or
je
aad
movsl
xlat
mov
mov
dec
mov
mov
repz
jmp
and
inc
mov
negl
stos
out
insb
mov
fcomp
js
outsb
inc
sbb
sbb
add
push
and
imul
sarl
add
add
xchg
xor
repz
xlat
and
cmovge
add
out
ss
in
inc
cwtl
testl
aas
lea
rorl
mov
add
add
pop
push
movsb
xchg
push
pop
sbb
xchg
cli
enter
ret
mov
fldl
xor
xor
and
add
add
test
mov
sbb
int
in
xchg
test
imul
add
fiaddl
push
push
roll
mov
cwtl
cmp
add
add
hlt
dec
or
stc
cmp
enter
out
aaa
xchg
jp
test
popl
mov
add
xchg
and
add
add
push
addl
adc
add
add
lahf
inc
pop
leave
mov
call
insl
icebp
sbb
cmpsb
push
pop
loope
arpl
xor
cmc
push
cmp
push
xchg
sub
add
add
sar
pop
xor
add
add
fcoms
cmpb
das
jns
add
sarl
adc
xor
mov
sbb
out
mov
add
add
add
and
icebp
or
add
add
movb
mov
jp
dec
popf
cmp
push
inc
jnp
cwtl
xor
adc
call
inc
add
add
psrad
lret
pop
addr16
sub
addb
jbe
add
cmp
adc
mov
leave
add
add
add
xchg
push
enter
aas
mov
add
add
dec
stc
shll
add
add
xlat
orb
in
sarb
fwait
into
popa
pop
ror
adc
lods
cmp
cmpsb
aas
in
insl
jo
ficoms
sub
add
add
pop
std
sbb
rorb
dec
shll
rcl
fyl2xp1
sbb
jmp
jge
sbb
add
add
lods
and
add
add
dec
add
add
fisttpl
mov
fisttpll
cmp
add
jl
adc
rcr
xor
lea
movsb
mov
or
mov
cmpb
ss
mov
mov
jns
pop
fisttpll
add
add
or
add
add
and
mov
mov
imul
mov
add
add
pusha
mov
lea
dec
pop
cmp
lock
mov
orb
xor
imul
rcl
movsl
call
push
clc
insb
add
add
jnp
sbb
lods
mov
cmp
sub
add
add
xor
sbb
dec
add
xchg
pusha
add
add
call
sbb
inc
mov
ds
push
cld
test
ljmp
sub
fbld
sbb
inc
mov
nop
adc
inc
cmp
or
add
and
add
add
push
cmp
or
gs
fsts
lods
ss
enter
sbb
add
add
adc
mov
jb
adc
adc
mov
pop
dec
mov
add
add
add
mov
add
add
xor
rcrl
push
fcoml
sbb
out
inc
inc
inc
add
add
int
sbb
cmp
ja
lret
mov
pop
dec
shl
cmp
scas
cmp
aam
push
loop
ret
push
rol
jnp
add
add
cltd
jo
stos
mov
sub
aaa
adcl
mul
in
push
popa
mov
movsb
jmp
in
hlt
mov
stos
xor
das
adc
data16
test
mov
push
inc
add
add
jmp
mov
mov
add
add
adc
movsb
cld
subl
add
add
sub
cli
dec
movsb
xor
add
add
movsb
mov
push
data16
add
add
mov
mov
add
add
imulb
mov
bound
sbb
pop
push
add
add
push
sub
in
mov
inc
cs
pop
daa
sbb
lds
dec
sub
add
repnz
add
add
mov
and
pop
push
test
add
add
and
add
add
test
or
sub
add
xor
mov
outsb
jmp
add
outsb
mov
pop
jg
xchg
cmpsb
cmp
or
add
adc
jl
inc
or
add
add
add
mov
fimuls
add
add
pop
std
mov
add
add
lea
inc
add
dec
xor
pusha
add
add
int
je
cmp
xor
test
das
fisubs
push
add
add
add
add
push
icebp
jnp
add
add
out
dec
or
mov
sub
outsl
sub
or
cwtl
repnz
and
push
mov
add
add
jno
mov
mov
push
fdivrs
stos
mov
push
rcll
ss
cli
sub
movsl
popf
dec
adc
add
add
sub
mov
add
add
fcomps
movsl
fstpl
fisttpll
mov
or
add
add
lock
mov
mov
mov
pop
int
pop
mov
lods
jg
jbe
repz
and
add
add
sti
div
dec
xor
inc
add
sarb
inc
mov
xchg
loop
xchg
imul
add
inc
aas
cmp
mov
pop
adc
and
fstps
push
mov
lahf
mov
rcrl
push
in
out
mov
movsb
popa
dec
scas
enter
sahf
pusha
add
add
test
movsl
xchg
in
push
daa
jmp
xchg
mov
hlt
call
loope
or
aaa
cmpsb
or
cmp
cmp
mov
stos
stc
stos
xrelease
add
cmpsl
jmp
adc
xor
sbb
pop
mov
ss
add
add
pop
pop
push
and
inc
jns
movsl
push
and
or
add
lahf
cwtl
mov
sub
fbld
xchg
loope
sti
mov
jg
cmpsb
fs
jne
sbb
add
add
ret
push
inc
mov
test
in
rcrb
test
mull
repnz
sbb
imul
add
dec
and
add
add
jbe
push
imul
imul
cs
fwait
inc
add
add
insl
pop
cmp
inc
addr16
jbe
fwait
rcrb
mov
dec
adcb
je
pop
popa
xchg
test
mov
leave
add
add
add
xchg
sub
add
add
lret
imul
or
add
add
jle
mov
jo
mov
arpl
add
add
add
add
mov
cmp
mov
mov
jecxz
mov
mov
cmp
das
push
inc
inc
add
add
adc
add
mov
push
or
outsb
ds
adc
popa
shl
int3
std
fdivrs
add
add
clc
mov
imul
out
decl
repz
sub
fbld
sbb
add
add
in
fldlg2
sbb
pop
leave
addr16
test
sbb
dec
mov
add
add
jno
add
fcompl
cmp
pop
cmp
push
out
pop
cmp
mov
jae
xlat
pop
xorl
add
add
push
insl
sub
push
jns
jb
mov
lds
add
add
xchg
faddl
dec
dec
jecxz
ss
aaa
lods
jge
out
sub
add
add
xchg
leave
mov
push
cmc
clc
xor
cmpsl
cmp
bound
cmp
add
rclb
clc
pop
out
ficoms
fs
ds
xchg
shlb
add
add
pop
std
inc
in
cwtl
pop
xlat
add
add
leave
fimuls
inc
arpl
fistl
xchg
pushl
scas
inc
mov
push
push
insl
inc
mov
xchg
pop
hlt
out
xchg
adc
add
add
mov
jb
jb
push
xor
lcall
ljmp
in
dec
mov
lods
xchg
ja
and
add
add
sub
add
add
adcb
push
sbb
lahf
into
loope
mov
cmp
loopne
or
add
add
or
add
xchg
mov
nop
cltd
jecxz
xor
int
mov
pushf
jns
lcall
add
add
pop
mov
jmp
sbb
jne
jno
mov
mov
add
shl
das
jp
fisubs
fisubrl
lcall
lret
add
add
or
add
add
in
and
mov
mov
add
mov
sbb
cli
je
and
mov
mov
inc
cmpsb
xor
int
loope
mov
add
push
cmp
fwait
jo
and
add
add
in
push
cmpsl
data16
pmaxsw
addb
loope
cltd
addb
add
add
jns
mov
loope
in
icebp
jl
add
add
sbb
sub
gs
es
dec
xchg
and
add
add
stos
daa
push
xor
stc
popf
loope
push
jb
mov
in
push
lea
pop
add
add
add
mov
pop
add
add
mov
sahf
inc
test
pop
or
xchg
add
push
jb
xchg
jecxz
pop
movsl
movl
add
inc
mov
sub
add
add
xor
je
jle
stos
push
and
and
add
or
lret
pop
xchg
into
test
int3
sub
das
nop
outsb
inc
sub
cwtl
mov
jns
push
sub
pop
fwait
inc
push
mov
xor
sbb
add
add
mov
leave
jo
jb
pop
jl
iret
pop
rclb
jae
mov
xor
aad
repz
xchg
mov
out
jecxz
pop
lahf
fimull
pop
jmp
js
dec
mov
lods
orb
push
inc
add
add
mov
and
aam
shrb
andl
sub
rolb
sub
lcall
xor
adc
pop
int3
imul
divb
adc
dec
call
push
andl
pop
inc
adcb
pop
in
mov
add
add
xchg
cmc
aam
pop
imul
add
ret
and
add
add
and
add
add
xchg
les
add
add
dec
mov
push
iret
xorl
mov
jo
and
push
rcrl
test
lret
les
mov
ret
lea
cmpsl
xor
xchg
sub
add
add
pop
lods
dec
lcall
add
mov
pop
push
pop
cmp
daa
nop
sub
stos
mov
shlb
addr16
push
jecxz
popa
mov
add
add
adc
imulb
and
rclb
pop
loope
pop
test
cltd
dec
popa
pop
movsl
bswap
clc
or
popw
sti
imul
and
add
add
imul
xor
dec
xchg
call
and
out
pop
inc
in
daa
xchg
adc
add
add
les
add
add
mov
add
add
shlb
js
mov
xchg
jmp
cmc
mov
mov
inc
rorb
inc
mov
add
add
in
push
dec
icebp
xor
mov
mov
adc
mov
add
sbb
mov
ja
clc
filds
in
jmp
add
lcall
push
enter
shlb
add
add
inc
mov
cli
stc
mov
fnsave
and
add
add
fdivl
add
decb
add
add
push
push
leave
or
add
add
sbb
or
das
pop
stos
stos
in
ds
mov
test
push
call
mov
add
inc
mov
add
add
add
add
add
imul
aas
in
insl
fimuls
add
add
pop
cld
mov
push
and
add
add
add
add
ljmp
mov
and
mov
fidivl
out
cmp
addr16
pop
mov
ss
mov
add
add
bound
imul
mov
gs
sub
mov
add
ja
mov
popf
negb
sbb
add
add
add
mov
mov
add
add
andl
add
jbe
mov
jne
add
add
push
outsb
and
add
add
add
add
add
add
mov
jmp
and
add
add
bound
bound
icebp
sub
adc
sti
jo
mov
add
add
insb
add
add
inc
mov
rorb
aas
jmp
inc
add
add
sbbb
sub
mov
mov
add
push
sbb
cmpsl
mov
add
add
sbb
test
test
jns
stos
pop
scas
mov
repnz
add
rolb
insl
add
daa
ja
ljmp
test
cwtl
sbb
rolb
add
add
mov
mov
testb
mov
test
aad
mov
xor
add
enter
lret
je
iret
jne
cltd
add
cwtl
rorl
fstps
xchg
pop
div
divps
add
add
add
fwait
xor
repz
or
sub
push
les
add
add
add
test
push
aad
cmpsl
mov
inc
sbb
add
add
scas
test
dec
mov
add
add
lea
add
add
jl
pusha
mov
mov
imul
add
incb
imul
out
xor
insb
mov
nop
rcrb
jne
add
add
inc
sbb
fcos
cmp
mov
lods
push
mov
sarl
dec
mov
push
inc
ficompl
pusha
mov
js
cwtl
test
add
add
mov
add
add
rcll
mov
ds
inc
inc
sbb
or
add
add
cmpsb
ret
jge
add
add
repnz
adc
add
add
inc
dec
cmc
jmp
out
aaa
leave
ljmp
and
add
add
jp
fcomps
mov
add
add
add
adc
xchg
or
cli
imul
add
cmpsl
into
or
xchg
dec
negl
jne
jmp
scas
xorb
add
add
sbb
mov
movsb
bound
inc
jae
and
stc
sub
ret
push
adc
cmpsb
lret
sti
lret
movsl
loopne
test
add
popf
jns
pop
push
in
in
jb
pop
imul
jnp
mov
jecxz,pn
arpl
xor
je
jg
mov
popf
push
inc
lret
and
add
add
in
pop
dec
mov
add
add
mov
es
jb
aam
inc
add
in
clc
xchg
ret
imul
je
out
adc
pop
add
xorl
loope
mov
fwait
xor
mov
jmp
pop
push
mov
add
loope
xorl
rclb
out
jg
or
add
loopne
imull
dec
test
outsl
clc
sbb
dec
je
pushf
mov
in
loope
loopne
repnz
push
push
jecxz
mov
ljmp
add
xchg
and
sti
pop
mov
mov
push
jle
sti
xchg
cltd
push
in
push
cmpsb
fdivl
and
xor
xchg
mov
movsb
scas
mov
pop
fadds
xor
add
inc
add
add
leave
mov
dec
fidivs
add
inc
mov
out
ss
bound
add
daa
lea
jbe
adc
add
rolb
add
sbb
je
push
nop
loope
clc
repz
lock
cld
out
iret
sahf
popa
push
idivl
imul
enter
pop
out
add
mov
sbb
cwtl
orl
xchg
lret
add
add
push
push
je
mov
mov
rcr
add
test
fcoml
es
mov
sbbb
cmpsl
pop
xor
add
orb
mov
sub
lds
add
add
add
mov
popf
sub
add
sub
aad
fdivs
out
movl
add
or
das
ret
sub
idiv
jno
inc
mov
stos
popa
outsb
subl
stc
es
xchg
pushf
mov
xchg
push
mov
daa
pusha
add
add
jbe
jecxz
jo
fwait
sti
sbb
sub
outsl
adc
repz
mov
jle
in
scas
push
int
and
add
add
cwtl
movsb
pop
out
or
js
pop
pop
sub
popa
ds
inc
ret
jno
sub
mov
or
xchg
dec
mov
loop
adc
mov
shlb
out
jmp
sahf
xor
sub
mov
or
add
add
call
mov
adc
mov
push
pop
aas
dec
scas
fwait
in
out
and
or
cmp
adc
add
add
add
bound
add
add
add
add
loop
xchg
in
mov
loop
jge
inc
outsl
jns
fwait
xchg
out
loopne
imul
out
cmp
dec
pop
xorb
jl
push
sbb
cmpl
mov
add
add
add
rolb
imul
mov
ret
subb
cmc
aad
test
mov
out
nop
dec
mov
std
lret
shrb
xchg
adc
sub
or
ret
test
pop
adc
xor
add
add
add
adc
add
enter
out
cwtl
stos
bound
sbb
xor
pop
test
mov
sub
add
add
add
add
pop
push
negb
or
cmp
xchg
in
addl
arpl
in
je
sti
cmp
add
add
aas
in
cmp
imul
add
add
add
add
cmp
fcomps
add
mov
add
add
add
add
mov
inc
dec
dec
ljmp
pop
mov
dec
mov
cli
push
mov
repz
jle
jmp
scas
sbb
sub
add
add
push
pop
ret
jnp
into
mov
cmp
ficomps
add
add
adc
add
imul
pop
cltd
andb
add
sbb
int3
sbb
mov
add
add
add
or
add
add
es
cmp
add
test
int
lods
jge
xchg
jb
sahf
lcall
adc
rcll
mov
fucomp
xchg
shrb
xor
mov
pop
fcmovnb
fwait
popa
inc
pop
mov
in
iret
push
sbb
in
out
cld
pop
scas
mov
in
adc
or
pop
mul
shll
jb
icebp
and
add
add
ljmp
mov
rcrl
cmp
adc
xor
dec
movsl
sub
add
add
mov
xchg
in
addr16
fcmovnu
cmp
icebp
xchg
dec
add
add
or
add
add
sbb
add
add
daa
mov
add
add
push
imull
add
add
add
mov
leave
mov
add
and
add
add
cld
adc
add
test
ret
xor
ret
adc
mov
xchg
test
add
add
int3
dec
lahf
inc
add
add
sbb
addr16
sti
jp
xlat
or
rcll
sbb
xor
adc
test
pushw
out
cmp
mov
lds
mov
adc
add
add
imul
insb
mov
mov
jbe
add
add
xchg
adc
cmp
push
jne
add
adc
ljmp
arpl
and
insl
aam
out
les
add
add
add
add
divb
out
in
out
imul
mov
add
fwait
clc
iret
scas
ret
and
aam
or
add
add
stos
stc
loope
lahf
push
scas
sbb
pop
sarb
mov
xchg
test
mov
mov
add
inc
add
add
cmp
inc
push
cli
outsb
mov
int3
sarl
mov
add
int3
xchg
mov
jmp
js
sbb
dec
mov
dec
out
ds
mov
movsb
je
push
cmc
andl
aaa
cmp
xchg
rorl
fistl
jno
adc
int
test
das
inc
add
add
jno
call
add
rolb
mov
rcrb
lods
xor
add
jne
and
rorl
add
lcall
and
sub
sbb
inc
in
pop
movsl
movsl
push
bound
jp
sub
icebp
repz
ss
add
add
jmp
cmpsl
push
jo
shlb
add
mov
adc
or
repz
out
shrb
add
fldt
fsubrl
daa
dec
push
sbb
inc
mov
pop
cmpsb
jecxz
adc
add
pop
or
add
add
repz
mov
xor
inc
mov
xchg
dec
and
pop
or
add
add
pop
push
shlb
cmpsb
aam
add
add
outsb
lahf
js
sarb
inc
repz
and
popa
fmuls
add
add
loope
cli
adc
jae
xchg
sub
add
add
add
add
inc
and
add
add
xor
jno
leave
sub
bound
mov
dec
mov
bound
mov
add
shll
mov
mov
push
int3
sub
add
add
iret
and
add
dec
mov
dec
xor
mov
fwait
lcall
jle
ljmp
repnz
jecxz
lret
dec
fsubs
mov
adcb
add
add
aad
in
xor
pop
mov
pushf
in
arpl
mov
shll
lahf
or
mov
add
add
add
add
aaa
mov
sub
sbb
popl
call
mov
jno
dec
mov
mov
fstpl
and
incl
inc
rorl
dec
inc
add
add
test
inc
ss
and
xchg
cmp
call
pop
repz
add
lahf
mov
inc
cmc
mov
scas
shll
lock
aaa
fs
jl
test
sub
or
cmp
inc
pop
call
scas
addr16
arpl
adc
movsb
jle
xor
leave
int
xchg
movsl
insb
mov
and
inc
mov
loope
jnp
pop
dec
cmp
add
add
mov
mov
outsl
cmp
in
daa
xor
in
mov
dec
ret
insb
add
add
dec
adcb
aas
mov
add
bound
int
add
add
out
cmp
loope
cmc
or
mov
sub
add
add
add
ret
lahf
cmpsl
pop
xchg
inc
mov
popf
mov
dec
add
add
jno
pop
add
lcall
jnp
sbb
jbe
cmp
sbb
out
xchg
std
add
mov
add
sahf
xchg
dec
adc
mov
add
test
add
scas
enter
add
pop
adc
fldl
stos
jnp
pop
pop
add
addl
mov
xchg
arpl
dec
add
add
inc
ds
jae
jle
add
mov
xchg
and
add
add
shrb
add
ss
and
stos
and
add
or
test
mov
add
add
jle
sub
ljmp
sbb
subl
insb
add
add
sahf
sub
movsl
sahf
out
sbb
sbb
sbb
and
add
add
stos
sti
push
xor
in
popl
fwait
and
jecxz
bnd
jl
inc
xchg
sub
test
mov
xchg
imul
shrl
add
add
add
daa
out
pushf
cmp
mov
faddl
add
add
xchg
shl
xorl
add
add
mov
ds
push
push
pop
enter
fisttpll
mov
lret
mov
inc
jne
lahf
push
jbe
movsb
out
sahf
dec
loop
cld
es
mov
cmp
loopne
sbb
and
ret
daa
and
shlb
add
mov
add
add
add
dec
adc
xor
add
jge
mov
inc
mov
mov
push
nop
and
add
add
sbb
xor
imull
add
add
jg
pop
sbb
add
mov
xlat
dec
fisttpll
jl
ja
inc
ja
mov
ljmp
fsubrs
fimuls
test
stos
ret
jg
push
filds
add
pop
sub
add
add
or
pop
in
xchg
xor
fstpt
xlat
dec
adc
mov
loop
add
add
mov
mov
mov
fdivs
js
fwait
lds
subb
mov
cmp
lods
sbb
mov
lods
and
add
add
adc
sbb
and
sub
adc
dec
fisubs
add
add
add
add
add
cmp
arpl
jb
mov
mov
pop
lcall
push
jnp
adc
lret
lods
fs
dec
mov
push
cmpsl
mov
insl
in
sub
test
pop
cs
cmpl
pop
inc
out
and
std
vlddqu
add
add
loope
stc
push
sub
rolb
add
add
xor
clc
pusha
mov
and
fs
test
insb
mov
cmpsl
pop
xor
insb
add
add
lahf
aaa
fdivrl
pop
out
adc
mov
out
add
add
add
add
push
cmc
cli
push
inc
add
add
jnp
pop
push
pusha
mov
and
add
add
add
cwtl
stc
inc
add
add
cli
cli
sbb
or
xchg
orl
loopne
lods
fmull
xchg
test
add
cs
adc
xchg
jmp
inc
int3
enter
dec
mov
mov
ret
out
mov
adc
add
add
xlat
jmp
jne
daa
dec
cmp
mov
cmpsb
and
add
add
enter
push
mov
dec
sbb
insl
inc
xchg
outsl
xor
add
ljmp
jle
cmp
inc
ja
xchg
add
add
int
add
add
lret
mov
punpcklwd
inc
mov
pop
inc
sub
lods
mov
mov
int3
xchg
ret
fmuls
cmp
xchg
test
pop
cmpsl
cmp
push
xchg
aam
das
pop
lea
imul
popa
add
sahf
sbb
daa
std
jge
cmc
stos
sbb
loope
scas
mov
out
mov
mov
ljmp
and
add
add
mov
pop
cmc
aas
call
cmp
add
add
pop
xor
mov
sar
or
dec
mov
divl
jge
lds
lret
icebp
cmp
ss
movsl
xchg
je
cmpsb
int
negb
movsl
into
stc
insl
dec
aam
aad
jecxz
xorb
scas
push
imul
ja
bound
inc
cs
inc
sub
test
lret
pop
nop
sub
pop
in
dec
adc
hlt
jae
lret
cmpsl
cmp
lds
inc
xchg
add
mov
add
or
push
push
cwtl
fcos
mov
cmp
inc
sub
stos
hlt
fsubl
cmp
add
add
mov
mov
mov
xchg
xor
incl
push
dec
mov
mov
ss
lret
xchg
dec
je
add
mov
add
xchg
xor
lds
cmpsb
stos
fstpt
and
add
mov
cmp
adc
daa
incl
push
sub
cmp
aas
xor
out
dec
test
jmp
sbb
xchg
dec
sbb
jno
and
add
scas
pop
inc
or
lcall
out
jmp
mov
cmpsb
jp
into
lahf
push
jl
stos
sahf
dec
lock
xor
inc
sbb
add
add
pop
adc
cwtl
lds
jp
sub
es
sbb
add
lods
mov
cmp
mov
add
add
addl
lea
arpl
ret
pop
fld
mov
and
repz
shrl
add
add
outsb
sbb
mov
ljmp
jl
shr
clc
out
and
repz
mov
mov
and
dec
aad
sub
adc
xor
cltd
mov
outsl
inc
call
push
and
add
add
xchg
mov
pop
movsb
insl
js
mov
dec
mov
and
lods
mov
jo
add
add
test
xor
sub
arpl
fsubl
sub
mov
mov
cmc
rcr
test
or
inc
data16
mov
adc
add
out
lcall
push
daa
cmpb
bound
add
add
popf
cld
mov
sbb
es
fbstp
and
mov
aas
push
xchg
iret
dec
or
repnz
or
add
dec
fidivrs
imul
add
cli
adcl
sbb
mov
in
and
xor
bound
add
add
fisttpl
xchg
pop
rcr
xor
in
out
outsb
in
ret
add
mov
lea
add
add
or
pop
lds
and
dec
mov
adc
add
inc
sub
jle
negl
mov
rorb
add
add
mov
dec
add
add
arpl
lret
mov
mov
sbb
jne
cmp
add
add
add
xchg
sbb
imulb
imul
cltd
jmp
xchg
out
sahf
jb
repz
pop
ss
clc
xchg
inc
scas
xor
in
jns
loopne
pop
mov
lahf
imul
fists
or
add
add
mov
mov
lods
lods
cmp
aam
jae
mov
sub
test
leave
mov
xchg
xchg
hlt
mov
mov
pop
xchg
xchg
cmp
jbe
in
xor
pop
scas
mov
popa
test
cmp
repnz
jbe
ret
shl
push
dec
pop
loope
adc
daa
mov
pushl
pop
or
add
add
inc
jo
xchg
jp
mov
xchg
jmp
push
xor
add
add
movb
push
mov
add
dec
rolb
fwait
sbb
add
add
cltd
leave
gs
add
js
or
stos
stos
notb
jae
insl
mov
mov
lods
push
div
cmp
mov
and
pop
ficompl
sbb
test
arpl
or
dec
add
add
shrl
ljmp
loopne
dec
push
out
cs
gs
lods
or
xchg
arpl
shlb
add
in
add
add
xor
lret
into
cltd
jne
jnp
hlt
sub
inc
jmp
call
stos
andl
fists
or
jg
in
xchg
inc
nop
call
push
adc
mov
orl
add
lods
in
jnp
add
add
add
pop
sub
add
add
fdivrs
xchg
jp
add
add
add
and
cmp
add
ljmp
mov
cmp
add
mov
adc
sub
out
sbb
xchg
or
aaa
xor
icebp
mulb
xorb
cmpsb
or
inc
nop
lods
clc
and
sub
add
add
push
in
sub
mov
icebp
shl
sub
lea
push
aaa
imul
add
mov
mov
mov
pop
pop
inc
out
repnz
add
add
outsl
lds
add
or
mov
mov
and
fstpt
bound
mov
mov
lods
adcl
ret
stos
adc
xchg
add
mov
cmp
icebp
mov
pop
insl
mov
sub
add
add
stc
es
sub
mov
fsubl
add
jns
sub
add
add
and
add
scas
nop
inc
mov
mov
or
add
add
mov
fnstenv
add
add
pop
adc
push
xchg
cmp
pop
sub
dec
daa
in
shrl
add
scas
movsb
mov
jmp
inc
push
inc
and
idivb
les
shll
movsb
fs
xchg
jmp
mov
out
xlat
decb
in
jmp
mov
sbb
cmc
mov
xchg
add
add
add
mov
stos
mov
sbb
dec
push
imul
dec
ss
dec
pop
andb
loop
in
add
add
add
shll
test
adc
add
add
dec
add
add
pop
lds
test
leave
stos
pop
dec
fimull
mov
mov
jae
push
vaddpd
jmp
jle
cmc
rcrb
mov
sub
mov
cli
nop
mov
cmp
add
add
pop
movl
jl
jbe
and
aam
jno
stc
sub
cmp
add
add
add
scas
xorl
add
add
inc
add
add
pop
cld
sub
add
add
enter
and
adc
sahf
cs
call
popa
jne
and
add
add
int3
outsl
call
fstl
jg
cmpsl
inc
call
inc
inc
mov
add
add
dec
mov
jb
and
add
add
std
mov
lods
fdivr
sub
add
xchg
in
xor
dec
xlat
call
add
pop
aam
or
mov
mov
sbb
jle
lcall
inc
jle
sub
es
push
push
test
mov
sub
add
add
mov
mov
repnz
push
adc
shlb
shlb
flds
add
add
and
stos
cmpsl
test
icebp
and
xlat
ret
mov
add
add
test
and
mov
or
mov
lock
add
add
jb
cmp
cs
stos
push
insb
mov
fsubrl
add
add
add
jl
ljmp
and
dec
inc
add
sbb
add
shr
out
loop
fdivrs
mov
push
xchg
shlb
imul
cld
mov
bound
xchg
ja
int
cld
dec
xor
add
add
add
adc
stc
xchg
lock
ljmp
mov
les
les
cmp
mov
mov
hlt
pop
mov
repz
xchg
dec
mov
in
nop
and
add
add
or
add
add
add
mov
outsl
add
cmp
inc
pop
ret
jno
mov
aas
or
push
or
jns
rorl
mov
notb
out
add
add
add
mov
sbb
call
js
mov
sub
add
sub
imul
and
mov
cmp
movsl
mov
test
rorb
add
xor
or
pop
dec
mov
add
add
sbb
add
mov
add
add
add
xor
stos
sbb
dec
jl
mov
adc
in
mov
jnp
rol
insb
add
add
daa
repnz
add
cmpsb
adc
adc
or
fimuls
add
add
add
push
mov
push
fnstsw
mov
push
int3
sbb
rcr
jns
sbb
add
out
gs
stc
cmp
daa
xchg
mov
mov
mov
push
mov
inc
stos
jg
mov
loop
subb
xchg
arpl
add
add
adc
cmpsb
out
insb
mov
mov
loope
cmp
mov
test
lea
jge
mov
adc
pop
adc
repz
sbb
adc
push
push
xchg
add
push
cmp
sub
add
add
fbld
iret
push
jbe
mov
xor
mov
scas
lea
cmp
push
mov
cmp
push
and
jecxz
sbbb
push
je
and
add
add
add
add
add
aad
jl
js
add
ss
ss
inc
mov
inc
mov
push
in
aaa
and
push
jmp
pop
jne
sbb
push
xchg
outsb
sbb
addb
lcall
pop
imul
fwait
add
std
sbb
pop
into
rcrb
or
mov
stos
push
into
mov
xlat
xor
test
push
movsl
imul
cmp
mov
or
add
add
and
push
xchg
shl
dec
aaa
cld
lock
inc
sahf
inc
sarl
and
inc
mov
mov
lds
cwtl
pop
in
test
mov
pusha
mov
mov
xor
add
add
popa
jns
inc
daa
ja
sbb
push
sti
cld
out
iret
jge
mov
popf
mov
outsl
call
enter
mov
pop
jb
sbb
pop
or
add
add
in
nop
xor
push
xchg
repz
push
mov
add
add
pop
and
cli
std
addl
adc
cmp
xchg
mov
inc
or
push
cmp
dec
pop
stc
inc
mov
call
xor
leave
outsl
stos
xchg
std
adc
xchg
jne
mov
stos
das
leave
push
bswap
inc
imull
push
mov
jp
jae
scas
and
cs
dec
arpl
movsb
xchg
dec
lods
inc
mov
jb
mov
je
testl
sbb
and
add
mov
pop
inc
mov
add
aas
add
add
add
add
fwait
jp
cmc
out
aaa
add
add
add
addb
dec
cli
sub
sahf
repz
cmp
add
xor
orl
add
mov
adc
das
lret
ret
mov
adc
out
xor
sbb
jp
mov
mov
int
out
adc
adc
add
in
mov
push
das
mov
cmp
add
add
add
xchg
cmp
ljmp
lock
jle
jp
mull
pop
cmp
add
add
mov
sbb
mov
das
ror
sahf
sub
in
aad
movsb
xor
sbb
mov
or
push
outsb
cmp
out
cld
and
add
add
add
test
add
out
sbb
cmpl
add
add
add
xor
notl
pop
and
add
add
add
out
push
insb
add
add
fcoms
xchg
or
add
add
fwait
dec
loopne
push
xor
lock
insl
lcall
dec
mov
loopne
sbb
sbbb
ja
outsb
cmp
aas
ret
pop
subb
xchg
and
xchg
pusha
mov
lods
cltd
dec
cmc
mov
dec
cmp
sbb
cmp
arpl
add
fs
mov
movsl
rcrl
push
or
jno
mov
insl
int3
scas
enter
pop
repnz
scas
addb
mov
repnz
jle,pn
mov
add
insl
clc
jl
adc
xchg
fwait
popf
inc
xchg
bnd
imul
cmc
sbb
mov
mov
fnstenv
icebp
push
scas
pop
inc
push
sbb
add
add
push
movl
jge
mov
and
repz
add
lcall
cwtl
andl
cltd
scas
xor
pop
push
pop
or
sub
add
add
clc
pop
fdivrl
js
movsb
orl
out
mov
sub
testb
mov
pop
pop
lds
mov
add
jnp
jp
pusha
mov
xor
aam
lock
ds
ss
loopne
jno
or
stc
js
aas
push
pusha
add
add
pop
inc
add
add
push
arpl
or
pop
push
adc
or
daa
js
mov
add
add
add
add
add
popa
test
loopne
test
lahf
cmp
jno
jl
xchg
dec
leave
out
inc
adc
ss
imul
mov
ss
loopne
mov
mov
jecxz
push
dec
mov
pop
mov
add
pop
cli
mov
jb
fmuls
add
add
and
je
push
lcall
lods
lock
aaa
push
jnp
fwait
sbbb
movsb
cmp
add
mov
mov
xchg
mov
lcall
rolb
pop
push
imul
xchg
fmull
add
add
mov
fcmovbe
cmp
mov
mov
add
add
rcrl
push
in
sub
add
add
mov
dec
add
add
jno
fldl
inc
popf
jbe
and
add
add
xchg
sarl
movsb
out
das
adc
insl
or
or
sbb
inc
shlb
add
cmc
sbb
pop
gs
or
jmp
sahf
dec
shrl
xchg
mov
les
nop
inc
aas
je
arpl
add
and
jb
mov
push
and
insb
mov
test
std
or
je
mov
jmp
cli
push
mov
mov
lcall
lock
mov
out
jnp
outsl
shrb
or
push
push
sbb
daa
test
test
lods
xchg
inc
jno
stos
push
mov
jno
fcomi
popf
or
or
ret
jle
sub
pop
cmp
jno
data16
add
add
lahf
ret
mov
add
add
in
xor
mov
or
add
mov
sub
mov
push
fcomip
test
jo
lea
out
lods
out
add
add
jno
inc
cmpb
cmpb
cmp
shrl
xchg
push
adc
cs
imul
out
aam
inc
addb
cmpsb
jp
inc
xchg
sbb
popa
loopne
int
cwtl
xor
adc
adc
testb
mov
rorb
add
sbb
js
inc
add
add
lock
jl
mov
add
sub
add
add
lahf
inc
pop
imul
icebp
dec
movsl
or
int
sub
add
add
lret
add
add
sub
add
add
mov
movsl
xor
pop
jge
adc
sub
add
add
repz
mov
push
mov
pop
push
xchg
aam
cmp
scas
push
xlat
out
xchg
les
bswap
nop
mov
add
add
ja
insb
add
add
cmp
cmp
add
adc
mov
cltd
lock
cmc
in
adc
add
add
add
add
cmpsl
lock
xor
mov
test
add
add
rclb
pop
mov
imul
cmpl
mov
jmp
mov
imul
add
add
mov
inc
mov
iret
aad
xchg
sub
add
add
sub
mov
leave
mov
push
in
mov
sub
add
into
leave
fiadds
add
add
mov
add
add
mov
push
pop
stos
aam
jmp
xor
add
add
add
out
mov
adcl
cmp
mov
jecxz
insl
xchg
mov
add
add
push
pusha
mov
stos
in
dec
mov
ret
stc
popf
mov
pop
and
loope
add
xchg
repz
insb
mov
pop
sbb
insl
mov
add
add
sub
and
add
add
adc
adc
imulb
dec
test
arpl
mov
push
lods
jecxz
or
and
and
add
add
add
add
pop
jo
or
add
mov
mov
xchg
sub
jmp
sub
add
add
ja
add
add
add
add
add
add
add
add
pop
jnp
and
or
add
add
cmp
and
add
add
add
add
inc
arpl
lock
cmp
mov
hlt
sbb
pop
das
jmp
pop
fs
cs
add
add
push
popf
jne
cmp
pop
dec
sbb
fiadds
add
add
pushf
enter
loope
iret
push
fmull
add
add
lds
add
add
xor
add
incb
add
adc
out
dec
sub
mov
jnp
in
lret
push
sub
xchg
testb
inc
push
add
add
add
loopne
sbb
jnp
cmpsl
push
inc
mov
push
lods
sahf
jp
cli
pop
or
add
add
add
dec
lret
aam
mov
add
add
mov
add
int3
jnp
sub
adc
mov
cli
add
add
add
adc
mov
enter
add
sbb
out
insb
add
add
pushf
lods
mov
push
push
push
sub
add
add
daa
and
add
add
add
add
mov
push
imul
roll
in
mov
ficomps
jecxz
jle
mov
mov
cmp
mov
filds
adc
negb
cwtl
enter
add
insb
add
add
sbb
mov
push
test
stos
ja
in
enter
add
and
sub
add
add
std
inc
sub
adc
xor
nopl
mov
push
fs
and
jl
out
addr16
and
mov
or
add
add
jae
lret
xor
mov
icebp
xchg
xchg
xchg
cltd
and
push
repnz
mov
sbb
push
movsb
mov
inc
add
add
mov
mov
sahf
xor
orb
add
call
shll
sub
add
add
iret
jmp
cmp
adc
add
add
das
and
mov
and
sbb
jmp
nop
sbb
inc
add
add
popa
or
push
mov
mov
shl
shl
xchg
cwtl
push
bound
pop
fwait
test
dec
push
pop
or
rcr
fadd
or
popf
jl
push
or
mov
out
mov
and
add
add
push
and
jge
cli
test
cmpsb
or
mul
add
add
add
adc
cmpsb
jns
les
and
ret
pop
mov
lock
rcrb
imul
les
imul
aam
dec
cmp
int3
and
icebp
call
add
jbe
mov
imul
xor
adc
pop
xchg
dec
xchg
ss
sbb
add
add
enter
add
add
fsub
addr16
jae
xor
mov
or
rorl
cmpsl
xlat
jns
jecxz
xchg
mov
mov
into
enter
xor
andb
add
push
push
in
inc
bound
fsts
push
adcb
add
jno
dec
add
add
sub
add
add
push
jo
mov
mov
mov
mov
cltd
aaa
jl
rcrl
mov
rcll
cmpsl
sar
lds
add
add
mov
adc
cmc
rep
shlb
xor
and
add
add
push
out
inc
les
add
out
lret
iret
gs
add
add
mov
add
add
cmp
add
add
jmp
add
add
movsl
loop
mov
add
add
dec
fwait
shrl
cmp
and
jno
xor
ja
inc
mov
rcrl
mov
das
mov
mov
or
inc
in
push
push
xchg
mov
push
data16
pushl
add
pop
out
mov
add
add
add
add
add
jo
aam
xor
loopne
cld
mov
xchg
test
add
iret
nop
push
mov
and
jbe
mov
xchg
popf
xchg
sub
icebp
sub
js
ficoms
xor
mov
loope
clc
push
mov
xchg
adc
inc
jmp
cmpb
jp
orb
jg
insb
mov
add
das
or
add
add
mov
adc
cmc
lods
lock
ss
lods
mov
add
xchg
shl
jmp
adc
mov
add
jae
xchg
scas
fiadds
ret
xchg
mov
shrl
cmp
add
lock
add
add
add
add
negb
xor
sub
xor
add
cmp
add
int3
xchg
stos
pop
fisubrs
gs
movsl
inc
in
sub
or
add
add
inc
mov
jge
outsl
push
dec
pop
add
iret
and
dec
mov
cmp
jne
jns
xchg
inc
add
add
call
xor
push
sub
ss
or
insb
add
add
cmpsl
cmp
add
jecxz
jo
cmp
mov
dec
mov
ds
mov
dec
add
add
add
out
push
lods
xchg
xor
mov
rcll
shl
ret
dec
cmp
insb
mov
sbb
add
add
add
mov
add
add
adc
mov
pusha
add
add
sahf
or
sub
xor
push
dec
and
insb
mov
pop
xor
aam
mov
mov
add
fldt
add
add
sub
enter
out
addl
pop
jmp
outsb
mov
xchg
jle
add
add
add
add
add
mov
ja
mov
xor
xchg
lret
pop
das
hlt
insb
mov
pop
std
fiaddl
loope
frstor
mov
cmp
add
add
mov
pusha
add
add
inc
test
rorl
or
add
add
mov
mov
adc
adc
jg
stos
cltd
out
test
mov
and
mov
mov
add
dec
mov
mov
outsl
mov
xor
cltd
add
add
dec
push
stos
sub
add
add
shr
cmp
mov
popa
lods
lcall
add
fidivrl
mov
add
lods
mov
mov
adc
sbb
add
popf
xchg
mov
cmpsl
nop
cs
mov
and
add
add
add
add
add
add
add
push
enter
test
enter
or
jb
shlb
addb
mov
add
or
add
add
jl
mov
mov
ret
pop
mov
push
inc
insl
data16
aaa
leave
dec
ss
push
aas
loopne
jns
add
add
or
add
add
mov
add
push
xchg
ss
iret
xchg
xchg
int3
mov
and
ss
and
add
add
push
cmpsb
mov
xchg
add
add
sbb
push
std
arpl
repnz
push
push
mov
dec
inc
test
push
push
inc
sub
rorb
cmp
xor
dec
add
add
shl
out
leave
jmp
add
add
add
inc
mov
test
cltd
shlb
leave
pop
adc
inc
sub
add
add
add
mov
or
xchg
dec
mov
or
es
add
add
adc
fdivs
mov
ret
cmp
push
xchg
add
add
xchg
sbb
insl
jbe
lods
lock
push
pop
out
orb
xor
xchg
idivl
dec
in
push
mov
and
js
imul
imul
in
scas
in
fisubrl
test
sub
jbe
shlb
add
add
cld
iret
fs
pop
xor
add
out
fisttpll
mov
jb
jge
out
inc
iret
jae
xor
repnz
into
xor
sbb
add
pop
or
add
add
add
add
add
add
add
fdivrp
ret
mov
roll
mov
les
pop
mov
dec
mov
stos
mov
xchg
rcll
inc
repnz
sub
ficoms
aas
adc
add
add
mov
push
pop
jne
xlat
scas
add
and
add
add
mov
add
add
adc
imul
add
add
movsl
push
hlt
jecxz
inc
mov
mov
xor
out
stos
or
add
add
bswap
mov
lods
sbb
xor
ficoms
mov
mov
pop
fcom
das
add
add
add
add
out
adc
dec
add
add
push
lds
mov
shrl
orl
dec
and
add
add
sub
push
shrb
les
add
add
xchg
adc
or
add
add
mov
cmp
jg
mov
push
or
add
add
mov
add
push
sti
mov
cmp
mov
hlt
push
popf
inc
or
cmpsl
int3
and
rolb
jg
test
push
sub
mov
mov
int3
xor
loope
add
inc
and
mov
in
xorl
sahf
mov
es
lods
jge
add
cld
jae
je
mov
sbb
mov
add
add
shll
rolb
sarl
dec
and
test
or
adc
xor
cmp
add
mov
lods
cmp
add
mov
jae
xchg
popf
push
lret
cmpsb
out
and
add
add
jecxz
sbb
adc
push
and
add
add
mov
dec
scas
or
adc
pop
aam
js
cs
repz
in
iret
ds
jge
cmp
popa
fwait
pop
inc
cmpsb
xchg
into
mov
add
jno
adc
push
cli
push
repnz
add
add
push
sbb
jmp
inc
add
mov
xchg
and
or
add
add
mov
mov
repz
add
add
sub
insb
add
add
dec
xchg
add
inc
and
add
add
sbb
mov
stos
mov
dec
imul
scas
ret
add
add
pop
in
or
add
add
push
sbb
sub
jbe
sub
repnz
faddp
fnstcw
add
add
add
add
outsb
mov
cmpl
jbe
stos
in
or
add
in
and
adc
and
add
add
add
test
lds
add
add
cmc
subb
dec
pop
mov
cmpsb
imul
sub
je
nop
je
ss
insb
add
add
sti
pop
addb
add
mov
sub
pop
jge
int
xchg
xchg
icebp
mov
xor
adc
sbb
dec
push
and
les
add
shl
jae
or
cs
mov
fdivrl
cmpsl
dec
fbld
test
imul
in
cli
das
fstp
movsl
xor
mov
mov
pop
stos
jno
in
push
push
ds
jge
in
pusha
mov
xor
cwtl
push
mov
cmp
sarl
add
add
sbb
xlat
in
fstpt
lret
mov
add
add
add
xchg
or
ss
add
add
or
add
add
add
add
add
add
pop
repz
mov
divb
cmp
dec
sub
test
in
pop
mov
inc
stos
pop
jne
adc
in
clc
push
adcb
pop
push
in
mov
loope
sahf
cs
and
add
add
add
add
gs
rcr
fldenv
add
add
add
out
push
cmovp
xchg
mov
mov
and
pop
mov
add
pop
pop
adc
add
add
test
xor
aam
in
adc
out
loopne
sub
arpl
call
xor
xor
cmp
pushf
xchg
jno
cld
les
push
loopne
and
hlt
push
push
cli
cwtl
cmp
add
imul
fcom
xor
sbb
pop
mov
in
out
push
xchg
mov
dec
mov
sub
shrl
test
mov
out
shrb
ljmp
rcrb
ss
pop
cmp
xor
add
add
pop
jg
push
shll
out
inc
mov
cli
jb
lcall
sbb
and
popa
loop
outsb
cmp
add
add
test
fmuls
and
xchg
lret
arpl
push
xor
push
repnz
repz
cwtd
int3
arpl
mov
mov
add
mov
add
xor
mov
xchg
mov
aaa
mov
test
cmp
pop
mov
xchg
xor
aaa
sub
insb
add
add
sbb
popa
lea
mov
cmc
mov
dec
add
add
outsb
add
jbe
xor
push
or
xchg
into
jmp
test
nop
inc
jno
inc
xchg
addr16
and
add
add
in
fxam
xor
imul
stos
dec
mov
xor
add
add
mov
dec
push
inc
mov
push
push
lret
pop
loope
add
and
add
add
add
add
add
add
add
mov
mov
in
push
lock
insb
mov
sub
add
add
rcll
sbb
sbb
add
mov
out
dec
test
xchg
insl
push
insb
mov
idivb
adcl
imul
insl
jle
rcrb
and
sub
mov
imul
add
add
mov
roll
dec
add
add
pop
arpl
stos
pushf
add
and
mov
push
cmp
imul
dec
add
add
jo
mov
xchg
shrl
mov
xor
mov
hlt
nop
loopne
fwait
aas
popa
dec
push
repz
movsb
dec
imulb
mov
dec
xchg
fwait
jno
dec
mov
out
dec
push
mov
pop
not
mov
mov
sbbb
cs
cmp
and
mov
sub
mov
je
sahf
mov
xchg
data16
add
add
push
lea
in
icebp
mov
add
xlat
ret
shl
shrb
mov
add
inc
jb
mov
mov
dec
mov
sbb
add
add
repz
add
lods
leave
mov
push
out
and
push
pushf
lods
into
sbb
fstl
cmpsb
inc
or
mov
test
add
dec
xchg
out
in
mov
adc
daa
es
fdivr
or
sub
ds
imul
mov
data16
pop
mov
aas
out
inc
xor
loop
dec
adc
ljmp
mov
aam
fstps
add
ret
inc
mov
and
add
aad
dec
mov
jb
jns
push
repz
scas
aam
cmc
mov
cmc
xor
add
add
mov
add
add
add
sub
cmp
in
add
add
test
xor
mov
bswap
xor
add
mov
jecxz
mov
mov
jl
add
add
jae
icebp
cmpsb
mov
jle
mov
add
add
mov
mov
sub
imul
dec
pop
test
xor
cmpsb
jecxz
jge
sub
add
sbb
add
add
sbb
mov
mov
mov
ljmp
push
pop
out
mov
mov
mov
into
fxch
andl
add
add
scas
lods
pop
std
out
fnstenv
inc
mov
cmc
or
xchg
ljmp
mov
mov
test
add
sub
add
add
repz
pop
lret
sbb
pusha
mov
loopne
mov
add
insl
testl
aad
stos
dec
cmp
mov
add
add
add
add
stc
jns
cmp
xor
and
inc
gs
jbe
sbb
cmp
addr16
ficompl
lahf
jno
rcr
sbbb
stos
subb
movsb
jp
imul
aaa
fimull
xor
pop
sbbl
pusha
add
add
xor
pop
ljmp
jno
test
or
xor
imul
pop
aam
cwtl
movsb
imul
aam
sub
outsb
dec
out
out
cmp
or
add
add
add
mov
pop
jp
and
add
add
jae
jb
rcll
jns
mov
add
mov
shll
add
inc
add
add
hlt
clc
mov
xor
push
jbe
push
mov
es
xchg
ret
add
push
mov
adc
cmp
xor
add
out
pop
push
xchg
mov
icebp
fbld
add
add
push
pop
or
push
btc
aad
lods
sti
lods
add
adc
xorl
xor
mov
xor
add
add
cmp
dec
or
dec
lahf
mov
data16
enter
call
insb
add
add
cmp
mov
adc
add
add
repz
xor
mov
pop
and
adc
cmp
xor
add
add
fldt
cmp
xchg
push
arpl
sub
jae
cmc
sub
mov
rclb
lods
pusha
mov
inc
div
cmc
int3
cmp
pop
mov
aam
decb
hlt
ljmp
add
add
sub
mov
mov
in
add
add
jb
lods
cmp
imul
dec
mov
mov
into
jns
mov
test
mov
or
cmc
jne
jne
fwait
sti
clc
inc
mov
mov
or
add
add
lea
ror
dec
es
inc
add
add
xchg
andb
add
add
add
add
push
xorb
fwait
inc
xchg
dec
mov
add
add
lret
add
add
scas
insb
mov
mov
out
adc
ljmp
das
aam
dec
or
mov
add
add
push
jl
subl
mov
rolb
add
add
int
clc
sbb
and
pusha
add
add
jns
shl
inc
mov
add
adc
aaa
in
stos
into
loope
jg
and
cli
and
add
add
out
jp
push
cli
scas
push
iret
in
inc
mov
push
or
adc
jno
xor
fbld
loop
notb
das
cs
jg
or
movhps
lods
aam
and
imul
cmp
sub
add
add
movsl
add
add
add
cwtl
std
inc
add
add
push
gs
mov
sbb
adc
mov
leave
sbb
add
add
lds
add
add
add
pushf
add
add
jle
adc
xchg
repz
mov
add
ljmp
jmp
negb
sub
adc
leave
xchg
xchg
lcall
sti
repnz
inc
push
push
sub
dec
add
clc
and
add
add
or
push
mov
in
test
sub
jnp
rorb
sub
xor
adcl
neg
in
pop
xchg
xor
hlt
cs
out
lods
jp
mov
xor
mov
mov
inc
inc
imul
mov
clc
push
bswap
shr
out
sbb
in
mov
sub
mov
jmp
xor
lahf
sbb
ja
add
add
xorl
jge
mov
imul
call
xchg
push
and
stos
inc
notl
stc
imul
inc
and
add
add
and
mov
out
push
sbb
cmp
jne
cmp
fsubs
mov
loope
shll
add
in
cmc
xchg
shll
mov
jno
inc
pop
and
cmp
outsl
fwait
in
loope
adc
mov
imulb
xchg
xor
aam
lds
mov
addl
mov
int
and
inc
int
mov
aas
je
loope
arpl
xor
or
add
add
inc
lods
aad
mov
cmp
cmpsl
addr16
das
or
mov
rcrb
imul
push
jbe
add
add
imull
add
ficomps
cmp
mov
jae
jbe
dec
jbe
fwait
test
jg
mov
je
dec
je
inc
inc
pop
add
or
or
pusha
mov
in
mov
mov
xor
fsubl
add
loope
xor
scas
arpl
test
xor
jp
les
daa
sbb
and
xor
adc
out
fcoml
add
decb
add
and
js
xor
test
xor
outsl
sbb
xor
rcll
add
add
loop
stc
popf
stos
iret
push
mov
mov
dec
inc
add
add
test
add
inc
push
mov
aas
add
pop
jle
adc
ja
jg
ja
ljmp
pop
sub
lret
xchg
dec
mov
in
jle
mov
int
in
fs
imul
hlt
push
in
push
popl
jbe
jno
xchg
pop
mov
mov
lret
lods
or
dec
add
add
xchg
xchg
es
add
add
aad
xor
scas
xchg
cmpb
movsb
sbb
dec
test
sub
fbld
lods
insl
add
mov
jmp
mov
out
add
add
fucomi
mov
or
dec
imul
addr16
dec
cmp
enter
add
fwait
lahf
imul
dec
je
push
fmul
mov
add
and
sub
add
add
shrb
ret
jecxz
pop
mov
jmp
mov
mov
inc
jne
mov
inc
mov
lods
or
add
add
or
fcmove
movsl
ds
ss
dec
add
add
add
dec
loop
and
imul
push
mov
cmpsl
filds
inc
cltd
stos
or
fs
dec
xor
call
push
cmp
inc
int3
sbb
push
daa
xor
adcl
or
dec
add
add
into
xor
decb
adc
add
jge
shll
imul
in
mov
cmp
movsb
arpl
outsl
cmp
insl
ret
add
add
xchg
cmp
push
imul
lret
cmpb
das
popf
aas
lds
add
js
iret
cmp
add
push
push
je
sbbl
add
subb
mov
das
mov
sbb
pop
adc
cmp
ljmp
in
std
movsl
cmpsb
push
cmpsb
insb
mov
enter
ret
scas
mov
jge
repnz
xor
add
rorl
add
addr16
psrlq
mov
inc
test
pop
stos
imul
cmp
mov
jmp
cmc
in
sbb
add
pop
leave
movsb
aaa
cmp
add
add
popa
mov
add
jne
mov
xchg
or
lods
jle
js
popf
ds
jmp
add
add
repz
arpl
mov
addl
jno
stc
fidivrs
and
add
add
adc
shll
add
add
dec
add
add
cltd
add
mov
icebp
cmp
in
mov
ret
push
loopne
fsubrp
mov
enter
insl
inc
cmpsb
inc
cli
push
in
lret
out
sti
or
rcrl
pushf
push
pushf
xchg
and
jns
push
hlt
dec
out
out
sub
dec
aam
aam
xor
nop
aam
add
mov
in
les
add
add
or
add
add
xchg
xchg
mov
loopne
sub
dec
loopne
lcall
shrl
mov
mov
jmp
or
push
mov
add
add
pop
stos
xlat
or
add
add
out
mov
pop
hlt
jmp
mov
dec
out
mov
leave
lret
fiaddl
add
add
rolb
mov
loopne
jmp
cmp
cld
jnp
sbb
add
add
fdiv
fisubs
add
js
jbe
sbb
xchg
sbb
lcall
pop
xor
pcmpgtw
inc
aas
loop
mov
ja
mov
add
mov
rorl
dec
cltd
add
mov
dec
cmpsb
pop
sbb
xor
add
add
add
add
dec
mov
and
add
add
add
add
add
xchg
adc
cmp
mov
add
add
xchg
adc
mov
cmpsl
jns
jge
push
je
icebp
fs
mov
ret
add
add
add
add
les
jb
lods
roll
mov
pop
push
jnp
xchg
jne
pop
in
inc
adc
imul
add
stos
outsb
cmp
fiadds
test
xchg
mov
inc
push
nop
fsubr
in
std
add
add
add
mov
call
mov
dec
out
xor
test
mov
movsl
cmp
sub
add
add
mov
imul
nop
jns
cmp
jecxz
es
notl
leave
pop
jo
mov
idiv
ds
pop
jnp
daa
hlt
jle
add
add
fs
and
pop
ss
sbb
enter
decl
dec
ret
mov
pop
push
sbb
rol
outsl
out
xor
and
mov
or
mov
jo
adc
and
add
add
das
daa
jne
push
iret
lea
mov
dec
add
add
cmpsl
out
push
adc
mov
movsl
dec
or
add
add
inc
fldt
add
and
add
mov
pop
mov
add
add
ja
scas
outsl
cmp
cs
add
add
stos
pop
iret
insb
add
add
flds
adc
dec
sahf
jns
mov
add
add
jne
sbb
loope
add
and
add
add
inc
pop
in
leave
out
inc
fisttpl
pop
add
add
add
add
pop
dec
stc
xchg
add
add
movsl
enter
cmpsb
pop
jae
inc
jg
jg
push
fcomp
or
add
add
es
lods
inc
push
lods
jecxz
fs
mov
enter
lea
add
add
cmp
idiv
out
mov
add
add
and
add
add
popf
ret
push
sub
inc
mov
cmpsl
fs
push
sahf
xchg
repz
in
add
add
add
stos
out
aam
sbb
loope
adc
mov
icebp
adc
add
add
mov
cwtl
push
inc
add
add
pop
daa
lcall
dec
jno
lea
xlat
lret
pop
xlat
je
lahf
xor
js
mov
and
add
add
or
loope
repnz
sub
mov
add
pop
pop
adc
inc
push
cmpsb
out
lret
pop
lds
aaa
add
fdivr
insl
inc
push
icebp
movsb
and
ds
pop
inc
add
add
add
sarb
int
xchg
and
jb
push
push
stos
jbe
and
and
add
add
add
icebp
mov
and
add
push
cltd
or
addr16
mov
jbe
and
aad
adc
cmpsb
push
inc
dec
add
add
mov
das
movsb
rolb
add
add
cmpl
pop
cmp
imul
add
add
daa
outsb
pop
mov
add
add
das
xor
fisttpll
mov
cmp
cmp
or
mov
mov
mov
shl
ret
cmp
stc
data16
stos
sbb
mov
leave
or
add
add
add
xchg
xor
aam
repz
ds
mov
dec
data16
mov
pop
lret
aad
mov
leave
hlt
xchg
aaa
mov
inc
mov
leave
dec
mov
dec
mov
or
fcompl
inc
dec
popf
pop
pop
movb
xchg
and
mov
mov
add
fildl
add
add
inc
popa
adc
adc
xchg
mov
add
dec
sbb
mov
rcll
cltd
outsb
stc
mov
imul
mov
dec
xor
or
add
fstl
xor
gs
mov
dec
imul
mov
je
or
repnz
mov
sub
insb
add
add
push
mov
push
mov
dec
mov
fwait
and
mov
pop
jne
je
or
add
add
hlt
cmp
movsl
mov
test
mov
cmp
jg
jae
pop
ja
sbb
sub
add
add
sub
scas
jecxz
test
movsl
andl
add
add
or
add
add
add
add
add
and
lahf
sbb
stc
mov
add
mov
cltd
push
lods
xchg
xor
loop
or
add
add
or
jno
scas
imul
jge
ret
test
push
mov
addr16
or
add
add
xchg
mov
mov
add
add
add
and
add
add
lock
out
test
push
mov
fidivrs
jl
loopne
adc
sbb
xor
pop
dec
xor
pop
sbb
lahf
fabs
test
dec
jo
sbb
inc
mov
lock
pusha
mov
je
adc
add
add
fdivrs
mov
ss
nop
inc
and
xor
outsl
mov
or
add
adc
or
lock
sub
jp
mov
inc
add
add
outsb
push
addr16
das
lahf
clc
in
dec
mov
xchg
xchg
sub
push
jp
repz
pusha
add
add
cwtl
fstpl
inc
in
cli
xchg
popf
mov
or
dec
mov
adc
sbb
sub
pop
push
mov
xchg
js
into
repz
mov
cltd
jmp
add
add
add
xchg
scas
mov
add
push
mov
mov
add
adc
add
add
add
add
stc
dec
fldenv
mov
mov
fisubrs
mov
add
xchg
xchg
or
mov
jecxz
add
jb
push
sub
add
add
das
mov
rorl
mov
pop
shr
cmc
popf
loopne
rclb
jo
outsl
add
lahf
mov
adc
xchg
mov
fdivs
xchg
loopne
stc
loope
pop
xor
lahf
jbe
mov
sub
mov
fwait
jne
push
mov
je
fnstcw
aas
fdivs
add
add
add
xchg
shll
int3
inc
xchg
xor
xor
pop
fdivr
pop
pop
mov
shll
jno
lcall
add
add
add
xchg
add
add
sbb
add
jmp
push
sbb
sub
iret
scas
mov
scas
jle
leave
out
xor
fsubrp
int3
mov
push
aaa
xor
add
add
push
adc
or
add
add
out
cmpl
aad
fadds
scas
xor
mov
lock
xlat
jb
sub
push
loope
push
xor
add
fidivrl
das
pop
inc
int3
cmp
fidivl
inc
pop
xchg
inc
add
add
pusha
mov
adc
sti
and
push
arpl
add
add
out
hlt
xor
xor
jp
out
fwait
out
imul
mov
add
add
in
sub
mov
add
add
cld
xor
or
sub
xchg
imul
add
imul
jb
les
pop
lret
mov
add
add
add
cmp
add
add
jbe
fbstp
orl
sti
popa
cmp
mov
fcoms
fwait
and
add
in
mov
add
sbb
adc
and
lods
lahf
inc
jge
add
out
sbb
cmp
add
mov
jae
jl
lret
enter
ds
mov
popa
push
xor
lret
fldcw
gs
mov
fwait
adc
add
cltd
or
loopne
dec
mov
shrl
add
inc
add
add
mov
add
add
add
add
xchg
cltd
mov
iret
push
cmp
or
cld
pcmpgtd
jbe
jbe
fisubs
sub
push
std
test
xlat
lret
inc
mov
mov
add
leave
jae
mov
push
enter
add
add
jns
inc
ficompl
add
xchg
jle
push
imul
add
add
test
hlt
and
and
add
add
les
mov
mov
add
add
or
add
add
mov
add
out
cs
out
push
test
aaa
or
add
add
add
loope
into
xor
jge
insl
ja
icebp
fidivrl
add
add
cmc
xchg
int
rolb
gs
jno
xlat
test
sub
add
add
ja
lret
test
mov
rcr
fs
sahf
jnp
sub
add
add
add
push
mov
pop
sahf
jnp
cmp
fwait
pusha
mov
xchg
aaa
cwtl
outsl
cld
mov
jg
ss
flds
fmul
out
lea
bound
int
inc
in
pop
lock
in
jae
jmp
clc
fistl
jge
negl
add
add
jg
push
xchg
xchg
sbb
cmpsb
scas
dec
add
add
pop
xlat
aad
add
mov
notl
dec
rcll
xchg
cmc
add
add
add
push
jno
adc
cmp
add
gs
mov
adc
adc
mov
cmp
loop
jno
mov
sbb
xchg
fnsave
pop
jl
xlat
mov
xor
clc
lahf
test
or
repz
add
repz
icebp
arpl
jns
pop
sahf
ss
sub
sub
add
add
push
scas
popa
mov
imul
add
add
dec
cld
sub
xor
pop
jne
sbb
imul
jp
icebp
jp
mov
test
inc
lock
pop
in
movsl
mov
xchg
sub
push
js
fildll
sub
add
add
add
add
cmpsb
xchg
sbb
mov
add
add
xchg
and
add
cli
mov
movsb
shl
mov
add
inc
mov
in
jg
dec
adc
xor
loopne
xchg
push
repnz
cmc
cmp
xor
loopne
inc
xchg
nop
cmp
sbb
fisttpll
sub
sbb
add
call
adc
into
int
adc
jge
add
andl
lods
add
jg
lahf
sbb
xchg
sar
xor
xchg
adc
lock
testb
add
add
xor
mov
jns
mov
cld
cltd
ja
ret
data16
test
test
xchg
jge
mov
sbb
and
into
lea
mov
arpl
add
adc
add
add
and
sub
add
add
pusha
add
add
push
push
cmp
add
leave
dec
add
add
loop
adc
jge
leave
mov
push
xchg
inc
call
inc
cmpsl
dec
xchg
dec
dec
xor
sbb
cmp
jb
xor
mov
sahf
in
pop
scas
addr16
xor
adc
cmp
add
sarb
cwtl
and
mov
cmpsb
cwtl
ret
je
or
adc
or
mov
add
xchg
mov
cld
cwtl
pop
lcall
lahf
cli
cli
lret
jne
cwtl
push
sbb
aam
sbb
sbb
add
add
jne
mov
xchg
in
jecxz
inc
inc
aas
lcall
lock
inc
jb
pop
xchg
fwait
and
dec
push
mov
adcb
pop
sbb
negl
adc
xchg
mov
jns
shrb
add
divb
add
mov
pusha
mov
ss
push
dec
push
in
outsl
xor
popa
mov
jp
sbb
jmp
sbbb
adc
add
add
add
incb
mov
cmpsl
aad
insl
outsl
xchg
rcll
pop
push
fidivrs
pop
adc
mov
pop
jbe
div
mov
push
xlat
subb
cmp
cmc
test
loopne
in
fdivrl
mov
push
inc
arpl
mov
add
add
adc
jmp
pop
lret
mov
adc
or
add
add
repnz
or
sbb
inc
and
add
add
mov
rclb
call
out
pop
ds
lods
fnstsw
fidivrs
jbe
add
add
add
jns
ja
shlb
icebp
enter
add
push
inc
add
add
push
sub
test
cld
pop
insb
add
add
adc
cmp
or
adc
mov
or
add
add
push
movsb
xchg
popf
test
imul
add
or
add
add
adc
daa
dec
lods
repz
add
add
cmp
test
mov
add
xchg
mov
add
add
or
add
add
xchg
add
dec
lods
mov
push
aad
into
icebp
add
dec
mov
add
add
cld
ljmp
daa
jp
in
fidivrs
cld
jns
jbe
dec
mov
pop
xor
outsl
stos
scas
rorb
add
lods
cmpsl
sub
shrl
or
dec
mov
lret
jmp
xchg
scas
dec
mov
nop
xchg
cmc
inc
mov
pop
push
mov
adc
xchg
daa
fdivs
test
and
add
add
enter
mov
pop
xchg
xchg
out
les
dec
sub
add
add
popf
mov
insb
add
add
ret
mov
test
mov
sbb
push
out
xor
test
add
mov
jecxz
inc
cmp
popf
inc
rorb
mov
or
popf
cmpsb
std
inc
fwait
cltd
mov
mov
jp
cli
sub
add
add
into
pusha
add
add
jae
add
add
pop
ret
repnz
mov
aaa
xchg
inc
mov
xchg
int3
xchg
bound
adc
test
mov
negl
insb
mov
in
push
shrb
lret
or
ljmp
mov
test
sbb
adc
movsb
std
xor
fwait
jns
dec
insl
lds
mov
add
and
add
add
mov
out
cmpsb
cmovb
popf
sbb
dec
xchg
xor
mov
add
add
xchg
mov
sahf
ret
push
mov
add
add
mov
sbb
scas
pop
ja
xor
add
in
orb
add
push
les
jbe
call
loope
js
pop
insb
add
add
loope
xchg
jno
notl
pop
jg
jp
fnsave
sbbl
sub
mov
jmp
inc
mov
jl
arpl
inc
mov
or
scas
push
mov
pop
xchg
inc
add
add
adc
push
pop
daa
test
repz
rcll
mov
out
rcrb
ljmp
iret
fnstcw
cmpsb
pusha
mov
sbb
add
arpl
mov
add
ds
pop
sbb
add
sub
add
add
sbb
cmpsb
dec
in
mov
fs
test
movl
test
jg,pn
arpl
add
sub
add
add
mov
mov
mov
mov
sbb
fcompl
mov
sub
cmp
fstl
adc
mov
ret
push
imul
cmc
adc
pop
icebp
push
jp
movsl
aas
es
pop
adcl
addb
add
inc
add
add
int3
shl
pop
in
inc
add
add
je
inc
nop
cmp
aad
not
iret
icebp
je
add
add
cltd
mov
repnz
stos
add
add
pusha
mov
adc
aaa
in
ja
and
jg
mov
popf
push
popf
js
addb
sub
add
add
int
sbb
scas
jno
mov
cmp
adc
insl
inc
jne
lds
mov
scas
mov
add
cmpsb
push
popa
aas
add
add
add
notb
and
testl
call
std
dec
bound
pushf
xchg
mov
ja
ja
dec
jmp
inc
add
add
mov
pop
jne
rolb
add
add
add
mov
mov
ljmp
push
imul
popf
or
sbb
add
add
xor
xchg
mov
add
add
add
or
sbb
je
sub
add
add
les
xchg
fnstenv
add
js
dec
xchg
add
add
add
mov
pop
pop
and
sub
add
leave
and
clc
inc
push
imul
inc
fsubl
mov
leave
lret
mov
ret
push
adc
and
add
add
xor
mov
imul
mov
add
add
jnp
mov
xchg
xchg
in
out
xor
mov
outsl
je
push
push
cmpsl
and
dec
and
cmpsl
mov
aam
popf
enter
add
add
pop
dec
jg
mov
push
mov
sbbb
mov
add
js
dec
inc
jnp
cli
or
add
add
add
mov
sbb
cmp
enter
pop
in
testb
sbb
add
add
lds
or
or
push
mov
mov
subb
stos
push
shr
xor
inc
fdiv
stos
inc
add
add
jg
loope
jp
sub
mov
add
add
add
add
jns
pop
xor
add
add
xor
stos
jae
xchg
lahf
pop
fwait
inc
adc
add
add
adc
cwtl
sub
add
add
sbb
aas
xchg
adc
int3
scas
mov
scas
sbb
je
mov
mov
xor
sub
adc
sahf
jl
pop
stos
pop
and
add
add
or
and
jmp
add
add
add
jp
aam
adc
cmp
sbbb
cmp
pushw
add
mov
or
fisubl
push
add
add
sub
add
add
cwtl
pushf
push
inc
ss
popf
insb
add
add
sub
add
add
call
cli
out
repnz
aas
cwtl
mov
addr16
or
test
cmp
mov
bound
lock
mov
add
movsb
pop
ret
dec
push
push
pop
repz
mov
mov
notl
add
add
es
mov
jecxz
mov
ret
xchg
in
add
add
dec
mov
xor
cli
inc
push
xchg
add
add
add
out
mov
dec
movsl
pop
pushf
push
lret
jge
jmp
add
dec
ja
je
daa
je
jno
xor
add
add
mov
mov
xchg
mov
aas
fwait
adc
and
mov
movq
inc
aad
xchg
pop
xlat
int3
ret
shll
aad
mov
dec
test
pop
add
add
add
cmp
jb
int
and
dec
inc
lahf
mov
add
add
rcrl
in
pop
adc
mov
fdiv
mov
sub
add
add
mov
mov
je
outsb
sti
sub
xor
jne
addr16
fimuls
add
add
stc
pop
bound
inc
push
pop
out
xchg
sbb
inc
loopne
je
dec
adc
rcll
lock
stos
data16
adcl
inc
mov
add
or
pandn
add
add
mov
mov
add
add
add
add
adc
pop
push
or
add
mov
aas
test
adc
int
xor
movsl
xor
push
repnz
sbb
dec
mov
sbb
xlat
pop
icebp
dec
setl
dec
fisubrl
sub
fidivl
loopne
jnp
addr16
pop
nop
test
lret
je
sbb
dec
mov
jb
cmc
jmp
decb
mov
cmpsb
jne
mov
cmp
push
sub
mov
mov
inc
pop
andb
nop
inc
cli
jno
pop
jp
add
add
push
hlt
jmp
icebp
cmovo
sub
loop
fiadds
add
add
adc
fdivs
or
add
add
stos
pop
hlt
inc
push
lcall
cmp
cmpb
push
mov
sub
add
add
and
add
add
xchg
mov
imul
xor
ja
push
es
xor
xor
into
loope
test
add
inc
push
pop
into
dec
cmpsl
lock
lds
cltd
mov
jno
add
add
sbbl
pop
xchg
pop
dec
pusha
mov
mov
or
imul
data16
fwait
inc
add
add
pop
cli
lret
jbe
and
fisubrs
out
loope
mov
xor
movsl
jmp
jne
push
jb
popa
pop
das
sbb
add
jb
jne
inc
add
add
mov
jmp
pop
mov
sub
ljmp
addb
mov
orl
xor
popf
lcall
sbb
or
add
add
add
add
push
xchg
mov
mov
add
add
add
dec
add
add
xchg
sti
pop
cmc
jnp
add
inc
sub
lahf
or
add
add
mov
jle
push
shl
leave
add
cmpsb
push
or
add
add
xorl
jge
inc
or
xor
push
shrb
or
jbe
cmp
xchg
loopne
cmp
xor
adc
cmp
mov
push
sbb
inc
or
mov
pop
mov
frstor
cmpsb
mov
xchg
cmp
ret
or
dec
mov
sub
xor
sbb
add
sbb
fisubrl
loope
pop
loopne
repnz
add
pop
xrelease
and
add
add
maskmovq
divl
popl
add
add
adc
pop
inc
movsb
ret
rcr
push
or
mov
and
add
add
sarl
adc
insl
rol
mov
lret
mov
call
loopne
inc
fmuls
inc
mov
mov
push
rorb
add
inc
sub
sub
add
pop
push
sbb
add
outsl
idivw
mov
add
jno
cli
and
add
add
sbb
jb
rcr
lahf
in
dec
and
pop
dec
shlb
jg
lock
pop
xchg
or
cmp
sti
bound
add
add
mov
stc
or
add
add
lahf
cmp
fwait
ljmp
idivl
loope
imul
into
cmp
push
mov
add
fwait
fs
mov
bnd
mov
cmp
or
pushf
divl
adc
sbb
push
jae
mov
xor
out
push
mov
add
inc
inc
jg
lock
inc
addb
les
xor
sub
add
add
ss
aad
xor
add
add
cmp
pusha
add
add
xor
test
jb
adc
mov
mov
fcoms
popa
or
add
add
xchg
fsubr
faddl
add
add
rcll
jl
pop
adc
add
enter
jl
enter
push
cmc
rcr
push
jecxz
sub
loopne
rcl
loop
pop
out
dec
adc
jg
stc
add
add
mov
repnz
fidivrl
xchg
repz
insb
add
add
lods
js
push
mov
shlb
add
add
add
add
mov
repz
rcr
pop
xor
fiaddl
pop
pop
nop
rorb
call
mov
inc
jge
idiv
shrl
sub
mov
rcll
dec
xor
push
shlb
add
add
xchg
sahf
dec
sarb
mov
cmp
pop
pop
psrlw
testb
fsubl
shrb
inc
mov
sub
mov
cmpsl
call
test
inc
leave
mov
sbb
cmp
ds
adc
add
add
lds
add
add
repnz
movups
inc
or
sti
sub
add
add
gs
xchg
movsl
ljmp
xchg
movsl
cltd
sbb
inc
or
add
add
das
inc
mov
cmp
mov
mov
ss
mov
mov
dec
sti
pop
or
fwait
or
in
cwtl
mov
mov
mov
lret
sbb
es
push
dec
push
lcall
inc
jnp
mov
add
fiaddl
lcall
sbb
adc
add
add
adc
adc
mov
mov
jge
stos
push
push
fistpl
mov
inc
ror
xchg
pop
loop
mov
orb
add
sub
add
add
cwtl
mov
sub
add
push
addl
mov
cmp
add
pop
sub
add
add
add
add
cmp
add
add
inc
add
add
insw
shlb
xchg
mov
clc
mov
add
add
add
xchg
lds
xchg
jl
jbe
xchg
or
add
xchg
and
insl
nop
and
jmp
or
add
add
push
imul
dec
xchg
jle
arpl
adc
cmp
add
test
movsb
jno
pushf
jg
fisubl
add
ret
aam
add
es
lcall
ret
push
pop
or
int
cmp
psubd
sbb
xor
fsubp
sbb
outsb
rol
lcall
mov
stc
mov
pushf
aas
out
push
mov
divl
ret
xchg
and
add
add
xchg
mov
push
xchg
push
mov
cltd
xchg
dec
or
add
add
xor
pop
js
loope
mov
aaa
aam
or
jg
popf
cld
sub
xchg
mov
outsl
call
jns
shll
shlb
scas
push
or
add
add
xchg
rol
testl
orl
add
jmp
adc
jns
add
add
movups
imul
jecxz
push
std
movsb
mov
add
add
mov
and
mov
js
popf
inc
mov
jno
fiadds
sbb
sub
add
add
iret
push
test
jo
sub
add
add
out
xchg
bound
fdivl
in
xchg
and
sub
add
add
out
sahf
lret
clc
adc
test
push
outsl
cltd
and
add
add
inc
push
nop
add
sbb
bnd
sahf
nop
xchg
or
adc
jle
imul
mov
shlb
pop
add
ds
or
mov
pop
mov
add
sbb
mov
mov
add
jnp
add
cmp
aad
sar
jo
loop
mov
fwait
js
mov
jnp
push
and
icebp
jl
push
jb
ret
sbb
mov
xchg
fs
shrb
shrl
jge
jns
test
add
sar
pop
mov
mov
mov
add
add
mov
add
stos
cld
bound
sub
rclb
add
sbb
loopne
xchg
mov
sub
mov
cmpsb
enter
gs
leave
lea
add
add
sti
add
add
add
add
add
add
mov
dec
mov
push
data16
xor
jne
add
add
add
fildl
imul
ret
flds
add
lods
inc
mov
lods
add
xchg
inc
iret
loop
mov
test
fwait
mov
les
in
sbb
jmp
cmp
xlat
cwtl
jno
daa
or
sub
and
xor
loopne
mov
xchg
lret
dec
pop
addr16
mov
mov
xchg
fcoml
fcomps
mov
xlat
dec
mov
push
test
cmp
fistps
stos
push
sbbl
adc
aas
ss
lcall
hlt
ret
mov
and
mov
mov
lds
lods
add
add
add
repz
subb
mov
add
loope
js
jle
rcrb
mov
and
add
add
add
pop
test
pop
popa
nop
ret
add
sub
add
add
xchg
xor
pushf
test
hlt
mov
add
add
scas
cmp
sbb
pop
push
xlat
sahf
scas
popa
lea
out
mov
mov
cld
pop
test
cs
or
add
add
xchg
add
add
xor
enter
lahf
mov
add
mov
dec
jle
jmp
stos
hlt
pushf
test
pop
inc
cs
cmp
adc
pusha
mov
lea
push
hlt
popa
dec
lds
in
mov
add
add
add
popa
fs
sub
ret
and
test
jb
sbb
push
push
test
adc
out
fiadds
mov
xlat
add
pop
sub
add
add
insl
mov
jbe
adc
mov
adc
add
add
add
outsl
mov
jb
hlt
pop
test
xchg
adc
mov
and
sub
mov
sub
add
add
add
fsubrl
dec
int3
out
cmp
inc
repnz
stc
enter
mov
jmp
add
cmc
mov
stos
cltd
in
mov
add
add
std
into
add
and
mov
jmp
add
mov
fucomip
add
fimull
and
xchg
cs
add
add
add
add
add
cmp
push
add
add
jns
inc
add
add
sahf
mov
hlt
popf
arpl
sub
rorb
mov
add
add
add
ja
fstpt
push
aaa
xchg
aaa
jne
xlat
dec
add
push
jbe
jle
leave
clc
jbe
gs
cs
pop
jmp
pop
ja
repnz
jno
stc
jno
jle
cld
int3
repz
sar
je
add
add
insb
add
add
leave
addr16
dec
inc
mov
int
mov
in
shrb
cltd
ds
call
or
sbb
push
mov
jne
fsub
fcmovu
fcomps
scas
pop
jb
inc
test
add
pop
xchg
mov
cmp
add
add
lods
pusha
mov
mov
stos
mov
jae
jg
stc
mov
jnp
jmp
xor
add
add
add
add
add
add
add
adc
adc
pop
dec
repz
xlat
lds
add
cmp
xchg
pop
pop
adc
fldcw
add
add
mov
gs
lock
popl
add
push
xchg
sub
push
or
outsb
iret
out
and
add
add
add
add
ficoms
dec
mov
js
subb
rol
mov
add
add
xor
xchg
xor
mov
mov
lods
std
adc
add
add
loopne
jecxz
add
add
add
add
add
jl
and
sbb
xlat
mov
pop
cmp
xor
add
lds
xor
fwait
push
mov
adc
or
add
add
dec
add
add
js
adc
ss
or
mov
leave
into
add
xchg
pop
xlat
mov
cmp
inc
xor
inc
mov
cmpsb
jl
push
push
sbb
add
add
cmpsl
and
add
add
dec
add
add
ficompl
orl
mov
mov
roll
push
cli
test
sbb
mov
add
pop
jne
outsl
dec
jne
add
add
add
add
add
ret
sar
adc
add
cmp
mov
cs
adc
xchg
hlt
repz
test
fucomi
jne
sbb
jl
cli
inc
add
add
xchg
mov
hlt
inc
jo
icebp
adc
dec
into
aas
pop
mov
jle
adc
add
mov
pop
lcall
and
add
add
lods
push
aam
sbb
mov
cmc
cltd
sub
fcmovnbe
xchg
sarl
mov
jo
push
pop
fidivrs
fisttpl
sbb
in
scas
mov
sub
std
push
mov
xchg
xor
xchg
stc
pop
sahf
aas
das
mov
hlt
mov
sbb
repnz
aad
jo
or
mov
mov
pop
stos
stos
xor
stos
mov
push
dec
outsl
jmp
loop
shl
ret
mov
movl
xchg
or
dec
loopne
mull
mov
outsb
or
ljmp
fmull
shrb
sbb
nop
insb
mov
xchg
dec
adc
xor
cwtl
int
or
int3
dec
mov
adc
sarl
cmp
jne
idiv
or
mov
scas
stos
shrb
jge
loop
lcall
repz
decl
add
add
inc
push
shr
add
add
sarb
mov
scas
xchg
add
push
push
xlat
dec
js
insl
test
int
sbb
add
add
add
data16
mov
add
jge
or
cmp
dec
add
xor
xor
jns
push
in
mov
fsubl
mov
je
or
outsb
loope
mov
fld1
xor
pop
adc
add
mov
add
aas
mov
sbb
mov
cmp
repnz
and
xor
or
add
add
push
enter
lcall
pop
jns
adc
sbb
inc
jmp
lods
dec
aad
lcall
adc
andb
add
add
stos
push
mov
dec
sub
mov
scas
movsb
mov
add
adc
add
add
adc
data16
popf
push
daa
js
sub
add
add
jae
dec
mov
aam
jne
mov
push
cmpsl
xchg
ss
push
arpl
add
out
push
adc
push
and
add
add
mov
or
in
lods
pusha
mov
sahf
jo
out
loopne
decb
les
enter
call
aaa
or
add
add
data16
mov
mov
add
data16
ja
jge
or
lea
call
cmpsb
sbb
add
jl
push
and
cs
aas
mov
push
pop
adc
add
add
jno
xor
xchg
add
add
icebp
push
jecxz
xchg
loop
rcll
ror
pop
outsb
xchg
stc
out
or
add
add
jb
insb
add
add
mov
insl
xor
std
dec
add
add
mov
inc
push
rcrb
shrb
mov
mov
add
xchg
pop
cmp
lock
fsubrp
aas
lock
sarb
push
adc
sbb
call
push
lds
add
mov
add
add
je
popa
inc
mov
mov
and
add
add
mov
mov
add
outsl
faddp
mov
bound
add
cltd
add
jecxz
inc
shrb
es
fwait
mov
sub
add
add
xor
jno
in
inc
and
add
add
push
jge
imul
adc
mov
adc
sub
and
add
add
ljmp
push
xor
jg
mov
sub
xchg
mov
sub
insl
into
mov
or
jg
add
add
push
aaa
jmp
ret
test
stos
jg
subb
les
mov
fisubrl
mov
jnp
addr16
popa
add
sti
inc
add
add
das
xchg
out
dec
adc
xchg
cmp
call
shll
add
add
test
xchg
and
mov
les
sub
addr16
in
push
loop
sti
pop
push
enter
cmc
mov
pop
cmc
insb
mov
add
add
add
xchg
xchg
das
xor
insl
jns
jb
fldl
loopne
sub
mov
add
mov
popa
xorl
aad
and
mov
push
pushf
sbb
inc
or
fs
std
mov
add
add
out
mov
mov
add
add
add
sbb
jbe
cmp
pusha
mov
push
cld
ja
call
mov
dec
add
add
add
addr16
or
mov
sbb
mov
mov
add
add
jl
xor
ja
ja
xor
inc
je
pop
cmpl
add
add
sbb
pop
or
repz
mov
cld
sbb
call
xchg
add
add
enter
mov
sub
sbb
in
pop
inc
addb
push
adc
add
mov
imul
stc
in
jo
mov
lcall
lea
insb
mov
fistl
mov
sub
add
add
mov
add
loop
imul
fsub
push
jge
daa
jno
jnp
xor
add
add
push
push
and
mov
leave
add
add
add
jmp
jp
and
add
add
ret
out
movups
bound
add
xor
dec
cmpsl
push
sbbl
mov
push
inc
sbb
add
add
xchg
sub
fnsave
inc
add
add
adc
mov
adc
mov
lods
inc
rorl
jg
das
mov
push
push
xchg
into
insl
fisubl
insb
mov
fists
lds
add
add
and
push
jno
xor
and
xchg
mov
add
add
dec
add
add
fstl
adc
and
fdivrl
xor
outsb
pop
popf
iret
cmp
jnp
mov
xor
mov
sbb
add
add
lock
xchg
bound
pop
pop
xchg
pop
xchg
push
inc
mov
iret
add
mov
xchg
sub
cmp
insb
add
add
nop
call
mov
pushw
or
shrb
pop
jnp
mov
xlat
mov
sbb
stos
sbbb
mov
mov
sub
add
jg
mov
mov
lret
data16
fmul
clc
jmp
and
mov
add
push
mov
and
jg
xlat
adc
leave
fbld
js
mov
imul
add
add
add
scas
mov
xlat
mov
rcrl
sub
push
lods
bound
push
add
sbb
add
add
mov
mov
cwtl
pop
and
add
add
add
mov
icebp
int3
adc
in
dec
mov
test
lahf
and
add
lcall
and
ja
lret
sbb
repz
add
add
testl
add
add
jne
add
add
outsl
xchg
shll
mov
inc
addr16
lahf
repz
add
pushf
fstl
ds
jb
js
add
add
adc
add
add
addb
add
lods
pop
lcall
add
data16
test
pop
rclb
xchg
jae
inc
lock
mov
cmp
jno
add
add
and
popa
aas
clc
dec
add
add
add
xchg
cmpl
mov
add
cmp
add
add
push
push
in
mov
in
jbe
roll
je
xchg
cmp
icebp
push
or
adc
xlat
push
shll
cmp
pop
sub
dec
iret
mov
pusha
mov
cmc
fdivrp
leave
cmp
xchg
sbbl
add
mov
mov
pop
dec
mov
push
add
and
add
test
mov
js
xchg
js
jg
xor
cmpsb
loop
mov
repnz
or
mov
mov
push
loop
js
rcrl
cmc
or
sub
fcoml
jb
cmp
mov
mov
mov
cmpsl
or
add
add
add
add
mov
and
add
sbb
stos
xchg
jne
pop
jp
xor
lret
or
jae
leave
and
jno
pop
fiadds
jbe
aas
adc
das
jmp
or
add
add
and
inc
fcmovnb
cmp
add
add
add
sbb
daa
lds
sbb
xor
push
into
incb
fwait
jns
pop
jnp
mov
rclb
sub
add
add
pop
add
iret
jmp
sbb
inc
adc
add
add
add
xor
adc
cmp
das
hlt
pop
fcmovbe
js
fdivs
test
shr
repz
jg
into
fstpt
out
jmp
pop
ljmp
xchg
imul
pop
lds
shlb
push
popf
std
xor
lret
sub
add
add
pop
test
fisubrl
test
adc
sub
pop
adc
out
jne
or
daa
push
add
add
add
add
add
push
ror
cwtl
outsb
js
shll
add
cmp
add
loopne
stos
in
mov
cmp
xchg
stos
push
pop
pop
push
ss
add
cli
xchg
add
add
sbb
add
inc
jle
mov
push
sbb
add
mov
jg
sub
mov
mov
call
rcll
cld
inc
es
jo
xor
xchg
imul
add
add
sbb
mov
fisttpl
orl
aaa
fstps
popa
lahf
cmp
push
out
shlb
xchg
push
inc
lret
or
push
lea
add
dec
mov
in
mov
addr16
mov
in
dec
sub
xchg
cmc
sahf
mov
jnp
inc
add
add
cld
test
cmp
mov
pop
pop
in
jb
jecxz
add
add
add
add
cmp
dec
and
and
add
add
into
call
add
icebp
lret
daa
es
inc
mov
into
xchg
fists
mov
mov
xchg
repnz
push
fimuls
shlb
mov
xchg
rcl
out
gs
jbe
adc
icebp
iret
mov
add
add
pop
aas
test
add
add
fs
mov
add
add
cmc
ss
fiaddl
bound
subb
xchg
sarb
out
cwtl
cwtl
add
dec
push
mov
popa
popf
out
mov
stos
sub
xor
hlt
adc
cmp
lahf
sub
pop
in
push
inc
je
insl
cli
sbb
cmp
ret
mov
ja
lods
dec
fstps
ljmp
dec
in
out
mov
gs
push
pop
out
mov
cmp
push
ds
pop
push
cmp
push
rolb
xlat
out
and
int3
or
aam
aam
mov
jl
pop
jmp
add
push
xchg
mov
push
cmc
pop
mov
imul
sbb
add
add
jge
mov
test
jne
pop
cmp
add
mov
mov
mov
add
or
or
lods
lret
sub
lea
add
add
test
add
add
mov
das
out
std
pop
lods
mov
lds
add
add
adc
lcall
bound
inc
pop
cmp
ja
adc
xchg
enter
add
stos
jbe
push
bound
mov
jl
lret
sub
sub
inc
mov
lahf
and
add
add
cld
clc
outsb
sub
add
add
sbb
mov
repnz
add
add
pop
aad
cli
inc
es
inc
repnz
add
and
push
ficomps
aaa
mull
add
add
in
in
inc
or
sub
add
add
and
add
add
dec
scas
inc
or
imul
repnz
or
add
add
hlt
mov
movsl
jb
add
add
add
loop
addl
mov
mov
add
add
jnp
pop
sub
add
add
cmp
int3
call
mov
pop
aad
icebp
jae
add
xor
and
ja
add
add
or
scas
jle
ss
icebp
subl
cld
icebp
cmpsb
aas
in
pushf
ljmp
js
push
or
pop
push
shlb
jp
push
scas
add
add
add
pop
pop
dec
add
add
mov
lock
sbb
jl
cltd
or
add
add
add
cmp
fsubrs
addr16
and
pop
outsl
aam
xor
in
cmpsl
jae
mov
repnz
movsl
sti
mulb
or
cltd
icebp
divb
add
addr16
aam
cmp
mov
arpl
sbb
aam
jbe
jnp
mov
repz
dec
stos
stos
sbb
gs
sbb
decb
leave
cld
ds
insl
inc
add
add
xchg
mov
scas
mov
and
into
adc
xchg
rorl
outsb
mov
push
arpl
add
add
or
scas
xor
aam
stc
movsl
xor
call
testb
ss
mov
pop
xlat
lret
add
add
push
adc
fwait
dec
add
add
lcall
inc
xor
add
add
mov
mov
and
pop
int
mov
sahf
leave
mov
cwtl
ret
add
add
insl
mov
mov
dec
jmp
add
jge
loop
mov
xchg
or
jno
fnsave
shrl
xchg
lahf
push
and
add
add
mov
imul
add
add
pop
xor
int
sti
sbb
inc
lods
imul
cmp
imul
jl,pn
lret
add
or
add
add
in
push
pop
arpl
push
add
or
loopne
movsl
and
add
add
or
add
add
cwtl
stos
mov
mov
test
xchg
sub
xor
imul
mov
je
loopne
sub
add
add
popa
add
inc
lods
das
mov
fcoms
outsb
or
pushf
push
mov
pop
lods
add
mov
add
jne
jo
dec
sbbb
jge
ljmp
loop
bound
add
and
add
add
cli
insl
pop
and
daa
rorl
adc
popf
mov
jp
cmp
jno
test
push
xor
inc
cmp
xor
cmp
pushf
add
add
add
outsb
cmc
or
add
add
fstps
add
add
fdiv
das
divb
popa
repz
jle
cwtl
xchg
dec
hlt
xchg
out
fidivrl
mov
add
add
rclb
mov
mov
dec
out
mov
xchg
push
adc
cs
ficomps
shl
mov
mov
inc
mov
call
add
cmpsb
daa
mov
add
add
fmuls
add
add
dec
loopew
sarb
xchg
out
into
pop
lock
std
adc
dec
mov
jae
arpl
xchg
lea
pop
insl
and
add
add
mov
pushl
cmp
mov
mov
test
scas
pop
add
add
add
out
xor
insl
es
pop
xor
jmp
mov
xchg
mov
and
jle
stos
negl
lods
mov
dec
add
add
nop
jo
lds
mov
ja
dec
mov
mov
add
add
sub
in
outsl
cmp
fnstcw
addr16
loopne
push
rcrl
mov
mov
xor
mov
mov
sbb
add
add
add
add
movsl
jne
and
bound
adc
pop
aas
xor
add
leave
sbb
add
cmp
xor
mov
popa
xchg
outsb
sbb
cmpsb
lcall
int3
cli
mov
ja
push
xor
xor
adc
add
pop
aas
cmc
jns
data16
add
add
add
int
rcll
mov
testl
mov
out
icebp
fisttps
pop
les
in
push
pushf
xchg
in
and
push
mov
mov
pop
rcll
repnz
cmp
mov
cmp
add
jg
adc
sbb
jbe
xor
add
add
ljmp
push
fs
into
adc
aaa
imul
jg
mov
cmpb
push
mov
add
test
add
add
dec
mov
mov
mov
add
add
mov
shll
dec
add
add
xchg
int3
orl
add
enter
cs
pxor
stos
daa
div
inc
shr
mov
add
xchg
mov
imul
js
pop
scas
int3
sbb
scas
shr
push
inc
xor
push
leave
mov
jae
mov
mov
ss
push
ret
pop
mov
mov
mov
jnp,pn
ret
sbb
incb
dec
add
add
push
imul
push
mov
std
sub
add
add
xor
cmp
les
mov
lods
and
add
add
std
insb
add
add
or
add
add
adc
lods
sbb
cmpsl
and
add
add
add
add
aad
shlb
add
add
cld
mov
in
test
and
mov
das
mov
in
or
adc
dec
mov
push
mov
sub
or
sbb
rcl
add
out
mov
pop
xchg
cmp
pop
test
or
add
add
rcll
inc
xchg
subb
xchg
daa
dec
add
add
add
mov
adc
mov
cmc
cmp
xchg
add
ljmp
data16
mov
add
out
sahf
insl
dec
fwait
xor
inc
repz
inc
add
add
pop
cltd
sbb
mov
enter
add
es
jmp
loope
cmp
adc
mov
add
add
push
dec
outsl
cmpsb
aaa
test
dec
or
inc
das
dec
add
add
shll
add
add
repz
repnz
fdivs
inc
aad
dec
lcall
mov
popf
push
loope
lea
les
lret
mov
and
ds
call
les
adc
test
test
and
iret
inc
mov
imul
inc
aas
sahf
scas
dec
mov
add
ds
push
push
xchg
pop
ret
or
push
push
dec
push
adc
adc
add
add
push
imul
sbb
clc
test
pop
or
jp
pop
jae
xor
pop
ja
nop
inc
icebp
jb
int3
loope
xor
in
jg
sahf
cmpsb
lahf
jecxz
out
pop
pop
es
push
pusha
add
add
into
xchg
loop
daa
mov
inc
hlt
in
fisttpl
sub
loope
adc
xchg
out
pop
and
fmul
add
testb
add
je
sub
jns
popf
ficompl
inc
push
arpl
sti
lods
faddl
mov
fstpt
js
call
mov
pop
or
and
mov
test
push
push
mov
add
add
sub
add
ja
add
add
in
aas
ss
sbb
push
notl
in
repz
fimull
add
push
fdivrs
or
add
add
add
add
or
stos
stc
sub
add
add
mov
fisttpll
add
add
outsb
lahf
and
cmc
xchg
les
inc
ret
out
aam
enter
sbb
lock
add
add
add
add
inc
add
add
and
pop
iret
pop
push
in
aaa
xlat
out
or
pop
rolb
add
add
add
add
sahf
in
fildll
push
jge
hlt
mov
stos
add
out
cmp
lds
inc
dec
outsb
scas
cld
int3
dec
mov
mov
add
add
push
sub
cmp
jno
mov
les
mov
popa
jecxz
and
add
enter
fwait
jbe
or
add
add
add
add
mov
addb
repnz
cmp
test
subb
lods
adc
lahf
xor
sub
push
xchg
jmp
roll
mov
mov
add
imul
es
leave
jne
mov
inc
mov
jecxz
lret
sbb
jno
cmp
popf
popf
clc
xor
add
add
les
fistpl
mov
cmp
sub
add
add
lret
pop
loope
sub
jle
orl
lock
jle
and
inc
shlb
push
in
push
sub
aam
and
adc
fldl2t
mov
je
adc
sub
mov
push
rcrl
inc
into
outsl
fmuls
movsl
add
add
add
das
aas
pop
and
icebp
push
popl
xor
clc
icebp
jae
enter
xchg
adc
add
xor
sub
sti
pop
jb
add
ret
inc
mov
loop
fisubs
addr16
es
xchg
push
lea
addl
pusha
add
add
scas
shll
jl
scas
repz
dec
sub
fsubr
jge
push
out
mov
push
or
push
arpl
mov
add
xchg
xchg
mov
add
add
add
add
stc
inc
or
add
add
push
ret
aad
adc
data16
ret
xlat
repnz
add
add
into
push
mov
add
cmc
push
out
loope
outsl
sub
mov
mov
in
imul
rorl
pop
jo
in
jge
lahf
inc
lock
aas
lods
and
cld
js
cltd
and
add
add
and
push
push
decb
push
adc
adc
call
lahf
fisttpl
loope
enter
mov
pop
test
xchg
loop
mov
adc
xor
push
or
xor
incb
sub
mov
or
add
add
mov
xor
add
add
xor
push
sbb
xchg
inc
xchg
outsb
lock
sub
xlat
dec
xor
imul
push
gs
lods
dec
jl
sub
mov
data16
add
add
inc
shrl
add
add
lea
nop
mov
iret
dec
lret
icebp
cmpl
add
movsb
out
inc
mov
test
add
add
add
or
sbb
into
incb
pop
scas
jns
pop
mov
or
add
add
add
lahf
adc
lret
add
add
inc
lods
xchg
mov
pop
sbb
pop
sub
mov
adc
ret
sbb
add
add
test
add
add
rcrb
incb
add
cmp
and
xchg
movsl
add
add
add
pop
and
mov
js
aam
mov
sub
cmp
push
aaa
aam
mov
dec
add
add
andl
pop
pop
push
mov
jp
xor
and
add
add
push
cltd
int
inc
icebp
sub
push
mov
dec
inc
mov
mov
fwait
jle
push
rorb
adc
add
add
pop
lret
xchg
pop
pop
xor
loop
scas
aam
hlt
push
sbb
outsl
fs
sub
add
push
into
sub
xchg
add
rcll
inc
push
adc
jmp
add
mov
nop
xchg
dec
jl
add
fcoms
nop
subb
fnstsw
jge
add
jecxz
mov
rcll
imul
add
sbb
adc
add
add
dec
jmp
cld
jnp
ret
pop
fsubrs
add
add
add
add
shl
push
es
ja
ja
lock
add
add
mov
mov
les
dec
movsb
sbb
push
scas
rclb
scas
push
mov
add
push
clc
enter
add
mov
pop
fadds
and
add
add
adc
in
sbb
stos
cmp
xchg
push
ljmp
dec
lds
popa
mov
add
adc
lds
sub
add
inc
pop
add
add
inc
into
out
test
xchg
lods
roll
pushl
add
add
jae
lods
jp
cmpl
mov
fwait
add
sahf
jp
mov
add
add
xor
and
jb
sub
or
in
imul
sbb
movsl
lret
test
sbb
add
or
fwait
mov
jbe
insb
mov
jp,pn
add
scas
push
adc
dec
add
mov
mov
arpl
add
movb
jmp
in
inc
dec
adc
add
or
add
add
rcrl
add
mov
lret
mov
pop
sbb
add
add
addr16
xor
xor
mov
sbb
sbb
gs
xchg
or
mov
cmp
inc
or
cli
js
aam
cmpxchg
mov
xchg
mov
ja
and
add
add
mov
sbb
sub
loopne
fidivrs
xchg
aad
stos
call
das
call
push
inc
push
out
iret
lret
xor
out
or
xor
or
add
add
pop
xlat
repz
or
add
add
loope
mov
xchg
and
rcr
roll
add
lret
mov
mov
sahf
sub
cmp
scas
lahf
jns
xchg
aad
sbb
add
add
mov
fs
mov
or
ds
lcall
add
add
andl
add
add
adc
push
or
add
add
add
add
jge
fimuls
aam
cmp
lods
repnz
fsubs
les
out
or
sub
sub
lret
pop
ret
insb
add
add
xchg
dec
push
fcmovnu
xchg
mov
add
lea
and
push
xchg
jne
pop
dec
add
add
scas
push
in
xorl
add
add
lahf
fisubrs
jecxz
add
mov
notl
adc
dec
daa
push
das
add
mov
cs
and
add
add
add
fsubr
fistl
push
add
bound
xor
jae
xor
mov
insl
add
lret
shrl
addl
push
fmul
xor
xchg
mov
add
in
daa
cmpb
sbb
lret
cmpsl
mov
push
and
jbe
rcr
push
mov
mov
xchg
xor
mov
test
fistpll
cmp
add
add
imul
ds
push
dec
lock
xchg
fldenv
add
pop
ret
jmp
adc
mov
pop
addl
add
shl
divb
popa
and
es
lock
imul
idiv
jne
mov
addb
fmulp
mov
inc
or
and
add
fmuls
push
scas
xchg
popa
adc
mov
mov
adc
imul
cmp
add
add
daa
out
fstps
push
in
xbegin
cmp
fs
cs
leave
xor
loope
out
add
add
sub
or
add
add
mov
fcmovbe
stc
nop
pop
mov
out
jb
orb
add
add
cmp
mov
into
and
test
rorl
int3
outsb
ds
mov
push
movsl
loop
aas
mov
mov
add
add
mov
lds
add
add
in
loopne
push
sub
mov
adc
add
add
push
fisttpl
std
ja
andb
sarb
xor
mov
int
or
add
stos
sti
cmp
mov
stc
fbld
mov
push
js
pop
inc
mov
mov
test
add
add
add
add
mov
cwtl
xchg
aam
push
dec
jmp
out
rcll
sbb
xchg
jmp
mov
and
dec
add
add
jo
or
add
add
or
data16
jae
ret
jge
lods
stc
fwait
push
jle
add
add
push
stc
into
fsubs
add
jae
mov
aas
dec
jnp
cmp
mov
add
imul
stos
mov
add
cwtl
pop
notl
add
jmp
jae
adc
jg
jle
lret
mov
push
lods
fisttpll
add
add
jae
mov
sub
mov
loopne
add
inc
dec
std
pop
test
mov
rcrl
add
add
and
lahf
call
add
xor
sti
push
fdivr
mov
push
inc
call
pop
push
repz
loope
ss
aam
pop
push
jbe
mov
add
and
call
pop
xchg
push
or
add
add
add
add
and
add
add
mov
cmc
in
cmp
push
push
mov
aam
loopne
fmul
xor
mov
add
add
xor
bound
and
push
xchg
adc
add
inc
cmp
push
and
add
add
mov
adc
stc
fsubr
pop
aaa
pop
mov
xor
lcall
push
cmp
pop
sub
mov
insl
stos
fdivrs
mov
add
add
mov
adc
and
add
lahf
loope
lret
lret
int
adc
test
cmpsl
out
mov
in
out
gs
pusha
mov
push
mov
dec
cmp
push
or
jge
ret
push
test
loope
fisubs
rorl
xchg
or
add
add
mov
jp
pop
sub
adc
pop
shlb
or
add
add
add
das
ret
push
shll
andl
mov
movsb
pop
mov
and
jo
cmp
leavew
stos
mov
jle
mov
jle
mov
test
sub
loop
or
add
add
inc
and
cmp
mov
ss
pusha
add
add
addl
add
push
fwait
cli
jae
add
add
fcomps
or
add
sahf
inc
add
add
pushf
mov
rcrb
push
and
sub
or
add
std
in
loopne
inc
mov
sub
add
add
cmp
lret
add
add
fldcw
scas
dec
add
bound
pop
jle
add
add
add
jg
push
mov
fdivs
int3
mov
out
dec
add
add
add
dec
ljmp
jns
cwtl
pusha
mov
loopne
out
sub
add
add
xorb
ds
mov
adc
sbb
add
mov
add
add
je
inc
add
add
push
add
add
add
test
mov
mov
xchg
xor
push
sub
popa
xchg
push
lahf
jmp
nop
rol
xor
jnp
popf
hlt
aad
mov
rclb
js
ss
mov
repz
xor
in
and
add
add
out
mov
mov
imul
add
movsb
xor
add
sbb
outsb
push
das
adc
and
add
add
adc
jge
dec
mov
adc
add
add
dec
jb
xchg
inc
add
add
es
cmp
fs
nop
aaa
ja
xchg
mov
in
jbe
les
pusha
add
add
sub
add
add
mov
fdivs
add
lds
roll
add
add
pusha
add
add
imul
rolb
add
add
notl
test
shll
add
add
in
test
fnstenv
fmuls
add
add
aad
daa
scas
push
cmpsb
pusha
add
add
and
dec
out
rclb
jae
adc
idivb
add
lret
mov
loope
inc
les
mov
lods
and
jle
mov
pop
mov
js
adc
mov
jl
cmpsb
push
icebp
cmp
loop
jl
repnz
mov
addr16
js
cltd
cmp
xchg
inc
sub
add
add
xor
cmc
lods
sbb
sub
add
add
add
mov
mov
inc
stos
mov
xor
dec
add
add
inc
mov
jae
xor
dec
data16
in
dec
dec
loop
add
add
stos
push
adc
and
add
add
je
dec
out
inc
mov
subb
add
add
fnsave
scas
addr16
mov
add
mov
inc
iret
idiv
into
mov
jno
icebp
mov
push
pop
pop
xor
sub
mov
iret
jne
pop
shr
and
add
add
clc
mov
fwait
std
sub
xchg
push
jne
push
pop
push
and
mov
add
add
mov
sub
fdiv
movsl
inc
dec
add
and
add
add
sar
pop
inc
adc
or
js
mov
xor
push
aam
pop
push
subb
add
add
or
dec
add
add
notl
movsb
xor
repz
jnp
inc
scas
push
out
cmpsb
movsb
adc
jp
mov
add
add
add
add
mov
jp
push
insl
popf
mov
adc
fistps
cmpl
or
inc
rcrb
cmc
stc
xor
dec
jns
scas
pop
fiaddl
stos
aaa
cmp
imul
push
cmp
mov
mov
sbb
push
xor
push
inc
imul
add
add
sbb
mov
das
add
sahf
adc
lret
sar
int3
out
or
adc
sbbb
mov
loopne
mov
aaa
mov
cltd
cmp
lret
push
aam
push
fwait
mov
add
add
push
clc
sbbl
add
add
subl
mulb
add
add
adc
mov
xor
add
pop
test
sarb
les
add
add
add
hlt
repz
addb
cmp
insb
add
add
call
add
add
test
pop
sbb
dec
jo
movsl
pop
notl
cs
js
test
mov
xor
mov
push
sbb
mov
loopne
cwtl
pop
ss
loop
je
pop
or
add
add
inc
xor
jb
test
shrl
adc
and
jmp
adc
and
pop
andl
hlt
pop
lods
std
push
cmp
sbb
das
dec
push
outsb
fldl
cmpsb
bound
push
xchg
insl
jb
ret
leave
leave
imul
aaa
mov
fldt
mov
pop
test
dec
ja
enter
fisubs
xchg
cmp
adc
add
add
cmp
int
fs
inc
imul
movl
xor
sub
pusha
add
add
xchg
or
add
xchg
add
daa
je
insl
insb
add
add
mov
pop
push
jge
jmp
cmp
out
inc
pop
mov
test
sti
stos
es
aad
pop
push
mov
outsl
loopne
sub
xor
push
fwait
mov
pop
mov
addr16
or
js
aaa
inc
jne
mov
cmp
inc
xor
add
mov
movsl
xchg
mov
add
add
xchg
inc
and
xchg
add
add
add
sub
mov
shrl
dec
std
mov
repz
loope
mov
pop
mov
clc
sahf
jge
mov
mov
add
add
clc
sub
add
add
pop
adc
cltd
mov
add
add
jmp
mov
push
sbb
jg
arpl
or
and
mov
cmp
adc
push
fs
stos
xor
or
ds
mov
add
add
lcall
sbb
add
add
mov
inc
cli
aad
test
add
add
movsl
flds
fdiv
adc
mov
pop
xor
inc
pop
adc
add
add
lock
xchg
sub
add
add
pushf
ret
adc
mov
mov
rcll
mov
les
add
icebp
or
lcall
xchg
mov
and
add
add
pop
data16
fwait
lahf
adc
sahf
out
add
add
jp
imul
inc
rcll
idivl
inc
xchg
mov
add
add
sbb
adc
xchg
aam
rcr
adc
call
stos
mov
fnstcw
add
push
in
push
int
daa
and
add
add
sbb
movsb
pop
in
xorl
push
add
add
add
add
add
dec
std
js
ret
rolb
add
jmp
stc
or
add
add
mov
stos
push
test
outsb
aas
sub
push
sbb
or
dec
in
cmpsl
int
ret
fwait
ds
cltd
in
adc
into
out
or
imul
mov
decb
cmp
insl
fcomps
add
add
std
xchg
rcl
jno
arpl
cmp
movsl
sbb
adc
negl
mov
fcmovb
mov
add
add
in
cmp
push
mov
inc
sub
cmc
jecxz
nop
ret
xor
movsl
hlt
push
jae
stc
push
out
test
in
and
lcall
dec
mov
xorb
pop
xor
add
add
gs
leave
mov
subb
mov
cs
sbbl
shl
sub
add
xorb
ja
cmp
cmp
sbb
pop
inc
adc
mov
mov
mov
dec
push
add
add
add
pop
pop
mov
popa
push
testb
mov
add
sbb
add
fsubrs
shl
or
fsubr
lahf
dec
push
loop
sub
add
add
dec
add
add
rcll
jae
loop
insl
out
mov
mov
stos
out
pop
psubq
jae
jns
inc
add
add
sub
add
add
popa
rcrl
add
add
add
out
hlt
jecxz
inc
add
add
pop
add
add
pop
xchg
paddw
in
gs
sub
add
add
add
add
mov
lds
cmc
xchg
ja
sbb
inc
aas
sbb
roll
cmpsb
into
sub
loopne
mov
dec
dec
fs
inc
movsb
jmp
push
test
add
add
in
js
mov
out
movsl
fsubs
xor
sub
mov
js
lret
cmpsw
sbb
cmp
imul
sub
sub
mov
hlt
jno
push
xchg
dec
sub
mov
and
or
cli
inc
pop
aas
out
and
add
xchg
jp
xor
xor
cmp
add
inc
mov
cwtl
in
dec
mov
mov
cli
scas
shlb
orl
add
add
add
add
cmp
js
mov
xor
inc
mov
dec
arpl
xor
xor
cmp
adc
pushf
mov
add
add
clc
out
and
inc
imul
scas
adc
jle
adc
adc
rclb
repz
cmp
lcall
mov
adc
mov
add
aas
push
add
add
push
push
mov
xchg
je
mov
jo
mov
adc
xchg
aad
enter
pusha
mov
std
cld
vpsubusb
xchg
das
ljmp
test
loop
add
dec
and
add
add
pusha
mov
or
cmp
scas
cmp
lret
adcl
mov
scas
lods
lahf
out
hlt
xor
nop
sub
cli
jle
or
mov
xor
add
out
iret
ja
cmpsb
stos
xor
nop
mov
data16
add
add
cmp
add
sbb
add
add
ja
stos
movsb
repnz
adc
divb
into
xchg
hlt
xor
add
mov
xchg
jae
fldl
add
clc
xchg
add
cmp
pop
dec
mov
adc
fcompl
test
ret
mov
out
shll
jge
dec
cmp
rcrb
subb
add
add
add
add
addr16
add
add
out
mov
add
add
hlt
pop
xchg
xchg
jg
repz
outsb
xchg
clc
sbb
in
and
add
add
pop
sbb
dec
cs
or
mov
fadds
mov
mov
adc
cmp
lret
push
push
jbe
mov
enter
add
fistps
fisubrl
lret
sbb
cmc
mov
fnstsw
or
lret
cld
add
or
out
push
into
fidivs
dec
adc
test
bnd
ljmp
push
or
add
add
xor
gs
jno
mov
sub
out
push
add
in
mov
shrb
push
inc
lahf
push
stos
push
add
add
add
add
add
sbb
pushf
rep
push
les
lahf
movsb
mov
pop
cmp
ror
or
add
add
sahf
and
xor
adc
loope
sti
icebp
adcb
iret
mov
mov
loop
jno
push
pusha
add
add
les
aas
out
add
add
add
pop
dec
cmp
add
add
lods
push
adc
shll
push
push
movl
pop
pop
sbbb
je
jle
loop
xor
mov
repz
mov
cmpsl
cmp
mov
add
add
daa
xchg
adc
nop
into
lods
adc
shr
mov
cwtl
mov
xor
faddp
mov
xor
pop
int3
or
add
add
test
push
cmpsl
sbb
loope
push
ret
pop
aad
add
pop
mov
mov
movsl
ss
adc
fiadds
sbb
ds
ret
shr
test
mov
mov
push
mov
push
lcall
or
xchg
jecxz
mov
movsb
mov
mov
lock
mov
ret
popf
fs
push
or
scas
in
es
add
push
sub
bound
add
add
mov
xchg
sahf
add
or
mov
aas
mov
dec
pop
add
add
xor
out
pop
ss
ja
jecxz
call
popa
cltd
fistps
loop
fcmovb
push
xor
lcall
mov
sti
lret
shll
xor
add
dec
mov
mov
or
xchg
cld
in
call
and
shll
jmp
add
loop
fldcw
mov
imul
hlt
push
xor
add
movsl
int
mov
pop
js
stc
jmp
aas
loope
mov
fistpll
dec
mov
xor
repnz
popa
or
pop
outsb
int3
js
mov
cld
lods
add
mov
sub
test
or
inc
icebp
sub
add
add
add
sahf
arpl
daa
xchg
rorl
jb
mov
aam
js
mov
fst
incl
pop
mov
ljmp
add
add
add
jno
out
sub
add
add
or
push
sbb
call
add
lret
add
add
dec
pop
sbbl
cli
cmp
scas
and
cmc
mov
sarl
cmpsl
xchg
xchg
aaa
leave
sbb
jmp
jl
repnz
xchg
std
mov
sub
popf
xchg
mov
and
or
cmp
rcl
sbb
xor
aas
lret
ja
jp
leave
jne
ror
sbb
push
dec
add
add
sbb
lcall
jo
fisubrl
popa
stc
negl
popf
lods
cmpsl
mov
mov
pop
sbb
add
das
sarb
in
pop
ljmp
sub
mov
sbb
insl
fstps
jnp
ds
add
mov
or
sub
add
add
sub
inc
mov
mov
mov
mov
jge
xchg
hlt
xchg
push
adc
in
inc
mov
adc
repz
xorb
add
add
jg
int3
fsts
add
dec
lret
loope
mov
gs
mov
cld
test
add
out
shrb
jle
cmp
add
push
es
rclb
mov
call
add
or
mov
add
sub
add
add
add
add
add
test
cmp
fstpt
pop
inc
pusha
add
add
or
add
add
add
mov
insb
add
add
fstl
jge
fisubs
dec
mov
loopne
aam
adcl
lock
divb
xor
add
add
pop
sbb
mov
pop
addr16
iret
popf
ss
inc
xor
add
mov
leave
movsl
sub
add
add
mov
mov
add
mov
mov
jg
add
add
sti
scas
fsubl
add
add
add
dec
mov
cmp
dec
pop
inc
mov
and
sahf
xor
sbb
push
cmp
push
pusha
mov
push
pop
pop
mov
movsb
inc
test
dec
int
inc
xchg
mov
shrb
paddb
adc
in
sbb
mov
jmp
fisubrs
push
lea
mov
aas
push
imul
hlt
xorl
popf
aad
mov
pop
adc
test
jb
sub
aaa
addr16
and
mov
mov
push
dec
or
outsl
pushf
punpckhbw
add
add
cmp
in
inc
pushf
imul
push
add
popa
push
insl
mov
popf
data16
inc
mov
gs
mov
and
cmp
out
xor
push
jno
fnstcw
cmp
add
add
cmp
cmp
outsb
stos
call
xchg
shl
cwtl
mov
cmpsl
inc
or
repz
fs
pushl
addr16
push
xchg
sub
rcr
pop
mov
push
imul
mov
add
loopne
call
dec
cmpsl
jmp
mov
aas
xor
xor
mov
mov
dec
aaa
setne
pop
sub
cmp
mov
mov
adc
outsl
sub
add
add
fmul
and
add
add
add
add
add
dec
mov
hlt
outsb
xor
add
fstpl
dec
sbb
add
lds
add
or
jecxz
fisttps
add
add
dec
mov
hlt
ljmp
add
enter
cmpsl
inc
pmulhw
mov
cmpsb
cmpsl
dec
shll
push
mov
sbb
clc
sub
rolb
push
imul
add
mov
daa
adc
insb
mov
mull
jecxz
mov
mov
mov
or
popa
rcrb
divb
addr16
add
add
jl
or
add
add
adc
add
dec
int
or
add
lret
add
add
add
add
add
or
push
ret
cmc
fidivrl
add
add
mov
dec
into
xor
loopne
rcrb
mov
mov
mov
add
add
int
mov
xchg
mov
pop
in
xchg
jg
mov
add
dec
mov
mov
push
fisubrl
add
add
out
divb
push
adc
loope
mov
lea
jnp
sbb
pop
fstpl
ds
xchg
sbb
add
mov
and
add
jl
lret
or
add
add
mov
call
cmp
push
fisttps
dec
mov
mov
cli
rcll
nop
sbbb
push
and
add
add
add
or
lret
dec
aas
fsubl
add
add
sti
repz
ret
mov
adcb
pop
mov
add
add
out
push
sub
into
xor
add
psrlq
sbb
lods
push
push
dec
mov
repz
pusha
mov
fidivrs
pop
and
addr16
add
add
mov
add
arpl
test
add
add
add
sti
fwait
sbb
pop
inc
adc
dec
dec
add
add
or
add
add
mov
mov
adc
mov
adc
out
call
add
add
clc
sub
add
add
push
cmp
gs
mov
add
xchg
lods
test
roll
sbb
xchg
das
scas
and
adcl
pop
fimull
add
add
add
add
fsubs
roll
add
add
push
lret
jnp
pop
xchg
addr16
addr16
push
mov
bswap
dec
mov
gs
pop
add
add
add
add
add
or
test
add
add
add
imul
add
mov
aaa
js
sub
add
add
andb
sbb
js
mov
pop
cltd
jae
lret
sbb
push
lcall
add
fcomps
andb
inc
mov
repz
cmp
and
sub
fstps
pop
and
inc
gs
and
push
pop
sti
arpl
data16
scas
fdivr
icebp
and
sbb
pop
jp
pop
aaa
fidivrs
or
orb
stc
hlt
adc
loop
popa
xor
xchg
lock
in
inc
jmp
or
adc
sbb
ret
or
sub
or
add
add
add
mov
add
adc
fistl
push
andb
xchg
fs
mov
mov
mov
jb
cltd
shlb
add
pop
mov
sbb
and
pop
outsl
rcrb
cmp
add
adcb
xor
pushf
mov
stc
adc
add
mov
pop
cmc
imul
mov
inc
mov
insl
dec
mov
push
pavgb
jo
or
sbb
ret
push
repz
jmp
fidivrs
lods
jp
adc
sbb
cmp
inc
add
add
mov
stos
popl
lock
add
add
out
sarl
add
stc
pop
mov
add
add
jmp
push
call
jae
sub
add
add
ja
jae
gs
cld
out
cmpb
sub
jecxz
aas
int3
xor
mov
dec
das
gs
inc
adc
xchg
mov
add
adc
addb
add
add
mov
in
sub
sbb
js
jbe
int
repz
add
add
dec
repnz
loope
inc
ficoml
insb
add
add
adc
loop
test
shlb
rcrb
stos
movl
mov
mov
cmpsb
mov
jns,pt
and
scas
add
add
mov
mov
push
push
and
add
add
inc
and
xlat
mov
mov
cvttps2pi
adc
mov
ja
fldt
jns
fildl
imul
add
add
cmpsl
fisttpll
pop
xor
movsl
rol
aaa
mov
sub
add
add
add
aaa
add
add
add
clc
jge
xchg
mov
xchg
jp
filds
add
data16
flds
add
add
adc
pop
mov
mov
or
add
add
add
stos
call
pop
xlat
or
ljmp
xchg
popf
or
add
add
add
add
cmp
fmull
cmp
add
add
mov
gs
loop
and
add
dec
lcall
jl
jb
insl
les
fbstp
add
add
mov
mov
and
sub
add
add
adc
add
add
mov
jge
pop
cmc
test
inc
pushf
imul
mov
adc
shll
add
add
add
pop
xor
add
add
add
add
add
mov
pop
lock
fstpl
in
rcrb
and
xor
into
das
and
mov
clc
adc
cmp
cli
jg
shlb
sub
xchg
movsb
popf
movsb
das
pop
mov
loopne
add
add
movsb
push
and
add
rcrl
mov
push
push
push
sub
fnstsw
push
adc
add
add
rolb
add
add
sarb
adcl
bound
ljmp
mov
add
adc
mov
sbb
xor
xchg
cld
mov
sub
add
add
out
cmp
dec
mov
movsl
outsb
mov
add
add
add
in
mov
add
test
into
lcall
pop
mov
pop
test
cmp
push
pop
stos
clc
into
testb
push
push
cwtl
add
sahf
imul
add
add
mov
loop
inc
sub
dec
push
mov
mov
mov
fdivr
movsb
scas
in
fistpll
arpl
dec
ret
outsb
and
mov
mov
imul
sbb
ror
inc
cli
mov
fwait
mov
ret
cli
pop
jne
cmp
in
or
add
add
add
dec
add
add
cmp
mov
mov
add
add
vphaddubd
dec
out
mov
test
xor
lahf
add
add
add
inc
add
add
loopne
nop
movsb
jle
jg
ja
adc
in
clc
cwtl
mov
add
add
sub
pop
or
adc
hlt
out
loope
scas
stos
jl
push
add
add
jns
xchg
ret
movsb
and
add
add
push
sub
cmc
in
cs
data16
sub
add
add
outsl
sub
xchg
cli
push
inc
out
cmc
push
roll
clc
andl
jmp
mov
out
push
lret
repz
adc
mov
xor
xchg
call
jbe
call
add
add
push
mov
mov
cmpsl
or
adc
xchg
mov
add
pop
icebp
into
mov
add
adc
sbb
xchg
xchg
cltd
fsubs
mov
out
outsb
lds
add
xor
add
ret
idivl
jmp
pushf
cmp
or
sub
sub
and
add
add
test
add
iret
scas
outsl
fidivl
xchg
sahf
fsubl
xchg
and
sub
add
sbb
mov
push
cltd
imull
int
inc
lds
mov
out
mov
add
test
mov
xchg
dec
xor
jae
test
in
mov
or
fsub
inc
add
xlat
fmull
cmp
scas
pop
or
add
add
mov
jg
sti
filds
stos
and
das
rcl
jg
mov
adc
adc
cmpsl
js
loop
mov
xchg
dec
add
add
push
test
mov
mov
xchg
nop
inc
dec
mov
mov
iret
push
jp
inc
stos
movsb
mov
add
add
add
add
jg
rorb
add
popa
frstor
popf
mov
loop
cmc
mov
push
mov
test
xchg
jmp
and
adc
xor
add
hlt
jmp
out
push
mov
add
or
add
add
cmc
dec
sarl
push
loope
mov
add
add
mov
js
mov
add
add
xor
xor
sub
jbe
cmpsl
stc
cmp
jle
aas
push
and
add
add
int
mov
cmpsb
aas
in
xor
add
aas
mov
fwait
out
lahf
pop
add
add
mov
cs
mov
jmp
jae
outsb
or
cmc
jne
jno
and
add
add
add
push
inc
add
add
ds
ja,pt
inc
roll
stc
pop
aam
mov
ret
jle
xor
aam
arpl
and
fimuls
jb
mov
in
stos
insb
add
add
lcall
out
mov
jnp,pt
xor
mov
sbb
enter
add
movsl
jge
mov
fdivs
lods
daa
jmp
adc
fwait
inc
add
add
sub
add
add
adc
add
enter
jbe
jecxz
out
fistps
mov
and
iret
iret
mov
or
movsb
scas
pushf
fistpl
jnp
xor
dec
sub
das
aas
mov
dec
pop
out
add
add
icebp
mov
xchg
daa
cmpsl
sbb
sbb
out
and
add
add
add
add
xchg
push
mov
pop
lds
add
mov
add
fildll
and
push
leave
cli
inc
aad
mul
negb
hlt
and
addl
dec
dec
mov
cmpsl
cwtl
push
loop
mov
scas
out
fsubrl
inc
add
add
andb
add
push
call
xor
jb
xor
add
in
imul
repz
das
sub
sbb
add
sarb
ret
sbb
shlb
add
add
insb
mov
add
xor
mov
int
leave
add
data16
xchg
roll
mov
mov
sbb
jmp
push
cmp
add
add
add
push
ret
shrb
jmp
loope
dec
push
push
push
loop
inc
add
cmpl
xchg
in
lock
mov
ret
dec
mov
dec
add
add
add
add
add
jae
lea
test
out
mov
add
add
stc
rclb
lret
sbb
pushf
clc
test
xchg
dec
aam
mov
insl
jmp
jo
pusha
mov
sbb
adc
call
jle
push
cmc
iret
clc
inc
mov
loope
mov
movl
or
popa
push
lahf
mov
out
xchg
in
jne
popf
icebp
dec
mov
push
stc
adc
mov
popf
stc
jne
mov
ret
add
add
push
popa
cli
push
popa
mov
ljmp
push
or
test
outsb
mov
or
xchg
add
dec
add
add
push
in
cld
fcmovnb
pop
dec
add
out
fstpl
imul
pop
xchg
cwtl
nop
aas
mov
xchg
or
add
add
jae
add
ss
cmp
cmpsl
imul
add
add
adc
insl
dec
dec
xchg
mov
fdivp
lods
xor
mov
mov
pushf
out
in
sub
add
add
inc
xchg
sbb
add
add
add
lahf
xchg
cmp
movsb
aaa
inc
xlat
and
das
movsb
xchg
sbb
lods
jno
pop
push
addr16
dec
push
inc
add
add
inc
add
add
adc
sbb
inc
push
fwait
jb
les
sub
cmpsl
pop
sbb
add
add
divb
inc
mov
ja
dec
jecxz
pop
sahf
fs
shlb
adc
hlt
cmp
xchg
rolb
lds
add
add
mov
add
loop
push
fstpt
adc
or
and
mov
add
add
adc
cmp
fists
ljmp
add
add
and
mov
int
sahf
lock
scas
inc
nop
scas
aas
sbb
out
aad
push
outsb
jnp
sarl
add
dec
testl
lea
arpl
outsl
cmpsb
xor
add
add
jg
cmpl
xlat
cmp
sub
xor
mov
test
or
mov
lret
inc
jle
sub
add
add
xor
int
push
adc
call
cmpb
push
leave
and
mov
pop
pop
and
add
add
add
loop
test
fsubrl
mov
cmc
mov
adc
adc
inc
cmp
mov
in
jg
std
imul
fwait
jmp
in
jge
adc
sub
dec
xor
imul
add
add
dec
test
mov
sbb
mov
arpl
leave
ror
fidivrl
daa
inc
fs
xor
add
add
dec
or
add
add
movsb
imul
mov
in
lret
fsubr
mov
mov
add
pop
flds
add
add
add
add
jne
push
mov
jb
mov
inc
mov
and
or
lret
loopne
shll
mov
mov
add
jge
aam
outsb
inc
mov
inc
out
xchg
push
fidivs
push
insl
sbb
add
add
mov
and
add
add
mov
loopne
adc
repz
pop
shr
xor
rolb
add
mov
cltd
out
aam
jbe
outsl
adc
mov
aam
pop
loope
fisubrl
push
push
mov
lcall
loope
aaa
sahf
shrb
add
jle
pop
push
das
mov
imul
mov
gs
enter
pop
xchg
push
ret
add
add
add
inc
add
add
mov
mov
push
xchg
lcall
dec
mov
add
add
or
add
add
add
jno
cmc
nop
pop
xlat
add
pop
sbb
jmp
mov
jp
pop
push
jo
aam
mov
ficoml
mov
cmp
enter
popf
cli
fdivrp
pop
sub
add
into
shlb
sbb
sbb
add
add
int
mov
mov
or
add
mov
mov
add
insb
mov
adc
fs
mov
sahf
jmp
mov
mov
and
mov
add
add
enter
xor
arpl
aam
sbb
push
notl
sbb
popf
mov
data16
lret
fnstenv
outsb
jg
outsl
push
js
lret
sahf
lahf
in
add
and
jnp
and
mov
add
add
mov
dec
les
pop
shlb
mov
call
mov
jle
push
jbe
xchg
add
out
xchg
mov
xchg
sti
or
mov
cltd
push
incb
mov
xor
sub
mov
cld
and
add
add
mov
and
add
add
add
add
es
lahf
adc
mov
stc
test
cmp
jp
imul
add
add
idivb
add
add
add
imul
add
into
mov
shl
dec
push
sbb
add
add
cmp
lds
and
add
sub
cmpl
xor
dec
push
pop
pop
jae
sbb
xchg
fmull
xlat
das
jne
mov
xchg
fmuls
cmp
push
xor
sbb
jb
in
push
push
mov
add
add
fnsave
imul
or
jne
nop
or
stc
mov
xchg
call
jnp
ss
shr
inc
std
inc
aaa
mov
rcll
inc
mov
in
jle
sub
add
mov
inc
test
shll
add
aad
lea
add
sarl
subb
add
mov
sub
fmuls
lods
jno
add
sub
add
add
loopne
ret
pop
sbb
adc
mov
push
out
add
add
adc
xchg
add
push
jp
add
fisttps
sarb
mov
inc
add
add
add
pop
and
push
inc
push
pop
xor
add
add
xchg
int
dec
ret
shlb
push
jo
cli
sbb
ss
add
ret
mov
jmp
leave
xchg
subl
adc
andl
add
xor
cmp
mov
adc
lea
ss
in
push
inc
pop
stc
xchg
test
mov
pusha
add
add
push
aaa
outsb
les
int
cmpsb
aas
out
xor
sbb
paddq
movsl
pcmpeqd
std
pop
test
test
mov
call
add
add
popa
add
add
aas
enter
mov
push
adc
pusha
add
add
adc
aam
fisttpl
add
add
sbb
enter
lret
daa
mov
jge
sub
pop
test
sub
add
add
jmp
push
pop
cmp
aam
lret
addl
test
add
sub
add
add
lock
adc
xchg
sbb
dec
out
clc
les
mov
add
add
jnp
in
and
add
add
scas
jl
xchg
jl
push
bound
fists
xchg
mov
adc
sub
and
pop
mov
xlat
sub
add
add
loope
iret
sti
jae
test
adc
jp
add
pop
cli
cltd
mov
arpl
movsb
ds
test
inc
mov
xchg
dec
fmuls
inc
pop
icebp
cmp
mov
sub
dec
test
mov
icebp
xchg
add
add
xor
ljmp
arpl
stos
rol
call
mov
add
sub
mov
push
jb
into
stos
rcrb
fistps
loop
add
add
or
add
add
jb
add
ret
aas
dec
mov
movsb
jbe
add
add
add
add
aas
outsb
mov
add
add
inc
dec
inc
sub
fwait
das
xchg
push
fsubl
add
cwtl
add
fistpl
add
movsb
push
adc
shl
xchg
pushw
imul
jo
fadds
addr16
icebp
push
or
add
add
add
and
shl
dec
add
add
mov
mov
ds
push
gs
xor
cmp
adc
inc
mov
into
daa
stos
push
mov
add
jecxz
xchg
add
mov
add
add
add
add
shll
add
insl
sub
add
add
enter
scas
cmp
push
add
add
pop
shrb
push
mov
adcb
cmp
add
arpl
inc
add
add
scas
aam
repz
adc
add
add
aaa
das
repnz
sbb
cld
ja
mov
xchg
ficompl
jecxz
lahf
pushf
pop
add
add
add
dec
mov
add
add
push
sub
mov
mov
stc
lock
sub
into
mov
adc
mov
mov
pushf
leave
push
cmc
pop
aad
movsb
jmp
pop
inc
add
add
lea
adc
add
cmp
mov
add
add
ficoml
movsl
cmp
push
leave
arpl
cmpb
rcl
fadd
sub
add
add
push
jo
pop
or
sub
add
add
mov
arpl
add
pop
mov
insl
stos
or
mov
mov
adc
out
pop
mov
fnstenv
fadd
cmp
loop
in
fs
push
jno
bound
adc
xor
std
int
mov
pushf
negb
pop
xor
push
aas
lahf
out
mov
add
add
add
jno
mov
stos
andl
imulb
ret
scas
ss
mov
stos
mov
mov
cmp
ret
cwtl
dec
push
repz
adc
iret
sub
add
add
xchg
pop
sub
add
add
testb
sub
add
pop
imul
xchg
push
vpavgb
add
add
push
sbb
adc
add
add
shlb
std
les
iret
fdivs
lret
sbb
add
movsb
jecxz
cmpsb
cmc
into
or
add
add
dec
mov
shrl
add
mov
popa
nop
sbb
aad
jns
and
inc
mov
add
add
cmp
mov
int3
movsl
cmpb
mov
push
pop
in
rcr
or
cmp
or
cmc
scas
or
add
add
or
and
scas
stos
cli
popf
out
add
add
lock
cmp
mov
add
mov
dec
xchg
jp
xor
sbb
jg
cltd
cmp
mov
js
ficompl
lock
cmpb
xchg
iret
mov
adc
and
and
lea
dec
add
add
sub
fdivrl
xor
mov
jns
add
add
popa
and
addl
popf
ss
mov
mov
push
xchg
push
sahf
mov
xchg
loop
pop
out
cmpsb
ja
arpl
cmpsb
out
xchg
orb
adcb
cli
hlt
in
je
adc
inc
jae
bound
mov
add
add
in
scas
cld
xchg
and
add
add
jae
fwait
cmpsl
mov
mov
int3
xchg
clc
int3
aas
jge
add
dec
sbb
push
xchg
xchg
mov
adc
dec
fmulp
lock
nop
push
dec
add
add
repnz
push
clc
ret
cld
in
leave
xchg
lret
mov
jne
mov
fdivl
mov
out
mov
bound
or
add
pop
pusha
add
add
add
leave
int
jmp
xchg
pop
cmpsl
stos
imul
aad
sarl
and
add
cmc
shrb
stos
mov
dec
push
and
add
add
add
mov
xorb
or
cltd
insb
add
add
dec
sub
sub
adc
pop
movsb
cmp
pop
adc
ret
fwait
pop
lea
jl
pop
test
mov
sarb
pop
cs
sti
jae
xchg
mov
scas
sub
jge
jns
ja
sbb
add
add
xor
bound
pop
loopne
xor
pop
jl
mov
add
or
addr16
mov
shl
pushf
mov
xor
clc
das
or
add
add
add
adc
push
xchg
pop
cmp
cmp
bound
jae
or
imul
call
mov
aas
icebp
push
or
lahf
call
pop
fwait
pop
pop
icebp
sahf
mov
adc
hlt
iret
cmp
fidivs
test
xor
stos
mov
mov
or
repnz
add
add
cs
sub
add
add
xor
add
mov
or
gs
std
jnp
jb
test
into
push
fcompl
xchg
add
js
out
pop
into
sub
add
add
inc
dec
add
ds
enter
shrl
push
lret
ja
push
std
std
out
lea
cmp
pop
and
cmp
jecxz
rorl
pop
cmp
and
xor
and
cltd
movq
cmp
fstps
add
add
jbe
push
orb
mov
dec
xor
jecxz
aam
leave
xchg
add
add
add
movsl
insb
mov
mov
mov
filds
popf
or
inc
xchg
add
popf
xchg
add
lret
fwait
stos
lock
add
add
jns
dec
scas
aaa
imul
aam
sbb
xor
mov
leave
xchg
adc
test
repnz
add
and
or
jbe
fdivrs
push
ret
jmp
ds
cmp
mov
ljmp
mov
add
add
xor
add
add
call
add
or
xor
add
cmpsb
jge
sbb
ljmp
movsb
inc
jp
test
mov
xchg
andl
add
add
sub
or
add
add
insl
jl
ret
xchg
imul
mov
pop
ficompl
jne
xor
add
add
call
adc
add
mov
arpl
xchg
pop
push
cmc
mov
or
add
add
push
xchg
rcrl
push
ja
mov
mov
add
sub
add
add
add
das
push
pushf
test
sub
add
add
out
loopne
inc
mov
stos
int3
dec
fisttps
add
xacquire
shl
subl
aas
outsb
ret
mov
mov
add
add
cli
stc
aas
adc
add
pop
fisubs
add
add
xor
mov
mov
js
pop
les
mov
loopne
mov
cmp
pop
mov
add
add
ret
pmuludq
pop
fwait
xchg
cmp
std
leave
aas
fimuls
int
add
add
sub
dec
xchg
xchg
test
test
dec
pop
push
das
push
loope
pop
inc
fstpt
movsl
or
mov
cmp
mov
push
dec
movsb
pop
mov
push
inc
mov
and
add
add
outsb
loopne
lret
leave
out
mov
ret
mov
add
add
loope
pop
mov
dec
cwtl
int3
xorl
repz
gs
shll
aad
sti
mov
mov
adc
je
ja
pop
stos
rcll
sbbb
sbb
stos
adc
insl
das
inc
add
add
add
fnstcw
mul
xchg
imul
add
mov
push
add
and
and
sbb
xlat
nop
fimuls
mov
pop
fldcw
stc
sub
add
add
xchg
xchg
loopne
jl
jmp
leave
je
sbb
lahf
int3
sbb
aaa
inc
insl
repnz
aad
lods
in
add
add
fcomps
pop
dec
js
repnz
sub
movsb
jl
push
add
add
xor
sbb
insl
call
adc
jno
jle
les
sub
xor
insb
add
add
mov
fldcw
push
add
jb
out
sbb
lock
sarb
je
and
daa
sub
add
add
push
movsb
inc
mov
pop
rclb
mov
mov
sbb
xchg
sbb
imul
mov
and
mov
push
cmc
jl
jb
dec
add
add
aad
push
xchg
inc
mov
out
ljmp
pop
popa
cmp
clc
push
inc
mov
ror
ficompl
popf
cmp
add
add
add
dec
pop
mov
loop
daa
imul
sbb
add
add
fldcw
or
add
add
push
add
add
push
xchg
jl
mov
fisubrs
js
dec
adc
jl
ss
push
mov
jg
sbb
lock
dec
add
push
sbb
rorb
add
lret
scas
xorl
cmpsl
inc
mov
ds
bound
dec
adc
add
add
adc
lock
into
jo
in
into
sahf
push
pop
lods
aam
mov
movsl
shrb
jl
fisttps
xor
push
push
adcl
repnz
lahf
sub
add
add
adc
in
mov
mov
add
sub
dec
mov
cld
sbb
add
adcl
mov
pusha
mov
cmpsl
inc
mov
aam
bound
add
add
cmp
jecxz
aam
mov
add
icebp
inc
lock
fmuls
leave
fbld
push
pop
jno
pop
xchg
fdivs
pop
stc
data16
add
add
sbb
pop
out
mov
inc
adc
jb
loopne
test
xor
outsl
aad
mov
mov
mov
sub
push
mov
dec
dec
dec
das
movsl
ljmp
xchg
sub
outsb
lahf
add
add
add
xchg
pushf
mov
clc
sbb
outsl
data16
std
rorl
jmp
sbb
and
xor
rcrb
add
xor
test
add
inc
jo
imul
mov
call
push
and
pop
bound
sub
divb
cmc
in
mov
mov
add
sbb
mov
or
scas
stos
push
loopne
sarb
clc
and
movsl
cs
jle
push
pop
mov
push
jle
inc
mov
mov
icebp
clc
or
lahf
and
add
add
inc
mov
dec
xchg
mov
dec
mov
imul
sub
add
add
jne
sub
out
pop
cmp
lret
xchg
inc
aas
adc
dec
ret
cmp
adc
fldt
add
cmp
test
mov
add
add
dec
add
add
cmp
jae
fldenv
add
add
aad
and
bound
add
add
ret
mov
push
cli
outsb
scas
add
es
stc
or
push
movsl
adc
mov
add
add
mov
or
add
add
dec
mov
imul
mov
clc
xchg
mov
aam
jb,pn
jge
and
aam
jb
out
push
jno
iret
jmp
or
add
add
mov
adc
sar
mov
clc
outsb
push
les
inc
mov
push
push
sbb
push
pop
sub
sub
sub
inc
mov
aad
sbb
add
mov
mov
cmp
and
add
add
jle
cmp
adc
add
add
shl
xchg
je
mov
mov
dec
add
add
fistpll
sbb
pop
dec
sub
imull
mov
add
cmp
or
add
add
stos
dec
imul
xchg
subl
add
aas
rcrb
insb
add
add
mov
in
cmc
in
mov
imul
lret
inc
scas
std
pop
out
pop
mov
add
add
xor
out
in
inc
and
add
add
shl
mov
scas
cltd
enter
push
mov
movsb
xor
mov
sarl
add
add
dec
adc
add
cmp
or
cmp
mov
scas
dec
gs
shl
out
mov
in
imul
das
int3
xor
popf
inc
mov
add
mov
xchg
sbb
fisubs
call
add
add
xchg
add
add
arpl
int
loope
xor
enter
jne
mov
mov
xchg
ja
and
add
add
out
loop
dec
sarl
push
lock
jge
push
out
or
adc
mov
cmc
jl
adc
shll
hlt
fsubrs
jb
push
xchg
hlt
arpl
in
mov
and
add
add
push
pop
push
movsb
jecxz
loop
jmp
add
mov
mov
and
ds
and
mov
fldenv
add
add
add
mov
dec
jnp
insl
and
loopne
jl
push
dec
pop
psubsw
add
add
shrl
adc
and
es
fsubs
sub
add
add
lret
ret
mov
js
and
sti
cmpl
je
or
xchg
add
fistl
ja
popa
xor
es
add
add
jle
test
shlb
cwtl
xor
adc
add
cmp
push
lods
ljmp
add
xchg
fisttps
bound
add
not
cmpsb
adc
jecxz
pop
add
push
shr
mov
in
or
mov
mov
lcall
out
les
add
add
dec
add
add
add
push
mov
lret
or
enter
pop
and
int
aam
je
sbb
add
add
jecxz
add
add
leave
pusha
add
add
inc
jno
mov
jnp
movsl
adc
mov
icebp
pop
lret
std
rcrb
jge
or
mov
sub
add
add
bound
dec
test
add
mov
add
add
add
adc
ljmp
pop
ret
xor
add
or
fimull
test
lods
popa
mov
add
push
add
add
add
xchg
push
outsl
das
loopne
adc
add
add
mov
or
inc
mov
xor
add
add
add
jno
ja
lret
insb
mov
add
add
testl
movsl
pop
cmp
shl
mov
sub
movsl
mov
push
and
cmp
adc
lock
add
add
movsb
leave
es
mov
mov
jns
mov
sbb
xor
ret
test
push
inc
andb
pushf
add
sub
mov
jo
cs
jmp
push
leave
jns
pushf
lds
call
iret
pop
mov
cwtl
mov
sbb
xor
cmp
out
imul
jecxz
mov
out
psllq
add
add
orl
stc
mov
cs
xchg
jns
repz
add
push
andb
movsl
enter
add
add
push
pop
imul
lcall
jp
mov
mov
lds
jl
mov
mov
inc
popf
loopne
jle
push
mov
add
add
add
int3
aad
rep
je
xor
mov
lcall
call
jbe
ffree
jge
mov
lea
mov
mov
ljmp
pusha
mov
xchg
inc
test
push
jo
iret
fwait
jecxz,pt
add
add
aad
mov
add
push
pcmpeqw
outsl
repz
movsb
mov
mov
dec
mov
jmp
out
aas
cmp
xor
inc
pop
cmp
pop
pusha
add
add
sub
xchg
int3
inc
je
add
add
gs
push
adc
add
loope
int
mov
sbb
add
mov
jecxz
sub
ret
popf
divl
xchg
pop
in
movsb
out
adc
les
add
add
inc
xchg
andl
fildll
cmp
push
pusha
add
add
out
dec
aas
dec
jl
mov
jecxz
arpl
xlat
popf
sub
add
push
jbe
jne
pusha
mov
stos
lock
jne
xchg
int3
mov
jbe
out
addr16
mov
mov
outsb
fnstenv
cmpsl
leave
pop
fcmovne
inc
mov
add
add
mov
add
add
inc
out
scas
lods
xchg
add
add
cmp
imul
add
mov
ret
add
add
push
fsubs
add
mov
cmp
jo
lods
sub
enter
call
int
mov
sbb
add
mov
jle
fwait
mov
xchg
lret
xor
jle
add
add
add
or
cmp
jmp
xlat
leave
mov
mov
adc
jge
aam
jge
jmp
add
add
test
sbb
imul
mov
ret
add
add
xacquire
add
call
add
add
jge
xchg
sub
jle
xchg
lret
cmc
sub
sub
gs
call
add
add
add
dec
cmp
or
adc
mov
cmp
subl
mov
push
and
fdivl
mov
cmp
add
add
pop
jae
xor
dec
cmp
sub
rcrl
ds
mov
repnz
mov
ret
dec
mov
ds
mov
mov
sbb
sub
call
cmp
js
dec
push
cltd
clc
neg
out
mov
sbb
mov
mov
inc
mov
mov
test
dec
mov
or
lea
imul
neg
in
sbb
fxch
int
jns
inc
out
push
les
sub
add
add
fcomps
pop
xchg
mov
sub
add
add
cmc
pop
xor
or
add
add
add
stos
push
imul
sbb
jmp
mov
jl
imul
mov
cmp
out
push
sub
rorb
add
add
add
add
pop
pop
movsl
lock
insl
movnti
add
add
aam
cmp
and
lods
mov
pop
dec
pop
enter
sti
pop
dec
adc
jp
mov
add
add
mov
and
mov
mov
jnp
mov
icebp
xlat
jbe
call
add
in
sarl
mov
fdiv
push
mov
or
add
add
cld
nopl
adc
mov
push
fistpll
adc
add
push
mov
xchg
push
rorl
sub
pop
or
add
inc
movsl
or
lret
mov
arpl
add
add
insb
add
add
cmc
mov
sub
clc
inc
jmp
dec
cmp
out
test
and
fisttps
lods
mov
pop
pop
mov
add
mov
rclb
add
add
or
pushf
pop
mov
inc
add
add
sub
push
sbb
rcrb
scas
lret
rcrl
dec
mov
gs
les
call
push
push
into
add
add
add
jg
pop
outsl
jb
into
jnp
add
jp
xchg
jg
daa
push
jno
lods
cld
lock
icebp
pop
mov
xchg
fistl
cmpsl
hlt
mov
cmc
outsb
in
fucomi
sub
arpl
push
sar
in
push
adc
insl
add
dec
js
fs
dec
sbb
xchg
fdivl
insb
mov
test
mov
mov
pop
test
dec
add
add
stos
fstl
mov
xchg
jl
clc
inc
push
jmp
mov
sub
es
dec
jnp
mov
dec
sub
loopne
add
add
add
je
jecxz
sahf
ret
bound
mov
out
dec
jmp
add
add
push
jne
xchg
add
sbb
incb
sub
mov
mov
pop
dec
jbe
fwait
xchg
hlt
jnp
in
divl
jno
mov
pop
lea
mov
or
add
add
pop
and
leave
push
pop
jmp
jl
sbb
mov
inc
orl
into
ja
loope
or
mov
add
add
stc
ret
lret
sbb
mov
jecxz
sub
add
sbb
cld
repnz
enter
add
push
push
outsb
sbb
sbb
push
ds
out
sahf
loop,pt
mov
test
add
add
add
add
add
fs
hlt
je
jge
aaa
hlt
out
mov
mov
and
cmp
pop
lods
xor
add
add
in
lret
xor
add
add
add
gs
pop
lods
leave
jmp
adc
add
add
loop
fdivl
cmpb
sbb
imul
fstps
and
rcll
js
sub
add
add
addr16
mov
cmp
adc
mov
mov
xchg
add
scas
add
daa
xchg
sbbb
pop
cmpsb
xor
js
xchg
mov
mov
xchg
clc
popa
lods
int3
mov
push
idivb
mov
add
add
add
add
clc
daa
mov
or
pop
pop
xchg
mov
ss
shrl
mov
mov
addr16
sbb
in
je
aaa
stos
data16
add
add
mov
adcb
sub
add
add
or
add
add
pop
and
cltd
dec
mov
bound
jns
jg
push
cmp
ja
xchg
ret
xor
add
add
add
adc
lcall
pop
and
add
add
shlb
cmp
flds
in
cltd
lds
popf
imul
add
jl
and
and
add
add
std
loopne
push
jne
scas
insl
imul
icebp
shll
aad
xchg
mov
cmpsb
cmpl
mov
xchg
lret
aad
mov
sbb
add
add
add
xchg
ljmp
lods
mov
test
sub
std
test
ja
and
mov
add
add
adc
mov
stos
jl
movsl
dec
sbb
mov
xchg
jae
in
aad
inc
clc
inc
movsl
xchg
out
lret
andl
mov
loop
out
push
dec
dec
add
add
xor
jp
cli
inc
cli
fimuls
dec
clc
std
mov
aad
mov
in
clc
mov
adc
cmc
dec
test
jb
fnstsw
mov
lea
xchg
fwait
xor
test
push
dec
fnstcw
inc
or
add
add
dec
sbb
push
sbb
add
add
cltd
sub
add
add
add
clc
cmp
out
and
pushf
jne
mov
mov
clc
aad
int3
shll
sub
les
test
sbb
pop
dec
aam
js
popa
adc
lcall
add
or
sub
add
add
sbb
shld
dec
dec
pop
pushf
loope
lods
test
pop
incl
jmp
fdivrl
xor
add
add
dec
mov
fists
in
mov
mov
mov
mov
add
add
loop
or
xchg
jns
pushf
mov
jle
out
outsb
inc
cli
mov
stc
mov
add
add
fdivrp
pop
repnz
add
test
xor
add
add
int3
subl
add
xor
aaa
aam
xor
pop
hlt
clc
dec
popf
pop
sbbb
add
add
push
test
dec
pushf
push
push
dec
pop
arpl
shrl
out
rcrb
notb
mov
fs
sub
add
add
add
lds
and
add
jg
pop
inc
sbbl
mov
pop
repnz
mov
lret
xor
stos
mov
xchg
std
stos
jmp
iret
or
add
add
mov
add
imul
shrb
cs
mov
movsl
out
xor
mov
pop
loope
dec
cld
push
xchg
out
mov
sarb
addr16
std
jns
cmpsl
cmp
out
mov
add
mov
or
scas
aam
pop
fistl
loopne
sbbb
aad
das
jge
adc
mov
xor
or
add
add
loope
jae
test
add
in
stc
dec
add
add
jg
push
hlt
popa
in
jo
mov
pop
andb
add
add
add
int
inc
loop
mov
data16
in
fsubl
lea
in
add
add
inc
dec
out
test
add
xor
push
dec
mov
daa
scas
jb
lret
fdivr
mov
aad
popf
xor
add
jmp
adc
or
lret
sbb
in
or
add
add
fwait
xlat
mov
xor
subb
add
add
dec
add
add
sub
jbe
mov
inc
mov
jge
jno
push
sub
jae
mov
call
lretw
es
aam
sub
add
add
scas
pop
inc
loopne
aad
lods
daa
in
add
pop
add
add
add
jno
lods
pop
push
int
xor
in
and
add
add
stos
dec
cmpsb
lea
sub
xchg
imul
es
jmp
mov
sub
add
add
xor
int
xchg
inc
mov
jle
add
add
cwtl
mov
mov
push
cli
add
add
jmp
mov
pop
std
sbb
jne
hlt
std
test
push
xchg
jle
pusha
add
add
cmp
add
nop
outsb
rcl
mov
jo
mov
push
add
add
add
lods
jno
test
cmc
xor
pop
popa
mov
add
push
fsubl
push
lods
std
mov
stos
inc
dec
mov
xchg
in
scas
loopne
ret
int
dec
add
add
mov
add
add
xor
test
add
lock
push
arpl
jmp
outsb
cmpb
leave
adc
pop
push
mov
outsl
loop
add
mov
fsubrs
adc
dec
mov
inc
xchg
test
add
add
sub
mov
inc
lahf
fwait
icebp
insb
mov
jl
fidivrl
ret
aam
outsl
test
aam
into
add
add
add
mov
add
lcall
fs
mov
add
add
adc
cmpsl
ss
idivb
dec
test
push
xchg
jge
cmp
int
test
cmpsl
jae
das
push
add
add
add
ss
call
icebp
pusha
mov
cmp
push
push
or
sbb
stos
lds
stc
xchg
inc
call
inc
mov
add
add
in
iret
jg,pt
nop
jecxz
pop
push
inc
sub
add
add
mov
add
mov
rcl
shll
jge
sub
pusha
mov
adc
roll
pmulhw
adc
scas
and
stos
mov
jmp
in
outsb
stos
imul
arpl
add
dec
scas
shrb
lahf
xchg
pop
fwait
push
test
or
add
add
mov
lock
pop
and
inc
cmc
jo
hlt
out
sub
add
add
fs
movhps
add
add
fwait
or
and
add
out
add
jno
aaa
add
cmp
arpl
mov
xchg
dec
ret
sub
punpcklwd
mov
add
js
push
inc
lret
leave
loop
push
sub
sbb
and
cmp
jae
and
mov
adcl
movsl
pop
mov
jo
xor
pop
in
loope
inc
jae
and
add
add
sub
inc
add
add
test
or
add
add
push
sub
add
add
dec
leave
mov
nopl
add
fs
and
add
add
or
aad
and
add
add
mov
mov
outsb
push
add
add
add
mov
sbb
inc
jle
nop
cltd
push
adc
lahf
out
cs
or
add
add
test
xchg
cltd
sbb
repnz
add
add
add
add
xchg
call
pop
adc
rcrb
cmp
jo
and
add
add
mov
add
add
les
mov
or
stos
orb
fcomi
add
xchg
jnp
and
add
add
mov
mov
lret
dec
int
cmp
dec
insl
shlb
push
mov
sti
adc
add
add
push
lods
xchg
jno
pop
pusha
mov
andb
iret
shl
std
cs
mov
add
sub
mov
mov
ficoml
xchg
adc
sbb
add
add
pop
dec
jb
movsl
out
out
add
add
inc
mov
insb
add
add
dec
sbb
hlt
addr16
push
mov
les
mov
mov
cmp
pushl
fistpll
push
shlb
add
hlt
je
inc
or
sbb
xchg
inc
and
add
add
fistps
adc
or
xchg
loop
sbb
es
pusha
add
add
and
add
add
and
push
ss
jne
sub
ret
repz
pop
imul
sub
aas
mov
cmc
es
push
or
push
popa
or
add
add
insl
mov
dec
add
add
sbb
iret
jl
aas
sarb
lods
mov
lods
leave
add
add
add
xor
mov
ret
imul
aas
out
mov
out
aam
sbb
xchg
ret
mov
fcoms
push
add
add
add
add
xchg
dec
dec
test
mov
into
int3
flds
mov
mov
sti
inc
add
add
std
sub
aam
add
add
pushf
mov
add
pushf
stos
lods
insl
pusha
mov
cmp
rorb
lahf
out
js
dec
fisubrs
sbb
shrl
xor
inc
push
fst
enter
sub
add
add
popl
cmp
fwait
inc
sub
or
ds
dec
repz
daa
mov
jns
ret
jns
sti
push
shlb
push
jne
push
pop
aad
xchg
pop
and
ret
cmp
jecxz
jns
insl
cld
jbe
mov
mov
and
cmp
pop
outsl
pop
and
sarl
cmp
push
pop
add
add
add
dec
clc
stos
jl
mov
mov
sbb
aas
jbe
mov
add
add
sahf
xlat
pop
js
mov
pushf
push
mov
rorb
loopne
mov
adc
add
add
fcom
mov
push
mov
ljmp
add
push
cmp
repnz
dec
mov
or
out
add
add
inc
jl
add
add
add
xchg
sbb
dec
mov
mov
pop
ret
add
add
add
or
aaa
cmp
pusha
add
add
fisubrs
pusha
add
add
int
mov
pop
push
iret
xchg
insb
mov
push
sahf
sub
xor
pop
outsl
sbb
or
add
and
inc
mov
inc
pop
movsb
jo
loopne
jb
and
adc
cmp
mov
xor
add
add
inc
add
add
sub
imul
lcall
dec
add
add
in
int3
add
add
add
jle
leave
jmp
add
ja
popa
loope
push
out
mov
push
sti
out
pop
add
add
add
cmp
and
dec
sub
add
add
jne
cmpb
fildll
add
add
add
sbb
mov
jle
lmsw
mov
shll
mov
sbb
and
add
add
repnz
sub
add
add
mov
les
add
add
push
mov
add
add
std
lods
inc
clc
cmp
add
enter
adc
aam
sub
add
add
mov
test
lods
popa
sub
or
xor
mov
add
add
fwait
and
add
add
lret
jno
push
ror
cmp
pop
cmc
jl
adc
ljmp
scas
std
notb
repz
dec
inc
les
xor
cmp
leave
mov
test
jle
neg
repz
jp
in
rep
xchg
add
pop
fwait
mov
add
and
add
add
inc
mov
addr16
adc
add
push
sbb
addb
add
cmpsb
movl
mov
jno
pushf
pusha
mov
jbe
cwtl
imul
add
add
mov
imul
shl
fs
cli
iret
mov
add
add
push
sub
push
enter
notb
add
jne
jmp
loopne,pn
sub
add
add
jge
popa
jne
inc
sti
das
and
enter
ret
fs
inc
add
add
inc
push
xchg
xor
sub
mov
dec
add
xor
or
add
add
lea
inc
psllw
pop
adc
repnz
add
add
movsb
icebp
aas
dec
add
add
jle
iret
lret
add
add
shll
sahf
mov
push
xor
imul
add
add
add
insl
test
sub
cmpsl
adc
and
ja
mov
add
add
add
lahf
push
push
add
ja
jp
icebp
je
dec
push
sbb
bound
inc
outsl
jp
fiaddl
shr
push
jge
in
mov
movsb
inc
sbb
mov
xchg
loope
add
add
adc
sub
int3
movsb
push
xor
add
add
popf
add
add
test
jecxz
pop
add
icebp
aaa
rcll
add
sub
add
add
mov
int3
jno
dec
add
add
cli
fildl
inc
mov
push
movsl
jle
adc
sbb
les
negl
je
mov
mov
fsubrp
inc
sarb
add
add
mov
mov
xchg
and
das
add
repz
lods
rcr
ror
sub
add
jb
int3
aas
mov
xor
add
jns
out
push
mov
mov
ja
aas
in
pop
dec
cltd
xor
cmp
or
mov
add
add
outsb
sbb
add
add
push
adc
jbe
jae
cmp
call
out
jl
incb
fisttpll
or
add
add
aam
or
add
add
mov
arpl
outsl
lcall
mov
sbb
pop
out
cs
add
add
das
add
add
add
inc
ljmp
fmuls
add
pop
cmp
mov
add
add
mov
test
add
jne
add
add
pop
stos
jnp
shll
push
xor
inc
popa
mov
and
add
loop
push
in
clc
cli
sbb
add
add
add
add
in
notb
mov
cld
subl
test
roll
add
pop
lcall
add
add
jo
movsb
cmc
lods
dec
or
add
iret
insb
mov
daa
dec
xchg
add
add
dec
adc
mov
push
mov
add
xchg
mov
jno
xor
xchg
dec
lea
add
add
add
shll
test
or
add
add
icebp
xor
jmp
add
add
or
mov
cmc
pop
sti
sbb
add
add
jp
pop
inc
inc
dec
push
mov
cmpsl
mov
aad
or
add
add
mov
xor
fistpll
pushl
loop
sbb
and
mov
mov
add
mov
or
sub
mov
comiss
ret
rcl
sti
adc
rclb
add
add
jle
les
shlb
pop
gs
add
add
add
inc
mov
mov
add
jge
mov
pop
mov
xorl
out
in
mov
pop
sbb
in
clc
imul
add
cmpsb
insb
add
add
and
cmp
cmpsb
loopne
xchg
sbb
out
adc
adc
pusha
add
add
shl
loopne
sbb
sbbb
push
jmp
bound
dec
test
ffreep
pop
dec
mov
or
add
add
ss
shlb
in
cld
ret
addr16
jmp
aas
or
scas
pop
jae
mov
in
into
popf
in
push
jb
mov
imul
mov
lcall
in
mov
lods
cmp
neg
jmp
xchg
add
add
std
xchg
xor
pop
pop
jmp
repz
push
mov
int
int
pushf
cmp
std
loop
adc
incb
xchg
and
arpl
shll
add
add
adcl
mov
inc
sub
add
mov
call
shll
mov
adc
lahf
insl
or
inc
add
add
pusha
mov
sbb
pop
in
imul
add
jo
fsubl
adc
mov
les
int3
shlb
add
add
dec
push
hlt
jnp
sub
adc
lret
ret
fsubr
inc
or
add
add
test
scas
incb
ret
insl
sbb
jg
ljmp
cs
adc
mov
xorl
call
js
jge
xchg
dec
in
cli
sti
divb
in
and
add
add
inc
rorl
add
das
push
inc
add
add
insl
xchg
xlat
jno
sbb
xor
add
add
add
add
add
add
add
add
arpl
inc
jge
vunpckhpd
fidivrl
nop
std
push
stc
lock
jmp
cwtl
fbld
sti
lret
adc
add
data16
fs
push
add
mov
add
add
andb
add
add
ucomiss
xchg
repnz
sub
pop
test
sbb
add
add
movsl
out
xor
inc
cmpl
daa
push
movsb
and
xchg
sub
adc
ds
into
out
push
sqrtps
fs
stc
mov
jl
add
add
add
xchg
adc
sti
mov
imul
add
mov
add
int
loope
fldl
in
dec
repz
dec
imul
fstpt
add
add
or
cltd
push
fsubl
insb
mov
sub
add
or
push
repz
stc
jp
mov
rorb
adc
push
pop
mov
mov
cwtl
pop
cli
test
mov
or
lods
push
jne
out
out
mov
insl
into
and
add
add
sub
add
add
pushf
test
cltd
and
int
mov
push
shrb
add
add
je
and
xorb
dec
mov
inc
mov
mov
js
add
add
add
add
xor
stc
jne
push
adc
push
push
inc
mov
icebp
cmp
movsl
test
cwtl
jecxz
test
loopne
stos
dec
outsb
out
cli
lods
sub
add
add
add
add
pop
mov
add
adcl
popf
leave
fistps
mov
push
push
xchg
sbb
dec
rorl
dec
mov
sahf
adc
and
daa
xchg
std
and
fildl
mov
stc
mov
add
add
jae
lahf
inc
inc
mov
sarb
dec
or
add
add
sbbl
add
and
leave
add
lret
xchg
add
add
pop
cld
mov
out
lds
in
mov
rorl
add
add
data16
cmp
and
add
add
cmp
inc
mov
inc
fcompl
xorl
inc
mov
xor
pop
mov
aad
data16
add
add
sbb
lahf
sahf
jo
pusha
mov
mov
and
sti
cmpsl
ja
push
loop
adc
add
add
xchg
dec
mov
adc
push
pop
lea
ja
cs
lds
pop
sbb
or
push
int
fimull
lea
popf
jno
cmp
insb
add
add
andl
pop
out
mov
dec
lods
ja
lods
dec
sub
add
xchg
in
hlt
test
dec
push
xchg
mov
fcoms
je
cmpsb
lret
dec
jns
fildll
lods
mov
repnz
cmp
add
dec
mov
xor
add
add
mov
dec
ficomps
mov
adc
in
pushl
add
lods
std
xchg
xchg
add
loope
outsb
mov
sbb
mov
clc
adc
cmp
dec
add
add
movsb
ljmp
js
movsb
inc
mov
or
add
add
cmpsl
mov
clc
aad
mov
jmp
add
add
sub
add
add
add
add
outsl
ds
xchg
add
add
and
add
add
add
mov
mov
dec
mov
add
add
inc
sub
add
add
add
add
sti
and
dec
sbb
out
ljmp
add
add
scas
cmp
mov
popa
inc
into
shlb
xchg
and
out
sub
add
add
les
jnp
inc
mov
inc
pop
xor
jno
lahf
cmpsl
xor
daa
sub
add
add
cmp
daa
cli
and
mov
ss
mov
push
in
imul
add
add
cwtl
mov
pop
lods
testb
add
add
shll
jne
pop
sub
lds
fistps
ret
push
jne
aas
mov
cmp
sub
pusha
add
add
mov
mov
and
sarl
pop
jge
mov
and
add
add
and
loop
dec
pop
aad
push
test
xlat
in
sub
jmp
sub
adc
mov
mov
add
add
sub
xchg
adc
add
add
add
iret
iret
loopne
xchg
scas
xlat
jae
sbb
adc
jne
pusha
mov
sub
mov
mov
outsl
xor
leave
add
out
arpl
cltd
enter
jmp
outsl
repnz
stc
mov
add
add
sarl
popa
cld
movb
lahf
fisttpll
das
outsb
push
out
test
jl
and
or
add
add
out
or
dec
add
add
test
fdivr
gs
fs
jg
jo
push
pusha
add
add
cmc
pop
lods
cmp
pop
mov
daa
xlat
gs
call
sbb
jne
or
add
add
sub
fisttpl
bound
inc
iret
push
push
imul
hlt
jno
add
add
js
sub
add
add
fstpt
arpl
lahf
mov
add
add
add
adc
repz
int3
fsubrl
pop
lret
loope
mov
out
iret
sbbl
add
shrb
test
pushf
and
add
add
inc
add
add
popa
cmp
xor
add
add
das
dec
cmp
outsl
in
out
sbb
loop
ret
cwtl
inc
add
add
lods
ret
je
enter
sbb
jp
mov
setnp
add
arpl
jae
rolb
fisubrs
mov
xchg
mov
jb
add
add
add
cltd
adc
mov
int
out
adc
mov
mov
push
push
int3
popf
decb
or
mov
lods
in
mov
pop
js
jb
cld
mov
mov
int
cmp
add
add
sub
mov
pushf
adc
mov
dec
insl
push
pop
mov
add
jb
inc
mov
jno
xchg
icebp
push
lock
mov
pop
aad
mov
pop
mov
add
cmp
pusha
mov
sbb
test
mov
mov
ja
std
scas
xchg
xchg
push
lcall
mov
andb
add
ret
out
adc
repz
push
mov
jp
sub
in
stos
jno
nop
mov
xor
sub
push
sub
add
add
sub
xor
sub
cmp
inc
mov
xorb
and
movsl
outsb
push
in
fisttpl
hlt
mov
mov
xchg
push
test
cmp
je
jmp
add
mov
fsubl
xchg
lcall
test
push
jecxz
mov
push
cs
add
add
xor
xchg
add
mov
std
pop
in
rcll
push
mov
testb
add
add
jl
mov
add
add
fwait
cli
fistpll
jle
or
arpl
push
xchg
in
daa
inc
movsb
mov
hlt
mov
je
in
lea
sti
and
add
add
popf
sahf
mov
push
stos
test
lret
sti
mov
inc
adc
pop
push
xchg
add
add
add
test
push
pop
cmp
inc
add
add
push
pop
xchg
dec
ret
push
cmp
add
nop
movsb
imul
jns
test
lret
add
add
xchg
pop
add
push
sbb
mov
lret
inc
aad
add
or
stos
sbb
or
cmc
out
shll
dec
inc
iret
stc
sub
add
in
mov
add
mov
pop
repnz
ja
jp
and
add
add
movsl
lods
xor
jle
mov
int3
sub
movsb
xchg
dec
mov
or
test
inc
icebp
and
fsubr
add
in
jg
jo
ss
jo
andb
add
xchg
movsl
dec
lret
fdivrl
inc
das
mov
mov
testb
dec
popa
push
je
lods
sbb
add
jge
icebp
xchg
aas
not
std
ds
adc
mov
mov
or
add
add
pop
notb
mov
push
mov
clc
aad
rorl
iret
sbb
lahf
and
add
add
add
mov
sbb
loope
dec
pop
sbb
pop
mov
aas
add
push
fnstenv
add
add
dec
xchg
jns
push
leave
cmp
dec
popa
stc
cli
shl
out
xor
inc
mov
mov
dec
xchg
dec
aaa
loope
inc
dec
int
pop
std
mov
outsb
mov
add
add
mov
cltd
cmp
jb
push
sbb
or
enter
inc
or
add
add
imul
enter
repz
sti
aas
add
addr16
xchg
jb
and
add
add
mov
jp
mov
and
or
gs
mov
mov
je
mov
sbb
pop
cmc
pusha
add
add
pop
mov
enter
mov
dec
inc
cmp
xor
dec
sub
add
add
or
push
cmp
out
or
mov
xchg
in
jmp
daa
push
xlat
test
cmpsl
jbe
lock
in
shlb
xlat
sub
inc
mov
add
mov
iret
push
push
outsl
lret
mov
in
notl
clc
aas
mov
add
fnstcw
add
add
bound
add
add
jnp
sbb
or
add
add
fisttpll
add
add
jo
insb
add
add
ja
rol
mov
push
rorb
xchg
add
add
bnd
lcall
in
mov
mov
mov
push
inc
jl
idivl
je
mov
push
mov
add
jp
mov
mov
dec
push
pop
shrl
jecxz
jge
sub
sbb
add
add
jecxz
inc
add
add
je
icebp
xlat
leave
out
popf
inc
add
add
ja
add
add
aaa
cmpsb
jns
mov
aam
pushf
out
mov
pop
data16
add
add
add
add
sahf
lods
in
aad
sub
int
fldcw
xlat
xor
xchg
stos
xor
mov
jo
fnstenv
pandn
lret
xlat
enter
dec
sbb
adc
int3
repz
rol
mov
adc
rcrb
xlat
rcll
or
loopne
xchg
pop
insb
mov
fbld
jmp
add
adc
and
bound
push
inc
imul
daa
cmp
clc
aaa
ret
push
clc
out
iret
push
or
inc
add
add
or
add
add
mov
add
out
dec
bound
pop
enter
mov
cmp
call
clc
push
pop
into
cld
rcl
mov
add
add
pop
daa
push
add
add
add
xor
dec
add
add
or
add
add
test
mov
imul
lods
outsb
cmp
lahf
and
mov
dec
sub
inc
mov
call
jae
push
stos
jne
dec
mov
or
inc
mov
add
add
add
les
dec
cmc
adc
ljmp
adc
xlat
shlb
in
pop
xchg
dec
push
mov
add
add
fisttpl
pop
test
cmp
xlat
mov
and
fwait
sti
pop
lods
dec
std
jp
xchg
repnz
dec
fmul
or
add
add
sub
mov
add
add
out
pushl
cmpsl
add
add
add
call
add
pop
xchg
mov
fdivs
sub
test
mov
xchg
aaa
xchg
xlat
dec
loope
push
sahf
or
add
add
stos
and
add
add
test
mov
add
push
frstor
add
jb
inc
push
add
add
add
cmp
movsl
ljmp
push
or
jmp
rorb
and
stc
mov
out
subb
mov
mov
pop
mov
mov
stos
scas
jl
frstor
into
test
mov
add
ret
mov
negl
add
add
add
lea
add
mov
mov
add
sub
jge
setge
call
mov
mov
sbb
jb
gs
mov
cld
gs
cmovb
add
add
lret
in
adc
lds
mov
push
dec
push
inc
fisubs
sarl
xchg
clc
cmp
add
cltd
stos
pop
out
pcmpgtb
add
add
inc
jo
je
mov
pop
inc
insl
lret
lret
add
add
or
pop
jecxz
mov
push
or
or
sub
ljmp
in
jg
nop
and
add
xor
add
movsb
call
into
incb
add
add
sbb
imul
cmp
faddl
or
dec
enter
mov
add
adc
ljmp
xor
mov
lock
jnp
dec
adc
adc
inc
jbe
inc
outsl
stc
sbb
adcb
sub
sbb
and
push
add
insb
mov
inc
pop
aas
add
add
add
jmp
xor
xor
pop
add
sub
std
adc
das
inc
jl
mov
into
mov
cltd
pop
stos
test
cmp
popa
imul
mov
add
in
les
add
add
xor
std
xchg
cmp
into
push
adc
add
add
add
movsl
enter
pop
dec
ljmp
inc
jnp
cmp
hlt
ficomps
jno
into
inc
mov
movsl
inc
xchg
movsl
popf
aaa
mov
outsb
insl
sub
cwtl
lret
insl
stc
out
loope
fs
mov
mov
mov
inc
fidivrs
shll
mov
or
mov
sbb
icebp
xor
jo
ss
lds
jno
add
add
add
lret
cmc
mov
xor
test
xor
mov
mov
add
mov
int3
dec
mov
outsb
add
add
add
mov
push
jo,pt
lock
repz
repz
mov
add
icebp
sbbl
imul
and
cmp
sbb
jns
inc
mov
push
test
mov
enter
add
loop
hlt
jle
add
add
adc
lods
andl
and
or
sub
add
loope
outsl
sub
add
add
fcomps
dec
jge
lret
shrb
and
add
add
inc
mov
mov
dec
mov
mov
add
add
cmp
push
je
push
add
add
imulb
dec
mov
fsubp
leave
pop
pop
xchg
movsb
aas
or
in
push
and
mov
out
scas
mov
add
add
add
filds
stos
std
fs
add
outsb
jg
flds
daa
mov
icebp
ljmp
std
cmp
shll
dec
add
add
xor
or
fbstp
jbe
lret
test
call
mov
xchg
add
add
adc
add
add
ja
dec
mov
inc
cmp
cmc
jo
std
sti
sub
add
xchg
dec
fcompl
in
mov
jg
lcall
or
outsl
xchg
xchg
xchg
sbb
repnz
stos
fwait
dec
lds
mov
and
in
movsb
cmp
push
xor
test
gs
scas
xchg
inc
outsl
jbe
add
add
add
add
add
mov
jb
cmp
pusha
add
add
std
sub
add
add
cmp
inc
dec
mov
mov
int3
stc
fsubrs
dec
push
out
xchg
add
add
add
and
cmpsb
xchg
aam
loope
pusha
mov
mov
xchg
mov
ret
mov
inc
push
jle
xchg
dec
xchg
jle
ljmp
mov
fdivs
jno
andb
lahf
pop
mov
fisubs
sbb
add
inc
pop
ret
int3
sbb
add
jo
ljmp
mov
xor
lret
mov
lds
inc
add
add
mov
mov
pop
xchg
add
cltd
jp
mov
popa
push
sub
add
add
rcrb
add
adcb
jge
repz
jae
dec
imul
pop
adc
insl
jne
dec
add
add
jo
daa
sbb
rcr
test
xor
lahf
sbb
pop
ja
inc
mov
xchg
mov
sbb
in
pushf
repz
jno
add
add
std
cmc
jae
js
cmp
das
cwtl
fs
aad
test
add
add
aaa
cld
cld
push
ss
outsl
mov
jns
adc
cmpsl
lock
cmpb
sub
in
and
add
add
repz
out
hlt
mov
add
mov
test
add
add
hlt
fdivl
cmp
sbb
int
mov
and
xchg
xchg
inc
aaa
jno
lret
sti
sub
add
add
add
rclb
add
loopne
mov
mov
scas
or
or
add
ret
fisttpll
nop
fsubs
add
or
pusha
mov
sarl
xor
dec
mov
add
out
cmpsl
cmp
pop
push
adc
add
add
ret
and
dec
sti
mov
mov
add
cmp
xchg
mov
call
mov
aam
mov
inc
cmp
mov
in
sbb
and
sarb
mov
pop
xchg
and
add
add
mov
push
sbb
mov
add
push
pop
movsb
and
sub
add
fsub
in
enter
movsb
dec
dec
notl
mov
fldcw
mov
sbb
repz
insb
mov
push
inc
sbb
add
rcrb
add
add
and
add
add
xchg
push
pop
xor
push
sub
sbb
cwtl
cmpsl
repz
out
sarl
add
cltd
pop
cmpsl
daa
mov
jge
cmp
leave
bound
dec
mov
std
lods
sbb
inc
mov
ret
cld
pop
mov
mov
xchg
add
mov
das
dec
add
add
add
cltd
jle
ficoml
push
mov
call
movsb
call
dec
leave
xor
imul
jbe
cmp
add
sbb
les
lahf
mov
mov
pushf
dec
fdivrs
push
xchg
pop
cltd
and
add
add
ss
imull
mov
arpl
add
push
xchg
mov
add
xchg
mov
xchg
lods
fsin
xor
cmc
repnz
inc
xor
sbb
test
xor
add
cmp
mov
dec
jp
cmpsl
loopne
out
or
mov
fsts
or
sbb
addb
and
add
add
addr16
lahf
pop
jecxz
or
mov
pop
sub
lahf
mov
add
mov
mov
pusha
mov
addb
mov
aaa
shlb
inc
sub
popa
js
lret
lods
lock
add
add
fildl
insb
add
add
int3
xchg
cmpsb
mov
hlt
ja
add
pop
and
mov
fists
or
add
add
add
add
loopne
or
add
add
add
add
add
test
scas
lahf
ret
out
test
push
scas
jo
sbb
arpl
movsb
les
movsl
jns
in
lcall
rcrb
aad
sbb
call
push
lods
movsl
add
add
add
or
mov
jo
xor
add
lds
xlat
pop
adc
jp
imul
into
mul
insb
mov
loopne
cld
push
pusha
add
add
negb
test
sbb
pop
and
add
add
bound
andl
cli
add
test
mov
mov
incl
mov
clc
adc
movsl
repnz
adc
fst
and
out
loopne
and
add
add
inc
sbb
or
pop
adc
xor
stos
arpl
cmpsb
test
jae
pusha
add
add
out
xchg
outsb
inc
xchg
shll
push
lret
xchg
fisubs
mov
les
push
pop
xchg
xchg
movsl
cmp
add
add
pushf
or
out
out
adc
and
add
add
mov
les
or
mov
sub
jecxz
adc
add
add
pop
mov
mov
pop
push
and
cli
lcall
clc
inc
lret
jl
jmp
add
add
int3
and
sub
inc
add
add
and
add
add
add
adc
inc
mov
xchg
fsubrl
add
adc
adc
push
inc
add
add
mov
imul
or
add
add
cwtl
adc
jmp
test
add
add
mov
add
jmp
ret
inc
add
add
mov
lds
add
add
push
outsl
adc
and
cwtl
lock
sahf
stos
mov
adc
ficomps
lds
cmpsl
std
sbb
fbstp
cmp
int3
loop
mov
dec
jp
jp
subb
sbb
add
add
add
push
adc
clc
push
push
pop
fnstcw
mov
push
xchg
mov
dec
jp
aad
cmp
sbb
add
dec
sbbb
add
js
cmp
add
add
mov
data16
xor
or
aas
push
sub
add
sbb
sub
jno
xchg
out
or
mov
shl
std
into
xchg
push
ljmp
mov
sbb
add
cmp
jne
or
add
add
mov
jmp
sbb
sti
adc
jne
fsts
sbb
push
xchg
inc
fsubrp
or
arpl
add
lods
lret
cmp
jbe
sti
das
insb
add
add
lods
and
lods
jl
push
add
add
add
fdivl
xlat
jmp
pop
or
sti
adc
push
daa
mov
add
xor
loop
mov
push
cmpsl
push
xchg
test
aam
mov
add
add
mov
enter
jg
dec
xlat
outsl
jmp
lret
and
add
add
add
outsb
xor
rcll
add
add
lcall
scas
push
push
fstpt
push
popf
jmp
and
jne
add
add
add
push
ds
sbb
adc
lods
sahf
add
adc
mov
add
add
pop
les
mov
imul
add
add
out
popa
dec
repz
and
sub
push
cwtl
cmc
inc
xchg
lock
mov
add
ss
add
add
test
add
add
sub
cli
mov
mov
mov
push
pop
je
push
dec
add
add
pop
pushf
jno
rcrb
mov
negb
sbb
add
jo
call
in
enter
insl
push
test
cmp
rcl
sbb
mov
scas
sbb
call
or
add
add
fldcw
mov
shr
mov
sub
add
add
add
scas
mov
add
add
jmp
mov
mov
jle
jp
dec
daa
lock
push
pop
xchg
pusha
mov
add
add
add
adc
add
or
add
push
mov
add
add
push
xchg
adc
add
add
and
jae
pop
shlb
dec
add
add
push
mov
push
pop
xchg
pop
out
arpl
lea
je
cmp
pop
mov
les
loopne
call
add
inc
stos
jbe
bound
jge
mov
add
mov
pop
jnp
push
shll
iret
outsb
lret
pushf
rorb
test
mov
out
sub
add
add
add
mov
add
add
add
sub
cwtl
shrl
dec
sub
push
mov
add
add
dec
add
add
xor
pop
ficoml
pop
js
mov
cld
xlat
jne
fisubrs
mov
sbb
add
loope
jmp
add
add
call
fimuls
divb
js
mov
cmc
jge
in
test
mov
mov
cli
xor
mov
arpl
xchg
mov
inc
ds
movsl
mov
xorb
and
add
add
stos
out
mov
mov
mov
jb
decb
shl
mov
mov
xor
mov
add
adc
pop
stos
inc
cmp
push
jg
jl
sahf
mov
xor
or
pop
xchg
adc
add
add
inc
add
add
daa
call
inc
mov
dec
add
add
add
or
add
add
push
inc
mov
xor
adc
bound
dec
mov
testl
mov
ja
test
inc
add
add
outsl
add
sbb
mov
jecxz
jge
xchg
cmp
dec
pop
out
aaa
mov
adc
or
add
mov
mov
sbbl
inc
jle
mov
aad
lea
mov
sbb
jno
push
mov
add
add
cmp
jmp
insl
adc
adcl
add
or
add
add
pusha
add
add
int3
inc
inc
mov
and
add
add
add
int3
mov
test
test
push
lods
jle
repnz
jns
rcrl
mov
aaa
and
stos
pop
mov
push
adc
test
outsl
jo
and
xchg
movsl
outsl
xor
add
add
sbb
orl
stos
cltd
and
hlt
ret
sbb
lret
lahf
add
pop
sti
pop
in
mov
push
mov
add
jmp
stos
std
or
add
add
gs
cld
inc
fdivl
stos
mov
jbe
jns
gs
test
xor
xor
lds
mov
mov
push
mov
add
and
mov
add
add
hlt
cmp
inc
add
add
xor
mov
push
lret
pop
outsl
enter
cmp
insl
int3
cs
push
cltd
insl
clc
pushf
loope
adc
mov
mov
mov
cmp
jno
inc
insb
mov
scas
pop
rolb
add
add
arpl
and
push
dec
push
mov
add
add
push
in
jae
scas
add
add
loopne
dec
adc
add
push
int3
repnz
push
test
push
dec
ret
cli
outsl
loope
dec
lcall
fstpt
clc
mov
push
sub
add
add
xchg
add
add
nop
mov
cmpsl
ljmp
xlat
or
aas
push
mov
adc
and
add
add
xor
ret
inc
les
or
add
add
shrb
mov
add
push
pop
cmpsb
xlat
push
sub
ja
popf
scas
das
ret
ret
sub
add
add
xor
lods
cmp
pop
mov
adc
pop
pop
in
mov
cltd
or
add
pop
gs
adc
inc
aad
imul
sti
ja
cmp
jb
mov
test
mov
inc
cwtl
mov
adc
test
xchg
cmp
add
add
imul
push
cmpsb
or
lret
mov
out
mov
xchg
inc
adc
daa
and
inc
mov
pushf
imull
ficomps
jmp
mov
jmp
mov
cmpsb
xchg
into
inc
add
add
push
into
xchg
dec
add
add
push
mov
je
pop
pushf
jnp
push
cmc
mov
lods
test
xchg
add
dec
add
add
insl
cwtl
out
push
in
mov
out
and
add
out
pop
jg
addb
sahf
pop
or
sbb
sbb
cld
into
hlt
cmp
jno
mov
or
pop
cli
and
inc
call
out
lret
sti
fdivp
cmpsl
enter
jp
inc
in
stos
addl
add
add
ror
in
sbb
mov
and
imul
nop
pop
test
add
jge
lret
cmpsl
sbb
push
jne
add
add
mov
cs
mov
bound
rcrb
add
adc
add
cmc
xor
subb
ret
stc
xchg
mov
add
mov
inc
aad
mov
add
adc
ja
sahf
xchg
ljmp
movsl
aam
fsubl
inc
mov
or
add
add
popa
jne
inc
out
push
rcrb
mov
cmp
enter
insl
sub
lods
mov
sbb
mov
add
add
sub
hlt
je
outsw
cmpl
add
add
add
add
pusha
mov
dec
mov
add
add
add
mov
scas
mov
enter
aam
cs
ljmp
mov
addl
in
sahf
push
mov
adc
lods
fiadds
add
add
aad
scas
daa
repnz
mov
xor
xchg
xor
fnsave
mov
shrl
and
add
add
add
pop
std
mov
pop
fimull
add
test
and
hlt
jae
pop
xor
ret
clc
mov
cmp
in
xor
or
add
add
push
push
test
adc
push
xchg
sub
in
add
aaa
sti
lcall
nop
jmp
fstpl
dec
and
cmpsb
add
add
add
out
add
add
add
lea
mull
add
add
or
add
add
scas
stos
outsb
dec
mov
aam
jmp
pop
mov
cli
inc
pop
sbb
pop
test
out
jle
pop
push
push
es
jp
mov
xor
add
add
dec
cmp
fmuls
pop
pop
repz
sbb
add
andnps
inc
out
int3
adc
out
fucomi
jne
test
add
jne
bound
push
out
lret
test
andl
ja
leave
test
bound
add
sbb
andl
clc
jno
ret
cmp
pop
mov
xchg
loope
das
mov
rorl
pop
cmpb
add
add
add
popfw
xchg
mov
add
add
dec
jbe
add
add
ja
mov
nop
iret
pop
scas
sbb
loopne
ljmp
test
neg
fmuls
rcrb
aam
int3
sbb
add
mov
mov
add
bound
add
add
add
xchg
mov
adc
xor
repz
jae
mov
hlt
loope
xor
sti
cli
pop
jl
cmpsl
mov
push
loopne
lcall
add
add
sub
add
jo
push
add
xchg
mov
add
sbb
pop
enter
add
add
movsb
jle
sub
or
add
add
mov
movsl
and
cmc
outsl
aas
test
test
enter
or
add
add
loope
mov
dec
outsl
icebp
inc
add
add
mov
add
and
or
add
add
outsb
xchg
push
out
mov
add
add
and
sahf
arpl
bound
xor
mov
loopne
cmp
add
add
data16
mov
adc
jmp
sub
mov
or
sarl
int3
xchg
das
mov
sbb
int
push
mov
push
inc
dec
add
add
mov
adc
mov
xchg
cmpsl
mov
add
add
and
mov
add
add
mov
xchg
outsb
test
lea
add
add
sbb
mov
sbb
fcompl
call
adc
pop
mov
add
mov
push
jl
inc
add
add
out
adc
je
and
bound
pop
xchg
stos
or
and
and
add
add
cmpsl
out
clc
pop
jge
add
add
sti
sub
add
add
push
pop
lea
fwait
mov
push
out
mov
fadds
add
add
xchg
arpl
cmpsb
shrb
mulb
push
mov
add
add
adc
jbe
dec
lahf
in
mov
add
add
repnz
mov
scas
push
mov
lods
sbb
sbb
sub
add
add
xchg
and
push
jne
and
in
xor
or
add
add
xor
test
adc
add
add
addr16
repnz
test
scas
out
addr16
mov
and
add
add
mov
cmp
insl
and
sti
outsl
lahf
pop
mov
nop
daa
push
cmp
add
add
add
add
add
xchg
jbe
outsb
push
faddl
mov
push
outsl
cmpsb
push
xor
sbb
sbb
ja
test
mov
popf
pop
or
lock
mov
mov
negb
bound
jne
shll
add
push
pop
xchg
sahf
adc
and
add
add
add
xchg
pop
out
push
jnp
sub
sub
add
test
call
jl
divb
mov
mov
das
fcmovnbe
xor
add
or
add
gs
lret
std
shrb
add
add
pop
cmpsb
add
add
outsb
shrb
sahf
xchg
add
mov
pop
mov
adc
add
add
pop
xor
cld
mov
aad
cmp
flds
insl
push
adc
pushf
fldl
mov
mov
add
add
add
shll
lahf
inc
frstor
iret
push
ficoms
xor
es
bound
stos
jb
aaa
sbb
imul
add
add
sub
inc
mov
sbb
aad
scas
hlt
call
out
dec
mov
add
sbb
imul
rcll
xchg
out
scas
jecxz
fwait
dec
add
add
nop
lret
dec
roll
push
sbb
scas
ljmp
mov
fwait
mov
stos
imul
sbb
scas
cmp
or
fwait
movsl
xor
and
or
add
add
dec
add
add
and
and
push
call
add
aaa
loop
sbb
xor
add
add
add
lods
int
mov
push
sti
cmp
xchg
xchg
int
rol
cmp
add
inc
mov
jbe
int
lret
imul
pop
aam
aam
push
ret
stos
sbb
mov
mov
pop
call
hlt
xchg
or
add
add
jo
repnz
pop
adc
cld
fbstp
mov
adc
pop
pop
xchg
leave
leave
sub
add
add
sbb
xor
sub
add
jo
push
dec
lods
pop
jl
xchg
xor
lods
shrb
add
dec
add
add
clc
mov
pop
loope
add
lods
ljmp
add
add
dec
mov
mov
out
mov
xor
add
ret
mov
adc
mov
sub
add
add
adc
and
pop
mov
vmread
add
add
aas
enter
add
add
add
pop
push
stos
and
nop
out
dec
add
add
inc
mov
data16
push
outsl
xor
enter
add
add
cld
outsl
decb
rclb
mov
call
testl
clc
sahf
sub
add
mov
push
jne
pop
rorl
add
and
add
add
and
add
jae
xor
inc
mov
add
add
icebp
push
mov
das
xchg
int3
sbb
mov
add
add
sti
test
add
fldcw
test
and
mulb
add
add
mov
cmp
jl
push
mov
mov
dec
imul
jg
test
movsb
adc
dec
add
add
test
push
cmpsl
lock
add
add
push
and
and
mov
add
pop
cmp
jp
jne
pop
scas
inc
add
push
push
scas
mov
sahf
pop
jo
or
mov
sahf
pop
sub
adc
fdivs
inc
add
xlat
gs
lcall
inc
push
je
mov
ret
int3
jo
dec
leave
xor
push
mov
mov
mov
aad
in
js
imul
cmp
add
push
hlt
aam
pop
sbb
add
dec
mov
xor
cltd
dec
clc
mov
sahf
fists
xor
mov
inc
mov
adc
cltd
push
popf
fdivrs
xchg
push
jle
add
add
and
add
add
adc
lahf
out
out
rclb
mov
sub
dec
add
add
int
mov
dec
adc
add
push
std
addr16
and
add
add
inc
mov
push
dec
cmp
loope
call
into
and
and
add
add
scas
and
xor
fldcw
add
rolb
cmpsb
lret
es
fstpl
loopne
sbb
cmp
fdiv
mov
aaa
or
repnz
daa
pop
stc
add
and
adc
xor
mov
and
add
add
sub
add
add
ja
xor
mov
add
add
xrelease
cmp
fmulp
int3
nop
clc
shrb
notl
gs
imul
sub
cmp
add
add
mov
add
add
add
std
or
xchg
insb
add
add
mov
leave
sahf
add
test
in
mov
orl
push
sub
lcall
inc
mov
cld
pop
negb
mov
add
cs
data16
add
adc
jne
add
add
inc
add
add
xor
pop
mov
mov
cld
mov
push
or
add
add
mov
add
add
sub
add
add
lods
mov
sub
bound
mov
inc
add
add
add
add
add
add
adc
stos
ds
inc
mov
or
add
add
nop
adc
mov
push
fnstenv
mov
or
add
add
rcrl
add
add
sbb
jb
dec
mov
sbb
add
add
add
movsl
test
add
repz
mov
fdivrl
adc
lret
je
in
rclb
sub
inc
test
mov
mov
push
rolb
cwtl
call
cmpsl
nop
push
or
and
pop
jmp
sub
add
add
pop
add
add
add
add
add
test
or
add
mov
out
push
lret
dec
pop
add
adc
into
lret
nop
repz
push
ja
fisttpll
mov
jne
in
mov
inc
ja
jmp
add
add
rcrb
fisttpll
lods
sbb
add
xchg
inc
add
add
in
and
loope
xchg
mov
fmul
mov
mov
add
push
cmp
add
push
in
push
fsub
jle
inc
stos
scas
sub
dec
xor
sub
add
add
push
push
mov
dec
cmp
push
sub
lcall
pop
sbb
dec
inc
add
add
mov
movsb
pop
sbb
add
cmp
pop
in
add
add
add
shrb
out
and
xchg
jmp
jmp
adc
loope
inc
add
add
scas
daa
adc
add
imul
syscall
sbb
jo
pop
sbb
mov
mov
adc
pop
imul
dec
mov
sbb
mov
neg
shrl
mov
lret
xchg
mov
in
les
dec
add
add
or
sbb
fldl
mov
or
add
lods
int3
addr16
lahf
pusha
mov
enter
cli
sbb
jne
push
jb
mov
jo
aad
rclb
pop
fwait
and
aad
and
ljmp
mov
fcompl
sbb
aad
lret
testb
add
add
add
add
add
sahf
push
mov
div
adc
into
inc
adc
mov
nop
test
aad
stos
or
push
cmp
inc
push
and
add
add
add
ss
mov
push
sub
mov
shr
mov
or
xchg
and
sub
add
add
add
add
repz
lcall
mov
and
add
add
lds
or
add
add
mov
hlt
jl
outsb
shlb
sbb
mov
icebp
push
sbb
das
int3
dec
xchg
adc
mov
scas
int
and
cmc
in
push
out
das
mov
xchg
push
mov
test
repz
incb
add
add
adc
mov
icebp
adc
push
rcl
fisubrl
add
xchg
sub
add
add
scas
sarb
add
out
loopne
test
icebp
je
add
add
pop
lret
stc
adc
lcall
adc
fdivr
push
push
iret
outsl
out
push
push
rorl
divb
test
xchg
or
add
add
inc
mov
add
add
add
add
enter
push
mov
and
xlat
adc
add
add
add
sub
add
add
daa
bound
icebp
clc
mov
add
add
pop
cli
mov
jb
lahf
rorb
add
add
push
pop
push
adc
sub
cmp
pop
push
push
mov
xor
push
jle
test
push
push
in
fsubrl
mov
sbb
add
add
inc
es
or
mov
andb
int3
pop
add
push
xchg
mov
call
mov
cmpsb
cltd
testb
mov
mov
inc
loopne
push
cmpb
add
add
add
add
shrl
mov
inc
imul
add
add
jo
sbb
push
push
es
and
lea
sub
in
inc
js
sarb
xchg
mov
add
add
out
cmp
sub
stc
jns
sub
outsl
sti
pcmpgtd
inc
rorl
xchg
dec
push
in
stc
or
add
add
sbb
push
test
jne
jae
adc
xchg
jbe
movsl
fiadds
or
and
add
add
je
aaa
sti
cmp
mov
stos
xor
dec
mull
xlat
mov
add
add
fdiv
es
stc
xchg
in
dec
xor
mov
jecxz
aam
scas
dec
fsub
sub
add
mov
aam
pop
insb
add
add
out
pop
cmpsb
mov
or
add
add
adc
add
add
fsub
xor
xchg
sbb
inc
jle
test
xchg
adc
inc
and
add
mov
push
cmp
add
js
lea
add
add
cs
xchg
fistps
in
cmp
pop
jl
fwait
add
lods
jae
bound
dec
mov
jo
pop
imul
test
add
add
lds
add
add
add
add
add
call
imul
add
imul
or
add
add
ja
sbb
daa
and
add
add
sti
dec
adc
push
inc
and
icebp
mov
jge
fnsave
repnz
add
sub
mov
push
cli
jp
aad
imul
jecxz
stc
adc
ficoml
inc
push
mov
add
add
add
add
add
mov
fwait
inc
cli
xor
or
add
mov
sbb
add
lods
sub
add
add
sub
fidivrs
int3
imul
mov
add
pop
test
and
add
add
stc
jbe
mov
sub
jl
mov
sub
test
sub
mov
push
xchg
pushf
add
push
mov
add
add
add
cwtl
pop
inc
and
add
add
loop
pop
inc
dec
mov
fimull
sbbl
xlat
pushf
jo
aaa
pop
daa
ret
pop
mov
push
jnp
sub
testb
xor
jnp
push
shll
add
adc
insl
add
aaa
ret
xor
push
adc
mov
add
push
sub
add
add
insb
mov
lods
dec
loop
xor
popf
mov
jecxz
dec
leave
inc
mov
pop
and
outsb
mov
and
add
sbb
adc
sub
add
add
add
add
add
hlt
negl
int
cwtl
adc
es
pushf
adc
mov
add
into
mov
shll
pop
loop
add
cmpsl
js
add
add
add
cld
pop
clc
add
add
add
add
add
lds
add
ret
sub
mov
pop
pop
lea
mov
mov
mov
mov
adc
jae
push
mov
adc
push
mov
insl
mov
add
add
out
clc
jl
push
insb
mov
mov
in
lock
or
add
add
add
call
scas
jnp
add
add
sbb
add
test
out
fnstenv
jnp
xor
divb
cmp
mov
add
add
jno
rcl
lahf
push
lods
negb
inc
adcl
incb
add
add
das
push
pop
mov
add
add
or
mov
push
and
add
add
adc
add
add
xchg
sub
mov
push
shr
and
add
add
arpl
add
add
sti
pop
ljmp
jle
dec
mov
ror
test
cwtl
ss
sbb
int3
inc
repz
add
pop
push
leave
lods
mov
cmp
imul
pop
fcmove
mov
pop
pop
movsb
lcall
cmp
xchg
fistpl
dec
mov
adc
add
jp
jmp
xor
add
add
pop
cmpsb
outsb
pop
les
add
add
add
lea
adc
aas
adcl
add
sub
movsb
mov
cmc
jo
nop
test
xchg
pop
dec
imul
pop
shll
arpl
cmp
mov
dec
mov
mov
add
add
in
inc
mov
outsb
jp
mov
add
add
in
mov
in
ret
cmp
cmpsl
jle
pop
mov
pop
fsubl
mov
xchg
in
popa
aam
add
push
je
sbb
cmp
lods
inc
lea
hlt
cmc
mov
out
fisttpll
out
or
add
mov
aaa
mov
dec
mov
xchg
hlt
jecxz
sbb
mov
pushf
dec
dec
add
add
adc
and
mov
shll
xchg
lcall
pop
int
or
pop
dec
mov
add
mov
or
popa
and
add
add
mov
out
mov
pushf
cmp
pushf
rorb
mov
lds
inc
scas
fistps
shl
xchg
adc
pop
imul
