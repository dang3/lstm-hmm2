and
add
mov
mov
fwait
inc
mov
addr16
popa
notb
mov
outsb
push
addr16
xchg
fsts
dec
add
adc
mov
mov
add
add
xchg
xchg
push
sbb
inc
jmp
add
cmp
daa
inc
push
add
add
add
or
testb
bound
mov
icebp
ficoms
adc
mov
dec
mov
add
arpl
loop
mov
push
mov
or
push
addb
stos
mov
cmc
xchg
add
cs
daa
adc
dec
add
mov
add
mov
popf
out
sub
xchg
pop
jg
push
lock
mov
rcrl
enter
add
fstps
test
xor
mov
dec
rolb
push
mov
out
out
mov
scas
insl
insb
push
xchg
sbb
add
insb
ret
jne
jl
add
loope
out
and
mov
mov
mov
inc
add
imul
hlt
je
fstpl
jnp
rolb
mov
je
mov
negb
pop
dec
out
or
mov
rolb
mov
mov
add
sbb
mov
add
in
add
mov
add
pop
daa
or
stos
ds
call
adc
dec
out
pop
xchg
add
in
sbb
mov
out
mov
popf
push
mov
filds
mov
js
inc
rcrl
repnz
add
jl
test
cmp
add
out
jb
mov
cmp
add
add
sbb
add
fidivrs
loop
mov
mov
outsl
xchg
add
daa
in
jnp
dec
jecxz
lock
arpl
aam
fs
dec
xchg
nop
add
mov
insb
or
lea
inc
add
push
add
loope
stc
fists
xlat
repz
mov
mov
hlt
ret
mov
xchg
add
dec
fwait
mov
pusha
add
or
jnp
imul
in
sub
adc
mov
mov
push
push
pop
sbb
addb
mov
pop
aad
arpl
lea
push
mulb
mov
outsb
xchg
mov
jmp
adc
rolb
xlat
and
add
mov
rolb
mov
scas
sub
jne
aam
mov
stos
stc
jl
int
loope
add
jno
add
enter
push
add
pop
lcall
inc
jecxz
xchg
inc
fimull
fsubrl
fwait
ljmp
sbb
test
xchg
sbb
or
mov
add
mov
cmp
loopne
mov
fwait
mov
stos
cltd
push
add
cmpsl
lcall
loope
sbb
mov
xchg
cmpsb
xor
mov
xor
stos
xchg
add
sti
lea
movsl
and
xchg
jp
int3
test
sub
xchg
push
push
lcall
dec
jae
or
pop
mov
inc
lock
mov
push
lcall
or
mov
xchg
mov
push
mov
dec
es
jp
popa
rolb
mov
dec
std
push
ss
scas
leave
or
add
mov
je
add
mov
lcall
mov
es
rolb
sub
call
ret
jnp
add
aas
mov
mov
cwtl
xchg
fwait
scas
in
in
add
cmp
js
hlt
lea
lods
dec
into
xchg
cmpsb
sub
cmp
js
xchg
add
mov
mulb
pop
fsubp
xchg
add
dec
jl
sub
jl
frstor
sbb
mov
or
idivl
pop
test
push
movsl
es
daa
sbb
iret
loope
rolb
mov
out
push
and
cwtl
mov
test
jo
mov
das
add
bound
mov
and
mov
add
xchg
sub
aad
mov
xlat
mov
fs
jl
mov
addl
mov
jl
dec
stos
fsts
sub
cmp
add
push
icebp
test
cmp
xchg
sub
fs
mov
mov
dec
xchg
cld
in
imul
fsubl
sahf
pushf
filds
xchg
iret
add
add
les
fdivs
mov
rolb
mov
imulb
mov
mov
in
test
movsb
inc
jge
add
pop
sub
out
sahf
addr16
xchg
stos
fadd
add
xor
mov
mov
pushf
cmp
mov
mov
lahf
test
hlt
ja
mov
sub
je
jmp
dec
push
add
mov
mov
mov
push
mov
pop
jge
icebp
push
inc
add
test
cmp
add
andl
add
add
mov
ret
xchg
mov
xor
mov
les
add
sahf
push
push
jb
mov
mov
inc
shrl
and
push
testl
fstpl
out
push
lret
out
or
add
aaa
push
pop
add
jge
and
xor
mov
jge
sub
xchg
mov
cld
into
and
push
aam
repnz
add
mov
mov
dec
popf
sub
jp
add
mov
das
insl
mov
cmp
and
mov
inc
fimull
pop
out
mov
dec
imul
jne
cmp
add
add
dec
xchg
adc
leave
in
es
push
add
cmp
mov
add
mov
addb
xor
push
addb
xchg
sub
inc
cmp
test
mov
lds
add
cmp
or
repnz
xchg
rorl
in
xchg
test
lods
mov
pop
js
xchg
addl
aam
test
xchg
rorl
divb
sub
add
out
push
fs
mov
inc
cmp
movsl
mov
scas
xchg
add
add
cmp
xchg
and
fs
add
add
adc
mov
sub
mov
mov
jl
outsl
aas
adc
mov
xchg
sub
mov
popa
jne
cmp
call
adc
mov
add
aad
jle
add
repz
mov
add
mov
cmp
add
mov
add
mov
and
in
sbb
js
mov
dec
mov
mov
sbb
rolb
mov
push
cltd
repnz
add
mov
fdivrl
lahf
cmp
add
mov
je
or
and
mov
ffreep
add
fsubl
push
inc
hlt
lret
dec
rolb
mov
pop
xchg
je
add
push
mov
inc
add
scas
jnp
mov
add
add
jnp
or
arpl
add
mov
addr16
ljmp
cmp
xchg
pop
psllw
cmp
mov
stc
test
mov
mov
add
clc
mov
mov
testb
iret
stos
push
cli
cmp
imul
push
in
jb
mov
and
mov
scas
cli
fadds
sub
sahf
pop
mov
cmpsb
cmp
jbe
push
add
dec
lret
cltd
mov
mov
enter
pushf
rolb
mov
sbb
add
pop
sub
lods
addb
shll
mov
sbb
jmp
push
add
xchg
or
add
mov
js
es
fs
mov
insl
mov
std
aas
push
jle
cltd
shll
push
cmc
push
add
out
xor
mov
dec
inc
hlt
xor
fcom
and
fdivs
add
mulb
mov
mov
mov
mov
add
cmp
popa
add
mov
cli
and
cwtl
sub
mov
xchg
lcall
mov
icebp
jns
add
and
mov
or
add
mov
in
push
test
js
push
fcmovnbe
mov
and
push
sub
cmpsl
jae
sarl
pop
aas
std
imul
dec
daa
das
insl
in
add
aad
mov
cmp
ss
dec
sbb
leave
cmpl
lods
and
pop
or
popf
test
lods
cmp
fists
test
push
mov
mov
out
fwait
sub
neg
and
jmp
mov
repz
jmp
mov
jmp
add
xchg
int3
mov
mov
or
dec
dec
jo
mov
arpl
pop
sbb
or
out
bound
mov
add
daa
repnz
fidivrl
or
aaa
dec
push
mov
mov
aam
clc
and
add
repnz
ret
adc
add
inc
aam
jle
fisttps
call
cmp
xor
add
mov
pop
lea
int
sbb
push
mov
jo
mov
xor
jae
insb
cmp
arpl
scas
jo
mov
add
cli
sbb
jns
bound
mov
inc
add
mov
mov
xchg
xor
shl
inc
inc
in
jge,pt
dec
push
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
cli
mov
mov
cmpl
mov
pop
dec
push
xor
rol
mov
mov
xchg
jge
jge
call
in
cmpsl
fcoml
cmp
cmpsb
and
mov
mov
shrl
in
fst
mov
loope
imul
arpl
stos
push
rolb
addr16
sub
push
mov
rolb
mov
add
mov
add
sbb
mov
mov
mov
stos
int
pop
sbb
push
das
int
fs
test
jp
dec
aam
sub
add
mov
cmpsl
aas
rorl
je
cmp
xor
les
add
inc
in
insb
push
loopne
mov
flds
cmp
dec
test
dec
aad
in
and
mov
add
push
push
ja
pushf
and
or
xchg
rolb
mov
loop
mov
sbb
test
add
and
mov
je
cs
jno
add
add
jl
imul
mov
push
sbb
push
and
sbb
lcall
fnstcw
into
xchg
jne
add
ss
aad
add
loop
mov
xchg
in
or
inc
inc
mov
das
scas
ret
cmp
cmpsl
adc
mov
xor
rolb
mov
add
or
xor
mov
add
mov
cmp
rorl
loope
clc
fistpl
mov
jmp
bound
mov
dec
pop
cli
add
mov
add
push
adcl
test
ljmp
adc
and
into
repz
iretw
add
ret
out
and
into
std
addb
rolb
mov
ret
test
ret
and
xor
ds
add
dec
loopne
mov
mov
inc
add
add
mov
add
mov
addb
inc
jmp
addb
stc
les
iret
or
mov
mov
add
mov
mov
test
cmp
mov
mov
sbb
add
test
mov
stos
xor
test
rolb
mov
mov
into
leave
push
cmp
add
mov
pop
clc
pop
js
cwtl
xor
mov
mov
mov
sub
sub
cmpsb
shll
or
dec
imul
add
aad
add
hlt
pop
adc
mov
or
push
mov
adc
addr16
sbb
add
mov
mov
ja
lsl
mov
leave
into
subl
add
add
clc
pop
fwait
push
jmp
mov
add
fstpt
push
mov
add
or
add
aad
fstp
push
add
pop
cmp
mov
pushf
xor
mov
mov
lea
xlat
sub
inc
dec
out
jecxz
xor
mov
jnp
out
xchg
sub
cli
scas
jae
add
mov
mov
mov
fisubs
adc
mov
add
loop
mov
ja
fwait
data16
mov
popa
rorl
add
lea
std
jbe
aas
inc
cli
sbb
push
add
mov
addb
xchg
inc
xchg
mov
cmp
aad
pusha
add
xor
mov
mov
sub
lea
stos
pop
rolb
lahf
and
daa
addb
push
push
std
js
ret
test
mov
push
repz
lock
jg
or
mov
and
jp
cmp
xchg
rolb
mov
repnz
into
mov
or
mov
pop
xchg
push
add
mov
inc
push
add
out
dec
inc
aas
push
mov
iret
dec
and
testb
mov
push
adc
add
rolb
inc
add
mov
js
pop
xchg
das
ljmp
jno
xchg
xchg
imul
dec
mov
sahf
bound
mov
addb
mov
push
xor
xchg
sti
fwait
aaa
jle
add
cltd
add
loop
mov
sbb
rol
ss
mov
fisubrl
mov
cmpsb
fwait
std
sub
jp
gs
testb
les
rolb
mov
push
push
xchg
scas
stc
shrl
add
mov
mov
out
push
add
add
adc
push
pop
lret
das
sbb
hlt
jecxz
dec
xchg
jne
pop
call
ds
push
mov
dec
addr16
add
lods
push
sbb
movsb
outsb
sarl
mov
jecxz
and
sbb
dec
out
cmp
aad
hlt
lret
inc
mov
pop
mov
add
add
addr16
fisubrl
mov
scas
sbb
clc
and
outsb
mov
lahf
lods
loop
mov
cltd
xchg
add
add
push
lods
xor
mov
jno
sub
out
imul
cmpsb
insb
sub
lods
push
add
xor
rcrl
xlat
adc
mov
mov
addb
mov
aaa
imul
adc
xchg
fwait
xchg
insl
or
loop
mov
je
add
push
and
add
mov
add
mov
add
dec
sbb
xor
mov
dec
inc
xor
inc
add
mov
mov
jne
popa
or
movl
add
jle
push
cmp
add
test
cmpsb
jge
sahf
sub
jle
xchg
xor
aas
adc
test
dec
inc
add
rolb
repz
add
inc
ss
inc
cmc
cmp
mov
mov
sti
lret
int
ss
add
mov
mov
mov
add
xchg
rcr
and
mov
loope
data16
cmpsb
push
test
or
jno
out
ret
jb
mov
addr16
jle
sub
adc
xchg
lock
xor
mov
out
sbb
fists
pop
mov
nop
add
loope
mov
adc
add
mov
jns
push
lods
js
mov
lods
cbtw
ffree
add
and
daa
scas
xchg
loop
mov
add
jge
fistl
lret
pop
jns
sub
out
push
xchg
bound
mov
xor
mov
je
ret
stc
sub
cld
nop
add
dec
mov
loop
mov
sub
and
mov
repz
mov
mov
ret
sub
add
mov
mov
mov
inc
push
adc
cmp
cmp
mov
inc
xchg
rorl
mov
jae
in
cmp
add
scas
das
mov
add
jle
mov
out
movsb
cwtl
daa
cmp
pop
jg
mov
sub
insb
cmp
mov
cmp
dec
pop
data16
es
hlt
dec
push
inc
add
scas
mov
mov
cmpsb
and
mov
xor
fld1
imul
test
fcompl
mov
das
mov
rolb
mov
add
lahf
stos
xchg
add
ds
add
sub
add
bound
mov
and
shll
fdivs
mov
add
test
cmp
pop
sbb
xchg
add
mov
dec
fidivl
addr16
mov
add
jp
adc
xchg
clc
iret
mov
jle
pop
test
add
stos
add
ljmp
add
mov
movsl
xor
mov
xchg
lcall
cmp
adc
popa
roll
mov
sub
mov
lods
data16
and
mov
mov
adc
or
add
jbe
in
arpl
andl
add
clc
rorl
cli
pop
in
movsb
cmp
pop
rolb
mov
and
and
mov
imul
fdivrs
mov
xchg
adc
mov
int3
rolb
mov
inc
add
insl
ja
out
inc
add
ficoml
cwtl
enter
add
add
pusha
add
mov
or
pop
sbb
push
xchg
pop
mulb
hlt
test
jge
add
sbb
dec
in
mov
pusha
add
mov
jae
enter
stos
adc
mov
andl
mov
mov
shll
pop
mov
jge
mov
mov
jge
mov
mov
add
and
and
out
add
mov
adc
mov
lods
inc
je
sub
add
leave
push
add
xchg
add
cmp
stos
scas
mov
int3
lahf
aad
jp
push
add
out
mov
loop
mov
push
jae
test
sbb
adc
mov
mov
push
stos
xchg
dec
xchg
add
add
cwtl
mov
sbb
out
jmp
push
xor
imul
and
mov
jl
mov
mov
iret
lock
fsubl
mov
test
repnz
xchg
xchg
loopne
mov
mov
fisttpl
movsl
insb
popf
rolb
mov
push
pop
dec
mov
insl
and
adc
add
in
jg
aam
fs
inc
iret
or
add
or
mov
add
mov
dec
xor
push
mov
mov
adc
pop
in
mov
add
mov
jo
mov
rcl
enter
mov
mov
es
add
enter
sbb
push
std
iret
dec
cli
test
popf
movsl
jne
add
pushf
decb
push
out
sbb
mov
jb
mov
fistps
imul
das
testl
arpl
mov
add
cwtl
sub
fisttps
sbb
loope
ss
add
add
or
enter
mov
inc
enter
mov
jo
mov
imul
add
add
arpl
popa
xor
mov
xchg
mov
jbe
testl
mov
mov
fldt
jle
cmp
scas
sub
mov
add
mov
mov
add
subl
mov
pop
js
mov
add
clc
xor
mov
add
test
scas
popa
push
nop
add
inc
movsb
add
add
add
test
mov
addb
stos
inc
dec
es
push
roll
leave
popf
sbb
add
imul
add
mov
mov
cmc
dec
mov
aam
jmp
xchg
popf
lods
or
test
mov
out
imul
gs
jns
push
cld
xor
addb
xchg
inc
adc
add
push
add
jns
add
mov
test
icebp
lcall
pop
mov
jne
jae
add
xlat
lds
inc
ret
movsl
setae
adc
inc
add
add
add
jns
mov
std
std
cltd
push
sbb
out
out
test
jbe
int3
aam
add
dec
jecxz
movsb
loopne
mov
daa
sbb
mov
jmp
mov
mov
lds
and
push
ds
add
mov
mov
mov
bsr
cmp
add
cmp
stos
mov
mov
add
add
fadds
cld
and
mov
cltd
mov
pop
scas
mov
mov
xchg
jo
mov
jno
sbb
sub
and
hlt
add
mov
rolb
mov
mov
push
push
es
add
sbb
sbb
pushf
mov
mov
test
push
enter
scas
je
call
dec
ret
xor
sahf
inc
lcall
pop
sub
ret
and
cmc
stos
xlat
sub
cmc
cmp
or
add
sahf
pcmpgtw
lcall
repz
inc
inc
pop
setp
mov
add
add
mov
cwtl
cli
inc
add
icebp
mov
fsubs
mov
push
push
loope
sti
lock
popf
mov
notb
jno
add
fstpt
lock
jne
add
adc
mov
out
add
pop
jp
add
js
push
push
cmp
cmp
imull
test
cmp
pop
push
mov
lret
repnz
sbb
add
jp
push
mov
or
dec
movsb
dec
jl
pop
xchg
lods
cltd
sbb
test
mov
sbb
inc
add
lock
mov
pop
inc
add
push
add
add
or
les
loopne
mov
xchg
xlat
jecxz
les
mov
mov
add
pop
sub
add
mov
mov
push
sub
btr
pop
push
cltd
hlt
fnsave
jne
hlt
test
leave
rorl
adc
mov
inc
fwait
mov
rorl
daa
popf
inc
add
push
mov
bound
mov
icebp
imul
add
hlt
mov
or
add
push
add
or
arpl
inc
add
inc
add
jo
mov
jbe
add
adc
mov
mov
call
adc
sub
cmpsl
stos
xchg
add
sti
ja
enter
dec
sub
mov
lahf
out
fpatan
cmpsb
dec
cmp
jge
data16
sbb
mov
xchg
repnz
enterw
mov
in
fcmovnb
add
fsubs
add
mov
inc
cmpsl
mov
ja
or
sbbl
dec
cs
icebp
jg
push
mov
mov
fs
andl
push
or
mov
sbb
inc
and
pop
sub
dec
cmp
push
dec
mov
stc
adc
add
popa
dec
adcl
aaa
mov
add
pushf
lds
mov
ficomps
xchg
mov
pop
decl
negl
addb
xchg
lock
repz
shrl
and
add
or
adc
mov
jbe
or
sbb
arpl
cmp
or
push
dec
xor
add
mov
dec
mov
mov
enter
rolb
mov
in
jnp
out
sahf
add
add
push
add
je
push
jne
sub
xchg
rolb
lret
jg
repnz
lcall
rolb
mov
dec
and
pop
inc
pusha
add
aam
push
pop
xor
mov
cltd
mov
add
mov
mov
insb
addr16
notl
mov
push
push
push
lahf
cmp
mov
mov
add
pop
xor
mov
jno
jnp
and
xchg
pop
pop
movsb
int
inc
lret
mov
push
in
jmp
jno
not
movsb
dec
adc
or
wrmsr
add
cwtl
fildll
sbb
or
adc
sub
mov
xchg
add
mov
pop
xor
inc
jae
add
mov
push
mov
sub
and
lret
xchg
mov
addr16
inc
lds
mov
popf
jnp
add
sub
dec
cld
lods
mov
cld
dec
inc
addb
notb
mov
mov
mov
int3
xchg
push
jo
mov
add
mov
mov
insl
jmp
mov
dec
xchg
xchg
push
add
fnstcw
add
aaa
daa
or
mov
mov
mov
das
push
push
mov
add
xchg
mov
sbbl
addr16
mov
addb
aam
xor
add
and
add
mov
xor
in
adc
push
scas
jecxz
aaa
fstpt
mov
sbb
imul
inc
dec
cld
ret
outsb
stc
pop
jg
mov
mov
add
fwait
mov
sub
xchg
pop
push
push
cli
mov
ss
push
inc
sbb
xchg
mov
add
movsb
pop
addb
dec
lods
pusha
add
lods
sub
add
add
mov
mov
bound
mov
mov
or
and
fldcw
mov
and
mov
test
and
add
and
mov
int
and
add
cmp
add
push
mov
mov
into
mov
mov
add
adc
add
xchg
xchg
pop
push
lcall
insb
mov
out
and
add
aas
mov
push
loope
addr16
inc
pop
popl
mov
iret
cmpsb
cmp
mov
lds
mov
imul
leave
and
add
fldcw
fwait
and
scas
nop
add
test
add
add
mov
stos
std
jnp
rolb
mov
std
je
push
or
in
cmp
out
ja
add
mov
inc
std
adc
lret
inc
nop
add
add
fnstcw
mov
xchg
jne
dec
push
push
insb
popf
pushf
pop
aad
iret
scas
test
push
inc
add
test
dec
test
mov
mov
test
push
addb
jno
add
aaa
imul
mov
and
cmp
aad
fsubl
push
aad
mov
gs
loope
repz
addb
imul
jmp
stc
push
mov
sbb
out
ljmp
mov
lahf
lea
mov
arpl
adc
mov
jmp
xor
add
add
lock
push
aam
mov
inc
stos
inc
add
int
enter
jl
scas
rcl
add
mov
pop
clc
mov
mov
or
rolb
mov
xchg
cmp
mov
addb
adc
jmp
jmp
add
add
add
add
mov
imul
push
and
sub
inc
push
push
add
in
push
ret
subl
imull
je
xchg
sub
add
mov
stc
mov
mov
idivb
lock
push
cmp
mov
adc
mov
imul
mov
add
push
mov
add
test
jmp
cld
jb
mov
push
push
imul
xchg
or
push
packuswb
mov
std
xchg
lret
adc
stos
rolb
aaa
xchg
mov
bound
mov
data16
add
pop
lret
add
add
xchg
addb
ret
rolb
mov
mov
jl
lods
lret
fsubrl
pop
mov
sahf
std
in
ss
xchg
clc
add
mov
push
jnp
leave
repz
or
call
add
mov
mov
sbb
mov
fidivs
add
mov
mov
and
lods
cltd
ds
xchg
push
jle
jnp
ljmp
add
dec
inc
push
adc
mov
jno
std
in
jmp
pop
xchg
xor
mov
push
mov
mov
add
add
jl
add
or
pop
inc
add
pop
insl
cmpl
adc
ja
rolb
push
cmc
outsb
push
pop
mov
mov
test
fnsave
xor
cmp
mov
test
push
xchg
sbb
jge
cmp
add
leave
pop
mov
xor
sub
push
icebp
jno
push
cmp
lods
dec
and
insl
adc
mov
pop
sbb
cmp
sub
add
pop
xor
decb
mov
icebp
add
adc
mov
xchg
dec
jge
xorl
add
add
mov
inc
test
loop
mov
dec
xchg
pop
enter
test
pop
push
cmp
add
mov
cmp
xchg
push
cmp
mov
sbb
mov
adc
cmpsl
xor
stc
xchg
mov
add
mov
outsl
add
push
push
andl
aaa
roll
sbb
fldcw
fs
xchg
jnp
inc
add
pushf
cmp
add
je
add
add
adc
fnstcw
cmp
ficompl
aad
ret
sbb
lods
lahf
add
mov
nop
add
mov
xchg
mov
movsl
ljmp
sub
insb
sbb
std
repnz
add
sahf
add
add
sub
push
inc
stc
mov
push
xchg
push
jecxz
fsubl
xor
and
inc
addr16
mov
mov
adc
xchg
rolb
mov
loope
adc
in
test
insb
arpl
loopne
mov
sub
and
adc
xor
mov
add
mov
mov
add
xor
mov
dec
inc
cltd
loopne
mov
mov
mov
mov
add
add
and
add
jno
dec
cmpsb
fisubs
mov
imul
stos
stos
inc
add
mov
mov
xlat
adc
mov
mov
mov
sbb
mov
pop
add
xor
jae
lahf
push
addr16
pop
inc
xchg
add
mov
mov
imul
sti
stos
ja
cli
inc
test
andl
mov
push
inc
sbb
ja
add
pop
mov
mov
insl
int
jae
sub
fidivs
push
jl
mov
jp
adc
or
mov
inc
add
push
pop
test
add
aas
and
add
add
sti
rolb
das
sbb
mov
mov
shl
mov
mov
test
into
loope
add
pop
rolb
mov
add
leave
mov
addb
sbb
mov
add
inc
lock
dec
stos
fcmovnu
mov
add
iret
cwtl
in
jge
jle
lds
insb
pop
jl
lcall
insb
ret
push
inc
lock
mov
sbb
scas
sub
cmpsb
lea
fcom
push
sti
mov
nop
add
add
inc
or
test
xchg
sbb
fistl
sub
insb
sahf
dec
mov
jno
lock
add
add
loope
jle
aad
pop
mov
xor
ds
sub
cmp
sub
ret
and
rolb
mov
sbb
mov
add
mov
outsl
out
add
or
add
add
repz
mov
xchg
loopne
mov
sbb
mov
jns
dec
call
fs
mov
aaa
and
push
or
scas
dec
jo
mov
ret
xchg
iret
add
mov
insb
movsl
in
mov
enter
or
dec
mov
in
jne
inc
icebp
stos
mov
es
nop
add
add
in
mov
rolb
add
add
add
mov
mov
jae
and
test
in
repz
dec
sarl
fdivrp
je
jnp
ret
mov
clc
or
add
out
inc
arpl
jmp
lret
fs
adc
test
aaa
cli
jg
add
imulb
add
cwtl
cwtl
lods
in
aaa
and
pop
or
xor
cmpsl
jmp
in
dec
loope
mov
and
add
fisttpl
sbb
or
repz
sub
mov
mov
test
ja
cmp
test
lock
mov
jl
and
add
gs
mov
pop
dec
add
lret
cltd
imul
xchg
movsl
cltd
jmp
pop
cmp
jbe
jnp
mov
and
push
hlt
ss
xchg
add
aaa
or
rolb
mov
out
sbb
push
cmp
mov
test
ret
inc
dec
faddl
add
testl
jbe
add
jns
add
inc
test
scas
xor
jmp
lods
xor
or
add
add
and
aad
push
xchg
cmp
call
into
adc
pop
pop
into
xchg
add
push
addb
insl
mov
jbe
add
add
mov
loopne
mov
ret
inc
cmp
and
cmp
xchg
inc
add
add
add
nop
add
push
mov
mov
adc
mov
xor
insl
vpmovmskb
popf
and
dec
or
push
cwtl
addb
jno
out
xrelease
and
mov
js
add
mov
add
sub
adc
mov
arpl
xchg
jnp
icebp
inc
add
sub
outsb
mov
into
sub
nop
add
ret
popa
insb
scas
adc
adc
mov
push
lcall
mov
leave
jnp
sti
ds
mov
xor
xlat
cmpl
leave
outsl
loope
add
and
aaa
pop
push
dec
mov
sti
and
sbb
pusha
add
out
push
xor
mov
leave
dec
cmp
mov
sbb
aad
jo
mov
sub
adc
mov
mov
xchg
sarl
cmc
int
jae
cmpsl
push
stc
jecxz
or
xchg
cltd
das
add
add
lea
pop
push
inc
xchg
sbb
mov
dec
cmp
push
dec
add
push
add
orl
std
inc
imull
add
rolb
mov
cmp
cmp
adc
dec
stos
push
pop
cmp
inc
jbe
inc
ds
add
adc
add
mov
in
add
push
add
popa
int
sbbl
and
mov
fstpl
mov
pushf
pop
push
add
add
lea
lret
je
inc
mov
mov
add
or
loope
cwtl
adc
mov
and
add
ret
loop
mov
addr16
aas
aaa
mov
andl
adc
push
dec
ss
mov
xor
jmp
add
mov
fsts
mov
pop
jmp
je
add
xor
xchg
nop
add
push
bound
mov
inc
jge
xchg
fwait
outsb
into
push
mov
xchg
mov
adc
subl
or
mov
mov
ret
jmp
cmp
dec
mov
fnstenv
mov
and
out
mov
cmp
addb
sbb
imul
pop
stos
push
pop
add
dec
push
add
jns
and
mov
or
in
pop
hlt
pop
aad
add
push
add
push
cmpl
inc
add
dec
outsl
adc
add
mov
iret
call
repz
insb
in
je
les
out
ret
push
aaa
jmp
mov
mov
imul
push
sub
pop
in
push
add
sub
sub
nop
add
mov
outsl
mov
add
sub
nop
add
arpl
rcrl
mov
mov
cltd
pop
xor
daa
ret
fdivl
add
std
sbb
leave
push
in
lds
add
pop
lcall
inc
add
aad
out
data16
std
push
cwtl
pop
rcll
scas
cmpsb
add
ljmp
cld
enter
shl
scas
lods
or
pusha
add
fnstenv
jb
mov
add
push
fs
and
mov
fsqrt
dec
pop
or
cmpsl
scas
insl
das
addr16
add
xchg
cltd
cmp
xor
mov
sub
add
leave
jg
add
mov
out
jecxz
add
add
fisttps
pushf
pop
bound
mov
mov
out
push
addr16
mov
xchg
add
cltd
lret
adc
mov
mov
mov
xchg
in
mov
xchg
cwtl
stos
insl
dec
insl
mov
std
ljmp
push
inc
test
add
cmp
pop
arpl
mov
add
and
mov
mov
outsl
sbb
loop
mov
ret
cli
mov
mov
les
or
dec
sub
add
das
fistl
int3
fsubs
lods
jecxz
push
test
insl
xchg
add
mov
loop
mov
ss
push
lods
int3
adc
int3
repz
fldl
cmc
xor
mov
mov
cld
mov
add
pushf
inc
add
add
pop
jo
mov
jns
iret
mov
mov
mov
rorl
outsb
imul
repnz
jbe
sub
add
loope
aad
sub
addb
cmpsl
cmp
cmpsl
insb
cmc
jle
cmp
jmp
pop
mov
add
xlat
adc
mov
scas
cmp
add
adc
repnz
sbb
add
cmp
mov
mov
add
mov
add
mov
push
or
movsb
push
test
cs
loope
jmp
add
mov
fists
pop
mov
xchg
fs
clc
jecxz
adc
stos
iret
sbb
aaa
fimuls
dec
es
out
add
in
aaa
inc
add
arpl
sub
das
data16
mov
stc
outsb
jecxz
dec
sti
fnstcw
dec
cld
ret
push
mov
xchg
test
or
iret
loop
mov
pop
pop
mov
fsubs
add
rorl
jno
bound
mov
in
cmp
sbb
fimuls
xor
pushw
popa
xchg
aas
add
rolb
mov
cli
cs
in
aad
add
jg
jae
inc
in
js
xchg
mov
lods
mov
push
push
xlat
mov
mov
jmp
adc
dec
leave
sub
addb
adc
add
xchg
cmp
or
dec
dec
cltd
idivb
inc
stc
sub
add
out
and
adc
mov
push
mov
loope
xor
lahf
ret
stc
pop
mov
add
int3
jle
jmp
cmp
xor
addr16
add
aad
addb
aaa
pop
hlt
scas
mov
faddl
mov
add
dec
pushf
dec
dec
mov
imulb
or
xor
mov
ret
cmp
imul
ja
add
mov
xor
sarl
push
add
sahf
jle
push
push
fildll
sbbl
aad
xchg
xlat
cwtl
hlt
jbe
div
adc
mov
add
or
mov
lcall
cmc
aaa
dec
mov
addb
loopne
mov
add
xchg
outsl
stos
fnstsw
add
and
cmpsl
jg
add
mov
or
xor
mov
pop
push
inc
add
mov
fldcw
mov
imul
xor
mov
push
xchg
jns
rcll
fsubr
add
mov
rolb
imulb
cmp
add
inc
add
xchg
scas
mov
mov
ljmp
jp
sub
cld
ljmp
add
enter
add
push
sbb
inc
add
push
push
pop
icebp
mov
or
mov
mov
ljmp
add
insb
cmp
jb
mov
jo
mov
fisttpl
inc
das
mov
mov
xchg
add
movsl
iret
out
std
scas
popf
scas
xchg
arpl
inc
mov
call
inc
and
adc
mov
out
add
mov
nop
add
jl
gs
jle
add
outsl
add
rcrl
add
add
ds
add
mov
jae
dec
repz
out
mov
add
xchg
loope
inc
into
shll
xlat
cmpsl
mov
lock
ret
cli
fs
xchg
jno
ret
imul
sub
or
push
lods
test
idivl
mov
push
arpl
add
and
mov
lods
roll
ret
mov
mov
gs
testl
bound
mov
inc
pop
enter
adc
movsl
mov
push
mov
testb
inc
xchg
bound
mov
ss
cmp
add
cmp
pop
test
mov
xor
push
fstpl
out
lea
mov
mov
addb
push
add
and
add
mov
mov
cmp
mov
sbb
mov
addr16
enter
mov
jne
nop
add
sbb
or
add
cwtl
loopne
mov
clc
sub
mov
jnp,pn
std
insl
fildll
dec
test
gs
adc
je
mov
add
mov
add
repnz
push
xlat
aad
es
ret
cwtl
negl
sbb
rolb
pop
out
adc
jo
mov
mov
fidivl
imul
cmp
xchg
sbb
int
cmp
push
mov
cmp
sbb
add
add
lock
add
inc
and
mov
ret
fimuls
repnz
ss
and
pop
push
add
loopne
mov
add
in
cmc
adc
test
das
test
xor
mov
mov
mov
movsl
leave
loope
pop
xchg
push
in
scas
sub
add
cmovae
sahf
roll
aas
adc
sbb
int
pop
and
mov
lcall
in
fcomp
mov
data16
mov
and
mov
arpl
addl
xor
adc
in
rolb
mov
js
add
mov
jle
add
out
lret
pop
sbb
jb
mov
push
fptan
add
in
add
stos
lret
dec
cmp
or
xlat
pop
lahf
mov
lock
add
fs
ss
dec
outsl
push
es
sbb
add
cmc
loop
mov
inc
add
inc
inc
inc
cs
lock
mov
add
das
mov
divb
add
sbb
inc
imul
mov
ja
mov
add
imul
stos
xchg
push
pop
in
push
and
mov
dec
movsb
lods
jnp
insl
movb
stos
in
out
cmp
lock
add
mov
addb
pop
lret
and
inc
add
push
imul
pop
mov
fs
aas
pop
sub
dec
scas
jmp
loopne
mov
pop
in
outsb
xchg
rolb
mov
jo
mov
ss
imul
jo
mov
aas
add
inc
add
int
stc
jnp
dec
push
pop
movsb
mov
mov
and
add
add
mov
add
outsl
loope
scas
clc
push
sbb
fcomip
jecxz
adc
mov
fwait
dec
cmpsb
and
mov
test
mov
fwait
and
mov
faddl
add
xchg
mov
cmc
xchg
imul
mov
mov
add
rolb
mov
mov
mov
cmp
add
pop
pop
stos
jmp
sub
and
mov
nop
add
xchg
dec
pop
addb
out
insl
push
pavgb
mov
add
insb
and
call
mov
cmpxchg
lret
sbb
outsl
cmp
cmp
jp
pop
xchg
xchg
add
icebp
xor
call
rolb
mov
xor
es
mov
mov
cs
fcom
pop
add
cli
ja
add
mov
add
cmc
add
xchg
int
pop
mov
add
insl
jno
and
push
je
daa
mov
mov
jp
sub
mov
mov
add
dec
pop
and
mov
test
dec
jns
xchg
cmpsb
pop
jae
in
movsl
rolb
mov
in
add
icebp
fdivs
mov
pop
mov
sub
cld
jl
loope
add
clc
fwait
clc
sbb
dec
push
add
vmread
jnp
push
add
sbb
das
or
fstl
cmp
or
mov
add
xchg
xchg
lahf
inc
pop
xchg
pop
inc
add
mov
sahf
adc
add
jbe
and
jle
adc
subl
push
mov
lock
mov
mov
mov
cmp
mov
add
popf
int3
cmp
enter
lahf
dec
mov
arpl
hlt
nop
add
mov
cmpl
pop
jae
sti
out
jb
mov
jae
jo
mov
lea
sbb
adc
mov
add
mov
xchg
outsl
pminub
inc
add
not
mov
lods
cmpsb
outsb
inc
lret
and
mov
scas
jp
cmp
and
mov
ds
jns
cmp
mov
mov
xchg
aas
add
mov
cld
call
in
push
adc
xchg
xchg
stos
pop
add
mov
cmp
mov
frstor
add
mov
mov
loop
mov
mov
sti
dec
mov
mov
in
mov
mov
add
mov
ds
inc
frstor
pop
nop
add
and
mov
mov
fs
repnz
lock
lret
push
dec
je
ret
inc
in
movntq
add
cmpsl
xlat
loope
loope
dec
inc
bound
mov
shll
add
aas
mov
mov
add
jmp
and
mov
popf
roll
mov
mov
add
insl
cmc
cmp
mov
mov
or
pop
push
std
jnp
andl
mov
and
push
jg
add
add
cs
lods
pop
ret
dec
cwtl
lds
add
jnp
sbb
mov
push
add
dec
mov
jp
add
mov
daa
rolb
cmp
shll
add
mov
pop
xor
fcmovb
jmp
mov
add
sbb
add
dec
movsl
adc
xchg
push
add
ljmp
add
loopne
mov
dec
add
mov
inc
mov
add
movb
xor
mov
cmp
add
enter
jae
fildll
popf
cwtl
addb
sub
mov
or
neg
mov
push
add
cld
pop
test
add
cmpsb
push
add
mov
dec
lds
lods
and
sub
cmc
hlt
pushf
loopne
mov
sbb
lret
pop
jmp
sbb
mov
mov
test
add
fcoms
add
add
fisubl
mov
dec
pop
jb
mov
aas
sbb
out
pop
mov
test
aam
or
add
and
add
push
jns
jge
add
sub
dec
data16
inc
xor
lods
sti
lret
mov
dec
popa
rolb
dec
hlt
or
xor
mov
cmpsl
insl
push
repz
cs
in
jecxz
sub
sub
add
mov
add
sub
push
add
imul
test
sub
jp
js
ds
daa
lahf
pop
dec
cli
add
mov
mov
mov
out
movsl
jnp
daa
jb
mov
mov
mov
push
daa
push
add
add
sub
test
mov
lret
or
rcll
mov
mov
nop
add
jecxz
out
jae
push
out
outsl
outsb
dec
mov
jae
cmpsl
xchg
test
mov
outsb
pop
mov
jl
stos
aaa
cld
jle
mov
add
loop
mov
mov
push
into
loop
mov
xor
mov
add
popf
cmc
int3
arpl
fisubs
sub
xlat
stc
mov
mov
stc
addb
pushf
adc
fucomi
addr16
pop
fistpll
mov
lret
imul
scas
cmp
mov
add
sub
cmp
mov
xor
mov
jbe
subl
add
rorl
and
add
mov
add
jbe
inc
fs
xchg
xchg
add
je
add
add
pop
jne
jg,pn
movsl
test
ret
or
lods
jnp
mov
test
mov
test
leave
leave
aas
lea
stc
cwtl
pop
mov
addb
mov
insl
dec
sub
pop
xor
sbb
mov
mov
cmp
ret
lret
nop
add
mov
lret
add
test
sub
mov
xchg
stos
mov
loopne
mov
dec
inc
mov
push
add
and
mov
mov
mov
popa
sbb
add
mov
add
or
push
or
cmp
hlt
lcall
mov
add
mov
add
jnp
iret
insb
lea
or
xor
add
mov
mov
sub
out
out
lods
push
mov
mov
rcr
iret
les
mov
add
push
cwtl
dec
jae
sub
mov
mov
mov
mov
mov
mov
stc
dec
fimull
daa
pop
test
sub
lods
and
mov
jg
mov
add
add
lcall
mov
outsb
mov
loop
mov
dec
fsubrl
cli
addl
leave
dec
pop
adc
out
test
mov
xchg
nop
add
imul
lcall
das
cmp
pushf
xchg
sbb
mov
loope
add
lahf
and
lods
data16
outsl
ret
movsl
or
add
es
pop
xchg
xor
mov
fcoml
int
mov
hlt
xchg
mov
outsl
data16
addb
lret
bndldx
lahf
xchg
fs
out
cwtl
sbb
add
jl
daa
or
repz
mov
mov
rcll
jge
out
stos
mov
adc
xchg
add
inc
out
scas
sti
mov
mov
mov
fsubp
pop
es
add
insl
es
cli
aam
in
push
hlt
mov
xchg
add
sub
mov
sbb
cli
cwtl
iret
pushf
pop
mov
cmp
inc
nop
add
add
add
jmp
dec
mov
adc
loop
mov
sub
mov
pop
cmpsb
popa
mov
mov
and
add
je
inc
dec
arpl
fmul
pop
cld
sarl
mov
dec
rcrl
add
mov
sarl
xorl
out
pop
and
cmp
xchg
and
mov
sub
loopne
mov
ss
add
mov
push
movsb
push
pop
dec
mov
add
sti
loopne
mov
add
add
int
mov
notb
sbb
add
jp
jmp
push
add
push
add
mov
movsl
aam
add
mov
push
dec
and
add
push
add
dec
add
sub
sbb
add
mov
add
mov
aas
js
push
add
inc
push
xor
mov
inc
dec
lods
adc
mov
int3
lods
push
rcl
cmp
mov
push
sub
dec
dec
cmp
or
xor
or
mov
inc
inc
add
add
push
insl
dec
out
scas
test
aas
xor
popf
out
scas
cmp
add
leave
aad
fildl
add
in
je
xor
mov
xchg
push
leave
outsl
jge
or
mov
popf
add
adc
sub
mov
or
sub
pusha
add
pop
das
addr16
add
ljmp
dec
incl
push
aam
nop
add
int
insl
lods
je
sub
mov
ja
sbb
dec
inc
add
dec
jns
sub
lea
movsl
les
push
jle,pt
out
into
lahf
push
inc
in
adc
mov
push
jecxz
cmc
mov
addb
je
mov
insb
outsb
cltd
jmp
sbbl
jbe
add
and
mov
clc
in
cmpsb
sahf
mov
ret
notb
loopne
mov
xor
mov
mov
pop
mov
ljmp
popf
cmp
das
add
cltd
in
cmpsb
test
ss
jo
mov
push
cli
and
mov
jg
mov
mov
xor
cmp
add
inc
mov
addb
add
xchg
dec
popa
pop
xchg
xchg
rolb
mov
add
enter
push
mov
sub
int3
pushl
mov
inc
add
mov
repz
rolb
xchg
push
dec
outsb
aam
add
pop
fdivl
dec
sbb
adc
sbb
xchg
sti
loopne
mov
mov
and
mov
push
mov
add
mov
les
pop
adc
add
xlat
xor
mov
adc
mov
add
mov
pop
add
mov
pop
cmp
cmp
add
test
mov
int
jns
repz
mov
cmp
dec
lret
inc
fistl
jno
pop
data16
mov
add
fstps
add
mov
push
add
cmpsl
loope
pushf
jle
je
bound
mov
inc
enter
mov
das
mov
dec
cmp
ss
inc
fldt
jns
cmp
jp
add
inc
sbb
add
add
in
add
mov
ret
out
stos
pop
jo
mov
mov
cld
int3
je
loope
aam
push
into
test
scas
sub
xchg
jp
sbb
mov
jne
cmp
mov
aas
enter
mov
mov
jg
add
add
sahf
ficoms
nop
add
mov
mov
pop
sti
clc
jo
mov
aaa
fnstcw
xchg
jno
push
aas
push
add
mov
mov
sub
in
mov
mov
lahf
or
cmp
lods
test
jl
dec
cmpsl
xor
mov
aas
inc
add
jnp
dec
lahf
pop
dec
arpl
lret
add
mov
inc
add
mov
add
pop
cld
push
fisttpll
mov
lcall
mov
in
clc
add
mov
sbb
cli
cmp
mov
inc
sub
mov
ret
and
outsl
and
cld
scas
in
jbe
add
add
mov
add
add
add
call
mov
sub
and
mov
push
add
pop
nop
add
dec
addb
push
or
popa
gs
mov
loop
mov
mov
add
jo
mov
jae
fmull
lcall
inc
dec
push
sbb
mov
cmp
cmp
addb
mov
and
xor
ja
add
add
setl
mov
rolb
mov
mov
jg
xchg
loope
push
cmp
push
sbb
add
add
xor
mov
scas
imul
js
loop
mov
lds
xor
mov
push
sarl
cmpl
jbe
clc
jge
jno
add
dec
cld
adc
cmp
cmp
add
mov
sbb
jae
sbb
js
fsub
add
sbb
clc
ficoms
mov
add
add
xor
add
sub
fwait
mov
mov
roll
or
mov
lods
push
add
notb
hlt
sti
in
or
inc
addb
sbb
mov
mov
lea
lcall
ss
test
push
add
xor
out
je
pop
add
and
mov
lods
addb
daa
sub
call
insb
popf
add
sarl
rolb
pop
mov
fnstenv
mov
adc
dec
cs
paddd
cmp
add
addr16
inc
fs
mov
mov
push
sub
pop
test
mov
pop
pop
push
add
add
add
jbe
mov
mov
fmulp
lret
pop
push
add
mov
add
cltd
scas
xchg
jl
or
add
add
outsb
lods
dec
xor
mov
add
mov
hlt
shll
lret
lea
jecxz
inc
shl
out
pop
pop
imul
mov
and
test
mov
mov
inc
mov
mov
ret
dec
or
adc
and
mov
add
mov
inc
push
pop
dec
pop
add
mov
adc
mov
loop
mov
add
jp
stc
mov
mov
jge
xor
cwtl
scas
sbbl
add
icebp
xchg
test
test
inc
adc
add
sub
inc
xlat
dec
iret
xchg
mov
mov
loop
mov
push
adc
jmp
adc
add
fmuls
mov
ficoms
stos
pop
sub
fsubl
add
adcl
mov
mov
lret
mov
sub
push
lret
sub
test
mov
cmp
xchg
or
mov
fmuls
aas
pop
ret
in
mov
jge
push
xor
sbb
js
popf
push
sti
std
dec
mov
mov
rolb
mov
scas
or
mov
pop
in
loop
mov
lea
out
dec
or
aaa
sub
insl
test
add
scas
jg
sti
mov
call
lods
jge
repz
add
test
add
adc
or
jmp
out
push
scas
jg
pusha
add
repnz
subl
xchg
push
dec
test
add
mov
inc
add
mov
movsl
adc
jns
add
push
xlat
jge,pt
add
aad
dec
movsb
stos
mov
adc
mov
cmp
cmp
mov
and
mov
adc
mov
jnp
adc
mov
jbe
xor
mov
xor
add
addb
xlat
or
mov
xor
sub
push
std
sub
ret
inc
out
aad
fcmovbe
add
add
jns
xchg
mov
mov
gs
loope
fwait
movsl
cmp
xor
mov
rolb
mov
dec
in
sbb
xor
mov
jno
jmp
ret
pop
rcll
divb
lret
test
nop
add
add
mov
jo
mov
inc
add
stos
xchg
mov
bound
mov
mov
cmp
xchg
or
jecxz
push
sub
mov
call
jl
nop
int3
push
mov
aad
pushf
pop
mov
hlt
mov
aam
adc
mov
xor
push
mov
pop
mov
cmp
lret
push
add
jns
push
add
jl
push
cmpsb
ds
add
cmpsl
shl
mov
cmpsb
or
push
fwait
in
mov
mov
xchg
push
add
mov
jae
sbb
mov
shrl
cmp
mov
mov
mov
jbe
add
and
push
rorl
cmp
mov
icebp
loop
mov
add
or
mov
mov
addb
mov
add
sbb
push
pop
gs
jnp
mov
add
mov
adc
mov
xor
xchg
push
sarl
xchg
cs
fsubrl
add
icebp
dec
mov
mov
test
or
mov
mull
mov
lods
leave
inc
add
mov
addb
add
mov
mov
add
mov
add
xor
add
xor
adc
mov
mov
rolb
mov
mov
rcrl
fldl
add
lahf
rolb
mov
enter
cmpsb
int
in
mov
or
mov
add
sahf
xchg
mov
sub
adc
pop
inc
add
jge
mov
sub
adc
insb
mov
mov
xor
mov
jmp
cmp
dec
pop
clc
into
pop
xor
sub
add
and
subl
jb
mov
aad
or
add
mov
dec
mov
mov
push
imul
ror
xor
add
fidivs
and
es
dec
pop
sbb
add
dec
mov
add
mov
add
cmpsl
push
mov
cmpsb
mov
push
xor
add
stc
push
jb
mov
cli
jp
outsl
adc
pop
sbb
pop
icebp
adc
imul
sub
mov
out
rolb
xor
testb
dec
nop
add
mov
lods
mov
lods
mov
adc
mov
mov
pop
add
cmpl
dec
loopne
mov
add
add
jmp
mov
es
test
xor
mov
dec
mov
mov
add
mov
jle
adc
xor
sbb
lds
xor
add
cmp
xchg
mov
mov
mov
add
jno
jb
mov
dec
imul
mov
in
std
mov
mov
xor
and
add
add
bound
mov
mov
bound
mov
push
pusha
add
hlt
sub
sbb
mov
ja
insl
idiv
mov
out
jnp
pop
xor
mov
pop
xchg
add
adc
bound
mov
fcomps
in
add
mov
je
add
fcompl
aaa
shll
xchg
stos
lret
pop
sbb
push
add
sahf
pop
hlt
and
cmpsb
icebp
xor
pushf
outsb
add
movsl
rolb
mov
movsb
ffree
push
iret
mov
jno
pop
fbstp
aaa
mov
pop
adc
mov
and
mov
jne
xor
mov
ficompl
mov
add
sarl
mov
pop
lods
jne
xchg
xchg
and
mov
add
add
add
mov
lock
inc
add
mov
in
subl
adc
mov
shrl
mov
mov
int3
xor
mov
sbb
adc
adc
add
fwait
xchg
fdivrs
lea
mov
add
jb
mov
in
push
sub
imul
sbb
mov
add
hlt
inc
outsb
scas
sbb
rorl
mov
pop
es
out
xchg
mov
scas
sahf
mov
imul
clc
mov
xchg
add
je
fs
jge
add
mov
nop
add
xchg
xchg
leave
push
es
ds
add
lods
xchg
dec
mov
inc
pop
js
jns
shll
std
adc
mov
add
jae
jmp
push
cli
add
mov
inc
out
xchg
mov
add
add
gs
mov
mov
int
inc
inc
pushl
sbb
aad
pop
popa
sub
cmp
fnstcw
push
ret
out
stos
xor
std
call
xchg
mov
mov
mov
inc
and
mov
add
xchg
popf
pop
dec
int3
je
add
enter
pop
aad
push
xor
mov
push
jbe
add
inc
add
inc
call
add
shll
mov
mov
jbe
pop
push
push
sub
add
mov
roll
insb
inc
cmpsb
out
jb
mov
repnz
cwtl
jno
pop
push
jnp
xchg
add
fimuls
jle
les
test
leave
clc
adc
mov
mov
sub
loop
mov
mov
cmp
data16
and
add
bound
mov
inc
add
adc
add
push
pop
or
sbb
mov
xchg
lods
fdiv
lods
mov
inc
ljmp
dec
in
mov
add
mov
sub
lds
popl
add
and
cmpsb
cld
xchg
or
or
addb
fwait
mov
mov
xchg
add
aas
repnz
outsl
fcomi
call
push
mov
inc
add
mov
xor
add
xchg
rolb
fists
push
add
mov
pop
call
xchg
push
push
outsb
or
out
scas
lods
add
mov
jge
ret
inc
and
or
dec
mov
std
jp
rolb
mov
mov
push
jp
sub
mov
in
sub
lea
inc
add
mov
inc
scas
add
in
add
add
push
add
add
rolb
mov
mov
insl
jne
daa
sbb
inc
cmp
idivb
bound
mov
mov
jge
outsb
xchg
xchg
js
arpl
es
pop
mov
mov
mov
inc
scas
repz
iret
je
rolb
push
clc
adc
adc
inc
push
jnp
pop
adc
stos
rolb
fcmovnu
sahf
cmp
out
dec
xor
dec
pop
mov
inc
mov
mov
add
sbb
fdivrl
imul
aad
pop
cmpsl
and
daa
in
jge
mov
add
mov
mov
add
cmpsb
cmp
push
in
enter
add
call
cmp
ret
mov
xchg
in
jg
mov
loopne
mov
mov
jns
call
adc
push
xor
dec
inc
das
pop
les
scas
push
xor
xor
push
add
mov
outsl
in
xchg
iret
cli
lods
stos
sub
mov
loope
out
fcmovnbe
add
sub
xchg
dec
retw
mov
mov
hlt
add
mov
add
fisttpll
mov
sbb
push
push
bound
mov
mov
add
mov
add
repz
and
mov
dec
mov
add
mov
dec
sahf
inc
cld
mov
or
fldl
mov
test
sbb
adc
mov
add
or
xchg
add
imul
add
push
push
fcmovnb
add
add
dec
in
dec
ret
inc
add
cli
fcomps
add
outsb
sub
add
jle
jecxz
repz
push
loope
or
mov
mov
clc
movsl
fcoml
add
add
and
ret
mov
cmp
cwtl
repz
add
ret
inc
out
mov
mov
and
enter
in
mov
push
mov
mov
push
push
cmpsl
push
fsubs
lds
jne
ret
addb
xchg
aad
dec
cmc
sub
mov
xchg
add
mov
jnp
popa
or
lahf
pop
mov
mov
add
sub
add
mov
addr16
add
lcall
dec
sbb
sub
js
cmpsl
mov
sbb
inc
ss
add
dec
push
add
mov
add
negb
pop
lcall
mov
in
repz
mov
add
xor
mov
fadds
data16
dec
sbb
cmp
inc
add
fwait
in
jne
inc
add
adc
mov
test
or
sub
add
sti
add
mov
mov
rcrl
lock
cmp
lahf
sub
add
mov
insb
sub
mov
mov
rolb
xchg
sbb
iret
test
and
pop
out
test
fdiv
addb
and
mov
dec
scas
jbe
push
add
test
adc
and
sahf
repnz
leave
popa
xor
les
aad
push
sbb
mov
push
xchg
das
pop
lods
in
mov
outsl
dec
into
jecxz
lds
add
mov
int
hlt
mov
in
add
dec
sbb
addr16
mov
in
add
mov
xchg
mov
std
rolb
mov
jb
mov
int3
dec
jbe
imul
loope
xor
xchg
adcl
adc
scas
mov
xchg
add
cmp
add
sub
insl
xor
mov
mov
lods
test
adc
xor
cli
cld
mov
push
add
outsl
rolb
mov
or
ja
out
inc
add
add
adc
or
shll
cld
aam
pusha
add
push
sbbl
lcall
out
cltd
dec
mov
rolb
mov
add
mov
mov
add
mov
and
sbb
push
mov
test
sbb
and
xor
mov
popf
xor
add
pushf
mov
imul
mov
add
push
lcall
cmpsl
and
mov
or
pushl
popa
lock
or
add
jmp
mov
push
add
add
xchg
jo
mov
loop
mov
push
outsb
fld
add
adc
mov
lret
sbb
inc
add
arpl
aam
iret
mov
cmpsb
or
notl
add
push
add
mov
add
jmp
dec
into
test
addb
jp
add
mov
and
insb
sbb
mov
pop
or
jl
into
insl
xor
push
sub
cmpsb
ret
xor
rolb
mov
push
add
mov
je
add
xchg
add
test
jae
repz
adc
mov
add
mov
inc
add
mov
add
dec
les
repnz
mov
jmp
inc
std
pop
hlt
add
mov
xor
mov
add
sbb
add
cs
push
push
aaa
out
mov
jge
iretw
adc
pop
sbb
xchg
rolb
mov
pop
push
jecxz
adc
inc
lods
jg
aam
add
mov
fnstsw
dec
push
add
mov
add
leave
fcom
idivb
mov
mov
push
mov
add
insl
aaa
sbb
js
jb
mov
push
repnz
mov
orl
add
xchg
insb
ss
neg
cmp
mov
or
in
mov
ficoml
pop
fstpt
mov
mov
cwtl
stc
mov
xchg
sbb
sahf
fwait
mov
xor
and
sub
push
lods
imul
mov
and
mov
cmpsl
sbb
in
push
scas
xchg
sub
and
daa
mov
dec
and
mov
and
sahf
ret
sti
inc
cmp
fsubl
push
or
and
mov
xor
mov
add
xor
add
and
call
add
mov
add
pop
test
add
mov
shll
pop
jge
add
mov
addr16
aaa
mov
sub
push
lcall
bound
mov
xchg
add
jl
add
lret
out
and
ljmp
pop
cwtl
xchg
mov
mov
mov
add
inc
sahf
and
or
or
aad
jno
mov
mov
scas
xchg
inc
dec
iret
dec
mov
mov
mov
inc
rolb
outsb
lret
cmpsl
enter
mov
dec
push
mov
lret
rorl
lds
aas
hlt
cmp
pop
or
fcos
lock
pop
xor
int3
fdivrl
movsb
and
add
sub
add
inc
in
aad
inc
cltd
push
jmp
into
dec
dec
push
dec
ljmp
xchg
addb
das
cltd
into
xchg
std
ljmp
dec
mov
out
add
mov
inc
fsubr
outsb
addb
xor
sti
mov
inc
sub
les
rolb
mov
ds
jecxz
in
or
and
jmp
scas
push
test
add
in
loope
xchg
dec
add
mov
test
add
add
mov
fcompl
inc
dec
inc
add
add
mov
arpl
fstpt
jecxz
add
mov
mov
mov
dec
jo
mov
jmp
int3
mulb
inc
loope
cmpsl
mov
mov
into
push
cltd
jge
add
repz
je
mov
mov
add
cmp
dec
mov
add
inc
add
adc
adc
mov
in
pop
and
mov
add
fwait
jp
add
sbb
mov
add
mov
mov
mov
mov
cmpsl
cmp
stc
je
push
bound
mov
in
mov
mov
xchg
push
add
xor
mov
or
jnp
push
inc
add
mov
and
mov
adc
in
leave
mov
iret
insb
cmp
add
xor
mov
or
sub
outsb
inc
int
cmp
xchg
sub
scas
lds
inc
das
xor
add
roll
hlt
add
mov
pop
jb
mov
fiaddl
clc
mov
mov
and
mov
and
mov
lret
inc
add
dec
cmc
stos
cwtl
fidivl
aam
adc
dec
mov
push
popf
das
and
adc
mov
and
mov
pop
pop
sbb
or
jg
les
imul
xchg
dec
push
sbb
pop
imul
xchg
add
rolb
repnz
aad
sub
sub
sbb
push
mov
insb
cltd
xor
mov
movsl
dec
popa
mov
stc
repnz
add
cmpsb
mov
mov
ds
clc
scas
mov
addb
js
fadds
xlat
mov
gs
addb
push
jmp
aas
stos
rolb
mov
mov
mov
jbe
add
loope
arpl
fmull
loop
mov
add
add
xchg
cli
ljmp
mov
imulb
push
lods
pop
fimull
mov
aad
xchg
jmp
sbb
dec
aam
cwtl
loopne
mov
ljmp
mov
rolb
inc
add
sub
jo
mov
mov
jmp
sbb
jge
aas
dec
pop
and
mov
iret
movl
js
xchg
lret
aam
adc
mov
add
mov
movsb
test
dec
sbb
add
mov
cld
sbb
sbb
add
cld
call
cld
adc
shrl
mov
out
add
jge
sbb
mov
mov
jns
and
negl
and
call
push
into
push
imul
lahf
test
mov
xchg
int3
pop
xchg
mov
jg
pushf
dec
bound
mov
mov
clc
xor
mov
lds
add
cmp
repnz
mov
pop
movl
or
ljmp
add
subl
xchg
xor
testl
add
cmp
stos
add
lea
lock
pop
dec
in
xchg
test
and
test
fs
fdivrs
cwtl
loope
rcrl
fdiv
sbb
aad
add
pop
mull
add
xlat
push
cli
repnz
sbb
add
mov
add
mov
mov
in
push
pusha
add
jb
mov
xchg
inc
push
add
add
add
and
mov
cmc
ds
add
xchg
std
or
lea
cwtl
mov
push
pop
push
or
cmp
enter
add
add
repz
add
mov
fiadds
lahf
pop
jmp
jecxz
mov
xchg
imul
loope
dec
ljmp
aas
jg
pop
cmp
or
jle
rolb
mov
add
movsb
jbe
inc
in
fsubs
mov
inc
add
ljmp
mov
mov
fs
pop
add
mov
mov
aad
dec
xor
xor
dec
cmpl
ret
das
or
and
add
mov
repz
arpl
fstpl
ja
sbb
bound
mov
fnsave
mov
sub
mov
add
add
pop
cmp
xchg
xchg
add
push
cmp
mov
add
pop
shrl
mov
ljmp
cmp
mov
push
push
int
shrl
gs
pushw
and
jg
push
add
mov
out
mov
dec
push
pop
call
add
incb
call
mov
xor
add
in
sub
mov
add
aaa
ret
rolb
mov
lea
add
inc
add
push
out
cmc
addb
je
push
add
xchg
imul
mov
or
mov
push
add
mov
sarl
sub
ds
jae
cmpsl
mov
lret
in
mov
jle
leave
cmp
jae
lds
mov
pop
ret
movsb
sbb
ret
xlat
mov
add
inc
loope
fsubrp
lea
xor
mov
sbb
or
add
add
and
outsb
or
jg
int
cwtl
scas
repnz
fcoms
mov
sbb
mov
add
movsl
lret
mov
mov
loope
mov
or
dec
add
test
mov
scas
js
scas
mov
mov
or
mov
je
dec
aas
stos
gs
les
pop
imul
fimull
stc
inc
add
pop
sbb
cmp
add
imul
add
mov
mov
rolb
hlt
add
insb
sbb
and
xor
js
insl
lea
jmp
stc
pop
fdivl
pop
mov
aad
adc
or
mov
pop
fcoms
dec
jl
xor
mov
jecxz
add
mov
adc
fwait
jmp
jle
sub
popf
fs
adc
mov
mov
repnz
mov
pop
bound
mov
add
ret
jecxz
roll
lods
ret
dec
leave
movsl
inc
add
add
out
sbb
inc
sbb
dec
sub
adc
mov
dec
and
add
mov
xlat
and
addb
lock
out
ja
dec
cmpsl
insb
cmpsl
xor
mov
movsb
mov
add
pop
xchg
pop
and
push
xchg
mov
dec
xchg
dec
add
dec
add
mov
mov
add
add
mov
xchg
sbb
xor
xchg
mov
mov
out
aad
push
ja
lods
int3
mov
pusha
add
jns
mov
stos
sbb
add
pop
jle
sbb
xor
mov
mov
jmp
aas
loopne
mov
cld
loope
and
addb
push
fstpl
xchg
push
je
loopne
mov
add
scas
int3
dec
sub
add
lds
loopne
mov
fstps
mov
divl
jg
test
add
add
or
mov
mov
in
sar
jle
sub
cld
add
fmulp
dec
mov
jg
fwait
lret
mov
mov
rolb
mov
jmp
dec
ja
or
arpl
mov
push
test
xchg
mov
xor
jle
int
mov
cmp
adc
mov
fldt
aam
fmull
mov
loop
mov
out
inc
add
je
daa
xchg
decb
addr16
sbbl
push
add
sub
sub
inc
stc
add
add
movsb
jb
mov
or
movl
enter
xor
cld
pop
push
add
xchg
outsb
jb
mov
or
cltd
adcl
add
into
das
push
xlat
hlt
push
loopne
mov
fstpl
or
jb
mov
add
imul
stos
jno
jne
add
push
iret
mov
add
repz
push
leave
aas
adc
pushf
outsb
push
sti
scas
clc
les
cld
cmpsb
push
push
add
add
add
fistps
sbb
sub
add
add
mov
mov
jne
jle
push
push
adc
mov
movsl
dec
mov
imul
add
mov
mov
das
mov
aad
jns
inc
ret
xchg
movsb
out
out
add
stos
jmp
inc
fcomps
lds
mov
mov
and
push
add
lahf
mov
add
add
add
aam
gs
pop
mov
inc
mov
leave
mov
pop
daa
xor
mov
pusha
add
mov
xor
jb
mov
popf
mov
jno
jo
mov
sub
scas
sub
mov
jmp
add
incb
bound
mov
cmpsb
sbb
cwtl
les
mov
hlt
inc
icebp
push
add
pop
or
outsl
fs
add
imul
mov
add
addb
cmp
jbe
cmc
jne
inc
dec
dec
mov
mov
shrl
and
adc
mov
mov
lea
inc
in
pop
pop
and
mov
cmpsb
dec
out
ret
rolb
enter
lock
insb
inc
add
mov
adc
out
fcmovnu
sub
xchg
mov
xor
test
mov
mov
adc
mov
pop
jns
sti
push
or
movsl
mov
mov
mov
out
psraw
cmp
dec
mov
mov
mov
insl
add
adc
mov
dec
or
mov
sub
and
mov
out
ja
or
adc
mov
xlat
mov
dec
jns
add
mov
rolb
mov
subl
pop
mov
add
repnz
dec
in
sbb
mov
xlat
dec
lcall
add
mov
aam
das
xchg
mov
popa
mov
leave
xor
mov
lods
insb
stc
dec
in
shll
mov
call
mov
lret
or
lret
or
or
xor
mov
mov
adc
add
mov
jle
adc
cmp
popf
sub
orl
mov
mov
add
dec
loopne
mov
inc
add
xchg
add
ficoms
ljmp
js
add
mov
popf
lahf
mov
adc
imulb
ljmp
out
and
mov
mov
dec
negb
add
lea
jno
mov
ds
cltd
data16
lods
cmp
xor
adc
sub
jmp
bound
mov
jnp
add
rcll
push
add
add
stos
bound
mov
jmp
cmp
add
pushf
in
push
pop
adc
mov
mov
pop
mov
mov
cld
jge
xchg
mov
mov
insb
and
or
ds
mov
mov
mov
add
rolb
mov
dec
das
ljmp
mov
and
mov
mov
sub
adc
add
rolb
mov
mov
mov
cmp
xchg
bound
mov
incb
jnp
out
jne
add
es
add
lret
movsb
test
and
jecxz
adc
insb
outsl
mov
js
jmp
pop
push
pushf
jnp
push
mov
or
addb
pop
fstpl
add
cld
repz
daa
adc
mov
pop
das
flds
add
loop
mov
shr
call
mov
cmp
sahf
add
mov
mov
mov
and
add
or
add
add
mov
push
mov
sahf
sub
inc
add
lock
daa
mov
push
jnp
mov
pusha
add
cmp
mov
sbb
add
or
dec
or
pusha
add
push
bound
mov
addb
scas
stc
addb
sahf
pop
mov
stc
jmp
add
add
pop
mov
jmp
sbb
push
adc
mov
insb
inc
add
adc
add
dec
add
mov
in
cmp
sarl
popf
ret
lahf
push
add
movsb
stos
sub
mov
movaps
mov
mov
jecxz
movsl
jle
int3
popa
xchg
lret
ss
lret
adc
mov
insl
dec
push
add
sub
mov
push
pop
out
pop
out
std
stc
and
mov
mov
cltd
into
movsl
fcmovnu
mov
gs
push
add
mov
mov
xor
mov
sarl
cmpsl
mov
inc
lahf
cld
cmp
insl
shrl
pop
inc
fldl
add
add
data16
mov
dec
leave
and
push
ret
lcall
lret
fs
mov
jno
call
cmp
test
sarl
inc
ret
in
mov
mov
add
add
mov
adc
sbb
sub
sbb
mov
cmc
push
add
rcll
test
push
pop
xlat
arpl
out
cli
into
sbb
fsubl
dec
lock
movsl
lods
jns
sub
inc
inc
aas
popf
lret
add
popf
inc
pushf
pop
sti
sti
daa
addb
cmp
test
dec
xor
enter
aam
call
dec
aad
cmp
or
push
pop
test
mov
xchg
rcrl
imul
add
add
sarl
fwait
out
xchg
lahf
in
add
in
fcmovnb
sbb
cmpsl
jecxz
filds
and
mov
add
mov
add
adc
test
add
cli
fwait
lds
jnp
xlat
and
mov
mov
add
in
repnz
stos
inc
outsl
push
add
icebp
add
add
mov
movsl
add
add
lods
cmp
addr16
repz
mov
notl
and
mov
mov
call
add
ds
arpl
leave
jne
nop
add
nop
add
sub
roll
add
xchg
out
invlpg
mov
movsb
outsb
inc
add
mov
lods
scas
mov
cmp
dec
dec
cmp
add
add
fsub
add
test
xor
xchg
mov
mov
mov
gs
ljmp
bound
mov
cmp
repnz
add
arpl
call
and
mov
mov
and
mov
cmp
arpl
cmpsl
popf
mov
mov
ja
mov
add
add
add
mov
arpl
cmc
or
rcrl
js
in
pop
out
push
loope
jle
aam
insb
insb
jnp
pop
mov
mov
repnz
cld
or
mov
inc
sub
xor
add
add
daa
jecxz
mov
clc
repnz
nop
cld
jae
push
daa
les
add
clc
repnz
nop
cld
jae
enter
jl
dec
cmp
mov
nop
leave
jmp
incl
add
enter
push
push
mov
xchg
ret
add
add
arpl
bound
add
ror
push
mov
nop
leave
jmp
lods
dec
pop
add
ds
cmp
nop
cld
jae
repnz
add
adc
pop
clc
repnz
nop
cld
jae
call
add
push
popa
popa
negl
mov
add
icebp
fidivl
in
jne
xlat
imul
add
add
repnz
nop
cld
jae
xchg
out
pop
clc
repnz
nop
cld
jae
add
add
push
bound
lock
mov
xchg
ret
jno
jno
arpl
out
out
movzwl
push
mov
nop
leave
jmp
and
add
les
add
clc
repnz
nop
cld
jae
add
in
les
fsts
mov
nop
leave
jmp
add
add
ds
push
push
mov
xchg
ret
aad
push
and
in
add
clc
repnz
nop
cld
jae
cmpsb
add
add
clc
repnz
nop
cld
jae
add
add
mov
pop
mov
push
mov
nop
leave
jmp
add
ja
add
cmpsl
jl
push
mov
xchg
ret
lock
xchg
add
add
stc
pop
push
mov
xchg
ret
push
pop
popl
xchg
aad
repz
repnz
nop
cld
jae
add
arpl
ds
add
adc
cmp
ret
add
add
pushl
push
mov
nop
leave
jmp
adc
aad
lods
add
fadd
clc
repnz
nop
cld
jae
sub
or
add
les
sbb
nop
nop
cld
jae
pop
add
add
push
mov
nop
leave
jmp
add
add
add
push
add
sub
add
in
nop
leave
jmp
inc
lea
rcll
and
clc
repnz
nop
cld
jae
add
les
sti
popl
add
adc
add
repnz
nop
cld
jae
add
xchg
push
add
mov
nop
leave
jmp
leave
daa
aam
pop
xchg
add
xor
add
push
mov
nop
leave
jmp
dec
daa
aad
add
push
clc
repnz
nop
cld
jae
aam
add
add
adc
clc
repnz
nop
cld
jae
arpl
rolb
sub
repnz
nop
cld
jae
leave
les
xchg
mov
mov
xchg
ret
xchg
xchg
les
push
add
add
movzwl
push
mov
nop
leave
jmp
aad
add
add
mov
ds
clc
repnz
nop
cld
jae
add
incl
add
les
nop
cld
jae
push
add
pop
in
add
clc
repnz
nop
cld
jae
rolb
repnz
add
imul
jae
in
mov
push
arpl
loop
mov
inc
xor
push
mov
nop
leave
jmp
add
add
adc
cmp
nop
nop
cld
jae
fiaddl
add
add
aaa
cs
clc
repnz
nop
cld
jae
add
aam
push
push
mov
nop
leave
jmp
add
add
add
lahf
mov
clc
repnz
nop
cld
jae
arpl
add
out
popl
and
mov
add
push
mov
nop
leave
jmp
jno
or
popl
add
repnz
nop
cld
jae
inc
mov
daa
add
jne
clc
repnz
nop
cld
jae
in
sub
rcr
shr
clc
repnz
nop
cld
jae
add
daa
add
mov
push
mov
nop
leave
jmp
popl
inc
mov
stc
push
mov
nop
leave
jmp
add
add
push
lock
in
sub
clc
repnz
nop
cld
jae
les
xchg
add
pop
mov
push
mov
xchg
ret
add
or
jbe
mov
clc
repnz
nop
cld
jae
add
enter
add
repnz
nop
cld
jae
les
add
xchg
repnz
push
push
mov
nop
leave
jmp
adc
add
add
mov
clc
repnz
nop
cld
jae
lock
cld
clc
repnz
nop
cld
jae
incl
add
arpl
mov
push
mov
nop
leave
jmp
sub
dec
in
push
lcall
aas
pop
clc
repnz
nop
cld
jae
pop
xchg
add
sti
pushf
add
clc
repnz
nop
cld
jae
add
aam
xchg
add
aaa
add
sub
clc
repnz
nop
cld
jae
xchg
dec
add
repnz
nop
cld
jae
and
mov
inc
inc
add
repnz
nop
cld
jae
mov
add
dec
mov
clc
repnz
nop
cld
jae
add
imul
clc
repnz
nop
cld
jae
lock
add
lahf
mov
clc
repnz
nop
cld
jae
enter
add
call
clc
repnz
nop
cld
jae
add
add
xlat
lret
add
repnz
nop
cld
jae
lock
add
dec
scas
mov
clc
repnz
nop
cld
jae
jbe
aam
dec
add
jbe
add
add
jmp
incl
inc
mov
daa
lock
aam
jno
imul
jae
add
add
out
insl
repnz
add
add
repnz
nop
cld
jae
enter
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
insl
add
add
inc
xchg
cld
xor
push
mov
nop
leave
jmp
sti
dec
add
pop
rep
clc
repnz
nop
cld
jae
xchg
add
clc
repnz
nop
cld
jae
add
add
out
add
pushl
clc
repnz
nop
cld
jae
in
sub
repnz
mov
add
daa
add
push
mov
nop
leave
jmp
daa
add
or
in
nop
leave
jmp
add
inc
lea
arpl
int
pop
jae
repnz
nop
cld
jae
add
mov
pop
movsl
popa
sub
les
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
xchg
add
mov
xchg
clc
repnz
nop
cld
jae
xchg
add
add
call
clc
repnz
nop
cld
jae
ficoml
inc
inc
jp
test
push
add
clc
repnz
nop
cld
jae
or
add
repnz
nop
cld
jae
les
test
mov
nop
leave
jmp
enter
add
repnz
mov
push
mov
nop
leave
jmp
ds
add
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
and
add
mov
cmpsb
adc
add
push
mov
add
push
add
fldl
sub
scas
cmp
dec
in
rol
clc
repnz
nop
cld
jae
xchg
and
add
add
clc
repnz
nop
cld
jae
add
add
add
add
and
nop
nop
cld
jae
and
push
mov
xchg
ret
add
add
xchg
enter
cmpl
push
mov
xchg
ret
add
fwait
jmp
clc
repnz
nop
cld
jae
and
add
add
add
aaa
js
mov
clc
repnz
nop
cld
jae
sti
mov
mov
cli
call
in
nop
leave
jmp
add
sub
push
mov
nop
leave
jmp
add
sub
xchg
xor
nop
nop
cld
jae
add
add
jno
in
push
clc
repnz
nop
cld
jae
les
inc
decb
nop
leave
jmp
cmpsb
lods
and
sub
add
pop
je
clc
repnz
nop
cld
jae
cli
add
or
popa
clc
repnz
nop
cld
jae
jbe
leave
add
mov
add
clc
repnz
nop
cld
jae
add
lods
pop
cli
cli
push
push
mov
xchg
ret
pop
lods
add
loop
mov
xor
mov
sub
clc
repnz
nop
cld
jae
add
dec
jg
repnz
repnz
nop
cld
jae
out
add
lock
dec
push
leave
cmp
push
mov
nop
leave
jmp
sti
add
in
jns
xor
dec
ss
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
enter
clc
repnz
nop
cld
jae
add
ds
mov
jae
rep
push
mov
xchg
ret
or
add
in
add
or
nop
cld
jae
pop
add
xor
mov
jmp
clc
repnz
nop
cld
jae
mov
repnz
rep
clc
repnz
nop
cld
jae
pop
cmpsb
xchg
or
xor
mov
sub
repnz
nop
cld
jae
add
shlb
pushf
mov
clc
repnz
nop
cld
jae
daa
add
add
add
add
clc
repnz
nop
cld
jae
dec
inc
daa
dec
xchg
clc
repnz
nop
cld
jae
fidivrl
add
insl
add
clc
repnz
nop
cld
jae
or
leave
adc
jmp
add
repnz
nop
cld
jae
fiaddl
inc
repnz
out
or
nop
cld
jae
inc
add
sar
add
sar
repnz
nop
cld
jae
sub
out
add
add
out
call
clc
repnz
nop
cld
jae
add
clc
push
mov
xchg
ret
add
add
les
add
fisttpl
nop
nop
cld
jae
add
bound
ds
push
add
repnz
nop
cld
jae
bound
add
mov
clc
repnz
nop
cld
jae
out
add
xchg
mov
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
arpl
add
add
popf
mov
clc
repnz
nop
cld
jae
pop
inc
add
add
add
add
repnz
nop
cld
jae
sub
or
dec
mov
push
mov
xchg
ret
inc
aam
add
jecxz,pt
add
push
mov
xchg
ret
add
call
in
mov
clc
repnz
nop
cld
jae
inc
add
add
xchg
inc
sub
push
cld
clc
repnz
nop
cld
jae
leave
adc
xchg
xchg
aas
add
push
mov
nop
leave
jmp
add
add
dec
or
clc
repnz
nop
cld
jae
mov
pop
sub
nopl
add
add
lock
lods
rolb
add
add
bound
add
add
clc
repnz
nop
cld
jae
inc
add
push
clc
repnz
nop
cld
jae
lcall
lock
cmp
inc
add
xchg
dec
lods
add
pop
pop
sub
add
or
push
les
add
push
add
inc
sub
push
mov
nop
leave
jmp
add
add
add
scas
add
push
mov
xchg
ret
xchg
add
add
repnz
push
push
and
clc
repnz
nop
cld
jae
add
aad
dec
pop
lret
call
clc
repnz
nop
cld
jae
add
add
dec
add
clc
repnz
nop
cld
jae
add
add
jno
pop
mov
push
mov
nop
leave
jmp
lods
add
or
ret
push
mov
nop
leave
jmp
add
mov
inc
add
or
nop
nop
cld
jae
and
cmpsb
add
icebp
jg
clc
repnz
nop
cld
jae
ficoml
or
add
xchg
loop
mov
shl
clc
repnz
nop
cld
jae
add
shll
in
push
mov
cmp
add
call
jl
add
mov
push
mov
xchg
ret
dec
out
mov
cmpsb
add
mov
je,pn
clc
repnz
nop
cld
jae
daa
add
es
mov
je
out
push
and
add
cwtl
mov
clc
repnz
nop
cld
jae
add
les
inc
aam
add
dec
and
clc
repnz
nop
cld
jae
add
xchg
aas
movzwl
push
mov
nop
leave
jmp
insl
xchg
add
das
push
mov
add
and
rolb
mov
add
test
push
mov
nop
leave
jmp
add
jno,pt
add
cmpsl
mov
loopne
add
aad
add
sub
push
pop
notl
stos
cmpl
push
mov
nop
leave
jmp
add
dec
pop
add
popa
add
mov
nop
leave
jmp
add
ds
rclb
push
mov
xchg
ret
add
les
in
popl
add
rolb
repnz
nop
cld
jae
add
add
add
xor
mov
add
push
mov
nop
leave
jmp
add
add
pop
aam
mov
clc
repnz
nop
cld
jae
inc
aam
lock
push
push
mov
nop
leave
jmp
sub
out
rolb
add
add
jmp
inc
add
lcall
bnd
push
pop
arpl
mov
nop
nop
cld
jae
cli
xchg
add
add
loope
into
mov
clc
repnz
nop
cld
jae
lods
arpl
mov
ret
flds
xchg
ret
add
pop
insl
out
push
inc
lock
mov
xor
push
mov
nop
leave
jmp
dec
incl
les
mov
mov
dec
add
repnz
nop
cld
jae
add
sti
pop
add
jne
pop
push
mov
xchg
ret
add
cmpsb
sar
dec
mov
push
mov
nop
leave
jmp
add
les
add
sub
mov
inc
add
les
shrl
repnz
nop
cld
jae
add
mov
fiaddl
test
clc
repnz
nop
cld
jae
add
fiaddl
add
arpl
adc
mov
nop
leave
jmp
add
sarb
repnz
nop
cld
jae
pop
add
pop
bound
je
push
push
mov
xchg
ret
add
pop
add
add
xchg
xchg
push
add
add
data16
repnz
nop
cld
jae
add
ds
xor
clc
repnz
nop
cld
jae
add
push
or
add
ja
mov
clc
repnz
nop
cld
jae
add
in
adc
adc
push
mov
nop
leave
jmp
add
add
add
add
lcall
add
xchg
pop
in
xchg
pop
and
iret
add
clc
repnz
nop
cld
jae
xchg
add
cli
mov
add
add
mov
xchg
ret
rol
shl
add
add
cmc
loope
out
mov
push
mov
nop
leave
jmp
add
pop
popl
int
repz
repnz
nop
cld
jae
enter
and
sub
mov
push
mov
xchg
ret
add
add
add
inc
js
push
mov
xchg
ret
add
add
fimull
out
add
push
mov
xchg
ret
add
add
in
push
clc
repnz
nop
cld
jae
dec
add
aad
push
insl
mov
mov
nop
leave
jmp
leave
or
add
add
clc
repnz
nop
cld
jae
add
add
les
repnz
nop
cld
jae
xchg
pop
clc
repnz
nop
cld
jae
in
add
add
loop
cmpsl
sbb
add
add
adc
add
sub
xor
add
push
mov
nop
leave
jmp
add
aam
jmp
nop
nop
cld
jae
or
lea
add
add
clc
repnz
nop
cld
jae
add
xchg
add
pop
push
push
mov
xchg
ret
add
les
mov
mov
call
push
mov
nop
leave
jmp
add
inc
xchg
sub
in
nop
leave
jmp
adc
out
mov
mov
repnz
nop
cld
jae
add
add
add
les
add
xchg
fcomip
movsb
push
mov
xchg
ret
add
in
add
xor
push
mov
xchg
ret
add
pop
lods
or
andl
nop
leave
jmp
sub
fisubl
xor
xchg
xchg
fcoml
mov
xchg
ret
add
add
lods
add
daa
mov
mov
pop
push
mov
xchg
ret
xchg
add
add
xchg
mov
adc
movl
add
ds
add
cli
out
lcall
nop
cld
jae
add
add
push
cmp
dec
cmp
repnz
nop
cld
jae
lods
in
out
or
add
jo
mov
imul
out
inc
add
xchg
jno
add
push
mov
xchg
ret
dec
mov
out
sub
nop
cld
jae
add
daa
aam
add
inc
fs
add
cmp
out
mov
add
add
outsb
and
mov
sar
add
clc
repnz
nop
cld
jae
pop
add
test
push
mov
xchg
ret
push
dec
add
mov
mov
clc
repnz
nop
cld
jae
add
out
stos
push
mov
xchg
ret
aam
add
jno
add
sub
mov
xchg
ret
sub
mov
pop
clc
repnz
nop
cld
jae
add
incl
mov
clc
repnz
nop
cld
jae
add
sti
movsl
pop
add
push
mov
nop
leave
jmp
and
cmpsb
add
and
pop
push
push
mov
nop
leave
jmp
les
enter
les
mov
stos
clc
repnz
nop
cld
jae
add
adc
mov
jmp
incl
add
add
add
add
sti
push
mov
nop
nop
cld
jae
sub
insl
adc
add
dec
push
mov
nop
leave
jmp
out
lods
add
sarb
add
mov
xchg
ret
aam
or
daa
mov
xchg
clc
repnz
nop
cld
jae
add
daa
add
add
sbb
repnz
nop
cld
jae
and
add
push
mov
xchg
ret
add
and
lods
cmpsb
insl
dec
push
mov
cld
imul
add
add
sbb
add
imul
add
add
and
out
daa
add
inc
clc
repnz
nop
cld
jae
add
xchg
daa
bound
sbb
dec
push
clc
repnz
nop
cld
jae
add
add
add
lahf
mov
clc
repnz
nop
cld
jae
arpl
ds
or
xchg
bound
mov
subl
clc
repnz
nop
cld
jae
add
dec
add
push
mov
xchg
ret
add
pop
sti
adc
out
maskmovq
testl
push
mov
nop
leave
jmp
add
add
jbe
mov
push
mov
xchg
ret
add
push
cmpsb
rolb
xchg
adc
mov
clc
repnz
nop
cld
jae
xchg
push
add
mov
xchg
ret
enter
add
xor
clc
repnz
nop
cld
jae
sti
add
repnz
in
push
push
mov
nop
leave
jmp
add
bound
add
add
fisttpl
scas
fiadds
xchg
ret
aad
fcmovbe
add
lods
push
xor
clc
repnz
nop
cld
jae
add
ds
in
mov
clc
repnz
nop
cld
jae
aad
and
inc
adc
add
repnz
nop
cld
jae
pop
xchg
push
ds
clc
repnz
nop
cld
jae
add
add
inc
push
mov
xchg
ret
add
add
inc
inc
add
mov
nop
leave
jmp
sti
xchg
add
and
xchg
ret
stc
movswl
push
mov
nop
leave
jmp
bound
or
jg
clc
repnz
nop
cld
jae
add
sti
daa
lods
out
mov
mov
xchg
ret
add
fidivl
and
mov
and
push
mov
nop
leave
jmp
daa
add
mov
add
push
add
add
or
jno
and
and
add
add
in
push
clc
repnz
nop
cld
jae
daa
add
aam
mov
arpl
clc
repnz
nop
cld
jae
lods
xchg
aad
push
jmp
ret
push
mov
xchg
ret
and
add
mov
clc
repnz
nop
cld
jae
add
add
fs
sar
repnz
out
add
xchg
add
add
addr16
in
nop
leave
jmp
add
mov
jno
add
push
mov
nop
leave
jmp
adc
aam
add
shrb
sti
add
add
in
nop
leave
jmp
xchg
clc
clc
repnz
nop
cld
jae
repnz
add
out
cmp
mov
add
inc
bound
add
and
add
add
add
mov
nop
leave
jmp
add
repnz
add
fldl
fcos
inc
add
add
add
insl
imul
ret
jbe
pop
inc
sbb
rcll
jne
add
clc
repnz
nop
cld
jae
out
add
test
push
mov
nop
leave
jmp
jbe
dec
add
or
repnz
nop
cld
jae
les
xchg
add
add
inc
cmp
mov
xchg
ret
lods
add
or
add
pop
enter
mov
mov
xchg
ret
rolb
daa
enter
dec
push
and
add
repnz
nop
cld
jae
add
add
lods
add
adc
add
clc
repnz
nop
cld
jae
push
add
add
les
inc
sbb
nop
nop
cld
jae
lock
dec
fiaddl
add
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
call
dec
dec
add
add
mov
clc
repnz
nop
cld
jae
add
popa
movsb
fwait
mov
clc
repnz
nop
cld
jae
jno
aad
add
push
mov
xchg
ret
fimull
xchg
aad
fisubl
clc
repnz
nop
cld
jae
cli
add
and
clc
repnz
nop
cld
jae
add
pop
mov
clc
repnz
nop
cld
jae
add
push
add
cmp
push
mov
nop
leave
jmp
lea
add
add
dec
decl
mov
xchg
ret
push
out
add
aam
aas
mov
push
mov
xchg
ret
dec
arpl
fimull
add
leave
and
mov
push
mov
xchg
ret
insl
add
fisubrl
sar
nop
nop
cld
jae
dec
add
add
leave
add
cmpw
push
mov
nop
leave
jmp
add
add
push
movsl
ret
pop
test
push
mov
nop
leave
jmp
mov
push
add
xchg
or
repnz
nop
cld
jae
aam
add
les
add
test
push
mov
nop
leave
jmp
add
or
push
mov
clc
repnz
nop
cld
jae
add
add
sti
leave
dec
and
push
mov
xchg
ret
add
lods
add
dec
or
incl
xchg
ret
repnz
arpl
out
jmp
add
pop
rolb
lods
inc
mov
add
popa
add
repnz
nop
cld
jae
add
add
jbe
lcall
jae
add
add
add
add
add
add
repnz
nop
cld
jae
xchg
repnz
jne
clc
repnz
nop
cld
jae
daa
sub
adc
repnz
nop
cld
jae
add
les
add
popl
push
mov
nop
leave
jmp
dec
add
pop
add
inc
sbb
nop
leave
jmp
les
jno
add
cmpsb
add
mov
push
mov
xchg
ret
add
add
fld
push
mov
nop
leave
jmp
add
rclb
mov
fmuls
test
cli
clc
repnz
nop
cld
jae
in
adc
fstl
jb
inc
add
add
incl
pop
push
push
cmc
and
pop
clc
repnz
nop
cld
jae
or
push
add
add
or
repnz
nop
cld
jae
aad
add
dec
inc
lea
adc
push
addb
les
xor
xchg
jne
lahf
jne
push
mov
nop
leave
jmp
mov
lea
clc
repnz
nop
cld
jae
add
adc
and
push
add
clc
repnz
nop
cld
jae
sti
lods
enter
fistps
repnz
nop
cld
jae
jno
add
mov
sbb
repnz
nop
cld
jae
add
test
add
add
push
mov
nop
leave
jmp
les
jbe
dec
test
push
mov
nop
leave
jmp
add
sti
daa
dec
add
daa
loop
mov
or
repnz
nop
cld
jae
repnz
daa
xchg
add
mov
mov
push
mov
nop
leave
jmp
dec
add
and
mov
push
loop
mov
xchg
ret
add
aad
pop
xchg
push
mov
clc
repnz
nop
cld
jae
pop
fidivrl
les
sub
in
nop
leave
jmp
bnd
insl
lea
sub
in
nop
leave
jmp
add
add
add
jb
mov
movzwl
clc
repnz
nop
cld
jae
jbe
add
clc
repnz
nop
cld
jae
add
cmpsb
add
enter
movzwl
clc
repnz
nop
cld
jae
add
jno
dec
jge
clc
repnz
nop
cld
jae
push
add
pop
les
add
repnz
nop
cld
jae
add
bound
push
mov
xor
add
clc
repnz
nop
cld
jae
xchg
out
push
add
push
mov
xchg
ret
add
add
enter
inc
loopne
repnz
nop
cld
jae
aad
add
sti
ja
push
push
mov
nop
leave
jmp
dec
push
add
sub
mov
repnz
nop
cld
jae
cmpsb
add
lea
push
mov
nop
leave
jmp
add
rcl
add
push
loop
mov
clc
repnz
nop
cld
jae
push
fidivrl
pop
clc
repnz
nop
cld
jae
add
les
mov
xchg
ret
mov
or
fistpll
clc
repnz
nop
cld
jae
inc
add
jno
mov
clc
repnz
nop
cld
jae
add
add
dec
mov
mov
add
aaa
lock
call
in
nop
leave
jmp
pop
leave
add
pusha
add
clc
repnz
nop
cld
jae
add
add
daa
add
xabort
nop
nop
cld
jae
or
push
lods
sub
inc
xchg
ss
subl
repz
repnz
nop
cld
jae
add
add
sub
inc
add
push
mov
nop
leave
jmp
add
repnz
clc
repnz
nop
cld
jae
out
out
pusha
clc
repnz
nop
cld
jae
add
sub
add
pop
sti
xor
push
mov
nop
leave
jmp
add
add
add
inc
adc
dec
adc
repnz
nop
cld
jae
aam
jno
inc
repnz
cmp
repnz
nop
cld
jae
add
add
mov
ret
pusha
add
clc
repnz
nop
cld
jae
add
push
jno
add
leave
clc
repnz
nop
cld
jae
and
add
daa
jbe
xor
push
mov
xchg
ret
rolb
add
les
lret
clc
repnz
nop
cld
jae
add
enter
lock
bound
repnz
nop
cld
jae
add
add
xchg
addr16
push
repz
mov
clc
repnz
nop
cld
jae
or
add
jno
lahf
jne
clc
repnz
nop
cld
jae
add
and
mov
add
clc
repnz
nop
cld
jae
add
in
sub
mov
nop
leave
jmp
ficoml
inc
lock
or
ds
push
mov
xchg
ret
add
les
out
add
push
mov
nop
leave
jmp
add
dec
add
add
mov
mov
clc
repnz
nop
cld
jae
add
add
cmp
repnz
nop
cld
jae
repnz
xchg
push
mov
enter
nop
nop
cld
jae
add
daa
bound
add
add
in
nop
leave
jmp
xchg
xchg
addr16
push
clc
repnz
nop
cld
jae
fiaddl
push
add
cmc
insb
push
push
mov
nop
leave
jmp
add
mov
clc
repnz
nop
cld
jae
inc
xchg
push
movzwl
clc
repnz
nop
cld
jae
add
sub
and
add
repnz
nop
cld
jae
aam
add
and
push
mov
xchg
ret
les
inc
push
add
add
mov
repnz
nop
cld
jae
les
add
cmpsb
jns
mov
add
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
add
add
add
cmp
xor
add
clc
repnz
nop
cld
jae
push
add
mov
add
and
imul
nop
nop
cld
jae
add
add
dec
inc
clc
repnz
nop
cld
jae
jno,pt
xchg
les
add
xor
push
mov
xchg
ret
add
daa
add
add
aad
add
decl
add
dec
dec
mov
leave
out
add
and
cli
ret
mov
clc
repnz
nop
cld
jae
jno
repnz
dec
push
mov
xchg
ret
out
and
repnz
xor
inc
jp
push
mov
nop
leave
jmp
add
add
adc
mov
xor
clc
repnz
nop
cld
jae
xchg
add
xchg
sub
nop
nop
cld
jae
add
les
mov
sar
nop
nop
cld
jae
add
sub
add
mov
xchg
ret
add
add
xchg
add
outsb
mov
clc
repnz
nop
cld
jae
add
mov
out
clc
repnz
nop
cld
jae
dec
xchg
pop
clc
repnz
nop
cld
jae
sub
pop
push
push
ret
add
in
nop
leave
jmp
mov
add
arpl
add
add
leave
jmp
cmpsb
add
inc
sbb
repnz
nop
cld
jae
les
push
add
mov
xchg
ret
add
lods
mov
lret
call
clc
repnz
nop
cld
jae
sarb
clc
repnz
nop
cld
jae
enter
sti
add
sub
clc
repnz
nop
cld
jae
dec
add
dec
mov
mov
push
mov
in
mov
arpl
dec
adc
add
and
pop
call
clc
repnz
nop
cld
jae
add
dec
and
jl
xor
psadbw
xchg
ret
add
aad
push
and
mov
mov
mov
clc
repnz
nop
cld
jae
add
rolb
sbb
xchg
fdivr
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
add
lock
add
add
ds
cli
out
add
enter
arpl
add
cmp
push
mov
nop
leave
jmp
bound
sti
enter
mov
popa
add
repnz
nop
cld
jae
enter
dec
sub
decl
push
mov
xchg
ret
bnd
or
add
push
push
mov
nop
leave
jmp
xchg
jbe
lods
add
add
or
rcll
in
nop
leave
jmp
add
les
dec
mov
mov
or
add
repnz
nop
cld
jae
add
add
push
push
mov
nop
leave
jmp
fidivrl
or
sub
sti
clc
repnz
nop
cld
jae
add
add
sub
push
mov
xchg
ret
aam
add
xor
clc
repnz
nop
cld
jae
arpl
add
cmp
push
mov
nop
leave
jmp
les
add
leave
push
out
fstpl
mov
xchg
ret
add
push
les
enter
add
mov
jbe,pt
repnz
aam
icebp
dec
add
clc
repnz
nop
cld
jae
or
add
inc
jb
clc
repnz
nop
cld
jae
out
add
add
dec
push
push
mov
xchg
ret
lock
add
inc
push
and
jb
push
mov
nop
leave
jmp
add
rcrb
inc
adc
inc
or
clc
repnz
nop
cld
jae
leave
jno,pt
pushf
mov
clc
repnz
nop
cld
jae
mov
add
sub
stc
add
clc
repnz
nop
cld
jae
add
cmpsb
sub
pop
mov
push
mov
xchg
ret
jmp
jo
mov
popa
add
mov
nop
leave
jmp
add
dec
and
ja
mov
clc
repnz
nop
cld
jae
out
rcrb
mov
mov
clc
inc
add
add
sub
add
jno
test
push
jno
sbb
repnz
nop
cld
jae
arpl
add
repnz
add
in
loope
call
in
nop
leave
jmp
repnz
aad
aad
xor
clc
repnz
nop
cld
jae
add
add
es
mov
clc
repnz
nop
cld
jae
adc
cli
out
aad
mov
nop
leave
jmp
push
add
add
add
add
stos
clc
repnz
nop
cld
jae
bound
add
pusha
clc
repnz
nop
cld
jae
xchg
aad
add
sti
dec
add
sbb
popa
jnp
fadds
push
xor
cmp
push
mov
xchg
ret
push
dec
and
popl
leave
add
add
repnz
nop
cld
jae
dec
push
add
lea
or
test
nop
cld
jae
or
repnz
rcrb
repnz
nop
cld
jae
add
adc
jbe
mov
nop
cld
jae
and
shl
add
repnz
nop
cld
jae
inc
add
dec
add
add
pusha
push
mov
xchg
ret
add
xchg
add
add
mov
push
mov
nop
leave
jmp
and
dec
add
add
xchg
push
add
clc
repnz
nop
cld
jae
leave
add
pop
call
clc
repnz
nop
cld
jae
xchg
inc
aam
and
mov
add
mov
clc
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
adc
mov
dec
cmpsb
popf
jne
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
dec
out
mov
push
mov
xchg
ret
add
xchg
or
dec
pop
clc
repnz
nop
cld
jae
add
add
push
add
rolb
mov
push
mov
xchg
ret
add
lods
and
popa
gs
jne
clc
repnz
nop
cld
jae
incl
add
xor
clc
repnz
nop
cld
jae
in
inc
and
add
stos
imul
clc
repnz
nop
cld
jae
add
xchg
add
add
adc
mov
inc
add
add
cli
insl
call
push
mov
nop
leave
jmp
out
add
div
push
mov
nop
leave
jmp
add
add
daa
ds
push
leave
clc
repnz
nop
cld
jae
cmpsb
add
push
add
sub
enter
jg
inc
add
add
add
add
out
add
clc
repnz
nop
cld
jae
leave
repnz
les
sub
push
mov
xchg
ret
sarb
or
jecxz
add
aad
or
add
add
add
push
mov
xchg
ret
les
dec
pop
add
or
add
add
lock
add
jno
dec
add
out
out
clc
clc
repnz
nop
cld
jae
add
add
xor
add
clc
repnz
nop
cld
jae
add
push
lods
push
mov
add
add
add
fldl
add
mov
aam
xchg
subl
jmp
inc
daa
add
lock
add
and
add
clc
repnz
nop
cld
jae
dec
dec
add
xchg
add
clc
repnz
nop
cld
jae
shrb
add
les
push
mov
jno
push
mov
aas
add
jns
add
add
push
lcall
mov
push
imul
fiadds
xchg
ret
mov
add
dec
mov
push
mov
xchg
ret
add
sub
push
add
dec
add
neg
inc
add
xchg
add
scas
mov
push
mov
nop
leave
jmp
add
aad
add
rclb
mov
clc
repnz
nop
cld
jae
repnz
add
dec
daa
sub
mov
xchg
ret
push
add
add
add
add
or
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
xchg
add
add
xchg
add
mov
xchg
ret
xchg
xchg
add
in
nop
leave
jmp
lea
add
mov
repnz
lea
push
mov
nop
leave
jmp
inc
add
sti
mov
pusha
add
add
in
nop
leave
jmp
xchg
fiaddl
adc
mov
mov
clc
repnz
nop
cld
jae
xchg
add
rolb
add
rep
clc
repnz
nop
cld
jae
add
arpl
add
mov
mov
nop
leave
jmp
add
add
add
cli
dec
push
mov
xchg
ret
insl
leave
add
push
cwtl
push
push
mov
xchg
ret
shlb
add
lods
dec
add
mov
jmp
nop
leave
jmp
or
add
ret
clc
repnz
nop
cld
jae
lods
add
dec
add
rolb
mov
push
mov
xchg
ret
dec
add
dec
in
add
xchg
fdivr
clc
repnz
nop
cld
jae
inc
add
repnz
push
push
mov
xchg
ret
jno
add
push
add
add
test
pop
clc
repnz
nop
cld
jae
add
jbe
add
mov
add
add
repnz
nop
cld
jae
adc
and
clc
repnz
nop
cld
jae
add
push
add
mov
aad
inc
add
add
xchg
mov
add
repnz
clc
repnz
nop
cld
jae
out
fiaddl
cli
cli
push
iret
jmp
add
daa
add
jmp
aad
sub
lret
cmp
repnz
nop
cld
jae
adc
cli
aam
add
lock
add
add
dec
push
add
add
adc
cmp
repnz
nop
cld
jae
mov
add
shr
clc
repnz
nop
cld
jae
arpl
pop
sub
sub
das
add
push
mov
nop
leave
jmp
add
add
popa
clc
repnz
nop
cld
jae
add
add
lods
add
leave
negl
push
mov
test
add
push
sahf
int
mov
addb
push
push
mov
xchg
ret
add
add
sub
add
dec
mov
clc
repnz
nop
cld
jae
inc
lea
call
push
mov
nop
leave
jmp
incl
add
pop
pusha
clc
repnz
nop
cld
jae
sub
cmpsb
add
fiaddl
cmc
adc
xor
out
clc
repnz
nop
cld
jae
lock
add
push
mov
nop
leave
jmp
add
add
add
mov
push
mov
nop
leave
jmp
sarb
add
sti
or
mov
repnz
nop
cld
jae
dec
add
leave
push
add
cld
push
push
mov
xchg
ret
add
or
add
clc
repnz
nop
cld
jae
add
sarb
add
pop
push
mov
xchg
ret
bound
les
mov
cld
jae
inc
ds
lea
test
jne
clc
repnz
nop
cld
jae
add
leave
add
lds
mov
inc
adc
repnz
nop
cld
jae
out
dec
out
add
push
fs
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
aam
add
push
add
mov
xchg
ret
add
lods
xchg
cmpsb
mov
dec
clc
repnz
nop
cld
jae
xchg
add
mov
add
add
repnz
nop
cld
jae
repnz
add
mov
sar
repnz
nop
cld
jae
add
sub
add
int
test
clc
repnz
nop
cld
jae
aad
das
xor
push
mov
xchg
ret
add
add
add
icebp
clc
repnz
nop
cld
jae
dec
repnz
pop
push
mov
xchg
ret
dec
add
jmp
les
add
add
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
add
xchg
add
sbb
push
mov
xchg
ret
add
sti
add
pop
add
or
cmpl
jmp
add
xchg
das
add
clc
repnz
nop
cld
jae
cli
add
les
add
mov
add
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
jno
add
push
xchg
add
mov
repnz
nop
cld
jae
arpl
mov
mov
mov
xchg
ret
add
push
cmpsb
les
xchg
xchg
add
push
mov
xchg
ret
dec
add
add
les
push
mov
add
clc
add
rolb
inc
mov
repnz
shl
outsb
push
push
mov
xchg
ret
add
add
xchg
add
mov
push
clc
repnz
nop
cld
jae
add
add
add
add
popl
repz
mov
nop
leave
jmp
cmpsb
add
add
add
pusha
clc
repnz
nop
cld
jae
out
shlb
and
cmp
repnz
nop
cld
jae
add
add
add
xchg
fwait
push
clc
repnz
nop
cld
jae
add
insl
add
add
aad
addb
dec
pushl
clc
repnz
nop
cld
jae
pop
xchg
dec
add
add
xor
push
mov
xchg
ret
lods
add
push
xchg
sub
mov
adc
repnz
nop
cld
jae
mov
add
dec
push
into
call
clc
repnz
nop
cld
jae
add
mov
cmp
mov
nop
leave
jmp
fiaddl
add
add
push
add
movsl
cmp
add
clc
repnz
nop
cld
jae
add
or
les
clc
repnz
nop
cld
jae
aam
add
add
push
push
mov
nop
leave
jmp
bnd
add
leave
or
cmp
nop
nop
cld
jae
jbe
add
add
repnz
nop
cld
jae
add
repnz
add
call
clc
repnz
nop
cld
jae
add
add
imul
nop
cld
jae
dec
leave
add
or
enter
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
add
bound
psllq
jae
sti
add
daa
repz
and
push
mov
nop
leave
jmp
add
mov
clc
mov
clc
repnz
nop
cld
jae
xchg
add
jns
cmpl
jae
leave
add
ret
fmull
nop
leave
jmp
bnd
ljmp
dec
add
test
jecxz
clc
repnz
nop
cld
jae
lock
add
mov
ljmp
and
repnz
and
adc
cmp
clc
repnz
nop
cld
jae
add
add
and
push
mov
nop
leave
jmp
add
push
cli
add
mov
push
mov
nop
leave
jmp
lods
in
adc
add
lret
mov
clc
repnz
nop
cld
jae
les
add
fisttpl
test
nop
nop
cld
jae
les
nop
add
add
clc
repnz
nop
cld
jae
add
add
daa
outsb
and
push
mov
nop
leave
jmp
add
les
pop
push
mov
xchg
ret
add
push
arpl
or
push
out
mov
mov
xchg
ret
insl
add
in
xchg
lcall
push
mov
nop
leave
jmp
lock
and
mov
xor
clc
repnz
nop
cld
jae
lods
dec
cli
add
xlat
inc
inc
stos
je
push
mov
nop
leave
jmp
add
push
push
mov
xchg
ret
inc
fimull
xchg
cmpsb
xchg
repnz
popa
clc
repnz
nop
cld
jae
mov
inc
adc
adc
mov
add
push
mov
nop
leave
jmp
dec
add
dec
add
push
mov
xchg
ret
add
add
add
pop
push
mov
xchg
ret
incl
pop
push
xchg
add
add
push
clc
repnz
nop
cld
jae
lods
add
enter
add
in
insl
add
movsl
imul
sub
cmpsl
add
mov
ss
mov
inc
mov
rolb
dec
xchg
lods
sbb
mov
das
pop
and
mov
mov
inc
pop
inc
das
repz
loop
mov
pop
mov
dec
push
and
mov
mov
dec
mov
cmp
ficomps
fcomps
addb
in
mov
cmp
out
sbb
mov
lret
fdivrs
push
aas
bswap
clc
push
push
or
mov
sbb
mov
mov
xchg
add
adc
push
sbb
cltd
in
mov
and
mov
pop
or
cmpsb
xor
mov
sbb
add
mov
pop
pop
sti
pop
jns
std
or
add
xor
mov
add
xchg
fwait
lock
daa
loopne
mov
dec
xor
mov
js
add
enter
fimuls
sbb
fwait
dec
xchg
movsl
jne
add
or
data16
pop
inc
cmpsb
dec
cmpsb
push
into
clc
pop
jg
mov
or
inc
add
and
mov
add
mov
sbb
dec
and
mov
push
cmc
pusha
add
cmp
bound
mov
addb
addb
icebp
cmpsb
mov
mov
dec
rolb
mov
push
pushf
jmp
repz
mov
push
add
jo
mov
add
and
mov
dec
push
cld
mov
rolb
mov
inc
leave
push
xchg
sarl
pop
push
es
add
mov
aas
addb
repnz
das
xchg
cmp
aaa
sbb
insb
jb
mov
add
mov
jo
mov
add
mov
in
push
inc
push
in
add
mov
pop
cs
jo
mov
int
enter
fistpl
movsl
dec
daa
mov
adc
pop
jp
scas
dec
lahf
push
popf
stos
jmp
cmp
bound
mov
sbb
dec
clc
inc
shll
sbb
test
loope
and
cs
dec
jg
cmpsb
addb
addb
scas
adc
mov
mov
mov
xchg
es
cltd
enter
fs
mov
xchg
and
fsub
and
fstpt
add
add
mov
stos
xchg
push
xlat
push
add
mov
mov
cmp
xchg
add
stos
xchg
fs
add
orl
movsl
cmpsb
mov
pop
aas
loop
mov
cmp
sbb
sub
xor
cmp
mov
mov
cmpsl
pop
test
dec
js
adc
mov
mov
xchg
and
adc
mov
mov
dec
jp
jbe
aas
in
addr16
test
pop
xor
add
mov
add
rcll
pop
jo
mov
stos
mov
mov
mov
mov
mov
push
out
and
cmp
cmp
and
dec
out
sbb
or
push
gs
popa
cltd
cltd
mov
add
mov
movsb
jo
mov
fnstenv
enter
pop
mov
or
pop
adc
imul
inc
flds
mov
enter
clc
out
loope
jns
pop
mov
or
adc
iret
mov
xor
mov
pop
cmp
mov
jo
mov
add
pushf
popf
lret
jge
pop
xchg
dec
fs
jns
pusha
add
mov
add
test
mov
scas
pop
ret
adc
pop
dec
and
out
add
pop
aas
mov
ds
leave
in
add
push
xor
mov
jg
scas
fiadds
popf
mov
add
and
add
add
xchg
lock
sbb
jne
hlt
call
pop
cmp
mov
les
push
mov
sbb
and
mov
inc
add
sub
arpl
pusha
add
scas
aaa
sbb
push
je
add
js
add
push
imul
insb
fisttps
add
mov
dec
adc
push
push
loope,pn
pop
fwait
loopne
mov
cmp
mov
popf
addr16
movb
add
je
into
inc
mov
xchg
push
iret
je
or
dec
int
rolb
mov
xchg
xchg
jnp
rcr
loope
mov
repnz
rcrl
xor
mov
rcll
dec
iret
push
jmp
stos
mov
sub
inc
cmp
inc
xchg
sub
jnp
test
fldcw
ret
imul
add
mov
jnp
outsb
add
mov
jne
mov
push
aas
icebp
hlt
call
addr16
jmp
mov
mov
adcl
mov
bound
mov
add
push
sahf
dec
mov
sbb
mov
jne
sub
jp
jns
cmp
add
jae
add
sub
push
xor
aas
jo,pt
mov
addr16
aaa
xlat
test
decb
lea
inc
add
addl
add
xchg
dec
and
mov
inc
add
pop
pop
addb
cmp
sbb
stos
rcrl
add
addr16
jo
mov
mov
add
add
decb
cmp
xchg
aaa
cli
int3
jno
inc
add
rcrl
add
dec
js
outsl
out
pop
fwait
dec
pop
or
add
mov
popa
push
sbb
arpl
add
mov
add
nop
add
push
sbb
outsl
lea
sub
inc
dec
bound
mov
sbb
push
jae
push
shll
inc
add
push
std
rolb
aad
fs
cli
rcll
jno
or
popa
loop
mov
push
repz
mov
dec
movsb
xor
mov
push
mov
inc
lods
js
add
cwtl
pop
inc
cmp
add
mov
shll
mov
andl
mov
mov
fmull
inc
popf
fs
add
inc
add
daa
xchg
push
mov
add
push
mov
pop
jp
sbb
mov
repnz
fsubr
lods
negw
and
mov
aad
cmpsl
cli
cmc
and
mov
mov
pop
xchg
out
stc
leave
push
mov
add
jmp
push
sbb
sub
fmul
jmp
push
lret
test
je
add
jne
lea
add
jno
clc
mov
mov
iret
sub
cmp
cli
sbb
mov
movsl
ret
aas
fcmovnu
scas
fbstp
add
sbb
jmp
pushf
mov
xchg
lods
repz
add
xchg
mov
in
mov
subl
adc
stos
daa
cmp
add
mov
and
mov
addb
add
addr16
add
sub
add
add
jno
jmp
in
add
pop
aam
es
pop
lret
mov
push
add
mov
addb
add
mov
mov
xor
mov
scas
ret
jns
sti
stos
pop
lahf
test
cmp
add
outsl
dec
jne
add
add
jg
mov
add
pop
dec
xor
xchg
insl
aaa
aad
cmp
aad
add
mov
xorl
mov
shll
add
pop
movl
mov
jmp
out
dec
call
mov
jns
mov
mov
push
shll
and
add
dec
cmp
and
mov
lods
inc
movsl
pop
jg
cs
cld
mov
mov
call
aad
add
mov
dec
cld
xor
mov
add
stos
test
sub
mov
mov
pop
pop
mov
scas
pop
mov
xchg
add
rol
or
mov
add
loope
push
popf
sub
mov
out
addl
mov
add
inc
add
mov
or
lret
or
jecxz
add
inc
or
pop
adc
push
xchg
add
add
loop
mov
shll
sbb
aaa
pop
lods
xchg
push
test
add
dec
xchg
or
push
in
push
outsb
push
out
mov
add
imul
loope
sahf
ret
fiaddl
mov
mov
add
xchg
clc
or
clc
ret
xor
mov
add
add
mov
stos
xor
loope
add
add
lret
mov
add
add
stos
mov
rcll
xchg
mov
sbb
mov
add
add
add
inc
bound
mov
or
mov
sub
lds
mov
xor
ret
mov
addr16
add
mov
inc
add
dec
pushf
pop
clc
outsb
insl
push
aas
lea
and
addb
out
cmpsb
mov
xchg
dec
add
mov
adc
mov
pop
clc
test
movsl
in
dec
out
add
add
mov
icebp
inc
iret
xchg
ret
sub
mov
xchg
out
stos
mov
icebp
xor
add
repnz
out
in
cmp
add
dec
mov
test
jl
loope
xchg
add
inc
pop
mov
add
pop
movsl
pop
adc
mov
mov
dec
mov
sub
lahf
ret
jns
addb
test
dec
mov
add
inc
mov
mov
lods
or
mov
aad
fnsave
lret
cwtl
mov
xor
mov
ds
mov
or
jns
sbb
leave
mov
cmp
sub
xchg
cli
sub
mov
mov
repz
mov
aas
mov
test
jg
scas
call
call
add
sbb
xchg
les
clc
int3
mov
push
fcmovnb
cwtl
or
add
mov
mov
mov
in
imulb
rolb
cmp
mov
xchg
mov
imul
mov
xorl
mov
insb
scas
or
out
xchg
int3
stos
mov
enter
add
mov
push
add
inc
and
mov
sti
arpl
or
xor
mov
add
xchg
sahf
dec
xchg
or
pop
xor
in
insl
aad
push
and
test
add
icebp
fiadds
lcall
jne
mov
fs
inc
sbb
loopne
mov
jmp
mov
mov
dec
jecxz
movsb
iret
add
mov
and
jnp
inc
add
lea
lret
seto
mov
xor
bound
mov
mov
add
push
movsl
push
add
add
mov
in
call
and
pop
push
add
popa
movsl
call
movsb
cmc
imul
inc
inc
shrl
fdivrs
fs
mov
nop
add
mov
mov
push
add
jb
mov
xchg
mov
and
mov
add
mov
jge
pop
fmull
add
sar
pushf
rolb
mov
sub
imul
mov
xchg
add
push
gs
push
das
inc
cmc
mov
imull
subl
or
add
insl
lcall
cmpsl
mov
jb
mov
test
adc
jl
add
in
mov
xlat
repz
cmp
sti
js
es
add
mov
jae
push
xor
xchg
imul
popf
xchg
pop
jp
out
jg
lds
mov
xor
push
push
out
dec
sbb
sbb
ret
roll
cmp
add
aaa
lds
add
enter
nop
add
add
leave
rolb
cmpsl
mov
jmp
shll
jbe
xchg
add
out
jp
push
mov
mov
rolb
mov
in
mov
jnp
lods
mov
add
pop
test
rolb
jo
mov
rolb
mov
cltd
test
fs
mov
cmp
mov
xchg
add
inc
iret
jmp
lock
popf
out
out
sbb
mov
mov
xor
mov
fwait
add
sbb
add
xchg
test
add
pop
out
scas
icebp
rolb
mov
push
aaa
xchg
mov
cld
outsb
popa
push
add
add
cmovne
leave
mov
mov
scas
sbb
rolb
mov
js
stos
fcoms
lret
mul
add
push
add
dec
pop
add
push
jo
mov
jnp
repnz
and
imul
adc
inc
in
mov
in
lock
cli
xor
mov
push
xchg
add
mov
out
xchg
adc
aas
push
test
cmpl
add
test
repnz
insb
jnp
mov
lcall
sbb
push
cwtl
mov
mov
and
add
mov
dec
cmp
add
mov
inc
bound
mov
sbb
sahf
dec
fidivs
mov
mull
jbe
inc
or
lock
ret
adc
mov
pop
js
pop
add
mov
mov
popa
aad
add
xor
jg
add
inc
push
mov
outsl
jg
xor
mov
add
mov
mov
repz
pusha
add
adc
mov
jg
insl
and
ds
cmp
inc
xchg
adc
add
sahf
insl
stc
cmp
mov
mov
mov
jmp
sbb
push
std
icebp
push
add
out
arpl
add
inc
pop
cmc
mull
aaa
adc
mov
scas
inc
add
mov
test
add
mov
movl
popa
out
adc
mov
push
xor
mov
jne
stos
push
add
cmpsl
cltd
stos
fwait
test
inc
adc
add
push
pop
push
pop
mov
inc
push
add
lcall
faddl
push
lret
jmp
pusha
add
xor
mov
mov
mov
mov
shrl
std
add
iret
mov
add
mov
fs
int3
or
add
mov
push
dec
sbb
add
and
mov
add
fstps
ja
inc
add
add
ss
pop
shrl
add
lods
mov
push
add
or
mov
add
dec
sbb
add
in
and
add
push
int
dec
aad
dec
aam
rolb
add
jae
lahf
je
sub
pop
mov
mov
add
jns
lahf
jge
add
add
mov
add
dec
cmp
push
add
dec
dec
mov
sbb
in
icebp
lds
sbb
in
out
inc
sub
mov
divb
int
and
add
add
sub
and
lret
jge
push
xor
mov
jg
clc
cmp
add
daa
adc
sbb
jo
mov
jb
mov
aaa
les
add
push
push
push
out
lea
push
test
pusha
add
out
mov
fcmovnu
cltd
in
add
cmp
dec
and
mov
ret
outsl
xchg
sti
std
insb
push
jnp
add
fisubs
or
stos
and
mov
cmp
sub
xchg
lret
out
insl
outsl
add
inc
add
jb
mov
and
xchg
pop
shl
jg
out
and
call
mov
add
lahf
sub
and
mov
rolb
mov
pop
out
int3
sahf
fmulp
xor
mov
mov
bound
mov
xchg
add
add
imul
lea
mov
fs
lock
dec
mov
mov
lahf
pop
cmp
push
pop
or
pop
sub
stos
mov
scas
cmp
and
xlat
mov
mov
pop
mov
mov
out
add
insl
sbb
pop
jo
mov
mov
popa
xchg
jp
pop
adc
inc
add
in
xchg
jge
ss
sbb
pop
scas
cmp
lahf
sahf
fstpt
in
dec
ljmp
imul
push
add
mov
pop
xchg
add
mov
add
pinsrw
push
pop
lods
lock
mov
add
fildll
incl
ljmp
hlt
addb
js
or
or
push
shll
add
fisubrl
mov
dec
or
shr
push
xchg
inc
sbb
xchg
mov
insl
inc
jbe
lea
cmp
sbb
push
add
and
mov
dec
les
push
add
add
call
not
fidivl
mov
addb
out
xchg
xor
mov
add
adc
stc
aaa
jmp
fstpl
int3
mov
or
lods
cmp
sti
sub
push
add
lcall
mov
mov
inc
dec
xchg
and
mov
push
adc
add
dec
cld
sub
les
jnp
add
mov
cmc
imul
mov
push
outsb
jmp
adc
adc
mov
pop
mov
and
mov
fdivl
add
loope
add
mov
adc
mov
pusha
add
dec
cltd
aaa
jmp
inc
call
add
pop
pusha
add
add
fdivrl
pop
add
add
call
xchg
ficomps
pushf
jp
xor
mov
mov
test
add
mov
das
mov
sbb
leave
int3
xor
push
jbe
push
add
push
push
push
sub
mov
cmp
lcall
jnp
pusha
add
loope
mov
gs
das
or
pop
mov
mov
les
add
inc
rep
daa
shll
inc
add
mov
add
ret
data16
adc
aam
sbb
int3
cs
add
pop
mov
ja
add
jle
call
add
scas
insl
subl
addb
ljmp
mov
popf
xchg
call
mov
inc
add
aas
sub
daa
ficompl
sbb
adc
add
mov
push
xchg
lret
dec
stos
addr16
add
mov
mov
lcall
sub
lret
sub
aad
rolb
pop
test
loop
mov
fistps
push
push
push
sub
xchg
bound
mov
add
pop
roll
jo
mov
pop
xchg
mov
sub
nop
jo
mov
push
push
inc
add
adc
movsb
aam
cmpsl
call
xor
addr16
push
out
lahf
mov
fstps
imul
or
mov
add
mov
xchg
mov
add
mov
sub
xor
mov
std
mov
rolb
xchg
add
mov
xchg
cmp
cmp
fildl
mov
int3
int
rolb
mov
mov
mov
add
roll
jae
sub
add
clc
fstpt
add
jo
mov
push
mov
push
sbb
add
cmp
outsl
clc
lods
jl
jge
and
adc
dec
sbb
int3
and
add
mov
in
out
adc
mov
xor
jno
add
inc
jecxz
int3
push
repz
cmp
dec
jmp
add
add
pop
jecxz
inc
and
jg
add
or
and
xor
mov
mov
mov
inc
scas
mov
add
mov
add
add
rolb
mov
add
loop
mov
sub
loope
dec
mov
ds
roll
mov
stos
cmp
rolb
mov
pushf
cli
jo
mov
xchg
das
test
in
rolb
mov
xchg
and
add
cwtl
ss
es
loop
mov
add
test
add
rolb
mov
xchg
nop
add
and
mov
add
aam
rolb
mov
mov
je
negb
add
cmp
add
adc
dec
dec
inc
jge
loope
rolb
mov
mov
imul
add
sbb
mov
std
mov
add
mov
add
add
mov
add
test
mov
jp
mov
add
cmp
adc
dec
cmpsb
dec
pop
lods
cmp
mov
aas
xchg
xor
mov
or
inc
add
add
or
gs
add
adc
mov
pushf
xor
mov
add
mov
add
jl
push
push
mov
mov
mov
mov
push
dec
xchg
add
fidivrs
int
ljmp
add
addb
inc
add
inc
add
jo
mov
mov
add
sahf
or
xchg
in
add
sbb
inc
or
insl
sub
jo
mov
add
mov
add
mov
xchg
jmp
jmp
add
lods
hlt
mov
filds
test
xchg
mov
lods
out
and
cmpsl
sbb
add
mov
push
cmp
mov
sub
push
add
rcr
loope
xchg
addb
sti
loop
mov
add
mov
call
add
mov
les
je
arpl
push
rcl
icebp
ja
jb
mov
mov
xchg
movsl
test
cs
js
mov
call
xchg
leave
sbb
dec
rolb
pop
in
add
jne
aad
mov
push
pusha
add
call
inc
add
add
add
test
decl
mov
daa
jae
movsl
test
fcomi
in
in
clc
lret
rolb
mov
ds
push
jb
mov
add
jg
stc
push
lret
and
addb
movsl
xchg
ret
push
sbb
fbld
cmp
sbb
mov
cmpsl
mov
bound
mov
mov
adc
mov
inc
fiaddl
add
out
xchg
inc
jno
int
test
mov
xchg
movsb
fisubs
imul
mov
icebp
adc
push
inc
rolb
push
mov
imul
jecxz
fisttpl
adc
add
int3
roll
add
insl
xchg
lcall
dec
fcmovu
mov
mov
test
sbb
jo
mov
or
cli
jns
cmp
sbb
add
or
jne
aad
loope
add
stos
dec
insl
or
imul
or
es
add
ret
cmp
add
lds
mov
add
mov
out
int3
mov
stc
adc
into
sahf
jne
add
mov
popf
inc
push
aad
add
push
add
mov
add
jns
add
loop
mov
out
add
imul
mov
cmp
fistpl
add
add
jmp
xor
mov
sub
cmp
sbb
add
or
mov
push
rolb
mov
fnstsw
mov
popf
int3
paddb
or
add
and
mov
jmp
nop
add
mov
mov
nop
add
add
add
imul
mov
icebp
repz
jae
mov
jle
lods
cmp
inc
xor
jno
add
jno
pop
dec
daa
mov
push
mov
add
cltd
lea
fsubrp
nop
add
add
xadd
pop
pop
adc
mov
mov
test
popf
lods
jne
jmp
pop
out
dec
jnp
or
add
fdivs
dec
mov
or
cmc
sbb
mov
inc
add
push
addr16
rolb
mov
jl
test
push
add
push
add
mov
mov
inc
pusha
add
mov
push
iret
and
es
jno
add
add
ljmp
and
jge
add
pop
mov
mov
lcall
das
je
ljmp
push
ljmp
inc
loop
mov
pushf
pop
pop
fwait
iret
fstps
mov
roll
add
ficomps
sub
lods
pop
rolb
mov
and
jp
add
push
or
arpl
rolb
mov
cmp
mov
sub
js
xlat
pusha
add
adc
or
add
mov
fildl
mov
std
out
aad
rolb
mov
mov
lahf
aad
out
add
mov
inc
add
jno
inc
cld
mov
dec
ds
sub
loop
mov
es
add
faddp
rcll
lods
int
add
rolb
mov
fnsave
jns,pn
leave
fwait
mov
add
sub
push
cmpsb
addl
mov
inc
fistps
cmpl
rolb
mov
in
movsl
int3
lea
xor
mov
outsl
mov
mov
mov
mov
jb
mov
and
mov
dec
push
inc
add
mov
xchg
jno
pop
lcall
leave
jmp
add
cmp
pop
out
dec
movb
and
mov
shll
rolb
mov
xor
mov
call
lea
add
cmp
add
inc
add
pusha
add
xchg
cld
mov
pop
sbb
aaa
and
mov
mov
add
sar
or
lea
xchg
addb
jae
add
mov
add
nop
add
push
inc
pop
ja
xchg
sbb
jnp
add
sti
jmp
aam
inc
jae
xchg
aam
xchg
sahf
and
mov
dec
les
lea
insb
push
enter
fsubr
fbstp
outsl
addb
mov
xor
arpl
dec
jo
mov
add
cmp
rolb
mov
add
dec
mov
enter
add
insl
xor
xchg
xor
adc
mov
pop
add
not
add
sahf
ds
xor
mov
mov
shl
fsubs
fiadds
add
inc
add
insb
insb
and
mov
mov
mov
inc
test
repz
addb
sti
mov
insl
ds
mov
xor
add
mov
xchg
push
mov
es
rolb
xor
mov
in
arpl
mov
add
cmpsl
imul
arpl
les
push
adc
cmpsl
lods
lods
insl
push
rolb
mov
pop
arpl
jle
call
dec
test
loop
mov
test
cmp
adc
and
jne
in
pop
loope
lods
fimuls
add
mov
adc
loope
fsubr
dec
mov
push
out
fisttpll
fimull
inc
add
addb
push
in
and
push
mull
jo
mov
pop
or
mov
gs
cmc
sbb
fcmovu
insl
iret
in
pop
aas
pushf
scas
sub
xlat
adc
rolb
or
rcrl
sub
add
add
pop
ljmp
iret
ret
aam
add
imul
xor
mov
mov
leave
lea
add
mov
mov
mov
lcall
lods
aas
cmpsb
jae
fsubl
add
les
mov
dec
arpl
lret
xor
cmp
mov
iret
iret
popf
cli
ss
push
lahf
lock
xchg
rolb
mov
jmp
pop
dec
out
jge
sub
mov
sbb
into
inc
add
mov
ret
lret
add
mov
or
mov
push
push
sbb
add
add
mov
jns
push
mov
sti
subl
push
inc
addb
push
lret
mov
mov
jnp
sbb
jb
mov
jmp
add
mov
repnz
cmpsl
pusha
add
add
in
xchg
out
sbb
paddsw
inc
ds
jb
mov
fcompp
rcll
stc
lahf
inc
pop
fidivrl
inc
pushf
jg
rolb
push
dec
insb
push
add
xor
pop
movsb
pop
sub
xchg
fimull
jp
add
repnz
push
add
sbb
xor
mov
cmpl
cmp
ret
and
loop
mov
popa
ret
lret
dec
mov
add
loopne
mov
sbb
mov
pusha
add
fistpll
sbb
jmp
dec
scas
data16
add
sar
adc
addr16
pop
and
add
js
add
xchg
sub
addb
push
add
cmp
add
dec
out
ljmp
test
or
jae
add
pusha
add
imul
jns
and
mov
lss
mov
mov
mov
repz
mov
pop
rolb
loop
mov
add
loope
xor
sub
into
mov
mov
fbstp
shll
mov
dec
pop
inc
lret
inc
lock
push
pop
adc
mov
addr16
pop
or
jle
sbb
cmp
sub
int
dec
sub
jge,pn
sub
call
bswap
fs
fwait
aam
js
hlt
mov
fmull
add
mov
adc
add
and
add
add
lret
or
push
add
cld
insl
lahf
mov
add
mov
in
out
pop
lret
iret
jge
xchg
add
out
test
jg
dec
lds
mov
mov
adc
mov
scas
addb
mov
int3
ja
fisttps
jae
rolb
test
mov
push
push
negb
sbb
mov
push
jmp
add
jns
popf
inc
bound
mov
xchg
add
add
add
mov
cmc
pop
pop
inc
add
js
loope
or
push
add
or
add
es
adc
lds
sti
xchg
xchg
mov
cmpsl
in
daa
inc
dec
daa
lret
mov
incb
add
mov
add
sbb
add
fwait
enter
pop
push
loope
mov
add
mov
jne
cmp
add
mov
mov
cmpsb
or
ss
or
xchg
stos
addb
popa
pop
icebp
sahf
sub
pop
repnz
loopne
mov
jmp
mov
std
xchg
call
dec
lea
xchg
nop
add
mov
cmpsb
rolb
mov
dec
add
mov
mov
jle
push
call
mov
fdivs
xchg
inc
and
data16
std
push
sub
ss
rolb
mov
mov
pop
fisubl
add
lcall
add
push
cmp
cmp
les
dec
mov
aad
sub
and
mov
push
add
hlt
insb
test
jae
add
mov
mov
or
push
and
and
cmp
xchg
ja
add
add
mov
add
sub
add
adc
mov
repz
ja
add
xor
mov
add
decb
cwtl
inc
cmp
push
mov
lods
clc
mov
out
dec
out
sub
xor
add
or
aas
xchg
sarl
xchg
push
mov
add
mov
jl
sbb
popa
aam
mov
sbb
mov
out
mov
fs
xor
mov
mov
mov
mov
pusha
add
adc
mov
jg
add
mov
jmp
cmp
mov
sub
rolb
mov
push
loop
mov
iret
out
push
mov
inc
aam
inc
dec
mov
dec
aas
movsl
mov
add
add
jl
mov
lods
dec
frstor
add
out
stos
inc
mov
in
inc
movsb
and
stos
or
inc
add
jle
jb
mov
jne
mov
inc
pop
test
fistps
or
out
add
ficompl
add
sub
addb
mov
xchg
add
lea
mov
xchg
jmp
enter
and
mov
add
add
sub
mov
mov
ficompl
dec
pop
bound
mov
add
pop
pushf
inc
or
iret
call
dec
out
push
jge
rolb
data16
add
mov
out
and
mov
add
xor
mov
jge
mov
mov
mov
inc
adc
arpl
out
xchg
icebp
and
add
lret
dec
push
lea
add
call
mov
xchg
pop
dec
push
push
and
stos
scas
bound
mov
or
push
insb
jns
dec
out
mul
add
fs
and
mov
call
mov
xchg
jb
mov
mov
mov
cmp
fadd
add
mov
fs
xlat
je
dec
fwait
insb
jmp
pop
call
mov
add
add
outsb
in
add
mov
cmpsl
mov
xchg
movsb
cmp
add
jne
stos
cmp
add
add
pop
jbe
add
scas
dec
xor
mov
mov
testl
add
add
mov
mov
mov
push
fs
add
or
call
stc
cmc
mov
loopne
mov
adc
leave
push
mov
inc
ja
sub
inc
push
xor
mov
and
scas
cmp
inc
add
sbb
inc
loop
mov
or
add
lret
inc
pushl
add
sbb
pop
or
add
cs
cmpsb
jmp
mov
push
jne
or
mov
jecxz
mov
add
test
imul
stc
test
add
jl
test
add
mov
mov
push
pop
dec
mov
loope
in
jno
es
fisubs
inc
roll
mov
rolb
mov
sbb
xor
mov
repnz
mov
xchg
and
mov
xorl
jp
call
mov
lea
int
or
insb
ja
add
outsl
pop
jne
pushf
sub
cld
add
mov
jl
add
push
and
mov
cmp
pop
lret
inc
dec
imul
addb
ret
lret
mov
add
adc
mov
add
out
test
inc
and
mov
xchg
int3
das
sub
inc
rolb
mov
cwtl
test
cmp
add
mov
mov
pop
sbb
xchg
pop
pop
insl
aaa
es
es
icebp
jae
push
add
mov
jno
je
jle
mov
xchg
mov
test
cld
rolb
mov
jno
or
mov
mov
inc
dec
rolb
mov
xchg
jne
stos
pop
loope
mov
popa
xchg
mov
fwait
xchg
add
mov
add
add
mov
xchg
add
in
add
movsl
push
xchg
out
dec
pop
add
add
jno
cs
jae
gs
repnz
add
pushf
mov
jmp
xchg
add
mov
add
lds
mulb
subl
insl
ret
cld
sbb
lock
outsb
inc
out
jb
mov
mov
add
filds
jns
int3
add
addb
addb
pop
mov
lock
mov
add
push
popf
pop
rolb
mov
outsl
cmp
ror
repnz
fldenv
sti
add
mov
aam
add
cmpsb
cmp
add
push
jmp
sahf
sub
insb
push
push
xchg
add
add
add
mov
add
roll
add
xchg
add
mov
xchg
add
push
int3
pop
in
cld
addr16
gs
out
pop
or
cmpsl
cmp
fdiv
xchg
add
add
lods
pop
pop
push
in
pop
add
das
js
pop
sahf
jae
add
mov
mov
mov
jp
dec
dec
mov
lods
inc
lods
hlt
push
jg
jb
mov
jne
pusha
add
pop
arpl
in
mov
jo
mov
aas
aas
pushl
dec
cmp
fstps
jb
mov
add
mov
xor
mov
je
add
jle
fwait
iret
testb
add
xlat
dec
or
inc
call
add
sti
cs
jo
mov
dec
pop
rolb
int3
cli
sub
add
in
add
xchg
nop
add
fcmovnb
add
or
mov
mov
jp
add
icebp
push
pop
out
lods
fnstsw
gs
std
add
xchg
or
movsb
pusha
add
mov
loopne
mov
shll
mov
nop
add
or
sahf
std
xor
xchg
test
js
cmp
add
cmp
mov
rolb
mov
sbb
mov
mov
mov
push
xor
sub
jp
cli
pop
sbb
lcall
xchg
add
add
into
insb
adc
mov
add
mov
mov
fisubrs
mov
mov
xchg
mov
mov
mov
add
jns
out
xor
dec
addb
push
imul
adc
mov
add
mov
paddq
push
sbb
dec
inc
xor
mov
sub
add
mov
jl
adc
mov
jbe
xor
mov
mov
or
rolb
cmp
mov
add
jnp
inc
int3
rolb
mov
cltd
int3
fimull
out
add
cmp
dec
mov
test
loopne
mov
out
mov
and
or
xlat
cmc
cmp
push
push
pop
xchg
jp
lds
insl
jge
movsl
dec
sti
repnz
lcall
push
add
lods
icebp
into
addb
clc
cmp
add
fisttps
mov
add
insl
mov
mov
mov
in
pop
jecxz
ljmp
pop
mov
mov
je
pop
outsb
adc
sahf
hlt
inc
or
xor
mov
rolb
les
jns
ret
xor
addb
mov
out
or
xchg
add
lea
popa
clc
push
data16
pop
popf
je
or
jnp
shrl
pop
add
dec
dec
mov
add
push
add
mov
add
rolb
mov
bound
mov
addb
dec
push
adc
icebp
testl
iret
repnz
jbe
stos
adc
cmp
in
pop
rcl
mov
fisttps
addb
or
mov
add
mov
xchg
add
mov
add
call
jle
or
sbb
pop
test
mov
aas
add
xor
outsl
xchg
xlat
dec
femms
insl
cmp
loopne
mov
pop
and
xor
add
add
mov
and
mov
mov
leave
mov
mov
add
push
add
sahf
mov
out
ret
xchg
adc
aad
gs
int
jns
dec
lods
push
mov
sub
roll
popf
cmpsl
rolb
mov
stos
mov
fistl
add
jae
aas
arpl
into
sahf
fmull
xor
mov
add
add
jmp
hlt
jmp
push
lods
jp
cmp
add
sub
int
fnstsw
mov
pop
sti
mov
or
les
aaa
mov
iret
mov
addr16
cmp
mov
push
xor
mov
sbb
imul
aad
jns
loopne
mov
scas
cmp
mov
mov
mov
jae
lds
scas
jb
mov
dec
sbb
sub
adc
pushf
repz
mov
sbb
mov
mov
mov
mov
mov
mov
enter
cs
cwtl
mov
sub
push
xchg
add
mov
jbe
inc
sbb
mov
fidivs
mov
adc
add
pusha
add
push
sahf
fwait
and
ret
xor
pop
scas
rolb
sti
xor
bound
mov
rolb
mov
cld
repz
cmpsl
and
jmp
xor
mov
or
xchg
stos
mov
mov
add
aad
addb
mov
add
repnz
cmp
js
lea
mov
cmc
add
ds
sub
in
mov
mov
jp
es
mov
push
dec
jmp
test
add
xor
fcomps
scas
xor
add
and
mov
nop
add
dec
or
mov
mov
xor
mov
add
push
jecxz
in
in
lret
or
inc
movsb
jge
adc
gs
bound
mov
xchg
loope
aaa
mov
add
add
ret
aas
lods
mov
mov
enter
push
hlt
push
std
xchg
add
popl
and
cmp
or
add
pop
std
nop
add
mov
fisubrl
inc
pushf
xor
pop
mov
mov
aas
xor
mov
lret
xor
bswap
xlat
cmpsb
orl
xchg
mov
adc
in
jecxz
pop
add
or
add
call
loope
cli
stos
pop
in
add
stos
ds
mov
add
cmp
add
cmp
jp
mov
jg
mov
imul
popf
mov
mov
outsl
sub
add
add
mov
jp
roll
add
ja
jno,pt
sub
jne
xor
mov
add
pop
push
fcompl
in
jo
mov
lods
addb
js
mov
and
lcall
bound
mov
insl
mov
add
mov
add
movsl
sbb
push
mov
push
pop
mov
sub
or
mov
pop
add
mov
in
adc
mov
add
in
sub
xlat
clflush
mov
mov
inc
sar
mov
mov
repz
push
ffreep
rolb
mov
xor
mov
outsl
aad
insl
push
adcl
pusha
add
cmp
add
adc
and
mov
addb
arpl
fwait
add
mov
popf
push
in
pop
jmp
pop
scas
test
jl
adc
xchg
jmp
adc
mov
mov
lock
mov
insl
jmp
es
scas
es
fcoms
dec
mov
dec
pop
sbb
pop
sub
pop
rcr
pop
pop
dec
dec
mov
rolb
mov
sbb
add
add
xchg
movsl
adc
mov
jbe
out
cmp
jg
xchg
int
fisttpl
xor
jo
mov
cs
sbb
addb
jb
mov
cmp
ljmp
jne
lods
add
mov
enter
adc
dec
cmc
imul
sbb
mov
add
mov
out
inc
pop
inc
sub
mov
addb
xor
fbld
mov
cltd
rolb
mov
xor
jae
add
mov
inc
push
add
gs
jns
repz
and
mov
mov
add
and
jnp
out
addb
out
add
pop
pop
enter
mov
jecxz
push
addb
pop
xor
mov
add
mov
add
imul
addb
dec
cmp
add
mov
cmp
aas
push
rolb
fs
mov
dec
pop
and
mov
add
cs
pmullw
sub
cs
add
push
mov
enter
rolb
arpl
jns
cmp
test
xor
xchg
xchg
sub
jmp
add
cmpsb
mov
je
dec
or
xor
mov
sub
fdivr
in
adc
mov
cmpsb
std
sti
dec
adc
push
hlt
clc
out
pushf
xchg
stc
nop
add
add
fiaddl
lods
add
mov
into
jo
mov
insb
hlt
or
sbb
fldt
ljmp
movsl
fcomps
aaa
lds
sub
inc
add
mov
inc
push
add
sbb
jb
mov
int3
pop
push
clc
add
mov
lret
jbe
cmpsw
lods
jb
mov
fsts
sub
pusha
add
les
or
cmp
inc
xchg
in
negl
lods
negl
inc
in
xlat
push
fprem
xchg
add
mov
mov
negb
imul
idivl
rcll
or
les
mov
mov
addr16
xor
push
lods
movsl
outsl
dec
xchg
movsl
in
dec
jne
mov
xchg
inc
add
and
add
sub
pop
mov
jmp
aaa
inc
xchg
jmp
sbb
aaa
aad
or
mov
sbb
cwtl
inc
add
imul
dec
fcomp
sti
cmp
popl
inc
fwait
sbb
aam
in
scas
jecxz
add
das
xor
inc
rolb
pop
xor
mov
lods
in
add
push
add
mov
icebp
movsb
and
lds
pop
inc
jno
in
out
inc
insl
xlat
outsb
push
or
lahf
addb
xor
stc
mov
mov
popf
in
pushf
push
jge
lahf
pop
push
pop
xlat
dec
mov
and
and
or
add
and
cmp
fs
add
add
mov
add
test
and
mov
cmp
loope
fnsave
add
mov
mov
insl
rolb
mov
loope
int
add
or
push
loop
mov
jecxz
repz
hlt
stc
fcomps
mov
scas
mov
ret
lahf
aam
mov
inc
xchg
xor
jmp
mov
add
add
push
and
inc
xchg
xor
add
mov
push
popa
fcoms
hlt
fs
lds
add
mov
sahf
inc
ret
pop
movsb
push
mov
insl
rolb
loopne
mov
mov
mov
cmp
notl
xor
mov
imul
cmp
jns
xorl
add
shl
cmp
in
call
popf
clc
cmpsl
pop
jb
mov
jnp
pop
inc
add
mov
xchg
or
sbb
mov
adc
les
add
je
mov
mov
inc
lock
mov
add
or
out
out
jbe
sub
xchg
lcall
dec
cmc
lods
test
add
loop
mov
add
mov
mov
aas
roll
pop
add
filds
pop
or
fsubl
div
add
or
lds
rolb
mov
add
add
incl
add
ret
inc
add
dec
dec
push
cs
dec
neg
inc
or
mov
scas
sub
out
repz
dec
push
repnz
jb
mov
or
adcl
insl
and
sub
inc
pop
adc
adc
cmc
bound
mov
sub
cmp
xor
int3
enter
lods
test
out
dec
push
xchg
ret
cmp
add
mov
dec
roll
add
int
sbbl
push
dec
sbb
in
cld
inc
mov
test
mov
iret
aam
or
pop
xor
int3
in
mov
js
and
pop
incl
add
add
add
rorl
xor
add
cmp
cmp
add
sbb
add
add
mov
outsl
or
cmp
add
mov
insl
icebp
lods
sbb
or
jmp
mov
jmp
add
add
sub
add
add
in
sbb
xor
mov
daa
jg
add
fiaddl
add
ljmp
mov
scas
add
ljmp
addb
sbb
lcall
mov
xorl
sbb
mov
mov
out
or
sarl
movsb
cli
scas
sbb
out
repnz
xchg
fwait
ret
fdivr
and
mov
add
inc
push
sbb
test
mov
mov
dec
lret
outsl
bound
mov
inc
or
xor
mov
mov
test
and
mov
dec
mov
mov
add
mov
add
mov
adc
orl
add
mov
sbb
mov
mov
jo
mov
add
sahf
clc
push
mov
cltd
daa
movsb
dec
jbe
dec
in
dec
pop
aad
add
dec
imulb
mov
jge
ficomps
rolb
mov
sub
add
jnp
sub
and
mov
xchg
add
iret
lods
adc
mov
and
rolb
mov
rolb
mov
mov
add
lods
rorl
in
lods
sahf
pop
in
add
cmp
fdivs
sahf
shld
imul
lret
clc
repnz
pop
addb
int3
test
sbb
add
out
jno
nop
add
aad
add
aaa
sub
aad
dec
sahf
imul
mov
repz
add
mov
cltd
sub
loope
add
jno
in
mov
jge
mov
out
push
test
jb
mov
movsb
xchg
add
push
sbb
orl
mov
cli
call
pop
rolb
mov
iret
xorl
add
aad
adc
add
push
cwtl
sub
cmp
pop
test
cwtl
ss
lahf
rcll
cli
xchg
add
mov
push
jg
aas
and
fcoml
mov
add
mov
mov
les
xchg
push
cli
movsl
sahf
pop
mov
xchg
mov
andl
mov
icebp
adc
hlt
std
fcoms
jo
mov
mov
jae
add
jne
fldcw
gs
jne
enter
mov
sbb
add
into
pop
cmpsl
sub
sbb
xchg
ss
add
pop
lock
mov
xor
mov
or
lock
cmc
sbb
les
add
cmp
mov
sti
arpl
js
insl
movsl
fbstp
or
mov
mov
or
mov
fisubrs
sbb
daa
loope
or
mov
cwtl
call
sbb
std
lcall
adc
mov
cmp
adc
popf
pop
leave
inc
push
mov
mov
push
jo
mov
push
add
add
adc
rcrl
fbstp
ret
out
mov
mov
push
push
gs
pushl
mov
lods
stos
lods
sbb
add
ret
sti
cld
mov
mov
imul
xor
mov
and
mov
mov
push
add
add
lds
lahf
clc
lret
je
pop
dec
cmp
adc
mov
test
jae
pop
inc
aad
dec
hlt
popf
call
dec
out
fwait
adc
push
push
addb
or
out
mov
add
pushf
inc
cmp
repz
add
jl
imul
cmpsl
fs
sbb
add
adc
pop
aam
add
mov
les
popa
je
or
or
inc
inc
add
lods
jecxz
fnstsw
shrl
or
test
sti
test
movsb
inc
pop
mov
cmp
mov
repnz
inc
dec
das
mov
mov
roll
ret
push
es
mov
inc
loope
xchg
sbb
add
vsubpd
xor
add
mov
mov
mov
or
aad
mov
into
loopne
mov
cmp
rolb
mov
sbb
rolb
mov
hlt
stos
pop
adc
enter
xor
push
add
jle
cmp
test
mov
movsb
adc
add
lea
in
add
dec
xchg
add
xor
mov
mov
lahf
jg
xor
cs
gs
cmc
je
popa
rolb
mov
in
fisttpl
shll
addb
mov
mov
mov
add
test
mov
mov
cmp
test
rolb
mov
cmp
add
xlat
daa
pop
popf
jle
xor
mov
dec
rolb
mov
mov
enter
bound
mov
xchg
sbb
jnp
cmp
cmpsl
pop
rolb
pop
cltd
mov
rolb
mov
test
pop
mov
sub
mov
mov
add
mov
scas
stos
jmp
sub
call
mov
ljmp
dec
fisubrs
aas
jns
dec
movsb
adc
divl
add
add
es
cli
push
mov
aad
jmp
jae
dec
movsl
mov
fsubrs
stos
push
test
cmp
movsb
mov
bound
mov
in
dec
in
pop
fdivl
cmpl
loop
mov
les
add
mov
add
add
dec
bound
mov
int3
imul
cwtl
dec
fsts
scas
out
or
shll
movsl
cltd
lcall
fsubrs
mov
fsub
imul
mov
popf
rolb
mov
xchg
dec
movsb
mov
cmp
adc
mov
mov
shr
addr16
popf
jbe
sub
pop
out
test
cmp
sti
rcrl
or
movsb
ss
sti
fidivl
outsb
test
jge
xor
mov
add
xor
mov
ret
shll
scas
xchg
xchg
add
fcompl
or
dec
push
push
xchg
add
cmpsl
pushf
adc
dec
sub
adc
pop
js
sbb
inc
xchg
add
mov
and
mov
scas
sbb
imul
pushf
jp
mov
fldenv
and
mov
xor
add
mov
cltd
aam
xlat
jnp
data16
sahf
xor
mov
test
dec
dec
sahf
nop
add
add
and
mov
add
std
mov
sbb
mov
fnstsw
sbb
add
cmpsb
xchg
mov
sub
add
adc
add
xchg
add
into
or
add
xchg
add
push
pusha
add
add
mov
add
ds
cmc
add
or
dec
xor
add
stc
jmp
movsb
ret
sbb
or
lret
jmp
sbb
pop
xor
mov
jp
insb
stos
sbb
out
adc
test
mov
mov
ljmp
fdivl
sbb
mov
mov
ret
mull
and
mov
insb
inc
add
jns
inc
xor
and
add
popf
inc
add
les
mov
pop
sahf
mov
add
push
add
jg
sbb
iret
mov
mov
and
push
adc
add
jno
jle
sub
xor
dec
test
loop
mov
jns
or
pop
into
fwait
xchg
xchg
jl
push
imul
inc
add
push
test
sahf
jb
mov
enter
sbb
jp
je
add
mov
lock
clc
jns
aaa
sub
xor
jl
fcoms
add
imul
push
mov
add
add
add
cmp
mov
push
outsl
dec
xlat
rolb
mov
mov
xchg
add
mov
add
add
mov
sbb
je
bound
mov
sub
mov
cmp
imul
add
jno
mov
pop
inc
jge
scas
call
and
sbb
add
add
mov
cmp
lcall
outsb
xor
push
push
mov
mov
outsl
sbb
inc
add
stc
testl
adc
test
outsl
xchg
mov
stos
mov
mov
es
lcall
loopne
mov
mov
jb
mov
inc
add
xchg
add
mov
sbb
mov
std
jg
popf
out
in
adc
mov
add
add
and
test
jno
pop
cwtl
shl
mov
pop
mov
int
lret
mov
mov
mov
mov
mov
xchg
call
lcall
dec
outsl
sub
mov
add
insb
rolb
mov
fdivrp
sbb
dec
iret
mov
add
movsb
adc
cmp
pop
sub
add
mov
popf
mov
dec
mov
dec
test
jle
jg
mov
push
outsb
imul
sahf
pop
in
stos
mov
mov
mov
add
mov
add
jae
test
pop
pop
mov
cmc
popa
pop
out
cmp
mov
mov
pop
mov
cmp
arpl
add
dec
add
lock
cli
xor
loopne
mov
and
jle
pop
push
sub
xor
je
xchg
jle
sbb
adc
pop
push
inc
add
decl
sub
dec
leave
xchg
add
inc
mov
ds
addr16
cs
daa
xchg
test
mov
push
cmp
sub
push
mov
fwait
or
add
add
sub
mov
enter
add
push
xchg
add
sbb
jnp
adc
dec
test
sub
xchg
mov
mov
cmp
aaa
pop
cwtl
mov
jno
fcomp
sub
mov
mov
mov
aas
xchg
dec
jecxz
adc
mov
add
dec
repnz
cli
lea
and
mov
dec
push
mov
es
mov
test
imulb
add
adc
ret
jg
in
fwait
cmpl
xor
mov
jo
mov
jp
add
outsb
arpl
jb
mov
add
test
loope
inc
gs
pop
mov
sub
mov
scas
repz
add
lds
lods
sub
out
repnz
mov
sub
fisttpll
lret
orl
sub
jno
sbb
int3
loopne
mov
xchg
add
or
iret
jbe
dec
push
xchg
pop
or
add
or
out
repnz
cwtl
in
loop
mov
bound
mov
add
add
pop
sbb
mov
add
ljmp
jp
fcmovb
add
add
fildll
loope
add
rcrl
mov
pop
lahf
adc
je
push
std
xchg
shrl
out
test
cmp
or
nop
add
sub
sar
xchg
outsl
out
bound
mov
jae
jle
and
mov
add
add
mov
inc
test
frstor
pop
inc
add
fcomps
xor
mov
repnz
jp
and
inc
lock
add
adc
mov
jp
inc
mov
jle
insl
mov
in
fnsave
push
daa
jbe
jle
cli
std
adc
and
mov
or
inc
pop
movsb
decl
mov
cli
filds
stos
inc
aam
and
mov
mov
mov
stos
pop
loope
add
sbb
mov
into
iret
daa
ds
mov
cmp
insl
mov
add
add
mov
push
add
mov
lret
pop
push
mov
mov
lds
bound
mov
add
stos
or
add
bound
mov
testl
mov
cmpsl
les
movsl
lahf
or
daa
mov
add
mov
pop
rolb
dec
push
loop
mov
mov
inc
add
mov
sub
mov
xchg
adc
mov
dec
push
add
adc
add
add
mov
mov
lea
jo
mov
loop
mov
mov
loop
mov
pop
mov
xor
xor
mov
pop
push
daa
sbb
and
mov
add
gs
and
pop
mov
or
mov
mov
pop
and
mov
or
push
fwait
cli
cmp
mov
add
add
lea
add
add
pop
in
hlt
jnp
jge
xorl
add
sub
iret
xor
mov
mov
rolb
test
push
jno
mov
nop
add
test
insb
xchg
xchg
clc
pop
xchg
push
add
mov
outsb
add
sub
add
mov
lods
xor
xchg
xlat
jbe
cld
jnp
mov
add
mov
xor
mov
dec
out
xor
rcrl
mov
inc
leave
pop
pop
mov
xchg
hlt
jl
jo
mov
movsl
mov
xor
mov
stc
in
aam
sbb
add
mov
mov
pop
xchg
push
sbb
push
iret
sub
adc
jb
mov
pop
cmp
rolb
push
push
add
lds
inc
dec
das
jmp
cs
add
mov
nop
add
add
adc
mov
mov
push
cli
mov
call
daa
pop
push
add
add
inc
mov
mov
movsl
pusha
add
add
mov
mov
jg
rolb
mov
daa
jno
lds
push
add
jbe
mov
add
mov
xchg
add
out
enter
pushl
dec
lret
xchg
ret
cmc
and
and
out
xchg
add
loope
dec
sar
xchg
mov
add
iret
rolb
xor
xchg
adc
mov
out
lret
xor
mov
add
mov
bound
mov
cmpl
mov
stos
push
add
das
sbb
nop
add
push
stos
lods
je
roll
sub
pushf
inc
push
xchg
js
and
mov
push
inc
add
fsts
mov
jp
mov
repz
add
cmp
add
mov
into
xor
jge
add
mov
adc
pop
lock
add
add
aas
fcoms
enter
mov
jmp
es
out
inc
add
rolb
mov
and
mov
fsts
add
insl
dec
sbb
add
mov
mov
add
js
fists
xchg
add
add
std
fisubrl
inc
add
mov
mov
push
mov
push
icebp
int
xchg
mov
mov
dec
sbb
mov
rcl
mov
imul
data16
adc
inc
add
ljmp
lret
mov
popa
sbb
in
fists
ss
cmp
mov
arpl
mov
mov
jne
inc
adc
jns
cmp
add
mov
cmpsb
addb
sbb
add
push
and
pop
and
mov
fld
add
add
xchg
add
fisubrs
int3
outsl
sbb
add
mov
ss
mov
mov
mov
dec
xchg
add
mov
inc
icebp
pop
push
notb
add
pop
mov
lahf
pop
mov
dec
movsl
cmp
add
mov
push
ds
inc
xchg
add
xor
mov
xor
mov
ja
lret
cmp
out
xchg
pop
in
cli
outsb
xchg
add
add
mov
mov
mov
arpl
add
push
iret
mov
cmc
fistpl
dec
dec
lret
push
xchg
add
mov
mov
sbb
cmp
jns
add
push
int
das
xchg
dec
mov
lahf
lret
lods
into
xor
adc
push
push
push
add
and
mov
aam
ljmp
inc
add
jne
hlt
cmp
mov
mov
out
mov
add
add
add
repz
xlat
mov
xchg
and
sbb
and
mov
data16
mov
add
add
push
call
ret
and
mov
pop
rolb
dec
lahf
pop
add
mov
add
data16
sbb
mov
lock
mov
mov
ffree
decb
add
cmc
ds
ss
jbe
pop
mov
into
stos
ficompl
test
iret
insb
push
and
outsl
mov
adc
add
aad
xchg
pop
testl
push
push
push
stos
out
out
xchg
jno
cli
imul
add
pop
sub
push
ficompl
push
add
jno
sbb
add
push
add
and
add
xor
lds
mov
mov
sub
cmp
ret
hlt
sbb
mov
mov
andl
in
nop
add
fistpll
sub
subl
arpl
and
mov
jns
xor
sbb
loope
decl
add
cli
fwait
lahf
pop
jecxz
sbb
push
addb
test
mov
add
mov
imulb
fnstcw
mov
xor
inc
cmp
jge
add
mov
adc
add
xor
mov
cmc
jb
mov
add
push
mov
lods
mov
or
push
ffreep
mov
les
xchg
ljmp
mov
xor
mov
push
js
loopne
mov
movups
mov
adc
mov
push
add
push
add
add
sbb
decb
add
xchg
add
mov
jecxz
add
lods
cmp
aad
or
mov
lret
and
sbb
scas
in
add
out
ficoms
jae
sahf
test
push
int
int
adc
sbb
dec
cs
xor
mov
lods
test
add
mov
mov
add
mov
es
and
mov
mov
mov
jns
dec
mov
popf
aas
cltd
icebp
inc
and
mov
mov
mov
mov
sbb
outsl
fisttpl
jb
mov
mov
cld
jns
inc
add
xor
mov
dec
mov
add
inc
add
mov
xor
lods
mov
sub
jmp
sbb
mov
in
sbb
xchg
pop
or
mov
add
movsl
ss
add
cmp
adc
mov
jle
or
add
mov
fs
cwtl
fsubrl
xchg
add
mov
arpl
cwtl
out
sbb
popa
hlt
fsubrl
fdivl
jge
or
cltd
ss
cmpsb
inc
inc
add
popf
cld
mov
fisubrl
dec
cmpsb
cs
add
xor
add
add
pop
std
mov
dec
clc
out
push
inc
push
cmp
rcll
repz
fwait
cmpsb
jo
mov
test
pop
jmp
xchg
jmp
mov
mov
cmp
rolb
mov
mov
fwait
adc
mov
cwtl
jge
dec
fwait
sbb
mov
jg
sub
fidivl
loop
mov
pusha
add
add
es
lcall
pop
mov
cli
push
insl
push
add
add
aas
fidivrl
add
out
jecxz
add
int
xchg
add
pushl
add
int3
mov
ja
lods
inc
js
fsts
mov
or
cmpsb
inc
mov
stos
scas
lret
sbb
mov
xor
add
add
lret
pop
mov
jecxz
loope
or
push
add
adc
mov
les
sbb
mov
pusha
add
sub
sub
call
cvtps2pd
mov
mov
pop
mov
cli
imul
sti
js
out
mov
push
cs
add
add
add
push
or
add
movsb
push
sub
inc
sub
sbb
mov
mov
cmp
add
mov
xchg
mov
fwait
ret
in
lock
popf
fnstenv
add
mov
ja
fldenv
cmp
xchg
inc
xchg
shrl
add
int3
stos
cwtl
jno
add
daa
icebp
mov
scas
cmpsl
aas
jbe
sbb
out
add
rolb
mov
popf
cld
insb
lods
hlt
movsb
cmpsb
jmp
mov
pop
ss
add
dec
mov
mov
push
lods
add
roll
mov
push
xor
loop
mov
pusha
add
flds
int3
int
es
xor
movsb
and
mov
dec
lds
sbb
add
inc
bound
mov
ficomps
mov
fsubrs
jno
loop
mov
add
mov
cltd
and
mov
cs
movsb
dec
add
aaa
int3
mov
mov
dec
xchg
add
add
cwtl
lods
push
inc
add
mov
icebp
inc
add
out
dec
cwtl
pop
shll
out
iret
pop
test
stc
mov
fisttpl
xchg
lahf
add
mov
mov
mov
dec
and
add
fisubrl
ss
add
roll
mov
xor
push
add
push
rolb
mov
pop
cmpsb
aad
sbb
lock
int3
jmp
jmp
insl
scas
mov
cmp
jecxz
adc
dec
mov
mov
les
ljmp
je
jns
add
add
mov
out
jae
mov
cmpsl
nop
add
add
test
sahf
or
mov
add
daa
cltd
dec
addb
add
ljmp
mov
fsubl
iret
aaa
xorl
inc
sub
nop
add
and
add
mov
add
mov
xchg
add
add
data16
fildll
add
mov
pushf
pop
push
cmpsl
lea
cmp
aad
add
inc
out
mov
clc
xor
mov
xor
ja
pop
ror
xchg
xor
lods
mov
add
mov
mov
add
js
pop
mov
lds
mov
fwait
mov
sub
ffreep
sub
add
inc
add
dec
and
mov
pop
sbb
clc
push
test
sti
inc
je
sub
mov
mov
jecxz
sbb
add
int3
mov
mov
pop
pop
mov
add
popl
or
lret
and
cwtl
dec
mov
in
add
aas
das
out
cld
loop
mov
push
mov
imul
test
add
add
cmp
out
add
cmp
es
add
inc
mov
pop
pop
sbb
out
aad
je
xchg
stc
xchg
addr16
jp
add
enter
lods
inc
push
cmp
fdivp
xor
outsl
fwait
mov
mov
hlt
xor
mov
mov
add
sbb
jnp
addb
into
jns
roll
jl
mov
leave
scas
xchg
xor
mov
les
mov
out
pop
dec
sti
rolb
mov
leave
cmp
sub
add
movsb
sti
fcmovu
jg
add
jo
mov
sbb
sub
dec
int
bound
mov
mov
lea
adc
push
lret
pop
inc
add
aad
jl
adc
sbb
cltd
in
lods
pop
xor
mov
mov
add
xor
xchg
in
add
in
iret
jmp
mov
sub
cmp
add
mov
add
push
ret
dec
add
mov
lods
aas
fisttpl
fcoms
add
add
mov
mov
sbb
addb
jp
pop
pop
push
pop
stos
aas
sub
sub
movsb
xchg
sbb
inc
add
mov
mov
dec
add
daa
pop
push
add
mov
mov
and
mov
xchg
lds
push
repnz
mov
jecxz
add
mov
add
dec
xchg
je
jecxz
push
add
mov
mov
mov
mov
add
out
mov
fwait
les
fs
jg
enter
mov
mov
add
and
sub
push
nop
add
push
std
in
mov
adc
aas
adc
mov
cmp
vpaddsw
mov
xchg
push
addr16
xchg
lods
popf
aad
xor
cwtl
push
or
add
aam
jo
mov
add
les
mov
xor
cs
add
mov
bound
mov
dec
mov
stos
or
lahf
nopl
andl
imul
cmp
jge
dec
fiaddl
sub
adc
cmpsb
sub
add
mov
sub
rorl
test
call
cmp
mov
mov
pop
addb
mov
cmp
mov
sti
inc
out
inc
add
rolb
add
mov
pushf
cmc
sahf
arpl
push
movsb
clc
stos
mov
pop
and
lret
add
pushf
and
mov
inc
frstor
add
ss
lock
int
je
lahf
sub
or
mov
dec
lods
stos
adc
roll
lods
push
add
cmpsl
rolb
mov
stc
les
add
add
lea
rolb
mov
push
imul
mov
push
lds
mov
add
add
jae
xlat
icebp
cmp
loop
mov
or
xchg
ljmp
mov
in
mov
mov
add
and
mov
add
outsl
stc
jnp
add
mov
cmpsb
imul
pop
pop
push
and
add
dec
fs
adc
dec
cltd
mov
xor
mov
adc
add
lahf
lods
lds
shll
add
sbb
data16
mov
adc
jp
add
add
lahf
mov
or
addr16
mov
cmp
cmpsl
test
lea
mov
sbb
mov
mov
pusha
add
rolb
mov
jno
inc
add
addb
sbb
xlat
pop
lods
jl
sub
add
jnp
add
sbb
add
popl
add
in
add
mov
mov
push
or
outsb
clc
mov
dec
push
loop
mov
mov
inc
add
icebp
jb
mov
or
mov
testl
in
mov
mov
addr16
sbb
outsl
sub
adc
outsl
mov
mov
adc
and
mov
mov
popa
mov
add
lahf
dec
repnz
mov
mov
xor
xor
or
add
rolb
mov
addr16
jp
add
adc
mov
push
cmp
mov
add
jb
mov
jo
mov
mov
add
add
out
in
and
mov
das
lea
and
pop
lods
ret
fiaddl
mov
inc
add
mov
mov
or
int3
inc
dec
and
in
leave
lea
mov
lcall
sub
push
call
test
adc
push
pop
push
add
cmc
std
lock
je
xlat
test
sbb
js
add
push
cltd
loop
mov
pusha
add
pop
cmp
lods
cltd
jle
aam
adc
ljmp
mov
add
popa
stos
cmp
add
ret
mov
mov
cmp
hlt
xlat
sarl
and
push
push
sub
out
insb
lock
sub
mov
xor
mov
add
fcomi
cs
add
sub
pop
jne
dec
xlat
dec
test
push
mov
pop
ljmp
or
add
sub
loop
mov
pop
icebp
int3
test
push
ljmp
add
lods
xchg
add
mov
add
cmp
mov
mov
incb
add
in
fstpl
xchg
add
fdivrs
out
sar
out
adc
addb
popf
fwait
inc
pop
push
and
mov
mov
lods
test
add
mov
mov
mov
jl
dec
xchg
pop
jno
add
pop
jb
mov
mov
mov
mov
outsb
mov
xchg
mov
add
and
jne
shl
repnz
add
xchg
test
fisttps
xchg
fwait
cli
mov
mov
push
pop
aam
sub
add
int
subl
or
xor
and
xor
push
lret
ret
scas
push
mov
push
loop
mov
xor
mov
add
add
add
xchg
add
cmp
push
add
ret
pop
insb
rcrl
mov
dec
ljmp
and
cwtl
mov
inc
xchg
mov
pop
adc
mov
in
jge
js
mov
mov
cmp
add
add
hlt
stos
iret
xor
and
add
xchg
jp
xchg
adc
popf
rorl
mov
movsl
inc
add
add
sub
rorl
fldcw
iret
pop
mov
jae
push
xor
mov
data16
loop
mov
xchg
add
mov
cmp
jo
mov
clc
fwait
or
icebp
shll
mov
mov
ds
mov
mov
ret
fidivl
fnstenv
push
arpl
add
imul
xor
mov
rolb
mov
add
aam
and
stc
push
pushf
out
fwait
mov
loopne
mov
jecxz
test
add
mov
xchg
outsb
mov
movb
sbb
mov
int3
outsl
pop
pop
xor
push
sub
xor
xor
out
or
pshufw
sub
hlt
cmp
add
push
fs
stos
outsb
or
pop
jmp
lahf
sahf
jl
and
sahf
mov
outsb
mov
inc
mov
cmp
mov
mov
add
add
push
push
dec
push
and
jb
mov
sti
repz
jnp
fstps
mov
add
add
mov
call
push
add
cli
mov
insb
jge
push
xchg
punpckhdq
dec
adc
mov
add
push
or
add
jle
add
jne
inc
jae
inc
push
aaa
push
rolb
xchg
dec
xorl
push
lcall
mov
inc
jae
add
mov
shll
xchg
or
add
mov
dec
mov
add
inc
add
insb
and
cmp
rolb
mov
push
add
adc
out
push
scas
push
arpl
cmc
mov
or
outsb
orl
add
pop
es
push
pop
xor
inc
fcomps
or
int3
adc
mov
js
or
push
lcall
adc
mov
mov
push
rolb
mov
subl
das
into
and
add
add
fcoms
fcmovb
add
cmc
mov
cli
addb
adc
mov
mov
sub
xchg
add
sub
adc
mov
push
mov
stos
xchg
sahf
push
imul
pop
loopne
mov
push
pushf
add
mov
add
sub
stc
ljmp
mov
jle
sbb
mov
dec
sahf
jecxz
add
mov
xchg
fcom
pop
sub
jle
popa
sub
jge
loopne
mov
pop
cmp
popa
add
mov
mov
iret
outsb
xchg
cmpsl
dec
cltd
and
jbe
fimuls
jmp
cltd
mov
movsbl
mov
dec
insl
jo
mov
xor
loop
mov
add
add
outsb
pop
sub
jne
mov
in
mov
mov
es
popf
or
xchg
xchg
add
add
ja
ficoms
push
aam
arpl
sbb
add
lcall
mov
mov
add
mov
push
add
ficoml
add
and
adc
mov
xchg
add
mov
ds
add
mov
in
add
xor
lahf
enter
add
xor
mov
mov
mov
pop
addr16
fistpl
test
and
mov
inc
ret
dec
push
outsl
mov
push
fistpll
call
push
add
adc
je
pop
inc
fwait
jl
add
repnz
jmp
mov
pop
insl
jge
mov
cmp
lahf
push
xchg
jmp
stos
and
mov
add
cmp
add
lcall
adc
mov
mov
add
xchg
ljmp
mov
mov
sub
out
loop
mov
clc
bound
mov
roll
mov
out
sbb
daa
and
push
test
mov
in
shl
or
sub
imul
fsubs
mov
add
aad
stc
cltd
popa
sub
add
mov
mov
adc
sub
stc
imul
sbb
loopne
mov
mov
mov
lret
test
add
inc
bound
mov
jno
les
add
ss
repz
jl
dec
mov
mov
int3
test
cmp
stos
mov
inc
push
daa
xchg
repz
pop
int3
pop
sbbl
std
cld
rolb
cli
int
pop
arpl
or
addl
push
push
adc
mov
in
pop
push
imul
xor
mov
fwait
pusha
add
int
push
adc
ret
push
xor
mov
add
cmp
add
outsl
xchg
scas
addl
outsb
ljmp
aam
pop
adc
mov
push
jecxz
mov
mov
push
iret
inc
std
addb
imull
add
push
xor
mov
mov
xor
mov
mov
and
mov
add
test
mov
inc
lahf
or
int
cmpsb
mov
add
cs
sbb
dec
fimuls
imulb
cltd
rolb
das
test
push
jb
mov
mov
mov
std
mov
std
mov
add
out
icebp
insl
fstp
mov
or
mov
aam
scas
jmp
add
mov
mov
add
add
ds
out
daa
cmp
leave
clc
and
out
pop
int
nop
add
fneni(8087
add
push
sahf
mov
add
call
pop
xor
xchg
out
dec
dec
scas
xor
cmpsb
pop
xchg
add
imul
push
mov
lcall
addb
fimull
inc
cmp
add
fwait
pop
addb
nop
add
pop
gs
sub
mov
jo
mov
lea
das
imul
ret
rorl
xchg
cmpsl
movsb
mov
insb
test
push
fs
dec
repnz
add
popf
ljmp
aas
xchg
jb
mov
add
mov
add
aad
push
test
pop
int3
out
dec
mov
mov
int
int3
mov
rcr
js
loop
mov
sub
inc
add
or
nop
add
fildl
add
xor
push
dec
dec
push
push
add
mov
dec
leave
dec
out
mov
pusha
add
addr16
add
and
mov
dec
insb
inc
repnz
imul
add
xor
push
adc
sub
mov
stc
mov
shll
loop
mov
rolb
mov
xor
loope
test
mov
movsl
xor
lods
pop
jno
or
loopne
mov
xor
add
mov
xlat
add
mov
int
rolb
cmpsl
pop
test
add
mov
and
mov
push
mov
ret
out
test
ret
xor
pop
sbb
jmp
add
jns
pop
pop
cli
arpl
adc
mov
cwtl
pop
rcrl
xchg
cmp
sub
dec
pop
xlat
in
movsl
add
mov
mov
in
mov
mov
mov
jbe
xor
add
dec
jmp
dec
test
ja
sbb
test
add
mov
bound
mov
inc
call
mull
mov
insb
push
test
xor
mov
mov
push
ja
add
cmp
rolb
mov
pop
push
int
inc
add
or
sbb
sub
imul
xchg
ljmp
mov
add
fwait
lods
mov
pop
push
sti
or
mov
add
mov
mov
cld
mov
push
xchg
negl
or
jne
add
not
add
sub
push
add
leave
and
mov
inc
add
sbb
mov
addb
jns
cmp
pop
aas
ret
mov
add
popa
mov
add
add
inc
add
scas
mov
pop
lcall
int
jl
sbb
in
je
add
xchg
bound
mov
clc
stos
mov
in
sub
popf
xlat
add
add
out
push
das
stc
mov
jp
loope
mov
insb
xchg
jle
dec
ret
push
ljmp
mov
mov
or
add
sub
add
hlt
mov
dec
sbb
mov
or
mov
mov
jge
gs
mov
in
inc
subl
lret
jecxz
cmp
aam
mov
mov
jmp
or
jecxz
jb
mov
pop
fs
mov
add
mov
pop
std
push
fdivl
add
pop
mov
mov
je
or
jae
insb
fcoml
push
add
push
aad
add
mov
fisttps
mov
mov
imul
cld
add
jne
jmp
pop
mov
dec
mov
mov
mov
push
shl
push
add
loop
mov
xor
mov
mov
mov
pop
mov
xorl
jge
xor
lods
repz
push
cmc
pushf
mov
cltd
pusha
add
jmp
pusha
add
cmp
mov
mov
mov
add
je
addl
insb
or
pop
sahf
stc
sbb
js
add
push
xchg
add
bound
mov
add
mov
dec
in
mov
in
add
mov
mov
pop
sbb
pusha
add
repnz
cmp
rolb
mov
lcall
cmp
push
loope
pop
movsb
mov
pop
std
add
push
out
mov
mov
mov
test
adc
mov
aad
mov
pop
inc
mov
in
nop
add
mov
pop
cmp
inc
imul
push
popa
dec
jmp
in
dec
push
adc
repnz
xchg
out
popf
in
into
push
mov
mov
mov
mov
or
dec
cmpsl
dec
fs
out
fisubl
inc
or
or
xor
or
and
test
ja
dec
or
mov
or
lds
mov
jns
dec
hlt
mov
or
test
jbe
sub
push
lret
imul
lcall
sbb
add
add
dec
jns
rolb
mov
insb
test
subl
sbb
fdivr
mov
mov
and
xor
mov
in
sub
inc
jne
test
stc
cmp
fnstcw
add
loop
mov
aam
push
xchg
ss
movsl
mov
and
inc
xor
call
mov
je
clc
push
jg
mov
mov
mov
js
add
mov
test
jmp
add
add
mov
in
rolb
mov
lock
fwait
adc
push
xchg
or
xchg
add
lock
leave
out
jl
inc
add
jno
lock
add
add
pushf
sub
sbb
jne
push
fisubl
scas
jg
or
add
xor
cmpsl
jbe
push
clc
aaa
cltd
insb
push
movsl
pop
mov
add
pop
jle
jbe
rolb
mov
pushf
cld
jne
jp
mov
mov
mov
idivl
movsl
repnz
add
mov
test
clc
xchg
call
mov
xor
mov
lahf
test
loop
mov
testb
les
test
ret
test
out
push
mov
mov
add
into
mov
jl
xor
add
out
aaa
js
inc
cmp
hlt
idivl
fwait
mov
fdiv
fldln2
aas
out
ljmp
pop
sahf
arpl
mov
add
je
add
or
jecxz
in
dec
xor
cmp
pop
std
addr16
lods
inc
add
push
divb
notl
aaa
xchg
jno
scas
mov
push
add
dec
jge
aad
pop
mov
dec
hlt
push
add
mov
xor
add
shll
mov
push
or
add
mov
push
dec
test
test
push
add
mov
push
xchg
sbb
repnz
adc
std
fildl
mov
mov
sbb
push
push
ror
fstpl
scas
stos
mov
pop
in
dec
sbb
sbb
ret
les
cmpsl
or
xchg
cs
cli
lock
add
pop
js
repnz
js
xchg
inc
dec
inc
xchg
pushf
mov
cmp
push
mov
xchg
ret
cmpsl
adc
mov
fidivs
into
inc
pop
sbb
clc
icebp
mov
fwait
es
inc
add
mov
mov
int
lcall
xchg
push
pop
cmp
add
out
adc
mov
ljmp
cmp
add
cmpl
out
loope
insb
inc
mov
mov
cwtl
mov
pusha
add
mov
mov
mov
add
test
add
scas
mov
sbb
dec
xor
rolb
mov
pop
nop
add
add
mov
mov
addb
sbb
adc
mov
mov
adc
sub
sti
nop
add
add
add
and
ljmp
mov
add
iret
push
inc
sti
or
mov
inc
es
leave
push
add
sbb
ret
addb
faddl
push
or
clc
inc
mov
add
mov
xlat
mov
sub
mov
add
inc
addb
cmpsl
mov
add
fstpl
or
mov
add
add
clc
dec
sbb
push
dec
shll
jg
and
mov
mov
inc
add
cmp
add
xlat
std
out
sub
push
add
hlt
jl
push
call
pop
push
mov
push
fiaddl
mov
add
loopne
mov
add
in
bound
mov
rolb
mov
mov
jecxz,pt
add
mov
call
int
je
cmp
add
push
adc
sbb
jmp
jecxz
in
pop
xchg
inc
add
dec
mov
jle
and
or
outsb
das
insb
imul
or
cmp
and
addb
xchg
dec
dec
mov
loopne
mov
je
addb
mov
add
mov
out
loopne
mov
push
mov
js
adc
add
sub
ja
xchg
hlt
add
jle
sbb
dec
leave
les
inc
sarl
cmp
xchg
insb
add
adc
mov
mov
add
mov
iret
test
hlt
xor
mov
out
sbb
lret
jns
mov
mov
lahf
inc
add
cmp
sbb
pusha
add
subl
inc
add
add
inc
inc
fistpl
pop
fistps
divl
mov
imul
imul
mov
loopne
mov
sbb
enter
mulb
mov
pop
mov
mov
add
pop
xor
mov
inc
cld
cmc
xchg
aas
push
mov
mov
cmp
mov
add
sub
mov
add
mov
xor
sti
jle
call
leave
pop
loope
add
push
dec
inc
dec
aas
xchg
lcall
sbb
hlt
mov
clc
loop
mov
mov
mov
gs
leave
jmp
call
push
add
inc
or
fwait
ret
jmp
sbb
xchg
mov
int3
cmp
cmp
pop
sbb
bound
mov
and
mov
add
fs
inc
add
out
out
popf
xchg
add
mov
cmp
xchg
lea
adc
mov
pop
jp
loope
daa
les
add
and
lahf
sbb
add
sub
dec
cs
add
ficomps
ljmp
and
mov
outsb
outsl
nop
add
aas
faddl
fs
jp
add
in
push
mov
mov
leave
cmpsl
mov
in
lods
mov
cwtl
cwtl
stos
push
mov
add
xor
cmp
fldcw
cmp
ja
pop
cli
xlat
in
mov
inc
jns
fs
mov
cmpsl
test
pop
sbb
mul
add
sbb
data16
mov
test
mov
lret
fs
scas
pop
xchg
add
std
add
xor
add
xchg
and
add
data16
lods
movsb
push
lds
fs
inc
out
call
mov
jge
push
adc
mov
sub
add
push
add
sub
xor
mov
imul
add
in
out
inc
add
add
mov
popf
je
mov
push
pop
or
adc
adc
mov
add
mov
cwtl
xchg
movsl
daa
sub
icebp
sub
jne
add
nop
add
mov
add
mov
jecxz
add
test
xor
iret
inc
add
mov
mov
lret
pusha
add
xor
mov
push
add
add
or
sub
lea
xchg
sbb
fwait
repz
pop
out
and
mov
mov
push
cmp
pop
mov
in
fwait
hlt
fwait
ja
jne
in
xor
outsl
mov
jnp
repnz
loopne
mov
jmp
nop
add
mov
es
mov
push
add
add
mov
xor
pop
mov
add
mov
xor
xchg
mov
leave
cmp
add
cmpsb
sub
add
add
mov
xor
jb
mov
add
arpl
cwtl
pop
adc
jmp
push
cmp
repz
cli
ret
cmpsl
and
mov
movsb
inc
xor
mov
cmp
dec
xchg
bswap
sub
ljmp
aaa
dec
outsl
mov
pop
sbb
push
test
push
sahf
out
fidivs
and
xchg
shl
add
jns
inc
loopne
mov
cmp
imul
or
sbb
mov
mov
jbe
dec
inc
add
add
inc
cmp
and
pop
xchg
mov
add
mov
mov
mov
ljmp
mov
sbb
jp
add
out
xor
mov
add
jno
cld
push
shrl
mov
add
pusha
add
dec
adc
mov
fwait
pop
jne
sbb
mov
fnstcw
mov
inc
xchg
add
mov
das
mov
mov
ds
call
add
adc
mov
add
add
pop
xor
mov
sbb
pop
adc
movsb
dec
mov
adc
mov
mov
aad
or
movsl
cmp
std
adc
dec
daa
xor
mov
mov
loope
lahf
push
add
aad
bound
mov
add
add
loopne
mov
stc
ds
cwtl
lret
or
jbe
fstpt
in
pop
aam
ljmp
xor
es
inc
push
movb
jle
sbb
faddl
loopne
mov
out
cmp
out
cmp
xlat
add
or
sub
jae
mov
xchg
jle
popf
and
std
sub
imul
xchg
cmpl
xchg
jbe
xchg
out
aas
aas
pop
mov
sbb
push
add
dec
xor
ja
bound
mov
add
lea
imul
add
cmp
in
pop
or
cs
cld
and
sar
jp
xor
cld
jg
add
add
leave
bound
mov
jnp
add
jmp
dec
dec
pop
repnz
cmpsb
xor
repnz
sbb
scas
push
out
jp
xor
ljmp
push
add
mov
mov
mov
or
mov
xor
xchg
mov
and
mov
cmp
loop
mov
fildl
add
outsb
inc
add
dec
aad
add
hlt
lcall
xor
mov
shrl
notb
pop
cmc
xor
mov
push
xchg
push
das
enter
test
inc
mov
enter
xor
mov
int
outsl
les
rolb
push
pop
lcall
jbe
dec
xchg
lret
jb
mov
leave
stc
push
jne
outsl
sbb
add
neg
dec
movsb
hlt
data16
stos
mov
or
jno
scas
or
mov
xchg
add
lock
and
mov
adc
mov
add
dec
mov
xchg
adc
adc
decl
fldt
fwait
mov
mov
pushl
add
add
add
xor
push
add
aas
mov
push
adc
idiv
xchg
dec
dec
jne
mov
mov
add
fldcw
mov
into
fbstp
push
jbe
notl
mov
xlat
and
aas
data16
stos
scas
lret
lods
lods
sbb
mov
lea
add
subl
add
sub
jmp
mov
push
push
add
insl
fwait
sarl
push
les
add
mov
or
and
mov
stos
in
lret
xchg
icebp
xabort
add
sbb
mov
cmp
xchg
bound
mov
cmp
dec
idiv
movsl
push
addb
cli
loope
add
add
lahf
es
pop
mov
in
add
lcall
out
mov
int
lds
sarl
addb
inc
fs
inc
insl
mov
add
push
cmpsl
test
rolb
iret
fstpl
pop
push
data16
mov
loope
adc
mov
mov
add
stos
inc
add
out
mov
mov
cmpsb
pop
push
fld
cmc
cmp
insl
or
cmpsl
push
insl
movsl
js
ljmp
lret
fmuls
lds
jo
mov
hlt
repnz
xor
dec
test
mov
add
mov
xor
add
mov
xor
aad
adc
mov
mov
imull
xchg
in
add
mov
test
mov
mov
in
aad
inc
adc
inc
pushf
gs
ja
adc
mov
mov
and
mov
hlt
pop
jnp
inc
pushf
or
adc
jle
jb
mov
push
and
mov
and
mov
dec
or
repnz
xchg
out
fisubrs
mov
add
flds
in
sub
or
add
xchg
add
fdivr
adc
push
add
adc
lret
jmp
adc
mov
mov
mov
mov
scas
adc
add
pop
imull
stc
addb
repz
aaa
xchg
jmp
and
mov
add
dec
lods
push
adc
aam
dec
push
mov
xchg
mov
dec
aaa
dec
ljmp
mov
stc
sub
add
call
loope
pop
rorl
fimuls
cmp
hlt
das
xchg
call
out
addb
iret
mov
add
test
dec
inc
rolb
mov
cwtl
inc
add
push
dec
push
outsb
push
insl
xchg
xchg
mov
movsb
dec
push
or
or
add
pop
jg,pn
sub
xchg
add
jmp
lcall
xor
add
aaa
pop
sahf
lret
movsl
inc
jae
addr16
inc
add
loopne
mov
sbb
add
or
xchg
jmp
jb
mov
lods
xchg
xchg
test
xchg
xchg
pop
lahf
xchg
and
push
sbb
push
hlt
xchg
add
jnp
cmpsb
sub
xchg
repz
out
inc
cmpsb
loop
mov
add
fstl
out
out
xlat
movsb
pop
and
mov
mov
clc
push
ljmp
xor
add
add
inc
add
or
aam
int3
push
or
stc
pop
inc
cmc
ljmp
mov
leave
cli
sbb
or
mov
movsb
sbb
xchg
mov
pop
mov
icebp
mov
add
pop
jnp
and
mov
add
mov
popf
inc
pop
adc
mov
jg
jns
xlat
popa
icebp
sub
mov
mov
jp
add
add
mov
jmp
and
pusha
add
push
cmpl
jno
or
mov
mov
aaa
gs
dec
mov
pop
push
mov
add
lret
push
cmpsb
hlt
and
adc
aam
test
aas
fnsave
or
mov
mov
es
add
add
fs
movsb
mov
and
pop
mov
add
cld
and
mov
aad
push
lretw
data16
rolb
mov
lods
pop
ja
xlat
test
add
inc
scas
mov
pop
cmpsb
mov
negb
jb
mov
call
mov
adc
mov
sarl
lock
loop
mov
mov
rolb
cld
frstor
mov
lock
movsl
ret
sti
adc
mov
cmp
sahf
fnsave
dec
and
mov
adc
push
data16
dec
cli
adcl
cmp
push
sub
push
cli
cmpsl
or
icebp
adc
sbbl
sti
insb
sub
mov
add
clc
inc
insl
je
daa
and
cld
push
cmp
scas
jmp
loope
adc
mov
mov
dec
dec
push
or
inc
add
mov
add
adc
and
xchg
pop
cmpsl
in
nop
add
popf
popf
test
rolb
mov
jle
or
add
jecxz
inc
add
mov
mov
add
mov
pushf
push
test
push
into
mov
imul
data16
add
pop
cmp
pop
ret
mov
push
add
add
adc
mov
lcall
push
or
push
and
pop
push
leave
imul
xor
mov
add
cmpsl
test
xchg
jbe
adc
ja
outsl
inc
or
and
test
xchg
js
and
mov
cwtl
insb
call
cli
or
sahf
sub
loop
mov
ljmp
test
addb
addb
fdivs
sbb
bound
mov
jo
mov
cmp
add
nop
add
add
add
out
into
mov
mov
xlat
push
movsl
mov
outsb
xor
cmpsl
dec
pop
cmp
mov
add
lods
call
fwait
movsb
mov
mov
inc
mov
push
dec
xchg
xchg
add
je
add
icebp
mov
bound
mov
inc
fwait
and
mov
lcall
cli
jnp
sub
mov
add
pop
jg
adc
mov
mov
and
mov
cmp
and
loope
add
hlt
dec
push
lahf
push
lock
loop
mov
inc
jp
push
test
mov
cwtl
loope
add
mov
lret
pop
cmpsl
test
jp
mov
addb
and
scas
leave
dec
pop
jo,pn
mov
mov
shrl
lods
mov
dec
xchg
test
xor
mov
add
lea
cmp
mov
mov
mov
repz
clc
adc
mov
mov
cmp
outsl
loope
mov
xchg
rolb
mov
int
out
and
dec
cmp
bound
mov
andl
push
jg
cmc
sub
add
imul
add
inc
inc
roll
cmc
pop
mov
aad
pusha
add
clc
cmp
cld
mov
sbb
and
sbb
gs
mov
mov
lret
loope
gs
adc
jbe
mov
sbb
in
fwait
push
adc
mov
push
add
mov
sbb
icebp
pop
mov
add
fwait
sti
xor
mov
dec
xchg
decb
sarl
add
jnp
daa
insb
jae
add
cmp
mov
add
mov
add
dec
dec
jg
in
rolb
mov
add
dec
lahf
jge
add
sub
mov
ja
mov
jl
out
ds
xor
mov
loope
push
fbstp
cmp
pop
mov
xchg
and
das
std
or
or
pcmpgtd
insb
daa
adc
scas
jb
mov
add
push
jge
into
mov
mov
jbe
clc
xchg
gs
arpl
add
mov
add
mov
mov
and
mov
bound
mov
loopne
mov
pop
fwait
dec
sbb
mov
sbb
outsl
or
or
add
arpl
add
pop
push
arpl
movsb
icebp
dec
xchg
lea
dec
int
sti
jb
mov
pop
loopne
mov
iret
clc
or
push
add
loop
mov
xlat
out
cmpsl
cmc
outsl
lret
jg
lds
mov
xor
mov
cli
ljmp
cmove
mov
pop
mov
out
stc
aaa
dec
dec
out
pop
cmpsb
movsl
push
jbe
pop
test
add
mov
jb
mov
jno
arpl
call
fbstp
push
pop
lahf
mov
mov
cmc
adc
cmp
mov
mov
add
xchg
mov
jns
fwait
lock
inc
cmp
add
shrl
iret
cwtl
xor
dec
in
xchg
add
data16
push
jno
mov
dec
xchg
add
add
inc
roll
je
int
add
mov
mov
fildl
add
push
loop
mov
add
loope
enter
add
sbb
cld
sub
dec
setae
cmp
pop
jle
add
mov
xchg
dec
dec
or
ret
popa
insl
inc
jmp
pop
mov
add
mov
dec
ja
mov
pop
lock
add
lahf
pushf
das
int3
mov
mov
test
hlt
push
push
popf
sbb
int3
or
jb
mov
mov
mov
mov
mov
scas
jecxz
mov
or
sahf
or
sub
call
imul
jns
fst
add
jl
pop
sub
ret
and
test
jae
pop
add
adc
mov
adc
mov
add
or
jns
insl
inc
jmp
out
add
rolb
mov
push
cwtl
or
js
ret
sub
or
add
pop
data16
ds
sbb
in
popa
push
pop
gs
in
icebp
rcrl
or
add
mov
ss
mov
outsl
popa
pop
sbb
add
cmp
inc
inc
bound
mov
inc
pop
mov
xchg
js
fmull
bound
mov
add
pop
test
jns
and
push
jge
push
lcall
xchg
leavew
mov
or
dec
xor
mov
mov
xchg
add
xchg
jge
inc
add
std
aam
sub
and
addb
push
xlat
mov
cli
pop
in
cmp
add
add
inc
addb
hlt
push
push
add
imul
mov
pop
pop
movb
xlat
repnz
mov
add
jmp
pop
jmp
add
mov
test
pop
push
pop
dec
pop
adc
mov
int3
testl
add
mov
mov
add
add
repnz
lcall
inc
xor
mov
add
int3
xor
fs
push
or
sti
cmp
add
popa
sbb
mov
lock
addb
mov
lret
movsb
xor
mov
jge
xchg
cmp
clc
addb
lods
aad
addb
test
xchg
add
add
jne
add
in
fisubrs
jo
mov
xchg
mov
stc
fdivp
add
adc
mov
jmp
pop
sahf
mov
pop
filds
jmp
aam
jns
scas
lock
gs
ret
mov
mov
adc
mov
movsb
mov
push
add
jl
imul
jle
adc
mov
add
adc
mov
push
adc
popf
cmp
das
jb
mov
lea
mov
push
fwait
movsl
aas
decb
pop
call
xor
mov
mov
mov
xchg
repnz
stc
enter
add
mov
inc
add
sub
fidivl
mov
sub
dec
cwtl
out
jae
cli
or
adc
insb
in
sub
sub
sbb
and
sub
xchg
mov
add
jg
fcmovu
fsubl
add
jl
adc
mov
add
mov
sub
mov
xor
mov
adc
mov
mov
mov
push
or
and
js
int3
add
arpl
test
mov
push
test
or
insb
sbb
push
push
es
jl
add
je
aaa
lock
jp
pop
sbb
lahf
mov
and
mov
cld
xchg
and
jecxz
add
int3
add
xchg
outsb
jmp
cs
scas
ret
xchg
add
dec
sub
add
add
mov
out
mov
mov
sbb
idiv
sub
mov
sub
add
add
and
mov
and
cwtl
sbb
loope
add
add
add
fstl
into
cld
clc
and
movsb
pop
mov
aaa
cmp
cwtl
in
push
push
add
jnp
repz
mov
cmpsl
cs
idivb
mov
aaa
lea
loop
mov
addr16
roll
add
idivb
out
test
hlt
rorl
jecxz
xchg
and
mov
stos
sub
cwtl
inc
pop
pop
sahf
repnz
add
data16
popa
andl
inc
dec
sub
mul
ret
movsb
sbb
rcrl
fimuls
add
arpl
or
mov
mov
cwtl
dec
inc
adc
xchg
jl
sub
adc
pop
test
bound
mov
mov
add
stos
pop
xor
mov
mov
dec
mov
push
cli
out
add
int3
jmp
fiadds
scas
iret
jg
pusha
add
fsts
andl
std
fists
add
hlt
sti
and
out
pop
fwait
mov
add
add
add
aam
push
xor
add
stos
sub
add
loop
mov
fucomp
jmp
and
adc
xchg
add
hlt
lret
mov
test
pop
sub
inc
push
incl
or
fdivl
xchg
mov
push
sbb
mov
lret
xor
mov
mov
mov
mov
mov
add
mov
pop
xchg
add
cwtl
push
flds
mov
pop
push
adc
mov
add
jecxz
fisubrs
add
pop
out
add
mov
insb
lea
cmp
ljmp
rolb
sub
adc
xor
mov
popa
mov
das
push
cs
loopne
mov
xor
sub
add
add
hlt
push
daa
jp
lods
cmp
or
pop
xchg
cmpsb
aaa
dec
jle
push
mov
insb
push
imul
addb
fbld
popl
sbb
mov
rolb
mov
in
mov
add
fimuls
pop
pusha
add
mov
out
js
rolb
mov
mov
and
add
repz
mov
addr16
addb
jg
inc
mov
mov
in
fdivrl
mov
scas
mov
out
pop
mov
or
push
dec
call
mov
out
add
mov
add
fbld
add
mov
lret
mov
jns
pop
ja
sub
call
lea
mov
stos
fnsave
jnp
divps
aaa
out
jle
jecxz
add
fldenv
add
call
mov
cmp
or
repnz
jle
sub
test
xchg
dec
push
add
cmp
pop
mov
mov
mov
cs
mov
mov
pop
xor
icebp
fnstsw
es
jmp
out
lahf
cld
push
call
stos
pop
adc
mov
repnz
aam
pop
lcall
add
mov
out
or
add
mov
mov
ja
add
mov
loope
lods
je
faddl
or
fs
mov
mov
and
sbb
shrl
outsb
mov
loop
mov
jbe
std
push
lcall
pop
pop
cmp
jno
lret
loopne
mov
aam
mov
fs
add
mov
pop
sti
stos
insl
cmp
push
lock
adc
addb
popl
pop
lea
lahf
sub
in
add
add
aam
add
mov
mov
fstp
mov
add
dec
and
add
inc
div
rolb
cld
push
push
movsb
adc
fs
or
js
enter
movsb
mov
xchg
ret
hlt
and
mov
xchg
dec
ja
jo
mov
leave
lret
insl
test
push
cmp
push
rolb
mov
lret
lret
out
add
xlat
je
mov
xchg
pushf
fdivrl
add
loop
mov
test
sub
dec
lods
xchg
push
dec
rolb
sub
mov
sub
add
jecxz
fcomp
outsl
mov
clc
inc
cld
ds
push
leave
int3
loop
mov
pop
ret
mov
inc
and
mov
dec
mov
int3
aas
push
jmp
stc
hlt
popf
adc
bswap
pmaddwd
mov
sbbl
add
pop
or
mov
add
jecxz
mov
lcall
inc
add
pop
and
mov
dec
fnstsw
mov
das
push
add
into
push
adc
mov
rcrl
pop
mov
xchg
ficompl
fs
lret
push
movsl
shll
inc
pcmpgtd
push
mov
add
mov
neg
mov
xor
pop
jnp
add
bound
mov
dec
enter
mov
lcall
imul
repz
lock
push
dec
pop
and
add
cmp
ret
inc
dec
movsb
pop
pop
inc
imul
and
mov
jae
mov
divl
adc
aas
bound
mov
add
sbb
pop
mov
mov
push
rolb
mov
push
cmp
push
pop
lcall
adc
mov
pop
addb
mov
lea
test
add
mov
inc
ljmp
add
mov
and
aas
nop
add
mov
data16
jbe
in
pushf
imul
mov
add
dec
cmpsb
call
out
loopne
mov
cmc
xchg
aam
je
add
add
push
adc
dec
test
jne
or
sub
push
mov
in
repz
sub
or
cmp
xor
jle
mov
add
loopne
mov
sub
pop
int3
adc
or
ljmp
mov
inc
addb
lods
stc
in
fisubrs
sbb
in
pop
pushf
and
enter
rol
jno
sahf
xchg
cmp
mov
test
out
pop
sbb
add
xchg
lahf
clc
loopne
mov
bound
mov
loop
mov
jb
mov
rolb
sub
pop
arpl
int
add
add
inc
adc
inc
notl
sahf
iret
loop
mov
sbb
aad
add
mov
cmp
adc
into
imul
and
mov
sbb
loop
mov
sbb
cltd
mov
cs
cmp
jno
negb
pushl
sub
out
and
add
ds
dec
sbb
ds
dec
fisubrl
pop
adc
mov
adc
mov
repz
fsts
mov
add
jno
adc
add
in
jno
mov
add
mov
mov
add
inc
add
mov
add
mov
jae
adc
mov
mov
imulb
add
add
mov
mov
add
add
mov
mov
inc
add
cmp
lods
cmpsl
inc
test
dec
pop
loop
mov
sbb
pop
lret
pop
lcall
inc
add
aas
outsl
jb
mov
in
lret
outsl
mov
cld
addb
sahf
addb
dec
cmp
cltd
push
addb
ss
dec
enter
addb
and
call
add
mov
add
faddl
pushf
jnp
stos
and
mov
add
mov
sub
jl
fwait
sbb
add
pop
cmp
xchg
jae
cltd
mov
push
inc
out
shll
dec
insl
js
imul
jg
mov
cmp
je
inc
add
mov
mov
arpl
mov
xchg
mov
out
jb
mov
adc
cmpsb
push
adc
mov
mov
add
mov
add
adc
mov
xchg
fldenv
lods
mov
aam
test
divb
dec
inc
mov
mov
or
jo
mov
lock
mov
mov
aad
mov
popf
cli
lea
cld
lahf
jb
mov
add
xor
sarl
add
outsl
inc
cmp
jecxz
lea
adc
push
fsubl
dec
sbb
ret
push
adc
add
dec
pop
into
inc
add
mov
cmp
lahf
pop
test
imul
ficomps
in
mov
xchg
or
pusha
add
add
or
add
cmp
rolb
pusha
add
bound
mov
aas
das
or
jne
xchg
push
mov
mov
fldenv
add
mov
arpl
jecxz
push
add
xor
test
add
cmpl
xor
imul
enter
jne
out
imul
in
addb
cwtl
aas
jp
clc
in
mov
xchg
add
pop
dec
cmp
fisubrs
jb
mov
mov
mov
add
mov
addb
dec
push
sbb
sbb
add
fptan
add
pushf
hlt
sbb
mov
jae
jne
int
test
sub
add
bound
mov
int
sti
mov
add
iret
mov
add
jmp
adc
call
xchg
pop
test
lods
insb
lock
stos
arpl
mov
fcmovnu
insb
repnz
aam
sbb
sub
lods
sub
enter
xchg
jle
push
decb
xchg
aas
pop
cmp
stos
in
dec
rolb
mov
js
add
clc
pusha
add
stos
add
mov
push
loopne
mov
mov
xchg
mov
addr16
add
pop
cmp
jae
xchg
mov
pop
push
mov
cmp
sbb
addr16
xor
mov
add
mov
ret
call
add
mov
mov
mov
mov
pop
ss
mov
mov
xchg
jns
insl
inc
dec
cmp
adc
lahf
jmp
mov
cld
xlat
icebp
add
sbb
aaa
add
add
add
mov
sub
and
mov
outsl
je
movsl
mov
add
arpl
mov
clc
adc
int
adc
mov
mov
fiaddl
mov
add
push
pushl
jg
or
inc
data16
add
dec
std
call
xchg
fwait
into
fwait
cmp
inc
jmp
lret
dec
xor
mov
xor
dec
out
mov
enter
xor
mov
mov
mov
add
mov
mov
setle
push
pop
lods
inc
mov
mov
scas
push
mov
int
xor
pop
pop
addb
sbbl
and
mov
call
pop
shr
jae
inc
andl
xor
add
std
pop
mov
push
add
pop
mov
sub
test
mov
addr16
mov
sbb
mov
imul
inc
test
in
mov
mov
ss
push
sbb
dec
in
adc
cmpsb
push
add
add
jbe
adc
add
jl
movb
mov
push
adc
add
mov
add
ret
aam
popf
daa
lea
addb
std
gs
test
inc
add
stos
imul
mov
stc
iret
pop
imul
cmp
mov
add
add
mov
das
outsb
sub
lret
add
mov
mov
add
add
push
push
jl
addb
jne
adc
mov
mov
cmp
and
mov
mov
lret
mov
push
out
mov
mov
pop
sbb
adc
faddp
xor
add
shrl
pop
push
fnsave
int
dec
push
aaa
push
add
dec
pop
cli
dec
clc
movsl
xor
pop
call
add
ss
jbe
lods
div
addr16
fisubl
aam
dec
push
jns
aam
push
lret
inc
pop
pop
sbb
adc
mov
ja
adc
les
mov
push
and
dec
addb
outsl
lods
pop
int
add
cld
cwtl
sahf
adc
add
mov
cmp
mov
add
xor
enter
ret
rolb
mov
shll
inc
add
aam
push
add
cmpsb
popf
inc
add
mov
xor
mov
mov
or
add
and
inc
jmp
in
add
mov
ret
repz
out
pop
xor
scas
test
push
adc
mov
in
sub
or
mov
cmp
pop
loopne
mov
add
lret
pop
in
add
inc
rolb
mov
push
add
in
jo
mov
les
mov
mov
not
xor
and
mov
arpl
jae
xor
mov
aaa
rolb
inc
test
test
add
add
aam
and
sub
jo
add
inc
jl
and
jle
icebp
or
add
add
popf
cmp
add
enter
xlat
popf
scas
sub
cmp
add
xchg
int3
sbb
add
mov
addb
ror
inc
xlat
bswap
flds
push
ss
xchg
jo
mov
gs
mov
movsl
push
add
mov
fidivl
xchg
out
sahf
or
leave
pop
or
test
je
inc
push
xchg
popa
in
push
jg
mov
add
add
mov
jge
cltd
hlt
xchg
ret
jge
les
jecxz
push
imul
xor
loopne
mov
shll
imul
dec
sub
rolb
mov
add
imul
rolb
mov
jne
sbb
add
sub
and
mov
sub
rolb
mov
mov
call
clc
addr16
mov
pop
lret
dec
fsubrs
adc
popa
addb
jg
enter
addb
pop
sub
mov
rolb
mov
rorl
test
mulb
adc
add
mov
and
or
add
xchg
or
jl
addl
int3
mov
cmp
add
or
xchg
call
mov
mov
ljmp
or
add
out
pop
arpl
mov
gs
dec
addr16
in
daa
clc
shll
mov
xchg
add
mov
mov
out
inc
rolb
push
in
add
addb
push
add
dec
mov
mov
aad
popa
nop
add
adc
xor
add
cmp
addb
stos
shll
pusha
add
add
pushf
ljmp
stos
inc
mov
rolb
mov
jl
pushf
xchg
dec
int
mov
mov
mov
pushf
or
inc
push
stos
jge
sbb
test
inc
stos
jne
mov
jbe
xchg
push
dec
add
mov
mov
and
mov
sub
add
fs
add
mov
out
sbb
mov
mov
enter
xor
je
pop
mov
mov
add
cmpl
aas
fs
shl
ret
loope
push
lods
out
mov
jb
mov
dec
imul
or
mov
xlat
fwait
jne
mov
repnz
mov
add
mov
add
add
mov
mov
jae
sub
out
mov
adc
mov
clc
std
dec
dec
cmp
mov
mov
and
jg
cmp
movsl
inc
fisubrl
dec
js
pop
adc
xchg
fisttpll
mov
repnz
add
mov
cmp
lret
bound
mov
sbb
jecxz
sbb
aas
and
fs
js
add
push
sub
nop
add
jne
mov
leave
iret
hlt
xlat
movsl
dec
mov
aam
inc
inc
add
pop
hlt
mov
fwait
sbb
je
cmp
and
sbb
jmpw
mov
xchg
lcall
jge
sub
aas
push
scas
outsb
inc
add
push
addb
fbld
jl
aas
leave
adcl
mov
mov
scas
push
arpl
mov
pop
fsubrl
test
test
cli
stc
mov
test
xlat
sbb
push
or
inc
gs
jecxz
aam
and
mov
add
mov
xlat
data16
add
cmp
outsl
subl
rolb
mov
mov
add
jno
test
lods
rol
jnp
xchg
add
inc
into
cmp
add
push
sub
emms
pop
js
push
aas
lret
cli
cmp
xchg
inc
fimull
cmp
inc
ss
sbb
jne
repz
stos
and
push
adc
mov
mov
movsb
sbb
add
lahf
jno
push
ret
jo
mov
sbb
and
mov
mov
scas
pop
mov
push
stos
dec
notb
mov
icebp
pop
bound
mov
mov
mov
in
cmp
pop
xchg
add
add
stos
push
outsl
outsb
inc
inc
add
mov
cmp
es
icebp
sub
add
add
mov
ljmp
cltd
lods
lock
xor
mov
ja
scas
cmp
and
in
push
mov
fs
xchg
jbe
jg
cmc
push
pop
xchg
pop
adc
ficoms
add
sbb
test
xor
mov
push
int3
mov
add
cmp
add
inc
add
imul
xor
mov
outsb
addr16
leave
jne
jle
mov
aad
pop
or
outsb
in
mov
add
add
mov
fisubrs
xor
mov
xor
into
mov
mov
add
addb
ss
loopne
mov
xchg
sub
dec
or
mov
jb
mov
aad
add
sti
or
jmp
mov
lods
jne
sbb
add
int
das
enter
imul
add
rolb
mov
mov
add
add
mov
aas
ss
or
dec
adc
mov
inc
std
jb
mov
ss
enter
mov
adc
mov
scas
jns
add
out
sbb
add
dec
frstor
negb
lods
add
sub
jge
repz
xchg
mov
gs
add
mov
inc
test
adc
mov
jge
add
add
adc
lahf
sbb
add
mov
xor
mov
xor
out
mov
add
mov
add
add
add
add
add
mov
test
and
fistl
js
push
movsb
adc
push
inc
sahf
mov
fcmovnbe
add
pop
movsb
inc
add
js
dec
int
repnz
and
mov
sbb
movsl
lods
sbb
push
lods
lock
add
adc
mov
rcrl
sbb
jno
cmp
mov
mov
xor
add
xor
daa
cwtl
ja
les
or
jns
add
fisttps
outsb
jmp
mov
scas
mov
sub
xor
mov
divl
add
rolb
mov
mov
mov
dec
insl
pop
in
dec
mov
and
mov
mov
add
xor
xor
lock
mov
mov
inc
add
addb
adc
jecxz
add
add
stc
xchg
mov
pop
push
test
js
add
add
jge
fs
dec
push
sbb
or
xor
add
add
ja
arpl
pushf
mov
bound
mov
fwait
sbb
add
jmp
pop
cmpsl
sbb
add
dec
es
pushf
adc
mov
test
xchg
fdivrl
xchg
test
add
xchg
mov
insb
addb
mov
dec
mov
mov
jne
adc
into
adc
mov
icebp
lock
cmp
out
cmpsl
lea
xchg
dec
jl
sbb
add
jbe
cmp
repz
add
pop
imul
rolb
pop
les
icebp
bound
mov
push
and
sbb
sbbl
mov
jmp
movsl
inc
fcomip
pop
out
add
mov
mov
lock
add
es
sub
cmp
inc
mov
and
mov
ja
fwait
pop
jg
rolb
mov
test
lret
test
mov
fwait
push
xchg
sub
int3
arpl
pushf
push
scas
test
out
aaa
xchg
and
mov
add
jmp
rolb
mov
stos
scas
call
mov
notl
mov
add
sahf
mov
push
in
sub
stos
mov
bound
mov
add
add
fsubrl
mov
xor
mov
add
js
jbe
les
jp
xlat
jnp
cli
or
pop
jl
add
jae
aas
imul
add
mov
pop
pop
fs
xor
cmovbe
ljmp
movsl
ljmp
push
add
or
pop
dec
jns
cmpsl
idivl
mov
pop
xchg
mov
mov
add
mov
sbb
sub
push
add
sub
mov
mov
or
fisubl
add
nop
add
test
cld
xlat
xor
mov
cli
nop
add
mov
les
leave
je
or
dec
xchg
ret
xor
mov
aas
or
dec
scas
out
add
mov
dec
outsl
enter
icebp
mov
mov
mov
cli
jne
cmpsl
gs
out
out
test
dec
loope
sbb
and
push
adc
arpl
bound
mov
mov
scas
repnz
mov
add
inc
inc
aas
into
out
lds
adc
mov
mov
jl
ret
push
jge,pn
pop
push
mov
push
pop
mov
mov
mov
rolb
mov
out
mov
xor
mov
xchg
mov
jecxz
adc
mov
add
mov
rolb
and
mov
mov
pushfw
adc
mov
add
mov
cmp
add
add
sbb
jno
lret
mov
mov
ljmp
mov
pusha
add
jmp
nop
add
inc
add
sbb
or
cmp
popa
ds
cmpsl
insb
adc
mov
push
andl
popa
sbb
cmp
ret
xor
inc
add
mov
aas
push
fldenv
sbb
dec
sbb
add
repnz
xchg
rolb
mov
nop
add
jg
jo
mov
movsl
test
inc
repz
add
test
mov
cltd
dec
loop
mov
jno
mov
out
bound
mov
movsl
cs
in
lret
mov
jl
dec
adc
outsb
push
mov
add
mov
inc
mov
push
add
andps
movsb
aaa
popa
lods
push
add
jns
insb
shrl
sti
push
mov
lret
dec
and
push
loopne
mov
lret
addr16
push
add
pop
mov
jge
jnp
push
adc
mov
add
add
add
pushf
out
mov
xchg
pop
jo
mov
cwtl
dec
sti
addb
add
ds
test
xor
sbb
push
add
add
or
or
mov
mov
ret
jmp
popa
pop
or
jnp
mov
and
or
cwtl
xor
mov
sbb
aam
rolb
mov
je
addr16
loope
or
lret
inc
aad
mulb
adc
mov
mov
lcall
sub
add
cli
test
dec
or
sub
jmp
dec
or
mov
rolb
mov
add
jae
das
fistpll
pop
jg
dec
xlat
dec
in
mov
adc
fcompl
mov
jbe
jns
mov
sbb
lret
gs
sti
pop
or
mov
mov
lea
fdivr
add
mov
add
or
adc
cmp
mov
add
rolb
mov
mov
addb
add
and
out
dec
adc
mov
cs
xchg
pop
add
mov
sbb
cltd
lock
test
lods
insl
aad
push
sub
call
int3
xor
mov
push
adc
mov
xor
add
push
gs
inc
push
add
and
mov
insl
xor
pop
or
leave
imul
mov
sbb
jle
pop
and
mov
mov
popf
push
add
ss
mov
mov
mov
push
test
mov
xchg
out
inc
add
dec
aad
shufps
add
and
lret
add
sub
mov
jg
loope
mov
add
nop
add
add
data16
cmc
adc
out
push
xlat
lret
ret
xrelease
add
mov
in
scas
out
hlt
pop
scas
sbb
les
ret
stmxcsr
cmpl
add
mov
and
lods
mov
add
mov
fucomp
cmp
adc
mov
or
xchg
xor
xchg
int
xchg
mov
xchg
add
mull
lods
xor
mov
dec
in
or
add
pop
jb
mov
push
std
gs
les
adc
xchg
sbb
mov
mov
add
scas
and
mov
pusha
add
add
movsb
jmp
mov
addr16
nop
add
mov
mov
jae
gs
int3
mov
mov
and
ret
addb
inc
jae
negl
mov
divb
lahf
shll
push
xor
mov
push
add
pop
pop
mov
add
add
add
imul
cli
push
push
gs
fsincos
push
aaa
jecxz
cltd
les
add
add
add
mov
int
cmp
add
push
mov
add
addb
popf
sti
enter
mov
aas
xor
mov
dec
xor
mov
add
rolb
mov
mov
mov
inc
xchg
fs
dec
pusha
add
add
out
shrl
add
jecxz
cs
adc
cld
pop
adc
mov
add
addb
fdivs
std
mov
jle
mov
sbb
dec
clc
jns
add
add
mov
push
or
pop
xbegin
lcall
add
mov
into
xor
mov
fldenv
add
add
fistl
loope
lcall
das
pop
xlat
cmc
js
fwait
mov
mov
cmp
mov
mov
clc
mov
std
dec
jecxz
sub
push
cmp
jo
mov
data16
cmp
dec
rolb
mov
mov
fidivl
clc
sub
add
mov
into
addb
or
clc
test
es
testl
int3
pusha
add
addb
fs
js
out
ficomps
mov
add
das
xor
sbb
add
add
mov
cmc
jge
stc
xor
mov
mov
add
add
mov
call
pop
fistps
jno
add
and
rolb
mov
cmp
pop
in
mov
loope
add
inc
out
rclw
mov
mov
aaa
lahf
lahf
icebp
xor
gs
add
pop
je
clc
mov
gs
inc
mov
lahf
in
clc
cmovae
xor
mov
leave
sub
xor
mov
leave
rolb
mov
xchg
dec
adc
loop
mov
and
dec
mov
cmp
mov
into
cmpsb
and
push
push
out
mov
push
mov
add
cmp
mov
fs
lcall
mov
insl
xchg
pop
fdivrl
sbb
pop
jp
and
xor
mov
scas
mov
add
mov
fs
sti
push
jp
mov
cvtps2pi
add
push
bound
mov
adc
js
sbb
mov
add
out
int
mov
adc
dec
in
pop
add
add
mov
add
scas
or
insb
pop
add
les
cmp
outsl
cmpsb
rcrl
test
sub
stos
xchg
shr
inc
in
push
push
lods
int
popf
lcall
fidivrs
scas
fistps
out
and
scas
sbb
enter
push
add
jle
movsl
lods
lcall
aad
sub
add
push
leave
jne
outsb
and
mov
add
push
cld
inc
or
iret
mov
dec
jne
cmp
mov
or
inc
add
mov
mov
jle
dec
pop
loopne
mov
gs
outsb
and
xchg
cmp
xor
pop
push
pop
cld
sub
jne
add
nop
add
lahf
cld
into
adc
mov
mov
imul
mov
jle
push
fcompl
mov
cmp
or
fsubrs
addb
cmpsl
inc
push
cwtl
repnz
lock
lahf
mov
negl
cli
out
scas
cmpsb
ret
lret
out
add
xchg
inc
fmul
bound
mov
jge
mov
mov
rolb
mov
mov
pop
imul
aad
cmp
jmp
dec
in
jns
xlat
add
mov
pop
or
add
mov
cmp
mulb
mov
dec
fisttpll
ja
je
into
mov
dec
mov
add
ret
lcall
das
dec
ret
xor
mov
iret
adcl
sub
ds
add
aaa
jle
gs
fstp
inc
int
mov
aam
push
int
adc
mov
pop
jmp
cmp
stc
fsts
out
mov
add
add
mov
jmp
add
pop
test
dec
dec
int
mov
mov
sahf
cmp
scas
xchg
lea
pushl
push
pusha
add
jg
arpl
js
add
add
mov
add
jecxz
inc
sbb
dec
mov
aas
and
cmp
ds
imul
xor
dec
adc
insb
or
movl
add
add
out
cmp
mov
push
int
addr16
fmul
dec
adc
jae
jge
add
mov
push
xor
sub
inc
into
xor
jne
dec
jno
jns
mov
add
sti
sbb
jge
add
mov
mov
testl
mov
int3
dec
xorl
dec
cli
in
scas
mov
mov
and
pop
xor
mov
dec
rcrl
add
movsb
cmp
cmpsl
mov
push
rorl
mov
inc
add
fisubrs
adc
mov
xor
xchg
stos
xchg
es
stos
adc
jmp
pop
pop
sub
stos
cmp
loop
mov
or
mov
xor
inc
pop
je
add
fimuls
mov
or
add
das
jmp
testl
cmpsb
mov
inc
and
and
inc
pop
dec
mov
dec
or
pop
xlat
loop
mov
pop
in
rolb
dec
jbe
add
iret
add
mov
sbb
cmp
push
mov
and
add
stc
imul
adc
repnz
gs
cli
pop
adc
mov
ror
call
add
std
loop
mov
or
stc
xchg
dec
dec
js
lds
add
add
push
add
hlt
scas
sub
insb
imul
push
repz
mov
xor
mov
outsl
adc
add
jae
cs
xlat
repz
and
mov
pop
pop
negb
into
mov
test
sub
xor
test
mov
mov
add
add
dec
or
loop
mov
mov
mov
xchg
adc
mov
repnz
mov
mov
out
pop
iret
loope
stos
dec
inc
stc
lcall
mov
add
sbb
add
jo
mov
mov
lea
inc
or
sbb
adc
mov
addr16
test
hlt
jnp
add
add
xor
mov
push
mov
js
add
aad
push
into
jmp
rcl
mov
push
loope
jns
fs
pop
cmc
jbe
in
aam
pop
mov
loope
add
sub
fmuls
sbb
add
int
addb
cmc
xor
add
add
outsl
cmc
mov
scas
push
jge
repnz
push
movsl
icebp
leave
xchg
mov
mov
pop
or
cmp
sti
fucom
rolb
sub
mov
cmp
or
movsl
sbb
add
popl
std
inc
push
cmp
sbbl
xchg
add
mov
loope
int3
clc
xchg
dec
xchg
mov
cmpsb
mov
cld
jne
xchg
jns
in
adc
lock
pop
imul
daa
lds
mov
ljmp
add
mov
or
sbb
cwtl
imul
add
push
test
cmp
dec
mov
mov
pop
hlt
and
pusha
add
fdivs
sub
cltd
push
xor
and
je
mov
add
xor
add
mov
adc
push
push
stc
outsl
add
out
addb
test
jno
add
xchg
daa
adc
ret
push
dec
fnstenv
mov
mov
mov
mov
pop
mov
movsb
sub
sbb
ljmp
xor
fldl
add
leave
xor
out
into
sbb
add
add
xchg
jno
scas
cld
int
cmp
jg
add
push
add
add
das
sahf
in
xor
push
popa
jmp
adc
loopne
mov
sub
add
lods
mov
sbb
xor
mov
sub
add
mov
lods
leave
sbb
lock
lcall
rolb
dec
pushf
ret
nop
add
or
add
mov
cltd
mov
pop
pop
ss
sbb
lds
out
mov
aas
pop
pushf
sbb
pop
pop
std
ret
andl
sub
push
lods
sub
sti
inc
stos
mov
add
mov
pop
ja
mov
ja
ss
inc
cwtl
and
mov
pop
push
adc
add
bound
mov
mov
pop
popa
cmp
in
add
lahf
movsl
arpl
ss
loope
movsl
jl
enter
xchg
mov
lods
int
bound
mov
repnz
loope
