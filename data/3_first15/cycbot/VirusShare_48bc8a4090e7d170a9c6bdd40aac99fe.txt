lods
jb
dec
xchg
inc
push
insl
or
sahf
xchg
push
test
add
out
cmp
add
pop
dec
pop
pop
dec
fwait
loopne
mov
mov
addb
add
mov
add
fsubr
out
imul
arpl
gs
cmp
and
mov
adc
mov
lods
fwait
and
jo
mov
mov
push
add
mov
mov
lret
add
xchg
push
ja
addb
test
enter
inc
cmp
sub
jmp
add
or
pop
xor
mov
clc
std
and
mov
add
mov
mov
jge
orl
in
addb
out
push
add
mov
mov
push
repnz
add
xor
mov
ret
push
add
imulb
cli
or
mov
add
mov
lret
push
dec
mov
addb
or
std
push
add
push
addb
inc
fstps
mov
and
mov
add
inc
dec
mov
mov
sub
daa
out
les
enter
sub
mov
mov
loope
add
lds
add
mov
sbb
add
mov
xor
mov
stos
and
mov
addr16
xlat
into
mov
ds
movsb
clc
and
lods
clc
out
inc
in
mov
test
cld
push
cmc
cltd
dec
movsl
ret
shrl
sbbl
cs
es
mov
mov
mov
aad
test
add
lret
stc
xchg
rcr
test
or
lods
xor
mov
dec
fdivrl
ret
mov
loopne
mov
xchg
rolb
mov
add
mov
xchg
add
mov
add
mov
in
mov
xor
ljmp
add
pop
mov
xor
and
insb
dec
push
adc
mov
clc
pusha
add
jbe
mov
mov
push
jae
mov
outsb
dec
test
adc
inc
add
pop
add
orl
cmp
xor
lea
das
mov
jb
mov
add
sbb
idivb
add
outsb
add
add
stos
sub
or
mov
call
adc
mov
pop
push
add
into
insl
neg
stc
mov
inc
add
add
aas
popf
inc
add
jns
sbb
add
dec
pop
scas
les
xchg
jecxz
ss
lret
in
sarl
mov
outsb
pop
stc
pop
add
lods
fstl
imull
mov
push
add
mov
imul
mov
add
dec
lods
xchg
add
rolb
mov
pop
mov
jbe
adc
movsb
sti
adc
nop
add
add
std
jg
icebp
jecxz
mov
shll
fildl
adc
add
mov
and
mov
adc
mov
jnp
push
out
daa
jecxz
mov
or
inc
xor
xchg
jge
add
mov
add
arpl
dec
ret
lods
mov
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
stos
add
mov
int3
in
lds
mov
sub
cmp
in
addb
jle
jle
mov
enter
mov
mov
cltd
jo
mov
mov
and
mov
mov
and
xchg
add
pop
pop
scas
lods
fstps
addl
lock
sahf
repnz
mov
sub
add
mov
cltd
lret
push
ja
dec
imul
movsb
addb
cmp
fsts
add
or
or
xor
add
mov
xchg
add
ljmp
cmp
test
sbb
sub
mov
push
add
add
dec
out
fistps
sbb
mov
std
aam
jbe
ja
mov
sbb
and
mov
sub
mov
ret
loopne
mov
cmpl
and
xor
jo
mov
stos
pop
jnp
xchg
jmp
cmc
sub
out
dec
cmp
pop
lds
add
mov
jbe
popf
lock
jo
mov
divl
outsb
jne
mov
add
lea
and
cmpsl
shl
nop
add
mov
pop
dec
fcomp
push
out
xchg
ja
stc
and
lahf
xchg
adc
mov
lret
add
in
add
add
fists
add
mov
mov
lret
or
scas
cld
outsl
xor
lds
or
out
pop
addr16
fiadds
mov
test
mov
or
bound
mov
xchg
in
ds
bound
mov
out
fnstenv
out
cmp
or
mov
push
mov
xchg
or
mov
frstor
mov
mov
add
int3
jp
divb
mov
xchg
arpl
dec
jbe
jo
mov
jae
jae
or
mov
mov
testb
into
and
mov
mov
loop
mov
or
sbb
mov
int
add
pop
cmp
mov
cmp
add
int
rolb
mov
out
scas
jp
loop
mov
xor
ja
sub
jle
mov
add
mov
or
pop
aad
fisubrs
addr16
add
sub
pushf
enter
xchg
lahf
adc
mov
stos
push
jbe
add
adc
mov
stos
hlt
lahf
cmp
mov
cwtl
add
mov
int3
mov
dec
xchg
std
and
mov
mov
loop
mov
mov
add
cmp
xchg
std
fistpll
xor
mov
adc
mov
mov
addb
int
cli
ja
addl
mov
leave
add
adc
push
mov
cmc
sub
mov
mov
add
jg
sub
and
mov
jge
add
cmp
inc
add
mov
mov
xchg
sldt
mov
mov
sbb
jp
mov
xchg
mov
leave
int
push
testl
xchg
mov
loope
fsubl
add
clc
mov
cmp
cmp
inc
test
in
inc
push
cmc
or
add
push
xor
inc
aad
icebp
int
mov
add
je
lret
rolb
mov
inc
xchg
fisttpll
sahf
sub
pop
xlat
mov
testb
and
xor
mov
mov
sbb
icebp
mov
hlt
cld
mov
mov
shl
imul
scas
adc
add
dec
shll
mov
add
test
in
add
xchg
inc
test
jge
add
data16
mov
addb
sub
aam
ljmp
or
or
call
mov
add
mov
cmp
add
mov
xor
mov
xchg
add
add
test
xchg
add
xchg
push
addb
mov
fcoms
push
nop
add
cltd
movsb
or
sub
xchg
pop
popf
ret
push
fldenv
mov
dec
xor
inc
add
aam
cmp
push
and
mov
popa
test
cli
push
add
mov
inc
or
mov
xchg
pushf
xchg
pop
arpl
fs
mov
inc
mov
jle
jb
mov
xchg
fbstp
cltd
addb
rcll
pop
cmp
loope
out
inc
es
mov
jns
mov
fcompl
lds
add
jne
into
jns
aam
cli
mov
mov
mov
cmp
add
mov
add
jne
and
int
sbb
mov
push
mov
adc
loop
mov
mov
pop
addb
inc
arpl
inc
lret
mov
repnz
mov
xchg
mov
push
sub
shll
mov
mov
add
and
mov
sarl
int
sarl
inc
ja
fnstenv
cmp
jb
mov
outsl
mov
mov
mov
add
popf
pop
dec
or
and
mov
xlat
jno
cmp
add
dec
push
pop
dec
cli
in
inc
mov
mov
fcmove
and
mov
add
xor
mov
mov
mov
adc
int
aas
mov
mov
movsb
mov
insl
cwtl
xor
pop
sbb
add
pop
cmp
bound
mov
lahf
mov
adc
add
mov
or
out
jnp
lock
add
jo
mov
xchg
je
rolb
call
mov
and
faddl
loop
mov
stos
sbb
sbb
mov
sub
jnp
add
add
cmp
mov
sub
mov
mov
or
sarl
sarl
lahf
std
pusha
add
push
popw
aaa
jbe
sub
push
cmpsl
iret
xchg
and
mov
jb
mov
mov
inc
add
mov
mov
sti
inc
popa
mov
mov
cltd
notl
cmp
out
jno
xor
js
and
mov
mov
add
cmc
repz
fistpll
mov
add
ja
mov
or
xor
arpl
lret
inc
addb
cli
mov
jbe
xor
mov
in
out
add
mov
add
and
adc
push
add
in
add
mov
ds
enter
test
add
add
aas
aaa
inc
add
push
add
ret
movsl
out
sbb
xchg
add
mov
pop
cmpl
add
lcall
mov
lret
pusha
add
mov
inc
mov
movsb
sub
scas
movsl
sub
lods
xchg
xchg
testb
stc
lahf
inc
inc
fnstsw
mov
and
add
pop
test
add
push
aaa
dec
daa
aad
test
in
cmpsb
push
add
addr16
adc
sub
xor
mov
add
xchg
mov
push
cmpsb
gs
shl
mov
mov
lahf
fisubl
pop
add
es
jno
add
cmp
add
mov
push
add
lcall
xor
mov
dec
cmp
and
mov
ss
enter
add
cmp
test
add
mov
pop
imul
jecxz
call
jo
mov
mov
jmp
in
add
xchg
adc
sbb
sahf
mov
or
jg
pop
cmp
add
cmp
inc
cmp
cmp
push
mov
sub
add
and
add
imul
inc
adc
mov
add
stc
sub
add
adc
mov
lock
and
repz
dec
push
mov
outsl
test
xchg
jecxz
fidivs
or
push
sub
mov
leave
and
xor
test
js
addb
mov
add
mov
inc
add
add
mov
mov
scas
fimuls
add
mov
cmpsb
pop
ret
cmp
call
bound
mov
push
add
mov
pop
sub
mov
mov
pop
mov
stc
lock
jl
cmp
and
add
int3
cwtl
pop
ss
xchg
cwtl
pop
nop
add
xor
add
mov
aad
mov
inc
mov
inc
add
mov
loopne
mov
imul
in
xor
add
in
add
in
xchg
lea
sub
mov
ja
xor
mov
push
sarl
dec
xor
lods
ja
imul
add
add
mov
mov
jnp
call
pop
mov
sbb
pop
aam
add
mov
cld
gs
mov
mov
inc
scas
inc
cmpsb
adc
mov
loope
fisubrl
mov
sub
xor
mov
mov
pop
push
mov
movsb
inc
orl
sub
add
and
mov
dec
lock
mov
cmpl
cli
inc
jae
pop
cli
add
mov
and
sub
setg
adc
mov
xlat
jle
lock
pop
dec
jnp
repnz
pop
jno
fwait
dec
std
popa
jmp
cld
jecxz
xchg
sbb
mov
push
adc
addb
sub
xchg
out
sub
cs
mov
inc
jge
data16
nop
add
jmp
mov
sbb
pushf
rorl
mov
jmp
stc
jecxz
jecxz
add
mov
fcmove
jbe
add
sbb
fstpt
icebp
cmp
rolb
mov
movsl
push
mov
add
jg
or
mov
dec
aam
push
add
mov
ljmp
dec
sbb
inc
inc
mov
into
mov
xchg
xchg
add
js
add
mov
in
push
add
mov
add
add
lods
sub
lea
pushl
jo
mov
daa
inc
dec
push
add
and
add
rorl
mov
lock
jge
add
test
imul
in
fistl
inc
sub
add
add
fidivrl
xchg
and
add
jnp
adc
pushf
test
movzbl
xor
xchg
add
scas
fldl
insl
or
mov
leave
loope
jno
ret
addb
in
and
push
add
leave
addb
pop
aam
jo
mov
inc
pusha
add
mov
loopne
mov
out
in
adc
mov
jl
inc
jp
arpl
aam
popf
outsb
hlt
adc
mov
fsubs
mov
sub
add
pop
sbb
negl
int3
push
push
sbb
sbb
inc
add
out
in
xor
add
mov
les
icebp
mov
popa
dec
rolb
mov
scas
fs
add
mov
test
arpl
std
or
mov
xchg
and
outsb
aam
add
jae
add
add
pusha
add
and
hlt
rolb
mov
into
mov
repz
add
jo
mov
ljmp
icebp
andl
int3
outsl
jb
mov
sub
rolb
jae
jmp
add
test
cmp
cmp
mov
mov
test
decl
mov
popl
in
movsb
ljmp
repz
repnz
pusha
add
xchg
mov
add
aam
repz
bound
mov
inc
add
mov
fistpll
or
and
ds
das
rolb
mov
gs
mov
test
add
lret
adc
mov
mov
add
enter
outsl
in
mov
jo
mov
push
ds
mov
add
mov
pop
int
add
add
mov
icebp
fisubrs
mov
mov
mov
dec
fdivl
add
push
sbb
fwait
dec
dec
inc
addl
add
mov
lcall
mov
fimull
add
dec
std
mov
out
ficompl
out
add
test
push
and
arpl
push
adc
es
leave
filds
loope
push
fildll
adc
imul
mov
mov
fcmovnbe
mov
push
jo
mov
add
test
lock
xor
mov
xchg
adc
mov
popa
xchg
mov
add
inc
add
mov
push
add
jg
push
jecxz
cmp
add
mov
cmc
mov
add
add
dec
xchg
pop
sub
inc
roll
mov
out
pushf
mov
bound
mov
fadd
add
in
adc
mov
adc
mov
rolb
shl
pop
or
outsb
clc
pop
or
xchg
out
add
mov
insl
fsubs
mov
mov
mov
add
cltd
mov
nop
add
jmp
sti
adc
lds
mov
mov
mov
popa
mov
mov
add
add
push
scas
xor
mov
push
add
cmp
pop
adc
mov
mov
adc
scas
mov
xor
add
or
mov
xchg
insl
mov
mov
iret
add
pop
sbb
push
lret
into
add
pushf
adc
mov
and
mov
cmpsb
ss
cmc
sbb
mov
xchg
pop
mov
pop
xchg
lcall
mov
and
rol
pop
fisubl
add
jo
mov
adc
mov
add
sbb
xchg
mov
out
inc
mov
clc
add
mov
inc
cwtl
jmp
bound
mov
mov
mov
sbb
add
mov
mov
rolb
mov
add
add
add
add
sbb
mov
call
sarl
dec
pop
or
dec
xchg
add
jmp
xor
push
fmuls
pop
xor
mov
mov
sbb
and
fwait
les
xchg
adc
mov
pop
scas
jo
mov
call
es
jno
jle
mov
fdivr
pusha
add
pushf
mov
inc
add
int3
sub
jb
mov
int3
cli
imul
and
je
add
xchg
dec
pop
push
add
movsb
lds
sahf
sub
mov
add
push
and
mov
add
pushfw
pop
jl
mov
sbbl
out
sbb
adc
mov
add
add
add
divl
fs
test
jnp
pusha
add
clc
pop
incl
add
call
xchg
out
mov
dec
push
shrl
enter
xor
pop
sbb
shr
notb
clc
lcall
xchg
mov
dec
lea
out
mov
mov
lods
sti
mov
cltd
shll
mov
loope
push
mov
mov
rorl
cwtl
jb
mov
sahf
sbb
int
rolb
mov
addb
add
cmp
pop
xor
mov
inc
mov
cs
mov
sub
clc
pop
rolb
std
xor
pop
sub
fwait
test
adc
adc
add
mov
call
mov
rolb
mov
dec
je
std
ljmp
lret
nop
add
dec
mov
add
mov
scas
mov
adc
inc
dec
and
adc
add
icebp
sbb
shll
add
ja
lock
push
xchg
clc
clc
dec
js
fndisi(8087
add
add
mov
addb
mov
setne
repnz
mov
mov
push
pop
ja
add
cmp
lahf
xor
mov
xchg
in
add
inc
dec
daa
jns
nop
add
cmp
add
test
add
and
mov
add
dec
mov
xchg
sub
pusha
add
xchg
ret
adc
ret
pop
mov
fisubrs
xchg
add
push
pop
stos
push
test
pop
and
mov
enter
add
jle
dec
mov
nop
add
pop
mov
add
mov
xor
jge
aam
cmpsl
out
dec
jb
mov
sub
arpl
fmulp
fdivs
dec
push
jbe
repnz
add
lcall
sbb
mov
xchg
add
mov
pop
aad
cmp
in
nop
add
push
pop
adc
pushf
mov
jns
add
adc
inc
add
or
leave
jne
dec
push
add
jle
push
mov
negl
xchg
call
test
fldt
cmc
imul
mov
int3
jge
add
sbb
inc
add
ss
mov
loopne
mov
jns
insl
push
xchg
mov
xchg
add
mov
das
rolb
mov
dec
sar
aaa
jl
lahf
inc
add
sbb
testb
push
stos
pop
add
add
fiaddl
in
sbb
cmp
add
test
repz
sbb
add
adc
mov
add
sbb
xor
mov
pop
mov
jnp
fadds
mov
jmp
and
mov
lahf
xchg
xor
call
jns
mov
add
add
negb
mov
sub
loop
mov
xchg
cmp
cmp
sbb
lods
push
fdivs
xor
pop
mov
xchg
pop
adc
mov
add
xor
movsb
xchg
add
sbb
pop
faddl
mov
dec
sbb
dec
lret
add
mov
inc
pop
repz
bound
mov
das
jle
nop
add
inc
add
test
mov
mov
inc
in
xchg
data16
mov
lret
das
es
sti
mov
adc
inc
add
mov
add
mov
rolb
lea
or
roll
fwait
movsb
xchg
fldl
add
mov
loop
mov
cmp
cli
testb
xlat
lods
cmp
stos
dec
push
push
scas
ret
negl
mov
loopne
mov
mov
mov
and
mov
sar
rolb
adc
or
push
add
cli
movsb
adc
popa
jg
loope
addb
clc
std
repz
fisttpl
stos
push
push
jb
mov
add
pushf
scas
push
mov
mov
mov
pop
ret
stos
je
mov
addb
lods
xchg
add
int
add
xor
mov
mov
dec
ljmp
aas
das
mov
mov
mov
push
push
test
add
adc
mov
jle
fnstsw
or
add
bound
mov
addb
xor
dec
cmp
cwtl
cltd
lahf
lds
outsl
iret
cmp
gs
dec
int3
inc
sti
jo
mov
add
testl
push
fsubrs
add
mov
xlat
daa
inc
jmp
out
in
insb
mov
or
and
sub
mov
js
add
and
mov
mov
lods
aaa
adc
add
pusha
add
push
xor
mov
in
inc
add
and
sbb
push
pop
dec
cmp
aam
jp
dec
xchg
ja
add
add
mov
mov
and
jae
fnsave
add
sub
mov
bound
mov
repz
xor
mov
repz
jecxz
std
sbb
fs
push
xchg
lods
in
sbb
push
pop
push
sbb
or
xor
insl
sbb
jno
xor
mov
dec
push
and
sub
add
mov
add
pop
jle
adc
in
mov
push
test
cmpsl
xchg
imul
dec
test
or
mov
add
add
mov
add
add
add
rolb
mov
push
les
bound
mov
popl
adc
cmp
lea
add
add
xchg
daa
add
mov
push
pop
mov
add
rolb
mov
add
push
mov
movsl
mov
movsb
xchg
jbe
dec
outsl
cmpsl
aas
out
mov
sbb
mov
sbb
push
rcl
mov
dec
cmpl
loope
daa
lret
mov
js
lcall
add
or
mov
mov
gs
and
shll
jle
cmp
in
dec
das
mov
mov
add
push
mov
mov
adc
add
add
xor
mov
add
leave
sbb
inc
inc
add
push
push
push
add
addr16
mov
mov
push
out
mov
sub
rolb
or
mov
mov
lods
das
mov
and
adc
cmpl
inc
add
in
dec
mov
or
jne
jle
cmpl
add
pop
mov
mov
imul
add
mov
jle
fldcw
cmpsb
sbb
jecxz
add
add
mov
and
cld
popf
pop
lahf
inc
pushf
mov
cmp
add
fidivrs
mov
add
and
iret
lret
out
push
lcall
jb
mov
jbe
push
lea
dec
mov
add
mov
sbb
mov
jae
mov
add
or
mov
xor
mov
filds
movsb
mov
xchg
int3
fdivrl
pushf
lret
mov
cmp
loop
mov
mov
or
add
mov
xchg
ja
jl
rolb
mov
add
pushf
push
int3
test
sbb
aas
stos
push
mov
mov
xchg
popf
xor
daa
lds
scas
or
subl
fcmovb
jns
loopne
mov
add
sbb
pop
inc
fistpll
pop
and
in
fisubs
mov
aam
inc
add
sbb
jl
int3
xor
add
add
jae
mov
xor
mov
fldpi
lahf
arpl
inc
add
test
cli
pop
lret
les
les
mov
add
shll
add
lret
mov
sti
mov
push
sub
mov
add
pop
add
cmp
loope
ja
ljmp
je
lock
inc
push
push
jo
mov
pop
xor
mov
add
add
add
leave
cmovl
mov
cmpsl
cmp
push
add
add
mov
mov
cmp
xor
addb
nop
add
add
outsb
fwait
push
stos
roll
test
inc
lock
idivl
jne
sbb
mov
sti
lahf
pop
adc
mov
jg
xchg
mov
mov
add
mov
movsb
mov
stos
bound
mov
add
mov
jnp
addb
into
cltd
dec
adc
mov
sub
jne
lcall
add
lret
mov
xchg
arpl
mov
movsb
fisubl
arpl
mov
add
inc
add
dec
mov
cld
sbbl
push
adc
mov
and
add
adc
add
lock
and
call
add
add
pop
aad
add
loope
add
out
mov
mov
adc
add
cs
mov
jmp
ficoml
insb
mov
stc
dec
rcrl
jle
or
xchg
add
add
sbb
ret
into
rolb
mov
mov
cwtl
add
add
mov
imul
fwait
cs
loop
mov
jecxz,pn
lea
mov
mov
mov
enter
cs
cld
into
movsl
sub
add
dec
pushf
ljmp
lds
cmp
add
mov
xor
add
mov
jbe
aam
xchg
xor
mov
or
fwait
lods
inc
jp
mov
mov
add
add
les
rorl
add
pop
add
mov
jecxz
sarl
ret
sub
sti
dec
test
mov
icebp
js
les
mov
int3
mov
fidivrl
rolb
mov
push
sub
adc
inc
outsl
movsl
fisttpll
ss
dec
fcoms
inc
push
add
int
adc
pop
adc
add
push
lods
mov
nop
add
push
push
xchg
adc
inc
add
jno
add
push
leave
ds
xchg
int
pop
test
pop
daa
cmpsb
mov
fmull
test
cmc
mov
sbb
rolb
mov
xchg
arpl
rcl
add
mov
add
nop
add
pop
push
dec
pop
adc
inc
sub
stos
xor
mov
xor
in
xor
pusha
add
xor
sbb
loop
mov
cli
mov
rolb
mov
mov
mov
fisttpl
sbb
daa
loopne
mov
add
jg
xchg
ds
mov
cmc
jg
and
or
mov
add
fnstsw
push
test
add
and
mov
vpxor
mov
rolb
mov
jae
iret
negb
repz
mov
fsts
mov
mov
nop
add
adc
adc
lods
mov
adc
mov
add
sub
pop
pop
lock
jmp
mov
jo
mov
movsl
push
and
mov
movb
fbld
push
std
rolb
mov
jns
adc
mov
fisubs
dec
stc
arpl
mov
sahf
inc
sbb
int
pop
insl
lret
jl
add
or
mov
imul
mov
addb
mov
mov
scas
nop
add
or
mov
aad
lea
lret
or
and
xlat
cmp
hlt
repnz
xchg
fcmovnb
add
je
out
aad
add
xchg
add
arpl
in
push
pop
dec
pop
je
and
mov
mov
push
data16
jne
push
ss
sub
cmp
inc
sbb
add
bound
mov
fldl
add
out
ds
jg
cmc
mov
mov
cmc
mov
add
add
jnp
sbb
jge
add
cmp
mov
mov
scas
add
dec
pop
cmp
cli
xor
repnz
push
sbbl
mov
fnstsw
int3
andl
fildll
sub
jecxz
sub
xlat
xor
mov
cmp
bound
mov
mov
popf
jle
add
mov
mov
fimull
sub
adc
mov
stos
pop
ficomps
pusha
add
pop
addb
mov
hlt
outsb
inc
clc
popa
sbb
mov
pop
mov
mov
add
hlt
or
and
ja
xor
cmpsb
lretw
push
jb
mov
int3
pop
repz
jo
mov
mov
cli
or
addb
sbb
data16
arpl
mov
cmp
mov
out
in
fdivl
and
je
push
inc
add
sbb
fwait
add
xchg
add
push
mov
rolb
stos
data16
push
pusha
add
add
out
mov
and
divl
gs
sub
fildl
sti
out
xchg
jnp
add
in
or
add
mov
dec
icebp
sbb
pop
mov
iret
bound
mov
aas
aas
mov
add
lea
sbb
lahf
repz
or
or
cmp
cli
testb
add
lods
aas
inc
add
add
add
idiv
out
mov
aaa
inc
add
int3
jnp
jge
cmp
in
outsb
xchg
repnz
mov
mov
add
push
stc
xchg
leave
pop
pusha
add
add
inc
mov
pop
je
mov
add
add
inc
xor
mov
sbb
mov
add
gs
pop
and
popa
pop
gs
cmpsb
lods
jnp
cmp
jp
enter
ret
xor
mov
add
mov
cmp
arpl
into
sbb
inc
scas
push
or
push
cmp
aas
xchg
daa
idiv
lds
or
push
mov
shll
cmp
rolb
xor
mov
add
add
jp
dec
adc
out
popf
mov
add
stc
addb
data16
lock
mov
add
mov
inc
inc
out
sbb
xor
xor
mov
mov
add
mov
pusha
add
mov
xchg
dec
das
enter
andl
lret
push
mov
add
mov
jmp
xchg
sub
xchg
cmp
mov
out
pop
or
loop
mov
sub
cmp
jge
movsb
cmp
pop
xor
fildl
xor
pop
adc
cld
outsb
sub
xchg
push
mov
leave
jmp
fwait
pop
ret
out
pop
fidivl
mov
mov
cmp
inc
add
jno
dec
sbb
out
in
std
xor
mov
mov
nop
add
mov
mov
es
pop
iret
loop
mov
cmp
nop
add
xchg
sbb
sbb
mov
mov
xor
mov
push
add
mov
icebp
ds
pmaddwd
addb
mov
loope
or
inc
sbb
add
pop
stos
mov
fidivl
in
add
add
push
es
inc
out
addb
sub
rolb
mov
add
mov
popa
out
pop
imulb
add
push
imul
imul
lods
test
in
sbb
add
mov
mov
jl
jns
loopne
mov
popa
stos
aaa
ss
add
pop
cwtl
iret
and
fcomip
aaa
repz
test
mov
add
insb
divps
push
mov
add
and
mov
sbb
jne
scas
int3
orl
aad
mov
jno
add
test
and
lock
sub
and
add
add
mov
add
cs
inc
cmp
rolb
mov
scas
fs
hlt
cmp
stos
lock
adc
mov
stos
movsb
stc
rolb
mov
cmp
stos
xchg
insb
pop
or
dec
lea
mov
mov
or
pop
aaa
std
xor
sbb
addb
popf
inc
in
movsb
mov
add
or
loop
mov
dec
aas
add
dec
lret
dec
mov
fistps
add
cmp
sub
pop
inc
add
data16
xchg
stos
mov
int
stc
aaa
cmp
add
dec
js
mov
idivl
push
loope
add
addb
inc
out
mov
inc
mov
mov
mov
cmp
push
dec
loope
push
add
jle
gs
mov
add
push
sbb
and
mov
pop
cltd
shll
add
xchg
je
add
add
inc
add
jno
add
mov
add
xor
mov
push
add
adc
faddl
out
fstl
adc
mov
fbstp
rolb
test
xor
mov
add
mov
xchg
fs
mov
mov
add
mov
mov
sbb
dec
xor
push
add
mov
add
xchg
addb
outsb
jl
jbe
rol
add
add
add
jno
push
inc
sub
push
pushf
xchg
inc
dec
cmp
cmp
mulb
add
addr16
adc
mov
and
mov
push
cltd
push
push
repnz
add
push
jecxz
outsl
xchg
int3
rolb
mov
dec
jbe
or
jge
subl
add
mov
in
rolb
mov
add
adc
mov
fnstcw
pop
and
mov
add
or
mov
dec
and
or
jge
add
repnz
mov
aam
add
mov
lcall
popa
xchg
add
jle
mov
add
cmpsl
cmp
lods
or
test
jge
or
outsl
push
push
lahf
push
or
xor
mov
jmp
add
sub
adcl
sub
adc
mov
mov
mov
sub
add
in
inc
fcmovbe
add
jl
std
rolb
lock
fimull
into
int
add
jecxz
add
mov
js
call
mov
mov
add
xchg
jle
mov
push
in
xchg
mov
add
jb
mov
add
mov
or
loop
mov
jbe
pop
idivl
mov
data16
inc
std
fwait
insl
lahf
in
adc
mov
add
mov
add
mov
lret
or
dec
adc
call
inc
enter
loop
mov
imul
fidivrl
mov
rolb
mov
push
add
out
popf
mov
mov
add
push
repnz
mull
mov
dec
jmp
roll
add
push
inc
sarl
xchg
sarl
add
add
xchg
fildll
jp
das
daa
stos
dec
les
mov
mov
push
add
push
add
mov
cld
pop
fcompl
inc
add
imul
add
mov
je
add
inc
inc
xor
jb
mov
mov
mov
ret
add
add
mov
pop
and
mov
mov
xlat
jle,pt
push
loopne
mov
jbe
inc
mov
out
cmp
add
mov
cmc
xchg
cwtl
divb
dec
push
add
sub
dec
mov
addl
push
add
mov
mov
lds
cltd
inc
pop
dec
xchg
js
cmp
mov
fs
mov
add
xchg
xchg
pusha
add
add
mov
in
cmpsl
add
dec
mov
addl
pop
cmp
push
xor
mov
loope
cli
inc
mov
jae
fsub
add
sti
ret
pop
pop
mov
dec
fs
adc
mov
popa
int
jp
push
lods
das
push
iret
fdivs
gs
data16
mov
inc
outsb
repnz
jl
mov
jbe
add
add
push
add
repnz
jge
mov
push
mov
add
fwait
int3
rolb
mov
dec
or
xor
mov
sbb
xchg
or
pop
push
ja
dec
ja
les
and
mov
push
add
mov
imul
push
fcomps
btr
mov
mov
inc
jae
sub
out
pusha
add
add
xlat
int
push
in
out
mov
incb
nop
add
or
jno
adc
push
and
mov
jae
std
mov
mov
into
nop
add
inc
mov
dec
in
imul
test
dec
call
xor
jg
add
loope
xlat
movsb
addr16
add
mov
cwtl
scas
mov
mov
add
mov
mov
sbb
push
mov
mov
cmp
xchg
xchg
add
xchg
xor
push
hlt
xchg
popa
pop
mov
stos
push
add
mov
rolb
mov
mov
adc
mov
add
mov
lods
ret
filds
add
popa
fsubl
out
mov
xor
sbb
mov
imul
mov
aam
sbb
bound
mov
mov
mov
and
mov
add
aaa
add
mov
mov
call
addb
inc
add
add
add
add
mov
cmp
test
add
mov
mov
lret
insl
dec
pop
cld
dec
ret
xchg
repz
out
mov
dec
lcall
push
mov
sub
xor
mov
jg
add
std
sbb
mov
int
add
pop
and
mov
mov
mov
rolb
mov
movsb
dec
sbb
add
jae
xchg
push
mov
mov
fwait
stos
pop
cli
add
mov
aam
aaa
aas
mov
add
xor
jae
pop
sub
daa
cltd
xor
mov
mov
in
cmp
arpl
add
jge
ss
adc
int3
addb
mov
cmp
gs
mov
call
mov
mov
in
iret
insb
add
mov
jb
mov
mov
push
add
xor
scas
gs
jns
add
mov
pusha
add
addb
jno
cmp
aad
pop
jnp
loope
push
mov
or
pop
jnp
add
jg
add
sbb
push
inc
sbb
add
push
adc
add
in
shrl
js
gs
imul
mov
repz
in
outsb
repnz
mov
dec
push
jecxz
int
add
fnstenv
rcrl
pop
popaw
popf
fisttpl
sti
nop
add
shl
add
in
add
fs
leave
addb
or
rolb
mov
mov
push
mov
mov
jmp
jnp
push
sub
or
cmp
and
mov
mov
mov
loope
mov
mov
add
xchg
out
xchg
mov
in
add
xchg
add
or
mov
add
mov
jnp
mov
ljmp
cmp
jno
int3
into
mov
add
pop
xchg
xlat
stos
or
aad
hlt
pop
rolb
mov
popf
mov
add
mov
loope
loop
mov
enter
jae
push
xchg
jmp
mov
adc
mov
add
pop
les
cmp
mov
fisttpll
jb
mov
loopne
mov
sbb
cmp
sub
xor
int
mov
mov
sub
mov
mov
push
mov
pop
adc
adc
xchg
mov
cld
push
jne
add
aam
cmpsb
sub
pusha
add
or
add
ficompl
fcomps
or
addb
outsb
xor
jg
inc
add
and
mov
fdivs
mov
loopne
mov
in
push
pop
xchg
mov
mov
hlt
mov
xchg
call
add
inc
stos
sub
jne
add
adc
out
into
lret
add
out
pop
and
jne
add
push
dec
pushf
mov
nop
add
shrl
add
and
xchg
add
add
cmp
add
arpl
mov
jnp
scas
imul
outsl
xchg
arpl
adc
mov
mov
jne
push
mov
ret
ret
inc
add
xchg
popf
ss
sub
add
inc
aas
jl
fwait
movl
inc
mov
pop
xchg
lar
mov
xor
ljmpw
jb
mov
sti
shll
fwait
in
push
ljmp
add
push
stos
xchg
push
xor
mov
add
leave
out
jb
mov
iret
daa
pop
and
mov
mov
add
add
movsb
out
jecxz
add
mov
pop
xor
or
cmp
mov
add
insl
cmp
xor
cs
test
jbe
loop
mov
cmpsl
das
mov
fwait
ret
rolb
mov
test
jno
lcall
aam
dec
xchg
pop
push
lods
lea
cmpsb
jecxz
movsb
stos
push
or
lods
notl
xor
mov
adc
mov
ja
pusha
add
lock
add
movsl
iret
dec
sbb
cmp
dec
out
cmp
add
push
aam
dec
jecxz
lret
loop
mov
cmp
sub
mov
mov
jge
lahf
jle
not
add
movsb
xor
mov
stos
pop
dec
mov
pusha
add
es
pop
pop
xchg
add
cwtl
cli
add
nop
add
mov
add
adc
jge
rolb
xchg
xor
mov
clc
pop
stos
mov
add
mov
loop
mov
push
jns
popa
pop
push
pop
xlat
insl
popl
popa
sub
movsl
icebp
fwait
loope
js
icebp
inc
negl
lds
jge
mov
int
add
stc
xor
mov
repnz
xor
mov
push
add
mov
sbb
cmpsb
lcall
xchg
cmpl
dec
dec
mov
aas
fcomps
xor
scas
add
add
fwait
test
test
mov
push
push
inc
xchg
mov
call
and
pop
inc
repnz
add
ret
adc
ret
sub
pop
jecxz
add
call
mov
mov
mov
add
movsb
pop
stos
sti
lock
ffreep
out
adc
mov
mov
jge
and
mov
push
push
sub
add
mov
add
add
jnp
add
je
add
aad
mov
mov
and
icebp
mov
inc
lock
jl
les
mov
cmc
xchg
pop
scas
cmp
cltd
arpl
xlat
negb
addb
mov
and
mov
std
js
jae
sbb
outsb
dec
enter
mov
and
test
adc
mov
mov
mull
rcrl
push
mov
js
add
outsb
ret
in
aam
mov
decb
or
loopne
mov
es
push
mov
add
jmp
or
add
sub
push
js
sti
mov
add
or
mov
mov
jecxz
es
add
sub
add
mov
faddl
xor
mov
fisttps
imul
stos
cmpsl
into
sbb
aad
xor
mov
push
lods
iret
mov
in
mov
mov
inc
add
cmp
repnz
mov
add
ss
lods
push
jge
xlat
int3
test
jle
jae
pushf
ffreep
ror
xor
popa
push
add
rolb
mov
mov
ss
push
or
mov
je
add
scas
xchg
mov
shll
jle
scas
inc
add
mov
iret
enter
mov
jae
pop
mov
pop
ja
jbe
dec
sbb
scas
sbb
mov
xchg
into
ss
adc
mov
inc
aas
cmc
or
mov
mov
xlat
xor
fwait
dec
bound
mov
jecxz
adc
sub
inc
flds
mov
add
xor
mov
lds
mov
stc
add
mov
shll
ja
cmp
jmp
cmp
addb
fidivs
in
mov
add
cmp
cs
loopne
mov
test
jns
mov
add
add
in
leave
jno
mov
mov
mov
inc
je
cmp
cld
bound
mov
leave
mov
jecxz
add
rcrl
xchg
add
jne
add
fisttpl
and
and
add
shll
xlat
ret
jns
ret
sbb
sub
adc
add
pop
push
add
mov
aam
fadd
lret
add
cmc
mov
push
add
mov
cmp
pop
mov
mov
lcall
add
push
aaa
mov
repnz
push
sub
xchg
movsb
mov
xchg
incl
daa
inc
cmp
dec
ja
add
mov
mov
int3
fwait
sbb
dec
fcomi
push
mov
dec
test
jae
add
pushl
das
dec
xchg
push
mov
mov
fldenv
jp
mov
push
fstl
add
or
gs
add
mov
dec
sbb
add
dec
fisubl
rolb
and
mov
or
decb
dec
mov
mov
ss
add
cmp
xchg
outsb
stc
xchg
cmpsl
int
mov
cwtl
data16
daa
mov
push
cmp
shll
xor
sbb
bound
mov
mov
das
test
jne
add
idivb
mov
xor
add
in
add
popf
xchg
out
adc
push
cmp
mov
pop
test
addb
pop
cltd
dec
hlt
xchg
ja
aas
cld
pop
cmp
js
add
pop
fxch
mov
fsubrl
mov
inc
adc
mov
push
jmp
pop
fwait
pop
lods
inc
loope
push
and
jae
fmuls
test
stos
xchg
add
mov
adcl
mov
fs
add
rcl
mov
cld
dec
mov
in
das
stos
pop
movl
xor
mov
lods
lea
icebp
bound
mov
scas
in
movsl
roll
adc
mov
in
sbbl
lock
mov
divb
out
mov
xorl
sub
das
and
mov
les
xchg
insl
mov
addb
adc
mov
lods
scas
rolb
push
repz
mov
cwtl
lea
fwait
mov
fucomi
fidivl
add
jns
sub
out
push
stc
lods
fnsave
mov
aad
add
add
mov
and
imul
aam
fsubl
xor
mov
or
add
mov
mov
fstpl
rep
addr16
mov
dec
scas
loope
mov
popf
stc
movsb
icebp
fistl
adc
mov
sub
fimuls
inc
add
outsl
decl
add
inc
fxch
xchg
shl
lcall
dec
pop
sub
and
mov
aad
jl
and
mov
jecxz
add
mov
dec
jp
jmp
adc
add
cmp
add
scas
out
inc
mov
adc
push
xchg
aad
add
mov
mov
pop
dec
inc
sub
add
mov
add
sbb
add
mov
jge
push
mov
mov
sub
push
or
mov
mov
and
mov
cmp
add
hlt
cld
es
add
add
and
mov
mov
add
adc
add
mov
add
add
pop
inc
jp
dec
aad
sub
pop
aaa
lcall
cmpsl
sahf
xor
mov
insl
adc
mov
rolb
or
dec
and
mov
sti
daa
fndisi(8087
push
add
ja
pop
jmp
mov
imul
ret
jo
mov
and
iret
out
shl
add
pop
enter
xchg
imul
adc
cmpsb
add
imul
xor
mov
add
sub
mov
lcall
xchg
add
mov
out
xchg
fistpll
jno
add
rolb
adc
mov
loopne
mov
icebp
outsl
mov
inc
out
incl
mov
mov
xor
addr16
add
idivl
mov
or
add
jge
add
addr16
push
rolb
lahf
mov
fcompl
add
rolb
mov
iret
add
or
pop
aad
sub
dec
pop
mov
popf
pop
aas
xchg
add
add
add
mov
sub
cmp
ja
lret
mov
je
inc
outsl
sub
cmpsb
mov
mov
in
cmpsb
xchg
adc
xchg
cld
sub
test
fsubs
mov
jge
mov
adc
sbb
pop
inc
add
mov
cmp
and
cmc
mov
fstl
mov
mov
mov
outsl
add
ds
in
scas
lahf
lods
andl
sub
jno
repz
cmp
lods
addr16
pop
adc
out
push
cmpsl
pop
or
imul
add
lods
pusha
add
lea
pop
xchg
add
mov
addr16
out
add
fucomp
leave
shll
cmpsb
add
mov
jl
cltd
rorl
mov
jo
mov
pop
or
ds
mov
mov
leave
push
daa
push
cmp
adc
mov
jecxz
ficoms
jne
test
cwtl
leave
pop
icebp
push
add
push
jb
mov
push
jno
sub
add
add
jge
push
or
xchg
sub
push
dec
out
mov
inc
or
mull
scas
cmp
push
add
mov
clc
scas
dec
push
lret
pop
cmp
pop
out
movsb
adc
mov
clc
rolb
mov
std
sbb
jbe
cwtd
jo
mov
xor
mov
push
insb
fwait
mov
pop
inc
lock
mov
jb
mov
leave
jg
xor
xor
add
dec
pop
xchg
outsl
adc
mov
xor
push
rolb
mov
mov
fisubrl
xor
mov
jne
add
xor
aam
inc
add
cs
mov
insl
xor
ljmp
add
pop
push
mov
or
dec
push
jno
ljmp
adc
add
pusha
add
fdiv
adc
jno
rorl
push
sub
mov
mov
sysenter
rolb
mov
xor
imul
mov
xchg
dec
lret
add
dec
and
add
push
shll
rcll
add
mov
js
enter
push
jge
sbb
push
outsl
mov
call
mov
sbb
add
and
xor
mov
add
in
inc
sahf
scas
clc
xchg
add
lahf
es
add
add
das
call
jle
pop
jecxz
pop
dec
andl
dec
addr16
mov
dec
fmuls
mov
mov
dec
jp
rcll
jns
scas
pop
inc
add
mov
daa
leave
repz
add
lods
daa
add
mov
je
sub
mov
mov
les
popf
incl
mov
fists
test
movb
cmpsl
lock
lods
cmp
xlat
jmp
imul
add
mov
jo
mov
jns,pn
add
jg
xlat
jns
and
mov
xor
call
movsb
scas
in
or
enter
in
inc
pushf
rsqrtps
mov
dec
add
add
add
std
pop
sub
xor
mov
jo
mov
dec
in
rolb
bound
mov
add
xlat
stc
mov
add
ret
test
xchg
ljmp
mov
add
dec
xlat
in
icebp
inc
add
sub
jmp
add
repnz
mov
out
dec
cmp
xchg
pop
xor
ss
push
add
add
mov
add
mov
scas
inc
sub
xlat
in
push
les
jmp
push
cli
xchg
leave
addb
lods
xchg
add
and
jecxz
testl
pop
cli
loope,pn
add
mov
out
into
and
aam
dec
cs
outsb
xor
pop
daa
addr16
mov
imul
bound
mov
adc
push
add
mov
adc
mov
ds
add
sub
out
movsb
adc
mov
mov
pop
rolb
dec
roll
and
jge
clc
xchg
stos
leave
jmp
aad
loope
inc
add
push
jl
clc
aas
mov
imul
xchg
repnz
add
jg
sbb
pop
je
add
xor
add
testl
add
loope
inc
add
addl
add
add
xlat
mov
push
and
mov
push
mov
call
cmpsl
jns
or
mov
add
lret
mov
mov
pop
xlat
or
and
or
inc
add
xchg
pushf
mov
mov
iret
adc
add
add
cs
pop
cmc
sbb
jno
mov
mov
fwait
dec
ljmp
jmp
stc
fcomip
cltd
shrl
into
mov
stc
icebp
lock
xchg
add
mov
sbb
add
repnz
pop
sti
sub
add
les
das
mov
push
sbb
inc
add
loop
mov
dec
in
dec
xchg
or
mov
iret
mov
repz
sbbl
scas
inc
mov
addb
cmpsb
xchg
fidivrl
loop
mov
inc
adc
and
mov
and
mov
jo
mov
out
dec
test
test
ficoms
mov
add
lret
fldt
xchg
movsb
movsb
cmc
bound
mov
add
in
cmp
push
test
pop
dec
out
add
add
bound
mov
mov
add
test
mov
add
adc
sub
add
mov
add
rolb
mov
aas
xchg
pop
cmp
mov
lods
mov
cmc
leave
jbe
cmpsb
push
cltd
pop
pop
lea
inc
add
mov
add
add
mov
add
inc
ret
les
outsl
roll
mov
fmull
xchg
add
lret
in
lock
xchg
outsb
mov
lods
bound
mov
push
inc
and
mov
dec
mov
pop
call
rcrl
mov
xchg
mov
ja
jbe
inc
aad
adc
mov
or
ja
int3
hlt
ss
add
rol
xor
addb
clc
imul
es
adc
aas
enter
add
or
mov
mov
add
jl
add
sub
push
loop
mov
cmpsb
test
lret
mov
pop
sbb
pop
imul
arpl
mov
add
push
mov
mov
pop
push
stos
fwait
jnp
or
fistps
insl
xor
mov
dec
push
fnsave
push
jge
les
or
call
mov
add
icebp
sub
add
mov
mov
mov
xchg
cwtl
push
add
mov
jnp
jecxz
loop
mov
or
or
mov
add
add
or
mov
add
mov
addb
rcll
int
sbb
or
jo
mov
dec
push
jae
jmp
sahf
aam
lods
mov
loopne
mov
mov
mov
jl
ret
inc
pop
jge
push
loopne
mov
add
data16
frstor
hlt
adc
sub
cld
pop
and
mov
lea
add
sub
adc
xlat
outsb
or
jne
add
bound
mov
test
repz
mov
insb
mov
jle
lock
dec
inc
jnp
xchg
mov
lret
aam
push
add
jg
add
jp
push
add
jle
loope
fiadds
xor
mov
add
cmp
rolb
mov
add
mov
out
adc
sbb
fcomip
cwtl
push
insl
popa
jae
addb
enter
pop
test
cwtl
sbbl
push
add
mov
mov
sub
movsb
fs
nop
add
repnz
add
lods
mov
shll
mov
adc
mov
jecxz
mov
mov
cmp
mov
add
pushf
andl
mov
test
arpl
scas
out
test
mov
add
mov
cmp
mov
out
xlat
inc
add
sbb
clc
cmp
out
add
mov
movsl
or
push
xlat
or
addb
inc
add
bound
mov
inc
dec
add
mov
xchg
jne
xor
pop
xchg
loope
mov
out
cmp
add
aam
add
mov
xchg
or
push
repz
mov
scas
cmp
xlat
push
add
insl
mov
mov
mov
mov
mov
add
push
add
addb
lea
push
out
in
pop
mov
add
and
mov
xor
cmp
add
mov
lock
or
fcoms
adc
mov
add
mov
push
adc
mov
inc
add
jl
fists
ffreep
push
into
jge
add
add
scas
js
add
xchg
pushf
in
icebp
jno
aam
adc
mov
rcll
mov
or
push
or
add
add
hlt
dec
add
mov
das
push
sahf
movsl
xor
mov
aam
mov
dec
loope
add
inc
lods
ja
sahf
pop
dec
xchg
cs
int
fsubl
mov
xlat
pusha
add
add
xchg
leave
rolb
mov
add
add
xor
mov
mov
cs
and
mov
call
sbb
mov
fisttps
xchg
rolb
inc
add
push
push
loopew
popf
out
lods
movq
rolb
mov
add
test
inc
add
mov
adc
or
and
mov
rolb
and
mov
add
mov
out
jns
add
aam
cmp
mov
addb
jp
nop
add
push
mov
ret
sti
leave
nop
add
jns
movsb
roll
cmp
out
das
or
mov
pop
jbe
iret
mov
outsb
mov
mov
and
mov
xchg
inc
hlt
out
mov
sar
pop
adc
adc
mov
mov
rolb
mov
push
or
cli
push
cli
fidivs
sub
into
mov
add
mov
fs
outsl
jno
xor
mov
add
mov
cmp
add
in
cmp
fs
lods
mov
repnz
imul
jmp
add
popa
inc
outsl
pop
test
lea
add
inc
xchg
into
inc
div
push
inc
add
mov
mov
pop
push
icebp
mov
add
xchg
rolb
mov
outsl
jae
fsubrl
mov
sub
add
xor
adc
mov
jge
mov
or
addr16
lods
pop
lock
pop
out
cmp
lock
pop
add
add
mov
test
mov
jnp
and
addb
les
add
fadd
add
adc
lea
movsb
xor
push
icebp
in
jb
mov
or
add
loopne
mov
pop
hlt
sbb
iret
jge
jmp
or
mov
xlat
mov
adc
mov
filds
pop
jl
add
sbb
add
mov
mov
mov
mov
repnz
inc
add
jno,pt
xlat
je
xchg
loopne
mov
addb
fimuls
sbb
js
sti
xchg
aas
jp
or
fs
mov
inc
add
inc
mov
xor
push
cmp
mov
push
add
add
inc
sbb
faddl
lock
movhps
push
mov
dec
scas
dec
popf
mov
pop
push
add
pop
add
cmp
add
add
mov
jle
cmpsl
lock
add
mov
mov
xor
das
into
mov
cmpsb
mov
xor
cs
ret
das
ret
data16
dec
xchg
stc
aad
ss
cmp
xchg
add
mov
add
pop
sbb
cmp
dec
dec
cmp
jbe
jnp
mov
mov
add
lock
lret
mov
add
nop
add
push
inc
jae
dec
inc
add
add
movsb
imul
mov
das
push
fwait
psllw
push
addb
mov
outsb
or
xchg
adc
mov
jmp
imul
push
addb
jb
out
pop
add
mov
std
mov
and
add
mov
add
fsubrs
call
mov
call
iret
adc
lret
mov
ffreep
fwait
and
add
and
push
fisttps
add
add
add
stos
push
add
lret
scas
dec
leave
pop
clc
jns
scas
cld
fwait
repnz
add
add
and
xlat
imul
pop
fiaddl
add
lret
mov
xchg
repz
push
mov
into
xchg
jae
jp
rolb
mov
mov
lods
fistps
add
add
inc
add
mov
pushf
adc
out
dec
or
cli
sub
sbb
test
sub
add
mov
loop
mov
xchg
or
aaa
or
test
jno
add
mov
pop
das
cmp
test
add
aaa
in
cmp
pop
push
mov
and
imul
test
je
jae
add
stos
jnp
bts
or
mov
mov
testl
push
in
cmpsb
sub
add
cmp
sbb
add
aaa
cmp
and
mov
mov
iret
movl
mov
lods
mov
in
push
loope
into
adc
add
lret
cs
jmp
and
add
add
dec
stos
xchg
inc
ret
pop
inc
xchg
in
add
mov
mov
adc
mov
add
popa
mov
sti
icebp
shr
addr16
lret
xchg
add
add
xchg
addb
lds
sbb
sbb
jb
mov
lock
cmc
ljmp
mov
add
das
push
add
add
scas
cmpl
sub
das
jg
add
jecxz
daa
daa
aad
and
test
add
xlat
enter
add
mov
pusha
add
mov
stos
add
mov
mov
mov
sub
call
add
dec
push
out
das
sarl
mov
mov
add
out
lahf
pop
out
inc
xchg
sbb
mov
lea
popa
aas
mov
or
sbb
sub
imul
add
xchg
sub
xor
data16
iret
pop
mov
into
dec
pop
add
mov
cmc
sub
jle
xor
cmc
jae
sti
cmp
push
and
lods
sti
xor
int
push
dec
lcall
jge
popa
add
mov
je
add
pop
int3
or
hlt
pop
in
sti
test
imul
arpl
mov
add
add
fcomi
push
add
addl
and
ds
lods
pop
leave
ret
jecxz
mov
std
jmp
pop
frstor
sbb
cld
lahf
cmp
rcll
popf
dec
lret
push
stc
addb
aam
loope
and
mov
jo
mov
add
fcomi
addb
repnz
jp
repnz
mov
dec
jns
imul
ret
loop
mov
mov
stos
add
mov
nop
add
add
insb
cld
push
add
nop
add
mov
js
ret
popf
xchg
flds
divl
cmp
add
sub
add
pop
push
lea
test
push
or
loop
mov
aaa
mov
addr16
pop
mov
ret
mov
test
pop
popf
shll
stc
lret
sub
adc
mov
xor
add
call
mov
jnp
imul
popa
xchg
cmpl
out
cli
fisubl
cmp
mov
add
aas
push
jo
mov
addb
jle
fstl
mov
add
popa
xchg
sbb
sbb
sub
inc
inc
add
jge
out
xchg
lock
sbb
jae
inc
jmp
insl
cmpsb
sbb
aas
sbb
mov
add
xchg
out
and
jg
add
into
stc
adc
mov
int
imul
movsb
and
add
mov
lods
pop
aad
fimull
ret
dec
dec
jg
out
sbb
mov
imul
sub
sti
in
dec
pop
adc
bound
mov
add
ret
cmp
push
mov
int3
out
fisubrl
sbb
xor
mov
add
jecxz
pop
mov
pop
into
fwait
push
mov
add
pop
adc
mov
je
ljmp
cmp
fistps
imull
inc
and
cmp
jmp
mov
pop
insb
jg
add
mov
cs
lcall
mov
xchg
es
decb
adc
ucomiss
notl
add
mov
mov
mov
fs
aas
je
add
mov
mov
incb
fimuls
push
cltd
mov
and
les
adc
jmp
enter
outsl
enter
fsub
mov
pop
out
out
add
add
addr16
cmp
add
add
mov
mov
add
mov
ja
cli
clc
xor
pushf
sahf
inc
popf
enter
mov
add
mov
and
pushf
cmpsb
rolb
mov
test
lret
mov
mov
mov
add
js
sbb
cltd
push
aaa
push
xchg
inc
add
xor
add
rcll
xchg
xor
in
cs
call
imul
test
test
aaa
das
in
dec
jp
rolb
mov
add
jmp
addb
xchg
xlat
ret
or
addb
mov
in
xchg
sbb
inc
dec
enter
mov
out
rolb
mov
aad
xlat
push
cmpsb
pop
fldln2
nop
add
pop
movsb
pop
xor
mov
cld
or
lcall
dec
hlt
addb
mov
scas
mov
dec
shrl
dec
daa
sbb
mov
mov
jbe
inc
add
pop
int3
pop
cld
xchg
rolb
mov
bound
mov
xchg
xor
sub
mov
add
mov
mov
mov
dec
xchg
je
cltd
aas
addb
push
cmp
cmp
in
movb
add
lret
add
jmp
lcall
or
add
and
jb
mov
sub
inc
idiv
push
add
mov
and
pop
bound
mov
cld
into
add
mov
ret
push
addb
push
add
inc
push
add
dec
lcall
or
add
xchg
sbb
add
mov
jge
sbb
inc
add
mov
pop
cmpsb
addb
jns
aad
lds
sahf
lahf
test
pusha
add
inc
iret
and
add
add
adc
sahf
mov
sbb
push
xor
cmp
add
shrl
imul
xchg
pop
add
lods
xor
jmp
fiaddl
sbb
xchg
divl
mov
add
cwtl
cmp
mov
xchg
fiadds
add
xchg
inc
dec
cmc
pop
dec
test
sbb
out
add
mov
mov
mov
adc
push
fldlg2
sub
imul
mov
lods
cmp
add
test
test
mov
add
insl
push
lods
js
lods
insl
gs
xchg
das
stos
cwtl
ret
pushf
xor
jg
popa
xor
dec
dec
xchg
jp
xor
imul
push
push
mov
adc
imul
inc
mov
arpl
mov
inc
add
add
dec
mov
pop
icebp
mov
xchg
sub
je
mov
mov
in
mov
pop
nop
add
cli
mov
fs
cmp
aam
ret
cmp
pop
dec
aas
cmp
mov
mov
jns
repnz
pop
mov
jbe
ret
popf
mov
stc
cmp
inc
jge
cs
mov
mov
sub
stos
lcall
flds
sahf
sub
or
add
sub
xlat
lcall
mov
dec
ret
xchg
add
mov
fldcw
bound
mov
xchg
dec
test
dec
test
cli
and
mov
add
add
bound
mov
jnp
mov
push
sub
add
test
addr16
cmpsl
push
or
add
mov
ds
repnz
mov
push
in
insl
and
mov
fidivs
mov
push
pop
cwtl
push
add
push
ret
jnp
repz
sbb
push
or
sbb
fmull
fdivr
inc
and
mov
out
mov
in
jne
cmpl
sysret
or
sbb
mov
pusha
add
mov
mov
roll
mov
push
add
mov
jnp
add
aaa
inc
xor
pop
pop
aaa
js
push
jp
cmp
out
pop
in
jecxz
cmp
and
popf
fs
fwait
push
add
ret
inc
lahf
mov
inc
dec
iret
cmp
in
in
or
cwtl
adc
mov
adc
mov
cmp
cmp
mov
popf
pop
aam
mov
pop
lahf
bound
mov
xchg
mov
mov
cmp
jmp
jb
mov
icebp
push
sub
pop
xlat
fwait
cmp
clc
and
outsb
dec
pop
in
jb
mov
mov
adc
cmp
mov
jecxz
mov
or
rcll
mov
pop
addb
inc
add
and
mov
add
inc
cmp
mov
cmp
cmp
fnstenv
ljmp
add
add
mov
mov
cmpsl
sbb
decl
fstl
lds
cmp
sahf
call
imul
mov
push
add
dec
jae
repz
bound
mov
push
mov
lea
test
test
popf
movsl
or
and
into
icebp
call
add
xchg
add
add
stos
and
inc
add
dec
mov
addb
jp
add
jno
jne
std
dec
cwtl
sbb
rolb
mov
jle
add
mov
mov
add
addr16
mov
sub
xor
mov
inc
int
nop
add
dec
sti
into
and
mov
add
add
add
or
mov
xchg
in
jmp
stos
nop
add
gs
push
dec
popw
push
emms
clc
fwait
push
scas
aas
cmpsb
push
jmp
add
xchg
push
sbb
xor
testb
pushf
jno
xchg
dec
mov
mov
cwtl
daa
call
add
mov
add
sbb
cs
push
adc
sub
push
add
data16
mov
mov
into
popf
and
mov
out
lret
add
mov
mov
mov
inc
in
add
js
stc
gs
add
push
or
pop
in
or
xor
cmp
les
fldenv
shrl
bound
mov
sahf
pop
mov
das
in
fs
xchg
xlat
movsl
sti
pop
push
mov
add
add
hlt
and
add
jge
or
or
cmp
addr16
and
push
dec
jo
mov
rolb
in
pusha
add
aam
dec
xchg
add
lea
adc
mov
add
daa
aad
aaa
pop
sub
addb
out
pop
sub
call
arpl
cmp
jae
cmp
jno
lock
ljmp
push
add
rolb
mov
imul
and
mov
mov
stos
vmulpd
cmp
js
dec
rolb
mov
test
icebp
rep
loop
mov
mov
ficoms
lret
cltd
popf
mov
add
sbb
add
mull
xchg
out
push
push
xchg
xchg
jns
int3
fcmove
sahf
repnz
add
jp
jle
mov
mov
or
mov
adc
addb
hlt
jbe
cmp
add
scas
test
lcall
add
cli
jg
sub
xor
sti
scas
jg
push
and
mov
adc
jl
mov
out
fimull
pop
clc
test
or
or
mov
iret
jbe
ds
icebp
fwait
jns
movsb
loopne
mov
es
mov
mov
xor
xchg
fidivrl
push
sub
shr
xchg
fistps
mov
loopne
mov
pusha
add
mov
inc
test
adc
mov
mov
add
outsb
xchg
cmpsb
fcmovnb
add
mov
jns
testb
push
je
add
mov
jne
cmpsb
mov
sub
rolb
insb
and
add
mov
push
add
and
cmp
mov
mov
outsb
jnp
or
mov
xor
sub
cmpsl
fs
and
add
addr16
add
pop
dec
outsb
adc
xchg
add
cmp
add
push
and
fstl
jp
and
mov
mov
loopne
mov
add
adc
mov
or
out
lret
add
mov
add
lock
and
adc
mov
and
cmp
aad
mov
add
shrl
lahf
bound
mov
imulb
cld
out
jae
add
mov
pop
pusha
add
movq
add
dec
bound
mov
mov
sbb
add
insl
addb
and
lret
lret
stc
hlt
lcall
fwait
loopne
mov
sub
scas
or
js
rolb
mov
adc
add
dec
sub
mov
add
cmp
and
lods
fs
aam
ret
fwait
cltd
ljmp
push
jmp
push
sbb
mov
push
pop
push
mov
pushf
cmpsl
sti
adc
mov
sbb
dec
or
mov
push
mov
mov
add
or
pop
roll
movl
cmpsb
je
add
push
insb
insb
or
mov
or
add
add
add
std
pop
xor
add
mov
cmc
jg
pop
fs
jbe
dec
sbb
test
aad
cmp
mov
dec
push
addb
jbe
push
stos
mov
outsb
pop
fld1
cmp
xor
add
aam
bound
mov
jbe
subl
mov
aaa
mov
or
and
cmp
xor
cld
imul
mov
fwait
inc
or
pop
or
imulb
xchg
imul
push
icebp
mov
cld
aaa
fiadds
mov
mov
add
adc
dec
icebp
or
mov
mov
mov
pop
shl
ds
ret
push
cmp
mov
jbe
cmc
xchg
sbb
mov
fsubrs
movsl
sbb
sbb
push
pushf
faddl
push
add
int3
add
push
dec
push
add
and
mov
mov
mov
add
mov
adc
mov
add
mov
add
ficompl
mov
add
xchg
pushf
mov
mov
dec
andl
mov
sbb
adc
mov
in
inc
pop
sub
fistps
addr16
loope
sbb
cs
mov
jae
mov
lds
xchg
rcll
and
mov
out
test
jnp
cmp
pop
imul
sub
int
push
mov
outsb
inc
pop
dec
out
push
mov
add
fdivrp
xor
mov
adc
mov
jmp
int
xchg
or
std
xchg
daa
jecxz
adc
repnz
mov
bound
mov
push
xchg
cmpsb
lret
cs
jo
mov
mov
add
add
call
add
add
inc
add
addb
cld
mulb
push
call
inc
add
add
and
mov
adc
jmp
push
add
mov
rcl
cltd
aad
jp
inc
add
test
dec
xlat
mov
mov
mov
xchg
xchg
aaa
dec
imul
fwait
inc
add
add
mov
add
lahf
jb
mov
das
cmp
test
sahf
std
arpl
pop
xor
dec
adc
add
mov
sub
push
sub
add
nop
add
or
add
add
rolb
mov
cmpsb
call
add
test
push
lods
lcall
jae
cmp
es
push
stos
dec
sub
add
mov
lret
popa
test
mov
push
push
mov
js
addb
or
add
sub
cs
add
popf
mull
adc
add
js
mov
push
int3
pop
jle
mov
add
clc
repnz
nop
cld
jae
cld
xor
test
mov
adc
repnz
nop
cld
jae
add
add
shl
add
in
jb
addb
add
add
out
push
add
inc
jne
je
clc
repnz
nop
cld
jae
add
cwtl
mov
add
add
push
clc
repnz
nop
cld
jae
inc
add
add
ficomps
add
push
clc
repnz
nop
cld
jae
aad
add
popf
mov
push
mov
xchg
ret
add
xorl
inc
add
add
pop
xor
add
jo
mov
push
push
mov
xchg
ret
adc
xchg
jns
ficoml
repnz
nop
cld
jae
add
adc
out
cmpw
push
mov
nop
leave
jmp
add
fidivs
lret
add
add
in
nop
leave
jmp
inc
out
add
dec
es
push
mov
nop
leave
jmp
add
and
repnz
nop
cld
jae
movl
mov
subl
push
mov
xchg
ret
add
add
loopne
add
sub
lods
out
add
rolb
add
je
add
nop
nop
cld
jae
xchg
add
add
je
clc
repnz
nop
cld
jae
testb
xchg
pop
pop
clc
repnz
nop
cld
jae
add
adcl
adc
push
mov
xchg
ret
add
add
add
add
pop
xchg
add
les
mov
xchg
ret
or
add
add
rcl
loope
add
in
nop
leave
jmp
cmpl
add
add
inc
mov
mov
cmpl
jae
pop
add
jl
jb
add
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
xor
add
add
stos
clc
repnz
nop
cld
jae
sbb
add
add
or
nop
nop
cld
jae
fs
pop
add
jg
pop
and
repnz
nop
cld
jae
add
push
lods
mov
clc
repnz
nop
cld
jae
add
jns
jle
cmp
popa
add
mov
nop
leave
jmp
and
add
out
out
mov
push
mov
xchg
ret
add
sbb
lret
add
clc
repnz
nop
cld
jae
xor
add
xorl
repnz
nop
cld
jae
mov
add
add
mov
add
repnz
nop
cld
jae
add
pop
je
clc
repnz
nop
cld
jae
adc
mov
cwtl
jne
clc
repnz
nop
cld
jae
xchg
ficomps
popf
je
clc
repnz
nop
cld
jae
iret
lahf
add
xor
repnz
nop
cld
jae
inc
add
pop
addb
xchg
gs
repnz
nop
cld
jae
out
push
bound
mov
push
clc
repnz
nop
cld
jae
fsubp
bound
outsl
jmp
clc
repnz
nop
cld
jae
add
push
lahf
out
pop
push
push
mov
or
jecxz
neg
add
add
jae
or
add
clc
repnz
nop
cld
jae
stc
add
xor
notl
lret
mov
clc
repnz
nop
cld
jae
pop
loop
rolb
sbb
adc
xchg
push
add
clc
add
clc
repnz
nop
cld
jae
out
add
inc
add
fucomip
inc
add
jge
jns
mov
add
or
jae
xor
sbb
add
cvtdq2ps
mov
nop
leave
jmp
out
add
add
dec
and
push
mov
xchg
ret
add
cmp
pop
push
mov
xchg
ret
add
mov
test
sub
add
lea
push
mov
xchg
ret
fiadds
loop
test
and
mov
mov
xor
push
mov
xchg
ret
into
add
sbb
out
je
clc
repnz
nop
cld
jae
andl
mov
clc
repnz
nop
cld
jae
add
rolb
add
push
mov
xchg
ret
rcrb
sldt
add
add
mov
clc
repnz
nop
cld
jae
lcall
or
popa
add
repnz
nop
cld
jae
add
xchg
add
pop
add
push
mov
nop
leave
jmp
sbb
sub
std
xor
sbb
div
push
mov
nop
leave
jmp
jge
fiadds
aaa
and
mov
mov
inc
jns
push
mov
xchg
ret
add
ficoms
testb
lret
lea
push
mov
nop
leave
jmp
loopne
adc
or
push
mov
nop
leave
jmp
sbb
iret
mov
adc
clc
repnz
nop
cld
jae
iret
add
sub
in
nop
leave
jmp
add
add
inc
aad
testl
add
adc
add
pop
add
add
clc
repnz
nop
cld
jae
pop
add
add
clc
repnz
nop
cld
jae
jp
fidivrs
jne
clc
repnz
nop
cld
jae
iret
lahf
adc
push
mov
xchg
ret
out
mov
add
add
pop
nop
add
push
mov
xchg
ret
add
add
rcrb
mov
push
mov
xchg
ret
rolb
mov
add
xor
push
mov
xchg
ret
add
mov
add
xchg
loope
hlt
jg
pushl
clc
repnz
nop
cld
jae
mov
add
add
mov
repnz
nop
cld
jae
add
test
sbb
jo
mov
repnz
nop
cld
jae
test
add
mov
push
mov
nop
leave
jmp
add
fs
fmulp
mov
shll
push
push
mov
xchg
ret
add
stc
add
pushf
or
ds
adc
pop
pushf
or
ret
clc
repnz
nop
cld
jae
inc
add
add
fiadds
add
push
mov
nop
leave
jmp
or
stos
add
mov
nop
cld
jae
push
add
adc
repz
repnz
nop
cld
jae
pop
stos
shrb
jl
and
clc
repnz
nop
cld
jae
add
add
std
iret
mov
add
mov
rolb
add
cld
add
test
pop
add
add
repnz
nop
cld
jae
add
jp
add
rclb
nop
leave
jmp
adc
sbb
add
add
mov
clc
repnz
nop
cld
jae
add
add
adc
fiaddl
inc
cmp
repnz
nop
cld
jae
add
aas
mov
clc
repnz
nop
cld
jae
add
add
inc
bound
mov
dec
clc
repnz
nop
cld
jae
pop
xor
addl
add
shufps
cmp
ret
add
adc
std
add
mov
push
push
mov
xchg
ret
add
fiadds
xchg
add
lret
push
mov
xchg
ret
add
test
add
xchg
clc
repnz
nop
cld
jae
add
add
stos
push
jge
mov
sar
nop
nop
cld
jae
lahf
adc
shlb
int
pop
jae
mov
nop
leave
jmp
inc
add
add
mov
clc
repnz
nop
cld
jae
test
lret
std
push
cmovns
sbb
cmp
ret
loopne
add
add
mov
shlb
xor
clc
repnz
nop
cld
jae
add
mov
ds
clc
repnz
nop
cld
jae
add
jp
fcomi
rclb
push
inc
add
cwtl
aad
add
add
lds
mov
clc
repnz
nop
cld
jae
loop
add
call
clc
repnz
nop
cld
jae
stos
call
or
add
repnz
nop
cld
jae
test
stc
add
in
add
clc
repnz
nop
cld
jae
add
add
std
jle
imul
push
mov
nop
leave
jmp
inc
pop
lret
mov
clc
repnz
nop
cld
jae
add
bound
add
clc
repnz
nop
cld
jae
cwtl
xor
add
clc
repnz
nop
cld
jae
add
std
add
iret
add
lret
push
mov
nop
leave
jmp
incl
add
loopne
or
mov
push
mov
nop
leave
jmp
add
xchg
or
add
mov
nop
leave
jmp
add
add
add
incl
popl
nop
leave
jmp
sub
xor
fs
adc
out
mov
clc
repnz
nop
cld
jae
add
add
iret
leave
push
mov
nop
leave
jmp
add
incl
push
add
add
mov
inc
add
jp
xchg
lret
pop
add
cmp
clc
repnz
nop
cld
jae
cld
add
lret
push
mov
add
add
add
add
shlb
mov
scas
mov
push
mov
xchg
ret
add
add
xor
repnz
nop
cld
jae
fs
add
cwtl
add
sub
nop
leave
jmp
sarb
inc
test
loopne
das
push
push
mov
xchg
ret
add
nop
adc
fiadds
add
add
clc
repnz
nop
cld
jae
add
stc
add
add
clc
repnz
nop
cld
jae
add
jle
add
mov
nop
nop
cld
jae
idivb
add
mov
xor
in
nop
leave
jmp
pop
add
nop
mov
pop
cmc
xor
subl
jp
roll
add
add
add
popa
push
mov
nop
leave
jmp
add
rcrb
jns
add
mov
nop
nop
cld
jae
add
add
into
xchg
mov
nop
nop
cld
jae
sbb
add
add
add
add
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
push
rsqrtps
add
push
mov
xchg
ret
add
sbb
pop
add
add
clc
repnz
nop
cld
jae
jge
addl
mov
add
clc
repnz
nop
cld
jae
mov
add
adc
clc
repnz
nop
cld
jae
add
add
mov
add
bound
mov
mov
nop
leave
jmp
add
add
inc
add
scas
enter
nop
leave
jmp
add
xor
add
test
push
mov
nop
leave
jmp
jns
add
rcr
add
mov
mov
nop
cld
jae
movl
cld
add
add
push
test
jno
add
clc
repnz
nop
cld
jae
pop
add
mov
outsl
sbb
add
outsl
dec
or
and
add
repnz
nop
cld
jae
adc
jns
mov
mov
nop
leave
jmp
sbb
into
ds
adc
inc
sub
push
mov
xchg
ret
mov
mov
inc
add
inc
add
icebp
insl
ror
clc
repnz
nop
cld
jae
add
dec
push
push
mov
nop
leave
jmp
add
inc
add
rolb
mov
xor
add
clc
repnz
nop
cld
jae
std
add
jo
push
mov
nop
leave
jmp
stos
add
mov
add
repnz
nop
cld
jae
std
add
pop
inc
push
mov
xchg
ret
adc
sub
inc
add
stc
jns
dec
push
mov
jecxz
add
add
add
sbb
hlt
add
mov
jmp
add
add
xchg
adc
adc
add
mov
push
mov
nop
leave
jmp
add
inc
sbb
mov
nop
leave
jmp
add
lret
adc
push
mov
mov
pop
push
mov
xchg
ret
or
sub
adc
mov
call
dec
roll
xchg
ret
add
add
cmp
push
mov
nop
leave
jmp
mov
nop
mov
push
clc
repnz
nop
cld
jae
add
add
bound
mov
lock
repnz
nop
cld
jae
add
out
sbb
jmp
aas
adc
in
nop
leave
jmp
add
add
add
push
add
mov
nop
leave
jmp
add
add
adc
cmp
push
mov
xchg
ret
lret
movl
mov
clc
repnz
nop
cld
jae
lret
div
xchg
scas
pushl
clc
repnz
nop
cld
jae
add
add
add
xor
nop
nop
cld
jae
mov
add
add
jnp
mov
clc
repnz
nop
cld
jae
jns
aam
in
push
push
mov
xchg
ret
inc
xor
inc
add
shl
dec
mov
clc
repnz
nop
cld
jae
add
add
add
clc
movswl
clc
repnz
nop
cld
jae
add
xor
or
nop
cld
jae
xchg
or
add
add
mov
push
mov
nop
leave
jmp
pop
add
out
add
and
mov
clc
repnz
nop
cld
jae
sbbl
nop
cld
jae
ficomps
loop
lret
test
sbb
add
repnz
nop
cld
jae
rolb
jle
jmp
or
out
add
rol
add
sbb
aad
fs
call
clc
repnz
nop
cld
jae
add
add
and
mov
clc
repnz
nop
cld
jae
btr
jle
cwtl
mov
mov
clc
repnz
nop
cld
jae
add
add
iret
inc
adc
xabort
nop
nop
cld
jae
add
notb
fldl
jbe
clc
repnz
nop
cld
jae
pop
xor
inc
testb
add
in
nop
leave
jmp
jle
cwtl
add
add
sti
add
add
repnz
nop
cld
jae
xor
add
mov
adc
repnz
nop
cld
jae
pop
add
add
clc
repnz
nop
cld
jae
add
add
pop
jne
clc
repnz
nop
cld
jae
add
push
add
mov
mov
clc
repnz
nop
cld
jae
add
adc
in
add
xlat
inc
pop
add
test
add
push
mov
xchg
ret
add
add
or
inc
add
adc
ltr
out
add
clc
repnz
nop
cld
jae
add
shl
add
aas
mov
clc
repnz
nop
cld
jae
mov
add
into
add
call
add
in
nop
leave
jmp
add
add
or
add
dec
clc
repnz
nop
cld
jae
add
add
jge
or
hlt
inc
add
or
incl
cld
test
push
mov
nop
leave
jmp
add
pop
stos
loopne
add
clc
repnz
nop
cld
jae
sarb
add
fsubs
xor
add
clc
repnz
nop
cld
jae
jns
xor
nop
cld
jae
add
fs
ds
add
inc
clc
repnz
nop
cld
jae
mov
out
add
mov
nop
leave
jmp
nop
add
xchg
add
xchg
mov
jmp
repnz
nop
cld
jae
lahf
loopne
pop
fs
push
pop
clc
repnz
nop
cld
jae
sbbl
add
je
in
add
clc
repnz
nop
cld
jae
pop
dec
pop
add
test
add
push
mov
nop
leave
jmp
add
pop
mov
add
loop
mov
xchg
add
and
mov
xchg
ret
add
into
add
aad
outsb
mov
clc
repnz
nop
cld
jae
pop
inc
add
add
mov
mov
arpl
clc
repnz
nop
cld
jae
add
lret
adc
les
repnz
nop
cld
jae
add
out
sbb
mov
adc
mov
pop
push
mov
xchg
ret
add
add
cwtl
pop
push
mov
xor
push
push
add
add
lret
jmp
aad
lret
add
jp
inc
add
add
add
clc
repnz
nop
cld
jae
lahf
lret
mov
add
dec
jmp
add
jns
add
rolb
sbb
add
push
mov
nop
leave
jmp
rolb
or
pop
stos
add
clc
repnz
nop
cld
jae
add
rolb
add
add
clc
repnz
nop
cld
jae
lret
pop
add
sbb
clc
repnz
nop
cld
jae
pop
add
add
add
adc
sub
call
in
nop
leave
jmp
test
add
iret
jns
pusha
add
clc
repnz
nop
cld
jae
mov
bound
stc
cwtl
cmp
nop
nop
cld
jae
cld
add
sbb
mov
xchg
ret
negb
add
add
jae
cld
lods
clc
repnz
nop
cld
jae
xchg
xchg
testb
addl
dec
ret
clc
repnz
nop
cld
jae
pop
lret
add
and
push
mov
xchg
ret
add
inc
xchg
mov
add
clc
repnz
nop
cld
jae
rolb
sub
jle
loopne
fwait
test
push
mov
nop
leave
jmp
cld
add
stos
mov
mov
mov
clc
repnz
nop
cld
jae
add
pop
mov
push
mov
nop
leave
jmp
sub
add
addb
insb
add
clc
repnz
nop
cld
jae
xor
add
add
push
push
mov
nop
leave
jmp
jns
mov
xchg
add
sbb
jmp
test
add
cld
add
add
iret
add
mov
aas
and
nop
push
pop
add
mov
movsl
cmp
clc
repnz
nop
cld
jae
xor
mov
xor
push
mov
nop
leave
jmp
pop
std
add
inc
stos
pop
cmp
sub
nop
nop
cld
jae
add
add
add
bound
mov
je
clc
repnz
nop
cld
jae
pop
lahf
add
ss
aam
inc
push
jo
mov
nop
nop
cld
jae
divb
add
test
dec
cmp
repnz
nop
cld
jae
test
add
sbb
push
push
mov
nop
leave
jmp
adc
mov
loop
addb
imul
repz
pushl
pop
add
mov
imul
push
mov
xchg
ret
add
adc
lldt
clc
repnz
nop
cld
jae
add
or
sub
add
clc
repnz
nop
cld
jae
sbb
jle
push
mov
fiaddl
add
add
add
mov
call
ret
repnz
nop
cld
jae
stos
jle
add
fisubs
int
pop
jae
repnz
nop
cld
jae
incl
add
and
mov
nop
nop
cld
jae
adc
incl
dec
imul
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
addl
jmp
adc
leave
jmp
pop
jle
add
pop
cmpl
push
mov
nop
leave
jmp
std
add
add
stc
cli
add
clc
repnz
nop
cld
jae
add
mov
jle
nop
add
sbb
add
repnz
nop
cld
jae
inc
add
movsl
lods
mov
clc
repnz
nop
cld
jae
mov
loopne
fimuls
call
in
nop
leave
jmp
pop
stos
add
xor
pop
push
stos
clc
repnz
nop
cld
jae
mov
mov
rclb
add
add
clc
repnz
nop
cld
jae
cld
jge
jns
add
mov
repnz
nop
cld
jae
lret
add
adc
movzwl
clc
repnz
nop
cld
jae
inc
add
mov
push
mov
nop
leave
jmp
add
mov
test
nop
nop
cld
jae
add
add
add
add
cmp
xor
add
clc
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
loopne
add
pop
inc
jge
clc
repnz
nop
cld
jae
add
cld
add
sbb
jle
push
mov
xchg
ret
out
add
add
add
cmpl
in
nop
leave
jmp
add
mov
loop
addb
cmp
mov
xchg
ret
xchg
jns
add
pop
inc
stos
call
clc
repnz
nop
cld
jae
add
add
incl
add
loopne
add
inc
aad
add
into
cli
push
clc
repnz
nop
cld
jae
adc
nop
add
popa
pop
push
push
mov
nop
leave
jmp
fiadds
add
add
mov
nop
leave
jmp
add
pop
add
push
test
push
lds
xchg
ret
cmove
into
stc
add
add
cmpsb
add
xchg
push
nop
nop
cld
jae
inc
add
add
add
push
leave
mov
clc
repnz
nop
cld
jae
add
or
mov
cmp
ret
sub
xchg
xor
cmp
mov
add
repnz
nop
cld
jae
add
mov
add
add
repnz
nop
cld
jae
add
fs
mov
mov
nop
leave
jmp
lahf
pop
cld
add
outsb
mov
clc
repnz
nop
cld
jae
add
add
dec
add
mov
nop
leave
jmp
or
add
mov
clc
repnz
nop
cld
jae
add
sbb
add
nop
nop
cld
jae
pop
ficomps
mov
add
nop
add
clc
repnz
nop
cld
jae
xor
add
sar
nop
nop
cld
jae
mov
jle
sbb
fisubs
mov
clc
repnz
nop
cld
jae
add
add
test
add
add
repnz
nop
cld
jae
mov
mov
add
mov
pop
mov
clc
repnz
nop
cld
jae
add
add
add
mov
nop
leave
jmp
pop
xor
std
sbb
movzwl
clc
repnz
nop
cld
jae
cwtl
add
out
jmp
nop
nop
cld
jae
add
lcall
out
add
divb
lahf
add
mov
push
mov
xchg
ret
bswap
sub
bound
sub
push
mov
nop
leave
jmp
mov
xchg
mov
lret
in
nop
leave
jmp
fiadds
mov
nop
lret
xchg
psubsw
bound
add
rolb
add
into
add
pop
ja
push
mov
mov
xchg
ret
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
xor
add
test
push
add
clc
repnz
nop
cld
jae
add
pop
rolb
mov
mov
clc
repnz
nop
cld
jae
jle
jp
iret
add
repnz
repnz
nop
cld
jae
out
add
add
stc
jl
call
in
nop
leave
jmp
cwtl
add
jle
push
clc
repnz
nop
cld
jae
test
jge
iret
add
lahf
mov
clc
repnz
nop
cld
jae
adc
xor
enter
add
xorl
add
sbb
lahf
xchg
mov
add
add
xchg
std
div
push
mov
nop
leave
jmp
sbb
xor
xor
mov
repnz
nop
cld
jae
out
add
mov
push
mov
xchg
ret
mov
lret
add
inc
adc
repnz
nop
cld
jae
add
add
fbld
repnz
nop
cld
jae
aad
add
add
add
lret
pop
push
mov
xchg
ret
add
lahf
sbb
xchg
mov
push
mov
xchg
ret
mov
add
add
mov
push
mov
xchg
ret
cld
or
sbb
int3
mov
clc
repnz
nop
cld
jae
add
lret
mov
or
push
mov
xchg
ret
cmp
add
cwtl
add
add
and
push
mov
xchg
ret
add
add
testl
push
mov
nop
leave
jmp
add
jge,pt
mov
clc
repnz
nop
cld
jae
sbbl
leave
and
push
mov
xchg
ret
sbb
test
nop
nop
cld
jae
add
rsqrtps
add
add
inc
clc
repnz
nop
cld
jae
addl
int
cs
insb
clc
repnz
nop
cld
jae
add
mov
addl
leave
push
mov
nop
leave
jmp
add
push
add
inc
loop
dec
jne
clc
repnz
nop
cld
jae
xchg
cwtl
add
and
clc
repnz
nop
cld
jae
xor
stos
fs
jge
push
or
repnz
nop
cld
jae
add
fs
add
mov
sbb
sar
repnz
nop
cld
jae
add
bswap
xchg
xchg
xchg
into
pop
clc
repnz
nop
cld
jae
mov
inc
add
add
add
adc
add
repnz
nop
cld
jae
add
mov
ret
les
mov
je
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
add
add
sbb
cmp
movsb
clc
repnz
nop
cld
jae
add
add
lret
fiaddl
in
nop
leave
jmp
push
loopne
add
push
mov
xchg
ret
add
jns
fiadds
mov
mov
mov
nop
nop
cld
jae
bound
pop
fiaddl
aaa
fldl
xchg
ret
out
pop
add
loopne
aaa
lahf
mov
clc
repnz
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
adc
dec
mov
clc
repnz
nop
cld
jae
sbb
clc
repnz
nop
cld
jae
jp
out
std
or
mov
clc
repnz
nop
cld
jae
jle
jp,pt
loopne
fs
add
push
mov
nop
leave
jmp
add
add
addl
repnz
add
ficoms
rdpmc
incl
add
test
pop
xor
loop
mov
enter
nop
leave
jmp
fiadds
add
pop
add
sbb
add
push
mov
xchg
ret
iret
adc
fs
test
push
mov
nop
leave
jmp
pop
add
fiadds
loope
dec
pop
clc
repnz
nop
cld
jae
test
add
add
mov
xchg
push
insb
push
push
mov
nop
leave
jmp
adc
testb
unpckhps
popa
add
mov
xchg
ret
adc
add
add
sub
jmp
cld
jae
adc
add
inc
icebp
out
mov
icebp
push
mov
nop
leave
jmp
add
add
add
add
push
add
push
mov
xchg
ret
fmulp
pop
cld
jge
mov
mov
int
add
pop
add
addl
mov
clc
repnz
nop
cld
jae
addl
repnz
nop
cld
jae
lret
add
pop
iret
add
push
mov
nop
leave
jmp
pop
mov
add
push
loop
mov
add
repnz
nop
cld
jae
add
stos
subl
clc
repnz
nop
cld
jae
jns
add
or
in
nop
leave
jmp
adc
adc
outsb
mov
clc
repnz
nop
cld
jae
add
add
xchg
mov
cmp
clc
repnz
nop
cld
jae
add
fs
test
dec
ret
clc
repnz
nop
cld
jae
add
add
pop
loopne
mov
inc
add
incl
jmp
dec
add
add
mov
popl
push
mov
nop
leave
jmp
into
add
add
mov
adc
repnz
nop
cld
jae
add
sbbl
repnz
nop
cld
jae
add
aad
add
sub
mov
xchg
ret
add
add
dec
and
clc
repnz
nop
cld
jae
add
iret
pop
pop
pop
nop
add
nop
nop
cld
jae
add
aad
add
add
add
push
mov
nop
leave
jmp
xchg
iret
stos
sbb
add
iret
add
push
mov
xchg
ret
sbb
rolb
add
add
clc
repnz
nop
cld
jae
add
xor
clc
repnz
nop
cld
jae
cwtl
add
xor
mull
repnz
nop
cld
jae
cwtl
add
decl
clc
repnz
nop
cld
jae
add
in
int
mov
push
clc
repnz
nop
cld
jae
add
add
stc
call
clc
repnz
nop
cld
jae
add
out
mov
nop
leave
jmp
add
adc
push
lahf
add
lahf
ffreep
jmp
nop
cld
jae
add
xorl
repnz
nop
cld
jae
add
mov
xor
add
clc
repnz
nop
cld
jae
add
xchg
pop
add
add
add
mov
inc
adc
repnz
nop
cld
jae
setg
add
mov
jns
push
mov
xchg
ret
add
add
into
ficomps
add
add
in
nop
leave
jmp
mov
adc
add
pushl
cmp
repnz
nop
cld
jae
cwtl
add
stos
mov
xorl
clc
repnz
nop
cld
jae
adc
into
lcall
add
add
inc
or
add
add
mov
inc
add
adc
imul
inc
add
add
dec
push
clc
repnz
nop
cld
jae
lret
add
add
add
clc
repnz
nop
cld
jae
add
loopne
add
addb
push
mov
out
add
xor
jg
adc
jne
cmp
lahf
add
loope
clc
repnz
nop
cld
jae
add
jp
sbb
repnz
nop
cld
jae
mov
add
popf
jne
push
mov
nop
leave
jmp
pop
or
add
clc
repnz
nop
cld
jae
add
pop
add
mov
mov
xchg
ret
ds
xchg
lret
cmp
test
add
repnz
nop
cld
jae
add
fiadds
repnz
nop
cld
jae
add
adc
add
dec
outsl
popa
fs
mov
nop
leave
jmp
add
in
add
clc
repnz
nop
cld
jae
sets
lret
lods
imul
push
mov
nop
leave
jmp
pop
add
mov
inc
add
cmp
test
or
add
in
nop
leave
jmp
add
fisubrl
clc
repnz
nop
cld
jae
add
iret
loop
sbb
cmp
nop
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
jns
add
shr
clc
repnz
nop
cld
jae
add
adc
mov
sbb
nop
cld
jae
cwtl
add
cmp
add
push
mov
xchg
ret
cld
add
add
add
add
repnz
nop
cld
jae
add
add
push
adc
nop
cld
jae
add
add
pop
lret
inc
cmpsl
loopne
mov
add
push
mov
xchg
ret
pop
lret
add
and
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
rolb
push
clc
repnz
nop
cld
jae
add
add
loop
xchg
inc
call
in
nop
leave
jmp
add
jge
fdivp
adc
add
clc
repnz
nop
cld
jae
bound
xchg
add
add
data16
inc
rolb
mov
mov
cmp
jmp
nop
leave
jmp
add
add
add
add
add
add
push
mov
xchg
ret
rclb
sub
add
mov
mov
mov
push
mov
xchg
ret
adc
jge
add
add
mov
je
mov
nop
leave
jmp
add
add
add
mov
repz
repnz
nop
cld
jae
movl
sbb
clc
push
mov
nop
leave
jmp
sbb
pop
add
addl
inc
push
in
push
clc
repnz
nop
cld
jae
add
add
mov
push
push
mov
nop
leave
jmp
add
adc
xchg
add
lret
mov
clc
repnz
nop
cld
jae
cld
add
iret
mov
in
add
mov
add
add
mov
cmp
mov
xchg
ret
ds
add
adc
mov
cmp
clc
repnz
nop
cld
jae
add
lahf
pop
loop
mov
mov
nop
cld
jae
mov
xor
add
add
cwtl
popa
clc
repnz
nop
cld
jae
cld
add
inc
add
add
subl
jae
sub
mov
sbb
inc
add
sldt
add
ds
pop
daa
mov
int
movsl
clc
repnz
nop
cld
jae
add
lahf
add
sbb
nop
nop
cld
jae
add
add
add
or
xor
add
clc
repnz
nop
cld
jae
add
out
xor
pfcmpge
nop
cld
jae
lret
iret
loopne
push
push
mov
xchg
ret
jns
nop
jns
add
loopne
lods
clc
repnz
nop
cld
jae
push
rolb
jns
adc
cmp
pop
push
mov
nop
leave
jmp
add
shl
jp
add
fcomps
mov
xchg
ret
test
add
add
test
repnz
nop
cld
jae
add
inc
add
mov
xchg
ret
add
add
add
add
push
sub
clc
repnz
nop
cld
jae
jp
jmp
clc
repnz
nop
cld
jae
add
add
adc
inc
jge
call
clc
repnz
nop
cld
jae
ds
push
add
jle
pop
adc
add
xchg
add
jp
sub
insb
jl
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
inc
add
add
clc
repnz
nop
cld
jae
add
cmc
xchg
mov
xchg
ret
out
into
std
add
sbbl
leave
jmp
mov
mov
add
adc
loopne
add
clc
repnz
nop
cld
jae
std
addl
jne
clc
repnz
nop
cld
jae
add
sub
push
mov
xchg
ret
bound
add
add
jp
js
sti
push
mov
xchg
ret
add
mov
add
bound
movsb
pop
pop
push
mov
xchg
ret
stos
adc
inc
sbb
jmp
jp
push
mov
nop
leave
jmp
stc
add
not
xor
clc
repnz
nop
cld
jae
add
mov
pop
movl
mov
push
mov
xchg
ret
adc
stc
sbb
add
add
mov
push
clc
repnz
nop
cld
jae
add
add
lret
and
repnz
nop
cld
jae
pop
movl
push
mov
data16
or
push
out
loop
jecxz
xchg
gs
add
adc
repnz
nop
cld
jae
mov
jge
add
dec
mov
clc
repnz
nop
cld
jae
add
aam
inc
add
add
add
mov
nop
leave
jmp
add
add
inc
out
out
sub
clc
repnz
nop
cld
jae
add
add
cld
add
clc
repnz
nop
cld
jae
or
inc
add
pop
shr
clc
repnz
nop
cld
jae
add
mov
nop
jge
pushf
xor
push
mov
xchg
ret
add
cld
add
add
test
inc
and
clc
repnz
nop
cld
jae
add
adc
add
mov
je
push
mov
nop
leave
jmp
jns
jge
xchg
out
cmpl
push
mov
nop
leave
jmp
add
add
fimuls
jge
jns
push
mov
xchg
ret
sub
incl
add
jns
push
pop
xorl
clc
repnz
nop
cld
jae
loop
sbb
clc
repnz
nop
cld
jae
add
adc
xchg
add
mov
test
stc
clc
repnz
nop
cld
jae
stc
cmp
add
clc
repnz
nop
cld
jae
stos
test
add
repnz
nop
cld
jae
xor
jns
push
nop
lahf
adc
add
clc
repnz
nop
cld
jae
lret
add
nop
add
mov
mov
repnz
nop
cld
jae
stos
loop
or
add
add
nop
leave
jmp
std
test
stos
add
fldl
xchg
ret
mov
std
add
shll
mov
mov
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
sbb
add
lods
pop
clc
repnz
nop
cld
jae
aad
add
add
add
clc
repnz
nop
cld
jae
add
add
sti
clc
repnz
nop
cld
jae
add
add
pop
push
mov
xchg
ret
add
add
jle
lea
push
mov
xchg
ret
add
jle
add
repnz
nop
cld
jae
add
jp
sub
jl
push
mov
xchg
ret
notb
cmp
add
mov
clc
repnz
nop
cld
jae
adc
add
mov
shrb
nop
cld
jae
lret
add
inc
adc
xor
clc
repnz
nop
cld
jae
mov
xchg
sbb
dec
cmp
repnz
nop
cld
jae
into
add
rcrb
mov
clc
repnz
nop
cld
jae
add
lahf
jp
add
mov
clc
repnz
nop
cld
jae
jge
arpl
add
mov
nop
nop
cld
jae
aad
add
push
mov
add
add
testb
cli
add
jbe
add
jnp
pop
mov
clc
repnz
nop
cld
jae
rolb
add
cwtl
lret
push
loopne
mov
xchg
ret
add
mov
add
add
rol
clc
repnz
nop
cld
jae
sbb
iret
rolb
add
pop
clc
repnz
nop
cld
jae
mov
add
not
xor
mov
into
loopne
add
add
loop
std
fs
mov
sbb
inc
add
add
sub
push
push
mov
xchg
ret
rolb
iret
add
dec
stos
clc
repnz
nop
cld
jae
adc
add
adc
cmc
loopne
mov
add
mov
add
testl
push
scas
sub
jl
add
adc
mov
add
clc
repnz
nop
cld
jae
add
jge
jne
pop
push
mov
xchg
ret
mov
out
add
add
add
repnz
nop
cld
jae
add
into
mov
into
stos
mov
push
mov
nop
leave
jmp
add
xor
inc
imul
inc
add
mov
add
push
clc
repnz
nop
cld
jae
add
mov
push
clc
repnz
nop
cld
jae
add
add
jmp
add
clc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
add
add
or
clc
repnz
nop
cld
jae
sbb
push
clc
repnz
nop
cld
jae
iret
add
stos
pop
mov
clc
repnz
nop
cld
jae
inc
add
mov
nop
leave
jmp
add
out
pop
stos
syscall
push
add
test
push
mov
xchg
ret
add
adc
add
pop
clc
repnz
nop
cld
jae
iret
add
add
and
movzwl
clc
repnz
nop
cld
jae
sbb
add
pop
add
mov
inc
add
incl
out
cwtl
adc
pop
sub
clc
repnz
nop
cld
jae
cwtl
add
push
add
add
addb
mov
add
add
in
nop
leave
jmp
add
clc
repnz
nop
cld
jae
jns
add
mov
clc
repnz
nop
cld
jae
lret
add
nop
cld
jae
sbb
add
mov
add
std
mov
clc
repnz
nop
cld
jae
iret
add
cmp
clc
repnz
nop
cld
jae
add
add
add
adc
repnz
nop
cld
jae
add
iret
std
sbb
jl
test
clc
repnz
nop
cld
jae
add
adc
sbb
repnz
nop
cld
jae
jge
aad
add
clc
repnz
nop
cld
jae
add
shl
add
push
mov
nop
leave
jmp
add
add
add
mov
add
nop
nop
cld
jae
pop
adc
pop
rolb
mov
pushl
push
mov
xchg
ret
sbbl
adc
mov
mov
clc
repnz
nop
cld
jae
addl
or
rclb
nop
leave
jmp
mov
add
add
mov
xchg
ret
adc
pop
xchg
fisubrs
adc
pop
push
mov
xchg
ret
fs
add
add
inc
in
xchg
sub
clc
repnz
nop
cld
jae
call
mov
push
mov
xchg
ret
inc
add
jp
into
pop
fimuls
nop
nop
cld
jae
add
into
add
nop
jge
test
clc
repnz
nop
cld
jae
xor
add
jmp
repnz
nop
cld
jae
fs
add
add
lret
pop
push
mov
nop
leave
jmp
fiadds
add
bound
addl
inc
add
push
mov
xchg
ret
or
jmp
iret
xchg
xor
add
push
mov
nop
leave
jmp
loopne
pop
xchg
add
stc
rolb
mov
add
repnz
nop
cld
jae
addl
add
pop
pop
mov
inc
add
add
fldl
sti
add
add
cmp
add
sub
clc
repnz
nop
cld
jae
add
add
mov
dec
xor
push
mov
nop
leave
jmp
sub
testb
stc
add
lret
dec
push
mov
xchg
ret
xchg
add
add
xor
add
das
push
clc
repnz
nop
cld
jae
add
adc
add
bound
push
mov
add
push
mov
nop
leave
jmp
sbb
jp
pop
rep
push
mov
xchg
ret
add
lret
sldt
xchg
and
add
clc
repnz
nop
cld
jae
bound
test
mov
dec
mov
jmp
inc
adc
add
add
xchg
add
add
mov
mov
clc
repnz
nop
cld
jae
xor
in
xor
clc
repnz
nop
cld
jae
cld
fiadds
add
std
mov
test
call
in
nop
leave
jmp
add
add
icebp
or
repz
repnz
nop
cld
jae
add
fsubp
cmp
mov
rolb
addb
jae
push
clc
repnz
nop
cld
jae
pop
inc
aad
std
add
add
sub
jne
clc
repnz
nop
cld
jae
or
loopne,pt
out
add
push
mov
xchg
ret
adc
xor
nop
mov
rolb
outsb
xor
push
mov
xchg
ret
add
xchg
stc
adc
add
sub
nop
cld
jae
xchg
lret
add
cwtl
add
rolb
mov
movzwl
clc
repnz
nop
cld
jae
add
mov
add
push
clc
repnz
nop
cld
jae
add
jns
fwait
mov
push
mov
nop
leave
jmp
nop
pop
addl
add
or
clc
repnz
nop
cld
jae
add
stos
clc
repnz
nop
cld
jae
add
mov
add
mov
clc
repnz
nop
cld
jae
adc
faddl
add
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
test
push
mov
xchg
ret
std
cwtl
inc
pop
add
add
repnz
nop
cld
jae
mov
mov
add
sbb
test
push
mov
nop
leave
jmp
sbb
add
stc
push
mov
loope
mov
push
mov
nop
leave
jmp
fs
adc
bound
imul
cld
jae
nop
stc
xchg
xlat
lds
jmp
repnz
add
std
add
add
inc
xor
clc
repnz
nop
cld
jae
add
rep
clc
repnz
nop
cld
jae
mov
iret
add
xabort
nop
nop
cld
jae
add
add
mov
inc
add
clc
repnz
nop
cld
jae
add
mov
fs
pushl
clc
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
test
lahf
add
add
mov
movzwl
clc
repnz
nop
cld
jae
mov
nop
lcall
inc
push
mov
xchg
ret
sbb
mov
notb
inc
cmp
stos
push
mov
nop
leave
jmp
fiadds
mov
add
lea
clc
repnz
nop
cld
jae
jle
add
add
mov
push
sub
or
inc
add
jns
pop
inc
add
stc
push
clc
repnz
nop
cld
jae
add
pop
add
mov
sub
clc
repnz
nop
cld
jae
std
add
or
mov
ret
mov
add
lahf
add
add
dec
loop
add
hlt
jle
arpl
add
mov
lea
lcall
mov
mov
mov
pop
cmpsb
movsl
stc
sbb
aas
push
stos
xor
lahf
cli
mov
imul
sbb
daa
jg
pop
pop
ljmp
xchg
add
mov
mov
lret
fstpt
jnp
not
xlat
dec
stos
rolb
mov
sbb
mov
push
pop
cmp
scas
sbb
dec
mov
ret
cmp
pop
or
push
arpl
pop
jp
add
mov
out
movsb
movsb
mov
add
adc
mov
and
mov
sbb
test
ret
test
mov
lahf
rolb
mov
inc
imul
leave
in
add
dec
sbb
inc
adc
mov
in
jl
jge
arpl
mov
addb
arpl
mov
bound
mov
xchg
scas
sbb
jmp
cmp
mov
mov
inc
sub
mov
data16
into
and
push
pop
gs
mov
add
call
push
add
xchg
mov
ror
mov
cwtl
popf
ja
arpl
pop
push
xorl
inc
pop
xor
arpl
into
sub
lcall
dec
mov
jb
mov
adc
je
xchg
cmp
daa
xor
xchg
push
arpl
imul
add
add
inc
add
repnz
push
ficompl
test
push
or
orps
pop
aad
add
leave
inc
adc
mov
add
push
xchg
push
xor
mov
repz
ja
and
mov
jb
mov
test
lea
lret
movsl
loope
lock
add
adc
mov
push
xor
pop
mov
add
das
push
add
scas
shll
add
mov
or
xchg
cmc
imul
fld
icebp
add
mov
dec
jge
jnp
test
loopne
mov
mov
mov
inc
add
add
and
jnp
add
and
rolb
push
nop
add
pop
push
js
cmp
fstps
pop
repnz
stc
fcomps
hlt
sub
dec
stc
jmp
repnz
mov
mov
mov
cld
fwait
push
add
sbb
int3
or
loope
add
arpl
jno
ljmp
cmp
rolb
mov
or
add
adc
lcall
hlt
push
test
add
cmp
sbb
add
imul
stc
pop
dec
es
add
xchg
das
fndisi(8087
jae
cmp
ja
in
cmp
pop
or
mov
scas
cmpsb
clc
addb
js
ret
push
cmp
inc
xor
ret
lods
inc
mov
jbe
ret
mov
cmp
adc
aad
sbb
xchg
pop
fsubl
int
add
and
dec
pop
jmp
mov
mov
mov
jo
mov
ret
push
inc
js
ss
in
pop
add
push
cmp
cli
ret
stos
outsl
movsb
cmp
add
mov
pusha
add
dec
jmp
test
repnz
neg
lret
add
rolb
iret
insb
imull
adc
add
insb
jle
or
sub
or
sub
add
mov
clc
mov
add
mov
add
mov
hlt
adc
add
sbb
outsb
mov
mov
jle
mov
sbb
rolb
mov
arpl
scas
mov
add
add
inc
cli
fiaddl
call
addr16
add
or
enter
movsb
jmp
std
jle
cmp
add
mov
add
add
aad
lods
cmpsl
dec
jno
mov
pushf
dec
jg
jl
subl
popa
cmc
dec
cwtl
mov
mov
sub
mov
ret
cmp
pusha
add
sub
fistl
movsl
ljmp
adc
int
push
popa
sti
sbb
mov
add
mov
jp
ja
xlat
arpl
fmuls
lds
xchg
add
imul
loopne
mov
lahf
rolb
mov
add
bound
mov
or
adc
pop
sub
push
mov
jmp
ret
cmpsl
cmp
xchg
mov
stos
pop
jmp
or
fs
push
adc
cli
pop
xchg
js
cmpsb
inc
add
mov
jmp
jb
mov
mov
mov
push
sub
rolb
mov
pop
out
adc
repz
cmpsl
mov
add
xchg
ljmp
pusha
add
adc
mov
cmc
xlat
adc
jmp
jmp
and
mov
xor
mov
imul
pop
jne
movb
das
enter
sub
add
push
loope
dec
jge,pt
and
add
sub
cwtl
bswap
adc
sbb
add
int3
and
mov
popf
out
dec
out
roll
rolb
mov
mov
mov
mov
mov
add
aad
loope
loope
xor
mov
das
std
popa
insb
ds
das
cwtl
je
jmp
cwtl
mov
repz
inc
add
pusha
add
add
jnp
cli
in
pop
int
push
sub
pop
data16
mov
jmp
xor
inc
mov
dec
push
scas
cmp
mov
les
aas
mov
sbb
pop
je
movl
ret
rolb
mov
lret
dec
iret
and
cmpsl
popf
pop
jne
ret
add
mov
sub
js
outsl
dec
inc
loope
add
mov
cmpl
addl
push
cmp
arpl
cmpsb
push
test
enter
inc
inc
inc
add
stos
push
mov
and
mov
or
jl
mov
add
add
mov
rolb
pop
addr16
nop
add
fdiv
and
mov
push
jp
stc
rolb
mov
add
popa
mov
add
xor
nop
add
add
cmp
push
sub
ss
insb
movsl
jl
data16
and
adc
mov
fisttpll
fstps
mov
mov
mov
mov
xchg
or
push
cld
iretw
sbb
call
cmp
or
mov
lret
sub
nop
add
ljmp
and
arpl
xor
mov
es
xchg
adc
mov
stos
sahf
lea
add
lds
js
data16
sti
out
mov
pop
jmp
lret
xchg
lods
sbb
add
pop
jb
mov
xchg
test
in
rcr
ret
jb
mov
dec
sbb
fsubr
xor
sub
add
inc
add
cwtl
sub
jecxz
hlt
pop
lods
mov
test
add
mov
rolb
mov
call
add
add
scas
lock
add
mov
add
xor
sarl
mov
fcmovnbe
push
js
mov
in
add
xchg
fdivs
add
test
sbb
xchg
or
xchg
mov
data16
outsl
pushf
loop
mov
mov
ret
xchg
js
sbb
add
sahf
mov
and
jecxz
add
add
mov
and
pushf
mov
icebp
xor
out
mov
ja
sbb
mov
lea
rolb
mov
mov
nop
add
mov
aas
sbb
loop
mov
push
adc
out
xor
pop
push
sbb
mov
sub
pop
fisttpll
ficoml
mov
add
stos
dec
bound
mov
push
and
rcll
add
add
add
mov
les
adc
mov
mov
mov
ret
aaa
pop
xchg
sbb
jo
mov
rorl
scas
sub
mov
add
addb
sti
pushf
cli
jl
add
leave
mov
push
mov
mov
adc
add
mov
mov
push
jge
xchg
xchg
xor
mov
std
jmp
icebp
mov
add
cmp
mov
push
add
add
lods
or
loope
js
outsb
icebp
nop
add
sbb
add
and
mov
addb
and
mov
mov
pop
sar
cmp
loopne
mov
pushf
hlt
out
xchg
inc
jmp
scas
push
and
mov
xchg
push
or
fwait
icebp
dec
jg
sub
mov
mov
mov
add
mov
dec
cmp
push
pop
mov
out
fldcw
xchg
es
lods
xor
mov
lods
faddl
mov
addb
xchg
add
push
lods
rol
inc
inc
adc
mov
dec
mov
inc
insb
mov
jno
xor
xor
sub
add
out
mov
mov
enter
rcl
rolb
mov
fsts
add
mov
mov
lds
push
movsl
xchg
and
add
adc
inc
add
mov
mov
mov
jmp
jne
pop
mov
insl
mov
jae
push
adc
mov
push
add
mov
aaa
ret
jge
inc
add
fnstcw
add
sub
jnp
pop
ret
jge
push
sbb
imul
and
pop
call
js
add
das
pop
sarl
pop
cmpsl
jp
add
add
rorl
addr16
jae
loop
mov
stos
add
mov
insb
push
add
fstpl
add
das
push
add
pop
push
add
xor
add
fstpt
stos
icebp
fidivrs
mov
mov
mov
into
adc
mov
pop
jne
out
mov
pop
mov
ret
jns
out
push
mov
mov
xchg
xchg
inc
std
or
push
mov
dec
repnz
mov
mov
add
cld
int3
jl
inc
inc
or
mov
inc
mov
jns
add
inc
mov
xchg
mov
add
or
add
xchg
add
mov
cmp
add
mov
hlt
mov
mov
add
jge
cmp
mov
insb
movsb
cmp
lret
out
add
cmpsl
xchg
lret
roll
add
loope
dec
movsb
add
aad
pop
int
aam
leave
adc
rolb
mov
in
aad
int3
mov
xchg
adc
adc
push
dec
fcoml
std
and
roll
cmp
popl
jne
in
mov
add
adc
mov
or
mov
mov
out
jmp
inc
xchg
push
adc
jae
add
mov
rorl
add
mov
aad
adc
add
add
push
push
xor
mov
push
xchg
add
pop
fldl
inc
jbe
add
mov
xchg
outsl
adcl
add
mov
xchg
stos
push
sbb
lea
inc
popa
test
lret
mull
sub
and
mov
push
xchg
xchg
sub
hlt
add
popf
cmp
scas
add
xor
dec
push
mov
mov
inc
dec
addb
mov
hlt
cmpsl
dec
dec
dec
mov
sub
mov
popf
sbbl
add
add
ja
arpl
fldcw
push
lret
dec
enter
lods
insl
movsb
outsl
jne
test
add
out
aas
sti
mov
add
in
jge
addb
adc
add
hlt
in
jae
addr16
add
adc
cmp
outsb
lods
push
ja
out
jl
inc
add
push
ja
jmp
jp
add
mov
dec
mov
dec
mov
mov
jl
iret
leave
xchg
addb
rolb
mov
mov
mov
or
stc
jg
sub
cmpsl
aam
add
jae
adc
mov
dec
or
add
jb
mov
addl
mov
jmp
popa
and
mov
push
cmpsb
std
xor
js
enter
insb
loopne
mov
adc
repnz
mov
aam
jmp
pop
test
mov
xor
mov
mov
add
aam
jmp
mov
dec
sub
lret
xlat
and
add
mov
add
add
jnp
mov
add
mov
loopne
mov
push
sbb
jp
leave
sbb
jl
adc
mov
jge
pop
lea
mov
test
push
add
rolb
mov
mov
mov
in
inc
repnz
add
push
mov
xor
addr16
add
ss
fisubrl
cltd
jns
add
xchg
jb
mov
sub
out
mov
xchg
add
mov
mov
addb
sbb
mov
or
mov
mov
sub
jno
ret
push
add
add
fnstenv
mov
mov
add
add
mov
sti
out
mov
adc
mov
xlat
divl
xchg
add
cmp
call
add
jae
jl
jmp
testb
and
cmpl
add
dec
dec
test
add
scas
push
dec
mov
arpl
add
dec
cmp
test
in
insl
scas
jl
sbb
cmpsl
mov
mov
add
mov
imul
ljmp
pushf
xchg
fadds
mov
add
inc
inc
cmp
ret
dec
pop
dec
add
shll
xor
in
imulb
mov
sub
and
dec
stos
cld
xor
mov
lock
mov
stc
pop
les
and
pop
vpmaddwd
sti
pusha
add
add
mov
and
xchg
add
push
in
cmp
lods
mov
mov
mov
xor
mov
push
es
sub
sub
imul
add
cmp
add
loop
mov
inc
add
out
xlat
inc
add
outsl
ficompl
push
add
cltd
mov
add
xchg
dec
mov
mov
cmp
addb
aas
or
scas
sbb
mov
call
fdivl
add
push
add
dec
add
mov
mov
pop
add
leave
mov
adc
icebp
lret
mov
movsl
lahf
push
test
sahf
inc
add
mov
add
mov
push
pop
and
mov
add
pusha
add
aam
repz
pusha
add
mov
jae
cmp
dec
inc
rcrl
jecxz
xor
xchg
xor
out
aam
int3
leave
les
sahf
push
je
add
dec
xor
mov
xchg
arpl
mov
mov
test
pop
cli
jecxz
add
xchg
cmp
or
jle
xchg
add
mov
add
add
sbb
mov
add
xlat
xchg
lock
adc
push
add
add
leave
mov
aas
pop
insl
or
frstor
cmp
mov
add
add
clc
lret
addb
gs
pop
mov
inc
add
adc
push
add
lahf
and
test
fcompl
mov
mov
nop
add
pop
xor
mov
add
mov
push
mov
adc
mov
enter
adc
mov
int
cmpsb
rcll
mov
js
dec
or
or
out
rcr
add
xor
mov
pop
mov
jb
mov
adc
mov
lahf
stos
addb
xlat
shll
xchg
inc
push
aaa
or
xchg
je
or
inc
and
mov
ljmp
mov
lods
xor
mov
fmuls
xor
mov
mov
add
dec
pusha
add
add
jb
mov
mov
add
insl
rcr
gs
outsb
mov
sbb
ficoms
or
mov
sub
cs
jae
add
adc
add
dec
clc
fists
mov
jnp
jbe
aad
pop
les
jp
fs
mov
and
mov
mov
mov
shr
loop
mov
mov
add
scas
ja
xor
sti
cmpsb
pusha
add
mov
pop
lret
add
mov
jns
test
out
imulb
xchg
jo
mov
cmpl
mov
adc
fsubr
in
adc
js
jl
sub
aas
pop
es
sbb
sbb
lcall
ud0
inc
pop
movsb
jbe
jnp
das
repnz
js
inc
loopne
mov
adc
test
popf
cmp
repz
add
jle
jmp
add
xlat
scas
cmp
jg
jne
mov
add
mov
gs
ja
add
sbb
jnp
lods
aas
xor
enter
mov
mov
add
mov
jl
sub
mov
xchg
dec
cltd
push
arpl
sub
mov
mov
xor
mov
mov
add
clc
je
push
mov
sub
ja
push
mov
addl
jo
mov
xor
mov
and
mov
add
push
fnsave
out
sbb
mov
outsb
or
mov
shll
cmc
fcmove
ret
jb
mov
add
subl
lds
iret
movsb
sti
mov
in
pop
addr16
pop
xchg
and
stc
xlat
je
add
xchg
push
cmp
dec
sbb
pop
addb
outsl
sbb
movsb
xchg
add
inc
add
add
xchg
inc
add
and
mov
fnstenv
jns
jb
mov
jg
stc
jmp
add
leave
int
xor
mov
xchg
add
pushf
cli
push
add
imul
add
xor
andl
fisubl
enter
xchg
add
fdivrs
je
cli
nop
add
sahf
sbb
push
add
clc
rolb
mov
jl
or
mov
stc
mov
add
into
adc
mov
cmpsb
scas
xor
xchg
sbbl
mov
lret
add
mov
addb
jb
mov
cmp
stos
addb
jnp
push
mov
cmp
mov
pop
aam
add
mov
test
xchg
in
push
lods
lahf
dec
sub
add
or
sti
repnz
ss
mov
or
cwtl
imul
dec
inc
stc
pushf
loopne
mov
jne
add
ficomps
sub
dec
outsb
inc
test
mov
mov
lret
xchg
enter
dec
lahf
cmp
jle
dec
outsb
inc
rolb
mov
iret
or
cmp
mov
mov
shll
inc
aas
push
add
add
addb
test
add
sbb
iret
jb
mov
push
iret
jp
push
xchg
add
rcll
add
and
add
push
mov
pop
dec
ss
jno
adc
mov
sbb
in
xor
mov
mov
mov
test
ds
les
add
lret
xor
mov
mov
out
test
mov
xchg
es
dec
mov
mov
push
inc
bound
mov
out
cmp
leave
fs
les
add
xchg
add
cmp
sub
xor
pop
xchg
mov
in
loop
mov
nop
add
cmp
sti
lcall
je
add
cmp
iret
in
push
add
pop
adc
cwtl
lock
xor
or
test
add
push
or
push
test
adcl
mov
fwait
cmp
lock
cmpsl
push
enter
sub
dec
xchg
jbe
ffree
loope
adc
and
mov
in
pop
sub
add
lahf
fidivrl
dec
mov
jecxz
mov
xor
add
add
add
mov
jo
mov
jecxz
xor
mov
mov
or
xor
mov
filds
inc
add
or
mov
add
mov
stos
int3
xor
xor
inc
add
mov
ja
add
rorl
add
mov
stos
jp
mov
push
add
sbb
push
add
xchg
cmp
adc
mov
mov
sbb
add
stc
mov
mov
mov
out
adc
mov
inc
add
daa
stos
cmp
xlat
outsl
mov
repnz
jb
mov
rorl
sbb
dec
adc
pop
xor
mov
sub
mov
ret
imul
jg
mov
push
std
fwait
test
mov
mov
lret
inc
jmp
add
roll
push
outsl
push
push
cmp
xchg
push
scas
js
mov
mov
jbe
pop
mov
add
and
dec
xchg
add
pop
push
add
sub
add
xchg
add
mov
aas
fcmovb
add
jns
and
mov
movsb
popa
repz
add
mov
dec
adc
add
add
mov
jbe
ret
sbb
or
add
lock
inc
jns
add
lock
in
andl
sahf
adc
mov
add
push
js
sete
cmc
test
xor
adc
mov
or
and
mov
add
cli
inc
lods
xor
mov
rolb
sbb
mov
inc
add
push
pop
adcl
cmp
insb
sub
adc
mov
inc
add
orl
inc
add
fwait
inc
jne
das
in
or
pop
xor
add
mov
or
lods
addb
roll
jno
aaa
fbstp
ds
add
add
mov
cmc
sahf
pop
xchg
cwtl
mov
and
add
mov
jo
mov
push
sbb
stos
or
lds
add
xlat
jnp
add
sbb
jb
mov
fcomip
dec
std
sub
popf
rcll
pusha
add
xor
mov
mov
sub
cmpsb
or
sti
test
movsl
adc
add
jecxz
out
mov
cmp
mov
xor
dec
insl
xchg
scas
repz
in
fwait
pushf
rolb
jp
add
test
dec
and
addb
repnz
lea
aaa
mov
dec
mov
add
es
shll
cmp
mov
fcom
lods
lahf
sbb
jbe
push
xor
add
mov
push
jecxz
pop
jg
xlat
cmpl
cs
addr16
inc
addb
bound
mov
scas
lcall
pop
and
mov
pop
xor
adc
mov
movsb
xor
add
add
fs
add
xlat
ljmp
fiadds
cmp
scas
cli
popf
dec
push
jbe
and
mov
imul
incl
adc
idivb
cs
bound
mov
cld
movsl
cmpsl
fbld
out
addb
int3
leave
jbe
jno
dec
mov
xor
shlw
add
inc
add
mov
inc
es
add
jae
add
add
xchg
in
imul
push
loopne
mov
xchg
xor
sbb
mov
adc
aam
fcomps
add
pop
mov
add
mov
sbb
rolb
rolb
mov
add
mov
mov
lea
dec
cmp
sbb
sbb
add
popf
and
ja
adc
sub
push
stos
adc
xor
mov
add
lods
aaa
loope
mov
jge
ficomps
ds
out
cld
pop
pop
loope
out
xchg
std
or
mov
mov
bound
mov
ljmp
bound
mov
sahf
out
sti
bound
mov
popf
pop
mov
fnop
add
add
mov
add
popf
iret
mov
mov
mov
mov
addr16
xor
rolb
mov
rolb
add
mov
repnz
add
repz
pop
jmp
push
xor
mov
cmp
out
mov
mov
mov
or
mov
std
and
daa
or
push
and
mov
stc
mov
add
in
sar
pushf
xor
inc
jecxz
xor
jge
cltd
jne
inc
insl
mov
adc
mov
jns
cmpsl
sahf
dec
push
add
int
addb
and
or
jbe
add
pop
repz
mov
pop
int3
mov
pop
xor
cmpl
popf
pusha
add
lock
or
sub
mov
dec
inc
xor
fcmovnu
xor
mov
mov
lret
xor
cmpsl
sub
or
aam
test
jecxz
mov
imul
sbb
mov
inc
dec
fmuls
mov
inc
inc
int3
in
add
pusha
add
clc
fwait
jmp
addb
dec
push
ja
lock
pusha
add
sbb
push
cmpsb
imulb
loope
xor
mul
jo
mov
lea
mov
and
mov
iret
fs
fldpi
xchg
sbb
xchg
iret
xchg
imul
sub
or
cli
mov
add
lea
nop
add
push
add
jb
mov
push
inc
add
jno
scas
or
add
insl
adc
or
cld
aaa
das
adc
mov
inc
adc
mov
ja
clc
xor
mov
aad
xor
mov
mov
mov
inc
arpl
mov
test
mov
xor
add
mov
out
add
ficompl
testl
cmp
add
test
dec
xchg
jne
arpl
or
pop
pop
daa
mov
leave
dec
ja
add
sub
int
xchg
addr16
sbb
fs
out
scas
mov
xor
sbb
xor
mov
cwtl
int
inc
jb
mov
popa
ficoml
popf
push
cs
add
add
pop
adc
mov
in
adc
mov
push
add
inc
add
cmp
mov
mov
mov
add
cmpsl
xchg
add
mov
add
jnp
jl
and
push
cltd
test
mov
add
cmp
mov
test
xor
add
add
mov
add
mov
jp
push
cltd
mov
stc
adc
mov
adc
push
sbb
cmp
mov
mov
mov
or
rcll
mov
bound
mov
lods
mov
mov
dec
jae
or
inc
add
sub
xchg
dec
lret
je
or
cmp
add
mov
and
inc
mov
fwait
je
adc
inc
ficoms
dec
inc
cmc
rolb
mov
add
insb
jb
mov
jne
fsubr
push
arpl
add
mov
mov
arpl
stos
push
rolb
ljmp
test
mov
mov
mov
js
or
out
push
jnp
pop
inc
inc
add
mov
adc
and
mov
ret
mov
adc
add
mov
out
nop
add
and
sbb
ss
imul
add
lds
adc
mov
pop
lcall
repnz
mov
out
dec
push
add
xchg
cmp
daa
mov
sub
nop
add
mov
push
sbb
dec
jae
dec
add
mov
aaa
mov
stos
into
fnstenv
pop
aaa
xchg
das
aad
aad
jp
mov
xchg
mov
sti
sub
mov
mov
mov
and
mov
jge
dec
inc
add
add
cltd
out
dec
repnz
jp
xchg
lea
mov
fistps
xor
mov
lea
add
sub
adc
pop
add
and
sub
movsl
add
mov
mov
and
fisubl
inc
add
mov
je
pop
es
mov
mov
arpl
sbb
addb
lret
into
jle
sti
das
lods
mov
insb
orl
rcrl
mov
sbb
push
cltd
lock
or
sbb
add
mov
mov
add
in
add
and
or
jbe
mov
add
xor
add
adc
add
sbb
imul
adc
mov
fcoms
xor
xchg
in
dec
pop
sbb
imull
mov
add
mov
insb
lcall
leave
adc
ljmp
rolb
mov
notl
imul
add
mov
xchg
movsb
adc
mov
lock
addb
or
fsubs
mov
pop
and
mov
jmp
lahf
outsb
xor
mov
push
add
or
lock
pop
dec
mov
pop
sub
or
xor
cmpsb
sbb
xchg
fnsave
xor
fs
adc
pushf
aas
in
imul
add
add
mov
data16
pop
loopne
mov
add
sbb
cmpsl
out
insl
cmp
pop
imul
add
add
mov
cli
out
sub
cmpsb
adc
jnp
cmp
pop
fisubl
lret
or
push
cmp
dec
ret
add
add
adc
loope
in
js
gs
mov
xor
mov
sbb
add
pop
popf
fwait
jmp
inc
add
inc
pop
in
jb
mov
cli
lds
lods
cmp
jl
mov
movsl
pop
mov
loope
sub
xchg
add
mov
int3
push
rolb
mov
add
jge
mov
inc
mov
out
ss
and
mov
stos
mov
mov
add
adc
sub
jecxz
fnsave
add
int
add
test
stos
out
add
dec
insb
lods
imul
aas
inc
scas
dec
jp
jo
mov
xchg
pop
rorl
rcll
fldcw
cwtl
adc
mov
ljmp
stos
mov
and
add
dec
pop
cwtl
xchg
xor
jge
add
call
mov
stos
add
mov
xchg
popf
daa
dec
in
leave
mov
add
mov
cmp
cmp
or
cmp
fists
lea
les
and
add
pop
cltd
rolb
mov
mov
pop
mov
sbb
add
xchg
add
mov
add
scas
stos
fs
push
add
pop
push
pop
add
mov
xor
mov
je
sbb
add
mov
mov
xor
mov
or
add
imul
and
add
leave
sub
push
add
stc
add
inc
cmpsb
sbb
mov
push
push
mov
hlt
mov
test
mov
daa
sub
xor
mov
add
mov
sub
sbb
inc
xchg
cmp
push
loope
vandps
mov
xor
mov
lock
in
cli
rolb
mov
jb
mov
in
jbe
mov
pmullw
cmpsl
dec
xchg
mov
testl
adc
es
outsl
xchg
iret
add
mov
mov
inc
add
or
sahf
cmc
sbb
cmpsl
enter
sti
push
push
add
xchg
add
add
lret
cmp
call
jb
mov
jl
xchg
fistl
sti
dec
jp
adc
mov
and
mov
mov
pop
lea
mov
lahf
xor
mov
frstor
mov
push
inc
in
jg
je
add
sbb
jg,pt
push
push
cld
pop
dec
popa
adc
jmp
cmp
dec
mov
fdivl
add
mov
mov
mov
jp
int
cmp
popl
or
aaa
fists
test
cmp
mov
outsl
dec
scas
xor
lods
inc
negl
out
jg
rolb
mov
lods
aaa
fadd
xlat
lods
jmp
les
lods
cmp
lds
cmp
lahf
inc
sbb
mov
mov
pushf
fists
push
fisubrl
dec
cmp
mov
add
ss
jae
std
bound
mov
add
stos
or
fwait
mov
xchg
mov
mov
add
cmp
adc
mov
sbb
adc
mov
mov
sub
jle
add
jl
add
mov
pop
jae
inc
add
add
mov
test
push
add
jg
lahf
aam
mov
pop
dec
and
gs
aad
add
bound
mov
mov
adc
xor
mov
dec
jns
jle
arpl
jg
pop
push
loopne
mov
add
mov
decl
and
mov
fidivl
lahf
fucomi
mov
cli
jnp
lock
cmpsl
add
mov
enter
imull
add
aam
fmuls
add
mov
int
mov
and
jae
jb
adc
mov
add
add
mov
leave
jmp
insl
push
push
add
les
pop
add
or
dec
js,pt
sbb
mov
sub
xchg
add
mov
mov
xchg
enter
push
mov
xchg
cli
xchg
jp
sbb
add
add
and
mov
clc
cld
xchg
xchg
aad
les
xchg
js
mov
add
push
lods
fdivl
push
sahf
mov
cld
fidivrs
push
in
fmul
jl
inc
dec
add
dec
adcl
psubb
cmpsl
dec
popa
mov
mov
sbb
add
add
adc
mov
add
hlt
jbe
addl
mov
leave
mov
mov
add
mov
lods
jb
mov
bound
mov
push
xchg
lcall
mov
push
and
mov
ret
sarl
pop
dec
data16
mov
xchg
add
mov
pop
pop
pop
dec
jl
loopne
mov
repz
mov
mov
cli
mov
nop
add
add
adc
mov
jns
jl
pop
xchg
adc
mov
mov
aas
decb
mov
mov
test
add
fiaddl
stos
fcmovnbe
add
sub
xchg
ljmp
adc
mov
push
std
cld
repnz
xchg
aad
pop
mov
add
cmp
push
sbbl
mov
jg
repnz
mov
rolb
mov
les
and
clc
stos
xchg
repnz
mov
sahf
jne
push
movsb
mov
out
repnz
mov
add
dec
stos
ss
clc
aas
xchg
add
je
xlat
dec
jge
xchg
add
add
mov
xchg
or
add
mov
add
addb
repnz
mov
xor
ds
inc
add
xor
mov
mov
orl
int
fnstenv
lret
and
sbb
mov
lods
cmp
ss
add
test
pushf
or
mov
pop
mov
std
sub
lret
xchg
add
leavew
pop
and
mov
jle
inc
dec
test
inc
mov
jns
addb
xchg
adc
mov
in
add
mov
sarl
sub
mov
mov
lcall
scas
test
ja
add
mov
cld
dec
or
lret
sti
sub
add
daa
push
add
aad
add
lods
imul
push
stc
mov
aaa
sub
mov
adc
mov
mov
lock
loope
repnz
inc
aas
addb
in
mov
lea
rolb
mov
push
jbe
or
jge
add
out
shrl
add
shll
add
imul
loopne
mov
pop
fdivr
cmp
insb
xchg
icebp
test
xor
mov
add
sub
push
add
repz
adc
mov
xor
mov
or
or
add
dec
inc
mov
loope
insl
add
mov
jecxz
add
adc
pop
cmpsl
xor
mov
cmp
add
and
cmp
xchg
sbb
add
cmpsl
test
fmull
mov
push
inc
add
add
mov
mov
inc
add
cmpsb
faddl
xchg
mov
xlat
pop
bound
mov
insl
mov
mov
inc
rcll
add
or
and
jns
pusha
add
fdivrp
insb
shr
add
inc
add
pop
addb
daa
push
xor
cs
push
nop
add
dec
or
cmc
mov
mov
pop
dec
and
mov
mov
pushf
insl
gs
dec
and
xor
mov
mov
push
cmpsl
out
xor
mov
cmpsl
dec
std
rolb
push
add
out
addb
dec
addb
sub
add
add
add
or
mov
inc
ss
stos
inc
add
xchg
roll
mov
add
push
pop
or
mov
inc
pusha
add
add
push
add
and
mov
testb
add
jbe
xor
scas
inc
push
dec
hlt
mov
lahf
test
mov
mov
imul
mull
add
lock
xor
ja
sahf
mov
cmp
test
and
mov
add
xchg
xor
mov
pushf
dec
lock
sub
adc
cmp
inc
mov
lahf
add
add
mov
push
dec
leave
pop
int3
push
pop
int
add
and
add
loop
mov
add
pop
out
lock
mov
jbe
leave
mov
or
push
inc
add
adc
mov
das
ret
into
ffreep
add
mov
add
add
or
add
cmp
or
idiv
push
mov
inc
dec
add
pop
mov
mov
fs
imul
pop
loopne
mov
jl
add
push
cmpsb
pop
mov
add
rcrl
gs
idivl
int
js
inc
inc
adc
cmp
add
cmp
cltd
pop
addb
jbe
aad
mov
push
ret
fdiv
and
cwtl
jle
push
iret
adc
popf
xor
sbb
jle
or
sahf
add
mov
adc
push
addb
fwait
mov
mov
out
mov
jno
or
adc
mov
lret
repnz
push
dec
fisubs
pop
mov
ret
out
pop
rolb
mov
mov
scas
mov
add
sub
add
rolb
mov
aam
add
icebp
cmp
cmp
sub
aas
and
mov
mov
pusha
add
loopne
mov
jbe
xchg
in
dec
jmp
xor
mov
add
outsl
xchg
lahf
cmp
sub
aaa
loopne
mov
repnz
mov
xchg
add
adc
scas
daa
into
ret
cmpsb
test
add
add
adc
mov
inc
inc
inc
add
push
add
mov
rolb
mov
scas
fists
icebp
mov
add
in
mov
mov
pop
dec
mov
inc
cmpsl
xlat
cld
add
mov
mov
add
imul
std
mov
movsb
popa
fdivl
stos
pop
in
repnz
add
jp
cmp
test
add
cld
test
mov
mov
mull
loopne
mov
push
sub
test
push
adc
les
addb
fwait
xchg
outsb
popa
test
mov
adc
hlt
cwtl
mov
adc
mov
add
out
xor
cmp
mov
pop
ret
aas
lods
out
loope
in
stos
lds
mov
mov
mov
stc
pop
and
dec
pop
fcmovnb
sub
cli
test
in
cmp
cli
sahf
cmp
add
mov
add
add
shrl
lahf
add
mov
lods
dec
out
sub
add
es
leave
aam
inc
add
add
test
inc
pushf
or
aad
or
data16
push
fnstcw
lret
cmpsb
mov
mov
xor
mov
sub
mov
add
add
add
rolb
mov
add
mov
jnp
mov
mov
add
cmp
jmp
jmp
add
xchg
neg
push
and
add
sub
iret
mov
mov
test
imulb
in
jg
add
add
roll
ret
ret
testl
pop
mov
add
mov
loop
mov
xchg
repnz
mov
mov
inc
cmp
mov
xchg
daa
sbb
pop
mov
or
cmp
dec
loope
hlt
dec
mov
out
pop
mov
lret
lret
cld
lret
mov
add
cmp
mov
ss
or
add
mov
push
sbb
jnp
mov
in
lcall
mov
out
not
hlt
pop
adcl
mov
push
jmp
mov
sub
add
ss
sub
ljmp
adc
fsubrl
lcall
inc
sub
jae
stc
and
bound
mov
ljmp
ja
push
in
lods
in
cltd
imul
mov
sbb
and
mov
outsl
push
jnp
cmp
fistps
cwtl
or
cmc
mov
lea
sahf
adc
mov
add
pop
cmp
or
add
out
aas
inc
and
mov
lods
lret
repnz
mov
into
xchg
iret
cld
sbb
mov
ss
xchg
lods
cwtl
mov
jl
xchg
loop
mov
inc
add
clc
fdivrl
jle
cli
pop
gs
add
int3
sbb
lahf
std
gs
push
inc
dec
adc
and
rolb
and
add
mov
ret
lret
add
call
pop
fidivrs
xchg
insb
jmp
hlt
push
in
ret
cltd
xor
push
mov
and
jg
sbb
cmp
addb
mov
or
fwait
pop
jns
mov
inc
jp
adc
inc
aad
jbe
dec
adc
enter
mov
dec
inc
mov
in
add
add
mov
add
mov
out
rolb
ja
or
or
rorl
add
mov
fwait
in
in
je
push
add
mov
shrl
loope
and
add
fdiv
add
frstor
cmpsl
sub
mov
xor
cmovle
mov
or
xchg
mov
cmpsl
or
add
add
push
inc
mov
addb
fcomps
into
jns
ja
sbb
insl
pusha
add
daa
popf
leave
fistpll
xor
add
add
sbb
add
xchg
and
push
cmp
test
cmp
mov
mov
add
das
faddp
nop
add
aaa
fdivrl
stc
inc
popf
dec
inc
or
add
jge
stos
lahf
test
daa
shr
add
cmp
xlat
test
adc
inc
jae
add
mov
adc
push
in
fs
jno
sbb
push
jbe
lret
add
mov
mov
add
and
mov
cmp
add
mov
mov
add
mov
mov
add
jns
jno
insl
les
add
mov
jge
mov
push
mov
incb
fsts
imul
aas
xchg
add
xchg
stos
aas
insl
add
rcl
mov
lret
sub
jge
lret
xchg
mov
push
btr
cmpsb
sbb
fwait
aas
inc
adc
dec
data16
or
xchg
push
cmp
aad
cmp
inc
add
ficoms
repz
ds
adc
mov
and
mov
lcall
add
decl
add
mov
sbb
add
add
adc
mov
mul
adcl
aad
xchg
add
add
mov
jmp
add
cmp
pop
sub
push
stc
mov
add
mov
iret
int
add
push
add
addb
dec
cmpsb
lods
jge
xchg
push
cld
gs
movsl
fsubl
fisttpll
mov
ficomps
out
xchg
add
inc
ja
mov
add
mov
xchg
cmc
mov
loopne
mov
mov
mov
cmp
out
adc
mov
mov
mov
imul
mov
mov
movsb
fimuls
test
sub
fldl
add
dec
lds
insl
repnz
mov
adc
jne
mov
push
mov
lret
rcrl
jle
int
in
cltd
pop
add
js
dec
mov
add
fcomps
pop
outsb
rcrl
mov
fcomps
xlat
or
pop
add
xor
mov
jp
sbb
mov
add
cs
pop
cmpsl
jp
loop
mov
mov
rolb
mov
or
sbb
int3
pop
mov
jne
test
mov
mov
xor
addb
push
rolb
mov
pop
mov
sub
pop
movsl
or
xor
sub
lahf
add
push
mov
mov
cmpsl
sbb
addb
scas
cli
jmp
inc
add
popa
push
cmpsl
rolb
std
rolb
mov
lcall
xchg
pop
mov
pusha
add
mov
push
add
aas
stc
sub
add
sub
add
sub
mov
ljmp
andl
and
mov
adc
sbb
sbb
inc
add
fdivrl
loop
mov
or
mov
sar
add
add
xor
bound
mov
xor
mov
mov
sbb
add
lock
mov
cli
jecxz
cs
inc
jne
mov
add
icebp
jbe
shrl
jge
jge
insl
push
add
mov
das
jge
adc
mov
push
lret
mov
push
movsb
cmp
test
bound
mov
lret
jmp
mov
fwait
add
mov
mov
mov
add
lret
cmp
push
xchg
jecxz
mov
add
mov
pop
xor
jge
rcrl
adcl
add
lods
imul
xchg
mov
xchg
outsl
enter
jno
andl
add
pushf
stos
int
dec
sub
mov
add
cmpsl
mov
test
inc
outsb
or
add
add
call
fwait
and
mov
add
sti
pop
lea
call
mov
add
xor
mov
mov
outsb
push
cmc
xchg
mov
sarl
mov
insl
bound
mov
jmp
nop
add
fcoml
or
lods
ret
adc
xor
mov
add
mov
imul
mov
mov
add
push
lods
inc
add
push
movsl
sbb
mov
cmp
add
arpl
add
add
and
push
add
das
mov
mov
adc
mov
pshufw
cld
jb
mov
enter
fdivs
dec
cmpsb
add
out
inc
std
mov
int
jmp
lahf
insl
xlat
mov
mov
scas
pop
mov
inc
jno
or
clc
aam
cmp
mov
ljmp
mov
cmpsb
jo
mov
test
inc
jg
test
add
cmp
xor
mov
sub
rolb
mov
push
lahf
movsb
push
cmp
mov
cmpsl
pop
repz
cmp
push
xlat
mov
mov
call
or
sub
hlt
pop
ljmp
lds
mov
fisttpl
rolb
sbb
mov
push
lret
popl
mov
jae
mov
jp
add
stc
xorl
mov
add
mov
sub
data16
stos
ja
bound
mov
mov
mov
out
mov
test
mov
adc
add
mov
add
add
mov
and
mov
cmp
and
mov
fs
add
sub
push
test
pop
dec
push
jno
jbe
add
mov
mov
pop
mov
inc
add
pop
or
addr16
and
mov
mov
add
mov
fbld
push
mul
mov
cs
jno
add
add
test
ja
cmp
lret
mov
dec
mov
sbb
xor
mov
dec
int3
pop
adc
mov
xlat
in
xchg
dec
sub
lcall
mov
mov
mov
or
mov
add
add
shrl
cmp
leave
sahf
js
and
lea
ss
xor
mov
pop
jge
push
pop
arpl
xor
inc
dec
sbb
rorl
cmp
mov
jo
mov
push
mov
rolb
xor
sti
out
test
repnz
add
rolb
mov
mov
add
inc
clc
mov
pop
lods
stc
pop
xor
mov
mov
xorl
add
rolb
inc
popf
push
sbb
mov
jno
or
int3
rolb
mov
pop
xor
sub
mov
mov
cmp
add
adc
add
outsl
int3
mov
push
xchg
add
aas
cld
jae
lcall
add
mov
nop
add
sbb
mov
mov
cmc
rolb
and
iret
cwtl
sbb
add
scas
xor
add
pusha
add
mov
add
dec
int3
mov
stc
cmpsl
jl
pop
nop
add
leave
pop
or
mov
mov
imul
fbld
add
adc
add
sub
cltd
mov
sbb
ja
mov
push
mov
add
call
mov
nop
add
xchg
mov
sub
add
mov
add
mov
outsl
scas
or
data16
mov
fsubrl
pop
lds
add
add
insl
and
mov
xchg
cmc
pop
into
ss
fisubrs
ja
sti
jb
mov
add
int3
inc
cmp
dec
jo
mov
negl
das
mov
je
add
jbe
add
inc
dec
lods
jle
mov
leave
inc
imul
shrl
leave
imul
mov
popa
out
dec
loopne
mov
cmp
in
and
mov
adc
fisttpl
inc
jb
mov
mov
rolb
mov
add
add
add
mov
mov
mov
in
test
pop
push
rolb
fisubl
cmc
sti
test
repnz
add
add
mov
cld
addb
xchg
add
stc
sbb
testb
dec
std
xchg
add
mov
mov
jl
add
lea
xchg
or
push
pop
nop
add
sbb
mov
jp
inc
roll
mov
mov
cmp
adc
mov
imul
sub
addb
cld
cmp
je
scas
in
std
gs
cmp
jo
mov
cli
xlat
mov
jl
xor
mov
mov
hlt
xchg
add
inc
mov
lret
mov
imul
add
test
add
mov
fs
stos
fs
jno
add
sub
xor
pop
fiadds
xchg
mov
sub
pop
lods
test
mov
add
dec
xchg
jle
ror
rcrl
mov
pusha
add
mov
mov
mov
mov
add
fildl
xlat
push
or
leave
fsts
fidivrs
lahf
popf
insl
bound
mov
push
mov
inc
add
fsubl
pop
js
adc
lock
add
fisttpl
loopne
mov
pop
mov
add
push
imul
cli
nop
add
mov
mov
mov
fs
and
jl
iret
in
jle
push
adc
mov
ret
push
dec
outsb
movsl
pop
int3
adc
add
add
das
in
push
add
mov
movsl
sbb
mov
and
mov
add
leave
mov
xlat
pop
cli
lret
inc
dec
sbb
mov
xor
out
bound
mov
add
add
push
cmp
xor
mov
add
xor
dec
cmpsb
jno
sub
add
test
mov
mov
push
js
sarl
je
xor
mov
dec
mov
cltd
daa
mov
mov
bound
mov
inc
rcll
std
fldt
sub
stos
lods
mov
xor
add
out
fnstcw
out
test
std
in
repz
sub
fwait
pop
mov
popf
mov
and
in
loop
mov
mov
ss
sub
xchg
or
jnp
inc
cmp
add
add
mov
and
mov
mov
cmp
add
mulb
sbb
repz
jae
test
push
mov
fldln2
inc
add
cld
mov
enter
inc
aaa
mov
sub
fldt
stc
lcall
add
clc
push
pusha
add
mov
daa
pop
xchg
mov
dec
test
adc
add
lahf
cmc
add
ljmp
bound
mov
xlat
test
sarl
testl
add
mov
nop
add
jae
cmpl
jle
add
add
push
mov
cmp
jns
dec
mov
mov
cmp
into
sbb
pinsrw
test
imul
lds
sub
sub
dec
and
jmp
xchg
lods
xchg
sbb
mov
sub
push
xchg
add
fwait
jle
add
insl
pop
pusha
add
lret
dec
jl
sub
inc
add
bound
mov
cmpsb
jmp
mov
add
ljmp
int
aaa
inc
inc
sbb
add
sub
jp
pushf
cmp
lods
mov
pop
jmp
mov
push
cltd
cmp
and
pop
pop
mov
xchg
jle
add
or
aaa
testb
or
add
mov
jnp
fbld
in
cmp
add
fcomp
add
mov
adc
mov
mov
shll
dec
decl
cwtl
sbb
inc
add
xlat
imul
outsl
sub
test
ss
in
xor
add
sub
and
cmpl
mov
es
cmpl
and
arpl
lea
sbb
sbb
lcall
leave
sbb
xchg
negb
xor
add
cmp
test
mov
add
int3
ret
repnz
jb
mov
leave
jle
inc
inc
add
adc
mov
mov
add
out
roll
ljmp
in
std
mov
out
mov
adc
add
add
imul
pop
dec
iret
adc
add
nop
add
sbb
clc
sub
jge
sahf
cmp
mov
xchg
imul
lds
push
add
xchg
gs
cld
cli
inc
aad
in
add
xor
mov
incl
jae
pop
sub
mov
mov
inc
add
movsl
inc
xchg
jmp
add
mov
jp
dec
mov
repnz
aas
push
add
mov
add
mov
fnstenv
pop
push
imul
cmp
pusha
add
add
fwait
adc
push
mov
jecxz
dec
xchg
and
jne
adc
or
or
mov
mov
add
nop
add
mov
inc
xchg
push
out
lods
sub
ficoms
pop
push
mov
mov
jae
dec
popl
notl
ret
or
sub
mov
mov
add
icebp
add
cmp
xor
adc
pop
push
in
je
add
add
lret
pop
pop
and
mov
or
inc
add
adc
dec
adc
mov
es
jge
loopne
mov
and
aas
dec
xchg
add
add
pop
xlat
das
xlat
mov
or
dec
pusha
add
lret
inc
mov
xchg
add
popl
push
adc
mov
fistps
arpl
test
or
and
mov
push
sbb
mov
add
inc
jl
xor
mov
xchg
inc
gs
xchg
sub
imul
add
decl
cmpsl
scas
iret
mov
mov
inc
sbb
add
jns
std
jbe
leave
dec
push
adc
mov
add
mov
fisttpl
pop
mov
add
mov
add
add
mov
mov
add
mov
or
dec
lret
ret
lods
adc
mov
gs
jmp
jnp
mov
pop
loop
mov
mov
adc
mov
mov
in
push
jns
mov
add
mov
aam
dec
mov
mov
jmp
jmp
mov
mov
inc
js
cltd
ret
repz
jecxz
mov
fsubp
mov
mov
dec
and
mov
xor
clc
sub
clc
push
add
cmp
add
cmpsl
sub
test
add
inc
add
mov
xchg
ret
repnz
setbe
and
mov
insb
iret
inc
add
mov
pusha
add
jp
sbb
popf
lods
test
add
sbb
int
sub
mov
bound
mov
jbe
jnp
out
mov
addb
sub
mov
rolb
mov
inc
add
in
sub
cwtl
loop
mov
shl
add
cmp
mov
cmp
add
xchg
pop
dec
xor
mov
mov
mov
test
jns
push
dec
jb
mov
mov
in
ja
sbb
mov
cmp
out
mov
mov
pop
add
mov
dec
mov
mov
or
add
inc
imul
into
sub
xor
mov
add
inc
test
and
add
ds
xor
push
call
mov
mov
jb
mov
dec
or
add
and
inc
add
mov
mov
mov
mov
in
mov
mov
test
nop
add
push
and
aad
jl
xor
test
cmpsb
add
pop
in
jo
mov
xchg
inc
in
push
pop
and
dec
adc
add
xchg
add
in
jo
mov
in
cmc
rolb
mov
cmp
or
mov
sub
add
addr16
add
lds
gs
sbb
aad
push
adc
mov
cmp
lods
idivl
jg
fcomi
add
add
jb
mov
mov
ret
lahf
add
or
cmp
add
cltd
push
insb
shll
pushf
jmp
jns
bound
mov
add
pop
jmp
bound
mov
outsl
hlt
icebp
fimull
je
add
mov
xlat
inc
jns
popa
out
scas
enter
mov
sub
inc
pop
sbb
pop
minps
push
push
add
mov
jmp
sbb
lock
sbb
jl
or
mov
add
mov
jbe
std
gs
lock
jg
sbb
rolb
mov
bound
mov
imul
cmp
cs
xor
and
nop
add
addb
sbb
dec
hlt
lahf
pop
dec
dec
lahf
je
pusha
add
lods
cli
mov
mov
adc
xor
bound
mov
add
add
loop
mov
mov
inc
add
add
mov
pop
mov
xchg
inc
fnstenv
pushf
fsubl
mov
add
add
clc
ss
outsl
es
mov
add
xlat
add
xor
sub
inc
into
mov
adc
pop
ret
call
add
mov
cmp
mov
clc
and
mov
arpl
rep
or
fisubrs
sub
jns
lret
lahf
js
sub
sub
sti
push
pop
cmpsl
maskmovq
add
sbb
stos
js
push
mul
in
jmp
insl
int
jb
mov
addb
bound
mov
add
cwtl
rolb
ljmp
shll
inc
mov
rcl
push
aaa
stc
test
add
lahf
addb
pop
or
jnp
add
add
or
xor
mov
xor
sarl
push
cwtl
sbb
cmp
add
cmpsb
push
in
scas
and
and
daa
push
call
mov
add
imul
es
add
jge
data16
jp
jns
add
cmp
add
xchg
cmpsl
mov
movsb
cmp
add
push
add
xchg
or
ljmp
xchg
addr16
arpl
add
cmpsb
mov
mov
and
mov
push
lock
xchg
add
dec
mov
mov
jmp
push
add
cmpsb
inc
ja,pt
jl
jg
xor
xchg
mov
in
stos
pop
push
add
iret
cld
jp
addb
xchg
jl
js
stc
cmp
jl
jl
xchg
mov
and
mov
insb
imul
sahf
pop
and
mov
les
pushf
pcmpgtw
add
sbb
dec
fwait
sub
lcall
aaa
ficoms
aas
mov
and
pushl
outsl
lret
jnp
sbb
jp
outsl
jmp
loop
mov
mov
shrl
or
add
sub
iret
loopne
mov
cmp
add
cmp
add
lods
lret
jnp
incb
xor
popf
sbb
jle
popa
out
inc
lret
rolb
mov
push
dec
cmp
rolb
mov
sub
dec
cld
sbb
inc
add
cmp
or
add
mov
sub
stos
movsl
movsl
lret
add
out
in
xor
mov
scas
and
mov
loop
mov
bound
mov
pop
bound
mov
insb
jns
mov
rcll
add
das
imul
sub
pop
inc
sbb
sbb
cmpsb
and
push
ds
add
mov
sub
gs
lret
inc
mov
push
add
arpl
fwait
cli
xchg
add
stos
sti
es
fwait
sub
sbb
rolb
mov
cmp
or
mov
jl
add
out
mov
xchg
rolb
mov
push
inc
inc
std
aaa
jno
add
mov
cmp
divb
mov
stos
div
mov
sub
mov
or
pop
fdiv
add
mov
dec
xor
mov
dec
nop
add
add
pop
jo
mov
mov
cmpsl
mov
xchg
dec
mov
mov
mov
add
add
into
add
mov
fstpl
inc
push
popa
pop
add
mov
add
mov
cli
in
bound
mov
xchg
dec
les
add
lahf
les
mov
xchg
outsl
xor
mov
mov
or
mov
and
mov
aaa
cmc
lock
mov
add
cmp
ja
pop
inc
sahf
bound
mov
sub
fstl
mov
or
popf
jbe
sbb
xchg
mov
mov
les
jns
mov
inc
or
mov
daa
mov
add
mov
scas
aaa
scas
dec
out
push
add
xchg
adc
mov
add
sbb
bound
mov
sub
cwtl
enter
mov
mov
adc
adc
fldcw
add
add
movb
pop
fldl
mov
aam
bound
mov
mov
lods
stos
jl
adc
inc
cltd
mov
lcall
into
pop
xchg
sub
enter
add
movd
add
mov
pop
cli
ss
mov
lcall
adc
or
mov
add
mov
add
cmpsl
xor
push
das
sub
lahf
rolb
mov
addb
mov
rolb
mov
mov
mov
orl
jne
mov
sbb
aaa
test
add
or
push
mov
pop
fistpl
jl
lcall
mov
mov
aam
sub
dec
sahf
enter
mov
sbb
sub
add
mov
xor
mov
add
js
add
dec
loope
movsb
inc
and
mov
xchg
cmc
repz
add
inc
push
std
int
xor
mov
add
cmp
mov
lods
rolb
or
xchg
jno
adc
add
cmc
or
int3
std
int
add
xchg
sbb
mov
and
mov
push
inc
mov
xlat
jl
pop
lds
inc
add
ljmp
add
add
and
mov
add
mov
push
add
lods
test
sbb
add
ret
out
jl
add
push
push
int3
cmp
dec
inc
add
cmp
add
leave
adc
push
adc
add
sbb
pop
jbe
add
mov
out
into
cld
stc
push
sti
push
add
repnz
add
sbb
mov
mov
sbb
push
int3
adc
jno
cltd
call
cmp
adc
test
stc
outsb
js
add
dec
mov
neg
clc
dec
cmpsb
cmpsl
addr16
add
add
add
xor
stos
sub
cli
aas
pushf
push
cmp
aam
addr16
add
add
inc
cmpl
and
sub
or
push
cmp
rolb
mov
mov
xor
cmp
loop
mov
test
test
das
aam
mov
dec
fiaddl
add
cmp
cmp
je
and
out
or
add
int3
jge
jmp
lcall
and
mov
add
add
mov
testl
add
add
js
adc
sti
aas
fwait
xchg
adc
mov
cmpsl
sbb
add
sub
and
lods
test
daa
mov
data16
pop
mov
scas
or
add
out
and
mov
xor
push
adc
mov
insb
rcrl
out
ss
sub
add
mov
mov
mov
cmp
push
scas
sti
and
mov
mov
test
jle
into
mov
aad
pop
jg
filds
mov
push
insb
push
mov
mov
icebp
mov
and
jg
adc
mov
add
scas
xlat
subl
add
lret
loopne
mov
adc
mov
rcrl
jns
xchg
scas
cmpsl
push
dec
sub
lret
pusha
add
add
mov
push
sarl
add
mov
mov
popf
arpl
loopne
mov
hlt
mov
pop
dec
scas
mov
mov
rolb
mov
sahf
hlt
aam
add
aas
adc
mov
iret
jbe
repnz
add
cwtl
pop
push
xchg
scas
and
ja
xchg
sub
mov
addb
dec
cmc
rolb
mov
in
enter
repnz
push
mov
xchg
xor
mov
popf
mov
add
cmc
hlt
and
leave
rolb
mov
sbb
push
in
cmpsb
fidivs
sbb
dec
jge
lds
lret
mov
mov
mov
xchg
adc
xchg
xchg
out
mov
sbb
mov
add
push
outsb
jbe
inc
add
mov
adc
push
jmp
mov
inc
add
pusha
add
in
adc
pop
jbe
cmp
xchg
cld
jp
push
pop
nop
add
sbb
lcall
repz
mov
pop
push
add
stos
ficoms
mov
rolb
cwtl
shll
xchg
movb
cmc
push
push
adc
mov
call
and
cmp
add
add
stc
fcompl
or
pop
cmp
mov
pop
mov
jae
std
mov
cmpsl
push
rolb
mov
add
mov
mov
mov
mov
popf
loopne
mov
pushf
push
or
add
xor
add
push
fmulp
xchg
pop
rol
scas
scas
and
inc
and
out
or
add
movsl
mov
jl
add
mov
jnp
add
loopne
mov
fucomp
mov
es
sbb
jne
rolb
jg
test
js
jae
jns
lahf
mov
inc
mov
cmpsl
add
cmc
popf
xchg
add
test
lods
negb
and
mov
cmp
rolb
xor
outsl
notb
lcall
mov
and
enter
shll
rolb
mov
pop
xchg
mov
dec
jmp
mov
scas
pop
test
jo
mov
and
lret
and
mov
mov
popl
mov
les
aad
pop
push
add
add
xor
sbbl
std
mov
mov
mov
mov
and
aam
and
imul
xchg
out
pop
test
frstor
mov
js
clc
adc
mov
sub
jbe
jl
popf
popa
fsubs
mov
mov
add
pop
inc
cmp
mov
mov
add
cwtl
pop
mov
mov
hlt
mov
in
jge
add
add
add
add
fcmovnb
add
pop
add
jo
mov
jmp
mov
cmp
cmp
add
test
xchg
pop
outsl
insb
sub
and
sbb
leave
sub
xchg
add
add
add
mov
cmp
mov
clc
mov
fstp
loope
stos
call
push
bound
mov
mov
mov
and
mov
jne
add
negl
in
sbb
aaa
jne
add
adc
xor
mov
mov
jae
int
mov
add
mov
pop
cmp
push
pop
into
adc
push
lods
jo
mov
mov
jmp
mov
repnz
std
mov
pop
and
mov
inc
cmp
mov
add
add
or
dec
icebp
lret
sub
add
sub
outsb
mov
xchg
out
stc
fildl
rolb
mov
add
push
jb
mov
cs
push
mov
add
add
pop
outsl
imul
in
mov
push
push
and
insl
sahf
inc
add
or
into
enter
adc
push
and
cs
mov
aam
mov
add
add
sahf
ja
mov
sub
ret
push
add
mov
mov
jmp
rolb
add
mov
add
dec
or
xchg
cmp
mov
pop
cmp
data16
push
iret
cmpsb
adc
test
inc
and
push
inc
cli
rolb
mov
xchg
xchg
lcall
negb
jmp
mov
xchg
add
mov
sub
mov
jp
add
data16
sbb
mov
mov
hlt
pop
add
mov
add
xor
sbb
ret
in
sbb
imul
xchg
push
popf
lret
mov
cmpsb
jo
mov
add
dec
mov
add
mov
inc
add
jl
addr16
push
lret
adc
mov
push
lods
pop
rolb
mov
nop
add
jb
mov
ds
lahf
xchg
mov
mov
mov
pop
or
dec
scas
adc
mov
fcomps
xchg
add
dec
pop
add
push
mov
add
mov
pop
incl
push
adc
arpl
pop
xchg
imul
jle
inc
push
xchg
push
adc
mov
out
push
rolb
mov
subw
outsb
sbb
push
add
mov
ret
xchg
lods
add
mov
cld
add
jmp
in
mov
mov
mov
push
aaa
sahf
inc
hlt
jecxz
mov
and
mov
mov
dec
push
and
ja
imul
push
addb
ds
iret
push
fisubs
arpl
mov
lods
dec
dec
pop
sbb
cmc
xchg
mov
add
test
pusha
add
xor
mov
cwtl
pop
cli
mov
div
repz
lock
pop
daa
mov
dec
jl
add
movl
fsubl
daa
mov
int3
xchg
cmpsb
out
add
out
gs
setnp
mov
sub
mov
cmc
lret
jb
mov
or
add
mov
and
mov
or
push
jl
outsw
call
sbb
add
mov
sub
and
sub
dec
loop
mov
repz
add
mov
adc
adc
mov
mov
in
je
fcomp
sbb
mov
loopne
mov
sbb
sub
in
and
mov
popa
repnz
test
push
fadds
decb
mov
cmp
in
sti
mov
cmp
pop
jecxz
js
xchg
sahf
cltd
stos
mov
imul
mov
mov
mov
mov
repnz
jne
dec
mov
mov
add
pop
int3
mov
dec
dec
or
out
ret
iret
ss
and
movsb
pop
pop
data16
jmp
mov
push
push
jle
mov
cmpsl
pushf
cld
push
xchg
inc
add
add
pop
mov
mov
push
fnstcw
push
add
and
mov
cmpsl
sub
cs
ja
cmpsl
data16
pop
sbb
dec
push
add
mov
mov
push
pop
mov
inc
daa
cmc
pop
test
mov
mov
add
mov
pop
aas
scas
test
inc
sti
icebp
jl
fdivr
addr16
lods
cs
sbb
jo
mov
xchg
mov
or
andl
jb
mov
add
idivl
out
mov
ret
jg
mov
mov
and
dec
test
mov
or
or
pop
jg
loope
fwait
stc
sbb
pop
aad
add
sub
add
xor
mov
inc
add
negb
aam
addb
aad
sub
mov
call
add
fptan
add
mov
je
jg
add
vxorpd
add
cld
sub
leave
mov
add
mov
pop
hlt
popf
jno
jnp,pn
fdivl
outsb
jns
stos
stos
inc
mov
mov
incl
cs
jle
data16
or
leave
rcrl
adc
in
aas
inc
call
add
daa
js
sbbl
add
and
mov
sbb
popa
aas
mov
mov
les
pop
inc
aaa
add
add
add
jl
add
add
inc
jecxz
lock
ret
xor
incb
xchg
fs
add
mov
ss
cmp
push
in
add
cmp
sub
jbe
aad
fbstp
sti
loope
xchg
mov
pop
fisubrl
add
pop
xchg
lock
clc
inc
add
fnsave
test
push
xchg
imul
out
mov
inc
popf
fdivr
cmp
add
insb
or
imul
mov
aaa
xchg
fildl
lahf
inc
es
xchg
adc
mov
add
cmp
and
addb
sbb
push
mov
or
or
mov
dec
dec
addr16
add
push
scas
or
pop
rolb
mov
fs
inc
push
in
dec
sub
mov
clc
jmp
push
add
out
adc
add
ficoms
add
add
jmp
sub
loope
dec
in
cltd
fcomps
adc
mov
int3
dec
std
data16
shll
rolb
mov
sub
mov
inc
jecxz
daa
inc
xor
mov
add
push
xor
mov
and
sub
xchg
add
mov
mov
rolb
dec
push
cmp
fdivs
scas
sub
ja
mov
jno
or
mov
push
add
push
mov
mov
adc
sbb
mov
mov
std
fwait
push
cwtl
je
leave
xchg
jp
popf
lds
pop
sub
incl
xchg
push
int
inc
pop
push
outsb
addb
imul
xor
mov
mov
sbb
ja
pop
hlt
bound
mov
mov
mov
add
mov
pop
dec
cli
outsb
test
jg
aam
outsl
push
hlt
jb
mov
hlt
or
sub
add
mov
xchg
fisubl
shll
adc
mov
popa
pop
je
stos
push
lcall
cmp
sbbl
adc
lods
lret
adc
and
pop
push
add
xlat
mov
test
lock
mov
loope
sub
pop
std
sub
lahf
xchg
or
lahf
iret
mov
rolb
mov
cmp
fwait
enter
and
dec
mov
mov
sbb
pusha
add
xchg
popf
jne
icebp
mov
sub
and
shll
add
push
inc
pop
add
add
ljmp
and
mov
aam
sbb
stos
std
xlat
clc
push
and
ss
in
dec
imul
mov
sub
push
fstl
jbe
add
mov
incl
inc
add
xor
daa
mov
cwtl
in
sbb
aaa
cwtl
inc
sbb
add
out
test
cmp
scas
dec
lret
adc
mov
add
dec
push
into
dec
push
addl
ret
dec
push
dec
popl
pop
adc
xchg
inc
outsl
movl
hlt
cld
call
popa
stc
fnsave
add
sbb
push
mov
mov
repz
jge
push
enter
add
add
out
lret
mov
mov
aam
add
sub
mov
adc
mov
push
add
es
xor
mov
iret
ret
imul
or
pop
icebp
outsb
stos
xchg
testl
mov
repz
pop
or
leave
sbb
cmp
sub
add
dec
rolb
mov
and
out
ficoml
add
mov
add
mov
stos
nop
add
stos
loopne
mov
mov
mov
add
mov
cmp
sub
and
add
mov
ja
jecxz
push
das
cmp
add
xchg
sbb
or
or
add
sub
mov
mov
add
clc
popa
jno
hlt
pop
mov
add
dec
dec
push
and
mov
xchg
test
add
mov
lods
sub
mov
mov
mov
add
adc
sub
push
sbb
or
or
div
aas
sbb
ficoml
in
adc
jg
xlat
addr16
test
add
and
pop
pop
sbb
xchg
cmp
dec
add
mov
add
scas
jae,pt
jb
mov
movsl
jnp
lahf
aam
add
sti
cltd
aas
jo
mov
mov
out
jp
pop
and
js
imul
aaa
xchg
add
mov
add
mov
nop
add
mov
int3
test
push
insb
scas
pushf
pop
fnstsw
sub
lock
adc
push
add
xchg
push
movlps
mov
addr16
das
push
fdivr
std
rolb
mov
jne
add
add
fistpl
xchg
add
jp
and
cwtl
push
push
add
mov
add
add
mov
add
jns
and
aas
inc
add
pop
pop
cmp
and
mov
fidivs
and
ljmp
add
mov
mov
mov
sub
leave
sbb
sub
jg
xor
mov
push
in
adc
mov
addb
lahf
pop
adc
mov
dec
fistpll
mov
push
int
pop
ret
leave
mov
pop
cmpsb
cmc
and
hlt
ret
cmpsb
pop
loope
scas
mov
jp
out
pusha
add
popa
sbb
add
mov
add
int3
outsl
xchg
jbe
hlt
testl
rcrl
mov
mov
push
add
and
pop
inc
add
jmp
xorl
sbb
movsb
xchg
pop
add
stos
add
mov
mov
sub
add
dec
xchg
adc
mov
es
or
fists
cmp
test
arpl
sbb
inc
cmp
out
or
sbb
enter
add
mov
add
and
mov
add
and
add
insl
mov
cmp
insl
ret
fs
or
pusha
add
cmc
jg
test
ljmp
dec
imul
les
add
mov
dec
ficoml
xchg
in
in
adc
mov
dec
out
data16
xor
xchg
add
cmc
adc
add
insb
enter
pop
jne
and
mov
add
mov
dec
mov
pop
cmp
add
mov
xor
push
popa
fisttps
imul
loope
add
in
dec
mov
mov
pop
cmp
jmp
push
lods
ss
pusha
add
fistl
add
mov
pushf
in
add
call
inc
je
mov
and
arpl
mov
mov
add
out
stc
stos
push
add
mov
push
add
and
mov
mov
mov
push
jp
cli
pop
fildl
adc
mov
test
jle
adc
mov
pushl
add
ficoml
dec
ret
inc
add
mov
cs
push
add
fildl
add
xor
sarl
pop
dec
mov
mov
add
sahf
aaa
out
sub
xchg
mov
js
imul
cmpsb
in
mov
inc
adc
cmpsl
jb
mov
and
insl
cli
test
test
insb
out
call
push
shl
xchg
int3
sub
xor
loopne
mov
push
pop
es
fstl
fcmovne
outsb
mov
mov
xchg
addb
fimuls
test
add
dec
imul
dec
or
xor
je
addb
roll
mov
sub
add
out
leave
adc
mov
cli
pop
outsb
cli
scas
lcall
add
and
dec
sbb
adc
pusha
add
bound
mov
lea
stos
hlt
ret
mov
sub
lock
pop
mov
mov
mov
mov
addl
jae
xlat
stos
call
pop
and
mov
inc
add
cld
or
push
add
bound
mov
add
mov
add
in
sysret
into
mov
mov
clc
mov
imul
mov
mov
daa
cltd
test
sub
add
fstpt
mov
mov
add
pop
in
sbb
inc
sbb
sub
int3
pushf
mov
cld
nop
add
inc
push
adc
push
cs
out
repnz
stos
cli
nop
add
sub
add
push
add
imul
pop
ss
cmp
mov
mov
mov
addr16
scas
push
cmp
jae
movsb
repz
push
mov
add
mov
mov
add
int3
mov
psubusw
push
pushf
jle
push
and
mov
popa
scas
je
cmp
aas
mov
add
mov
add
mov
xchg
insb
outsb
in
add
mov
cmp
push
and
add
mov
add
mov
jb
mov
call
xchg
add
jge
movsl
xchg
test
mov
dec
add
mov
sub
stos
fidivrl
clc
add
mov
addl
ja
popf
and
mov
icebp
aam
pop
out
mov
mov
add
insl
xchg
or
mov
cltd
jecxz
cmp
movsl
push
aam
nop
add
pop
push
adc
lahf
mov
fisttpll
call
cmpsb
mov
mov
mov
lods
les
or
pop
mov
and
mov
add
cs
in
mov
in
mov
mov
add
arpl
sbb
ret
lahf
jg
xchg
mov
mov
xchg
and
je
iret
inc
sysret
add
mov
iret
lods
inc
add
cmp
mov
mov
mov
pop
and
mov
pop
jmp
adc
fisubs
jae
cli
pop
dec
pop
aad
in
push
sti
push
adc
mov
mov
xor
aam
mov
addb
rcll
mov
lcall
mov
xchg
adcl
fsubp
add
arpl
sub
add
xchg
xor
mov
adc
mov
xor
mov
and
mov
mov
cmp
mov
or
jb
mov
jl
adc
pop
fisttpl
add
adc
mov
fadds
cmpsb
sbb
jecxz
inc
dec
in
add
mov
add
and
pushf
sti
push
and
mov
mov
mov
lcall
sahf
add
push
add
mov
dec
addb
orl
inc
fadds
cwtl
stos
inc
out
imul
jns
xlat
jns
add
lock
pop
inc
add
adc
mov
mov
add
inc
add
cmp
mov
int
or
js
mov
xchg
je
rolb
dec
arpl
add
push
rolb
mov
xchg
add
out
sub
add
sub
aaa
jl
add
mov
addr16
pop
xchg
sub
cmp
ljmp
inc
add
mov
add
loope
into
and
mov
dec
and
mov
jae
xor
add
add
rolb
mov
add
sahf
and
dec
repz
xor
add
or
inc
mov
call
mov
mov
or
sbb
mov
lods
test
scas
add
mov
shll
add
lock
sti
mov
sbb
xor
ss
add
mov
mov
pop
mov
add
adc
mov
mov
add
dec
mov
jge
sbb
cmp
add
or
mov
out
add
std
les
sbb
adc
mov
add
xlat
pop
dec
mov
mov
daa
add
mov
add
mov
mov
arpl
push
mov
test
sbb
pop
pop
sbb
mov
xchg
add
xchg
inc
aam
push
add
xor
mov
mov
mov
mov
inc
add
jmp
adc
stos
int3
sbb
outsb
jno
and
mov
adc
mov
add
pop
add
inc
add
std
lea
lds
mov
sbb
lds
addr16
push
mov
jmp
mov
in
mov
or
mov
cmc
enter
in
outsb
adc
bound
mov
add
ja
add
sub
aam
mov
cld
bound
mov
pop
push
dec
negb
add
fistpl
jb
mov
dec
rorl
pop
push
add
sbb
dec
sbbl
add
fidivrs
cmpsl
stc
je
mov
ficoml
mov
add
in
outsl
cmp
adc
rorl
pop
std
adc
mov
inc
or
rolb
add
xor
xchg
mov
add
xlat
cmpsl
adc
mov
pop
imul
cmp
mov
cwtl
aaa
clc
mov
add
dec
add
mov
out
mov
test
lret
out
mov
aas
mov
add
jb
mov
mov
insb
mov
xor
jle
cmp
push
repz
mov
or
xor
add
mov
add
push
cmp
loop
mov
mov
mov
sub
in
enter
add
aas
pop
jb
mov
lds
dec
sbb
ret
xchg
repz
mov
add
mov
movl
test
and
mov
lods
add
mov
add
mov
xchg
xor
add
adc
mov
add
in
push
addr16
sti
iret
movsl
mov
mov
mov
xchg
jbe
das
jbe
pusha
add
cmpsb
jb
mov
movsb
daa
push
sti
sbb
gs
nop
add
xchg
mov
in
dec
jle
sbb
add
mov
outsl
mov
lea
xor
nop
add
mov
outsl
lahf
dec
adc
adc
mov
add
aam
add
mov
mov
iret
add
add
test
out
aad
add
dec
mov
cmp
mov
aam
add
or
cmp
popf
jle
add
push
mov
add
jne
inc
adc
jns
ss
out
xchg
shr
es
add
pop
xchg
xchg
xor
mov
mov
and
mov
xor
jg
outsb
adc
in
aam
jns
push
add
lcall
out
mov
movsl
cmpsb
xor
mov
mov
pop
xchg
pop
mov
pop
mov
rcrl
add
cmpsb
je
add
jmp
pusha
add
call
add
jg
cmp
call
sub
mov
add
mov
xor
subl
pushf
mov
mov
dec
or
and
and
mov
movsl
pop
dec
push
mov
mov
lret
add
add
add
cmp
pop
into
bound
mov
add
xchg
add
add
jo
mov
add
push
or
loope
lock
lret
add
sbb
sbb
cltd
dec
incl
pushl
in
xor
mov
push
movsb
jp
jp
nop
add
mov
test
add
pop
pusha
add
mov
xchg
add
bound
mov
add
mov
cmp
mov
int3
in
ss
in
sub
fiaddl
add
ds
add
inc
add
mov
nop
add
add
mov
pop
sbb
jae
jbe
decb
rolb
mov
loope
jns
fidivrs
add
out
jns
add
mov
xchg
sbb
or
cli
inc
add
mov
add
ret
arpl
adc
mov
das
or
push
test
lods
out
ret
movsl
jmp
aas
sbb
frstor
add
pop
sub
movsb
pop
lret
push
fdivs
lret
inc
add
iret
lea
mov
add
mov
lods
iret
clc
shll
iret
push
das
mov
fistl
lock
mov
imull
fnstsw
out
ja
add
mov
negl
roll
xchg
push
aam
xor
shl
add
cmpsl
mov
mov
mov
fisubl
add
mov
jnp
pop
xlat
dec
cli
lret
leave
and
or
addb
stc
cli
lret
jecxz
es
ljmp
pop
scas
aas
jge
adc
add
sti
ficomps
dec
movsl
fldl
mov
sti
pop
or
add
cmp
loopne
mov
stc
nop
add
xor
jp
pop
push
or
add
leave
cmc
lods
xchg
insl
xchg
addr16
stc
out
sbb
pop
divl
add
icebp
std
add
mov
mov
pop
orl
out
int
pop
outsb
rolb
mov
aas
jl
popf
insl
imul
mov
add
mov
mov
arpl
pop
and
mov
add
mov
int
call
or
inc
mov
dec
iret
cmc
or
imul
xor
adc
mov
mov
test
into
hlt
mov
add
mov
pop
loopne
mov
jnp
lahf
rolb
mov
cmp
add
ds
inc
out
orl
add
insl
sti
ret
call
add
test
add
mov
mov
push
int3
mov
adc
and
mov
xchg
sbb
or
inc
inc
xchg
mov
shrl
clc
xor
xchg
add
cmpsb
stos
std
mov
add
mov
das
jns
cs
in
or
add
mov
mov
sub
jns
mov
cwtl
mov
ss
lcall
adc
xor
add
mov
cli
cmp
enter
or
das
sub
je
add
in
cmp
adc
dec
rolb
mov
pop
mov
sbb
out
enter
mov
cmc
int
add
mov
add
mov
popa
jl
jl
pop
into
rorl
lret
call
add
repz
in
xchg
je
icebp
inc
xor
mov
inc
add
cld
push
out
add
push
rolb
mov
mov
stos
mov
push
movsl
inc
add
test
pop
repz
add
dec
mov
insl
addb
pushf
fs
ret
and
bound
mov
sbb
push
jg
mov
into
cmpsb
jmp
scas
stc
not
lea
adc
pusha
add
jecxz
fsubl
mov
rorl
xor
add
xorl
mov
mov
inc
add
cmp
inc
loop
mov
outsb
mov
add
ss
hlt
popf
mov
sub
push
mov
xchg
mov
mov
add
or
add
and
idivl
cli
je
in
push
mov
mov
pop
daa
jno
aas
inc
xor
imul
inc
mov
sub
mov
mov
mov
mov
pop
xchg
in
es
es
xor
add
jns
sarl
stc
fs
push
add
into
fdivrp
jp
lahf
or
mov
pop
push
mov
add
add
mov
stos
roll
and
add
in
mov
int
xchg
mov
mov
mov
or
add
in
mov
add
rorl
cmp
das
cmp
inc
mov
mov
add
add
add
push
add
mov
or
dec
dec
fisubrl
repz
and
sub
into
cmp
ret
xor
push
imul
lret
mov
mov
sti
pusha
add
or
cld
mov
shr
andnps
imul
mull
jecxz
mov
outsb
inc
add
add
adc
push
sub
xchg
loopne
mov
xchg
rorl
sub
add
dec
lcall
ljmp
mov
lret
shl
mov
pop
insb
jp
and
mov
cld
jo
mov
mov
mov
imul
dec
dec
sbb
sbb
mov
inc
add
mov
add
inc
add
xchg
or
jnp
mov
add
mov
mov
clc
cwtl
cmp
mov
inc
mov
xchg
repz
insl
clc
fdivs
mov
add
pusha
add
or
or
cmp
mov
xor
mov
adc
addb
fstps
into
test
fcmovb
cmovnp
addb
es
xor
ljmp
sbb
mov
mov
xlat
xchg
pop
sbb
sti
and
sub
add
lock
fbstp
jge
sbb
daa
add
mov
setno
sbb
pushf
jg
push
cli
and
js
push
jmp
daa
dec
data16
jae
add
cli
sub
jg
mov
xchg
hlt
ljmp
adc
das
mov
sbb
jl
jle
imul
int
icebp
add
jne
dec
jnp
lock
dec
inc
add
scas
cmp
add
js
aaa
fldt
add
push
or
cltd
adc
mov
cmp
mov
inc
add
iret
loopne
mov
add
pop
mov
daa
sbb
add
inc
arpl
xchg
call
mov
popf
clc
xchg
js
std
push
xor
add
pop
ja
add
sub
and
ret
rolb
mov
insb
push
fisubs
iret
fwait
in
xchg
les
and
and
mov
mov
lret
add
cltd
cli
jmp
xchg
mov
fs
add
push
loop
mov
add
and
jmp
stc
cs
jnp
dec
test
xor
insl
cmp
test
or
or
addr16
xor
outsl
xor
scas
pop
adc
add
loope
in
fmuls
add
mov
mov
add
sub
mov
xchg
xor
mov
add
inc
gs
inc
ljmp
test
pop
jne
pusha
add
arpl
add
in
into
and
mov
enter
xchg
adc
test
add
pop
dec
add
pop
pop
xchg
cmp
loop
mov
mov
test
xchg
ret
jmp
rolb
mov
not
sub
inc
add
or
mov
popa
inc
sub
call
push
je
add
lea
mov
xorl
mov
aam
push
or
rolb
mov
lcall
add
cmpsl
adc
enter
jg
or
out
add
mov
cmp
add
cli
popfw
scas
jmp
enter
xor
in
psraw
add
out
fildll
cltd
rcll
push
adc
mov
add
cmp
test
mov
add
sub
incb
cmpsl
sbb
cwtl
popa
bound
mov
and
mov
xchg
movl
aam
xchg
adc
sub
pop
in
add
mov
and
mov
out
jge
or
jge
leave
test
inc
ret
sbb
stos
or
mov
clc
or
add
and
mov
les
mov
dec
or
es
add
sbb
jle
xchg
bound
mov
test
add
faddl
mov
mov
add
cmp
lret
aaa
mov
pcmpeqb
outsl
push
add
cmp
and
mov
imul
push
adc
sbb
adc
cmp
sbb
mov
test
cmp
mov
inc
pop
push
pop
adc
mov
hlt
lds
in
in
insl
xor
mov
mov
mov
sbb
ja
xchg
mov
sbb
mov
out
stc
hlt
cli
adc
test
jg
jg
lahf
and
mov
push
sbb
xor
mov
xchg
das
cmp
pop
repz
bound
mov
je
add
sbb
arpl
sti
sub
add
je
jle
mov
sbb
add
push
cli
jo
mov
test
scas
std
jle
pop
fiaddl
lcall
xchg
mov
js
push
daa
pop
call
lcall
add
rolb
mov
xchg
les
fwait
mov
mov
xchg
into
inc
add
add
push
arpl
xor
int3
adc
mov
xlat
rolb
cli
popa
push
or
xor
cmp
addb
aas
mov
add
sti
dec
pop
xor
and
mov
xchg
mov
scas
add
mov
mov
iret
lods
icebp
dec
insl
jle
xchg
jmp
push
fimull
jecxz
loopne
mov
leave
xor
mov
cmp
mov
call
mov
mov
fildll
mul
add
addb
ja
in
call
mov
add
add
dec
dec
jp
dec
push
insb
clc
push
testl
cltd
out
test
fadds
imul
lods
stos
call
mov
stos
dec
sahf
outsl
pop
lds
mov
add
repz
add
mov
or
test
add
push
insl
ljmp
push
imul
arpl
jnp
ljmp
cmp
add
xchg
add
jle
inc
add
popa
mov
mov
pop
mov
mov
add
enter
in
pop
jbe
lea
lahf
cmp
mov
sbb
push
add
add
adc
mov
mov
mov
add
xchg
jecxz
mov
and
jae
popf
push
mov
mov
adc
outsb
cmp
js
jg
mov
xor
inc
adc
mov
lcall
rolb
mov
mov
movsl
test
fcoml
inc
lret
lcall
xchg
notb
mov
sub
cmp
sub
sbb
ret
mul
loopne
mov
add
dec
xchg
adc
mov
outsl
fdivl
sbb
loop
mov
js
sbb
add
add
outsb
fisubrl
in
or
sub
repz
inc
repnz
jg
add
in
add
stc
mov
sub
mov
je
faddl
add
add
mov
jg
pop
stc
out
pushf
or
mov
out
add
imul
cmc
mov
mov
pushf
mov
decb
mov
mov
add
mov
add
pop
repz
mov
lea
or
add
mov
and
mov
xchg
jo
mov
scas
lods
lods
pop
xorl
mov
adc
mov
mov
inc
scas
add
mov
push
add
mov
add
jmp
std
icebp
cmpsl
mov
rolb
mov
inc
xor
mov
jecxz
data16
and
add
add
add
aam
mov
stc
cli
arpl
fwait
xchg
mov
mov
push
ret
pusha
add
pop
fs
sbb
fldl
lock
push
add
pop
jmp
push
mov
fdiv
lods
loope
cs
adc
xlat
sti
cmp
mov
jg
cltd
fldt
fwait
cmc
ret
out
int3
fs
xor
mov
pop
pop
mov
mov
mov
lock
ret
movsl
adc
mov
loop
mov
ret
jecxz
sub
jnp
sti
jp
jg
sbb
fwait
jle
lods
xchg
cmpsl
dec
insb
adc
cwtl
pop
or
add
or
and
cltd
pop
ror
jmp
adc
jle
xor
push
xchg
add
mov
stc
outsl
lea
dec
nop
add
push
dec
or
loop
mov
aam
test
out
jl
andps
movsl
bound
mov
mov
mov
std
push
sbb
dec
lret
mov
push
add
sbb
lods
pop
pushf
adc
mov
cmp
enter
adc
mov
cwtl
sbb
xchg
jno
pop
scas
and
mov
add
loope
add
clc
rcr
dec
cmp
sbb
sbb
add
mov
mov
push
or
cmp
ja
add
mov
test
les
pop
xor
mov
add
inc
pop
aas
add
add
xor
mov
mov
mov
aaa
or
ja
mov
aam
ds
mov
adc
mov
add
hlt
cwtl
aaa
sub
lds
dec
enter
dec
test
push
jmp
adc
inc
sbb
mov
xor
mov
pop
and
push
dec
add
mov
sub
mov
repnz
inc
insb
addb
xchg
mov
lret
pop
data16
jge
test
cmpsb
add
decl
mov
add
leave
clc
add
mov
rcll
mov
mov
mov
fistpl
ja,pn
dec
and
mov
lds
test
jne
mov
mov
icebp
mov
aaa
pop
pop
adc
mov
xor
popl
add
cwtl
addl
mov
and
mull
mov
mov
push
add
daa
add
imul
mov
cmpsb
add
mov
add
mov
test
cs
pop
dec
pop
stos
insb
xor
add
movsb
dec
pop
xchg
pop
out
stos
and
fdiv
popa
jns
xor
mov
stos
fdivrl
jmp
dec
in
mov
repz
mov
les
mov
xor
movsl
or
add
sbb
mov
cmp
pop
sub
popa
mov
dec
xchg
mov
and
add
addb
inc
mov
adc
adc
mov
cld
nop
add
xchg
push
in
inc
imull
stc
xchg
scas
adc
stc
adc
push
scas
mov
enter
mov
cmpsb
imul
outsl
shl
add
mov
jns
bndcl
fisubs
imul
scas
xlat
out
call
gs
pop
jl
call
lret
lds
jae
or
lret
mov
mov
mov
xchg
cmpsl
mov
into
pop
jnp
inc
add
or
mov
mov
cmp
fsts
mov
adc
adc
add
mov
addr16
aas
and
cli
cmp
mov
ret
popf
xor
push
add
mov
aas
bound
mov
add
mov
movsb
mov
rolb
lock
xor
mov
cs
jp
xor
mov
push
jnp
rolb
mov
addb
rolb
mov
cli
jno
inc
sbb
js
add
mov
jmp
add
push
out
sub
mov
pop
pushf
push
lahf
test
cmp
test
mov
inc
ficoml
ret
or
push
add
mov
mov
sub
mov
inc
mov
mov
cmpsl
sub
iret
int3
cmc
repz
jp
pop
js
add
rorl
lods
add
mov
cmp
mov
mov
jle
sar
pop
push
mov
or
popa
sahf
jmp
es
in
mov
and
pop
loopne
mov
add
mov
xor
js
or
shll
mov
add
or
pusha
add
add
mov
add
sub
out
xor
and
fildl
inc
arpl
and
jge
sub
scas
daa
pushf
in
decl
jg
xor
iret
fs
cmpsb
in
enter
fstps
push
add
cmp
sti
mov
jmp
xchg
insb
pop
loope
cmp
add
sbb
in
add
aam
add
mov
pop
mov
mov
add
sbb
mov
push
inc
rorl
leave
add
mov
je
rolb
mov
cmpsb
mov
dec
mov
mov
sub
and
cwtl
rcrl
jl
add
or
mov
mov
mov
insl
push
iret
push
stos
into
lea
imul
lods
mov
add
mov
aas
repnz
enter
mov
shrl
in
fildl
fsubrs
sbb
and
pop
popa
xchg
add
add
xlat
adc
xchg
xor
add
mov
sub
pushf
xor
mov
xor
fnstenv
sub
and
mov
mov
adc
mov
pop
sbb
mov
in
push
add
cltd
xlat
pop
push
mov
mov
add
aad
sbb
inc
or
jl
cmc
outsl
adc
mov
movsl
adc
add
pop
loop
mov
lds
stc
fcomps
lods
push
mov
das
sub
jae
into
filds
add
mov
add
ret
mov
mov
roll
or
out
loop
mov
lods
mov
cli
inc
cmp
dec
shll
movsl
sbb
add
mov
mov
mov
add
mov
add
cwtl
loopne
mov
mov
fnsave
mov
cld
outsl
sbb
mov
xlat
push
lds
add
add
mov
test
mov
add
fs
add
jno
cmc
xlat
add
add
xchg
and
cld
pop
ds
ficoml
sbb
loope
into
pushf
lret
pop
jbe
fisttpll
adc
hlt
cmp
cmp
cmpsl
or
dec
dec
in
pop
ljmp
cmc
fisttpl
mov
jp
inc
les
pop
hlt
mov
aas
mov
mov
cmpps
les
insb
push
add
repnz
lock
out
push
xchg
pushf
push
pop
out
jle
rolb
push
adc
add
scas
sbb
xor
mov
adc
mov
test
push
sub
mov
or
loopne
mov
std
cmc
scas
jno
cmp
ret
std
inc
mov
cmp
sbb
mov
xchg
addr16
jle
add
scas
or
add
add
test
push
pop
cmp
icebp
xchg
add
push
imul
mov
movsl
push
add
push
fidivs
push
fidivl
add
pop
das
daa
mov
mov
mov
push
cmp
xchg
jbe
fwait
and
mov
inc
aam
sbb
int
xchg
pop
idivl
pop
pop
mov
mov
int
inc
mov
rolb
arpl
in
stc
sub
xchg
cmc
mov
inc
pop
jmp
ss
mov
push
add
cltd
xor
mov
fndisi(8087
mov
mov
addb
inc
jnp
loop
mov
push
pop
fsqrt
cli
das
enter
jl
pop
lods
mov
dec
push
sub
xor
mov
inc
fldl
mov
jae
mov
mov
dec
cmp
dec
jecxz
fcompl
xchg
int3
ret
repnz
movsb
pop
sbb
mov
in
cmpsl
out
push
loopne
mov
loope
rolb
mov
in
pop
and
mov
das
jbe
adc
sti
aaa
jg
rolb
mov
lds
sahf
bound
mov
dec
fisubrs
xlat
sti
daa
sbb
rolb
mov
inc
sbbl
popa
mov
movsl
shrl
xor
lods
aaa
xchg
mov
int3
jae
add
jp
cwtl
arpl
bound
mov
loope
cmp
sahf
test
addb
lret
incb
mov
add
pop
xlat
jl
cmp
cltd
push
add
xchg
inc
add
mov
fsts
les
mov
add
adc
xor
imul
jecxz
cmp
mov
rolb
mov
push
push
jns
sbb
dec
scas
addb
arpl
xchg
add
out
jb
mov
add
test
add
xchg
sti
xchg
mov
addr16
push
add
loope
add
dec
int3
jge
cmc
dec
cmp
mov
add
jg
movsb
jmp
and
add
dec
inc
movsl
in
test
mov
popa
test
mov
sti
mov
cs
jmp
mov
cmp
insb
xchg
add
repz
outsb
add
dec
gs
scas
sub
popa
xor
movsb
in
je
xorl
pop
fisubl
add
sub
aaa
jp
dec
es
shll
mov
cs
mov
add
bound
mov
cmp
cmp
int
add
scas
mov
addr16
popa
mov
add
add
mov
inc
add
imul
mov
pop
lds
dec
add
stc
lods
adc
aam
movsl
test
rolb
jecxz
fcmovnu
xchg
xchg
add
sub
mov
push
jno
stc
cmc
mov
add
das
jnp
pop
in
test
sbb
fs
imul
add
mov
jnp
sbb
xchg
add
das
mov
and
mov
add
mov
mov
cmpsl
cmp
mov
aad
inc
xchg
rolb
mov
add
sbb
out
out
outsb
insl
clc
xchg
ljmp
and
mov
loopne
mov
dec
xchg
push
ds
sbb
mov
rolb
mov
sub
pop
cld
cmp
sahf
out
jle
cltd
lea
mov
addb
and
inc
mov
call
mov
hlt
movsl
push
cli
out
in
ljmp
mov
ljmp
and
jb
mov
lret
aaa
pop
out
jp
or
adc
mov
add
lret
dec
or
mov
in
test
add
mov
lods
push
sbb
add
inc
stos
notl
scas
fisubrl
aaa
or
out
addb
ret
adc
bound
mov
mov
flds
add
sub
scas
das
push
add
imul
sbb
and
mov
xor
add
add
hlt
sbb
add
xchg
add
adc
mov
sub
mov
adc
mov
inc
hlt
pop
out
cmc
mov
shll
out
dec
repz
adc
mov
cmp
loop
mov
or
sahf
push
pop
dec
push
icebp
push
call
add
into
inc
add
out
idivb
mov
mov
push
add
sub
inc
or
lea
lock
sub
add
ret
jecxz
sub
test
out
negb
mov
addb
iret
pop
xorl
inc
lock
bound
mov
roll
mov
sub
ds
add
mov
push
ja
out
jae
inc
fnstsw
dec
addb
mov
mov
push
add
mov
jns
rolb
mov
sub
push
dec
pop
add
cmp
add
or
push
test
fxch
pop
sbb
add
add
popa
in
sub
lcall
xor
inc
addb
loope
data16
ljmp
aaa
or
ret
addb
mov
mov
mov
mov
mov
testb
es
mov
test
leave
sbb
pop
push
aam
adc
add
sbb
pop
xor
or
push
cli
out
insl
push
jecxz
add
mov
xchg
test
loopne
mov
adc
and
mov
aam
dec
aas
jnp
pop
xor
mov
sbb
enter
push
lock
cmc
mov
add
xlat
mov
add
push
test
mov
cs
dec
mov
mov
sahf
cwtl
test
add
mov
add
xchg
notb
add
hlt
jmp
and
mov
lahf
and
lret
sub
push
jmp
add
sbb
push
out
dec
test
sbb
scas
cmpsl
out
sbb
mov
rolb
mov
push
lock
push
add
mov
sub
or
add
jb
mov
push
add
ficomps
and
daa
mov
mov
dec
addb
and
xor
incl
push
loope
inc
inc
out
rolb
mov
xor
xchg
dec
push
je
fistpl
pop
fwait
addl
mov
push
negb
pushf
fdiv
stos
stos
pop
stc
pop
mov
xor
movsb
ret
call
dec
mov
loop
mov
add
xlat
jnp
xchg
mov
mov
add
add
mov
adc
add
mov
add
mov
jb
mov
jbe
lds
sub
add
mov
sbb
cwtl
addb
inc
jo
mov
pop
aad
pop
or
arpl
add
out
xor
repz
mov
add
xchg
add
dec
adc
fcoms
mov
mov
mov
scas
test
loope
add
mov
mov
ja
rcl
dec
inc
es
out
add
aas
xor
aam
adc
mov
push
add
mov
mov
movsl
int3
addb
lahf
jnp
fstp
sahf
nop
add
pushf
leave
fmuls
stc
popf
push
push
xchg
fcom
sbb
dec
cmc
or
mov
aam
xor
mov
mov
push
add
insb
icebp
or
nop
add
mov
pop
scas
nop
add
add
addb
hlt
push
push
push
mov
xchg
add
andl
and
mov
add
mov
add
sub
mov
inc
add
enter
shl
fsubrs
lret
cmp
lret
xor
scas
aas
push
xlat
scas
setge
pusha
add
mov
jl
push
jmp
add
mov
push
cs
inc
pop
fcomps
jno
mov
cmp
inc
xchg
lods
and
stc
inc
add
and
mov
mov
and
mov
jo
mov
in
frstor
add
mov
notl
jbe
insb
adc
fisttpll
jmp
lahf
inc
add
mov
add
mov
lahf
jle
mov
mov
adc
dec
add
add
adc
mov
repz
or
ficomps
mov
inc
add
lret
jmp
les
mov
xchg
lock
addb
test
mov
aaa
lods
xchg
aam
sbb
dec
imul
adc
xor
mov
inc
sbb
push
jp
or
mov
mov
xchg
sbb
stos
insl
push
inc
or
add
mov
dec
cli
xor
or
pushfw
mov
imul
ret
in
or
outsb
adc
mov
push
dec
rolb
mov
jno
push
add
sbb
cs
std
add
and
inc
add
fnstenv
add
lret
sub
lcall
xchg
mov
pop
push
pop
xor
mov
sub
cmp
mov
and
sbb
lds
jbe
xor
mov
test
sub
sub
xchg
add
xor
mov
mov
fbld
jmp
imul
inc
or
add
repnz
stos
fs
addr16
aam
add
mov
fwait
adc
mov
cs
movsb
push
add
ss
imul
adc
mov
mov
mov
gs
pop
addb
in
mov
lds
imul
mov
cmc
mov
add
mov
xchg
add
or
xchg
lods
sub
add
movsl
js
bound
mov
aad
add
pop
je
xor
xor
mov
mov
add
fldlg2
mov
jnp
outsl
rolb
mov
mov
jg
fsubrs
push
dec
sub
add
and
mov
mov
add
xchg
add
mov
dec
pop
push
addb
lahf
or
mov
push
bound
mov
mov
imul
pop
dec
sub
stc
or
or
mov
mov
jo
mov
and
mov
addb
xchg
addb
outsb
ljmp
add
or
int
out
popf
scas
icebp
sbb
bound
mov
or
sub
outsl
shll
into
ljmp
mov
pop
pop
push
add
dec
mov
add
add
add
mov
sub
addb
fs
push
pop
or
add
test
mov
lret
addb
mov
mov
test
and
mov
pusha
add
nop
add
decb
inc
add
sbb
addb
popf
lods
ret
xor
mov
jns
fidivrl
adc
add
push
adc
lahf
cwtl
mov
out
in
ret
sahf
cmp
add
add
mov
mov
mov
add
adc
mov
add
repz
mov
stc
xchg
add
mov
rolb
jle
fsubp
insb
scas
xor
ret
fdiv
push
scas
cmp
jns
push
adc
jmp
and
cmpsl
cmp
jbe
insb
outsb
popf
cli
push
add
adc
add
test
in
xor
mov
sbb
jo
mov
adc
in
pop
mov
add
addl
mov
and
mov
xor
adc
sbb
addr16
cmc
and
popf
jl
add
lret
jmp
push
mov
bound
mov
bound
mov
add
jae
fs
out
mov
adc
pop
add
les
fsts
lea
adc
add
mov
outsb
xor
jmp
mov
cmp
adc
mov
dec
add
cmp
xchg
or
lds
add
sarl
or
ja
add
mov
pusha
add
sbb
xchg
mov
mov
sub
sbb
add
add
xor
mov
jecxz
fistpll
out
scas
add
mov
and
jno
std
pop
scas
addr16
loope
xchg
xchg
push
ds
sub
inc
mov
les
fcomp
daa
push
sti
fs
popf
dec
add
add
shrl
movaps
push
into
xor
push
pop
adc
mov
pop
fcmovne
sub
push
adc
dec
std
and
mov
xor
mov
mov
push
int
lahf
test
add
xor
add
pop
outsl
inc
aaa
cmp
test
add
xchg
lcall
mov
cmpsb
mov
and
jge
adc
mov
popf
cli
mov
mov
sbb
or
adc
mov
mov
dec
fists
jle
jmp
lahf
add
dec
jge
cwtl
push
add
cltd
mov
je
js
and
or
add
jecxz
pop
lods
add
jge
add
add
pop
pusha
add
push
inc
inc
add
add
mov
lret
outsb
bound
mov
mov
mov
stos
inc
dec
arpl
loope
call
in
add
out
jecxz
mov
outsb
and
add
xchg
aad
mov
fnstsw
add
add
add
push
aam
add
or
add
mov
fadds
add
mov
mov
sti
add
mov
sub
add
mov
out
cmp
add
xchg
aad
ret
mov
fsts
mov
lds
add
add
nop
add
daa
jae
inc
or
sub
mov
out
call
pop
dec
sub
leave
addb
lea
lock
adc
aas
pop
push
pop
mov
cltd
cwtl
insl
sbb
sbb
add
sub
inc
adc
mov
add
pop
rolb
int3
add
mov
test
clc
pop
stc
lds
cs
mov
xor
decl
and
fwait
movsl
jo
mov
lcall
scas
lods
insb
loopne
mov
ret
push
add
ficompl
xchg
add
mov
sub
or
ret
addb
dec
xchg
and
mov
and
add
mov
das
jmp
or
mov
push
xor
xlat
std
pop
out
mov
insl
cmp
dec
pusha
add
movsl
pop
sti
loope
sub
mov
movsb
sub
inc
add
add
add
das
cmp
mov
mov
lret
fistps
pop
lahf
jno
add
add
push
add
out
dec
cmp
and
mov
sbb
xchg
xchg
sbbl
jl
rolb
mov
mov
fsubrp
out
loope
add
add
ds
add
xor
mov
inc
xor
mov
add
add
cltd
pop
hlt
loop
mov
loop
mov
add
ret
push
loope
inc
loope
addb
vcvtpd2dqx
scas
in
rolb
mov
push
jp
mov
jbe
aad
pusha
add
xchg
lahf
into
pop
mov
faddp
sbb
test
jno
jecxz
add
or
mov
and
mov
ret
fdivrl
arpl
or
mov
mov
add
xlat
cwtl
or
dec
pop
cmp
bound
mov
idivb
add
add
in
pop
cmp
mov
xor
mov
in
mov
add
fsubs
inc
jge
ja
add
add
in
mov
adc
sub
push
add
cmp
dec
sub
cmp
cld
add
mov
push
mov
popa
add
mov
or
popf
jnp
adc
cmp
stos
in
or
sbb
or
add
mov
push
and
mov
add
push
mov
add
jo
mov
dec
pusha
add
pushf
scas
lret
mov
inc
fistps
sbb
sarl
lock
add
mov
xchg
or
lods
in
or
call
mov
mov
add
cmc
adc
mov
sub
adc
cmp
inc
or
or
inc
add
mov
idivb
lods
sahf
jecxz
jo
mov
add
add
stc
adc
mov
add
rep
or
inc
scas
xchg
sbb
add
mov
cmp
mov
mov
mov
shll
fdivs
mov
adc
mov
jnp
add
jns
inc
push
add
push
ja
push
add
add
mov
pop
sub
sub
aas
rolb
mov
jecxz
pop
out
lds
fsubs
dec
push
push
stos
sub
fistps
add
adcl
pushf
testl
xor
mov
push
add
hlt
subps
outsl
jbe
sub
adc
mov
mov
and
arpl
in
rolb
mov
push
sbb
mov
add
stc
add
mov
ficoms
add
mov
scas
cwtl
lods
mov
mov
xor
add
add
push
mov
and
mov
mov
in
ss
add
push
add
add
mov
mov
ss
mov
add
mov
mov
dec
rcrl
fmull
or
ret
mov
push
mov
add
mov
shrl
out
jp
xor
sub
imul
shll
subl
sahf
push
add
aam
fimuls
movsl
call
sbb
add
xor
add
mov
add
inc
add
sahf
and
mov
mov
mov
mov
sbb
lret
inc
adc
mov
pop
lret
mov
mov
sub
sbb
inc
or
mov
gs
in
stos
jge
xor
add
popf
mov
ja
mov
adc
mov
pop
fdivrs
lea
mov
leave
aaa
popl
lret
mov
mov
jno
or
jmp
dec
das
and
daa
push
mov
sub
mov
mov
add
add
mov
fiaddl
imul
adc
fildll
sbb
test
mov
js
ss
mov
sahf
and
and
adc
jge
mov
cmp
ljmp
repz
out
cmp
dec
out
outsl
sbb
mov
add
mov
adc
add
cmc
adc
mov
inc
out
sub
scas
pusha
add
sbb
mov
cmp
cmp
cmc
mov
mov
test
add
data16
fs
div
arpl
mov
adc
je
add
sbbl
pop
push
imul
testb
out
xchg
add
xor
lcall
or
or
mov
out
addb
xor
mov
add
xlat
icebp
addb
sbb
and
cmp
and
mov
add
cli
sti
adc
mov
add
insb
test
add
push
add
ret
loope
and
je
das
jp
push
add
add
lahf
int3
push
add
adc
jp
add
cmpl
mov
mov
mov
ja
fwait
sub
add
mov
push
sub
rcpps
popa
lea
dec
dec
stos
sub
pop
test
add
in
arpl
mov
jmp
loop
mov
inc
add
add
lahf
cmp
out
xchg
xchg
add
stos
pop
jb
mov
mov
mov
aad
add
mov
in
cmp
dec
sbb
add
mov
cmpsl
push
and
mov
xor
push
aaa
out
mov
cld
popa
mov
push
out
inc
jnp
push
add
mov
sarl
jmp
in
or
jne
adc
imul
rolb
push
aas
insl
push
out
dec
or
rolb
mov
push
loope
dec
sahf
jno
pop
add
mov
out
movsb
fidivl
adc
mov
fists
repz
mov
or
xor
mov
mov
dec
add
mov
pop
xchg
das
iret
mov
pop
inc
movsb
outsb
push
scas
inc
mov
cli
insb
bound
mov
add
mov
ljmp
add
add
outsl
xchg
clc
push
dec
sti
movsl
push
cld
enter
dec
fstl
add
xor
adc
mov
xchg
sub
jne
jo
mov
int3
xor
mov
add
sbb
in
bound
mov
mov
push
fstps
test
mov
mov
add
xchg
loopne
mov
xchg
or
mov
add
jle
sbb
mov
addb
jp
pop
or
sbb
jg
add
add
mov
xchg
add
add
add
ljmp
or
pop
mov
icebp
cli
ficomps
clc
mov
add
push
push
dec
into
push
stc
mov
add
in
jle
add
enter
add
jb
mov
dec
fwait
or
sub
pop
pushf
out
cmp
lahf
and
std
in
mov
jle
add
add
mov
mov
mov
imul
mov
leave
jecxz
adc
sbb
into
repnz
fdivrs
push
add
sti
lods
push
add
pop
lods
jl
add
nop
add
or
aam
movsb
out
incb
gs
repnz
and
inc
loop
mov
ret
cli
test
rcll
add
mov
mov
stos
scas
int
mov
add
mov
sete
mov
or
jp
sub
and
mov
sub
add
les
add
add
mov
pop
and
sbb
subl
mov
pop
clc
cmpps
fstpt
or
cmp
or
cmp
repnz
ja
add
dec
loopne
mov
mov
mov
mov
mov
add
mov
popa
or
pop
xor
mov
sbb
cli
and
add
adc
out
add
sub
insb
pcmpgtw
outsl
test
aaa
lahf
mov
mov
adc
mov
in
and
push
add
mov
outsb
outsb
dec
lret
xor
pusha
add
push
jo
mov
jb
mov
or
movsl
or
loop
mov
sbb
nop
add
lock
aas
xlat
fs
fucom
jo
mov
add
add
jnp
adc
xchg
cmpsl
inc
sbb
sbb
and
mov
ret
mov
jnp
xchg
add
sbb
inc
mov
divl
mov
mov
mov
push
fimuls
jne
std
inc
test
pushf
inc
inc
imul
fs
sub
les
imul
mov
sahf
std
pushf
aam
ljmp
mov
lret
add
mov
lods
jp
imul
pop
sbb
mov
in
xchg
out
notb
mov
adc
mov
or
mov
add
add
jnp
xchg
lds
ficoms
mov
add
insl
cmp
notb
insb
nop
add
lret
adc
mov
adc
add
daa
xlat
add
mov
lret
mov
nop
add
add
mov
cmp
arpl
mov
mov
mov
add
cli
clc
mov
loopne
mov
sbb
out
stos
sub
aaa
mov
adc
mov
add
mov
dec
adc
mov
mov
add
add
ljmp
cmp
js
popf
or
cwtl
fisubl
sub
pop
shll
aas
insl
mov
mov
add
xchg
scas
fcompl
int
add
movhps
add
mov
add
pop
mov
fcom
add
mov
mov
lock
adc
mov
mov
fwait
cli
and
mov
adc
clc
cmpl
rol
or
add
jle
add
jl
imul
adc
xor
rep
js
sub
push
add
mov
addr16
vpcmpgtb
inc
add
stos
insb
add
lret
cmp
adc
dec
js
mov
add
mov
mov
in
movb
add
mov
sahf
fdivr
out
sbb
in
loopne
mov
add
push
jbe
xor
addb
mov
jae
mov
pop
stos
mov
sbb
fldenv
mov
mov
xchg
mov
dec
push
mov
scas
mov
mov
or
movsb
gs
loope
test
mov
stc
add
add
jno
mov
scas
jnp
sub
hlt
out
cmp
add
mov
xchg
in
sub
add
sub
bound
mov
add
dec
jg
jae
mov
sub
mov
addb
mov
pop
jecxz
xchg
ljmp
mov
sbb
mov
mov
add
bound
mov
loope
popf
dec
jg
adc
fldenv
jno
push
add
or
cs
xchg
push
add
jl
xor
repz
addr16
stos
sbb
dec
xor
mov
imul
mov
push
inc
add
ljmp
es
movsb
xchg
add
push
divb
pop
push
pop
cltd
mov
jns
out
xchg
dec
leave
lret
mov
add
xchg
cld
dec
sub
insb
rolb
mov
add
mov
loop
mov
fisttpll
cmp
stos
je
add
add
push
add
mov
mov
fs
adc
lahf
aam
rol
addr16
bound
mov
jmp
add
in
sbb
dec
rolb
mov
lret
in
sbb
gs
push
add
mov
inc
loop
mov
mov
into
adc
ja
sti
test
mov
mov
test
sub
add
call
xchg
inc
scas
addl
mov
fdivs
mov
inc
jge
test
mov
xchg
test
cltd
mov
mov
add
mov
add
inc
add
leave
jae
xorl
sbb
add
mov
add
cli
sti
aad
and
mov
inc
repnz
mov
add
or
arpl
fnstenv
mov
adc
hlt
pop
outsl
pusha
add
mov
and
mov
sahf
xchg
aad
add
inc
dec
insl
and
fs
rolb
addb
sub
inc
fsubl
call
ss
jns
adc
push
xor
push
jmp
scas
push
data16
mov
cmc
lret
sarl
mov
mov
and
mov
sub
jae
jae
add
mov
leave
jb
mov
pop
inc
sub
repnz
jmp
mov
lahf
pop
xchg
add
mov
mov
add
adc
add
fisubrs
inc
add
push
mov
adc
movzbl
cltd
inc
jne
jno
mov
mov
cwtl
pop
xchg
call
inc
add
rolb
mov
xlat
out
subl
or
and
ss
mov
xor
mov
ja
mov
push
jle
shll
mov
inc
lret
int
add
sbbl
sbb
add
ffree
cmc
cli
sbb
add
rolb
mov
add
or
jbe
pop
mov
daa
cmc
jge
pushf
faddp
cltd
repnz
and
add
mov
xor
in
jg
mov
jp
dec
lods
outsb
cmp
mov
fcmovnbe
lds
movsb
loop
mov
add
jno
xchg
pop
int3
sbb
test
test
daa
mov
in
and
mov
mov
xchg
add
bound
mov
mov
negb
jns
mov
xor
mov
mov
add
xchg
add
mov
push
add
add
mov
cli
bound
mov
call
ljmp
cmp
filds
enter
push
cwtl
aam
mov
loopne
mov
or
sbb
inc
add
aam
fcmovbe
call
sbb
jae
jnp
mov
mov
sub
add
dec
imul
js
sbb
das
cltd
insl
push
or
inc
add
or
add
mov
outsl
adc
orl
insl
xchg
mov
mov
mov
add
dec
dec
stos
mov
mov
push
enter
mov
cld
ss
clc
push
jnp
xor
repz
loopne
mov
fxch
pause
add
add
add
add
add
push
cwtl
mov
addb
sbb
movsb
cmp
fdivrl
mov
push
mov
mov
push
cs
mov
fwait
jle
jb
mov
shr
ja
imull
mov
mov
int
and
popf
insl
mov
pop
lods
mov
cli
sub
add
mov
mov
jle
in
jae
stos
xor
mov
loop
mov
add
add
lret
add
mov
sbb
add
loope
aam
sbb
andl
mov
pop
mov
sti
out
test
dec
fwait
sub
lahf
rolb
mov
mov
mov
pop
sub
add
inc
test
xorl
add
clc
dec
xor
push
arpl
jge
je
cmp
jno
add
mov
add
out
out
add
fsubs
mov
cmp
push
jbe
shl
push
les
mov
mov
jecxz
push
lods
fstpl
mov
into
mov
and
mov
add
jg
int
sbb
sbb
add
lock
outsb
rolb
mov
jae
pushf
mov
les
add
or
ds
scas
jns
add
fsubp
add
fistl
mov
fsubr
xchg
jmp
add
add
mov
das
lds
rolb
mov
and
mov
add
or
in
dec
int3
addr16
cld
add
mov
jecxz
popf
cmp
outsl
mov
mov
cld
add
mov
aam
addb
inc
std
movsl
adc
mov
mov
add
jae
es
mov
lea
push
pop
cld
and
mov
add
into
cmp
mov
cmp
fmuls
xor
mov
jg
mov
jbe
and
mov
jge
cmp
inc
mov
xor
and
jns
call
push
adc
scas
add
mov
test
push
add
mov
mov
add
mov
sub
push
lret
pop
sub
mov
movsb
mov
or
sub
mov
xchg
pop
inc
and
lea
dec
hlt
pop
xchg
xchg
or
mov
mov
sti
push
add
add
in
cmp
push
or
add
mov
das
shrl
mov
addb
ret
pop
mov
inc
add
pop
cwtl
cmp
add
xor
lcall
add
add
jns
add
mov
repz
dec
aas
sub
mov
xlat
aas
test
sub
jmp
es
jbe
loope
xor
mov
sbb
loop
mov
in
jp
mov
mov
add
xchg
add
lods
mov
in
push
mull
add
mov
movsl
cmp
lea
sbb
mov
jle
add
dec
inc
ljmp
add
pop
incl
add
and
inc
lcall
lcall
imul
lahf
es
js
imul
mov
test
add
call
mov
add
loop
mov
push
ja
push
add
mov
jns
add
mov
mov
fucomip
mov
add
ja
aam
ss
decl
filds
cmp
add
mov
lea
cmp
pop
sbb
pop
imul
js,pn
dec
or
jle
add
cmp
cld
adc
mov
add
add
lret
inc
dec
addb
test
xchg
out
push
into
mov
add
mov
adcl
add
push
pop
cld
fisttpl
and
int
iret
scas
repz
movsb
dec
mov
mov
xor
lea
push
add
jge
sub
leave
mov
mov
mov
push
sub
xor
mov
sti
jmp
sub
push
pop
mov
scas
out
les
rolb
mov
ret
rcrl
cmp
jns
add
repz
div
inc
popf
sub
jp
nop
add
mov
addb
fsubs
fidivrs
addb
mov
mov
mov
mov
jb
mov
mov
jnp
mov
jo
mov
scas
cmp
mov
add
add
mov
inc
add
add
shrl
push
cltd
jne
add
add
jne
das
or
idivb
xchg
dec
hlt
ret
push
movsb
dec
inc
fwait
mov
fmul
in
and
xchg
dec
sbb
stc
ds
outsl
dec
adc
mov
sbb
lret
mov
pop
daa
sbb
ss
jl
mov
cmp
xchg
sub
sahf
fimull
mov
stc
add
mov
les
inc
or
mov
mov
into
mov
mov
and
adc
pop
push
andl
mov
mov
mov
popa
pop
fisubs
lsl
call
movsl
popf
lea
and
imul
popf
adc
sbb
xor
aaa
imul
ljmp
push
lock
add
jmp
addr16
add
cmp
push
add
lret
pop
adc
mov
gs
add
test
jae
ljmp
mov
mov
add
sub
sub
add
or
lods
lods
and
add
jno
in
add
pop
inc
addb
loop
mov
imul
mov
xchg
add
xor
mov
mov
js
cmp
movsb
clc
sub
push
cmp
add
jle
pop
push
adc
mov
pop
addb
pushf
cs
stc
fadds
add
cmpl
std
jne
push
in
and
xchg
lret
jo
mov
push
addb
xchg
stos
xor
mov
and
mov
test
cmp
add
add
mov
mov
pop
aas
jne
pop
sqrtps
fs
mov
sbb
mov
stc
repnz
add
jmp
jne
add
dec
popf
add
add
add
